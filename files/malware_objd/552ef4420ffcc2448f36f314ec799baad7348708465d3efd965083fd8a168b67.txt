
552ef4420ffcc2448f36f314ec799baad7348708465d3efd965083fd8a168b67.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	push   ebx
  401007:	mov    DWORD PTR [ebp-0x48],0x0
  40100e:	mov    DWORD PTR [ebp-0x18],0x0
  401015:	mov    DWORD PTR [ebp-0x70],0x0
  40101c:	mov    DWORD PTR [ebp-0x60],0x0
  401023:	mov    DWORD PTR [ebp-0x8],0x0
  40102a:	mov    DWORD PTR [ebp-0x6c],0x0
  401031:	mov    DWORD PTR [ebp-0x68],0x0
  401038:	mov    DWORD PTR [ebp-0x14],0x0
  40103f:	mov    DWORD PTR [ebp-0x4c],0x0
  401046:	mov    DWORD PTR [ebp-0x10],0x0
  40104d:	mov    DWORD PTR [ebp-0x58],0x0
  401054:	mov    DWORD PTR [ebp-0x4],0x0
  40105b:	mov    DWORD PTR [ebp-0x5c],0x0
  401062:	mov    DWORD PTR [ebp-0x30],0x0
  401069:	mov    DWORD PTR [ebp-0x54],0x0
  401070:	mov    DWORD PTR [ebp-0x2c],0x0
  401077:	mov    DWORD PTR [ebp-0x50],0x0
  40107e:	mov    DWORD PTR [ebp-0xc],0x0
  401085:	mov    eax,ds:0x449e08
  40108a:	mov    DWORD PTR [ebp-0x28],eax
  40108d:	mov    ecx,DWORD PTR ds:0x449e0c
  401093:	mov    DWORD PTR [ebp-0x24],ecx
  401096:	mov    edx,DWORD PTR ds:0x449e10
  40109c:	mov    DWORD PTR [ebp-0x20],edx
  40109f:	mov    al,ds:0x449e14
  4010a4:	mov    BYTE PTR [ebp-0x1c],al
  4010a7:	mov    ecx,DWORD PTR ds:0x449e18
  4010ad:	mov    DWORD PTR [ebp-0x40],ecx
  4010b0:	mov    edx,DWORD PTR ds:0x449e1c
  4010b6:	mov    DWORD PTR [ebp-0x3c],edx
  4010b9:	mov    eax,ds:0x449e20
  4010be:	mov    DWORD PTR [ebp-0x38],eax
  4010c1:	mov    cx,WORD PTR ds:0x449e24
  4010c8:	mov    WORD PTR [ebp-0x34],cx
  4010cc:	mov    dl,BYTE PTR ds:0x449e26
  4010d2:	mov    BYTE PTR [ebp-0x32],dl
  4010d5:	mov    DWORD PTR [ebp-0x30],0x40
  4010dc:	lea    eax,[ebp-0x40]
  4010df:	push   eax
  4010e0:	lea    ecx,[ebp-0x10]
  4010e3:	push   ecx
  4010e4:	call   DWORD PTR ds:0x418000
  4010ea:	test   eax,eax
  4010ec:	je     0x4167b5
  4010f2:	mov    edx,DWORD PTR [ebp-0x10]
  4010f5:	add    edx,0x1
  4010f8:	mov    DWORD PTR [ebp-0x10],edx
  4010fb:	int    0x34
  4010fd:	lods   eax,DWORD PTR ds:[esi]
  4010fe:	cmp    BYTE PTR [esi+0x30],bl
  401101:	and    DWORD PTR [esi-0x27],esi
  401104:	aas    
  401105:	cdq    
  401106:	and    BYTE PTR [esi],0x58
  401109:	nop
  40110a:	inc    eax
  40110b:	adc    DWORD PTR [eax],edx
  40110d:	ins    BYTE PTR es:[edi],dx
  40110e:	push   ecx
  40110f:	sub    BYTE PTR [ecx-0x1],cl
  401112:	dec    edx
  401113:	mov    ah,0x24
  401115:	jnp    0x4010d7
  401117:	cld    
  401118:	ud1    ebp,DWORD PTR [ebx-0x38]
  40111c:	mov    ecx,edx
  40111e:	mov    ch,bh
  401120:	int    0x24
  401122:	(bad)  
  401123:	adc    cl,BYTE PTR [esi+eax*2+0x447af46c]
  40112a:	div    DWORD PTR [eax+0x72]
  40112d:	daa    
  40112e:	or     eax,0x6801254d
  401133:	mov    bh,0xf0
  401135:	mov    bh,0x3b
  401137:	dec    eax
  401138:	jmp    0x957b:0xd06a8190
  40113f:	aas    
  401140:	sub    al,0xac
  401142:	in     al,0x22
  401144:	xchg   esp,eax
  401145:	push   DWORD PTR [esi]
  401147:	in     al,dx
  401148:	inc    ecx
  401149:	xchg   ebp,eax
  40114a:	sbb    dh,BYTE PTR [ebp+0x2e]
  40114d:	popa   
  40114e:	push   0xc8930af3
  401153:	or     ecx,DWORD PTR [edx-0x201961ec]
  401159:	lahf   
  40115a:	mov    eax,0x9e9670d5
  40115f:	and    BYTE PTR [edx],bl
  401161:	pop    esp
  401162:	daa    
  401163:	(bad)  
  401164:	jmp    0x41f3:0xa41a2b63
  40116b:	or     eax,0x78956d0b
  401170:	ins    DWORD PTR es:[edi],dx
  401171:	pop    eax
  401172:	and    BYTE PTR [ecx+0x3140dbe7],cl
  401178:	enter  0x7e2,0x61
  40117c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40117d:	sub    DWORD PTR [ebp+eax*2-0x71eb79a9],edx
  401184:	cwde   
  401185:	pop    ebp
  401186:	sbb    BYTE PTR ds:0x72cd97d5,dl
  40118c:	ja     0x4011d5
  40118e:	sahf   
  40118f:	loop   0x401156
  401191:	xchg   ebp,eax
  401192:	ret    
  401193:	sbb    ebx,DWORD PTR [ebp+eax*4+0x31]
  401197:	dec    edx
  401198:	ror    dh,0xd4
  40119b:	fsubr  DWORD PTR [eax+0x5e]
  40119e:	or     eax,DWORD PTR ds:0xeab2fe44
  4011a4:	or     esi,edx
  4011a6:	cmc    
  4011a7:	sub    al,0xa4
  4011a9:	add    edx,DWORD PTR [edi+0x3279b8c6]
  4011af:	xor    ah,ch
  4011b1:	sub    eax,0x3bcc33fc
  4011b6:	ds cwde 
  4011b8:	test   BYTE PTR [ecx],bl
  4011ba:	sbb    eax,0x4b1377b6
  4011bf:	rep lods al,BYTE PTR ds:[esi]
  4011c1:	repz sbb al,0x12
  4011c4:	inc    ebx
  4011c5:	sbb    al,0x7d
  4011c7:	test   BYTE PTR [ebx],cl
  4011c9:	jmp    0xcaeb2401
  4011ce:	mov    ebx,0x79cf18c6
  4011d3:	dec    ebx
  4011d4:	jnp    0x4011b3
  4011d6:	pop    edx
  4011d7:	add    ch,cl
  4011d9:	div    DWORD PTR [ebx]
  4011db:	mov    WORD PTR [edx*1-0x54980f51],ds
  4011e2:	frstpm(287 only) 
  4011e4:	jp     0x40119f
  4011e6:	cmc    
  4011e7:	xor    eax,0x31323983
  4011ec:	sbb    ebp,esp
  4011ee:	dec    eax
  4011ef:	loope  0x4011fb
  4011f1:	cmp    eax,0x4b059d03
  4011f6:	mov    ds:0xaa0a50a3,eax
  4011fb:	mov    ds:0xa6fbe387,eax
  401200:	scas   al,BYTE PTR es:[edi]
  401201:	jg     0x4011d0
  401203:	test   al,0xbc
  401205:	add    DWORD PTR [ebp+0x7],esp
  401208:	cmp    al,0xda
  40120a:	mov    ds:0xd13c6614,eax
  40120f:	es jge 0x40119d
  401212:	cmp    DWORD PTR [edi+0x381aa77f],esp
  401218:	pop    eax
  401219:	out    0x29,al
  40121b:	cli    
  40121c:	ret    
  40121d:	push   esp
  40121e:	xor    DWORD PTR [edx+0x47c2c150],eax
  401224:	push   es
  401225:	sbb    cl,BYTE PTR ds:[eax+edi*1]
  401229:	aam    0x6d
  40122b:	ret    
  40122c:	sub    eax,0x34627160
  401231:	mov    eax,ds:0x5ebf4482
  401236:	mov    edi,0x2b5afd83
  40123b:	add    al,0x87
  40123d:	push   eax
  40123e:	rol    DWORD PTR [edx+0xfdb09],0x2f
  401245:	daa    
  401246:	out    0x30,eax
  401248:	mov    bh,BYTE PTR [eax+0x474ec7ec]
  40124e:	or     al,0xf7
  401250:	(bad)  
  401251:	sub    al,0xf9
  401253:	int    0x6e
  401255:	add    ebp,DWORD PTR [edx-0x74]
  401258:	lods   al,BYTE PTR ds:[esi]
  401259:	push   ebp
  40125a:	into   
  40125b:	in     eax,0xe9
  40125d:	mov    DWORD PTR [edi],esi
  40125f:	sbb    BYTE PTR [ebx+0x14],cl
  401262:	xchg   ebx,eax
  401263:	pop    ebx
  401264:	outs   dx,DWORD PTR ds:[esi]
  401265:	mov    edx,0x885b25a6
  40126a:	lock sub eax,0xff9a2d16
  401270:	xchg   ecx,eax
  401271:	pop    es
  401272:	mov    bl,0x51
  401274:	xchg   esp,eax
  401275:	xor    al,0xe3
  401277:	in     al,dx
  401278:	mov    dl,0xad
  40127a:	mov    ah,0xbc
  40127c:	pop    edi
  40127d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40127e:	sete   BYTE PTR [esi+0x5b]
  401282:	inc    ecx
  401283:	(bad)  
  401284:	mov    ?,WORD PTR [ebp-0x4b]
  401287:	sbb    DWORD PTR [esp+ebx*1+0x53456f],ecx
  40128e:	push   0xffffffc8
  401290:	sub    esi,DWORD PTR [edx]
  401292:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401293:	mov    edx,0xc89a8669
  401298:	hlt    
  401299:	ror    ebx,1
  40129b:	xor    al,0xcd
  40129d:	xchg   ecx,eax
  40129e:	and    bl,cl
  4012a0:	cmp    ah,bl
  4012a2:	mov    ch,BYTE PTR [eax+ebx*8]
  4012a5:	adc    ch,0x1b
  4012a8:	sbb    ch,BYTE PTR [edi+ebp*2]
  4012ab:	mov    BYTE PTR [ecx-0x5184af5],al
  4012b1:	sbb    DWORD PTR [ebp+0x2d1005d2],esi
  4012b7:	dec    esp
  4012b8:	dec    edi
  4012b9:	dec    esi
  4012ba:	mov    ecx,0x5a4c8908
  4012bf:	cld    
  4012c0:	fdiv   DWORD PTR [bx+si+0x7c]
  4012c4:	push   esp
  4012c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4012c6:	sub    eax,0xceea32a0
  4012cb:	sbb    ecx,ecx
  4012cd:	fidiv  DWORD PTR [edi+0x744a1a3c]
  4012d3:	stos   DWORD PTR es:[edi],eax
  4012d4:	sbb    DWORD PTR [ebp-0x74],esp
  4012d7:	aas    
  4012d8:	or     cl,ch
  4012da:	push   esp
  4012db:	dec    edi
  4012dc:	or     edx,esp
  4012de:	lds    ebx,FWORD PTR [eax-0x5c]
  4012e1:	and    DWORD PTR [eax-0x1feff986],esi
  4012e7:	sub    BYTE PTR [edi+0x37],bl
  4012ea:	pop    edx
  4012eb:	inc    ecx
  4012ec:	xor    al,ch
  4012ee:	mov    esi,0xc4d2d926
  4012f3:	cmc    
  4012f4:	mov    esp,0x72dcf101
  4012f9:	sub    ebp,DWORD PTR ss:[edx+esi*4+0x224ed712]
  401301:	and    al,0x54
  401303:	shl    edx,1
  401305:	xor    al,0x8d
  401307:	inc    ebx
  401308:	sbb    cl,BYTE PTR [edi]
  40130a:	cwde   
  40130b:	rol    dl,cl
  40130d:	pop    ebx
  40130e:	aad    0x6b
  401310:	das    
  401311:	sbb    BYTE PTR [ebp+0x60],0xfa
  401315:	push   edi
  401316:	add    cl,bl
  401318:	inc    edx
  401319:	mov    ebx,0xf568d794
  40131e:	mov    ch,0x7c
  401320:	cs jno 0x401338
  401323:	or     BYTE PTR [ebx+eax*4+0x29],dl
  401327:	scas   al,BYTE PTR es:[edi]
  401328:	push   esp
  401329:	popf   
  40132a:	xor    al,0x14
  40132c:	or     BYTE PTR [ebx],bh
  40132e:	leave  
  40132f:	and    eax,0x6c0a63aa
  401334:	mov    ebp,0xb88d4e38
  401339:	or     al,0xc9
  40133b:	div    BYTE PTR [eax-0xcd5c8eb]
  401341:	arpl   WORD PTR [eax-0x2d],di
  401344:	out    0x77,eax
  401346:	jb     0x40139f
  401348:	fdiv   QWORD PTR [edx]
  40134a:	sub    bh,bl
  40134c:	std    
  40134d:	cmp    BYTE PTR [esi],cl
  40134f:	fsubr  QWORD PTR [edi]
  401351:	add    bl,BYTE PTR [eax-0x274e749f]
  401357:	loop   0x401320
  401359:	ret    
  40135a:	loopne 0x40137f
  40135c:	adc    al,0xcd
  40135e:	(bad)  
  40135f:	std    
  401360:	in     eax,dx
  401361:	fisub  DWORD PTR [edx-0x3e543d2e]
  401367:	and    edi,edx
  401369:	jmp    0x4013ac
  40136b:	mov    ecx,0xc8bc5b46
  401370:	aad    0x63
  401372:	ret    0x38ed
  401375:	enter  0x9bd,0x3e
  401379:	push   es
  40137a:	push   ebp
  40137b:	test   al,0x2
  40137d:	jg     0x40130b
  40137f:	js     0x4013ea
  401381:	cmp    al,0x2b
  401383:	popf   
  401384:	adc    BYTE PTR [edi],cl
  401386:	pop    ecx
  401387:	mov    edi,0x4e90a96e
  40138c:	sbb    ecx,DWORD PTR [edx+0x3df379da]
  401392:	cli    
  401393:	and    DWORD PTR [eax-0x72be3726],ebp
  401399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40139a:	rcr    BYTE PTR [ebx],0xe8
  40139d:	faddp  st(4),st
  40139f:	fstp   QWORD PTR [eax]
  4013a1:	push   edi
  4013a2:	xor    bl,BYTE PTR [ebp+ebp*1+0x47]
  4013a6:	mov    ss,WORD PTR ds:0x28ad69b6
  4013ac:	jle    0x40135b
  4013ae:	jbe    0x40140a
  4013b0:	fnstenv [esi]
  4013b2:	jg     0x4013aa
  4013b4:	stos   BYTE PTR es:[edi],al
  4013b5:	into   
  4013b6:	pop    edi
  4013b7:	sahf   
  4013b8:	mov    ch,0x5a
  4013ba:	pop    eax
  4013bb:	mov    ds:0x7d47394f,eax
  4013c0:	outs   dx,DWORD PTR ds:[esi]
  4013c1:	fs cs xchg ebx,eax
  4013c4:	mov    es,WORD PTR [ebp+0x6e]
  4013c7:	add    DWORD PTR [ecx+0x1f],ecx
  4013ca:	hlt    
  4013cb:	outs   dx,BYTE PTR ds:[esi]
  4013cc:	and    bl,BYTE PTR [eax+0x34]
  4013cf:	mov    edx,0x1a450b10
  4013d4:	dec    esi
  4013d5:	jns    0x401425
  4013d7:	xor    al,0x60
  4013d9:	(bad)  
  4013db:	push   edi
  4013dc:	(bad)
  4013df:	rol    edi,cl
  4013e1:	mov    ds:0xe854c5c9,al
  4013e6:	fcmove st,st(5)
  4013e8:	and    dl,BYTE PTR [edx]
  4013ea:	add    DWORD PTR [ebx],ebx
  4013ec:	inc    esp
  4013ed:	pop    ebp
  4013ee:	fisub  WORD PTR [ebx-0x6]
  4013f1:	sub    eax,0xe94e6397
  4013f6:	cs push eax
  4013f8:	xchg   ebp,eax
  4013f9:	shl    DWORD PTR [edi],1
  4013fb:	sbb    BYTE PTR [ebp+0x14d7405],ah
  401401:	xchg   ebx,eax
  401402:	xor    eax,0x12663329
  401407:	mov    esp,gs
  401409:	out    dx,eax
  40140a:	jnp    0x40142f
  40140c:	dec    esp
  40140d:	xor    dh,BYTE PTR [eax-0x74]
  401410:	pushf  
  401411:	push   ss
  401412:	pushf  
  401413:	push   cs
  401414:	add    eax,0x8e40437b
  401419:	mov    edi,DWORD PTR [ebp+0x78]
  40141c:	rcl    DWORD PTR [edi-0x1a],0xa0
  401420:	cwde   
  401421:	xchg   DWORD PTR [ecx+0x2e954b7c],ebx
  401427:	xchg   edx,eax
  401428:	mov    bh,0xbe
  40142a:	mov    ch,0x8d
  40142c:	dec    edx
  40142d:	je     0x401416
  40142f:	sbb    BYTE PTR [edx-0x55],bl
  401432:	sub    ecx,ebx
  401434:	iret   
  401435:	or     ebp,DWORD PTR [edi-0x1d]
  401438:	popf   
  401439:	fsub   QWORD PTR [ecx-0x4d]
  40143c:	and    eax,0xc386fcf2
  401441:	ret    0x7aff
  401444:	sub    eax,0x468cbfaa
  401449:	ror    DWORD PTR [esi-0x4a],cl
  40144c:	das    
  40144d:	sbb    cl,BYTE PTR [eax-0xd]
  401450:	sbb    dh,bl
  401452:	mov    ebp,0x18a2b9d8
  401457:	xchg   BYTE PTR [edi],cl
  401459:	cld    
  40145a:	push   cs
  40145b:	scas   eax,DWORD PTR es:[edi]
  40145c:	mov    cl,0xf8
  40145e:	outs   dx,BYTE PTR ds:[esi]
  40145f:	shl    ecx,cl
  401461:	shl    BYTE PTR [esi-0x1f2ddd89],cl
  401467:	or     al,0x18
  401469:	test   eax,0xdf137f6b
  40146e:	jmp    0x5610:0x6805f90f
  401475:	xchg   esp,eax
  401476:	pop    eax
  401477:	mov    edx,0xcc4d5756
  40147c:	xchg   ebx,eax
  40147d:	iret   
  40147e:	mov    edi,0x67561dd5
  401483:	sub    BYTE PTR [esi+0x7f9f609b],0x95
  40148a:	cmp    ebp,0x22
  40148d:	inc    eax
  40148e:	jbe    0x4014d2
  401490:	in     al,dx
  401491:	xchg   ebp,eax
  401492:	mov    esp,0xe0594992
  401497:	xor    edx,DWORD PTR [edx-0x67]
  40149a:	inc    ebp
  40149b:	lahf   
  40149c:	dec    eax
  40149d:	and    eax,0x1469198e
  4014a2:	sub    eax,0xa16a3476
  4014a7:	cmp    bh,BYTE PTR [esi+0x3f]
  4014aa:	add    bl,BYTE PTR [edi+0x42]
  4014ad:	je     0x40144a
  4014af:	popa   
  4014b0:	shrd   esp,ebp,cl
  4014b3:	mov    al,BYTE PTR [ecx]
  4014b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014b6:	dec    edx
  4014b7:	loopne 0x4014ca
  4014b9:	loopne 0x401452
  4014bb:	pop    esi
  4014bc:	add    dh,ah
  4014be:	sti    
  4014bf:	enter  0xc947,0xc3
  4014c3:	mov    bl,0x4
  4014c5:	retf   0xa2b3
  4014c8:	jle    0x4014e4
  4014ca:	cmp    eax,DWORD PTR [ebp-0x331bd848]
  4014d0:	stc    
  4014d1:	sbb    ah,BYTE PTR [edi+0x76]
  4014d4:	sub    ah,BYTE PTR [esi+0x30]
  4014d7:	div    BYTE PTR [edi]
  4014d9:	pop    ebp
  4014da:	lds    esi,FWORD PTR [eax-0x5a373632]
  4014e0:	pop    ecx
  4014e1:	enter  0x90ea,0x5d
  4014e5:	xchg   ebx,eax
  4014e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014e7:	pop    eax
  4014e8:	inc    eax
  4014e9:	test   al,0xdf
  4014eb:	lods   eax,DWORD PTR ds:[esi]
  4014ec:	cmp    al,0xf3
  4014ee:	mov    ?,esi
  4014f0:	mov    eax,0xf4ae5eef
  4014f5:	popa   
  4014f6:	mov    esp,0xfdf7a1ca
  4014fb:	xor    DWORD PTR [eax+0x57],esi
  4014fe:	int    0x5c
  401500:	cmp    al,0x8f
  401502:	sbb    al,0x71
  401504:	addr16 int 0x55
  401507:	sti    
  401508:	xchg   DWORD PTR [ebx+ecx*4+0x1dec5c4],edx
  40150f:	mov    cl,0xf7
  401511:	mov    dl,0x6f
  401513:	and    dh,bh
  401515:	fldcw  WORD PTR [esp+ebx*2-0x2be6f7b5]
  40151c:	dec    ebx
  40151d:	rcl    BYTE PTR [edi+0x64],0x94
  401521:	cs jae 0x4014bc
  401524:	ins    BYTE PTR es:[edi],dx
  401525:	dec    eax
  401526:	adc    esi,ecx
  401528:	mov    WORD PTR [ebx+0x7b0e064d],es
  40152e:	jmp    0xe66a:0x8a6cbf48
  401535:	and    BYTE PTR [edx],ch
  401537:	je     0x40156c
  401539:	adc    al,0xf3
  40153b:	pop    ebp
  40153c:	in     al,dx
  40153d:	xor    BYTE PTR [eax],cl
  40153f:	je     0x401530
  401541:	ins    DWORD PTR es:[edi],dx
  401542:	retf   
  401543:	mov    ch,0x36
  401545:	daa    
  401546:	fwait
  401547:	mov    ch,0x2
  401549:	loop   0x401548
  40154b:	mov    cl,0x5e
  40154d:	mov    dl,0x1b
  40154f:	add    cl,BYTE PTR [ebx+0x49]
  401552:	jne    0x401536
  401554:	mov    al,0x1
  401556:	or     eax,0x443c2e06
  40155b:	pusha  
  40155c:	pop    es
  40155d:	repz mov edi,DWORD PTR [ebp-0x1a]
  401561:	loopne 0x40158a
  401563:	pushf  
  401564:	jae    0x4014f5
  401566:	jmp    0x56b2:0xbd309bb8
  40156d:	adc    edx,DWORD PTR [edi-0xe]
  401570:	cmp    eax,DWORD PTR [edx+0x9]
  401573:	int3   
  401574:	mov    ecx,0x1b8710ed
  401579:	dec    ebp
  40157a:	ret    0x7f1a
  40157d:	mov    al,ds:0x61381aeb
  401582:	lds    ebx,FWORD PTR [edx+0x7e]
  401585:	shl    DWORD PTR [esi+0x712ce2b],cl
  40158b:	shl    ebp,1
  40158d:	mov    esi,0x314e1872
  401592:	cld    
  401593:	cmp    DWORD PTR [ebx],eax
  401595:	jno    0x4015af
  401597:	daa    
  401598:	rep movs BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40159b:	mov    dh,0x1a
  40159d:	outs   dx,DWORD PTR ds:[esi]
  40159e:	sub    BYTE PTR ds:0x3f6b7fe2,ch
  4015a4:	sub    eax,0xa3aedc78
  4015a9:	jl     0x40155b
  4015ab:	fild   DWORD PTR [ecx]
  4015ad:	test   DWORD PTR [edi],esi
  4015af:	mov    ebp,0xdeaad0ea
  4015b4:	cmp    al,0x52
  4015b6:	stos   BYTE PTR es:[edi],al
  4015b7:	pop    esi
  4015b8:	and    BYTE PTR [edx-0x1b],dl
  4015bb:	pop    ss
  4015bc:	mov    esp,0xdb7eeed7
  4015c1:	push   ss
  4015c2:	std    
  4015c3:	lods   eax,DWORD PTR ds:[esi]
  4015c4:	outs   dx,DWORD PTR ds:[esi]
  4015c5:	xchg   esi,ebx
  4015c7:	loopne 0x4015c9
  4015c9:	pop    es
  4015ca:	adc    ah,bh
  4015cc:	cwde   
  4015cd:	retf   
  4015ce:	imul   eax,DWORD PTR [eax+0x24],0x44
  4015d2:	dec    edi
  4015d3:	mov    edx,0x29dfffe4
  4015d8:	inc    esi
  4015d9:	and    ebx,esi
  4015db:	mov    bh,al
  4015dd:	sbb    bl,BYTE PTR [ecx]
  4015df:	test   DWORD PTR [edx],esp
  4015e1:	and    eax,0x3a7e7369
  4015e6:	xor    ebx,DWORD PTR [ecx-0x7399cbde]
  4015ec:	clc    
  4015ed:	sub    al,BYTE PTR [eax]
  4015ef:	and    BYTE PTR [ebx-0x6b5cd2f0],ch
  4015f5:	out    dx,al
  4015f6:	mov    ah,BYTE PTR [ecx]
  4015f8:	and    bh,BYTE PTR [ecx+0x6c]
  4015fb:	or     al,0xa6
  4015fd:	pop    esp
  4015fe:	repnz retf 0x19af
  401602:	gs cli 
  401604:	push   es
  401605:	jbe    0x40165a
  401607:	inc    esp
  401608:	inc    esp
  401609:	mov    bl,0x45
  40160b:	pushf  
  40160c:	les    edi,FWORD PTR [edi+0x69]
  40160f:	sbb    BYTE PTR [ecx+ebx*1],0x3f
  401613:	xchg   edx,eax
  401614:	mov    ah,BYTE PTR [ebx]
  401616:	fnstcw WORD PTR [esi+ebp*4]
  401619:	pop    esi
  40161a:	shl    dl,1
  40161c:	cld    
  40161d:	push   ss
  40161e:	js     0x401639
  401620:	sub    ebx,ebp
  401622:	je     0x4015fb
  401624:	aad    0xd4
  401626:	push   es
  401627:	pusha  
  401628:	test   al,0x59
  40162a:	mov    al,ds:0x5aed2170
  40162f:	loop   0x40161c
  401631:	adc    al,0x56
  401633:	arpl   WORD PTR [ecx-0x70],bx
  401636:	ins    DWORD PTR es:[edi],dx
  401637:	xchg   esi,eax
  401638:	xchg   ecx,eax
  401639:	pop    ecx
  40163a:	pushf  
  40163b:	stos   BYTE PTR es:[edi],al
  40163c:	and    eax,DWORD PTR [ecx+0x9f60d1]
  401642:	es cld 
  401644:	sbb    al,0xe
  401646:	iret   
  401647:	mov    esp,0x1f89a42b
  40164c:	xor    ecx,edi
  40164e:	push   ebx
  40164f:	pop    DWORD PTR [ebx+ebx*4]
  401652:	mov    al,ch
  401654:	push   edi
  401655:	mov    BYTE PTR [ebp+0x4a],dl
  401658:	sbb    al,0x1
  40165a:	ret    
  40165b:	dec    ebp
  40165c:	adc    al,0x66
  40165e:	mov    dl,0x51
  401660:	stc    
  401661:	stos   BYTE PTR es:[edi],al
  401662:	lods   eax,DWORD PTR ds:[esi]
  401663:	or     DWORD PTR [eax+0x81b25f9],edi
  401669:	pop    ebp
  40166a:	sbb    ecx,DWORD PTR [ecx+0x733663bc]
  401670:	inc    ecx
  401671:	pop    ecx
  401672:	mov    edx,0x1f9311e4
  401677:	xchg   edi,eax
  401678:	sub    BYTE PTR [edi+0x60d61d93],dl
  40167e:	jnp    0x4016bf
  401680:	mov    bl,0x51
  401682:	retf   
  401683:	adc    DWORD PTR [ecx-0x2],0xa1ee993d
  40168a:	mov    al,ds:0x424512e7
  40168f:	xor    ebx,DWORD PTR [edx-0x62]
  401692:	and    al,0x2f
  401694:	mov    eax,ds:0x7276087
  401699:	(bad)  
  40169a:	dec    edi
  40169b:	xchg   esi,eax
  40169c:	das    
  40169d:	aas    
  40169e:	adc    eax,DWORD PTR [ebx-0x49]
  4016a1:	lock test BYTE PTR [esi-0x58a5fd5d],dh
  4016a8:	xor    ebp,eax
  4016aa:	sub    eax,DWORD PTR [edi+esi*2+0x2c]
  4016ae:	cdq    
  4016af:	int3   
  4016b0:	jp     0x4016a6
  4016b2:	mov    ds:0xe72ae79c,al
  4016b7:	call   0xf78:0x96765380
  4016be:	sbb    BYTE PTR [esi+ebx*1-0x1e94ffb0],bh
  4016c5:	pop    ebp
  4016c7:	es pop si
  4016ca:	jb     0x4016e4
  4016cc:	mov    bl,0x98
  4016ce:	xchg   ecx,eax
  4016cf:	push   es
  4016d0:	ja     0x4016e3
  4016d2:	std    
  4016d3:	mov    cs,WORD PTR [esi]
  4016d5:	icebp  
  4016d6:	or     edi,DWORD PTR ds:0xc82944ac
  4016dc:	popf   
  4016dd:	jmp    0xd1de:0xc30eee49
  4016e4:	cdq    
  4016e5:	js     0x4016fd
  4016e7:	mov    edi,0xfccb1736
  4016ed:	cwde   
  4016ee:	out    0x21,eax
  4016f0:	jns    0x401734
  4016f2:	push   ds
  4016f3:	inc    edi
  4016f4:	add    BYTE PTR [esp+edx*8],0x1a
  4016f8:	mov    ah,0xc2
  4016fa:	icebp  
  4016fb:	pop    ds
  4016fc:	lock mul BYTE PTR [edi+ebx*8-0x71]
  401701:	das    
  401702:	fwait
  401703:	dec    esi
  401704:	sub    edi,DWORD PTR [esp+ebp*1-0xa]
  401708:	push   ebx
  401709:	mov    ds:0x62efec7a,eax
  40170e:	addr16 mov bl,0xa9
  401711:	call   0x940d9aa0
  401716:	add    eax,0x87e5e88d
  40171b:	idiv   DWORD PTR cs:[edx-0x63]
  40171f:	push   ds
  401720:	int3   
  401721:	ficomp DWORD PTR [edi+edx*2-0x57]
  401725:	add    eax,0x6c3d9eac
  40172a:	mov    bl,0x23
  40172c:	lods   eax,DWORD PTR ds:[esi]
  40172d:	iret   
  40172e:	sub    DWORD PTR [ebx+edx*8+0x54],0xffffffd4
  401733:	mov    al,0x95
  401735:	jns    0x4016bd
  401737:	mov    cl,0xbf
  401739:	and    al,0x21
  40173b:	mov    dl,0x46
  40173d:	pop    ebp
  40173e:	in     al,dx
  40173f:	and    cl,ah
  401741:	and    dh,ah
  401743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401744:	sbb    eax,0x4b9b856b
  401749:	lods   al,BYTE PTR ds:[esi]
  40174a:	and    cl,BYTE PTR [edi-0x3c0f4543]
  401750:	push   edx
  401751:	ret    0x86a3
  401754:	data16 int3 
  401756:	retf   0xef95
  401759:	iret   
  40175a:	xchg   ebp,eax
  40175b:	stos   BYTE PTR es:[edi],al
  40175c:	pop    esi
  40175d:	jbe    0x401754
  40175f:	push   ecx
  401760:	mov    ebx,0xaef1cebf
  401765:	pop    esi
  401766:	jo     0x4017ab
  401768:	call   0x8c8ae42
  40176d:	add    al,0x3f
  40176f:	ret    
  401770:	dec    ecx
  401771:	cli    
  401772:	cmp    BYTE PTR [esi],0xb3
  401775:	mov    WORD PTR [eax-0x58],fs
  401778:	out    0x79,eax
  40177a:	out    dx,al
  40177b:	stos   DWORD PTR es:[edi],eax
  40177c:	add    al,0x6c
  40177e:	xor    eax,0x653f3ac5
  401783:	dec    esp
  401784:	rol    ecx,0x72
  401787:	cmp    al,0xc4
  401789:	sub    al,0x34
  40178b:	sbb    DWORD PTR [esi+0x5d],edx
  40178e:	or     DWORD PTR [edx+0x7e],esp
  401791:	mov    ds:0x5eceaac5,al
  401796:	neg    DWORD PTR [edi+0x23ce363]
  40179c:	and    dl,ch
  40179e:	jno    0x401798
  4017a0:	lods   eax,DWORD PTR ds:[esi]
  4017a1:	fmul   DWORD PTR [ecx-0x284c9f0d]
  4017a7:	inc    eax
  4017a8:	bound  edx,QWORD PTR [edx]
  4017aa:	fidivr DWORD PTR [ebp+0x8]
  4017ad:	retf   
  4017ae:	jmp    0xdbab28d0
  4017b3:	out    0xc9,al
  4017b5:	repnz cmp al,BYTE PTR [ebp-0x36]
  4017b9:	rcl    BYTE PTR [ebx],0xb6
  4017bc:	cmc    
  4017bd:	push   ds
  4017be:	dec    esp
  4017bf:	clc    
  4017c0:	xchg   esp,eax
  4017c1:	or     al,0x73
  4017c3:	je     0x401751
  4017c5:	imul   edx,DWORD PTR [esi],0xffffffe2
  4017c8:	jmp    eax
  4017ca:	popa   
  4017cb:	xor    BYTE PTR [eax],al
  4017cd:	mov    bh,0x2d
  4017cf:	jae    0x401823
  4017d1:	or     eax,0x25288d2e
  4017d6:	add    eax,0x4807b24d
  4017db:	jmp    0x401771
  4017dd:	mov    bh,0x75
  4017df:	jmp    0xd68c:0xb0c26439
  4017e6:	mov    al,0x2e
  4017e8:	adc    BYTE PTR [edx],bh
  4017ea:	pop    ebx
  4017eb:	jbe    0x40184a
  4017ed:	xor    al,0x37
  4017ef:	inc    edx
  4017f0:	jns    0x4017f6
  4017f2:	inc    ebp
  4017f3:	shr    dh,0xf5
  4017f6:	dec    ebx
  4017f7:	std    
  4017f8:	loop   0x401833
  4017fa:	pusha  
  4017fb:	mov    eax,0xea540502
  401800:	adc    bh,al
  401802:	xor    cl,cl
  401804:	push   ds
  401805:	popf   
  401806:	das    
  401807:	lock sbb eax,ebp
  40180a:	mov    ebx,0x116cf46d
  40180f:	pushf  
  401810:	in     al,0x35
  401812:	mov    al,0x1a
  401814:	les    esp,FWORD PTR [edx]
  401816:	jo     0x40185f
  401818:	je     0x401875
  40181a:	jmp    0x4a73a155
  40181f:	pop    eax
  401820:	jmp    0xc289cdc0
  401825:	sti    
  401826:	mov    ds:0xbc2c487b,al
  40182b:	retf   
  40182c:	popf   
  40182d:	(bad)  
  40182e:	mov    ch,0xb9
  401830:	in     al,0x3
  401832:	fnstsw WORD PTR [esi+eax*8]
  401835:	nop
  401836:	push   ecx
  401837:	mov    WORD PTR [edi],gs
  401839:	idiv   BYTE PTR ds:0xed5a9ca0
  40183f:	mov    al,0xe0
  401841:	sbb    DWORD PTR [edx+0x6dbcecee],ecx
  401847:	mov    eax,ds:0x677bc273
  40184c:	ja     0x4018b9
  40184e:	or     eax,0x7231902
  401853:	fdivr  st,st(3)
  401855:	call   0x1875feea
  40185a:	adc    al,0x6d
  40185c:	jge    0x401819
  40185e:	and    al,0xb4
  401860:	dec    edi
  401861:	and    al,0x89
  401863:	xchg   ebp,eax
  401864:	add    ah,bl
  401866:	jno    0x401853
  401868:	jns    0x40185f
  40186a:	daa    
  40186b:	xor    al,0x8b
  40186d:	jb     0x401856
  40186f:	push   0xffffffc8
  401871:	xor    eax,0xf98815b1
  401876:	aam    0x98
  401878:	jecxz  0x4018f1
  40187a:	jne    0x401841
  40187c:	dec    esp
  40187d:	jbe    0x40184c
  40187f:	push   ebp
  401880:	and    al,0x3f
  401882:	jae    0x4018b5
  401884:	ficom  DWORD PTR [eax]
  401886:	adc    al,0x5a
  401888:	dec    eax
  401889:	mov    al,0x5f
  40188b:	jle    0x4018ba
  40188d:	pushf  
  40188e:	mov    eax,ds:0xa4179675
  401893:	pop    ebx
  401894:	retf   
  401895:	pop    eax
  401896:	fs mov ebx,0x8b2585c3
  40189c:	xchg   BYTE PTR [eax],ah
  40189e:	xchg   ecx,eax
  40189f:	mov    DWORD PTR [edi+ecx*8-0x76],ebp
  4018a3:	jno    0x401882
  4018a5:	clc    
  4018a6:	and    eax,DWORD PTR [ebp+0x4245533a]
  4018ac:	cmp    eax,0xb30fed4e
  4018b1:	or     eax,0x5f484112
  4018b6:	mov    bh,0x95
  4018b8:	jge    0x40192f
  4018ba:	retf   
  4018bb:	jmp    0x1ce8:0x9c58f00f
  4018c2:	lea    ebp,[ecx-0x1b4f78b9]
  4018c8:	into   
  4018c9:	sbb    BYTE PTR [eax-0x31],al
  4018cc:	rol    edi,cl
  4018ce:	ss ss (bad) 
  4018d1:	fisttp QWORD PTR [ebx+0x70]
  4018d4:	push   eax
  4018d5:	jno    0x4018ff
  4018d7:	lock push 0xffffffae
  4018da:	push   esp
  4018db:	leave  
  4018dc:	xchg   ebp,eax
  4018dd:	dec    esp
  4018de:	add    dh,ch
  4018e0:	pop    esp
  4018e2:	lds    ecx,FWORD PTR [ebp-0x1de0a47a]
  4018e8:	mov    bh,0x37
  4018ea:	ins    BYTE PTR es:[edi],dx
  4018eb:	push   ss
  4018ec:	retf   
  4018ed:	mov    eax,ds:0x61a19631
  4018f2:	fist   DWORD PTR [ecx]
  4018f4:	push   es
  4018f5:	fild   DWORD PTR [ebx+0x34d019b1]
  4018fb:	fnstcw WORD PTR [ecx+0x7aa444]
  401901:	cmp    al,cl
  401903:	jbe    0x4018ac
  401905:	xor    DWORD PTR [edi],edx
  401907:	mov    DWORD PTR [ecx],ebp
  401909:	mov    ebp,0x75b1af6e
  40190e:	out    dx,eax
  40190f:	mov    eax,0x952fca1d
  401914:	repnz cmp esp,DWORD PTR [ebp-0xfec5d73]
  40191b:	inc    ecx
  40191c:	mov    ?,WORD PTR [eax-0x51ba3006]
  401922:	mov    eax,0x910ac3de
  401927:	cs (bad) 
  401929:	cmc    
  40192a:	test   BYTE PTR [edx-0x2c318e01],0xb8
  401931:	pop    es
  401932:	mov    ecx,0xf2d2064
  401937:	rcr    BYTE PTR [eax-0x54],0x52
  40193b:	mov    DWORD PTR es:[edi+0x5e],ecx
  40193f:	lds    esi,FWORD PTR [edx-0x724aed9c]
  401945:	stos   BYTE PTR es:[edi],al
  401946:	cmp    eax,DWORD PTR [ebx-0x3e8fd3a8]
  40194c:	test   BYTE PTR [eax+0x36],al
  40194f:	sbb    al,0x9
  401951:	mov    ecx,0x3d74222b
  401956:	iret   
  401957:	and    al,0x8f
  401959:	push   ds
  40195a:	push   eax
  40195b:	imul   esi,DWORD PTR [edi-0x2e],0x4072cb24
  401962:	inc    edi
  401963:	fdivr  DWORD PTR [eax]
  401965:	mov    ch,BYTE PTR [ebx+0x78]
  401968:	mov    ds:0xa7435647,al
  40196d:	test   eax,0xe3b2cca7
  401972:	aas    
  401973:	daa    
  401974:	cli    
  401975:	ret    0xc4e4
  401978:	jae    0x4019e9
  40197a:	add    DWORD PTR [ebp+eiz*8+0x463d48ed],ebp
  401981:	out    dx,al
  401982:	pop    eax
  401983:	jo     0x4019b1
  401985:	(bad)  
  401986:	xor    al,0x28
  401988:	cmp    al,0x5b
  40198a:	pop    ecx
  40198b:	push   edi
  40198c:	mov    ds:0xb30932ee,eax
  401991:	in     eax,0x90
  401993:	push   ds
  401994:	or     ebx,DWORD PTR [esp]
  401997:	add    DWORD PTR [ebp-0x38],esp
  40199a:	mov    ds:0x382ee60,eax
  40199f:	loopne 0x401963
  4019a1:	add    al,0x6d
  4019a3:	out    dx,eax
  4019a4:	mov    dl,0xa6
  4019a6:	jl     0x4019a6
  4019a8:	repz pusha 
  4019aa:	es test eax,0xc52341cf
  4019b0:	pop    ebp
  4019b1:	xchg   DWORD PTR [edx],edi
  4019b3:	mov    ecx,0xa54a873e
  4019b8:	outs   dx,DWORD PTR ds:[esi]
  4019b9:	mov    bh,0x54
  4019bb:	(bad)  
  4019bc:	mov    esi,DWORD PTR [edx+0x47]
  4019bf:	(bad)  
  4019c0:	sbb    DWORD PTR [edi],esp
  4019c2:	and    ebx,DWORD PTR ds:[edi-0x5ae44e75]
  4019c9:	sbb    al,0x43
  4019cb:	jb     0x4019c2
  4019cd:	(bad)  
  4019cf:	stos   DWORD PTR es:[edi],eax
  4019d0:	and    DWORD PTR [ebp+0x17],eax
  4019d3:	ins    BYTE PTR es:[edi],dx
  4019d4:	sub    ch,BYTE PTR [edi-0x79]
  4019d7:	(bad)  
  4019d8:	test   DWORD PTR ds:0x849b8dad,0x7982af41
  4019e2:	adc    DWORD PTR [esi-0x62694d5b],ebp
  4019e8:	mov    ebp,esi
  4019ea:	vshufps xmm0,xmm1,XMMWORD PTR [edi-0x3560dbc],0xc9
  4019f3:	jmp    FWORD PTR [ebp-0x72a27227]
  4019f9:	pop    esi
  4019fa:	xor    dh,BYTE PTR [esp+ebp*2]
  4019fd:	ja     0x401a52
  4019ff:	mov    esi,0x1f361c4a
  401a04:	pop    edx
  401a05:	outs   dx,DWORD PTR ds:[esi]
  401a06:	(bad)  
  401a07:	in     eax,0x60
  401a09:	xor    BYTE PTR [ecx-0x26],cl
  401a0c:	jmp    0xc016:0x8a5d4647
  401a13:	cdq    
  401a14:	push   ebx
  401a15:	fdiv   st,st(1)
  401a17:	ror    BYTE PTR [edx-0x516eb4fa],1
  401a1d:	sub    ecx,DWORD PTR [esi-0x37]
  401a20:	mov    dl,0xce
  401a22:	je     0x401a9c
  401a24:	jbe    0x401a21
  401a26:	daa    
  401a27:	add    al,0xc2
  401a29:	fs retf 0x7831
  401a2d:	adc    esp,DWORD PTR [esi+eax*1+0x2d2302dc]
  401a34:	sahf   
  401a35:	(bad)  
  401a36:	sub    dh,BYTE PTR [edx]
  401a38:	mov    esi,es
  401a3a:	bound  esi,QWORD PTR [ebp+0x2deb6949]
  401a40:	adc    ch,BYTE PTR [ecx+eiz*8+0x619e838b]
  401a47:	jmp    0x401a49
  401a49:	adc    BYTE PTR [eax+0x67d0b009],ch
  401a4f:	lahf   
  401a50:	mov    dh,0x75
  401a52:	push   0x2b420209
  401a57:	cmp    DWORD PTR [ecx+eiz*1-0x4bd9da4b],edi
  401a5e:	push   0xb06c9e72
  401a63:	inc    ebp
  401a64:	adc    bl,BYTE PTR [eax+0x390a287d]
  401a6a:	or     BYTE PTR [ebp+ebp*4+0x138f8eee],cl
  401a71:	jle    0x401a2e
  401a73:	enter  0x8499,0x1c
  401a77:	mov    bl,bl
  401a79:	pop    ss
  401a7a:	or     ebp,DWORD PTR [esi+0x649ccf40]
  401a80:	xlat   BYTE PTR ds:[ebx]
  401a81:	out    0xef,al
  401a83:	xor    esp,ebx
  401a85:	push   es
  401a86:	mov    eax,0xd7ee6d0b
  401a8b:	in     eax,dx
  401a8c:	push   eax
  401a8d:	lea    ebp,[ebx-0x19]
  401a90:	mov    ah,0x94
  401a92:	sbb    ah,0x6e
  401a95:	mov    edx,0x60bbd1ae
  401a9a:	je     0x401a25
  401a9c:	adc    al,0xd2
  401a9e:	sub    eax,0x4b95e23b
  401aa3:	xlat   BYTE PTR ds:[ebx]
  401aa4:	into   
  401aa5:	aaa    
  401aa6:	mov    edi,0xbe22b238
  401aab:	clc    
  401aac:	ror    edx,cl
  401aae:	xor    al,0xdc
  401ab0:	sbb    al,0x66
  401ab2:	fwait
  401ab3:	sub    dh,BYTE PTR ds:[ebp-0x74c22a3]
  401aba:	fsubr  QWORD PTR [ecx]
  401abc:	sbb    al,0x5d
  401abe:	xchg   ebx,eax
  401abf:	loopne 0x401b20
  401ac1:	mov    WORD PTR ds:[ecx+0x68935695],es
  401ac8:	jmp    0x401a8f
  401aca:	dec    esi
  401acb:	gs iretw 
  401ace:	mov    ch,0x8a
  401ad0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ad1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401ad2:	ret    0xf189
  401ad5:	mov    ds:0x1213db7c,al
  401ada:	mov    bl,0xd0
  401adc:	inc    ebx
  401add:	adc    DWORD PTR [ebp-0x66],esp
  401ae0:	sbb    eax,0xaaf0bbc3
  401ae5:	xor    esi,DWORD PTR [ebp-0x63]
  401ae8:	xchg   ecx,eax
  401ae9:	daa    
  401aea:	push   cs
  401aeb:	imul   edi,DWORD PTR [ebx-0x510474fb],0xe
  401af2:	mov    dl,0x3d
  401af4:	sub    ebx,ebx
  401af6:	fist   WORD PTR [edi-0x7b]
  401af9:	les    eax,FWORD PTR [edx-0x5]
  401afc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401afd:	mov    eax,0x592ac284
  401b02:	outs   dx,DWORD PTR ds:[esi]
  401b03:	sub    DWORD PTR [ecx-0x45],0xffffffd5
  401b07:	sbb    DWORD PTR [edx+0x12],edi
  401b0a:	ja     0x401b61
  401b0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b0d:	daa    
  401b0e:	mov    dl,0x19
  401b10:	les    ebx,FWORD PTR [edx+0xb]
  401b13:	stc    
  401b14:	jp     0x401afc
  401b16:	mov    esp,0xa9f5b25e
  401b1b:	test   eax,0x5cb130f
  401b20:	outs   dx,BYTE PTR ds:[esi]
  401b21:	stc    
  401b22:	scas   al,BYTE PTR es:[edi]
  401b23:	push   ecx
  401b24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b25:	ins    DWORD PTR es:[edi],dx
  401b26:	xor    DWORD PTR [edi-0x6e],ebp
  401b29:	into   
  401b2a:	sub    bh,BYTE PTR [ecx-0x6f]
  401b2d:	stc    
  401b2e:	out    0xe3,eax
  401b30:	mov    ebx,0xa23ecfc1
  401b35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b36:	xlat   BYTE PTR ds:[ebx]
  401b37:	sbb    BYTE PTR [ebx+edi*1],bh
  401b3a:	push   esp
  401b3b:	outs   dx,DWORD PTR ds:[esi]
  401b3c:	jae    0x401b48
  401b3e:	es mov ebp,0x71139d12
  401b44:	daa    
  401b45:	inc    eax
  401b46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401b47:	add    edx,DWORD PTR [ecx-0x2b]
  401b4a:	fist   WORD PTR [eax-0x53]
  401b4d:	add    eax,0x19372ee9
  401b52:	xor    bh,ah
  401b54:	imul   eax,DWORD PTR cs:[ebx-0x355e3d71],0x3cda698f
  401b5f:	xchg   edx,eax
  401b60:	mov    al,ds:0xee7c7e3a
  401b65:	(bad)  
  401b66:	fld    TBYTE PTR ds:0x496a2cf
  401b6c:	pop    esp
  401b6d:	icebp  
  401b6e:	repnz test eax,ebx
  401b71:	pop    esi
  401b72:	arpl   sp,si
  401b74:	mov    edi,0xce125dd9
  401b79:	test   DWORD PTR es:[ebx+0x794e8298],ecx
  401b80:	fadd   DWORD PTR [esi]
  401b82:	cs pop ecx
  401b84:	sbb    dl,BYTE PTR [ecx]
  401b86:	gs dec ebx
  401b88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b89:	rol    DWORD PTR [edi-0x594fc955],cl
  401b8f:	inc    edi
  401b90:	mov    ds:0x54c11a5c,al
  401b95:	mov    ds:0x5e85b238,eax
  401b9a:	pop    ebp
  401b9b:	outs   dx,DWORD PTR ds:[esi]
  401b9c:	ror    BYTE PTR [eax-0x77a925ab],1
  401ba2:	mov    al,0xc7
  401ba4:	popf   
  401ba5:	test   al,0x33
  401ba7:	ja     0x401b78
  401ba9:	push   0x79
  401bab:	int3   
  401bac:	pop    esp
  401bad:	adc    dl,BYTE PTR [esi-0x25]
  401bb0:	cli    
  401bb1:	dec    esi
  401bb2:	adc    cl,BYTE PTR [edi+eax*1+0x76afd935]
  401bb9:	xchg   BYTE PTR [ebx],cl
  401bbb:	push   0x6e
  401bbd:	iret   
  401bbe:	add    eax,0x55596f01
  401bc3:	mov    ah,0x51
  401bc5:	sub    ch,BYTE PTR [eax+0x7d]
  401bc8:	sahf   
  401bc9:	(bad)  
  401bca:	dec    edx
  401bcb:	movnti DWORD PTR [ebx+ecx*1+0x7f35ac17],ebp
  401bd3:	add    ch,al
  401bd5:	out    0x61,eax
  401bd7:	pop    ecx
  401bd8:	pop    es
  401bd9:	mov    cl,0x33
  401bdb:	mov    edx,0x947edc5c
  401be0:	push   ds
  401be1:	push   ebx
  401be2:	scas   al,BYTE PTR es:[edi]
  401be3:	mov    esp,0x238db7d2
  401be8:	js     0x401b9e
  401bea:	or     eax,0xee87fbe3
  401bef:	ret    0xe9b0
  401bf2:	fs mov ch,0x77
  401bf5:	stc    
  401bf6:	das    
  401bf7:	mov    eax,ebp
  401bf9:	dec    esi
  401bfa:	pop    ecx
  401bfb:	inc    edi
  401bfc:	scas   al,BYTE PTR es:[edi]
  401bfd:	jp     0x401c24
  401bff:	cmp    BYTE PTR [ebx],0xe
  401c02:	inc    esp
  401c03:	lods   al,BYTE PTR ds:[esi]
  401c04:	iret   
  401c05:	outs   dx,DWORD PTR ds:[esi]
  401c06:	dec    ebx
  401c07:	and    eax,0x97d9c764
  401c0c:	test   DWORD PTR [esi+0x73],esi
  401c0f:	in     al,0x8e
  401c11:	mov    eax,ds:0xbc7e5522
  401c16:	push   edx
  401c17:	scas   al,BYTE PTR es:[edi]
  401c18:	adc    eax,0x9c920d64
  401c1d:	mov    esp,0xcdb5d5a7
  401c22:	rcr    DWORD PTR [esi-0x384a7046],cl
  401c28:	adc    eax,0xd3cc21cf
  401c2d:	outs   dx,DWORD PTR ds:[esi]
  401c2e:	sub    al,BYTE PTR [ecx+0x31]
  401c31:	dec    edx
  401c32:	sub    al,0xba
  401c34:	sub    al,0xac
  401c36:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  401c38:	xchg   esi,eax
  401c39:	mov    esi,0x362becdd
  401c3e:	popa   
  401c3f:	jbe    0x401be5
  401c41:	popa   
  401c42:	mov    ch,0x2b
  401c44:	cmp    esi,DWORD PTR [esi-0xec39e40]
  401c4a:	outs   dx,BYTE PTR ds:[esi]
  401c4b:	or     BYTE PTR [eax-0x2583aa20],ch
  401c51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401c52:	mov    ebx,0x8d1b271d
  401c57:	push   ds
  401c58:	xchg   ebx,eax
  401c59:	data16 fidivr WORD PTR [esi+0x3e]
  401c5d:	repz jb 0x401bff
  401c60:	push   0x249c19f8
  401c65:	adc    BYTE PTR [eax+0x6b],ch
  401c68:	xchg   DWORD PTR [ebx],edi
  401c6a:	stos   DWORD PTR es:[edi],eax
  401c6b:	dec    edx
  401c6c:	in     al,dx
  401c6d:	jnp    0x401c6d
  401c6f:	inc    edx
  401c70:	sbb    ecx,DWORD PTR [ebx+edi*8]
  401c73:	adc    DWORD PTR [eax+0x2b],0xace8b425
  401c7a:	sar    BYTE PTR [esp+eax*1-0x4b],cl
  401c7e:	call   0x97f8ff7b
  401c83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c84:	retf   
  401c85:	mov    ch,0x89
  401c87:	pop    eax
  401c88:	popa   
  401c89:	xor    esi,esi
  401c8b:	rcl    DWORD PTR [ebx+ecx*1],1
  401c8e:	push   esp
  401c8f:	lea    esi,[edi]
  401c91:	shl    BYTE PTR [ebx-0x5d],1
  401c94:	fwait
  401c95:	out    dx,al
  401c96:	jne    0x401c29
  401c98:	jmp    0xc3a6:0xf96465eb
  401c9f:	jmp    0xcd4d8dd8
  401ca4:	inc    ebx
  401ca5:	xchg   BYTE PTR [ebx+0x39],bl
  401ca8:	push   edi
  401ca9:	mov    ch,0x7a
  401cab:	and    eax,0x5b70465b
  401cb0:	mov    cl,0x8c
  401cb2:	in     al,dx
  401cb3:	jnp    0x401c73
  401cb5:	inc    edx
  401cb6:	dec    ebx
  401cb7:	push   0x2b
  401cb9:	mov    al,ds:0x1b8c6e2e
  401cbe:	lea    ebx,[ebp+0x3350347f]
  401cc4:	ficom  DWORD PTR [ebx+0x20362502]
  401cca:	out    dx,eax
  401ccb:	sub    edx,edx
  401ccd:	test   eax,ebp
  401ccf:	fmul   DWORD PTR [ebp+ecx*1-0x80]
  401cd3:	clc    
  401cd4:	push   edi
  401cd5:	stos   BYTE PTR es:[edi],al
  401cd6:	dec    ecx
  401cd7:	xchg   ecx,eax
  401cd8:	je     0x401cf3
  401cda:	fstp   DWORD PTR ds:0x7ac04b3c
  401ce0:	inc    ecx
  401ce1:	pusha  
  401ce2:	fwait
  401ce3:	call   0x34258bc0
  401ce8:	(bad)  
  401ce9:	mov    esi,0xad47da91
  401cee:	les    cx,DWORD PTR [ebp+0x758f851c]
  401cf5:	pop    esp
  401cf6:	push   es
  401cf7:	push   0x4f
  401cf9:	fs or  eax,0x242cd112
  401cff:	push   0x4
  401d01:	call   0x456a1103
  401d06:	stos   DWORD PTR es:[edi],eax
  401d07:	push   ss
  401d08:	ret    0x2eb4
  401d0b:	ror    DWORD PTR [ecx+esi*1],1
  401d0e:	sar    ch,cl
  401d10:	aam    0xbe
  401d12:	xchg   ebp,eax
  401d13:	jo     0x401d5d
  401d15:	loope  0x401ce7
  401d17:	retf   0x2a18
  401d1a:	or     al,0xfe
  401d1c:	inc    esp
  401d1d:	jle    0x401ced
  401d1f:	test   BYTE PTR [edx-0x72],dh
  401d22:	push   esp
  401d23:	shl    esi,0x1e
  401d26:	lahf   
  401d27:	popf   
  401d28:	icebp  
  401d29:	xor    BYTE PTR [edi-0x4c79f196],cl
  401d2f:	cdq    
  401d30:	ins    DWORD PTR es:[edi],dx
  401d31:	repnz dec cx
  401d34:	mov    ecx,DWORD PTR [edi+edx*4-0x8aad328]
  401d3b:	cmp    eax,0x872a4e0e
  401d40:	and    eax,0x7a221bfb
  401d45:	je     0x401d74
  401d47:	xchg   esp,eax
  401d48:	imul   eax,DWORD PTR [ebp-0x2b],0x5
  401d4c:	jne    0x401d16
  401d4e:	arpl   WORD PTR [edx-0x3],ax
  401d51:	push   cs
  401d52:	mov    WORD PTR [ecx+0x56ddda2d],ds
  401d58:	rcr    DWORD PTR [ebx-0x25],1
  401d5b:	in     al,0x4d
  401d5d:	xchg   edx,eax
  401d5e:	repnz (bad) 
  401d60:	gs push esp
  401d62:	gs sbb al,0x39
  401d65:	add    al,BYTE PTR [edx-0x77ab4aee]
  401d6b:	nop
  401d6c:	xchg   DWORD PTR [ebx-0xb0b1050],ebp
  401d72:	pop    ss
  401d73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d74:	add    bl,BYTE PTR [edx]
  401d76:	mov    dl,0x8
  401d78:	mov    al,0xc7
  401d7a:	stos   DWORD PTR es:[edi],eax
  401d7b:	retf   0x484e
  401d7e:	arpl   WORD PTR [ecx],si
  401d80:	pop    edx
  401d81:	and    dl,bh
  401d83:	sub    eax,DWORD PTR [ebx-0x7e]
  401d86:	jo     0x401daa
  401d88:	sub    DWORD PTR [ebx+0x73170b77],ebp
  401d8e:	push   0x15627000
  401d93:	push   ds
  401d94:	outs   dx,DWORD PTR ds:[esi]
  401d95:	jb     0x401dd4
  401d97:	dec    esi
  401d98:	sbb    DWORD PTR [edx],eax
  401d9a:	mov    ecx,0xdeec3fdc
  401d9f:	ins    BYTE PTR es:[edi],dx
  401da0:	mov    dl,0xeb
  401da2:	mov    ecx,0x99a863ef
  401da7:	dec    eax
  401da8:	inc    ebp
  401da9:	clc    
  401daa:	sub    bl,BYTE PTR cs:[edx+0x44f9c29c]
  401db1:	add    BYTE PTR [ecx-0x2502cf8c],0xc8
  401db8:	mov    esi,0x2a793bb0
  401dbd:	sbb    al,0xef
  401dbf:	sub    eax,0xc172ca98
  401dc4:	jnp    0x401df3
  401dc6:	ins    DWORD PTR es:[edi],dx
  401dc7:	inc    edx
  401dc8:	inc    ecx
  401dc9:	or     eax,0xae432f6b
  401dce:	ds pop edi
  401dd0:	cmovo  edi,edi
  401dd3:	jae    0x401db5
  401dd5:	jae    0x401de8
  401dd7:	bound  ecx,QWORD PTR [ecx+0x7d949ead]
  401ddd:	ins    DWORD PTR es:[edi],dx
  401dde:	dec    esi
  401ddf:	fdiv   DWORD PTR [ecx+0x920bac8]
  401de5:	leave  
  401de6:	out    dx,al
  401de7:	cmp    DWORD PTR [edx],0x61
  401dea:	cmp    DWORD PTR [edx+edi*4+0x73],esp
  401dee:	sub    bh,BYTE PTR [esi]
  401df0:	dec    DWORD PTR [eax+0x77]
  401df3:	nop
  401df4:	loopne 0x401d84
  401df6:	pop    edi
  401df7:	outs   dx,DWORD PTR ds:[esi]
  401df8:	xor    esi,ebx
  401dfa:	mov    ebp,0xc41a4926
  401dff:	mov    DWORD PTR [ecx],eax
  401e01:	inc    ebp
  401e02:	ret    0xec10
  401e05:	adc    edx,DWORD PTR [ecx-0x42]
  401e08:	mov    eax,ds:0x8523e055
  401e0d:	jns    0x401e14
  401e0f:	push   ebx
  401e10:	mov    al,0xd6
  401e12:	inc    eax
  401e13:	es repz jge 0x401dfd
  401e17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e18:	rcl    esp,cl
  401e1a:	push   ebp
  401e1b:	test   eax,0x26dc4b3a
  401e20:	dec    esp
  401e21:	mov    edx,fs
  401e23:	push   cs
  401e24:	jg     0x401e68
  401e26:	lock xor bl,BYTE PTR [esi]
  401e29:	jb     0x401e08
  401e2b:	xchg   edx,eax
  401e2c:	inc    ecx
  401e2d:	mov    edi,0x4c55544
  401e32:	lahf   
  401e33:	sbb    BYTE PTR [edx],0x1
  401e36:	imul   esi,DWORD PTR [edx-0x11342069],0xdc151d77
  401e40:	pop    ss
  401e41:	out    0x93,al
  401e43:	push   ss
  401e44:	stos   BYTE PTR es:[edi],al
  401e45:	mov    ecx,0x5d63f346
  401e4a:	pop    ecx
  401e4b:	loop   0x401e22
  401e4d:	and    al,0x39
  401e4f:	lods   eax,DWORD PTR ds:[esi]
  401e50:	push   esp
  401e51:	mov    dl,0x88
  401e53:	lds    edx,FWORD PTR [ebp+0x74c13f45]
  401e59:	inc    esp
  401e5a:	xor    eax,esi
  401e5c:	xor    cl,BYTE PTR [esi+0xc]
  401e5f:	sbb    esp,DWORD PTR [eax]
  401e61:	push   ecx
  401e62:	and    BYTE PTR [ecx-0x25d72768],ah
  401e68:	xchg   edx,eax
  401e69:	lods   al,BYTE PTR ds:[esi]
  401e6a:	mov    ebp,0xfefb81df
  401e6f:	and    bl,BYTE PTR [esi]
  401e71:	mov    edx,0x15f13ae1
  401e76:	sbb    eax,DWORD PTR [ecx]
  401e78:	mov    eax,ds:0x147ff910
  401e7d:	jno    0x401e67
  401e7f:	rol    dl,1
  401e81:	mov    dl,0x40
  401e83:	or     BYTE PTR [esi-0x55c03ba7],al
  401e89:	addr16 pop esi
  401e8b:	fisubr WORD PTR [esi+ebp*2+0x92a3986]
  401e92:	mov    edx,0x33700537
  401e97:	cmp    BYTE PTR [ebx],ah
  401e99:	sub    DWORD PTR [edx+0xe],esi
  401e9c:	mul    DWORD PTR [esi+0x6c]
  401e9f:	mov    ds:0xb3de5180,eax
  401ea4:	bound  ecx,QWORD PTR [ebp+0x1e]
  401ea7:	test   al,0x96
  401ea9:	mov    ds:0x2624e0ed,al
  401eae:	push   esi
  401eaf:	inc    eax
  401eb0:	sbb    dh,BYTE PTR [ecx+0x29415d93]
  401eb6:	jno    0x401ef8
  401eb8:	add    eax,esi
  401eba:	cmp    eax,0x20d53e0c
  401ebf:	jae    0x401e83
  401ec1:	sub    esp,eax
  401ec3:	jns    0x401f1a
  401ec5:	inc    ebx
  401ec6:	cmp    al,0xb8
  401ec8:	(bad)  
  401ec9:	cmc    
  401eca:	pop    ss
  401ecb:	not    DWORD PTR [edi+eiz*2-0x79]
  401ecf:	es mov esi,0x14fb54ba
  401ed5:	mov    esi,0xf8fb4dd7
  401eda:	xor    esi,esi
  401edc:	daa    
  401edd:	loopne 0x401f24
  401edf:	loope  0x401f51
  401ee1:	mov    eax,ds:0x8eedecce
  401ee6:	cmp    esp,DWORD PTR [ecx-0xc]
  401ee9:	cmc    
  401eea:	repz loope 0x401f02
  401eed:	xchg   edx,eax
  401eee:	xor    BYTE PTR [esi+0x3c],0x33
  401ef2:	jecxz  0x401e80
  401ef4:	xchg   ebp,eax
  401ef5:	mov    al,BYTE PTR [ecx+0x6b6030dc]
  401efb:	dec    ecx
  401efc:	xor    al,0x95
  401efe:	mov    ah,0x6d
  401f00:	pop    eax
  401f01:	mov    ebx,esp
  401f03:	in     al,dx
  401f04:	mov    WORD PTR [eax+edx*8-0x53],es
  401f08:	das    
  401f09:	pop    ss
  401f0a:	push   ecx
  401f0b:	cdq    
  401f0c:	imul   edx,ebx,0xffffff9b
  401f0f:	add    esi,DWORD PTR ds:0xda013a9c
  401f15:	jp     0x401eb5
  401f17:	dec    esi
  401f18:	pushf  
  401f19:	cmp    bl,bl
  401f1b:	mov    DWORD PTR [ebx-0x2f],edi
  401f1e:	hlt    
  401f1f:	dec    ebp
  401f20:	pop    DWORD PTR [ebp-0x39]
  401f23:	push   es
  401f24:	sar    DWORD PTR [edx+eiz*8],1
  401f27:	or     BYTE PTR [ebp-0x58],dl
  401f2a:	sub    eax,edi
  401f2c:	push   esp
  401f2d:	add    edx,DWORD PTR [edx-0x41]
  401f30:	stc    
  401f31:	push   edx
  401f32:	mov    al,ds:0x15de4aa
  401f37:	sar    DWORD PTR ds:0xf0eaccdd,1
  401f3d:	inc    ebp
  401f3e:	jg     0x401f16
  401f40:	add    DWORD PTR [edx+0x6a],edi
  401f43:	fidiv  DWORD PTR [esi-0x38c539d5]
  401f49:	(bad)  
  401f4a:	fist   DWORD PTR [edi-0x2b48ce45]
  401f50:	(bad)  
  401f51:	(bad)  
  401f54:	push   esi
  401f55:	in     eax,dx
  401f56:	cmp    cl,cl
  401f58:	cmp    BYTE PTR [esi],bl
  401f5a:	mov    edx,edi
  401f5c:	xor    eax,0x5af0fe67
  401f61:	pop    ecx
  401f62:	in     eax,dx
  401f63:	stos   BYTE PTR es:[edi],al
  401f64:	out    0x68,al
  401f66:	jg     0x401f29
  401f68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f69:	pop    esp
  401f6a:	mov    ah,al
  401f6c:	jo     0x401f30
  401f6e:	cwde   
  401f6f:	mov    cl,0x65
  401f71:	test   eax,0x814f647a
  401f76:	pop    ecx
  401f77:	je     0x401f02
  401f79:	in     al,0x2a
  401f7b:	adc    BYTE PTR [esi+0x6f],dh
  401f7e:	sub    eax,DWORD PTR [ecx]
  401f80:	loopne 0x401f40
  401f82:	out    0xf9,al
  401f84:	sub    DWORD PTR [ecx+0x226467e6],esp
  401f8a:	and    eax,0xdcbaab32
  401f8f:	out    dx,eax
  401f90:	push   edx
  401f91:	mov    esp,esi
  401f93:	repnz in al,0x34
  401f96:	mov    ebx,edx
  401f98:	xor    BYTE PTR ds:0x92d2d2e9,ah
  401f9e:	popf   
  401f9f:	push   esp
  401fa0:	into   
  401fa1:	rcr    DWORD PTR [ebx],1
  401fa3:	inc    esi
  401fa4:	add    DWORD PTR [esi-0x33],edx
  401fa7:	mov    eax,0x7eff1941
  401fac:	clc    
  401fad:	push   es
  401fae:	or     eax,0xf2614d9b
  401fb3:	lea    ebp,[edx]
  401fb5:	jle    0x401fb5
  401fb7:	inc    esp
  401fb8:	lea    esi,[esi+edx*1+0x1]
  401fbc:	mov    ds:0xc8415f69,al
  401fc1:	stos   DWORD PTR es:[edi],eax
  401fc2:	es mov dh,0xec
  401fc5:	cs test al,0x46
  401fc8:	jp     0x401f9b
  401fca:	xchg   esi,eax
  401fcb:	jp     0x40203e
  401fcd:	cmp    bl,dh
  401fcf:	mov    edx,0xccf5e2e3
  401fd4:	push   ebx
  401fd5:	jl     0x401f71
  401fd7:	xor    BYTE PTR [ecx-0x387e4d26],0x96
  401fde:	xor    edx,esi
  401fe0:	pusha  
  401fe1:	ret    
  401fe2:	xchg   esi,eax
  401fe3:	std    
  401fe4:	pop    es
  401fe5:	fist   WORD PTR [ecx+eax*1-0x63]
  401fe9:	add    cl,BYTE PTR [esi]
  401feb:	scas   al,BYTE PTR es:[edi]
  401fec:	dec    ecx
  401fed:	mov    dl,0xaa
  401fef:	cmp    esp,DWORD PTR [edi-0x3f6645ad]
  401ff5:	imul   DWORD PTR [ecx+ebx*4]
  401ff8:	aam    0x20
  401ffa:	xchg   ebx,eax
  401ffb:	mov    al,ds:0xed12deb4
  402000:	call   FWORD PTR [edi-0x16baabac]
  402006:	fistp  WORD PTR [esi+0x58]
  402009:	js     0x401f97
  40200b:	(bad)  
  40200c:	pop    ss
  40200d:	xchg   ecx,eax
  40200e:	out    dx,eax
  40200f:	ret    0xd605
  402012:	cs add eax,0x4fc1d28d
  402018:	call   0x5e7f:0xfe21f0b2
  40201f:	(bad)  
  402020:	stos   DWORD PTR es:[edi],eax
  402021:	mov    cl,0x5
  402023:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  402025:	mov    bh,0x94
  402027:	outs   dx,BYTE PTR ds:[esi]
  402028:	push   ebp
  402029:	aam    0x0
  40202b:	addr16 add al,0x10
  40202e:	test   BYTE PTR [ebx+0x49],0x63
  402032:	test   ecx,edx
  402034:	in     eax,0xe0
  402036:	(bad)  
  402037:	out    dx,eax
  402038:	imul   BYTE PTR ds:0x8cbeef56
  40203e:	mov    ch,0x8f
  402040:	fwait
  402041:	mov    ebx,0x1ce4f1fe
  402046:	mov    eax,ds:0x25e90b06
  40204b:	fsin   
  40204d:	fs jne 0x401fed
  402050:	lds    ebp,FWORD PTR [ebx-0x76aa5fcf]
  402056:	push   ebx
  402057:	jnp    0x40205e
  402059:	xchg   edi,eax
  40205a:	je     0x402075
  40205c:	test   eax,0x96e487be
  402061:	call   0x7a86:0xcf93e1cd
  402068:	in     al,0xa7
  40206a:	pop    eax
  40206b:	pop    edx
  40206c:	(bad)  
  40206e:	leave  
  40206f:	mov    dl,0x71
  402071:	fist   WORD PTR [ecx-0x48]
  402074:	ds pusha 
  402076:	popf   
  402077:	stos   DWORD PTR es:[edi],eax
  402078:	ret    0x320
  40207b:	cmp    edx,DWORD PTR [edi+0x11]
  40207e:	mov    esi,0x22cdd7fc
  402083:	mov    cl,BYTE PTR [ecx]
  402085:	sti    
  402086:	mov    edi,0x830ff449
  40208b:	in     al,0xfa
  40208d:	add    eax,0x7092e4b7
  402092:	pop    edx
  402093:	xor    bl,0xdb
  402096:	bound  eax,QWORD PTR [esi+0x54]
  402099:	and    eax,0xc40ec8a2
  40209e:	std    
  40209f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020a0:	ret    
  4020a1:	call   0xdd55:0x8d671ec7
  4020a8:	jle    0x40207d
  4020aa:	push   ebp
  4020ab:	jl     0x402061
  4020ad:	shr    DWORD PTR [esp+esi*8+0xfae4d7f],0x27
  4020b5:	not    DWORD PTR [ecx-0xf6a6bd3]
  4020bb:	fstp   TBYTE PTR [eax+edi*1+0xa]
  4020bf:	lahf   
  4020c0:	jmp    0x7ff8991f
  4020c5:	test   al,0x49
  4020c7:	mov    eax,0x2d2f48be
  4020cc:	xlat   BYTE PTR ds:[ebx]
  4020cd:	jno    0x4020cc
  4020cf:	lahf   
  4020d0:	(bad)  
  4020d1:	jmp    0x8bd9:0xc746194d
  4020d8:	inc    edx
  4020d9:	popf   
  4020da:	jns    0x4020c6
  4020dc:	xchg   ebp,eax
  4020dd:	inc    eax
  4020de:	jl     0x4020bf
  4020e0:	test   al,0x3f
  4020e2:	or     bh,BYTE PTR [ebx-0x5e]
  4020e5:	adc    eax,0x26ce51fe
  4020ea:	mov    WORD PTR [ecx+eax*2],?
  4020ed:	outs   dx,BYTE PTR ds:[esi]
  4020ee:	push   es
  4020ef:	push   ecx
  4020f0:	mov    esp,0xd9159dbe
  4020f5:	pop    ds
  4020f6:	retf   
  4020f7:	jno    0x40215d
  4020f9:	sub    BYTE PTR [esi],cl
  4020fb:	into   
  4020fc:	jno    0x40216b
  4020fe:	and    bl,BYTE PTR [edx-0x49]
  402101:	inc    eax
  402102:	lods   al,BYTE PTR ds:[esi]
  402103:	add    BYTE PTR [ebx-0x12],ch
  402106:	cmp    bh,BYTE PTR [edx+0x55ec7007]
  40210c:	xchg   edi,eax
  40210d:	repnz iret 
  40210f:	inc    eax
  402110:	sbb    DWORD PTR [eax-0x77035f5c],edx
  402116:	aas    
  402117:	mov    ds:0x219fc101,al
  40211c:	dec    ebx
  40211d:	ret    0x133f
  402120:	cmp    BYTE PTR [esi+0xac7ff98],al
  402126:	jne    0x402177
  402128:	call   0x9d009e12
  40212d:	sub    al,0x97
  40212f:	pop    ecx
  402130:	push   ds
  402131:	add    esp,DWORD PTR [edx+eiz*8]
  402134:	mov    ds:0xa8b160af,al
  402139:	mov    ebx,0x197052c1
  40213e:	xlat   BYTE PTR ds:[ebx]
  40213f:	shr    BYTE PTR [edx-0x260af0bf],1
  402145:	(bad)  
  402146:	ds ins BYTE PTR es:[edi],dx
  402148:	and    ebp,DWORD PTR [edi+eiz*2+0x2e]
  40214c:	mov    bl,0xf1
  40214e:	or     esp,DWORD PTR [eax]
  402150:	loopne 0x402125
  402152:	jmp    0x402151
  402154:	std    
  402155:	ins    BYTE PTR es:[edi],dx
  402156:	push   eax
  402157:	(bad)  
  402158:	sbb    BYTE PTR [esi-0x5825744a],bh
  40215e:	ror    DWORD PTR [esi-0x31],1
  402161:	pop    ss
  402162:	pop    esi
  402163:	loope  0x40211f
  402165:	sub    DWORD PTR [edx-0x1706239f],ecx
  40216b:	rcr    BYTE PTR [edi+0x7591d1],1
  402171:	retf   0xda8c
  402174:	scas   al,BYTE PTR es:[edi]
  402175:	cmp    al,0xc
  402177:	mov    cs,WORD PTR [esi-0x3547db7d]
  40217d:	outs   dx,BYTE PTR ds:[esi]
  40217e:	stos   DWORD PTR es:[di],eax
  402180:	pushf  
  402181:	stc    
  402182:	pop    DWORD PTR [ebp+0x11f5e8a9]
  402188:	lea    eax,[edx+0x2c91ef7d]
  40218e:	out    0xce,eax
  402190:	ret    0x8e3f
  402193:	stos   BYTE PTR es:[edi],al
  402194:	cmp    BYTE PTR [esi-0x2e79c39a],dh
  40219a:	jmp    0x402142
  40219c:	add    DWORD PTR [ebx+0x25],0x5a352a99
  4021a3:	pop    ebx
  4021a4:	sbb    al,0xad
  4021a6:	mov    ?,WORD PTR ds:0xa034e70f
  4021ac:	push   es
  4021ad:	fisttp QWORD PTR [edi+ebp*4+0x1a]
  4021b1:	cmp    DWORD PTR [ebp-0xa774cb9],ebx
  4021b7:	nop
  4021b8:	push   edi
  4021b9:	xor    ebx,DWORD PTR [ebx-0x53595d2f]
  4021bf:	mov    bh,0xfa
  4021c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021c2:	and    bh,BYTE PTR [ebx]
  4021c4:	sub    al,BYTE PTR [ebx+0x1b32288e]
  4021ca:	adc    eax,0x648c563f
  4021cf:	inc    esi
  4021d0:	aam    0x28
  4021d2:	test   eax,0xa387f386
  4021d7:	push   0x34
  4021d9:	push   0x67
  4021db:	ins    BYTE PTR es:[edi],dx
  4021dc:	jle    0x402185
  4021de:	adc    cl,BYTE PTR [ebx-0x2d288e7d]
  4021e4:	stos   BYTE PTR es:[edi],al
  4021e5:	ins    DWORD PTR es:[di],dx
  4021e7:	hlt    
  4021e8:	push   edi
  4021e9:	in     al,0x8b
  4021eb:	pop    eax
  4021ec:	out    0xb5,al
  4021ee:	jb     0x40226d
  4021f0:	push   ss
  4021f1:	ds retf 
  4021f3:	mov    WORD PTR [ebx],gs
  4021f5:	push   ss
  4021f6:	mov    bl,0x6a
  4021f8:	push   cs
  4021f9:	sbb    al,cl
  4021fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021fc:	shl    BYTE PTR [edi],1
  4021fe:	retf   
  4021ff:	dec    ebp
  402200:	inc    edi
  402201:	mov    bl,0x1b
  402203:	pop    edi
  402204:	mov    ah,0x11
  402206:	push   cs
  402207:	pop    ebp
  402208:	add    esp,DWORD PTR [edi+ebx*2]
  40220b:	mov    ds:0x85a08f0b,al
  402210:	loope  0x402268
  402212:	loope  0x40223c
  402214:	xchg   ebx,eax
  402215:	sbb    ecx,0xbc44d4ff
  40221b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40221c:	addr16 pushf 
  40221e:	icebp  
  40221f:	test   eax,0x3ee03ed9
  402224:	adc    al,0x4f
  402226:	enter  0x3950,0x41
  40222a:	les    esi,FWORD PTR [esi+0x5a04f7dd]
  402230:	mov    ah,BYTE PTR [edx-0x4434c6ee]
  402236:	mov    DWORD PTR [ecx+0x5b],esp
  402239:	push   0x69a7d4d5
  40223e:	and    al,dh
  402240:	add    ebx,ebx
  402242:	cdq    
  402243:	sub    eax,0x426bff15
  402248:	aaa    
  402249:	push   edx
  40224a:	adc    BYTE PTR [ebx-0x39f71d5a],0xf
  402251:	add    ah,dh
  402253:	out    dx,al
  402254:	cdq    
  402255:	ja     0x4022c5
  402257:	pop    ds
  402258:	push   cs
  402259:	sub    al,0xd8
  40225b:	(bad)  
  40225d:	arpl   WORD PTR [edi],ax
  40225f:	inc    ebx
  402260:	jge    0x4021f0
  402262:	in     al,dx
  402263:	iret   
  402264:	jnp    0x40227c
  402266:	dec    ecx
  402267:	jl     0x402291
  402269:	push   esi
  40226a:	sub    ecx,esi
  40226c:	pop    ecx
  40226d:	fcomp  QWORD PTR ds:0x66b30509
  402273:	adc    ebx,DWORD PTR [edx]
  402275:	les    esp,FWORD PTR [ecx]
  402277:	jp     0x4022e5
  402279:	or     BYTE PTR [edx+eax*1-0x5c73230f],ah
  402280:	mov    al,0x68
  402282:	add    al,0x3b
  402284:	dec    ebx
  402285:	mov    eax,0xac0c8a39
  40228a:	inc    esi
  40228b:	mov    ds:0xeea4c310,al
  402290:	rol    BYTE PTR es:[ebx],1
  402293:	(bad)  
  402294:	pop    ds
  402295:	dec    ebp
  402296:	inc    esp
  402297:	es or  BYTE PTR cs:[edi],ah
  40229b:	jg     0x4022d0
  40229d:	dec    eax
  40229e:	mov    ds:0xe32462d,al
  4022a3:	add    DWORD PTR [edi-0x43],ecx
  4022a6:	push   ss
  4022a7:	imul   ecx,edx,0xed429cff
  4022ad:	and    eax,0x6c1313f7
  4022b2:	mov    esi,0x47b7ff7d
  4022b7:	add    eax,0x47681e76
  4022bc:	call   0x810f:0x86407cac
  4022c3:	dec    eax
  4022c4:	add    al,0x7
  4022c6:	popf   
  4022c7:	pushf  
  4022c8:	pop    edx
  4022c9:	hlt    
  4022ca:	mov    esi,0xdf485188
  4022cf:	cld    
  4022d0:	inc    ebp
  4022d1:	enter  0x8208,0x2
  4022d5:	(bad)  
  4022d6:	pop    eax
  4022d7:	arpl   di,sp
  4022d9:	inc    edi
  4022da:	dec    edi
  4022db:	int3   
  4022dc:	retf   
  4022dd:	aad    0x99
  4022df:	push   edi
  4022e0:	and    esp,DWORD PTR [edx-0x6d7d2583]
  4022e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022e7:	jae    0x4022c7
  4022e9:	loopne 0x4022f6
  4022eb:	outs   dx,DWORD PTR ds:[esi]
  4022ec:	ins    DWORD PTR es:[edi],dx
  4022ed:	sub    al,0x30
  4022ef:	xchg   esi,edi
  4022f1:	mov    bl,0x63
  4022f3:	ins    DWORD PTR es:[edi],dx
  4022f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022f5:	mov    dl,0x9
  4022f7:	or     DWORD PTR [edi],edx
  4022f9:	or     ecx,DWORD PTR [ebp+0x62]
  4022fc:	jle    0x402326
  4022fe:	push   eax
  4022ff:	mov    bl,0x5f
  402301:	mov    ch,BYTE PTR [edi+0x3c7d98b0]
  402307:	dec    ebx
  402308:	inc    edx
  402309:	jno    0x4022e0
  40230b:	data16 scas al,BYTE PTR es:[edi]
  40230d:	gs aas 
  40230f:	popa   
  402310:	out    dx,eax
  402311:	sbb    BYTE PTR [esp+ecx*1],dl
  402314:	into   
  402315:	xchg   ebp,eax
  402316:	mov    esi,0xa4560e37
  40231b:	hlt    
  40231c:	xor    al,BYTE PTR [ebx+0x12]
  40231f:	loope  0x4022d1
  402321:	mov    ah,0xda
  402323:	or     BYTE PTR [edi+ecx*1-0x29],0x4e
  402328:	ss jmp 0x402301
  40232b:	inc    edi
  40232c:	mov    ebx,0xcd2f55d7
  402331:	xor    al,BYTE PTR [ecx]
  402333:	inc    ecx
  402334:	mov    edx,0x965b1390
  402339:	and    al,0x38
  40233c:	lods   eax,DWORD PTR ds:[esi]
  40233d:	jns    0x4022bf
  40233f:	es pop es
  402341:	adc    DWORD PTR [ebp-0xf9f5de6],esp
  402347:	cmp    eax,0x989c2b0c
  40234c:	mov    cl,BYTE PTR [eax+eax*4+0x331dd35b]
  402353:	ds adc esi,ebx
  402356:	pop    ebx
  402357:	std    
  402358:	pop    esi
  402359:	loope  0x402367
  40235b:	pop    edi
  40235c:	mov    ebx,0xdf0252c5
  402361:	mov    edi,0x8a099316
  402366:	or     eax,0xd5cabb10
  40236b:	push   esp
  40236c:	inc    ecx
  40236d:	jge    0x4023c6
  40236f:	jmp    0xd89ce37
  402374:	in     eax,0x3e
  402376:	sbb    bh,BYTE PTR [edi+0x30f35730]
  40237c:	dec    eax
  40237d:	nop
  40237e:	ins    BYTE PTR es:[edi],dx
  40237f:	bound  esi,QWORD PTR [esi+esi*8-0x32]
  402383:	enter  0x1520,0xf1
  402387:	aad    0x23
  402389:	xchg   ebx,eax
  40238a:	xor    eax,0x392a5710
  40238f:	cmp    ebp,DWORD PTR [edx]
  402391:	sbb    eax,0xccc031b7
  402396:	lahf   
  402397:	call   0x7317:0x315665c9
  40239e:	(bad)  
  40239f:	hlt    
  4023a0:	out    dx,eax
  4023a1:	cmp    DWORD PTR [edx-0x39],edi
  4023a4:	push   esp
  4023a5:	lahf   
  4023a6:	std    
  4023a7:	mov    edi,0x4826bb9b
  4023ac:	sub    al,0x7c
  4023ae:	jg     0x4023e2
  4023b0:	aaa    
  4023b1:	mov    ss,WORD PTR [ebx+0x56]
  4023b4:	nop
  4023b5:	sbb    DWORD PTR [ecx],edx
  4023b7:	retf   
  4023b8:	outs   dx,DWORD PTR ds:[esi]
  4023b9:	lds    eax,FWORD PTR [ecx+ecx*4]
  4023bc:	cmc    
  4023bd:	jge    0x40233f
  4023bf:	mov    eax,0x64203864
  4023c4:	xchg   ecx,eax
  4023c5:	sbb    al,0xc6
  4023c7:	stc    
  4023c8:	retf   0xc4ae
  4023cb:	adc    ah,bh
  4023cd:	arpl   bx,ax
  4023cf:	shr    DWORD PTR [edi-0x7c],1
  4023d2:	push   es
  4023d3:	mov    ah,al
  4023d5:	mov    ch,0x23
  4023d7:	fld    TBYTE PTR [edx]
  4023d9:	(bad)  
  4023da:	sbb    DWORD PTR [edx-0x26],esp
  4023dd:	jle    0x40240f
  4023df:	loopne 0x4023c2
  4023e1:	cdq    
  4023e2:	(bad)  
  4023e4:	mov    ah,BYTE PTR [ecx+0x3c3c6435]
  4023ea:	adc    DWORD PTR [ebx],esp
  4023ec:	sub    ebx,esi
  4023ee:	in     eax,0x1f
  4023f0:	push   cs
  4023f1:	nop
  4023f2:	inc    ebp
  4023f3:	in     eax,0x9b
  4023f5:	mov    bh,0xf3
  4023f7:	mov    dl,0x16
  4023f9:	sbb    DWORD PTR [eax+0x5],ebx
  4023fc:	mov    bh,0x75
  4023fe:	and    al,0x6b
  402400:	pop    ds
  402401:	and    edi,DWORD PTR ds:0x23f657ae
  402407:	cli    
  402408:	in     eax,dx
  402409:	imul   eax,DWORD PTR ds:0xcc5b59c9,0xffffff9d
  402410:	clc    
  402411:	add    DWORD PTR [edi],esi
  402413:	dec    edi
  402414:	adc    al,0xc1
  402416:	pop    ebx
  402417:	clc    
  402418:	scas   eax,DWORD PTR es:[edi]
  402419:	jmp    0xa9bdbe67
  40241e:	das    
  40241f:	ret    0x650b
  402422:	inc    esi
  402423:	or     BYTE PTR [ebp+0x23],al
  402426:	add    eax,0x71f52e1f
  40242b:	mov    bl,0x2d
  40242d:	mov    esi,0x61be757c
  402432:	dec    ebx
  402433:	adc    eax,0x39d297e9
  402438:	shr    DWORD PTR [ebx-0x58],cl
  40243b:	lods   eax,DWORD PTR ds:[esi]
  40243c:	in     eax,dx
  40243d:	push   ebx
  40243e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40243f:	mov    ?,WORD PTR [ebp-0x412946e6]
  402445:	push   esi
  402446:	pop    esi
  402447:	or     al,0x55
  402449:	push   eax
  40244a:	into   
  40244b:	xor    al,0xef
  40244d:	push   ss
  40244e:	fs cld 
  402450:	fidiv  WORD PTR [ebx]
  402452:	pop    esp
  402453:	aad    0x89
  402455:	xlat   BYTE PTR ds:[ebx]
  402456:	inc    edi
  402457:	mov    al,ds:0x617705eb
  40245c:	xchg   edi,eax
  40245d:	loop   0x402410
  40245f:	out    dx,eax
  402460:	push   0x6
  402462:	ds jg  0x402490
  402465:	adc    ebp,DWORD PTR [eax+0x6ebb3c60]
  40246b:	cwde   
  40246c:	xchg   edx,eax
  40246d:	test   eax,0x94d22b2a
  402472:	mov    ah,0x83
  402474:	lods   eax,DWORD PTR ds:[esi]
  402475:	ret    0x588d
  402478:	adc    al,0xad
  40247a:	and    esp,ecx
  40247c:	js     0x402447
  40247e:	inc    esp
  40247f:	push   0x31
  402481:	out    dx,al
  402482:	not    al
  402484:	loop   0x40243a
  402486:	shl    DWORD PTR [ecx+ecx*8-0x2befb69],cl
  40248d:	out    dx,eax
  40248e:	push   ebp
  40248f:	mov    eax,0x76931979
  402494:	mov    ch,0x72
  402496:	mov    ch,bh
  402498:	outs   dx,DWORD PTR ds:[esi]
  402499:	cld    
  40249a:	inc    ebx
  40249b:	adc    al,0xa9
  40249d:	aad    0xe3
  40249f:	test   BYTE PTR [edx],cl
  4024a1:	mov    esi,0x8e2d11dc
  4024a6:	jle    0x4024f3
  4024a8:	adc    eax,0x600c56eb
  4024ad:	jecxz  0x402501
  4024af:	aaa    
  4024b0:	add    ch,0x82
  4024b3:	push   ebx
  4024b4:	in     al,0x14
  4024b6:	std    
  4024b7:	mov    ebp,DWORD PTR [ebx]
  4024b9:	mov    eax,ds:0xa42803bc
  4024be:	jp     0x4024d8
  4024c0:	mov    DWORD PTR [ecx],ebx
  4024c2:	call   0x404e:0x7900d7ab
  4024c9:	std    
  4024ca:	cld    
  4024cb:	sbb    ecx,DWORD PTR [esi-0x29]
  4024ce:	lods   eax,DWORD PTR ds:[esi]
  4024cf:	push   edx
  4024d0:	test   DWORD PTR [ebp+0x73],eax
  4024d3:	sub    BYTE PTR [ecx],al
  4024d5:	rcr    BYTE PTR [ebx],0x9c
  4024d8:	pusha  
  4024d9:	clc    
  4024da:	mov    esi,0x6da29808
  4024df:	mov    bl,0x66
  4024e1:	loop   0x402465
  4024e3:	repnz gs pushf 
  4024e6:	aaa    
  4024e7:	gs pop esp
  4024e9:	ins    DWORD PTR es:[edi],dx
  4024ea:	int3   
  4024eb:	fimul  DWORD PTR [edx*4-0x5837bd7d]
  4024f2:	xor    BYTE PTR [edi],0x87
  4024f5:	lahf   
  4024f6:	rol    BYTE PTR [edi+ebp*2],1
  4024f9:	adc    eax,0x70a08409
  4024fe:	ret    
  4024ff:	jmp    0xeeaa5b9c
  402504:	pop    ss
  402505:	add    ebp,DWORD PTR [eax+0x3d176959]
  40250b:	jae    0x4024d2
  40250d:	push   esp
  40250e:	cmp    BYTE PTR [edi-0x3dcf8dd1],ch
  402514:	cmp    edx,DWORD PTR [ebx]
  402516:	fbld   TBYTE PTR [esi-0x3a]
  402519:	fidivr DWORD PTR ds:0xf46c9c27
  40251f:	sub    DWORD PTR [ebp+0x94b6df],edi
  402525:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402526:	outs   dx,DWORD PTR ds:[esi]
  402527:	add    edx,DWORD PTR [edi+0x4c]
  40252a:	sti    
  40252b:	mov    dl,0x1b
  40252d:	mov    ecx,0x7dfe3330
  402532:	jne    0x40258b
  402534:	sub    eax,0x70ea0615
  402539:	push   ebx
  40253a:	pop    edx
  40253b:	jo     0x402569
  40253d:	ret    0x1679
  402540:	and    ecx,DWORD PTR [ebx+ecx*1]
  402543:	xchg   esp,eax
  402544:	xor    DWORD PTR [ecx],esp
  402546:	push   ebx
  402547:	dec    ecx
  402548:	pop    es
  402549:	pop    esp
  40254a:	and    DWORD PTR es:[eax],eax
  40254d:	adc    edi,DWORD PTR [ebx+0x91cf9fb]
  402553:	(bad)  
  402554:	sar    DWORD PTR [esi+0x3c],1
  402557:	sbb    eax,0xc2e56243
  40255c:	pusha  
  40255d:	shr    BYTE PTR [esi],0x8a
  402560:	rol    BYTE PTR [ebp*8-0x345c0bab],cl
  402567:	data16 adc BYTE PTR [eax+0x4],dh
  40256b:	clc    
  40256c:	cdq    
  40256d:	retf   0x6b44
  402570:	test   ah,al
  402572:	add    al,0x2b
  402574:	mov    esp,DWORD PTR [ebp+eiz*2+0x2]
  402578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402579:	add    dl,BYTE PTR [esi+ebp*2+0x269c4829]
  402580:	mov    bl,0x17
  402582:	imul   edi,DWORD PTR [ebp-0x3fb710ee],0x2f
  402589:	cmc    
  40258a:	push   edx
  40258b:	sub    BYTE PTR [ebx],0x8
  40258e:	mov    ch,0x10
  402590:	xchg   ecx,eax
  402591:	sahf   
  402592:	pshufw mm0,QWORD PTR [esi-0x116773eb],0xb7
  40259a:	jmp    0x2c5b1f43
  40259f:	clc    
  4025a0:	pop    edi
  4025a1:	mov    ss,WORD PTR [esi+0x6f]
  4025a4:	cld    
  4025a5:	fwait
  4025a6:	pop    ds
  4025a7:	fsub   QWORD PTR [ecx]
  4025a9:	retf   0xde95
  4025ac:	and    eax,0x27ffb1af
  4025b1:	add    eax,0x42427c69
  4025b6:	loope  0x4025b5
  4025b8:	or     al,0xe7
  4025ba:	cwde   
  4025bb:	mov    ebp,0xae2729c5
  4025c0:	add    DWORD PTR [ecx-0x30256fd8],0xfffffffd
  4025c7:	pushf  
  4025c8:	int    0x2f
  4025ca:	pop    edi
  4025cb:	and    DWORD PTR [eax-0x3b4a6a0a],ecx
  4025d1:	xor    eax,0x44a6b2ed
  4025d6:	(bad)  
  4025d7:	fistp  DWORD PTR [ecx-0x3ff917ae]
  4025dd:	push   es
  4025de:	(bad)  
  4025df:	adc    ah,BYTE PTR [ebp+0x27]
  4025e2:	scas   al,BYTE PTR es:[edi]
  4025e3:	mov    ah,0xb9
  4025e5:	mov    esi,0x66b6f599
  4025ea:	xchg   cx,ax
  4025ec:	gs push 0x6b
  4025ef:	cwde   
  4025f0:	out    dx,al
  4025f1:	jno    0x4025c4
  4025f3:	jne    0x4025ba
  4025f5:	ss repnz rol bh,1
  4025f9:	dec    esi
  4025fa:	cmp    ebx,DWORD PTR [edi-0x75d52383]
  402600:	leave  
  402601:	mov    bl,0xfa
  402603:	inc    esi
  402604:	sbb    DWORD PTR ds:0x88b0b7c2,ecx
  40260a:	in     eax,dx
  40260b:	out    dx,al
  40260c:	loop   0x4025b5
  40260e:	add    eax,0x45cc8243
  402613:	dec    ecx
  402614:	fwait
  402615:	out    dx,eax
  402616:	jne    0x4025a6
  402618:	cmc    
  402619:	loope  0x4025b9
  40261b:	out    0x9b,eax
  40261d:	scas   al,BYTE PTR es:[edi]
  40261e:	xor    ch,BYTE PTR [ecx+0x5d]
  402621:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402622:	imul   edi,DWORD PTR [ecx+edx*2-0x66ce80],0x96b99ce8
  40262d:	sbb    eax,0x6e302c38
  402632:	mov    ebx,0xd9d495fe
  402637:	out    dx,eax
  402638:	out    0x22,eax
  40263a:	arpl   si,sp
  40263c:	or     eax,0x52bafcec
  402641:	xchg   edx,eax
  402642:	sbb    eax,DWORD PTR [edx-0x46]
  402645:	mov    esp,0xd0bb8b08
  40264a:	sbb    al,al
  40264c:	ja     0x4025f5
  40264e:	stos   BYTE PTR es:[edi],al
  40264f:	xor    DWORD PTR [edx],edx
  402651:	xor    BYTE PTR [ecx+0x49],cl
  402654:	addr16 mov esi,0xdf3887b4
  40265a:	repnz inc eax
  40265c:	bsf    esi,edi
  40265f:	push   esp
  402660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402661:	lea    edi,[edi-0x93ae3f4]
  402667:	jno    0x4026c0
  402669:	mov    eax,ds:0xc448a59e
  40266e:	(bad)  
  40266f:	fwait
  402670:	jmp    0xda17:0x7d561363
  402677:	shl    dh,0xae
  40267a:	sahf   
  40267b:	xor    DWORD PTR [eax],eax
  40267d:	pop    ecx
  40267e:	scas   al,BYTE PTR es:[edi]
  40267f:	sti    
  402680:	fcomi  st,st(3)
  402682:	pop    edi
  402683:	dec    edx
  402684:	iret   
  402685:	mov    ecx,0x7af31e8f
  40268a:	lods   eax,DWORD PTR ds:[esi]
  40268b:	mov    dh,0x15
  40268d:	lea    edx,[ecx-0x7e]
  402690:	in     eax,0x2a
  402692:	loope  0x402678
  402694:	loop   0x4026f0
  402696:	sti    
  402697:	frstor [edx-0x72]
  40269a:	fcom   QWORD PTR [ecx+0x10317cda]
  4026a0:	xor    DWORD PTR [edi-0x62b567de],edx
  4026a6:	pop    ebx
  4026a7:	mov    bl,0x1f
  4026a9:	sti    
  4026aa:	and    DWORD PTR [edi-0x77],0x30
  4026ae:	xchg   DWORD PTR [eax+ecx*2+0x4d1d61e7],eax
  4026b5:	push   ss
  4026b6:	mov    WORD PTR [edx],es
  4026b8:	add    al,0xf2
  4026ba:	scas   eax,DWORD PTR es:[edi]
  4026bb:	or     ah,0x82
  4026be:	in     al,dx
  4026bf:	ret    
  4026c0:	mov    bl,0xb5
  4026c2:	ret    0x54b1
  4026c5:	(bad)  
  4026c6:	xor    al,0xd6
  4026c8:	push   ebx
  4026c9:	gs leave 
  4026cb:	add    eax,0xe3f0c9e9
  4026d0:	adc    ecx,DWORD PTR [ecx]
  4026d2:	in     eax,dx
  4026d3:	or     DWORD PTR [eax],edx
  4026d5:	and    al,0x1d
  4026d7:	addr16 sub al,0x64
  4026da:	into   
  4026db:	inc    esi
  4026dc:	fcomp  QWORD PTR [ebp-0x9dc3e7c]
  4026e2:	sub    DWORD PTR [edx],esi
  4026e4:	xlat   BYTE PTR ds:[ebx]
  4026e5:	pushf  
  4026e6:	or     ecx,ebp
  4026e8:	jp     0x402740
  4026ea:	jle    0x4026e3
  4026ec:	xor    DWORD PTR [eax],esi
  4026ee:	cmp    al,0x5
  4026f0:	imul   ebx,DWORD PTR [ebp+0xdd3e179],0xffffffdb
  4026f7:	mov    cl,0x8a
  4026f9:	fimul  DWORD PTR [ecx]
  4026fb:	cmp    ebx,DWORD PTR [edx-0x5a]
  4026fe:	adc    DWORD PTR [ebx],0xffffffd9
  402701:	or     eax,0xc5b3c4d9
  402706:	lods   eax,DWORD PTR ds:[esi]
  402707:	mov    DWORD PTR [esi+0x6a71ca54],esp
  40270d:	ret    0x52a4
  402710:	scas   al,BYTE PTR es:[edi]
  402711:	xor    dl,BYTE PTR [ebx]
  402713:	pop    esi
  402714:	into   
  402715:	add    al,0xa2
  402717:	loop   0x402784
  402719:	repz sbb al,BYTE PTR [esi-0x31e767c6]
  402720:	aad    0xf8
  402722:	inc    ebp
  402723:	push   ds
  402724:	sub    eax,ecx
  402726:	icebp  
  402727:	outs   dx,DWORD PTR ss:[esi]
  402729:	push   ds
  40272a:	nop
  40272b:	repnz inc edx
  40272d:	mov    dh,0x47
  40272f:	mov    DWORD PTR [ecx-0x34],ebp
  402732:	mov    cl,0xb4
  402734:	das    
  402735:	lods   eax,DWORD PTR ds:[esi]
  402736:	adc    eax,0x6c0be73c
  40273b:	xchg   edi,eax
  40273c:	es cdq 
  40273e:	mov    ecx,0x74e15a72
  402743:	(bad)  
  402744:	fsub   DWORD PTR [esi-0x62c189cb]
  40274a:	iret   
  40274b:	lea    edi,[esi-0x35]
  40274e:	aam    0x17
  402750:	sub    al,0xbb
  402752:	jmp    0x402702
  402754:	je     0x402727
  402756:	(bad)  
  402757:	scas   eax,DWORD PTR es:[edi]
  402758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402759:	and    al,dl
  40275b:	pop    es
  40275c:	cld    
  40275d:	out    0x81,eax
  40275f:	popa   
  402760:	and    BYTE PTR [edx],cl
  402762:	js     0x4026ff
  402764:	push   ds
  402765:	cmc    
  402766:	xor    DWORD PTR [esi],edx
  402768:	cli    
  402769:	shl    DWORD PTR [ebx],1
  40276b:	icebp  
  40276c:	popa   
  40276d:	sub    cl,BYTE PTR [edi]
  40276f:	repnz clc 
  402771:	neg    DWORD PTR [ecx+0x29d7ccf7]
  402777:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402778:	imul   esi,DWORD PTR [edi],0xffffffeb
  40277b:	lea    eax,[edi+ecx*1+0x41]
  40277f:	in     eax,0x6e
  402781:	in     al,dx
  402782:	jecxz  0x4027b8
  402784:	mov    ds:0x12480f5a,eax
  402789:	cli    
  40278a:	push   ds
  40278b:	mov    ecx,0x4e748fce
  402790:	fldcw  WORD PTR [edx-0xf9e4aa8]
  402796:	push   edi
  402797:	in     al,0x4a
  402799:	ins    BYTE PTR es:[edi],dx
  40279a:	loop   0x40280d
  40279c:	mov    ds:0x9f3a0d8,eax
  4027a1:	fist   WORD PTR [ebx]
  4027a3:	loope  0x4027eb
  4027a5:	fisub  DWORD PTR [edi+0xda3ff6e]
  4027ab:	in     eax,dx
  4027ac:	mov    ebx,0x17d91a58
  4027b1:	bound  esp,QWORD PTR [eax-0x3111125f]
  4027b7:	jae    0x40280e
  4027b9:	xor    ch,BYTE PTR [edx-0x7bda5ca8]
  4027bf:	not    BYTE PTR [edx]
  4027c1:	js     0x40275d
  4027c3:	sbb    BYTE PTR [esp+ebx*2+0x492afbb5],ch
  4027ca:	pop    esi
  4027cb:	and    esp,0xfffffff8
  4027ce:	or     dh,al
  4027d0:	pop    esi
  4027d1:	add    BYTE PTR [edi-0x2600704b],0x8b
  4027d8:	clc    
  4027d9:	je     0x4027ca
  4027db:	sub    ah,BYTE PTR [edi+edx*8-0x2b07819c]
  4027e2:	sub    ah,0x8e
  4027e5:	adc    esi,DWORD PTR [edi-0x8e43dd5]
  4027eb:	pop    edi
  4027ec:	scas   eax,DWORD PTR es:[edi]
  4027ed:	test   eax,0x16adc1ab
  4027f2:	mov    al,0x34
  4027f4:	dec    esi
  4027f5:	(bad)  
  4027f6:	arpl   WORD PTR [ebx-0x40],ax
  4027f9:	test   al,0x13
  4027fb:	mov    DWORD PTR [ecx],ebx
  4027fd:	and    al,0x69
  4027ff:	mov    al,0xde
  402801:	cmp    eax,0xe1c0bd58
  402806:	ud0    ebx,esp
  402809:	int3   
  40280a:	or     ecx,ebp
  40280c:	xor    al,0x86
  40280e:	cmp    DWORD PTR [edi],ebx
  402810:	sbb    DWORD PTR [eax+0xb24b834],esi
  402816:	daa    
  402817:	mov    dl,0x5e
  402819:	jno    0x402809
  40281b:	stos   DWORD PTR es:[edi],eax
  40281c:	int3   
  40281d:	cmp    al,0x41
  40281f:	mov    bh,0x58
  402821:	or     ebp,DWORD PTR [ebp+edi*8-0x13]
  402825:	xchg   ebp,eax
  402826:	dec    eax
  402827:	mov    DWORD PTR [ebx+0xc],esp
  40282a:	hlt    
  40282b:	mov    esi,0xa79703ad
  402830:	arpl   WORD PTR [esi-0x15],dx
  402833:	push   ss
  402834:	ss ja  0x402803
  402837:	mov    esi,0x5d0123ab
  40283c:	ret    
  40283d:	retf   
  40283e:	inc    eax
  40283f:	mov    bh,0x98
  402841:	add    BYTE PTR [ecx+0x246ba1f8],0x65
  402848:	js     0x4028b8
  40284a:	inc    edi
  40284b:	cmp    al,0x69
  40284e:	mov    ecx,0x2e6daba6
  402853:	inc    ebx
  402854:	outs   dx,BYTE PTR ds:[esi]
  402855:	mov    esp,0x414399c9
  40285a:	std    
  40285b:	sbb    eax,0xf3c4e7a5
  402860:	xor    ebp,DWORD PTR [ebx-0x35]
  402863:	test   ebp,ecx
  402865:	ja     0x4028a3
  402867:	outs   dx,DWORD PTR ds:[esi]
  402868:	out    dx,eax
  402869:	sti    
  40286a:	icebp  
  40286b:	addr16 js 0x402855
  40286e:	xchg   ebp,eax
  40286f:	jae    0x402859
  402871:	pop    esi
  402872:	lea    esi,[edx]
  402874:	loop   0x402833
  402876:	in     eax,dx
  402877:	test   edx,ebx
  402879:	jmp    0x78bea3e7
  40287e:	mov    ch,0x4b
  402880:	int    0xa4
  402882:	shl    BYTE PTR [ebx-0x5bb1dd67],1
  402888:	and    cl,dl
  40288a:	xor    eax,ecx
  40288c:	or     esp,DWORD PTR [ebp-0x18e182e5]
  402892:	jmp    0xc646:0x4adbc20a
  402899:	(bad)  [edx]
  40289b:	mov    ?,edi
  40289d:	jae    0x402825
  40289f:	mov    bh,0x43
  4028a1:	push   0xafcb729c
  4028a6:	mov    bh,0xb6
  4028a8:	sbb    DWORD PTR [edx+0x11e65c79],0xffffffdb
  4028af:	fdivr  DWORD PTR [ecx+0x47]
  4028b2:	xlat   BYTE PTR ds:[ebx]
  4028b3:	pop    ds
  4028b4:	addr16 dec esp
  4028b6:	fcmovnbe st,st(1)
  4028b8:	pop    ds
  4028b9:	jnp    0x40288a
  4028bb:	aaa    
  4028bc:	or     eax,0x2a4db04
  4028c1:	push   ds
  4028c2:	push   ds
  4028c3:	int    0xae
  4028c5:	pop    edi
  4028c6:	push   ds
  4028c7:	mov    ecx,0x29acc148
  4028cc:	(bad)  
  4028cd:	aaa    
  4028ce:	cld    
  4028cf:	xchg   esp,eax
  4028d0:	pop    ecx
  4028d1:	mov    ebp,0xf2b46aa9
  4028d6:	pusha  
  4028d7:	cli    
  4028d8:	sbb    bh,BYTE PTR [eax]
  4028da:	std    
  4028db:	out    0x94,eax
  4028dd:	add    BYTE PTR [ebx],ah
  4028df:	cmc    
  4028e0:	pop    ecx
  4028e1:	retf   0x6728
  4028e4:	lea    esp,[esp+eax*2+0x509c4d08]
  4028eb:	ret    0xd80c
  4028ee:	mov    bl,0x39
  4028f0:	mov    ecx,DWORD PTR [eax+0x5c]
  4028f3:	call   0x1e9a:0x91120095
  4028fa:	xor    DWORD PTR [esi],esi
  4028fc:	jnp    0x40297c
  4028fe:	leave  
  4028ff:	jmp    0x9441:0xbc36971e
  402906:	jbe    0x4028bf
  402908:	call   0x831a:0xe5623292
  40290f:	or     bl,0x27
  402912:	or     ch,0x90
  402915:	pushf  
  402916:	jp     0x4028ab
  402918:	retf   0xef82
  40291b:	dec    DWORD PTR [ebx]
  40291d:	add    ecx,ebx
  40291f:	jae    0x40295a
  402921:	enter  0xe1d7,0x35
  402925:	inc    edi
  402926:	pop    ds
  402927:	pop    es
  402928:	js     0x40298b
  40292a:	sbb    eax,0x8b20400c
  40292f:	jae    0x4028c7
  402931:	add    bh,BYTE PTR [ebp-0x4f]
  402934:	sbb    esp,DWORD PTR [eax]
  402936:	clc    
  402937:	test   al,0xea
  402939:	push   esi
  40293a:	jno    0x4028ff
  40293c:	pop    ds
  40293d:	inc    esp
  40293e:	adc    dl,bl
  402940:	add    eax,0xda2965a3
  402945:	pop    esi
  402946:	mov    ebx,0x9863a458
  40294b:	mov    eax,0x67c74c11
  402950:	daa    
  402951:	fcmovnb st,st(6)
  402953:	adc    eax,0x2b86462b
  402958:	sbb    ch,dh
  40295a:	std    
  40295b:	jno    0x40293f
  40295d:	mov    edi,DWORD PTR [ebp-0x1e]
  402960:	in     al,dx
  402961:	sub    DWORD PTR [esi],edi
  402963:	test   esi,0xc5119e0d
  402969:	sub    bh,BYTE PTR [esp+eax*8-0x23]
  40296d:	lahf   
  40296e:	popf   
  40296f:	test   eax,0xab6c9cbc
  402974:	dec    edx
  402975:	xor    DWORD PTR [edi],eax
  402977:	sbb    edx,ebx
  402979:	xor    edx,DWORD PTR [edi+0x7b]
  40297c:	cwde   
  40297d:	cli    
  40297e:	out    0xd9,al
  402980:	xchg   ecx,eax
  402981:	mov    edi,ss
  402983:	push   esi
  402984:	ss retf 
  402986:	fbstp  TBYTE PTR [edx]
  402988:	lds    esi,FWORD PTR [ecx+0x2074d269]
  40298e:	fwait
  40298f:	add    al,0x3b
  402991:	ss addr16 aam 0x37
  402995:	nop
  402996:	pop    ds
  402997:	imul   edi,DWORD PTR [edx-0xbec3185],0xffffffa3
  40299e:	stos   BYTE PTR es:[edi],al
  40299f:	aas    
  4029a0:	xchg   esi,eax
  4029a1:	cmp    al,0xe1
  4029a3:	mov    ds:0x89646594,eax
  4029a8:	es cmp al,0xe2
  4029ab:	inc    edi
  4029ac:	jmp    0x37b8:0x5e5edbb2
  4029b3:	ret    
  4029b4:	xchg   edi,eax
  4029b5:	jmp    0x4d9:0xbadcabc7
  4029bc:	(bad)  
  4029be:	pop    ss
  4029bf:	clc    
  4029c0:	fidivr DWORD PTR [esi+0x770e62aa]
  4029c6:	inc    ebp
  4029c7:	lea    edi,[edi-0x3f]
  4029ca:	mov    ch,BYTE PTR [edx]
  4029cc:	pop    esi
  4029cd:	and    eax,0x3224cbac
  4029d2:	xchg   esp,eax
  4029d3:	and    bl,BYTE PTR [edx+ebx*1]
  4029d6:	add    eax,0x155a1b1a
  4029db:	(bad)  
  4029dc:	fld    DWORD PTR [ecx+eiz*4]
  4029df:	stos   BYTE PTR es:[edi],al
  4029e0:	ss mov dl,0x2a
  4029e3:	add    al,0xe7
  4029e5:	mov    al,0x95
  4029e7:	jns    0x402a11
  4029e9:	sbb    ax,0x706b
  4029ed:	ret    0x75f3
  4029f0:	push   edi
  4029f1:	pop    sp
  4029f3:	jnp    0x402989
  4029f5:	push   ecx
  4029f6:	xor    eax,0xbd3ae4ce
  4029fb:	enter  0x5c93,0x2d
  4029ff:	pop    eax
  402a00:	jbe    0x4029dd
  402a02:	adc    eax,0xd8444012
  402a07:	cmp    DWORD PTR [ecx],edx
  402a09:	fwait
  402a0a:	mov    edi,0xa9336b
  402a0f:	mov    ah,0x33
  402a11:	xor    bl,0x6e
  402a14:	push   cs
  402a15:	and    al,0x2e
  402a17:	fcom   DWORD PTR [esi]
  402a19:	(bad)  
  402a1b:	aad    0xd4
  402a1d:	jne    0x402a8f
  402a1f:	mov    ebp,DWORD PTR [esi]
  402a21:	push   eax
  402a22:	fcomip st,st(2)
  402a24:	pop    esi
  402a25:	adc    eax,0x5747ad89
  402a2a:	sti    
  402a2b:	pop    edi
  402a2c:	mov    DWORD PTR [eax+0x70c56083],edx
  402a32:	sbb    eax,0xed320c6b
  402a37:	inc    edx
  402a38:	dec    ebp
  402a39:	idiv   BYTE PTR [ecx]
  402a3b:	mov    dl,BYTE PTR [ecx-0x5f]
  402a3e:	aad    0xcd
  402a40:	bound  edx,QWORD PTR [edx-0x565c4955]
  402a46:	xor    al,0x8
  402a48:	lds    ecx,FWORD PTR [eax]
  402a4a:	daa    
  402a4b:	inc    edi
  402a4c:	jno    0x402aae
  402a4e:	push   esi
  402a4f:	popf   
  402a50:	sub    BYTE PTR [ebp+edi*1-0x58],0xeb
  402a55:	aaa    
  402a56:	arpl   WORD PTR [esi-0x5285e6f4],cx
  402a5c:	xor    al,0x27
  402a5e:	add    dh,al
  402a60:	outs   dx,BYTE PTR ds:[esi]
  402a61:	gs mov esp,0x95248a
  402a67:	mov    eax,0x3168d567
  402a6c:	repz test BYTE PTR es:[ebp+0x298200f7],al
  402a74:	or     esp,DWORD PTR [edi+0x43bb8fed]
  402a7a:	fild   WORD PTR [edi-0x59]
  402a7d:	cwde   
  402a7e:	shr    DWORD PTR [ebp-0x3c],0xe7
  402a82:	or     al,0xcf
  402a84:	adc    eax,0x1e247e0a
  402a89:	or     esp,esp
  402a8b:	cld    
  402a8c:	call   0x7ebd:0x2b30c0e2
  402a93:	xchg   al,bh
  402a95:	jae    0x402aa4
  402a97:	lahf   
  402a98:	xor    eax,0xa5026056
  402a9d:	add    esi,DWORD PTR ds:0x5ce8ea11
  402aa3:	fwait
  402aa4:	push   ebx
  402aa5:	or     al,0xd0
  402aa7:	(bad)  
  402aa8:	and    ecx,DWORD PTR [ecx*8+0x5c5851be]
  402aaf:	and    eax,0x4b2cc403
  402ab4:	mov    ds:0x3a3fbe4,eax
  402ab9:	adc    BYTE PTR [ebx+ebp*8],cl
  402abc:	leave  
  402abd:	cmp    DWORD PTR ds:0x10efe66e,ecx
  402ac3:	cs push ebp
  402ac5:	pinsrw mm7,WORD PTR [esi],0xc2
  402ac9:	push   edx
  402aca:	test   al,0x24
  402acc:	inc    ebx
  402acd:	lds    esi,FWORD PTR [edx-0x1f5d0367]
  402ad3:	mov    dl,0xb6
  402ad5:	jl     0x402b0c
  402ad7:	jnp    0x402a67
  402ad9:	add    DWORD PTR [edx],ebx
  402adb:	out    dx,al
  402adc:	rcl    DWORD PTR [edi],cl
  402ade:	pop    es
  402adf:	mov    ecx,0xfe04f09f
  402ae4:	add    bl,BYTE PTR [ebx-0x8]
  402ae7:	rcr    DWORD PTR [eax+0x11f23070],0x7a
  402aee:	ret    
  402aef:	mov    ebx,0xa6786404
  402af4:	inc    edx
  402af5:	les    ebx,FWORD PTR [eax]
  402af7:	mov    WORD PTR [eax+esi*8],ss
  402afa:	mov    ah,0xe8
  402afc:	xchg   esi,eax
  402afd:	mov    ds:0xc99e2307,eax
  402b02:	test   al,0xf6
  402b04:	sub    DWORD PTR fs:0x935021c1,ecx
  402b0b:	adc    BYTE PTR [ebx+0x20],dl
  402b0e:	retf   
  402b0f:	sbb    eax,0x1
  402b12:	mov    ch,0xfe
  402b14:	adc    al,0x96
  402b16:	mov    edx,0x8297bb8a
  402b1b:	push   edx
  402b1c:	out    0x4d,eax
  402b1e:	cmp    ah,BYTE PTR [esi]
  402b20:	les    ebx,FWORD PTR [ecx+0x496783de]
  402b26:	in     eax,0x6b
  402b28:	adc    DWORD PTR [ebp+0x11],eax
  402b2b:	or     cl,BYTE PTR [ebx+0x4708eb68]
  402b31:	pop    ss
  402b32:	jmp    0x9c9ad00
  402b37:	xor    al,0x12
  402b39:	sbb    BYTE PTR [esi+eiz*1+0xd4d4a9c],al
  402b40:	pushf  
  402b41:	inc    esi
  402b42:	xchg   ebp,eax
  402b43:	sahf   
  402b44:	xor    ebx,ecx
  402b46:	inc    edx
  402b47:	jae    0x402afe
  402b49:	add    DWORD PTR [esi+ebp*4-0x33f801ea],0x3cab54
  402b54:	cmp    al,0xad
  402b56:	xchg   esi,eax
  402b57:	ds clc 
  402b59:	ror    BYTE PTR [ebp+0x2f],1
  402b5c:	inc    edi
  402b5d:	mov    eax,0x65fc6ef0
  402b62:	sbb    bh,BYTE PTR [esi+0x33e8b1fe]
  402b68:	xchg   BYTE PTR ds:[ecx+eiz*4+0x1cc00da5],cl
  402b70:	xchg   esi,eax
  402b71:	scas   eax,DWORD PTR es:[edi]
  402b72:	stc    
  402b73:	push   ds
  402b74:	cs ds jae 0x402b36
  402b78:	lock push es
  402b7a:	push   ds
  402b7b:	scas   al,BYTE PTR es:[edi]
  402b7c:	mov    dh,0x77
  402b7e:	outs   dx,DWORD PTR ds:[esi]
  402b7f:	add    DWORD PTR [ebx],edx
  402b81:	hlt    
  402b82:	dec    ecx
  402b83:	imul   esp,edx,0x3f2c5716
  402b89:	mov    ds:0x2037c6b2,al
  402b8e:	xor    eax,0x20f55560
  402b93:	cmp    dl,BYTE PTR [edi-0x6ff1398a]
  402b99:	outs   dx,BYTE PTR cs:[esi]
  402b9b:	scas   eax,DWORD PTR es:[edi]
  402b9c:	mov    ebx,0x72d26d51
  402ba1:	xlat   BYTE PTR ds:[ebx]
  402ba2:	jge    0x402c1d
  402ba4:	(bad)  [eax]
  402ba6:	mov    ah,0xb3
  402ba8:	xchg   esp,eax
  402ba9:	xchg   BYTE PTR [esi-0x553539b9],dh
  402baf:	push   es
  402bb0:	inc    ebx
  402bb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402bb2:	sti    
  402bb3:	mov    ebx,0x8ce6774d
  402bb8:	iret   
  402bb9:	and    eax,0x2d4b3946
  402bbe:	sar    BYTE PTR [esi-0x1789d817],cl
  402bc4:	rol    DWORD PTR [ebx],1
  402bc6:	pop    esi
  402bc7:	sub    BYTE PTR [esi-0x481554c0],0x39
  402bce:	sub    BYTE PTR [ecx],0x76
  402bd1:	mulps  xmm6,XMMWORD PTR [edi]
  402bd4:	(bad)  
  402bd5:	nop
  402bd6:	jns    0x402ba1
  402bd8:	cmc    
  402bd9:	aam    0xee
  402bdb:	mov    cl,0x5d
  402bdd:	loop   0x402bf1
  402bdf:	sbb    al,0x6a
  402be1:	sbb    eax,0x6dab5509
  402be6:	lahf   
  402be7:	adc    al,0x65
  402be9:	xchg   BYTE PTR [esi+0x57f066d9],ch
  402bef:	int3   
  402bf0:	cmc    
  402bf1:	and    esp,DWORD PTR [ebp-0x44cffd35]
  402bf7:	das    
  402bf8:	adc    al,0x72
  402bfa:	shl    BYTE PTR ds:0x14332fb7,cl
  402c00:	cwde   
  402c01:	pop    eax
  402c02:	mov    ebx,0xf49d06c6
  402c07:	stos   BYTE PTR es:[edi],al
  402c08:	loope  0x402c46
  402c0a:	psubusw mm0,QWORD PTR [eax-0x6681c6e2]
  402c11:	clc    
  402c12:	or     cl,BYTE PTR [eax]
  402c14:	push   ds
  402c15:	inc    ebx
  402c16:	add    edi,edx
  402c18:	dec    edx
  402c19:	retf   0xc204
  402c1c:	jns    0x402c84
  402c1e:	sub    al,0x1e
  402c20:	jg     0x402bd6
  402c22:	jb     0x402c21
  402c24:	cmp    eax,0xb407c393
  402c29:	call   DWORD PTR [esp+edx*2]
  402c2c:	cdq    
  402c2d:	data16 cli 
  402c2f:	and    esp,DWORD PTR [eax-0x116d4661]
  402c35:	cmp    BYTE PTR [edi],0x4a
  402c38:	sub    ebp,DWORD PTR [eax-0x49]
  402c3b:	sbb    ch,BYTE PTR [ecx]
  402c3d:	jge    0x402cb1
  402c3f:	mov    WORD PTR [ebx],ss
  402c41:	loope  0x402cc0
  402c43:	ja     0x402c31
  402c45:	add    al,0xa8
  402c47:	call   0xda33c786
  402c4c:	popa   
  402c4d:	or     al,0x2b
  402c4f:	cmp    dh,BYTE PTR [edi-0x58]
  402c52:	dec    eax
  402c53:	ret    0x391c
  402c56:	adc    BYTE PTR [edi+0x6e],bl
  402c59:	push   ebp
  402c5a:	xor    DWORD PTR [edx],edi
  402c5c:	jb     0x402c7e
  402c5e:	push   cs
  402c5f:	arpl   di,sp
  402c61:	cmp    BYTE PTR [ebx+esi*8-0x3d],ch
  402c65:	dec    ebx
  402c66:	mov    ebp,0x2b8f2f05
  402c6b:	scas   eax,DWORD PTR es:[edi]
  402c6c:	int3   
  402c6d:	inc    edx
  402c6e:	cmp    BYTE PTR [ebx],0x9
  402c71:	inc    edx
  402c72:	test   eax,0xf05892dd
  402c77:	xchg   edi,eax
  402c78:	ror    DWORD PTR [edx+0x29a5f89b],cl
  402c7e:	inc    esp
  402c7f:	loop   0x402c2c
  402c81:	es mov bh,0x5d
  402c84:	jae    0x402c4f
  402c86:	pusha  
  402c87:	ins    BYTE PTR es:[edi],dx
  402c88:	stos   BYTE PTR es:[edi],al
  402c89:	inc    esi
  402c8a:	xchg   ebx,eax
  402c8b:	fs ret 0xd1e6
  402c8f:	xor    DWORD PTR [ebx],esp
  402c91:	out    0x5,eax
  402c93:	pop    ds
  402c94:	repz pushf 
  402c96:	add    al,0x77
  402c98:	lods   eax,DWORD PTR ds:[esi]
  402c99:	fadd   st,st(6)
  402c9b:	xchg   esp,eax
  402c9c:	cmp    DWORD PTR [edi+0x44],edx
  402c9f:	sbb    esi,esp
  402ca1:	push   es
  402ca2:	push   edx
  402ca3:	or     bl,BYTE PTR [ecx]
  402ca5:	cdq    
  402ca6:	fsubp  st(5),st
  402ca8:	xchg   esi,eax
  402ca9:	enter  0x7e23,0x54
  402cad:	lock std 
  402caf:	popa   
  402cb0:	popf   
  402cb1:	fstp   TBYTE PTR [eax+0x4a]
  402cb4:	test   BYTE PTR [esp+edi*1-0x6a2b6cc1],dl
  402cbb:	mov    al,BYTE PTR [eax+0x59]
  402cbe:	jecxz  0x402c7d
  402cc0:	and    BYTE PTR [edx+0x24],cl
  402cc3:	cmp    al,0x6e
  402cc5:	pop    ss
  402cc6:	jbe    0x402d18
  402cc8:	test   eax,0x33f9fddc
  402ccd:	mov    edx,0xb3e9a8ad
  402cd2:	lock jl 0x402ccc
  402cd5:	mov    al,0x1
  402cd7:	mov    BYTE PTR [edx],bl
  402cd9:	xchg   ebx,eax
  402cda:	add    al,0xf3
  402cdc:	jg     0x402ce0
  402cde:	and    DWORD PTR [edx-0xc143cdc],edi
  402ce4:	jmp    0x7d6e255f
  402ce9:	sti    
  402cea:	dec    edi
  402ceb:	jmp    0x5a75:0x59cfbdab
  402cf2:	sbb    cl,BYTE PTR ds:0xa0fc7559
  402cf8:	mov    edx,0xc87c67ca
  402cfd:	imul   ebx,DWORD PTR [edx+0x569bd43d],0xfd78f71f
  402d07:	fcomp  st(1)
  402d09:	add    BYTE PTR [edx-0x1cc657cc],ah
  402d0f:	int    0x5b
  402d11:	xchg   BYTE PTR [ecx],bl
  402d13:	jo     0x402d8a
  402d15:	cmp    al,0x40
  402d17:	xchg   BYTE PTR [esp+ebx*2+0x14e052ad],bh
  402d1e:	(bad)  
  402d1f:	push   cs
  402d20:	loope  0x402d72
  402d22:	scas   al,BYTE PTR es:[edi]
  402d23:	dec    BYTE PTR [esi+0x45]
  402d26:	mov    dl,0x15
  402d28:	cmp    eax,0x81aa8ce8
  402d2d:	out    dx,eax
  402d2e:	xchg   ebp,eax
  402d2f:	xchg   ebx,eax
  402d30:	aad    0x45
  402d32:	inc    ebx
  402d33:	fs pop ecx
  402d35:	enter  0x5c05,0x34
  402d39:	dec    edx
  402d3a:	cmp    bl,BYTE PTR [ecx+0x26]
  402d3d:	pusha  
  402d3e:	jge    0x402db9
  402d40:	sahf   
  402d41:	jge    0x402d00
  402d43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d44:	jle    0x402d64
  402d46:	fldcw  WORD PTR ds:0xf03e01fb
  402d4c:	push   esi
  402d4d:	mov    bl,BYTE PTR [ecx+ecx*2-0x7c5e36eb]
  402d54:	cwde   
  402d55:	mov    ds:0x1ff7bd75,eax
  402d5a:	bound  eax,QWORD PTR [edx-0xc014b8c]
  402d60:	cs daa 
  402d62:	ins    BYTE PTR es:[edi],dx
  402d63:	sub    ch,BYTE PTR [eax]
  402d65:	pushf  
  402d66:	xchg   ecx,eax
  402d67:	add    al,0x55
  402d69:	xor    eax,0xb52c7269
  402d6e:	mov    ?,WORD PTR [ecx]
  402d70:	cld    
  402d71:	int    0xde
  402d73:	xor    al,0xb6
  402d75:	xchg   ebp,eax
  402d76:	or     eax,0xba571bb
  402d7b:	mov    esi,0x5f672a8e
  402d80:	mov    dl,0xc0
  402d82:	jb     0x402d2b
  402d84:	jg     0x402d9a
  402d86:	fisubr DWORD PTR [edi+0x14a1555]
  402d8c:	into   
  402d8d:	je     0x402dd9
  402d8f:	sbb    ch,BYTE PTR [esi-0x69]
  402d92:	sub    DWORD PTR [ecx-0x7],esp
  402d95:	jae    0x402d8b
  402d97:	dec    esi
  402d98:	add    BYTE PTR [edx+0xedc9a2e],ch
  402d9e:	and    al,BYTE PTR [eax]
  402da0:	and    al,0xc4
  402da2:	push   0xdb3a962a
  402da7:	mov    esi,0x5be0d2bc
  402dac:	xor    eax,0xc84a57b7
  402db1:	inc    ecx
  402db2:	or     ecx,DWORD PTR [edx]
  402db4:	test   al,0xa1
  402db6:	(bad)  
  402db7:	jl     0x402d6e
  402db9:	(bad)  
  402dbb:	dec    cx
  402dbd:	adc    edx,DWORD PTR [ebx+0x8fac01c]
  402dc3:	(bad)  [ebx+0x52]
  402dc6:	data16 mov bl,BYTE PTR [ecx-0x1a]
  402dca:	push   ebx
  402dcb:	pusha  
  402dcc:	push   ss
  402dcd:	rol    BYTE PTR [esi+edi*4],0x8
  402dd1:	lods   eax,DWORD PTR gs:[esi]
  402dd3:	cld    
  402dd4:	aaa    
  402dd5:	sbb    edi,DWORD PTR [ecx+0x39]
  402dd8:	call   0xd855:0x1e1bcb05
  402ddf:	mov    bl,0xc2
  402de1:	and    eax,DWORD PTR [esi+ebp*4-0x14]
  402de5:	mov    esi,0x9ccd55a5
  402dea:	fld    QWORD PTR [ecx]
  402dec:	sti    
  402ded:	push   edx
  402dee:	inc    eax
  402def:	xlat   BYTE PTR ds:[ebx]
  402df0:	mov    ecx,0x7166fdb5
  402df5:	sbb    eax,0x777f8bc0
  402dfa:	aam    0xba
  402dfc:	mov    al,0xac
  402dfe:	push   ecx
  402dff:	inc    edi
  402e00:	mov    edx,0x89963202
  402e05:	add    eax,0x4cfac4fb
  402e0a:	dec    edx
  402e0b:	sbb    eax,0x9d21cb3
  402e10:	mov    eax,ds:0xa987eb42
  402e15:	or     eax,0x8b51bc25
  402e1a:	add    bh,dh
  402e1c:	xor    al,0xf7
  402e1e:	adc    al,0x94
  402e20:	pop    ds
  402e21:	sbb    eax,0xf6d64beb
  402e26:	out    dx,al
  402e27:	pop    ebp
  402e28:	adc    edx,DWORD PTR [ebx]
  402e2a:	cmp    DWORD PTR [edx],esi
  402e2c:	popa   
  402e2d:	xchg   ebp,eax
  402e2e:	adc    al,0x71
  402e30:	cmp    eax,0xcad5f889
  402e35:	aas    
  402e36:	sbb    eax,0x33a99409
  402e3b:	scas   al,BYTE PTR es:[edi]
  402e3c:	dec    esi
  402e3d:	xor    dl,al
  402e3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e40:	dec    ebx
  402e41:	dec    ecx
  402e42:	dec    ebp
  402e43:	push   ebx
  402e44:	cmp    eax,ecx
  402e46:	arpl   WORD PTR [ecx+0x532716ef],di
  402e4c:	inc    esp
  402e4d:	mov    dl,0x90
  402e4f:	call   0x9669:0x73c7e86a
  402e56:	fwait
  402e57:	lds    edx,FWORD PTR [ecx-0x59]
  402e5a:	dec    ecx
  402e5b:	xchg   DWORD PTR [eax],eax
  402e5d:	add    al,0x6e
  402e5f:	test   eax,0xdd6e51b5
  402e64:	mov    eax,0x93a1de11
  402e69:	mov    eax,0xb81953af
  402e6e:	xchg   edx,eax
  402e6f:	pop    ds
  402e70:	or     DWORD PTR [eax-0x4b],eax
  402e73:	mov    ah,0x8d
  402e75:	xchg   ebp,eax
  402e76:	imul   DWORD PTR [edi]
  402e78:	pop    edx
  402e79:	xor    esi,esi
  402e7b:	stc    
  402e7c:	imul   edi,DWORD PTR [esi],0x7a
  402e7f:	test   eax,0xb28a93b9
  402e84:	shl    dl,0x83
  402e87:	(bad)  
  402e88:	sub    ebx,DWORD PTR [eax+0x315c2c37]
  402e8e:	pop    ebx
  402e8f:	and    eax,0x4c702e3e
  402e94:	jo     0x402e5f
  402e96:	cmc    
  402e97:	loopne 0x402eae
  402e99:	scas   al,BYTE PTR es:[edi]
  402e9a:	ins    BYTE PTR es:[edi],dx
  402e9b:	ins    DWORD PTR es:[edi],dx
  402e9c:	xchg   edi,eax
  402e9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e9e:	inc    edi
  402e9f:	shr    BYTE PTR [ecx+0x8],0x33
  402ea3:	loop   0x402e9c
  402ea5:	mov    dh,0x15
  402ea7:	inc    esp
  402ea8:	scas   al,BYTE PTR es:[edi]
  402ea9:	out    dx,eax
  402eaa:	(bad)  [esi+0x9]
  402ead:	sbb    eax,0x57f0f82f
  402eb2:	ja     0x402ea6
  402eb4:	mov    ds:0x40bfb781,eax
  402eb9:	sub    eax,0x59ba6a37
  402ebe:	cmp    eax,eax
  402ec0:	mov    WORD PTR [ebx-0x23fbcdfa],?
  402ec6:	pop    edi
  402ec7:	xor    DWORD PTR [edx],ebx
  402ec9:	cwde   
  402eca:	sbb    al,0xcb
  402ecc:	jl     0x402e7d
  402ece:	sar    DWORD PTR [esp+edx*4-0x462fca7f],0x7
  402ed6:	cs repnz mov ecx,0x358e437e
  402edd:	pop    ebx
  402ede:	and    eax,0x6bf49538
  402ee3:	xchg   edx,eax
  402ee4:	inc    ebx
  402ee5:	inc    ebx
  402ee6:	or     edi,DWORD PTR [eax]
  402ee8:	xor    esi,0x1c
  402eeb:	mov    ds:0xe4bc0050,al
  402ef0:	(bad)  
  402ef1:	int3   
  402ef2:	call   0xe05b:0x566790d1
  402ef9:	add    eax,0x55193722
  402efe:	lea    esp,[edx+ecx*8+0x6ef9c000]
  402f05:	(bad)  
  402f06:	(bad)  
  402f07:	stc    
  402f08:	mov    cl,0x7a
  402f0a:	push   esi
  402f0b:	jmp    0x4d8e:0xc41c0deb
  402f12:	push   es
  402f13:	xchg   esp,eax
  402f14:	repz jnp 0x402f0f
  402f17:	fisubr WORD PTR [eax]
  402f19:	imul   ecx,DWORD PTR [esi-0x5d],0x17e9a562
  402f20:	div    DWORD PTR [edx-0x7cdffbe2]
  402f26:	xchg   ebx,eax
  402f27:	mov    edx,0x1e0de6c8
  402f2c:	or     eax,0x935882b8
  402f31:	add    al,0x81
  402f33:	pop    ebp
  402f34:	cdq    
  402f35:	jl     0x402f79
  402f37:	gs push es
  402f39:	lahf   
  402f3a:	clc    
  402f3b:	dec    edx
  402f3c:	lods   al,BYTE PTR ds:[esi]
  402f3d:	and    edi,ebx
  402f3f:	or     esp,DWORD PTR [edi]
  402f41:	popf   
  402f42:	cmp    eax,0x19ff40ff
  402f47:	sbb    eax,0x58896e30
  402f4c:	adc    cl,al
  402f4e:	xchg   ebp,eax
  402f4f:	push   esi
  402f50:	cmp    DWORD PTR [ecx+ebp*2],ebp
  402f53:	xor    DWORD PTR [ebx-0x16],0x5b
  402f57:	stc    
  402f58:	pop    ss
  402f59:	dec    esp
  402f5a:	rcr    BYTE PTR [ebx+0xe],0x38
  402f5e:	add    DWORD PTR [ebx],ecx
  402f60:	add    edx,DWORD PTR [esi+0xe]
  402f63:	data16 mov al,0x34
  402f66:	fidivr DWORD PTR [edx+ebx*4-0x79]
  402f6a:	add    esp,0x224750b3
  402f70:	mov    edx,0xe8bce21a
  402f75:	sub    DWORD PTR [eax],edi
  402f77:	jb     0x402fbb
  402f79:	mov    eax,0xed740540
  402f7e:	ret    
  402f7f:	dec    esi
  402f80:	jle    0x402f30
  402f82:	aas    
  402f83:	jecxz  0x402f44
  402f85:	push   edx
  402f86:	sbb    ebx,DWORD PTR [esi+0xf]
  402f89:	mov    edi,DWORD PTR [ecx-0x3f564d56]
  402f8f:	cmp    edi,DWORD PTR [eax+eiz*1-0x21]
  402f93:	(bad)  
  402f94:	adc    DWORD PTR [edi+0x44],ebp
  402f97:	dec    ebx
  402f98:	repz pop edi
  402f9a:	mul    BYTE PTR ds:0x767fa61
  402fa0:	ret    0xc7be
  402fa3:	idiv   DWORD PTR [esi+0x2b7db5de]
  402fa9:	adc    al,BYTE PTR [ecx]
  402fab:	(bad)  
  402fac:	adc    eax,0x68916d84
  402fb1:	jge    0x402f9a
  402fb3:	and    ch,bl
  402fb5:	xlat   BYTE PTR ds:[ebx]
  402fb6:	pop    edx
  402fb7:	mov    al,ds:0x21f01b7a
  402fbc:	loope  0x402ffa
  402fbe:	xchg   ebx,eax
  402fbf:	sub    edx,DWORD PTR [ecx+eax*1]
  402fc2:	jae    0x402ffe
  402fc4:	mov    ebx,0x138321a5
  402fc9:	js     0x402fbe
  402fcb:	popa   
  402fcc:	jge    0x403029
  402fce:	out    dx,eax
  402fcf:	(bad)  
  402fd0:	or     ecx,eax
  402fd2:	into   
  402fd3:	lds    edx,FWORD PTR [esi]
  402fd5:	sub    al,0x45
  402fd7:	mov    al,0x12
  402fd9:	fimul  DWORD PTR [esi+0x38]
  402fdc:	ret    
  402fdd:	int3   
  402fde:	das    
  402fdf:	xor    BYTE PTR [ebp+0x1407bcce],ch
  402fe5:	test   BYTE PTR [ebp-0x1b747e80],0x14
  402fec:	fld    QWORD PTR [ebx+0x59]
  402fef:	xchg   edx,eax
  402ff0:	push   edi
  402ff1:	mov    ch,0x92
  402ff3:	add    eax,0x23a6e337
  402ff8:	inc    edi
  402ff9:	rol    BYTE PTR [edx-0x5e],1
  402ffc:	call   0x1888:0xf1fbcd25
  403003:	and    dl,cl
  403005:	outs   dx,DWORD PTR ds:[esi]
  403006:	shl    DWORD PTR [ebp-0x49],cl
  403009:	pushf  
  40300a:	or     BYTE PTR ds:0x17ceb3e4,cl
  403010:	pusha  
  403011:	jecxz  0x402fea
  403013:	iret   
  403014:	int3   
  403015:	sub    DWORD PTR [ecx-0x4ed6d31f],ebx
  40301b:	lock add eax,0xc976131d
  403021:	je     0x403095
  403023:	push   0xb1c4368c
  403028:	std    
  403029:	paddb  mm2,mm0
  40302c:	repz inc ebp
  40302e:	cwde   
  40302f:	and    al,0x7
  403031:	les    esi,FWORD PTR [eax+0x4cb757b4]
  403037:	jns    0x403082
  403039:	inc    ecx
  40303a:	jmp    0x402fc2
  40303c:	xor    dh,BYTE PTR [edi-0x76a79e33]
  403042:	jp     0x403065
  403044:	std    
  403045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403046:	inc    eax
  403047:	repz js 0x403081
  40304a:	add    ah,al
  40304c:	pop    edx
  40304d:	ficom  WORD PTR [esp+eiz*2+0xa]
  403051:	mov    ah,0xc8
  403053:	sar    BYTE PTR [edi-0x4f],cl
  403056:	sti    
  403057:	sub    BYTE PTR [eax+0x2261df5b],bh
  40305d:	mov    esi,DWORD PTR [ecx]
  40305f:	adc    BYTE PTR [eax+0x1d013667],cl
  403065:	into   
  403066:	add    eax,0x7f2cae45
  40306b:	pop    ecx
  40306c:	xchg   BYTE PTR [esi+edi*2-0x23],dh
  403070:	and    al,0xdb
  403072:	arpl   WORD PTR [edi-0x28],cx
  403075:	jl     0x403000
  403077:	jmp    0x403039
  403079:	add    BYTE PTR [ebx],bl
  40307b:	cmp    esp,edx
  40307d:	sbb    bl,0x3c
  403080:	mov    al,ds:0xab788fb9
  403085:	hlt    
  403086:	clc    
  403087:	add    DWORD PTR [edx-0x5cb6ac18],0xab244af3
  403091:	xchg   ebp,eax
  403092:	or     al,0xaf
  403094:	adc    eax,0x720a3770
  403099:	pop    edx
  40309a:	or     BYTE PTR [ebx+eiz*8+0x3655b2c0],dh
  4030a1:	adc    BYTE PTR ds:0xd510ec7c,0xf
  4030a8:	int3   
  4030a9:	or     bh,dl
  4030ab:	ror    BYTE PTR [edi+0x10cf087],0xc7
  4030b2:	ja     0x403091
  4030b4:	cmc    
  4030b5:	jle    0x4030e7
  4030b7:	mov    esi,0x45b23692
  4030bc:	stc    
  4030bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030be:	mov    ds:0x2a217f7a,al
  4030c3:	sub    BYTE PTR [esi-0x5a],al
  4030c6:	mov    WORD PTR [eax+ecx*8-0x11],?
  4030ca:	xchg   esi,eax
  4030cb:	mov    ecx,ebp
  4030cd:	mov    edx,0x6cbef975
  4030d2:	push   es
  4030d3:	jp     0x403076
  4030d5:	pop    edi
  4030d6:	retf   
  4030d7:	pop    ebp
  4030d8:	jo     0x4030a2
  4030da:	das    
  4030db:	xchg   edx,eax
  4030dc:	inc    ebx
  4030dd:	mov    bh,BYTE PTR [edi-0x5]
  4030e0:	inc    esp
  4030e1:	adc    al,0xc1
  4030e3:	lahf   
  4030e4:	jmp    0x403153
  4030e6:	in     eax,dx
  4030e7:	fs inc esp
  4030e9:	jmp    0x4030d9
  4030eb:	gs out dx,al
  4030ed:	mov    ch,0xbf
  4030ef:	inc    ecx
  4030f0:	push   eax
  4030f1:	sub    al,0xa2
  4030f3:	cmp    BYTE PTR [ecx-0x21],ah
  4030f6:	adc    BYTE PTR [ebx-0x1419dd00],ah
  4030fc:	fwait
  4030fd:	test   eax,0xf59f7144
  403102:	mov    eax,ds:0x2d418375
  403107:	sbb    eax,0x26651714
  40310c:	scas   al,BYTE PTR es:[edi]
  40310d:	lds    esp,FWORD PTR [ecx-0x49]
  403110:	mov    esp,0xd60dfa8f
  403115:	jbe    0x4030a5
  403117:	dec    ecx
  403118:	add    DWORD PTR [ebx],esi
  40311a:	mov    edx,edx
  40311c:	dec    edi
  40311d:	mov    ecx,0xb2150106
  403122:	xchg   ebx,eax
  403123:	jae    0x4030e1
  403125:	xor    al,BYTE PTR [edx-0x648f0447]
  40312b:	les    edx,FWORD PTR [eax-0x1]
  40312e:	test   DWORD PTR [edi-0x480b8737],esp
  403134:	lea    esp,[esp+ebp*2]
  403137:	out    0x8f,al
  403139:	mov    esi,0xaa0b0d7f
  40313e:	test   DWORD PTR [edx+0x7],edx
  403141:	sbb    al,0xb1
  403143:	push   ebx
  403144:	sar    DWORD PTR [esi+0x1a3cf981],1
  40314a:	mov    edx,0x6b87a4d9
  40314f:	fs cmp eax,edx
  403152:	cmp    ebp,DWORD PTR [eax+ebp*4]
  403155:	daa    
  403156:	pop    sp
  403158:	jl     0x4030e4
  40315a:	retf   
  40315b:	int    0x3d
  40315d:	in     al,dx
  40315e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40315f:	mov    ebx,DWORD PTR [ecx+0x4b]
  403162:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403163:	fst    QWORD PTR [ecx+0x2bbe2d76]
  403169:	pop    ds
  40316a:	pushf  
  40316b:	cmp    esp,eax
  40316d:	lea    esi,[edx+edx*2]
  403170:	and    eax,0xbd5ca5a9
  403175:	sbb    BYTE PTR [esi],al
  403177:	(bad)  
  403178:	das    
  403179:	rcl    esp,0xb7
  40317c:	call   0x9dbd35b7
  403181:	sbb    ebp,edi
  403183:	(bad)  
  403184:	xor    eax,0x757f89cf
  403189:	adc    al,0x75
  40318b:	mov    eax,DWORD PTR [eax]
  40318d:	mov    cl,0x88
  40318f:	cmp    BYTE PTR [edx+0x668c08cc],bl
  403195:	in     eax,dx
  403196:	mov    esi,0xc2fbfba3
  40319b:	xchg   ecx,eax
  40319c:	inc    edx
  40319d:	scas   al,BYTE PTR es:[edi]
  40319e:	add    eax,0x36847c8a
  4031a3:	lds    eax,FWORD PTR [edx+ebx*1-0x232e10f1]
  4031aa:	and    DWORD PTR [ebx+eiz*2],0x7b
  4031ae:	clc    
  4031af:	push   edi
  4031b0:	js     0x40316e
  4031b2:	(bad)
  4031b5:	push   ds
  4031b6:	and    edi,esi
  4031b8:	mov    ah,0xf8
  4031ba:	js     0x4031be
  4031bc:	and    DWORD PTR [ebx+0xc],ebx
  4031bf:	ja     0x403183
  4031c1:	dec    edx
  4031c2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4031c3:	leave  
  4031c4:	test   eax,0xf0aabb4a
  4031c9:	rdpmc  
  4031cb:	cmp    esi,DWORD PTR [ecx]
  4031cd:	repz fs mov edi,0x6fbd9464
  4031d4:	pop    ebp
  4031d5:	and    eax,0x35be57b8
  4031da:	mov    DWORD PTR [edx+ebx*8-0x27dee65d],0xde0e848d
  4031e5:	cmovno ebp,DWORD PTR [edx-0x3f1c512e]
  4031ec:	dec    ecx
  4031ed:	lahf   
  4031ee:	add    eax,DWORD PTR [esi+edx*1+0x1d]
  4031f2:	loop   0x4031f8
  4031f4:	outs   dx,DWORD PTR ds:[esi]
  4031f5:	rcr    DWORD PTR [ecx-0x1fc26043],0xfb
  4031fc:	mov    ebp,ecx
  4031fe:	shl    DWORD PTR [esi],1
  403200:	and    bl,dh
  403202:	test   dh,dh
  403204:	cmp    edi,edx
  403206:	xor    eax,0x40d1b976
  40320b:	pop    eax
  40320c:	test   BYTE PTR [esi-0x5beef5a0],al
  403212:	cmp    al,0xd3
  403214:	and    al,0xb
  403216:	pop    eax
  403217:	add    cl,0xef
  40321a:	and    BYTE PTR [ecx-0x5a43c054],cl
  403220:	adc    ch,BYTE PTR [ecx]
  403222:	xchg   ecx,eax
  403223:	(bad)  
  403224:	cmp    ebp,DWORD PTR [edi]
  403226:	in     al,0x2b
  403228:	adc    BYTE PTR [edi+0x53dba552],cl
  40322e:	and    DWORD PTR [edx],edx
  403230:	cdq    
  403231:	rol    DWORD PTR [edx+0x26],cl
  403234:	mov    al,0x83
  403236:	mov    bl,0xad
  403238:	adc    cl,BYTE PTR [esi+0x5c]
  40323b:	pop    esi
  40323c:	and    DWORD PTR [edx-0x61],edi
  40323f:	adc    dh,ah
  403241:	inc    ebx
  403242:	dec    DWORD PTR [ebx-0x1064c3f0]
  403248:	mov    ss,WORD PTR [ebx]
  40324a:	cld    
  40324b:	mov    dh,0x3d
  40324d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40324e:	add    al,0x84
  403250:	(bad)  
  403251:	imul   eax,ebx,0xffffffab
  403254:	sbb    ah,cl
  403256:	pop    es
  403257:	jb     0x403297
  403259:	xchg   edi,eax
  40325a:	fistp  WORD PTR [ebp-0x5e]
  40325d:	sub    esp,ecx
  40325f:	mov    ecx,0x65f328e5
  403264:	push   ebx
  403265:	add    DWORD PTR [edx+edx*2+0x8],edi
  403269:	xlat   BYTE PTR ds:[ebx]
  40326a:	cmc    
  40326b:	add    eax,0x3c40d87b
  403270:	adc    ebp,edx
  403272:	jmp    0xf957b22b
  403277:	inc    ecx
  403278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403279:	add    ah,ch
  40327b:	sbb    al,0x42
  40327d:	out    0x5a,eax
  40327f:	sub    ecx,DWORD PTR [esi-0x2c0de72e]
  403285:	sub    al,0x8a
  403287:	mov    edi,0x5f1f0382
  40328c:	jge    0x4032b8
  40328e:	jecxz  0x403305
  403290:	es ins BYTE PTR es:[edi],dx
  403292:	mov    bl,0x86
  403294:	hlt    
  403295:	mov    ebx,0xbe835436
  40329a:	sub    al,0x39
  40329c:	sub    bh,BYTE PTR [esi+0x5dc929cc]
  4032a2:	aaa    
  4032a3:	pop    ebx
  4032a4:	add    DWORD PTR [edx-0x414485aa],0x4d
  4032ab:	inc    eax
  4032ac:	dec    edx
  4032ad:	cmp    al,0x85
  4032af:	pop    eax
  4032b0:	(bad)  
  4032b1:	pop    ds
  4032b2:	lock add eax,edx
  4032b5:	je     0x4032cd
  4032b7:	in     eax,0xa4
  4032b9:	push   0xffffffa9
  4032bb:	mov    esp,0xa1376423
  4032c0:	cmp    bl,BYTE PTR [ebx+0x11]
  4032c3:	pushf  
  4032c4:	shl    dh,1
  4032c6:	inc    eax
  4032c7:	dec    edx
  4032c8:	cmp    DWORD PTR [edx+0x70],ebp
  4032cb:	mov    DWORD PTR [ecx-0xd1e7cbc],eax
  4032d1:	pop    ss
  4032d2:	adc    al,0x47
  4032d4:	rcr    BYTE PTR [edi+0x6f],cl
  4032d7:	adc    ebp,DWORD PTR [ebp-0x5038828f]
  4032dd:	xchg   edx,eax
  4032de:	fld    QWORD PTR [esp+eiz*4+0x3aedfe70]
  4032e5:	stos   BYTE PTR es:[edi],al
  4032e6:	jmp    0x9e54b006
  4032eb:	js     0x403277
  4032ed:	mov    dl,0xc7
  4032ef:	or     eax,0x7a856514
  4032f4:	popa   
  4032f5:	pop    edx
  4032f6:	pop    ss
  4032f7:	mov    dh,0x33
  4032f9:	push   esp
  4032fa:	jbe    0x403370
  4032fc:	mov    dh,0x97
  4032fe:	ds push ss
  403300:	bound  esp,QWORD PTR [eax+esi*8]
  403303:	jmp    0x907681f8
  403308:	mov    ah,0x32
  40330a:	jecxz  0x403302
  40330c:	xor    ch,bl
  40330e:	and    eax,0xa4911e81
  403313:	mov    cl,0xef
  403315:	(bad)  
  403316:	adc    ah,BYTE PTR [eax+0x5f5db1f0]
  40331c:	sbb    ebx,DWORD PTR [edi]
  40331e:	dec    edx
  40331f:	(bad)  
  403320:	outs   dx,DWORD PTR ds:[esi]
  403321:	sub    BYTE PTR [eax-0x5d],al
  403324:	inc    DWORD PTR [esi+eax*4+0x17]
  403328:	mov    ebx,0x49db4418
  40332d:	enter  0x44ad,0x91
  403331:	or     al,BYTE PTR [esp+edx*8]
  403334:	das    
  403335:	mov    bh,0xdf
  403338:	cmp    DWORD PTR [ebx+0x29],ebx
  40333b:	mov    ds,WORD PTR [edx-0x5c3c6a0d]
  403341:	pop    esp
  403342:	mov    edi,ecx
  403344:	retf   0xc8aa
  403347:	sbb    edx,esi
  403349:	cmp    al,0x46
  40334b:	inc    ebp
  40334c:	fmul   QWORD PTR [ebp+0x50c87e15]
  403352:	dec    esi
  403353:	jns    0x40330e
  403355:	sub    ecx,0x8cf35b0b
  40335b:	aaa    
  40335c:	xor    eax,0x4591b500
  403361:	jle    0x4033b6
  403363:	mov    ebp,DWORD PTR [esi]
  403365:	call   0xa2f0:0x1d87e045
  40336c:	sbb    esp,DWORD PTR [eax]
  40336e:	add    dl,BYTE PTR [edi+0x51]
  403371:	rol    edi,1
  403373:	xchg   DWORD PTR ds:0x76f8c549,esp
  403379:	xor    DWORD PTR [ecx+0x59],esp
  40337c:	fsubr  DWORD PTR [edx]
  40337e:	sub    edx,edx
  403380:	xor    al,0x6d
  403382:	pop    es
  403383:	nop    DWORD PTR [edx+0x158920c8]
  40338a:	sub    eax,0xe028e01e
  40338f:	je     0x40335c
  403391:	pop    esi
  403392:	leave  
  403393:	mov    dh,0x16
  403395:	mov    dl,0x5
  403397:	xlat   BYTE PTR ds:[ebx]
  403398:	lahf   
  403399:	inc    ebx
  40339a:	ret    0x9b25
  40339d:	in     al,dx
  40339e:	iret   
  40339f:	outs   dx,DWORD PTR ds:[esi]
  4033a0:	into   
  4033a1:	cmc    
  4033a2:	mov    DWORD PTR [esi+0x41],ebp
  4033a5:	push   ebp
  4033a6:	cdq    
  4033a7:	add    al,0xc8
  4033a9:	mov    eax,0x195fdcf7
  4033ae:	scas   al,BYTE PTR es:[edi]
  4033af:	mov    dh,0x13
  4033b1:	and    al,0x73
  4033b3:	adc    bh,BYTE PTR [edx]
  4033b5:	pop    ds
  4033b6:	(bad)  
  4033b7:	(bad)  
  4033b8:	outs   dx,BYTE PTR ds:[esi]
  4033b9:	popf   
  4033ba:	mov    BYTE PTR [edi+eiz*2-0x39a92d09],al
  4033c1:	lock enter 0xadc2,0xec
  4033c6:	sar    DWORD PTR [eax+ecx*2],cl
  4033c9:	(bad)  
  4033ca:	cwde   
  4033cb:	arpl   WORD PTR [edx+ebp*4],bp
  4033ce:	push   0xffffffd9
  4033d0:	retf   0x4ec3
  4033d3:	ret    
  4033d4:	mov    ds:0xa4eb321,al
  4033d9:	inc    esi
  4033da:	sti    
  4033db:	shl    ecx,1
  4033dd:	mov    bl,0x84
  4033df:	dec    ebp
  4033e0:	(bad)  
  4033e1:	jmp    0xbf7e1d12
  4033e6:	jne    0x4033b1
  4033e8:	add    DWORD PTR [ecx+0x2b],0x56
  4033ec:	adc    bl,0x45
  4033ef:	xchg   ebx,eax
  4033f0:	mov    ah,0x6
  4033f2:	jne    0x403388
  4033f4:	adc    BYTE PTR [ebx],dl
  4033f6:	fisub  DWORD PTR [eax+0x4c998d9c]
  4033fc:	cmc    
  4033fd:	jmp    0xcb6f:0x7d6bbee9
  403404:	das    
  403405:	aaa    
  403406:	and    edi,eax
  403408:	out    dx,al
  403409:	jmp    0x40343b
  40340b:	push   0x8d354190
  403410:	adc    BYTE PTR [eax],dl
  403412:	mov    BYTE PTR [ecx],ah
  403414:	add    edi,DWORD PTR [eax+0x49]
  403417:	loop   0x403434
  403419:	jb     0x403453
  40341b:	adc    ecx,DWORD PTR [ecx]
  40341d:	xchg   edx,eax
  40341e:	aas    
  40341f:	test   al,0xf9
  403421:	fstp   st(0)
  403423:	pop    edi
  403424:	pop    ebx
  403425:	push   edi
  403426:	or     eax,0x851fa577
  40342b:	pushf  
  40342c:	nop
  40342d:	pop    ebx
  40342e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40342f:	(bad)  
  403430:	push   ecx
  403431:	in     eax,0x11
  403433:	and    al,0x81
  403435:	adc    esp,esi
  403437:	stc    
  403438:	sbb    BYTE PTR [esi-0x7e10619a],dh
  40343e:	and    DWORD PTR [eax+0x35],edi
  403441:	pusha  
  403442:	push   ebx
  403443:	and    DWORD PTR [eax],edi
  403445:	xor    esp,DWORD PTR [edi+0x1f]
  403448:	test   BYTE PTR [esi],cl
  40344a:	xchg   DWORD PTR [edi+ecx*8+0x46],edi
  40344e:	aad    0xc1
  403450:	jmp    0x3255389b
  403455:	fistp  DWORD PTR [esi-0x66c1e02d]
  40345b:	jecxz  0x403434
  40345d:	sub    BYTE PTR [edx-0x5eb5249c],bl
  403463:	push   esp
  403464:	mov    ds:0x5a21602c,al
  403469:	mov    eax,0x6756fdcf
  40346e:	mov    cl,0xc3
  403470:	pop    esi
  403471:	loopne 0x403413
  403473:	and    al,0x57
  403475:	int3   
  403476:	jo     0x403436
  403478:	pop    esi
  403479:	jno    0x4034df
  40347b:	fsubr  QWORD PTR [ebp-0x620eeab6]
  403481:	xchg   cl,al
  403483:	das    
  403484:	mov    esi,0x9e0eba9e
  403489:	test   al,0xb0
  40348b:	out    0xbe,al
  40348d:	jecxz  0x40342d
  40348f:	sub    eax,0x358e23cd
  403494:	nop
  403495:	jae    0x4034b5
  403497:	cdq    
  403498:	jb     0x403495
  40349a:	xor    al,0x16
  40349c:	xor    bh,BYTE PTR ds:0xd8cd01cb
  4034a2:	mov    cs,esp
  4034a4:	dec    eax
  4034a5:	aaa    
  4034a6:	retf   0x39ae
  4034a9:	int    0x86
  4034ab:	dec    ebp
  4034ac:	in     eax,dx
  4034ad:	mov    al,0xb8
  4034af:	sub    esi,DWORD PTR [esi-0x4670e494]
  4034b5:	cmp    DWORD PTR [ebp-0x74eb9669],edx
  4034bb:	sbb    eax,0x77ce3c8f
  4034c0:	jmp    0x645550f8
  4034c5:	das    
  4034c6:	stos   DWORD PTR es:[edi],eax
  4034c7:	mov    ebx,0xbf8c05d9
  4034cc:	and    DWORD PTR [ecx-0x20],0x5195d0aa
  4034d3:	sub    al,0xcb
  4034d5:	in     eax,0x58
  4034d7:	and    dh,ch
  4034d9:	or     BYTE PTR [esi-0x15a68424],bl
  4034df:	inc    esi
  4034e0:	popa   
  4034e1:	(bad)  
  4034e2:	and    DWORD PTR [ecx+0x5d],0x3c513aa3
  4034e9:	call   DWORD PTR [ecx-0x3f]
  4034ec:	fdivr  st,st(6)
  4034ee:	cmp    BYTE PTR [ebp+0x36],dh
  4034f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034f2:	icebp  
  4034f3:	jo     0x4034b9
  4034f5:	xchg   ebp,eax
  4034f6:	mov    bl,0xc0
  4034f8:	dec    dh
  4034fa:	dec    ecx
  4034fb:	in     eax,dx
  4034fc:	add    DWORD PTR [ebx],eax
  4034fe:	or     ebx,DWORD PTR [ecx]
  403500:	dec    edi
  403501:	inc    edi
  403502:	jmp    0xd2a1:0x139df68e
  403509:	je     0x4034f6
  40350b:	retf   
  40350c:	adc    eax,0xf38c1e7c
  403511:	jg     0x4034bf
  403513:	cmp    al,0xd
  403515:	mov    esi,0x34a65331
  40351a:	inc    dh
  40351c:	retf   
  40351d:	enter  0xead6,0xa0
  403521:	stc    
  403522:	popa   
  403523:	les    esi,FWORD PTR [edi+0x50]
  403526:	sbb    cl,cl
  403528:	test   eax,0x5beb5b90
  40352d:	repnz aad 0x40
  403530:	mov    BYTE PTR [esi+0x74599a98],ch
  403536:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403537:	xchg   BYTE PTR [esi],dh
  403539:	and    ah,al
  40353b:	and    DWORD PTR ds:0xf1ed59d1,esi
  403541:	jmp    0xb6e3:0x23b20b84
  403548:	clc    
  403549:	add    esp,ebp
  40354b:	mov    ecx,0x9469ec22
  403550:	in     eax,0xd8
  403552:	loopne 0x4035c7
  403554:	adc    DWORD PTR [edi+0x52],edx
  403557:	fcmovbe st,st(6)
  403559:	lods   al,BYTE PTR ds:[esi]
  40355a:	xchg   DWORD PTR [ecx],ecx
  40355c:	fs rcl ebx,cl
  40355f:	sbb    esp,esp
  403561:	xchg   esi,eax
  403562:	shrd   DWORD PTR [eax+0x34],eax,cl
  403566:	push   eax
  403567:	bound  ebp,QWORD PTR [edx-0x45]
  40356a:	paddb  mm0,QWORD PTR [ebp+0x783d3960]
  403571:	cmp    dl,BYTE PTR [ecx+0x32]
  403574:	jae    0x4035a6
  403576:	aaa    
  403577:	add    edx,DWORD PTR [esi+edx*4+0x766b26d5]
  40357e:	retf   0x3c9f
  403581:	sub    eax,0xf13a0c78
  403586:	xor    ch,BYTE PTR [eax]
  403588:	add    eax,0x2bc737a1
  40358d:	xlat   BYTE PTR ds:[ebx]
  40358e:	adc    DWORD PTR [eax-0x28],0xe
  403592:	(bad)  
  403593:	mov    al,ds:0x1bc6efaf
  403598:	inc    ebp
  403599:	or     eax,0x78c28ca9
  40359e:	add    edi,DWORD PTR [edx]
  4035a0:	jg     0x4035b1
  4035a2:	sub    ebx,DWORD PTR [edx]
  4035a4:	jnp    0x40360a
  4035a6:	fiadd  DWORD PTR fs:[ecx-0x6e63d44]
  4035ad:	fstp   TBYTE PTR [esi+0x2f]
  4035b0:	mov    ebp,0xfc43aca8
  4035b5:	(bad)  
  4035b6:	sbb    BYTE PTR [ebx],0x60
  4035b9:	cli    
  4035ba:	jns    0x403571
  4035bc:	sub    eax,0x1ad6cf61
  4035c1:	inc    esi
  4035c2:	cmp    eax,0xd8ed05c7
  4035c7:	ds fdiv st,st(7)
  4035ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035cb:	aam    0xd9
  4035cd:	and    eax,0x3c6ae684
  4035d2:	xor    dh,ah
  4035d4:	in     eax,dx
  4035d5:	sti    
  4035d6:	pop    ebx
  4035d7:	inc    ebp
  4035d8:	bound  edi,QWORD PTR [ecx-0x2b]
  4035db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035dc:	outs   dx,DWORD PTR ds:[esi]
  4035dd:	jmp    DWORD PTR [eax]
  4035df:	pop    ebp
  4035e0:	mov    ebp,0xab1263c5
  4035e5:	popf   
  4035e6:	addr16 fs push edx
  4035e9:	sub    ch,BYTE PTR [ebp+ebx*8+0x39]
  4035ed:	jmp    0x4035e7
  4035ef:	fs cli 
  4035f1:	je     0x403662
  4035f3:	add    BYTE PTR [ebp+eax*4+0x38a17c08],al
  4035fa:	stc    
  4035fb:	or     DWORD PTR [ebx*2+0x6f550c8a],esp
  403602:	lods   eax,DWORD PTR ds:[esi]
  403603:	ds test eax,0xe057b695
  403609:	push   ecx
  40360a:	fnstcw WORD PTR [ecx-0x5ef4b6b0]
  403610:	adc    dh,BYTE PTR [ebx+0x4fcd687a]
  403616:	ret    
  403617:	lea    edx,ds:0x97bc24e9
  40361d:	jmp    0xd973:0xda5ca899
  403624:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403625:	popf   
  403626:	or     eax,0x222ab477
  40362b:	cs pop edi
  40362d:	sbb    BYTE PTR ds:0x198276b2,bh
  403633:	xor    DWORD PTR [edx+0x7b],edi
  403636:	mov    esi,0xfec2e35
  40363b:	out    dx,eax
  40363c:	sub    DWORD PTR [ebp-0x5dbcfc55],esp
  403642:	jg     0x403663
  403644:	jl     0x4035f3
  403646:	or     BYTE PTR [ebp-0x5e46882],ch
  40364c:	fimul  WORD PTR [ebp-0x5e]
  40364f:	outs   dx,BYTE PTR ds:[esi]
  403650:	dec    ecx
  403651:	lds    esp,FWORD PTR [edi+0x26]
  403654:	stc    
  403655:	jp     0x403678
  403657:	scas   al,BYTE PTR es:[edi]
  403658:	mov    al,0x2a
  40365a:	push   es
  40365b:	or     bl,BYTE PTR [eax-0x699c02d7]
  403661:	jns    0x4035f2
  403663:	add    al,0x7a
  403665:	mov    ds:0x36df9b8a,al
  40366a:	int3   
  40366b:	lods   eax,DWORD PTR ds:[esi]
  40366c:	arpl   WORD PTR [eax+0x4d],si
  40366f:	addr16 pusha 
  403671:	(bad)  
  403672:	adc    al,cl
  403674:	arpl   WORD PTR [edi],si
  403676:	pop    esi
  403677:	fld    st(6)
  403679:	cmp    DWORD PTR [edi+0x5bf8998d],0x1b
  403680:	retf   
  403681:	(bad)  
  403682:	lock arpl WORD PTR [ecx-0x4d],cx
  403686:	add    esp,DWORD PTR [ebp+0x3d]
  403689:	push   ss
  40368a:	push   edx
  40368b:	sub    BYTE PTR [ebp+0x2],ah
  40368e:	shl    BYTE PTR [esi],cl
  403690:	test   cl,dl
  403692:	and    BYTE PTR [esi-0x6d],0x7e
  403696:	push   0x7f438b7d
  40369b:	sbb    ebx,esi
  40369d:	pop    edi
  40369e:	sbb    eax,0x850741b0
  4036a3:	into   
  4036a4:	outs   dx,DWORD PTR ds:[esi]
  4036a5:	arpl   cx,bx
  4036a7:	je     0x4036ec
  4036a9:	lea    ecx,[ecx]
  4036ab:	add    BYTE PTR [eax+0x7c],cl
  4036ae:	cmp    al,bl
  4036b0:	jbe    0x403717
  4036b2:	mov    fs,WORD PTR [eax+0x36]
  4036b5:	jo     0x4036b9
  4036b7:	add    DWORD PTR [ebx],esi
  4036b9:	jmp    0xfd33:0xa328a0f6
  4036c0:	cmp    bl,BYTE PTR [ebx+0x71063d35]
  4036c6:	push   edx
  4036c7:	add    dh,ah
  4036c9:	push   es
  4036ca:	hlt    
  4036cb:	lea    ecx,[esi-0x71]
  4036ce:	in     eax,0x6e
  4036d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036d1:	dec    esp
  4036d2:	clc    
  4036d3:	iret   
  4036d4:	cmc    
  4036d5:	fisubr DWORD PTR [esi+0x7057a805]
  4036db:	clc    
  4036dc:	pop    eax
  4036dd:	pop    ds
  4036de:	rcr    DWORD PTR [ebp-0x79],0x7c
  4036e2:	xchg   esp,eax
  4036e3:	cmp    BYTE PTR ds:0xe511e3d8,ch
  4036e9:	add    ebx,ebp
  4036eb:	dec    ebp
  4036ec:	push   ebx
  4036ed:	pop    eax
  4036ee:	mov    dl,0x97
  4036f0:	ficom  WORD PTR [edx-0x3f]
  4036f3:	push   esp
  4036f4:	(bad)
  4036f7:	lds    edi,FWORD PTR [ebp+0x7971581a]
  4036fd:	imul   edx,DWORD PTR [ebp+0x4e],0xffffffe7
  403701:	cli    
  403702:	jns    0x403741
  403704:	cmp    cl,BYTE PTR [esi-0x64ae6c7b]
  40370a:	mov    edx,0xcf28cc0e
  40370f:	lods   al,BYTE PTR ds:[esi]
  403710:	mov    BYTE PTR [edi],ch
  403712:	jecxz  0x4036d5
  403714:	jge    0x40374f
  403716:	push   ebp
  403717:	rol    ebp,1
  403719:	dec    eax
  40371a:	jo     0x4036c7
  40371c:	jecxz  0x40377f
  40371e:	xchg   edi,eax
  40371f:	pop    eax
  403720:	data16 jnp 0x403756
  403723:	jno    0x403735
  403725:	aad    0x3
  403727:	loop   0x4036b0
  403729:	in     al,dx
  40372a:	cmp    ah,al
  40372c:	cmp    ah,BYTE PTR [eax]
  40372e:	sub    eax,0xaa51669a
  403733:	push   ecx
  403734:	pop    edi
  403735:	ja     0x4036bd
  403737:	mov    esi,0x9e565f99
  40373c:	push   0x3
  40373e:	push   0x58
  403740:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403741:	not    DWORD PTR [eax+0x1f761ca1]
  403747:	and    BYTE PTR [edi+0x52f0097f],ah
  40374d:	int    0x75
  40374f:	mov    dl,BYTE PTR [ebx+0x2e1a0bd1]
  403755:	loope  0x403798
  403757:	lods   eax,DWORD PTR ds:[esi]
  403758:	push   ds
  403759:	and    al,0x1d
  40375b:	frstor [edi-0x53e93a8c]
  403761:	lds    ebx,FWORD PTR [edx-0xec11fee]
  403767:	(bad)  
  403768:	xchg   esp,eax
  403769:	loope  0x4036f8
  40376b:	push   esp
  40376c:	mov    eax,0xde558c99
  403771:	cwde   
  403772:	outs   dx,DWORD PTR ds:[esi]
  403773:	xor    esp,ebx
  403775:	sub    BYTE PTR [edx],bl
  403777:	or     ebp,DWORD PTR [eax+esi*2]
  40377a:	dec    edx
  40377b:	popf   
  40377c:	rol    BYTE PTR [ecx+0x3c],cl
  40377f:	nop
  403780:	out    dx,eax
  403781:	dec    edx
  403782:	test   eax,0xcd389f01
  403787:	fst    QWORD PTR [ebx]
  403789:	popf   
  40378a:	daa    
  40378b:	pop    ds
  40378c:	hlt    
  40378d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40378e:	mov    dl,0x24
  403790:	loop   0x403751
  403792:	push   ecx
  403793:	dec    esi
  403794:	dec    esp
  403795:	sub    BYTE PTR [ebp+0x1a],dh
  403798:	mov    dl,0xb0
  40379a:	(bad)  
  40379b:	addr16 jbe 0x40380c
  40379e:	js     0x4037a1
  4037a0:	outs   dx,BYTE PTR ds:[esi]
  4037a1:	(bad)  
  4037a2:	lods   eax,DWORD PTR ds:[esi]
  4037a3:	fdivp  st(5),st
  4037a5:	(bad)  
  4037a6:	aaa    
  4037a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4037a8:	or     cl,dl
  4037aa:	fwait
  4037ab:	in     al,dx
  4037ac:	mov    BYTE PTR [ebx-0x39],bh
  4037af:	push   esi
  4037b0:	imul   ebp,DWORD PTR [ebx],0xffffffdc
  4037b3:	outs   dx,DWORD PTR ds:[esi]
  4037b4:	inc    ebp
  4037b5:	bts    DWORD PTR [edx-0x1669f9fe],eax
  4037bc:	sar    DWORD PTR [eax],0x2a
  4037bf:	lds    esi,FWORD PTR [ebp+0x30]
  4037c2:	mov    ebp,0xe7897b
  4037c7:	aas    
  4037c8:	test   al,0x5f
  4037ca:	shl    ebp,cl
  4037cc:	pop    ecx
  4037cd:	lods   al,BYTE PTR ds:[esi]
  4037ce:	ret    
  4037cf:	out    dx,al
  4037d0:	sti    
  4037d1:	jmp    0x4037b1
  4037d3:	iret   
  4037d4:	jns    0x4037db
  4037d6:	push   esp
  4037d7:	jp     0x403808
  4037d9:	push   edx
  4037da:	(bad)  
  4037db:	leave  
  4037dc:	retf   0xf35
  4037df:	rcr    DWORD PTR [eax],0xc5
  4037e2:	scas   al,BYTE PTR es:[edi]
  4037e3:	mov    ds:0xfd94d470,eax
  4037e8:	push   ds
  4037e9:	in     eax,dx
  4037ea:	adc    ecx,esi
  4037ec:	dec    ebx
  4037ed:	sub    al,0xa
  4037ef:	cmp    DWORD PTR [edi],ebp
  4037f1:	xchg   DWORD PTR ds:0xb86329bf,esi
  4037f7:	iret   
  4037f8:	or     eax,0x64e82686
  4037fd:	sub    DWORD PTR [ecx-0x49],ecx
  403800:	not    BYTE PTR [edx+ebx*4+0x54]
  403804:	pop    ss
  403805:	mov    bl,BYTE PTR [ebp*8-0xdb2d1f3]
  40380c:	adc    dh,BYTE PTR [edi]
  40380e:	fucomip st,st(5)
  403810:	les    edx,FWORD PTR [ebx+0x78bccb28]
  403816:	lods   eax,DWORD PTR ds:[esi]
  403817:	pop    ss
  403818:	(bad)  
  403819:	xor    esi,DWORD PTR [eax]
  40381b:	jno    0x40381d
  40381d:	sbb    DWORD PTR ds:[eax],ebp
  403820:	das    
  403821:	mov    BYTE PTR [ebp-0x677b0b81],dl
  403827:	scas   al,BYTE PTR es:[edi]
  403828:	and    DWORD PTR [ebx-0x20ea70bb],esp
  40382e:	in     eax,dx
  40382f:	sub    eax,0xf81cdddc
  403834:	push   cs
  403835:	xchg   BYTE PTR [ebx],ch
  403837:	jl     0x4037e6
  403839:	arpl   WORD PTR [ebp+edx*8-0x7bfc3ff0],sp
  403840:	call   0xe1ed:0x20276ef3
  403847:	call   0x39f3b777
  40384c:	jo     0x4037d7
  40384e:	(bad)  
  40384f:	jle    0x4037df
  403851:	sti    
  403852:	xchg   esi,eax
  403853:	adc    ebx,DWORD PTR [ebp-0x37]
  403856:	adc    ebx,DWORD PTR [ebp+0x35de025]
  40385c:	jbe    0x4038b1
  40385e:	es inc esi
  403860:	cs push esi
  403862:	sbb    eax,0xb8b1c85a
  403867:	int3   
  403868:	pusha  
  403869:	or     al,0x19
  40386b:	ret    0x4c50
  40386e:	mov    bl,0xda
  403870:	(bad)  
  403871:	push   eax
  403872:	iret   
  403873:	jne    0x4037f5
  403875:	dec    esp
  403876:	je     0x403891
  403878:	ds (bad) 
  40387a:	or     edx,ebp
  40387c:	ror    BYTE PTR ds:0xdde00584,0xd5
  403883:	sub    al,ah
  403885:	push   esi
  403886:	push   eax
  403887:	xor    bl,BYTE PTR [edi+0x75]
  40388a:	clc    
  40388b:	cdq    
  40388c:	jl     0x403814
  40388e:	mov    DWORD PTR [ecx-0x4a3a6481],edx
  403894:	frstor [ecx-0x57]
  403897:	and    DWORD PTR [eax+0x75ec2253],0xc5e502b2
  4038a1:	push   0xffffff92
  4038a3:	mov    ebx,DWORD PTR ds:0x39385bb2
  4038a9:	push   edx
  4038aa:	pop    eax
  4038ab:	call   0x46c794c2
  4038b0:	rcr    BYTE PTR [esp+eax*2+0x53],1
  4038b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4038b5:	push   ds
  4038b6:	div    DWORD PTR [eax]
  4038b8:	mov    ch,0x7b
  4038ba:	push   ss
  4038bb:	push   esp
  4038bc:	(bad)  [ecx+ebp*2-0x33]
  4038c0:	mov    edi,0x7eaf97f8
  4038c5:	cmp    DWORD PTR [ebp+edi*8+0xffdab5],ebx
  4038cc:	es mov ebx,0xe7affdb7
  4038d2:	inc    esp
  4038d3:	sub    bl,BYTE PTR [ebx-0x1ea6708d]
  4038d9:	(bad)  
  4038da:	popa   
  4038db:	xchg   ebx,eax
  4038dc:	mov    dl,cl
  4038de:	in     eax,dx
  4038df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038e0:	mov    edi,DWORD PTR [edx+0x6b]
  4038e3:	cs xor cl,dl
  4038e6:	cld    
  4038e7:	jbe    0x4038f6
  4038e9:	jmp    0xa054:0x54a5ba57
  4038f0:	mov    bl,0x6d
  4038f2:	cwde   
  4038f3:	inc    edx
  4038f4:	aaa    
  4038f5:	adc    BYTE PTR [ebx+esi*8-0x59f9f989],dh
  4038fc:	xor    al,0xfd
  4038fe:	pop    ds
  4038ff:	lds    esp,FWORD PTR [ebp+0x13837f5e]
  403905:	aad    0xf7
  403907:	adc    dl,BYTE PTR [ecx]
  403909:	inc    ebx
  40390a:	sti    
  40390b:	pop    ss
  40390c:	mov    cl,0x65
  40390e:	xlat   BYTE PTR ds:[ebx]
  40390f:	mov    ebp,0x37025e04
  403914:	cli    
  403915:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403916:	fcom   QWORD PTR [ebp-0x384d248e]
  40391c:	mov    fs,WORD PTR [eax]
  40391e:	mov    al,0xe0
  403920:	or     eax,0x66e82777
  403925:	inc    ebp
  403926:	sbb    DWORD PTR [esi],edx
  403928:	add    eax,0x52ffe82
  40392d:	sbb    al,0x40
  40392f:	div    BYTE PTR [esi]
  403931:	push   eax
  403932:	lea    eax,[eax+0x2f1a655f]
  403938:	cmp    cl,BYTE PTR [edi]
  40393a:	xor    eax,0xf8a88b52
  40393f:	lods   eax,DWORD PTR ds:[esi]
  403940:	push   ebp
  403941:	ret    0x65dd
  403944:	stos   DWORD PTR es:[edi],eax
  403945:	cmp    edi,DWORD PTR [esi]
  403947:	inc    esp
  403948:	cli    
  403949:	mov    DWORD PTR [ebp+0xf],ebp
  40394c:	(bad)  
  40394d:	psrlw  mm4,QWORD PTR [esi-0x46]
  403951:	rcl    DWORD PTR [ebx+0x3b6a08a2],cl
  403957:	sbb    DWORD PTR [edx+0x201d92a5],ebp
  40395d:	mov    esi,0xdbc519a0
  403962:	outs   dx,BYTE PTR ds:[esi]
  403963:	adc    eax,0x16d0c7f7
  403968:	or     bh,bl
  40396a:	jae    0x4038f7
  40396c:	out    0x81,eax
  40396e:	stos   DWORD PTR es:[edi],eax
  40396f:	dec    eax
  403970:	or     BYTE PTR [eax],dl
  403972:	test   eax,0x2f02a36d
  403977:	stos   BYTE PTR es:[edi],al
  403978:	xor    ah,BYTE PTR [esi]
  40397a:	sub    al,0x68
  40397c:	mov    bl,0x93
  40397e:	push   eax
  40397f:	fnstcw WORD PTR [ebx]
  403981:	sbb    eax,0xa8163cb
  403986:	out    0x9f,eax
  403988:	dec    eax
  403989:	fsub   DWORD PTR [esi]
  40398b:	dec    edx
  40398c:	aam    0xdb
  40398e:	aaa    
  40398f:	dec    ebp
  403990:	mov    edi,0xe261b9c
  403995:	xlat   BYTE PTR ds:[ebx]
  403996:	and    DWORD PTR [esi],edi
  403998:	into   
  403999:	xchg   BYTE PTR [ebx-0x3],cl
  40399c:	mov    edi,0x6e5f4fd8
  4039a1:	mov    cl,0x2
  4039a3:	mov    ebx,0x8a4517ec
  4039a8:	inc    ecx
  4039a9:	std    
  4039aa:	lds    esp,FWORD PTR [ebx+0xe48b5d3]
  4039b0:	inc    edx
  4039b1:	xchg   esp,eax
  4039b2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039b3:	push   eax
  4039b4:	xor    dh,BYTE PTR [esi-0x1d]
  4039b7:	or     al,0xda
  4039b9:	out    dx,al
  4039ba:	loopne 0x40394d
  4039bc:	std    
  4039bd:	aas    
  4039be:	(bad)  
  4039bf:	cwde   
  4039c0:	mov    bh,0xff
  4039c2:	jp     0x403a09
  4039c4:	xchg   esp,eax
  4039c5:	push   edx
  4039c6:	jl     0x403a00
  4039c8:	jmp    0xd658:0xdeca26d5
  4039cf:	call   0xab61fae6
  4039d4:	xor    ebp,0xd452a807
  4039da:	test   eax,0xde1b5206
  4039df:	(bad)  
  4039e0:	(bad)  
  4039e1:	out    0x2c,eax
  4039e3:	mov    bh,0xd
  4039e5:	pop    esp
  4039e6:	adc    ah,cl
  4039e8:	xor    esp,edx
  4039ea:	pop    esi
  4039eb:	ins    DWORD PTR es:[edi],dx
  4039ec:	adc    BYTE PTR [esi-0x50],ch
  4039ef:	jo     0x403a0f
  4039f1:	add    BYTE PTR [edx-0x56],ah
  4039f4:	pop    ds
  4039f5:	and    DWORD PTR [ebx],eax
  4039f7:	cmp    dl,0x68
  4039fa:	call   0xedee:0x11fb2954
  403a01:	mov    WORD PTR [ebx],?
  403a03:	neg    BYTE PTR ds:0x97d4a51d
  403a09:	pop    es
  403a0a:	aad    0x77
  403a0c:	cwde   
  403a0d:	pop    ecx
  403a0e:	ret    0x532b
  403a11:	push   ebp
  403a12:	inc    ebx
  403a13:	je     0x403a92
  403a15:	xchg   edi,eax
  403a16:	dec    ecx
  403a17:	fdiv   DWORD PTR [edi+0x74]
  403a1a:	stc    
  403a1b:	clc    
  403a1c:	jno    0x403a9b
  403a1e:	fldenv [edx]
  403a20:	stos   BYTE PTR es:[di],al
  403a22:	adc    DWORD PTR [esi-0x7803f4d8],0x55
  403a29:	fsubr  QWORD PTR [ebx]
  403a2b:	lods   al,BYTE PTR ds:[esi]
  403a2c:	adc    DWORD PTR [ebx+0x5],edx
  403a2f:	mov    ds:0xa5c0731e,eax
  403a34:	sbb    ebp,0x74
  403a37:	pop    ds
  403a38:	popa   
  403a39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a3a:	mov    cl,0x8c
  403a3c:	sbb    dl,dl
  403a3e:	daa    
  403a3f:	or     al,0xb2
  403a41:	in     al,0xc8
  403a43:	in     al,dx
  403a44:	jnp    0x403a55
  403a46:	dec    esi
  403a47:	xchg   esp,eax
  403a48:	call   0xe4dc:0x733f8563
  403a4f:	jl     0x403a6d
  403a51:	sbb    bh,dl
  403a53:	loope  0x403ac6
  403a55:	xor    DWORD PTR [eax+0x7f],esi
  403a58:	cmp    BYTE PTR [ecx+0x1a],0xd
  403a5c:	jg     0x403a33
  403a5e:	call   DWORD PTR [ebx+0x78dec83c]
  403a64:	lock call 0x7f1e2450
  403a6a:	(bad)
  403a6e:	push   edx
  403a6f:	mov    eax,0x2d7a8496
  403a74:	sar    dl,cl
  403a76:	jl     0x403a88
  403a78:	ins    DWORD PTR es:[edi],dx
  403a79:	mov    edi,0xf5325dc0
  403a7e:	inc    edi
  403a7f:	push   ss
  403a80:	push   cs
  403a81:	sub    DWORD PTR es:[ecx+ecx*8-0x20],ebx
  403a86:	in     al,0x28
  403a88:	push   esi
  403a89:	inc    ebx
  403a8a:	adc    DWORD PTR [edx-0x72d786a0],edi
  403a90:	dec    esi
  403a91:	sbb    eax,0xf7a01471
  403a96:	gs ja  0x403aaf
  403a99:	adc    eax,0xceeb958c
  403a9e:	ins    BYTE PTR es:[edi],dx
  403a9f:	iret   
  403aa0:	and    ch,bl
  403aa2:	loopne 0x403a2e
  403aa4:	mov    edx,0x2fabca0b
  403aa9:	push   eax
  403aaa:	mov    ecx,DWORD PTR ds:0xfd3127c5
  403ab0:	xor    al,0xad
  403ab3:	cmp    eax,0x8e7373a2
  403ab8:	scas   eax,DWORD PTR es:[edi]
  403ab9:	lods   eax,DWORD PTR ds:[esi]
  403aba:	xor    DWORD PTR [ebx],0xffffffe4
  403abd:	cmp    ebp,ebp
  403abf:	ins    DWORD PTR es:[edi],dx
  403ac0:	fwait
  403ac1:	sbb    bl,ch
  403ac3:	int3   
  403ac4:	xchg   edi,esp
  403ac6:	adc    BYTE PTR [esi+0x139ef24],bl
  403acc:	shr    BYTE PTR [eax-0xe0bcff],0xa6
  403ad3:	cdq    
  403ad4:	xchg   ebp,eax
  403ad5:	mov    ds:0x2f88e98b,al
  403ada:	inc    esp
  403adb:	mov    ebp,0x9fac8063
  403ae0:	jo     0x403aca
  403ae2:	neg    DWORD PTR [ebp+0x1d0fb712]
  403ae8:	out    dx,al
  403ae9:	mov    ecx,0xd8283f8c
  403aee:	loop   0x403b64
  403af0:	(bad)  
  403af1:	rcr    BYTE PTR [ebx+0x1a4edf55],0x5f
  403af8:	and    esi,DWORD PTR ds:0x6e769be4
  403afe:	adc    esp,edi
  403b00:	mov    al,ds:0x5d5563a0
  403b05:	xor    eax,0x32877c4a
  403b0a:	mov    gs,WORD PTR [ebx-0x66]
  403b0d:	outs   dx,DWORD PTR ds:[esi]
  403b0e:	lds    esp,FWORD PTR [ebp+0xf021944]
  403b14:	add    DWORD PTR [esi-0x53],edx
  403b17:	clc    
  403b18:	inc    ebx
  403b19:	pop    ebp
  403b1a:	push   edi
  403b1b:	retf   0xd3d9
  403b1e:	or     esi,0xe0cee97b
  403b24:	inc    ecx
  403b25:	nop
  403b26:	cmp    BYTE PTR [eax+ebp*2+0x28],ch
  403b2a:	inc    eax
  403b2b:	push   ecx
  403b2c:	fst    QWORD PTR [eax]
  403b2e:	sbb    ch,ah
  403b30:	addr16 (bad) 
  403b32:	dec    ebp
  403b33:	inc    ebp
  403b34:	pop    esi
  403b35:	xor    ch,bh
  403b37:	mov    esi,0x5e4ded51
  403b3c:	aas    
  403b3d:	or     edi,DWORD PTR [ebp-0xf]
  403b40:	ret    
  403b41:	mov    edi,0x5c167aaf
  403b46:	ss push cs
  403b48:	adc    BYTE PTR [ebx+0x6c],ch
  403b4b:	outs   dx,BYTE PTR ds:[esi]
  403b4c:	xlat   BYTE PTR ds:[ebx]
  403b4d:	js     0x403b05
  403b4f:	mov    cl,0x21
  403b51:	push   0xf8089d0
  403b56:	push   cs
  403b57:	mov    al,ds:0x88092a1a
  403b5c:	xor    DWORD PTR es:[ebx+eax*2-0x57cbc8dc],ecx
  403b64:	adc    al,0x56
  403b66:	div    BYTE PTR [edx]
  403b68:	pusha  
  403b69:	add    eax,DWORD PTR [ebx-0xd]
  403b6c:	lea    esp,[edi]
  403b6e:	push   eax
  403b6f:	ds out dx,eax
  403b71:	jo     0x403b53
  403b73:	(bad)  
  403b74:	call   0x981a:0xb75ab734
  403b7b:	shl    DWORD PTR [ebp+ebp*4-0x4de5b1df],0xd
  403b83:	imul   BYTE PTR [edx+0x288601d4]
  403b89:	arpl   sp,di
  403b8b:	sahf   
  403b8c:	add    ch,BYTE PTR [esi]
  403b8e:	gs fucomip st,st(3)
  403b91:	cli    
  403b92:	lock js 0x403b59
  403b95:	gs pop ds
  403b97:	dec    edi
  403b98:	ins    BYTE PTR es:[edi],dx
  403b99:	jg     0x403be4
  403b9b:	rcr    DWORD PTR [ecx+0x496e7ac2],0x64
  403ba2:	iret   
  403ba3:	and    DWORD PTR [edi-0x14c46a3f],0xffffffd3
  403baa:	mov    dl,0x42
  403bac:	or     dl,BYTE PTR [ebx-0x47]
  403baf:	or     al,BYTE PTR [ebp+0x42]
  403bb2:	cmp    cl,bh
  403bb4:	sar    DWORD PTR [esp+edi*8],1
  403bb7:	popf   
  403bb8:	sar    dl,1
  403bba:	icebp  
  403bbb:	mov    WORD PTR [esi],ss
  403bbd:	sbb    DWORD PTR [eax],eax
  403bbf:	jg     0x403c25
  403bc1:	xor    al,0xc2
  403bc3:	inc    edi
  403bc4:	xor    ebx,DWORD PTR [ecx-0x266e005d]
  403bca:	adc    eax,0x468ec3bc
  403bcf:	xor    eax,0x6ec99e26
  403bd4:	fdivrp st(1),st
  403bd6:	sahf   
  403bd7:	inc    ebx
  403bd8:	or     al,0xe1
  403bda:	adc    DWORD PTR [edi+0x3ecad292],ecx
  403be0:	jg     0x403b92
  403be2:	(bad)  
  403be4:	imul   ebx,esp,0xcb4c2e6b
  403bea:	mov    cl,BYTE PTR [eax+eax*1-0x24]
  403bee:	ins    DWORD PTR es:[edi],dx
  403bef:	movsx  esp,WORD PTR [ebx-0x52e0c82d]
  403bf6:	mov    gs,ecx
  403bf8:	ret    0x5718
  403bfb:	mov    DWORD PTR [eax-0x7c],ebp
  403bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403bff:	xlat   BYTE PTR ds:[ebx]
  403c00:	int    0xb0
  403c02:	call   0x745bfb06
  403c07:	add    bl,BYTE PTR [esi-0xf988536]
  403c0d:	push   eax
  403c0e:	stc    
  403c0f:	and    esi,0x4c
  403c12:	pop    ebp
  403c13:	dec    ebx
  403c14:	scas   eax,DWORD PTR es:[edi]
  403c15:	outs   dx,DWORD PTR ds:[esi]
  403c16:	jecxz  0x403c67
  403c18:	push   es
  403c19:	mov    esp,0x6ab37967
  403c1e:	inc    ebx
  403c1f:	pop    esp
  403c20:	icebp  
  403c21:	xor    DWORD PTR [esi-0x13e471],ecx
  403c27:	xor    dl,bl
  403c29:	outs   dx,DWORD PTR ds:[esi]
  403c2a:	cmp    ebx,DWORD PTR [eax+0x23eb80fd]
  403c30:	popa   
  403c31:	in     al,0xe2
  403c33:	and    cl,BYTE PTR [eax+0x32]
  403c36:	test   al,0xfe
  403c38:	and    eax,0xc045392
  403c3d:	bound  ecx,QWORD PTR [eax-0x16c6963e]
  403c43:	retf   0x9362
  403c46:	test   DWORD PTR [eax+esi*2],esi
  403c49:	js     0x403c2f
  403c4b:	shl    DWORD PTR [edi],cl
  403c4d:	pop    eax
  403c4e:	mov    ch,0xa9
  403c50:	push   edi
  403c51:	fsubrp st(0),st
  403c53:	popa   
  403c54:	jge    0x403c90
  403c56:	mov    ebp,0x629c14
  403c5b:	jo     0x403c89
  403c5d:	xor    ah,dl
  403c5f:	sbb    bl,ah
  403c61:	fcom   DWORD PTR [ecx]
  403c63:	imul   edx,DWORD PTR [esi+0x15],0xa4c9381e
  403c6a:	sbb    eax,0xd86df26c
  403c70:	in     al,0x0
  403c72:	dec    ebx
  403c73:	xor    BYTE PTR gs:0xab00fab2,bl
  403c7a:	std    
  403c7b:	inc    BYTE PTR [edi-0x1cfdf4c5]
  403c81:	sahf   
  403c82:	mov    cs,WORD PTR [edx-0x27]
  403c85:	mov    dh,0xfe
  403c87:	aas    
  403c88:	xor    al,0xe6
  403c8a:	pop    edi
  403c8b:	inc    esi
  403c8c:	mov    esp,0xa8e9c56d
  403c91:	repz cdq 
  403c93:	adc    eax,0x75bccaf5
  403c98:	cmp    DWORD PTR [edx+0x57],0xffffffa9
  403c9c:	adc    DWORD PTR [ecx],0xffffff95
  403c9f:	push   edi
  403ca0:	nop
  403ca1:	fdiv   st,st(3)
  403ca3:	xchg   edx,eax
  403ca4:	in     eax,0x34
  403ca6:	ds ins BYTE PTR es:[edi],dx
  403ca8:	popa   
  403ca9:	pop    es
  403caa:	jno    0x403d1f
  403cac:	aas    
  403cad:	or     DWORD PTR [edx],eax
  403caf:	(bad)  
  403cb0:	je     0x403c6c
  403cb2:	loop   0x403d15
  403cb4:	arpl   WORD PTR [edx-0x6c],bx
  403cb7:	out    dx,eax
  403cb8:	pushf  
  403cb9:	test   BYTE PTR [ebx-0x48],ah
  403cbc:	pop    edx
  403cbd:	pop    ebx
  403cbe:	jbe    0x403d1d
  403cc0:	mov    bl,0x8d
  403cc2:	inc    esp
  403cc3:	repz jmp 0xc4f52da9
  403cc9:	adc    ebx,DWORD PTR [edi-0xf16157d]
  403ccf:	jmp    0x403c54
  403cd1:	dec    edi
  403cd2:	push   es
  403cd3:	pop    edx
  403cd4:	mov    edx,0xf6c2264d
  403cd9:	stos   DWORD PTR es:[edi],eax
  403cda:	sbb    al,0x6c
  403cdc:	dec    esp
  403cdd:	in     al,0xc4
  403cdf:	cld    
  403ce0:	iret   
  403ce1:	and    eax,ecx
  403ce3:	aas    
  403ce4:	mov    ds:0x1950d63d,al
  403ce9:	xor    eax,0x415c8743
  403cee:	ret    0x497c
  403cf1:	cmc    
  403cf2:	jbe    0x403d37
  403cf4:	xchg   ebx,eax
  403cf5:	clc    
  403cf6:	in     al,0xc3
  403cf8:	nop    edi
  403cfb:	dec    edi
  403cfc:	(bad)  
  403cfd:	outs   dx,DWORD PTR ds:[esi]
  403cfe:	jle    0x403d41
  403d00:	stc    
  403d01:	sahf   
  403d02:	adc    DWORD PTR [esi],0x81109907
  403d08:	popa   
  403d09:	bound  esi,QWORD PTR [eax+0x7c1cfb90]
  403d0f:	mov    edi,0x90b9f59e
  403d14:	adc    dh,ch
  403d16:	inc    eax
  403d17:	jge    0x403d4f
  403d19:	icebp  
  403d1a:	ja     0x403d29
  403d1c:	xchg   esi,eax
  403d1d:	add    DWORD PTR [eax+0x4c],edi
  403d20:	(bad)  
  403d21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d22:	mov    al,0x3
  403d24:	inc    ebx
  403d25:	imul   esi,DWORD PTR [edi+0x35],0xe9e15fd7
  403d2c:	xchg   DWORD PTR [edx+0x330bb899],esi
  403d32:	neg    DWORD PTR [ebp-0x3d]
  403d35:	leave  
  403d36:	and    ecx,DWORD PTR [ebx-0x20]
  403d39:	(bad)
  403d3d:	cmp    bl,BYTE PTR [esi]
  403d3f:	push   ebp
  403d40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d41:	out    dx,al
  403d42:	adc    esp,edx
  403d44:	aas    
  403d45:	retf   
  403d46:	mov    BYTE PTR [edi+0x2eb597b5],ah
  403d4c:	lds    ebp,FWORD PTR [edi]
  403d4e:	pusha  
  403d4f:	sub    ebx,0x9e1665a2
  403d55:	cmp    ebx,ecx
  403d57:	aam    0xc9
  403d59:	dec    ebp
  403d5a:	pop    ss
  403d5b:	pop    ebp
  403d5c:	and    ah,bl
  403d5e:	cmp    eax,0xfc56f07d
  403d63:	stos   DWORD PTR es:[edi],eax
  403d64:	jne    0x403d78
  403d66:	(bad)  
  403d67:	fmul   st,st(0)
  403d69:	icebp  
  403d6a:	sub    al,0x15
  403d6c:	sub    eax,0xae55c1a2
  403d71:	call   0x8ef3:0x3df1ccfa
  403d78:	push   edx
  403d79:	mov    BYTE PTR [ebx+0x17742729],cl
  403d7f:	sub    eax,0x16fee415
  403d84:	add    eax,0x7ebcde00
  403d89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d8a:	fisttp QWORD PTR [edi+0x52]
  403d8d:	push   ebx
  403d8e:	or     al,0x3e
  403d90:	push   eax
  403d91:	and    DWORD PTR [ecx+esi*1+0x73],0xa4e48041
  403d99:	test   BYTE PTR [edi+0x5824e055],ch
  403d9f:	ins    DWORD PTR es:[edi],dx
  403da0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403da1:	(bad)  
  403da2:	adc    al,0x3d
  403da4:	fisub  DWORD PTR [edi]
  403da6:	xchg   ecx,eax
  403da7:	(bad)  
  403daa:	cmp    ebp,DWORD PTR [ecx-0x2b02574d]
  403db0:	shl    DWORD PTR [esi+0x11fe555e],cl
  403db6:	mov    al,ds:0x3ed618d8
  403dbb:	nop
  403dbc:	lock icebp 
  403dbe:	mov    ebx,0xb395a551
  403dc3:	aam    0xe1
  403dc5:	gs mov ecx,0x39296c3d
  403dcb:	add    eax,0x1391bb0
  403dd0:	lods   eax,DWORD PTR ds:[esi]
  403dd1:	jno    0x403e39
  403dd3:	enter  0x2542,0xfa
  403dd7:	or     al,0xa2
  403dd9:	scas   eax,DWORD PTR es:[edi]
  403dda:	call   DWORD PTR [ebx+0x5dda2cbf]
  403de0:	loopne 0x403d9f
  403de2:	popf   
  403de3:	push   0xa357f2fd
  403de8:	jp     0x403e11
  403dea:	jle    0x403e3d
  403dec:	cdq    
  403ded:	push   ebx
  403dee:	not    DWORD PTR [edi]
  403df0:	scas   al,BYTE PTR es:[edi]
  403df1:	(bad)  
  403df2:	or     eax,0xe441098
  403df7:	xchg   ebx,eax
  403df8:	aam    0xdd
  403dfa:	mov    dl,0x9d
  403dfc:	cwde   
  403dfd:	retf   
  403dfe:	pop    ecx
  403dff:	ins    BYTE PTR es:[edi],dx
  403e00:	add    BYTE PTR [ebp+0x16760f86],0x25
  403e07:	clc    
  403e08:	adc    ecx,eax
  403e0a:	xchg   edi,eax
  403e0b:	lods   al,BYTE PTR ds:[esi]
  403e0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e0d:	imul   ebp,DWORD PTR [ecx+0x61],0xfffffffd
  403e11:	mov    ah,0x9f
  403e13:	imul   esp,DWORD PTR [ebx+0xa57d4d4],0x42809cca
  403e1d:	imul   esi,DWORD PTR [edx+ebx*1],0x35
  403e21:	std    
  403e22:	int3   
  403e23:	jno    0x403ea1
  403e25:	xchg   ebp,eax
  403e26:	das    
  403e27:	inc    ebp
  403e28:	sbb    DWORD PTR [eax+eiz*4-0x12894c80],eax
  403e2f:	pop    ecx
  403e30:	adc    esp,DWORD PTR [eax]
  403e32:	and    al,0x9f
  403e34:	bound  ebx,QWORD PTR ds:0xefb5aeb2
  403e3a:	aas    
  403e3b:	sahf   
  403e3c:	push   ecx
  403e3d:	cmp    eax,0xa9380baf
  403e42:	and    al,0x95
  403e44:	push   edx
  403e45:	push   ds
  403e46:	mov    dh,0x9c
  403e48:	lods   eax,DWORD PTR ds:[esi]
  403e49:	hlt    
  403e4a:	xor    bh,BYTE PTR [eax-0x50cc19e6]
  403e50:	repnz push edi
  403e52:	mov    al,0xf9
  403e54:	ss push ebp
  403e56:	shl    DWORD PTR [edi+0x50],cl
  403e59:	mov    bh,0xca
  403e5b:	icebp  
  403e5c:	popa   
  403e5d:	push   ss
  403e5e:	cs cli 
  403e60:	mov    ebp,0x70be17c0
  403e65:	mov    al,ds:0xf60e9228
  403e6a:	daa    
  403e6b:	daa    
  403e6c:	gs or  eax,0xfd0e19f
  403e72:	cmc    
  403e73:	and    edx,DWORD PTR [eax]
  403e75:	test   ecx,esi
  403e77:	pop    edx
  403e78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e79:	(bad)  
  403e7a:	cmp    al,0x61
  403e7c:	(bad)  
  403e7d:	repnz pop eax
  403e7f:	mov    esi,0x57c4e46b
  403e84:	adc    BYTE PTR [esi],ah
  403e86:	add    eax,0x6d358f85
  403e8b:	xor    eax,0x5f931a32
  403e90:	push   cs
  403e91:	daa    
  403e92:	retf   
  403e93:	and    BYTE PTR [ebx],0x49
  403e96:	mov    edx,0x1f38d4b2
  403e9b:	xchg   BYTE PTR [edx],dl
  403e9d:	in     al,0xd5
  403e9f:	xor    ebx,ebp
  403ea1:	push   ss
  403ea2:	cld    
  403ea3:	cmp    BYTE PTR [edx+eax*2-0x3e9164d],cl
  403eaa:	(bad)  
  403eab:	jnp    0x403f03
  403ead:	test   BYTE PTR ss:[esi+0x7776c438],bh
  403eb4:	mov    eax,ds:0x855314f9
  403eb9:	jne    0x403f15
  403ebb:	sub    al,BYTE PTR ss:[ebp-0x6d6313ae]
  403ec2:	pop    eax
  403ec3:	addr16 jo 0x403e73
  403ec6:	in     al,0xda
  403ec8:	push   edx
  403ec9:	div    BYTE PTR [edx+edx*2]
  403ecc:	mov    edi,0x63ba2501
  403ed1:	scas   al,BYTE PTR es:[edi]
  403ed2:	(bad)  
  403ed3:	jmp    0x403e6d
  403ed5:	cmp    ch,bh
  403ed7:	int3   
  403ed8:	add    BYTE PTR [ebp-0x1b],dh
  403edb:	mov    BYTE PTR [ebx],cl
  403edd:	vhaddpd xmm5,xmm4,XMMWORD PTR [edi-0x18aa98b2]
  403ee5:	sbb    al,0x34
  403ee7:	push   esi
  403ee8:	and    eax,0xa755a14f
  403eed:	out    dx,eax
  403eee:	mov    DWORD PTR [eax+edx*4+0x665035ec],esp
  403ef5:	push   eax
  403ef6:	ins    DWORD PTR es:[edi],dx
  403ef7:	shl    BYTE PTR [eax-0x7c],cl
  403efa:	dec    ebp
  403efb:	ret    0x844c
  403efe:	adc    DWORD PTR [ecx+0x28d2206f],esi
  403f04:	ds jg  0x403f76
  403f07:	push   esp
  403f08:	mov    ?,WORD PTR [esi+0x53]
  403f0b:	mov    ss:0x60cfcc74,al
  403f11:	jne    0x403f81
  403f13:	inc    edx
  403f14:	sahf   
  403f15:	test   ebp,edi
  403f17:	fsubr  QWORD PTR [esi]
  403f19:	pop    ebx
  403f1a:	xchg   ecx,eax
  403f1b:	aad    0xc0
  403f1d:	js     0x403eb2
  403f1f:	push   esp
  403f20:	push   ss
  403f21:	jle    0x403ef5
  403f23:	scas   eax,DWORD PTR es:[edi]
  403f24:	enter  0x2655,0xb6
  403f28:	cmc    
  403f29:	fidivr WORD PTR [ebp+0x40]
  403f2c:	xchg   DWORD PTR [edi+0x16],eax
  403f2f:	and    esi,0x56
  403f32:	out    0x43,eax
  403f34:	xor    BYTE PTR [ecx],dl
  403f36:	or     al,0x61
  403f38:	sar    edx,0x52
  403f3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f3c:	push   ebp
  403f3d:	jb     0x403f0e
  403f3f:	and    ebx,esi
  403f41:	icebp  
  403f42:	dec    edi
  403f43:	call   0x828c:0xdcbc376b
  403f4a:	mov    ds:0x75da37ff,eax
  403f4f:	enter  0xa5e4,0x29
  403f53:	scas   eax,DWORD PTR es:[edi]
  403f54:	pop    esi
  403f55:	jp     0x403f1a
  403f57:	int    0xb9
  403f59:	inc    edi
  403f5a:	mov    ebx,edx
  403f5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f5d:	cmp    BYTE PTR [edi+0x75dd2792],0xac
  403f64:	push   esi
  403f65:	sbb    eax,0x56b7330
  403f6a:	xchg   ebp,eax
  403f6b:	arpl   WORD PTR [ebx],cx
  403f6d:	push   cs
  403f6e:	loope  0x403f27
  403f70:	cmp    BYTE PTR [ebx-0x29],ch
  403f73:	jmp    0x515:0x7cfe261a
  403f7a:	inc    ebx
  403f7b:	lods   al,BYTE PTR ds:[esi]
  403f7c:	daa    
  403f7d:	inc    ebp
  403f7e:	cmc    
  403f7f:	cdq    
  403f80:	mov    ecx,ebp
  403f82:	mov    al,ds:0xe82b5809
  403f87:	adc    BYTE PTR [ecx+0x3e4c65b2],0x31
  403f8e:	jae    0x403fdc
  403f90:	test   eax,0xf215334b
  403f95:	in     al,dx
  403f96:	ss pop ebp
  403f98:	pusha  
  403f99:	retf   
  403f9a:	repnz sbb eax,0x46e454a5
  403fa0:	adc    al,0xbd
  403fa2:	int3   
  403fa3:	mov    ebp,0xfda900cf
  403fa8:	xchg   esp,eax
  403fa9:	cmp    ah,BYTE PTR [ecx-0x555250de]
  403faf:	mov    ds:0xcbbad70a,al
  403fb4:	into   
  403fb5:	shr    BYTE PTR [esi],cl
  403fb7:	adc    DWORD PTR [esp+ecx*4],eax
  403fba:	mov    ecx,DWORD PTR [ecx-0x5b]
  403fbd:	push   ecx
  403fbe:	test   DWORD PTR [eax-0x44],0xd940f4ed
  403fc5:	inc    ebp
  403fc6:	push   ss
  403fc7:	std    
  403fc8:	push   0x39e0f95c
  403fcd:	mov    al,ds:0x2e23872c
  403fd2:	aas    
  403fd3:	fdivr  st(5),st
  403fd5:	pop    edx
  403fd6:	and    al,0x86
  403fd8:	jmp    0x403f7b
  403fda:	xor    cl,ch
  403fdc:	mov    bl,bl
  403fde:	xchg   esp,eax
  403fdf:	mov    eax,0xff6058f4
  403fe4:	sub    cl,ch
  403fe6:	inc    edx
  403fe7:	(bad)  
  403fe8:	sti    
  403fe9:	push   DWORD PTR [esi]
  403feb:	les    edi,FWORD PTR es:[esi-0x61]
  403fef:	ss cmp eax,0xb276fdeb
  403ff5:	in     al,0x23
  403ff7:	mov    al,0xff
  403ff9:	clc    
  403ffa:	inc    esp
  403ffb:	mov    ecx,0xe3190548
  404000:	mov    edi,0x57d80a94
  404005:	es ret 
  404007:	xlat   BYTE PTR ds:[ebx]
  404008:	test   DWORD PTR [eax+0x6fbf7db9],0x62e63190
  404012:	in     al,0x72
  404014:	lds    ebp,FWORD PTR [di]
  404017:	ror    dh,cl
  404019:	test   eax,0xe2be0cb4
  40401e:	push   cs
  40401f:	jge    0x404098
  404021:	mov    BYTE PTR [eax-0x58],dh
  404024:	xchg   esi,eax
  404025:	pop    eax
  404026:	ss jns 0x403ffb
  404029:	or     esp,DWORD PTR [edx]
  40402b:	inc    ecx
  40402c:	ficom  WORD PTR [ecx+0x7c]
  40402f:	mov    cl,0x62
  404031:	push   es
  404032:	xchg   esp,edx
  404034:	pop    ecx
  404035:	icebp  
  404036:	repnz add bl,BYTE PTR [edx+0x1298f3c0]
  40403d:	mov    ah,BYTE PTR [edx+0xff36bec]
  404043:	sbb    edi,DWORD PTR [esi+eax*1+0x26d391d9]
  40404a:	int3   
  40404b:	ja     0x404086
  40404d:	imul   esp,DWORD PTR [edx-0x8],0xffffffe4
  404051:	push   ecx
  404052:	pop    eax
  404053:	loope  0x40400c
  404055:	bnd jg 0x40403e
  404058:	xor    eax,DWORD PTR [edx]
  40405a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40405b:	sub    ebx,DWORD PTR [edi]
  40405d:	xchg   ecx,eax
  40405e:	xor    al,0x10
  404060:	fucomp st(1)
  404062:	les    esp,FWORD PTR [esi-0x7c0f4289]
  404068:	pop    esp
  404069:	mov    ebx,0xe939eec3
  40406e:	(bad)  
  404070:	cmp    BYTE PTR [edx+0x5224b0cd],bh
  404076:	ins    DWORD PTR es:[edi],dx
  404077:	int    0x48
  404079:	aaa    
  40407a:	cmp    eax,0xfdce58d5
  40407f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404080:	iret   
  404081:	ss iret 
  404083:	mov    edi,0x7fec4854
  404088:	mov    bh,0x64
  40408a:	jle    0x404071
  40408c:	std    
  40408d:	fwait
  40408e:	sti    
  40408f:	pop    ecx
  404090:	dec    eax
  404091:	mov    DWORD PTR [eax],0x1562feef
  404097:	and    ah,bh
  404099:	fistp  DWORD PTR [ecx+ebx*8]
  40409c:	shr    bh,0x82
  40409f:	(bad)  
  4040a0:	xchg   ebp,eax
  4040a1:	rcl    DWORD PTR [eax+0x40],0x28
  4040a5:	gs pushf 
  4040a7:	imul   ecx,ebp,0xaf26b90b
  4040ad:	jo     0x4040f1
  4040af:	ret    
  4040b0:	icebp  
  4040b1:	(bad)  
  4040b2:	pop    ebp
  4040b3:	vmwrite eax,DWORD PTR [ebx]
  4040b6:	jp     0x4040e6
  4040b8:	fmul   QWORD PTR [ebp+0x5d]
  4040bb:	sbb    ebx,DWORD PTR [edx-0x1]
  4040be:	fstp   DWORD PTR ds:0x8683cfe9
  4040c4:	outs   dx,BYTE PTR ds:[esi]
  4040c5:	and    BYTE PTR [edi-0x53],0x6d
  4040c9:	xchg   esi,eax
  4040ca:	push   edi
  4040cb:	pop    ecx
  4040cc:	rcl    DWORD PTR [esi+0x50],1
  4040cf:	jmp    0x5a21d546
  4040d4:	arpl   WORD PTR [edi-0x20ffd68b],bp
  4040da:	push   ebx
  4040db:	xlat   BYTE PTR ds:[ebx]
  4040dc:	and    esi,DWORD PTR [ebp-0x2a]
  4040df:	loop   0x40410d
  4040e1:	pusha  
  4040e2:	mov    cl,BYTE PTR [ecx]
  4040e4:	retf   
  4040e5:	retf   0xcf11
  4040e8:	xor    BYTE PTR [edx+0x3d],bh
  4040eb:	lds    esi,FWORD PTR [ecx]
  4040ed:	sbb    DWORD PTR [edi+ecx*4+0x43],esi
  4040f1:	jg     0x40413f
  4040f3:	lods   al,BYTE PTR ds:[esi]
  4040f4:	enter  0xcda2,0xd3
  4040f8:	mov    al,ds:0x69f6be47
  4040fd:	sub    DWORD PTR [edx-0x51],0x28058598
  404104:	cli    
  404105:	push   ecx
  404106:	push   ebx
  404107:	lods   eax,DWORD PTR ds:[esi]
  404108:	stos   BYTE PTR es:[edi],al
  404109:	push   eax
  40410a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40410b:	ja     0x404122
  40410d:	mov    ebx,0x16884b5d
  404112:	rcl    DWORD PTR [eax-0x79],1
  404115:	fmul   st,st(0)
  404117:	push   edi
  404118:	retf   0xd013
  40411b:	pop    ds
  40411c:	icebp  
  40411d:	jl     0x40418a
  40411f:	add    eax,0x167f0f57
  404124:	adc    bh,ch
  404126:	call   FWORD PTR [ecx-0x42]
  404129:	xor    al,0xc5
  40412b:	add    BYTE PTR [eax+0x11228371],ch
  404131:	lods   eax,DWORD PTR ds:[esi]
  404132:	fbld   TBYTE PTR ds:0x3e6b9adf
  404138:	lods   al,BYTE PTR ds:[esi]
  404139:	icebp  
  40413a:	jne    0x404188
  40413c:	add    eax,0x73535664
  404141:	push   esp
  404142:	sub    bl,BYTE PTR [ebx-0x27]
  404145:	pop    edx
  404146:	mov    esi,edi
  404148:	icebp  
  404149:	inc    esp
  40414a:	mov    ebp,0xafb6371f
  40414f:	push   edi
  404150:	repnz push ss
  404152:	xor    bl,BYTE PTR [edx+eax*4-0x1b1bf1a5]
  404159:	push   edi
  40415a:	mov    ch,0x87
  40415c:	(bad)  
  40415d:	(bad)  
  40415e:	xlat   BYTE PTR ds:[ebx]
  40415f:	sbb    dh,BYTE PTR [eax]
  404161:	fwait
  404162:	rcl    al,1
  404164:	pop    ecx
  404165:	scas   eax,DWORD PTR es:[edi]
  404166:	lfs    ebx,FWORD PTR [eax]
  404169:	pop    edx
  40416a:	loope  0x404160
  40416c:	daa    
  40416d:	les    esi,FWORD PTR [edx+0x16e566b9]
  404173:	xchg   ebx,eax
  404174:	cmp    ah,BYTE PTR [ebp+0x25b72c52]
  40417a:	push   ebp
  40417b:	mov    ds:0xfabe8ee7,al
  404180:	and    bl,ch
  404182:	js     0x40416b
  404184:	pop    esi
  404185:	jmp    0x702b6450
  40418a:	popa   
  40418b:	xor    ebp,DWORD PTR ds:0xbd5e3fa8
  404191:	push   esp
  404192:	pop    ds
  404193:	loopne 0x404191
  404195:	sub    BYTE PTR [eax-0x35],dl
  404198:	xor    al,0x85
  40419a:	std    
  40419b:	shr    DWORD PTR [esi+edi*2],1
  40419e:	std    
  40419f:	mov    BYTE PTR [ebx-0x54],0x45
  4041a3:	mov    al,ds:0xa95dc8bf
  4041a8:	or     al,0xe7
  4041aa:	or     BYTE PTR [edi-0x5ef9e78],cl
  4041b0:	xchg   edi,eax
  4041b1:	hlt    
  4041b2:	sar    ebp,1
  4041b4:	das    
  4041b5:	int    0xe8
  4041b7:	push   ss
  4041b8:	adc    al,0x11
  4041ba:	push   edi
  4041bb:	test   DWORD PTR [ecx],ebp
  4041bd:	addr16 aas 
  4041bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041c0:	loope  0x4041cb
  4041c2:	bound  edx,QWORD PTR [ebx+0x363c5987]
  4041c8:	xchg   edx,eax
  4041c9:	sbb    esi,DWORD PTR gs:[eax-0x2c740cb4]
  4041d0:	dec    ebx
  4041d1:	push   ebp
  4041d2:	pop    edx
  4041d3:	aaa    
  4041d4:	pop    ebx
  4041d5:	push   edi
  4041d6:	jnp    0x4041bd
  4041d8:	out    0x3e,eax
  4041da:	cmc    
  4041db:	push   edi
  4041dc:	(bad)  
  4041dd:	scas   eax,DWORD PTR es:[edi]
  4041de:	ins    BYTE PTR es:[edi],dx
  4041df:	sub    DWORD PTR [edi],0xffffff99
  4041e2:	pop    esp
  4041e3:	and    ebp,DWORD PTR [esi-0x80]
  4041e6:	dec    esi
  4041e7:	xchg   ebx,eax
  4041e8:	mov    ch,0xb7
  4041ea:	aas    
  4041eb:	aaa    
  4041ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041ed:	sub    cl,BYTE PTR [eax+0x37]
  4041f0:	pusha  
  4041f1:	repz or eax,0xb8f1ba53
  4041f7:	cld    
  4041f8:	stos   BYTE PTR es:[edi],al
  4041f9:	retf   0xe6ce
  4041fc:	pop    edx
  4041fd:	mov    ebp,0xd95e5e29
  404202:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404203:	add    DWORD PTR [ebp+0x50363507],0xaa755e23
  40420d:	xchg   esi,eax
  40420e:	cmpps  xmm5,XMMWORD PTR [ecx+0x6a7afbc2],0x41
  404216:	adc    al,0xe6
  404218:	push   cs
  404219:	gs call 0x27e2:0xe2165823
  404221:	and    al,0xff
  404223:	(bad)  
  404224:	fwait
  404225:	rcl    DWORD PTR [ecx+0x3b1f0059],0xd4
  40422c:	nop
  40422d:	push   ecx
  40422e:	test   eax,0xcf11d3e4
  404233:	jns    0x4042aa
  404235:	je     0x404246
  404237:	in     al,0x84
  404239:	in     al,0x64
  40423b:	shl    BYTE PTR [ebx],cl
  40423d:	mov    edi,0x75673e18
  404242:	test   BYTE PTR [ecx-0x3c],ch
  404245:	imul   ebx,DWORD PTR [edx+0x1ac07fe3],0xffffffde
  40424c:	xchg   BYTE PTR [edi],dl
  40424e:	mov    ds:0x9c1c3552,al
  404253:	retf   
  404254:	adc    al,0xa9
  404256:	push   ecx
  404257:	daa    
  404258:	and    al,0xe9
  40425a:	ror    BYTE PTR [edx],0x9b
  40425d:	fild   WORD PTR [eax]
  40425f:	jno    0x40424d
  404261:	add    DWORD PTR [ebx-0x3e],esp
  404264:	sub    bl,ah
  404266:	je     0x404223
  404268:	mov    ecx,0xf1f5afea
  40426d:	jecxz  0x4042b6
  40426f:	fadd   DWORD PTR ss:[edi-0x6e]
  404273:	mov    bl,0x21
  404275:	cmp    eax,0x5728515e
  40427a:	xor    DWORD PTR [edx-0x4],esi
  40427d:	lods   eax,DWORD PTR ds:[esi]
  40427e:	mov    eax,0xfea7ac26
  404283:	mov    gs,ecx
  404285:	addr16 adc ebp,ecx
  404288:	hlt    
  404289:	hlt    
  40428a:	cmp    DWORD PTR [eax+0x33cf9906],ebp
  404290:	int    0x4c
  404292:	fstp   st(1)
  404294:	cwde   
  404295:	jmp    DWORD PTR [esi]
  404297:	cwde   
  404298:	adc    al,0x2c
  40429a:	fsub   DWORD PTR [esi-0x1ea32e7a]
  4042a0:	imul   edx,DWORD PTR [ecx],0xffffffeb
  4042a3:	stc    
  4042a4:	ins    BYTE PTR es:[edi],dx
  4042a5:	imul   ecx,DWORD PTR [edx+ebp*1+0x36],0x8f88b34f
  4042ad:	fisttp WORD PTR [edi+edx*1]
  4042b0:	jae    0x404251
  4042b2:	stos   DWORD PTR es:[edi],eax
  4042b3:	addr16 pop es
  4042b5:	pop    es
  4042b6:	aaa    
  4042b7:	cmp    BYTE PTR [ebx+0x27df216d],cl
  4042bd:	repz aam 0x99
  4042c0:	sub    bl,dh
  4042c2:	ins    DWORD PTR es:[edi],dx
  4042c3:	add    ecx,DWORD PTR [esi-0x66]
  4042c6:	call   0x1ddf:0x109d2942
  4042cd:	and    dh,BYTE PTR [edi]
  4042cf:	sbb    ah,BYTE PTR [ebp-0x38]
  4042d2:	xchg   ebp,eax
  4042d3:	adc    BYTE PTR [edi+0x49],ch
  4042d6:	or     esp,DWORD PTR [eax-0x71ea2578]
  4042dc:	xor    DWORD PTR [edi-0x699b6fb4],edx
  4042e2:	les    eax,FWORD PTR [ecx]
  4042e4:	mov    ebx,0x9403bda7
  4042e9:	test   ebx,ebp
  4042eb:	(bad)  
  4042ec:	sub    BYTE PTR [edi+0x4a06ee99],dl
  4042f2:	adc    DWORD PTR [ecx-0x17],ecx
  4042f5:	sub    DWORD PTR [edx],0x4f
  4042f8:	icebp  
  4042f9:	test   al,0x30
  4042fb:	je     0x40430a
  4042fd:	push   ecx
  4042fe:	sub    BYTE PTR [ebp-0x23ce8767],bl
  404304:	mov    dh,0xc5
  404306:	test   eax,0xea8d0895
  40430b:	sub    eax,0x9fff266d
  404310:	push   ebp
  404311:	xchg   esi,eax
  404312:	xchg   BYTE PTR [ebp-0x5e],al
  404315:	inc    ebp
  404316:	dec    esi
  404317:	mov    edx,0x11161bb5
  40431c:	xchg   edx,eax
  40431d:	ins    DWORD PTR es:[edi],dx
  40431e:	add    eax,0xeefb2b50
  404323:	repnz dec edx
  404325:	(bad)  
  404326:	fs icebp 
  404328:	fsubr  QWORD PTR [ecx]
  40432a:	(bad)  
  40432b:	sub    dl,BYTE PTR [edx]
  40432d:	fnstsw WORD PTR [ecx]
  40432f:	int    0x5f
  404331:	add    eax,0xbda12b5b
  404336:	stos   BYTE PTR es:[edi],al
  404337:	inc    esi
  404338:	sbb    al,0x1a
  40433a:	mov    cl,0xba
  40433c:	push   ebx
  40433d:	pop    edi
  40433e:	mov    esp,0xc278c18b
  404343:	lods   al,BYTE PTR ds:[esi]
  404344:	and    dh,dh
  404346:	ss fs (bad) 
  404349:	fld    TBYTE PTR [eax+ecx*8+0x1d1e7137]
  404350:	fcomp  DWORD PTR [esi-0xf732f1]
  404356:	jb     0x4042ee
  404358:	fwait
  404359:	adc    edi,eax
  40435b:	push   ebp
  40435c:	lock pop eax
  40435e:	add    ecx,DWORD PTR [ebx]
  404360:	shr    DWORD PTR [ecx-0x65e83393],cl
  404366:	mov    ecx,0x912fc23
  40436b:	and    al,BYTE PTR ds:0x80dc6ebb
  404371:	or     BYTE PTR [ecx+ebp*4],dh
  404374:	push   edx
  404376:	repnz imul BYTE PTR [esp+edi*2]
  40437a:	cmp    eax,0x312b7f66
  40437f:	pop    ebx
  404380:	cmp    al,BYTE PTR [esi-0x19]
  404383:	repz mov ds:0xd6848758,eax
  404389:	and    eax,0x344411ca
  40438e:	or     cl,bl
  404390:	fwait
  404391:	(bad)  
  404392:	aad    0x7b
  404394:	adc    eax,0x718b92ac
  404399:	arpl   bx,ax
  40439b:	pop    ds
  40439c:	loopne 0x4043d7
  40439e:	iret   
  40439f:	xchg   edx,eax
  4043a0:	ds mov esi,0x36c100e1
  4043a6:	mov    ah,0x18
  4043a8:	aad    0xc3
  4043aa:	stc    
  4043ab:	push   es
  4043ac:	cmc    
  4043ad:	xor    al,0x88
  4043af:	sbb    eax,0x56c8e1e6
  4043b4:	add    eax,0xb267a519
  4043b9:	jge    0x4043c3
  4043bb:	push   edx
  4043bc:	popf   
  4043bd:	adc    esp,DWORD PTR ds:0x102dd2f1
  4043c3:	pop    ds
  4043c4:	lock (bad) 
  4043c6:	jne    0x404379
  4043c8:	cwde   
  4043c9:	add    ah,dl
  4043cb:	push   ebx
  4043cc:	xchg   ebp,eax
  4043cd:	pop    ebp
  4043ce:	or     dh,BYTE PTR [eax+0x52]
  4043d1:	outs   dx,DWORD PTR ds:[esi]
  4043d2:	and    al,BYTE PTR [ecx+0x2c]
  4043d5:	mov    eax,ds:0x9c5056e9
  4043da:	lods   eax,DWORD PTR ds:[esi]
  4043db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043dc:	scas   al,BYTE PTR es:[edi]
  4043dd:	(bad)  
  4043df:	adc    ch,ah
  4043e1:	int    0x87
  4043e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043e4:	mov    al,ds:0x3f867cb4
  4043e9:	xor    BYTE PTR [edx],bl
  4043eb:	(bad)  
  4043ec:	cwde   
  4043ed:	aad    0x8c
  4043ef:	add    BYTE PTR [eax-0x34309bc6],bh
  4043f5:	sbb    al,0x69
  4043f7:	cmp    al,0xbd
  4043f9:	and    al,BYTE PTR [edx-0x2b]
  4043fc:	and    al,0x45
  4043fe:	jmp    0x4043e0
  404400:	inc    edi
  404401:	jp     0x404477
  404403:	jne    0x4043cc
  404405:	add    al,0x74
  404407:	and    BYTE PTR [edx+ecx*1-0x4b],ch
  40440b:	retf   
  40440c:	xor    BYTE PTR [esi+0x6],dl
  40440f:	jmp    0xb06cb3f8
  404414:	sbb    eax,0x19a86220
  404419:	in     al,0x9
  40441b:	xchg   DWORD PTR [ecx+0x54],esp
  40441e:	cmp    DWORD PTR [ebp+0x24],0x3e009d00
  404425:	push   ebx
  404426:	daa    
  404427:	ins    BYTE PTR es:[edi],dx
  404428:	ins    DWORD PTR es:[edi],dx
  404429:	jbe    0x40443a
  40442b:	call   0xd92a:0x12a7665d
  404432:	sbb    BYTE PTR [ebx+0x6f],dh
  404435:	iret   
  404436:	xchg   BYTE PTR [ebx],cl
  404438:	mov    fs,WORD PTR [ecx-0xa1281ba]
  40443e:	add    eax,0x4d192aed
  404443:	sets   BYTE PTR [eax-0x23]
  404447:	adc    al,0xb0
  404449:	cmc    
  40444a:	cmp    al,0x9
  40444c:	not    BYTE PTR [esi]
  40444e:	add    bh,BYTE PTR [edx]
  404450:	mov    edx,0x765e61ab
  404455:	je     0x4043e9
  404457:	mov    dh,BYTE PTR [ecx+0x2bb02dd7]
  40445d:	(bad)  
  40445e:	and    bl,BYTE PTR [edi-0x3d35029c]
  404464:	mov    DWORD PTR [ecx],ebp
  404466:	retf   0xa930
  404469:	addr16 inc edx
  40446b:	ss jo  0x40449e
  40446e:	data16 add al,0x4d
  404471:	sbb    al,0xe3
  404473:	adc    dl,bh
  404475:	mov    bl,0xe
  404477:	push   es
  404478:	inc    ebp
  404479:	sbb    eax,0xa7efaab8
  40447e:	sub    al,0xc4
  404480:	outs   dx,DWORD PTR ds:[esi]
  404481:	in     al,dx
  404482:	mov    dl,0xf
  404484:	inc    ebx
  404485:	scas   al,BYTE PTR es:[edi]
  404486:	add    al,0xab
  404488:	xor    DWORD PTR [edi-0x5d9cfa8d],0xffffff99
  40448f:	std    
  404490:	in     al,0x1f
  404492:	and    al,0xe
  404494:	xchg   esi,eax
  404495:	(bad)  
  404497:	jns    0x40450b
  404499:	test   al,dl
  40449b:	xor    al,0x51
  40449d:	out    0x28,al
  40449f:	add    al,0x76
  4044a1:	xchg   ebp,eax
  4044a2:	mov    cl,0xc0
  4044a4:	adc    esi,esp
  4044a6:	hlt    
  4044a7:	mov    ebx,0x5acc05b2
  4044ac:	jns    0x4044a5
  4044ae:	mov    cl,0xb3
  4044b0:	das    
  4044b1:	(bad)  
  4044b2:	mov    edx,0xde7ec49f
  4044b7:	(bad)  
  4044b8:	in     al,0x71
  4044ba:	outs   dx,DWORD PTR ds:[esi]
  4044bb:	inc    esp
  4044bc:	mov    bh,0x5a
  4044be:	sti    
  4044bf:	mov    ch,0x25
  4044c1:	add    ecx,edx
  4044c3:	data16 (bad) 
  4044c5:	stos   DWORD PTR es:[edi],eax
  4044c6:	push   eax
  4044c7:	and    DWORD PTR [esi],eax
  4044c9:	sahf   
  4044ca:	aas    
  4044cb:	mov    fs,WORD PTR [eax+edi*2-0x2237d010]
  4044d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044d3:	push   eax
  4044d4:	(bad)  
  4044d5:	mov    edi,0x5a51f0de
  4044da:	into   
  4044db:	out    0x6b,eax
  4044dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4044de:	push   ss
  4044df:	add    al,0x9b
  4044e1:	pop    esi
  4044e2:	lahf   
  4044e3:	push   es
  4044e4:	popf   
  4044e5:	jmp    0x6bb8:0x4a5b7ad8
  4044ec:	por    mm5,QWORD PTR [ebp+0x5304a58b]
  4044f3:	subps  xmm2,XMMWORD PTR [edx+0x50]
  4044f7:	arpl   WORD PTR [edi-0x699cf1a4],sp
  4044fd:	push   edx
  4044fe:	mov    BYTE PTR [edi],ch
  404500:	pop    es
  404501:	xchg   ebx,eax
  404502:	(bad)  
  404503:	cmc    
  404504:	mov    esi,ds
  404506:	into   
  404507:	mov    edi,0xcba644be
  40450c:	xor    eax,0x7107987
  404511:	mov    eax,0x9ae2adca
  404516:	mov    WORD PTR [ecx+ecx*4],ss
  404519:	adc    eax,0xa2da89a6
  40451e:	push   ecx
  40451f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404520:	fimul  WORD PTR [edi+0x39de4ce3]
  404526:	inc    edx
  404527:	push   ds
  404528:	sti    
  404529:	and    dl,al
  40452b:	les    edx,FWORD PTR [ebx+0x32]
  40452e:	lods   al,BYTE PTR ds:[esi]
  40452f:	mov    ecx,ss
  404531:	and    edi,DWORD PTR [eax-0x3a]
  404534:	stos   DWORD PTR es:[edi],eax
  404535:	lods   al,BYTE PTR ds:[esi]
  404536:	mov    al,0xf8
  404538:	inc    edx
  404539:	jmp    0xfca6:0xf5df2520
  404540:	imul   edi,esp,0xffffffcd
  404543:	(bad)  
  404544:	adc    al,BYTE PTR [edx+eax*1+0x74bf1c8]
  40454b:	out    dx,eax
  40454c:	sub    esi,ebp
  40454e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40454f:	int3   
  404550:	mov    edi,DWORD PTR [edi-0x1d]
  404553:	retf   
  404554:	xor    ch,al
  404556:	lea    ebx,[ebp-0x220682ab]
  40455c:	add    ch,dl
  40455e:	rcr    BYTE PTR [esi-0x69],cl
  404561:	imul   ecx,DWORD PTR [esi+0x27],0x351fd60a
  404568:	xor    al,BYTE PTR [ebx-0x1187e634]
  40456e:	in     al,0x59
  404570:	scas   al,BYTE PTR es:[edi]
  404571:	push   esp
  404572:	in     eax,dx
  404573:	pop    edx
  404574:	mov    gs,esp
  404576:	jnp    0x4045c9
  404578:	int3   
  404579:	or     al,ah
  40457b:	jg     0x4045e7
  40457d:	push   ss
  40457e:	imul   ebp,DWORD PTR [ecx-0x3d1e820a],0x572930c9
  404588:	lods   al,BYTE PTR ds:[esi]
  404589:	lods   eax,DWORD PTR ds:[esi]
  40458a:	(bad)  
  40458b:	in     eax,0xd7
  40458d:	ds push ds
  40458f:	xchg   edi,eax
  404590:	shr    BYTE PTR [ecx+0x4690bf93],1
  404596:	and    bh,BYTE PTR [edx-0x52]
  404599:	mov    dh,BYTE PTR [eax+esi*2+0x5865b36d]
  4045a0:	jo     0x40457c
  4045a2:	imul   edi,ecx,0x6de54ba2
  4045a8:	retf   
  4045a9:	rcl    BYTE PTR [eax],1
  4045ab:	pop    ebx
  4045ac:	pop    es
  4045ad:	cmp    edx,DWORD PTR [ecx-0xa]
  4045b0:	leave  
  4045b1:	test   BYTE PTR [ebx+0x4d],ch
  4045b4:	aam    0x71
  4045b6:	popf   
  4045b7:	sti    
  4045b8:	jge    0x404547
  4045ba:	adc    DWORD PTR ss:[ebx+edx*8-0x44],edi
  4045bf:	mov    ebp,0xe501647a
  4045c4:	comiss xmm2,DWORD PTR [ecx-0x5a]
  4045c8:	sub    BYTE PTR [edi+0x3a],al
  4045cb:	imul   edi,DWORD PTR [ebp+0x33],0x1cb54229
  4045d2:	aas    
  4045d3:	pop    ds
  4045d4:	pop    ebp
  4045d5:	fidivr DWORD PTR [ebp-0x4f]
  4045d8:	mov    eax,0xacaba676
  4045dd:	jecxz  0x4045dd
  4045df:	arpl   dx,cx
  4045e1:	stos   BYTE PTR es:[edi],al
  4045e2:	test   esi,0x33a3f489
  4045e8:	outs   dx,DWORD PTR ds:[esi]
  4045e9:	(bad)  
  4045ea:	scas   eax,DWORD PTR es:[edi]
  4045eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045ec:	fsubr  QWORD PTR [edx-0x53141509]
  4045f2:	mov    eax,ds:0x615fdc9a
  4045f7:	xchg   esp,eax
  4045f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045f9:	not    BYTE PTR [eax]
  4045fb:	xor    al,0xe7
  4045fd:	inc    ebx
  4045fe:	xor    DWORD PTR [ebp+0x3c],0x7a
  404602:	add    al,BYTE PTR [ebp-0x53]
  404605:	and    edx,DWORD PTR [ebx+ebp*1+0x6d]
  404609:	mov    al,0xba
  40460b:	outs   dx,BYTE PTR ds:[esi]
  40460c:	arpl   WORD PTR [ecx+0x66],di
  40460f:	xor    eax,DWORD PTR [ebp-0x48]
  404612:	(bad)  
  404613:	mov    dh,0x21
  404615:	or     ecx,0xbf4f41ea
  40461b:	add    bh,ch
  40461d:	mov    bh,0x53
  40461f:	outs   dx,BYTE PTR ds:[esi]
  404620:	dec    ebp
  404621:	nop
  404622:	jnp    0x4045cb
  404624:	sbb    edx,DWORD PTR [eax+0x2e1ead70]
  40462a:	ror    BYTE PTR [eax+0x7ed3a231],1
  404630:	mov    eax,ds:0x739ed0bb
  404635:	in     eax,0x83
  404637:	jg     0x4045bf
  404639:	add    cl,BYTE PTR [ebp-0xd]
  40463c:	sub    eax,0x5ba27911
  404641:	pop    esp
  404642:	hlt    
  404643:	mov    eax,0x8bb0119a
  404648:	(bad)  [esi]
  40464a:	repnz mov ebx,0x72a88671
  404650:	mov    ebp,0x30bbc25f
  404655:	sbb    al,0x7f
  404657:	pushf  
  404658:	push   esp
  404659:	inc    esp
  40465a:	pop    esp
  40465b:	arpl   WORD PTR [esi-0x1e0a9dc9],bx
  404661:	shl    BYTE PTR [ebp-0x22],cl
  404664:	sbb    edx,0x3e4914e1
  40466a:	mov    ch,BYTE PTR [edi]
  40466c:	test   eax,0xaae48e1b
  404671:	sbb    al,0xdc
  404673:	inc    esp
  404674:	in     al,0x84
  404676:	mov    ds:0xa54fa350,eax
  40467b:	mov    BYTE PTR [ebp+ecx*8-0x35d0976a],cl
  404682:	mov    cs,WORD PTR [eax+0x39]
  404685:	stc    
  404686:	(bad)  
  404687:	int    0xb8
  404689:	(bad)  
  40468a:	push   cs
  40468b:	xchg   esp,eax
  40468c:	aas    
  40468d:	addr16 pop ds
  40468f:	(bad)  
  404690:	push   edi
  404691:	ds xchg ecx,eax
  404693:	xor    al,0xc0
  404695:	shr    ch,0x35
  404698:	lock mov DWORD PTR [ecx+0x21],ebp
  40469c:	xchg   edi,eax
  40469d:	push   ecx
  40469e:	xor    al,0x58
  4046a0:	call   0x3bcd:0x5dfe928c
  4046a7:	cwde   
  4046a8:	pop    ebp
  4046a9:	jb     0x404635
  4046ab:	leave  
  4046ac:	stos   DWORD PTR es:[edi],eax
  4046ad:	retf   0xcd4a
  4046b0:	fwait
  4046b1:	cld    
  4046b2:	fistp  QWORD PTR [ebp-0x2ef27845]
  4046b8:	test   eax,0x7a4a5081
  4046bd:	dec    esp
  4046be:	push   ebp
  4046bf:	xor    DWORD PTR [eax],esi
  4046c1:	sbb    al,cl
  4046c3:	call   0x971d:0x52df85de
  4046ca:	imul   edi,ebx,0xb11281b8
  4046d0:	jg     0x40472a
  4046d2:	push   ds
  4046d3:	push   ds
  4046d4:	adc    al,0x92
  4046d6:	cmp    dl,BYTE PTR [eax]
  4046d8:	sub    edi,ebp
  4046da:	cs pop edi
  4046dc:	sahf   
  4046dd:	cmp    eax,0x395de4fa
  4046e2:	adc    DWORD PTR [edi+0x46],ebx
  4046e5:	inc    ebx
  4046e6:	cmp    DWORD PTR [eax+0x63],ebp
  4046e9:	pop    edx
  4046ea:	and    BYTE PTR [eax],dl
  4046ec:	das    
  4046ed:	mov    ebx,0x926dc3f
  4046f2:	xchg   ebx,eax
  4046f3:	xor    al,BYTE PTR [ecx]
  4046f5:	xor    bh,BYTE PTR [eax-0x6774c1a5]
  4046fb:	nop
  4046fc:	jl     0x4046a0
  4046fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046ff:	mov    DWORD PTR [ebx],0xa6650819
  404705:	pop    ebx
  404706:	sbb    al,BYTE PTR ds:0x60da71c8
  40470c:	mov    ebx,0x67e09812
  404711:	call   0x547711b5
  404716:	into   
  404717:	cmp    edx,ecx
  404719:	clc    
  40471a:	inc    edx
  40471b:	xor    bl,BYTE PTR [ebp+0x7e78513f]
  404721:	iret   
  404722:	mov    ch,0x30
  404724:	shl    DWORD PTR [ecx],0x5b
  404727:	push   esp
  404728:	add    al,0x9f
  40472a:	fsub   st(1),st
  40472c:	outs   dx,BYTE PTR ds:[esi]
  40472d:	repnz in al,0xc9
  404730:	fisubr DWORD PTR [esi]
  404732:	daa    
  404733:	aaa    
  404734:	sbb    eax,DWORD PTR [ecx]
  404736:	lods   eax,DWORD PTR ds:[esi]
  404737:	push   edi
  404738:	out    0x15,al
  40473a:	jl     0x404777
  40473c:	or     DWORD PTR [eax-0x33ab25da],edx
  404742:	pop    ecx
  404743:	dec    eax
  404744:	or     ebp,DWORD PTR [ebx-0x3c2c8f7e]
  40474a:	mov    bh,0xc
  40474c:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  40474e:	or     ebp,DWORD PTR [edi-0x2c]
  404751:	mov    BYTE PTR [ebp-0x76],0x39
  404755:	push   esi
  404756:	out    0x6e,eax
  404758:	daa    
  404759:	rcr    BYTE PTR ds:0xf2c12678,cl
  40475f:	icebp  
  404760:	jmp    0xfa5a185c
  404765:	push   0x4fc48f68
  40476a:	cli    
  40476b:	hlt    
  40476c:	aaa    
  40476d:	add    edi,DWORD PTR [esi-0x74]
  404770:	cli    
  404771:	inc    esp
  404772:	call   0x1c7a1132
  404777:	push   ds
  404778:	mov    ebp,0x8153f2d4
  40477d:	ja     0x4047f0
  40477f:	fdivr  st,st(2)
  404781:	adc    BYTE PTR [ecx],dl
  404783:	shl    DWORD PTR [edi-0x6a],1
  404786:	jecxz  0x4047dc
  404788:	hlt    
  404789:	push   edi
  40478a:	int    0x33
  40478c:	lahf   
  40478d:	xor    dl,BYTE PTR [edi+0x56]
  404790:	bound  esp,QWORD PTR [ecx]
  404792:	lock cmp DWORD PTR [edi],ebx
  404795:	ror    dh,cl
  404797:	dec    ecx
  404798:	push   cs
  404799:	push   ecx
  40479a:	and    BYTE PTR [ecx],bl
  40479c:	jecxz  0x404723
  40479e:	shl    BYTE PTR [ebp-0xe04a9e6],0x4d
  4047a5:	mov    edi,0xcf39fdff
  4047aa:	sub    BYTE PTR [ebp-0x7a],dl
  4047ad:	lods   al,BYTE PTR ds:[esi]
  4047ae:	int3   
  4047af:	test   eax,0xeff42d7e
  4047b4:	test   BYTE PTR [edi],ch
  4047b6:	pushf  
  4047b7:	ret    0x515b
  4047ba:	mov    al,0x8d
  4047bc:	dec    ebp
  4047bd:	mov    ebp,ebx
  4047bf:	(bad)  [edx+0x4c21defa]
  4047c5:	mov    dh,0x75
  4047c7:	xchg   esi,eax
  4047c8:	out    dx,al
  4047c9:	mov    edi,0x5456e94
  4047ce:	out    dx,al
  4047cf:	sbb    ebx,DWORD PTR [ecx]
  4047d1:	test   eax,0x87b3b35a
  4047d6:	jmp    0x16aefa31
  4047db:	mov    edx,0xf4b3486b
  4047e0:	adc    ah,bh
  4047e2:	(bad)  
  4047e3:	pop    edx
  4047e4:	cs xchg edi,eax
  4047e6:	sbb    al,0xbc
  4047e8:	and    cl,BYTE PTR [esp+eiz*2+0x51631d72]
  4047ef:	mov    esi,0x68ebe541
  4047f4:	nop
  4047f5:	add    al,0x29
  4047f7:	gs stc 
  4047f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047fa:	xchg   ebp,eax
  4047fb:	repz in eax,0xbc
  4047fe:	popf   
  4047ff:	lods   eax,DWORD PTR ds:[esi]
  404800:	inc    edi
  404801:	dec    edi
  404802:	fsub   DWORD PTR [esi+0x10104bb0]
  404808:	mov    WORD PTR [esp+eax*1],es
  40480b:	sbb    cl,dh
  40480d:	or     edi,DWORD PTR [eax-0xb67c836]
  404813:	rcr    BYTE PTR [ebx+eiz*1+0x6e],1
  404817:	dec    esi
  404818:	cs out 0xbe,eax
  40481b:	shr    eax,cl
  40481d:	cmp    bh,ch
  40481f:	nop
  404820:	out    0xb0,eax
  404822:	sub    edi,DWORD PTR [si]
  404825:	pop    esi
  404826:	xor    eax,0xe2005b80
  40482b:	loope  0x404826
  40482d:	fld    DWORD PTR [ebx-0x3ea1a6e6]
  404833:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404834:	mov    al,0x53
  404836:	scas   al,BYTE PTR es:[edi]
  404837:	int3   
  404838:	cli    
  404839:	clc    
  40483a:	mov    ds:0x16b1403f,al
  40483f:	(bad)  
  404840:	xchg   esi,eax
  404841:	call   DWORD PTR [esi+0x257327b3]
  404847:	bound  edi,QWORD PTR [edi*1+0x158a6b0d]
  40484e:	sar    ebp,0x3c
  404851:	pop    es
  404852:	out    0x9a,eax
  404854:	sbb    BYTE PTR ss:[ebp-0x23],0x7a
  404859:	mov    eax,0x341fa9ce
  40485e:	out    dx,al
  40485f:	sub    dh,BYTE PTR [ecx]
  404861:	sbb    al,0xe4
  404863:	iret   
  404864:	cmp    eax,esi
  404866:	fdiv   DWORD PTR [ecx+0x192e456b]
  40486c:	ficom  WORD PTR [esi+0x75]
  40486f:	xor    BYTE PTR fs:[ebp-0x25a4bfdc],0x81
  404877:	in     al,dx
  404878:	and    BYTE PTR [ebx-0x2a771c8c],al
  40487e:	leave  
  40487f:	pop    edx
  404880:	adc    eax,DWORD PTR ds:0xb34027b5
  404886:	adc    cl,bl
  404888:	test   al,0x92
  40488a:	dec    eax
  40488b:	jmp    0x404812
  40488d:	out    0x12,al
  40488f:	fsub   DWORD PTR [eax+0x43]
  404892:	push   ss
  404893:	xchg   esi,eax
  404894:	fcomp  QWORD PTR [edi+0x5e]
  404897:	mov    WORD PTR [ecx],es
  404899:	aaa    
  40489a:	sub    ebp,eax
  40489c:	clc    
  40489d:	arpl   WORD PTR [edx-0x6a8abc5b],bp
  4048a3:	jnp    0x4048a1
  4048a5:	xor    eax,DWORD PTR [edi]
  4048a7:	jecxz  0x404918
  4048a9:	cmc    
  4048aa:	xlat   BYTE PTR ds:[ebx]
  4048ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048ac:	std    
  4048ad:	push   0xb8afc6e
  4048b2:	jp     0x404852
  4048b4:	out    dx,al
  4048b5:	cmp    DWORD PTR [ecx+0x7],0x71fee96a
  4048bc:	aaa    
  4048bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048be:	mov    eax,ds:0xb04656f3
  4048c3:	in     al,dx
  4048c4:	mov    bh,0x2c
  4048c6:	adc    dl,cl
  4048c8:	jnp    0x40492f
  4048ca:	inc    eax
  4048cb:	sbb    ebx,DWORD PTR [eax-0x25]
  4048ce:	sahf   
  4048cf:	nop
  4048d0:	dec    edi
  4048d1:	mov    edi,0x8ab50224
  4048d6:	retf   
  4048d7:	cmp    al,0x6c
  4048d9:	dec    edx
  4048da:	stos   DWORD PTR es:[edi],eax
  4048db:	sub    al,ch
  4048dd:	loopne 0x404949
  4048df:	loope  0x4048de
  4048e1:	loop   0x4048f7
  4048e3:	cs stos BYTE PTR es:[edi],al
  4048e5:	mov    ch,bh
  4048e7:	fiadd  DWORD PTR [ebx]
  4048e9:	mov    WORD PTR [eax-0x37],?
  4048ec:	and    DWORD PTR [ecx+0x10ed4c0b],ecx
  4048f2:	lahf   
  4048f3:	test   DWORD PTR [ebx],ebx
  4048f5:	and    esp,ebp
  4048f7:	or     DWORD PTR [ebx-0x73bbfd9],ebp
  4048fd:	or     eax,0xa1cc0819
  404902:	into   
  404903:	xchg   ebp,eax
  404904:	add    DWORD PTR [ecx],0xa8756bd7
  40490a:	je     0x40490d
  40490c:	clts   
  40490e:	push   es
  40490f:	bound  ebx,QWORD PTR [ecx]
  404911:	shl    DWORD PTR [esi],1
  404913:	ins    BYTE PTR es:[edi],dx
  404914:	cdq    
  404915:	xchg   ebp,eax
  404916:	dec    ebx
  404917:	push   ecx
  404918:	mov    eax,0xdc15a779
  40491d:	retf   
  40491e:	lahf   
  40491f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404920:	push   es
  404921:	loope  0x4048c2
  404923:	ss scas eax,DWORD PTR es:[edi]
  404925:	test   al,0x78
  404927:	sbb    al,0xf2
  404929:	jns    0x404959
  40492b:	fcomp  st(0)
  40492d:	xor    cl,BYTE PTR [eax+edi*1]
  404930:	sub    DWORD PTR [edx+0x11f3caf1],eax
  404936:	scas   al,BYTE PTR es:[edi]
  404937:	sub    ebx,esp
  404939:	cmp    BYTE PTR [ecx+0x6d9e45c4],0x5f
  404940:	nop
  404941:	js     0x4048e7
  404943:	xor    cl,BYTE PTR [edi-0x6e1cc16f]
  404949:	push   ds
  40494a:	inc    esi
  40494b:	mov    ch,0x3
  40494d:	(bad)  
  40494e:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  404950:	mov    dh,0xd1
  404952:	mov    ebx,0xffc03d33
  404957:	push   esi
  404958:	add    edi,DWORD PTR [esi+0x21]
  40495b:	sbb    eax,DWORD PTR [esi]
  40495d:	inc    esi
  40495e:	sub    BYTE PTR [ecx-0x7f],cl
  404961:	sub    eax,0xe85413cf
  404966:	adc    DWORD PTR ds:0x2aff6644,edi
  40496c:	(bad)
  40496f:	fdivr  st(5),st
  404971:	mov    ds:0xe3989bb5,al
  404976:	mov    BYTE PTR [edx-0x7a6a8123],bl
  40497c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40497d:	or     al,0x22
  40497f:	test   eax,0x3c9c9837
  404984:	sbb    BYTE PTR [ecx],0xde
  404987:	xor    cl,BYTE PTR [edi+0x4445742b]
  40498d:	aam    0x86
  40498f:	(bad)  
  404990:	jp     0x404a10
  404992:	mov    ch,0x8e
  404994:	mov    cl,0xc6
  404996:	dec    edx
  404997:	adc    esi,edi
  404999:	inc    ebp
  40499a:	data16 addr16 jl 0x404a15
  40499e:	fcom   DWORD PTR [edi+0x43f7f7f]
  4049a4:	jae    0x40494e
  4049a6:	xor    al,0xb7
  4049a8:	mov    bl,0xaf
  4049aa:	ret    0x6535
  4049ad:	pop    ss
  4049ae:	fidivr DWORD PTR [ecx]
  4049b0:	jge    0x40493a
  4049b2:	adc    DWORD PTR [edx+0x6a],0xffffffb7
  4049b6:	xchg   esi,eax
  4049b7:	ins    DWORD PTR es:[edi],dx
  4049b8:	hlt    
  4049b9:	or     eax,0x9c5a6489
  4049be:	retf   
  4049bf:	jne    0x40498a
  4049c1:	dec    esi
  4049c2:	rol    edi,0xd1
  4049c5:	add    eax,0x8ca6a2e
  4049ca:	mov    al,0xe5
  4049cc:	xor    BYTE PTR [ebp+0x32487759],ah
  4049d2:	sub    DWORD PTR [edi],edx
  4049d4:	xchg   ebx,eax
  4049d5:	mov    al,ds:0x66bc6c50
  4049da:	in     al,0x1a
  4049dc:	mov    DWORD PTR [ecx-0x6ce60837],ebx
  4049e2:	imul   esp,DWORD PTR [eax],0x36
  4049e5:	and    DWORD PTR [edi],ebp
  4049e7:	ins    BYTE PTR es:[edi],dx
  4049e8:	mov    edx,0x80f7e11e
  4049ed:	in     al,0xd2
  4049ef:	sbb    DWORD PTR [bx+di+0x42],0x68
  4049f4:	cmp    al,0x28
  4049f6:	add    eax,0xe2bc7f54
  4049fb:	cs in  al,0xa5
  4049fe:	xchg   BYTE PTR [esi*1-0x48fd09f6],cl
  404a05:	mov    bh,0x2d
  404a07:	push   esp
  404a08:	xchg   BYTE PTR [esi-0x54],ah
  404a0b:	sub    DWORD PTR [esi+0x5b],ebp
  404a0e:	cld    
  404a0f:	mov    esp,0x166cc068
  404a14:	fild   DWORD PTR [eax+0x4b]
  404a17:	xor    edx,DWORD PTR [esi]
  404a19:	(bad)  
  404a1a:	(bad)  
  404a1b:	sub    bl,bh
  404a1d:	imul   eax,DWORD PTR [edi+0x2fa8cc6d],0xaad89a3b
  404a27:	test   DWORD PTR [edi+0x23502284],0xb881c71a
  404a31:	loope  0x404a66
  404a33:	cmp    DWORD PTR [edi+eax*1+0x61],edx
  404a37:	sub    al,0xac
  404a39:	cwde   
  404a3a:	mov    WORD PTR [ecx],cs
  404a3c:	(bad)  
  404a3d:	popf   
  404a3e:	dec    esp
  404a3f:	or     ebx,DWORD PTR [ebx-0x4897d073]
  404a45:	jno    0x4049dd
  404a47:	jne    0x404aa3
  404a49:	or     esp,DWORD PTR [ecx-0x41]
  404a4c:	js     0x404a1c
  404a4e:	cmc    
  404a4f:	mov    DWORD PTR [ebx],esi
  404a51:	xchg   edi,eax
  404a52:	jl     0x404a0a
  404a54:	lods   al,BYTE PTR ds:[esi]
  404a55:	retf   
  404a56:	xor    ch,BYTE PTR [ecx+0x47]
  404a59:	enter  0x57ed,0xc4
  404a5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a5e:	push   0xef44219b
  404a63:	mov    BYTE PTR ds:0xeda7c66e,bl
  404a69:	inc    eax
  404a6a:	sub    edi,DWORD PTR [eax-0x2e]
  404a6d:	add    ebp,ebp
  404a6f:	popf   
  404a70:	mov    ds:0x3732fb18,eax
  404a75:	add    eax,0xff5edae
  404a7a:	out    dx,al
  404a7b:	pushf  
  404a7c:	and    esi,DWORD PTR [edi]
  404a7e:	ins    BYTE PTR es:[edi],dx
  404a7f:	jp     0x404a24
  404a81:	xchg   edi,eax
  404a82:	loopne 0x404a36
  404a84:	or     ebp,ebp
  404a86:	sbb    edi,ecx
  404a88:	mov    esi,0x82aa2a10
  404a8d:	sub    edx,esp
  404a8f:	pusha  
  404a90:	mov    edi,0xc8b6c65f
  404a95:	ins    BYTE PTR es:[edi],dx
  404a96:	inc    esp
  404a97:	popf   
  404a98:	popf   
  404a99:	xor    eax,0x648604dd
  404a9e:	call   0xc0c:0x40437ead
  404aa5:	push   cs
  404aa6:	and    eax,0x8eab105c
  404aab:	xor    dh,BYTE PTR [eax]
  404aad:	xchg   edx,eax
  404aae:	std    
  404aaf:	mov    eax,ds:0x16ccae8b
  404ab4:	(bad)  
  404ab5:	ss int3 
  404ab7:	loop   0x404acf
  404ab9:	jns    0x877edf9f
  404abf:	adc    eax,DWORD PTR [eax+0x65]
  404ac2:	xlat   BYTE PTR ds:[ebx]
  404ac3:	inc    BYTE PTR [ecx+0x5d4f690d]
  404ac9:	pop    eax
  404aca:	mov    edi,0x4cfed86
  404acf:	imul   edi,ebp,0xb3a2435a
  404ad5:	mov    edx,0x5bf59d9d
  404ada:	(bad)  
  404adb:	dec    edi
  404adc:	xor    ecx,edi
  404ade:	jg     0x404a8c
  404ae0:	jmp    0x26dd:0x1ff3aa
  404ae7:	dec    ah
  404ae9:	outs   dx,DWORD PTR ds:[esi]
  404aea:	inc    ecx
  404aeb:	nop
  404aec:	fs lock jge 0x404b60
  404af0:	and    BYTE PTR [esi*2-0x207b7f51],ah
  404af7:	jns    0x404b67
  404af9:	inc    edx
  404afa:	lds    edx,FWORD PTR [eax+0x7ea1581a]
  404b00:	arpl   bp,cx
  404b02:	push   ss
  404b03:	in     al,dx
  404b04:	inc    eax
  404b05:	xor    eax,edx
  404b07:	push   ecx
  404b08:	(bad)  
  404b09:	sti    
  404b0a:	test   DWORD PTR [ecx-0x14dc1e50],eax
  404b10:	jne    0x404b0a
  404b12:	and    edx,edi
  404b14:	mov    esi,0xdea453ef
  404b19:	xchg   ebx,eax
  404b1a:	icebp  
  404b1b:	aam    0x1c
  404b1d:	ds adc edi,edi
  404b20:	sti    
  404b21:	pusha  
  404b22:	in     eax,0xda
  404b24:	mov    dl,0x90
  404b26:	dec    esp
  404b27:	arpl   WORD PTR [edi+eax*4+0x4d1e41ea],bp
  404b2e:	pop    edx
  404b2f:	inc    esi
  404b30:	adc    dh,BYTE PTR [ebx]
  404b32:	ret    
  404b33:	xor    dh,BYTE PTR [eax+0x2094bd58]
  404b39:	lods   al,BYTE PTR ds:[esi]
  404b3a:	push   ecx
  404b3b:	cmp    esp,DWORD PTR [edi]
  404b3d:	data16 cmp al,0x34
  404b40:	add    DWORD PTR [edi],0xe171c530
  404b46:	mov    edi,0x4107034a
  404b4b:	and    BYTE PTR [eax-0xaa27e5d],dl
  404b51:	retf   0x4e9
  404b54:	shl    BYTE PTR [ebx+0xa918c1b],0xce
  404b5b:	mov    bh,BYTE PTR [eax+0x121a70a7]
  404b61:	test   DWORD PTR [ecx+0x79],edi
  404b64:	and    DWORD PTR [ebx+0x2f8d8e06],0xffffffb2
  404b6b:	mov    bl,0x29
  404b6d:	je     0x404b17
  404b6f:	mov    eax,0x4d87f2e6
  404b74:	es mov ss,esi
  404b77:	mov    bl,0x78
  404b79:	loope  0x404bc3
  404b7b:	fisttp WORD PTR [edx+0x4b5d9ff1]
  404b81:	enter  0xdfad,0xcc
  404b85:	add    BYTE PTR [ebp+edi*8-0x5898239c],dh
  404b8c:	sahf   
  404b8d:	add    eax,0x61bcde17
  404b92:	xor    esi,DWORD PTR [ecx+0x6f]
  404b95:	je     0x404ba8
  404b97:	(bad)  
  404b98:	std    
  404b99:	aaa    
  404b9a:	sbb    dh,dl
  404b9c:	repnz data16 cmp dl,BYTE PTR [esi-0x2b]
  404ba1:	shr    DWORD PTR [ebx+0x7d],cl
  404ba4:	push   esi
  404ba5:	xchg   ebp,eax
  404ba6:	scas   al,BYTE PTR es:[edi]
  404ba7:	push   0xfffffff8
  404ba9:	jmp    0x404b3a
  404bab:	stos   BYTE PTR es:[edi],al
  404bac:	push   edi
  404bad:	sti    
  404bae:	inc    eax
  404baf:	imul   eax,DWORD PTR [eax-0x338193ef],0x7bc0a518
  404bb9:	inc    ecx
  404bba:	cmp    al,0x7a
  404bbc:	nop
  404bbd:	out    dx,al
  404bbe:	and    al,0xbb
  404bc0:	in     al,0xb6
  404bc2:	sbb    BYTE PTR [ebx-0x7c],cl
  404bc5:	loopne 0x404bb9
  404bc7:	push   esi
  404bc8:	and    BYTE PTR [eax-0x244d7b2b],ch
  404bce:	jecxz  0x404c22
  404bd0:	jmp    FWORD PTR [ecx+0x42b4caa7]
  404bd6:	out    dx,eax
  404bd7:	sbb    eax,DWORD PTR [esi+ebp*2]
  404bda:	test   DWORD PTR [ebp+0x70],edx
  404bdd:	or     edi,ecx
  404bdf:	stc    
  404be0:	out    dx,eax
  404be1:	repnz dec edi
  404be3:	out    0x3c,eax
  404be5:	cmp    al,0x7d
  404be7:	mov    al,0x65
  404be9:	pop    ebx
  404bea:	dec    eax
  404beb:	or     al,0xa7
  404bed:	in     al,0x21
  404bef:	fdiv   QWORD PTR [ebp+0x770dbde1]
  404bf5:	inc    eax
  404bf6:	daa    
  404bf7:	sbb    bh,al
  404bf9:	in     al,dx
  404bfa:	shr    DWORD PTR [eax],1
  404bfc:	push   esi
  404bfd:	dec    ebp
  404bfe:	(bad)  
  404bff:	retf   0x1c8c
  404c02:	push   DWORD PTR [edx]
  404c04:	test   DWORD PTR [edi-0x66],0xd1827054
  404c0b:	std    
  404c0c:	xchg   BYTE PTR [ecx+0x790574da],bl
  404c12:	sub    al,0x4f
  404c14:	stos   DWORD PTR es:[edi],eax
  404c15:	outs   dx,BYTE PTR ds:[esi]
  404c16:	bound  esi,QWORD PTR [ebx+edi*2]
  404c19:	mov    BYTE PTR [ebx+0x2e58c03e],bl
  404c1f:	and    BYTE PTR [ebx],dh
  404c21:	jne    0x404bb2
  404c23:	(bad)  
  404c24:	jecxz  0x404bd2
  404c26:	mov    al,ds:0x9d3383e
  404c2b:	sub    al,0xa1
  404c2d:	das    
  404c2e:	test   al,0x4d
  404c30:	sti    
  404c31:	mov    cl,0x43
  404c33:	cmp    BYTE PTR [ebp+ebp*1+0x44],ch
  404c37:	mov    DWORD PTR fs:[ecx],eax
  404c3a:	push   ecx
  404c3b:	jno    0x404c42
  404c3d:	(bad)
  404c40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404c41:	fild   QWORD PTR [ebp-0x454a6470]
  404c47:	out    0xc,al
  404c49:	hlt    
  404c4a:	cmp    eax,0x3d2f6e44
  404c4f:	inc    esi
  404c50:	ss cmc 
  404c52:	stc    
  404c53:	adc    al,0x3c
  404c55:	fadd   QWORD PTR [ebp-0x36]
  404c58:	or     BYTE PTR [edi-0x2b15566f],ch
  404c5e:	pop    esi
  404c5f:	mov    eax,ds:0xf08138e
  404c64:	or     DWORD PTR [ebp-0x410441bf],edx
  404c6a:	adc    al,0x29
  404c6c:	adc    BYTE PTR [edx+eax*8-0x54],bh
  404c70:	xor    DWORD PTR [ecx+edx*2-0x1c942de0],ecx
  404c77:	mov    esi,0xaa2d28c2
  404c7c:	cmp    ecx,DWORD PTR [esi]
  404c7e:	std    
  404c7f:	pop    edx
  404c80:	(bad)  
  404c81:	daa    
  404c82:	js     0x404c8f
  404c84:	jb     0x404cfd
  404c86:	lods   al,BYTE PTR ds:[esi]
  404c87:	dec    edi
  404c88:	sti    
  404c89:	mov    ebx,0xb1796720
  404c8f:	(bad)  
  404c90:	push   ebx
  404c91:	or     BYTE PTR [eax+0x19],dl
  404c94:	sbb    ah,BYTE PTR [ecx-0x709b3dcf]
  404c9a:	loop   0x404cb9
  404c9c:	push   0x2cba72
  404ca1:	sub    BYTE PTR [edx-0x4],0xa4
  404ca5:	push   esp
  404ca6:	dec    esp
  404ca7:	or     BYTE PTR [ebp+0x2f],dh
  404caa:	mov    esp,0x340654db
  404caf:	lea    edx,[eax+0xd]
  404cb2:	cdq    
  404cb3:	jae    0x404d17
  404cb5:	sub    BYTE PTR [ebx-0x34],dh
  404cb8:	adc    DWORD PTR [esi],esp
  404cba:	cwde   
  404cbb:	push   cs
  404cbc:	pop    esp
  404cbd:	mov    es,WORD PTR [esi-0x32bba74c]
  404cc3:	rcl    BYTE PTR ds:[edi],1
  404cc6:	fs (bad) 
  404cc9:	mov    al,0x75
  404ccb:	mov    esi,0x878b00ae
  404cd0:	daa    
  404cd1:	lds    ebp,FWORD PTR [ecx+0x78]
  404cd4:	pushf  
  404cd5:	push   eax
  404cd6:	aam    0x95
  404cd8:	scas   al,BYTE PTR es:[edi]
  404cd9:	outs   dx,DWORD PTR ds:[esi]
  404cda:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cdc:	push   ebx
  404cdd:	add    bh,BYTE PTR [edi+edx*1+0x5a534ec9]
  404ce4:	cld    
  404ce5:	sub    esp,DWORD PTR [edi-0xb]
  404ce8:	aas    
  404ce9:	fdivr  QWORD PTR [edx]
  404ceb:	push   esi
  404cec:	xor    DWORD PTR [ecx],ecx
  404cee:	out    dx,eax
  404cef:	rcr    DWORD PTR [edi+0x40],cl
  404cf2:	nop
  404cf3:	xor    al,0xa3
  404cf5:	mov    esi,0x7bb77aac
  404cfa:	adc    esi,ecx
  404cfc:	and    esp,DWORD PTR [edi+ecx*1-0x26]
  404d00:	mov    al,ds:0x7cc8388a
  404d05:	icebp  
  404d06:	push   ss
  404d07:	sub    DWORD PTR [esi+eax*1+0x5f],edx
  404d0b:	and    ebx,ebp
  404d0d:	adc    bl,BYTE PTR [ebp+esi*8-0x1]
  404d11:	inc    esp
  404d12:	push   edx
  404d13:	inc    edi
  404d14:	inc    esi
  404d15:	xchg   edi,eax
  404d16:	ficom  DWORD PTR [ebx+ecx*2-0x2cfec62e]
  404d1d:	jle    0x404cb2
  404d1f:	sar    BYTE PTR [esi+0x7e],0x12
  404d23:	inc    esi
  404d24:	inc    ebp
  404d25:	push   esi
  404d26:	test   DWORD PTR ds:0x8ad893c5,esp
  404d2c:	rcl    DWORD PTR [ecx],cl
  404d2e:	and    BYTE PTR [edx+ecx*1+0x5],ch
  404d32:	outs   dx,BYTE PTR ds:[esi]
  404d33:	inc    esp
  404d34:	pop    ebx
  404d35:	sbb    edi,ecx
  404d37:	mov    eax,0x87bdf75d
  404d3c:	fstp   st(2)
  404d3e:	stc    
  404d3f:	cmp    al,0x48
  404d41:	lods   al,BYTE PTR ds:[esi]
  404d42:	xchg   esi,eax
  404d43:	add    ch,cl
  404d45:	fimul  DWORD PTR [esi+0x30]
  404d48:	mov    al,0x9b
  404d4a:	cmp    ebx,edi
  404d4c:	dec    eax
  404d4d:	bound  ebx,QWORD PTR [eax]
  404d4f:	mov    esp,esp
  404d51:	(bad)  
  404d52:	sar    BYTE PTR [ebx],cl
  404d54:	inc    ebx
  404d55:	outs   dx,BYTE PTR ds:[esi]
  404d56:	inc    edx
  404d57:	and    ebx,ebx
  404d59:	pop    edx
  404d5a:	and    al,0x30
  404d5c:	push   edi
  404d5d:	or     edx,DWORD PTR [ebx+0x1afa0b48]
  404d63:	in     eax,0x22
  404d65:	jbe    0x404d5e
  404d67:	lods   eax,DWORD PTR ds:[esi]
  404d68:	push   eax
  404d69:	inc    ebp
  404d6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404d6b:	mov    edx,0xf57ee2bb
  404d70:	sti    
  404d71:	neg    DWORD PTR [edi]
  404d73:	xchg   edi,eax
  404d74:	pop    ebx
  404d75:	jle    0x404d64
  404d77:	mov    ah,0xf
  404d79:	shl    BYTE PTR [edi+ecx*8+0xbfc8f2e],1
  404d80:	and    esp,eax
  404d82:	cs jecxz 0x404d1e
  404d85:	jl     0x404d6d
  404d87:	push   edx
  404d88:	pop    esi
  404d89:	mov    ebx,0xc82ae612
  404d8e:	jnp    0x404e04
  404d90:	and    ecx,DWORD PTR [esi]
  404d92:	lods   al,BYTE PTR ds:[esi]
  404d93:	xchg   edx,eax
  404d94:	xchg   esi,eax
  404d95:	ja     0x404d9f
  404d97:	inc    edi
  404d98:	fisttp WORD PTR [ebp-0x35398222]
  404d9e:	call   0x9d48:0xbc1b6cce
  404da5:	mov    dh,0x94
  404da7:	pop    esp
  404da8:	(bad)  
  404da9:	fisubr WORD PTR [eax+0x33]
  404dac:	fldenv [edi-0x3b8d9cab]
  404db2:	adc    edx,DWORD PTR ds:0xff8eeae7
  404db8:	xor    ebp,ebx
  404dba:	dec    edi
  404dbb:	mov    dl,0x3d
  404dbd:	mov    edi,0x3f9f6621
  404dc2:	inc    ebp
  404dc3:	cmp    bh,BYTE PTR [edi]
  404dc5:	aaa    
  404dc6:	lahf   
  404dc7:	mov    WORD PTR [ecx],?
  404dc9:	adc    eax,0x2a1b8817
  404dce:	jmp    0x404da9
  404dd0:	pusha  
  404dd1:	cli    
  404dd2:	push   ss
  404dd3:	ffree  st(4)
  404dd5:	lahf   
  404dd6:	push   0xd8c89ad1
  404ddb:	push   ds
  404ddc:	imul   esi,DWORD PTR [ebx+0x38],0xffffffdb
  404de0:	je     0x404db9
  404de2:	jbe    0x404dee
  404de4:	xchg   ebx,eax
  404de5:	pushf  
  404de6:	adc    BYTE PTR ds:0x29efc0e7,bl
  404dec:	adc    edi,DWORD PTR [ebp-0x58d6e4ac]
  404df2:	jnp    0x404e53
  404df4:	(bad)  
  404df5:	aam    0x6
  404df7:	lds    ebx,FWORD PTR [edx-0x284a09b5]
  404dfd:	and    ebp,eax
  404dff:	pop    ds
  404e00:	push   ecx
  404e01:	sti    
  404e02:	hlt    
  404e03:	cld    
  404e04:	cmp    edi,DWORD PTR [eax]
  404e06:	push   esp
  404e07:	push   ss
  404e08:	jecxz  0x404de2
  404e0a:	add    BYTE PTR [edx],dh
  404e0c:	test   al,0x38
  404e0e:	adc    al,0xc4
  404e10:	jmp    0x404db5
  404e12:	mov    al,ds:0xb559c54e
  404e17:	ds mov ecx,ebp
  404e1a:	xchg   ebx,eax
  404e1b:	or     BYTE PTR [esi+esi*2+0x2ef03beb],ah
  404e22:	ds push ecx
  404e24:	add    BYTE PTR [ecx-0x6d],dh
  404e27:	jmp    0x404dd5
  404e29:	mov    bh,0xb6
  404e2b:	pop    ss
  404e2c:	mov    ch,0x98
  404e2e:	pop    eax
  404e2f:	xchg   ebp,eax
  404e30:	loope  0x404e51
  404e32:	fs pop ebx
  404e34:	inc    eax
  404e35:	jp     0x404e87
  404e37:	push   0xec03ded8
  404e3c:	push   es
  404e3d:	lods   eax,DWORD PTR ds:[esi]
  404e3e:	xor    DWORD PTR [eax+0x54],edi
  404e41:	mov    ch,0x9a
  404e43:	dec    ebx
  404e44:	mov    ebx,0xd98e528f
  404e49:	inc    esp
  404e4a:	or     BYTE PTR [esi+0x23],0xf7
  404e4e:	add    ebx,ecx
  404e50:	mov    al,ds:0x13d35832
  404e55:	inc    ecx
  404e56:	jl     0x404ea4
  404e58:	in     ax,0x0
  404e5b:	sbb    eax,0xbdc8264a
  404e60:	mov    esp,0x42dc6c44
  404e65:	dec    edi
  404e66:	and    al,0xf6
  404e68:	test   DWORD PTR [ebx],eax
  404e6a:	hlt    
  404e6b:	cmc    
  404e6c:	out    dx,al
  404e6d:	jnp    0x404e45
  404e6f:	or     edi,DWORD PTR [ebp-0x42abf515]
  404e75:	adc    al,0x9d
  404e77:	jp     0x404ead
  404e79:	cdq    
  404e7a:	push   edi
  404e7b:	lahf   
  404e7c:	pop    ebx
  404e7d:	mov    cl,0x57
  404e7f:	mov    dl,0x30
  404e81:	(bad)  
  404e82:	jle    0x404e2b
  404e84:	pop    esi
  404e85:	(bad)  
  404e86:	sub    al,0x23
  404e88:	aad    0x45
  404e8a:	push   esp
  404e8b:	mov    bh,0xb8
  404e8d:	stc    
  404e8e:	ret    
  404e8f:	cmp    BYTE PTR [esp+eiz*8],0xe
  404e93:	(bad)  
  404e94:	cli    
  404e95:	xchg   DWORD PTR [eax+0x3bf67b1e],ecx
  404e9b:	inc    esp
  404e9c:	or     edi,DWORD PTR [edx+0x13a65f3e]
  404ea2:	dec    esp
  404ea3:	xchg   ebx,eax
  404ea4:	xor    ebp,eax
  404ea6:	or     ebx,DWORD PTR [ecx-0x459493ea]
  404eac:	rcr    DWORD PTR [ebx+0x208afd43],cl
  404eb2:	(bad)  
  404eb3:	std    
  404eb4:	add    eax,0xdd285d18
  404eb9:	je     0x404ee6
  404ebb:	fidivr DWORD PTR [eax*1-0x673c13c4]
  404ec2:	mov    edx,0x1c70e320
  404ec7:	mov    DWORD PTR [edi+edi*1+0x38bd8102],ecx
  404ece:	sub    eax,0xffffff99
  404ed1:	dec    esp
  404ed2:	xchg   ebp,eax
  404ed3:	inc    edi
  404ed4:	es jmp 0x404f44
  404ed7:	std    
  404ed8:	dec    ecx
  404ed9:	push   ss
  404eda:	xchg   ebx,eax
  404edb:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  404edd:	push   esp
  404ede:	mov    al,ds:0xa5b424d3
  404ee4:	aam    0xb7
  404ee6:	jbe    0x404e8e
  404ee8:	pop    eax
  404ee9:	push   esi
  404eea:	jns    0x404ec5
  404eec:	xchg   ebx,eax
  404eed:	or     edx,DWORD PTR [edi+0x4]
  404ef0:	iret   
  404ef1:	dec    ebp
  404ef2:	jle    0x404ed6
  404ef4:	add    BYTE PTR [ebp-0x1dd89e63],ah
  404efa:	(bad)  
  404efb:	cli    
  404efc:	inc    edx
  404efd:	mov    cl,0xe3
  404eff:	mov    ebx,DWORD PTR [ecx]
  404f01:	js     0x404f08
  404f03:	jp     0x404f5b
  404f05:	xor    BYTE PTR [esi],0x77
  404f08:	add    cl,BYTE PTR [eax-0x38]
  404f0b:	(bad)  
  404f0c:	lds    esp,FWORD PTR [ecx]
  404f0e:	mov    gs,WORD PTR [esi+0x73]
  404f11:	or     ch,dl
  404f13:	sub    DWORD PTR [edi-0x73db95a],ebp
  404f19:	xor    esi,DWORD PTR [ebx]
  404f1b:	sbb    dl,al
  404f1d:	or     eax,0x310a265a
  404f22:	sub    DWORD PTR [ecx],edi
  404f24:	mov    edi,es
  404f26:	ins    DWORD PTR es:[edi],dx
  404f27:	push   bp
  404f29:	pop    eax
  404f2a:	dec    ebx
  404f2b:	(bad)  
  404f2c:	aad    0x3f
  404f2e:	push   cs
  404f2f:	ret    
  404f30:	cmp    cl,BYTE PTR [ebx-0x19522188]
  404f36:	jl     0x404f9b
  404f38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f39:	das    
  404f3a:	mov    cl,0x79
  404f3c:	dec    edx
  404f3d:	std    
  404f3e:	mov    edx,0xe7de5cc1
  404f43:	sub    eax,esp
  404f45:	fsincos 
  404f47:	jo     0x404f79
  404f49:	xchg   ebx,eax
  404f4a:	mov    ds:0xaefe4c66,eax
  404f4f:	cmp    edx,edx
  404f51:	inc    esi
  404f52:	or     eax,DWORD PTR [ecx+0x5287d551]
  404f58:	lds    ebx,FWORD PTR ds:0xc59a1eb7
  404f5e:	mov    BYTE PTR [ebx],bh
  404f60:	and    ebp,eax
  404f62:	fadd   DWORD PTR [edi]
  404f64:	ret    0xf0fd
  404f67:	stos   BYTE PTR es:[edi],al
  404f68:	xchg   edi,eax
  404f69:	mov    dh,0x88
  404f6b:	mov    bl,0xd1
  404f6d:	jnp    0x404f28
  404f6f:	aaa    
  404f70:	dec    ebp
  404f71:	aas    
  404f72:	jae    0x404f79
  404f74:	call   FWORD PTR [ebx-0x65e8cd9]
  404f7a:	cdq    
  404f7b:	imul   esi,DWORD PTR [edi-0x5764a134],0x102c3802
  404f85:	xchg   edx,eax
  404f86:	cmp    eax,0xd824e71
  404f8b:	icebp  
  404f8c:	das    
  404f8d:	stc    
  404f8e:	fs ret 0xba1b
  404f92:	aas    
  404f93:	adc    al,dl
  404f95:	retf   
  404f96:	pop    ds
  404f97:	mov    bl,dl
  404f99:	dec    ebx
  404f9a:	cmp    al,0x7e
  404f9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404f9d:	test   eax,0x321d4097
  404fa2:	jle    0x404fe7
  404fa4:	aam    0x32
  404fa6:	pop    eax
  404fa7:	jns    0x404ff4
  404fa9:	loop   0x404f9a
  404fab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fac:	sub    dl,BYTE PTR [ecx]
  404fae:	sbb    al,0x9
  404fb0:	xchg   ecx,eax
  404fb1:	push   es
  404fb2:	popa   
  404fb3:	lods   al,BYTE PTR ds:[esi]
  404fb4:	fsubp  st(1),st
  404fb6:	push   0x3ed824a0
  404fbb:	hlt    
  404fbc:	push   0x1d666e14
  404fc1:	dec    ebp
  404fc2:	out    0x12,al
  404fc4:	cli    
  404fc5:	and    eax,0x174506c5
  404fca:	xchg   esi,eax
  404fcb:	fs (bad) 
  404fcd:	repz jmp esp
  404fd0:	ins    BYTE PTR es:[edi],dx
  404fd1:	adc    BYTE PTR [edx-0x75],0xb4
  404fd5:	mov    edi,0x6091713d
  404fda:	xor    bh,BYTE PTR [edx-0x50]
  404fdd:	push   ebx
  404fde:	xchg   ebx,eax
  404fdf:	mov    ecx,0xe40916ea
  404fe4:	cmp    al,0x5e
  404fe6:	and    DWORD PTR [eax-0x47bb97ff],ebp
  404fec:	rcr    DWORD PTR [ebx+0x5c],0x79
  404ff0:	xchg   ebx,eax
  404ff1:	leave  
  404ff2:	in     al,dx
  404ff3:	pop    esp
  404ff4:	push   ebx
  404ff5:	inc    eax
  404ff6:	loop   0x405060
  404ff8:	push   ebx
  404ff9:	mov    eax,0x21b3f67a
  404ffe:	xor    eax,0x648278db
  405003:	in     al,0xa8
  405005:	in     eax,0xdc
  405007:	loope  0x405015
  405009:	jl     0x404ffa
  40500b:	call   0x1c94:0x777daf2b
  405012:	(bad)  
  405013:	(bad)  
  405014:	add    eax,0xb12b44b4
  405019:	stos   DWORD PTR es:[edi],eax
  40501a:	and    al,0xc4
  40501c:	test   al,0x2c
  40501e:	js     0x404fd9
  405020:	push   ecx
  405021:	mov    ah,0x5a
  405023:	mov    eax,ds:0x2e3b85f5
  405028:	sub    eax,0x6f4230d1
  40502d:	mov    ah,0x7d
  40502f:	sti    
  405030:	lods   eax,DWORD PTR ds:[si]
  405033:	fwait
  405034:	sub    eax,0xf574dd5b
  405039:	inc    edx
  40503a:	mov    edx,0x1b74a85d
  40503f:	add    al,0x59
  405041:	es int 0x1
  405044:	std    
  405045:	hlt    
  405046:	sar    ebx,1
  405048:	or     eax,0x2afd1775
  40504d:	or     eax,0xd1c0feec
  405052:	cmp    DWORD PTR ds:0x76d021b7,0x6a833a1a
  40505c:	int3   
  40505d:	shr    DWORD PTR [ebp-0x6],cl
  405060:	adc    bl,ah
  405062:	dec    edi
  405063:	ins    BYTE PTR es:[edi],dx
  405064:	jbe    0x40508d
  405066:	fsubr  DWORD PTR [edx+edx*1-0x29753e81]
  40506d:	imul   ebx,ebx,0xffffffd9
  405070:	(bad)  
  405071:	jno    0x4050c8
  405073:	sub    bh,BYTE PTR [ebx-0x7b]
  405076:	std    
  405077:	retf   
  405078:	push   esi
  405079:	dec    ecx
  40507a:	aad    0xb2
  40507c:	dec    esp
  40507d:	mov    ebp,0x3a4155f2
  405082:	or     al,0xde
  405084:	test   BYTE PTR [edx-0x439227b],0x40
  40508b:	mov    bh,0xa3
  40508d:	inc    esp
  40508e:	sbb    al,ch
  405090:	(bad)  
  405091:	pushf  
  405092:	loope  0x405014
  405094:	je     0x4050cb
  405096:	dec    eax
  405097:	test   BYTE PTR [ebp+0x56aaf065],0x63
  40509e:	xor    BYTE PTR [ecx],bh
  4050a0:	or     dl,cl
  4050a2:	xchg   edi,eax
  4050a3:	fst    QWORD PTR [esi-0x47]
  4050a6:	sub    eax,0xf79fdd54
  4050ab:	popa   
  4050ac:	call   0x3298:0x4f2f58e1
  4050b3:	test   al,0xd9
  4050b5:	je     0x405066
  4050b7:	or     BYTE PTR [esi+0x3f],al
  4050ba:	mov    esp,0x2a541c5b
  4050bf:	xchg   BYTE PTR [eax-0x72],al
  4050c2:	(bad)  
  4050c4:	adc    al,BYTE PTR [esi+0x24]
  4050c7:	into   
  4050c8:	dec    edx
  4050c9:	pop    edi
  4050ca:	jecxz  0x405115
  4050cc:	mov    BYTE PTR ds:0x39eb5eaa,dl
  4050d2:	sbb    al,BYTE PTR [edx-0x51]
  4050d5:	mov    ch,0x64
  4050d7:	dec    edi
  4050d8:	(bad)  
  4050d9:	xchg   ebp,eax
  4050da:	and    ecx,DWORD PTR [eax+0x70]
  4050dd:	cmp    cl,BYTE PTR [ebp-0xe]
  4050e0:	lahf   
  4050e1:	mov    ds:0x7f445515,eax
  4050e6:	stc    
  4050e7:	xor    DWORD PTR [ebx-0x6f68d03a],edi
  4050ed:	mov    ch,0xbd
  4050ef:	add    esi,DWORD PTR [ebx]
  4050f1:	dec    DWORD PTR [eax-0x4f]
  4050f4:	and    DWORD PTR [bp+0x7],ebp
  4050f8:	xor    eax,0x8bda2458
  4050fd:	mov    esp,0x4ac196d3
  405102:	inc    esi
  405103:	xor    BYTE PTR [esp+esi*4+0x2b1f16fe],cl
  40510a:	imul   esp,DWORD PTR [ebx-0x7],0x68
  40510e:	fcomip st,st(0)
  405111:	out    dx,al
  405112:	(bad)  
  405113:	sahf   
  405114:	xchg   edx,eax
  405115:	jg     0x405144
  405117:	not    BYTE PTR [ebx]
  405119:	inc    esp
  40511a:	std    
  40511b:	push   ebp
  40511c:	xchg   esi,ebx
  40511e:	mov    dl,0x7c
  405120:	mov    bl,0x15
  405122:	push   ecx
  405123:	inc    ebx
  405124:	inc    esi
  405125:	push   esp
  405126:	mov    esp,0x491e9bbd
  40512b:	lds    ebx,FWORD PTR [ebp-0x62]
  40512e:	mov    eax,0x614025a
  405133:	sbb    dh,BYTE PTR [eax+0x1bc05481]
  405139:	or     ch,BYTE PTR [edx]
  40513b:	data16 fdivr DWORD PTR [edi]
  40513e:	adc    ecx,edx
  405140:	clc    
  405141:	sbb    BYTE PTR [ebp-0x4f331cb3],ah
  405147:	scas   al,BYTE PTR es:[edi]
  405148:	xor    DWORD PTR [ebp*1+0x10b2673c],ebp
  40514f:	out    dx,al
  405150:	test   BYTE PTR [eax+0x77502f64],0x81
  405157:	or     DWORD PTR [ebx-0x6b],esp
  40515a:	mov    ds:0x4476862c,eax
  40515f:	test   BYTE PTR [esi],cl
  405161:	into   
  405162:	shr    BYTE PTR [ebp-0x48],0x5d
  405166:	cmc    
  405167:	jl     0x4051ac
  405169:	dec    esp
  40516a:	js     0x40515b
  40516c:	ds cdq 
  40516e:	ss cwde 
  405170:	rol    BYTE PTR [ebp-0x76],0x6e
  405174:	lock push ebp
  405176:	jnp    0x405174
  405178:	jl     0x405139
  40517a:	rcr    DWORD PTR [esi-0x12ebca43],0xdd
  405181:	sbb    al,BYTE PTR [ecx+0x77df6f5a]
  405187:	add    eax,ebx
  405189:	and    eax,0x62436576
  40518e:	mov    bl,BYTE PTR [eax]
  405190:	aaa    
  405191:	test   al,0x8c
  405193:	ds sti 
  405195:	jge    0x405207
  405197:	inc    esp
  405198:	data16 test BYTE PTR [ebp-0x15],0xad
  40519d:	ret    
  40519e:	or     eax,0x144fa5b3
  4051a3:	fsubr  QWORD PTR fs:[edi]
  4051a6:	cli    
  4051a7:	in     eax,dx
  4051a8:	fsubp  st(1),st
  4051aa:	cmp    al,BYTE PTR [edi-0x106b2502]
  4051b0:	or     DWORD PTR [ebx-0x2e3a0c6a],edi
  4051b6:	mov    edx,0x632faab8
  4051bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4051bc:	fimul  DWORD PTR ds:0x69adbaca
  4051c2:	call   0xb39dfed9
  4051c7:	gs hlt 
  4051c9:	or     DWORD PTR [eax+0x74665df4],esp
  4051cf:	xchg   edx,eax
  4051d0:	jbe    0x40520f
  4051d2:	rcl    ecx,0xaa
  4051d5:	sub    BYTE PTR [edx-0x78c1565b],0x80
  4051dc:	fild   QWORD PTR [edx+0x3e076d45]
  4051e2:	adc    ecx,edx
  4051e4:	inc    esi
  4051e5:	lods   eax,DWORD PTR ds:[esi]
  4051e6:	or     eax,esi
  4051e8:	cli    
  4051e9:	and    BYTE PTR [ebx+eax*1-0x27897a05],ah
  4051f0:	imul   edi,DWORD PTR [ecx+0x75ce7df2],0x72696ba5
  4051fa:	das    
  4051fb:	push   cs
  4051fc:	pushf  
  4051fd:	cmp    esi,edi
  4051ff:	xchg   dx,ax
  405201:	imul   ecx,DWORD PTR [edi],0x7abda7cf
  405207:	or     DWORD PTR [edx+0x67],ecx
  40520a:	xor    BYTE PTR [esi-0x2],dh
  40520d:	inc    esp
  40520e:	leave  
  40520f:	push   edx
  405210:	dec    esi
  405211:	sbb    esi,DWORD PTR [edi]
  405213:	push   es
  405214:	sbb    al,0xfb
  405216:	ins    BYTE PTR es:[edi],dx
  405217:	jp     0x405229
  405219:	add    DWORD PTR ds:0xc7b31abf,ebp
  40521f:	pop    esp
  405220:	aam    0xa9
  405222:	dec    ecx
  405223:	repnz rcr BYTE PTR [eax+edx*1+0x77],1
  405228:	test   dl,bl
  40522a:	sti    
  40522b:	push   ebp
  40522c:	jnp    0x40520c
  40522e:	cli    
  40522f:	es (bad) 
  405232:	or     esi,DWORD PTR [ebp+0x7e0636de]
  405238:	xor    DWORD PTR [edx+0x9bd6a72],edx
  40523e:	xor    DWORD PTR [edi+ecx*2+0x9],0xab4e510d
  405246:	sbb    ebx,ebp
  405248:	in     al,dx
  405249:	sbb    BYTE PTR [edi-0x26],dh
  40524c:	inc    ecx
  40524d:	test   eax,0x5a5f2330
  405252:	jne    0x4051d4
  405254:	into   
  405255:	and    eax,0xe15f18fc
  40525a:	sbb    ebp,DWORD PTR [edi]
  40525c:	sub    BYTE PTR [esp+eax*2+0x5a],ah
  405260:	jmp    0x4051fb
  405262:	add    al,0xd9
  405264:	aaa    
  405265:	arpl   WORD PTR [ecx+0x244390c0],bp
  40526b:	xor    cl,dl
  40526d:	inc    edi
  40526e:	cmp    eax,0xb79800e2
  405273:	sbb    dl,BYTE PTR [ebp+0x7d]
  405276:	(bad)  
  405277:	ror    DWORD PTR [ecx],cl
  405279:	sub    ebp,esi
  40527b:	int    0x37
  40527d:	dec    edi
  40527e:	repnz sbb eax,0x4fc7821
  405284:	sbb    BYTE PTR [edi-0x1],cl
  405287:	js     0x40528a
  405289:	xor    al,ah
  40528b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40528c:	aaa    
  40528d:	not    eax
  40528f:	(bad)  
  405290:	aam    0x5f
  405292:	sbb    esi,DWORD PTR [ebp+0x12]
  405295:	dec    edx
  405296:	gs popa 
  405298:	je     0x40522e
  40529a:	icebp  
  40529b:	fisttp WORD PTR ds:0x464b711c
  4052a1:	and    BYTE PTR gs:[edi-0x70],al
  4052a5:	cmc    
  4052a6:	pop    eax
  4052a7:	mov    eax,ds:0x4d6c093d
  4052ac:	jae    0xbcb1b475
  4052b2:	in     eax,0x7f
  4052b4:	sbb    BYTE PTR [edx+0x47facb58],cl
  4052ba:	add    edi,edx
  4052bc:	in     al,dx
  4052bd:	jg     0x4052e7
  4052bf:	xor    al,0x5b
  4052c1:	ror    BYTE PTR [edx+0x5b],0xa2
  4052c5:	call   0x18e99be8
  4052ca:	ja     0x40533b
  4052cc:	ins    DWORD PTR es:[edi],dx
  4052cd:	dec    ebx
  4052ce:	cmc    
  4052cf:	jo     0x40531b
  4052d1:	aaa    
  4052d2:	or     al,BYTE PTR [ecx]
  4052d4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4052d5:	(bad)  
  4052d7:	pop    ds
  4052d8:	push   ebx
  4052d9:	popf   
  4052da:	sub    DWORD PTR [ebx],esp
  4052dc:	lods   eax,DWORD PTR ds:[esi]
  4052dd:	(bad)  
  4052de:	jne    0x405275
  4052e0:	sub    al,0x57
  4052e3:	jl     0x405265
  4052e5:	xor    al,0xb0
  4052e7:	call   0x5bdf:0x91bd82b1
  4052ee:	cld    
  4052ef:	or     al,0x65
  4052f1:	mov    esp,cs
  4052f3:	inc    esp
  4052f4:	inc    esi
  4052f5:	pop    ss
  4052f6:	xor    al,dl
  4052f8:	lea    ecx,[ebx]
  4052fa:	xchg   ecx,eax
  4052fb:	jecxz  0x405280
  4052fd:	in     eax,0x3f
  4052ff:	mov    eax,ds:0x1f966781
  405304:	push   es
  405305:	pop    es
  405306:	inc    ecx
  405307:	stc    
  405308:	sbb    eax,0x8f3cde13
  40530d:	call   0xd2c8:0x1de0d3ab
  405314:	inc    esi
  405315:	and    eax,ebx
  405317:	popa   
  405318:	sbb    cl,BYTE PTR [esi-0x7a]
  40531b:	adc    BYTE PTR [ebp+0x52edf4ad],0x35
  405322:	xchg   ebx,eax
  405323:	cmc    
  405324:	aad    0x58
  405326:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405327:	popf   
  405328:	mov    dh,0x61
  40532a:	in     eax,dx
  40532b:	sbb    DWORD PTR [ecx],edx
  40532d:	inc    edi
  40532e:	or     eax,0x64ddcf56
  405333:	aam    0x54
  405335:	js     0x4052e0
  405337:	jb     0x4052ba
  405339:	xchg   ebp,eax
  40533a:	adc    ebx,DWORD PTR [ebp+0x19]
  40533d:	inc    esi
  40533e:	lods   al,BYTE PTR ds:[esi]
  40533f:	mov    ebp,0x5fd6b0fc
  405344:	loopne 0x405309
  405346:	push   edi
  405347:	cli    
  405348:	add    al,0x3c
  40534a:	and    DWORD PTR [edi],ebp
  40534c:	(bad)  
  40534d:	mov    bh,0x45
  40534f:	outs   dx,DWORD PTR ds:[esi]
  405350:	jge    0x405301
  405352:	mov    edi,DWORD PTR [ebx-0x54]
  405355:	jp     0x4052ef
  405357:	mov    cl,0x61
  405359:	popf   
  40535a:	(bad)  
  40535b:	lds    ecx,FWORD PTR [esi-0x9fc8482]
  405361:	inc    ebp
  405362:	add    ch,BYTE PTR [ebx]
  405364:	cdq    
  405365:	ja     0x4052e8
  405367:	mov    ?,esi
  405369:	and    eax,0x885a3f7d
  40536e:	mov    ebx,0x48bd39ed
  405373:	cmp    DWORD PTR [ecx-0x73],0xffffffef
  405377:	daa    
  405378:	out    0x62,al
  40537a:	jbe    0x40530a
  40537c:	xor    al,0xa
  40537e:	ja     0x40537e
  405380:	mov    esi,0x6f1c762b
  405385:	mov    bh,0xf2
  405387:	or     DWORD PTR [ecx],edx
  405389:	xlat   BYTE PTR ds:[ebx]
  40538a:	ds mov ecx,0x5ec5a3d7
  405390:	mov    bl,0x7c
  405392:	mov    esp,0x6b424b6
  405397:	dec    esp
  405398:	pop    esi
  405399:	sub    DWORD PTR [eax-0x56],eax
  40539c:	das    
  40539d:	and    esi,DWORD PTR [edi-0x37]
  4053a0:	ds mov ch,0xfd
  4053a3:	addr16 cdq 
  4053a5:	push   ebx
  4053a6:	push   es
  4053a7:	xchg   edi,eax
  4053a9:	cmp    al,BYTE PTR [ebx]
  4053ab:	jb     0x4053f0
  4053ad:	out    dx,eax
  4053ae:	mov    BYTE PTR [ecx],bh
  4053b0:	stc    
  4053b1:	jp     0x405333
  4053b3:	ins    BYTE PTR es:[edi],dx
  4053b4:	lds    edi,FWORD PTR [eax+0x5d80d6d4]
  4053ba:	stos   DWORD PTR es:[edi],eax
  4053bb:	lds    ebp,FWORD PTR [edx]
  4053bd:	mov    edi,0x253a5933
  4053c2:	mov    al,0x88
  4053c4:	add    eax,0xf7e9e3ac
  4053c9:	push   0x1a49b39e
  4053ce:	shl    BYTE PTR [esi-0x1876e2c2],cl
  4053d4:	pop    ss
  4053d5:	jmp    0x7f39ba05
  4053da:	dec    esp
  4053db:	enter  0x723,0xe5
  4053df:	lds    edx,FWORD PTR [ebx+edx*1]
  4053e2:	mov    ah,0x3f
  4053e4:	mov    ah,0xa9
  4053e6:	and    edi,esi
  4053e8:	lds    esp,FWORD PTR [ebp-0x65]
  4053eb:	pop    esp
  4053ec:	cmp    bl,BYTE PTR [edi]
  4053ee:	cli    
  4053ef:	push   edx
  4053f0:	into   
  4053f1:	lea    esi,[eax+0x65afa242]
  4053f7:	push   es
  4053f8:	mov    al,0x65
  4053fa:	imul   edi,DWORD PTR [esp+edx*1],0xffffffe0
  4053fe:	clc    
  4053ff:	and    DWORD PTR [edx-0x54],esp
  405402:	or     bl,ch
  405404:	ins    DWORD PTR es:[edi],dx
  405405:	sbb    ebx,DWORD PTR [eax]
  405407:	jbe    0x4053ed
  405409:	push   esp
  40540a:	gs mov bh,0xa5
  40540d:	mov    ds:0x3b46d6e6,al
  405412:	cmp    ebx,DWORD PTR [ebx+0x2c55596d]
  405418:	xor    al,0x7c
  40541a:	cmp    eax,0xcbe59b81
  40541f:	push   eax
  405420:	cs clc 
  405422:	or     eax,0x5813028
  405427:	or     eax,DWORD PTR [ecx]
  405429:	cli    
  40542a:	(bad)  
  40542b:	or     al,0xc3
  40542d:	mov    ch,0xea
  40542f:	push   0x31
  405431:	scas   eax,DWORD PTR es:[edi]
  405432:	into   
  405433:	jbe    0x40542b
  405435:	loop   0x4054a6
  405437:	mov    BYTE PTR [ecx+ecx*1],ch
  40543a:	xchg   edx,eax
  40543b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40543c:	and    BYTE PTR [edx],dh
  40543e:	loope  0x405467
  405440:	ins    DWORD PTR es:[edi],dx
  405441:	shr    DWORD PTR [edx+0x46a30e4a],0x98
  405448:	mov    ch,0xb0
  40544a:	clc    
  40544b:	out    0xc2,eax
  40544d:	test   BYTE PTR [ebx-0x1a2da5f4],al
  405453:	hlt    
  405454:	std    
  405455:	addr16 retf 0xcd6b
  405459:	adc    DWORD PTR [esi-0x54],ecx
  40545c:	xor    al,0x74
  40545e:	add    al,0xa9
  405460:	jae    0x4054db
  405462:	xchg   edx,eax
  405463:	dec    edx
  405464:	pop    ss
  405465:	loopne 0x405447
  405467:	jp     0x40545b
  405469:	mov    DWORD PTR [esi],eax
  40546b:	into   
  40546c:	jno    0x40548b
  40546e:	push   eax
  40546f:	push   0x64b56127
  405474:	cmp    DWORD PTR [eax-0x47],esp
  405477:	xor    BYTE PTR [ecx+edx*2],bh
  40547a:	rcr    dh,0xb6
  40547d:	and    al,0x72
  40547f:	or     DWORD PTR [ebx+0x7a],esp
  405482:	rcr    DWORD PTR ds:0x2884a8d1,1
  405488:	loop   0x405435
  40548a:	cli    
  40548b:	arpl   sp,dx
  40548d:	adc    BYTE PTR [edi-0x50],cl
  405490:	stos   DWORD PTR es:[edi],eax
  405491:	rcl    BYTE PTR [eax+ecx*4-0x5c94fe88],0xe2
  405499:	ins    DWORD PTR es:[edi],dx
  40549a:	sub    eax,0xd33f6737
  40549f:	push   esp
  4054a0:	inc    ecx
  4054a1:	(bad)  
  4054a2:	mov    ah,0x40
  4054a4:	push   esi
  4054a5:	mov    al,0x33
  4054a7:	out    dx,al
  4054a8:	lods   eax,DWORD PTR ds:[esi]
  4054a9:	mov    ecx,0x99814b96
  4054ae:	(bad)  
  4054af:	(bad)  
  4054b0:	mov    edx,0xae80f5f
  4054b5:	mov    al,ds:0x88472f2
  4054ba:	push   ebx
  4054bb:	test   eax,0xfea82e05
  4054c0:	enter  0x449,0xcf
  4054c4:	or     cl,dl
  4054c6:	push   cs
  4054c7:	mov    ecx,0x5527f28e
  4054cc:	add    eax,0xd1baf5f3
  4054d1:	je     0x405495
  4054d3:	cli    
  4054d4:	push   ss
  4054d5:	pop    esi
  4054d6:	cmp    dh,BYTE PTR [esi]
  4054d8:	fldenv ds:0x919dd2e1
  4054de:	or     BYTE PTR [esi-0x5b03f371],al
  4054e4:	fcomp  DWORD PTR ds:0xc6242c44
  4054ea:	ins    DWORD PTR es:[edi],dx
  4054eb:	cmp    DWORD PTR [edi-0x1a3e676d],edi
  4054f1:	std    
  4054f2:	adc    al,0x2c
  4054f4:	inc    edi
  4054f5:	shr    ecx,1
  4054f7:	push   ebp
  4054f8:	sti    
  4054f9:	pusha  
  4054fa:	outs   dx,BYTE PTR ds:[esi]
  4054fb:	pop    ecx
  4054fc:	and    al,BYTE PTR [edx]
  4054fe:	(bad)  
  4054ff:	mov    dh,0x2c
  405501:	sar    BYTE PTR [edi+0x727dfbea],cl
  405507:	xor    dl,BYTE PTR [ebp-0x37]
  40550a:	sbb    edx,ebx
  40550c:	pop    ebp
  40550d:	inc    ebx
  40550e:	stc    
  40550f:	ds dec ebx
  405511:	xchg   ebx,eax
  405512:	arpl   WORD PTR [edi],sp
  405514:	dec    ebp
  405515:	dec    edx
  405516:	add    eax,0x59d6e8c6
  40551b:	inc    esi
  40551c:	jg     0x405581
  40551e:	scas   al,BYTE PTR es:[edi]
  40551f:	pop    edx
  405520:	xchg   esp,eax
  405521:	inc    DWORD PTR [esi+0x6968a42f]
  405527:	or     al,0x30
  405529:	nop
  40552a:	cmp    ah,BYTE PTR [ecx+0x7f]
  40552d:	test   eax,0xf63f91fe
  405532:	mov    eax,ds:0x4c160323
  405537:	loope  0x4054c5
  405539:	and    BYTE PTR [ecx+0x8637875],0xf4
  405540:	jne    0x405522
  405542:	pushf  
  405543:	jnp    0x4055b4
  405545:	popf   
  405546:	(bad)  
  405547:	adc    DWORD PTR [edx-0x24],edi
  40554a:	mov    ebx,ebx
  40554c:	js     0x4055aa
  40554e:	std    
  40554f:	repnz xchg ebx,eax
  405551:	icebp  
  405552:	pop    es
  405553:	mov    ds:0x73ad5fea,eax
  405558:	push   eax
  405559:	pop    eax
  40555a:	shr    BYTE PTR [ecx-0x6791b236],0xb1
  405561:	in     al,dx
  405562:	retf   0xa425
  405565:	and    al,BYTE PTR [edx]
  405567:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405568:	xor    BYTE PTR [ecx+eiz*8-0x62ebd5e5],dh
  40556f:	inc    eax
  405570:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405571:	pop    ss
  405572:	sub    ebp,esi
  405574:	add    eax,0x3129f063
  405579:	sub    BYTE PTR [eax+0xd],ah
  40557c:	mov    dh,0xf5
  40557e:	mov    eax,0x82150e6f
  405583:	rol    BYTE PTR [ebp+0x31],cl
  405586:	jg     0x4055bf
  405588:	loope  0x4055c1
  40558a:	push   edi
  40558b:	jg     0x40560a
  40558d:	data16 (bad) 
  40558f:	call   0x9b74fcfa
  405594:	jne    0x4055c4
  405596:	lahf   
  405597:	imul   DWORD PTR [esi+0x5ce6c2f5]
  40559d:	mov    esi,ss
  40559f:	aad    0xca
  4055a1:	and    BYTE PTR ds:0xcd52504b,bl
  4055a7:	mov    al,0x51
  4055a9:	push   edi
  4055aa:	into   
  4055ab:	mov    ebx,0xb29d5368
  4055b0:	in     eax,dx
  4055b1:	mov    bl,BYTE PTR [ebp-0x1b]
  4055b4:	xchg   dh,ah
  4055b6:	adc    eax,0x5c3d1fdc
  4055bb:	adc    DWORD PTR [eax],eax
  4055bd:	int3   
  4055be:	fs push esp
  4055c0:	gs push esp
  4055c2:	dec    ebx
  4055c3:	xchg   edi,eax
  4055c4:	and    ebp,DWORD PTR [eax+ebx*1]
  4055c7:	nop
  4055c8:	cdq    
  4055c9:	ret    0x32f2
  4055cc:	lea    ecx,[eax-0x2a]
  4055cf:	ins    DWORD PTR es:[edi],dx
  4055d0:	mov    ds:0x24632467,eax
  4055d5:	out    dx,al
  4055d6:	scas   al,BYTE PTR es:[edi]
  4055d7:	fstp   DWORD PTR [edi]
  4055d9:	and    cl,BYTE PTR [ecx-0x2f]
  4055dc:	adc    ebx,ecx
  4055de:	aaa    
  4055df:	sbb    esp,DWORD PTR [edi+edi*8]
  4055e2:	fisub  DWORD PTR [esi-0xa]
  4055e5:	push   edx
  4055e6:	sbb    BYTE PTR [edx-0x2f9897f9],al
  4055ec:	into   
  4055ed:	stos   DWORD PTR es:[edi],eax
  4055ee:	sub    dh,BYTE PTR [ebx-0x77f0d168]
  4055f4:	dec    edi
  4055f5:	mov    al,ds:0xf21fd9ab
  4055fa:	and    BYTE PTR [eax],cl
  4055fc:	ins    DWORD PTR es:[edi],dx
  4055fd:	aas    
  4055fe:	(bad)  [esp+ecx*4]
  405601:	pop    esi
  405602:	xor    DWORD PTR [ebp-0x15],esi
  405605:	repnz rcr DWORD PTR [eax],0x6c
  405609:	int3   
  40560a:	and    DWORD PTR [eax+0x26],ebp
  40560d:	adc    BYTE PTR [ecx+edx*2+0x19],0x62
  405612:	inc    bh
  405614:	shr    BYTE PTR [esi-0x79],1
  405617:	or     ecx,0xe570d1f3
  40561d:	(bad)  
  40561e:	xlat   BYTE PTR ds:[ebx]
  40561f:	shr    DWORD PTR [eax],cl
  405621:	call   0x7f99:0xbd98a98f
  405628:	loope  0x40567a
  40562a:	gs div BYTE PTR fs:[edx]
  40562e:	jmp    0x68d37844
  405633:	daa    
  405634:	imul   ebp,DWORD PTR ds:0xc798f817,0xffffffa0
  40563b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40563c:	aaa    
  40563d:	out    0x30,eax
  40563f:	pop    ebp
  405640:	xchg   edi,eax
  405641:	pop    edi
  405642:	push   0x12c4ca05
  405647:	daa    
  405648:	inc    eax
  405649:	adc    al,0x61
  40564b:	js     0x4056a9
  40564d:	push   edx
  40564e:	dec    esi
  40564f:	cmp    bh,BYTE PTR [edx+0x48]
  405652:	sub    al,0xf9
  405654:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405655:	inc    edi
  405656:	cld    
  405657:	sbb    esp,ebp
  405659:	out    0x42,eax
  40565b:	nop
  40565c:	mov    eax,ds:0x7f44ceed
  405661:	inc    edi
  405662:	test   DWORD PTR [eax],esi
  405664:	cmp    ebx,DWORD PTR [ebp-0x74]
  405667:	mov    ch,0xc5
  405669:	add    ebp,DWORD PTR [ebx-0x7a821052]
  40566f:	cmp    DWORD PTR [ebp+0x4414251b],edx
  405675:	dec    ebx
  405676:	fsub   st(2),st
  405678:	add    eax,0xbcde6b66
  40567d:	sbb    DWORD PTR [eax],eax
  40567f:	outs   dx,DWORD PTR ds:[esi]
  405680:	outs   dx,DWORD PTR ds:[esi]
  405681:	jnp    0x4056a8
  405683:	adc    dh,BYTE PTR [ebp-0x7fd48685]
  405689:	pop    es
  40568a:	mov    ch,0xaf
  40568c:	inc    ebx
  40568d:	push   ebx
  40568e:	nop
  40568f:	add    eax,0xff977595
  405694:	lds    ecx,FWORD PTR [esi]
  405696:	xor    BYTE PTR [ecx],bl
  405698:	stos   DWORD PTR es:[edi],eax
  405699:	in     al,dx
  40569a:	jmp    0x16eec15c
  40569f:	rcl    DWORD PTR [ecx+0x2065ae97],0x70
  4056a6:	pushf  
  4056a7:	mov    WORD PTR [edx+ebx*8-0x34],?
  4056ab:	popf   
  4056ac:	out    0x36,al
  4056ae:	iret   
  4056af:	iret   
  4056b0:	jecxz  0x4056f3
  4056b2:	rcr    BYTE PTR [esi],0x8a
  4056b5:	adc    BYTE PTR [edi-0x5b97ce7b],cl
  4056bb:	and    eax,0x993ee898
  4056c0:	push   ss
  4056c1:	repnz mov ah,0xf0
  4056c4:	imul   edi,DWORD PTR [ecx+esi*8-0x50082c70],0xfffffff9
  4056cc:	xor    DWORD PTR [eax+0x46],ebx
  4056cf:	int    0xf6
  4056d1:	sub    BYTE PTR [ebx-0x43],0x12
  4056d5:	test   DWORD PTR ds:0x2c07d8ca,0x9e104fda
  4056df:	dec    esi
  4056e0:	or     edx,DWORD PTR [ebp+edi*1-0x5bd14a87]
  4056e7:	fmulp  st(6),st
  4056e9:	sub    esp,0x7cae0ee9
  4056ef:	mov    ecx,0x4a89761b
  4056f4:	popa   
  4056f5:	pusha  
  4056f6:	adc    al,0x45
  4056f8:	xor    eax,0x8016e05d
  4056fd:	int    0x7d
  4056ff:	mov    WORD PTR [esp+esi*8+0x7da0c1da],ss
  405706:	mov    eax,ds:0x8bc12220
  40570b:	cmc    
  40570c:	call   0xad7b:0xe26a0e68
  405713:	cld    
  405714:	mov    bh,BYTE PTR [ebp-0x67]
  405717:	dec    ebp
  405718:	test   DWORD PTR [ecx],0x866e7748
  40571e:	jl     0x4056fa
  405720:	dec    esi
  405721:	cmp    BYTE PTR [edi-0x59],0x97
  405725:	pushf  
  405726:	mov    WORD PTR [ebp+0x38],?
  405729:	test   al,0x2a
  40572b:	xchg   esi,eax
  40572c:	or     BYTE PTR [ebx-0x6f0a3d6b],bl
  405732:	je     0x40570b
  405734:	xchg   ebx,eax
  405735:	pop    ss
  405736:	scas   eax,DWORD PTR es:[edi]
  405737:	sti    
  405738:	or     al,0x39
  40573a:	clc    
  40573b:	dec    ecx
  40573c:	int3   
  40573d:	mov    bh,0x49
  40573f:	jg     0x40574a
  405741:	shr    dh,cl
  405743:	jne    0x4057ab
  405745:	js     0x405727
  405747:	cwde   
  405748:	xchg   ecx,eax
  405749:	and    ebx,0xeaa584e4
  40574f:	pop    ds
  405750:	retf   0x30a
  405753:	mov    ?,edx
  405755:	push   esi
  405756:	arpl   cx,ax
  405758:	cmp    DWORD PTR [ebx+eiz*1+0x71],ecx
  40575c:	mov    bh,0xd4
  40575e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40575f:	scas   al,BYTE PTR es:[edi]
  405760:	retf   
  405761:	popf   
  405762:	dec    esi
  405763:	fsubr  QWORD PTR [ebp+0x72]
  405766:	and    al,0x94
  405768:	pop    ebx
  405769:	lods   eax,DWORD PTR ds:[esi]
  40576a:	ja     0x4057a2
  40576c:	out    dx,al
  40576d:	out    dx,eax
  40576e:	add    al,0x64
  405770:	push   cs
  405771:	jno    0x405784
  405773:	inc    edi
  405774:	xchg   DWORD PTR [ebp+0x42],edx
  405777:	adc    ecx,DWORD PTR [edx-0x10890721]
  40577d:	js     0x40577f
  40577f:	into   
  405780:	fwait
  405781:	cmp    al,0xe6
  405783:	mov    ds:0x4602dbc0,eax
  405788:	inc    ecx
  405789:	out    0x15,al
  40578b:	push   edi
  40578c:	sar    DWORD PTR [eax],cl
  40578e:	ja     0x4057d3
  405790:	repnz outs dx,DWORD PTR ds:[esi]
  405792:	js     0x40577f
  405794:	out    dx,al
  405795:	int3   
  405796:	popa   
  405797:	popa   
  405798:	sub    DWORD PTR [esi+0x3f5228ca],0x2ad5fc96
  4057a2:	test   ebp,0xff232a15
  4057a8:	jmp    0xe7887c06
  4057ad:	jmp    0x1ea7:0x8a02d9
  4057b4:	mov    ebp,0x502cf18b
  4057b9:	mov    edx,0xc8d35446
  4057be:	pusha  
  4057bf:	out    0x33,al
  4057c1:	add    eax,0x26118a75
  4057c6:	or     bh,dh
  4057c8:	or     eax,0xd424cb2
  4057cd:	aas    
  4057ce:	in     eax,dx
  4057cf:	push   eax
  4057d0:	xchg   edx,esi
  4057d2:	leave  
  4057d3:	xchg   ecx,eax
  4057d4:	push   cs
  4057d5:	adc    cl,dh
  4057d7:	mov    al,ds:0x30d7e136
  4057dc:	ret    
  4057dd:	lock scas al,BYTE PTR es:[di]
  4057e0:	jl     0x40583d
  4057e2:	inc    ebp
  4057e3:	into   
  4057e4:	int3   
  4057e5:	std    
  4057e6:	fadd   QWORD PTR [edx]
  4057e8:	push   0xffffff8d
  4057ea:	adc    DWORD PTR [eax],ecx
  4057ec:	loop   0x4057c2
  4057ee:	(bad)  
  4057ef:	cmp    eax,0x58b3d33b
  4057f4:	mov    ch,0xd1
  4057f6:	and    eax,0x755825f0
  4057fb:	mov    esp,fs
  4057fd:	sbb    BYTE PTR [edi],dh
  4057ff:	std    
  405800:	rcr    DWORD PTR [ebp+0x72c6110b],cl
  405806:	sbb    DWORD PTR [ecx-0x25],edi
  405809:	push   0x7067a9a2
  40580e:	xchg   esi,eax
  40580f:	jle    0x40585c
  405811:	xor    al,0xfe
  405813:	mov    ds:0x450c539d,eax
  405818:	sbb    BYTE PTR [eax+eax*2],ch
  40581b:	cmp    ch,BYTE PTR [ebx-0x2d]
  40581e:	and    esp,DWORD PTR [ecx+0x8d7f706]
  405824:	aam    0xed
  405826:	push   ss
  405827:	mov    al,ds:0x7bd33ecb
  40582c:	mov    edi,0x7471907d
  405831:	xor    ebx,edx
  405833:	inc    ebp
  405834:	cld    
  405835:	cmp    ebx,esp
  405837:	aas    
  405838:	mov    ebx,DWORD PTR [ebx]
  40583a:	call   0x846b:0x7979d96
  405841:	(bad)  
  405842:	pop    ds
  405843:	xchg   ecx,eax
  405844:	test   dh,0x35
  405847:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405849:	rcl    DWORD PTR [ecx-0x40],1
  40584c:	imul   edi,DWORD PTR [ebp-0x3f8d80b0],0xf8b4291e
  405856:	dec    edx
  405857:	sub    bl,BYTE PTR [ebx]
  405859:	inc    ecx
  40585a:	clc    
  40585b:	fs mov al,dl
  40585e:	xorps  xmm7,xmm1
  405861:	sti    
  405862:	cld    
  405863:	aad    0xa4
  405865:	mov    ebx,0x55e476f
  40586a:	adc    dh,BYTE PTR [edi]
  40586c:	xor    ebx,0x19130f56
  405872:	adc    ah,BYTE PTR [eax+0x17]
  405875:	mov    bh,0xd7
  405877:	sbb    ecx,ecx
  405879:	daa    
  40587a:	scas   eax,DWORD PTR es:[edi]
  40587b:	into   
  40587c:	lods   al,BYTE PTR ds:[esi]
  40587d:	xchg   ah,bh
  40587f:	repz loopne 0x405821
  405882:	ficom  WORD PTR [ecx+0x64]
  405885:	jp     0x4058fd
  405887:	cdq    
  405888:	(bad)  
  405889:	div    DWORD PTR [ecx+0x51]
  40588c:	dec    eax
  40588d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40588e:	xchg   edx,eax
  40588f:	cld    
  405890:	dec    ecx
  405891:	pop    eax
  405892:	aaa    
  405893:	imul   ebp,DWORD PTR [edx+ebp*4],0xd202eb81
  40589a:	addr16 (bad) 
  40589c:	in     eax,0x5a
  40589e:	fwait
  40589f:	adc    al,ch
  4058a1:	sahf   
  4058a2:	mov    ecx,0x6f0f81f8
  4058a7:	add    esp,ebp
  4058a9:	int3   
  4058aa:	xchg   esp,eax
  4058ab:	lea    esi,[ebx+0x73]
  4058ae:	lock sbb eax,0x69ef07b3
  4058b4:	mov    ah,0x45
  4058b6:	cs sbb al,0x84
  4058b9:	mov    cs,WORD PTR [ecx+0x65086017]
  4058bf:	push   ebx
  4058c0:	xor    eax,0xce3902b7
  4058c5:	test   eax,0x6c67b99
  4058ca:	ror    bl,0x93
  4058cd:	jg     0x405917
  4058cf:	mov    esp,0xc0c1aa4b
  4058d4:	ret    
  4058d5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058d6:	adc    BYTE PTR [eax],dl
  4058d8:	scas   eax,DWORD PTR es:[edi]
  4058d9:	bound  edx,QWORD PTR [edi-0x17701562]
  4058df:	outs   dx,DWORD PTR ds:[esi]
  4058e0:	cmp    DWORD PTR [edx+0x65],esi
  4058e3:	pop    es
  4058e4:	mov    al,ds:0xe5a34eec
  4058e9:	and    DWORD PTR [eax+edi*8-0x65],eax
  4058ed:	js     0x4058e4
  4058ef:	xchg   ebx,eax
  4058f0:	outs   dx,BYTE PTR ds:[esi]
  4058f1:	cli    
  4058f2:	fs popa 
  4058f4:	jno    0x4058e1
  4058f6:	hlt    
  4058f7:	adc    al,0x5f
  4058f9:	std    
  4058fa:	mov    cl,BYTE PTR [eax+0x70]
  4058fd:	xor    DWORD PTR [edx+ebp*8],0x93a5bc1f
  405904:	lahf   
  405905:	jbe    0x405967
  405907:	neg    BYTE PTR [ecx+0x13]
  40590a:	dec    esp
  40590b:	mov    ebx,0xaa504e9
  405910:	add    BYTE PTR [esi],bh
  405912:	outs   dx,BYTE PTR ds:[esi]
  405913:	cdq    
  405914:	jne    0x405952
  405916:	pop    ecx
  405917:	lods   al,BYTE PTR ds:[esi]
  405918:	and    BYTE PTR [esp+ecx*2],al
  40591b:	cmp    al,0x65
  40591d:	xchg   BYTE PTR [ecx+0x2d689f42],ah
  405923:	sub    esi,DWORD PTR [edx-0x37]
  405926:	ss push ds
  405928:	push   ds
  405929:	sub    cl,BYTE PTR [edx]
  40592b:	repnz fild DWORD PTR [edi]
  40592e:	pop    eax
  40592f:	xor    ch,dl
  405931:	dec    ebp
  405932:	mov    dl,0xe1
  405934:	push   cs
  405935:	ret    0x53e2
  405938:	push   0xffffffe8
  40593a:	loop   0x405953
  40593c:	test   DWORD PTR [edi],eax
  40593e:	bound  eax,QWORD PTR ds:0x83a9b0fd
  405944:	stc    
  405945:	lods   eax,DWORD PTR ds:[esi]
  405946:	fiadd  DWORD PTR [eax]
  405948:	pop    ebx
  405949:	rcl    BYTE PTR [esi],0x48
  40594c:	hlt    
  40594d:	push   cs
  40594e:	fidivr WORD PTR ds:0x61c49ca9
  405954:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405955:	arpl   WORD PTR [esi-0x19b67f49],si
  40595b:	cld    
  40595c:	mov    ecx,0xa9ad0e1
  405961:	xchg   DWORD PTR [ebp+0x4],edi
  405964:	mov    WORD PTR [ecx],ds
  405966:	pop    esp
  405967:	sub    eax,0x9453269d
  40596c:	push   esi
  40596d:	stc    
  40596e:	sbb    bl,bl
  405970:	daa    
  405971:	jno    0x405923
  405973:	xor    edi,DWORD PTR [eax+0x7d]
  405976:	mov    DWORD PTR [esi-0x3c49200e],0x20856f39
  405980:	pop    ebx
  405981:	mov    ch,0x8b
  405983:	aaa    
  405984:	or     BYTE PTR [edi+0x39],bh
  405987:	les    edi,FWORD PTR [esi+0x0]
  40598a:	je     0x405963
  40598c:	inc    esp
  40598d:	push   cs
  40598e:	cs push cs
  405990:	pusha  
  405991:	stos   BYTE PTR es:[edi],al
  405992:	or     eax,0xb4dc4368
  405997:	sbb    dh,BYTE PTR [edi-0x41]
  40599a:	push   0xffffffd1
  40599c:	(bad)  [esi+edx*1+0x6707fc33]
  4059a3:	aam    0x46
  4059a5:	int    0xf8
  4059a7:	pop    ebp
  4059a8:	sbb    eax,edx
  4059aa:	xchg   edi,eax
  4059ab:	ret    
  4059ac:	mov    esp,0x86724548
  4059b1:	add    al,0x89
  4059b3:	sbb    al,0xa5
  4059b5:	sahf   
  4059b6:	test   DWORD PTR [edi-0x1e8ef99f],0xd1a7b808
  4059c0:	mov    esp,0xb28eca4b
  4059c5:	test   BYTE PTR [ebx-0x5ceafb15],al
  4059cb:	jmp    0x38d5:0xb32d11b1
  4059d2:	and    eax,0xf955f126
  4059d7:	push   esp
  4059d8:	gs add esp,eax
  4059db:	jno    0x40599e
  4059dd:	(bad)  
  4059de:	in     al,dx
  4059df:	mov    ah,0x1d
  4059e1:	xchg   ecx,eax
  4059e2:	cwde   
  4059e3:	cs push ss
  4059e5:	pop    eax
  4059e6:	inc    edx
  4059e7:	cs inc esi
  4059e9:	in     eax,dx
  4059ea:	out    dx,al
  4059eb:	clc    
  4059ec:	push   es
  4059ed:	push   edi
  4059ee:	fldenv [esi]
  4059f0:	jmp    0x1811:0x67720a0
  4059f7:	mov    bh,0x4d
  4059f9:	mov    ecx,0x9e9737c4
  4059fe:	jmp    0xc7e5552d
  405a03:	mov    ds:0x36e8fe68,al
  405a08:	cld    
  405a09:	inc    edi
  405a0a:	jl     0x4059fb
  405a0c:	or     DWORD PTR [esi],esp
  405a0e:	pop    ecx
  405a0f:	push   ebx
  405a10:	xchg   esp,ecx
  405a12:	cmp    ah,BYTE PTR [ebx+ebx*2-0x3ba5607]
  405a19:	(bad)  
  405a1a:	ftst   
  405a1c:	out    0x13,eax
  405a1e:	xchg   BYTE PTR [ebx],cl
  405a20:	push   ecx
  405a21:	pop    eax
  405a22:	adc    ecx,DWORD PTR [ecx+esi*4-0x17]
  405a26:	xchg   ebp,eax
  405a27:	pop    edi
  405a28:	sar    dh,cl
  405a2a:	xchg   edi,eax
  405a2b:	push   ebp
  405a2c:	mov    dh,0x9a
  405a2e:	jnp    0x405aad
  405a30:	xor    eax,0x5ddbff60
  405a35:	push   ss
  405a36:	cmp    bh,BYTE PTR [ebp+0x57]
  405a39:	mov    bl,0xb4
  405a3b:	(bad)  
  405a3c:	leave  
  405a3d:	test   BYTE PTR [esi+0x5afe9247],0xd8
  405a44:	xchg   ebp,esi
  405a46:	add    ebp,DWORD PTR [edx+0x1a]
  405a49:	dec    edi
  405a4a:	(bad)
  405a4e:	test   esp,ebx
  405a50:	vpcmpgtb ymm1,ymm7,YMMWORD PTR [eax]
  405a54:	xchg   BYTE PTR [ebx],al
  405a56:	jnp    0x4059f5
  405a58:	cmp    eax,0xdfb497db
  405a5d:	mov    ds:0xc6d5f968,al
  405a62:	mov    cl,0x8e
  405a64:	minps  xmm2,XMMWORD PTR [edi-0x69]
  405a68:	mov    cl,0x93
  405a6a:	cmp    al,0xd8
  405a6c:	pop    es
  405a6d:	imul   esi,DWORD PTR [esi+0x78],0x6
  405a71:	loopne 0x405acd
  405a73:	aam    0x2
  405a75:	popf   
  405a76:	adc    DWORD PTR [eax],ebp
  405a78:	cmp    DWORD PTR [edi-0x22],esp
  405a7b:	push   ds
  405a7c:	aas    
  405a7d:	pop    esp
  405a7e:	cmp    DWORD PTR [eax-0x4b],0x3c372ced
  405a85:	jo     0x405a0c
  405a87:	scas   eax,DWORD PTR es:[edi]
  405a88:	mov    ecx,0x92b836d4
  405a8d:	loopne 0x405b06
  405a8f:	cmp    eax,0x47075999
  405a94:	(bad)  
  405a95:	out    0x95,al
  405a97:	or     eax,0x5cb15518
  405a9c:	cdq    
  405a9d:	repnz mov bl,0xc4
  405aa0:	sub    BYTE PTR [eax+0x13],bl
  405aa3:	or     al,ch
  405aa5:	fcomp  st(1)
  405aa7:	fiadd  DWORD PTR [eax+0x4a38efab]
  405aad:	pop    ecx
  405aae:	jbe    0x405aec
  405ab0:	mov    dl,0xd9
  405ab2:	popf   
  405ab3:	mov    edi,0xf8f6856d
  405ab8:	nop
  405ab9:	mov    al,ds:0x36eb7ff7
  405abe:	fcomi  st,st(7)
  405ac0:	aam    0xca
  405ac2:	push   edi
  405ac3:	jno    0x405ad0
  405ac5:	mov    eax,ds:0xc42241cf
  405aca:	jge    0x405b28
  405acc:	in     eax,dx
  405acd:	lds    eax,FWORD PTR [edx+ecx*1]
  405ad0:	sahf   
  405ad1:	rdpmc  
  405ad3:	mov    eax,DWORD PTR [eax-0x510f1b40]
  405ad9:	mov    al,ds:0x584fab2b
  405ade:	dec    esp
  405adf:	mov    edi,eax
  405ae1:	lahf   
  405ae2:	imul   edi,DWORD PTR [eax+ecx*1-0x2a],0xad4ea745
  405aea:	sbb    eax,0x452429d8
  405aef:	dec    ecx
  405af0:	inc    ebx
  405af1:	ins    DWORD PTR es:[edi],dx
  405af2:	enter  0x8204,0x49
  405af6:	push   edi
  405af7:	inc    ecx
  405af8:	dec    edx
  405af9:	adc    al,0xb7
  405afb:	pop    eax
  405afc:	mov    ah,0x3a
  405afe:	xchg   edx,eax
  405aff:	pop    eax
  405b00:	sub    DWORD PTR [edx],edi
  405b02:	out    0x7f,eax
  405b04:	imul   ebp,DWORD PTR [ebp-0x2e],0xffffff97
  405b08:	fstp   st(6)
  405b0a:	and    eax,ebp
  405b0c:	in     al,0xc7
  405b0e:	sbb    al,BYTE PTR [esp+ebp*8+0x43f2ca4]
  405b15:	inc    esi
  405b16:	or     al,BYTE PTR [eax+eax*2]
  405b19:	push   ss
  405b1a:	push   esi
  405b1b:	cld    
  405b1c:	inc    edx
  405b1d:	mov    ch,0xf9
  405b1f:	cld    
  405b20:	jl     0x405b5f
  405b22:	pop    ebp
  405b23:	enter  0x6004,0x1e
  405b27:	daa    
  405b28:	popa   
  405b29:	cmp    eax,0xebbe7cc1
  405b2e:	retf   
  405b2f:	and    al,0x8
  405b31:	add    DWORD PTR [ebx-0x5c872748],ecx
  405b37:	add    esp,edi
  405b39:	xor    ah,BYTE PTR [edx-0x31]
  405b3c:	shr    BYTE PTR [edi+0x73],0x1e
  405b40:	xchg   DWORD PTR [esi+ebx*8-0x233c0f3c],esi
  405b47:	add    eax,0xd536f474
  405b4c:	mov    esp,0x884edfb3
  405b51:	test   al,0x21
  405b53:	xchg   ah,cl
  405b55:	jge    0x405afe
  405b57:	aaa    
  405b58:	mov    ecx,0x308b0195
  405b5d:	iret   
  405b5e:	call   0x3305b4c8
  405b63:	xchg   ebx,eax
  405b64:	stos   DWORD PTR es:[edi],eax
  405b65:	push   edx
  405b66:	pop    ebp
  405b67:	mov    ah,0x11
  405b69:	fmul   st(1),st
  405b6b:	ins    BYTE PTR es:[edi],dx
  405b6c:	xchg   cl,dl
  405b6e:	xchg   edx,eax
  405b6f:	mov    al,ds:0x26928857
  405b74:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b75:	sbb    al,0x4
  405b77:	jno    0x405bb0
  405b79:	das    
  405b7a:	pusha  
  405b7b:	jl     0x405bf7
  405b7d:	ss ret 
  405b7f:	dec    esp
  405b80:	je     0x405bd0
  405b82:	cli    
  405b83:	lock sub DWORD PTR [eax+0x31],esp
  405b87:	nop
  405b88:	mov    cl,0xb1
  405b8a:	cmp    eax,0x308f1b3a
  405b8f:	and    al,0xd
  405b91:	pop    esi
  405b92:	push   eax
  405b93:	imul   ebx,DWORD PTR [ecx+0x75eea3a3],0xe1f26fa
  405b9d:	dec    edi
  405b9e:	xor    BYTE PTR [ebx+0x6a],cl
  405ba1:	mov    ch,0x56
  405ba3:	mov    dl,BYTE PTR [esi+0x73]
  405ba6:	pop    es
  405ba7:	sub    dh,BYTE PTR [esp+ebp*2-0x11]
  405bab:	and    DWORD PTR [edi-0xf6af622],esi
  405bb1:	or     eax,0xf6969b54
  405bb6:	enter  0x603e,0xd6
  405bba:	pop    edi
  405bbb:	mov    dh,0x9b
  405bbd:	mov    edx,0xa1708dd1
  405bc2:	add    al,0x2b
  405bc4:	pop    eax
  405bc5:	mov    al,0x95
  405bc7:	mov    bh,0x39
  405bc9:	push   cs
  405bca:	mov    edx,0xc7028dd3
  405bcf:	(bad)  
  405bd0:	push   esp
  405bd1:	inc    esp
  405bd2:	cmp    BYTE PTR [edi-0x59],cl
  405bd5:	jp     0x405b62
  405bd7:	adc    eax,0x93c48ac9
  405bdc:	jae    0x405bd4
  405bde:	mov    ds:0xc53a896d,eax
  405be3:	mov    ?,ebx
  405be5:	adc    BYTE PTR fs:[esi-0x57a815cb],dh
  405bec:	repnz outs dx,BYTE PTR ds:[esi]
  405bee:	and    bh,0x7
  405bf1:	inc    edi
  405bf2:	cs out dx,al
  405bf4:	adc    eax,0xe3508db1
  405bf9:	mov    ch,0xff
  405bfb:	repnz sar BYTE PTR [ebp+edi*4+0x73802aca],1
  405c03:	sbb    ebp,DWORD PTR [esi+0x57596123]
  405c09:	push   edi
  405c0a:	mov    cl,0x83
  405c0c:	loope  0x405c3c
  405c0e:	jae    0x405c46
  405c10:	fwait
  405c11:	lock rcl BYTE PTR [eax],cl
  405c14:	jns    0x405bb7
  405c16:	(bad)  
  405c18:	xlat   BYTE PTR ds:[ebx]
  405c19:	jnp    0x405be2
  405c1b:	sbb    ebp,ebp
  405c1d:	fidivr DWORD PTR [ecx-0x4346478c]
  405c23:	pop    edi
  405c24:	xor    al,dl
  405c26:	adc    BYTE PTR [edi-0xc],cl
  405c29:	jmp    0x405bce
  405c2b:	sub    al,0x69
  405c2d:	(bad)  
  405c2f:	cwde   
  405c30:	push   ds
  405c31:	jg     0x405c51
  405c33:	add    ah,BYTE PTR [esi+edx*4]
  405c36:	and    DWORD PTR [esi],ebp
  405c38:	mov    dh,0x80
  405c3a:	gs cdq 
  405c3c:	jbe    0x405be6
  405c3e:	cld    
  405c3f:	retf   0x44a4
  405c42:	xchg   ecx,eax
  405c43:	jo     0x405c3c
  405c45:	dec    ebx
  405c46:	xlat   BYTE PTR ds:[ebx]
  405c47:	in     eax,0x9c
  405c49:	jl     0x405bed
  405c4b:	stos   DWORD PTR es:[edi],eax
  405c4c:	je     0x405c3b
  405c4e:	sbb    DWORD PTR [edi-0x43],0xc7f2619a
  405c55:	in     eax,dx
  405c56:	scas   al,BYTE PTR es:[edi]
  405c57:	fnsave [bp+si]
  405c5a:	sbb    ebp,edi
  405c5c:	es enter 0xed17,0x4c
  405c61:	mov    ecx,0x20d8ec16
  405c66:	inc    esi
  405c67:	jb     0x405c05
  405c69:	cmp    DWORD PTR [eax],ebx
  405c6b:	jae    0x405cba
  405c6d:	cmp    edi,DWORD PTR [esi+0x7]
  405c70:	jno    0x405cd2
  405c72:	pop    ebx
  405c73:	aas    
  405c74:	fbld   TBYTE PTR [ebx+ecx*8]
  405c77:	mov    ds:0xba9ec306,al
  405c7c:	fist   DWORD PTR [eax+edi*4-0x65f8a585]
  405c83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c84:	mov    cl,0xe4
  405c87:	dec    edx
  405c88:	leave  
  405c89:	shl    dl,1
  405c8b:	dec    eax
  405c8c:	bound  ebx,QWORD PTR [ebx+0x2df32a46]
  405c92:	mov    DWORD PTR [ebp-0x1e37f1cc],ecx
  405c98:	je     0x405cce
  405c9a:	fwait
  405c9b:	xor    eax,0xe1fdf4f9
  405ca0:	xchg   esi,eax
  405ca1:	pop    ecx
  405ca2:	rcr    BYTE PTR [eax+0x173f1d7e],cl
  405ca8:	test   DWORD PTR ds:0x86a865ec,esp
  405cae:	jno    0x405d12
  405cb0:	jp     0x405cb6
  405cb2:	test   al,0x99
  405cb4:	(bad)  
  405cb5:	xchg   ebx,eax
  405cb6:	popa   
  405cb7:	data16 jb 0x405c77
  405cba:	jp     0x405d34
  405cbc:	push   0xffffff98
  405cbe:	fmul   QWORD PTR [ecx-0x5a]
  405cc1:	sub    eax,0x5dfedb17
  405cc6:	test   eax,0x7723f07c
  405ccb:	fisubr WORD PTR [edx]
  405ccd:	pop    esi
  405cce:	addr16 sbb eax,0x4c7b2051
  405cd4:	cmp    eax,0x8e735a94
  405cd9:	and    ebx,ecx
  405cdb:	stos   DWORD PTR es:[edi],eax
  405cdc:	pushf  
  405cdd:	daa    
  405cde:	xchg   ebp,eax
  405cdf:	fisubr DWORD PTR [ebp+0x46faeacc]
  405ce5:	add    bl,ch
  405ce7:	outs   dx,BYTE PTR ds:[esi]
  405ce8:	push   0xd99f50f6
  405ced:	in     al,0xd4
  405cef:	cmp    al,0x54
  405cf1:	pop    esi
  405cf2:	mov    dh,0xd8
  405cf4:	daa    
  405cf5:	or     cl,BYTE PTR [ebp+0x1e0bf583]
  405cfb:	push   edi
  405cfc:	cmp    cl,BYTE PTR [edi+0x12]
  405cff:	push   edi
  405d00:	add    DWORD PTR [ebx],esp
  405d02:	stc    
  405d03:	sub    BYTE PTR ds:0x166becea,bh
  405d09:	call   0xdf37073d
  405d0e:	mov    eax,ds:0xd44a0059
  405d13:	add    eax,0xbdf8a87a
  405d18:	and    ecx,ebx
  405d1a:	fdivp  st(4),st
  405d1c:	dec    esp
  405d1d:	cli    
  405d1e:	cmp    edx,edi
  405d20:	aas    
  405d21:	and    DWORD PTR [ebx],esi
  405d23:	ja     0x405ce5
  405d25:	iret   
  405d26:	sbb    eax,0x1b0dac99
  405d2b:	aad    0x6f
  405d2d:	mov    dx,si
  405d30:	xchg   esi,eax
  405d31:	clc    
  405d32:	stos   BYTE PTR es:[edi],al
  405d33:	dec    ebx
  405d34:	pop    ebp
  405d35:	jnp    0x405d07
  405d37:	jmp    DWORD PTR [edx]
  405d39:	and    ah,BYTE PTR ds:0xd91373e5
  405d3f:	es push edx
  405d41:	int    0x7e
  405d43:	aad    0x90
  405d45:	lock shl BYTE PTR ds:[ebx+0x2ebad58a],0x7f
  405d4e:	lods   eax,DWORD PTR ds:[esi]
  405d4f:	xchg   esp,eax
  405d50:	inc    ebp
  405d51:	push   cs
  405d52:	in     al,dx
  405d53:	aas    
  405d54:	sar    DWORD PTR [ebx],1
  405d56:	add    DWORD PTR ds:0x5500de8d,esi
  405d5c:	mov    ah,0xf2
  405d5e:	xor    eax,0x71ad1d98
  405d63:	sti    
  405d64:	dec    ebp
  405d65:	mov    ds:0x2df7f0e9,eax
  405d6a:	cld    
  405d6b:	lock rcr DWORD PTR [ecx-0x11f19412],1
  405d72:	pop    eax
  405d73:	ds cmp al,0xf9
  405d76:	jmp    0x405d3a
  405d78:	pop    edx
  405d79:	cmp    BYTE PTR [ebx-0x5e4fd119],bh
  405d7f:	xor    al,0x1f
  405d81:	out    dx,al
  405d82:	xchg   dl,ch
  405d84:	mov    ebx,0x5a1f32ea
  405d89:	or     eax,0xd521d145
  405d8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d8f:	dec    edx
  405d90:	jmp    0xefa5:0x46268193
  405d97:	push   esp
  405d98:	cmp    ah,BYTE PTR [edi+0x70]
  405d9b:	ins    BYTE PTR es:[edi],dx
  405d9c:	in     eax,0xf1
  405d9e:	imul   esp,edx,0xffffffa0
  405da1:	xchg   edi,eax
  405da2:	leave  
  405da3:	ret    0x65e1
  405da6:	rcr    BYTE PTR [esp+eax*1],0xa8
  405daa:	lods   eax,DWORD PTR ds:[esi]
  405dab:	jge    0x405dd1
  405dad:	xchg   ecx,eax
  405dae:	jnp    0x405e13
  405db0:	pop    es
  405db1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405db2:	xor    ebp,DWORD PTR [ebp-0x6dbb3e02]
  405db8:	xchg   ebx,eax
  405db9:	sub    eax,ecx
  405dbb:	or     DWORD PTR [ebx-0x6c],0x7bb08be0
  405dc2:	sub    eax,0x76479a41
  405dc7:	imul   edx,DWORD PTR [edx-0x6e],0x3a8a117
  405dce:	shl    DWORD PTR [eax-0x37],0x56
  405dd2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405dd3:	scas   al,BYTE PTR es:[edi]
  405dd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405dd5:	sub    dh,BYTE PTR [edi+ecx*1]
  405dd8:	std    
  405dd9:	aas    
  405dda:	int3   
  405ddb:	lods   al,BYTE PTR ds:[esi]
  405ddc:	mov    edx,0xf819dd3f
  405de1:	fisub  WORD PTR [edx-0x5193b6ee]
  405de7:	arpl   WORD PTR [edi+0x6a],di
  405dea:	and    eax,0xbf3b880c
  405def:	and    al,0x85
  405df1:	add    eax,DWORD PTR [edi+0x60268230]
  405df7:	cs pop es
  405df9:	ret    0x4143
  405dfc:	dec    bx
  405dfe:	shl    BYTE PTR ds:0xee3913f6,cl
  405e04:	xchg   ebx,eax
  405e05:	jno    0x405dc8
  405e07:	adc    bh,BYTE PTR [edx]
  405e09:	pop    ebx
  405e0a:	pop    edi
  405e0b:	push   es
  405e0c:	cdq    
  405e0d:	add    al,0x32
  405e0f:	push   ds
  405e10:	push   esp
  405e11:	jns    0x405dbe
  405e13:	es and al,0x36
  405e16:	adc    BYTE PTR [esi-0x66a040],ch
  405e1c:	adc    bh,ah
  405e1e:	jmp    0x83411ec3
  405e23:	data16 fcom st(3)
  405e26:	rcl    BYTE PTR [edx-0x38],0x22
  405e2a:	dec    ebx
  405e2b:	arpl   WORD PTR [ebp+0x12b71501],si
  405e31:	ins    DWORD PTR es:[edi],dx
  405e32:	je     0x405dea
  405e34:	leave  
  405e35:	xlat   BYTE PTR ds:[ebx]
  405e36:	frstor [edi]
  405e38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e39:	inc    eax
  405e3a:	adc    al,0xb6
  405e3c:	test   edx,ebp
  405e3e:	fiadd  DWORD PTR [eax]
  405e40:	ret    
  405e41:	add    BYTE PTR [ebp-0x45],0x26
  405e45:	ds push edi
  405e47:	aaa    
  405e48:	fwait
  405e49:	ret    
  405e4a:	and    DWORD PTR [edx-0x58],ebp
  405e4d:	xchg   BYTE PTR [edx],bl
  405e4f:	xchg   ecx,eax
  405e50:	cmp    esi,DWORD PTR [ebp-0x10]
  405e53:	out    0x6c,eax
  405e55:	mov    dl,0x74
  405e57:	fisubr WORD PTR [edi+0x23cf22ef]
  405e5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e5e:	cmp    eax,0xeed63300
  405e63:	cmp    eax,esp
  405e65:	lock in eax,dx
  405e67:	xor    BYTE PTR [esi+0x66],dh
  405e6a:	ins    DWORD PTR es:[edi],dx
  405e6b:	jno    0x405e8e
  405e6d:	or     cl,BYTE PTR [ebp-0x1a]
  405e70:	aam    0xd3
  405e72:	sbb    DWORD PTR ds:0xdf26ed39,esi
  405e78:	cmp    bl,BYTE PTR [ecx+0xc0ea35]
  405e7e:	rol    BYTE PTR [eax+0x2f6c6cdd],0x7c
  405e85:	add    cl,dh
  405e87:	rcr    DWORD PTR ds:0x65f18000,0x3c
  405e8e:	mov    ds:0xd7a2f5b6,eax
  405e93:	mov    WORD PTR [edi-0x32],ss
  405e96:	fiadd  DWORD PTR [edi+0x3ba84bd1]
  405e9c:	gs dec edx
  405e9e:	mov    bh,0x29
  405ea0:	mov    WORD PTR ds:0xe2427e2b,ss
  405ea6:	or     ah,BYTE PTR [edx-0x17736c67]
  405eac:	clc    
  405ead:	cmp    dh,ah
  405eaf:	mov    ah,0xf5
  405eb1:	ret    0xa2f6
  405eb4:	inc    edi
  405eb5:	inc    edx
  405eb6:	push   ebx
  405eb7:	mov    ah,0xa2
  405eb9:	out    dx,al
  405eba:	mov    ebx,gs
  405ebc:	lahf   
  405ebd:	out    0xc0,eax
  405ebf:	mov    DWORD PTR ss:[ebp-0x64],ecx
  405ec3:	test   BYTE PTR [eax],0x45
  405ec6:	mov    edx,0xe0954701
  405ecb:	mov    WORD PTR [esi+0x6e],?
  405ece:	sub    al,0xac
  405ed0:	xchg   esi,eax
  405ed1:	jo     0x405eb4
  405ed3:	add    ecx,0x6a
  405ed6:	out    dx,al
  405ed7:	mov    al,0x1d
  405ed9:	pop    edx
  405eda:	push   cs
  405edb:	aad    0xad
  405edd:	pop    ebp
  405ede:	(bad)  
  405edf:	cmp    al,0x1d
  405ee1:	jno    0x405f3a
  405ee3:	add    BYTE PTR [ecx-0x2d],ch
  405ee6:	jno    0x405eac
  405ee8:	fisttp QWORD PTR [ecx+esi*2]
  405eeb:	xchg   ebx,eax
  405eec:	inc    edi
  405eed:	jnp    0x405ec9
  405eef:	cli    
  405ef0:	jmp    0xb125:0xd066cfc7
  405ef7:	jbe    0x405f78
  405ef9:	lods   eax,DWORD PTR ds:[esi]
  405efa:	sub    edi,0xf1ce291
  405f00:	outs   dx,BYTE PTR ds:[esi]
  405f01:	call   0x742f:0x83aebc7a
  405f08:	lds    edi,FWORD PTR [edx+0x8ef2d02]
  405f0e:	and    ecx,DWORD PTR [ebx]
  405f10:	repz cmp dl,al
  405f13:	inc    esp
  405f14:	xor    esp,edi
  405f16:	push   ebx
  405f17:	sti    
  405f18:	sub    ah,BYTE PTR [ecx+0x44]
  405f1b:	or     BYTE PTR [ecx+ecx*4-0x79edcbd],cl
  405f22:	cmp    eax,DWORD PTR [esi]
  405f24:	sbb    edi,DWORD PTR [edx]
  405f26:	loope  0x405eb8
  405f28:	test   BYTE PTR [eax],al
  405f2a:	sbb    al,0xa
  405f2c:	sbb    cl,BYTE PTR [ebp+0x384ff06d]
  405f32:	pop    es
  405f33:	push   ebp
  405f34:	jae    0x405f50
  405f36:	lgs    esp,FWORD PTR [esi-0x293401c5]
  405f3d:	cmp    ah,BYTE PTR [ecx-0x6fc93c57]
  405f43:	retf   
  405f44:	push   ebx
  405f45:	pop    ds
  405f46:	jnp    0x405f69
  405f48:	call   0xf9eb4c03
  405f4d:	daa    
  405f4e:	jnp    0x405f0d
  405f50:	fistp  WORD PTR ds:0xf70b7539
  405f56:	jl     0x405f8f
  405f58:	cmovno ebx,DWORD PTR [ebp-0x4a9ca4a1]
  405f5f:	std    
  405f60:	adc    al,0x2a
  405f62:	pusha  
  405f63:	je     0x405f65
  405f65:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f66:	xchg   ebp,eax
  405f67:	sub    ch,BYTE PTR [ecx]
  405f69:	fcomip st,st(5)
  405f6b:	fild   QWORD PTR [esi-0x5a]
  405f6e:	mov    ch,0xc7
  405f70:	leave  
  405f71:	ss test al,0x32
  405f74:	nop
  405f75:	fsubr  st(7),st
  405f77:	pushf  
  405f78:	and    BYTE PTR [edx],al
  405f7a:	ret    0x5607
  405f7d:	adc    BYTE PTR [ecx+edx*1],dl
  405f80:	push   esi
  405f81:	out    0x32,eax
  405f83:	lock mov edx,0x6c77066
  405f89:	mov    edi,0x495a828c
  405f8e:	das    
  405f8f:	std    
  405f90:	call   0x27f1:0xca437a98
  405f97:	jb     0x406007
  405f99:	retf   
  405f9a:	lahf   
  405f9b:	pop    ebx
  405f9c:	test   DWORD PTR [eax+0x1b12d7b3],esp
  405fa2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405fa3:	cmp    ebp,esp
  405fa5:	imul   eax,DWORD PTR [ebx+0x64],0x949b3dc8
  405fac:	adc    ecx,DWORD PTR [ecx+0xedd2c12]
  405fb2:	aad    0xd8
  405fb4:	cmp    BYTE PTR [eax+ebx*4],al
  405fb7:	pop    esi
  405fb8:	add    DWORD PTR [esi+0x32],ecx
  405fbb:	jl     0x40601b
  405fbd:	les    ecx,FWORD PTR [ebx]
  405fbf:	jmp    0x453a:0xe9ce7972
  405fc6:	sbb    BYTE PTR [edx+eax*1-0x3e],0x8
  405fcb:	mov    dl,bl
  405fcd:	ret    0x488b
  405fd0:	mov    edx,0x8b8b2d55
  405fd5:	retf   
  405fd6:	mov    fs,WORD PTR [eax+0x3a]
  405fd9:	mov    ebx,0xbbcbaa7
  405fde:	mov    eax,ds:0xf2a173d1
  405fe3:	(bad)  [edi+edi*1]
  405fe6:	mov    eax,eax
  405fe8:	dec    edx
  405fe9:	xchg   edi,eax
  405fea:	jle    0x40604c
  405fec:	outs   dx,DWORD PTR ds:[esi]
  405fed:	fs jbe 0x405f71
  405ff0:	outs   dx,DWORD PTR ds:[esi]
  405ff1:	jmp    0x7d85:0x94650813
  405ff8:	add    al,0x4d
  405ffa:	test   al,0x11
  405ffc:	xchg   ecx,eax
  405ffd:	xor    dh,cl
  405fff:	and    eax,0xa8233aa2
  406004:	into   
  406005:	mov    bl,0xae
  406007:	and    DWORD PTR [ebx+0x42],ecx
  40600a:	ret    0xa887
  40600d:	call   0x6163:0x5b124f9f
  406014:	dec    esi
  406015:	add    al,0x33
  406017:	scas   eax,DWORD PTR es:[edi]
  406018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406019:	in     al,dx
  40601a:	cmp    ah,dl
  40601c:	xchg   ebp,eax
  40601d:	or     al,0x9b
  40601f:	cmp    al,0x8c
  406021:	push   ebp
  406022:	pop    edi
  406023:	push   es
  406024:	aaa    
  406025:	pop    ds
  406026:	sar    BYTE PTR [esi],1
  406028:	stos   BYTE PTR es:[edi],al
  406029:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40602a:	inc    ebx
  40602b:	je     0x40608c
  40602d:	int    0x9f
  40602f:	push   es
  406030:	fidivr DWORD PTR [edx+eax*1-0x47]
  406034:	clc    
  406035:	fistp  WORD PTR [ecx+0x18]
  406038:	fs stos DWORD PTR es:[edi],eax
  40603a:	bound  esp,QWORD PTR [ebx]
  40603c:	test   eax,0x89b3789b
  406041:	adc    dl,BYTE PTR [ebp-0x80]
  406044:	mov    dh,0xd1
  406046:	in     eax,dx
  406047:	cwde   
  406048:	pop    esi
  406049:	in     al,dx
  40604a:	test   al,0x66
  40604c:	loopne 0x4060bf
  40604e:	fnstsw WORD PTR [ebp-0x484ca105]
  406054:	adc    ebx,esp
  406056:	call   0x72e6:0xb9a6368d
  40605d:	in     eax,0xf6
  40605f:	leave  
  406060:	inc    ecx
  406061:	int    0x62
  406063:	fild   DWORD PTR [edx]
  406065:	jp     0x406033
  406067:	test   BYTE PTR [ebx],bh
  406069:	inc    esi
  40606a:	and    eax,0x218c9683
  40606f:	jp     0x40603b
  406071:	int    0x72
  406073:	out    0xd9,eax
  406075:	inc    esi
  406076:	or     DWORD PTR [edi+0x7],esp
  406079:	lds    ecx,FWORD PTR [esi+0x7a4144ba]
  40607f:	and    al,0xf1
  406081:	cld    
  406082:	cwde   
  406083:	xchg   edx,eax
  406084:	test   cl,dh
  406086:	xchg   ecx,eax
  406087:	sub    edx,esp
  406089:	pushf  
  40608a:	out    0x2f,al
  40608c:	es xchg edi,eax
  40608e:	or     eax,0xcd25aadc
  406093:	daa    
  406094:	outs   dx,BYTE PTR ds:[esi]
  406095:	push   ebx
  406096:	lahf   
  406097:	mov    ds:0x80ba4f3b,eax
  40609c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40609d:	adc    al,bl
  40609f:	rol    BYTE PTR [esi+0x3d22da75],0x5c
  4060a6:	pop    ecx
  4060a7:	jle    0x406104
  4060a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4060aa:	mov    esi,0x73a28237
  4060af:	pop    ebx
  4060b0:	mov    ebx,DWORD PTR [edx-0x70]
  4060b3:	inc    eax
  4060b4:	adc    dh,BYTE PTR [ebp-0x715af56e]
  4060ba:	test   al,0x5f
  4060bc:	sbb    al,0xf
  4060be:	add    DWORD PTR [ebp+0x7773ef5f],edx
  4060c4:	out    0xab,al
  4060c6:	jns    0x40609d
  4060c8:	and    DWORD PTR [esi+edi*8-0xd],esp
  4060cc:	fisubr WORD PTR [esi-0x2]
  4060cf:	test   dl,0x36
  4060d2:	ja     0x40613f
  4060d4:	iret   
  4060d5:	dec    edi
  4060d6:	sbb    DWORD PTR [ecx+0x352092bd],esp
  4060dc:	xchg   ebp,eax
  4060dd:	sub    al,0xe1
  4060df:	test   BYTE PTR [esi+0x3d8c82fe],cl
  4060e5:	xchg   DWORD PTR [esi],esp
  4060e7:	sti    
  4060e8:	jmp    0x3361:0x40d1d3a9
  4060ef:	lahf   
  4060f0:	imul   eax,DWORD PTR [eax+0x61],0xfffffffe
  4060f4:	sbb    al,BYTE PTR [esi-0x37dcbc2e]
  4060fa:	pop    ds
  4060fb:	jmp    0x598d:0x400e94fa
  406102:	sbb    eax,0xa0bcde8e
  406107:	in     al,0x65
  406109:	lea    eax,[ebx+0x79]
  40610c:	in     eax,0x6b
  40610e:	(bad)  
  40610f:	cwde   
  406110:	outs   dx,BYTE PTR ds:[esi]
  406111:	fcmovb st,st(4)
  406113:	add    ebp,edi
  406115:	xchg   ch,ah
  406117:	xlat   BYTE PTR ds:[ebx]
  406118:	aas    
  406119:	cmc    
  40611a:	push   edx
  40611b:	clc    
  40611c:	xor    edx,edi
  40611e:	pop    ecx
  40611f:	inc    edi
  406120:	mov    DWORD PTR [edx+0x17],0x1487bca2
  406127:	dec    ecx
  406128:	jns    0x406115
  40612a:	aam    0xc7
  40612c:	ds sbb eax,0xe514bec8
  406132:	js     0x406171
  406134:	rol    BYTE PTR [ecx+0x2a7bf961],1
  40613a:	pusha  
  40613b:	je     0x406100
  40613d:	mov    ds:0xc57bdc58,al
  406142:	inc    eax
  406143:	fisub  WORD PTR [ebx+0x6a]
  406146:	push   0xffffff9a
  406148:	inc    ebp
  406149:	cmp    DWORD PTR [ecx-0x33bee0b8],eax
  40614f:	fwait
  406150:	out    0x65,eax
  406152:	inc    eax
  406153:	sti    
  406154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406155:	cmp    al,0x8c
  406157:	push   es
  406158:	aad    0x5f
  40615a:	and    cl,bh
  40615c:	in     eax,dx
  40615d:	pusha  
  40615e:	xor    eax,0x74128412
  406163:	mov    esp,0x33229c7c
  406168:	and    bl,dh
  40616a:	pop    ebp
  40616b:	test   eax,0x9369e7ff
  406170:	mov    bh,dl
  406172:	sahf   
  406173:	popa   
  406174:	(bad)  
  406175:	and    BYTE PTR [ecx+0x5c],al
  406178:	pop    edx
  406179:	not    BYTE PTR [si+0x6dea]
  40617e:	repz loope 0x4061d3
  406181:	lea    eax,[ecx]
  406183:	or     ebp,DWORD PTR [edi+0x41]
  406186:	adc    edx,DWORD PTR [edi+0x7e]
  406189:	test   BYTE PTR [ebx+0x39c75557],dh
  40618f:	div    DWORD PTR [edx-0x38]
  406192:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406193:	imul   ebp,esi,0xfffffff9
  406196:	push   0x81f4fda
  40619b:	jbe    0x4061f2
  40619d:	lahf   
  40619e:	jns    0x40618b
  4061a0:	mov    bl,0x5c
  4061a2:	mov    esi,0xd966af26
  4061a7:	lods   al,BYTE PTR ds:[esi]
  4061a8:	lods   eax,DWORD PTR ds:[esi]
  4061a9:	xor    BYTE PTR [edi],bl
  4061ab:	mov    dl,0xfc
  4061ad:	sbb    DWORD PTR [eax+ebp*2],ebp
  4061b0:	cmp    edi,DWORD PTR [edi+0x5990e21f]
  4061b6:	dec    ecx
  4061b7:	adc    eax,edi
  4061b9:	hlt    
  4061ba:	pop    edx
  4061bb:	push   es
  4061bc:	cmp    esi,DWORD PTR fs:0x7a730ba4
  4061c3:	in     al,0xed
  4061c5:	mov    dh,0x89
  4061c7:	mov    ah,0xed
  4061c9:	add    cl,BYTE PTR gs:[ebx-0x6b4fdcf3]
  4061d0:	stos   BYTE PTR es:[edi],al
  4061d1:	scas   eax,DWORD PTR es:[edi]
  4061d2:	outs   dx,DWORD PTR ds:[esi]
  4061d3:	fcom   QWORD PTR [edx]
  4061d5:	imul   BYTE PTR [esi-0x3b17da80]
  4061db:	jl     0x406224
  4061dd:	and    al,0xd4
  4061df:	add    DWORD PTR [esi-0x7e],eax
  4061e2:	scas   eax,DWORD PTR es:[edi]
  4061e3:	push   ds
  4061e4:	xchg   ecx,eax
  4061e5:	into   
  4061e6:	lock jne 0x406178
  4061e9:	adc    DWORD PTR [ecx-0xc8cef16],edx
  4061ef:	lods   eax,DWORD PTR ds:[esi]
  4061f0:	cs (bad) 
  4061f2:	sbb    DWORD PTR [ebx+eax*1+0x6a],esi
  4061f6:	jl     0x4061c8
  4061f8:	inc    ebp
  4061f9:	out    0xe0,eax
  4061fb:	push   ebp
  4061fc:	mov    edi,0x416fec4
  406201:	enter  0xf524,0x91
  406205:	sbb    al,0x96
  406207:	in     al,dx
  406208:	ret    0x128b
  40620b:	icebp  
  40620c:	shl    BYTE PTR ds:0x63bbf20b,1
  406212:	lea    ebx,[ecx-0x24]
  406215:	out    0xfd,eax
  406217:	jb     0x4061b1
  406219:	retf   0x9c5e
  40621c:	iret   
  40621d:	sbb    BYTE PTR [ecx*2-0x7b3be88d],0xea
  406225:	jne    0x406284
  406227:	ja     0x40620a
  406229:	pop    eax
  40622a:	(bad)  
  40622b:	sar    bl,cl
  40622d:	or     DWORD PTR [ecx],edx
  40622f:	mov    edx,0x27fc91b0
  406234:	cmp    dl,BYTE PTR [ebp+0x5f]
  406237:	sub    ch,BYTE PTR [esi+0x5d34764d]
  40623d:	mov    bh,0xdc
  40623f:	cmp    ecx,ecx
  406241:	in     eax,0x2e
  406243:	dec    ebx
  406244:	clc    
  406245:	fsubrp st(0),st
  406247:	mov    ch,0x18
  406249:	je     0x40620e
  40624b:	ins    DWORD PTR es:[edi],dx
  40624c:	or     al,BYTE PTR [ecx+0x38c3cda6]
  406252:	fs mov ch,0xee
  406255:	mov    al,0x34
  406257:	mov    ebp,0xcb335768
  40625c:	dec    esi
  40625d:	add    DWORD PTR ds:0x745e3562,esp
  406263:	test   al,0x15
  406265:	aam    0x15
  406267:	imul   DWORD PTR [edx+0x4a]
  40626a:	cdq    
  40626b:	cmp    esi,DWORD PTR [ebx-0x7f]
  40626e:	cmp    BYTE PTR [ecx+ebp*2],cl
  406271:	dec    esi
  406272:	pop    edx
  406273:	daa    
  406274:	jmp    0xcbe3a7f
  406279:	pop    ebx
  40627a:	aaa    
  40627b:	fbld   TBYTE PTR [ecx-0x67]
  40627e:	xchg   esi,eax
  40627f:	stc    
  406280:	push   0xffffffd7
  406282:	rcr    DWORD PTR [ebx+0x43],1
  406285:	imul   edi,DWORD PTR [edx-0x55],0x33076657
  40628c:	xchg   BYTE PTR [ecx],bl
  40628e:	adc    DWORD PTR [edx],edi
  406290:	aas    
  406291:	popf   
  406292:	shl    DWORD PTR [ecx+0x1c422ef1],1
  406298:	sub    eax,0xf726667a
  40629d:	jmp    0x406264
  40629f:	pop    ebx
  4062a0:	mov    edx,0x2c1fbadf
  4062a5:	in     al,0xfc
  4062a7:	sbb    BYTE PTR [edx+0xb881869],al
  4062ad:	jae    0x40631e
  4062af:	mov    eax,ds:0x51188a9f
  4062b4:	pop    eax
  4062b5:	shl    DWORD PTR [edi],cl
  4062b7:	dec    esp
  4062b8:	fnstcw WORD PTR [edi+0x75]
  4062bb:	(bad)  
  4062bc:	aaa    
  4062bd:	xchg   ebx,eax
  4062be:	mov    edi,0x302bc920
  4062c3:	std    
  4062c4:	xor    cl,BYTE PTR [ecx]
  4062c6:	mov    dh,ah
  4062c8:	sbb    dh,ch
  4062ca:	fcom   DWORD PTR [edi*1+0x15a65104]
  4062d1:	dec    esi
  4062d2:	js     0x406278
  4062d4:	jecxz  0x406351
  4062d6:	repnz adc eax,0xecaae5e6
  4062dc:	push   edi
  4062dd:	push   ds
  4062de:	push   esi
  4062df:	xor    DWORD PTR [ecx-0x5045e1f3],ecx
  4062e5:	mov    esi,0x6065764f
  4062ea:	dec    edx
  4062eb:	pusha  
  4062ec:	push   ebx
  4062ed:	and    ah,BYTE PTR [edx]
  4062ef:	sbb    al,0x51
  4062f1:	aad    0x62
  4062f3:	div    esp
  4062f5:	addr16 jb 0x4062a6
  4062f8:	cmp    ch,BYTE PTR [eax]
  4062fa:	retf   0x7cfb
  4062fd:	cs out dx,eax
  4062ff:	clc    
  406300:	mov    eax,ds:0xf3d7e1e8
  406305:	repnz scas eax,DWORD PTR es:[edi]
  406307:	in     eax,dx
  406308:	or     al,0x44
  40630a:	dec    esi
  40630b:	jbe    0x406320
  40630d:	sar    BYTE PTR [esp+ebp*8],0x50
  406311:	into   
  406312:	scas   al,BYTE PTR es:[edi]
  406313:	loop   0x40633f
  406315:	fidiv  WORD PTR ds:0xe5c469a9
  40631b:	or     DWORD PTR [ecx-0x1a],0x11afe8ff
  406322:	call   DWORD PTR [esi]
  406324:	cmp    esi,0x14fdca47
  40632a:	cmp    eax,0xd799f860
  40632f:	enter  0x2ab9,0xa2
  406333:	add    al,0xad
  406335:	push   edi
  406336:	sbb    cl,al
  406338:	lock cmp eax,0x967f957e
  40633e:	adc    DWORD PTR [ebp+ebx*8-0x72],eax
  406342:	sub    edi,DWORD PTR [esi-0x6c81fc3d]
  406348:	inc    ebx
  406349:	mov    eax,0xe7bcf5e5
  40634e:	dec    edx
  40634f:	shr    BYTE PTR [esi-0x4f68bfce],0x1
  406356:	sbb    ah,dl
  406358:	aad    0x88
  40635a:	jne    0x4062e9
  40635c:	popf   
  40635d:	and    BYTE PTR [ebx+ebp*2],dl
  406360:	ja     0x40636a
  406362:	sub    al,0x44
  406364:	jbe    0x406391
  406366:	test   BYTE PTR [edx-0x7d],cl
  406369:	xchg   edx,eax
  40636a:	inc    DWORD PTR [ebx]
  40636c:	js     0x40635d
  40636e:	push   es
  40636f:	nop
  406370:	cmp    al,0x54
  406372:	inc    eax
  406373:	inc    edi
  406374:	add    esi,ebx
  406376:	(bad)  
  406378:	or     al,0x77
  40637a:	pop    esi
  40637b:	outs   dx,BYTE PTR ds:[esi]
  40637c:	jle    0x4063e4
  40637e:	cmp    al,0x96
  406380:	es pop ss
  406382:	dec    esi
  406383:	iret   
  406384:	jae    0x406387
  406386:	cdq    
  406387:	sbb    edx,esi
  406389:	mov    al,0x30
  40638b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40638c:	imul   ebx,DWORD PTR [ebp-0x24dc2343],0x57
  406393:	cmp    dh,BYTE PTR [eax+0x3a952a71]
  406399:	inc    ebx
  40639a:	and    bh,BYTE PTR [esi]
  40639c:	adc    al,0x8f
  40639e:	sub    eax,0x6070a599
  4063a3:	mov    esi,DWORD PTR [edx+0x1e]
  4063a6:	and    ebx,ebp
  4063a8:	out    0xe3,al
  4063aa:	enter  0xe5f6,0x86
  4063ae:	sti    
  4063af:	clc    
  4063b0:	test   al,0x1a
  4063b2:	xor    al,0xd1
  4063b4:	or     esp,esi
  4063b6:	mov    esi,eax
  4063b8:	mov    ecx,eax
  4063ba:	jne    0x4063a8
  4063bc:	mov    ebp,cs
  4063be:	and    eax,DWORD PTR [edx]
  4063c0:	pop    esi
  4063c1:	(bad)  
  4063c2:	sti    
  4063c3:	push   eax
  4063c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4063c5:	cwde   
  4063c6:	sub    edi,DWORD PTR [edx]
  4063c8:	icebp  
  4063c9:	test   al,0x8f
  4063cb:	aas    
  4063cc:	push   esi
  4063cd:	jmp    0x6be0d719
  4063d2:	jnp    0x406427
  4063d4:	test   al,0xcf
  4063d6:	and    al,0x5a
  4063d8:	or     eax,0x8b68a9f3
  4063dd:	dec    esp
  4063de:	xchg   edx,eax
  4063df:	scas   eax,DWORD PTR es:[edi]
  4063e0:	aaa    
  4063e1:	addr16 push esi
  4063e3:	sti    
  4063e4:	jnp    0x406431
  4063e6:	jb     0x4063a3
  4063e8:	add    eax,0x96881e77
  4063ed:	jns    0x40645a
  4063ef:	das    
  4063f0:	cmp    al,0x9f
  4063f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4063f3:	rcl    DWORD PTR [esi-0x65a77fb6],0x5b
  4063fa:	pop    ecx
  4063fb:	pop    edi
  4063fc:	add    BYTE PTR [ecx],0x5b
  4063ff:	call   0x7d1d:0x2e8b6d9f
  406406:	xchg   edi,eax
  406407:	mov    ebp,0x90ed6cb8
  40640c:	daa    
  40640d:	dec    ebx
  40640e:	ins    DWORD PTR es:[edi],dx
  40640f:	out    0xa3,eax
  406411:	lea    edi,[ebp+0x463850e7]
  406417:	out    0x1,al
  406419:	dec    esi
  40641a:	push   ebx
  40641b:	push   ebx
  40641c:	and    BYTE PTR [edx+0x3d],0xc1
  406420:	rol    BYTE PTR [eax],cl
  406422:	mov    WORD PTR [eax+0xdf09667],?
  406428:	jmp    0x7d8e119c
  40642d:	mov    esp,0xe65693b3
  406432:	fs (bad) 
  406434:	(bad)  
  406436:	dec    ebp
  406437:	xor    DWORD PTR [eax],esp
  406439:	push   0x6230344d
  40643e:	aas    
  40643f:	mov    ch,0x13
  406441:	inc    esi
  406442:	out    0x62,eax
  406444:	std    
  406445:	mov    ?,WORD PTR [ebx-0x71]
  406448:	adc    ebx,ebx
  40644a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40644b:	mov    DWORD PTR [ebp-0x21bc71f1],ebx
  406451:	sti    
  406452:	mov    WORD PTR [ebx+0xa],ds
  406455:	hlt    
  406456:	dec    edi
  406457:	sbb    eax,0xa1a3baca
  40645c:	xchg   ecx,eax
  40645d:	fistp  QWORD PTR [ebp-0x6f]
  406460:	leave  
  406461:	push   edx
  406462:	lahf   
  406463:	out    dx,al
  406464:	adc    ecx,DWORD PTR [esi]
  406466:	push   ds
  406467:	push   edi
  406468:	add    al,0x57
  40646a:	adc    ah,cl
  40646c:	adc    esp,DWORD PTR [edx-0x15f59a1c]
  406472:	es cmp eax,0x10099ac6
  406478:	and    al,0xb
  40647a:	sub    al,0x2d
  40647c:	sti    
  40647d:	int3   
  40647e:	jo     0x4064a8
  406480:	dec    edi
  406481:	push   0x1d
  406483:	or     al,0x2c
  406485:	sbb    edi,DWORD PTR [edi+0x6b0706a9]
  40648b:	mov    al,ds:0x9f0909c2
  406490:	das    
  406491:	dec    ebx
  406492:	mul    ch
  406494:	jge    0x4064b2
  406496:	pop    edi
  406497:	sti    
  406498:	jbe    0x406470
  40649a:	dec    ebp
  40649b:	jl     0x4064dd
  40649d:	adc    DWORD PTR [edx],esi
  40649f:	(bad)  
  4064a0:	jge    0x4064a4
  4064a2:	and    BYTE PTR [edx-0x12d486c0],cl
  4064a8:	es (bad) 
  4064aa:	scas   al,BYTE PTR es:[edi]
  4064ab:	test   eax,0x6f34e02
  4064b0:	or     ebp,DWORD PTR [ebx+0x743e4ef8]
  4064b6:	(bad)  
  4064b7:	and    ebp,eax
  4064b9:	stos   DWORD PTR es:[edi],eax
  4064ba:	in     al,0xf9
  4064bc:	mov    eax,ds:0xf9d10ee0
  4064c1:	sbb    al,ch
  4064c3:	outs   dx,BYTE PTR ds:[esi]
  4064c4:	dec    esi
  4064c5:	retf   0x8321
  4064c8:	mov    dh,0xc0
  4064ca:	pavgw  mm4,QWORD PTR [edi]
  4064cd:	shr    BYTE PTR [ecx+0x18],1
  4064d0:	fist   DWORD PTR [esi-0x1f]
  4064d3:	mov    eax,ds:0x66aeaf76
  4064d8:	aad    0x8f
  4064da:	(bad)  
  4064db:	outs   dx,DWORD PTR ds:[esi]
  4064dc:	xor    bh,cl
  4064de:	and    ecx,DWORD PTR [ecx+0x13]
  4064e1:	inc    esp
  4064e2:	enter  0xcd6d,0x8e
  4064e6:	jmp    0xc3a387ef
  4064eb:	xchg   ebx,eax
  4064ec:	mov    ds:0x935c1ef,eax
  4064f1:	ins    DWORD PTR es:[edi],dx
  4064f2:	repz int3 
  4064f4:	add    BYTE PTR [edx],ah
  4064f6:	push   0xe1bd4902
  4064fb:	daa    
  4064fc:	mov    edi,0x33f2603a
  406501:	ror    BYTE PTR [edx+0x3],1
  406504:	mov    eax,0xc0c178c1
  406509:	mov    ebp,0xcb1d153b
  40650e:	mov    edx,0x777d1a3
  406513:	xor    dl,BYTE PTR [ebp-0x5858de7f]
  406519:	fidiv  DWORD PTR [ebx]
  40651b:	jmp    0x9d0e733e
  406520:	xlat   BYTE PTR ds:[ebx]
  406521:	mov    al,0x57
  406523:	inc    eax
  406524:	pop    edi
  406525:	cs into 
  406527:	push   ebx
  406528:	jmp    0x857d:0xbe181cb
  40652f:	xor    edx,DWORD PTR [ebx+0x49161fb0]
  406535:	xchg   ecx,eax
  406537:	retf   0xa149
  40653a:	popf   
  40653b:	cmp    eax,0xed943f90
  406540:	mov    eax,esp
  406542:	(bad)  
  406543:	addr16 cs lock sub dl,bh
  406548:	mov    esi,0x45fdef99
  40654d:	add    ebp,ebp
  40654f:	(bad)  
  406550:	push   esp
  406551:	inc    edx
  406552:	fsubp  st(3),st
  406554:	or     ch,BYTE PTR ds:0x80490d2d
  40655a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40655b:	mov    esp,0x5df4534d
  406560:	fbld   TBYTE PTR [ecx+0x2e]
  406563:	mov    BYTE PTR [ebp+0x5b],al
  406566:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406567:	(bad)  
  406568:	jmp    0x4065a7
  40656a:	mov    dl,0x87
  40656c:	test   DWORD PTR [ebx],ecx
  40656e:	mov    edx,0xe21e3fce
  406573:	pop    ecx
  406574:	mov    ah,bl
  406576:	jp     0x4065eb
  406578:	push   esp
  406579:	test   BYTE PTR [eax+0xb],0xb7
  40657d:	div    edi
  40657f:	fldenv [esi+ebx*2+0x46]
  406583:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406584:	imul   ebx,DWORD PTR [ebp+0x7bf34d1],0x25aae48b
  40658e:	dec    edi
  40658f:	mov    ebp,0xbaaa9872
  406594:	addr16 mov dl,0x2a
  406597:	cmp    DWORD PTR [esi+eiz*1-0x486f83e0],edi
  40659e:	cmpxchg DWORD PTR [edi-0x79],esi
  4065a2:	out    0xb4,al
  4065a4:	enter  0x638,0xee
  4065a8:	popf   
  4065a9:	jns    0x40652b
  4065ab:	xor    cl,BYTE PTR [eax]
  4065ad:	adc    ch,BYTE PTR [edi+0x56a4c016]
  4065b3:	jl     0x4065d0
  4065b5:	sub    bh,BYTE PTR [ebp-0x4d0f96e2]
  4065bb:	test   al,0xf7
  4065bd:	push   edi
  4065be:	pop    esi
  4065bf:	cmp    al,0x3a
  4065c1:	stc    
  4065c2:	fdiv   QWORD PTR [edi-0x5b1269da]
  4065c8:	add    eax,0x3be9f0d3
  4065cd:	sub    bl,dl
  4065cf:	xor    eax,0xceaa7580
  4065d4:	dec    esi
  4065d5:	mov    esi,0x6091cef1
  4065da:	cs xchg ebp,eax
  4065dc:	mov    al,0x55
  4065de:	xchg   BYTE PTR [esi-0x10],dh
  4065e1:	sbb    DWORD PTR [ebx+0x7b],ebp
  4065e4:	inc    BYTE PTR [ecx-0x478988f7]
  4065ea:	clc    
  4065eb:	mov    ds:0x80d362c3,eax
  4065f0:	cmp    DWORD PTR [ebx+0x42],eax
  4065f3:	in     eax,0xbb
  4065f5:	mov    ah,0x47
  4065f7:	into   
  4065f8:	mov    al,ds:0xae8aca72
  4065fd:	mov    al,0x25
  4065ff:	jg     0x4065fd
  406601:	popf   
  406602:	test   BYTE PTR gs:[edx],0x15
  406606:	nop
  406607:	xchg   ebx,eax
  406608:	cmp    BYTE PTR ds:0xab4e373b,ah
  40660e:	loope  0x4065d7
  406610:	adc    DWORD PTR [ecx+0x574315d6],0xffffffc3
  406617:	sbb    al,0xd7
  406619:	pop    ss
  40661a:	xchg   DWORD PTR [ebx+0x6f],edi
  40661d:	add    BYTE PTR [eax],ch
  40661f:	or     DWORD PTR [ebx+0x35d6ed35],0xc1e48e99
  406629:	push   ds
  40662a:	cli    
  40662b:	es std 
  40662d:	pop    es
  40662e:	or     eax,0xfd6ec051
  406633:	and    edx,ecx
  406635:	xchg   ebp,eax
  406636:	jecxz  0x4065f3
  406638:	xchg   ebx,eax
  406639:	and    eax,0x24d81fb5
  40663e:	cmp    bh,BYTE PTR [ecx-0x2e1b292e]
  406644:	cmp    DWORD PTR [ecx+0x18],ebp
  406647:	and    al,0x81
  406649:	cld    
  40664a:	loope  0x406657
  40664c:	add    eax,0x7426b09e
  406651:	fs addr16 in eax,0xfd
  406655:	add    eax,0x5e449fe9
  40665a:	mov    bl,0xa5
  40665c:	std    
  40665d:	jne    0x406664
  40665f:	sbb    BYTE PTR [eax],al
  406661:	ja     0x4065e8
  406663:	dec    ecx
  406664:	and    esi,DWORD PTR [edi]
  406666:	aam    0x9d
  406668:	sub    ah,BYTE PTR [edx+0x5]
  40666b:	in     eax,0xd0
  40666d:	jg     0x4066d8
  40666f:	je     0x4065f5
  406671:	push   cs
  406672:	pushf  
  406673:	xor    DWORD PTR [eax],eax
  406675:	je     0x406663
  406677:	jg     0x4066cd
  406679:	jl     0x4066ac
  40667b:	pop    es
  40667c:	in     al,0x97
  40667e:	pushf  
  40667f:	sar    ch,1
  406681:	push   ebp
  406682:	minps  xmm5,xmm3
  406685:	shl    bh,cl
  406687:	lods   eax,DWORD PTR ds:[esi]
  406688:	out    0x3e,eax
  40668a:	push   cs
  40668b:	pushf  
  40668c:	sti    
  40668d:	lock fwait
  40668f:	rcr    DWORD PTR [ebp+0x2c7fd6a],cl
  406695:	popa   
  406696:	inc    edi
  406697:	repnz sbb BYTE PTR [ebp+0x5],cl
  40669b:	pusha  
  40669c:	pop    esi
  40669d:	imul   eax,DWORD PTR [ebx+0x6d],0x6
  4066a1:	lock dec ecx
  4066a3:	pop    ebx
  4066a4:	enter  0x2a60,0x31
  4066a8:	fldcw  WORD PTR [eax-0x44]
  4066ab:	push   cs
  4066ac:	int3   
  4066ad:	sbb    ebp,DWORD PTR [edx-0x36]
  4066b0:	jecxz  0x40668c
  4066b2:	sub    DWORD PTR [edi],0xdce96c16
  4066b8:	jp     0x40668b
  4066ba:	fistp  WORD PTR [ebp+0x47]
  4066bd:	outs   dx,DWORD PTR ds:[esi]
  4066be:	cmp    eax,DWORD PTR [esi-0x4a]
  4066c1:	xchg   edx,eax
  4066c2:	in     al,0x28
  4066c4:	mov    ds:0x98dda3be,eax
  4066c9:	enter  0x3994,0x6a
  4066cd:	js     0x406715
  4066cf:	xor    edi,ebp
  4066d1:	add    dl,bl
  4066d3:	cmc    
  4066d4:	xchg   ebx,eax
  4066d5:	xchg   edx,eax
  4066d6:	nop
  4066d7:	sub    al,0x49
  4066d9:	push   0xfffffff2
  4066db:	adc    eax,esi
  4066dd:	mov    dh,0xbd
  4066df:	test   BYTE PTR [eax],ah
  4066e1:	mov    bh,0xce
  4066e3:	in     al,0xc0
  4066e5:	test   DWORD PTR [ebx+0x4a],edi
  4066e8:	aaa    
  4066e9:	imul   eax,eax,0x252f7847
  4066ef:	addr16 popa 
  4066f1:	xor    DWORD PTR [edi+esi*1+0x7],0x7d
  4066f6:	in     eax,dx
  4066f7:	xor    eax,0x230af15
  4066fc:	push   es
  4066fd:	mov    dh,0x25
  4066ff:	ret    
  406700:	iret   
  406701:	jmp    0xab2c:0x70184085
  406708:	(bad)  
  406709:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40670a:	iret   
  40670b:	(bad)  
  40670c:	jmp    0xe3fe5e6b
  406711:	div    DWORD PTR [eax+edx*8-0x11]
  406715:	mov    esi,0xe719c56d
  40671a:	mov    ch,0x9e
  40671c:	ss mov ch,0x4
  40671f:	add    DWORD PTR [esi-0x6d4c9eb5],esp
  406725:	(bad)  
  406726:	ret    
  406727:	cwde   
  406728:	dec    ecx
  406729:	stc    
  40672a:	inc    eax
  40672b:	out    dx,al
  40672c:	inc    edx
  40672d:	push   ds
  40672e:	jae    0x40674c
  406730:	call   0x8dc:0x67ed3e46
  406737:	mov    ah,0xa8
  406739:	call   FWORD PTR [eax+0x712d54ac]
  40673f:	repnz into 
  406741:	fst    QWORD PTR [esi-0x1e]
  406744:	pushf  
  406745:	retf   
  406746:	icebp  
  406747:	or     ebx,DWORD PTR [ebx]
  406749:	in     eax,0x8c
  40674b:	lods   al,BYTE PTR ds:[esi]
  40674c:	jp     0x406737
  40674e:	xchg   edx,eax
  40674f:	lods   al,BYTE PTR ds:[esi]
  406750:	xor    DWORD PTR [esi-0x5e2b61db],esp
  406756:	add    ebx,DWORD PTR [eax+0x4]
  406759:	fidiv  DWORD PTR [eax]
  40675b:	mov    edi,0xb6ce09f9
  406760:	mov    edx,cs
  406762:	add    ah,BYTE PTR [eax]
  406764:	es pop esi
  406766:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406767:	cmp    esp,esi
  406769:	scas   al,BYTE PTR es:[edi]
  40676a:	(bad)
  40676d:	push   esi
  40676e:	js     0x4067e3
  406770:	lahf   
  406771:	std    
  406772:	adc    edx,eax
  406774:	(bad)  
  406775:	xchg   esi,eax
  406776:	je     0x4067c7
  406778:	xchg   ebp,eax
  406779:	retf   0x9f60
  40677c:	sti    
  40677d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40677e:	inc    edi
  40677f:	add    al,0x1c
  406781:	out    0x39,eax
  406783:	imul   ecx,esp,0x32567d51
  406789:	test   BYTE PTR [esi-0x576a16b6],bh
  40678f:	mov    ebx,0x6cf1e864
  406794:	test   ebp,ebx
  406796:	data16 (bad) 
  406798:	sub    cl,BYTE PTR [edx-0x24]
  40679b:	fisttp DWORD PTR [ecx+0x136644a4]
  4067a1:	je     0x40681d
  4067a3:	mov    eax,ds:0xf498d522
  4067a8:	fs call 0xc0e787c2
  4067ae:	xchg   edi,eax
  4067af:	(bad)  
  4067b0:	sbb    al,0x43
  4067b2:	(bad)  
  4067b4:	adc    DWORD PTR [esi-0x71],esp
  4067b7:	cs jp  0x40675c
  4067ba:	(bad)  
  4067bb:	fwait
  4067bc:	pop    edi
  4067bd:	inc    esp
  4067be:	pop    ds
  4067bf:	sar    dh,cl
  4067c1:	cwde   
  4067c2:	into   
  4067c3:	jo     0x4067a0
  4067c5:	add    ch,BYTE PTR [edx]
  4067c7:	fwait
  4067c8:	ror    DWORD PTR [esi],cl
  4067ca:	pushf  
  4067cb:	sbb    al,0x6a
  4067cd:	inc    ebx
  4067ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4067cf:	mov    ebp,0x80a8261a
  4067d4:	xor    al,0xd
  4067d6:	outs   dx,DWORD PTR ds:[esi]
  4067d7:	xchg   edi,eax
  4067d8:	sub    ah,BYTE PTR [ebx]
  4067da:	cmp    al,0x4d
  4067dc:	add    esp,DWORD PTR ds:0x77b35302
  4067e2:	dec    ecx
  4067e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4067e4:	(bad)  
  4067e5:	scas   al,BYTE PTR es:[edi]
  4067e6:	inc    esp
  4067e7:	loope  0x406797
  4067e9:	fcmovnb st,st(1)
  4067eb:	mov    ebx,0x1d98b7a8
  4067f0:	test   DWORD PTR [ebx+0x78],esi
  4067f3:	xor    DWORD PTR [ebp+0x78ee8438],eax
  4067f9:	adc    al,0x4b
  4067fb:	(bad)  
  4067fc:	pop    esp
  4067fd:	mov    BYTE PTR [esp+ecx*8],0x65
  406801:	jmp    0x66c:0xec22aac1
  406808:	mov    WORD PTR [esi],?
  40680a:	aad    0x6a
  40680c:	daa    
  40680d:	xchg   ebx,eax
  40680e:	stc    
  40680f:	ja     0x4067eb
  406811:	loopne 0x406810
  406813:	arpl   cx,cx
  406815:	jnp    0x40684f
  406817:	add    BYTE PTR [ecx],0x6e
  40681a:	mov    ch,0xc
  40681c:	sub    BYTE PTR [ebx+0x62],0x2b
  406820:	retf   
  406821:	push   ss
  406822:	xor    DWORD PTR [ebp+0x65],eax
  406825:	fcmovb st,st(5)
  406827:	mov    eax,0x1ee0b2c0
  40682c:	fild   QWORD PTR ss:[ecx-0x6a9cd55f]
  406833:	dec    edx
  406834:	sub    ch,al
  406836:	stc    
  406837:	jnp    0x406851
  406839:	mov    esp,0xecd1ba7a
  40683e:	ficomp WORD PTR [eax]
  406840:	mov    DWORD PTR [ecx-0x2e],ecx
  406843:	and    ecx,DWORD PTR [edi+0x49]
  406846:	or     dl,al
  406848:	nop
  406849:	inc    esi
  40684a:	aaa    
  40684b:	xor    ch,bh
  40684d:	mov    dh,0x56
  40684f:	stos   DWORD PTR es:[edi],eax
  406850:	inc    eax
  406851:	in     eax,0x86
  406853:	cmp    dl,BYTE PTR [ecx+0x4986acb4]
  406859:	cmc    
  40685a:	mov    edi,esi
  40685c:	jle    0x4068ca
  40685e:	pop    edi
  40685f:	and    BYTE PTR [ecx-0x4f29180f],bl
  406865:	dec    ebx
  406866:	std    
  406867:	fisttp DWORD PTR [ebp+0x7f338b93]
  40686d:	lahf   
  40686e:	xchg   ebx,eax
  40686f:	push   ebx
  406870:	popa   
  406871:	add    BYTE PTR [edx+0x63],bl
  406874:	cmp    esp,ebp
  406876:	push   ebx
  406877:	sub    eax,eax
  406879:	rol    DWORD PTR [eax-0x14a9e4b8],cl
  40687f:	test   ebp,edx
  406881:	scas   eax,DWORD PTR es:[edi]
  406882:	ror    BYTE PTR [edx+eax*4],0x5d
  406886:	or     dh,BYTE PTR cs:[ecx+edi*8+0x2a]
  40688b:	add    DWORD PTR ds:0xc578553a,esp
  406891:	inc    esp
  406892:	call   0xe9203d5e
  406897:	stos   BYTE PTR es:[edi],al
  406898:	je     0x4068c4
  40689a:	imul   esi,ebp,0xfffffff9
  40689d:	mov    dl,0x61
  40689f:	je     0x4068da
  4068a1:	cmp    eax,eax
  4068a3:	call   0x8795:0x9f78f34
  4068aa:	dec    esi
  4068ab:	mov    edx,0x107614d3
  4068b0:	mov    ds:0x17c2d775,eax
  4068b5:	push   cs
  4068b6:	inc    eax
  4068b7:	mov    ebp,0x8b8a0738
  4068bc:	js     0x40692b
  4068be:	leave  
  4068bf:	or     DWORD PTR [eax],0x8ea855ec
  4068c5:	fxch   st(4)
  4068c7:	aas    
  4068c8:	int    0x3a
  4068ca:	cwde   
  4068cb:	mov    eax,ds:0xdef8c776
  4068d0:	sub    al,BYTE PTR [edx-0x3b]
  4068d3:	fadd   QWORD PTR [ecx+0x3dc98dec]
  4068d9:	add    al,0xf2
  4068db:	mov    eax,ds:0x303d771
  4068e0:	nop
  4068e1:	retf   0x2d67
  4068e4:	mov    ds:0x58526f10,al
  4068e9:	in     al,dx
  4068ea:	in     al,dx
  4068eb:	pusha  
  4068ec:	pop    esp
  4068ed:	cmp    al,0x62
  4068ef:	pop    ecx
  4068f0:	cmp    al,0x73
  4068f2:	sbb    DWORD PTR [ecx+0xd32793f],edx
  4068f8:	adc    bl,ch
  4068fa:	das    
  4068fb:	std    
  4068fc:	ins    BYTE PTR es:[edi],dx
  4068fd:	es push esp
  4068ff:	jne    0x4068f6
  406901:	push   esp
  406902:	xor    BYTE PTR [ebp-0x2158b6b9],ah
  406908:	cmc    
  406909:	or     eax,0x6942d342
  40690e:	mov    edx,0x11ab1866
  406913:	pop    es
  406914:	mov    esp,0x17b65407
  406919:	lea    edi,[ebp-0x10]
  40691c:	dec    ebx
  40691d:	mov    edi,0xe83b27ad
  406922:	push   edi
  406923:	push   ecx
  406924:	pop    esi
  406925:	inc    esp
  406926:	and    DWORD PTR [ecx+esi*1-0x12],ebp
  40692a:	lods   eax,DWORD PTR ds:[esi]
  40692b:	stos   BYTE PTR es:[edi],al
  40692c:	loopne 0x40699a
  40692e:	sbb    eax,0x5cdb572
  406933:	pop    ecx
  406934:	inc    ecx
  406935:	scas   eax,DWORD PTR es:[edi]
  406936:	xlat   BYTE PTR ds:[ebx]
  406937:	mov    al,ds:0xefd6a8ea
  40693c:	loope  0x4069a9
  40693e:	jl     0x40691c
  406940:	and    eax,0x224bfdae
  406945:	in     al,0xbd
  406947:	fs mov bl,0xdb
  40694a:	int3   
  40694b:	pop    edi
  40694c:	jno    0x40695a
  40694e:	sbb    ah,BYTE PTR [ebp+0x12]
  406951:	push   ss
  406952:	push   ds
  406953:	retf   
  406954:	pslld  mm3,QWORD PTR [ecx+0x4f4b51f2]
  40695b:	shr    BYTE PTR [eax+0x2720139e],0x8b
  406962:	cmc    
  406963:	mov    al,ds:0xa55be79c
  406968:	jo     0x4069b9
  40696a:	or     eax,DWORD PTR [edx+0x49]
  40696d:	xor    ah,BYTE PTR [ecx-0x3c49dde8]
  406973:	cmp    DWORD PTR [ebx+0x63],edi
  406976:	xor    al,0x20
  406978:	das    
  406979:	out    dx,eax
  40697a:	pop    ebp
  40697b:	out    0xac,al
  40697d:	pop    ss
  40697e:	or     BYTE PTR [eax+0x64],ah
  406981:	and    eax,0xdc4edb67
  406986:	and    eax,0x9b9c9283
  40698b:	mov    ebx,?
  40698d:	and    cl,dh
  40698f:	dec    edx
  406990:	pop    ss
  406991:	sub    BYTE PTR [edx+0x2e],ah
  406994:	jae    0x406974
  406996:	outs   dx,BYTE PTR ds:[esi]
  406997:	mov    ch,BYTE PTR [esp+edx*8+0x34e56f5a]
  40699e:	or     DWORD PTR [edi-0x5a38057b],eax
  4069a4:	sahf   
  4069a5:	test   BYTE PTR ds:0x5e69e172,bl
  4069ab:	ret    
  4069ac:	dec    ecx
  4069ad:	fild   WORD PTR [ecx]
  4069af:	(bad)  [ebx+0x75]
  4069b2:	imul   esp,DWORD PTR [esi+0x73],0xffffffd4
  4069b6:	gs pop edi
  4069b8:	aaa    
  4069b9:	pop    esp
  4069ba:	dec    edx
  4069bb:	cmp    esi,DWORD PTR [ebp+ebx*8+0x423ce1c9]
  4069c2:	add    eax,0xd1e1f305
  4069c7:	pop    esp
  4069c8:	cmp    bl,BYTE PTR [ecx]
  4069ca:	xchg   esp,eax
  4069cb:	cld    
  4069cc:	not    ch
  4069ce:	repz sub dl,BYTE PTR [ecx]
  4069d1:	sti    
  4069d2:	xlat   BYTE PTR ss:[ebx]
  4069d4:	loopne 0x406988
  4069d6:	or     edi,DWORD PTR [edi+0x34f2465d]
  4069dc:	cmp    edx,esi
  4069de:	sbb    ebp,DWORD PTR [edi-0x5e]
  4069e1:	test   BYTE PTR [ebx+0x11],dl
  4069e4:	mov    eax,0x97fbb6e9
  4069e9:	iret   
  4069ea:	mov    ebp,0x97a3ed2c
  4069ef:	adc    DWORD PTR ds:0xdaebd663,ebp
  4069f5:	popf   
  4069f6:	in     al,dx
  4069f7:	and    edx,DWORD PTR ds:0x35d9620e
  4069fd:	(bad)  
  4069fe:	xor    eax,0x27a0b550
  406a03:	test   DWORD PTR [edx-0x69599316],edx
  406a09:	dec    ebx
  406a0a:	push   edx
  406a0b:	and    ebp,esi
  406a0d:	sbb    al,0xc7
  406a0f:	push   edx
  406a10:	fsub   DWORD PTR [ebx+ebx*4+0x14]
  406a14:	xchg   ebp,eax
  406a15:	pop    ebp
  406a16:	push   ss
  406a17:	jmp    0x35fe530b
  406a1c:	xor    al,0x16
  406a1e:	add    cl,ch
  406a20:	scas   eax,DWORD PTR es:[edi]
  406a21:	hlt    
  406a22:	and    al,0x4c
  406a24:	jg     0x406a86
  406a26:	push   0xd8fec0e8
  406a2b:	pop    ecx
  406a2c:	or     BYTE PTR [eax-0x4],ah
  406a2f:	scas   al,BYTE PTR es:[edi]
  406a30:	popa   
  406a31:	mov    edi,0x6a854df5
  406a36:	pop    ds
  406a37:	mov    ?,ebp
  406a39:	sub    BYTE PTR [ebp-0x20d74589],bh
  406a3f:	psubsb mm4,QWORD PTR [esi+0x4b]
  406a43:	btr    DWORD PTR [edx+eax*4],edx
  406a47:	dec    esi
  406a48:	mov    gs,ebx
  406a4a:	add    edx,DWORD PTR [esi+0x2b294094]
  406a50:	lock repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a53:	dec    esp
  406a54:	push   ecx
  406a55:	dec    ecx
  406a56:	add    BYTE PTR [ebp-0x1a8d8459],0x94
  406a5d:	inc    edi
  406a5e:	add    al,0x48
  406a60:	push   edx
  406a61:	pop    esi
  406a62:	mov    gs,WORD PTR [edx]
  406a64:	mov    ch,0xc
  406a66:	in     eax,0xd6
  406a68:	push   esp
  406a69:	push   ds
  406a6a:	push   es
  406a6b:	sbb    DWORD PTR [eax+0x50f2cfe],edi
  406a71:	retf   0xe87c
  406a74:	int    0x1e
  406a76:	or     DWORD PTR [edx-0x1f],edx
  406a79:	in     eax,dx
  406a7a:	push   esp
  406a7b:	push   0x7d
  406a7d:	sbb    al,0xcf
  406a7f:	pushf  
  406a80:	push   es
  406a81:	popf   
  406a82:	pop    ebx
  406a83:	inc    ebp
  406a84:	and    ecx,DWORD PTR [ebx-0x767d3d9f]
  406a8a:	xchg   ebp,eax
  406a8b:	es jnp 0x406b05
  406a8e:	inc    ebp
  406a8f:	sub    ah,BYTE PTR ds:0x60fe508c
  406a95:	pushf  
  406a96:	out    dx,al
  406a97:	or     eax,0x866e240c
  406a9c:	inc    ah
  406a9e:	xchg   BYTE PTR [ebx+0x33dee3b1],dh
  406aa4:	dec    ebx
  406aa5:	adc    edi,DWORD PTR [ebx-0x13]
  406aa8:	in     eax,dx
  406aa9:	push   edi
  406aaa:	mov    ds:0x2a7958fe,al
  406aaf:	jp     0x406a56
  406ab1:	mov    al,0x63
  406ab3:	xchg   BYTE PTR [ecx-0x54],ah
  406ab6:	out    0x8a,al
  406ab8:	imul   esi,DWORD PTR [esi+0xf],0x53
  406abc:	inc    esi
  406abd:	stos   DWORD PTR es:[edi],eax
  406abe:	in     eax,dx
  406abf:	xlat   BYTE PTR ds:[ebx]
  406ac0:	stc    
  406ac1:	xor    bh,BYTE PTR [ebx-0x7e]
  406ac4:	jl     0x406b06
  406ac6:	pop    eax
  406ac7:	inc    edx
  406ac8:	out    dx,al
  406ac9:	outs   dx,DWORD PTR ds:[esi]
  406aca:	fs pop ss
  406acc:	dec    ecx
  406acd:	xchg   ebx,eax
  406ace:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406acf:	adc    cl,BYTE PTR [ecx-0x5d]
  406ad2:	xor    BYTE PTR [edx+esi*4],dh
  406ad5:	aaa    
  406ad6:	je     0x406aaa
  406ad8:	mov    dh,0xa3
  406ada:	xchg   BYTE PTR [ecx+0x66492aed],ah
  406ae0:	jge    0x406b57
  406ae2:	retf   0x1585
  406ae5:	and    DWORD PTR [ecx+0x7b8c3008],0xc
  406aec:	push   eax
  406aed:	pop    ecx
  406aee:	hlt    
  406aef:	mov    ch,0xb0
  406af1:	fld    QWORD PTR [eax-0xd]
  406af4:	mov    cl,BYTE PTR [ebx+0x2e]
  406af7:	or     DWORD PTR [edx-0x159a0b49],ebp
  406afd:	push   0xec2243c1
  406b02:	inc    edi
  406b03:	and    BYTE PTR [edi+0x42d52739],dh
  406b09:	inc    edx
  406b0a:	fwait
  406b0b:	xchg   DWORD PTR [ecx+0x1347902c],esp
  406b11:	ins    BYTE PTR es:[edi],dx
  406b12:	xchg   ebx,eax
  406b13:	in     eax,0x94
  406b15:	mov    eax,ds:0x9507047e
  406b1a:	test   DWORD PTR [ebx-0x7e],ebp
  406b1d:	add    al,0x88
  406b1f:	mov    ecx,0xa7ec41c6
  406b24:	cmp    dh,bh
  406b26:	in     al,dx
  406b27:	js     0x406b8e
  406b29:	cmp    DWORD PTR [ecx+0x44],0x20
  406b2d:	cs sbb eax,0x5348bfcd
  406b33:	sbb    dh,BYTE PTR [esp+eiz*4+0x5d]
  406b37:	and    al,0x90
  406b39:	mov    bh,0xf8
  406b3b:	add    DWORD PTR [ebp+0xc],edx
  406b3e:	fidivr DWORD PTR [esi]
  406b40:	xor    DWORD PTR [eax],edx
  406b42:	popf   
  406b43:	jnp    0x406bb4
  406b45:	js     0x406afa
  406b47:	and    ah,BYTE PTR [edi+ebp*2-0x283e2abd]
  406b4e:	shr    dl,cl
  406b50:	pop    ds
  406b51:	nop
  406b52:	adc    al,BYTE PTR [eax+eiz*8-0x66]
  406b56:	jb     0x406b1d
  406b58:	int3   
  406b59:	jmp    0x105b:0x71f346e5
  406b60:	std    
  406b61:	mov    al,ds:0xda119c99
  406b66:	jae    0x406ba5
  406b68:	xor    DWORD PTR [ebx+eiz*4-0x6dc3f601],edx
  406b6f:	jae    0x406b37
  406b71:	mov    WORD PTR [ebx+esi*8+0x69e22c01],cs
  406b78:	xchg   esi,eax
  406b79:	mov    ebp,0xa8bfc64d
  406b7e:	mov    al,cl
  406b80:	push   ecx
  406b81:	sahf   
  406b82:	jno    0x406b8c
  406b84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b85:	mov    cl,0x39
  406b87:	enter  0xd276,0xe2
  406b8b:	push   0x2daa8d10
  406b90:	das    
  406b91:	sub    al,BYTE PTR [eax+0x5b]
  406b94:	stc    
  406b95:	push   ds
  406b96:	sub    ah,BYTE PTR [edi+0x5a]
  406b99:	push   0x29
  406b9b:	jno    0x406b72
  406b9d:	sub    dl,BYTE PTR [esi+0x2b930c96]
  406ba3:	add    al,0xd2
  406ba5:	adc    al,BYTE PTR [ebx]
  406ba7:	fst    st(3)
  406ba9:	sub    esi,DWORD PTR [eax-0x7d9eb797]
  406baf:	or     al,0x3b
  406bb1:	sub    eax,0x27ce2b71
  406bb6:	iret   
  406bb7:	retf   0xa719
  406bba:	push   es
  406bbb:	out    dx,al
  406bbc:	retf   
  406bbd:	(bad)  
  406bbe:	dec    ebp
  406bbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bc0:	adc    BYTE PTR [ecx],0xc3
  406bc3:	imul   edx,DWORD PTR [esi-0x21],0xfffffff0
  406bc7:	aaa    
  406bc8:	daa    
  406bc9:	(bad)  
  406bcb:	cmp    bl,BYTE PTR [esi-0x73]
  406bce:	cmp    eax,0x451856
  406bd3:	jae    0x406ba9
  406bd5:	sbb    BYTE PTR [ecx],bh
  406bd7:	outs   dx,BYTE PTR ds:[esi]
  406bd8:	not    BYTE PTR [bp+di+0x67f1]
  406bdd:	mov    BYTE PTR [esi+0xa],bl
  406be0:	mov    dl,0x15
  406be2:	rcr    bh,0x59
  406be5:	push   0x1
  406be7:	lahf   
  406be8:	jg     0x406c16
  406bea:	sub    cl,dh
  406bec:	ret    0xca35
  406bef:	xor    edx,DWORD PTR [edi+0x23b76648]
  406bf5:	into   
  406bf6:	mov    ecx,0xafe113eb
  406bfb:	clc    
  406bfc:	loop   0x406bc4
  406bfe:	mov    dl,0xda
  406c00:	jmp    0x92e4:0x4be7d7f4
  406c07:	cmp    al,0xd0
  406c09:	jo     0x406c17
  406c0b:	dec    edx
  406c0c:	cmp    DWORD PTR [ebp+0x16f11c51],ebx
  406c12:	cdq    
  406c13:	pop    ebx
  406c14:	jmp    0xf3d86139
  406c19:	xchg   edi,eax
  406c1a:	ins    DWORD PTR es:[edi],dx
  406c1b:	mov    bh,0xd2
  406c1d:	and    esp,eax
  406c1f:	mov    edi,0x55a8a8d0
  406c24:	xchg   esi,ebx
  406c26:	sub    al,0xc
  406c28:	jne    0x406be5
  406c2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c2b:	shl    BYTE PTR [edx-0x80],0x1e
  406c2f:	push   esp
  406c30:	inc    ecx
  406c31:	jbe    0x406bbc
  406c33:	(bad)  
  406c34:	jb     0x406bed
  406c36:	and    al,0x4b
  406c38:	mov    cl,0xee
  406c3a:	sti    
  406c3b:	jo     0x406bf6
  406c3d:	in     al,0x4
  406c3f:	stc    
  406c40:	xor    bh,ch
  406c42:	xor    eax,0x9e481223
  406c47:	mov    ebx,0x4170080d
  406c4c:	ds rcl esp,cl
  406c4f:	in     al,dx
  406c50:	fisttp QWORD PTR [edi]
  406c52:	(bad)  
  406c53:	rol    DWORD PTR [esi],1
  406c55:	in     al,dx
  406c56:	inc    ecx
  406c57:	ret    0xc92c
  406c5a:	sar    ah,0x57
  406c5d:	cmp    DWORD PTR [edi+0x5],ebp
  406c60:	mov    dh,0x9
  406c62:	das    
  406c63:	mov    ds:0x873e603c,eax
  406c68:	call   0x817c3f56
  406c6d:	jp     0x406cbb
  406c6f:	sub    eax,0x38cda1d2
  406c74:	das    
  406c75:	rol    ah,cl
  406c77:	mov    DWORD PTR [ebx-0x3a04df5e],eax
  406c7d:	pop    edi
  406c7e:	lock jle 0x406cab
  406c81:	jg     0x406c83
  406c83:	push   edx
  406c84:	xchg   esi,eax
  406c85:	cli    
  406c86:	jmp    0x406cba
  406c88:	xor    ecx,DWORD PTR [ebx]
  406c8a:	inc    esp
  406c8b:	mov    ecx,0xb6a0ff6c
  406c90:	lods   eax,DWORD PTR ds:[esi]
  406c91:	xchg   esi,eax
  406c92:	mov    esp,0xc3d92e11
  406c97:	pop    edi
  406c98:	call   0x3a81:0xfcaf9b67
  406c9f:	pop    edx
  406ca0:	or     ch,ah
  406ca2:	jns    0x406cc2
  406ca4:	mov    DWORD PTR [eax],esi
  406ca6:	sub    al,0xfd
  406ca8:	retf   0x6720
  406cab:	neg    BYTE PTR [eax]
  406cad:	or     ch,BYTE PTR [ebx]
  406caf:	sbb    BYTE PTR [edx-0xe7ca549],dl
  406cb5:	daa    
  406cb6:	mov    bl,0xfb
  406cb8:	adc    ebp,DWORD PTR [esi+0xae9787c]
  406cbe:	ja     0x406ccb
  406cc0:	rcl    DWORD PTR [ecx-0x1c],0xef
  406cc4:	popa   
  406cc5:	mov    eax,ds:0x6d76f774
  406cca:	enter  0x8036,0x47
  406cce:	push   0xdf121395
  406cd3:	scas   eax,DWORD PTR es:[edi]
  406cd4:	aas    
  406cd5:	pop    ss
  406cd6:	jbe    0x406d08
  406cd8:	xor    eax,0x3c4da276
  406cdd:	pop    edi
  406cde:	pop    ecx
  406cdf:	sbb    eax,0x86be43e8
  406ce4:	jle    0x406c78
  406ce6:	push   0x6f
  406ce8:	xor    eax,0xd65ebe61
  406ced:	mov    esp,0xaa2dc0d6
  406cf2:	pop    esi
  406cf3:	xchg   BYTE PTR [eax],ah
  406cf5:	cmp    BYTE PTR [edx],dl
  406cf7:	ds push edx
  406cf9:	es jmp 0x406ce8
  406cfc:	lahf   
  406cfd:	not    DWORD PTR [edi-0x7f9f7310]
  406d03:	in     eax,0x6c
  406d05:	xlat   BYTE PTR ds:[ebx]
  406d06:	add    dh,BYTE PTR [edi+0x744ebf63]
  406d0c:	mov    ch,0x78
  406d0e:	es push 0xffffffcd
  406d11:	and    eax,0x685ed46b
  406d16:	adc    DWORD PTR ds:0x1c3a0c76,0x12d62896
  406d20:	push   0xffffff8a
  406d22:	pop    edi
  406d23:	jle    0x406d60
  406d25:	lahf   
  406d26:	jbe    0x406d15
  406d28:	pop    ebx
  406d29:	arpl   WORD PTR [edi+0x6e],cx
  406d2c:	fwait
  406d2d:	ret    0xf2d5
  406d30:	or     cl,BYTE PTR ds:0x2cbffa51
  406d36:	push   ds
  406d37:	push   ds
  406d38:	scas   eax,DWORD PTR es:[edi]
  406d39:	sub    BYTE PTR [eax-0xd],bl
  406d3c:	cld    
  406d3d:	dec    ebx
  406d3e:	outs   dx,DWORD PTR ds:[esi]
  406d3f:	adc    al,0xfd
  406d41:	sub    BYTE PTR [ebx+eiz*2],0x49
  406d45:	popa   
  406d46:	fcmovnbe st,st(7)
  406d48:	pop    edx
  406d49:	push   esi
  406d4a:	or     cl,BYTE PTR gs:[edx]
  406d4d:	enter  0xa464,0x6d
  406d51:	mov    ah,0xe7
  406d53:	jmp    0xc1546aa
  406d58:	js     0x406d3a
  406d5a:	test   eax,0x25e65aad
  406d5f:	lea    edx,[edx+0x6708e1fb]
  406d65:	pop    ss
  406d66:	sbb    eax,ebx
  406d68:	ins    BYTE PTR es:[edi],dx
  406d69:	in     eax,dx
  406d6a:	jp     0x406d3a
  406d6c:	sub    BYTE PTR es:[edx],bl
  406d6f:	int3   
  406d70:	aad    0xaf
  406d72:	sahf   
  406d73:	xchg   BYTE PTR [ecx+eax*4+0x7b],cl
  406d77:	sub    bl,BYTE PTR [edi-0x38]
  406d7a:	cwde   
  406d7b:	(bad)  
  406d7c:	rcr    BYTE PTR [eax-0x4e8fc828],1
  406d82:	or     dh,BYTE PTR [esp+0xf559a78]
  406d89:	sar    DWORD PTR [ebp+0x4884743b],cl
  406d8f:	int    0xaf
  406d91:	add    al,0xe3
  406d93:	popa   
  406d94:	adc    esp,DWORD PTR [ebx]
  406d96:	test   DWORD PTR [edx+edi*8-0x3b7ccda5],esp
  406d9d:	mov    esi,0x38a259c7
  406da2:	or     ecx,0x31434d01
  406da8:	pop    esi
  406da9:	jns    0x406ded
  406dab:	inc    ecx
  406dac:	xchg   ebp,eax
  406dad:	stc    
  406dae:	sahf   
  406daf:	clc    
  406db0:	mov    dl,0x2
  406db2:	jmp    0x14cc32e6
  406db7:	std    
  406db8:	inc    eax
  406db9:	outs   dx,BYTE PTR ds:[esi]
  406dba:	mov    ds:0xeefb8035,eax
  406dbf:	imul   esp,DWORD PTR [esi-0x5151c770],0x6e
  406dc6:	(bad)  
  406dc7:	lahf   
  406dc8:	lahf   
  406dc9:	fimul  WORD PTR [edx]
  406dcb:	push   0x75
  406dcd:	outs   dx,DWORD PTR ds:[esi]
  406dce:	add    ah,dh
  406dd0:	xchg   esp,eax
  406dd1:	test   BYTE PTR [ecx],bh
  406dd3:	or     al,0x22
  406dd5:	jmp    0x9eddbec8
  406dda:	mov    ?,ebx
  406ddc:	xchg   edx,eax
  406ddd:	inc    ebp
  406dde:	dec    esp
  406ddf:	cdq    
  406de0:	xor    dh,dh
  406de2:	jmp    0x406dc3
  406de4:	pushf  
  406de5:	mov    DWORD PTR [eax-0x77],ebp
  406de8:	out    0x99,al
  406dea:	sar    BYTE PTR [esi+0x4b],1
  406ded:	sub    edx,DWORD PTR [esi+edx*2-0x2b]
  406df1:	and    ah,cl
  406df3:	icebp  
  406df4:	mov    edi,0xbf7c8870
  406df9:	sub    DWORD PTR [edx+0x35],0x9afd10fc
  406e00:	dec    dx
  406e02:	ins    BYTE PTR es:[edi],dx
  406e03:	sbb    ecx,DWORD PTR [esi+edi*8]
  406e06:	psubq  mm4,QWORD PTR [edx]
  406e09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406e0a:	jns    0x406e40
  406e0c:	add    DWORD PTR [esi+0x1bef14e4],0x598f0b95
  406e16:	int    0xcd
  406e18:	or     esi,DWORD PTR [ecx+ecx*1+0x15]
  406e1c:	repnz ins DWORD PTR es:[edi],dx
  406e1e:	data16 fs adc al,0xe4
  406e22:	push   esp
  406e23:	bound  edi,QWORD PTR [edi+0x8]
  406e26:	and    cl,BYTE PTR [ecx]
  406e28:	mov    ah,0x5a
  406e2a:	adc    DWORD PTR [ebp-0x3e],esi
  406e2d:	loopne 0x406db8
  406e2f:	into   
  406e30:	arpl   si,sp
  406e32:	rol    BYTE PTR [ebp+0x4c],0x26
  406e36:	hlt    
  406e37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e38:	xchg   edi,eax
  406e39:	mov    ds:0xf6118fb1,eax
  406e3e:	sub    BYTE PTR [edi+edi*4-0x68],cl
  406e42:	sahf   
  406e43:	int    0xb3
  406e45:	sti    
  406e46:	lahf   
  406e47:	outs   dx,DWORD PTR ds:[esi]
  406e48:	sbb    dh,BYTE PTR [ebx]
  406e4a:	mov    ah,0xef
  406e4c:	out    0x8,al
  406e4e:	das    
  406e4f:	test   eax,0x17d161b8
  406e54:	mov    ch,0xa2
  406e56:	pusha  
  406e57:	mov    eax,ds:0x7da865d2
  406e5c:	ret    
  406e5d:	sub    dh,ah
  406e5f:	jne    0x406e7d
  406e61:	mov    dh,0xe7
  406e63:	xor    al,0x9d
  406e65:	fs push ecx
  406e67:	mov    ds:0xe27beffc,al
  406e6c:	call   0xd063649e
  406e71:	daa    
  406e72:	leave  
  406e73:	xor    eax,eax
  406e75:	add    edx,edi
  406e77:	cld    
  406e78:	rcr    BYTE PTR [ebx],0xfb
  406e7b:	add    bh,BYTE PTR [edi-0x510e203c]
  406e81:	std    
  406e82:	xlat   BYTE PTR ds:[ebx]
  406e83:	dec    eax
  406e84:	push   ecx
  406e85:	gs add eax,0x54eae8d
  406e8b:	inc    esp
  406e8c:	and    eax,0x2bb22b1b
  406e91:	add    eax,0x7dac1bf6
  406e96:	xchg   ecx,eax
  406e97:	nop
  406e98:	imul   ebp,DWORD PTR [edx+eiz*1+0x67],0x75
  406e9d:	repz jne 0x406ed4
  406ea0:	or     eax,0xfc041bbb
  406ea5:	cmp    esp,edi
  406ea7:	imul   esp,DWORD PTR [esi-0x3e9832ed],0x433f8509
  406eb1:	es pushf 
  406eb3:	push   ds
  406eb4:	pop    ebp
  406eb5:	in     eax,0x3a
  406eb7:	sbb    edx,DWORD PTR [edi+0x17]
  406eba:	aaa    
  406ebb:	mov    dh,0xd4
  406ebd:	dec    ebp
  406ebe:	jmp    0xb68e2c6b
  406ec3:	mov    dh,0xa0
  406ec5:	mov    ebx,0x10f9cd99
  406eca:	dec    ecx
  406ecb:	ror    DWORD PTR [ebx-0x4f],0xa
  406ecf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ed0:	jbe    0x406f3d
  406ed2:	js     0x406e71
  406ed4:	pop    esp
  406ed5:	(bad)  
  406ed6:	int    0x29
  406ed8:	mov    edx,0x514b9006
  406edd:	jmp    0x406f0c
  406edf:	adc    BYTE PTR [edx],bl
  406ee1:	xchg   ebx,eax
  406ee2:	xchg   edi,eax
  406ee3:	adc    edi,DWORD PTR [eax+ebp*2-0x54c07991]
  406eea:	aad    0x3
  406eec:	iret   
  406eed:	mov    al,ds:0x79ad2015
  406ef2:	or     ebx,DWORD PTR [edi]
  406ef4:	mov    edx,edx
  406ef6:	out    dx,eax
  406ef7:	clc    
  406ef8:	out    dx,al
  406ef9:	clc    
  406efa:	mov    esp,0x5b740f9d
  406eff:	sub    dh,ah
  406f01:	in     al,0x13
  406f03:	(bad)  
  406f04:	fadd   st(2),st
  406f06:	jg     0x406f6c
  406f08:	and    bl,dl
  406f0a:	inc    eax
  406f0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406f0c:	mov    bl,0xdb
  406f0e:	(bad)  
  406f0f:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  406f11:	and    eax,0x191ac5a3
  406f16:	rcl    BYTE PTR [edi],1
  406f18:	sbb    esi,DWORD PTR [esi+0x7cc6942f]
  406f1e:	push   0x86841fab
  406f23:	popa   
  406f24:	mov    al,ds:0xb8856888
  406f29:	xor    al,0x10
  406f2b:	dec    ebp
  406f2c:	inc    edx
  406f2d:	repnz mov esp,0xd313cd7
  406f33:	sub    ax,0x6f3c
  406f37:	fiadd  DWORD PTR [ecx]
  406f39:	aas    
  406f3a:	mov    edx,0x4b2fa112
  406f3f:	push   ebp
  406f40:	jp     0x406f02
  406f42:	or     al,0x1
  406f44:	mov    BYTE PTR ds:0x746e8cd6,bh
  406f4a:	inc    eax
  406f4b:	pusha  
  406f4c:	mov    ds:0x291ad75d,eax
  406f51:	mov    ?,WORD PTR [eax]
  406f53:	mov    ds:0x9f65c56a,al
  406f58:	ins    DWORD PTR es:[edi],dx
  406f59:	lahf   
  406f5a:	fstp   DWORD PTR [ebx+0xf4a1b67]
  406f60:	test   eax,0x80d8495b
  406f65:	(bad)  
  406f66:	mov    ch,0xf1
  406f68:	sar    DWORD PTR [eax+eiz*8+0x3cedf3b9],cl
  406f6f:	retf   0x6f16
  406f72:	sahf   
  406f73:	icebp  
  406f74:	mov    cl,0x16
  406f76:	test   al,0xe9
  406f78:	jle    0x406f72
  406f7a:	ss es je 0x406f1f
  406f7e:	adc    esi,DWORD PTR [edi-0x19]
  406f81:	jg     0x406f88
  406f83:	jmp    0xe34:0xd2bfda46
  406f8a:	xchg   esp,eax
  406f8b:	xchg   ecx,eax
  406f8c:	and    al,0x29
  406f8e:	jne    0x406f69
  406f90:	jne    0x406f8c
  406f92:	mov    al,0x4d
  406f94:	(bad)  
  406f95:	js     0x406f50
  406f97:	adc    BYTE PTR [ebx+esi*1-0x39309683],0x24
  406f9f:	inc    esi
  406fa0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fa1:	inc    eax
  406fa2:	jge    0x406f55
  406fa4:	mov    esp,0x3f9032a1
  406fa9:	fild   WORD PTR [esi-0x14]
  406fac:	adc    ecx,DWORD PTR [ebp+0x11e48d06]
  406fb2:	(bad)  
  406fb3:	cmp    ah,BYTE PTR [esi+0x36d07e9e]
  406fb9:	jl     0x406f61
  406fbb:	stc    
  406fbc:	dec    edi
  406fbd:	xor    esi,DWORD PTR [edi+0x4d983bbf]
  406fc3:	shl    DWORD PTR [esi+ebx*1-0x6],0x1e
  406fc8:	cli    
  406fc9:	iret   
  406fca:	xchg   BYTE PTR [esi],bl
  406fcc:	jmp    0x34a5:0x96b642f5
  406fd3:	adc    al,0x2c
  406fd5:	stc    
  406fd6:	mov    edi,0xdce186d8
  406fdb:	cmp    BYTE PTR [edx+eax*1+0x52],dh
  406fdf:	and    ecx,ebp
  406fe1:	xchg   ebx,eax
  406fe2:	(bad)  
  406fe3:	cmp    ebp,ebx
  406fe5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406fe6:	pop    esp
  406fe7:	(bad)  [ebx-0x1be74522]
  406fed:	outs   dx,DWORD PTR ds:[esi]
  406fee:	cmc    
  406fef:	jp     0x407057
  406ff1:	push   es
  406ff2:	ins    BYTE PTR es:[edi],dx
  406ff3:	sub    eax,0x41d5c7af
  406ff8:	adc    al,0x54
  406ffa:	nop
  406ffb:	cmc    
  406ffc:	lahf   
  406ffd:	in     al,0x35
  406fff:	repz arpl WORD PTR [edx+0x365f67ed],di
  407006:	enter  0x3e4a,0x88
  40700a:	push   esp
  40700b:	fld    st(4)
  40700d:	loop   0x407084
  40700f:	mov    esp,0x34da9914
  407014:	xor    BYTE PTR [ebx-0x69],ah
  407017:	iret   
  407018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407019:	loop   0x407081
  40701b:	cmc    
  40701c:	shl    BYTE PTR [ecx-0x7a4d202c],cl
  407022:	jmp    0x406fda
  407024:	jne    0x406ffe
  407026:	test   eax,0xdeec6322
  40702b:	nop
  40702c:	fistp  DWORD PTR [edi-0x2e]
  40702f:	fsub   QWORD PTR [ebp-0x2700584]
  407035:	in     eax,0x77
  407037:	sub    dl,BYTE PTR [eax-0x24]
  40703a:	lahf   
  40703b:	xchg   ecx,eax
  40703c:	fiadd  WORD PTR [edi+eiz*2+0x70]
  407040:	adc    ecx,DWORD PTR [edx+0x43f87f2e]
  407046:	ss pop ds
  407048:	cs pop ecx
  40704a:	lock dec edi
  40704c:	popa   
  40704d:	or     ebp,esp
  40704f:	push   cs
  407050:	push   0xd608c9b1
  407055:	test   BYTE PTR [edx],bl
  407057:	mov    ds:0x1e3e7547,al
  40705c:	mov    al,0x8e
  40705e:	hlt    
  40705f:	mov    cl,0xa9
  407061:	dec    esi
  407062:	xchg   ecx,eax
  407063:	xor    dl,ch
  407065:	push   es
  407066:	adc    eax,0x75e09d13
  40706b:	push   0xb361381a
  407070:	and    DWORD PTR [esi+0x16],eax
  407073:	xor    dh,BYTE PTR [ebp+0x37]
  407076:	mov    esp,0x5f62343c
  40707b:	sbb    DWORD PTR [ecx+0x7c],0xc6387ebe
  407082:	ins    BYTE PTR es:[edi],dx
  407083:	add    al,0x4b
  407085:	dec    edi
  407086:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407087:	xor    esi,DWORD PTR [esi]
  407089:	inc    ecx
  40708a:	push   ebp
  40708b:	loope  0x40704a
  40708d:	jmp    0xfdf086a2
  407092:	push   0xf47fcf3d
  407097:	jecxz  0x4070e9
  407099:	test   BYTE PTR ds:0xae082b54,al
  40709f:	pop    ds
  4070a0:	xchg   ebx,eax
  4070a1:	scas   eax,DWORD PTR es:[edi]
  4070a2:	sub    eax,0xc7d576af
  4070a7:	xchg   esp,eax
  4070a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070a9:	jl     0x40705b
  4070ab:	xor    ah,bh
  4070ad:	mov    ebp,0x924c5b7d
  4070b2:	jp     0x4070ba
  4070b4:	cmp    DWORD PTR [ebp+0x6e92196c],esi
  4070ba:	int3   
  4070bb:	cs fninit 
  4070be:	cmp    eax,0x3b11fa3c
  4070c3:	sti    
  4070c4:	pop    es
  4070c5:	dec    esi
  4070c6:	icebp  
  4070c7:	sub    BYTE PTR [eax],bh
  4070c9:	nop
  4070ca:	scas   al,BYTE PTR es:[edi]
  4070cb:	rcr    BYTE PTR [eax+0x45c41d8f],0x54
  4070d2:	cmp    ebp,ebp
  4070d4:	fs and dh,bh
  4070d7:	aam    0x8b
  4070d9:	(bad)  [edx+0x2e]
  4070dc:	cmp    esp,0xfffffffc
  4070df:	jmp    0x407112
  4070e1:	mov    ah,0x8d
  4070e3:	ss add al,0xf0
  4070e6:	(bad)  
  4070e7:	adc    DWORD PTR [edx],eax
  4070e9:	in     eax,0x7f
  4070eb:	add    BYTE PTR [esi-0x60],bl
  4070ee:	data16 mov dl,0xfe
  4070f1:	aas    
  4070f2:	es pop es
  4070f4:	shl    BYTE PTR [ecx+0x4ea43912],cl
  4070fa:	mov    ebp,0xfb4e5cff
  4070ff:	arpl   si,si
  407101:	mov    bl,0xd1
  407103:	xchg   ebx,eax
  407104:	(bad)  [ebx]
  407106:	neg    BYTE PTR [ebp+0x40807a6f]
  40710c:	jne    0x4070f1
  40710e:	popa   
  40710f:	gs jb  0x40711c
  407112:	xchg   ebp,eax
  407113:	(bad)  
  407114:	icebp  
  407115:	nop
  407116:	lea    edi,[ebp-0x673ddc88]
  40711c:	dec    edx
  40711d:	sub    edi,DWORD PTR [edi+edx*1+0x23]
  407121:	push   edi
  407122:	xor    ch,cl
  407124:	pop    eax
  407125:	or     BYTE PTR [esi-0x45],ah
  407128:	aaa    
  407129:	fstp   DWORD PTR [esp+eax*8-0x67a8732e]
  407130:	or     al,0x34
  407132:	mov    ch,0xb5
  407134:	inc    esp
  407135:	test   edi,0xfdaf21fe
  40713b:	cmp    al,0xfb
  40713d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40713e:	arpl   WORD PTR [edi-0x63],bx
  407141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407142:	leave  
  407143:	cwde   
  407144:	fild   QWORD PTR [ecx]
  407146:	arpl   sp,cx
  407148:	pop    ebp
  407149:	aaa    
  40714a:	xor    DWORD PTR [ebx],edi
  40714c:	out    dx,eax
  40714d:	cmp    ecx,DWORD PTR [ebp-0x5fc06f88]
  407153:	shr    dh,cl
  407155:	gs push 0xb6359e84
  40715b:	add    BYTE PTR [edi-0x51],al
  40715e:	push   edi
  40715f:	mov    eax,0x1c1c32ff
  407164:	popa   
  407165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407166:	and    al,0x6a
  407168:	bound  eax,QWORD PTR ds:0x95257105
  40716e:	mov    bl,0xa4
  407170:	xchg   ebp,eax
  407171:	sbb    DWORD PTR [ecx+0x2146ad7d],0xbddd09f9
  40717b:	retf   0x5db4
  40717e:	adc    DWORD PTR [ecx+0x7d],0x65
  407182:	and    BYTE PTR [eax+0x21228ab6],dl
  407188:	push   esi
  407189:	mov    ds:0xd655f41,al
  40718e:	inc    BYTE PTR ds:0xe0c80788
  407194:	(bad)  
  407195:	mov    eax,0x4cc56f97
  40719a:	add    DWORD PTR [ebp+ebx*1-0x36cb0bc3],ebx
  4071a1:	out    0xfa,eax
  4071a3:	inc    edx
  4071a4:	cs push eax
  4071a6:	inc    edi
  4071a7:	and    al,BYTE PTR [esi]
  4071a9:	popa   
  4071aa:	icebp  
  4071ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4071ac:	xor    DWORD PTR [esi-0x2bccb228],ecx
  4071b2:	int    0xe1
  4071b4:	xchg   ebx,eax
  4071b5:	and    cl,BYTE PTR [esi+0x63415e0e]
  4071bb:	jnp    0x4071b2
  4071bd:	cdq    
  4071be:	xlat   BYTE PTR ds:[ebx]
  4071bf:	mov    ds:0xdfaa0bf1,al
  4071c4:	add    dl,BYTE PTR [ecx]
  4071c6:	pcmpgtd mm7,QWORD PTR [ebp+0x2b]
  4071ca:	enter  0x9851,0x45
  4071ce:	nop
  4071cf:	jmp    0x31aa582c
  4071d4:	cmp    ah,al
  4071d6:	or     DWORD PTR [esi+0x3b],edi
  4071d9:	push   0x20
  4071db:	pop    edi
  4071dc:	mov    al,ds:0x2e8ac3ec
  4071e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071e2:	rcl    BYTE PTR [ecx+ecx*1-0x14c32fda],cl
  4071e9:	(bad)  
  4071ea:	lods   eax,DWORD PTR ds:[esi]
  4071eb:	push   edi
  4071ec:	or     esp,DWORD PTR [eax+0x6edb8bcf]
  4071f2:	mov    edx,0x24f20354
  4071f7:	ror    DWORD PTR [ecx],0xb
  4071fa:	je     0x407189
  4071fc:	cwde   
  4071fd:	test   DWORD PTR [edx+0x4d192db3],0x5e34ea6
  407207:	jmp    0x7e43:0x2b386f82
  40720e:	shr    BYTE PTR [ebx],1
  407210:	fwait
  407211:	jnp    0x4071bf
  407213:	das    
  407214:	adc    eax,DWORD PTR [ebx-0x3a9c72a9]
  40721a:	dec    edi
  40721b:	arpl   WORD PTR [ecx+0x5501d50a],cx
  407221:	adc    al,0x9e
  407223:	pop    eax
  407224:	or     eax,0xaff8ab69
  407229:	cdq    
  40722a:	(bad)  
  40722b:	loope  0x4072aa
  40722d:	into   
  40722e:	mov    BYTE PTR [edx-0x8],cl
  407231:	and    al,0xed
  407233:	jo     0x407263
  407235:	ror    BYTE PTR [esi+edx*1+0x54a92050],1
  40723c:	inc    edx
  40723d:	or     al,0x58
  40723f:	mov    ?,WORD PTR [edi-0x58]
  407242:	pop    es
  407243:	(bad)  [eax+ebp*2]
  407246:	pop    ss
  407247:	sub    dl,ch
  407249:	call   0xe02896e4
  40724e:	test   DWORD PTR [edi+0x3622478d],esp
  407254:	outs   dx,DWORD PTR ds:[esi]
  407255:	pop    eax
  407256:	adc    BYTE PTR [edi+0x75dc5a3],bh
  40725c:	popa   
  40725d:	pop    ds
  40725e:	test   BYTE PTR [edx-0x2c93c20c],0xc8
  407265:	add    cl,ch
  407267:	rcr    DWORD PTR [edi-0x31c930a9],cl
  40726d:	ins    BYTE PTR es:[edi],dx
  40726e:	adc    esi,ebp
  407270:	mov    ebp,0x8256c95e
  407275:	fnstcw WORD PTR [eax+0x319bcdee]
  40727b:	ss nop
  40727d:	dec    eax
  40727e:	cli    
  40727f:	imul   ecx,DWORD PTR [ebp+0x7],0xffffffd0
  407283:	jp     0x407243
  407285:	rcl    cl,0x26
  407288:	test   al,0xbf
  40728a:	stc    
  40728b:	ins    BYTE PTR es:[edi],dx
  40728c:	sub    DWORD PTR ds:0xedb5f5a,ebx
  407292:	adc    eax,0x4babdf2f
  407297:	push   ds
  407298:	rcr    esp,cl
  40729a:	(bad)  
  40729b:	jbe    0x4072e7
  40729d:	inc    eax
  40729e:	pop    edi
  40729f:	test   DWORD PTR [esi+0x58],edi
  4072a2:	xor    BYTE PTR [eax+edx*1],dl
  4072a5:	jmp    0x3bf7:0x99960bad
  4072ac:	push   0xffffffc9
  4072ae:	enter  0xeaf4,0xfe
  4072b2:	push   ds
  4072b3:	sub    al,0x70
  4072b5:	adc    cl,BYTE PTR [ebx]
  4072b7:	hlt    
  4072b8:	frstor [ebx+eax*2]
  4072bb:	xchg   edi,eax
  4072bc:	cmovnp ecx,DWORD PTR [ebx+0x3c525110]
  4072c3:	mov    ebx,0x8753906
  4072c8:	pop    ecx
  4072c9:	aas    
  4072ca:	(bad)  
  4072cb:	pop    esi
  4072cc:	hlt    
  4072cd:	shr    BYTE PTR [edx+0x28ff7751],cl
  4072d3:	ds sbb dh,bh
  4072d6:	mov    WORD PTR [ebx+0x19],ss
  4072d9:	aaa    
  4072da:	xchg   esi,eax
  4072db:	or     al,0x9a
  4072dd:	sub    DWORD PTR [edi-0x2dc3e09e],esi
  4072e3:	mov    cl,0xf4
  4072e5:	push   ds
  4072e6:	jge    0x40733b
  4072e8:	ret    0xbffd
  4072eb:	sub    eax,0xe07c3b7b
  4072f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072f1:	mov    ds:0xb40588b3,eax
  4072f6:	imul   ebx,DWORD PTR [eax+0x35e20884],0x6b
  4072fd:	iret   
  4072fe:	lea    ebx,[eax-0x61]
  407301:	inc    edi
  407302:	push   ds
  407303:	or     al,0x8
  407305:	adc    BYTE PTR [ebx+0x72],dl
  407308:	mov    bh,0x62
  40730a:	test   eax,0x60f9cbc2
  40730f:	ss ins DWORD PTR es:[edi],dx
  407311:	mov    cl,0x82
  407313:	pop    es
  407314:	hlt    
  407315:	pop    ss
  407316:	dec    edi
  407317:	sar    cl,0x25
  40731a:	addr16 jb 0x407349
  40731d:	mov    bl,0xca
  40731f:	mov    ds:0xb9f0f9a1,al
  407324:	mov    dl,0x39
  407326:	cwde   
  407327:	cdq    
  407328:	add    al,BYTE PTR [ecx+0x0]
  40732b:	inc    edi
  40732c:	rcl    BYTE PTR [eax+ecx*4+0x37],0x81
  407331:	int    0x76
  407333:	sub    ch,BYTE PTR [ecx]
  407335:	jmp    0x496f:0x3ef1f92f
  40733c:	shr    BYTE PTR [eax-0x6f3cfb63],0xcf
  407343:	mov    ch,0x2f
  407345:	in     eax,dx
  407346:	enter  0x9125,0xf2
  40734a:	imul   esi,esp,0x99984cb2
  407350:	outs   dx,BYTE PTR ds:[esi]
  407351:	dec    ebp
  407352:	sub    DWORD PTR [eax-0x7c],edi
  407355:	mov    ah,0x8b
  407357:	sub    edi,ebx
  407359:	leave  
  40735a:	jl     0x4072ed
  40735c:	test   DWORD PTR [eax+0x46702b11],esi
  407362:	sub    BYTE PTR [ebx],dh
  407364:	xor    al,0xc0
  407366:	pop    ss
  407367:	sbb    ebp,0x6d7091c6
  40736d:	test   al,0xcc
  40736f:	mov    ecx,DWORD PTR [esi+0x73]
  407372:	pop    edx
  407373:	inc    eax
  407374:	xor    DWORD PTR [ebx],ecx
  407376:	dec    eax
  407377:	inc    ecx
  407378:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407379:	sbb    DWORD PTR [eax+eiz*2-0x52],ebx
  40737d:	add    DWORD PTR [eax-0x1f0c9acb],esi
  407383:	dec    ebp
  407384:	mov    dl,0x25
  407386:	js     0x4073c3
  407388:	enter  0xba73,0xe4
  40738c:	mov    ds:0xfa0ca614,al
  407391:	iret   
  407392:	xlat   BYTE PTR ds:[ebx]
  407394:	mov    bh,0x5c
  407396:	cli    
  407397:	fsub   st(1),st
  407399:	xchg   DWORD PTR [eax],edi
  40739b:	sub    BYTE PTR [ecx],cl
  40739d:	xchg   DWORD PTR [ecx-0x306503ae],eax
  4073a3:	imul   esp,eax,0xffffffd8
  4073a6:	gs inc ecx
  4073a8:	imul   eax
  4073aa:	std    
  4073ab:	fwait
  4073ac:	mov    eax,ds:0x8017dfb4
  4073b1:	cli    
  4073b2:	jbe    0x407413
  4073b4:	loope  0x407388
  4073b6:	pop    eax
  4073b7:	sti    
  4073b8:	mov    al,ds:0x7ddda91e
  4073bd:	push   ds
  4073be:	add    al,BYTE PTR [edi]
  4073c0:	retf   
  4073c1:	mov    al,0x82
  4073c3:	mul    BYTE PTR [ebx]
  4073c5:	or     BYTE PTR [ecx-0x12041fef],dh
  4073cb:	pop    eax
  4073cc:	idiv   DWORD PTR [edx]
  4073ce:	pop    ecx
  4073cf:	mov    fs,WORD PTR [edx-0x24]
  4073d2:	enter  0x9f0e,0x61
  4073d6:	jge    0x4073fc
  4073d8:	sbb    al,0x61
  4073da:	loope  0x40736a
  4073dc:	jmp    0xb57a0c51
  4073e1:	imul   ecx,esp,0xffffffac
  4073e4:	cld    
  4073e5:	icebp  
  4073e6:	mov    WORD PTR [esi*8-0x3b14883],es
  4073ed:	repnz outs dx,DWORD PTR ds:[esi]
  4073ef:	scas   al,BYTE PTR es:[edi]
  4073f0:	xor    cl,ah
  4073f2:	xor    bl,dl
  4073f4:	ja     0x4073b1
  4073f6:	or     eax,0xabb193ac
  4073fb:	std    
  4073fc:	lea    ebx,[ecx+0x79]
  4073ff:	stos   BYTE PTR es:[edi],al
  407400:	std    
  407401:	xor    BYTE PTR [ecx],dh
  407403:	hlt    
  407404:	je     0x4073de
  407406:	or     bh,BYTE PTR [ebx*2-0x59f85c0d]
  40740d:	sub    esi,DWORD PTR [ebx]
  40740f:	cmp    eax,0x16caadf1
  407414:	inc    ebp
  407415:	jb     0x4073b7
  407417:	ins    BYTE PTR es:[edi],dx
  407418:	int    0x92
  40741a:	test   BYTE PTR [ecx],bl
  40741c:	pop    esi
  40741d:	cmp    BYTE PTR [ecx+ecx*1+0x69],ah
  407421:	sahf   
  407422:	adc    ebp,DWORD PTR [edx+0x17]
  407425:	daa    
  407426:	pusha  
  407427:	mov    ds:0x585ba7ad,al
  40742c:	test   al,0x93
  40742e:	xor    eax,DWORD PTR [ebp+ebx*8+0x1581b00c]
  407435:	rcpps  xmm2,XMMWORD PTR [edi]
  407438:	imul   eax,DWORD PTR [ebp-0x10cbac25],0x22cd4b3
  407442:	fwait
  407443:	vmaxss xmm7,xmm3,DWORD PTR [esi]
  407447:	sub    dl,dh
  407449:	rol    BYTE PTR [ecx+0x7f934a89],cl
  40744f:	inc    esi
  407450:	jecxz  0x4074b4
  407452:	aad    0x1f
  407454:	pop    esi
  407455:	daa    
  407456:	push   0xfffffff7
  407458:	les    ebp,FWORD PTR ds:0xea51d86
  40745e:	mov    bl,0xf6
  407460:	sbb    BYTE PTR [esi+eax*2],al
  407463:	outs   dx,DWORD PTR gs:[esi]
  407465:	mov    ecx,0x44bd15e2
  40746a:	or     edi,edx
  40746c:	test   eax,0x289568fd
  407471:	sbb    DWORD PTR ds:0x33eebf9f,edi
  407477:	mov    esi,0x63c12b0c
  40747c:	cli    
  40747d:	fadd   DWORD PTR [ebx]
  40747f:	clc    
  407480:	sbb    eax,edx
  407482:	les    esi,FWORD PTR [ecx+eax*8]
  407485:	mov    ebx,0x9760cbe8
  40748a:	xor    eax,0xd202643e
  40748f:	adc    eax,0x10ebfb98
  407494:	nop
  407495:	sub    DWORD PTR [edx],ebx
  407497:	sbb    DWORD PTR [esi+0x7d9b938e],eax
  40749d:	xor    al,0x2e
  40749f:	push   es
  4074a0:	ret    0x4522
  4074a3:	cmp    ecx,DWORD PTR [esi+eiz*4-0x44]
  4074a7:	ss es jnp 0x407447
  4074ab:	adc    al,0x8b
  4074ad:	mov    BYTE PTR [edi],ch
  4074af:	inc    esp
  4074b0:	adc    dh,BYTE PTR [edx-0x7e99fb3d]
  4074b6:	or     cl,bl
  4074b8:	daa    
  4074b9:	rcl    DWORD PTR [esi+eax*1],0xf8
  4074bd:	jnp    0x4074cf
  4074bf:	xchg   edx,eax
  4074c0:	add    DWORD PTR [esi-0xacdc31b],0x1a
  4074c7:	push   ss
  4074c8:	jge    0x40749a
  4074ca:	cdq    
  4074cb:	mov    ds:0xf1d3e04e,eax
  4074d0:	jno    0x407496
  4074d2:	or     BYTE PTR [esi-0x68],0xe4
  4074d6:	xlat   BYTE PTR ds:[ebx]
  4074d7:	outs   dx,DWORD PTR ds:[esi]
  4074d8:	mov    dl,BYTE PTR [ecx]
  4074da:	fcomip st,st(4)
  4074dc:	addr16 push edx
  4074de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074df:	iret   
  4074e0:	mov    cl,0x9
  4074e2:	(bad)  
  4074e3:	shl    eax,cl
  4074e5:	push   eax
  4074e6:	or     ebx,edx
  4074e8:	cmp    ch,BYTE PTR [esi+0x37]
  4074eb:	fldenv [eax-0x41fee335]
  4074f1:	sbb    BYTE PTR [ecx-0x60],cl
  4074f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074f5:	add    eax,0x2a9fe829
  4074fa:	push   ebp
  4074fb:	dec    ecx
  4074fc:	sub    al,0x96
  4074fe:	cmp    BYTE PTR [edi+ebp*2-0x66],bl
  407502:	inc    BYTE PTR [esp+eax*4]
  407505:	adc    al,BYTE PTR [ebx+0x48551e98]
  40750b:	repnz movs DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40750e:	sub    dl,BYTE PTR [ebp+0x468e8d14]
  407514:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407515:	(bad)  [edx+ecx*4]
  407518:	sub    eax,0x41a1142c
  40751d:	pop    ebx
  40751e:	jmp    0xf11d:0xc73c69e2
  407525:	xchg   DWORD PTR [esp+eiz*4-0x57],edi
  407529:	xlat   BYTE PTR ds:[ebx]
  40752a:	ja     0x4074f3
  40752c:	dec    edi
  40752d:	stos   DWORD PTR es:[edi],eax
  40752e:	jns    0x407581
  407530:	push   ebp
  407531:	jno    0xeec5786c
  407537:	xchg   ebx,eax
  407538:	mov    ebp,0x7e3e7598
  40753d:	xlat   BYTE PTR ds:[ebx]
  40753e:	xor    bl,BYTE PTR [ebx+esi*4+0x30]
  407542:	in     al,dx
  407543:	out    dx,al
  407544:	loopne 0x407569
  407546:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407547:	and    cl,bl
  407549:	pusha  
  40754a:	out    0x70,al
  40754c:	out    dx,eax
  40754d:	pop    eax
  40754e:	xchg   ebp,eax
  40754f:	clc    
  407550:	in     eax,0x8b
  407552:	outs   dx,BYTE PTR ds:[esi]
  407553:	cmp    al,0xa9
  407555:	pop    eax
  407556:	fadd   QWORD PTR [eax]
  407558:	push   ds
  407559:	push   ss
  40755a:	cmc    
  40755b:	int3   
  40755c:	iret   
  40755d:	push   ecx
  40755e:	xchg   BYTE PTR [eax-0x32ea59b5],dl
  407564:	iret   
  407565:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407566:	xor    DWORD PTR [edx],ecx
  407568:	mov    esp,0x165b1eb9
  40756d:	pop    ebp
  40756e:	out    0x9f,eax
  407570:	jbe    0x4075bb
  407572:	aaa    
  407573:	fimul  WORD PTR [ecx+0x99c9d6]
  407579:	neg    bh
  40757b:	jmp    0xdd495c0
  407580:	mov    bl,0x5d
  407582:	mov    eax,DWORD PTR [esi-0x49]
  407585:	push   0x10be5079
  40758a:	mov    BYTE PTR [ecx],ah
  40758c:	push   edi
  40758d:	adc    BYTE PTR [esi],0xd4
  407590:	pop    edx
  407591:	add    DWORD PTR [eax],ebx
  407593:	(bad)  
  407594:	out    dx,al
  407595:	xchg   esp,eax
  407596:	aad    0xd
  407598:	xor    esi,ebx
  40759a:	aad    0x1b
  40759c:	and    BYTE PTR [eax],bl
  40759e:	push   ecx
  40759f:	mov    ecx,0x1ac03663
  4075a4:	jmp    0xe984:0x631d4f99
  4075ab:	adc    edx,ebx
  4075ad:	mov    ds:0xc08b7f1,al
  4075b2:	mov    dl,0x49
  4075b4:	jle    0x40760d
  4075b6:	jnp    0x40756a
  4075b8:	and    BYTE PTR [edx],dl
  4075ba:	fnstenv [eax-0x1f942220]
  4075c0:	jmp    ecx
  4075c2:	popa   
  4075c3:	jge    0x40762d
  4075c5:	xchg   esi,eax
  4075c6:	jo     0x4075af
  4075c8:	mov    ds:0xaacceff,eax
  4075cd:	sbb    BYTE PTR [ebp+0x57118dcd],dl
  4075d3:	inc    esi
  4075d4:	inc    ecx
  4075d5:	push   esi
  4075d6:	fmul   st,st(5)
  4075d8:	loope  0x4075db
  4075da:	sbb    eax,0x68977c6c
  4075df:	loopne 0x4075b6
  4075e1:	ins    DWORD PTR es:[edi],dx
  4075e2:	inc    ecx
  4075e3:	xor    eax,0x9b4e0d
  4075e8:	pop    edi
  4075e9:	in     al,dx
  4075ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4075eb:	mov    edx,0x37157c69
  4075f0:	add    ch,al
  4075f2:	cli    
  4075f3:	ds jae 0x407592
  4075f6:	jl     0x4075ec
  4075f8:	rcl    BYTE PTR [eax+ecx*2-0x371381b5],cl
  4075ff:	push   edi
  407600:	and    ebp,eax
  407602:	or     DWORD PTR [edi+0x3da2b331],0x5e190236
  40760c:	inc    edx
  40760d:	(bad)  
  40760e:	js     0x4075a0
  407610:	xchg   BYTE PTR [edi+0x27907fb7],cl
  407616:	cs jg  0x40767b
  407619:	jmp    0x7eec:0x82b6ed30
  407620:	pusha  
  407621:	pushf  
  407622:	sbb    al,BYTE PTR [edi-0x52c1fe66]
  407628:	jle    0x4075b2
  40762a:	rol    BYTE PTR [ecx],0xe
  40762d:	xchg   ebx,eax
  40762e:	daa    
  40762f:	pop    esp
  407630:	and    al,0x5f
  407632:	push   ebp
  407633:	aad    0xae
  407635:	xor    esi,DWORD PTR ds:[eax+0xe]
  407639:	(bad)  
  40763a:	dec    esp
  40763b:	in     eax,0xbe
  40763d:	aad    0xd3
  40763f:	es shl ecx,0xc6
  407643:	mov    dl,BYTE PTR ds:0xe9d6dc79
  407649:	mov    ds:0xf812df50,eax
  40764e:	mov    bl,0x5f
  407650:	jb     0x407680
  407652:	rcr    edi,0xb9
  407655:	mov    BYTE PTR [ebp-0x5],bh
  407658:	(bad)  
  407659:	fisttp DWORD PTR [eax]
  40765b:	stos   DWORD PTR es:[edi],eax
  40765c:	xor    eax,0xa217861b
  407661:	sahf   
  407662:	dec    ebp
  407663:	push   cs
  407664:	in     eax,dx
  407665:	in     eax,0xb6
  407667:	sub    eax,0xc5f56d6a
  40766c:	fiadd  WORD PTR [ebx]
  40766e:	push   ebx
  40766f:	aad    0xba
  407671:	fdivr  DWORD PTR [ebx+0x3aaa8da1]
  407677:	adc    ebx,esp
  407679:	sbb    eax,ebx
  40767b:	les    ebx,FWORD PTR [ecx+0x73]
  40767e:	cli    
  40767f:	and    eax,DWORD PTR [edi+ebp*8+0x537aab52]
  407686:	inc    ebp
  407687:	ficom  WORD PTR [edx-0x28a0c84f]
  40768d:	retf   0x25ff
  407690:	repnz das 
  407692:	mov    ds:0x94f47397,eax
  407697:	and    DWORD PTR [ebp+0x4d92c5bd],esi
  40769d:	dec    ecx
  40769e:	cmp    al,0x3b
  4076a0:	or     edx,edx
  4076a2:	fiadd  DWORD PTR [edi-0x691885d1]
  4076a8:	popf   
  4076a9:	ret    
  4076aa:	and    al,0xd4
  4076ac:	jb     0x407641
  4076ae:	push   0xfffffffd
  4076b0:	bound  edx,QWORD PTR [edi+ebx*2-0x364138ae]
  4076b7:	and    cl,ch
  4076b9:	push   edx
  4076ba:	push   ecx
  4076bb:	sbb    BYTE PTR [ecx-0x458d1764],al
  4076c1:	sahf   
  4076c2:	or     al,0xb
  4076c4:	jge    0x4076a0
  4076c6:	sub    DWORD PTR [esp+edi*2],ebp
  4076c9:	es dec esi
  4076cb:	adc    BYTE PTR [ecx],al
  4076cd:	xchg   edi,eax
  4076ce:	sbb    dh,BYTE PTR [edx+0x33]
  4076d1:	cmp    DWORD PTR ds:0x5d4920fd,esp
  4076d7:	and    esp,esp
  4076d9:	add    eax,0x96a7df7f
  4076de:	stc    
  4076df:	das    
  4076e0:	cmp    eax,0xfe4eb12a
  4076e5:	mov    bh,0x6e
  4076e8:	test   DWORD PTR [esi+ecx*8-0x3c],0x364cac4f
  4076f0:	sahf   
  4076f1:	pop    ss
  4076f2:	je     0x4076f6
  4076f4:	jns    0x407737
  4076f6:	ret    
  4076f7:	pushf  
  4076f8:	push   cs
  4076f9:	sbb    dl,al
  4076fb:	out    dx,al
  4076fc:	mov    ds:0xc944ac67,eax
  407701:	mov    ah,0xb5
  407703:	pop    edx
  407704:	retf   
  407705:	in     eax,dx
  407706:	enter  0x90c3,0x18
  40770a:	iret   
  40770b:	sahf   
  40770c:	(bad)  
  40770e:	fild   QWORD PTR [eax-0x12]
  407711:	sbb    BYTE PTR [edx+edx*1],dl
  407714:	cmp    BYTE PTR ds:0xb2941b61,bh
  40771a:	fsubr  st(1),st
  40771c:	push   cs
  40771d:	(bad)  
  40771e:	or     eax,0xf2d6856e
  407723:	pop    esi
  407724:	shl    BYTE PTR [esi+0x7],0xcd
  407728:	iret   
  407729:	jno    0x40779e
  40772b:	shr    BYTE PTR [ecx-0x23],cl
  40772e:	sub    DWORD PTR [ecx+0x1],esi
  407731:	mov    ebx,0x2afb11ca
  407736:	(bad)  
  407737:	dec    BYTE PTR [edi-0x57]
  40773a:	pop    esp
  40773b:	je     0x407772
  40773d:	rol    edx,cl
  40773f:	mov    eax,0xc6857cef
  407744:	sub    DWORD PTR [ecx+0xf],0x58
  407748:	xlat   BYTE PTR ds:[ebx]
  407749:	and    eax,0x792d9ac3
  40774e:	mov    edi,DWORD PTR [eax+0x10]
  407751:	and    bl,BYTE PTR [ecx]
  407753:	hlt    
  407754:	push   0x4a
  407756:	(bad)  
  407757:	icebp  
  407758:	out    0xa2,al
  40775a:	or     DWORD PTR [ebx],esp
  40775c:	les    eax,FWORD PTR [edi-0x588f00d1]
  407762:	stos   DWORD PTR es:[edi],eax
  407763:	adc    BYTE PTR [eax+0x1f3c3df2],ah
  407769:	mov    al,0x2
  40776b:	mov    ds:0xcb225494,al
  407770:	aaa    
  407771:	fst    QWORD PTR [esi]
  407773:	je     0x4076f6
  407775:	jns    0x4077ba
  407777:	sub    al,0x6d
  407779:	or     DWORD PTR [ecx-0x65393e88],ecx
  40777f:	xchg   ebp,eax
  407780:	inc    edx
  407781:	daa    
  407782:	cmp    eax,0x2944cd00
  407787:	cli    
  407788:	daa    
  407789:	adc    DWORD PTR [ecx+ebx*1+0x2c354909],0xe9503349
  407794:	sbb    bh,BYTE PTR [edx-0x41]
  407797:	imul   esi,ecx,0x60
  40779a:	pop    ss
  40779b:	xchg   esi,eax
  40779c:	cmc    
  40779d:	aas    
  40779e:	addr16 sub al,0xd3
  4077a1:	sahf   
  4077a2:	mov    ds:0x362d367c,eax
  4077a7:	cmp    eax,0xab1f452d
  4077ac:	adc    ecx,esp
  4077ae:	pushf  
  4077af:	xor    cl,BYTE PTR [edi+0x3d]
  4077b2:	jl     0x4077ea
  4077b4:	jl     0x40782a
  4077b6:	les    eax,FWORD PTR [ecx]
  4077b8:	mov    ecx,0x3235d8df
  4077bd:	jo     0x407839
  4077bf:	push   edi
  4077c0:	icebp  
  4077c1:	pusha  
  4077c2:	ret    
  4077c3:	mov    ebx,0xb0006052
  4077c8:	and    eax,0x66031287
  4077cd:	stc    
  4077ce:	cmp    ch,BYTE PTR [esi+ebx*1-0x46f67784]
  4077d5:	test   dh,dh
  4077d7:	jle    0x407835
  4077d9:	add    dl,bh
  4077db:	retf   0x94ce
  4077de:	dec    ecx
  4077df:	popf   
  4077e0:	cli    
  4077e1:	or     BYTE PTR [ecx],cl
  4077e3:	sub    eax,0x51af7bb4
  4077e8:	mov    dh,0xd9
  4077ea:	mov    edx,0x5dee1172
  4077ef:	dec    ebx
  4077f0:	enter  0x9abd,0x97
  4077f4:	inc    esp
  4077f5:	icebp  
  4077f6:	mov    ch,0xc2
  4077f8:	ins    BYTE PTR es:[edi],dx
  4077f9:	outs   dx,DWORD PTR ds:[esi]
  4077fa:	xor    eax,0xa0c0d093
  4077ff:	or     eax,0x491e0606
  407804:	inc    ecx
  407805:	lahf   
  407806:	jp     0x407883
  407808:	push   esp
  407809:	add    dh,BYTE PTR ds:0xd61b76d0
  40780f:	fild   DWORD PTR [esi-0x3c99efc3]
  407815:	mov    al,0x89
  407817:	xchg   esp,eax
  407818:	xor    eax,0x7e15a298
  40781d:	push   eax
  40781e:	jae    0x4077b2
  407820:	jae    0x407822
  407822:	inc    edi
  407823:	cli    
  407824:	iret   
  407825:	je     0x407848
  407827:	sub    esi,DWORD PTR [ecx+ecx*4-0x61]
  40782b:	(bad)  
  40782d:	xchg   sp,ax
  40782f:	mov    esi,0xe6980939
  407834:	int    0xc8
  407836:	jecxz  0x4078b0
  407838:	push   esp
  407839:	repnz imul DWORD PTR [edx+esi*8-0x38449d64]
  407841:	retf   0xaa1c
  407844:	in     al,dx
  407845:	lock mov eax,0x3972a4a3
  40784b:	sub    BYTE PTR [ebx],al
  40784d:	adc    edx,DWORD PTR [ecx+0x7680ed47]
  407853:	sub    ah,BYTE PTR [eax]
  407855:	jmp    0xbc0d483e
  40785a:	xchg   BYTE PTR [edi-0x7a],ch
  40785d:	dec    esi
  40785e:	sti    
  40785f:	pop    ebp
  407860:	jmp    0x2ca19e2a
  407865:	int    0x66
  407867:	xchg   ebp,eax
  407868:	mov    ds:0x15e887a9,eax
  40786d:	cs push esi
  40786f:	dec    edi
  407870:	pop    es
  407871:	rol    BYTE PTR [ebx-0x60c975f0],1
  407877:	test   al,dl
  407879:	loope  0x407882
  40787b:	pop    ebx
  40787c:	ret    
  40787d:	cmp    esi,DWORD PTR [ebx]
  40787f:	push   0x6d
  407881:	dec    eax
  407882:	push   edx
  407883:	pop    ss
  407884:	lods   al,BYTE PTR ds:[esi]
  407885:	jecxz  0x407823
  407887:	out    0x58,eax
  407889:	inc    esp
  40788a:	or     DWORD PTR [eax],esi
  40788c:	inc    esp
  40788d:	test   DWORD PTR ds:0x63d9d827,0x720cb347
  407897:	imul   ebx,DWORD PTR [esi-0x3b835347],0xcdc403c9
  4078a1:	inc    ebp
  4078a2:	and    eax,DWORD PTR [ebx+0x32]
  4078a5:	pusha  
  4078a6:	enter  0x264,0x7
  4078aa:	pop    eax
  4078ab:	sub    eax,0x660112b
  4078b0:	in     al,dx
  4078b1:	xor    BYTE PTR [ecx+0x208154e9],dl
  4078b7:	jge    0x407864
  4078b9:	inc    esp
  4078ba:	test   DWORD PTR [ecx],edi
  4078bc:	xor    esi,DWORD PTR [edi-0x16]
  4078bf:	jmp    0xc87a:0xe1371143
  4078c6:	adc    esi,DWORD PTR [ebp+ecx*1+0x1]
  4078ca:	jae    0x4078bb
  4078cc:	xchg   edx,eax
  4078cd:	dec    esp
  4078ce:	xor    al,0x1b
  4078d0:	out    0x25,al
  4078d2:	push   es
  4078d3:	into   
  4078d4:	ja     0x4078d1
  4078d6:	in     al,0xe3
  4078d8:	sbb    BYTE PTR [ebp+0x5c],ah
  4078db:	gs ins DWORD PTR es:[edi],dx
  4078dd:	mov    edx,0xfeaf4d68
  4078e2:	loop   0x407870
  4078e4:	mov    ch,0xa
  4078e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4078e7:	jmp    0xcdbf:0xb1f17af6
  4078ee:	mov    dh,0xe2
  4078f0:	icebp  
  4078f1:	ins    BYTE PTR es:[edi],dx
  4078f2:	ds cli 
  4078f4:	xchg   esi,eax
  4078f5:	cvtdq2ps xmm4,XMMWORD PTR [ebp-0x3b6f179e]
  4078fc:	dec    esi
  4078fd:	fsub   DWORD PTR [ebp+eiz*2+0x75]
  407901:	test   eax,0xfad51672
  407906:	cmp    DWORD PTR [ebp-0x24aa8695],esp
  40790c:	xor    dl,BYTE PTR [ebp-0x7b7ec504]
  407912:	mov    eax,0xdadadde1
  407917:	mov    ch,0xac
  407919:	or     DWORD PTR [ebp+0x2736e185],edx
  40791f:	dec    esp
  407920:	(bad)  
  407921:	push   ecx
  407922:	shl    BYTE PTR [esi-0x2eb201dd],cl
  407928:	add    eax,0x7d958d56
  40792d:	xchg   edx,eax
  40792e:	scas   al,BYTE PTR es:[edi]
  40792f:	push   edi
  407930:	push   ebp
  407931:	adc    DWORD PTR [edi+ebx*4+0x746d8e82],edx
  407938:	jmp    0xf6f0:0x7ff81f5
  40793f:	(bad)  
  407940:	mov    edi,0xc80267e1
  407945:	ins    BYTE PTR es:[edi],dx
  407946:	fidiv  DWORD PTR ds:0x9adcfa8b
  40794c:	mov    edi,gs
  40794e:	outs   dx,BYTE PTR ds:[esi]
  40794f:	fchs   
  407951:	cmp    al,BYTE PTR [edx]
  407953:	je     0x4078f3
  407955:	pop    ds
  407956:	or     BYTE PTR [esi+ebx*1+0x39c742dc],ch
  40795d:	mov    edi,0xab76a4a9
  407962:	test   esi,ebx
  407964:	xchg   ebp,eax
  407965:	cwde   
  407966:	mov    eax,0xebe0a7ba
  40796b:	lea    ebp,[ebx+0x3449ac7a]
  407971:	out    dx,al
  407972:	xchg   ebp,eax
  407973:	push   0x4f57d31e
  407978:	test   bh,0xe3
  40797b:	mov    edi,0xb51daaf2
  407980:	jnp    0x4079f6
  407982:	ret    
  407983:	inc    ecx
  407984:	outs   dx,DWORD PTR ds:[esi]
  407985:	cld    
  407986:	mov    edi,0x7a19ef4b
  40798b:	and    al,BYTE PTR [edx+ecx*1+0xa]
  40798f:	add    ecx,DWORD PTR [ebp-0xe245731]
  407995:	mov    bl,0x5a
  407997:	adc    ecx,edx
  407999:	pop    esp
  40799a:	out    dx,al
  40799b:	hlt    
  40799c:	aad    0x32
  40799e:	xor    eax,0xa6b9a659
  4079a3:	push   ss
  4079a4:	mov    ds:0xddb57c64,eax
  4079a9:	out    0x96,eax
  4079ab:	stos   DWORD PTR es:[edi],eax
  4079ac:	aas    
  4079ad:	inc    edi
  4079ae:	in     eax,0x81
  4079b0:	loop   0x407980
  4079b2:	add    eax,0x836fe701
  4079b7:	ja     0x407a17
  4079b9:	dec    esp
  4079ba:	aaa    
  4079bb:	inc    edi
  4079bc:	cmp    BYTE PTR [edi+0x3cc5b2e1],bh
  4079c2:	xchg   ebp,eax
  4079c3:	and    al,cl
  4079c5:	mov    edx,0xf0ed1d38
  4079ca:	pop    esp
  4079cb:	cld    
  4079cc:	js     0x407a4a
  4079ce:	jg     0x407977
  4079d0:	pop    ss
  4079d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079d2:	cmp    al,0x8e
  4079d4:	test   DWORD PTR [edx+0x1e74b39b],esi
  4079da:	cwde   
  4079db:	lds    ebp,FWORD PTR [ebx]
  4079dd:	push   ds
  4079de:	aad    0x60
  4079e0:	arpl   WORD PTR [ebp+0x25],sp
  4079e3:	mov    cl,0x6
  4079e5:	in     eax,dx
  4079e6:	sbb    ecx,esp
  4079e8:	lds    esi,FWORD PTR [ebx+ecx*2-0x54]
  4079ec:	out    dx,al
  4079ed:	test   DWORD PTR [edx],ebp
  4079ef:	sar    BYTE PTR [ebp-0x4d],cl
  4079f2:	pop    esi
  4079f3:	xor    eax,0xd61d5804
  4079f8:	cmp    esp,edi
  4079fa:	inc    ecx
  4079fb:	ret    
  4079fc:	(bad)  
  4079fd:	push   esp
  4079fe:	mov    edi,0x407301ea
  407a03:	mov    ch,BYTE PTR [esi+0x5e]
  407a06:	into   
  407a07:	and    eax,0x15b0333
  407a0c:	inc    edi
  407a0d:	shl    BYTE PTR [ecx],cl
  407a0f:	imul   BYTE PTR [esi+eiz*1]
  407a12:	aad    0x5a
  407a14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a15:	js     0x407a5e
  407a17:	outs   dx,BYTE PTR ds:[esi]
  407a18:	jnp    0x407a2d
  407a1a:	and    eax,0xbe77dd97
  407a1f:	or     eax,0x9952f248
  407a24:	outs   dx,BYTE PTR ds:[esi]
  407a25:	mov    ecx,0x7836037f
  407a2a:	inc    edx
  407a2b:	int    0x6c
  407a2d:	(bad)  
  407a2e:	stos   DWORD PTR es:[edi],eax
  407a2f:	enter  0x7ebd,0x92
  407a33:	outs   dx,BYTE PTR ds:[esi]
  407a34:	mov    DWORD PTR [ebx-0x1a],ebx
  407a37:	push   ebx
  407a38:	push   es
  407a39:	ss sub bl,dl
  407a3c:	push   cs
  407a3d:	mov    ds:0x7f9bdff3,al
  407a42:	cli    
  407a43:	inc    ecx
  407a44:	out    0x2e,al
  407a46:	(bad)  
  407a47:	dec    ecx
  407a48:	or     bh,BYTE PTR [esi]
  407a4a:	jns    0x4079da
  407a4c:	xchg   esi,eax
  407a4d:	xlat   BYTE PTR ds:[ebx]
  407a4e:	sar    DWORD PTR [eax+edx*4-0x51cf4635],cl
  407a55:	shr    BYTE PTR [edx+0x663412d3],0xf
  407a5c:	mov    BYTE PTR [ecx+0x3d],0x32
  407a60:	and    cl,BYTE PTR [ecx+eax*2]
  407a63:	bound  esi,QWORD PTR [ebp-0x7bd50ee5]
  407a69:	ds jp  0x407a4a
  407a6c:	outs   dx,BYTE PTR ds:[esi]
  407a6d:	inc    eax
  407a6e:	push   0x1d
  407a70:	jg     0x407a06
  407a72:	repnz pop esp
  407a74:	in     eax,0x6
  407a76:	xchg   esi,eax
  407a77:	add    al,0x60
  407a79:	cmp    BYTE PTR [edi],0x30
  407a7c:	js     0x407a5a
  407a7e:	pusha  
  407a7f:	mov    ah,BYTE PTR [edx+0x25e9ae51]
  407a85:	rcr    DWORD PTR [edi],0x22
  407a88:	pusha  
  407a89:	push   edx
  407a8a:	sti    
  407a8b:	mov    ebp,0xf6fc7871
  407a90:	cmp    eax,DWORD PTR [eax+edx*2+0x1d7ffce7]
  407a97:	cwde   
  407a98:	inc    esi
  407a99:	mov    ch,0xeb
  407a9b:	icebp  
  407a9c:	inc    ebp
  407a9d:	jmp    0x8eb0:0xcabe41f8
  407aa4:	jge    0x407ad3
  407aa6:	add    eax,0x741a0e53
  407aab:	test   ch,0xed
  407aae:	inc    esp
  407aaf:	out    0x82,al
  407ab1:	nop
  407ab2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ab3:	xor    eax,0xc5f6e37e
  407ab8:	jl     0x407a53
  407aba:	es xor eax,0xb9a328f7
  407ac0:	xchg   ebx,eax
  407ac1:	fild   WORD PTR [esi]
  407ac3:	mov    bh,0x7b
  407ac5:	aaa    
  407ac6:	(bad)  
  407ac7:	mov    ds,WORD PTR [ebp-0x5e]
  407aca:	adc    al,0x20
  407acc:	fs call 0x74675ea6
  407ad2:	popf   
  407ad3:	mov    dh,0xc0
  407ad5:	mov    ds:0x8ff34021,eax
  407ada:	div    BYTE PTR [ecx]
  407adc:	jnp    0x407a8b
  407ade:	add    al,BYTE PTR [ebp-0x3ed9197e]
  407ae4:	loopne 0x407aec
  407ae6:	or     al,0x48
  407ae8:	cmp    al,0xa8
  407aea:	xchg   edx,eax
  407aeb:	outs   dx,DWORD PTR ds:[esi]
  407aec:	jecxz  0x407b05
  407aee:	adc    al,0x2
  407af0:	cwde   
  407af1:	mov    edx,0x4b26148c
  407af6:	fimul  DWORD PTR [edx-0x46979a3a]
  407afc:	ja     0x407ae8
  407afe:	aaa    
  407aff:	clc    
  407b00:	adc    DWORD PTR [ecx-0x7fefde02],ebx
  407b06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b07:	mov    WORD PTR [eax],fs
  407b09:	sar    DWORD PTR [ebx+0x7f],cl
  407b0c:	fiadd  WORD PTR [edi-0x14]
  407b0f:	loop   0x407b84
  407b11:	mov    edx,0x595b0764
  407b16:	jo     0x407b2e
  407b18:	(bad)  
  407b19:	(bad)  
  407b1a:	and    DWORD PTR [eax],ebp
  407b1c:	adc    BYTE PTR [esp+ebp*1],0xca
  407b20:	je     0x407ae3
  407b22:	shl    BYTE PTR [ecx-0x12],0x26
  407b26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407b27:	pop    ebx
  407b28:	adc    bh,0xb9
  407b2b:	push   esi
  407b2c:	test   BYTE PTR [esi+0x77c0b174],cl
  407b32:	fwait
  407b33:	push   ebx
  407b34:	pop    ebx
  407b35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b36:	pushf  
  407b37:	pop    ss
  407b38:	xchg   ebx,eax
  407b39:	int3   
  407b3a:	gs xchg ecx,eax
  407b3c:	jno    0x407bbd
  407b3e:	xchg   bx,ax
  407b40:	jns    0x407b9d
  407b42:	loope  0x407ad2
  407b44:	mov    ebp,0xc370bd17
  407b49:	shl    cl,0x59
  407b4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b4d:	outs   dx,BYTE PTR ds:[esi]
  407b4e:	mov    al,0x46
  407b50:	call   0xfec5:0x7e276c4b
  407b57:	pop    ebp
  407b58:	xchg   esi,eax
  407b59:	pop    ss
  407b5a:	pop    ebp
  407b5b:	push   ecx
  407b5c:	jl     0x407bda
  407b5e:	xor    al,0x26
  407b60:	rol    BYTE PTR [eax],1
  407b62:	cmp    eax,0x412d7baa
  407b67:	pop    esi
  407b68:	sbb    ebx,esi
  407b6a:	fsubr  st(1),st
  407b6c:	dec    edx
  407b6d:	mov    WORD PTR ds:0xfd047199,cs
  407b73:	and    edi,ebp
  407b75:	frstor [ebx]
  407b77:	dec    edi
  407b78:	mov    dl,0xcb
  407b7a:	cwde   
  407b7b:	push   edx
  407b7c:	mov    eax,0x30570ec3
  407b81:	inc    edi
  407b82:	xchg   edx,eax
  407b83:	or     dl,dh
  407b85:	push   edi
  407b86:	sub    BYTE PTR [edx-0x3f],0x56
  407b8a:	cwde   
  407b8b:	out    dx,al
  407b8c:	shr    DWORD PTR [esi+0x47],cl
  407b8f:	loopne 0x407bad
  407b91:	sub    BYTE PTR [ebp-0x6f],0xfe
  407b95:	xor    DWORD PTR [ebx-0xb],0xffffff80
  407b99:	mov    ebx,0xee1066e1
  407b9e:	push   ds
  407b9f:	mov    ds:0x70de922c,eax
  407ba4:	lods   al,BYTE PTR ds:[esi]
  407ba5:	rol    BYTE PTR [edi],0xac
  407ba8:	xchg   DWORD PTR [esi],ebx
  407baa:	mov    dh,0xca
  407bac:	loop   0x407bb8
  407bae:	sar    BYTE PTR [esi+ebp*2],1
  407bb1:	rcl    ebp,1
  407bb3:	xchg   esi,eax
  407bb4:	inc    ecx
  407bb5:	mov    al,0x5c
  407bb7:	out    dx,eax
  407bb8:	adc    bh,BYTE PTR [eax+0x7ef8d3aa]
  407bbe:	xor    edx,DWORD PTR [ebx-0x6c]
  407bc1:	inc    esi
  407bc2:	pop    ds
  407bc3:	or     ch,BYTE PTR [esi]
  407bc5:	test   BYTE PTR [edx],bh
  407bc7:	adc    BYTE PTR [ebx+0x25fdf077],ah
  407bcd:	add    BYTE PTR [ecx+0x18],cl
  407bd0:	jg     0x407b60
  407bd2:	push   es
  407bd3:	inc    edi
  407bd4:	addr16 das 
  407bd6:	sbb    al,0xb9
  407bd8:	mov    edx,0x5288e2a0
  407bdd:	sahf   
  407bde:	dec    esp
  407bdf:	loop   0x407c4e
  407be1:	fisub  WORD PTR [eax+0x9]
  407be4:	fcomp  QWORD PTR gs:[ecx-0x75d28c0d]
  407beb:	sub    eax,0xf4287cf7
  407bf0:	retf   
  407bf1:	idiv   BYTE PTR [esi-0x77eb1621]
  407bf7:	fdiv   st,st(3)
  407bfa:	mov    esp,0x48755b17
  407bff:	stos   DWORD PTR es:[edi],eax
  407c00:	paddw  mm1,QWORD PTR [edi]
  407c03:	fisubr DWORD PTR [ecx]
  407c05:	jg     0x407beb
  407c07:	xor    ebp,DWORD PTR [ecx-0x12c02d2b]
  407c0d:	test   al,0xbc
  407c0f:	je     0x407c16
  407c11:	dec    eax
  407c12:	icebp  
  407c13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407c14:	add    BYTE PTR [edx-0x78ac238b],al
  407c1a:	sar    BYTE PTR [ebp+0x23],cl
  407c1d:	loop   0x407bdb
  407c1f:	xor    BYTE PTR [ecx],ch
  407c21:	push   es
  407c22:	jecxz  0x407bb7
  407c24:	lahf   
  407c25:	sub    DWORD PTR [ecx+0x2ebfe63c],ebx
  407c2b:	cmp    DWORD PTR [edi+0x2d2e888a],ebp
  407c31:	adc    edx,ecx
  407c33:	xor    BYTE PTR [edi+0x36],al
  407c36:	std    
  407c37:	dec    ebx
  407c38:	nop
  407c39:	adc    al,0x41
  407c3b:	outs   dx,DWORD PTR ds:[esi]
  407c3c:	dec    eax
  407c3d:	adc    BYTE PTR [edx+0x42],cl
  407c40:	mov    ebp,0x3d7bb158
  407c45:	mov    ?,edi
  407c47:	adc    edx,ebx
  407c49:	into   
  407c4a:	daa    
  407c4b:	(bad)  
  407c4c:	xchg   edx,eax
  407c4d:	dec    edi
  407c4e:	mov    ah,0x19
  407c50:	in     eax,dx
  407c51:	outs   dx,BYTE PTR ds:[esi]
  407c52:	and    dh,BYTE PTR [edi+0x713ca2e0]
  407c58:	jnp    0x407c7e
  407c5a:	sbb    eax,0xa3845e43
  407c5f:	into   
  407c60:	jne    0x407bfd
  407c62:	pop    ss
  407c63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c64:	loope  0x407bee
  407c66:	mov    esi,0x47208285
  407c6b:	outs   dx,DWORD PTR ds:[esi]
  407c6c:	aam    0xbc
  407c6e:	sbb    BYTE PTR [eax+0x3f49991d],0x8d
  407c75:	es xchg edi,eax
  407c77:	scas   al,BYTE PTR es:[edi]
  407c78:	dec    edx
  407c79:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c7a:	aaa    
  407c7b:	cmp    al,0x7
  407c7d:	ror    BYTE PTR [ebx+0x342985b6],1
  407c83:	sub    BYTE PTR ds:0x961edfdb,dh
  407c89:	sbb    al,0x3
  407c8b:	jae    0x407c25
  407c8d:	rcl    dl,cl
  407c8f:	out    0x54,al
  407c91:	js     0x407c15
  407c93:	mov    ds:0x54f2e223,eax
  407c98:	push   ss
  407c99:	jns    0x407c46
  407c9b:	addr16 jbe 0x407c52
  407c9e:	loope  0x407c73
  407ca0:	popa   
  407ca1:	cs mov ebp,0x71ea1fe8
  407ca7:	in     eax,0xe2
  407ca9:	int3   
  407caa:	push   es
  407cab:	outs   dx,BYTE PTR ds:[esi]
  407cac:	aad    0x8c
  407cae:	sub    al,0x7
  407cb0:	aaa    
  407cb1:	imul   ebx
  407cb3:	jb     0x407cf8
  407cb5:	add    edx,edi
  407cb7:	aas    
  407cb8:	mov    ebx,0xae7dcbc3
  407cbd:	arpl   WORD PTR [esi+0x1d89f2ce],bx
  407cc3:	aaa    
  407cc4:	test   DWORD PTR [ebp-0x80],0xe95a8d96
  407ccb:	mov    ds:0x46391736,eax
  407cd0:	rol    DWORD PTR [edx+0x19],0x90
  407cd4:	jae    0x407c62
  407cd6:	push   ds
  407cd7:	fdivrp st(7),st
  407cd9:	mov    esi,0x2f656a78
  407cde:	loopne 0x407d58
  407ce0:	jmp    FWORD PTR [ebx-0x3d]
  407ce3:	mov    edi,0x8c6c2dcd
  407ce8:	inc    eax
  407ce9:	pop    ebx
  407cea:	push   es
  407ceb:	in     al,0x3a
  407ced:	sub    ch,dl
  407cef:	pop    edx
  407cf0:	mov    ch,al
  407cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cf3:	cmp    esi,DWORD PTR [esp+esi*8+0x29]
  407cf7:	cmp    ebx,DWORD PTR [eax+0x1792f87a]
  407cfd:	sub    BYTE PTR [esi+0x2221cedd],ah
  407d03:	jg     0x407d09
  407d05:	mov    dl,0x4a
  407d07:	loop   0x407cf0
  407d09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d0a:	sbb    al,0x43
  407d0c:	add    DWORD PTR [ecx],ebx
  407d0e:	sbb    edi,DWORD PTR [edx-0x267363d]
  407d14:	jo     0x407ca4
  407d16:	in     eax,0x6c
  407d18:	push   esp
  407d19:	inc    ebp
  407d1a:	sub    esi,ecx
  407d1c:	jnp    0x407d64
  407d1e:	fbld   TBYTE PTR [edi-0x224aefe2]
  407d24:	ficomp DWORD PTR [ecx+0xc23323]
  407d2a:	lock popa 
  407d2c:	pop    ebp
  407d2d:	dec    ebp
  407d2e:	jmp    0x189484e9
  407d33:	loope  0x407d56
  407d35:	cmp    al,BYTE PTR [eax-0x53]
  407d38:	sbb    BYTE PTR [ecx],ah
  407d3a:	in     eax,0xce
  407d3c:	xor    DWORD PTR [ecx],ebx
  407d3e:	daa    
  407d3f:	iret   
  407d40:	dec    edx
  407d41:	stos   DWORD PTR es:[edi],eax
  407d42:	retf   
  407d43:	out    dx,al
  407d44:	and    esp,0xffffffd6
  407d47:	sub    DWORD PTR [edx],ebp
  407d49:	fistp  WORD PTR [ebx-0x12]
  407d4c:	jl     0x407d09
  407d4e:	fild   QWORD PTR [edi+0x7a]
  407d51:	ds inc edx
  407d53:	mov    cl,BYTE PTR [ecx+0x35]
  407d56:	mov    eax,ds:0x3b074f79
  407d5b:	xchg   esp,eax
  407d5c:	imul   edi,DWORD PTR [esi],0xfdcc412b
  407d62:	lea    ebx,[ebp+0x41]
  407d65:	jae    0x407d3b
  407d67:	sub    al,0x90
  407d69:	fdiv   st,st(4)
  407d6b:	or     dl,BYTE PTR [esi+0xe]
  407d6e:	iret   
  407d6f:	aam    0x9e
  407d71:	mov    edx,0xffad5a58
  407d76:	rol    DWORD PTR [ecx-0x1a],cl
  407d79:	icebp  
  407d7a:	int    0xb3
  407d7c:	mov    bh,0x35
  407d7e:	mov    ah,dh
  407d80:	enter  0xe004,0xda
  407d84:	jno    0x407d12
  407d86:	sahf   
  407d87:	jmp    0x45fc:0xedbabced
  407d8e:	pop    esi
  407d8f:	xchg   DWORD PTR [ebx],esp
  407d91:	mov    esi,0xebf31f6f
  407d96:	push   esp
  407d97:	xchg   esp,eax
  407d98:	sbb    eax,edi
  407d9a:	jg     0x407d2c
  407d9c:	mov    cs,WORD PTR [esp+ebp*1-0x46f959a]
  407da3:	or     al,0x72
  407da5:	std    
  407da6:	sbb    DWORD PTR [edi],ebp
  407da8:	and    esp,esp
  407daa:	ins    BYTE PTR es:[edi],dx
  407dab:	push   esi
  407dac:	lods   al,BYTE PTR ds:[esi]
  407dad:	loope  0x407dbe
  407daf:	mov    ebx,0xb0657172
  407db4:	sbb    BYTE PTR [ebx+0x74],0x13
  407db8:	inc    esi
  407db9:	xchg   ecx,eax
  407dba:	inc    ebp
  407dbb:	cld    
  407dbc:	or     dl,al
  407dbe:	jmp    0x3f05:0x7009f8e2
  407dc5:	xchg   ebx,eax
  407dc6:	ret    
  407dc7:	push   ss
  407dc8:	aam    0xaf
  407dca:	push   ds
  407dcb:	lea    ebx,[ecx-0x27986442]
  407dd1:	fs stos DWORD PTR es:[edi],eax
  407dd3:	mov    al,ds:0x552f8b81
  407dd8:	call   0xfcb2:0x3dcdd606
  407ddf:	repnz out 0x79,eax
  407de2:	add    eax,0xab8c0b36
  407de7:	sbb    ebx,DWORD PTR [eax+ebp*2]
  407dea:	ror    BYTE PTR [ebx],cl
  407dec:	or     DWORD PTR [eax+esi*8+0x4030cefc],0x9d10281c
  407df7:	in     eax,0x4e
  407df9:	jbe    0x407da7
  407dfb:	inc    esi
  407dfc:	jae    0x407e18
  407dfe:	xchg   edi,eax
  407dff:	sub    ah,BYTE PTR [eax]
  407e01:	pop    edi
  407e02:	and    edi,DWORD PTR [esi]
  407e04:	xchg   ebx,eax
  407e05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e06:	cmp    bl,BYTE PTR [edi+ecx*2+0x2a]
  407e0a:	shl    DWORD PTR [esi+0x659d3fa7],0xa5
  407e11:	mov    ah,0xe7
  407e13:	sti    
  407e14:	or     BYTE PTR [ebp-0x14],dl
  407e17:	adc    eax,0x827d9720
  407e1c:	les    ebp,FWORD PTR [edi+ebx*2]
  407e1f:	sbb    dl,BYTE PTR [edx-0x5f51b911]
  407e25:	retf   0xb305
  407e28:	mov    al,ds:0xdff10017
  407e2d:	sbb    bl,BYTE PTR [eax+0x15]
  407e30:	cmp    eax,0xf5dbcc3f
  407e35:	loop   0x407e7e
  407e37:	xlat   BYTE PTR ds:[ebx]
  407e38:	sbb    al,0x96
  407e3a:	xor    ebp,DWORD PTR [eax]
  407e3c:	sub    DWORD PTR [edi],0xb4df4256
  407e42:	pop    edx
  407e43:	and    bh,BYTE PTR [edi-0x2c]
  407e46:	jne    0x407dea
  407e48:	(bad)  
  407e49:	loop   0x407e9c
  407e4b:	(bad)  
  407e4c:	mov    al,ds:0x2524a0f8
  407e51:	pop    ss
  407e52:	outs   dx,DWORD PTR ds:[esi]
  407e53:	inc    eax
  407e54:	fimul  DWORD PTR [ecx+ecx*1]
  407e57:	jp     0x407e5f
  407e59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e5a:	xor    ebx,DWORD PTR [ebp+0x6]
  407e5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e5e:	popa   
  407e5f:	xchg   esp,eax
  407e60:	add    eax,0xa68d8831
  407e65:	adc    bl,BYTE PTR [eax]
  407e67:	jbe    0x407e26
  407e69:	xor    edx,DWORD PTR [edx+0x21fae2bb]
  407e6f:	stos   DWORD PTR es:[edi],eax
  407e70:	inc    ecx
  407e71:	jne    0x407eda
  407e73:	and    eax,0x4d8351a3
  407e78:	xor    BYTE PTR [edi+0x30],ah
  407e7b:	es rol esi,0xb8
  407e7f:	add    ecx,DWORD PTR [edi]
  407e81:	and    BYTE PTR [edx],dh
  407e83:	jg     0x407e23
  407e85:	aaa    
  407e86:	xlat   BYTE PTR ds:[ebx]
  407e87:	imul   ecx,DWORD PTR [edx],0x16
  407e8a:	fdiv   DWORD PTR [ecx-0x65]
  407e8d:	stc    
  407e8e:	push   es
  407e8f:	or     eax,0x8f30c8bf
  407e94:	jo     0x407e65
  407e96:	call   0x6d56:0x5149a1f6
  407e9d:	ficom  WORD PTR [eax+0x1bc08b1]
  407ea3:	fst    QWORD PTR [ecx+ebp*8-0xa]
  407ea7:	sub    esp,DWORD PTR [edi]
  407ea9:	jae    0x407ec2
  407eab:	icebp  
  407eac:	adc    BYTE PTR [edi-0x2c5f740c],ah
  407eb2:	ins    BYTE PTR es:[edi],dx
  407eb3:	scas   al,BYTE PTR es:[edi]
  407eb4:	cs icebp 
  407eb6:	xchg   edx,eax
  407eb7:	sbb    al,0x4
  407eb9:	push   es
  407eba:	jmp    0x407f1b
  407ebc:	outs   dx,DWORD PTR ds:[esi]
  407ebd:	lods   eax,DWORD PTR ds:[esi]
  407ebe:	xor    eax,0x550b1d96
  407ec3:	pop    eax
  407ec4:	arpl   cx,ax
  407ec6:	fsub   QWORD PTR [edi-0x2ca73544]
  407ecc:	mov    esp,0x8baf933f
  407ed1:	int3   
  407ed2:	xchg   edi,eax
  407ed3:	mov    ebx,0xc7fa987d
  407ed8:	dec    edi
  407ed9:	or     esi,DWORD PTR [edi-0x4e]
  407edc:	pop    edx
  407edd:	fadd   st(0),st
  407edf:	jb     0x407e61
  407ee1:	lock jle 0x407ed0
  407ee4:	xor    DWORD PTR [esp+eiz*4+0x5fa3c50b],0xffffffc9
  407eec:	dec    edx
  407eed:	mov    DWORD PTR [eax+0x46],0xb2d6d577
  407ef4:	push   edx
  407ef5:	aaa    
  407ef6:	out    0x31,al
  407ef8:	sbb    eax,0x5a6356c
  407efd:	inc    edi
  407efe:	mov    al,0xc8
  407f00:	(bad)  
  407f01:	mov    DWORD PTR [ebp+0x5faef96a],ebx
  407f07:	stc    
  407f08:	adc    cl,BYTE PTR [eax]
  407f0a:	popf   
  407f0b:	adc    BYTE PTR [esi-0x12fc77a],dl
  407f11:	inc    ebx
  407f12:	mov    WORD PTR [ebx-0x45],?
  407f15:	xlat   BYTE PTR ds:[ebx]
  407f16:	inc    ecx
  407f17:	(bad)  
  407f18:	data16 jp 0x407f3c
  407f1b:	repnz dec edx
  407f1d:	mov    eax,ds:0xc08be964
  407f22:	fmul   DWORD PTR [edi]
  407f24:	jne    0x407ef6
  407f26:	test   DWORD PTR [edi+eiz*4+0x77],ebx
  407f2a:	or     DWORD PTR [ecx+0x5f3bf80c],ecx
  407f30:	je     0x407eff
  407f32:	ins    BYTE PTR es:[edi],dx
  407f33:	xchg   DWORD PTR [ebx-0x5492b48c],ecx
  407f39:	jbe    0x407ed3
  407f3b:	and    cl,BYTE PTR [ecx+esi*2+0x380f8f7a]
  407f42:	add    DWORD PTR [ecx-0x7c19c50a],edi
  407f48:	mov    dh,0x90
  407f4a:	jg     0x407efb
  407f4c:	popa   
  407f4d:	jbe    0x407f6e
  407f4f:	enter  0xd9ad,0x36
  407f53:	inc    eax
  407f54:	ret    0x3663
  407f57:	push   0xa6336896
  407f5c:	not    DWORD PTR [eax-0x17bd7e2c]
  407f62:	sbb    eax,0x127c8fc
  407f67:	cli    
  407f68:	mul    BYTE PTR [ecx]
  407f6a:	mov    ebx,0x5fc325c4
  407f6f:	data16 hlt 
  407f71:	mov    ch,0xea
  407f73:	sbb    al,0x86
  407f75:	jns    0x407fe9
  407f77:	stos   DWORD PTR es:[edi],eax
  407f78:	push   0x627a6d57
  407f7d:	jge    0x407f9b
  407f7f:	xchg   edi,eax
  407f80:	fist   DWORD PTR [ebx+0x3b]
  407f83:	(bad)  
  407f84:	sub    bh,BYTE PTR [ecx+0x6dc43615]
  407f8a:	push   ebx
  407f8b:	sub    DWORD PTR [esi+0x3d381eb7],edx
  407f91:	div    edx
  407f93:	jecxz  0x407fd6
  407f95:	mov    ecx,0x136caac8
  407f9a:	push   eax
  407f9b:	pop    DWORD PTR [edi+0xa]
  407f9e:	fst    DWORD PTR [eax+edx*8-0x79b0d648]
  407fa5:	jecxz  0x407fd8
  407fa7:	jl     0x407fe5
  407fa9:	push   ebp
  407faa:	je     0x407f38
  407fac:	mov    bl,0xb4
  407fae:	cmc    
  407faf:	mov    ebx,0x7764c207
  407fb4:	add    al,ch
  407fb6:	jle    0x407f88
  407fb8:	jmp    0x380c:0x3f4467f5
  407fbf:	hlt    
  407fc0:	fistp  QWORD PTR [ecx+0x649c97ea]
  407fc6:	add    ah,cl
  407fc8:	(bad)  
  407fc9:	jmp    0xbf24:0x3d9e67b0
  407fd0:	cdq    
  407fd1:	mov    ch,BYTE PTR [ebx]
  407fd3:	sub    al,0x69
  407fd5:	pop    ds
  407fd6:	xor    al,BYTE PTR [ecx]
  407fd8:	inc    ebx
  407fd9:	jle    0x407fbf
  407fdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407fdc:	jp     0x408046
  407fde:	sub    ch,0xda
  407fe1:	xor    BYTE PTR [ebx],0x56
  407fe4:	push   cs
  407fe5:	inc    edx
  407fe6:	imul   ecx,DWORD PTR [eax+0x782ad03e],0xffffffc9
  407fed:	not    BYTE PTR [ebx+0x7042c88f]
  407ff3:	scas   al,BYTE PTR es:[edi]
  407ff4:	mov    ch,0x5d
  407ff6:	xchg   BYTE PTR [esi-0x18734faa],bh
  407ffc:	inc    eax
  407ffd:	fisttp QWORD PTR [edi+0x45e20432]
  408003:	pop    ds
  408004:	leave  
  408005:	mov    ah,bh
  408007:	jge    0x407f89
  408009:	stos   BYTE PTR es:[edi],al
  40800a:	push   edx
  40800b:	push   esi
  40800c:	mov    ebp,0x880eb776
  408011:	ss jge 0x407ff6
  408014:	loope  0x407fc1
  408016:	sbb    eax,0xb6c16ab3
  40801b:	ret    0x6d6b
  40801e:	mov    dl,0x37
  408020:	inc    ecx
  408021:	mov    esi,0xe2a4a567
  408026:	push   eax
  408027:	adc    eax,0x998f01ca
  40802c:	call   0x92964391
  408031:	repz pop ebp
  408033:	jbe    0x408038
  408035:	mov    dl,0x7c
  408037:	sub    eax,0x206734e4
  40803c:	mov    ecx,0x4ba3d0db
  408041:	dec    esp
  408042:	dec    edi
  408043:	xor    eax,DWORD PTR [ecx]
  408045:	mov    edx,0xd6f8e8cb
  40804a:	cld    
  40804b:	and    DWORD PTR [ebx*1+0x240159f1],eax
  408052:	rcl    BYTE PTR [eax-0x80],cl
  408055:	add    al,0x90
  408057:	and    DWORD PTR [esi+0x54],esp
  40805a:	cmc    
  40805b:	nop
  40805c:	imul   BYTE PTR [edi]
  40805e:	mov    bh,0xe0
  408060:	hlt    
  408061:	imul   DWORD PTR [ecx-0x50413fbd]
  408067:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408068:	das    
  408069:	inc    esi
  40806a:	out    dx,eax
  40806b:	test   BYTE PTR [ebp-0x36e60b93],ah
  408071:	jmp    0x4080b5
  408073:	sub    BYTE PTR [ebp+esi*4-0x67],0xf5
  408078:	mov    ds:0x889169d,eax
  40807d:	pop    ebx
  40807e:	je     0x4080e4
  408080:	dec    edi
  408081:	mov    edi,0x1cf258c4
  408086:	(bad)  
  408087:	in     al,0xc1
  408089:	sahf   
  40808a:	push   eax
  40808b:	adc    DWORD PTR [edi],esp
  40808d:	(bad)  
  40808e:	cmp    eax,0x86e4f27d
  408093:	popf   
  408094:	shr    BYTE PTR [ebp+0x7f],0x85
  408098:	inc    edx
  408099:	dec    eax
  40809a:	idiv   DWORD PTR [eax-0x3c05c9d6]
  4080a0:	mov    edx,0x3223c913
  4080a5:	sbb    al,0x13
  4080a7:	out    dx,al
  4080a8:	push   0x5d
  4080aa:	ins    DWORD PTR es:[edi],dx
  4080ab:	test   eax,0x47a409dc
  4080b0:	rol    DWORD PTR [ebp-0x32],1
  4080b3:	inc    ah
  4080b5:	retf   
  4080b6:	daa    
  4080b7:	mov    ebp,0x30f66dda
  4080bc:	and    al,0x2f
  4080be:	fwait
  4080bf:	pop    es
  4080c0:	or     esp,DWORD PTR ds:0x789085d8
  4080c6:	dec    ebx
  4080c7:	vpsubusb ymm0{k3},ymm1,YMMWORD PTR [eax]
  4080cd:	retf   0x9e56
  4080d0:	cdq    
  4080d1:	mov    esi,ecx
  4080d3:	test   BYTE PTR [edi-0x1dca3571],cl
  4080d9:	dec    esi
  4080da:	jno    0x4080ba
  4080dc:	inc    edx
  4080dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080de:	dec    edx
  4080df:	push   ebx
  4080e0:	pop    es
  4080e1:	cmp    BYTE PTR [esi-0x43],ah
  4080e4:	xor    eax,0x880e5b7e
  4080e9:	lea    esi,[ecx+0x630acc4f]
  4080ef:	es loope 0x40815f
  4080f2:	jmp    0x4080c4
  4080f4:	imul   esp,DWORD PTR [ebx+0x18],0xffffff86
  4080f8:	fbstp  TBYTE PTR [eax+0x7e32b7d1]
  4080fe:	fld    DWORD PTR [edx]
  408100:	shl    DWORD PTR [ecx+0x70709968],cl
  408106:	push   es
  408107:	push   cs
  408108:	mov    dh,0x52
  40810a:	pushf  
  40810b:	xlat   BYTE PTR ds:[ebx]
  40810c:	maskmovq mm0,(bad)
  40810d:	test   DWORD PTR [esi],0x41f56e37
  408113:	push   edx
  408114:	(bad)  
  408115:	cmc    
  408116:	or     eax,0x4c3c1ff6
  40811b:	std    
  40811c:	jg     0x408122
  40811e:	push   sp
  408120:	dec    eax
  408121:	enter  0xb78a,0x8d
  408125:	(bad)  
  408126:	sub    DWORD PTR [ebx+ecx*2-0x24],edx
  40812a:	mov    BYTE PTR [edi-0x5f509b2c],bl
  408130:	(bad)  
  408131:	adc    eax,DWORD PTR [eax-0x47]
  408134:	ret    0xe210
  408137:	imul   ecx,ecx,0x4612652
  40813d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40813e:	test   DWORD PTR [esi],ebx
  408140:	sbb    eax,0xdf43134d
  408145:	repnz push cs
  408147:	arpl   WORD PTR [ebx-0x2d],di
  40814a:	data16 rcl BYTE PTR [ebx+0x15bbe714],0xfb
  408152:	pop    ecx
  408153:	jne    0x408148
  408155:	pop    eax
  408156:	cli    
  408157:	ins    BYTE PTR es:[edi],dx
  408158:	jne    0x408178
  40815a:	xchg   bl,dl
  40815c:	es pop edi
  40815e:	sar    BYTE PTR [esi],0x98
  408161:	test   eax,0x8b9e927
  408166:	cmp    BYTE PTR [ecx],0x44
  408169:	aaa    
  40816a:	jmp    0x6bf01c8d
  40816f:	push   edi
  408170:	cmp    dl,dl
  408172:	test   al,0xe2
  408174:	sub    dl,dl
  408176:	xchg   edx,eax
  408177:	clc    
  408178:	ins    DWORD PTR es:[edi],dx
  408179:	sbb    edi,DWORD PTR [edi-0x56470722]
  40817f:	and    esi,DWORD PTR [edx-0x7d]
  408182:	sbb    eax,0x1cd7b8f8
  408187:	outs   dx,DWORD PTR ds:[esi]
  408188:	je     0x408157
  40818a:	sub    al,cl
  40818c:	or     eax,DWORD PTR [esi]
  40818e:	fst    DWORD PTR ds:0xac2704c
  408194:	push   edx
  408195:	jmp    0x9c975ec0
  40819a:	das    
  40819b:	xchg   ebp,eax
  40819c:	push   ecx
  40819d:	xlat   BYTE PTR ds:[ebx]
  40819e:	shl    BYTE PTR [eax+ebp*8+0x224f769e],0xda
  4081a6:	mov    al,ds:0x7b550ca5
  4081ab:	std    
  4081ac:	(bad)  
  4081ad:	sti    
  4081ae:	add    esi,esi
  4081b0:	dec    esi
  4081b1:	ret    
  4081b2:	lds    esi,FWORD PTR [esi-0x59da8f84]
  4081b8:	pop    esi
  4081b9:	loope  0x4081a9
  4081bb:	fmulp  st(1),st
  4081bd:	xchg   edx,eax
  4081be:	fs inc edi
  4081c0:	pop    es
  4081c1:	adc    al,0xf9
  4081c3:	aaa    
  4081c4:	stc    
  4081c5:	xor    al,0x6a
  4081c7:	bound  ebx,QWORD PTR [ebx-0x756a7f1d]
  4081cd:	or     al,0x63
  4081cf:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4081d1:	fdiv   QWORD PTR ds:0xf24d65f2
  4081d7:	mov    edx,0x1a25a815
  4081dc:	outs   dx,BYTE PTR ds:[esi]
  4081dd:	ss lahf 
  4081df:	repnz xor dh,ch
  4081e2:	sbb    BYTE PTR [ecx],0x11
  4081e5:	imul   esp,DWORD PTR [edx-0x2ad599cc],0xffffff9c
  4081ec:	(bad)  
  4081ed:	jge    0x4081d3
  4081ef:	pop    ebx
  4081f0:	pop    ds
  4081f1:	ja     0x40824e
  4081f3:	stos   BYTE PTR es:[edi],al
  4081f4:	lock mov cl,0xca
  4081f7:	test   al,0x4c
  4081f9:	cmp    dh,BYTE PTR [edi-0x2a]
  4081fc:	xchg   edi,eax
  4081fd:	sub    DWORD PTR [ecx+0x375f895],0xb71d676f
  408207:	or     edx,DWORD PTR [ebx]
  408209:	cmp    DWORD PTR [ebp-0xa],esp
  40820c:	das    
  40820d:	pop    esi
  40820e:	loope  0x408259
  408210:	ret    
  408211:	ret    0x7a7f
  408214:	imul   ecx,DWORD PTR [ebx+ebp*4+0x6],0xffffffe8
  408219:	dec    BYTE PTR [ebx+0x34]
  40821c:	jb     0x408217
  40821e:	xor    BYTE PTR [bx+si+0x5cbc],cl
  408223:	retf   0x14da
  408226:	push   ebx
  408227:	sbb    DWORD PTR [edi],edx
  408229:	mov    cl,0x6b
  40822b:	shr    edi,0xcd
  40822e:	ds stos BYTE PTR es:[edi],al
  408230:	and    al,0xa2
  408232:	rcl    dl,0x68
  408235:	adc    al,0x31
  408237:	xlat   BYTE PTR ds:[ebx]
  408238:	leave  
  408239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40823a:	add    bh,BYTE PTR ss:[ecx+ecx*2+0x76884083]
  408242:	or     cl,al
  408244:	bound  esp,QWORD PTR [ecx-0x1d]
  408247:	hlt    
  408248:	jg     0x40826b
  40824a:	call   0x669c:0xc5bee004
  408251:	(bad)  
  408252:	cmp    al,0xb1
  408254:	retf   
  408255:	loope  0x4081d7
  408257:	stos   BYTE PTR es:[edi],al
  408258:	push   edx
  408259:	cmp    eax,0x4675bd5f
  40825e:	das    
  40825f:	popa   
  408260:	and    DWORD PTR [ebx-0x5324bfaa],0x47
  408267:	pop    ebp
  408268:	gs jmp 0x808f3a33
  40826e:	mov    ah,0xe6
  408270:	xor    dl,BYTE PTR [ebx+0x7e4fa3dd]
  408276:	cld    
  408277:	mov    eax,DWORD PTR [edi]
  408279:	push   es
  40827a:	xchg   edi,eax
  40827b:	popf   
  40827c:	(bad)  
  40827d:	adc    ecx,ebp
  40827f:	xchg   ebx,edx
  408281:	dec    eax
  408282:	pop    ss
  408283:	cmp    BYTE PTR [ecx],bl
  408285:	and    bl,BYTE PTR [esi]
  408287:	jle    0x408295
  408289:	mov    al,ds:0xd961a1da
  40828e:	cld    
  40828f:	add    DWORD PTR [eax+0x1d],ebp
  408292:	adc    edi,edi
  408294:	push   ebx
  408295:	lods   al,BYTE PTR ds:[esi]
  408296:	out    0x9f,al
  408298:	mov    eax,0x282d32a5
  40829d:	xor    al,0xb4
  40829f:	mov    WORD PTR [ecx+ebx*4-0x2d7d3b55],fs
  4082a6:	or     DWORD PTR [eax],ebp
  4082a8:	ins    DWORD PTR es:[edi],dx
  4082a9:	sbb    BYTE PTR [edx+0x49fb0ed7],al
  4082af:	sbb    ecx,DWORD PTR [ecx-0xcc91017]
  4082b5:	loopne 0x408313
  4082b7:	jecxz  0x40831c
  4082b9:	enter  0x8209,0x9e
  4082bd:	in     eax,0x52
  4082bf:	je     0x40824f
  4082c1:	jl     0x40832a
  4082c3:	mov    ecx,0x3df3561e
  4082c8:	cmp    bl,BYTE PTR [eax-0xbe386e6]
  4082ce:	inc    ebx
  4082cf:	ss test eax,0x34ce64bc
  4082d5:	icebp  
  4082d6:	ret    0xc1fa
  4082d9:	leave  
  4082da:	sbb    ecx,DWORD PTR [ecx-0x2124d03e]
  4082e0:	or     eax,0xb0504e0f
  4082e5:	jmp    0x408285
  4082e7:	retf   
  4082e8:	cld    
  4082e9:	or     al,0x7
  4082eb:	xor    eax,0x3b329410
  4082f0:	sub    DWORD PTR [ecx],esi
  4082f2:	jg     0x4082a7
  4082f4:	lds    eax,FWORD PTR [ecx]
  4082f6:	adc    eax,0x48cde385
  4082fb:	push   eax
  4082fc:	pushf  
  4082fd:	and    BYTE PTR [ebp+0x37],0xf2
  408301:	fimul  DWORD PTR [ecx+0x1fd0e615]
  408307:	mov    al,0xab
  408309:	fcomp  DWORD PTR [ecx+ecx*2]
  40830c:	hlt    
  40830d:	(bad)  
  40830e:	fwait
  40830f:	xor    ebp,DWORD PTR [esi+0x49]
  408312:	adc    dh,BYTE PTR [edx-0x5]
  408315:	add    bl,BYTE PTR [esi+eax*4-0x536ad571]
  40831c:	sbb    DWORD PTR [edi-0x55],esp
  40831f:	dec    DWORD PTR [ebx-0x26]
  408322:	pop    ebp
  408323:	xchg   ebp,eax
  408324:	mov    ds:0x37834255,al
  408329:	int    0x1b
  40832b:	dec    ecx
  40832c:	push   esp
  40832d:	jbe    0x40837f
  40832f:	xchg   edx,eax
  408330:	sbb    esi,DWORD PTR [ebx]
  408332:	daa    
  408333:	ss js  0x4082c4
  408336:	rcr    ebx,1
  408338:	jne    0x408324
  40833a:	outs   dx,DWORD PTR ds:[esi]
  40833b:	xchg   edx,eax
  40833c:	jns    0x408365
  40833e:	sbb    eax,0xde186d0e
  408343:	rcl    DWORD PTR [edi],0x99
  408346:	sub    eax,0xd3f044db
  40834b:	stos   DWORD PTR es:[edi],eax
  40834c:	adc    dl,BYTE PTR [esi+0x1b]
  40834f:	call   0x242137b5
  408354:	ja     0x40832c
  408356:	ja     0x408343
  408358:	mov    dh,0xab
  40835a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40835b:	punpcklwd mm1,DWORD PTR ds:0x1ab3cc9d
  408362:	adc    ebp,DWORD PTR [ebp-0x34882316]
  408368:	loope  0x40836f
  40836a:	in     eax,0xef
  40836c:	shr    BYTE PTR [esi-0x96419a1],cl
  408372:	aam    0xc7
  408374:	adc    edi,DWORD PTR [ebp-0x5c]
  408377:	push   ss
  408378:	in     eax,0x4b
  40837a:	loopne 0x4083a6
  40837c:	pop    ss
  40837d:	jmp    0x367e:0x233748cf
  408384:	ins    DWORD PTR es:[edi],dx
  408385:	mov    ebp,0x7eebc1d
  40838a:	lahf   
  40838b:	or     al,BYTE PTR [edi+0x5c1daf57]
  408391:	fucomi st,st(1)
  408393:	lds    eax,FWORD PTR [esi-0x3e]
  408396:	dec    edi
  408397:	mov    cs,WORD PTR [edx+0x5504ecb3]
  40839d:	push   ds
  40839e:	cmp    DWORD PTR [ecx],ebx
  4083a0:	xchg   esi,eax
  4083a1:	je     0x40837c
  4083a3:	pop    eax
  4083a4:	loope  0x4083ef
  4083a6:	pop    edx
  4083a7:	jecxz  0x4083ae
  4083a9:	xchg   edx,eax
  4083aa:	into   
  4083ab:	leave  
  4083ac:	jns    0x4083ad
  4083ae:	lds    esi,FWORD PTR [ecx+esi*1-0x74]
  4083b2:	lock inc edi
  4083b4:	stos   BYTE PTR es:[edi],al
  4083b5:	adc    ch,BYTE PTR [esi+0x19]
  4083b8:	jmp    0xe8663fdc
  4083bd:	scas   eax,DWORD PTR es:[edi]
  4083be:	jl     0x4083b4
  4083c0:	pop    ds
  4083c1:	pop    ds
  4083c2:	jmp    0xdc9c:0xdb625c62
  4083c9:	repz jb 0x4083a5
  4083cc:	mov    al,ds:0x4914a078
  4083d1:	and    bl,BYTE PTR [ebx+0x7772f1a]
  4083d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083d8:	xchg   ecx,eax
  4083d9:	iret   
  4083da:	daa    
  4083db:	fnstsw WORD PTR [edi+0x75]
  4083de:	inc    esp
  4083df:	daa    
  4083e0:	push   ss
  4083e1:	mov    WORD PTR [edx+0x6c5d55e1],?
  4083e7:	add    DWORD PTR ds:0x7a7c565e,esp
  4083ed:	fs stos BYTE PTR es:[edi],al
  4083ef:	retf   0x292a
  4083f2:	xchg   edi,eax
  4083f3:	aaa    
  4083f4:	xor    al,0x21
  4083f6:	test   cl,bh
  4083f8:	cli    
  4083f9:	dec    esp
  4083fa:	jp     0x408448
  4083fc:	dec    eax
  4083fd:	add    BYTE PTR [ebx-0x1e204b9f],ch
  408403:	jo     0x4083ba
  408405:	int3   
  408406:	cmp    eax,0x5d695f05
  40840b:	xchg   ebx,eax
  40840c:	xchg   edx,eax
  40840d:	das    
  40840e:	jl     0x4083f5
  408410:	xchg   ebx,eax
  408411:	pusha  
  408412:	mov    esi,0x30952130
  408417:	ret    
  408418:	or     eax,0xd9b6dc6e
  40841d:	imul   esp,DWORD PTR [ebx],0x78
  408420:	dec    esi
  408421:	js     0x408433
  408423:	and    eax,0xa15f269c
  408428:	jbe    0x408496
  40842a:	(bad)  
  40842b:	jb     0x408410
  40842d:	jmp    0xa07068f5
  408432:	jp     0x408415
  408434:	scas   al,BYTE PTR es:[edi]
  408435:	inc    edx
  408436:	aas    
  408437:	and    al,0x38
  408439:	push   ecx
  40843a:	add    BYTE PTR [eax],bl
  40843c:	mov    al,0xa8
  40843e:	out    0x1,eax
  408440:	xchg   esi,edi
  408442:	jo     0x408457
  408444:	pop    ebx
  408445:	add    al,0x5d
  408447:	add    al,BYTE PTR [eax+0x2b]
  40844a:	cmp    al,BYTE PTR [esp+edi*8+0xa]
  40844e:	mov    ebp,DWORD PTR [esi]
  408450:	xlat   BYTE PTR ds:[ebx]
  408451:	lds    edx,FWORD PTR [esi-0x4c]
  408454:	sbb    edx,DWORD PTR [esi+ebp*4+0x37]
  408458:	aad    0xbd
  40845a:	jns    0x4084b7
  40845c:	(bad)  
  40845d:	jno    0x4083f9
  40845f:	xchg   ecx,eax
  408460:	lea    edx,es:[edi-0x1ecd9c1f]
  408467:	adc    DWORD PTR [ebx+0x5374c702],edx
  40846d:	sub    ch,BYTE PTR [ecx-0x35]
  408470:	out    0x80,al
  408472:	ret    
  408473:	adc    al,0x81
  408475:	push   esp
  408476:	xchg   edi,eax
  408477:	mov    eax,ds:0x2ea2d5dc
  40847c:	jo     0x4084f3
  40847e:	cmc    
  40847f:	dec    esi
  408480:	or     BYTE PTR es:[edx+0x34],0x43
  408485:	ret    0xbbbe
  408488:	jl     0x408438
  40848a:	jb     0x408430
  40848c:	mov    ah,0x4c
  40848e:	xchg   edi,eax
  40848f:	push   esi
  408490:	or     BYTE PTR [edx],0x1c
  408493:	int    0x40
  408495:	add    eax,0x426e0835
  40849a:	push   ecx
  40849b:	jmp    0xb21e8192
  4084a0:	sar    DWORD PTR [esi],0xa2
  4084a3:	(bad)  
  4084a4:	aad    0x4f
  4084a6:	xor    bh,bh
  4084a8:	fisub  DWORD PTR [eax]
  4084aa:	(bad)  
  4084ac:	add    DWORD PTR [ebp+0x2c3384c6],ebp
  4084b2:	dec    edi
  4084b3:	adc    DWORD PTR ds:0x80a9c481,ebx
  4084b9:	ins    DWORD PTR es:[edi],dx
  4084ba:	jae    0x40844d
  4084bc:	mov    al,0xe0
  4084be:	retf   0x4f15
  4084c1:	jl     0x4084fa
  4084c3:	xchg   esi,eax
  4084c4:	jo     0x40848f
  4084c6:	out    dx,al
  4084c7:	inc    ecx
  4084c8:	stc    
  4084c9:	fsub   DWORD PTR [ebx]
  4084cb:	xor    ebp,DWORD PTR [edi]
  4084cd:	sahf   
  4084ce:	out    dx,eax
  4084cf:	clc    
  4084d0:	mov    ds:0xc5b26fd4,eax
  4084d5:	sbb    ecx,DWORD PTR [eax+0x3731fb8a]
  4084db:	mov    eax,ds:0xade940bf
  4084e0:	jmp    0x94faa99b
  4084e5:	(bad)  
  4084e7:	mov    ch,0xbf
  4084e9:	popa   
  4084ea:	mov    bx,0x84ed
  4084ee:	sbb    eax,0xcca17319
  4084f3:	(bad)  
  4084f4:	adc    eax,0xc5374805
  4084f9:	loopne 0x4084f2
  4084fb:	cs xor esi,edx
  4084fe:	lods   al,BYTE PTR ds:[esi]
  4084ff:	aaa    
  408500:	cdq    
  408501:	dec    esp
  408502:	push   ebp
  408503:	outs   dx,BYTE PTR ds:[esi]
  408504:	aas    
  408505:	push   esp
  408506:	cwde   
  408507:	in     eax,dx
  408508:	mov    BYTE PTR [edx-0x4b98d774],ah
  40850e:	cmp    al,ch
  408510:	mov    ecx,0xe297b8d1
  408515:	push   ecx
  408516:	add    eax,0x582b56a9
  40851b:	cmp    al,0xdc
  40851d:	jae    0x408560
  40851f:	jnp    0x408530
  408521:	ficomp DWORD PTR [ebx]
  408523:	pop    eax
  408524:	jmp    0x408595
  408526:	mov    edx,db5
  408529:	add    eax,0x4ced30eb
  40852e:	jo     0x408503
  408530:	push   ebp
  408531:	arpl   WORD PTR [esi-0x6e],di
  408534:	inc    esp
  408535:	loop   0x4085a0
  408537:	inc    esp
  408538:	pusha  
  408539:	push   eax
  40853a:	mov    dh,0xba
  40853c:	dec    esp
  40853d:	mov    esi,ebx
  40853f:	adc    al,0xf0
  408541:	mov    eax,0xabeb4eab
  408546:	cli    
  408547:	call   0x9e4fd4ba
  40854c:	xor    eax,0x95bf21dc
  408551:	sub    al,0x6a
  408553:	sub    al,0x6c
  408555:	mov    BYTE PTR [ecx+0x306de62c],dl
  40855b:	addr16 or dh,bl
  40855e:	xchg   edx,eax
  40855f:	lock jl 0x40855e
  408562:	sub    dh,BYTE PTR ds:0x5fdee718
  408568:	repnz fimul WORD PTR ds:0x2549d552
  40856f:	pop    ss
  408570:	xchg   DWORD PTR [ebx+0x2a],ebx
  408573:	add    bh,BYTE PTR [ebx+0x73]
  408576:	xlat   BYTE PTR ds:[ebx]
  408577:	dec    esi
  408578:	xor    al,0xa7
  40857a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40857b:	xor    eax,DWORD PTR [ecx]
  40857d:	jp     0x40852e
  40857f:	scas   eax,DWORD PTR es:[edi]
  408580:	rcr    BYTE PTR es:[ebx],cl
  408583:	lds    ebp,FWORD PTR [esi+ecx*8+0x72]
  408587:	jg     0x408534
  408589:	bound  ebp,QWORD PTR [ecx-0x6307a5b0]
  40858f:	xchg   DWORD PTR [ecx],edi
  408591:	mov    eax,0x605b27b9
  408596:	jb     0x4085d7
  408598:	inc    esi
  408599:	inc    ebp
  40859a:	std    
  40859b:	sti    
  40859c:	std    
  40859d:	pop    esp
  40859e:	mov    BYTE PTR [esi+0x45],al
  4085a1:	xor    dh,BYTE PTR [esi+edi*2+0x3fc2bad8]
  4085a8:	fild   QWORD PTR [ebx-0x9e6dac3]
  4085ae:	das    
  4085af:	adc    bl,dl
  4085b1:	test   DWORD PTR [edx+0x5c],edx
  4085b4:	cmp    BYTE PTR [edx-0x6e93b590],dh
  4085ba:	adc    al,0x1c
  4085bc:	adc    ebp,edx
  4085be:	and    ebp,DWORD PTR [ebx+ebp*4]
  4085c1:	fldenv [ecx+0x72]
  4085c4:	cmp    ah,BYTE PTR [edx+ebp*2-0x38]
  4085c8:	out    dx,eax
  4085c9:	adc    al,0x60
  4085cb:	ins    BYTE PTR es:[edi],dx
  4085cc:	scas   eax,DWORD PTR es:[edi]
  4085cd:	mov    ds:0xfcb6a32d,eax
  4085d2:	push   cs
  4085d3:	or     cl,BYTE PTR [ebx]
  4085d5:	xchg   esi,eax
  4085d6:	popa   
  4085d7:	pop    ds
  4085d8:	xlat   BYTE PTR ds:[ebx]
  4085d9:	and    ebx,DWORD PTR [esi-0x17b5f9ca]
  4085df:	out    0x8e,al
  4085e1:	pop    esi
  4085e2:	mov    ecx,0x47f181af
  4085e7:	das    
  4085e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085e9:	pop    ecx
  4085ea:	fcomp  DWORD PTR [eax+0xa]
  4085ed:	mov    edi,0xa633aedc
  4085f2:	retf   
  4085f3:	sub    BYTE PTR [edi-0x6cab78cd],bl
  4085f9:	mov    dh,0x9f
  4085fb:	jns    0x4085e7
  4085fd:	enter  0x7adc,0x4e
  408601:	push   es
  408602:	pushf  
  408603:	xor    eax,0x19b48db9
  408608:	mov    cl,0xc7
  40860a:	mov    bl,0x1f
  40860c:	imul   esp,ebp,0xa30b384
  408612:	and    BYTE PTR [ebx+0xe5899e4],bl
  408618:	add    ah,BYTE PTR [ebx]
  40861a:	fadd   QWORD PTR [edi-0x5e]
  40861d:	les    esi,FWORD PTR [ebp+0x25]
  408620:	iret   
  408621:	add    DWORD PTR [eax-0x63],esp
  408624:	sbb    eax,0x1275b661
  408629:	daa    
  40862a:	sub    esi,edi
  40862c:	stos   BYTE PTR es:[edi],al
  40862d:	test   al,0xf0
  40862f:	sub    DWORD PTR [esi+0x2b2cda2b],0xf8418c12
  408639:	sbb    bl,BYTE PTR [ecx+ecx*8+0x36]
  40863d:	rcl    DWORD PTR [ebp+0x24],cl
  408640:	cdq    
  408641:	hlt    
  408642:	enter  0x2635,0xc9
  408646:	sbb    eax,0x36afa4de
  40864b:	xor    ecx,ebp
  40864d:	dec    esi
  40864e:	sub    ebx,edx
  408650:	movd   mm3,ebp
  408653:	mov    edx,0x99795029
  408658:	mov    WORD PTR [ecx],?
  40865a:	sub    al,0x69
  40865c:	lock and BYTE PTR [ecx-0x4153de35],ah
  408663:	adc    bl,BYTE PTR ds:0x7ec38a43
  408669:	fadd   QWORD PTR [edi]
  40866b:	pop    es
  40866c:	test   eax,0x65472841
  408671:	bound  esp,QWORD PTR [ebp-0x3f4bc995]
  408677:	adc    eax,0x6b060b7e
  40867c:	inc    eax
  40867d:	ins    DWORD PTR es:[edi],dx
  40867e:	aam    0xdb
  408680:	xchg   edi,eax
  408681:	imul   edx,DWORD PTR [eax-0x62],0xc3f5914d
  408688:	add    edx,DWORD PTR [edi-0x437623cb]
  40868e:	clc    
  40868f:	in     al,dx
  408690:	sub    dh,BYTE PTR [ebp+0x4d]
  408693:	pop    esi
  408694:	push   es
  408695:	pop    edx
  408696:	cmp    edx,DWORD PTR [ecx+ebp*2-0x39139bcf]
  40869d:	push   ds
  40869e:	clc    
  40869f:	ret    
  4086a0:	cmp    BYTE PTR [ebp+eax*8-0x2d],cl
  4086a4:	cs int3 
  4086a6:	sbb    cl,BYTE PTR [ebp+0x3357a469]
  4086ac:	ret    
  4086ad:	and    BYTE PTR [ecx],al
  4086af:	cmp    edx,DWORD PTR [edx+0x5ea7dc23]
  4086b5:	pop    ebx
  4086b6:	mov    dh,0x78
  4086b8:	sub    eax,0xf00ffe17
  4086bd:	les    eax,FWORD PTR [ebp+0x4f]
  4086c0:	out    0x29,eax
  4086c2:	xchg   ebp,eax
  4086c3:	test   eax,0xc0b2fe1c
  4086c8:	lods   eax,DWORD PTR ds:[esi]
  4086c9:	aam    0xb5
  4086cb:	sub    esp,DWORD PTR [edi]
  4086cd:	popf   
  4086ce:	or     DWORD PTR [ecx-0x4d0cd059],ebp
  4086d4:	push   es
  4086d5:	mov    ebx,0x88a9575f
  4086da:	test   BYTE PTR [ebx+ebx*2-0x71],bl
  4086de:	pop    ebx
  4086df:	mov    edi,0xb8f3cfa
  4086e4:	sub    BYTE PTR [esi],0xbe
  4086e7:	inc    ebx
  4086e8:	push   ebx
  4086e9:	rcl    BYTE PTR [ecx],cl
  4086eb:	lock push eax
  4086ed:	xor    al,0x53
  4086ef:	mov    esi,0xe6c8d057
  4086f4:	lea    esp,[ebp+0x7c3712db]
  4086fa:	mov    ebx,eax
  4086fc:	outs   dx,BYTE PTR ds:[esi]
  4086fd:	ror    BYTE PTR [ebx+0x253e5fdb],cl
  408703:	ins    BYTE PTR es:[edi],dx
  408704:	lock push esi
  408706:	lea    edx,[eax-0x7aa89317]
  40870c:	adc    DWORD PTR [ebp-0x160f3348],esi
  408712:	sub    DWORD PTR [ecx+0x3f],ecx
  408715:	push   ss
  408716:	push   esi
  408717:	rcl    DWORD PTR [ebp+0x7f],cl
  40871a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40871b:	sbb    al,0xe1
  40871d:	xlat   BYTE PTR ds:[ebx]
  40871e:	and    bh,BYTE PTR [eax-0x60]
  408721:	and    BYTE PTR [edi+eiz*4],dh
  408724:	mov    ebp,0x4b1d72af
  408729:	fcom   DWORD PTR [esi]
  40872b:	(bad)  
  40872d:	inc    ecx
  40872e:	mov    al,ds:0xc247f2fb
  408733:	mov    ah,0x92
  408735:	add    DWORD PTR [edx-0x65c84afc],0x13c1103c
  40873f:	(bad)  
  408740:	out    dx,eax
  408741:	sub    al,0x2f
  408743:	mov    ds:0x3a6d435f,al
  408748:	aaa    
  408749:	leave  
  40874a:	popf   
  40874b:	mov    esp,0x436def86
  408750:	push   esi
  408751:	ins    BYTE PTR es:[edi],dx
  408752:	or     bl,0xbe
  408755:	jge    0x4087d4
  408757:	idiv   BYTE PTR [esi+0x13]
  40875a:	mov    edx,DWORD PTR [ebx]
  40875c:	fnstsw WORD PTR ds:[ebx]
  40875f:	mov    ds:0xd1220004,al
  408764:	inc    ecx
  408765:	leave  
  408766:	mov    eax,ds:0xef12ac81
  40876b:	xor    BYTE PTR [edi-0x6c],0x75
  40876f:	or     cl,BYTE PTR [edx+0x7bef6a28]
  408775:	mov    cl,0xca
  408777:	neg    eax
  408779:	das    
  40877a:	and    ecx,DWORD PTR [eax-0x30648c6a]
  408780:	mov    ecx,0x71eabe3c
  408785:	mov    bl,0x1
  408787:	repnz retf 
  408789:	cli    
  40878a:	add    eax,0x6ac1775c
  40878f:	dec    edi
  408790:	push   esp
  408791:	xor    DWORD PTR [ecx],ecx
  408793:	cmp    eax,0xbbedb928
  408798:	outs   dx,DWORD PTR ds:[esi]
  408799:	push   cs
  40879a:	sub    cl,BYTE PTR [eax-0x1e]
  40879d:	(bad)  
  40879e:	fcmovb st,st(5)
  4087a0:	jg     0x4087cc
  4087a2:	call   0xf3cf:0xb7cf2518
  4087a9:	jmp    0x19c12a24
  4087ae:	jae    0x408828
  4087b0:	dec    esp
  4087b1:	sbb    al,0x71
  4087b3:	xchg   edx,eax
  4087b4:	bound  edi,QWORD PTR es:[ebx+0x257ca997]
  4087bb:	push   ss
  4087bc:	jecxz  0x408799
  4087be:	inc    esi
  4087bf:	mov    dl,0x23
  4087c1:	xor    eax,0x916d085f
  4087c6:	repnz push es
  4087c8:	and    eax,0x3942e124
  4087cd:	mov    BYTE PTR [ebx],ah
  4087cf:	xchg   ebp,eax
  4087d0:	ja     0x40875e
  4087d2:	cmp    ch,BYTE PTR [edx]
  4087d4:	jmp    0x408808
  4087d6:	jg     0x4087a4
  4087d8:	xor    edi,eax
  4087da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087db:	cwde   
  4087dc:	push   esp
  4087dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087de:	adc    esp,ecx
  4087e0:	lahf   
  4087e1:	call   0xce57:0x61be8998
  4087e8:	mov    dh,0xbb
  4087ea:	rcl    dh,1
  4087ec:	ss jecxz 0x4087f7
  4087ef:	push   ebp
  4087f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087f1:	cmp    eax,0x3016c1f2
  4087f6:	sbb    dh,BYTE PTR [ebx-0x79]
  4087f9:	rcr    BYTE PTR [edx+0x5e],1
  4087fc:	out    0x1,al
  4087fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087ff:	(bad)  
  408800:	push   ss
  408801:	fisub  DWORD PTR [ebx-0x4e]
  408804:	dec    esi
  408805:	sbb    edi,DWORD PTR [edi+ecx*1-0x53]
  408809:	sub    DWORD PTR [esi+0x20bd6bf2],esp
  40880f:	xchg   BYTE PTR [ecx+0x251aabe4],ah
  408815:	pusha  
  408816:	or     BYTE PTR [esp+eax*2-0xfa3f2bb],dh
  40881d:	adc    bl,bl
  40881f:	or     bl,al
  408821:	ds cdq 
  408823:	in     al,dx
  408824:	cs jo  0x4087f7
  408827:	js     0x4087e3
  408829:	push   es
  40882a:	popf   
  40882b:	mov    eax,ds:0x5e3cc4e
  408830:	sbb    eax,0x6ef607bd
  408835:	sahf   
  408836:	cmp    esi,DWORD PTR [eax+0x7c8eeb27]
  40883c:	out    0xd6,al
  40883e:	dec    esp
  40883f:	xor    bh,bl
  408841:	test   eax,0x3b1717b0
  408846:	dec    esi
  408847:	xor    eax,0x6c6b04ae
  40884c:	jmp    0x4088af
  40884e:	add    eax,0xc53655c9
  408853:	xor    cl,BYTE PTR [ebx-0x75]
  408856:	sub    BYTE PTR [ebp-0x7b544c3a],0x50
  40885d:	xor    dh,ch
  40885f:	sub    BYTE PTR [ebx],0x1f
  408862:	cmp    al,0x82
  408864:	inc    ebp
  408865:	leave  
  408866:	add    ebx,DWORD PTR [esi+0x3d]
  408869:	pop    ecx
  40886a:	xlat   BYTE PTR ds:[ebx]
  40886b:	or     BYTE PTR [edi],bl
  40886d:	inc    esi
  40886e:	rcr    DWORD PTR [edx+ebx*2+0x2eef1976],0xf7
  408876:	cwde   
  408877:	push   ds
  408878:	packuswb mm1,QWORD PTR [esi+0x6c8f496d]
  40887f:	in     al,dx
  408880:	loope  0x408834
  408882:	and    edi,DWORD PTR cs:[ebx+0x18bbc84b]
  408889:	ds adc esp,edi
  40888c:	add    DWORD PTR [esi-0x52d01a16],edx
  408892:	mov    esi,0x73d857e5
  408897:	retf   0x2101
  40889a:	imul   ecx,DWORD PTR [ebx-0x712711f8],0xfffffff2
  4088a1:	int3   
  4088a2:	in     al,dx
  4088a3:	shl    DWORD PTR [ebp-0x2d],0x6d
  4088a7:	pop    ecx
  4088a8:	ins    BYTE PTR es:[edi],dx
  4088a9:	cmc    
  4088aa:	pop    ebx
  4088ab:	in     eax,0xc3
  4088ad:	ins    BYTE PTR es:[edi],dx
  4088ae:	(bad)  
  4088af:	pop    ecx
  4088b0:	mov    cl,BYTE PTR [esi-0x5a9bc028]
  4088b6:	into   
  4088b7:	pop    ds
  4088b8:	aam    0x5b
  4088ba:	add    DWORD PTR [esi+eax*2-0x6688738a],edi
  4088c1:	mov    eax,0xda0c3e8b
  4088c6:	test   DWORD PTR [edx+ecx*4-0x39b00c10],ebp
  4088cd:	int    0x85
  4088cf:	cmp    al,0xa1
  4088d1:	sub    ah,cl
  4088d3:	cwde   
  4088d4:	clc    
  4088d5:	loopne 0x408954
  4088d7:	lods   eax,DWORD PTR ds:[esi]
  4088d8:	gs add cl,ah
  4088db:	jle    0x4088e1
  4088dd:	lds    eax,FWORD PTR [eax+0x65318d91]
  4088e3:	dec    ebp
  4088e4:	data16 jo 0x4088b5
  4088e7:	scas   eax,DWORD PTR es:[edi]
  4088e8:	sub    al,0x85
  4088ea:	jns    0x4088b3
  4088ec:	push   0x7d3b9235
  4088f1:	push   ds
  4088f2:	repnz adc edx,DWORD PTR [ebp-0x7c21b318]
  4088f9:	xchg   esi,eax
  4088fa:	into   
  4088fb:	ins    BYTE PTR es:[edi],dx
  4088fc:	sbb    ah,BYTE PTR [edx+0x3a]
  4088ff:	je     0x408921
  408901:	ret    
  408902:	lods   eax,DWORD PTR ds:[esi]
  408903:	jo     0x408893
  408905:	add    eax,0x8dccbe5f
  40890a:	dec    ecx
  40890b:	pop    edi
  40890c:	cmp    eax,0x81f89927
  408911:	pop    esi
  408912:	ret    0xa4d6
  408915:	in     eax,dx
  408916:	fbstp  TBYTE PTR [edi]
  408918:	in     eax,dx
  408919:	jecxz  0x408933
  40891b:	mov    esi,DWORD PTR ds:0x3721eb90
  408921:	sub    eax,0x65382660
  408926:	adc    eax,0xb8ee83f
  40892b:	fisttp DWORD PTR [edi]
  40892d:	ret    0xb059
  408930:	jg     0x408931
  408932:	(bad)  
  408933:	aad    0x5e
  408935:	mov    esp,0xc35cc0ee
  40893a:	retf   0x3304
  40893d:	inc    esp
  40893e:	paddw  mm7,QWORD PTR [ebx]
  408941:	push   cs
  408942:	icebp  
  408943:	xchg   ebx,eax
  408944:	add    DWORD PTR [esi-0x36],eax
  408947:	push   ebp
  408948:	mov    edi,0xa22f06d0
  40894d:	fs jmp 0x9632:0x5e3bf960
  408955:	mov    ebp,0xd9be8bc7
  40895a:	and    DWORD PTR [edi],ecx
  40895c:	or     DWORD PTR [edx-0x69d06b33],0xccf80891
  408966:	sbb    al,0x7
  408968:	mov    dh,0x78
  40896a:	mov    fs,WORD PTR [esi]
  40896c:	ret    
  40896d:	xlat   BYTE PTR ds:[ebx]
  40896e:	aad    0x32
  408970:	daa    
  408971:	js     0x4089ad
  408973:	pop    ebx
  408974:	push   ebp
  408975:	iret   
  408976:	push   esp
  408977:	dec    esp
  408978:	cwde   
  408979:	inc    esi
  40897a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40897b:	fst    QWORD PTR ds:0x9bf7fe9
  408981:	pop    esi
  408982:	shr    BYTE PTR [edi+0x3a],cl
  408985:	cmp    al,0x50
  408987:	jns    0x40895a
  408989:	xchg   DWORD PTR [edx],ebp
  40898b:	push   ebx
  40898c:	out    dx,eax
  40898d:	mov    esp,0x211ad3c4
  408992:	outs   dx,BYTE PTR ds:[esi]
  408993:	shr    BYTE PTR [edi-0x50],0x1
  408997:	push   0xed991c08
  40899c:	out    dx,eax
  40899d:	cmp    dh,BYTE PTR [edi-0x21]
  4089a0:	mov    DWORD PTR [edx],eax
  4089a2:	mov    dh,0x84
  4089a4:	mov    edi,0xc215efdf
  4089a9:	push   esp
  4089aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089ab:	nop
  4089ac:	cs mov esi,?
  4089af:	into   
  4089b0:	cmp    bh,dl
  4089b2:	dec    edi
  4089b3:	cld    
  4089b4:	xchg   edi,eax
  4089b5:	lahf   
  4089b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089b7:	test   eax,0xf7f08bd9
  4089bc:	pop    ss
  4089bd:	in     eax,dx
  4089be:	adc    ebx,DWORD PTR [edi+0x579cf274]
  4089c4:	inc    esi
  4089c5:	mov    bl,ah
  4089c7:	ja     0x4089d0
  4089c9:	shl    edi,cl
  4089cb:	out    dx,al
  4089cc:	push   ecx
  4089cd:	adc    DWORD PTR [ecx],esp
  4089cf:	(bad)  
  4089d0:	aad    0xd6
  4089d2:	push   es
  4089d3:	cmp    edi,DWORD PTR es:[ecx+0x384d95f6]
  4089da:	sbb    eax,0x9d933c47
  4089df:	mov    eax,ds:0xc521d4bd
  4089e4:	hlt    
  4089e5:	adc    eax,DWORD PTR [esi]
  4089e7:	pop    es
  4089e8:	shr    ah,cl
  4089ea:	in     eax,dx
  4089eb:	loope  0x408982
  4089ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089ee:	inc    ebp
  4089ef:	pop    ebx
  4089f0:	push   es
  4089f1:	inc    ebx
  4089f2:	shl    ecx,1
  4089f4:	jecxz  0x4089a0
  4089f6:	mov    ds:0xf0e075e5,eax
  4089fb:	sbb    BYTE PTR [esi],ah
  4089fd:	fwait
  4089fe:	xchg   BYTE PTR [edi],bh
  408a00:	pop    edi
  408a01:	mov    ebp,0x4aa4d423
  408a06:	shr    BYTE PTR [edi],1
  408a08:	mov    DWORD PTR [ebx],edx
  408a0a:	push   edi
  408a0b:	fisttp WORD PTR [eax+0x7c070fc4]
  408a11:	pop    es
  408a12:	fimul  DWORD PTR fs:[ebp+0x5f67a137]
  408a19:	pop    ebp
  408a1a:	outs   dx,BYTE PTR ds:[esi]
  408a1b:	cmp    BYTE PTR ds:0xaef337cc,dl
  408a21:	dec    ebx
  408a22:	jne    0x4089bb
  408a24:	and    ebx,edx
  408a26:	ficomp WORD PTR [edi+0x75]
  408a29:	mov    dh,0x33
  408a2b:	outs   dx,DWORD PTR ds:[esi]
  408a2c:	mov    ebx,DWORD PTR [ebx+0x7f]
  408a2f:	rol    DWORD PTR [esi+0x0],0xfc
  408a33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a34:	gs mov ecx,0x16811c44
  408a3a:	dec    eax
  408a3b:	clc    
  408a3c:	dec    BYTE PTR [eax-0x3]
  408a3f:	fdivr  DWORD PTR [ebx+0x12]
  408a42:	xchg   esp,eax
  408a43:	jmp    0xc114e743
  408a48:	push   eax
  408a49:	inc    ebx
  408a4a:	dec    eax
  408a4b:	add    BYTE PTR [ebx],0x1f
  408a4e:	jmp    0x87d85242
  408a53:	push   ds
  408a54:	rol    BYTE PTR [ebx-0x3],1
  408a57:	cmp    BYTE PTR [esi+0x8e5efc6],cl
  408a5d:	shr    DWORD PTR [ebx],0xd9
  408a60:	push   edx
  408a61:	jg     0x4089ee
  408a63:	jmp    0xa9fa:0xe3a1a818
  408a6a:	and    BYTE PTR [ecx+0x32560f53],0x60
  408a71:	ret    
  408a72:	xchg   ebx,eax
  408a73:	push   ebp
  408a74:	stc    
  408a75:	xchg   BYTE PTR [esi+eax*2],bl
  408a78:	jbe    0x408ae3
  408a7a:	xor    edi,0xffffff98
  408a7d:	test   DWORD PTR [esp+edx*2+0x40ea597b],0xf4ee3c97
  408a88:	clc    
  408a89:	clc    
  408a8a:	jge    0x408a90
  408a8c:	leave  
  408a8d:	test   DWORD PTR ds:0xade3298f,0x7a393aa3
  408a97:	mov    ebp,DWORD PTR [ecx-0x57]
  408a9a:	sbb    bh,bl
  408a9c:	int3   
  408a9d:	sub    edi,ecx
  408a9f:	jo     0x408a75
  408aa1:	add    DWORD PTR gs:[esi+0x75],ebx
  408aa5:	jmp    0x2bb91eaf
  408aaa:	add    al,0x2b
  408aac:	mov    ds:0x57b1f722,al
  408ab1:	stc    
  408ab2:	jnp    0x408afe
  408ab4:	ins    BYTE PTR es:[edi],dx
  408ab5:	dec    edi
  408ab6:	sub    al,BYTE PTR [ebp-0x39da49d6]
  408abc:	pop    es
  408abd:	sbb    al,0x3f
  408abf:	out    0x28,eax
  408ac1:	jnp    0x408aa6
  408ac3:	(bad)  
  408ac4:	jbe    0x408ad7
  408ac6:	dec    edx
  408ac7:	ret    0xf542
  408aca:	xchg   BYTE PTR [ecx+0x4b72f7f],cl
  408ad0:	(bad)  
  408ad2:	pop    edi
  408ad3:	ss jg  0x408b51
  408ad6:	jae    0x408a7c
  408ad8:	adc    eax,0x31ffad28
  408add:	rcl    BYTE PTR es:[ecx+0x6f],cl
  408ae1:	jle    0x408b30
  408ae3:	rcl    BYTE PTR [eax+ebx*8-0x65],1
  408ae7:	std    
  408ae8:	xchg   DWORD PTR [ebp-0xd],ebx
  408aeb:	jmp    0x408b43
  408aed:	retf   
  408aee:	jb     0x408b5b
  408af0:	in     eax,0x66
  408af2:	vmread DWORD PTR [esi+0x66eb0731],eax
  408af9:	add    al,BYTE PTR [ebx]
  408afb:	mov    ecx,0xe69afa47
  408b00:	xor    dl,BYTE PTR [ecx]
  408b02:	sbb    BYTE PTR [eax+0x79],dh
  408b05:	jmp    0x36ff369c
  408b0a:	or     eax,0x34774fea
  408b0f:	out    dx,al
  408b10:	or     DWORD PTR [ecx],esi
  408b12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b13:	ror    BYTE PTR [eax-0x41],1
  408b16:	in     al,0xf
  408b18:	fisubr DWORD PTR [eax-0x3c07a663]
  408b1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b1f:	retf   
  408b20:	xchg   ebx,eax
  408b21:	pop    esi
  408b22:	add    BYTE PTR [ebx+0x4a],dl
  408b25:	inc    esp
  408b26:	mov    esi,0xfec3db6
  408b2b:	lahf   
  408b2c:	xchg   ebx,eax
  408b2d:	addr16 iret 
  408b2f:	sub    esi,DWORD PTR [eax+0x1]
  408b32:	loopne 0x408ac7
  408b34:	pop    es
  408b35:	jl     0x408b97
  408b37:	in     al,0xf4
  408b39:	pop    es
  408b3a:	fsub   DWORD PTR [ebx-0x7ecdb249]
  408b40:	jnp    0x408bb5
  408b42:	mov    bl,0x3e
  408b44:	adc    al,0x1
  408b46:	mov    dl,0xf1
  408b48:	test   BYTE PTR cs:[edx-0x44a369d],bh
  408b4f:	mov    eax,ds:0x3cc57b0e
  408b54:	push   edi
  408b55:	inc    ebp
  408b56:	mov    cl,0xe5
  408b58:	mov    ebp,0x6a4864ae
  408b5d:	pop    ds
  408b5e:	pop    esi
  408b5f:	push   ebp
  408b60:	and    eax,0x5eacd38b
  408b65:	or     DWORD PTR ds:0xb622e865,edi
  408b6b:	cmp    BYTE PTR [eax-0xe],bh
  408b6e:	push   cs
  408b6f:	lahf   
  408b70:	jo     0x408b66
  408b72:	scas   al,BYTE PTR es:[edi]
  408b73:	std    
  408b74:	add    al,0x83
  408b76:	js     0x408b7c
  408b78:	ja     0x408b8d
  408b7a:	mov    ecx,0xdced8d45
  408b7f:	cmp    al,0xc3
  408b81:	in     al,dx
  408b82:	mov    dh,0xd6
  408b84:	or     al,0xd9
  408b86:	or     ah,BYTE PTR [eax+0x4129c6e9]
  408b8c:	sub    ebx,DWORD PTR [eax+0x64f392ac]
  408b92:	sub    ah,al
  408b94:	fld    QWORD PTR [edx]
  408b96:	out    0x17,eax
  408b98:	loopne 0x408b35
  408b9a:	sub    DWORD PTR [eax+edi*4-0x20],0x37
  408b9f:	push   es
  408ba0:	fsincos 
  408ba2:	cmp    al,0x71
  408ba4:	mov    eax,ds:0xd3e7dcdb
  408ba9:	jb     0x408bfa
  408bab:	dec    ebp
  408bac:	mov    bh,0x62
  408bae:	jle    0x408c16
  408bb0:	and    edx,DWORD PTR [edx-0x72]
  408bb3:	xlat   BYTE PTR ds:[ebx]
  408bb4:	iret   
  408bb5:	mov    al,BYTE PTR ds:0x30a5a3f5
  408bbb:	cs xchg esp,eax
  408bbd:	retf   
  408bbe:	inc    ebx
  408bbf:	or     BYTE PTR [ebx-0x23],ch
  408bc2:	pop    edi
  408bc3:	add    DWORD PTR [esi],esi
  408bc5:	sbb    al,0x0
  408bc7:	fld    TBYTE PTR [ecx+0x25]
  408bca:	js     0x408c08
  408bcc:	fsubr  QWORD PTR [ebp-0x6303f0bf]
  408bd2:	pusha  
  408bd3:	add    DWORD PTR [ebx+0x3],edi
  408bd6:	in     eax,0xef
  408bd8:	dec    ecx
  408bd9:	jb     0x408b96
  408bdb:	add    esp,eax
  408bdd:	call   0x502925b0
  408be2:	pop    edi
  408be3:	leave  
  408be4:	mov    fs,WORD PTR [edi-0x2ecc2435]
  408bea:	sbb    al,0xa0
  408bec:	ficom  WORD PTR [esi-0x24fc9ec9]
  408bf2:	out    0x1c,eax
  408bf4:	ja     0x408c56
  408bf6:	mov    si,dx
  408bf9:	loopne 0x408c6c
  408bfb:	mov    bl,0x65
  408bfd:	push   edx
  408bfe:	sahf   
  408bff:	push   esp
  408c00:	or     bh,BYTE PTR [ebx-0x2e]
  408c03:	pop    eax
  408c04:	mov    ecx,esp
  408c06:	mov    DWORD PTR [esi-0x7b],edi
  408c09:	pop    esi
  408c0a:	sub    al,0xda
  408c0c:	mov    ah,bh
  408c0e:	push   edx
  408c0f:	outs   dx,BYTE PTR ds:[esi]
  408c10:	(bad)  [esi+eiz*8-0x12]
  408c14:	loop   0x408c0d
  408c16:	xor    eax,0x67135f7f
  408c1b:	dec    esi
  408c1c:	test   dl,bl
  408c1e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c1f:	xchg   esi,eax
  408c20:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408c21:	mov    edx,0x10cd9e23
  408c26:	ds xchg edx,eax
  408c28:	in     eax,dx
  408c29:	jle    0x408c62
  408c2b:	clc    
  408c2c:	cmp    BYTE PTR [eax-0x151d76b9],bl
  408c32:	icebp  
  408c33:	mov    cl,0xdc
  408c35:	pop    ecx
  408c36:	add    eax,DWORD PTR [edi-0x2c]
  408c39:	xchg   ebp,eax
  408c3a:	rcr    DWORD PTR [edx+0x70],0xab
  408c3e:	pop    esi
  408c3f:	jecxz  0x408c24
  408c41:	dec    ebx
  408c42:	scas   al,BYTE PTR es:[edi]
  408c43:	jp     0x408c21
  408c45:	in     eax,dx
  408c46:	stos   DWORD PTR es:[edi],eax
  408c47:	sbb    al,0x8e
  408c49:	lea    ebp,ds:0x52c64366
  408c4f:	sti    
  408c50:	dec    edi
  408c51:	push   eax
  408c52:	ret    
  408c53:	in     eax,dx
  408c54:	pop    edx
  408c55:	mov    bh,0x59
  408c57:	ret    
  408c58:	mov    ds:0x84807131,eax
  408c5d:	xchg   edi,eax
  408c5e:	sbb    ecx,DWORD PTR [eax+0x33499a37]
  408c64:	cmp    DWORD PTR [esi-0x75],0xffffffcd
  408c68:	int    0xbc
  408c6a:	pop    ebp
  408c6b:	sbb    al,0x8
  408c6d:	fs sub ch,dh
  408c70:	imul   ebp,DWORD PTR [edx+0x3b689cdc],0xffffffb6
  408c77:	jmp    0x408c88
  408c79:	fyl2xp1 
  408c7b:	pop    eax
  408c7c:	fcomip st,st(3)
  408c7e:	push   edi
  408c7f:	std    
  408c80:	test   DWORD PTR [esi],ebp
  408c82:	xor    edi,ebp
  408c84:	jnp    0x408cd3
  408c86:	mul    bl
  408c88:	push   esp
  408c89:	pop    edi
  408c8a:	push   edi
  408c8b:	mov    edx,0x4b75d17
  408c90:	in     eax,dx
  408c91:	push   es
  408c92:	mov    ebx,0x3a60899a
  408c97:	sub    al,cl
  408c99:	arpl   WORD PTR [edi],sp
  408c9b:	repnz push eax
  408c9d:	xchg   edi,eax
  408c9e:	jmp    0x9dca3915
  408ca3:	scas   al,BYTE PTR es:[edi]
  408ca4:	fldln2 
  408ca6:	sbb    bh,BYTE PTR [esi+edx*8-0x60fae2b]
  408cad:	outs   dx,DWORD PTR ds:[esi]
  408cae:	push   esi
  408caf:	aaa    
  408cb0:	jne    0x408c8a
  408cb2:	stc    
  408cb3:	add    bh,BYTE PTR [ebp-0x6e]
  408cb6:	into   
  408cb7:	inc    ebx
  408cb8:	xor    eax,0x12422906
  408cbd:	pop    es
  408cbe:	cmp    DWORD PTR [eax-0x66],0x534322a9
  408cc5:	in     al,0xe2
  408cc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408cc8:	inc    ebp
  408cc9:	mov    ebp,0x2a0aa169
  408cce:	cld    
  408ccf:	ret    
  408cd0:	stos   DWORD PTR es:[edi],eax
  408cd1:	jp     0x408d47
  408cd3:	xchg   esi,eax
  408cd4:	in     al,0xbf
  408cd6:	and    BYTE PTR [edx+0x6e],0xd1
  408cda:	popf   
  408cdb:	pop    esi
  408cdc:	aaa    
  408cdd:	sbb    DWORD PTR [ebx],edi
  408cdf:	mov    ebx,0x3ff7f3b5
  408ce4:	push   es
  408ce5:	adc    al,0x3e
  408ce7:	mov    bh,0xcb
  408ce9:	inc    esi
  408cea:	mov    eax,ds:0xa6f3809a
  408cef:	push   ebx
  408cf0:	pop    ss
  408cf1:	aas    
  408cf2:	scas   al,BYTE PTR es:[edi]
  408cf3:	xor    DWORD PTR [ebp+0x4aa8dec6],ebp
  408cf9:	inc    edx
  408cfa:	fnstsw WORD PTR [ebx-0x17]
  408cfd:	out    dx,al
  408cfe:	std    
  408cff:	out    0x3b,eax
  408d01:	mov    ch,0x90
  408d03:	jbe    0x408c95
  408d05:	lods   eax,DWORD PTR ds:[esi]
  408d06:	int    0x85
  408d08:	mov    ecx,gs
  408d0a:	lods   al,BYTE PTR ds:[esi]
  408d0b:	mov    ch,0xbe
  408d0d:	sbb    ebx,DWORD PTR [ebp-0x4f]
  408d10:	in     al,0x52
  408d12:	sbb    edi,DWORD PTR [ebx-0x34f23db2]
  408d18:	lods   al,BYTE PTR ds:[esi]
  408d19:	test   DWORD PTR [edi+esi*1+0x1ae6064],eax
  408d20:	pop    ecx
  408d21:	jmp    0x408ca7
  408d23:	dec    ebp
  408d24:	in     eax,dx
  408d25:	test   DWORD PTR [ebp-0x3ac2b729],esp
  408d2b:	(bad)  
  408d2c:	scas   al,BYTE PTR es:[edi]
  408d2d:	clc    
  408d2e:	jecxz  0x408cf1
  408d30:	inc    esp
  408d31:	or     eax,0x4177ae9e
  408d36:	(bad)  
  408d38:	pop    edi
  408d39:	(bad)  
  408d3a:	mov    ecx,0x8d8b522b
  408d3f:	xor    eax,0x79709f94
  408d44:	mov    ah,0x72
  408d46:	xor    eax,0x1a5d4b89
  408d4b:	xor    esi,edi
  408d4d:	mov    eax,ds:0x27b16180
  408d52:	jno    0x408d74
  408d54:	pop    ds
  408d55:	out    dx,eax
  408d56:	dec    edx
  408d57:	das    
  408d58:	aam    0x73
  408d5a:	fcomi  st,st(3)
  408d5c:	push   ebx
  408d5d:	in     al,0xe5
  408d5f:	lea    ebx,[esi+ebp*4-0x56]
  408d63:	inc    ebx
  408d64:	pusha  
  408d65:	pop    eax
  408d66:	push   cs
  408d67:	cdq    
  408d68:	addr16 dec edx
  408d6a:	(bad)  
  408d6b:	fadd   QWORD PTR [eax-0x27]
  408d6e:	ret    
  408d6f:	sub    dl,cl
  408d71:	xchg   ebp,eax
  408d72:	lea    esi,[esi]
  408d74:	cld    
  408d75:	out    0x85,eax
  408d77:	cmp    eax,0x74578b88
  408d7c:	cmp    ch,0x75
  408d7f:	(bad)  
  408d80:	cs push 0xdca12763
  408d86:	jg     0x408d2f
  408d88:	mov    edx,0xaca1af
  408d8d:	call   0x4004:0x33ba61f0
  408d94:	mov    ah,0xbe
  408d96:	clc    
  408d97:	jmp    0x408d9a
  408d99:	ds dec ecx
  408d9b:	leave  
  408d9c:	scas   al,BYTE PTR es:[edi]
  408d9d:	retf   
  408d9e:	cmp    DWORD PTR [edx],eax
  408da0:	push   esp
  408da1:	mov    ds:0xff27b123,al
  408da6:	ret    0xab4a
  408da9:	xor    eax,0x4f51457e
  408dae:	addr16 or eax,0x60535063
  408db4:	dec    ecx
  408db5:	mov    ds:0xa136c828,al
  408dba:	add    al,0xfe
  408dbc:	(bad)  
  408dbd:	(bad)  [edx-0x37be8e66]
  408dc3:	movntps XMMWORD PTR [eax],xmm3
  408dc6:	sub    DWORD PTR [ecx-0x3fe2b3f8],ebx
  408dcc:	sub    dh,BYTE PTR [esi+0x6575adee]
  408dd2:	mov    eax,DWORD PTR [edx]
  408dd4:	cs iret 
  408dd6:	lahf   
  408dd7:	loopne 0x408e05
  408dd9:	mov    dl,0x22
  408ddb:	jle    0x408d8f
  408ddd:	pop    ds
  408dde:	xor    eax,0x82b119d6
  408de3:	fcmove st,st(4)
  408de5:	aam    0x4d
  408de7:	pop    esi
  408de8:	dec    edi
  408de9:	xor    BYTE PTR es:[ecx],al
  408dec:	test   edx,ecx
  408dee:	aad    0xf9
  408df0:	adc    ecx,eax
  408df2:	les    edi,FWORD PTR [edx+0x619d8f94]
  408df8:	mov    esp,0xc10175b1
  408dfd:	sbb    ah,BYTE PTR [ecx+0x2d]
  408e00:	mov    al,ds:0x85bb25af
  408e05:	and    DWORD PTR [ecx-0x10],ebx
  408e08:	add    ebp,0xfc6360f1
  408e0e:	(bad)  
  408e0f:	clc    
  408e10:	push   esp
  408e11:	ins    BYTE PTR es:[edi],dx
  408e12:	xchg   esp,eax
  408e13:	cmp    eax,0x753efa53
  408e18:	jne    0x408e6f
  408e1a:	(bad)  
  408e1b:	arpl   sp,cx
  408e1d:	push   esp
  408e1e:	lds    esi,FWORD PTR [edi-0x233b7ae1]
  408e24:	mov    bh,0x9f
  408e26:	aad    0xe2
  408e28:	mov    ebx,DWORD PTR [eax-0x3d]
  408e2b:	pushf  
  408e2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e2d:	push   edx
  408e2e:	dec    ecx
  408e2f:	and    eax,0xa9660be0
  408e34:	push   ebp
  408e35:	sub    cl,ah
  408e37:	jp     0x408ddd
  408e39:	dec    ebx
  408e3a:	in     eax,dx
  408e3b:	adc    al,0xf8
  408e3d:	loop   0x408e1d
  408e3f:	and    BYTE PTR [esi-0x7c],bh
  408e42:	call   0x91f2:0xdbd49bb
  408e49:	adc    DWORD PTR [edi+0x3b],esi
  408e4c:	mov    ah,0x1
  408e4e:	jno    0x408e5c
  408e50:	push   cs
  408e51:	fadd   st,st(6)
  408e53:	push   edx
  408e54:	out    dx,eax
  408e55:	mov    ebp,0xcb4aa146
  408e5a:	and    DWORD PTR [ebx],eax
  408e5c:	aad    0x39
  408e5e:	sbb    BYTE PTR [esi-0x58],ch
  408e61:	sbb    dl,dh
  408e63:	and    BYTE PTR [esi+0x499fe35c],cl
  408e69:	mov    al,ds:0xcb7e82e1
  408e6e:	cs inc ecx
  408e70:	cmp    BYTE PTR [ebp-0x456915df],ch
  408e76:	xor    al,0xe4
  408e78:	stos   DWORD PTR es:[edi],eax
  408e79:	mov    al,ds:0x9ff4a0b8
  408e7e:	add    BYTE PTR [esi],al
  408e80:	test   BYTE PTR [edi-0x727c6edf],ah
  408e86:	out    dx,al
  408e87:	dec    ebp
  408e88:	adc    dl,0x7
  408e8b:	add    al,0x46
  408e8d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408e8e:	pop    ebx
  408e8f:	dec    eax
  408e90:	in     al,0x9d
  408e92:	aam    0xa
  408e94:	stc    
  408e95:	ret    
  408e96:	dec    eax
  408e97:	xchg   edx,eax
  408e98:	push   ds
  408e99:	int3   
  408e9a:	sbb    ch,BYTE PTR [eax+0x73]
  408e9d:	imul   esi,DWORD PTR [eax-0x77],0xffffffbc
  408ea1:	fcmovnb st,st(3)
  408ea3:	pop    ds
  408ea4:	sub    DWORD PTR [esi+0x43],ebx
  408ea7:	mov    dl,0x9a
  408ea9:	push   0xffffff90
  408eab:	gs aam 0xd2
  408eae:	mov    BYTE PTR [esi],cl
  408eb0:	test   DWORD PTR [eax+0x643425a8],ebp
  408eb6:	or     bh,bh
  408eb8:	push   eax
  408eb9:	or     BYTE PTR [edx+ebp*8+0x62],0xfc
  408ebe:	jae    0x408eac
  408ec0:	retf   0x1b10
  408ec3:	mov    bl,0xe4
  408ec5:	inc    esp
  408ec6:	add    DWORD PTR [ecx+0xd432b47],ecx
  408ecc:	retf   0x7c65
  408ecf:	pop    ss
  408ed0:	jmp    0xdea6:0xd81d49b
  408ed7:	ins    DWORD PTR es:[edi],dx
  408ed8:	jmp    0xc9c5:0x99ca0e2d
  408edf:	bound  ebx,QWORD PTR ds:0xea58afb5
  408ee5:	fdivr  st,st(4)
  408ee7:	jmp    0x408e98
  408ee9:	dec    ecx
  408eea:	mov    al,ds:0x21525d80
  408eef:	jns    0x408f03
  408ef1:	mov    WORD PTR [edx],?
  408ef3:	inc    edi
  408ef4:	adc    eax,0xc8b50444
  408ef9:	std    
  408efa:	inc    ebx
  408efb:	sub    BYTE PTR [ebx-0x1e9c6f12],ch
  408f01:	into   
  408f02:	aaa    
  408f03:	and    cl,bl
  408f05:	dec    edx
  408f07:	add    esp,DWORD PTR [ecx-0x4584481e]
  408f0d:	imul   ebp,DWORD PTR [ebx-0x18],0xe952f3d1
  408f14:	repz leave 
  408f16:	ds test al,0x4b
  408f19:	mov    dl,0xb5
  408f1b:	xor    BYTE PTR [edx-0x1d257ef1],al
  408f21:	cmp    al,0xa7
  408f23:	aad    0xa6
  408f25:	rcl    BYTE PTR [esi],1
  408f27:	jo     0x408ec7
  408f29:	or     ah,BYTE PTR [esi+0x4a]
  408f2c:	loopne 0x408f25
  408f2e:	xor    BYTE PTR [edx],0xf9
  408f31:	mov    edi,0xe26c7cf6
  408f36:	xor    dl,BYTE PTR [edi-0x3e]
  408f39:	int    0x8f
  408f3b:	dec    edi
  408f3c:	add    eax,0xb2c93a4c
  408f41:	retf   
  408f42:	adc    eax,0x39f0724b
  408f47:	lods   eax,DWORD PTR ds:[esi]
  408f48:	push   ecx
  408f49:	mov    ch,0x93
  408f4b:	(bad)  
  408f4c:	pusha  
  408f4d:	sbb    ch,BYTE PTR [edi-0x127deaf3]
  408f53:	sub    eax,0xe427939c
  408f58:	jae    0x408f4f
  408f5a:	ret    0xf2f5
  408f5d:	lahf   
  408f5e:	xchg   ecx,eax
  408f5f:	das    
  408f60:	ds repnz jecxz 0x408f18
  408f64:	sub    DWORD PTR [ecx-0x6b4519da],edx
  408f6a:	or     edx,DWORD PTR [eax-0x573ccbff]
  408f70:	cmp    cl,BYTE PTR [ebp-0x265f7219]
  408f76:	fsub   QWORD PTR [edx+ecx*8-0x183db2fe]
  408f7d:	push   cs
  408f7e:	mov    bl,0x72
  408f80:	lahf   
  408f81:	xor    esi,eax
  408f83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f84:	loopne 0x408f28
  408f86:	xchg   ebx,eax
  408f87:	pop    es
  408f88:	(bad)  
  408f8a:	xor    DWORD PTR [esi],edx
  408f8c:	cli    
  408f8d:	fld    TBYTE PTR [ecx+0x33]
  408f90:	mov    ds:0x40ba91e1,eax
  408f95:	lock jae 0x408fc6
  408f98:	add    eax,0xb435c6d6
  408f9d:	loope  0x408f4b
  408f9f:	das    
  408fa0:	xor    al,0x10
  408fa2:	imul   ebp,DWORD PTR [eax],0x2b
  408fa5:	mov    ah,0x76
  408fa7:	out    dx,al
  408fa8:	push   0x8a3b0662
  408fad:	hlt    
  408fae:	iret   
  408faf:	jp     0x409010
  408fb1:	xchg   BYTE PTR [ecx+0x160d8665],cl
  408fb7:	imul   BYTE PTR [edi+0x3a]
  408fba:	add    eax,0x9ed3e55a
  408fbf:	inc    ecx
  408fc0:	scas   eax,DWORD PTR es:[edi]
  408fc1:	test   al,0xda
  408fc3:	xchg   dl,bl
  408fc5:	mov    WORD PTR [esi+0x28f565b3],fs
  408fcb:	nop
  408fcc:	push   edi
  408fcd:	in     eax,dx
  408fce:	xor    eax,0x810ba842
  408fd3:	inc    BYTE PTR [edi+0x3d]
  408fd6:	mov    cl,0xa
  408fd8:	mov    bl,0xa3
  408fda:	loope  0x40903d
  408fdc:	push   0x1b
  408fde:	cmp    DWORD PTR [ecx],ecx
  408fe0:	les    ebx,FWORD PTR [ecx+0x29282c20]
  408fe6:	rcl    DWORD PTR [edi-0x2d],cl
  408fe9:	and    dl,BYTE PTR [ecx-0x63]
  408fec:	pop    ecx
  408fed:	clc    
  408fee:	scas   eax,DWORD PTR es:[edi]
  408fef:	(bad)  
  408ff0:	mov    ds:0xccc410a4,al
  408ff5:	paddw  mm6,QWORD PTR [ecx]
  408ff8:	fstp   QWORD PTR [ebp+0x2b4b79d7]
  408ffe:	jns    0x408f81
  409000:	mov    al,0x13
  409002:	icebp  
  409003:	push   ebp
  409004:	mov    ah,0xb
  409006:	inc    eax
  409007:	test   al,0x34
  409009:	pop    esp
  40900a:	or     eax,0x96148349
  40900f:	sbb    eax,0x1fb49949
  409014:	dec    esi
  409015:	sub    ebx,DWORD PTR [ecx]
  409017:	out    dx,al
  409018:	pop    edi
  409019:	jecxz  0x408fc3
  40901b:	and    DWORD PTR [ebp+0x2d292987],edx
  409021:	lods   al,BYTE PTR ds:[esi]
  409022:	aas    
  409023:	xor    bh,dh
  409025:	je     0x408fc9
  409027:	ret    0x7c2d
  40902a:	xchg   edi,eax
  40902b:	es push 0xfea3d44e
  409031:	dec    esi
  409032:	fnstcw WORD PTR [edx]
  409034:	retf   
  409035:	cmp    DWORD PTR [ecx],ebp
  409037:	xchg   edx,eax
  409038:	cdq    
  409039:	xchg   DWORD PTR [esi],ebp
  40903b:	gs xchg edx,eax
  40903d:	mov    ecx,0x6cfbe94d
  409042:	ins    DWORD PTR es:[edi],dx
  409043:	and    eax,esp
  409045:	and    eax,0xd17a507e
  40904a:	ja     0x40904e
  40904c:	(bad)  
  40904d:	jg     0x409052
  40904f:	test   eax,0xec4ebd53
  409054:	push   edi
  409055:	cwde   
  409056:	cmc    
  409057:	push   eax
  409058:	sahf   
  409059:	test   DWORD PTR [ebp+edi*4-0x65050978],ebx
  409060:	sub    DWORD PTR [esi+ecx*1+0x410f30f5],edx
  409067:	scas   eax,DWORD PTR es:[edi]
  409068:	mov    bh,0x7e
  40906a:	clc    
  40906b:	xor    dh,cl
  40906d:	add    eax,0x9a4c49b5
  409072:	out    dx,eax
  409073:	fiadd  DWORD PTR [ecx]
  409075:	in     eax,dx
  409076:	mov    ch,BYTE PTR [edx-0x6810ba3d]
  40907c:	mov    ebx,ebx
  40907e:	add    esp,edx
  409080:	fs mov esp,0x2d0ee97c
  409086:	mov    eax,ds:0x78c4acfd
  40908b:	nop
  40908c:	repnz cmp ah,dl
  40908f:	or     ebp,ebp
  409091:	sub    DWORD PTR [ebx],ebp
  409093:	out    0xd,al
  409095:	ds (bad) 
  409097:	cdq    
  409098:	loop   0x40909e
  40909a:	hlt    
  40909b:	cwde   
  40909c:	jmp    0x409072
  40909e:	mov    bl,0xeb
  4090a0:	jne    0x40904c
  4090a2:	test   al,0x61
  4090a4:	adc    al,BYTE PTR [ecx-0x145a06e0]
  4090aa:	scas   eax,DWORD PTR es:[edi]
  4090ab:	in     al,0x1e
  4090ad:	es inc edx
  4090af:	mov    bh,0x32
  4090b1:	pop    ss
  4090b2:	pop    eax
  4090b3:	out    0xb5,al
  4090b5:	cld    
  4090b6:	cmp    DWORD PTR [ebx+0x76eb622e],eax
  4090bc:	into   
  4090bd:	fst    DWORD PTR [ecx+0x6e414a03]
  4090c3:	fsubr  DWORD PTR [edi+ebx*4+0x21]
  4090c7:	mov    bh,al
  4090c9:	xchg   edi,eax
  4090ca:	fcom   DWORD PTR [ebx]
  4090cd:	test   eax,0x2473183b
  4090d2:	cmp    cl,al
  4090d4:	jp     0x409064
  4090d6:	pop    ebx
  4090d7:	and    dh,BYTE PTR [edi+0x7f522a32]
  4090dd:	adc    DWORD PTR [ebp+0x4ac31f43],esp
  4090e3:	push   0xffffffb4
  4090e5:	out    dx,al
  4090e6:	and    DWORD PTR [ecx-0x37cdd03c],ebx
  4090ec:	push   ebp
  4090ed:	mov    edx,DWORD PTR [ebx+0x25eae1ce]
  4090f3:	into   
  4090f4:	xchg   ecx,eax
  4090f5:	jle    0x4090f3
  4090f7:	(bad)  
  4090f8:	mov    ah,0x5d
  4090fa:	add    DWORD PTR [edi+0x4fe2f71f],edx
  409100:	mov    bh,0x64
  409102:	scas   eax,DWORD PTR es:[edi]
  409103:	push   cs
  409104:	xchg   esp,eax
  409105:	fs xchg edx,eax
  409107:	scas   al,BYTE PTR es:[edi]
  409108:	and    ebx,DWORD PTR [eax]
  40910a:	sub    dh,bh
  40910c:	aam    0xa2
  40910e:	fld    st(6)
  409110:	sub    ch,0xd9
  409113:	scas   al,BYTE PTR es:[edi]
  409114:	mov    cl,0x1f
  409116:	addr16 cmp al,0x90
  409119:	sbb    dl,BYTE PTR [ecx+0x5]
  40911c:	push   ds
  40911d:	neg    DWORD PTR [ecx+0x4321ba71]
  409123:	into   
  409124:	test   eax,0xb6962591
  409129:	push   0x920e828f
  40912e:	test   DWORD PTR [ebx],edx
  409130:	jbe    0x4090ff
  409132:	cmp    al,0xb5
  409134:	sub    cl,BYTE PTR [esp+ebp*8-0x5d]
  409138:	and    BYTE PTR [edi+0x343c8cdf],ch
  40913e:	icebp  
  40913f:	pop    ecx
  409140:	mov    dh,0x45
  409142:	inc    edi
  409143:	dec    edx
  409144:	jmp    0xcbf23de
  409149:	mov    ds:0xc731ad79,eax
  40914e:	ins    DWORD PTR es:[edi],dx
  40914f:	sbb    DWORD PTR [eax-0x4c],edi
  409152:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409153:	cld    
  409154:	ror    BYTE PTR [ecx+0x59],0x22
  409158:	int    0x97
  40915a:	jg     0x40915f
  40915c:	loop   0x409153
  40915e:	inc    ecx
  40915f:	or     DWORD PTR [edi+0x64],ebp
  409162:	pop    edx
  409163:	pop    ebp
  409164:	pop    esi
  409165:	loopne 0x409187
  409167:	fcmovne st,st(4)
  409169:	aaa    
  40916a:	mov    edi,0x4c7dbe7b
  40916f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409170:	mov    esp,0x1649fcb5
  409175:	(bad)  
  409177:	(bad)  
  409178:	mov    ebp,0xf8d8f68b
  40917d:	xchg   esp,eax
  40917e:	dec    edi
  40917f:	add    al,0xaf
  409181:	test   ebx,esp
  409183:	cmp    DWORD PTR [ecx-0xf],ecx
  409186:	lods   al,BYTE PTR ds:[esi]
  409187:	out    dx,eax
  409188:	cmp    bl,BYTE PTR [edx-0x5]
  40918b:	ins    BYTE PTR es:[edi],dx
  40918c:	mov    ds:0xb35779da,eax
  409191:	pop    eax
  409192:	ins    DWORD PTR es:[edi],dx
  409193:	xchg   ebp,eax
  409194:	sub    esi,DWORD PTR [edx-0x4c00e98]
  40919a:	cld    
  40919b:	out    0xf8,eax
  40919d:	(bad)  
  40919e:	xor    cl,BYTE PTR [eax-0x449aff62]
  4091a4:	repnz pop ecx
  4091a6:	arpl   WORD PTR [esi-0x3eb29f95],si
  4091ac:	inc    ebx
  4091ad:	retf   0xa108
  4091b0:	lods   al,BYTE PTR ds:[esi]
  4091b1:	(bad)  
  4091b2:	in     eax,0x51
  4091b4:	push   0x55f93aa8
  4091b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091ba:	xchg   esi,eax
  4091bb:	pop    ebp
  4091bc:	(bad)  
  4091bd:	push   cs
  4091be:	mov    edx,0xf9e6f47b
  4091c3:	xor    al,0xed
  4091c5:	xchg   esp,eax
  4091c6:	or     eax,DWORD PTR [ecx]
  4091c8:	jmp    0x4091af
  4091ca:	test   ecx,ecx
  4091cc:	xchg   edx,eax
  4091cd:	xchg   esi,eax
  4091ce:	pop    es
  4091cf:	xchg   ebx,eax
  4091d0:	dec    ebx
  4091d1:	xchg   ebp,eax
  4091d2:	shl    BYTE PTR [eax+edi*1],0xbb
  4091d6:	sbb    al,BYTE PTR [edx-0x1383a82b]
  4091dc:	gs aam 0x30
  4091df:	add    al,0x68
  4091e1:	jge    0x4091cf
  4091e3:	xor    esi,DWORD PTR [esi]
  4091e5:	daa    
  4091e6:	stos   DWORD PTR es:[edi],eax
  4091e7:	stos   BYTE PTR es:[edi],al
  4091e8:	pop    edx
  4091e9:	test   ebp,0xe43a9fa6
  4091ef:	fisubr DWORD PTR [esi+eiz*1-0x3beb255a]
  4091f6:	in     eax,dx
  4091f7:	stos   DWORD PTR es:[edi],eax
  4091f8:	adc    eax,DWORD PTR [ecx+0x78a48eef]
  4091fe:	mov    esp,0x795a3aab
  409203:	adc    esi,DWORD PTR [ebx+0x11]
  409206:	xchg   edi,eax
  409207:	scas   al,BYTE PTR es:[edi]
  409208:	or     eax,0x53371e13
  40920d:	jns    0x40928b
  40920f:	pop    ds
  409210:	xlat   BYTE PTR ds:[ebx]
  409211:	imul   esp,DWORD PTR [eax],0xffffff81
  409214:	scas   eax,DWORD PTR es:[edi]
  409215:	js     0x4091e0
  409217:	fnstcw WORD PTR cs:[ebx]
  40921a:	dec    esp
  40921b:	dec    eax
  40921c:	xor    BYTE PTR [ecx+0x13],cl
  40921f:	jp     0x409293
  409221:	mov    eax,ds:0xc6cac16e
  409226:	push   esi
  409227:	frstor [eax+0x5ae4c943]
  40922d:	push   esi
  40922e:	mov    cl,0xfd
  409230:	push   eax
  409231:	sub    DWORD PTR [esi],ecx
  409233:	ins    BYTE PTR es:[edi],dx
  409234:	cmp    ecx,DWORD PTR fs:[edi-0x4e]
  409238:	dec    eax
  409239:	mov    ecx,0xc72f6bf3
  40923e:	push   ds
  40923f:	mov    edi,0x4f7a9326
  409244:	ror    BYTE PTR [edx+0x23],0x8
  409248:	sub    cl,dh
  40924a:	mov    WORD PTR [ebx+0x1e],ds
  40924d:	ja     0x409280
  40924f:	dec    ecx
  409250:	ficomp DWORD PTR [edx-0x288803c2]
  409256:	rcr    BYTE PTR [eax],0x28
  409259:	or     ah,BYTE PTR [edx]
  40925b:	(bad)  
  40925d:	stc    
  40925e:	cli    
  40925f:	push   es
  409260:	adc    DWORD PTR [edi-0x3609a71],ebx
  409266:	adc    eax,0x7535c427
  40926b:	dec    edx
  40926c:	fsub   QWORD PTR [ebx+ecx*2]
  40926f:	fs loope 0x409226
  409272:	sbb    BYTE PTR [eax-0x28],al
  409275:	pop    ss
  409276:	xor    ebx,DWORD PTR [edx]
  409278:	mov    ds:0x952119e1,al
  40927d:	pop    ecx
  40927e:	imul   ebp,DWORD PTR [ebx+0x21],0xd56fa7d7
  409285:	push   eax
  409286:	shl    BYTE PTR [ebx+0x4e8f00b1],0xb7
  40928d:	jnp    0x409284
  40928f:	pop    eax
  409290:	adc    DWORD PTR [edx],edi
  409292:	sub    BYTE PTR [eax+0xc34c5ab],ch
  409298:	mov    ah,0xee
  40929a:	inc    esi
  40929b:	lahf   
  40929c:	cdq    
  40929d:	mov    ebp,0x215b7489
  4092a2:	sub    al,0x12
  4092a4:	(bad)  
  4092a5:	stos   DWORD PTR es:[edi],eax
  4092a6:	xor    DWORD PTR [eax+0x11],edx
  4092a9:	aas    
  4092aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092ab:	gs and al,0x96
  4092ae:	mov    cl,0x5d
  4092b0:	sbb    al,0x8b
  4092b2:	aaa    
  4092b3:	xor    BYTE PTR [ebx-0x61bc8617],0x50
  4092ba:	inc    ebx
  4092bb:	stos   BYTE PTR es:[edi],al
  4092bc:	fild   DWORD PTR [esi+0x6a]
  4092bf:	xchg   ebx,eax
  4092c0:	iret   
  4092c1:	add    al,0x69
  4092c3:	retf   0x1983
  4092c6:	inc    edi
  4092c7:	aaa    
  4092c8:	in     eax,0x22
  4092ca:	xor    eax,0xc46cde06
  4092cf:	push   edx
  4092d0:	fisttp QWORD PTR [esi+0x36]
  4092d3:	xor    BYTE PTR [edx+0x2a14b3e5],0xa2
  4092da:	xchg   esp,eax
  4092db:	jnp    0x409335
  4092dd:	sub    ebx,DWORD PTR [ebx-0x2b]
  4092e0:	or     al,0x1d
  4092e2:	in     al,dx
  4092e3:	jnp    0x4092c8
  4092e5:	jg     0x40929c
  4092e7:	dec    edx
  4092e8:	ja     0x4092ea
  4092ea:	add    eax,0xef39bc30
  4092ef:	sub    ch,bl
  4092f1:	icebp  
  4092f2:	and    bh,BYTE PTR [eax-0x3b]
  4092f5:	xor    al,0x17
  4092f7:	sbb    bh,dl
  4092f9:	adc    eax,0xab921220
  4092fe:	and    BYTE PTR [edi-0x6e],dh
  409301:	pop    edx
  409302:	imul   edi,DWORD PTR [edi-0x5fc6588f],0x5
  409309:	cmp    al,0xd8
  40930b:	pusha  
  40930c:	xchg   ebx,eax
  40930d:	jl     0x40934a
  40930f:	sub    ecx,DWORD PTR [esi-0x6a]
  409312:	test   eax,0x6ea07e31
  409317:	push   edx
  409318:	repz xor ah,bl
  40931b:	fisttp WORD PTR [eax+0x76585c8e]
  409321:	dec    eax
  409322:	cmp    BYTE PTR [ecx*2-0x41735050],0x2d
  40932a:	pop    ecx
  40932b:	push   ecx
  40932c:	call   0x713b1217
  409331:	xor    ch,BYTE PTR [esi-0x1f5de95c]
  409337:	push   ebp
  409338:	mov    dh,0x6b
  40933a:	ret    
  40933b:	(bad)  [ebp-0x1024e100]
  409341:	jae    0x4092e3
  409343:	dec    ebx
  409344:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409345:	ret    
  409346:	push   esi
  409347:	xchg   esp,eax
  409348:	repnz xchg ebx,eax
  40934a:	nop
  40934b:	push   cs
  40934c:	fwait
  40934d:	lock and DWORD PTR ds:0x555aad0,ecx
  409354:	pop    esp
  409355:	or     DWORD PTR [eax+edi*8+0xc0f6254],0xffffffc5
  40935d:	in     al,dx
  40935e:	and    DWORD PTR [esi+eax*1+0x32],esp
  409362:	fisub  WORD PTR [ecx+0x42]
  409365:	sub    ebp,DWORD PTR [eax]
  409367:	nop
  409368:	jne    0x40938a
  40936a:	pop    es
  40936b:	rcr    esp,0xa4
  40936e:	pop    edx
  40936f:	adc    esi,esi
  409371:	repnz push esi
  409373:	mov    DWORD PTR [eax-0x27dac633],ebx
  409379:	push   cs
  40937a:	sahf   
  40937b:	mov    ecx,0x47da0438
  409380:	es mov ah,0xa6
  409383:	mov    dl,0xf1
  409385:	mov    bl,0x71
  409387:	repz xor eax,0xe5a8039
  40938d:	push   ss
  40938e:	pop    ecx
  40938f:	loopne 0x4093b7
  409391:	adc    ah,ch
  409393:	mov    ebx,0xf5af5b92
  409398:	xlat   BYTE PTR ds:[ebx]
  409399:	and    ebx,DWORD PTR [esi]
  40939b:	pop    edx
  40939c:	mov    ah,0x8
  40939e:	inc    ebp
  40939f:	sbb    bl,cl
  4093a1:	jl     0x40934f
  4093a3:	add    BYTE PTR [ebp+0x8],0x83
  4093a7:	test   BYTE PTR [ebp-0x7586893c],al
  4093ad:	jg     0x40941e
  4093af:	xchg   esp,eax
  4093b0:	mov    ax,0x7817
  4093b4:	add    BYTE PTR [ebx+0x32],ah
  4093b7:	xor    DWORD PTR [edx+edi*4-0x4f561f6b],ebp
  4093be:	or     DWORD PTR [esp+eax*4+0x39a00978],ebx
  4093c5:	test   BYTE PTR [ebx-0x17796805],0x69
  4093cc:	(bad)  
  4093cd:	or     BYTE PTR [edi+0x33d247c7],cl
  4093d3:	cdq    
  4093d4:	push   0x472ef3b6
  4093d9:	sbb    DWORD PTR [edx+0x3be4f8c8],ebp
  4093df:	call   0x938e:0x90915729
  4093e6:	pop    ecx
  4093e7:	cmp    DWORD PTR [esi+0x60],edx
  4093ea:	xchg   ebx,eax
  4093eb:	adc    BYTE PTR [ecx+ebx*4],0xbf
  4093ef:	mov    ds,WORD PTR [edx-0x436f9e4d]
  4093f5:	fld    DWORD PTR [ebp-0x2fc6beda]
  4093fb:	and    ecx,esp
  4093fd:	cmp    DWORD PTR [ebx-0x53],edi
  409400:	scas   al,BYTE PTR es:[edi]
  409401:	sub    edi,DWORD PTR [ecx+0x68]
  409404:	jno    0x4093d1
  409406:	inc    ecx
  409407:	push   esp
  409408:	mov    bl,0x61
  40940a:	mov    bh,0xd4
  40940c:	icebp  
  40940d:	xchg   esi,eax
  40940e:	sub    dl,BYTE PTR [edi]
  409410:	div    BYTE PTR [ebp+0x2d]
  409413:	test   BYTE PTR [edi-0x1d],cl
  409416:	add    al,0x20
  409418:	jbe    0x40940e
  40941a:	dec    ecx
  40941b:	les    ebx,FWORD PTR [edx+edi*1-0x44]
  40941f:	and    bh,BYTE PTR ds:0x5b67bb08
  409425:	adc    al,0x56
  409427:	jne    0x409456
  409429:	xchg   DWORD PTR [esi-0x145ba01e],edx
  40942f:	add    ebx,DWORD PTR [esi]
  409431:	mov    eax,0xdae7a875
  409436:	or     BYTE PTR [edx-0x1d759199],bl
  40943c:	push   es
  40943d:	ja     0x40945e
  40943f:	xchg   ebx,eax
  409440:	enter  0xe4f5,0x16
  409444:	pusha  
  409445:	sbb    esp,edi
  409447:	fst    DWORD PTR [ebx-0x3a0f055d]
  40944d:	mov    ds:0x8e7ecb39,al
  409452:	xchg   esi,eax
  409453:	adc    al,0x49
  409455:	sub    al,0x3f
  409457:	push   cs
  409458:	mov    edx,DWORD PTR [esi+0x4a]
  40945b:	addr16 push ebp
  40945d:	sbb    al,0x9c
  40945f:	mov    dl,0x3c
  409461:	or     al,0x35
  409463:	les    esp,FWORD PTR [edx-0x65]
  409466:	sbb    DWORD PTR [edx+0x20c3f66a],0xc2f9eedd
  409470:	mov    edx,0xb5ac3942
  409475:	cmp    ebp,ebp
  409477:	adc    BYTE PTR [edi+0x6b4e9352],dh
  40947d:	jl     0x4094b8
  40947f:	push   cs
  409480:	push   es
  409481:	or     al,0x53
  409483:	cmp    eax,0x539bb363
  409488:	sub    BYTE PTR [eax-0x11d1a2ee],ch
  40948e:	or     ebp,DWORD PTR ds:0x6dc06094
  409494:	mov    esp,0x17a9b902
  409499:	mov    ch,0x8d
  40949b:	dec    esi
  40949c:	paddq  mm5,mm1
  40949f:	jbe    0x4094ad
  4094a1:	jnp    0x4094d7
  4094a3:	retf   
  4094a4:	pop    DWORD PTR [eax+0x1869e35d]
  4094aa:	hlt    
  4094ab:	and    al,0x29
  4094ad:	push   ecx
  4094ae:	(bad)  
  4094af:	jmp    FWORD PTR [edx]
  4094b1:	cld    
  4094b2:	adc    BYTE PTR [ebp+esi*8-0x1411ca6b],cl
  4094b9:	jno    0x40946b
  4094bb:	fst    DWORD PTR [eax-0x2d]
  4094be:	not    dh
  4094c0:	fld    DWORD PTR [ecx]
  4094c2:	dec    ecx
  4094c3:	fcom   DWORD PTR [ebx-0x41]
  4094c6:	add    ebp,ecx
  4094c8:	addr16 sub esp,ebx
  4094cb:	inc    ebp
  4094cc:	or     BYTE PTR ds:0x7e71abe8,al
  4094d2:	cmp    dh,BYTE PTR ds:0x4178f3b9
  4094d8:	inc    eax
  4094d9:	loope  0x4094e2
  4094db:	sbb    DWORD PTR [esp+ebp*4+0xfc15f29],esi
  4094e2:	sub    DWORD PTR [eax-0x6d],eax
  4094e5:	push   ebx
  4094e6:	mov    eax,0xc8e0caba
  4094eb:	push   ebp
  4094ec:	outs   dx,DWORD PTR ds:[esi]
  4094ed:	stos   DWORD PTR es:[edi],eax
  4094ee:	cmc    
  4094ef:	aad    0x77
  4094f1:	gs xchg cl,dl
  4094f4:	push   ecx
  4094f5:	adc    DWORD PTR [edi-0x6d54f3b4],0x19
  4094fc:	xor    esi,DWORD PTR [eax+0x68]
  4094ff:	mov    edx,0xedc6df51
  409504:	call   0x3358:0xb389ddf
  40950b:	js     0x40956b
  40950d:	cmp    eax,eax
  40950f:	call   0x360b:0xe026710c
  409516:	stos   BYTE PTR es:[edi],al
  409517:	or     BYTE PTR [ecx+edi*2],0xb1
  40951b:	stos   DWORD PTR es:[edi],eax
  40951c:	loopne 0x40952a
  40951e:	stos   DWORD PTR es:[edi],eax
  40951f:	pop    esi
  409520:	jle    0x409562
  409522:	dec    esi
  409523:	rcr    dl,0x6c
  409526:	mov    ebp,0x3926c998
  40952b:	fild   WORD PTR [ebp-0x5]
  40952e:	fist   DWORD PTR [ebx-0x1d]
  409531:	jb     0x409511
  409533:	shl    DWORD PTR [esi],cl
  409535:	ss fs mov eax,0x76b9ec7c
  40953c:	dec    esp
  40953d:	mov    eax,ds:0xdd43b2bd
  409542:	mov    dl,0xbe
  409544:	stc    
  409545:	(bad)  
  409546:	and    eax,0x9ead5f61
  40954b:	cmp    al,BYTE PTR [esi]
  40954d:	pop    ecx
  40954e:	mov    ebx,0xd21660e1
  409553:	mul    DWORD PTR [edx]
  409555:	jae    0x409558
  409557:	hlt    
  409558:	rcr    BYTE PTR [eax],0x30
  40955b:	into   
  40955c:	adc    DWORD PTR [edi+0x75757890],esp
  409562:	mov    al,BYTE PTR [esi+0x73f8acb]
  409568:	pop    edx
  409569:	push   cs
  40956a:	sbb    al,BYTE PTR [ebx]
  40956c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40956d:	sbb    ch,ch
  40956f:	cmp    al,0x11
  409572:	sbb    ebx,ecx
  409574:	add    al,0x6
  409576:	mov    eax,ds:0x4f2f7459
  40957b:	retf   0x78e5
  40957e:	bound  edi,QWORD PTR [edi+0x2a]
  409581:	call   0x2c8ea35a
  409586:	rcl    DWORD PTR [ebx],1
  409588:	xchg   edx,eax
  409589:	fadd   DWORD PTR [esi]
  40958b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40958c:	adc    esi,esi
  40958e:	push   cs
  40958f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409590:	jb     0x409590
  409592:	adc    dh,BYTE PTR [ebx+0x70431c4a]
  409598:	jp     0x409572
  40959a:	mov    edx,DWORD PTR [ebx+ecx*2-0x10c663e8]
  4095a1:	mov    ds:0x50a0b261,eax
  4095a6:	jge    0x4095ef
  4095a8:	(bad)  
  4095a9:	ficomp WORD PTR [eax+eax*1+0x7c1c5fff]
  4095b0:	shl    BYTE PTR [ebp+0x1],1
  4095b3:	nop
  4095b4:	hlt    
  4095b5:	into   
  4095b6:	inc    edi
  4095b7:	cmp    edi,edx
  4095b9:	(bad)  
  4095ba:	xchg   ebx,eax
  4095bb:	add    al,0xa7
  4095bd:	out    dx,al
  4095be:	das    
  4095bf:	mov    cl,ah
  4095c1:	scas   eax,DWORD PTR es:[edi]
  4095c2:	or     al,0x8d
  4095c4:	mov    edi,0x33b489f1
  4095c9:	push   es
  4095ca:	dec    ebp
  4095cb:	pop    esi
  4095cc:	gs push ss
  4095ce:	fwait
  4095cf:	mov    edi,0xbf11f3f8
  4095d4:	push   ss
  4095d5:	adc    cl,ah
  4095d7:	xor    DWORD PTR [eax-0x5],ebx
  4095da:	ret    
  4095db:	sbb    eax,0xc0033793
  4095e0:	(bad)  
  4095e2:	add    eax,0x36ad554e
  4095e7:	or     al,0x75
  4095e9:	push   sp
  4095eb:	dec    esp
  4095ec:	shl    esp,0x7a
  4095ef:	xor    ecx,eax
  4095f1:	and    DWORD PTR [ebp-0x5bfd7954],esp
  4095f7:	mov    esi,0xfce58f5a
  4095fc:	push   edi
  4095fd:	into   
  4095fe:	iret   
  4095ff:	push   cs
  409600:	jnp    0x4095cc
  409602:	cwde   
  409603:	scas   al,BYTE PTR es:[edi]
  409604:	sbb    eax,0x41d89ec5
  409609:	int    0xe0
  40960b:	ror    al,1
  40960d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40960e:	sbb    eax,0x5c281d00
  409613:	iret   
  409614:	sbb    DWORD PTR [ebp-0x49],eax
  409617:	adc    BYTE PTR [ecx+0x7348c12c],bh
  40961d:	adc    eax,0xed5c6b19
  409622:	mov    ah,0x8b
  409624:	mov    esi,0xa84246c8
  409629:	pop    ebp
  40962a:	mov    ebx,0x812a2d2
  40962f:	pop    esi
  409630:	xchg   ebx,eax
  409631:	xor    edi,DWORD PTR [edi]
  409633:	pop    ecx
  409634:	iret   
  409635:	jmp    0x2b08b2fe
  40963a:	daa    
  40963b:	fsubrp st(3),st
  40963d:	sub    DWORD PTR [edi+edi*2-0x60],eax
  409641:	mov    ebp,0x65274a5d
  409646:	pop    ds
  409647:	mov    edi,0xa82e5081
  40964c:	sub    ebp,ebp
  40964e:	lds    esp,FWORD PTR [edi-0x20]
  409651:	push   cs
  409652:	dec    esi
  409653:	push   cs
  409654:	js     0x409656
  409656:	sub    DWORD PTR ds:0x878be7ed,esi
  40965c:	cmp    dl,cl
  40965e:	or     DWORD PTR [esi-0x47f67593],ebx
  409664:	mov    esi,esi
  409666:	and    DWORD PTR [eax+ecx*4-0x5bd90cbb],ebp
  40966d:	inc    esp
  40966e:	dec    eax
  40966f:	and    ebp,DWORD PTR ds:0xbf7afcd5
  409675:	pop    edx
  409676:	adc    al,0xf5
  409678:	(bad)  
  409679:	sbb    esp,DWORD PTR ds:0xc99d03b7
  40967f:	into   
  409680:	daa    
  409681:	dec    edx
  409682:	sbb    DWORD PTR [ebp-0x20db0bb9],0x64b04db0
  40968c:	sbb    eax,0xfc5fd944
  409691:	add    ebp,DWORD PTR [edx+ebp*8-0x70]
  409695:	add    BYTE PTR [ebx+0x24a93320],0x4c
  40969c:	adc    eax,0x5cdc5870
  4096a1:	pop    ds
  4096a2:	or     dh,bl
  4096a4:	lods   al,BYTE PTR ds:[esi]
  4096a5:	rol    dh,cl
  4096a7:	retf   0x49b0
  4096aa:	call   0x4f3:0xddc2c2b0
  4096b1:	and    eax,0xc3abbc3c
  4096b6:	jbe    0x4096ef
  4096b8:	mov    bh,0x3d
  4096ba:	ds in  al,dx
  4096bc:	stos   BYTE PTR es:[edi],al
  4096bd:	xchg   ebx,eax
  4096be:	fdiv   st(6),st
  4096c0:	lods   al,BYTE PTR es:[esi]
  4096c2:	mov    ecx,ebp
  4096c4:	data16 jg 0x40972a
  4096c7:	daa    
  4096c8:	mov    WORD PTR [ecx],fs
  4096ca:	outs   dx,BYTE PTR ds:[esi]
  4096cb:	rol    DWORD PTR [eax-0x80],cl
  4096ce:	mov    ch,0xf0
  4096d0:	cld    
  4096d1:	jmp    0x4096b2
  4096d3:	pusha  
  4096d4:	in     eax,dx
  4096d5:	(bad)  
  4096d6:	bound  ecx,QWORD PTR [ebx-0x2bf8d7eb]
  4096dc:	(bad)  
  4096dd:	jp     0x409755
  4096df:	bound  ecx,QWORD PTR [edi]
  4096e1:	xchg   DWORD PTR [ebx],ebp
  4096e3:	xor    eax,0xab43440e
  4096e8:	xchg   ecx,eax
  4096e9:	push   esi
  4096ea:	push   esi
  4096eb:	mov    WORD PTR [eax],cs
  4096ed:	add    eax,0x1722735f
  4096f2:	add    ebp,ebx
  4096f4:	sub    DWORD PTR [ebx],0x8e3f9dc3
  4096fa:	sub    eax,0x996d513f
  4096ff:	pop    es
  409700:	in     al,dx
  409701:	sub    BYTE PTR [edx-0x36],dl
  409704:	(bad)  
  409705:	sar    al,0xf6
  409708:	je     0x409721
  40970a:	push   eax
  40970b:	jne    0x409692
  40970d:	mov    edi,0xa33c55e7
  409712:	adc    edi,ebp
  409714:	or     BYTE PTR [ecx-0x3e],0x6
  409718:	dec    ebx
  409719:	dec    esp
  40971a:	pop    edx
  40971b:	pop    ss
  40971c:	pop    eax
  40971d:	mov    eax,0x7c398d5e
  409722:	pop    eax
  409723:	xor    ecx,DWORD PTR [ecx]
  409725:	jmp    0x8c05:0x9a88b8b4
  40972c:	xor    al,0x10
  40972e:	or     al,0x35
  409730:	lds    ebp,FWORD PTR [eax-0xab9e59b]
  409736:	mov    dl,0xb8
  409738:	xchg   esp,eax
  409739:	daa    
  40973a:	jg     0x409729
  40973c:	jle    0x409707
  40973e:	cwde   
  40973f:	test   eax,0x55d47356
  409744:	adc    BYTE PTR [esi+0x16662d4e],bl
  40974a:	in     eax,0x6
  40974c:	and    ch,BYTE PTR [ecx+edi*2-0x7d]
  409750:	sub    BYTE PTR [esi-0x78252130],bl
  409756:	aaa    
  409757:	pop    ebx
  409758:	and    cl,BYTE PTR [edx]
  40975a:	hlt    
  40975b:	mov    ecx,DWORD PTR [ebx]
  40975d:	sub    BYTE PTR [ebx-0x4d7e04db],dl
  409763:	adc    DWORD PTR [ecx+0x46],esi
  409766:	cli    
  409767:	jg     0x409748
  409769:	scas   eax,DWORD PTR es:[edi]
  40976a:	sbb    dh,BYTE PTR [edi]
  40976c:	shl    BYTE PTR [esi],cl
  40976e:	jno    0x4096fb
  409770:	dec    ebp
  409771:	jbe    0x4097c4
  409773:	into   
  409774:	mov    al,ds:0x50e8a041
  409779:	cwde   
  40977a:	cmp    BYTE PTR [ebp-0x68a9b926],al
  409780:	mov    bl,0x73
  409782:	dec    eax
  409783:	popa   
  409784:	pop    edi
  409785:	xchg   edi,eax
  409786:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409787:	ins    BYTE PTR es:[edi],dx
  409788:	rol    BYTE PTR [eax],0xe6
  40978b:	inc    ebx
  40978c:	add    ecx,DWORD PTR [edi+0x643cbe6b]
  409792:	and    eax,0x2647a1b7
  409797:	in     al,0xeb
  409799:	test   eax,0xc70399d8
  40979e:	test   al,0xd6
  4097a0:	std    
  4097a1:	mov    al,ds:0x95b22e5a
  4097a6:	mov    eax,ds:0x221e4fce
  4097ab:	cmp    al,0x43
  4097ad:	cld    
  4097ae:	dec    edi
  4097af:	cmp    bh,BYTE PTR [ecx+0x69]
  4097b2:	xor    eax,0x1d235e52
  4097b7:	cmp    eax,0x236d1029
  4097bc:	and    BYTE PTR [eax],0xbb
  4097bf:	mov    cl,0x8d
  4097c1:	add    esi,DWORD PTR [eax-0x1]
  4097c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097c5:	daa    
  4097c6:	test   DWORD PTR [esi+0x27],ecx
  4097c9:	iret   
  4097ca:	je     0x409823
  4097cc:	cmp    eax,DWORD PTR [edi]
  4097ce:	dec    DWORD PTR [esi-0x4d]
  4097d1:	pop    edi
  4097d2:	cwde   
  4097d3:	pop    edi
  4097d4:	mov    ch,0xae
  4097d6:	and    ebp,ebp
  4097d8:	mov    ds:0x2d4774cf,eax
  4097dd:	or     DWORD PTR [ebp+0x663be5db],ebx
  4097e3:	inc    eax
  4097e4:	hlt    
  4097e5:	xlat   BYTE PTR ds:[ebx]
  4097e6:	mov    dl,BYTE PTR [ebx+ecx*1+0x2a]
  4097ea:	jp     0x4097e5
  4097ec:	pop    es
  4097ed:	addr16 in eax,0xd9
  4097f0:	lahf   
  4097f1:	push   esp
  4097f2:	mov    ecx,0xb9a5ce41
  4097f7:	pop    esi
  4097f8:	test   al,0xfa
  4097fa:	repz pop esp
  4097fc:	pop    es
  4097fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4097fe:	loope  0x4097eb
  409800:	data16 icebp 
  409802:	adc    BYTE PTR ds:0x884030d3,0xef
  409809:	pop    eax
  40980a:	fstp   DWORD PTR [ebx+0x331c266a]
  409810:	cmp    eax,0xf5622465
  409815:	pop    ds
  409816:	into   
  409817:	jecxz  0x4097c1
  409819:	pop    ebx
  40981a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40981b:	jge    0x4097f3
  40981d:	xchg   esi,eax
  40981e:	sbb    ah,BYTE PTR [edi+0x79e3e739]
  409824:	pop    edi
  409825:	arpl   WORD PTR [edi+0x53],bp
  409828:	mov    dh,0x47
  40982a:	int3   
  40982b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40982c:	adc    edx,DWORD PTR [ebp+0x4e]
  40982f:	adc    ebp,DWORD PTR [ecx+0x61]
  409832:	or     BYTE PTR [ecx-0x2d],bh
  409835:	dec    eax
  409836:	retf   
  409837:	adc    dh,BYTE PTR [ecx]
  409839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40983a:	cs fwait
  40983c:	sub    DWORD PTR [ebp+edx*2-0x26],ecx
  409840:	ja     0x409847
  409842:	jbe    0x409854
  409844:	inc    edi
  409845:	pop    ds
  409846:	jno    0x4097d8
  409848:	mov    esp,0x80322d82
  40984d:	out    0x46,al
  40984f:	mov    al,0x39
  409851:	push   ss
  409852:	shl    BYTE PTR [esi],cl
  409854:	idiv   BYTE PTR es:[ecx-0x62]
  409858:	pop    ds
  409859:	out    0x92,al
  40985b:	fimul  DWORD PTR [ebx-0x34ace65f]
  409861:	xchg   ebp,eax
  409862:	mov    BYTE PTR [edi],cl
  409864:	out    0xfb,al
  409866:	fidiv  WORD PTR fs:[ebx+0x5d1eafde]
  40986d:	and    DWORD PTR [ecx],esp
  40986f:	repz test BYTE PTR [esi],bh
  409872:	ins    DWORD PTR es:[edi],dx
  409873:	scas   eax,DWORD PTR es:[edi]
  409874:	or     eax,0x4d544be3
  409879:	pop    ebx
  40987a:	jp     0x40982f
  40987c:	leave  
  40987d:	push   DWORD PTR [edx-0x2dd2151e]
  409883:	(bad)  
  409884:	fistp  QWORD PTR [ebx]
  409886:	inc    ebx
  409887:	leave  
  409888:	adc    ebx,DWORD PTR [esi-0x37]
  40988b:	leave  
  40988c:	xor    ebp,eax
  40988e:	inc    ebp
  40988f:	pop    edx
  409890:	shl    BYTE PTR [eax-0x8bd5d05],0xb0
  409897:	in     al,0xe3
  409899:	adc    DWORD PTR [ebx-0x2c],0x24a8a7da
  4098a0:	sbb    ah,BYTE PTR [ecx-0x32f4a345]
  4098a6:	aaa    
  4098a7:	test   BYTE PTR [eax+0x2e],cl
  4098aa:	xchg   ecx,eax
  4098ab:	sar    esp,cl
  4098ad:	push   ebp
  4098ae:	scas   al,BYTE PTR es:[edi]
  4098af:	adc    BYTE PTR [ecx-0x452c6c96],dl
  4098b5:	outs   dx,DWORD PTR ds:[esi]
  4098b6:	inc    ebp
  4098b7:	mov    WORD PTR [eax+ecx*1],cs
  4098ba:	adc    eax,0xdc976f4a
  4098bf:	into   
  4098c0:	jnp    0x409906
  4098c2:	dec    edx
  4098c3:	lahf   
  4098c4:	push   ebp
  4098c5:	inc    ebx
  4098c6:	mov    edx,0xc54c45b0
  4098cb:	imul   edx,DWORD PTR [edx-0x42b7fb68],0x735cf27e
  4098d5:	(bad)  
  4098d7:	xlat   BYTE PTR ds:[ebx]
  4098d8:	mov    esp,0x97ccda90
  4098dd:	sub    BYTE PTR [edi-0x557a13d2],ah
  4098e3:	sahf   
  4098e4:	pop    ss
  4098e5:	and    esi,DWORD PTR [ebp+ebp*1-0x4c349aa4]
  4098ec:	sub    eax,0xb07d5d42
  4098f1:	xchg   BYTE PTR [ecx+edi*4],bh
  4098f4:	(bad)
  4098f7:	in     al,0xe8
  4098f9:	shr    DWORD PTR [eax+0x28],1
  4098fc:	clc    
  4098fd:	aad    0xcf
  4098ff:	xor    DWORD PTR [edi+edx*8],edx
  409902:	cs push ebx
  409904:	sbb    BYTE PTR [eax],0xd8
  409907:	cmc    
  409908:	jmp    0xcf43:0xc6355554
  40990f:	jmp    0xa0b032aa
  409914:	pop    ebx
  409915:	ja     0x409954
  409917:	push   esp
  409918:	in     eax,0x66
  40991a:	in     al,dx
  40991b:	mov    eax,0x1441c88c
  409920:	sbb    DWORD PTR [ecx+0x3c],esi
  409923:	outs   dx,DWORD PTR ds:[esi]
  409924:	and    DWORD PTR [ecx-0x45],ecx
  409927:	call   0x54c8:0xeeebb38d
  40992e:	mov    DWORD PTR [ecx-0x7bf8817b],esp
  409934:	and    eax,0xb9c20e66
  409939:	ret    
  40993a:	jmp    0x4098cf
  40993c:	jle    0x4098c8
  40993e:	repz add DWORD PTR [edx+0x18451ec4],0x21634109
  409949:	popa   
  40994a:	(bad)  
  40994b:	xor    dl,al
  40994d:	aaa    
  40994e:	aad    0x56
  409950:	sbb    dh,dh
  409952:	or     DWORD PTR [edi-0x900aeb6],0x3e942db4
  40995c:	mov    edx,DWORD PTR [edi+0x7b]
  40995f:	shl    edx,0xf6
  409962:	pop    edx
  409963:	loope  0x4099e4
  409965:	jg     0x4099c5
  409967:	std    
  409968:	enter  0xea4a,0xbb
  40996c:	and    ch,bh
  40996e:	pop    edx
  40996f:	mov    edx,0x6f3e16c9
  409974:	loop   0x4099e5
  409976:	out    dx,al
  409977:	(bad)  
  409978:	ins    BYTE PTR es:[edi],dx
  409979:	cmp    eax,0xb55410e5
  40997e:	or     eax,0xf49aab92
  409983:	repz loope 0x4099c3
  409986:	dec    eax
  409987:	leave  
  409988:	mov    edx,0x7a406a39
  40998d:	push   eax
  40998e:	and    cl,al
  409990:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409991:	popa   
  409992:	push   ecx
  409993:	dec    eax
  409994:	jns    0x409953
  409996:	cs ret 
  409998:	sub    esp,esi
  40999a:	sar    BYTE PTR [ecx],1
  40999c:	push   ebp
  40999d:	aas    
  40999e:	fldenv [ebx+0x78b0a734]
  4099a4:	(bad)  
  4099a5:	and    eax,0xfe12d3f9
  4099aa:	adc    eax,0xed96d0e5
  4099af:	sbb    DWORD PTR [edx+edx*1-0x37a23042],edi
  4099b6:	fld    TBYTE PTR [edx-0x6269a370]
  4099bc:	jg     0x409a26
  4099be:	aam    0x2c
  4099c0:	or     ebx,DWORD PTR [edx+eax*1+0x1]
  4099c4:	pop    es
  4099c5:	and    bh,0xb6
  4099c8:	sub    al,0x69
  4099ca:	add    BYTE PTR [ecx],dl
  4099cc:	mov    eax,0xf57a21fa
  4099d1:	add    al,0x8d
  4099d3:	xor    ecx,DWORD PTR [ebp+0x4]
  4099d6:	das    
  4099d7:	push   ecx
  4099d8:	cmp    DWORD PTR [edi],ebx
  4099da:	sub    dh,BYTE PTR [esi+0x77]
  4099dd:	enter  0xfb81,0x88
  4099e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099e2:	mov    ecx,0x6a92f27d
  4099e7:	mov    ch,0xd2
  4099e9:	(bad)  
  4099ea:	sbb    eax,0x9d150ba
  4099f0:	push   esp
  4099f1:	lods   al,BYTE PTR ds:[esi]
  4099f2:	aad    0x9d
  4099f4:	add    al,0xe5
  4099f6:	push   0x5c053927
  4099fb:	test   al,0x43
  4099fd:	jg     0x409a2c
  4099ff:	shr    BYTE PTR [esi],1
  409a01:	push   0x6
  409a03:	add    al,0xfb
  409a05:	mov    ch,0x6a
  409a07:	cli    
  409a08:	add    DWORD PTR [ebp+0x5dc3df72],esp
  409a0e:	mov    al,ds:0x28c3a51e
  409a13:	inc    esp
  409a14:	icebp  
  409a15:	jmp    0x5ceb86cc
  409a1a:	arpl   WORD PTR [edi+ecx*8+0x5919303],bx
  409a21:	inc    esp
  409a22:	popf   
  409a23:	repnz das 
  409a25:	adc    eax,0xb9187fbd
  409a2a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a2b:	sahf   
  409a2c:	mov    DWORD PTR [ebp+eax*1+0x46ce8f31],0x8b043bca
  409a37:	jecxz  0x409a58
  409a39:	test   eax,0x5ee3a4a4
  409a3e:	addr16 popf 
  409a40:	dec    eax
  409a41:	or     esp,ebx
  409a43:	stos   BYTE PTR es:[edi],al
  409a44:	mov    ebp,0x55aff0e2
  409a49:	push   esp
  409a4a:	jg     0x409a93
  409a4c:	mov    ebp,0x69280c8a
  409a51:	mov    ah,0xa3
  409a53:	mov    al,0x22
  409a55:	xlat   BYTE PTR ds:[ebx]
  409a56:	push   edx
  409a57:	inc    ebx
  409a58:	xchg   BYTE PTR [eax+0x25],cl
  409a5b:	jg     0x4099e2
  409a5d:	test   BYTE PTR [eax-0x110bb94b],ah
  409a63:	cmp    BYTE PTR [esi],bl
  409a65:	ins    BYTE PTR es:[edi],dx
  409a66:	dec    esp
  409a67:	mov    edx,0xe9edf4f1
  409a6c:	add    eax,0xb24ae20
  409a71:	nop
  409a72:	cli    
  409a73:	dec    DWORD PTR [eax]
  409a75:	pop    ebp
  409a76:	or     bh,bl
  409a78:	cmp    al,0x93
  409a7a:	add    ch,BYTE PTR [ecx]
  409a7c:	jo     0x409a48
  409a7e:	cli    
  409a7f:	mov    edx,0x241ab36b
  409a84:	jp     0x409abb
  409a86:	pushf  
  409a87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a88:	lock mov ah,0xac
  409a8b:	shr    DWORD PTR [ebp-0x43cdf254],1
  409a91:	test   eax,0xf92ef958
  409a96:	std    
  409a97:	pop    eax
  409a98:	retf   0xbba6
  409a9b:	xchg   esp,eax
  409a9c:	stos   BYTE PTR es:[di],al
  409a9e:	inc    esi
  409a9f:	push   edi
  409aa0:	push   cs
  409aa1:	adc    ah,BYTE PTR [ebp-0x42349846]
  409aa7:	bound  eax,QWORD PTR [ebx+eiz*1]
  409aaa:	pop    ebp
  409aab:	add    DWORD PTR [edi-0x45],esp
  409aae:	mov    eax,0xd0d110c9
  409ab3:	js     0x409aa5
  409ab5:	xchg   edi,eax
  409ab6:	in     eax,dx
  409ab7:	sbb    DWORD PTR [edi+eiz*2-0x5005d30f],eax
  409abe:	add    eax,0xf21ec4c2
  409ac3:	push   ebx
  409ac4:	in     eax,dx
  409ac5:	xchg   edx,eax
  409ac7:	stos   BYTE PTR es:[edi],al
  409ac8:	bound  edi,QWORD PTR [eax]
  409aca:	inc    edi
  409acb:	push   cs
  409acc:	fsubr  st,st(5)
  409ace:	iret   
  409acf:	xchg   edi,eax
  409ad0:	xor    BYTE PTR [ecx],ch
  409ad2:	xor    eax,0x1e6d8f5c
  409ad7:	shl    bh,0x8b
  409ada:	popa   
  409adb:	les    ebx,FWORD PTR [ebx-0x96a9e88]
  409ae1:	sub    esi,ebx
  409ae3:	xlat   BYTE PTR ds:[ebx]
  409ae4:	sbb    eax,0xa3b106ad
  409ae9:	rcl    DWORD PTR [edx+0x7f],0x8e
  409aed:	xor    edi,DWORD PTR [esp+edi*2-0x6]
  409af1:	sbb    edx,edx
  409af3:	sbb    eax,0x4aaba341
  409af8:	sbb    BYTE PTR ss:[ebp+0x6],dh
  409afc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409afd:	lahf   
  409afe:	jge    0x409ad7
  409b00:	xchg   BYTE PTR [edx-0x67],bl
  409b03:	push   ecx
  409b04:	enter  0x17e5,0x6d
  409b08:	dec    edx
  409b09:	mov    edx,DWORD PTR [ebx+edi*2+0x6f]
  409b0d:	jmp    0x325e0cfc
  409b12:	mov    ebx,0xea984736
  409b17:	pop    ds
  409b18:	mov    edx,0x7f65ae94
  409b1d:	pop    ebx
  409b1e:	aam    0xe8
  409b20:	adc    BYTE PTR [edi-0x2935dc77],0x77
  409b27:	retf   
  409b28:	mov    dh,0x59
  409b2a:	sahf   
  409b2b:	push   esp
  409b2c:	int    0x2b
  409b2e:	shl    DWORD PTR [ecx-0x33],1
  409b31:	mov    BYTE PTR [ebx-0x41db4cb8],ah
  409b37:	mov    dl,0x96
  409b39:	xchg   ecx,eax
  409b3a:	in     eax,dx
  409b3b:	sub    BYTE PTR [edx-0x629cec02],dl
  409b41:	sar    BYTE PTR [ecx+eax*2],1
  409b44:	push   cs
  409b45:	jg     0x409b6d
  409b47:	arpl   WORD PTR [ebp+0x6ace6627],di
  409b4d:	xor    al,BYTE PTR [ebx-0x68]
  409b50:	xchg   DWORD PTR [ebx-0x27],ebx
  409b53:	xchg   BYTE PTR [ecx-0x60],cl
  409b56:	int3   
  409b57:	mov    ecx,0x9b411357
  409b5c:	adc    ch,BYTE PTR [ebx-0x35c1e7f6]
  409b62:	mov    ah,0xec
  409b64:	jno    0x409b14
  409b66:	or     ah,0xb8
  409b69:	scas   eax,DWORD PTR es:[edi]
  409b6a:	xor    BYTE PTR [ecx-0x4b],0x7d
  409b6e:	dec    eax
  409b6f:	les    edi,FWORD PTR [ebp+0x33fc0ce9]
  409b75:	sti    
  409b76:	jg     0x409b5b
  409b78:	in     al,dx
  409b79:	addr16 in al,0xaf
  409b7c:	sbb    eax,0x8cfaa9d4
  409b81:	inc    esi
  409b82:	es add al,0x85
  409b85:	mov    bh,0xe9
  409b87:	mov    bl,0xd7
  409b89:	add    ebp,DWORD PTR ds:0x79aea599
  409b8f:	cdq    
  409b90:	int    0x28
  409b92:	loop   0x409b8a
  409b94:	inc    ebp
  409b95:	xor    eax,0x2f8b3e6c
  409b9a:	cld    
  409b9b:	pop    es
  409b9c:	jae    0x409b23
  409b9e:	mov    ebp,?
  409ba0:	sbb    cl,0x8d
  409ba3:	ja     0x409c0c
  409ba5:	pop    edx
  409ba6:	add    cl,BYTE PTR [ebp+0x14]
  409ba9:	lock push cs
  409bab:	mov    cl,0x2e
  409bad:	loop   0x409be7
  409baf:	pusha  
  409bb0:	fisttp QWORD PTR [ebx-0x5ac11294]
  409bb6:	into   
  409bb7:	dec    ecx
  409bb8:	adc    al,0xfc
  409bba:	adc    BYTE PTR [edi+0x231abddb],bl
  409bc0:	fcmovu st,st(2)
  409bc2:	push   eax
  409bc3:	repnz cmp BYTE PTR [edx+edx*1-0x4e],al
  409bc8:	lahf   
  409bc9:	pop    ss
  409bca:	push   edx
  409bcb:	mov    edx,DWORD PTR [edi-0x6fcb7b3a]
  409bd1:	shl    BYTE PTR [ecx-0x1c],cl
  409bd4:	out    dx,eax
  409bd5:	in     al,0xe8
  409bd7:	dec    eax
  409bd8:	jae    0x409b95
  409bda:	enter  0x9521,0x9f
  409bde:	jge    0x409ba2
  409be0:	out    dx,eax
  409be1:	into   
  409be2:	fsub   DWORD PTR [ecx]
  409be4:	into   
  409be5:	and    eax,0xe703895a
  409bea:	std    
  409beb:	cli    
  409bec:	push   cs
  409bed:	idiv   BYTE PTR ds:0xfd1ef844
  409bf3:	jns    0x409bf8
  409bf5:	sbb    esi,eax
  409bf7:	or     BYTE PTR [esi+0x3],al
  409bfa:	call   0xe562580a
  409bff:	fisubr DWORD PTR [ebp-0x33a269e1]
  409c05:	xchg   edi,eax
  409c06:	adc    DWORD PTR [ebx],edx
  409c08:	cli    
  409c09:	push   esi
  409c0a:	mul    BYTE PTR [ebx-0x7d334995]
  409c10:	pop    ss
  409c11:	or     DWORD PTR [edx],0x2c
  409c14:	mov    ebx,eax
  409c16:	pop    DWORD PTR [eax]
  409c18:	imul   eax,edi,0xffffffad
  409c1b:	ins    BYTE PTR es:[edi],dx
  409c1c:	ins    BYTE PTR es:[edi],dx
  409c1d:	aaa    
  409c1e:	pop    edi
  409c1f:	mov    edx,DWORD PTR [esi]
  409c21:	inc    esi
  409c22:	pushf  
  409c23:	sbb    al,0x48
  409c25:	mov    ah,0x3
  409c27:	mov    esi,0x48c8f0a
  409c2c:	cmps   WORD PTR ds:[esi],WORD PTR es:[edi]
  409c2e:	mov    ?,WORD PTR [ecx+0x5c87e2cc]
  409c34:	sbb    DWORD PTR ds:0x6edbcefa,esp
  409c3a:	lea    ebx,[ecx+0x4cfc604c]
  409c40:	cld    
  409c41:	dec    edx
  409c42:	into   
  409c43:	inc    ebx
  409c44:	fbstp  TBYTE PTR [eax+0x2172f516]
  409c4a:	mov    bh,0x37
  409c4c:	mov    BYTE PTR ds:0xc7f378e5,dh
  409c52:	mov    eax,0x39114708
  409c57:	retf   0xa8cc
  409c5a:	push   eax
  409c5b:	outs   dx,BYTE PTR ds:[esi]
  409c5c:	push   esp
  409c5d:	mov    edx,0x1e9c53ea
  409c62:	std    
  409c63:	inc    edx
  409c64:	inc    esp
  409c65:	aaa    
  409c66:	sub    eax,0x28114f5e
  409c6b:	inc    edi
  409c6c:	iret   
  409c6d:	call   0x2dab1146
  409c72:	or     eax,DWORD PTR [ecx]
  409c74:	shl    DWORD PTR [edx+0x7e],0x5a
  409c78:	and    DWORD PTR [esi],ebx
  409c7a:	mov    eax,0xbc66c6d9
  409c7f:	or     al,ch
  409c81:	pusha  
  409c82:	adc    DWORD PTR [edx+edx*4],edx
  409c85:	cld    
  409c86:	add    esp,DWORD PTR [edi+0x0]
  409c89:	das    
  409c8a:	mov    BYTE PTR [ebx],cl
  409c8c:	mov    cl,BYTE PTR [eax+0x3b15f474]
  409c92:	mov    ecx,0x4c39b751
  409c97:	aas    
  409c98:	sbb    al,0x3e
  409c9a:	dec    edx
  409c9b:	or     dl,BYTE PTR [esi-0x3cc99002]
  409ca1:	aam    0x9c
  409ca3:	jle    0x409c54
  409ca5:	sbb    BYTE PTR [esi-0x7f],dl
  409ca8:	shr    BYTE PTR [esi-0x4c8d9da7],0x31
  409caf:	int    0xf8
  409cb1:	pusha  
  409cb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cb3:	test   DWORD PTR es:[esi+0x2b],eax
  409cb7:	sbb    eax,0x627ab69f
  409cbc:	dec    edx
  409cbd:	test   cl,ah
  409cbf:	dec    edx
  409cc0:	cli    
  409cc1:	xor    BYTE PTR [ebx],dl
  409cc3:	xor    eax,0x30e73094
  409cc8:	out    dx,eax
  409cc9:	mov    DWORD PTR [eax],eax
  409ccb:	leave  
  409ccc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409ccd:	ja     0x409d1e
  409ccf:	dec    esi
  409cd0:	retf   
  409cd1:	gs loope 0x409cf9
  409cd4:	out    dx,al
  409cd5:	adc    bl,BYTE PTR [esp+eiz*8]
  409cd8:	dec    esp
  409cd9:	adc    eax,0x10005abc
  409cde:	mov    edi,0xcf58b273
  409ce3:	mov    edi,0x59b79cef
  409ce8:	pop    edi
  409ce9:	loopne 0x409ccc
  409ceb:	xor    eax,0x2162cacc
  409cf0:	mov    esp,0xdc0be7ab
  409cf5:	mov    eax,0x61b0f335
  409cfa:	inc    edx
  409cfb:	cdq    
  409cfc:	mov    eax,0xc8eaa69d
  409d01:	cdq    
  409d02:	inc    esp
  409d03:	fwait
  409d04:	rcl    ebx,0xd1
  409d07:	icebp  
  409d08:	scas   al,BYTE PTR es:[edi]
  409d09:	jmp    0x409cb5
  409d0b:	in     al,dx
  409d0c:	stc    
  409d0d:	adc    eax,0x3eda1550
  409d12:	enter  0xbadb,0x8f
  409d16:	rcr    BYTE PTR [edi],1
  409d18:	inc    ebp
  409d19:	jnp    0x409d11
  409d1b:	aam    0xc
  409d1d:	jg     0x409d15
  409d1f:	xchg   edi,eax
  409d20:	inc    eax
  409d21:	pop    es
  409d22:	into   
  409d23:	or     eax,edi
  409d25:	jp     0x409d3d
  409d27:	push   es
  409d28:	add    BYTE PTR [edx-0x41df2bb0],0x1e
  409d2f:	xor    DWORD PTR [ecx-0x6e],ecx
  409d32:	mov    ecx,0xa119ed6
  409d37:	cli    
  409d38:	inc    ebp
  409d39:	neg    DWORD PTR [edi+0x29]
  409d3c:	lds    esi,FWORD PTR [eax-0x1]
  409d3f:	pop    es
  409d40:	or     BYTE PTR [esp+edx*8+0x1],al
  409d44:	adc    esi,edi
  409d46:	ja     0x409dc1
  409d48:	push   ds
  409d49:	xor    esi,DWORD PTR ds:0x511fcd39
  409d4f:	sar    DWORD PTR [eax-0x41a1964d],0x44
  409d56:	dec    esi
  409d57:	inc    edx
  409d58:	push   edx
  409d59:	sbb    BYTE PTR [eax-0xf],bh
  409d5c:	xor    BYTE PTR [eax+0x185bd3eb],dh
  409d62:	dec    ecx
  409d63:	loopne 0x409d91
  409d65:	popf   
  409d66:	stos   BYTE PTR es:[edi],al
  409d67:	sbb    eax,0x14540f62
  409d6c:	pop    es
  409d6d:	ret    
  409d6e:	data16 ins BYTE PTR es:[edi],dx
  409d70:	ja     0x409d99
  409d72:	xor    edi,ebx
  409d74:	das    
  409d75:	inc    eax
  409d76:	test   eax,0xa0214da5
  409d7b:	and    bh,BYTE PTR [edi+0x3b]
  409d7e:	stos   BYTE PTR es:[edi],al
  409d7f:	(bad)  
  409d80:	in     eax,dx
  409d81:	pop    edi
  409d82:	or     BYTE PTR [edx-0x3f],dl
  409d85:	retf   0x366d
  409d88:	mov    ch,0xdc
  409d8a:	add    dh,dl
  409d8c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409d8d:	cmp    BYTE PTR [edi],dl
  409d8f:	data16 xor al,0x6a
  409d92:	lods   eax,DWORD PTR ds:[esi]
  409d93:	nop
  409d94:	jnp    0x409e0c
  409d96:	js     0x409e09
  409d98:	ss fwait
  409d9a:	bound  edx,QWORD PTR fs:[edx]
  409d9d:	cli    
  409d9e:	push   edi
  409d9f:	and    BYTE PTR [eax-0x45],0x13
  409da3:	mov    ebx,0xb2c09d2c
  409da8:	repnz sub BYTE PTR [ebp-0x4e],0x82
  409dad:	test   BYTE PTR [esi+0x25839678],bh
  409db3:	ins    BYTE PTR es:[edi],dx
  409db4:	push   ds
  409db5:	add    bl,BYTE PTR [esi+0xc68664a]
  409dbb:	loop   0x409dd6
  409dbd:	pop    ds
  409dbe:	test   BYTE PTR ds:0x2949c11e,0x7d
  409dc5:	pop    esp
  409dc6:	push   ebx
  409dc7:	push   ebx
  409dc8:	jmp    0xc823a67f
  409dcd:	pop    eax
  409dce:	cmc    
  409dcf:	pop    edx
  409dd0:	jbe    0x409e0c
  409dd2:	jmp    0x9c0dc2bc
  409dd7:	sub    eax,0x4e17976f
  409ddc:	sub    eax,0x835fccda
  409de1:	imul   ebx,DWORD PTR [ebx-0x6c3a1947],0x3c9d42bb
  409deb:	in     al,dx
  409dec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ded:	addr16 mov eax,ds:0x4660
  409df1:	push   ds
  409df2:	js     0x409e0d
  409df4:	mov    dh,0x87
  409df6:	jae    0x409dcb
  409df8:	jge    0x409e32
  409dfa:	mov    esi,0xa5638f0c
  409dff:	mov    bl,0xf1
  409e01:	push   esp
  409e02:	sahf   
  409e03:	sub    al,0xc7
  409e05:	cmp    ah,al
  409e07:	adc    eax,0x87751949
  409e0c:	fdiv   QWORD PTR [edx]
  409e0e:	(bad)  
  409e10:	lods   al,BYTE PTR ds:[esi]
  409e11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e12:	rcr    DWORD PTR [esi],1
  409e14:	pop    esp
  409e15:	cmp    BYTE PTR [esp+edi*2],ah
  409e18:	sbb    eax,0xbaa056ee
  409e1d:	call   0x711c2d5d
  409e22:	std    
  409e23:	and    eax,0xab31294b
  409e28:	push   ss
  409e29:	iret   
  409e2a:	or     eax,0x708815ec
  409e2f:	push   es
  409e30:	dec    ebx
  409e31:	sub    DWORD PTR [edi+edi*2],ecx
  409e34:	enter  0xee69,0xa7
  409e38:	call   0xa53d:0xdaf4cefc
  409e3f:	mov    bh,0x1d
  409e41:	fwait
  409e42:	cdq    
  409e43:	test   eax,0xab7bc39f
  409e48:	pop    esp
  409e49:	stc    
  409e4a:	dec    esi
  409e4b:	jmp    0xfedaca2d
  409e50:	mov    esi,0xd851b9b6
  409e55:	inc    ebx
  409e56:	mov    ebx,0xf8603ae9
  409e5b:	dec    esp
  409e5c:	mov    ds:0xca16e410,eax
  409e61:	xchg   BYTE PTR [edx],cl
  409e63:	jl     0x409eca
  409e65:	nop
  409e66:	cmp    al,0x44
  409e68:	cmp    al,0x13
  409e6a:	xchg   ebx,eax
  409e6b:	mov    dh,0x22
  409e6d:	cli    
  409e6e:	add    ebp,DWORD PTR [edx]
  409e70:	icebp  
  409e71:	out    0xc1,eax
  409e73:	push   ecx
  409e74:	jnp    0x409e8f
  409e76:	push   esi
  409e77:	xchg   ecx,eax
  409e78:	cmp    DWORD PTR [ebp+ebx*4+0x1238ca20],eax
  409e7f:	call   0x4cc2092a
  409e84:	retf   
  409e85:	mov    al,0xf1
  409e87:	pop    ds
  409e88:	add    eax,0x43615cf9
  409e8d:	and    eax,0xe7cb210c
  409e92:	ret    0x39a1
  409e95:	fptan  
  409e97:	pop    esi
  409e98:	dec    esi
  409e99:	xchg   ebp,eax
  409e9a:	into   
  409e9b:	inc    edx
  409e9c:	pop    edi
  409e9d:	lahf   
  409e9e:	dec    esi
  409e9f:	test   al,0x5c
  409ea1:	ins    BYTE PTR es:[edi],dx
  409ea2:	jnp    0x409e47
  409ea4:	or     BYTE PTR ds:0x12e8f6d1,bh
  409eaa:	(bad)  
  409eab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409eac:	push   0xffffffde
  409eae:	and    al,0x8f
  409eb0:	or     edi,0xcc9ec092
  409eb6:	inc    eax
  409eb7:	int    0x57
  409eb9:	xor    dl,dh
  409ebb:	in     al,dx
  409ebc:	imul   edi,DWORD PTR [edx-0x188b5d5d],0x7c7608bf
  409ec6:	sar    BYTE PTR [edx+0x4a381457],0x8
  409ecd:	push   esi
  409ece:	jbe    0x409eba
  409ed0:	outs   dx,DWORD PTR ds:[esi]
  409ed1:	(bad)  [edi-0x5dcfbf0b]
  409ed7:	inc    ebx
  409ed8:	xchg   ebp,eax
  409ed9:	or     eax,0x9920632c
  409ede:	push   ebp
  409edf:	leave  
  409ee0:	inc    ebp
  409ee1:	into   
  409ee2:	dec    ecx
  409ee3:	jl     0x409ede
  409ee5:	inc    edi
  409ee6:	or     BYTE PTR [edi+0x16],0x5
  409eea:	cmp    bl,dl
  409eec:	test   DWORD PTR [ebx],ecx
  409eee:	idiv   DWORD PTR [esi]
  409ef0:	loop   0x409e97
  409ef2:	and    dl,dh
  409ef4:	dec    edx
  409ef5:	repz cmp eax,0xdd994a61
  409efb:	or     ebx,DWORD PTR [ebx]
  409efd:	leave  
  409efe:	nop
  409eff:	jo     0x409eac
  409f01:	xchg   edx,eax
  409f02:	dec    ebp
  409f03:	cld    
  409f04:	add    al,0x4f
  409f06:	adc    edi,eax
  409f08:	mov    ebx,0xbc6d5dd3
  409f0d:	mov    edi,0x9e1cef41
  409f12:	and    al,BYTE PTR [edx+0x61]
  409f15:	call   0xd692:0x24b7ed12
  409f1c:	leave  
  409f1d:	ja     0x409f3e
  409f1f:	stos   DWORD PTR es:[edi],eax
  409f20:	lahf   
  409f21:	daa    
  409f22:	sub    al,0xf5
  409f24:	mov    ch,BYTE PTR [edx+0x7cbec49b]
  409f2a:	sub    DWORD PTR [esi],0x1a
  409f2d:	dec    edx
  409f2e:	es mov cl,0x17
  409f31:	push   ebx
  409f32:	adc    eax,0xb1132e12
  409f37:	cdq    
  409f38:	mov    dh,0x18
  409f3a:	into   
  409f3b:	ret    
  409f3c:	pop    esi
  409f3d:	int3   
  409f3e:	mov    bh,0x1d
  409f40:	jne    0x409fbe
  409f42:	adc    eax,0xf6c0faf4
  409f47:	ret    
  409f48:	jb     0x409fb2
  409f4a:	mov    al,ds:0x8d7edf13
  409f4f:	stos   BYTE PTR es:[edi],al
  409f50:	mov    bh,0xc
  409f52:	js     0x409f12
  409f54:	dec    ebx
  409f55:	fst    QWORD PTR [eax+ebp*8+0x39]
  409f59:	dec    ecx
  409f5a:	xor    DWORD PTR [edx+esi*1],ebx
  409f5d:	dec    ecx
  409f5e:	mov    edx,0x15b2d67
  409f63:	stos   DWORD PTR es:[edi],eax
  409f64:	jg     0x409fb3
  409f66:	jge    0x409f00
  409f68:	stos   DWORD PTR es:[edi],eax
  409f69:	sub    eax,0xf560b80e
  409f6e:	push   ebp
  409f6f:	adc    eax,0x1da2c49
  409f74:	and    ah,al
  409f76:	ds int3 
  409f78:	call   0x28699976
  409f7d:	cdq    
  409f7e:	lods   al,BYTE PTR ds:[esi]
  409f7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f80:	mov    edx,0x40374b6f
  409f85:	adc    eax,0x79bc0ecf
  409f8a:	ss jle 0x409f7e
  409f8d:	mov    eax,ds:0x9a02fa6d
  409f92:	xchg   edi,eax
  409f93:	push   0x1e
  409f95:	and    DWORD PTR ds:0xfc5448ed,edi
  409f9b:	push   ecx
  409f9c:	push   ds
  409f9d:	test   eax,0xd0639a91
  409fa2:	and    DWORD PTR [ecx],ebp
  409fa4:	test   DWORD PTR [edx-0x17d6cf40],ebx
  409faa:	xor    DWORD PTR [edx+0x73934c5a],0x3e87c5e9
  409fb4:	cmp    esi,DWORD PTR [ebx+0x7f3616f4]
  409fba:	mov    cl,cl
  409fbc:	sbb    BYTE PTR [esi],al
  409fbe:	das    
  409fbf:	div    BYTE PTR [edi+0xb]
  409fc2:	adc    ecx,DWORD PTR [edx-0x69]
  409fc5:	push   ss
  409fc6:	inc    ecx
  409fc7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fc8:	adc    al,0xf9
  409fca:	pushf  
  409fcb:	sub    BYTE PTR [eax-0x42],dh
  409fce:	mov    dl,0xb6
  409fd0:	adc    ebp,DWORD PTR [esi]
  409fd2:	dec    edx
  409fd3:	push   edx
  409fd4:	xor    eax,0xb088ffc7
  409fd9:	push   0xffffffe8
  409fdb:	jmp    0x9c9944c
  409fe0:	rcl    BYTE PTR [edx-0x62],1
  409fe3:	or     al,0xd6
  409fe5:	lds    ebx,FWORD PTR [ebx+0x52]
  409fe8:	rcl    BYTE PTR [eax],cl
  409fea:	sub    DWORD PTR ds:0x53756dfc,edx
  409ff0:	mov    cl,0xe0
  409ff2:	loope  0x409fe0
  409ff4:	(bad)  [edi+0x2f3f403f]
  409ffa:	scas   eax,DWORD PTR es:[edi]
  409ffb:	pop    esi
  409ffc:	(bad)  
  409ffd:	push   eax
  409ffe:	sub    DWORD PTR [edx+0x22],0x20e5abb4
  40a005:	mov    eax,0x5d47cb43
  40a00a:	ror    DWORD PTR [edi],0xf8
  40a00d:	mov    al,0xe3
  40a00f:	(bad)  
  40a010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a011:	lds    esi,FWORD PTR [esp+esi*2-0x7353c944]
  40a018:	or     BYTE PTR [edx],0xfb
  40a01b:	faddp  st(6),st
  40a01d:	loop   0x40a047
  40a01f:	out    0x9d,al
  40a021:	push   ecx
  40a022:	cmp    eax,0x61fcdf69
  40a027:	and    eax,0xd17ab66f
  40a02c:	xor    dl,BYTE PTR [ebx+0xa]
  40a02f:	xor    dl,al
  40a031:	pop    ss
  40a032:	out    dx,eax
  40a033:	out    0x1f,al
  40a035:	pop    edx
  40a036:	lods   al,BYTE PTR ds:[esi]
  40a037:	push   ebp
  40a038:	pushf  
  40a039:	adc    BYTE PTR [esi+ebp*8-0x45769a0a],0x5
  40a041:	mov    edi,0x288e8d4f
  40a046:	scas   eax,DWORD PTR es:[edi]
  40a047:	sub    esp,DWORD PTR [ecx]
  40a049:	jb     0x409ff6
  40a04b:	jbe    0x40a070
  40a04d:	out    0x85,al
  40a04f:	js     0x40a036
  40a051:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a052:	mov    cl,0xe
  40a054:	cld    
  40a055:	cdq    
  40a056:	xchg   esp,eax
  40a057:	mov    cl,0x7d
  40a059:	push   es
  40a05a:	(bad)  
  40a05b:	div    DWORD PTR [esi+ebx*2+0x14]
  40a05f:	lock cld 
  40a061:	mov    ebx,0xf2d10a6a
  40a066:	sar    BYTE PTR [ebx],cl
  40a068:	inc    eax
  40a069:	mov    dl,bl
  40a06b:	clc    
  40a06c:	scas   al,BYTE PTR es:[edi]
  40a06d:	mov    cl,0x20
  40a06f:	in     al,0xf3
  40a071:	push   ebx
  40a072:	sub    cl,al
  40a074:	sbb    BYTE PTR [ecx+0x3699cf8b],al
  40a07a:	cs repz xchg esi,eax
  40a07d:	dec    esp
  40a07e:	mov    bh,BYTE PTR [ebp-0x44]
  40a081:	xchg   esp,eax
  40a082:	push   cs
  40a083:	adc    cl,bl
  40a085:	lds    ebp,FWORD PTR [esp+edx*1-0x57]
  40a089:	cmp    dl,ch
  40a08b:	add    eax,0xb9655b97
  40a090:	leave  
  40a091:	lods   eax,DWORD PTR ds:[esi]
  40a092:	sbb    al,0xf0
  40a094:	imul   ebp,DWORD PTR [esi-0x5f],0x97765811
  40a09b:	adc    BYTE PTR [ecx],dh
  40a09d:	(bad)
  40a0a1:	jmp    0x1cec:0x5aec1c2
  40a0a8:	mov    edi,0xef3e1d76
  40a0ad:	add    eax,0xf1292927
  40a0b2:	fpatan 
  40a0b4:	dec    edx
  40a0b5:	cmp    BYTE PTR [esi-0x244b7448],cl
  40a0bb:	inc    ebp
  40a0bc:	mov    ecx,ds
  40a0be:	loopne 0x40a070
  40a0c0:	adc    eax,0xdf0619de
  40a0c5:	jbe    0x40a078
  40a0c7:	ins    DWORD PTR es:[edi],dx
  40a0c8:	mov    BYTE PTR [ecx],ah
  40a0ca:	jne    0x40a0db
  40a0cc:	dec    ebx
  40a0cd:	pop    esi
  40a0ce:	sbb    DWORD PTR [esi],edi
  40a0d0:	xor    BYTE PTR ds:0x8750c219,dl
  40a0d6:	adc    DWORD PTR [eax+esi*1],ebx
  40a0d9:	jg     0x40a08e
  40a0db:	outs   dx,BYTE PTR ds:[esi]
  40a0dc:	xor    ebx,DWORD PTR [ebx+edx*2+0x64]
  40a0e0:	outs   dx,DWORD PTR ds:[esi]
  40a0e1:	in     al,0x67
  40a0e3:	test   DWORD PTR [ecx],edi
  40a0e5:	inc    ecx
  40a0e6:	test   ebp,ebp
  40a0e8:	sub    eax,0x4aa4486b
  40a0ed:	mov    ecx,0xe018aa26
  40a0f2:	repnz in al,dx
  40a0f4:	loopne 0x40a158
  40a0f6:	pop    esp
  40a0f7:	call   0x4ade:0xfe06e39e
  40a0fe:	xchg   ebp,eax
  40a0ff:	test   ah,0xf6
  40a102:	xor    al,BYTE PTR [ecx]
  40a104:	mov    al,ds:0xe2c7c9f2
  40a109:	popf   
  40a10a:	cmp    ch,ch
  40a10c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a10d:	fwait
  40a10e:	shl    ebp,1
  40a110:	xchg   esp,eax
  40a111:	js     0x40a115
  40a113:	lea    ebp,[ecx+0x3d419c90]
  40a119:	(bad)
  40a11c:	fsubr  st(7),st
  40a11e:	xlat   BYTE PTR ds:[ebx]
  40a11f:	adc    eax,0x7200769c
  40a124:	jecxz  0x40a126
  40a126:	fmul   DWORD PTR [ebp+0x5]
  40a129:	jp     0x40a0f9
  40a12b:	cmp    BYTE PTR [ebp+0x71],0x6f
  40a12f:	mov    ds:0xbebc07,eax
  40a134:	in     al,0xdc
  40a136:	push   es
  40a137:	leave  
  40a138:	ins    BYTE PTR es:[edi],dx
  40a139:	sub    cl,BYTE PTR [ecx+0x1814b0d7]
  40a13f:	mov    dl,0xf2
  40a141:	xchg   esi,esi
  40a143:	lods   eax,DWORD PTR ds:[esi]
  40a144:	xor    al,0xa1
  40a146:	xor    ch,dh
  40a148:	xchg   BYTE PTR [esi+0x42],al
  40a14b:	in     al,0xbd
  40a14d:	ss aam 0x6b
  40a150:	cmc    
  40a151:	mov    dh,0xc3
  40a153:	sbb    DWORD PTR [esp+edx*1],0x3c
  40a157:	aas    
  40a158:	call   0xffd:0x58310609
  40a15f:	or     al,0x7f
  40a161:	fcmovb st,st(0)
  40a163:	jno    0x40a1d0
  40a165:	cs cmp al,0x24
  40a168:	clc    
  40a169:	mov    ah,0x81
  40a16b:	jle    0x40a116
  40a16d:	outs   dx,DWORD PTR ds:[esi]
  40a16e:	ret    0x2ff7
  40a171:	test   al,0xbb
  40a173:	or     cl,0xc1
  40a176:	test   al,0x9e
  40a178:	aas    
  40a179:	gs jmp 0xb9a491cd
  40a17f:	dec    edx
  40a180:	xor    eax,0xf4f69643
  40a185:	ins    DWORD PTR es:[edi],dx
  40a186:	sbb    al,BYTE PTR [edx+edi*4-0x7f]
  40a18a:	fld    DWORD PTR [ecx]
  40a18c:	mov    ebp,0x7cf66dd1
  40a191:	jmp    0xbd9fcb7
  40a196:	mov    ch,BYTE PTR [ebx+eiz*4+0x13]
  40a19a:	push   edi
  40a19b:	push   ecx
  40a19c:	pop    edx
  40a19d:	jo     0x40a144
  40a19f:	call   0xdc596a3d
  40a1a4:	mov    eax,ds:0x443d9b23
  40a1a9:	test   BYTE PTR [esi-0x52],0xe1
  40a1ad:	cmp    al,0x62
  40a1af:	mov    cl,dl
  40a1b1:	aam    0x2b
  40a1b3:	pop    ss
  40a1b4:	mov    al,ds:0x9afd5605
  40a1b9:	int3   
  40a1ba:	pop    eax
  40a1bb:	(bad)  
  40a1bc:	std    
  40a1bd:	or     al,0x62
  40a1bf:	inc    edi
  40a1c0:	jmp    0x5bc7:0xd9bca1bc
  40a1c7:	test   al,0x37
  40a1c9:	pop    eax
  40a1ca:	jbe    0x40a173
  40a1cc:	std    
  40a1cd:	jge    0x40a16c
  40a1cf:	push   ecx
  40a1d0:	dec    eax
  40a1d1:	icebp  
  40a1d2:	pop    edi
  40a1d3:	jbe    0x40a1eb
  40a1d5:	in     al,0x40
  40a1d7:	cwde   
  40a1d8:	loop   0x40a175
  40a1da:	rol    ebp,0x8
  40a1dd:	mov    edx,0xdf56ae9d
  40a1e2:	(bad)  [esp+ecx*8-0x1d3b74b3]
  40a1e9:	adc    DWORD PTR [ecx*8-0x4873195],0x73
  40a1f1:	pop    esi
  40a1f2:	ins    BYTE PTR es:[edi],dx
  40a1f3:	cs sbb dh,0x28
  40a1f7:	mov    ch,0x9e
  40a1f9:	std    
  40a1fa:	hlt    
  40a1fb:	fldcw  WORD PTR [edx+0x6b]
  40a1fe:	lods   eax,DWORD PTR ds:[esi]
  40a1ff:	xchg   esi,eax
  40a200:	mov    ds:0xdb79b90,al
  40a205:	inc    ecx
  40a206:	and    ebx,DWORD PTR [ebx+0x29]
  40a209:	push   ss
  40a20a:	bound  esi,QWORD PTR [edx-0xc]
  40a20d:	sbb    eax,0x31
  40a210:	in     al,0x68
  40a212:	adc    al,0xa3
  40a214:	out    dx,al
  40a215:	mov    ds:0xc6345000,al
  40a21a:	aad    0xb0
  40a21c:	dec    ecx
  40a21d:	mov    ch,0x22
  40a21f:	mov    ebx,0x92742842
  40a224:	add    cl,BYTE PTR [eax+esi*8-0x60]
  40a228:	add    BYTE PTR [edi+0x4bab9dc8],al
  40a22e:	ficom  DWORD PTR [ebx+0x6c]
  40a231:	cmp    cl,BYTE PTR [edx]
  40a233:	xor    eax,0x70b1a21a
  40a238:	mov    ebp,0xbffd955e
  40a23d:	sbb    bh,dh
  40a23f:	hlt    
  40a240:	(bad)
  40a244:	not    BYTE PTR [eax-0x3d8184c]
  40a24a:	pop    edi
  40a24b:	push   eax
  40a24c:	mov    bh,0x11
  40a24e:	rcr    DWORD PTR [ecx-0x66],0xe6
  40a252:	add    dl,BYTE PTR [ebp-0x10]
  40a255:	pop    ebp
  40a256:	mov    dh,0xe0
  40a258:	cmp    eax,DWORD PTR [esi]
  40a25a:	pop    ebx
  40a25b:	aaa    
  40a25c:	retf   
  40a25d:	push   esi
  40a25e:	add    DWORD PTR [edx],0xa1d8745d
  40a264:	or     BYTE PTR [eax],dl
  40a266:	push   es
  40a267:	jne    0x40a29a
  40a269:	popa   
  40a26a:	fsub   QWORD PTR [esp+ebp*1-0x25]
  40a26e:	cmp    eax,0x6edf6e7a
  40a273:	repnz pop esi
  40a275:	inc    eax
  40a276:	in     al,dx
  40a277:	sbb    bl,BYTE PTR [edx]
  40a279:	or     eax,0xc4361bd1
  40a27e:	aaa    
  40a27f:	adc    DWORD PTR [ecx-0x54e45f10],ebx
  40a285:	adc    al,0xce
  40a287:	fucomp st(4)
  40a289:	cmp    ebp,edi
  40a28b:	aas    
  40a28c:	cwde   
  40a28d:	push   eax
  40a28e:	adc    BYTE PTR [eax-0x4b2d9bd2],ch
  40a294:	adc    eax,0xebdbee09
  40a299:	loop   0x40a2d1
  40a29b:	repz pop eax
  40a29d:	cmp    BYTE PTR [ecx],dh
  40a29f:	fstp   QWORD PTR cs:[ecx-0x31]
  40a2a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2a4:	mov    ebp,0x25ddbab2
  40a2a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2aa:	xchg   edi,eax
  40a2ab:	scas   eax,DWORD PTR es:[edi]
  40a2ac:	mov    ds:0xf6309c30,eax
  40a2b1:	test   DWORD PTR [ebx+0x57],edi
  40a2b4:	call   0xb98a:0x3f258f9
  40a2bb:	mov    gs,ebp
  40a2bd:	cmp    al,0x1d
  40a2bf:	add    al,0xc9
  40a2c1:	pusha  
  40a2c2:	adc    edx,DWORD PTR [esi+0x31bfe334]
  40a2c8:	inc    ebp
  40a2c9:	mov    cl,0x37
  40a2cb:	pop    edx
  40a2cc:	dec    edi
  40a2cd:	std    
  40a2ce:	cmp    bl,ch
  40a2d0:	xor    bh,al
  40a2d2:	sbb    dh,BYTE PTR [ecx+eax*1]
  40a2d5:	inc    edx
  40a2d6:	jmp    0x5cc5:0x4ee300b
  40a2dd:	sbb    ch,bh
  40a2df:	ins    BYTE PTR es:[edi],dx
  40a2e0:	jge    0x40a31a
  40a2e2:	xor    ch,BYTE PTR [esi-0xe]
  40a2e5:	mov    esi,DWORD PTR [esi]
  40a2e7:	dec    ebp
  40a2e8:	dec    ebx
  40a2e9:	arpl   WORD PTR [esi-0x7d0cc1ca],ax
  40a2ef:	(bad)  fs:[ecx+0x19]
  40a2f3:	je     0x40a2cd
  40a2f5:	inc    ebp
  40a2f6:	sbb    eax,0xac8a1ed7
  40a2fb:	dec    esp
  40a2fc:	cs daa 
  40a2fe:	stc    
  40a2ff:	(bad)  
  40a300:	scas   al,BYTE PTR es:[edi]
  40a301:	je     0x40a334
  40a303:	retf   0x3708
  40a306:	retf   
  40a307:	push   es
  40a308:	in     al,dx
  40a309:	(bad)  
  40a30a:	in     al,0x8e
  40a30c:	mov    al,ds:0xa7e78a0d
  40a311:	adc    BYTE PTR [edx],al
  40a313:	mov    cl,0x95
  40a315:	mov    ds:0xbc1ae026,eax
  40a31a:	jl     0x40a2a5
  40a31c:	xor    eax,DWORD PTR [esi-0x1c]
  40a31f:	xor    eax,0x13fd8023
  40a324:	xlat   BYTE PTR ds:[ebx]
  40a325:	dec    esi
  40a326:	push   ss
  40a327:	repnz xchg edx,eax
  40a329:	pop    ds
  40a32a:	clc    
  40a32b:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40a32d:	xchg   DWORD PTR [eax+ecx*1-0x7e9fb543],eax
  40a334:	or     eax,0xf41f7e3d
  40a339:	iret   
  40a33a:	xchg   eax,esi
  40a33c:	add    edx,edx
  40a33e:	lods   al,BYTE PTR ds:[esi]
  40a33f:	dec    edx
  40a340:	dec    edx
  40a341:	push   edi
  40a342:	push   0x62
  40a344:	test   DWORD PTR [edi+0x1231f269],0x40b0177d
  40a34e:	jecxz  0x40a38b
  40a350:	xor    ecx,ecx
  40a352:	xor    eax,0x68b6eec7
  40a357:	push   eax
  40a358:	repnz inc ebp
  40a35a:	gs loope 0x40a32d
  40a35d:	jl     0x40a318
  40a35f:	jmp    0xd052:0xfdeb8fd5
  40a366:	repz inc edi
  40a368:	mov    ecx,0x27eee192
  40a36d:	push   ecx
  40a36e:	retf   
  40a36f:	repz add al,al
  40a372:	or     eax,0xb3527a7
  40a377:	loope  0x40a3b5
  40a379:	pop    ebp
  40a37a:	jle    0x40a36f
  40a37c:	mov    dl,0x9d
  40a37e:	sbb    eax,DWORD PTR [esi+eax*2]
  40a381:	rol    BYTE PTR [esi-0x4df1dfc7],cl
  40a387:	mov    DWORD PTR [ecx],ebp
  40a389:	jne    0x40a38b
  40a38b:	pusha  
  40a38c:	aaa    
  40a38d:	enter  0x751e,0xde
  40a391:	fcomp  DWORD PTR [ebx]
  40a393:	into   
  40a394:	mov    ds:0x3cfafa11,eax
  40a399:	sar    DWORD PTR [edx-0x3ac420cd],0x1
  40a3a0:	push   edi
  40a3a1:	jae    0x40a406
  40a3a3:	lds    eax,FWORD PTR [esi-0x7a]
  40a3a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3a7:	push   ds
  40a3a8:	fucomi st,st(5)
  40a3aa:	mov    eax,0x8892ce0a
  40a3af:	adc    BYTE PTR [edi+0x30],ch
  40a3b2:	inc    edi
  40a3b3:	dec    edi
  40a3b4:	dec    esi
  40a3b5:	pop    ds
  40a3b6:	cmp    ch,BYTE PTR [edx+0x63]
  40a3b9:	push   0x438106e9
  40a3be:	inc    eax
  40a3bf:	fild   WORD PTR [edx-0xf51f13c]
  40a3c5:	into   
  40a3c6:	xor    esi,DWORD PTR [esi+edx*8-0xc]
  40a3ca:	pop    ebx
  40a3cb:	pop    ecx
  40a3cc:	test   BYTE PTR [ecx-0x79],bh
  40a3cf:	cli    
  40a3d0:	ja     0x40a36d
  40a3d2:	jle    0x40a414
  40a3d4:	and    dl,BYTE PTR [esi+0x48057fb6]
  40a3da:	and    al,0x8c
  40a3dc:	dec    edx
  40a3dd:	push   edx
  40a3de:	xchg   edx,eax
  40a3df:	and    DWORD PTR [ebx-0x3a],0xf9f30dbe
  40a3e6:	enter  0xd8f9,0x17
  40a3ea:	pop    ds
  40a3eb:	mov    edi,0x3a9d50a3
  40a3f0:	mov    esp,0xcfaf4758
  40a3f5:	inc    ecx
  40a3f6:	add    eax,0x9321a209
  40a3fb:	dec    esi
  40a3fc:	adc    ah,ah
  40a3fe:	call   0xfa9b:0x3c831198
  40a405:	pop    ds
  40a406:	or     BYTE PTR [edx-0x59f68939],dl
  40a40c:	inc    eax
  40a40d:	out    0xe,eax
  40a40f:	fidivr DWORD PTR [ecx+ebp*4+0x755b8002]
  40a416:	outs   dx,DWORD PTR ss:[esi]
  40a418:	fwait
  40a419:	push   eax
  40a41a:	bound  edx,QWORD PTR [ebp+ebp*2-0xe]
  40a41e:	cwde   
  40a41f:	popa   
  40a420:	test   eax,0x8569c022
  40a425:	or     al,BYTE PTR [ecx-0x52]
  40a428:	mov    edx,0x17e5511d
  40a42d:	cmp    bh,BYTE PTR [eax]
  40a42f:	in     eax,dx
  40a430:	sahf   
  40a431:	les    esp,FWORD PTR [ecx-0x54]
  40a434:	sbb    bl,BYTE PTR [edi]
  40a436:	pop    ebp
  40a437:	mov    eax,DWORD PTR ds:0xc465cbe0
  40a43d:	test   BYTE PTR [esi],ch
  40a43f:	iret   
  40a440:	jecxz  0x40a3c2
  40a442:	sbb    BYTE PTR [eax-0x205a85e4],bl
  40a448:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a449:	(bad)  
  40a44a:	pop    DWORD PTR [ecx+edx*8+0x4d]
  40a44e:	test   BYTE PTR [ebx+eax*2],dl
  40a451:	push   eax
  40a452:	jp     0x40a46f
  40a454:	or     BYTE PTR [ebp+0x42],cl
  40a457:	pop    edx
  40a458:	dec    edi
  40a459:	(bad)  
  40a45b:	loopne 0x40a41f
  40a45d:	mov    WORD PTR [edx-0x3902a21d],ss
  40a463:	neg    DWORD PTR [eax+ebx*1+0x25968223]
  40a46a:	inc    edi
  40a46b:	push   edi
  40a46c:	outs   dx,BYTE PTR ds:[esi]
  40a46d:	cmp    al,0xd2
  40a46f:	ja     0x40a4a1
  40a471:	fild   DWORD PTR ds:0x39f3bd35
  40a477:	std    
  40a478:	sti    
  40a479:	cmp    bl,BYTE PTR [ebp+0x49]
  40a47c:	inc    ebp
  40a47d:	out    0x29,eax
  40a47f:	not    DWORD PTR [esi+eax*1-0x777b5174]
  40a486:	js     0x40a507
  40a488:	pop    esi
  40a489:	sub    BYTE PTR [eax],al
  40a48b:	stos   BYTE PTR es:[edi],al
  40a48c:	and    eax,0x6b5c3917
  40a491:	or     eax,0x7c5b1e01
  40a496:	mul    BYTE PTR [edx]
  40a498:	movd   mm5,esp
  40a49b:	and    bh,BYTE PTR [esp+edi*1-0x17e7635]
  40a4a2:	push   eax
  40a4a3:	leave  
  40a4a4:	in     al,0xd5
  40a4a6:	adc    eax,0x7781a893
  40a4ab:	jb     0x40a500
  40a4ad:	inc    ecx
  40a4ae:	or     eax,0x84a4820e
  40a4b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4b4:	in     al,dx
  40a4b5:	mul    BYTE PTR [ebx+esi*1]
  40a4b8:	fdivr  DWORD PTR [esi+0x6d]
  40a4bb:	adc    al,0xa8
  40a4bd:	daa    
  40a4be:	test   ebp,ecx
  40a4c0:	inc    ebp
  40a4c1:	in     eax,0x9
  40a4c3:	or     BYTE PTR [esi-0x6f],bl
  40a4c6:	push   ebx
  40a4c7:	gs bnd jge 0x40a52b
  40a4cb:	out    0xdd,eax
  40a4cd:	ret    
  40a4ce:	mov    al,0x6d
  40a4d0:	mov    edx,0x2fb75d09
  40a4d5:	xchg   ebx,eax
  40a4d6:	ret    
  40a4d7:	loope  0x40a54c
  40a4d9:	test   BYTE PTR [eax+0x27],cl
  40a4dc:	mov    es,esi
  40a4de:	dec    edx
  40a4df:	mov    ah,0x85
  40a4e1:	push   esi
  40a4e2:	pop    ebx
  40a4e3:	test   eax,0xe818a0ef
  40a4e8:	ins    BYTE PTR es:[edi],dx
  40a4e9:	jg     0x40a479
  40a4eb:	fnstenv [ebx+ebp*8]
  40a4ee:	xlat   BYTE PTR ds:[ebx]
  40a4ef:	shl    BYTE PTR [ebx-0x23ff9622],cl
  40a4f5:	xor    al,0x9b
  40a4f7:	xor    ebp,DWORD PTR [edx+0x1a]
  40a4fa:	call   0x86c1:0xc128f783
  40a501:	stos   BYTE PTR es:[edi],al
  40a502:	cmp    eax,0x225b9a4b
  40a507:	int3   
  40a508:	aaa    
  40a509:	dec    eax
  40a50a:	mov    ch,0xfe
  40a50c:	rcl    BYTE PTR ds:0xb69892fd,1
  40a512:	inc    esi
  40a513:	adc    DWORD PTR [edi-0x6d810ecb],0x2d
  40a51a:	popa   
  40a51b:	and    BYTE PTR [edx-0x49172aa],ah
  40a521:	add    DWORD PTR [edx-0x7a091207],edx
  40a527:	sbb    BYTE PTR ds:0x8698cdf6,al
  40a52d:	ins    DWORD PTR es:[edi],dx
  40a52e:	loopne 0x40a5ad
  40a530:	test   al,0xa6
  40a532:	mov    ah,0xaa
  40a534:	cli    
  40a535:	xchg   edi,eax
  40a536:	fs adc DWORD PTR fs:[ebp-0x1c],0x1be7d69d
  40a53f:	test   eax,0x83c1621d
  40a544:	or     ch,bh
  40a546:	pop    edi
  40a547:	adc    eax,0x8ad6b71c
  40a54c:	sub    DWORD PTR [edi-0x39f1483a],edx
  40a552:	rol    DWORD PTR [ebp+0x54f9b77f],1
  40a558:	jns    0x40a510
  40a55a:	mov    cl,0x72
  40a55c:	dec    esi
  40a55d:	outs   dx,BYTE PTR ds:[esi]
  40a55e:	sub    eax,0x4c47ef0
  40a563:	not    DWORD PTR es:[ecx]
  40a566:	mov    esi,0x61df7d46
  40a56b:	popa   
  40a56c:	stos   DWORD PTR es:[edi],eax
  40a56d:	or     DWORD PTR [edx+eiz*2-0x35],eax
  40a571:	and    esp,DWORD PTR [ebx]
  40a573:	dec    edx
  40a574:	pushf  
  40a575:	add    bh,BYTE PTR [edx+0x76]
  40a578:	push   ecx
  40a579:	push   esp
  40a57a:	jbe    0x40a4fc
  40a57c:	ja     0x40a5de
  40a57e:	setg   BYTE PTR [eax-0xf6d4a69]
  40a585:	jmp    0x11b0:0x4b04cd21
  40a58c:	out    0xd1,eax
  40a58e:	mov    esp,0x686b16a2
  40a593:	lea    ebp,[esi+ebx*4-0x25]
  40a597:	int3   
  40a598:	xor    al,0x63
  40a59a:	push   ss
  40a59b:	(bad)  
  40a59c:	outs   dx,DWORD PTR ds:[esi]
  40a59d:	leave  
  40a59e:	jmp    0xc60e:0x9de48e77
  40a5a5:	repnz mov cl,BYTE PTR ds:0x93241889
  40a5ac:	xchg   ebp,eax
  40a5ad:	shl    edi,1
  40a5af:	add    BYTE PTR [esi+ecx*8],bh
  40a5b2:	dec    edi
  40a5b3:	sahf   
  40a5b4:	push   eax
  40a5b5:	inc    ebp
  40a5b6:	in     eax,dx
  40a5b7:	lahf   
  40a5b8:	shl    ebx,cl
  40a5ba:	push   ss
  40a5bb:	push   edx
  40a5bc:	xchg   edx,eax
  40a5bd:	fcom   QWORD PTR [ebp+ebx*1-0x18]
  40a5c1:	(bad)  
  40a5c2:	cmp    bh,BYTE PTR [ebp-0x439a65dc]
  40a5c8:	cmp    eax,0xa3d8cbca
  40a5cd:	leave  
  40a5ce:	std    
  40a5cf:	adc    BYTE PTR [edi-0x22],ah
  40a5d2:	mov    al,0xa7
  40a5d4:	sbb    BYTE PTR es:[edx-0x4149497a],cl
  40a5db:	ret    0x3199
  40a5de:	das    
  40a5df:	jno    0x40a593
  40a5e1:	sub    DWORD PTR [ebx+0x5e0d7e74],ecx
  40a5e7:	out    0x83,al
  40a5e9:	adc    bl,BYTE PTR [ebx]
  40a5eb:	ss pop ebx
  40a5ed:	fwait
  40a5ee:	iret   
  40a5ef:	dec    edx
  40a5f0:	ja     0x40a609
  40a5f2:	pusha  
  40a5f3:	sub    eax,0x6c12f1f9
  40a5f8:	inc    ebx
  40a5f9:	mov    ds:0x327146d2,al
  40a5fe:	je     0x40a5c9
  40a600:	test   edx,eax
  40a602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a603:	jne    0x40a596
  40a605:	mov    ebx,0xaaad1b86
  40a60a:	mov    eax,ds:0xb89e0158
  40a60f:	push   edx
  40a610:	shr    edi,cl
  40a612:	fiadd  DWORD PTR [ecx]
  40a614:	push   ds
  40a615:	shl    esp,1
  40a617:	mov    dl,0xfb
  40a619:	je     0x40a657
  40a61b:	inc    di
  40a61d:	or     al,0xdc
  40a61f:	sbb    DWORD PTR [ebx+0x34],edi
  40a622:	sub    ebx,DWORD PTR [eax+0x755760c7]
  40a628:	sbb    DWORD PTR [esi-0x7f1c0fd8],esi
  40a62e:	add    ecx,DWORD PTR [eax-0x10]
  40a631:	lods   al,BYTE PTR ds:[esi]
  40a632:	inc    ebx
  40a633:	push   eax
  40a634:	shr    DWORD PTR [ebx],1
  40a636:	sub    DWORD PTR [edx],ecx
  40a638:	ja     0x40a60b
  40a63a:	scas   eax,DWORD PTR es:[edi]
  40a63b:	daa    
  40a63c:	or     DWORD PTR [eax],edx
  40a63e:	and    eax,0xb3cf3ce1
  40a643:	pop    edi
  40a644:	dec    esp
  40a645:	(bad)  
  40a646:	(bad)  
  40a647:	or     ah,BYTE PTR [ebx+0x6b]
  40a64a:	sbb    esp,ecx
  40a64c:	mov    ebp,0x87eec97e
  40a651:	in     eax,0xc6
  40a653:	inc    edi
  40a654:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a655:	frstorw [ebx]
  40a658:	inc    esi
  40a659:	cmp    DWORD PTR [ecx],0xfffffffb
  40a65c:	fdecstp 
  40a65e:	into   
  40a65f:	ret    0xdd61
  40a662:	add    esp,DWORD PTR [edx]
  40a664:	and    al,0xc4
  40a666:	xor    dh,BYTE PTR [ecx+0x5]
  40a669:	inc    ebp
  40a66a:	mov    ch,0x23
  40a66c:	mov    edx,0x2a587690
  40a671:	push   eax
  40a672:	aam    0x8d
  40a674:	(bad)  
  40a675:	sbb    dh,BYTE PTR [eax]
  40a677:	mov    WORD PTR [edi+0x4e],ds
  40a67a:	leave  
  40a67b:	int3   
  40a67c:	mov    ebp,0xec4583c3
  40a681:	out    0xe,eax
  40a683:	shl    DWORD PTR [ebp-0x7d],0x10
  40a687:	popf   
  40a688:	ja     0x40a702
  40a68a:	fwait
  40a68b:	mov    ah,0x98
  40a68d:	cmp    al,BYTE PTR [edx-0x25c42cf2]
  40a693:	stos   DWORD PTR es:[edi],eax
  40a694:	in     al,0xde
  40a696:	mov    bh,0xa
  40a698:	fstp   DWORD PTR [edx+0x9]
  40a69b:	and    BYTE PTR [esi+0x4b],bh
  40a69e:	ins    DWORD PTR es:[edi],dx
  40a69f:	sbb    edi,DWORD PTR [edx]
  40a6a1:	loope  0x40a63d
  40a6a3:	and    edi,ebp
  40a6a5:	imul   eax,DWORD PTR [ecx-0x28],0x6e81c7bd
  40a6ac:	test   eax,0xe153e5c8
  40a6b1:	into   
  40a6b2:	mov    al,ds:0x3c2413f7
  40a6b7:	enter  0x390d,0xf4
  40a6bb:	mov    dh,0xde
  40a6bd:	int3   
  40a6be:	add    BYTE PTR [ebx],al
  40a6c0:	mov    ds:0x89295c5a,al
  40a6c5:	dec    DWORD PTR [edi-0x56]
  40a6c8:	mov    eax,ds:0x1ae81711
  40a6cd:	into   
  40a6ce:	and    eax,0x79e5f641
  40a6d3:	fiadd  DWORD PTR [ebx]
  40a6d5:	mov    ds:0xf3edfb75,al
  40a6da:	ret    
  40a6db:	jmp    0x8785c408
  40a6e0:	add    al,0x19
  40a6e2:	jae    0x40a69e
  40a6e4:	inc    esi
  40a6e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6e6:	add    ebx,DWORD PTR [eax+0x2774e77b]
  40a6ec:	cmp    esp,0x50
  40a6ef:	bound  ebx,QWORD PTR [edi-0x4b]
  40a6f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6f3:	call   0x3e69:0x298d74e8
  40a6fa:	gs cli 
  40a6fc:	xchg   edx,eax
  40a6fd:	ret    
  40a6fe:	jecxz  0x40a6fa
  40a700:	aas    
  40a701:	repnz cmp cl,ch
  40a704:	addr16 inc ecx
  40a706:	(bad)  
  40a707:	sahf   
  40a708:	(bad)  
  40a709:	jg     0x40a6cc
  40a70b:	imul   esi,DWORD PTR [edx+0x31],0x1c538a82
  40a712:	mov    DWORD PTR [edi-0x3f37f536],edx
  40a718:	ret    0x91c5
  40a71b:	repnz or DWORD PTR [edx+edi*4+0x4d],esi
  40a720:	icebp  
  40a721:	ds inc ecx
  40a723:	in     al,0x2c
  40a725:	or     DWORD PTR [eax+ebx*2+0x44db0a08],ebp
  40a72c:	adc    dl,BYTE PTR [edx+ebp*1]
  40a72f:	sbb    al,0x71
  40a731:	jb     0x40a6c2
  40a733:	test   DWORD PTR [ebp+edx*2-0x38614bb6],0xc0dd544f
  40a73e:	mov    ds:0x2ddf99ce,eax
  40a743:	std    
  40a744:	fs in  eax,dx
  40a746:	jae    0x40a77f
  40a748:	leave  
  40a749:	jnp    0x40a773
  40a74b:	mov    DWORD PTR [esi-0x71],ecx
  40a74e:	shl    BYTE PTR [esi],1
  40a750:	mov    edi,ecx
  40a752:	mov    ds:0xda31d035,eax
  40a757:	jge    0x40a743
  40a759:	and    eax,0x2ebe1ef0
  40a75e:	iret   
  40a75f:	in     al,dx
  40a760:	sub    BYTE PTR [ebx+0x41a0c794],al
  40a766:	mov    eax,ds:0x954fb32
  40a76b:	xor    cl,0x27
  40a76e:	cmp    BYTE PTR [ebx],dh
  40a770:	and    BYTE PTR [eax],0x94
  40a773:	sbb    esi,DWORD PTR [eax]
  40a775:	repz dec esi
  40a777:	adc    al,0xb7
  40a779:	(bad)  
  40a77a:	xor    BYTE PTR [ebx-0x10],ah
  40a77d:	dec    edi
  40a77e:	fs leave 
  40a780:	fiadd  WORD PTR [ecx]
  40a782:	inc    ebx
  40a783:	add    ecx,0x7a
  40a786:	xor    DWORD PTR [ecx],0xc5fb5d69
  40a78c:	fcom   DWORD PTR [edi+0x56bbc62f]
  40a792:	pusha  
  40a793:	add    eax,0x4f314005
  40a798:	push   edx
  40a799:	inc    esp
  40a79a:	lds    ebx,FWORD PTR [eax+0x4e4e5b4f]
  40a7a0:	xchg   esi,eax
  40a7a1:	add    dh,BYTE PTR [ebp+0x26]
  40a7a4:	daa    
  40a7a5:	lods   al,BYTE PTR ds:[esi]
  40a7a6:	aad    0x12
  40a7a8:	mov    ds:0x2454ecf1,eax
  40a7ad:	ret    
  40a7ae:	in     eax,0xaa
  40a7b0:	in     al,0xe0
  40a7b2:	and    eax,0x980478d4
  40a7b7:	xchg   BYTE PTR [edi+ecx*8+0x3],cl
  40a7bb:	sbb    al,0x9c
  40a7bd:	jmp    ebp
  40a7bf:	(bad)  
  40a7c0:	in     eax,dx
  40a7c1:	mov    cl,0xe5
  40a7c3:	jne    0x40a7c5
  40a7c5:	mov    edi,0x418b1c37
  40a7ca:	js     0x40a762
  40a7cc:	in     al,0x49
  40a7ce:	dec    ebx
  40a7cf:	ret    
  40a7d0:	mov    edx,0x79b18186
  40a7d5:	retf   
  40a7d6:	push   edi
  40a7d7:	ss ret 
  40a7d9:	and    al,0xa4
  40a7db:	sub    DWORD PTR [edi-0x67],0xffffff9b
  40a7df:	mov    DWORD PTR [edx+edx*4+0x2],ebp
  40a7e3:	ss xchg ebp,eax
  40a7e5:	mov    ebp,0x1a89930d
  40a7ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a7eb:	in     al,dx
  40a7ec:	imul   eax,DWORD PTR [ebx-0x1772cdff],0xffffffe3
  40a7f3:	adc    al,0xc9
  40a7f5:	out    0x31,al
  40a7f7:	std    
  40a7f8:	sbb    edx,ebp
  40a7fa:	add    ah,ah
  40a7fc:	daa    
  40a7fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a7fe:	test   DWORD PTR [ecx+ebx*2],0xa06e7a60
  40a805:	fisub  DWORD PTR [ecx-0x27]
  40a808:	dec    BYTE PTR ds:0xc5a08b5
  40a80e:	std    
  40a80f:	mov    ds:0x1acc68e4,al
  40a814:	push   cs
  40a815:	scas   eax,DWORD PTR es:[edi]
  40a816:	push   0x21fa57a2
  40a81b:	pusha  
  40a81c:	mov    bh,0xbf
  40a81e:	pusha  
  40a81f:	bnd ja 0x40a827
  40a822:	in     eax,dx
  40a823:	int3   
  40a824:	jp     0x40a862
  40a826:	push   edx
  40a827:	ret    
  40a828:	sub    DWORD PTR [esi-0x33],edx
  40a82b:	fsubr  QWORD PTR [edx-0x14]
  40a82e:	mov    eax,ds:0x6c0b8442
  40a833:	repz jne 0x40a884
  40a836:	ret    0x7020
  40a839:	ins    BYTE PTR es:[edi],dx
  40a83a:	(bad)  
  40a83b:	dec    ebx
  40a83c:	lea    esp,[si]
  40a83f:	scas   eax,DWORD PTR es:[edi]
  40a840:	imul   edx,DWORD PTR [esi-0x524be520],0xdd8f47c1
  40a84a:	fidivr WORD PTR [esi]
  40a84c:	sbb    BYTE PTR [ebp+0x49821d1],ch
  40a852:	push   eax
  40a853:	xor    al,0xb3
  40a855:	test   edx,ebp
  40a857:	pop    ebx
  40a858:	cmp    DWORD PTR [ecx+0x41ad40a8],0x17d63d9f
  40a862:	add    DWORD PTR [ebx+0x6c],ebx
  40a865:	idiv   BYTE PTR [ecx+0x78de1925]
  40a86b:	inc    ebx
  40a86c:	fcom   QWORD PTR [eax+0x6b]
  40a86f:	(bad)  
  40a870:	lock dec edi
  40a872:	xlat   BYTE PTR ds:[ebx]
  40a873:	pop    edx
  40a874:	sbb    bl,ch
  40a876:	fcmove st,st(5)
  40a878:	push   eax
  40a879:	dec    ebp
  40a87a:	jmp    0x79c0:0x49ca980
  40a881:	aaa    
  40a882:	or     DWORD PTR [esi],ebx
  40a884:	mov    ch,0xc4
  40a886:	xor    ch,BYTE PTR [ecx]
  40a888:	pop    edx
  40a889:	push   esp
  40a88a:	jl     0x40a874
  40a88c:	xchg   edx,eax
  40a88d:	jmp    0x716a:0x8ca90732
  40a894:	(bad)  
  40a895:	mov    edx,0x6c32dd52
  40a89a:	push   esp
  40a89b:	adc    eax,0xa91a63eb
  40a8a0:	inc    edi
  40a8a1:	jmp    0x6ae6:0xc28be01b
  40a8a8:	pop    edx
  40a8a9:	rcr    BYTE PTR [edx+0x622bd36e],1
  40a8af:	adc    edx,0xffffffb5
  40a8b2:	div    BYTE PTR [edx+edx*2]
  40a8b5:	add    esp,DWORD PTR [edx+0x2e5a1428]
  40a8bb:	pop    edx
  40a8bc:	push   edx
  40a8bd:	mov    eax,0x4c88c66e
  40a8c2:	mov    ch,0x7e
  40a8c4:	xor    cl,cl
  40a8c6:	loope  0x40a937
  40a8c8:	mov    esi,0x9f33e1a1
  40a8cd:	dec    ebp
  40a8ce:	aad    0x5c
  40a8d0:	xor    DWORD PTR [ecx+0x2a034c62],esi
  40a8d6:	rol    ah,0x7
  40a8d9:	sbb    bl,BYTE PTR [ebx+0x14aed976]
  40a8df:	mov    ch,0xe9
  40a8e1:	cs xchg esi,eax
  40a8e3:	stos   DWORD PTR es:[edi],eax
  40a8e4:	cs sahf 
  40a8e6:	bound  esi,QWORD PTR [edi-0xa]
  40a8e9:	dec    edi
  40a8ea:	loopne 0x40a8c4
  40a8ec:	addr16 out dx,al
  40a8ee:	(bad)
  40a8f2:	sub    al,0xbc
  40a8f4:	and    bl,0x61
  40a8f7:	pop    ebx
  40a8f8:	es inc ebx
  40a8fa:	enter  0xacdf,0x77
  40a8fe:	push   0xffffffab
  40a900:	lods   al,BYTE PTR ds:[esi]
  40a901:	dec    esi
  40a902:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a903:	stos   DWORD PTR es:[edi],eax
  40a904:	mov    edx,0x91372a55
  40a909:	cmp    al,0x6d
  40a90b:	ins    BYTE PTR es:[edi],dx
  40a90c:	in     eax,0x40
  40a90e:	jmp    0x40a989
  40a910:	(bad)  
  40a911:	in     al,dx
  40a912:	popf   
  40a913:	cli    
  40a914:	repz mov ds:0xb935afe2,al
  40a91a:	into   
  40a91b:	mov    cl,0xc2
  40a91d:	add    eax,0x5579d49
  40a922:	frndint 
  40a924:	sahf   
  40a925:	mov    ebp,0x77711f58
  40a92a:	cmp    bl,bl
  40a92c:	call   DWORD PTR ds:0x1a3513a7
  40a932:	repnz lods eax,DWORD PTR ds:[esi]
  40a934:	dec    ebp
  40a935:	push   cs
  40a936:	xor    eax,0xce3c7cc5
  40a93b:	ins    DWORD PTR es:[edi],dx
  40a93c:	lock mov eax,ds:0xf590e3fc
  40a942:	and    ch,BYTE PTR [edx+0x75]
  40a945:	xchg   BYTE PTR [ebp+0x20718c6a],bh
  40a94b:	xor    eax,DWORD PTR [edx]
  40a94d:	ret    
  40a94e:	jge    0x40a95b
  40a950:	dec    eax
  40a951:	scas   al,BYTE PTR es:[edi]
  40a952:	jle    0x40a8f6
  40a954:	in     ax,dx
  40a956:	push   edx
  40a957:	inc    esp
  40a958:	and    ebp,edx
  40a95a:	and    DWORD PTR [esi-0x43],edx
  40a95d:	cld    
  40a95e:	out    0x57,al
  40a960:	sti    
  40a961:	stos   DWORD PTR es:[edi],eax
  40a962:	or     BYTE PTR [esi],ah
  40a964:	mul    DWORD PTR [ebx*8-0x58363661]
  40a96b:	fstp   TBYTE PTR [edx-0x47]
  40a96e:	out    0x3d,al
  40a970:	ins    DWORD PTR es:[edi],dx
  40a971:	out    dx,al
  40a972:	and    al,BYTE PTR [esi+ecx*2]
  40a975:	xlat   BYTE PTR ds:[ebx]
  40a976:	into   
  40a977:	or     edi,ecx
  40a979:	inc    bp
  40a97b:	mov    bl,0x9b
  40a97d:	fwait
  40a97e:	jbe    0x40a9f2
  40a980:	pop    ecx
  40a981:	inc    esp
  40a982:	push   0xffffff81
  40a984:	mov    al,0x53
  40a986:	inc    eax
  40a987:	push   es
  40a988:	inc    ebx
  40a989:	xchg   ebp,eax
  40a98a:	xor    ah,BYTE PTR [edx+0x67b93c28]
  40a990:	shl    DWORD PTR [ecx],cl
  40a992:	mov    eax,ds:0xc5aba4b
  40a997:	fbstp  TBYTE PTR [ecx-0x4fa39d2d]
  40a99d:	sar    DWORD PTR [ebp+0x4e],1
  40a9a0:	push   ebx
  40a9a1:	div    BYTE PTR [ebp-0x6a]
  40a9a4:	xor    DWORD PTR [ebp-0x5a],edx
  40a9a7:	jae    0x40a9c5
  40a9a9:	gs es leave 
  40a9ac:	mov    bh,0x85
  40a9ae:	push   ss
  40a9af:	jmp    0x40a9ab
  40a9b1:	into   
  40a9b2:	pop    esi
  40a9b3:	mov    DWORD PTR [ebp+0x36],ebp
  40a9b6:	fbstp  TBYTE PTR [esi]
  40a9b8:	xlat   BYTE PTR ds:[ebx]
  40a9b9:	retf   0x58d2
  40a9bc:	bound  esi,QWORD PTR [ecx+0x48]
  40a9bf:	js     0x40a97b
  40a9c1:	dec    ecx
  40a9c2:	sbb    dl,BYTE PTR [ebx]
  40a9c4:	inc    ebx
  40a9c5:	ja     0x40aa1c
  40a9c7:	inc    esi
  40a9c8:	test   ch,ch
  40a9ca:	push   es
  40a9cb:	out    dx,eax
  40a9cc:	dec    edx
  40a9cd:	add    BYTE PTR [eax-0x46],0xb7
  40a9d1:	iret   
  40a9d2:	imul   ebx,DWORD PTR [edi-0x52],0xa04c84db
  40a9d9:	fwait
  40a9da:	push   0xc5fa618d
  40a9df:	arpl   bp,di
  40a9e1:	stos   BYTE PTR es:[edi],al
  40a9e2:	retf   
  40a9e3:	jns    0x40a9bb
  40a9e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9e6:	xor    BYTE PTR [eax-0x5e],dl
  40a9e9:	dec    edi
  40a9ea:	fwait
  40a9eb:	pop    eax
  40a9ec:	cdq    
  40a9ed:	fxam   
  40a9ef:	shl    cl,cl
  40a9f1:	dec    esp
  40a9f2:	outs   dx,BYTE PTR ds:[esi]
  40a9f3:	loope  0x40a9d5
  40a9f5:	pushf  
  40a9f6:	cmp    esp,DWORD PTR [eax-0x32]
  40a9f9:	add    BYTE PTR [ecx-0x3f],ah
  40a9fc:	pusha  
  40a9fd:	pop    edx
  40a9fe:	hlt    
  40a9ff:	mov    edi,0x70f6305e
  40aa04:	dec    ecx
  40aa05:	dec    DWORD PTR [edi]
  40aa07:	mov    al,ds:0x36910943
  40aa0c:	sbb    DWORD PTR [edx+0x3a],edi
  40aa0f:	ds dec esi
  40aa11:	jecxz  0x40a9c9
  40aa13:	(bad)  
  40aa14:	mov    esi,0x848ded68
  40aa19:	xchg   BYTE PTR [esi-0x1e8b6161],ah
  40aa1f:	sti    
  40aa20:	sbb    dh,BYTE PTR [ecx-0x6]
  40aa23:	or     dh,0x39
  40aa26:	mov    ebx,0x64beead9
  40aa2b:	cmp    BYTE PTR [ebp+ecx*8+0x39],ah
  40aa2f:	fisttp WORD PTR [edi]
  40aa31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa32:	repnz inc edi
  40aa34:	cdq    
  40aa35:	fdivr  st,st(6)
  40aa37:	outs   dx,BYTE PTR ds:[esi]
  40aa38:	int    0x9e
  40aa3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aa3b:	mov    cl,0x92
  40aa3d:	scas   eax,DWORD PTR es:[edi]
  40aa3e:	add    eax,0xa5843b34
  40aa43:	addr16 inc edx
  40aa45:	xor    eax,0x79044772
  40aa4a:	mov    gs,edx
  40aa4c:	inc    eax
  40aa4d:	or     eax,0xa8720b18
  40aa52:	jnp    0x40aaac
  40aa54:	or     eax,0xc7486987
  40aa59:	shl    BYTE PTR [eax-0x4029ca],1
  40aa5f:	dec    ebx
  40aa60:	xchg   ebp,eax
  40aa61:	cli    
  40aa62:	push   ebp
  40aa63:	arpl   sp,dx
  40aa65:	aam    0xc8
  40aa67:	push   ebx
  40aa68:	xor    bh,BYTE PTR [eax-0x58]
  40aa6b:	out    dx,eax
  40aa6c:	xchg   ebx,eax
  40aa6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aa6e:	and    ch,BYTE PTR [ebp+0x60ce890]
  40aa74:	lock adc edx,ebp
  40aa77:	scas   eax,DWORD PTR es:[edi]
  40aa78:	inc    ebx
  40aa79:	adc    ebx,DWORD PTR [ebx-0x5849eb0f]
  40aa7f:	pop    esi
  40aa80:	inc    ecx
  40aa81:	cld    
  40aa82:	push   ebx
  40aa83:	sub    ch,bh
  40aa85:	xchg   edx,eax
  40aa86:	mov    DWORD PTR [eax-0x5b57942],eax
  40aa8c:	lock mov cs,WORD PTR [ebp-0x40]
  40aa90:	repz xor edi,DWORD PTR [edx+0x54]
  40aa94:	outs   dx,BYTE PTR ds:[esi]
  40aa95:	(bad)  
  40aa96:	cmp    BYTE PTR [esi-0x47],ch
  40aa99:	lahf   
  40aa9a:	and    al,0xd2
  40aa9c:	jmp    0xf772e57f
  40aaa1:	mov    ch,0x64
  40aaa3:	stc    
  40aaa4:	test   bh,dh
  40aaa6:	lds    ebp,FWORD PTR [ebx-0x709802b1]
  40aaac:	add    BYTE PTR [ebx+esi*2-0x7eb95f33],0xfd
  40aab4:	arpl   WORD PTR [ebx+0x2],bp
  40aab7:	jle    0x40aaa4
  40aab9:	jmp    0xeb1ff6e4
  40aabe:	push   0x41
  40aac0:	add    DWORD PTR ds:0xb03cbd08,ebp
  40aac6:	out    dx,eax
  40aac7:	jg     0x40aa59
  40aac9:	push   es
  40aaca:	jl     0x40aae1
  40aacc:	icebp  
  40aacd:	mov    bh,0xf2
  40aacf:	and    BYTE PTR ds:0x8ce91f25,dh
  40aad5:	loop   0x40aa92
  40aad7:	xchg   DWORD PTR ds:0xd1b7f0ee,ebx
  40aadd:	shr    bh,0x18
  40aae0:	mov    al,0x46
  40aae2:	rcr    DWORD PTR [edx],0x97
  40aae5:	data16 sbb BYTE PTR [ebp+0x629e54ec],cl
  40aaec:	mov    edx,ebx
  40aaee:	sub    BYTE PTR [ecx],ch
  40aaf0:	dec    ebx
  40aaf1:	cmp    dh,dl
  40aaf3:	(bad)  
  40aaf4:	imul   esp,DWORD PTR [ebx],0xb095fe39
  40aafa:	clc    
  40aafb:	icebp  
  40aafc:	sub    al,0x36
  40aafe:	in     eax,0xb3
  40ab00:	pop    edx
  40ab01:	sbb    dl,BYTE PTR [ebx]
  40ab03:	push   ecx
  40ab04:	jns    0x40ab82
  40ab06:	js     0x40aae6
  40ab08:	ss sub DWORD PTR es:[edx+ecx*8],eax
  40ab0d:	cmp    al,BYTE PTR [eax-0x42]
  40ab10:	mov    ebx,0xf73371da
  40ab15:	ins    DWORD PTR es:[edi],dx
  40ab16:	shl    BYTE PTR [esp+edx*2+0x5e],cl
  40ab1a:	xchg   esi,eax
  40ab1b:	push   ss
  40ab1c:	and    al,0x46
  40ab1e:	push   ebx
  40ab1f:	xchg   esp,eax
  40ab20:	cmp    al,0xd7
  40ab23:	mov    eax,ds:0x91bb2ba6
  40ab28:	xchg   esp,eax
  40ab29:	xchg   edi,edx
  40ab2b:	repnz sar BYTE PTR [esi-0x5b],1
  40ab2f:	out    0x5d,al
  40ab31:	sub    dh,BYTE PTR [edi]
  40ab33:	jbe    0x40aaf5
  40ab35:	mov    edx,0x536687fe
  40ab3a:	lahf   
  40ab3b:	push   ebp
  40ab3c:	inc    ebp
  40ab3d:	add    ebx,DWORD PTR [ebx]
  40ab3f:	push   edi
  40ab40:	lock out dx,al
  40ab42:	fmulp  st(1),st
  40ab44:	retf   0xb487
  40ab47:	xchg   BYTE PTR [edi-0x3a],ah
  40ab4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ab4b:	arpl   dx,cx
  40ab4d:	stos   DWORD PTR es:[edi],eax
  40ab4e:	and    al,0x10
  40ab50:	out    0xf7,eax
  40ab52:	push   edi
  40ab53:	mov    esp,0x96df978c
  40ab58:	dec    edi
  40ab59:	lds    ebp,FWORD PTR [ebx]
  40ab5b:	adc    al,ch
  40ab5d:	dec    ebx
  40ab5e:	mov    ebp,0xd6fa722f
  40ab63:	ss (bad) 
  40ab65:	loop   0x40ab94
  40ab67:	retf   
  40ab68:	jno    0x40ab4f
  40ab6a:	shr    DWORD PTR [edx],0x10
  40ab6d:	ds dec esi
  40ab6f:	sahf   
  40ab70:	add    ecx,DWORD PTR [ecx]
  40ab72:	xchg   ebp,eax
  40ab73:	or     bl,BYTE PTR [ecx+ecx*4-0x38]
  40ab77:	cmp    BYTE PTR [esi-0x15],cl
  40ab7a:	sti    
  40ab7b:	inc    edi
  40ab7c:	into   
  40ab7d:	sub    al,0x7b
  40ab7f:	mov    ecx,0xdde58af2
  40ab84:	mov    BYTE PTR [ecx+0x47],ch
  40ab87:	adc    al,BYTE PTR [ebp-0x61]
  40ab8a:	pusha  
  40ab8b:	cmc    
  40ab8c:	ins    BYTE PTR es:[edi],dx
  40ab8d:	mov    ah,0x1
  40ab8f:	sub    ch,BYTE PTR [esi+edx*8]
  40ab92:	push   edx
  40ab93:	call   0x96a9:0xbe933e3a
  40ab9a:	xchg   ebp,eax
  40ab9b:	sub    DWORD PTR [ecx+eax*2+0x4b],ecx
  40ab9f:	dec    edx
  40aba0:	call   0xf670:0x3bd28f0b
  40aba7:	pop    ebx
  40aba8:	out    0x50,al
  40abaa:	mov    ah,BYTE PTR ds:0x49dc9b24
  40abb0:	push   0xffffffd8
  40abb2:	in     eax,dx
  40abb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abb4:	icebp  
  40abb5:	pushf  
  40abb6:	xor    BYTE PTR [eax+edx*2],cl
  40abb9:	lods   al,BYTE PTR ds:[esi]
  40abba:	dec    esp
  40abbb:	mov    al,ds:0x6efbd9d9
  40abc0:	je     0x40ac38
  40abc2:	stc    
  40abc3:	or     eax,0xc9d93498
  40abc8:	or     DWORD PTR [edx+0x33],0xffffffe1
  40abcc:	and    eax,0x85812d5b
  40abd1:	xor    DWORD PTR [ecx+0x6381547b],esp
  40abd7:	and    al,BYTE PTR [eax+ecx*2+0x5e3c754d]
  40abde:	fiadd  DWORD PTR ds:0x1c96fadd
  40abe4:	fild   WORD PTR [edi+0xe]
  40abe7:	adc    dh,BYTE PTR [ebp-0x1c]
  40abea:	inc    esi
  40abeb:	add    eax,DWORD PTR [edi-0x2af1704b]
  40abf1:	mov    bh,BYTE PTR [ebx+0x26]
  40abf4:	sbb    eax,0x7a62316e
  40abf9:	rcl    BYTE PTR [esi-0x96e0e01],0x4e
  40ac00:	mov    ch,0xe3
  40ac02:	stos   DWORD PTR es:[edi],eax
  40ac03:	inc    edx
  40ac04:	dec    edi
  40ac05:	mov    dl,0xe8
  40ac07:	call   0x4b4efd8f
  40ac0c:	fisub  WORD PTR [esi-0x370954db]
  40ac12:	xchg   edx,eax
  40ac13:	jge    0x40ac51
  40ac15:	mov    dh,0x48
  40ac17:	xor    esi,DWORD PTR [edi]
  40ac19:	or     DWORD PTR [eax+eax*1],0xb9157b0c
  40ac20:	loope  0x40ac60
  40ac22:	fld    TBYTE PTR [edi-0xb]
  40ac25:	(bad)  
  40ac26:	les    ebp,FWORD PTR [esi]
  40ac28:	push   0xb0a27a5f
  40ac2d:	xchg   esp,eax
  40ac2e:	adc    DWORD PTR [esi+0x584f8863],0x1
  40ac35:	fcmovnb st,st(3)
  40ac37:	xor    BYTE PTR [esi-0x7870c82a],dh
  40ac3d:	xchg   BYTE PTR [eax],cl
  40ac3f:	sahf   
  40ac40:	sbb    DWORD PTR [edi-0x41],ebp
  40ac43:	lahf   
  40ac44:	mov    esi,0xe325b495
  40ac49:	js     0x40abf0
  40ac4b:	mov    al,0xf7
  40ac4d:	test   bl,bl
  40ac4f:	mov    WORD PTR [edi],fs
  40ac51:	rol    DWORD PTR [edx+esi*4],cl
  40ac54:	mov    esi,0xf9e4d9b4
  40ac59:	inc    esi
  40ac5a:	rcl    DWORD PTR [ebp+edi*2+0x1c],cl
  40ac5e:	jbe    0xb9c3bccc
  40ac64:	push   0xf64d0fa4
  40ac69:	adc    edi,DWORD PTR [edx]
  40ac6b:	pushf  
  40ac6c:	(bad)  
  40ac6d:	scas   al,BYTE PTR es:[edi]
  40ac6e:	xchg   ebx,eax
  40ac6f:	xor    edx,DWORD PTR [edi]
  40ac71:	push   edi
  40ac72:	mov    edx,0xa0ce0b35
  40ac77:	jl     0x40acae
  40ac79:	push   esp
  40ac7a:	fsubr  QWORD PTR [eax+0x36aa652f]
  40ac80:	xor    al,0x8
  40ac82:	lock jecxz 0x40ac4d
  40ac85:	test   DWORD PTR [eax+eax*2+0x2b34905d],edx
  40ac8c:	ins    DWORD PTR es:[edi],dx
  40ac8d:	add    al,0x39
  40ac8f:	loop   0x40ac32
  40ac91:	and    al,0xfc
  40ac93:	mov    BYTE PTR [edx+0x47],0xdb
  40ac97:	call   0x8e16:0xa86ddc9e
  40ac9e:	pop    ss
  40ac9f:	pop    edi
  40aca0:	popa   
  40aca1:	ror    BYTE PTR [ebp+0x52e91b8b],0xa0
  40aca8:	addr16 cmp esi,ebp
  40acab:	icebp  
  40acac:	cmc    
  40acad:	cmp    eax,0x959edaed
  40acb2:	sbb    dh,BYTE PTR [edi-0x2f8ceae6]
  40acb8:	add    eax,0xfb4a8a29
  40acbd:	leave  
  40acbe:	aaa    
  40acbf:	aaa    
  40acc0:	stos   DWORD PTR es:[edi],eax
  40acc1:	cli    
  40acc2:	mov    ds:0x244030ae,al
  40acc7:	jns    0x40acc9
  40acc9:	adc    al,0x44
  40accb:	fcom   DWORD PTR [eax-0x25]
  40acce:	xchg   ecx,eax
  40accf:	mov    edi,0xcae932de
  40acd4:	std    
  40acd5:	xor    cl,0x8e
  40acd8:	in     al,0x23
  40acda:	mov    al,ds:0x6a30227f
  40acdf:	shr    BYTE PTR [eax+0x8],1
  40ace2:	enter  0x5e13,0x98
  40ace6:	sbb    eax,esi
  40ace8:	jmp    0x40ac8b
  40acea:	mov    dl,0x5f
  40acec:	rcr    DWORD PTR [ebp-0x66],1
  40acef:	out    0xb6,eax
  40acf1:	cmp    ah,BYTE PTR [edx+ebp*8]
  40acf4:	test   eax,0x6050492b
  40acf9:	mov    ebp,0x816fcb20
  40acfe:	push   ax
  40ad00:	mov    eax,ds:0x62583c1a
  40ad05:	es loope 0x40ac90
  40ad08:	hlt    
  40ad09:	mov    al,0x32
  40ad0b:	inc    esi
  40ad0c:	inc    esp
  40ad0d:	mov    DWORD PTR [eax-0x63610273],edx
  40ad13:	and    edi,edi
  40ad15:	out    dx,eax
  40ad16:	mov    ecx,0x3e953678
  40ad1b:	in     eax,0x61
  40ad1d:	ins    DWORD PTR es:[edi],dx
  40ad1e:	or     DWORD PTR [edx+0x51724478],esi
  40ad24:	xchg   DWORD PTR [eax],ebx
  40ad26:	(bad)  
  40ad27:	cmp    ecx,edi
  40ad29:	jbe    0x40ad6b
  40ad2b:	pop    esi
  40ad2c:	enter  0x2b1a,0xbc
  40ad30:	push   esi
  40ad31:	(bad)  
  40ad32:	out    dx,al
  40ad33:	mov    dl,bl
  40ad35:	pusha  
  40ad36:	push   0x54e81d55
  40ad3b:	xlat   BYTE PTR ds:[ebx]
  40ad3c:	hlt    
  40ad3d:	and    edx,DWORD PTR [edi+0x30ca1bc8]
  40ad43:	pushf  
  40ad44:	jmp    0x3d2b133f
  40ad49:	add    eax,DWORD PTR [esi]
  40ad4b:	pop    edx
  40ad4c:	xchg   DWORD PTR [ecx+0x2454fd9b],eax
  40ad52:	mov    ebx,0x216ac90
  40ad57:	inc    ecx
  40ad58:	lahf   
  40ad59:	pushf  
  40ad5a:	pop    ds
  40ad5b:	add    DWORD PTR [esi],esp
  40ad5d:	leave  
  40ad5e:	arpl   si,di
  40ad60:	fstp   DWORD PTR [eax]
  40ad62:	(bad)  [eax-0xf]
  40ad65:	fbstp  TBYTE PTR [edx]
  40ad67:	pusha  
  40ad68:	jae    0x40ad6b
  40ad6a:	test   eax,0x180d42f3
  40ad6f:	mov    esp,0x5b4cb0cd
  40ad74:	mov    bh,0xc4
  40ad76:	push   esp
  40ad77:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad78:	add    ebp,esi
  40ad7a:	push   ebp
  40ad7b:	fs leave 
  40ad7d:	jns    0x40adf8
  40ad7f:	inc    ebp
  40ad80:	std    
  40ad81:	sub    al,cl
  40ad83:	cmp    esp,DWORD PTR [eax]
  40ad85:	popf   
  40ad86:	dec    ebp
  40ad87:	mov    al,ds:0xe7daf418
  40ad8c:	out    0x7b,al
  40ad8e:	pop    esp
  40ad8f:	pop    esi
  40ad90:	pop    es
  40ad91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad92:	jns    0x40adee
  40ad94:	fadd   st,st(2)
  40ad96:	inc    BYTE PTR [ebx]
  40ad98:	retf   
  40ad99:	adc    ah,BYTE PTR [edi+ebp*4-0xe65edf9]
  40ada0:	ins    BYTE PTR es:[edi],dx
  40ada1:	sbb    ebx,DWORD PTR [edx]
  40ada3:	jl     0x40ad4c
  40ada5:	xlat   BYTE PTR ds:[ebx]
  40ada6:	inc    esi
  40ada7:	mov    ds:0xa5175f66,eax
  40adac:	fst    QWORD PTR [edx-0x3bb64b52]
  40adb2:	mov    edx,DWORD PTR [esi+0x11568df]
  40adb8:	ficomp WORD PTR [ebx-0x4f218821]
  40adbe:	mov    dh,0x4
  40adc0:	enter  0xbea5,0xe
  40adc4:	mov    DWORD PTR [eax-0x3],eax
  40adc7:	pop    edi
  40adc8:	pop    ds
  40adc9:	inc    esp
  40adca:	inc    eax
  40adcb:	push   0xffffffd1
  40adcd:	daa    
  40adce:	and    bl,BYTE PTR [ecx]
  40add0:	xor    BYTE PTR [edi-0x53],dh
  40add3:	mov    ch,0xbb
  40add5:	test   ebp,edi
  40add7:	ror    BYTE PTR [edi+esi*8+0x3abb9357],1
  40adde:	xor    edx,DWORD PTR [ebx-0x20a03468]
  40ade4:	rcr    BYTE PTR [eax],0x6e
  40ade7:	ret    
  40ade8:	xchg   edx,eax
  40ade9:	(bad)  [edx-0x7b]
  40adec:	mov    dh,0x56
  40adee:	add    ebx,esi
  40adf0:	push   ss
  40adf1:	out    0xd,eax
  40adf3:	mov    cl,0x29
  40adf5:	fadd   DWORD PTR [ebp+0x66d78477]
  40adfb:	adc    al,0x5c
  40adfd:	sar    BYTE PTR [edx+0x0],1
  40ae00:	inc    ecx
  40ae01:	sbb    bl,bh
  40ae03:	div    BYTE PTR [edi+edx*8]
  40ae06:	(bad)  
  40ae07:	mov    dl,0xf1
  40ae09:	jl     0x40adef
  40ae0b:	fadd   QWORD PTR [ebx+0x12]
  40ae0e:	ds in  eax,dx
  40ae10:	mov    esi,0x6e8c48a8
  40ae15:	fcom   QWORD PTR [esi-0x58]
  40ae18:	fcom   QWORD PTR [ebx]
  40ae1a:	jbe    0x40ae0e
  40ae1c:	sbb    BYTE PTR [edi],dh
  40ae1e:	mov    al,ds:0x3a49c918
  40ae23:	push   ds
  40ae24:	fdivr  DWORD PTR [ebp-0x270cfd90]
  40ae2a:	inc    edx
  40ae2b:	fild   QWORD PTR [edx-0x25]
  40ae2e:	pop    edi
  40ae2f:	repnz add eax,0xae216815
  40ae35:	shl    esp,0x66
  40ae38:	xor    eax,0xe96eb934
  40ae3d:	mov    eax,0x87e6490a
  40ae42:	cli    
  40ae43:	les    ebx,FWORD PTR [ebp-0x3e]
  40ae46:	push   ebx
  40ae47:	and    edi,eax
  40ae49:	or     al,0x8b
  40ae4b:	cdq    
  40ae4c:	jp     0x40adf8
  40ae4e:	xchg   esi,eax
  40ae4f:	stos   BYTE PTR es:[edi],al
  40ae50:	sub    BYTE PTR [edi+0x42b1b722],bh
  40ae56:	mov    eax,0x1b855557
  40ae5b:	push   ds
  40ae5c:	das    
  40ae5d:	je     0x40ae34
  40ae5f:	int    0xaa
  40ae61:	mov    dl,0x7c
  40ae63:	mov    eax,DWORD PTR [edx+ebx*8+0x62e7876f]
  40ae6a:	mov    ds:0xb5bafba0,eax
  40ae6f:	mov    dh,0x7d
  40ae71:	int3   
  40ae72:	jno    0x40ae3a
  40ae74:	adc    DWORD PTR [ecx-0x35266044],ebx
  40ae7a:	mov    edx,0xae10efe6
  40ae7f:	jge    0x40ae43
  40ae81:	arpl   WORD PTR [eax-0x7af2ae44],si
  40ae87:	adc    cl,BYTE PTR [eax+0x71a54207]
  40ae8d:	mov    bh,0xd2
  40ae8f:	adc    eax,0xaa81767a
  40ae94:	pop    ecx
  40ae95:	jle    0x40ae89
  40ae97:	gs xchg dl,dl
  40ae9a:	sbb    eax,0x2ec7cdd1
  40ae9f:	pop    ss
  40aea0:	pop    edx
  40aea1:	call   edi
  40aea3:	fst    QWORD PTR [esi+ecx*2-0x2a]
  40aea7:	mov    bl,0xfa
  40aea9:	xlat   BYTE PTR ds:[ebx]
  40aeaa:	sbb    DWORD PTR [ecx],esi
  40aeac:	pushf  
  40aead:	cbw    
  40aeaf:	sub    al,0x71
  40aeb1:	test   BYTE PTR [ecx],0x8a
  40aeb4:	mov    esp,DWORD PTR [esi-0x2b9c304e]
  40aeba:	in     eax,0x32
  40aebc:	jl     0x40aea9
  40aebe:	jb     0x40aec3
  40aec0:	rcr    bh,cl
  40aec2:	pop    ebx
  40aec3:	xchg   ebp,eax
  40aec4:	(bad)  
  40aec5:	imul   eax,DWORD PTR [edx],0xfb7f8e77
  40aecb:	and    al,0x2a
  40aecd:	sbb    BYTE PTR [ebx-0x36dcd8ff],dh
  40aed3:	sti    
  40aed4:	cmp    edx,edx
  40aed6:	bound  ebx,QWORD PTR [ebx]
  40aed8:	stos   BYTE PTR es:[edi],al
  40aed9:	hlt    
  40aeda:	mov    BYTE PTR [eax+0x2b96f83],al
  40aee0:	xchg   dh,dh
  40aee2:	jb     0x40aeb4
  40aee4:	adc    dl,bh
  40aee6:	push   0xffffffa1
  40aee8:	push   edi
  40aee9:	dec    edi
  40aeeb:	int    0xb6
  40aeed:	pop    edx
  40aeee:	dec    ebx
  40aeef:	test   eax,0x26a30ec1
  40aef4:	jmp    FWORD PTR [ebx]
  40aef6:	xchg   ecx,eax
  40aef7:	fs mov edi,0xbed7d2ab
  40aefd:	adc    DWORD PTR [edi-0x6d],esp
  40af00:	cld    
  40af01:	push   ebx
  40af02:	retf   0xd09d
  40af05:	shl    BYTE PTR [ecx+edx*1+0x3c98b5c4],cl
  40af0c:	mov    al,0xd1
  40af0e:	add    eax,0x162ff0da
  40af13:	test   al,0xd0
  40af15:	addr16 mov ecx,eax
  40af18:	push   eax
  40af19:	lock gs ret 0x8d1a
  40af1e:	ret    
  40af1f:	les    esp,FWORD PTR [ecx-0x15]
  40af22:	add    eax,0xffed8afb
  40af27:	jle    0x40af82
  40af29:	sahf   
  40af2a:	pushf  
  40af2b:	ds ss cli 
  40af2e:	outs   dx,DWORD PTR ds:[esi]
  40af2f:	dec    edi
  40af30:	xrelease mov DWORD PTR [esi],0x6eda8bdb
  40af37:	jecxz  0x40af81
  40af39:	in     al,dx
  40af3a:	call   DWORD PTR [ecx+0x51]
  40af3d:	or     eax,0x95feefd7
  40af42:	test   al,0x23
  40af44:	cmp    edx,eax
  40af46:	iret   
  40af47:	daa    
  40af48:	std    
  40af49:	enter  0xbae7,0x2d
  40af4d:	jo     0x40af18
  40af4f:	jae    0x40afa4
  40af51:	mov    BYTE PTR [ecx*4+0x5eca8225],dh
  40af58:	push   ss
  40af59:	mov    WORD PTR [eax],gs
  40af5b:	(bad)
  40af5f:	leave  
  40af60:	mov    ah,0x7a
  40af62:	shl    DWORD PTR [esi-0x536f6f46],1
  40af68:	cmp    dl,BYTE PTR [ecx-0x129498d9]
  40af6e:	(bad)  
  40af6f:	(bad)  
  40af71:	mov    edi,esi
  40af73:	das    
  40af74:	(bad)  
  40af75:	mov    ebp,0x883a5bb8
  40af7a:	pop    ecx
  40af7b:	cmc    
  40af7c:	mov    al,0xbd
  40af7e:	retfw  
  40af80:	pop    es
  40af81:	xchg   esp,eax
  40af82:	mov    al,ds:0x212e5212
  40af87:	lsl    esp,WORD PTR [esi]
  40af8a:	cmp    bl,dh
  40af8c:	(bad)  
  40af8d:	sub    eax,DWORD PTR [edi+0x65]
  40af90:	and    ch,bh
  40af92:	jp     0x40af7a
  40af94:	pushf  
  40af95:	jno    0x40af2c
  40af97:	ins    BYTE PTR es:[edi],dx
  40af98:	push   edx
  40af99:	pop    ebx
  40af9a:	js     0x40af41
  40af9c:	mov    esp,0x2cc6acf8
  40afa1:	js     0x40afce
  40afa3:	ins    BYTE PTR es:[edi],dx
  40afa4:	push   cs
  40afa5:	pop    edx
  40afa6:	inc    ecx
  40afa7:	shr    BYTE PTR [ebp-0x44],0x5b
  40afab:	fsub   QWORD PTR [ebp-0x9457ecd]
  40afb1:	call   0x2dd9:0x125ff2d1
  40afb8:	loope  0x40afe2
  40afba:	xchg   esi,eax
  40afbb:	test   dl,ah
  40afbd:	mov    WORD PTR [ebp+0x27],?
  40afc0:	xchg   ebp,eax
  40afc1:	mov    dh,0x35
  40afc3:	in     al,0xda
  40afc5:	(bad)  
  40afc7:	pop    ds
  40afc8:	lods   eax,DWORD PTR ds:[esi]
  40afc9:	xor    al,0x53
  40afcb:	arpl   WORD PTR [edx+0x40],di
  40afce:	mov    edx,0x972e7f6c
  40afd3:	or     bh,BYTE PTR [esi]
  40afd5:	jl     0x40af91
  40afd7:	shr    dl,cl
  40afd9:	inc    ebx
  40afda:	call   0x6daf:0xbe89b69d
  40afe1:	mov    bl,0x8c
  40afe3:	(bad)  [esi*1+0x1282dc4]
  40afea:	pop    ebx
  40afeb:	add    cl,BYTE PTR [ecx]
  40afed:	dec    edi
  40afee:	dec    esi
  40afef:	pop    edi
  40aff0:	jmp    0x2b3082da
  40aff5:	mov    edi,0x3a229df8
  40affa:	stos   DWORD PTR es:[edi],eax
  40affb:	sub    dh,dl
  40affd:	mov    eax,ds:0x62646164
  40b002:	xchg   edx,eax
  40b003:	cmp    ebx,DWORD PTR [ebx]
  40b005:	or     ah,BYTE PTR [ecx+0x7864cb65]
  40b00b:	inc    edi
  40b00c:	xor    bh,BYTE PTR [esp+ebx*2+0x7cdf5336]
  40b013:	out    dx,al
  40b014:	add    al,0xf
  40b016:	pop    edi
  40b017:	jmp    0x40b08a
  40b019:	cmp    eax,0xbb2954e8
  40b01e:	add    dh,cl
  40b020:	js     0x40b09d
  40b022:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b023:	and    al,BYTE PTR [ecx-0x5d]
  40b026:	pop    edx
  40b027:	jo     0x40b07e
  40b029:	aad    0xf8
  40b02b:	inc    esp
  40b02c:	sub    BYTE PTR [ecx-0x41],ah
  40b02f:	std    
  40b030:	mov    dh,0x58
  40b032:	test   BYTE PTR [ebx-0x2d],dh
  40b035:	mov    ch,0x4b
  40b037:	mov    bh,0x55
  40b039:	xchg   ebx,eax
  40b03a:	aaa    
  40b03b:	mov    dl,0x19
  40b03d:	aam    0xb3
  40b03f:	out    0x8d,al
  40b041:	retf   0xc4fc
  40b044:	cli    
  40b045:	push   ds
  40b046:	jmp    0xaa70:0xbbee88da
  40b04d:	lods   eax,DWORD PTR ds:[esi]
  40b04e:	jle    0x40b023
  40b050:	mov    gs,WORD PTR [edx+0x6f]
  40b053:	lahf   
  40b054:	repz pop ss
  40b056:	push   edi
  40b057:	adc    edx,DWORD PTR [ecx-0x4ada9ac8]
  40b05d:	xlat   BYTE PTR ds:[ebx]
  40b05e:	add    eax,0xc0e7c45f
  40b063:	pop    edx
  40b064:	push   cs
  40b065:	mov    ch,0x80
  40b067:	pop    DWORD PTR [esi+0x3a]
  40b06a:	cmp    ebx,ebp
  40b06c:	test   al,0x1f
  40b06e:	sbb    al,0x3a
  40b070:	xlat   BYTE PTR ds:[ebx]
  40b071:	push   ss
  40b072:	loopne 0x40b054
  40b074:	mov    DWORD PTR [ebx*2+0x2230e755],ecx
  40b07b:	outs   dx,BYTE PTR ds:[esi]
  40b07c:	push   eax
  40b07d:	stc    
  40b07e:	jg     0x40b090
  40b080:	sbb    bh,BYTE PTR [edx]
  40b082:	dec    ebp
  40b083:	dec    eax
  40b084:	or     DWORD PTR [ecx-0x662d78f2],eax
  40b08a:	and    eax,0xcf2b8153
  40b08f:	sub    BYTE PTR [ebp+0x776b5af5],dh
  40b095:	sub    al,0x4c
  40b097:	lea    ebp,[eax+edx*2+0x57]
  40b09b:	or     al,BYTE PTR [ebp+edx*4-0x16]
  40b09f:	in     al,dx
  40b0a0:	int    0x52
  40b0a2:	loopne 0x40b049
  40b0a4:	sar    BYTE PTR [eax],0x42
  40b0a7:	nop
  40b0a8:	test   DWORD PTR [ecx-0x18],esi
  40b0ab:	xchg   ebx,eax
  40b0ac:	rol    ch,cl
  40b0ae:	(bad)  
  40b0af:	repz push ds
  40b0b1:	dec    edx
  40b0b2:	or     BYTE PTR [eax],0x93
  40b0b5:	cmp    eax,0x1740fee7
  40b0ba:	test   BYTE PTR [ebp-0x2],bl
  40b0bd:	ins    BYTE PTR es:[edi],dx
  40b0be:	jae    0x40b0e5
  40b0c0:	xchg   DWORD PTR [edx+esi*1],eax
  40b0c3:	call   0xd5177488
  40b0c8:	mov    bl,0x21
  40b0ca:	dec    ecx
  40b0cb:	or     eax,0x88fa5a48
  40b0d0:	xchg   esi,eax
  40b0d1:	outs   dx,DWORD PTR ds:[esi]
  40b0d2:	dec    edx
  40b0d3:	push   edi
  40b0d4:	inc    ecx
  40b0d5:	(bad)  
  40b0d6:	outs   dx,BYTE PTR ds:[esi]
  40b0d7:	cmp    esi,DWORD PTR [ecx]
  40b0d9:	addr16 aaa 
  40b0db:	stos   DWORD PTR es:[edi],eax
  40b0dc:	xchg   edx,eax
  40b0dd:	ds push ds
  40b0df:	sub    edx,ebx
  40b0e1:	cmp    eax,DWORD PTR [ebx-0x108e6743]
  40b0e7:	push   ebx
  40b0e8:	addr16 pop es
  40b0ea:	or     al,0x1c
  40b0ec:	pop    edi
  40b0ed:	push   esi
  40b0ee:	fidiv  WORD PTR [esi]
  40b0f0:	mov    dl,0xb5
  40b0f2:	jmp    FWORD PTR ds:0x31515404
  40b0f8:	jb     0x40b13f
  40b0fa:	inc    edi
  40b0fb:	xor    eax,0x124267b8
  40b100:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b102:	ins    DWORD PTR es:[edi],dx
  40b103:	dec    ebp
  40b104:	fdiv   st,st(6)
  40b106:	dec    ebp
  40b107:	iret   
  40b108:	test   edx,edi
  40b10a:	bound  eax,QWORD PTR ds:0x32933078
  40b110:	push   esp
  40b111:	in     eax,dx
  40b112:	pop    edx
  40b113:	das    
  40b114:	dec    ebp
  40b115:	mov    esp,0x71a19d44
  40b11a:	pop    edx
  40b11b:	jmp    0x766c195c
  40b120:	sub    esi,ebp
  40b122:	mov    ecx,0xeb6723ad
  40b127:	movq   QWORD PTR [edx-0xabb27ff],mm6
  40b12e:	fmul   st,st(7)
  40b130:	add    DWORD PTR [eax],ebx
  40b132:	jle    0x40b0f8
  40b134:	call   0x50a8:0xd6b52b3f
  40b13b:	xchg   ebx,eax
  40b13c:	test   DWORD PTR [ebx-0x211fc747],esi
  40b142:	ret    0xf3af
  40b145:	test   DWORD PTR [ebp-0x42],0xe079dbca
  40b14c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b14d:	into   
  40b14e:	or     esp,esp
  40b150:	pop    edi
  40b151:	jmp    0x40b19d
  40b153:	rcr    dl,1
  40b155:	sub    eax,0x1a7b0c5a
  40b15a:	(bad)  
  40b15b:	ficomp DWORD PTR [ebp+0x3f58dd1b]
  40b161:	jno    0x40b0f6
  40b163:	hlt    
  40b164:	sbb    al,0x91
  40b166:	test   DWORD PTR [eax],0x757e0649
  40b16c:	test   al,0x26
  40b16e:	xchg   esp,eax
  40b16f:	push   edx
  40b170:	repz jbe 0x40b190
  40b173:	imul   edi,DWORD PTR [edx+0x473be563],0xc7961b38
  40b17d:	inc    ecx
  40b17e:	scas   al,BYTE PTR es:[edi]
  40b17f:	inc    esi
  40b180:	mov    BYTE PTR [eax],dl
  40b182:	push   esi
  40b183:	jno    0x40b1c4
  40b185:	mov    dh,0xcf
  40b187:	ss ins DWORD PTR es:[edi],dx
  40b189:	pop    ebx
  40b18a:	dec    ebp
  40b18b:	cmp    DWORD PTR ds:0xd01c3c22,edx
  40b191:	rcr    BYTE PTR [ebp-0x36743744],1
  40b197:	outs   dx,DWORD PTR ds:[esi]
  40b198:	sbb    dh,bl
  40b19a:	pop    edi
  40b19b:	inc    ebp
  40b19c:	dec    esp
  40b19d:	mov    ebp,0xbe987a12
  40b1a2:	aad    0x22
  40b1a4:	rcr    BYTE PTR [edx],1
  40b1a6:	xchg   ecx,eax
  40b1a7:	jb     0x40b135
  40b1a9:	push   esp
  40b1aa:	in     eax,dx
  40b1ab:	neg    BYTE PTR [esi+0x68]
  40b1ae:	push   ebx
  40b1af:	jnp    0x40b1df
  40b1b1:	jl     0x40b1ac
  40b1b3:	cs jo  0x40b1ed
  40b1b6:	sub    BYTE PTR [ebp+ebp*8-0x625e3dec],dl
  40b1bd:	jbe    0x40b207
  40b1bf:	inc    edx
  40b1c0:	lods   al,BYTE PTR ds:[esi]
  40b1c1:	ins    DWORD PTR es:[edi],dx
  40b1c2:	in     al,dx
  40b1c3:	push   cs
  40b1c4:	add    eax,0xab506d46
  40b1c9:	cmp    edi,DWORD PTR [eax]
  40b1cb:	popf   
  40b1cc:	or     BYTE PTR [eax],0xf2
  40b1cf:	rcr    ch,1
  40b1d1:	ror    BYTE PTR [edi+0x45],1
  40b1d4:	mov    ebx,0x4410c9f5
  40b1d9:	pop    ss
  40b1da:	fwait
  40b1db:	repz jbe 0x40b24c
  40b1de:	sub    BYTE PTR [edx+edx*2],ah
  40b1e1:	jbe    0x40b200
  40b1e3:	sub    eax,0x6cec4395
  40b1e8:	or     DWORD PTR [ebx-0x48],eax
  40b1eb:	jle    0x40b1f4
  40b1ed:	or     BYTE PTR [esp+esi*4-0x8094572],al
  40b1f4:	js     0x40b207
  40b1f6:	xchg   ecx,eax
  40b1f7:	jo     0x40b270
  40b1f9:	in     al,0xca
  40b1fb:	nop
  40b1fc:	call   0x75be:0xc80f8ec2
  40b203:	js     0x40b1eb
  40b205:	fldenv [edi+0x23]
  40b208:	push   eax
  40b209:	call   0x5dc8c5f0
  40b20e:	and    eax,DWORD PTR [eax-0x6ba753f0]
  40b214:	fld    TBYTE PTR [ecx+0x2a596503]
  40b21a:	ins    DWORD PTR es:[edi],dx
  40b21b:	cmp    bl,BYTE PTR [edi]
  40b21d:	mov    al,ds:0xbab06d48
  40b222:	loop   0x40b206
  40b224:	enter  0xa169,0x90
  40b228:	jmp    0x3b9c:0x1e0ff68f
  40b22f:	into   
  40b230:	mov    ebx,0xed5c20af
  40b235:	mov    DWORD PTR [edx+0x5fee1244],edi
  40b23b:	icebp  
  40b23c:	stos   BYTE PTR es:[edi],al
  40b23d:	and    eax,0x556ae96c
  40b242:	adc    DWORD PTR [esi+0x2b096532],edi
  40b248:	test   DWORD PTR ds:0x96a3be3b,edi
  40b24e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b24f:	mov    ebx,0x17d31408
  40b254:	add    DWORD PTR [ebx],edx
  40b256:	cmp    al,0x9c
  40b258:	cmp    al,bl
  40b25a:	cmp    BYTE PTR [ebx+esi*8-0x402de4d6],ch
  40b261:	jno    0x40b2d6
  40b263:	jbe    0x40b23a
  40b265:	imul   esi,ebp,0x6b0f5656
  40b26b:	imul   edx,DWORD PTR [eax],0xffffffaa
  40b26e:	aad    0x0
  40b270:	jp     0x40b2af
  40b272:	aam    0x79
  40b274:	adc    al,0xbb
  40b276:	mov    bh,al
  40b278:	adc    BYTE PTR [ecx-0x26d4c33a],al
  40b27e:	jp     0x40b26a
  40b280:	ins    BYTE PTR es:[edi],dx
  40b281:	clc    
  40b282:	adc    BYTE PTR [edx-0x47f8ca55],dl
  40b288:	pop    edi
  40b289:	stos   DWORD PTR es:[edi],eax
  40b28a:	out    dx,al
  40b28b:	scas   eax,DWORD PTR es:[edi]
  40b28c:	mov    gs,edi
  40b28e:	loop   0x40b253
  40b290:	push   ecx
  40b291:	popf   
  40b292:	jmp    0x40b256
  40b294:	xchg   esi,eax
  40b295:	out    0xcc,al
  40b297:	popf   
  40b298:	out    dx,al
  40b299:	mov    cl,0xe2
  40b29b:	sub    edi,ecx
  40b29d:	or     dh,BYTE PTR [eax+0x7870e0f0]
  40b2a3:	adc    DWORD PTR [ebx-0xb6ef496],ebx
  40b2a9:	dec    ecx
  40b2aa:	jno    0x40b262
  40b2ac:	loope  0x40b2c1
  40b2ae:	inc    eax
  40b2af:	lahf   
  40b2b0:	mov    ds:0x875da6e5,eax
  40b2b5:	ins    BYTE PTR es:[edi],dx
  40b2b6:	lods   eax,DWORD PTR ds:[esi]
  40b2b7:	jle    0x40b2cc
  40b2b9:	jg     0x40b266
  40b2bb:	pop    di
  40b2bd:	cmp    BYTE PTR [ebx+0x1b],bh
  40b2c0:	sub    al,bh
  40b2c2:	xlat   BYTE PTR ds:[ebx]
  40b2c3:	scas   eax,DWORD PTR es:[edi]
  40b2c4:	inc    ebp
  40b2c5:	out    dx,al
  40b2c6:	pop    ss
  40b2c7:	cmp    eax,0x155457c5
  40b2cc:	xor    BYTE PTR [ebx-0x27277625],0xc4
  40b2d3:	ins    DWORD PTR es:[edi],dx
  40b2d4:	sbb    BYTE PTR [ecx-0x1a2fe34b],ah
  40b2da:	inc    ebp
  40b2db:	fisttp DWORD PTR [ebp+0x2e]
  40b2de:	mov    edi,0x5a5c2f25
  40b2e3:	hlt    
  40b2e4:	loopne 0x40b289
  40b2e6:	add    ebp,DWORD PTR [esi+0x38]
  40b2e9:	mov    bh,0xcf
  40b2eb:	sub    DWORD PTR [ebp-0x4c],ecx
  40b2ee:	xchg   edx,eax
  40b2ef:	ret    0x7f60
  40b2f2:	fdiv   QWORD PTR [esi-0x54]
  40b2f5:	sbb    BYTE PTR [ebp+0x76fcaec3],ch
  40b2fb:	fidivr WORD PTR ds:0x1f6979b4
  40b301:	and    DWORD PTR [esi],0xc0d4f70
  40b307:	ds out dx,eax
  40b309:	cmp    ch,BYTE PTR [esi+0x3da3d2e0]
  40b30f:	inc    ebx
  40b310:	add    esp,ebp
  40b312:	imul   ebp,ebx,0xffffffe9
  40b315:	pop    es
  40b316:	out    dx,eax
  40b317:	addr16 add eax,0xa86ccb9b
  40b31d:	mov    edi,0xf1bfd96c
  40b322:	(bad)  
  40b323:	push   0x21
  40b325:	test   al,0x7d
  40b327:	sub    BYTE PTR [edi+0x37120351],bh
  40b32d:	paddusb mm4,QWORD PTR [eax]
  40b330:	les    ebx,FWORD PTR [edx+ecx*1]
  40b333:	out    dx,eax
  40b334:	cli    
  40b335:	std    
  40b336:	(bad)  
  40b337:	jmp    DWORD PTR [edx+0x74]
  40b33a:	data16 jp 0x40b330
  40b33d:	adc    BYTE PTR [ebp-0x5f],dl
  40b340:	je     0x40b2e6
  40b342:	push   ebp
  40b343:	shr    edi,0x3
  40b346:	fs pop esi
  40b348:	cdq    
  40b349:	pop    es
  40b34a:	sub    ecx,DWORD PTR [ecx+0x2129262d]
  40b350:	fincstp 
  40b352:	or     DWORD PTR [edi+0x523e9394],ebx
  40b358:	cmp    cl,ch
  40b35a:	sbb    cl,ah
  40b35c:	in     eax,0x2a
  40b35e:	xor    ebx,DWORD PTR [ecx-0x28]
  40b361:	jle    0x40b3bd
  40b363:	mov    ch,0xe4
  40b365:	inc    ebp
  40b366:	(bad)  
  40b367:	(bad)  
  40b369:	leave  
  40b36a:	xor    BYTE PTR [edx+0x8],dh
  40b36d:	pop    ds
  40b36e:	pop    ds
  40b36f:	and    BYTE PTR [edx+esi*2-0x38e994c],cl
  40b376:	mov    bh,0x3
  40b378:	sub    al,0xf1
  40b37a:	jmp    0x40b341
  40b37c:	les    esp,FWORD PTR [esi]
  40b37e:	mov    al,0x1c
  40b380:	fs mov bh,0x84
  40b383:	pop    ss
  40b384:	(bad)  
  40b385:	bnd jmp 0x3544a22
  40b38b:	sub    edi,DWORD PTR [ebp+0x2541e794]
  40b391:	addr16 inc ebp
  40b393:	enter  0x9f9c,0x7a
  40b397:	arpl   WORD PTR [edi],cx
  40b399:	imul   esp,DWORD PTR [ebx],0x82170a20
  40b39f:	sub    al,0x66
  40b3a1:	out    0x64,eax
  40b3a3:	add    BYTE PTR [edi+0x38],cl
  40b3a6:	dec    eax
  40b3a7:	jne    0x40b3a4
  40b3a9:	les    esp,FWORD PTR [esi]
  40b3ab:	cmp    eax,0x75f86888
  40b3b0:	jp     0x40b35c
  40b3b2:	into   
  40b3b3:	xchg   esp,eax
  40b3b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3b5:	sub    BYTE PTR [ecx+eax*4-0x38],al
  40b3b9:	mov    al,0xe5
  40b3bb:	mov    ecx,0x7ff9f083
  40b3c0:	aam    0xdd
  40b3c2:	mov    edx,0x1c675ba6
  40b3c7:	shl    BYTE PTR [edi*2+0x5102ef59],0x53
  40b3cf:	aaa    
  40b3d0:	and    al,0xc3
  40b3d2:	mov    al,0xcf
  40b3d4:	sbb    ah,BYTE PTR [ecx-0x2d]
  40b3d7:	not    BYTE PTR [edi+0x11b729dd]
  40b3dd:	mov    al,BYTE PTR [ebp-0x3c]
  40b3e0:	mov    ds:0x49da6ee4,eax
  40b3e5:	in     eax,dx
  40b3e6:	repnz mov WORD PTR [edx+edx*2],es
  40b3ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3eb:	jmp    0x40b419
  40b3ed:	xor    ebp,DWORD PTR [edx]
  40b3ef:	push   ds
  40b3f0:	xor    eax,0x8596cd5e
  40b3f5:	xor    eax,0x689c7ec0
  40b3fa:	xchg   DWORD PTR [edx-0x1994d4e5],esi
  40b400:	stc    
  40b401:	xchg   ebx,eax
  40b402:	sub    esp,DWORD PTR [eax+edx*1+0x5e]
  40b406:	imul   ebp,ebp,0xffffff93
  40b409:	shl    BYTE PTR [ecx+0x4f],cl
  40b40c:	adc    DWORD PTR [esi],ebp
  40b40e:	inc    ebp
  40b40f:	int3   
  40b410:	adc    esi,DWORD PTR [ecx]
  40b412:	adc    DWORD PTR [ebp-0x71],ebp
  40b415:	xor    DWORD PTR [edi-0x47],0x7b
  40b419:	jge    0x40b40e
  40b41b:	push   edx
  40b41c:	xchg   ebp,eax
  40b41d:	xchg   esi,eax
  40b41e:	jbe    0x40b41b
  40b420:	and    DWORD PTR [edx+0x46],ecx
  40b423:	out    0x96,eax
  40b425:	loopne 0x40b3b2
  40b427:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b428:	jo     0x40b3ed
  40b42a:	and    eax,0x77a31586
  40b42f:	jg     0x40b3ef
  40b431:	sahf   
  40b432:	or     al,0xf8
  40b434:	mov    bl,bl
  40b436:	mov    bh,0xea
  40b438:	jbe    0x40b3ce
  40b43a:	out    dx,eax
  40b43b:	cmp    DWORD PTR [edx-0x2c3979c],0x3eb3ded2
  40b445:	sbb    edi,ecx
  40b447:	cmp    esi,edx
  40b449:	pusha  
  40b44a:	dec    ecx
  40b44b:	outs   dx,BYTE PTR ds:[esi]
  40b44c:	inc    ecx
  40b44d:	ds in  eax,0x68
  40b450:	mov    ebp,0xb3b86f3c
  40b455:	fstp   DWORD PTR [edx-0x1c]
  40b458:	xlat   BYTE PTR ds:[ebx]
  40b459:	adc    DWORD PTR [edx-0x18],edx
  40b45c:	cwde   
  40b45d:	mov    bh,0x68
  40b45f:	xchg   ch,ah
  40b461:	cdq    
  40b462:	mov    ah,0x63
  40b464:	mov    ebp,0xe1333ab
  40b469:	dec    edx
  40b46a:	mov    ds,WORD PTR [ecx]
  40b46c:	adc    al,0x62
  40b46e:	inc    edx
  40b46f:	xchg   BYTE PTR [edi-0x46810257],ah
  40b475:	sbb    edi,DWORD PTR [eax]
  40b477:	jge    0x40b4bd
  40b479:	pop    ds
  40b47a:	jge    0x40b4f6
  40b47c:	mov    bh,0x12
  40b47e:	scas   al,BYTE PTR es:[edi]
  40b47f:	and    bh,cl
  40b481:	enter  0x1a7e,0xc7
  40b485:	pop    ebp
  40b486:	out    dx,al
  40b487:	and    eax,0xa375cbe7
  40b48c:	inc    ebp
  40b48d:	call   0x9981:0xbed2bb60
  40b494:	sub    bh,BYTE PTR [ebx-0x3075927e]
  40b49a:	stc    
  40b49b:	jmp    0x40b4ef
  40b49d:	xchg   edi,eax
  40b49e:	stc    
  40b49f:	adc    eax,DWORD PTR [ecx+0x4e]
  40b4a2:	ss dec eax
  40b4a4:	cmp    DWORD PTR [ecx+0x3],esi
  40b4a7:	push   edx
  40b4a8:	test   al,0xa1
  40b4aa:	ror    BYTE PTR [edx],1
  40b4ac:	scas   eax,DWORD PTR es:[edi]
  40b4ad:	aad    0x2c
  40b4af:	pop    ebx
  40b4b0:	ja     0x40b499
  40b4b2:	add    dh,bl
  40b4b4:	push   0x6b
  40b4b6:	shr    DWORD PTR [ecx],0x0
  40b4b9:	push   eax
  40b4ba:	push   ss
  40b4bb:	loopne 0x40b508
  40b4bd:	cwde   
  40b4be:	imul   ebp,DWORD PTR [ecx-0x6a],0xeb810886
  40b4c5:	xor    ch,ah
  40b4c7:	push   cs
  40b4c8:	mov    cl,0x51
  40b4ca:	cli    
  40b4cb:	mov    DWORD PTR [edi-0x9de6fcc],esi
  40b4d1:	out    dx,al
  40b4d2:	add    edi,esp
  40b4d4:	cmp    ecx,DWORD PTR [edi-0x5348aa9]
  40b4da:	ins    BYTE PTR es:[edi],dx
  40b4db:	push   ebp
  40b4dc:	aas    
  40b4dd:	inc    ebx
  40b4de:	inc    eax
  40b4df:	jae    0x40b4ab
  40b4e1:	idiv   ch
  40b4e3:	fwait
  40b4e4:	in     al,dx
  40b4e5:	shl    DWORD PTR [edi+0x42],0xc5
  40b4e9:	rcl    BYTE PTR [ebp+0xe],cl
  40b4ec:	mov    dh,0x1c
  40b4ee:	es push ss
  40b4f0:	cld    
  40b4f1:	xlat   BYTE PTR ds:[ebx]
  40b4f2:	jecxz  0x40b490
  40b4f4:	push   edi
  40b4f5:	pusha  
  40b4f6:	in     eax,0xf6
  40b4f8:	in     al,0x4c
  40b4fa:	dec    ebx
  40b4fb:	mov    ecx,0x84da89e5
  40b500:	xor    BYTE PTR [edi-0x427a04da],cl
  40b506:	mov    ebx,0x93d2609
  40b50b:	aam    0x4c
  40b50d:	sbb    BYTE PTR [esi-0x76fb33bd],bl
  40b513:	sub    ebp,ebp
  40b515:	rcr    DWORD PTR [ebx-0x48],0x15
  40b519:	fld    TBYTE PTR ds:0xbfb8c949
  40b51f:	nop
  40b520:	sub    ebx,DWORD PTR [eax-0x6e2d0410]
  40b526:	inc    eax
  40b527:	rol    DWORD PTR [ebp-0x20],cl
  40b52a:	mov    esp,0x6b9abd5c
  40b52f:	shl    BYTE PTR [ebx],1
  40b531:	cmp    ah,BYTE PTR [esp+ebp*4]
  40b534:	and    DWORD PTR [edx-0x51adb3b5],eax
  40b53a:	ins    DWORD PTR es:[edi],dx
  40b53b:	lea    ebp,[ecx]
  40b53d:	dec    esi
  40b53e:	adc    edx,ecx
  40b540:	mov    DWORD PTR [esi+edx*8],esp
  40b543:	or     al,0x0
  40b545:	out    0x3c,al
  40b547:	jmp    0x40b50b
  40b549:	add    esp,DWORD PTR [esi]
  40b54b:	lods   al,BYTE PTR ds:[esi]
  40b54c:	add    DWORD PTR [eax],edi
  40b54e:	mov    al,ds:0xdb245dee
  40b553:	fadd   DWORD PTR [ebx]
  40b555:	ror    BYTE PTR [esi-0x71],1
  40b558:	jecxz  0x40b4f1
  40b55a:	push   0x7cdb023b
  40b55f:	int3   
  40b560:	in     al,dx
  40b561:	mov    eax,0x1a7d3004
  40b566:	pop    ebx
  40b567:	arpl   WORD PTR [ebx-0x1],bx
  40b56a:	fnstcw WORD PTR [ebp-0x146eb50f]
  40b570:	pop    eax
  40b571:	xchg   esp,eax
  40b572:	(bad)
  40b575:	lods   eax,DWORD PTR ds:[esi]
  40b576:	int    0x3c
  40b578:	add    ebx,DWORD PTR [edx-0x647a9084]
  40b57e:	jmp    0x2080:0x8c915799
  40b585:	mov    cl,0x38
  40b587:	not    esp
  40b589:	xchg   esp,eax
  40b58a:	pop    ds
  40b58b:	dec    edi
  40b58c:	ins    BYTE PTR es:[edi],dx
  40b58d:	pushf  
  40b58e:	mov    BYTE PTR [edx-0x20e03254],0x29
  40b595:	into   
  40b596:	rcr    eax,cl
  40b598:	(bad)  
  40b599:	xchg   esp,eax
  40b59a:	sbb    eax,0xeb56b3a
  40b59f:	xlat   BYTE PTR ds:[ebx]
  40b5a0:	enter  0x6d5b,0x33
  40b5a4:	and    ecx,DWORD PTR [esi+edi*2]
  40b5a7:	clc    
  40b5a8:	(bad)  
  40b5a9:	jns    0x40b556
  40b5ab:	mov    dl,0xc5
  40b5ad:	push   0xa6c13f5a
  40b5b2:	out    dx,eax
  40b5b3:	int    0xe7
  40b5b5:	sub    eax,0x6669b59b
  40b5ba:	sbb    DWORD PTR [ebp-0x4e81acd4],edx
  40b5c0:	mov    eax,0x84330a36
  40b5c5:	dec    esp
  40b5c6:	and    eax,0xee6003d2
  40b5cb:	fwait
  40b5cc:	mov    eax,0x1b5694d9
  40b5d1:	ret    0xeb97
  40b5d4:	cld    
  40b5d5:	cld    
  40b5d6:	dec    edx
  40b5d7:	add    al,0xcf
  40b5d9:	call   0x1fa1bf8c
  40b5de:	adc    edi,esi
  40b5e0:	ja     0x40b5aa
  40b5e2:	or     BYTE PTR [eax+0x68],0xc9
  40b5e6:	outs   dx,BYTE PTR ds:[esi]
  40b5e7:	push   esi
  40b5e8:	cmp    dl,BYTE PTR [edi-0x57]
  40b5eb:	push   es
  40b5ec:	fisub  DWORD PTR [ecx]
  40b5ee:	mov    ds:0x6c3cc93a,eax
  40b5f3:	and    eax,0xfadfc030
  40b5f8:	pusha  
  40b5f9:	in     al,0x47
  40b5fb:	(bad)
  40b5ff:	fldenv [ebp+edi*4+0x70]
  40b603:	repnz xlat BYTE PTR ds:[ebx]
  40b605:	add    edx,DWORD PTR [ebx+edi*1+0x31]
  40b609:	test   eax,0x82efec2a
  40b60e:	xor    al,0x1f
  40b610:	aas    
  40b611:	in     eax,0x3a
  40b613:	clc    
  40b614:	cmp    dl,al
  40b616:	retf   
  40b617:	repnz and DWORD PTR [ebx-0x38],esp
  40b61b:	mov    eax,DWORD PTR [ecx]
  40b61d:	stos   DWORD PTR es:[edi],eax
  40b61e:	jae    0x40b65f
  40b620:	push   0xffffffd7
  40b622:	adc    ecx,edi
  40b624:	lods   eax,DWORD PTR ds:[esi]
  40b625:	not    DWORD PTR [eax+ecx*1+0x42]
  40b629:	inc    ebx
  40b62a:	sbb    eax,eax
  40b62c:	stos   DWORD PTR es:[edi],eax
  40b62d:	sub    al,0x9e
  40b62f:	les    ecx,FWORD PTR [ebp+0x19fcc35f]
  40b635:	xor    ecx,DWORD PTR ds:0xbd51c096
  40b63b:	xchg   ebx,eax
  40b63c:	fst    DWORD PTR [ebp-0x64]
  40b63f:	jo     0x40b5ea
  40b641:	adc    eax,0x10453aa6
  40b646:	xor    bh,BYTE PTR [ebp-0x41f9c4b7]
  40b64c:	pop    esp
  40b64d:	cdq    
  40b64e:	xchg   edi,eax
  40b64f:	shl    DWORD PTR [ebx-0x66],0x6c
  40b653:	xchg   BYTE PTR [ebp-0x57ee65a6],ah
  40b659:	ins    DWORD PTR es:[edi],dx
  40b65a:	cld    
  40b65b:	mov    ch,0x27
  40b65d:	sub    ebx,0x3d
  40b660:	in     al,dx
  40b661:	pop    ebx
  40b662:	dec    esi
  40b663:	les    edi,FWORD PTR [ebp-0x4f]
  40b666:	pushf  
  40b667:	fnstcw WORD PTR [ebx+0x436c1a0c]
  40b66d:	fisttp WORD PTR [edx+0x14]
  40b670:	pusha  
  40b671:	xchg   ecx,eax
  40b672:	leave  
  40b673:	cmc    
  40b674:	enter  0x5dda,0xe7
  40b678:	mov    bl,ch
  40b67a:	lahf   
  40b67b:	cli    
  40b67c:	inc    ebp
  40b67d:	shr    DWORD PTR [ecx+0x57],cl
  40b680:	xchg   edi,eax
  40b681:	pop    es
  40b682:	or     BYTE PTR [edx],ah
  40b684:	loope  0x40b6bc
  40b686:	(bad)  
  40b688:	mul    BYTE PTR [eax]
  40b68a:	aad    0x42
  40b68c:	out    0x1,al
  40b68e:	lock mov bh,bl
  40b691:	shr    DWORD PTR [eax+ebp*2-0x3a728a96],0x18
  40b699:	aaa    
  40b69a:	fwait
  40b69b:	and    bh,BYTE PTR [ecx-0x6931a2a3]
  40b6a1:	(bad)
  40b6a4:	stos   DWORD PTR es:[edi],eax
  40b6a5:	in     al,dx
  40b6a6:	sub    cl,ch
  40b6a8:	sub    DWORD PTR [edx+0x3c],edi
  40b6ab:	mov    ebp,DWORD PTR [edi]
  40b6ad:	adc    DWORD PTR [esi+0x24e785e1],0x48c5ffaa
  40b6b7:	fdivr  st,st(1)
  40b6b9:	xor    dl,cl
  40b6bb:	leave  
  40b6bc:	test   eax,0xfb17a271
  40b6c1:	hlt    
  40b6c2:	daa    
  40b6c3:	mov    eax,ds:0xacc5df58
  40b6c8:	ds aaa 
  40b6ca:	repnz sub al,0x4
  40b6cd:	(bad)  
  40b6ce:	jecxz  0x40b73e
  40b6d0:	or     BYTE PTR [eax+0x66a7ea97],0x7b
  40b6d7:	pusha  
  40b6d8:	hlt    
  40b6d9:	jl     0x40b6c5
  40b6db:	add    al,BYTE PTR [esi]
  40b6dd:	out    0xf5,eax
  40b6df:	adc    BYTE PTR [ebx-0x4f5402e0],dl
  40b6e5:	inc    esi
  40b6e6:	fstp   DWORD PTR [edi+0x7265c1d]
  40b6ec:	rcr    eax,1
  40b6ee:	clc    
  40b6ef:	mov    cl,0x5e
  40b6f1:	sar    BYTE PTR [esi-0x1d],0x0
  40b6f5:	dec    edx
  40b6f6:	int3   
  40b6f7:	xchg   ecx,eax
  40b6f8:	add    BYTE PTR [ebx],bl
  40b6fa:	inc    ebp
  40b6fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b6fc:	lahf   
  40b6fd:	mov    al,dl
  40b6ff:	ret    
  40b700:	mov    eax,ds:0x3bdffa67
  40b705:	xchg   BYTE PTR [edx-0x5e045207],dh
  40b70b:	inc    esp
  40b70c:	cmp    ecx,DWORD PTR [ebp+0x72]
  40b70f:	inc    DWORD PTR [ebx+ecx*1]
  40b712:	aad    0xd3
  40b714:	es xchg ebp,eax
  40b716:	je     0x40b728
  40b718:	sti    
  40b719:	lods   eax,DWORD PTR ds:[esi]
  40b71a:	jae    0x40b714
  40b71c:	or     BYTE PTR [esi+eax*2+0x5b4c24e8],bh
  40b723:	pop    ebp
  40b724:	xor    BYTE PTR gs:[ebx],0x4d
  40b728:	and    eax,0xbbe3846c
  40b72d:	ss dec edx
  40b72f:	mov    eax,ds:0x897323e
  40b734:	pop    ebx
  40b735:	clc    
  40b736:	cli    
  40b737:	cli    
  40b738:	scas   eax,DWORD PTR es:[edi]
  40b739:	dec    edx
  40b73a:	xor    ch,ah
  40b73c:	out    0x84,al
  40b73e:	pop    esi
  40b73f:	xor    al,0xa
  40b741:	pop    ebp
  40b742:	xchg   ebp,eax
  40b743:	pop    edi
  40b744:	ficomp DWORD PTR [eax+0x25]
  40b747:	rep outs dx,BYTE PTR ds:[esi]
  40b749:	dec    esp
  40b74a:	adc    bh,BYTE PTR [esi+ebx*8+0x2d64b719]
  40b751:	mov    al,0x72
  40b753:	aad    0x61
  40b755:	inc    esp
  40b757:	dec    eax
  40b758:	push   ebp
  40b759:	out    dx,al
  40b75a:	mov    esp,DWORD PTR [eax+0xf5f3c85]
  40b760:	test   BYTE PTR [ebx],ch
  40b762:	mov    ch,0x9d
  40b764:	(bad)  [ebx+0x7ca6cf83]
  40b76a:	je     0x40b740
  40b76c:	fsub   QWORD PTR [esi+0x7d]
  40b76f:	aas    
  40b770:	push   edx
  40b771:	out    0x83,al
  40b773:	std    
  40b774:	xor    BYTE PTR [ebp+0x350b2215],dh
  40b77a:	jnp    0x40b713
  40b77c:	lock adc al,0x5
  40b77f:	out    0x88,eax
  40b781:	mov    ds:0x98d89718,al
  40b786:	hlt    
  40b787:	mov    ch,BYTE PTR [esi-0x2ec263ca]
  40b78d:	rcr    BYTE PTR [ecx+ecx*2],0x8d
  40b791:	sbb    al,0x5a
  40b793:	mov    ebx,0x47da45af
  40b798:	cmc    
  40b799:	xchg   esi,eax
  40b79a:	dec    ebx
  40b79b:	fucomp st(7)
  40b79d:	xlat   BYTE PTR ds:[ebx]
  40b79e:	adc    BYTE PTR [ecx-0xd],bh
  40b7a1:	mov    al,0x1
  40b7a3:	jmp    0x40eb:0x25f8e8a1
  40b7aa:	mov    dh,0x9c
  40b7ac:	fwait
  40b7ad:	mov    dl,0x2c
  40b7af:	mov    al,0x69
  40b7b1:	int3   
  40b7b2:	mov    ds:0xec0d0004,eax
  40b7b7:	cmp    eax,0x8cace5d0
  40b7bc:	loopne 0x40b83a
  40b7be:	pushf  
  40b7bf:	xchg   edx,eax
  40b7c0:	mov    ah,0x79
  40b7c2:	push   edx
  40b7c3:	sub    edi,DWORD PTR [ecx+0x5c]
  40b7c6:	enter  0x3879,0x8d
  40b7ca:	loopne 0x40b79e
  40b7cc:	xor    DWORD PTR [edi-0x4],ecx
  40b7cf:	xchg   edi,eax
  40b7d0:	aad    0xa3
  40b7d2:	sbb    eax,0x1a54ace
  40b7d7:	inc    ebp
  40b7d8:	lahf   
  40b7d9:	mul    DWORD PTR [ebp-0x2c]
  40b7dc:	push   edx
  40b7dd:	int3   
  40b7de:	jb     0x40b814
  40b7e0:	mov    al,0x36
  40b7e2:	inc    edi
  40b7e3:	loopne 0x40b780
  40b7e5:	pop    esi
  40b7e6:	or     ax,0x1740
  40b7ea:	arpl   WORD PTR [ebp+edx*2-0x689ff37e],dx
  40b7f1:	aad    0x3c
  40b7f3:	push   ds
  40b7f4:	push   ds
  40b7f5:	lock dec edx
  40b7f7:	pcmpeqw mm5,mm3
  40b7fa:	fcomp  QWORD PTR [edi+edx*1+0x6ebe704c]
  40b801:	repnz cli 
  40b803:	shr    ebx,0x66
  40b806:	cmp    dh,BYTE PTR [edx-0x6095db61]
  40b80c:	xor    al,0x9a
  40b80e:	jae    0x40b790
  40b810:	xchg   edx,eax
  40b811:	jle    0x40b7b5
  40b813:	stc    
  40b814:	inc    ebx
  40b815:	mov    fs,ebp
  40b817:	ins    DWORD PTR es:[edi],dx
  40b818:	scas   eax,DWORD PTR es:[edi]
  40b819:	and    ah,BYTE PTR [esi]
  40b81b:	jge    0x40b7c5
  40b81d:	nop
  40b81e:	sbb    al,0xca
  40b820:	mov    ?,WORD PTR [ebp-0x1e631536]
  40b826:	add    al,0xbc
  40b828:	inc    ebp
  40b829:	mov    BYTE PTR [ebp+esi*2+0x326f2450],ch
  40b830:	loope  0x40b881
  40b832:	xchg   edx,eax
  40b833:	or     eax,0xf98b9778
  40b838:	mov    DWORD PTR [ebp+0x29],ecx
  40b83b:	lock bound ebx,QWORD PTR fs:[ebp+0x2f]
  40b840:	(bad)  
  40b842:	int    0xef
  40b844:	jb     0x40b84e
  40b846:	jae    0x40b861
  40b848:	(bad)  
  40b849:	(bad)  
  40b84a:	div    BYTE PTR [eax]
  40b84c:	adc    BYTE PTR [ecx+0x55e2c443],dl
  40b852:	mov    ebp,0xe6da7188
  40b857:	mov    ecx,0x161733f7
  40b85c:	cmp    ch,BYTE PTR [eax+0x153548e5]
  40b862:	adc    eax,0x9d1d6470
  40b867:	repz or al,0x0
  40b86a:	sbb    BYTE PTR [esp+edi*8],bl
  40b86d:	push   cs
  40b86e:	icebp  
  40b86f:	pusha  
  40b870:	xlat   BYTE PTR ds:[ebx]
  40b871:	es hlt 
  40b873:	dec    edi
  40b874:	call   FWORD PTR [eax+0x7efecdd4]
  40b87a:	test   BYTE PTR [eax],al
  40b87c:	arpl   di,sp
  40b87e:	loop   0x40b849
  40b880:	aas    
  40b881:	sub    al,0x90
  40b883:	pop    ss
  40b884:	xchg   ebp,eax
  40b885:	add    ebx,DWORD PTR [ecx+0x2e]
  40b888:	repnz cwde 
  40b88a:	or     DWORD PTR [esi+edx*2],eax
  40b88d:	sub    al,0x7
  40b88f:	pop    es
  40b890:	jno    0x40b81d
  40b892:	jo     0x40b86a
  40b894:	sbb    eax,0xa0cb923d
  40b899:	in     eax,0xfa
  40b89b:	pop    edx
  40b89c:	sbb    ecx,DWORD PTR [ecx+ecx*8-0x2e7baf41]
  40b8a3:	xchg   edx,eax
  40b8a4:	sbb    eax,0xecfb5cc4
  40b8a9:	ret    
  40b8aa:	push   ecx
  40b8ab:	into   
  40b8ac:	ret    0xc230
  40b8af:	sbb    BYTE PTR [edx+0x7a],dh
  40b8b2:	rol    DWORD PTR [ebx],cl
  40b8b4:	repz sub BYTE PTR [ebx+0x5afbf014],cl
  40b8bb:	or     dl,BYTE PTR [eax]
  40b8bd:	xchg   ebp,eax
  40b8be:	rcl    ah,cl
  40b8c0:	or     edx,DWORD PTR [ecx-0x7c]
  40b8c3:	pop    esp
  40b8c4:	iret   
  40b8c5:	sar    BYTE PTR [edx+0x26fc2fbe],cl
  40b8cb:	sti    
  40b8cc:	push   ds
  40b8cd:	mov    ecx,0xfbcb26c5
  40b8d2:	inc    ebx
  40b8d3:	out    dx,eax
  40b8d4:	mov    bl,0x6
  40b8d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b8d7:	and    esp,edx
  40b8d9:	add    eax,0x5efcc599
  40b8de:	inc    BYTE PTR [eax]
  40b8e0:	push   es
  40b8e1:	iret   
  40b8e2:	mov    dl,0xd6
  40b8e4:	xchg   edi,eax
  40b8e5:	mov    ebp,0x7c51b9e8
  40b8ea:	aad    0x7c
  40b8ec:	inc    ebp
  40b8ed:	jno    0x40b887
  40b8ef:	xor    BYTE PTR [esi+0x4e2c1b47],bl
  40b8f5:	add    BYTE PTR [ecx+0x381163ce],bh
  40b8fb:	cmp    DWORD PTR [esi-0x35f85638],edi
  40b901:	es stos BYTE PTR es:[edi],al
  40b903:	push   cs
  40b904:	inc    ebp
  40b905:	loopne 0x40b8e4
  40b907:	mov    ebp,0x96bae412
  40b90c:	mov    edi,eax
  40b90e:	(bad)  
  40b90f:	inc    esp
  40b910:	idiv   DWORD PTR [edx-0x549c81bf]
  40b916:	xor    eax,0x9c912403
  40b91b:	mov    al,ds:0x93c40f7f
  40b920:	dec    esi
  40b921:	fucom  st(0)
  40b923:	push   0x767aeb53
  40b928:	call   0x8ca86828
  40b92d:	js     0x40b998
  40b92f:	and    ah,bh
  40b931:	js     0x40b8ec
  40b933:	sar    BYTE PTR [eax+0x67],1
  40b936:	mov    eax,ds:0x53a25cab
  40b93b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b93c:	sbb    eax,0x9c338294
  40b941:	mov    ecx,0xe85858c1
  40b946:	jns    0x40b928
  40b948:	aam    0xe2
  40b94a:	in     eax,0x35
  40b94c:	push   0xffffffec
  40b94e:	(bad)  
  40b94f:	mov    al,0x4b
  40b951:	sub    DWORD PTR [ecx],0x5f1e9ba9
  40b957:	dec    eax
  40b958:	into   
  40b959:	mov    BYTE PTR [edx+0x7],cl
  40b95c:	sub    DWORD PTR [ecx+0x43c024f0],ebx
  40b962:	sbb    bh,BYTE PTR [esp+eiz*4+0x5f49486b]
  40b969:	push   ss
  40b96a:	add    BYTE PTR [ebp-0x78],ch
  40b96d:	dec    ecx
  40b96e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b96f:	pop    ss
  40b970:	aas    
  40b971:	inc    edx
  40b972:	adc    ecx,DWORD PTR [ecx+eax*8-0x7a]
  40b976:	xchg   esp,eax
  40b977:	pusha  
  40b978:	sbb    eax,0xf7957d8d
  40b97d:	inc    eax
  40b97e:	das    
  40b97f:	xor    BYTE PTR [esi+esi*8+0xec97d4e],bl
  40b986:	jge    0x40b918
  40b988:	and    DWORD PTR [edx],ebp
  40b98a:	or     edx,esp
  40b98c:	mov    dh,0x62
  40b98e:	ror    BYTE PTR [edx-0x7a],1
  40b991:	pop    ss
  40b992:	mov    ch,0xc4
  40b994:	inc    ebx
  40b995:	test   eax,0x3b615482
  40b99a:	pusha  
  40b99b:	jle    0x40b9ce
  40b99d:	cld    
  40b99e:	or     eax,0x45400850
  40b9a3:	(bad)  
  40b9a4:	not    DWORD PTR [ebp+esi*1-0x72189802]
  40b9ab:	inc    esi
  40b9ac:	inc    esp
  40b9ad:	jb     0x40b9ff
  40b9af:	loopne 0x40b9c5
  40b9b1:	xor    edx,eax
  40b9b3:	out    dx,eax
  40b9b4:	outs   dx,BYTE PTR ds:[esi]
  40b9b5:	hlt    
  40b9b6:	imul   ebx,edi,0x5f
  40b9b9:	mov    al,0xd5
  40b9bb:	adc    BYTE PTR [ebx-0x6216d5c6],al
  40b9c1:	nop    ebx
  40b9c4:	stos   DWORD PTR es:[edi],eax
  40b9c5:	add    al,0xf4
  40b9c7:	test   BYTE PTR [eax],dl
  40b9c9:	dec    ebx
  40b9ca:	sbb    DWORD PTR [ebp+0x29],ebx
  40b9cd:	pop    esi
  40b9ce:	aam    0x82
  40b9d0:	jnp    0x40ba1f
  40b9d2:	pop    eax
  40b9d3:	or     al,0xa1
  40b9d5:	xor    eax,0x1deb941
  40b9da:	sbb    al,0x18
  40b9dc:	call   0xff95:0x47577c0e
  40b9e3:	into   
  40b9e4:	cmp    BYTE PTR [edx],ah
  40b9e6:	dec    ecx
  40b9e7:	inc    edi
  40b9e8:	rdtsc  
  40b9ea:	loopne 0x40ba14
  40b9ec:	test   eax,0x20256275
  40b9f1:	dec    ebp
  40b9f2:	fwait
  40b9f3:	add    DWORD PTR ds:0xfc2c6eb5,esi
  40b9f9:	into   
  40b9fa:	push   0xdbcd74bc
  40b9ff:	mov    bl,0xa9
  40ba01:	pop    esi
  40ba02:	adc    dl,bl
  40ba04:	push   esi
  40ba05:	pop    DWORD PTR [eax]
  40ba07:	test   BYTE PTR [esi],0x90
  40ba0a:	aas    
  40ba0b:	mov    eax,ds:0x7cde5a63
  40ba10:	mov    ss,WORD PTR [ebp-0x26]
  40ba13:	(bad)  
  40ba14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba15:	sub    cl,dh
  40ba17:	ret    0xcaf7
  40ba1a:	mov    eax,ds:0xc77ebf88
  40ba1f:	sub    BYTE PTR [edx+0x39],bh
  40ba22:	test   al,0x5c
  40ba24:	cmp    dl,BYTE PTR [ebx+edx*4]
  40ba27:	pop    eax
  40ba28:	sub    ch,ch
  40ba2a:	push   ss
  40ba2b:	and    BYTE PTR [esi-0x65c90413],0x61
  40ba32:	out    dx,al
  40ba33:	pop    ss
  40ba34:	jae    0x40b9fa
  40ba36:	xor    al,BYTE PTR [eax-0x6678dde0]
  40ba3c:	fist   WORD PTR [ebx-0x21]
  40ba3f:	imul   esp,DWORD PTR [edx-0x2bf99d18],0x3e
  40ba46:	in     al,dx
  40ba47:	inc    eax
  40ba48:	cmp    DWORD PTR [eax+0x6d],ebp
  40ba4b:	sahf   
  40ba4c:	test   al,0xed
  40ba4e:	out    0x13,al
  40ba50:	mov    bh,0x54
  40ba52:	pop    ds
  40ba53:	lock mov esi,0x492f2622
  40ba59:	sti    
  40ba5a:	cmp    al,0xc
  40ba5c:	sub    eax,0x94a706b2
  40ba61:	sub    al,0x57
  40ba63:	dec    edx
  40ba64:	mov    DWORD PTR [ebp-0x34],esp
  40ba67:	adc    edx,ebx
  40ba69:	pop    es
  40ba6a:	jp     0x40ba39
  40ba6c:	sub    BYTE PTR [edx+0x20],0xc6
  40ba70:	cdq    
  40ba71:	sub    DWORD PTR [eax+0x3a],edi
  40ba74:	aam    0x2b
  40ba76:	test   eax,0xacadba6a
  40ba7b:	enter  0x20b7,0x45
  40ba7f:	imul   edi,DWORD PTR [esi-0x20],0xffffffe2
  40ba83:	mov    DWORD PTR [edx+0x4d11ced6],edi
  40ba89:	loop   0x40ba12
  40ba8b:	xor    BYTE PTR [edx-0x34329e9c],0xf4
  40ba92:	inc    ebx
  40ba93:	bound  edx,QWORD PTR [esi]
  40ba95:	vcvtpd2dq xmm3,YMMWORD PTR fs:[edi]
  40ba9a:	dec    edx
  40ba9b:	(bad)
  40ba9e:	imul   bh
  40baa0:	xlat   BYTE PTR ds:[ebx]
  40baa1:	dec    ebp
  40baa2:	xor    DWORD PTR [ecx-0x62],edx
  40baa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40baa6:	pushf  
  40baa7:	shr    ecx,0x2d
  40baaa:	cmp    DWORD PTR [ecx],ebx
  40baac:	outs   dx,BYTE PTR ds:[esi]
  40baad:	ins    DWORD PTR es:[edi],dx
  40baae:	stc    
  40baaf:	push   0x54
  40bab1:	inc    ecx
  40bab2:	in     al,dx
  40bab3:	out    0x71,eax
  40bab5:	int3   
  40bab6:	out    dx,eax
  40bab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bab8:	leave  
  40bab9:	mov    al,ds:0x1994523c
  40babe:	mov    bl,0x9f
  40bac0:	(bad)  
  40bac2:	mov    eax,ds:0x1435ee36
  40bac7:	call   0xc908:0x1e498998
  40bace:	shl    esi,cl
  40bad0:	cmc    
  40bad1:	nop
  40bad2:	sbb    dh,bh
  40bad4:	and    dh,ah
  40bad6:	pop    eax
  40bad7:	fs jb  0x40bb27
  40bada:	dec    ecx
  40badb:	lods   al,BYTE PTR ds:[esi]
  40badc:	cmp    BYTE PTR [ebp+eiz*8+0x463e8d75],ch
  40bae3:	xchg   DWORD PTR [edx+0x4],ebp
  40bae6:	dec    ecx
  40bae7:	cwde   
  40bae8:	out    0x5e,al
  40baea:	sbb    DWORD PTR [esi-0x2920e2a3],esi
  40baf0:	jns    0x40bb5b
  40baf2:	lds    ecx,FWORD PTR [eax+0x1f]
  40baf5:	mov    ah,0x44
  40baf7:	iret   
  40baf8:	and    BYTE PTR [edi+0x6debe9d0],ch
  40bafe:	xor    ah,bh
  40bb00:	test   DWORD PTR [edx],esp
  40bb02:	push   ebp
  40bb03:	pop    es
  40bb04:	leave  
  40bb05:	xor    edi,ebx
  40bb07:	(bad)  
  40bb08:	inc    esi
  40bb09:	or     DWORD PTR [eax-0x41],0x67
  40bb0d:	test   al,0xde
  40bb0f:	jne    0x40bb4f
  40bb11:	sahf   
  40bb12:	sub    eax,DWORD PTR [edi]
  40bb14:	stc    
  40bb15:	add    ch,BYTE PTR [ebx-0x5d0f727]
  40bb1b:	mov    dh,0xd4
  40bb1d:	lods   eax,DWORD PTR ds:[esi]
  40bb1e:	out    0xf8,eax
  40bb20:	mov    dl,BYTE PTR [edx+edx*8-0x44]
  40bb24:	jp     0x40bac6
  40bb26:	cmp    eax,0xb9908dc
  40bb2b:	mov    eax,0xc54a1643
  40bb30:	and    eax,0x77840560
  40bb35:	mov    bh,BYTE PTR [edi-0x36]
  40bb38:	icebp  
  40bb39:	mov    esp,?
  40bb3b:	punpckhwd mm5,QWORD PTR [edi+0x6feda880]
  40bb42:	test   eax,0x102e9349
  40bb47:	call   0x21dd:0x7023615d
  40bb4e:	es pop esi
  40bb50:	ficom  WORD PTR [edx-0x4d]
  40bb53:	(bad)  [esi]
  40bb55:	sub    eax,0x42ba0b5c
  40bb5a:	ja     0x40bbbd
  40bb5c:	or     ch,al
  40bb5e:	aaa    
  40bb5f:	cmp    DWORD PTR [ecx+0x46],edi
  40bb62:	push   esp
  40bb63:	int3   
  40bb64:	nop
  40bb65:	fldenv [edx*1-0x49f64f9e]
  40bb6c:	es dec edx
  40bb6e:	dec    ecx
  40bb6f:	aam    0xbb
  40bb71:	int    0x99
  40bb73:	mov    WORD PTR [ebp+0x434e50fd],cs
  40bb79:	sar    ecx,0x8d
  40bb7c:	adc    ah,bh
  40bb7e:	icebp  
  40bb7f:	cmp    BYTE PTR [edi+0x2958fa09],ah
  40bb85:	pop    esi
  40bb86:	mov    dh,0xcd
  40bb88:	fld    TBYTE PTR [ebp+0x6c]
  40bb8b:	pop    es
  40bb8c:	std    
  40bb8d:	pop    es
  40bb8e:	inc    ecx
  40bb8f:	jbe    0x40bbee
  40bb91:	imul   ebp,DWORD PTR [ecx-0x53fa699e],0xe779c3da
  40bb9b:	jmp    0x99ab:0xcffe330b
  40bba2:	retf   
  40bba3:	(bad)  
  40bba4:	cmp    al,0x41
  40bba6:	loope  0x40bb90
  40bba8:	or     eax,0x92bc1eeb
  40bbad:	jmp    0x9b079cfd
  40bbb2:	inc    ebp
  40bbb3:	push   ds
  40bbb4:	(bad)  
  40bbb5:	jae    0x40bbe4
  40bbb7:	pop    esi
  40bbb8:	xor    eax,DWORD PTR [esi]
  40bbba:	or     DWORD PTR [ebx-0x1642add6],ebp
  40bbc0:	xchg   edi,eax
  40bbc1:	sahf   
  40bbc2:	addr16 inc eax
  40bbc4:	mov    ch,0xb6
  40bbc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bbc7:	call   0x5fc102e2
  40bbcc:	sbb    DWORD PTR [edx-0x67],ebp
  40bbcf:	or     BYTE PTR [ebx+0x2f50f841],0x19
  40bbd6:	sub    al,0xaf
  40bbd8:	imul   esp,ebp,0xffffffb6
  40bbdb:	(bad)  
  40bbdc:	cli    
  40bbdd:	inc    ebp
  40bbde:	add    eax,0xc022d799
  40bbe3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbe4:	popf   
  40bbe5:	ret    
  40bbe6:	ins    BYTE PTR es:[edi],dx
  40bbe7:	rcl    BYTE PTR [edi],cl
  40bbe9:	std    
  40bbea:	mov    ah,0x53
  40bbec:	pop    esi
  40bbed:	jae    0x40bbd5
  40bbef:	je     0x40bba3
  40bbf1:	jns    0x40bc0c
  40bbf3:	sahf   
  40bbf4:	adc    BYTE PTR [esi-0x1c],0xd8
  40bbf8:	mov    DWORD PTR [edx],esp
  40bbfa:	pusha  
  40bbfb:	or     edi,DWORD PTR [ebp+esi*2-0x1c2534e7]
  40bc02:	cdq    
  40bc03:	stos   BYTE PTR es:[edi],al
  40bc04:	std    
  40bc05:	ror    DWORD PTR [ebp+0x6f],1
  40bc08:	mov    al,ds:0x28d78e2
  40bc0d:	push   ebx
  40bc0e:	jnp    0x40bb92
  40bc10:	(bad)  
  40bc11:	pop    ebp
  40bc12:	lods   al,BYTE PTR ds:[esi]
  40bc13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bc14:	and    edx,ebp
  40bc16:	fbld   TBYTE PTR [eax+0x33944919]
  40bc1c:	dec    esp
  40bc1d:	or     al,BYTE PTR [edi+0x4f]
  40bc20:	inc    esi
  40bc21:	cmp    al,0xb4
  40bc23:	push   es
  40bc24:	in     eax,dx
  40bc25:	fisttp WORD PTR [ebx+0x5f984832]
  40bc2b:	aaa    
  40bc2c:	dec    eax
  40bc2d:	and    al,0x37
  40bc2f:	xchg   BYTE PTR [ebp+0x35],al
  40bc32:	scas   al,BYTE PTR es:[edi]
  40bc33:	std    
  40bc34:	and    esi,esp
  40bc36:	xchg   esp,eax
  40bc37:	sti    
  40bc38:	ror    ah,cl
  40bc3a:	mov    dh,0xfb
  40bc3c:	jns    0x40bc5b
  40bc3e:	in     eax,dx
  40bc3f:	adc    ebx,eax
  40bc41:	cmp    dh,BYTE PTR ds:0xc3625746
  40bc47:	jle    0x40bc2d
  40bc49:	sahf   
  40bc4a:	addr16 xchg ebp,eax
  40bc4c:	xchg   esi,edi
  40bc4e:	int3   
  40bc4f:	imul   esp,DWORD PTR [edi+ebx*2+0x7366ec0],0x211a2172
  40bc5a:	add    eax,0xfc317c6b
  40bc5f:	pusha  
  40bc60:	xor    al,0xf4
  40bc62:	add    eax,0x1ba93194
  40bc67:	inc    ebp
  40bc68:	mov    edx,esi
  40bc6a:	retf   0x12cd
  40bc6d:	sbb    eax,0x775829e8
  40bc72:	and    bh,ah
  40bc74:	cmp    BYTE PTR [esi],dl
  40bc76:	shl    BYTE PTR [edi-0xb6ef28],1
  40bc7c:	mov    cs,WORD PTR [ecx-0x2c4fcc43]
  40bc82:	cmp    al,0x2b
  40bc84:	fstp   TBYTE PTR [esi+0x7458fff8]
  40bc8a:	or     DWORD PTR [ebx+0x48da533e],0xffffffe0
  40bc91:	adc    eax,0x48ec8645
  40bc96:	cs push 0x6f
  40bc99:	xchg   esi,eax
  40bc9a:	jl     0x40bc8b
  40bc9c:	push   edx
  40bc9d:	(bad)  
  40bc9e:	jmp    0x40bc3a
  40bca0:	cdq    
  40bca1:	jns    0x40bd06
  40bca3:	add    dh,BYTE PTR [eax]
  40bca5:	ds pop ebx
  40bca7:	push   es
  40bca8:	sub    bh,BYTE PTR [esi+0x4bd0311]
  40bcae:	mov    ebx,0x214906a3
  40bcb3:	push   ds
  40bcb4:	out    0x7a,eax
  40bcb6:	fmul   QWORD PTR [esi+ebx*8+0x50]
  40bcba:	popa   
  40bcbb:	outs   dx,BYTE PTR ds:[esi]
  40bcbc:	xor    ah,BYTE PTR [edx-0x701d17b2]
  40bcc2:	pop    ebp
  40bcc3:	in     al,dx
  40bcc4:	dec    ebp
  40bcc5:	pop    edx
  40bcc6:	cmp    esi,ecx
  40bcc8:	lods   eax,DWORD PTR ds:[esi]
  40bcc9:	or     DWORD PTR [esi+0x31],edx
  40bccc:	mov    eax,ds:0xca21884a
  40bcd1:	xor    BYTE PTR [ebx-0x6b1454f3],0xf3
  40bcd8:	rcl    DWORD PTR [edx],cl
  40bcda:	pop    es
  40bcdb:	adc    eax,0xcf2665f
  40bce0:	icebp  
  40bce1:	or     al,0x45
  40bce3:	xchg   edi,eax
  40bce4:	aam    0x67
  40bce6:	mov    bh,0xfa
  40bce8:	push   esi
  40bce9:	cdq    
  40bcea:	sahf   
  40bceb:	(bad)  
  40bcec:	sbb    ecx,esi
  40bcee:	xor    BYTE PTR [eax-0x49e17a8a],bl
  40bcf4:	loopne 0x40bcf6
  40bcf6:	sbb    DWORD PTR [edx-0x25],esi
  40bcf9:	popf   
  40bcfa:	jb     0x612c0406
  40bd00:	pusha  
  40bd01:	aam    0x8f
  40bd03:	stc    
  40bd04:	data16 jo 0x40bc88
  40bd07:	mov    dl,BYTE PTR [ebx]
  40bd09:	sub    al,0x60
  40bd0b:	dec    esp
  40bd0c:	and    BYTE PTR [edi+eax*1+0x7596ff48],ch
  40bd13:	and    dl,dh
  40bd15:	int3   
  40bd16:	in     al,dx
  40bd17:	sar    BYTE PTR [esi],1
  40bd19:	xchg   ch,dl
  40bd1b:	popa   
  40bd1c:	div    DWORD PTR [ecx+0x7a27472f]
  40bd22:	repz mov al,0xa7
  40bd25:	jnp    0x40bd21
  40bd27:	cmp    eax,DWORD PTR ds:0x9d470729
  40bd2d:	(bad)  
  40bd2e:	pushw  ds
  40bd30:	hlt    
  40bd31:	adc    dl,BYTE PTR ds:0x24cfe605
  40bd37:	sub    DWORD PTR [edi+0x3817f451],esi
  40bd3d:	scas   eax,DWORD PTR es:[edi]
  40bd3e:	rcr    ebx,0x1f
  40bd41:	hlt    
  40bd42:	dec    ecx
  40bd43:	jns    0x40bd98
  40bd45:	jo     0x40bd11
  40bd47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd48:	pop    ecx
  40bd49:	push   edi
  40bd4a:	into   
  40bd4b:	or     ch,BYTE PTR [ebx-0x66]
  40bd4e:	pop    ebp
  40bd4f:	cld    
  40bd50:	shl    DWORD PTR [ebx+0x6ce5548e],0x34
  40bd57:	push   cs
  40bd58:	push   ds
  40bd59:	mov    ebp,0xaa76d11d
  40bd5e:	adc    eax,0x9925d3fc
  40bd63:	jmp    0x40bce6
  40bd65:	xchg   edx,eax
  40bd66:	inc    esi
  40bd67:	mov    eax,0x21e2cf81
  40bd6c:	and    bl,dl
  40bd6e:	dec    esp
  40bd6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bd70:	cmp    DWORD PTR cs:[ebp-0x63],ebp
  40bd74:	mov    esp,0x967ddfa1
  40bd79:	or     al,0xa0
  40bd7b:	adc    eax,0x311caf7b
  40bd80:	les    ebx,FWORD PTR [edi]
  40bd82:	retf   
  40bd83:	sub    al,0x83
  40bd85:	xchg   DWORD PTR [eax-0x5688b703],ebp
  40bd8b:	sbb    al,0x1b
  40bd8d:	or     edi,DWORD PTR [edi+0x32]
  40bd90:	inc    edx
  40bd91:	cmp    esp,DWORD PTR [edi+0x2252fa39]
  40bd97:	push   cs
  40bd98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd99:	xor    DWORD PTR [edi],eax
  40bd9b:	jle    0x40bdb5
  40bd9d:	inc    esi
  40bd9e:	scas   al,BYTE PTR es:[edi]
  40bd9f:	loope  0x40be19
  40bda1:	popa   
  40bda2:	push   DWORD PTR [esi-0x8cafff9]
  40bda8:	jae    0x40bd3d
  40bdaa:	pop    esi
  40bdab:	mov    ch,0x4e
  40bdad:	daa    
  40bdae:	(bad)
  40bdb1:	lods   al,BYTE PTR ds:[esi]
  40bdb2:	sbb    bl,BYTE PTR [ecx-0x3a]
  40bdb5:	inc    edi
  40bdb6:	sub    bl,BYTE PTR [ecx+0x19]
  40bdb9:	inc    esi
  40bdba:	std    
  40bdbb:	mov    al,ds:0x9710c5f1
  40bdc0:	test   al,0xe7
  40bdc2:	xchg   ebp,eax
  40bdc3:	dec    edi
  40bdc4:	push   esi
  40bdc5:	jno    0x40bdf8
  40bdc7:	pop    edi
  40bdc8:	aas    
  40bdc9:	or     BYTE PTR [ebp-0x49],0xdf
  40bdcd:	mov    ah,0x77
  40bdcf:	add    DWORD PTR [ecx-0x4b],edi
  40bdd2:	arpl   WORD PTR [esp+eiz*8],si
  40bdd5:	in     al,0x29
  40bdd7:	sbb    esi,DWORD PTR [edx-0x2]
  40bdda:	xchg   BYTE PTR [esi+0xd],al
  40bddd:	pop    esi
  40bdde:	(bad)  
  40bddf:	(bad)  
  40bde0:	and    al,0xf4
  40bde2:	xchg   esi,eax
  40bde3:	shl    DWORD PTR [eax+0x4f],cl
  40bde6:	xchg   esp,eax
  40bde7:	in     al,dx
  40bde8:	in     al,dx
  40bde9:	inc    esi
  40bdea:	cmp    esi,ebx
  40bdec:	addr16 int 0xe4
  40bdef:	repz mov cl,BYTE PTR [esi-0x49]
  40bdf3:	ss aas 
  40bdf5:	sub    ch,al
  40bdf7:	sub    BYTE PTR [ebx-0xc],cl
  40bdfa:	or     bl,dh
  40bdfc:	fidiv  DWORD PTR [edx]
  40bdfe:	(bad)  
  40bdff:	out    dx,eax
  40be00:	(bad)  
  40be01:	ins    BYTE PTR es:[edi],dx
  40be02:	push   edx
  40be03:	jmp    0xe8bc1a30
  40be08:	xor    eax,0x8ac3ba04
  40be0d:	repz push ebx
  40be0f:	pop    edi
  40be10:	test   eax,0x792f3c28
  40be15:	pushf  
  40be16:	enter  0x4982,0xc4
  40be1a:	bound  esp,QWORD PTR [ecx]
  40be1c:	and    ecx,DWORD PTR ds:0x5995c792
  40be22:	rol    BYTE PTR [ecx+ecx*8+0x3b],1
  40be26:	leave  
  40be27:	or     edx,DWORD PTR [edx]
  40be29:	int3   
  40be2a:	mov    eax,ss:0xf29208de
  40be30:	push   es
  40be31:	cld    
  40be32:	mov    edx,0xdcc7ed20
  40be37:	jl     0x40bea6
  40be39:	and    cl,bl
  40be3b:	daa    
  40be3c:	mov    edx,edx
  40be3e:	sub    al,BYTE PTR [eax+0x36c49cfd]
  40be44:	dec    esi
  40be45:	pop    ebp
  40be46:	std    
  40be47:	mov    al,BYTE PTR [edx-0x52dea00e]
  40be4d:	stos   BYTE PTR es:[edi],al
  40be4e:	xor    al,0xe4
  40be50:	cmc    
  40be51:	inc    ebp
  40be52:	adc    eax,0xf3008649
  40be57:	js     0x40be30
  40be59:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be5a:	(bad)  
  40be5c:	or     ebp,DWORD PTR [edi+ebp*1-0x738e527e]
  40be63:	std    
  40be64:	sub    al,0x3d
  40be66:	jbe    0x40be8a
  40be68:	retf   
  40be69:	leave  
  40be6a:	xchg   edi,eax
  40be6b:	aaa    
  40be6c:	or     eax,esi
  40be6e:	mov    ch,0xf5
  40be70:	sub    eax,DWORD PTR [esi-0x28]
  40be73:	jg     0x40bee3
  40be75:	or     DWORD PTR [ebx+0x78],0x75
  40be79:	xchg   edx,eax
  40be7a:	fnstcw WORD PTR [edx-0x61]
  40be7d:	test   BYTE PTR [edx],dh
  40be7f:	arpl   WORD PTR [ecx-0x18c327bd],ax
  40be85:	fisubr WORD PTR [esi+0xb884282]
  40be8b:	xchg   DWORD PTR [edx-0x78458db6],ebx
  40be91:	pop    esp
  40be92:	scas   al,BYTE PTR es:[edi]
  40be93:	jae    0x40befe
  40be95:	and    BYTE PTR [ebx-0x11],dl
  40be98:	add    BYTE PTR [edi],cl
  40be9a:	scas   al,BYTE PTR es:[edi]
  40be9b:	mov    ch,bl
  40be9d:	or     eax,0x5f957f12
  40bea2:	jo     0x40befd
  40bea4:	aaa    
  40bea5:	(bad)
  40bea9:	lods   eax,DWORD PTR ds:[esi]
  40beaa:	mov    DWORD PTR [esi],edi
  40beac:	sbb    BYTE PTR [edx-0x2cb55d40],cl
  40beb2:	mov    ds:0x1c7d654a,eax
  40beb7:	add    BYTE PTR [ecx+0x676e6037],al
  40bebd:	pop    es
  40bebe:	pop    edi
  40bebf:	inc    esp
  40bec0:	xor    eax,0xc1d1cf1
  40bec5:	add    ebp,ecx
  40bec7:	repnz int3 
  40bec9:	sub    al,0x1d
  40becb:	jb     0x40be75
  40becd:	push   cs
  40bece:	sti    
  40becf:	mov    dl,0x8
  40bed1:	out    0x11,eax
  40bed3:	xchg   ebx,eax
  40bed4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bed5:	jp     0x40bf2b
  40bed7:	call   0x4d4e:0xc92d2d0e
  40bede:	add    DWORD PTR [edi+eiz*8+0xfbf0aaa],esi
  40bee5:	pop    edi
  40bee6:	retf   
  40bee7:	inc    eax
  40bee8:	lods   eax,DWORD PTR ds:[esi]
  40bee9:	push   ecx
  40beea:	jb     0x40bf2b
  40beec:	in     al,dx
  40beed:	inc    ebx
  40beee:	cmp    al,0x1d
  40bef0:	cli    
  40bef1:	pushf  
  40bef2:	mov    ds:0x18dde0ad,al
  40bef7:	sar    al,0x60
  40befa:	xchg   ebp,eax
  40befb:	fidivr WORD PTR [edi+eiz*1+0x515aa954]
  40bf02:	mov    eax,ds:0x8a761fa6
  40bf07:	daa    
  40bf08:	mov    edi,0x27e82e59
  40bf0d:	shl    DWORD PTR [edi-0x6c2851cc],1
  40bf13:	inc    ecx
  40bf14:	and    ebx,ebp
  40bf16:	and    cl,ah
  40bf18:	aaa    
  40bf19:	push   ecx
  40bf1a:	jmp    0x8d2b:0x18baa6df
  40bf21:	inc    BYTE PTR [ebx-0x10]
  40bf24:	lock cmp cl,BYTE PTR [esi]
  40bf27:	popa   
  40bf28:	stos   BYTE PTR es:[edi],al
  40bf29:	ja     0x40bf1f
  40bf2b:	sbb    esp,edi
  40bf2d:	pop    edx
  40bf2e:	and    ch,dl
  40bf30:	out    0x7d,al
  40bf32:	retf   0xb979
  40bf35:	fimul  WORD PTR [esi-0x377e6846]
  40bf3b:	xor    BYTE PTR [edi-0x3f],0xa1
  40bf3f:	nop
  40bf40:	mov    edi,0xbe2e4e6c
  40bf45:	adc    al,BYTE PTR [ebx]
  40bf47:	cmp    dh,0xb7
  40bf4a:	inc    BYTE PTR [ebx+0x1]
  40bf4d:	push   cs
  40bf4e:	out    0x73,eax
  40bf50:	add    edx,DWORD PTR [ecx-0x5c]
  40bf53:	push   0x9dac43ea
  40bf58:	call   0xc6ffa7f1
  40bf5d:	test   eax,0x50530f89
  40bf62:	ror    BYTE PTR [edx],1
  40bf64:	mov    eax,0x8225397
  40bf69:	rdpmc  
  40bf6b:	xlat   BYTE PTR ds:[ebx]
  40bf6c:	push   cs
  40bf6d:	jne    0x40bfd3
  40bf6f:	iret   
  40bf70:	fwait
  40bf71:	aaa    
  40bf72:	call   edx
  40bf74:	js     0x40bfad
  40bf76:	and    BYTE PTR [ebx-0x78],0x5c
  40bf7a:	or     eax,ebx
  40bf7c:	cmp    BYTE PTR [edx],ah
  40bf7e:	xchg   edx,eax
  40bf7f:	jmp    0x40bf31
  40bf81:	xchg   ecx,eax
  40bf82:	adc    ch,bl
  40bf84:	imul   esp,DWORD PTR [ecx+0x7e],0xad1ff4c0
  40bf8b:	fcomp  QWORD PTR [ebp-0x51]
  40bf8e:	clc    
  40bf8f:	sub    eax,ebp
  40bf91:	dec    esi
  40bf92:	pushf  
  40bf93:	add    eax,0xda5f2e8f
  40bf98:	inc    esp
  40bf99:	cmp    al,0xc2
  40bf9b:	loopne 0x40bfb2
  40bf9d:	sti    
  40bf9e:	fbstp  TBYTE PTR [ebx+0xd6a4bcd]
  40bfa4:	push   ebp
  40bfa5:	cmc    
  40bfa6:	inc    edi
  40bfa7:	mov    DWORD PTR [edx+esi*8-0x65],edi
  40bfab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bfac:	test   DWORD PTR [edi+edi*2],edx
  40bfaf:	outs   dx,DWORD PTR ds:[esi]
  40bfb0:	(bad)  
  40bfb1:	je     0x40bfcc
  40bfb3:	dec    edx
  40bfb4:	popf   
  40bfb5:	cmp    al,0x63
  40bfb7:	mov    bh,0x22
  40bfb9:	jbe    0x40bf58
  40bfbb:	push   esi
  40bfbc:	xchg   edx,eax
  40bfbd:	lods   al,BYTE PTR ds:[esi]
  40bfbe:	sub    al,0x5e
  40bfc0:	dec    ebx
  40bfc1:	mov    dh,0xce
  40bfc3:	xchg   ecx,eax
  40bfc4:	mov    ds:0x744ab911,eax
  40bfc9:	sti    
  40bfca:	mov    dl,0x52
  40bfcc:	test   DWORD PTR [esi+0x67508f24],esp
  40bfd2:	pop    ebx
  40bfd3:	je     0x40c027
  40bfd5:	pop    ss
  40bfd6:	icebp  
  40bfd7:	(bad)  
  40bfd8:	iret   
  40bfd9:	fisttp WORD PTR ds:0x277bfd04
  40bfdf:	hlt    
  40bfe0:	sahf   
  40bfe1:	adc    ebp,DWORD PTR [edi+esi*8]
  40bfe4:	(bad)  
  40bfe5:	(bad)  
  40bfe6:	test   DWORD PTR [edi-0x46adc996],0x1853ac11
  40bff0:	inc    ecx
  40bff1:	ins    BYTE PTR es:[edi],dx
  40bff2:	mov    ebp,0xb3ffce5f
  40bff7:	lods   eax,DWORD PTR ds:[esi]
  40bff8:	fstp   DWORD PTR [eax-0x56aba21f]
  40bffe:	and    BYTE PTR [edi],0xcb
  40c001:	mov    eax,ds:0xf4166051
  40c006:	scas   eax,DWORD PTR es:[edi]
  40c007:	adc    eax,0xd20837bd
  40c00c:	push   0x72c553db
  40c011:	jmp    0xa406:0x42cebfe9
  40c018:	pushf  
  40c019:	aad    0xb3
  40c01b:	in     al,dx
  40c01c:	fmul   st,st(6)
  40c01e:	test   al,0x1
  40c020:	push   edi
  40c021:	sub    BYTE PTR [edx+0x79],bh
  40c024:	mov    edi,0x7be31a8a
  40c029:	and    dl,BYTE PTR [esi]
  40c02b:	popf   
  40c02c:	dec    ebx
  40c02d:	cli    
  40c02e:	dec    esp
  40c02f:	push   ecx
  40c030:	in     al,dx
  40c031:	cmp    BYTE PTR [edi],0x7a
  40c034:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c036:	into   
  40c037:	lea    esi,[edx+0x64bfcd69]
  40c03d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c03e:	std    
  40c03f:	xchg   edx,eax
  40c040:	mov    dl,0x83
  40c042:	scas   eax,DWORD PTR es:[edi]
  40c043:	jmp    0x40c047
  40c045:	fwait
  40c046:	or     al,0x30
  40c048:	push   edx
  40c049:	inc    edx
  40c04a:	popf   
  40c04b:	and    eax,DWORD PTR [ecx-0x22ec1645]
  40c051:	sub    eax,0xc4cd0fdf
  40c056:	dec    esp
  40c057:	dec    eax
  40c058:	fwait
  40c059:	lds    ecx,FWORD PTR [eax-0x43]
  40c05c:	dec    ecx
  40c05d:	sbb    DWORD PTR [esi-0x5e7cf740],esp
  40c063:	push   edi
  40c064:	mov    eax,0x4710e2c0
  40c069:	push   ebx
  40c06a:	sub    BYTE PTR [edi+0xb],cl
  40c06d:	or     cl,dh
  40c06f:	jb     0x40c0c1
  40c071:	std    
  40c072:	sub    BYTE PTR [ecx],0x89
  40c075:	mov    DWORD PTR [ecx-0x35a5e932],edx
  40c07b:	pop    ebx
  40c07c:	lods   eax,DWORD PTR ds:[esi]
  40c07d:	retf   0x4869
  40c080:	jnp    0x40c069
  40c082:	fst    DWORD PTR [edx+eax*4-0x675ad950]
  40c089:	fisub  WORD PTR [ecx+0x6f]
  40c08c:	aad    0x4c
  40c08e:	or     al,0x36
  40c090:	je     0x40c04d
  40c092:	mov    dl,0xea
  40c094:	push   esp
  40c095:	and    DWORD PTR [edi-0x1],ebp
  40c098:	cwde   
  40c099:	jbe    0x40c031
  40c09b:	idiv   ebx
  40c09d:	pop    edi
  40c09e:	int    0x65
  40c0a0:	ds clc 
  40c0a2:	out    0x5,eax
  40c0a4:	xchg   ebx,eax
  40c0a5:	jo     0x40c0a5
  40c0a7:	fcomp  DWORD PTR [ebx-0x166fd1d0]
  40c0ad:	add    ch,BYTE PTR [edi-0x7b]
  40c0b0:	push   ebp
  40c0b1:	mov    DWORD PTR [edi+0x15],ebp
  40c0b4:	mov    al,0x65
  40c0b6:	int    0xb5
  40c0b8:	pop    ss
  40c0b9:	adc    al,BYTE PTR [esi+0x2533c938]
  40c0bf:	dec    ebx
  40c0c0:	outs   dx,DWORD PTR ds:[esi]
  40c0c1:	sbb    al,0x8a
  40c0c3:	movups xmm6,xmm6
  40c0c6:	cmp    ch,bl
  40c0c8:	inc    esi
  40c0c9:	aaa    
  40c0ca:	and    ebp,DWORD PTR [ebx]
  40c0cc:	std    
  40c0cd:	add    DWORD PTR [esi+ebp*1+0x4bd6f60d],edi
  40c0d4:	xchg   esi,eax
  40c0d5:	in     al,0x19
  40c0d7:	inc    esp
  40c0d8:	aaa    
  40c0d9:	mov    esi,0x6fc3d26d
  40c0de:	mov    esi,0x4e4de9bf
  40c0e3:	das    
  40c0e4:	push   ecx
  40c0e5:	popfw  
  40c0e7:	ins    BYTE PTR es:[edi],dx
  40c0e8:	sub    eax,0x61f3934
  40c0ed:	(bad)  
  40c0ee:	add    bh,BYTE PTR [edi-0x3c731a36]
  40c0f4:	cli    
  40c0f5:	les    edx,FWORD PTR [eax+0x6f433491]
  40c0fb:	jnp    0x40c08b
  40c0fd:	push   cs
  40c0fe:	jecxz  0x40c08b
  40c100:	dec    BYTE PTR [esi]
  40c102:	pop    ebp
  40c103:	leave  
  40c104:	in     eax,dx
  40c105:	cmp    ah,BYTE PTR [edx]
  40c107:	jg     0x40c0e0
  40c109:	(bad)  
  40c10a:	add    BYTE PTR [edi],al
  40c10c:	fcmovnu st,st(2)
  40c10e:	add    bl,BYTE PTR [eax+ebp*8+0x16e42131]
  40c115:	fwait
  40c116:	push   esi
  40c117:	mov    ebp,0x86efb014
  40c11c:	add    DWORD PTR [eax+0x3fd5d49f],ebx
  40c122:	repnz push 0x5
  40c125:	cmp    al,0x31
  40c127:	outs   dx,BYTE PTR ds:[esi]
  40c128:	(bad)  
  40c129:	sub    ebx,DWORD PTR [edi+0x6c]
  40c12c:	outs   dx,DWORD PTR ds:[esi]
  40c12d:	inc    ebp
  40c12e:	aam    0xe2
  40c130:	clc    
  40c131:	data16 cmp al,0x3f
  40c134:	cmc    
  40c135:	xchg   edx,eax
  40c136:	xor    al,cl
  40c138:	fiadd  DWORD PTR [esi]
  40c13a:	xchg   edi,eax
  40c13b:	enter  0x3e53,0x18
  40c13f:	xchg   edx,eax
  40c140:	mov    esp,DWORD PTR [ecx]
  40c142:	pop    ebp
  40c143:	sbb    eax,0x59f17841
  40c148:	fisubr WORD PTR [ebp+0x77]
  40c14b:	inc    BYTE PTR [ecx]
  40c14d:	sub    edi,DWORD PTR [ebp-0x69]
  40c150:	or     eax,0x58aeecca
  40c155:	mov    dh,dl
  40c157:	fldenv [ebx+0x15]
  40c15a:	mov    ds:0x1b65b62c,al
  40c15f:	jns    0x40c16e
  40c161:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c162:	and    BYTE PTR [ecx-0x3800bb0d],dl
  40c168:	jae    0x40c130
  40c16a:	jne    0x40c145
  40c16c:	sbb    ecx,DWORD PTR [edx-0x122aa9ca]
  40c172:	xchg   ebx,eax
  40c173:	sbb    eax,DWORD PTR [ebx+0x5c707403]
  40c179:	fist   DWORD PTR [eax-0x6]
  40c17c:	lock sbb eax,0x5e77ce86
  40c182:	dec    esp
  40c183:	mov    ebx,0x984ee594
  40c188:	(bad)  
  40c189:	mov    al,BYTE PTR [edi]
  40c18b:	push   ebx
  40c18c:	pushf  
  40c18d:	mov    edx,0x4e4ae1fd
  40c192:	(bad)  
  40c193:	add    eax,0x31d406fd
  40c198:	pop    es
  40c199:	cs xchg edx,eax
  40c19b:	arpl   WORD PTR [ebp+ebp*2-0x1e559303],ax
  40c1a2:	out    dx,al
  40c1a3:	or     dl,dh
  40c1a5:	mov    dl,al
  40c1a7:	push   0xffffff81
  40c1a9:	call   0x76b4:0x596584cb
  40c1b0:	xchg   edx,eax
  40c1b1:	jl     0x40c1d1
  40c1b3:	wbinvd 
  40c1b5:	stos   DWORD PTR es:[edi],eax
  40c1b6:	mov    ds:0x4184cb51,eax
  40c1bb:	adc    cl,BYTE PTR [ecx+0x10]
  40c1be:	aas    
  40c1bf:	and    al,0xa4
  40c1c1:	cs adc al,0xd
  40c1c4:	and    edx,DWORD PTR [ebx+0x4]
  40c1c7:	cmp    al,dh
  40c1c9:	std    
  40c1ca:	or     edi,0xffffffce
  40c1cd:	icebp  
  40c1ce:	push   ds
  40c1cf:	test   DWORD PTR [edi-0x76],edi
  40c1d2:	xor    eax,0x81b5758
  40c1d7:	inc    edi
  40c1d8:	pop    ebp
  40c1d9:	outs   dx,DWORD PTR ds:[esi]
  40c1da:	jno    0x40c250
  40c1dc:	neg    BYTE PTR [ebx+edx*1-0x7f8ef0b8]
  40c1e3:	cmc    
  40c1e4:	ss inc esp
  40c1e6:	sbb    BYTE PTR [ecx],0x37
  40c1e9:	dec    esi
  40c1ea:	add    eax,0xa50884e
  40c1ef:	cmp    bl,dh
  40c1f1:	adc    DWORD PTR [esi],0xff247740
  40c1f7:	and    BYTE PTR [ebx],dh
  40c1f9:	addr16 loopne 0x40c1df
  40c1fc:	stos   DWORD PTR es:[edi],eax
  40c1fd:	sub    edi,DWORD PTR [eax+0x1421ff67]
  40c203:	xchg   ecx,eax
  40c204:	ins    DWORD PTR es:[edi],dx
  40c205:	cld    
  40c206:	sahf   
  40c207:	sub    al,0xf9
  40c209:	adc    dl,dh
  40c20b:	shr    BYTE PTR [ebx+esi*1],1
  40c20e:	loop   0x40c200
  40c210:	pop    es
  40c211:	cwde   
  40c212:	outs   dx,DWORD PTR ds:[esi]
  40c213:	xlat   BYTE PTR ds:[ebx]
  40c214:	jns    0x40c24a
  40c216:	stc    
  40c217:	outs   dx,DWORD PTR ds:[esi]
  40c218:	stc    
  40c219:	push   eax
  40c21a:	daa    
  40c21b:	test   DWORD PTR [edx+0x2b],0xda58589d
  40c222:	dec    ebx
  40c223:	loopne 0x40c251
  40c225:	inc    esi
  40c226:	jp     0x40c1dc
  40c228:	ins    DWORD PTR es:[edi],dx
  40c229:	mov    ds:0xc47c4bb2,al
  40c22e:	(bad)
  40c233:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c234:	ret    0x8dd9
  40c237:	pop    DWORD PTR [eax-0xe]
  40c23a:	data16 shl BYTE PTR [edx-0x7d],1
  40c23e:	out    0xb2,al
  40c240:	mov    edi,0x62fb92e0
  40c245:	retf   
  40c246:	cmc    
  40c247:	cmp    edi,edx
  40c249:	mov    bh,0x65
  40c24b:	mov    BYTE PTR [esi],ah
  40c24d:	in     al,dx
  40c24e:	es das 
  40c250:	xor    eax,0xd9c3a757
  40c255:	add    al,0xbc
  40c257:	inc    ebx
  40c258:	or     DWORD PTR [eax-0x4b],eax
  40c25b:	(bad)  
  40c25d:	in     al,0xa5
  40c25f:	cmp    DWORD PTR ds:0x75ab506c,ebp
  40c265:	test   BYTE PTR [eax+0xe4fd841],ch
  40c26b:	jle    0x40c21b
  40c26d:	jl     0x40c23f
  40c26f:	nop
  40c270:	push   ebp
  40c271:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c272:	ds xor al,0x79
  40c275:	inc    edi
  40c276:	aas    
  40c277:	mov    ebp,0x79c1c7cf
  40c27c:	cs push esp
  40c27e:	adc    DWORD PTR [eax],esi
  40c280:	fs fwait
  40c282:	cmp    DWORD PTR [ecx],ecx
  40c284:	or     al,0xcb
  40c286:	dec    ebp
  40c287:	sbb    DWORD PTR [edi+0x60],0xffffffc6
  40c28b:	jns    0x40c2bd
  40c28d:	call   0x7f12:0x7869974
  40c294:	and    BYTE PTR [ecx],cl
  40c296:	arpl   WORD PTR [edi+0x5e7a3a5c],sp
  40c29c:	xor    DWORD PTR [edx+esi*4-0x58],ebx
  40c2a0:	fld    DWORD PTR [ebp+0x28]
  40c2a3:	stos   BYTE PTR es:[edi],al
  40c2a4:	lea    ebx,[ebx+esi*4]
  40c2a7:	dec    ebx
  40c2a8:	retf   
  40c2a9:	adc    al,0x30
  40c2ab:	imul   ecx,DWORD PTR [edx],0xe82f274b
  40c2b1:	lods   eax,DWORD PTR ds:[esi]
  40c2b2:	jp     0x40c2d9
  40c2b4:	sbb    DWORD PTR [edi+0x69],edx
  40c2b7:	cmp    edx,eax
  40c2b9:	and    BYTE PTR [eax],dl
  40c2bb:	aam    0x20
  40c2bd:	in     eax,dx
  40c2be:	mov    ?,WORD PTR [edx]
  40c2c0:	sahf   
  40c2c1:	sub    al,0x84
  40c2c3:	mov    eax,DWORD PTR [edx]
  40c2c5:	fild   QWORD PTR [edx+0x18599007]
  40c2cb:	jnp    0x40c348
  40c2cd:	xor    al,0x5f
  40c2cf:	pushf  
  40c2d0:	lock (bad) 
  40c2d2:	sub    BYTE PTR [eax+edi*8-0x24],dl
  40c2d6:	mov    al,ds:0xba69d1eb
  40c2db:	mov    bh,BYTE PTR cs:0x736af269
  40c2e2:	sub    eax,0x668c6c5a
  40c2e7:	icebp  
  40c2e8:	fistp  DWORD PTR ds:0x4a4758f2
  40c2ee:	pop    edi
  40c2ef:	vpaddusw xmm1,xmm5,XMMWORD PTR [edx+0x11]
  40c2f4:	loopne 0x40c2d7
  40c2f6:	jb     0x40c32c
  40c2f8:	ss xor ch,cl
  40c2fb:	sub    BYTE PTR [ecx-0x56],cl
  40c2fe:	pop    ss
  40c2ff:	out    dx,eax
  40c300:	sbb    BYTE PTR [ebx],0xcd
  40c303:	sahf   
  40c304:	fidiv  WORD PTR [edx+edi*1-0x7ddeaf32]
  40c30b:	inc    esp
  40c30c:	in     al,dx
  40c30d:	mov    ah,0xc9
  40c30f:	jle    0x40c2ee
  40c311:	out    0xa0,eax
  40c313:	pop    edi
  40c314:	add    BYTE PTR [edi],ch
  40c316:	pop    edx
  40c317:	xor    ah,BYTE PTR [ebp-0x48]
  40c31a:	mov    ds:0x9a2421ff,al
  40c31f:	int    0xb
  40c321:	shl    BYTE PTR [ebp-0x712a04a2],cl
  40c327:	jnp    0x40c373
  40c329:	mov    al,0x65
  40c32b:	popa   
  40c32c:	stos   BYTE PTR es:[edi],al
  40c32d:	xor    BYTE PTR [ecx+eiz*2-0x57],cl
  40c331:	retf   0xcc9d
  40c334:	inc    edx
  40c335:	or     BYTE PTR [ebp+0x15885696],al
  40c33b:	or     al,BYTE PTR [ecx]
  40c33d:	stos   BYTE PTR es:[edi],al
  40c33e:	mov    edx,0x20e3fe12
  40c343:	jg     0x40c2e1
  40c345:	das    
  40c346:	retf   
  40c347:	fldcw  WORD PTR [ecx+0x3b65d2b0]
  40c34d:	cmp    DWORD PTR [eax+0x5b9627e2],0x1e0ec921
  40c357:	push   esi
  40c358:	enter  0xb43,0x9c
  40c35c:	adc    eax,0x36483c1e
  40c361:	xor    eax,0x7fe638b
  40c366:	mov    ch,BYTE PTR [ebx+ecx*2-0x5dbfcfd5]
  40c36d:	xchg   esi,eax
  40c36e:	in     al,dx
  40c36f:	mov    al,ds:0x1f65bc72
  40c374:	mov    BYTE PTR [ecx],al
  40c376:	ja     0x40c39d
  40c378:	cmc    
  40c379:	ss scas eax,DWORD PTR es:[edi]
  40c37b:	div    BYTE PTR [eax+ecx*2-0x6]
  40c37f:	dec    eax
  40c380:	mov    esi,0x6db7edaa
  40c385:	mov    al,ds:0x118893f9
  40c38a:	cmc    
  40c38b:	cwde   
  40c38c:	pop    edx
  40c38d:	push   0xaf5dfc0a
  40c392:	push   edi
  40c393:	jp     0x40c401
  40c395:	sub    al,0xff
  40c397:	mov    cl,0x7d
  40c399:	bound  esi,QWORD PTR [edi]
  40c39b:	cmc    
  40c39c:	fs jae 0x40c32d
  40c39f:	sub    BYTE PTR [eax-0x6e],0x44
  40c3a3:	push   ds
  40c3a4:	push   ebx
  40c3a5:	and    esp,eax
  40c3a7:	mov    al,0x88
  40c3a9:	jle    0x40c397
  40c3ab:	mov    dl,0x31
  40c3ad:	lods   eax,DWORD PTR ds:[esi]
  40c3ae:	sbb    eax,0x7b77c98
  40c3b3:	cmp    edx,ebp
  40c3b5:	clc    
  40c3b6:	add    eax,0x54ffc393
  40c3bb:	fdiv   st(5),st
  40c3be:	jb     0x40c36a
  40c3c0:	ss jae 0x40c357
  40c3c3:	sti    
  40c3c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3c5:	int    0xc2
  40c3c7:	pop    ecx
  40c3c8:	mov    bl,0x8c
  40c3ca:	fadd   QWORD PTR [ecx]
  40c3cc:	test   eax,0x1b316311
  40c3d1:	repnz or eax,0x55c736c
  40c3d7:	outs   dx,BYTE PTR ds:[esi]
  40c3d8:	xchg   esi,eax
  40c3d9:	test   DWORD PTR [eax+0x2043c2de],eax
  40c3df:	mov    bl,0xd2
  40c3e1:	pushf  
  40c3e2:	xlat   BYTE PTR ds:[ebx]
  40c3e3:	test   DWORD PTR [ebp+ebx*4-0x2b2c9a7a],edi
  40c3ea:	xchg   esi,eax
  40c3eb:	test   edi,0x88c04bc4
  40c3f1:	adc    ch,BYTE PTR [esi]
  40c3f3:	jmp    0xaf3d:0xa1bc47b4
  40c3fa:	sub    edi,DWORD PTR [eax+0x79]
  40c3fd:	cmc    
  40c3fe:	push   0xffffffc3
  40c400:	(bad)  
  40c401:	and    BYTE PTR [edx],bl
  40c403:	adc    DWORD PTR [ebp-0x6ad69dd3],ecx
  40c409:	lea    ax,[esi]
  40c40c:	fbld   TBYTE PTR gs:[ebp-0x19777d02]
  40c413:	push   0x34d4619a
  40c418:	push   eax
  40c419:	aaa    
  40c41a:	add    al,BYTE PTR [ecx+0x6547b532]
  40c420:	mov    dh,0xc1
  40c422:	mov    edi,0xf0e666c
  40c427:	jo     0x40c3d0
  40c429:	sbb    eax,0xac1aa28a
  40c42e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c42f:	push   ebp
  40c430:	add    eax,DWORD PTR [edi+0x2452cd2f]
  40c436:	arpl   bp,cx
  40c438:	add    BYTE PTR [edx-0x206db414],0x92
  40c43f:	outs   dx,BYTE PTR ds:[esi]
  40c440:	xor    ah,BYTE PTR [edx-0x22]
  40c443:	lahf   
  40c444:	in     al,0xc0
  40c446:	sbb    ah,BYTE PTR ds:0x699c0688
  40c44c:	(bad)  
  40c44d:	jb     0x40c44c
  40c44f:	jno    0x40c486
  40c451:	pushf  
  40c452:	inc    eax
  40c453:	ds ret 
  40c455:	inc    esp
  40c456:	je     0x40c3df
  40c458:	sbb    eax,0x7815d6c9
  40c45d:	retf   0x1d75
  40c460:	bswap  ecx
  40c462:	out    0x38,eax
  40c464:	and    edx,eax
  40c466:	rcl    DWORD PTR [edi+0x2c5753d5],1
  40c46c:	mov    bh,0x6c
  40c46e:	retf   
  40c46f:	and    BYTE PTR [ebx],ah
  40c471:	mov    dh,0x6f
  40c473:	pop    edi
  40c474:	dec    edi
  40c475:	jno    0x40c41a
  40c477:	scas   al,BYTE PTR es:[edi]
  40c478:	les    ecx,FWORD PTR [edi]
  40c47a:	cwde   
  40c47b:	push   0x5539c3f5
  40c480:	ficomp DWORD PTR [esi+0x65]
  40c483:	pop    ss
  40c484:	sub    al,0x95
  40c486:	ds xor esi,edi
  40c489:	jne    0x40c4c5
  40c48b:	jnp    0x40c438
  40c48d:	test   BYTE PTR [edi-0x4c],dh
  40c490:	stc    
  40c491:	mov    dh,0xcd
  40c493:	shr    ah,1
  40c495:	ins    BYTE PTR es:[edi],dx
  40c496:	add    BYTE PTR [esi+0x6],0x49
  40c49a:	inc    ebx
  40c49b:	ret    
  40c49c:	popf   
  40c49d:	push   eax
  40c49e:	(bad)  
  40c49f:	pop    esi
  40c4a0:	int    0x9d
  40c4a2:	fidiv  DWORD PTR ds:0xfa0af90e
  40c4a8:	outs   dx,BYTE PTR ds:[esi]
  40c4a9:	int3   
  40c4aa:	push   0xd4d7b761
  40c4af:	sbb    DWORD PTR [eax+0x3b],eax
  40c4b2:	data16 cld 
  40c4b4:	shr    DWORD PTR [esi],1
  40c4b6:	rol    ecx,1
  40c4b8:	add    ebp,edx
  40c4ba:	cmp    al,0x8c
  40c4bc:	les    esi,FWORD PTR [esi-0x16]
  40c4bf:	rol    DWORD PTR [edx],1
  40c4c1:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40c4c3:	or     ebp,DWORD PTR [ebx-0x2]
  40c4c6:	or     edx,DWORD PTR [ebx]
  40c4c8:	fiadd  WORD PTR ds:0xab09a128
  40c4ce:	xchg   ecx,eax
  40c4cf:	das    
  40c4d0:	stc    
  40c4d1:	cmp    ah,BYTE PTR [edx+0x69618de0]
  40c4d7:	in     eax,0x9b
  40c4d9:	cmc    
  40c4da:	shr    BYTE PTR [ebx],1
  40c4dc:	and    DWORD PTR [eax],ecx
  40c4de:	adc    esp,edx
  40c4e0:	rol    DWORD PTR [esi+0x1b],cl
  40c4e3:	mov    bl,0xe0
  40c4e5:	ror    DWORD PTR [ebp-0x4e],cl
  40c4e8:	and    ebp,DWORD PTR [ebp+0x37f965f4]
  40c4ee:	mov    fs,WORD PTR [edx+0x1fbfad0c]
  40c4f4:	(bad)
  40c4f7:	add    bl,BYTE PTR [ecx+ecx*8+0x14]
  40c4fb:	in     eax,dx
  40c4fc:	xor    ch,BYTE PTR [ebp+0x116e6d48]
  40c502:	cld    
  40c503:	adc    eax,0xe324589d
  40c508:	loopne 0x40c579
  40c50a:	jbe    0x40c50f
  40c50c:	sbb    eax,0x1e67bf4a
  40c511:	push   ecx
  40c512:	outs   dx,DWORD PTR ds:[esi]
  40c513:	dec    ebp
  40c514:	nop
  40c515:	mov    ds:0x1b73ae0f,al
  40c51a:	retf   0x6ebd
  40c51d:	imul   esi,esp,0x84615e67
  40c523:	mov    al,ds:0xc07ccd62
  40c528:	jb     0x40c51b
  40c52a:	lahf   
  40c52b:	mov    ah,0x4b
  40c52d:	inc    ebx
  40c52e:	test   al,0xe7
  40c530:	cmp    DWORD PTR [ecx+0x7d],esp
  40c533:	dec    ecx
  40c534:	inc    eax
  40c535:	sbb    bh,0x78
  40c538:	push   ecx
  40c539:	retf   0x4e34
  40c53c:	neg    DWORD PTR [ebp+0x4008d0d]
  40c542:	retf   0x764a
  40c545:	mov    al,ds:0x3034fa24
  40c54a:	arpl   di,si
  40c54c:	sbb    bh,ch
  40c54e:	repnz repnz add eax,0x4cfd21ab
  40c555:	popf   
  40c556:	test   DWORD PTR [ebx-0xbdf66fa],edx
  40c55c:	adc    eax,DWORD PTR [edi+0x40520591]
  40c562:	(bad)  
  40c563:	test   ah,0x44
  40c566:	lds    esp,FWORD PTR [edi+0x47325b0d]
  40c56c:	inc    eax
  40c56d:	dec    ebp
  40c56e:	adc    al,0x14
  40c570:	add    al,0xa0
  40c572:	xchg   edi,ebx
  40c574:	cmc    
  40c575:	int    0xb4
  40c577:	xchg   edx,eax
  40c578:	enter  0x2cbd,0x35
  40c57c:	or     BYTE PTR ds:0x65c19ebb,ch
  40c582:	in     al,0xe3
  40c584:	pusha  
  40c585:	test   eax,0x86eab520
  40c58a:	out    0x4,al
  40c58c:	mov    WORD PTR [ecx-0x3f],gs
  40c58f:	inc    esp
  40c590:	lods   eax,DWORD PTR ds:[esi]
  40c591:	outs   dx,DWORD PTR ds:[esi]
  40c592:	imul   esp,DWORD PTR [ebx],0xffffff95
  40c595:	xor    dh,BYTE PTR [ebx]
  40c597:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c598:	xchg   edx,eax
  40c599:	mov    eax,0x195f72ab
  40c59e:	mov    al,0x82
  40c5a0:	mov    al,0x7
  40c5a2:	cmp    al,0xaa
  40c5a4:	mov    dl,al
  40c5a6:	xor    edi,ecx
  40c5a8:	repz adc BYTE PTR [eax+0x6e],ch
  40c5ac:	jne    0x40c59c
  40c5ae:	fwait
  40c5af:	sub    DWORD PTR [ecx-0x33],ebx
  40c5b2:	jp     0x40c55c
  40c5b4:	jle    0x40c577
  40c5b6:	daa    
  40c5b7:	dec    edi
  40c5b8:	push   ss
  40c5b9:	jne    0x40c637
  40c5bb:	push   ds
  40c5bc:	mov    ah,0x31
  40c5be:	cdq    
  40c5bf:	sub    bh,BYTE PTR [edi+0x7e]
  40c5c2:	out    0x67,al
  40c5c4:	adc    DWORD PTR [edx],ebp
  40c5c6:	outs   dx,BYTE PTR ds:[esi]
  40c5c7:	enter  0x3ff5,0xa7
  40c5cb:	(bad)  
  40c5cc:	fisttp WORD PTR [eax]
  40c5ce:	push   es
  40c5cf:	pop    edx
  40c5d0:	aaa    
  40c5d1:	pop    edx
  40c5d2:	mov    ah,0x5
  40c5d4:	ds out 0xe8,eax
  40c5d7:	call   0x981ec62d
  40c5dc:	cmc    
  40c5dd:	push   edx
  40c5de:	gs and al,0x4
  40c5e1:	fistp  QWORD PTR ds:0x94c0d85a
  40c5e7:	mov    edx,0x7dd85c48
  40c5ec:	mov    ds:0x57bc7251,al
  40c5f1:	mov    al,0x2a
  40c5f3:	or     bl,BYTE PTR [edi-0x7f5e7421]
  40c5f9:	test   al,0x56
  40c5fb:	sub    DWORD PTR [ecx+0x3477944a],0xffffffa2
  40c602:	call   0xb881948c
  40c607:	add    al,0x20
  40c609:	shl    BYTE PTR [edi-0x36a8da44],cl
  40c60f:	out    dx,eax
  40c610:	dec    eax
  40c611:	call   0x8588d70
  40c616:	and    BYTE PTR ds:0x88d18b12,bh
  40c61c:	mov    ?,ebx
  40c61e:	and    eax,0xb67fb143
  40c623:	sbb    edi,ebx
  40c625:	dec    esi
  40c626:	push   bx
  40c628:	loop   0x40c647
  40c62a:	add    eax,0x5474ae95
  40c62f:	repz cmp dl,BYTE PTR [ebx+edi*2]
  40c633:	ret    
  40c634:	imul   esp,DWORD PTR [esi-0x6fa67f5],0x1
  40c63b:	jnp    0x40c664
  40c63d:	icebp  
  40c63e:	adc    BYTE PTR [ebx+0x54],bh
  40c641:	addr16 (bad) 
  40c644:	pop    edx
  40c645:	mov    bl,0x78
  40c647:	adc    ah,BYTE PTR [ebx-0x6c6ce130]
  40c64d:	adc    BYTE PTR [edi-0x4496d30d],0xf
  40c654:	dec    ebp
  40c655:	dec    esi
  40c656:	lods   eax,DWORD PTR ds:[esi]
  40c657:	adc    edi,DWORD PTR [edx+0x42]
  40c65a:	mov    ecx,0x2c8ad9b9
  40c65f:	mov    edi,0x2b982764
  40c664:	and    al,0x13
  40c666:	xchg   ebx,eax
  40c667:	stos   DWORD PTR es:[edi],eax
  40c668:	loopne 0x40c6c9
  40c66a:	mov    eax,ds:0xe4e73a9c
  40c66f:	mov    ?,WORD PTR [bp+si+0x5e71]
  40c674:	jns    0x40c6a7
  40c676:	xor    ebp,DWORD PTR [ebp-0x5f]
  40c679:	retf   
  40c67a:	ret    0x5a7d
  40c67d:	add    al,0x82
  40c67f:	mov    edi,0x6b46af19
  40c684:	add    ch,ah
  40c686:	push   ecx
  40c687:	stos   BYTE PTR es:[edi],al
  40c688:	xor    al,0x27
  40c68a:	ret    
  40c68b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c68c:	dec    ebx
  40c68d:	test   dl,dh
  40c68f:	fbld   TBYTE PTR [edx]
  40c691:	or     BYTE PTR [ebp-0x437d088a],dl
  40c697:	sbb    DWORD PTR [edi+eax*4-0x68],edi
  40c69b:	jmp    0x40c6a8
  40c69d:	inc    esi
  40c69e:	pop    ds
  40c69f:	pop    ebp
  40c6a0:	in     eax,dx
  40c6a1:	adc    DWORD PTR [edi+0x32c7a291],0x60
  40c6a8:	cmp    eax,0xcb1da09f
  40c6ad:	int3   
  40c6ae:	xchg   ebx,eax
  40c6af:	dec    ebx
  40c6b0:	dec    ecx
  40c6b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c6b2:	xchg   edx,eax
  40c6b3:	mov    dl,al
  40c6b5:	cli    
  40c6b6:	jns    0x40c64b
  40c6b8:	mov    ebp,0x9a59a3
  40c6bd:	cmp    al,0x77
  40c6bf:	and    eax,0xdacb8a18
  40c6c4:	and    ch,BYTE PTR [esi+0x2c]
  40c6c7:	pop    ecx
  40c6c8:	xchg   edi,eax
  40c6c9:	sub    bh,BYTE PTR [esi]
  40c6cb:	jmp    0x608e4b65
  40c6d0:	enter  0x3a29,0x2a
  40c6d4:	sub    al,bl
  40c6d6:	jge    0x40c706
  40c6d8:	(bad)  
  40c6d9:	mov    al,ds:0x101a7c85
  40c6de:	mov    esp,gs
  40c6e0:	jecxz  0x40c6db
  40c6e2:	popa   
  40c6e3:	inc    ebp
  40c6e4:	mov    dl,0xc8
  40c6e6:	and    ah,BYTE PTR [ebx-0x7a]
  40c6e9:	into   
  40c6ea:	push   ecx
  40c6eb:	cmp    bl,BYTE PTR [esi-0x42]
  40c6ee:	cmc    
  40c6ef:	add    eax,DWORD PTR ds:0x8aadd797
  40c6f5:	sbb    BYTE PTR [edx],cl
  40c6f7:	shl    DWORD PTR [ecx-0x3fef939c],1
  40c6fd:	cmp    al,0xa9
  40c6ff:	and    edi,edi
  40c701:	adc    al,0xc9
  40c703:	mul    BYTE PTR ss:[esi-0xafe6065]
  40c70a:	add    al,0x4e
  40c70c:	fwait
  40c70d:	mov    edi,0x2f040f0d
  40c712:	jbe    0x40c77a
  40c714:	sub    dl,BYTE PTR ds:0x24450822
  40c71a:	fwait
  40c71b:	rol    DWORD PTR [eax+esi*1+0x3a67409b],0xc7
  40c723:	hlt    
  40c724:	ds jecxz 0x40c74e
  40c727:	xchg   bl,cl
  40c729:	aam    0x9a
  40c72b:	mov    ah,ch
  40c72d:	sbb    ch,BYTE PTR [ebp+0x44]
  40c730:	or     eax,0xb8dbec11
  40c735:	fbstp  TBYTE PTR [esi-0x1c]
  40c738:	stos   DWORD PTR es:[edi],eax
  40c739:	(bad)  
  40c73a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c73b:	(bad)  
  40c73c:	cli    
  40c73d:	je     0x40c775
  40c73f:	cs fst st(3)
  40c742:	mov    al,ds:0xbfb39c7c
  40c747:	pop    ebp
  40c748:	add    eax,0x8d3f7612
  40c74d:	lods   al,BYTE PTR ds:[esi]
  40c74e:	popf   
  40c74f:	xor    edx,DWORD PTR [edi-0x34cbbd90]
  40c755:	push   cs
  40c756:	dec    eax
  40c757:	cmp    al,0x35
  40c759:	jl     0x40c750
  40c75b:	jecxz  0x40c73d
  40c75d:	mov    gs,WORD PTR [ebp-0x66]
  40c760:	ins    DWORD PTR es:[edi],dx
  40c761:	or     BYTE PTR [esi-0x2c],cl
  40c764:	clc    
  40c765:	sbb    dl,bh
  40c767:	xor    eax,0x53f8ecb
  40c76c:	sub    al,0xa1
  40c76e:	dec    esp
  40c76f:	add    al,0x43
  40c771:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c772:	mov    eax,ds:0xf808b7f7
  40c777:	sti    
  40c778:	cmc    
  40c779:	rcr    ebp,1
  40c77b:	ss nop
  40c77d:	push   ecx
  40c77e:	dec    DWORD PTR [esi]
  40c780:	bound  esi,QWORD PTR [ebp+0x3d]
  40c783:	jmp    0xcd04:0x2ab86be4
  40c78a:	shl    BYTE PTR [edx-0x68],1
  40c78d:	inc    ebp
  40c78e:	ret    
  40c78f:	dec    edx
  40c790:	lea    edx,[eax+0x7f2154f]
  40c796:	test   al,0x8
  40c798:	fisttp WORD PTR [ebx]
  40c79a:	ja     0x40c740
  40c79c:	inc    esp
  40c79d:	dec    esi
  40c79e:	push   ecx
  40c79f:	or     eax,0x1856b284
  40c7a4:	mov    edi,0x7a342c17
  40c7a9:	jae    0x40c79e
  40c7ab:	enter  0xb3c4,0xff
  40c7af:	aad    0xfc
  40c7b1:	mov    cl,0x63
  40c7b3:	jmp    0x40c755
  40c7b5:	fs int 0x87
  40c7b8:	je     0x40c764
  40c7ba:	or     DWORD PTR ds:0xf9882bf2,eax
  40c7c0:	(bad)  [edx+ebx*1+0x48]
  40c7c4:	jne    0x40c7a5
  40c7c6:	sub    eax,0x8f488243
  40c7cb:	rol    dl,1
  40c7cd:	push   esp
  40c7ce:	scas   al,BYTE PTR es:[edi]
  40c7cf:	fwait
  40c7d0:	sbb    dl,BYTE PTR [eax]
  40c7d2:	push   ecx
  40c7d3:	and    eax,0xbddc7206
  40c7d8:	shl    BYTE PTR [eax-0x5],0x83
  40c7dc:	fisubr DWORD PTR fs:[ecx+0x75]
  40c7e0:	pushf  
  40c7e1:	pushf  
  40c7e2:	jg     0x40c7d5
  40c7e4:	jbe    0x40c7dd
  40c7e6:	xchg   esi,eax
  40c7e7:	jmp    0x40c78c
  40c7e9:	leave  
  40c7ea:	sbb    eax,0x434d1d27
  40c7ef:	and    esi,DWORD PTR [esi+0x6b6bbb68]
  40c7f5:	or     BYTE PTR [ebp-0x5],0x6d
  40c7f9:	stos   DWORD PTR es:[edi],eax
  40c7fa:	cmc    
  40c7fb:	cmp    dl,BYTE PTR [eax+0x7876f8d8]
  40c801:	pop    sp
  40c803:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c804:	loopne 0x40c811
  40c806:	ror    BYTE PTR [ebp-0xc],0x3c
  40c80a:	adc    esp,DWORD PTR [eax]
  40c80c:	cmp    dh,cl
  40c80e:	mov    edx,0xe2a7722f
  40c813:	retf   
  40c814:	add    al,0x49
  40c816:	push   esi
  40c817:	jo     0x40c7ff
  40c819:	fistp  QWORD PTR [ebp+0x69]
  40c81c:	in     eax,0x8d
  40c81e:	jp     0x40c800
  40c820:	imul   ebx,DWORD PTR [ebp-0x6a3eb60],0x6e
  40c827:	inc    ebx
  40c828:	loop   0x40c84a
  40c82a:	push   esi
  40c82b:	aas    
  40c82c:	js     0x40c899
  40c82e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c82f:	test   ah,ch
  40c831:	in     eax,dx
  40c832:	pop    edi
  40c833:	fwait
  40c834:	mov    ebx,DWORD PTR [eax]
  40c836:	cli    
  40c837:	pushf  
  40c838:	test   eax,0xdea9a620
  40c83d:	fcomip st,st(5)
  40c83f:	inc    edx
  40c840:	pop    ecx
  40c841:	and    eax,0x734404f1
  40c846:	push   edx
  40c847:	imul   esp,DWORD PTR [eax-0x2e6347cd],0xffffff83
  40c84e:	ins    DWORD PTR es:[edi],dx
  40c84f:	call   0xa1ea32a0
  40c854:	jbe    0x40c8c9
  40c856:	cmp    DWORD PTR [eax],0xfffffff3
  40c859:	arpl   WORD PTR [eax],cx
  40c85b:	push   ebx
  40c85c:	test   BYTE PTR [ecx+0x32],ch
  40c85f:	inc    ebx
  40c860:	mov    ds:0x1fe0cd4a,eax
  40c865:	jmp    edi
  40c867:	hlt    
  40c868:	repnz cwde 
  40c86a:	cmc    
  40c86b:	push   eax
  40c86c:	leave  
  40c86d:	(bad)  
  40c86e:	adc    al,0x4c
  40c870:	mov    WORD PTR [ebx-0x6a],ds
  40c873:	adc    DWORD PTR [edi+0x534896d9],edx
  40c879:	shld   DWORD PTR [ebx+0x40],edx,0xd3
  40c87e:	stos   DWORD PTR es:[edi],eax
  40c87f:	and    BYTE PTR [ebx+0x73],bh
  40c882:	pop    ebp
  40c883:	adc    bh,ch
  40c885:	out    dx,al
  40c886:	mov    ds,esp
  40c888:	shl    BYTE PTR [ebx],cl
  40c88a:	push   esi
  40c88b:	jecxz  0x40c850
  40c88d:	lock mov eax,ds:0xdd024d1e
  40c893:	in     eax,0xbe
  40c895:	sti    
  40c896:	adc    edx,ebx
  40c898:	rep lods eax,DWORD PTR ds:[esi]
  40c89a:	inc    edi
  40c89b:	mov    esi,0x7d8b49e5
  40c8a0:	sbb    bl,BYTE PTR [ecx+0x1edadb6e]
  40c8a6:	fst    DWORD PTR [ecx-0x49]
  40c8a9:	sub    dl,bh
  40c8ab:	ss stos DWORD PTR es:[edi],eax
  40c8ad:	pusha  
  40c8ae:	and    eax,0x89c313d7
  40c8b3:	add    al,dl
  40c8b5:	je     0x40c851
  40c8b7:	cwde   
  40c8b8:	(bad)  
  40c8b9:	xlat   BYTE PTR ds:[ebx]
  40c8ba:	mov    ah,0x11
  40c8bc:	adc    eax,0xbf78a66d
  40c8c1:	add    eax,DWORD PTR [ebp+0x12]
  40c8c4:	bound  esi,QWORD PTR [ebx-0x341b290e]
  40c8ca:	rcr    DWORD PTR [esi],0xd3
  40c8cd:	stos   DWORD PTR es:[edi],eax
  40c8ce:	mov    edx,0x934d7258
  40c8d3:	or     dl,ah
  40c8d5:	jbe    0x40c8dc
  40c8d7:	push   ecx
  40c8d8:	xchg   edi,eax
  40c8d9:	cmp    ebx,ebp
  40c8db:	sub    al,0xdc
  40c8dd:	add    DWORD PTR [ebx],esp
  40c8df:	mov    eax,0x1f77a2d5
  40c8e4:	jae    0x40c86e
  40c8e6:	ds push ebx
  40c8e8:	mov    eax,ds:0x598b0471
  40c8ed:	mov    bl,0x21
  40c8ef:	hlt    
  40c8f0:	jb     0x40c96d
  40c8f2:	and    bl,bl
  40c8f4:	rol    DWORD PTR [edi],0x4e
  40c8f7:	nop
  40c8f8:	imul   edx,DWORD PTR [eax+ecx*1+0x4904d93a],0x60397813
  40c903:	inc    esi
  40c904:	pop    ss
  40c905:	in     eax,0x5e
  40c907:	fwait
  40c908:	sub    eax,0xe6730671
  40c90d:	add    esp,DWORD PTR [ebx+0x26]
  40c910:	bnd jmp 0x40c932
  40c913:	adc    ecx,DWORD PTR [edx]
  40c915:	std    
  40c916:	push   edx
  40c917:	inc    ebp
  40c918:	xor    edx,DWORD PTR [ecx+ebx*2+0x55]
  40c91c:	mov    al,0x7b
  40c91e:	out    dx,al
  40c91f:	push   0xffffff9e
  40c921:	cs mov ah,0x68
  40c924:	call   0x252d:0x2623e786
  40c92b:	sbb    al,0x5f
  40c92d:	leave  
  40c92e:	sbb    edi,DWORD PTR [ecx-0x107b3b7c]
  40c934:	arpl   si,si
  40c936:	dec    edx
  40c937:	neg    DWORD PTR [ebp-0x9729d42]
  40c93d:	jbe    0x40c944
  40c93f:	sub    bl,cl
  40c941:	arpl   si,bx
  40c943:	xor    al,0xd
  40c945:	xchg   ecx,eax
  40c946:	and    ah,bh
  40c948:	adc    DWORD PTR [ebx+0x5157fa03],0x26285efd
  40c952:	dec    ebx
  40c953:	pop    ecx
  40c954:	cs pop ss
  40c956:	aad    0x9e
  40c958:	jnp    0x40c9ad
  40c95a:	mov    al,0xe8
  40c95c:	inc    edx
  40c95d:	inc    ebp
  40c95e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c95f:	push   esi
  40c960:	loop   0x40c952
  40c962:	(bad)  
  40c963:	mov    ebp,0xb444ad01
  40c968:	call   0xca496dac
  40c96d:	lahf   
  40c96e:	ror    al,1
  40c970:	xor    DWORD PTR [ebp-0x6a3765eb],edx
  40c976:	loopne 0x40c951
  40c978:	call   0x6b8:0x8b7e2e5d
  40c97f:	ret    0x88c6
  40c982:	add    BYTE PTR [ebx+0x34],cl
  40c985:	(bad)  
  40c986:	aam    0x53
  40c988:	aad    0xd2
  40c98a:	pop    ecx
  40c98b:	cwde   
  40c98c:	or     ah,BYTE PTR [esi+0xe310829]
  40c992:	fdiv   QWORD PTR [ecx]
  40c994:	icebp  
  40c995:	(bad)  
  40c998:	in     eax,0x36
  40c99a:	icebp  
  40c99b:	cdq    
  40c99c:	adc    DWORD PTR [ebp-0x75],ebp
  40c99f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9a0:	repnz mov ecx,?
  40c9a3:	call   DWORD PTR [eax+eax*8-0x6a]
  40c9a7:	push   ss
  40c9a8:	sbb    ecx,DWORD PTR [esi]
  40c9aa:	pop    esi
  40c9ab:	pusha  
  40c9ac:	mov    ebp,0xe752d243
  40c9b1:	mov    ds:0x966edf54,eax
  40c9b6:	jae    0x40c978
  40c9b8:	js     0x40c967
  40c9ba:	icebp  
  40c9bb:	lods   eax,DWORD PTR ds:[esi]
  40c9bc:	pop    es
  40c9bd:	sbb    DWORD PTR [ecx-0x67bcc950],0x7b
  40c9c4:	sub    ch,BYTE PTR [ebx+ebx*8+0x5]
  40c9c8:	cmp    DWORD PTR [ecx+esi*2],ecx
  40c9cb:	jmp    0x8930:0x5ed55f80
  40c9d2:	jp     0x40c983
  40c9d4:	stos   BYTE PTR es:[edi],al
  40c9d5:	iret   
  40c9d6:	inc    eax
  40c9d7:	mov    WORD PTR [ebp+0x7e],ds
  40c9da:	pop    ecx
  40c9db:	std    
  40c9dc:	jb     0x40c9fb
  40c9de:	inc    ecx
  40c9df:	in     al,dx
  40c9e0:	call   0x2b94a75e
  40c9e5:	(bad)  
  40c9e6:	std    
  40c9e7:	retf   0x49b6
  40c9ea:	bound  edx,QWORD PTR [ebp+0x372a4439]
  40c9f0:	jge    0x40c9e5
  40c9f2:	xor    bl,BYTE PTR [ebx+eiz*8]
  40c9f5:	dec    ebp
  40c9f6:	fistp  QWORD PTR [esi+0x3]
  40c9f9:	dec    esp
  40c9fa:	xor    eax,0x26674996
  40c9ff:	or     DWORD PTR [esi],ebx
  40ca01:	mov    bl,0x2d
  40ca03:	scas   eax,DWORD PTR es:[edi]
  40ca04:	pop    ss
  40ca05:	ficom  WORD PTR [ebx+0x39]
  40ca08:	pop    ds
  40ca09:	xchg   esi,eax
  40ca0a:	cmp    BYTE PTR [ebp+ebp*1+0x4fd13db5],0xd8
  40ca12:	cli    
  40ca13:	adc    al,0xa6
  40ca15:	cmp    edx,DWORD PTR [ebp+0x65]
  40ca18:	rcl    DWORD PTR [ebx+0x2c],cl
  40ca1b:	ja     0x40ca41
  40ca1d:	xchg   ebx,eax
  40ca1e:	cmp    eax,0xfbf02e59
  40ca23:	fist   DWORD PTR [esi-0x54]
  40ca26:	pop    ebp
  40ca27:	or     edx,edi
  40ca29:	add    eax,0xc8f5f535
  40ca2e:	repz inc ecx
  40ca30:	dec    esp
  40ca31:	test   BYTE PTR [edi],ah
  40ca33:	out    0xef,al
  40ca35:	outs   dx,BYTE PTR ds:[esi]
  40ca36:	addr16 add eax,0x34852f8e
  40ca3c:	dec    ecx
  40ca3d:	or     eax,ecx
  40ca3f:	ja     0x40c9c4
  40ca41:	fbld   TBYTE PTR [esi]
  40ca43:	pop    eax
  40ca44:	ror    BYTE PTR [eax+ebp*8],cl
  40ca47:	ss je  0x40ca76
  40ca4a:	and    eax,0xced7323a
  40ca4f:	dec    eax
  40ca50:	push   esi
  40ca51:	inc    eax
  40ca52:	cwde   
  40ca53:	pop    ecx
  40ca54:	arpl   WORD PTR [eax+0x60],ax
  40ca57:	dec    esp
  40ca58:	mov    bl,BYTE PTR [ecx-0x708034da]
  40ca5e:	lea    esp,[esi+0x352899ac]
  40ca64:	cli    
  40ca65:	data16 out dx,al
  40ca67:	inc    esi
  40ca68:	inc    ecx
  40ca69:	push   ebp
  40ca6a:	sti    
  40ca6b:	sbb    ecx,DWORD PTR [edx-0x3c11c76d]
  40ca71:	sbb    esi,DWORD PTR [eax+0x1c]
  40ca74:	sub    ch,BYTE PTR ds:0xb161f61d
  40ca7a:	add    esp,ebp
  40ca7c:	add    ch,BYTE PTR [ecx]
  40ca7e:	dec    BYTE PTR ds:0x835a06b4
  40ca84:	sbb    eax,0x8402f255
  40ca89:	stc    
  40ca8a:	dec    edx
  40ca8c:	inc    edi
  40ca8d:	adc    al,0x5b
  40ca8f:	xor    edi,esp
  40ca91:	rcl    BYTE PTR [eax+0x28],0x1a
  40ca95:	inc    esi
  40ca96:	inc    eax
  40ca97:	push   cs
  40ca98:	shl    edi,cl
  40ca9a:	jmp    0x9a7a:0x73d27463
  40caa1:	fisttp DWORD PTR [edi-0x12aec324]
  40caa7:	jnp    0x40caca
  40caa9:	imul   ecx,DWORD PTR [ecx],0x2d63dcba
  40caaf:	pop    ds
  40cab0:	dec    edx
  40cab1:	inc    ecx
  40cab2:	ds jp  0x40ca99
  40cab5:	jns    0x40cad0
  40cab7:	mov    eax,edi
  40cab9:	mov    ecx,0x7fb2c42e
  40cabe:	ins    BYTE PTR es:[edi],dx
  40cabf:	mov    al,0xd0
  40cac1:	enter  0x943e,0x3
  40cac5:	enter  0x4958,0xf8
  40cac9:	pop    ecx
  40caca:	pop    ds
  40cacb:	dec    edi
  40cacc:	adc    bh,BYTE PTR [ebx-0x30]
  40cacf:	dec    edi
  40cad0:	mov    al,0xf
  40cad2:	adc    eax,0x692c5e25
  40cad7:	pop    esi
  40cad8:	push   esp
  40cad9:	adc    BYTE PTR [ecx-0x26],dh
  40cadc:	je     0x40cb58
  40cade:	pop    esp
  40cadf:	jno    0x40cb17
  40cae1:	ror    DWORD PTR [edx-0x649e1260],0x70
  40cae8:	fistp  WORD PTR [edi-0x69e4d043]
  40caee:	xor    BYTE PTR [edi+0x4],ah
  40caf1:	call   0x2ae59ffb
  40caf6:	cmp    eax,0xc881a63c
  40cafb:	pop    esi
  40cafc:	shl    DWORD PTR [ecx],cl
  40cafe:	leave  
  40caff:	into   
  40cb00:	and    DWORD PTR [edi+0x29a3b78a],edx
  40cb06:	nop
  40cb07:	ins    BYTE PTR es:[edi],dx
  40cb08:	iret   
  40cb09:	xchg   DWORD PTR [ebx-0x6153b233],edx
  40cb0f:	hlt    
  40cb10:	pop    es
  40cb11:	mov    ecx,0xd82a0104
  40cb16:	and    edx,esp
  40cb18:	int3   
  40cb19:	inc    eax
  40cb1a:	sub    bl,BYTE PTR [esi+0x71]
  40cb1d:	out    0x6c,eax
  40cb1f:	cld    
  40cb20:	xchg   esi,eax
  40cb21:	mov    ebx,0xfc75ef74
  40cb26:	push   edi
  40cb27:	mov    esp,0xaed27f44
  40cb2c:	jmp    0xdd37e97d
  40cb31:	aas    
  40cb32:	sti    
  40cb33:	das    
  40cb34:	sahf   
  40cb35:	push   ebp
  40cb36:	not    BYTE PTR [ebp+ebx*1+0x3c]
  40cb3a:	aaa    
  40cb3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cb3c:	push   ebp
  40cb3d:	pop    ebx
  40cb3e:	ror    DWORD PTR [esi],1
  40cb40:	xchg   ebp,eax
  40cb41:	ins    BYTE PTR es:[edi],dx
  40cb42:	ror    eax,1
  40cb44:	fsubr  DWORD PTR [ebx+edx*8]
  40cb47:	mov    al,ds:0x725a2f33
  40cb4c:	cmp    eax,0x827969a4
  40cb51:	das    
  40cb52:	fucomip st,st(2)
  40cb54:	je     0x40cbca
  40cb56:	cli    
  40cb57:	cmc    
  40cb58:	into   
  40cb59:	push   cs
  40cb5a:	icebp  
  40cb5b:	pop    es
  40cb5c:	jno    0x40cbbc
  40cb5e:	xchg   ebp,eax
  40cb5f:	les    ecx,FWORD PTR [ebp+0xe]
  40cb62:	(bad)  
  40cb63:	mov    edx,0xc508a256
  40cb68:	(bad)  
  40cb69:	sub    al,0xb0
  40cb6b:	xchg   ecx,eax
  40cb6c:	loopne 0x40cb2a
  40cb6e:	in     eax,dx
  40cb6f:	xor    al,0xa6
  40cb71:	ds fcomp st(1)
  40cb74:	push   cs
  40cb75:	jecxz  0x40cb35
  40cb77:	push   ebx
  40cb78:	adc    ah,BYTE PTR [edi-0x1c]
  40cb7b:	ss pop ebp
  40cb7d:	pop    es
  40cb7e:	ss push 0xffffffb0
  40cb81:	add    eax,0xd497dca3
  40cb86:	add    DWORD PTR [esi-0x62],ebx
  40cb89:	inc    edx
  40cb8a:	adc    al,0x49
  40cb8c:	lahf   
  40cb8d:	fldcw  WORD PTR [edi+eax*1+0x657a39fd]
  40cb94:	mov    dh,0x35
  40cb96:	pop    eax
  40cb97:	mov    ah,0x7d
  40cb99:	xlat   BYTE PTR ds:[ebx]
  40cb9a:	add    al,0xbb
  40cb9c:	xlat   BYTE PTR ds:[ebx]
  40cb9d:	in     eax,0x98
  40cb9f:	xor    DWORD PTR [eax],eax
  40cba1:	int    0xe8
  40cba3:	xchg   ebp,eax
  40cba4:	jae    0xc0fc0cb5
  40cbaa:	repz aam 0x43
  40cbad:	dec    eax
  40cbae:	add    cl,BYTE PTR [esi*4-0x121463f9]
  40cbb5:	and    eax,0x407f8d2a
  40cbba:	dec    ecx
  40cbbb:	(bad)  
  40cbbd:	ins    BYTE PTR es:[edi],dx
  40cbbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbbf:	stos   BYTE PTR es:[edi],al
  40cbc0:	pop    esi
  40cbc1:	sar    DWORD PTR [ecx],0x68
  40cbc4:	jbe    0x40cc3e
  40cbc6:	inc    ebx
  40cbc7:	xchg   edi,eax
  40cbc8:	jae    0x40cc47
  40cbca:	ins    BYTE PTR es:[edi],dx
  40cbcb:	mov    eax,ds:0x6cd05da2
  40cbd0:	and    ebx,DWORD PTR [edi+0x32]
  40cbd3:	cmp    esp,DWORD PTR [eax+eiz*1]
  40cbd6:	stc    
  40cbd7:	test   al,0x7c
  40cbd9:	xor    BYTE PTR [eax-0x553ffe6c],ch
  40cbdf:	add    dl,al
  40cbe1:	icebp  
  40cbe2:	pop    ss
  40cbe3:	scas   al,BYTE PTR es:[edi]
  40cbe4:	inc    esp
  40cbe5:	aaa    
  40cbe6:	iret   
  40cbe7:	jg     0x40cb71
  40cbe9:	and    eax,0xe59114a
  40cbee:	push   ds
  40cbef:	jmp    0xa0d0:0x51c7474f
  40cbf6:	jns    0x40cc6b
  40cbf8:	jg     0x40cc4d
  40cbfa:	lahf   
  40cbfb:	adc    DWORD PTR [ebx],ebp
  40cbfd:	cmc    
  40cbfe:	out    dx,eax
  40cbff:	inc    esi
  40cc00:	mov    es:0x5763ac74,al
  40cc06:	pop    ss
  40cc07:	jns    0x40cb9b
  40cc09:	dec    ecx
  40cc0a:	aad    0xf4
  40cc0c:	jnp    0x40cc1f
  40cc0e:	jns    0x40cc17
  40cc10:	dec    ecx
  40cc11:	aaa    
  40cc12:	popa   
  40cc13:	inc    ebp
  40cc14:	or     eax,0xde9748d6
  40cc19:	enter  0xe16,0xf1
  40cc1d:	arpl   si,bx
  40cc1f:	ins    DWORD PTR es:[edi],dx
  40cc20:	arpl   WORD PTR [ecx+0x60],ax
  40cc23:	jo     0x40cc7d
  40cc25:	adc    esp,DWORD PTR [edi+esi*2]
  40cc28:	gs adc al,0xa1
  40cc2b:	repnz scas al,BYTE PTR es:[edi]
  40cc2d:	shr    DWORD PTR [eax-0x32],0xcf
  40cc31:	xchg   ecx,eax
  40cc32:	xchg   edi,eax
  40cc33:	loop   0x40cc4f
  40cc35:	ja     0x40cc4e
  40cc37:	into   
  40cc38:	xor    al,0x3b
  40cc3a:	jmp    0x1132:0xef1eafc3
  40cc41:	pop    eax
  40cc42:	mov    ds:0x3dcaaf7,eax
  40cc47:	dec    eax
  40cc48:	add    eax,0xb8d10289
  40cc4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc4e:	lahf   
  40cc4f:	xor    DWORD PTR [ebx+0x286ffd0f],edx
  40cc55:	adc    eax,0x3086bd37
  40cc5a:	sbb    bl,BYTE PTR [ebp+0x61]
  40cc5d:	mov    cl,0xe7
  40cc5f:	aam    0xfc
  40cc61:	inc    esp
  40cc62:	jns    0x40ccd8
  40cc64:	aad    0xe5
  40cc66:	jno    0x40cc15
  40cc68:	inc    ecx
  40cc69:	out    dx,eax
  40cc6a:	and    eax,0x3af7f061
  40cc6f:	outs   dx,DWORD PTR ds:[esi]
  40cc70:	sub    DWORD PTR [edi],esp
  40cc72:	push   ecx
  40cc73:	inc    esp
  40cc74:	sub    al,0xa6
  40cc76:	fnstcw WORD PTR [ebx+0x5345059f]
  40cc7c:	or     esp,ebp
  40cc7e:	outs   dx,DWORD PTR ds:[esi]
  40cc7f:	and    eax,0x8b8928e4
  40cc84:	imul   ebp
  40cc86:	mov    ah,0x9b
  40cc88:	pushf  
  40cc89:	mov    esp,0x6629fed3
  40cc8e:	xor    DWORD PTR [ecx],ebx
  40cc90:	xor    BYTE PTR [ebx],bl
  40cc92:	aaa    
  40cc93:	xchg   esp,eax
  40cc94:	and    BYTE PTR [edi-0x6033d9a2],dh
  40cc9a:	dec    edi
  40cc9b:	lahf   
  40cc9c:	lea    esi,[edx+0x6778447a]
  40cca2:	inc    esp
  40cca3:	pop    ss
  40cca4:	lds    edx,FWORD PTR [edi]
  40cca6:	not    cl
  40cca8:	mov    esp,0xdc6144e1
  40ccad:	adc    eax,0x8fdb5bf8
  40ccb2:	in     eax,0xca
  40ccb4:	add    ebx,eax
  40ccb6:	pop    eax
  40ccb7:	iret   
  40ccb8:	jge    0x40cc6b
  40ccba:	mov    al,0x31
  40ccbc:	jle    0x40cc54
  40ccbe:	call   0x897:0x53aa7bf7
  40ccc5:	popa   
  40ccc6:	add    DWORD PTR [edx-0x226d581a],esp
  40cccc:	(bad)  [edi+0x52a05951]
  40ccd2:	dec    edx
  40ccd3:	and    DWORD PTR [ebx],eax
  40ccd5:	inc    edx
  40ccd6:	and    bl,BYTE PTR [eax-0x53]
  40ccd9:	xchg   ecx,eax
  40ccda:	retf   
  40ccdb:	outs   dx,DWORD PTR ds:[esi]
  40ccdc:	or     BYTE PTR [edi-0x1aa8cfd0],dh
  40cce2:	push   0xa24c1536
  40cce7:	xchg   ecx,eax
  40cce8:	pop    eax
  40cce9:	cmp    BYTE PTR [esi+0x44cc6693],cl
  40ccef:	mov    ah,0x64
  40ccf1:	or     eax,0x1746db89
  40ccf6:	mul    BYTE PTR [edx+0x7a]
  40ccf9:	ret    
  40ccfa:	call   0x5e20:0x43f3c069
  40cd01:	pop    edi
  40cd02:	dec    esp
  40cd03:	retf   0x8f20
  40cd06:	add    DWORD PTR [ebx-0x50d659e7],esp
  40cd0c:	mov    esp,0xd4e6256a
  40cd11:	xchg   esp,eax
  40cd12:	cmp    ch,dl
  40cd14:	aaa    
  40cd15:	adc    DWORD PTR [edi+0xbccbb2f],eax
  40cd1b:	sbb    eax,0xff0b3602
  40cd20:	adc    al,0xfb
  40cd22:	jl     0x40ccf8
  40cd24:	xor    BYTE PTR [edx-0x21],cl
  40cd27:	hlt    
  40cd28:	int3   
  40cd29:	mov    eax,ds:0x6116a8b7
  40cd2e:	or     BYTE PTR [ecx+edx*4],cl
  40cd31:	pop    ebx
  40cd32:	and    eax,0xac9bf58f
  40cd37:	mov    al,ds:0x81297f16
  40cd3c:	dec    edi
  40cd3d:	fisubr WORD PTR [eax-0xeb30177]
  40cd43:	fldcw  WORD PTR [edi]
  40cd45:	mov    WORD PTR ds:0xb4fe0b5b,ss
  40cd4b:	mov    gs,WORD PTR [eax-0x17]
  40cd4e:	stc    
  40cd4f:	out    dx,al
  40cd50:	cmovb  esi,DWORD PTR [edx]
  40cd53:	push   0x55
  40cd55:	retf   0xf1e5
  40cd58:	ds push edi
  40cd5a:	(bad)  
  40cd5b:	rcl    DWORD PTR [ecx+0x5ba9a177],cl
  40cd61:	inc    ecx
  40cd62:	xor    eax,DWORD PTR [ebx+0x44fab4cd]
  40cd68:	cdq    
  40cd69:	mov    al,0xe7
  40cd6b:	sbb    edi,DWORD PTR [esi]
  40cd6d:	mov    ah,0xf9
  40cd6f:	fwait
  40cd70:	call   0x2f0a:0xab294879
  40cd77:	dec    edx
  40cd78:	pushf  
  40cd79:	push   ss
  40cd7a:	sub    eax,0x41b3d8a1
  40cd7f:	dec    esp
  40cd80:	cmp    al,0xc5
  40cd82:	rol    bh,cl
  40cd84:	or     eax,0xb08eab41
  40cd89:	sub    al,BYTE PTR [ecx+0xf]
  40cd8c:	pop    edx
  40cd8d:	push   0x139b68ea
  40cd92:	cwde   
  40cd93:	add    cl,BYTE PTR [esp+edi*2+0x63]
  40cd97:	dec    eax
  40cd98:	inc    ebx
  40cd99:	rcl    esi,cl
  40cd9b:	pop    esi
  40cd9c:	lidtd  [edx]
  40cd9f:	cmp    eax,edx
  40cda1:	cmc    
  40cda2:	add    ah,dl
  40cda4:	mov    edx,0x4556ef8e
  40cda9:	and    BYTE PTR [ebx+ebp*8-0x189ce09],0x33
  40cdb1:	cmp    ebx,edx
  40cdb3:	ds inc esi
  40cdb5:	cmp    ebp,DWORD PTR [ecx+0x43b467d9]
  40cdbb:	test   al,0xba
  40cdbd:	inc    esp
  40cdbe:	out    dx,eax
  40cdbf:	in     al,0xe8
  40cdc1:	push   esi
  40cdc2:	cmp    BYTE PTR [esi+0x4b5a57e4],bl
  40cdc8:	jge    0x40cdf3
  40cdca:	scas   eax,DWORD PTR es:[edi]
  40cdcb:	mov    dl,0x4e
  40cdcd:	jb     0x40cda3
  40cdcf:	call   0x825f4a21
  40cdd4:	popa   
  40cdd5:	cdq    
  40cdd6:	or     DWORD PTR [eax],edi
  40cdd8:	in     eax,0x9e
  40cdda:	mov    esi,0xbdd0593c
  40cddf:	push   ebp
  40cde0:	mov    ebp,0xc1005526
  40cde5:	pusha  
  40cde6:	data16 cmp BYTE PTR [eax],cl
  40cde9:	cld    
  40cdea:	in     eax,0x78
  40cdec:	imul   ebp
  40cdee:	xor    cl,0x3c
  40cdf1:	inc    edx
  40cdf2:	fcmovb st,st(0)
  40cdf4:	inc    ebx
  40cdf5:	inc    ecx
  40cdf6:	inc    edx
  40cdf7:	push   edi
  40cdf8:	mov    al,ds:0x9db12b80
  40cdfd:	jnp    0x40cdf4
  40cdff:	int    0x19
  40ce01:	(bad)  
  40ce02:	jg     0x40cdd4
  40ce04:	out    0xed,eax
  40ce06:	xchg   edx,eax
  40ce07:	pop    ecx
  40ce08:	out    dx,al
  40ce09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce0a:	sbb    dh,BYTE PTR [edi+0x74]
  40ce0d:	pop    ebp
  40ce0e:	and    dh,BYTE PTR [edi+0x13bc3fb2]
  40ce14:	enter  0x6fd8,0xa
  40ce18:	sub    ch,BYTE PTR [esi-0x672620e]
  40ce1e:	pop    esp
  40ce1f:	push   ebx
  40ce20:	(bad)  
  40ce21:	mov    dh,0x32
  40ce23:	clc    
  40ce24:	dec    esi
  40ce25:	push   esi
  40ce26:	mov    ebx,edi
  40ce28:	mov    dh,0x80
  40ce2a:	jno    0x40cde1
  40ce2c:	add    BYTE PTR [edx],bh
  40ce2e:	and    ah,BYTE PTR [ebx+ebx*4]
  40ce31:	inc    edx
  40ce32:	aad    0x82
  40ce34:	add    BYTE PTR [esi+0x3c],al
  40ce37:	sbb    BYTE PTR gs:[ebx+0x31da02cc],0xff
  40ce3f:	pop    esi
  40ce40:	test   eax,0x9bc37853
  40ce45:	fstp   QWORD PTR [eax]
  40ce47:	add    ecx,edx
  40ce49:	jle    0x40ce2d
  40ce4b:	fisttp QWORD PTR [edx]
  40ce4d:	mov    bl,0xb3
  40ce4f:	pop    es
  40ce50:	call   0xbf5f:0x54ec1491
  40ce57:	pushf  
  40ce58:	and    DWORD PTR [ecx],eax
  40ce5a:	jo     0x40ce76
  40ce5c:	cmp    dh,BYTE PTR [edi]
  40ce5e:	cmp    al,0x67
  40ce60:	sbb    al,0x6
  40ce62:	cdq    
  40ce63:	sar    DWORD PTR [ecx+0x83e1543],1
  40ce69:	push   ss
  40ce6a:	push   es
  40ce6b:	ins    BYTE PTR es:[edi],dx
  40ce6c:	mov    edi,0x18067ea4
  40ce71:	xchg   ebx,eax
  40ce72:	pusha  
  40ce73:	mov    bl,0x5b
  40ce75:	(bad)  
  40ce76:	pop    esi
  40ce77:	sbb    eax,0x15a44df5
  40ce7c:	ins    BYTE PTR es:[edi],dx
  40ce7d:	mov    ch,0xe4
  40ce7f:	dec    ecx
  40ce80:	mov    ebx,esi
  40ce82:	dec    ecx
  40ce83:	jg     0x40ce89
  40ce85:	and    BYTE PTR [edi+edx*2+0x5d8e26cb],bl
  40ce8c:	popf   
  40ce8d:	outs   dx,DWORD PTR ds:[esi]
  40ce8e:	mov    cl,0x33
  40ce90:	addr16 xor edi,ebp
  40ce93:	mov    cl,0x9d
  40ce95:	pop    ebx
  40ce96:	xchg   edi,eax
  40ce97:	fist   WORD PTR [eax+0x5b5a8637]
  40ce9d:	cmp    BYTE PTR [eax],ah
  40ce9f:	xor    DWORD PTR [edi+0x31],esp
  40cea2:	fnstcw WORD PTR [esi+edx*2]
  40cea5:	sbb    edx,eax
  40cea7:	xchg   esi,eax
  40cea8:	std    
  40cea9:	loopne 0x40cf13
  40ceab:	data16 int 0x3b
  40ceae:	mov    dh,0x6e
  40ceb0:	(bad)  
  40ceb1:	sub    DWORD PTR [edx-0x70],edi
  40ceb4:	pushf  
  40ceb5:	aam    0xe5
  40ceb7:	pusha  
  40ceb8:	repz lea ecx,[esi-0x3a8f6992]
  40cebf:	dec    eax
  40cec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cec1:	jns    0x40ce5c
  40cec3:	sub    al,0x9b
  40cec5:	cmp    BYTE PTR [ecx+0x3f],0x35
  40cec9:	mov    eax,ds:0x272697ec
  40cece:	jecxz  0x40cf2c
  40ced0:	mov    ebx,0x79cd42a3
  40ced5:	loop   0x40cecb
  40ced7:	sar    bl,cl
  40ced9:	sbb    al,0x34
  40cedb:	pop    eax
  40cedc:	and    ah,BYTE PTR ds:0x7b82842
  40cee2:	fisttp QWORD PTR [esi+0x7cce21b9]
  40cee8:	dec    edi
  40cee9:	push   edi
  40ceea:	add    edi,ebx
  40ceec:	sar    DWORD PTR [edx+0x6516e20],1
  40cef2:	xchg   esi,eax
  40cef3:	or     DWORD PTR [edi+ebx*2],edi
  40cef6:	in     al,0x77
  40cef8:	int3   
  40cef9:	stos   DWORD PTR es:[edi],eax
  40cefa:	data16 mov ds:0xcbb1c30d,al
  40cf00:	shr    BYTE PTR [eax-0x3a],0xe9
  40cf04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf05:	jo     0x40cf56
  40cf07:	int3   
  40cf08:	enter  0xbf91,0x14
  40cf0c:	cmp    BYTE PTR ds:0xcb7639c5,0xa
  40cf13:	sub    dh,BYTE PTR [eax-0x7b]
  40cf16:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40cf18:	clc    
  40cf19:	sbb    edx,ebp
  40cf1b:	jns    0x40cec6
  40cf1d:	cld    
  40cf1e:	stc    
  40cf1f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf20:	sub    DWORD PTR [ebx-0x27],esi
  40cf23:	bound  ebp,QWORD PTR [ebx-0x2c]
  40cf26:	shl    DWORD PTR gs:[ebx+0x276632d0],cl
  40cf2d:	(bad)  
  40cf2f:	jle    0x40cf37
  40cf31:	or     DWORD PTR [edx],ebp
  40cf33:	mov    esp,0x86e28490
  40cf38:	in     al,0xc9
  40cf3a:	cmp    al,0xad
  40cf3c:	adc    bh,dh
  40cf3e:	fsubp  st(2),st
  40cf40:	sbb    DWORD PTR [edx+0x749d375b],edx
  40cf46:	mov    ch,0x2e
  40cf48:	ins    BYTE PTR es:[edi],dx
  40cf49:	(bad)  
  40cf4a:	out    0x41,al
  40cf4c:	or     esi,0x20
  40cf4f:	sbb    al,0x3e
  40cf51:	and    al,0xe3
  40cf53:	test   BYTE PTR [edi],0x72
  40cf56:	pop    ds
  40cf57:	sub    eax,0xe2167eb8
  40cf5c:	or     eax,0x98e5aa9e
  40cf61:	sahf   
  40cf62:	jb     0x40cf7c
  40cf64:	out    0xa8,eax
  40cf66:	jmp    0x7c7c:0x6b2027b2
  40cf6d:	fstp   DWORD PTR [esi+ebp*1]
  40cf70:	int3   
  40cf71:	inc    eax
  40cf72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf73:	mov    ds,WORD PTR [ebp+0x0]
  40cf76:	sbb    al,BYTE PTR [esi-0x65]
  40cf79:	pop    ecx
  40cf7a:	jmp    DWORD PTR [esi+ebx*1]
  40cf7d:	neg    al
  40cf7f:	scas   eax,DWORD PTR es:[edi]
  40cf80:	fnstenv [ebx]
  40cf82:	inc    ecx
  40cf83:	add    eax,0xaece0ac5
  40cf88:	xor    al,0x81
  40cf8a:	aam    0xbc
  40cf8c:	xor    al,0xd2
  40cf8e:	add    eax,0x60553250
  40cf93:	lds    edi,FWORD PTR [eax]
  40cf95:	das    
  40cf96:	lds    edi,FWORD PTR [esi]
  40cf98:	sahf   
  40cf99:	dec    edx
  40cf9a:	jne    0x40cf9d
  40cf9c:	or     al,0xfc
  40cf9e:	in     al,0x6e
  40cfa0:	call   0x41a43ca2
  40cfa5:	lods   al,BYTE PTR ds:[esi]
  40cfa6:	ja     0x40cf35
  40cfa8:	push   0xe7b1214a
  40cfad:	xor    BYTE PTR [ebx-0x15],ah
  40cfb0:	adc    eax,0x8b156496
  40cfb5:	mov    WORD PTR ss:[edx-0x5e],fs
  40cfb9:	dec    edi
  40cfba:	outs   dx,DWORD PTR ds:[esi]
  40cfbb:	add    al,0x80
  40cfbd:	add    eax,0x6b0211d7
  40cfc2:	in     eax,dx
  40cfc3:	popf   
  40cfc4:	cmp    eax,0xb028cf11
  40cfc9:	nop
  40cfca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cfcb:	pop    edx
  40cfcc:	inc    esi
  40cfcd:	sar    DWORD PTR [eax-0x526fba32],cl
  40cfd3:	fidivr DWORD PTR [ebx+0x26]
  40cfd6:	loopne 0x40cfa2
  40cfd8:	dec    edx
  40cfd9:	sbb    DWORD PTR [edi+0x1d],edx
  40cfdc:	and    eax,0x3fc23f18
  40cfe1:	push   edi
  40cfe2:	and    eax,0x84f5cb8c
  40cfe7:	fbld   TBYTE PTR [eax-0xf093e2b]
  40cfed:	xor    eax,esp
  40cfef:	xchg   ebx,eax
  40cff0:	dec    edi
  40cff1:	les    esp,FWORD PTR [ecx]
  40cff3:	cmp    DWORD PTR [edx+edx*4+0x722d2bc7],ebp
  40cffa:	and    edi,DWORD PTR [edi-0x4d08cedd]
  40d000:	inc    ecx
  40d001:	sti    
  40d002:	sbb    eax,0x8eb04ba5
  40d007:	or     eax,0xac3a7bc4
  40d00c:	or     ch,BYTE PTR [ecx+0x37a1a13]
  40d012:	mov    bl,0xee
  40d014:	xchg   ebp,eax
  40d015:	icebp  
  40d016:	sub    BYTE PTR ds:0xd4c615f3,ch
  40d01c:	into   
  40d01d:	(bad)  
  40d01e:	jg     0x40cfa8
  40d020:	mov    dh,0x0
  40d022:	cmc    
  40d023:	not    BYTE PTR [ebx]
  40d025:	scas   al,BYTE PTR es:[edi]
  40d026:	or     ah,BYTE PTR [edi-0x25]
  40d029:	hlt    
  40d02a:	arpl   WORD PTR [esi+0x51b97114],si
  40d030:	(bad)  
  40d031:	fiadd  DWORD PTR [edx-0x1]
  40d034:	mov    al,BYTE PTR [ebx+0x0]
  40d037:	outs   dx,BYTE PTR ds:[esi]
  40d038:	stos   DWORD PTR es:[edi],eax
  40d039:	test   eax,0x2cf3848a
  40d03e:	add    cl,BYTE PTR [edi]
  40d040:	popf   
  40d041:	lods   al,BYTE PTR ds:[esi]
  40d042:	mov    eax,0x744b0c31
  40d047:	adc    DWORD PTR [ecx+0x3eb8f36c],eax
  40d04d:	rcr    BYTE PTR [edi+0x6a],cl
  40d050:	aad    0xb1
  40d052:	scas   al,BYTE PTR es:[edi]
  40d053:	push   esi
  40d054:	mov    ecx,0x21483f82
  40d059:	or     dh,bh
  40d05b:	push   ebx
  40d05c:	jbe    0x40d0d6
  40d05e:	mov    ds:0xaf093c4f,eax
  40d063:	mov    eax,ds:0xb5fd5d09
  40d068:	ficomp WORD PTR [edi+esi*4]
  40d06b:	sar    BYTE PTR [ebx-0x539a377d],1
  40d071:	outs   dx,BYTE PTR ds:[esi]
  40d072:	lahf   
  40d073:	jno    0x40d05b
  40d075:	dec    edx
  40d076:	outs   dx,BYTE PTR ds:[esi]
  40d077:	out    dx,al
  40d078:	lds    ebx,FWORD PTR [ebx+ecx*8]
  40d07b:	inc    esp
  40d07c:	mov    ah,ah
  40d07e:	popf   
  40d07f:	(bad)  
  40d080:	lahf   
  40d081:	xlat   BYTE PTR ds:[ebx]
  40d082:	jb     0x40d0b3
  40d084:	adc    eax,0x63c5d5ec
  40d089:	out    dx,al
  40d08a:	imul   esp,DWORD PTR cs:[edx],0x22
  40d08e:	test   BYTE PTR [ecx+edi*1-0xaea870b],bl
  40d095:	dec    eax
  40d096:	call   0x1b9d8720
  40d09b:	add    al,0x4
  40d09d:	push   esi
  40d09e:	fidiv  WORD PTR [ebx-0x62a8ff3b]
  40d0a4:	inc    edi
  40d0a5:	lods   eax,DWORD PTR ds:[esi]
  40d0a6:	inc    ebp
  40d0a7:	mov    ch,0xea
  40d0a9:	cdq    
  40d0aa:	sub    al,0x16
  40d0ac:	test   al,0x45
  40d0ae:	leave  
  40d0af:	test   esp,esi
  40d0b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0b2:	int3   
  40d0b3:	mov    edx,esi
  40d0b5:	test   al,0xc4
  40d0b7:	cmovae edx,DWORD PTR [ebp-0x306b679c]
  40d0be:	dec    edx
  40d0bf:	adc    eax,0xa1c7ac94
  40d0c4:	addr16 inc edi
  40d0c6:	sbb    BYTE PTR [esi],cl
  40d0c8:	lock inc esi
  40d0ca:	mov    al,0x8f
  40d0cc:	inc    esi
  40d0cd:	push   esi
  40d0ce:	sbb    al,0x3b
  40d0d0:	fstp   TBYTE PTR [eax-0x74]
  40d0d3:	ror    DWORD PTR ds:0xda1a7c22,0x16
  40d0da:	loopne 0x40d133
  40d0dc:	jle    0x40d082
  40d0de:	mov    ch,0x63
  40d0e0:	or     eax,0x4ed12545
  40d0e5:	sub    BYTE PTR [ecx+esi*1-0x69],0x16
  40d0ea:	fist   DWORD PTR [ebp+eiz*1-0x49b842cc]
  40d0f1:	call   0x3a65:0xc02fbfd2
  40d0f8:	mov    cl,bh
  40d0fa:	mov    eax,ds:0xf64b767
  40d0ff:	lods   eax,DWORD PTR ds:[esi]
  40d100:	xchg   ebx,edx
  40d102:	jo     0x40d086
  40d104:	test   eax,0xfb5874a0
  40d109:	mov    eax,ds:0x6db10bae
  40d10e:	jo     0x40d0d5
  40d110:	stos   DWORD PTR es:[edi],eax
  40d111:	sti    
  40d112:	or     eax,0x4e131889
  40d117:	mov    dl,0xa7
  40d119:	shl    BYTE PTR [ebx],cl
  40d11b:	push   esp
  40d11c:	mov    esi,0x8309b12b
  40d121:	mov    ebp,0x96460434
  40d126:	dec    esi
  40d127:	int3   
  40d128:	adc    DWORD PTR [eax+0x40c9f5f6],ebx
  40d12e:	dec    eax
  40d12f:	mov    ch,bl
  40d131:	xor    ebx,DWORD PTR cs:[eax-0x725419ec]
  40d138:	shr    BYTE PTR [edi+0x6b],1
  40d13b:	mov    ?,eax
  40d13d:	pusha  
  40d13e:	inc    edx
  40d13f:	ret    0x4995
  40d142:	mov    esi,0xdd0088c8
  40d147:	loopne 0x40d17f
  40d149:	or     dh,BYTE PTR [ebx]
  40d14b:	int    0x78
  40d14d:	repnz arpl WORD PTR [edx-0x69],sp
  40d151:	mov    ?,WORD PTR [ebx-0xfe38779]
  40d157:	jo     0x40d0d9
  40d159:	call   0xba8b:0xd0bdc18a
  40d160:	div    DWORD PTR [edx-0x6b]
  40d163:	and    al,0x58
  40d165:	sbb    DWORD PTR [ebx-0xb95dd63],esp
  40d16b:	jae    0x40d16f
  40d16d:	cmp    eax,0xf6c6311c
  40d172:	mov    ch,0xb9
  40d174:	outs   dx,BYTE PTR ds:[esi]
  40d175:	cld    
  40d176:	and    eax,0x70a296eb
  40d17b:	add    BYTE PTR [ebp-0x2ddd8b14],0xff
  40d182:	jl     0x40d200
  40d184:	sbb    dl,BYTE PTR [edi+0x49b83823]
  40d18a:	and    esp,eax
  40d18c:	out    0xcf,al
  40d18e:	xchg   DWORD PTR ds:0xc9b98855,edx
  40d194:	ffree  st(2)
  40d196:	sub    bl,ch
  40d198:	imul   ebx,DWORD PTR [di],0xffffff89
  40d19c:	popf   
  40d19d:	push   0xd30b1ead
  40d1a2:	test   DWORD PTR [edi],edi
  40d1a4:	mov    BYTE PTR [ebp-0x42e33d87],al
  40d1aa:	test   al,0xa3
  40d1ac:	or     eax,0xb6fd9158
  40d1b1:	js     0x40d14d
  40d1b3:	aaa    
  40d1b4:	xor    al,0xc6
  40d1b6:	adc    ah,BYTE PTR [ebp-0x29]
  40d1b9:	iret   
  40d1ba:	es (bad) 
  40d1bc:	test   al,0xdb
  40d1be:	in     eax,0x29
  40d1c0:	out    0x4c,eax
  40d1c2:	dec    DWORD PTR [edi+esi*2]
  40d1c5:	aad    0xc4
  40d1c7:	cmp    ebx,esi
  40d1c9:	scas   al,BYTE PTR es:[edi]
  40d1ca:	cs push es
  40d1cc:	cdq    
  40d1cd:	or     eax,0x2bc05dbf
  40d1d2:	mov    ch,0x28
  40d1d4:	mov    ds:0x2798fbfb,eax
  40d1d9:	xor    al,0x92
  40d1db:	mov    edx,0xeccdc6c4
  40d1e0:	lea    esp,[eax]
  40d1e2:	push   ebx
  40d1e3:	jae    0x40d1d1
  40d1e5:	in     al,dx
  40d1e6:	mov    dh,0x11
  40d1e8:	and    BYTE PTR [ebx+edx*4+0x25],al
  40d1ec:	push   0x2e
  40d1ee:	sbb    bl,ah
  40d1f0:	fcomp  DWORD PTR [ebx+0xd]
  40d1f3:	fmul   st(0),st
  40d1f5:	daa    
  40d1f6:	fst    DWORD PTR [ebx+0x3f6ee4db]
  40d1fc:	fsub   QWORD PTR [edx-0x38]
  40d1ff:	add    BYTE PTR [ebp-0x12],ah
  40d202:	dec    DWORD PTR [edx]
  40d204:	ret    
  40d205:	add    BYTE PTR [eax+0x59],ah
  40d208:	xor    esi,ebp
  40d20a:	sbb    BYTE PTR [ecx],0xbe
  40d20d:	pop    esp
  40d20e:	mov    BYTE PTR [eax+esi*2-0x7e],0xcd
  40d213:	sub    dl,bh
  40d215:	mov    edx,ecx
  40d217:	mov    ah,0xdd
  40d219:	mov    ebp,0x50b49e58
  40d21e:	inc    eax
  40d21f:	popf   
  40d220:	loop   0x40d266
  40d222:	ja     0x40d224
  40d224:	push   0xffffffa6
  40d226:	add    al,0x9f
  40d228:	stos   BYTE PTR es:[edi],al
  40d229:	retf   0x163f
  40d22c:	in     al,dx
  40d22d:	mov    bh,0xf5
  40d22f:	or     DWORD PTR ds:0xe03eda27,edx
  40d235:	push   0x43
  40d237:	inc    edi
  40d238:	out    0x71,al
  40d23a:	cs xchg edi,eax
  40d23c:	fcom   st(5)
  40d23e:	xchg   DWORD PTR [edx+0x7d],edi
  40d241:	loope  0x40d24b
  40d243:	jmp    0x40d1ca
  40d245:	aaa    
  40d246:	or     bh,BYTE PTR ds:[ebx-0x63308c5c]
  40d24d:	and    dl,bh
  40d24f:	aaa    
  40d250:	hlt    
  40d251:	inc    ebp
  40d252:	inc    ecx
  40d253:	ss xchg ebp,eax
  40d255:	or     eax,0x144e728
  40d25a:	push   ecx
  40d25b:	js     0x40d263
  40d25d:	cs pop esp
  40d25f:	es fmul st,st(0)
  40d262:	std    
  40d263:	test   BYTE PTR [eax],0x16
  40d266:	repnz adc DWORD PTR [ecx+0x2d],ebp
  40d26a:	sbb    al,0x1
  40d26c:	(bad)  
  40d26e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d26f:	xor    BYTE PTR [edx],bl
  40d271:	mov    edi,edi
  40d273:	cmp    ch,BYTE PTR [ebx-0x2ae5e8ae]
  40d279:	cmc    
  40d27a:	and    al,0x77
  40d27c:	jb     0x40d222
  40d27e:	std    
  40d27f:	adc    BYTE PTR [eax+0x334bf05b],dh
  40d285:	lods   eax,DWORD PTR ss:[si]
  40d288:	mov    ecx,0x373ba6cb
  40d28d:	jo     0x40d234
  40d28f:	lock hlt 
  40d291:	jns    0x40d237
  40d293:	ror    ah,1
  40d295:	ins    BYTE PTR es:[edi],dx
  40d296:	int3   
  40d297:	xchg   DWORD PTR [ebp-0x20],eax
  40d29a:	sbb    ebp,DWORD PTR [edx+0x67]
  40d29d:	(bad)  
  40d29f:	icebp  
  40d2a0:	mul    DWORD PTR [ecx+0x68c70ff]
  40d2a6:	add    DWORD PTR [esi-0x3735375e],esi
  40d2ac:	cmp    eax,0x33b0c041
  40d2b1:	inc    edx
  40d2b2:	call   0xf1e3010a
  40d2b7:	pop    ebx
  40d2b8:	inc    edx
  40d2b9:	pop    esi
  40d2ba:	jmp    DWORD PTR [edi]
  40d2bc:	imul   eax,DWORD PTR [esp+eiz*8+0x9],0x79242b6d
  40d2c4:	xchg   ebp,eax
  40d2c5:	(bad)  
  40d2c6:	mov    al,cs:0xa1f1cedb
  40d2cc:	rcl    BYTE PTR [esi-0x1beb9df6],cl
  40d2d2:	test   al,0x49
  40d2d4:	pusha  
  40d2d5:	inc    ebp
  40d2d6:	add    esp,edi
  40d2d8:	push   ds
  40d2d9:	int3   
  40d2da:	in     eax,dx
  40d2db:	adc    ecx,edi
  40d2dd:	cmp    DWORD PTR [edi+0x5f9cdb24],eax
  40d2e3:	sub    eax,0x9a85f8dd
  40d2e8:	call   0xb099b5b7
  40d2ed:	mov    cx,0x513e
  40d2f1:	pop    es
  40d2f2:	mov    DWORD PTR [edi+0x655fa8ba],esp
  40d2f8:	ds dec esi
  40d2fa:	int    0x4b
  40d2fc:	es idiv ch
  40d2ff:	sbb    DWORD PTR [eax-0x7638d566],ebp
  40d305:	and    ebx,edi
  40d307:	sbb    al,0x8a
  40d309:	cli    
  40d30a:	xchg   ebp,eax
  40d30b:	arpl   ax,si
  40d30d:	and    DWORD PTR [esi],esi
  40d30f:	mov    edi,0xbeb99a5c
  40d314:	cmp    bl,BYTE PTR [ebx+esi*4]
  40d317:	adc    DWORD PTR [ecx-0x69c03e42],edx
  40d31d:	leave  
  40d31e:	cmp    BYTE PTR [ebp+0x5d],ch
  40d321:	inc    esp
  40d322:	pop    esi
  40d323:	ds inc esp
  40d325:	mov    eax,0x4ee66dbb
  40d32a:	lock and BYTE PTR [edi],dh
  40d32d:	push   0xf
  40d32f:	xchg   edx,eax
  40d330:	fst    QWORD PTR [eax+0x6]
  40d333:	js     0x40d390
  40d335:	xchg   ebx,eax
  40d336:	aas    
  40d337:	or     dl,bl
  40d339:	inc    ebp
  40d33a:	fnstsw WORD PTR [ecx-0x3c4746a5]
  40d340:	fisttp WORD PTR ds:0x869afa8a
  40d346:	xor    al,0x29
  40d348:	aas    
  40d349:	xlat   BYTE PTR ds:[ebx]
  40d34a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d34b:	push   esp
  40d34c:	imul   ebp,DWORD PTR [edi],0x64abe511
  40d352:	mov    ds:0xe165e7ce,eax
  40d357:	adc    BYTE PTR [eax],ah
  40d359:	jmp    0x6029:0x882b78f4
  40d360:	sub    al,0xc5
  40d362:	dec    ecx
  40d363:	pushf  
  40d364:	jnp    0x40d38d
  40d366:	div    BYTE PTR [ebp-0xc9025ec]
  40d36c:	mov    al,ds:0xe6dd8947
  40d371:	out    0xe3,eax
  40d373:	mov    dl,0xd
  40d375:	add    ch,BYTE PTR [ecx+0x170e0c00]
  40d37b:	fs xchg ebx,eax
  40d37d:	push   edi
  40d37e:	and    BYTE PTR [esi+0x2],0xb0
  40d382:	aas    
  40d383:	adc    DWORD PTR ds:0x406228b7,ecx
  40d389:	mov    ds,WORD PTR [ecx+0x39f9f214]
  40d38f:	cmp    DWORD PTR [edi+0x919ed31],ebx
  40d395:	add    eax,0x86ea9e03
  40d39a:	sbb    DWORD PTR [ebp+0x3b484232],0x60
  40d3a1:	or     dh,BYTE PTR [ebx-0x7a585dfc]
  40d3a7:	xchg   ebx,eax
  40d3a8:	bound  ecx,QWORD PTR fs:[ecx]
  40d3ab:	out    dx,eax
  40d3ac:	cmp    ch,0xc
  40d3af:	fcomp  QWORD PTR [edi-0x1da868a2]
  40d3b5:	cmc    
  40d3b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3b7:	lock sbb esi,DWORD PTR [edi]
  40d3ba:	std    
  40d3bb:	sbb    ecx,edi
  40d3bd:	iret   
  40d3be:	mov    BYTE PTR [eax-0x433e82c7],bh
  40d3c4:	adc    ebx,DWORD PTR gs:[ebx]
  40d3c7:	jecxz  0x40d3ad
  40d3c9:	xor    DWORD PTR [ebp+eax*1-0x75],esp
  40d3cd:	scas   eax,DWORD PTR es:[edi]
  40d3ce:	jo     0x40d3ef
  40d3d0:	scas   al,BYTE PTR es:[edi]
  40d3d1:	add    al,0xf
  40d3d3:	inc    edi
  40d3d4:	stos   DWORD PTR es:[edi],eax
  40d3d5:	lock and cl,cl
  40d3d8:	sbb    bl,BYTE PTR [esi+0x14]
  40d3db:	stos   DWORD PTR es:[edi],eax
  40d3dc:	clc    
  40d3dd:	stos   DWORD PTR es:[edi],eax
  40d3de:	jmp    0x9015dec5
  40d3e3:	dec    edx
  40d3e4:	push   esi
  40d3e5:	in     eax,dx
  40d3e6:	inc    ebp
  40d3e7:	sub    dh,BYTE PTR [ecx+edx*2-0x12346fa6]
  40d3ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3ef:	xlat   BYTE PTR ds:[ebx]
  40d3f0:	sub    esp,esi
  40d3f2:	in     al,dx
  40d3f3:	or     al,0xdc
  40d3f5:	std    
  40d3f6:	jmp    0x40d3c7
  40d3f8:	or     BYTE PTR ds:0xac1d9bf4,ah
  40d3fe:	pop    esp
  40d3ff:	jg     0x40d3c4
  40d401:	data16 xor al,0x26
  40d404:	pop    ebp
  40d405:	in     eax,0x27
  40d407:	add    edx,ebp
  40d409:	ds adc al,0x80
  40d40c:	jno    0x40d45f
  40d40e:	mov    al,ds:0xa35244d
  40d413:	pop    edi
  40d414:	and    eax,0x6de8ef2d
  40d419:	out    dx,eax
  40d41a:	pop    edx
  40d41b:	sub    al,0x13
  40d41d:	daa    
  40d41e:	test   al,0x6c
  40d420:	(bad)  
  40d421:	jns    0x40d452
  40d423:	inc    ecx
  40d424:	mov    es,WORD PTR [ecx-0x66]
  40d427:	adc    al,0xc7
  40d429:	int    0x2c
  40d42b:	mov    BYTE PTR [ebp+0x1d85a060],bh
  40d431:	and    eax,0xc3d7315a
  40d436:	adc    ecx,eax
  40d438:	jmp    0x97ca7ae9
  40d43d:	and    esi,0x40
  40d440:	xchg   DWORD PTR [eax+0x3],ebx
  40d443:	fwait
  40d444:	mov    eax,0x6ca276f3
  40d449:	arpl   WORD PTR [edi+0x7b36c786],bp
  40d44f:	mov    esi,edi
  40d451:	loopne 0x40d4c0
  40d453:	mov    esp,0x3ae54cad
  40d458:	add    DWORD PTR ds:0x8956e375,esi
  40d45e:	xor    DWORD PTR [eax+0x7da7f118],eax
  40d464:	inc    edi
  40d465:	xchg   esi,eax
  40d466:	push   esi
  40d467:	in     eax,dx
  40d468:	mov    ebp,0x91f477d9
  40d46d:	add    BYTE PTR [edi+0x15],0xcf
  40d471:	(bad)  
  40d473:	ror    DWORD PTR [ebx+0x42],0x90
  40d477:	out    dx,al
  40d478:	mov    ds:0x90efbfda,eax
  40d47d:	jle    0x40d4df
  40d47f:	jb     0x40d4ac
  40d481:	push   0x76006629
  40d486:	jp     0x40d494
  40d488:	jle    0x40d410
  40d48a:	ins    BYTE PTR es:[edi],dx
  40d48b:	sbb    BYTE PTR [ecx+0x438ee2a1],cl
  40d491:	xchg   ebx,eax
  40d492:	pop    DWORD PTR [ecx+0x6737643d]
  40d498:	mov    ds:0x7387040b,al
  40d49d:	leave  
  40d49e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d49f:	cwde   
  40d4a0:	cwde   
  40d4a1:	jecxz  0x40d4a3
  40d4a3:	movzx  edi,WORD PTR [ebx-0x25]
  40d4a7:	retf   
  40d4a8:	clc    
  40d4a9:	or     BYTE PTR [ecx+ecx*1-0xe],ch
  40d4ad:	dec    esi
  40d4ae:	xchg   edx,eax
  40d4af:	mov    ebp,0x58dd866b
  40d4b4:	outs   dx,BYTE PTR ds:[si]
  40d4b6:	int3   
  40d4b7:	sub    al,0xa5
  40d4b9:	sbb    al,0xe2
  40d4bb:	dec    edi
  40d4bc:	aas    
  40d4bd:	push   es
  40d4be:	aaa    
  40d4bf:	and    al,0x47
  40d4c1:	icebp  
  40d4c2:	in     al,dx
  40d4c3:	xor    ebx,DWORD PTR [edx*1+0x56115f64]
  40d4ca:	mov    bl,BYTE PTR [edx+edx*2]
  40d4cd:	aaa    
  40d4ce:	jecxz  0x40d460
  40d4d0:	sahf   
  40d4d1:	(bad)  
  40d4d2:	push   edi
  40d4d3:	or     eax,0x586efc26
  40d4d8:	mov    eax,0xbf0a6880
  40d4dd:	jecxz  0x40d521
  40d4df:	adc    eax,0x691efcdd
  40d4e4:	push   ds
  40d4e5:	cld    
  40d4e6:	lods   al,BYTE PTR ds:[esi]
  40d4e7:	xchg   ecx,eax
  40d4e8:	xchg   esp,eax
  40d4e9:	cmp    DWORD PTR [esi],0x65
  40d4ec:	dec    ecx
  40d4ed:	punpckhbw mm3,QWORD PTR [eax]
  40d4f0:	mov    cs,WORD PTR [edi+0x14]
  40d4f3:	xor    al,al
  40d4f5:	mov    DWORD PTR [edx],0x2dd62b6d
  40d4fb:	add    DWORD PTR [ecx-0x2dd40f77],0xffffff88
  40d502:	mov    ds:0x745451d2,al
  40d507:	xlat   BYTE PTR ds:[ebx]
  40d508:	cmp    bh,0x76
  40d50b:	xlat   BYTE PTR fs:[ebx]
  40d50d:	cmp    eax,0x4cd75f10
  40d512:	jbe    0x40d535
  40d514:	jb     0x40d532
  40d516:	test   eax,0x89193ab0
  40d51b:	adc    cl,BYTE PTR [ebx]
  40d51d:	repnz or DWORD PTR [ecx+0x64],eax
  40d521:	std    
  40d522:	mov    al,0x56
  40d524:	outs   dx,DWORD PTR ds:[esi]
  40d525:	mov    esi,0x56ee9cb7
  40d52a:	aad    0xd0
  40d52c:	les    eax,FWORD PTR [edx-0x60]
  40d52f:	call   0xce931b05
  40d534:	ret    0x30c3
  40d537:	cwde   
  40d538:	sub    al,0x1c
  40d53a:	pop    ss
  40d53b:	in     al,dx
  40d53c:	add    BYTE PTR [ecx-0x4],ch
  40d53f:	sti    
  40d540:	es clc 
  40d542:	ret    0x77f0
  40d545:	add    BYTE PTR [edx-0x73ec3082],ah
  40d54b:	or     BYTE PTR [eax],dh
  40d54d:	cmp    BYTE PTR [ecx+0x0],al
  40d550:	jg     0x40d598
  40d552:	inc    edi
  40d553:	dec    esp
  40d554:	cmp    ebp,ebp
  40d556:	(bad)  
  40d557:	pop    ecx
  40d558:	or     BYTE PTR [ebp+eax*1-0x19],0xf7
  40d55d:	lock mov dl,0x65
  40d560:	out    0xda,eax
  40d562:	ins    DWORD PTR es:[edi],dx
  40d563:	in     eax,dx
  40d564:	xor    al,0x7d
  40d566:	and    BYTE PTR [eax+0x47],dl
  40d569:	in     al,dx
  40d56a:	push   es
  40d56b:	das    
  40d56c:	pusha  
  40d56d:	bnd jae 0x40d574
  40d570:	xor    eax,0x5746147
  40d575:	xor    eax,0x90bf5152
  40d57a:	xchg   edi,eax
  40d57b:	inc    ecx
  40d57c:	bound  esi,QWORD PTR [esi-0xef36024]
  40d582:	push   cs
  40d583:	retf   
  40d584:	out    dx,eax
  40d585:	push   ecx
  40d586:	and    ecx,DWORD PTR ds:0x47944803
  40d58c:	adc    DWORD PTR [edi+0x79f8dc26],esp
  40d592:	imul   esp,DWORD PTR [edi-0x21],0x59d1b3ed
  40d599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d59a:	push   0xb8d90e71
  40d59f:	pop    edx
  40d5a0:	rcr    DWORD PTR [ebx-0x67],cl
  40d5a3:	cmp    al,dl
  40d5a5:	aaa    
  40d5a6:	fidiv  WORD PTR [eax-0x62]
  40d5a9:	or     cl,bh
  40d5ab:	mov    esp,DWORD PTR [edi]
  40d5ad:	or     eax,0x2c01edfa
  40d5b2:	pop    ebp
  40d5b3:	popf   
  40d5b4:	jae    0x40d57c
  40d5b6:	jne    0x40d54f
  40d5b8:	or     DWORD PTR [ebp-0x38313aad],eax
  40d5be:	(bad)  
  40d5c1:	push   eax
  40d5c2:	and    edx,DWORD PTR [edi+eiz*4]
  40d5c5:	push   ecx
  40d5c6:	sbb    ebx,DWORD PTR [eax+0x42f3764e]
  40d5cc:	push   0xffffffb0
  40d5ce:	mov    esi,0x119a6dcc
  40d5d3:	aad    0x5f
  40d5d5:	sbb    ebp,DWORD PTR [edi+0x7c]
  40d5d8:	loope  0x40d604
  40d5da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d5db:	mov    ecx,DWORD PTR [ebx+edx*1+0x24d026b4]
  40d5e2:	popa   
  40d5e3:	xlat   BYTE PTR ds:[ebx]
  40d5e4:	in     al,0x54
  40d5e6:	mov    ?,esp
  40d5e8:	test   al,dl
  40d5ea:	sbb    eax,DWORD PTR [ebp+0x1369dcc1]
  40d5f0:	retf   
  40d5f1:	popf   
  40d5f2:	add    dh,dh
  40d5f4:	in     al,dx
  40d5f5:	fcom   QWORD PTR ds:0x2ccc5e43
  40d5fb:	aaa    
  40d5fc:	inc    ebp
  40d5fd:	(bad)  {k3}
  40d602:	inc    edi
  40d603:	hlt    
  40d604:	add    al,0xe0
  40d606:	jnp    0x40d639
  40d608:	mov    edi,0x8a2b3506
  40d60d:	xor    BYTE PTR [edi],ah
  40d60f:	scas   al,BYTE PTR es:[edi]
  40d610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d611:	call   0x69b8:0x10300fdc
  40d618:	xchg   esi,eax
  40d619:	cld    
  40d61a:	adc    eax,0x2f3dbc8a
  40d61f:	cwde   
  40d620:	jnp    0x40d69c
  40d622:	int    0xe8
  40d624:	loope  0x40d5da
  40d626:	out    0xc9,eax
  40d628:	pushaw 
  40d62a:	popf   
  40d62b:	mov    eax,ds:0xe8c1f459
  40d630:	loop   0x40d5d5
  40d632:	jp     0x40d613
  40d634:	jae    0x40d67f
  40d636:	sar    BYTE PTR [edx-0x2b7c9f91],0x7d
  40d63d:	jmp    0x882e8ff7
  40d642:	dec    edi
  40d643:	jbe    0x40d6b9
  40d645:	rcr    cl,0xf9
  40d648:	dec    esi
  40d649:	or     dh,BYTE PTR [edi+eiz*4+0x77]
  40d64d:	add    ebx,DWORD PTR [edi]
  40d64f:	(bad)  
  40d650:	dec    ebx
  40d651:	loopne 0x40d68b
  40d653:	jns    0x40d674
  40d655:	in     eax,dx
  40d656:	add    BYTE PTR [ecx-0x74372836],dl
  40d65c:	gs jne 0x40d630
  40d65f:	cmc    
  40d660:	repz out 0xdd,eax
  40d663:	aaa    
  40d664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d665:	and    ebx,edx
  40d667:	mov    eax,0x4fec3e45
  40d66c:	cmp    ecx,DWORD PTR [ebp+0x6]
  40d66f:	mov    fs:0xfe487936,al
  40d675:	ins    BYTE PTR es:[edi],dx
  40d676:	hlt    
  40d677:	ficomp DWORD PTR [ebx-0x3]
  40d67a:	ret    0x6fe
  40d67d:	or     al,0x97
  40d67f:	aad    0x5b
  40d681:	add    BYTE PTR [esi],al
  40d683:	out    0x9,al
  40d685:	js     0x40d620
  40d687:	mov    cl,0x9a
  40d689:	inc    esp
  40d68a:	imul   edi,DWORD PTR [eax],0x3a
  40d68d:	stos   BYTE PTR es:[edi],al
  40d68e:	(bad)  
  40d68f:	repz cld 
  40d691:	dec    DWORD PTR [esi-0x59928052]
  40d697:	mov    cl,0xb5
  40d699:	popf   
  40d69a:	pop    ebp
  40d69b:	cmp    al,0xd3
  40d69d:	(bad)  
  40d69e:	cmc    
  40d69f:	pushf  
  40d6a0:	lods   al,BYTE PTR ds:[esi]
  40d6a1:	(bad)  
  40d6a2:	push   esp
  40d6a3:	imul   edi,eax,0xffffffe5
  40d6a6:	clc    
  40d6a7:	rcr    BYTE PTR [edx],cl
  40d6a9:	ja     0x40d6cb
  40d6ab:	pushf  
  40d6ac:	shr    DWORD PTR [ebp*2+0x3856eb32],1
  40d6b3:	(bad)  
  40d6b4:	out    dx,al
  40d6b5:	ja     0x40d6ac
  40d6b7:	int3   
  40d6b8:	sub    eax,0xd246db0f
  40d6bd:	sahf   
  40d6be:	xchg   edi,eax
  40d6bf:	not    DWORD PTR ds:0x2b07a259
  40d6c5:	pop    ebx
  40d6c6:	fcmovnbe st,st(3)
  40d6c8:	sub    BYTE PTR [edx],cl
  40d6ca:	fstp   st(1)
  40d6cc:	rcl    dl,0x7d
  40d6cf:	ja     0x40d70d
  40d6d1:	pop    ss
  40d6d2:	mov    edi,0xd9638fe4
  40d6d7:	sub    DWORD PTR [edi-0x5f],edi
  40d6da:	sub    al,0xd4
  40d6dc:	mov    al,0x33
  40d6de:	mov    ch,0xb2
  40d6e0:	into   
  40d6e1:	xor    ebp,esi
  40d6e3:	popf   
  40d6e4:	jae    0x40d740
  40d6e6:	adc    BYTE PTR [edx-0x3e],ah
  40d6e9:	aas    
  40d6ea:	push   ebp
  40d6eb:	pop    esp
  40d6ec:	xor    DWORD PTR ds:0x9486e4a5,edx
  40d6f2:	enter  0xf6a4,0x37
  40d6f6:	jb     0x40d6e8
  40d6f8:	(bad)
  40d6fc:	ss push eax
  40d6fe:	out    0xae,eax
  40d700:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d701:	retf   
  40d702:	add    ebp,edx
  40d704:	call   0x622894b7
  40d709:	fsubr  DWORD PTR [ebx-0x16]
  40d70c:	xlat   BYTE PTR ds:[ebx]
  40d70d:	loope  0x40d761
  40d70f:	adc    BYTE PTR ds:0x44cc44a2,ah
  40d715:	inc    ecx
  40d716:	pushf  
  40d717:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d718:	or     eax,0xe1fb27cc
  40d71d:	cmp    BYTE PTR [bx+di],bl
  40d720:	popa   
  40d721:	add    BYTE PTR [ecx+0x3584398b],bl
  40d727:	cwde   
  40d728:	mov    edx,0xee8acbe6
  40d72d:	sar    esi,cl
  40d72f:	jb     0x40d6e3
  40d731:	ins    BYTE PTR es:[edi],dx
  40d732:	gs daa 
  40d734:	jo     0x40d79c
  40d736:	cwde   
  40d737:	inc    esp
  40d738:	call   0xdd93:0x6aefecd1
  40d73f:	loope  0x40d711
  40d741:	gs (bad) 
  40d744:	sbb    al,0xcc
  40d746:	push   0xb60e6a18
  40d74b:	mov    eax,ds:0x891c89fc
  40d750:	aas    
  40d751:	imul   esp,edx,0x50a64c78
  40d757:	test   eax,0x7aac2f1d
  40d75c:	cs dec ebx
  40d75e:	add    BYTE PTR [eax+0x575c553b],ch
  40d764:	cwde   
  40d765:	add    al,BYTE PTR ds:0x43880d0
  40d76b:	mov    dl,0x8c
  40d76d:	mov    ebp,0x992a6c01
  40d772:	mov    al,0x99
  40d774:	or     eax,0x39241071
  40d779:	test   al,0xba
  40d77b:	dec    edi
  40d77c:	inc    edi
  40d77d:	scas   eax,DWORD PTR es:[edi]
  40d77e:	popa   
  40d77f:	or     eax,esp
  40d781:	jae    0x40d777
  40d783:	mov    ds:0x5bc83549,al
  40d788:	push   ds
  40d789:	ins    WORD PTR es:[edi],dx
  40d78b:	push   cs
  40d78c:	stos   DWORD PTR es:[edi],eax
  40d78d:	cmp    edi,eax
  40d78f:	mov    ss,WORD PTR [edi+0x43]
  40d792:	std    
  40d793:	jns    0x40d7e7
  40d795:	ja     0x40d802
  40d797:	dec    esp
  40d798:	stos   BYTE PTR es:[edi],al
  40d799:	ret    
  40d79a:	(bad)  
  40d79b:	push   ebp
  40d79c:	xor    esp,eax
  40d79e:	sbb    eax,0xa3a07d02
  40d7a3:	into   
  40d7a4:	fisttp WORD PTR [esi]
  40d7a6:	sti    
  40d7a7:	xchg   BYTE PTR [ebx],ch
  40d7a9:	cmp    DWORD PTR [edx-0x3d],esp
  40d7ac:	mov    eax,0x54ac668a
  40d7b1:	fisttp QWORD PTR [ecx+0x1a]
  40d7b4:	aaa    
  40d7b5:	push   eax
  40d7b7:	xor    DWORD PTR [edi+0x9],ebp
  40d7ba:	in     al,0xf8
  40d7bc:	mov    dh,0xf6
  40d7be:	cmp    DWORD PTR [ebp+0xd7a88a4],eax
  40d7c4:	jge    0x40d7ae
  40d7c6:	fadd   DWORD PTR [esp+ecx*4+0x6c0dd09d]
  40d7cd:	inc    ebx
  40d7ce:	lods   al,BYTE PTR es:[esi]
  40d7d0:	mov    ds:0x2b999a1f,al
  40d7d5:	ss fsub st(2),st
  40d7d8:	and    BYTE PTR [ecx-0x4a19f2ea],al
  40d7de:	xor    BYTE PTR [eax],al
  40d7e0:	xchg   esp,eax
  40d7e1:	ss fwait
  40d7e3:	aad    0x44
  40d7e5:	jmp    0x2e85:0x179e50ed
  40d7ec:	dec    edi
  40d7ed:	mov    eax,ds:0xc17e5b1f
  40d7f2:	add    BYTE PTR [ecx-0x70e73cd],cl
  40d7f8:	sbb    al,0x1c
  40d7fa:	(bad)  
  40d7fb:	sub    DWORD PTR [edi+0x4e],edi
  40d7fe:	sbb    al,BYTE PTR [edi-0x74]
  40d801:	xor    cl,ah
  40d803:	xor    DWORD PTR [edi],0x75788c17
  40d809:	inc    ecx
  40d80a:	out    dx,eax
  40d80b:	out    0x48,al
  40d80d:	sbb    eax,0x33afcc45
  40d812:	sbb    DWORD PTR [edx+0x7a],esi
  40d815:	inc    edx
  40d816:	(bad)  
  40d817:	dec    edx
  40d818:	and    DWORD PTR [eax],ebp
  40d81a:	test   al,0x7
  40d81c:	loope  0x40d84c
  40d81e:	or     eax,eax
  40d820:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d821:	mov    bl,BYTE PTR [ebx-0x35]
  40d824:	sub    al,BYTE PTR [ebp+0x11d5d9b]
  40d82a:	(bad)  
  40d82c:	cld    
  40d82d:	adc    bh,BYTE PTR [edx]
  40d82f:	(bad)  
  40d830:	pop    ds
  40d831:	psubusb mm0,QWORD PTR [esi-0x59215d05]
  40d838:	cwde   
  40d839:	js     0x40d84f
  40d83b:	es sub eax,0x3f397fb5
  40d841:	sbb    DWORD PTR ds:0x4f4e8314,ebp
  40d847:	pop    edx
  40d848:	sbb    esi,DWORD PTR [ebx]
  40d84a:	mov    ebp,0x63b26e0b
  40d84f:	scas   eax,DWORD PTR es:[edi]
  40d850:	sub    cl,BYTE PTR [ecx]
  40d852:	sti    
  40d853:	mov    edx,0xc8242266
  40d858:	lods   eax,DWORD PTR ds:[esi]
  40d859:	mov    ch,BYTE PTR [edi]
  40d85b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d85c:	inc    ebp
  40d85d:	shl    DWORD PTR [ecx+0x613efc6c],cl
  40d863:	ds (bad) 
  40d865:	in     eax,0x58
  40d867:	sbb    ecx,DWORD PTR [ecx+0x28e2f97b]
  40d86d:	adc    ebp,DWORD PTR [ecx]
  40d86f:	mov    cl,0xdd
  40d871:	inc    ecx
  40d872:	sub    bh,BYTE PTR [edi+0xaa1e03a]
  40d878:	inc    ebp
  40d879:	sub    edx,DWORD PTR [esi]
  40d87b:	fmul   DWORD PTR [ebx-0x6b]
  40d87e:	pushf  
  40d87f:	jp     0x40d8b5
  40d881:	lock das 
  40d883:	push   ebx
  40d884:	jne    0x40d8b5
  40d886:	cmovo  edx,DWORD PTR [ebx]
  40d889:	cmc    
  40d88a:	adc    al,0x7a
  40d88c:	adc    BYTE PTR [ecx+0x0],ch
  40d88f:	mov    dl,0x94
  40d891:	and    al,0x67
  40d893:	mov    DWORD PTR [esp+ebx*1],eax
  40d896:	xor    al,0x30
  40d898:	or     eax,0xa2021782
  40d89d:	jge    0x40d91c
  40d89f:	push   cs
  40d8a0:	ret    0xd6ce
  40d8a3:	jmp    0xcbad:0xb87c9373
  40d8aa:	fbld   TBYTE PTR [ebx]
  40d8ac:	pop    es
  40d8ad:	sahf   
  40d8ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8af:	push   ebx
  40d8b0:	scas   eax,DWORD PTR es:[edi]
  40d8b1:	jno    0x40d896
  40d8b3:	jg     0x40d8cc
  40d8b5:	fst    st(1)
  40d8b7:	retf   
  40d8b8:	sub    BYTE PTR [ebx-0x1d82c708],cl
  40d8be:	push   ds
  40d8bf:	js     0x40d8ea
  40d8c1:	cmc    
  40d8c2:	sbb    ch,BYTE PTR [ebp+0x59976f0b]
  40d8c8:	and    cl,BYTE PTR ds:0xb9945570
  40d8ce:	push   cs
  40d8cf:	push   0x36
  40d8d1:	ins    BYTE PTR es:[edi],dx
  40d8d2:	sbb    BYTE PTR [eax],al
  40d8d4:	xor    dl,bl
  40d8d6:	loopne 0x40d8d0
  40d8d8:	and    eax,edi
  40d8da:	mov    ds:0xbd1d89a2,eax
  40d8df:	les    eax,FWORD PTR [ecx+0x2faa74d]
  40d8e5:	jg     0x40d87b
  40d8e7:	xchg   edx,eax
  40d8e8:	jbe    0x40d88b
  40d8ea:	pop    ecx
  40d8eb:	sti    
  40d8ec:	mov    al,ds:0x6c61186
  40d8f1:	pop    ds
  40d8f2:	mov    bh,0x53
  40d8f4:	mov    ah,0x17
  40d8f6:	fwait
  40d8f7:	xchg   edx,eax
  40d8f8:	repnz add ch,ch
  40d8fb:	fld    DWORD PTR [eax]
  40d8fd:	or     esp,ecx
  40d8ff:	sbb    eax,0xaaa556e7
  40d904:	inc    ebp
  40d905:	mov    ds:0x5a00df2f,al
  40d90a:	jo     0x40d891
  40d90c:	xor    edi,edx
  40d90e:	xor    eax,0x54eca754
  40d913:	or     eax,0x52ad8190
  40d918:	sar    BYTE PTR fs:[ecx],cl
  40d91b:	retf   0xa1f8
  40d91e:	outs   dx,BYTE PTR ds:[esi]
  40d91f:	jmp    0xee7c:0xf21b8cdb
  40d926:	out    0x67,eax
  40d928:	or     dh,0xf9
  40d92b:	xor    esp,ecx
  40d92d:	xlat   BYTE PTR ds:[ebx]
  40d92e:	jae    0x40d95b
  40d930:	neg    edx
  40d932:	int    0xd1
  40d934:	call   0x9f8baf23
  40d939:	add    ebx,esp
  40d93b:	dec    ecx
  40d93c:	sub    ebp,ebx
  40d93e:	int3   
  40d93f:	mov    ah,0x21
  40d941:	mov    edx,0xd1aa4924
  40d946:	xor    DWORD PTR [esi+edi*8+0x65942f42],0xb26eda26
  40d951:	and    esp,0xffffffd6
  40d954:	mov    ecx,0xe798d83d
  40d959:	cdq    
  40d95a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d95b:	jle    0x40d8dd
  40d95d:	sub    eax,0x12c0373a
  40d962:	test   BYTE PTR [edx-0x1f78bc30],dl
  40d968:	or     BYTE PTR [edx],cl
  40d96a:	test   eax,0x60dc6ecf
  40d96f:	not    BYTE PTR [edx]
  40d971:	aad    0x4f
  40d973:	jmp    0x7313:0x77e215a2
  40d97a:	js     0x40d9ab
  40d97c:	add    bl,dh
  40d97e:	add    ch,BYTE PTR [eax-0x53]
  40d981:	ds ins DWORD PTR es:[edi],dx
  40d983:	clc    
  40d984:	into   
  40d985:	test   DWORD PTR [edi+esi*2-0x50c81796],edi
  40d98c:	retf   
  40d98d:	pop    edi
  40d98e:	imul   esi,ebp,0xffffffc7
  40d991:	mov    esi,0xa7040ef5
  40d996:	lahf   
  40d997:	sub    DWORD PTR [edi+0x27],ebx
  40d99a:	jns    0x40d927
  40d99c:	retf   
  40d99d:	ja     0x40d960
  40d99f:	mov    ebp,0x775610f6
  40d9a4:	rcr    DWORD PTR [edx+0x739876b5],0x86
  40d9ab:	push   eax
  40d9ac:	push   cs
  40d9ad:	add    ecx,edi
  40d9af:	pop    ds
  40d9b0:	pop    es
  40d9b1:	ja     0x40d9b0
  40d9b3:	or     al,0x15
  40d9b5:	jae    0x40d9f1
  40d9b7:	fimul  DWORD PTR [edx]
  40d9b9:	mov    edi,ebp
  40d9bb:	call   0x13e2:0xfe20814a
  40d9c2:	shr    BYTE PTR [edx+0x1a],0x1b
  40d9c6:	pop    esi
  40d9c7:	test   eax,0xa27c5c63
  40d9cc:	dec    edx
  40d9cd:	push   esi
  40d9ce:	adc    al,0x75
  40d9d0:	test   DWORD PTR [edi+edi*1-0x1716c306],ebx
  40d9d7:	push   esi
  40d9d8:	aad    0xf7
  40d9da:	fs ins DWORD PTR es:[edi],dx
  40d9dc:	inc    eax
  40d9dd:	and    eax,DWORD PTR fs:[ecx+eax*4]
  40d9e1:	ret    0x626d
  40d9e4:	xchg   ecx,eax
  40d9e5:	call   0x1836:0x9dd7019d
  40d9ec:	fwait
  40d9ed:	sbb    al,0xbc
  40d9ef:	aas    
  40d9f0:	fsub   st(0),st
  40d9f2:	mov    eax,ds:0xa46ad5e5
  40d9f7:	add    ebp,ebx
  40d9f9:	test   DWORD PTR [edi+0x12],ebp
  40d9fc:	xchg   ebp,eax
  40d9fd:	retf   0x4c40
  40da00:	push   edx
  40da01:	mov    edi,0xa22d2cd9
  40da06:	push   esp
  40da07:	mov    cl,BYTE PTR [edx+edi*1-0x29]
  40da0b:	jb     0x40d9a9
  40da0d:	das    
  40da0e:	and    BYTE PTR [edi-0x2328b545],cl
  40da14:	xor    bh,BYTE PTR [eax]
  40da16:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da17:	jmp    0x1490c12d
  40da1c:	test   al,0xc4
  40da1e:	gs xor ecx,edx
  40da21:	in     al,0xf1
  40da23:	dec    edi
  40da24:	cmp    eax,0x1e058f3d
  40da29:	enter  0x4908,0x7c
  40da2d:	dec    esi
  40da2e:	jg     0x40da5f
  40da30:	lahf   
  40da31:	inc    esi
  40da32:	mov    ds:0xd0f22b4,eax
  40da37:	sub    BYTE PTR [ebp+0x5e],ah
  40da3a:	vpmuludq xmm1,xmm6,XMMWORD PTR [esi+0x45dbfd96]
  40da42:	mov    gs,WORD PTR [edi+0x7f]
  40da45:	mov    esp,0x97e665b8
  40da4a:	jb     0x40da48
  40da4c:	cmp    eax,0xc58bb52e
  40da51:	int3   
  40da52:	xor    al,0x20
  40da54:	push   0xc49703c5
  40da59:	sub    edi,0x7
  40da5c:	pop    ebx
  40da5d:	jp     0x40dad7
  40da5f:	enter  0xb2ea,0x62
  40da63:	js     0x40da88
  40da65:	or     al,0x39
  40da67:	je     0x40daa3
  40da69:	and    DWORD PTR [edi+0x35c328ea],0x7dc57a1d
  40da73:	dec    ebp
  40da74:	push   esp
  40da75:	cli    
  40da76:	pop    esp
  40da77:	jg     0x40da24
  40da79:	sub    ch,BYTE PTR [ebx+0x4779d435]
  40da7f:	jb     0x40da08
  40da81:	js     0x40dae7
  40da83:	into   
  40da84:	icebp  
  40da85:	sbb    DWORD PTR [esi-0x29],edx
  40da88:	pop    fs
  40da8a:	mov    eax,ds:0x722f9c2a
  40da8f:	fnstcw WORD PTR ds:0x9ab3b7e6
  40da95:	add    ecx,DWORD PTR [edi+ebx*1+0x62bb1f98]
  40da9c:	fnsave ds:0x1f915759
  40daa2:	dec    sp
  40daa4:	lods   al,BYTE PTR ds:[esi]
  40daa5:	mov    dh,0xfa
  40daa7:	leave  
  40daa8:	stc    
  40daa9:	daa    
  40daaa:	mov    ebp,0xbef9f80a
  40daaf:	cdq    
  40dab0:	xchg   edi,eax
  40dab1:	xchg   edx,eax
  40dab2:	mov    edi,0x3669e16f
  40dab7:	in     eax,0x40
  40dab9:	ffreep st(5)
  40dabb:	mov    ebx,0x227a130b
  40dac0:	xchg   esi,eax
  40dac1:	xchg   ebx,eax
  40dac2:	jnp    0x40da81
  40dac4:	sbb    eax,0x57c6254a
  40dac9:	cmp    eax,0x3b8352aa
  40dace:	pushf  
  40dacf:	ffreep st(5)
  40dad1:	jle    0x40db09
  40dad3:	jge    0x40db02
  40dad5:	sahf   
  40dad6:	mov    BYTE PTR [edi],dh
  40dad8:	gs xchg ecx,eax
  40dada:	test   al,0xf6
  40dadc:	xchg   esi,eax
  40dadd:	push   cs
  40dade:	rcr    edx,0xec
  40dae1:	es mov ebp,esi
  40dae4:	cmp    dl,dl
  40dae6:	inc    eax
  40dae7:	dec    ecx
  40dae8:	sbb    cl,BYTE PTR [ecx-0x67b33944]
  40daee:	enter  0x6daa,0xed
  40daf2:	push   ecx
  40daf3:	push   0x46
  40daf5:	mov    cl,0x36
  40daf7:	sub    DWORD PTR [ebp-0x4bb90c46],ebp
  40dafd:	inc    edx
  40dafe:	cmp    eax,0xd3008d05
  40db03:	inc    edi
  40db04:	popf   
  40db05:	pop    eax
  40db06:	inc    edx
  40db07:	les    ecx,FWORD PTR ds:0xe497c2b3
  40db0d:	ds retf 
  40db0f:	sar    BYTE PTR [ecx+eax*4-0x24],cl
  40db13:	aaa    
  40db14:	outs   dx,BYTE PTR ds:[esi]
  40db15:	test   BYTE PTR ds:0x57b7cfa2,ch
  40db1b:	mov    ds:0xb4f3ea3a,al
  40db20:	add    ecx,ecx
  40db22:	lea    ecx,[eax]
  40db24:	dec    esi
  40db25:	imul   edi,edx,0x5d
  40db28:	lods   al,BYTE PTR ds:[esi]
  40db29:	sub    DWORD PTR [ebp+ebx*2-0x36b53037],esi
  40db30:	je     0x40dae9
  40db32:	cdq    
  40db33:	and    BYTE PTR [edx+0x43],dl
  40db36:	push   eax
  40db37:	push   eax
  40db38:	retf   0xc9d0
  40db3b:	sar    BYTE PTR [ebx+0x294bb0a0],cl
  40db41:	sar    bh,0x86
  40db44:	dec    edi
  40db45:	arpl   WORD PTR ds:0x8a58df74,ax
  40db4b:	fdivr  DWORD PTR [ebx+0x7a9d56ab]
  40db51:	shl    DWORD PTR [esp+ebp*4],cl
  40db54:	adc    DWORD PTR [eax-0x5e],0x1f551d12
  40db5b:	ja     0x40db04
  40db5d:	test   eax,0xd9384a0a
  40db62:	and    al,0x2b
  40db64:	(bad)  
  40db65:	(bad)  
  40db66:	xchg   esp,eax
  40db67:	cmp    eax,0x391c436d
  40db6c:	retf   
  40db6d:	hlt    
  40db6e:	frstor [edi-0x25]
  40db71:	imul   esi,DWORD PTR [ebx],0x35
  40db74:	stos   DWORD PTR es:[edi],eax
  40db75:	hlt    
  40db76:	add    BYTE PTR [ebx+ecx*2-0x21],0x99
  40db7b:	fst    DWORD PTR [esp+ebp*8-0x6f3a5947]
  40db82:	mov    ch,0x34
  40db84:	or     ecx,DWORD PTR [esi]
  40db86:	hlt    
  40db87:	ins    BYTE PTR es:[edi],dx
  40db88:	push   ss
  40db89:	jo     0x40db8d
  40db8b:	sub    ch,bh
  40db8d:	mov    eax,ds:0x89d8d8f
  40db92:	arpl   WORD PTR [edi+0x68],si
  40db95:	cld    
  40db96:	or     DWORD PTR [esi+0x3b0f2ce1],ecx
  40db9c:	mov    dh,0xb5
  40db9e:	sbb    eax,0xe74fe89a
  40dba3:	jp     0x40dbd7
  40dba5:	stc    
  40dba6:	fsubr  DWORD PTR [edx+0x8]
  40dba9:	push   esp
  40dbaa:	je     0x40db66
  40dbac:	mov    cl,0xa6
  40dbae:	push   esi
  40dbaf:	and    DWORD PTR [esi],0x6e
  40dbb2:	repz adc eax,0x498aa282
  40dbb8:	xor    DWORD PTR [esi-0x3a41f4a1],0x16
  40dbbf:	sub    ecx,DWORD PTR [ecx*2+0x5e8a5585]
  40dbc6:	in     eax,0x57
  40dbc8:	jecxz  0x40db8f
  40dbca:	nop
  40dbcb:	xor    al,0x38
  40dbcd:	test   DWORD PTR [ebx],ebx
  40dbcf:	mov    ss,edi
  40dbd1:	aad    0xa6
  40dbd3:	cwde   
  40dbd4:	std    
  40dbd5:	and    al,0x82
  40dbd7:	dec    ebx
  40dbd8:	cmp    DWORD PTR [edi-0x27],ecx
  40dbdb:	sbb    esi,DWORD PTR ds:0x75cd95f6
  40dbe1:	sub    bh,bl
  40dbe3:	addr16 test al,0x18
  40dbe6:	add    dh,dh
  40dbe8:	mov    esp,0xc07f2165
  40dbed:	and    edx,eax
  40dbef:	mov    al,0x55
  40dbf1:	lds    edi,FWORD PTR [edx+esi*1+0x7a1f30ac]
  40dbf8:	fucomp st(4)
  40dbfa:	push   ebx
  40dbfb:	sbb    dh,BYTE PTR [edi]
  40dbfd:	add    al,0xdc
  40dbff:	(bad)  
  40dc00:	lods   eax,DWORD PTR ds:[esi]
  40dc01:	arpl   cx,bx
  40dc03:	add    al,0x7d
  40dc05:	add    al,BYTE PTR [ebx-0x11]
  40dc08:	nop
  40dc09:	pop    edi
  40dc0a:	js     0x40dc34
  40dc0c:	mov    esi,0xebcdf7cc
  40dc11:	adc    DWORD PTR [edx+eiz*2],esp
  40dc14:	jg     0x40dc39
  40dc16:	and    BYTE PTR [edx+0x3f62f08d],bl
  40dc1c:	das    
  40dc1d:	mov    ecx,0x491cdb04
  40dc22:	add    DWORD PTR [ecx-0x480f6b58],0x1
  40dc29:	popf   
  40dc2a:	mov    eax,ds:0x1365a68
  40dc2f:	dec    edi
  40dc30:	add    ecx,DWORD PTR [edi-0x39]
  40dc33:	push   esp
  40dc34:	clc    
  40dc35:	shr    BYTE PTR [esi+eax*4+0x23f15fc6],cl
  40dc3c:	sub    BYTE PTR fs:[ebp-0x74ae666c],ch
  40dc43:	pop    ds
  40dc44:	nop
  40dc45:	es adc al,0x4d
  40dc48:	mov    esi,0x41ac1318
  40dc4d:	cs inc esp
  40dc4f:	sbb    ecx,DWORD PTR [esi-0x534d7412]
  40dc55:	xchg   ebp,eax
  40dc56:	imul   edx,DWORD PTR [esi-0x29],0x924d104a
  40dc5d:	sub    eax,0xaf1e5648
  40dc62:	icebp  
  40dc63:	xchg   ecx,eax
  40dc64:	lds    ebp,FWORD PTR [ebx]
  40dc66:	clc    
  40dc67:	and    ah,BYTE PTR [edi+0x60]
  40dc6a:	inc    ebx
  40dc6b:	xor    esp,esi
  40dc6d:	test   bh,0x4b
  40dc70:	push   edx
  40dc71:	ror    DWORD PTR ds:0xeec57f11,1
  40dc77:	mov    ebx,0xa0d7088e
  40dc7c:	stos   DWORD PTR es:[edi],eax
  40dc7d:	div    BYTE PTR [edx]
  40dc7f:	add    ah,BYTE PTR [ebx]
  40dc81:	loop   0x40dc64
  40dc83:	lahf   
  40dc84:	js     0x40dc13
  40dc86:	ja     0x40dccb
  40dc88:	sbb    DWORD PTR [eax],ebx
  40dc8a:	dec    ebp
  40dc8b:	cmp    DWORD PTR [esi],esi
  40dc8d:	xchg   edi,eax
  40dc8e:	mov    ds:0x351d8de5,eax
  40dc93:	sub    eax,0xae56f414
  40dc98:	fs push ebp
  40dc9a:	dec    edi
  40dc9b:	add    eax,0x776911e8
  40dca0:	jecxz  0x40dc40
  40dca2:	hlt    
  40dca3:	adc    dh,0x6c
  40dca6:	xchg   edx,eax
  40dca7:	add    al,0x43
  40dca9:	shl    DWORD PTR [ebp+0x441e14e0],cl
  40dcaf:	sub    DWORD PTR [eax],0x6
  40dcb2:	outs   dx,BYTE PTR ds:[esi]
  40dcb3:	cmp    ah,BYTE PTR [eax+eax*8+0x6e3c51fc]
  40dcba:	loop   0x40dcc0
  40dcbc:	jmp    0xd4f7:0xeb713eea
  40dcc3:	sub    BYTE PTR [edx+edx*8+0x38],cl
  40dcc7:	les    eax,FWORD PTR [edx]
  40dcc9:	int3   
  40dcca:	dec    ebx
  40dccb:	sbb    edx,DWORD PTR [esi]
  40dccd:	dec    eax
  40dcce:	out    0xa7,eax
  40dcd0:	push   ebx
  40dcd1:	push   esi
  40dcd2:	sbb    DWORD PTR [edi+0x4c1be47f],ecx
  40dcd8:	and    al,0x13
  40dcda:	into   
  40dcdb:	lods   eax,DWORD PTR ds:[esi]
  40dcdc:	cmp    eax,0x5ad268d2
  40dce1:	xchg   ebx,eax
  40dce2:	xor    ah,al
  40dce4:	repz hlt 
  40dce6:	jge    0x40dcac
  40dce8:	mov    esp,DWORD PTR [edi-0x52]
  40dceb:	jb     0x40dccf
  40dced:	out    0x76,al
  40dcef:	imul   ecx,ebx,0x3cefab5b
  40dcf5:	or     ah,bh
  40dcf7:	scas   al,BYTE PTR es:[edi]
  40dcf8:	adc    bh,BYTE PTR [eax+eiz*2]
  40dcfb:	popf   
  40dcfc:	push   esi
  40dcfd:	xchg   ebx,eax
  40dcfe:	jmp    0x1aa0225b
  40dd03:	mov    ds:0x51f0a0dd,al
  40dd08:	rcr    DWORD PTR gs:[ebx+ecx*8],0x5b
  40dd0d:	push   0x168b58ae
  40dd12:	mul    BYTE PTR [edx+ebp*8+0x6]
  40dd16:	push   edi
  40dd17:	push   ds
  40dd18:	ds and al,0xce
  40dd1b:	imul   esi,DWORD PTR [edi+edi*2],0xffffff8b
  40dd1f:	bound  ebp,QWORD PTR ds:0x31041882
  40dd25:	std    
  40dd26:	jl     0x40dda7
  40dd28:	lea    esi,[ebp-0x17]
  40dd2b:	sbb    BYTE PTR [ebx+0x6],0x77
  40dd2f:	adc    DWORD PTR [edx+0x7265f91e],ebx
  40dd35:	xor    DWORD PTR [ecx+edx*8+0x473fdd60],ecx
  40dd3c:	iret   
  40dd3d:	jbe    0x40dd2a
  40dd3f:	idiv   dh
  40dd41:	pop    edx
  40dd42:	(bad)  
  40dd44:	stos   DWORD PTR es:[edi],eax
  40dd45:	jg     0x40dcf7
  40dd47:	xchg   esi,eax
  40dd48:	lahf   
  40dd49:	lea    ebp,[ecx+esi*8-0x6c]
  40dd4d:	sbb    al,0xf6
  40dd4f:	aam    0x9e
  40dd51:	sub    BYTE PTR ds:0xf422c162,bl
  40dd57:	inc    esi
  40dd58:	(bad)  
  40dd5a:	ror    DWORD PTR [esi+edx*8+0x50842159],0x17
  40dd62:	push   eax
  40dd63:	sbb    eax,0x19f4e7a3
  40dd68:	jns    0x40dd09
  40dd6a:	sbb    dh,BYTE PTR [ebx+0x3a]
  40dd6d:	xchg   dh,bl
  40dd6f:	pop    edx
  40dd70:	jmp    0xf39e54c7
  40dd75:	outs   dx,BYTE PTR ds:[esi]
  40dd76:	push   0xc6a31723
  40dd7b:	shl    DWORD PTR fs:[eax+0x10f7f1be],1
  40dd82:	loope  0x40dd95
  40dd84:	push   0xd5522bdc
  40dd89:	out    0x58,al
  40dd8b:	pop    edi
  40dd8c:	arpl   WORD PTR [esi+ecx*2-0x70e34665],sp
  40dd93:	out    0x9d,eax
  40dd95:	push   0xffffffcc
  40dd97:	ret    
  40dd98:	sub    eax,eax
  40dd9a:	aam    0x70
  40dd9c:	sub    DWORD PTR [ecx],0x52
  40dd9f:	xor    eax,0xd6293566
  40dda4:	out    0x11,al
  40dda6:	sbb    BYTE PTR [ebx+0x3ad25175],cl
  40ddac:	out    0xc3,eax
  40ddae:	leave  
  40ddaf:	sbb    BYTE PTR [edi-0x21],0xc4
  40ddb3:	es aaa 
  40ddb5:	nop
  40ddb6:	rcr    BYTE PTR [esi],0xc3
  40ddb9:	cdq    
  40ddba:	ret    
  40ddbb:	jg     0x40dda9
  40ddbd:	mov    ds:0xc7a81920,eax
  40ddc2:	in     al,0x13
  40ddc4:	das    
  40ddc5:	out    dx,al
  40ddc6:	sar    edx,0xc2
  40ddc9:	scas   al,BYTE PTR es:[edi]
  40ddca:	xor    BYTE PTR [esi-0x426a4ea6],dh
  40ddd0:	inc    esp
  40ddd1:	js     0x40dd67
  40ddd3:	out    dx,eax
  40ddd4:	and    BYTE PTR [eax-0x14147014],bh
  40ddda:	mov    cl,0xf9
  40dddc:	in     al,0xb6
  40ddde:	int3   
  40dddf:	in     eax,dx
  40dde0:	je     0x40de1b
  40dde2:	jo     0x40de18
  40dde4:	sub    BYTE PTR [eax],0x1d
  40dde7:	add    BYTE PTR [esi+ecx*4],bl
  40ddea:	xlat   BYTE PTR ds:[ebx]
  40ddeb:	ror    DWORD PTR [eax+0x74c06ad6],cl
  40ddf1:	push   esp
  40ddf2:	ficom  DWORD PTR [ebx]
  40ddf4:	adc    eax,DWORD PTR [ebx-0x32]
  40ddf7:	adc    sp,WORD PTR [eax+0x72]
  40ddfb:	cs ds pop ecx
  40ddfe:	pop    es
  40ddff:	adc    BYTE PTR [edi+0x2a],al
  40de02:	jmp    0xe5cd:0x4ad687f2
  40de09:	in     eax,0x16
  40de0b:	ror    DWORD PTR [edx+0x52],0x26
  40de0f:	inc    eax
  40de10:	xchg   edi,eax
  40de11:	add    DWORD PTR [edx+0x5c162161],edi
  40de17:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de18:	mov    esi,0xdb1cf915
  40de1d:	mov    ecx,0xc8e49874
  40de22:	mov    ?,WORD PTR [ebx+0x38]
  40de25:	(bad)
  40de28:	inc    eax
  40de29:	leave  
  40de2a:	(bad)  
  40de2b:	pop    eax
  40de2c:	pop    esi
  40de2d:	retf   
  40de2e:	rcl    BYTE PTR [edi],cl
  40de30:	sti    
  40de31:	pusha  
  40de32:	adc    edx,DWORD PTR [ebp-0x7]
  40de35:	ds xor al,0xcd
  40de38:	or     eax,0xf6dd49db
  40de3d:	mov    ebp,0x2710adc1
  40de42:	retf   
  40de43:	mov    ?,WORD PTR [edx+edx*2+0x55]
  40de47:	cmp    al,BYTE PTR [edi]
  40de49:	hlt    
  40de4a:	mov    ecx,0xbd511710
  40de4f:	rcr    DWORD PTR [ebx],0xaa
  40de52:	add    BYTE PTR [edi],dl
  40de54:	inc    ebp
  40de55:	daa    
  40de56:	mov    dh,0xbe
  40de58:	sub    eax,DWORD PTR [ebx-0x35e983e6]
  40de5e:	fld    QWORD PTR [ecx+0x6]
  40de61:	jg     0x40dea2
  40de63:	jl     0x40deb7
  40de65:	loopne 0x40de6d
  40de67:	push   ecx
  40de68:	aaa    
  40de69:	cmp    bl,BYTE PTR [eax-0x3e]
  40de6c:	mov    DWORD PTR [eax],eax
  40de6e:	jge    0x40deb8
  40de70:	pop    eax
  40de71:	jge    0x40de44
  40de73:	mov    BYTE PTR [edi],0xbe
  40de76:	jle    0x40dedb
  40de78:	rcr    DWORD PTR [edx],0xa
  40de7b:	xor    ch,dh
  40de7d:	jmp    0x40de17
  40de7f:	shl    BYTE PTR [ebp-0x69],cl
  40de82:	retf   0x7d13
  40de85:	ret    0xb864
  40de88:	inc    eax
  40de89:	dec    eax
  40de8a:	jns    0x40de6e
  40de8c:	icebp  
  40de8d:	sahf   
  40de8e:	and    al,0xfd
  40de90:	mov    edx,DWORD PTR [edx+esi*4+0x27]
  40de94:	sbb    BYTE PTR [esi-0x10497b4d],dh
  40de9a:	mov    ah,0xda
  40de9c:	cld    
  40de9d:	aas    
  40de9e:	lods   eax,DWORD PTR ds:[esi]
  40de9f:	lds    edi,FWORD PTR [esi+0x63c39b9]
  40dea5:	int3   
  40dea6:	add    al,BYTE PTR [eax+0x43dc6982]
  40deac:	ins    DWORD PTR es:[edi],dx
  40dead:	aaa    
  40deae:	fcomp  QWORD PTR [ebx-0x18]
  40deb1:	xchg   ecx,eax
  40deb2:	iret   
  40deb3:	jo     0x40de4a
  40deb5:	jp     0x40df2a
  40deb7:	adc    bl,BYTE PTR [ecx+0xc1ff8dc]
  40debd:	inc    edx
  40debe:	dec    edx
  40debf:	sub    ch,ah
  40dec1:	(bad)  
  40dec2:	cmp    al,0x83
  40dec4:	mov    esi,0xfbfbab04
  40dec9:	out    0x43,eax
  40decb:	scas   eax,DWORD PTR es:[edi]
  40decc:	stos   BYTE PTR es:[edi],al
  40decd:	cdq    
  40dece:	push   esi
  40decf:	jo     0x40decb
  40ded1:	sti    
  40ded2:	aas    
  40ded3:	cmp    DWORD PTR [eax],0xe8d8ae1f
  40ded9:	loop   0x40df34
  40dedb:	sbb    eax,0xb981b668
  40dee0:	pop    edx
  40dee1:	or     ah,BYTE PTR [eax+0x79c81535]
  40dee7:	or     BYTE PTR [edx+0x7d],0xef
  40deeb:	mov    cs,WORD PTR [esi]
  40deed:	push   esp
  40deee:	(bad)  
  40deef:	mov    esi,0xcea3ed89
  40def4:	inc    esi
  40def5:	adc    eax,0x5e92bae8
  40defb:	sub    eax,DWORD PTR [eax]
  40defd:	cld    
  40defe:	(bad)  
  40deff:	lahf   
  40df00:	test   eax,0x35343c64
  40df05:	xor    ebp,DWORD PTR [edi+0x78574479]
  40df0b:	adc    edx,edx
  40df0d:	or     DWORD PTR [edx+0x2],eax
  40df10:	and    eax,0xc03a491d
  40df15:	sahf   
  40df16:	nop
  40df17:	xchg   edi,eax
  40df18:	add    eax,0xc852526f
  40df1d:	fwait
  40df1e:	sub    BYTE PTR [edi],bh
  40df20:	sar    DWORD PTR [esi+0x4e2577c6],1
  40df26:	outs   dx,DWORD PTR ds:[esi]
  40df27:	les    esp,FWORD PTR ds:0xd1fc4bb4
  40df2d:	jecxz  0x40df23
  40df2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df30:	(bad)  
  40df31:	mov    bh,0xfd
  40df33:	hlt    
  40df34:	xor    bh,BYTE PTR [edx-0x59]
  40df37:	in     al,0xc4
  40df39:	pop    ss
  40df3a:	xor    al,0x9d
  40df3c:	mov    ah,BYTE PTR [ebx+0x35]
  40df3f:	or     eax,ecx
  40df41:	mov    BYTE PTR [edi+ecx*2],cl
  40df44:	adc    eax,DWORD PTR [esi+0x5f649d64]
  40df4a:	mov    ds,WORD PTR [eax+0x600e6184]
  40df50:	idiv   DWORD PTR [edi]
  40df52:	pop    ss
  40df53:	fsqrt  
  40df55:	es adc eax,0x2b92af5a
  40df5b:	push   ecx
  40df5c:	mov    ebx,0x61263d64
  40df61:	ror    BYTE PTR [ecx-0x2b],cl
  40df64:	test   al,0x77
  40df66:	or     DWORD PTR [ebx+0x4f],0x4b839b19
  40df6d:	iret   
  40df6e:	jbe    0x40df3d
  40df70:	push   ebx
  40df71:	nop
  40df72:	and    al,0x86
  40df74:	(bad)  
  40df75:	and    eax,0x3b71a57d
  40df7a:	mov    dl,0xf1
  40df7c:	clc    
  40df7d:	inc    BYTE PTR [ebp-0x72]
  40df80:	jmp    0x40df23
  40df82:	popf   
  40df83:	mov    eax,0x1c7e993d
  40df88:	push   ebp
  40df89:	stc    
  40df8a:	retf   
  40df8b:	dec    ebx
  40df8c:	call   FWORD PTR [ebp+0x5d]
  40df8f:	cmp    al,0xb2
  40df91:	jge    0x40dfc6
  40df93:	addr16 xor eax,0xb109ead7
  40df99:	sub    al,0x8f
  40df9b:	test   BYTE PTR gs:[ebx],ah
  40df9e:	jp     0x40dff5
  40dfa0:	push   edx
  40dfa1:	test   dh,bh
  40dfa3:	dec    ecx
  40dfa4:	cs inc esi
  40dfa6:	je     0x40dfea
  40dfa8:	mov    dl,0x8c
  40dfaa:	jmp    0x40dfdf
  40dfac:	mov    al,0x45
  40dfae:	push   eax
  40dfaf:	aas    
  40dfb0:	jb     0x40dff9
  40dfb2:	jb     0x40dffc
  40dfb4:	scas   eax,DWORD PTR es:[edi]
  40dfb5:	dec    ebp
  40dfb6:	push   esi
  40dfb7:	mov    edx,0xc97e1bf0
  40dfbc:	loope  0x40e020
  40dfbe:	call   DWORD PTR [eax-0x761eeafc]
  40dfc4:	popa   
  40dfc5:	pop    edi
  40dfc6:	lock jb 0x40dfe8
  40dfc9:	test   BYTE PTR [edi-0x1ef01ca6],bh
  40dfcf:	inc    edx
  40dfd0:	xchg   DWORD PTR [esi+ebp*2+0x9],ebp
  40dfd4:	mov    ch,0x5a
  40dfd6:	ret    0x6572
  40dfd9:	jno    0x40e00c
  40dfdb:	xor    eax,0xd4b78e4c
  40dfe0:	push   0xffffff80
  40dfe2:	pop    es
  40dfe3:	sub    ch,bh
  40dfe5:	mov    edi,0xcc26a754
  40dfea:	dec    edi
  40dfeb:	xchg   ecx,eax
  40dfec:	ror    BYTE PTR [ecx-0x1],cl
  40dfef:	xor    al,0xf6
  40dff1:	pop    esp
  40dff2:	(bad)  
  40dff4:	in     eax,dx
  40dff5:	mov    ds:0x3415f9a6,eax
  40dffa:	mov    edi,0x7276f823
  40dfff:	xchg   ebx,eax
  40e000:	fbld   TBYTE PTR [eax]
  40e002:	mov    gs,ebp
  40e004:	jecxz  0x40e046
  40e006:	shl    BYTE PTR [ecx],cl
  40e008:	and    DWORD PTR [ecx+ebp*8+0x669ad92],edi
  40e00f:	(bad)  
  40e010:	and    al,0x58
  40e012:	mov    bl,dh
  40e014:	psrlq  mm3,QWORD PTR [ebx+ecx*2]
  40e018:	xor    eax,0x68f4c8cb
  40e01d:	add    BYTE PTR [esi+0x20],dh
  40e020:	cmp    al,0xd2
  40e022:	outs   dx,BYTE PTR ds:[esi]
  40e023:	cdq    
  40e024:	retf   0x7e9b
  40e027:	fild   DWORD PTR ds:0xcb96ff64
  40e02d:	mov    cl,0x1e
  40e02f:	and    al,0x9b
  40e031:	jecxz  0x40dfda
  40e033:	jns    0x40dfe9
  40e035:	jbe    0x40e035
  40e037:	cmc    
  40e038:	fmul   QWORD PTR ds:0x7541211
  40e03e:	jecxz  0x40e03b
  40e040:	jbe    0x40e061
  40e042:	jge    0x40e00e
  40e044:	adc    al,0xfb
  40e046:	mov    eax,ds:0xe3ad9884
  40e04b:	(bad)  
  40e04c:	mov    eax,0x4de2c77
  40e051:	nop
  40e052:	jmp    FWORD PTR [ebx+0x5e]
  40e055:	lahf   
  40e056:	xor    ebp,DWORD PTR [ecx+0x6ef45ce]
  40e05c:	dec    edi
  40e05d:	mov    ds:0x868a3f66,eax
  40e062:	popf   
  40e063:	mov    dh,0xfa
  40e065:	xor    bh,bl
  40e067:	scas   al,BYTE PTR es:[edi]
  40e068:	cli    
  40e069:	cmp    al,0xd9
  40e06b:	dec    edx
  40e06c:	fdiv   QWORD PTR [ebp-0x6e]
  40e06f:	or     DWORD PTR [edx],0x15
  40e072:	(bad)  
  40e073:	clc    
  40e074:	nop
  40e075:	aam    0x68
  40e077:	pop    eax
  40e078:	adc    BYTE PTR [ecx+ecx*2-0x5eef8dea],dl
  40e07f:	inc    esi
  40e080:	outs   dx,BYTE PTR ds:[esi]
  40e081:	jge    0x40e0e2
  40e083:	mov    DWORD PTR [ecx],esi
  40e085:	sub    BYTE PTR cs:[ecx-0x7],0x83
  40e08a:	add    al,0x48
  40e08c:	cmp    al,0x61
  40e08e:	jmp    0x40e063
  40e090:	fimul  DWORD PTR [esi]
  40e092:	out    dx,al
  40e093:	and    ebx,DWORD PTR [eax]
  40e095:	mov    ecx,0xa7f8f14f
  40e09a:	ret    0xc6be
  40e09d:	std    
  40e09e:	dec    esp
  40e09f:	stos   BYTE PTR es:[edi],al
  40e0a0:	rcr    DWORD PTR [edx-0x3ebfe50b],cl
  40e0a6:	mov    edi,0xa7e029d5
  40e0ab:	das    
  40e0ac:	sbb    ecx,ecx
  40e0ae:	jo     0x40e0bf
  40e0b0:	sbb    ebx,ebx
  40e0b2:	mov    bl,0x82
  40e0b4:	pop    es
  40e0b5:	shl    esp,0xd7
  40e0b8:	(bad)  
  40e0b9:	fisubr DWORD PTR [edi]
  40e0bb:	sub    esp,DWORD PTR [edi+0x51]
  40e0be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e0bf:	xchg   esp,eax
  40e0c0:	sbb    eax,0x38955175
  40e0c5:	mov    bh,0x99
  40e0c7:	xor    DWORD PTR [eax-0x1a60e385],edx
  40e0cd:	rol    DWORD PTR [esi],cl
  40e0cf:	and    al,0x8e
  40e0d1:	sub    dl,BYTE PTR [edx]
  40e0d3:	push   esi
  40e0d4:	inc    esp
  40e0d5:	dec    ebx
  40e0d6:	arpl   WORD PTR [esi+0xf1d0143],bx
  40e0dc:	jne    0x40e0b3
  40e0de:	pop    esi
  40e0df:	or     BYTE PTR [esi],0x48
  40e0e2:	add    ah,dl
  40e0e4:	and    bl,ch
  40e0e6:	dec    edi
  40e0e7:	jp     0x40e162
  40e0e9:	gs adc eax,0x713033c
  40e0ef:	adc    bl,BYTE PTR [eax-0x2a8f3255]
  40e0f5:	push   eax
  40e0f6:	cmp    DWORD PTR [eax+0x33],ebx
  40e0f9:	pop    eax
  40e0fa:	xor    eax,0x89af5564
  40e0ff:	sbb    BYTE PTR [eax],0x5e
  40e102:	push   cs
  40e103:	not    DWORD PTR [ebp+0x5b6fe7ce]
  40e109:	inc    ebx
  40e10a:	js     0x40e0eb
  40e10c:	inc    esp
  40e10d:	fild   QWORD PTR [ebx]
  40e10f:	push   esi
  40e110:	ret    
  40e111:	mov    bl,BYTE PTR [eax+edi*4-0x75]
  40e115:	jo     0x40e162
  40e117:	pop    edx
  40e118:	sub    BYTE PTR [esi-0x785ae496],dl
  40e11e:	imul   esp,ebp,0x8f88f032
  40e124:	aas    
  40e125:	cs popa 
  40e127:	push   edx
  40e128:	out    0x5a,al
  40e12a:	pusha  
  40e12b:	stc    
  40e12c:	repnz cld 
  40e12e:	and    eax,0x23616148
  40e133:	xchg   ebp,eax
  40e134:	xor    BYTE PTR [ebx],al
  40e136:	sbb    BYTE PTR [ecx+0x30],0x37
  40e13a:	je     0x40e0cd
  40e13c:	sbb    ah,0x22
  40e13f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e140:	in     eax,dx
  40e141:	outs   dx,DWORD PTR ds:[esi]
  40e142:	data16 out 0xdd,al
  40e145:	push   ebx
  40e146:	bsf    esi,DWORD PTR [ecx]
  40e149:	cmc    
  40e14a:	mov    dh,0x5b
  40e14c:	dec    ebx
  40e14d:	jl     0x40e12b
  40e14f:	cmp    cl,BYTE PTR [edi-0x50]
  40e152:	out    dx,al
  40e153:	sbb    DWORD PTR [edi],ebx
  40e155:	fisub  DWORD PTR [ecx+ebp*1+0x7584e4bf]
  40e15c:	sbb    bh,bh
  40e15e:	sbb    cl,BYTE PTR [ebx]
  40e160:	mov    edi,0xc66bcf04
  40e165:	out    0xa3,al
  40e167:	in     eax,0xce
  40e169:	xor    edx,edx
  40e16b:	add    eax,0xb8dbfd2d
  40e170:	or     eax,esp
  40e172:	rcl    DWORD PTR [ecx],cl
  40e174:	cmc    
  40e175:	cmp    DWORD PTR [eax],edi
  40e177:	psrlq  mm7,QWORD PTR [eax+0x4055c000]
  40e17e:	xor    eax,0xb0a308b8
  40e183:	imul   esp,ebx,0xffffff89
  40e186:	sbb    al,0x3
  40e188:	(bad)  [eax+0x161414e0]
  40e18e:	sar    esi,0x30
  40e191:	lods   eax,DWORD PTR ds:[esi]
  40e192:	mov    eax,ds:0xe11eefa6
  40e197:	push   0x9cfc0827
  40e19c:	sub    dl,BYTE PTR [ebx+edi*1]
  40e19f:	mov    bl,0x86
  40e1a1:	inc    esp
  40e1a2:	dec    edx
  40e1a3:	popa   
  40e1a4:	xor    ecx,ebp
  40e1a6:	mov    eax,0xe7f64a5c
  40e1ab:	shl    esp,0xa6
  40e1ae:	inc    esi
  40e1af:	sbb    bh,BYTE PTR [edi]
  40e1b1:	scas   eax,DWORD PTR es:[edi]
  40e1b2:	mov    WORD PTR [ebx+0x70552abf],fs
  40e1b8:	loopne 0x40e1ac
  40e1ba:	mov    ah,0xfd
  40e1bc:	inc    esi
  40e1bd:	je     0x40e207
  40e1bf:	inc    edi
  40e1c0:	imul   ebx,DWORD PTR [eax],0x80485738
  40e1c6:	add    esp,DWORD PTR [esi-0x22b6e93d]
  40e1cc:	mov    dl,0x4e
  40e1ce:	inc    edi
  40e1cf:	cs ds scas al,BYTE PTR es:[edi]
  40e1d2:	add    eax,ecx
  40e1d4:	mov    ecx,0x589d6d30
  40e1d9:	imul   esp,DWORD PTR fs:[edi+0x11cb5144],0xd310c707
  40e1e4:	mov    edi,0x19f43bb0
  40e1e9:	or     al,0xba
  40e1eb:	ins    DWORD PTR es:[edi],dx
  40e1ec:	inc    eax
  40e1ed:	in     eax,dx
  40e1ee:	inc    edx
  40e1ef:	add    dl,BYTE PTR [eax-0x3cbdce04]
  40e1f5:	inc    esp
  40e1f6:	das    
  40e1f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e1f8:	(bad)  
  40e1f9:	sub    al,0x74
  40e1fb:	inc    edx
  40e1fc:	pop    es
  40e1fd:	inc    edi
  40e1fe:	inc    ecx
  40e1ff:	paddw  mm4,QWORD PTR [si-0xec8]
  40e205:	(bad)  
  40e206:	stos   DWORD PTR es:[edi],eax
  40e207:	into   
  40e208:	push   eax
  40e209:	lods   eax,DWORD PTR ds:[esi]
  40e20a:	daa    
  40e20b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e20c:	mov    esp,0x80269b5e
  40e211:	gs mov ch,0x87
  40e214:	mov    bh,0x1c
  40e216:	bound  edi,QWORD PTR ds:0xdc2bbc33
  40e21c:	jo     0x40e1c0
  40e21e:	add    eax,DWORD PTR [ebp+0x7d1e0e43]
  40e224:	pusha  
  40e225:	dec    esp
  40e226:	js     0x40e278
  40e228:	jg     0x40e1b1
  40e22a:	push   cs
  40e22b:	imul   edi,ebx,0xffffffe4
  40e22e:	ret    
  40e22f:	add    al,0x90
  40e231:	push   esp
  40e232:	cmp    edi,ebx
  40e234:	sub    edi,DWORD PTR [esi]
  40e236:	or     BYTE PTR [esi+ebp*2+0x6e563983],dh
  40e23d:	add    eax,DWORD PTR [edi-0x9]
  40e240:	fcomp  DWORD PTR [eax+0x2e]
  40e243:	sbb    bl,BYTE PTR [ebp+0x8]
  40e246:	mov    dh,0xd
  40e248:	out    dx,al
  40e249:	mov    WORD PTR [ecx],?
  40e24b:	ds es jo 0x40e242
  40e24f:	inc    ebp
  40e250:	push   ds
  40e251:	jne    0x40e2a4
  40e253:	pop    edi
  40e254:	shl    DWORD PTR [eax-0x2f],1
  40e257:	call   0xf4f2cdf8
  40e25c:	sbb    eax,DWORD PTR [edx+eax*1-0x48]
  40e260:	out    0x45,eax
  40e262:	inc    ebp
  40e263:	pop    ecx
  40e264:	enter  0x9feb,0xd1
  40e268:	fmul   QWORD PTR [edi+0x7f]
  40e26b:	lds    edx,FWORD PTR [esi]
  40e26d:	mov    dh,0xed
  40e26f:	mov    es,WORD PTR [ebx+eax*8]
  40e272:	or     al,0xa1
  40e274:	ja     0x40e2b1
  40e276:	sbb    DWORD PTR [ebx+edi*4-0x37],eax
  40e27a:	sbb    eax,0xb29facc7
  40e27f:	cmp    al,0xac
  40e281:	adc    al,0xeb
  40e283:	outs   dx,DWORD PTR ds:[esi]
  40e284:	jmp    0x40e206
  40e286:	mov    cl,0xb
  40e288:	adc    al,0x2d
  40e28a:	and    DWORD PTR [ebp-0x72],eax
  40e28d:	lock adc edx,ecx
  40e290:	xor    eax,DWORD PTR [ecx]
  40e292:	in     al,0x6b
  40e294:	mov    esp,DWORD PTR [esi]
  40e296:	clc    
  40e297:	cmc    
  40e298:	scas   al,BYTE PTR es:[edi]
  40e299:	or     eax,0x7c0e1144
  40e29e:	jle    0x40e296
  40e2a0:	je     0x40e2fe
  40e2a2:	mov    WORD PTR [esi+0x7b],es
  40e2a5:	lods   eax,DWORD PTR ds:[esi]
  40e2a6:	pop    eax
  40e2a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2a8:	pop    ecx
  40e2a9:	(bad)  
  40e2aa:	jo     0x40e27d
  40e2ac:	sahf   
  40e2ad:	std    
  40e2ae:	jne    0x40e282
  40e2b0:	sub    cl,BYTE PTR [edx-0x23605be8]
  40e2b6:	jle    0x40e2ba
  40e2b8:	mov    ecx,0xdfb4261e
  40e2bd:	cli    
  40e2be:	mov    bh,0x64
  40e2c0:	mov    ch,0xda
  40e2c2:	jmp    DWORD PTR [ebx-0x58cc3736]
  40e2c8:	jge    0x40e295
  40e2ca:	push   ebp
  40e2cb:	inc    edi
  40e2cc:	mov    bl,0xd6
  40e2ce:	pop    esi
  40e2cf:	pop    esi
  40e2d0:	jno    0x40e2db
  40e2d2:	ret    
  40e2d3:	into   
  40e2d4:	pop    edx
  40e2d5:	hlt    
  40e2d6:	bound  ecx,QWORD PTR [eax-0x1d8f9e27]
  40e2dc:	xor    dh,BYTE PTR [ebp+0x0]
  40e2df:	(bad)  
  40e2e0:	ins    DWORD PTR es:[edi],dx
  40e2e1:	add    eax,0xd6b1379d
  40e2e6:	in     al,0x3
  40e2e8:	inc    eax
  40e2e9:	adc    cl,BYTE PTR [ebx-0x28]
  40e2ec:	je     0x40e291
  40e2ee:	test   al,0x4a
  40e2f0:	in     al,dx
  40e2f1:	rol    ebp,cl
  40e2f3:	(bad)  
  40e2f4:	add    DWORD PTR ds:0x7861d65,eax
  40e2fa:	mov    esi,0x27bebd9c
  40e2ff:	cmp    dl,BYTE PTR ds:0x75736f50
  40e305:	push   0x82eeccf5
  40e30a:	mov    bl,0x57
  40e30c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e30d:	xchg   ebp,eax
  40e30e:	pusha  
  40e30f:	mov    ?,WORD PTR [eax-0x1cb4ffcf]
  40e315:	shl    BYTE PTR [ebp+0x1a],0x78
  40e319:	push   edi
  40e31a:	aad    0xdf
  40e31c:	adc    al,BYTE PTR [esi+0x7640385]
  40e322:	lea    ebp,[eax]
  40e324:	push   ebx
  40e325:	jo     0x40e2c4
  40e327:	ret    
  40e328:	ins    DWORD PTR es:[edi],dx
  40e329:	inc    edx
  40e32a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e32b:	(bad)  
  40e32c:	pop    ds
  40e32d:	int3   
  40e32e:	cli    
  40e32f:	cmc    
  40e330:	mov    ah,0xef
  40e332:	test   eax,0xbb7cf545
  40e337:	mov    dh,0x40
  40e339:	and    eax,0x1eadcea5
  40e33e:	pop    esi
  40e33f:	sar    BYTE PTR [edx+0x52ff991c],cl
  40e345:	adc    al,0x1
  40e347:	sub    eax,0xcff1e8cd
  40e34c:	sub    DWORD PTR [ebx],eax
  40e34e:	aad    0x8c
  40e350:	and    al,0x89
  40e352:	ins    DWORD PTR es:[edi],dx
  40e353:	xor    DWORD PTR [esi],esi
  40e355:	cmc    
  40e356:	inc    esi
  40e357:	pushf  
  40e358:	cmp    DWORD PTR [ecx+0x54],ebp
  40e35b:	aam    0x6d
  40e35d:	add    BYTE PTR [edx-0x79],dl
  40e360:	or     ebx,DWORD PTR [ecx-0x80]
  40e363:	dec    edx
  40e364:	pop    ds
  40e365:	sbb    dl,al
  40e367:	push   ds
  40e368:	mov    BYTE PTR [ecx-0x6bbf28da],0xe8
  40e36f:	lods   al,BYTE PTR ds:[esi]
  40e370:	xor    BYTE PTR [edx+esi*8],al
  40e373:	cmp    al,0x5f
  40e375:	loope  0x40e3e8
  40e377:	add    DWORD PTR [ebx],ebp
  40e379:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e37a:	stos   DWORD PTR es:[edi],eax
  40e37b:	jmp    0x40e3c6
  40e37d:	stc    
  40e37e:	ins    BYTE PTR es:[edi],dx
  40e37f:	daa    
  40e380:	rol    BYTE PTR [edx+0x56],1
  40e383:	mov    ebx,0xaa10529b
  40e388:	shl    DWORD PTR [eax-0x12],0xcf
  40e38c:	add    eax,0xa146ebdd
  40e391:	sbb    DWORD PTR [ebp+0x2e396269],edi
  40e397:	mov    ds:0x74b4f65d,eax
  40e39c:	stc    
  40e39d:	xor    dh,BYTE PTR [esi]
  40e39f:	rol    BYTE PTR [edx-0x2163d432],0x86
  40e3a6:	jno    0x40e354
  40e3a8:	dec    edi
  40e3a9:	(bad)  [ebx+ebp*8-0x57]
  40e3ad:	gs das 
  40e3af:	in     eax,dx
  40e3b0:	stos   BYTE PTR es:[edi],al
  40e3b1:	add    eax,0xf4172e5
  40e3b6:	or     al,BYTE PTR [edx+ebp*1-0x48f18cc1]
  40e3bd:	mov    DWORD PTR [edi],ebx
  40e3bf:	in     eax,0x64
  40e3c1:	jae    0x40e3a9
  40e3c3:	xor    eax,0x9036c2f1
  40e3c8:	ja     0x40e373
  40e3ca:	pop    ds
  40e3cb:	mov    ch,0x2b
  40e3cd:	call   0x15d67d4a
  40e3d2:	sub    al,0x2e
  40e3d4:	sbb    BYTE PTR [eax-0x59ee8c28],0xfc
  40e3db:	push   ds
  40e3dc:	and    esp,0x47
  40e3df:	ja     0x40e3b3
  40e3e1:	mov    bl,0x57
  40e3e3:	xchg   esp,eax
  40e3e4:	mov    eax,ds:0x584eb50
  40e3e9:	fsub   QWORD PTR [ecx]
  40e3eb:	push   es
  40e3ec:	fidiv  DWORD PTR [edi+eax*2+0x11]
  40e3f0:	lds    edx,FWORD PTR [esi+0x5e]
  40e3f3:	mov    ds:0xb9532ac5,eax
  40e3f8:	adc    al,0xe8
  40e3fa:	push   ecx
  40e3fb:	xlat   BYTE PTR ds:[ebx]
  40e3fc:	cwde   
  40e3fd:	add    BYTE PTR [esi+0x45],bh
  40e400:	ins    DWORD PTR es:[edi],dx
  40e401:	push   ebx
  40e402:	xor    al,0x4b
  40e404:	mov    dl,0x4e
  40e406:	adc    al,0xf7
  40e408:	lahf   
  40e409:	dec    edx
  40e40a:	stos   DWORD PTR es:[edi],eax
  40e40b:	adc    cl,BYTE PTR [edi]
  40e40d:	retf   
  40e40e:	cmp    eax,DWORD PTR [ebx-0x3a]
  40e411:	push   eax
  40e412:	div    DWORD PTR [esi+0x2e]
  40e415:	cdq    
  40e416:	dec    esi
  40e417:	dec    ebp
  40e418:	fimul  DWORD PTR [eax]
  40e41a:	cmp    eax,0xb0c17c33
  40e41f:	pop    esp
  40e420:	icebp  
  40e421:	int    0xd4
  40e423:	or     al,0x23
  40e425:	pop    edx
  40e426:	repz call 0x10a9:0x1318c34e
  40e42e:	pop    edi
  40e42f:	mov    eax,DWORD PTR ds:0x89845396
  40e435:	pop    DWORD PTR [ebp+0x71]
  40e438:	push   edi
  40e439:	popf   
  40e43a:	add    eax,0xee9dbdd9
  40e440:	xor    al,0x6e
  40e442:	mov    edi,0xb67a63
  40e447:	xchg   DWORD PTR [esi],edx
  40e449:	mov    esp,0x92e0880e
  40e44e:	push   eax
  40e44f:	adc    al,0x73
  40e451:	pop    eax
  40e452:	mov    BYTE PTR [edx-0x6c1002f0],0xd6
  40e459:	push   cs
  40e45a:	mov    edi,0xa0eafef8
  40e45f:	outs   dx,BYTE PTR ds:[esi]
  40e460:	out    dx,al
  40e461:	jb     0x40e4bc
  40e463:	sar    DWORD PTR [ebp-0x71e28179],1
  40e469:	push   es
  40e46a:	cdq    
  40e46b:	and    al,0x97
  40e46d:	div    BYTE PTR [ecx]
  40e46f:	fdivr  st,st(3)
  40e471:	sbb    edx,eax
  40e473:	cdq    
  40e474:	nop
  40e475:	pusha  
  40e476:	push   es
  40e477:	hlt    
  40e478:	pop    ecx
  40e479:	outs   dx,DWORD PTR ds:[esi]
  40e47a:	sbb    ecx,edx
  40e47c:	(bad)  [edi]
  40e47e:	xor    BYTE PTR [esi],cl
  40e480:	sbb    ah,dh
  40e482:	inc    esi
  40e483:	ds xor eax,0xaf542ebf
  40e489:	sub    BYTE PTR [edi+0x68a637fa],al
  40e48f:	lods   al,BYTE PTR ds:[esi]
  40e490:	xor    al,0xef
  40e492:	xchg   edi,eax
  40e493:	jmp    0x4bddc6f9
  40e498:	push   eax
  40e499:	stos   BYTE PTR es:[edi],al
  40e49a:	sub    al,0xc7
  40e49c:	jp     0x40e471
  40e49e:	out    0x90,al
  40e4a0:	xchg   ebx,eax
  40e4a1:	lods   eax,DWORD PTR ds:[esi]
  40e4a2:	add    eax,0xb523e240
  40e4a7:	or     edx,DWORD PTR [edi-0x18c67380]
  40e4ad:	jo     0x40e4ce
  40e4af:	mov    bl,0x5f
  40e4b1:	daa    
  40e4b2:	lock pop esi
  40e4b4:	or     edx,edx
  40e4b6:	push   ds
  40e4b7:	inc    edi
  40e4b8:	adc    esp,DWORD PTR [ecx+0xd]
  40e4bb:	mov    esp,0xe74d4c26
  40e4c0:	es (bad) 
  40e4c2:	neg    edi
  40e4c4:	popa   
  40e4c5:	cmp    BYTE PTR [esi],0x5f
  40e4c8:	loope  0x40e525
  40e4ca:	jb     0x40e4fe
  40e4cc:	mov    dl,0xed
  40e4ce:	cld    
  40e4cf:	mov    ecx,0x7e9aa677
  40e4d4:	cmp    cl,BYTE PTR [esi+0x37]
  40e4d7:	mov    eax,0xcd9e0b1a
  40e4dc:	lods   eax,DWORD PTR ds:[esi]
  40e4dd:	std    
  40e4de:	mov    esi,0xf89f6f9e
  40e4e3:	aad    0x2e
  40e4e5:	das    
  40e4e6:	cmp    edx,DWORD PTR [ebx]
  40e4e8:	mov    esi,0xc72b8d32
  40e4ed:	push   0x66d32851
  40e4f2:	mov    edi,0xbe7065fa
  40e4f7:	hlt    
  40e4f8:	mov    esi,0x3fab35e0
  40e4fd:	jp     0x40e522
  40e4ff:	adc    eax,DWORD PTR [esi]
  40e501:	xor    al,0x1e
  40e503:	inc    esi
  40e504:	and    BYTE PTR [esi],dl
  40e506:	pop    ecx
  40e507:	push   cs
  40e508:	iret   
  40e509:	adc    al,0x94
  40e50b:	sbb    DWORD PTR [ebp-0x41acb4a1],esp
  40e511:	sahf   
  40e512:	out    0x71,eax
  40e514:	jecxz  0x40e4d6
  40e516:	mov    edi,0x74934b85
  40e51b:	xchg   ebx,eax
  40e51c:	mov    esp,0x704758fc
  40e521:	pop    ecx
  40e522:	addr16 mov ebx,0x3c4fd213
  40e528:	shl    dh,0x68
  40e52b:	jecxz  0x40e4d1
  40e52d:	lea    edi,[ecx-0x12f1a741]
  40e533:	ins    BYTE PTR es:[edi],dx
  40e534:	cmp    ah,cl
  40e536:	mov    esp,0x677bd38
  40e53b:	loopne 0x40e55a
  40e53d:	xchg   DWORD PTR [eax+0xf],esi
  40e540:	int3   
  40e541:	xchg   ebp,eax
  40e542:	dec    esp
  40e543:	mov    ebx,0x34b616e6
  40e548:	shr    BYTE PTR [esi],0x94
  40e54b:	out    0x3f,al
  40e54d:	and    ah,BYTE PTR [eax-0x62]
  40e550:	cmp    DWORD PTR [ecx*4-0x1d4049b2],ecx
  40e557:	leave  
  40e558:	jl     0x40e5c7
  40e55a:	pop    edi
  40e55b:	jmp    FWORD PTR [ecx]
  40e55d:	pop    ss
  40e55e:	aaa    
  40e55f:	xor    al,0x9e
  40e561:	lods   al,BYTE PTR ds:[esi]
  40e562:	mov    ds:0x4b09cfa0,al
  40e567:	xchg   BYTE PTR [ecx+0x21177863],ch
  40e56d:	cmp    DWORD PTR [edx+0x838230],0x929c2161
  40e577:	mov    ds:0x65b51c01,eax
  40e57c:	test   DWORD PTR [esi],eax
  40e57e:	push   0xc958a792
  40e583:	(bad)  
  40e584:	call   0xef27a9f
  40e589:	aaa    
  40e58a:	mov    edx,0xa02fb144
  40e58f:	popf   
  40e590:	pop    eax
  40e591:	div    BYTE PTR [edi]
  40e593:	add    DWORD PTR es:[eax-0x42],0x3fba52b0
  40e59b:	loop   0x40e56f
  40e59d:	mov    cl,0xd6
  40e59f:	hlt    
  40e5a0:	xor    bl,ch
  40e5a2:	mov    BYTE PTR [edx],bh
  40e5a4:	and    ch,BYTE PTR [ecx+0x72]
  40e5a7:	push   0xbbd8f34e
  40e5ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e5ad:	adc    esp,DWORD PTR [eax+0x2f4781dc]
  40e5b3:	ror    BYTE PTR [ecx],cl
  40e5b5:	loopne 0x40e5a5
  40e5b7:	cwde   
  40e5b8:	nop    esp
  40e5bb:	pop    es
  40e5bc:	int    0xf1
  40e5be:	sbb    al,0x6
  40e5c0:	jb     0x40e62b
  40e5c2:	inc    edx
  40e5c3:	jae    0x40e57a
  40e5c5:	out    0x2d,eax
  40e5c7:	loop   0x40e5d6
  40e5c9:	loopne 0x40e595
  40e5cb:	outs   dx,DWORD PTR ds:[esi]
  40e5cc:	je     0x40e555
  40e5ce:	aaa    
  40e5cf:	and    edi,DWORD PTR [edi]
  40e5d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5d2:	(bad)  
  40e5d3:	mov    ebp,0x597a4c0b
  40e5d8:	test   al,0x80
  40e5da:	or     al,ch
  40e5dc:	xchg   ebp,eax
  40e5dd:	pop    ebp
  40e5de:	mov    DWORD PTR [ebx+0x75],edx
  40e5e1:	std    
  40e5e2:	mov    ch,0x52
  40e5e4:	stos   DWORD PTR es:[edi],eax
  40e5e5:	inc    edi
  40e5e6:	scas   al,BYTE PTR es:[edi]
  40e5e7:	ja     0x40e573
  40e5e9:	cli    
  40e5ea:	sub    al,0xea
  40e5ec:	retf   0x6971
  40e5ef:	xor    eax,DWORD PTR [esp+eiz*2+0x76]
  40e5f3:	sbb    ch,BYTE PTR [edi+esi*8-0x2462b4af]
  40e5fa:	jg     0x40e58c
  40e5fc:	jp     0x40e60b
  40e5fe:	xchg   ebp,eax
  40e5ff:	and    ebp,DWORD PTR [ebx]
  40e601:	int    0xcc
  40e603:	push   esp
  40e604:	lahf   
  40e605:	and    ch,BYTE PTR [eax+0x31]
  40e608:	sbb    al,BYTE PTR [edx]
  40e60a:	jb     0x40e67d
  40e60c:	movntps XMMWORD PTR [eax],xmm3
  40e60f:	dec    DWORD PTR [ebp+0x1e]
  40e612:	add    ebp,edx
  40e614:	in     al,0x73
  40e616:	jo     0x40e5d0
  40e618:	and    eax,DWORD PTR [ebx-0x236a8c4b]
  40e61e:	retf   0x7e8
  40e621:	in     eax,dx
  40e622:	or     eax,DWORD PTR [edx]
  40e624:	jae    0x40e650
  40e626:	dec    edi
  40e627:	mov    esi,0x63e571c3
  40e62c:	ins    BYTE PTR es:[edi],dx
  40e62d:	into   
  40e62e:	xor    BYTE PTR [eax-0x2e],dh
  40e631:	repz push ebx
  40e633:	mov    dl,0x6b
  40e635:	add    ch,dh
  40e637:	adc    ecx,DWORD PTR [esi]
  40e639:	inc    esp
  40e63a:	daa    
  40e63b:	in     eax,0x8e
  40e63d:	or     al,0x67
  40e63f:	jbe    0x40e5f2
  40e641:	rcr    BYTE PTR [eax+0x66],0x17
  40e645:	int    0xcb
  40e647:	jmp    0x1c2b:0x2607a571
  40e64e:	pop    es
  40e64f:	(bad)  
  40e650:	out    0x20,al
  40e652:	and    BYTE PTR [edi+0x7b],dh
  40e655:	add    DWORD PTR [ebx-0x1d],0xffffffa1
  40e659:	fild   QWORD PTR [ebp-0x5387de63]
  40e65f:	xchg   ebx,eax
  40e660:	dec    edi
  40e661:	add    ebp,ebp
  40e663:	and    DWORD PTR [edx-0x319ddc49],ebp
  40e669:	adc    DWORD PTR [ecx+0x6f],ebp
  40e66c:	mov    ebx,0x1f9ddb22
  40e671:	dec    esp
  40e672:	dec    edi
  40e673:	retf   0x39e9
  40e676:	xlat   BYTE PTR ds:[ebx]
  40e677:	pop    eax
  40e678:	mov    eax,0xfc69aa9c
  40e67d:	in     al,0x6f
  40e67f:	js     0x40e604
  40e681:	or     DWORD PTR [edi+0x30],ecx
  40e684:	aaa    
  40e685:	mov    bh,0xec
  40e687:	out    0x62,eax
  40e689:	mov    eax,ds:0x34f962b1
  40e68e:	sbb    eax,0x5cf7d946
  40e693:	fstp   DWORD PTR [ebx+0x17a6e222]
  40e699:	mov    esp,0xe67ed7e7
  40e69e:	aam    0x62
  40e6a0:	dec    ebp
  40e6a1:	out    0x5b,eax
  40e6a3:	inc    esp
  40e6a4:	xor    esi,DWORD PTR [edx-0x4dc00df]
  40e6aa:	retf   0xb6ed
  40e6ad:	xchg   ebp,eax
  40e6ae:	mov    ah,0x38
  40e6b0:	or     ecx,edx
  40e6b2:	fxch   st(1)
  40e6b4:	inc    edx
  40e6b5:	ret    0x1a5d
  40e6b8:	push   eax
  40e6b9:	mov    esi,DWORD PTR [ebx-0x2f167d2a]
  40e6bf:	xchg   edx,eax
  40e6c0:	retf   0x34d9
  40e6c3:	mov    cx,0x7863
  40e6c7:	int    0xea
  40e6c9:	pop    ss
  40e6ca:	inc    edi
  40e6cb:	jmp    DWORD PTR [esi-0x65]
  40e6ce:	int    0x43
  40e6d0:	sbb    cl,0x73
  40e6d3:	dec    ebx
  40e6d4:	xchg   edx,eax
  40e6d5:	in     al,dx
  40e6d6:	or     eax,0xf98af67b
  40e6db:	pop    ss
  40e6dc:	cmp    DWORD PTR [edx-0x46fb4c6f],edx
  40e6e2:	xor    bh,bl
  40e6e4:	mov    ebp,0xe447f77e
  40e6e9:	scas   al,BYTE PTR es:[edi]
  40e6ea:	sub    al,0xec
  40e6ec:	sub    eax,0x4db59477
  40e6f1:	ds clc 
  40e6f3:	or     edi,0xae11e59e
  40e6f9:	fiadd  WORD PTR [ebp-0x35628b1f]
  40e6ff:	aam    0xc
  40e701:	mov    ds:0xd57717ae,al
  40e706:	sar    BYTE PTR [ecx+ebp*8],1
  40e709:	mov    ch,0xdf
  40e70b:	outs   dx,DWORD PTR ds:[esi]
  40e70c:	sbb    DWORD PTR [ecx-0x5639f0dc],0x2d
  40e713:	leave  
  40e714:	call   0x52f8:0x1ec0e9c2
  40e71b:	adc    al,0xd2
  40e71d:	sub    eax,0xeb42ad14
  40e722:	clc    
  40e723:	jp     0x40e6bf
  40e725:	je     0x40e6b8
  40e727:	mov    eax,0x1ccc0681
  40e72c:	lds    esp,FWORD PTR [ebp+0x577490fe]
  40e732:	or     DWORD PTR [ebx-0x2ca2adab],esi
  40e738:	sbb    dl,dl
  40e73a:	sub    al,0xaf
  40e73c:	sub    ecx,ebx
  40e73e:	dec    esi
  40e73f:	stos   BYTE PTR es:[edi],al
  40e740:	js     0x40e6f2
  40e742:	(bad)  
  40e743:	sbb    eax,0x6e8a0779
  40e748:	lods   al,BYTE PTR ds:[esi]
  40e749:	push   esp
  40e74a:	into   
  40e74b:	out    dx,al
  40e74c:	sub    dh,ch
  40e74e:	cdq    
  40e74f:	mov    eax,0xb0fe6818
  40e754:	xor    DWORD PTR [edi],edi
  40e756:	inc    esp
  40e757:	dec    eax
  40e758:	stos   BYTE PTR es:[edi],al
  40e759:	dec    ecx
  40e75a:	imul   ebx,DWORD PTR [ebp+esi*4-0x69],0x604e9934
  40e762:	mov    bh,BYTE PTR [edi+0x79]
  40e765:	nop
  40e766:	xchg   BYTE PTR [ebx],bl
  40e768:	stc    
  40e769:	sahf   
  40e76a:	mov    edx,0xad4977b4
  40e76f:	pop    es
  40e770:	cmp    BYTE PTR [esi-0x60a63db4],0x34
  40e777:	dec    esi
  40e778:	jmp    0x40e7db
  40e77a:	or     bl,dl
  40e77c:	shr    cl,0x2e
  40e77f:	push   edi
  40e780:	inc    BYTE PTR [edx+0x5c]
  40e783:	enter  0x8049,0xbe
  40e787:	adc    al,0x44
  40e789:	push   ds
  40e78a:	or     al,0xab
  40e78c:	pushf  
  40e78d:	fisttp WORD PTR [eax-0x48]
  40e790:	inc    ecx
  40e791:	sub    al,0xa7
  40e793:	or     eax,0xb667ddca
  40e798:	inc    esp
  40e799:	aas    
  40e79a:	pop    ss
  40e79b:	or     dl,BYTE PTR gs:[edx-0x4498f431]
  40e7a2:	loope  0x40e81a
  40e7a4:	xchg   esi,eax
  40e7a5:	fwait
  40e7a6:	xor    eax,0x23e82775
  40e7ab:	call   0x576a:0xd1bc00b5
  40e7b2:	fs or  al,0x39
  40e7b5:	push   ds
  40e7b6:	ret    
  40e7b7:	aam    0xb1
  40e7b9:	pusha  
  40e7ba:	outs   dx,DWORD PTR ds:[esi]
  40e7bb:	ins    BYTE PTR es:[edi],dx
  40e7bc:	aaa    
  40e7bd:	cli    
  40e7be:	aam    0x30
  40e7c0:	mov    ds:0x4ccde10b,al
  40e7c5:	mov    esp,0xcb31f4cb
  40e7ca:	push   ss
  40e7cb:	sub    esp,ebp
  40e7cd:	sti    
  40e7ce:	test   BYTE PTR [edi-0x14],al
  40e7d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7d2:	mov    cl,0x4
  40e7d4:	sbb    DWORD PTR [ebx+ecx*4],esi
  40e7d7:	popa   
  40e7d8:	fwait
  40e7d9:	test   al,0xb4
  40e7db:	lea    esi,[ebx+0x93f5b54]
  40e7e1:	and    ecx,DWORD PTR [esi+0x55]
  40e7e4:	pushf  
  40e7e5:	inc    edi
  40e7e6:	sti    
  40e7e7:	mov    ebp,0x1aa7c2b9
  40e7ec:	pop    ebx
  40e7ed:	cmp    ebp,DWORD PTR [esi-0x15ab4ee9]
  40e7f3:	loopne 0x40e813
  40e7f5:	adc    dl,BYTE PTR [ebx+0x5b6c62a6]
  40e7fb:	in     al,0x34
  40e7fd:	nop
  40e7fe:	pop    esi
  40e7ff:	sbb    ch,BYTE PTR [eax-0x1f00e0ff]
  40e805:	mov    ebp,DWORD PTR [esi-0x74a98098]
  40e80b:	jb     0x40e864
  40e80d:	cld    
  40e80e:	and    BYTE PTR [ebp+ecx*8+0x50],dh
  40e812:	xor    edi,DWORD PTR [ecx+edi*1]
  40e815:	xor    BYTE PTR [ecx-0x1f],bh
  40e818:	es pop ebp
  40e81a:	push   es
  40e81b:	xchg   esi,eax
  40e81c:	ret    0x6aff
  40e81f:	fwait
  40e820:	push   ss
  40e821:	mov    ds:0x76ef830,eax
  40e826:	sbb    al,0x62
  40e828:	in     al,0x9b
  40e82a:	sub    eax,0xd4eea872
  40e82f:	adc    edi,DWORD PTR [eax+0x16]
  40e832:	addr16 push 0xf46d24a4
  40e838:	test   al,0xac
  40e83a:	jge    0x40e7cb
  40e83c:	in     al,0xe6
  40e83e:	fsubr  DWORD PTR [edx-0x2b]
  40e841:	cmp    BYTE PTR [esi+0x63ce333b],bl
  40e847:	fnsave [edi*2+0x735bddf1]
  40e84e:	jmp    0x33ad0a8c
  40e853:	xchg   esi,eax
  40e854:	jbe    0x40e88b
  40e856:	sbb    DWORD PTR [edx+0x3bb7b951],eax
  40e85c:	sbb    ch,BYTE PTR [ebp+0x49a42536]
  40e862:	mov    edx,0x98f60aa9
  40e867:	add    DWORD PTR [edx],ebx
  40e869:	pushf  
  40e86a:	pusha  
  40e86b:	pop    ss
  40e86c:	cs out dx,al
  40e86e:	mov    edx,0x9e631ce3
  40e873:	ror    BYTE PTR [edi-0x9],1
  40e876:	test   al,0x87
  40e878:	mov    al,ds:0xe05eecce
  40e87d:	fnstenv [ecx+0x1e69355a]
  40e883:	fcomp  QWORD PTR [ebx+0x547004b9]
  40e889:	dec    eax
  40e88a:	lods   al,BYTE PTR ds:[esi]
  40e88b:	dec    esp
  40e88c:	(bad)
  40e88f:	shr    DWORD PTR [esi+0x45],cl
  40e892:	jnp    0x40e872
  40e894:	popa   
  40e895:	mov    ebx,0xbccc3074
  40e89a:	inc    eax
  40e89b:	xchg   BYTE PTR [edi+0x373c4575],ch
  40e8a1:	jmp    0x8730:0xe49b4fa3
  40e8a8:	(bad)  
  40e8a9:	and    ah,BYTE PTR [ebx+0x47]
  40e8ac:	push   ebx
  40e8ad:	or     ah,BYTE PTR [edx+0x68]
  40e8b0:	jl     0x40e8c5
  40e8b2:	(bad)  
  40e8b3:	and    DWORD PTR [ebp+0x575a6c32],ebx
  40e8b9:	pusha  
  40e8ba:	out    0xb,al
  40e8bc:	dec    edx
  40e8bd:	ja     0xbe154299
  40e8c3:	add    BYTE PTR [ecx],cl
  40e8c5:	mov    cl,0x52
  40e8c7:	add    DWORD PTR [ebp+0x30],ebp
  40e8ca:	pop    ebx
  40e8cb:	and    ebx,esi
  40e8cd:	es hlt 
  40e8cf:	xlat   BYTE PTR ds:[ebx]
  40e8d0:	inc    ebp
  40e8d1:	jge    0x40e879
  40e8d3:	or     esp,0x65956b0e
  40e8d9:	imul   ebp,esp,0x71
  40e8dc:	je     0x40e919
  40e8de:	and    BYTE PTR [eax+0x4414d58],bl
  40e8e4:	icebp  
  40e8e5:	test   eax,0xe850cfce
  40e8ea:	xchg   ecx,eax
  40e8eb:	or     DWORD PTR [si-0x61],0xffffffbf
  40e8f0:	dec    edx
  40e8f1:	mov    al,0x43
  40e8f3:	and    dh,BYTE PTR [edx+eiz*8+0x4c]
  40e8f7:	ret    0x313c
  40e8fa:	mov    edx,0x82b1f611
  40e8ff:	xchg   BYTE PTR [edi-0x6fdc70c],ch
  40e905:	ret    
  40e906:	mov    ah,0x1a
  40e908:	mov    al,ds:0x1465a35
  40e90d:	jmp    0xa3a3aa20
  40e912:	add    BYTE PTR [esi],bh
  40e914:	inc    ecx
  40e915:	test   BYTE PTR [edi+0x53],ch
  40e918:	inc    edi
  40e919:	(bad)  
  40e91a:	inc    edx
  40e91c:	stos   BYTE PTR es:[edi],al
  40e91d:	popf   
  40e91e:	dec    ecx
  40e91f:	push   eax
  40e920:	mov    ebx,0x959597e3
  40e925:	push   0x932750e4
  40e92a:	repnz mov ah,0xcf
  40e92d:	addr16 push ebx
  40e92f:	adc    ebp,DWORD PTR [ebx+0x6]
  40e932:	mov    edi,DWORD PTR [eax-0x64feb4b5]
  40e938:	pop    ebp
  40e939:	lock ret 
  40e93b:	or     ebx,DWORD PTR [eax-0x46]
  40e93e:	cs pop es
  40e940:	adc    eax,0x2a544f4a
  40e945:	aad    0x31
  40e947:	and    al,0x5f
  40e949:	mov    edx,0x9fbe051b
  40e94e:	(bad)  
  40e94f:	and    cl,dl
  40e951:	mov    al,0xc7
  40e953:	dec    ecx
  40e954:	mov    edx,0xe5c53b71
  40e959:	sub    eax,0xa15b00a1
  40e95e:	cs cld 
  40e960:	aaa    
  40e961:	mov    cl,0xd6
  40e963:	addr16 and al,0x3c
  40e966:	and    bh,BYTE PTR [esi+0x3f]
  40e969:	test   BYTE PTR [edx-0x315447a6],0x3e
  40e970:	(bad)  
  40e971:	jl     0x40e9c8
  40e973:	or     eax,0x88c44e60
  40e978:	cwde   
  40e979:	enter  0x59d7,0x90
  40e97d:	xchg   edx,eax
  40e97e:	div    DWORD PTR [ebx+0x7945624e]
  40e984:	fimul  DWORD PTR [ebp+0x3357fec0]
  40e98a:	enter  0x7ba4,0x4d
  40e98e:	sub    esp,DWORD PTR [esp-0x5b]
  40e992:	jp     0x40e959
  40e994:	aam    0x65
  40e996:	ins    BYTE PTR es:[edi],dx
  40e997:	iret   
  40e998:	(bad)  
  40e999:	push   esp
  40e99a:	(bad)  
  40e99b:	dec    edx
  40e99c:	mov    ?,WORD PTR [ebx+0x473bed37]
  40e9a2:	xchg   ecx,eax
  40e9a3:	jno    0x40e9db
  40e9a5:	xlat   BYTE PTR ds:[ebx]
  40e9a6:	mov    cl,0x37
  40e9a8:	sbb    DWORD PTR [edi],esi
  40e9aa:	sbb    DWORD PTR [eax+ebx*1],ebp
  40e9ad:	push   esi
  40e9ae:	outs   dx,DWORD PTR ds:[esi]
  40e9af:	push   cs
  40e9b0:	(bad)  
  40e9b1:	sbb    DWORD PTR [edi-0x18],ebp
  40e9b4:	push   esi
  40e9b5:	loop   0x40ea04
  40e9b7:	or     BYTE PTR [ecx+eiz*4+0x4f587d33],ch
  40e9be:	gs (bad) 
  40e9c0:	push   ss
  40e9c1:	mov    ebx,DWORD PTR [esi]
  40e9c3:	daa    
  40e9c4:	in     al,dx
  40e9c5:	xor    al,0xa1
  40e9c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9c8:	and    al,0xcd
  40e9ca:	ins    DWORD PTR es:[edi],dx
  40e9cb:	dec    edx
  40e9cc:	push   eax
  40e9cd:	out    0x4c,al
  40e9cf:	ins    DWORD PTR es:[edi],dx
  40e9d0:	daa    
  40e9d1:	mov    WORD PTR [ebp-0x1e3b1fad],fs
  40e9d7:	jb     0x40ea3e
  40e9d9:	je     0x40ea2b
  40e9db:	xor    DWORD PTR [ecx-0x3e],esi
  40e9de:	mov    WORD PTR [eax-0x3d],gs
  40e9e1:	aas    
  40e9e2:	bnd jb 0x40e972
  40e9e5:	mov    edx,DWORD PTR [eax+0x76a5c375]
  40e9eb:	push   eax
  40e9ec:	les    esp,FWORD PTR [edx]
  40e9ee:	mov    dh,0x8
  40e9f0:	enter  0xec21,0xcc
  40e9f4:	fld    TBYTE PTR [edx]
  40e9f6:	nop
  40e9f7:	push   ecx
  40e9f8:	push   ss
  40e9f9:	cmp    eax,0x186fda96
  40e9fe:	push   ecx
  40e9ff:	xlat   BYTE PTR ds:[ebx]
  40ea00:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ea01:	push   es
  40ea02:	repnz pop ebp
  40ea04:	jle    0x40e992
  40ea06:	fistp  QWORD PTR [eax-0x31230484]
  40ea0c:	sahf   
  40ea0d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ea0e:	and    al,BYTE PTR [eax-0xd]
  40ea11:	test   eax,0x61230d25
  40ea16:	retf   0xf726
  40ea19:	xor    cl,BYTE PTR [ebx+eiz*4-0x7cf0e103]
  40ea20:	test   al,0x1
  40ea22:	inc    ecx
  40ea23:	or     BYTE PTR [edi+eax*1],0x61
  40ea27:	pop    es
  40ea28:	cmp    al,0x99
  40ea2a:	jmp    0x9e3:0xb689241b
  40ea31:	aaa    
  40ea32:	xchg   edx,eax
  40ea33:	cwde   
  40ea34:	sbb    al,0xa5
  40ea36:	cmp    al,BYTE PTR [esi+0x7a1825a2]
  40ea3c:	pop    ss
  40ea3d:	pop    ebx
  40ea3e:	test   al,0x77
  40ea40:	int    0x28
  40ea42:	ins    BYTE PTR es:[edi],dx
  40ea43:	mov    DWORD PTR [edi+ecx*2-0x6f],edx
  40ea47:	mov    edi,0x93c929bb
  40ea4c:	sbb    BYTE PTR [ecx+0x28637acb],bh
  40ea52:	addr16 std 
  40ea54:	xchg   BYTE PTR [ebp+0xf89982],al
  40ea5a:	int    0xf2
  40ea5c:	mov    ah,cl
  40ea5e:	call   0x7a7d:0x7b05b8d5
  40ea65:	(bad)  
  40ea66:	bndldx (bad),[edi]
  40ea69:	rcl    DWORD PTR [ebx-0x35],cl
  40ea6c:	pop    eax
  40ea6d:	sub    DWORD PTR [eax+0x313745f1],edx
  40ea73:	jmp    0xcb85:0x8bea4cf3
  40ea7a:	add    dl,dl
  40ea7c:	mov    edi,0x5c75c5b
  40ea81:	fs cmp al,0xa7
  40ea84:	xchg   BYTE PTR [ebp-0x12],al
  40ea87:	mov    dl,0xc
  40ea89:	aas    
  40ea8a:	xchg   esp,eax
  40ea8b:	cmp    BYTE PTR [esi-0xd],ah
  40ea8e:	add    ebp,eax
  40ea90:	aam    0x68
  40ea92:	pusha  
  40ea93:	xchg   edx,eax
  40ea94:	pop    ebp
  40ea95:	or     eax,0x864bdaeb
  40ea9a:	bound  ebx,QWORD PTR [ebx-0x62]
  40ea9d:	fmul   DWORD PTR [esi+0x3b9d3d00]
  40eaa3:	and    bl,dl
  40eaa5:	inc    DWORD PTR [esi]
  40eaa7:	inc    ebp
  40eaa8:	enter  0x9af5,0xcd
  40eaac:	and    esi,esp
  40eaae:	add    edx,DWORD PTR [edi+edi*8]
  40eab1:	and    al,BYTE PTR [esi]
  40eab3:	and    al,0xe3
  40eab5:	push   edx
  40eab6:	jmp    0x5d77cf93
  40eabb:	xchg   esi,eax
  40eabc:	xchg   BYTE PTR ds:0x66c175c6,ch
  40eac2:	into   
  40eac3:	or     eax,0x22b7b24d
  40eac8:	imul   esp,DWORD PTR ds:0x6d7cb766,0xfa63889e
  40ead2:	push   ebp
  40ead3:	fisub  WORD PTR [edi-0x74d6d0f1]
  40ead9:	cmp    DWORD PTR [ebp-0x39d39ebd],ebx
  40eadf:	dec    edi
  40eae0:	cmp    eax,ecx
  40eae2:	or     DWORD PTR [esi-0x6587bbe5],ebx
  40eae8:	(bad)  
  40eae9:	xlat   BYTE PTR ds:[ebx]
  40eaea:	adc    dh,dh
  40eaec:	mov    WORD PTR [edi-0x1b],fs
  40eaef:	lock or eax,0x48e96ec2
  40eaf5:	pop    esi
  40eaf6:	xchg   ebp,eax
  40eaf7:	mov    ch,0x18
  40eaf9:	call   0xc363:0xb1c57f0b
  40eb00:	pop    edi
  40eb01:	pop    edi
  40eb02:	push   cs
  40eb03:	ror    dl,0x1d
  40eb06:	push   edi
  40eb07:	js     0x40eaa4
  40eb09:	out    dx,al
  40eb0a:	sub    bh,BYTE PTR [eax-0x5a]
  40eb0d:	add    eax,edi
  40eb0f:	sti    
  40eb10:	jne    0x40eb20
  40eb12:	(bad)  
  40eb13:	jmp    0x8a6:0xbb5f9bff
  40eb1a:	inc    ebx
  40eb1b:	stc    
  40eb1c:	sub    al,0x7
  40eb1e:	test   BYTE PTR [eax+0xd],cl
  40eb21:	jmp    0x40eb85
  40eb23:	sbb    BYTE PTR [esi-0x8],ah
  40eb26:	data16 loope 0x40eaf1
  40eb29:	jmp    0x917fc547
  40eb2e:	stc    
  40eb2f:	outs   dx,DWORD PTR ds:[esi]
  40eb30:	mov    dl,0x46
  40eb32:	push   edi
  40eb33:	repnz mov ebx,0xfc5df89c
  40eb39:	jnp    0x40ebae
  40eb3b:	push   cs
  40eb3c:	pop    ecx
  40eb3d:	popf   
  40eb3e:	inc    ebp
  40eb3f:	jmp    0x4bef5b4c
  40eb44:	stc    
  40eb45:	shl    DWORD PTR ds:0x110c5e6c,cl
  40eb4b:	hlt    
  40eb4c:	dec    ebp
  40eb4d:	and    al,0x9e
  40eb4f:	push   ebp
  40eb50:	test   BYTE PTR [ebx],bh
  40eb52:	(bad)  
  40eb53:	fmulp  st(5),st
  40eb55:	adc    eax,0xe1ea3003
  40eb5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb5b:	cmp    ebp,ecx
  40eb5d:	jno    0x40ebac
  40eb5f:	es std 
  40eb61:	mov    edx,0xe1c48990
  40eb66:	popa   
  40eb67:	ins    BYTE PTR es:[edi],dx
  40eb68:	rcl    DWORD PTR [ecx+eiz*4],1
  40eb6b:	adc    al,0x46
  40eb6d:	(bad)  
  40eb6e:	(bad)  [ecx-0x19aeef69]
  40eb74:	dec    edi
  40eb75:	pop    ebx
  40eb76:	(bad)  
  40eb77:	cld    
  40eb78:	mov    ds:0xd524a93a,al
  40eb7d:	int3   
  40eb7e:	push   ebx
  40eb7f:	and    dh,0x7f
  40eb82:	xor    dh,BYTE PTR [edx]
  40eb84:	jns    0x40ebf4
  40eb86:	hlt    
  40eb87:	cmp    al,0x3a
  40eb89:	dec    edi
  40eb8a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eb8b:	in     eax,0x40
  40eb8d:	(bad)  
  40eb8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb90:	mov    ds:0x4cd57414,al
  40eb95:	sti    
  40eb96:	mov    ah,0x3e
  40eb98:	sub    al,0xea
  40eb9a:	add    eax,0xb67e0dd7
  40eb9f:	pushf  
  40eba0:	sub    eax,0x146f60c0
  40eba5:	jmp    0x40ec1d
  40eba7:	push   ecx
  40eba8:	pop    eax
  40eba9:	push   edx
  40ebaa:	mov    ?,WORD PTR [esi+0x31]
  40ebad:	fs aas 
  40ebaf:	shr    DWORD PTR [edi],1
  40ebb1:	and    BYTE PTR [edi-0x69],cl
  40ebb4:	sbb    BYTE PTR [edi+ecx*8-0x70],bl
  40ebb8:	dec    edi
  40ebb9:	mov    dl,0xc2
  40ebbb:	popa   
  40ebbc:	push   cs
  40ebbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ebbe:	mov    esi,0xb70c685c
  40ebc3:	data16 jmp 0x40ec06
  40ebc6:	add    edi,ebx
  40ebc8:	jnp    0x40eb58
  40ebca:	push   edi
  40ebcb:	dec    edi
  40ebcc:	mov    bl,0x56
  40ebce:	mov    DWORD PTR [ecx+0x5d],edx
  40ebd1:	cli    
  40ebd2:	and    bl,cl
  40ebd4:	sysenter 
  40ebd6:	mov    BYTE PTR [esi],bl
  40ebd8:	repz test al,0x32
  40ebdb:	or     ebx,eax
  40ebdd:	ins    BYTE PTR es:[edi],dx
  40ebde:	sub    cl,BYTE PTR [eax+0x40d94784]
  40ebe4:	cmp    DWORD PTR [ebp-0x3c],ecx
  40ebe7:	in     al,dx
  40ebe8:	pop    ss
  40ebe9:	dec    edx
  40ebea:	sbb    BYTE PTR [ebx-0x16e111c2],dh
  40ebf0:	repz pop ds
  40ebf2:	dec    esp
  40ebf3:	pop    ds
  40ebf4:	pop    esi
  40ebf5:	push   esi
  40ebf6:	push   ebx
  40ebf7:	xor    ebp,edx
  40ebf9:	stos   DWORD PTR es:[edi],eax
  40ebfa:	dec    eax
  40ebfb:	mov    ?,WORD PTR [edx*4-0x1fe06a29]
  40ec02:	loope  0x40eba1
  40ec04:	lods   eax,DWORD PTR ds:[esi]
  40ec05:	lods   eax,DWORD PTR ds:[esi]
  40ec06:	push   edx
  40ec07:	jmp    0x2e2ebebf
  40ec0c:	add    bl,BYTE PTR [ebx+0x3c]
  40ec0f:	dec    edx
  40ec10:	fcomp  DWORD PTR [ebp-0x49]
  40ec13:	fimul  DWORD PTR [eax-0x71]
  40ec16:	dec    esp
  40ec17:	jle    0x40eba5
  40ec19:	hlt    
  40ec1a:	xchg   esp,eax
  40ec1b:	ss adc eax,0x5f4dda57
  40ec21:	mov    ebx,0x3cb28a16
  40ec26:	mov    DWORD PTR [edx],0xe59eff18
  40ec2c:	pop    esi
  40ec2d:	lods   al,BYTE PTR ds:[esi]
  40ec2e:	pushf  
  40ec2f:	add    DWORD PTR [edi-0x22fdaf46],ecx
  40ec35:	mov    cl,0x92
  40ec37:	mov    ebp,0x3e12d0dc
  40ec3c:	or     al,0x77
  40ec3e:	jmp    0x40ec1d
  40ec40:	bound  ebp,QWORD PTR [eax+0x9]
  40ec43:	mov    dl,0x95
  40ec45:	out    dx,eax
  40ec46:	stc    
  40ec47:	jecxz  0x40ecb4
  40ec49:	aas    
  40ec4a:	xor    dl,bl
  40ec4c:	test   eax,ecx
  40ec4e:	xchg   esi,eax
  40ec4f:	fbstp  TBYTE PTR [ebp+0x1d]
  40ec52:	out    dx,al
  40ec53:	cmp    eax,0xe3aea555
  40ec58:	sbb    eax,0xf5710b
  40ec5d:	adc    DWORD PTR [ecx],ecx
  40ec5f:	ret    0xe1a3
  40ec62:	outs   dx,BYTE PTR ds:[esi]
  40ec63:	jo     0xc68ee93e
  40ec69:	push   0x57
  40ec6b:	pop    ds
  40ec6c:	xchg   dl,bh
  40ec6e:	adc    edx,DWORD PTR [ecx-0x1407e7a8]
  40ec74:	xchg   ebp,eax
  40ec75:	das    
  40ec76:	dec    ebp
  40ec77:	push   ecx
  40ec78:	aaa    
  40ec79:	add    DWORD PTR ds:0xbe440b33,ebx
  40ec7f:	or     bh,BYTE PTR [ebp+ebx*1+0x6d]
  40ec83:	mov    ebp,0x7ef7ff98
  40ec88:	rcl    bh,1
  40ec8a:	test   al,0xe6
  40ec8c:	push   ebp
  40ec8d:	xor    edx,DWORD PTR [ebx-0x20b36f14]
  40ec93:	xchg   esp,eax
  40ec94:	xchg   BYTE PTR [edx+0x1],dh
  40ec97:	pop    eax
  40ec98:	jno    0x40ecdf
  40ec9a:	lock adc DWORD PTR [ebx+0x10],esi
  40ec9e:	jecxz  0x40ec9b
  40eca0:	inc    ecx
  40eca1:	xor    al,BYTE PTR [eax]
  40eca3:	pop    es
  40eca4:	ja     0x40ecd3
  40eca6:	xchg   edx,eax
  40eca7:	out    dx,eax
  40eca8:	in     eax,0x88
  40ecaa:	in     al,dx
  40ecab:	lfs    eax,FWORD PTR [eax]
  40ecae:	(bad)  
  40ecaf:	sbb    bl,BYTE PTR ds:0x58c9a770
  40ecb5:	(bad)  
  40ecb6:	out    dx,eax
  40ecb7:	and    eax,ebx
  40ecb9:	mov    ecx,0xe3f747da
  40ecbe:	adc    al,0xb1
  40ecc0:	and    esp,DWORD PTR [edx]
  40ecc2:	mov    DWORD PTR [edx+0x3ba62fe4],ecx
  40ecc8:	xchg   BYTE PTR [ebx+0x63],ah
  40eccb:	loop   0x40ed3c
  40eccd:	xchg   edi,eax
  40ecce:	mov    ds:0xe3f5670f,eax
  40ecd3:	daa    
  40ecd4:	dec    ebp
  40ecd5:	xor    eax,0xf9f06892
  40ecda:	sti    
  40ecdb:	mov    edi,DWORD PTR [ebx-0x7b]
  40ecde:	outs   dx,DWORD PTR ds:[esi]
  40ecdf:	or     BYTE PTR [edi],ch
  40ece1:	mov    ecx,0x1b6f8290
  40ece6:	ds jne 0x40ed1e
  40ece9:	iret   
  40ecea:	adc    dl,bl
  40ecec:	neg    BYTE PTR [ecx]
  40ecee:	mov    ecx,DWORD PTR [eax]
  40ecf0:	(bad)  
  40ecf2:	inc    eax
  40ecf3:	sahf   
  40ecf4:	scas   al,BYTE PTR es:[edi]
  40ecf5:	clc    
  40ecf6:	xor    cl,BYTE PTR [ecx]
  40ecf8:	aaa    
  40ecf9:	ja     0x40ed27
  40ecfb:	and    BYTE PTR [ebp-0x36],al
  40ecfe:	out    0x2d,eax
  40ed00:	das    
  40ed01:	(bad)  
  40ed02:	and    DWORD PTR [esi+0x45],esp
  40ed05:	icebp  
  40ed06:	lea    eax,[edi]
  40ed08:	cli    
  40ed09:	xor    BYTE PTR [edx-0x19],dh
  40ed0c:	popf   
  40ed0d:	arpl   WORD PTR [ecx+esi*2+0x4fe49e53],si
  40ed14:	pop    ecx
  40ed15:	addr16 dec esp
  40ed17:	adc    DWORD PTR [edi-0x5e6bffe4],ebx
  40ed1d:	sbb    ch,bh
  40ed1f:	fistp  WORD PTR [ecx+0x4473cb2f]
  40ed25:	mov    dh,0xba
  40ed27:	lods   al,BYTE PTR ds:[esi]
  40ed28:	iret   
  40ed29:	neg    BYTE PTR [ecx+ebx*2]
  40ed2c:	mov    ebx,0x9286ec46
  40ed31:	(bad)  
  40ed32:	sbb    al,0x90
  40ed34:	jno    0x40ed9d
  40ed36:	std    
  40ed37:	jns    0x40ecda
  40ed39:	sahf   
  40ed3a:	jo     0x40ed80
  40ed3c:	les    edx,FWORD PTR [ecx-0x45280c04]
  40ed42:	fdiv   DWORD PTR [edx]
  40ed44:	jle    0x40ecf5
  40ed46:	es retf 
  40ed48:	mov    esi,edi
  40ed4a:	aaa    
  40ed4b:	pop    eax
  40ed4c:	adc    eax,DWORD PTR [ebx+0x4f89941d]
  40ed52:	push   0x4f
  40ed54:	aad    0xda
  40ed56:	and    BYTE PTR [edx+0x4a830c9f],bh
  40ed5c:	push   0xd12c6d9e
  40ed61:	pop    ebp
  40ed62:	push   ebp
  40ed63:	xor    DWORD PTR [ecx+0x3e],ebx
  40ed66:	shl    BYTE PTR ds:0x904a50aa,0xbd
  40ed6d:	mov    ebx,DWORD PTR [esi+0x3b]
  40ed70:	retf   
  40ed71:	lods   eax,DWORD PTR ds:[esi]
  40ed72:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40ed74:	test   BYTE PTR [ecx+0x21bb31d2],dh
  40ed7a:	or     DWORD PTR [edi-0x35],ebx
  40ed7d:	cmp    al,0xa9
  40ed7f:	adc    eax,0x10be3b46
  40ed84:	inc    esp
  40ed85:	ja     0x40ed5b
  40ed87:	ins    DWORD PTR es:[edi],dx
  40ed88:	leave  
  40ed89:	pop    es
  40ed8a:	jle    0x40ee05
  40ed8c:	mov    cl,0x93
  40ed8e:	dec    edx
  40ed8f:	inc    esp
  40ed90:	pop    esp
  40ed91:	int3   
  40ed92:	imul   esi,DWORD PTR [edx],0x11e52928
  40ed98:	sbb    BYTE PTR [edi+0x4c],dl
  40ed9b:	in     eax,0xcf
  40ed9d:	inc    ebx
  40ed9e:	stc    
  40ed9f:	das    
  40eda0:	xor    al,0xc9
  40eda2:	xor    al,0x13
  40eda4:	loopne 0x40edca
  40eda6:	dec    esp
  40eda7:	dec    ebp
  40eda8:	bound  esp,QWORD PTR [ebx-0x4edd6685]
  40edae:	ret    
  40edaf:	add    eax,0x520a6630
  40edb4:	pop    ecx
  40edb5:	xchg   esp,eax
  40edb6:	(bad)  
  40edb7:	in     eax,0x99
  40edb9:	xchg   edx,eax
  40edba:	rol    eax,0x68
  40edbd:	test   DWORD PTR [eax-0x25268439],esp
  40edc3:	xor    edi,ebx
  40edc5:	jno    0x40edbf
  40edc7:	mov    ds:0x6cf8436a,al
  40edcc:	pop    ecx
  40edcd:	push   es
  40edce:	mov    ?,WORD PTR [eax]
  40edd0:	fs cmp ebp,0xaeb941be
  40edd7:	mov    ecx,0x77e48d56
  40eddc:	sub    DWORD PTR [esi],ecx
  40edde:	mov    ds,ebx
  40ede0:	fdivrp st(1),st
  40ede2:	inc    ebp
  40ede3:	mov    ebp,0xf7d83127
  40ede8:	das    
  40ede9:	mov    esp,0xb6e1c87b
  40edee:	xor    BYTE PTR [eax],cl
  40edf0:	xchg   DWORD PTR [eax+ecx*8-0x76],ebp
  40edf4:	inc    esp
  40edf5:	mov    ch,0x16
  40edf7:	sbb    al,BYTE PTR [esi-0x479da9b3]
  40edfd:	and    ah,ch
  40edff:	or     eax,0xa85ea660
  40ee04:	jge    0x40ee6c
  40ee06:	popa   
  40ee07:	inc    ebx
  40ee08:	repnz cmp DWORD PTR [ecx+0x40],edx
  40ee0c:	add    DWORD PTR [ebx+0x5297ede0],edi
  40ee12:	shl    edx,0xef
  40ee15:	shr    DWORD PTR [ebx+0x6a037048],0x10
  40ee1c:	cmp    eax,0x30ec8b10
  40ee21:	mov    bl,0xd3
  40ee23:	int3   
  40ee24:	mov    eax,0x71335ae3
  40ee29:	or     esi,esi
  40ee2b:	sub    BYTE PTR [ebx],0xcb
  40ee2e:	and    al,0xdd
  40ee30:	mov    ebp,0x7e33652b
  40ee35:	scas   eax,DWORD PTR es:[edi]
  40ee36:	adc    ah,cl
  40ee38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee39:	mov    dh,0xfb
  40ee3b:	xor    BYTE PTR [eax],0xda
  40ee3e:	and    al,0xa3
  40ee40:	add    DWORD PTR [edx],edx
  40ee42:	mov    ecx,0x9081a15e
  40ee47:	mov    al,0x61
  40ee49:	adc    ebx,DWORD PTR [ecx]
  40ee4b:	cmp    ch,BYTE PTR [edi]
  40ee4d:	sbb    al,0x90
  40ee4f:	add    DWORD PTR [ecx-0x649b2b58],ecx
  40ee55:	(bad)  
  40ee57:	mov    eax,0x1f41e923
  40ee5c:	dec    esp
  40ee5d:	(bad)  
  40ee5e:	mul    dh
  40ee60:	aas    
  40ee61:	adc    al,ah
  40ee63:	aam    0x3f
  40ee65:	idiv   BYTE PTR [eax+0x4f1656f8]
  40ee6b:	pop    esp
  40ee6c:	mov    esp,ebx
  40ee6e:	sbb    ebx,DWORD PTR [esi]
  40ee70:	xor    DWORD PTR [ebx-0x59],ecx
  40ee73:	xchg   esp,eax
  40ee74:	inc    ebx
  40ee75:	dec    esi
  40ee76:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40ee78:	mov    eax,ds:0xd41e3fc3
  40ee7d:	shr    edi,cl
  40ee7f:	(bad)  
  40ee80:	sbb    al,0x7
  40ee82:	jbe    0x40ee80
  40ee84:	mov    cl,0xfd
  40ee86:	gs sbb ebp,ebx
  40ee89:	mov    al,0xa2
  40ee8b:	shl    BYTE PTR [ecx+0x5c],0x24
  40ee8f:	fabs   
  40ee91:	mov    ?,WORD PTR [edi]
  40ee93:	dec    ebx
  40ee94:	rol    DWORD PTR [edx+0x1278913d],cl
  40ee9a:	jo     0x40ee7f
  40ee9c:	fwait
  40ee9d:	loope  0x40ee1f
  40ee9f:	pop    eax
  40eea0:	push   edi
  40eea1:	pop    es
  40eea2:	in     eax,dx
  40eea3:	jne    0x40ee47
  40eea5:	cmp    DWORD PTR ds:0xa2c5ee31,edx
  40eeab:	push   0x15
  40eead:	jmp    0x917ac163
  40eeb2:	cmc    
  40eeb3:	add    al,0x5f
  40eeb5:	mov    ds:0x5298473c,eax
  40eeba:	stos   BYTE PTR es:[edi],al
  40eebb:	mov    al,ds:0x64068877
  40eec0:	or     edi,eax
  40eec2:	out    dx,eax
  40eec3:	addr16 cdq 
  40eec5:	sbb    ecx,edx
  40eec7:	jp     0x40eec9
  40eec9:	inc    ebp
  40eeca:	imul   edx,DWORD PTR [esi+0x75743f59],0xffffffaa
  40eed1:	cmp    esp,DWORD PTR [esi+0x1d3e1f16]
  40eed7:	ds syscall 
  40eeda:	mov    eax,ds:0x6e30389f
  40eedf:	(bad)  
  40eee0:	push   esp
  40eee1:	aaa    
  40eee2:	or     BYTE PTR [ecx+0x9],dl
  40eee5:	and    eax,0xd4690f1a
  40eeea:	push   ecx
  40eeeb:	fstp   QWORD PTR [ebp+0x8c82b9d]
  40eef1:	fnstsw WORD PTR [ecx+0x2889cac7]
  40eef7:	cmp    DWORD PTR [esi+0x76],esi
  40eefa:	jns    0x40ee95
  40eefc:	add    ah,BYTE PTR [eax]
  40eefe:	and    eax,0x732c9305
  40ef03:	ins    BYTE PTR es:[edi],dx
  40ef04:	mov    ebp,DWORD PTR [edx+0x5dfa273]
  40ef0a:	sub    esp,DWORD PTR [ebx-0x5c0f3f88]
  40ef10:	mov    WORD PTR [ecx],ds
  40ef12:	inc    ebp
  40ef13:	pop    esi
  40ef14:	test   eax,0xf89ebaa0
  40ef19:	out    0x64,al
  40ef1b:	pop    esp
  40ef1c:	sbb    eax,0x721372cd
  40ef21:	ret    
  40ef22:	int3   
  40ef23:	out    dx,al
  40ef24:	xor    al,0xf8
  40ef26:	and    BYTE PTR [ecx],0xb7
  40ef29:	jae    0x40ef13
  40ef2b:	jnp    0x40efac
  40ef2d:	icebp  
  40ef2e:	mov    ds:0x5b89254e,al
  40ef33:	jnp    0x40ef77
  40ef35:	fst    st(2)
  40ef37:	test   BYTE PTR cs:[eax-0x7f],cl
  40ef3b:	fs dec eax
  40ef3d:	mov    al,0x7b
  40ef3f:	addr16 jp 0x40efb6
  40ef42:	or     BYTE PTR [ecx+0x16],dh
  40ef45:	mov    cl,0x4e
  40ef47:	inc    bh
  40ef49:	dec    edi
  40ef4a:	or     ah,BYTE PTR [esi-0x42b68e7e]
  40ef50:	push   ecx
  40ef51:	push   es
  40ef52:	scas   eax,DWORD PTR es:[edi]
  40ef53:	sub    BYTE PTR [edi+0x29673904],dh
  40ef59:	sbb    DWORD PTR [ebx+0x1aa23363],0x66
  40ef60:	pop    edi
  40ef61:	sub    al,BYTE PTR [ecx-0x60408e8c]
  40ef67:	push   edi
  40ef68:	sbb    ebx,ebx
  40ef6a:	test   BYTE PTR [eax],bh
  40ef6c:	clc    
  40ef6d:	retf   
  40ef6e:	in     eax,0xbb
  40ef70:	bsf    eax,DWORD PTR [edi-0x51]
  40ef74:	popf   
  40ef75:	cmp    eax,0x54106255
  40ef7a:	cld    
  40ef7b:	test   al,0xfc
  40ef7d:	cdq    
  40ef7e:	inc    edi
  40ef7f:	mov    dh,0x44
  40ef81:	out    0x70,al
  40ef83:	repz pop esi
  40ef85:	div    DWORD PTR [eax+0x2140a5d8]
  40ef8b:	sub    al,0x70
  40ef8d:	mov    bh,0x4f
  40ef8f:	push   ds
  40ef90:	push   edi
  40ef91:	cmp    al,0xa2
  40ef93:	shr    ebp,0x33
  40ef96:	jne    0x40efbf
  40ef98:	adc    dl,BYTE PTR [ecx+edx*2-0x5d]
  40ef9c:	call   0x5aed6539
  40efa1:	cmp    eax,0x8f24011a
  40efa6:	aam    0x35
  40efa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40efa9:	test   eax,0x14972464
  40efae:	push   edx
  40efaf:	sbb    dh,ch
  40efb1:	ins    BYTE PTR es:[edi],dx
  40efb2:	or     dh,BYTE PTR [ecx]
  40efb4:	and    ebp,DWORD PTR [di]
  40efb7:	aad    0x16
  40efb9:	xchg   ebp,eax
  40efba:	mov    bl,0x88
  40efbc:	sub    BYTE PTR fs:0xc9a19768,0x18
  40efc4:	xchg   esp,eax
  40efc5:	(bad)  
  40efc6:	test   eax,0x9d0a542e
  40efcb:	aas    
  40efcc:	fdivr  st(0),st
  40efce:	dec    edi
  40efcf:	fadd   QWORD PTR [edx+0x77]
  40efd2:	push   esi
  40efd3:	test   DWORD PTR [eax+0x4c],edi
  40efd6:	cli    
  40efd7:	cmp    al,0xc9
  40efd9:	call   0xb623:0xe9a623aa
  40efe0:	pop    eax
  40efe1:	mov    esi,ecx
  40efe3:	sub    BYTE PTR [eax-0x2c27ab3f],cl
  40efe9:	mov    dh,BYTE PTR [edi+0x43df0dd9]
  40efef:	add    eax,ecx
  40eff1:	cmp    eax,0xcbceb8b3
  40eff6:	sbb    DWORD PTR [edi-0x3a561e82],edx
  40effc:	inc    edx
  40effd:	jp     0x40f05e
  40efff:	scas   eax,DWORD PTR es:[edi]
  40f000:	(bad)  
  40f001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f002:	(bad)  
  40f003:	scas   eax,DWORD PTR es:[edi]
  40f004:	jbe    0x40f030
  40f006:	loopne 0x40f047
  40f008:	iret   
  40f009:	ds push 0xfffffff9
  40f00c:	shr    eax,1
  40f00e:	fsubr  QWORD PTR [ecx-0xaa68fe6]
  40f014:	inc    edi
  40f015:	jle    0x40effb
  40f017:	dec    edx
  40f018:	in     eax,dx
  40f019:	je     0x40f002
  40f01b:	xor    dl,BYTE PTR [esi+eax*2]
  40f01e:	int    0x39
  40f020:	inc    esp
  40f021:	xor    dh,BYTE PTR [ebp+0x5027ea9]
  40f027:	cwde   
  40f028:	jno    0x40f01b
  40f02a:	and    eax,0x91f27577
  40f02f:	adc    ebp,DWORD PTR [esi-0x74]
  40f032:	shr    cl,cl
  40f034:	div    DWORD PTR [esi]
  40f036:	pop    ss
  40f037:	push   ebx
  40f038:	shl    BYTE PTR [ecx-0x2a937986],1
  40f03e:	cdq    
  40f03f:	inc    edx
  40f040:	jmp    0x3946ebfe
  40f045:	pop    esp
  40f046:	mov    ah,0x17
  40f048:	sahf   
  40f049:	xchg   ebp,eax
  40f04a:	rcl    BYTE PTR [ebx],cl
  40f04c:	(bad)  
  40f04d:	or     al,0xb3
  40f04f:	test   al,0xf3
  40f051:	and    al,BYTE PTR [esi+0x2eb14876]
  40f057:	xchg   WORD PTR [ebp-0x14],cx
  40f05b:	sub    edx,DWORD PTR [edx-0x39]
  40f05e:	sub    al,0xec
  40f060:	fmul   st,st(1)
  40f062:	std    
  40f063:	bound  esp,QWORD PTR [eax]
  40f065:	js     0x40f05f
  40f067:	jbe    0x40f005
  40f069:	int3   
  40f06a:	lods   al,BYTE PTR ds:[esi]
  40f06b:	ins    BYTE PTR es:[edi],dx
  40f06c:	mov    edx,DWORD PTR [esi+0x21abc164]
  40f072:	pop    ss
  40f073:	cmc    
  40f074:	add    BYTE PTR [edx-0x2f],cl
  40f077:	fisttp WORD PTR [ecx]
  40f079:	scas   al,BYTE PTR es:[edi]
  40f07a:	in     eax,dx
  40f07b:	imul   eax,DWORD PTR [edi+0x28],0xffffff88
  40f07f:	adc    al,0xc4
  40f081:	or     al,0x70
  40f083:	nop
  40f084:	aas    
  40f085:	or     ecx,DWORD PTR fs:0x5843e4a5
  40f08c:	fdiv   st(2),st
  40f08e:	(bad)  
  40f08f:	pop    esi
  40f090:	ret    0xc751
  40f093:	inc    ecx
  40f094:	sahf   
  40f095:	adc    edi,ebp
  40f097:	mov    ebx,0xc163bd36
  40f09c:	leave  
  40f09d:	(bad)  
  40f09e:	aad    0x71
  40f0a0:	dec    esp
  40f0a1:	loopne 0x40f08d
  40f0a3:	clc    
  40f0a4:	push   0x6b
  40f0a6:	xor    BYTE PTR [ecx+0x5c5c82a7],cl
  40f0ac:	push   es
  40f0ad:	sub    dl,BYTE PTR [eax]
  40f0af:	(bad)  
  40f0b0:	in     al,0x4d
  40f0b2:	xor    BYTE PTR [esi+0x1c782dbb],0xa8
  40f0b9:	push   esi
  40f0ba:	jmp    0x49e3:0xee976dd6
  40f0c1:	or     al,0x1c
  40f0c3:	addr16 test eax,0xe11d8c65
  40f0c9:	cmp    bh,BYTE PTR [eax]
  40f0cb:	loope  0x40f0ff
  40f0cd:	fdiv   DWORD PTR [eax+0x106b645c]
  40f0d3:	lea    eax,[ecx+0x6c5f54f3]
  40f0d9:	xchg   esi,eax
  40f0da:	jns    0x40f05f
  40f0dc:	js     0x40f0ed
  40f0de:	sbb    BYTE PTR [edx+0x7e],dl
  40f0e1:	enter  0x3431,0xac
  40f0e5:	ret    0xc44
  40f0e8:	jg     0x40f0f1
  40f0ea:	loopne 0x40f144
  40f0ec:	fdiv   QWORD PTR [edx+0x53b2ce8c]
  40f0f2:	mov    ah,0x20
  40f0f4:	ror    DWORD PTR [esi+0x72],cl
  40f0f7:	aam    0xaa
  40f0f9:	es xchg ecx,eax
  40f0fb:	cli    
  40f0fc:	mov    BYTE PTR [esi],ch
  40f0fe:	test   edi,ebx
  40f100:	das    
  40f101:	xchg   esi,eax
  40f102:	aas    
  40f103:	mov    dl,BYTE PTR [edi]
  40f105:	push   edi
  40f106:	adc    DWORD PTR [edx],0x4
  40f109:	mov    al,ds:0x6662143c
  40f10e:	arpl   WORD PTR [edi],cx
  40f110:	stos   BYTE PTR es:[edi],al
  40f111:	xchg   ecx,eax
  40f112:	pop    ss
  40f113:	popa   
  40f114:	test   al,0x35
  40f116:	(bad)  
  40f117:	daa    
  40f118:	in     al,0xf2
  40f11a:	mov    eax,ds:0xbd40e4b3
  40f11f:	ror    BYTE PTR [esi-0x6e],cl
  40f122:	push   ds
  40f123:	and    BYTE PTR [esi+0x1a],bl
  40f126:	sub    eax,0xe27fa170
  40f12b:	ss or  ecx,edi
  40f12e:	int3   
  40f12f:	push   esi
  40f130:	lods   al,BYTE PTR ds:[esi]
  40f131:	jb     0x40f0e9
  40f133:	loopne 0x40f0ed
  40f135:	shr    DWORD PTR [edx+0x28],cl
  40f138:	in     al,0x5
  40f13a:	add    al,0xfb
  40f13c:	jmp    0x40f1b6
  40f13e:	neg    eax
  40f140:	push   ecx
  40f141:	jmp    0x8c12a009
  40f146:	(bad)  
  40f147:	pop    ecx
  40f148:	inc    ebx
  40f149:	xor    DWORD PTR [ebx+0x7a8473a9],eax
  40f14f:	push   esp
  40f150:	popa   
  40f151:	dec    esi
  40f152:	and    al,0x41
  40f154:	cmc    
  40f155:	xor    DWORD PTR [edx+0xd],ecx
  40f158:	je     0x40f11b
  40f15a:	sub    esp,DWORD PTR [ebx-0x38b617ac]
  40f160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f161:	mov    ecx,0xfde31ea8
  40f166:	adc    ah,dl
  40f168:	fsubr  QWORD PTR [eax+0x3a37131e]
  40f16e:	jl     0x40f197
  40f170:	add    ecx,0xe412a81d
  40f176:	lahf   
  40f177:	pushf  
  40f178:	ins    BYTE PTR es:[edi],dx
  40f179:	fnstenv [edx+0x39]
  40f17c:	adc    al,0xa5
  40f17e:	dec    eax
  40f17f:	mov    ebp,0x3b801eb
  40f184:	push   esp
  40f185:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f186:	pusha  
  40f187:	mov    ah,0xc8
  40f189:	or     BYTE PTR [ecx],cl
  40f18b:	lds    eax,FWORD PTR [esi]
  40f18d:	mov    dl,0xc4
  40f18f:	call   0x69e4:0xc9acc871
  40f196:	add    eax,0x7994354e
  40f19b:	xor    BYTE PTR [ecx-0x7c],bl
  40f19e:	mov    eax,ds:0x667f1a7a
  40f1a3:	arpl   WORD PTR [esi+0x6a9d9abb],dx
  40f1a9:	mov    al,ds:0x8f9ed0bf
  40f1ae:	jl     0x40f195
  40f1b0:	mov    eax,0xc08da138
  40f1b5:	call   0xaa8b:0x5c11e0ad
  40f1bc:	pop    bp
  40f1be:	push   0x49
  40f1c0:	addr16 iret 
  40f1c2:	push   ss
  40f1c3:	mov    ecx,0xaf9d9f33
  40f1c8:	and    eax,0x4faa3ba8
  40f1cd:	push   edx
  40f1ce:	pop    ebx
  40f1cf:	(bad)  
  40f1d0:	ss fld st(1)
  40f1d3:	xchg   esp,eax
  40f1d4:	sub    ecx,DWORD PTR [esi+0x15ea5831]
  40f1da:	dec    edx
  40f1db:	pop    edx
  40f1dc:	ss cli 
  40f1de:	cmp    eax,0x667ef286
  40f1e3:	ins    BYTE PTR es:[edi],dx
  40f1e4:	push   0xffffff9b
  40f1e6:	xlat   BYTE PTR cs:[ebx]
  40f1e8:	iret   
  40f1e9:	pop    esi
  40f1ea:	outs   dx,BYTE PTR ds:[esi]
  40f1eb:	dec    edx
  40f1ec:	cs adc edx,0x41
  40f1f0:	scas   eax,DWORD PTR es:[edi]
  40f1f1:	or     esi,DWORD PTR [edx-0x659e16b2]
  40f1f7:	dec    eax
  40f1f8:	jne    0x40f20e
  40f1fa:	iret   
  40f1fb:	mov    al,ds:0xc4f570fc
  40f200:	lock dec edi
  40f202:	xchg   ecx,eax
  40f203:	sbb    al,cl
  40f205:	sbb    ebx,ebx
  40f207:	js     0x40f196
  40f209:	pop    ebx
  40f20a:	les    esp,FWORD PTR [ebx+ebp*8-0x6ff7162d]
  40f211:	sti    
  40f212:	inc    eax
  40f213:	mov    eax,0x4d105d11
  40f218:	inc    edi
  40f219:	les    edi,FWORD PTR [edi+edx*2]
  40f21c:	ins    DWORD PTR es:[edi],dx
  40f21d:	cmp    BYTE PTR [esi-0x16],bl
  40f220:	pop    esp
  40f221:	cdq    
  40f222:	daa    
  40f223:	hlt    
  40f224:	push   esp
  40f225:	cld    
  40f226:	scas   al,BYTE PTR es:[edi]
  40f227:	in     eax,0xee
  40f229:	mov    gs,WORD PTR [edi-0x5b]
  40f22c:	xlat   BYTE PTR ds:[ebx]
  40f22d:	add    DWORD PTR [edi+esi*4-0x51],edi
  40f231:	jmp    0x40f253
  40f233:	cmp    ch,bl
  40f235:	rcl    bh,0xc3
  40f238:	aaa    
  40f239:	mov    al,ds:0x82fdd995
  40f23e:	jno    0x40f1f0
  40f240:	(bad)  
  40f241:	xlat   BYTE PTR ds:[ebx]
  40f242:	inc    esi
  40f243:	adc    ah,dl
  40f245:	repnz loopne 0x40f1f5
  40f248:	or     eax,0x812c3f98
  40f24d:	rol    BYTE PTR [eax],cl
  40f24f:	popf   
  40f250:	and    al,0x23
  40f252:	imul   eax,esi,0x52
  40f255:	adc    eax,0x9fb1e261
  40f25a:	lock cmp BYTE PTR [ecx-0x56],bh
  40f25e:	add    DWORD PTR [edx-0x78fce4fd],edi
  40f264:	out    0x54,eax
  40f266:	mov    ds:0x798bb045,eax
  40f26b:	out    dx,al
  40f26c:	xchg   esi,eax
  40f26d:	(bad)
  40f271:	mov    ds,WORD PTR [ebx-0x1d]
  40f274:	pusha  
  40f275:	out    dx,al
  40f276:	push   eax
  40f277:	and    eax,0x35715f7c
  40f27c:	sbb    al,0x9e
  40f27e:	arpl   WORD PTR [edi+0x51],ax
  40f281:	jg     0x40f205
  40f283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f284:	stc    
  40f285:	jnp    0x40f21f
  40f287:	out    0x87,eax
  40f289:	mov    bl,0xdd
  40f28b:	xchg   ecx,eax
  40f28c:	mov    ds:0x473e0aca,eax
  40f291:	repz sub DWORD PTR [edi+0x46ae99db],ecx
  40f298:	sub    DWORD PTR [esi-0x3941d7b7],edi
  40f29e:	(bad)  
  40f29f:	repnz fndisi(8087 only) 
  40f2a2:	sub    bh,bl
  40f2a4:	cdq    
  40f2a5:	je     0x40f26d
  40f2a7:	es cmp al,0x8
  40f2aa:	sub    al,0xd0
  40f2ac:	retf   
  40f2ad:	mov    ecx,0xb1767ecf
  40f2b2:	cmp    esi,DWORD PTR [ecx-0x16]
  40f2b5:	pop    eax
  40f2b6:	adc    eax,0xe8eb77ca
  40f2bb:	rol    eax,cl
  40f2bd:	arpl   WORD PTR [edx+edi*1],dx
  40f2c0:	pop    edx
  40f2c1:	mov    ds:0x167789a2,eax
  40f2c6:	sub    eax,0xa2705408
  40f2cb:	adc    BYTE PTR [ebx-0x45],dh
  40f2ce:	add    DWORD PTR [ebx+edi*8],edx
  40f2d1:	xlat   BYTE PTR ds:[ebx]
  40f2d2:	jg     0x40f27c
  40f2d4:	push   ebp
  40f2d5:	es fsub st(0),st
  40f2d8:	mov    ebx,0x4d7b4946
  40f2dd:	arpl   WORD PTR [ebp-0x3a477821],ax
  40f2e3:	pop    esp
  40f2e4:	loope  0x40f2a8
  40f2e6:	push   es
  40f2e7:	and    al,0xf8
  40f2e9:	out    0xdb,al
  40f2eb:	pop    edx
  40f2ec:	cmp    al,0x4d
  40f2ee:	leave  
  40f2ef:	push   cs
  40f2f0:	mov    eax,0x1400880
  40f2f5:	cwde   
  40f2f6:	dec    ebx
  40f2f7:	mov    ecx,0xbe2cf997
  40f2fc:	ds inc esp
  40f2fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f2ff:	pop    esi
  40f300:	lea    esi,[esi]
  40f302:	std    
  40f303:	cmp    al,BYTE PTR [esi+ebp*1+0xf]
  40f307:	add    dh,ch
  40f309:	sbb    edi,DWORD PTR [ebp-0x80]
  40f30c:	lock jle 0x40f2f4
  40f30f:	lea    ebx,[eax]
  40f311:	pop    ds
  40f312:	sti    
  40f313:	pop    ebx
  40f314:	pushf  
  40f315:	or     eax,0xff2a4bad
  40f31a:	cwde   
  40f31b:	xchg   esi,eax
  40f31c:	mov    al,0xa
  40f31e:	(bad)  
  40f31f:	pop    ss
  40f320:	add    BYTE PTR [edi+edi*8],0xdb
  40f324:	outs   dx,DWORD PTR ds:[esi]
  40f325:	and    edx,DWORD PTR [ebx+0x51]
  40f328:	fst    QWORD PTR [ecx]
  40f32a:	cmp    BYTE PTR [ebx-0x7ca24266],al
  40f330:	ficomp WORD PTR [eax-0x7e]
  40f333:	cwde   
  40f334:	mov    ds:0x7abcdae6,eax
  40f339:	test   BYTE PTR [edi+0x27],bl
  40f33c:	or     al,0x12
  40f33e:	and    esi,DWORD PTR [edx]
  40f340:	ins    BYTE PTR es:[edi],dx
  40f341:	aaa    
  40f342:	jae    0x40f3bc
  40f344:	lock (bad) 
  40f346:	out    dx,al
  40f347:	push   edx
  40f348:	jns    0x40f316
  40f34a:	lock jbe 0x40f354
  40f34d:	adc    ch,BYTE PTR [ecx+ebp*1]
  40f350:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f351:	xor    eax,0xaa89c89e
  40f356:	pop    esp
  40f357:	xchg   DWORD PTR [eax],ebx
  40f359:	pushw  0xd0bb
  40f35d:	mov    al,ds:0x8eec9366
  40f362:	bound  esi,QWORD PTR [ecx+ecx*1+0xd]
  40f366:	dec    eax
  40f367:	xchg   ebx,eax
  40f368:	(bad)  
  40f369:	enter  0xe13c,0x7f
  40f36d:	and    al,0x96
  40f36f:	repz xchg edi,eax
  40f371:	call   0x1cc7265d
  40f376:	ins    DWORD PTR es:[edi],dx
  40f377:	inc    ebx
  40f378:	push   ecx
  40f379:	fcomp  DWORD PTR es:[eax-0xa]
  40f37d:	loopne 0x40f347
  40f37f:	push   ds
  40f380:	mov    ebx,0x91c3ddfc
  40f385:	ret    0x80b
  40f388:	dec    esp
  40f389:	std    
  40f38a:	dec    edi
  40f38b:	push   bp
  40f38d:	aam    0xae
  40f38f:	push   esp
  40f390:	ficomp WORD PTR [ecx+0x57]
  40f393:	pop    es
  40f394:	imul   eax,ecx,0xd2ad21c2
  40f39a:	imul   edi,DWORD PTR [ebx],0x5db017c2
  40f3a0:	inc    eax
  40f3a1:	sub    edi,DWORD PTR [edi-0x2b]
  40f3a4:	xchg   al,al
  40f3a6:	jmp    0x589c:0xb73bafb2
  40f3ad:	xchg   DWORD PTR [edi+0x6077c1c7],ecx
  40f3b3:	mov    WORD PTR [esi],ds
  40f3b5:	sti    
  40f3b6:	cmp    DWORD PTR [ecx],eax
  40f3b8:	(bad)  
  40f3b9:	jmp    0x1ef5:0xd424464
  40f3c0:	mov    al,ds:0x90caa330
  40f3c5:	add    al,0xa1
  40f3c7:	sti    
  40f3c8:	rcl    DWORD PTR [edi+0x7bce29c2],0x3b
  40f3cf:	mov    ecx,DWORD PTR [eax-0x625f20b1]
  40f3d5:	mov    DWORD PTR [ebx-0x7f],edi
  40f3d8:	xchg   edx,eax
  40f3d9:	ror    BYTE PTR [eax+0x20],1
  40f3dc:	xchg   edi,eax
  40f3dd:	das    
  40f3de:	jns    0x40f414
  40f3e0:	dec    ecx
  40f3e1:	lea    eax,[ebx+ebx*2]
  40f3e4:	rcl    DWORD PTR [edx],1
  40f3e6:	mov    ah,ch
  40f3e8:	or     ecx,DWORD PTR [edx+0x44a7b409]
  40f3ee:	push   edi
  40f3ef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f3f0:	fcomp  QWORD PTR [ebx]
  40f3f2:	(bad)  
  40f3f3:	mov    ebx,0x57a7878d
  40f3f8:	mov    ds:0x818bd5f5,al
  40f3fd:	pop    edi
  40f3fe:	jge    0x40f3a2
  40f400:	jmp    0xf130:0x491c3669
  40f407:	scas   al,BYTE PTR es:[edi]
  40f408:	xchg   ecx,eax
  40f409:	mov    esp,0xfd00fde1
  40f40e:	cmp    eax,0x4bbb631b
  40f413:	aad    0x32
  40f415:	push   ds
  40f416:	ss jle 0x40f428
  40f419:	retf   0x9a64
  40f41c:	loope  0x40f457
  40f41e:	jg     0x40f44b
  40f420:	mov    ds,WORD PTR [eax-0x47003a2c]
  40f426:	pusha  
  40f427:	dec    ebx
  40f428:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f429:	ja     0x40f3d4
  40f42b:	jae    0x40f4a2
  40f42d:	or     bh,0x7a
  40f430:	or     ebx,DWORD PTR [edx+0x26]
  40f433:	mov    dh,0x84
  40f435:	mov    ebx,0x114d9cea
  40f43a:	aaa    
  40f43b:	rcl    DWORD PTR [esp+edi*8],cl
  40f43e:	inc    edx
  40f43f:	add    al,0x38
  40f441:	int    0x54
  40f443:	smsw   WORD PTR [edx]
  40f446:	mov    es,WORD PTR [ebx+esi*8+0x70]
  40f44a:	mov    ch,0xfb
  40f44c:	xlat   BYTE PTR ds:[ebx]
  40f44d:	adc    al,0x8c
  40f44f:	out    0x80,eax
  40f451:	push   0xadf04010
  40f456:	dec    edx
  40f457:	loope  0x40f453
  40f459:	cdq    
  40f45a:	sub    dh,BYTE PTR [ebp+0x53]
  40f45d:	mov    ds:0xef21c942,eax
  40f462:	sbb    eax,0x3c59485b
  40f467:	push   eax
  40f468:	push   ss
  40f469:	or     BYTE PTR [esi],al
  40f46b:	movd   mm4,ebx
  40f46e:	aad    0x7b
  40f470:	(bad)  
  40f472:	push   esi
  40f473:	adc    ch,BYTE PTR [ecx-0x49]
  40f476:	cmp    BYTE PTR [eax],ch
  40f478:	sub    al,0xfc
  40f47a:	es inc ebp
  40f47c:	pop    ecx
  40f47d:	gs cld 
  40f47f:	rcr    dh,0xab
  40f482:	mov    edi,0xfbb355eb
  40f487:	cmp    eax,0x4cd9785a
  40f48c:	xor    esi,edi
  40f48e:	sub    al,0x54
  40f490:	fbld   TBYTE PTR [edx]
  40f492:	mov    eax,ds:0xc56a557
  40f497:	sahf   
  40f498:	xor    al,BYTE PTR [ecx+0x6e]
  40f49b:	dec    esi
  40f49c:	repz push esi
  40f49e:	sbb    eax,0x6eafebb0
  40f4a3:	add    ah,BYTE PTR [esi]
  40f4a5:	iret   
  40f4a6:	(bad)  
  40f4a7:	loop   0x40f4cb
  40f4a9:	push   ss
  40f4aa:	adc    cl,BYTE PTR [edx]
  40f4ac:	mov    esp,0x7da2b59e
  40f4b1:	sbb    edx,edi
  40f4b3:	(bad)  
  40f4b4:	mov    dh,0x7
  40f4b6:	pop    edi
  40f4b7:	repz adc al,0x9b
  40f4ba:	cmp    ebp,esi
  40f4bc:	or     al,0xd2
  40f4be:	xchg   edx,eax
  40f4bf:	jecxz  0x40f477
  40f4c1:	clc    
  40f4c2:	rol    BYTE PTR [edi-0x6fce7197],1
  40f4c8:	les    ebp,FWORD PTR [ebp-0x4b]
  40f4cb:	mov    ds:0xe7b6f434,eax
  40f4d0:	pop    edx
  40f4d1:	inc    ecx
  40f4d2:	sub    BYTE PTR [edi+0x3e1fc90a],ch
  40f4d8:	shl    DWORD PTR [esi+edi*8+0x66],cl
  40f4dc:	outs   dx,DWORD PTR ds:[esi]
  40f4dd:	push   edx
  40f4de:	mov    bl,BYTE PTR [edx+0x24]
  40f4e1:	and    eax,0x37850a32
  40f4e6:	push   bp
  40f4e8:	retf   
  40f4e9:	fs out 0xb,al
  40f4ec:	outs   dx,DWORD PTR ds:[esi]
  40f4ed:	add    eax,0x1c17ecb5
  40f4f2:	mov    gs,WORD PTR [ebx-0x60b48c1e]
  40f4f8:	mov    ch,0xd1
  40f4fa:	mov    al,ds:0x88424616
  40f4ff:	cmp    al,0x42
  40f501:	aas    
  40f502:	std    
  40f503:	mov    al,0xce
  40f505:	jmp    0x7aa8e6ba
  40f50a:	push   ebx
  40f50b:	pop    ebp
  40f50c:	mov    bh,0xeb
  40f50e:	sub    DWORD PTR [ebp+0x9],ebp
  40f511:	call   0x52a1ea88
  40f516:	pop    edx
  40f517:	retf   
  40f518:	xchg   BYTE PTR [edi+eiz*8-0x17],dh
  40f51c:	sbb    DWORD PTR [ebx+0x5b],esi
  40f51f:	mov    WORD PTR [edi],ss
  40f521:	into   
  40f522:	and    ch,BYTE PTR [ebp+eax*8+0x49]
  40f526:	je     0x40f593
  40f528:	shr    edx,cl
  40f52a:	dec    ecx
  40f52b:	push   ss
  40f52c:	or     DWORD PTR [ebx+0x595f892c],edi
  40f532:	adc    eax,0xce5bc852
  40f537:	imul   eax,DWORD PTR [ebx+0x435cddc4],0xffffff93
  40f53e:	sub    DWORD PTR [esi-0x7a],ebp
  40f541:	jmp    0x4ba3:0x7980c8ef
  40f548:	cli    
  40f549:	retf   
  40f54a:	jb     0x40f53a
  40f54c:	shl    DWORD PTR [eax-0x1208614e],1
  40f552:	or     dl,BYTE PTR [ecx+0x34359671]
  40f558:	in     eax,0xbd
  40f55a:	in     eax,0xb6
  40f55c:	pop    ss
  40f55d:	push   cs
  40f55e:	(bad)  ds:0x6d7ca3d7
  40f564:	lods   al,BYTE PTR ds:[esi]
  40f565:	cmp    eax,0x2532cee8
  40f56a:	aas    
  40f56b:	mov    eax,0x8cfc7067
  40f570:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f571:	iret   
  40f572:	pop    esi
  40f573:	or     eax,0x327881da
  40f578:	sbb    bl,BYTE PTR [ebx-0x6a]
  40f57b:	and    ebp,ecx
  40f57d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f57e:	xlat   BYTE PTR ds:[ebx]
  40f57f:	or     bl,0x46
  40f582:	popf   
  40f583:	mov    eax,ds:0x71108de1
  40f588:	call   0xcba2d1fc
  40f58d:	iret   
  40f58e:	scas   eax,DWORD PTR es:[edi]
  40f58f:	cs stos DWORD PTR es:[edi],eax
  40f591:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f592:	and    eax,0x3fbb67ee
  40f597:	outs   dx,DWORD PTR ds:[esi]
  40f598:	(bad)  
  40f59a:	(bad)  
  40f59b:	retf   
  40f59c:	outs   dx,BYTE PTR ds:[esi]
  40f59d:	jle    0x40f5d4
  40f59f:	imul   ebp,DWORD PTR [ebx+0x57ad74dc],0x16da86a0
  40f5a9:	dec    esp
  40f5aa:	inc    ebp
  40f5ab:	mov    ebx,0xb537ce7f
  40f5b0:	lahf   
  40f5b1:	test   ah,ch
  40f5b3:	push   edi
  40f5b4:	or     al,0x3d
  40f5b6:	pop    esi
  40f5b7:	loop   0x40f60f
  40f5b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5ba:	stc    
  40f5bb:	xor    BYTE PTR [esi],bh
  40f5bd:	popf   
  40f5be:	cmp    BYTE PTR [edx],bh
  40f5c0:	jnp    0x40f5d5
  40f5c2:	adc    bh,0x5b
  40f5c5:	dec    ebx
  40f5c6:	xor    DWORD PTR [eax-0x429a08b0],edi
  40f5cc:	jne    0x40f581
  40f5ce:	inc    edx
  40f5cf:	pop    ebx
  40f5d0:	in     al,dx
  40f5d1:	inc    esp
  40f5d2:	stc    
  40f5d3:	sbb    BYTE PTR [esi+0x28],dh
  40f5d6:	mov    cl,0xde
  40f5d8:	mov    ecx,0x7e89aea0
  40f5dd:	cmc    
  40f5de:	pop    esi
  40f5df:	stos   DWORD PTR es:[edi],eax
  40f5e0:	lds    ecx,FWORD PTR [ebp+0x47]
  40f5e3:	or     bh,BYTE PTR [eax+eax*8-0x4f1148b7]
  40f5ea:	ins    BYTE PTR es:[edi],dx
  40f5eb:	push   ss
  40f5ec:	fadd   DWORD PTR [edx+edi*8+0x10e9d607]
  40f5f3:	dec    ecx
  40f5f4:	mov    dl,0x35
  40f5f6:	test   BYTE PTR [ecx+0x3a133bd2],cl
  40f5fc:	xor    BYTE PTR [edi-0x55e7eeb4],0x85
  40f603:	les    esp,FWORD PTR [esi]
  40f605:	mov    ds:0xe467117b,al
  40f60a:	adc    edi,esi
  40f60c:	cmp    dh,bl
  40f60e:	xor    dh,bh
  40f610:	xor    eax,0x6974c745
  40f615:	ja     0x40f657
  40f617:	iret   
  40f618:	xchg   cl,dl
  40f61a:	fcmovne st,st(5)
  40f61c:	inc    eax
  40f61d:	sub    BYTE PTR [edx],ch
  40f61f:	cdq    
  40f620:	les    ebp,FWORD PTR [eax+edx*4+0x6146b573]
  40f627:	popf   
  40f628:	out    dx,al
  40f629:	(bad)  
  40f62a:	(bad)  
  40f62b:	mov    ds:0x4103b3a1,eax
  40f630:	adc    DWORD PTR [ebx-0x1269564f],0xa1dd09aa
  40f63a:	xchg   edi,eax
  40f63b:	mov    eax,0xaf8bb0d2
  40f640:	lods   al,BYTE PTR ds:[esi]
  40f641:	jle    0x40f63c
  40f643:	rcr    BYTE PTR ds:[ebx-0x59],1
  40f647:	imul   edi,ebx,0x18
  40f64a:	sar    BYTE PTR [edx+edx*8-0x58],1
  40f64e:	or     eax,0x3958c518
  40f653:	xor    BYTE PTR [esi],cl
  40f655:	addr16 mov bh,0x17
  40f658:	mov    WORD PTR [ecx+0x40],ds
  40f65b:	mov    al,ds:0x601c4627
  40f660:	and    DWORD PTR [esi+0x57],ebp
  40f663:	pop    ecx
  40f664:	popa   
  40f665:	mov    esp,0x9cdd2fe3
  40f66a:	dec    ecx
  40f66b:	push   edi
  40f66c:	adc    al,0x5d
  40f66e:	mov    DWORD PTR [edi-0x79],edx
  40f671:	out    dx,al
  40f672:	repnz dec esp
  40f674:	cld    
  40f675:	ja     0x40f601
  40f677:	mov    ah,BYTE PTR [ebx-0x420a5104]
  40f67d:	ficomp DWORD PTR [ebx+0x6e]
  40f680:	pop    edx
  40f681:	nop
  40f682:	aaa    
  40f683:	or     bl,BYTE PTR [ebx+0x70eff07e]
  40f689:	xchg   esp,eax
  40f68a:	icebp  
  40f68b:	jmp    0x6999:0xff5b1fa1
  40f692:	dec    eax
  40f693:	fwait
  40f694:	cmp    DWORD PTR ds:0xb135db0d,esp
  40f69a:	clc    
  40f69b:	push   edi
  40f69c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f69d:	out    dx,eax
  40f69e:	pop    ecx
  40f69f:	retf   0xea76
  40f6a2:	dec    ebp
  40f6a3:	(bad)  
  40f6a4:	pop    esi
  40f6a5:	jnp    0x40f6f2
  40f6a7:	mov    al,0xbe
  40f6a9:	xchg   DWORD PTR [edi-0x2b],edx
  40f6ac:	sbb    DWORD PTR [esi],ecx
  40f6ae:	inc    ebx
  40f6af:	shl    BYTE PTR [ebx-0x44],cl
  40f6b2:	xor    ebx,ecx
  40f6b4:	jno    0x40f6c7
  40f6b6:	pusha  
  40f6b7:	cmp    BYTE PTR [ecx+edi*2-0x2c],ah
  40f6bb:	jmp    0x9d9b6439
  40f6c0:	and    eax,0xb443de92
  40f6c5:	ret    0x170a
  40f6c8:	div    BYTE PTR fs:[edx-0x3afa8cb4]
  40f6cf:	mov    esp,0xaf73a52e
  40f6d4:	sub    DWORD PTR [edi+edi*2],eax
  40f6d7:	repz cmp BYTE PTR [eax],cl
  40f6da:	add    edx,DWORD PTR [eax-0x3e]
  40f6dd:	cwde   
  40f6de:	push   ebx
  40f6df:	shl    esi,cl
  40f6e1:	push   ebx
  40f6e2:	pop    ebx
  40f6e3:	in     al,dx
  40f6e4:	gs mov ss:0xa6ca6f6c,al
  40f6eb:	adc    cl,BYTE PTR [edi+0x7fed8d87]
  40f6f1:	out    dx,al
  40f6f2:	mov    dl,0x4c
  40f6f4:	sbb    BYTE PTR [edx],cl
  40f6f6:	ror    DWORD PTR [esi+edx*2],cl
  40f6f9:	icebp  
  40f6fa:	in     eax,0x4c
  40f6fc:	test   DWORD PTR [edx-0x70],edi
  40f6ff:	test   al,0x93
  40f701:	lahf   
  40f702:	add    al,ch
  40f704:	imul   ebp,DWORD PTR [ecx+ebx*2+0x2a],0x8f79552e
  40f70c:	mov    al,BYTE PTR [ecx+eax*1+0x25078708]
  40f713:	or     DWORD PTR [ecx],esi
  40f715:	pop    eax
  40f716:	das    
  40f717:	pusha  
  40f718:	mov    eax,0xbbbf272
  40f71d:	cwde   
  40f71e:	mov    ds:0xee9ae1d6,al
  40f723:	loope  0x40f7a0
  40f725:	dec    esi
  40f726:	sbb    BYTE PTR [edi+eax*8+0x6e5d13da],dl
  40f72d:	mov    bh,0x92
  40f72f:	jmp    0x40f740
  40f731:	daa    
  40f732:	xor    dh,BYTE PTR ds:0xd7cd7ada
  40f738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f739:	pop    ss
  40f73a:	add    DWORD PTR cs:[ebp+0x73],ecx
  40f73e:	push   esp
  40f73f:	das    
  40f740:	cdq    
  40f741:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f742:	mov    ch,ah
  40f744:	das    
  40f745:	xor    DWORD PTR [esi+ecx*8-0x15f896a2],edi
  40f74c:	or     ecx,DWORD PTR [edi+edi*4+0xb5b5a12]
  40f753:	fmul   QWORD PTR [ebp+eiz*1-0x122d70fe]
  40f75a:	pop    es
  40f75b:	cmp    edi,DWORD PTR [ebx-0x4b]
  40f75e:	xor    al,0x1d
  40f760:	and    DWORD PTR [edi],ecx
  40f762:	push   edx
  40f763:	adc    DWORD PTR [ecx+edx*4-0x77],esi
  40f767:	mov    WORD PTR [edi+ecx*2-0x4b],gs
  40f76b:	sar    DWORD PTR [esi+ebx*8],cl
  40f76e:	inc    eax
  40f76f:	sbb    al,0x18
  40f771:	lahf   
  40f772:	mov    edi,0x52efac9a
  40f777:	retf   
  40f778:	mov    bh,0x4c
  40f77a:	sub    DWORD PTR [edi-0x4f014c24],esp
  40f780:	sbb    esp,ebx
  40f782:	ds or  al,0xb5
  40f785:	fucomi st,st(1)
  40f787:	lds    ecx,FWORD PTR [edx-0x28]
  40f78a:	enter  0x9c48,0x11
  40f78e:	dec    ebx
  40f78f:	in     al,dx
  40f790:	retf   0x72ce
  40f793:	out    dx,al
  40f794:	lods   al,BYTE PTR ds:[esi]
  40f795:	inc    edx
  40f796:	ja     0x40f7be
  40f798:	(bad)  
  40f799:	push   esp
  40f79a:	hlt    
  40f79b:	ds out dx,al
  40f79d:	xor    dh,BYTE PTR [ecx]
  40f79f:	arpl   WORD PTR [esi-0x2bb42026],sp
  40f7a5:	test   al,0xa6
  40f7a7:	jne    0x40f80e
  40f7a9:	sub    edi,DWORD PTR [edx+0x57]
  40f7ac:	jmp    0xdf5f08c2
  40f7b1:	adc    eax,0x637c0d88
  40f7b6:	xor    al,0x6
  40f7b8:	jl     0x40f7b6
  40f7ba:	fdivr  DWORD PTR gs:[eax]
  40f7bd:	(bad)  
  40f7be:	fst    QWORD PTR [eax]
  40f7c0:	push   eax
  40f7c1:	sub    BYTE PTR [ebx+0x2256fa68],bl
  40f7c7:	bound  ebx,QWORD PTR [ecx]
  40f7c9:	ins    DWORD PTR es:[edi],dx
  40f7ca:	mov    bl,0xe1
  40f7cc:	mov    ecx,0x5e234a7c
  40f7d1:	dec    eax
  40f7d2:	inc    edx
  40f7d3:	leave  
  40f7d4:	loopne 0x40f79e
  40f7d6:	push   esi
  40f7d7:	fcomp  QWORD PTR [eax-0x298d47e]
  40f7dd:	mov    bl,0x95
  40f7df:	test   eax,0x7c296620
  40f7e4:	sub    al,0xc0
  40f7e6:	cmp    BYTE PTR [ebx],cl
  40f7e8:	std    
  40f7e9:	mov    al,ds:0xa789869b
  40f7ee:	jle    0x40f7b6
  40f7f0:	push   es
  40f7f1:	repnz mov ecx,ebp
  40f7f4:	clc    
  40f7f5:	pushf  
  40f7f6:	cwde   
  40f7f7:	loopne 0x40f7ad
  40f7f9:	and    BYTE PTR [esi+0x28],0xd5
  40f7fd:	mov    eax,0xd3584655
  40f802:	dec    ebp
  40f803:	dec    edi
  40f804:	jle    0x40f7d4
  40f806:	push   0xfd92adca
  40f80b:	add    BYTE PTR [esi-0x3c],dl
  40f80e:	xchg   edx,eax
  40f80f:	ret    0x2e66
  40f812:	outs   dx,BYTE PTR ds:[esi]
  40f813:	aas    
  40f814:	aam    0x2f
  40f816:	or     ebp,DWORD PTR [eax+0x75756f5d]
  40f81c:	retf   
  40f81d:	daa    
  40f81e:	mov    bl,BYTE PTR [esi-0x65]
  40f821:	jmp    0xe1de:0x15f409e7
  40f828:	pop    esp
  40f829:	cli    
  40f82a:	pop    esp
  40f82b:	add    dl,BYTE PTR [ebx]
  40f82d:	stos   DWORD PTR es:[edi],eax
  40f82e:	mov    dl,0x2b
  40f830:	push   ebp
  40f831:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f832:	scas   eax,DWORD PTR es:[edi]
  40f833:	or     BYTE PTR ds:[eax],al
  40f836:	hlt    
  40f837:	test   DWORD PTR [ebx-0x39],ebx
  40f83a:	and    al,0x73
  40f83c:	outs   dx,BYTE PTR ds:[esi]
  40f83d:	mov    eax,0x3f298c4b
  40f842:	inc    ecx
  40f843:	ja     0x40f852
  40f845:	(bad)  
  40f846:	mov    esp,cs
  40f848:	loop   0x40f8c6
  40f84a:	and    DWORD PTR [eax+edx*2-0x7a4c37ed],eax
  40f851:	inc    ebp
  40f852:	mov    DWORD PTR [esi+0x6a],edx
  40f855:	sub    al,0xb2
  40f857:	jo     0x40f817
  40f859:	sbb    al,0x66
  40f85b:	inc    esp
  40f85c:	cmp    al,0x9a
  40f85e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f85f:	cmc    
  40f860:	int3   
  40f861:	sbb    dh,BYTE PTR [edx+0x32]
  40f864:	ins    DWORD PTR es:[edi],dx
  40f865:	xchg   edi,eax
  40f866:	mov    cl,0x93
  40f868:	pop    edx
  40f869:	sbb    bl,BYTE PTR [ebx+0x14]
  40f86c:	cmp    cl,BYTE PTR [esi]
  40f86e:	int3   
  40f86f:	add    al,0xc1
  40f871:	imul   edi,DWORD PTR [eax],0xffffffab
  40f874:	add    DWORD PTR [ebp-0x32],ecx
  40f877:	and    ebx,DWORD PTR [ebx+0x60]
  40f87a:	xor    eax,0xb64d2122
  40f87f:	out    0xad,eax
  40f881:	push   0x7b
  40f883:	xchg   esi,eax
  40f884:	aaa    
  40f885:	scas   al,BYTE PTR es:[edi]
  40f886:	sub    BYTE PTR ss:[ebp+0x7ca8df00],0x77
  40f88e:	dec    edi
  40f88f:	lods   eax,DWORD PTR ds:[esi]
  40f890:	fcmove st,st(4)
  40f892:	out    dx,al
  40f893:	ins    BYTE PTR es:[edi],dx
  40f894:	mov    BYTE PTR [ebp+0x2f],dh
  40f897:	fsub   DWORD PTR [ebx-0x69f5ddfb]
  40f89d:	bound  edx,QWORD PTR [edx]
  40f89f:	and    DWORD PTR [edi+0x7d085345],edi
  40f8a5:	repnz sbb al,0x37
  40f8a8:	mov    bh,0x88
  40f8aa:	and    eax,0xe140c8d1
  40f8af:	call   0xf27a8f6f
  40f8b4:	jmp    0x40f8ba
  40f8b6:	rcl    ah,cl
  40f8b8:	add    al,0x18
  40f8ba:	das    
  40f8bb:	fs popa 
  40f8bd:	and    ebp,eax
  40f8bf:	je     0xc1b3ee02
  40f8c5:	(bad)  
  40f8c6:	mov    dx,0x2a80
  40f8ca:	mov    edx,0x5eb3007c
  40f8cf:	fstp   DWORD PTR [esi+eax*1-0x3b316e34]
  40f8d6:	pop    esp
  40f8d7:	mov    ds:0xd05f5ca2,al
  40f8dc:	sub    al,0xd9
  40f8de:	jmp    0xb66b:0x180e8355
  40f8e5:	xchg   DWORD PTR [edi-0x15cb85ce],eax
  40f8eb:	and    ecx,DWORD PTR [eax]
  40f8ed:	sub    al,0xc3
  40f8ef:	ror    ebp,cl
  40f8f1:	xor    al,0xaf
  40f8f3:	mov    ah,0x84
  40f8f5:	std    
  40f8f6:	xchg   edi,eax
  40f8f7:	(bad)  
  40f8f9:	jmp    0x3b53:0x5e2dd656
  40f900:	mov    eax,ds:0x1061b382
  40f905:	into   
  40f906:	adc    eax,0x7779c79a
  40f90b:	clc    
  40f90c:	xor    al,dh
  40f90e:	adc    DWORD PTR [esi+0x27],esi
  40f911:	mov    eax,ds:0xfea9deb6
  40f916:	mov    BYTE PTR [ebx],bh
  40f918:	fsubp  st(7),st
  40f91a:	pop    ds
  40f91b:	pop    ds
  40f91c:	psubusw mm6,QWORD PTR [eax-0xb3dbad5]
  40f923:	(bad)  
  40f924:	retf   0x8b6c
  40f927:	mov    bh,0x38
  40f929:	xor    bh,ah
  40f92b:	aaa    
  40f92c:	popa   
  40f92d:	xchg   ecx,eax
  40f92e:	push   eax
  40f92f:	inc    esi
  40f930:	jo     0x40f9a5
  40f932:	imul   ecx,DWORD PTR [edx-0x2b4ba99b],0xfffffffe
  40f939:	xchg   edx,eax
  40f93a:	call   0xca921ebf
  40f93f:	scas   eax,DWORD PTR es:[edi]
  40f940:	push   sp
  40f942:	push   0xffffffe1
  40f944:	sub    ebp,DWORD PTR [eax+ebx*8-0x21]
  40f948:	shl    DWORD PTR [esi+0x206cfef0],cl
  40f94e:	icebp  
  40f94f:	push   ebx
  40f950:	jb     0x40f9ba
  40f952:	cmp    eax,0xa1a9b47b
  40f957:	mov    esp,0x613de6d7
  40f95c:	pop    esi
  40f95d:	mov    ebx,0xf51ff3b
  40f962:	add    dh,BYTE PTR [edx]
  40f964:	adc    BYTE PTR [eax],cl
  40f966:	out    0x11,al
  40f968:	dec    ebp
  40f969:	pop    edi
  40f96a:	mov    ch,0x38
  40f96c:	dec    esp
  40f96d:	dec    esp
  40f96e:	add    al,0x42
  40f970:	add    cl,0x5a
  40f973:	vmovlps QWORD PTR [ebx+0x59],xmm6
  40f978:	jno    0x40f9b1
  40f97a:	rol    DWORD PTR [eax],0x10
  40f97d:	(bad)  
  40f97e:	aad    0x7
  40f980:	fucom  st(0)
  40f982:	arpl   WORD PTR [edx+edx*4+0x16],cx
  40f986:	call   0x1238:0x8a06af7a
  40f98d:	add    ecx,edx
  40f98f:	es mov ah,0x89
  40f992:	adc    bl,BYTE PTR [eax]
  40f994:	pop    ecx
  40f995:	jmp    0xe328:0x7d6e6b9b
  40f99c:	mov    eax,ds:0xc1cf3940
  40f9a1:	push   edi
  40f9a2:	fcom   QWORD PTR [esi]
  40f9a4:	arpl   WORD PTR [edi],ax
  40f9a6:	out    0xba,eax
  40f9a8:	fld    TBYTE PTR [edx-0x517b3b7e]
  40f9ae:	cmp    DWORD PTR [eax-0x50],0x6e6220cf
  40f9b5:	xchg   BYTE PTR [edx+0x14],cl
  40f9b8:	nop
  40f9b9:	(bad)  
  40f9ba:	cld    
  40f9bb:	xor    al,0xa1
  40f9bd:	lea    edx,[edi]
  40f9bf:	fmul   DWORD PTR [ecx]
  40f9c1:	into   
  40f9c2:	and    esi,DWORD PTR [edx+0x6c88e476]
  40f9c8:	out    dx,al
  40f9c9:	jmp    0x40f98d
  40f9cb:	pop    edx
  40f9cc:	(bad)  
  40f9cd:	retf   
  40f9ce:	add    BYTE PTR [eax-0x3c],dh
  40f9d1:	mov    ch,0xcf
  40f9d3:	add    al,0x2f
  40f9d5:	inc    eax
  40f9d6:	xchg   esi,eax
  40f9d7:	fisttp QWORD PTR [edx-0x76]
  40f9da:	add    eax,0x894cf91b
  40f9df:	call   FWORD PTR [ecx-0x2cbb365a]
  40f9e5:	mov    al,0x3f
  40f9e7:	mov    ah,ch
  40f9e9:	jl     0x40fa14
  40f9eb:	outs   dx,BYTE PTR ds:[esi]
  40f9ec:	or     al,BYTE PTR [edx-0x774f77a8]
  40f9f2:	mov    dl,dl
  40f9f4:	add    DWORD PTR [edx],0xf9b9022e
  40f9fa:	mov    eax,0x96d15e21
  40f9ff:	in     al,dx
  40fa00:	je     0x40fa1d
  40fa02:	cld    
  40fa03:	adc    cl,BYTE PTR [ebx-0x5e]
  40fa06:	in     eax,0xd5
  40fa08:	cmp    BYTE PTR [esi+0x40],dl
  40fa0b:	test   BYTE PTR [esp+esi*1],cl
  40fa0e:	mov    al,0xab
  40fa10:	cmp    edx,ebx
  40fa12:	mov    ebx,0x8d800bfc
  40fa17:	jp     0x40fa18
  40fa19:	or     BYTE PTR [edi],al
  40fa1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa1c:	gs jno 0x40fa76
  40fa1f:	hlt    
  40fa20:	loopne 0x40fa4f
  40fa22:	fs stos BYTE PTR es:[edi],al
  40fa24:	or     BYTE PTR ds:0xf5579b90,al
  40fa2a:	bound  ebp,QWORD PTR [ecx+0x419d1c3e]
  40fa30:	outs   dx,DWORD PTR ds:[esi]
  40fa31:	xchg   DWORD PTR [edx+0x438d84fe],ebp
  40fa37:	outs   dx,BYTE PTR ds:[esi]
  40fa38:	sbb    BYTE PTR [ecx+0x38],bl
  40fa3b:	cmp    esp,DWORD PTR [ebx-0x1a]
  40fa3e:	cmp    cl,BYTE PTR [edx+esi*4+0x6dfca199]
  40fa45:	nop
  40fa46:	std    
  40fa47:	inc    edi
  40fa48:	push   esi
  40fa49:	lock ins DWORD PTR es:[edi],dx
  40fa4b:	and    DWORD PTR [edi+0xb],edx
  40fa4e:	imul   edi,DWORD PTR [edi],0x3ed7d22f
  40fa54:	pop    ebx
  40fa55:	lods   al,BYTE PTR ds:[esi]
  40fa56:	mov    eax,0x73e07d1b
  40fa5b:	cmp    eax,esi
  40fa5d:	push   es
  40fa5e:	sub    dl,BYTE PTR [edi]
  40fa60:	xor    DWORD PTR [ebx+0x64871d5e],ecx
  40fa66:	sub    BYTE PTR [eax],al
  40fa68:	pop    edi
  40fa69:	cmp    eax,0x90245b8b
  40fa6e:	push   es
  40fa6f:	idiv   BYTE PTR ds:0x25ba8430
  40fa75:	add    al,0x81
  40fa77:	out    0xb1,al
  40fa79:	pusha  
  40fa7a:	ret    0x52e8
  40fa7d:	dec    esi
  40fa7e:	aad    0x8f
  40fa80:	aaa    
  40fa81:	and    al,0x48
  40fa83:	sbb    BYTE PTR [eax+0x8],bl
  40fa86:	into   
  40fa87:	or     al,0xc8
  40fa89:	fcomp  QWORD PTR [ebp+0xaf27ecd]
  40fa8f:	adc    edx,edx
  40fa91:	int    0xa
  40fa93:	jl     0x40fa86
  40fa95:	add    eax,eax
  40fa97:	popf   
  40fa98:	cmp    BYTE PTR [eax],0xf2
  40fa9b:	sub    bh,BYTE PTR [ebp-0x72ebe495]
  40faa1:	cmp    DWORD PTR [eax-0x7660fffd],0x40
  40faa8:	add    DWORD PTR [esp+esi*1+0x483814b6],0x169a4c65
  40fab3:	add    eax,0x2c5c29bc
  40fab8:	retf   
  40fab9:	pop    esp
  40faba:	sub    cl,0x5
  40fabd:	sbb    ch,dh
  40fabf:	mov    BYTE PTR [ebp+0x7a],dl
  40fac2:	in     eax,dx
  40fac3:	jg     0x40fa77
  40fac5:	cmp    eax,0xa1fc9f91
  40faca:	sbb    BYTE PTR [ebp+0x3f],bl
  40facd:	mov    dh,0xd9
  40facf:	aam    0xef
  40fad1:	mov    ebp,0xa7e063df
  40fad6:	and    eax,0x229a0e17
  40fadb:	xchg   DWORD PTR [ecx+0x1a],ecx
  40fade:	pop    es
  40fadf:	mov    ecx,0xd8549ca6
  40fae4:	mov    ebx,cs
  40fae6:	pushf  
  40fae7:	ins    DWORD PTR es:[edi],dx
  40fae8:	add    DWORD PTR [esi-0xd986386],esp
  40faee:	mov    esi,0x53438b96
  40faf3:	loope  0x40fb43
  40faf5:	jbe    0x40fb75
  40faf7:	push   edi
  40faf8:	std    
  40faf9:	or     ah,ah
  40fafb:	add    cl,bh
  40fafd:	jp     0x40fb6e
  40faff:	sahf   
  40fb00:	popa   
  40fb01:	adc    DWORD PTR [ecx-0x2d0f5133],0x1771b14e
  40fb0b:	retf   0xe622
  40fb0e:	xor    DWORD PTR [ebx-0x1f],ebp
  40fb11:	xchg   edx,eax
  40fb12:	cmp    al,0x1b
  40fb14:	in     eax,dx
  40fb15:	xlat   BYTE PTR ds:[ebx]
  40fb16:	rcl    BYTE PTR [edx-0x6d],0x8d
  40fb1a:	adc    BYTE PTR [ebp+0x29],bl
  40fb1d:	mov    WORD PTR [ebx-0x12],?
  40fb20:	in     eax,0xdb
  40fb22:	cmc    
  40fb23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb24:	std    
  40fb25:	sbb    ah,BYTE PTR [ebx+0x2]
  40fb28:	popa   
  40fb29:	jnp    0x40fb44
  40fb2b:	xor    esp,DWORD PTR ds:[esi-0x635ae0cf]
  40fb32:	or     edi,DWORD PTR [esp+edx*1+0x44a24ca3]
  40fb39:	in     al,dx
  40fb3a:	mul    BYTE PTR [edi]
  40fb3c:	jbe    0x40fac7
  40fb3e:	lock mov ax,WORD PTR [ecx-0x706131e5]
  40fb46:	std    
  40fb47:	cwde   
  40fb48:	(bad)  
  40fb49:	clc    
  40fb4a:	rcl    bl,0x42
  40fb4d:	adc    cl,BYTE PTR ds:0x17c67178
  40fb53:	das    
  40fb54:	shl    BYTE PTR [esp+edx*8+0x70],cl
  40fb58:	retf   
  40fb59:	sub    DWORD PTR [edx-0xe97cc9],edi
  40fb5f:	jo     0x40fb86
  40fb61:	inc    edi
  40fb62:	lods   al,BYTE PTR ds:[esi]
  40fb63:	mov    eax,0x1d0636cf
  40fb68:	aad    0x61
  40fb6a:	or     eax,0xecb5333d
  40fb6f:	cld    
  40fb70:	pop    ecx
  40fb71:	xor    BYTE PTR [ecx],al
  40fb73:	dec    eax
  40fb74:	in     eax,0x38
  40fb76:	pop    esi
  40fb77:	sub    bl,BYTE PTR [esi]
  40fb79:	mov    bl,0x4b
  40fb7b:	push   ebx
  40fb7c:	cli    
  40fb7d:	ins    DWORD PTR es:[edi],dx
  40fb7e:	pop    esp
  40fb7f:	mov    edi,0xa9b4c13f
  40fb84:	mov    BYTE PTR [edx+0x4e61d3f9],al
  40fb8a:	jb     0x40fb4a
  40fb8c:	mov    ebx,0x9b22b208
  40fb91:	(bad)  
  40fb92:	out    dx,al
  40fb93:	loop   0x40fb34
  40fb95:	pusha  
  40fb96:	push   0xbf217a8c
  40fb9b:	dec    edi
  40fb9c:	imul   ebp
  40fb9e:	mov    esi,ebp
  40fba0:	add    ebp,edx
  40fba2:	cmp    edi,DWORD PTR [esi+0x6b25da5e]
  40fba8:	(bad)  [ecx]
  40fbaa:	inc    edx
  40fbab:	ins    DWORD PTR es:[edi],dx
  40fbac:	jb     0x40fbec
  40fbae:	int    0xe
  40fbb0:	push   es
  40fbb1:	aad    0x9d
  40fbb3:	outs   dx,DWORD PTR ds:[esi]
  40fbb4:	call   0xfb0336d3
  40fbb9:	sbb    edi,DWORD PTR [ebx-0x35]
  40fbbc:	and    ebx,DWORD PTR [edx+ebx*8+0x7a]
  40fbc0:	cmp    al,0xdf
  40fbc2:	jno    0x40fb9d
  40fbc4:	push   eax
  40fbc5:	sbb    al,0xfc
  40fbc7:	mov    eax,0x43cae891
  40fbcc:	push   ebp
  40fbcd:	or     DWORD PTR [edx],ecx
  40fbcf:	cld    
  40fbd0:	add    DWORD PTR [edi+ebx*2+0x37a8688f],ebp
  40fbd7:	mov    dh,0xbc
  40fbd9:	and    ch,BYTE PTR [edi+0x2f]
  40fbdc:	push   esp
  40fbdd:	mov    ecx,0xb2db3a0f
  40fbe2:	xchg   edx,eax
  40fbe3:	push   edi
  40fbe4:	leave  
  40fbe5:	mov    ah,0x6f
  40fbe7:	pop    es
  40fbe8:	(bad)  
  40fbe9:	xchg   ebp,eax
  40fbea:	cmp    eax,0xd53cad63
  40fbef:	and    bh,BYTE PTR [esi+0x6e]
  40fbf2:	mov    bh,BYTE PTR [edi-0x4f7505da]
  40fbf8:	hlt    
  40fbf9:	call   0x5e90:0x6767f40b
  40fc00:	dec    esi
  40fc01:	ret    0x1192
  40fc04:	mov    edx,0xc696945d
  40fc09:	mov    bl,0x2e
  40fc0b:	std    
  40fc0c:	mov    WORD PTR [ecx+0x3b],cs
  40fc0f:	sbb    ecx,DWORD PTR [edi+0x46]
  40fc12:	push   ss
  40fc13:	pusha  
  40fc14:	ins    DWORD PTR es:[edi],dx
  40fc15:	sti    
  40fc16:	shl    BYTE PTR [ecx-0x2b],0xcb
  40fc1a:	popa   
  40fc1b:	sbb    BYTE PTR [ebx+0x65],dh
  40fc1e:	outs   dx,BYTE PTR ds:[esi]
  40fc1f:	sbb    DWORD PTR [esp+eax*4-0x73],esp
  40fc23:	dec    ebp
  40fc24:	dec    edx
  40fc25:	scas   al,BYTE PTR es:[edi]
  40fc26:	push   esp
  40fc27:	fsubr  DWORD PTR [edx-0x27a0b2b6]
  40fc2d:	or     al,dh
  40fc2f:	or     esi,eax
  40fc31:	mov    edx,0x6a9deccb
  40fc36:	enter  0xf712,0xf6
  40fc3a:	dec    esp
  40fc3b:	push   edi
  40fc3c:	sbb    DWORD PTR [esi],0xc4cfd9cd
  40fc42:	jmp    0xc5a9:0x2ede6672
  40fc49:	aas    
  40fc4a:	pushf  
  40fc4b:	adc    ebp,DWORD PTR [edx+0x42]
  40fc4e:	jno    0x40fc4e
  40fc50:	add    bl,bh
  40fc52:	xor    DWORD PTR [esi-0x63],esi
  40fc55:	pop    ebx
  40fc56:	outs   dx,BYTE PTR ds:[esi]
  40fc57:	cmp    eax,0x4c5965e6
  40fc5c:	loop   0x40fcd5
  40fc5e:	out    dx,eax
  40fc5f:	(bad)  
  40fc61:	stc    
  40fc62:	sbb    dh,BYTE PTR [esi]
  40fc64:	adc    DWORD PTR [ebx+ecx*8+0xe6e8afc],ebx
  40fc6b:	jle    0x40fc52
  40fc6d:	fwait
  40fc6e:	cmp    bl,BYTE PTR [edi+0x7b]
  40fc71:	retf   0xb809
  40fc74:	mov    ds:0xe57b89c0,eax
  40fc79:	test   eax,0x139f953a
  40fc7e:	mov    dl,0x1d
  40fc80:	stc    
  40fc81:	xchg   ebp,eax
  40fc82:	popa   
  40fc83:	outs   dx,DWORD PTR ds:[esi]
  40fc84:	stos   DWORD PTR es:[edi],eax
  40fc85:	stos   BYTE PTR es:[edi],al
  40fc86:	repz cmp dh,BYTE PTR ds:0xa4751a5
  40fc8d:	fild   WORD PTR [edx-0x9]
  40fc90:	fisub  WORD PTR [edx+0x3fe5db87]
  40fc96:	mov    ebx,0xda447274
  40fc9b:	dec    ebp
  40fc9c:	mov    bl,0x76
  40fc9e:	test   DWORD PTR [eax],0xa240be97
  40fca4:	jnp    0x40fc71
  40fca6:	jbe    0x40fcad
  40fca8:	(bad)  
  40fca9:	std    
  40fcaa:	into   
  40fcab:	ret    
  40fcac:	adc    DWORD PTR [edi-0x6d],ecx
  40fcaf:	push   ebp
  40fcb0:	sbb    DWORD PTR [eax+0xd],eax
  40fcb3:	and    DWORD PTR [esi],0xfffffff6
  40fcb6:	sub    DWORD PTR [ebx-0x61],ecx
  40fcb9:	imul   esp,ecx,0xffffff96
  40fcbc:	cmp    eax,0x2984a32
  40fcc1:	dec    ecx
  40fcc2:	mov    esp,0xdd18cc9
  40fcc7:	adc    ch,bh
  40fcc9:	div    DWORD PTR [edi+0x261a8f1]
  40fccf:	and    esp,ebx
  40fcd1:	push   es
  40fcd2:	push   ss
  40fcd3:	ja     0x40fcd0
  40fcd5:	push   esp
  40fcd6:	sbb    BYTE PTR ss:[ebx],dl
  40fcd9:	xchg   esi,eax
  40fcda:	addr16 std 
  40fcdc:	lds    eax,FWORD PTR [eax-0x31]
  40fcdf:	lahf   
  40fce0:	test   DWORD PTR [esi+0x2d],0x56d9626
  40fce7:	lahf   
  40fce8:	out    0x41,eax
  40fcea:	repz test BYTE PTR [ebx+0x1c9e3fcb],ch
  40fcf1:	mov    al,ds:0xde2bd6a8
  40fcf6:	popa   
  40fcf7:	mov    ds:0xf5d02130,al
  40fcfc:	push   edi
  40fcfd:	test   BYTE PTR [ecx*2+0x477b9007],dl
  40fd04:	adc    BYTE PTR [esi-0x57c096ce],0x23
  40fd0b:	rol    eax,1
  40fd0d:	sub    al,0xc2
  40fd0f:	fmul   DWORD PTR [si+0x4033]
  40fd14:	outs   dx,DWORD PTR ds:[esi]
  40fd15:	stos   DWORD PTR es:[edi],eax
  40fd16:	cmc    
  40fd17:	mov    DWORD PTR [eax],ebx
  40fd19:	retf   
  40fd1a:	ds out 0x4f,al
  40fd1d:	add    cl,BYTE PTR [ebx]
  40fd1f:	inc    ebx
  40fd20:	inc    eax
  40fd21:	mov    cl,0x8c
  40fd23:	jle    0x40fcf4
  40fd25:	sub    eax,0x4d9a3aa5
  40fd2b:	fs (bad) 
  40fd2d:	fidivr DWORD PTR [esi]
  40fd2f:	cli    
  40fd30:	test   BYTE PTR [eax],ah
  40fd32:	aaa    
  40fd33:	cmc    
  40fd34:	xchg   esi,eax
  40fd35:	xor    bl,ch
  40fd37:	enter  0xe0b0,0x48
  40fd3b:	mov    edx,0xa9dc9642
  40fd40:	stc    
  40fd41:	les    edx,FWORD PTR [ebx]
  40fd43:	scas   eax,DWORD PTR es:[edi]
  40fd44:	arpl   WORD PTR [esi-0x58020d4c],bx
  40fd4a:	fidivr WORD PTR [ecx+eax*2]
  40fd4d:	adc    eax,0x82fef667
  40fd52:	sahf   
  40fd53:	inc    edi
  40fd54:	jle    0x40fdb7
  40fd56:	fstp   DWORD PTR [esi]
  40fd58:	cli    
  40fd59:	sti    
  40fd5a:	sub    esp,DWORD PTR ds:0x27c3fdff
  40fd60:	out    0xb0,eax
  40fd62:	mov    esp,DWORD PTR [esi+0x2c]
  40fd65:	adc    ch,BYTE PTR [ebx-0x130308a8]
  40fd6b:	or     eax,eax
  40fd6d:	mov    esi,0xf832ebbf
  40fd72:	jg     0x40fd60
  40fd74:	pop    ecx
  40fd75:	addr16 and ch,ah
  40fd78:	adc    DWORD PTR [ecx-0x4855b3a],ecx
  40fd7e:	rcl    BYTE PTR [edi+0x591c2c54],1
  40fd84:	fiadd  WORD PTR [ecx+0x2bf015d7]
  40fd8a:	cmc    
  40fd8b:	adc    BYTE PTR [ebp+0x3b],al
  40fd8e:	aad    0xe2
  40fd90:	add    eax,0x4c495370
  40fd95:	pop    eax
  40fd96:	clc    
  40fd97:	sub    al,BYTE PTR [esi+0x17fadf6a]
  40fd9d:	arpl   si,bp
  40fd9f:	jbe    0x40fe04
  40fda1:	arpl   WORD PTR [ebx+eax*1+0x36],bp
  40fda5:	push   es
  40fda6:	pop    ebx
  40fda7:	ror    BYTE PTR [edx+ebx*2-0x32],1
  40fdab:	adc    edx,0x37
  40fdae:	ficomp WORD PTR [ecx]
  40fdb0:	pusha  
  40fdb1:	popa   
  40fdb2:	push   ds
  40fdb3:	or     esp,edi
  40fdb5:	ins    DWORD PTR es:[edi],dx
  40fdb6:	adc    eax,0xd0ee4a85
  40fdbb:	and    BYTE PTR [ebp+0x6],dh
  40fdbe:	mov    bl,0x72
  40fdc0:	cmp    ah,dl
  40fdc2:	fcomp  QWORD PTR [esi+0xcf5be82]
  40fdc8:	sub    eax,0x1039b780
  40fdcd:	and    DWORD PTR [ecx+0x3a66524f],eax
  40fdd3:	popf   
  40fdd4:	mov    WORD PTR [ebx+0x211b03a1],gs
  40fdda:	dec    ecx
  40fddb:	fstp   QWORD PTR [eax]
  40fddd:	dec    esp
  40fdde:	icebp  
  40fddf:	jl     0x40fd6a
  40fde1:	out    dx,ax
  40fde3:	(bad)  
  40fde4:	fcom   QWORD PTR [ebx]
  40fde6:	call   0x3220:0x3b22436b
  40fded:	lods   al,BYTE PTR ds:[esi]
  40fdee:	leave  
  40fdef:	stos   DWORD PTR es:[edi],eax
  40fdf0:	push   ecx
  40fdf1:	add    BYTE PTR [edi+0x5566b8b3],ah
  40fdf7:	cmp    BYTE PTR [ebx-0x2e9cf1af],ah
  40fdfd:	jmp    0x40fe01
  40fdff:	data16 hlt 
  40fe01:	rcl    DWORD PTR [eax-0x35],0xb3
  40fe05:	pop    ecx
  40fe06:	fsub   st(2),st
  40fe08:	mov    bl,BYTE PTR [eax]
  40fe0a:	clc    
  40fe0b:	or     al,BYTE PTR [eax+0x49]
  40fe0e:	adc    ebx,edx
  40fe10:	rol    DWORD PTR [edi+0xa756e5d],1
  40fe16:	loope  0x40fdfb
  40fe18:	adc    al,0x89
  40fe1a:	pop    ebp
  40fe1b:	stos   BYTE PTR es:[edi],al
  40fe1c:	adc    eax,0x375b462a
  40fe21:	dec    edi
  40fe22:	push   0xb
  40fe24:	cwde   
  40fe25:	dec    ebp
  40fe26:	in     eax,0x2d
  40fe28:	addr16 ja 0x40fe18
  40fe2b:	out    dx,eax
  40fe2c:	shr    esi,1
  40fe2e:	or     bl,BYTE PTR [ecx]
  40fe30:	lock inc esi
  40fe32:	xor    ecx,ecx
  40fe34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe35:	sub    edi,edi
  40fe37:	mov    esi,ss
  40fe39:	aaa    
  40fe3a:	or     cl,cl
  40fe3c:	inc    ebx
  40fe3d:	push   esi
  40fe3e:	ret    
  40fe3f:	pusha  
  40fe40:	inc    edi
  40fe41:	pop    ds
  40fe42:	pop    ebp
  40fe43:	in     al,0xda
  40fe45:	push   ebp
  40fe46:	lea    edi,[edi-0xdffc973]
  40fe4c:	jecxz  0x40fe2b
  40fe4e:	scas   al,BYTE PTR es:[edi]
  40fe4f:	pop    eax
  40fe50:	sahf   
  40fe51:	pusha  
  40fe52:	scas   al,BYTE PTR es:[edi]
  40fe53:	mov    esp,0x59bdc080
  40fe58:	into   
  40fe59:	or     ecx,DWORD PTR [ecx-0x22]
  40fe5c:	lods   al,BYTE PTR ds:[esi]
  40fe5d:	pop    ebx
  40fe5e:	imul   ebx,DWORD PTR [edx],0x405c35c1
  40fe64:	push   eax
  40fe65:	jmp    0xc771:0x80e2d16c
  40fe6c:	sbb    DWORD PTR [edx+0x18b71c7],0xffffffd2
  40fe73:	mov    dl,0x28
  40fe75:	inc    edx
  40fe76:	inc    eax
  40fe77:	in     eax,0xe1
  40fe79:	pop    ebp
  40fe7a:	sbb    al,ch
  40fe7c:	ss ss clc 
  40fe7f:	mov    fs,WORD PTR [ecx-0x70253009]
  40fe85:	test   DWORD PTR [edi-0x79],esp
  40fe88:	or     DWORD PTR [edi-0x651f631e],0xffffff8a
  40fe8f:	adc    al,BYTE PTR [edx+ecx*2+0x328a783c]
  40fe96:	cld    
  40fe97:	test   al,0xc0
  40fe99:	push   edi
  40fe9a:	dec    eax
  40fe9b:	(bad)  
  40fe9c:	call   0x67b2082f
  40fea1:	sti    
  40fea2:	and    dl,cl
  40fea4:	bound  ecx,QWORD PTR [edx+ebp*1]
  40fea7:	adc    ah,BYTE PTR [ebx+0x1d]
  40feaa:	dec    esp
  40feab:	add    DWORD PTR [edx-0x69e8c022],edx
  40feb1:	in     al,dx
  40feb2:	jnp    0x40fe56
  40feb4:	sbb    DWORD PTR [edi-0xfbe43d0],0x75
  40febb:	retf   
  40febc:	mov    BYTE PTR [edx],bh
  40febe:	mov    al,ds:0x2398b3d0
  40fec3:	adc    BYTE PTR [ebp+0x7f0a866b],bl
  40fec9:	vaddpd ymm4,ymm6,YMMWORD PTR [edx+eiz*4]
  40fece:	lods   al,BYTE PTR ds:[esi]
  40fecf:	inc    eax
  40fed0:	(bad)  
  40fed1:	pop    ds
  40fed2:	in     eax,dx
  40fed3:	push   ecx
  40fed4:	push   esi
  40fed5:	mov    ch,0x9c
  40fed7:	and    dh,ch
  40fed9:	ja     0x40ff3f
  40fedb:	add    edx,DWORD PTR gs:[ebp+0x6d]
  40fedf:	or     eax,0x6ef16bde
  40fee4:	out    0x37,al
  40fee6:	ins    DWORD PTR es:[edi],dx
  40fee7:	fwait
  40fee8:	push   ds
  40fee9:	arpl   WORD PTR [esp+eiz*8+0x567a7e43],bp
  40fef0:	sub    BYTE PTR ds:0xefa0,bh
  40fef5:	aam    0x44
  40fef7:	call   0xd978947f
  40fefc:	adc    ebp,eax
  40fefe:	dec    ecx
  40feff:	push   ds
  40ff00:	loopne 0x40fea2
  40ff02:	fs sub al,0xb6
  40ff05:	or     BYTE PTR [ecx+0x74fb36fe],ch
  40ff0b:	loope  0x40ff71
  40ff0d:	mov    ch,0xf
  40ff0f:	cmp    ecx,DWORD PTR [eax]
  40ff11:	dec    edx
  40ff12:	daa    
  40ff13:	fisttp QWORD PTR [edi-0x7abcdf4a]
  40ff19:	push   ebx
  40ff1a:	int3   
  40ff1b:	pop    esp
  40ff1c:	loop   0x40ff7c
  40ff1e:	and    eax,DWORD PTR [bx+si-0x1fd]
  40ff23:	arpl   WORD PTR [eax],sp
  40ff25:	inc    edi
  40ff26:	outs   dx,DWORD PTR ds:[esi]
  40ff27:	std    
  40ff28:	push   edi
  40ff29:	mov    bl,0x83
  40ff2b:	push   ebp
  40ff2c:	out    0xf,eax
  40ff2e:	clc    
  40ff2f:	mov    eax,ds:0xf1e42ea9
  40ff34:	cdq    
  40ff35:	call   0xea26656d
  40ff3a:	add    DWORD PTR [ecx],ecx
  40ff3c:	adc    edi,DWORD PTR [edi]
  40ff3e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ff3f:	hlt    
  40ff40:	dec    eax
  40ff41:	popa   
  40ff42:	pcmpeqb mm3,QWORD PTR [edx]
  40ff45:	push   edx
  40ff46:	mov    edi,ds
  40ff48:	test   BYTE PTR [edi],dl
  40ff4a:	sti    
  40ff4b:	(bad)  
  40ff4c:	ficomp DWORD PTR [edi+0x6ed6c28b]
  40ff52:	sub    edx,DWORD PTR [ecx+0x71]
  40ff55:	(bad)  
  40ff56:	test   eax,0xf253bf79
  40ff5b:	in     eax,dx
  40ff5c:	push   ebx
  40ff5d:	aad    0x7b
  40ff5f:	xor    bl,BYTE PTR [bp+di]
  40ff62:	push   edx
  40ff63:	ins    BYTE PTR es:[edi],dx
  40ff64:	(bad)
  40ff68:	jmp    0x3312:0xd3c9
  40ff6e:	inc    edx
  40ff6f:	jle    0x40fef3
  40ff71:	jns    0x40ff09
  40ff73:	mov    gs,WORD PTR [ebx-0x36]
  40ff76:	jbe    0x40ffab
  40ff78:	inc    ecx
  40ff79:	xchg   ebx,eax
  40ff7a:	aad    0x34
  40ff7c:	or     eax,0x3e55ddd0
  40ff81:	lahf   
  40ff82:	or     DWORD PTR [edx+0x20],esi
  40ff85:	mov    al,BYTE PTR [esi-0x36]
  40ff88:	sbb    eax,0x6c9744a1
  40ff8d:	mov    ch,0x87
  40ff8f:	std    
  40ff90:	loopne 0x40ff1e
  40ff92:	add    eax,0x70790145
  40ff97:	cld    
  40ff98:	mov    al,ds:0x5f91f62c
  40ff9d:	aaa    
  40ff9e:	mov    ds:0xceea0f27,al
  40ffa3:	(bad)  
  40ffa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffa6:	pop    edi
  40ffa7:	xchg   ebx,eax
  40ffa8:	dec    ecx
  40ffa9:	mov    dh,0x11
  40ffab:	dec    edi
  40ffac:	or     BYTE PTR [ebx-0x36],ah
  40ffaf:	out    0x74,al
  40ffb1:	loope  0x40ffd4
  40ffb3:	push   DWORD PTR [edi+0x431ae9b8]
  40ffb9:	popf   
  40ffba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffbb:	fstp   TBYTE PTR [edx]
  40ffbd:	shr    BYTE PTR ds:0x84c30200,1
  40ffc3:	pusha  
  40ffc4:	inc    edi
  40ffc5:	xchg   esi,eax
  40ffc6:	pop    es
  40ffc7:	cmp    DWORD PTR [eax-0x5e241b2b],edx
  40ffcd:	jns    0x40ff8c
  40ffcf:	jp     0x40ffc6
  40ffd1:	cmp    ecx,DWORD PTR [eax]
  40ffd3:	xor    al,0x6d
  40ffd5:	add    ecx,DWORD PTR [ebx]
  40ffd7:	(bad)  
  40ffd8:	fmul   QWORD PTR [esi-0x4c]
  40ffdb:	pusha  
  40ffdc:	mov    es,WORD PTR [ecx-0x45c06c5d]
  40ffe2:	bound  ebx,QWORD PTR [edx+0x66]
  40ffe5:	mov    ch,0x64
  40ffe7:	sbb    ebp,esp
  40ffe9:	jmp    0x410007
  40ffeb:	xor    eax,0x1a60ba07
  40fff0:	sub    eax,0x28d23e57
  40fff5:	jbe    0x410021
  40fff7:	pushf  
  40fff8:	or     BYTE PTR [ebx],ah
  40fffa:	mov    WORD PTR [ecx-0x18],cs
  40fffd:	les    edi,FWORD PTR ds:[edi-0x6e]
  410001:	out    dx,eax
  410002:	stos   DWORD PTR es:[edi],eax
  410003:	repnz sahf 
  410005:	outs   dx,BYTE PTR ds:[esi]
  410006:	sub    dh,BYTE PTR [esi+0x3924d169]
  41000c:	push   es
  41000d:	adc    esp,ebp
  41000f:	adc    DWORD PTR [edi],eax
  410011:	dec    edx
  410012:	in     al,dx
  410013:	add    edi,DWORD PTR [edx]
  410015:	adc    dh,BYTE PTR [eax+0x7420db2b]
  41001b:	fcom   DWORD PTR [eax+eiz*1+0x2c]
  41001f:	fcom   QWORD PTR [edi]
  410021:	in     al,0x2f
  410023:	cmp    DWORD PTR [ebx+0x79d8dc65],ebx
  410029:	ret    0x9dde
  41002c:	push   0x71d7f59e
  410031:	mov    ah,BYTE PTR [ebp-0x2ac10771]
  410037:	adc    eax,0x92b09b05
  41003c:	sbb    BYTE PTR [eax+0x3fabf9eb],bl
  410042:	adc    al,0xbc
  410044:	jmp    0x410036
  410046:	lea    edx,[ebx+0x5df0ab61]
  41004c:	pop    ds
  41004d:	or     eax,0x239ae75c
  410052:	mov    ch,0xbd
  410054:	pop    ecx
  410055:	fsubr  DWORD PTR [ecx]
  410057:	inc    eax
  410058:	shl    DWORD PTR [eax-0x25c99b3e],0xee
  41005f:	fstp   st(4)
  410061:	xlat   BYTE PTR ds:[ebx]
  410062:	pop    esi
  410063:	in     al,0xf1
  410065:	ins    BYTE PTR es:[edi],dx
  410066:	mov    bh,0x74
  410068:	xchg   ebp,eax
  410069:	test   DWORD PTR [ebp-0x485fc],0x4225430f
  410073:	shl    cl,cl
  410075:	jmp    0x41009b
  410077:	pop    esi
  410078:	ins    DWORD PTR es:[edi],dx
  410079:	lock or eax,0xc3f4a420
  41007f:	inc    DWORD PTR ds:0x195633f5
  410085:	dec    edi
  410086:	mov    dl,0x14
  410088:	dec    ecx
  410089:	mov    bh,0xcb
  41008b:	dec    edi
  41008c:	ss push ecx
  41008e:	stc    
  41008f:	mov    WORD PTR [eax-0x730308bf],fs
  410095:	pop    ebp
  410096:	outs   dx,BYTE PTR ds:[esi]
  410097:	dec    ecx
  410098:	mov    BYTE PTR [ecx+0x358422b4],ah
  41009e:	clc    
  41009f:	push   ss
  4100a0:	mov    dh,0x51
  4100a2:	jmp    0x41002a
  4100a4:	mov    ds:0x5fa91dbf,al
  4100a9:	sbb    al,BYTE PTR [edi+0x23]
  4100ac:	cmp    ecx,DWORD PTR [ebx-0x37]
  4100af:	jo     0x410129
  4100b1:	lahf   
  4100b2:	mov    dl,0x5f
  4100b4:	mov    ecx,0x4c1ef9a0
  4100b9:	adc    BYTE PTR [eax],0xbe
  4100bc:	xchg   esi,eax
  4100bd:	cmp    al,0xe3
  4100bf:	xor    al,0xfd
  4100c1:	push   es
  4100c2:	mov    es,WORD PTR [edx+0x10]
  4100c5:	icebp  
  4100c6:	clc    
  4100c7:	pop    ebx
  4100c8:	xor    eax,0x92b52b02
  4100cd:	adc    eax,0x8f51a818
  4100d2:	fdiv   st(5),st
  4100d4:	sbb    al,0x6f
  4100d6:	out    0xfb,eax
  4100d8:	jle    0x410150
  4100da:	stc    
  4100db:	or     edx,0x4a
  4100de:	xchg   edx,eax
  4100df:	sbb    esp,DWORD PTR [eax]
  4100e1:	xchg   ebx,eax
  4100e2:	and    DWORD PTR [esi+ebx*4+0x4667d76],edx
  4100e9:	push   ds
  4100ea:	test   al,0xc8
  4100ec:	mov    edi,0xa0fd4fbf
  4100f1:	rcr    DWORD PTR [esp+ebx*1-0x3e58e44e],1
  4100f8:	adc    DWORD PTR [eax-0x1f],eax
  4100fb:	pop    esp
  4100fc:	std    
  4100fd:	add    eax,0xd50f8a3a
  410102:	data16 lahf 
  410104:	or     BYTE PTR [ebx+0x1a],0xa4
  410108:	lds    edi,FWORD PTR [edx+0x59]
  41010b:	fwait
  41010c:	pop    es
  41010d:	and    BYTE PTR [ecx+0x404949b7],bh
  410113:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410114:	inc    eax
  410115:	add    BYTE PTR [ecx-0x7fc9c000],bh
  41011b:	cs in  eax,dx
  41011d:	push   ebp
  41011e:	add    DWORD PTR ds:0xeb7c7d01,edi
  410124:	add    eax,0x248fe64f
  410129:	xor    ecx,0xc1713543
  41012f:	ds cld 
  410131:	mov    esi,0xbd0ecfaf
  410136:	loopne 0x4100fb
  410138:	pusha  
  410139:	mov    cl,0xa1
  41013b:	inc    edx
  41013c:	lods   eax,DWORD PTR ds:[esi]
  41013d:	add    DWORD PTR gs:[ebx],ecx
  410140:	outs   dx,BYTE PTR ds:[esi]
  410141:	mov    bh,0xa1
  410143:	out    dx,al
  410144:	jg     0x410162
  410146:	pop    eax
  410147:	imul   edi,edi,0xffffffea
  41014a:	xor    ebp,eax
  41014c:	in     al,dx
  41014d:	fdivr  QWORD PTR [edi-0x62835d2a]
  410153:	shr    DWORD PTR [edi+ecx*4],1
  410156:	xor    esi,ebp
  410158:	pop    es
  410159:	xchg   DWORD PTR [esi],ebp
  41015b:	(bad)  
  41015d:	inc    esp
  41015e:	dec    ebx
  41015f:	jb     0x410114
  410161:	dec    ebx
  410162:	and    DWORD PTR [bp+di],ebp
  410165:	mov    edi,0x51dee435
  41016a:	sub    ecx,esi
  41016c:	imul   ebx,ebx,0xffffff87
  41016f:	hlt    
  410170:	jbe    0x41010e
  410172:	push   0xc7dc0dc3
  410177:	push   cs
  410178:	dec    ebx
  410179:	adc    eax,0x30ab90db
  41017e:	fisubr DWORD PTR [ebx-0x74b92211]
  410184:	and    dh,BYTE PTR [edi-0x3e]
  410187:	mov    bl,0xf7
  410189:	jb     0x410165
  41018b:	jp     0x4101c4
  41018d:	aaa    
  41018e:	or     eax,0x54cc41d4
  410193:	int    0x3e
  410195:	push   esi
  410196:	and    ebp,ecx
  410198:	aas    
  410199:	xchg   edx,eax
  41019a:	push   ss
  41019b:	pop    ds
  41019c:	inc    edi
  41019d:	jo     0x4101bc
  41019f:	push   cs
  4101a0:	retf   
  4101a1:	out    0xa,eax
  4101a3:	mov    al,gs:0xe84482d
  4101a9:	push   0xffffffea
  4101ab:	cmp    ch,BYTE PTR ds:0xe17bc86e
  4101b1:	mov    dh,0x78
  4101b3:	or     DWORD PTR [ebp-0x44],edi
  4101b6:	jmp    0xafce:0xf29cc38b
  4101bd:	hlt    
  4101be:	mov    al,ds:0x13ae0c43
  4101c3:	mov    ebp,DWORD PTR ss:[ebp+0x49]
  4101c7:	cmp    BYTE PTR [edi-0x76540de3],cl
  4101cd:	inc    esi
  4101ce:	dec    edi
  4101cf:	addr16 mov edx,0x5126fe61
  4101d5:	cmp    DWORD PTR [ecx-0x10],ecx
  4101d8:	mov    ebx,0xc2d4ff0b
  4101dd:	jno    0x4101bd
  4101df:	repz hlt 
  4101e1:	sbb    BYTE PTR [ebx-0x63],cl
  4101e4:	sbb    BYTE PTR [esi+edi*4-0x79de5852],ch
  4101eb:	fisubr DWORD PTR [esi-0x11]
  4101ee:	mov    WORD PTR [ecx+0x7b],?
  4101f1:	jmp    0xe15e:0xa5333a25
  4101f8:	pop    ecx
  4101f9:	cmp    eax,0x6c054f53
  4101fe:	lea    eax,[edx]
  410200:	sbb    DWORD PTR [ebx],ebp
  410202:	clc    
  410203:	push   eax
  410204:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410205:	data16 ja 0x41018d
  410208:	mov    esp,0xd43e54b2
  41020d:	test   al,0xcb
  41020f:	inc    edx
  410210:	(bad)  
  410211:	push   esi
  410212:	ins    BYTE PTR es:[edi],dx
  410213:	cli    
  410214:	mov    ch,0xf7
  410216:	das    
  410217:	jne    0x4101da
  410219:	mov    al,BYTE PTR [edx]
  41021b:	push   ss
  41021c:	push   esp
  41021d:	shl    DWORD PTR [ebx-0x1eb0c772],1
  410223:	out    dx,al
  410224:	(bad)  
  410225:	out    0xb,eax
  410227:	cmp    eax,0x83013f7c
  41022c:	test   BYTE PTR [ebx+esi*1+0x507e3e92],ch
  410233:	popa   
  410234:	fsub   QWORD PTR [ecx]
  410236:	pop    esp
  410237:	retf   0x2934
  41023a:	cmc    
  41023b:	jo     0x410200
  41023d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41023e:	mov    edx,0xb4376258
  410243:	popa   
  410244:	add    bl,dl
  410246:	mov    ebp,0x3e275b39
  41024b:	pop    ss
  41024c:	out    dx,al
  41024d:	rcr    BYTE PTR [eax-0x523a554c],cl
  410253:	push   ss
  410254:	sbb    BYTE PTR [eax+ecx*8+0x1ee746df],al
  41025b:	ror    BYTE PTR [edi],0xf8
  41025e:	movzx  edi,di
  410261:	mov    ah,0x47
  410263:	and    eax,0xdfc048bf
  410268:	adc    al,0x86
  41026a:	mov    al,ds:0x9468d91d
  41026f:	cli    
  410270:	clc    
  410271:	jl     0x4102e0
  410273:	xor    eax,DWORD PTR [eax-0x3153f373]
  410279:	ret    0x56ef
  41027c:	in     eax,0x5b
  41027e:	mov    al,0x3d
  410280:	lea    eax,[eax-0x797f6f9a]
  410286:	fild   DWORD PTR [ebx+0x1155e711]
  41028c:	shl    WORD PTR [esi-0x1f05d098],cl
  410293:	test   eax,0x55970bc2
  410298:	and    eax,0x48265ccb
  41029d:	test   BYTE PTR [ebx],bh
  41029f:	sub    DWORD PTR [esp+edi*2-0x20564310],ebp
  4102a6:	ss cwde 
  4102a8:	or     eax,0xb9b0172e
  4102ad:	lahf   
  4102ae:	stc    
  4102af:	push   esp
  4102b0:	cdq    
  4102b1:	loope  0x4102d4
  4102b3:	push   cs
  4102b4:	xchg   edx,eax
  4102b5:	and    eax,0xf4b864a3
  4102ba:	mov    eax,0x39f84bed
  4102bf:	nop
  4102c0:	mov    ds:0x528a8655,eax
  4102c5:	lea    edi,[esi-0x26]
  4102c8:	dec    esi
  4102c9:	adc    DWORD PTR [edx-0x3c],ebp
  4102cc:	pop    esi
  4102cd:	add    DWORD PTR ds:0x857114f7,0xffffff9c
  4102d4:	scas   eax,DWORD PTR es:[edi]
  4102d5:	jle    0x41026d
  4102d7:	ret    
  4102d8:	dec    edx
  4102d9:	push   ebp
  4102da:	jb     0x4102c1
  4102dc:	jg     0x4102be
  4102de:	mov    ecx,0xd84bf1ff
  4102e3:	fmulp  st(3),st
  4102e5:	sti    
  4102e6:	popa   
  4102e7:	and    BYTE PTR ds:0x6abd4159,0x95
  4102ee:	dec    edi
  4102ef:	jmp    0xc21dc7b1
  4102f4:	in     eax,dx
  4102f5:	xchg   edi,eax
  4102f6:	mov    esi,ebx
  4102f8:	add    cl,cl
  4102fa:	pop    edi
  4102fb:	xchg   BYTE PTR [ebp+0x6818203e],bl
  410301:	fnstenv [esi]
  410303:	pusha  
  410304:	cli    
  410305:	pop    ds
  410306:	loop   0x410308
  410308:	loopne 0x4102ba
  41030a:	outs   dx,DWORD PTR ds:[esi]
  41030b:	cmp    ch,0x7c
  41030e:	dec    ecx
  41030f:	or     esp,ebp
  410311:	aad    0xed
  410313:	(bad)  
  410314:	fld    DWORD PTR [ecx+eiz*4-0x4d0cb334]
  41031b:	cwde   
  41031c:	test   BYTE PTR [esi+0x4f9b9e84],bl
  410322:	dec    edi
  410323:	mov    esi,0x2de9726
  410328:	adc    BYTE PTR [eax-0x57694ad9],0x6e
  41032f:	in     eax,dx
  410330:	bound  ebx,QWORD PTR [esi]
  410332:	xor    dl,BYTE PTR [edx]
  410334:	test   DWORD PTR [edi+0x53],0xf0a750be
  41033b:	mov    edx,0xae854115
  410340:	add    al,0xe4
  410342:	ins    BYTE PTR es:[edi],dx
  410343:	mov    edx,0x2ddb33cd
  410348:	daa    
  410349:	fisubr WORD PTR [ecx]
  41034b:	dec    eax
  41034c:	sub    BYTE PTR [esp+ebx*8],dl
  41034f:	adc    BYTE PTR [edx+ebp*2],bl
  410352:	ins    DWORD PTR es:[edi],dx
  410353:	pop    ebx
  410354:	enter  0x7c9d,0x11
  410358:	lahf   
  410359:	inc    ecx
  41035a:	jno    0x410358
  41035c:	mov    edx,DWORD PTR [edx-0x2ca012e3]
  410362:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410363:	mov    al,ds:0x8ba39988
  410368:	fmul   st(4),st
  41036a:	popf   
  41036b:	mov    bh,0x87
  41036d:	pop    esi
  41036e:	or     DWORD PTR [ecx-0x2cc435d4],esi
  410374:	mov    eax,ds:0x4060dfd0
  410379:	je     0x4103ad
  41037b:	stc    
  41037c:	sbb    eax,0xaa3d1a8f
  410381:	pop    esp
  410382:	(bad)  
  410383:	sub    cl,BYTE PTR [esp+ebx*1-0x54]
  410387:	jg     0x41035f
  410389:	pop    ebx
  41038a:	fbstp  TBYTE PTR [esi]
  41038c:	cmp    ebx,0x25134823
  410392:	ficom  DWORD PTR [ecx+0x7b]
  410395:	pop    edi
  410396:	repnz hlt 
  410398:	jbe    0x410412
  41039a:	cs pop ebp
  41039c:	cmp    eax,0x3b51bb6f
  4103a1:	iret   
  4103a2:	pusha  
  4103a3:	sub    al,0x88
  4103a6:	iret   
  4103a7:	fs jno 0x410416
  4103aa:	xchg   ecx,eax
  4103ab:	pop    ds
  4103ac:	fldcw  WORD PTR [edi]
  4103ae:	jno    0x410394
  4103b0:	lea    ebp,[edx-0x26]
  4103b3:	mov    BYTE PTR [edx+0x37],ch
  4103b6:	fwait
  4103b7:	pop    edi
  4103b8:	dec    ecx
  4103b9:	les    esi,FWORD PTR [ecx+eiz*8]
  4103bc:	sub    BYTE PTR [ecx-0x6c45f221],bl
  4103c2:	jecxz  0x4103d6
  4103c4:	loope  0x4103d0
  4103c6:	mov    edi,0xe0143d5c
  4103cb:	add    BYTE PTR ss:[ecx-0x17],dh
  4103cf:	xor    edx,DWORD PTR [esi-0xf0bd1e4]
  4103d5:	or     bh,BYTE PTR [ecx]
  4103d7:	mov    ah,0xcb
  4103d9:	in     eax,dx
  4103da:	iret   
  4103db:	cmp    BYTE PTR [ecx-0x7a505a1c],ch
  4103e1:	push   ss
  4103e2:	xor    ebx,edx
  4103e4:	xchg   ebp,eax
  4103e5:	and    eax,0x224acbce
  4103ea:	sbb    BYTE PTR [esi+edi*2+0xad6765a],dl
  4103f1:	or     DWORD PTR es:[ebp-0x2a],0x9363dbd4
  4103f9:	sub    BYTE PTR [ebx-0x5f],0x68
  4103fd:	imul   esi,edx,0x61
  410400:	sub    DWORD PTR [edx],edx
  410402:	pop    ds
  410403:	fbstp  TBYTE PTR [eax]
  410405:	cmp    BYTE PTR [ecx+0x28],bh
  410408:	push   eax
  410409:	dec    esi
  41040a:	jle    0x410430
  41040c:	mov    ds:0xe73b42c1,eax
  410411:	icebp  
  410412:	aam    0xf4
  410414:	jmp    0xf0ab:0xebf80d36
  41041b:	sbb    ch,BYTE PTR ds:0xe60edb6f
  410421:	retf   0x1c1b
  410424:	or     edx,DWORD PTR [ecx]
  410426:	fwait
  410427:	stos   DWORD PTR es:[edi],eax
  410428:	adc    al,0xc9
  41042a:	mov    ch,0x6
  41042c:	push   ds
  41042d:	mov    bl,0xce
  41042f:	(bad)  
  410430:	(bad)  
  410431:	push   esp
  410432:	dec    ebx
  410433:	dec    ebp
  410434:	sbb    DWORD PTR [ebx],ebx
  410436:	stos   BYTE PTR es:[edi],al
  410437:	jbe    0x41048a
  410439:	push   ss
  41043a:	bound  ebx,QWORD PTR [eax]
  41043c:	mov    al,0xca
  41043e:	not    DWORD PTR [edx-0x37]
  410441:	pop    ebp
  410442:	fsubr  DWORD PTR [esi+ebx*2]
  410445:	or     dh,BYTE PTR [edi]
  410447:	push   0x64fa2c81
  41044c:	inc    ebx
  41044d:	mov    ds:0x86be5391,eax
  410452:	or     eax,0xf2393818
  410457:	mov    dl,0x79
  410459:	mov    ds:0xde13c2b7,al
  41045e:	es sbb eax,0xe913433e
  410464:	popa   
  410465:	fimul  WORD PTR [edi+0x35]
  410468:	fxch   st(7)
  41046a:	ret    
  41046b:	push   ds
  41046c:	stos   BYTE PTR es:[edi],al
  41046d:	loop   0x410485
  41046f:	bound  esi,QWORD PTR [edi-0x78]
  410472:	mov    esi,0xb81a0034
  410477:	and    bl,BYTE PTR [esi-0x7e]
  41047a:	jle    0x4104a4
  41047c:	jp     0x410460
  41047e:	stc    
  41047f:	cld    
  410480:	cmp    bh,BYTE PTR [edx+0x5f]
  410483:	mov    edi,0x8df27414
  410488:	xor    eax,DWORD PTR [edi]
  41048a:	cmp    BYTE PTR [ebx-0x49],ah
  41048d:	fist   DWORD PTR [ecx]
  41048f:	ins    BYTE PTR es:[edi],dx
  410490:	loope  0x410425
  410492:	pop    ss
  410493:	push   esp
  410494:	shr    DWORD PTR [ebp+0x5a00a0a1],0x9a
  41049b:	adc    edi,esp
  41049d:	mov    dh,BYTE PTR [ebx]
  41049f:	mov    al,ds:0xd1ea4fcb
  4104a4:	dec    edx
  4104a5:	ds out dx,al
  4104a7:	dec    eax
  4104a8:	mov    dh,BYTE PTR [ecx]
  4104aa:	xchg   ecx,eax
  4104ab:	adc    DWORD PTR ds:[di],0x6e7c60c3
  4104b3:	sahf   
  4104b4:	nop
  4104b5:	xor    DWORD PTR [ecx-0x56],eax
  4104b8:	loop   0x4104d6
  4104ba:	outs   dx,BYTE PTR ss:[esi]
  4104bc:	sbb    esp,edx
  4104be:	mov    al,0x32
  4104c0:	cld    
  4104c1:	aad    0xfb
  4104c3:	dec    ecx
  4104c4:	outs   dx,DWORD PTR ds:[esi]
  4104c5:	bound  edx,QWORD PTR [eax-0x4b271262]
  4104cb:	adc    bh,BYTE PTR [eax-0x4788cb0a]
  4104d1:	inc    esi
  4104d2:	rep stos DWORD PTR es:[edi],eax
  4104d4:	das    
  4104d5:	fisubr DWORD PTR [ebx]
  4104d7:	mov    cs,WORD PTR [edx+0x21f02b85]
  4104dd:	mov    WORD PTR [eax],gs
  4104df:	and    BYTE PTR [ecx],cl
  4104e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4104e2:	or     eax,0x79753c73
  4104e7:	mov    ch,BYTE PTR [edi-0x1e6f528]
  4104ed:	cmp    bh,BYTE PTR [ecx+0xd830877]
  4104f3:	adc    BYTE PTR [edx+0x34c5c784],0x5
  4104fa:	sbb    bl,ch
  4104fc:	xchg   ebp,eax
  4104fd:	mov    al,0xd3
  4104ff:	(bad)  
  410500:	je     0x410505
  410502:	test   DWORD PTR [ecx],ecx
  410504:	imul   ecx,DWORD PTR [edi+0xfbfa1a9],0xffffffd1
  41050b:	xchg   edi,eax
  41050c:	mov    ebx,0x7510e542
  410511:	adc    bl,cl
  410513:	sub    DWORD PTR [edx+0x3f1bba8d],ebx
  410519:	rcr    BYTE PTR [esi],0xd3
  41051c:	sahf   
  41051d:	pop    esi
  41051e:	in     al,dx
  41051f:	gs in  eax,0x4b
  410522:	sbb    ecx,DWORD PTR [eax-0x48c1440f]
  410528:	ss or  al,0x28
  41052b:	mov    dl,al
  41052d:	or     ebp,DWORD PTR [ebx-0x376ac516]
  410533:	js     0x4104c4
  410535:	retf   
  410536:	out    0x10,eax
  410538:	inc    ebp
  410539:	mov    WORD PTR [ebx+0x3972fb94],gs
  41053f:	dec    edx
  410540:	or     al,0xfe
  410542:	fdiv   st,st(7)
  410544:	adc    BYTE PTR ds:0xfc7fa2ea,al
  41054a:	pusha  
  41054b:	aam    0x22
  41054d:	xchg   ecx,eax
  41054e:	mov    dh,BYTE PTR [ebx+0x1482b28f]
  410554:	gs dec ecx
  410556:	add    BYTE PTR [esi],ah
  410558:	test   DWORD PTR [edi+0x29d5dddd],edx
  41055e:	lods   eax,DWORD PTR ds:[esi]
  41055f:	test   eax,0x726d7cbb
  410564:	cmp    dl,BYTE PTR [edi+0x71]
  410567:	mov    ebx,0x59ecccfa
  41056c:	into   
  41056d:	mov    eax,ds:0xa44020b5
  410572:	int3   
  410573:	stos   BYTE PTR es:[edi],al
  410574:	std    
  410575:	stos   DWORD PTR es:[edi],eax
  410576:	mov    al,0xc7
  410578:	lock pop edi
  41057a:	mov    cl,ch
  41057c:	sbb    DWORD PTR [edi+esi*2],ecx
  41057f:	jbe    0x410509
  410581:	ret    0x61e
  410584:	xor    bh,BYTE PTR [esi]
  410586:	or     edi,DWORD PTR [esi-0x43545225]
  41058c:	fdivr  DWORD PTR [esi]
  41058e:	adc    DWORD PTR [edx],esp
  410590:	mov    esp,0x87a2d8f5
  410595:	in     al,dx
  410596:	xacquire xchg DWORD PTR [esi],eax
  410599:	mov    dl,0x6a
  41059b:	xor    BYTE PTR [eax+0x6215336],ah
  4105a1:	fst    QWORD PTR [ebx+0x6]
  4105a4:	inc    ecx
  4105a5:	adc    dl,BYTE PTR [eax-0x3d]
  4105a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105a9:	dec    ecx
  4105aa:	dec    esp
  4105ab:	fs rcr al,0xf6
  4105af:	add    eax,0x70aea849
  4105b4:	xchg   ebx,eax
  4105b5:	fistp  DWORD PTR [ebx-0x1a8c230a]
  4105bb:	ror    DWORD PTR [edi],cl
  4105bd:	imul   esp,edi,0xd25fd9ad
  4105c3:	and    al,0x26
  4105c5:	aad    0x99
  4105c7:	(bad)  
  4105c8:	outs   dx,DWORD PTR ds:[esi]
  4105c9:	fisub  WORD PTR [eax+esi*2+0x261d48d1]
  4105d0:	adc    BYTE PTR [ebx],0x2d
  4105d3:	fst    DWORD PTR [esi+0x57b6ff31]
  4105d9:	dec    edx
  4105da:	jne    0x410616
  4105dc:	fwait
  4105dd:	adc    eax,0x8dc507ca
  4105e2:	xchg   DWORD PTR [esi],edx
  4105e4:	nop
  4105e5:	inc    ecx
  4105e6:	imul   ecx,DWORD PTR [ebp+0x4],0x688ab826
  4105ed:	adc    eax,DWORD PTR [esp+eax*8-0x4a189737]
  4105f4:	loop   0x4105e7
  4105f6:	icebp  
  4105f7:	lods   eax,DWORD PTR ds:[esi]
  4105f8:	add    edi,esi
  4105fa:	xlat   BYTE PTR ds:[ebx]
  4105fb:	mov    ch,0xc8
  4105fd:	and    al,0xd1
  410600:	jp     0x4105e4
  410602:	clc    
  410603:	push   0xe0c129cd
  410608:	sbb    eax,0x6ade4a78
  41060d:	mov    BYTE PTR [ebp-0x76d4fb0f],cl
  410613:	jle    0x4105da
  410615:	mov    ds:0x4cddff,eax
  41061a:	stc    
  41061b:	mov    ebx,0x466de922
  410620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410621:	mov    ebp,0x14a101b4
  410626:	rcl    DWORD PTR [eax+0x17e8d87],cl
  41062c:	jno    0x41069f
  41062e:	push   ss
  41062f:	aad    0xc3
  410631:	out    dx,al
  410632:	add    DWORD PTR [edi-0x335bddf],ecx
  410638:	stc    
  410639:	inc    ebx
  41063a:	jno    0x410667
  41063c:	nop
  41063d:	les    eax,FWORD PTR [edi-0x77]
  410640:	hlt    
  410641:	pop    ss
  410642:	xchg   esp,eax
  410643:	retf   
  410644:	dec    ebx
  410645:	(bad)  
  410646:	cmp    dh,dh
  410648:	mov    cs,WORD PTR [esi+0x75]
  41064b:	xor    bh,BYTE PTR [edi-0x20]
  41064e:	add    ch,dh
  410650:	test   eax,0x78af6fb9
  410655:	aad    0x75
  410657:	(bad)  
  410658:	shr    BYTE PTR [edi+0x7df01ce4],cl
  41065e:	jb     0x410688
  410660:	mov    ebp,0xf5eac7a3
  410665:	rol    DWORD PTR [eax+0x65],1
  410668:	cwde   
  410669:	outs   dx,BYTE PTR ds:[esi]
  41066a:	mov    ch,0xc
  41066c:	fild   QWORD PTR [ebp-0x4d]
  41066f:	popf   
  410670:	fs call 0xa27d5d0
  410676:	xor    edx,DWORD PTR [ebx-0x7c37d2bc]
  41067c:	dec    ebx
  41067d:	mov    ah,0x6e
  41067f:	pushf  
  410680:	mov    eax,ds:0x596dd102
  410685:	lds    esi,FWORD PTR [ebx+0x1b]
  410688:	add    DWORD PTR [ebp+0x3f],0x26
  41068c:	test   eax,0x69d9387
  410691:	fwait
  410692:	cmp    DWORD PTR [eax-0x56],0xfffffff1
  410696:	adc    BYTE PTR [esi-0x7b],cl
  410699:	fnsave [ebx-0x311f8495]
  41069f:	mov    ecx,0x2f28cd0b
  4106a4:	(bad)  
  4106a5:	loope  0x410693
  4106a7:	mov    cl,cl
  4106a9:	or     DWORD PTR [eax-0x316c794a],ecx
  4106af:	mov    ebp,ebx
  4106b1:	idiv   DWORD PTR [eax]
  4106b3:	pop    ebx
  4106b4:	cdq    
  4106b5:	das    
  4106b6:	popf   
  4106b7:	cmc    
  4106b8:	xor    BYTE PTR [ecx],dh
  4106ba:	shl    BYTE PTR [ecx-0x3d],1
  4106bd:	sub    bl,BYTE PTR [ecx]
  4106bf:	ss iret 
  4106c1:	mov    dl,ah
  4106c3:	fcom   st(2)
  4106c5:	or     al,0xdb
  4106c7:	retf   
  4106c8:	sub    ch,BYTE PTR [edx-0x4673cada]
  4106ce:	(bad)  
  4106cf:	xor    BYTE PTR [eax],ah
  4106d1:	ds mov ah,0x94
  4106d4:	imul   edi,edi,0xb13dcc85
  4106da:	adc    al,0x12
  4106dc:	fdivr  st,st(3)
  4106de:	ret    
  4106df:	mov    edi,0x63e76b2d
  4106e4:	mov    ds:0xc3de9815,eax
  4106e9:	inc    ecx
  4106ea:	mov    ah,BYTE PTR [ecx+0x5a8cee60]
  4106f0:	mov    ecx,0x92e4b5ac
  4106f5:	test   DWORD PTR [ecx+0x6e4f8ca5],0xf84b6c82
  4106ff:	jg     0x410753
  410701:	and    DWORD PTR [ebp-0x53],edi
  410704:	das    
  410705:	fwait
  410706:	adc    eax,0xec7c4ec5
  41070b:	push   0x6252222e
  410710:	sub    cl,BYTE PTR [edi-0x3]
  410713:	pop    ebp
  410714:	mov    edi,0x3623b075
  410719:	loop   0x41069b
  41071b:	sbb    BYTE PTR [edx+0x6a],dh
  41071e:	shl    BYTE PTR [ebx+esi*4],0x6b
  410722:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410723:	mov    ah,BYTE PTR [edx+0x3979f2d5]
  410729:	in     eax,dx
  41072a:	ror    BYTE PTR [ebx],cl
  41072c:	inc    edi
  41072d:	in     eax,0x41
  41072f:	enter  0x21ca,0x9d
  410733:	out    0x40,al
  410735:	fadd   DWORD PTR [edx]
  410737:	ficomp DWORD PTR [edi+edx*8+0x4c6802aa]
  41073e:	inc    esp
  41073f:	add    al,0x73
  410741:	aas    
  410742:	or     DWORD PTR [edi-0x52bbf0ad],ebp
  410748:	adc    ch,dl
  41074a:	mov    ?,edi
  41074c:	imul   esi,DWORD PTR [ecx],0x23b79a71
  410752:	xchg   ebp,eax
  410753:	shl    BYTE PTR [esi-0x76411d99],1
  410759:	mov    bl,0x70
  41075b:	push   ebx
  41075c:	rcl    dl,0x81
  41075f:	pop    edx
  410760:	aam    0x82
  410762:	dec    edx
  410763:	mov    ebp,0x5e4d053a
  410768:	mov    eax,ds:0x74006daf
  41076d:	pop    eax
  41076e:	adc    al,BYTE PTR [esi+esi*1-0x35]
  410772:	mov    al,cl
  410774:	and    esi,DWORD PTR [edi]
  410776:	pusha  
  410777:	imul   eax,DWORD PTR [esi],0xf90a7b5c
  41077d:	jle    0x4107a1
  41077f:	in     eax,dx
  410780:	adc    BYTE PTR [esi+0x3f],al
  410783:	sub    eax,DWORD PTR [ebp-0x6d]
  410786:	bound  edi,QWORD PTR [ebx-0x51663cfd]
  41078c:	or     DWORD PTR [esp+eax*8+0x3b],0xe4b5eab0
  410794:	dec    esp
  410795:	daa    
  410796:	mov    ecx,0x81ca721d
  41079b:	and    eax,0xad5bf57f
  4107a0:	cmp    dh,dh
  4107a2:	xor    DWORD PTR [esi-0x2aba17be],0x12
  4107a9:	rol    DWORD PTR [edi],1
  4107ab:	jo     0x4107bd
  4107ad:	cmc    
  4107ae:	loop   0x41074d
  4107b0:	sbb    bh,ah
  4107b2:	stos   BYTE PTR es:[edi],al
  4107b3:	out    dx,eax
  4107b4:	ins    DWORD PTR es:[edi],dx
  4107b5:	scas   al,BYTE PTR es:[edi]
  4107b6:	lahf   
  4107b7:	daa    
  4107b8:	or     DWORD PTR [ebp+0xcee19b6],edx
  4107be:	add    BYTE PTR [ebp+0x3c6f00a2],bh
  4107c4:	shr    BYTE PTR [ebp-0x9383433],1
  4107ca:	nop
  4107cb:	cmp    eax,0x89ad2595
  4107d0:	or     BYTE PTR [esi+0x277071ed],dh
  4107d6:	xor    eax,0x3bb7bfa9
  4107db:	sub    al,0xb7
  4107dd:	shr    BYTE PTR [ecx+0x2cea625],1
  4107e3:	push   edi
  4107e4:	jge    0x4107b3
  4107e6:	jns    0x410845
  4107e8:	popf   
  4107e9:	xchg   ebx,eax
  4107ea:	fst    DWORD PTR [esi+0x642ee233]
  4107f0:	scas   al,BYTE PTR es:[edi]
  4107f1:	hlt    
  4107f2:	dec    ecx
  4107f3:	retf   
  4107f4:	mov    edi,0xb5a33ab2
  4107f9:	cmp    edx,DWORD PTR [ebx-0x6c]
  4107fc:	retf   0x6dd0
  4107ff:	(bad)  
  410800:	sub    DWORD PTR [edi+0x31],ebp
  410803:	cmp    ah,ah
  410805:	jle    0x410853
  410807:	(bad)  
  410808:	lock aad 0x4d
  41080b:	jge    0x9602740a
  410811:	jmp    0x1cd6:0x3ae72d63
  410818:	mov    ecx,0xfdafb543
  41081d:	mov    dl,0x4e
  41081f:	test   BYTE PTR [eax-0x10a4d81],bl
  410825:	sbb    DWORD PTR [eax-0x2c],esp
  410828:	(bad)  
  410829:	cmp    al,BYTE PTR [edi]
  41082b:	mov    bh,0x7e
  41082d:	inc    ecx
  41082e:	cs out 0x16,al
  410831:	jns    0x41085d
  410833:	pop    edi
  410834:	xchg   cl,cl
  410836:	lahf   
  410837:	sti    
  410838:	inc    ebp
  410839:	mov    esp,0xa814a2a1
  41083e:	out    0x1c,al
  410840:	out    0xe0,al
  410842:	mov    al,ds:0xf6a58cb7
  410847:	in     al,dx
  410848:	dec    edx
  410849:	test   eax,0x52c0e7a3
  41084e:	xor    eax,0xacbe97cb
  410853:	dec    ecx
  410854:	mov    BYTE PTR [ebx+ebx*4],dl
  410857:	jl     0x410852
  410859:	imul   edi,esi,0x74788fe7
  41085f:	xchg   edi,eax
  410860:	je     0x410817
  410862:	sbb    BYTE PTR [esi+0x878717b],al
  410868:	lock pop edx
  41086a:	sub    bl,bh
  41086c:	jmp    0x96b3:0x5e986fef
  410873:	pusha  
  410874:	jmp    0x410874
  410876:	(bad)  
  410877:	cli    
  410878:	adc    DWORD PTR [edx+0x69],ebx
  41087b:	add    ch,BYTE PTR [ecx]
  41087d:	dec    ecx
  41087e:	jecxz  0x4108ef
  410880:	or     al,0x17
  410882:	cmp    bl,ah
  410884:	call   0x8345:0x88b56edf
  41088b:	retf   0xf844
  41088e:	push   edx
  41088f:	addr16 xchg edi,eax
  410891:	push   ds
  410892:	mov    ch,0x20
  410894:	addr16 jbe 0x41086c
  410897:	idiv   BYTE PTR [esi+0x6e443ced]
  41089d:	ins    BYTE PTR es:[edi],dx
  41089e:	sar    DWORD PTR [eax-0x22],cl
  4108a1:	mov    ds:0xf37f695f,al
  4108a6:	add    edi,DWORD PTR [esi-0x7b]
  4108a9:	retf   
  4108aa:	mov    bl,0xee
  4108ac:	out    dx,eax
  4108ad:	ins    BYTE PTR es:[edi],dx
  4108ae:	adc    eax,DWORD PTR [esi+ebx*2-0x3265448a]
  4108b5:	and    ecx,0xcac21026
  4108bb:	jl     0x41088d
  4108bd:	xchg   edi,eax
  4108be:	mov    ds:0xd4ae18b5,eax
  4108c3:	lods   eax,DWORD PTR ds:[esi]
  4108c4:	mov    dl,0x68
  4108c6:	imul   esp,DWORD PTR [edi+0x8],0xb9cc57b3
  4108cd:	mov    eax,ds:0xe9b89b2f
  4108d2:	xchg   DWORD PTR [ecx-0x49d466e3],esi
  4108d8:	arpl   WORD PTR [edi+ecx*8],sp
  4108db:	daa    
  4108dc:	dec    ecx
  4108dd:	mov    dl,0x5e
  4108df:	push   esi
  4108e0:	lea    ebp,[eax-0x4c]
  4108e3:	sub    eax,0xbb88ece4
  4108e8:	sbb    edi,DWORD PTR [ebx+0x21583a26]
  4108ee:	push   ds
  4108ef:	rcr    BYTE PTR [eax],0xff
  4108f2:	clc    
  4108f3:	sbb    al,0x92
  4108f5:	or     ebp,DWORD PTR [ebp-0x4d]
  4108f8:	(bad)  
  4108f9:	cld    
  4108fa:	mov    al,ds:0xeb0d6abb
  4108ff:	xchg   ebx,eax
  410900:	xor    eax,0x9d618aca
  410905:	add    ebp,ebp
  410907:	xlat   BYTE PTR ds:[ebx]
  410908:	int3   
  410909:	lods   al,BYTE PTR ds:[esi]
  41090a:	inc    ebx
  41090b:	fwait
  41090c:	js     0x4108e5
  41090e:	fwait
  41090f:	retf   
  410910:	in     al,0x15
  410912:	popf   
  410913:	mov    ecx,0x1f9f36f0
  410918:	scas   eax,DWORD PTR es:[edi]
  410919:	nop
  41091a:	inc    eax
  41091b:	inc    ebp
  41091c:	daa    
  41091d:	jbe    0x410915
  41091f:	sti    
  410920:	ins    BYTE PTR es:[edi],dx
  410921:	pop    ecx
  410922:	je     0x41091c
  410924:	fxch   st(0)
  410926:	mov    DWORD PTR [edi+edx*4+0x57b35a2a],ebx
  41092d:	dec    eax
  41092e:	push   ecx
  41092f:	cli    
  410930:	add    dl,cl
  410932:	dec    eax
  410933:	aas    
  410934:	or     DWORD PTR [ebp+0x73c88920],0x89b7f4ae
  41093e:	mov    al,0x69
  410940:	jmp    0x4722:0x6653a950
  410947:	popf   
  410948:	leave  
  410949:	pop    esp
  41094a:	cmp    ebx,eax
  41094c:	xor    al,0xff
  41094e:	test   eax,0x382ddcec
  410953:	(bad)  
  410954:	jmp    0xd7bf:0x302b456c
  41095b:	aam    0xd7
  41095d:	push   ebx
  41095e:	inc    edx
  41095f:	imul   DWORD PTR [ecx-0x43]
  410962:	mov    bl,0x77
  410964:	sbb    ebx,DWORD PTR [ebx+0x6c80b99e]
  41096a:	jnp    0x41099f
  41096c:	mov    eax,ds:0xd8d4c87a
  410971:	jl     0x410931
  410973:	cmp    bl,BYTE PTR [edi]
  410975:	clc    
  410976:	jo     0x410964
  410978:	sbb    eax,ecx
  41097a:	cmc    
  41097b:	mov    eax,ds:0x6b7a6dde
  410980:	mov    ss,ebx
  410982:	int    0x43
  410984:	ror    BYTE PTR [ebx-0x1685521b],0xdf
  41098b:	out    dx,eax
  41098c:	jmp    0x410a0d
  41098e:	inc    edi
  41098f:	out    0x1a,eax
  410991:	mov    ebp,0x696eb8ef
  410996:	mov    al,BYTE PTR [edx+0x4bbf140f]
  41099c:	pop    es
  41099d:	xchg   ebx,eax
  41099e:	out    0x51,eax
  4109a0:	push   ds
  4109a1:	pop    ecx
  4109a2:	inc    edx
  4109a3:	pop    ss
  4109a4:	(bad)  
  4109a5:	lahf   
  4109a6:	jae    0x41099a
  4109a8:	mov    ds:0xa617e837,eax
  4109ad:	jae    0x41092f
  4109af:	mov    esp,0xd8203500
  4109b4:	add    DWORD PTR [ebx+0x23533978],0xb4808dd7
  4109be:	inc    eax
  4109bf:	and    DWORD PTR [eax+eax*8],ecx
  4109c2:	mov    dh,0xeb
  4109c4:	sbb    edx,DWORD PTR [ebx+0x71]
  4109c7:	adc    BYTE PTR [eax-0x1a0769a1],cl
  4109cd:	add    al,0x3f
  4109cf:	into   
  4109d0:	lahf   
  4109d1:	je     0x410a02
  4109d3:	jmp    0x4109b1
  4109d5:	push   ss
  4109d6:	inc    esp
  4109d7:	jmp    0x410973
  4109d9:	pushf  
  4109da:	inc    ecx
  4109db:	or     cl,dh
  4109dd:	stos   BYTE PTR es:[edi],al
  4109de:	cwde   
  4109df:	fld    DWORD PTR [ebx-0x6b]
  4109e2:	pop    ebx
  4109e3:	(bad)  [eax]
  4109e5:	out    0x9a,eax
  4109e7:	outs   dx,DWORD PTR ds:[esi]
  4109e8:	data16 add al,0x51
  4109eb:	out    dx,al
  4109ec:	mov    ecx,0x737ecc60
  4109f1:	fsub   DWORD PTR [edx+0x6cff1a99]
  4109f7:	aam    0x8d
  4109f9:	arpl   WORD PTR [ecx+0x29],bx
  4109fc:	mov    cl,0x1e
  4109fe:	xchg   ebp,eax
  4109ff:	clc    
  410a00:	jle    0x410a6d
  410a02:	jno    0x4109bc
  410a04:	mov    dl,0x1c
  410a06:	mov    ds:0xe26b8d6,eax
  410a0b:	ins    DWORD PTR es:[edi],dx
  410a0c:	jo     0x4109f3
  410a0e:	push   ebx
  410a0f:	int    0x80
  410a11:	push   0xfffffff4
  410a13:	mov    ah,0xd6
  410a15:	adc    BYTE PTR [ecx+eax*4+0x73b5b655],al
  410a1c:	aaa    
  410a1d:	ss sub al,0x41
  410a21:	mov    bh,0x81
  410a23:	ja     0x410a88
  410a25:	jns    0x410a90
  410a27:	inc    esp
  410a28:	jne    0x410a52
  410a2a:	jae    0x410a30
  410a2c:	fldenv [ecx+0xfd8dac6]
  410a32:	xchg   ebx,eax
  410a33:	retf   
  410a34:	jge    0x410aa2
  410a36:	mov    al,0xd3
  410a38:	dec    eax
  410a39:	into   
  410a3a:	adc    eax,0x3aeafb4e
  410a3f:	add    eax,0x297064a2
  410a44:	adc    dl,BYTE PTR [edi]
  410a46:	ret    
  410a47:	dec    esp
  410a48:	or     eax,0x34a8b883
  410a4d:	sub    ah,BYTE PTR [ebx-0x47]
  410a50:	xor    WORD PTR [esi+0x359c737],bx
  410a57:	sub    BYTE PTR [edi+0x40],bh
  410a5a:	sbb    dh,BYTE PTR [ebp+ecx*1+0x3cbd03a]
  410a61:	push   esp
  410a62:	xlat   BYTE PTR ds:[ebx]
  410a63:	cmp    ebp,esp
  410a65:	sbb    eax,0x31b6a468
  410a6a:	xchg   sp,ax
  410a6c:	jp     0x410ad9
  410a6e:	and    al,0x0
  410a70:	mov    ch,BYTE PTR [eax]
  410a72:	nop
  410a73:	pop    ds
  410a74:	jnp    0x410a08
  410a76:	aas    
  410a77:	or     eax,DWORD PTR [edx+0x7e]
  410a7a:	or     DWORD PTR [eax+ebp*1],eax
  410a7d:	test   BYTE PTR [eax],bl
  410a7f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a80:	pop    edi
  410a81:	data16 jnp 0x410a7c
  410a84:	cmc    
  410a85:	cld    
  410a86:	xchg   esp,eax
  410a87:	sub    al,0x51
  410a89:	dec    ecx
  410a8a:	ds push edx
  410a8c:	inc    ecx
  410a8d:	loope  0x410a63
  410a8f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410a90:	arpl   WORD PTR [ebx],sp
  410a92:	cmp    ecx,DWORD PTR [esi+0x2f]
  410a95:	push   0x4951873a
  410a9a:	scas   eax,DWORD PTR es:[edi]
  410a9b:	sbb    al,0xdd
  410a9d:	hlt    
  410a9e:	xor    eax,0x584f842f
  410aa3:	shufps xmm6,XMMWORD PTR [ebx-0x44bc96fd],0x6f
  410aab:	fucomip st,st(2)
  410aad:	out    0x67,al
  410aaf:	dec    edx
  410ab0:	xor    edx,edx
  410ab2:	leave  
  410ab3:	mov    ecx,0x2e30c9af
  410ab8:	sbb    eax,0x29c9838a
  410abd:	jecxz  0x410ac6
  410abf:	and    al,0xa0
  410ac1:	mov    esi,0x4b820157
  410ac6:	cld    
  410ac7:	fmul   DWORD PTR [edx-0x62aa3943]
  410acd:	enter  0x6df,0x6c
  410ad1:	(bad)  
  410ad2:	fisttp WORD PTR [ebp+0x15]
  410ad5:	pop    ds
  410ad6:	pop    ecx
  410ad7:	lods   eax,DWORD PTR ds:[esi]
  410ad8:	or     edx,DWORD PTR [ebx+eiz*2-0x5b]
  410adc:	mov    edi,0x433b037d
  410ae1:	(bad)  
  410ae2:	stos   DWORD PTR es:[edi],eax
  410ae3:	add    DWORD PTR [edx+0x3c4e4074],ebx
  410ae9:	popf   
  410aea:	int    0xc4
  410aec:	sub    edi,edx
  410aee:	xchg   BYTE PTR [edx-0x6a],bh
  410af1:	scas   al,BYTE PTR es:[edi]
  410af2:	inc    ebp
  410af3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410af4:	(bad)  
  410af7:	dec    edi
  410af8:	pop    ss
  410af9:	pop    edx
  410afa:	fcmove st,st(2)
  410afc:	enter  0x471,0x43
  410b00:	sub    edi,DWORD PTR [ecx+0x6c]
  410b03:	adc    BYTE PTR [eax],al
  410b05:	cs jnp 0x410ad7
  410b08:	je     0x410b61
  410b0a:	sub    al,0x76
  410b0c:	ror    DWORD PTR [ebx-0x5],0xea
  410b10:	into   
  410b11:	jo     0x410b11
  410b13:	cmp    ch,BYTE PTR [edx]
  410b15:	(bad)  
  410b16:	jno    0x410ad0
  410b18:	mov    cl,0x5
  410b1a:	cs aad 0xcd
  410b1d:	setle  bh
  410b20:	cmp    al,0x10
  410b22:	mov    cl,0xb0
  410b24:	mov    es,WORD PTR [ebx+0x35]
  410b27:	call   0x96d3:0xd926d68e
  410b2e:	sbb    bl,0xfe
  410b31:	adc    ebp,eax
  410b33:	popa   
  410b34:	frstor [ecx+0x48493ca6]
  410b3a:	cmp    edi,DWORD PTR [esi]
  410b3c:	add    edx,ebx
  410b3e:	inc    eax
  410b3f:	xor    dh,BYTE PTR [ecx]
  410b41:	inc    edx
  410b42:	ja     0x410af5
  410b44:	cmp    bh,BYTE PTR [esp+edx*8-0x4]
  410b48:	push   edx
  410b49:	mov    edx,0xcbb07500
  410b4e:	aad    0x9f
  410b50:	aas    
  410b51:	aas    
  410b52:	dec    esi
  410b53:	mov    ds:0x4c525118,eax
  410b58:	xor    eax,0xa66b0df8
  410b5d:	mov    dl,0x26
  410b5f:	push   0x6f58d9
  410b64:	hlt    
  410b65:	pop    edi
  410b66:	leave  
  410b67:	(bad)  
  410b68:	(bad)  
  410b69:	push   esp
  410b6a:	rcr    ah,cl
  410b6c:	mov    esp,0xf96b61c3
  410b71:	xchg   DWORD PTR [edx+0x1b],esp
  410b74:	loope  0x410b87
  410b76:	cmp    dh,BYTE PTR [esi-0x185d408c]
  410b7c:	cmc    
  410b7d:	xchg   edi,eax
  410b7e:	test   al,0x1
  410b80:	je     0x410b72
  410b82:	push   ss
  410b83:	lds    ecx,FWORD PTR [ebp+0x2d]
  410b86:	push   ebx
  410b87:	add    DWORD PTR [edx-0x22],esi
  410b8a:	xchg   esp,eax
  410b8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b8c:	fisubr WORD PTR [ebp+0x2c]
  410b8f:	cmp    BYTE PTR [edx+ebx*1+0x19b5f96d],dl
  410b96:	inc    esp
  410b97:	(bad)  
  410b98:	ror    cl,cl
  410b9a:	stc    
  410b9b:	mov    DWORD PTR [edx+0x6b26fee2],edx
  410ba1:	and    ebx,eax
  410ba3:	fadd   QWORD PTR [ecx+eiz*1+0x2]
  410ba7:	mov    esp,0x9c177d77
  410bac:	sub    DWORD PTR [eax+0x6d],ebx
  410baf:	dec    esi
  410bb0:	jp     0x410bba
  410bb2:	sub    eax,0x4da0dee1
  410bb7:	dec    eax
  410bb8:	and    edx,DWORD PTR [ecx-0x6f162465]
  410bbe:	sub    al,0x66
  410bc0:	push   ebx
  410bc1:	push   ebx
  410bc2:	imul   ebx,DWORD PTR [ebx+0x16e5d026],0xff6c9a39
  410bcc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bcd:	stos   BYTE PTR es:[edi],al
  410bce:	fist   DWORD PTR [edx]
  410bd0:	leave  
  410bd1:	sbb    al,dl
  410bd3:	fidivr WORD PTR [eax+0x75]
  410bd6:	and    ecx,esi
  410bd8:	test   BYTE PTR [eax],cl
  410bda:	jge    0x410b82
  410bdc:	test   DWORD PTR [edi+0x7ea4bf1],ecx
  410be2:	dec    ebx
  410be3:	sub    al,BYTE PTR [ebp+0x22]
  410be6:	daa    
  410be7:	out    0xee,al
  410be9:	mov    ds:0x1e799e59,al
  410bee:	fstp   TBYTE PTR [eax-0x3890f9f3]
  410bf4:	mov    dl,0x7e
  410bf6:	adc    al,0xdb
  410bf8:	(bad)  
  410bf9:	or     eax,0x927f6b92
  410bfe:	xchg   ebx,eax
  410bff:	js     0x410bd1
  410c01:	or     cl,bl
  410c03:	dec    eax
  410c04:	ins    BYTE PTR es:[edi],dx
  410c05:	and    al,0xee
  410c07:	(bad)  
  410c08:	dec    esi
  410c09:	pop    es
  410c0a:	jg     0x410c5d
  410c0c:	push   esp
  410c0d:	mov    eax,ds:0xdacfda8b
  410c12:	mov    bh,0xa1
  410c14:	ins    BYTE PTR es:[edi],dx
  410c15:	sub    eax,0x754544d3
  410c1a:	mov    ch,0xeb
  410c1c:	push   ss
  410c1d:	xchg   BYTE PTR [eax+ebx*8],ch
  410c20:	add    ah,BYTE PTR [esp+ebp*2]
  410c23:	sbb    edi,DWORD PTR [eax+0x7a250197]
  410c29:	pop    esp
  410c2a:	push   es
  410c2b:	shl    ebx,cl
  410c2d:	popa   
  410c2e:	adc    eax,0x6dd1b1b2
  410c33:	push   cs
  410c34:	mov    bh,0x62
  410c36:	mov    al,0xd7
  410c38:	push   ecx
  410c39:	call   0x3442:0x6d4189e4
  410c40:	mov    ebp,0x15d09d49
  410c45:	pop    edi
  410c46:	movhps xmm2,QWORD PTR [ecx]
  410c49:	das    
  410c4a:	cmc    
  410c4b:	or     cl,ah
  410c4d:	or     BYTE PTR [esi+0x9ec329b],cl
  410c53:	call   DWORD PTR [esi-0x13]
  410c56:	xchg   ebp,eax
  410c57:	jne    0x410c55
  410c59:	xchg   edi,eax
  410c5a:	jmp    0x8410:0xc6523a9a
  410c61:	push   ebp
  410c62:	(bad)  
  410c63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c64:	inc    edi
  410c65:	fidiv  WORD PTR [edx-0x67]
  410c68:	xchg   ebx,eax
  410c69:	pop    esp
  410c6a:	inc    edi
  410c6b:	or     eax,0xc0e70a93
  410c70:	xchg   esp,eax
  410c71:	ja     0x46894fdb
  410c77:	xor    eax,0x88095afb
  410c7c:	ror    BYTE PTR [esi-0x8667544],cl
  410c82:	icebp  
  410c83:	cmp    esp,0xffffff93
  410c86:	or     eax,0xffffffaf
  410c89:	jecxz  0x410c32
  410c8b:	adc    DWORD PTR [esi+0x363aa805],ebp
  410c91:	push   es
  410c92:	sub    esp,edx
  410c94:	xchg   ebp,eax
  410c95:	push   cs
  410c96:	sbb    BYTE PTR [edi],ah
  410c98:	(bad)  
  410c99:	jecxz  0x410c26
  410c9b:	dec    edi
  410c9c:	test   eax,0x5c3ba3fc
  410ca1:	in     eax,0xfb
  410ca3:	stc    
  410ca4:	rcl    edi,1
  410ca6:	jmp    0x3e08:0x50eb6887
  410cad:	or     dl,BYTE PTR [ebx-0x53]
  410cb0:	fsubr  QWORD PTR [ecx-0x3a]
  410cb3:	adc    eax,0xbae3057c
  410cb8:	scas   al,BYTE PTR es:[edi]
  410cb9:	push   ebp
  410cba:	loope  0x410cbe
  410cbc:	jno    0x410ccc
  410cbe:	pop    ecx
  410cbf:	mov    gs,WORD PTR [ebp-0x14a03070]
  410cc5:	call   0x259c:0x8fe67cc9
  410ccc:	mov    ebx,0x9329ceb7
  410cd1:	pop    ebx
  410cd2:	scas   al,BYTE PTR es:[edi]
  410cd3:	sahf   
  410cd4:	fisttp QWORD PTR [esp+ecx*8-0x26]
  410cd8:	sbb    al,0x7a
  410cda:	mov    edx,DWORD PTR [ebx]
  410cdc:	fwait
  410cdd:	cmp    eax,0xe85e96e3
  410ce2:	mov    ds:0xe457e82b,al
  410ce8:	or     bh,BYTE PTR [ebx]
  410cea:	pop    es
  410ceb:	push   edx
  410cec:	mov    bh,BYTE PTR [esi]
  410cee:	mov    ebp,0xbb955baa
  410cf3:	das    
  410cf4:	or     DWORD PTR [ebp+0x3e98ee9a],0x49
  410cfb:	xlat   BYTE PTR ds:[ebx]
  410cfc:	jno    0x410cb0
  410cfe:	ja     0x410cd5
  410d00:	pop    ebp
  410d01:	arpl   WORD PTR [edx-0x5cf950c6],bx
  410d07:	rcl    BYTE PTR [edx],0x6c
  410d0a:	push   cs
  410d0b:	pop    es
  410d0c:	add    eax,0xdeb4655d
  410d11:	fldenv [edx+0x5ff22b82]
  410d17:	(bad)  
  410d19:	xchg   edx,eax
  410d1a:	xlat   BYTE PTR ds:[ebx]
  410d1b:	rcr    DWORD PTR [ebp-0x55],1
  410d1e:	test   al,0xa7
  410d20:	lea    edx,[ecx-0x34]
  410d23:	adc    eax,0x557308d5
  410d28:	hlt    
  410d29:	in     al,dx
  410d2a:	imul   ebp,DWORD PTR [esp+ebp*8],0x748e982b
  410d31:	int    0xba
  410d33:	rol    ah,1
  410d35:	sub    BYTE PTR [edx+ebp*1-0x4b],ah
  410d39:	pop    edx
  410d3a:	cmp    eax,DWORD PTR [ebx+eiz*2-0x65]
  410d3e:	cmp    eax,0xae898a2c
  410d43:	xchg   ecx,eax
  410d44:	leave  
  410d45:	pop    ebx
  410d46:	cdq    
  410d47:	fstp   TBYTE PTR [ecx]
  410d49:	loopne 0x410cd5
  410d4b:	fsub   DWORD PTR [edi-0x28]
  410d4e:	pop    eax
  410d4f:	push   edx
  410d50:	jmp    0x78e7:0x25f8f745
  410d57:	fst    QWORD PTR ds:0xe65e6e4e
  410d5d:	jo     0x410d8d
  410d5f:	dec    eax
  410d60:	mov    cl,0xaa
  410d62:	sub    al,0x49
  410d64:	push   0x65
  410d66:	gs cli 
  410d68:	push   ecx
  410d69:	mov    ebp,0xb182ee2c
  410d6e:	mov    ebx,0x86ac33e4
  410d73:	pushf  
  410d74:	arpl   WORD PTR [ebx],ax
  410d76:	jecxz  0x410d0c
  410d78:	mov    ecx,0x809f1787
  410d7d:	(bad)  
  410d7e:	je     0x410d0c
  410d80:	pop    esp
  410d81:	ret    
  410d82:	es mov cl,0xc9
  410d85:	pop    ds
  410d86:	jb     0x410d39
  410d88:	add    BYTE PTR [eax-0x5091027],0xc6
  410d8f:	into   
  410d90:	jb     0x410d41
  410d92:	jge    0x410dc4
  410d94:	aas    
  410d95:	ficomp DWORD PTR [eax]
  410d97:	sti    
  410d98:	dec    esp
  410d99:	jmp    0x9a0e:0xf30a8d0f
  410da0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410da1:	and    eax,ebp
  410da3:	ror    DWORD PTR [ecx-0x45],0xb9
  410da7:	mov    al,bh
  410da9:	pop    edx
  410daa:	mov    ds:0x4506db4c,eax
  410daf:	in     al,0x5c
  410db1:	xor    eax,0x14538c3a
  410db6:	adc    esi,DWORD PTR [edx+0x60040e80]
  410dbc:	cld    
  410dbd:	enter  0xc3f9,0xc1
  410dc1:	imul   ecx,DWORD PTR [esi-0x215c2c34],0x7
  410dc8:	xchg   esp,eax
  410dc9:	fs jmp 0x4e680f9d
  410dcf:	ds enter 0xf98b,0x3b
  410dd4:	mov    ch,0x77
  410dd6:	and    al,0x9f
  410dd8:	mov    edi,eax
  410dda:	sbb    DWORD PTR ds:0x9282e743,edx
  410de0:	shr    BYTE PTR [ebp+0xfd4bf5],cl
  410de6:	jb     0x410d88
  410de8:	and    edi,DWORD PTR [esi]
  410dea:	push   cs
  410deb:	shl    BYTE PTR [edx+0x5b],1
  410dee:	jne    0x410daf
  410df0:	xlat   BYTE PTR ds:[ebx]
  410df1:	lds    esp,FWORD PTR [edi+0xbac4b9b]
  410df7:	shl    DWORD PTR [ebx],0x4b
  410dfa:	loope  0x410df8
  410dfc:	(bad)  
  410dfd:	pop    ecx
  410dfe:	mov    edx,0x91088381
  410e03:	ficomp DWORD PTR [edx-0x5ed0f541]
  410e09:	inc    eax
  410e0a:	sbb    ch,al
  410e0c:	xor    DWORD PTR [edi+0x533cc7ee],edi
  410e12:	sbb    edi,DWORD PTR ds:[edx]
  410e15:	shl    BYTE PTR [ecx-0x6af8029b],cl
  410e1b:	sahf   
  410e1c:	clc    
  410e1d:	repz clc 
  410e1f:	inc    ebp
  410e20:	jle    0x410e92
  410e22:	lods   al,BYTE PTR ds:[esi]
  410e23:	inc    ecx
  410e24:	jp     0x410e0d
  410e26:	in     al,0xbf
  410e28:	sbb    eax,0xf46fbfa6
  410e2d:	dec    ebx
  410e2e:	repz xor DWORD PTR [esi-0x12],ebp
  410e32:	add    eax,0xb9d259a4
  410e37:	inc    eax
  410e38:	imul   ecx,DWORD PTR [ebx-0x4abb1317],0x349f7f81
  410e42:	mov    eax,0xd4e063ea
  410e47:	stc    
  410e48:	shr    DWORD PTR [esi+0x7a],1
  410e4b:	stos   DWORD PTR es:[edi],eax
  410e4c:	inc    ebp
  410e4d:	push   ds
  410e4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410e4f:	jb     0x410ec9
  410e51:	sub    esp,DWORD PTR [ecx]
  410e53:	bswap  edi
  410e55:	dec    edx
  410e56:	dec    esp
  410e57:	mov    cl,BYTE PTR [ecx-0x75a0d79a]
  410e5d:	fsub   QWORD PTR [eax+0x147cb0f6]
  410e63:	xchg   esi,eax
  410e64:	hlt    
  410e65:	push   edx
  410e66:	mov    eax,ebp
  410e68:	test   DWORD PTR [eax-0x39],ecx
  410e6b:	sahf   
  410e6c:	jnp    0x410e42
  410e6e:	pop    ecx
  410e6f:	cld    
  410e70:	cmp    DWORD PTR [esi],0xffffffce
  410e73:	fimul  WORD PTR [eax-0xae9a674]
  410e79:	mov    ecx,0x47964691
  410e7e:	dec    edx
  410e7f:	outs   dx,DWORD PTR ds:[esi]
  410e80:	xchg   DWORD PTR [ecx+edx*2-0x64df4869],edi
  410e87:	mov    edi,0xfff98ddb
  410e8c:	or     bh,bl
  410e8e:	adc    BYTE PTR [edi+ebx*1],ah
  410e91:	adc    al,0x7c
  410e93:	and    esi,ecx
  410e95:	cmp    esp,edi
  410e97:	(bad)  
  410e98:	shr    DWORD PTR es:[ebx+0x47],cl
  410e9c:	in     eax,0xe8
  410e9e:	sbb    edi,eax
  410ea0:	retf   
  410ea1:	mov    dh,0x99
  410ea3:	ja     0x410e56
  410ea5:	mov    ch,0x8a
  410ea7:	or     BYTE PTR [edx],cl
  410ea9:	xchg   esi,eax
  410eaa:	pop    ebx
  410eab:	shrd   DWORD PTR [ebp+0x2576ed77],esi,0x70
  410eb3:	clc    
  410eb4:	mov    cl,0xe8
  410eb6:	inc    esp
  410eb7:	adc    ch,dl
  410eb9:	jge    0x410f06
  410ebb:	pop    edx
  410ebc:	inc    ecx
  410ebd:	pop    edi
  410ebe:	add    BYTE PTR [esi-0x3],0x12
  410ec2:	imul   esp,edi,0x22
  410ec5:	mov    esp,0x54fdbf25
  410eca:	add    ah,dh
  410ecc:	loopne 0x410ece
  410ece:	sub    dh,bl
  410ed0:	add    al,0xc8
  410ed2:	retf   
  410ed3:	push   edx
  410ed4:	and    al,0x2d
  410ed6:	jne    0x410ef8
  410ed8:	jge    0x410f15
  410eda:	(bad)  
  410edb:	jnp    0x410f35
  410edd:	xor    edi,DWORD PTR [edx-0x16]
  410ee0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ee1:	or     BYTE PTR [ebx],ch
  410ee3:	sub    esi,DWORD PTR [esi-0x103d59ca]
  410ee9:	jno    0x410eb8
  410eeb:	cmp    dh,BYTE PTR [ebp-0x69341d20]
  410ef1:	pushf  
  410ef2:	mov    eax,0x3ec9e3cc
  410ef7:	enter  0x13c1,0x54
  410efb:	jmp    0x9ee8:0xdc6e36f8
  410f02:	xor    esp,DWORD PTR [edi-0x490027fd]
  410f08:	or     al,0xf8
  410f0a:	adc    BYTE PTR [esi],0x94
  410f0d:	(bad)  
  410f0e:	imul   ebx,DWORD PTR [ecx+0x16a13565],0xc7ad1cf9
  410f18:	call   0x708d8312
  410f1d:	and    DWORD PTR [esi],esi
  410f1f:	fisttp WORD PTR [esi]
  410f21:	pushf  
  410f22:	push   edi
  410f23:	push   ecx
  410f24:	mov    ebp,0x32dfccf9
  410f29:	jne    0x410eaf
  410f2b:	bound  ecx,QWORD PTR [esi+0x728b6990]
  410f31:	js     0x410f9b
  410f33:	sbb    DWORD PTR [ecx-0x1a],esp
  410f36:	push   ebp
  410f37:	test   eax,ebx
  410f39:	mov    ah,0x96
  410f3b:	mov    al,0xf0
  410f3d:	sub    edx,DWORD PTR [edx-0x70]
  410f40:	dec    ebp
  410f41:	fadd   QWORD PTR [edx+0x355f8ab7]
  410f47:	pop    eax
  410f48:	push   edx
  410f49:	mov    ecx,0x26a50643
  410f4e:	stos   DWORD PTR es:[edi],eax
  410f4f:	imul   DWORD PTR ds:0xf4980f4
  410f55:	mov    eax,esi
  410f57:	fcomp  DWORD PTR [ebp+0x41]
  410f5a:	fistp  WORD PTR [ebx-0x5a33c66]
  410f60:	xchg   ecx,eax
  410f61:	inc    ecx
  410f62:	xchg   ebp,eax
  410f63:	xchg   ecx,eax
  410f64:	daa    
  410f65:	adc    al,0xe
  410f67:	imul   esp,edx,0x24
  410f6a:	lds    ecx,FWORD PTR ds:[esi-0x35]
  410f6e:	xchg   BYTE PTR [eax-0x12789bb1],cl
  410f74:	outs   dx,DWORD PTR ds:[esi]
  410f75:	cmp    BYTE PTR [ebp+0xa],0x9e
  410f79:	(bad)  
  410f7a:	jmp    0xfc47:0x43901755
  410f81:	js     0x411002
  410f83:	mov    edi,ebp
  410f85:	adc    eax,0x79aac394
  410f8a:	jp     0x410f3a
  410f8c:	inc    edi
  410f8d:	lock leave 
  410f8f:	cmc    
  410f90:	adc    DWORD PTR [ebx-0x7efe25a8],ebx
  410f96:	aad    0x2c
  410f98:	test   DWORD PTR [ecx+edi*1],ecx
  410f9b:	cmp    eax,ebx
  410f9d:	jp     0x411017
  410f9f:	pop    esp
  410fa0:	into   
  410fa1:	xchg   DWORD PTR [eax+0x24],ebp
  410fa4:	inc    esp
  410fa5:	add    DWORD PTR [eax-0x6e086c9f],0xffffffe9
  410fac:	les    edi,FWORD PTR [edi+0x4]
  410faf:	bound  ebx,QWORD PTR [eax+0x69]
  410fb2:	rol    BYTE PTR [ebx-0x25cea25d],0xb5
  410fb9:	xchg   ecx,eax
  410fba:	lds    eax,FWORD PTR [esp+edx*2-0x1564ff57]
  410fc1:	into   
  410fc2:	(bad)  
  410fc3:	fstp   QWORD PTR [ecx-0x38]
  410fc6:	fdivr  DWORD PTR [edx+0x72516afd]
  410fcc:	iret   
  410fcd:	and    al,0x1d
  410fcf:	xor    bl,BYTE PTR [ebp+0x1e979419]
  410fd5:	jl     0x410f95
  410fd7:	ja     0x410fd7
  410fd9:	jbe    0x410f90
  410fdb:	xor    BYTE PTR ds:0xf9be2b0,bh
  410fe1:	xchg   esp,eax
  410fe2:	and    ebp,esi
  410fe4:	mov    esp,0xaf07d5da
  410fe9:	and    ch,al
  410feb:	jmp    0x7a8f041f
  410ff0:	clc    
  410ff1:	ins    BYTE PTR es:[edi],dx
  410ff2:	jecxz  0x410f78
  410ff4:	lds    eax,FWORD PTR [edx+0x40]
  410ff7:	mov    esp,0xf97d33cf
  410ffc:	loope  0x410fae
  410ffe:	loope  0x410fe2
  411000:	int    0x48
  411002:	mov    ebp,0xf59f8e08
  411007:	ins    DWORD PTR es:[edi],dx
  411008:	and    DWORD PTR [esi],eax
  41100a:	dec    esi
  41100b:	rcr    eax,1
  41100d:	inc    ecx
  41100e:	xor    ebp,ebp
  411010:	xor    al,0xfd
  411012:	in     al,0xb5
  411014:	dec    esi
  411015:	clc    
  411016:	xchg   esp,eax
  411017:	sbb    BYTE PTR [ecx+0xa],cl
  41101a:	jae    0x410fba
  41101c:	xchg   BYTE PTR [ebx+ecx*2-0x314ccfa5],bh
  411023:	dec    ebx
  411024:	inc    edx
  411025:	add    BYTE PTR [ebp+0x7a7ecfe6],dl
  41102b:	shl    BYTE PTR [esp+edi*2-0x49460e1f],0x79
  411033:	addr16 mov esp,0xbb4a1af5
  411039:	push   ebx
  41103a:	jae    0x4110aa
  41103c:	dec    edi
  41103d:	out    dx,al
  41103e:	and    al,0x78
  411040:	jns    0x4110ac
  411042:	xchg   ebx,eax
  411043:	fst    QWORD PTR [eax-0x4bc846e3]
  411049:	cdq    
  41104a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41104b:	mov    ah,0x7
  41104d:	rcr    ebp,cl
  41104f:	repz push DWORD PTR [esi+0x42]
  411053:	xchg   esi,eax
  411054:	arpl   WORD PTR [eax-0x16],sp
  411057:	loope  0x4110be
  411059:	ret    
  41105a:	jmp    DWORD PTR [ebx-0xd5ebf6e]
  411060:	scas   al,BYTE PTR es:[edi]
  411061:	mov    cl,0x12
  411063:	jno    0x4110bc
  411065:	or     DWORD PTR [ebp-0xf],ecx
  411068:	loop   0x411062
  41106a:	loop   0x411048
  41106c:	in     eax,dx
  41106d:	or     edi,DWORD PTR [ecx]
  41106f:	(bad)  
  411070:	pop    esp
  411071:	jecxz  0x411038
  411073:	(bad)  
  411074:	mov    ecx,0x4f708d63
  411079:	call   0x6f2a:0x90ef000d
  411080:	xchg   BYTE PTR [eax-0x4698d47e],dl
  411086:	retf   0x73ee
  411089:	adc    BYTE PTR [edx+0x28f46e69],dh
  41108f:	js     0x4110ca
  411091:	out    0x72,al
  411093:	outs   dx,DWORD PTR ds:[esi]
  411094:	jo     0x41106e
  411096:	jbe    0x41106d
  411098:	in     eax,dx
  411099:	xchg   DWORD PTR [ebp-0x37],eax
  41109c:	lock fs xchg ecx,esi
  4110a0:	sbb    al,0xdb
  4110a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110a3:	loop   0x41104d
  4110a5:	add    dh,BYTE PTR [ecx]
  4110a7:	jge    0x411067
  4110a9:	cli    
  4110aa:	call   0xb2eb:0x5c663206
  4110b1:	enter  0x766b,0xd
  4110b5:	stos   DWORD PTR es:[edi],eax
  4110b6:	pop    es
  4110b7:	xchg   edi,eax
  4110b8:	ret    
  4110b9:	mov    ch,BYTE PTR [esi-0x30]
  4110bc:	xchg   edi,eax
  4110bd:	mov    cl,0x37
  4110bf:	adc    eax,0xd8a9cab8
  4110c4:	adc    al,dh
  4110c6:	jg     0x4110bf
  4110c8:	(bad)  
  4110c9:	or     bh,BYTE PTR ds:0xa2fc7e3b
  4110cf:	adc    DWORD PTR [ebx+0x2b],ecx
  4110d2:	jno    0x41109f
  4110d4:	pop    ebp
  4110d5:	imul   ebp,DWORD PTR [esi-0x246d1f2],0x4fae1792
  4110df:	sub    al,0x8d
  4110e1:	stc    
  4110e2:	mov    ebp,0x161899d7
  4110e7:	retf   
  4110e8:	sti    
  4110e9:	int    0x7c
  4110eb:	fidiv  DWORD PTR [eax+0x31]
  4110ee:	retw   0x7f6
  4110f2:	sbb    bh,BYTE PTR [ebp+0x46]
  4110f5:	and    DWORD PTR [edx],ecx
  4110f7:	jns    0x4110e6
  4110f9:	push   0x9f880986
  4110fe:	aaa    
  4110ff:	mov    ch,0xef
  411101:	imul   ecx,DWORD PTR [edi],0x5baa90fd
  411107:	cmp    eax,0xc907aab
  41110c:	pushf  
  41110d:	cmp    eax,0x4a326884
  411112:	mov    esp,0x4ab417d5
  411117:	and    al,0xd6
  411119:	psllq  mm5,mm6
  41111c:	jns    0x41115a
  41111e:	call   DWORD PTR [edx-0x1ab7cfce]
  411124:	mov    bl,0x50
  411126:	dec    edx
  411127:	sub    dl,BYTE PTR [ebx-0x561016aa]
  41112d:	into   
  41112e:	or     esi,DWORD PTR [ebx+0x3b02bddb]
  411134:	test   BYTE PTR [esi],ch
  411136:	inc    ebp
  411137:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411138:	pop    edx
  411139:	lds    ecx,FWORD PTR [edi+0x2f]
  41113c:	push   ecx
  41113d:	push   ds
  41113e:	stos   BYTE PTR es:[edi],al
  41113f:	or     al,0x11
  411141:	stos   BYTE PTR es:[edi],al
  411142:	mov    eax,ds:0xf4a57fa9
  411147:	test   al,0x53
  411149:	mov    eax,0xe8bb558b
  41114e:	imul   esp,esi,0xffffffc5
  411151:	fbstp  TBYTE PTR [edx]
  411153:	cdq    
  411154:	add    al,0xa2
  411156:	lds    eax,FWORD PTR [ebx]
  411158:	sahf   
  411159:	adc    edx,edx
  41115b:	es jge 0x411193
  41115e:	push   0x445a7a96
  411163:	mov    al,0x4d
  411165:	js     0x41118d
  411167:	(bad)  
  411168:	rol    BYTE PTR [edi],cl
  41116a:	jmp    0xf59b:0xb83d500e
  411171:	shl    DWORD PTR [edi-0x284a840c],0x92
  411178:	pop    ds
  411179:	es jb  0x41116d
  41117c:	or     esi,DWORD PTR [esi+0x4442873b]
  411182:	adc    ah,BYTE PTR [esi]
  411184:	test   eax,0x6df9c2ad
  411189:	pop    ds
  41118a:	jns    0x4111bd
  41118c:	scas   al,BYTE PTR es:[edi]
  41118d:	adc    al,0x9e
  41118f:	jmp    DWORD PTR [edi+eiz*8]
  411192:	inc    edi
  411193:	xor    ebx,DWORD PTR [ebx+0x3e86008b]
  411199:	sub    DWORD PTR [ebp+0x7],eax
  41119c:	adc    ch,bh
  41119e:	dec    eax
  41119f:	aaa    
  4111a0:	and    eax,0xd9f70ca9
  4111a5:	sub    ebx,ebx
  4111a7:	clc    
  4111a8:	xchg   DWORD PTR [edi-0x27],edi
  4111ab:	fwait
  4111ac:	dec    esp
  4111ad:	imul   esp,DWORD PTR [edx-0x5d57325c],0x30
  4111b4:	in     al,0xdf
  4111b6:	mov    edx,DWORD PTR [ebx]
  4111b8:	leave  
  4111b9:	int    0x9c
  4111bb:	mov    bh,0xab
  4111bd:	mov    cl,0x1e
  4111bf:	shl    DWORD PTR [ecx-0x76],0x48
  4111c3:	mov    ?,ebx
  4111c5:	cmp    eax,0xeae74b8c
  4111ca:	mov    bl,0x52
  4111cc:	inc    edx
  4111cd:	and    al,BYTE PTR [ebp-0x70]
  4111d0:	sbb    bl,BYTE PTR [ebx+0x3121333]
  4111d6:	into   
  4111d7:	sub    al,0x3a
  4111d9:	pop    edi
  4111da:	xor    eax,0xb29fad9e
  4111df:	nop
  4111e0:	retf   
  4111e1:	pop    ss
  4111e2:	jle    0x4111b8
  4111e4:	and    ebx,edx
  4111e6:	dec    ecx
  4111e7:	ss push ebp
  4111e9:	mov    ecx,0x2c3b3ed4
  4111ee:	das    
  4111ef:	arpl   bp,sp
  4111f1:	or     al,0x9
  4111f3:	and    ah,BYTE PTR [esi+0x4c]
  4111f6:	xchg   DWORD PTR [eax+eiz*1],eax
  4111f9:	gs pushf 
  4111fb:	iret   
  4111fc:	dec    ecx
  4111fd:	pop    ebx
  4111fe:	leave  
  4111ff:	cmp    edi,esp
  411201:	dec    edx
  411202:	cdq    
  411203:	jp     0x411222
  411205:	jnp    0x41125b
  411207:	cmp    al,0x64
  411209:	add    ebp,edi
  41120b:	call   0xdd4:0xb91180bb
  411212:	mov    ah,0x1e
  411214:	sub    eax,0x9bc71ee1
  411219:	stc    
  41121a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41121b:	adc    eax,0x16a8e832
  411220:	and    DWORD PTR [edi+eax*4],ecx
  411223:	dec    edi
  411224:	cmc    
  411225:	neg    BYTE PTR [esi]
  411227:	repz mov edx,0x768020dd
  41122d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41122e:	xchg   BYTE PTR [esi+0x3775bb38],bl
  411234:	pop    ecx
  411235:	dec    ebx
  411236:	mov    ebx,0x6fa40233
  41123b:	pop    ebp
  41123c:	mov    ebx,0xf5c1b92a
  411241:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411242:	ror    DWORD PTR [ecx+ecx*8-0x4a],0x0
  411247:	popa   
  411248:	dec    ebp
  411249:	mov    ah,dl
  41124b:	ins    BYTE PTR es:[edi],dx
  41124c:	jbe    0x4111e8
  41124e:	xchg   BYTE PTR [esi],dl
  411250:	adc    esi,esp
  411252:	shl    BYTE PTR gs:[ecx+eiz*8],1
  411256:	jne    0x41129f
  411258:	inc    edx
  411259:	jmp    0x54148d0c
  41125e:	sahf   
  41125f:	cmp    BYTE PTR [edx+edi*1+0x4de2142],al
  411266:	sahf   
  411267:	dec    ebp
  411268:	ror    DWORD PTR [esi],cl
  41126a:	jg     0x411228
  41126c:	popa   
  41126d:	(bad)  
  41126e:	cmp    BYTE PTR [ebp+0x18e11762],dh
  411274:	lds    esi,FWORD PTR [eax]
  411276:	dec    esp
  411277:	mov    esi,0xd9027810
  41127c:	punpckldq mm0,DWORD PTR ds:0x248359f1
  411283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411285:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411286:	loop   0x411220
  411288:	sub    eax,0x89fe09ca
  41128d:	pop    ebx
  41128e:	push   ebp
  41128f:	mov    ch,0x5e
  411291:	xor    ebp,ecx
  411293:	lods   eax,DWORD PTR ds:[esi]
  411294:	mov    si,0x28fb
  411298:	cdq    
  411299:	mov    edi,0x8dfe1c00
  41129e:	lods   al,BYTE PTR ds:[esi]
  41129f:	sbb    eax,0x88a3a53d
  4112a4:	popa   
  4112a5:	mov    es,WORD PTR [ecx]
  4112a7:	mov    ecx,0xb2e8b263
  4112ac:	mov    ds:0xfa3ebfe,al
  4112b1:	fs pop eax
  4112b3:	mov    al,ds:0xa13ca6e
  4112b8:	dec    ecx
  4112b9:	sbb    bh,BYTE PTR [edi]
  4112bb:	(bad)  
  4112bc:	sbb    esp,DWORD PTR [ebp+0x50eabc2c]
  4112c2:	cmp    DWORD PTR [esi+0x13],eax
  4112c5:	aaa    
  4112c6:	xchg   BYTE PTR [ecx+0xc],bh
  4112c9:	nop
  4112ca:	in     eax,dx
  4112cb:	out    dx,al
  4112cc:	outs   dx,BYTE PTR ds:[esi]
  4112cd:	adc    ah,BYTE PTR [ebp-0x6c]
  4112d0:	adc    al,0xd3
  4112d2:	push   ss
  4112d3:	pop    edx
  4112d4:	push   esp
  4112d5:	mov    ecx,DWORD PTR [ebp+0x3c]
  4112d8:	cli    
  4112d9:	xor    edi,DWORD PTR [ebp-0x5e1b9d39]
  4112df:	adc    BYTE PTR [eax],al
  4112e1:	jle    0x41126e
  4112e3:	ja     0x4112e0
  4112e5:	jg     0x411325
  4112e7:	loop   0x411306
  4112e9:	call   ebp
  4112eb:	dec    esi
  4112ec:	inc    esp
  4112ed:	xchg   DWORD PTR [ecx+ebx*2],ebp
  4112f0:	jne    0x41127f
  4112f2:	pop    esp
  4112f3:	cmp    BYTE PTR [edi],bl
  4112f5:	cmp    al,0x5f
  4112f7:	das    
  4112f8:	cmp    al,0xd6
  4112fa:	mov    dh,0x3d
  4112fc:	aam    0xb5
  4112fe:	ins    BYTE PTR es:[edi],dx
  4112ff:	das    
  411300:	dec    ebx
  411301:	out    dx,al
  411302:	fidivr DWORD PTR [ebx]
  411304:	retf   0xd3c3
  411307:	(bad)  [edi-0x77c22b82]
  41130d:	fistp  WORD PTR [eax+0x71cd1df3]
  411313:	push   ebp
  411314:	pop    ecx
  411315:	pop    ecx
  411316:	repnz hlt 
  411318:	sbb    cl,ah
  41131a:	fisttp WORD PTR [edi+0x77]
  41131d:	xor    dh,BYTE PTR [ecx+esi*4]
  411320:	fsubr  QWORD PTR [edx-0x4d45edc3]
  411326:	jno    0x4112d7
  411328:	xchg   edi,eax
  411329:	sar    BYTE PTR [esi],1
  41132b:	(bad)  
  41132c:	cld    
  41132d:	add    DWORD PTR [ecx+0x52],edx
  411330:	jo     0x4112ca
  411332:	mov    BYTE PTR [edx],0x84
  411335:	pop    esi
  411336:	aad    0xcd
  411338:	(bad)  
  411339:	sbb    ah,dl
  41133b:	in     eax,dx
  41133c:	mov    ecx,0x9c1e2793
  411341:	inc    ebp
  411342:	jge    0x41131d
  411344:	(bad)  [eax]
  411346:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411347:	mov    edi,0x541533e4
  41134c:	xchg   edx,eax
  41134d:	push   ecx
  41134e:	add    ch,BYTE PTR [esi]
  411350:	mov    eax,ds:0x719bb1e7
  411355:	mov    ecx,0x20369d5b
  41135a:	ret    
  41135b:	cmp    eax,0x204615df
  411360:	aad    0x4a
  411362:	inc    edx
  411363:	(bad)  
  411364:	repz dec ecx
  411366:	xchg   edi,eax
  411367:	leave  
  411368:	pop    edi
  411369:	add    DWORD PTR gs:[edi+0xd],esp
  41136d:	(bad)  
  41136e:	rol    DWORD PTR [ebx+0x7d],1
  411371:	sbb    al,0xfd
  411373:	sbb    eax,0x81fbc6db
  411378:	ins    DWORD PTR es:[edi],dx
  411379:	fadd   QWORD PTR [ebp+0x2b978bc5]
  41137f:	inc    edi
  411380:	lea    edx,[edx-0x79]
  411383:	jmp    0x1b2d3196
  411388:	dec    esp
  411389:	sbb    al,BYTE PTR [ecx]
  41138b:	bound  esp,QWORD PTR [edx+0x4bb60f90]
  411391:	cmp    al,BYTE PTR [edi]
  411393:	xchg   ecx,eax
  411394:	jg     0x411351
  411396:	js     0x4113dc
  411398:	mov    dh,0x27
  41139a:	mov    WORD PTR ds:0xfaff8e06,?
  4113a0:	std    
  4113a1:	adc    al,0x51
  4113a3:	jmp    0x4113fd
  4113a5:	call   0x7fbc2b48
  4113aa:	mov    edx,0x17f87eb2
  4113af:	and    esi,DWORD PTR [ecx-0x6b9459b]
  4113b5:	cmp    al,BYTE PTR [edi-0x6235f5d1]
  4113bb:	mov    esp,DWORD PTR [ebx+0x5e3ce589]
  4113c1:	into   
  4113c2:	cmp    BYTE PTR [ecx+0x52],ch
  4113c5:	xchg   ecx,eax
  4113c6:	xchg   ebp,eax
  4113c7:	pop    esi
  4113c8:	push   esp
  4113ca:	mov    esi,0xe4f4b92b
  4113cf:	outs   dx,BYTE PTR ds:[esi]
  4113d0:	jns    0x411424
  4113d2:	jae    0x411432
  4113d4:	je     0x4113d8
  4113d6:	call   0x739c:0x80d227de
  4113dd:	lea    ebx,[edx-0x6457d213]
  4113e3:	inc    ebx
  4113e4:	pop    ds
  4113e5:	jnp    0x4113bb
  4113e7:	paddb  mm6,QWORD PTR [esi+0x5e]
  4113eb:	and    edi,DWORD PTR [edx-0x7f]
  4113ee:	(bad)  
  4113f0:	inc    edi
  4113f1:	pop    esi
  4113f2:	out    dx,eax
  4113f3:	pop    eax
  4113f4:	mov    eax,ds:0x59d54edf
  4113f9:	sti    
  4113fa:	mov    bl,0x14
  4113fc:	(bad)  
  4113ff:	mov    dh,0x1f
  411401:	sub    al,0x51
  411403:	mov    ecx,0xde714f16
  411408:	pop    ecx
  411409:	jl     0x4113ac
  41140b:	retf   
  41140c:	test   al,0xce
  41140e:	ret    0xd338
  411411:	jmp    0xfcb4:0x77ba71b5
  411418:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411419:	jge    0x411455
  41141b:	pop    ecx
  41141c:	add    cl,BYTE PTR [esi-0x11]
  41141f:	ds ret 
  411421:	test   bl,0x5
  411424:	std    
  411425:	inc    esp
  411426:	sar    bl,1
  411428:	call   0x6a6e5fde
  41142d:	pop    ebx
  41142e:	xor    BYTE PTR [esi-0x70121604],cl
  411434:	push   ds
  411435:	push   ebx
  411436:	call   0x220c:0xb5517671
  41143d:	cmp    edx,ebp
  41143f:	push   edi
  411440:	nop
  411441:	pop    eax
  411442:	outs   dx,DWORD PTR ds:[esi]
  411443:	outs   dx,BYTE PTR ds:[esi]
  411444:	adc    BYTE PTR [edx],bh
  411446:	pop    ebx
  411447:	push   edx
  411448:	cmp    al,0xae
  41144a:	std    
  41144b:	int3   
  41144c:	stos   DWORD PTR es:[edi],eax
  41144d:	fwait
  41144e:	popf   
  41144f:	inc    edx
  411450:	ror    bl,cl
  411452:	call   0x7aee:0x54c32c14
  411459:	pushf  
  41145a:	sbb    al,0x32
  41145c:	inc    eax
  41145d:	sub    eax,0x7b53285e
  411462:	(bad)  
  411463:	loopne 0x41142e
  411465:	pop    es
  411466:	loop   0x41148d
  411468:	dec    ebp
  411469:	loopne 0x411454
  41146b:	jns    0x4114cf
  41146d:	out    0x7b,eax
  41146f:	push   esp
  411470:	jg     0x411467
  411472:	repnz cmc 
  411474:	ins    BYTE PTR es:[edi],dx
  411475:	adc    eax,0xd04a4625
  41147a:	adc    al,0x13
  41147c:	popf   
  41147d:	sahf   
  41147e:	dec    edx
  41147f:	stos   DWORD PTR es:[edi],eax
  411480:	es mov edx,0xf17965df
  411486:	and    eax,0x5f74ac22
  41148b:	cdq    
  41148c:	xchg   edi,eax
  41148d:	ss sub al,0xb6
  411490:	les    ecx,FWORD PTR [ecx-0x2d]
  411493:	(bad)  
  411494:	fistp  QWORD PTR [esi-0x2a]
  411497:	int3   
  411498:	fld    QWORD PTR [eax]
  41149a:	cs inc ebx
  41149c:	pop    edi
  41149d:	xchg   edi,eax
  41149e:	jne    0x41146c
  4114a0:	mov    eax,0xd8aa000e
  4114a5:	call   FWORD PTR [esi+0x15e51356]
  4114ab:	mov    ds:0x31c9f5ae,eax
  4114b0:	hlt    
  4114b1:	in     eax,0xcc
  4114b3:	into   
  4114b4:	fdiv   st,st(6)
  4114b6:	outs   dx,BYTE PTR ds:[esi]
  4114b7:	and    BYTE PTR [edx+0x69c927dc],ch
  4114bd:	cdq    
  4114be:	adc    al,0xa7
  4114c0:	dec    ecx
  4114c1:	dec    ebx
  4114c2:	lock into 
  4114c4:	add    al,0xf3
  4114c6:	cdq    
  4114c7:	cs push esp
  4114c9:	or     al,0xe
  4114cb:	(bad)  
  4114cd:	push   ebx
  4114ce:	in     al,dx
  4114cf:	jb     0x41154a
  4114d1:	mov    ebx,0xef585bfe
  4114d6:	push   ecx
  4114d7:	push   esi
  4114d8:	mov    edx,0xbcb7b0ce
  4114dd:	add    eax,0x1cdf7fae
  4114e2:	or     edi,DWORD PTR [edi-0x13]
  4114e5:	pusha  
  4114e6:	repz sub ebp,DWORD PTR [ebx+0x67]
  4114ea:	pop    ecx
  4114eb:	cld    
  4114ec:	mov    esp,0x176d4c80
  4114f1:	or     BYTE PTR [edi+0x363be352],dl
  4114f7:	imul   esp,DWORD PTR [edx+0x73],0x93ba06ef
  4114fe:	loopne 0x41150c
  411500:	mov    cl,0x8
  411502:	adc    DWORD PTR [esp+eiz*2+0x56],esp
  411506:	cld    
  411507:	push   es
  411508:	bound  esi,QWORD PTR ds:0x415a9745
  41150e:	das    
  41150f:	jns    0x4114b8
  411511:	fs xchg ecx,ebp
  411514:	xor    DWORD PTR [edi+0x41],ebx
  411517:	or     DWORD PTR [esi-0x3c7ffcc9],edx
  41151d:	(bad)
  411520:	(bad)  
  411521:	ror    DWORD PTR [ebx+0x7e],1
  411524:	pop    ds
  411525:	xchg   ebp,eax
  411526:	push   ecx
  411527:	je     0x41151c
  411529:	stc    
  41152a:	into   
  41152b:	dec    edx
  41152c:	inc    ebx
  41152d:	popf   
  41152e:	fdiv   DWORD PTR [eax-0x10f29aba]
  411534:	push   edi
  411535:	sbb    eax,0x5128ddcd
  41153a:	ds fwait
  41153c:	sub    al,dl
  41153e:	stos   BYTE PTR es:[edi],al
  41153f:	sbb    edx,DWORD PTR [edi-0x4e]
  411542:	sbb    DWORD PTR [edx+0x3bc39d9b],0x7ad41618
  41154c:	push   esi
  41154d:	test   al,0x28
  41154f:	in     eax,dx
  411550:	jns    0x4115b6
  411552:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411553:	cmp    BYTE PTR [edi],ch
  411555:	mov    bl,0xbd
  411557:	mov    ds:0xa098623b,al
  41155c:	mov    DWORD PTR [edi+0x6d],ebx
  41155f:	xchg   esp,eax
  411560:	fwait
  411561:	arpl   WORD PTR [eax],si
  411563:	push   edx
  411564:	sbb    edi,DWORD PTR [edi-0x4]
  411567:	sub    ah,BYTE PTR [ecx+0x202ea7df]
  41156d:	addr16 pop ecx
  41156f:	and    ch,ah
  411571:	clc    
  411572:	ficomp WORD PTR [edx+0x55]
  411575:	outs   dx,BYTE PTR ds:[esi]
  411576:	push   cs
  411577:	jmp    0x16636b09
  41157c:	mov    edi,0x6e25c668
  411581:	addr16 and eax,0xd67ac61
  411587:	sbb    ecx,DWORD PTR es:[edx]
  41158a:	sbb    al,0x2b
  41158c:	mov    ?,ebx
  41158e:	xchg   ebp,eax
  41158f:	add    DWORD PTR [esi],edx
  411591:	mov    dh,0x27
  411593:	xchg   edi,eax
  411594:	test   BYTE PTR [edi+eax*8-0x1d],0xdd
  411599:	inc    eax
  41159a:	es push ebp
  41159c:	push   esi
  41159d:	repnz es fwait
  4115a0:	add    al,0xa3
  4115a2:	les    edi,FWORD PTR [esi]
  4115a4:	in     eax,0xe5
  4115a6:	add    al,0x11
  4115a8:	sub    bh,ch
  4115aa:	jnp    0x411558
  4115ac:	dec    ecx
  4115ad:	xor    al,0xe1
  4115af:	inc    eax
  4115b0:	add    eax,0x5cf73329
  4115b5:	mov    dl,0x39
  4115b7:	xchg   edi,eax
  4115b8:	pusha  
  4115b9:	fnstenv [edi]
  4115bb:	sub    DWORD PTR cs:[edx],0x18b9187b
  4115c2:	int    0x79
  4115c4:	and    edx,ebp
  4115c6:	pop    ss
  4115c7:	call   0xfdf6cc7d
  4115cc:	push   ss
  4115cd:	inc    ecx
  4115ce:	add    DWORD PTR [ebp-0x21e86c0c],eax
  4115d4:	add    BYTE PTR [esi-0x222e8b3a],0xd3
  4115db:	adc    eax,0xd39db190
  4115e0:	jb     0x41159c
  4115e2:	dec    ebp
  4115e3:	arpl   WORD PTR [esp+ebx*2],cx
  4115e6:	out    0x39,al
  4115e8:	mov    edx,0x7878c21f
  4115ed:	mov    cl,0x13
  4115ef:	push   edi
  4115f0:	rcl    DWORD PTR [eax+0x4e],0xbf
  4115f4:	pop    ecx
  4115f5:	bound  eax,QWORD PTR [ecx-0x30]
  4115f8:	in     al,0x5d
  4115fa:	push   es
  4115fb:	out    dx,eax
  4115fc:	call   0xbe88a8e0
  411601:	mov    ebp,DWORD PTR [eax-0x3f4666dc]
  411607:	and    ch,BYTE PTR [esi+0x3c]
  41160a:	sub    BYTE PTR [ebx+ecx*4],bh
  41160d:	add    cl,BYTE PTR [ebp-0x45]
  411610:	jecxz  0x4115cc
  411612:	mov    esi,DWORD PTR [esi+0x3dc049e2]
  411618:	loope  0x4115f3
  41161a:	stos   DWORD PTR es:[edi],eax
  41161b:	dec    esp
  41161c:	mov    BYTE PTR [ebx],cl
  41161e:	in     al,0xda
  411620:	mov    al,ds:0x9e5264e5
  411625:	and    al,0x9b
  411627:	fs into 
  411629:	lock push ecx
  41162b:	in     eax,dx
  41162c:	retf   0x404a
  41162f:	jge    0x411616
  411631:	push   ebx
  411632:	or     al,0x5c
  411634:	in     eax,dx
  411635:	push   0xfb60060f
  41163a:	sbb    DWORD PTR [esi],ecx
  41163c:	pop    ebp
  41163d:	push   es
  41163e:	mov    dh,0xdd
  411640:	test   eax,0x6a8c169f
  411645:	lods   eax,DWORD PTR fs:[esi]
  411647:	test   eax,0x4df82e26
  41164c:	mov    bh,0x61
  41164e:	pop    ds
  41164f:	mov    ah,0x88
  411651:	hlt    
  411652:	cmp    al,0xb3
  411654:	adc    ch,BYTE PTR [ecx+0x16]
  411657:	push   ebp
  411658:	femms  
  41165a:	aam    0x41
  41165c:	mov    ebp,0xe6d54f2b
  411661:	jnp    0x411672
  411663:	in     al,dx
  411664:	in     eax,0x9f
  411666:	dec    edx
  411667:	push   ss
  411668:	pop    es
  411669:	shl    BYTE PTR [eax],cl
  41166b:	xchg   BYTE PTR [eax],bh
  41166d:	pop    edi
  41166e:	or     al,0xfe
  411670:	add    eax,DWORD PTR [edx+0x27edcceb]
  411676:	fstp   QWORD PTR [ebp+0x3b]
  411679:	mov    eax,0x103a144c
  41167e:	js     0x411699
  411680:	bound  edi,QWORD PTR [edx-0xd]
  411683:	jae    0x411617
  411685:	daa    
  411686:	adc    esp,DWORD PTR [ebx+ebp*4]
  411689:	mov    ?,eax
  41168b:	div    DWORD PTR [edx]
  41168d:	iret   
  41168e:	push   ss
  41168f:	adc    al,0x64
  411691:	fnstenv [ecx-0x6dc7a991]
  411697:	xchg   bh,cl
  411699:	hlt    
  41169a:	sbb    al,0x0
  41169c:	push   cs
  41169d:	into   
  41169e:	fucomi st,st(5)
  4116a0:	cmp    DWORD PTR [eax-0x73],0x6e
  4116a4:	in     al,dx
  4116a5:	ret    
  4116a6:	adc    eax,0xca560ff8
  4116ab:	mov    bl,0xba
  4116ad:	out    dx,al
  4116ae:	sbb    DWORD PTR [edi+0x6fb760b4],0xfffffff0
  4116b5:	xchg   edx,eax
  4116b6:	(bad)  
  4116b7:	pop    edi
  4116b8:	mov    edi,0x615223e9
  4116bd:	sub    ah,BYTE PTR [ecx-0x5]
  4116c0:	jmp    0xba3e:0xc3326774
  4116c7:	mov    dl,0x52
  4116c9:	fmul   DWORD PTR [ebp+0x11]
  4116cc:	adc    eax,0xcb76b717
  4116d1:	pop    DWORD PTR [ecx+0x5e]
  4116d4:	xchg   edi,eax
  4116d5:	dec    ebx
  4116d6:	push   ebp
  4116d7:	inc    esp
  4116d8:	cmp    esi,DWORD PTR [eax-0x7e74f5f9]
  4116de:	sahf   
  4116df:	and    cl,dl
  4116e1:	mov    cl,0xc7
  4116e3:	mov    esp,0x96d9ac36
  4116e8:	dec    ebx
  4116e9:	cdq    
  4116ea:	(bad)  
  4116ec:	enter  0x5b37,0xc5
  4116f0:	mov    eax,0x8e255844
  4116f5:	push   ebx
  4116f6:	imul   edx,esp,0xe0184f09
  4116fc:	nop
  4116fd:	ror    DWORD PTR [edx-0x15],0xa8
  411701:	inc    ecx
  411702:	out    dx,al
  411703:	cmp    al,0x56
  411705:	out    0x91,eax
  411707:	sbb    esp,DWORD PTR [ebp-0x72]
  41170a:	lahf   
  41170b:	call   0x4de4:0xc1bded12
  411712:	and    esp,DWORD PTR ds:0x6a2e1b0a
  411718:	push   esi
  411719:	(bad)  
  41171d:	ds inc eax
  41171f:	and    edi,DWORD PTR [ecx-0x24]
  411722:	pushf  
  411723:	adc    dl,al
  411725:	scas   eax,DWORD PTR es:[edi]
  411726:	jne    0x411718
  411728:	dec    edi
  411729:	xchg   ebx,eax
  41172a:	inc    esi
  41172b:	sbb    al,0x2c
  41172d:	pop    ss
  41172e:	xor    DWORD PTR [ebp-0x2cccb917],ebx
  411734:	cmp    BYTE PTR [eax],al
  411736:	jns    0x411772
  411738:	in     eax,0xbc
  41173a:	(bad)  
  41173b:	mov    bl,0xff
  41173d:	bswap  eax
  41173f:	add    esi,edx
  411741:	call   0x15d00be2
  411746:	or     BYTE PTR [esi+ecx*2+0x6d58982b],al
  41174d:	pop    ds
  41174e:	and    BYTE PTR [ebx+0x10],dh
  411751:	xor    eax,0xf8c5757
  411756:	aam    0x32
  411758:	pop    ecx
  411759:	mov    ecx,0x95ce95ac
  41175e:	les    ebp,FWORD PTR [edi]
  411760:	pop    ecx
  411761:	sti    
  411762:	jae    0x41179a
  411764:	in     eax,dx
  411765:	stos   DWORD PTR es:[edi],eax
  411766:	ins    BYTE PTR es:[edi],dx
  411767:	call   0x409312b8
  41176c:	jmp    0x265:0x905c273a
  411773:	sar    BYTE PTR [eax-0x56],1
  411776:	inc    ecx
  411777:	loope  0x4117d2
  411779:	push   eax
  41177a:	in     al,dx
  41177b:	xchg   BYTE PTR [esi-0x4a5f1211],cl
  411781:	push   edi
  411782:	jp     0x411758
  411784:	int    0x49
  411786:	rcr    DWORD PTR [eax+esi*4-0x47],0x74
  41178b:	aam    0xb6
  41178d:	les    edx,FWORD PTR [edi+0x65f2b65b]
  411793:	cli    
  411794:	ja     0x4117b3
  411796:	enter  0x4a36,0x29
  41179a:	add    eax,0xb35d7dec
  41179f:	stos   DWORD PTR es:[edi],eax
  4117a0:	pop    esi
  4117a1:	fsubr  st(2),st
  4117a3:	mov    al,ds:0x3a57dbbd
  4117a8:	loop   0x4117c7
  4117aa:	mov    al,ds:0x2d984d6f
  4117af:	sub    BYTE PTR [ebp+0x71],dl
  4117b2:	popa   
  4117b3:	xor    ecx,esp
  4117b5:	mov    esi,0x4cffdd5f
  4117ba:	add    edx,DWORD PTR [ebp+0xa2d6434]
  4117c0:	jnp    0x411756
  4117c2:	push   eax
  4117c3:	xor    edx,DWORD PTR [edi]
  4117c5:	sbb    ah,dh
  4117c7:	jbe    0x411812
  4117c9:	pusha  
  4117ca:	(bad)  
  4117cc:	push   es
  4117cd:	ja     0x411789
  4117cf:	lea    eax,[edx+0x3f09a361]
  4117d5:	cmp    al,0x9a
  4117d7:	xlat   BYTE PTR ds:[ebx]
  4117d8:	imul   esp,edx,0x3f
  4117db:	cmp    ebx,DWORD PTR [eax+0x47]
  4117de:	add    cl,0x56
  4117e1:	stc    
  4117e2:	fcomp  QWORD PTR [ecx]
  4117e4:	cmp    ch,BYTE PTR [ecx+ebp*2+0x77d9c2d2]
  4117eb:	icebp  
  4117ec:	sbb    al,0x6b
  4117ee:	in     al,0xe
  4117f0:	(bad)  
  4117f1:	pop    ebx
  4117f2:	push   edx
  4117f3:	dec    ebp
  4117f4:	mov    gs,WORD PTR [edi]
  4117f6:	mov    ?,WORD PTR [ecx+0x4e]
  4117f9:	jecxz  0x4117c6
  4117fb:	test   DWORD PTR [ebx-0x1f],ebp
  4117fe:	enter  0x3809,0x5b
  411802:	test   eax,0x39d98d8d
  411807:	test   al,0x7
  411809:	xor    BYTE PTR [edx+0x74f3a1f9],dl
  41180f:	xchg   edx,eax
  411810:	add    DWORD PTR [ebx+ecx*2],ecx
  411813:	push   0x22caa9e0
  411818:	pop    edx
  411819:	xchg   DWORD PTR [esp+edi*1+0x11],esi
  41181d:	mov    al,ds:0x8ae2cc50
  411822:	adc    DWORD PTR [ebx-0x15],esp
  411825:	cwde   
  411826:	add    edi,edx
  411828:	ins    DWORD PTR es:[edi],dx
  411829:	cmp    al,0xa7
  41182b:	(bad)  
  41182c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41182d:	cld    
  41182e:	stc    
  41182f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411830:	test   eax,0x42e468d3
  411835:	stc    
  411836:	popw   es
  411838:	push   0x5c
  41183a:	or     ah,bl
  41183c:	and    eax,0xd753dfa9
  411841:	aas    
  411842:	hlt    
  411843:	and    eax,ecx
  411845:	dec    esp
  411846:	adc    DWORD PTR [ebx],eax
  411848:	out    0xc,al
  41184a:	sbb    al,0x5d
  41184c:	and    BYTE PTR [ebp-0x5e4b3a4],0x89
  411853:	cmc    
  411854:	lahf   
  411855:	je     0x41182d
  411857:	add    DWORD PTR [ebx-0x42],esi
  41185a:	push   0xffffff88
  41185c:	out    0xfa,al
  41185e:	push   ebp
  41185f:	xor    al,0x2d
  411861:	(bad)  ds:0x868e10e0
  411867:	xor    al,0xe4
  411869:	cmp    ebp,DWORD PTR [si+0x13b4]
  41186e:	adc    ecx,ebx
  411870:	leave  
  411871:	or     BYTE PTR [ebx+eiz*4],ch
  411874:	jne    0x411834
  411876:	rcl    dl,1
  411878:	into   
  411879:	ss addr16 sbb al,0x95
  41187d:	leave  
  41187e:	lea    ebx,[ebp+0x4021da3c]
  411884:	lock ss std 
  411887:	test   BYTE PTR [eax],0xd2
  41188a:	fadd   DWORD PTR [ebp-0x11]
  41188d:	add    cl,ch
  41188f:	inc    ebx
  411890:	dec    edx
  411891:	mov    ebp,0x6e76d8ac
  411896:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411897:	mov    ds:0x6296e68e,al
  41189c:	push   ds
  41189d:	push   ebp
  41189e:	ret    0x850f
  4118a1:	cmp    DWORD PTR [edx],esi
  4118a3:	daa    
  4118a4:	pop    edi
  4118a5:	ret    0x7afc
  4118a8:	gs push esi
  4118aa:	mov    ah,dh
  4118ac:	rcr    BYTE PTR [ebp-0x5e],0x70
  4118b0:	adc    ebp,ebp
  4118b2:	fbld   TBYTE PTR [edx-0x63]
  4118b5:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4118b7:	push   0xcb89460c
  4118bc:	mov    eax,eax
  4118be:	add    ah,dl
  4118c0:	cmp    ecx,DWORD PTR [ecx-0x54]
  4118c3:	sti    
  4118c4:	iret   
  4118c5:	shl    BYTE PTR [ecx+0x72e9b817],cl
  4118cb:	cli    
  4118cc:	popa   
  4118cd:	mov    edi,0x69b22599
  4118d2:	cmp    esp,ebp
  4118d4:	dec    edx
  4118d5:	inc    ecx
  4118d6:	dec    edx
  4118d7:	stos   BYTE PTR es:[edi],al
  4118d8:	push   ebx
  4118d9:	shl    DWORD PTR [ebp-0x59],cl
  4118dc:	add    al,0x23
  4118de:	mul    DWORD PTR [ecx+esi*8+0x9b2cf37]
  4118e5:	or     eax,DWORD PTR [eax]
  4118e7:	test   eax,0xbdeea190
  4118ec:	cli    
  4118ed:	xchg   edx,eax
  4118ee:	sbb    BYTE PTR [edx+0x135889d9],ah
  4118f4:	mov    WORD PTR [esi+0x73],?
  4118f7:	and    bl,BYTE PTR [esi+0x1fc39e6d]
  4118fd:	jno    0x41190a
  4118ff:	int    0x1e
  411901:	sub    al,0xe1
  411903:	gs call 0xdd8b5a
  411909:	retf   0x44d0
  41190c:	(bad)  
  41190d:	fstp   DWORD PTR [ecx-0x3e]
  411910:	daa    
  411911:	cdq    
  411912:	jnp    0x411901
  411914:	mov    esi,0xf07c38d8
  411919:	sar    BYTE PTR [ebx],0x8a
  41191c:	mov    bh,0xde
  41191e:	call   0x8c2fada
  411923:	push   eax
  411924:	xchg   ebx,eax
  411925:	mov    ecx,0x2e2ace3b
  41192a:	xchg   edi,eax
  41192b:	jb     0x411920
  41192d:	inc    ecx
  41192e:	jg     0x41196c
  411930:	adc    eax,0xc49d1b13
  411935:	sub    BYTE PTR [ebx+0x7c],bh
  411938:	jp     0x4118f4
  41193a:	pop    es
  41193b:	mov    ch,0x16
  41193d:	xor    al,0x3d
  41193f:	cmp    DWORD PTR [esi+ecx*8-0x3a53471d],edi
  411946:	xor    BYTE PTR [esp+ecx*4-0x3],ah
  41194a:	sbb    esp,DWORD PTR [eax-0x28e58f46]
  411950:	xor    DWORD PTR [edx+0x78],ebx
  411953:	xor    bl,ah
  411955:	xchg   ebx,eax
  411956:	retf   
  411957:	push   eax
  411958:	jae    0x4119ab
  41195a:	xchg   ebp,eax
  41195b:	aad    0x34
  41195d:	leave  
  41195e:	es cmp eax,0x641b128b
  411964:	mov    BYTE PTR [eax+ebp*8+0x5f429359],ah
  41196b:	sub    ebx,ecx
  41196d:	lahf   
  41196e:	mov    esi,0xfff11805
  411973:	cmp    eax,0x7b9b3ae8
  411978:	dec    ecx
  411979:	jb     0x41199a
  41197b:	fucomi st,st(0)
  41197d:	not    BYTE PTR [ebp+edi*2-0x42b97cac]
  411984:	inc    ecx
  411985:	lock ror edx,1
  411988:	inc    ebp
  411989:	pop    esp
  41198a:	add    eax,0x871f243e
  41198f:	add    eax,0x6e27f5e5
  411994:	rcl    eax,1
  411996:	sahf   
  411997:	mov    BYTE PTR [eax+0x51],bh
  41199a:	or     bh,BYTE PTR [edi+0x60]
  41199d:	xchg   ebx,eax
  41199e:	sahf   
  41199f:	xchg   DWORD PTR [ecx],edi
  4119a1:	dec    esp
  4119a2:	mov    eax,0x4247c572
  4119a7:	inc    ch
  4119a9:	mov    eax,0x96a7e3fd
  4119ae:	gs (bad) 
  4119b0:	jecxz  0x41198b
  4119b2:	(bad)  [ecx+0x2f849ed3]
  4119b8:	fnsave [ebx]
  4119ba:	fwait
  4119bb:	and    al,0x17
  4119bd:	gs aaa 
  4119bf:	imul   esp,DWORD PTR ds:0x68a5304e,0xca9c5998
  4119c9:	lds    ecx,FWORD PTR [edi]
  4119cb:	mov    edx,ss
  4119cd:	cld    
  4119ce:	jecxz  0x4119b0
  4119d0:	in     eax,dx
  4119d1:	stc    
  4119d2:	fcom   QWORD PTR [edx+0x5ca6419f]
  4119d8:	clc    
  4119d9:	add    al,0xba
  4119db:	mov    ds,WORD PTR [edi+0x60a5010d]
  4119e1:	pusha  
  4119e2:	push   cs
  4119e3:	pop    ss
  4119e4:	enter  0xd583,0xd8
  4119e8:	add    al,0x27
  4119ea:	jmp    0x488:0xca8bc200
  4119f1:	daa    
  4119f2:	es jae 0x4119ac
  4119f5:	and    bh,BYTE PTR [edx+esi*2-0x11]
  4119f9:	mov    ebx,DWORD PTR [edx+0x42]
  4119fc:	fild   WORD PTR [eax]
  4119fe:	inc    esi
  4119ff:	retf   0x1282
  411a02:	imul   ebp,DWORD PTR [esi],0xbae158c4
  411a08:	icebp  
  411a09:	mov    ds:0xd3ea66b1,al
  411a0e:	lock jmp 0x85c0:0xe5f5e61b
  411a16:	outs   dx,DWORD PTR ds:[esi]
  411a17:	int3   
  411a18:	sbb    BYTE PTR [eax-0x66],cl
  411a1b:	mov    al,0x59
  411a1d:	pop    ds
  411a1e:	repnz outs dx,DWORD PTR ds:[esi]
  411a20:	repnz xor BYTE PTR [ecx-0x16],cl
  411a24:	repz in al,0x63
  411a27:	ret    0x538e
  411a2a:	cmp    BYTE PTR [ecx-0x22],ah
  411a2d:	je     0x411a27
  411a2f:	sbb    eax,0xb2ddcb12
  411a34:	inc    ebp
  411a35:	mov    eax,0x9c2ee392
  411a3a:	rol    ebp,1
  411a3c:	mov    al,ds:0x83787d79
  411a41:	(bad)  
  411a42:	stos   BYTE PTR es:[edi],al
  411a43:	sahf   
  411a44:	mov    esi,0x353a578b
  411a49:	adc    dh,al
  411a4b:	xor    eax,0xf21a9cdc
  411a50:	push   esp
  411a51:	into   
  411a52:	(bad)  
  411a53:	ins    DWORD PTR es:[edi],dx
  411a54:	jo     0x411a46
  411a56:	and    BYTE PTR [ecx],ah
  411a58:	pop    edi
  411a59:	push   0xfffffff9
  411a5b:	jne    0x411ad5
  411a5d:	pop    ebx
  411a5e:	mov    BYTE PTR [ebx+0xf],0xe7
  411a62:	or     BYTE PTR ds:0x800e502,ah
  411a68:	ins    BYTE PTR es:[edi],dx
  411a69:	mov    ecx,0x2116db5b
  411a6e:	mov    ch,0xdd
  411a70:	and    al,0xcc
  411a72:	mov    eax,0x2addc030
  411a77:	and    ebp,DWORD PTR [esi+ecx*4]
  411a7a:	lahf   
  411a7b:	mov    eax,ds:0x260cacae
  411a80:	addr16 jle 0x411ab7
  411a83:	pmaxsw mm3,QWORD PTR ds:0x52041de2
  411a8a:	xor    eax,0x23f540d5
  411a8f:	int3   
  411a90:	sbb    DWORD PTR [ebp-0x45f371b],0x877140a9
  411a9a:	ins    BYTE PTR es:[edi],dx
  411a9b:	(bad)  
  411a9c:	push   eax
  411a9d:	jmp    0x58c4:0x91e3866c
  411aa4:	lods   al,BYTE PTR ds:[esi]
  411aa5:	lds    ebx,FWORD PTR fs:[esi-0x5bfd17b9]
  411aac:	mov    bh,0xa5
  411aae:	nop
  411aaf:	jle    0x411aa6
  411ab1:	popf   
  411ab2:	xchg   ecx,eax
  411ab3:	inc    ebx
  411ab4:	cmp    cl,BYTE PTR [ecx-0x30e7654e]
  411aba:	jg     0x411a50
  411abc:	jl     0x411a3e
  411abe:	fcmovb st,st(6)
  411ac0:	adc    eax,0x71cce1f
  411ac5:	mov    bh,0x41
  411ac7:	xchg   ebp,eax
  411ac8:	mov    esi,DWORD PTR [eax]
  411aca:	mov    BYTE PTR [esi+0x67731bd6],ch
  411ad0:	mov    edi,0xac258e2
  411ad5:	es dec ebx
  411ad7:	inc    ebp
  411ad8:	mov    esi,0xf3a33aff
  411add:	ja     0x411abe
  411adf:	and    al,0x8e
  411ae1:	repz repnz loop 0x411aba
  411ae5:	mov    edi,0x360a9d12
  411aea:	mov    esi,0x709f4897
  411aef:	(bad)  
  411af1:	into   
  411af2:	test   al,0x70
  411af4:	mov    WORD PTR [edx-0x57caa889],ds
  411afa:	push   edi
  411afb:	jns    0x411adf
  411afd:	jp     0x411ae7
  411aff:	xor    al,0x64
  411b01:	das    
  411b02:	cmp    dh,0x76
  411b05:	push   esp
  411b06:	inc    ebp
  411b07:	pop    ecx
  411b08:	adc    ah,al
  411b0a:	popf   
  411b0b:	aam    0x7e
  411b0d:	lahf   
  411b0e:	into   
  411b0f:	cmp    eax,0xf99f8798
  411b14:	jbe    0x411a9e
  411b16:	or     DWORD PTR [edi+0xe6fcdc3],ebp
  411b1c:	cmp    bl,BYTE PTR [ebp+0x428a4417]
  411b22:	enter  0x4034,0x17
  411b26:	fimul  WORD PTR [esi+ebp*2-0x37d203a5]
  411b2d:	inc    ebp
  411b2e:	mov    ebx,0x5c6568d4
  411b33:	mov    esp,0x94959c90
  411b38:	push   ebx
  411b39:	mov    cl,0xaa
  411b3b:	pop    edx
  411b3c:	push   0xffffff80
  411b3e:	icebp  
  411b3f:	mov    edx,0xbb02b0ca
  411b44:	test   ch,al
  411b46:	and    BYTE PTR [ecx-0xc],dl
  411b49:	mov    ch,0x89
  411b4b:	call   0xa1793cc6
  411b50:	pop    esp
  411b51:	iret   
  411b52:	push   DWORD PTR [edi-0x40]
  411b55:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b56:	das    
  411b57:	push   edi
  411b58:	iret   
  411b59:	cmp    DWORD PTR [ebx+eiz*2+0x52c9c17],0x3cdab2dc
  411b64:	jb     0x411b3d
  411b66:	test   BYTE PTR [edi],dl
  411b68:	xor    al,0xd5
  411b6a:	mov    ecx,0x3cdcb1b0
  411b6f:	mov    ebp,0x6a438582
  411b74:	mov    ah,0x1f
  411b76:	lods   eax,DWORD PTR ds:[esi]
  411b77:	push   ss
  411b78:	cld    
  411b79:	jp     0x411b34
  411b7b:	xchg   eax,edx
  411b7d:	into   
  411b7e:	jg     0x411b53
  411b80:	lea    esi,[esi+0x548b2446]
  411b86:	out    dx,eax
  411b87:	push   edi
  411b88:	inc    DWORD PTR [ecx+0x5997ef5e]
  411b8e:	pop    edi
  411b8f:	or     dh,BYTE PTR [edx+0x69]
  411b92:	xchg   ecx,eax
  411b93:	or     BYTE PTR [ebx],dl
  411b95:	or     edx,edi
  411b97:	test   BYTE PTR [ecx+esi*8-0x2d],dl
  411b9b:	mov    edx,0xdeb774fe
  411ba0:	jecxz  0x411bed
  411ba2:	adc    eax,0x35563d28
  411ba7:	jmp    0x411bf4
  411ba9:	outs   dx,DWORD PTR ds:[esi]
  411baa:	ret    0x8a54
  411bad:	jno    0x411b67
  411baf:	(bad)  
  411bb0:	mov    ebp,0xa154d571
  411bb5:	jnp    0x411bff
  411bb7:	sbb    ah,0xc3
  411bba:	jno    0x411baa
  411bbc:	enter  0xb01,0xf6
  411bc0:	ret    
  411bc1:	mov    esi,0x75f84aaf
  411bc6:	in     al,dx
  411bc7:	mov    es,WORD PTR es:[ebx+0x381edb93]
  411bce:	sbb    esi,esp
  411bd0:	mov    dh,0x53
  411bd2:	mov    ds:0x287fe5f7,eax
  411bd7:	(bad)  
  411bd8:	lock fwait
  411bda:	push   edi
  411bdb:	mov    cl,0x7f
  411bdd:	or     eax,0xd1539aaf
  411be2:	arpl   si,cx
  411be4:	loop   0x411b9e
  411be6:	aam    0xb9
  411be8:	push   edi
  411be9:	outs   dx,BYTE PTR ds:[esi]
  411bea:	inc    ecx
  411beb:	add    BYTE PTR [si-0x5259],al
  411bf0:	int    0xaf
  411bf2:	mov    dh,0xe4
  411bf4:	aaa    
  411bf5:	inc    edx
  411bf6:	in     al,0x92
  411bf8:	pop    edx
  411bf9:	scas   al,BYTE PTR es:[edi]
  411bfa:	dec    ecx
  411bfb:	aas    
  411bfc:	pop    ebp
  411bfd:	push   esp
  411bfe:	sub    cl,BYTE PTR [ecx+0x3757a219]
  411c04:	cmp    al,BYTE PTR [edi+0x6c]
  411c07:	mov    ebx,0xc11dae92
  411c0c:	popf   
  411c0d:	xchg   ecx,eax
  411c0e:	or     dl,dl
  411c10:	jg     0x411c46
  411c12:	jle    0x411c23
  411c14:	repnz mov WORD PTR [edi-0x3],gs
  411c18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411c19:	loopne 0x411c05
  411c1b:	sti    
  411c1c:	push   ds
  411c1d:	fldlg2 
  411c1f:	pop    eax
  411c20:	enter  0x8904,0x4e
  411c24:	test   eax,0xb5029fb2
  411c29:	stc    
  411c2a:	nop
  411c2b:	dec    edx
  411c2c:	pop    ss
  411c2d:	xchg   edi,eax
  411c2e:	ds mov al,0x9b
  411c31:	mov    WORD PTR [ebp+0x7f335857],fs
  411c37:	or     ah,BYTE PTR [edx+0x34]
  411c3a:	cs aaa 
  411c3c:	pop    ebp
  411c3d:	xor    eax,0xdd442129
  411c42:	aam    0xb9
  411c44:	out    0xbc,al
  411c46:	clc    
  411c47:	outs   dx,DWORD PTR ds:[esi]
  411c48:	pop    esp
  411c49:	jne    0x411c68
  411c4b:	or     eax,0xb39cee15
  411c50:	sbb    eax,0x347ea913
  411c55:	fdivr  DWORD PTR [ebp-0x511e7f92]
  411c5b:	retf   0x4846
  411c5e:	je     0x411c18
  411c60:	fst    DWORD PTR [edi-0x11]
  411c63:	sub    al,0xba
  411c65:	adc    dl,BYTE PTR [esi+0x37]
  411c68:	inc    edi
  411c69:	aad    0x4d
  411c6b:	int3   
  411c6c:	or     edx,edi
  411c6e:	(bad)  
  411c6f:	fcomp  QWORD PTR [edx+eax*8-0x25a02c6b]
  411c76:	loop   0x411c3a
  411c78:	shl    edx,cl
  411c7a:	inc    edx
  411c7b:	dec    esi
  411c7c:	or     al,0x50
  411c7e:	rcr    DWORD PTR [ebx],0xd3
  411c81:	clc    
  411c82:	iret   
  411c83:	xor    eax,0xe286a080
  411c88:	mov    eax,ds:0xd44e11c7
  411c8d:	fnsave [eax-0x5fe4a83a]
  411c93:	adc    ebx,eax
  411c95:	cmp    ebp,DWORD PTR [ecx]
  411c97:	rcl    DWORD PTR [eax],0x94
  411c9a:	xchg   ebp,eax
  411c9b:	hlt    
  411c9c:	add    ch,BYTE PTR [edx+0x79]
  411c9f:	dec    eax
  411ca0:	mov    esp,DWORD PTR [ebx-0x29]
  411ca3:	xor    al,0x8e
  411ca5:	mov    ebx,0x7051afc5
  411caa:	dec    eax
  411cab:	ret    
  411cac:	std    
  411cad:	add    eax,0x9b376cd0
  411cb2:	and    ch,0x7a
  411cb5:	mov    cl,0xb2
  411cb7:	ret    
  411cb8:	inc    esi
  411cb9:	aad    0xbc
  411cbb:	es rol dh,cl
  411cbe:	fstp   QWORD PTR [ebp+0xc]
  411cc1:	ja     0x411ca0
  411cc3:	adc    bl,BYTE PTR [edx+edx*4+0x3d]
  411cc7:	inc    cl
  411cc9:	dec    ecx
  411cca:	mov    bl,BYTE PTR [ebp+ebp*4+0x48]
  411cce:	cmp    BYTE PTR [ebx+0x7714d984],dh
  411cd4:	div    BYTE PTR ds:0x8e059a72
  411cda:	ficom  DWORD PTR [edx+ecx*8-0x8]
  411cde:	push   ebp
  411cdf:	fsub   DWORD PTR [eax]
  411ce1:	xor    esi,DWORD PTR [ecx]
  411ce3:	cli    
  411ce4:	(bad)  
  411ce5:	push   edx
  411ce6:	or     cl,BYTE PTR [edx-0x3f]
  411ce9:	test   eax,0x2af90fee
  411cee:	mov    DWORD PTR [esi+0x4b0f2241],ecx
  411cf4:	xor    BYTE PTR [ecx+eiz*4+0x417be2b9],dl
  411cfb:	in     eax,dx
  411cfc:	pop    ss
  411cfd:	dec    edx
  411cfe:	add    eax,0xa3e15fe9
  411d03:	jnp    0x411cbf
  411d05:	ret    0x2e98
  411d08:	repnz pop esi
  411d0a:	clc    
  411d0b:	xchg   edx,eax
  411d0c:	cmp    al,0xe2
  411d0e:	cwde   
  411d0f:	xchg   ecx,eax
  411d10:	test   esi,ebx
  411d12:	adc    BYTE PTR [eax+0x4c],0xc2
  411d16:	pop    ebx
  411d17:	sbb    ecx,DWORD PTR [eax+0x6f6ec713]
  411d1d:	push   ebx
  411d1e:	cmp    eax,0x3b9e9469
  411d23:	cmp    ch,bl
  411d25:	add    cl,bh
  411d27:	push   ss
  411d28:	mov    ch,0x16
  411d2a:	mov    ebp,0x533d1faf
  411d2f:	fcmovnu st,st(0)
  411d31:	test   al,0xf7
  411d33:	inc    ebp
  411d34:	div    BYTE PTR ds:0xc27274dd
  411d3a:	inc    edi
  411d3b:	arpl   ax,bp
  411d3d:	mov    cl,0x52
  411d3f:	scas   ax,WORD PTR es:[edi]
  411d41:	inc    ecx
  411d42:	push   eax
  411d43:	loopne 0x411ce1
  411d45:	and    ebp,DWORD PTR [edi+0x26]
  411d48:	fmul   st,st(5)
  411d4a:	popf   
  411d4b:	sub    BYTE PTR [edx],ah
  411d4d:	push   ebp
  411d4e:	push   0xf477728f
  411d53:	adc    eax,esp
  411d55:	das    
  411d56:	imul   ebp,DWORD PTR [ebx-0xb],0xdb805747
  411d5d:	or     DWORD PTR [ecx-0x451eb5b7],ecx
  411d63:	xchg   edi,eax
  411d64:	lea    esp,[edi+0x14]
  411d67:	sbb    esp,DWORD PTR [ebp-0x47c9e97d]
  411d6d:	neg    ch
  411d6f:	mov    dl,0x34
  411d71:	pop    eax
  411d72:	retf   
  411d73:	cmc    
  411d74:	inc    eax
  411d75:	icebp  
  411d76:	dec    edx
  411d77:	jle    0x411d28
  411d79:	sbb    edi,ebx
  411d7b:	jo     0x411d89
  411d7d:	(bad)  
  411d7e:	push   ss
  411d7f:	imul   edx,DWORD PTR [eax-0x538795fb],0x4
  411d86:	adc    al,0xf2
  411d88:	fisubr WORD PTR ds:0x2e1fb73f
  411d8e:	hlt    
  411d8f:	push   edx
  411d90:	jp     0x411d42
  411d92:	cld    
  411d93:	pop    esi
  411d94:	nop
  411d95:	mov    al,0x2d
  411d97:	into   
  411d98:	sbb    al,0x35
  411d9a:	ins    DWORD PTR es:[edi],dx
  411d9b:	stos   DWORD PTR es:[edi],eax
  411d9c:	and    eax,0x4aa2f4bf
  411da1:	ret    
  411da2:	pop    ecx
  411da3:	rol    DWORD PTR [edx+0x65],0x76
  411da7:	xor    eax,0xe59cec9c
  411dac:	xchg   esi,eax
  411dad:	in     al,dx
  411dae:	ja     0x411d85
  411db0:	sub    DWORD PTR [ebx],edx
  411db2:	xchg   ebx,eax
  411db3:	repnz fidiv WORD PTR [eax-0x37a0e9ba]
  411dba:	test   eax,0x1849020d
  411dbf:	lods   al,BYTE PTR ds:[esi]
  411dc0:	and    ebp,esp
  411dc2:	and    DWORD PTR [eax+0x2d],edx
  411dc5:	pop    ecx
  411dc6:	outs   dx,DWORD PTR ds:[esi]
  411dc7:	inc    edi
  411dc8:	out    0x2f,al
  411dca:	das    
  411dcb:	fsub   DWORD PTR [eax-0x42]
  411dce:	aas    
  411dcf:	fdiv   QWORD PTR [edi+0x23333967]
  411dd5:	leave  
  411dd6:	sbb    BYTE PTR [ebx],bl
  411dd8:	and    eax,0xf255d396
  411ddd:	sahf   
  411dde:	mov    dl,0x9
  411de0:	mov    ah,0x99
  411de2:	sbb    BYTE PTR [eax],dl
  411de4:	repnz add esp,0x87c5102c
  411deb:	lahf   
  411dec:	fild   DWORD PTR [eax]
  411dee:	lock cwde 
  411df0:	pop    esi
  411df1:	fmul   st,st(4)
  411df3:	mov    bl,0x1a
  411df5:	jge    0x411e47
  411df7:	jno    0x411dc9
  411df9:	sub    eax,0xd9191acf
  411dfe:	pop    ds
  411dff:	out    dx,al
  411e00:	jmp    0x411d8f
  411e02:	pop    ebp
  411e03:	xor    ch,BYTE PTR [ebx+0x69]
  411e06:	fmul   st,st(6)
  411e08:	sahf   
  411e09:	jne    0x411e3f
  411e0b:	loope  0x411e25
  411e0d:	popa   
  411e0e:	leave  
  411e0f:	or     DWORD PTR [edx-0x7d],ecx
  411e12:	xchg   BYTE PTR [eax+0x2102a46b],dh
  411e18:	popa   
  411e19:	jecxz  0x411e82
  411e1b:	inc    esp
  411e1c:	lods   eax,DWORD PTR ds:[esi]
  411e1d:	(bad)  
  411e1e:	shr    BYTE PTR [eax+0x30b6882e],cl
  411e24:	(bad)  
  411e25:	xchg   ebp,eax
  411e26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e27:	imul   ebp,DWORD PTR [edi+0x4e4f62ac],0xffffff91
  411e2e:	lahf   
  411e2f:	ret    0x5bac
  411e32:	jl     0x411eb1
  411e34:	stos   BYTE PTR es:[edi],al
  411e35:	fidivr DWORD PTR [ecx]
  411e37:	retf   
  411e38:	xchg   DWORD PTR [edx],esi
  411e3a:	out    0xf4,eax
  411e3c:	mov    ecx,0x2193de0b
  411e41:	or     bh,BYTE PTR ds:0x82b622f5
  411e47:	push   ds
  411e48:	xlat   BYTE PTR ds:[ebx]
  411e49:	cmp    ebx,DWORD PTR [ebx-0x71ba5628]
  411e4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e50:	enter  0x7f2d,0xab
  411e54:	xlat   BYTE PTR ds:[ebx]
  411e55:	dec    ecx
  411e56:	aas    
  411e57:	jge    0x411e71
  411e59:	popa   
  411e5a:	adc    ebx,DWORD PTR [edx-0x71fe92d4]
  411e60:	xchg   esi,eax
  411e61:	rcr    bl,1
  411e63:	cwde   
  411e64:	mov    eax,0x445c9acd
  411e69:	in     eax,0x41
  411e6b:	sar    BYTE PTR [esi+ecx*2],0xa1
  411e6f:	(bad)  
  411e72:	dec    edx
  411e73:	icebp  
  411e74:	add    edx,DWORD PTR es:[ecx-0x17e44acc]
  411e7b:	sbb    DWORD PTR [eax-0x44],ecx
  411e7e:	mov    ebx,0xe85bdc7
  411e83:	cs ja  0x411ece
  411e86:	xor    BYTE PTR [ebx+0x19917f35],bl
  411e8c:	push   esi
  411e8d:	and    al,ch
  411e8f:	jmp    0x3b40:0xe26c672e
  411e96:	clc    
  411e97:	adc    ecx,esi
  411e99:	loope  0x411e51
  411e9b:	mov    esp,0xdcba632b
  411ea0:	pop    esp
  411ea1:	pop    ss
  411ea2:	cmc    
  411ea3:	adc    BYTE PTR [edx+0x771dbba8],0xbd
  411eaa:	or     eax,0xbf7218d4
  411eaf:	(bad)  
  411eb0:	xlat   BYTE PTR ds:[ebx]
  411eb1:	aas    
  411eb2:	add    eax,edx
  411eb4:	sub    al,BYTE PTR [esi-0x570ccb43]
  411eba:	ins    BYTE PTR es:[edi],dx
  411ebb:	data16 lods al,BYTE PTR ds:[esi]
  411ebd:	xchg   ebp,eax
  411ebe:	rol    DWORD PTR [edi*1-0x53a07e7e],cl
  411ec5:	xor    ecx,edx
  411ec7:	mov    WORD PTR [ebx-0x17b25acf],ds
  411ecd:	inc    edx
  411ece:	cmp    al,0xe7
  411ed0:	dec    edx
  411ed1:	mov    ch,0x38
  411ed3:	dec    edi
  411ed4:	fldenv [eax-0x43]
  411ed7:	push   eax
  411ed8:	pop    esi
  411ed9:	pusha  
  411eda:	inc    edi
  411edb:	idiv   BYTE PTR [ecx]
  411edd:	ss loop 0x411f3c
  411ee0:	mov    cl,BYTE PTR [edx]
  411ee2:	aas    
  411ee3:	sub    al,0x37
  411ee5:	push   ebp
  411ee6:	pop    DWORD PTR [edi-0x75]
  411ee9:	jae    0x411f65
  411eeb:	ss in  al,0xc1
  411eee:	clc    
  411eef:	lahf   
  411ef0:	xchg   esp,eax
  411ef1:	idiv   DWORD PTR ds:[ecx+0x7ae85293]
  411ef8:	nop
  411ef9:	add    eax,0x9825df35
  411efe:	push   0x718238d3
  411f03:	xchg   ebp,eax
  411f04:	hlt    
  411f05:	xchg   ebp,eax
  411f06:	sub    DWORD PTR [ebp+ebp*1-0x3d],esp
  411f0a:	imul   esi,DWORD PTR [esi-0x2],0xce7c6632
  411f11:	sub    BYTE PTR [edi+0x76],bh
  411f14:	adc    BYTE PTR [edx-0x6d],ah
  411f17:	jl     0x411ec9
  411f19:	inc    edi
  411f1a:	jp     0x411f0c
  411f1c:	cli    
  411f1d:	or     ch,ch
  411f1f:	push   0xffffffbb
  411f21:	pop    ebx
  411f22:	out    dx,al
  411f23:	push   0xffffff9d
  411f25:	mov    dh,0x33
  411f27:	sbb    eax,0x1ccef47c
  411f2c:	mul    DWORD PTR [edx+0x7626813a]
  411f32:	xchg   ebp,eax
  411f33:	push   cs
  411f34:	add    esp,0xffffffb3
  411f37:	mov    edi,0x7018e18
  411f3c:	jmp    0xb3b6:0x9b675d6
  411f43:	aad    0x76
  411f45:	dec    esi
  411f46:	stc    
  411f47:	into   
  411f48:	xchg   edi,eax
  411f49:	lods   al,BYTE PTR ds:[esi]
  411f4a:	(bad)  
  411f4b:	data16 sub al,0x76
  411f4e:	jns    0x411f38
  411f50:	sbb    edi,ebx
  411f52:	mov    eax,0x6b10a96c
  411f57:	das    
  411f58:	cmp    eax,0xd75e6921
  411f5d:	fwait
  411f5e:	(bad)  
  411f5f:	sub    esi,ebp
  411f61:	dec    esp
  411f62:	inc    edx
  411f63:	shl    DWORD PTR gs:[edi-0xd],cl
  411f67:	mov    al,ds:0xd4fa6c38
  411f6c:	das    
  411f6d:	xor    esp,DWORD PTR [ecx+edx*4-0x175f5ded]
  411f74:	inc    esi
  411f75:	rcl    DWORD PTR [eax],0x55
  411f78:	xor    BYTE PTR [eax-0x2c81da37],0x9a
  411f7f:	pop    ds
  411f80:	or     edi,DWORD PTR [edi]
  411f82:	jl     0x411fca
  411f84:	jl     0x411f5c
  411f86:	xchg   edx,eax
  411f87:	fild   DWORD PTR [edx]
  411f89:	fstp   QWORD PTR [ebp-0x29]
  411f8c:	mov    cl,0x13
  411f8e:	sub    ebp,esi
  411f90:	not    bh
  411f92:	add    bh,BYTE PTR [edi-0x71]
  411f95:	es sbb dl,bh
  411f98:	test   eax,0x2b99b639
  411f9d:	mul    eax
  411f9f:	xlat   BYTE PTR ds:[ebx]
  411fa0:	add    al,0x4e
  411fa2:	mov    ebp,0xe52cebe1
  411fa7:	test   BYTE PTR [esi-0x1b],dh
  411faa:	stc    
  411fab:	sub    DWORD PTR [ebp-0x59],ebp
  411fae:	pop    esi
  411faf:	dec    esi
  411fb0:	(bad)  
  411fb1:	mov    al,ds:0xb783f6ec
  411fb6:	in     eax,0x15
  411fb8:	test   cl,bh
  411fba:	pushf  
  411fbb:	popf   
  411fbc:	pop    esi
  411fbd:	push   eax
  411fbe:	jmp    0x73a350ea
  411fc3:	out    dx,eax
  411fc4:	pop    edx
  411fc5:	xlat   BYTE PTR ds:[ebx]
  411fc6:	push   0xe8c3e4e8
  411fcb:	ss cdq 
  411fcd:	mov    esp,0x874ff15
  411fd2:	stos   BYTE PTR es:[edi],al
  411fd3:	(bad)  
  411fd4:	mov    eax,ds:0x5a533323
  411fd9:	xchg   BYTE PTR [ebx-0x2b],al
  411fdc:	(bad)  
  411fdd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fde:	pop    esi
  411fdf:	jbe    0x412021
  411fe1:	cs mov al,dh
  411fe4:	cwde   
  411fe5:	push   esi
  411fe6:	mov    bl,0x44
  411fe8:	dec    eax
  411fe9:	jb     0x41205c
  411feb:	stc    
  411fec:	imul   edi,DWORD PTR [eax+0x5d974d9],0x35
  411ff3:	inc    edi
  411ff4:	dec    edi
  411ff5:	jg     0x41203d
  411ff7:	jbe    0x411f9f
  411ff9:	jmp    0x412046
  411ffb:	iret   
  411ffc:	in     eax,dx
  411ffd:	mov    DWORD PTR [ebx-0x3a],esp
  412000:	mov    al,ds:0x1764e195
  412005:	shl    ecx,1
  412007:	or     al,0x12
  412009:	fs pop ss
  41200b:	jp     0x411ffe
  41200d:	nop
  41200e:	neg    BYTE PTR [edx]
  412010:	aam    0xb8
  412012:	push   cs
  412013:	jb     0x411fd2
  412015:	sbb    al,0x21
  412017:	xchg   ebp,eax
  412018:	cmp    eax,DWORD PTR gs:[edi-0x4e7a039e]
  41201f:	ret    0x823a
  412022:	xchg   esi,eax
  412023:	add    al,0xc2
  412025:	(bad)  
  412026:	iret   
  412027:	sar    DWORD PTR [edi+0x38],cl
  41202a:	test   BYTE PTR [edi],ah
  41202c:	xor    BYTE PTR [ebp+0x4d7a93df],cl
  412032:	mov    ebp,ds
  412034:	fld    DWORD PTR [ebp+eax*2+0x72afea41]
  41203b:	imul   edi,eax,0x7d949492
  412041:	mov    edx,0x51ed3977
  412046:	inc    edi
  412047:	(bad)  
  412048:	call   0x3c2656f8
  41204d:	aam    0xac
  41204f:	inc    ebx
  412050:	(bad)  
  412052:	sti    
  412053:	outs   dx,BYTE PTR ds:[esi]
  412054:	mov    ah,0xe7
  412056:	pop    ecx
  412057:	in     eax,0xbd
  412059:	mov    ebp,0x4c36e916
  41205e:	sbb    ah,bh
  412060:	xchg   BYTE PTR [ecx-0xd],dh
  412063:	das    
  412064:	mov    ebp,0x60d6eeff
  412069:	mov    dh,0x3e
  41206b:	outs   dx,DWORD PTR ds:[esi]
  41206c:	mov    ds:0xa3fe7ed0,al
  412071:	test   eax,0x3f347e52
  412076:	add    ebx,ebx
  412078:	xchg   ebp,eax
  412079:	adc    al,dh
  41207b:	outs   dx,DWORD PTR ds:[esi]
  41207c:	cdq    
  41207d:	inc    edi
  41207e:	js     0x4120b6
  412080:	pop    edx
  412081:	sub    al,BYTE PTR [eax]
  412083:	xor    al,BYTE PTR ds:0x5ac65782
  412089:	cmp    DWORD PTR [ebx-0x7cfdc024],ebx
  41208f:	sub    ebp,DWORD PTR [edi-0x45]
  412092:	ins    BYTE PTR es:[edi],dx
  412093:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412094:	lahf   
  412095:	or     al,0xd3
  412097:	ins    BYTE PTR es:[edi],dx
  412098:	inc    ebp
  412099:	daa    
  41209a:	push   eax
  41209b:	ja     0x41208c
  41209d:	outs   dx,BYTE PTR ds:[esi]
  41209e:	leave  
  41209f:	mov    ds:0xa427dca9,al
  4120a4:	out    dx,al
  4120a5:	adc    eax,DWORD PTR [ebp-0x36ef3c73]
  4120ab:	xchg   edi,eax
  4120ac:	sub    cl,dl
  4120ae:	mov    ecx,0x7f84e4fe
  4120b3:	mov    ah,0x69
  4120b5:	cdq    
  4120b6:	fdivr  DWORD PTR [ebp-0x1b88ff38]
  4120bc:	bound  esi,QWORD PTR [ecx+0x74797169]
  4120c2:	xor    al,0x56
  4120c4:	xlat   BYTE PTR ds:[ebx]
  4120c5:	or     eax,edi
  4120c7:	stos   BYTE PTR es:[edi],al
  4120c8:	fsub   DWORD PTR [ebx+0x79]
  4120cb:	popa   
  4120cc:	inc    ebx
  4120cd:	pop    ebx
  4120ce:	call   0xe1a2e6c
  4120d3:	xor    eax,0x5da3611b
  4120d8:	pop    ecx
  4120d9:	jle    0x412085
  4120db:	out    dx,al
  4120dc:	cmp    ah,BYTE PTR [eax+edx*4]
  4120df:	icebp  
  4120e0:	sub    edi,DWORD PTR [esi+0x18cd625d]
  4120e6:	or     al,0xc0
  4120e8:	in     eax,0xec
  4120ea:	jp     0x41214b
  4120ec:	and    esp,DWORD PTR [edi-0x3a]
  4120ef:	ss scas al,BYTE PTR es:[edi]
  4120f1:	sub    ebx,esi
  4120f3:	dec    ecx
  4120f4:	test   DWORD PTR [esp+ecx*2+0x798c053e],esi
  4120fb:	mov    ds:0xf699156d,eax
  412100:	mov    esp,0x63cbc845
  412105:	pop    es
  412106:	lock mov dl,0x4
  412109:	mov    ds:0xf8241aca,al
  41210e:	add    BYTE PTR [eax+0x49],0x4c
  412112:	sti    
  412113:	fidivr DWORD PTR [eax+0x3bbe7a66]
  412119:	stc    
  41211a:	inc    edi
  41211b:	xchg   ebx,eax
  41211c:	xchg   esp,eax
  41211d:	xchg   DWORD PTR [bx-0x11],edi
  412121:	add    esp,DWORD PTR [ebx-0x27cb5524]
  412127:	pop    edx
  412128:	mov    esp,DWORD PTR ds:0xb6bbfce
  41212e:	inc    ecx
  41212f:	cs ins DWORD PTR es:[edi],dx
  412131:	sbb    al,0x45
  412133:	test   al,0x8a
  412135:	imul   ecx,DWORD PTR [edx],0xedbe2446
  41213b:	test   DWORD PTR [esi-0x7c0ddfbc],ebx
  412141:	out    dx,eax
  412142:	push   ss
  412143:	push   ebx
  412144:	imul   ecx,DWORD PTR [edx-0x6947abaa],0x56
  41214b:	jecxz  0x4121a8
  41214d:	in     eax,0xb3
  41214f:	cdq    
  412150:	popf   
  412151:	or     BYTE PTR [ebx+0xc],dh
  412154:	inc    edi
  412155:	sub    DWORD PTR [eax+0x67e803e5],edx
  41215b:	dec    esi
  41215c:	cmp    al,0x15
  41215e:	xor    bh,dl
  412160:	dec    ebp
  412161:	daa    
  412162:	adc    edx,ebp
  412164:	push   ss
  412165:	out    0x6e,al
  412167:	fnstenv [edi+0x68edd1e0]
  41216d:	inc    ebp
  41216e:	call   0x1ae9a9f6
  412173:	adc    al,0x5c
  412175:	nop
  412176:	lods   eax,DWORD PTR ds:[esi]
  412177:	mov    bh,0x28
  412179:	icebp  
  41217a:	in     al,dx
  41217b:	mov    cl,0x7
  41217d:	pop    ecx
  41217e:	jl     0x412169
  412180:	retf   0x69d4
  412183:	call   0xcb3962d
  412188:	fidivr DWORD PTR gs:[ecx+0x14]
  41218c:	outs   dx,BYTE PTR ds:[esi]
  41218d:	(bad)  
  41218e:	sub    BYTE PTR [eax],ah
  412190:	dec    ebp
  412191:	mov    ds:0x86d05dd,al
  412196:	pop    edx
  412197:	dec    esp
  412198:	or     al,0xfa
  41219a:	dec    eax
  41219b:	bound  ebp,QWORD PTR [edx+0x523be571]
  4121a1:	cmp    BYTE PTR [ecx],bh
  4121a3:	cmc    
  4121a4:	and    ecx,0x12
  4121a7:	mov    dh,0x4e
  4121a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121aa:	ja     0x412200
  4121ac:	shl    BYTE PTR [esi-0x447ec66],0x7d
  4121b3:	jne    0x412217
  4121b5:	sub    eax,0x65cd3e37
  4121ba:	add    bl,BYTE PTR [edx-0x47c437b9]
  4121c0:	stc    
  4121c1:	sbb    eax,0xd713d7d1
  4121c6:	push   0x1a
  4121c8:	xor    DWORD PTR [ebx],eax
  4121ca:	icebp  
  4121cb:	push   0xfffffff5
  4121cd:	in     eax,dx
  4121ce:	xchg   ecx,eax
  4121cf:	aam    0x6d
  4121d1:	xchg   edx,eax
  4121d2:	leave  
  4121d3:	(bad)  
  4121d4:	cmp    BYTE PTR [ecx-0x62],cl
  4121d7:	sub    DWORD PTR [edi-0x130926ae],esp
  4121dd:	ffree  st(6)
  4121df:	lahf   
  4121e0:	add    DWORD PTR [eax+eiz*1],edi
  4121e3:	into   
  4121e4:	shr    BYTE PTR [edx-0x2c190a19],cl
  4121ea:	cmc    
  4121eb:	inc    edi
  4121ec:	xor    cl,dh
  4121ee:	or     ebx,DWORD PTR [ebp-0x55]
  4121f1:	nop
  4121f2:	xchg   BYTE PTR fs:[esi],dh
  4121f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121f6:	jns    0x412231
  4121f8:	std    
  4121f9:	xchg   ebx,edi
  4121fb:	xor    eax,0x99963173
  412200:	mov    eax,0x790ff96d
  412205:	int    0xeb
  412207:	arpl   WORD PTR [edx+0x71],bx
  41220a:	jg     0x412212
  41220c:	adc    al,0x9f
  41220e:	mov    edx,0xb93482e6
  412213:	pop    es
  412214:	cmp    BYTE PTR ds:0xfc7baf82,dl
  41221a:	fdivr  QWORD PTR [ecx+0x3493a0f8]
  412220:	jle    0x4121e7
  412222:	cmc    
  412223:	jecxz  0x412297
  412225:	push   0x5c5c2ca
  41222a:	or     BYTE PTR [esi+ebx*4-0x2ce9468f],dh
  412231:	pop    ebx
  412232:	mov    cl,0xdf
  412234:	inc    eax
  412235:	add    DWORD PTR [eax+0x3b],esp
  412238:	mov    ah,0xad
  41223a:	and    DWORD PTR [eax-0xc],edx
  41223d:	rcl    BYTE PTR [ebp+0x698ba2f3],cl
  412243:	hlt    
  412244:	gs dec esi
  412246:	push   cs
  412247:	sar    BYTE PTR [ebx],cl
  412249:	sub    al,0xc5
  41224b:	mov    ?,WORD PTR [esi+0x14]
  41224e:	sbb    eax,0x48123f17
  412253:	repz pop es
  412255:	inc    esp
  412256:	lock xchg DWORD PTR [edi-0x17],edx
  41225a:	cs sub al,0xd0
  41225d:	sar    BYTE PTR [ebp-0xf83e6e6],1
  412263:	rcl    ebx,cl
  412265:	sub    DWORD PTR [edx+0x1cabbcd0],edx
  41226b:	test   BYTE PTR [esi+eax*1-0x4090c0e0],dh
  412272:	mov    eax,ds:0x2f26e501
  412277:	jmp    0x4def:0xd0e935f9
  41227e:	jb     0x4122d6
  412280:	xchg   DWORD PTR [edx+0x3fa00a15],eax
  412286:	inc    esp
  412287:	adc    al,0xed
  412289:	(bad)  
  41228a:	and    al,0x5
  41228c:	lds    ebx,FWORD PTR [edx+edx*4+0xc]
  412290:	cdq    
  412291:	inc    edi
  412292:	mov    ss,WORD PTR [esi]
  412294:	jno    0x412254
  412296:	xchg   DWORD PTR [ebp+0x66],ebp
  412299:	imul   ecx,DWORD PTR [edx+0x52813109],0xab2d6c21
  4122a3:	test   eax,0xf20a9b24
  4122a8:	mov    bh,0xc1
  4122aa:	cmp    DWORD PTR [ebx+0x3877c4c],ebx
  4122b0:	mov    esp,esp
  4122b2:	adc    dl,cl
  4122b4:	inc    edi
  4122b5:	xchg   ebp,eax
  4122b6:	push   ecx
  4122b7:	repnz mov ah,0xaa
  4122ba:	mov    edx,0xd3eaece1
  4122bf:	pop    eax
  4122c0:	test   al,0x22
  4122c2:	inc    edx
  4122c3:	push   ebx
  4122c4:	into   
  4122c5:	jecxz  0x412343
  4122c7:	aam    0x4d
  4122c9:	xchg   esi,eax
  4122ca:	rcr    DWORD PTR [ecx+esi*1+0x13],cl
  4122ce:	in     eax,dx
  4122cf:	pusha  
  4122d0:	shr    BYTE PTR [ecx+0x41b2bb7f],0x37
  4122d7:	jae    0x4122f0
  4122d9:	pushf  
  4122da:	xlat   BYTE PTR ds:[ebx]
  4122db:	aaa    
  4122dc:	int3   
  4122dd:	fidivr DWORD PTR [ebx+0x8652fa7]
  4122e3:	punpckhbw mm7,QWORD PTR [edx]
  4122e6:	ror    DWORD PTR gs:[ebx+0x47a8dbff],0xce
  4122ee:	xor    eax,0x6a7d98d3
  4122f3:	rcr    BYTE PTR es:[ebp-0xbab0829],cl
  4122fa:	mov    eax,ds:0xcb940ad0
  4122ff:	js     0x4122ce
  412301:	or     BYTE PTR [ebp-0x3d8c9a9c],al
  412307:	adc    dl,0xd2
  41230a:	pop    esi
  41230b:	dec    ebp
  41230c:	jecxz  0x412387
  41230e:	or     eax,0x3da5663c
  412313:	sahf   
  412314:	inc    ebp
  412315:	mov    dl,0x1d
  412317:	dec    eax
  412318:	mov    ds:0xc058600b,al
  41231d:	xrelease xchg DWORD PTR [ecx+0x1fd6ccfc],ebp
  412324:	xor    esi,DWORD PTR [ebx+0x7c53189e]
  41232a:	nop
  41232b:	and    DWORD PTR [eax-0x497e2ff5],ebx
  412331:	fdiv   QWORD PTR [ebx-0x62b28f53]
  412337:	mov    esp,0x7920200b
  41233c:	stos   BYTE PTR es:[edi],al
  41233d:	lahf   
  41233e:	sahf   
  41233f:	mov    ch,bh
  412341:	push   cs
  412342:	jns    0x412361
  412344:	push   edi
  412345:	xlat   BYTE PTR ds:[ebx]
  412347:	jp     0x41239a
  412349:	push   0x67
  41234b:	add    BYTE PTR [edx],ah
  41234d:	mov    esp,0xf2785093
  412352:	psubsw mm4,QWORD PTR [edi-0xf]
  412356:	cmp    BYTE PTR [ebp-0x16],bl
  412359:	mov    BYTE PTR [ebx+ebp*8-0x32],dh
  41235d:	(bad)  
  41235e:	arpl   WORD PTR [ebx-0x2963fa8],si
  412364:	cmp    DWORD PTR [edx],0x5f
  412367:	nop
  412368:	mov    al,ds:0x7e84be9f
  41236d:	pop    esi
  41236e:	in     eax,dx
  41236f:	mov    BYTE PTR [eax],al
  412371:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412372:	mov    edi,0x72309d2e
  412377:	mov    ecx,DWORD PTR [eax+0x254dd2b7]
  41237d:	mov    dl,0xc2
  41237f:	es int 0xf4
  412382:	push   es
  412383:	mov    cl,0x67
  412385:	rol    edx,0xbd
  412388:	inc    esp
  412389:	adc    DWORD PTR [ecx-0x440a38f0],ebp
  41238f:	fistp  QWORD PTR [ecx+edi*2]
  412392:	call   0x9d8dba22
  412397:	or     al,0x4b
  412399:	repnz mov DWORD PTR [eax-0x5fa7097a],ecx
  4123a0:	jecxz  0x412336
  4123a2:	stc    
  4123a3:	(bad)  
  4123a4:	call   0x1d2a9c0b
  4123a9:	mov    ecx,0x62e4bb07
  4123ae:	out    dx,al
  4123af:	xchg   edx,eax
  4123b0:	xor    al,0x44
  4123b2:	push   esi
  4123b4:	in     eax,dx
  4123b5:	mov    ebx,0x7a7a437e
  4123ba:	mov    ds:0xabe0be5c,al
  4123bf:	sbb    dh,BYTE PTR [esi-0x24211ce3]
  4123c5:	push   es
  4123c6:	or     bh,BYTE PTR [ebx-0x1606e7fe]
  4123cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4123cd:	mov    ds:0x8741d8d,al
  4123d2:	jg     0x41238d
  4123d4:	call   0x943fa6cd
  4123d9:	cmp    BYTE PTR [ecx+0x245e2125],0xdf
  4123e0:	dec    ecx
  4123e1:	aam    0x5c
  4123e3:	pop    esi
  4123e4:	fisubr WORD PTR [ebp-0x6070ca81]
  4123ea:	jp     0x412439
  4123ec:	retf   
  4123ed:	data16 fisub WORD PTR [ecx+0x57d42aa2]
  4123f4:	loop   0x41245f
  4123f6:	aas    
  4123f7:	adc    ch,BYTE PTR [eax]
  4123f9:	inc    ecx
  4123fa:	das    
  4123fb:	and    DWORD PTR [ebx],edi
  4123fd:	stos   DWORD PTR es:[edi],eax
  4123fe:	retf   0xc5f4
  412401:	js     0x412385
  412403:	add    al,0x95
  412405:	push   edx
  412406:	jnp    0x41239e
  412408:	mov    ecx,?
  41240a:	in     al,0x4c
  41240c:	or     al,0xcd
  41240e:	sti    
  41240f:	in     al,0x4e
  412411:	mov    ah,0x43
  412413:	adc    eax,0x45af766e
  412418:	imul   ebp,ecx,0x30e10be9
  41241e:	iret   
  41241f:	retf   0xa145
  412422:	sbb    bh,BYTE PTR [edx-0x462cd636]
  412428:	mov    eax,ds:0x26d33f5
  41242d:	adc    BYTE PTR [edi+0x636574e],bl
  412433:	inc    ecx
  412434:	pop    ebp
  412435:	stos   BYTE PTR es:[edi],al
  412436:	out    0xf7,eax
  412438:	retf   0x816f
  41243b:	or     ecx,edi
  41243d:	aad    0x22
  41243f:	cmp    eax,0xcf9f1bc3
  412444:	inc    ecx
  412445:	push   esi
  412446:	ret    0x624f
  412449:	cmp    bl,BYTE PTR [eax-0x70]
  41244c:	test   DWORD PTR [eax+edx*4],ebx
  41244f:	cli    
  412450:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  412452:	push   0x47be5cf0
  412457:	and    ebx,edi
  412459:	cmc    
  41245a:	xchg   edi,eax
  41245b:	jae    0x412417
  41245d:	xor    DWORD PTR [edi+0x42],ecx
  412460:	lea    ebx,[ecx+0xf6a6a65]
  412466:	or     eax,0xcee635ef
  41246b:	push   es
  41246c:	lods   eax,DWORD PTR ds:[esi]
  41246d:	sub    BYTE PTR [esi+0x2d404a4a],bl
  412473:	(bad)  
  412474:	push   ebp
  412475:	xor    edi,DWORD PTR [edi-0x74]
  412478:	jne    0x41242e
  41247a:	push   edx
  41247b:	div    BYTE PTR [ecx-0x63e4d28e]
  412481:	iret   
  412482:	sahf   
  412483:	les    edi,FWORD PTR [esi-0x27]
  412486:	pop    eax
  412487:	sub    DWORD PTR [ebx-0x23efb4f9],esi
  41248d:	cmc    
  41248e:	mov    bl,0xa5
  412490:	mov    DWORD PTR [ecx+0x5697c14b],esp
  412496:	mov    al,0xd5
  412498:	mov    WORD PTR [ebp+0x15],?
  41249b:	cmp    al,0x0
  41249d:	sub    BYTE PTR [edx-0x1698725],ah
  4124a3:	cmp    dl,BYTE PTR [ebp+0x3]
  4124a6:	aaa    
  4124a7:	add    al,0x4b
  4124a9:	pop    esi
  4124aa:	jo     0x4124e5
  4124ac:	mov    al,0x29
  4124ae:	lea    ecx,[esp+eiz*4]
  4124b1:	sbb    bl,bh
  4124b3:	not    DWORD PTR [ebp+0x1472f3c7]
  4124b9:	xor    DWORD PTR [edi],edi
  4124bb:	add    BYTE PTR [edi],bh
  4124bd:	cmp    al,BYTE PTR [edx+0x54]
  4124c0:	xor    BYTE PTR [ecx],bl
  4124c2:	js     0x412515
  4124c4:	mov    cs,WORD PTR [ecx+0x3d]
  4124c7:	rcl    bl,1
  4124c9:	mov    ch,0x9a
  4124cb:	adc    eax,0xb0a39cd8
  4124d0:	push   es
  4124d1:	lods   eax,DWORD PTR ds:[esi]
  4124d2:	add    edx,0xe433543f
  4124d8:	and    BYTE PTR [ecx-0x9],dh
  4124db:	fsubr  st,st(0)
  4124dd:	add    ch,BYTE PTR [ecx]
  4124df:	mov    ah,0x5
  4124e1:	jb     0x412524
  4124e3:	add    eax,0xd6991f20
  4124e8:	ror    DWORD PTR [edx-0x56],1
  4124eb:	mov    bh,0xb3
  4124ed:	mov    edi,0xf1855d2d
  4124f2:	(bad)  
  4124f3:	jbe    0x41248c
  4124f5:	pop    edi
  4124f6:	imul   DWORD PTR [ebx+edi*8-0x1f]
  4124fa:	adc    eax,0x1bbd207d
  4124ff:	push   edx
  412500:	sub    BYTE PTR [edx-0x4f],0x2c
  412504:	in     eax,0xf2
  412506:	or     eax,DWORD PTR [ebx+0x31]
  412509:	call   DWORD PTR [edi+0x3035ed28]
  41250f:	push   edi
  412510:	jg     0x41256f
  412512:	std    
  412513:	loopne 0x412498
  412515:	jb     0x4124bd
  412517:	fwait
  412518:	mov    edx,DWORD PTR [ebp+esi*1-0x5e3a5ca6]
  41251f:	jl     0x4124b7
  412521:	or     cl,0x50
  412524:	or     bh,BYTE PTR [ecx]
  412526:	std    
  412527:	add    DWORD PTR [edx+edi*8+0x6d],ebp
  41252b:	ret    
  41252c:	lods   eax,DWORD PTR ds:[esi]
  41252d:	ins    BYTE PTR es:[edi],dx
  41252e:	push   ds
  41252f:	xchg   ebx,eax
  412530:	adc    ah,BYTE PTR [edi-0x18]
  412533:	in     eax,dx
  412534:	mov    ch,0xf1
  412536:	bound  edx,QWORD PTR [ebp+0x13f885d8]
  41253c:	outs   dx,BYTE PTR ds:[esi]
  41253d:	scas   eax,DWORD PTR es:[edi]
  41253e:	sbb    ebx,DWORD PTR [ebx-0x24]
  412541:	adc    ecx,0xe7e1b72a
  412547:	popf   
  412548:	jp     0x4124e6
  41254a:	mov    dh,BYTE PTR [edi-0x7dc1a967]
  412550:	pop    ebx
  412551:	mov    bl,0xc5
  412553:	ror    BYTE PTR [esi],cl
  412555:	stc    
  412556:	pop    eax
  412557:	in     eax,dx
  412558:	mov    ecx,0x96a1df29
  41255d:	popa   
  41255e:	mov    edi,0x1fefa27
  412563:	mov    ch,0x43
  412565:	ret    
  412566:	cmp    edi,DWORD PTR [ecx+0x474da293]
  41256c:	ret    
  41256d:	int3   
  41256e:	sbb    eax,0x6636c4d2
  412573:	add    BYTE PTR [ecx],al
  412575:	(bad)  
  412577:	pop    ebx
  412578:	dec    ecx
  412579:	ror    DWORD PTR [edi+edx*4],1
  41257c:	lea    edi,[ebx+0x5c]
  41257f:	or     DWORD PTR [edi-0x5b],edi
  412582:	pop    edx
  412583:	daa    
  412584:	mov    ebp,DWORD PTR [edi+0x5a]
  412587:	pop    esi
  412588:	add    al,0x74
  41258a:	mov    ch,0x77
  41258c:	sbb    edi,ecx
  41258e:	mov    BYTE PTR [edx],dh
  412590:	mov    eax,ds:0xc5be9b6f
  412595:	sub    al,0x83
  412597:	(bad)  
  412598:	sti    
  412599:	aad    0x56
  41259b:	(bad)  
  41259c:	fisttp QWORD PTR [esi]
  41259e:	xlat   BYTE PTR ds:[ebx]
  41259f:	add    eax,0x66ab2d2f
  4125a4:	dec    esp
  4125a5:	mov    cl,0x70
  4125a7:	mov    esi,0x2fcbf0b5
  4125ac:	aad    0xcb
  4125ae:	fwait
  4125af:	pop    ds
  4125b0:	xor    DWORD PTR ds:0x2be70428,ebp
  4125b6:	pusha  
  4125b7:	je     0x4125e6
  4125b9:	ret    
  4125ba:	dec    eax
  4125bb:	fcmove st,st(4)
  4125bd:	cld    
  4125be:	mov    al,ds:0x75400198
  4125c3:	mov    DWORD PTR [esi-0xc27bfe2],ebp
  4125c9:	or     DWORD PTR [esp+eax*4],ecx
  4125cc:	or     DWORD PTR [edx+edi*4],0x7482aea8
  4125d3:	inc    esp
  4125d4:	fild   DWORD PTR [eax]
  4125d6:	push   esp
  4125d7:	sbb    BYTE PTR [ecx+0x1a],dh
  4125da:	dec    edi
  4125db:	or     dh,BYTE PTR [edi+0x657d7b04]
  4125e1:	test   DWORD PTR [eax],0xd56c8fe2
  4125e7:	push   ds
  4125e8:	push   ebp
  4125e9:	pop    ds
  4125ea:	pop    ecx
  4125eb:	lahf   
  4125ec:	pop    ss
  4125ed:	push   0xa4c8d98a
  4125f2:	push   ds
  4125f3:	fdiv   st(0),st
  4125f5:	jmp    0x8e0:0xa4b145da
  4125fc:	mov    DWORD PTR [edi],0x360909e2
  412602:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412604:	sub    eax,DWORD PTR [eax+0x24]
  412607:	and    DWORD PTR [edx],edx
  412609:	loop   0x41262e
  41260b:	sar    esp,0x7b
  41260e:	add    DWORD PTR [esi+0x6a],0x689e04c8
  412615:	mov    ds:0xf42dde3d,al
  41261a:	or     BYTE PTR [ebp+0x77394533],bl
  412620:	fisttp WORD PTR ds:0x6cbea005
  412626:	mov    ebp,0x7f6beafc
  41262b:	popa   
  41262c:	bound  esi,QWORD PTR [edi+0x1f]
  41262f:	int3   
  412630:	ins    DWORD PTR es:[edi],dx
  412631:	stos   BYTE PTR es:[edi],al
  412632:	lock mov eax,edx
  412635:	jae    0x412652
  412637:	inc    edx
  412638:	sub    al,BYTE PTR [ecx+0x25f31f82]
  41263e:	es and eax,0x3cec317c
  412644:	mov    ebx,0xbbf30fde
  412649:	sahf   
  41264a:	sub    eax,0x711122ce
  41264f:	fist   DWORD PTR [esp+ecx*8-0x8]
  412653:	int    0xf4
  412655:	sbb    eax,0xa12e9982
  41265a:	cmp    BYTE PTR [eax+0x7ad155b0],dl
  412660:	push   ecx
  412661:	mov    ecx,DWORD PTR [ecx+ebp*4]
  412664:	mov    DWORD PTR [edi-0x4efd22c7],eax
  41266a:	pop    es
  41266b:	xchg   BYTE PTR [edi-0x7aa8a36f],bl
  412671:	mov    ebp,0xa71d867e
  412676:	and    al,0xa3
  412678:	mov    WORD PTR [edx-0x4b],?
  41267b:	cmp    BYTE PTR [eax+0x4b],dl
  41267e:	sar    ah,0x3e
  412681:	jle    0x4126c4
  412683:	js     0x41265b
  412685:	test   BYTE PTR [eax-0x73e0860b],al
  41268b:	test   edi,ecx
  41268d:	stc    
  41268e:	push   ebx
  41268f:	sub    dl,BYTE PTR [eax+0x56cee73f]
  412695:	sbb    esi,DWORD PTR ds:0x84615808
  41269b:	fstp   DWORD PTR [ebx]
  41269d:	adc    ah,BYTE PTR [ebx+eiz*4-0x78866c71]
  4126a4:	call   0x8b96:0xb4dfbc9e
  4126ab:	mov    bh,0xdb
  4126ad:	cmp    esp,edi
  4126af:	inc    ebp
  4126b0:	mov    al,ds:0x71b259d1
  4126b5:	sub    BYTE PTR [ebx],bh
  4126b7:	add    al,0xb0
  4126b9:	xchg   DWORD PTR ds:0x8652aba5,ebp
  4126bf:	and    eax,0xf66b6c31
  4126c4:	dec    eax
  4126c5:	pop    edx
  4126c6:	or     al,0x17
  4126c8:	mov    ah,0x96
  4126ca:	and    eax,0xa1f90e70
  4126cf:	push   0xddc3538f
  4126d4:	push   eax
  4126d5:	fisub  DWORD PTR [ebx+0x12628ca5]
  4126db:	les    edx,FWORD PTR [ebp-0x37]
  4126de:	adc    DWORD PTR [eax+eax*2+0x11],0x7395a86d
  4126e6:	out    dx,eax
  4126e7:	xor    ch,BYTE PTR [ecx+0x2c]
  4126ea:	push   eax
  4126eb:	adc    DWORD PTR [ebp+0x5b],esi
  4126ee:	repz push esi
  4126f0:	(bad)  
  4126f1:	adc    DWORD PTR [esi-0x2cddc862],ebp
  4126f7:	outs   dx,DWORD PTR ds:[esi]
  4126f8:	push   ebp
  4126f9:	lahf   
  4126fa:	dec    edi
  4126fb:	adc    BYTE PTR [ecx],dh
  4126fd:	cli    
  4126fe:	push   es
  4126ff:	pop    eax
  412700:	(bad)  
  412702:	jo     0x412735
  412704:	jno    0x412708
  412706:	daa    
  412707:	lock out dx,al
  412709:	sbb    bh,bh
  41270b:	test   al,0xe2
  41270d:	mov    ah,0xac
  41270f:	sub    BYTE PTR [esi+0x2a],ch
  412712:	inc    ecx
  412713:	retf   
  412714:	inc    edx
  412715:	mov    esi,0xc0c76669
  41271a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41271b:	xor    al,BYTE PTR [esi+0x19]
  41271e:	aad    0xac
  412720:	inc    ebp
  412721:	lahf   
  412722:	pop    esi
  412723:	and    eax,0x18185c76
  412728:	sub    al,0xf5
  41272a:	sbb    eax,0x768138fe
  41272f:	std    
  412730:	test   DWORD PTR [ebx+0x79e0976a],ebx
  412736:	xor    BYTE PTR [edx-0x2b3acad],0xfa
  41273d:	push   ebp
  41273e:	imul   edi,DWORD PTR [eax+ebp*4],0x2c
  412742:	(bad)  
  412743:	xor    dl,ah
  412745:	and    eax,0xecd6868
  41274a:	xlat   BYTE PTR ds:[ebx]
  41274b:	ja     0x41275e
  41274d:	mov    ecx,0xc505eea5
  412752:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412753:	ja     0x41277c
  412755:	xor    ah,bl
  412757:	or     ecx,esp
  412759:	enter  0x2f4f,0xec
  41275d:	nop
  41275e:	adc    al,0x3c
  412760:	pop    edi
  412761:	daa    
  412762:	cdq    
  412763:	add    ebp,DWORD PTR [edx]
  412765:	fild   DWORD PTR [esi+ebp*4-0x397f04fd]
  41276c:	test   ecx,ebx
  41276e:	jbe    0x4127e2
  412770:	mov    ecx,0x2c697f
  412775:	jge    0x41277f
  412777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412778:	call   0xa280:0xad398ef6
  41277f:	hlt    
  412780:	pop    esp
  412781:	jge    0x4127ef
  412783:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412784:	femms  
  412786:	rol    esi,0x32
  412789:	cmc    
  41278a:	outs   dx,BYTE PTR ds:[esi]
  41278b:	mov    esp,0xb89974f7
  412790:	push   es
  412791:	fcomp  DWORD PTR [eax]
  412793:	mov    cl,0x86
  412795:	push   ss
  412796:	repz fsubp st(6),st
  412799:	imul   esi,DWORD PTR ds:0x9ca3bd88,0x24968943
  4127a3:	mov    al,ds:0xa370e6
  4127a8:	(bad)  
  4127a9:	push   ecx
  4127aa:	ja     0x4127de
  4127ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4127ad:	rol    BYTE PTR gs:[ebp+0x615926b7],0xd9
  4127b5:	gs icebp 
  4127b7:	jmp    0x8fd9a6cc
  4127bc:	fs (bad) 
  4127be:	mov    al,0x4a
  4127c0:	sbb    DWORD PTR [edx],0x44ba2fb2
  4127c6:	sub    al,0xfb
  4127c8:	mov    ebp,0x8d02616c
  4127cd:	xor    eax,0x6fc6fec7
  4127d2:	fwait
  4127d3:	ds pop edx
  4127d5:	cmp    edi,0x45f4358f
  4127db:	add    edi,edx
  4127dd:	pop    ds
  4127de:	xchg   BYTE PTR [ebp+edi*4-0x74],al
  4127e2:	cld    
  4127e3:	ret    
  4127e4:	leave  
  4127e5:	xchg   DWORD PTR [ebx-0x27],edi
  4127e8:	imul   ebx,eax,0xdc819cc0
  4127ee:	mov    ecx,0x6abdde66
  4127f3:	adc    ch,BYTE PTR [eax-0x1873affb]
  4127f9:	lock or edx,DWORD PTR [esi-0x2b]
  4127fd:	loope  0x412879
  4127ff:	mov    DWORD PTR [ecx+0x46],edx
  412802:	pop    ebp
  412803:	xchg   DWORD PTR [ebx+0x2be11101],ebp
  412809:	push   cs
  41280a:	bound  edx,QWORD PTR [ecx]
  41280c:	int    0xe1
  41280e:	jg     0x412877
  412810:	in     al,dx
  412811:	mov    ebp,0xab40b9f0
  412816:	dec    esi
  412817:	sub    eax,0x4c1e90c1
  41281c:	cld    
  41281d:	xor    al,0x2a
  41281f:	fld    st(4)
  412821:	test   BYTE PTR [edi-0x4709916f],ch
  412827:	xor    BYTE PTR [ecx+ecx*8-0x43],bl
  41282b:	add    al,0x4
  41282d:	add    DWORD PTR [esi+ebp*2-0x74],edx
  412831:	and    edi,DWORD PTR [edi+0x41]
  412834:	add    DWORD PTR [esi],esp
  412836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412837:	call   0xe5c2:0xb2def888
  41283e:	mov    edi,0xa15bcaec
  412843:	pop    edx
  412844:	adc    eax,0xa8e043be
  41284a:	or     BYTE PTR [edi+0x3f780728],0x49
  412851:	mov    BYTE PTR [ebx+0x41177837],ch
  412857:	dec    ebp
  412858:	jnp    0x412866
  41285a:	sti    
  41285b:	push   0xffffffbe
  41285d:	mov    es,WORD PTR ds:0x4d380c83
  412863:	pop    esi
  412864:	in     eax,dx
  412865:	jg     0x41283f
  412867:	and    DWORD PTR [ebp-0x56],ecx
  41286a:	loop   0x4128c2
  41286c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41286d:	neg    ecx
  41286f:	push   ebp
  412870:	mov    ds:0xc43f12db,eax
  412875:	test   al,0x93
  412877:	xor    al,0x30
  412879:	imul   ebx,DWORD PTR [eax+0x7c],0x8bce1414
  412880:	mov    esp,0x9fde94eb
  412885:	adc    eax,0x762f0c94
  41288a:	mov    ah,0x5b
  41288c:	enter  0x2140,0xd0
  412890:	dec    ecx
  412891:	and    eax,0xffffffd3
  412894:	gs jle 0x412911
  412897:	jg     0x4128f2
  412899:	mov    es,WORD PTR [ecx-0x74ef62ca]
  41289f:	rol    BYTE PTR [edx-0x54751a5e],cl
  4128a5:	xchg   ebx,eax
  4128a6:	adc    BYTE PTR ds:[esi-0x2d],0x1d
  4128ab:	adc    eax,0xd5cb0b78
  4128b0:	ins    DWORD PTR es:[edi],dx
  4128b1:	mov    BYTE PTR [ebp+0x3a25801d],dl
  4128b7:	loope  0x4128a4
  4128b9:	clc    
  4128ba:	push   ebx
  4128bb:	sub    ebx,0x7e
  4128be:	gs push cs
  4128c0:	in     eax,dx
  4128c1:	xor    eax,0x97b3104e
  4128c6:	inc    eax
  4128c7:	pop    esi
  4128c8:	mov    esi,0xd72bdd0a
  4128cd:	int3   
  4128ce:	push   cs
  4128cf:	or     DWORD PTR [ebp+0x7f08ad20],esp
  4128d5:	jl     0x4128c7
  4128d7:	fdivr  DWORD PTR ds:0xa92ee3cd
  4128dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128de:	lahf   
  4128df:	mov    gs,WORD PTR [esi+ecx*8+0x1f6286a1]
  4128e6:	aas    
  4128e7:	or     DWORD PTR [edx],edi
  4128e9:	repnz repnz shl BYTE PTR [ebp+0x27ba63f],0x53
  4128f2:	loop   0x4128e8
  4128f4:	push   cs
  4128f5:	retf   0xc27c
  4128f8:	(bad)  
  4128f9:	xlat   BYTE PTR ds:[ebx]
  4128fa:	and    bh,cl
  4128fc:	sub    eax,0x29797bc4
  412901:	fdivr  QWORD PTR [edx]
  412903:	xchg   edx,eax
  412904:	fld    DWORD PTR [eax+0x7e573279]
  41290a:	push   0xd
  41290c:	inc    ebp
  41290d:	sbb    bh,BYTE PTR [ebx]
  41290f:	gs mov ebp,0xa0aaf434
  412915:	xor    al,0x64
  412917:	cmp    ebp,DWORD PTR [ebp-0x46ed842]
  41291d:	out    0x39,eax
  41291f:	lock add eax,0xe0202485
  412925:	jmp    0x6d234810
  41292a:	mov    ah,0x83
  41292c:	mov    BYTE PTR [ebp+0x440d0d5f],bh
  412932:	jle    0x412928
  412934:	imul   ecx,DWORD PTR [edx+0xb34935d],0xffffffb9
  41293b:	into   
  41293c:	dec    edx
  41293d:	ja     0x412909
  41293f:	or     al,0x97
  412941:	cmp    al,0x65
  412943:	adc    ah,BYTE PTR [ebx+0x3e]
  412946:	int3   
  412947:	(bad)  
  412948:	or     eax,0x1e4c51fc
  41294d:	dec    ebx
  41294e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41294f:	xor    eax,0x541b3be5
  412954:	call   0xed48:0x52acd4f7
  41295b:	pop    edi
  41295c:	outs   dx,BYTE PTR ds:[esi]
  41295d:	ret    0xcf89
  412960:	imul   ecx,DWORD PTR [edx],0x34df6e
  412966:	out    0x41,eax
  412968:	fidiv  DWORD PTR [ebp-0x63]
  41296b:	jbe    0x412922
  41296d:	cli    
  41296e:	les    edi,FWORD PTR [ebx]
  412970:	mov    al,BYTE PTR [edi-0x1f]
  412973:	mov    ah,0x75
  412975:	or     DWORD PTR ds:0x149ce93b,esi
  41297b:	push   edi
  41297c:	sbb    DWORD PTR [edx-0x8],ecx
  41297f:	mov    ecx,0xf8f0473f
  412984:	iret   
  412985:	mov    ds:0xa5812d22,al
  41298a:	les    esp,FWORD PTR [edi-0x47ec9733]
  412990:	add    BYTE PTR [ebp-0x61c1ef4b],al
  412996:	adc    dh,ch
  412998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412999:	pop    edi
  41299a:	push   eax
  41299b:	hlt    
  41299c:	es loope 0x412978
  41299f:	(bad)  
  4129a0:	out    0x77,al
  4129a2:	inc    edx
  4129a3:	cwde   
  4129a4:	std    
  4129a5:	call   0x494293a7
  4129aa:	js     0x412a02
  4129ac:	aad    0x73
  4129ae:	and    eax,0xd5457267
  4129b3:	and    BYTE PTR [edx],dl
  4129b5:	sub    DWORD PTR [edx+eiz*2],edx
  4129b8:	sbb    eax,edi
  4129ba:	push   ds
  4129bb:	push   esp
  4129bc:	sbb    ebx,DWORD PTR [ebx-0x7434b2bc]
  4129c2:	bnd jb 0x4129d2
  4129c5:	jmp    0x4129ee
  4129c7:	jb     0x412977
  4129c9:	mov    ch,0x51
  4129cb:	popa   
  4129cc:	push   eax
  4129cd:	or     eax,0xe7e887ce
  4129d2:	add    ebx,DWORD PTR [edi]
  4129d4:	dec    eax
  4129d5:	cmp    edi,DWORD PTR [ebx-0x757502d8]
  4129db:	in     al,0x86
  4129dd:	jae    0x41298b
  4129df:	sbb    al,0xc0
  4129e1:	jecxz  0x41297d
  4129e3:	in     al,0xec
  4129e5:	enter  0x4a7f,0x5d
  4129e9:	test   eax,0xbe5e5c56
  4129ee:	inc    edi
  4129ef:	shr    BYTE PTR [edx+0x2a622ab2],cl
  4129f5:	pop    ds
  4129f6:	leave  
  4129f7:	and    al,0x8f
  4129f9:	mov    bl,0xbc
  4129fb:	lods   eax,DWORD PTR ds:[esi]
  4129fc:	or     DWORD PTR [esi],esi
  4129fe:	jno    0x412a3e
  412a00:	pop    ebp
  412a01:	add    ebp,ebp
  412a03:	arpl   WORD PTR [esi+0x6ec8c74],ax
  412a09:	std    
  412a0a:	ins    DWORD PTR es:[edi],dx
  412a0b:	push   ebp
  412a0c:	scas   al,BYTE PTR es:[edi]
  412a0d:	sub    edi,edi
  412a0f:	mov    edx,0xbdbd5d1c
  412a14:	push   ebx
  412a15:	sub    esp,DWORD PTR ds:0xdc815523
  412a1b:	rcr    BYTE PTR [ebp+0x65],0x9a
  412a1f:	add    dl,BYTE PTR [ecx+0x3c2d2794]
  412a25:	inc    edx
  412a26:	fadd   QWORD PTR ds:[eax]
  412a29:	xlat   BYTE PTR ds:[ebx]
  412a2a:	gs out 0x7a,al
  412a2d:	in     eax,0x67
  412a2f:	pop    esp
  412a30:	or     ebp,DWORD PTR ds:0x24f10194
  412a36:	mov    bh,0xbb
  412a38:	and    al,BYTE PTR [eax]
  412a3a:	(bad)  
  412a3b:	cs mov ebp,0xbe0b74c1
  412a41:	xchg   edi,eax
  412a42:	adc    bl,dh
  412a44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a45:	sub    ah,BYTE PTR [edx-0x300298b]
  412a4b:	test   DWORD PTR [edx+0x2622c30f],ecx
  412a51:	jp     0x4129f2
  412a53:	mov    esp,DWORD PTR [esi]
  412a55:	outs   dx,BYTE PTR ds:[esi]
  412a56:	call   0xa10428a9
  412a5b:	pop    esi
  412a5c:	jo     0x412a20
  412a5e:	xor    al,0xab
  412a60:	pop    esp
  412a61:	and    ebp,DWORD PTR [ebx+edi*2]
  412a64:	shl    BYTE PTR [eax+ecx*1],1
  412a67:	stos   DWORD PTR es:[edi],eax
  412a68:	out    dx,eax
  412a69:	adc    cl,BYTE PTR [eax]
  412a6b:	fs xor al,0xf3
  412a6e:	and    ebx,DWORD PTR [edx-0x15]
  412a71:	(bad)  
  412a72:	mov    eax,DWORD PTR [edi+0x71b54a27]
  412a78:	stos   DWORD PTR es:[edi],eax
  412a79:	and    BYTE PTR [ebp+eiz*8-0x53],ch
  412a7d:	dec    edi
  412a7e:	or     eax,ebp
  412a80:	inc    esi
  412a81:	cmp    bh,BYTE PTR [ecx-0x61eb51aa]
  412a87:	aad    0xaa
  412a89:	jb     0x412add
  412a8b:	aaa    
  412a8c:	sahf   
  412a8d:	lahf   
  412a8e:	int3   
  412a8f:	js     0x412a8c
  412a91:	leave  
  412a92:	or     eax,DWORD PTR [ebp-0x1a0cd5fe]
  412a98:	dec    eax
  412a99:	lahf   
  412a9a:	push   esp
  412a9b:	popf   
  412a9c:	arpl   dx,si
  412a9e:	fs jno 0x412aa3
  412aa1:	mov    eax,ds:0x36e57938
  412aa6:	mov    cl,0x89
  412aa8:	jmp    0x412a86
  412aaa:	mov    ah,0x55
  412aac:	mov    dh,BYTE PTR [ebp-0x43]
  412aaf:	sbb    BYTE PTR [ecx-0x33],dl
  412ab2:	retf   0x6bb0
  412ab5:	pusha  
  412ab6:	add    esp,DWORD PTR [edx+eiz*8+0x3e]
  412aba:	sbb    dl,BYTE PTR [esi-0x37]
  412abd:	in     eax,0xd2
  412abf:	xchg   BYTE PTR [edi-0x4f130017],ah
  412ac5:	add    DWORD PTR [edi+0x23],0xcbb109de
  412acc:	int3   
  412acd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ace:	jl     0x412a8b
  412ad0:	daa    
  412ad1:	cmc    
  412ad2:	mul    esp
  412ad4:	push   ebp
  412ad5:	cdq    
  412ad6:	or     ebp,DWORD PTR [esi+eax*2-0x3dc91f0]
  412add:	xchg   esi,eax
  412ade:	adc    BYTE PTR [eax],bl
  412ae0:	sub    esp,DWORD PTR [esi+0x33d6ad2e]
  412ae6:	outs   dx,BYTE PTR ds:[esi]
  412ae7:	test   DWORD PTR [edx-0x7aaf5f98],edi
  412aed:	arpl   WORD PTR [ebp-0x5eb2cef],sp
  412af3:	jmp    0x41d9:0xa7a2ce66
  412afa:	les    ebp,FWORD PTR [esi]
  412afc:	in     eax,dx
  412afd:	cmp    eax,0xf114ae
  412b02:	xor    dh,bh
  412b04:	mov    fs,eax
  412b06:	retf   0xe630
  412b09:	and    al,0xbf
  412b0b:	mov    ah,0x33
  412b0d:	hlt    
  412b0e:	pop    ebx
  412b0f:	and    BYTE PTR [edx],dh
  412b11:	mov    ah,0x19
  412b13:	iret   
  412b14:	in     eax,dx
  412b15:	pop    esi
  412b16:	pop    edi
  412b18:	jae    0x412b2b
  412b1a:	inc    edi
  412b1b:	lods   al,BYTE PTR ds:[esi]
  412b1c:	pop    ds
  412b1d:	loopne 0x412b62
  412b1f:	pop    edi
  412b20:	int3   
  412b21:	cmp    esp,edi
  412b23:	jge    0x412b8f
  412b25:	mov    eax,0xd65e339d
  412b2a:	jmp    0x412b05
  412b2c:	jle    0x412b84
  412b2e:	clc    
  412b2f:	pop    esi
  412b30:	pop    ebp
  412b31:	scas   eax,DWORD PTR es:[edi]
  412b32:	dec    ebx
  412b33:	push   edx
  412b34:	or     edi,DWORD PTR ds:0xcb28f84c
  412b3a:	mov    bl,0x52
  412b3c:	push   eax
  412b3d:	iret   
  412b3e:	dec    esp
  412b3f:	dec    esi
  412b40:	ins    BYTE PTR es:[edi],dx
  412b41:	shl    BYTE PTR [esi-0x590d301e],1
  412b47:	scas   al,BYTE PTR es:[edi]
  412b48:	dec    esp
  412b49:	mov    ebp,0xf390137
  412b4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b4f:	ja     0x412b0f
  412b51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b52:	xchg   esp,eax
  412b53:	add    ebp,DWORD PTR [ebp-0x2a723fcd]
  412b59:	mov    gs,WORD PTR [ecx+0x65e8822a]
  412b5f:	pandn  mm2,QWORD PTR [esi+0x56179ffd]
  412b66:	xor    DWORD PTR [edi+0x31],esi
  412b69:	or     eax,0xbdb2faec
  412b6e:	pop    edx
  412b6f:	mov    al,0x1f
  412b71:	mov    ebp,0xf3cd1454
  412b76:	stos   DWORD PTR es:[edi],eax
  412b77:	popa   
  412b78:	fisubr DWORD PTR [edi+0x33]
  412b7b:	mov    ch,0xc9
  412b7d:	and    DWORD PTR [ecx+eax*8+0x1d],0x36
  412b82:	adc    al,0x53
  412b84:	sbb    esp,DWORD PTR [ecx+ebx*8-0x7d7155ce]
  412b8b:	test   eax,0x8aefffc8
  412b90:	sbb    edi,DWORD PTR [ecx-0x9]
  412b93:	mov    edx,0xe1b81bff
  412b98:	cli    
  412b99:	out    dx,eax
  412b9a:	cmc    
  412b9b:	cmc    
  412b9c:	mov    bh,0xc4
  412b9e:	aas    
  412b9f:	adc    eax,0x52425aa4
  412ba4:	repz in al,dx
  412ba6:	scas   eax,DWORD PTR es:[edi]
  412ba7:	jp     0x412c0d
  412ba9:	int3   
  412baa:	cld    
  412bab:	scas   eax,DWORD PTR es:[edi]
  412bac:	or     dh,0x47
  412baf:	test   ebx,edx
  412bb1:	sbb    eax,DWORD PTR [eax-0x69853c5a]
  412bb7:	(bad)  
  412bb8:	mov    al,ds:0xa494fa64
  412bbd:	test   DWORD PTR [ecx-0x70],ebp
  412bc0:	jnp    0x412bc7
  412bc2:	xchg   dh,bh
  412bc4:	xchg   edi,eax
  412bc5:	jecxz  0x412bd9
  412bc7:	fnsave [eax+0x4b]
  412bca:	dec    esi
  412bcb:	jle    0x412c15
  412bcd:	add    DWORD PTR [edx-0xb1fcb60],0x6cbb32b4
  412bd7:	jb     0x412b69
  412bd9:	cli    
  412bda:	ss inc ebx
  412bdc:	mov    eax,0x9c01cd2e
  412be1:	mov    BYTE PTR [ebx],dh
  412be3:	xchg   edx,eax
  412be4:	mov    ch,0x59
  412be6:	(bad)  
  412be7:	aad    0x9c
  412be9:	xchg   ebx,eax
  412bea:	cmp    eax,0xe7b22f97
  412bef:	xchg   edx,eax
  412bf0:	push   ebp
  412bf1:	mov    ah,0xa8
  412bf3:	push   0xffffff9a
  412bf5:	sti    
  412bf6:	out    0x1b,al
  412bf8:	xchg   DWORD PTR [esi-0x5b241221],ecx
  412bfe:	iret   
  412bff:	add    esp,DWORD PTR [edx+edx*1+0x1c]
  412c03:	nop
  412c04:	jge    0x412c7d
  412c06:	pop    es
  412c07:	(bad)  
  412c08:	btc    DWORD PTR [ebp+0x79e00fe0],esp
  412c0f:	pusha  
  412c10:	jo     0x412c62
  412c12:	sub    eax,0x299b780f
  412c17:	imul   ebp,DWORD PTR [edx-0x37],0xc9803022
  412c1e:	mov    edi,0xd9ec76b8
  412c23:	lahf   
  412c24:	fld    QWORD PTR [edi+0x22]
  412c27:	enter  0x26d4,0xd7
  412c2b:	mov    esp,0x33160284
  412c30:	int3   
  412c31:	jg     0x412bda
  412c33:	sub    cl,BYTE PTR [esi]
  412c35:	jg     0x412c7b
  412c37:	icebp  
  412c38:	stos   DWORD PTR es:[edi],eax
  412c39:	adc    eax,0xd4d647c3
  412c3e:	gs pop ds
  412c40:	pop    ecx
  412c41:	jb     0x412c03
  412c43:	cdq    
  412c44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c45:	jnp    0x412c59
  412c47:	jp     0x412c62
  412c49:	fistp  DWORD PTR [ebp+edi*4-0x7]
  412c4d:	dec    ebp
  412c4e:	add    ch,ch
  412c50:	dec    bx
  412c52:	int    0xfc
  412c54:	xchg   ebx,eax
  412c55:	pop    ebp
  412c56:	adc    BYTE PTR [edi+0x28],0xae
  412c5a:	jmp    0x674196a8
  412c5f:	cmp    DWORD PTR [esi-0x69],0x5e
  412c63:	clc    
  412c64:	mov    ds:0xe33426e5,eax
  412c69:	ret    0x4055
  412c6c:	fwait
  412c6d:	jb     0x412bf4
  412c6f:	adc    bh,BYTE PTR [edx-0x4c]
  412c72:	in     eax,dx
  412c73:	pop    edx
  412c74:	mov    DWORD PTR gs:[edx-0x40],esi
  412c78:	(bad)  [ecx]
  412c7a:	imul   ecx,DWORD PTR [eax+ebp*2-0x57f9659],0x79485d5f
  412c85:	push   esp
  412c86:	sub    al,BYTE PTR [ebx+0x63]
  412c89:	in     al,dx
  412c8a:	dec    ebp
  412c8b:	in     al,0x66
  412c8d:	jne    0x412c9b
  412c8f:	xchg   esp,eax
  412c90:	add    eax,0xe6617436
  412c95:	cmp    BYTE PTR [edx],ah
  412c97:	inc    ebx
  412c98:	dec    edx
  412c99:	dec    edi
  412c9a:	mov    eax,0x3c62c7bc
  412c9f:	out    0xe5,eax
  412ca1:	mov    ds:0xd9fd91b7,al
  412ca6:	jl     0x412cf7
  412ca8:	mov    dl,ch
  412caa:	cmp    eax,edi
  412cac:	push   ds
  412cad:	fcmovb st,st(0)
  412caf:	enter  0xaaf6,0x16
  412cb3:	call   0x41bd:0x4cbcde9d
  412cba:	jnp    0x412d1d
  412cbc:	mov    cl,bl
  412cbe:	push   edi
  412cbf:	cs inc ebp
  412cc1:	js     0x412c8c
  412cc3:	aam    0xc2
  412cc5:	test   BYTE PTR [edx+0x631c8c5e],cl
  412ccb:	mov    al,0x1d
  412ccd:	sub    ch,cl
  412ccf:	je     0x412cd5
  412cd1:	lds    esi,FWORD PTR [esi]
  412cd3:	pop    es
  412cd4:	pop    ebp
  412cd5:	pop    esi
  412cd6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412cd7:	repz out 0xb6,eax
  412cda:	mov    dh,0x93
  412cdc:	into   
  412cdd:	lods   al,BYTE PTR ds:[esi]
  412cde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412cdf:	xchg   DWORD PTR [edi-0x6f8a0612],edx
  412ce5:	leave  
  412ce6:	xchg   esi,eax
  412ce7:	and    ah,dh
  412ce9:	mov    al,0x8a
  412ceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412cec:	pop    es
  412ced:	ficomp DWORD PTR [ebx]
  412cef:	adc    edi,esi
  412cf1:	shl    BYTE PTR [esi],0x0
  412cf4:	or     eax,DWORD PTR [ebx]
  412cf6:	xchg   edi,eax
  412cf7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412cf8:	or     al,0x17
  412cfa:	dec    edi
  412cfb:	sub    esp,DWORD PTR [ecx+0x73]
  412cfe:	xor    ch,BYTE PTR [ecx+0x537799e5]
  412d04:	scas   eax,DWORD PTR es:[edi]
  412d05:	push   eax
  412d06:	cdq    
  412d07:	shr    BYTE PTR [ebx],0x11
  412d0a:	scas   al,BYTE PTR es:[edi]
  412d0b:	and    BYTE PTR [esi+eiz*8],bh
  412d0e:	icebp  
  412d0f:	inc    ecx
  412d10:	push   ebx
  412d11:	mov    ebp,0x2bc7b703
  412d16:	adc    ch,dh
  412d18:	icebp  
  412d19:	sbb    BYTE PTR [ecx],ah
  412d1b:	xor    ah,al
  412d1d:	cs cmp eax,0xbb68c952
  412d23:	dec    ebp
  412d24:	addr16 push 0x5a1674c0
  412d2a:	(bad)
  412d2e:	mov    dh,0xfc
  412d30:	fs (bad) 
  412d32:	jle    0x412cdc
  412d34:	xchg   DWORD PTR [ebx-0x1e],ebp
  412d37:	fsub   st,st(7)
  412d39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d3a:	(bad)  
  412d3b:	ret    0x873b
  412d3e:	sbb    ch,BYTE PTR [edx+0xba2dc27]
  412d44:	ds xchg ecx,eax
  412d46:	push   eax
  412d47:	sub    DWORD PTR [esi-0x77],edi
  412d4a:	out    0x8b,al
  412d4c:	rcr    BYTE PTR [eax-0x33e5ffcc],1
  412d52:	xor    DWORD PTR [edx-0x74],esi
  412d55:	repnz dec ebp
  412d57:	rcl    BYTE PTR [ecx+0x148ea403],1
  412d5d:	bound  edi,QWORD PTR [esi+0x248444d0]
  412d63:	lahf   
  412d64:	jge    0x412dbd
  412d66:	in     eax,dx
  412d67:	cmp    eax,0x58f92299
  412d6c:	dec    eax
  412d6d:	cmp    al,0x97
  412d6f:	fstp   TBYTE PTR [edi+0x2e]
  412d72:	sbb    bh,bh
  412d74:	mov    BYTE PTR [edx+0x3e043798],cl
  412d7a:	or     BYTE PTR [ebx+0x4a893d91],0x62
  412d81:	jge    0x412d2f
  412d83:	pop    ebx
  412d84:	and    BYTE PTR [ebp-0x56],cl
  412d87:	inc    edx
  412d88:	out    0xa,al
  412d8a:	push   es
  412d8b:	dec    ebp
  412d8c:	and    eax,0x84a1d23d
  412d91:	adc    al,0x1d
  412d93:	je     0x412e02
  412d95:	xchg   ebx,eax
  412d96:	add    al,0x8a
  412d98:	out    dx,al
  412d99:	les    edx,FWORD PTR [eax+edi*4-0x9]
  412d9d:	adc    DWORD PTR [edx-0x58af438c],eax
  412da3:	push   0xfffffff1
  412da5:	(bad)  [edi]
  412da7:	jp     0x412e0f
  412da9:	test   DWORD PTR [edx],ebp
  412dab:	push   ecx
  412dac:	std    
  412dad:	push   esp
  412dae:	test   DWORD PTR [esi+0x6d],esi
  412db1:	mov    esi,DWORD PTR [esi+ecx*8-0x3b]
  412db5:	in     eax,0x38
  412db7:	test   al,0x56
  412db9:	pop    esp
  412dba:	inc    eax
  412dbb:	and    eax,0xf813d573
  412dc0:	jge    0x412d71
  412dc2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412dc3:	mov    ebx,0x50ff52a0
  412dc8:	aaa    
  412dc9:	iret   
  412dca:	adc    eax,0x45acfbc7
  412dcf:	mov    DWORD PTR [ecx-0x1d3681b5],edi
  412dd5:	xchg   ecx,eax
  412dd6:	sti    
  412dd7:	push   cs
  412dd8:	fnstsw WORD PTR [ebx+ecx*8+0x6217b921]
  412ddf:	out    0xde,eax
  412de1:	ror    BYTE PTR [esi+0x2821c991],1
  412de7:	or     ch,BYTE PTR [ebx]
  412de9:	retf   0xbbd4
  412dec:	call   0x47ed1cfb
  412df1:	pop    edi
  412df2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412df3:	js     0x412e2d
  412df5:	mov    ecx,0x6534e9b
  412dfa:	das    
  412dfb:	push   eax
  412dfc:	pop    ss
  412dfd:	jmp    0x412e60
  412dff:	rcr    BYTE PTR [edi+edx*1+0x54],1
  412e03:	(bad)  
  412e04:	addr16 dec edx
  412e06:	ret    0xb995
  412e09:	ret    
  412e0a:	pop    ecx
  412e0b:	push   es
  412e0c:	jb     0x412e23
  412e0e:	aaa    
  412e0f:	ror    DWORD PTR [bx+di-0x5a9],0x2a
  412e15:	push   ebp
  412e16:	outs   dx,BYTE PTR ds:[esi]
  412e17:	test   DWORD PTR [ecx+0x22],edx
  412e1a:	std    
  412e1b:	cwde   
  412e1c:	outs   dx,DWORD PTR ds:[esi]
  412e1d:	lock xor dl,ah
  412e20:	test   al,0x6f
  412e22:	and    bh,BYTE PTR [ebp+0x527ff0ee]
  412e28:	pushf  
  412e29:	shr    DWORD PTR [edx-0x22dd506a],cl
  412e2f:	inc    edi
  412e30:	icebp  
  412e31:	mov    WORD PTR [esi-0xe86af46],es
  412e37:	xchg   esp,eax
  412e38:	mov    bl,0xf7
  412e3a:	push   cs
  412e3b:	mov    bl,0x4a
  412e3d:	pop    ebp
  412e3e:	arpl   WORD PTR [edi],cx
  412e40:	inc    eax
  412e41:	xchg   esi,eax
  412e42:	or     esp,0xffffffc5
  412e45:	xchg   esi,eax
  412e46:	jecxz  0x412dd5
  412e48:	imul   ebx,DWORD PTR [eax+0xc5996e0],0xddf7f6bc
  412e52:	mul    dl
  412e54:	mov    al,0x94
  412e56:	std    
  412e57:	aas    
  412e58:	xor    edx,DWORD PTR [edx]
  412e5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e5b:	int3   
  412e5c:	gs aas 
  412e5e:	cmp    ebp,eax
  412e60:	call   0x4c963f6c
  412e65:	cld    
  412e66:	add    eax,0x18eb4a88
  412e6b:	fstp   QWORD PTR cs:[eax]
  412e6e:	inc    ebp
  412e6f:	repnz test eax,0xb79322a2
  412e75:	push   edx
  412e76:	addr16 rcl bl,0x2e
  412e7a:	test   DWORD PTR [esi+0x2e55d23d],0x30b0102a
  412e84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e85:	push   es
  412e86:	jae    0x412e9c
  412e88:	sti    
  412e89:	ret    
  412e8a:	dec    esp
  412e8b:	fcmovu st,st(2)
  412e8d:	aaa    
  412e8e:	ds pop esp
  412e90:	xchg   edx,eax
  412e91:	out    0x4f,ax
  412e94:	push   cs
  412e95:	sub    dh,BYTE PTR [eax-0x52d8edb4]
  412e9b:	and    BYTE PTR [edx-0x13ccd99],al
  412ea1:	aad    0xbc
  412ea3:	aas    
  412ea4:	mov    DWORD PTR [esi-0x51],ecx
  412ea7:	dec    esi
  412ea8:	cli    
  412ea9:	stos   DWORD PTR es:[edi],eax
  412eaa:	and    BYTE PTR [ebx-0x1d55d7ce],bh
  412eb0:	iret   
  412eb1:	cmp    al,0xd4
  412eb3:	cmp    edx,DWORD PTR [ebx+0x44]
  412eb6:	sub    eax,edx
  412eb8:	fimul  DWORD PTR [ebp+edx*2+0x76dee43d]
  412ebf:	nop
  412ec0:	outs   dx,DWORD PTR ds:[esi]
  412ec1:	xchg   edx,eax
  412ec2:	add    eax,0x71b7f483
  412ec7:	loope  0x412e9b
  412ec9:	call   0xc58fa6b6
  412ece:	lods   al,BYTE PTR ds:[esi]
  412ecf:	out    dx,al
  412ed0:	push   ss
  412ed1:	(bad)  
  412ed2:	adc    bh,BYTE PTR [ecx]
  412ed4:	jmp    0x84f54c01
  412ed9:	xchg   edx,eax
  412eda:	fnstenv ds:0x60191ac
  412ee0:	stc    
  412ee1:	sahf   
  412ee2:	mov    eax,DWORD PTR [ebp-0x239e7ade]
  412ee8:	xor    eax,0x463b3f4f
  412eed:	arpl   WORD PTR [eax-0x34],bx
  412ef0:	cmp    DWORD PTR [eax+0x59],0x1bc55b76
  412ef7:	push   edi
  412ef8:	(bad)  
  412ef9:	fnstenv [edx-0x1d19e050]
  412eff:	push   edi
  412f00:	sub    dl,BYTE PTR [ecx+0x41]
  412f03:	out    0x1a,eax
  412f05:	loop   0x412f1a
  412f07:	(bad)  
  412f09:	mov    ebp,0x316b4b41
  412f0e:	mov    esi,0x49a5a00e
  412f13:	mov    ecx,DWORD PTR [edi]
  412f15:	nop
  412f16:	pop    eax
  412f17:	cmp    al,0xb2
  412f19:	arpl   WORD PTR [edi+0x23d3fee7],cx
  412f1f:	mov    bl,0x0
  412f21:	inc    edi
  412f22:	push   0x1bd39bbb
  412f27:	iret   
  412f28:	dec    eax
  412f29:	xor    eax,0xca10efc
  412f2e:	mov    ch,0x81
  412f30:	push   ss
  412f31:	adc    ebx,edx
  412f33:	(bad)  
  412f34:	(bad)  
  412f36:	or     bh,0x25
  412f39:	sahf   
  412f3a:	lds    edx,FWORD PTR [ebx+eax*1+0x47]
  412f3e:	jmp    0x3967:0x50770a7d
  412f45:	cdq    
  412f46:	or     dl,BYTE PTR [ecx+edx*2+0x27]
  412f4a:	scas   al,BYTE PTR es:[edi]
  412f4b:	xor    WORD PTR [edx-0x50c59528],bp
  412f52:	pop    ds
  412f53:	ret    
  412f54:	clc    
  412f55:	jecxz  0x412ef5
  412f57:	(bad)  
  412f58:	leave  
  412f59:	inc    edx
  412f5a:	fdiv   st(7),st
  412f5c:	mov    cl,al
  412f5e:	jae    0x412f97
  412f60:	test   eax,0x87c3f6f4
  412f65:	dec    ebp
  412f66:	pop    es
  412f67:	test   BYTE PTR [ebp+0x37484876],0xeb
  412f6e:	mov    ds:0x86b7cbeb,eax
  412f73:	inc    ebx
  412f74:	mov    ecx,0x79106e1a
  412f79:	stos   BYTE PTR es:[edi],al
  412f7a:	pop    ebx
  412f7b:	inc    edi
  412f7c:	cwde   
  412f7d:	fild   DWORD PTR [ecx]
  412f7f:	mov    al,ds:0xa72cd447
  412f84:	test   eax,0xe42c00ae
  412f89:	xchg   edi,eax
  412f8a:	lds    edx,FWORD PTR [eax+0x5769ed55]
  412f90:	pop    ds
  412f91:	aad    0x7c
  412f93:	mov    ecx,0x31fc1bcf
  412f98:	xchg   edx,eax
  412f99:	mov    ch,0x4e
  412f9b:	cwde   
  412f9c:	retf   
  412f9d:	adc    esp,edi
  412f9f:	push   cs
  412fa0:	cld    
  412fa1:	int    0x60
  412fa3:	sbb    edx,DWORD PTR [edi]
  412fa5:	add    DWORD PTR [ebx+0x48ba6045],0xffffffc2
  412fac:	fsubr  DWORD PTR [ebp+0xe]
  412faf:	xor    DWORD PTR [esi-0x6eb81463],ecx
  412fb5:	mov    dl,0x3a
  412fb7:	or     BYTE PTR [edi+0x42],ch
  412fba:	fst    st(5)
  412fbc:	and    ebx,DWORD PTR [ebx]
  412fbe:	in     al,0x95
  412fc0:	add    DWORD PTR [esi],edx
  412fc2:	pushf  
  412fc3:	add    DWORD PTR cs:[si],0x661f8d75
  412fcb:	call   0x47cd7d0d
  412fd0:	dec    edx
  412fd1:	inc    esp
  412fd2:	add    BYTE PTR [edx+edx*4-0x60dc62f8],dl
  412fd9:	add    dh,bl
  412fdb:	mov    ah,0xfe
  412fdd:	push   edx
  412fde:	xchg   ecx,eax
  412fdf:	pop    es
  412fe0:	dec    esi
  412fe1:	mov    cl,0x11
  412fe3:	retf   0x734f
  412fe6:	sar    DWORD PTR [ebx+0x6baa621c],1
  412fec:	pop    ss
  412fed:	cwde   
  412fee:	mov    edx,0xf17e8f8f
  412ff3:	fmul   QWORD PTR [ebp-0x76]
  412ff6:	sbb    BYTE PTR ds:0x6823f43c,0xd9
  412ffd:	cli    
  412ffe:	aaa    
  412fff:	sbb    BYTE PTR [edx-0x65],ch
  413002:	push   edx
  413003:	push   ecx
  413004:	fmul   DWORD PTR [ebp-0x55d4c108]
  41300a:	les    ecx,FWORD PTR [esi-0x1c]
  41300d:	dec    ebp
  41300e:	dec    ecx
  41300f:	pop    ds
  413010:	aam    0x68
  413012:	(bad)  
  413013:	lods   eax,DWORD PTR ds:[esi]
  413014:	adc    BYTE PTR [ecx],0x4f
  413017:	aas    
  413018:	mov    dh,0xa2
  41301a:	add    dh,BYTE PTR [esi]
  41301c:	les    edi,FWORD PTR [ecx-0x5c]
  41301f:	xor    DWORD PTR [ebx-0x23dcd8c8],eax
  413025:	ret    
  413026:	rcl    BYTE PTR [ecx-0x1cf4703],1
  41302c:	rcl    BYTE PTR [ebx],0xd9
  41302f:	jmp    0x9aff:0xca1d5faf
  413036:	addr16 jg 0x412fec
  413039:	int    0x89
  41303b:	dec    esi
  41303c:	inc    ebp
  41303d:	xor    edi,ecx
  41303f:	dec    esi
  413040:	(bad)  
  413041:	or     eax,0x979f5051
  413046:	or     BYTE PTR [edx+0x9],dl
  413049:	mov    BYTE PTR [edi],cl
  41304b:	ret    
  41304c:	imul   edi,esi,0xffffffe7
  41304f:	jecxz  0x412ff1
  413051:	mov    WORD PTR [ebx-0x620dca5d],gs
  413057:	imul   eax,ebx,0x3b
  41305a:	push   ecx
  41305b:	rcl    BYTE PTR [ebx-0x67197035],1
  413061:	ret    
  413062:	jg     0x4130aa
  413064:	ja     0x413054
  413066:	xor    dl,0x62
  413069:	sbb    esp,esi
  41306b:	(bad)  
  41306c:	out    dx,eax
  41306d:	or     DWORD PTR [edi],0x89a559f7
  413073:	not    DWORD PTR [ecx]
  413075:	jne    0x4130ee
  413077:	out    dx,eax
  413078:	jb     0x412ffd
  41307a:	stos   DWORD PTR es:[edi],eax
  41307b:	out    dx,eax
  41307c:	dec    ecx
  41307d:	or     eax,0x8a4538a4
  413082:	int3   
  413083:	mov    eax,ds:0x86421035
  413088:	(bad)  
  413089:	jg     0x41309a
  41308b:	or     esp,esi
  41308d:	scas   al,BYTE PTR es:[edi]
  41308e:	xor    BYTE PTR [ebp-0x7c],dh
  413091:	jle    0x41305a
  413093:	mov    ah,0xfe
  413095:	jno    0x4130d7
  413097:	and    DWORD PTR [ecx],eax
  413099:	jbe    0x4130eb
  41309b:	in     al,dx
  41309c:	sbb    ch,BYTE PTR [esp+ecx*8+0x4eb4ada2]
  4130a3:	icebp  
  4130a4:	jno    0x413031
  4130a6:	add    edi,edi
  4130a8:	das    
  4130a9:	pop    edi
  4130aa:	dec    esp
  4130ab:	scas   al,BYTE PTR es:[edi]
  4130ac:	and    al,0xaf
  4130ae:	inc    ebx
  4130af:	jl     0x413108
  4130b1:	push   ecx
  4130b2:	lods   al,BYTE PTR ds:[esi]
  4130b3:	jo     0x4130bb
  4130b5:	mov    bh,bh
  4130b7:	retf   0x19cd
  4130ba:	dec    esi
  4130bb:	jp     0x413071
  4130bd:	popf   
  4130be:	inc    edx
  4130bf:	jle    0x413071
  4130c1:	mov    esp,0x6edde2b9
  4130c6:	cwde   
  4130c7:	gs shr ch,0xff
  4130cb:	shr    BYTE PTR [ebx-0x3a5ed4a5],cl
  4130d1:	sbb    edx,edi
  4130d3:	ficom  DWORD PTR [ecx]
  4130d5:	xor    eax,0xf850885c
  4130da:	rcl    DWORD PTR [edi+0x6f],1
  4130dd:	loope  0x41307a
  4130df:	push   ebx
  4130e0:	in     al,0x1f
  4130e2:	inc    esi
  4130e3:	or     BYTE PTR [ebp+0x3ea47e08],dl
  4130e9:	mov    ah,BYTE PTR [eax+eiz*8]
  4130ec:	inc    edx
  4130ed:	mov    ss,WORD PTR [ebx-0x3d]
  4130f0:	gs out dx,eax
  4130f2:	cmc    
  4130f3:	scas   eax,DWORD PTR es:[edi]
  4130f4:	xor    al,0x3f
  4130f6:	inc    ax
  4130f8:	int3   
  4130f9:	pop    ebx
  4130fa:	jno    0x413167
  4130fc:	mov    ecx,ebx
  4130fe:	jne    0x413167
  413100:	jo     0x4130a4
  413102:	xlat   BYTE PTR ds:[ebx]
  413103:	aaa    
  413104:	mov    ebx,0x7ec660e2
  413109:	ins    DWORD PTR es:[edi],dx
  41310a:	adc    ecx,DWORD PTR [edx+ebp*4-0xed2b0a8]
  413111:	fs jge 0x41312a
  413114:	push   ecx
  413115:	xchg   ecx,eax
  413116:	sbb    ebp,DWORD PTR ds:0xb3666d1e
  41311c:	in     eax,dx
  41311d:	sub    al,0xb7
  41311f:	in     al,dx
  413120:	mov    dh,0x2
  413122:	sti    
  413123:	jp     0x4130b0
  413125:	ss adc al,0x6d
  413128:	cmp    BYTE PTR ds:0x8982a8c1,cl
  41312e:	add    bh,BYTE PTR [ebx]
  413130:	data16 mov ds:0x699a4de9,al
  413136:	ds cmp eax,0xb01a30cf
  41313c:	outs   dx,BYTE PTR ds:[esi]
  41313d:	scas   eax,DWORD PTR es:[edi]
  41313e:	and    DWORD PTR [eiz*2+0xa5fbd52],edi
  413145:	push   0x90d3ddbe
  41314a:	push   edx
  41314b:	jp     0x4130db
  41314d:	cmp    al,0x81
  41314f:	lods   eax,DWORD PTR ds:[esi]
  413150:	xchg   ebp,eax
  413151:	test   eax,0x758a68d4
  413156:	pop    es
  413157:	popf   
  413158:	dec    ebp
  413159:	dec    ebp
  41315a:	xchg   ebp,eax
  41315b:	or     BYTE PTR ds:0x8915c9e1,dh
  413161:	out    dx,eax
  413162:	dec    eax
  413163:	out    0x5c,eax
  413165:	scas   eax,DWORD PTR es:[edi]
  413166:	inc    eax
  413167:	mov    DWORD PTR [edi],0x979feee5
  41316d:	sbb    al,0x43
  41316f:	dec    edi
  413170:	add    al,0xc0
  413172:	outs   dx,DWORD PTR ds:[esi]
  413173:	xchg   esp,eax
  413174:	push   esi
  413175:	pop    edx
  413176:	push   es
  413177:	popa   
  413178:	or     ebx,DWORD PTR [ebx+0x7e7e0c84]
  41317e:	repnz xlat BYTE PTR ds:[ebx]
  413180:	sbb    DWORD PTR [edi],edx
  413182:	xchg   esi,eax
  413183:	test   eax,0xe434411
  413188:	and    BYTE PTR [esi+0x29],ah
  41318b:	cmp    esi,ebp
  41318d:	neg    BYTE PTR [edx]
  41318f:	test   eax,0xbfe69eb1
  413195:	jb     0x413146
  413197:	(bad)  
  413198:	imul   ebp,DWORD PTR [edx-0x14aab5e7],0x7339e016
  4131a2:	iret   
  4131a3:	dec    ecx
  4131a4:	jecxz  0x4131db
  4131a6:	or     al,0xdd
  4131a8:	sbb    al,bl
  4131aa:	inc    edx
  4131ab:	js     0x413146
  4131ad:	mov    ebp,DWORD PTR [edi+0x113b0607]
  4131b3:	sar    BYTE PTR [ebp-0xa],0xbe
  4131b7:	lds    edi,FWORD PTR [ebx]
  4131b9:	test   BYTE PTR [ecx-0x7df19d8c],0x34
  4131c0:	xchg   esp,eax
  4131c1:	cdq    
  4131c2:	popa   
  4131c3:	test   DWORD PTR [eax+0x3c],eax
  4131c6:	cs lock aam 0xa
  4131ca:	and    ecx,DWORD PTR [eax]
  4131cc:	idiv   BYTE PTR [esi-0xb1380df]
  4131d2:	pop    eax
  4131d3:	mov    ds:0x8c494ccd,al
  4131d8:	jo     0x4131ad
  4131da:	inc    ebx
  4131db:	jo     0x4131a9
  4131dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131de:	scas   al,BYTE PTR es:[edi]
  4131df:	dec    ebp
  4131e0:	dec    edx
  4131e1:	aaa    
  4131e2:	scas   al,BYTE PTR es:[edi]
  4131e3:	xchg   ebx,eax
  4131e4:	data16 mov cl,0x40
  4131e7:	fld    DWORD PTR [esi]
  4131e9:	jb     0x41319e
  4131eb:	sar    BYTE PTR [ebp-0x2e77526e],cl
  4131f1:	dec    ebx
  4131f2:	fisubr WORD PTR [ecx-0x74eecce1]
  4131f8:	in     al,0xf2
  4131fa:	ds call 0x601f1154
  413200:	das    
  413201:	rcr    BYTE PTR [ebx+0x65],1
  413204:	xchg   ebp,eax
  413205:	cli    
  413206:	xor    eax,0x702c9ace
  41320b:	ret    0x32ed
  41320e:	adc    al,0x2c
  413210:	iret   
  413211:	iret   
  413212:	or     al,0x23
  413214:	pop    ebp
  413215:	ror    BYTE PTR ds:0xba3065d6,1
  41321b:	and    ch,BYTE PTR [ecx]
  41321d:	inc    eax
  41321e:	push   cs
  41321f:	cmc    
  413220:	xchg   ebx,eax
  413221:	xchg   ebp,eax
  413222:	test   eax,0x7dd093e7
  413227:	jns    0x413264
  413229:	mov    dh,0x9
  41322b:	push   es
  41322c:	loope  0x4131f2
  41322e:	xchg   edx,eax
  41322f:	mov    cl,0x3d
  413231:	push   cs
  413232:	jl     0x41321a
  413234:	or     dl,BYTE PTR [ebx-0x13]
  413237:	mov    eax,0xed8f95a8
  41323c:	fwait
  41323d:	addr16 cmp ch,al
  413240:	mov    esi,0xdfc3ac7b
  413245:	fwait
  413246:	aad    0xbb
  413248:	aaa    
  413249:	pop    ds
  41324a:	dec    edi
  41324b:	cmp    ebx,edi
  41324d:	fs std 
  41324f:	mov    edi,0x4cc77e45
  413254:	push   0xb1b44382
  413259:	pop    edi
  41325a:	call   0x5190:0xef98482b
  413261:	cmp    DWORD PTR [edi+0x28],edi
  413264:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413265:	in     al,0xb1
  413267:	cli    
  413268:	inc    esi
  413269:	mov    ah,0x79
  41326b:	push   edi
  41326c:	ss fwait
  41326e:	sbb    ecx,DWORD PTR [edi-0xd7d2b64]
  413274:	cmp    al,0x6
  413276:	(bad)  
  413277:	lds    edi,FWORD PTR [edi]
  413279:	and    dh,BYTE PTR [esi+0x70]
  41327c:	inc    ebp
  41327d:	lock out 0xb4,eax
  413280:	clc    
  413281:	xor    esp,DWORD PTR [ebp+ecx*1-0x51925bda]
  413288:	xchg   edx,eax
  413289:	push   cs
  41328a:	stos   BYTE PTR es:[edi],al
  41328b:	push   esi
  41328c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41328d:	inc    eax
  41328e:	retf   
  41328f:	das    
  413290:	push   esp
  413291:	jae    0x4132ae
  413293:	jo     0x413308
  413295:	mov    ecx,0x7f8b17d8
  41329a:	sub    BYTE PTR [eax],dl
  41329c:	jg     0x413254
  41329e:	pop    ss
  41329f:	pop    es
  4132a0:	aad    0x88
  4132a2:	jbe    0x4132e4
  4132a4:	lds    edi,FWORD PTR [ebx]
  4132a6:	or     dl,BYTE PTR [edi]
  4132a8:	and    al,BYTE PTR [ebx+0x7c]
  4132ab:	cmp    BYTE PTR [edi-0x7c],cl
  4132ae:	pop    ebp
  4132af:	or     DWORD PTR ds:0x369eba76,ecx
  4132b5:	jecxz  0x41323e
  4132b7:	das    
  4132b8:	retf   
  4132b9:	dec    esp
  4132ba:	mov    ecx,0xf16009d5
  4132bf:	fadd   DWORD PTR [eax-0x3ec12ba7]
  4132c5:	inc    ebp
  4132c6:	cwde   
  4132c7:	mov    esi,0xa4faf15c
  4132cc:	cld    
  4132cd:	inc    ebx
  4132ce:	(bad)  
  4132cf:	dec    ebp
  4132d0:	fdiv   QWORD PTR [edi]
  4132d2:	in     al,dx
  4132d3:	add    BYTE PTR [eax+ebp*8-0x17e5c08b],0x5b
  4132db:	mov    eax,0xab06abcf
  4132e0:	and    al,0x7d
  4132e2:	mov    cl,0x3f
  4132e4:	xchg   ebp,eax
  4132e5:	test   eax,0x2c941e3f
  4132ea:	pmulhuw mm1,QWORD PTR es:[esi-0x1ebf1132]
  4132f2:	scas   eax,DWORD PTR es:[edi]
  4132f3:	sbb    eax,0x30523e85
  4132f8:	mov    eax,0xd5daa531
  4132fd:	xor    eax,0xce4138cf
  413302:	push   esp
  413303:	inc    esi
  413304:	pop    es
  413305:	xor    BYTE PTR [edx+0x514c6474],dh
  41330b:	fs (bad) 
  41330d:	call   0x3eef5fe4
  413312:	dec    ebx
  413313:	mov    bh,0xec
  413315:	jb     0x4132d4
  413317:	retfw  
  413319:	jnp    0x413340
  41331b:	jns    0x413354
  41331d:	inc    esp
  41331e:	fbld   TBYTE PTR [eax]
  413320:	xor    al,0xf9
  413322:	mov    ah,0xdf
  413324:	lds    edx,FWORD PTR [ebx+0x79]
  413327:	and    al,0x47
  413329:	sbb    eax,0x45b5ba6b
  41332e:	mov    eax,ds:0x8b845ba7
  413333:	mov    al,0xa6
  413335:	jg     0x413354
  413337:	push   0xb3931e50
  41333c:	adc    ebp,ebp
  41333e:	aam    0x12
  413340:	adc    eax,0x20d0fa86
  413345:	mov    bh,BYTE PTR [esi+0x4fdc6a21]
  41334b:	cld    
  41334c:	xchg   edi,eax
  41334d:	(bad)  
  41334e:	push   es
  41334f:	mov    al,0xdc
  413351:	add    BYTE PTR [edx-0x5a],al
  413354:	or     al,0xcb
  413356:	imul   edx,DWORD PTR [ebp-0x3f98e6ce],0xf94c1459
  413360:	push   ecx
  413361:	clc    
  413362:	add    esi,DWORD PTR [edi+0x34]
  413365:	push   edx
  413366:	jle    0x41338c
  413368:	mov    eax,ds:0xdf34faae
  41336d:	xchg   esi,eax
  41336e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41336f:	pop    ss
  413370:	outs   dx,BYTE PTR ds:[esi]
  413371:	mov    al,0x56
  413373:	push   0xffffffbf
  413375:	cmp    DWORD PTR [eax+0x32f760d3],edx
  41337b:	(bad)  
  41337c:	cmp    eax,0x41bad64d
  413381:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413382:	out    0xee,eax
  413384:	pop    esi
  413385:	(bad)  
  413386:	std    
  413387:	mul    BYTE PTR [ebx+0x467262ef]
  41338d:	xor    eax,0x7aad57
  413392:	das    
  413393:	mov    esi,0xf6db00f8
  413398:	in     eax,dx
  413399:	shr    BYTE PTR [eax+0x4941e13b],cl
  41339f:	stos   DWORD PTR es:[edi],eax
  4133a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133a1:	push   0x2b408314
  4133a6:	mov    esi,0x1e7badde
  4133ab:	mov    ah,0x5d
  4133ad:	shl    DWORD PTR [eax-0xbca352],1
  4133b3:	mov    ecx,0xcd16b51d
  4133b8:	dec    ecx
  4133b9:	sbb    eax,0x59877e37
  4133be:	(bad)  
  4133bf:	xchg   ebp,eax
  4133c0:	mov    edx,0x9cfb0bf9
  4133c5:	cwde   
  4133c6:	(bad)  
  4133c7:	mov    ds:0xa11f4926,eax
  4133cc:	pop    ss
  4133cd:	jo     0x413400
  4133cf:	jmp    0x26be5030
  4133d4:	pop    ebx
  4133d5:	and    eax,0xf8ebc078
  4133da:	mov    cl,0x27
  4133dc:	test   BYTE PTR [edi+0x47],ah
  4133df:	fsub   DWORD PTR [eax]
  4133e1:	aad    0x73
  4133e3:	(bad)  
  4133e4:	sub    esi,esp
  4133e6:	por    mm2,QWORD PTR ds:0x60d8a15f
  4133ed:	sbb    bl,BYTE PTR [ebx]
  4133ef:	(bad)  
  4133f0:	push   ss
  4133f1:	(bad)  
  4133f2:	fisub  DWORD PTR [edi-0x622c8810]
  4133f8:	out    0xf4,eax
  4133fa:	(bad)  
  4133fb:	sub    bh,cl
  4133fd:	adc    al,0x91
  4133ff:	out    0xd,eax
  413401:	xlat   BYTE PTR ds:[ebx]
  413402:	call   0x9f513bd5
  413407:	in     al,dx
  413408:	ins    BYTE PTR es:[edi],dx
  413409:	arpl   WORD PTR es:[edx],di
  41340c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41340d:	push   cs
  41340e:	pop    ebx
  41340f:	sub    ebp,DWORD PTR [edx+edi*4+0x61dbe45a]
  413416:	adc    al,0x3a
  413418:	(bad)  
  413419:	sbb    DWORD PTR [esi-0x6edd5c9c],ebp
  41341f:	cmp    eax,eax
  413421:	xchg   esp,eax
  413422:	mov    ebx,edi
  413424:	sbb    BYTE PTR [ecx],cl
  413426:	(bad)  
  413427:	xchg   edx,eax
  413428:	ss cdq 
  41342a:	stc    
  41342b:	mov    bh,0xe6
  41342d:	sbb    eax,DWORD PTR [ebx+0x2e9c6dbd]
  413433:	mov    bl,0x70
  413435:	(bad)  
  413436:	fmul   DWORD PTR [eax]
  413438:	jnp    0x413499
  41343a:	fild   DWORD PTR [edx-0x1e9ca72c]
  413440:	stos   DWORD PTR es:[edi],eax
  413441:	push   edx
  413442:	ficom  DWORD PTR [edx+eax*8]
  413445:	ficom  DWORD PTR [eax-0x32]
  413448:	mov    ah,0x8f
  41344a:	fbld   TBYTE PTR [eax+0x6a]
  41344d:	adc    edx,DWORD PTR [esi]
  41344f:	daa    
  413450:	mov    dl,0x2a
  413452:	(bad)
  413455:	cld    
  413456:	ins    BYTE PTR es:[edi],dx
  413457:	push   0x16de30e5
  41345c:	adc    edi,0x81b4b5b4
  413462:	xlat   BYTE PTR ds:[ebx]
  413463:	xor    BYTE PTR [ecx+0x58f3b7e9],dh
  413469:	or     al,0x33
  41346b:	fcmovne st,st(2)
  41346d:	xor    eax,0x7114d48e
  413472:	xchg   esp,eax
  413473:	adc    ah,BYTE PTR [ecx-0x18]
  413476:	jmp    0x442e:0x6e206100
  41347d:	call   0x4f17:0x1f34d526
  413484:	inc    esp
  413485:	jnp    0x41341f
  413487:	sub    dl,dh
  413489:	lahf   
  41348a:	jmp    0xd83a:0xf32f17b3
  413491:	daa    
  413492:	lgs    esi,FWORD PTR [ecx-0x6f]
  413496:	clc    
  413497:	push   es
  413498:	mov    ebx,0xde97931b
  41349d:	adc    DWORD PTR ds:0xcad34e1,ecx
  4134a3:	mov    ds:0xee47d463,al
  4134a8:	clc    
  4134a9:	mov    esi,0x5cc5b4f2
  4134ae:	test   eax,0x4048bdd8
  4134b3:	out    dx,al
  4134b4:	push   es
  4134b5:	mov    edi,DWORD PTR ss:[ebp+0x6a]
  4134b9:	jecxz  0x413502
  4134bb:	xor    DWORD PTR [ecx+0x20],0x840bfd52
  4134c2:	(bad)  es:[eax+0x1f28f84b]
  4134c9:	ss add al,0x28
  4134cc:	test   BYTE PTR [edi],0x1e
  4134cf:	es dec eax
  4134d1:	inc    ecx
  4134d2:	sbb    eax,0x40a1bf9d
  4134d7:	or     bl,BYTE PTR [edx]
  4134d9:	or     dl,BYTE PTR [edx+eax*8+0x77]
  4134dd:	push   esp
  4134de:	ins    DWORD PTR es:[edi],dx
  4134df:	pop    esi
  4134e0:	pop    ss
  4134e1:	pop    eax
  4134e2:	cli    
  4134e3:	addr16 xchg edi,eax
  4134e5:	in     al,dx
  4134e6:	outs   dx,BYTE PTR ds:[esi]
  4134e7:	addr16 pop ss
  4134e9:	aas    
  4134ea:	jge    0x4134e2
  4134ec:	jmp    0xa3aeab0
  4134f1:	cld    
  4134f2:	ins    BYTE PTR es:[edi],dx
  4134f3:	xchg   esp,eax
  4134f4:	stos   BYTE PTR es:[edi],al
  4134f5:	cld    
  4134f6:	in     eax,0x14
  4134f8:	xchg   edi,eax
  4134f9:	loope  0x4134c3
  4134fb:	es iret 
  4134fd:	(bad)  
  4134fe:	std    
  4134ff:	sti    
  413500:	loopne 0x41355e
  413502:	outs   dx,BYTE PTR ds:[esi]
  413503:	jno    0x4134b3
  413505:	dec    ebp
  413506:	cs mov edi,0xc34bda71
  41350c:	mov    esp,0x17492484
  413511:	adc    DWORD PTR [edx-0x6b],ebp
  413514:	mov    edx,0x463cc195
  413519:	ret    
  41351a:	mov    ds:0x57f735d,eax
  41351f:	test   al,0xc1
  413521:	mov    ecx,DWORD PTR [edx]
  413523:	arpl   WORD PTR [ebx-0x1e302f19],ax
  413529:	call   ebx
  41352b:	pop    ebx
  41352c:	or     DWORD PTR [edi-0x67],edx
  41352f:	mov    cl,0xb1
  413531:	push   cs
  413532:	test   DWORD PTR [ebp+0x34],ebp
  413535:	pop    ds
  413536:	ja     0x4135ab
  413538:	or     cl,BYTE PTR cs:[ecx-0x7c3b55d1]
  41353f:	sbb    ah,ah
  413541:	xor    DWORD PTR [edx-0x31],ebx
  413544:	or     DWORD PTR [ebx-0x7dc48fc7],ebp
  41354a:	lahf   
  41354b:	test   al,0x12
  41354d:	fs jmp 0xa500:0xd380643a
  413555:	inc    edx
  413556:	push   esp
  413557:	fbld   TBYTE PTR [edi]
  413559:	mov    ds:0xb7fc9597,al
  41355e:	xor    al,0x6f
  413560:	inc    ebx
  413561:	xchg   ebp,eax
  413562:	iret   
  413563:	loop   0x4135db
  413565:	add    edx,DWORD PTR [ebp-0x24]
  413568:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413569:	cmp    eax,0xf068e474
  41356e:	hlt    
  41356f:	inc    esi
  413570:	bound  edi,QWORD PTR cs:[edx]
  413573:	aas    
  413574:	into   
  413575:	add    eax,0xd39ad3bb
  41357a:	xchg   ebx,eax
  41357b:	and    al,0x5f
  41357d:	in     al,0xf2
  41357f:	xor    DWORD PTR [ebp-0x5d1a9081],ebx
  413585:	shl    BYTE PTR [edi],0x42
  413588:	dec    esi
  413589:	jmp    0xaec4514b
  41358e:	sbb    DWORD PTR [ebp-0x4b],edx
  413591:	int3   
  413592:	xchg   BYTE PTR ds:0x4e85555d,bl
  413598:	ret    
  413599:	stos   BYTE PTR es:[edi],al
  41359a:	xchg   ebx,eax
  41359b:	ins    DWORD PTR es:[edi],dx
  41359c:	pop    ebp
  41359d:	cdq    
  41359e:	into   
  41359f:	pusha  
  4135a0:	mov    eax,gs
  4135a2:	test   edx,0x9a0c6e6d
  4135a8:	out    0xa,al
  4135aa:	aad    0x3e
  4135ac:	lahf   
  4135ad:	add    bl,BYTE PTR [esi]
  4135af:	add    edi,DWORD PTR [ecx+0x3d1aef3f]
  4135b5:	mov    DWORD PTR [ebx+ebx*8],eax
  4135b8:	imul   edx,ebp,0x433a85f1
  4135be:	lds    esp,FWORD PTR [edx+0x48657311]
  4135c4:	push   0x1ef9272c
  4135c9:	cmp    DWORD PTR [edi+0x48f450b3],esi
  4135cf:	adc    DWORD PTR [ecx+0x514c6c82],0x13
  4135d6:	icebp  
  4135d7:	retf   0x909c
  4135da:	ins    DWORD PTR es:[edi],dx
  4135db:	nop
  4135dc:	jecxz  0x41364e
  4135de:	neg    DWORD PTR [eax+0x53]
  4135e1:	dec    ecx
  4135e3:	adc    al,0xb9
  4135e5:	addr16 mov cl,0x2d
  4135e8:	ret    0xf48b
  4135eb:	cmc    
  4135ec:	push   esi
  4135ed:	out    dx,al
  4135ee:	clc    
  4135ef:	push   edx
  4135f0:	idiv   DWORD PTR [esp+ebp*2+0x46]
  4135f4:	sub    al,0xd
  4135f6:	cld    
  4135f7:	ja     0x41360e
  4135f9:	pop    eax
  4135fa:	mov    dh,0x2d
  4135fc:	stc    
  4135fd:	pop    ds
  4135fe:	push   ds
  4135ff:	jge    0x413606
  413601:	sbb    eax,DWORD PTR [ecx+0x2e1d1cf0]
  413607:	xchg   esi,eax
  413608:	mov    edi,0x2e362d2f
  41360d:	(bad)  
  41360e:	mov    ah,0x8b
  413610:	push   0xffffff9c
  413612:	cmc    
  413613:	sar    eax,cl
  413615:	dec    esi
  413616:	xor    bh,BYTE PTR [ecx]
  413618:	sbb    ecx,edi
  41361a:	sub    eax,0xc46b5d20
  41361f:	(bad)  [edi]
  413621:	xchg   eax,esi
  413623:	jo     0x4135e1
  413625:	imul   ebp,DWORD PTR ds:0xbbc78423,0xf75a7f22
  41362f:	push   ss
  413630:	in     eax,dx
  413631:	jbe    0x4135c9
  413633:	cmp    eax,DWORD PTR [edx-0x7ddf016d]
  413639:	mov    ds:0xd005350a,eax
  41363e:	mov    ds:0x5705cb8a,eax
  413643:	(bad)  
  413644:	and    al,0xf9
  413646:	into   
  413647:	(bad)  
  413648:	pop    ecx
  413649:	mov    BYTE PTR [eax-0x4],ch
  41364c:	les    edi,FWORD PTR [edi*2-0x6178d5b1]
  413653:	sar    DWORD PTR [esi+0xe579ec8],1
  413659:	in     eax,dx
  41365a:	xchg   esp,eax
  41365b:	fadd   st(3),st
  41365d:	cli    
  41365e:	arpl   dx,cx
  413660:	pushf  
  413661:	ret    
  413662:	sub    DWORD PTR [ebx],esi
  413664:	vpmacsswd xmm4,xmm3,XMMWORD PTR [ebp+0x49],xmm5
  41366b:	pop    ss
  41366c:	add    BYTE PTR [edx+0x56c78130],bl
  413672:	mov    dl,0xd4
  413674:	add    DWORD PTR [ebx-0x33],0x9d32b364
  41367b:	(bad)
  41367f:	imul   esp,DWORD PTR [esi+0x6d],0x3fddd198
  413686:	xchg   ebx,eax
  413687:	lods   eax,DWORD PTR ds:[esi]
  413688:	xchg   DWORD PTR [ebp+0x7e],eax
  41368b:	mov    al,0xbd
  41368d:	mov    esi,0xa4f37965
  413692:	mov    dl,0x7d
  413694:	inc    esi
  413695:	loope  0x4136b0
  413697:	dec    edi
  413698:	lahf   
  413699:	(bad)  
  41369a:	es pop eax
  41369c:	pop    edi
  41369d:	jg     0x4136c8
  41369f:	mov    ?,edx
  4136a1:	popf   
  4136a2:	dec    ecx
  4136a3:	aam    0x67
  4136a5:	into   
  4136a6:	dec    ecx
  4136a7:	sub    al,BYTE PTR [ebx]
  4136a9:	icebp  
  4136aa:	dec    dx
  4136ac:	repnz adc al,ch
  4136af:	dec    ebp
  4136b0:	(bad)  [edx+eax*4]
  4136b3:	inc    eax
  4136b4:	ficom  WORD PTR [edi-0x27601f08]
  4136ba:	inc    ebp
  4136bb:	push   cs
  4136bc:	and    al,bh
  4136be:	and    ah,bl
  4136c0:	jmp    0x413676
  4136c2:	jge    0x41371c
  4136c4:	stc    
  4136c5:	push   cs
  4136c6:	jmp    0xc1dbcdf7
  4136cb:	ins    DWORD PTR es:[edi],dx
  4136cc:	(bad)  
  4136cd:	icebp  
  4136ce:	ins    BYTE PTR es:[edi],dx
  4136cf:	pop    ebx
  4136d0:	imul   edx,ecx,0xd50a1967
  4136d6:	mov    dl,0x6a
  4136d8:	call   0x196e2ae9
  4136dd:	xlat   BYTE PTR ds:[ebx]
  4136de:	or     dl,dl
  4136e0:	xchg   BYTE PTR [edx-0xd2d1210],bl
  4136e6:	shl    BYTE PTR [edi+0x1f53d2c6],cl
  4136ec:	iret   
  4136ed:	mov    esp,0x70cd224
  4136f2:	xor    eax,0x6bd71ed
  4136f7:	ja     0x4136c8
  4136f9:	add    eax,0xb20be5b7
  4136fe:	shl    DWORD PTR [edi],cl
  413700:	jo     0x4136e7
  413702:	das    
  413703:	inc    ebx
  413704:	and    BYTE PTR [edi+0x21a1b450],0x8c
  41370b:	lods   al,BYTE PTR ds:[esi]
  41370c:	xchg   ecx,eax
  41370d:	add    DWORD PTR [ecx+0x6f6732e5],ebx
  413713:	call   0x7276:0x93b97978
  41371a:	pop    edx
  41371b:	pop    edi
  41371c:	mov    ecx,0xecd1f98b
  413721:	loopne 0x4136ab
  413723:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413724:	xor    esp,DWORD PTR ds:0xd9519e73
  41372a:	xchg   edx,eax
  41372b:	pop    ecx
  41372c:	xchg   ecx,edi
  41372e:	pop    ebp
  41372f:	in     al,dx
  413730:	cmp    ch,BYTE PTR [edi]
  413732:	or     DWORD PTR [ebx-0x301d5d8b],edi
  413738:	push   ecx
  413739:	mov    al,0xa4
  41373b:	rcr    DWORD PTR [ecx],1
  41373d:	inc    ecx
  41373e:	inc    esp
  41373f:	jo     0x413733
  413741:	scas   eax,DWORD PTR es:[edi]
  413742:	jne    0x4136f1
  413744:	test   al,0x47
  413746:	mov    cl,0xdb
  413748:	or     al,0x4d
  41374a:	pop    esp
  41374b:	push   ecx
  41374c:	pop    ebx
  41374d:	pusha  
  41374e:	xor    ebx,edi
  413750:	aas    
  413751:	mov    ds:0x5e2bbc66,al
  413756:	jl     0x4137bd
  413758:	in     al,0x6b
  41375a:	xlat   BYTE PTR ds:[ebx]
  41375b:	fst    QWORD PTR [ebx-0x4d]
  41375e:	cmp    ebx,esi
  413760:	adc    eax,0xdafe6f01
  413765:	adc    DWORD PTR [eax-0x3f7643a8],0xd8fa2751
  41376f:	fsub   st,st(5)
  413771:	pop    ss
  413772:	arpl   ax,si
  413774:	scas   eax,DWORD PTR es:[edi]
  413775:	xchg   edx,eax
  413776:	adc    eax,DWORD PTR [ecx-0x6567b57d]
  41377c:	aam    0xea
  41377e:	push   cs
  41377f:	add    DWORD PTR [eax-0x5d],esi
  413782:	nop
  413783:	cwde   
  413784:	hlt    
  413785:	aas    
  413786:	in     eax,dx
  413787:	in     eax,dx
  413788:	push   cs
  413789:	and    cl,BYTE PTR [ebx+0x1b]
  41378c:	add    edi,DWORD PTR [ecx+0x33142a74]
  413792:	sub    cl,al
  413794:	(bad)  
  413795:	adc    ebp,esp
  413797:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413798:	shl    bh,cl
  41379a:	push   0x55
  41379c:	idiv   dh
  41379e:	ss mov ebp,0xb505b564
  4137a4:	enter  0xe7fc,0xc0
  4137a8:	push   eax
  4137a9:	call   0xf578211d
  4137ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137af:	imul   esi,ecx,0x68
  4137b2:	shr    BYTE PTR ss:[ecx+edx*8+0x61],1
  4137b7:	cld    
  4137b8:	add    BYTE PTR [edi],cl
  4137ba:	loop   0x413797
  4137bc:	(bad)  
  4137bd:	outs   dx,BYTE PTR ds:[esi]
  4137be:	outs   dx,BYTE PTR ds:[esi]
  4137bf:	ficom  DWORD PTR [esi+0x76]
  4137c2:	daa    
  4137c3:	cwde   
  4137c4:	jmp    0xe00f:0x56b08690
  4137cb:	clc    
  4137cc:	ror    BYTE PTR [ecx],0x41
  4137cf:	jmp    FWORD PTR [edi]
  4137d1:	pop    ebx
  4137d2:	sahf   
  4137d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137d4:	adc    eax,0x28b3000e
  4137d9:	mov    esi,0x9303d829
  4137de:	mov    cl,0x45
  4137e0:	xchg   ebx,eax
  4137e1:	dec    edx
  4137e2:	xchg   edx,eax
  4137e3:	leave  
  4137e4:	sub    DWORD PTR [ebx-0x32dbcc45],eax
  4137ea:	test   DWORD PTR [ebx+0x39],edx
  4137ed:	out    dx,eax
  4137ee:	xchg   esi,eax
  4137ef:	mov    dh,0x69
  4137f1:	push   ebx
  4137f2:	jmp    0xfa2e1f3b
  4137f7:	das    
  4137f8:	mov    ah,0xb6
  4137fa:	push   DWORD PTR cs:[esi-0x62]
  4137fe:	es imul edi,edi,0x0
  413802:	push   ds
  413803:	leave  
  413804:	pop    edx
  413805:	cmp    BYTE PTR [eax],ah
  413807:	rcr    BYTE PTR ds:0xe55e349c,1
  41380d:	loop   0x4137e5
  41380f:	add    edi,DWORD PTR [edx+0x21]
  413812:	or     ebp,DWORD PTR ds:0x5df8389b
  413818:	inc    edi
  413819:	or     edi,DWORD PTR [edi]
  41381b:	test   edi,esp
  41381d:	lds    edi,FWORD PTR gs:[ebx]
  413820:	xor    bh,bl
  413822:	adc    DWORD PTR [edi-0x79],ebx
  413825:	pop    edx
  413826:	out    0xfa,al
  413828:	inc    ebp
  413829:	mov    ah,BYTE PTR [edx+0x50]
  41382c:	and    BYTE PTR [ebx],0xd1
  41382f:	repnz xchg edi,eax
  413831:	jbe    0x4138a2
  413833:	cmp    bl,0x5e
  413836:	push   ebx
  413837:	add    BYTE PTR [ebx],bh
  413839:	(bad)  
  41383a:	and    bl,dl
  41383c:	pop    ds
  41383d:	fs (bad) 
  413840:	fucomi st,st(5)
  413842:	je     0x413866
  413844:	adc    al,0xd6
  413846:	pop    ebp
  413847:	adc    DWORD PTR [esi+0x1d45b492],eax
  41384d:	outs   dx,DWORD PTR ds:[esi]
  41384e:	call   0xbbb06c64
  413853:	xchg   esi,eax
  413854:	daa    
  413855:	test   eax,0xd61e5f71
  41385a:	cmp    DWORD PTR [ebx],eax
  41385c:	xor    eax,0xd9ddbb7a
  413861:	scas   al,BYTE PTR es:[edi]
  413862:	mov    ebx,0x896a5ba3
  413867:	popf   
  413868:	jp     0x4138b1
  41386a:	scas   eax,DWORD PTR es:[edi]
  41386b:	retf   0x32cf
  41386e:	inc    eax
  41386f:	and    eax,0x39852b4a
  413874:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413875:	sub    bl,BYTE PTR [ebx]
  413877:	adc    eax,DWORD PTR [ecx-0x65a4ae6f]
  41387d:	sbb    dh,BYTE PTR [esi-0x6aa7986c]
  413883:	cmp    eax,0x2febb7e9
  413888:	mov    dl,0x11
  41388a:	(bad)  
  41388b:	popf   
  41388c:	leave  
  41388d:	fs dec esi
  41388f:	xor    BYTE PTR [ebx+0x12],bh
  413892:	jmp    0x413845
  413894:	and    dl,BYTE PTR [ebx+0x2e]
  413897:	mov    esi,DWORD PTR [edx+0x5705b3f0]
  41389d:	or     esp,DWORD PTR [esi+eax*1-0x53]
  4138a1:	call   0x743d:0xe99b4f3b
  4138a8:	mov    dl,0x38
  4138aa:	punpckhwd mm1,mm0
  4138ad:	mov    al,ds:0xb3d8d83a
  4138b2:	shl    BYTE PTR [ecx+0xb],1
  4138b5:	lea    esi,[esi+0x7a2357fc]
  4138bb:	jg     0x413841
  4138bd:	enter  0xc129,0x70
  4138c1:	icebp  
  4138c2:	gs sbb al,0x9f
  4138c5:	mov    dh,0x59
  4138c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138c8:	or     eax,0xd1e94166
  4138cd:	pop    DWORD PTR [edi]
  4138cf:	lock mov bl,0xc6
  4138d2:	es in  eax,0x28
  4138d5:	add    esp,DWORD PTR [ebp+0x2e89d842]
  4138db:	mov    edi,ds
  4138dd:	rol    cx,cl
  4138e0:	adc    edx,DWORD PTR [ebx]
  4138e2:	test   DWORD PTR [eax],esi
  4138e4:	inc    eax
  4138e5:	pusha  
  4138e6:	cdq    
  4138e7:	shl    DWORD PTR [ebx-0x6c],1
  4138ea:	sub    al,0xf9
  4138ec:	xchg   ebx,eax
  4138ed:	pop    esi
  4138ee:	sub    ebp,DWORD PTR [ecx+0x5e]
  4138f1:	loopne 0x4138e2
  4138f3:	mov    edx,DWORD PTR [edx+eiz*1+0x5e]
  4138f7:	inc    edx
  4138f8:	loop   0x4138c7
  4138fa:	or     BYTE PTR [edx+0xa194bd0],cl
  413900:	xchg   edx,eax
  413901:	cmp    ah,al
  413903:	lods   al,BYTE PTR ds:[esi]
  413904:	or     al,0x50
  413906:	and    eax,0x63912f20
  41390b:	out    dx,eax
  41390c:	jmp    0x4138b6
  41390e:	xor    al,0xf9
  413910:	dec    esi
  413911:	dec    ebx
  413912:	imul   ebp,DWORD PTR ds:0x594ea042,0x1a2c421
  41391c:	stc    
  41391d:	inc    edx
  41391e:	gs out 0x1e,eax
  413921:	pop    edx
  413922:	lahf   
  413923:	int3   
  413924:	cmp    eax,0xc03fb5be
  413929:	and    dh,BYTE PTR [edi]
  41392b:	retf   
  41392c:	sbb    al,0x5e
  41392e:	push   ebp
  41392f:	adc    ecx,edx
  413931:	retf   
  413932:	mov    ecx,0xd3a448b1
  413937:	mov    esp,0xfa21766a
  41393c:	test   BYTE PTR [eax-0x1ca5a77d],bh
  413942:	scas   eax,DWORD PTR es:[edi]
  413943:	mov    ?,WORD PTR ds:0x7b955fde
  413949:	fcomip st,st(2)
  41394b:	sbb    ah,BYTE PTR [eax-0x1f]
  41394e:	and    BYTE PTR [ebp-0x26],dl
  413951:	mov    edi,0x47f7cc67
  413956:	in     al,dx
  413957:	out    dx,al
  413958:	mov    edi,0x36ecf3c8
  41395d:	fisttp DWORD PTR [eax+0x5a9fc36]
  413963:	loopne 0x4139da
  413965:	daa    
  413966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413967:	arpl   WORD PTR [eax-0x71],di
  41396a:	clc    
  41396b:	pop    edi
  41396c:	adc    cl,cl
  41396e:	mov    gs,WORD PTR [ebx]
  413970:	xor    BYTE PTR [esi+ecx*4-0x7e],ch
  413974:	std    
  413975:	jecxz  0x413926
  413977:	push   es
  413978:	add    esi,DWORD PTR [esi+edi*8+0x3506ff2d]
  41397f:	(bad)  
  413980:	icebp  
  413981:	cmc    
  413982:	add    al,0x58
  413984:	xchg   edx,eax
  413985:	mov    ecx,0x91a2108d
  41398a:	mov    al,0xcd
  41398c:	mov    bl,0x52
  41398e:	push   ss
  41398f:	add    BYTE PTR [edx+0x10b1888d],ch
  413995:	mov    al,0xef
  413997:	and    DWORD PTR [edi-0x3f],esp
  41399a:	or     ah,ah
  41399c:	cmp    DWORD PTR [esi],edx
  41399e:	mov    al,ds:0x7a4036bf
  4139a3:	jl     0x413a09
  4139a5:	stos   DWORD PTR es:[edi],eax
  4139a6:	pop    edi
  4139a7:	xor    DWORD PTR [ecx-0x1b],0xffffff89
  4139ab:	mov    DWORD PTR [ecx],esp
  4139ad:	imul   edx,DWORD PTR [ebx],0x78
  4139b0:	adc    DWORD PTR gs:[ebx-0x260fd06b],edx
  4139b7:	out    0xe8,al
  4139b9:	mov    cl,0x33
  4139bb:	fs mov ah,0xa1
  4139be:	mov    ds:0x9d1a095e,eax
  4139c3:	adc    bl,BYTE PTR [eax-0x2a]
  4139c6:	sbb    DWORD PTR [esi],ebp
  4139c8:	push   es
  4139c9:	idiv   BYTE PTR [eax+0x59]
  4139cc:	inc    esp
  4139cd:	in     al,0x7b
  4139cf:	fwait
  4139d0:	jp     0x4139d3
  4139d2:	xchg   ecx,eax
  4139d3:	clc    
  4139d4:	into   
  4139d5:	repnz mov dh,0x1a
  4139d8:	sbb    al,0x68
  4139da:	add    esp,ebx
  4139dc:	inc    edx
  4139dd:	adc    BYTE PTR [edi],0x2f
  4139e0:	xchg   ebp,eax
  4139e1:	cmp    BYTE PTR [edx-0x21],0x79
  4139e5:	(bad)  
  4139e6:	mov    bl,0x2f
  4139e8:	pop    es
  4139e9:	gs sar dl,1
  4139ec:	mov    al,BYTE PTR ds:[esi]
  4139ef:	xchg   ecx,eax
  4139f0:	leave  
  4139f1:	push   ss
  4139f2:	xchg   esi,eax
  4139f3:	sbb    al,0x59
  4139f5:	call   0x9bbf523c
  4139fa:	retf   
  4139fb:	adc    BYTE PTR [esi-0x544070dc],ah
  413a01:	fnstcw WORD PTR [ecx-0x35109a34]
  413a07:	mov    ebx,0xbe2b5433
  413a0c:	fidivr WORD PTR [esi]
  413a0e:	inc    esp
  413a0f:	call   DWORD PTR [esi-0x5ae5e7e2]
  413a15:	sub    dl,bh
  413a17:	clc    
  413a18:	inc    esi
  413a19:	out    0x58,eax
  413a1b:	push   esp
  413a1c:	ds cs cwde 
  413a1f:	push   cs
  413a20:	fisub  WORD PTR [edi+ebp*2+0x599c1e65]
  413a27:	or     BYTE PTR [edi+0x286dbf6d],0x69
  413a2e:	jo     0x413a0b
  413a30:	js     0x413a5a
  413a32:	mov    WORD PTR [edi+0x6fc8952f],?
  413a38:	push   cs
  413a39:	popa   
  413a3a:	cli    
  413a3b:	mov    fs,WORD PTR [eax+0x5a]
  413a3e:	pop    ss
  413a3f:	fcom   QWORD PTR [esi+ebx*4-0x42]
  413a43:	nop
  413a44:	dec    edx
  413a45:	popf   
  413a46:	push   ebx
  413a47:	sub    eax,0xc793b8d8
  413a4c:	and    eax,0x17c5ce32
  413a52:	stc    
  413a53:	loopne 0x413a2f
  413a55:	mov    bl,0xb
  413a57:	mov    esi,DWORD PTR [ebx-0x45]
  413a5a:	mov    edi,0xdaa77051
  413a5f:	in     al,0x4a
  413a61:	sbb    ah,dh
  413a63:	lods   al,BYTE PTR ds:[esi]
  413a64:	cdq    
  413a65:	and    BYTE PTR [ebp-0x79],cl
  413a68:	sysexit 
  413a6a:	mov    al,BYTE PTR [esi-0x26]
  413a6d:	in     al,0xcf
  413a6f:	sbb    edx,ecx
  413a71:	jb     0x413a38
  413a73:	cli    
  413a74:	and    bh,BYTE PTR [edi+0x77]
  413a77:	out    dx,eax
  413a78:	cs sub al,0x1e
  413a7b:	sti    
  413a7c:	or     BYTE PTR [edx+0xf],ah
  413a7f:	adc    al,0x5f
  413a81:	xchg   DWORD PTR [eiz*2-0x883be3],edx
  413a88:	fcomp  QWORD PTR fs:[ebx+0x662efb6e]
  413a8f:	neg    BYTE PTR [ebp-0x5a]
  413a92:	xchg   edx,eax
  413a93:	sbb    ebx,esp
  413a95:	loopne 0x413b0e
  413a97:	jmp    0x413a22
  413a99:	loop   0x413afa
  413a9b:	mov    ebp,0xd4929ae1
  413aa0:	shr    BYTE PTR [eax],cl
  413aa2:	jnp    0x413aa7
  413aa4:	(bad)  
  413aa5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413aa6:	push   ss
  413aa7:	scas   eax,DWORD PTR es:[edi]
  413aa8:	fmul   DWORD PTR [edx]
  413aaa:	xchg   ebx,eax
  413aab:	mov    esi,0xd5c2d7d0
  413ab0:	out    0xd4,eax
  413ab2:	out    dx,eax
  413ab3:	or     DWORD PTR ds:0xeb60cac2,ecx
  413ab9:	iret   
  413aba:	mov    eax,0xdaf7bb58
  413abf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ac0:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  413ac2:	pop    esp
  413ac3:	and    BYTE PTR [eax-0x700bd492],0xd3
  413aca:	add    edx,ecx
  413acc:	pop    esi
  413acd:	inc    edi
  413ace:	js     0x413ac3
  413ad0:	cmp    eax,0x688996ae
  413ad5:	jge    0x413ab6
  413ad7:	add    DWORD PTR [edx],0x36
  413ada:	ret    
  413adb:	fnstenv [ebp-0x212bcbb0]
  413ae1:	mov    edi,0x3a813650
  413ae6:	and    ah,BYTE PTR [edx-0x117e5b6f]
  413aec:	xor    DWORD PTR ds:0x148aa676,edx
  413af2:	add    ebx,DWORD PTR [esi+ecx*8]
  413af5:	push   0x23
  413af7:	add    al,0x22
  413af9:	push   edi
  413afa:	cmp    BYTE PTR [ecx-0x13],cl
  413afd:	lods   eax,DWORD PTR ds:[esi]
  413afe:	pop    esi
  413aff:	jne    0x413aa5
  413b01:	xchg   esp,eax
  413b02:	xor    al,0xad
  413b04:	fcmove st,st(6)
  413b06:	jle    0x413aa3
  413b08:	dec    esp
  413b09:	jne    0x413b60
  413b0b:	mov    ch,0x66
  413b0d:	pop    edi
  413b0e:	loopne 0x413b40
  413b10:	inc    edx
  413b11:	inc    DWORD PTR [edx-0x35801010]
  413b17:	add    eax,0xb09c09f1
  413b1c:	loop   0x413aa6
  413b1e:	mov    ebx,0xa05bd653
  413b23:	(bad)  
  413b24:	aad    0x1b
  413b26:	jae    0x413b08
  413b28:	out    0x6f,al
  413b2a:	cs gs xchg edi,eax
  413b2d:	daa    
  413b2e:	xchg   esi,eax
  413b2f:	jecxz  0x413aee
  413b31:	fld    DWORD PTR [ebx-0x288ae62d]
  413b37:	enter  0xb8d5,0x1f
  413b3b:	or     eax,0xae83e27c
  413b40:	cmp    al,BYTE PTR [ecx]
  413b42:	lods   eax,DWORD PTR ds:[esi]
  413b43:	inc    ebx
  413b44:	mov    esp,0x7eecf11
  413b49:	mov    ecx,0x5d47db39
  413b4e:	call   0xdac1:0x888e6d24
  413b55:	pop    esi
  413b56:	add    edi,DWORD PTR [eax+0x4b]
  413b59:	sub    DWORD PTR [esi-0x5],ebp
  413b5c:	jmp    0x413aed
  413b5e:	xchg   esi,edx
  413b60:	sub    eax,0x69f66398
  413b65:	pop    esp
  413b66:	outs   dx,BYTE PTR ds:[esi]
  413b67:	mov    dl,0xf4
  413b69:	mov    bl,0x41
  413b6b:	mov    edx,?
  413b6d:	pop    ecx
  413b6e:	push   0x39
  413b70:	ret    
  413b71:	xchg   esi,eax
  413b72:	sar    bh,0xa7
  413b75:	adc    bh,BYTE PTR [ecx]
  413b77:	mov    edx,0xbf44556f
  413b7c:	in     al,dx
  413b7d:	fdivr  DWORD PTR [edi]
  413b7f:	sub    al,0x8a
  413b81:	dec    edi
  413b82:	test   DWORD PTR gs:[ebx+0x7bb543e],0xce1b3ff8
  413b8d:	cwde   
  413b8e:	in     al,0xa1
  413b90:	inc    esi
  413b91:	popa   
  413b92:	sub    al,0xd6
  413b94:	mov    eax,0xf85e46a7
  413b99:	sar    DWORD PTR [ebp+0x43],1
  413b9c:	gs push ebx
  413b9e:	(bad)  
  413b9f:	(bad)  
  413ba0:	fiadd  WORD PTR [ecx+eax*8+0x64c6987e]
  413ba7:	lahf   
  413ba8:	fs iret 
  413baa:	or     BYTE PTR [ecx+eax*2],al
  413bad:	cmp    DWORD PTR [eax+ebp*2],esp
  413bb0:	adc    DWORD PTR [edi],edi
  413bb2:	pop    ebp
  413bb3:	pop    ds
  413bb4:	pop    eax
  413bb5:	push   esp
  413bb6:	pop    ss
  413bb7:	xor    eax,0xa6e72fb4
  413bbc:	mov    al,0xe
  413bbe:	repz jg 0x413b75
  413bc1:	cdq    
  413bc2:	gs das 
  413bc4:	push   esp
  413bc5:	cmp    dl,BYTE PTR [eax+esi*8]
  413bc8:	(bad)  
  413bca:	call   0xaa80:0x2aa57b54
  413bd1:	xchg   ecx,eax
  413bd2:	mov    bl,0xd9
  413bd4:	xor    al,0xf1
  413bd6:	iret   
  413bd7:	xchg   edi,eax
  413bd8:	icebp  
  413bd9:	ficom  DWORD PTR [ecx+0xc285a26]
  413bdf:	cmp    BYTE PTR [edi+0x4e],0x6c
  413be3:	lods   al,BYTE PTR ds:[esi]
  413be4:	faddp  st(2),st
  413be6:	ret    0x52d
  413be9:	test   BYTE PTR [ebx],dl
  413beb:	sub    BYTE PTR [esi+0x113bd0],0x73
  413bf2:	adc    dl,bh
  413bf4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413bf5:	repnz cdq 
  413bf7:	cmp    eax,0xd2d8e6fb
  413bfc:	jae    0x413b85
  413bfe:	les    ecx,FWORD PTR [ecx]
  413c00:	retf   0xfa60
  413c03:	jl     0x413bf9
  413c05:	xor    edi,edi
  413c07:	jecxz  0x413c05
  413c09:	aad    0x5a
  413c0b:	fidivr WORD PTR [eax]
  413c0d:	pop    esi
  413c0e:	mov    dh,0xf8
  413c10:	add    eax,DWORD PTR [ecx+0x79670908]
  413c16:	and    BYTE PTR [ebp+0x3d],0xba
  413c1a:	and    esi,ecx
  413c1c:	(bad)  
  413c1d:	push   ecx
  413c1e:	adc    bl,BYTE PTR [eax]
  413c20:	daa    
  413c21:	ret    0xfeee
  413c24:	or     eax,DWORD PTR [ecx+0x68]
  413c27:	pop    eax
  413c28:	jp     0x413c2a
  413c2a:	adc    al,0xd7
  413c2c:	scas   eax,DWORD PTR es:[edi]
  413c2d:	mov    al,ds:0x8f582400
  413c32:	into   
  413c33:	xchg   edi,eax
  413c34:	sbb    eax,0xb50d7d2b
  413c39:	xor    eax,0x6960b268
  413c3e:	mov    ebp,0x77fca2c
  413c43:	xor    DWORD PTR [edx-0x606c4df2],edi
  413c49:	sar    BYTE PTR [edx],0x1c
  413c4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413c4d:	cmp    al,0xad
  413c4f:	and    BYTE PTR [di+0x6c],ah
  413c53:	rcr    DWORD PTR [edx+0x27],0xf4
  413c57:	out    dx,al
  413c58:	lods   eax,DWORD PTR ds:[esi]
  413c59:	xor    DWORD PTR [ebp+0x46],edi
  413c5c:	imul   ebp,ebx,0x6ab00865
  413c62:	test   eax,0xbe585e68
  413c67:	cmp    bh,ah
  413c69:	adc    DWORD PTR [ebx+0x52],0xffffffc9
  413c6d:	xchg   edi,eax
  413c6e:	dec    BYTE PTR [eax+0x7af7f48a]
  413c74:	sbb    ebp,DWORD PTR [ebx-0x354570a8]
  413c7a:	push   ds
  413c7b:	sbb    DWORD PTR [edx+0x1a],edi
  413c7e:	nop
  413c7f:	xchg   edx,eax
  413c80:	mov    al,0xfe
  413c82:	mov    edx,0x6d39f691
  413c87:	mov    al,0xff
  413c89:	push   eax
  413c8a:	mov    es,edi
  413c8c:	mov    eax,0x61c8dd64
  413c91:	jle    0x413c82
  413c93:	jo     0x413ccd
  413c95:	pop    esp
  413c96:	mov    dl,0xe
  413c98:	cmp    dh,dl
  413c9a:	aam    0x6b
  413c9c:	(bad)  
  413c9d:	cs add esi,eax
  413ca0:	pop    ecx
  413ca1:	(bad)  
  413ca2:	hlt    
  413ca3:	mov    esp,0xe267a4f1
  413ca8:	(bad)  
  413ca9:	mov    edx,DWORD PTR [eax-0x5b]
  413cac:	sub    eax,0x34d0b1ec
  413cb1:	fldenv [ebx]
  413cb3:	test   al,0x87
  413cb5:	cmc    
  413cb6:	popf   
  413cb7:	xchg   ebp,eax
  413cb8:	cmp    DWORD PTR [bx+0x64e1],edi
  413cbd:	mov    esp,gs
  413cbf:	loop   0x413d40
  413cc1:	outs   dx,DWORD PTR ds:[esi]
  413cc2:	push   edx
  413cc3:	jp     0x413c83
  413cc5:	pop    edx
  413cc6:	jne    0x413d12
  413cc8:	ins    BYTE PTR es:[edi],dx
  413cc9:	cmp    eax,0xebaa6bbb
  413cce:	dec    ecx
  413ccf:	ret    
  413cd0:	xchg   ecx,eax
  413cd1:	sbb    al,0x9b
  413cd3:	pop    edx
  413cd4:	and    BYTE PTR [edi-0x11],ah
  413cd7:	loope  0x413d14
  413cd9:	dec    ax
  413cdb:	scas   eax,DWORD PTR es:[edi]
  413cdc:	cmp    BYTE PTR [ebx+0x7e62d62a],dh
  413ce2:	retf   0x1f5e
  413ce5:	daa    
  413ce6:	(bad)  
  413ce7:	div    BYTE PTR [edi+0x4c9027ae]
  413ced:	out    0xe5,al
  413cef:	out    0x64,eax
  413cf1:	mov    cl,0xc7
  413cf3:	shl    DWORD PTR [eax],0x32
  413cf6:	push   edi
  413cf7:	ja     0x413d44
  413cf9:	pop    es
  413cfa:	cs jmp 0x612c:0x3c1f39b0
  413d02:	test   al,cl
  413d04:	pop    esp
  413d05:	stos   DWORD PTR es:[edi],eax
  413d06:	icebp  
  413d07:	push   eax
  413d08:	push   ds
  413d09:	test   BYTE PTR [ebx],bl
  413d0b:	sbb    BYTE PTR [ebp-0x16],ch
  413d0e:	call   0x53c3ab9
  413d13:	xor    DWORD PTR [esi],ebp
  413d15:	xchg   esp,edx
  413d17:	pop    esi
  413d18:	dec    eax
  413d19:	mov    ch,0x4e
  413d1b:	or     DWORD PTR [ecx],ecx
  413d1d:	pop    esp
  413d1e:	jle    0x413d32
  413d20:	and    eax,DWORD PTR [edi]
  413d22:	test   al,dl
  413d24:	mov    DWORD PTR cs:[edi-0x4ddb3729],0x53282a1b
  413d2f:	lods   al,BYTE PTR ds:[esi]
  413d30:	xchg   ebx,eax
  413d31:	out    0x80,al
  413d33:	in     eax,dx
  413d34:	daa    
  413d35:	les    edi,FWORD PTR [ebx-0x7a4d69e7]
  413d3b:	cmp    cl,BYTE PTR [ebx+0x29]
  413d3e:	jnp    0x413dac
  413d40:	jae    0x413cf9
  413d42:	inc    ecx
  413d43:	xor    al,0xf7
  413d45:	cwde   
  413d46:	xchg   edi,edx
  413d48:	outs   dx,BYTE PTR ds:[esi]
  413d49:	popf   
  413d4a:	sldt   ebp
  413d4d:	fdivp  st(1),st
  413d4f:	sub    BYTE PTR [ebx],0x23
  413d52:	push   esi
  413d53:	test   DWORD PTR [edx],esi
  413d55:	pop    ss
  413d56:	adc    bl,BYTE PTR [ebx+0xd]
  413d59:	rcr    dl,0x68
  413d5c:	inc    edi
  413d5d:	mov    ecx,0xe4d46727
  413d62:	out    0xe3,eax
  413d64:	retf   0x1142
  413d67:	inc    esi
  413d68:	stos   BYTE PTR es:[edi],al
  413d69:	arpl   WORD PTR [edi],bp
  413d6b:	push   edx
  413d6c:	loop   0x413dd6
  413d6e:	xchg   ecx,eax
  413d6f:	and    al,0x2
  413d71:	pop    edx
  413d72:	out    0x44,al
  413d74:	or     eax,0xb947188b
  413d79:	fcmovbe st,st(2)
  413d7b:	dec    edi
  413d7c:	ret    
  413d7d:	xchg   ebp,eax
  413d7e:	rcr    BYTE PTR [ecx],1
  413d80:	or     DWORD PTR [ecx+0x80a897f],eax
  413d86:	rol    DWORD PTR [ecx-0x56],0x74
  413d8a:	(bad)  
  413d8b:	je     0x413d83
  413d8d:	xchg   ebx,eax
  413d8e:	std    
  413d8f:	cld    
  413d90:	push   edi
  413d91:	dec    ebx
  413d92:	jg     0x413d9e
  413d94:	inc    ebx
  413d95:	inc    bx
  413d97:	mov    cl,0x85
  413d99:	xchg   ebx,eax
  413d9a:	mov    eax,0x5b2257e3
  413d9f:	ins    DWORD PTR es:[edi],dx
  413da0:	pop    esi
  413da1:	cli    
  413da2:	and    al,0x2e
  413da4:	sub    cl,BYTE PTR [ebp+0x461160e]
  413daa:	mov    esp,0xadda56e8
  413daf:	stc    
  413db0:	cmc    
  413db1:	cmp    ebp,DWORD PTR [edx]
  413db3:	cmp    BYTE PTR [ecx-0x72a9fed2],0x16
  413dba:	sub    eax,0xef0b543a
  413dbf:	bound  esp,QWORD PTR [edx-0x67]
  413dc2:	sbb    al,0x4c
  413dc5:	in     al,dx
  413dc6:	repnz add DWORD PTR [ebp+0x74],0xe2bac3f
  413dce:	xor    al,0x13
  413dd0:	and    eax,esp
  413dd2:	cmp    esi,DWORD PTR [eax]
  413dd4:	test   DWORD PTR [ebp+0x78],esi
  413dd7:	push   eax
  413dd8:	scas   eax,DWORD PTR es:[edi]
  413dd9:	pop    ecx
  413dda:	fcomp  st(3)
  413ddc:	mov    ebp,0x2ddd091f
  413de1:	stos   DWORD PTR es:[edi],eax
  413de2:	shl    DWORD PTR [ebx+0x2585aeff],1
  413de8:	sbb    esi,edi
  413dea:	stos   DWORD PTR es:[edi],eax
  413deb:	and    eax,0xaa7bf6ab
  413df0:	jecxz  0x413de6
  413df2:	mov    ds:0xd99b0c27,eax
  413df7:	(bad)  
  413df8:	mov    bh,0x1d
  413dfa:	test   DWORD PTR [edx-0x267462a7],0x909f4ad8
  413e04:	test   ebp,esi
  413e06:	and    eax,0x3e95ce34
  413e0b:	imul   edx,DWORD PTR [ebp+0x389fbec],0x63
  413e12:	popf   
  413e13:	cmp    ah,BYTE PTR [eax]
  413e15:	enter  0x496a,0xd8
  413e19:	xchg   esp,eax
  413e1a:	pop    ecx
  413e1b:	outs   dx,BYTE PTR ds:[esi]
  413e1c:	push   cs
  413e1d:	jmp    0xb8626e98
  413e22:	mov    eax,ds:0xf0d8946b
  413e27:	jmp    0xcbb32550
  413e2c:	push   0xef940e68
  413e31:	nop
  413e32:	sbb    DWORD PTR [ecx],ebp
  413e34:	mov    ebp,0xe60ac215
  413e39:	je     0x413de2
  413e3b:	fwait
  413e3c:	cli    
  413e3d:	sahf   
  413e3e:	cmp    eax,0xe160ad73
  413e43:	ficomp WORD PTR [eax-0x79]
  413e46:	ins    DWORD PTR es:[edi],dx
  413e47:	cmp    edx,eax
  413e49:	mov    cl,0x76
  413e4b:	sub    bh,BYTE PTR [ebx+0x4]
  413e4e:	or     BYTE PTR ds:0xc1ce00d1,ah
  413e54:	scas   al,BYTE PTR es:[edi]
  413e55:	fs inc edi
  413e57:	outs   dx,DWORD PTR ds:[esi]
  413e58:	cmc    
  413e59:	es int 0x25
  413e5c:	in     al,0xc1
  413e5e:	call   0x4aac:0xb220ae8c
  413e65:	add    BYTE PTR [edx-0x37],0xf4
  413e69:	jbe    0x413eb0
  413e6b:	sub    al,BYTE PTR [edi]
  413e6d:	sub    al,0x2d
  413e6f:	mov    eax,0x6308aaef
  413e74:	xor    BYTE PTR ds:[esi*2+0x62bd8508],ah
  413e7c:	ret    
  413e7d:	dec    ebp
  413e7e:	sbb    DWORD PTR [ebx+edx*1+0x5b],eax
  413e82:	lods   eax,DWORD PTR ds:[esi]
  413e83:	mov    ebp,0x565c9c80
  413e88:	shr    ebp,1
  413e8a:	mov    DWORD PTR [ebx-0x9],eax
  413e8d:	imul   ebp,ebx,0x78
  413e90:	rol    BYTE PTR [esi],cl
  413e92:	in     eax,0xf8
  413e94:	ss jmp 0x3f5d02c0
  413e9a:	pop    ecx
  413e9b:	xchg   ebx,eax
  413e9c:	cmp    eax,0x1e41ec88
  413ea1:	loopne 0x413e9a
  413ea3:	rcr    BYTE PTR [edi],0x4e
  413ea6:	sub    al,0xc8
  413ea8:	jge    0x413e64
  413eaa:	mov    DWORD PTR [ecx],ecx
  413eac:	push   esi
  413ead:	not    BYTE PTR ds:0x7bb8385
  413eb3:	sub    ch,BYTE PTR [ebx]
  413eb5:	dec    esi
  413eb6:	and    ecx,DWORD PTR [ecx-0xc0f2779]
  413ebc:	add    esi,DWORD PTR [esi-0xd]
  413ebf:	and    dl,BYTE PTR [eax-0x5393b711]
  413ec5:	in     eax,0x8d
  413ec7:	clc    
  413ec8:	ins    DWORD PTR es:[edi],dx
  413ec9:	push   ss
  413eca:	cwde   
  413ecb:	dec    ecx
  413ecc:	push   ds
  413ecd:	fwait
  413ece:	mov    ecx,0xcfe432cd
  413ed3:	sub    al,0x19
  413ed5:	xchg   edx,eax
  413ed6:	mov    ebx,0xf2e5e1b0
  413edb:	cmp    eax,0x5a53d025
  413ee0:	pop    edi
  413ee1:	sar    BYTE PTR [edx],1
  413ee3:	retf   
  413ee4:	mov    ch,0xa0
  413ee6:	xlat   BYTE PTR gs:[ebx]
  413ee8:	adc    ebx,edi
  413eea:	pop    ds
  413eeb:	add    cl,BYTE PTR [esi-0x67]
  413eee:	jne    0x413e82
  413ef0:	inc    ebp
  413ef1:	iret   
  413ef2:	jecxz  0x413f08
  413ef4:	pop    ebx
  413ef5:	iret   
  413ef6:	jmp    0xe070:0x9c43888d
  413efd:	mov    bl,0x93
  413eff:	xor    al,0xdc
  413f01:	fstp   QWORD PTR [esi+edi*1]
  413f04:	popa   
  413f05:	cld    
  413f06:	inc    edi
  413f07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f08:	test   al,0xd6
  413f0a:	das    
  413f0b:	jo     0x413e9a
  413f0d:	fistp  DWORD PTR [esi-0x80]
  413f10:	nop
  413f11:	xor    eax,0xd380c1db
  413f16:	lods   eax,DWORD PTR ds:[esi]
  413f17:	and    ebx,DWORD PTR [edi-0x745af260]
  413f1d:	mov    dh,0xe8
  413f1f:	fcomp  DWORD PTR [ebx-0x8]
  413f22:	add    esi,DWORD PTR [edi-0x71]
  413f25:	aaa    
  413f26:	inc    esp
  413f27:	adc    al,bl
  413f29:	pop    ebp
  413f2a:	int3   
  413f2b:	mov    eax,ds:0x999d0cee
  413f30:	or     ebp,DWORD PTR [ecx-0x3b6f5a25]
  413f36:	(bad)  
  413f37:	mov    ch,0x78
  413f39:	adc    BYTE PTR [eax+0x56],al
  413f3c:	ins    DWORD PTR es:[edi],dx
  413f3d:	push   cs
  413f3e:	dec    ecx
  413f3f:	jmp    0x508df1ed
  413f44:	push   esi
  413f45:	(bad)  
  413f46:	push   edi
  413f47:	push   ecx
  413f48:	ins    DWORD PTR es:[edi],dx
  413f49:	ds and al,0xbe
  413f4c:	cdq    
  413f4d:	out    0x6d,eax
  413f4f:	pop    edi
  413f50:	gs mov eax,0xab3da4b5
  413f56:	retf   0x17e3
  413f59:	fcos   
  413f5b:	pushf  
  413f5c:	into   
  413f5d:	out    0x8e,al
  413f5f:	dec    eax
  413f60:	jmp    0x413fc7
  413f62:	mov    ebx,0x81227d52
  413f67:	fs push ds
  413f69:	fcmovnb st,st(4)
  413f6b:	fistp  WORD PTR [edx+edx*1]
  413f6e:	mov    al,0xa1
  413f70:	jmp    0x9d1c:0x30b5adcd
  413f77:	sbb    BYTE PTR [edx],ch
  413f79:	fld    QWORD PTR [edi-0x5b]
  413f7c:	inc    edi
  413f7d:	mov    dh,0x8c
  413f7f:	mov    cl,0x15
  413f81:	jmp    0x956457e9
  413f86:	out    dx,al
  413f87:	inc    eax
  413f88:	jb     0x413f9f
  413f8a:	mov    DWORD PTR [esi-0xbe73f9b],ebx
  413f90:	cmp    esi,ebp
  413f92:	outs   dx,DWORD PTR ds:[esi]
  413f93:	add    dh,BYTE PTR [ebp+0xc]
  413f96:	(bad)  
  413f97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f98:	stos   DWORD PTR es:[edi],eax
  413f99:	arpl   WORD PTR [esi-0x1e],ax
  413f9c:	jecxz  0x413f75
  413f9e:	adc    eax,0xe86ec283
  413fa3:	push   eax
  413fa4:	push   ebp
  413fa5:	(bad)  
  413fa6:	mov    ch,0x5a
  413fa8:	push   ss
  413fa9:	js     0x413fe0
  413fab:	repnz test al,0xe8
  413fae:	mov    bl,0xdb
  413fb0:	adc    cl,bl
  413fb2:	jle    0x413fd9
  413fb4:	test   al,0xec
  413fb6:	jnp    0x413f8e
  413fb8:	inc    esi
  413fba:	iret   
  413fbb:	test   DWORD PTR [edi],edi
  413fbd:	jns    0x413f70
  413fbf:	outs   dx,BYTE PTR ds:[esi]
  413fc0:	mov    dl,0x7a
  413fc2:	cs sbb ebp,esp
  413fc5:	pushf  
  413fc6:	lock pop ss
  413fc8:	mov    bl,0x8d
  413fca:	pop    esp
  413fcb:	xor    DWORD PTR [ebx+0x57],eax
  413fce:	cld    
  413fcf:	jg     0x413fd2
  413fd1:	cdq    
  413fd2:	pop    ss
  413fd3:	lock pop ebx
  413fd5:	scas   eax,DWORD PTR es:[edi]
  413fd6:	pop    ds
  413fd7:	ds dec ecx
  413fd9:	push   ecx
  413fda:	pop    ss
  413fdb:	push   esp
  413fdc:	into   
  413fdd:	mov    bl,0xc6
  413fdf:	mov    esp,0xd64d5eee
  413fe4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fe5:	nop
  413fe6:	jl     0x414013
  413fe8:	adc    esp,DWORD PTR [esp+ebp*2-0x661fbe2c]
  413fef:	jecxz  0x41402b
  413ff1:	inc    edx
  413ff2:	scas   eax,DWORD PTR es:[edi]
  413ff3:	ja     0x414054
  413ff5:	out    0x50,eax
  413ff7:	loopne 0x41406f
  413ff9:	push   edx
  413ffa:	adc    ch,BYTE PTR [ebx-0x6f2b693b]
  414000:	inc    eax
  414001:	test   bl,ah
  414003:	lea    ebx,[esi-0x46]
  414006:	rcr    BYTE PTR [eax-0x26aaadcd],1
  41400c:	jp     0x414087
  41400e:	add    eax,0x82a3a763
  414013:	mov    edi,edx
  414015:	clc    
  414016:	and    al,0x11
  414018:	and    al,0x13
  41401a:	in     al,0x4d
  41401c:	inc    ebp
  41401d:	push   eax
  41401e:	mov    ecx,0x112db026
  414023:	cmp    esi,DWORD PTR [eax+0x55]
  414026:	xor    eax,0xb0e642d5
  41402b:	sahf   
  41402c:	push   0xffffffec
  41402e:	pop    ecx
  41402f:	cmp    DWORD PTR [edx+0x6c],edi
  414032:	imul   ebp,DWORD PTR [edi+esi*4],0x43
  414036:	push   esp
  414037:	adc    al,BYTE PTR [edx-0x5b]
  41403a:	icebp  
  41403b:	pusha  
  41403c:	mov    edi,0x6e7a6121
  414041:	mov    DWORD PTR [esi-0x5ce5834b],edx
  414047:	(bad)  
  414048:	jbe    0x41403f
  41404a:	mov    ah,0xf9
  41404c:	ja     0x414020
  41404e:	ror    DWORD PTR [eax-0x58],1
  414051:	bound  edi,QWORD PTR [edx]
  414053:	mov    gs,WORD PTR [ebx+0x1c]
  414056:	mov    ebp,0x858dfe05
  41405b:	or     bl,0x46
  41405e:	mov    ch,0xcf
  414060:	inc    ebx
  414061:	int    0xb6
  414063:	dec    esp
  414064:	and    DWORD PTR [edi+edx*2-0x2e4ed43],ebx
  41406b:	sub    dl,bh
  41406d:	and    DWORD PTR [edx-0x1e3a4415],esi
  414073:	cdq    
  414074:	arpl   WORD PTR [ebx+0x16],cx
  414077:	out    dx,al
  414078:	ficomp WORD PTR [ebp+0x6a]
  41407b:	push   0x24
  41407d:	cmc    
  41407e:	add    al,0xce
  414080:	inc    ebp
  414081:	add    BYTE PTR [edx+0x31],al
  414084:	fucomip st,st(6)
  414086:	ds or  al,0x24
  414089:	jns    0x414033
  41408b:	fsub   DWORD PTR [edi+0x5f7646f0]
  414091:	xor    edx,0xffffff92
  414094:	test   BYTE PTR [eax+0x21b912d],0xdb
  41409b:	and    eax,0x1273ade0
  4140a0:	cmp    ecx,DWORD PTR [edi]
  4140a2:	fcomp  DWORD PTR [eax-0x58]
  4140a5:	fwait
  4140a6:	call   0xa06c:0xe38aaec8
  4140ad:	add    DWORD PTR [esi-0x5b],esi
  4140b0:	sub    BYTE PTR [ebx-0x130184ec],bl
  4140b6:	xlat   BYTE PTR ds:[ebx]
  4140b7:	popa   
  4140b8:	mov    esi,0xf0e6b9e
  4140bd:	add    dl,BYTE PTR [esi]
  4140bf:	int    0xbb
  4140c1:	js     0x414142
  4140c3:	popf   
  4140c4:	dec    ebp
  4140c5:	dec    eax
  4140c6:	push   ds
  4140c7:	pop    es
  4140c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4140c9:	stos   BYTE PTR es:[edi],al
  4140ca:	lea    edx,[edx+0x53]
  4140cd:	push   edx
  4140ce:	arpl   WORD PTR [edx-0x7f],si
  4140d1:	or     eax,0x792c2105
  4140d6:	sub    edx,ebx
  4140d8:	out    dx,al
  4140d9:	inc    edi
  4140da:	push   cs
  4140db:	pop    eax
  4140dc:	adc    DWORD PTR [edx+0x150a23a3],ebx
  4140e2:	dec    esp
  4140e3:	lods   eax,DWORD PTR ds:[esi]
  4140e4:	sbb    BYTE PTR [ebp+0x20894948],cl
  4140ea:	jb     0x41408f
  4140ec:	pusha  
  4140ed:	ret    0xb421
  4140f0:	cwde   
  4140f1:	inc    ebp
  4140f2:	cmp    DWORD PTR [ebp-0x47],0x3d
  4140f6:	mov    eax,ds:0x8304ccb5
  4140fb:	push   cs
  4140fc:	jmp    0x4218:0x1903d69
  414103:	pushfw 
  414105:	sti    
  414106:	popf   
  414107:	mov    dl,0x62
  414109:	pop    edi
  41410a:	mov    ds:0xf82f6506,al
  41410f:	jne    0x41409f
  414111:	xor    edx,DWORD PTR [edx]
  414113:	mov    eax,0x425dbf15
  414118:	xchg   esp,eax
  414119:	hlt    
  41411a:	into   
  41411b:	cdq    
  41411c:	es cmp dh,bl
  41411f:	xor    bh,dl
  414121:	fdivr  QWORD PTR [ebx]
  414123:	cmp    DWORD PTR [edx],esp
  414125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414126:	cwde   
  414127:	fcmovne st,st(2)
  414129:	sub    DWORD PTR ds:0xa1877dc8,esp
  41412f:	sub    DWORD PTR [ebx+0x75d65557],esp
  414135:	mov    esp,0x1d5d6b96
  41413a:	out    dx,eax
  41413b:	vmulss xmm4,xmm4,xmm3
  41413f:	fcomip st,st(6)
  414141:	out    0xfa,al
  414143:	pop    ebp
  414144:	sti    
  414145:	and    eax,0xd055d1e3
  41414a:	and    eax,0xcf9206bd
  41414f:	jp     0x4141c0
  414151:	jmp    0x22936e26
  414156:	pop    edi
  414157:	inc    edx
  414158:	mov    dh,0xdb
  41415a:	pop    es
  41415b:	(bad)  
  41415c:	push   ecx
  41415d:	adc    eax,0x3718d613
  414162:	and    DWORD PTR [ecx+0x74],edx
  414165:	push   eax
  414166:	pop    ds
  414167:	cmp    edx,DWORD PTR [edx]
  414169:	sahf   
  41416a:	jecxz  0x414143
  41416c:	hlt    
  41416d:	adc    DWORD PTR [edx],ecx
  41416f:	enter  0x2765,0xdd
  414173:	xchg   BYTE PTR [ebx+0x6d012092],dl
  414179:	pop    ss
  41417a:	cld    
  41417b:	not    BYTE PTR [eax]
  41417d:	push   ebp
  41417e:	fisttp WORD PTR [edx]
  414180:	je     0x4141fa
  414182:	dec    ebp
  414183:	dec    esp
  414184:	xor    dh,cl
  414186:	(bad)  
  414187:	jbe    0x41417c
  414189:	cmc    
  41418a:	push   ecx
  41418b:	pop    ebx
  41418c:	fcmovnbe st,st(3)
  41418e:	(bad)
  414191:	xchg   BYTE PTR [esi-0x47bffb7c],cl
  414197:	push   edx
  414198:	je     0x4141ca
  41419a:	sti    
  41419b:	mov    al,ds:0x10c982ea
  4141a0:	out    0xd7,eax
  4141a2:	shl    BYTE PTR [ecx],cl
  4141a4:	jmp    0xb840:0x8ad9d619
  4141ab:	pop    ebp
  4141ac:	in     al,dx
  4141ad:	cmp    al,0x5e
  4141af:	ins    DWORD PTR es:[edi],dx
  4141b0:	push   ds
  4141b1:	pop    eax
  4141b2:	idiv   BYTE PTR ds:0xa28251b5
  4141b8:	fnstenv [edx-0x478b5fde]
  4141be:	outs   dx,DWORD PTR ds:[esi]
  4141bf:	or     al,0x2e
  4141c1:	pcmpeqd mm7,QWORD PTR [eax+0x11]
  4141c5:	jno    0x41415b
  4141c7:	sub    DWORD PTR [edx+0x5d0ed85d],eax
  4141cd:	repz daa 
  4141cf:	jle    0x4141c4
  4141d1:	ins    DWORD PTR es:[edi],dx
  4141d2:	jns    0x414188
  4141d4:	xchg   ebp,eax
  4141d5:	mov    ebx,0x7c94468c
  4141da:	(bad)  
  4141db:	loope  0x4141cf
  4141dd:	mov    ecx,edi
  4141df:	and    eax,ebp
  4141e1:	rcr    DWORD PTR ds:0xfe76cfd,cl
  4141e7:	cmp    bh,BYTE PTR [edi+0x7f3ae333]
  4141ed:	and    edi,DWORD PTR [edx+0x76]
  4141f0:	push   0xbfc6b7fa
  4141f5:	(bad)  
  4141f6:	jmp    FWORD PTR [eax-0x6b]
  4141f9:	push   esi
  4141fa:	sbb    ebx,DWORD PTR [ebp+esi*4+0x33]
  4141fe:	jmp    0x267015b7
  414203:	ins    BYTE PTR es:[edi],dx
  414204:	sbb    eax,0xfb154864
  414209:	jae    0x414191
  41420b:	pop    esp
  41420c:	push   cs
  41420d:	shl    esp,cl
  41420f:	mov    BYTE PTR [bp+di-0x351e],dl
  414214:	(bad)  
  414215:	mov    WORD PTR [edx-0x5f],cs
  414218:	mov    ebx,0xe6c60f58
  41421d:	cmp    al,0x92
  41421f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414220:	pop    esi
  414221:	mov    cl,0x8c
  414223:	in     al,dx
  414224:	mov    eax,0x61ce97aa
  414229:	shl    BYTE PTR [ecx+ebx*1-0x21],0xc4
  41422e:	loop   0x414228
  414230:	ja     0x4142a9
  414232:	push   ss
  414233:	jb     0x4141ca
  414235:	xchg   BYTE PTR [ebp-0x22],bh
  414238:	mov    fs,WORD PTR [edi]
  41423a:	test   DWORD PTR [edx],edi
  41423c:	aas    
  41423d:	test   eax,0xcdf3846f
  414242:	sub    al,0x92
  414244:	ficom  DWORD PTR [esi+0x29]
  414247:	mov    esi,0x340bebf8
  41424c:	dec    ebp
  41424d:	aad    0x93
  41424f:	mov    al,0x62
  414251:	mov    ebp,0xa4c7a5f2
  414256:	or     ebp,DWORD PTR [eax]
  414258:	push   cs
  414259:	repz mov ebp,0x64d821ed
  41425f:	lods   eax,DWORD PTR ds:[esi]
  414260:	xlat   BYTE PTR ds:[ebx]
  414261:	sti    
  414262:	push   es
  414263:	pop    ecx
  414264:	jg     0x414253
  414266:	inc    edi
  414267:	out    dx,eax
  414268:	push   ds
  414269:	test   DWORD PTR [ebx+0x2a],ecx
  41426c:	and    DWORD PTR [eax+0x36],eax
  41426f:	inc    edi
  414270:	xor    eax,0xf50a23d5
  414275:	pop    edi
  414276:	in     eax,0xaa
  414278:	adc    BYTE PTR [edi+0x13],al
  41427b:	bound  edi,QWORD PTR [edi-0x69]
  41427e:	dec    ecx
  41427f:	shl    BYTE PTR [esp+ecx*4-0xf],0x98
  414284:	jecxz  0x414224
  414286:	sbb    eax,0x9aa289bd
  41428b:	fnsetpm(287 only) 
  41428d:	push   cs
  41428e:	repz ret 
  414290:	in     eax,0x9e
  414292:	adc    BYTE PTR [eax],al
  414294:	mov    ebx,0x715cbc59
  414299:	xchg   esi,eax
  41429a:	add    eax,0xa3525edf
  41429f:	rcl    DWORD PTR ss:[ecx-0x7f],0xc1
  4142a4:	sub    BYTE PTR [edi],ch
  4142a6:	jmp    0x5b75:0x3b249b3d
  4142ad:	mov    esi,0x492070fe
  4142b2:	inc    ebx
  4142b3:	dec    edx
  4142b4:	push   edx
  4142b5:	push   edx
  4142b6:	mov    eax,0x6c00a613
  4142bb:	dec    ebx
  4142bc:	ins    BYTE PTR es:[edi],dx
  4142bd:	or     edi,DWORD PTR [ebp-0x58]
  4142c0:	add    eax,0x8c2d0e23
  4142c5:	hlt    
  4142c6:	xor    dl,BYTE PTR [edx]
  4142c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4142c9:	push   0x5d
  4142cb:	add    DWORD PTR ds:0xbfc4cf58,0x21
  4142d2:	xchg   esi,eax
  4142d3:	lods   eax,DWORD PTR ds:[esi]
  4142d4:	out    dx,eax
  4142d5:	sbb    DWORD PTR [ebp+ebp*1+0x33b0fa9e],edi
  4142dc:	setp   dl
  4142df:	jnp    0x414310
  4142e1:	xor    al,0x1a
  4142e3:	js     0x41430f
  4142e5:	jno    0x4142f5
  4142e7:	aam    0xa2
  4142e9:	add    al,ah
  4142eb:	jp     0x41431f
  4142ed:	mov    cl,0xfa
  4142ef:	imul   DWORD PTR [eax+0xb]
  4142f2:	xor    DWORD PTR [ebp-0x45],0xa55dffd3
  4142f9:	push   0x44
  4142fb:	push   es
  4142fc:	loop   0x414288
  4142fe:	mov    edi,0xf12fd65c
  414303:	push   ebx
  414304:	xor    al,0x7d
  414306:	lock dec esp
  414308:	and    eax,DWORD PTR [esi]
  41430a:	sti    
  41430b:	cmp    eax,0x77f7d601
  414310:	(bad)  
  414311:	(bad)  
  414312:	pop    ds
  414313:	or     edx,DWORD PTR es:[eax]
  414316:	(bad)  
  414317:	aas    
  414318:	lock cld 
  41431a:	test   al,0x4a
  41431c:	ror    DWORD PTR [ecx-0x43],0xf7
  414320:	out    0x8e,eax
  414322:	bound  esi,QWORD PTR [esi-0x5d12f363]
  414328:	imul   esp,DWORD PTR [ebp-0x5e],0x2468489c
  41432f:	loope  0x4142b1
  414331:	or     edi,ecx
  414333:	in     al,dx
  414334:	in     al,0x3d
  414336:	sub    bh,al
  414338:	push   es
  414339:	gs xchg esi,eax
  41433b:	out    dx,eax
  41433c:	adc    BYTE PTR [edi],dh
  41433e:	inc    edx
  41433f:	fisub  DWORD PTR [edx+0x5cda1a36]
  414345:	xchg   edx,eax
  414346:	dec    esi
  414347:	and    ah,BYTE PTR [edx+0x1a]
  41434a:	fistp  DWORD PTR [ecx-0x80]
  41434d:	add    al,ah
  41434f:	push   eax
  414350:	ret    
  414351:	inc    edx
  414352:	dec    edx
  414353:	(bad)  
  414354:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414355:	jne    0x414304
  414357:	cmp    DWORD PTR [eax+0x1b],0x209f2cce
  41435e:	cwde   
  41435f:	xchg   ebp,eax
  414360:	mov    ebx,0xd201b30f
  414365:	ror    BYTE PTR [esi+0x1731b001],0xa3
  41436c:	and    BYTE PTR [ebx+0x215b4e40],bh
  414372:	sbb    edi,edi
  414374:	add    BYTE PTR [edi-0x6791b9ae],dl
  41437a:	mov    bh,dh
  41437c:	das    
  41437d:	stos   BYTE PTR es:[edi],al
  41437e:	xchg   ecx,eax
  41437f:	mov    edx,0xea3b2b16
  414384:	inc    esi
  414385:	cmp    bl,BYTE PTR [ecx+0x20660aee]
  41438b:	cmp    dh,bl
  41438d:	jmp    0x4143d9
  41438f:	(bad)  
  414391:	test   DWORD PTR [ebx-0x4c94c954],ecx
  414397:	mov    al,0x5a
  414399:	rol    BYTE PTR [ecx],1
  41439b:	into   
  41439c:	adc    eax,0xc166c8df
  4143a1:	xor    ch,BYTE PTR [edx-0x3c83c748]
  4143a7:	dec    eax
  4143a8:	xchg   edx,eax
  4143a9:	add    DWORD PTR [edx-0x24],ecx
  4143ac:	xor    esi,0xffffff87
  4143af:	xor    BYTE PTR [ebx+0x4c],cl
  4143b2:	loop   0x4143d3
  4143b4:	or     BYTE PTR [ebx+0x10],ah
  4143b7:	out    0xb1,al
  4143b9:	or     al,0xc
  4143bb:	or     eax,0xc0295ada
  4143c0:	data16 arpl WORD PTR [ecx],sp
  4143c3:	out    dx,eax
  4143c4:	inc    ecx
  4143c5:	(bad)  
  4143c6:	pop    esp
  4143c7:	fst    QWORD PTR ds:0xb9feacfa
  4143cd:	jg     0x41444e
  4143cf:	pop    es
  4143d0:	xor    eax,0x71ad6202
  4143d5:	and    esi,edx
  4143d7:	dec    edx
  4143d8:	inc    ebp
  4143d9:	xchg   bh,bl
  4143db:	test   al,0x78
  4143dd:	fwait
  4143de:	retf   
  4143df:	push   eax
  4143e0:	inc    ebp
  4143e1:	mov    cl,0x6e
  4143e3:	ffreep st(6)
  4143e5:	xchg   esi,eax
  4143e6:	sar    BYTE PTR [eax+ebx*4+0x10],1
  4143ea:	push   edi
  4143eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4143ec:	sub    edi,esi
  4143ee:	scas   al,BYTE PTR es:[edi]
  4143ef:	call   0x77d68f3d
  4143f4:	repz dec edx
  4143f6:	jnp    0x414430
  4143f8:	lahf   
  4143f9:	aas    
  4143fa:	mov    eax,0x36bb2e4
  4143ff:	cmp    eax,DWORD PTR [ebp+0x123ca816]
  414405:	mov    ds:0x3933388c,al
  41440a:	outs   dx,BYTE PTR ds:[esi]
  41440b:	fmul   st(4),st
  41440d:	ins    DWORD PTR es:[edi],dx
  41440e:	adc    edx,esi
  414410:	mov    esi,0x6f1b0cbf
  414415:	dec    ebp
  414416:	out    0x9f,eax
  414418:	add    DWORD PTR [ebx-0x8],edi
  41441b:	pop    es
  41441c:	inc    ebp
  41441d:	xchg   ebp,eax
  41441e:	xchg   ebp,eax
  41441f:	dec    ecx
  414420:	rcl    BYTE PTR [ecx-0x39],cl
  414423:	int3   
  414424:	adc    DWORD PTR [ebp-0x39],edx
  414427:	outs   dx,DWORD PTR ds:[esi]
  414428:	adc    BYTE PTR [eax-0x5679147d],al
  41442e:	pop    esi
  41442f:	jae    0x4143b7
  414431:	dec    esp
  414432:	cmp    eax,0x68168041
  414437:	cmp    ebx,DWORD PTR [eax-0x29]
  41443a:	mov    eax,ds:0xe09d9746
  41443f:	inc    edx
  414440:	icebp  
  414441:	bound  ebp,QWORD PTR [ebp+0x18]
  414444:	push   esp
  414445:	fcomp  DWORD PTR [eax]
  414447:	adc    eax,0x9d95ece4
  41444c:	nop
  41444d:	jle    0x41446d
  41444f:	inc    edi
  414450:	add    BYTE PTR [eax],dl
  414452:	or     ax,0xef89
  414456:	xor    eax,0x770d704b
  41445b:	push   edi
  41445c:	xchg   esi,eax
  41445d:	mov    ds:0xe3da9bd,al
  414462:	hlt    
  414463:	or     BYTE PTR [ebp+ebx*4+0xc],0x37
  414468:	push   ebx
  414469:	pop    edx
  41446a:	mov    eax,0x5c9dd0fc
  41446f:	add    al,0xa4
  414471:	frstor [edi+0x11b661e1]
  414478:	hlt    
  414479:	lods   eax,DWORD PTR ds:[esi]
  41447a:	xchg   esp,eax
  41447c:	or     cl,BYTE PTR [ebp+ebx*2-0x70]
  414480:	int3   
  414481:	shr    DWORD PTR [edi+ebx*8-0x19],cl
  414485:	out    dx,al
  414486:	jecxz  0x4144f0
  414488:	mov    edi,0x2564c7cc
  41448d:	cmp    BYTE PTR [ebp-0x9018bd2],ah
  414493:	mov    BYTE PTR [ecx-0x4b],cl
  414496:	or     dh,ch
  414498:	lds    ebp,FWORD PTR [edi]
  41449a:	mov    ds:0x3ad9f0a8,al
  41449f:	jmp    0x7fb22ff
  4144a4:	ss inc ebp
  4144a6:	cmp    DWORD PTR [ecx-0x26],edi
  4144a9:	dec    ebp
  4144aa:	lods   al,BYTE PTR ds:[esi]
  4144ab:	xor    dh,bl
  4144ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4144ae:	mov    eax,ds:0xbeb5030e
  4144b3:	pop    edi
  4144b4:	mov    eax,0x9a1a8ec3
  4144b9:	pop    edx
  4144ba:	scas   eax,DWORD PTR es:[edi]
  4144bb:	scas   al,BYTE PTR es:[edi]
  4144bc:	and    BYTE PTR ds:0x96db5d86,0x7c
  4144c3:	inc    eax
  4144c4:	ja     0x414483
  4144c6:	push   edx
  4144c7:	data16 loopne 0x414532
  4144ca:	or     al,0xa
  4144cc:	xor    BYTE PTR [edi+0x5c083849],al
  4144d2:	or     eax,0x727ac172
  4144d7:	outs   dx,DWORD PTR ds:[esi]
  4144d8:	cwde   
  4144d9:	mov    ebp,0x87880ccb
  4144de:	jl     0x41446f
  4144e0:	cld    
  4144e1:	mov    WORD PTR [ebx+0x1d],cs
  4144e4:	mov    eax,0xc7575844
  4144e9:	call   0xa75:0xd080a6a
  4144f0:	aam    0xa0
  4144f2:	xchg   ebp,eax
  4144f3:	(bad)  
  4144f4:	ds mov dl,al
  4144f7:	push   0x846c5d61
  4144fc:	adc    ebx,ecx
  4144fe:	lods   al,BYTE PTR ds:[esi]
  4144ff:	repz mov ?,WORD PTR gs:0x3c5abbae
  414507:	ja     0x4144b7
  414509:	push   ebp
  41450a:	cmp    ebx,ebp
  41450c:	jle    0x414557
  41450e:	ja     0x4144bc
  414510:	pop    esp
  414511:	ret    
  414512:	adc    DWORD PTR [ebx-0x34],0x3b35b2f5
  414519:	xlat   BYTE PTR ds:[ebx]
  41451a:	leave  
  41451b:	sahf   
  41451c:	sub    dl,cl
  41451e:	or     al,0xf
  414520:	jle    0x414579
  414522:	out    0x99,eax
  414524:	xlat   BYTE PTR ds:[ebx]
  414525:	shr    ebp,cl
  414527:	xor    eax,0x936991c8
  41452c:	push   ds
  41452d:	pop    edx
  41452e:	nop
  41452f:	jnp    0x4144c0
  414531:	pop    ecx
  414532:	dec    esp
  414533:	ins    BYTE PTR es:[edi],dx
  414534:	dec    esi
  414535:	ins    BYTE PTR es:[edi],dx
  414536:	inc    dl
  414538:	push   ecx
  414539:	rcl    DWORD PTR [ecx+edi*8],1
  41453c:	or     eax,0xf08e91
  414541:	rol    DWORD PTR [edi-0x52],0x74
  414545:	dec    edi
  414546:	call   0x7370:0xfad86930
  41454d:	mov    cl,0x23
  41454f:	shl    DWORD PTR [ebx],0xa9
  414552:	sbb    al,0x9
  414554:	js     0x4145a3
  414556:	pop    ebx
  414557:	out    0x2e,eax
  414559:	cmc    
  41455a:	in     eax,0xf6
  41455c:	aam    0xfc
  41455e:	iret   
  41455f:	jecxz  0x414536
  414561:	data16 cmp BYTE PTR [edx+ebp*8],0xd2
  414566:	mov    eax,ebx
  414568:	jg     0x41456d
  41456a:	mov    esp,0x378c1e2e
  41456f:	ins    BYTE PTR es:[edi],dx
  414570:	mov    dh,0xa7
  414572:	cmp    edi,ebx
  414574:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414575:	call   0x70e5:0xb846f7e6
  41457c:	cld    
  41457d:	add    al,0x6c
  41457f:	ins    BYTE PTR es:[edi],dx
  414580:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414581:	test   BYTE PTR [edi+eax*1],0xd1
  414585:	fisubr WORD PTR [esi-0x2b8b25fc]
  41458b:	push   ebx
  41458c:	into   
  41458d:	(bad)  
  41458e:	or     dl,BYTE PTR [eax+0x27]
  414591:	icebp  
  414592:	xchg   DWORD PTR [edx],ecx
  414594:	ret    0xd28
  414597:	sub    BYTE PTR [ebp-0x2a],dh
  41459a:	jmp    0x414615
  41459c:	mov    ch,0xf1
  41459e:	cld    
  41459f:	stc    
  4145a0:	sbb    ah,BYTE PTR [ecx]
  4145a2:	mov    edx,0x7fe2445c
  4145a7:	push   0x90a140d4
  4145ac:	pop    ecx
  4145ad:	aaa    
  4145ae:	or     al,0xb8
  4145b0:	push   ss
  4145b1:	retf   
  4145b2:	mov    esi,0xeb08662
  4145b7:	scas   al,BYTE PTR es:[edi]
  4145b8:	jns    0x4145b4
  4145ba:	retf   
  4145bb:	aad    0xb7
  4145bd:	test   BYTE PTR [eax+0x4f924565],bl
  4145c3:	clc    
  4145c4:	sub    eax,0xd21413de
  4145c9:	dec    ebx
  4145ca:	and    ebx,DWORD PTR [edi+0x7ae9d2d]
  4145d0:	mov    eax,0xb60bdaeb
  4145d5:	inc    esp
  4145d6:	imul   ebp,DWORD PTR [edi],0x25f363ed
  4145dc:	popa   
  4145dd:	ret    0x8168
  4145e0:	adc    eax,0xe6bd1180
  4145e5:	mov    eax,0xc8775820
  4145ea:	push   eax
  4145eb:	jo     0x414583
  4145ed:	push   eax
  4145ee:	add    dh,BYTE PTR ds:0x9adf89c6
  4145f4:	fs jo  0x4145d6
  4145f7:	div    DWORD PTR [edx+0x4e]
  4145fa:	fnstcw WORD PTR [edi-0x3e332899]
  414600:	sbb    ecx,DWORD PTR [ecx]
  414602:	data16 loope 0x414624
  414605:	push   edx
  414606:	push   esp
  414607:	push   ss
  414608:	cdq    
  414609:	mov    esp,0xee26c115
  41460e:	xor    ch,BYTE PTR [eax+0x1d]
  414611:	xchg   ebp,eax
  414612:	mov    dl,0x90
  414614:	dec    ebp
  414615:	int3   
  414616:	cs push ebx
  414618:	call   0x788e:0xe51e8a26
  41461f:	imul   esp,DWORD PTR [ebp+0x55e58059],0xc7a12408
  414629:	loop   0x4146a7
  41462b:	cwde   
  41462c:	jmp    0x9519:0xabecdb9e
  414633:	inc    edx
  414634:	xor    bl,BYTE PTR [esi+0xf]
  414637:	dec    ecx
  414638:	sub    BYTE PTR [edx+edi*1+0x7845e43b],bh
  41463f:	mov    edi,DWORD PTR [ebx-0x28b1e9e4]
  414645:	dec    esp
  414646:	mov    ch,0x94
  414648:	sbb    DWORD PTR [edx],ebx
  41464a:	call   0xf6b1:0x735ae67d
  414651:	ss dec ebx
  414653:	pop    es
  414654:	mov    cl,0xd6
  414656:	jb     0x4146d5
  414658:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414659:	leave  
  41465a:	scas   al,BYTE PTR es:[edi]
  41465b:	mov    dh,0xa
  41465d:	pop    es
  41465e:	inc    esp
  41465f:	cmp    DWORD PTR ds:0x13e4ff52,0x27
  414666:	push   ss
  414667:	mov    DWORD PTR [ebx],esi
  414669:	sub    bl,BYTE PTR [esi+eiz*4]
  41466c:	fdivr  QWORD PTR [ecx-0x15]
  41466f:	shl    DWORD PTR [ebx-0x532490a9],1
  414675:	sbb    dh,BYTE PTR [edi-0x6e]
  414678:	outs   dx,BYTE PTR ds:[esi]
  414679:	push   ebp
  41467a:	lods   al,BYTE PTR ds:[esi]
  41467b:	or     ecx,0xe27e5b82
  414681:	mov    ebx,0xe66301f
  414686:	mov    ebx,DWORD PTR [ecx]
  414688:	mov    esi,0xd1b84971
  41468d:	addr16 sbb eax,0xe67c1762
  414693:	(bad)  
  414694:	xor    DWORD PTR [ebx],esi
  414696:	popf   
  414697:	in     eax,0x98
  414699:	xlat   BYTE PTR ds:[ebx]
  41469a:	js     0x414703
  41469c:	jp     0x41469d
  41469e:	ja     0x41462f
  4146a0:	xor    dl,BYTE PTR [eax]
  4146a2:	xor    dh,BYTE PTR [ebp-0x2c7e22a8]
  4146a8:	jge    0x4146a3
  4146aa:	mov    bh,0xe2
  4146ac:	fdivr  st(1),st
  4146ae:	retf   0xddc0
  4146b1:	cdq    
  4146b2:	ret    
  4146b3:	or     ebp,DWORD PTR [esi-0x16]
  4146b6:	xor    DWORD PTR [ebp-0x55db60e6],esp
  4146bc:	fcomp  st(2)
  4146be:	or     ecx,eax
  4146c0:	adc    DWORD PTR [ebx],0x75d9f6ba
  4146c6:	(bad)  
  4146c7:	icebp  
  4146c8:	dec    edx
  4146c9:	jp     0x4146ed
  4146cb:	or     esp,DWORD PTR [esi+0x7fee548f]
  4146d1:	lahf   
  4146d2:	retf   
  4146d3:	cmp    ebp,ebx
  4146d5:	xchg   ebx,eax
  4146d6:	mov    cl,0x5b
  4146d8:	enter  0xc887,0xb2
  4146dc:	das    
  4146dd:	sbb    DWORD PTR [eax],esi
  4146df:	addr16 push ss
  4146e1:	imul   ebx,DWORD PTR [ecx+0x59],0x9db29085
  4146e8:	mov    al,ds:0x24419079
  4146ed:	adc    BYTE PTR [ecx+0x70],bh
  4146f0:	outs   dx,BYTE PTR ds:[esi]
  4146f1:	and    BYTE PTR [ebx-0x73889e3c],bh
  4146f7:	xchg   edi,eax
  4146f8:	add    al,0xea
  4146fa:	mov    BYTE PTR [eax+0x40],ch
  4146fd:	push   ds
  4146fe:	test   al,0x98
  414700:	jnp    0x41471c
  414702:	retf   
  414703:	xor    eax,0x7d03d3f1
  414708:	or     DWORD PTR [edi-0xb],ebx
  41470b:	adc    al,0xf1
  41470d:	adc    ch,BYTE PTR [eax+0x1d]
  414710:	je     0x41477d
  414712:	stos   DWORD PTR es:[edi],eax
  414713:	push   ecx
  414714:	xchg   edi,eax
  414715:	push   cs
  414716:	lahf   
  414717:	push   cs
  414718:	sbb    bl,BYTE PTR [ecx]
  41471a:	setg   BYTE PTR [ebx]
  41471d:	outs   dx,DWORD PTR ds:[esi]
  41471e:	jo     0x414705
  414720:	sahf   
  414721:	dec    ebx
  414722:	into   
  414723:	cli    
  414724:	call   0xd627:0xdf32030d
  41472b:	cmc    
  41472c:	(bad)  
  41472d:	inc    eax
  41472e:	xchg   ch,dl
  414730:	or     DWORD PTR [esi+ebx*4],esp
  414733:	pop    es
  414734:	sub    eax,DWORD PTR [ebx-0x4]
  414737:	(bad)  
  414738:	frstor [edi+0x7230ae67]
  41473e:	stos   DWORD PTR es:[edi],eax
  41473f:	mov    ds:0xb573dc5a,al
  414744:	push   edx
  414745:	stc    
  414746:	xor    BYTE PTR [esi+0x1e],cl
  414749:	sbb    eax,0x8b924d38
  41474e:	aam    0x2
  414750:	dec    edi
  414751:	test   eax,0xa145d7e7
  414756:	jns    0x4146db
  414758:	stos   BYTE PTR es:[edi],al
  414759:	adc    di,WORD PTR [edx+edx*1+0x48]
  41475e:	mov    ecx,0x49dc6c5b
  414763:	adc    eax,0xc4b92c4f
  414768:	(bad)  
  414769:	(bad)  
  41476a:	out    dx,al
  41476b:	mov    edi,0xd18ea2a9
  414770:	sub    esi,DWORD PTR [ebp-0x2cdd5502]
  414776:	mov    ds:0x3406fa7f,eax
  41477b:	dec    eax
  41477c:	stos   DWORD PTR es:[edi],eax
  41477d:	xchg   edx,eax
  41477e:	and    eax,esp
  414780:	fisttp QWORD PTR [bp+si]
  414783:	repnz in eax,dx
  414785:	mov    ecx,0x49a03ca7
  41478a:	popa   
  41478b:	aas    
  41478c:	or     ecx,esi
  41478e:	shr    BYTE PTR [eax],cl
  414790:	sub    ebx,esp
  414792:	mov    DWORD PTR [ebp-0x12],ebp
  414795:	addr16 jl 0x414793
  414798:	call   0xbb7ca01c
  41479d:	pop    ecx
  41479e:	fs or  eax,0xafcf87bb
  4147a4:	test   DWORD PTR [edx+0x34],ebx
  4147a7:	loope  0x4147e3
  4147a9:	or     al,0xe1
  4147ab:	imul   esi,DWORD PTR [ecx],0x71
  4147ae:	and    DWORD PTR [edi-0x38bad0fa],edi
  4147b4:	and    esp,DWORD PTR [edx+0x7c739210]
  4147ba:	xchg   ebx,eax
  4147bb:	xchg   esi,eax
  4147bc:	push   ecx
  4147bd:	push   edi
  4147be:	outs   dx,BYTE PTR ds:[esi]
  4147bf:	mov    cl,0x0
  4147c1:	pushf  
  4147c2:	lods   eax,DWORD PTR ds:[esi]
  4147c3:	mov    cl,0x2
  4147c5:	and    eax,0xba097873
  4147ca:	loopne 0x41476d
  4147cc:	ja     0x4147d8
  4147ce:	pop    ss
  4147cf:	or     eax,0x1f850aaa
  4147d4:	in     al,dx
  4147d5:	dec    edi
  4147d6:	das    
  4147d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147d8:	xchg   ecx,eax
  4147d9:	icebp  
  4147da:	mov    ds:0x5f84f358,eax
  4147df:	jge    0x414842
  4147e1:	mov    al,0xda
  4147e3:	push   ds
  4147e4:	inc    eax
  4147e5:	loop   0x4147c0
  4147e7:	xor    al,dh
  4147e9:	or     edi,DWORD PTR [ecx]
  4147eb:	test   BYTE PTR [ecx+0x49f82c7b],al
  4147f1:	stc    
  4147f2:	daa    
  4147f3:	add    dh,cl
  4147f5:	inc    esi
  4147f6:	and    al,0x43
  4147f8:	(bad)  
  4147f9:	imul   ebx,DWORD PTR [esi+0x5764571b],0xffffffa5
  414800:	adc    edi,DWORD PTR [edi-0x3c6e27a8]
  414806:	lds    esi,FWORD PTR [edx-0x47acb6d5]
  41480c:	mov    cs,eax
  41480e:	call   0x10dc0f3c
  414813:	addr16 xor al,0x50
  414816:	pop    ebp
  414817:	cli    
  414818:	test   al,0x7f
  41481a:	dec    edx
  41481b:	add    BYTE PTR [edx],cl
  41481d:	jo     0x414825
  41481f:	sbb    dh,BYTE PTR [eax]
  414821:	into   
  414822:	repnz in al,dx
  414824:	jo     0x4147a7
  414826:	(bad)  
  414827:	jmp    0xcc3b:0xccf7162
  41482e:	mov    ecx,0x914d2287
  414833:	mov    dl,0x85
  414835:	push   edx
  414836:	inc    ebp
  414837:	sbb    bl,BYTE PTR [ecx]
  414839:	sbb    ah,BYTE PTR [eax]
  41483b:	jle    0x4147d2
  41483d:	ret    
  41483e:	pop    edx
  41483f:	cmp    al,0xab
  414841:	sub    edi,DWORD PTR ds:0x271fb040
  414847:	mov    DWORD PTR [ebx+0x13],ebp
  41484a:	cwde   
  41484b:	mov    edx,0x17d9f960
  414850:	ret    
  414851:	fidiv  DWORD PTR [eax]
  414853:	or     DWORD PTR [edi],eax
  414855:	dec    esp
  414856:	int3   
  414857:	push   ebp
  414858:	aad    0xd3
  41485a:	jmp    0x4148a3
  41485c:	adc    DWORD PTR [ebx-0x7e],esp
  41485f:	in     eax,0x19
  414861:	sub    ch,BYTE PTR [eax]
  414863:	xchg   ecx,eax
  414864:	aas    
  414865:	das    
  414866:	fsub   QWORD PTR [esi+0x52]
  414869:	retf   
  41486a:	xchg   ecx,eax
  41486b:	aas    
  41486c:	inc    eax
  41486d:	test   DWORD PTR [ebp-0x3b9950fd],eax
  414873:	ss in  eax,0xef
  414876:	pop    eax
  414877:	push   esp
  414878:	adc    cl,BYTE PTR [esp+eiz*8+0x27]
  41487c:	push   ebp
  41487d:	mov    DWORD PTR [edi+ebp*2+0x195d1492],esp
  414884:	sbb    BYTE PTR [ebx+0x73d692ab],dl
  41488a:	call   0x5dd3:0x80670cac
  414891:	adc    esp,DWORD PTR [ebx]
  414893:	rcr    DWORD PTR [esp+edi*8],0xf0
  414897:	imul   ebx,DWORD PTR [ecx],0x3e
  41489a:	sbb    DWORD PTR [edi],0xffffff8e
  41489d:	iret   
  41489e:	test   DWORD PTR [ecx-0x68],0xa6961090
  4148a5:	jl     0x4148d6
  4148a7:	repz add BYTE PTR [edx],dh
  4148aa:	iret   
  4148ab:	jb     0x4148b0
  4148ad:	inc    edx
  4148ae:	push   cs
  4148af:	in     eax,dx
  4148b0:	xlat   BYTE PTR ds:[ebx]
  4148b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148b2:	sti    
  4148b3:	test   BYTE PTR [esi+eax*1],al
  4148b6:	adc    dl,BYTE PTR [edi]
  4148b8:	xchg   ebx,eax
  4148b9:	daa    
  4148ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148bb:	(bad)  
  4148bc:	fmul   QWORD PTR [esi+0x2cb84796]
  4148c2:	(bad)  
  4148c3:	adc    eax,0xd1a8f7b1
  4148c8:	pop    ecx
  4148c9:	js     0x41487b
  4148cb:	mov    edx,0x62b90a33
  4148d0:	nop
  4148d1:	jg     0x4148b8
  4148d3:	mov    edi,DWORD PTR [ebx+0x6fa9872d]
  4148d9:	rcl    esi,1
  4148db:	inc    esi
  4148dc:	pop    ds
  4148dd:	xor    ebx,eax
  4148df:	popf   
  4148e0:	pop    ebx
  4148e1:	xchg   esi,eax
  4148e2:	loop   0x4148c1
  4148e4:	cmp    ebp,DWORD PTR [esi+ebx*8-0x61]
  4148e8:	jno    0x4148d3
  4148ea:	cmp    eax,0x12272c4f
  4148ef:	retf   
  4148f0:	or     BYTE PTR [edx+esi*4-0xb7b6856],bl
  4148f7:	add    dh,BYTE PTR [ebx-0x46]
  4148fa:	dec    ecx
  4148fb:	mov    ch,0x58
  4148fd:	cmp    DWORD PTR [eax],0x192fdb31
  414903:	stos   DWORD PTR es:[edi],eax
  414904:	sar    eax,1
  414906:	faddp  st(6),st
  414908:	out    dx,al
  414909:	mov    bh,0xe3
  41490b:	je     0x41494a
  41490d:	and    eax,0x7e2fb403
  414912:	aaa    
  414913:	outs   dx,DWORD PTR ds:[esi]
  414914:	mov    eax,0x30b0b1d0
  414919:	add    ebp,DWORD PTR [eax+0x24]
  41491c:	loop   0x414911
  41491e:	sbb    dl,ah
  414920:	lahf   
  414921:	and    eax,0x18679630
  414926:	test   eax,0xfe50fa06
  41492b:	addr16 ret 0x6f2
  41492f:	sbb    dl,ah
  414931:	and    ah,cl
  414933:	rol    BYTE PTR [ecx+0x43],1
  414936:	fmul   DWORD PTR es:[di]
  41493a:	vmwrite ebp,edx
  41493d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41493e:	js     0x414917
  414940:	sbb    BYTE PTR [ecx-0x3b],bl
  414943:	in     eax,0x1c
  414945:	in     eax,0x11
  414947:	dec    ebp
  414948:	ja     0x414902
  41494a:	ja     0x41494f
  41494c:	jb     0x4148d4
  41494e:	adc    DWORD PTR [eax],edi
  414950:	add    DWORD PTR [ecx+0xb],edi
  414953:	sahf   
  414954:	pop    ebp
  414955:	repnz outs dx,DWORD PTR ds:[esi]
  414957:	bound  esi,QWORD PTR [esi+0x4d]
  41495a:	stos   DWORD PTR es:[edi],eax
  41495b:	idiv   DWORD PTR [edx-0x60]
  41495e:	out    0x9f,al
  414960:	adc    al,0xb0
  414962:	and    BYTE PTR [ebx],0x20
  414965:	jmp    0xf7a9f107
  41496a:	fxch   st(6)
  41496c:	arpl   WORD PTR [esi-0x62],sp
  41496f:	outs   dx,DWORD PTR ds:[esi]
  414970:	sub    ch,BYTE PTR [ebp-0x32fc3173]
  414976:	mov    edi,DWORD PTR [edi+0x784683ee]
  41497c:	sub    ebx,edi
  41497e:	push   0x48
  414980:	sbb    ch,BYTE PTR [edx+0x20]
  414983:	xor    ecx,DWORD PTR [edx+0x14]
  414986:	mov    ah,0x0
  414988:	imul   ecx,DWORD PTR [ebp+0x45],0xffffffd3
  41498c:	mov    esi,0x1b9b7686
  414991:	sub    DWORD PTR [ebx+0x74],eax
  414994:	or     ch,BYTE PTR [ecx-0x1a345c81]
  41499a:	inc    esp
  41499b:	mov    esp,0x99d449ba
  4149a0:	rcr    ecx,cl
  4149a2:	xlat   BYTE PTR ds:[ebx]
  4149a3:	pop    edx
  4149a4:	dec    eax
  4149a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149a6:	das    
  4149a7:	cmc    
  4149a8:	pop    ds
  4149a9:	mov    al,ds:0x7f0c24fc
  4149ae:	outs   dx,DWORD PTR ds:[esi]
  4149af:	xchg   DWORD PTR [edi+edi*1],esp
  4149b2:	aam    0x1d
  4149b4:	rol    BYTE PTR [edx],1
  4149b6:	ja     0x41498b
  4149b8:	or     DWORD PTR [edi+0x6f],edi
  4149bb:	pop    esi
  4149bc:	push   esp
  4149bd:	and    al,0xf4
  4149bf:	add    ah,BYTE PTR [ecx]
  4149c1:	inc    esp
  4149c2:	xor    eax,ebp
  4149c4:	mov    esp,0x73c8c123
  4149c9:	mov    ecx,0xe8e759d5
  4149ce:	test   BYTE PTR [ecx],0x99
  4149d1:	xor    eax,0x25b6787b
  4149d6:	leave  
  4149d7:	es mov dl,0x8b
  4149da:	inc    edi
  4149db:	aas    
  4149dc:	cmp    ah,ch
  4149de:	pop    ds
  4149df:	xor    esi,0x6e
  4149e2:	imul   eax,DWORD PTR [esp+ebx*8],0xfffffff1
  4149e6:	loopne 0x414a2a
  4149e8:	rol    DWORD PTR [ecx],0xac
  4149eb:	dec    ebx
  4149ec:	repnz inc edi
  4149ee:	and    ch,cl
  4149f0:	rcr    DWORD PTR [edx],1
  4149f2:	iret   
  4149f3:	mov    ds:0x9dd72f70,al
  4149f8:	fldcw  WORD PTR [edi-0x22]
  4149fb:	and    ch,BYTE PTR [esi-0x7a]
  4149fe:	ja     0x414a6e
  414a00:	add    dl,dl
  414a02:	imul   ebx,DWORD PTR ds:0x4344b7b9,0xffffffda
  414a09:	or     DWORD PTR [ecx],ebx
  414a0b:	jae    0x414a84
  414a0d:	pop    eax
  414a0e:	or     edi,esi
  414a10:	shr    BYTE PTR [edx+edi*2],1
  414a13:	add    eax,0xc0bbcd7a
  414a18:	cli    
  414a19:	cmp    ch,BYTE PTR [esp+edi*4]
  414a1c:	or     BYTE PTR [edi-0x156e49e0],bl
  414a22:	mov    ebx,0x7ec897f3
  414a27:	ror    bh,cl
  414a29:	sbb    BYTE PTR [esi],bl
  414a2b:	and    ch,dl
  414a2d:	inc    esp
  414a2e:	not    cl
  414a30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a31:	out    dx,eax
  414a32:	ror    BYTE PTR [ebx-0x4],0x81
  414a36:	sbb    dl,cl
  414a38:	fs sahf 
  414a3a:	out    0x13,eax
  414a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a3d:	cmp    BYTE PTR [ecx+0x3506241e],0x77
  414a44:	pop    ds
  414a45:	nop
  414a46:	dec    edx
  414a47:	push   esi
  414a48:	ds aam 0x2b
  414a4b:	add    esp,DWORD PTR ds:0x2c9c4c6d
  414a51:	test   eax,0x6b037c6a
  414a56:	inc    edx
  414a57:	das    
  414a58:	pop    es
  414a59:	(bad)  
  414a5b:	push   edx
  414a5c:	xchg   ebp,eax
  414a5d:	(bad)  
  414a5e:	fidivr DWORD PTR [esi-0x72f0f6c7]
  414a64:	mov    BYTE PTR [edx],bh
  414a66:	inc    ebx
  414a67:	add    eax,0xaad95104
  414a6c:	mov    ebx,0x5b756e4c
  414a71:	pop    ebp
  414a72:	xchg   esi,eax
  414a73:	push   eax
  414a74:	loop   0x414a8c
  414a76:	push   ebx
  414a77:	add    cl,BYTE PTR [ebp+0x31410e7b]
  414a7d:	xchg   DWORD PTR [edi+0x57e5940f],ebx
  414a83:	addr16 (bad) 
  414a85:	pop    esp
  414a86:	or     bl,BYTE PTR [ecx+eax*4-0x60f92147]
  414a8d:	mov    ds:0xbbc10e83,eax
  414a92:	(bad)  
  414a93:	mov    al,ah
  414a95:	mov    al,BYTE PTR [edi+0x52]
  414a98:	pop    edi
  414a99:	fwait
  414a9a:	push   0x870e48e5
  414a9f:	pop    ebx
  414aa0:	lea    ebx,[ebp-0xda41856]
  414aa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414aa7:	out    0x6c,al
  414aa9:	fimul  DWORD PTR [ecx-0x5a0c954c]
  414aaf:	push   DWORD PTR [ebp-0x4e]
  414ab2:	fldcw  WORD PTR [edi-0x6c843ab7]
  414ab8:	xchg   ebx,eax
  414ab9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414aba:	rol    BYTE PTR [edx-0x52],cl
  414abd:	aam    0x69
  414abf:	fst    st(2)
  414ac1:	adc    al,0x8e
  414ac3:	sub    eax,0xb3259ec5
  414ac8:	inc    ecx
  414ac9:	cmp    al,0x94
  414acb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414acc:	mul    DWORD PTR [ebx-0x2f]
  414acf:	sub    DWORD PTR ds:0x9ab101db,ebx
  414ad5:	push   esi
  414ad6:	lahf   
  414ad7:	mov    bh,BYTE PTR [eax+ecx*1+0x1a]
  414adb:	or     DWORD PTR [esi+eiz*1-0x79de9064],edx
  414ae2:	pop    ds
  414ae3:	aam    0x9
  414ae5:	pop    ds
  414ae6:	mov    eax,0x3e2e6d93
  414aeb:	es call 0xcb7af903
  414af1:	gs mov dl,0x14
  414af4:	adc    eax,0x866fd5c1
  414af9:	hlt    
  414afa:	jecxz  0x414b1a
  414afc:	mov    WORD PTR [ecx+ebp*1],cs
  414aff:	sub    al,0x52
  414b01:	call   0x214b:0x7795f7ca
  414b08:	adc    bl,BYTE PTR [ebx-0x197c2891]
  414b0e:	imul   ebx,DWORD PTR [edi+0x323b5d5a],0xae8eaf44
  414b18:	dec    edx
  414b19:	ret    
  414b1a:	repnz cmp DWORD PTR [ebp+0x39],0x69d6570d
  414b22:	jae    0x414b6f
  414b24:	jo     0x414ad3
  414b26:	mov    dl,0x7f
  414b28:	sar    DWORD PTR [esi-0x29691819],1
  414b2e:	jae    0x414b05
  414b30:	clc    
  414b31:	fidivr DWORD PTR [edi-0x1a]
  414b34:	adc    BYTE PTR [eax],cl
  414b36:	mov    WORD PTR [edx+0x78ab569b],ss
  414b3c:	pusha  
  414b3d:	push   0xffffffb0
  414b3f:	lds    ebx,FWORD PTR [ebx+eax*4-0x5d]
  414b43:	jb     0x414bb7
  414b45:	or     esp,edi
  414b47:	mov    ebp,0x4afa50f4
  414b4c:	inc    ebp
  414b4d:	add    al,BYTE PTR [ebp+0x2ad794d6]
  414b53:	aad    0xe7
  414b55:	mov    ch,0x40
  414b57:	jg     0x414b4e
  414b59:	xor    al,0x7b
  414b5b:	popf   
  414b5c:	ds int3 
  414b5e:	int    0xfa
  414b60:	std    
  414b61:	rcr    DWORD PTR [ecx+0x6ec21f83],0x81
  414b68:	cld    
  414b69:	push   esp
  414b6a:	es push ss
  414b6c:	fist   WORD PTR [eax]
  414b6e:	push   eax
  414b6f:	mov    ah,0xee
  414b71:	dec    edi
  414b72:	xchg   DWORD PTR [ecx],edi
  414b74:	mov    ecx,DWORD PTR [ebx]
  414b76:	mov    al,ds:0x7b7aed2c
  414b7b:	mov    dh,0xef
  414b7d:	pop    eax
  414b7e:	inc    edx
  414b7f:	call   0x7d34d63e
  414b84:	fcomp  QWORD PTR [ecx+esi*1+0xbac75b9]
  414b8b:	in     eax,0xc1
  414b8d:	push   esp
  414b8e:	lods   al,BYTE PTR ds:[esi]
  414b8f:	xor    ebx,DWORD PTR [edx+0x3e932666]
  414b95:	stc    
  414b96:	dec    edi
  414b97:	sub    esp,eax
  414b99:	out    0x95,al
  414b9b:	std    
  414b9c:	bound  ecx,QWORD PTR [edi+0x4e]
  414b9f:	fwait
  414ba0:	jecxz  0x414bca
  414ba2:	inc    ebx
  414ba3:	jo     0x414c12
  414ba5:	mov    esp,fs
  414ba7:	loop   0x414ba4
  414ba9:	mov    esp,0x81b6c649
  414bae:	push   edx
  414baf:	push   edi
  414bb0:	imul   BYTE PTR [ebp*4+0x1271b8fe]
  414bb7:	dec    esp
  414bb8:	dec    edi
  414bb9:	add    eax,0x4e0befac
  414bbe:	scas   al,BYTE PTR es:[edi]
  414bbf:	shl    DWORD PTR [eax-0x34c499dc],0x11
  414bc6:	pop    esi
  414bc7:	in     eax,dx
  414bc8:	sbb    al,0x2c
  414bca:	jmp    0x414bee
  414bcc:	popa   
  414bcd:	adc    BYTE PTR [ebp+0x44],al
  414bd0:	jnp    0x414bfb
  414bd2:	in     al,dx
  414bd3:	pop    ss
  414bd4:	in     al,0x45
  414bd6:	jno    0x414b96
  414bd8:	fldcw  WORD PTR [edi-0x6f806886]
  414bde:	mov    ch,0xbb
  414be0:	push   eax
  414be1:	push   ebx
  414be2:	daa    
  414be3:	adc    eax,0xc7e29df1
  414be8:	es mov edx,0x46c4723b
  414bee:	daa    
  414bef:	cdq    
  414bf0:	inc    esp
  414bf1:	add    eax,0xf4645ff4
  414bf6:	xchg   ecx,eax
  414bf7:	rcl    dh,1
  414bf9:	(bad)  
  414bfa:	repz pop ds
  414bfc:	mov    eax,ds:0x2ca3ce6e
  414c01:	push   ebx
  414c02:	icebp  
  414c03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c04:	fmul   st,st(0)
  414c06:	scas   eax,DWORD PTR es:[edi]
  414c07:	test   al,0x30
  414c09:	stos   BYTE PTR es:[edi],al
  414c0a:	mov    ds:0xefc9e103,al
  414c0f:	mov    eax,DWORD PTR [edx-0x5760e7c2]
  414c15:	or     al,0x92
  414c17:	inc    BYTE PTR [ebx]
  414c19:	mov    eax,ds:0xba0dfc4d
  414c1e:	mov    ah,0xae
  414c20:	mov    al,0x17
  414c22:	xor    ecx,DWORD PTR [edx+0x5a]
  414c25:	mov    ds:0x835908a1,eax
  414c2a:	or     al,0x4f
  414c2c:	mov    cl,0x45
  414c2e:	fisttp WORD PTR [edi-0x22]
  414c31:	int3   
  414c32:	sub    DWORD PTR [esi-0x5f],esi
  414c35:	cmp    BYTE PTR [eax-0x55],al
  414c38:	xchg   esi,eax
  414c39:	je     0x414cb0
  414c3b:	push   eax
  414c3c:	xchg   edi,eax
  414c3d:	cs jns 0x414bcd
  414c40:	into   
  414c41:	stos   BYTE PTR es:[edi],al
  414c42:	push   0x827078fa
  414c47:	xor    eax,DWORD PTR [ebx-0x76]
  414c4a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c4b:	je     0x414c84
  414c4d:	dec    esi
  414c4e:	jl     0x414cbd
  414c50:	xor    eax,0x73b88912
  414c55:	mov    ds:0xab8202fc,eax
  414c5a:	or     al,0x47
  414c5c:	push   es
  414c5d:	push   ds
  414c5e:	imul   ebx,DWORD PTR [ebp-0x5b],0x42409b2e
  414c65:	pop    ebp
  414c66:	mov    eax,0xf34b6508
  414c6b:	out    0x13,eax
  414c6d:	mov    edx,0xdef7a016
  414c72:	shl    DWORD PTR [ebp-0x12addfa2],cl
  414c78:	inc    ebx
  414c79:	dec    ebp
  414c7a:	dec    eax
  414c7b:	cmp    DWORD PTR [edi],0xffffffc9
  414c7e:	fist   DWORD PTR [eax+0x6e]
  414c81:	push   es
  414c82:	jg     0x414c84
  414c84:	aam    0xdc
  414c86:	dec    esi
  414c87:	enter  0xb077,0x58
  414c8b:	sub    ah,BYTE PTR [ebp+0x2]
  414c8e:	pop    esp
  414c8f:	pop    esp
  414c90:	mov    ds:0x603dbafb,eax
  414c95:	cmp    al,0xab
  414c97:	(bad)  
  414c98:	(bad)  
  414c99:	sbb    eax,0x36137fea
  414c9e:	loop   0x414cba
  414ca0:	pop    ecx
  414ca1:	push   0x25389315
  414ca6:	ins    DWORD PTR es:[edi],dx
  414ca7:	xchg   edx,eax
  414ca8:	cdq    
  414ca9:	or     al,BYTE PTR cs:[ebp-0xe82e511]
  414cb0:	dec    esi
  414cb1:	(bad)  
  414cb2:	push   cs
  414cb3:	cmp    DWORD PTR [edi-0xd],edx
  414cb6:	xchg   esi,eax
  414cb7:	xor    al,BYTE PTR [esi+0x4d352782]
  414cbd:	add    DWORD PTR [edi+edx*8],ebx
  414cc0:	aad    0xde
  414cc2:	jg     0x414c8d
  414cc4:	push   es
  414cc5:	inc    esp
  414cc6:	fst    st(7)
  414cc8:	mov    ebx,0xe01de3de
  414ccd:	(bad)  
  414cce:	mov    al,0xc0
  414cd0:	imul   edi,DWORD PTR [edi+esi*8-0x7],0xffffffa3
  414cd5:	sub    dh,BYTE PTR [ecx-0x86bd576]
  414cdb:	into   
  414cdc:	pop    edi
  414cdd:	addr16 out 0x13,eax
  414ce0:	and    eax,0x3b8d959c
  414ce5:	cmp    al,0x21
  414ce7:	ins    BYTE PTR es:[edi],dx
  414ce8:	add    al,0x15
  414cea:	adc    bl,BYTE PTR [ebx]
  414cec:	cmp    al,0x42
  414cee:	cmp    BYTE PTR ds:0x94cd0e5f,dh
  414cf4:	dec    ebp
  414cf5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414cf6:	leave  
  414cf7:	cwde   
  414cf8:	imul   ebx,DWORD PTR [edi+0x12],0x15
  414cfc:	adc    eax,ecx
  414cfe:	mov    cl,0x17
  414d00:	(bad)  
  414d01:	in     al,0x17
  414d03:	push   ebp
  414d04:	push   ds
  414d05:	sti    
  414d06:	jmp    FWORD PTR [esi+0x360d208a]
  414d0c:	bound  edi,QWORD PTR [ebp-0x20de37e2]
  414d12:	aas    
  414d13:	repz jb 0x414cc2
  414d16:	(bad)  
  414d17:	lods   eax,DWORD PTR ds:[esi]
  414d18:	mov    ch,0x9
  414d1a:	lahf   
  414d1b:	xchg   cl,dl
  414d1d:	jecxz  0x414d68
  414d1f:	mov    BYTE PTR [ecx],0x1a
  414d22:	pop    ebx
  414d23:	sbb    eax,0x98a05afe
  414d28:	fisubr DWORD PTR [eax]
  414d2a:	das    
  414d2b:	iret   
  414d2c:	out    0x23,eax
  414d2e:	sbb    eax,0x47315a3f
  414d33:	ror    DWORD PTR [ebx-0x5b13f5dc],cl
  414d39:	daa    
  414d3a:	cmp    al,0xe4
  414d3c:	xchg   edi,eax
  414d3d:	xchg   ebx,eax
  414d3e:	inc    edx
  414d3f:	into   
  414d40:	xchg   ecx,eax
  414d41:	add    BYTE PTR [ebx-0x29],cl
  414d44:	imul   DWORD PTR [ecx+eax*1-0x52]
  414d48:	fwait
  414d49:	push   ecx
  414d4a:	scas   al,BYTE PTR es:[edi]
  414d4b:	cmc    
  414d4c:	add    bh,BYTE PTR [edx+0x11dd9244]
  414d52:	outs   dx,BYTE PTR ds:[esi]
  414d53:	or     ch,ah
  414d55:	enter  0xfc2e,0xb3
  414d59:	dec    ecx
  414d5a:	sbb    eax,0x4e2f82f8
  414d5f:	loope  0x414cfc
  414d61:	push   eax
  414d62:	or     al,0xfa
  414d64:	sub    DWORD PTR [ecx+0x53bdbb2f],eax
  414d6a:	into   
  414d6b:	in     eax,0xa
  414d6d:	dec    eax
  414d6e:	sub    ch,BYTE PTR [ecx]
  414d70:	das    
  414d71:	xchg   edx,eax
  414d72:	xchg   DWORD PTR [edx*2+0x7eae9a0f],esp
  414d79:	pushf  
  414d7a:	pop    ds
  414d7b:	inc    esi
  414d7c:	bound  ebx,QWORD PTR [ebx]
  414d7e:	lahf   
  414d7f:	jbe    0x414d0c
  414d81:	push   0xa0d3e40a
  414d86:	outs   dx,DWORD PTR ds:[esi]
  414d87:	scas   eax,DWORD PTR es:[edi]
  414d88:	pop    edx
  414d89:	mov    edx,0x34e62ed0
  414d8e:	add    ch,BYTE PTR [eax-0x67]
  414d91:	icebp  
  414d92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d93:	popf   
  414d94:	add    cl,BYTE PTR [ebx+0xc5ac471]
  414d9a:	push   eax
  414d9b:	mov    ds:0x4a36b7da,eax
  414da0:	mov    esi,0xe5f63a6e
  414da5:	loopne 0x414dc2
  414da7:	pop    eax
  414da8:	cli    
  414da9:	in     eax,dx
  414daa:	sub    BYTE PTR [esi],0xd0
  414dad:	fistp  WORD PTR [ebp+ebx*1-0x1]
  414db1:	sbb    DWORD PTR [edx],0x877b38fe
  414db7:	mov    WORD PTR [eax+0x50],?
  414dba:	pop    es
  414dbb:	dec    eax
  414dbc:	ret    0xa632
  414dbf:	jb     0x414df1
  414dc1:	in     eax,0xae
  414dc3:	out    dx,eax
  414dc4:	fidivr DWORD PTR [bp-0x26]
  414dc8:	loop   0x414ddb
  414dca:	mov    gs,ebp
  414dcc:	in     eax,dx
  414dcd:	pop    ebp
  414dce:	add    BYTE PTR [ecx+0x4058a8b0],bl
  414dd4:	pop    eax
  414dd5:	fcmovne st,st(2)
  414dd7:	inc    ecx
  414dd8:	jp     0x414d72
  414dda:	inc    edx
  414ddb:	inc    edx
  414ddc:	ja     0x414dfa
  414dde:	and    BYTE PTR [edx+edi*8+0x2],0x37
  414de3:	gs enter 0xe7ca,0xa1
  414de8:	xchg   edx,eax
  414de9:	popa   
  414dea:	xor    eax,0x72172649
  414def:	push   cs
  414df0:	test   DWORD PTR [esi-0x55],esi
  414df3:	lds    ebx,FWORD PTR [ebx-0x15]
  414df6:	and    ah,bl
  414df8:	mov    ch,0x1c
  414dfa:	add    bh,0x8c
  414dfd:	add    al,0xc
  414dff:	cmp    al,0x5
  414e01:	jmp    0xebcdb345
  414e06:	dec    esi
  414e07:	xor    bh,0x4
  414e0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e0b:	and    al,0xee
  414e0d:	adc    BYTE PTR [ebx],cl
  414e0f:	fdiv   QWORD PTR [eax]
  414e11:	call   0xa238733a
  414e16:	in     al,dx
  414e17:	in     al,0xb4
  414e19:	cdq    
  414e1a:	dec    eax
  414e1b:	push   ecx
  414e1c:	xor    ah,dh
  414e1e:	sub    ebx,esp
  414e20:	xchg   ecx,ecx
  414e22:	fs fwait
  414e24:	push   edi
  414e25:	add    al,0x33
  414e27:	jae    0x414df2
  414e29:	push   ebx
  414e2a:	out    0x35,eax
  414e2c:	in     eax,0x43
  414e2e:	fisub  WORD PTR [eax+0x3e]
  414e31:	ror    DWORD PTR [ebx+0x4ef41078],cl
  414e37:	mov    bh,0xbe
  414e39:	sub    al,0x48
  414e3b:	sbb    edx,DWORD PTR ds:0xc2e99f7e
  414e41:	loop   0x414deb
  414e43:	cld    
  414e44:	int    0xfb
  414e46:	mov    bl,0x88
  414e48:	mov    edx,0x2d8a3093
  414e4d:	mov    cl,0xfa
  414e4f:	cdq    
  414e50:	xor    ch,ch
  414e52:	shl    BYTE PTR [ebp+0x72],0x95
  414e56:	add    eax,0xf5e8c20a
  414e5b:	pushw  ss
  414e5d:	arpl   di,cx
  414e5f:	test   al,0x6d
  414e61:	dec    edi
  414e62:	jle    0x414edc
  414e64:	fist   DWORD PTR [edx-0x61]
  414e67:	push   ebx
  414e68:	fcmovnu st,st(4)
  414e6a:	mov    ?,WORD PTR [edi+0x49f5949f]
  414e70:	push   ebp
  414e71:	mov    edx,0xd30c7726
  414e76:	and    ecx,0xffffff8c
  414e79:	sbb    BYTE PTR [edi+0x4e9c535b],bh
  414e7f:	dec    edx
  414e80:	add    bl,BYTE PTR [eax]
  414e82:	push   ss
  414e83:	out    0x11,al
  414e85:	outs   dx,BYTE PTR ds:[esi]
  414e86:	sub    esp,DWORD PTR [ecx-0x79c8e351]
  414e8c:	test   dl,0x10
  414e8f:	sub    al,0x51
  414e91:	aam    0x17
  414e93:	imul   ebx,DWORD PTR ds:[ecx-0x2c],0x3f5923d1
  414e9b:	stos   DWORD PTR es:[edi],eax
  414e9c:	pop    DWORD PTR [ebp-0x5]
  414e9f:	in     eax,dx
  414ea0:	(bad)  
  414ea1:	jnp    0x414ea1
  414ea3:	out    0xf0,al
  414ea5:	int    0x4a
  414ea7:	stos   DWORD PTR es:[edi],eax
  414ea8:	fist   DWORD PTR [ecx+0x4a8383c1]
  414eae:	aad    0xa9
  414eb0:	dec    ebx
  414eb1:	bnd jmp 0xa516bf31
  414eb7:	stos   BYTE PTR es:[edi],al
  414eb8:	out    dx,eax
  414eb9:	inc    ecx
  414eba:	pop    edx
  414ebb:	fnstenv [ebp-0x13]
  414ebe:	xchg   esi,eax
  414ebf:	aad    0x32
  414ec1:	inc    ecx
  414ec2:	aad    0x5a
  414ec4:	retf   0xbe1d
  414ec7:	outs   dx,DWORD PTR ds:[esi]
  414ec8:	out    0x9,eax
  414eca:	add    eax,0xdf57a092
  414ecf:	pop    eax
  414ed0:	xchg   cl,bl
  414ed2:	and    BYTE PTR [ebp-0x5b39cf7c],ch
  414ed8:	mov    dh,BYTE PTR [ebx+0x5c72dab]
  414ede:	mul    DWORD PTR [edi-0x47]
  414ee1:	ret    
  414ee2:	mov    edi,0x3c0b5ec9
  414ee7:	and    eax,0x6dabc59c
  414eec:	lock mov ch,0x22
  414eef:	mov    ch,0x5e
  414ef1:	pushf  
  414ef2:	pusha  
  414ef3:	xor    DWORD PTR [edi-0x7da6fc41],0xffffff9e
  414efa:	jg     0x414f11
  414efc:	inc    ebx
  414efd:	in     eax,0x20
  414eff:	(bad)  
  414f00:	repz fidiv DWORD PTR [edx+0x4580bf2e]
  414f07:	cdq    
  414f08:	jp     0x414ec9
  414f0a:	pop    edi
  414f0b:	pop    es
  414f0c:	or     ecx,DWORD PTR [ebx+0x3157093e]
  414f12:	sbb    cl,BYTE PTR [ebx+0x4f]
  414f15:	sbb    ch,0x3d
  414f18:	dec    ebp
  414f19:	test   eax,0x14c9e76f
  414f1e:	ss sti 
  414f20:	xchg   ebx,eax
  414f21:	in     eax,0xe8
  414f23:	rcl    DWORD PTR [ebx-0x359911b4],cl
  414f29:	popf   
  414f2a:	xor    BYTE PTR [esi+0x5f73d078],dh
  414f30:	mov    ds,WORD PTR ds:0xff0d32d7
  414f36:	dec    ebx
  414f37:	(bad)  
  414f38:	cmp    al,0x8c
  414f3a:	or     DWORD PTR [eax],ebp
  414f3c:	lahf   
  414f3d:	and    BYTE PTR [eax-0x31],ah
  414f40:	push   ebx
  414f41:	leave  
  414f42:	jae    0x414f05
  414f44:	jnp    0x414f61
  414f46:	sub    al,0x56
  414f48:	into   
  414f49:	test   BYTE PTR [ecx],bh
  414f4b:	in     al,dx
  414f4c:	dec    eax
  414f4d:	imul   edx,eax,0xffffff91
  414f50:	(bad)  
  414f51:	sti    
  414f52:	add    ebp,ebx
  414f54:	pop    ds
  414f55:	pop    edx
  414f56:	mov    ebx,0xe6711070
  414f5b:	ja     0x414f82
  414f5d:	cdq    
  414f5e:	and    eax,0x3c6b7179
  414f63:	ins    DWORD PTR es:[edi],dx
  414f64:	in     al,0x2a
  414f66:	push   0xffffff81
  414f68:	jns    0x414fd0
  414f6a:	call   0xea64:0xec11c9ca
  414f71:	pop    ebp
  414f72:	mov    eax,ds:0x4af0e713
  414f77:	mov    WORD PTR [edi+ebp*1-0x394fbb1e],?
  414f7e:	mov    al,ds:0x79c13aa6
  414f83:	mov    edi,0x8be4c2ba
  414f88:	mov    edi,0xd58c1976
  414f8d:	xchg   dh,ah
  414f8f:	mov    edx,0x3095f7b3
  414f94:	imul   DWORD PTR [edi+edi*1-0x394a4bf0]
  414f9b:	cmp    al,0x25
  414f9d:	scas   eax,DWORD PTR es:[edi]
  414f9e:	xor    ebp,DWORD PTR [ebp-0x30fc70b4]
  414fa4:	inc    esi
  414fa5:	bound  edx,QWORD PTR [eax]
  414fa7:	dec    ecx
  414fa8:	test   eax,0xb1db0bdc
  414fad:	mov    edi,0xedadba6c
  414fb2:	inc    eax
  414fb3:	daa    
  414fb4:	cmp    eax,0x8075f97e
  414fb9:	xchg   ebp,eax
  414fba:	push   0x4b01971
  414fbf:	jo     0x414fe3
  414fc1:	rol    DWORD PTR [edx-0x2],cl
  414fc4:	fdiv   QWORD PTR [bp+si]
  414fc7:	push   0xa8e4a121
  414fcc:	cmc    
  414fcd:	outs   dx,BYTE PTR ds:[esi]
  414fce:	sbb    al,0xe6
  414fd0:	and    edx,ecx
  414fd2:	push   eax
  414fd3:	xlat   BYTE PTR ds:[ebx]
  414fd4:	neg    bh
  414fd6:	adc    eax,esp
  414fd8:	inc    ecx
  414fd9:	(bad)  
  414fda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414fdb:	inc    ebp
  414fdc:	mov    al,ds:0x782fc9bd
  414fe1:	dec    ebx
  414fe2:	pop    ebx
  414fe3:	(bad)  
  414fe4:	pop    ss
  414fe5:	rol    BYTE PTR [ecx-0xc],cl
  414fe8:	call   DWORD PTR [edx+ebx*4-0x44ab4a9e]
  414fef:	pop    eax
  414ff0:	sub    DWORD PTR [ebx-0x6f],edi
  414ff3:	mov    edi,0xa01d720b
  414ff8:	and    DWORD PTR [ebx+0x75],ebp
  414ffb:	out    0x4,al
  414ffd:	ss push edi
  414fff:	xchg   edx,eax
  415000:	jg     0x415065
  415002:	bound  edx,QWORD PTR [edi-0x2b]
  415005:	clc    
  415006:	imul   BYTE PTR [edi+0x20]
  415009:	lea    edi,[ebx]
  41500b:	mov    edi,0x46962304
  415010:	in     al,0xfd
  415012:	push   ebx
  415013:	jns    0x414fbc
  415015:	xchg   ebx,eax
  415016:	add    ch,BYTE PTR [ebp-0x574beb9c]
  41501c:	sti    
  41501d:	hlt    
  41501e:	out    0xce,al
  415020:	mov    bl,0xe5
  415022:	mov    ebp,DWORD PTR [ecx+0x4a]
  415025:	popf   
  415026:	sbb    ebp,DWORD PTR [ebp+0x2e5e914c]
  41502c:	xchg   esi,eax
  41502d:	popf   
  41502e:	add    eax,0xc23abebc
  415033:	in     eax,0xf2
  415035:	lods   eax,DWORD PTR ds:[esi]
  415036:	shl    DWORD PTR [edi-0x297e9075],1
  41503c:	outs   dx,BYTE PTR ds:[esi]
  41503d:	sbb    DWORD PTR [ebx-0x26],0xcea4e28b
  415044:	mov    edx,0xbf048388
  415049:	aas    
  41504a:	inc    esp
  41504b:	mov    ds:0xcd64a130,al
  415050:	push   ebx
  415051:	jnp    0x415083
  415053:	mov    bl,0x43
  415055:	and    ch,BYTE PTR [edx+ebx*1]
  415058:	jno    0x41501f
  41505a:	stos   DWORD PTR es:[edi],eax
  41505b:	test   eax,0x51f220e0
  415060:	xor    eax,0x26154e7b
  415065:	or     BYTE PTR [ecx+0x20],cl
  415068:	dec    eax
  415069:	push   0x1a
  41506b:	pop    ds
  41506c:	popa   
  41506d:	ret    0x4685
  415070:	sub    DWORD PTR [eax+0x51],eax
  415073:	cmp    eax,0xc4b43328
  415078:	fs push eax
  41507a:	jb     0x4150e2
  41507c:	sbb    ch,BYTE PTR [ebx]
  41507e:	ins    DWORD PTR es:[edi],dx
  41507f:	xchg   esi,eax
  415080:	sti    
  415081:	popa   
  415082:	scas   eax,DWORD PTR es:[edi]
  415083:	xor    DWORD PTR [edi],ebx
  415085:	test   BYTE PTR [ecx-0x32d7236c],dl
  41508b:	dec    esp
  41508c:	fmul   QWORD PTR [eax]
  41508e:	push   eax
  41508f:	xor    DWORD PTR [ecx*1-0x55152134],esp
  415096:	jmp    0x14693366
  41509b:	imul   edi,DWORD PTR [ecx+eax*8+0x5df6fd62],0x532e3f8a
  4150a6:	or     eax,0xb6574e81
  4150ab:	cmp    eax,0x44f66ea3
  4150b0:	mov    ch,0xe7
  4150b2:	and    bl,bh
  4150b4:	and    BYTE PTR [ecx+0x7d],bh
  4150b7:	imul   esp,DWORD PTR [eax+0x54],0xf05bcb06
  4150be:	xchg   ah,ch
  4150c0:	xchg   ecx,eax
  4150c1:	cmp    BYTE PTR [edx+eax*4+0x20f5cf37],cl
  4150c8:	mov    ds:0xb883f5b1,al
  4150cd:	cld    
  4150ce:	in     al,0x88
  4150d0:	inc    esp
  4150d1:	inc    ecx
  4150d2:	fidivr WORD PTR fs:[edi+0x4]
  4150d6:	fdiv   DWORD PTR [esi-0x5]
  4150d9:	sahf   
  4150da:	loopne 0x4150aa
  4150dc:	mov    ebx,0x40277e5
  4150e1:	int3   
  4150e2:	lahf   
  4150e3:	out    0x57,al
  4150e5:	mov    WORD PTR [edx+0x6c],gs
  4150e8:	enter  0x1c5c,0x97
  4150ec:	mov    eax,ds:0xc96d649d
  4150f1:	pop    ds
  4150f2:	adc    al,0xa8
  4150f4:	add    BYTE PTR [edx],0xfd
  4150f7:	cmp    BYTE PTR [ecx],al
  4150f9:	adc    dh,BYTE PTR [esi+0x7e659733]
  4150ff:	dec    edx
  415100:	jnp    0x4150fc
  415102:	neg    DWORD PTR [ebx+0x436992ea]
  415108:	lods   al,BYTE PTR ds:[esi]
  415109:	aam    0xe5
  41510b:	push   ebp
  41510c:	adc    BYTE PTR [edx-0x6247aa4c],dh
  415112:	xchg   edi,eax
  415113:	dec    ecx
  415114:	mov    ah,0xbb
  415116:	hlt    
  415117:	mov    al,ds:0x35ba8878
  41511c:	mov    DWORD PTR [esi+0x46c9036a],ecx
  415122:	fld    TBYTE PTR [eax]
  415124:	jb     0x41515e
  415126:	xchg   DWORD PTR [eax+0x25],edx
  415129:	and    al,0xf9
  41512b:	ds retf 
  41512d:	rcl    DWORD PTR [ebx+ebx*1-0x5a],cl
  415131:	mov    ss:0x53bdcf37,eax
  415137:	lock in al,0xcd
  41513a:	mov    ebp,0xb38dc7ea
  41513f:	inc    edi
  415140:	pop    ss
  415141:	mul    ah
  415143:	pop    ds
  415144:	and    BYTE PTR [esi+eiz*8-0x1c],0x7b
  415149:	mov    edx,0x9f09dcec
  41514e:	cwde   
  41514f:	and    al,0x9
  415152:	daa    
  415153:	mov    esi,DWORD PTR [esi-0x342536ec]
  415159:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41515a:	jmp    0x415140
  41515c:	jae    0x41514e
  41515e:	cs or  al,0x66
  415161:	cmp    DWORD PTR [edx+eiz*2-0x6a],0x59
  415166:	dec    ecx
  415167:	add    al,0x9c
  415169:	mov    esp,DWORD PTR ds:0xe6e45ec4
  41516f:	mov    ds:0xfd37ac35,al
  415174:	or     BYTE PTR [ebp+0xf],dh
  415177:	mov    al,ds:0x97bb9c5a
  41517c:	sbb    eax,0x65d93172
  415181:	push   ebp
  415182:	sti    
  415183:	in     eax,dx
  415184:	retf   
  415185:	fisttp QWORD PTR [edx+0x63fbdf]
  41518b:	sti    
  41518c:	push   ss
  41518d:	daa    
  41518e:	lock pop ecx
  415190:	pop    ecx
  415191:	pop    ecx
  415192:	cmp    eax,0x656389a4
  415197:	adc    ecx,edx
  415199:	es push es
  41519b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41519c:	or     al,0x72
  41519e:	test   eax,0xfc8cf03e
  4151a3:	addr16 inc ecx
  4151a5:	and    eax,0x52c23eeb
  4151aa:	add    DWORD PTR ds:0x8d9ea423,ebp
  4151b0:	icebp  
  4151b1:	push   esi
  4151b2:	pushf  
  4151b3:	cmp    BYTE PTR [eax-0x14],bh
  4151b6:	jno    0x415210
  4151b8:	xor    al,0xfd
  4151ba:	shl    edi,1
  4151bc:	inc    ebp
  4151bd:	out    0x5,eax
  4151bf:	and    al,0xf5
  4151c1:	xor    DWORD PTR [edi-0x41381b34],eax
  4151c7:	lahf   
  4151c8:	test   al,0x22
  4151ca:	in     eax,0x50
  4151cc:	not    DWORD PTR ds:0x337762e6
  4151d2:	aad    0x7f
  4151d4:	xchg   edi,eax
  4151d5:	shr    dl,cl
  4151d7:	div    ecx
  4151d9:	jbe    0x415177
  4151db:	jg     0x41517d
  4151dd:	xor    ecx,DWORD PTR [esi+ebp*4]
  4151e0:	add    al,BYTE PTR [ebx+eiz*2-0x6b766fe]
  4151e7:	adc    BYTE PTR [esi],bl
  4151e9:	inc    esi
  4151ea:	pop    eax
  4151eb:	rol    DWORD PTR [ebx+0x52],1
  4151ee:	into   
  4151ef:	lds    ebx,FWORD PTR [esi+0x41]
  4151f2:	into   
  4151f3:	xor    BYTE PTR [esi+0x66434015],al
  4151f9:	ja     0x4151fc
  4151fb:	retf   0xe459
  4151fe:	dec    ebx
  4151ff:	xchg   DWORD PTR [edi-0x72658758],ebx
  415205:	std    
  415206:	push   cs
  415207:	ja     0x415259
  415209:	sar    DWORD PTR [eax+eax*1],0x7e
  41520d:	aas    
  41520e:	shl    edi,cl
  415210:	enter  0xa8ff,0xb0
  415214:	sub    ebp,DWORD PTR [esp+ebp*1-0x4806a3af]
  41521b:	shl    edx,1
  41521d:	pop    eax
  41521e:	test   al,0xc6
  415220:	das    
  415221:	jns    0x415201
  415223:	fiadd  WORD PTR [ebx]
  415225:	fdiv   DWORD PTR [esi+0x29]
  415228:	jg     0x415275
  41522a:	push   cs
  41522b:	aaa    
  41522c:	leave  
  41522d:	cdq    
  41522e:	sub    bl,al
  415230:	sbb    ebx,DWORD PTR [ebp+0x55efd64c]
  415236:	jbe    0x4151c1
  415238:	sti    
  415239:	daa    
  41523a:	inc    edi
  41523c:	add    al,0xae
  41523e:	stos   BYTE PTR es:[edi],al
  41523f:	xchg   ecx,eax
  415240:	inc    eax
  415241:	repnz sbb ebp,0x6c
  415245:	bound  ecx,QWORD PTR [ecx+0x79748ab8]
  41524b:	push   ebx
  41524c:	icebp  
  41524d:	in     al,dx
  41524e:	mov    WORD PTR ds:0x98c9fda0,fs
  415254:	xchg   ebx,eax
  415255:	std    
  415256:	mov    ch,0x13
  415258:	cmp    al,0x73
  41525a:	xchg   edi,eax
  41525b:	ror    BYTE PTR [esi+0x4faa292e],cl
  415261:	shr    bh,1
  415263:	or     DWORD PTR [ebx],ecx
  415265:	imul   esp
  415267:	cmp    dl,bh
  415269:	out    dx,eax
  41526a:	pop    eax
  41526b:	pop    esp
  41526c:	and    dl,BYTE PTR [ebp+0x7094ce19]
  415272:	xor    dl,BYTE PTR [eax]
  415274:	adc    eax,0x71b4f5fc
  415279:	test   al,al
  41527b:	fist   WORD PTR [edx]
  41527d:	ins    BYTE PTR es:[edi],dx
  41527e:	fdivrp st(5),st
  415280:	mov    cl,0x55
  415282:	stc    
  415283:	ror    BYTE PTR [ecx+ecx*2-0x2e],cl
  415287:	scas   al,BYTE PTR es:[edi]
  415288:	scas   al,BYTE PTR es:[edi]
  415289:	enter  0xbb63,0x5b
  41528d:	pop    ss
  41528e:	cmp    al,0x99
  415290:	dec    edx
  415291:	ficom  WORD PTR [eax+0x49]
  415294:	or     bh,bl
  415296:	sub    eax,0x21dc7b49
  41529b:	adc    eax,0x5b82b6aa
  4152a0:	inc    ebx
  4152a1:	aam    0xce
  4152a3:	lea    eax,[ecx+edx*1+0x5a2c8887]
  4152aa:	js     0x415242
  4152ac:	add    DWORD PTR [ebx+edi*1],esp
  4152af:	mov    cl,0x42
  4152b1:	pushf  
  4152b2:	mov    bl,0x26
  4152b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152b5:	xchg   ebx,eax
  4152b6:	les    eax,FWORD PTR [esp+eax*8+0x1f]
  4152ba:	fist   WORD PTR [ecx+0x75]
  4152bd:	jecxz  0x415312
  4152bf:	mov    ds:0xe1334907,al
  4152c4:	loopne 0x415328
  4152c6:	int3   
  4152c7:	pop    edi
  4152c8:	push   esi
  4152ca:	aaa    
  4152cb:	cmp    bl,bl
  4152cd:	outs   dx,DWORD PTR ds:[esi]
  4152ce:	mov    ds:0x3df37e03,al
  4152d3:	xchg   ebp,eax
  4152d4:	mov    al,ds:0x45415a2f
  4152d9:	aas    
  4152da:	inc    ecx
  4152db:	test   al,0x42
  4152dd:	es pop esp
  4152df:	dec    edx
  4152e0:	nop
  4152e1:	cmp    DWORD PTR [eax-0x74],edi
  4152e4:	inc    esp
  4152e5:	sub    eax,0x617fe1a1
  4152ea:	mov    ds:0x1ebbf161,eax
  4152ef:	in     al,dx
  4152f0:	js     0x41531d
  4152f2:	lods   eax,DWORD PTR ds:[esi]
  4152f3:	js     0x41536d
  4152f5:	iret   
  4152f6:	jecxz  0x4152bc
  4152f8:	loope  0x41527d
  4152fa:	in     eax,dx
  4152fb:	iret   
  4152fc:	xchg   esp,eax
  4152fd:	mov    dh,0x5c
  4152ff:	imul   esp,DWORD PTR [ebx],0xffffffc3
  415302:	mov    eax,ds:0xfdca599b
  415307:	push   ebp
  415308:	xor    BYTE PTR [edx+eiz*4],dl
  41530b:	in     al,0xc2
  41530d:	popf   
  41530e:	push   ebp
  41530f:	es xor eax,0x2e5d8388
  415315:	pop    ebx
  415316:	icebp  
  415317:	(bad)  
  415318:	pop    ds
  415319:	xor    al,0x9e
  41531b:	sar    ebp,1
  41531d:	and    dh,BYTE PTR [ebp+ebp*8-0x617a90c1]
  415324:	cmp    bl,BYTE PTR [ebp+0xa]
  415327:	jl     0x41531d
  415329:	(bad)  
  41532a:	and    ah,BYTE PTR [edx-0x784eeede]
  415330:	je     0x415363
  415332:	pop    eax
  415333:	fbld   TBYTE PTR [eax-0x39]
  415336:	ret    0xc7d7
  415339:	mov    edx,0xa2265aad
  41533e:	int3   
  41533f:	rol    ecx,cl
  415341:	fisubr WORD PTR [esp+edi*4]
  415344:	not    BYTE PTR [ebp-0x44]
  415347:	or     DWORD PTR [esi+0x222b4185],0x7961cdef
  415351:	jg     0x4153ca
  415353:	aas    
  415354:	ret    0xb430
  415357:	add    bl,BYTE PTR [ebx-0x43]
  41535a:	mov    eax,0x1f34b1a9
  41535f:	icebp  
  415360:	or     BYTE PTR [esi],ch
  415362:	sbb    cl,BYTE PTR [edx+edx*4+0x54]
  415366:	sbb    BYTE PTR [ebx+0x7e],cl
  415369:	add    DWORD PTR [eax-0x13fd5621],ebp
  41536f:	mov    ch,0x6c
  415371:	jb     0x4153b6
  415373:	(bad)  
  415374:	push   esp
  415375:	(bad)
  415378:	adc    al,0x76
  41537a:	push   edx
  41537b:	mov    ds:0xcfa70908,al
  415380:	je     0x415326
  415382:	fucom  st(7)
  415384:	or     DWORD PTR [eax-0x2e471b67],eax
  41538a:	(bad)  
  41538b:	sub    al,0xf8
  41538d:	cmc    
  41538e:	push   ebx
  41538f:	sub    DWORD PTR [edx+0x25],eax
  415392:	mov    ds,esi
  415394:	lds    edi,FWORD PTR [ecx-0x3b]
  415397:	stc    
  415398:	pop    esi
  415399:	mov    esp,fs
  41539b:	shl    al,1
  41539d:	das    
  41539e:	jge    0x4153d6
  4153a0:	dec    ecx
  4153a1:	je     0x41535a
  4153a3:	mov    al,ds:0xe92d8754
  4153a8:	push   ecx
  4153a9:	sbb    al,0x8e
  4153ab:	(bad)  
  4153ac:	mov    ds:0x59fb7d57,eax
  4153b1:	jecxz  0x4153e6
  4153b3:	in     al,dx
  4153b4:	cmc    
  4153b5:	sahf   
  4153b6:	jne    0x415417
  4153b8:	or     bh,BYTE PTR ds:0xf15e3e19
  4153be:	pop    ds
  4153bf:	retf   0xbf3
  4153c2:	call   0x4b50c611
  4153c7:	out    0x84,eax
  4153c9:	mov    ds:0x818a6516,eax
  4153ce:	inc    esp
  4153cf:	ja     0x4153fe
  4153d1:	xor    DWORD PTR [edi+0x11c8d318],esp
  4153d7:	in     al,dx
  4153d8:	scas   al,BYTE PTR es:[edi]
  4153d9:	cmp    eax,0x71a9e2
  4153de:	xor    BYTE PTR [ebp-0x2577ed35],bl
  4153e4:	mov    ah,0x3d
  4153e6:	retf   0x3197
  4153e9:	lahf   
  4153ea:	sti    
  4153eb:	outs   dx,BYTE PTR ds:[esi]
  4153ec:	clc    
  4153ed:	repnz and BYTE PTR ds:0x3f1f656f,cl
  4153f4:	mov    eax,0x2e2a790a
  4153f9:	mov    al,0x66
  4153fb:	stos   BYTE PTR es:[edi],al
  4153fc:	xchg   esi,esp
  4153fe:	ins    DWORD PTR es:[edi],dx
  4153ff:	mov    edi,0xf93284a7
  415404:	mov    esi,0xe2d0ec5b
  415409:	inc    ecx
  41540a:	ins    BYTE PTR es:[edi],dx
  41540b:	cmp    eax,0xebd3391b
  415410:	int3   
  415411:	jmp    0x6050:0xac0ec2fd
  415418:	push   ss
  415419:	cmp    ch,BYTE PTR [ebx-0x8]
  41541c:	ret    0x4f24
  41541f:	out    0x68,eax
  415421:	out    dx,al
  415422:	das    
  415423:	mov    esp,0xfbc5796e
  415428:	mov    ss,WORD PTR [ecx+0x6e]
  41542b:	xchg   BYTE PTR [edi+0x679982da],cl
  415431:	cmp    DWORD PTR [esp+edi*4],ecx
  415434:	(bad)  
  415435:	cli    
  415436:	mov    edx,0xc9eb72d2
  41543b:	and    BYTE PTR [edi+eiz*4],ch
  41543e:	sub    dl,ch
  415440:	sub    eax,0xe37bcfca
  415445:	call   0x690:0x8aca328f
  41544c:	imul   edx,edx,0x3d27822a
  415452:	xchg   ebx,eax
  415453:	inc    esi
  415454:	test   DWORD PTR [edx+edx*4-0x74],edx
  415458:	or     edi,eax
  41545a:	push   0x9408e18d
  41545f:	pop    esi
  415460:	and    dl,dh
  415462:	sub    edx,DWORD PTR [edi]
  415464:	and    DWORD PTR [esi+0x3d820c35],esp
  41546a:	arpl   WORD PTR [edi],cx
  41546c:	test   al,0x6c
  41546e:	xchg   ecx,eax
  41546f:	push   ds
  415470:	xchg   ecx,eax
  415471:	mov    dh,0xcb
  415473:	pop    ax
  415475:	sbb    DWORD PTR [edi-0x4e589171],ebx
  41547b:	enter  0xe04c,0xe7
  41547f:	addr16 pop es
  415481:	mov    ds:0x8704c49d,al
  415486:	inc    edx
  415487:	jl     0x415435
  415489:	xchg   edi,eax
  41548a:	mov    ebx,0x85dc6838
  41548f:	dec    ebp
  415490:	(bad)  
  415491:	push   ebp
  415492:	pop    edi
  415493:	inc    ebx
  415494:	daa    
  415495:	dec    BYTE PTR [esi+ecx*8+0x7f]
  415499:	ss mov ?,WORD PTR gs:[eax+eiz*4+0x348532df]
  4154a2:	mov    esi,0x90ab473
  4154a7:	into   
  4154a8:	test   al,0x4d
  4154aa:	xchg   esi,eax
  4154ab:	dec    edi
  4154ac:	mov    ch,BYTE PTR cs:[eax+0x1b4a0830]
  4154b3:	add    eax,0x7fa265ed
  4154b8:	mov    ebp,0x5ea4ed27
  4154bd:	cmp    ecx,DWORD PTR [eax-0x6c]
  4154c0:	add    al,0x88
  4154c2:	sub    bl,BYTE PTR ds:0xa444dc3
  4154c8:	fldenv [ebx-0x34]
  4154cb:	push   0x3dc83e
  4154d0:	jb     0x4154ee
  4154d2:	fcom   DWORD PTR [edx+edx*4+0x1b]
  4154d6:	jb     0x415500
  4154d8:	inc    esp
  4154d9:	pop    ds
  4154da:	xor    bh,BYTE PTR [ecx]
  4154dc:	sbb    DWORD PTR [esi+0x4ded260f],eax
  4154e2:	cdq    
  4154e3:	sti    
  4154e4:	xor    eax,0x1cda7c9f
  4154e9:	jb     0x415515
  4154eb:	imul   ebp,DWORD PTR [ebp+0xc],0x7f12726e
  4154f2:	jae    0x4154e3
  4154f4:	cmc    
  4154f5:	cwde   
  4154f6:	jl     0x415552
  4154f8:	cmp    BYTE PTR fs:[eax+0xe],bl
  4154fc:	mov    edi,0x32b05354
  415501:	sub    al,0xda
  415503:	dec    edi
  415504:	sti    
  415505:	shld   DWORD PTR [esi+0x3220c7f9],ebp,0x96
  41550d:	xchg   dh,al
  41550f:	ret    0x7461
  415512:	mov    edi,0xc3890784
  415517:	fs das 
  415519:	push   ss
  41551a:	in     al,0x48
  41551c:	sub    al,0x35
  41551e:	lock call 0x9796:0x3752e749
  415526:	ret    
  415527:	cs scas eax,DWORD PTR es:[edi]
  415529:	push   ebp
  41552a:	cmp    DWORD PTR [eax],ebx
  41552c:	sbb    DWORD PTR [edx+0x62],ecx
  41552f:	mov    BYTE PTR [ebp+0x40bab26e],ch
  415535:	test   eax,0xe08f1ff8
  41553a:	push   ebx
  41553b:	call   0xb03bf661
  415540:	mov    BYTE PTR [ecx+esi*4],0xb1
  415544:	jmp    0x4155ae
  415546:	mov    BYTE PTR [ebp+esi*4+0x10],dh
  41554a:	pop    esi
  41554b:	add    ebx,ecx
  41554d:	push   ss
  41554e:	inc    edx
  41554f:	es dec eax
  415551:	(bad)  [eax-0x34]
  415554:	mov    edi,0x5784f6ab
  415559:	and    DWORD PTR [esi-0x66],edi
  41555c:	and    BYTE PTR [ebx+0x1a2b33d6],al
  415562:	ret    
  415563:	xor    eax,0xe42d8e3f
  415568:	adc    eax,DWORD PTR [ebp+0x1a]
  41556b:	xor    al,0x90
  41556d:	push   edi
  41556e:	adc    BYTE PTR [ecx+edx*2-0x9],0xa0
  415573:	sbb    bl,BYTE PTR [ecx-0x6]
  415576:	mov    bh,0x97
  415578:	addr16 js 0x415584
  41557b:	(bad)  
  41557c:	fiadd  DWORD PTR [ebp+0x55]
  41557f:	sbb    al,0xb9
  415581:	adc    esp,DWORD PTR [edi+ecx*2-0x50]
  415585:	fnsave [edx+0x1]
  415588:	pushf  
  415589:	xchg   ebx,eax
  41558a:	loop   0x415586
  41558c:	pusha  
  41558d:	pop    ebx
  41558e:	add    eax,0xa20d2793
  415593:	rcl    DWORD PTR [edx-0xc],0x3f
  415597:	loop   0x4155fc
  415599:	pop    edx
  41559a:	ret    0xc728
  41559d:	(bad)  
  41559e:	int    0xe
  4155a0:	dec    edi
  4155a1:	(bad)  
  4155a2:	xchg   ebx,eax
  4155a3:	pushf  
  4155a4:	pop    ebx
  4155a5:	and    eax,0x89fe8fbf
  4155aa:	scas   eax,DWORD PTR es:[edi]
  4155ab:	adc    edx,DWORD PTR [eax+0xe3f34cf]
  4155b1:	xor    eax,0x41036973
  4155b6:	sub    DWORD PTR [edi],0xdb836863
  4155bc:	int    0x35
  4155be:	in     eax,0xff
  4155c0:	dec    esp
  4155c1:	scas   al,BYTE PTR es:[edi]
  4155c2:	inc    ebp
  4155c3:	das    
  4155c4:	add    DWORD PTR [ebx],eax
  4155c6:	lds    ecx,FWORD PTR [edx-0x6cf2ec9b]
  4155cc:	imul   esi,ecx,0x7a
  4155cf:	sub    al,0x1f
  4155d1:	loopne 0x4155d5
  4155d3:	je     0x415581
  4155d5:	into   
  4155d6:	jmp    0x4411f875
  4155db:	cmp    dh,0xcd
  4155de:	fimul  DWORD PTR [edi+edi*1-0x79]
  4155e2:	fisttp WORD PTR ds:0xbbdcca5f
  4155e8:	push   es
  4155e9:	or     bl,ah
  4155eb:	jns    0x415575
  4155ed:	jbe    0x415639
  4155ef:	cli    
  4155f0:	lods   al,BYTE PTR ds:[esi]
  4155f1:	mov    edx,0x84d369d2
  4155f6:	add    eax,0x883e6503
  4155fb:	mov    dh,0x1e
  4155fd:	dec    ebp
  4155fe:	outs   dx,BYTE PTR ds:[esi]
  4155ff:	test   eax,0x6aa61542
  415604:	out    dx,eax
  415605:	lea    ebp,[edi]
  415607:	scas   eax,DWORD PTR es:[edi]
  415608:	push   es
  415609:	loope  0x415607
  41560b:	pushf  
  41560c:	or     cl,BYTE PTR [ecx]
  41560e:	sub    DWORD PTR [edx+0x26],eax
  415611:	in     al,dx
  415612:	sbb    al,0xf7
  415614:	adc    al,0xca
  415616:	sub    ch,al
  415618:	mov    bh,0xbf
  41561a:	add    BYTE PTR [ecx],bl
  41561c:	(bad)  
  41561d:	sub    eax,DWORD PTR [edi+esi*4]
  415620:	and    DWORD PTR [edx+0x2e],edi
  415623:	aaa    
  415624:	lahf   
  415625:	shl    bh,cl
  415627:	mov    dh,0xc9
  415629:	sub    ebx,DWORD PTR [edx+0x5]
  41562c:	dec    eax
  41562d:	retf   0x4f23
  415630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415631:	lods   eax,DWORD PTR ds:[esi]
  415632:	adc    bh,BYTE PTR [esi-0x45]
  415635:	cmp    BYTE PTR [ebx-0x63],cl
  415638:	xchg   esi,eax
  415639:	mov    al,BYTE PTR [edx-0x4a0ea1a7]
  41563f:	xchg   edx,eax
  415640:	imul   edi,DWORD PTR [ecx+edi*8+0x1e],0xffffffba
  415645:	addr16 dec ebp
  415647:	sub    DWORD PTR [eax-0x3a],ebx
  41564a:	pop    ebx
  41564b:	jp     0x4155fc
  41564d:	pushf  
  41564e:	fstp   DWORD PTR [eax+0x7a]
  415651:	jae    0x4156bd
  415653:	push   cs
  415654:	mov    WORD PTR [ebx-0x16],gs
  415657:	in     eax,0x6c
  415659:	mov    eax,ds:0x60f13eb5
  41565e:	mov    ebp,0x8857f2fa
  415663:	xchg   DWORD PTR [ecx],edx
  415665:	inc    esp
  415666:	cli    
  415667:	into   
  415668:	ins    DWORD PTR es:[edi],dx
  415669:	cld    
  41566a:	xlat   BYTE PTR ds:[ebx]
  41566b:	add    BYTE PTR [ecx+edi*1],cl
  41566e:	jecxz  0x4156c4
  415670:	call   DWORD PTR [ecx-0x2d]
  415673:	sbb    BYTE PTR [esp+ebx*8-0x17],dl
  415677:	(bad)  
  415678:	das    
  415679:	inc    ebp
  41567a:	repnz (bad) 
  41567c:	ret    0x39c
  41567f:	int    0x74
  415681:	pop    es
  415682:	sbb    dh,BYTE PTR [eax]
  415684:	and    DWORD PTR [edi+0x41],edx
  415687:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415688:	rcr    DWORD PTR [ebp+0x54],0x7c
  41568c:	mov    fs,WORD PTR [eax]
  41568e:	lahf   
  41568f:	daa    
  415690:	stos   DWORD PTR es:[edi],eax
  415691:	adc    ebp,DWORD PTR [ebx+ecx*1]
  415694:	mov    esp,0x1689b2cf
  415699:	into   
  41569a:	jl     0x4156b6
  41569c:	and    al,0x27
  41569e:	mov    ecx,0xf344db8e
  4156a3:	add    eax,0x69700ae0
  4156a8:	stos   DWORD PTR es:[edi],eax
  4156a9:	push   0xffffffe9
  4156ab:	push   esi
  4156ac:	push   ebx
  4156ad:	adc    eax,0xdb50faf3
  4156b2:	jmp    0x415640
  4156b4:	pop    edx
  4156b5:	out    0x72,al
  4156b7:	lock sbb al,0x5e
  4156ba:	(bad)  
  4156bb:	rcl    BYTE PTR [ebx+0x7f2cc4d5],1
  4156c1:	pop    ds
  4156c2:	stos   BYTE PTR es:[edi],al
  4156c3:	adc    al,0x79
  4156c5:	int    0xf1
  4156c7:	add    eax,0x26b8cc9d
  4156cc:	dec    edi
  4156cd:	mov    esp,0x2a6af3f7
  4156d2:	stos   DWORD PTR es:[edi],eax
  4156d3:	pop    ebp
  4156d4:	in     eax,0x5d
  4156d6:	(bad)  
  4156d7:	aad    0xb3
  4156d9:	pop    edx
  4156da:	retf   0xe0c3
  4156dd:	test   DWORD PTR [ebp+ecx*8-0x45],ebp
  4156e1:	sub    esp,DWORD PTR [edx]
  4156e3:	test   DWORD PTR [ebx],edx
  4156e5:	cmc    
  4156e6:	adc    ah,BYTE PTR ds:0xee6bcc7
  4156ec:	inc    eax
  4156ed:	pop    edx
  4156ee:	jge    0x41576b
  4156f0:	(bad)  
  4156f1:	js     0x41574a
  4156f3:	adc    DWORD PTR [edx-0x53],0x6c
  4156f7:	out    0x37,al
  4156f9:	or     ebx,edx
  4156fb:	outs   dx,BYTE PTR ds:[esi]
  4156fc:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4156fe:	xchg   edx,eax
  4156ff:	jnp    0x4156b3
  415701:	pop    esi
  415702:	dec    esp
  415703:	jmp    0x9f75:0x88650597
  41570a:	enter  0x7131,0xb7
  41570e:	stos   BYTE PTR es:[edi],al
  41570f:	fld    QWORD PTR [ebx]
  415711:	leave  
  415712:	mov    al,ds:0x87985f9a
  415717:	sbb    eax,esp
  415719:	stos   DWORD PTR es:[edi],eax
  41571a:	inc    esp
  41571b:	mov    dl,0x90
  41571d:	shl    BYTE PTR [edx-0x1d],0x40
  415721:	dec    esp
  415722:	stos   BYTE PTR es:[edi],al
  415723:	sahf   
  415724:	aas    
  415725:	call   0x3a21:0x35d57e54
  41572c:	xchg   ecx,eax
  41572d:	push   ebp
  41572e:	pusha  
  41572f:	mov    eax,ds:0xb54470e4
  415734:	ret    
  415735:	xchg   ebx,eax
  415736:	pop    ebp
  415737:	jmpw   0xa344
  41573b:	push   eax
  41573c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41573d:	repnz inc dx
  415740:	mov    edx,0x1fbbd5af
  415745:	jl     0x415708
  415747:	xor    DWORD PTR [ebx+0x5682df04],edi
  41574d:	mov    al,ds:0x1e66a35a
  415752:	jno    0x4156d6
  415754:	dec    ebx
  415755:	imul   esp,DWORD PTR [esi],0xffffffca
  415758:	(bad)  
  415759:	pop    ebp
  41575a:	mov    eax,0xcb362dda
  41575f:	cli    
  415760:	mov    ch,BYTE PTR [eax-0x79358dc8]
  415766:	jmp    0x415787
  415768:	jb     0x41577f
  41576a:	cmp    BYTE PTR [edx+ebx*2],ah
  41576d:	inc    edi
  41576e:	mov    edx,0x37ad5376
  415773:	in     eax,0x9b
  415775:	bswap  eax
  415777:	loopne 0x4157ca
  415779:	and    eax,DWORD PTR [eax]
  41577b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41577c:	jb     0x415756
  41577e:	je     0x41573b
  415780:	mov    bh,al
  415782:	aas    
  415783:	push   ds
  415784:	leave  
  415785:	in     eax,dx
  415786:	jne    0x40b10fb0
  41578c:	and    dl,BYTE PTR [edx]
  41578e:	rol    BYTE PTR [ebp-0x59871681],0x69
  415795:	pop    esp
  415796:	fistp  WORD PTR [edx+0x47f273e7]
  41579c:	sbb    eax,0xde92a75f
  4157a1:	adc    cl,BYTE PTR [edx]
  4157a3:	aad    0xfb
  4157a5:	int3   
  4157a6:	pop    edi
  4157a7:	cmp    BYTE PTR [ebx-0x7c],cl
  4157aa:	pop    es
  4157ab:	cdq    
  4157ac:	ret    0x6288
  4157af:	in     al,dx
  4157b0:	mov    ebx,DWORD PTR [esi+0x66]
  4157b3:	mov    ebp,0x776a19a4
  4157b8:	fld    st(6)
  4157ba:	or     BYTE PTR [edi+0xa3327a4],al
  4157c0:	and    esp,DWORD PTR [edi+0x29]
  4157c3:	je     0x415759
  4157c5:	(bad)  
  4157c6:	cmp    BYTE PTR [ebx],cl
  4157c8:	mov    ebp,0x8c971c94
  4157cd:	je     0x4157b1
  4157cf:	inc    ebx
  4157d0:	stc    
  4157d1:	inc    ebx
  4157d2:	mov    dl,0x85
  4157d4:	es mov dh,0xc
  4157d7:	or     ebp,DWORD PTR [eax]
  4157d9:	cdq    
  4157da:	loope  0x415772
  4157dc:	shl    DWORD PTR [ecx+0x12],1
  4157df:	lds    eax,FWORD PTR [edi+0x7b]
  4157e2:	mov    cl,0xdc
  4157e4:	pop    esp
  4157e5:	xchg   esp,eax
  4157e6:	lods   eax,DWORD PTR ds:[esi]
  4157e7:	xor    bl,BYTE PTR [edx+ebx*1-0x7011f2be]
  4157ee:	dec    edi
  4157ef:	enter  0xdbb9,0xd5
  4157f3:	pop    ss
  4157f4:	loopne 0x41577a
  4157f6:	stos   DWORD PTR es:[edi],eax
  4157f7:	out    dx,eax
  4157f8:	pop    esp
  4157f9:	icebp  
  4157fa:	mov    ebp,0xd4e26cc3
  4157ff:	dec    eax
  415800:	fs or  bh,dl
  415803:	loop   0x41582e
  415805:	mov    ecx,ebp
  415807:	out    0xa1,eax
  415809:	lods   eax,DWORD PTR ds:[esi]
  41580a:	adc    al,BYTE PTR [edx+ecx*1]
  41580d:	sbb    ecx,ebx
  41580f:	ret    0x104c
  415812:	inc    esp
  415813:	pop    ss
  415814:	mov    al,0xaa
  415816:	scas   eax,DWORD PTR es:[edi]
  415817:	mov    bl,0xe3
  415819:	push   ebp
  41581a:	push   ss
  41581b:	dec    esi
  41581c:	inc    eax
  41581d:	out    dx,eax
  41581e:	cld    
  41581f:	fwait
  415820:	dec    edx
  415821:	lahf   
  415822:	in     al,dx
  415823:	(bad)  
  415824:	pop    ecx
  415825:	push   cs
  415826:	dec    edx
  415827:	cld    
  415828:	push   edi
  415829:	fs (bad) 
  41582b:	push   0x2e01dd5e
  415830:	jns    0x4157ba
  415832:	mov    ds:0xae29a5c0,al
  415837:	inc    ecx
  415838:	mov    bl,0x37
  41583a:	int3   
  41583b:	fimul  WORD PTR [ebx-0x41]
  41583e:	mov    BYTE PTR [ebp-0x594d4be0],bl
  415844:	jp     0x4157c6
  415846:	and    BYTE PTR [ebp-0x78],ch
  415849:	cmp    eax,0xe31a4507
  41584e:	cmp    al,0x8d
  415850:	dec    eax
  415851:	test   al,0x3f
  415853:	fcomp  st(7)
  415855:	into   
  415856:	push   es
  415857:	imul   edi,DWORD PTR [esp+edi*8-0x6b732ef3],0x16
  41585f:	loope  0x4158e0
  415861:	icebp  
  415862:	dec    edx
  415863:	or     ah,BYTE PTR fs:[ecx+0x6ddf9a91]
  41586a:	add    BYTE PTR [edi-0xb],al
  41586d:	std    
  41586e:	push   0xb0045a7b
  415873:	cmc    
  415874:	mov    ah,0x8f
  415876:	aas    
  415877:	push   ebx
  415878:	adc    ebx,DWORD PTR [ebp+0x18]
  41587b:	(bad)  
  41587c:	sbb    al,0xa9
  41587e:	into   
  41587f:	test   BYTE PTR [ecx],bh
  415881:	sti    
  415882:	sub    BYTE PTR [ebx-0x2e],dl
  415885:	dec    ebx
  415886:	cmp    al,cl
  415888:	inc    ah
  41588a:	ret    
  41588b:	cmp    edi,edx
  41588d:	test   eax,0x5b3d2ef
  415892:	cmp    eax,0x2bb0a17
  415897:	sub    al,0x87
  415899:	fisttp QWORD PTR [ecx+0x7b6d1fa3]
  41589f:	das    
  4158a0:	fdivr  DWORD PTR [ebx-0x76b08af]
  4158a6:	in     eax,0xe0
  4158a8:	mov    eax,DWORD PTR [ecx]
  4158aa:	adc    DWORD PTR [esi+0x5c201cd9],0xc006b165
  4158b4:	xchg   edx,eax
  4158b5:	sti    
  4158b6:	mov    ch,0xec
  4158b8:	scas   eax,DWORD PTR es:[edi]
  4158b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158ba:	inc    ax
  4158bc:	retf   0xe33c
  4158bf:	stc    
  4158c0:	adc    edi,esi
  4158c2:	std    
  4158c3:	add    dh,BYTE PTR [esi+0x444c917a]
  4158c9:	daa    
  4158ca:	mov    esp,0x69db6132
  4158cf:	mov    ah,0xc0
  4158d1:	jns    0x415859
  4158d3:	pop    edi
  4158d4:	(bad)  
  4158d6:	out    dx,al
  4158d7:	retf   
  4158d8:	dec    eax
  4158d9:	out    dx,eax
  4158da:	call   0x8c5ab13b
  4158df:	prefetchwt1 (bad)
  4158e0:	or     eax,0xc88e4bd4
  4158e5:	lock ja 0x415880
  4158e8:	sub    ecx,DWORD PTR [ebx-0x67a3c57d]
  4158ee:	and    bl,ah
  4158f0:	(bad)  
  4158f1:	xor    BYTE PTR [edi-0xcfa56d2],bh
  4158f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4158f8:	dec    edx
  4158f9:	push   ebx
  4158fa:	jae    0x41592c
  4158fc:	adc    esi,DWORD PTR [eax+0xe]
  4158ff:	cmc    
  415900:	jo     0x415916
  415902:	inc    edi
  415903:	ss (bad) 
  415905:	pop    ds
  415906:	popf   
  415907:	inc    esi
  415908:	stc    
  415909:	xchg   edx,eax
  41590a:	push   edx
  41590b:	clc    
  41590c:	cwde   
  41590d:	adc    DWORD PTR [edi-0x56],ebx
  415910:	push   ebp
  415911:	or     BYTE PTR [ebx+0x738bfb55],al
  415917:	in     eax,0xc4
  415919:	jmp    0x415992
  41591b:	adc    bl,BYTE PTR [ecx]
  41591d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41591e:	inc    esi
  41591f:	rcl    eax,cl
  415921:	xor    BYTE PTR [edi-0x3656459d],al
  415927:	in     eax,0xed
  415929:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41592a:	out    0x76,eax
  41592c:	jo     0x4158c7
  41592e:	adc    eax,0x538dc1d5
  415933:	pusha  
  415934:	cld    
  415935:	push   ebx
  415936:	sub    DWORD PTR [ebx-0x35a67ffe],0x74
  41593d:	std    
  41593e:	(bad)  
  41593f:	jl     0x41594d
  415941:	sub    eax,DWORD PTR [ecx-0x1e]
  415944:	mov    esp,?
  415946:	xchg   DWORD PTR [eax],edi
  415948:	mov    ds:0xaff5bfcc,eax
  41594d:	xor    eax,0x4ad3350b
  415952:	les    edx,FWORD PTR [edx-0x78]
  415955:	sbb    al,0xfa
  415957:	sti    
  415958:	in     al,0x4c
  41595a:	lock inc eax
  41595c:	in     al,dx
  41595d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41595e:	xor    DWORD PTR [esi+0xa],edi
  415961:	aaa    
  415962:	mov    cl,0x6e
  415964:	loop   0x415918
  415966:	inc    eax
  415967:	dec    ebp
  415968:	mov    dl,0x9f
  41596a:	pop    ecx
  41596b:	ds push cs
  41596d:	(bad)  
  41596e:	ror    DWORD PTR [eax],1
  415970:	out    0x16,al
  415972:	mov    eax,0xf11371be
  415977:	inc    eax
  415978:	aam    0x2d
  41597a:	xchg   esi,eax
  41597b:	arpl   WORD PTR [eax+0xd65ae95],bx
  415981:	retf   0xecdf
  415984:	(bad)  [eax+0x5e0d4409]
  41598a:	scas   al,BYTE PTR es:[edi]
  41598b:	mov    ecx,0x60184df6
  415990:	sub    ecx,0x2c
  415993:	adc    eax,0x6f569b4e
  415998:	outs   dx,BYTE PTR ds:[esi]
  415999:	push   0x84f13f49
  41599e:	mov    ds:0x787cd236,al
  4159a3:	sahf   
  4159a4:	mov    dl,0xa
  4159a6:	scas   eax,DWORD PTR es:[edi]
  4159a7:	adc    ebp,0xdf9c681d
  4159ad:	mov    eax,ds:0x2959483b
  4159b2:	comiss xmm7,DWORD PTR [ebp+0x37b607f3]
  4159b9:	adc    ebp,edi
  4159bb:	mov    ebx,0x6b89b785
  4159c0:	ret    
  4159c1:	xor    eax,0x4fea3c89
  4159c6:	in     al,0xcd
  4159c8:	test   BYTE PTR [ebx+0x5731ee78],0x3d
  4159cf:	outs   dx,DWORD PTR ds:[esi]
  4159d0:	xlat   BYTE PTR ds:[ebx]
  4159d1:	cli    
  4159d2:	xor    BYTE PTR [ebp+0x598b4556],ah
  4159d8:	jb     0x415a20
  4159da:	pop    ecx
  4159db:	mov    al,ds:0x96c6e3ae
  4159e0:	push   ebp
  4159e1:	sub    ecx,edx
  4159e3:	fs jae 0x415a03
  4159e6:	fistp  QWORD PTR [ebp+0x1c]
  4159e9:	out    0x3e,eax
  4159eb:	subps  xmm2,XMMWORD PTR [ebp-0x16]
  4159ef:	out    dx,al
  4159f0:	les    esp,FWORD PTR [eax-0x1d71cc06]
  4159f6:	and    ebx,esi
  4159f8:	or     al,0xf1
  4159fa:	(bad)  
  4159fb:	dec    edx
  4159fc:	popf   
  4159fd:	and    eax,0x539a5a70
  415a02:	in     al,0x13
  415a04:	(bad)  
  415a06:	aam    0x2c
  415a08:	stc    
  415a09:	outs   dx,DWORD PTR ds:[esi]
  415a0a:	xor    al,0x11
  415a0c:	retf   0xfe
  415a0f:	adc    esi,DWORD PTR [esi-0x6f6982b]
  415a15:	scas   eax,DWORD PTR es:[edi]
  415a16:	xchg   edi,eax
  415a17:	(bad)  [esi+0x5d1fdc91]
  415a1d:	cmp    bl,cl
  415a1f:	ds push esi
  415a21:	fs pop esi
  415a23:	xchg   ebx,eax
  415a24:	jecxz  0x415a9e
  415a26:	retf   
  415a27:	pop    ds
  415a28:	clc    
  415a29:	jno    0x415a72
  415a2b:	loope  0x4159d3
  415a2d:	call   0xebe9f2fd
  415a32:	pop    esp
  415a33:	sbb    eax,eax
  415a35:	pop    ecx
  415a36:	jne    0x415a77
  415a38:	mov    esi,0x9445f14
  415a3d:	sub    eax,0xfc238588
  415a42:	push   cs
  415a43:	outs   dx,DWORD PTR ds:[esi]
  415a44:	retf   0xe275
  415a47:	and    DWORD PTR [ebp-0x25],0xffffffb6
  415a4b:	fisubr WORD PTR [ecx+edi*8]
  415a4e:	mov    al,ds:0xe91e6e35
  415a53:	sub    al,0xd1
  415a55:	xchg   edi,eax
  415a56:	cdq    
  415a57:	mov    al,0x42
  415a59:	cmp    DWORD PTR [ebp*4-0x71d760a9],esi
  415a60:	bound  esp,QWORD PTR [edi-0x292f2de]
  415a66:	fadd   DWORD PTR ds:0x4e70f428
  415a6c:	(bad)  
  415a6d:	loopne 0x415ad9
  415a6f:	xchg   BYTE PTR [eax-0x1b],cl
  415a72:	pop    ebx
  415a73:	mov    eax,ds:0x10fee191
  415a78:	mov    cs,WORD PTR [edi-0x3a]
  415a7b:	xchg   ebx,eax
  415a7c:	stos   BYTE PTR es:[edi],al
  415a7d:	mov    eax,ds:0xda00405d
  415a82:	cmp    al,0x77
  415a84:	es rep ins BYTE PTR es:[edi],dx
  415a87:	sub    ecx,DWORD PTR [esi-0x67]
  415a8a:	jbe    0x415ae4
  415a8c:	mov    ds:0xcd547ca6,al
  415a91:	mov    edx,0x34d698e4
  415a96:	ds in  eax,0x7e
  415a99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a9a:	cmc    
  415a9b:	aad    0x0
  415a9d:	push   ss
  415a9e:	push   es
  415a9f:	dec    ebx
  415aa0:	inc    edx
  415aa1:	sbb    al,0xd7
  415aa4:	or     ebp,DWORD PTR [eax+ebp*2-0x25]
  415aa8:	dec    eax
  415aa9:	xor    al,al
  415aab:	adc    ah,dh
  415aad:	pushf  
  415aae:	sbb    eax,0x556892da
  415ab3:	push   ebx
  415ab4:	mov    eax,0x75de147
  415ab9:	scas   eax,DWORD PTR es:[edi]
  415aba:	mov    ebp,0x473ff83d
  415abf:	jle    0x415b04
  415ac1:	lea    ecx,[ebx]
  415ac3:	cld    
  415ac4:	adc    DWORD PTR [edx-0x30],0xa552fe71
  415acb:	daa    
  415acc:	dec    ebx
  415acd:	(bad)  
  415ace:	or     eax,0x8758fd83
  415ad3:	mov    ebx,0x9a7b477f
  415ad8:	repnz lahf 
  415ada:	push   edi
  415adb:	inc    edx
  415adc:	or     ebx,esi
  415ade:	inc    eax
  415adf:	sahf   
  415ae0:	inc    edi
  415ae1:	in     al,dx
  415ae2:	pop    es
  415ae3:	sub    BYTE PTR [ecx+0x6066730c],dl
  415ae9:	sbb    ecx,DWORD PTR [eax]
  415aeb:	dec    esp
  415aec:	outs   dx,DWORD PTR ds:[esi]
  415aed:	ret    
  415aee:	xor    edi,ecx
  415af0:	pop    ebp
  415af1:	push   ebp
  415af2:	add    DWORD PTR [edx],esp
  415af4:	and    ch,BYTE PTR [esi+0x7f]
  415af7:	enter  0x66a2,0x77
  415afb:	add    DWORD PTR [esp+ecx*1+0x42384141],0x818456ea
  415b06:	adc    BYTE PTR [esi],bl
  415b08:	ja     0x415b6d
  415b0a:	add    edx,DWORD PTR [esp+esi*8]
  415b0d:	sub    cl,BYTE PTR [esi]
  415b0f:	jae    0x415b87
  415b11:	xor    al,0x41
  415b13:	cmp    DWORD PTR cs:[edi],edi
  415b16:	xchg   edx,eax
  415b17:	(bad)  
  415b18:	pop    ebp
  415b19:	das    
  415b1a:	pop    eax
  415b1b:	and    esp,ebx
  415b1d:	je     0x415aff
  415b1f:	aad    0x28
  415b21:	arpl   bp,bp
  415b23:	xchg   ecx,eax
  415b24:	push   edx
  415b25:	push   DWORD PTR [ecx]
  415b27:	xchg   ebp,eax
  415b28:	ror    DWORD PTR [ebx],0x67
  415b2b:	cmp    DWORD PTR [edi+eiz*2-0x1c],edi
  415b2f:	fld    TBYTE PTR [ecx-0x1e375e]
  415b35:	data16 jmp 0x415b93
  415b38:	push   0x96ec3909
  415b3d:	call   0xeda:0xd1b37f21
  415b44:	mov    ecx,0x12d8d75b
  415b49:	jge    0x415afa
  415b4b:	scas   al,BYTE PTR es:[edi]
  415b4c:	ins    BYTE PTR es:[edi],dx
  415b4d:	pop    eax
  415b4e:	mov    ecx,0x24e31966
  415b53:	daa    
  415b54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b55:	lock mov ch,0xca
  415b58:	fbstp  TBYTE PTR [eax+0xe6b704e]
  415b5e:	fwait
  415b5f:	pop    edx
  415b60:	(bad)  
  415b61:	xor    BYTE PTR [edx],cl
  415b63:	das    
  415b64:	adc    cl,BYTE PTR ds:0x24055fd4
  415b6a:	push   edi
  415b6b:	xchg   edi,eax
  415b6c:	fdivr  DWORD PTR [eax+0x7fb3e19f]
  415b72:	jbe    0x415b8d
  415b74:	inc    esp
  415b75:	test   BYTE PTR [ebp+0x7e668611],bh
  415b7b:	aas    
  415b7c:	mov    bl,0xd8
  415b7e:	pop    ss
  415b7f:	jmp    0xfe1e63db
  415b84:	pop    ds
  415b85:	mov    ds:0xb8fa61f8,eax
  415b8a:	jo     0x415b18
  415b8c:	add    al,0xd0
  415b8e:	leave  
  415b8f:	pop    esp
  415b90:	adc    dl,BYTE PTR [edi]
  415b92:	shl    DWORD PTR [ecx+0x34],0x50
  415b96:	mov    cl,0xda
  415b98:	pop    edi
  415b99:	pop    ebx
  415b9a:	in     eax,dx
  415b9b:	outs   dx,BYTE PTR ds:[esi]
  415b9c:	rol    eax,cl
  415b9e:	or     eax,0xf3738eef
  415ba3:	test   DWORD PTR ds:0x90da11c3,esp
  415ba9:	or     esi,DWORD PTR ds:0x2d0b05f9
  415baf:	pop    edx
  415bb0:	xor    eax,0xbe579379
  415bb5:	fild   QWORD PTR [edx]
  415bb7:	test   BYTE PTR [edx-0x5],dl
  415bba:	push   0x45
  415bbc:	shl    BYTE PTR [esi],cl
  415bbe:	xor    BYTE PTR [edx-0x7],0x4d
  415bc2:	jae    0x415bb7
  415bc4:	jle    0x415b5f
  415bc6:	adc    eax,0xaeecc47
  415bcb:	and    DWORD PTR [eax+0x5b],0x39
  415bcf:	(bad)
  415bd2:	jbe    0x415bd0
  415bd4:	jl     0x415c2d
  415bd6:	shl    BYTE PTR [ebp-0x4b1232f6],cl
  415bdc:	or     DWORD PTR [ebx],ecx
  415bde:	xchg   bl,al
  415be0:	and    al,0xf2
  415be2:	dec    ebx
  415be3:	mov    eax,ds:0x1c03f35a
  415be8:	inc    ecx
  415be9:	je     0x415c5c
  415beb:	int    0x41
  415bed:	mov    edx,0x3546047c
  415bf2:	sahf   
  415bf3:	outs   dx,DWORD PTR ds:[esi]
  415bf4:	(bad)  
  415bf5:	cmp    DWORD PTR [edi],eax
  415bf7:	dec    ebx
  415bf8:	fdiv   st(2),st
  415bfa:	ret    0x4dac
  415bfd:	jg     0x415bd3
  415bff:	adc    eax,0xf136c6d9
  415c04:	add    DWORD PTR [edx-0x6bcef242],eax
  415c0a:	pushf  
  415c0b:	sbb    DWORD PTR [edi-0x57eae044],ebp
  415c11:	cld    
  415c12:	sbb    edx,DWORD PTR [edx+edi*2]
  415c15:	dec    esp
  415c16:	and    ah,BYTE PTR [eax+0x7d]
  415c19:	lods   al,BYTE PTR ds:[esi]
  415c1a:	mov    cl,0xb9
  415c1c:	test   BYTE PTR [edx],cl
  415c1e:	loope  0x415bc3
  415c20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c21:	int    0x2f
  415c23:	xchg   BYTE PTR [edx-0x13],al
  415c26:	hlt    
  415c27:	sub    bl,0x36
  415c2a:	add    ebp,DWORD PTR [ebx-0xea27d98]
  415c30:	xor    eax,0xb4953fe3
  415c35:	pop    ecx
  415c36:	xor    ebp,ecx
  415c38:	mov    esi,0xdc5bade1
  415c3d:	xchg   edx,eax
  415c3e:	and    al,0xfa
  415c40:	cmp    DWORD PTR ds:0xd0700152,ecx
  415c46:	sub    bh,ah
  415c48:	pop    esi
  415c49:	loopne 0x415c41
  415c4b:	inc    esp
  415c4c:	add    esp,DWORD PTR [ebx+edx*8-0x5c]
  415c50:	nop
  415c51:	push   0x17
  415c53:	jecxz  0x415cb7
  415c55:	bound  ebx,QWORD PTR [edi+0x6cb35d8a]
  415c5b:	ss mov esp,0xcf96043
  415c61:	test   DWORD PTR [eax-0x707936cb],0x77a557d5
  415c6b:	aam    0x4c
  415c6d:	lods   al,BYTE PTR ds:[esi]
  415c6e:	shl    DWORD PTR [ebx+0x5048e7f7],cl
  415c74:	rol    BYTE PTR [ebx+ecx*4],0xf6
  415c78:	dec    ecx
  415c79:	repnz pop edx
  415c7b:	je     0x415c77
  415c7d:	loope  0x415ccb
  415c7f:	pop    ecx
  415c80:	mov    al,ds:0xf9a9eb34
  415c85:	test   BYTE PTR [edx+edi*2-0x4cb39d4],ah
  415c8c:	gs sbb al,0xf4
  415c8f:	jno    0x415ca8
  415c91:	mov    ds:0xaec18b4,al
  415c96:	fbld   TBYTE PTR [edx+0x48]
  415c99:	scas   al,BYTE PTR es:[edi]
  415c9a:	mov    esi,0xca3d9126
  415c9f:	aad    0x9f
  415ca1:	mov    ds:0x5c095f21,eax
  415ca6:	fld    DWORD PTR [bx-0x59]
  415caa:	repnz mov ch,0xc2
  415cad:	mov    eax,ds:0x88b4c76a
  415cb2:	imul   esi,DWORD PTR [edi+eax*4],0xffffffd4
  415cb6:	adc    bl,BYTE PTR [esi-0x1d25bef]
  415cbc:	xor    ch,BYTE PTR [ebx]
  415cbe:	sub    bl,BYTE PTR [ecx]
  415cc0:	jmp    0x415d11
  415cc2:	push   ds
  415cc3:	sysretw 
  415cc6:	cmp    dl,dl
  415cc8:	sbb    dl,BYTE PTR [esi-0x705d6ab]
  415cce:	aas    
  415ccf:	xor    eax,0x86b076d6
  415cd4:	sbb    ch,bl
  415cd6:	dec    edi
  415cd7:	(bad)  
  415cd8:	inc    edx
  415cd9:	sbb    dh,bh
  415cdb:	adc    al,BYTE PTR [esi]
  415cdd:	or     bh,0xdd
  415ce0:	xchg   ebp,eax
  415ce1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ce2:	in     eax,dx
  415ce3:	jl     0x415c70
  415ce5:	add    al,BYTE PTR [eax]
  415ce7:	xor    DWORD PTR [edx-0x2a],0x61
  415ceb:	pop    edx
  415cec:	add    esi,DWORD PTR [ebx-0x4b]
  415cef:	xlat   BYTE PTR ds:[ebx]
  415cf0:	push   es
  415cf1:	and    DWORD PTR [edi-0x3b841ea7],esp
  415cf7:	test   DWORD PTR [ebx-0x4515d3d9],ebx
  415cfd:	mov    bh,dh
  415cff:	mov    bh,0x9d
  415d01:	xchg   DWORD PTR [ebx],eax
  415d03:	out    0xfa,eax
  415d05:	mov    bl,0x76
  415d07:	cdq    
  415d08:	loop   0x415d4e
  415d0a:	mov    ds:0x4a6fbb9d,eax
  415d0f:	push   eax
  415d10:	lds    ecx,FWORD PTR [esi+0x21892aad]
  415d16:	dec    esi
  415d17:	push   0xffffff95
  415d19:	dec    ebp
  415d1a:	add    al,cl
  415d1c:	lahf   
  415d1d:	jne    0x415d04
  415d1f:	and    DWORD PTR [ebx-0x5],edi
  415d22:	push   cs
  415d23:	mov    ebx,0x8f652ae8
  415d28:	ins    BYTE PTR es:[edi],dx
  415d29:	outs   dx,BYTE PTR ds:[esi]
  415d2a:	loope  0x415cad
  415d2c:	xchg   ebp,eax
  415d2d:	pushf  
  415d2e:	jbe    0x415d0f
  415d30:	pop    edi
  415d31:	out    0x9d,eax
  415d33:	xor    eax,0x288daec6
  415d38:	lahf   
  415d39:	xor    esi,DWORD PTR [ecx+0x24]
  415d3c:	iret   
  415d3d:	outs   dx,DWORD PTR ds:[esi]
  415d3e:	aaa    
  415d3f:	mov    cl,BYTE PTR [ecx+ebx*4]
  415d42:	push   ebx
  415d43:	fucomip st,st(6)
  415d45:	jg     0x415d73
  415d47:	push   eax
  415d48:	mov    DWORD PTR [ebx+0x5c],0xc4fe1fe9
  415d4f:	ret    0xa1
  415d52:	mov    al,0x4
  415d54:	xchg   esi,eax
  415d55:	or     BYTE PTR [eiz*8+0x37ff4d46],al
  415d5c:	arpl   WORD PTR [ebp-0x3e],ax
  415d5f:	add    eax,0xd338235b
  415d64:	mov    ch,0xd8
  415d66:	xor    ch,0xdc
  415d69:	in     al,dx
  415d6a:	icebp  
  415d6b:	adc    ch,BYTE PTR [esi+0x72]
  415d6e:	(bad)  
  415d6f:	xor    DWORD PTR [edx],ebx
  415d71:	adc    BYTE PTR [eax+ecx*4],bl
  415d74:	sub    eax,0xfed5cc86
  415d79:	loopne 0x415d6e
  415d7b:	enter  0x2323,0xcb
  415d7f:	and    BYTE PTR [eax+0x16],ah
  415d82:	cmp    edx,DWORD PTR [edi+0x15]
  415d85:	cmc    
  415d86:	ja     0x415d53
  415d88:	mov    eax,ds:0x3752e6a9
  415d8d:	stos   BYTE PTR es:[edi],al
  415d8e:	and    BYTE PTR fs:[eax+ebp*8],ch
  415d92:	clc    
  415d93:	popf   
  415d94:	pop    es
  415d95:	sbb    ah,BYTE PTR [edx-0x48]
  415d98:	jp     0x415d9f
  415d9a:	(bad)  
  415d9b:	mul    esp
  415d9d:	inc    edx
  415d9e:	jge    0x415dfd
  415da0:	mov    ch,BYTE PTR [ecx-0x1f]
  415da3:	dec    ebp
  415da4:	fdiv   st,st(5)
  415da6:	mov    esp,0xaca391cf
  415dab:	shl    BYTE PTR [ebp+0x66bd7a6c],1
  415db1:	bnd je 0x415d76
  415db4:	sub    ebx,DWORD PTR [edi+0x20493d07]
  415dba:	and    eax,0x17399a0d
  415dbf:	cli    
  415dc0:	popf   
  415dc1:	into   
  415dc2:	lahf   
  415dc3:	loop   0x415d5e
  415dc5:	sbb    bl,BYTE PTR [ebx-0x5]
  415dc8:	xor    DWORD PTR [esi+0x4e],esp
  415dcb:	mov    dh,0x4a
  415dcd:	mov    ebx,0x75998f54
  415dd2:	mov    ebx,cs
  415dd4:	imul   esi,DWORD PTR [ebp-0x6035a8fc],0xffffff9f
  415ddb:	add    BYTE PTR [ecx-0x37],al
  415dde:	ja     0x415d81
  415de0:	out    dx,eax
  415de1:	shl    bl,cl
  415de3:	adc    ch,BYTE PTR [ecx]
  415de5:	iret   
  415de6:	pop    ecx
  415de7:	push   ebp
  415de8:	retf   0x425d
  415deb:	mov    bl,0xd1
  415ded:	scas   al,BYTE PTR es:[edi]
  415dee:	fld    QWORD PTR [ecx]
  415df0:	adc    DWORD PTR [ecx],ebp
  415df2:	dec    ecx
  415df3:	stos   DWORD PTR es:[edi],eax
  415df4:	mov    dh,0x25
  415df6:	(bad)  
  415df7:	outs   dx,BYTE PTR ds:[esi]
  415df8:	pop    ss
  415df9:	mov    dl,0xdc
  415dfb:	push   0x10
  415dfd:	push   ebx
  415dfe:	inc    ebp
  415dff:	push   edx
  415e00:	gs mov ebx,0x6bfd0f0c
  415e06:	jmp    0x437f0b91
  415e0b:	mov    ah,0x49
  415e0d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415e0e:	xor    DWORD PTR [ebp+0x6a],edi
  415e11:	ja     0x415e59
  415e13:	xchg   BYTE PTR [edi],cl
  415e15:	test   ecx,ebx
  415e17:	push   edx
  415e18:	or     al,0xfe
  415e1a:	int    0xb4
  415e1c:	cmp    DWORD PTR [edi],edi
  415e1e:	or     eax,0xf291509d
  415e23:	push   ecx
  415e24:	mov    eax,0x74be7af1
  415e29:	pop    ecx
  415e2a:	clc    
  415e2b:	in     al,dx
  415e2c:	push   esp
  415e2d:	out    dx,eax
  415e2e:	cmp    BYTE PTR fs:[eax+0x27d62e7f],0x86
  415e36:	sub    cl,BYTE PTR [edx]
  415e38:	(bad)  
  415e39:	(bad)  
  415e3a:	pushf  
  415e3b:	int3   
  415e3c:	bound  esi,QWORD PTR [ebp-0x2f]
  415e3f:	aas    
  415e40:	ins    BYTE PTR es:[edi],dx
  415e41:	mov    bh,0x4c
  415e43:	pushf  
  415e44:	outs   dx,WORD PTR ds:[esi]
  415e46:	mov    al,ds:0x9f648fc0
  415e4b:	call   0x1664:0xd929e35c
  415e52:	imul   ecx,DWORD PTR [edi+0x69],0xffffff87
  415e56:	pop    ds
  415e57:	xor    DWORD PTR [eax-0x27],0x845befb9
  415e5e:	arpl   WORD PTR [esi-0x63],si
  415e61:	(bad)  
  415e62:	jmp    DWORD PTR [esi+ebx*8+0x623572d3]
  415e69:	fild   DWORD PTR [ecx]
  415e6b:	sbb    al,0xa4
  415e6d:	mov    BYTE PTR [ebx+0x1cff849b],ah
  415e73:	(bad)  
  415e74:	fistp  WORD PTR [esi-0x22]
  415e77:	jae    0x415ec9
  415e79:	retf   
  415e7a:	pop    es
  415e7b:	jae    0x415e2b
  415e7d:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e7f:	repz and al,0x50
  415e82:	xchg   DWORD PTR [ecx+0x41f0a980],ecx
  415e88:	mov    ebp,DWORD PTR [ecx+edx*4]
  415e8b:	mov    ah,BYTE PTR [esi+0x6a939bf2]
  415e91:	dec    esp
  415e92:	aam    0xa2
  415e94:	push   ds
  415e95:	push   ss
  415e96:	aad    0xcc
  415e98:	popf   
  415e99:	mov    WORD PTR [esi+eiz*1-0x5f],es
  415e9d:	aaa    
  415e9e:	ja     0x415e61
  415ea0:	inc    ebp
  415ea1:	xor    al,0xe
  415ea3:	pusha  
  415ea4:	in     eax,dx
  415ea5:	dec    esp
  415ea6:	lds    ebp,FWORD PTR gs:[edx-0x5c]
  415eaa:	and    al,0x5b
  415eac:	dec    eax
  415ead:	in     eax,dx
  415eae:	(bad)  
  415eaf:	int3   
  415eb0:	cmp    eax,0x58e9ffc4
  415eb5:	(bad)  
  415eb6:	fsubrp st(2),st
  415eb8:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415eba:	int    0x9f
  415ebc:	pop    edx
  415ebd:	test   BYTE PTR [ebp+ecx*4-0x3539966],0xf0
  415ec5:	sub    al,0x91
  415ec7:	fcmovnu st,st(3)
  415ec9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415eca:	sbb    al,0xf5
  415ecc:	add    al,0x3c
  415ece:	jmp    0x6513066a
  415ed3:	mov    ecx,0x57ce00d7
  415ed8:	fadd   QWORD PTR [edi+0x38fe5b92]
  415ede:	lods   eax,DWORD PTR ds:[esi]
  415edf:	retf   
  415ee0:	out    0x6e,eax
  415ee2:	ins    DWORD PTR es:[edi],dx
  415ee3:	inc    eax
  415ee4:	nop
  415ee5:	or     BYTE PTR [ebx+0x15],cl
  415ee8:	(bad)  
  415ee9:	aam    0x57
  415eeb:	int    0x83
  415eed:	jns    0x415e81
  415eef:	scas   al,BYTE PTR es:[edi]
  415ef0:	cmp    edx,DWORD PTR [edx-0x620b5b68]
  415ef6:	mov    dl,0x5e
  415ef8:	mov    eax,ds:0xcd49ac50
  415efd:	adc    ebp,DWORD PTR [ecx]
  415eff:	adc    cl,ah
  415f01:	push   ebx
  415f02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f03:	push   esi
  415f04:	out    0xf9,al
  415f06:	jg     0x415eca
  415f08:	fcomp  DWORD PTR [ebp-0x57b44fdf]
  415f0e:	lock shl DWORD PTR [edi],cl
  415f11:	mov    al,al
  415f13:	lods   eax,DWORD PTR ds:[esi]
  415f14:	jmp    0xce04bbe3
  415f19:	add    eax,0x249ebcec
  415f1e:	or     ch,dl
  415f20:	sbb    al,0xa
  415f22:	or     ah,BYTE PTR [esi]
  415f24:	push   es
  415f25:	adc    al,0xd8
  415f27:	ds ins BYTE PTR es:[edi],dx
  415f29:	jecxz  0x415ee5
  415f2b:	xchg   esi,eax
  415f2c:	cmc    
  415f2d:	push   edx
  415f2e:	rol    BYTE PTR [ebp-0x4e9e0cfa],cl
  415f34:	cdq    
  415f35:	pop    esp
  415f36:	jmp    0xb06c0296
  415f3b:	mov    ch,0xca
  415f3d:	es xor eax,0x884f5642
  415f43:	ret    0x5ae5
  415f46:	xchg   edi,eax
  415f47:	out    0x3f,eax
  415f49:	sbb    ch,BYTE PTR [edi-0x7c]
  415f4c:	dec    ebx
  415f4d:	lahf   
  415f4e:	sbb    eax,0xef588515
  415f53:	inc    BYTE PTR [ebp+0x1e5b0340]
  415f59:	mov    ecx,0xd5b49e90
  415f5e:	mov    edi,0x2e97ee78
  415f63:	iret   
  415f64:	cmp    DWORD PTR [ebx+0x2d52b702],eax
  415f6a:	nop
  415f6b:	mov    dl,cl
  415f6d:	xor    edi,DWORD PTR [esi]
  415f6f:	inc    edi
  415f70:	jbe    0x415f39
  415f72:	mov    esp,0x1bf39e52
  415f77:	pushf  
  415f78:	add    ah,BYTE PTR [ecx+edi*4]
  415f7b:	arpl   si,bx
  415f7d:	(bad)  
  415f7f:	pop    eax
  415f80:	lahf   
  415f81:	adc    al,0xae
  415f83:	dec    ecx
  415f84:	jns    0x415f82
  415f86:	and    eax,0x62b44107
  415f8c:	pop    es
  415f8d:	sbb    al,0x41
  415f8f:	jg     0x415fa3
  415f91:	mov    cl,ah
  415f93:	mov    ebx,0x62d33b78
  415f98:	loopne 0x415f4d
  415f9a:	add    ebx,edi
  415f9c:	rcl    al,cl
  415f9e:	(bad)  
  415f9f:	(bad)  
  415fa0:	imul   edx,DWORD PTR [edi],0x66
  415fa3:	(bad)  
  415fa4:	fdiv   QWORD PTR [ecx+ecx*1]
  415fa7:	arpl   WORD PTR [edx+esi*1+0x4e503503],cx
  415fae:	xor    al,0x3d
  415fb0:	push   edx
  415fb1:	adc    al,0x26
  415fb3:	sbb    eax,0x886c369
  415fb8:	push   cs
  415fb9:	lock clc 
  415fbb:	pop    es
  415fbc:	repz adc dh,BYTE PTR [eax+0x48632b3e]
  415fc3:	xor    eax,0xcdb32af7
  415fc8:	popa   
  415fc9:	repz cmp eax,0x610692fe
  415fcf:	fwait
  415fd0:	call   0x62a81f90
  415fd5:	dec    eax
  415fd6:	test   al,0xab
  415fd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415fd9:	xchg   ebx,eax
  415fda:	pop    eax
  415fdb:	add    BYTE PTR [eax+0x7b],bh
  415fde:	repz mov ecx,0xf0989aca
  415fe4:	test   al,0x17
  415fe6:	addr16 adc bh,al
  415fe9:	stos   DWORD PTR es:[edi],eax
  415fea:	inc    eax
  415feb:	pop    es
  415fec:	cmp    eax,0x2be71c58
  415ff1:	iret   
  415ff2:	pop    es
  415ff3:	fdivr  QWORD PTR [edi-0x38]
  415ff6:	add    edx,DWORD PTR [ecx]
  415ff8:	xor    eax,0xecb44e77
  415ffd:	add    al,0xa5
  415fff:	jmp    0x3d26:0x18f25861
  416006:	fnstenv [ebx+0x36]
  416009:	jle    0x416011
  41600b:	or     ecx,ebx
  41600d:	pushf  
  41600e:	xlat   BYTE PTR ds:[ebx]
  41600f:	push   es
  416010:	adc    ch,bl
  416012:	mov    ds:0xd84460d9,al
  416017:	rcl    BYTE PTR [ebx],0x42
  41601a:	push   ebx
  41601b:	dec    ebp
  41601c:	mov    cl,0x10
  41601e:	mov    ebp,0x7aa69138
  416023:	jae    0x415fa5
  416025:	ja     0x416001
  416027:	mov    al,es:0x6313c732
  41602d:	pop    ebx
  41602e:	dec    ebp
  41602f:	inc    edx
  416030:	jmp    0x416060
  416032:	xchg   ebx,eax
  416033:	je     0x416022
  416035:	mov    cl,BYTE PTR [ebp-0x3c]
  416038:	mov    ch,0xa8
  41603a:	test   eax,0xbc4d88f
  41603f:	pop    eax
  416040:	adc    BYTE PTR [edi],0xca
  416043:	jmp    FWORD PTR [ebx]
  416045:	lods   al,BYTE PTR ds:[esi]
  416046:	lds    ecx,FWORD PTR [eax]
  416048:	add    eax,DWORD PTR [ecx]
  41604a:	xor    DWORD PTR [ecx],esp
  41604c:	addr16 mov ch,0x59
  41604f:	adc    bl,ch
  416051:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416052:	or     edi,DWORD PTR [edx-0x46]
  416055:	push   0x492352d3
  41605a:	xchg   ebx,ebx
  41605c:	int3   
  41605d:	mov    ebx,ebx
  41605f:	dec    DWORD PTR [ecx-0x4b]
  416062:	push   ebp
  416063:	pop    esi
  416064:	ret    0xe2c3
  416067:	cli    
  416068:	js     0x41605a
  41606a:	dec    ebp
  41606b:	add    eax,0x133c13dc
  416070:	ins    BYTE PTR es:[edi],dx
  416071:	adc    ebx,DWORD PTR [di]
  416074:	mov    dl,0x60
  416076:	inc    esi
  416077:	outs   dx,BYTE PTR ds:[esi]
  416078:	in     al,0x33
  41607a:	test   BYTE PTR [esi+0x206b1f70],dl
  416080:	int3   
  416081:	cli    
  416082:	std    
  416083:	cwde   
  416084:	lods   al,BYTE PTR ds:[esi]
  416085:	push   ecx
  416086:	inc    ebp
  416087:	push   eax
  416088:	in     al,0xe1
  41608a:	repnz sar DWORD PTR [eax-0x2acc5f8],1
  416091:	cdq    
  416092:	retf   
  416093:	mov    eax,DWORD PTR [ebp+0x1ffc8a54]
  416099:	aam    0xc0
  41609b:	sbb    eax,0x46b9ed0c
  4160a0:	add    eax,0xaacec81f
  4160a5:	cmp    edx,DWORD PTR [ecx]
  4160a7:	in     al,0x61
  4160a9:	std    
  4160aa:	repz int3 
  4160ac:	clc    
  4160ad:	sar    BYTE PTR [edi+ebp*2],0xd0
  4160b1:	pop    es
  4160b2:	mov    bh,0x1e
  4160b4:	jb     0x4160b9
  4160b6:	in     al,dx
  4160b7:	loop   0x416112
  4160b9:	mov    WORD PTR [ecx+0x6d9668fb],?
  4160bf:	(bad)
  4160c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4160c4:	push   edx
  4160c5:	gs dec ebp
  4160c7:	dec    esp
  4160c8:	and    eax,0xd520305c
  4160cd:	aad    0xed
  4160cf:	mov    ebp,0xe37103fa
  4160d4:	(bad)  
  4160d5:	jns    0x41612b
  4160d7:	xchg   ebx,eax
  4160d8:	and    edx,DWORD PTR [ebx]
  4160da:	js     0x416088
  4160dc:	ja     0x416117
  4160de:	lea    ebp,[eax-0x6a]
  4160e1:	sub    al,0x1f
  4160e3:	mov    dl,0x6c
  4160e5:	(bad)  
  4160e6:	adc    DWORD PTR [eax-0x2c70a85e],ebx
  4160ec:	aaa    
  4160ed:	rol    ecx,0x27
  4160f0:	mov    ebx,0xacced08f
  4160f5:	add    edx,DWORD PTR [edi]
  4160f7:	sbb    ebx,ebp
  4160f9:	pushf  
  4160fa:	aaa    
  4160fb:	jg     0x416118
  4160fd:	sbb    bl,BYTE PTR ds:0xe389efb4
  416103:	mov    edx,0x8cbfe515
  416108:	jge    0x416116
  41610a:	xchg   esp,eax
  41610b:	mov    al,0xee
  41610d:	and    DWORD PTR [eax+0x498f77a9],ebx
  416113:	mov    ah,0x55
  416115:	enter  0xacc4,0x6d
  416119:	lods   al,BYTE PTR ds:[esi]
  41611a:	cs mov edx,0x5eeaeadb
  416120:	inc    ebx
  416121:	push   0xfe9f8f1e
  416126:	outs   dx,BYTE PTR ds:[esi]
  416127:	or     cl,ch
  416129:	push   es
  41612a:	inc    eax
  41612b:	inc    eax
  41612c:	pop    edx
  41612d:	lods   al,BYTE PTR ds:[esi]
  41612e:	fidiv  DWORD PTR [eax+esi*4-0x7e]
  416132:	cli    
  416133:	jmp    FWORD PTR [bx+di]
  416136:	and    ch,BYTE PTR [edx-0x443ccd82]
  41613c:	scas   al,BYTE PTR es:[edi]
  41613d:	loope  0x416147
  41613f:	mov    ebx,0x2524b6c1
  416144:	lahf   
  416145:	fist   WORD PTR [ecx]
  416147:	in     al,dx
  416148:	pop    esp
  416149:	dec    edx
  41614a:	dec    ecx
  41614b:	or     ebx,DWORD PTR [ebp-0xd]
  41614e:	jge    0x4161bc
  416150:	pop    ebx
  416151:	push   0x2840c10b
  416156:	iret   
  416157:	jecxz  0x4161b4
  416159:	into   
  41615a:	inc    edi
  41615b:	scas   al,BYTE PTR es:[edi]
  41615c:	rcr    DWORD PTR [edi-0x5a],0x13
  416160:	dec    edi
  416161:	dec    cx
  416163:	inc    esi
  416164:	mov    bh,0xce
  416166:	dec    eax
  416167:	ror    DWORD PTR [ebp-0x67bd10ea],cl
  41616d:	sub    BYTE PTR [ebp+0x21d7a8b5],al
  416173:	cmc    
  416174:	xchg   BYTE PTR [ebp-0x14b8b982],ch
  41617a:	dec    ebx
  41617b:	(bad)  
  41617c:	ret    
  41617d:	retf   
  41617e:	mov    cl,0x5a
  416180:	sti    
  416181:	in     eax,dx
  416182:	dec    ecx
  416183:	js     0x41616f
  416185:	cmp    BYTE PTR [edx],bh
  416187:	or     eax,0xcb24b0e1
  41618c:	clc    
  41618d:	repnz lds esp,FWORD PTR [edx+0x68]
  416191:	imul   ebx,DWORD PTR [edi-0x1d7885f8],0x1f3e0389
  41619b:	push   es
  41619c:	mov    bl,0x2e
  41619e:	retf   0xb016
  4161a1:	push   ds
  4161a2:	xor    al,BYTE PTR [ecx]
  4161a4:	mov    esp,0xe6d4c08
  4161a9:	(bad)  
  4161aa:	lea    edi,[ebp+0x110c23dc]
  4161b0:	std    
  4161b1:	hlt    
  4161b2:	pushf  
  4161b3:	leave  
  4161b4:	xor    bh,ah
  4161b6:	mov    al,0x7d
  4161b8:	loopne 0x416172
  4161ba:	jecxz  0x4161ef
  4161bc:	and    esp,DWORD PTR [eax]
  4161be:	cvtpi2ps xmm4,QWORD PTR [edx]
  4161c1:	into   
  4161c2:	(bad)  
  4161c3:	xchg   edx,eax
  4161c4:	adc    ch,0x3a
  4161c7:	mov    edx,0x7ce2b2c8
  4161cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4161cd:	mov    ebx,0x4d55835e
  4161d2:	push   ds
  4161d3:	mov    al,0x5a
  4161d5:	and    al,0x4e
  4161d7:	aad    0x69
  4161d9:	mov    al,0x3e
  4161db:	ss mov dh,0x39
  4161de:	daa    
  4161df:	out    0x56,al
  4161e1:	or     DWORD PTR [ecx],0xffffffe9
  4161e4:	(bad)  
  4161e5:	sbb    bh,ch
  4161e7:	data16 aam 0xa0
  4161ea:	int3   
  4161eb:	fcomip st,st(3)
  4161ed:	into   
  4161ee:	xor    bl,BYTE PTR [ecx-0x60]
  4161f1:	(bad)  
  4161f2:	sub    DWORD PTR [esi-0x28],esi
  4161f5:	jg     0x4161de
  4161f7:	shl    BYTE PTR [ebp+ebp*8+0x58],1
  4161fb:	out    0xa8,eax
  4161fd:	test   DWORD PTR [ebx],ebx
  4161ff:	mov    ds:0xb9873a38,eax
  416204:	cld    
  416205:	and    eax,0xe1d2098a
  41620a:	xor    ebx,edx
  41620c:	fneni(8087 only) 
  41620e:	loope  0x4161ce
  416210:	xor    ch,ch
  416212:	push   0xffffffc5
  416214:	pop    ss
  416215:	and    DWORD PTR ds:0xd9c15b25,edx
  41621b:	ret    
  41621c:	ss jne 0x4161bd
  41621f:	adc    esi,DWORD PTR [esp+ecx*2-0x2206469e]
  416226:	lods   eax,DWORD PTR ds:[esi]
  416227:	ins    BYTE PTR es:[edi],dx
  416228:	adc    esi,DWORD PTR [edi+0xf]
  41622b:	push   cs
  41622c:	push   ss
  41622d:	jbe    0x41626c
  41622f:	fcom   QWORD PTR [ecx-0x3b647c10]
  416235:	inc    edi
  416236:	fs (bad) 
  416238:	call   0xfd05bef2
  41623d:	add    BYTE PTR [ebx-0x55],bl
  416240:	jo     0x416290
  416242:	xor    al,bh
  416244:	mov    esp,0x48868578
  416249:	int3   
  41624a:	jmp    0x295b:0x20e8902b
  416251:	xchg   esp,eax
  416252:	mov    ds:0xa3a61639,al
  416257:	movmskps edi,xmm5
  41625a:	je     0x4161f7
  41625c:	pop    esp
  41625d:	mov    DWORD PTR [ecx-0x17b9107d],ebx
  416263:	mov    esi,cs
  416265:	xchg   ecx,eax
  416266:	sub    eax,0x64cd81d5
  41626b:	aam    0xe8
  41626d:	and    ebx,ebp
  41626f:	lock sub dl,BYTE PTR [edi]
  416272:	outs   dx,DWORD PTR ds:[esi]
  416273:	pop    ebp
  416274:	push   es
  416275:	arpl   WORD PTR [ebp-0x53],dx
  416278:	inc    esp
  416279:	fcmovnb st,st(0)
  41627b:	pop    esp
  41627c:	mov    BYTE PTR [ecx-0x71],cl
  41627f:	bound  ecx,QWORD PTR [eax]
  416281:	inc    esp
  416282:	cld    
  416283:	arpl   WORD PTR [eax+0x24],di
  416286:	cld    
  416287:	sbb    eax,0xa43f1d7a
  41628c:	or     BYTE PTR [ecx+0x7a],al
  41628f:	js     0x416298
  416291:	and    cl,ah
  416293:	rcl    BYTE PTR [ecx-0x62bcd69b],cl
  416299:	inc    ebp
  41629a:	add    eax,0x9cfe7c7e
  41629f:	add    ch,al
  4162a1:	int3   
  4162a2:	cmp    edx,eax
  4162a4:	add    DWORD PTR [esi-0x3d],edi
  4162a7:	jb     0x4162f9
  4162a9:	outs   dx,DWORD PTR ds:[esi]
  4162aa:	jae    0x4162ba
  4162ac:	sbb    esp,ebx
  4162ae:	or     eax,0xbede3b6e
  4162b3:	jae    0x41628b
  4162b5:	clc    
  4162b6:	mov    bl,0xf7
  4162b8:	aas    
  4162b9:	mov    ds:0x7096efd2,al
  4162be:	xchg   esp,eax
  4162bf:	adc    bl,BYTE PTR [ecx+0x5b]
  4162c2:	xchg   esi,eax
  4162c3:	mov    edx,0x2ce41311
  4162c8:	shl    DWORD PTR [ecx],1
  4162ca:	or     ecx,DWORD PTR [edi+0x1f]
  4162cd:	stc    
  4162ce:	fwait
  4162cf:	in     al,dx
  4162d0:	das    
  4162d1:	mov    esi,0xdd2a89f
  4162d6:	(bad)  
  4162d7:	loop   0x41632b
  4162d9:	and    al,0xf6
  4162db:	xor    eax,0xeb5d8014
  4162e0:	imul   BYTE PTR [edx-0x66]
  4162e3:	iret   
  4162e4:	rcl    BYTE PTR [ecx+0xcfa9228],0x1a
  4162eb:	(bad)  
  4162ec:	sbb    al,0x2c
  4162ee:	stos   BYTE PTR es:[edi],al
  4162ef:	adc    al,0xba
  4162f1:	lahf   
  4162f2:	and    eax,ebp
  4162f4:	sbb    bl,BYTE PTR [edx+0x14e96a9c]
  4162fa:	xor    dh,BYTE PTR [ebx+edi*8]
  4162fd:	retf   
  4162fe:	dec    esp
  4162ff:	push   ss
  416300:	cmp    BYTE PTR [edi],bh
  416302:	xchg   ecx,eax
  416303:	xchg   ecx,eax
  416304:	mov    dl,0xf6
  416306:	cmp    ch,BYTE PTR [esp+edi*8]
  416309:	cld    
  41630a:	(bad)  
  41630b:	jg     0x4162bb
  41630d:	cmp    eax,DWORD PTR [esi-0xf]
  416310:	mov    bh,0xc3
  416312:	rcr    cl,1
  416314:	mov    BYTE PTR [edi],0x34
  416317:	ror    DWORD PTR [esi-0x2519bfe],1
  41631d:	push   ebx
  41631e:	jnp    0x416394
  416320:	out    dx,al
  416321:	mov    ah,0x71
  416323:	xchg   edi,eax
  416324:	ror    BYTE PTR [ebp-0x3c56bd0f],cl
  41632a:	add    dl,BYTE PTR [esi+0x3ff4f7bd]
  416330:	inc    eax
  416331:	std    
  416332:	fisttp DWORD PTR [ebx+0x6a9be5a7]
  416338:	cmc    
  416339:	aam    0x44
  41633b:	xchg   BYTE PTR [ebx+ebx*8],bl
  41633e:	lahf   
  41633f:	jne    0x4163ba
  416341:	mov    eax,gs:0x3f8f5cb5
  416347:	xor    eax,0xd3099672
  41634c:	mov    es,WORD PTR [eax-0x1d6cda0]
  416352:	sbb    BYTE PTR [edx+edx*2],0x77
  416356:	or     eax,0xa5fff251
  41635b:	push   ebx
  41635c:	or     eax,0x71a25586
  416361:	adc    eax,0x48ae3db6
  416366:	sbb    al,0xe5
  416368:	sbb    eax,DWORD PTR [edx-0x61]
  41636b:	(bad)  
  41636c:	in     al,dx
  41636d:	das    
  41636e:	push   0xffffff90
  416370:	setns  dh
  416373:	mov    eax,0x9f990e28
  416378:	shr    esp,1
  41637a:	fiadd  DWORD PTR [esi]
  41637c:	sub    DWORD PTR [ebx-0x39],ebp
  41637f:	into   
  416380:	fcom   QWORD PTR [eax-0x7e]
  416383:	in     al,0xf8
  416385:	aad    0x39
  416387:	sub    eax,0xffffffa1
  41638a:	mov    dh,0x78
  41638c:	ror    BYTE PTR [edx+0x508cd01c],cl
  416392:	mov    ebp,0xbdfef26a
  416397:	xor    DWORD PTR [eax-0x78],ebx
  41639a:	sub    BYTE PTR [ecx+0x7b167803],al
  4163a0:	xor    eax,0x23c99a38
  4163a5:	sbb    eax,0xc57c6c12
  4163aa:	jl     0x41636f
  4163ac:	nop
  4163ad:	adc    BYTE PTR ds:0xf156effa,bh
  4163b3:	mov    ecx,DWORD PTR [esi-0x348619d2]
  4163b9:	adc    al,0xce
  4163bb:	fwait
  4163bc:	leave  
  4163bd:	mov    bl,cl
  4163bf:	adc    esp,DWORD PTR [edx-0x3c048466]
  4163c5:	pop    ebp
  4163c6:	push   0x5c
  4163c8:	aas    
  4163c9:	inc    ebp
  4163ca:	(bad)  
  4163cb:	scas   al,BYTE PTR es:[edi]
  4163cc:	mov    ds:0xc4168373,al
  4163d1:	(bad)
  4163d4:	jb     0x41638a
  4163d6:	int3   
  4163d7:	xchg   edx,eax
  4163d8:	std    
  4163d9:	jb     0x416375
  4163db:	dec    ebx
  4163dc:	mov    eax,0x11307e47
  4163e1:	cmp    ch,al
  4163e3:	(bad)  
  4163e4:	jmp    0xb402845a
  4163e9:	or     eax,0xfe972249
  4163ee:	retf   0xec4a
  4163f1:	or     esi,DWORD PTR [ebp+ebx*2+0x1869b7e3]
  4163f8:	(bad)  
  4163fa:	push   ss
  4163fb:	out    0x8e,al
  4163fd:	sti    
  4163fe:	stos   DWORD PTR es:[edi],eax
  4163ff:	jl     0x4163e9
  416401:	and    ch,bh
  416403:	add    DWORD PTR [edx],0xfffffff8
  416406:	sub    DWORD PTR [ebx+eax*2+0x37],0x6bfef2d9
  41640e:	mov    ecx,0x72b43d0a
  416413:	(bad)  
  416414:	mov    ds:0xec8d36bf,al
  416419:	jg     0x4163e2
  41641b:	mov    al,0x2
  41641d:	mov    ebx,0xe96f331e
  416422:	lock pushf 
  416424:	rcr    ch,cl
  416426:	or     DWORD PTR [ebp-0x36],ecx
  416429:	xchg   edx,eax
  41642a:	cmp    ah,0xed
  41642d:	mov    esi,0x7a2687ee
  416432:	or     BYTE PTR [eax-0xa619f3f],bl
  416438:	adc    DWORD PTR [ecx+0x58],eax
  41643b:	jmp    0xee52:0xd90e2583
  416442:	pusha  
  416443:	scas   al,BYTE PTR es:[edi]
  416444:	ins    BYTE PTR es:[edi],dx
  416445:	pusha  
  416446:	rcl    BYTE PTR [esi-0x32],cl
  416449:	mov    ebp,0x3bf1fe40
  41644e:	ficom  WORD PTR [edi-0x3a]
  416451:	popa   
  416452:	mov    BYTE PTR [ebp-0x56],bh
  416455:	pusha  
  416456:	mov    al,ds:0x2edbd361
  41645b:	test   DWORD PTR [ebx+eax*1-0x7edf5935],edi
  416462:	lock retf 0x84b1
  416466:	dec    esp
  416467:	xchg   BYTE PTR [ecx-0x55],dh
  41646a:	cld    
  41646b:	jbe    0x4164b7
  41646d:	cmp    BYTE PTR [eax+0x40],dh
  416470:	cld    
  416471:	push   ebp
  416472:	add    bl,BYTE PTR [edx]
  416474:	test   bh,ch
  416476:	jecxz  0x4164eb
  416478:	scas   eax,DWORD PTR es:[edi]
  416479:	imul   edx,DWORD PTR [edx+edi*4-0x60],0x6b365bb4
  416481:	pop    esi
  416482:	jle    0x416478
  416484:	les    esi,FWORD PTR [ecx+0x7c18af7]
  41648a:	cmp    DWORD PTR [ebx],0xffffffd5
  41648d:	in     al,dx
  41648e:	adc    al,0xdd
  416490:	xor    al,0xdd
  416492:	push   eax
  416493:	(bad)  
  416494:	icebp  
  416495:	and    al,BYTE PTR [ecx]
  416497:	cmp    ecx,esi
  416499:	mov    ds:0x67a01ba7,eax
  41649e:	or     ebp,ebx
  4164a0:	fild   QWORD PTR [esi-0x5707882]
  4164a6:	adc    edx,DWORD PTR [ebx-0x17]
  4164a9:	mov    dl,0x50
  4164ab:	dec    esp
  4164ac:	add    al,dl
  4164ae:	push   ecx
  4164af:	pop    ss
  4164b0:	or     edx,DWORD PTR [esi]
  4164b2:	sbb    DWORD PTR [ebx+0x3f29519e],esi
  4164b8:	pushf  
  4164b9:	neg    DWORD PTR [esi+ecx*4+0x2f96a12f]
  4164c0:	dec    ecx
  4164c1:	es popa 
  4164c3:	dec    eax
  4164c4:	clc    
  4164c5:	add    bl,bh
  4164c7:	add    ebx,DWORD PTR [ebp+0x404deb7e]
  4164cd:	push   esp
  4164ce:	inc    BYTE PTR [esi-0x19]
  4164d1:	in     al,dx
  4164d2:	jg     0x41649c
  4164d4:	add    al,0x72
  4164d6:	mov    al,0x6e
  4164d8:	and    BYTE PTR [ebx+0x45787bac],ch
  4164de:	mov    ch,0x94
  4164e0:	sbb    al,0x2c
  4164e2:	cmp    ch,ch
  4164e4:	js     0x4164a8
  4164e6:	and    al,0x90
  4164e8:	cmp    eax,0x8e103163
  4164ed:	push   ebx
  4164ee:	sahf   
  4164ef:	outs   dx,BYTE PTR ds:[esi]
  4164f0:	sbb    eax,0xed701ab3
  4164f5:	inc    esp
  4164f6:	rcr    BYTE PTR [ecx-0xa],0xf2
  4164fa:	(bad)  
  4164fb:	(bad)  
  4164fc:	adc    ebx,DWORD PTR [eax]
  4164fe:	jnp    0x4164e0
  416500:	jb     0x416559
  416502:	xor    BYTE PTR [edx+eiz*8+0x3a96910a],bh
  416509:	mov    dh,BYTE PTR ds:0xc5246559
  41650f:	fstp   TBYTE PTR [esi+0x13d41fbb]
  416515:	fwait
  416516:	lock mov cl,0xec
  416519:	outs   dx,BYTE PTR ds:[esi]
  41651a:	xchg   DWORD PTR [edi],edx
  41651c:	pushf  
  41651d:	iret   
  41651e:	inc    ecx
  41651f:	sub    eax,0x2fbf4b41
  416524:	jo     0x41655d
  416526:	push   ds
  416527:	and    BYTE PTR [ebp-0x7fe6e62e],0x43
  41652e:	inc    edi
  41652f:	imul   DWORD PTR [ebx]
  416531:	fmul   QWORD PTR [edx]
  416533:	inc    ecx
  416534:	xchg   esi,eax
  416535:	int    0x36
  416537:	pop    ecx
  416538:	mov    dl,0x78
  41653a:	shr    DWORD PTR [ebx+eiz*1],1
  41653d:	ds inc eax
  41653f:	mov    ds:0x35d83d83,al
  416544:	out    0xf0,al
  416546:	ins    BYTE PTR es:[edi],dx
  416547:	push   eax
  416548:	icebp  
  416549:	mov    ds:0xb4656a8f,eax
  41654e:	gs out dx,al
  416550:	icebp  
  416551:	add    esp,DWORD PTR [edx-0x6e2106c1]
  416557:	xchg   ebp,eax
  416558:	sub    ebp,DWORD PTR [ebp+edx*4+0x6d]
  41655c:	sbb    dl,BYTE PTR [esp+ebp*2+0x61]
  416560:	mov    ecx,0x84913517
  416565:	mov    edi,0x7f8a6a25
  41656a:	push   0x368fc7f7
  41656f:	jmp    0xd47a:0x5d1ff8d7
  416576:	add    ah,BYTE PTR es:[edi+0x61]
  41657a:	popa   
  41657b:	in     eax,dx
  41657c:	jo     0x4165ea
  41657e:	mov    dl,BYTE PTR [ecx-0xd]
  416581:	jg     0x416537
  416583:	xor    eax,0xb889e76d
  416588:	inc    edx
  416589:	in     al,0x33
  41658b:	mov    dh,BYTE PTR [esi+0x10]
  41658e:	xchg   ecx,eax
  41658f:	inc    edi
  416590:	ja     0x4165d4
  416592:	inc    ebp
  416593:	dec    ebx
  416594:	push   0x4a
  416596:	ror    DWORD PTR [edi],1
  416598:	mov    al,0x4a
  41659a:	adc    bl,dl
  41659c:	outs   dx,BYTE PTR ds:[esi]
  41659d:	ins    DWORD PTR es:[edi],dx
  41659e:	mov    ecx,0x3a6b488b
  4165a3:	pop    esi
  4165a4:	or     DWORD PTR [ebp-0x65e127e0],ebp
  4165aa:	shl    DWORD PTR [eax+0x3a],1
  4165ad:	and    dh,dl
  4165af:	mov    esi,0xbb05cc06
  4165b4:	push   es
  4165b5:	inc    eax
  4165b6:	xlat   BYTE PTR ds:[ebx]
  4165b7:	call   0xdb7ac289
  4165bc:	ins    DWORD PTR es:[edi],dx
  4165bd:	jg     0x4165b9
  4165bf:	mov    edx,DWORD PTR [ebp+0x804daf3]
  4165c5:	ins    DWORD PTR es:[edi],dx
  4165c6:	sar    al,0x5b
  4165c9:	loope  0x416623
  4165cb:	mov    ds:0xe8f7b8a9,al
  4165d0:	imul   ebx,edi,0x1a816d65
  4165d6:	xchg   edi,eax
  4165d7:	or     dl,BYTE PTR [edx+eax*4-0x5465c672]
  4165de:	aaa    
  4165df:	dec    esp
  4165e0:	mov    al,0x6
  4165e2:	pop    esi
  4165e3:	mov    ds:0x29e1116a,al
  4165e8:	or     bl,BYTE PTR [ecx]
  4165ea:	aas    
  4165eb:	mov    esi,0x5d1e8078
  4165f0:	popa   
  4165f1:	int3   
  4165f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4165f3:	jle    0x416604
  4165f5:	mov    al,0x37
  4165f7:	pop    esp
  4165f8:	lock push ebx
  4165fa:	jnp    0x416664
  4165fc:	and    BYTE PTR [ecx-0x7a],0x73
  416600:	pop    edi
  416601:	inc    ecx
  416602:	mov    ebx,0xee927001
  416607:	stos   DWORD PTR es:[edi],eax
  416608:	call   0x6483:0x91a3e49c
  41660f:	or     al,0x4e
  416611:	xchg   BYTE PTR [esi+0x68],cl
  416614:	mov    DWORD PTR [esi-0x32],edx
  416617:	jg     0x4165d6
  416619:	sub    DWORD PTR [edi-0xbe4e465],ebp
  41661f:	sahf   
  416620:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416621:	(bad)  
  416622:	out    0x19,eax
  416624:	adc    esi,DWORD PTR [eax-0x1f]
  416627:	cmp    dh,BYTE PTR [ebp+0x61]
  41662a:	inc    ecx
  41662b:	sbb    edx,DWORD PTR [esi+0x7483a0]
  416631:	lods   al,BYTE PTR ds:[esi]
  416632:	ficom  DWORD PTR [ebx]
  416634:	addr16 cwde 
  416636:	fiadd  WORD PTR [esi+0x58]
  416639:	sub    al,0x17
  41663b:	push   0x34
  41663d:	adc    BYTE PTR [ebx+0x2c],0xaa
  416641:	jmp    0x4d3fff51
  416646:	sti    
  416647:	std    
  416648:	sub    bl,al
  41664a:	nop
  41664b:	jle    0x416628
  41664d:	retf   
  41664e:	(bad)  
  41664f:	jg     0x416653
  416651:	cmp    al,0x33
  416653:	outs   dx,DWORD PTR ds:[esi]
  416654:	mov    WORD PTR [ebx-0x420409c4],es
  41665a:	popf   
  41665b:	and    dh,BYTE PTR [edx-0x5ac971d4]
  416661:	clc    
  416662:	push   ecx
  416663:	pop    ebp
  416664:	pusha  
  416665:	dec    edx
  416666:	mov    dl,0x26
  416668:	xchg   ecx,eax
  416669:	push   ecx
  41666a:	sbb    ebx,DWORD PTR [ecx]
  41666c:	pop    edi
  41666d:	test   DWORD PTR [edi+eax*2+0x6e],edi
  416671:	push   ecx
  416672:	pop    es
  416673:	in     al,0xb9
  416675:	call   DWORD PTR [edx+ecx*4-0x24f0ac55]
  41667c:	xchg   esp,eax
  41667d:	outs   dx,BYTE PTR ds:[esi]
  41667e:	adc    eax,0x87d70caa
  416683:	dec    ebp
  416684:	and    eax,0xd296e138
  416689:	ror    BYTE PTR [ecx+0x15],1
  41668c:	adc    bl,cl
  41668e:	mov    edx,DWORD PTR [edx]
  416690:	xchg   ecx,eax
  416691:	lods   al,BYTE PTR ds:[esi]
  416692:	xchg   edx,esi
  416694:	jns    0x416624
  416696:	ss jne 0x4166e7
  416699:	and    DWORD PTR [ecx-0x39],ebx
  41669c:	xlat   BYTE PTR ds:[ebx]
  41669d:	dec    ebx
  41669e:	inc    edx
  41669f:	and    DWORD PTR [esi-0x4a],esi
  4166a2:	or     dh,dh
  4166a4:	data16 stos BYTE PTR es:[edi],al
  4166a6:	sub    ch,BYTE PTR [esi+0xefe12b3]
  4166ac:	xlat   BYTE PTR ds:[ebx]
  4166ad:	(bad)  
  4166ae:	(bad)  
  4166b0:	and    eax,0x13439593
  4166b5:	add    BYTE PTR ds:0x434df336,0xdc
  4166bc:	xor    DWORD PTR [esp+esi*8-0x399419a],0x5b
  4166c4:	cmp    eax,0x1af6f5bb
  4166c9:	mov    eax,ds:0x14089d52
  4166ce:	inc    ebp
  4166cf:	out    0x9b,eax
  4166d1:	adc    eax,0xdf6b23cd
  4166d6:	repnz imul ecx,DWORD PTR [eax+ebp*2+0x5b],0x238cf306
  4166df:	bound  ebx,QWORD PTR cs:[esi]
  4166e2:	xchg   edi,eax
  4166e3:	mov    ds:0x5f551420,al
  4166e8:	jp     0x416679
  4166ea:	inc    ebp
  4166eb:	jb     0x4166d5
  4166ed:	sbb    al,0xe3
  4166ef:	mov    ebp,0x32245482
  4166f4:	push   es
  4166f5:	cmp    eax,0x1eb62b02
  4166fa:	mov    al,0xf4
  4166fc:	dec    esp
  4166fd:	sub    BYTE PTR [ecx-0x80],dh
  416700:	mov    esp,0xda78123a
  416705:	and    ch,BYTE PTR [ebp-0x62]
  416708:	repz mov ecx,0x4311eae8
  41670e:	push   es
  41670f:	into   
  416710:	hlt    
  416711:	sub    DWORD PTR [edi+0x3780a0bf],ebx
  416717:	push   edx
  416718:	ss push ds
  41671a:	ret    
  41671b:	xchg   ebx,eax
  41671c:	mov    dl,0xfc
  41671e:	jae    0x416750
  416720:	cmp    eax,0xdc40e31a
  416725:	pop    esp
  416726:	sbb    edi,esi
  416728:	sbb    eax,0x29d1428a
  41672d:	(bad)  
  41672e:	mov    ah,0xf
  416730:	and    ecx,ecx
  416732:	jbe    0x416746
  416734:	jmp    0x416731
  416736:	inc    ebx
  416737:	pop    ss
  416738:	sub    BYTE PTR [esi-0x4],bh
  41673b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41673c:	and    BYTE PTR [ecx-0x7d],0xc3
  416740:	inc    DWORD PTR [esi+ecx*1]
  416743:	aas    
  416744:	nop    esp
  416747:	xlat   BYTE PTR ds:[ebx]
  416748:	jl     0x4167c4
  41674a:	adc    ebp,eax
  41674c:	adc    dh,ah
  41674e:	adc    BYTE PTR [eax+0x2e],bh
  416751:	pop    ds
  416752:	and    DWORD PTR [esi+0x5cfebfde],0x3b778bbc
  41675c:	pop    edi
  41675d:	pop    esi
  41675e:	in     eax,dx
  41675f:	fnstcw WORD PTR [edx]
  416761:	pop    esp
  416762:	fwait
  416763:	adc    esp,ebp
  416765:	mov    ecx,0x2303c340
  41676a:	loop   0x4166f1
  41676c:	jp     0x41677d
  41676e:	shr    esp,cl
  416770:	xchg   DWORD PTR [ecx-0x14],ecx
  416773:	cmp    bl,BYTE PTR [ecx-0x1a49e967]
  416779:	test   BYTE PTR [esi],bl
  41677b:	mov    fs,ecx
  41677d:	cmc    
  41677e:	jo     0x4167e2
  416780:	ja     0x41673f
  416782:	push   esi
  416783:	and    edx,0x2735706b
  416789:	xor    al,0x1d
  41678b:	jbe    0x416712
  41678d:	in     eax,dx
  41678e:	push   cs
  41678f:	or     DWORD PTR [edi+eiz*2-0x71dccddb],0xf
  416797:	pop    esp
  416798:	pop    ebx
  416799:	in     eax,dx
  41679a:	adc    eax,0xd67ce01f
  41679f:	and    BYTE PTR [eax-0x1c55246b],dl
  4167a5:	push   ss
  4167a6:	pop    ds
  4167a7:	push   ss
  4167a8:	mov    edi,0x46d9b158
  4167ad:	fisub  WORD PTR [esi+ebp*1]
  4167b0:	loop   0x41680b
  4167b2:	das    
  4167b3:	imul   BYTE PTR [edi-0x1]
  4167b6:	adc    eax,0x418014
  4167bb:	mov    DWORD PTR [ebp-0x2c],eax
  4167be:	movzx  eax,WORD PTR [ebp-0x2c]
  4167c2:	cmp    eax,0x539
  4167c7:	jne    0x4167f8
  4167c9:	mov    DWORD PTR [ebp-0x14],0xe0d
  4167d0:	lea    ecx,[ebp-0x28]
  4167d3:	push   ecx
  4167d4:	call   DWORD PTR ds:0x418018
  4167da:	mov    DWORD PTR [ebp-0x60],eax
  4167dd:	mov    DWORD PTR [ebp-0x54],0x3a
  4167e4:	mov    BYTE PTR [ebp-0x34],0x0
  4167e8:	mov    DWORD PTR [ebp-0x8],0x75e9f1b5
  4167ef:	mov    DWORD PTR [ebp-0x68],0x10b527
  4167f6:	jmp    0x416806
  4167f8:	mov    BYTE PTR ds:0x430700,0x0
  4167ff:	mov    BYTE PTR ds:0x41a770,0x0
  416806:	push   0x0
  416808:	call   DWORD PTR ds:0x418018
  41680e:	mov    DWORD PTR [ebp-0x2c],eax
  416811:	push   DWORD PTR ds:0x418018
  416817:	pop    edx
  416818:	mov    DWORD PTR [ebp-0x6c],edx
  41681b:	lea    edx,[ebp-0x40]
  41681e:	push   edx
  41681f:	mov    eax,DWORD PTR [ebp-0x60]
  416822:	push   eax
  416823:	call   DWORD PTR ds:0x418024
  416829:	mov    DWORD PTR [ebp-0x44],eax
  41682c:	push   DWORD PTR [ebp-0x30]
  41682f:	push   0x1000
  416834:	mov    eax,DWORD PTR [ebp-0x14]
  416837:	add    eax,0x46
  41683a:	push   eax
  41683b:	push   0x0
  41683d:	mov    ebx,DWORD PTR [ebp-0x44]
  416840:	call   ebx
  416842:	push   eax
  416843:	pop    ebx
  416844:	mov    DWORD PTR [ebp-0x4],ebx
  416847:	mov    ecx,DWORD PTR [ebp-0x68]
  41684a:	sub    ecx,0xdae0b
  416850:	mov    DWORD PTR [ebp-0x68],ecx
  416853:	cmp    DWORD PTR [ebp-0x4],0x0
  416857:	jne    0x416862
  416859:	push   0x0
  41685b:	push   0x0
  41685d:	call   0x417f22
  416862:	mov    edx,DWORD PTR [ebp-0x4]
  416865:	add    edx,DWORD PTR [ebp-0x14]
  416868:	mov    eax,DWORD PTR [ebp-0x8]
  41686b:	mov    DWORD PTR [edx],eax
  41686d:	mov    ecx,DWORD PTR [ebp-0x4]
  416870:	add    ecx,DWORD PTR [ebp-0x54]
  416873:	mov    DWORD PTR [ebp-0x5c],ecx
  416876:	mov    edx,DWORD PTR ds:0x418024
  41687c:	mov    DWORD PTR [ebp-0x4c],edx
  41687f:	mov    eax,DWORD PTR [ebp-0x4]
  416882:	add    eax,DWORD PTR [ebp-0x14]
  416885:	mov    ecx,DWORD PTR [ebp+0x8]
  416888:	mov    DWORD PTR [eax+0x4],ecx
  41688b:	mov    edx,DWORD PTR [ebp-0x4]
  41688e:	add    edx,DWORD PTR [ebp-0x14]
  416891:	mov    DWORD PTR [ebp-0xc],edx
  416894:	cmp    DWORD PTR [ebp-0x68],0x0
  416898:	jbe    0x4168b5
  41689a:	mov    eax,DWORD PTR [ebp-0xc]
  41689d:	push   eax
  41689e:	mov    ecx,DWORD PTR [ebp-0x14]
  4168a1:	push   ecx
  4168a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4168a5:	add    edx,DWORD PTR [ebp-0x68]
  4168a8:	push   edx
  4168a9:	mov    eax,DWORD PTR [ebp-0x4]
  4168ac:	push   eax
  4168ad:	call   0x417e34
  4168b2:	add    esp,0x10
  4168b5:	cmp    DWORD PTR [ebp-0x5c],0x0
  4168b9:	je     0x4168c9
  4168bb:	push   DWORD PTR [ebp-0x4c]
  4168be:	push   DWORD PTR [ebp-0x6c]
  4168c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4168c4:	push   ecx
  4168c5:	jmp    ecx
  4168c7:	jmp    0x4168cf
  4168c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4168cc:	mov    DWORD PTR [ebp-0x18],ecx
  4168cf:	mov    eax,0x1
  4168d4:	pop    ebx
  4168d5:	mov    esp,ebp
  4168d7:	pop    ebp
  4168d8:	ret    
  4168d9:	push   ebp
  4168da:	mov    ebp,esp
  4168dc:	pop    ebp
  4168dd:	ret    
  4168de:	push   ebp
  4168df:	mov    ebp,esp
  4168e1:	sub    esp,0x54
  4168e4:	mov    DWORD PTR [ebp-0x34],0x0
  4168eb:	mov    DWORD PTR [ebp-0x4],0x0
  4168f2:	mov    DWORD PTR [ebp-0x50],0x0
  4168f9:	mov    DWORD PTR [ebp-0x4c],0x0
  416900:	mov    DWORD PTR [ebp-0x30],0x0
  416907:	lea    eax,[ebp-0x38]
  41690a:	push   eax
  41690b:	push   0x8
  41690d:	call   DWORD PTR ds:0x418020
  416913:	call   DWORD PTR ds:0x418014
  416919:	mov    DWORD PTR [ebp-0x30],eax
  41691c:	lea    ecx,[ebp-0x48]
  41691f:	push   ecx
  416920:	call   DWORD PTR ds:0x418010
  416926:	mov    edx,DWORD PTR [ebp-0x34]
  416929:	push   edx
  41692a:	call   0x416959
  41692f:	add    esp,0x4
  416932:	call   0x417e25
  416937:	mov    DWORD PTR [ebp-0x54],0x0
  41693e:	jmp    0x416949
  416940:	mov    eax,DWORD PTR [ebp-0x54]
  416943:	add    eax,0x1
  416946:	mov    DWORD PTR [ebp-0x54],eax
  416949:	cmp    DWORD PTR [ebp-0x54],0x64
  41694d:	jae    0x416951
  41694f:	jmp    0x416940
  416951:	xor    eax,eax
  416953:	mov    esp,ebp
  416955:	pop    ebp
  416956:	ret    0x10
  416959:	push   ebp
  41695a:	mov    ebp,esp
  41695c:	sub    esp,0x40
  41695f:	push   esi
  416960:	mov    DWORD PTR [ebp-0x40],0x0
  416967:	mov    DWORD PTR [ebp-0x3c],0x0
  41696e:	mov    DWORD PTR [ebp-0x34],0x0
  416975:	mov    DWORD PTR [ebp-0x28],0x0
  41697c:	mov    DWORD PTR [ebp-0x20],0x0
  416983:	mov    DWORD PTR [ebp-0x2c],0x0
  41698a:	mov    DWORD PTR [ebp-0x30],0x449e28
  416991:	mov    DWORD PTR [ebp-0x28],0xaf9181d9
  416998:	mov    DWORD PTR [ebp-0x38],0x0
  41699f:	mov    eax,DWORD PTR [ebp-0x28]
  4169a2:	mov    DWORD PTR [ebp-0x24],eax
  4169a5:	mov    DWORD PTR [ebp-0x4],0x0
  4169ac:	mov    ecx,DWORD PTR ds:0x418014
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	push   0x0
  4169b7:	push   0x4e
  4169b9:	push   0x1e
  4169bb:	push   0x0
  4169bd:	push   0xffffffff
  4169bf:	call   DWORD PTR ds:0x41801c
  4169c5:	test   eax,eax
  4169c7:	je     0x417e04
  4169cd:	xchg   ecx,eax
  4169ce:	dec    ecx
  4169cf:	out    0xc1,al
  4169d1:	fstp   TBYTE PTR [esi+0xa8848a8]
  4169d7:	push   ebp
  4169d8:	jae    0x416a31
  4169da:	and    edx,DWORD PTR [ebx]
  4169dc:	jbe    0x416a57
  4169de:	fdivr  DWORD PTR [esi+0xa8c48a8]
  4169e4:	push   ebp
  4169e5:	xor    ebp,DWORD PTR [eax-0x3e89ec24]
  4169eb:	fdivr  DWORD PTR [esi+0xa8c48a8]
  4169f1:	push   ebp
  4169f2:	jae    0x41699c
  4169f4:	fcom   QWORD PTR [ebx]
  4169f6:	jbe    0x4169b9
  4169f8:	fdivr  DWORD PTR [esi+0xa8c48a8]
  4169fe:	push   ebp
  4169ff:	jae    0x4169a9
  416a01:	fcom   QWORD PTR [ebx]
  416a03:	jbe    0x4169c6
  416a05:	fdivr  DWORD PTR [esi+0xb8448a8]
  416a0b:	push   ebp
  416a0c:	jae    0x4169b4
  416a0e:	ret    
  416a0f:	test   eax,0xb76cc178
  416a14:	imul   esi,DWORD PTR gs:[ebx+ecx*1],0x8889be19
  416a1c:	jnp    0x416a3d
  416a1e:	mov    dl,0xf8
  416a20:	into   
  416a21:	fisub  DWORD PTR [edi]
  416a23:	jmp    0x416a9d
  416a25:	xor    al,0x1e
  416a27:	mov    BYTE PTR [edi-0x4850e78e],bh
  416a2d:	retf   0x2a88
  416a30:	jmp    0xc647915f
  416a35:	cld    
  416a36:	jp     0x416a50
  416a38:	loope  0x4169d6
  416a3a:	icebp  
  416a3b:	sti    
  416a3c:	push   0x163165e1
  416a41:	xchg   cl,dl
  416a43:	push   ds
  416a44:	jl     0x416a2b
  416a46:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416a4c:	push   ebp
  416a4d:	or     DWORD PTR [edi-0x36],esp
  416a50:	popf   
  416a51:	dec    eax
  416a52:	outs   dx,DWORD PTR ds:[esi]
  416a53:	mov    al,ds:0xf4e69663
  416a58:	xlat   BYTE PTR ds:[ebx]
  416a59:	imul   ebx,ebp,0xffffffd0
  416a5c:	add    DWORD PTR [esi],esi
  416a5e:	inc    ebp
  416a5f:	daa    
  416a60:	add    eax,0x5130069c
  416a65:	das    
  416a66:	mov    ax,ds:0xebd6375
  416a6c:	sbb    al,0xfd
  416a6e:	lea    edi,[ebx-0x6b]
  416a71:	cdq    
  416a72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a73:	sub    eax,0xc004f9ae
  416a78:	stos   DWORD PTR es:[edi],eax
  416a79:	cli    
  416a7a:	jbe    0x416a42
  416a7c:	jne    0x416afd
  416a7e:	pop    edx
  416a7f:	icebp  
  416a80:	mov    BYTE PTR [esi+eax*1-0x5c],al
  416a84:	into   
  416a85:	inc    ecx
  416a86:	pop    ss
  416a87:	xor    esp,DWORD PTR [ebx-0x73]
  416a8a:	out    0xf4,al
  416a8c:	xlat   BYTE PTR ds:[ebx]
  416a8d:	imul   ebx,ebp,0xffffffd1
  416a90:	add    DWORD PTR [edx-0x27],ebx
  416a93:	mov    ecx,0x22267c05
  416a98:	push   ecx
  416a99:	cmp    bh,bl
  416a9b:	or     esi,DWORD PTR [ebp-0x7]
  416a9e:	and    BYTE PTR [ecx-0x2fef5ee4],ah
  416aa4:	xchg   ebp,eax
  416aa5:	test   eax,0x97aeb739
  416aaa:	jb     0x416b17
  416aac:	stos   DWORD PTR es:[edi],eax
  416aad:	in     al,0xeb
  416aaf:	pop    ebx
  416ab0:	jne    0x416b29
  416ab2:	and    dh,BYTE PTR [edx-0x78]
  416ab5:	and    ecx,eax
  416ab7:	mov    edi,0xa06f487b
  416abc:	arpl   WORD PTR [eax+0x550a8c48],bp
  416ac2:	jae    0x416a6c
  416ac4:	fcom   QWORD PTR [ebx]
  416ac6:	jbe    0x416a89
  416ac8:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416ace:	push   ebp
  416acf:	jae    0x416a79
  416ad1:	fcom   QWORD PTR [ebx]
  416ad3:	jbe    0x416a96
  416ad5:	mov    bl,bh
  416ad7:	test   al,0x48
  416ad9:	ror    BYTE PTR [ebx],0x56
  416adc:	jae    0x416aac
  416ade:	xchg   edx,eax
  416adf:	pop    esi
  416ae0:	cmp    ecx,eax
  416ae2:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416ae8:	push   ebp
  416ae9:	xchg   ebx,eax
  416aea:	test   al,0xde
  416aec:	adc    bh,BYTE PTR [ebp-0x40]
  416aef:	sar    BYTE PTR [esi+0xa88aaa8],cl
  416af5:	push   ebp
  416af6:	imul   DWORD PTR [esi-0x3e89ec24]
  416afc:	fdivr  st,st(5)
  416afe:	adc    eax,0x450a8c48
  416b03:	jae    0x416aad
  416b05:	fcom   QWORD PTR [ebx]
  416b07:	jae    0x416aca
  416b09:	fdivr  DWORD PTR [esi+0x1a8c48e8]
  416b0f:	push   ebp
  416b10:	jae    0x416aba
  416b12:	ficom  WORD PTR [ebx]
  416b14:	jbe    0x416ada
  416b16:	fdivr  DWORD PTR [edi+0xa8c48a8]
  416b1c:	push   ebp
  416b1d:	jbe    0x416ac7
  416b1f:	fst    QWORD PTR [ebx]
  416b21:	jbe    0x416ae4
  416b23:	fdivr  DWORD PTR [esi+0xa8078a8]
  416b29:	push   ebp
  416b2a:	ja     0x416ad4
  416b2c:	fcomp  QWORD PTR [ecx]
  416b2e:	mov    ch,al
  416b30:	fdivr  DWORD PTR [eax+ebp*4+0x550a0d08]
  416b37:	arpl   WORD PTR [eax-0x3e89fc24],bp
  416b3d:	fdivr  DWORD PTR [esi+0x1a8c48b8]
  416b43:	push   ebp
  416b44:	jae    0x416aee
  416b46:	fcom   QWORD PTR [ebx]
  416b48:	jbe    0x416b1b
  416b4a:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416b50:	push   ebp
  416b51:	jae    0x416afb
  416b53:	fcom   QWORD PTR [ebx]
  416b55:	jb     0x416b18
  416b57:	aam    0xbe
  416b59:	icebp  
  416b5a:	dec    ebx
  416b5b:	mov    WORD PTR [edx],cs
  416b5d:	push   ebp
  416b5e:	mov    bl,0xa3
  416b60:	fadd   QWORD PTR [esi+0x49]
  416b63:	rcr    eax,0xbe
  416b66:	test   al,0x48
  416b68:	mov    WORD PTR [edx],cs
  416b6a:	push   ebp
  416b6b:	jae    0x416b15
  416b6d:	fcom   QWORD PTR [ebx]
  416b6f:	jbe    0x416b32
  416b71:	fdivr  DWORD PTR [esi+0x2a8c48a8]
  416b77:	pop    ecx
  416b78:	jae    0x416b2a
  416b7a:	fcom   QWORD PTR [ebx]
  416b7c:	jbe    0x416b3f
  416b7e:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416b84:	push   ebp
  416b85:	jae    0x416b2f
  416b87:	fcom   QWORD PTR [ebx]
  416b89:	jbe    0x416b4c
  416b8b:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416b91:	push   ebp
  416b92:	jae    0x416b3c
  416b94:	fcom   QWORD PTR [ebx]
  416b96:	jbe    0x416b59
  416b98:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416b9e:	push   ebp
  416b9f:	jae    0x416b49
  416ba1:	fcom   QWORD PTR [ebx]
  416ba3:	jbe    0x416b66
  416ba5:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416bab:	push   ebp
  416bac:	jae    0x416b56
  416bae:	fcom   QWORD PTR [ebx]
  416bb0:	jbe    0x416b73
  416bb2:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416bb8:	push   ebp
  416bb9:	jae    0x416b63
  416bbb:	fcom   QWORD PTR [ebx]
  416bbd:	jbe    0x416b80
  416bbf:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416bc5:	push   ebp
  416bc6:	jae    0x416b70
  416bc8:	fcom   QWORD PTR [ebx]
  416bca:	jbe    0x416b8d
  416bcc:	fcom   DWORD PTR [eax+0x7ef42ddc]
  416bd2:	push   ebp
  416bd3:	jae    0x416b7d
  416bd5:	fsub   QWORD PTR [ebx-0x51273e83]
  416bdb:	test   al,0x48
  416bdd:	mov    WORD PTR [ecx+edx*2+0x73],gs
  416be1:	test   al,0xd8
  416be3:	adc    esi,DWORD PTR [esi-0x6f]
  416be6:	popf   
  416be7:	std    
  416be8:	call   0xa873:0x550ac31c
  416bef:	fcom   QWORD PTR [ebx]
  416bf1:	push   esi
  416bf2:	rcr    eax,0x5e
  416bf5:	xchg   BYTE PTR [edx],bh
  416bf7:	(bad)  
  416bf8:	js     0x416c30
  416bfa:	jae    0x416ba4
  416bfc:	fcom   QWORD PTR [ebx]
  416bfe:	push   ss
  416bff:	rcr    eax,0xbe
  416c02:	push   0x70a8c43
  416c07:	jae    0x416bb1
  416c09:	fdivr  QWORD PTR [ecx+0x72]
  416c0c:	rcr    eax,0xbe
  416c0f:	test   al,0x48
  416c11:	mov    WORD PTR [edx],cs
  416c13:	push   ebp
  416c14:	jae    0x416bbe
  416c16:	fcom   QWORD PTR [ebx]
  416c18:	jbe    0x416bfb
  416c1a:	fdivr  DWORD PTR [esi+0x6ffe6648]
  416c20:	cmp    DWORD PTR [ebx+ecx*8],ebx
  416c23:	fcom   QWORD PTR [ebx]
  416c25:	jbe    0x416bea
  416c27:	fdivr  DWORD PTR [esi+0xa8068a8]
  416c2d:	push   ebp
  416c2e:	jno    0x416bd8
  416c30:	fcom   QWORD PTR [ebx]
  416c32:	retf   0xd8c5
  416c35:	mov    esi,0xa8c48a8
  416c3a:	push   ebp
  416c3b:	jae    0x416be5
  416c3d:	fcom   QWORD PTR [ebx]
  416c3f:	jbe    0x416c02
  416c41:	cwde   
  416c42:	mov    esi,0xa8c88a8
  416c47:	push   ebp
  416c48:	jae    0x416bf2
  416c4a:	fcom   QWORD PTR [ebx]
  416c4c:	jbe    0x416c0f
  416c4e:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416c54:	push   ebp
  416c55:	jae    0x416bff
  416c57:	fcom   QWORD PTR [ebx]
  416c59:	jbe    0x416c1c
  416c5b:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416c61:	push   ebp
  416c62:	jae    0x416c0c
  416c64:	fcom   QWORD PTR [ebx]
  416c66:	jbe    0x416c29
  416c68:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416c6e:	push   ebp
  416c6f:	jae    0x416c19
  416c71:	fcom   QWORD PTR [ebx]
  416c73:	jbe    0x416c36
  416c75:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416c7b:	push   ebp
  416c7c:	jae    0x416c26
  416c7e:	fcom   QWORD PTR [ebx]
  416c80:	jbe    0x416c43
  416c82:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416c88:	push   ebp
  416c89:	jae    0x416c33
  416c8b:	fcom   QWORD PTR [ebx]
  416c8d:	jbe    0x416c50
  416c8f:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416c95:	push   ebp
  416c96:	jae    0x416c40
  416c98:	fcom   QWORD PTR [ebx]
  416c9a:	jbe    0x416c5d
  416c9c:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416ca2:	push   ebp
  416ca3:	jae    0x416c4d
  416ca5:	fcom   QWORD PTR [ebx]
  416ca7:	jbe    0x416c6a
  416ca9:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416caf:	push   ebp
  416cb0:	jae    0x416c5a
  416cb2:	fcom   QWORD PTR [ebx]
  416cb4:	jbe    0x416c77
  416cb6:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416cbc:	push   ebp
  416cbd:	jae    0x416c67
  416cbf:	fcom   QWORD PTR [ebx]
  416cc1:	jbe    0x416c84
  416cc3:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416cc9:	push   ebp
  416cca:	jae    0x416c74
  416ccc:	fcom   QWORD PTR [ebx]
  416cce:	jbe    0x416c91
  416cd0:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416cd6:	push   ebp
  416cd7:	jae    0x416c81
  416cd9:	fcom   QWORD PTR [ebx]
  416cdb:	jbe    0x416c9e
  416cdd:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416ce3:	push   ebp
  416ce4:	jae    0x416c8e
  416ce6:	fcom   QWORD PTR [ebx]
  416ce8:	jbe    0x416cab
  416cea:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416cf0:	push   ebp
  416cf1:	jae    0x416c9b
  416cf3:	fcom   QWORD PTR [ebx]
  416cf5:	jbe    0x416cb8
  416cf7:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416cfd:	push   ebp
  416cfe:	jae    0x416ca8
  416d00:	fcom   QWORD PTR [ebx]
  416d02:	jbe    0x416cc5
  416d04:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416d0a:	push   ebp
  416d0b:	jae    0x416cb5
  416d0d:	fcom   QWORD PTR [ebx]
  416d0f:	jbe    0x416cd2
  416d11:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416d17:	push   ebp
  416d18:	jae    0x416cc2
  416d1a:	fcom   QWORD PTR [ebx]
  416d1c:	jbe    0x416cdf
  416d1e:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416d24:	push   ebp
  416d25:	jae    0x416ccf
  416d27:	fcom   QWORD PTR [ebx]
  416d29:	jbe    0x416cec
  416d2b:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416d31:	push   ebp
  416d32:	jae    0x416cdc
  416d34:	fcom   QWORD PTR [ebx]
  416d36:	jbe    0x416cf9
  416d38:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416d3e:	push   ebp
  416d3f:	jae    0x416ce9
  416d41:	fcom   QWORD PTR [ebx]
  416d43:	jbe    0x416d06
  416d45:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416d4b:	push   ebp
  416d4c:	jae    0x416cf6
  416d4e:	fcom   QWORD PTR [ebx]
  416d50:	jbe    0x416d13
  416d52:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416d58:	push   ebp
  416d59:	jae    0x416d03
  416d5b:	fcom   QWORD PTR [ebx]
  416d5d:	jbe    0x416d20
  416d5f:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416d65:	push   ebp
  416d66:	jae    0x416d10
  416d68:	fcom   QWORD PTR [ebx]
  416d6a:	jbe    0x416d2d
  416d6c:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416d72:	push   ebp
  416d73:	jae    0x416d1d
  416d75:	fcom   QWORD PTR [ebx]
  416d77:	jbe    0x416d3a
  416d79:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416d7f:	push   ebp
  416d80:	jae    0x416d2a
  416d82:	fcom   QWORD PTR [ebx]
  416d84:	jbe    0x416d47
  416d86:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416d8c:	push   ebp
  416d8d:	jae    0x416d37
  416d8f:	fcom   QWORD PTR [ebx]
  416d91:	jbe    0x416d54
  416d93:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416d99:	push   ebp
  416d9a:	jae    0x416d44
  416d9c:	fcom   QWORD PTR [ebx]
  416d9e:	jbe    0x416d61
  416da0:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416da6:	push   ebp
  416da7:	jae    0x416d51
  416da9:	fcom   QWORD PTR [ebx]
  416dab:	jbe    0x416d6e
  416dad:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416db3:	push   ebp
  416db4:	jae    0x416d5e
  416db6:	fcom   QWORD PTR [ebx]
  416db8:	jbe    0x416d7b
  416dba:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416dc0:	push   ebp
  416dc1:	jae    0x416d6b
  416dc3:	fcom   QWORD PTR [ebx]
  416dc5:	jbe    0x416d88
  416dc7:	fdivr  DWORD PTR [esi+0xa8c48a8]
  416dcd:	(bad)  
  416dce:	cmp    eax,0x763cdca3
  416dd3:	ror    eax,0xbe
  416dd6:	test   al,0x62
  416dd8:	shl    BYTE PTR cs:[ecx],1
  416ddb:	into   
  416ddc:	out    0xef,eax
  416dde:	add    DWORD PTR [ebp-0x6],ebx
  416de1:	in     eax,0x51
  416de3:	sbb    eax,0xc438ada
  416de8:	xor    BYTE PTR [edi+ebp*2+0x0],0x31
  416ded:	cli    
  416dee:	xor    DWORD PTR [esi+0x23],esp
  416df1:	or     bh,ch
  416df3:	enter  0x3caf,0x3f
  416df7:	or     ah,0xa2
  416dfa:	cmp    DWORD PTR [ebx+0x5df34bd3],0x207a162f
  416e04:	pop    esp
  416e05:	add    al,0x8b
  416e07:	loope  0x416dea
  416e09:	xchg   bl,ch
  416e0b:	dec    edx
  416e0c:	ror    BYTE PTR [ebp-0x73],0xef
  416e10:	jg     0x416da5
  416e12:	sub    eax,0xa72c37c5
  416e17:	mov    edi,0x3a587d06
  416e1c:	out    dx,eax
  416e1d:	dec    edi
  416e1e:	int3   
  416e1f:	mov    WORD PTR [esi+0x2d13e26b],es
  416e25:	add    esi,DWORD PTR [eax-0x60]
  416e28:	mov    edx,0xcf4b8995
  416e2d:	xchg   edi,eax
  416e2e:	pop    edx
  416e2f:	(bad)  
  416e30:	in     al,dx
  416e31:	popf   
  416e32:	dec    esp
  416e33:	int3   
  416e34:	push   DWORD PTR [ebx+0x17]
  416e37:	adc    eax,0x944e6e33
  416e3c:	outs   dx,DWORD PTR ds:[esi]
  416e3d:	dec    edx
  416e3e:	aam    0x19
  416e40:	xchg   esp,eax
  416e41:	adc    al,BYTE PTR [eax+0x16]
  416e44:	or     dl,BYTE PTR [esi+0x37]
  416e47:	push   ebp
  416e48:	push   ebx
  416e49:	cmp    al,0x25
  416e4b:	retf   0x9533
  416e4e:	jmp    0x4d3ec615
  416e53:	mov    eax,0xd8aa5c84
  416e58:	mov    ds,WORD PTR [esi]
  416e5a:	adc    cl,BYTE PTR [esi+0x252134c0]
  416e60:	daa    
  416e61:	dec    ecx
  416e62:	loope  0x416ea6
  416e64:	enter  0x5b84,0x7f
  416e68:	frstor [eax+0x5d]
  416e6b:	mov    dl,0x9a
  416e6d:	xor    DWORD PTR [ebp+0x67771299],ecx
  416e73:	mov    ebx,0xa6b9c426
  416e78:	pushf  
  416e79:	and    BYTE PTR [edi-0x49],0xdc
  416e7d:	in     eax,0x7a
  416e7f:	and    ecx,0xffffffe4
  416e82:	mov    esi,0x1920febd
  416e87:	les    edx,FWORD PTR [ebp-0x53]
  416e8a:	call   0x2f526ea8
  416e8f:	in     eax,dx
  416e90:	(bad)  
  416e91:	sahf   
  416e92:	sbb    BYTE PTR [ebx+0x5eafd00],al
  416e98:	push   ss
  416e99:	jno    0x416eda
  416e9b:	inc    ebp
  416e9c:	pop    edx
  416e9d:	out    dx,eax
  416e9e:	loop   0x416e49
  416ea0:	adc    al,0x70
  416ea2:	(bad)  
  416ea3:	inc    ebp
  416ea4:	aad    0xd5
  416ea6:	pop    edx
  416ea7:	dec    ebp
  416ea8:	scas   al,BYTE PTR es:[edi]
  416ea9:	mov    eax,gs:0x70eb43e9
  416eaf:	scas   eax,DWORD PTR es:[edi]
  416eb0:	xor    BYTE PTR [ecx],0x36
  416eb3:	inc    eax
  416eb4:	test   BYTE PTR [eax],ah
  416eb6:	adc    eax,0x3a30fdd5
  416ebb:	cmp    esi,eax
  416ebd:	sbb    eax,0x86d9f8e5
  416ec2:	lods   eax,DWORD PTR ss:[esi]
  416ec4:	fbld   TBYTE PTR ds:[edx+0x3a]
  416ec8:	ds test eax,0x6c9b0cf1
  416ece:	in     al,0x62
  416ed0:	nop
  416ed1:	stos   DWORD PTR es:[edi],eax
  416ed2:	pushf  
  416ed3:	popf   
  416ed4:	jae    0x416ed6
  416ed6:	ja     0x416f03
  416ed8:	fidivr DWORD PTR [esi+0xd]
  416edb:	test   BYTE PTR [esi-0x11],0xf5
  416edf:	jae    0x416f43
  416ee1:	neg    bh
  416ee3:	jmp    FWORD PTR gs:[edi-0x3e1c8d09]
  416eea:	cmp    eax,0xf16cc38
  416eef:	int    0xe3
  416ef1:	adc    al,0xb8
  416ef3:	mov    edi,0xca4dc151
  416ef8:	in     eax,0x1a
  416efa:	or     eax,0x86ac7790
  416eff:	add    eax,0xeebefeb6
  416f04:	or     al,0x26
  416f06:	scas   eax,DWORD PTR es:[edi]
  416f07:	cmp    BYTE PTR [eax+0x343084f0],bl
  416f0d:	jmp    0x485:0xbb3085de
  416f14:	mov    eax,0x79a59eca
  416f19:	cmp    BYTE PTR [edx-0x3737fccb],cl
  416f1f:	mov    esi,0xf1a9dfdd
  416f24:	xchg   ebp,eax
  416f25:	cdq    
  416f26:	push   ds
  416f27:	pusha  
  416f28:	lock add DWORD PTR [si+0x66b],eax
  416f2e:	add    eax,0x95ec8b04
  416f33:	pushf  
  416f34:	pop    eax
  416f35:	inc    esp
  416f36:	cmp    al,0x3
  416f38:	test   BYTE PTR [edx+0x1b],dh
  416f3b:	loope  0x416f84
  416f3d:	ret    
  416f3e:	std    
  416f3f:	mov    fs,WORD PTR [eax]
  416f41:	or     al,dl
  416f43:	jne    0x416ef8
  416f45:	push   eax
  416f46:	test   ebx,edx
  416f48:	iret   
  416f49:	xor    al,0xfd
  416f4b:	and    al,0xbc
  416f4d:	ficom  WORD PTR [eax-0x7]
  416f50:	cmp    al,0x6e
  416f52:	fcmove st,st(6)
  416f54:	scas   al,BYTE PTR es:[edi]
  416f55:	mov    esp,0x6f84fe41
  416f5a:	xchg   edi,eax
  416f5b:	inc    ebx
  416f5c:	fiadd  WORD PTR [ebp-0x559aa581]
  416f62:	dec    esp
  416f63:	pop    ss
  416f64:	cmp    al,0x9a
  416f66:	pop    eax
  416f67:	daa    
  416f68:	pop    eax
  416f69:	rcr    DWORD PTR [esp+esi*1-0x2946e8f7],cl
  416f70:	or     eax,0x1f45b55a
  416f75:	sub    al,0x65
  416f77:	iret   
  416f78:	or     BYTE PTR [ebx],dl
  416f7a:	or     DWORD PTR [edi],edx
  416f7c:	add    bh,BYTE PTR [eax+0x1b73dee2]
  416f82:	shr    BYTE PTR [ebx],0xb6
  416f85:	data16 mov BYTE PTR [eax],cl
  416f88:	lea    ecx,[esi]
  416f8a:	fidiv  WORD PTR [edi-0x41074bd2]
  416f90:	jge    0x416f34
  416f92:	fld    TBYTE PTR [ebp+0x4e]
  416f95:	ins    DWORD PTR es:[edi],dx
  416f96:	fisubr WORD PTR [eax+0x4c]
  416f99:	or     al,0x9c
  416f9b:	je     0x416ffd
  416f9d:	xor    esp,0xa56c0b5b
  416fa3:	inc    esi
  416fa4:	pushf  
  416fa5:	or     BYTE PTR [ecx],bl
  416fa7:	aad    0xc
  416fa9:	inc    eax
  416faa:	test   BYTE PTR [esi],bl
  416fac:	jb     0x416feb
  416fae:	pop    ebx
  416faf:	jnp    0x416fe7
  416fb1:	inc    esi
  416fb2:	imul   edx,DWORD PTR [edx+0x41],0xffffffda
  416fb6:	mov    al,ds:0x1f089e66
  416fbb:	sub    BYTE PTR [eax],0x2
  416fbe:	jmp    0x416fc1
  416fc0:	mov    ecx,0xa854a2c6
  416fc5:	lea    esp,[eax-0x709209a9]
  416fcb:	pop    DWORD PTR [edx+ecx*1+0x6dc1e211]
  416fd2:	mov    edx,0xb6c0b96f
  416fd7:	mov    DWORD PTR [edi+0x354aace3],ecx
  416fdd:	pop    edi
  416fde:	enter  0x5ab7,0xd5
  416fe2:	push   eax
  416fe3:	iret   
  416fe4:	sti    
  416fe5:	outs   dx,BYTE PTR fs:[esi]
  416fe7:	std    
  416fe8:	mov    ds:0xf2a18ae2,eax
  416fed:	sbb    DWORD PTR [edi+0x5adf986],edi
  416ff3:	les    ebx,FWORD PTR [ebx]
  416ff5:	fiadd  DWORD PTR [ebx-0x305358ac]
  416ffb:	mov    ch,0x70
  416ffd:	scas   eax,DWORD PTR es:[edi]
  416ffe:	dec    eax
  416fff:	dec    ebp
  417000:	sar    BYTE PTR [esi+0x686d9981],1
  417006:	cmp    edx,eax
  417008:	mov    ecx,0x7612da46
  41700d:	out    dx,eax
  41700e:	(bad)  
  41700f:	loopne 0x41705f
  417011:	pusha  
  417012:	test   al,0x3f
  417014:	ucomiss xmm3,DWORD PTR [edx+ebx*4-0x13]
  417019:	div    DWORD PTR [ebp+0x236359c5]
  41701f:	(bad)  
  417020:	fild   WORD PTR [ecx+0x65]
  417023:	in     eax,dx
  417024:	sbb    bl,0x39
  417027:	cli    
  417028:	xor    BYTE PTR [ecx-0x6e33b776],dh
  41702e:	clc    
  41702f:	cmp    BYTE PTR [esi+0x3e92c85e],dl
  417035:	in     eax,0x3c
  417037:	and    al,0x7
  417039:	adc    al,0x5d
  41703b:	cmp    cl,cl
  41703d:	retf   
  41703e:	stos   BYTE PTR es:[edi],al
  41703f:	fisubr WORD PTR [eax+0x59]
  417042:	sbb    al,0xf1
  417044:	stos   BYTE PTR es:[edi],al
  417045:	repnz loopne 0x417041
  417048:	cmp    DWORD PTR [edi+0x1e84b236],ecx
  41704e:	sbb    BYTE PTR ds:0xcd1fbdce,0xc
  417055:	shl    BYTE PTR [esi],1
  417057:	adc    eax,0x94e7cb04
  41705c:	push   esi
  41705d:	pop    ds
  41705e:	pusha  
  41705f:	jl     0x417067
  417061:	push   eax
  417062:	sub    al,0x66
  417064:	sbb    DWORD PTR [ebp+0x33c1ed3],0xf2b62e15
  41706e:	mov    ebp,0x9da53987
  417073:	mov    ebx,0xc07dbe16
  417078:	mov    eax,0xab429014
  41707d:	in     eax,dx
  41707e:	push   ecx
  41707f:	bound  esp,QWORD PTR [ebx]
  417081:	jg     0x4170cc
  417083:	and    BYTE PTR [esi-0x62],bh
  417086:	cs mov ?,ebp
  417089:	inc    ebp
  41708a:	xchg   edx,eax
  41708b:	lods   eax,DWORD PTR ds:[esi]
  41708c:	fwait
  41708d:	lds    eax,FWORD PTR [ecx+0x4f]
  417090:	push   eax
  417091:	and    BYTE PTR [edi-0x64653d94],0xa7
  417098:	xchg   edi,eax
  417099:	or     bl,BYTE PTR [eax+0xc]
  41709c:	mov    eax,0x4aa9cb59
  4170a1:	(bad)  
  4170a2:	into   
  4170a3:	mov    esp,0x413b2211
  4170a8:	mov    cl,0x2b
  4170aa:	xchg   BYTE PTR [ecx],bh
  4170ac:	cs push edi
  4170ae:	cld    
  4170af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170b0:	in     al,0xf5
  4170b2:	xor    eax,0xf2f40192
  4170b7:	leave  
  4170b8:	or     DWORD PTR [edi+ebp*2-0x2b],esp
  4170bc:	mov    edi,0xc3254eb
  4170c1:	cmp    ch,BYTE PTR ds:0x658cf31c
  4170c7:	sub    eax,0xf345651f
  4170cc:	in     al,dx
  4170cd:	(bad)  
  4170ce:	jg     0x4170c4
  4170d0:	xchg   edx,eax
  4170d1:	ror    esi,0xff
  4170d4:	inc    eax
  4170d5:	in     al,0xc1
  4170d7:	outs   dx,DWORD PTR ds:[esi]
  4170d8:	and    eax,0x35d07214
  4170dd:	pop    esi
  4170de:	mov    cl,0xc3
  4170e0:	dec    esp
  4170e1:	xchg   edi,eax
  4170e2:	jmp    0x671b:0x7e81a095
  4170e9:	dec    esp
  4170ea:	sub    bl,bl
  4170ec:	das    
  4170ed:	mov    ebp,ss
  4170ef:	sar    DWORD PTR [esi+0x7c],0x13
  4170f3:	or     eax,0xb6b3da39
  4170f8:	jns    0x4170b4
  4170fa:	push   es
  4170fb:	inc    edi
  4170fc:	inc    ecx
  4170fd:	mov    edx,0x48d10182
  417102:	xchg   ebp,eax
  417103:	push   edi
  417104:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417106:	test   eax,0x9fd8e9fe
  41710b:	fdiv   QWORD PTR [edx]
  41710d:	jns    0x4170d3
  41710f:	sbb    DWORD PTR [edx+0x685ba8d8],edx
  417115:	lock push edx
  417117:	sbb    DWORD PTR cs:0x43a71650,edx
  41711e:	shr    ch,cl
  417120:	cmp    edi,DWORD PTR [edi]
  417122:	jns    0x4170c6
  417124:	ror    cl,1
  417126:	mov    ecx,0x31c498cb
  41712b:	xchg   edi,eax
  41712c:	adc    BYTE PTR [esi-0x3e2c3519],0x5b
  417133:	mov    ah,0xe0
  417135:	mov    ecx,0x9670fc7d
  41713a:	push   ebp
  41713b:	dec    esi
  41713c:	mov    edx,0x47463dca
  417141:	mov    ch,0xd1
  417143:	xor    ebx,DWORD PTR [edx]
  417145:	sub    ebp,eax
  417147:	ja     0x417138
  417149:	mov    ds:0x4fc2bfe7,al
  41714e:	add    DWORD PTR [esi],ebp
  417150:	jmp    0x4170e0
  417152:	retf   0x34a5
  417155:	jl     0x4170ec
  417157:	mov    dl,0xf8
  417159:	sbb    DWORD PTR [esi],edi
  41715b:	fistp  WORD PTR [ebx+0x78b5278a]
  417161:	push   ss
  417162:	push   cs
  417163:	idiv   BYTE PTR [eax+0x21cd60fd]
  417169:	daa    
  41716a:	add    cl,BYTE PTR [ecx-0x12]
  41716d:	stos   BYTE PTR es:[edi],al
  41716e:	and    dh,BYTE PTR [ecx-0x5f]
  417171:	cmp    BYTE PTR [ebx],0x9d
  417174:	hlt    
  417175:	inc    edi
  417176:	loopne 0x417148
  417178:	rcl    BYTE PTR [esi-0x17],1
  41717b:	cmp    bl,BYTE PTR [bp+si]
  41717e:	sti    
  41717f:	push   ebp
  417180:	dec    edi
  417181:	in     al,0x7
  417183:	and    bh,dl
  417185:	test   al,0xce
  417187:	cmc    
  417188:	out    0xac,al
  41718a:	cmp    edx,DWORD PTR [ebx-0x602ff7ad]
  417190:	call   0x353c:0x8ba6a95b
  417197:	add    edi,DWORD PTR [ebx-0x93d0026]
  41719d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41719e:	es test al,0x85
  4171a1:	popf   
  4171a2:	jecxz  0x41716a
  4171a4:	(bad)  
  4171a5:	adc    dl,BYTE PTR [ebx]
  4171a7:	js     0x41716c
  4171a9:	push   es
  4171aa:	mov    ebp,0xd852b307
  4171af:	jle    0x417230
  4171b1:	mov    ch,0x57
  4171b3:	out    0x5f,eax
  4171b5:	cs (bad) 
  4171b8:	sub    esi,DWORD PTR [eax]
  4171ba:	cmp    dl,dl
  4171bc:	or     DWORD PTR [ebp-0x325eb46c],eax
  4171c2:	repz or BYTE PTR [edx+0x511412d2],0x2d
  4171ca:	xchg   ebp,eax
  4171cb:	dec    esi
  4171cc:	imul   ebp,DWORD PTR [esp+ebx*8-0x5d64a0d9],0x84d3cc36
  4171d7:	cdq    
  4171d8:	aaa    
  4171d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171da:	pop    edx
  4171db:	jno    0x417187
  4171dd:	and    BYTE PTR [edi-0x4d],0x15
  4171e1:	and    ebp,DWORD PTR [eax+edi*1-0x5a]
  4171e5:	addr16 hlt 
  4171e7:	inc    DWORD PTR [ecx+0x7e]
  4171ea:	pop    ebx
  4171eb:	lods   eax,DWORD PTR ds:[esi]
  4171ec:	cwde   
  4171ed:	adc    BYTE PTR [ebp+esi*4-0x17],0x95
  4171f2:	ja     0x41722a
  4171f4:	and    eax,DWORD PTR [ecx+0x24]
  4171f7:	enter  0x3a24,0x9f
  4171fb:	sbb    al,0xcb
  4171fd:	xchg   ebp,eax
  4171fe:	pop    ebx
  4171ff:	push   edx
  417200:	or     eax,0xa0a80b03
  417205:	pusha  
  417206:	aad    0x46
  417208:	in     al,0x36
  41720a:	cld    
  41720b:	dec    DWORD PTR [eax-0x76]
  41720e:	pop    ds
  41720f:	fwait
  417210:	pushf  
  417211:	sub    BYTE PTR [eax-0x75],dl
  417214:	loopne 0x4171e2
  417216:	hlt    
  417217:	sub    BYTE PTR [edi+0x291f6e73],0x26
  41721e:	or     dl,BYTE PTR [ebp+0x4a]
  417221:	xor    bl,BYTE PTR [ebx]
  417223:	cs js  0x417292
  417226:	pop    edi
  417227:	daa    
  417228:	jo     0x417297
  41722a:	(bad)  
  41722b:	cmp    esp,DWORD PTR [esi-0x6f]
  41722e:	adc    DWORD PTR [edx+0x5c3d02f0],ebp
  417234:	imul   edx,DWORD PTR [ebx+0x2bd79eef],0x7558e3eb
  41723e:	inc    ebx
  41723f:	das    
  417240:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417241:	cmc    
  417242:	push   eax
  417243:	mov    eax,?
  417245:	inc    ecx
  417246:	mov    bl,0x6f
  417248:	out    0x6e,eax
  41724a:	ret    0xe2c8
  41724d:	jne    0x41728f
  41724f:	sbb    ah,ah
  417251:	mov    ds:0x1c3790bd,al
  417256:	xchg   ebx,eax
  417257:	lods   al,BYTE PTR ds:[esi]
  417258:	mov    fs,WORD PTR [edx-0x693e75c2]
  41725e:	push   eax
  41725f:	mov    dh,0x88
  417261:	outs   dx,BYTE PTR ds:[esi]
  417262:	ins    BYTE PTR es:[edi],dx
  417263:	pop    es
  417264:	adc    bl,bl
  417266:	loopne 0x41729d
  417268:	add    dh,bl
  41726a:	mov    DWORD PTR [edi-0x5b8cd33f],esp
  417270:	mov    dl,BYTE PTR [esi+ebx*1+0x6]
  417274:	cs (bad) 
  417277:	adc    bl,0xe7
  41727a:	xchg   ecx,eax
  41727b:	dec    eax
  41727c:	scas   al,BYTE PTR es:[edi]
  41727d:	bound  edx,QWORD PTR [esi+eax*1-0x3ca534b6]
  417284:	pusha  
  417285:	pushf  
  417286:	stos   BYTE PTR es:[edi],al
  417287:	jmp    FWORD PTR [ebx+0x4dfcd138]
  41728d:	push   cs
  41728e:	xchg   esi,eax
  41728f:	xor    ah,BYTE PTR [eax+ebp*8+0x33398b55]
  417296:	retf   
  417297:	stos   BYTE PTR es:[edi],al
  417298:	push   ss
  417299:	pop    ebp
  41729a:	mov    ss,esp
  41729c:	pop    ecx
  41729d:	jmp    DWORD PTR [esi]
  41729f:	add    al,0x4d
  4172a1:	scas   al,BYTE PTR es:[edi]
  4172a2:	xchg   edx,eax
  4172a3:	pop    eax
  4172a5:	mov    esi,0x6150995f
  4172aa:	push   edi
  4172ab:	push   ss
  4172ac:	mov    eax,0x9af5f3ae
  4172b1:	mov    BYTE PTR [ebp+0x6e4d7cd0],ah
  4172b7:	stos   BYTE PTR es:[edi],al
  4172b8:	mov    BYTE PTR [ecx+0x3354130d],0x4b
  4172bf:	imul   ebx,DWORD PTR [edx+0x50359403],0xffffff91
  4172c6:	(bad)  [ebx]
  4172c8:	push   cs
  4172c9:	fdiv   QWORD PTR gs:[edx+0x1e3ab9f3]
  4172d0:	int    0x4c
  4172d2:	into   
  4172d3:	loopne 0x4172af
  4172d5:	inc    eax
  4172d6:	sub    eax,0xfc97d0ad
  4172db:	jns    0x4172bf
  4172dd:	mov    ds:0xcb14d1fa,al
  4172e2:	je     0x417306
  4172e4:	int3   
  4172e5:	mov    ecx,0xb5dd0a6c
  4172ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4172eb:	sub    esp,DWORD PTR [ebx+0x17]
  4172ee:	retf   
  4172ef:	(bad)  
  4172f0:	ja     0x4172de
  4172f2:	inc    ecx
  4172f3:	shl    BYTE PTR [eax],cl
  4172f5:	jnp    0x4172a5
  4172f7:	lods   eax,DWORD PTR ds:[esi]
  4172f8:	(bad)  
  4172f9:	adc    al,0x43
  4172fb:	dec    esi
  4172fc:	cmp    DWORD PTR [eax],esp
  4172fe:	test   eax,0x8a8876e6
  417303:	gs es stc 
  417306:	jle    0x4172ca
  417308:	push   ds
  417309:	cmp    esi,ecx
  41730b:	mov    dl,0xe2
  41730d:	xchg   edi,eax
  41730e:	outs   dx,BYTE PTR ds:[esi]
  41730f:	fisttp QWORD PTR [edx]
  417311:	stos   DWORD PTR es:[edi],eax
  417312:	in     al,0x48
  417314:	xor    al,BYTE PTR [eax+esi*2]
  417317:	xchg   ebp,eax
  417318:	inc    eax
  417319:	(bad)  [eax-0x74]
  41731c:	and    BYTE PTR [eax+0x49],bh
  41731f:	xor    al,0x18
  417321:	pop    edx
  417322:	sub    dh,bl
  417324:	and    DWORD PTR [esi-0x7eae4497],0xbc381a10
  41732e:	mov    ecx,DWORD PTR [ebx-0x7f]
  417331:	call   0xeb4d8ef9
  417336:	addr16 fcomp st(7)
  417339:	(bad)  
  41733a:	adc    esp,esp
  41733c:	scas   eax,DWORD PTR es:[edi]
  41733d:	rol    BYTE PTR [ecx],1
  41733f:	pop    edi
  417340:	call   DWORD PTR [esi-0x41]
  417343:	test   al,0xdd
  417345:	or     eax,0xdaefef01
  41734a:	sub    BYTE PTR [ebx-0x2a318c7c],bh
  417350:	gs scas al,BYTE PTR es:[edi]
  417352:	mov    ch,0x4e
  417354:	rcr    DWORD PTR [edi],0x9b
  417357:	add    eax,0xb72f7024
  41735c:	les    ebp,FWORD PTR [ebp-0x3cb59411]
  417362:	js     0x41735e
  417364:	es push esi
  417366:	adc    DWORD PTR [ecx-0x5859ebf7],esp
  41736c:	data16 sbb bh,BYTE PTR [esi+ebp*1+0x7524c991]
  417374:	jmp    0x788f8be4
  417379:	ret    
  41737a:	arpl   ax,cx
  41737c:	pop    edi
  41737d:	add    DWORD PTR [edx],ebp
  41737f:	xchg   ecx,eax
  417380:	mov    bh,0xf9
  417382:	sar    ebx,cl
  417384:	cmp    al,0xa8
  417386:	ret    
  417387:	push   es
  417388:	jno    0x4173da
  41738a:	xchg   ebp,eax
  41738b:	xor    bh,BYTE PTR [ecx-0x15]
  41738e:	push   ss
  41738f:	xor    DWORD PTR [esi+esi*1+0x6c4d0a2f],ebp
  417396:	dec    esp
  417397:	cmp    eax,0xa4897268
  41739c:	je     0x417374
  41739e:	and    BYTE PTR [ebx],dh
  4173a0:	lahf   
  4173a1:	fmul   QWORD PTR ds:0xc3b00768
  4173a7:	adc    esi,esp
  4173a9:	add    BYTE PTR [ecx],0x27
  4173ac:	jmp    0x41742a
  4173ae:	scas   al,BYTE PTR es:[edi]
  4173af:	in     al,0xff
  4173b1:	and    al,0x53
  4173b3:	or     dh,dh
  4173b5:	(bad)  
  4173b6:	cmp    al,0x71
  4173b8:	mov    eax,0x5a0ae986
  4173bd:	mov    ecx,DWORD PTR [ebp-0x1b]
  4173c0:	out    0xa9,al
  4173c2:	test   BYTE PTR [ebx+eax*4+0x672baf12],bh
  4173c9:	push   0xffffff98
  4173cb:	adc    BYTE PTR [ebx],bl
  4173cd:	ficom  WORD PTR [ecx]
  4173cf:	xchg   edx,eax
  4173d0:	mov    ecx,0x765e68be
  4173d5:	outs   dx,DWORD PTR ds:[esi]
  4173d6:	ja     0x4173a1
  4173d8:	into   
  4173d9:	mov    cl,BYTE PTR [ebx]
  4173db:	out    dx,al
  4173dc:	nop
  4173dd:	fisub  WORD PTR [edi]
  4173df:	cmp    dh,BYTE PTR [edi-0x1f41b2c8]
  4173e5:	push   0x63889856
  4173ea:	and    al,0x3f
  4173ec:	test   eax,0x7b70250
  4173f1:	outs   dx,BYTE PTR ds:[esi]
  4173f2:	mov    edx,0x6973adf2
  4173f7:	lea    ebp,[eax-0x7]
  4173fa:	and    al,0xec
  4173fc:	sahf   
  4173fd:	add    ebx,DWORD PTR [eax-0x4f54dedf]
  417403:	mov    al,ds:0xd7cd07c
  417408:	loope  0x4173c6
  41740a:	test   DWORD PTR [ebx-0x646dc0f9],edi
  417410:	leave  
  417411:	jmp    0x417416
  417413:	cli    
  417414:	or     cl,BYTE PTR [edx]
  417416:	inc    ebx
  417417:	out    dx,eax
  417418:	cmp    al,0x25
  41741a:	fidiv  DWORD PTR [eax+ebx*2+0x6e]
  41741e:	sub    BYTE PTR [edx],ch
  417420:	imul   edx,DWORD PTR [ebx+0x31080c76],0xffffffff
  417427:	ds xor al,0x29
  41742a:	les    edx,FWORD PTR [esi-0xa93b72b]
  417430:	mov    eax,ds:0x30bcd89d
  417435:	mov    edi,0x69ee0945
  41743a:	push   0xd402f84f
  41743f:	push   edi
  417440:	jbe    0x4173ce
  417442:	rol    BYTE PTR cs:[esi+0x798d63c2],1
  417449:	push   cs
  41744a:	pop    es
  41744b:	call   0x135de4ec
  417450:	pop    esi
  417451:	push   edi
  417452:	dec    edx
  417453:	ret    
  417454:	lods   eax,DWORD PTR ds:[esi]
  417455:	inc    eax
  417456:	popa   
  417457:	sub    ecx,DWORD PTR [ebp-0x64]
  41745a:	into   
  41745b:	comiss xmm6,DWORD PTR [ebp+0xab763c2]
  417462:	gs leave 
  417464:	adc    ch,cl
  417466:	fucom  st(0)
  417468:	lods   al,BYTE PTR es:[esi]
  41746a:	mov    BYTE PTR [ecx],dh
  41746c:	shl    esp,1
  41746e:	rcr    ah,cl
  417470:	jae    0x4174c2
  417472:	mov    esp,?
  417474:	iret   
  417475:	call   0xf4c200e8
  41747a:	mov    dh,0xf
  41747c:	and    bl,BYTE PTR [eax+ebx*2]
  41747f:	inc    esi
  417480:	pop    esi
  417481:	pop    ebx
  417482:	fsub   st,st(1)
  417484:	test   ebp,edx
  417486:	dec    ebp
  417487:	nop
  417488:	test   esi,edx
  41748a:	xchg   dl,al
  41748c:	sbb    ebp,DWORD PTR [edi]
  41748e:	cld    
  41748f:	ins    BYTE PTR es:[edi],dx
  417490:	push   edi
  417491:	loope  0x4174a5
  417493:	fstp   TBYTE PTR [eax]
  417495:	loopne 0x417483
  417497:	and    dh,BYTE PTR [edi-0x23087ced]
  41749d:	fwait
  41749e:	cwde   
  41749f:	inc    esi
  4174a0:	add    bh,dh
  4174a2:	sti    
  4174a3:	jno    0x417466
  4174a5:	push   ebx
  4174a6:	mov    ah,0x56
  4174a8:	fbstp  TBYTE PTR [eax-0x11]
  4174ab:	xor    eax,0x38a474f4
  4174b0:	fisubr DWORD PTR [ebx]
  4174b2:	mov    esi,DWORD PTR [edi+0x573ab307]
  4174b8:	lds    esp,FWORD PTR [ebp-0x43]
  4174bb:	pop    ebp
  4174bc:	mov    cs,esp
  4174be:	jmp    0x417461
  4174c0:	data16 mov cl,0x2b
  4174c3:	bound  edi,QWORD PTR [esi+0x30]
  4174c6:	lock or eax,0x5a3a1798
  4174cc:	add    al,0xf3
  4174ce:	sub    al,0xd7
  4174d0:	das    
  4174d1:	jl     0x4174fc
  4174d3:	std    
  4174d4:	push   es
  4174d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4174d6:	loop   0x4174ac
  4174d8:	js     0x4174e9
  4174da:	xchg   ebx,eax
  4174db:	repz lea ebp,[ecx-0x7b859b3e]
  4174e2:	mov    ebp,DWORD PTR [esi+0x5dbeb3fe]
  4174e8:	or     eax,0x882da33f
  4174ed:	sub    eax,0x85924d34
  4174f2:	lods   eax,DWORD PTR ds:[esi]
  4174f3:	jle    0x417558
  4174f5:	pop    edx
  4174f6:	(bad)  
  4174f7:	push   0xa2ad6b65
  4174fc:	lahf   
  4174fd:	inc    eax
  4174fe:	mov    ecx,0xa5c477e8
  417503:	xor    ah,cl
  417505:	mov    ch,0xc7
  417507:	test   ebx,0xa41a22b5
  41750d:	into   
  41750e:	sbb    esp,ebp
  417510:	mov    dl,ch
  417512:	loope  0x417557
  417514:	iret   
  417515:	push   esp
  417516:	ror    BYTE PTR [edx],0xeb
  417519:	in     eax,dx
  41751a:	mov    bh,0x1e
  41751c:	(bad)  
  41751d:	jae    0x41757a
  41751f:	mov    eax,ds:0xb923fcb9
  417524:	xchg   esi,eax
  417525:	retf   0x8989
  417528:	push   cs
  417529:	mov    edi,0x216fa0e6
  41752e:	sub    eax,0xdbc8e927
  417533:	arpl   WORD PTR [ebp-0x17],bx
  417536:	stc    
  417537:	xchg   esi,eax
  417538:	sub    bh,BYTE PTR [edi-0x58341556]
  41753e:	sar    ebp,cl
  417540:	push   ecx
  417541:	sbb    DWORD PTR [eax+eax*2+0xe39b3a7],0xf3e33d1f
  41754c:	sub    WORD PTR [esi-0x1],0x2a52
  417552:	cmp    eax,ebx
  417554:	bound  esp,QWORD PTR [edi+0x4a]
  417557:	push   cs
  417558:	inc    esi
  417559:	jmp    0xb228c852
  41755e:	lahf   
  41755f:	lahf   
  417560:	bswap  ecx
  417562:	mov    dl,0xbf
  417564:	test   eax,0xfab772c3
  417569:	out    dx,eax
  41756a:	mov    dh,0x2a
  41756c:	push   ebx
  41756d:	(bad)  
  41756f:	int3   
  417570:	mov    eax,0x776385de
  417575:	leave  
  417576:	je     0x417568
  417578:	inc    ebx
  417579:	jp     0x4175b5
  41757b:	aad    0x2b
  41757d:	pop    esp
  41757e:	xor    DWORD PTR [esp+ebp*1+0x12a77338],0xffffffcb
  417586:	mov    dl,0x49
  417588:	fdivr  st,st(0)
  41758a:	call   0x8af4:0x1fc01cc2
  417591:	ins    BYTE PTR es:[edi],dx
  417592:	adc    ch,bh
  417594:	mov    ds:0x7773f63,eax
  417599:	sbb    BYTE PTR [esp+ebx*4-0x79],dh
  41759d:	hlt    
  41759e:	pop    esp
  41759f:	push   ss
  4175a0:	xor    DWORD PTR [ebp-0x68],ecx
  4175a3:	mov    al,ds:0xea2874bb
  4175a8:	pop    ebp
  4175a9:	stos   BYTE PTR es:[edi],al
  4175aa:	xchg   esi,eax
  4175ab:	mov    ebx,0xb34261c6
  4175b0:	shr    DWORD PTR [edx+eax*8+0x40],1
  4175b4:	jl     0x41757c
  4175b6:	fwait
  4175b7:	loope  0x417576
  4175b9:	dec    edx
  4175ba:	aad    0xfc
  4175bc:	mov    dh,0x66
  4175be:	add    esi,DWORD PTR [ecx+0x6a8de01b]
  4175c4:	xchg   ebp,eax
  4175c5:	imul   eax,DWORD PTR [edx+0x35],0x1242352c
  4175cc:	data16 daa 
  4175ce:	add    edx,edi
  4175d0:	push   es
  4175d1:	dec    DWORD PTR [edi-0x5a184d75]
  4175d7:	icebp  
  4175d8:	push   esp
  4175d9:	(bad)  
  4175da:	mov    ch,0x9a
  4175dc:	imul   esi,ebx,0xffffffef
  4175df:	or     ax,0x2c2e
  4175e3:	adc    BYTE PTR [ebp+0x52bb2676],bh
  4175e9:	jge    0x4175d4
  4175eb:	das    
  4175ec:	outs   dx,BYTE PTR ds:[esi]
  4175ed:	pop    edi
  4175ee:	aad    0xa3
  4175f0:	mov    ds:0x74858152,al
  4175f5:	popa   
  4175f6:	jns    0x41761d
  4175f8:	dec    ebx
  4175f9:	iret   
  4175fa:	adc    eax,0xd7c423dd
  4175ff:	pop    esi
  417600:	mov    al,BYTE PTR [ecx+0x5a]
  417603:	ins    DWORD PTR es:[edi],dx
  417604:	call   0x617cff44
  417609:	cmc    
  41760a:	pop    eax
  41760b:	push   ecx
  41760c:	pop    esp
  41760d:	add    al,0x7c
  41760f:	adc    DWORD PTR [esi-0x78923aa6],0x13a620cc
  417619:	(bad)  ds:0x8a53363b
  41761f:	popf   
  417620:	out    dx,eax
  417621:	and    al,0x2b
  417623:	adc    bl,BYTE PTR [eax+0x69]
  417626:	jo     0x41762e
  417628:	or     esi,DWORD PTR [ebp+0x4a9c25f]
  41762e:	das    
  41762f:	loope  0x4175d4
  417631:	push   es
  417632:	scas   al,BYTE PTR es:[edi]
  417633:	adc    al,BYTE PTR [ecx-0x3a]
  417636:	or     al,0xd2
  417638:	push   ss
  417639:	mov    dl,0xf1
  41763b:	mov    al,ds:0xbfe5da16
  417640:	imul   BYTE PTR [ebx+eiz*8+0x52258a78]
  417647:	ins    BYTE PTR es:[edi],dx
  417648:	add    eax,0x38e62931
  41764d:	mov    dh,0x82
  41764f:	pop    edx
  417650:	cmp    ch,BYTE PTR [edx]
  417652:	dec    eax
  417653:	adc    dh,dl
  417655:	(bad)  
  417656:	pop    esp
  417657:	stos   BYTE PTR es:[edi],al
  417658:	lds    ebp,FWORD PTR [edi-0x5b]
  41765b:	js     0x4176af
  41765d:	xor    DWORD PTR [ecx],0xffffffc1
  417660:	idiv   DWORD PTR [ecx+0x58a507af]
  417666:	adc    al,0xbe
  417668:	scas   al,BYTE PTR es:[edi]
  417669:	call   0xfa5:0x9c2d811
  417670:	cld    
  417671:	sub    al,0xeb
  417673:	retf   
  417674:	jbe    0x4175f8
  417676:	out    0xa7,eax
  417678:	aaa    
  417679:	jb     0x4176d4
  41767b:	fs inc esp
  41767d:	adc    BYTE PTR [esi],dh
  41767f:	adc    eax,DWORD PTR [edx+eax*1]
  417682:	mov    bl,0x8a
  417684:	xchg   ebx,eax
  417685:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417686:	out    dx,eax
  417687:	dec    ecx
  417688:	ret    
  417689:	cmp    eax,0x6bbaee93
  41768e:	sbb    bl,BYTE PTR [edx]
  417690:	cmp    eax,0x6d0b0547
  417695:	pop    ecx
  417696:	cmp    BYTE PTR ds:0x60c57e3e,cl
  41769c:	add    BYTE PTR [eax-0x649b1f39],al
  4176a2:	xchg   esp,eax
  4176a3:	ret    
  4176a4:	jo     0x417645
  4176a6:	sub    esp,DWORD PTR [eax]
  4176a8:	pop    esp
  4176a9:	xchg   bx,ax
  4176ac:	sahf   
  4176ad:	out    dx,al
  4176ae:	jecxz  0x4176ec
  4176b0:	adc    ecx,0xd9249a3
  4176b6:	push   ds
  4176b7:	popa   
  4176b8:	outs   dx,BYTE PTR ds:[esi]
  4176b9:	xor    DWORD PTR [edx+0x8],esi
  4176bc:	sub    al,0x1a
  4176be:	je     0x4176e6
  4176c0:	mov    edi,0xe7175792
  4176c5:	fimul  DWORD PTR [ebx]
  4176c7:	leave  
  4176c8:	jge    0x4176b3
  4176ca:	xor    al,0x68
  4176cc:	retf   
  4176cd:	into   
  4176ce:	and    DWORD PTR ds:0xe0aab0cd,eax
  4176d4:	add    ch,BYTE PTR [edx-0x7084f4b1]
  4176da:	or     BYTE PTR [ebp+eax*8+0xb],ch
  4176de:	ja     0x41775e
  4176e0:	fcomp  st(1)
  4176e2:	cmp    DWORD PTR [ecx+0x686b7e28],esi
  4176e8:	push   ss
  4176e9:	pop    eax
  4176ea:	mov    bl,0x50
  4176ec:	push   ebp
  4176ed:	ret    
  4176ee:	jp     0x41767c
  4176f0:	push   eax
  4176f1:	retf   
  4176f2:	sahf   
  4176f3:	clc    
  4176f4:	int3   
  4176f5:	xor    BYTE PTR [eax],dh
  4176f7:	xchg   ecx,eax
  4176f8:	test   BYTE PTR [eax-0x22970a93],bl
  4176fe:	xchg   edx,eax
  4176ff:	inc    eax
  417700:	adc    DWORD PTR [eax-0x77],ecx
  417703:	popf   
  417704:	ret    0xcda7
  417707:	test   DWORD PTR [esp+edi*4],edi
  41770a:	out    0x6b,eax
  41770c:	pop    ebp
  41770d:	bound  edx,QWORD PTR [edi+0x5d]
  417710:	push   0xeeda2f6f
  417715:	xchg   ebx,eax
  417716:	rcr    BYTE PTR [esi],cl
  417718:	mov    eax,0x878cdae0
  41771d:	jb     0x4176bd
  41771f:	cwde   
  417720:	xor    BYTE PTR [eax],0xfe
  417723:	and    al,0xcf
  417726:	outs   dx,BYTE PTR ds:[esi]
  417727:	dec    edx
  417728:	test   BYTE PTR [esi],bl
  41772a:	xchg   esi,eax
  41772b:	xchg   ebx,eax
  41772c:	into   
  41772d:	(bad)  
  41772e:	jb     0x4177a5
  417730:	xor    DWORD PTR [ebp-0x65],edi
  417733:	mov    ecx,0xf47599aa
  417738:	cli    
  417739:	dec    eax
  41773a:	lahf   
  41773b:	pop    DWORD PTR [edx-0x6e]
  41773e:	adc    bh,ah
  417740:	mov    dl,0xfc
  417742:	sbb    bh,BYTE PTR [edi+0x6ff33369]
  417748:	pop    eax
  417749:	cli    
  41774a:	repnz outs dx,DWORD PTR ds:[esi]
  41774c:	icebp  
  41774d:	in     al,dx
  41774e:	push   0x33
  417750:	jecxz  0x4177bc
  417752:	mov    dl,0x64
  417754:	(bad)  [esp+eiz*8-0x7f]
  417758:	bound  ecx,QWORD PTR [esi+0x34f1d493]
  41775e:	mov    ds:0xa66e191e,al
  417763:	enter  0x4a5,0x61
  417767:	loop   0x4177e1
  417769:	mov    DWORD PTR [ebx+0x72],eax
  41776c:	call   0xbae8:0xe0af47fc
  417773:	(bad)  
  417775:	imul   BYTE PTR [esi+0x48]
  417778:	jg     0x417713
  41777a:	jl     0x417753
  41777c:	aaa    
  41777d:	cmp    al,0xd6
  41777f:	lea    edx,[ebx+0x5b]
  417782:	xchg   ebx,eax
  417783:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417784:	lea    ecx,[esi+0x25]
  417787:	fwait
  417788:	mov    dl,0x60
  41778a:	push   ebx
  41778b:	fdivr  st(0),st
  41778d:	pop    ds
  41778e:	sub    BYTE PTR [eax],ah
  417790:	inc    ebx
  417791:	jmp    0x4177c5
  417793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417794:	fs xor ebx,eax
  417797:	mov    ds:0xff4edcaa,eax
  41779c:	inc    esp
  41779d:	mov    edi,ebp
  41779f:	in     eax,dx
  4177a0:	div    ebx
  4177a2:	hlt    
  4177a3:	xchg   esp,eax
  4177a4:	pop    ss
  4177a5:	push   0xdec3b74e
  4177aa:	mov    esp,0x7fabf67a
  4177af:	scas   eax,DWORD PTR es:[edi]
  4177b0:	dec    esp
  4177b1:	cdq    
  4177b2:	mov    ?,WORD PTR [ebp+0x69]
  4177b5:	ror    ebp,cl
  4177b7:	in     al,dx
  4177b8:	ror    BYTE PTR [eax-0x49],cl
  4177bb:	pop    es
  4177bc:	sbb    DWORD PTR [ecx+0x39],edi
  4177bf:	jl     0x41780f
  4177c1:	xchg   edx,eax
  4177c2:	mov    eax,0xc4f90ff8
  4177c7:	or     al,0x43
  4177c9:	out    dx,al
  4177ca:	gs retf 0xe3e3
  4177ce:	push   ebx
  4177cf:	mov    esp,0x841476c4
  4177d4:	imul   edi,ecx,0xffffffd2
  4177d7:	ret    0xcf35
  4177da:	mov    al,0x5b
  4177dc:	add    BYTE PTR [esi+ebx*4],bl
  4177df:	mov    ch,0x92
  4177e1:	pop    ecx
  4177e2:	sub    al,0x8a
  4177e4:	pop    eax
  4177e5:	mov    WORD PTR [esi+0x6704b779],es
  4177eb:	mov    al,0xf4
  4177ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177ee:	xor    eax,0x6a670a51
  4177f3:	cdq    
  4177f4:	inc    ebp
  4177f5:	hlt    
  4177f6:	mov    WORD PTR [ecx-0x62b295db],gs
  4177fc:	js     0x417789
  4177fe:	(bad)  
  4177ff:	out    dx,eax
  417800:	dec    edi
  417801:	mov    ?,esp
  417803:	xor    al,0xd4
  417805:	cmp    eax,0x2608f3d6
  41780a:	in     al,dx
  41780b:	mov    edi,0x60686439
  417810:	adc    al,0xff
  417812:	outs   dx,BYTE PTR ds:[esi]
  417813:	mov    eax,DWORD PTR [eax+0x1c3cdc8b]
  417819:	xor    al,dh
  41781b:	mov    BYTE PTR [ebp+0x5f],bh
  41781e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41781f:	dec    ebx
  417820:	cs jne 0x4177b1
  417823:	test   eax,0xfaae6768
  417828:	pop    es
  417829:	cmp    eax,0x8fc82bc1
  41782e:	xchg   ebp,eax
  41782f:	jp     0x417866
  417831:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417832:	and    al,0x6e
  417834:	dec    esp
  417835:	adc    al,0x74
  417837:	jecxz  0x4177f2
  417839:	inc    ecx
  41783a:	dec    eax
  41783b:	adc    BYTE PTR [ebx+0x7b6653ff],bl
  417841:	xchg   edi,eax
  417842:	jmp    0x914cc456
  417847:	xchg   ebp,eax
  417848:	sub    DWORD PTR [ebx],ebp
  41784a:	pop    esp
  41784b:	inc    ebx
  41784c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41784d:	pop    ebp
  41784e:	sbb    edi,DWORD PTR [ebx+eax*2+0x878669c]
  417855:	ds jne 0x4177f8
  417858:	adc    al,0x5c
  41785a:	ins    DWORD PTR es:[edi],dx
  41785b:	aam    0x28
  41785d:	push   es
  41785e:	fimul  DWORD PTR [edx]
  417860:	ds aam 0xa8
  417863:	test   al,0xbc
  417865:	cs push edi
  417867:	xchg   edx,eax
  417868:	sbb    BYTE PTR [ebp+0xaf05442],dl
  41786e:	jle    0x4178c7
  417870:	out    dx,eax
  417871:	xchg   DWORD PTR [ecx+0x4f],edi
  417874:	je     0x417817
  417876:	aad    0x97
  417878:	cmp    BYTE PTR [ebp-0x3c],cl
  41787b:	mov    ah,0xd7
  41787d:	ins    BYTE PTR es:[edi],dx
  41787e:	outs   dx,DWORD PTR ds:[esi]
  41787f:	mov    cl,0x12
  417881:	repz jne 0x4178d1
  417884:	iret   
  417885:	inc    ecx
  417886:	rol    DWORD PTR [edi-0x4584176a],0xf3
  41788d:	lahf   
  41788e:	or     al,0x30
  417890:	ficom  WORD PTR [ecx+0x71828fde]
  417896:	or     BYTE PTR [edx+0x1a8d89e1],ah
  41789c:	cmc    
  41789d:	cmp    edx,DWORD PTR [edi+0x48]
  4178a0:	mov    edi,0xe3bec2f5
  4178a5:	js     0x41789a
  4178a7:	dec    edx
  4178a8:	cmp    ah,dh
  4178aa:	mov    al,ds:0x184e129f
  4178af:	mov    al,ds:0xdfe8a30e
  4178b4:	mov    bl,0x24
  4178b6:	pushf  
  4178b7:	shr    DWORD PTR [edx+ebx*1+0x5a9d157f],0xb1
  4178bf:	inc    eax
  4178c0:	lds    eax,FWORD PTR [edx]
  4178c2:	in     eax,dx
  4178c3:	sbb    edi,DWORD PTR [ecx-0x212b6d3c]
  4178c9:	retf   
  4178ca:	ins    DWORD PTR es:[edi],dx
  4178cb:	mov    ebx,0x19649b1e
  4178d0:	pop    edx
  4178d1:	xor    dl,dl
  4178d3:	test   BYTE PTR [ebx],al
  4178d5:	cmp    eax,0x8094940b
  4178da:	int    0x80
  4178dc:	sub    BYTE PTR [ebp+0x34b32710],0xea
  4178e3:	pop    ecx
  4178e4:	dec    esp
  4178e5:	imul   eax,DWORD PTR [ebx+0xa],0xffffff8b
  4178e9:	dec    esi
  4178ea:	lods   eax,DWORD PTR ds:[esi]
  4178eb:	inc    edx
  4178ec:	pop    ss
  4178ed:	lods   eax,DWORD PTR ds:[esi]
  4178ee:	rcl    BYTE PTR [edx-0x22b138b7],cl
  4178f4:	idiv   DWORD PTR [eax-0x5bcd294b]
  4178fa:	jmp    0x45cf743c
  4178ff:	and    BYTE PTR [ecx-0x4a],al
  417902:	sub    esp,ecx
  417904:	das    
  417905:	sar    BYTE PTR [esi-0x35fa1144],cl
  41790b:	rol    dl,0x66
  41790e:	push   0x9397903a
  417913:	sub    eax,0x63a5d85c
  417918:	pop    ebx
  417919:	push   ss
  41791a:	xchg   DWORD PTR [edi],edi
  41791c:	sub    eax,0xe29167bf
  417921:	psubsw mm2,QWORD PTR [ebp+0x5eb5471f]
  417928:	std    
  417929:	jns    0x417974
  41792b:	imul   ebx,DWORD PTR [ebx-0x457f53ca],0x3f
  417932:	xor    BYTE PTR [ebx-0x44a3d2e8],ah
  417938:	(bad)  
  417939:	(bad)  
  41793a:	repz jno 0x41797d
  41793d:	ins    DWORD PTR es:[edi],dx
  41793e:	cmp    BYTE PTR [eax],dh
  417940:	cmc    
  417941:	pop    edi
  417942:	xor    ah,BYTE PTR [eax+0x5acf385b]
  417948:	jb     0x41792a
  41794a:	pop    ss
  41794b:	retf   0x1607
  41794e:	fdivrp st(3),st
  417950:	jae    0x4179cd
  417952:	enter  0x5e55,0xdc
  417956:	dec    ecx
  417957:	clc    
  417958:	loop   0x417927
  41795a:	inc    edi
  41795b:	in     eax,0x6a
  41795d:	cs inc eax
  41795f:	pushf  
  417960:	cdq    
  417961:	and    al,0x6d
  417963:	xor    ebx,DWORD PTR [edi-0x64]
  417966:	rcr    DWORD PTR [ecx],1
  417968:	popf   
  417969:	jbe    0x4179d0
  41796b:	js     0x4179e5
  41796d:	jge    0x417952
  41796f:	into   
  417970:	xchg   ebp,eax
  417971:	fdivrp st(5),st
  417973:	add    esi,edi
  417975:	rcr    BYTE PTR [edi+edi*2-0x8275b12],0x22
  41797d:	xor    al,0x2f
  41797f:	out    0x92,al
  417981:	dec    edi
  417982:	mov    cs,WORD PTR ds:0x6d686b29
  417988:	ins    DWORD PTR es:[edi],dx
  417989:	pop    esp
  41798a:	fs sbb al,bh
  41798d:	fimul  WORD PTR [esp+ecx*1-0x25]
  417991:	hlt    
  417992:	dec    ebp
  417993:	aam    0xe8
  417995:	into   
  417996:	loope  0x4179ea
  417998:	cdq    
  417999:	jmp    0xc366:0xd39aa8b4
  4179a0:	add    DWORD PTR [edx-0x26a6b35c],ebx
  4179a6:	and    eax,0x8ce4c134
  4179ab:	or     edi,DWORD PTR [ebp-0x3e]
  4179ae:	lahf   
  4179af:	push   es
  4179b0:	cmp    al,0x89
  4179b2:	aad    0x9d
  4179b4:	adc    esi,DWORD PTR [ebx]
  4179b6:	enter  0xc1d2,0xf6
  4179ba:	ins    DWORD PTR es:[edi],dx
  4179bb:	lds    esp,FWORD PTR [ecx]
  4179bd:	or     eax,0xf39b177a
  4179c2:	loope  0x4179d5
  4179c4:	push   0xffffffc2
  4179c6:	ins    DWORD PTR es:[edi],dx
  4179c7:	sub    eax,0x61af8e61
  4179cc:	sub    al,0xcd
  4179ce:	xor    al,0x7c
  4179d1:	dec    esp
  4179d2:	shl    DWORD PTR [esi],0x54
  4179d5:	pushf  
  4179d6:	push   edi
  4179d7:	push   eax
  4179d8:	xor    bl,BYTE PTR [eax]
  4179da:	mov    dl,0x57
  4179dc:	inc    ebp
  4179dd:	and    dh,BYTE PTR ds:0x81c0071
  4179e3:	in     al,dx
  4179e4:	cmc    
  4179e5:	lahf   
  4179e6:	enter  0x7942,0x4d
  4179ea:	pop    edx
  4179eb:	clc    
  4179ec:	sbb    ch,BYTE PTR ss:[ecx]
  4179ef:	dec    esp
  4179f0:	push   0xffffff82
  4179f2:	loope  0x41798c
  4179f4:	push   eax
  4179f5:	mov    al,ds:0xdf542c70
  4179fa:	jbe    0x417a34
  4179fc:	repz clc 
  4179fe:	xor    ebx,DWORD PTR [edi+0x43b09c18]
  417a04:	xchg   DWORD PTR [ebp+0x1b56b784],esp
  417a0a:	scas   al,BYTE PTR es:[edi]
  417a0b:	ins    BYTE PTR es:[edi],dx
  417a0c:	dec    edi
  417a0d:	xchg   ebp,eax
  417a0e:	daa    
  417a0f:	and    DWORD PTR [ebx],eax
  417a11:	mov    al,ds:0x9cb3be72
  417a16:	leave  
  417a17:	pop    ss
  417a18:	xchg   esp,eax
  417a19:	jo     0x4179b2
  417a1b:	mov    edi,0xa1ac91ad
  417a20:	(bad)  
  417a21:	pop    ebp
  417a22:	push   edx
  417a23:	fcom   DWORD PTR [esi+0x29]
  417a26:	popa   
  417a27:	add    eax,0xc5d2a4bf
  417a2c:	xchg   DWORD PTR [edi-0x53],esi
  417a2f:	pop    ecx
  417a30:	pop    eax
  417a31:	dec    esi
  417a32:	xchg   esp,eax
  417a33:	mov    al,0x8b
  417a35:	retf   
  417a36:	fidiv  DWORD PTR [ebx]
  417a38:	or     bl,dl
  417a3a:	inc    ecx
  417a3b:	add    BYTE PTR [ebx-0x2],al
  417a3e:	es jns 0x417a59
  417a41:	or     BYTE PTR [eax+0x7c],0x2a
  417a45:	mov    dh,0x17
  417a47:	call   DWORD PTR fs:[edx+0x15]
  417a4b:	xchg   ecx,eax
  417a4c:	enter  0xea61,0x8b
  417a50:	shl    bh,cl
  417a52:	jmp    0xc40a:0x90d59480
  417a59:	sti    
  417a5a:	dec    ebx
  417a5b:	fstp   QWORD PTR [eax-0x52]
  417a5e:	jmp    0x417a35
  417a60:	lahf   
  417a61:	sub    eax,0x11e9c676
  417a66:	push   ecx
  417a67:	sbb    dh,ah
  417a69:	mov    ah,0x30
  417a6b:	pop    edx
  417a6c:	pop    esi
  417a6e:	hlt    
  417a6f:	xor    bl,BYTE PTR [esi-0x15]
  417a72:	add    esp,DWORD PTR gs:[ecx-0x2e]
  417a76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417a78:	aas    
  417a79:	cmc    
  417a7a:	add    BYTE PTR [edi-0x2f],bh
  417a7d:	cdq    
  417a7e:	scas   eax,DWORD PTR es:[edi]
  417a7f:	xchg   esi,eax
  417a80:	cld    
  417a81:	cli    
  417a82:	sbb    BYTE PTR ds:0xa14f2bdc,ah
  417a88:	mov    ?,WORD PTR [eax+0x430f5219]
  417a8e:	xor    ebx,ecx
  417a90:	or     eax,0xc041ce17
  417a95:	add    dh,dh
  417a97:	and    DWORD PTR [esi-0x63],eax
  417a9a:	jmp    0x417a81
  417a9c:	hlt    
  417a9d:	daa    
  417a9e:	test   eax,0x7937301a
  417aa3:	fld    TBYTE PTR [ebx-0x3f83d08c]
  417aa9:	in     eax,dx
  417aaa:	js     0x417a2c
  417aac:	push   ecx
  417aad:	gs (bad) 
  417aaf:	out    dx,eax
  417ab0:	lahf   
  417ab1:	jmp    DWORD PTR [ebx+0x71]
  417ab4:	pop    ebp
  417ab5:	mov    ds:0x478099da,eax
  417aba:	rcr    cl,0xc7
  417abd:	mov    ds:0x90fec620,eax
  417ac2:	pusha  
  417ac3:	push   edi
  417ac4:	xchg   ebx,eax
  417ac5:	in     al,dx
  417ac6:	lahf   
  417ac7:	scas   eax,DWORD PTR es:[edi]
  417ac8:	and    ecx,DWORD PTR [esi-0x4b0f11a0]
  417ace:	ror    BYTE PTR [ecx+edi*8+0x63],cl
  417ad2:	daa    
  417ad3:	inc    ebx
  417ad4:	cmp    eax,0x5c67fd66
  417ad9:	js     0x417aea
  417adb:	gs jg  0x417b56
  417ade:	aas    
  417adf:	xchg   ebx,eax
  417ae0:	shl    BYTE PTR [ebp-0x3f030b1e],0xf6
  417ae7:	aad    0x36
  417ae9:	jns    0x417b34
  417aeb:	call   0xf3c:0xfeee353a
  417af2:	cmp    eax,0x1b0a58dd
  417af7:	bound  esi,QWORD PTR [ecx+ecx*4+0x74a9d4c0]
  417afe:	or     bl,BYTE PTR [ecx+0x1d]
  417b01:	cli    
  417b02:	outs   dx,DWORD PTR ds:[esi]
  417b03:	je     0x417adb
  417b05:	sub    BYTE PTR [eax],dh
  417b07:	or     eax,0x4f50c4fa
  417b0c:	jns    0x417af7
  417b0e:	xlat   BYTE PTR ds:[ebx]
  417b0f:	lock cmp eax,0x75d24c6
  417b15:	scas   eax,DWORD PTR es:[edi]
  417b16:	sbb    DWORD PTR [esi-0x12a1114f],edi
  417b1c:	adc    eax,0xaf35e5d4
  417b21:	jnp    0x417b3f
  417b23:	inc    ebp
  417b24:	push   edi
  417b25:	leave  
  417b26:	push   ebx
  417b27:	enter  0xeb6b,0xc2
  417b2b:	test   al,0x8f
  417b2d:	sub    DWORD PTR [edx+0x6da48a16],edx
  417b33:	ror    DWORD PTR [ebx],1
  417b35:	sti    
  417b36:	sbb    ah,ah
  417b38:	pop    edx
  417b39:	hlt    
  417b3a:	scas   al,BYTE PTR es:[edi]
  417b3b:	sbb    ah,BYTE PTR [edx+eax*1-0x3390fca3]
  417b42:	cmc    
  417b43:	test   ch,bl
  417b45:	cli    
  417b46:	xchg   edi,eax
  417b47:	dec    esi
  417b48:	xchg   ebx,eax
  417b49:	imul   esp,DWORD PTR [ebx+0x34e9e897],0xffffffe8
  417b50:	aaa    
  417b51:	xlat   BYTE PTR ds:[ebx]
  417b52:	outs   dx,DWORD PTR ds:[esi]
  417b53:	xor    ecx,DWORD PTR [eax+0x312937c9]
  417b59:	xchg   ebp,eax
  417b5a:	fidivr WORD PTR [edx+0x493f7d5e]
  417b60:	mov    al,ds:0x12185473
  417b65:	sub    DWORD PTR [edx+0xf],edi
  417b68:	fwait
  417b69:	(bad)  
  417b6a:	rcl    DWORD PTR [edi+0xb4ca398],0xa2
  417b71:	xor    edi,DWORD PTR [ecx+0x24293142]
  417b77:	sub    bh,0xfa
  417b7a:	lods   al,BYTE PTR ds:[esi]
  417b7b:	test   esp,esi
  417b7d:	xor    al,0xf1
  417b7f:	cdq    
  417b80:	jnp    0x417bf7
  417b82:	cmp    DWORD PTR [edi+ecx*4+0x7d],0xffffffaf
  417b87:	imul   edx,DWORD PTR [ecx-0x55342066],0x52
  417b8e:	fcomp  QWORD PTR [eax+0x5c]
  417b91:	xchg   esi,eax
  417b92:	or     ebx,DWORD PTR [esi+eiz*4]
  417b95:	into   
  417b96:	arpl   WORD PTR [edi+0x0],bx
  417b99:	out    0xb3,eax
  417b9b:	in     al,dx
  417b9c:	dec    edi
  417b9d:	arpl   WORD PTR [ecx+0x56],di
  417ba0:	mov    ch,0x70
  417ba2:	sbb    bh,BYTE PTR [ecx]
  417ba4:	inc    ebp
  417ba5:	xlat   BYTE PTR ds:[ebx]
  417ba6:	mov    ss,WORD PTR [ebx+0x18]
  417ba9:	jne    0x417b79
  417bab:	xor    al,0xd4
  417bad:	dec    ebp
  417bae:	inc    eax
  417baf:	ror    bl,1
  417bb1:	rol    ebx,1
  417bb3:	pop    esp
  417bb4:	scas   eax,DWORD PTR es:[edi]
  417bb5:	mov    edx,0xbf10724b
  417bba:	pop    es
  417bbb:	and    cl,BYTE PTR [ebp+0x2]
  417bbe:	jo     0x417c31
  417bc0:	lods   al,BYTE PTR ds:[esi]
  417bc1:	pop    ebp
  417bc2:	xor    DWORD PTR [esi-0x5eca1bf9],0x29
  417bc9:	add    eax,0xfa8a7f31
  417bce:	xlat   BYTE PTR ds:[ebx]
  417bcf:	sbb    bh,bh
  417bd1:	xchg   ecx,eax
  417bd2:	add    edi,DWORD PTR [esi+eax*4]
  417bd5:	sbb    al,0x9f
  417bd7:	inc    ebx
  417bd8:	add    DWORD PTR [eax-0x5f],ecx
  417bdb:	jecxz  0x417c3b
  417bdd:	inc    esp
  417bde:	sbb    eax,0xbbd0c2be
  417be3:	fcmovnu st,st(6)
  417be5:	or     eax,0xdb406f2d
  417bea:	cld    
  417beb:	push   0x7f
  417bed:	cmp    al,0xb0
  417bef:	inc    eax
  417bf0:	(bad)  
  417bf3:	jl     0x417c29
  417bf5:	jae    0x417bdb
  417bf7:	mov    edi,0x3d64e346
  417bfc:	push   esi
  417bfd:	lods   eax,DWORD PTR ds:[esi]
  417bfe:	cli    
  417bff:	inc    ebp
  417c00:	call   0x62171fa
  417c05:	mov    esi,0xc7d67d0a
  417c0a:	jb     0x417c50
  417c0c:	addr16 dec ecx
  417c0e:	hlt    
  417c0f:	push   ecx
  417c10:	lods   al,BYTE PTR ds:[esi]
  417c11:	dec    esp
  417c12:	xchg   eax,edi
  417c14:	std    
  417c15:	sub    dh,bh
  417c17:	rol    BYTE PTR [ebp+0x7a],1
  417c1a:	inc    esp
  417c1b:	push   0x6e
  417c1d:	mov    esp,0x3cacb7f4
  417c22:	cmp    edx,DWORD PTR [esp+ecx*4-0x7b]
  417c26:	fidiv  WORD PTR [esi+esi*8-0xf899630]
  417c2d:	int    0xba
  417c2f:	bound  edi,QWORD PTR [ecx]
  417c31:	pop    ebx
  417c32:	jae    0x417c66
  417c34:	std    
  417c35:	jmp    FWORD PTR [eax+0x68ec3b23]
  417c3b:	or     eax,DWORD PTR [ebx]
  417c3d:	fadd   QWORD PTR [edi-0x23]
  417c40:	dec    ebp
  417c41:	inc    ebx
  417c42:	mov    edi,0x19bb1887
  417c47:	jp     0x417caf
  417c49:	jle    0x417c7c
  417c4b:	lahf   
  417c4c:	jge    0x417be5
  417c4e:	dec    BYTE PTR [edx+ebx*4]
  417c51:	out    0x13,al
  417c53:	dec    DWORD PTR [eax+edi*8+0x7c]
  417c57:	push   0x1f08d0c3
  417c5c:	push   0xffffffe3
  417c5e:	lds    esp,FWORD PTR [edi+0x69]
  417c61:	sti    
  417c62:	jecxz  0x417cb9
  417c64:	pusha  
  417c65:	out    0x35,eax
  417c67:	add    BYTE PTR [ecx*2-0x6c9231a2],ah
  417c6e:	mov    ecx,0x60947b78
  417c73:	(bad)  
  417c74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c75:	and    al,0x6f
  417c77:	push   edi
  417c78:	out    0x4b,al
  417c7a:	fmulp  st(3),st
  417c7c:	ror    BYTE PTR [esi+0x6b],cl
  417c7f:	stos   BYTE PTR es:[edi],al
  417c80:	mov    ch,0x6
  417c82:	cmp    BYTE PTR [eax],cl
  417c84:	sub    BYTE PTR ds:[esi+0x79989215],al
  417c8b:	mov    WORD PTR [edi-0x4602bcf3],?
  417c91:	pop    ecx
  417c92:	mov    cl,0x16
  417c94:	mov    edx,0x7e26059b
  417c99:	push   ds
  417c9a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c9b:	shl    BYTE PTR [edi],cl
  417c9d:	or     dl,BYTE PTR [edi+0x5757ebfc]
  417ca3:	inc    ebx
  417ca4:	cli    
  417ca5:	jmp    0x371e7bc6
  417caa:	or     al,0x65
  417cac:	push   0x237898fa
  417cb1:	sti    
  417cb2:	and    ecx,DWORD PTR [esi+esi*8]
  417cb5:	test   edi,edx
  417cb7:	jge    0x417d33
  417cb9:	popa   
  417cba:	sbb    ebx,DWORD PTR [edx+0x3c128e38]
  417cc0:	cwde   
  417cc1:	data16 fwait
  417cc3:	and    bh,BYTE PTR [esi]
  417cc5:	sub    dl,BYTE PTR [ebp-0x5f]
  417cc8:	pushf  
  417cc9:	outs   dx,DWORD PTR ds:[esi]
  417cca:	mov    DWORD PTR ds:0xf938d33f,edi
  417cd0:	je     0x417d38
  417cd2:	adc    eax,0xcc79d33d
  417cd7:	out    dx,al
  417cd8:	repnz sahf 
  417cda:	loopne 0x417cac
  417cdc:	inc    edx
  417cdd:	das    
  417cde:	sub    al,0xfc
  417ce0:	sbb    eax,0x34eb3f5b
  417ce5:	push   ecx
  417ce6:	and    ebx,edi
  417ce8:	push   edi
  417ce9:	sbb    al,0xab
  417ceb:	ins    BYTE PTR es:[edi],dx
  417cec:	addr16 daa 
  417cee:	pusha  
  417cef:	in     eax,0x98
  417cf1:	jp     0x417d4c
  417cf3:	cld    
  417cf4:	xchg   esi,eax
  417cf6:	adc    BYTE PTR [edi],dh
  417cf8:	shr    al,1
  417cfa:	pop    ebx
  417cfb:	jo     0x417c95
  417cfd:	adc    eax,0x97389d7c
  417d02:	pop    edi
  417d03:	test   al,0x6a
  417d05:	and    eax,0x911d610c
  417d0a:	adc    bl,ah
  417d0c:	call   DWORD PTR [edi]
  417d0e:	push   edi
  417d0f:	cmp    ch,BYTE PTR [edx-0x20]
  417d12:	inc    edi
  417d13:	sahf   
  417d14:	dec    esp
  417d15:	xlat   BYTE PTR ds:[ebx]
  417d16:	bound  esi,QWORD PTR [ecx+0x4cc1066f]
  417d1c:	inc    dx
  417d1e:	aad    0xc2
  417d20:	xchg   DWORD PTR [ebp+edi*2+0x135ea894],esi
  417d27:	sub    edx,DWORD PTR [edx-0x20fc4343]
  417d2d:	test   eax,0x462aefa1
  417d32:	call   0x50ac:0x730a37a7
  417d39:	fistp  DWORD PTR [ebx]
  417d3b:	sub    BYTE PTR [ebp+0x7fd845d5],ch
  417d41:	add    al,0x8c
  417d43:	mov    dl,BYTE PTR ds:0x33495889
  417d49:	nop
  417d4a:	cs pop ebx
  417d4c:	mov    dh,0x8
  417d4e:	dec    BYTE PTR [edi]
  417d50:	stos   DWORD PTR es:[edi],eax
  417d51:	retf   0xb1c8
  417d54:	adc    dh,BYTE PTR [ecx+0x7d]
  417d57:	add    edx,DWORD PTR [ecx+0x2df1e501]
  417d5d:	jns    0x417d6f
  417d5f:	xchg   BYTE PTR [edx+esi*1-0x41206c73],dl
  417d66:	mov    edx,edi
  417d68:	push   ds
  417d69:	test   al,0xe3
  417d6b:	jb     0x417d0e
  417d6d:	add    DWORD PTR [bp+si-0x26],ecx
  417d71:	mov    eax,edx
  417d73:	pop    eax
  417d74:	test   BYTE PTR [eax-0x67],dl
  417d77:	loop   0x417d09
  417d79:	mov    edx,0x78dfadf
  417d7e:	cmp    eax,0xd0b39966
  417d83:	jo     0x417d0f
  417d85:	ficomp WORD PTR [ecx+0x6f45af3e]
  417d8b:	sbb    eax,0xd5d0f93b
  417d90:	lahf   
  417d91:	aam    0xfc
  417d93:	pop    ds
  417d94:	arpl   WORD PTR [eax],bp
  417d96:	fidiv  DWORD PTR [eax]
  417d98:	mov    eax,0x7a948dd0
  417d9d:	push   esi
  417d9e:	pop    edi
  417d9f:	push   edx
  417da0:	jb     0x417dca
  417da2:	jns    0x417de2
  417da4:	pop    edi
  417da5:	cmc    
  417da6:	mov    cl,0xe0
  417da8:	dec    ebp
  417da9:	jle    0x417de9
  417dab:	inc    ecx
  417dac:	outs   dx,DWORD PTR ds:[esi]
  417dad:	aaa    
  417dae:	push   ecx
  417daf:	jmp    0x9e235299
  417db4:	dec    edx
  417db5:	and    DWORD PTR [eax-0x80],esp
  417db8:	push   ds
  417db9:	sbb    al,0x51
  417dbb:	cmp    al,0xc8
  417dbd:	sbb    BYTE PTR [ebx+ebp*4],0x14
  417dc1:	out    0x94,al
  417dc3:	test   BYTE PTR [esi],bl
  417dc5:	(bad)  
  417dc6:	fstp   TBYTE PTR [esi+0x7b]
  417dc9:	std    
  417dca:	cld    
  417dcb:	xchg   ebx,eax
  417dcc:	repz imul eax,DWORD PTR [ebx+ebx*4+0x3c],0xffffffcc
  417dd2:	mov    eax,ds:0x99af7ea8
  417dd7:	repz fisttp DWORD PTR ds:0xd5a19de5
  417dde:	std    
  417ddf:	mov    edi,0x10c888ac
  417de4:	arpl   WORD PTR [edi+0x19],sp
  417de7:	mov    edx,0x74b8a4aa
  417dec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ded:	cmp    bl,dl
  417def:	or     BYTE PTR [edi+0x4e],dl
  417df2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417df3:	or     al,ch
  417df5:	jg     0x417dd0
  417df7:	pop    esi
  417df8:	loope  0x417de8
  417dfa:	adc    eax,0xa9b2d650
  417dff:	lods   al,BYTE PTR ds:[esi]
  417e00:	pop    esi
  417e02:	pop    edx
  417e03:	add    cl,BYTE PTR [ebx-0x2900038b]
  417e09:	mov    DWORD PTR [ebp-0x3c],eax
  417e0c:	cmp    DWORD PTR [ebp-0x3c],0x57
  417e10:	jne    0x417e1e
  417e12:	mov    edx,DWORD PTR [ebp-0x24]
  417e15:	push   edx
  417e16:	call   0x401000
  417e1b:	add    esp,0x4
  417e1e:	xor    eax,eax
  417e20:	pop    esi
  417e21:	mov    esp,ebp
  417e23:	pop    ebp
  417e24:	ret    
  417e25:	push   ebp
  417e26:	mov    ebp,esp
  417e28:	sub    esp,0x124
  417e2e:	xor    eax,eax
  417e30:	mov    esp,ebp
  417e32:	pop    ebp
  417e33:	ret    
  417e34:	push   ebp
  417e35:	mov    ebp,esp
  417e37:	sub    esp,0x2c
  417e3a:	push   ebx
  417e3b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  417e42:	mov    DWORD PTR [ebp-0xc],0x0
  417e49:	mov    DWORD PTR [ebp-0x20],0x1
  417e50:	mov    DWORD PTR [ebp-0x10],0x0
  417e57:	mov    eax,DWORD PTR [ebp+0xc]
  417e5a:	mov    DWORD PTR [ebp-0x1c],eax
  417e5d:	mov    DWORD PTR [ebp-0x18],0x0
  417e64:	mov    DWORD PTR [ebp-0x8],0x0
  417e6b:	mov    DWORD PTR [ebp-0x24],0x0
  417e72:	mov    ecx,DWORD PTR [ebp-0x4]
  417e75:	sub    ecx,0x1
  417e78:	mov    DWORD PTR [ebp-0x4],ecx
  417e7b:	mov    edx,DWORD PTR [ebp+0x8]
  417e7e:	mov    DWORD PTR [ebp-0x10],edx
  417e81:	mov    DWORD PTR [ebp-0x28],0x1
  417e88:	mov    eax,DWORD PTR [ebp-0x4]
  417e8b:	add    eax,0x2
  417e8e:	mov    DWORD PTR [ebp-0x4],eax
  417e91:	mov    ecx,DWORD PTR [ebp-0x1c]
  417e94:	add    ecx,DWORD PTR [ebp-0x4]
  417e97:	mov    dl,BYTE PTR [ecx+0x1]
  417e9a:	mov    BYTE PTR [ebp-0x11],dl
  417e9d:	mov    eax,DWORD PTR [ebp-0x4]
  417ea0:	add    eax,0x1
  417ea3:	mov    DWORD PTR [ebp-0x4],eax
  417ea6:	mov    cl,BYTE PTR [ebp-0x11]
  417ea9:	mov    BYTE PTR [ebp-0x29],cl
  417eac:	push   edx
  417ead:	pop    ebx
  417eae:	mov    ecx,ebx
  417eb0:	mov    edx,DWORD PTR [ebp-0x10]
  417eb3:	add    edx,DWORD PTR [ebp-0x4]
  417eb6:	mov    al,BYTE PTR [ebp-0x29]
  417eb9:	mov    BYTE PTR [edx],al
  417ebb:	mov    ebx,esi
  417ebd:	mov    ecx,DWORD PTR [ebp+0x14]
  417ec0:	add    ecx,DWORD PTR [ebp-0x8]
  417ec3:	movzx  edx,BYTE PTR [ecx]
  417ec6:	mov    DWORD PTR [ebp-0xc],edx
  417ec9:	mov    eax,DWORD PTR [ebp-0x8]
  417ecc:	mov    ecx,DWORD PTR [ebp-0x28]
  417ecf:	add    eax,ecx
  417ed1:	mov    DWORD PTR [ebp-0x8],eax
  417ed4:	mov    eax,DWORD PTR [ebp-0x8]
  417ed7:	shr    eax,0x3
  417eda:	mov    ecx,0x1
  417edf:	sub    ecx,eax
  417ee1:	mov    DWORD PTR [ebp-0x20],ecx
  417ee4:	shr    eax,cl
  417ee6:	mov    edx,DWORD PTR [ebp-0x8]
  417ee9:	imul   edx,DWORD PTR [ebp-0x20]
  417eed:	mov    DWORD PTR [ebp-0x8],edx
  417ef0:	shl    ebx,0x3
  417ef3:	mov    eax,DWORD PTR [ebp-0x10]
  417ef6:	add    eax,DWORD PTR [ebp-0x4]
  417ef9:	movzx  ecx,BYTE PTR [eax]
  417efc:	add    ecx,DWORD PTR [ebp-0xc]
  417eff:	mov    edx,DWORD PTR [ebp-0x10]
  417f02:	add    edx,DWORD PTR [ebp-0x4]
  417f05:	mov    BYTE PTR [edx],cl
  417f07:	mov    eax,DWORD PTR [ebp-0x4]
  417f0a:	sub    eax,0x2
  417f0d:	mov    DWORD PTR [ebp-0x4],eax
  417f10:	mov    ecx,DWORD PTR [ebp-0x4]
  417f13:	cmp    ecx,DWORD PTR [ebp+0x10]
  417f16:	jl     0x417e88
  417f1c:	pop    ebx
  417f1d:	mov    esp,ebp
  417f1f:	pop    ebp
  417f20:	ret    
  417f21:	int3   
  417f22:	jmp    DWORD PTR ds:0x418008
